
c0bff7634b380159a5472a834ef525fc1dbc0c5a7d1893b7ececd2a66abaeccf.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	or     eax,0x446c
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [eax],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [eax],ch
  401011:	imul   eax,DWORD PTR [eax+eax*1+0x54],0x6b
  401016:	inc    esp
  401017:	add    BYTE PTR [esi],ch
  401019:	jb     0x40105f
  40101b:	add    BYTE PTR [edi],ah
  40101d:	jo     0x401063
	...
  401033:	add    BYTE PTR [ebx-0x2e],dl
  401036:	adc    DWORD PTR [eax+0x0],edx
  401039:	add    BYTE PTR [eax],al
  40103b:	add    BYTE PTR [edx],al
  40103d:	add    BYTE PTR [eax],al
  40103f:	add    BYTE PTR [ecx],ah
  401041:	add    BYTE PTR [eax],al
  401043:	add    BYTE PTR [eax-0x77fffe02],cl
  401049:	repnz add DWORD PTR [eax],eax
	...
  401068:	dec    ebx
  401069:	add    BYTE PTR [ebp+0x0],al
  40106c:	push   edx
  40106d:	add    BYTE PTR [esi+0x0],cl
  401070:	inc    ebp
  401071:	add    BYTE PTR [eax+eax*1+0x33],cl
  401075:	add    BYTE PTR [edx],dh
  401077:	add    BYTE PTR [esi],ch
  401079:	add    BYTE PTR [eax+eax*1+0x4c],al
  40107d:	add    BYTE PTR [eax+eax*1+0x0],cl
  401081:	add    BYTE PTR [eax],al
  401083:	add    BYTE PTR [ebx+0x65],dl
  401086:	je     0x4010d8
  401088:	jb     0x4010f9
  40108a:	arpl   WORD PTR [ebp+0x73],sp
  40108d:	jae    0x4010d3
  40108f:	inc    ebp
  401090:	push   eax
  401091:	push   eax
  401092:	outs   dx,DWORD PTR ds:[esi]
  401093:	ins    BYTE PTR es:[edi],dx
  401094:	imul   esp,DWORD PTR [ebx+0x79],0x44dba000
  40109b:	add    al,dh
  40109d:	fild   DWORD PTR [eax+eax*1+0x1]
  4010a1:	add    BYTE PTR [ecx],al
  4010a3:	add    BYTE PTR [edx],al
  4010a5:	add    BYTE PTR [edx],al
  4010a7:	add    BYTE PTR [eax+eax*1],al
  4010aa:	or     BYTE PTR [eax],al
  4010ac:	adc    BYTE PTR [eax],al
  4010ae:	and    BYTE PTR [eax],al
  4010b0:	inc    eax
  4010b1:	add    BYTE PTR [eax],al
  4010b3:	add    DWORD PTR [eax],eax
  4010b5:	add    al,BYTE PTR [eax]
  4010b7:	add    al,0x0
  4010b9:	or     BYTE PTR [edx],dl
  4010bb:	add    BYTE PTR [edx],cl
  4010bd:	add    BYTE PTR [edx],al
  4010bf:	add    BYTE PTR [edx],al
  4010c1:	add    BYTE PTR [ecx],bh
  4010c3:	add    BYTE PTR [eax],al
  4010c5:	add    BYTE PTR [edx],al
  4010c7:	add    BYTE PTR [ecx],al
  4010c9:	add    BYTE PTR [eax+eax*1],al
  4010cc:	add    BYTE PTR [eax],al
  4010ce:	add    BYTE PTR [eax],al
  4010d0:	or     BYTE PTR [eax],al
  4010d2:	adc    BYTE PTR [eax],al
  4010d4:	and    BYTE PTR [eax],al
  4010d6:	inc    eax
  4010d7:	add    BYTE PTR [eax],al
  4010d9:	add    DWORD PTR [eax],eax
  4010db:	add    al,BYTE PTR [eax]
  4010dd:	add    al,0x0
  4010df:	or     al,dh
  4010e1:	repz repz repnz repnz repz add BYTE PTR [eax],al
  4010e8:	add    BYTE PTR [ebx],al
  4010ea:	add    al,BYTE PTR [eax]
  4010ec:	add    al,0x5
  4010ee:	add    DWORD PTR [eax],eax
  4010f0:	inc    eax
  4010f1:	push   es
  4010f2:	inc    edx
  4010f3:	add    BYTE PTR [edi],dl
  4010f5:	es inc edx
  4010f7:	add    BYTE PTR [ecx+0x24],dh
  4010fa:	inc    edx
  4010fb:	add    al,ah
  4010fd:	inc    BYTE PTR [ecx+0x0]
  401100:	xchg   ebp,eax
  401101:	add    eax,DWORD PTR [edx+0x0]
  401104:	push   ss
  401105:	or     BYTE PTR [eax],al
  401107:	add    al,dl
  401109:	pop    es
  40110a:	add    BYTE PTR [eax],al
  40110c:	rol    DWORD PTR [edi],1
  40110e:	add    BYTE PTR [eax],al
  401110:	clc    
  401111:	pop    es
  401112:	add    BYTE PTR [eax],al
  401114:	push   ss
  401115:	or     BYTE PTR [eax],al
  401117:	add    BYTE PTR [esi],dl
  401119:	or     BYTE PTR [eax],al
  40111b:	add    BYTE PTR [esi+0x8],ah
  40111e:	add    BYTE PTR [eax],al
  401120:	or     BYTE PTR gs:[eax],al
  401123:	add    BYTE PTR [edi+0x8],ah
  401126:	add    BYTE PTR [eax],al
  401128:	or     BYTE PTR [bx+si],al
  40112b:	add    BYTE PTR [eax+0x8],ch
  40112e:	add    BYTE PTR [eax],al
  401130:	push   0x68000008
  401135:	or     BYTE PTR [eax],al
  401137:	add    BYTE PTR [eax+0x8],ch
  40113a:	add    BYTE PTR [eax],al
  40113c:	ds ss es fs gs add BYTE PTR cs:[eax],al
  401144:	add    BYTE PTR [eax],dh
  401146:	add    BYTE PTR [eax],al
  401148:	add    BYTE PTR [eax],al
  40114a:	add    BYTE PTR [eax],al
  40114c:	das    
  40114d:	inc    ebp
  40114e:	pop    eax
  40114f:	push   eax
  401150:	dec    edi
  401151:	push   edx
  401152:	push   esp
  401153:	cmp    al,BYTE PTR [eax]
	...
  40115d:	add    BYTE PTR [eax],al
  40115f:	add    BYTE PTR [eax+0x0],bl
  401165:	add    al,0x0
  401167:	add    BYTE PTR [ecx+0x0],bl
  40116d:	add    eax,0xf80000
  401172:	add    BYTE PTR [eax],al
  401174:	add    BYTE PTR [eax],al
  401176:	add    BYTE PTR [eax],al
  401178:	cld    
  401179:	add    BYTE PTR [eax],al
  40117b:	add    BYTE PTR [eax],al
  40117d:	add    BYTE PTR [eax],al
  40117f:	add    BYTE PTR [edi],cl
  401181:	add    ebp,ebx
  401183:	add    BYTE PTR [eax],al
  401185:	add    BYTE PTR [eax],al
  401187:	add    dl,bh
  401189:	add    BYTE PTR [eax],al
  40118b:	add    BYTE PTR [eax],al
  40118d:	add    BYTE PTR [eax],al
  40118f:	add    BYTE PTR [edi],cl
  401191:	push   es
  401192:	add    BYTE PTR [eax],al
  401194:	add    BYTE PTR [eax],al
  401196:	add    BYTE PTR [eax],al
  401198:	cmc    
  401199:	add    BYTE PTR [eax],al
  40119b:	add    BYTE PTR [eax],al
  40119d:	add    BYTE PTR [eax],al
  40119f:	add    BYTE PTR [edi],cl
  4011a1:	mov    ds:0x0,al
  4011a6:	add    BYTE PTR [eax],al
  4011a8:	cdq    
  4011a9:	add    BYTE PTR [eax],al
  4011ab:	add    BYTE PTR [eax],al
  4011ad:	add    al,0x0
  4011af:	add    BYTE PTR [eax+0x0],bl
  4011b5:	add    eax,0x770f0000
  4011ba:	add    BYTE PTR [eax],al
  4011bc:	add    BYTE PTR [eax],al
  4011be:	add    BYTE PTR [eax],al
  4011c0:	f2xm1  
  4011c2:	add    BYTE PTR [eax],al
  4011c4:	add    BYTE PTR [eax],al
  4011c6:	add    BYTE PTR [eax],al
  4011c8:	fabs   
  4011ca:	add    BYTE PTR [eax],al
  4011cc:	add    BYTE PTR [eax],al
  4011ce:	add    BYTE PTR [eax],al
  4011d0:	fchs   
  4011d2:	add    BYTE PTR [eax],al
  4011d4:	add    BYTE PTR [eax],al
  4011d6:	add    BYTE PTR [eax],al
  4011d8:	fclex  
  4011db:	add    BYTE PTR [eax],al
  4011dd:	add    BYTE PTR [eax],al
  4011df:	add    dh,bl
  4011e1:	fld    DWORD PTR [eax]
  4011e3:	add    BYTE PTR [eax],al
  4011e5:	add    BYTE PTR [eax],al
  4011e7:	add    cl,bl
  4011e9:	inc    DWORD PTR [eax]
  4011eb:	add    BYTE PTR [eax],al
  4011ed:	add    BYTE PTR [eax],al
  4011ef:	add    cl,bl
  4011f1:	test   BYTE PTR [eax],0x0
  4011f4:	add    BYTE PTR [eax],al
  4011f6:	add    BYTE PTR [eax],al
  4011f8:	fdisi(8087 only) 
  4011fb:	add    BYTE PTR [eax],al
  4011fd:	add    BYTE PTR [eax],al
  4011ff:	add    BYTE PTR [edi],cl
  401201:	push   cs
  401202:	add    BYTE PTR [eax],al
  401204:	add    BYTE PTR [eax],al
  401206:	add    BYTE PTR [eax],al
  401208:	feni(8087 only) 
  40120b:	add    BYTE PTR [eax],al
  40120d:	add    BYTE PTR [eax],al
  40120f:	add    cl,bl
  401211:	test   DWORD PTR [eax],0x0
  401217:	add    BYTE PTR [ebx+0xe3db],bl
  40121d:	add    BYTE PTR [eax],al
  40121f:	add    cl,bl
  401221:	call   0x401226
  401226:	add    BYTE PTR [eax],al
  401228:	fldl2e 
  40122a:	add    BYTE PTR [eax],al
  40122c:	add    BYTE PTR [eax],al
  40122e:	add    BYTE PTR [eax],al
  401230:	fldl2t 
  401232:	add    BYTE PTR [eax],al
  401234:	add    BYTE PTR [eax],al
  401236:	add    BYTE PTR [eax],al
  401238:	fldlg2 
  40123a:	add    BYTE PTR [eax],al
  40123c:	add    BYTE PTR [eax],al
  40123e:	add    BYTE PTR [eax],al
  401240:	fldln2 
  401242:	add    BYTE PTR [eax],al
  401244:	add    BYTE PTR [eax],al
  401246:	add    BYTE PTR [eax],al
  401248:	fldpi  
  40124a:	add    BYTE PTR [eax],al
  40124c:	add    BYTE PTR [eax],al
  40124e:	add    BYTE PTR [eax],al
  401250:	fldz   
  401252:	add    BYTE PTR [eax],al
  401254:	add    BYTE PTR [eax],al
  401256:	add    BYTE PTR [eax],al
  401258:	fnclex 
  40125a:	add    BYTE PTR [eax],al
  40125c:	add    BYTE PTR [eax],al
  40125e:	add    BYTE PTR [eax],al
  401260:	fndisi(8087 only) 
  401262:	add    BYTE PTR [eax],al
  401264:	add    BYTE PTR [eax],al
  401266:	add    BYTE PTR [eax],al
  401268:	fneni(8087 only) 
  40126a:	add    BYTE PTR [eax],al
  40126c:	add    BYTE PTR [eax],al
  40126e:	add    BYTE PTR [eax],al
  401270:	fninit 
  401272:	add    BYTE PTR [eax],al
  401274:	add    BYTE PTR [eax],al
  401276:	add    BYTE PTR [eax],al
  401278:	fnop   
  40127a:	add    BYTE PTR [eax],al
  40127c:	add    BYTE PTR [eax],al
  40127e:	add    BYTE PTR [eax],al
  401280:	fpatan 
  401282:	add    BYTE PTR [eax],al
  401284:	add    BYTE PTR [eax],al
  401286:	add    BYTE PTR [eax],al
  401288:	fprem  
  40128a:	add    BYTE PTR [eax],al
  40128c:	add    BYTE PTR [eax],al
  40128e:	add    BYTE PTR [eax],al
  401290:	fprem1 
  401292:	add    BYTE PTR [eax],al
  401294:	add    BYTE PTR [eax],al
  401296:	add    BYTE PTR [eax],al
  401298:	fptan  
  40129a:	add    BYTE PTR [eax],al
  40129c:	add    BYTE PTR [eax],al
  40129e:	add    BYTE PTR [eax],al
  4012a0:	frndint 
  4012a2:	add    BYTE PTR [eax],al
  4012a4:	add    BYTE PTR [eax],al
  4012a6:	add    BYTE PTR [eax],al
  4012a8:	fscale 
  4012aa:	add    BYTE PTR [eax],al
  4012ac:	add    BYTE PTR [eax],al
  4012ae:	add    BYTE PTR [eax],al
  4012b0:	fnsetpm(287 only) 
  4012b2:	add    BYTE PTR [eax],al
  4012b4:	add    BYTE PTR [eax],al
  4012b6:	add    BYTE PTR [eax],al
  4012b8:	fsin   
  4012ba:	add    BYTE PTR [eax],al
  4012bc:	add    BYTE PTR [eax],al
  4012be:	add    BYTE PTR [eax],al
  4012c0:	fsincos 
  4012c2:	add    BYTE PTR [eax],al
  4012c4:	add    BYTE PTR [eax],al
  4012c6:	add    BYTE PTR [eax],al
  4012c8:	fsqrt  
  4012ca:	add    BYTE PTR [eax],al
  4012cc:	add    BYTE PTR [eax],al
  4012ce:	add    BYTE PTR [eax],al
  4012d0:	ftst   
  4012d2:	add    BYTE PTR [eax],al
  4012d4:	add    BYTE PTR [eax],al
  4012d6:	add    BYTE PTR [eax],al
  4012d8:	fucompp 
  4012da:	add    BYTE PTR [eax],al
  4012dc:	add    BYTE PTR [eax],al
  4012de:	add    BYTE PTR [eax],al
  4012e0:	fwait
  4012e1:	add    BYTE PTR [eax],al
  4012e3:	add    BYTE PTR [eax],al
  4012e5:	add    BYTE PTR [eax],al
  4012e7:	add    cl,bl
  4012e9:	in     eax,0x0
  4012eb:	add    BYTE PTR [eax],al
  4012ed:	add    BYTE PTR [eax],al
  4012ef:	add    cl,bl
  4012f1:	hlt    
  4012f2:	add    BYTE PTR [eax],al
  4012f4:	add    BYTE PTR [eax],al
  4012f6:	add    BYTE PTR [eax],al
  4012f8:	fyl2x  
  4012fa:	add    BYTE PTR [eax],al
  4012fc:	add    BYTE PTR [eax],al
  4012fe:	add    BYTE PTR [eax],al
  401300:	fyl2xp1 
  401302:	add    BYTE PTR [eax],al
  401304:	add    BYTE PTR [eax],al
  401306:	add    BYTE PTR [eax],al
  401308:	getsec 
  40130a:	add    BYTE PTR [eax],al
  40130c:	add    BYTE PTR [eax],al
  40130e:	add    BYTE PTR [eax],al
  401310:	hlt    
  401311:	add    BYTE PTR [eax],al
  401313:	add    BYTE PTR [eax],al
  401315:	add    BYTE PTR [eax],al
  401317:	add    BYTE PTR [edi],cl
  401319:	or     BYTE PTR [eax],al
  40131b:	add    BYTE PTR [eax],al
  40131d:	add    BYTE PTR [eax],al
  40131f:	add    BYTE PTR [edi+0x0],bl
  401325:	add    BYTE PTR [eax],al
  401327:	add    cl,cl
  401329:	add    BYTE PTR [eax],al
  40132b:	add    BYTE PTR [eax],al
  40132d:	add    BYTE PTR [eax],al
  40132f:	add    BYTE PTR [edi],cl
  401331:	scas   al,BYTE PTR es:[edi]
  401332:	call   0x401337
  401337:	add    BYTE PTR [edi],cl
  401339:	scas   al,BYTE PTR es:[edi]
  40133a:	lock add BYTE PTR [eax],al
  40133d:	add    BYTE PTR [eax],al
  40133f:	add    bl,dh
  401341:	nop
  401342:	add    BYTE PTR [eax],al
  401344:	add    BYTE PTR [eax],al
  401346:	add    BYTE PTR [eax],al
  401348:	popf   
  401349:	add    BYTE PTR [eax],al
  40134b:	add    BYTE PTR [eax],al
  40134d:	add    al,0x0
  40134f:	add    BYTE PTR [eax+eax*1+0x4000000],bl
  401356:	add    BYTE PTR [eax],al
  401358:	rdmsr  
  40135a:	add    BYTE PTR [eax],al
  40135c:	add    BYTE PTR [eax],al
  40135e:	add    BYTE PTR [eax],al
  401360:	rdpmc  
  401362:	add    BYTE PTR [eax],al
  401364:	add    BYTE PTR [eax],al
  401366:	add    BYTE PTR [eax],al
  401368:	rdtsc  
  40136a:	add    BYTE PTR [eax],al
  40136c:	add    BYTE PTR [eax],al
  40136e:	add    BYTE PTR [eax],al
  401370:	rdtscp 
  401373:	add    BYTE PTR [eax],al
  401375:	add    BYTE PTR [eax],al
  401377:	add    BYTE PTR [edi],cl
  401379:	stos   BYTE PTR es:[edi],al
  40137a:	add    BYTE PTR [eax],al
  40137c:	add    BYTE PTR [eax],al
  40137e:	add    BYTE PTR [eax],al
  401380:	sahf   
  401381:	add    BYTE PTR [eax],al
  401383:	add    BYTE PTR [eax],al
  401385:	add    BYTE PTR [eax],al
  401387:	add    BYTE PTR [edi],cl
  401389:	scas   al,BYTE PTR es:[edi]
  40138a:	clc    
  40138b:	add    BYTE PTR [eax],al
  40138d:	add    BYTE PTR [eax],al
  40138f:	add    cl,bh
  401391:	add    BYTE PTR [eax],al
  401393:	add    BYTE PTR [eax],al
  401395:	add    BYTE PTR [eax],al
  401397:	add    ch,bh
  401399:	add    BYTE PTR [eax],al
  40139b:	add    BYTE PTR [eax],al
  40139d:	add    BYTE PTR [eax],al
  40139f:	add    BYTE PTR [edi],cl
  4013a1:	add    esp,ebx
  4013a3:	add    BYTE PTR [eax],al
  4013a5:	add    BYTE PTR [eax],al
  4013a7:	add    bl,bh
  4013a9:	add    BYTE PTR [eax],al
  4013ab:	add    BYTE PTR [eax],al
  4013ad:	add    BYTE PTR [eax],al
  4013af:	add    BYTE PTR [edi],cl
  4013b1:	add    eax,0x0
  4013b6:	add    BYTE PTR [eax],al
  4013b8:	sysret 
  4013ba:	add    BYTE PTR [eax],al
  4013bc:	add    BYTE PTR [eax],al
  4013be:	add    BYTE PTR [eax],al
  4013c0:	ud2    
  4013c2:	add    BYTE PTR [eax],al
  4013c4:	add    BYTE PTR [eax],al
  4013c6:	add    BYTE PTR [eax],al
  4013c8:	vmcall 
  4013cb:	add    BYTE PTR [eax],al
  4013cd:	add    BYTE PTR [eax],al
  4013cf:	add    BYTE PTR [edi],cl
  4013d1:	add    edx,eax
  4013d3:	add    BYTE PTR [eax],al
  4013d5:	add    BYTE PTR [eax],al
  4013d7:	add    BYTE PTR [edi],cl
  4013d9:	add    ecx,ebx
  4013db:	add    BYTE PTR [eax],al
  4013dd:	add    BYTE PTR [eax],al
  4013df:	add    BYTE PTR [edi],cl
  4013e1:	add    ebx,eax
  4013e3:	add    BYTE PTR [eax],al
  4013e5:	add    BYTE PTR [eax],al
  4013e7:	add    BYTE PTR [edi],cl
  4013e9:	add    esp,eax
  4013eb:	add    BYTE PTR [eax],al
  4013ed:	add    BYTE PTR [eax],al
  4013ef:	add    ch,al
  4013f1:	cld    
  4013f2:	ja     0x4013f4
  4013f4:	add    BYTE PTR [eax],al
  4013f6:	add    BYTE PTR [eax],al
  4013f8:	vzeroupper 
  4013fb:	add    BYTE PTR [eax],al
  4013fd:	add    BYTE PTR [eax],al
  4013ff:	add    BYTE PTR [edi],cl
  401401:	or     DWORD PTR [eax],eax
  401403:	add    BYTE PTR [eax],al
  401405:	add    BYTE PTR [eax],al
  401407:	add    BYTE PTR [edi],cl
  401409:	xor    BYTE PTR [eax],al
  40140b:	add    BYTE PTR [eax],al
  40140d:	add    BYTE PTR [eax],al
  40140f:	add    BYTE PTR [edi],cl
  401411:	add    ebp,edx
  401413:	add    BYTE PTR [eax],al
  401415:	add    BYTE PTR [eax],al
  401417:	add    BYTE PTR [edi],cl
  401419:	add    eax,edx
  40141b:	add    BYTE PTR [eax],al
  40141d:	add    BYTE PTR [eax],al
  40141f:	add    BYTE PTR [edi],cl
  401421:	add    ecx,edx
  401423:	add    BYTE PTR [eax],al
  401425:	add    BYTE PTR [eax],al
  401427:	add    BYTE PTR [edi],cl
  401429:	add    esi,edx
  40142b:	add    BYTE PTR [eax],al
  40142d:	add    BYTE PTR [eax],al
  40142f:	add    bh,cl
  401431:	add    BYTE PTR [eax],al
  401433:	add    BYTE PTR [eax],al
  401435:	add    al,0x0
  401437:	add    bh,cl
  401439:	add    BYTE PTR [eax],al
  40143b:	add    BYTE PTR [eax],al
  40143d:	add    eax,0xcf0000
  401442:	add    BYTE PTR [eax],al
  401444:	add    BYTE PTR [esi],al
  401446:	add    BYTE PTR [eax],al
  401448:	cwde   
  401449:	add    BYTE PTR [eax],al
  40144b:	add    BYTE PTR [eax],al
  40144d:	push   es
  40144e:	add    BYTE PTR [eax],al
  401450:	cdq    
  401451:	add    BYTE PTR [eax],al
  401453:	add    BYTE PTR [eax],al
  401455:	push   es
  401456:	add    BYTE PTR [eax],al
  401458:	popf   
  401459:	add    BYTE PTR [eax],al
  40145b:	add    BYTE PTR [eax],al
  40145d:	add    BYTE PTR [eax],al
  40145f:	add    BYTE PTR [eax+eax*1+0x0],bl
  401466:	add    BYTE PTR [eax],al
  401468:	swapgs 
  40146b:	add    BYTE PTR [eax],al
  40146d:	add    eax,0x70f0000
  401472:	add    BYTE PTR [eax],al
  401474:	add    BYTE PTR [esi],al
  401476:	add    BYTE PTR [eax],al
  401478:	xchg   esp,eax
  401479:	rol    DWORD PTR [ecx+0x0],cl
  40147c:	add    DWORD PTR [eax],eax
  40147e:	add    al,BYTE PTR [eax]
  401480:	cld    
  401481:	rol    BYTE PTR [ecx+0x0],cl
  401484:	add    eax,0xf0000a20
  401489:	rol    BYTE PTR [ecx+0x0],cl
  40148c:	add    DWORD PTR [eax],eax
  40148e:	or     eax,DWORD PTR [eax]
  401490:	cld    
  401491:	int    0x41
  401493:	add    BYTE PTR [ecx],al
  401495:	add    BYTE PTR ds:0x41cb9831,cl
  40149b:	add    BYTE PTR [edx],al
  40149d:	add    BYTE PTR [ebx],cl
  40149f:	xor    DWORD PTR [eax+0x20041cb],eax
  4014a5:	add    BYTE PTR [edx],cl
  4014a7:	add    BYTE PTR [edx+ecx*8+0x41],dl
  4014ab:	add    BYTE PTR [ecx],al
  4014ad:	add    BYTE PTR [edx],cl
  4014af:	add    BYTE PTR [eax-0x36],cl
  4014b2:	inc    ecx
  4014b3:	add    BYTE PTR [ecx],al
  4014b5:	add    BYTE PTR [edx],cl
  4014b7:	add    BYTE PTR [eax+ecx*8+0x10041],bh
  4014be:	add    al,BYTE PTR [eax]
  4014c0:	mov    al,0xc8
  4014c2:	inc    ecx
  4014c3:	add    BYTE PTR [ecx],al
  4014c5:	add    BYTE PTR [edx],al
  4014c7:	add    BYTE PTR [eax+0x20041c8],bl
  4014cd:	add    BYTE PTR [edx],cl
  4014cf:	add    BYTE PTR [eax+0x20041c8],al
  4014d5:	add    BYTE PTR [edx],cl
  4014d7:	add    BYTE PTR [eax-0x38],ch
  4014da:	inc    ecx
  4014db:	add    BYTE PTR [edx],al
  4014dd:	add    BYTE PTR [edx],cl
  4014df:	add    BYTE PTR [eax-0x38],dl
  4014e2:	inc    ecx
  4014e3:	add    BYTE PTR [edx],al
  4014e5:	add    BYTE PTR [edx],cl
  4014e7:	add    BYTE PTR [eax],bh
  4014e9:	enter  0x41,0x2
  4014ed:	add    BYTE PTR [edx],cl
  4014ef:	add    BYTE PTR [eax+ecx*8],dl
  4014f2:	inc    ecx
  4014f3:	add    BYTE PTR [ebx],al
  4014f5:	add    BYTE PTR [edx],cl
  4014f7:	add    ah,bh
  4014f9:	mov    DWORD PTR [ecx+0x0],0xa0002
  401500:	in     al,0xc7
  401502:	inc    ecx
  401503:	add    BYTE PTR [edx],al
  401505:	add    BYTE PTR [edx],cl
  401507:	add    al,al
  401509:	mov    DWORD PTR [ecx+0x0],0xa0003
  401510:	pushf  
  401511:	mov    DWORD PTR [ecx+0x0],0xa0003
  401518:	test   bh,al
  40151a:	inc    ecx
  40151b:	add    BYTE PTR [edx],al
  40151d:	add    BYTE PTR [edx],cl
  40151f:	add    BYTE PTR [edi+eax*8+0x41],ch
  401523:	add    BYTE PTR [edx],al
  401525:	add    BYTE PTR [edx],cl
  401527:	add    BYTE PTR [edi+eax*8],bh
  40152a:	inc    ecx
  40152b:	add    BYTE PTR [eax+eax*1],al
  40152e:	or     al,BYTE PTR [eax]
  401530:	xor    bh,al
  401532:	inc    ecx
  401533:	add    BYTE PTR [ecx],al
  401535:	add    BYTE PTR [edx],cl
  401537:	add    BYTE PTR [edi+eax*8],ah
  40153a:	inc    ecx
  40153b:	add    BYTE PTR [ecx],al
  40153d:	add    BYTE PTR [edx],cl
  40153f:	add    BYTE PTR [eax],bl
  401541:	mov    DWORD PTR [ecx+0x0],0xa0001
  401548:	xchg   esp,eax
  401549:	mov    BYTE PTR [ecx+0x0],0x1
  40154d:	add    BYTE PTR [edx],cl
  40154f:	add    BYTE PTR [eax+0x10041c6],cl
  401555:	add    BYTE PTR [edx],cl
  401557:	add    BYTE PTR [eax-0x3a],bl
  40155a:	inc    ecx
  40155b:	add    BYTE PTR [ecx],al
  40155d:	add    BYTE PTR [edx],cl
  40155f:	add    BYTE PTR [esi+eax*8+0x41],cl
  401563:	add    BYTE PTR [ecx],al
  401565:	add    BYTE PTR [edx],cl
  401567:	add    BYTE PTR [eax+0x10041c6],bh
  40156d:	add    BYTE PTR [edx],cl
  40156f:	add    BYTE PTR [esi+eax*8],al
  401572:	inc    ecx
  401573:	add    BYTE PTR [edx],al
  401575:	add    BYTE PTR [edx],cl
  401577:	add    BYTE PTR [esi+eax*8+0x10041],ch
  40157e:	or     al,BYTE PTR [eax]
  401580:	mov    al,ds:0x10041c6
  401585:	add    BYTE PTR [edx],cl
  401587:	add    BYTE PTR [esi+eax*8+0x10041],dl
  40158e:	or     eax,DWORD PTR [eax-0x78]
  401591:	mov    BYTE PTR [ecx+0x0],0x1
  401595:	add    BYTE PTR [ebx],cl
  401597:	inc    eax
  401598:	mov    BYTE PTR fs:[ecx+0x0],0x3
  40159d:	add    BYTE PTR [edx],cl
  40159f:	add    BYTE PTR [eax-0x3a],bl
  4015a2:	inc    ecx
  4015a3:	add    BYTE PTR [ecx],al
  4015a5:	add    BYTE PTR [ebx],cl
  4015a7:	inc    eax
  4015a8:	dec    esp
  4015a9:	mov    BYTE PTR [ecx+0x0],0x1
  4015ad:	add    BYTE PTR [ebx],cl
  4015af:	inc    eax
  4015b0:	mov    eax,0x10041c6
  4015b5:	add    BYTE PTR [ebx],cl
  4015b7:	inc    eax
  4015b8:	sbb    al,0xc6
  4015ba:	inc    ecx
  4015bb:	add    BYTE PTR [eax+eax*1],al
  4015be:	or     al,BYTE PTR [eax]
  4015c0:	add    al,0xc6
  4015c2:	inc    ecx
  4015c3:	add    BYTE PTR [edx],al
  4015c5:	add    BYTE PTR [ebx],cl
  4015c7:	inc    eax
  4015c8:	lock les eax,FWORD PTR [ecx+0x0]
  4015cc:	add    DWORD PTR [eax],eax
  4015ce:	or     eax,DWORD PTR [eax]
  4015d0:	fadd   st,st(4)
  4015d2:	inc    ecx
  4015d3:	add    BYTE PTR [ecx],al
  4015d5:	add    BYTE PTR [ebx],cl
  4015d7:	add    BYTE PTR [esp+eax*8+0x41],dl
  4015db:	add    BYTE PTR [edx],al
  4015dd:	add    BYTE PTR [edx],cl
  4015df:	add    BYTE PTR [ebx+eax*8+0x20041],bl
  4015e6:	or     esi,DWORD PTR [ecx]
  4015e8:	inc    esp
  4015e9:	ret    
  4015ea:	inc    ecx
  4015eb:	add    BYTE PTR [edx],al
  4015ed:	add    BYTE PTR [edx],al
  4015ef:	add    BYTE PTR [ebx+eax*8],ch
  4015f2:	inc    ecx
  4015f3:	add    BYTE PTR [ecx],al
  4015f5:	add    BYTE PTR [ebx],cl
  4015f7:	add    al,dh
  4015f9:	ret    0x41
  4015fc:	add    ah,BYTE PTR [eax]
  4015fe:	or     BYTE PTR [eax],al
  401600:	in     al,0xc2
  401602:	inc    ecx
  401603:	add    BYTE PTR [edx],al
  401605:	and    BYTE PTR [eax],cl
  401607:	add    al,bl
  401609:	ret    0x41
  40160c:	add    ah,BYTE PTR [eax]
  40160e:	or     BYTE PTR [eax],al
  401610:	int3   
  401611:	ret    0x41
  401614:	add    ah,BYTE PTR [eax]
  401616:	or     BYTE PTR [eax],al
  401618:	rol    dl,0x41
  40161b:	add    BYTE PTR [edx],al
  40161d:	and    BYTE PTR [eax],cl
  40161f:	add    BYTE PTR [eax+0x10041c2],bh
  401625:	and    BYTE PTR [eax],cl
  401627:	add    BYTE PTR [edx+eax*8+0x20020041],ch
  40162e:	or     BYTE PTR [eax],al
  401630:	mov    al,ds:0x20041c2
  401635:	and    BYTE PTR [eax],cl
  401637:	add    BYTE PTR [edx+eax*8+0x20020041],dl
  40163e:	or     BYTE PTR [eax],al
  401640:	mov    dl,al
  401642:	inc    ecx
  401643:	add    BYTE PTR [edx],al
  401645:	and    BYTE PTR [eax],cl
  401647:	add    BYTE PTR [edx+eax*8+0x41],ah
  40164b:	add    BYTE PTR [esi],al
  40164d:	and    BYTE PTR [edx],cl
  40164f:	add    BYTE PTR [eax-0x3e],bl
  401652:	inc    ecx
  401653:	add    BYTE PTR [edx],al
  401655:	and    BYTE PTR [eax],cl
  401657:	add    BYTE PTR [edx+eax*8+0x41],cl
  40165b:	add    BYTE PTR [edx],al
  40165d:	and    BYTE PTR [eax],cl
  40165f:	add    BYTE PTR [eax-0x3e],al
  401662:	inc    ecx
  401663:	add    BYTE PTR [edx],al
  401665:	and    BYTE PTR [eax],cl
  401667:	add    BYTE PTR [edx+eax*8],dh
  40166a:	inc    ecx
  40166b:	add    BYTE PTR [edx],al
  40166d:	and    BYTE PTR [eax],cl
  40166f:	add    BYTE PTR [eax],ch
  401671:	ret    0x41
  401674:	add    ah,BYTE PTR [eax]
  401676:	or     BYTE PTR [eax],al
  401678:	sbb    al,0xc2
  40167a:	inc    ecx
  40167b:	add    BYTE PTR [edx],al
  40167d:	and    BYTE PTR [eax],cl
  40167f:	add    BYTE PTR [eax],cl
  401681:	ret    0x41
  401684:	add    ah,BYTE PTR [eax]
  401686:	or     BYTE PTR [eax],al
  401688:	fadd   st,st(1)
  40168a:	inc    ecx
  40168b:	add    BYTE PTR [ecx],al
  40168d:	add    BYTE PTR [ebx],cl
  40168f:	add    BYTE PTR [ecx+eax*8+0x10041],bl
  401696:	or     eax,DWORD PTR [eax]
  401698:	ins    BYTE PTR es:[edi],dx
  401699:	rol    DWORD PTR [ecx+0x0],0x1
  40169d:	add    BYTE PTR [ebx],cl
  40169f:	add    BYTE PTR [eax-0x3f],ah
  4016a2:	inc    ecx
  4016a3:	add    BYTE PTR [ecx],al
  4016a5:	add    BYTE PTR [ebx],cl
  4016a7:	add    BYTE PTR [eax-0x3f],cl
  4016aa:	inc    ecx
  4016ab:	add    BYTE PTR [edx],al
  4016ad:	add    BYTE PTR [ebx],cl
  4016af:	add    BYTE PTR [ecx+eax*8],bh
  4016b2:	inc    ecx
  4016b3:	add    BYTE PTR [ecx],al
  4016b5:	add    BYTE PTR [ebx],cl
  4016b7:	add    BYTE PTR [eax],bh
  4016b9:	rol    DWORD PTR [ecx+0x0],0x3
  4016bd:	adc    BYTE PTR [ebx],al
  4016bf:	add    ah,BYTE PTR [eax]
  4016c1:	rol    DWORD PTR [ecx+0x0],0x1
  4016c5:	sbb    BYTE PTR [ebx],al
  4016c7:	add    BYTE PTR [eax],bl
  4016c9:	rol    DWORD PTR [ecx+0x0],0x1
  4016cd:	sbb    BYTE PTR [ebx],al
  4016cf:	add    BYTE PTR [eax],dl
  4016d1:	rol    DWORD PTR [ecx+0x0],0x1
  4016d5:	sbb    BYTE PTR [ebx],al
  4016d7:	add    BYTE PTR [eax],cl
  4016d9:	rol    DWORD PTR [ecx+0x0],0x1
  4016dd:	sbb    BYTE PTR [ebx],al
  4016df:	add    BYTE PTR [eax],al
  4016e1:	rol    DWORD PTR [ecx+0x0],0x1
  4016e5:	sbb    BYTE PTR [ebx],al
  4016e7:	add    al,bh
  4016e9:	rol    BYTE PTR [ecx+0x0],0x1
  4016ed:	sbb    BYTE PTR [ebx],al
  4016ef:	add    BYTE PTR [eax+0x10041c0],dh
  4016f5:	add    BYTE PTR [ebx],cl
  4016f7:	add    BYTE PTR [eax-0x46],bl
  4016fa:	inc    ecx
  4016fb:	add    BYTE PTR [edx],al
  4016fd:	add    BYTE PTR [edx],cl
  4016ff:	add    BYTE PTR [eax+0x20041b9],dh
  401705:	add    BYTE PTR [ebx],cl
  401707:	xor    DWORD PTR [eax+0x20041b9],eax
  40170d:	add    BYTE PTR [ebx],cl
  40170f:	xor    DWORD PTR [eax],edi
  401711:	test   eax,0x60041
  401716:	or     al,BYTE PTR [eax]
  401718:	in     al,dx
  401719:	test   al,0x41
  40171b:	add    BYTE PTR [ecx],al
  40171d:	add    BYTE PTR [ebx],cl
  40171f:	add    al,ah
  401721:	test   al,0x41
  401723:	add    BYTE PTR [ecx],al
  401725:	add    BYTE PTR [ebx],cl
  401727:	add    ah,dl
  401729:	test   al,0x41
  40172b:	add    BYTE PTR [ecx],al
  40172d:	add    BYTE PTR [ebx],cl
  40172f:	add    al,cl
  401731:	test   al,0x41
  401733:	add    BYTE PTR [ecx],al
  401735:	add    BYTE PTR [ebx],cl
  401737:	add    BYTE PTR [eax+ebp*4+0x10041],bh
  40173e:	or     eax,DWORD PTR [eax]
  401740:	mov    al,0xa8
  401742:	inc    ecx
  401743:	add    BYTE PTR [ecx],al
  401745:	add    BYTE PTR [ebx],cl
  401747:	add    BYTE PTR [eax+0xa0041a1],cl
  40174d:	add    BYTE PTR [edx],cl
  40174f:	add    BYTE PTR [eax-0x5f],dh
  401752:	inc    ecx
  401753:	add    BYTE PTR [edx],al
  401755:	add    BYTE PTR [edx],cl
  401757:	add    BYTE PTR [eax-0x60],bl
  40175a:	inc    ecx
  40175b:	add    BYTE PTR [ecx],al
  40175d:	add    BYTE PTR [ebx],cl
  40175f:	add    ah,cl
  401761:	popf   
  401762:	inc    ecx
  401763:	add    BYTE PTR [ebx],al
  401765:	adc    BYTE PTR [ebx],al
  401767:	or     al,0xb0
  401769:	popf   
  40176a:	inc    ecx
  40176b:	add    BYTE PTR [ecx],al
  40176d:	add    BYTE PTR [edx],cl
  40176f:	add    BYTE PTR [ebp+ebx*4+0x10041],ah
  401776:	or     al,BYTE PTR [eax]
  401778:	cwde   
  401779:	popf   
  40177a:	inc    ecx
  40177b:	add    BYTE PTR [ecx],al
  40177d:	add    BYTE PTR [edx],cl
  40177f:	add    BYTE PTR [ebp+ebx*4+0x10041],cl
  401786:	or     al,BYTE PTR [eax]
  401788:	sbb    BYTE PTR [ebp+0x10041],0xa
  40178f:	add    BYTE PTR [ebp+ebx*4+0x41],dh
  401793:	add    BYTE PTR [ecx],al
  401795:	add    BYTE PTR [edx],cl
  401797:	add    BYTE PTR [eax-0x63],ch
  40179a:	inc    ecx
  40179b:	add    BYTE PTR [ecx],al
  40179d:	add    BYTE PTR [edx],cl
  40179f:	add    BYTE PTR [ebp+ebx*4+0x41],bl
  4017a3:	add    BYTE PTR [ecx],al
  4017a5:	add    BYTE PTR [edx],cl
  4017a7:	add    BYTE PTR [eax-0x63],dl
  4017aa:	inc    ecx
  4017ab:	add    BYTE PTR [ecx],al
  4017ad:	add    BYTE PTR [edx],cl
  4017af:	add    BYTE PTR [ebp+ebx*4+0x41],al
  4017b3:	add    BYTE PTR [ecx],al
  4017b5:	add    BYTE PTR [edx],cl
  4017b7:	add    BYTE PTR [eax],bh
  4017b9:	popf   
  4017ba:	inc    ecx
  4017bb:	add    BYTE PTR [ecx],al
  4017bd:	add    BYTE PTR [edx],cl
  4017bf:	add    BYTE PTR [ebx*4+0x10041],ch
  4017c6:	or     al,BYTE PTR [eax]
  4017c8:	and    BYTE PTR [ebp+0x10041],bl
  4017ce:	or     al,BYTE PTR [eax]
  4017d0:	adc    al,0x9d
  4017d2:	inc    ecx
  4017d3:	add    BYTE PTR [ecx],al
  4017d5:	add    BYTE PTR [edx],cl
  4017d7:	add    BYTE PTR [eax],cl
  4017d9:	popf   
  4017da:	inc    ecx
  4017db:	add    BYTE PTR [ecx],al
  4017dd:	add    BYTE PTR [edx],cl
  4017df:	add    ah,bh
  4017e1:	pushf  
  4017e2:	inc    ecx
  4017e3:	add    BYTE PTR [ecx],al
  4017e5:	add    BYTE PTR [edx],cl
  4017e7:	add    al,dh
  4017e9:	pushf  
  4017ea:	inc    ecx
  4017eb:	add    BYTE PTR [ecx],al
  4017ed:	add    BYTE PTR [ebx],cl
  4017ef:	add    ah,al
  4017f1:	fwait
  4017f2:	inc    ecx
  4017f3:	add    BYTE PTR [ecx],al
  4017f5:	add    BYTE PTR [ebx],cl
  4017f7:	add    BYTE PTR [eax+0x100419b],bh
  4017fd:	add    BYTE PTR [ebx],al
  4017ff:	add    BYTE PTR [eax+0x200419b],ah
  401805:	add    BYTE PTR [ebx],cl
  401807:	add    BYTE PTR [eax+0x200419b],cl
  40180d:	add    BYTE PTR [ebx],cl
  40180f:	add    BYTE PTR [eax-0x65],dh
  401812:	inc    ecx
  401813:	add    BYTE PTR [edx],al
  401815:	add    BYTE PTR [ebx],cl
  401817:	add    BYTE PTR [ebx+ebx*4],al
  40181a:	inc    ecx
  40181b:	add    BYTE PTR [ecx],al
  40181d:	add    BYTE PTR [ebx],cl
  40181f:	add    BYTE PTR [eax],al
  401821:	fwait
  401822:	inc    ecx
  401823:	add    BYTE PTR [ebx],al
  401825:	adc    BYTE PTR [ebx],al
  401827:	add    bl,al
  401829:	call   0xb:0x20041
  401830:	adc    al,0x7e
  401832:	inc    ecx
  401833:	add    BYTE PTR [ecx],al
  401835:	add    BYTE PTR [ebx],cl
  401837:	add    BYTE PTR [eax],cl
  401839:	jle    0x40187c
  40183b:	add    BYTE PTR [ecx],al
  40183d:	add    BYTE PTR [ebx],cl
  40183f:	add    BYTE PTR [ebp*2+0x10041],al
  401846:	or     eax,DWORD PTR [eax]
  401848:	lock imul eax,DWORD PTR [ecx+0x0],0x1
  40184d:	add    BYTE PTR [ebx],cl
  40184f:	add    BYTE PTR [eax+0x6b],cl
  401852:	inc    ecx
  401853:	add    BYTE PTR [edx],al
  401855:	add    BYTE PTR [eax+eax*1],al
  401858:	dec    eax
  401859:	inc    cx
  40185b:	add    BYTE PTR [ecx],al
  40185d:	add    BYTE PTR [ebx],cl
  40185f:	add    BYTE PTR [esi+eiz*2],bh
  401862:	inc    ecx
  401863:	add    BYTE PTR [ecx],al
  401865:	add    BYTE PTR [ebx],cl
  401867:	add    BYTE PTR [eax],bl
  401869:	inc    cx
  40186b:	add    BYTE PTR [edx],al
  40186d:	add    BYTE PTR [eax+eax*1],al
  401870:	add    BYTE PTR [esi+0x41],ah
  401873:	add    BYTE PTR [edx],al
  401875:	add    BYTE PTR [eax+eax*1],al
  401878:	pop    eax
  401879:	gs inc ecx
  40187b:	add    BYTE PTR [ecx],al
  40187d:	add    BYTE PTR [eax+eax*1],cl
  401880:	mov    ah,0x3c
  401882:	inc    ecx
  401883:	add    BYTE PTR [ecx],al
  401885:	add    BYTE PTR [ebx],cl
  401887:	add    BYTE PTR [eax+0x3a],dl
  40188a:	inc    ecx
  40188b:	add    BYTE PTR [ecx],al
  40188d:	add    BYTE PTR [ebx],cl
  40188f:	add    BYTE PTR [eax],dh
  401891:	cmp    al,BYTE PTR [ecx+0x0]
  401894:	add    DWORD PTR [eax],esp
  401896:	or     BYTE PTR [eax],al
  401898:	in     al,dx
  401899:	cmp    BYTE PTR [ecx+0x0],al
  40189c:	add    DWORD PTR [eax],eax
  40189e:	or     eax,DWORD PTR [eax]
  4018a0:	aam    0x38
  4018a2:	inc    ecx
  4018a3:	add    BYTE PTR [ecx],al
  4018a5:	add    BYTE PTR [ebx],cl
  4018a7:	add    BYTE PTR [eax+edi*1+0x10041],bh
  4018ae:	or     eax,DWORD PTR [eax]
  4018b0:	or     dh,cl
  4018b2:	inc    ecx
  4018b3:	add    BYTE PTR [ecx],al
  4018b5:	add    BYTE PTR [ebx],cl
  4018b7:	add    esp,esp
  4018b9:	les    eax,FWORD PTR [ecx+0x0]
  4018bc:	add    DWORD PTR [eax],eax
  4018be:	or     eax,DWORD PTR [eax]
  4018c0:	int3   
  4018c1:	les    eax,FWORD PTR [ecx+0x0]
  4018c4:	add    DWORD PTR [eax],eax
  4018c6:	or     eax,DWORD PTR [eax]
  4018c8:	adc    al,0xc2
  4018ca:	inc    ecx
  4018cb:	add    BYTE PTR [ecx],al
  4018cd:	and    BYTE PTR [eax],cl
  4018cf:	add    BYTE PTR [eax-0x60],dh
  4018d2:	inc    ecx
  4018d3:	add    BYTE PTR [ecx],al
  4018d5:	add    BYTE PTR [ebx],cl
  4018d7:	add    BYTE PTR [eax+eiz*4+0x41],ah
  4018db:	add    BYTE PTR [ecx],al
  4018dd:	add    BYTE PTR [ebx],cl
  4018df:	add    BYTE PTR [eax+0x3a],ch
  4018e2:	inc    ecx
  4018e3:	add    BYTE PTR [ecx],al
  4018e5:	add    BYTE PTR [ebx],cl
  4018e7:	add    BYTE PTR [edx+edi*1+0x41],bl
  4018eb:	add    BYTE PTR [ecx],al
  4018ed:	add    BYTE PTR [ebx],cl
  4018ef:	add    al,ah
  4018f1:	cmp    BYTE PTR [ecx+0x0],al
  4018f4:	add    DWORD PTR [eax],eax
  4018f6:	or     eax,DWORD PTR [eax]
  4018f8:	enter  0x4138,0x0
  4018fc:	add    DWORD PTR [eax],eax
  4018fe:	or     eax,DWORD PTR [eax]
  401900:	mov    al,0x38
  401902:	inc    ecx
  401903:	add    BYTE PTR [ecx],al
  401905:	add    BYTE PTR [ebx],cl
  401907:	add    BYTE PTR [eax],ah
  401909:	fadd   DWORD PTR [ecx+0x0]
  40190c:	push   cs
  40190d:	add    BYTE PTR [edi],cl
  40190f:	xor    DWORD PTR [eax-0x29],edi
  401912:	inc    ecx
  401913:	add    BYTE PTR [esi],cl
  401915:	add    BYTE PTR [edi],cl
  401917:	xor    DWORD PTR [eax-0x29],esp
  40191a:	inc    ecx
  40191b:	add    BYTE PTR [edx],al
  40191d:	add    BYTE PTR [eax+eax*1],cl
  401920:	dec    eax
  401921:	xlat   BYTE PTR ds:[ebx]
  401922:	inc    ecx
  401923:	add    BYTE PTR [edx],al
  401925:	add    BYTE PTR [ebx],cl
  401927:	add    BYTE PTR [eax],dh
  401929:	xlat   BYTE PTR ds:[ebx]
  40192a:	inc    ecx
  40192b:	add    BYTE PTR [edx],al
  40192d:	add    BYTE PTR [eax+eax*1],cl
  401930:	sbb    bh,dl
  401932:	inc    ecx
  401933:	add    BYTE PTR [edx],al
  401935:	add    BYTE PTR [eax+eax*1],cl
  401938:	add    bh,dl
  40193a:	inc    ecx
  40193b:	add    BYTE PTR [edx],al
  40193d:	add    BYTE PTR [eax+eax*1],cl
  401940:	call   0x2405b1b
  401945:	add    BYTE PTR [eax+eax*1],cl
  401948:	rcl    dh,1
  40194a:	inc    ecx
  40194b:	add    BYTE PTR [edx],al
  40194d:	add    BYTE PTR ds:0x41d6b800,cl
  401953:	add    BYTE PTR [edx],al
  401955:	add    BYTE PTR ds:0x41d6a000,cl
  40195b:	add    BYTE PTR [edx],al
  40195d:	add    BYTE PTR ds:0x41d68800,cl
  401963:	add    BYTE PTR [edx],al
  401965:	add    BYTE PTR ds:0x41d67000,cl
  40196b:	add    BYTE PTR [edx],al
  40196d:	add    BYTE PTR ds:0x41d5b000,cl
  401973:	add    BYTE PTR [esi],cl
  401975:	add    BYTE PTR [edi],cl
  401977:	xor    DWORD PTR [eax+0x20041d5],eax
  40197d:	add    BYTE PTR [eax+eax*1],cl
  401980:	push   0x20041d5
  401985:	add    BYTE PTR [ebx],cl
  401987:	add    BYTE PTR [eax-0x2b],dl
  40198a:	inc    ecx
  40198b:	add    BYTE PTR [edx],al
  40198d:	add    BYTE PTR [eax+eax*1],cl
  401990:	cmp    ch,dl
  401992:	inc    ecx
  401993:	add    BYTE PTR [edx],al
  401995:	add    BYTE PTR [ebx],cl
  401997:	add    BYTE PTR [eax+0x20041d4],dl
  40199d:	add    BYTE PTR ds:0x41d47800,cl
  4019a3:	add    BYTE PTR [edx],al
  4019a5:	add    BYTE PTR ds:0x41d46000,cl
  4019ab:	add    BYTE PTR [edx],al
  4019ad:	add    BYTE PTR ds:0x41d44800,cl
  4019b3:	add    BYTE PTR [edx],al
  4019b5:	add    BYTE PTR ds:0x41d43000,cl
  4019bb:	add    BYTE PTR [edx],al
  4019bd:	add    BYTE PTR ds:0x41d41800,cl
  4019c3:	add    BYTE PTR [edx],al
  4019c5:	add    BYTE PTR ds:0x41d40000,cl
  4019cb:	add    BYTE PTR [edx],al
  4019cd:	add    BYTE PTR ds:0x41d3e800,cl
  4019d3:	add    BYTE PTR [edx],al
  4019d5:	add    BYTE PTR ds:0x41d3d000,cl
  4019db:	add    BYTE PTR [edx],al
  4019dd:	add    BYTE PTR ds:0x41d3b800,cl
  4019e3:	add    BYTE PTR [edx],al
  4019e5:	add    BYTE PTR ds:0x41d3ac00,cl
  4019eb:	add    BYTE PTR [ecx],al
  4019ed:	add    BYTE PTR [ebx],cl
  4019ef:	add    BYTE PTR [eax+0x10041d3],ah
  4019f5:	add    BYTE PTR [eax+eax*1],cl
  4019f8:	jl     0x4019cd
  4019fa:	inc    ecx
  4019fb:	add    BYTE PTR [edx],al
  4019fd:	add    BYTE PTR [ecx+esi*1],cl
  401a00:	rol    DWORD PTR fs:[ecx+0x0],cl
  401a04:	add    al,BYTE PTR [eax]
  401a06:	or     al,0x31
  401a08:	dec    esp
  401a09:	rol    DWORD PTR [ecx+0x0],cl
  401a0c:	add    al,BYTE PTR [eax]
  401a0e:	or     al,0x31
  401a10:	xor    al,0xd3
  401a12:	inc    ecx
  401a13:	add    BYTE PTR [edx],al
  401a15:	add    BYTE PTR [ecx+esi*1],cl
  401a18:	mov    ah,0xd2
  401a1a:	inc    ecx
  401a1b:	add    BYTE PTR [ecx],al
  401a1d:	add    BYTE PTR [ebx],al
  401a1f:	add    BYTE PTR [eax+0x10041d2],ch
  401a25:	add    BYTE PTR [ebx],al
  401a27:	add    al,al
  401a29:	rol    BYTE PTR [ecx+0x0],cl
  401a2c:	add    DWORD PTR [eax],eax
  401a2e:	add    eax,DWORD PTR [eax]
  401a30:	int3   
  401a31:	rol    BYTE PTR [ecx+0x0],cl
  401a34:	add    DWORD PTR [eax],eax
  401a36:	add    eax,DWORD PTR [eax]
  401a38:	rcl    dl,0x41
  401a3b:	add    BYTE PTR [ecx],al
  401a3d:	add    BYTE PTR [ebx],al
  401a3f:	add    ah,ah
  401a41:	rol    BYTE PTR [ecx+0x0],cl
  401a44:	add    DWORD PTR [eax],eax
  401a46:	add    eax,DWORD PTR [eax]
  401a48:	test   dl,dl
  401a4a:	inc    ecx
  401a4b:	add    BYTE PTR [ecx],al
  401a4d:	add    BYTE PTR [ebx],al
  401a4f:	add    BYTE PTR [eax+0x10041d2],dl
  401a55:	add    BYTE PTR [ebx],al
  401a57:	add    BYTE PTR [edx+edx*8+0x10041],bl
  401a5e:	add    eax,DWORD PTR [eax]
  401a60:	fcom   st(2)
  401a62:	inc    ecx
  401a63:	add    BYTE PTR [ecx],al
  401a65:	add    BYTE PTR [ebx],al
  401a67:	add    ah,cl
  401a69:	rol    BYTE PTR [ecx+0x0],cl
  401a6c:	add    DWORD PTR [eax],eax
  401a6e:	add    eax,DWORD PTR [eax]
  401a70:	rcl    dl,0x41
  401a73:	add    BYTE PTR [ecx],al
  401a75:	add    BYTE PTR [ebx],al
  401a77:	add    BYTE PTR [eax+0x10041d2],ch
  401a7d:	add    BYTE PTR [ebx],al
  401a7f:	add    BYTE PTR [edx+edx*8+0x10041],dh
  401a86:	add    eax,DWORD PTR [eax]
  401a88:	test   al,0xd2
  401a8a:	inc    ecx
  401a8b:	add    BYTE PTR [ecx],al
  401a8d:	add    BYTE PTR [ebx],al
  401a8f:	add    BYTE PTR [eax-0x2e],ah
  401a92:	inc    ecx
  401a93:	add    BYTE PTR [ecx],al
  401a95:	add    BYTE PTR [ebx],al
  401a97:	add    al,bl
  401a99:	rol    BYTE PTR [ecx+0x0],cl
  401a9c:	add    DWORD PTR [eax],eax
  401a9e:	add    eax,DWORD PTR [eax]
  401aa0:	pushf  
  401aa1:	rol    BYTE PTR [ecx+0x0],cl
  401aa4:	add    DWORD PTR [eax],eax
  401aa6:	add    eax,DWORD PTR [eax]
  401aa8:	nop
  401aa9:	rol    BYTE PTR [ecx+0x0],cl
  401aac:	add    DWORD PTR [eax],eax
  401aae:	add    eax,DWORD PTR [eax]
  401ab0:	test   dl,dl
  401ab2:	inc    ecx
  401ab3:	add    BYTE PTR [ecx],al
  401ab5:	add    BYTE PTR [ebx],al
  401ab7:	add    BYTE PTR [eax-0x2e],bh
  401aba:	inc    ecx
  401abb:	add    BYTE PTR [ecx],al
  401abd:	add    BYTE PTR [ebx],al
  401abf:	add    BYTE PTR [edx+edx*8],bh
  401ac2:	inc    ecx
  401ac3:	add    BYTE PTR [ecx],al
  401ac5:	add    BYTE PTR [ebx],al
  401ac7:	add    BYTE PTR [edx+edx*8+0x41],ch
  401acb:	add    BYTE PTR [ecx],al
  401acd:	add    BYTE PTR [ebx],al
  401acf:	add    BYTE PTR [eax-0x2e],ah
  401ad2:	inc    ecx
  401ad3:	add    BYTE PTR [ecx],al
  401ad5:	add    BYTE PTR [ebx],al
  401ad7:	add    BYTE PTR [edx+edx*8+0x41],dl
  401adb:	add    BYTE PTR [ecx],al
  401add:	add    BYTE PTR [ebx],al
  401adf:	add    BYTE PTR [eax-0x2e],cl
  401ae2:	inc    ecx
  401ae3:	add    BYTE PTR [ecx],al
  401ae5:	add    BYTE PTR [ebx],al
  401ae7:	add    BYTE PTR [eax-0x2e],cl
  401aea:	inc    ecx
  401aeb:	add    BYTE PTR [ecx],al
  401aed:	add    BYTE PTR [ebx],al
  401aef:	add    BYTE PTR [edx+edx*8],bh
  401af2:	inc    ecx
  401af3:	add    BYTE PTR [ecx],al
  401af5:	add    BYTE PTR [ebx],al
  401af7:	add    BYTE PTR [eax],dh
  401af9:	rol    BYTE PTR [ecx+0x0],cl
  401afc:	add    DWORD PTR [eax],eax
  401afe:	add    eax,DWORD PTR [eax]
  401b00:	in     al,0xd2
  401b02:	inc    ecx
  401b03:	add    BYTE PTR [ecx],al
  401b05:	add    BYTE PTR [ebx],al
  401b07:	add    BYTE PTR [eax+0xc0041d1],ah
  401b0d:	add    BYTE PTR [esi],cl
  401b0f:	add    ah,cl
  401b11:	into   
  401b12:	inc    ecx
  401b13:	add    BYTE PTR [ebx],al
  401b15:	adc    BYTE PTR [ebx],al
  401b17:	or     al,0x14
  401b19:	into   
  401b1a:	inc    ecx
  401b1b:	add    BYTE PTR [edx],al
  401b1d:	add    BYTE PTR [ecx+esi*1],cl
  401b20:	in     al,0xcd
  401b22:	inc    ecx
  401b23:	add    BYTE PTR [edx],al
  401b25:	add    BYTE PTR [eax+eax*1],cl
  401b28:	int3   
  401b29:	int    0x41
  401b2b:	add    BYTE PTR [edx],al
  401b2d:	add    BYTE PTR [ebx],cl
  401b2f:	add    BYTE PTR [eax+0x30041cd],ch
  401b35:	add    BYTE PTR [eax+eax*1],cl
  401b38:	nop
  401b39:	int    0x41
  401b3b:	add    BYTE PTR [edx],al
  401b3d:	add    BYTE PTR [eax+eax*1],cl
  401b40:	js     0x401b0f
  401b42:	inc    ecx
  401b43:	add    BYTE PTR [edx],al
  401b45:	add    BYTE PTR [eax+eax*1],cl
  401b48:	pusha  
  401b49:	int    0x41
  401b4b:	add    BYTE PTR [edx],al
  401b4d:	add    BYTE PTR [eax+eax*1],cl
  401b50:	dec    eax
  401b51:	int    0x41
  401b53:	add    BYTE PTR [edx],al
  401b55:	add    BYTE PTR [eax+eax*1],cl
  401b58:	xor    ch,cl
  401b5a:	inc    ecx
  401b5b:	add    BYTE PTR [edx],al
  401b5d:	add    BYTE PTR [eax+eax*1],cl
  401b60:	sbb    ch,cl
  401b62:	inc    ecx
  401b63:	add    BYTE PTR [edx],al
  401b65:	add    BYTE PTR [eax+eax*1],cl
  401b68:	add    ch,cl
  401b6a:	inc    ecx
  401b6b:	add    BYTE PTR [edx],al
  401b6d:	add    BYTE PTR [eax+eax*1],cl
  401b70:	call   0x2405d41
  401b75:	add    BYTE PTR [eax+eax*1],cl
  401b78:	ror    ah,1
  401b7a:	inc    ecx
  401b7b:	add    BYTE PTR [edx],al
  401b7d:	add    BYTE PTR [eax+eax*1],cl
  401b80:	mov    eax,0x20041cc
  401b85:	add    BYTE PTR [eax+eax*1],cl
  401b88:	mov    al,ds:0x20041cc
  401b8d:	add    BYTE PTR [eax+eax*1],cl
  401b90:	mov    ah,cl
  401b92:	inc    ecx
  401b93:	add    BYTE PTR [edx],al
  401b95:	add    BYTE PTR [eax+eax*1],cl
  401b98:	jl     0x401b66
  401b9a:	inc    ecx
  401b9b:	add    BYTE PTR [ecx],al
  401b9d:	add    BYTE PTR [eax+eax*1],cl
  401ba0:	jo     0x401b6e
  401ba2:	inc    ecx
  401ba3:	add    BYTE PTR [ecx],al
  401ba5:	add    BYTE PTR [eax+eax*1],cl
  401ba8:	pop    eax
  401ba9:	int3   
  401baa:	inc    ecx
  401bab:	add    BYTE PTR [edx],al
  401bad:	add    BYTE PTR [eax+eax*1],cl
  401bb0:	inc    eax
  401bb1:	int3   
  401bb2:	inc    ecx
  401bb3:	add    BYTE PTR [edx],al
  401bb5:	add    BYTE PTR [eax+eax*1],cl
  401bb8:	sub    ah,cl
  401bba:	inc    ecx
  401bbb:	add    BYTE PTR [edx],al
  401bbd:	add    BYTE PTR [eax+eax*1],cl
  401bc0:	adc    ah,cl
  401bc2:	inc    ecx
  401bc3:	add    BYTE PTR [edx],al
  401bc5:	add    BYTE PTR [eax+eax*1],cl
  401bc8:	clc    
  401bc9:	retf   
  401bca:	inc    ecx
  401bcb:	add    BYTE PTR [edx],al
  401bcd:	add    BYTE PTR [eax+eax*1],cl
  401bd0:	loopne 0x401b9d
  401bd2:	inc    ecx
  401bd3:	add    BYTE PTR [edx],al
  401bd5:	add    BYTE PTR [eax+eax*1],cl
  401bd8:	enter  0x41cb,0x0
  401bdc:	add    al,BYTE PTR [eax]
  401bde:	or     al,0x0
  401be0:	mov    al,0xcb
  401be2:	inc    ecx
  401be3:	add    BYTE PTR [edx],al
  401be5:	add    BYTE PTR [eax+eax*1],cl
  401be8:	push   0x20041cb
  401bed:	add    BYTE PTR [eax+eax*1],cl
  401bf0:	push   eax
  401bf1:	retf   
  401bf2:	inc    ecx
  401bf3:	add    BYTE PTR [edx],al
  401bf5:	add    BYTE PTR [ebx],cl
  401bf7:	add    BYTE PTR [eax],bh
  401bf9:	retf   
  401bfa:	inc    ecx
  401bfb:	add    BYTE PTR [edx],al
  401bfd:	add    BYTE PTR [eax+eax*1],cl
  401c00:	and    bl,cl
  401c02:	inc    ecx
  401c03:	add    BYTE PTR [edx],al
  401c05:	add    BYTE PTR [eax+eax*1],cl
  401c08:	in     al,0xca
  401c0a:	inc    ecx
  401c0b:	add    BYTE PTR [ecx],al
  401c0d:	add    BYTE PTR ds:0x41ca3c00,al
  401c13:	add    BYTE PTR [ecx],al
  401c15:	add    BYTE PTR [edx],al
  401c17:	add    BYTE PTR [eax],dh
  401c19:	retf   0x41
  401c1c:	add    DWORD PTR [eax],eax
  401c1e:	add    al,BYTE PTR [eax]
  401c20:	and    al,0xca
  401c22:	inc    ecx
  401c23:	add    BYTE PTR [ecx],al
  401c25:	add    BYTE PTR [edx],al
  401c27:	add    BYTE PTR [eax],bl
  401c29:	retf   0x41
  401c2c:	add    DWORD PTR [eax],eax
  401c2e:	add    al,BYTE PTR [eax]
  401c30:	or     al,0xca
  401c32:	inc    ecx
  401c33:	add    BYTE PTR [ecx],al
  401c35:	add    BYTE PTR [edx],al
  401c37:	add    BYTE PTR [eax],al
  401c39:	retf   0x41
  401c3c:	add    DWORD PTR [eax],eax
  401c3e:	add    al,BYTE PTR [eax]
  401c40:	hlt    
  401c41:	leave  
  401c42:	inc    ecx
  401c43:	add    BYTE PTR [ecx],al
  401c45:	add    BYTE PTR [edx],al
  401c47:	add    al,ch
  401c49:	leave  
  401c4a:	inc    ecx
  401c4b:	add    BYTE PTR [ecx],al
  401c4d:	add    BYTE PTR [edx],al
  401c4f:	add    BYTE PTR [ecx+ecx*8+0x10041],ch
  401c56:	add    al,BYTE PTR [eax]
  401c58:	mov    al,ds:0x10041c9
  401c5d:	add    BYTE PTR [edx],al
  401c5f:	add    BYTE PTR [eax],bh
  401c61:	lds    eax,FWORD PTR [ecx+0x0]
  401c64:	add    DWORD PTR [eax],eax
  401c66:	add    al,BYTE PTR [eax]
  401c68:	sub    al,0xc5
  401c6a:	inc    ecx
  401c6b:	add    BYTE PTR [ecx],al
  401c6d:	add    BYTE PTR [edx],al
  401c6f:	add    BYTE PTR [esp+eax*8+0x20041],dh
  401c76:	or     al,0x0
  401c78:	pushf  
  401c79:	les    eax,FWORD PTR [ecx+0x0]
  401c7c:	add    al,BYTE PTR [eax]
  401c7e:	or     al,0x0
  401c80:	test   ah,al
  401c82:	inc    ecx
  401c83:	add    BYTE PTR [edx],al
  401c85:	add    BYTE PTR [eax+eax*1],cl
  401c88:	ins    BYTE PTR es:[edi],dx
  401c89:	les    eax,FWORD PTR [ecx+0x0]
  401c8c:	add    al,BYTE PTR [eax]
  401c8e:	or     al,0x0
  401c90:	mov    ah,0xc3
  401c92:	inc    ecx
  401c93:	add    BYTE PTR [eax+eax*1],al
  401c96:	add    eax,DWORD PTR [eax]
  401c98:	cwde   
  401c99:	ret    
  401c9a:	inc    ecx
  401c9b:	add    BYTE PTR [ebx],al
  401c9d:	adc    BYTE PTR [ebx],al
  401c9f:	add    bh,BYTE PTR [eax]
  401ca1:	ret    
  401ca2:	inc    ecx
  401ca3:	add    BYTE PTR [ecx],al
  401ca5:	add    BYTE PTR ds:0x41c31400,cl
  401cab:	add    BYTE PTR [edx],al
  401cad:	add    BYTE PTR [eax+eax*1],al
  401cb0:	or     bl,al
  401cb2:	inc    ecx
  401cb3:	add    BYTE PTR [ecx],al
  401cb5:	add    BYTE PTR ds:0x41c2fc00,cl
  401cbb:	add    BYTE PTR [ecx],al
  401cbd:	add    BYTE PTR ds:0x41c1f000,cl
  401cc3:	add    BYTE PTR [edx],al
  401cc5:	add    BYTE PTR [ebx],cl
  401cc7:	add    ah,ah
  401cc9:	rol    DWORD PTR [ecx+0x0],0x1
  401ccd:	add    BYTE PTR [eax+eax*1],cl
  401cd0:	int3   
  401cd1:	rol    DWORD PTR [ecx+0x0],0x1
  401cd5:	add    BYTE PTR [edx],cl
  401cd7:	add    BYTE PTR [eax+0x30041c1],ch
  401cdd:	add    BYTE PTR [ebx],cl
  401cdf:	add    BYTE PTR [eax-0x3f],bh
  401ce2:	inc    ecx
  401ce3:	add    BYTE PTR [ebx],al
  401ce5:	add    BYTE PTR [ebx],cl
  401ce7:	add    al,ah
  401ce9:	rol    BYTE PTR [ecx+0x0],0x2
  401ced:	add    BYTE PTR [ebx],cl
  401cef:	add    BYTE PTR [eax+eax*8+0x30041],bh
  401cf6:	or     eax,DWORD PTR [eax]
  401cf8:	je     0x401cba
  401cfa:	inc    ecx
  401cfb:	add    BYTE PTR [ecx],al
  401cfd:	add    BYTE PTR ds:0x41c06800,cl
  401d03:	add    BYTE PTR [ecx],al
  401d05:	add    BYTE PTR [eax+eax*1],cl
  401d08:	pop    esp
  401d09:	rol    BYTE PTR [ecx+0x0],0x1
  401d0d:	add    BYTE PTR [ebx],cl
  401d0f:	add    BYTE PTR [eax+eax*8+0x41],al
  401d13:	add    BYTE PTR [edx],al
  401d15:	add    BYTE PTR [eax+eax*1],cl
  401d18:	sub    al,0xc0
  401d1a:	inc    ecx
  401d1b:	add    BYTE PTR [edx],al
  401d1d:	add    BYTE PTR [eax+eax*1],cl
  401d20:	adc    al,0xc0
  401d22:	inc    ecx
  401d23:	add    BYTE PTR [edx],al
  401d25:	add    BYTE PTR [eax+eax*1],cl
  401d28:	cld    
  401d29:	mov    edi,0x20041
  401d2e:	or     al,0x0
  401d30:	in     al,0xbf
  401d32:	inc    ecx
  401d33:	add    BYTE PTR [edx],al
  401d35:	add    BYTE PTR [eax+eax*1],cl
  401d38:	int3   
  401d39:	mov    edi,0x20041
  401d3e:	or     eax,DWORD PTR [eax]
  401d40:	mov    ah,0xbf
  401d42:	inc    ecx
  401d43:	add    BYTE PTR [edx],al
  401d45:	add    BYTE PTR [eax+eax*1],cl
  401d48:	pushf  
  401d49:	mov    edi,0x20041
  401d4e:	or     al,0x0
  401d50:	pop    eax
  401d51:	mov    esi,0x190041
  401d56:	or     esp,DWORD PTR [eax]
  401d58:	and    al,0xbe
  401d5a:	inc    ecx
  401d5b:	add    BYTE PTR [eax+eax*1],al
  401d5e:	or     al,0x0
  401d60:	hlt    
  401d61:	mov    ebp,0x40041
  401d66:	or     eax,DWORD PTR [eax]
  401d68:	fdivr  QWORD PTR [ebp+0x20041]
  401d6e:	or     al,0x0
  401d70:	lods   al,BYTE PTR ds:[esi]
  401d71:	mov    ebp,0x40041
  401d76:	or     al,0x0
  401d78:	xchg   esp,eax
  401d79:	mov    ebp,0x20041
  401d7e:	or     al,0x0
  401d80:	mov    BYTE PTR [ebp+0x10041],bh
  401d86:	or     al,0x0
  401d88:	pop    eax
  401d89:	mov    ebp,0x40041
  401d8e:	or     al,0x0
  401d90:	sub    BYTE PTR [ebp+0x40041],bh
  401d96:	or     al,0x0
  401d98:	sbb    al,0xbd
  401d9a:	inc    ecx
  401d9b:	add    BYTE PTR [ecx],al
  401d9d:	add    BYTE PTR [ebx],cl
  401d9f:	add    BYTE PTR [edi*4+0x20041],al
  401da6:	or     al,0x0
  401da8:	in     al,dx
  401da9:	mov    esp,0x20041
  401dae:	or     eax,DWORD PTR [eax]
  401db0:	loopne 0x401d6e
  401db2:	inc    ecx
  401db3:	add    BYTE PTR [ecx],al
  401db5:	add    BYTE PTR [ebx],cl
  401db7:	add    al,cl
  401db9:	mov    esp,0x20041
  401dbe:	or     al,0x0
  401dc0:	mov    al,0xbc
  401dc2:	inc    ecx
  401dc3:	add    BYTE PTR [edx],al
  401dc5:	add    BYTE PTR [ebx],cl
  401dc7:	add    BYTE PTR [esp+edi*4+0x10041],ah
  401dce:	or     al,0x0
  401dd0:	cwde   
  401dd1:	mov    esp,0x10041
  401dd6:	or     eax,DWORD PTR [eax]
  401dd8:	mov    WORD PTR [ecx+eax*2+0xc000100],?
  401ddf:	add    BYTE PTR [eax+0x10041bc],al
  401de5:	add    BYTE PTR ds:0x41bc7400,cl
  401deb:	add    BYTE PTR [ecx],al
  401ded:	add    BYTE PTR [ebx],cl
  401def:	add    BYTE PTR [eax-0x44],ch
  401df2:	inc    ecx
  401df3:	add    BYTE PTR [ecx],al
  401df5:	add    BYTE PTR [eax+eax*1],cl
  401df8:	pop    esp
  401df9:	mov    esp,0x10041
  401dfe:	or     eax,DWORD PTR [eax]
  401e00:	push   eax
  401e01:	mov    esp,0x10041
  401e06:	or     eax,DWORD PTR [eax]
  401e08:	inc    esp
  401e09:	mov    esp,0x10041
  401e0e:	or     al,0x0
  401e10:	cmp    BYTE PTR [ecx+eax*2+0xc000100],bh
  401e17:	add    al,bl
  401e19:	mov    ebx,0x80041
  401e1e:	or     eax,0x41bbc800
  401e23:	add    BYTE PTR [ecx],al
  401e25:	add    BYTE PTR [eax+eax*1],cl
  401e28:	les    edi,FWORD PTR [ebx+0x10030041]
  401e2e:	add    eax,DWORD PTR [edx]
  401e30:	test   BYTE PTR [ebx+0x40041],bh
  401e36:	or     al,0x0
  401e38:	ins    BYTE PTR es:[edi],dx
  401e39:	mov    ebx,0x20041
  401e3e:	or     al,0x0
  401e40:	push   esp
  401e41:	mov    ebx,0x20041
  401e46:	or     al,0x0
  401e48:	and    al,0xbb
  401e4a:	inc    ecx
  401e4b:	add    BYTE PTR [eax+eax*1],al
  401e4e:	or     al,0x0
  401e50:	or     al,0xbb
  401e52:	inc    ecx
  401e53:	add    BYTE PTR [edx],al
  401e55:	add    BYTE PTR [ebx],cl
  401e57:	add    al,dl
  401e59:	mov    edx,0x40041
  401e5e:	or     al,0x0
  401e60:	mov    al,ds:0x40041ba
  401e65:	add    BYTE PTR [ebx],cl
  401e67:	add    BYTE PTR [eax+0x20041ba],cl
  401e6d:	add    BYTE PTR [ebx],cl
  401e6f:	add    BYTE PTR [eax-0x46],al
  401e72:	inc    ecx
  401e73:	add    BYTE PTR [edx],al
  401e75:	add    BYTE PTR [eax+eax*1],cl
  401e78:	sub    BYTE PTR [edx+0x20041],bh
  401e7e:	or     eax,DWORD PTR [eax]
  401e80:	adc    BYTE PTR [edx+0x20041],bh
  401e86:	or     al,0x0
  401e88:	clc    
  401e89:	mov    ecx,0x20041
  401e8e:	or     al,0x0
  401e90:	enter  0x41b9,0x0
  401e94:	add    al,BYTE PTR [eax]
  401e96:	add    eax,DWORD PTR [eax]
  401e98:	fdivr  DWORD PTR [eax+0xe0041]
  401e9e:	rdtsc  
  401ea0:	sar    BYTE PTR [eax+0x20041],0xc
  401ea7:	add    BYTE PTR [eax+0x20041b8],ch
  401ead:	add    BYTE PTR [ebx],cl
  401eaf:	add    BYTE PTR [eax-0x48],bh
  401eb2:	inc    ecx
  401eb3:	add    BYTE PTR [eax+eax*1],al
  401eb6:	add    eax,DWORD PTR [eax]
  401eb8:	je     0x401e72
  401eba:	inc    ecx
  401ebb:	add    BYTE PTR [ebx],al
  401ebd:	adc    BYTE PTR [ebx],al
  401ebf:	add    bh,BYTE PTR [eax]
  401ec1:	mov    eax,0x40041
  401ec6:	or     al,BYTE PTR [eax]
  401ec8:	or     BYTE PTR [eax+0x40041],bh
  401ece:	or     al,BYTE PTR [eax]
  401ed0:	fdiv   DWORD PTR [edi+0x40041]
  401ed6:	or     al,BYTE PTR [eax]
  401ed8:	test   al,0xb7
  401eda:	inc    ecx
  401edb:	add    BYTE PTR [eax+eax*1],al
  401ede:	or     eax,DWORD PTR [eax]
  401ee0:	js     0x401e99
  401ee2:	inc    ecx
  401ee3:	add    BYTE PTR [eax+eax*1],al
  401ee6:	or     eax,DWORD PTR [eax]
  401ee8:	pusha  
  401ee9:	mov    bh,0x41
  401eeb:	add    BYTE PTR [edx],al
  401eed:	add    BYTE PTR [edx],cl
  401eef:	add    BYTE PTR [eax],dh
  401ef1:	mov    bh,0x41
  401ef3:	add    BYTE PTR [eax+eax*1],al
  401ef6:	or     eax,DWORD PTR [eax]
  401ef8:	add    BYTE PTR [edi+0x40041],dh
  401efe:	or     eax,DWORD PTR [eax]
  401f00:	shl    BYTE PTR [esi+0x40041],1
  401f06:	or     eax,DWORD PTR [eax]
  401f08:	mov    al,ds:0x40041b6
  401f0d:	add    BYTE PTR [ebx],cl
  401f0f:	add    BYTE PTR [eax-0x4a],dh
  401f12:	inc    ecx
  401f13:	add    BYTE PTR [eax+eax*1],al
  401f16:	or     eax,DWORD PTR [eax]
  401f18:	inc    eax
  401f19:	mov    dh,0x41
  401f1b:	add    BYTE PTR [eax+eax*1],al
  401f1e:	or     eax,DWORD PTR [eax]
  401f20:	adc    BYTE PTR [esi+0x40041],dh
  401f26:	or     eax,DWORD PTR [eax]
  401f28:	loopne 0x401edf
  401f2a:	inc    ecx
  401f2b:	add    BYTE PTR [eax+eax*1],al
  401f2e:	or     eax,DWORD PTR [eax]
  401f30:	mov    al,0xb5
  401f32:	inc    ecx
  401f33:	add    BYTE PTR [eax+eax*1],al
  401f36:	or     eax,DWORD PTR [eax]
  401f38:	push   eax
  401f39:	mov    ch,0x41
  401f3b:	add    BYTE PTR [eax+eax*1],al
  401f3e:	or     eax,DWORD PTR [eax]
  401f40:	and    BYTE PTR [ebp+0x40041],dh
  401f46:	or     eax,DWORD PTR [eax]
  401f48:	lock mov ah,0x41
  401f4b:	add    BYTE PTR [eax+eax*1],al
  401f4e:	or     eax,DWORD PTR [eax]
  401f50:	test   al,0xb4
  401f52:	inc    ecx
  401f53:	add    BYTE PTR [eax+eax*1],al
  401f56:	or     eax,DWORD PTR [eax]
  401f58:	pusha  
  401f59:	mov    ah,0x41
  401f5b:	add    BYTE PTR [edx],al
  401f5d:	add    BYTE PTR [ecx],cl
  401f5f:	add    BYTE PTR [eax-0x4c],cl
  401f62:	inc    ecx
  401f63:	add    BYTE PTR [edx],al
  401f65:	add    BYTE PTR [ecx],cl
  401f67:	add    BYTE PTR [eax],dh
  401f69:	mov    ah,0x41
  401f6b:	add    BYTE PTR [edx],al
  401f6d:	add    BYTE PTR [ecx],cl
  401f6f:	add    BYTE PTR [eax],bl
  401f71:	mov    ah,0x41
  401f73:	add    BYTE PTR [edx],al
  401f75:	add    BYTE PTR [ecx],cl
  401f77:	add    al,dl
  401f79:	mov    bl,0x41
  401f7b:	add    BYTE PTR [eax+eax*1],al
  401f7e:	or     eax,DWORD PTR [eax]
  401f80:	mov    al,ds:0x40041b3
  401f85:	add    BYTE PTR [ebx],cl
  401f87:	add    BYTE PTR [eax+0x20041b3],cl
  401f8d:	add    BYTE PTR [edx],cl
  401f8f:	add    BYTE PTR [eax-0x4d],bl
  401f92:	inc    ecx
  401f93:	add    BYTE PTR [eax+eax*1],al
  401f96:	or     al,0x0
  401f98:	loopne 0x401f4c
  401f9a:	inc    ecx
  401f9b:	add    BYTE PTR [eax+eax*1],al
  401f9e:	or     al,0x0
  401fa0:	mov    al,0xb2
  401fa2:	inc    ecx
  401fa3:	add    BYTE PTR [eax+eax*1],al
  401fa6:	or     eax,0x41b26800
  401fab:	add    BYTE PTR [edx],al
  401fad:	add    BYTE PTR [edx],cl
  401faf:	add    BYTE PTR [eax+0x40041b2],al
  401fb5:	add    BYTE PTR [ebx],cl
  401fb7:	add    BYTE PTR [eax+0x40041af],al
  401fbd:	add    BYTE PTR [edx],cl
  401fbf:	add    BYTE PTR [eax-0x51],dl
  401fc2:	inc    ecx
  401fc3:	add    BYTE PTR [eax+eax*1],al
  401fc6:	or     al,BYTE PTR [eax]
  401fc8:	and    BYTE PTR [edi+0x40041],ch
  401fce:	or     al,BYTE PTR [eax]
  401fd0:	or     BYTE PTR [edi+0x20041],ch
  401fd6:	or     al,BYTE PTR [eax]
  401fd8:	fsubr  DWORD PTR [esi+0x40041]
  401fde:	or     al,BYTE PTR [eax]
  401fe0:	test   al,0xae
  401fe2:	inc    ecx
  401fe3:	add    BYTE PTR [eax+eax*1],al
  401fe6:	or     al,BYTE PTR [eax]
  401fe8:	js     0x401f98
  401fea:	inc    ecx
  401feb:	add    BYTE PTR [eax+eax*1],al
  401fee:	or     al,BYTE PTR [eax]
  401ff0:	mov    al,ds:0x40041ad
  401ff5:	add    BYTE PTR [edx],cl
  401ff7:	add    BYTE PTR [eax-0x53],dh
  401ffa:	inc    ecx
  401ffb:	add    BYTE PTR [eax+eax*1],al
  401ffe:	or     eax,DWORD PTR [eax]
  402000:	pop    eax
  402001:	lods   eax,DWORD PTR ds:[esi]
  402002:	inc    ecx
  402003:	add    BYTE PTR [edx],al
  402005:	add    BYTE PTR [edx],cl
  402007:	add    BYTE PTR [eax-0x53],al
  40200a:	inc    ecx
  40200b:	add    BYTE PTR [edx],al
  40200d:	add    BYTE PTR [edx],cl
  40200f:	add    BYTE PTR [eax],dl
  402011:	lods   eax,DWORD PTR ds:[esi]
  402012:	inc    ecx
  402013:	add    BYTE PTR [eax+eax*1],al
  402016:	or     eax,DWORD PTR [eax]
  402018:	loopne 0x401fc6
  40201a:	inc    ecx
  40201b:	add    BYTE PTR [eax+eax*1],al
  40201e:	or     eax,DWORD PTR [eax]
  402020:	enter  0x41ac,0x0
  402024:	add    al,BYTE PTR [eax]
  402026:	or     al,BYTE PTR [eax]
  402028:	mov    al,0xac
  40202a:	inc    ecx
  40202b:	add    BYTE PTR [edx],al
  40202d:	add    BYTE PTR [edx],cl
  40202f:	add    BYTE PTR [eax+0x20041ac],bl
  402035:	add    BYTE PTR [edx],cl
  402037:	add    BYTE PTR [eax+0x20041ac],al
  40203d:	add    BYTE PTR [edx],cl
  40203f:	add    BYTE PTR [eax-0x54],dl
  402042:	inc    ecx
  402043:	add    BYTE PTR [eax+eax*1],al
  402046:	or     eax,DWORD PTR [eax]
  402048:	and    BYTE PTR [ecx+eax*2+0xb000400],ch
  40204f:	add    BYTE PTR [eax],cl
  402051:	lods   al,BYTE PTR ds:[esi]
  402052:	inc    ecx
  402053:	add    BYTE PTR [edx],al
  402055:	add    BYTE PTR [edx],cl
  402057:	add    al,dh
  402059:	stos   DWORD PTR es:[edi],eax
  40205a:	inc    ecx
  40205b:	add    BYTE PTR [edx],al
  40205d:	add    BYTE PTR [edx],cl
  40205f:	add    al,bl
  402061:	stos   DWORD PTR es:[edi],eax
  402062:	inc    ecx
  402063:	add    BYTE PTR [edx],al
  402065:	add    BYTE PTR [ebx],cl
  402067:	add    al,al
  402069:	stos   DWORD PTR es:[edi],eax
  40206a:	inc    ecx
  40206b:	add    BYTE PTR [edx],al
  40206d:	add    BYTE PTR [edx],cl
  40206f:	add    BYTE PTR [eax+0x20041ab],ch
  402075:	add    BYTE PTR [edx],cl
  402077:	add    BYTE PTR [eax+0x20041ab],dl
  40207d:	add    BYTE PTR [edx],cl
  40207f:	add    BYTE PTR [eax-0x55],bh
  402082:	inc    ecx
  402083:	add    BYTE PTR [edx],al
  402085:	add    BYTE PTR [edx],cl
  402087:	add    BYTE PTR [eax-0x55],ah
  40208a:	inc    ecx
  40208b:	add    BYTE PTR [edx],al
  40208d:	add    BYTE PTR [edx],cl
  40208f:	add    BYTE PTR [eax-0x55],cl
  402092:	inc    ecx
  402093:	add    BYTE PTR [edx],al
  402095:	add    BYTE PTR [edx],cl
  402097:	add    BYTE PTR [eax],dh
  402099:	stos   DWORD PTR es:[edi],eax
  40209a:	inc    ecx
  40209b:	add    BYTE PTR [edx],al
  40209d:	add    BYTE PTR [edx],cl
  40209f:	add    BYTE PTR [eax],bl
  4020a1:	stos   DWORD PTR es:[edi],eax
  4020a2:	inc    ecx
  4020a3:	add    BYTE PTR [edx],al
  4020a5:	add    BYTE PTR [edx],cl
  4020a7:	add    BYTE PTR [eax],al
  4020a9:	stos   DWORD PTR es:[edi],eax
  4020aa:	inc    ecx
  4020ab:	add    BYTE PTR [edx],al
  4020ad:	add    BYTE PTR [edx],cl
  4020af:	add    al,ch
  4020b1:	stos   BYTE PTR es:[edi],al
  4020b2:	inc    ecx
  4020b3:	add    BYTE PTR [edx],al
  4020b5:	add    BYTE PTR [edx],cl
  4020b7:	add    al,dl
  4020b9:	stos   BYTE PTR es:[edi],al
  4020ba:	inc    ecx
  4020bb:	add    BYTE PTR [edx],al
  4020bd:	add    BYTE PTR [edx],cl
  4020bf:	add    BYTE PTR [eax+0x20041aa],bh
  4020c5:	add    BYTE PTR [edx],cl
  4020c7:	add    BYTE PTR [eax+0x20041aa],ah
  4020cd:	add    BYTE PTR [edx],cl
  4020cf:	add    BYTE PTR [eax-0x56],dh
  4020d2:	inc    ecx
  4020d3:	add    BYTE PTR [eax+eax*1],al
  4020d6:	or     al,BYTE PTR [eax]
  4020d8:	sub    BYTE PTR [edx+0x40041],ch
  4020de:	or     eax,DWORD PTR [eax]
  4020e0:	clc    
  4020e1:	test   eax,0x40041
  4020e6:	or     eax,DWORD PTR [eax]
  4020e8:	loopne 0x402093
  4020ea:	inc    ecx
  4020eb:	add    BYTE PTR [edx],al
  4020ed:	add    BYTE PTR [edx],cl
  4020ef:	add    BYTE PTR [eax+0x40041a9],dh
  4020f5:	add    BYTE PTR [ebx],cl
  4020f7:	add    BYTE PTR [eax+0x40041a9],al
  4020fd:	add    BYTE PTR [ebx],cl
  4020ff:	add    BYTE PTR [eax],ch
  402101:	test   eax,0x10041
  402106:	or     eax,0x41a8f800
  40210b:	add    BYTE PTR [eax+eax*1],al
  40210e:	or     eax,DWORD PTR [eax]
  402110:	sub    BYTE PTR [eax+0x40041],0xb
  402117:	add    BYTE PTR [eax-0x58],dl
  40211a:	inc    ecx
  40211b:	add    BYTE PTR [eax+eax*1],al
  40211e:	or     al,BYTE PTR [eax]
  402120:	shl    BYTE PTR [edi+0x40041],0xa
  402127:	add    BYTE PTR [eax+0x40041a7],dl
  40212d:	add    BYTE PTR [edx],cl
  40212f:	add    BYTE PTR [eax-0x59],ah
  402132:	inc    ecx
  402133:	add    BYTE PTR [eax+eax*1],al
  402136:	or     al,BYTE PTR [eax]
  402138:	sbb    BYTE PTR [edi+0x60041],ah
  40213e:	or     al,0x0
  402140:	or     BYTE PTR [edi+0x10041],ah
  402146:	or     eax,DWORD PTR [eax]
  402148:	shl    BYTE PTR [esi+0x60041],0xc
  40214f:	add    BYTE PTR [eax-0x5a],bh
  402152:	inc    ecx
  402153:	add    BYTE PTR [esi],al
  402155:	add    BYTE PTR [ebx],cl
  402157:	add    BYTE PTR [eax],dh
  402159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40215a:	inc    ecx
  40215b:	add    BYTE PTR [esi],al
  40215d:	add    BYTE PTR [ebx],cl
  40215f:	add    al,ch
  402161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402162:	inc    ecx
  402163:	add    BYTE PTR [esi],al
  402165:	add    BYTE PTR [ebx],cl
  402167:	add    BYTE PTR [eax+0x60041a5],ah
  40216d:	add    BYTE PTR [ebx],cl
  40216f:	add    BYTE PTR [eax+0x10041a5],dl
  402175:	add    BYTE PTR [ebx],cl
  402177:	add    BYTE PTR [eax-0x5b],cl
  40217a:	inc    ecx
  40217b:	add    BYTE PTR [esi],al
  40217d:	add    BYTE PTR [ebx],cl
  40217f:	add    BYTE PTR [eax],al
  402181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402182:	inc    ecx
  402183:	add    BYTE PTR [esi],al
  402185:	add    BYTE PTR [ebx],cl
  402187:	add    al,dl
  402189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40218a:	inc    ecx
  40218b:	add    BYTE PTR [eax+eax*1],al
  40218e:	or     eax,DWORD PTR [eax]
  402190:	mov    al,ds:0x40041a4
  402195:	add    BYTE PTR [ebx],cl
  402197:	add    BYTE PTR [eax-0x5c],dh
  40219a:	inc    ecx
  40219b:	add    BYTE PTR [eax+eax*1],al
  40219e:	or     eax,DWORD PTR [eax]
  4021a0:	inc    eax
  4021a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021a2:	inc    ecx
  4021a3:	add    BYTE PTR [eax+eax*1],al
  4021a6:	or     eax,DWORD PTR [eax]
  4021a8:	adc    BYTE PTR [ecx+eax*2+0xb000400],ah
  4021af:	add    al,ah
  4021b1:	mov    ds:0x40041,eax
  4021b6:	or     eax,DWORD PTR [eax]
  4021b8:	mov    al,0xa3
  4021ba:	inc    ecx
  4021bb:	add    BYTE PTR [eax+eax*1],al
  4021be:	or     eax,DWORD PTR [eax]
  4021c0:	and    BYTE PTR [ebx+0x40041],0xb
  4021c7:	add    BYTE PTR [eax-0x5d],dl
  4021ca:	inc    ecx
  4021cb:	add    BYTE PTR [edx],al
  4021cd:	add    BYTE PTR [edx],cl
  4021cf:	add    BYTE PTR [eax],ah
  4021d1:	mov    ds:0x40041,eax
  4021d6:	or     eax,DWORD PTR [eax]
  4021d8:	lock mov ds:0x40041,al
  4021de:	or     eax,DWORD PTR [eax]
  4021e0:	fsub   DWORD PTR [edx+0x20041]
  4021e6:	or     eax,DWORD PTR [eax]
  4021e8:	test   al,0xa2
  4021ea:	inc    ecx
  4021eb:	add    BYTE PTR [eax+eax*1],al
  4021ee:	or     eax,DWORD PTR [eax]
  4021f0:	js     0x402194
  4021f2:	inc    ecx
  4021f3:	add    BYTE PTR [eax+eax*1],al
  4021f6:	or     eax,DWORD PTR [eax]
  4021f8:	dec    eax
  4021f9:	mov    ds:0x40041,al
  4021fe:	or     eax,DWORD PTR [eax]
  402200:	xor    BYTE PTR [edx+0x20041],ah
  402206:	or     eax,DWORD PTR [eax]
  402208:	add    BYTE PTR [edx+0x40041],ah
  40220e:	or     eax,DWORD PTR [eax]
  402210:	inc    eax
  402211:	mov    eax,ds:0x40041
  402216:	or     eax,DWORD PTR [eax]
  402218:	clc    
  402219:	mov    al,ds:0x60041
  40221e:	or     eax,DWORD PTR [eax]
  402220:	loopne 0x4021c2
  402222:	inc    ecx
  402223:	add    BYTE PTR [edx],al
  402225:	add    BYTE PTR [ebx],cl
  402227:	add    al,cl
  402229:	mov    al,ds:0x20041
  40222e:	or     al,0x0
  402230:	and    BYTE PTR [eax+0x60041],0xb
  402237:	add    al,cl
  402239:	lahf   
  40223a:	inc    ecx
  40223b:	add    BYTE PTR [esi],al
  40223d:	add    BYTE PTR [ebx],cl
  40223f:	add    BYTE PTR [eax+0x600419f],al
  402245:	add    BYTE PTR [ebx],cl
  402247:	add    al,dh
  402249:	sahf   
  40224a:	inc    ecx
  40224b:	add    BYTE PTR [edx],al
  40224d:	add    BYTE PTR [ebx],cl
  40224f:	add    al,bl
  402251:	sahf   
  402252:	inc    ecx
  402253:	add    BYTE PTR [edx],al
  402255:	add    BYTE PTR [eax+eax*1],cl
  402258:	nop
  402259:	sahf   
  40225a:	inc    ecx
  40225b:	add    BYTE PTR [esi],al
  40225d:	add    BYTE PTR [ebx],cl
  40225f:	add    al,dl
  402261:	popf   
  402262:	inc    ecx
  402263:	add    BYTE PTR [esi],cl
  402265:	add    BYTE PTR [edi],cl
  402267:	xor    DWORD PTR [eax+0x600419c],ebp
  40226d:	add    BYTE PTR [ebx],cl
  40226f:	add    BYTE PTR [eax],dh
  402271:	pushf  
  402272:	inc    ecx
  402273:	add    BYTE PTR [esi],al
  402275:	add    BYTE PTR [ebx],cl
  402277:	add    BYTE PTR [eax-0x65],bl
  40227a:	inc    ecx
  40227b:	add    BYTE PTR [edx],al
  40227d:	add    BYTE PTR [ebx],cl
  40227f:	add    BYTE PTR [eax-0x65],al
  402282:	inc    ecx
  402283:	add    BYTE PTR [edx],al
  402285:	add    BYTE PTR [ebx],cl
  402287:	add    BYTE PTR [eax],ch
  402289:	fwait
  40228a:	inc    ecx
  40228b:	add    BYTE PTR [edx],al
  40228d:	add    BYTE PTR [eax+eax*1],cl
  402290:	adc    BYTE PTR [ebx+0x20041],bl
  402296:	or     al,0x0
  402298:	xor    BYTE PTR [edx+0xe0041],bl
  40229e:	rdtsc  
  4022a0:	adc    al,0x9a
  4022a2:	inc    ecx
  4022a3:	add    BYTE PTR [edx],al
  4022a5:	add    BYTE PTR [ebx],cl
  4022a7:	add    ah,bh
  4022a9:	cdq    
  4022aa:	inc    ecx
  4022ab:	add    BYTE PTR [edx],al
  4022ad:	add    BYTE PTR [ebx],cl
  4022af:	add    ah,ah
  4022b1:	cdq    
  4022b2:	inc    ecx
  4022b3:	add    BYTE PTR [edx],al
  4022b5:	add    BYTE PTR [eax+eax*1],cl
  4022b8:	int3   
  4022b9:	cdq    
  4022ba:	inc    ecx
  4022bb:	add    BYTE PTR [edx],al
  4022bd:	add    BYTE PTR [eax+eax*1],cl
  4022c0:	mov    ah,0x99
  4022c2:	inc    ecx
  4022c3:	add    BYTE PTR [edx],al
  4022c5:	add    BYTE PTR ds:0x41990000,cl
  4022cb:	add    BYTE PTR [edi],cl
  4022cd:	add    BYTE PTR [esi],cl
  4022cf:	add    al,bl
  4022d1:	cwde   
  4022d2:	inc    ecx
  4022d3:	add    BYTE PTR [ecx],al
  4022d5:	add    BYTE PTR ds:0x4198e400,cl
  4022db:	add    BYTE PTR [edx],al
  4022dd:	add    BYTE PTR ds:0x4198c000,cl
  4022e3:	add    BYTE PTR [edx],al
  4022e5:	add    BYTE PTR [ebx],cl
  4022e7:	add    BYTE PTR [eax+0x2004198],ch
  4022ed:	add    BYTE PTR [ebx],cl
  4022ef:	add    BYTE PTR [eax+0x2004198],dl
  4022f5:	add    BYTE PTR [ebx],cl
  4022f7:	add    BYTE PTR [eax-0x68],bh
  4022fa:	inc    ecx
  4022fb:	add    BYTE PTR [edx],al
  4022fd:	add    BYTE PTR [ebx],cl
  4022ff:	add    BYTE PTR [eax-0x68],ah
  402302:	inc    ecx
  402303:	add    BYTE PTR [edx],al
  402305:	add    BYTE PTR [ebx],cl
  402307:	add    BYTE PTR [eax-0x68],cl
  40230a:	inc    ecx
  40230b:	add    BYTE PTR [edx],al
  40230d:	add    BYTE PTR [ebx],cl
  40230f:	add    al,ah
  402311:	xchg   esi,eax
  402312:	inc    ecx
  402313:	add    BYTE PTR [edx],al
  402315:	add    BYTE PTR [ebx],cl
  402317:	add    BYTE PTR [edx*4+0x10041],bh
  40231e:	or     eax,DWORD PTR [eax]
  402320:	xor    BYTE PTR [ebp+0x10041],dl
  402326:	or     eax,DWORD PTR [eax]
  402328:	sbb    BYTE PTR [ebp+0x20041],dl
  40232e:	or     eax,DWORD PTR [eax]
  402330:	call   0x44064c9
  402335:	add    BYTE PTR [ebx],cl
  402337:	add    BYTE PTR [eax-0x7e],al
  40233a:	inc    ecx
  40233b:	add    BYTE PTR [edx],al
  40233d:	add    BYTE PTR [ebx],cl
  40233f:	add    BYTE PTR [eax],ch
  402341:	add    BYTE PTR [ecx+0x0],0x2
  402345:	add    BYTE PTR [ebx],cl
  402347:	add    al,bh
  402349:	add    DWORD PTR [ecx+0x0],0xb0004
  402350:	enter  0x4181,0x0
  402354:	add    al,0x0
  402356:	or     eax,DWORD PTR [eax]
  402358:	cwde   
  402359:	add    DWORD PTR [ecx+0x0],0xb0004
  402360:	push   0x4004181
  402365:	add    BYTE PTR [ebx],cl
  402367:	add    BYTE PTR [eax],bh
  402369:	add    DWORD PTR [ecx+0x0],0xb0004
  402370:	or     BYTE PTR [ecx+0x40041],al
  402376:	or     eax,DWORD PTR [eax]
  402378:	fadd   DWORD PTR [eax+0x40041]
  40237e:	or     eax,DWORD PTR [eax]
  402380:	js     0x402302
  402382:	inc    ecx
  402383:	add    BYTE PTR [eax+eax*1],al
  402386:	or     eax,DWORD PTR [eax]
  402388:	mov    eax,0x400417f
  40238d:	add    BYTE PTR [ebx],cl
  40238f:	add    BYTE PTR [eax+0x400417f],cl
  402395:	add    BYTE PTR [ebx],cl
  402397:	add    BYTE PTR [eax+0x7f],bl
  40239a:	inc    ecx
  40239b:	add    BYTE PTR [eax+eax*1],al
  40239e:	or     eax,DWORD PTR [eax]
  4023a0:	sub    BYTE PTR [edi+0x41],bh
  4023a3:	add    BYTE PTR [eax+eax*1],al
  4023a6:	or     eax,DWORD PTR [eax]
  4023a8:	clc    
  4023a9:	jle    0x4023ec
  4023ab:	add    BYTE PTR [eax+eax*1],al
  4023ae:	or     eax,DWORD PTR [eax]
  4023b0:	lock outs dx,BYTE PTR ds:[esi]
  4023b2:	inc    ecx
  4023b3:	add    BYTE PTR [eax+eax*1],al
  4023b6:	or     eax,DWORD PTR [eax]
  4023b8:	shr    BYTE PTR [esi+0x41],0x0
  4023bc:	add    al,0x0
  4023be:	or     eax,DWORD PTR [eax]
  4023c0:	test   al,0x6e
  4023c2:	inc    ecx
  4023c3:	add    BYTE PTR [edx],al
  4023c5:	add    BYTE PTR [ebx],cl
  4023c7:	add    BYTE PTR [eax+0x200416e],dl
  4023cd:	add    BYTE PTR [ebx],cl
  4023cf:	add    BYTE PTR [eax],dl
  4023d1:	ins    DWORD PTR es:[edi],dx
  4023d2:	inc    ecx
  4023d3:	add    BYTE PTR [edx],al
  4023d5:	add    BYTE PTR [ebx],cl
  4023d7:	add    ah,ch
  4023d9:	ins    BYTE PTR es:[edi],dx
  4023da:	inc    ecx
  4023db:	add    BYTE PTR [edx],al
  4023dd:	add    BYTE PTR [ebx],cl
  4023df:	add    al,ch
  4023e1:	push   0x41
  4023e3:	add    BYTE PTR [eax],cl
  4023e5:	add    BYTE PTR [ebx],cl
  4023e7:	add    BYTE PTR [eax+0x800416a],cl
  4023ed:	add    BYTE PTR [ebx],cl
  4023ef:	add    BYTE PTR [eax+0x6a],bl
  4023f2:	inc    ecx
  4023f3:	add    BYTE PTR [eax+eax*1],al
  4023f6:	or     eax,DWORD PTR [eax]
  4023f8:	sub    BYTE PTR [edx+0x41],ch
  4023fb:	add    BYTE PTR [eax+eax*1],al
  4023fe:	or     eax,DWORD PTR [eax]
  402400:	enter  0x4169,0x0
  402404:	or     BYTE PTR [eax],al
  402406:	or     eax,DWORD PTR [eax]
  402408:	push   0x8004169
  40240d:	add    BYTE PTR [ebx],cl
  40240f:	add    al,cl
  402411:	push   0x20041
  402416:	or     eax,DWORD PTR [eax]
  402418:	mov    al,0x68
  40241a:	inc    ecx
  40241b:	add    BYTE PTR [edx],al
  40241d:	add    BYTE PTR [ebx],cl
  40241f:	add    BYTE PTR [eax+0x2004168],bl
  402425:	add    BYTE PTR [ebx],cl
  402427:	add    BYTE PTR [eax+0x2004168],al
  40242d:	add    BYTE PTR [ebx],cl
  40242f:	add    BYTE PTR [eax+0x68],ch
  402432:	inc    ecx
  402433:	add    BYTE PTR [edx],al
  402435:	add    BYTE PTR [ebx],cl
  402437:	add    BYTE PTR [eax+0x68],dl
  40243a:	inc    ecx
  40243b:	add    BYTE PTR [edx],al
  40243d:	add    BYTE PTR [ebx],cl
  40243f:	add    al,dh
  402441:	addr16 inc ecx
  402443:	add    BYTE PTR [eax],cl
  402445:	add    BYTE PTR [ebx],cl
  402447:	add    BYTE PTR [edi+eiz*2+0x40041],bl
  40244e:	or     eax,DWORD PTR [eax]
  402450:	ins    BYTE PTR es:[edi],dx
  402451:	addr16 inc ecx
  402453:	add    BYTE PTR [eax+eax*1],al
  402456:	or     eax,DWORD PTR [eax]
  402458:	call   0x84065c3
  40245d:	add    BYTE PTR [ebx],cl
  40245f:	add    BYTE PTR [eax+0x8004166],cl
  402465:	add    BYTE PTR [ebx],cl
  402467:	add    BYTE PTR [eax],dh
  402469:	inc    cx
  40246b:	add    BYTE PTR [ecx],al
  40246d:	add    BYTE PTR [eax],cl
  40246f:	add    BYTE PTR [ebp+eiz*2+0x41],ah
  402473:	add    BYTE PTR [ecx],al
  402475:	add    BYTE PTR [eax],cl
  402477:	add    al,cl
  402479:	fs inc ecx
  40247b:	add    BYTE PTR [eax+eax*1],al
  40247e:	or     eax,DWORD PTR [eax]
  402480:	cwde   
  402481:	fs inc ecx
  402483:	add    BYTE PTR [eax+eax*1],al
  402486:	or     eax,DWORD PTR [eax]
  402488:	push   0x4004164
  40248d:	add    BYTE PTR [ebx],cl
  40248f:	add    BYTE PTR [eax+0x60],bh
  402492:	inc    ecx
  402493:	add    BYTE PTR [eax+eax*1],al
  402496:	or     eax,DWORD PTR [eax]
  402498:	dec    eax
  402499:	pusha  
  40249a:	inc    ecx
  40249b:	add    BYTE PTR [eax+eax*1],al
  40249e:	or     eax,DWORD PTR [eax]
  4024a0:	sbb    BYTE PTR [eax+0x41],ah
  4024a3:	add    BYTE PTR [eax+eax*1],al
  4024a6:	or     eax,DWORD PTR [eax]
  4024a8:	call   0x440660c
  4024ad:	add    BYTE PTR [ebx],cl
  4024af:	add    ah,dh
  4024b1:	push   ebx
  4024b2:	inc    ecx
  4024b3:	add    BYTE PTR [edx],al
  4024b5:	add    BYTE PTR [ebx],cl
  4024b7:	add    ah,bl
  4024b9:	push   ebx
  4024ba:	inc    ecx
  4024bb:	add    BYTE PTR [edx],al
  4024bd:	add    BYTE PTR [ebx],cl
  4024bf:	add    ah,al
  4024c1:	push   ebx
  4024c2:	inc    ecx
  4024c3:	add    BYTE PTR [edx],al
  4024c5:	add    BYTE PTR [ebx],cl
  4024c7:	add    BYTE PTR [ebx+edx*2+0x41],bh
  4024cb:	add    BYTE PTR [edx],al
  4024cd:	add    BYTE PTR [ebx],cl
  4024cf:	add    BYTE PTR [ebx+edx*2],dh
  4024d2:	inc    ecx
  4024d3:	add    BYTE PTR [edx],al
  4024d5:	add    BYTE PTR [ebx],cl
  4024d7:	add    BYTE PTR [ebx+edx*2],bl
  4024da:	inc    ecx
  4024db:	add    BYTE PTR [edx],al
  4024dd:	add    BYTE PTR [ebx],cl
  4024df:	add    BYTE PTR [ebx+edx*2],al
  4024e2:	inc    ecx
  4024e3:	add    BYTE PTR [edx],al
  4024e5:	add    BYTE PTR [ebx],cl
  4024e7:	add    ah,ch
  4024e9:	push   edx
  4024ea:	inc    ecx
  4024eb:	add    BYTE PTR [edx],al
  4024ed:	add    BYTE PTR [ebx],cl
  4024ef:	add    ah,dl
  4024f1:	push   edx
  4024f2:	inc    ecx
  4024f3:	add    BYTE PTR [edx],al
  4024f5:	add    BYTE PTR [ebx],cl
  4024f7:	add    BYTE PTR [edx+edx*2+0x20041],bh
  4024fe:	or     eax,DWORD PTR [eax]
  402500:	je     0x402554
  402502:	inc    ecx
  402503:	add    BYTE PTR [edx],al
  402505:	add    BYTE PTR [ebx],cl
  402507:	add    BYTE PTR [edx+edx*2+0x41],bl
  40250b:	add    BYTE PTR [edx],al
  40250d:	add    BYTE PTR [ebx],cl
  40250f:	add    BYTE PTR [edx+edx*2+0x41],al
  402513:	add    BYTE PTR [edx],al
  402515:	add    BYTE PTR [ebx],cl
  402517:	add    BYTE PTR [edx+edx*2],ch
  40251a:	inc    ecx
  40251b:	add    BYTE PTR [edx],al
  40251d:	add    BYTE PTR [ebx],cl
  40251f:	add    ah,ah
  402521:	push   ecx
  402522:	inc    ecx
  402523:	add    BYTE PTR [edx],al
  402525:	add    BYTE PTR [ebx],cl
  402527:	add    BYTE PTR [ecx+edx*2+0x41],ch
  40252b:	add    BYTE PTR [edx],al
  40252d:	add    BYTE PTR [ebx],cl
  40252f:	add    ah,dl
  402531:	dec    esp
  402532:	inc    ecx
  402533:	add    BYTE PTR [edx],al
  402535:	add    BYTE PTR [ebx],cl
  402537:	add    BYTE PTR [esp+ecx*2+0x40041],ah
  40253e:	or     eax,DWORD PTR [eax]
  402540:	je     0x40258e
  402542:	inc    ecx
  402543:	add    BYTE PTR [eax+eax*1],al
  402546:	or     eax,DWORD PTR [eax]
  402548:	inc    esp
  402549:	dec    esp
  40254a:	inc    ecx
  40254b:	add    BYTE PTR [eax+eax*1],al
  40254e:	or     eax,DWORD PTR [eax]
  402550:	adc    al,0x4c
  402552:	inc    ecx
  402553:	add    BYTE PTR [eax+eax*1],al
  402556:	or     eax,DWORD PTR [eax]
  402558:	in     al,0x4b
  40255a:	inc    ecx
  40255b:	add    BYTE PTR [eax+eax*1],al
  40255e:	or     eax,DWORD PTR [eax]
  402560:	mov    ah,0x4b
  402562:	inc    ecx
  402563:	add    BYTE PTR [eax+eax*1],al
  402566:	or     eax,DWORD PTR [eax]
  402568:	test   BYTE PTR [ebx+0x41],cl
  40256b:	add    BYTE PTR [eax+eax*1],al
  40256e:	or     eax,DWORD PTR [eax]
  402570:	push   esp
  402571:	dec    ebx
  402572:	inc    ecx
  402573:	add    BYTE PTR [eax+eax*1],al
  402576:	or     eax,DWORD PTR [eax]
  402578:	and    al,0x4b
  40257a:	inc    ecx
  40257b:	add    BYTE PTR [eax+eax*1],al
  40257e:	or     eax,DWORD PTR [eax]
  402580:	hlt    
  402581:	dec    edx
  402582:	inc    ecx
  402583:	add    BYTE PTR [eax+eax*1],al
  402586:	or     eax,DWORD PTR [eax]
  402588:	les    ecx,FWORD PTR [edx+0x41]
  40258b:	add    BYTE PTR [eax+eax*1],al
  40258e:	or     eax,DWORD PTR [eax]
  402590:	xchg   esp,eax
  402591:	dec    edx
  402592:	inc    ecx
  402593:	add    BYTE PTR [eax+eax*1],al
  402596:	or     eax,DWORD PTR [eax]
  402598:	add    BYTE PTR [eax+0x41],0x0
  40259c:	add    al,0x0
  40259e:	or     eax,DWORD PTR [eax]
  4025a0:	mov    al,ds:0x400413e
  4025a5:	add    BYTE PTR [ebx],cl
  4025a7:	add    al,cl
  4025a9:	cmp    eax,0x40041
  4025ae:	or     eax,DWORD PTR [eax]
  4025b0:	and    BYTE PTR ds:0x40041,bh
  4025b6:	or     eax,DWORD PTR [eax]
  4025b8:	lock cmp al,0x41
  4025bb:	add    BYTE PTR [eax+eax*1],al
  4025be:	or     eax,DWORD PTR [eax]
  4025c0:	hlt    
  4025c1:	cmp    eax,DWORD PTR [ecx+0x0]
  4025c4:	add    al,0x0
  4025c6:	or     eax,DWORD PTR [eax]
  4025c8:	les    edi,FWORD PTR [ebx]
  4025ca:	inc    ecx
  4025cb:	add    BYTE PTR [eax+eax*1],al
  4025ce:	or     eax,DWORD PTR [eax]
  4025d0:	lods   al,BYTE PTR ds:[esi]
  4025d1:	cmp    eax,DWORD PTR [ecx+0x0]
  4025d4:	add    al,BYTE PTR [eax]
  4025d6:	or     eax,DWORD PTR [eax]
  4025d8:	xchg   esp,eax
  4025d9:	cmp    eax,DWORD PTR [ecx+0x0]
  4025dc:	add    al,BYTE PTR [eax]
  4025de:	or     eax,DWORD PTR [eax]
  4025e0:	cmp    BYTE PTR [edx],bh
  4025e2:	inc    ecx
  4025e3:	add    BYTE PTR [edx],al
  4025e5:	add    BYTE PTR [ebx],cl
  4025e7:	xor    eax,ebp
  4025e9:	cmp    DWORD PTR [ecx+0x0],eax
  4025ec:	push   es
  4025ed:	add    BYTE PTR [ebx],cl
  4025ef:	xor    DWORD PTR [eax],ebp
  4025f1:	cmp    DWORD PTR [ecx+0x0],eax
  4025f4:	push   cs
  4025f5:	add    BYTE PTR [edi],cl
  4025f7:	xor    DWORD PTR [eax],edx
  4025f9:	cmp    DWORD PTR [ecx+0x0],eax
  4025fc:	add    al,BYTE PTR [eax]
  4025fe:	or     eax,DWORD PTR [eax]
  402600:	clc    
  402601:	cmp    BYTE PTR [ecx+0x0],al
  402604:	add    al,BYTE PTR [eax]
  402606:	or     eax,DWORD PTR [eax]
  402608:	add    BYTE PTR [ebx+0x10041],bh
  40260e:	or     eax,DWORD PTR [eax]
  402610:	pop    eax
  402611:	(bad)  
  402612:	inc    ecx
  402613:	add    BYTE PTR [edx],al
  402615:	add    BYTE PTR ds:0x41d59800,cl
  40261b:	add    BYTE PTR [edx],al
  40261d:	add    BYTE PTR ds:0x41d50800,cl
  402623:	add    BYTE PTR [eax+eax*1],al
  402626:	or     eax,0x41d4f000
  40262b:	add    BYTE PTR [edx],al
  40262d:	add    BYTE PTR ds:0x41d4d800,cl
  402633:	add    BYTE PTR [edx],al
  402635:	add    BYTE PTR ds:0x41d4c000,cl
  40263b:	add    BYTE PTR [edx],al
  40263d:	add    BYTE PTR ds:0x41d4a800,cl
  402643:	add    BYTE PTR [edx],al
  402645:	add    BYTE PTR ds:0x41d31c00,cl
  40264b:	add    BYTE PTR [edx],al
  40264d:	add    BYTE PTR ds:0x41cee800,cl
  402653:	add    BYTE PTR [edx],al
  402655:	add    BYTE PTR [ebx],cl
  402657:	add    al,dl
  402659:	into   
  40265a:	inc    ecx
  40265b:	add    BYTE PTR [edx],al
  40265d:	add    BYTE PTR [ebx],cl
  40265f:	add    BYTE PTR [esi+ecx*8+0x20041],ah
  402666:	or     eax,DWORD PTR [eax]
  402668:	mov    esi,cs
  40266a:	inc    ecx
  40266b:	add    BYTE PTR [edx],al
  40266d:	add    BYTE PTR [eax+eax*1],cl
  402670:	or     bl,cl
  402672:	inc    ecx
  402673:	add    BYTE PTR [edx],al
  402675:	add    BYTE PTR ds:0x41caf000,cl
  40267b:	add    BYTE PTR [edx],al
  40267d:	add    BYTE PTR ds:0x41cacc00,cl
  402683:	add    BYTE PTR [edx],al
  402685:	add    BYTE PTR ds:0x41c37400,cl
  40268b:	add    BYTE PTR [edx],al
  40268d:	add    BYTE PTR ds:0x41c09800,cl
  402693:	add    BYTE PTR [edx],al
  402695:	add    BYTE PTR [ebx],cl
  402697:	add    BYTE PTR [eax+0x20041c0],al
  40269d:	add    BYTE PTR [ebx],cl
  40269f:	add    BYTE PTR [edi+edi*4+0x20041],al
  4026a6:	add    eax,DWORD PTR [eax]
  4026a8:	jo     0x402664
  4026aa:	inc    ecx
  4026ab:	add    BYTE PTR [edx],al
  4026ad:	add    BYTE PTR ds:0x41b9e000,cl
  4026b3:	add    BYTE PTR [edx],al
  4026b5:	add    BYTE PTR ds:0x41b58000,cl
  4026bb:	add    BYTE PTR [eax+eax*1],al
  4026be:	or     eax,0x41b49000
  4026c3:	add    BYTE PTR [edx],al
  4026c5:	add    BYTE PTR ds:0x41b47800,cl
  4026cb:	add    BYTE PTR [edx],al
  4026cd:	add    BYTE PTR ds:0x41b40000,cl
  4026d3:	add    BYTE PTR [edx],al
  4026d5:	add    BYTE PTR ds:0x41b33400,cl
  4026db:	add    BYTE PTR [ebx],al
  4026dd:	add    BYTE PTR ds:0x41b31000,cl
  4026e3:	add    BYTE PTR [ebx],al
  4026e5:	add    BYTE PTR ds:0x41b24400,cl
  4026eb:	add    BYTE PTR [ebx],al
  4026ed:	add    BYTE PTR ds:0x41b22000,cl
  4026f3:	add    BYTE PTR [ebx],al
  4026f5:	add    BYTE PTR ds:0x41b20800,cl
  4026fb:	add    BYTE PTR [edx],al
  4026fd:	add    BYTE PTR ds:0x41b1f000,cl
  402703:	add    BYTE PTR [edx],al
  402705:	add    BYTE PTR ds:0x41b1d800,cl
  40270b:	add    BYTE PTR [edx],al
  40270d:	add    BYTE PTR [eax+eax*1],cl
  402710:	shl    BYTE PTR [ecx+0x20041],0xc
  402717:	add    BYTE PTR [eax-0x4f],bh
  40271a:	inc    ecx
  40271b:	add    BYTE PTR [eax+eax*1],al
  40271e:	or     al,0x0
  402720:	xor    BYTE PTR [esi+0x20041],ch
  402726:	or     al,0x0
  402728:	sbb    BYTE PTR [esi+0x20041],ch
  40272e:	or     al,0x0
  402730:	shr    BYTE PTR [ebp+0x40041],1
  402736:	or     eax,DWORD PTR [eax]
  402738:	cmp    BYTE PTR [eax+0x20041],ch
  40273e:	or     eax,DWORD PTR [eax]
  402740:	and    BYTE PTR [eax+0x20041],ch
  402746:	or     al,0x0
  402748:	or     BYTE PTR [eax+0x20041],ch
  40274e:	or     al,0x0
  402750:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402752:	inc    ecx
  402753:	add    BYTE PTR [edx],al
  402755:	add    BYTE PTR [ebx],cl
  402757:	add    BYTE PTR [eax-0x61],ch
  40275a:	inc    ecx
  40275b:	add    BYTE PTR [edx],al
  40275d:	add    BYTE PTR ds:0x419f5000,cl
  402763:	add    BYTE PTR [edx],al
  402765:	add    BYTE PTR [eax+eax*1],cl
  402768:	cmp    BYTE PTR [edi+0x20041],bl
  40276e:	or     al,0x0
  402770:	and    BYTE PTR [edi+0x20041],bl
  402776:	or     al,0x0
  402778:	or     BYTE PTR [edi+0x20041],bl
  40277e:	or     al,0x0
  402780:	js     0x402720
  402782:	inc    ecx
  402783:	add    BYTE PTR [edx],al
  402785:	add    BYTE PTR ds:0x419c9000,cl
  40278b:	add    BYTE PTR [edx],al
  40278d:	add    BYTE PTR [eax+eax*1],cl
  402790:	js     0x40272e
  402792:	inc    ecx
  402793:	add    BYTE PTR [edx],al
  402795:	add    BYTE PTR ds:0x419c1800,cl
  40279b:	add    BYTE PTR [edx],al
  40279d:	add    BYTE PTR [eax+eax*1],cl
  4027a0:	add    BYTE PTR [ecx+eax*2+0xd000200],bl
  4027a7:	add    al,ch
  4027a9:	fwait
  4027aa:	inc    ecx
  4027ab:	add    BYTE PTR [edx],al
  4027ad:	add    BYTE PTR [ebx],cl
  4027af:	add    al,dl
  4027b1:	fwait
  4027b2:	inc    ecx
  4027b3:	add    BYTE PTR [edx],al
  4027b5:	add    BYTE PTR [ebx],cl
  4027b7:	add    BYTE PTR [eax],bl
  4027b9:	cwde   
  4027ba:	inc    ecx
  4027bb:	add    BYTE PTR [eax+eax*1],al
  4027be:	or     eax,DWORD PTR [eax]
  4027c0:	call   0x440695c
  4027c5:	add    BYTE PTR [ebx],cl
  4027c7:	add    al,dl
  4027c9:	xchg   edi,eax
  4027ca:	inc    ecx
  4027cb:	add    BYTE PTR [edx],al
  4027cd:	add    BYTE PTR [ebx],cl
  4027cf:	add    BYTE PTR [eax+0x2004197],bh
  4027d5:	add    BYTE PTR [ebx],cl
  4027d7:	add    BYTE PTR [eax+0x4004197],cl
  4027dd:	add    BYTE PTR [ebx],cl
  4027df:	add    BYTE PTR [eax-0x69],bl
  4027e2:	inc    ecx
  4027e3:	add    BYTE PTR [eax+eax*1],al
  4027e6:	or     eax,DWORD PTR [eax]
  4027e8:	inc    eax
  4027e9:	xchg   edi,eax
  4027ea:	inc    ecx
  4027eb:	add    BYTE PTR [edx],al
  4027ed:	add    BYTE PTR [ebx],cl
  4027ef:	add    BYTE PTR [eax],ch
  4027f1:	xchg   edi,eax
  4027f2:	inc    ecx
  4027f3:	add    BYTE PTR [edx],al
  4027f5:	add    BYTE PTR [ebx],cl
  4027f7:	add    BYTE PTR [eax],dl
  4027f9:	xchg   edi,eax
  4027fa:	inc    ecx
  4027fb:	add    BYTE PTR [edx],al
  4027fd:	add    BYTE PTR [ebx],cl
  4027ff:	add    al,bh
  402801:	xchg   esi,eax
  402802:	inc    ecx
  402803:	add    BYTE PTR [edx],al
  402805:	add    BYTE PTR [ebx],cl
  402807:	add    al,cl
  402809:	xchg   esi,eax
  40280a:	inc    ecx
  40280b:	add    BYTE PTR [edx],al
  40280d:	add    BYTE PTR [ebx],cl
  40280f:	add    BYTE PTR [eax+0x4004196],bl
  402815:	add    BYTE PTR [ebx],cl
  402817:	add    BYTE PTR [eax-0x6a],ch
  40281a:	inc    ecx
  40281b:	add    BYTE PTR [eax+eax*1],al
  40281e:	or     eax,DWORD PTR [eax]
  402820:	cmp    BYTE PTR [esi+0x40041],dl
  402826:	or     eax,DWORD PTR [eax]
  402828:	or     BYTE PTR [esi+0x40041],dl
  40282e:	or     eax,DWORD PTR [eax]
  402830:	mov    eax,0x4004194
  402835:	add    BYTE PTR [ebx],cl
  402837:	add    BYTE PTR [eax+0x4004194],cl
  40283d:	add    BYTE PTR [ebx],cl
  40283f:	add    BYTE PTR [eax-0x6c],dh
  402842:	inc    ecx
  402843:	add    BYTE PTR [edx],al
  402845:	add    BYTE PTR [ebx],cl
  402847:	add    BYTE PTR [eax-0x6c],bl
  40284a:	inc    ecx
  40284b:	add    BYTE PTR [edx],al
  40284d:	add    BYTE PTR [ebx],cl
  40284f:	add    BYTE PTR [eax],ch
  402851:	xchg   esp,eax
  402852:	inc    ecx
  402853:	add    BYTE PTR [eax+eax*1],al
  402856:	or     eax,DWORD PTR [eax]
  402858:	clc    
  402859:	xchg   ebx,eax
  40285a:	inc    ecx
  40285b:	add    BYTE PTR [eax+eax*1],al
  40285e:	or     eax,DWORD PTR [eax]
  402860:	loopne 0x4027f5
  402862:	inc    ecx
  402863:	add    BYTE PTR [edx],al
  402865:	add    BYTE PTR [ebx],cl
  402867:	add    al,cl
  402869:	xchg   ebx,eax
  40286a:	inc    ecx
  40286b:	add    BYTE PTR [edx],al
  40286d:	add    BYTE PTR [ebx],cl
  40286f:	add    BYTE PTR [eax+0x4004193],bl
  402875:	add    BYTE PTR [ebx],cl
  402877:	add    BYTE PTR [eax-0x6d],ch
  40287a:	inc    ecx
  40287b:	add    BYTE PTR [eax+eax*1],al
  40287e:	or     eax,DWORD PTR [eax]
  402880:	push   eax
  402881:	xchg   ebx,eax
  402882:	inc    ecx
  402883:	add    BYTE PTR [edx],al
  402885:	add    BYTE PTR [ebx],cl
  402887:	add    BYTE PTR [eax],bh
  402889:	xchg   ebx,eax
  40288a:	inc    ecx
  40288b:	add    BYTE PTR [edx],al
  40288d:	add    BYTE PTR [ebx],cl
  40288f:	add    BYTE PTR [eax],cl
  402891:	xchg   ebx,eax
  402892:	inc    ecx
  402893:	add    BYTE PTR [eax+eax*1],al
  402896:	or     eax,DWORD PTR [eax]
  402898:	fcom   DWORD PTR [edx+0x40041]
  40289e:	or     eax,DWORD PTR [eax]
  4028a0:	rcl    BYTE PTR [edx+0x20041],0xb
  4028a7:	add    BYTE PTR [eax+0x2004192],ch
  4028ad:	add    BYTE PTR [ebx],cl
  4028af:	add    BYTE PTR [eax-0x6e],bh
  4028b2:	inc    ecx
  4028b3:	add    BYTE PTR [eax+eax*1],al
  4028b6:	or     eax,DWORD PTR [eax]
  4028b8:	dec    eax
  4028b9:	xchg   edx,eax
  4028ba:	inc    ecx
  4028bb:	add    BYTE PTR [eax+eax*1],al
  4028be:	or     eax,DWORD PTR [eax]
  4028c0:	xor    BYTE PTR [edx+0x20041],dl
  4028c6:	or     eax,DWORD PTR [eax]
  4028c8:	sbb    BYTE PTR [edx+0x20041],dl
  4028ce:	or     eax,DWORD PTR [eax]
  4028d0:	call   0x4406a66
  4028d5:	add    BYTE PTR [ebx],cl
  4028d7:	add    BYTE PTR [eax+0x4004191],bh
  4028dd:	add    BYTE PTR [ebx],cl
  4028df:	add    BYTE PTR [eax+0x2004191],ah
  4028e5:	add    BYTE PTR [ebx],cl
  4028e7:	add    BYTE PTR [eax+0x2004191],cl
  4028ed:	add    BYTE PTR [ebx],cl
  4028ef:	add    BYTE PTR [eax-0x6f],bl
  4028f2:	inc    ecx
  4028f3:	add    BYTE PTR [eax+eax*1],al
  4028f6:	or     eax,DWORD PTR [eax]
  4028f8:	sub    BYTE PTR [ecx+0x40041],dl
  4028fe:	or     eax,DWORD PTR [eax]
  402900:	adc    BYTE PTR [ecx+0x20041],dl
  402906:	or     eax,DWORD PTR [eax]
  402908:	clc    
  402909:	nop
  40290a:	inc    ecx
  40290b:	add    BYTE PTR [edx],al
  40290d:	add    BYTE PTR [ebx],cl
  40290f:	add    al,cl
  402911:	nop
  402912:	inc    ecx
  402913:	add    BYTE PTR [eax+eax*1],al
  402916:	or     eax,DWORD PTR [eax]
  402918:	cwde   
  402919:	nop
  40291a:	inc    ecx
  40291b:	add    BYTE PTR [eax+eax*1],al
  40291e:	or     eax,DWORD PTR [eax]
  402920:	adc    BYTE PTR [eax+0x20041],0xb
  402927:	add    BYTE PTR [eax-0x70],ch
  40292a:	inc    ecx
  40292b:	add    BYTE PTR [edx],al
  40292d:	add    BYTE PTR [ebx],cl
  40292f:	add    BYTE PTR [eax],bh
  402931:	nop
  402932:	inc    ecx
  402933:	add    BYTE PTR [eax+eax*1],al
  402936:	or     eax,DWORD PTR [eax]
  402938:	or     BYTE PTR [eax+0x40041],dl
  40293e:	or     eax,DWORD PTR [eax]
  402940:	lock pop DWORD PTR [ecx+0x0]
  402944:	add    al,BYTE PTR [eax]
  402946:	or     eax,DWORD PTR [eax]
  402948:	fmul   DWORD PTR [edi+0x20041]
  40294e:	or     eax,DWORD PTR [eax]
  402950:	test   al,0x8f
  402952:	inc    ecx
  402953:	add    BYTE PTR [eax+eax*1],al
  402956:	or     eax,DWORD PTR [eax]
  402958:	js     0x4028e9
  40295a:	inc    ecx
  40295b:	add    BYTE PTR [eax+eax*1],al
  40295e:	or     eax,DWORD PTR [eax]
  402960:	pusha  
  402961:	pop    DWORD PTR [ecx+0x0]
  402964:	add    al,BYTE PTR [eax]
  402966:	or     eax,DWORD PTR [eax]
  402968:	dec    eax
  402969:	pop    DWORD PTR [ecx+0x0]
  40296c:	add    al,BYTE PTR [eax]
  40296e:	or     eax,DWORD PTR [eax]
  402970:	sbb    BYTE PTR [edi+0x40041],cl
  402976:	or     eax,DWORD PTR [eax]
  402978:	call   0x4406b0b
  40297d:	add    BYTE PTR [ebx],cl
  40297f:	add    al,dl
  402981:	mov    es,WORD PTR [ecx+0x0]
  402984:	add    al,BYTE PTR [eax]
  402986:	or     eax,DWORD PTR [eax]
  402988:	mov    eax,0x200418e
  40298d:	add    BYTE PTR [ebx],cl
  40298f:	add    BYTE PTR [eax+0x400418e],cl
  402995:	add    BYTE PTR [ebx],cl
  402997:	add    BYTE PTR [eax-0x72],bl
  40299a:	inc    ecx
  40299b:	add    BYTE PTR [eax+eax*1],al
  40299e:	or     eax,DWORD PTR [eax]
  4029a0:	inc    eax
  4029a1:	mov    es,WORD PTR [ecx+0x0]
  4029a4:	add    al,BYTE PTR [eax]
  4029a6:	or     eax,DWORD PTR [eax]
  4029a8:	sub    BYTE PTR [esi+0x20041],cl
  4029ae:	or     eax,DWORD PTR [eax]
  4029b0:	clc    
  4029b1:	lea    eax,[ecx+0x0]
  4029b4:	add    al,0x0
  4029b6:	or     eax,DWORD PTR [eax]
  4029b8:	enter  0x418d,0x0
  4029bc:	add    al,0x0
  4029be:	or     eax,DWORD PTR [eax]
  4029c0:	mov    al,0x8d
  4029c2:	inc    ecx
  4029c3:	add    BYTE PTR [edx],al
  4029c5:	add    BYTE PTR [ebx],cl
  4029c7:	add    BYTE PTR [eax+0x200418d],bl
  4029cd:	add    BYTE PTR [ebx],cl
  4029cf:	add    BYTE PTR [eax-0x73],ch
  4029d2:	inc    ecx
  4029d3:	add    BYTE PTR [eax+eax*1],al
  4029d6:	or     eax,DWORD PTR [eax]
  4029d8:	cmp    BYTE PTR [ebp+0x40041],cl
  4029de:	or     eax,DWORD PTR [eax]
  4029e0:	and    BYTE PTR [ebp+0x20041],cl
  4029e6:	or     eax,DWORD PTR [eax]
  4029e8:	or     BYTE PTR [ebp+0x20041],cl
  4029ee:	or     eax,DWORD PTR [eax]
  4029f0:	fmul   DWORD PTR [ecx+eax*2+0xb000400]
  4029f7:	add    BYTE PTR [eax+0x400418c],ch
  4029fd:	add    BYTE PTR [ebx],cl
  4029ff:	add    BYTE PTR [eax+0x200418c],dl
  402a05:	add    BYTE PTR [ebx],cl
  402a07:	add    BYTE PTR [eax-0x74],bh
  402a0a:	inc    ecx
  402a0b:	add    BYTE PTR [edx],al
  402a0d:	add    BYTE PTR [ebx],cl
  402a0f:	add    BYTE PTR [eax-0x74],cl
  402a12:	inc    ecx
  402a13:	add    BYTE PTR [eax+eax*1],al
  402a16:	or     eax,DWORD PTR [eax]
  402a18:	sbb    BYTE PTR [ecx+eax*2+0xb000400],cl
  402a1f:	add    BYTE PTR [eax],al
  402a21:	mov    WORD PTR [ecx+0x0],es
  402a24:	add    al,BYTE PTR [eax]
  402a26:	or     eax,DWORD PTR [eax]
  402a28:	call   0x2406bb8
  402a2d:	add    BYTE PTR [ebx],cl
  402a2f:	add    BYTE PTR [eax+0x400418b],bh
  402a35:	add    BYTE PTR [ebx],cl
  402a37:	add    BYTE PTR [eax+0x400418b],cl
  402a3d:	add    BYTE PTR [ebx],cl
  402a3f:	add    BYTE PTR [eax-0x75],dh
  402a42:	inc    ecx
  402a43:	add    BYTE PTR [edx],al
  402a45:	add    BYTE PTR [ebx],cl
  402a47:	add    BYTE PTR [eax-0x75],bl
  402a4a:	inc    ecx
  402a4b:	add    BYTE PTR [edx],al
  402a4d:	add    BYTE PTR [ebx],cl
  402a4f:	add    BYTE PTR [eax],ch
  402a51:	mov    eax,DWORD PTR [ecx+0x0]
  402a54:	add    al,0x0
  402a56:	or     eax,DWORD PTR [eax]
  402a58:	clc    
  402a59:	mov    al,BYTE PTR [ecx+0x0]
  402a5c:	add    al,0x0
  402a5e:	or     eax,DWORD PTR [eax]
  402a60:	loopne 0x4029ec
  402a62:	inc    ecx
  402a63:	add    BYTE PTR [edx],al
  402a65:	add    BYTE PTR [ebx],cl
  402a67:	add    al,cl
  402a69:	mov    al,BYTE PTR [ecx+0x0]
  402a6c:	add    al,BYTE PTR [eax]
  402a6e:	or     eax,DWORD PTR [eax]
  402a70:	cwde   
  402a71:	mov    al,BYTE PTR [ecx+0x0]
  402a74:	add    al,0x0
  402a76:	or     eax,DWORD PTR [eax]
  402a78:	push   0x400418a
  402a7d:	add    BYTE PTR [ebx],cl
  402a7f:	add    BYTE PTR [eax-0x76],dl
  402a82:	inc    ecx
  402a83:	add    BYTE PTR [edx],al
  402a85:	add    BYTE PTR [ebx],cl
  402a87:	add    BYTE PTR [eax],bh
  402a89:	mov    al,BYTE PTR [ecx+0x0]
  402a8c:	add    al,BYTE PTR [eax]
  402a8e:	or     eax,DWORD PTR [eax]
  402a90:	or     BYTE PTR [edx+0x40041],cl
  402a96:	or     eax,DWORD PTR [eax]
  402a98:	fmul   DWORD PTR [ecx+0x40041]
  402a9e:	or     eax,DWORD PTR [eax]
  402aa0:	ror    BYTE PTR [ecx+0x20041],0xb
  402aa7:	add    BYTE PTR [eax+0x2004189],ch
  402aad:	add    BYTE PTR [ebx],cl
  402aaf:	add    BYTE PTR [eax-0x77],bh
  402ab2:	inc    ecx
  402ab3:	add    BYTE PTR [eax+eax*1],al
  402ab6:	or     eax,DWORD PTR [eax]
  402ab8:	dec    eax
  402ab9:	mov    DWORD PTR [ecx+0x0],eax
  402abc:	add    al,0x0
  402abe:	or     eax,DWORD PTR [eax]
  402ac0:	xor    BYTE PTR [ecx+0x20041],cl
  402ac6:	or     eax,DWORD PTR [eax]
  402ac8:	sbb    BYTE PTR [ecx+0x20041],cl
  402ace:	or     eax,DWORD PTR [eax]
  402ad0:	call   0x4406c5d
  402ad5:	add    BYTE PTR [ebx],cl
  402ad7:	add    BYTE PTR [eax+0x4004188],bh
  402add:	add    BYTE PTR [ebx],cl
  402adf:	add    BYTE PTR [eax+0x2004188],ah
  402ae5:	add    BYTE PTR [ebx],cl
  402ae7:	add    BYTE PTR [eax+0x2004188],cl
  402aed:	add    BYTE PTR [ebx],cl
  402aef:	add    BYTE PTR [eax-0x78],bl
  402af2:	inc    ecx
  402af3:	add    BYTE PTR [eax+eax*1],al
  402af6:	or     eax,DWORD PTR [eax]
  402af8:	sub    BYTE PTR [eax+0x40041],cl
  402afe:	or     eax,DWORD PTR [eax]
  402b00:	adc    BYTE PTR [eax+0x20041],cl
  402b06:	or     eax,DWORD PTR [eax]
  402b08:	clc    
  402b09:	xchg   DWORD PTR [ecx+0x0],eax
  402b0c:	add    al,BYTE PTR [eax]
  402b0e:	or     eax,DWORD PTR [eax]
  402b10:	enter  0x4187,0x0
  402b14:	add    al,0x0
  402b16:	or     eax,DWORD PTR [eax]
  402b18:	cwde   
  402b19:	xchg   DWORD PTR [ecx+0x0],eax
  402b1c:	add    al,0x0
  402b1e:	or     eax,DWORD PTR [eax]
  402b20:	add    BYTE PTR [edi+0x20041],0xb
  402b27:	add    BYTE PTR [eax-0x79],ch
  402b2a:	inc    ecx
  402b2b:	add    BYTE PTR [edx],al
  402b2d:	add    BYTE PTR [ebx],cl
  402b2f:	add    BYTE PTR [eax],bh
  402b31:	xchg   DWORD PTR [ecx+0x0],eax
  402b34:	add    al,0x0
  402b36:	or     eax,DWORD PTR [eax]
  402b38:	or     BYTE PTR [edi+0x40041],al
  402b3e:	or     eax,DWORD PTR [eax]
  402b40:	lock xchg BYTE PTR [ecx+0x0],al
  402b44:	add    al,BYTE PTR [eax]
  402b46:	or     eax,DWORD PTR [eax]
  402b48:	fadd   DWORD PTR [esi+0x20041]
  402b4e:	or     eax,DWORD PTR [eax]
  402b50:	test   al,0x86
  402b52:	inc    ecx
  402b53:	add    BYTE PTR [eax+eax*1],al
  402b56:	or     eax,DWORD PTR [eax]
  402b58:	js     0x402ae0
  402b5a:	inc    ecx
  402b5b:	add    BYTE PTR [eax+eax*1],al
  402b5e:	or     eax,DWORD PTR [eax]
  402b60:	pusha  
  402b61:	xchg   BYTE PTR [ecx+0x0],al
  402b64:	add    al,BYTE PTR [eax]
  402b66:	or     eax,DWORD PTR [eax]
  402b68:	dec    eax
  402b69:	xchg   BYTE PTR [ecx+0x0],al
  402b6c:	add    al,BYTE PTR [eax]
  402b6e:	or     eax,DWORD PTR [eax]
  402b70:	sbb    BYTE PTR [esi+0x40041],al
  402b76:	or     eax,DWORD PTR [eax]
  402b78:	call   0x4406d02
  402b7d:	add    BYTE PTR [ebx],cl
  402b7f:	add    al,dl
  402b81:	test   DWORD PTR [ecx+0x0],eax
  402b84:	add    al,BYTE PTR [eax]
  402b86:	or     eax,DWORD PTR [eax]
  402b88:	mov    eax,0x2004185
  402b8d:	add    BYTE PTR [ebx],cl
  402b8f:	add    BYTE PTR [eax+0x4004185],cl
  402b95:	add    BYTE PTR [ebx],cl
  402b97:	add    BYTE PTR [eax-0x7b],bl
  402b9a:	inc    ecx
  402b9b:	add    BYTE PTR [eax+eax*1],al
  402b9e:	or     eax,DWORD PTR [eax]
  402ba0:	inc    eax
  402ba1:	test   DWORD PTR [ecx+0x0],eax
  402ba4:	add    al,BYTE PTR [eax]
  402ba6:	or     eax,DWORD PTR [eax]
  402ba8:	sub    BYTE PTR [ebp+0x20041],al
  402bae:	or     eax,DWORD PTR [eax]
  402bb0:	push   0x4004184
  402bb5:	add    BYTE PTR [ebx],cl
  402bb7:	add    BYTE PTR [eax],bh
  402bb9:	test   BYTE PTR [ecx+0x0],al
  402bbc:	add    al,0x0
  402bbe:	or     eax,DWORD PTR [eax]
  402bc0:	and    BYTE PTR [ecx+eax*2+0xb000200],al
  402bc7:	add    BYTE PTR [eax],cl
  402bc9:	test   BYTE PTR [ecx+0x0],al
  402bcc:	add    al,BYTE PTR [eax]
  402bce:	or     eax,DWORD PTR [eax]
  402bd0:	fadd   DWORD PTR [ebx+0x40041]
  402bd6:	or     eax,DWORD PTR [eax]
  402bd8:	test   al,0x83
  402bda:	inc    ecx
  402bdb:	add    BYTE PTR [eax+eax*1],al
  402bde:	or     eax,DWORD PTR [eax]
  402be0:	nop
  402be1:	add    DWORD PTR [ecx+0x0],0x2
  402be5:	add    BYTE PTR [ebx],cl
  402be7:	add    BYTE PTR [eax-0x7d],bh
  402bea:	inc    ecx
  402beb:	add    BYTE PTR [edx],al
  402bed:	add    BYTE PTR [ebx],cl
  402bef:	add    BYTE PTR [eax-0x7d],cl
  402bf2:	inc    ecx
  402bf3:	add    BYTE PTR [eax+eax*1],al
  402bf6:	or     eax,DWORD PTR [eax]
  402bf8:	sbb    BYTE PTR [ebx+0x40041],al
  402bfe:	or     eax,DWORD PTR [eax]
  402c00:	add    BYTE PTR [ebx+0x20041],al
  402c06:	or     eax,DWORD PTR [eax]
  402c08:	call   0x2406d8f
  402c0d:	add    BYTE PTR [ebx],cl
  402c0f:	add    BYTE PTR [eax+0x4004182],bh
  402c15:	add    BYTE PTR [ebx],cl
  402c17:	add    BYTE PTR [eax+0x4004182],cl
  402c1d:	add    BYTE PTR [ebx],cl
  402c1f:	add    BYTE PTR [eax-0x7e],dh
  402c22:	inc    ecx
  402c23:	add    BYTE PTR [edx],al
  402c25:	add    BYTE PTR [ebx],cl
  402c27:	add    BYTE PTR [eax-0x7e],bl
  402c2a:	inc    ecx
  402c2b:	add    BYTE PTR [edx],al
  402c2d:	add    BYTE PTR [ebx],cl
  402c2f:	add    BYTE PTR [eax+0x4004180],ch
  402c35:	add    BYTE PTR [ebx],cl
  402c37:	add    BYTE PTR [eax-0x80],ah
  402c3a:	inc    ecx
  402c3b:	add    BYTE PTR [edx],al
  402c3d:	add    BYTE PTR [ebx],cl
  402c3f:	add    BYTE PTR [eax],dh
  402c41:	add    BYTE PTR [ecx+0x0],0x4
  402c45:	add    BYTE PTR [ebx],cl
  402c47:	add    BYTE PTR [eax],al
  402c49:	add    BYTE PTR [ecx+0x0],0x4
  402c4d:	add    BYTE PTR [ebx],cl
  402c4f:	add    al,ch
  402c51:	jg     0x402c94
  402c53:	add    BYTE PTR [edx],al
  402c55:	add    BYTE PTR [ebx],cl
  402c57:	add    al,cl
  402c59:	jle    0x402c9c
  402c5b:	add    BYTE PTR [eax+eax*1],al
  402c5e:	or     eax,DWORD PTR [eax]
  402c60:	cwde   
  402c61:	jle    0x402ca4
  402c63:	add    BYTE PTR [eax+eax*1],al
  402c66:	or     eax,DWORD PTR [eax]
  402c68:	cmp    BYTE PTR [esi+0x41],0x0
  402c6c:	add    al,BYTE PTR [eax]
  402c6e:	or     eax,DWORD PTR [eax]
  402c70:	push   0x200417e
  402c75:	add    BYTE PTR [ebx],cl
  402c77:	add    al,dh
  402c79:	jge    0x402cbc
  402c7b:	add    BYTE PTR [edx],al
  402c7d:	add    BYTE PTR [ebx],cl
  402c7f:	add    al,bl
  402c81:	jge    0x402cc4
  402c83:	add    BYTE PTR [edx],al
  402c85:	add    BYTE PTR [ebx],cl
  402c87:	add    al,al
  402c89:	jge    0x402ccc
  402c8b:	add    BYTE PTR [edx],al
  402c8d:	add    BYTE PTR [ebx],cl
  402c8f:	add    BYTE PTR [eax+0x400417d],dl
  402c95:	add    BYTE PTR [ebx],cl
  402c97:	add    BYTE PTR [eax+0x7d],ah
  402c9a:	inc    ecx
  402c9b:	add    BYTE PTR [eax+eax*1],al
  402c9e:	or     eax,DWORD PTR [eax]
  402ca0:	dec    eax
  402ca1:	jge    0x402ce4
  402ca3:	add    BYTE PTR [edx],al
  402ca5:	add    BYTE PTR [ebx],cl
  402ca7:	add    BYTE PTR [eax],dh
  402ca9:	jge    0x402cec
  402cab:	add    BYTE PTR [edx],al
  402cad:	add    BYTE PTR [ebx],cl
  402caf:	add    BYTE PTR [eax],al
  402cb1:	jge    0x402cf4
  402cb3:	add    BYTE PTR [eax+eax*1],al
  402cb6:	or     eax,DWORD PTR [eax]
  402cb8:	sar    BYTE PTR [ecx+eax*2+0x0],1
  402cbc:	add    al,0x0
  402cbe:	or     eax,DWORD PTR [eax]
  402cc0:	mov    eax,0x200417c
  402cc5:	add    BYTE PTR [ebx],cl
  402cc7:	add    BYTE PTR [eax+0x200417c],ah
  402ccd:	add    BYTE PTR [ebx],cl
  402ccf:	add    BYTE PTR [eax+0x7c],dh
  402cd2:	inc    ecx
  402cd3:	add    BYTE PTR [eax+eax*1],al
  402cd6:	or     eax,DWORD PTR [eax]
  402cd8:	inc    eax
  402cd9:	jl     0x402d1c
  402cdb:	add    BYTE PTR [eax+eax*1],al
  402cde:	or     eax,DWORD PTR [eax]
  402ce0:	sub    BYTE PTR [ecx+eax*2+0x0],bh
  402ce4:	add    al,BYTE PTR [eax]
  402ce6:	or     eax,DWORD PTR [eax]
  402ce8:	adc    BYTE PTR [ecx+eax*2+0x0],bh
  402cec:	add    al,BYTE PTR [eax]
  402cee:	or     eax,DWORD PTR [eax]
  402cf0:	sar    BYTE PTR [edx+0x41],0x0
  402cf4:	add    al,0x0
  402cf6:	or     eax,DWORD PTR [eax]
  402cf8:	nop
  402cf9:	jp     0x402d3c
  402cfb:	add    BYTE PTR [eax+eax*1],al
  402cfe:	or     eax,DWORD PTR [eax]
  402d00:	pusha  
  402d01:	jp     0x402d44
  402d03:	add    BYTE PTR [eax+eax*1],al
  402d06:	or     eax,DWORD PTR [eax]
  402d08:	xor    BYTE PTR [edx+0x41],bh
  402d0b:	add    BYTE PTR [eax+eax*1],al
  402d0e:	or     eax,DWORD PTR [eax]
  402d10:	add    BYTE PTR [edx+0x41],bh
  402d13:	add    BYTE PTR [eax+eax*1],al
  402d16:	or     eax,DWORD PTR [eax]
  402d18:	sar    BYTE PTR [ecx+0x41],1
  402d1b:	add    BYTE PTR [eax+eax*1],al
  402d1e:	or     eax,DWORD PTR [eax]
  402d20:	adc    BYTE PTR [ecx+0x41],bh
  402d23:	add    BYTE PTR [eax+eax*1],al
  402d26:	or     eax,DWORD PTR [eax]
  402d28:	loopne 0x402da2
  402d2a:	inc    ecx
  402d2b:	add    BYTE PTR [eax+eax*1],al
  402d2e:	or     eax,DWORD PTR [eax]
  402d30:	enter  0x4178,0x0
  402d34:	add    al,BYTE PTR [eax]
  402d36:	or     eax,DWORD PTR [eax]
  402d38:	mov    al,0x78
  402d3a:	inc    ecx
  402d3b:	add    BYTE PTR [edx],al
  402d3d:	add    BYTE PTR [ebx],cl
  402d3f:	add    BYTE PTR [eax+0x4004178],al
  402d45:	add    BYTE PTR [ebx],cl
  402d47:	add    BYTE PTR [eax+0x78],dl
  402d4a:	inc    ecx
  402d4b:	add    BYTE PTR [eax+eax*1],al
  402d4e:	or     eax,DWORD PTR [eax]
  402d50:	cmp    BYTE PTR [eax+0x41],bh
  402d53:	add    BYTE PTR [edx],al
  402d55:	add    BYTE PTR [ebx],cl
  402d57:	add    BYTE PTR [eax],ah
  402d59:	js     0x402d9c
  402d5b:	add    BYTE PTR [edx],al
  402d5d:	add    BYTE PTR [ebx],cl
  402d5f:	add    al,dh
  402d61:	ja     0x402da4
  402d63:	add    BYTE PTR [eax+eax*1],al
  402d66:	or     eax,DWORD PTR [eax]
  402d68:	shl    BYTE PTR [edi+0x41],0x0
  402d6c:	add    al,0x0
  402d6e:	or     eax,DWORD PTR [eax]
  402d70:	test   al,0x77
  402d72:	inc    ecx
  402d73:	add    BYTE PTR [edx],al
  402d75:	add    BYTE PTR [ebx],cl
  402d77:	add    BYTE PTR [eax+0x2004177],dl
  402d7d:	add    BYTE PTR [ebx],cl
  402d7f:	add    BYTE PTR [eax+0x77],ah
  402d82:	inc    ecx
  402d83:	add    BYTE PTR [eax+eax*1],al
  402d86:	or     eax,DWORD PTR [eax]
  402d88:	xor    BYTE PTR [edi+0x41],dh
  402d8b:	add    BYTE PTR [eax+eax*1],al
  402d8e:	or     eax,DWORD PTR [eax]
  402d90:	add    BYTE PTR [edi+0x41],dh
  402d93:	add    BYTE PTR [eax+eax*1],al
  402d96:	or     eax,DWORD PTR [eax]
  402d98:	shl    BYTE PTR [esi+0x41],1
  402d9b:	add    BYTE PTR [eax+eax*1],al
  402d9e:	or     eax,DWORD PTR [eax]
  402da0:	mov    al,ds:0x4004176
  402da5:	add    BYTE PTR [ebx],cl
  402da7:	add    BYTE PTR [eax+0x76],dh
  402daa:	inc    ecx
  402dab:	add    BYTE PTR [eax+eax*1],al
  402dae:	or     eax,DWORD PTR [eax]
  402db0:	nop
  402db1:	je     0x402df4
  402db3:	add    BYTE PTR [eax+eax*1],al
  402db6:	or     eax,DWORD PTR [eax]
  402db8:	pusha  
  402db9:	je     0x402dfc
  402dbb:	add    BYTE PTR [eax+eax*1],al
  402dbe:	or     eax,DWORD PTR [eax]
  402dc0:	dec    eax
  402dc1:	je     0x402e04
  402dc3:	add    BYTE PTR [edx],al
  402dc5:	add    BYTE PTR [ebx],cl
  402dc7:	add    BYTE PTR [eax],dh
  402dc9:	je     0x402e0c
  402dcb:	add    BYTE PTR [edx],al
  402dcd:	add    BYTE PTR [ebx],cl
  402dcf:	add    BYTE PTR [eax],al
  402dd1:	je     0x402e14
  402dd3:	add    BYTE PTR [eax+eax*1],al
  402dd6:	or     eax,DWORD PTR [eax]
  402dd8:	shl    BYTE PTR [ebx+0x41],1
  402ddb:	add    BYTE PTR [eax+eax*1],al
  402dde:	or     eax,DWORD PTR [eax]
  402de0:	mov    eax,0x2004173
  402de5:	add    BYTE PTR [ebx],cl
  402de7:	add    BYTE PTR [eax+0x2004173],ah
  402ded:	add    BYTE PTR [ebx],cl
  402def:	add    BYTE PTR [eax+0x73],dh
  402df2:	inc    ecx
  402df3:	add    BYTE PTR [eax+eax*1],al
  402df6:	or     eax,DWORD PTR [eax]
  402df8:	inc    eax
  402df9:	jae    0x402e3c
  402dfb:	add    BYTE PTR [eax+eax*1],al
  402dfe:	or     eax,DWORD PTR [eax]
  402e00:	sub    BYTE PTR [ebx+0x41],dh
  402e03:	add    BYTE PTR [edx],al
  402e05:	add    BYTE PTR [ebx],cl
  402e07:	add    BYTE PTR [eax],dl
  402e09:	jae    0x402e4c
  402e0b:	add    BYTE PTR [edx],al
  402e0d:	add    BYTE PTR [ebx],cl
  402e0f:	add    al,al
  402e11:	jno    0x402e54
  402e13:	add    BYTE PTR [eax+eax*1],al
  402e16:	or     eax,DWORD PTR [eax]
  402e18:	nop
  402e19:	jno    0x402e5c
  402e1b:	add    BYTE PTR [eax+eax*1],al
  402e1e:	or     eax,DWORD PTR [eax]
  402e20:	js     0x402e93
  402e22:	inc    ecx
  402e23:	add    BYTE PTR [edx],al
  402e25:	add    BYTE PTR [ebx],cl
  402e27:	add    BYTE PTR [eax+0x71],ah
  402e2a:	inc    ecx
  402e2b:	add    BYTE PTR [edx],al
  402e2d:	add    BYTE PTR [ebx],cl
  402e2f:	add    BYTE PTR [eax],dh
  402e31:	jno    0x402e74
  402e33:	add    BYTE PTR [eax+eax*1],al
  402e36:	or     eax,DWORD PTR [eax]
  402e38:	add    BYTE PTR [ecx+0x41],dh
  402e3b:	add    BYTE PTR [eax+eax*1],al
  402e3e:	or     eax,DWORD PTR [eax]
  402e40:	call   0x2406fb5
  402e45:	add    BYTE PTR [ebx],cl
  402e47:	add    al,dl
  402e49:	jo     0x402e8c
  402e4b:	add    BYTE PTR [edx],al
  402e4d:	add    BYTE PTR [ebx],cl
  402e4f:	add    BYTE PTR [eax+0x4004170],ah
  402e55:	add    BYTE PTR [ebx],cl
  402e57:	add    BYTE PTR [eax+0x70],dh
  402e5a:	inc    ecx
  402e5b:	add    BYTE PTR [eax+eax*1],al
  402e5e:	or     eax,DWORD PTR [eax]
  402e60:	pop    eax
  402e61:	jo     0x402ea4
  402e63:	add    BYTE PTR [edx],al
  402e65:	add    BYTE PTR [ebx],cl
  402e67:	add    BYTE PTR [eax+0x70],al
  402e6a:	inc    ecx
  402e6b:	add    BYTE PTR [edx],al
  402e6d:	add    BYTE PTR [ebx],cl
  402e6f:	add    BYTE PTR [eax+0x6e],bh
  402e72:	inc    ecx
  402e73:	add    BYTE PTR [edx],al
  402e75:	add    BYTE PTR [ebx],cl
  402e77:	add    BYTE PTR [eax+0x6e],ah
  402e7a:	inc    ecx
  402e7b:	add    BYTE PTR [edx],al
  402e7d:	add    BYTE PTR [ebx],cl
  402e7f:	add    BYTE PTR [eax+0x6e],cl
  402e82:	inc    ecx
  402e83:	add    BYTE PTR [edx],al
  402e85:	add    BYTE PTR [ebx],cl
  402e87:	add    BYTE PTR [eax],dh
  402e89:	outs   dx,BYTE PTR ds:[esi]
  402e8a:	inc    ecx
  402e8b:	add    BYTE PTR [edx],al
  402e8d:	add    BYTE PTR [ebx],cl
  402e8f:	add    BYTE PTR [eax],al
  402e91:	outs   dx,BYTE PTR ds:[esi]
  402e92:	inc    ecx
  402e93:	add    BYTE PTR [eax+eax*1],al
  402e96:	or     eax,DWORD PTR [eax]
  402e98:	shr    BYTE PTR [ebp+0x41],1
  402e9b:	add    BYTE PTR [eax+eax*1],al
  402e9e:	or     eax,DWORD PTR [eax]
  402ea0:	mov    al,ds:0x400416d
  402ea5:	add    BYTE PTR [ebx],cl
  402ea7:	add    BYTE PTR [eax+0x6d],dh
  402eaa:	inc    ecx
  402eab:	add    BYTE PTR [eax+eax*1],al
  402eae:	or     eax,DWORD PTR [eax]
  402eb0:	mov    esp,0x400416c
  402eb5:	add    BYTE PTR [ebx],cl
  402eb7:	add    BYTE PTR [esp+ebp*2+0x40041],cl
  402ebe:	or     eax,DWORD PTR [eax]
  402ec0:	pop    esp
  402ec1:	ins    BYTE PTR es:[edi],dx
  402ec2:	inc    ecx
  402ec3:	add    BYTE PTR [eax+eax*1],al
  402ec6:	or     eax,DWORD PTR [eax]
  402ec8:	sub    al,0x6c
  402eca:	inc    ecx
  402ecb:	add    BYTE PTR [eax+eax*1],al
  402ece:	or     eax,DWORD PTR [eax]
  402ed0:	adc    al,0x6c
  402ed2:	inc    ecx
  402ed3:	add    BYTE PTR [edx],al
  402ed5:	add    BYTE PTR [ebx],cl
  402ed7:	add    ah,bh
  402ed9:	imul   eax,DWORD PTR [ecx+0x0],0x2
  402edd:	add    BYTE PTR [ebx],cl
  402edf:	add    al,al
  402ee1:	imul   eax,DWORD PTR [ecx+0x0],0x4
  402ee5:	add    BYTE PTR [ebx],cl
  402ee7:	add    BYTE PTR [eax+0x400416b],dl
  402eed:	add    BYTE PTR [ebx],cl
  402eef:	add    BYTE PTR [eax+0x6b],bh
  402ef2:	inc    ecx
  402ef3:	add    BYTE PTR [edx],al
  402ef5:	add    BYTE PTR [ebx],cl
  402ef7:	add    BYTE PTR [eax+0x6b],ah
  402efa:	inc    ecx
  402efb:	add    BYTE PTR [edx],al
  402efd:	add    BYTE PTR [ebx],cl
  402eff:	add    BYTE PTR [eax+0x69],bl
  402f02:	inc    ecx
  402f03:	add    BYTE PTR [ecx],al
  402f05:	add    BYTE PTR [ebx],cl
  402f07:	add    al,dl
  402f09:	gs inc ecx
  402f0b:	add    BYTE PTR [eax+eax*1],al
  402f0e:	or     eax,DWORD PTR [eax]
  402f10:	mov    al,ds:0x4004165
  402f15:	add    BYTE PTR [ebx],cl
  402f17:	add    BYTE PTR [eax+0x2004165],cl
  402f1d:	add    BYTE PTR [ebx],cl
  402f1f:	add    BYTE PTR [eax+0x65],dh
  402f22:	inc    ecx
  402f23:	add    BYTE PTR [edx],al
  402f25:	add    BYTE PTR [ebx],cl
  402f27:	add    BYTE PTR [eax],ch
  402f29:	gs inc ecx
  402f2b:	add    BYTE PTR [eax+eax*1],al
  402f2e:	or     eax,DWORD PTR [eax]
  402f30:	clc    
  402f31:	fs inc ecx
  402f33:	add    BYTE PTR [eax+eax*1],al
  402f36:	or     eax,DWORD PTR [eax]
  402f38:	cmp    BYTE PTR [ecx+eax*2+0x0],ah
  402f3c:	add    al,0x0
  402f3e:	or     eax,DWORD PTR [eax]
  402f40:	or     BYTE PTR [ecx+eax*2+0x0],ah
  402f44:	add    al,0x0
  402f46:	or     eax,DWORD PTR [eax]
  402f48:	fsub   DWORD PTR [ebx+0x41]
  402f4b:	add    BYTE PTR [eax+eax*1],al
  402f4e:	or     eax,DWORD PTR [eax]
  402f50:	test   al,0x63
  402f52:	inc    ecx
  402f53:	add    BYTE PTR [eax+eax*1],al
  402f56:	or     eax,DWORD PTR [eax]
  402f58:	js     0x402fbd
  402f5a:	inc    ecx
  402f5b:	add    BYTE PTR [eax+eax*1],al
  402f5e:	or     eax,DWORD PTR [eax]
  402f60:	dec    eax
  402f61:	arpl   WORD PTR [ecx+0x0],ax
  402f64:	add    al,0x0
  402f66:	or     eax,DWORD PTR [eax]
  402f68:	sbb    BYTE PTR [ebx+0x41],ah
  402f6b:	add    BYTE PTR [eax+eax*1],al
  402f6e:	or     eax,DWORD PTR [eax]
  402f70:	call   0x44070d7
  402f75:	add    BYTE PTR [ebx],cl
  402f77:	add    BYTE PTR [eax+0x4004162],bh
  402f7d:	add    BYTE PTR [ebx],cl
  402f7f:	add    BYTE PTR [eax+0x4004162],cl
  402f85:	add    BYTE PTR [ebx],cl
  402f87:	add    BYTE PTR [eax+0x62],bl
  402f8a:	inc    ecx
  402f8b:	add    BYTE PTR [eax+eax*1],al
  402f8e:	or     eax,DWORD PTR [eax]
  402f90:	sub    BYTE PTR [edx+0x41],ah
  402f93:	add    BYTE PTR [eax+eax*1],al
  402f96:	or     eax,DWORD PTR [eax]
  402f98:	enter  0x4161,0x0
  402f9c:	add    al,0x0
  402f9e:	or     eax,DWORD PTR [eax]
  402fa0:	cwde   
  402fa1:	popa   
  402fa2:	inc    ecx
  402fa3:	add    BYTE PTR [eax+eax*1],al
  402fa6:	or     eax,DWORD PTR [eax]
  402fa8:	push   0x4004161
  402fad:	add    BYTE PTR [ebx],cl
  402faf:	add    BYTE PTR [eax],bh
  402fb1:	popa   
  402fb2:	inc    ecx
  402fb3:	add    BYTE PTR [eax+eax*1],al
  402fb6:	or     eax,DWORD PTR [eax]
  402fb8:	pop    eax
  402fb9:	pop    edi
  402fba:	inc    ecx
  402fbb:	add    BYTE PTR [eax+eax*1],al
  402fbe:	or     eax,DWORD PTR [eax]
  402fc0:	sub    BYTE PTR [edi+0x41],bl
  402fc3:	add    BYTE PTR [eax+eax*1],al
  402fc6:	or     eax,DWORD PTR [eax]
  402fc8:	clc    
  402fc9:	pop    esi
  402fca:	inc    ecx
  402fcb:	add    BYTE PTR [eax+eax*1],al
  402fce:	or     eax,DWORD PTR [eax]
  402fd0:	enter  0x415e,0x0
  402fd4:	add    al,0x0
  402fd6:	or     eax,DWORD PTR [eax]
  402fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd9:	pop    esi
  402fda:	inc    ecx
  402fdb:	add    BYTE PTR [ebx],al
  402fdd:	add    BYTE PTR [ebx],cl
  402fdf:	add    BYTE PTR [eax+0x300415e],al
  402fe5:	add    BYTE PTR [ebx],cl
  402fe7:	add    BYTE PTR [eax+0x5e],dl
  402fea:	inc    ecx
  402feb:	add    BYTE PTR [eax+eax*1],al
  402fee:	or     eax,DWORD PTR [eax]
  402ff0:	and    BYTE PTR [esi+0x41],bl
  402ff3:	add    BYTE PTR [eax+eax*1],al
  402ff6:	or     eax,DWORD PTR [eax]
  402ff8:	lock pop ebp
  402ffa:	inc    ecx
  402ffb:	add    BYTE PTR [eax+eax*1],al
  402ffe:	or     eax,DWORD PTR [eax]
  403000:	rcr    BYTE PTR [ebp+0x41],0x0
  403004:	add    al,0x0
  403006:	or     eax,DWORD PTR [eax]
  403008:	pushf  
  403009:	pop    ebp
  40300a:	inc    ecx
  40300b:	add    BYTE PTR [ebx],al
  40300d:	add    BYTE PTR [ebx],cl
  40300f:	add    BYTE PTR [eax+0x5d],bh
  403012:	inc    ecx
  403013:	add    BYTE PTR [ebx],al
  403015:	add    BYTE PTR [ebx],cl
  403017:	add    BYTE PTR [eax],dh
  403019:	pop    ebp
  40301a:	inc    ecx
  40301b:	add    BYTE PTR [edx],al
  40301d:	add    BYTE PTR [ebx],cl
  40301f:	add    BYTE PTR [eax],bl
  403021:	pop    ebp
  403022:	inc    ecx
  403023:	add    BYTE PTR [edx],al
  403025:	add    BYTE PTR [ebx],cl
  403027:	add    BYTE PTR [eax],al
  403029:	pop    ebp
  40302a:	inc    ecx
  40302b:	add    BYTE PTR [edx],al
  40302d:	add    BYTE PTR [ebx],cl
  40302f:	add    al,ch
  403031:	pop    esp
  403032:	inc    ecx
  403033:	add    BYTE PTR [edx],al
  403035:	add    BYTE PTR [ebx],cl
  403037:	add    al,dl
  403039:	pop    esp
  40303a:	inc    ecx
  40303b:	add    BYTE PTR [edx],al
  40303d:	add    BYTE PTR [ebx],cl
  40303f:	add    BYTE PTR [eax+0x200415c],bh
  403045:	add    BYTE PTR [ebx],cl
  403047:	add    BYTE PTR [eax+0x200415c],ah
  40304d:	add    BYTE PTR [ebx],cl
  40304f:	add    BYTE PTR [eax+0x200415c],cl
  403055:	add    BYTE PTR [ebx],cl
  403057:	add    BYTE PTR [eax+0x5c],dh
  40305a:	inc    ecx
  40305b:	add    BYTE PTR [edx],al
  40305d:	add    BYTE PTR [ebx],cl
  40305f:	add    BYTE PTR [eax+0x5c],bl
  403062:	inc    ecx
  403063:	add    BYTE PTR [edx],al
  403065:	add    BYTE PTR [ebx],cl
  403067:	add    BYTE PTR [eax+0x5c],al
  40306a:	inc    ecx
  40306b:	add    BYTE PTR [edx],al
  40306d:	add    BYTE PTR [ebx],cl
  40306f:	add    BYTE PTR [eax],ch
  403071:	pop    esp
  403072:	inc    ecx
  403073:	add    BYTE PTR [edx],al
  403075:	add    BYTE PTR [ebx],cl
  403077:	add    BYTE PTR [eax],dl
  403079:	pop    esp
  40307a:	inc    ecx
  40307b:	add    BYTE PTR [edx],al
  40307d:	add    BYTE PTR [ebx],cl
  40307f:	add    al,bh
  403081:	pop    ebx
  403082:	inc    ecx
  403083:	add    BYTE PTR [edx],al
  403085:	add    BYTE PTR [ebx],cl
  403087:	add    al,ah
  403089:	pop    ebx
  40308a:	inc    ecx
  40308b:	add    BYTE PTR [edx],al
  40308d:	add    BYTE PTR [ebx],cl
  40308f:	add    al,cl
  403091:	pop    ebx
  403092:	inc    ecx
  403093:	add    BYTE PTR [edx],al
  403095:	add    BYTE PTR [ebx],cl
  403097:	add    BYTE PTR [eax+0x200415b],dh
  40309d:	add    BYTE PTR [ebx],cl
  40309f:	add    BYTE PTR [eax+0x200415b],bl
  4030a5:	add    BYTE PTR [ebx],cl
  4030a7:	add    BYTE PTR [eax+0x200415b],al
  4030ad:	add    BYTE PTR [ebx],cl
  4030af:	add    BYTE PTR [eax+0x5b],ch
  4030b2:	inc    ecx
  4030b3:	add    BYTE PTR [edx],al
  4030b5:	add    BYTE PTR [ebx],cl
  4030b7:	add    BYTE PTR [eax+0x5b],dl
  4030ba:	inc    ecx
  4030bb:	add    BYTE PTR [edx],al
  4030bd:	add    BYTE PTR [ebx],cl
  4030bf:	add    BYTE PTR [eax],bh
  4030c1:	pop    ebx
  4030c2:	inc    ecx
  4030c3:	add    BYTE PTR [edx],al
  4030c5:	add    BYTE PTR [ebx],cl
  4030c7:	add    BYTE PTR [eax],ah
  4030c9:	pop    ebx
  4030ca:	inc    ecx
  4030cb:	add    BYTE PTR [edx],al
  4030cd:	add    BYTE PTR [ebx],cl
  4030cf:	add    BYTE PTR [eax],cl
  4030d1:	pop    ebx
  4030d2:	inc    ecx
  4030d3:	add    BYTE PTR [edx],al
  4030d5:	add    BYTE PTR [ebx],cl
  4030d7:	add    al,dh
  4030d9:	pop    edx
  4030da:	inc    ecx
  4030db:	add    BYTE PTR [edx],al
  4030dd:	add    BYTE PTR [ebx],cl
  4030df:	add    al,bl
  4030e1:	pop    edx
  4030e2:	inc    ecx
  4030e3:	add    BYTE PTR [edx],al
  4030e5:	add    BYTE PTR [ebx],cl
  4030e7:	add    al,al
  4030e9:	pop    edx
  4030ea:	inc    ecx
  4030eb:	add    BYTE PTR [edx],al
  4030ed:	add    BYTE PTR [ebx],cl
  4030ef:	add    BYTE PTR [eax+0x200415a],ch
  4030f5:	add    BYTE PTR [ebx],cl
  4030f7:	add    BYTE PTR [eax+0x200415a],dl
  4030fd:	add    BYTE PTR [ebx],cl
  4030ff:	add    BYTE PTR [eax+0x5a],bh
  403102:	inc    ecx
  403103:	add    BYTE PTR [edx],al
  403105:	add    BYTE PTR [ebx],cl
  403107:	add    BYTE PTR [eax+0x5a],ah
  40310a:	inc    ecx
  40310b:	add    BYTE PTR [edx],al
  40310d:	add    BYTE PTR [ebx],cl
  40310f:	add    BYTE PTR [eax+0x5a],cl
  403112:	inc    ecx
  403113:	add    BYTE PTR [edx],al
  403115:	add    BYTE PTR [ebx],cl
  403117:	add    BYTE PTR [eax],dh
  403119:	pop    edx
  40311a:	inc    ecx
  40311b:	add    BYTE PTR [edx],al
  40311d:	add    BYTE PTR [ebx],cl
  40311f:	add    BYTE PTR [eax],bl
  403121:	pop    edx
  403122:	inc    ecx
  403123:	add    BYTE PTR [edx],al
  403125:	add    BYTE PTR [ebx],cl
  403127:	add    BYTE PTR [eax],al
  403129:	pop    edx
  40312a:	inc    ecx
  40312b:	add    BYTE PTR [edx],al
  40312d:	add    BYTE PTR [ebx],cl
  40312f:	add    al,ch
  403131:	pop    ecx
  403132:	inc    ecx
  403133:	add    BYTE PTR [edx],al
  403135:	add    BYTE PTR [ebx],cl
  403137:	add    al,dl
  403139:	pop    ecx
  40313a:	inc    ecx
  40313b:	add    BYTE PTR [edx],al
  40313d:	add    BYTE PTR [ebx],cl
  40313f:	add    BYTE PTR [eax+0x2004159],bh
  403145:	add    BYTE PTR [ebx],cl
  403147:	add    BYTE PTR [eax+0x2004159],ah
  40314d:	add    BYTE PTR [ebx],cl
  40314f:	add    BYTE PTR [eax+0x2004159],cl
  403155:	add    BYTE PTR [ebx],cl
  403157:	add    BYTE PTR [eax+0x59],dh
  40315a:	inc    ecx
  40315b:	add    BYTE PTR [edx],al
  40315d:	add    BYTE PTR [ebx],cl
  40315f:	add    BYTE PTR [eax+0x59],bl
  403162:	inc    ecx
  403163:	add    BYTE PTR [edx],al
  403165:	add    BYTE PTR [ebx],cl
  403167:	add    BYTE PTR [eax+0x59],al
  40316a:	inc    ecx
  40316b:	add    BYTE PTR [edx],al
  40316d:	add    BYTE PTR [ebx],cl
  40316f:	add    BYTE PTR [eax],ch
  403171:	pop    ecx
  403172:	inc    ecx
  403173:	add    BYTE PTR [edx],al
  403175:	add    BYTE PTR [ebx],cl
  403177:	add    BYTE PTR [eax],dl
  403179:	pop    ecx
  40317a:	inc    ecx
  40317b:	add    BYTE PTR [edx],al
  40317d:	add    BYTE PTR [ebx],cl
  40317f:	add    al,bh
  403181:	pop    eax
  403182:	inc    ecx
  403183:	add    BYTE PTR [edx],al
  403185:	add    BYTE PTR [ebx],cl
  403187:	add    al,ah
  403189:	pop    eax
  40318a:	inc    ecx
  40318b:	add    BYTE PTR [edx],al
  40318d:	add    BYTE PTR [ebx],cl
  40318f:	add    al,cl
  403191:	pop    eax
  403192:	inc    ecx
  403193:	add    BYTE PTR [edx],al
  403195:	add    BYTE PTR [ebx],cl
  403197:	add    BYTE PTR [eax+0x2004158],dh
  40319d:	add    BYTE PTR [ebx],cl
  40319f:	add    BYTE PTR [eax+0x2004158],bl
  4031a5:	add    BYTE PTR [ebx],cl
  4031a7:	add    BYTE PTR [eax+0x2004158],al
  4031ad:	add    BYTE PTR [ebx],cl
  4031af:	add    BYTE PTR [eax+0x58],ch
  4031b2:	inc    ecx
  4031b3:	add    BYTE PTR [edx],al
  4031b5:	add    BYTE PTR [ebx],cl
  4031b7:	add    BYTE PTR [eax+0x58],dl
  4031ba:	inc    ecx
  4031bb:	add    BYTE PTR [edx],al
  4031bd:	add    BYTE PTR [ebx],cl
  4031bf:	add    BYTE PTR [eax],bh
  4031c1:	pop    eax
  4031c2:	inc    ecx
  4031c3:	add    BYTE PTR [edx],al
  4031c5:	add    BYTE PTR [ebx],cl
  4031c7:	add    BYTE PTR [eax],ah
  4031c9:	pop    eax
  4031ca:	inc    ecx
  4031cb:	add    BYTE PTR [edx],al
  4031cd:	add    BYTE PTR [ebx],cl
  4031cf:	add    BYTE PTR [eax],cl
  4031d1:	pop    eax
  4031d2:	inc    ecx
  4031d3:	add    BYTE PTR [edx],al
  4031d5:	add    BYTE PTR [ebx],cl
  4031d7:	add    al,bl
  4031d9:	push   edi
  4031da:	inc    ecx
  4031db:	add    BYTE PTR [edx],al
  4031dd:	add    BYTE PTR [ebx],cl
  4031df:	add    al,al
  4031e1:	push   edi
  4031e2:	inc    ecx
  4031e3:	add    BYTE PTR [edx],al
  4031e5:	add    BYTE PTR [ebx],cl
  4031e7:	add    BYTE PTR [eax+0x2004157],ch
  4031ed:	add    BYTE PTR [ebx],cl
  4031ef:	add    BYTE PTR [eax+0x2004157],dl
  4031f5:	add    BYTE PTR [ebx],cl
  4031f7:	add    BYTE PTR [eax+0x57],bh
  4031fa:	inc    ecx
  4031fb:	add    BYTE PTR [edx],al
  4031fd:	add    BYTE PTR [ebx],cl
  4031ff:	add    BYTE PTR [eax+0x57],ah
  403202:	inc    ecx
  403203:	add    BYTE PTR [edx],al
  403205:	add    BYTE PTR [ebx],cl
  403207:	add    BYTE PTR [eax+0x57],cl
  40320a:	inc    ecx
  40320b:	add    BYTE PTR [edx],al
  40320d:	add    BYTE PTR [ebx],cl
  40320f:	add    BYTE PTR [eax],dh
  403211:	push   edi
  403212:	inc    ecx
  403213:	add    BYTE PTR [edx],al
  403215:	add    BYTE PTR [ebx],cl
  403217:	add    BYTE PTR [eax+0x56],dh
  40321a:	inc    ecx
  40321b:	add    BYTE PTR [edx],al
  40321d:	add    BYTE PTR [ebx],cl
  40321f:	add    BYTE PTR [eax+0x8004155],al
  403225:	add    BYTE PTR [ebx],cl
  403227:	add    BYTE PTR [eax],ah
  403229:	push   ebp
  40322a:	inc    ecx
  40322b:	add    BYTE PTR [eax],cl
  40322d:	add    BYTE PTR [ebx],cl
  40322f:	add    BYTE PTR [eax],cl
  403231:	push   ebp
  403232:	inc    ecx
  403233:	add    BYTE PTR [edx],al
  403235:	add    BYTE PTR [ebx],cl
  403237:	add    al,dh
  403239:	push   esp
  40323a:	inc    ecx
  40323b:	add    BYTE PTR [edx],al
  40323d:	add    BYTE PTR [ebx],cl
  40323f:	add    al,bl
  403241:	push   esp
  403242:	inc    ecx
  403243:	add    BYTE PTR [edx],al
  403245:	add    BYTE PTR [ebx],cl
  403247:	add    al,al
  403249:	push   esp
  40324a:	inc    ecx
  40324b:	add    BYTE PTR [edx],al
  40324d:	add    BYTE PTR [ebx],cl
  40324f:	add    BYTE PTR [eax+0x2004154],ch
  403255:	add    BYTE PTR [ebx],cl
  403257:	add    BYTE PTR [esp+edx*2+0x41],ch
  40325b:	add    BYTE PTR [ebx],al
  40325d:	add    BYTE PTR [ebx],cl
  40325f:	add    BYTE PTR [esp+edx*2+0x41],dl
  403263:	add    BYTE PTR [edx],al
  403265:	add    BYTE PTR [ebx],cl
  403267:	add    BYTE PTR [esp+edx*2],bh
  40326a:	inc    ecx
  40326b:	add    BYTE PTR [edx],al
  40326d:	add    BYTE PTR [ebx],cl
  40326f:	add    BYTE PTR [esp+edx*2],ah
  403272:	inc    ecx
  403273:	add    BYTE PTR [edx],al
  403275:	add    BYTE PTR [ebx],cl
  403277:	add    BYTE PTR [esp+edx*2],cl
  40327a:	inc    ecx
  40327b:	add    BYTE PTR [edx],al
  40327d:	add    BYTE PTR [ebx],cl
  40327f:	add    BYTE PTR [ebx+edx*2+0x40041],dl
  403286:	or     eax,DWORD PTR [eax]
  403288:	dec    esp
  403289:	push   ebx
  40328a:	inc    ecx
  40328b:	add    BYTE PTR [eax+eax*1],al
  40328e:	or     eax,DWORD PTR [eax]
  403290:	mov    WORD PTR [edx+0x41],ss
  403293:	add    BYTE PTR [eax+eax*1],al
  403296:	or     eax,DWORD PTR [eax]
  403298:	cld    
  403299:	push   ecx
  40329a:	inc    ecx
  40329b:	add    BYTE PTR [eax+eax*1],al
  40329e:	or     eax,DWORD PTR [eax]
  4032a0:	mov    ah,0x51
  4032a2:	inc    ecx
  4032a3:	add    BYTE PTR [eax+eax*1],al
  4032a6:	or     eax,DWORD PTR [eax]
  4032a8:	test   BYTE PTR [ecx+0x41],dl
  4032ab:	add    BYTE PTR [eax+eax*1],al
  4032ae:	or     eax,DWORD PTR [eax]
  4032b0:	mov    esp,0x400414f
  4032b5:	add    BYTE PTR [ebx],cl
  4032b7:	add    BYTE PTR [edi+ecx*2+0x40041],cl
  4032be:	or     eax,DWORD PTR [eax]
  4032c0:	pop    esp
  4032c1:	dec    edi
  4032c2:	inc    ecx
  4032c3:	add    BYTE PTR [eax+eax*1],al
  4032c6:	or     eax,DWORD PTR [eax]
  4032c8:	sub    al,0x4f
  4032ca:	inc    ecx
  4032cb:	add    BYTE PTR [eax+eax*1],al
  4032ce:	or     eax,DWORD PTR [eax]
  4032d0:	cld    
  4032d1:	dec    esi
  4032d2:	inc    ecx
  4032d3:	add    BYTE PTR [eax+eax*1],al
  4032d6:	or     eax,DWORD PTR [eax]
  4032d8:	int3   
  4032d9:	dec    esi
  4032da:	inc    ecx
  4032db:	add    BYTE PTR [eax+eax*1],al
  4032de:	or     eax,DWORD PTR [eax]
  4032e0:	pushf  
  4032e1:	dec    esi
  4032e2:	inc    ecx
  4032e3:	add    BYTE PTR [eax+eax*1],al
  4032e6:	or     eax,DWORD PTR [eax]
  4032e8:	ins    BYTE PTR es:[edi],dx
  4032e9:	dec    esi
  4032ea:	inc    ecx
  4032eb:	add    BYTE PTR [eax+eax*1],al
  4032ee:	or     eax,DWORD PTR [eax]
  4032f0:	cmp    al,0x4e
  4032f2:	inc    ecx
  4032f3:	add    BYTE PTR [eax+eax*1],al
  4032f6:	or     eax,DWORD PTR [eax]
  4032f8:	or     al,0x4e
  4032fa:	inc    ecx
  4032fb:	add    BYTE PTR [eax+eax*1],al
  4032fe:	or     eax,DWORD PTR [eax]
  403300:	fmul   QWORD PTR [ebp+0x41]
  403303:	add    BYTE PTR [eax+eax*1],al
  403306:	or     eax,DWORD PTR [eax]
  403308:	lods   al,BYTE PTR ds:[esi]
  403309:	dec    ebp
  40330a:	inc    ecx
  40330b:	add    BYTE PTR [eax+eax*1],al
  40330e:	or     eax,DWORD PTR [eax]
  403310:	jl     0x40335f
  403312:	inc    ecx
  403313:	add    BYTE PTR [eax+eax*1],al
  403316:	or     eax,DWORD PTR [eax]
  403318:	dec    esp
  403319:	dec    ebp
  40331a:	inc    ecx
  40331b:	add    BYTE PTR [eax+eax*1],al
  40331e:	or     eax,DWORD PTR [eax]
  403320:	sbb    al,0x4d
  403322:	inc    ecx
  403323:	add    BYTE PTR [eax+eax*1],al
  403326:	or     eax,DWORD PTR [eax]
  403328:	in     al,dx
  403329:	dec    esp
  40332a:	inc    ecx
  40332b:	add    BYTE PTR [eax+eax*1],al
  40332e:	or     eax,DWORD PTR [eax]
  403330:	fs dec edx
  403332:	inc    ecx
  403333:	add    BYTE PTR [eax+eax*1],al
  403336:	or     eax,DWORD PTR [eax]
  403338:	xor    al,0x4a
  40333a:	inc    ecx
  40333b:	add    BYTE PTR [eax+eax*1],al
  40333e:	or     eax,DWORD PTR [eax]
  403340:	add    al,0x4a
  403342:	inc    ecx
  403343:	add    BYTE PTR [eax+eax*1],al
  403346:	or     eax,DWORD PTR [eax]
  403348:	aam    0x49
  40334a:	inc    ecx
  40334b:	add    BYTE PTR [eax+eax*1],al
  40334e:	or     eax,DWORD PTR [eax]
  403350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403351:	dec    ecx
  403352:	inc    ecx
  403353:	add    BYTE PTR [eax+eax*1],al
  403356:	or     eax,DWORD PTR [eax]
  403358:	je     0x4033a3
  40335a:	inc    ecx
  40335b:	add    BYTE PTR [eax+eax*1],al
  40335e:	or     eax,DWORD PTR [eax]
  403360:	inc    esp
  403361:	dec    ecx
  403362:	inc    ecx
  403363:	add    BYTE PTR [eax+eax*1],al
  403366:	or     eax,DWORD PTR [eax]
  403368:	adc    al,0x49
  40336a:	inc    ecx
  40336b:	add    BYTE PTR [eax+eax*1],al
  40336e:	or     eax,DWORD PTR [eax]
  403370:	ror    BYTE PTR [eax+0x41],0x0
  403374:	add    al,0x0
  403376:	or     eax,DWORD PTR [eax]
  403378:	nop
  403379:	dec    eax
  40337a:	inc    ecx
  40337b:	add    BYTE PTR [eax+eax*1],al
  40337e:	or     eax,DWORD PTR [eax]
  403380:	pusha  
  403381:	dec    eax
  403382:	inc    ecx
  403383:	add    BYTE PTR [eax+eax*1],al
  403386:	or     eax,DWORD PTR [eax]
  403388:	xor    BYTE PTR [eax+0x41],cl
  40338b:	add    BYTE PTR [eax+eax*1],al
  40338e:	or     eax,DWORD PTR [eax]
  403390:	add    BYTE PTR [eax+0x41],cl
  403393:	add    BYTE PTR [eax+eax*1],al
  403396:	or     eax,DWORD PTR [eax]
  403398:	fadd   QWORD PTR [edi+0x41]
  40339b:	add    BYTE PTR [ebx],al
  40339d:	add    BYTE PTR [ebx],cl
  40339f:	add    BYTE PTR [eax+0x3004147],bh
  4033a5:	add    BYTE PTR [ebx],cl
  4033a7:	add    BYTE PTR [edi+eax*2+0x30041],dl
  4033ae:	or     eax,DWORD PTR [eax]
  4033b0:	jo     0x4033f9
  4033b2:	inc    ecx
  4033b3:	add    BYTE PTR [ebx],al
  4033b5:	add    BYTE PTR [ebx],cl
  4033b7:	add    BYTE PTR [edi+eax*2+0x41],cl
  4033bb:	add    BYTE PTR [ebx],al
  4033bd:	add    BYTE PTR [ebx],cl
  4033bf:	add    BYTE PTR [eax],ch
  4033c1:	inc    edi
  4033c2:	inc    ecx
  4033c3:	add    BYTE PTR [ebx],al
  4033c5:	add    BYTE PTR [ebx],cl
  4033c7:	add    BYTE PTR [edi+eax*2],al
  4033ca:	inc    ecx
  4033cb:	add    BYTE PTR [ebx],al
  4033cd:	add    BYTE PTR [ebx],cl
  4033cf:	add    al,ah
  4033d1:	inc    esi
  4033d2:	inc    ecx
  4033d3:	add    BYTE PTR [ebx],al
  4033d5:	add    BYTE PTR [ebx],cl
  4033d7:	add    BYTE PTR [eax+0x4004146],dh
  4033dd:	add    BYTE PTR [ebx],cl
  4033df:	add    BYTE PTR [eax+0x4004146],al
  4033e5:	add    BYTE PTR [ebx],cl
  4033e7:	add    BYTE PTR [eax+0x46],dl
  4033ea:	inc    ecx
  4033eb:	add    BYTE PTR [eax+eax*1],al
  4033ee:	or     eax,DWORD PTR [eax]
  4033f0:	and    BYTE PTR [esi+0x41],al
  4033f3:	add    BYTE PTR [eax+eax*1],al
  4033f6:	or     eax,DWORD PTR [eax]
  4033f8:	lock inc ebp
  4033fa:	inc    ecx
  4033fb:	add    BYTE PTR [eax+eax*1],al
  4033fe:	or     eax,DWORD PTR [eax]
  403400:	rol    BYTE PTR [ebp+0x41],0x0
  403404:	add    al,0x0
  403406:	or     eax,DWORD PTR [eax]
  403408:	nop
  403409:	inc    ebp
  40340a:	inc    ecx
  40340b:	add    BYTE PTR [eax+eax*1],al
  40340e:	or     eax,DWORD PTR [eax]
  403410:	dec    eax
  403411:	inc    ebp
  403412:	inc    ecx
  403413:	add    BYTE PTR [esi],al
  403415:	add    BYTE PTR [ebx],cl
  403417:	add    BYTE PTR [eax],dh
  403419:	inc    ebp
  40341a:	inc    ecx
  40341b:	add    BYTE PTR [edx],al
  40341d:	add    BYTE PTR [ebx],cl
  40341f:	add    al,ch
  403421:	inc    esp
  403422:	inc    ecx
  403423:	add    BYTE PTR [esi],al
  403425:	add    BYTE PTR [ebx],cl
  403427:	add    BYTE PTR [eax+0x4004144],bh
  40342d:	add    BYTE PTR [ebx],cl
  40342f:	add    BYTE PTR [eax+0x4004144],cl
  403435:	add    BYTE PTR [ebx],cl
  403437:	add    BYTE PTR [eax+0x44],al
  40343a:	inc    ecx
  40343b:	add    BYTE PTR [esi],al
  40343d:	add    BYTE PTR [ebx],cl
  40343f:	add    al,bh
  403441:	inc    ebx
  403442:	inc    ecx
  403443:	add    BYTE PTR [esi],al
  403445:	add    BYTE PTR [ebx],cl
  403447:	add    al,cl
  403449:	inc    ebx
  40344a:	inc    ecx
  40344b:	add    BYTE PTR [eax+eax*1],al
  40344e:	or     eax,DWORD PTR [eax]
  403450:	add    BYTE PTR [ebx+0x41],0x0
  403454:	push   es
  403455:	add    BYTE PTR [ebx],cl
  403457:	add    BYTE PTR [eax],bh
  403459:	inc    ebx
  40345a:	inc    ecx
  40345b:	add    BYTE PTR [esi],al
  40345d:	add    BYTE PTR [ebx],cl
  40345f:	add    BYTE PTR [eax],ah
  403461:	inc    ebx
  403462:	inc    ecx
  403463:	add    BYTE PTR [edx],al
  403465:	add    BYTE PTR [ebx],cl
  403467:	add    al,bl
  403469:	inc    edx
  40346a:	inc    ecx
  40346b:	add    BYTE PTR [esi],al
  40346d:	add    BYTE PTR [ebx],cl
  40346f:	add    BYTE PTR [eax+0x4004142],ch
  403475:	add    BYTE PTR [ebx],cl
  403477:	add    BYTE PTR [eax+0x42],bh
  40347a:	inc    ecx
  40347b:	add    BYTE PTR [eax+eax*1],al
  40347e:	or     eax,DWORD PTR [eax]
  403480:	xor    BYTE PTR [edx+0x41],al
  403483:	add    BYTE PTR [esi],al
  403485:	add    BYTE PTR [ebx],cl
  403487:	add    BYTE PTR [eax],al
  403489:	inc    edx
  40348a:	inc    ecx
  40348b:	add    BYTE PTR [eax+eax*1],al
  40348e:	or     eax,DWORD PTR [eax]
  403490:	rol    BYTE PTR [ecx+0x41],1
  403493:	add    BYTE PTR [eax+eax*1],al
  403496:	or     eax,DWORD PTR [eax]
  403498:	mov    al,ds:0x4004141
  40349d:	add    BYTE PTR [ebx],cl
  40349f:	add    BYTE PTR [eax+0x41],dh
  4034a2:	inc    ecx
  4034a3:	add    BYTE PTR [eax+eax*1],al
  4034a6:	or     eax,DWORD PTR [eax]
  4034a8:	inc    eax
  4034a9:	inc    ecx
  4034aa:	inc    ecx
  4034ab:	add    BYTE PTR [eax+eax*1],al
  4034ae:	or     eax,DWORD PTR [eax]
  4034b0:	adc    BYTE PTR [ecx+0x41],al
  4034b3:	add    BYTE PTR [eax+eax*1],al
  4034b6:	or     eax,DWORD PTR [eax]
  4034b8:	loopne 0x4034fa
  4034ba:	inc    ecx
  4034bb:	add    BYTE PTR [eax+eax*1],al
  4034be:	or     eax,DWORD PTR [eax]
  4034c0:	mov    al,0x40
  4034c2:	inc    ecx
  4034c3:	add    BYTE PTR [eax+eax*1],al
  4034c6:	or     eax,DWORD PTR [eax]
  4034c8:	push   eax
  4034c9:	inc    eax
  4034ca:	inc    ecx
  4034cb:	add    BYTE PTR [eax+eax*1],al
  4034ce:	or     eax,DWORD PTR [eax]
  4034d0:	and    BYTE PTR [eax+0x41],al
  4034d3:	add    BYTE PTR [eax+eax*1],al
  4034d6:	or     eax,DWORD PTR [eax]
  4034d8:	lock aas 
  4034da:	inc    ecx
  4034db:	add    BYTE PTR [eax+eax*1],al
  4034de:	or     eax,DWORD PTR [eax]
  4034e0:	sar    BYTE PTR [edi],0x41
  4034e3:	add    BYTE PTR [eax+eax*1],al
  4034e6:	or     eax,DWORD PTR [eax]
  4034e8:	nop
  4034e9:	aas    
  4034ea:	inc    ecx
  4034eb:	add    BYTE PTR [eax+eax*1],al
  4034ee:	or     eax,DWORD PTR [eax]
  4034f0:	pusha  
  4034f1:	aas    
  4034f2:	inc    ecx
  4034f3:	add    BYTE PTR [eax+eax*1],al
  4034f6:	or     eax,DWORD PTR [eax]
  4034f8:	xor    BYTE PTR [edi],bh
  4034fa:	inc    ecx
  4034fb:	add    BYTE PTR [eax+eax*1],al
  4034fe:	or     eax,DWORD PTR [eax]
  403500:	add    BYTE PTR [edi],bh
  403502:	inc    ecx
  403503:	add    BYTE PTR [eax+eax*1],al
  403506:	or     eax,DWORD PTR [eax]
  403508:	sar    BYTE PTR [esi],1
  40350a:	inc    ecx
  40350b:	add    BYTE PTR [eax+eax*1],al
  40350e:	or     eax,DWORD PTR [eax]
  403510:	mov    BYTE PTR [esi],bh
  403512:	inc    ecx
  403513:	add    BYTE PTR [edx],al
  403515:	add    BYTE PTR [ebx],cl
  403517:	add    BYTE PTR [eax+0x3e],bl
  40351a:	inc    ecx
  40351b:	add    BYTE PTR [eax+eax*1],al
  40351e:	or     eax,DWORD PTR [eax]
  403520:	sub    BYTE PTR [esi],bh
  403522:	inc    ecx
  403523:	add    BYTE PTR [eax+eax*1],al
  403526:	or     eax,DWORD PTR [eax]
  403528:	mov    al,0x3d
  40352a:	inc    ecx
  40352b:	add    BYTE PTR [edx],al
  40352d:	add    BYTE PTR [ebx],cl
  40352f:	add    al,bl
  403531:	cmp    al,0x41
  403533:	add    BYTE PTR [edx],al
  403535:	add    BYTE PTR [ebx],cl
  403537:	add    al,al
  403539:	cmp    al,0x41
  40353b:	add    BYTE PTR [edx],al
  40353d:	add    BYTE PTR [ebx],cl
  40353f:	add    BYTE PTR [esp+edi*1+0x40041],al
  403546:	or     eax,DWORD PTR [eax]
  403548:	push   esp
  403549:	cmp    al,0x41
  40354b:	add    BYTE PTR [eax+eax*1],al
  40354e:	or     eax,DWORD PTR [eax]
  403550:	cmp    al,0x3c
  403552:	inc    ecx
  403553:	add    BYTE PTR [edx],al
  403555:	add    BYTE PTR [ebx],cl
  403557:	add    BYTE PTR [esp+edi*1],ah
  40355a:	inc    ecx
  40355b:	add    BYTE PTR [edx],al
  40355d:	add    BYTE PTR [ebx],cl
  40355f:	add    BYTE PTR [ebx+edi*1+0x41],ah
  403563:	add    BYTE PTR [eax+eax*1],al
  403566:	or     eax,DWORD PTR [eax]
  403568:	xor    al,0x3b
  40356a:	inc    ecx
  40356b:	add    BYTE PTR [eax+eax*1],al
  40356e:	or     eax,DWORD PTR [eax]
  403570:	add    al,0x3b
  403572:	inc    ecx
  403573:	add    BYTE PTR [eax+eax*1],al
  403576:	or     eax,DWORD PTR [eax]
  403578:	aam    0x3a
  40357a:	inc    ecx
  40357b:	add    BYTE PTR [eax+eax*1],al
  40357e:	or     eax,DWORD PTR [eax]
  403580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403581:	cmp    al,BYTE PTR [ecx+0x0]
  403584:	add    al,0x0
  403586:	or     eax,DWORD PTR [eax]
  403588:	je     0x4035c4
  40358a:	inc    ecx
  40358b:	add    BYTE PTR [eax+eax*1],al
  40358e:	or     eax,DWORD PTR [eax]
  403590:	test   al,0xb1
  403592:	inc    ecx
  403593:	add    BYTE PTR [edx],al
  403595:	add    BYTE PTR ds:0x41ae0000,cl
  40359b:	add    BYTE PTR [edx],al
  40359d:	add    BYTE PTR ds:0x41549000,cl
  4035a3:	add    BYTE PTR [edx],al
  4035a5:	add    BYTE PTR [ebx],cl
  4035a7:	add    al,bl
  4035a9:	xchg   ebp,eax
  4035aa:	inc    ecx
  4035ab:	add    BYTE PTR [eax+eax*1],al
  4035ae:	or     eax,DWORD PTR [eax]
  4035b0:	test   al,0x95
  4035b2:	inc    ecx
  4035b3:	add    BYTE PTR [eax+eax*1],al
  4035b6:	or     eax,DWORD PTR [eax]
  4035b8:	js     0x40354f
  4035ba:	inc    ecx
  4035bb:	add    BYTE PTR [eax+eax*1],al
  4035be:	or     eax,DWORD PTR [eax]
  4035c0:	dec    eax
  4035c1:	xchg   ebp,eax
  4035c2:	inc    ecx
  4035c3:	add    BYTE PTR [eax+eax*1],al
  4035c6:	or     eax,DWORD PTR [eax]
  4035c8:	clc    
  4035c9:	test   BYTE PTR [ecx+0x0],al
  4035cc:	add    al,0x0
  4035ce:	or     eax,DWORD PTR [eax]
  4035d0:	enter  0x4184,0x0
  4035d4:	add    al,0x0
  4035d6:	or     eax,DWORD PTR [eax]
  4035d8:	mov    al,0x84
  4035da:	inc    ecx
  4035db:	add    BYTE PTR [edx],al
  4035dd:	add    BYTE PTR [ebx],cl
  4035df:	add    BYTE PTR [eax+0x2004184],bl
  4035e5:	add    BYTE PTR [ebx],cl
  4035e7:	add    BYTE PTR [eax+0x7e],dl
  4035ea:	inc    ecx
  4035eb:	add    BYTE PTR [edx],al
  4035ed:	add    BYTE PTR [ebx],cl
  4035ef:	add    BYTE PTR [eax],ah
  4035f1:	jle    0x403634
  4035f3:	add    BYTE PTR [eax+eax*1],al
  4035f6:	or     eax,DWORD PTR [eax]
  4035f8:	enter  0x417b,0x0
  4035fc:	push   es
  4035fd:	add    BYTE PTR [ebx],cl
  4035ff:	add    BYTE PTR [eax+0x600417b],al
  403605:	add    BYTE PTR [ebx],cl
  403607:	add    BYTE PTR [eax],bh
  403609:	jnp    0x40364c
  40360b:	add    BYTE PTR [esi],al
  40360d:	add    BYTE PTR [ebx],cl
  40360f:	add    al,dh
  403611:	jp     0x403654
  403613:	add    BYTE PTR [esi],al
  403615:	add    BYTE PTR [ebx],cl
  403617:	add    BYTE PTR [eax+0x6004179],cl
  40361d:	add    BYTE PTR [ebx],cl
  40361f:	add    BYTE PTR [eax+0x79],al
  403622:	inc    ecx
  403623:	add    BYTE PTR [esi],al
  403625:	add    BYTE PTR [ebx],cl
  403627:	add    BYTE PTR [eax],ch
  403629:	jbe    0x40366c
  40362b:	add    BYTE PTR [esi],al
  40362d:	add    BYTE PTR [ebx],cl
  40362f:	add    al,ah
  403631:	jne    0x403674
  403633:	add    BYTE PTR [esi],al
  403635:	add    BYTE PTR [ebx],cl
  403637:	add    BYTE PTR [eax+0x6004175],bl
  40363d:	add    BYTE PTR [ebx],cl
  40363f:	add    BYTE PTR [eax+0x75],dl
  403642:	inc    ecx
  403643:	add    BYTE PTR [esi],al
  403645:	add    BYTE PTR [ebx],cl
  403647:	add    BYTE PTR [eax],cl
  403649:	jne    0x40368c
  40364b:	add    BYTE PTR [esi],al
  40364d:	add    BYTE PTR [ebx],cl
  40364f:	add    al,al
  403651:	je     0x403694
  403653:	add    BYTE PTR [esi],al
  403655:	add    BYTE PTR [ebx],cl
  403657:	add    al,cl
  403659:	jb     0x40369c
  40365b:	add    BYTE PTR [esi],al
  40365d:	add    BYTE PTR [ebx],cl
  40365f:	add    BYTE PTR [eax+0x6004172],al
  403665:	add    BYTE PTR [ebx],cl
  403667:	add    BYTE PTR [eax],bh
  403669:	jb     0x4036ac
  40366b:	add    BYTE PTR [esi],al
  40366d:	add    BYTE PTR [ebx],cl
  40366f:	add    al,dh
  403671:	jno    0x4036b4
  403673:	add    BYTE PTR [esi],al
  403675:	add    BYTE PTR [ebx],cl
  403677:	add    al,bh
  403679:	outs   dx,DWORD PTR ds:[esi]
  40367a:	inc    ecx
  40367b:	add    BYTE PTR [esi],al
  40367d:	add    BYTE PTR [ebx],cl
  40367f:	add    BYTE PTR [eax+0x600416f],dh
  403685:	add    BYTE PTR [ebx],cl
  403687:	add    BYTE PTR [eax+0x6f],ch
  40368a:	inc    ecx
  40368b:	add    BYTE PTR [esi],al
  40368d:	add    BYTE PTR [ebx],cl
  40368f:	add    BYTE PTR [eax],ah
  403691:	outs   dx,DWORD PTR ds:[esi]
  403692:	inc    ecx
  403693:	add    BYTE PTR [esi],al
  403695:	add    BYTE PTR [ebx],cl
  403697:	add    BYTE PTR [eax+0x6d],bl
  40369a:	inc    ecx
  40369b:	add    BYTE PTR [edx],al
  40369d:	add    BYTE PTR [ebx],cl
  40369f:	add    BYTE PTR [eax+0x6d],al
  4036a2:	inc    ecx
  4036a3:	add    BYTE PTR [edx],al
  4036a5:	add    BYTE PTR [ebx],cl
  4036a7:	add    BYTE PTR [eax],ch
  4036a9:	ins    DWORD PTR es:[edi],dx
  4036aa:	inc    ecx
  4036ab:	add    BYTE PTR [edx],al
  4036ad:	add    BYTE PTR [ebx],cl
  4036af:	add    BYTE PTR [esi+eiz*2+0x41],dl
  4036b3:	add    BYTE PTR [eax+eax*1],al
  4036b6:	or     eax,DWORD PTR [eax]
  4036b8:	clc    
  4036b9:	popa   
  4036ba:	inc    ecx
  4036bb:	add    BYTE PTR [eax+eax*1],al
  4036be:	or     eax,DWORD PTR [eax]
  4036c0:	or     BYTE PTR [ecx+0x41],ah
  4036c3:	add    BYTE PTR [eax+eax*1],al
  4036c6:	or     eax,DWORD PTR [eax]
  4036c8:	fsub   DWORD PTR [eax+0x41]
  4036cb:	add    BYTE PTR [eax+eax*1],al
  4036ce:	or     eax,DWORD PTR [eax]
  4036d0:	test   al,0x60
  4036d2:	inc    ecx
  4036d3:	add    BYTE PTR [eax+eax*1],al
  4036d6:	or     eax,DWORD PTR [eax]
  4036d8:	rcr    BYTE PTR [edi+0x41],1
  4036db:	add    BYTE PTR [edx],al
  4036dd:	add    BYTE PTR [ebx],cl
  4036df:	add    BYTE PTR [eax+0x600415f],cl
  4036e5:	add    BYTE PTR [ebx],cl
  4036e7:	add    BYTE PTR [eax+0x5d],ah
  4036ea:	inc    ecx
  4036eb:	add    BYTE PTR [edx],al
  4036ed:	add    BYTE PTR [ebx],cl
  4036ef:	add    BYTE PTR [eax+0x5d],cl
  4036f2:	inc    ecx
  4036f3:	add    BYTE PTR [edx],al
  4036f5:	add    BYTE PTR [ebx],cl
  4036f7:	add    al,dh
  4036f9:	push   edi
  4036fa:	inc    ecx
  4036fb:	add    BYTE PTR [edx],al
  4036fd:	add    BYTE PTR [ebx],cl
  4036ff:	add    BYTE PTR [eax],bl
  403701:	push   edi
  403702:	inc    ecx
  403703:	add    BYTE PTR [edx],al
  403705:	add    BYTE PTR [ebx],cl
  403707:	add    BYTE PTR [eax],al
  403709:	push   edi
  40370a:	inc    ecx
  40370b:	add    BYTE PTR [edx],al
  40370d:	add    BYTE PTR [ebx],cl
  40370f:	add    al,ch
  403711:	push   esi
  403712:	inc    ecx
  403713:	add    BYTE PTR [edx],al
  403715:	add    BYTE PTR [ebx],cl
  403717:	add    al,dl
  403719:	push   esi
  40371a:	inc    ecx
  40371b:	add    BYTE PTR [edx],al
  40371d:	add    BYTE PTR [ebx],cl
  40371f:	add    BYTE PTR [eax+0x2004156],bh
  403725:	add    BYTE PTR [ebx],cl
  403727:	add    BYTE PTR [eax+0x2004156],ah
  40372d:	add    BYTE PTR [ebx],cl
  40372f:	add    BYTE PTR [eax+0x2004156],cl
  403735:	add    BYTE PTR [ebx],cl
  403737:	add    BYTE PTR [ecx+edx*2+0x41],dl
  40373b:	add    BYTE PTR [edx],al
  40373d:	add    BYTE PTR [ebx],cl
  40373f:	add    BYTE PTR [ecx+edx*2],bh
  403742:	inc    ecx
  403743:	add    BYTE PTR [edx],al
  403745:	add    BYTE PTR [ebx],cl
  403747:	add    BYTE PTR [ecx+edx*2],cl
  40374a:	inc    ecx
  40374b:	add    BYTE PTR [edx],al
  40374d:	add    BYTE PTR [ebx],cl
  40374f:	add    ah,dh
  403751:	push   eax
  403752:	inc    ecx
  403753:	add    BYTE PTR [edx],al
  403755:	add    BYTE PTR [ebx],cl
  403757:	add    ah,bl
  403759:	push   eax
  40375a:	inc    ecx
  40375b:	add    BYTE PTR [edx],al
  40375d:	add    BYTE PTR [ebx],cl
  40375f:	add    ah,al
  403761:	push   eax
  403762:	inc    ecx
  403763:	add    BYTE PTR [edx],al
  403765:	add    BYTE PTR [ebx],cl
  403767:	add    BYTE PTR [eax+edx*2+0x20041],ch
  40376e:	or     eax,DWORD PTR [eax]
  403770:	xchg   esp,eax
  403771:	push   eax
  403772:	inc    ecx
  403773:	add    BYTE PTR [edx],al
  403775:	add    BYTE PTR [ebx],cl
  403777:	add    BYTE PTR [eax+edx*2+0x41],bh
  40377b:	add    BYTE PTR [edx],al
  40377d:	add    BYTE PTR [ebx],cl
  40377f:	add    BYTE PTR [eax+edx*2+0x41],ah
  403783:	add    BYTE PTR [edx],al
  403785:	add    BYTE PTR [ebx],cl
  403787:	add    BYTE PTR [eax+edx*2+0x41],cl
  40378b:	add    BYTE PTR [edx],al
  40378d:	add    BYTE PTR [ebx],cl
  40378f:	add    BYTE PTR [eax+edx*2],dh
  403792:	inc    ecx
  403793:	add    BYTE PTR [edx],al
  403795:	add    BYTE PTR [ebx],cl
  403797:	add    BYTE PTR [eax+edx*2],bl
  40379a:	inc    ecx
  40379b:	add    BYTE PTR [edx],al
  40379d:	add    BYTE PTR [ebx],cl
  40379f:	add    BYTE PTR [eax+edx*2],al
  4037a2:	inc    ecx
  4037a3:	add    BYTE PTR [edx],al
  4037a5:	add    BYTE PTR [ebx],cl
  4037a7:	add    ah,ch
  4037a9:	dec    edi
  4037aa:	inc    ecx
  4037ab:	add    BYTE PTR [edx],al
  4037ad:	add    BYTE PTR [ebx],cl
  4037af:	add    al,dh
  4037b1:	dec    eax
  4037b2:	inc    ecx
  4037b3:	add    BYTE PTR [ebx],al
  4037b5:	add    BYTE PTR [ebx],cl
  4037b7:	add    BYTE PTR [eax],dl
  4037b9:	ds inc ecx
  4037bb:	add    BYTE PTR [edx],al
  4037bd:	add    BYTE PTR [ebx],cl
  4037bf:	add    al,bh
  4037c1:	cmp    eax,0x20041
  4037c6:	or     eax,DWORD PTR [eax]
  4037c8:	cmp    BYTE PTR ds:0x40041,0xb
  4037cf:	add    BYTE PTR [eax+0x3d],dl
  4037d2:	inc    ecx
  4037d3:	add    BYTE PTR [eax+eax*1],al
  4037d6:	or     eax,DWORD PTR [eax]
  4037d8:	and    al,0x51
  4037da:	inc    ecx
  4037db:	add    BYTE PTR [edx],al
  4037dd:	add    BYTE PTR [ebx],cl
  4037df:	add    BYTE PTR [eax],ch
  4037e1:	push   esi
  4037e2:	inc    ecx
  4037e3:	add    BYTE PTR [esi],al
  4037e5:	add    BYTE PTR [ebx],cl
  4037e7:	add    al,ah
  4037e9:	push   ebp
  4037ea:	inc    ecx
  4037eb:	add    BYTE PTR [esi],al
  4037ed:	add    BYTE PTR [ebx],cl
  4037ef:	add    al,cl
  4037f1:	into   
  4037f2:	inc    ecx
  4037f3:	add    BYTE PTR [ebx],al
  4037f5:	adc    BYTE PTR [ebx],al
  4037f7:	or     al,0xc0
  4037f9:	into   
  4037fa:	inc    ecx
  4037fb:	add    BYTE PTR [ebx],al
  4037fd:	adc    BYTE PTR [ebx],al
  4037ff:	or     al,0xc4
  403801:	into   
  403802:	inc    ecx
  403803:	add    BYTE PTR [ebx],al
  403805:	adc    BYTE PTR [ebx],al
  403807:	or     al,0xb4
  403809:	retf   0x41
  40380c:	add    al,BYTE PTR [eax]
  40380e:	or     al,0x0
  403810:	js     0x4037dc
  403812:	inc    ecx
  403813:	add    BYTE PTR ds:0x60000b00,al
  403819:	retf   0x41
  40381c:	add    al,BYTE PTR [eax]
  40381e:	add    al,BYTE PTR [eax]
  403820:	mov    eax,0x40041c9
  403825:	add    BYTE PTR [ebx],cl
  403827:	add    BYTE PTR [eax-0x37],dh
  40382a:	inc    ecx
  40382b:	add    BYTE PTR [eax+eax*1],al
  40382e:	or     eax,DWORD PTR [eax]
  403830:	xor    al,0xc9
  403832:	inc    ecx
  403833:	add    BYTE PTR ds:0x1c000b00,al
  403839:	leave  
  40383a:	inc    ecx
  40383b:	add    BYTE PTR [edx],al
  40383d:	add    BYTE PTR [edx],al
  40383f:	add    al,ah
  403841:	enter  0x41,0x5
  403845:	add    BYTE PTR [ebx],cl
  403847:	add    al,cl
  403849:	enter  0x41,0x2
  40384d:	add    BYTE PTR [edx],al
  40384f:	add    ah,bl
  403851:	mov    BYTE PTR [ecx+0x0],0x5
  403855:	add    BYTE PTR [ebx],cl
  403857:	add    ah,al
  403859:	mov    BYTE PTR [ecx+0x0],0x2
  40385d:	add    BYTE PTR [edx],al
  40385f:	add    al,cl
  403861:	lds    eax,FWORD PTR [ecx+0x0]
  403864:	add    eax,0xb0000b00
  403869:	lds    eax,FWORD PTR [ecx+0x0]
  40386c:	add    al,BYTE PTR [eax]
  40386e:	add    al,BYTE PTR [eax]
  403870:	je     0x403837
  403872:	inc    ecx
  403873:	add    BYTE PTR ds:0x5c000b00,al
  403879:	lds    eax,FWORD PTR [ecx+0x0]
  40387c:	add    al,BYTE PTR [eax]
  40387e:	add    al,BYTE PTR [eax]
  403880:	inc    esp
  403881:	lds    eax,FWORD PTR [ecx+0x0]
  403884:	add    al,BYTE PTR [eax]
  403886:	add    al,BYTE PTR [eax]
  403888:	adc    al,0xc5
  40388a:	inc    ecx
  40388b:	add    BYTE PTR [edx],al
  40388d:	add    BYTE PTR [edx],al
  40388f:	add    ah,bh
  403891:	les    eax,FWORD PTR [ecx+0x0]
  403894:	add    al,BYTE PTR [eax]
  403896:	add    al,BYTE PTR [eax]
  403898:	call   0x9407a60
  40389d:	add    BYTE PTR [esi],cl
  40389f:	add    BYTE PTR [ebx+eax*8+0x10030041],dl
  4038a6:	add    eax,DWORD PTR [edx]
  4038a8:	mov    ebx,es
  4038aa:	inc    ecx
  4038ab:	add    BYTE PTR [ebx],al
  4038ad:	adc    BYTE PTR [ebx],al
  4038af:	add    bl,BYTE PTR [ebx+eax*8+0x41]
  4038b3:	add    BYTE PTR [edx],al
  4038b5:	add    BYTE PTR [eax+eax*1],cl
  4038b8:	nop
  4038b9:	ret    
  4038ba:	inc    ecx
  4038bb:	add    BYTE PTR [ebx],al
  4038bd:	adc    BYTE PTR [ebx],al
  4038bf:	add    dh,BYTE PTR [ecx+eax*8]
  4038c2:	inc    ecx
  4038c3:	add    BYTE PTR [ebx],al
  4038c5:	adc    BYTE PTR [ebx],al
  4038c7:	add    ch,BYTE PTR [ecx+eax*8]
  4038ca:	inc    ecx
  4038cb:	add    BYTE PTR [ebx],al
  4038cd:	adc    BYTE PTR [ebx],al
  4038cf:	add    dh,BYTE PTR [eax]
  4038d1:	rol    DWORD PTR [ecx+0x0],0x3
  4038d5:	adc    BYTE PTR [ebx],al
  4038d7:	add    al,al
  4038d9:	mov    ebx,0x10030041
  4038de:	add    eax,DWORD PTR [edx]
  4038e0:	mov    eax,0x30041bb
  4038e5:	adc    BYTE PTR [ebx],al
  4038e7:	add    bh,BYTE PTR [ebx+edi*4+0x10030041]
  4038ee:	add    eax,DWORD PTR [edx]
  4038f0:	cwde   
  4038f1:	mov    ecx,0x20041
  4038f6:	or     eax,DWORD PTR [eax]
  4038f8:	jo     0x4038b2
  4038fa:	inc    ecx
  4038fb:	add    BYTE PTR [ebx],al
  4038fd:	adc    BYTE PTR [ebx],al
  4038ff:	add    ch,BYTE PTR [eax-0x48]
  403902:	inc    ecx
  403903:	add    BYTE PTR [ebx],al
  403905:	adc    BYTE PTR [ebx],al
  403907:	add    ch,BYTE PTR [eax+edi*4+0x41]
  40390b:	add    BYTE PTR [ebx],al
  40390d:	adc    BYTE PTR [ebx],al
  40390f:	add    cl,al
  403911:	popf   
  403912:	inc    ecx
  403913:	add    BYTE PTR [ebx],al
  403915:	adc    BYTE PTR [ebx],al
  403917:	or     al,0xc0
  403919:	popf   
  40391a:	inc    ecx
  40391b:	add    BYTE PTR [ebx],al
  40391d:	adc    BYTE PTR [ebx],al
  40391f:	or     al,0xc4
  403921:	popf   
  403922:	inc    ecx
  403923:	add    BYTE PTR [ebx],al
  403925:	adc    BYTE PTR [ebx],al
  403927:	or     al,0xfc
  403929:	call   0x203:0x10030041
  403930:	hlt    
  403931:	call   0x203:0x10030041
  403938:	clc    
  403939:	call   0x203:0x10030041
  403940:	inc    eax
  403941:	imul   eax,DWORD PTR [ecx+0x0],0xb0002
  403948:	sbb    al,0x69
  40394a:	inc    ecx
  40394b:	add    BYTE PTR [ebx],al
  40394d:	add    BYTE PTR [ebx],cl
  40394f:	add    BYTE PTR [eax],dl
  403951:	imul   eax,DWORD PTR [ecx+0x0],0xb0001
  403958:	clc    
  403959:	push   0x20041
  40395e:	or     eax,DWORD PTR [eax]
  403960:	loopne 0x4039ca
  403962:	inc    ecx
  403963:	add    BYTE PTR [edx],al
  403965:	add    BYTE PTR [ebx],cl
  403967:	add    ah,cl
  403969:	addr16 inc ecx
  40396b:	add    BYTE PTR [ebx],al
  40396d:	add    BYTE PTR [ebx],cl
  40396f:	add    BYTE PTR [eax+0x67],cl
  403972:	inc    ecx
  403973:	add    BYTE PTR [ebx],al
  403975:	add    BYTE PTR [ebx],cl
  403977:	add    al,dl
  403979:	cmp    DWORD PTR [ecx+0x0],eax
  40397c:	add    al,BYTE PTR [eax]
  40397e:	add    al,BYTE PTR [eax]
  403980:	mov    cl,dl
  403982:	inc    ecx
  403983:	add    BYTE PTR [edx],al
  403985:	add    BYTE PTR [eax+eax*1],cl
  403988:	jo     0x40395b
  40398a:	inc    ecx
  40398b:	add    BYTE PTR [edx],al
  40398d:	add    BYTE PTR [eax+eax*1],cl
  403990:	pop    eax
  403991:	rol    DWORD PTR [ecx+0x0],1
  403994:	add    al,BYTE PTR [eax]
  403996:	or     al,0x0
  403998:	inc    eax
  403999:	rol    DWORD PTR [ecx+0x0],1
  40399c:	add    al,BYTE PTR [eax]
  40399e:	or     al,0x0
  4039a0:	enter  0x41d0,0x0
  4039a4:	add    al,BYTE PTR [eax]
  4039a6:	or     al,0x0
  4039a8:	mov    al,0xd0
  4039aa:	inc    ecx
  4039ab:	add    BYTE PTR [edx],al
  4039ad:	add    BYTE PTR [eax+eax*1],cl
  4039b0:	cwde   
  4039b1:	rol    BYTE PTR [ecx+0x0],1
  4039b4:	add    al,BYTE PTR [eax]
  4039b6:	or     al,0x0
  4039b8:	adc    al,0x41
  4039bb:	add    BYTE PTR [edx],al
  4039bd:	add    BYTE PTR [eax+eax*1],cl
  4039c0:	sub    cl,dl
  4039c2:	inc    ecx
  4039c3:	add    BYTE PTR [edx],al
  4039c5:	add    BYTE PTR [eax+eax*1],cl
  4039c8:	adc    cl,dl
  4039ca:	inc    ecx
  4039cb:	add    BYTE PTR [edx],al
  4039cd:	add    BYTE PTR [eax+eax*1],cl
  4039d0:	clc    
  4039d1:	rol    BYTE PTR [ecx+0x0],1
  4039d4:	add    al,BYTE PTR [eax]
  4039d6:	or     al,0x0
  4039d8:	loopne 0x4039aa
  4039da:	inc    ecx
  4039db:	add    BYTE PTR [edx],al
  4039dd:	add    BYTE PTR [eax+eax*1],cl
  4039e0:	je     0x4039b0
  4039e2:	inc    ecx
  4039e3:	add    BYTE PTR [edx],al
  4039e5:	add    BYTE PTR [eax+eax*1],cl
  4039e8:	pop    esp
  4039e9:	into   
  4039ea:	inc    ecx
  4039eb:	add    BYTE PTR [edx],al
  4039ed:	add    BYTE PTR [eax+eax*1],cl
  4039f0:	inc    esp
  4039f1:	into   
  4039f2:	inc    ecx
  4039f3:	add    BYTE PTR [edx],al
  4039f5:	add    BYTE PTR [eax+eax*1],cl
  4039f8:	sub    al,0xce
  4039fa:	inc    ecx
  4039fb:	add    BYTE PTR [edx],al
  4039fd:	add    BYTE PTR [eax+eax*1],cl
  403a00:	push   0x20041d0
  403a05:	add    BYTE PTR [eax+eax*1],cl
  403a08:	push   eax
  403a09:	rol    BYTE PTR [ecx+0x0],1
  403a0c:	add    al,BYTE PTR [eax]
  403a0e:	or     al,0x0
  403a10:	cmp    al,dl
  403a12:	inc    ecx
  403a13:	add    BYTE PTR [edx],al
  403a15:	add    BYTE PTR [eax+eax*1],cl
  403a18:	and    al,dl
  403a1a:	inc    ecx
  403a1b:	add    BYTE PTR [edx],al
  403a1d:	add    BYTE PTR [eax+eax*1],cl
  403a20:	test   al,0xcf
  403a22:	inc    ecx
  403a23:	add    BYTE PTR [edx],al
  403a25:	add    BYTE PTR [eax+eax*1],cl
  403a28:	nop
  403a29:	iret   
  403a2a:	inc    ecx
  403a2b:	add    BYTE PTR [edx],al
  403a2d:	add    BYTE PTR [eax+eax*1],cl
  403a30:	js     0x403a01
  403a32:	inc    ecx
  403a33:	add    BYTE PTR [edx],al
  403a35:	add    BYTE PTR [eax+eax*1],cl
  403a38:	pusha  
  403a39:	iret   
  403a3a:	inc    ecx
  403a3b:	add    BYTE PTR [edx],al
  403a3d:	add    BYTE PTR [eax+eax*1],cl
  403a40:	or     al,dl
  403a42:	inc    ecx
  403a43:	add    BYTE PTR [edx],al
  403a45:	add    BYTE PTR [eax+eax*1],cl
  403a48:	lock iret 
  403a4a:	inc    ecx
  403a4b:	add    BYTE PTR [edx],al
  403a4d:	add    BYTE PTR [eax+eax*1],cl
  403a50:	fmul   st,st(7)
  403a52:	inc    ecx
  403a53:	add    BYTE PTR [edx],al
  403a55:	add    BYTE PTR [eax+eax*1],cl
  403a58:	ror    bh,0x41
  403a5b:	add    BYTE PTR [edx],al
  403a5d:	add    BYTE PTR [eax+eax*1],cl
  403a60:	dec    eax
  403a61:	iret   
  403a62:	inc    ecx
  403a63:	add    BYTE PTR [edx],al
  403a65:	add    BYTE PTR [eax+eax*1],cl
  403a68:	xor    bh,cl
  403a6a:	inc    ecx
  403a6b:	add    BYTE PTR [edx],al
  403a6d:	add    BYTE PTR [eax+eax*1],cl
  403a70:	sbb    bh,cl
  403a72:	inc    ecx
  403a73:	add    BYTE PTR [edx],al
  403a75:	add    BYTE PTR [eax+eax*1],cl
  403a78:	add    bh,cl
  403a7a:	inc    ecx
  403a7b:	add    BYTE PTR [edx],al
  403a7d:	add    BYTE PTR [eax+eax*1],cl
  403a80:	fdiv   DWORD PTR [ecx+eax*2+0xc000200]
  403a87:	add    BYTE PTR [eax-0x4f],ah
  403a8a:	inc    ecx
  403a8b:	add    BYTE PTR [edx],al
  403a8d:	add    BYTE PTR [eax+eax*1],cl
  403a90:	dec    eax
  403a91:	mov    cl,0x41
  403a93:	add    BYTE PTR [edx],al
  403a95:	add    BYTE PTR [eax+eax*1],cl
  403a98:	xor    BYTE PTR [ecx+0x20041],dh
  403a9e:	or     al,0x0
  403aa0:	sbb    BYTE PTR [ecx+0x20041],dh
  403aa6:	or     al,0x0
  403aa8:	add    BYTE PTR [ecx+0x20041],dh
  403aae:	or     al,0x0
  403ab0:	call   0x2407c65
  403ab5:	add    BYTE PTR [eax+eax*1],cl
  403ab8:	shl    BYTE PTR [eax+0x20041],1
  403abe:	or     al,0x0
  403ac0:	mov    eax,0x20041b0
  403ac5:	add    BYTE PTR [eax+eax*1],cl
  403ac8:	mov    al,ds:0x20041b0
  403acd:	add    BYTE PTR [eax+eax*1],cl
  403ad0:	mov    BYTE PTR [eax+0x20041],dh
  403ad6:	or     al,0x0
  403ad8:	jo     0x403a8a
  403ada:	inc    ecx
  403adb:	add    BYTE PTR [edx],al
  403add:	add    BYTE PTR [eax+eax*1],cl
  403ae0:	pop    eax
  403ae1:	mov    al,0x41
  403ae3:	add    BYTE PTR [edx],al
  403ae5:	add    BYTE PTR [eax+eax*1],cl
  403ae8:	inc    eax
  403ae9:	mov    al,0x41
  403aeb:	add    BYTE PTR [edx],al
  403aed:	add    BYTE PTR [eax+eax*1],cl
  403af0:	sub    BYTE PTR [eax+0x20041],dh
  403af6:	or     al,0x0
  403af8:	adc    BYTE PTR [eax+0x20041],dh
  403afe:	or     al,0x0
  403b00:	clc    
  403b01:	scas   eax,DWORD PTR es:[edi]
  403b02:	inc    ecx
  403b03:	add    BYTE PTR [edx],al
  403b05:	add    BYTE PTR [eax+eax*1],cl
  403b08:	loopne 0x403ab9
  403b0a:	inc    ecx
  403b0b:	add    BYTE PTR [edx],al
  403b0d:	add    BYTE PTR [eax+eax*1],cl
  403b10:	enter  0x41af,0x0
  403b14:	add    al,BYTE PTR [eax]
  403b16:	or     al,0x0
  403b18:	mov    al,0xaf
  403b1a:	inc    ecx
  403b1b:	add    BYTE PTR [edx],al
  403b1d:	add    BYTE PTR [eax+eax*1],cl
  403b20:	pusha  
  403b21:	scas   al,BYTE PTR es:[edi]
  403b22:	inc    ecx
  403b23:	add    BYTE PTR [edx],al
  403b25:	add    BYTE PTR [eax+eax*1],cl
  403b28:	dec    eax
  403b29:	scas   al,BYTE PTR es:[edi]
  403b2a:	inc    ecx
  403b2b:	add    BYTE PTR [edx],al
  403b2d:	add    BYTE PTR [eax+eax*1],cl
  403b30:	pop    eax
  403b31:	stos   BYTE PTR es:[edi],al
  403b32:	inc    ecx
  403b33:	add    BYTE PTR [edx],al
  403b35:	add    BYTE PTR [eax+eax*1],cl
  403b38:	push   0x20041a3
  403b3d:	add    BYTE PTR [eax+eax*1],cl
  403b40:	inc    eax
  403b41:	mov    al,ds:0x8020041
  403b46:	add    al,0x0
  403b48:	sub    BYTE PTR [eax+0x8020041],ah
  403b4e:	add    al,0x0
  403b50:	adc    BYTE PTR [eax+0x8020041],ah
  403b56:	add    al,0x0
  403b58:	mov    esp,0x30041ce
  403b5d:	adc    BYTE PTR [ebx],al
  403b5f:	or     al,0x28
  403b61:	rol    DWORD PTR [ecx+0x0],0x3
  403b65:	adc    BYTE PTR [ebx],al
  403b67:	add    dh,BYTE PTR [ebx+edi*4+0x10030041]
  403b6e:	add    eax,DWORD PTR [edx]
  403b70:	mov    esp,0x300419d
  403b75:	adc    BYTE PTR [ebx],al
  403b77:	or     al,0xf0
  403b79:	call   0x203:0x10030041
  403b80:	das    
  403b81:	inc    ebp
  403b82:	dec    esi
  403b83:	push   esp
  403b84:	push   edx
  403b85:	pop    ecx
  403b86:	cmp    al,BYTE PTR [eax]
  403b88:	das    
  403b89:	inc    esp
  403b8a:	inc    ebp
  403b8b:	inc    esi
  403b8c:	inc    ecx
  403b8d:	push   ebp
  403b8e:	dec    esp
  403b8f:	push   esp
  403b90:	dec    esp
  403b91:	dec    ecx
  403b92:	inc    edx
  403b93:	cmp    al,BYTE PTR [eax]
  403b95:	add    BYTE PTR [eax],al
  403b97:	add    BYTE PTR [eax],al
  403b99:	add    BYTE PTR [eax+0x0],dl
  403b9c:	add    BYTE PTR [eax],al
  403b9e:	adc    BYTE PTR [eax],al
  403ba0:	add    BYTE PTR [eax],al
  403ba2:	and    BYTE PTR [eax],al
  403ba4:	add    BYTE PTR [eax],al
  403ba6:	xor    BYTE PTR [eax],al
  403ba8:	add    BYTE PTR [eax],al
  403baa:	inc    eax
  403bab:	add    BYTE PTR [eax],al
  403bad:	add    BYTE PTR [eax+0x0],dl
  403bb0:	add    BYTE PTR [eax],al
  403bb2:	pusha  
  403bb3:	add    BYTE PTR [eax],al
  403bb5:	add    BYTE PTR [eax+0x0],dh
  403bb8:	add    BYTE PTR [eax],al
  403bba:	add    BYTE PTR [eax],0x0
  403bbd:	add    BYTE PTR [eax-0x60000000],dl
  403bc3:	add    BYTE PTR [eax],al
  403bc5:	add    BYTE PTR [eax-0x40000000],dh
  403bcb:	add    BYTE PTR [eax],al
  403bcd:	add    al,dl
  403bcf:	add    BYTE PTR [eax],al
  403bd1:	add    al,ah
  403bd3:	add    BYTE PTR [eax],al
  403bd5:	add    DWORD PTR [eax],eax
  403bd7:	add    BYTE PTR [ecx],al
  403bd9:	add    DWORD PTR [ecx],eax
  403bdb:	add    BYTE PTR [eax],al
  403bdd:	add    DWORD PTR [eax],eax
  403bdf:	add    DWORD PTR [eax],eax
  403be1:	add    DWORD PTR [ecx],eax
  403be3:	add    DWORD PTR [eax],eax
  403be5:	add    BYTE PTR [eax],al
  403be7:	add    BYTE PTR [esp+eiz*8+0x41],cl
  403beb:	add    BYTE PTR [esp+eiz*8+0x41],dl
  403bef:	add    BYTE PTR [eax],ah
  403bf1:	add    BYTE PTR [eax],al
  403bf3:	pusha  
  403bf4:	pop    esp
  403bf5:	in     al,0x41
  403bf7:	add    BYTE PTR [esp+eiz*8+0x41],ah
  403bfb:	add    BYTE PTR [eax+0x0],al
  403bfe:	add    al,al
  403c00:	ins    BYTE PTR es:[edi],dx
  403c01:	in     al,0x41
  403c03:	add    BYTE PTR [esp+eiz*8+0x41],dh
  403c07:	add    BYTE PTR [eax+0x0],al
  403c0a:	add    BYTE PTR [eax+0x7c],al
  403c0d:	in     al,0x41
  403c0f:	add    BYTE PTR [esp+eiz*8+0x400041],al
  403c16:	add    al,al
  403c18:	mov    esp,fs
  403c1a:	inc    ecx
  403c1b:	add    BYTE PTR [esp+eiz*8+0x800041],dl
  403c22:	add    al,al
  403c24:	pushf  
  403c25:	in     al,0x41
  403c27:	add    BYTE PTR [esp+eiz*8+0x400041],ah
  403c2e:	add    BYTE PTR [eax-0x54],al
  403c31:	in     al,0x41
  403c33:	add    BYTE PTR [eax+0x400041e4],bh
  403c39:	add    BYTE PTR [eax],al
  403c3b:	inc    edx
  403c3c:	(bad)  
  403c3d:	in     al,0x41
  403c3f:	add    al,dl
  403c41:	in     al,0x41
  403c43:	add    BYTE PTR [eax+0x0],al
  403c46:	add    BYTE PTR [edx+0x0],al
  403c49:	add    BYTE PTR [eax],al
  403c4b:	add    BYTE PTR [eax],al
  403c4d:	add    BYTE PTR [eax],al
  403c4f:	add    BYTE PTR [eax+0x0],al
  403c52:	add    al,al
  403c54:	add    eax,DWORD PTR [ebp+0x51]
  403c57:	push   ebp
  403c58:	pop    es
  403c59:	push   esp
  403c5a:	inc    ebp
  403c5b:	pop    eax
  403c5c:	push   esp
  403c5d:	inc    ebp
  403c5e:	push   ecx
  403c5f:	push   ebp
  403c60:	push   es
  403c61:	inc    ebx
  403c62:	inc    ecx
  403c63:	push   esp
  403c64:	push   ebx
  403c65:	push   esp
  403c66:	push   edx
  403c67:	push   es
  403c68:	push   ebx
  403c69:	push   ebp
  403c6a:	inc    edx
  403c6b:	push   ebx
  403c6c:	push   esp
  403c6d:	push   edx
  403c6e:	add    BYTE PTR [eax],al
  403c70:	and    BYTE PTR [eax],al
  403c72:	and    BYTE PTR [eax],al
  403c74:	and    BYTE PTR [eax],al
  403c76:	and    BYTE PTR [eax],al
  403c78:	and    BYTE PTR [eax],al
  403c7a:	and    BYTE PTR [eax],al
  403c7c:	and    BYTE PTR [eax],al
  403c7e:	and    BYTE PTR [eax],al
  403c80:	dec    ebp
  403c81:	add    BYTE PTR [eax+eax*1+0x36],cl
  403c85:	add    BYTE PTR [eax+eax*1],dh
  403c88:	and    BYTE PTR [eax],al
  403c8a:	pop    ebx
  403c8b:	add    BYTE PTR [eax],ah
  403c8d:	add    BYTE PTR [edi],ch
  403c8f:	add    BYTE PTR [edi+0x0],ch
  403c92:	jo     0x403c94
  403c94:	je     0x403c96
  403c96:	imul   eax,DWORD PTR [eax],0x6e006f
  403c9c:	jae    0x403c9e
  403c9e:	and    BYTE PTR [eax],al
  403ca0:	pop    ebp
  403ca1:	add    BYTE PTR [eax],ah
  403ca3:	add    BYTE PTR [esi+0x0],ah
  403ca6:	imul   eax,DWORD PTR [eax],0x65006c
  403cac:	ins    BYTE PTR es:[edi],dx
  403cad:	add    BYTE PTR [ecx+0x0],ch
  403cb0:	jae    0x403cb2
  403cb2:	je     0x403cb4
  403cb4:	and    BYTE PTR [eax],al
  403cb6:	pop    ebx
  403cb7:	add    BYTE PTR [eax],ah
  403cb9:	add    BYTE PTR [edi],ch
  403cbb:	add    BYTE PTR [eax+eax*1+0x69],ch
  403cbf:	add    BYTE PTR [esi+0x0],ch
  403cc2:	imul   eax,DWORD PTR [eax],0x20
  403cc5:	add    BYTE PTR [eax+eax*1+0x69],ch
  403cc9:	add    BYTE PTR [esi+0x0],ch
  403ccc:	imul   eax,DWORD PTR [eax],0x6f
  403ccf:	add    BYTE PTR [eax+0x0],dh
  403cd2:	je     0x403cd4
  403cd4:	imul   eax,DWORD PTR [eax],0x6e006f
  403cda:	jae    0x403cdc
  403cdc:	and    BYTE PTR [eax],al
  403cde:	pop    ebp
  403cdf:	add    BYTE PTR [edx],cl
  403ce1:	add    BYTE PTR [edx],cl
  403ce3:	add    BYTE PTR [edi],ch
  403ce5:	add    BYTE PTR [edx+0x0],al
  403ce8:	ins    BYTE PTR es:[edi],dx
  403ce9:	add    BYTE PTR [eax+eax*1],bh
  403cec:	ins    BYTE PTR es:[edi],dx
  403ced:	add    BYTE PTR [ecx+0x0],ch
  403cf0:	outs   dx,BYTE PTR ds:[esi]
  403cf1:	add    BYTE PTR [ebx+0x0],ch
  403cf4:	add    BYTE PTR gs:[edx+0x0],dh
  403cf8:	add    BYTE PTR ds:[eax],ah
  403cfb:	add    BYTE PTR [ebp+0x0],dl
  403cfe:	jae    0x403d00
  403d00:	add    BYTE PTR gs:[eax],ah
  403d03:	add    BYTE PTR [ecx+0x0],ah
  403d06:	ins    BYTE PTR es:[edi],dx
  403d07:	add    BYTE PTR [eax+eax*1+0x65],dh
  403d0b:	add    BYTE PTR [edx+0x0],dh
  403d0e:	outs   dx,BYTE PTR ds:[esi]
  403d0f:	add    BYTE PTR [ecx+0x0],ah
  403d12:	je     0x403d14
  403d14:	add    BYTE PTR gs:[eax],ah
  403d17:	add    BYTE PTR [eax+eax*1+0x69],ch
  403d1b:	add    BYTE PTR [esi+0x0],ch
  403d1e:	imul   eax,DWORD PTR [eax],0x65
  403d21:	add    BYTE PTR [edx+0x0],dh
  403d24:	and    BYTE PTR [eax],al
  403d26:	and    BYTE PTR [eax],al
  403d28:	and    BYTE PTR [eax],al
  403d2a:	and    BYTE PTR [eax],al
  403d2c:	and    BYTE PTR [eax],al
  403d2e:	and    BYTE PTR [eax],al
  403d30:	and    BYTE PTR [eax],al
  403d32:	and    BYTE PTR [eax],al
  403d34:	and    BYTE PTR [eax],al
  403d36:	and    BYTE PTR [eax],al
  403d38:	das    
  403d39:	add    BYTE PTR [ebx+0x0],dl
  403d3c:	data16 add BYTE PTR [eax],ah
  403d3f:	add    BYTE PTR [edi+0x0],al
  403d42:	add    BYTE PTR gs:[esi+0x0],ch
  403d46:	add    BYTE PTR gs:[edx+0x0],dh
  403d4a:	popa   
  403d4b:	add    BYTE PTR [eax+eax*1+0x65],dh
  403d4f:	add    BYTE PTR [eax],ah
  403d51:	add    BYTE PTR [esi+0x0],ah
  403d54:	imul   eax,DWORD PTR [eax],0x730072
  403d5a:	je     0x403d5c
  403d5c:	and    BYTE PTR [eax],al
  403d5e:	jo     0x403d60
  403d60:	popa   
  403d61:	add    BYTE PTR [ebx+0x0],dh
  403d64:	jae    0x403d66
  403d66:	and    BYTE PTR [eax],al
  403d68:	ins    BYTE PTR es:[edi],dx
  403d69:	add    BYTE PTR [ecx+0x0],ch
  403d6c:	jae    0x403d6e
  403d6e:	je     0x403d70
  403d70:	imul   eax,DWORD PTR [eax],0x67006e
  403d76:	or     al,BYTE PTR [eax]
  403d78:	das    
  403d79:	add    BYTE PTR [ebx+0x0],ah
  403d7c:	and    BYTE PTR [eax],al
  403d7e:	inc    ecx
  403d7f:	add    BYTE PTR [ebx+0x0],dh
  403d82:	jae    0x403d84
  403d84:	add    BYTE PTR gs:[ebp+0x0],ch
  403d88:	bound  eax,QWORD PTR [eax]
  403d8a:	ins    BYTE PTR es:[edi],dx
  403d8b:	add    BYTE PTR [ebp+0x0],ah
  403d8e:	and    BYTE PTR [eax],al
  403d90:	ja     0x403d92
  403d92:	imul   eax,DWORD PTR [eax],0x680074
  403d98:	outs   dx,DWORD PTR ds:[esi]
  403d99:	add    BYTE PTR [ebp+0x0],dh
  403d9c:	je     0x403d9e
  403d9e:	and    BYTE PTR [eax],al
  403da0:	ins    BYTE PTR es:[edi],dx
  403da1:	add    BYTE PTR [ecx+0x0],ch
  403da4:	outs   dx,BYTE PTR ds:[esi]
  403da5:	add    BYTE PTR [ebx+0x0],ch
  403da8:	imul   eax,DWORD PTR [eax],0x67006e
  403dae:	and    BYTE PTR [eax],al
  403db0:	and    BYTE PTR [eax],al
  403db2:	and    BYTE PTR [eax],al
  403db4:	and    BYTE PTR [eax],al
  403db6:	and    BYTE PTR [eax],al
  403db8:	and    BYTE PTR [eax],al
  403dba:	and    BYTE PTR [eax],al
  403dbc:	and    BYTE PTR [eax],al
  403dbe:	and    BYTE PTR [eax],al
  403dc0:	and    BYTE PTR [eax],al
  403dc2:	and    BYTE PTR [eax],al
  403dc4:	and    BYTE PTR [eax],al
  403dc6:	and    BYTE PTR [eax],al
  403dc8:	and    BYTE PTR [eax],al
  403dca:	and    BYTE PTR [eax],al
  403dcc:	das    
  403dcd:	add    BYTE PTR [ebx+0x0],dl
  403dd0:	ins    BYTE PTR es:[edi],dx
  403dd1:	add    BYTE PTR [eax+eax*1],bh
  403dd4:	ja     0x403dd6
  403dd6:	imul   eax,DWORD PTR [eax],0x740064
  403ddc:	push   0x20003e00
  403de1:	add    BYTE PTR [ebx+0x0],dl
  403de4:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
  403de9:	add    BYTE PTR [eax+eax*1+0x69],ch
  403ded:	add    BYTE PTR [esi+0x0],ch
  403df0:	add    BYTE PTR gs:[eax],ah
  403df3:	add    BYTE PTR [edi+0x0],dh
  403df6:	imul   eax,DWORD PTR [eax],0x740064
  403dfc:	push   0x2f000a00
  403e01:	add    BYTE PTR [ebx+0x0],al
  403e04:	jo     0x403e06
  403e06:	and    BYTE PTR [eax],al
  403e08:	push   eax
  403e09:	add    BYTE PTR [edx+0x0],dh
  403e0c:	add    BYTE PTR gs:[ebx+0x0],dh
  403e10:	add    BYTE PTR gs:[edx+0x0],dh
  403e14:	jbe    0x403e16
  403e16:	add    BYTE PTR gs:[eax],ah
  403e19:	add    BYTE PTR [ebx+0x0],ah
  403e1c:	popa   
  403e1d:	add    BYTE PTR [ebx+0x0],dh
  403e20:	add    BYTE PTR gs:[eax],ah
  403e23:	add    BYTE PTR [edi+0x0],ch
  403e26:	data16 add BYTE PTR [eax],ah
  403e29:	add    BYTE PTR [ebp+0x0],dh
  403e2c:	jae    0x403e2e
  403e2e:	add    BYTE PTR gs:[edx+0x0],dh
  403e32:	and    BYTE PTR [eax],al
  403e34:	imul   eax,DWORD PTR [eax],0x650064
  403e3a:	outs   dx,BYTE PTR ds:[esi]
  403e3b:	add    BYTE PTR [eax+eax*1+0x69],dh
  403e3f:	add    BYTE PTR [esi+0x0],ah
  403e42:	imul   eax,DWORD PTR [eax],0x720065
  403e48:	jae    0x403e4a
  403e4a:	and    BYTE PTR [eax],al
  403e4c:	and    BYTE PTR [eax],al
  403e4e:	and    BYTE PTR [eax],al
  403e50:	and    BYTE PTR [eax],al
  403e52:	and    BYTE PTR [eax],al
  403e54:	das    
  403e55:	add    BYTE PTR [ebx+0x0],dl
  403e58:	outs   dx,BYTE PTR ds:[esi]
  403e59:	add    BYTE PTR [eax],ah
  403e5b:	add    BYTE PTR [ebx+0x0],dl
  403e5e:	jne    0x403e60
  403e60:	jo     0x403e62
  403e62:	jo     0x403e64
  403e64:	jb     0x403e66
  403e66:	add    BYTE PTR gs:[ebx+0x0],dh
  403e6a:	jae    0x403e6c
  403e6c:	and    BYTE PTR [eax],al
  403e6e:	jae    0x403e70
  403e70:	jns    0x403e72
  403e72:	ins    DWORD PTR es:[edi],dx
  403e73:	add    BYTE PTR [edx+0x0],ah
  403e76:	outs   dx,DWORD PTR ds:[esi]
  403e77:	add    BYTE PTR [eax+eax*1+0x2d],ch
  403e7b:	add    BYTE PTR [eax+eax*1+0x61],dh
  403e7f:	add    BYTE PTR [edx+0x0],ah
  403e82:	ins    BYTE PTR es:[edi],dx
  403e83:	add    BYTE PTR [ebp+0x0],ah
  403e86:	and    BYTE PTR [eax],al
  403e88:	ins    BYTE PTR es:[edi],dx
  403e89:	add    BYTE PTR [ecx+0x0],ch
  403e8c:	jae    0x403e8e
  403e8e:	je     0x403e90
  403e90:	imul   eax,DWORD PTR [eax],0x67006e
  403e96:	or     al,BYTE PTR [eax]
  403e98:	das    
  403e99:	add    BYTE PTR [ebx+0x0],al
  403e9c:	js     0x403e9e
  403e9e:	and    BYTE PTR [eax],al
  403ea0:	push   eax
  403ea1:	add    BYTE PTR [edx+0x0],dh
  403ea4:	add    BYTE PTR gs:[ebx+0x0],dh
  403ea8:	add    BYTE PTR gs:[edx+0x0],dh
  403eac:	jbe    0x403eae
  403eae:	add    BYTE PTR gs:[eax],ah
  403eb1:	add    BYTE PTR [ebx+0x0],ah
  403eb4:	popa   
  403eb5:	add    BYTE PTR [ebx+0x0],dh
  403eb8:	add    BYTE PTR gs:[eax],ah
  403ebb:	add    BYTE PTR [ecx+0x0],ch
  403ebe:	outs   dx,BYTE PTR ds:[esi]
  403ebf:	add    BYTE PTR [eax],ah
  403ec1:	add    BYTE PTR [eax+0x0],dh
  403ec4:	jne    0x403ec6
  403ec6:	bound  eax,QWORD PTR [eax]
  403ec8:	ins    BYTE PTR es:[edi],dx
  403ec9:	add    BYTE PTR [ecx+0x0],ch
  403ecc:	arpl   WORD PTR [eax],ax
  403ece:	jae    0x403ed0
  403ed0:	sub    al,0x0
  403ed2:	and    BYTE PTR [eax],al
  403ed4:	add    BYTE PTR gs:[eax+0x0],bh
  403ed8:	je     0x403eda
  403eda:	add    BYTE PTR gs:[edx+0x0],dh
  403ede:	outs   dx,BYTE PTR ds:[esi]
  403edf:	add    BYTE PTR [ebx+0x0],dh
  403ee2:	and    BYTE PTR [eax],al
  403ee4:	and    BYTE PTR [eax],al
  403ee6:	and    BYTE PTR [eax],al
  403ee8:	and    BYTE PTR [eax],al
  403eea:	and    BYTE PTR [eax],al
  403eec:	das    
  403eed:	add    BYTE PTR [ebx+0x0],dl
  403ef0:	jo     0x403ef2
  403ef2:	cmp    al,0x0
  403ef4:	ins    BYTE PTR es:[edi],dx
  403ef5:	add    BYTE PTR [ebp+0x0],ah
  403ef8:	outs   dx,BYTE PTR ds:[esi]
  403ef9:	add    BYTE PTR [edi+0x0],ah
  403efc:	je     0x403efe
  403efe:	push   0x20003e00
  403f03:	add    BYTE PTR [ebx+0x0],dl
  403f06:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
  403f0b:	add    BYTE PTR [eax+0x0],dh
  403f0e:	popa   
  403f0f:	add    BYTE PTR [edi+0x0],ah
  403f12:	add    BYTE PTR gs:[eax],ah
  403f15:	add    BYTE PTR [eax+eax*1+0x65],ch
  403f19:	add    BYTE PTR [esi+0x0],ch
  403f1c:	add    BYTE PTR [si+0x0],dh
  403f20:	push   0x2f000a00
  403f25:	add    BYTE PTR [eax+eax*1+0x3c],al
  403f29:	add    BYTE PTR [esi+0x0],ch
  403f2c:	popa   
  403f2d:	add    BYTE PTR [ebp+0x0],ch
  403f30:	add    BYTE PTR gs:[esi],bh
  403f33:	add    BYTE PTR [ebx+0x0],bl
  403f36:	cmp    eax,0x65007400
  403f3b:	add    BYTE PTR [eax+0x0],bh
  403f3e:	je     0x403f40
  403f40:	pop    ebp
  403f41:	add    BYTE PTR [eax],ah
  403f43:	add    BYTE PTR [eax+eax*1+0x65],al
  403f47:	add    BYTE PTR [esi+0x0],ah
  403f4a:	imul   eax,DWORD PTR [eax],0x65006e
  403f50:	and    BYTE PTR [eax],al
  403f52:	je     0x403f54
  403f54:	add    BYTE PTR gs:[eax+0x0],bh
  403f58:	je     0x403f5a
  403f5a:	and    BYTE PTR [eax],al
  403f5c:	ins    DWORD PTR es:[edi],dx
  403f5d:	add    BYTE PTR [ecx+0x0],ah
  403f60:	arpl   WORD PTR [eax],ax
  403f62:	jb     0x403f64
  403f64:	outs   dx,DWORD PTR ds:[esi]
  403f65:	add    BYTE PTR [eax],ah
  403f67:	add    BYTE PTR [eax],ah
  403f69:	add    BYTE PTR [eax],ah
  403f6b:	add    BYTE PTR [eax],ah
  403f6d:	add    BYTE PTR [eax],ah
  403f6f:	add    BYTE PTR [eax],ah
  403f71:	add    BYTE PTR [eax],ah
  403f73:	add    BYTE PTR [eax],ah
  403f75:	add    BYTE PTR [eax],ah
  403f77:	add    BYTE PTR [edi],ch
  403f79:	add    BYTE PTR [ebx+0x0],dl
  403f7c:	jae    0x403f7e
  403f7e:	cmp    al,0x0
  403f80:	jae    0x403f82
  403f82:	je     0x403f84
  403f84:	jb     0x403f86
  403f86:	imul   eax,DWORD PTR [eax],0x67006e
  403f8c:	add    BYTE PTR ds:[eax],ah
  403f8f:	add    BYTE PTR [ebx+0x0],dl
  403f92:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
  403f97:	add    BYTE PTR [ebx+0x0],dh
  403f9a:	jne    0x403f9c
  403f9c:	bound  eax,QWORD PTR [eax]
  403f9e:	je     0x403fa0
  403fa0:	imul   eax,DWORD PTR [eax],0x6c0074
  403fa6:	add    BYTE PTR gs:[edx],cl
  403fa9:	add    BYTE PTR [edi],ch
  403fab:	add    BYTE PTR [ebp+0x0],al
  403fae:	push   eax
  403faf:	add    BYTE PTR [eax],ah
  403fb1:	add    BYTE PTR [edi+0x0],cl
  403fb4:	jne    0x403fb6
  403fb6:	je     0x403fb8
  403fb8:	jo     0x403fba
  403fba:	jne    0x403fbc
  403fbc:	je     0x403fbe
  403fbe:	and    BYTE PTR [eax],al
  403fc0:	jo     0x403fc2
  403fc2:	jb     0x403fc4
  403fc4:	add    BYTE PTR gs:[eax+0x0],dh
  403fc8:	jb     0x403fca
  403fca:	outs   dx,DWORD PTR ds:[esi]
  403fcb:	add    BYTE PTR [ebx+0x0],ah
  403fce:	add    BYTE PTR gs:[ebx+0x0],dh
  403fd2:	jae    0x403fd4
  403fd4:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
  403fd9:	add    BYTE PTR [eax+eax*1+0x69],ch
  403fdd:	add    BYTE PTR [ebx+0x0],dh
  403fe0:	je     0x403fe2
  403fe2:	imul   eax,DWORD PTR [eax],0x67006e
  403fe8:	and    BYTE PTR [eax],al
  403fea:	je     0x403fec
  403fec:	outs   dx,DWORD PTR ds:[esi]
  403fed:	add    BYTE PTR [eax],ah
  403fef:	add    BYTE PTR [ebx+0x0],dh
  403ff2:	je     0x403ff4
  403ff4:	add    BYTE PTR fs:[edi+0x0],ch
  403ff8:	jne    0x403ffa
  403ffa:	je     0x403ffc
  403ffc:	and    BYTE PTR [eax],al
  403ffe:	das    
  403fff:	add    BYTE PTR [ebx+0x0],dl
  404002:	je     0x404004
  404004:	cmp    al,0x0
  404006:	jae    0x404008
  404008:	je     0x40400a
  40400a:	jb     0x40400c
  40400c:	imul   eax,DWORD PTR [eax],0x67006e
  404012:	add    BYTE PTR ds:[eax],ah
  404015:	add    BYTE PTR [ebx+0x0],dl
  404018:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
  40401d:	add    BYTE PTR [eax+eax*1+0x69],dh
  404021:	add    BYTE PTR [eax+eax*1+0x6c],dh
  404025:	add    BYTE PTR [ebp+0x0],ah
  404028:	or     al,BYTE PTR [eax]
  40402a:	das    
  40402b:	add    BYTE PTR [esi+0x0],al
  40402e:	and    BYTE PTR [eax],al
  404030:	cmp    al,0x0
  404032:	push   0x78006500
  404037:	add    BYTE PTR [esi],bh
  404039:	add    BYTE PTR [eax],ah
  40403b:	add    BYTE PTR [ebx+0x0],dl
  40403e:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
  404043:	add    BYTE PTR [ebx+0x0],dh
  404046:	je     0x404048
  404048:	popa   
  404049:	add    BYTE PTR [ebx+0x0],ah
  40404c:	imul   eax,DWORD PTR [eax],0x20
  40404f:	add    BYTE PTR [ebx+0x0],dh
  404052:	imul   eax,DWORD PTR [eax],0x65007a
  404058:	and    BYTE PTR [eax],al
  40405a:	sub    BYTE PTR [eax],al
  40405c:	bound  eax,QWORD PTR [eax]
  40405e:	jns    0x404060
  404060:	je     0x404062
  404062:	add    BYTE PTR gs:[ebx+0x0],dh
  404066:	sub    DWORD PTR [eax],eax
  404068:	and    BYTE PTR [eax],al
  40406a:	and    BYTE PTR [eax],al
  40406c:	and    BYTE PTR [eax],al
  40406e:	and    BYTE PTR [eax],al
  404070:	and    BYTE PTR [eax],al
  404072:	and    BYTE PTR [eax],al
  404074:	and    BYTE PTR [eax],al
  404076:	and    BYTE PTR [eax],al
  404078:	and    BYTE PTR [eax],al
  40407a:	and    BYTE PTR [eax],al
  40407c:	and    BYTE PTR [eax],al
  40407e:	das    
  40407f:	add    BYTE PTR [ebx+0x0],dl
  404082:	js     0x404084
  404084:	and    BYTE PTR [eax],al
  404086:	dec    esp
  404087:	add    BYTE PTR [ecx+0x0],ch
  40408a:	jae    0x40408c
  40408c:	je     0x40408e
  40408e:	and    BYTE PTR [eax],al
  404090:	data16 add BYTE PTR [ecx+0x0],ah
  404094:	ins    BYTE PTR es:[edi],dx
  404095:	add    BYTE PTR [ebx+0x0],dh
  404098:	add    BYTE PTR gs:[eax],ah
  40409b:	add    BYTE PTR [ebx+0x0],ah
  40409e:	outs   dx,DWORD PTR ds:[esi]
  40409f:	add    BYTE PTR [esi+0x0],ch
  4040a2:	add    BYTE PTR fs:[ecx+0x0],ch
  4040a6:	je     0x4040a8
  4040a8:	imul   eax,DWORD PTR [eax],0x6e006f
  4040ae:	popa   
  4040af:	add    BYTE PTR [eax+eax*1+0x73],ch
  4040b3:	add    BYTE PTR [edx],cl
  4040b5:	add    BYTE PTR [edi],ch
  4040b7:	add    BYTE PTR [esi+0x0],al
  4040ba:	add    BYTE PTR gs:[eax+eax*1],bh
  4040be:	data16 add BYTE PTR [ecx+0x0],ch
  4040c2:	ins    BYTE PTR es:[edi],dx
  4040c3:	add    BYTE PTR [ebp+0x0],ah
  4040c6:	add    BYTE PTR ds:[eax],ah
  4040c9:	add    BYTE PTR [esi+0x0],cl
  4040cc:	popa   
  4040cd:	add    BYTE PTR [ebp+0x0],ch
  4040d0:	add    BYTE PTR gs:[eax],ah
  4040d3:	add    BYTE PTR [ebp+0x0],ah
  4040d6:	js     0x4040d8
  4040d8:	add    BYTE PTR gs:[ebx+0x0],ah
  4040dc:	jne    0x4040de
  4040de:	je     0x4040e0
  4040e0:	popa   
  4040e1:	add    BYTE PTR [edx+0x0],ah
  4040e4:	ins    BYTE PTR es:[edi],dx
  4040e5:	add    BYTE PTR [ebp+0x0],ah
  4040e8:	and    BYTE PTR [eax],al
  4040ea:	and    BYTE PTR [eax],al
  4040ec:	and    BYTE PTR [eax],al
  4040ee:	and    BYTE PTR [eax],al
  4040f0:	and    BYTE PTR [eax],al
  4040f2:	and    BYTE PTR [eax],al
  4040f4:	and    BYTE PTR [eax],al
  4040f6:	and    BYTE PTR [eax],al
  4040f8:	and    BYTE PTR [eax],al
  4040fa:	and    BYTE PTR [eax],al
  4040fc:	and    BYTE PTR [eax],al
  4040fe:	and    BYTE PTR [eax],al
  404100:	and    BYTE PTR [eax],al
  404102:	and    BYTE PTR [eax],al
  404104:	and    BYTE PTR [eax],al
  404106:	and    BYTE PTR [eax],al
  404108:	and    BYTE PTR [eax],al
  40410a:	das    
  40410b:	add    BYTE PTR [eax+eax*1+0x61],dl
  40410f:	add    BYTE PTR [eax+eax*1],bh
  404112:	data16 add BYTE PTR [ecx+0x0],ch
  404116:	ins    BYTE PTR es:[edi],dx
  404117:	add    BYTE PTR [ebp+0x0],ah
  40411a:	add    BYTE PTR ds:[eax],ah
  40411d:	add    BYTE PTR [ecx+0x0],al
  404120:	jae    0x404122
  404122:	jae    0x404124
  404124:	add    BYTE PTR gs:[ebp+0x0],ch
  404128:	bound  eax,QWORD PTR [eax]
  40412a:	ins    BYTE PTR es:[edi],dx
  40412b:	add    BYTE PTR [ebp+0x0],ah
  40412e:	and    BYTE PTR [eax],al
  404130:	outs   dx,BYTE PTR ds:[esi]
  404131:	add    BYTE PTR [edi+0x0],ch
  404134:	outs   dx,BYTE PTR ds:[esi]
  404135:	add    BYTE PTR ds:0x41002e00,ch
  40413b:	add    BYTE PTR [ebx+0x0],dl
  40413e:	dec    ebp
  40413f:	add    BYTE PTR [eax],ah
  404141:	add    BYTE PTR [esi+0x0],ah
  404144:	imul   eax,DWORD PTR [eax],0x65006c
  40414a:	or     al,BYTE PTR [eax]
  40414c:	das    
  40414d:	add    BYTE PTR [esi+0x0],al
  404150:	ins    BYTE PTR es:[edi],dx
  404151:	add    BYTE PTR [ebx+0x0],bl
  404154:	data16 add BYTE PTR [ecx+0x0],ch
  404158:	ins    BYTE PTR es:[edi],dx
  404159:	add    BYTE PTR [ebp+0x0],ah
  40415c:	pop    ebp
  40415d:	add    BYTE PTR [eax],ah
  40415f:	add    BYTE PTR [edi+0x0],al
  404162:	add    BYTE PTR gs:[esi+0x0],ch
  404166:	add    BYTE PTR gs:[edx+0x0],dh
  40416a:	popa   
  40416b:	add    BYTE PTR [eax+eax*1+0x65],dh
  40416f:	add    BYTE PTR [eax],ah
  404171:	add    BYTE PTR [eax+eax*1+0x69],ch
  404175:	add    BYTE PTR [ebx+0x0],dh
  404178:	je     0x40417a
  40417a:	imul   eax,DWORD PTR [eax],0x67006e
  404180:	and    BYTE PTR [eax],al
  404182:	and    BYTE PTR [eax],al
  404184:	and    BYTE PTR [eax],al
  404186:	and    BYTE PTR [eax],al
  404188:	and    BYTE PTR [eax],al
  40418a:	and    BYTE PTR [eax],al
  40418c:	and    BYTE PTR [eax],al
  40418e:	and    BYTE PTR [eax],al
  404190:	and    BYTE PTR [eax],al
  404192:	and    BYTE PTR [eax],al
  404194:	and    BYTE PTR [eax],al
  404196:	and    BYTE PTR [eax],al
  404198:	and    BYTE PTR [eax],al
  40419a:	and    BYTE PTR [eax],al
  40419c:	and    BYTE PTR [eax],al
  40419e:	and    BYTE PTR [eax],al
  4041a0:	das    
  4041a1:	add    BYTE PTR [edi+0x0],dh
  4041a4:	and    BYTE PTR [eax],al
  4041a6:	push   ebx
  4041a7:	add    BYTE PTR [ecx+0x0],ah
  4041aa:	ins    DWORD PTR es:[edi],dx
  4041ab:	add    BYTE PTR [ebp+0x0],ah
  4041ae:	and    BYTE PTR [eax],al
  4041b0:	popa   
  4041b1:	add    BYTE PTR [ebx+0x0],dh
  4041b4:	and    BYTE PTR [eax],al
  4041b6:	das    
  4041b7:	add    BYTE PTR [edi+0x0],dl
  4041ba:	xor    BYTE PTR [eax],al
  4041bc:	and    BYTE PTR [eax],al
  4041be:	das    
  4041bf:	add    BYTE PTR [edi+0x0],dl
  4041c2:	pop    eax
  4041c3:	add    BYTE PTR [edx],cl
  4041c5:	add    BYTE PTR [edi],ch
  4041c7:	add    BYTE PTR [esi+0x0],al
  4041ca:	ins    DWORD PTR es:[edi],dx
  4041cb:	add    BYTE PTR [ebx+0x0],bl
  4041ce:	data16 add BYTE PTR [ecx+0x0],ch
  4041d2:	ins    BYTE PTR es:[edi],dx
  4041d3:	add    BYTE PTR [ebp+0x0],ah
  4041d6:	pop    ebp
  4041d7:	add    BYTE PTR [eax],ah
  4041d9:	add    BYTE PTR [edi+0x0],al
  4041dc:	add    BYTE PTR gs:[esi+0x0],ch
  4041e0:	add    BYTE PTR gs:[edx+0x0],dh
  4041e4:	popa   
  4041e5:	add    BYTE PTR [eax+eax*1+0x65],dh
  4041e9:	add    BYTE PTR [eax],ah
  4041eb:	add    BYTE PTR [ebp+0x0],ch
  4041ee:	popa   
  4041ef:	add    BYTE PTR [eax+0x0],dh
  4041f2:	and    BYTE PTR [eax],al
  4041f4:	and    BYTE PTR [eax],al
  4041f6:	and    BYTE PTR [eax],al
  4041f8:	and    BYTE PTR [eax],al
  4041fa:	and    BYTE PTR [eax],al
  4041fc:	and    BYTE PTR [eax],al
  4041fe:	and    BYTE PTR [eax],al
  404200:	and    BYTE PTR [eax],al
  404202:	and    BYTE PTR [eax],al
  404204:	and    BYTE PTR [eax],al
  404206:	and    BYTE PTR [eax],al
  404208:	and    BYTE PTR [eax],al
  40420a:	and    BYTE PTR [eax],al
  40420c:	and    BYTE PTR [eax],al
  40420e:	and    BYTE PTR [eax],al
  404210:	and    BYTE PTR [eax],al
  404212:	and    BYTE PTR [eax],al
  404214:	and    BYTE PTR [eax],al
  404216:	and    BYTE PTR [eax],al
  404218:	and    BYTE PTR [eax],al
  40421a:	das    
  40421b:	add    BYTE PTR [edi+0x0],dl
  40421e:	pop    eax
  40421f:	add    BYTE PTR [eax],ah
  404221:	add    BYTE PTR [eax+eax*1+0x72],dl
  404225:	add    BYTE PTR [ebp+0x0],ah
  404228:	popa   
  404229:	add    BYTE PTR [eax+eax*1+0x20],dh
  40422d:	add    BYTE PTR [edi+0x0],dh
  404230:	popa   
  404231:	add    BYTE PTR [edx+0x0],dh
  404234:	outs   dx,BYTE PTR ds:[esi]
  404235:	add    BYTE PTR [ecx+0x0],ch
  404238:	outs   dx,BYTE PTR ds:[esi]
  404239:	add    BYTE PTR [edi+0x0],ah
  40423c:	jae    0x40423e
  40423e:	and    BYTE PTR [eax],al
  404240:	popa   
  404241:	add    BYTE PTR [ebx+0x0],dh
  404244:	and    BYTE PTR [eax],al
  404246:	add    BYTE PTR gs:[edx+0x0],dh
  40424a:	jb     0x40424c
  40424c:	outs   dx,DWORD PTR ds:[esi]
  40424d:	add    BYTE PTR [edx+0x0],dh
  404250:	jae    0x404252
  404252:	or     al,BYTE PTR [eax]
  404254:	das    
  404255:	add    BYTE PTR [esi+0x0],al
  404258:	outs   dx,DWORD PTR ds:[esi]
  404259:	add    BYTE PTR [eax+eax*1],bh
  40425c:	data16 add BYTE PTR [ecx+0x0],ch
  404260:	ins    BYTE PTR es:[edi],dx
  404261:	add    BYTE PTR [ebp+0x0],ah
  404264:	add    BYTE PTR ds:[eax],ah
  404267:	add    BYTE PTR [esi+0x0],cl
  40426a:	popa   
  40426b:	add    BYTE PTR [ebp+0x0],ch
  40426e:	add    BYTE PTR gs:[eax],ah
  404271:	add    BYTE PTR [edi+0x0],ch
  404274:	bound  eax,QWORD PTR [eax]
  404276:	push   0x0
  404278:	add    BYTE PTR gs:[ebx+0x0],ah
  40427c:	je     0x40427e
  40427e:	and    BYTE PTR [eax],al
  404280:	data16 add BYTE PTR [ecx+0x0],ch
  404284:	ins    BYTE PTR es:[edi],dx
  404285:	add    BYTE PTR [ebp+0x0],ah
  404288:	and    BYTE PTR [eax],al
  40428a:	and    BYTE PTR [eax],al
  40428c:	and    BYTE PTR [eax],al
  40428e:	and    BYTE PTR [eax],al
  404290:	and    BYTE PTR [eax],al
  404292:	and    BYTE PTR [eax],al
  404294:	and    BYTE PTR [eax],al
  404296:	and    BYTE PTR [eax],al
  404298:	and    BYTE PTR [eax],al
  40429a:	and    BYTE PTR [eax],al
  40429c:	and    BYTE PTR [eax],al
  40429e:	and    BYTE PTR [eax],al
  4042a0:	and    BYTE PTR [eax],al
  4042a2:	and    BYTE PTR [eax],al
  4042a4:	and    BYTE PTR [eax],al
  4042a6:	and    BYTE PTR [eax],al
  4042a8:	das    
  4042a9:	add    BYTE PTR [edi+0x0],dl
  4042ac:	cmp    al,0x0
  4042ae:	outs   dx,BYTE PTR ds:[esi]
  4042af:	add    BYTE PTR [ebp+0x0],dh
  4042b2:	ins    DWORD PTR es:[edi],dx
  4042b3:	add    BYTE PTR [edx+0x0],ah
  4042b6:	add    BYTE PTR gs:[edx+0x0],dh
  4042ba:	add    BYTE PTR ds:[eax],ah
  4042bd:	add    BYTE PTR [ebx+0x0],dl
  4042c0:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
  4042c5:	add    BYTE PTR [edi+0x0],dh
  4042c8:	popa   
  4042c9:	add    BYTE PTR [edx+0x0],dh
  4042cc:	outs   dx,BYTE PTR ds:[esi]
  4042cd:	add    BYTE PTR [ecx+0x0],ch
  4042d0:	outs   dx,BYTE PTR ds:[esi]
  4042d1:	add    BYTE PTR [edi+0x0],ah
  4042d4:	and    BYTE PTR [eax],al
  4042d6:	ins    BYTE PTR es:[edi],dx
  4042d7:	add    BYTE PTR [ebp+0x0],ah
  4042da:	jbe    0x4042dc
  4042dc:	add    BYTE PTR gs:[eax+eax*1+0xa],ch
  4042e1:	add    BYTE PTR [edi],ch
  4042e3:	add    BYTE PTR [esi+0x0],al
  4042e6:	jb     0x4042e8
  4042e8:	pop    ebx
  4042e9:	add    BYTE PTR [esi+0x0],ah
  4042ec:	imul   eax,DWORD PTR [eax],0x65006c
  4042f2:	pop    ebp
  4042f3:	add    BYTE PTR [eax],ah
  4042f5:	add    BYTE PTR [edi+0x0],al
  4042f8:	add    BYTE PTR gs:[esi+0x0],ch
  4042fc:	add    BYTE PTR gs:[edx+0x0],dh
  404300:	popa   
  404301:	add    BYTE PTR [eax+eax*1+0x65],dh
  404305:	add    BYTE PTR [eax],ah
  404307:	add    BYTE PTR [eax+eax*1+0x69],ch
  40430b:	add    BYTE PTR [ebp+0x0],ch
  40430e:	imul   eax,DWORD PTR [eax],0x650074
  404314:	add    BYTE PTR fs:[eax],ah
  404317:	add    BYTE PTR [edx+0x0],ah
  40431a:	jb     0x40431c
  40431c:	outs   dx,DWORD PTR ds:[esi]
  40431d:	add    BYTE PTR [edi+0x0],dh
  404320:	jae    0x404322
  404322:	add    BYTE PTR gs:[edx+0x0],dh
  404326:	and    BYTE PTR [eax],al
  404328:	imul   eax,DWORD PTR [eax],0x66006e
  40432e:	outs   dx,DWORD PTR ds:[esi]
  40432f:	add    BYTE PTR [eax],ah
  404331:	add    BYTE PTR [eax],ah
  404333:	add    BYTE PTR [eax],ah
  404335:	add    BYTE PTR [edi],ch
  404337:	add    BYTE PTR [eax+0x0],bl
  40433a:	and    BYTE PTR [eax],al
  40433c:	dec    ecx
  40433d:	add    BYTE PTR [edi+0x0],ah
  404340:	outs   dx,BYTE PTR ds:[esi]
  404341:	add    BYTE PTR [edi+0x0],ch
  404344:	jb     0x404346
  404346:	add    BYTE PTR gs:[eax],ah
  404349:	add    BYTE PTR [ecx+0x0],cl
  40434c:	dec    esi
  40434d:	add    BYTE PTR [ebx+0x0],al
  404350:	dec    esp
  404351:	add    BYTE PTR [ebp+0x0],dl
  404354:	inc    esp
  404355:	add    BYTE PTR [ebp+0x0],al
  404358:	and    BYTE PTR [eax],al
  40435a:	add    BYTE PTR gs:[esi+0x0],ch
  40435e:	jbe    0x404360
  404360:	imul   eax,DWORD PTR [eax],0x6f0072
  404366:	outs   dx,BYTE PTR ds:[esi]
  404367:	add    BYTE PTR [ebp+0x0],ch
  40436a:	add    BYTE PTR gs:[esi+0x0],ch
  40436e:	je     0x404370
  404370:	and    BYTE PTR [eax],al
  404372:	jo     0x404374
  404374:	popa   
  404375:	add    BYTE PTR [eax+eax*1+0x68],dh
  404379:	add    BYTE PTR [edx],cl
  40437b:	add    BYTE PTR [edi],ch
  40437d:	add    BYTE PTR [esi+0x0],al
  404380:	push   edx
  404381:	add    BYTE PTR [ebx+0x0],bl
  404384:	data16 add BYTE PTR [ecx+0x0],ch
  404388:	ins    BYTE PTR es:[edi],dx
  404389:	add    BYTE PTR [ebp+0x0],ah
  40438c:	pop    ebp
  40438d:	add    BYTE PTR [eax],ah
  40438f:	add    BYTE PTR [edi+0x0],al
  404392:	add    BYTE PTR gs:[esi+0x0],ch
  404396:	add    BYTE PTR gs:[edx+0x0],dh
  40439a:	popa   
  40439b:	add    BYTE PTR [eax+eax*1+0x65],dh
  40439f:	add    BYTE PTR [eax],ah
  4043a1:	add    BYTE PTR [esi+0x0],ah
  4043a4:	jne    0x4043a6
  4043a6:	ins    BYTE PTR es:[edi],dx
  4043a7:	add    BYTE PTR [eax+eax*1+0x20],ch
  4043ab:	add    BYTE PTR [edx+0x0],ah
  4043ae:	jb     0x4043b0
  4043b0:	outs   dx,DWORD PTR ds:[esi]
  4043b1:	add    BYTE PTR [edi+0x0],dh
  4043b4:	jae    0x4043b6
  4043b6:	add    BYTE PTR gs:[edx+0x0],dh
  4043ba:	and    BYTE PTR [eax],al
  4043bc:	imul   eax,DWORD PTR [eax],0x66006e
  4043c2:	outs   dx,DWORD PTR ds:[esi]
  4043c3:	add    BYTE PTR [eax],ah
  4043c5:	add    BYTE PTR [eax],ah
  4043c7:	add    BYTE PTR [eax],ah
  4043c9:	add    BYTE PTR [eax],ah
  4043cb:	add    BYTE PTR [eax],ah
  4043cd:	add    BYTE PTR [eax],ah
  4043cf:	add    BYTE PTR [edi],ch
  4043d1:	add    BYTE PTR [edx+0x0],bl
  4043d4:	add    BYTE PTR fs:[eax],ah
  4043d7:	add    BYTE PTR [ecx+0x0],al
  4043da:	add    BYTE PTR fs:[eax+eax*1+0x20],ah
  4043df:	add    BYTE PTR [eax+eax*1+0x69],ch
  4043e3:	add    BYTE PTR [esi+0x0],ch
  4043e6:	add    BYTE PTR gs:[eax],ah
  4043e9:	add    BYTE PTR [esi+0x0],ch
  4043ec:	jne    0x4043ee
  4043ee:	ins    DWORD PTR es:[edi],dx
  4043ef:	add    BYTE PTR [edx+0x0],ah
  4043f2:	add    BYTE PTR gs:[edx+0x0],dh
  4043f6:	and    BYTE PTR [eax],al
  4043f8:	add    BYTE PTR fs:[ebp+0x0],ah
  4043fc:	bound  eax,QWORD PTR [eax]
  4043fe:	jne    0x404400
  404400:	add    BYTE PTR [bx+si],ah
  404403:	add    BYTE PTR [ecx+0x0],ch
  404406:	outs   dx,BYTE PTR ds:[esi]
  404407:	add    BYTE PTR [esi+0x0],ah
  40440a:	outs   dx,DWORD PTR ds:[esi]
  40440b:	add    BYTE PTR [edx],cl
  40440d:	add    BYTE PTR [edi],ch
  40440f:	add    BYTE PTR [ecx+0x0],cl
  404412:	cmp    al,0x0
  404414:	outs   dx,BYTE PTR ds:[esi]
  404415:	add    BYTE PTR [ecx+0x0],ah
  404418:	ins    DWORD PTR es:[edi],dx
  404419:	add    BYTE PTR [ebp+0x0],ah
  40441c:	add    BYTE PTR ds:[eax],ah
  40441f:	add    BYTE PTR [ecx+0x0],al
  404422:	add    BYTE PTR fs:[eax+eax*1+0x20],ah
  404427:	add    BYTE PTR [ecx+0x0],ch
  40442a:	outs   dx,BYTE PTR ds:[esi]
  40442b:	add    BYTE PTR [ebx+0x0],ah
  40442e:	ins    BYTE PTR es:[edi],dx
  40442f:	add    BYTE PTR [ebp+0x0],dh
  404432:	add    BYTE PTR fs:[ebp+0x0],ah
  404436:	and    BYTE PTR [eax],al
  404438:	jo     0x40443a
  40443a:	popa   
  40443b:	add    BYTE PTR [eax+eax*1+0x68],dh
  40443f:	add    BYTE PTR [eax],ah
  404441:	add    BYTE PTR [eax],ah
  404443:	add    BYTE PTR [eax],ah
  404445:	add    BYTE PTR [eax],ah
  404447:	add    BYTE PTR [eax],ah
  404449:	add    BYTE PTR [eax],ah
  40444b:	add    BYTE PTR [eax],ah
  40444d:	add    BYTE PTR [eax],ah
  40444f:	add    BYTE PTR [eax],ah
  404451:	add    BYTE PTR [eax],ah
  404453:	add    BYTE PTR [eax],ah
  404455:	add    BYTE PTR [eax],ah
  404457:	add    BYTE PTR [eax],ah
  404459:	add    BYTE PTR [eax],ah
  40445b:	add    BYTE PTR [eax],ah
  40445d:	add    BYTE PTR [eax],ah
  40445f:	add    BYTE PTR [eax],ah
  404461:	add    BYTE PTR [edi],ch
  404463:	add    BYTE PTR [edx+0x0],bl
  404466:	data16 add BYTE PTR [eax],ah
  404469:	add    BYTE PTR [ebp+0x0],cl
  40446c:	popa   
  40446d:	add    BYTE PTR [ebx+0x0],ch
  404470:	add    BYTE PTR gs:[eax],ah
  404473:	add    BYTE PTR [ecx+0x0],ah
  404476:	ins    BYTE PTR es:[edi],dx
  404477:	add    BYTE PTR [eax+eax*1+0x20],ch
  40447b:	add    BYTE PTR [ebx+0x0],dh
  40447e:	jns    0x404480
  404480:	ins    DWORD PTR es:[edi],dx
  404481:	add    BYTE PTR [edx+0x0],ah
  404484:	outs   dx,DWORD PTR ds:[esi]
  404485:	add    BYTE PTR [eax+eax*1+0x73],ch
  404489:	add    BYTE PTR [eax],ah
  40448b:	add    BYTE PTR [eax+0x0],dh
  40448e:	jne    0x404490
  404490:	bound  eax,QWORD PTR [eax]
  404492:	ins    BYTE PTR es:[edi],dx
  404493:	add    BYTE PTR [ecx+0x0],ch
  404496:	arpl   WORD PTR [eax],ax
  404498:	or     al,BYTE PTR [eax]
  40449a:	das    
  40449b:	add    BYTE PTR [eax+eax*1+0x69],ch
  40449f:	add    BYTE PTR [esi+0x0],ch
  4044a2:	imul   eax,DWORD PTR [eax],0x20
  4044a5:	add    BYTE PTR [eax+eax*1],bh
  4044a8:	ins    BYTE PTR es:[edi],dx
  4044a9:	add    BYTE PTR [ecx+0x0],ch
  4044ac:	outs   dx,BYTE PTR ds:[esi]
  4044ad:	add    BYTE PTR [ebx+0x0],ch
  4044b0:	add    BYTE PTR gs:[edx+0x0],dh
  4044b4:	and    BYTE PTR [eax],al
  4044b6:	outs   dx,DWORD PTR ds:[esi]
  4044b7:	add    BYTE PTR [eax+0x0],dh
  4044ba:	je     0x4044bc
  4044bc:	imul   eax,DWORD PTR [eax],0x6e006f
  4044c2:	jae    0x4044c4
  4044c4:	and    BYTE PTR [eax],al
  4044c6:	popa   
  4044c7:	add    BYTE PTR [esi+0x0],ch
  4044ca:	add    BYTE PTR fs:[eax],ah
  4044cd:	add    BYTE PTR [eax+eax*1+0x69],ch
  4044d1:	add    BYTE PTR [edx+0x0],ah
  4044d4:	jb     0x4044d6
  4044d6:	popa   
  4044d7:	add    BYTE PTR [edx+0x0],dh
  4044da:	imul   eax,DWORD PTR [eax],0x730065
  4044e0:	add    BYTE PTR ds:[eax],ah
  4044e3:	add    BYTE PTR [eax],ah
  4044e5:	add    BYTE PTR [eax],ah
  4044e7:	add    BYTE PTR [eax],ah
  4044e9:	add    BYTE PTR [eax],ah
  4044eb:	add    BYTE PTR [eax],ah
  4044ed:	add    BYTE PTR [edi],ch
  4044ef:	add    BYTE PTR [edx+0x0],bl
  4044f2:	imul   eax,DWORD PTR [eax],0x410020
  4044f8:	add    BYTE PTR fs:[eax+eax*1+0x20],ah
  4044fd:	add    BYTE PTR [ebx+0x0],dh
  404500:	jns    0x404502
  404502:	ins    DWORD PTR es:[edi],dx
  404503:	add    BYTE PTR [edx+0x0],ah
  404506:	outs   dx,DWORD PTR ds:[esi]
  404507:	add    BYTE PTR [eax+eax*1+0x69],ch
  40450b:	add    BYTE PTR [ebx+0x0],ah
  40450e:	and    BYTE PTR [eax],al
  404510:	add    BYTE PTR fs:[ebp+0x0],ah
  404514:	bound  eax,QWORD PTR [eax]
  404516:	jne    0x404518
  404518:	add    BYTE PTR [bx+si],ah
  40451b:	add    BYTE PTR [ecx+0x0],ch
  40451e:	outs   dx,BYTE PTR ds:[esi]
  40451f:	add    BYTE PTR [esi+0x0],ah
  404522:	outs   dx,DWORD PTR ds:[esi]
  404523:	add    BYTE PTR [edx],cl
  404525:	add    BYTE PTR [edi],ch
  404527:	add    BYTE PTR [esi+0x0],ch
  40452a:	outs   dx,DWORD PTR ds:[esi]
  40452b:	add    BYTE PTR [eax+eax*1+0x6f],ch
  40452f:	add    BYTE PTR [edi+0x0],ah
  404532:	outs   dx,DWORD PTR ds:[esi]
  404533:	add    BYTE PTR [eax],ah
  404535:	add    BYTE PTR [ebx+0x0],dl
  404538:	jne    0x40453a
  40453a:	jo     0x40453c
  40453c:	jo     0x40453e
  40453e:	jb     0x404540
  404540:	add    BYTE PTR gs:[ebx+0x0],dh
  404544:	jae    0x404546
  404546:	and    BYTE PTR [eax],al
  404548:	arpl   WORD PTR [eax],ax
  40454a:	outs   dx,DWORD PTR ds:[esi]
  40454b:	add    BYTE PTR [eax+0x0],dh
  40454e:	jns    0x404550
  404550:	jb     0x404552
  404552:	imul   eax,DWORD PTR [eax],0x680067
  404558:	je     0x40455a
  40455a:	and    BYTE PTR [eax],al
  40455c:	ins    DWORD PTR es:[edi],dx
  40455d:	add    BYTE PTR [ebp+0x0],ah
  404560:	jae    0x404562
  404562:	jae    0x404564
  404564:	popa   
  404565:	add    BYTE PTR [edi+0x0],ah
  404568:	add    BYTE PTR gs:[eax],ah
  40456b:	add    BYTE PTR [eax],ah
  40456d:	add    BYTE PTR [eax],ah
  40456f:	add    BYTE PTR [eax],ah
  404571:	add    BYTE PTR [eax],ah
  404573:	add    BYTE PTR [eax],ah
  404575:	add    BYTE PTR [eax],ah
  404577:	add    BYTE PTR [eax],ah
  404579:	add    BYTE PTR [edi],ch
  40457b:	add    BYTE PTR [edx+0x0],bl
  40457e:	jo     0x404580
  404580:	pop    ebx
  404581:	add    BYTE PTR [esi+0x0],ch
  404584:	pop    ebp
  404585:	add    BYTE PTR [eax],ah
  404587:	add    BYTE PTR [ebx+0x0],dl
  40458a:	add    BYTE PTR gs:[eax+eax*1+0x20],dh
  40458f:	add    BYTE PTR [ebx+0x0],dh
  404592:	je     0x404594
  404594:	jb     0x404596
  404596:	jne    0x404598
  404598:	arpl   WORD PTR [eax],ax
  40459a:	je     0x40459c
  40459c:	jne    0x40459e
  40459e:	jb     0x4045a0
  4045a0:	add    BYTE PTR gs:[eax],ah
  4045a3:	add    BYTE PTR [ecx+0x0],ah
  4045a6:	ins    BYTE PTR es:[edi],dx
  4045a7:	add    BYTE PTR [ecx+0x0],ch
  4045aa:	add    BYTE PTR [bp+0x0],ch
  4045ae:	ins    DWORD PTR es:[edi],dx
  4045af:	add    BYTE PTR [ebp+0x0],ah
  4045b2:	outs   dx,BYTE PTR ds:[esi]
  4045b3:	add    BYTE PTR [eax+eax*1+0xa],dh
  4045b7:	add    BYTE PTR [edi],ch
  4045b9:	add    BYTE PTR [ebx+0x0],dl
  4045bc:	popa   
  4045bd:	add    BYTE PTR [eax],ah
  4045bf:	add    BYTE PTR [ebp+0x0],cl
  4045c2:	popa   
  4045c3:	add    BYTE PTR [eax+0x0],bh
  4045c6:	imul   eax,DWORD PTR [eax],0x69006d
  4045cc:	jp     0x4045ce
  4045ce:	add    BYTE PTR gs:[eax],ah
  4045d1:	add    BYTE PTR [ebx+0x0],dh
  4045d4:	outs   dx,DWORD PTR ds:[esi]
  4045d5:	add    BYTE PTR [ebp+0x0],dh
  4045d8:	jb     0x4045da
  4045da:	arpl   WORD PTR [eax],ax
  4045dc:	add    BYTE PTR gs:[eax],ah
  4045df:	add    BYTE PTR [eax+eax*1+0x69],ch
  4045e3:	add    BYTE PTR [ebx+0x0],dh
  4045e6:	je     0x4045e8
  4045e8:	imul   eax,DWORD PTR [eax],0x67006e
  4045ee:	and    BYTE PTR [eax],al
  4045f0:	and    BYTE PTR [eax],al
  4045f2:	and    BYTE PTR [eax],al
  4045f4:	and    BYTE PTR [eax],al
  4045f6:	and    BYTE PTR [eax],al
  4045f8:	and    BYTE PTR [eax],al
  4045fa:	and    BYTE PTR [eax],al
  4045fc:	and    BYTE PTR [eax],al
  4045fe:	and    BYTE PTR [eax],al
  404600:	and    BYTE PTR [eax],al
  404602:	and    BYTE PTR [eax],al
  404604:	and    BYTE PTR [eax],al
  404606:	and    BYTE PTR [eax],al
  404608:	and    BYTE PTR [eax],al
  40460a:	and    BYTE PTR [eax],al
  40460c:	das    
  40460d:	add    BYTE PTR [edx+0x0],bl
  404610:	jae    0x404612
  404612:	and    BYTE PTR [eax],al
  404614:	push   eax
  404615:	add    BYTE PTR [ebp+0x0],ah
  404618:	jb     0x40461a
  40461a:	data16 add BYTE PTR [edi+0x0],ch
  40461e:	jb     0x404620
  404620:	ins    DWORD PTR es:[edi],dx
  404621:	add    BYTE PTR [eax],ah
  404623:	add    BYTE PTR [ebx+0x0],dh
  404626:	jns    0x404628
  404628:	outs   dx,BYTE PTR ds:[esi]
  404629:	add    BYTE PTR [eax+eax*1+0x61],dh
  40462d:	add    BYTE PTR [eax+0x0],bh
  404630:	and    BYTE PTR [eax],al
  404632:	arpl   WORD PTR [eax],ax
  404634:	push   0x63006500
  404639:	add    BYTE PTR [ebx+0x0],ch
  40463c:	and    BYTE PTR [eax],al
  40463e:	outs   dx,DWORD PTR ds:[esi]
  40463f:	add    BYTE PTR [esi+0x0],ch
  404642:	ins    BYTE PTR es:[edi],dx
  404643:	add    BYTE PTR [ecx+0x0],bh
  404646:	or     al,BYTE PTR [eax]
  404648:	das    
  404649:	add    BYTE PTR [ebp+0x0],ah
  40464c:	jb     0x40464e
  40464e:	jb     0x404650
  404650:	outs   dx,DWORD PTR ds:[esi]
  404651:	add    BYTE PTR [edx+0x0],dh
  404654:	push   edx
  404655:	add    BYTE PTR [ebp+0x0],ah
  404658:	jo     0x40465a
  40465a:	outs   dx,DWORD PTR ds:[esi]
  40465b:	add    BYTE PTR [edx+0x0],dh
  40465e:	je     0x404660
  404660:	cmp    al,BYTE PTR [eax]
  404662:	cmp    al,0x0
  404664:	outs   dx,DWORD PTR ds:[esi]
  404665:	add    BYTE PTR [eax+0x0],dh
  404668:	je     0x40466a
  40466a:	imul   eax,DWORD PTR [eax],0x6e006f
  404670:	add    BYTE PTR ds:[eax],ah
  404673:	add    BYTE PTR [edx+0x0],dl
  404676:	add    BYTE PTR gs:[eax+0x0],dh
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	add    BYTE PTR [edx+0x0],dh
  40467e:	je     0x404680
  404680:	and    BYTE PTR [eax],al
  404682:	imul   eax,DWORD PTR [eax],0x74006e
  404688:	add    BYTE PTR gs:[edx+0x0],dh
  40468c:	outs   dx,BYTE PTR ds:[esi]
  40468d:	add    BYTE PTR [ecx+0x0],ah
  404690:	ins    BYTE PTR es:[edi],dx
  404691:	add    BYTE PTR [eax],ah
  404693:	add    BYTE PTR [ecx+0x0],ah
  404696:	jae    0x404698
  404698:	jae    0x40469a
  40469a:	add    BYTE PTR gs:[ebp+0x0],ch
  40469e:	bound  eax,QWORD PTR [eax]
  4046a0:	ins    BYTE PTR es:[edi],dx
  4046a1:	add    BYTE PTR [ebp+0x0],ah
  4046a4:	jb     0x4046a6
  4046a6:	and    BYTE PTR [eax],al
  4046a8:	add    BYTE PTR gs:[edx+0x0],dh
  4046ac:	jb     0x4046ae
  4046ae:	outs   dx,DWORD PTR ds:[esi]
  4046af:	add    BYTE PTR [edx+0x0],dh
  4046b2:	jae    0x4046b4
  4046b4:	and    BYTE PTR [eax],al
  4046b6:	je     0x4046b8
  4046b8:	outs   dx,DWORD PTR ds:[esi]
  4046b9:	add    BYTE PTR [eax],ah
  4046bb:	add    BYTE PTR [ebp+0x0],cl
  4046be:	imul   eax,DWORD PTR [eax],0x720063
  4046c4:	outs   dx,DWORD PTR ds:[esi]
  4046c5:	add    BYTE PTR [ebx+0x0],dh
  4046c8:	outs   dx,DWORD PTR ds:[esi]
  4046c9:	add    BYTE PTR [esi+0x0],ah
  4046cc:	je     0x4046ce
  4046ce:	or     al,BYTE PTR [eax]
  4046d0:	and    BYTE PTR [eax],al
  4046d2:	and    BYTE PTR [eax],al
  4046d4:	and    BYTE PTR [eax],al
  4046d6:	and    BYTE PTR [eax],al
  4046d8:	outs   dx,BYTE PTR ds:[esi]
  4046d9:	add    BYTE PTR [edi+0x0],ch
  4046dc:	outs   dx,BYTE PTR ds:[esi]
  4046dd:	add    BYTE PTR [ebp+0x0],ah
  4046e0:	and    BYTE PTR [eax],al
  4046e2:	sub    eax,0x64002000
  4046e7:	add    BYTE PTR [edi+0x0],ch
  4046ea:	and    BYTE PTR [eax],al
  4046ec:	outs   dx,BYTE PTR ds:[esi]
  4046ed:	add    BYTE PTR [edi+0x0],ch
  4046f0:	je     0x4046f2
  4046f2:	and    BYTE PTR [eax],al
  4046f4:	jae    0x4046f6
  4046f6:	add    BYTE PTR gs:[esi+0x0],ch
  4046fa:	add    BYTE PTR fs:[eax],ah
  4046fd:	add    BYTE PTR [edx+0x0],dh
  404700:	add    BYTE PTR gs:[eax+0x0],dh
  404704:	outs   dx,DWORD PTR ds:[esi]
  404705:	add    BYTE PTR [edx+0x0],dh
  404708:	je     0x40470a
  40470a:	or     al,BYTE PTR [eax]
  40470c:	and    BYTE PTR [eax],al
  40470e:	and    BYTE PTR [eax],al
  404710:	and    BYTE PTR [eax],al
  404712:	and    BYTE PTR [eax],al
  404714:	jo     0x404716
  404716:	jb     0x404718
  404718:	outs   dx,DWORD PTR ds:[esi]
  404719:	add    BYTE PTR [ebp+0x0],ch
  40471c:	jo     0x40471e
  40471e:	je     0x404720
  404720:	and    BYTE PTR [eax],al
  404722:	sub    eax,0x70002000
  404727:	add    BYTE PTR [edx+0x0],dh
  40472a:	outs   dx,DWORD PTR ds:[esi]
  40472b:	add    BYTE PTR [ebp+0x0],ch
  40472e:	jo     0x404730
  404730:	je     0x404732
  404732:	and    BYTE PTR [eax],al
  404734:	je     0x404736
  404736:	outs   dx,DWORD PTR ds:[esi]
  404737:	add    BYTE PTR [eax],ah
  404739:	add    BYTE PTR [ecx+0x0],ch
  40473c:	ins    DWORD PTR es:[edi],dx
  40473d:	add    BYTE PTR [ebp+0x0],ch
  404740:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  404745:	add    BYTE PTR [ecx+0x0],ah
  404748:	je     0x40474a
  40474a:	add    BYTE PTR gs:[eax+eax*1+0x79],ch
  40474f:	add    BYTE PTR [eax],ah
  404751:	add    BYTE PTR [ebx+0x0],dh
  404754:	add    BYTE PTR gs:[esi+0x0],ch
  404758:	add    BYTE PTR fs:[eax],ah
  40475b:	add    BYTE PTR [edx+0x0],dh
  40475e:	add    BYTE PTR gs:[eax+0x0],dh
  404762:	outs   dx,DWORD PTR ds:[esi]
  404763:	add    BYTE PTR [edx+0x0],dh
  404766:	je     0x404768
  404768:	or     al,BYTE PTR [eax]
  40476a:	and    BYTE PTR [eax],al
  40476c:	and    BYTE PTR [eax],al
  40476e:	and    BYTE PTR [eax],al
  404770:	and    BYTE PTR [eax],al
  404772:	jno    0x404774
  404774:	jne    0x404776
  404776:	add    BYTE PTR gs:[ebp+0x0],dh
  40477a:	add    BYTE PTR gs:[eax],ah
  40477d:	add    BYTE PTR ds:0x61002000,ch
  404783:	add    BYTE PTR [eax+eax*1+0x20],dh
  404787:	add    BYTE PTR [esi+0x0],ch
  40478a:	add    BYTE PTR gs:[eax+0x0],bh
  40478e:	je     0x404790
  404790:	and    BYTE PTR [eax],al
  404792:	popa   
  404793:	add    BYTE PTR [eax+eax*1+0x6d],ah
  404797:	add    BYTE PTR [ecx+0x0],ch
  40479a:	outs   dx,BYTE PTR ds:[esi]
  40479b:	add    BYTE PTR [eax],ah
  40479d:	add    BYTE PTR [eax+eax*1+0x6f],ch
  4047a1:	add    BYTE PTR [edi+0x0],ah
  4047a4:	outs   dx,DWORD PTR ds:[esi]
  4047a5:	add    BYTE PTR [esi+0x0],ch
  4047a8:	sub    al,0x0
  4047aa:	and    BYTE PTR [eax],al
  4047ac:	jo     0x4047ae
  4047ae:	jb     0x4047b0
  4047b0:	outs   dx,DWORD PTR ds:[esi]
  4047b1:	add    BYTE PTR [ebp+0x0],ch
  4047b4:	jo     0x4047b6
  4047b6:	je     0x4047b8
  4047b8:	and    BYTE PTR [eax],al
  4047ba:	je     0x4047bc
  4047bc:	outs   dx,DWORD PTR ds:[esi]
  4047bd:	add    BYTE PTR [eax],ah
  4047bf:	add    BYTE PTR [ebx+0x0],dh
  4047c2:	add    BYTE PTR gs:[esi+0x0],ch
  4047c6:	add    BYTE PTR fs:[eax],ah
  4047c9:	add    BYTE PTR [edx+0x0],dh
  4047cc:	add    BYTE PTR gs:[eax+0x0],dh
  4047d0:	outs   dx,DWORD PTR ds:[esi]
  4047d1:	add    BYTE PTR [edx+0x0],dh
  4047d4:	je     0x4047d6
  4047d6:	or     al,BYTE PTR [eax]
  4047d8:	and    BYTE PTR [eax],al
  4047da:	and    BYTE PTR [eax],al
  4047dc:	and    BYTE PTR [eax],al
  4047de:	and    BYTE PTR [eax],al
  4047e0:	jae    0x4047e2
  4047e2:	add    BYTE PTR gs:[esi+0x0],ch
  4047e6:	add    BYTE PTR fs:[eax],ah
  4047e9:	add    BYTE PTR ds:0x73002000,ch
  4047ef:	add    BYTE PTR [ebp+0x0],ah
  4047f2:	outs   dx,BYTE PTR ds:[esi]
  4047f3:	add    BYTE PTR [eax+eax*1+0x20],ah
  4047f7:	add    BYTE PTR [edx+0x0],dh
  4047fa:	add    BYTE PTR gs:[eax+0x0],dh
  4047fe:	outs   dx,DWORD PTR ds:[esi]
  4047ff:	add    BYTE PTR [edx+0x0],dh
  404802:	je     0x404804
  404804:	and    BYTE PTR [eax],al
  404806:	popa   
  404807:	add    BYTE PTR [ebp+0x0],dh
  40480a:	je     0x40480c
  40480c:	outs   dx,DWORD PTR ds:[esi]
  40480d:	add    BYTE PTR [ebp+0x0],ch
  404810:	popa   
  404811:	add    BYTE PTR [eax+eax*1+0x69],dh
  404815:	add    BYTE PTR [ebx+0x0],ah
  404818:	popa   
  404819:	add    BYTE PTR [eax+eax*1+0x6c],ch
  40481d:	add    BYTE PTR [ecx+0x0],bh
  404820:	or     al,BYTE PTR [eax]
  404822:	add    BYTE PTR [eax],al
  404824:	dec    ebp
  404825:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  40482c:	je     0x40484e
  40482e:	sub    BYTE PTR [edx+0x29],dl
  404831:	and    BYTE PTR [ebp+0x61],cl
  404834:	arpl   WORD PTR [edx+0x6f],si
  404837:	and    BYTE PTR [ecx+0x73],al
  40483a:	jae    0x4048a1
  40483c:	ins    DWORD PTR es:[edi],dx
  40483d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x72]
  404841:	add    BYTE PTR [eax],al
  404843:	add    BYTE PTR [edx],al
	...
  40484d:	add    BYTE PTR [eax],al
  40484f:	add    BYTE PTR [ecx],al
  404851:	add    BYTE PTR [eax],al
  404853:	add    BYTE PTR [ebx],al
  404855:	add    BYTE PTR [eax],al
  404857:	add    BYTE PTR [eax+eax*1],al
  40485a:	add    BYTE PTR [eax],al
  40485c:	add    eax,0x6000000
  404861:	add    BYTE PTR [eax],al
  404863:	add    BYTE PTR [ecx+0x1],bl
  404866:	pop    ebx
  404867:	add    al,0x5c
  404869:	add    al,0x39
  40486b:	add    DWORD PTR [ecx+eax*1],esp
  40486e:	push   0x73015204
  404873:	add    al,0x25
  404875:	add    DWORD PTR [ebx],eax
  404877:	add    DWORD PTR [eax],eax
  404879:	add    BYTE PTR [esi+0x4],bl
  40487c:	add    BYTE PTR [eax],al
  40487e:	sub    al,BYTE PTR [ecx]
  404880:	sub    eax,DWORD PTR [ecx]
  404882:	sub    al,0x1
  404884:	sub    eax,0x1
  404889:	add    BYTE PTR [eax],al
  40488b:	add    BYTE PTR [ebp+0x4],dh
  40488e:	jbe    0x404894
  404890:	add    DWORD PTR cs:[edi],ebp
  404893:	add    DWORD PTR [eax],eax
  404895:	add    BYTE PTR [ebp+0x4],bl
  404898:	add    BYTE PTR [eax],al
  40489a:	add    BYTE PTR [eax],al
  40489c:	cmp    esi,esi
  40489e:	inc    edx
  40489f:	add    BYTE PTR [eax],al
  4048a1:	add    BYTE PTR [eax],al
  4048a3:	add    BYTE PTR [ebx-0x34ffbd0e],dl
  4048a9:	inc    ebp
  4048aa:	inc    esp
  4048ab:	add    BYTE PTR [edx+0x3a],al
  4048ae:	inc    esp
  4048af:	add    BYTE PTR [ebx],bl
  4048b1:	test   DWORD PTR [ebx+0x0],0x43f80d
  4048b8:	sub    eax,0xef004444
  4048bd:	hlt    
  4048be:	inc    edx
	...
  404907:	add    BYTE PTR [ebx-0x79],bl
  40490a:	inc    ebx
  40490b:	add    BYTE PTR ds:0x4387,dh
  404911:	add    BYTE PTR [eax],al
  404913:	add    BYTE PTR [ecx+ebx*8+0x43],dh
	...
  404923:	add    bl,ah
  404925:	dec    esi
  404926:	inc    esp
  404927:	add    BYTE PTR [edi],cl
  404929:	push   eax
  40492a:	inc    esp
  40492b:	add    BYTE PTR [eax],al
  40492d:	add    BYTE PTR [eax],al
  40492f:	add    BYTE PTR [edi],ch
  404931:	loopne 0x404975
  404933:	add    BYTE PTR [edi+0xb],bh
  404936:	inc    esp
  404937:	add    BYTE PTR [ebp-0x11ffbbed],dl
  40493d:	das    
  40493e:	inc    ebx
	...
  40494f:	add    bh,al
  404951:	loope  0x404995
  404953:	add    bh,al
  404955:	loope  0x404999
  404957:	add    BYTE PTR [esi],bh
  404959:	in     al,0x42
  40495b:	add    al,ch
  40495d:	loope  0x4049a1
  40495f:	add    BYTE PTR [esi-0x7a],ch
  404962:	inc    ebx
	...
  404993:	add    bh,dh
  404995:	xlat   BYTE PTR ds:[ebx]
  404996:	inc    ebx
  404997:	add    bh,dh
  404999:	xlat   BYTE PTR ds:[ebx]
  40499a:	inc    ebx
	...
  4049ab:	add    BYTE PTR [eax+0x46],bl
  4049ae:	inc    esp
	...
  4049b7:	add    BYTE PTR [esi],bh
  4049b9:	inc    esp
  4049ba:	inc    ebx
  4049bb:	add    BYTE PTR [ecx+ebx*1],al
  4049be:	inc    esp
  4049bf:	add    BYTE PTR [ebp+0x441b],cl
  4049c5:	add    BYTE PTR [eax],al
  4049c7:	add    BYTE PTR [ecx+eiz*2+0x44],ch
	...
  4049d6:	add    BYTE PTR [eax],al
  4049d8:	sbb    BYTE PTR [edx+eax*2+0x0],dh
  4049dc:	add    BYTE PTR [eax],al
  4049de:	add    BYTE PTR [eax],al
  4049e0:	arpl   WORD PTR [ebx],si
  4049e2:	inc    edx
  4049e3:	add    BYTE PTR [eax],ah
  4049e5:	push   ecx
  4049e6:	inc    edx
  4049e7:	add    BYTE PTR [eax],dh
  4049e9:	push   cs
  4049ea:	inc    edx
  4049eb:	add    BYTE PTR [edx+0x427a],ah
  4049f1:	add    BYTE PTR [eax],al
  4049f3:	add    BYTE PTR [eax],al
  4049f5:	add    BYTE PTR [eax],al
  4049f7:	add    cl,dh
  4049f9:	test   DWORD PTR [ebx+0x0],eax
  4049fc:	push   es
  4049fd:	xchg   BYTE PTR [ebx+0x0],al
	...
  404a08:	out    0x18,al
  404a0a:	inc    esp
  404a0b:	add    BYTE PTR [edi],ch
  404a0d:	loopne 0x404a51
  404a0f:	add    BYTE PTR [eax],al
  404a11:	add    BYTE PTR [eax],al
  404a13:	add    BYTE PTR ds:0x444e,bl
  404a19:	add    BYTE PTR [eax],al
  404a1b:	add    BYTE PTR [eax],dl
	...
  404a29:	add    BYTE PTR [eax],cl
  404a2b:	add    BYTE PTR [eax],al
  404a2d:	add    BYTE PTR [eax],cl
  404a2f:	add    BYTE PTR [eax+eax*1+0x0],ah
  404a33:	add    BYTE PTR [edx],cl
	...
  404a3d:	add    BYTE PTR [edx],al
  404a3f:	add    ch,ch
  404a41:	cmc    
  404a42:	inc    edx
  404a43:	add    BYTE PTR [eax+0x49],bl
  404a46:	inc    esp
  404a47:	add    BYTE PTR [esi+0xc],dh
  404a4a:	inc    esp
  404a4b:	add    BYTE PTR [ebx-0x75ffbd0e],dl
  404a51:	inc    esp
  404a52:	inc    esp
  404a53:	add    BYTE PTR [edx+0x3a],al
  404a56:	inc    esp
  404a57:	add    BYTE PTR [ebx],bl
  404a59:	test   DWORD PTR [ebx+0x0],0x43f80d
  404a60:	sub    eax,0xef004444
  404a65:	hlt    
  404a66:	inc    edx
  404a67:	add    BYTE PTR [ebp-0x72ffbdaf],cl
  404a6d:	push   ecx
  404a6e:	inc    edx
  404a6f:	add    BYTE PTR [ebp-0x72ffbdaf],cl
  404a75:	push   ecx
  404a76:	inc    edx
  404a77:	add    BYTE PTR [ebp-0x72ffbdaf],cl
  404a7d:	push   ecx
  404a7e:	inc    edx
  404a7f:	add    BYTE PTR [ebp-0x72ffbdaf],cl
  404a85:	push   ecx
  404a86:	inc    edx
  404a87:	add    BYTE PTR [ebp-0x72ffbdaf],cl
  404a8d:	push   ecx
  404a8e:	inc    edx
  404a8f:	add    BYTE PTR [ebp-0x72ffbdaf],cl
  404a95:	push   ecx
  404a96:	inc    edx
  404a97:	add    BYTE PTR [ebp-0x72ffbdaf],cl
  404a9d:	push   ecx
  404a9e:	inc    edx
  404a9f:	add    BYTE PTR [ebp-0x72ffbdaf],cl
  404aa5:	push   ecx
  404aa6:	inc    edx
  404aa7:	add    BYTE PTR [ebp+0x2004251],cl
  404aad:	test   BYTE PTR [edx+0x0],0x2
  404ab1:	test   BYTE PTR [edx+0x0],0x2
  404ab5:	test   BYTE PTR [edx+0x0],0x2
  404ab9:	test   BYTE PTR [edx+0x0],0x0
  404abd:	add    BYTE PTR [eax],al
  404abf:	add    ch,ch
  404ac1:	cmc    
  404ac2:	inc    edx
  404ac3:	add    BYTE PTR [edx],bl
  404ac5:	xchg   BYTE PTR [ebx+0x0],al
  404ac8:	sbb    al,BYTE PTR [esi+0x4ee30043]
  404ace:	inc    esp
  404acf:	add    BYTE PTR [edi],cl
  404ad1:	push   eax
  404ad2:	inc    esp
  404ad3:	add    BYTE PTR [ebx-0x23],cl
  404ad6:	inc    edx
  404ad7:	add    BYTE PTR [edi],ch
  404ad9:	loopne 0x404b1d
  404adb:	add    BYTE PTR [eax],ch
  404add:	add    al,BYTE PTR [eax+eax*1-0x6b]
  404ae1:	adc    eax,DWORD PTR [eax+eax*1-0x12]
  404ae5:	das    
  404ae6:	inc    ebx
  404ae7:	add    BYTE PTR [esi+0x67004330],ch
  404aed:	xor    al,BYTE PTR [ebx+0x0]
  404af0:	xor    DWORD PTR [ebx],0x43
  404af3:	add    BYTE PTR [edx-0x18ffbccc],dl
  404af9:	loopne 0x404b3d
  404afb:	add    BYTE PTR [edx+eiz*8+0x42],ch
  404aff:	add    BYTE PTR [esi],bh
  404b01:	in     al,0x42
  404b03:	add    al,ch
  404b05:	loope  0x404b49
  404b07:	add    BYTE PTR [ebx],dl
  404b09:	inc    eax
  404b0a:	inc    ebx
  404b0b:	add    BYTE PTR [ebp-0xe],ah
  404b0e:	inc    edx
  404b0f:	add    BYTE PTR [edx-0x22],dl
  404b12:	inc    ebx
  404b13:	add    BYTE PTR [eax+0x20043c6],ch
  404b19:	test   BYTE PTR [edx+0x0],0x2
  404b1d:	test   BYTE PTR [edx+0x0],0x3e
  404b21:	mov    DWORD PTR [ebx+0x0],0x42f602
  404b28:	add    eax,0x8f0043d3
  404b2d:	rol    DWORD PTR [ebx+0x0],cl
  404b30:	dec    edx
  404b31:	(bad)  
  404b32:	inc    ebx
  404b33:	add    dh,bh
  404b35:	mov    ebp,0xf6020043
  404b3a:	inc    edx
  404b3b:	add    bh,dh
  404b3d:	xlat   BYTE PTR ds:[ebx]
  404b3e:	inc    ebx
  404b3f:	add    bh,dh
  404b41:	xlat   BYTE PTR ds:[ebx]
  404b42:	inc    ebx
  404b43:	add    BYTE PTR [esi+0x4d],ah
  404b46:	inc    esp
  404b47:	add    al,ch
  404b49:	dec    edi
  404b4a:	inc    edx
  404b4b:	add    BYTE PTR [ecx+ebx*2+0x42],ah
  404b4f:	add    BYTE PTR [ebp+0xf0042f5],dl
  404b55:	inc    edi
  404b56:	inc    esp
  404b57:	add    dh,ah
  404b59:	push   ebp
  404b5a:	inc    esp
  404b5b:	add    dl,al
  404b5d:	or     al,BYTE PTR [eax+eax*1+0x3e]
  404b61:	inc    esp
  404b62:	inc    ebx
  404b63:	add    BYTE PTR [ecx+ebx*1],al
  404b66:	inc    esp
  404b67:	add    BYTE PTR [ebp-0x18ffbbe5],cl
  404b6d:	fld    QWORD PTR [ebx+0x0]
  404b70:	lods   al,BYTE PTR ds:[esi]
  404b71:	popa   
  404b72:	inc    esp
	...
  404b83:	add    BYTE PTR [esp+edx*8],dh
  404b86:	inc    ebx
  404b87:	add    BYTE PTR [ecx+0x20042dc],ch
  404b8d:	test   BYTE PTR [edx+0x0],0x30
  404b91:	push   cs
  404b92:	inc    edx
  404b93:	add    BYTE PTR ds:0x3e00425a,ah
  404b99:	outs   dx,DWORD PTR ds:[esi]
  404b9a:	inc    edx
  404b9b:	add    BYTE PTR [ecx],ch
  404b9d:	imul   eax,DWORD PTR [edx+0x0],0x0
	...
  404bb4:	das    
  404bb5:	loopne 0x404bf9
  404bb7:	add    BYTE PTR [eax],al
  404bb9:	add    BYTE PTR [eax],al
  404bbb:	add    BYTE PTR ds:0x8c00444e,bl
  404bc1:	cld    
  404bc2:	inc    ebx
  404bc3:	add    BYTE PTR [eax],ah
  404bc5:	cmc    
  404bc6:	inc    ecx
  404bc7:	add    BYTE PTR [esi*8-0xad7ffbf],ah
  404bce:	inc    ecx
  404bcf:	add    ch,ch
  404bd1:	cmc    
  404bd2:	inc    edx
  404bd3:	add    BYTE PTR [edx],dl
  404bd5:	test   BYTE PTR [edx+0x0],0x12
  404bd9:	test   BYTE PTR [edx+0x0],0x93
  404bdd:	repnz inc edx
  404bdf:	add    BYTE PTR [eax+0x6e],dh
  404be2:	inc    edx
  404be3:	add    BYTE PTR [edx],dl
  404be5:	test   BYTE PTR [edx+0x0],0x12
  404be9:	test   BYTE PTR [edx+0x0],0x12
  404bed:	test   BYTE PTR [edx+0x0],0x3f
  404bf1:	pop    esi
  404bf2:	inc    edx
  404bf3:	add    BYTE PTR [edx],dl
  404bf5:	test   BYTE PTR [edx+0x0],0x6e
  404bf9:	arpl   WORD PTR [edx+0x0],ax
  404bfc:	outs   dx,BYTE PTR ds:[esi]
  404bfd:	arpl   WORD PTR [edx+0x0],ax
  404c00:	outs   dx,BYTE PTR ds:[esi]
  404c01:	arpl   WORD PTR [edx+0x0],ax
  404c04:	outs   dx,BYTE PTR ds:[esi]
  404c05:	arpl   WORD PTR [edx+0x0],ax
  404c08:	outs   dx,BYTE PTR ds:[esi]
  404c09:	arpl   WORD PTR [edx+0x0],ax
  404c0c:	outs   dx,BYTE PTR ds:[esi]
  404c0d:	arpl   WORD PTR [edx+0x0],ax
  404c10:	outs   dx,BYTE PTR ds:[esi]
  404c11:	arpl   WORD PTR [edx+0x0],ax
  404c14:	outs   dx,BYTE PTR ds:[esi]
  404c15:	arpl   WORD PTR [edx+0x0],ax
  404c18:	outs   dx,BYTE PTR ds:[esi]
  404c19:	arpl   WORD PTR [edx+0x0],ax
  404c1c:	outs   dx,BYTE PTR ds:[esi]
  404c1d:	arpl   WORD PTR [edx+0x0],ax
  404c20:	outs   dx,BYTE PTR ds:[esi]
  404c21:	arpl   WORD PTR [edx+0x0],ax
  404c24:	outs   dx,BYTE PTR ds:[esi]
  404c25:	arpl   WORD PTR [edx+0x0],ax
  404c28:	outs   dx,BYTE PTR ds:[esi]
  404c29:	arpl   WORD PTR [edx+0x0],ax
  404c2c:	outs   dx,BYTE PTR ds:[esi]
  404c2d:	arpl   WORD PTR [edx+0x0],ax
  404c30:	outs   dx,BYTE PTR ds:[esi]
  404c31:	arpl   WORD PTR [edx+0x0],ax
  404c34:	outs   dx,BYTE PTR ds:[esi]
  404c35:	arpl   WORD PTR [edx+0x0],ax
  404c38:	outs   dx,BYTE PTR ds:[esi]
  404c39:	arpl   WORD PTR [edx+0x0],ax
  404c3c:	adc    dh,dh
  404c3e:	inc    edx
  404c3f:	add    BYTE PTR [edx],dl
  404c41:	test   BYTE PTR [edx+0x0],0x12
  404c45:	test   BYTE PTR [edx+0x0],0x12
  404c49:	test   BYTE PTR [edx+0x0],0x0
  404c4d:	add    BYTE PTR [eax],al
  404c4f:	add    ch,ch
  404c51:	cmc    
  404c52:	inc    edx
  404c53:	add    BYTE PTR [edx],bl
  404c55:	xchg   BYTE PTR [ebx+0x0],al
  404c58:	sbb    al,BYTE PTR [esi+0x4ee30043]
  404c5e:	inc    esp
  404c5f:	add    BYTE PTR [edi],cl
  404c61:	push   eax
  404c62:	inc    esp
  404c63:	add    BYTE PTR [ebx-0x23],cl
  404c66:	inc    edx
  404c67:	add    BYTE PTR [edi],ch
  404c69:	loopne 0x404cad
  404c6b:	add    BYTE PTR [edx],dl
  404c6d:	test   BYTE PTR [edx+0x0],0x12
  404c71:	test   BYTE PTR [edx+0x0],0xee
  404c75:	das    
  404c76:	inc    ebx
  404c77:	add    BYTE PTR [esi+0x67004330],ch
  404c7d:	xor    al,BYTE PTR [ebx+0x0]
  404c80:	xor    DWORD PTR [ebx],0x43
  404c83:	add    BYTE PTR [edx-0x18ffbccc],dl
  404c89:	loopne 0x404ccd
  404c8b:	add    BYTE PTR [edx+eiz*8+0x42],ch
  404c8f:	add    BYTE PTR [esi],bh
  404c91:	in     al,0x42
  404c93:	add    al,ch
  404c95:	loope  0x404cd9
  404c97:	add    BYTE PTR [ebx],dl
  404c99:	inc    eax
  404c9a:	inc    ebx
  404c9b:	add    BYTE PTR [ebp-0xe],ah
  404c9e:	inc    edx
  404c9f:	add    BYTE PTR [edx-0x22],dl
  404ca2:	inc    ebx
  404ca3:	add    BYTE PTR [edx],dl
  404ca5:	test   BYTE PTR [edx+0x0],0x12
  404ca9:	test   BYTE PTR [edx+0x0],0x12
  404cad:	test   BYTE PTR [edx+0x0],0x3e
  404cb1:	mov    DWORD PTR [ebx+0x0],0x42f612
  404cb8:	add    eax,0x8f0043d3
  404cbd:	rol    DWORD PTR [ebx+0x0],cl
  404cc0:	dec    edx
  404cc1:	(bad)  
  404cc2:	inc    ebx
  404cc3:	add    dh,bh
  404cc5:	mov    ebp,0xf6120043
  404cca:	inc    edx
  404ccb:	add    bh,dh
  404ccd:	xlat   BYTE PTR ds:[ebx]
  404cce:	inc    ebx
  404ccf:	add    bh,dh
  404cd1:	xlat   BYTE PTR ds:[ebx]
  404cd2:	inc    ebx
  404cd3:	add    BYTE PTR [esi+0x4d],ah
  404cd6:	inc    esp
  404cd7:	add    BYTE PTR ds:0x12004265,al
  404cdd:	test   BYTE PTR [edx+0x0],0x95
  404ce1:	cmc    
  404ce2:	inc    edx
  404ce3:	add    bh,cl
  404ce5:	ins    DWORD PTR es:[edi],dx
  404ce6:	inc    edx
  404ce7:	add    dh,ah
  404ce9:	push   ebp
  404cea:	inc    esp
  404ceb:	add    dl,al
  404ced:	or     al,BYTE PTR [eax+eax*1+0x3e]
  404cf1:	inc    esp
  404cf2:	inc    ebx
  404cf3:	add    BYTE PTR [ecx+ebx*1],al
  404cf6:	inc    esp
  404cf7:	add    BYTE PTR [ebp-0x18ffbbe5],cl
  404cfd:	fld    QWORD PTR [ebx+0x0]
  404d00:	lods   al,BYTE PTR ds:[esi]
  404d01:	popa   
  404d02:	inc    esp
  404d03:	add    BYTE PTR [edx],dl
  404d05:	test   BYTE PTR [edx+0x0],0x12
  404d09:	test   BYTE PTR [edx+0x0],0x0
  404d0d:	add    BYTE PTR [eax],al
  404d0f:	add    BYTE PTR [eax],al
  404d11:	add    BYTE PTR [eax],al
  404d13:	add    BYTE PTR [esp+edx*8],dh
  404d16:	inc    ebx
  404d17:	add    BYTE PTR [ecx+0x120042dc],ch
  404d1d:	test   BYTE PTR [edx+0x0],0x12
  404d21:	test   BYTE PTR [edx+0x0],0x25
  404d25:	pop    edx
  404d26:	inc    edx
  404d27:	add    BYTE PTR [esi],bh
  404d29:	outs   dx,DWORD PTR ds:[esi]
  404d2a:	inc    edx
  404d2b:	add    BYTE PTR [ecx],ch
  404d2d:	imul   eax,DWORD PTR [edx+0x0],0x0
	...
  404d44:	das    
  404d45:	loopne 0x404d89
  404d47:	add    BYTE PTR [eax],al
  404d49:	add    BYTE PTR [eax],al
  404d4b:	add    BYTE PTR ds:0x444e,bl
  404d51:	add    BYTE PTR [eax],al
  404d53:	add    BYTE PTR [esi],al
  404d55:	add    eax,0x606
  404d5a:	pop    es
  404d5b:	push   es
  404d5c:	push   es
  404d5d:	pop    es
  404d5e:	add    DWORD PTR [edi],eax
  404d60:	add    eax,DWORD PTR [edx]
  404d62:	pop    es
  404d63:	pop    es
  404d64:	add    al,0x7
  404d66:	add    BYTE PTR [eax],al
  404d68:	add    DWORD PTR [ecx],eax
  404d6a:	add    DWORD PTR [ecx],eax
  404d6c:	add    DWORD PTR [ecx],eax
  404d6e:	add    DWORD PTR [ecx],eax
  404d70:	add    DWORD PTR [ecx],eax
  404d72:	add    DWORD PTR [ecx],eax
  404d74:	add    DWORD PTR [ecx],eax
  404d76:	add    DWORD PTR [ecx],eax
  404d78:	add    DWORD PTR [ecx],eax
  404d7a:	add    DWORD PTR [ecx],eax
  404d7c:	add    DWORD PTR [ecx],eax
  404d7e:	add    DWORD PTR [ecx],eax
  404d80:	add    DWORD PTR [ecx],eax
  404d82:	add    DWORD PTR [ecx],eax
  404d84:	add    DWORD PTR [ecx],eax
  404d86:	add    DWORD PTR [ecx],eax
  404d88:	add    DWORD PTR [ecx],eax
  404d8a:	add    DWORD PTR [ecx],eax
  404d8c:	add    DWORD PTR [ecx],eax
  404d8e:	add    DWORD PTR [ecx],eax
  404d90:	add    DWORD PTR [eax],eax
  404d92:	add    BYTE PTR [eax],al
  404d94:	add    BYTE PTR [ecx],al
  404d96:	add    DWORD PTR [ecx],eax
  404d98:	add    DWORD PTR [ecx],eax
  404d9a:	add    BYTE PTR [ecx],al
  404d9c:	add    BYTE PTR [eax],al
  404d9e:	add    DWORD PTR [ecx],eax
  404da0:	add    BYTE PTR [ecx],al
  404da2:	add    BYTE PTR [eax],al
  404da4:	add    BYTE PTR [eax],al
  404da6:	add    DWORD PTR [ecx],eax
  404da8:	add    DWORD PTR [ecx],eax
  404daa:	add    DWORD PTR [ecx],eax
  404dac:	add    DWORD PTR [ecx],eax
  404dae:	add    DWORD PTR [ecx],eax
  404db0:	add    DWORD PTR [ecx],eax
  404db2:	add    DWORD PTR [eax],eax
  404db4:	add    BYTE PTR [ecx],al
  404db6:	add    DWORD PTR [ecx],eax
  404db8:	add    DWORD PTR [eax],eax
  404dba:	add    DWORD PTR [ecx],eax
  404dbc:	add    DWORD PTR [ecx],eax
  404dbe:	add    DWORD PTR [ecx],eax
  404dc0:	add    DWORD PTR [ecx],eax
  404dc2:	add    DWORD PTR [ecx],eax
  404dc4:	add    BYTE PTR [ecx],al
  404dc6:	add    DWORD PTR [ecx],eax
  404dc8:	add    DWORD PTR [eax],eax
  404dca:	add    BYTE PTR [eax],al
  404dcc:	push   es
  404dcd:	add    ebx,DWORD PTR [ecx+0x1980301]
  404dd3:	add    BYTE PTR [esi*8-0xacbffbf],ch
  404dda:	inc    ecx
  404ddb:	add    BYTE PTR [esi*8-0xabbffbf],bh
  404de2:	inc    ecx
  404de3:	add    BYTE PTR [ebp+esi*8+0x41],cl
  404de7:	add    BYTE PTR [ebp+esi*8+0x41],dl
  404deb:	add    BYTE PTR [ebp+esi*8+0x41],bl
  404def:	add    BYTE PTR [ebp+esi*8+0x41],ah
  404df3:	add    BYTE PTR [ebx-0x19],bh
  404df6:	inc    ecx
  404df7:	add    BYTE PTR [esi+esi*8],al
  404dfa:	inc    ecx
  404dfb:	add    BYTE PTR [eax],ah
  404dfd:	cmc    
  404dfe:	inc    ecx
  404dff:	add    BYTE PTR [esi*8-0xad7ffbf],ah
  404e06:	inc    ecx
  404e07:	add    BYTE PTR [eax],cl
  404e09:	test   BYTE PTR [ecx+0x0],0xc
  404e0d:	test   BYTE PTR [ecx+0x0],0x10
  404e11:	test   BYTE PTR [ecx+0x0],0x14
  404e15:	test   BYTE PTR [ecx+0x0],0x18
  404e19:	test   BYTE PTR [ecx+0x0],0x1c
  404e1d:	test   BYTE PTR [ecx+0x0],0x20
  404e21:	test   BYTE PTR [ecx+0x0],0x28
  404e25:	test   BYTE PTR [ecx+0x0],0x30
  404e29:	test   BYTE PTR [ecx+0x0],0x38
  404e2d:	test   BYTE PTR [ecx+0x0],0x0
  404e31:	add    BYTE PTR [eax],al
  404e33:	add    al,ah
  404e35:	mov    al,BYTE PTR [ebx+0x0]
	...
  404e44:	loopne 0x404dd0
  404e46:	inc    ebx
  404e47:	add    BYTE PTR [eax],al
  404e49:	add    BYTE PTR [eax],al
  404e4b:	add    al,ah
  404e4d:	mov    al,BYTE PTR [ebx+0x0]
  404e50:	loopne 0x404ddc
  404e52:	inc    ebx
  404e53:	add    BYTE PTR [eax],al
  404e55:	add    BYTE PTR [eax],al
  404e57:	add    al,ah
  404e59:	mov    al,BYTE PTR [ebx+0x0]
  404e5c:	loopne 0x404de8
  404e5e:	inc    ebx
  404e5f:	add    al,ah
  404e61:	mov    al,BYTE PTR [ebx+0x0]
  404e64:	loopne 0x404df0
  404e66:	inc    ebx
  404e67:	add    al,ah
  404e69:	mov    al,BYTE PTR [ebx+0x0]
  404e6c:	loopne 0x404df8
  404e6e:	inc    ebx
  404e6f:	add    al,ah
  404e71:	mov    al,BYTE PTR [ebx+0x0]
  404e74:	loopne 0x404e00
  404e76:	inc    ebx
  404e77:	add    al,ah
  404e79:	mov    al,BYTE PTR [ebx+0x0]
  404e7c:	loopne 0x404e08
  404e7e:	inc    ebx
  404e7f:	add    al,ah
  404e81:	mov    al,BYTE PTR [ebx+0x0]
  404e84:	loopne 0x404e10
  404e86:	inc    ebx
  404e87:	add    al,ah
  404e89:	mov    al,BYTE PTR [ebx+0x0]
  404e8c:	loopne 0x404e18
  404e8e:	inc    ebx
  404e8f:	add    al,ah
  404e91:	mov    al,BYTE PTR [ebx+0x0]
  404e94:	loopne 0x404e20
  404e96:	inc    ebx
  404e97:	add    al,ah
  404e99:	mov    al,BYTE PTR [ebx+0x0]
  404e9c:	add    BYTE PTR [eax],al
  404e9e:	add    BYTE PTR [eax],al
  404ea0:	stos   DWORD PTR es:[edi],eax
  404ea1:	mov    al,0x43
  404ea3:	add    BYTE PTR [edi-0x4e],dl
  404ea6:	inc    ebx
  404ea7:	add    BYTE PTR [edx-0x50],bl
  404eaa:	inc    ebx
  404eab:	add    BYTE PTR [eax],al
  404ead:	add    BYTE PTR [eax],al
  404eaf:	add    BYTE PTR [eax+ebp*4+0x43],cl
  404eb3:	add    BYTE PTR [eax],al
  404eb5:	add    BYTE PTR [eax],al
  404eb7:	add    BYTE PTR [edx+ecx*4+0x43],dh
	...
  404ec3:	add    dl,ch
  404ec5:	mov    eax,DWORD PTR [ebx+0x0]
  404ec8:	jmp    0x438a:0xe000438b
  404ecf:	add    al,ah
  404ed1:	mov    al,BYTE PTR [ebx+0x0]
	...
  404ee8:	jmp    0x438b:0xea00438b
  404eef:	add    dl,ch
  404ef1:	mov    eax,DWORD PTR [ebx+0x0]
  404ef4:	jmp    0x0:0x438b
	...
  404f37:	add    al,ah
  404f39:	mov    al,BYTE PTR [ebx+0x0]
  404f3c:	loopne 0x404ec8
  404f3e:	inc    ebx
	...
  404f67:	add    BYTE PTR [edi-0x55],bh
  404f6a:	inc    ebx
	...
  404f7b:	add    BYTE PTR [ebx-0x1fffbc56],dh
  404f81:	mov    al,BYTE PTR [ebx+0x0]
	...
  404f8c:	sbb    al,0xa9
  404f8e:	inc    ebx
	...
  404f97:	add    BYTE PTR [ecx-0x75],dh
  404f9a:	inc    ebx
	...
  404fa3:	add    dl,ch
  404fa5:	mov    eax,DWORD PTR [ebx+0x0]
  404fa8:	(bad)  [ebx+0x43]
  404fae:	add    BYTE PTR [eax],al
  404fb0:	add    BYTE PTR [eax],al
  404fb2:	add    BYTE PTR [eax],al
  404fb4:	add    al,BYTE PTR [eax]
  404fb6:	add    DWORD PTR [eax],eax
	...
  404fcc:	cmp    esi,esi
  404fce:	inc    edx
  404fcf:	add    BYTE PTR [eax],al
  404fd1:	add    BYTE PTR [eax],al
  404fd3:	add    BYTE PTR [ebx-0x58ffbd0e],dl
  404fd9:	sub    eax,DWORD PTR [edx+0x0]
  404fdc:	inc    edx
  404fdd:	cmp    al,BYTE PTR [eax+eax*1+0x1b]
  404fe1:	test   DWORD PTR [ebx+0x0],0x43f80d
  404fe8:	sub    eax,0x2f004444
  404fed:	cs inc edx
  404fef:	add    BYTE PTR [edi],dh
  404ff1:	xor    BYTE PTR [edx+0x0],al
  404ff4:	aaa    
  404ff5:	xor    BYTE PTR [edx+0x0],al
  404ff8:	aaa    
  404ff9:	xor    BYTE PTR [edx+0x0],al
  404ffc:	aaa    
  404ffd:	xor    BYTE PTR [edx+0x0],al
  405000:	aaa    
  405001:	xor    BYTE PTR [edx+0x0],al
  405004:	aaa    
  405005:	xor    BYTE PTR [edx+0x0],al
  405008:	aaa    
  405009:	xor    BYTE PTR [edx+0x0],al
  40500c:	aaa    
  40500d:	xor    BYTE PTR [edx+0x0],al
  405010:	aaa    
  405011:	xor    BYTE PTR [edx+0x0],al
  405014:	aaa    
  405015:	xor    BYTE PTR [edx+0x0],al
  405018:	aaa    
  405019:	xor    BYTE PTR [edx+0x0],al
  40501c:	aaa    
  40501d:	xor    BYTE PTR [edx+0x0],al
  405020:	aaa    
  405021:	xor    BYTE PTR [edx+0x0],al
  405024:	aaa    
  405025:	xor    BYTE PTR [edx+0x0],al
  405028:	aaa    
  405029:	xor    BYTE PTR [edx+0x0],al
  40502c:	aaa    
  40502d:	xor    BYTE PTR [edx+0x0],al
  405030:	aaa    
  405031:	xor    BYTE PTR [edx+0x0],al
  405034:	jge    0x405066
  405036:	inc    edx
  405037:	add    BYTE PTR [ebx-0x79],bl
  40503a:	inc    ebx
  40503b:	add    BYTE PTR ds:0x4387,dh
  405041:	add    BYTE PTR [eax],al
  405043:	add    BYTE PTR [ecx+ebx*8+0x43],dh
	...
  40505b:	add    BYTE PTR [ebx-0x23],cl
  40505e:	inc    edx
  40505f:	add    BYTE PTR [edi],ch
  405061:	loopne 0x4050a5
  405063:	add    BYTE PTR [edi+0xb],bh
  405066:	inc    esp
  405067:	add    BYTE PTR [ebp-0xeffbbed],dl
  40506d:	xor    eax,DWORD PTR [ebx+0x0]
  405070:	icebp  
  405071:	xor    eax,DWORD PTR [ebx+0x0]
	...
  40507c:	pop    ebx
  40507d:	ss inc ebx
  40507f:	add    bh,al
  405081:	loope  0x4050c5
  405083:	add    bh,al
  405085:	loope  0x4050c9
  405087:	add    BYTE PTR [esi],bh
  405089:	in     al,0x42
  40508b:	add    al,ch
  40508d:	loope  0x4050d1
  40508f:	add    BYTE PTR [esi-0x7a],ch
  405092:	inc    ebx
	...
  4050c3:	add    bh,dh
  4050c5:	xlat   BYTE PTR ds:[ebx]
  4050c6:	inc    ebx
  4050c7:	add    bh,dh
  4050c9:	xlat   BYTE PTR ds:[ebx]
  4050ca:	inc    ebx
  4050cb:	add    BYTE PTR [eax],al
  4050cd:	add    BYTE PTR [eax],al
  4050cf:	add    BYTE PTR [edi],dh
  4050d1:	xor    BYTE PTR [edx+0x0],al
	...
  4050dc:	pop    eax
  4050dd:	inc    esi
  4050de:	inc    esp
	...
  4050e7:	add    BYTE PTR [esi],bh
  4050e9:	inc    esp
  4050ea:	inc    ebx
  4050eb:	add    BYTE PTR [ecx+ebx*1],al
  4050ee:	inc    esp
  4050ef:	add    BYTE PTR [ebp+0x441b],cl
  4050f5:	add    BYTE PTR [eax],al
  4050f7:	add    BYTE PTR [ecx+eiz*2+0x30c80044],ch
  4050fe:	inc    edx
	...
  405107:	add    dh,dl
  405109:	xor    al,BYTE PTR [edx+0x0]
  40510c:	add    BYTE PTR [eax],al
  40510e:	add    BYTE PTR [eax],al
  405110:	arpl   WORD PTR [ebx],si
  405112:	inc    edx
  405113:	add    BYTE PTR [esi+0x38],al
  405116:	inc    edx
  405117:	add    BYTE PTR [eax+esi*1+0x34c90042],bl
  40511e:	inc    edx
  40511f:	add    BYTE PTR [eax],al
  405121:	add    BYTE PTR [eax],al
  405123:	add    BYTE PTR [ecx+0x35],bh
  405126:	inc    edx
  405127:	add    cl,dh
  405129:	test   DWORD PTR [ebx+0x0],eax
  40512c:	push   es
  40512d:	xchg   BYTE PTR [ebx+0x0],al
	...
  40513c:	das    
  40513d:	loopne 0x405181
	...
  405147:	add    BYTE PTR [esp+edi*8+0x20043],cl
  40514e:	add    DWORD PTR [eax],eax
	...
  405174:	push   es
  405175:	add    BYTE PTR [eax],al
  405177:	add    BYTE PTR [esi],al
  405179:	add    BYTE PTR [eax],al
  40517b:	add    BYTE PTR [esi],al
  40517d:	add    BYTE PTR [eax],al
  40517f:	add    BYTE PTR [eax],al
  405181:	add    BYTE PTR [eax],al
  405183:	add    BYTE PTR [esi],al
  405185:	add    BYTE PTR [eax],al
  405187:	add    BYTE PTR [esi],al
  405189:	add    BYTE PTR [eax],al
  40518b:	add    BYTE PTR [ecx],al
  40518d:	add    BYTE PTR [eax],al
  40518f:	add    BYTE PTR [ecx],al
  405191:	add    BYTE PTR [eax],al
  405193:	add    BYTE PTR [edx],al
  405195:	add    BYTE PTR [eax],al
  405197:	add    BYTE PTR [ecx],al
	...
  4051e1:	add    BYTE PTR [eax],al
  4051e3:	add    BYTE PTR ds:0x0,al
	...
  405221:	add    BYTE PTR [eax],al
  405223:	add    BYTE PTR [eax+eax*1],al
	...
  40527a:	add    BYTE PTR [eax],al
  40527c:	add    al,BYTE PTR [eax]
  40527e:	add    BYTE PTR [eax],al
  405280:	add    BYTE PTR [eax],al
  405282:	add    BYTE PTR [eax],al
  405284:	pop    es
  405285:	add    BYTE PTR [eax],al
  405287:	add    BYTE PTR [edi],al
	...
  40552d:	add    BYTE PTR [eax],al
  40552f:	add    BYTE PTR [esi+edx*1],dl
  405532:	inc    ebx
  405533:	add    BYTE PTR [ecx+0x140042f9],ah
  405539:	push   ss
  40553a:	inc    ebx
  40553b:	add    BYTE PTR [ecx],bl
  40553d:	push   ss
  40553e:	inc    ebx
  40553f:	add    BYTE PTR [esi+edx*1],dl
  405542:	inc    ebx
  405543:	add    BYTE PTR [edx],dh
  405545:	pop    ss
  405546:	inc    ebx
  405547:	add    BYTE PTR [edi],cl
  405549:	inc    DWORD PTR [edx+0x0]
  40554c:	mov    eax,ds:0xf0042f9
  405551:	inc    DWORD PTR [edx+0x0]
  405554:	mov    eax,ds:0xa10042f9
  405559:	stc    
  40555a:	inc    edx
  40555b:	add    BYTE PTR [edi],cl
  40555d:	inc    DWORD PTR [edx+0x0]
  405560:	ud0    eax,DWORD PTR [edx+0x0]
  405564:	ud0    eax,DWORD PTR [edx+0x0]
  405568:	mov    eax,ds:0xf0042f9
  40556d:	inc    DWORD PTR [edx+0x0]
  405570:	ud0    eax,DWORD PTR [edx+0x0]
  405574:	mov    eax,ds:0xc90042f9
  405579:	or     al,BYTE PTR [ebx+0x0]
  40557c:	and    al,0x18
  40557e:	inc    ebx
  40557f:	add    cl,cl
  405581:	or     al,BYTE PTR [ebx+0x0]
  405584:	leave  
  405585:	or     al,BYTE PTR [ebx+0x0]
  405588:	leave  
  405589:	or     al,BYTE PTR [ebx+0x0]
  40558c:	leave  
  40558d:	or     al,BYTE PTR [ebx+0x0]
  405590:	leave  
  405591:	or     al,BYTE PTR [ebx+0x0]
  405594:	adc    al,0x16
  405596:	inc    ebx
  405597:	add    BYTE PTR [ecx],bl
  405599:	sbb    DWORD PTR [eax],eax
  40559b:	add    al,0x0
  40559d:	adc    edx,DWORD PTR [ebx]
  40559f:	push   ss
  4055a0:	push   ss
  4055a1:	push   ss
  4055a2:	push   ss
  4055a3:	push   ss
  4055a4:	push   ss
  4055a5:	adc    al,0x16
  4055a7:	adc    dl,BYTE PTR [edx]
  4055a9:	adc    dl,BYTE PTR [edx]
  4055ab:	adc    dl,BYTE PTR [edx]
  4055ad:	adc    dl,BYTE PTR [edx]
  4055af:	adc    dl,BYTE PTR [edx]
  4055b1:	adc    dl,BYTE PTR [edx]
  4055b3:	adc    dl,BYTE PTR [edx]
  4055b5:	adc    dl,BYTE PTR [edx]
  4055b7:	adc    dl,BYTE PTR [esi]
  4055b9:	push   ss
  4055ba:	adc    al,0x14
  4055bc:	add    eax,DWORD PTR ds:0x121212
  4055c2:	or     al,0xc
  4055c4:	or     ecx,DWORD PTR [ebx]
  4055c6:	or     cl,BYTE PTR [edx]
  4055c8:	or     eax,DWORD PTR [esi]
  4055ca:	push   es
  4055cb:	or     ecx,DWORD PTR [ebx]
  4055cd:	push   cs
  4055ce:	adc    BYTE PTR [eax],dl
  4055d0:	lar    ecx,WORD PTR [ecx]
  4055d3:	or     DWORD PTR [ecx],ecx
  4055d5:	or     DWORD PTR [ecx],ecx
  4055d7:	or     DWORD PTR [eax],ecx
  4055d9:	adc    DWORD PTR [ecx],eax
  4055db:	add    DWORD PTR [ecx],eax
  4055dd:	add    DWORD PTR [edi],eax
  4055df:	pop    es
  4055e0:	pop    es
  4055e1:	adc    DWORD PTR [ecx],edx
  4055e3:	pop    es
  4055e4:	pop    es
  4055e5:	pop    es
  4055e6:	add    DWORD PTR [ecx],eax
  4055e8:	add    BYTE PTR [eax],al
  4055ea:	or     BYTE PTR ds:0xd0d0d0d,cl
  4055f0:	or     eax,0x0
  4055f5:	add    BYTE PTR [eax],al
  4055f7:	add    BYTE PTR [edi],dl
  4055f9:	pop    ss
  4055fa:	pop    ss
  4055fb:	pop    ss
  4055fc:	pop    ss
  4055fd:	pop    ss
  4055fe:	pop    ss
  4055ff:	pop    ss
  405600:	pop    ss
  405601:	pop    ss
  405602:	pop    ss
  405603:	pop    ss
  405604:	pop    ss
  405605:	pop    ss
  405606:	pop    ss
  405607:	pop    ss
  405608:	pop    ss
  405609:	pop    ss
  40560a:	pop    ss
  40560b:	pop    ss
  40560c:	pop    ss
  40560d:	pop    ss
  40560e:	pop    ss
  40560f:	pop    ss
  405610:	pop    ss
  405611:	pop    ss
  405612:	pop    ss
  405613:	pop    ss
  405614:	pop    ss
  405615:	pop    ss
  405616:	pop    ss
  405617:	pop    ss
  405618:	pop    ss
  405619:	pop    ss
  40561a:	pop    ss
  40561b:	pop    ss
  40561c:	pop    ss
  40561d:	pop    ss
  40561e:	pop    ss
  40561f:	pop    ss
  405620:	pop    ss
  405621:	pop    ss
  405622:	pop    ss
  405623:	pop    ss
  405624:	pop    ss
  405625:	pop    ss
  405626:	pop    ss
  405627:	pop    ss
  405628:	pop    ss
  405629:	pop    ss
  40562a:	pop    ss
  40562b:	pop    ss
  40562c:	pop    ss
  40562d:	pop    ss
  40562e:	pop    ss
  40562f:	pop    ss
  405630:	pop    ss
  405631:	pop    ss
  405632:	pop    ss
  405633:	pop    ss
  405634:	pop    ss
  405635:	pop    ss
  405636:	pop    ss
  405637:	pop    ss
  405638:	pop    ss
  405639:	pop    ss
  40563a:	pop    ss
  40563b:	pop    ss
  40563c:	add    BYTE PTR [eax],bl
  40563e:	sbb    BYTE PTR [eax],bl
  405640:	sbb    BYTE PTR [eax],bl
  405642:	sbb    BYTE PTR ds:0x17171717,dl
  405648:	pop    ss
  405649:	pop    ss
  40564a:	pop    ss
  40564b:	pop    ss
  40564c:	pop    ss
  40564d:	pop    ss
  40564e:	pop    ss
  40564f:	pop    ss
  405650:	pop    ss
  405651:	pop    ss
  405652:	pop    ss
  405653:	pop    ss
  405654:	pop    ss
  405655:	pop    ss
  405656:	pop    ss
  405657:	pop    ss
  405658:	pop    ss
  405659:	pop    ss
  40565a:	pop    ss
  40565b:	pop    ss
  40565c:	pop    ss
  40565d:	pop    ss
  40565e:	pop    ss
  40565f:	pop    ss
  405660:	pop    ss
  405661:	pop    ss
  405662:	pop    ss
  405663:	pop    ss
  405664:	pop    ss
  405665:	pop    ss
  405666:	pop    ss
  405667:	pop    ss
  405668:	pop    ss
  405669:	pop    ss
  40566a:	pop    ss
  40566b:	pop    ss
  40566c:	pop    ss
  40566d:	pop    ss
  40566e:	pop    ss
  40566f:	pop    ss
  405670:	pop    ss
  405671:	pop    ss
  405672:	pop    ss
  405673:	pop    ss
  405674:	pop    ss
  405675:	pop    ss
  405676:	pop    ss
  405677:	pop    ss
  405678:	pop    ss
  405679:	pop    ss
  40567a:	pop    ss
  40567b:	pop    ss
  40567c:	pop    ss
  40567d:	pop    ss
  40567e:	pop    ss
  40567f:	pop    ss
  405680:	pop    ss
  405681:	pop    ss
  405682:	pop    ss
  405683:	pop    ss
  405684:	pop    ss
  405685:	pop    ss
  405686:	pop    ss
  405687:	pop    ss
  405688:	pop    ss
  405689:	pop    ss
  40568a:	pop    ss
  40568b:	pop    ss
  40568c:	add    al,BYTE PTR [eax]
  40568e:	add    DWORD PTR [eax],eax
	...
  40569c:	add    BYTE PTR [eax],al
  40569e:	add    BYTE PTR [eax+0x4040404],al
  4056a4:	add    al,0x4
  4056a6:	add    al,0x4
  4056a8:	add    al,0x4
  4056aa:	add    al,0x4
  4056ac:	add    al,0x4
  4056ae:	add    al,0x4
  4056b0:	add    al,0x4
  4056b2:	add    al,0x4
  4056b4:	add    al,0x4
  4056b6:	add    al,0x4
  4056b8:	add    al,0x4
  4056ba:	add    al,0x4
  4056bc:	add    DWORD PTR [ebx],eax
  4056be:	add    eax,DWORD PTR [ebx]
  4056c0:	add    al,BYTE PTR [ecx]
  4056c2:	add    eax,DWORD PTR [esp+eax*1]
  4056c5:	add    eax,DWORD PTR [ebx]
  4056c7:	add    eax,DWORD PTR [ebx+eax*1]
  4056ca:	add    eax,DWORD PTR [ecx+eax*1]
  4056cd:	add    al,0x1
  4056cf:	add    al,0x4
  4056d1:	add    al,0x4
  4056d3:	add    eax,DWORD PTR [ecx+eax*1]
  4056d6:	add    DWORD PTR [edx],eax
  4056d8:	add    DWORD PTR [esi],eax
  4056da:	add    DWORD PTR [ecx],eax
  4056dc:	add    DWORD PTR [ecx],eax
  4056de:	add    DWORD PTR [ecx],eax
  4056e0:	add    DWORD PTR [ecx],eax
  4056e2:	add    DWORD PTR [ecx],eax
  4056e4:	add    DWORD PTR [ecx],eax
  4056e6:	add    DWORD PTR [ecx+eax*1],eax
  4056e9:	add    DWORD PTR [ecx],eax
  4056eb:	add    DWORD PTR [ecx],eax
  4056ed:	push   es
  4056ee:	add    al,0x5
  4056f0:	add    eax,0x3030303
  4056f5:	add    eax,0x3050503
  4056fa:	add    eax,DWORD PTR [ebx]
  4056fc:	add    eax,0x5050303
  405701:	add    al,0x5
  405703:	add    eax,0x3050505
  405708:	add    al,0x1
  40570a:	add    DWORD PTR [esi],eax
  40570c:	add    DWORD PTR [edx],eax
  40570e:	add    DWORD PTR [ecx],eax
  405710:	add    DWORD PTR [ecx],eax
  405712:	add    DWORD PTR [ecx],eax
  405714:	add    DWORD PTR [ecx],eax
  405716:	add    DWORD PTR [ecx],eax
  405718:	add    DWORD PTR [ecx],eax
  40571a:	add    DWORD PTR [ecx+eax*1],eax
  40571d:	add    DWORD PTR [ecx],eax
  40571f:	add    DWORD PTR [ecx],eax
  405721:	push   es
  405722:	add    al,0x5
  405724:	add    eax,DWORD PTR [ebx]
  405726:	add    eax,DWORD PTR [ebx]
  405728:	add    eax,DWORD PTR ds:0x3050503
  40572e:	add    eax,DWORD PTR [ebx]
  405730:	add    eax,0x5050303
  405735:	add    al,0x5
  405737:	add    eax,0x3050505
  40573c:	add    al,0x1
  40573e:	add    DWORD PTR [ebx],eax
  405740:	add    DWORD PTR [ebx],eax
  405742:	add    eax,DWORD PTR [ecx]
  405744:	add    eax,DWORD PTR [ecx]
  405746:	add    DWORD PTR [ebx],eax
  405748:	add    eax,DWORD PTR [ebx]
  40574a:	add    DWORD PTR [ebx],eax
  40574c:	add    eax,DWORD PTR [ecx]
  40574e:	add    DWORD PTR [ecx+eax*1],eax
  405751:	add    DWORD PTR [ecx],eax
  405753:	add    DWORD PTR [ecx],eax
  405755:	add    eax,DWORD PTR [ecx+eax*1]
  405758:	add    DWORD PTR [ebx],eax
  40575a:	add    DWORD PTR [ebx],eax
  40575c:	add    DWORD PTR [ecx],eax
  40575e:	add    DWORD PTR [ecx],eax
  405760:	add    DWORD PTR [ebx],eax
  405762:	add    eax,DWORD PTR [ebx]
  405764:	add    DWORD PTR [ebx],eax
  405766:	add    eax,DWORD PTR [ecx]
  405768:	add    DWORD PTR [ecx+eax*1],eax
  40576b:	add    DWORD PTR [ecx],eax
  40576d:	add    DWORD PTR [ecx],eax
  40576f:	add    eax,DWORD PTR [ecx+eax*1]
  405772:	add    DWORD PTR [ebx],eax
  405774:	add    DWORD PTR [ebx],eax
  405776:	add    DWORD PTR [ecx],eax
  405778:	add    DWORD PTR [ecx],eax
  40577a:	add    DWORD PTR [ebx],eax
  40577c:	add    eax,DWORD PTR [ebx]
  40577e:	add    DWORD PTR [ebx],eax
  405780:	add    eax,DWORD PTR [ecx]
  405782:	add    DWORD PTR [ecx+eax*1],eax
  405785:	add    DWORD PTR [ecx],eax
  405787:	add    DWORD PTR [ecx],eax
  405789:	add    eax,DWORD PTR [ecx+eax*1]
  40578c:	add    DWORD PTR [ebx],eax
  40578e:	add    DWORD PTR [ebx],eax
  405790:	add    DWORD PTR [ecx],eax
  405792:	add    DWORD PTR [ecx],eax
  405794:	add    DWORD PTR [ebx],eax
  405796:	add    eax,DWORD PTR [ebx]
  405798:	add    DWORD PTR [ebx],eax
  40579a:	add    eax,DWORD PTR [ecx]
  40579c:	add    DWORD PTR [ecx+eax*1],eax
  40579f:	add    DWORD PTR [ecx],eax
  4057a1:	add    DWORD PTR [ecx],eax
  4057a3:	add    eax,DWORD PTR [ecx+eax*1]
  4057a6:	add    DWORD PTR [ebx],eax
  4057a8:	add    DWORD PTR [ebx],eax
  4057aa:	add    DWORD PTR [ecx],eax
  4057ac:	add    DWORD PTR [ecx],eax
  4057ae:	add    DWORD PTR [ebx],eax
  4057b0:	add    eax,DWORD PTR [ebx]
  4057b2:	add    DWORD PTR [ebx],eax
  4057b4:	add    eax,DWORD PTR [ecx]
  4057b6:	add    DWORD PTR [ecx+eax*1],eax
  4057b9:	add    DWORD PTR [ecx],eax
  4057bb:	add    DWORD PTR [ecx],eax
  4057bd:	add    eax,DWORD PTR [ecx+eax*1]
  4057c0:	add    DWORD PTR [ebx],eax
  4057c2:	add    DWORD PTR [ebx],eax
  4057c4:	add    DWORD PTR [ecx],eax
  4057c6:	add    DWORD PTR [ecx],eax
  4057c8:	add    DWORD PTR [ebx],eax
  4057ca:	add    eax,DWORD PTR [ebx]
  4057cc:	add    DWORD PTR [ebx],eax
  4057ce:	add    eax,DWORD PTR [ecx]
  4057d0:	add    DWORD PTR [ecx+eax*1],eax
  4057d3:	add    DWORD PTR [ecx],eax
  4057d5:	add    DWORD PTR [ecx],eax
  4057d7:	add    eax,DWORD PTR [ecx+eax*1]
  4057da:	add    DWORD PTR [ebx],eax
  4057dc:	add    DWORD PTR [ebx],eax
  4057de:	add    DWORD PTR [ecx],eax
  4057e0:	add    DWORD PTR [ecx],eax
  4057e2:	add    DWORD PTR [ecx],eax
  4057e4:	add    eax,DWORD PTR [ebx]
  4057e6:	add    DWORD PTR [ebx],eax
  4057e8:	add    eax,DWORD PTR [ecx]
  4057ea:	add    DWORD PTR [ecx+eax*1],eax
  4057ed:	add    DWORD PTR [ecx],eax
  4057ef:	add    DWORD PTR [ecx],eax
  4057f1:	add    eax,DWORD PTR [ecx+eax*1]
  4057f4:	add    DWORD PTR [ebx],eax
  4057f6:	add    DWORD PTR [ebx],eax
  4057f8:	add    DWORD PTR [ecx],eax
  4057fa:	add    DWORD PTR [ecx],eax
  4057fc:	add    DWORD PTR [ecx],eax
  4057fe:	add    DWORD PTR [ebx],eax
  405800:	add    DWORD PTR [ebx],eax
  405802:	add    eax,DWORD PTR [ecx]
  405804:	add    DWORD PTR [ecx+eax*1],eax
  405807:	add    DWORD PTR [ecx],eax
  405809:	add    DWORD PTR [ecx],eax
  40580b:	add    eax,DWORD PTR [ecx+eax*1]
  40580e:	add    DWORD PTR [ebx],eax
  405810:	add    DWORD PTR [ebx],eax
  405812:	add    DWORD PTR [ecx],eax
  405814:	add    DWORD PTR [ecx],eax
  405816:	add    DWORD PTR [ecx],eax
  405818:	add    DWORD PTR [ecx],eax
  40581a:	add    DWORD PTR [ebx],eax
  40581c:	add    eax,DWORD PTR [ecx]
  40581e:	add    DWORD PTR [ecx+eax*1],eax
  405821:	add    DWORD PTR [ecx],eax
  405823:	add    DWORD PTR [ecx],eax
  405825:	add    eax,DWORD PTR [ecx+eax*1]
  405828:	add    DWORD PTR [ebx],eax
  40582a:	add    DWORD PTR [ebx],eax
  40582c:	add    DWORD PTR [ecx],eax
  40582e:	add    DWORD PTR [ecx],eax
  405830:	add    DWORD PTR [ecx],eax
  405832:	add    DWORD PTR [ecx],eax
  405834:	add    DWORD PTR [ebx],eax
  405836:	add    eax,DWORD PTR [ecx]
  405838:	add    DWORD PTR [ecx+eax*1],eax
  40583b:	add    DWORD PTR [ecx],eax
  40583d:	add    DWORD PTR [ecx],eax
  40583f:	add    eax,DWORD PTR [ecx+eax*1]
  405842:	add    DWORD PTR [ebx],eax
  405844:	add    DWORD PTR [ebx],eax
  405846:	add    DWORD PTR [ecx],eax
  405848:	add    DWORD PTR [ecx],eax
  40584a:	add    DWORD PTR [ecx],eax
  40584c:	add    DWORD PTR [ecx],eax
  40584e:	add    DWORD PTR [ecx],eax
  405850:	add    eax,DWORD PTR [ecx]
  405852:	add    DWORD PTR [ecx+eax*1],eax
  405855:	add    DWORD PTR [ecx],eax
  405857:	add    DWORD PTR [ecx],eax
  405859:	add    eax,DWORD PTR [ecx+eax*1]
  40585c:	add    DWORD PTR [ebx],eax
  40585e:	add    DWORD PTR [ebx],eax
  405860:	add    DWORD PTR [ecx],eax
  405862:	add    DWORD PTR [ecx],eax
  405864:	add    DWORD PTR [ecx],eax
  405866:	add    DWORD PTR [ecx],eax
  405868:	add    DWORD PTR [ecx],eax
  40586a:	add    DWORD PTR [ecx],eax
  40586c:	add    DWORD PTR [ecx+eax*1],eax
  40586f:	add    DWORD PTR [ecx],eax
  405871:	add    DWORD PTR [ecx],eax
  405873:	add    eax,DWORD PTR [eax*1+0x3030303]
  40587a:	add    eax,DWORD PTR ds:0x3050503
  405880:	add    eax,DWORD PTR [ebx]
  405882:	add    eax,0x5050303
  405887:	add    al,0x5
  405889:	add    eax,0x3050505
  40588e:	add    al,0x5
  405890:	add    eax,DWORD PTR [ebx]
  405892:	add    eax,DWORD PTR [ebx]
  405894:	add    eax,DWORD PTR ds:0x3050503
  40589a:	add    eax,DWORD PTR [ebx]
  40589c:	add    eax,0x5050303
  4058a1:	add    al,0x5
  4058a3:	add    eax,0x3050505
  4058a8:	add    al,0x5
  4058aa:	add    eax,DWORD PTR [ebx]
  4058ac:	add    eax,DWORD PTR [ebx]
  4058ae:	add    eax,DWORD PTR ds:0x3050503
  4058b4:	add    eax,DWORD PTR [ebx]
  4058b6:	add    eax,0x5050303
  4058bb:	add    al,BYTE PTR ds:0x5050505
  4058c1:	add    eax,DWORD PTR [eax*1+0x3020302]
  4058c8:	add    al,0x5
  4058ca:	add    al,0x5
  4058cc:	add    eax,0x5040404
  4058d1:	add    al,0x4
  4058d3:	add    eax,0x5050405
  4058d8:	add    eax,0x4030505
  4058dd:	add    eax,0x3030303
  4058e2:	add    eax,DWORD PTR ds:0x3050503
  4058e8:	add    eax,DWORD PTR [ebx]
  4058ea:	add    eax,0x5050303
  4058ef:	add    al,0x5
  4058f1:	add    eax,0x3050505
  4058f6:	add    al,0x5
  4058f8:	add    eax,DWORD PTR [ebx]
  4058fa:	add    eax,DWORD PTR [ebx]
  4058fc:	add    eax,DWORD PTR ds:0x3050503
  405902:	add    eax,DWORD PTR [ebx]
  405904:	add    eax,0x5050303
  405909:	add    al,0x5
  40590b:	add    eax,0x3050505
  405910:	add    al,0x5
  405912:	add    eax,DWORD PTR [ebx]
  405914:	add    eax,DWORD PTR [ebx]
  405916:	add    al,0x5
  405918:	add    eax,DWORD PTR ds:0x3030305
  40591e:	add    eax,0x5050303
  405923:	add    al,0x5
  405925:	add    eax,0x3050505
  40592a:	add    al,0x1
  40592c:	add    DWORD PTR [edi],eax
  40592e:	add    DWORD PTR [edi],eax
  405930:	add    DWORD PTR [ecx],eax
  405932:	add    DWORD PTR [ecx],eax
  405934:	add    DWORD PTR [ecx],eax
  405936:	add    DWORD PTR [ecx],eax
  405938:	add    DWORD PTR [ecx],eax
  40593a:	add    DWORD PTR [ecx],eax
  40593c:	add    DWORD PTR [ecx+eax*1],eax
  40593f:	add    DWORD PTR [ecx],eax
  405941:	add    DWORD PTR [ecx],eax
  405943:	add    BYTE PTR [eax+0x30900090],dl
  405949:	nop
  40594a:	nop
  40594b:	add    BYTE PTR [eax],al
  40594d:	add    BYTE PTR [eax],al
  40594f:	nop
  405950:	nop
  405951:	nop
  405952:	nop
  405953:	nop
  405954:	nop
  405955:	nop
  405956:	nop
  405957:	add    BYTE PTR [eax],al
  405959:	add    BYTE PTR [eax],al
  40595b:	add    BYTE PTR [eax-0x6f6f6f70],dl
  405961:	nop
  405962:	nop
  405963:	nop
  405964:	add    BYTE PTR [eax+0x20209090],dl
  40596a:	nop
  40596b:	nop
  40596c:	nop
  40596d:	nop
  40596e:	nop
  40596f:	nop
  405970:	nop
  405971:	nop
  405972:	add    BYTE PTR [eax],al
  405974:	or     ch,dh
  405976:	inc    ecx
  405977:	add    BYTE PTR [esi*8-0xaefffbf],cl
  40597e:	inc    ecx
  40597f:	add    BYTE PTR [esi*8-0xae7ffbf],dl
  405986:	inc    ecx
  405987:	add    BYTE PTR [esi*8-0x266effbf],bl
  40598e:	inc    ebx
  40598f:	add    dl,bl
  405991:	fiadd  DWORD PTR [ebx+0x0]
  405994:	mov    al,0xdb
  405996:	inc    ebx
  405997:	add    BYTE PTR [ecx+0x700043dc],bl
  40599d:	fld    QWORD PTR [ebx+0x0]
  4059a0:	add    al,BYTE PTR [eax]
  4059a2:	xchg   ebx,eax
  4059a3:	add    al,BYTE PTR [ecx]
  4059a5:	add    BYTE PTR [esi],dh
  4059a7:	add    BYTE PTR [edx],al
  4059a9:	add    BYTE PTR [eax+0x37000101],ch
  4059af:	add    BYTE PTR [edx],al
  4059b1:	add    BYTE PTR [ebx],al
  4059b3:	add    DWORD PTR [ecx],eax
  4059b5:	add    BYTE PTR [eax],bh
  4059b7:	add    BYTE PTR [edx],al
  4059b9:	add    BYTE PTR [esi+0x35000100],dh
  4059bf:	add    BYTE PTR [edx],al
  4059c1:	add    BYTE PTR [edx],ah
  4059c3:	add    al,BYTE PTR [ecx]
  4059c5:	add    BYTE PTR [ebx],dh
  4059c7:	add    BYTE PTR [edx],al
  4059c9:	add    BYTE PTR [ebx],ah
  4059cb:	add    al,BYTE PTR [ecx]
  4059cd:	add    BYTE PTR [eax+eax*1],dh
  4059d0:	or     BYTE PTR [eax],al
  4059d2:	and    al,0x0
  4059d4:	add    al,0x0
  4059d6:	popa   
  4059d7:	add    BYTE PTR [eax],cl
  4059d9:	add    BYTE PTR [edi],bl
  4059db:	add    BYTE PTR [ecx],al
  4059dd:	add    BYTE PTR [eax],ch
  4059df:	add    BYTE PTR [eax],cl
  4059e1:	add    BYTE PTR [ecx],ah
  4059e3:	add    BYTE PTR [eax+eax*1],al
  4059e6:	jno    0x4059e8
  4059e8:	or     BYTE PTR [eax],al
  4059ea:	bound  eax,QWORD PTR [eax]
  4059ec:	add    al,0x0
  4059ee:	push   0x0
  4059f0:	or     BYTE PTR [eax],al
  4059f2:	adc    al,0x0
  4059f4:	add    al,0x0
  4059f6:	data16 add BYTE PTR [eax],al
	...
  405a01:	add    BYTE PTR [eax],al
  405a03:	add    BYTE PTR [eax+0x0],al
  405a06:	add    BYTE PTR [eax],al
  405a08:	inc    eax
  405a09:	add    BYTE PTR [eax],al
  405a0b:	add    BYTE PTR [eax+0x0],al
  405a0e:	add    BYTE PTR [eax],al
  405a10:	add    BYTE PTR [eax],al
  405a12:	add    BYTE PTR [eax],al
  405a14:	inc    eax
  405a15:	add    BYTE PTR [eax],al
  405a17:	add    BYTE PTR [eax+0x0],al
  405a1a:	add    BYTE PTR [eax],al
  405a1c:	inc    eax
  405a1d:	add    BYTE PTR [eax],al
  405a1f:	add    BYTE PTR [eax],al
  405a21:	add    BYTE PTR [eax],al
  405a23:	add    BYTE PTR [eax+0x0],al
  405a26:	add    BYTE PTR [eax],al
  405a28:	add    BYTE PTR [eax],al
  405a2a:	add    BYTE PTR [eax],al
  405a2c:	inc    eax
  405a2d:	add    BYTE PTR [eax],al
  405a2f:	add    BYTE PTR [eax+0x0],al
  405a32:	add    BYTE PTR [eax],al
  405a34:	inc    eax
  405a35:	add    BYTE PTR [eax],al
  405a37:	add    BYTE PTR [eax+0x0],al
  405a3a:	add    BYTE PTR [eax],al
  405a3c:	inc    eax
  405a3d:	add    BYTE PTR [eax],al
  405a3f:	add    BYTE PTR [eax+0x0],al
  405a42:	add    BYTE PTR [eax],al
  405a44:	inc    eax
  405a45:	add    BYTE PTR [eax],al
  405a47:	add    BYTE PTR [eax+0x0],al
  405a4a:	add    BYTE PTR [eax],al
  405a4c:	inc    eax
  405a4d:	add    BYTE PTR [eax],al
  405a4f:	add    BYTE PTR [eax+0x0],al
  405a52:	add    BYTE PTR [eax],al
  405a54:	inc    eax
  405a55:	add    BYTE PTR [eax],al
  405a57:	add    BYTE PTR [eax+0x0],al
  405a5a:	add    BYTE PTR [eax],al
  405a5c:	inc    eax
  405a5d:	add    BYTE PTR [eax],al
  405a5f:	add    BYTE PTR [eax+0x0],al
  405a62:	add    BYTE PTR [eax],al
  405a64:	inc    eax
  405a65:	add    BYTE PTR [eax],al
  405a67:	add    BYTE PTR [esp+esi*2+0x74bc0043],bh
  405a6e:	inc    ebx
  405a6f:	add    BYTE PTR [esp+esi*2+0x74bc0043],bh
  405a76:	inc    ebx
  405a77:	add    BYTE PTR [edx],ch
  405a79:	jae    0x405abe
  405a7b:	add    BYTE PTR [edx-0x45ffbc8f],bh
  405a81:	jno    0x405ac6
  405a83:	add    BYTE PTR [esi-0x43ffbc90],dh
  405a89:	je     0x405ace
  405a8b:	add    BYTE PTR [esp+esi*2+0x70a10043],bh
  405a92:	inc    ebx
  405a93:	add    BYTE PTR [ebp+0x5d004370],dl
  405a99:	jo     0x405ade
  405a9b:	add    ah,al
  405a9d:	outs   dx,DWORD PTR ds:[esi]
  405a9e:	inc    ebx
  405a9f:	add    BYTE PTR [esp+esi*2+0x74bc0043],bh
  405aa6:	inc    ebx
  405aa7:	add    BYTE PTR [esp+esi*2+0x74bc0043],bh
  405aae:	inc    ebx
  405aaf:	add    BYTE PTR [esp+esi*2+0x20043],bh
  405ab6:	add    DWORD PTR [eax],eax
	...
  405ac4:	add    BYTE PTR [eax],al
  405ac6:	add    BYTE PTR [eax-0x1],al
  405acc:	(bad)  
  405acd:	(bad)  
  405ace:	(bad)  
  405acf:	(bad)  
  405ad0:	(bad)  
  405ad1:	(bad)  
  405ad2:	(bad)  
  405ad3:	(bad)  
  405ad4:	(bad)  
  405ad5:	(bad)  
  405ad6:	(bad)  
  405ad7:	(bad)  
  405ad8:	(bad)  
  405ad9:	(bad)  
  405ada:	(bad)  
  405adb:	(bad)  
  405adc:	(bad)  
  405add:	(bad)  
  405ade:	(bad)  
  405adf:	(bad)  
  405ae0:	(bad)  
  405ae1:	(bad)  
  405ae2:	(bad)  
  405ae3:	(bad)  
  405ae4:	(bad)  
  405ae5:	(bad)  
  405ae6:	(bad)  
  405ae7:	(bad)  
  405ae8:	(bad)  
  405ae9:	(bad)  
  405aea:	(bad)  
  405aeb:	(bad)  
  405aec:	(bad)  
  405aed:	(bad)  
  405aee:	(bad)  
  405aef:	(bad)  
  405af0:	(bad)  
  405af1:	(bad)  
  405af2:	(bad)  
  405af3:	(bad)  
  405af4:	(bad)  
  405af5:	(bad)  
  405af6:	(bad)  
  405af7:	inc    DWORD PTR [eax]
  405af9:	add    DWORD PTR [edx],eax
  405afb:	add    eax,DWORD PTR [eax*1+0x9080706]
  405b02:	(bad)  
  405b03:	(bad)  
  405b04:	(bad)  
  405b05:	(bad)  
  405b06:	(bad)  
  405b07:	(bad)  
  405b08:	dec    DWORD PTR [edx]
  405b0a:	or     ecx,DWORD PTR [ecx*1-0xf0f2]
  405b11:	(bad)  
  405b12:	(bad)  
  405b13:	(bad)  
  405b14:	(bad)  
  405b15:	(bad)  
  405b16:	(bad)  
  405b17:	(bad)  
  405b18:	(bad)  
  405b19:	(bad)  
  405b1a:	(bad)  
  405b1b:	(bad)  
  405b1c:	(bad)  
  405b1d:	(bad)  
  405b1e:	(bad)  
  405b1f:	(bad)  
  405b20:	(bad)  
  405b21:	(bad)  
  405b22:	(bad)  
  405b23:	(bad)  
  405b24:	(bad)  
  405b25:	(bad)  
  405b26:	(bad)  
  405b27:	(bad)  
  405b28:	(bad)  
  405b29:	(bad)  
  405b2a:	(bad)  
  405b2b:	(bad)  
  405b2c:	(bad)  
  405b2d:	(bad)  
  405b2e:	(bad)  
  405b2f:	(bad)  
  405b30:	(bad)  
  405b31:	(bad)  
  405b32:	(bad)  
  405b33:	(bad)  
  405b34:	(bad)  
  405b35:	(bad)  
  405b36:	(bad)  
  405b37:	(bad)  
  405b38:	(bad)  
  405b39:	(bad)  
  405b3a:	(bad)  
  405b3b:	(bad)  
  405b3c:	(bad)  
  405b3d:	(bad)  
  405b3e:	(bad)  
  405b3f:	(bad)  
  405b40:	(bad)  
  405b41:	(bad)  
  405b42:	(bad)  
  405b43:	(bad)  
  405b44:	(bad)  
  405b45:	(bad)  
  405b46:	(bad)  
  405b47:	push   edi
  405b49:	add    BYTE PTR [ebp+0x0],ah
  405b4c:	add    DWORD PTR [eax],eax
  405b4e:	push   es
  405b4f:	add    BYTE PTR [esi],dh
  405b51:	add    DWORD PTR [edx],ecx
  405b53:	add    BYTE PTR [ebx],cl
  405b55:	add    BYTE PTR [eax+0x0],ch
  405b58:	xchg   ecx,eax
  405b59:	add    BYTE PTR [edx+0x5c005b00],dl
  405b5f:	add    BYTE PTR [eax+eax*1+0x960095],dl
  405b66:	xchg   edi,eax
  405b67:	add    BYTE PTR [eax-0x65ff6700],bl
  405b6d:	add    BYTE PTR [ebx-0x62ff6400],bl
  405b73:	add    BYTE PTR [esi-0x5fff6100],bl
  405b79:	add    BYTE PTR [ecx-0x5cff5e00],ah
  405b7f:	add    BYTE PTR [eax+eax*1+0x16f00a5],ah
  405b86:	cmp    al,BYTE PTR [eax]
  405b88:	lods   eax,DWORD PTR ds:[esi]
  405b89:	add    BYTE PTR [esi-0x4fff5100],ch
  405b8f:	add    BYTE PTR [ecx+0x7f00b200],dh
  405b95:	add    DWORD PTR [edi-0xcfe5dff],ebx
  405b9b:	add    al,0xa8
  405b9d:	add    DWORD PTR [edi+0x3d00be00],esi
  405ba3:	add    eax,0x2c60222
  405ba8:	dec    edx
  405ba9:	add    BYTE PTR [eax],ch
  405bab:	add    ch,BYTE PTR [esi]
  405bad:	add    dl,BYTE PTR [ebx+0xee02]
  405bb3:	add    BYTE PTR [eax],al
  405bb5:	or     al,BYTE PTR [eax]
  405bb7:	add    BYTE PTR [eax-0x7fff8000],al
  405bbd:	add    BYTE PTR [eax+0x0],al
	...
  405bcf:	add    BYTE PTR [eax],al
  405bd1:	add    BYTE PTR [eax-0x80000000],al
  405bd7:	add    BYTE PTR [eax-0x7fff8000],al
  405bdd:	add    BYTE PTR [eax-0x7fff8000],al
  405be3:	add    BYTE PTR [eax-0x7fff8000],al
	...
  405bf5:	add    BYTE PTR [eax-0x7fff8000],al
  405bfb:	add    BYTE PTR [eax-0x7fff8000],al
  405c01:	add    BYTE PTR [eax],al
  405c03:	add    BYTE PTR [eax-0x80000000],al
  405c09:	add    BYTE PTR [eax-0x7fff8000],al
  405c0f:	add    BYTE PTR [eax-0x7fff8000],al
  405c15:	add    BYTE PTR [eax+0x0],al
  405c1b:	add    BYTE PTR [eax],al
  405c1d:	add    BYTE PTR [eax],al
  405c1f:	add    BYTE PTR [eax+0x8000],al
  405c25:	add    BYTE PTR [eax],al
  405c27:	add    BYTE PTR [eax+0x0],al
	...
  405c35:	add    BYTE PTR [eax],al
  405c37:	add    BYTE PTR [eax-0x7fff8000],al
  405c3d:	add    BYTE PTR [eax-0x7fff8000],al
  405c43:	add    BYTE PTR [eax-0x7fff8000],al
  405c49:	add    BYTE PTR [eax-0x7fff8000],al
  405c4f:	add    BYTE PTR [eax-0x7fff8000],al
  405c55:	add    BYTE PTR [eax-0x7fff8000],al
  405c5b:	add    BYTE PTR [eax-0x7fff8000],al
  405c61:	add    BYTE PTR [eax-0x7fff8000],al
  405c67:	add    BYTE PTR [eax-0x7fff8000],al
  405c6d:	add    BYTE PTR [eax-0x7fff8000],al
  405c73:	add    BYTE PTR [eax-0x7fff8000],al
  405c79:	add    BYTE PTR [eax-0x7fff8000],al
  405c7f:	add    BYTE PTR [eax-0x7fff8000],al
  405c85:	add    BYTE PTR [eax-0x7fff8000],al
  405c8b:	add    BYTE PTR [eax-0x7fff8000],al
  405c91:	add    BYTE PTR [eax-0x7fff8000],al
  405c97:	add    BYTE PTR [ecx-0x7eff7f00],al
  405c9d:	add    BYTE PTR [ecx-0x7fff8000],al
  405ca3:	add    BYTE PTR [eax-0x7fff8000],al
  405ca9:	add    BYTE PTR [eax+0x0],al
  405caf:	add    BYTE PTR [eax-0x7fff8000],al
  405cb5:	add    BYTE PTR [eax+0x3000300],al
  405cbb:	add    BYTE PTR [ebx],al
  405cbd:	add    BYTE PTR [ebx],al
  405cbf:	add    BYTE PTR [ebx],al
  405cc1:	add    BYTE PTR [ebx],al
  405cc3:	add    BYTE PTR [ebx],al
  405cc5:	add    BYTE PTR [ebx],al
  405cc7:	add    BYTE PTR [ebx],al
  405cc9:	add    BYTE PTR [ebx],al
  405ccb:	add    BYTE PTR [ebx],al
  405ccd:	add    BYTE PTR [ebx],al
  405ccf:	add    BYTE PTR [ebx],al
  405cd1:	add    BYTE PTR [ebx],al
  405cd3:	add    BYTE PTR [ebx],al
  405cd5:	add    BYTE PTR [ebx],al
  405cd7:	add    BYTE PTR [eax-0x7fff8000],al
  405cdd:	add    BYTE PTR [eax-0x7fff8000],al
  405ce3:	add    BYTE PTR [eax-0x7fff8000],al
  405ce9:	add    BYTE PTR [eax-0x7fff8000],al
  405cef:	add    BYTE PTR [eax-0x7fff8000],al
  405cf5:	add    BYTE PTR [eax+0x0],al
  405cfb:	add    BYTE PTR [eax],al
  405cfd:	add    BYTE PTR [eax-0x7fff7f00],al
	...
  405d0b:	add    BYTE PTR [eax],al
  405d0d:	add    BYTE PTR [eax-0x7fff7f00],al
  405d13:	add    BYTE PTR [eax-0x7fff8000],al
  405d19:	add    BYTE PTR [eax-0x7fff8000],al
  405d1f:	add    BYTE PTR [eax-0x7fff8000],al
  405d25:	add    BYTE PTR [eax+0x8000],al
  405d2b:	add    BYTE PTR [ecx-0x7fff8000],al
  405d31:	add    BYTE PTR [eax-0x7fff8000],al
  405d37:	add    BYTE PTR [eax-0x7fff8000],al
  405d3d:	add    BYTE PTR [eax-0x7eff8000],al
  405d43:	add    BYTE PTR [eax+0x8000],al
	...
  405d55:	add    BYTE PTR [eax],al
  405d57:	add    BYTE PTR [eax-0x7fff8000],al
  405d5d:	add    BYTE PTR [eax-0x7fff8000],al
  405d63:	add    BYTE PTR [eax-0x7fff8000],al
  405d69:	add    BYTE PTR [eax-0x7fff8000],al
  405d6f:	add    BYTE PTR [eax-0x7fff8000],al
  405d75:	add    BYTE PTR [eax-0x7fff8000],al
  405d7b:	add    BYTE PTR [eax-0x7fff8000],al
  405d81:	add    BYTE PTR [eax-0x7fff8000],al
  405d87:	add    BYTE PTR [eax-0x7fff8000],al
  405d8d:	add    BYTE PTR [eax-0x7fff8000],al
  405d93:	add    BYTE PTR [eax-0x7fff8000],al
  405d99:	add    BYTE PTR [eax-0x7fff8000],al
  405d9f:	add    BYTE PTR [eax-0x7fff8000],al
  405da5:	add    BYTE PTR [eax-0x7fff8000],al
  405dab:	add    BYTE PTR [eax-0x7fff8000],al
  405db1:	add    BYTE PTR [eax+0x8000],al
  405db7:	add    BYTE PTR [eax-0x7fff8000],al
  405dbd:	add    BYTE PTR [eax+0x3000100],al
  405dc3:	add    BYTE PTR [eax],al
  405dc5:	add    BYTE PTR [eax],al
  405dc7:	add    BYTE PTR [eax-0x7fff8000],al
  405dcd:	add    BYTE PTR [eax+0x3000100],al
  405dd3:	add    BYTE PTR [eax],al
  405dd5:	add    BYTE PTR [eax],dl
  405dd7:	add    BYTE PTR [eax-0x7fff8000],al
  405ddd:	add    BYTE PTR [eax+0x3000100],al
  405de3:	add    BYTE PTR [eax],al
  405de5:	add    BYTE PTR [eax],al
  405de7:	add    BYTE PTR [eax-0x7fff8000],al
  405ded:	add    BYTE PTR [eax+0x3000100],al
  405df3:	add    BYTE PTR [eax],al
  405df5:	add    BYTE PTR [eax],al
  405df7:	add    BYTE PTR [eax-0x7fff8000],al
  405dfd:	add    BYTE PTR [eax+0x3000100],al
  405e03:	add    BYTE PTR [eax+0x0],dl
  405e06:	add    BYTE PTR [eax],al
  405e08:	add    BYTE PTR [eax],0x80
  405e0b:	add    BYTE PTR [eax+0x1008000],al
  405e11:	add    BYTE PTR [ebx],al
  405e13:	add    BYTE PTR [eax+0x0],dl
  405e16:	add    BYTE PTR [eax],al
  405e18:	add    BYTE PTR [eax],0x80
  405e1b:	add    BYTE PTR [eax+0x1008000],al
  405e21:	add    BYTE PTR [ebx],al
  405e23:	add    BYTE PTR [eax+0x0],dl
  405e26:	add    BYTE PTR [eax],al
  405e28:	add    BYTE PTR [eax],0x80
  405e2b:	add    BYTE PTR [eax+0x1008000],al
  405e31:	add    BYTE PTR [ebx],al
  405e33:	add    BYTE PTR [eax+0x0],dl
  405e36:	add    BYTE PTR [eax],al
  405e38:	pusha  
  405e39:	add    BYTE PTR [eax+0x0],ah
  405e3c:	pusha  
  405e3d:	add    BYTE PTR [eax+0x0],ah
  405e40:	pusha  
  405e41:	add    BYTE PTR [eax+0x0],ah
  405e44:	pusha  
  405e45:	add    BYTE PTR [eax+0x0],ah
  405e48:	pusha  
  405e49:	add    BYTE PTR [eax+0x0],ah
  405e4c:	pusha  
  405e4d:	add    BYTE PTR [eax+0x0],ah
  405e50:	pusha  
  405e51:	add    BYTE PTR [eax+0x0],ah
  405e54:	pusha  
  405e55:	add    BYTE PTR [eax+0x0],ah
	...
  405e7c:	add    BYTE PTR [eax],0x80
  405e7f:	add    BYTE PTR [eax+0x0],dl
  405e82:	push   eax
  405e83:	add    BYTE PTR [eax+0x0],al
  405e86:	xor    BYTE PTR [eax],al
  405e88:	add    eax,DWORD PTR [eax]
  405e8a:	add    DWORD PTR [eax],0x1
  405e8d:	add    BYTE PTR [ecx+0x0],al
  405e93:	add    BYTE PTR [eax],al
  405e95:	add    BYTE PTR [eax],al
  405e97:	add    BYTE PTR [ecx],al
  405e99:	add    BYTE PTR [ecx],al
  405e9b:	add    BYTE PTR [ecx],al
  405e9d:	add    BYTE PTR [ecx],al
  405e9f:	add    BYTE PTR [ecx],al
  405ea1:	add    BYTE PTR [ecx],al
  405ea3:	add    BYTE PTR [ecx],al
  405ea5:	add    BYTE PTR [ecx],al
  405ea7:	add    BYTE PTR [ecx],al
  405ea9:	add    BYTE PTR [ecx],al
  405eab:	add    BYTE PTR [ecx],al
  405ead:	add    BYTE PTR [ecx],al
  405eaf:	add    BYTE PTR [ecx],al
  405eb1:	add    BYTE PTR [ecx],al
  405eb3:	add    BYTE PTR [ecx],al
  405eb5:	add    BYTE PTR [ecx],al
  405eb7:	add    BYTE PTR [ecx+0x8300],al
  405ebd:	add    BYTE PTR [ecx-0x7fff8000],al
  405ec3:	add    BYTE PTR [eax-0x7fff8000],al
  405ec9:	add    BYTE PTR [eax-0x7fff8000],al
  405ecf:	add    BYTE PTR [eax-0x7fff8000],al
  405ed5:	add    BYTE PTR [eax+0x0],al
	...
  405eeb:	add    BYTE PTR ds:0x0,al
	...
  405ef9:	pop    es
  405efa:	add    BYTE PTR [edi],al
  405efc:	add    BYTE PTR [edi],al
  405efe:	add    BYTE PTR [edi],al
	...
  405f08:	add    DWORD PTR [eax],eax
  405f0a:	add    eax,DWORD PTR [eax]
	...
  405f18:	add    DWORD PTR [eax],eax
  405f1a:	add    DWORD PTR [eax],eax
  405f1c:	add    DWORD PTR [eax],eax
  405f1e:	add    DWORD PTR [eax],eax
  405f20:	add    DWORD PTR [eax],eax
  405f22:	add    DWORD PTR [eax],eax
  405f24:	add    DWORD PTR [eax],eax
  405f26:	add    DWORD PTR [eax],eax
  405f28:	or     DWORD PTR [eax],eax
  405f2a:	or     DWORD PTR [eax],eax
  405f2c:	or     DWORD PTR [eax],eax
  405f2e:	or     DWORD PTR [eax],eax
  405f30:	or     DWORD PTR [eax],eax
  405f32:	or     DWORD PTR [eax],eax
  405f34:	or     DWORD PTR [eax],eax
  405f36:	or     DWORD PTR [eax],eax
  405f38:	add    DWORD PTR [eax],0x20081
  405f3e:	add    BYTE PTR [eax],al
  405f40:	add    BYTE PTR [eax],0x80
  405f43:	add    BYTE PTR [ecx+0x1008300],al
  405f49:	add    al,BYTE PTR [eax]
  405f4b:	add    BYTE PTR [edx],al
  405f4d:	add    BYTE PTR [eax],al
  405f4f:	add    BYTE PTR [eax],al
  405f51:	add    BYTE PTR [ecx],al
  405f53:	add    BYTE PTR [eax],al
  405f55:	add    BYTE PTR [eax],al
  405f57:	add    BYTE PTR [eax-0x7fff8000],al
  405f5d:	add    BYTE PTR [eax+0x1000100],al
  405f63:	add    BYTE PTR [eax],al
  405f65:	add    BYTE PTR [eax],al
  405f67:	add    BYTE PTR [eax-0x7fff8000],al
  405f6d:	add    BYTE PTR [eax-0x7fff8000],al
  405f73:	add    BYTE PTR [eax+0x1008000],al
  405f79:	add    BYTE PTR [ecx],al
  405f7b:	add    BYTE PTR [ecx],al
  405f7d:	add    BYTE PTR [ecx],al
  405f7f:	add    BYTE PTR [ecx],al
  405f81:	add    BYTE PTR [ecx],al
  405f83:	add    BYTE PTR [ecx],al
  405f85:	add    BYTE PTR [ecx],al
  405f87:	add    BYTE PTR [ebx],al
  405f89:	add    BYTE PTR [ebx],al
  405f8b:	add    BYTE PTR ds:0x100,al
  405f91:	add    BYTE PTR [eax],al
  405f93:	add    BYTE PTR [eax],al
  405f95:	add    BYTE PTR [eax],al
  405f97:	add    BYTE PTR [eax],ah
  405f99:	add    BYTE PTR [eax],al
  405f9b:	add    BYTE PTR [eax],ah
  405f9d:	add    BYTE PTR [eax],ah
  405f9f:	add    BYTE PTR [eax],al
  405fa1:	add    BYTE PTR [eax],al
  405fa3:	add    BYTE PTR [ecx+0x8300],al
	...
  405fb1:	add    BYTE PTR [eax],al
  405fb3:	add    BYTE PTR [eax+0x8000],al
  405fb9:	cmc    
  405fba:	inc    ecx
  405fbb:	add    BYTE PTR [esi*8-0xb3fffbf],al
  405fc2:	inc    ecx
  405fc3:	add    ah,al
  405fc5:	hlt    
  405fc6:	inc    ecx
  405fc7:	add    al,cl
  405fc9:	hlt    
  405fca:	inc    ecx
  405fcb:	add    ah,cl
  405fcd:	hlt    
  405fce:	inc    ecx
  405fcf:	add    al,dl
  405fd1:	hlt    
  405fd2:	inc    ecx
  405fd3:	add    ah,dl
  405fd5:	hlt    
  405fd6:	inc    ecx
  405fd7:	add    al,bl
  405fd9:	hlt    
  405fda:	inc    ecx
  405fdb:	add    ah,bl
  405fdd:	hlt    
  405fde:	inc    ecx
  405fdf:	add    al,ah
  405fe1:	hlt    
  405fe2:	inc    ecx
  405fe3:	add    ah,ah
  405fe5:	hlt    
  405fe6:	inc    ecx
  405fe7:	add    al,ch
  405fe9:	hlt    
  405fea:	inc    ecx
  405feb:	add    ah,ch
  405fed:	hlt    
  405fee:	inc    ecx
  405fef:	add    al,dh
  405ff1:	hlt    
  405ff2:	inc    ecx
  405ff3:	add    ah,dh
  405ff5:	hlt    
  405ff6:	inc    ecx
  405ff7:	add    al,bh
  405ff9:	hlt    
  405ffa:	inc    ecx
  405ffb:	add    ah,bh
  405ffd:	hlt    
  405ffe:	inc    ecx
  405fff:	add    BYTE PTR [eax-0xc],ch
  406002:	inc    ecx
  406003:	add    BYTE PTR [esp+esi*8+0x41],ch
  406007:	add    BYTE PTR [eax-0xc],dh
  40600a:	inc    ecx
  40600b:	add    BYTE PTR [esp+esi*8+0x41],dh
  40600f:	add    BYTE PTR [eax-0xc],bh
  406012:	inc    ecx
  406013:	add    BYTE PTR [esp+esi*8+0x41],bh
  406017:	add    BYTE PTR [eax-0x7bffbe0c],al
  40601d:	hlt    
  40601e:	inc    ecx
  40601f:	add    BYTE PTR [eax-0x73ffbe0c],cl
  406025:	hlt    
  406026:	inc    ecx
  406027:	add    BYTE PTR [eax-0x67ffbe0c],dl
  40602d:	hlt    
  40602e:	inc    ecx
  40602f:	add    BYTE PTR [eax-0x57ffbe0c],ah
  406035:	hlt    
  406036:	inc    ecx
  406037:	add    BYTE PTR [eax-0x47ffbe0c],dh
  40603d:	hlt    
  40603e:	inc    ecx
  40603f:	add    BYTE PTR [eax-0xc],cl
  406042:	inc    ecx
  406043:	add    BYTE PTR [esp+esi*8+0x41],cl
  406047:	add    BYTE PTR [eax-0xc],dl
  40604a:	inc    ecx
  40604b:	add    BYTE PTR [esp+esi*8+0x41],dl
  40604f:	add    BYTE PTR [eax-0xc],bl
  406052:	inc    ecx
  406053:	add    BYTE PTR [esp+esi*8+0x41],bl
  406057:	add    BYTE PTR [eax-0xc],ah
  40605a:	inc    ecx
  40605b:	add    BYTE PTR [esp+esi*8+0x41],ah
  40605f:	add    BYTE PTR [eax],al
  406061:	hlt    
  406062:	inc    ecx
  406063:	add    BYTE PTR [esp+esi*8],al
  406066:	inc    ecx
  406067:	add    BYTE PTR [eax],cl
  406069:	hlt    
  40606a:	inc    ecx
  40606b:	add    BYTE PTR [eax],dl
  40606d:	hlt    
  40606e:	inc    ecx
  40606f:	add    BYTE PTR [eax],bl
  406071:	hlt    
  406072:	inc    ecx
  406073:	add    BYTE PTR [eax],ah
  406075:	hlt    
  406076:	inc    ecx
  406077:	add    BYTE PTR [eax],ch
  406079:	hlt    
  40607a:	inc    ecx
  40607b:	add    BYTE PTR [eax],dh
  40607d:	hlt    
  40607e:	inc    ecx
  40607f:	add    al,ah
  406081:	repz inc ecx
  406083:	add    ah,ah
  406085:	repz inc ecx
  406087:	add    al,ch
  406089:	repz inc ecx
  40608b:	add    ah,ch
  40608d:	repz inc ecx
  40608f:	add    al,dh
  406091:	repz inc ecx
  406093:	add    ah,dh
  406095:	repz inc ecx
  406097:	add    al,bh
  406099:	repz inc ecx
  40609b:	add    ah,bh
  40609d:	repz inc ecx
  40609f:	add    BYTE PTR [eax],al
  4060a1:	hlt    
  4060a2:	inc    ecx
  4060a3:	add    BYTE PTR [esp+esi*8],al
  4060a6:	inc    ecx
  4060a7:	add    BYTE PTR [eax],cl
  4060a9:	hlt    
  4060aa:	inc    ecx
  4060ab:	add    BYTE PTR [eax],dl
  4060ad:	hlt    
  4060ae:	inc    ecx
  4060af:	add    BYTE PTR [eax],bl
  4060b1:	hlt    
  4060b2:	inc    ecx
  4060b3:	add    BYTE PTR [eax],ah
  4060b5:	hlt    
  4060b6:	inc    ecx
  4060b7:	add    BYTE PTR [eax],ch
  4060b9:	hlt    
  4060ba:	inc    ecx
  4060bb:	add    BYTE PTR [eax],dh
  4060bd:	hlt    
  4060be:	inc    ecx
  4060bf:	add    BYTE PTR [eax],bh
  4060c1:	hlt    
  4060c2:	inc    ecx
  4060c3:	add    BYTE PTR [esp+esi*8],bh
  4060c6:	inc    ecx
  4060c7:	add    BYTE PTR [eax-0xc],al
  4060ca:	inc    ecx
  4060cb:	add    BYTE PTR [esp+esi*8+0x41],al
  4060cf:	add    ah,bl
  4060d1:	popa   
  4060d2:	inc    eax
  4060d3:	add    BYTE PTR [edi-0x17ffbc4b],dh
  4060d9:	arpl   WORD PTR [eax+0x0],ax
  4060dc:	xlat   BYTE PTR ds:[ebx]
  4060dd:	mov    dh,0x43
  4060df:	add    BYTE PTR [eax+0x63],cl
  4060e2:	inc    eax
  4060e3:	add    BYTE PTR [ebx-0x49],bl
  4060e6:	inc    ebx
  4060e7:	add    BYTE PTR [eax],al
  4060e9:	arpl   WORD PTR [eax+0x0],ax
  4060ec:	sahf   
  4060ed:	mov    dh,0x43
  4060ef:	add    BYTE PTR [eax+0x74004062],ch
  4060f5:	mov    eax,0x62380043
  4060fa:	inc    eax
  4060fb:	add    BYTE PTR [edx-0x4a],dl
  4060fe:	inc    ebx
  4060ff:	add    BYTE PTR [eax-0x46ffbf9f],cl
  406105:	mov    ecx,0xf6500043
  40610a:	inc    ecx
  40610b:	add    BYTE PTR [eax-0xa],bl
  40610e:	inc    ecx
  40610f:	add    BYTE PTR [eax-0xa],ah
  406112:	inc    ecx
  406113:	add    BYTE PTR [eax-0xa],ch
  406116:	inc    ecx
  406117:	add    BYTE PTR [ebx-0x19],bh
  40611a:	inc    ecx
  40611b:	add    BYTE PTR [eax-0xa],dh
  40611e:	inc    ecx
  40611f:	add    BYTE PTR [ebx-0x19],bh
  406122:	inc    ecx
  406123:	add    BYTE PTR [eax-0xa],bh
  406126:	inc    ecx
  406127:	add    BYTE PTR [ebx-0x19],bh
  40612a:	inc    ecx
  40612b:	add    BYTE PTR [eax+0x7b0041f6],al
  406131:	out    0x41,eax
  406133:	add    BYTE PTR [ebx-0x19],bh
  406136:	inc    ecx
  406137:	add    BYTE PTR [ebx-0x19],bh
  40613a:	inc    ecx
  40613b:	add    BYTE PTR [ebx-0x19],bh
  40613e:	inc    ecx
  40613f:	add    BYTE PTR [ebx-0x19],bh
  406142:	inc    ecx
  406143:	add    BYTE PTR [eax+0x7b0041f6],cl
  406149:	out    0x41,eax
  40614b:	add    BYTE PTR [ebx-0x19],bh
  40614e:	inc    ecx
  40614f:	add    BYTE PTR [ebx-0x19],bh
  406152:	inc    ecx
  406153:	add    BYTE PTR [ebx-0x19],bh
  406156:	inc    ecx
  406157:	add    BYTE PTR [ebx-0x19],bh
  40615a:	inc    ecx
  40615b:	add    BYTE PTR [ebx-0x19],bh
  40615e:	inc    ecx
  40615f:	add    BYTE PTR [ebx-0x19],bh
  406162:	inc    ecx
  406163:	add    BYTE PTR [ebx-0x19],bh
  406166:	inc    ecx
  406167:	add    BYTE PTR [ebx-0x19],bh
  40616a:	inc    ecx
  40616b:	add    BYTE PTR [ebx-0x19],bh
  40616e:	inc    ecx
  40616f:	add    BYTE PTR [ebx-0x19],bh
  406172:	inc    ecx
  406173:	add    BYTE PTR [ebx-0x19],bh
  406176:	inc    ecx
  406177:	add    BYTE PTR [ebx-0x19],bh
  40617a:	inc    ecx
  40617b:	add    BYTE PTR [ebx-0x19],bh
  40617e:	inc    ecx
  40617f:	add    BYTE PTR [ebx-0x19],bh
  406182:	inc    ecx
  406183:	add    BYTE PTR [eax+0xd0041f6],dl
  406189:	or     cl,BYTE PTR ds:0x6d79530a
  40618f:	bound  ebp,QWORD PTR [edi+0x6c]
  406192:	jae    0x4061ce
  406194:	or     eax,0x200a0d0a
  406199:	and    BYTE PTR [eax],ah
  40619b:	and    BYTE PTR [eax],ah
  40619d:	and    BYTE PTR [eax],ah
  40619f:	and    BYTE PTR [eax],ah
  4061a1:	and    BYTE PTR [eax],ah
  4061a3:	and    BYTE PTR [eax],ah
  4061a5:	and    BYTE PTR [eax],ah
  4061a7:	and    BYTE PTR [esi+0x20],cl
  4061aa:	popa   
  4061ab:	and    BYTE PTR [ebp+0x20],ch
  4061ae:	and    BYTE PTR gs:[eax],ah
  4061b1:	and    BYTE PTR [eax],ah
  4061b3:	and    BYTE PTR [eax],ah
  4061b5:	and    BYTE PTR [eax],ah
  4061b7:	and    BYTE PTR [eax],ah
  4061b9:	and    BYTE PTR [eax],ah
  4061bb:	and    BYTE PTR [eax],ah
  4061bd:	and    BYTE PTR [eax],ah
  4061bf:	and    BYTE PTR [ecx+edi*2+0x70],dl
  4061c3:	and    BYTE PTR gs:[eax],ah
  4061c6:	and    BYTE PTR [eax],ah
  4061c8:	and    BYTE PTR [esi+0x61],dl
  4061cb:	ins    BYTE PTR es:[edi],dx
  4061cc:	jne    0x406233
  4061ce:	and    BYTE PTR [eax],ah
  4061d0:	and    BYTE PTR [eax],ah
  4061d2:	inc    ecx
  4061d3:	je     0x406249
  4061d5:	jb     0x4061e4
  4061d7:	or     al,BYTE PTR [eax]
  4061d9:	add    BYTE PTR [eax],al
  4061db:	add    BYTE PTR ds:0x4d0a0d0a,cl
  4061e1:	popa   
  4061e2:	arpl   WORD PTR [edx+0x6f],si
  4061e5:	jae    0x406221
  4061e7:	or     eax,0x200a0d0a
  4061ec:	and    BYTE PTR [eax],ah
  4061ee:	and    BYTE PTR [eax],ah
  4061f0:	and    BYTE PTR [eax],ah
  4061f2:	and    BYTE PTR [eax],ah
  4061f4:	and    BYTE PTR [eax],ah
  4061f6:	and    BYTE PTR [eax],ah
  4061f8:	and    BYTE PTR [eax],ah
  4061fa:	and    BYTE PTR [esi+0x20],cl
  4061fd:	popa   
  4061fe:	and    BYTE PTR [ebp+0x20],ch
  406201:	and    BYTE PTR gs:[eax],ah
  406204:	and    BYTE PTR [eax],ah
  406206:	and    BYTE PTR [eax],ah
  406208:	and    BYTE PTR [eax],ah
  40620a:	and    BYTE PTR [eax],ah
  40620c:	and    BYTE PTR [eax],ah
  40620e:	and    BYTE PTR [eax],ah
  406210:	and    BYTE PTR [eax],ah
  406212:	and    BYTE PTR [ecx+edi*2+0x70],dl
  406216:	gs or  eax,0xa
  40621c:	add    al,BYTE PTR [eax]
  40621e:	add    eax,DWORD PTR [eax]
	...
  40622c:	add    BYTE PTR [eax],al
  40622e:	add    BYTE PTR [ebx+0x1],ah
  406231:	xor    DWORD PTR [eax],eax
  406233:	add    BYTE PTR [eax+ecx*1],al
  406236:	xchg   DWORD PTR [edx],ecx
  406238:	or     eax,0x500a0d0a
  40623d:	jb     0x4062ae
  40623f:	arpl   WORD PTR [ebp+0x64],sp
  406242:	jne    0x4062b6
  406244:	gs jae 0x406273
  406247:	and    BYTE PTR [eax+0x61],dh
  40624a:	jb     0x4062ad
  40624c:	ins    DWORD PTR es:[edi],dx
  40624d:	gs je  0x4062b5
  406250:	jb     0x4062c5
  406252:	sub    al,0x20
  406254:	popa   
  406255:	outs   dx,BYTE PTR ds:[esi]
  406256:	and    BYTE PTR fs:[edi+ebp*2+0x63],ch
  40625b:	popa   
  40625c:	ins    BYTE PTR es:[edi],dx
  40625d:	jae    0x406299
  40625f:	or     eax,0x200a0d0a
  406264:	and    BYTE PTR [eax],ah
  406266:	and    BYTE PTR [eax],ah
  406268:	and    BYTE PTR [eax],ah
  40626a:	and    BYTE PTR [eax],ah
  40626c:	and    BYTE PTR [eax],ah
  40626e:	and    BYTE PTR [eax],ah
  406270:	and    BYTE PTR [eax],ah
  406272:	and    BYTE PTR [esi+0x20],cl
  406275:	popa   
  406276:	and    BYTE PTR [ebp+0x20],ch
  406279:	and    BYTE PTR gs:[eax],ah
  40627c:	and    BYTE PTR [eax],ah
  40627e:	and    BYTE PTR [eax],ah
  406280:	and    BYTE PTR [eax],ah
  406282:	and    BYTE PTR [eax],ah
  406284:	and    BYTE PTR [eax],ah
  406286:	and    BYTE PTR [eax],ah
  406288:	and    BYTE PTR [eax],ah
  40628a:	and    BYTE PTR [ecx+edi*2+0x70],dl
  40628e:	and    BYTE PTR gs:[eax],ah
  406291:	and    BYTE PTR [eax],ah
  406293:	and    BYTE PTR [esi+0x61],dl
  406296:	ins    BYTE PTR es:[edi],dx
  406297:	jne    0x4062fe
  406299:	and    BYTE PTR [eax],ah
  40629b:	and    BYTE PTR [eax],ah
  40629d:	inc    ecx
  40629e:	je     0x406314
  4062a0:	jb     0x4062af
  4062a2:	or     al,BYTE PTR [eax]
  4062a4:	push   es
  4062a5:	or     al,BYTE PTR [eax]
  4062a7:	add    BYTE PTR ds:0x530a0d0a,cl
  4062ad:	gs ins DWORD PTR es:[di],dx
  4062b0:	outs   dx,BYTE PTR gs:[esi]
  4062b2:	je     0x406327
  4062b4:	cmp    cl,BYTE PTR ds:0x200a0d0a
  4062ba:	and    BYTE PTR [eax],ah
  4062bc:	and    BYTE PTR [eax],ah
  4062be:	and    BYTE PTR [eax],ah
  4062c0:	and    BYTE PTR [eax],ah
  4062c2:	and    BYTE PTR [eax],ah
  4062c4:	and    BYTE PTR [eax],ah
  4062c6:	and    BYTE PTR [eax],ah
  4062c8:	and    BYTE PTR [esi+0x20],cl
  4062cb:	popa   
  4062cc:	and    BYTE PTR [ebp+0x20],ch
  4062cf:	and    BYTE PTR gs:[eax],ah
  4062d2:	and    BYTE PTR [eax],ah
  4062d4:	and    BYTE PTR [eax],ah
  4062d6:	and    BYTE PTR [eax],ah
  4062d8:	and    BYTE PTR [eax],ah
  4062da:	and    BYTE PTR [eax],ah
  4062dc:	and    BYTE PTR [eax],ah
  4062de:	and    BYTE PTR [eax],ah
  4062e0:	and    BYTE PTR [eax],ah
  4062e2:	dec    esp
  4062e3:	outs   dx,BYTE PTR gs:[esi]
  4062e5:	addr16 je 0x406350
  4062e8:	and    BYTE PTR [eax],ah
  4062ea:	and    BYTE PTR [ecx+0x6c],al
  4062ed:	imul   esp,DWORD PTR [edi+0x6e],0x43202020
  4062f4:	ins    BYTE PTR es:[edi],dx
  4062f5:	popa   
  4062f6:	jae    0x40636b
  4062f8:	or     eax,0x500000a
  4062fd:	or     al,BYTE PTR [eax]
  4062ff:	add    BYTE PTR ds:0x540a0d0a,cl
  406305:	jns    0x406377
  406307:	gs jae 0x406344
  40630a:	or     eax,0x200a0d0a
  40630f:	and    BYTE PTR [eax],ah
  406311:	and    BYTE PTR [eax],ah
  406313:	and    BYTE PTR [eax],ah
  406315:	and    BYTE PTR [eax],ah
  406317:	and    BYTE PTR [eax],ah
  406319:	and    BYTE PTR [eax],ah
  40631b:	and    BYTE PTR [eax],ah
  40631d:	and    BYTE PTR [esi+0x20],cl
  406320:	popa   
  406321:	and    BYTE PTR [ebp+0x20],ch
  406324:	and    BYTE PTR gs:[eax],ah
  406327:	and    BYTE PTR [eax],ah
  406329:	and    BYTE PTR [eax],ah
  40632b:	and    BYTE PTR [eax],ah
  40632d:	and    BYTE PTR [eax],ah
  40632f:	and    BYTE PTR [eax],ah
  406331:	and    BYTE PTR [eax],ah
  406333:	and    BYTE PTR [eax],ah
  406335:	and    BYTE PTR [eax],ah
  406337:	push   ebx
  406338:	imul   edi,DWORD PTR [edx+0x65],0x20202020
  40633f:	and    BYTE PTR [ecx+0x74],al
  406342:	je     0x4063b6
  406344:	or     eax,0xd00000a
  406349:	or     cl,BYTE PTR ds:0x6365520a
  40634f:	outs   dx,DWORD PTR ds:[esi]
  406350:	jb     0x4063b6
  406352:	jae    0x40638e
  406354:	or     eax,0x200a0d0a
  406359:	and    BYTE PTR [eax],ah
  40635b:	and    BYTE PTR [eax],ah
  40635d:	and    BYTE PTR [eax],ah
  40635f:	and    BYTE PTR [eax],ah
  406361:	and    BYTE PTR [eax],ah
  406363:	and    BYTE PTR [eax],ah
  406365:	and    BYTE PTR [eax],ah
  406367:	and    BYTE PTR [esi+0x20],cl
  40636a:	popa   
  40636b:	and    BYTE PTR [ebp+0x20],ch
  40636e:	and    BYTE PTR gs:[eax],ah
  406371:	and    BYTE PTR [eax],ah
  406373:	and    BYTE PTR [eax],ah
  406375:	and    BYTE PTR [eax],ah
  406377:	and    BYTE PTR [eax],ah
  406379:	and    BYTE PTR [eax],ah
  40637b:	and    BYTE PTR [eax],ah
  40637d:	and    BYTE PTR [eax],ah
  40637f:	and    BYTE PTR [eax],ah
  406381:	push   edi
  406382:	imul   esp,DWORD PTR [esp+esi*2+0x68],0x20202020
  40638a:	and    BYTE PTR [ebx],ah
  40638c:	and    BYTE PTR [esi+0x69],ah
  40638f:	gs ins BYTE PTR es:[edi],dx
  406391:	fs jae 0x4063a1
  406394:	or     ah,BYTE PTR [eax]
  406396:	and    BYTE PTR [eax],ah
  406398:	and    BYTE PTR [eax],ah
  40639a:	and    BYTE PTR [eax],ah
  40639c:	and    BYTE PTR [eax],ah
  40639e:	and    BYTE PTR [eax],ah
  4063a0:	and    BYTE PTR [eax],ah
  4063a2:	and    BYTE PTR [eax],ah
  4063a4:	and    BYTE PTR [eax],ah
  4063a6:	and    BYTE PTR [eax],ah
  4063a8:	and    BYTE PTR [eax],ah
  4063aa:	and    BYTE PTR [eax],ah
  4063ac:	and    BYTE PTR [eax],ah
  4063ae:	and    BYTE PTR [eax],ah
  4063b0:	and    BYTE PTR [eax],ah
  4063b2:	and    BYTE PTR [eax],ah
  4063b4:	and    BYTE PTR [eax],ah
  4063b6:	and    BYTE PTR [eax],ah
  4063b8:	and    BYTE PTR [eax],ah
  4063ba:	and    BYTE PTR [eax],ah
  4063bc:	and    BYTE PTR [eax],ah
  4063be:	push   ebx
  4063bf:	push   0x20746669
  4063c4:	and    BYTE PTR [eax],ah
  4063c6:	and    BYTE PTR [eax],ah
  4063c8:	push   edi
  4063c9:	imul   esp,DWORD PTR [esp+esi*2+0x68],0x20202020
  4063d1:	and    BYTE PTR [ebp+0x61],cl
  4063d4:	jae    0x406441
  4063d6:	and    BYTE PTR [eax],ah
  4063d8:	and    BYTE PTR [eax],ah
  4063da:	and    BYTE PTR [eax],ah
  4063dc:	dec    ecx
  4063dd:	outs   dx,BYTE PTR ds:[esi]
  4063de:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0xa0d6c
  4063e6:	add    BYTE PTR [eax],al
  4063e8:	or     eax,0x530a0d0a
  4063ed:	je     0x406461
  4063ef:	jne    0x406454
  4063f1:	je     0x406468
  4063f3:	jb     0x40645a
  4063f5:	jae    0x406417
  4063f7:	popa   
  4063f8:	outs   dx,BYTE PTR ds:[esi]
  4063f9:	and    BYTE PTR fs:[ebp+0x6e],dl
  4063fd:	imul   ebp,DWORD PTR [edi+0x6e],0xa0d3a73
  406404:	or     eax,0x2020200a
  406409:	and    BYTE PTR [eax],ah
  40640b:	and    BYTE PTR [eax],ah
  40640d:	and    BYTE PTR [eax],ah
  40640f:	and    BYTE PTR [eax],ah
  406411:	and    BYTE PTR [eax],ah
  406413:	and    BYTE PTR [eax],ah
  406415:	and    BYTE PTR [esi+0x20],cl
  406418:	popa   
  406419:	and    BYTE PTR [ebp+0x20],ch
  40641c:	and    BYTE PTR gs:[eax],ah
  40641f:	and    BYTE PTR [eax],ah
  406421:	and    BYTE PTR [eax],ah
  406423:	and    BYTE PTR [eax],ah
  406425:	and    BYTE PTR [eax],ah
  406427:	and    BYTE PTR [eax],ah
  406429:	and    BYTE PTR [eax],ah
  40642b:	and    BYTE PTR [eax],ah
  40642d:	and    BYTE PTR [eax],ah
  40642f:	push   ebx
  406430:	imul   edi,DWORD PTR [edx+0x65],0x20200a0d
  406437:	and    BYTE PTR [eax],ah
  406439:	and    BYTE PTR [eax],ah
  40643b:	and    BYTE PTR [eax],ah
  40643d:	and    BYTE PTR [eax],ah
  40643f:	and    BYTE PTR [eax],ah
  406441:	and    BYTE PTR [eax],ah
  406443:	and    BYTE PTR [eax],ah
  406445:	and    BYTE PTR [eax],ah
  406447:	and    BYTE PTR [eax],ah
  406449:	and    BYTE PTR [eax],ah
  40644b:	and    BYTE PTR [eax],ah
  40644d:	and    BYTE PTR [eax],ah
  40644f:	and    BYTE PTR [eax],ah
  406451:	and    BYTE PTR [eax],ah
  406453:	and    BYTE PTR [eax],ah
  406455:	and    BYTE PTR [eax],ah
  406457:	and    BYTE PTR [eax],ah
  406459:	and    BYTE PTR [eax],ah
  40645b:	and    BYTE PTR [eax],ah
  40645d:	and    BYTE PTR [edi+0x66],cl
  406460:	data16 jae 0x4064c8
  406463:	je     0x406485
  406465:	and    BYTE PTR [eax],ah
  406467:	and    BYTE PTR [eax],ah
  406469:	and    BYTE PTR [ecx+edi*2+0x70],dl
  40646d:	gs or  eax,0xa
  406473:	add    BYTE PTR [edx],al
  406475:	add    BYTE PTR [ebx],al
	...
  40648b:	add    BYTE PTR [ebx+eiz*1],ch
  40648e:	add    BYTE PTR [eax],al
  406490:	xor    DWORD PTR [ebx],esp
  406492:	add    BYTE PTR [eax],al
  406494:	das    
  406495:	and    eax,DWORD PTR [eax]
  406497:	add    BYTE PTR [edx],dh
  406499:	and    eax,DWORD PTR [eax]
  40649b:	add    BYTE PTR [ebx],dh
  40649d:	and    eax,DWORD PTR [eax]
  40649f:	add    BYTE PTR [ebx+eiz*1],dh
  4064a2:	add    BYTE PTR [eax],al
  4064a4:	xor    BYTE PTR [ebx],ah
  4064a6:	add    BYTE PTR [eax],al
  4064a8:	test   bh,dh
  4064aa:	inc    ecx
  4064ab:	add    BYTE PTR [edi+esi*8-0x86bffbf],cl
  4064b2:	inc    ecx
  4064b3:	add    BYTE PTR [edi+esi*8-0x85bffbf],bl
  4064ba:	inc    ecx
  4064bb:	add    BYTE PTR [edi+esi*8-0x84bffbf],ch
  4064c2:	inc    ecx
  4064c3:	add    BYTE PTR [edi+esi*8-0x83bffbf],bh
  4064ca:	inc    ecx
  4064cb:	add    al,cl
  4064cd:	test   DWORD PTR [ecx+0x0],0x41f7cc
  4064d4:	aam    0xf7
  4064d6:	inc    ecx
  4064d7:	add    ah,bl
  4064d9:	test   DWORD PTR [ecx+0x0],0x41f7e4
  4064e0:	in     al,dx
  4064e1:	test   DWORD PTR [ecx+0x0],0x41f7f4
  4064e8:	or     cl,BYTE PTR [ebx]
  4064ea:	adc    DWORD PTR ds:0x1312,ecx
  4064f0:	adc    al,0x0
  4064f2:	add    BYTE PTR [eax],al
  4064f4:	adc    BYTE PTR [eax],al
  4064f6:	add    DWORD PTR [eax],eax
  4064f8:	add    al,BYTE PTR [eax]
  4064fa:	add    al,0x0
  4064fc:	or     BYTE PTR [eax],al
  4064fe:	adc    BYTE PTR [eax],al
  406500:	and    BYTE PTR [eax],al
  406502:	inc    eax
  406503:	add    BYTE PTR [eax+0x10000],al
  406509:	add    al,BYTE PTR [eax]
  40650b:	add    al,0x0
  40650d:	or     BYTE PTR [eax],al
  40650f:	adc    BYTE PTR [eax],al
  406511:	and    BYTE PTR [eax],al
  406513:	add    BYTE PTR [ecx],al
  406515:	add    DWORD PTR [eax],eax
  406517:	add    DWORD PTR [eax],eax
  406519:	add    BYTE PTR [eax],al
  40651b:	add    BYTE PTR [ecx],al
	...
  406525:	add    BYTE PTR [eax],al
  406527:	add    BYTE PTR [ecx+edi*8+0x41],al
  40652b:	add    BYTE PTR [ebx-0x19],bh
  40652e:	inc    ecx
  40652f:	add    BYTE PTR [ebx-0x19],bh
  406532:	inc    ecx
  406533:	add    ah,al
  406535:	cmc    
  406536:	inc    ecx
  406537:	add    BYTE PTR [ebx-0x19],bh
  40653a:	inc    ecx
  40653b:	add    BYTE PTR [ebx-0x19],bh
  40653e:	inc    ecx
  40653f:	add    BYTE PTR [ebx-0x19],bh
  406542:	inc    ecx
  406543:	add    BYTE PTR [ebx-0x19],bh
  406546:	inc    ecx
  406547:	add    BYTE PTR [eax-0x7],dl
  40654a:	inc    ecx
  40654b:	add    BYTE PTR [eax-0x7],ch
  40654e:	inc    ecx
  40654f:	add    BYTE PTR [eax-0x7],ch
  406552:	inc    ecx
  406553:	add    BYTE PTR [eax-0x7],ch
  406556:	inc    ecx
  406557:	add    BYTE PTR [eax-0x7],ch
  40655a:	inc    ecx
  40655b:	add    BYTE PTR [ebx-0x19],bh
  40655e:	inc    ecx
  40655f:	add    BYTE PTR [eax-0x7],ch
  406562:	inc    ecx
  406563:	add    BYTE PTR [eax-0x7],dh
  406566:	inc    ecx
  406567:	add    BYTE PTR [eax-0x7],bh
  40656a:	inc    ecx
  40656b:	add    BYTE PTR [eax-0x77ffbe07],al
  406571:	stc    
  406572:	inc    ecx
  406573:	add    BYTE PTR [eax-0x67ffbe07],dl
  406579:	stc    
  40657a:	inc    ecx
  40657b:	add    BYTE PTR [eax-0x57ffbe07],ah
  406581:	stc    
  406582:	inc    ecx
  406583:	add    BYTE PTR [eax-0x47ffbe07],dh
  406589:	stc    
  40658a:	inc    ecx
  40658b:	add    al,al
  40658d:	stc    
  40658e:	inc    ecx
  40658f:	add    al,cl
  406591:	stc    
  406592:	inc    ecx
  406593:	add    al,dl
  406595:	stc    
  406596:	inc    ecx
  406597:	add    al,bl
  406599:	stc    
  40659a:	inc    ecx
  40659b:	add    al,ah
  40659d:	stc    
  40659e:	inc    ecx
  40659f:	add    al,ch
  4065a1:	stc    
  4065a2:	inc    ecx
  4065a3:	add    al,dh
  4065a5:	stc    
  4065a6:	inc    ecx
  4065a7:	add    al,bh
  4065a9:	stc    
  4065aa:	inc    ecx
  4065ab:	add    al,bh
  4065ad:	stc    
  4065ae:	inc    ecx
  4065af:	add    ah,bh
  4065b1:	stc    
  4065b2:	inc    ecx
  4065b3:	add    BYTE PTR [eax],al
  4065b5:	cli    
  4065b6:	inc    ecx
  4065b7:	add    al,al
  4065b9:	cmc    
  4065ba:	inc    ecx
  4065bb:	add    ah,cl
  4065bd:	cmc    
  4065be:	inc    ecx
  4065bf:	add    BYTE PTR [edx+edi*8],al
  4065c2:	inc    ecx
  4065c3:	add    BYTE PTR [edx+edi*8],cl
  4065c6:	inc    ecx
  4065c7:	add    BYTE PTR [eax],dl
  4065c9:	cli    
  4065ca:	inc    ecx
  4065cb:	add    BYTE PTR [eax],al
  4065cd:	add    BYTE PTR [eax],al
  4065cf:	add    al,cl
  4065d1:	cmc    
  4065d2:	inc    ecx
  4065d3:	add    BYTE PTR [eax],bl
  4065d5:	cli    
  4065d6:	inc    ecx
  4065d7:	add    BYTE PTR [edx+edi*8],bl
  4065da:	inc    ecx
  4065db:	add    BYTE PTR [eax-0x37ffbe0b],dl
  4065e1:	cmc    
  4065e2:	inc    ecx
  4065e3:	add    BYTE PTR [eax],bl
  4065e5:	cli    
  4065e6:	inc    ecx
  4065e7:	add    BYTE PTR [eax],ah
  4065e9:	cli    
  4065ea:	inc    ecx
  4065eb:	add    BYTE PTR [edx+edi*8],ah
  4065ee:	inc    ecx
  4065ef:	add    al,cl
  4065f1:	cmc    
  4065f2:	inc    ecx
  4065f3:	add    BYTE PTR [eax],ch
  4065f5:	cli    
  4065f6:	inc    ecx
  4065f7:	add    BYTE PTR [edx+edi*8],ch
  4065fa:	inc    ecx
  4065fb:	add    BYTE PTR [eax],dh
  4065fd:	cli    
  4065fe:	inc    ecx
  4065ff:	add    BYTE PTR [edx+edi*8],dh
  406602:	inc    ecx
  406603:	add    BYTE PTR [eax],bh
  406605:	cli    
  406606:	inc    ecx
  406607:	add    BYTE PTR [edx+edi*8],bh
  40660a:	inc    ecx
  40660b:	add    BYTE PTR [eax-0x6],al
  40660e:	inc    ecx
  40660f:	add    BYTE PTR [edx+edi*8+0x41],al
  406613:	add    BYTE PTR [edx+edi*8+0x41],al
  406617:	add    BYTE PTR [edx+edi*8+0x41],cl
  40661b:	add    BYTE PTR [eax-0x6],bl
  40661e:	inc    ecx
  40661f:	add    BYTE PTR [edx+edi*8+0x41],bl
  406623:	add    BYTE PTR [edx+edi*8+0x41],ah
  406627:	add    BYTE PTR [edx+edi*8+0x41],ch
  40662b:	add    BYTE PTR [eax-0x6],dh
  40662e:	inc    ecx
  40662f:	add    BYTE PTR [eax-0x6],bh
  406632:	inc    ecx
  406633:	add    BYTE PTR [eax-0x73ffbe06],al
  406639:	cli    
  40663a:	inc    ecx
  40663b:	add    BYTE PTR [edx+edi*8-0x563ffbf],dl
  406642:	inc    ecx
  406643:	add    BYTE PTR [edx+edi*8-0x55bffbf],bl
  40664a:	inc    ecx
  40664b:	add    BYTE PTR [edx+edi*8-0x54bffbf],ch
  406652:	inc    ecx
  406653:	add    BYTE PTR [edx+edi*8-0x53bffbf],bh
  40665a:	inc    ecx
  40665b:	add    al,dl
  40665d:	cli    
  40665e:	inc    ecx
  40665f:	add    ah,bl
  406661:	cli    
  406662:	inc    ecx
  406663:	add    ah,ah
  406665:	cli    
  406666:	inc    ecx
  406667:	add    ah,ch
  406669:	cli    
  40666a:	inc    ecx
  40666b:	add    ah,cl
  40666d:	test   BYTE PTR [ecx+0x0],0xb4
  406671:	cmc    
  406672:	inc    ecx
  406673:	add    al,dh
  406675:	cli    
  406676:	inc    ecx
  406677:	add    ah,dh
  406679:	cli    
  40667a:	inc    ecx
  40667b:	add    al,bh
  40667d:	cli    
  40667e:	inc    ecx
  40667f:	add    ah,bh
  406681:	cli    
  406682:	inc    ecx
  406683:	add    BYTE PTR [eax],al
  406685:	sti    
  406686:	inc    ecx
  406687:	add    BYTE PTR [ebx+edi*8],al
  40668a:	inc    ecx
  40668b:	add    BYTE PTR [eax],cl
  40668d:	sti    
  40668e:	inc    ecx
  40668f:	add    BYTE PTR [ebx-0x19],bh
  406692:	inc    ecx
  406693:	add    BYTE PTR [ebx+edi*8],cl
  406696:	inc    ecx
  406697:	add    BYTE PTR [eax],dl
  406699:	sti    
  40669a:	inc    ecx
  40669b:	add    ah,ch
  40669d:	cmc    
  40669e:	inc    ecx
  40669f:	add    al,dh
  4066a1:	cmc    
  4066a2:	inc    ecx
  4066a3:	add    BYTE PTR [eax],al
  4066a5:	add    BYTE PTR [eax],al
  4066a7:	add    al,ah
  4066a9:	repz inc ecx
  4066ab:	add    ah,ah
  4066ad:	repz inc ecx
  4066af:	add    al,ch
  4066b1:	repz inc ecx
  4066b3:	add    ah,ch
  4066b5:	repz inc ecx
  4066b7:	add    al,dh
  4066b9:	repz inc ecx
  4066bb:	add    ah,dh
  4066bd:	repz inc ecx
  4066bf:	add    al,bh
  4066c1:	repz inc ecx
  4066c3:	add    ah,bh
  4066c5:	repz inc ecx
  4066c7:	add    BYTE PTR [ebx+edi*8],dl
  4066ca:	inc    ecx
  4066cb:	add    BYTE PTR [eax],bl
  4066cd:	sti    
  4066ce:	inc    ecx
  4066cf:	add    BYTE PTR [ebx+edi*8],bl
  4066d2:	inc    ecx
  4066d3:	add    BYTE PTR [ebx+edi*8],ah
  4066d6:	inc    ecx
  4066d7:	add    BYTE PTR [ebx+edi*8],ch
  4066da:	inc    ecx
  4066db:	add    BYTE PTR [ebx+edi*8],dh
  4066de:	inc    ecx
  4066df:	add    BYTE PTR [ebx+edi*8],bh
  4066e2:	inc    ecx
  4066e3:	add    BYTE PTR [ebx+edi*8+0x41],al
  4066e7:	add    BYTE PTR [eax],bh
  4066e9:	hlt    
  4066ea:	inc    ecx
  4066eb:	add    BYTE PTR [esp+esi*8],bh
  4066ee:	inc    ecx
  4066ef:	add    BYTE PTR [eax-0xc],al
  4066f2:	inc    ecx
  4066f3:	add    BYTE PTR [esp+esi*8+0x41],al
  4066f7:	add    BYTE PTR [eax-0xc],cl
  4066fa:	inc    ecx
  4066fb:	add    BYTE PTR [esp+esi*8+0x41],cl
  4066ff:	add    BYTE PTR [eax-0xc],dl
  406702:	inc    ecx
  406703:	add    BYTE PTR [esp+esi*8+0x41],dl
  406707:	add    BYTE PTR [eax-0xc],bl
  40670a:	inc    ecx
  40670b:	add    BYTE PTR [esp+esi*8+0x41],bl
  40670f:	add    BYTE PTR [eax-0xc],ah
  406712:	inc    ecx
  406713:	add    BYTE PTR [esp+esi*8+0x41],ah
  406717:	add    BYTE PTR [eax],al
  406719:	hlt    
  40671a:	inc    ecx
  40671b:	add    BYTE PTR [esp+esi*8],al
  40671e:	inc    ecx
  40671f:	add    BYTE PTR [eax],cl
  406721:	hlt    
  406722:	inc    ecx
  406723:	add    BYTE PTR [eax],dl
  406725:	hlt    
  406726:	inc    ecx
  406727:	add    BYTE PTR [eax],bl
  406729:	hlt    
  40672a:	inc    ecx
  40672b:	add    BYTE PTR [eax],ah
  40672d:	hlt    
  40672e:	inc    ecx
  40672f:	add    BYTE PTR [eax],ch
  406731:	hlt    
  406732:	inc    ecx
  406733:	add    BYTE PTR [eax],dh
  406735:	hlt    
  406736:	inc    ecx
  406737:	add    BYTE PTR [eax-0xc],ch
  40673a:	inc    ecx
  40673b:	add    BYTE PTR [esp+esi*8+0x41],ch
  40673f:	add    BYTE PTR [eax-0xc],dh
  406742:	inc    ecx
  406743:	add    BYTE PTR [esp+esi*8+0x41],dh
  406747:	add    BYTE PTR [eax-0xc],bh
  40674a:	inc    ecx
  40674b:	add    BYTE PTR [esp+esi*8+0x41],bh
  40674f:	add    BYTE PTR [eax-0x7bffbe0c],al
  406755:	hlt    
  406756:	inc    ecx
  406757:	add    BYTE PTR [eax-0x73ffbe0c],cl
  40675d:	hlt    
  40675e:	inc    ecx
  40675f:	add    BYTE PTR [eax-0x67ffbe0c],dl
  406765:	hlt    
  406766:	inc    ecx
  406767:	add    BYTE PTR [eax-0x57ffbe0c],ah
  40676d:	hlt    
  40676e:	inc    ecx
  40676f:	add    BYTE PTR [eax-0x47ffbe0c],dh
  406775:	hlt    
  406776:	inc    ecx
  406777:	add    al,al
  406779:	hlt    
  40677a:	inc    ecx
  40677b:	add    ah,al
  40677d:	hlt    
  40677e:	inc    ecx
  40677f:	add    al,cl
  406781:	hlt    
  406782:	inc    ecx
  406783:	add    ah,cl
  406785:	hlt    
  406786:	inc    ecx
  406787:	add    al,dl
  406789:	hlt    
  40678a:	inc    ecx
  40678b:	add    ah,dl
  40678d:	hlt    
  40678e:	inc    ecx
  40678f:	add    al,bl
  406791:	hlt    
  406792:	inc    ecx
  406793:	add    ah,bl
  406795:	hlt    
  406796:	inc    ecx
  406797:	add    al,ah
  406799:	hlt    
  40679a:	inc    ecx
  40679b:	add    ah,ah
  40679d:	hlt    
  40679e:	inc    ecx
  40679f:	add    al,ch
  4067a1:	hlt    
  4067a2:	inc    ecx
  4067a3:	add    ah,ch
  4067a5:	hlt    
  4067a6:	inc    ecx
  4067a7:	add    al,dh
  4067a9:	hlt    
  4067aa:	inc    ecx
  4067ab:	add    ah,dh
  4067ad:	hlt    
  4067ae:	inc    ecx
  4067af:	add    al,bh
  4067b1:	hlt    
  4067b2:	inc    ecx
  4067b3:	add    ah,bh
  4067b5:	hlt    
  4067b6:	inc    ecx
  4067b7:	add    BYTE PTR [eax],al
  4067b9:	add    BYTE PTR [eax],al
  4067bb:	add    BYTE PTR [eax],cl
  4067bd:	cmc    
  4067be:	inc    ecx
  4067bf:	add    BYTE PTR [esi*8-0xaefffbf],cl
  4067c6:	inc    ecx
  4067c7:	add    BYTE PTR [esi*8-0xae7ffbf],dl
  4067ce:	inc    ecx
  4067cf:	add    BYTE PTR [esi*8-0x4b3ffbf],bl
  4067d6:	inc    ecx
  4067d7:	add    BYTE PTR [eax-0x5],dl
  4067da:	inc    ecx
  4067db:	add    BYTE PTR [ebx+edi*8+0x41],dl
  4067df:	add    BYTE PTR [eax-0x5],bl
  4067e2:	inc    ecx
  4067e3:	add    BYTE PTR [ebx+edi*8+0x41],bl
  4067e7:	add    BYTE PTR [eax-0x5],ah
  4067ea:	inc    ecx
  4067eb:	add    BYTE PTR [ebx+edi*8+0x41],ah
  4067ef:	add    BYTE PTR [eax-0x5],ch
  4067f2:	inc    ecx
  4067f3:	add    BYTE PTR [ebx+edi*8+0x41],ch
  4067f7:	add    BYTE PTR [eax-0x5],dh
  4067fa:	inc    ecx
  4067fb:	add    BYTE PTR [eax-0x5],bh
  4067fe:	inc    ecx
  4067ff:	add    BYTE PTR [eax-0x77ffbe05],al
  406805:	sti    
  406806:	inc    ecx
  406807:	add    BYTE PTR [eax-0x67ffbe05],dl
  40680d:	sti    
  40680e:	inc    ecx
  40680f:	add    BYTE PTR [eax-0x57ffbe05],ah
  406815:	sti    
  406816:	inc    ecx
  406817:	add    BYTE PTR [eax-0x47ffbe05],dh
  40681d:	sti    
  40681e:	inc    ecx
  40681f:	add    al,al
  406821:	sti    
  406822:	inc    ecx
  406823:	add    al,cl
  406825:	sti    
  406826:	inc    ecx
  406827:	add    al,dl
  406829:	sti    
  40682a:	inc    ecx
  40682b:	add    al,bl
  40682d:	sti    
  40682e:	inc    ecx
  40682f:	add    al,ah
  406831:	sti    
  406832:	inc    ecx
  406833:	add    al,ch
  406835:	sti    
  406836:	inc    ecx
  406837:	add    al,dh
  406839:	sti    
  40683a:	inc    ecx
  40683b:	add    al,bh
  40683d:	sti    
  40683e:	inc    ecx
  40683f:	add    BYTE PTR [eax],al
  406841:	cld    
  406842:	inc    ecx
  406843:	add    BYTE PTR [eax],cl
  406845:	cld    
  406846:	inc    ecx
  406847:	add    BYTE PTR [eax],dl
  406849:	cld    
  40684a:	inc    ecx
  40684b:	add    BYTE PTR [eax],bl
  40684d:	cld    
  40684e:	inc    ecx
  40684f:	add    BYTE PTR [eax],ah
  406851:	cld    
  406852:	inc    ecx
  406853:	add    BYTE PTR [eax],ch
  406855:	cld    
  406856:	inc    ecx
  406857:	add    BYTE PTR [eax],dh
  406859:	cld    
  40685a:	inc    ecx
  40685b:	add    BYTE PTR [eax],bh
  40685d:	cld    
  40685e:	inc    ecx
  40685f:	add    BYTE PTR [eax-0x4],al
  406862:	inc    ecx
  406863:	add    BYTE PTR [eax-0x4],cl
  406866:	inc    ecx
  406867:	add    BYTE PTR [eax-0x4],dl
  40686a:	inc    ecx
  40686b:	add    BYTE PTR [eax-0x4],bl
  40686e:	inc    ecx
  40686f:	add    BYTE PTR [eax-0x4],ah
  406872:	inc    ecx
  406873:	add    BYTE PTR [eax-0x4],ch
  406876:	inc    ecx
  406877:	add    BYTE PTR [eax-0x4],dh
  40687a:	inc    ecx
  40687b:	add    BYTE PTR [esp+edi*8+0x41],dh
  40687f:	add    BYTE PTR [eax-0x4],bh
  406882:	inc    ecx
  406883:	add    BYTE PTR [esp+edi*8+0x41],bh
  406887:	add    BYTE PTR [eax-0x7bffbe04],al
  40688d:	cld    
  40688e:	inc    ecx
  40688f:	add    BYTE PTR [eax-0x73ffbe04],cl
  406895:	cld    
  406896:	inc    ecx
  406897:	add    BYTE PTR [eax-0x6bffbe04],dl
  40689d:	cld    
  40689e:	inc    ecx
  40689f:	add    BYTE PTR [eax-0x5fffbe04],bl
  4068a5:	cld    
  4068a6:	inc    ecx
  4068a7:	add    BYTE PTR [eax-0x4fffbe04],ch
  4068ad:	cld    
  4068ae:	inc    ecx
  4068af:	add    BYTE PTR [eax-0x3fffbe04],bh
  4068b5:	cld    
  4068b6:	inc    ecx
  4068b7:	add    al,cl
  4068b9:	cld    
  4068ba:	inc    ecx
  4068bb:	add    ah,cl
  4068bd:	cld    
  4068be:	inc    ecx
  4068bf:	add    al,dl
  4068c1:	cld    
  4068c2:	inc    ecx
  4068c3:	add    ah,dl
  4068c5:	cld    
  4068c6:	inc    ecx
  4068c7:	add    al,bl
  4068c9:	cld    
  4068ca:	inc    ecx
  4068cb:	add    ah,bl
  4068cd:	cld    
  4068ce:	inc    ecx
  4068cf:	add    al,ah
  4068d1:	cld    
  4068d2:	inc    ecx
  4068d3:	add    ah,ah
  4068d5:	cld    
  4068d6:	inc    ecx
  4068d7:	add    al,ch
  4068d9:	cld    
  4068da:	inc    ecx
  4068db:	add    ah,ch
  4068dd:	cld    
  4068de:	inc    ecx
  4068df:	add    al,dh
  4068e1:	cld    
  4068e2:	inc    ecx
  4068e3:	add    al,bh
  4068e5:	cld    
  4068e6:	inc    ecx
  4068e7:	add    BYTE PTR [eax],al
  4068e9:	std    
  4068ea:	inc    ecx
  4068eb:	add    BYTE PTR [eax],cl
  4068ed:	std    
  4068ee:	inc    ecx
  4068ef:	add    BYTE PTR [eax],dl
  4068f1:	std    
  4068f2:	inc    ecx
  4068f3:	add    BYTE PTR [eax],bl
  4068f5:	std    
  4068f6:	inc    ecx
  4068f7:	add    BYTE PTR [eax],ah
  4068f9:	std    
  4068fa:	inc    ecx
  4068fb:	add    BYTE PTR [edi*8-0x2d3ffbf],ah
  406902:	inc    ecx
  406903:	add    BYTE PTR [eax],dh
  406905:	std    
  406906:	inc    ecx
  406907:	add    BYTE PTR [edi*8-0xd9fffbf],dh
  40690e:	inc    ecx
  40690f:	add    BYTE PTR [eax],bh
  406911:	std    
  406912:	inc    ecx
  406913:	add    BYTE PTR [eax-0x3],al
  406916:	inc    ecx
  406917:	add    BYTE PTR [ebp+edi*8+0x41],al
  40691b:	add    BYTE PTR [eax-0x3],cl
  40691e:	inc    ecx
  40691f:	add    BYTE PTR [ebp+edi*8+0x41],cl
  406923:	add    BYTE PTR [ebp+edi*8+0x41],dl
  406927:	add    BYTE PTR [ebp+edi*8+0x41],bl
  40692b:	add    BYTE PTR [eax-0x3],ah
  40692e:	inc    ecx
  40692f:	add    BYTE PTR [ebp+edi*8+0x41],ah
  406933:	add    BYTE PTR [eax-0x3],ch
  406936:	inc    ecx
  406937:	add    BYTE PTR [ebp+edi*8+0x41],ch
  40693b:	add    BYTE PTR [eax-0x3],dh
  40693e:	inc    ecx
  40693f:	add    BYTE PTR [eax-0x3],bh
  406942:	inc    ecx
  406943:	add    BYTE PTR [ebp+edi*8+0x41],bh
  406947:	add    BYTE PTR [eax-0x7bffbe03],al
  40694d:	std    
  40694e:	inc    ecx
  40694f:	add    BYTE PTR [eax-0x73ffbe03],cl
  406955:	std    
  406956:	inc    ecx
  406957:	add    BYTE PTR [eax-0x6bffbe03],dl
  40695d:	std    
  40695e:	inc    ecx
  40695f:	add    BYTE PTR [eax-0x63ffbe03],bl
  406965:	std    
  406966:	inc    ecx
  406967:	add    BYTE PTR [eax-0x5bffbe03],ah
  40696d:	std    
  40696e:	inc    ecx
  40696f:	add    BYTE PTR [eax-0x53ffbe03],ch
  406975:	std    
  406976:	inc    ecx
  406977:	add    BYTE PTR [ebp+edi*8-0x243ffbf],dh
  40697e:	inc    ecx
  40697f:	add    ah,al
  406981:	std    
  406982:	inc    ecx
  406983:	add    ah,cl
  406985:	std    
  406986:	inc    ecx
  406987:	add    ah,dl
  406989:	std    
  40698a:	inc    ecx
  40698b:	add    ah,bl
  40698d:	std    
  40698e:	inc    ecx
  40698f:	add    ah,ah
  406991:	std    
  406992:	inc    ecx
  406993:	add    al,ch
  406995:	std    
  406996:	inc    ecx
  406997:	add    al,dh
  406999:	std    
  40699a:	inc    ecx
  40699b:	add    al,bh
  40699d:	std    
  40699e:	inc    ecx
  40699f:	add    BYTE PTR [eax],bh
  4069a1:	cli    
  4069a2:	inc    ecx
  4069a3:	add    ah,bh
  4069a5:	std    
  4069a6:	inc    ecx
  4069a7:	add    BYTE PTR [eax],al
  4069a9:	inc    BYTE PTR [ecx+0x0]
  4069ac:	or     dh,bh
  4069ae:	inc    ecx
  4069af:	add    BYTE PTR [eax],ch
  4069b1:	cli    
  4069b2:	inc    ecx
  4069b3:	add    BYTE PTR [esi+edi*8],cl
  4069b6:	inc    ecx
  4069b7:	add    BYTE PTR [esi+edi*8],dl
  4069ba:	inc    ecx
  4069bb:	add    BYTE PTR [eax],bl
  4069bd:	inc    BYTE PTR [ecx+0x0]
  4069c0:	sbb    al,0xfe
  4069c2:	inc    ecx
  4069c3:	add    BYTE PTR [edx+edi*8],dh
  4069c6:	inc    ecx
  4069c7:	add    BYTE PTR [esi+edi*8],ah
  4069ca:	inc    ecx
  4069cb:	add    BYTE PTR [eax+0x48],cl
  4069ce:	cmp    BYTE PTR [eax],bh
  4069d0:	sbb    al,0x1c
  4069d2:	sbb    DWORD PTR [eax+esi*1],ebx
  4069d5:	xor    BYTE PTR [esp+ebp*1],ch
  4069d8:	sbb    al,0x28
  4069da:	and    BYTE PTR [eax],ah
  4069dc:	dec    esp
  4069dd:	and    BYTE PTR [eax+eax*1],bl
  4069e0:	add    DWORD PTR [eax],eax
  4069e2:	add    BYTE PTR [eax],al
  4069e4:	add    al,BYTE PTR [eax]
  4069e6:	add    BYTE PTR [eax],al
  4069e8:	add    al,0x0
  4069ea:	add    BYTE PTR [eax],al
  4069ec:	push   es
  4069ed:	add    BYTE PTR [eax],al
  4069ef:	add    BYTE PTR [eax],cl
  4069f1:	add    BYTE PTR [eax],al
  4069f3:	add    BYTE PTR [edx],cl
  4069f5:	add    BYTE PTR [eax],al
  4069f7:	add    BYTE PTR [eax],dl
  4069f9:	add    BYTE PTR [eax],al
  4069fb:	add    BYTE PTR [eax+eax*1],al
  4069fe:	add    BYTE PTR [eax],al
  406a00:	or     BYTE PTR [eax],al
  406a02:	add    BYTE PTR [eax],al
  406a04:	or     al,BYTE PTR [eax]
  406a06:	add    BYTE PTR [eax],al
  406a08:	adc    BYTE PTR [eax],al
  406a0a:	add    BYTE PTR [eax],al
  406a0c:	add    al,0x0
  406a0e:	add    BYTE PTR [eax],al
  406a10:	or     BYTE PTR [eax],al
  406a12:	add    BYTE PTR [eax],al
  406a14:	or     al,BYTE PTR [eax]
  406a16:	add    BYTE PTR [eax],al
  406a18:	or     BYTE PTR [eax],al
  406a1a:	add    BYTE PTR [eax],al
  406a1c:	adc    BYTE PTR [eax],al
  406a1e:	add    BYTE PTR [eax],al
  406a20:	and    BYTE PTR [eax],al
  406a22:	add    BYTE PTR [eax],al
  406a24:	dec    ebp
  406a25:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  406a2c:	je     0x406a4e
  406a2e:	sub    BYTE PTR [edx+0x29],dl
  406a31:	and    BYTE PTR [ebp+0x61],cl
  406a34:	arpl   WORD PTR [edx+0x6f],si
  406a37:	and    BYTE PTR [ecx+0x73],al
  406a3a:	jae    0x406aa1
  406a3c:	ins    DWORD PTR es:[edi],dx
  406a3d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x72]
  406a41:	and    BYTE PTR [eax],ch
  406a43:	js     0x406a7b
  406a45:	xor    al,0x29
  406a47:	and    BYTE PTR [esi+0x65],dl
  406a4a:	jb     0x406abf
  406a4c:	imul   ebp,DWORD PTR [edi+0x6e],0x2e313120
  406a53:	xor    BYTE PTR [eax],dh
  406a55:	cs xor eax,0x37323730
  406a5b:	xor    DWORD PTR cs:[eax],eax
  406a5e:	add    BYTE PTR [eax],al
  406a60:	add    BYTE PTR [ecx],al
  406a62:	add    al,0x4
  406a64:	push   es
  406a65:	push   es
  406a66:	push   es
  406a67:	push   es
  406a68:	add    eax,0x7000803
  406a6d:	or     BYTE PTR [eax],al
  406a6f:	add    BYTE PTR [ecx*1+0x3000000],cl
  406a76:	add    BYTE PTR [eax+eax*1],al
  406a79:	add    BYTE PTR [eax],al
  406a7b:	add    BYTE PTR [eax+0x406a],al
  406a81:	add    BYTE PTR [eax],al
  406a83:	add    BYTE PTR [eax],al
  406a85:	and    al,0x36
  406a87:	add    bh,cl
  406a89:	fiadd  DWORD PTR [eax+eax*1-0x39]
  406a8d:	fiadd  DWORD PTR [eax+eax*1+0x0]
	...
  406aad:	add    BYTE PTR [eax],al
  406aaf:	add    BYTE PTR [eax],dh
  406ab1:	fadd   DWORD PTR [eax+eax*1+0x0]
	...
  406af1:	add    BYTE PTR [eax],al
  406af3:	add    BYTE PTR ds:0xd80044d8,dl
  406af9:	xor    al,0x41
  406afb:	add    BYTE PTR [eax+0x32],dl
  406afe:	inc    ecx
  406aff:	add    BYTE PTR [eax-0xfffbed0],cl
  406b05:	and    DWORD PTR [ecx+0x0],eax
  406b08:	js     0x406b2a
  406b0a:	inc    ecx
  406b0b:	add    BYTE PTR [eax-0x57ffbee3],dh
  406b11:	adc    eax,0x15600041
  406b16:	inc    ecx
  406b17:	add    BYTE PTR [eax],ch
  406b19:	adc    al,0x41
  406b1b:	add    BYTE PTR [eax],bh
  406b1d:	adc    al,BYTE PTR [ecx+0x0]
  406b20:	pop    eax
  406b21:	adc    DWORD PTR [ecx+0x0],eax
  406b24:	add    BYTE PTR [eax],al
  406b26:	add    BYTE PTR [eax],al
  406b28:	call   0x5840ac3a
  406b2d:	push   es
  406b2e:	inc    ecx
  406b2f:	add    BYTE PTR [eax],cl
  406b31:	push   es
  406b32:	inc    ecx
  406b33:	add    al,dh
  406b35:	add    al,0x41
  406b37:	add    al,ch
  406b39:	in     al,dx
  406b3a:	inc    eax
  406b3b:	add    BYTE PTR [ebp+0x300044b3],dl
  406b41:	jmp    0xe3986b86
  406b46:	inc    eax
  406b47:	add    BYTE PTR [eax],dh
  406b49:	loop   0x406b8b
  406b4b:	add    BYTE PTR [eax-0x27ffbf20],cl
  406b51:	outs   dx,BYTE PTR ds:[esi]
  406b52:	inc    eax
  406b53:	add    BYTE PTR [eax+0x6e],ah
  406b56:	inc    eax
  406b57:	add    BYTE PTR [eax],ah
  406b59:	ins    BYTE PTR es:[edi],dx
  406b5a:	inc    eax
  406b5b:	add    BYTE PTR [eax+0x6b],ah
  406b5e:	inc    eax
  406b5f:	add    BYTE PTR [eax],al
  406b61:	add    BYTE PTR [eax],al
  406b63:	add    BYTE PTR [eax],al
  406b65:	dec    ebp
  406b66:	add    DWORD PTR [eax],eax
  406b68:	ins    BYTE PTR es:[edi],dx
  406b69:	imul   eax,DWORD PTR [eax+0x0],0x0
  406b6d:	add    BYTE PTR [eax],al
  406b6f:	add    BYTE PTR [eax],al
  406b71:	dec    ebp
  406b72:	add    DWORD PTR [eax],eax
  406b74:	js     0x406be1
  406b76:	inc    eax
  406b77:	add    BYTE PTR [eax],al
  406b79:	add    BYTE PTR [eax],al
  406b7b:	add    BYTE PTR [eax],al
  406b7d:	xor    BYTE PTR [eax],ch
  406b7f:	add    BYTE PTR [ecx],bh
  406b81:	call   0x44:0x99f40044
  406b88:	out    dx,eax
  406b89:	cdq    
  406b8a:	inc    esp
  406b8b:	add    cl,ch
  406b8d:	cdq    
  406b8e:	inc    esp
  406b8f:	add    bl,ah
  406b91:	cdq    
  406b92:	inc    esp
  406b93:	add    ch,bl
  406b95:	cdq    
  406b96:	inc    esp
  406b97:	add    bh,dl
  406b99:	cdq    
  406b9a:	inc    esp
  406b9b:	add    cl,dl
  406b9d:	cdq    
  406b9e:	inc    esp
  406b9f:	add    BYTE PTR [ebx-0x54ffbb70],cl
  406ba5:	mov    DWORD PTR [eax+eax*1+0x0],eax
	...
  406c19:	add    BYTE PTR [eax],al
  406c1b:	add    cl,cl
  406c1d:	cdq    
  406c1e:	inc    esp
  406c1f:	add    BYTE PTR [eax],al
  406c21:	add    BYTE PTR [eax],al
  406c23:	add    BYTE PTR [eax],al
  406c25:	inc    ecx
  406c26:	adc    al,0x0
  406c28:	dec    esp
  406c29:	outs   dx,BYTE PTR ds:[esi]
  406c2a:	inc    eax
  406c2b:	add    BYTE PTR [ebp-0x4affbb65],bh
  406c31:	fwait
  406c32:	inc    esp
  406c33:	add    BYTE PTR [eax],al
  406c35:	add    BYTE PTR [eax],al
  406c37:	add    BYTE PTR [ebp+0x449b],ch
  406c3d:	add    BYTE PTR [eax],al
  406c3f:	add    BYTE PTR [ebx+0x449b],ah
	...
  406c51:	add    BYTE PTR [eax],al
  406c53:	add    BYTE PTR [ebp+ebp*2+0x6d800040],cl
  406c5a:	inc    eax
  406c5b:	add    BYTE PTR [eax],al
  406c5d:	add    BYTE PTR [eax],al
  406c5f:	add    BYTE PTR [ebp*2+0x40],ch
  406c66:	add    BYTE PTR [eax],al
  406c68:	add    BYTE PTR [eax],al
  406c6a:	add    BYTE PTR [eax],al
  406c6c:	shr    BYTE PTR [eax+eax*2+0x0],1
  406c70:	js     0x406cde
  406c72:	inc    eax
  406c73:	add    BYTE PTR [edi],bh
  406c75:	call   0x0:0x44
  406c7c:	add    BYTE PTR [ecx+0x5],al
  406c7f:	add    BYTE PTR [esp+ebp*2+0x40],dl
	...
  406c8e:	add    BYTE PTR [eax],al
  406c90:	inc    edi
  406c91:	call   0x0:0x44
  406c98:	add    BYTE PTR [esi+0x1],dl
  406c9b:	add    BYTE PTR [eax+0x406c],ah
  406ca1:	add    BYTE PTR [eax],al
  406ca3:	add    BYTE PTR [eax],al
  406ca5:	inc    ebp
  406ca6:	add    DWORD PTR [eax],eax
  406ca8:	push   eax
  406ca9:	call   0x0:0x44
  406cb0:	add    BYTE PTR [eax+0x1],dl
  406cb3:	add    BYTE PTR [eax+0x406c],bh
  406cb9:	add    BYTE PTR [eax],al
  406cbb:	add    BYTE PTR [eax],al
  406cbd:	push   esp
  406cbe:	add    DWORD PTR [eax],eax
  406cc0:	rcr    BYTE PTR [edx+0x44],0x0
  406cc7:	add    BYTE PTR [eax],al
  406cc9:	push   esp
  406cca:	add    DWORD PTR [eax],eax
  406ccc:	adc    al,0x6d
  406cce:	inc    eax
  406ccf:	add    BYTE PTR [eax],al
  406cd1:	add    BYTE PTR [eax],al
  406cd3:	add    BYTE PTR [eax],al
  406cd5:	inc    ebp
  406cd6:	verw   bx
  406cd9:	call   0x0:0x44
	...
  406d10:	les    ebp,FWORD PTR [eax+eax*2+0x0]
  406d14:	add    BYTE PTR [eax],al
  406d16:	add    BYTE PTR [eax],al
  406d18:	add    BYTE PTR [edi+0x1],cl
  406d1b:	add    BYTE PTR [eax],ah
  406d1d:	ins    DWORD PTR es:[edi],dx
  406d1e:	inc    eax
  406d1f:	add    BYTE PTR [eax],al
  406d21:	add    BYTE PTR [eax],al
  406d23:	add    BYTE PTR [eax],al
  406d25:	push   edx
  406d26:	add    DWORD PTR [eax],eax
  406d28:	fcomp  DWORD PTR [edx+0x44]
  406d2e:	add    BYTE PTR [eax],al
  406d30:	add    BYTE PTR [edx+0x1],dl
  406d33:	add    ah,dh
  406d35:	call   0x0:0x44
  406d3c:	add    BYTE PTR [eax+edx*1+0x0],al
  406d40:	pop    es
  406d41:	fwait
  406d42:	inc    esp
	...
  406d7b:	add    BYTE PTR [ecx],al
  406d7d:	fwait
  406d7e:	inc    esp
  406d7f:	add    BYTE PTR [eax],al
  406d81:	add    BYTE PTR [eax],al
  406d83:	add    BYTE PTR [eax],al
  406d85:	dec    ebp
  406d86:	add    DWORD PTR [eax],eax
  406d88:	cwde   
  406d89:	ins    DWORD PTR es:[edi],dx
  406d8a:	inc    eax
  406d8b:	add    BYTE PTR [eax],al
  406d8d:	add    BYTE PTR [eax],al
  406d8f:	add    BYTE PTR [eax],al
  406d91:	inc    ecx
  406d92:	add    DWORD PTR [eax],eax
  406d94:	inc    eax
  406d95:	outs   dx,BYTE PTR ds:[esi]
  406d96:	inc    eax
  406d97:	add    BYTE PTR [eax],al
  406d99:	add    BYTE PTR [eax],al
  406d9b:	add    BYTE PTR [eax],al
  406d9d:	xor    BYTE PTR [eax],ch
  406d9f:	add    BYTE PTR [ecx+0x4400449b],cl
  406da5:	fwait
  406da6:	inc    esp
  406da7:	add    BYTE PTR [edi],bh
  406da9:	fwait
  406daa:	inc    esp
  406dab:	add    BYTE PTR [ecx],bh
  406dad:	fwait
  406dae:	inc    esp
  406daf:	add    BYTE PTR [ebx],dh
  406db1:	fwait
  406db2:	inc    esp
  406db3:	add    BYTE PTR ds:0x2700449b,ch
  406db9:	fwait
  406dba:	inc    esp
  406dbb:	add    BYTE PTR [ecx],ah
  406dbd:	fwait
  406dbe:	inc    esp
  406dbf:	add    BYTE PTR [ebx],bl
  406dc1:	fwait
  406dc2:	inc    esp
  406dc3:	add    BYTE PTR ds:0x449b,dl
	...
  406e39:	add    BYTE PTR [eax],al
  406e3b:	add    BYTE PTR ds:0x449b,cl
  406e41:	add    BYTE PTR [eax],al
  406e43:	add    BYTE PTR [eax],al
  406e45:	push   esp
  406e46:	add    DWORD PTR [eax],eax
  406e48:	nop
  406e49:	fwait
  406e4a:	inc    esp
  406e4b:	add    BYTE PTR [eax],al
  406e4d:	add    BYTE PTR [eax],al
  406e4f:	add    BYTE PTR [eax],al
  406e51:	inc    edx
  406e52:	add    eax,DWORD PTR [eax]
  406e54:	xlat   BYTE PTR ds:[ebx]
  406e55:	fwait
  406e56:	inc    esp
  406e57:	add    ch,cl
  406e59:	fwait
  406e5a:	inc    esp
  406e5b:	add    bh,al
  406e5d:	fwait
  406e5e:	inc    esp
  406e5f:	add    BYTE PTR [eax],al
  406e61:	add    BYTE PTR [eax],al
  406e63:	add    BYTE PTR [eax],al
  406e65:	inc    ecx
  406e66:	adc    al,BYTE PTR [eax]
  406e68:	sbb    eax,0x1300449c
  406e6d:	pushf  
  406e6e:	inc    esp
	...
  406e83:	add    BYTE PTR [ebx],cl
  406e85:	pushf  
  406e86:	inc    esp
  406e87:	add    BYTE PTR [ebx],al
  406e89:	pushf  
  406e8a:	inc    esp
	...
  406e9f:	add    bl,bh
  406ea1:	fwait
  406ea2:	inc    esp
	...
  406eab:	add    BYTE PTR [eax+0x406e],dh
  406eb1:	add    BYTE PTR [eax],al
  406eb3:	add    BYTE PTR [eax],al
  406eb5:	inc    esi
  406eb6:	or     BYTE PTR [eax],al
  406eb8:	icebp  
  406eb9:	fwait
  406eba:	inc    esp
  406ebb:	add    bh,ah
  406ebd:	fwait
  406ebe:	inc    esp
	...
  406ed3:	add    bh,bl
  406ed5:	fwait
  406ed6:	inc    esp
  406ed7:	add    BYTE PTR [eax],al
  406ed9:	add    BYTE PTR [eax],al
  406edb:	add    BYTE PTR [eax],al
  406edd:	inc    ecx
  406ede:	sbb    al,BYTE PTR [eax]
  406ee0:	or     dh,bl
  406ee2:	inc    eax
  406ee3:	add    BYTE PTR [eax],bl
  406ee5:	fadd   QWORD PTR [eax+0x0]
  406ee8:	call   0xac40afa8
  406eed:	mov    edx,0xb9f80040
  406ef2:	inc    eax
  406ef3:	add    BYTE PTR [eax],bh
  406ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ef6:	inc    eax
  406ef7:	add    ah,cl
  406ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406efa:	inc    eax
  406efb:	add    al,ch
  406efd:	mov    ds:0xa3780040,eax
  406f02:	inc    eax
	...
  406f0b:	add    ah,dh
  406f0d:	mov    ds:0x9ad00040,al
  406f12:	inc    eax
  406f13:	add    BYTE PTR [eax],al
  406f15:	add    BYTE PTR [eax],al
  406f17:	add    BYTE PTR [edx+ebx*4],al
  406f1a:	inc    eax
  406f1b:	add    al,ch
  406f1d:	jne    0x406f5f
  406f1f:	add    BYTE PTR [eax],al
  406f21:	add    BYTE PTR [eax],al
  406f23:	add    BYTE PTR [eax+0x74],dh
  406f26:	inc    eax
  406f27:	add    BYTE PTR [eax+0x72],dl
  406f2a:	inc    eax
  406f2b:	add    BYTE PTR [ecx+esi*2+0x70400040],al
  406f32:	inc    eax
	...
  406f3b:	add    BYTE PTR [edi+ebp*2+0x40],ch
  406f3f:	add    BYTE PTR [eax],al
  406f41:	add    BYTE PTR [eax],al
  406f43:	add    BYTE PTR [eax+0x6f],cl
  406f46:	inc    eax
  406f47:	add    BYTE PTR [eax],al
  406f49:	add    BYTE PTR [eax],al
  406f4b:	add    BYTE PTR [eax],al
  406f4d:	inc    ebp
  406f4e:	add    DWORD PTR [eax],eax
  406f50:	push   esp
  406f51:	outs   dx,DWORD PTR ds:[esi]
  406f52:	inc    eax
  406f53:	add    BYTE PTR [eax],al
  406f55:	add    BYTE PTR [eax],al
  406f57:	add    BYTE PTR [eax],al
  406f59:	push   edx
  406f5a:	add    DWORD PTR [eax],eax
  406f5c:	pusha  
  406f5d:	outs   dx,DWORD PTR ds:[esi]
  406f5e:	inc    eax
  406f5f:	add    BYTE PTR [eax],al
  406f61:	add    BYTE PTR [eax],al
  406f63:	add    BYTE PTR [eax],al
  406f65:	dec    edi
  406f66:	add    DWORD PTR [eax],eax
  406f68:	js     0x406fd9
  406f6a:	inc    eax
  406f6b:	add    BYTE PTR [eax],al
  406f6d:	add    BYTE PTR [eax],al
  406f6f:	add    BYTE PTR [eax],al
  406f71:	dec    edi
  406f72:	add    DWORD PTR [eax],eax
  406f74:	aam    0x6f
  406f76:	inc    eax
  406f77:	add    BYTE PTR [eax],al
  406f79:	add    BYTE PTR [eax],al
  406f7b:	add    BYTE PTR [eax],al
  406f7d:	inc    ecx
  406f7e:	adc    eax,0x449c2f00
	...
  406fcf:	add    BYTE PTR ds:0x449c,ah
  406fd5:	add    BYTE PTR [eax],al
  406fd7:	add    BYTE PTR [eax],al
  406fd9:	push   edx
  406fda:	add    DWORD PTR [eax],eax
  406fdc:	loopne 0x40704d
  406fde:	inc    eax
  406fdf:	add    BYTE PTR [eax],al
  406fe1:	add    BYTE PTR [eax],al
  406fe3:	add    BYTE PTR [eax],al
  406fe5:	push   eax
  406fe6:	add    DWORD PTR [eax],eax
  406fe8:	clc    
  406fe9:	outs   dx,DWORD PTR ds:[esi]
  406fea:	inc    eax
  406feb:	add    BYTE PTR [eax],al
  406fed:	add    BYTE PTR [eax],al
  406fef:	add    BYTE PTR [eax],al
  406ff1:	push   eax
  406ff2:	add    DWORD PTR [eax],eax
  406ff4:	js     0x407066
  406ff6:	inc    eax
  406ff7:	add    BYTE PTR [eax],al
  406ff9:	add    BYTE PTR [eax],al
  406ffb:	add    BYTE PTR [eax],al
  406ffd:	inc    esp
  406ffe:	adc    BYTE PTR [eax],al
  407000:	cmp    eax,0x449c
	...
  407039:	add    BYTE PTR [eax],al
  40703b:	add    BYTE PTR [edi],dh
  40703d:	pushf  
  40703e:	inc    esp
  40703f:	add    BYTE PTR [eax],al
  407041:	add    BYTE PTR [eax],al
  407043:	add    BYTE PTR [eax],al
  407045:	inc    ebx
  407046:	or     al,0x0
  407048:	or     al,0x71
  40704a:	inc    eax
	...
  407073:	add    ah,ch
  407075:	outs   dx,DWORD PTR ds:[esi]
  407076:	inc    eax
  407077:	add    BYTE PTR [eax],al
  407079:	add    BYTE PTR [eax],al
  40707b:	add    BYTE PTR [eax],al
  40707d:	inc    ebx
  40707e:	add    DWORD PTR [eax],eax
  407080:	test   BYTE PTR [eax+0x40],dh
  407083:	add    BYTE PTR [eax],al
  407085:	add    BYTE PTR [eax],al
  407087:	add    BYTE PTR [eax],al
  407089:	dec    ebx
  40708a:	add    DWORD PTR [eax],eax
  40708c:	nop
  40708d:	jo     0x4070cf
  40708f:	add    BYTE PTR [eax],al
  407091:	add    BYTE PTR [eax],al
  407093:	add    BYTE PTR [eax],al
  407095:	dec    eax
  407096:	add    eax,0x40710000
	...
  4070a7:	add    BYTE PTR [eax+esi*2+0x40],ch
  4070ae:	add    BYTE PTR [eax],al
  4070b0:	add    BYTE PTR [eax+0x1],dl
  4070b3:	add    BYTE PTR [eax+0x4070],bh
  4070b9:	add    BYTE PTR [eax],al
  4070bb:	add    BYTE PTR [eax],al
  4070bd:	inc    esp
  4070be:	adc    BYTE PTR [eax],al
  4070c0:	dec    ecx
  4070c1:	pushf  
  4070c2:	inc    esp
	...
  4070fb:	add    BYTE PTR [ebx-0x64],al
  4070fe:	inc    esp
  4070ff:	add    BYTE PTR [eax],al
  407101:	add    BYTE PTR [eax],al
  407103:	add    BYTE PTR [eax],al
  407105:	push   eax
  407106:	add    DWORD PTR [eax],eax
  407108:	sbb    BYTE PTR [ecx+0x40],dh
  40710b:	add    BYTE PTR [eax],al
  40710d:	add    BYTE PTR [eax],al
  40710f:	add    BYTE PTR [eax],al
  407111:	dec    edi
  407112:	add    DWORD PTR [eax],eax
  407114:	pusha  
  407115:	jno    0x407157
  407117:	add    BYTE PTR [eax],al
  407119:	add    BYTE PTR [eax],al
  40711b:	add    BYTE PTR [eax],al
  40711d:	inc    esp
  40711e:	adc    BYTE PTR [eax],al
  407120:	push   ebp
  407121:	pushf  
  407122:	inc    esp
	...
  40715b:	add    BYTE PTR [edi-0x64],cl
  40715e:	inc    esp
  40715f:	add    BYTE PTR [eax],al
  407161:	add    BYTE PTR [eax],al
  407163:	add    BYTE PTR [eax],al
  407165:	dec    ebp
  407166:	add    DWORD PTR [eax],eax
  407168:	ins    BYTE PTR es:[edi],dx
  407169:	jno    0x4071ab
  40716b:	add    BYTE PTR [eax],al
  40716d:	add    BYTE PTR [eax],al
  40716f:	add    BYTE PTR [eax],al
  407171:	dec    ecx
  407172:	add    DWORD PTR [eax],eax
  407174:	js     0x4071e7
  407176:	inc    eax
  407177:	add    BYTE PTR [eax],al
  407179:	add    BYTE PTR [eax],al
  40717b:	add    BYTE PTR [eax],al
  40717d:	push   ebx
  40717e:	add    DWORD PTR [eax],eax
  407180:	nop
  407181:	jno    0x4071c3
  407183:	add    BYTE PTR [eax],al
  407185:	add    BYTE PTR [eax],al
  407187:	add    BYTE PTR [eax],al
  407189:	inc    ebp
  40718a:	add    DWORD PTR [eax],eax
  40718c:	fdiv   DWORD PTR [ecx+0x40]
  40718f:	add    BYTE PTR [eax],al
  407191:	add    BYTE PTR [eax],al
  407193:	add    BYTE PTR [eax],al
  407195:	inc    esp
  407196:	adc    BYTE PTR [eax],al
  407198:	popa   
  407199:	pushf  
  40719a:	inc    esp
	...
  4071d3:	add    BYTE PTR [ebx-0x64],bl
  4071d6:	inc    esp
  4071d7:	add    BYTE PTR [eax],al
  4071d9:	add    BYTE PTR [eax],al
  4071db:	add    BYTE PTR [eax],al
  4071dd:	push   ebx
  4071de:	add    DWORD PTR [eax],eax
  4071e0:	in     al,0x71
  4071e2:	inc    eax
  4071e3:	add    BYTE PTR [eax],al
  4071e5:	add    BYTE PTR [eax],al
  4071e7:	add    BYTE PTR [eax],al
  4071e9:	push   esp
  4071ea:	add    DWORD PTR [eax],eax
  4071ec:	lock jno 0x40722f
  4071ef:	add    BYTE PTR [eax],al
  4071f1:	add    BYTE PTR [eax],al
  4071f3:	add    BYTE PTR [eax],al
  4071f5:	push   eax
  4071f6:	add    DWORD PTR [eax],eax
  4071f8:	or     BYTE PTR [edx+0x40],dh
  4071fb:	add    BYTE PTR [eax],al
  4071fd:	add    BYTE PTR [eax],al
  4071ff:	add    BYTE PTR [eax],al
  407201:	inc    edx
  407202:	add    DWORD PTR [eax],eax
  407204:	nop
  407205:	jb     0x407247
  407207:	add    BYTE PTR [eax],al
  407209:	add    BYTE PTR [eax],al
  40720b:	add    BYTE PTR [eax],al
  40720d:	inc    esp
  40720e:	adc    BYTE PTR [eax],al
  407210:	ins    DWORD PTR es:[edi],dx
  407211:	pushf  
  407212:	inc    esp
	...
  40724b:	add    BYTE PTR [edi-0x64],ah
  40724e:	inc    esp
  40724f:	add    BYTE PTR [eax],al
  407251:	add    BYTE PTR [eax],al
  407253:	add    BYTE PTR [eax],al
  407255:	dec    eax
  407256:	push   cs
  407257:	add    al,bh
  407259:	jae    0x40729b
	...
  40727b:	add    BYTE PTR [eax],bh
  40727d:	jae    0x4072bf
	...
  407287:	add    BYTE PTR [ebx-0x3ffbb64],cl
  40728d:	jno    0x4072cf
  40728f:	add    BYTE PTR [eax],al
  407291:	add    BYTE PTR [eax],al
  407293:	add    BYTE PTR [eax],al
  407295:	push   eax
  407296:	add    al,0x0
  407298:	lock jb 0x4072db
	...
  4072a3:	add    BYTE PTR [eax+0x4072],ch
  4072a9:	add    BYTE PTR [eax],al
  4072ab:	add    BYTE PTR [eax],al
  4072ad:	inc    esp
  4072ae:	adc    BYTE PTR [eax],al
  4072b0:	jns    0x40724e
  4072b2:	inc    esp
	...
  4072eb:	add    BYTE PTR [ebx-0x64],dh
  4072ee:	inc    esp
  4072ef:	add    BYTE PTR [eax],al
  4072f1:	add    BYTE PTR [eax],al
  4072f3:	add    BYTE PTR [eax],al
  4072f5:	inc    esp
  4072f6:	adc    BYTE PTR [eax],al
  4072f8:	test   DWORD PTR [esp+eax*2+0x0],ebx
	...
  407333:	add    BYTE PTR [edi-0x64],bh
  407336:	inc    esp
  407337:	add    BYTE PTR [eax],al
  407339:	add    BYTE PTR [eax],al
  40733b:	add    BYTE PTR [eax],al
  40733d:	push   edx
  40733e:	add    DWORD PTR [eax],eax
  407340:	inc    esp
  407341:	jae    0x407383
  407343:	add    BYTE PTR [eax],al
  407345:	add    BYTE PTR [eax],al
  407347:	add    BYTE PTR [eax],al
  407349:	push   esp
  40734a:	add    DWORD PTR [eax],eax
  40734c:	push   eax
  40734d:	jae    0x40738f
  40734f:	add    BYTE PTR [eax],al
  407351:	add    BYTE PTR [eax],al
  407353:	add    BYTE PTR [eax],al
  407355:	push   eax
  407356:	add    al,0x0
  407358:	mov    al,0x73
  40735a:	inc    eax
	...
  407363:	add    BYTE PTR [eax+0x73],ch
  407366:	inc    eax
  407367:	add    BYTE PTR [eax],al
  407369:	add    BYTE PTR [eax],al
  40736b:	add    BYTE PTR [eax],al
  40736d:	inc    esp
  40736e:	adc    BYTE PTR [eax],al
  407370:	fwait
  407371:	pushf  
  407372:	inc    esp
	...
  4073ab:	add    BYTE PTR [ebp+0x449c],dl
  4073b1:	add    BYTE PTR [eax],al
  4073b3:	add    BYTE PTR [eax],al
  4073b5:	inc    esp
  4073b6:	adc    BYTE PTR [eax],al
  4073b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b9:	pushf  
  4073ba:	inc    esp
	...
  4073f3:	add    BYTE PTR [ecx+0x449c],ah
  4073f9:	add    BYTE PTR [eax],al
  4073fb:	add    BYTE PTR [eax],al
  4073fd:	push   ebp
  4073fe:	add    DWORD PTR [eax],eax
  407400:	add    al,0x74
  407402:	inc    eax
  407403:	add    BYTE PTR [eax],al
  407405:	add    BYTE PTR [eax],al
  407407:	add    BYTE PTR [eax],al
  407409:	inc    esi
  40740a:	add    DWORD PTR [eax],eax
  40740c:	adc    BYTE PTR [eax+eax*2+0x0],dh
  407410:	add    BYTE PTR [eax],al
  407412:	add    BYTE PTR [eax],al
  407414:	add    BYTE PTR [eax+0x1],dl
  407417:	add    BYTE PTR [eax],ch
  407419:	je     0x40745b
  40741b:	add    BYTE PTR [eax],al
  40741d:	add    BYTE PTR [eax],al
  40741f:	add    BYTE PTR [eax],al
  407421:	push   ecx
  407422:	add    DWORD PTR [eax],eax
  407424:	mov    esp,0x4074
  407429:	add    BYTE PTR [eax],al
  40742b:	add    BYTE PTR [eax],al
  40742d:	inc    esp
  40742e:	adc    BYTE PTR [eax],al
  407430:	mov    bl,0x9c
  407432:	inc    esp
	...
  40746b:	add    BYTE PTR [ebp+0x449c],ch
  407471:	add    BYTE PTR [eax],al
  407473:	add    BYTE PTR [eax],al
  407475:	inc    ebx
  407476:	adc    DWORD PTR [eax],eax
  407478:	mov    eax,0x4075
	...
  4074a5:	add    BYTE PTR [eax],al
  4074a7:	add    ah,ch
  4074a9:	je     0x4074eb
	...
  4074b7:	add    BYTE PTR [esp+esi*2],bl
  4074ba:	inc    eax
  4074bb:	add    BYTE PTR [eax],al
  4074bd:	add    BYTE PTR [eax],al
  4074bf:	add    BYTE PTR [eax],al
  4074c1:	push   edx
  4074c2:	add    DWORD PTR [eax],eax
  4074c4:	enter  0x4074,0x0
  4074c8:	add    BYTE PTR [eax],al
  4074ca:	add    BYTE PTR [eax],al
  4074cc:	add    BYTE PTR [ecx+eax*1+0x0],dl
  4074d0:	aam    0x74
  4074d2:	inc    eax
  4074d3:	add    BYTE PTR [eax],al
  4074d5:	add    BYTE PTR [eax],al
  4074d7:	add    BYTE PTR [eax],al
  4074d9:	push   eax
  4074da:	add    al,0x0
  4074dc:	mov    edi,0x449c
  4074e1:	add    BYTE PTR [eax],al
  4074e3:	add    BYTE PTR [eax],al
  4074e5:	add    BYTE PTR [eax],al
  4074e7:	add    BYTE PTR [ecx+0x449c],bh
  4074ed:	add    BYTE PTR [eax],al
  4074ef:	add    BYTE PTR [eax],al
  4074f1:	push   ebp
  4074f2:	add    DWORD PTR [eax],eax
  4074f4:	clc    
  4074f5:	je     0x407537
  4074f7:	add    BYTE PTR [eax],al
  4074f9:	add    BYTE PTR [eax],al
  4074fb:	add    BYTE PTR [eax],al
  4074fd:	dec    esi
  4074fe:	add    DWORD PTR [eax],eax
  407500:	add    al,0x75
  407502:	inc    eax
  407503:	add    BYTE PTR [eax],al
  407505:	add    BYTE PTR [eax],al
  407507:	add    BYTE PTR [eax],al
  407509:	inc    esp
  40750a:	add    DWORD PTR [eax],eax
  40750c:	adc    BYTE PTR [ebp+0x40],dh
  40750f:	add    BYTE PTR [eax],al
  407511:	add    BYTE PTR [eax],al
  407513:	add    BYTE PTR [eax],al
  407515:	push   eax
  407516:	add    al,0x0
  407518:	jo     0x40758f
  40751a:	inc    eax
	...
  407523:	add    BYTE PTR [eax],ch
  407525:	jne    0x407567
  407527:	add    BYTE PTR [eax],al
  407529:	add    BYTE PTR [eax],al
  40752b:	add    BYTE PTR [eax],al
  40752d:	inc    esp
  40752e:	adc    BYTE PTR [eax],al
  407530:	retf   
  407531:	pushf  
  407532:	inc    esp
	...
  40756b:	add    ch,al
  40756d:	pushf  
  40756e:	inc    esp
  40756f:	add    BYTE PTR [eax],al
  407571:	add    BYTE PTR [eax],al
  407573:	add    BYTE PTR [eax],al
  407575:	inc    esp
  407576:	adc    BYTE PTR [eax],al
  407578:	xlat   BYTE PTR ds:[ebx]
  407579:	pushf  
  40757a:	inc    esp
	...
  4075b3:	add    cl,dl
  4075b5:	pushf  
  4075b6:	inc    esp
  4075b7:	add    BYTE PTR [eax],al
  4075b9:	add    BYTE PTR [eax],al
  4075bb:	add    BYTE PTR [eax],al
  4075bd:	push   eax
  4075be:	add    DWORD PTR [eax],eax
  4075c0:	les    esi,FWORD PTR [ebp+0x40]
  4075c3:	add    BYTE PTR [eax],al
  4075c5:	add    BYTE PTR [eax],al
  4075c7:	add    BYTE PTR [eax],al
  4075c9:	push   eax
  4075ca:	add    al,0x0
  4075cc:	jecxz  0x40756a
  4075ce:	inc    esp
	...
  4075d7:	add    ch,bl
  4075d9:	pushf  
  4075da:	inc    esp
  4075db:	add    BYTE PTR [eax],al
  4075dd:	add    BYTE PTR [eax],al
  4075df:	add    BYTE PTR [eax],al
  4075e1:	dec    esi
  4075e2:	add    DWORD PTR [eax],eax
  4075e4:	push   eax
  4075e5:	jbe    0x407627
  4075e7:	add    BYTE PTR [eax],al
  4075e9:	add    BYTE PTR [eax],al
  4075eb:	add    BYTE PTR [eax],al
  4075ed:	inc    ecx
  4075ee:	sbb    BYTE PTR [eax],al
  4075f0:	adc    BYTE PTR [edi-0x6a4fffc0],dl
  4075f6:	inc    eax
  4075f7:	add    BYTE PTR [eax-0x74],dl
  4075fa:	inc    eax
  4075fb:	add    BYTE PTR [eax],al
  4075fd:	add    BYTE PTR [eax],al
  4075ff:	add    BYTE PTR [eax+0x4089],cl
  407605:	add    BYTE PTR [eax],al
  407607:	add    ah,bl
  407609:	xchg   BYTE PTR [eax+0x0],al
  40760c:	clc    
  40760d:	test   DWORD PTR [eax+0x0],eax
  407610:	je     0x407597
  407612:	inc    eax
	...
  40761f:	add    BYTE PTR [eax],cl
  407621:	jge    0x407663
  407623:	add    BYTE PTR [eax],al
  407625:	add    BYTE PTR [eax],al
  407627:	add    BYTE PTR [ebp-0x62],al
  40762a:	inc    esp
  40762b:	add    BYTE PTR ds:0x449e,bh
  407631:	add    BYTE PTR [eax],al
  407633:	add    ah,al
  407635:	jnp    0x407677
  407637:	add    BYTE PTR [eax+0x77],dl
  40763a:	inc    eax
  40763b:	add    BYTE PTR ds:0xdc00449d,ah
  407641:	jne    0x407683
	...
  40764b:	add    cl,ch
  40764d:	pushf  
  40764e:	inc    esp
  40764f:	add    BYTE PTR [eax],al
  407651:	add    BYTE PTR [eax],al
  407653:	add    BYTE PTR [eax],al
  407655:	push   eax
  407656:	add    DWORD PTR [eax],eax
  407658:	pop    esp
  407659:	jbe    0x40769b
  40765b:	add    BYTE PTR [eax],al
  40765d:	add    BYTE PTR [eax],al
  40765f:	add    BYTE PTR [eax],al
  407661:	inc    ebx
  407662:	add    DWORD PTR [eax],eax
  407664:	push   0x4076
  407669:	add    BYTE PTR [eax],al
  40766b:	add    BYTE PTR [eax],al
  40766d:	dec    ebx
  40766e:	add    DWORD PTR [eax],eax
  407670:	je     0x4076e8
  407672:	inc    eax
  407673:	add    BYTE PTR [eax],al
  407675:	add    BYTE PTR [eax],al
  407677:	add    BYTE PTR [eax],al
  407679:	dec    eax
  40767a:	add    eax,0x4076f000
	...
  40768b:	add    BYTE PTR [eax+0x4076],dl
  407691:	add    BYTE PTR [eax],al
  407693:	add    BYTE PTR [eax],al
  407695:	inc    edx
  407696:	push   ss
  407697:	add    BYTE PTR ds:0x449d,al
  40769d:	add    BYTE PTR [eax],al
  40769f:	add    bh,bh
  4076a1:	pushf  
  4076a2:	inc    esp
	...
  4076d3:	add    bh,dh
  4076d5:	pushf  
  4076d6:	inc    esp
	...
  4076eb:	add    cl,dh
  4076ed:	pushf  
  4076ee:	inc    esp
  4076ef:	add    BYTE PTR [eax],al
  4076f1:	add    BYTE PTR [eax],al
  4076f3:	add    BYTE PTR [eax],al
  4076f5:	inc    edx
  4076f6:	push   ss
  4076f7:	add    BYTE PTR [edi],bl
  4076f9:	popf   
  4076fa:	inc    esp
  4076fb:	add    BYTE PTR [eax],al
  4076fd:	add    BYTE PTR [eax],al
  4076ff:	add    BYTE PTR [ecx],bl
  407701:	popf   
  407702:	inc    esp
	...
  407733:	add    BYTE PTR [ecx],dl
  407735:	popf   
  407736:	inc    esp
	...
  40774b:	add    BYTE PTR [ebx],cl
  40774d:	popf   
  40774e:	inc    esp
  40774f:	add    BYTE PTR [eax],al
  407751:	add    BYTE PTR [eax],al
  407753:	add    BYTE PTR [eax],al
  407755:	inc    ecx
  407756:	adc    eax,0x449e1d00
	...
  407773:	add    BYTE PTR [eax],ch
  407775:	jnp    0x4077b7
  407777:	add    BYTE PTR [eax+0x407a],dh
  40777d:	add    BYTE PTR [eax],al
  40777f:	add    BYTE PTR [eax],al
  407781:	add    BYTE PTR [eax],al
  407783:	add    BYTE PTR [eax+edi*2],ah
  407786:	inc    eax
	...
  40779b:	add    al,dh
  40779d:	js     0x4077df
	...
  4077a7:	add    BYTE PTR [edi+esi*2+0x40],ch
  4077ae:	add    BYTE PTR [eax],al
  4077b0:	add    BYTE PTR [edx+0x1],al
  4077b3:	add    BYTE PTR [eax+0x4077],bh
  4077b9:	add    BYTE PTR [eax],al
  4077bb:	add    BYTE PTR [eax],al
  4077bd:	inc    edx
  4077be:	push   ss
  4077bf:	add    BYTE PTR [edi-0x63],dl
  4077c2:	inc    esp
  4077c3:	add    BYTE PTR [eax],al
  4077c5:	add    BYTE PTR [eax],al
  4077c7:	add    BYTE PTR [ecx-0x63],dl
  4077ca:	inc    esp
	...
  4077fb:	add    BYTE PTR [ebx-0x63],cl
  4077fe:	inc    esp
  4077ff:	add    BYTE PTR [eax],al
  407801:	add    BYTE PTR [eax],al
  407803:	add    BYTE PTR [eax+0x4078],dl
  407809:	add    BYTE PTR [eax],al
  40780b:	add    BYTE PTR [eax],bl
  40780d:	js     0x40784f
  40780f:	add    BYTE PTR [eax],al
  407811:	add    BYTE PTR [eax],al
  407813:	add    BYTE PTR ds:0x449d,ch
  407819:	add    BYTE PTR [eax],al
  40781b:	add    BYTE PTR [eax],al
  40781d:	push   ebx
  40781e:	add    DWORD PTR [eax],eax
  407820:	xor    BYTE PTR [eax+0x40],bh
  407823:	add    BYTE PTR [eax],al
  407825:	add    BYTE PTR [eax],al
  407827:	add    BYTE PTR [eax],al
  407829:	dec    esp
  40782a:	add    DWORD PTR [eax],eax
  40782c:	sbb    BYTE PTR [edx+0x40],bh
  40782f:	add    BYTE PTR [eax],al
  407831:	add    BYTE PTR [eax],al
  407833:	add    BYTE PTR [eax],al
  407835:	inc    edx
  407836:	push   ss
  407837:	add    BYTE PTR [ecx],bh
  407839:	popf   
  40783a:	inc    esp
	...
  40788b:	add    BYTE PTR [ebx],dh
  40788d:	popf   
  40788e:	inc    esp
  40788f:	add    BYTE PTR [eax],al
  407891:	add    BYTE PTR [eax],al
  407893:	add    BYTE PTR [eax],al
  407895:	inc    edx
  407896:	push   ss
  407897:	add    BYTE PTR [ebp-0x63],al
  40789a:	inc    esp
	...
  4078eb:	add    BYTE PTR [edi],bh
  4078ed:	popf   
  4078ee:	inc    esp
  4078ef:	add    BYTE PTR [eax],al
  4078f1:	add    BYTE PTR [eax],al
  4078f3:	add    BYTE PTR [eax],al
  4078f5:	inc    ecx
  4078f6:	or     al,0x0
  4078f8:	sar    BYTE PTR [ecx+0x40],0x0
	...
  407924:	sub    BYTE PTR [ecx+0x40],bh
  407927:	add    BYTE PTR [eax],al
  407929:	add    BYTE PTR [eax],al
  40792b:	add    BYTE PTR [eax],al
  40792d:	inc    esp
  40792e:	adc    al,0x0
  407930:	je     0x4078cf
  407932:	inc    esp
	...
  407963:	add    BYTE PTR [edi-0x63],ch
  407966:	inc    esp
	...
  407977:	add    BYTE PTR [eax+0x5d004079],al
  40797d:	popf   
  40797e:	inc    esp
  40797f:	add    BYTE PTR [eax],al
  407981:	add    BYTE PTR [eax],al
  407983:	add    BYTE PTR [eax],al
  407985:	inc    esp
  407986:	push   cs
  407987:	add    BYTE PTR [ecx-0x63],ch
  40798a:	inc    esp
	...
  4079bb:	add    BYTE PTR [ebx-0x63],ah
  4079be:	inc    esp
  4079bf:	add    BYTE PTR [eax],al
  4079c1:	add    BYTE PTR [eax],al
  4079c3:	add    BYTE PTR [eax],al
  4079c5:	inc    esp
  4079c6:	adc    al,0x0
  4079c8:	xchg   ebx,eax
  4079c9:	popf   
  4079ca:	inc    esp
	...
  407a0f:	add    BYTE PTR [ebp-0x78ffbb63],cl
  407a15:	popf   
  407a16:	inc    esp
  407a17:	add    BYTE PTR [eax],al
  407a19:	add    BYTE PTR [eax],al
  407a1b:	add    BYTE PTR [eax],al
  407a1d:	inc    esp
  407a1e:	adc    al,0x0
  407a20:	mov    al,0x9d
  407a22:	inc    esp
	...
  407a53:	add    BYTE PTR [ebx+0x449d],ch
	...
  407a65:	add    BYTE PTR [eax],al
  407a67:	add    BYTE PTR [eax+0x7a],dh
  407a6a:	inc    eax
  407a6b:	add    BYTE PTR [ecx+0x449d],bl
  407a71:	add    BYTE PTR [eax],al
  407a73:	add    BYTE PTR [eax],al
  407a75:	inc    esp
  407a76:	push   cs
  407a77:	add    BYTE PTR [ebp+0x449d],ah
	...
  407aa9:	add    BYTE PTR [eax],al
  407aab:	add    BYTE PTR [edi+0x449d],bl
  407ab1:	add    BYTE PTR [eax],al
  407ab3:	add    BYTE PTR [eax],al
  407ab5:	inc    edi
  407ab6:	add    DWORD PTR [eax],eax
  407ab8:	mov    esp,0x407a
  407abd:	add    BYTE PTR [eax],al
  407abf:	add    BYTE PTR [eax],al
  407ac1:	dec    esi
  407ac2:	add    DWORD PTR [eax],eax
  407ac4:	enter  0x407a,0x0
  407ac8:	add    BYTE PTR [eax],al
  407aca:	add    BYTE PTR [eax],al
  407acc:	add    BYTE PTR [edx+0x16],al
  407acf:	add    bh,cl
  407ad1:	popf   
  407ad2:	inc    esp
  407ad3:	add    BYTE PTR [eax],al
  407ad5:	add    BYTE PTR [eax],al
  407ad7:	add    cl,cl
  407ad9:	popf   
  407ada:	inc    esp
	...
  407b23:	add    bl,al
  407b25:	popf   
  407b26:	inc    esp
  407b27:	add    BYTE PTR [eax],al
  407b29:	add    BYTE PTR [eax],al
  407b2b:	add    BYTE PTR [eax],al
  407b2d:	inc    ecx
  407b2e:	adc    eax,0x407c3000
	...
  407b5b:	add    al,dl
  407b5d:	jnp    0x407b9f
	...
  407b7f:	add    BYTE PTR [ebx+edi*2+0x40],al
  407b86:	add    BYTE PTR [eax],al
  407b88:	add    BYTE PTR [esi+0x1],al
  407b8b:	add    BYTE PTR [eax+0x407b],dl
  407b91:	add    BYTE PTR [eax],al
  407b93:	add    BYTE PTR [eax],al
  407b95:	inc    edx
  407b96:	or     eax,DWORD PTR [eax]
  407b98:	out    0x9d,eax
  407b9a:	inc    esp
  407b9b:	add    BYTE PTR [eax],al
  407b9d:	add    BYTE PTR [eax],al
  407b9f:	add    cl,ah
  407ba1:	popf   
  407ba2:	inc    esp
	...
  407baf:	add    bl,bl
  407bb1:	popf   
  407bb2:	inc    esp
	...
  407bbf:	add    ch,dl
  407bc1:	popf   
  407bc2:	inc    esp
  407bc3:	add    BYTE PTR [eax],al
  407bc5:	add    BYTE PTR [eax],al
  407bc7:	add    BYTE PTR [eax],al
  407bc9:	dec    edi
  407bca:	add    DWORD PTR [eax],eax
  407bcc:	nop
  407bcd:	jl     0x407c0f
  407bcf:	add    BYTE PTR [eax],al
  407bd1:	add    BYTE PTR [eax],al
  407bd3:	add    BYTE PTR [eax],al
  407bd5:	inc    edx
  407bd6:	push   ss
  407bd7:	add    bh,bh
  407bd9:	popf   
  407bda:	inc    esp
  407bdb:	add    BYTE PTR [eax],al
  407bdd:	add    BYTE PTR [eax],al
  407bdf:	add    cl,bh
  407be1:	popf   
  407be2:	inc    esp
	...
  407c13:	add    bl,dh
  407c15:	popf   
  407c16:	inc    esp
	...
  407c2b:	add    ch,ch
  407c2d:	popf   
  407c2e:	inc    esp
  407c2f:	add    BYTE PTR [eax],al
  407c31:	add    BYTE PTR [eax],al
  407c33:	add    BYTE PTR [eax],al
  407c35:	inc    edx
  407c36:	push   ss
  407c37:	add    BYTE PTR [edi],dl
  407c39:	sahf   
  407c3a:	inc    esp
  407c3b:	add    BYTE PTR [eax],al
  407c3d:	add    BYTE PTR [eax],al
  407c3f:	add    BYTE PTR [ecx],dl
  407c41:	sahf   
  407c42:	inc    esp
	...
  407c73:	add    BYTE PTR [ebx],cl
  407c75:	sahf   
  407c76:	inc    esp
	...
  407c8b:	add    BYTE PTR ds:0x449e,al
  407c91:	add    BYTE PTR [eax],al
  407c93:	add    BYTE PTR [eax],al
  407c95:	push   esp
  407c96:	add    DWORD PTR [eax],eax
  407c98:	test   al,0x7c
  407c9a:	inc    eax
  407c9b:	add    BYTE PTR [eax],al
  407c9d:	add    BYTE PTR [eax],al
  407c9f:	add    BYTE PTR [eax],al
  407ca1:	dec    esp
  407ca2:	add    DWORD PTR [eax],eax
  407ca4:	jo     0x407d23
  407ca6:	inc    eax
  407ca7:	add    BYTE PTR [eax],al
  407ca9:	add    BYTE PTR [eax],al
  407cab:	add    BYTE PTR [eax],al
  407cad:	inc    edx
  407cae:	push   ss
  407caf:	add    BYTE PTR [edi],dh
  407cb1:	sahf   
  407cb2:	inc    esp
  407cb3:	add    BYTE PTR [eax],al
  407cb5:	add    BYTE PTR [eax],al
  407cb7:	add    BYTE PTR [ecx],dh
  407cb9:	sahf   
  407cba:	inc    esp
	...
  407ceb:	add    BYTE PTR [ebx],ch
  407ced:	sahf   
  407cee:	inc    esp
	...
  407d03:	add    BYTE PTR ds:0x449e,ah
  407d09:	add    BYTE PTR [eax],al
  407d0b:	add    BYTE PTR [eax],al
  407d0d:	inc    ecx
  407d0e:	adc    eax,0x40816000
	...
  407d2f:	add    BYTE PTR [eax+0x4080],al
	...
  407d45:	add    BYTE PTR [eax],al
  407d47:	add    BYTE PTR [ebp+edi*2+0x40],ah
	...
  407d5f:	add    BYTE PTR [esp+edi*2+0x40],bl
  407d66:	add    BYTE PTR [eax],al
  407d68:	add    BYTE PTR [esi+0x1],dl
  407d6b:	add    BYTE PTR [eax],bh
  407d6d:	jle    0x407daf
  407d6f:	add    BYTE PTR [eax],al
  407d71:	add    BYTE PTR [eax],al
  407d73:	add    BYTE PTR [eax],al
  407d75:	inc    esp
  407d76:	adc    al,BYTE PTR [eax]
  407d78:	jae    0x407d18
  407d7a:	inc    esp
	...
  407d87:	add    BYTE PTR [eax],bl
  407d89:	jle    0x407dcb
	...
  407d97:	add    al,al
  407d99:	jge    0x407ddb
	...
  407dbb:	add    BYTE PTR [ebx-0x62],cl
  407dbe:	inc    esp
  407dbf:	add    BYTE PTR [eax],al
  407dc1:	add    BYTE PTR [eax],al
  407dc3:	add    BYTE PTR [eax],al
  407dc5:	inc    esp
  407dc6:	adc    al,0x0
  407dc8:	pop    ecx
  407dc9:	sahf   
  407dca:	inc    esp
	...
  407e13:	add    BYTE PTR [ebx-0x62],dl
  407e16:	inc    esp
  407e17:	add    BYTE PTR [eax],al
  407e19:	add    BYTE PTR [eax],al
  407e1b:	add    BYTE PTR [eax],al
  407e1d:	push   edx
  407e1e:	push   es
  407e1f:	add    BYTE PTR [ebx-0x62],ch
  407e22:	inc    esp
	...
  407e2b:	add    BYTE PTR [ebp-0x62],ah
  407e2e:	inc    esp
  407e2f:	add    BYTE PTR [eax],al
  407e31:	add    BYTE PTR [eax],al
  407e33:	add    BYTE PTR [edi-0x62],bl
  407e36:	inc    esp
  407e37:	add    BYTE PTR [eax],al
  407e39:	add    BYTE PTR [eax],al
  407e3b:	add    BYTE PTR [eax],al
  407e3d:	dec    ebp
  407e3e:	push   cs
  407e3f:	add    cl,al
  407e41:	sahf   
  407e42:	inc    esp
	...
  407e57:	add    BYTE PTR [esi+edi*2+0x40],al
	...
  407e72:	add    BYTE PTR [eax],al
  407e74:	js     0x407ef4
  407e76:	inc    eax
  407e77:	add    BYTE PTR [eax],al
  407e79:	add    BYTE PTR [eax],al
  407e7b:	add    BYTE PTR [eax],al
  407e7d:	pop    eax
  407e7e:	add    DWORD PTR [eax],eax
  407e80:	nop
  407e81:	jle    0x407ec3
  407e83:	add    BYTE PTR [eax],al
  407e85:	add    BYTE PTR [eax],al
  407e87:	add    BYTE PTR [eax],al
  407e89:	pop    eax
  407e8a:	add    DWORD PTR [eax],eax
  407e8c:	mov    BYTE PTR [edi+0x40],bh
  407e8f:	add    BYTE PTR [eax],al
  407e91:	add    BYTE PTR [eax],al
  407e93:	add    BYTE PTR [eax],al
  407e95:	inc    edx
  407e96:	push   ss
  407e97:	add    BYTE PTR [eax],dh
  407e99:	jg     0x407edb
  407e9b:	add    BYTE PTR [eax],al
  407e9d:	add    BYTE PTR [eax],al
  407e9f:	add    BYTE PTR [ebp+0x449e],al
	...
  407ee9:	add    BYTE PTR [eax],al
  407eeb:	add    al,dh
  407eed:	jle    0x407f2f
  407eef:	add    BYTE PTR [eax],al
  407ef1:	add    BYTE PTR [eax],al
  407ef3:	add    BYTE PTR [eax],al
  407ef5:	inc    esp
  407ef6:	push   cs
  407ef7:	add    BYTE PTR [edi-0x62],bh
  407efa:	inc    esp
	...
  407f2b:	add    BYTE PTR [ecx-0x62],bh
  407f2e:	inc    esp
  407f2f:	add    BYTE PTR [eax],al
  407f31:	add    BYTE PTR [eax],al
  407f33:	add    BYTE PTR [eax],al
  407f35:	inc    esp
  407f36:	adc    al,0x0
  407f38:	xchg   edi,eax
  407f39:	sahf   
  407f3a:	inc    esp
	...
  407f6b:	add    BYTE PTR [ecx+0x449e],dl
	...
  407f81:	add    BYTE PTR [eax],al
  407f83:	add    BYTE PTR [ebx+0x449e],cl
  407f89:	add    BYTE PTR [eax],al
  407f8b:	add    BYTE PTR [eax],al
  407f8d:	inc    edx
  407f8e:	push   ss
  407f8f:	add    BYTE PTR [eax],ch
  407f91:	add    BYTE PTR [eax+0x0],0x0
  407f95:	add    BYTE PTR [eax],al
  407f97:	add    BYTE PTR [ecx+0x449e],ch
	...
  407fe1:	add    BYTE PTR [eax],al
  407fe3:	add    al,ch
  407fe5:	jg     0x408027
  407fe7:	add    BYTE PTR [eax],al
  407fe9:	add    BYTE PTR [eax],al
  407feb:	add    BYTE PTR [eax],al
  407fed:	inc    esp
  407fee:	push   cs
  407fef:	add    BYTE PTR [ebx+0x449e],ah
	...
  408021:	add    BYTE PTR [eax],al
  408023:	add    BYTE PTR [ebp+0x449e],bl
  408029:	add    BYTE PTR [eax],al
  40802b:	add    BYTE PTR [eax],al
  40802d:	inc    esp
  40802e:	adc    al,0x0
  408030:	mov    ebx,0x449e
	...
  408061:	add    BYTE PTR [eax],al
  408063:	add    BYTE PTR [ebp+0x449e],dh
	...
  408079:	add    BYTE PTR [eax],al
  40807b:	add    BYTE PTR [edi+0x449e],ch
  408081:	add    BYTE PTR [eax],al
  408083:	add    BYTE PTR [eax],al
  408085:	dec    esi
  408086:	add    DWORD PTR [eax],eax
  408088:	mov    WORD PTR [eax+0x40],es
  40808e:	add    BYTE PTR [eax],al
  408090:	add    BYTE PTR [ebx+0x3],dl
  408093:	add    BYTE PTR [eax],al
  408095:	add    DWORD PTR [eax+0x0],0x0
  40809c:	mov    al,ds:0x4080
  4080a1:	add    BYTE PTR [eax],al
  4080a3:	add    BYTE PTR [eax],al
  4080a5:	inc    edx
  4080a6:	push   ss
  4080a7:	add    ch,dl
  4080a9:	sahf   
  4080aa:	inc    esp
  4080ab:	add    BYTE PTR [eax],al
  4080ad:	add    BYTE PTR [eax],al
  4080af:	add    bh,cl
  4080b1:	sahf   
  4080b2:	inc    esp
	...
  4080fb:	add    cl,cl
  4080fd:	sahf   
  4080fe:	inc    esp
  4080ff:	add    BYTE PTR [eax],al
  408101:	add    BYTE PTR [eax],al
  408103:	add    BYTE PTR [eax],al
  408105:	inc    edx
  408106:	push   ss
  408107:	add    bh,ah
  408109:	sahf   
  40810a:	inc    esp
  40810b:	add    BYTE PTR [eax],al
  40810d:	add    BYTE PTR [eax],al
  40810f:	add    cl,ah
  408111:	sahf   
  408112:	inc    esp
	...
  40815b:	add    bl,bl
  40815d:	sahf   
  40815e:	inc    esp
  40815f:	add    BYTE PTR [eax],al
  408161:	add    BYTE PTR [eax],al
  408163:	add    BYTE PTR [eax],al
  408165:	inc    ebx
  408166:	push   ss
  408167:	add    BYTE PTR [eax-0x7d],dl
  40816a:	inc    eax
  40816b:	add    BYTE PTR [eax],bl
  40816d:	add    DWORD PTR [eax+0x0],0x0
	...
  4081a5:	add    BYTE PTR [eax],al
  4081a7:	add    ah,dl
  4081a9:	add    DWORD PTR [eax+0x0],0x0
	...
  4081bc:	rol    BYTE PTR [ecx+0x40],0x0
  4081c3:	add    BYTE PTR [eax],al
  4081c5:	push   ebx
  4081c6:	add    eax,DWORD PTR [eax]
  4081c8:	inc    eax
  4081c9:	add    BYTE PTR [eax+0x0],0x0
  4081cd:	add    BYTE PTR [eax],al
  4081cf:	add    al,ah
  4081d1:	add    DWORD PTR [eax+0x0],0x0
  4081d8:	add    BYTE PTR [ebx+0x1],cl
  4081db:	add    BYTE PTR [eax+0x4082],ah
  4081e1:	add    BYTE PTR [eax],al
  4081e3:	add    BYTE PTR [eax],al
  4081e5:	inc    edx
  4081e6:	push   ss
  4081e7:	add    cl,bh
  4081e9:	sahf   
  4081ea:	inc    esp
  4081eb:	add    BYTE PTR [eax],al
  4081ed:	add    BYTE PTR [eax],al
  4081ef:	add    bl,dh
  4081f1:	sahf   
  4081f2:	inc    esp
	...
  40823b:	add    ch,ch
  40823d:	sahf   
  40823e:	inc    esp
  40823f:	add    BYTE PTR [eax],al
  408241:	add    BYTE PTR [eax],al
  408243:	add    BYTE PTR [eax],al
  408245:	inc    edx
  408246:	push   ss
  408247:	add    BYTE PTR [ebx],cl
  408249:	lahf   
  40824a:	inc    esp
  40824b:	add    BYTE PTR [eax],al
  40824d:	add    BYTE PTR [eax],al
  40824f:	add    BYTE PTR ds:0x449f,al
	...
  408299:	add    BYTE PTR [eax],al
  40829b:	add    bh,bh
  40829d:	sahf   
  40829e:	inc    esp
  40829f:	add    BYTE PTR [eax],al
  4082a1:	add    BYTE PTR [eax],al
  4082a3:	add    BYTE PTR [eax],al
  4082a5:	dec    ebp
  4082a6:	add    DWORD PTR [eax],eax
  4082a8:	lods   al,BYTE PTR ds:[esi]
  4082a9:	add    BYTE PTR [eax+0x0],0x0
  4082ad:	add    BYTE PTR [eax],al
  4082af:	add    BYTE PTR [eax],al
  4082b1:	dec    edi
  4082b2:	add    DWORD PTR [eax],eax
  4082b4:	mov    eax,0x4082
  4082b9:	add    BYTE PTR [eax],al
  4082bb:	add    BYTE PTR [eax],al
  4082bd:	push   esi
  4082be:	add    DWORD PTR [eax],eax
  4082c0:	fadd   DWORD PTR [edx+0x40]
  4082c6:	add    BYTE PTR [eax],al
  4082c8:	add    BYTE PTR [ebp+0x3],dl
  4082cb:	add    BYTE PTR [ebx],ah
  4082cd:	lahf   
  4082ce:	inc    esp
  4082cf:	add    BYTE PTR [eax],al
  4082d1:	add    BYTE PTR [eax],al
  4082d3:	add    BYTE PTR ds:0x449f,bl
  4082d9:	add    BYTE PTR [eax],al
  4082db:	add    BYTE PTR [eax],al
  4082dd:	inc    esp
  4082de:	push   cs
  4082df:	add    BYTE PTR [edi],dl
  4082e1:	lahf   
  4082e2:	inc    esp
	...
  408313:	add    BYTE PTR [ecx],dl
  408315:	lahf   
  408316:	inc    esp
  408317:	add    BYTE PTR [eax],al
  408319:	add    BYTE PTR [eax],al
  40831b:	add    BYTE PTR [eax],al
  40831d:	inc    ebx
  40831e:	add    al,BYTE PTR [eax]
  408320:	sub    BYTE PTR [ebx-0x7d3bffc0],al
  408326:	inc    eax
  408327:	add    BYTE PTR [eax],al
  408329:	add    BYTE PTR [eax],al
  40832b:	add    BYTE PTR [eax],al
  40832d:	push   ebx
  40832e:	add    DWORD PTR [eax],eax
  408330:	xor    al,0x83
  408332:	inc    eax
  408333:	add    BYTE PTR [eax],al
  408335:	add    BYTE PTR [eax],al
  408337:	add    BYTE PTR [eax],al
  408339:	push   ebx
  40833a:	add    eax,0x449f3100
	...
  40834b:	add    BYTE PTR [ebx],ch
  40834d:	lahf   
  40834e:	inc    esp
  40834f:	add    BYTE PTR [eax],al
  408351:	add    BYTE PTR [eax],al
  408353:	add    BYTE PTR [eax],al
  408355:	push   ebx
  408356:	add    DWORD PTR [eax],eax
  408358:	js     0x4082dd
  40835a:	inc    eax
  40835b:	add    BYTE PTR [eax],al
  40835d:	add    BYTE PTR [eax],al
  40835f:	add    BYTE PTR [eax],al
  408361:	dec    eax
  408362:	add    eax,0x449f5700
	...
  408373:	add    BYTE PTR [ecx-0x61],dl
  408376:	inc    esp
  408377:	add    BYTE PTR [eax],al
  408379:	add    BYTE PTR [eax],al
  40837b:	add    BYTE PTR [eax],al
  40837d:	inc    esp
  40837e:	adc    al,0x0
  408380:	sbb    BYTE PTR [ebp+0x40],al
	...
  4083ba:	add    BYTE PTR [eax],al
  4083bc:	sub    BYTE PTR [eax+eax*2+0x0],al
	...
  4083cb:	add    al,dl
  4083cd:	add    DWORD PTR [eax+0x0],0x0
  4083d1:	add    BYTE PTR [eax],al
  4083d3:	add    BYTE PTR [eax],al
  4083d5:	inc    esp
  4083d6:	adc    al,0x0
  4083d8:	aas    
  4083d9:	lahf   
  4083da:	inc    esp
	...
  408423:	add    BYTE PTR [ecx],bh
  408425:	lahf   
  408426:	inc    esp
  408427:	add    BYTE PTR [eax],al
  408429:	add    BYTE PTR [eax],al
  40842b:	add    BYTE PTR [eax],al
  40842d:	inc    esp
  40842e:	adc    al,0x0
  408430:	fadd   DWORD PTR [eax+eax*2+0x0]
	...
  40847b:	add    BYTE PTR [eax+0x4084],al
  408481:	add    BYTE PTR [eax],al
  408483:	add    BYTE PTR [eax],al
  408485:	inc    esp
  408486:	adc    al,0x0
  408488:	dec    ebx
  408489:	lahf   
  40848a:	inc    esp
	...
  4084d3:	add    BYTE PTR [ebp-0x61],al
  4084d6:	inc    esp
  4084d7:	add    BYTE PTR [eax],al
  4084d9:	add    BYTE PTR [eax],al
  4084db:	add    BYTE PTR [eax],al
  4084dd:	inc    esp
  4084de:	push   cs
  4084df:	add    BYTE PTR [ebp-0x61],bl
  4084e2:	inc    esp
	...
  408513:	add    BYTE PTR [ebx+eax*4+0x40],bl
  408517:	add    BYTE PTR [eax],al
  408519:	add    BYTE PTR [eax],al
  40851b:	add    BYTE PTR [eax],al
  40851d:	inc    esp
  40851e:	push   cs
  40851f:	add    BYTE PTR [edi-0x61],ch
  408522:	inc    esp
	...
  408553:	add    BYTE PTR [eax-0x7b],bl
  408556:	inc    eax
  408557:	add    BYTE PTR [eax],al
  408559:	add    BYTE PTR [eax],al
  40855b:	add    BYTE PTR [eax],al
  40855d:	dec    eax
  40855e:	add    eax,0x449f6900
	...
  40856f:	add    BYTE PTR [ebx-0x61],ah
  408572:	inc    esp
  408573:	add    BYTE PTR [eax],al
  408575:	add    BYTE PTR [eax],al
  408577:	add    BYTE PTR [eax],al
  408579:	dec    esi
  40857a:	add    DWORD PTR [eax],eax
  40857c:	add    BYTE PTR [ebp+0x40],0x0
  408583:	add    BYTE PTR [eax],al
  408585:	push   ebx
  408586:	add    DWORD PTR [eax],eax
  408588:	mov    WORD PTR [ebp+0x40],es
  40858e:	add    BYTE PTR [eax],al
  408590:	add    BYTE PTR [edx+0x1],dl
  408593:	add    BYTE PTR [eax+0x4085],bl
  408599:	add    BYTE PTR [eax],al
  40859b:	add    BYTE PTR [eax],al
  40859d:	inc    edx
  40859e:	push   ss
  40859f:	add    BYTE PTR [edi+0x449f],al
  4085a5:	add    BYTE PTR [eax],al
  4085a7:	add    BYTE PTR [ecx+0x449f],al
	...
  4085d9:	add    BYTE PTR [eax],al
  4085db:	add    BYTE PTR [ebx-0x61],bh
  4085de:	inc    esp
	...
  4085f3:	add    BYTE PTR [ebp-0x61],dh
  4085f6:	inc    esp
  4085f7:	add    BYTE PTR [eax],al
  4085f9:	add    BYTE PTR [eax],al
  4085fb:	add    BYTE PTR [eax],al
  4085fd:	inc    ecx
  4085fe:	adc    eax,DWORD PTR [eax]
  408600:	xchg   BYTE PTR fs:[eax+0x0],al
	...
  408630:	mov    ebp,0x449f
	...
  408645:	add    BYTE PTR [eax],al
  408647:	add    BYTE PTR [esi+eax*4+0x40],cl
  40864b:	add    BYTE PTR [eax],al
  40864d:	add    BYTE PTR [eax],al
  40864f:	add    BYTE PTR [eax],al
  408651:	push   ebp
  408652:	add    DWORD PTR [eax],eax
  408654:	pop    eax
  408655:	xchg   BYTE PTR [eax+0x0],al
  408658:	add    BYTE PTR [eax],al
  40865a:	add    BYTE PTR [eax],al
  40865c:	add    BYTE PTR [edx+0x1],al
  40865f:	add    BYTE PTR [eax-0x7a],dh
  408662:	inc    eax
  408663:	add    BYTE PTR [eax],al
  408665:	add    BYTE PTR [eax],al
  408667:	add    BYTE PTR [eax],al
  408669:	inc    esp
  40866a:	add    DWORD PTR [eax],eax
  40866c:	rol    BYTE PTR [esi+0x40],1
  408672:	add    BYTE PTR [eax],al
  408674:	add    BYTE PTR [edx+0x16],al
  408677:	add    BYTE PTR [edi+0x449f],dh
  40867d:	add    BYTE PTR [eax],al
  40867f:	add    BYTE PTR [edi+ebx*4+0x44],ah
	...
  4086ba:	add    BYTE PTR [eax],al
  4086bc:	lahf   
  4086bd:	lahf   
  4086be:	inc    esp
	...
  4086cb:	add    BYTE PTR [edi+ebx*4+0x44],cl
  4086d2:	add    BYTE PTR [eax],al
  4086d4:	add    BYTE PTR [ecx+eax*1+0x0],al
  4086d8:	call   0x40c763
  4086dd:	add    BYTE PTR [eax],al
  4086df:	add    BYTE PTR [eax],al
  4086e1:	inc    ecx
  4086e2:	add    DWORD PTR [eax],eax
  4086e4:	cwde   
  4086e5:	mov    BYTE PTR [eax+0x0],al
  4086e8:	add    BYTE PTR [eax],al
  4086ea:	add    BYTE PTR [eax],al
  4086ec:	add    BYTE PTR [edx+0x16],al
  4086ef:	add    BYTE PTR [eax-0x78],al
  4086f2:	inc    eax
  4086f3:	add    BYTE PTR [eax],al
  4086f5:	add    BYTE PTR [eax],al
  4086f7:	add    BYTE PTR [eax-0x60],al
  4086fa:	inc    esp
	...
  408733:	add    BYTE PTR [ecx],bh
  408735:	mov    al,ds:0x44
  40873a:	add    BYTE PTR [eax],al
  40873c:	dec    eax
  40873d:	xchg   DWORD PTR [eax+0x0],eax
  408740:	add    BYTE PTR [eax],al
  408742:	add    BYTE PTR [eax],al
  408744:	enter  0x449f,0x0
  408748:	add    BYTE PTR [eax],al
  40874a:	add    BYTE PTR [eax],al
  40874c:	add    BYTE PTR [edx+0x16],al
  40874f:	add    al,ch
  408751:	xchg   DWORD PTR [eax+0x0],eax
  408754:	add    BYTE PTR [eax],al
  408756:	add    BYTE PTR [eax],al
  408758:	and    DWORD PTR [eax+0x44],esp
	...
  4087a2:	add    BYTE PTR [eax],al
  4087a4:	test   al,0x87
  4087a6:	inc    eax
  4087a7:	add    BYTE PTR [eax],al
  4087a9:	add    BYTE PTR [eax],al
  4087ab:	add    BYTE PTR [eax],al
  4087ad:	inc    esp
  4087ae:	push   cs
  4087af:	add    BYTE PTR [ebx],bl
  4087b1:	mov    al,ds:0x44
	...
  4087e2:	add    BYTE PTR [eax],al
  4087e4:	adc    eax,0x44a0
  4087e9:	add    BYTE PTR [eax],al
  4087eb:	add    BYTE PTR [eax],al
  4087ed:	inc    esp
  4087ee:	adc    al,0x0
  4087f0:	xor    esp,DWORD PTR [eax+0x44]
	...
  408822:	add    BYTE PTR [eax],al
  408824:	sub    eax,0x44a0
	...
  408839:	add    BYTE PTR [eax],al
  40883b:	add    BYTE PTR [edi],ah
  40883d:	mov    al,ds:0x44
  408842:	add    BYTE PTR [eax],al
  408844:	add    BYTE PTR [esp+edx*1+0x0],al
  408848:	pop    edi
  408849:	mov    al,ds:0x44
	...
  40887a:	add    BYTE PTR [eax],al
  40887c:	pop    ecx
  40887d:	mov    al,ds:0x44
	...
  408892:	add    BYTE PTR [eax],al
  408894:	push   ebx
  408895:	mov    al,ds:0x44
  40889a:	add    BYTE PTR [eax],al
  40889c:	add    BYTE PTR [ecx+eax*1+0x0],dl
  4088a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088a1:	mov    BYTE PTR [eax+0x0],al
  4088a4:	add    BYTE PTR [eax],al
  4088a6:	add    BYTE PTR [eax],al
  4088a8:	add    BYTE PTR [eax+0x1],cl
  4088ab:	add    BYTE PTR [eax+0x4088],dh
  4088b1:	add    BYTE PTR [eax],al
  4088b3:	add    BYTE PTR [eax],al
  4088b5:	inc    ebp
  4088b6:	add    DWORD PTR [eax],eax
  4088b8:	mov    esp,0x4088
  4088bd:	add    BYTE PTR [eax],al
  4088bf:	add    BYTE PTR [eax],al
  4088c1:	push   edx
  4088c2:	add    DWORD PTR [eax],eax
  4088c4:	enter  0x4088,0x0
  4088c8:	add    BYTE PTR [eax],al
  4088ca:	add    BYTE PTR [eax],al
  4088cc:	add    BYTE PTR [esi+ecx*1+0x0],al
  4088d0:	dec    eax
  4088d1:	mov    DWORD PTR [eax+0x0],eax
	...
  408904:	or     BYTE PTR [ecx+0x40],cl
  40890a:	add    BYTE PTR [eax],al
  40890c:	add    BYTE PTR [esi+ecx*1+0x0],al
  408910:	imul   esp,DWORD PTR [eax+0x44],0x0
	...
  408943:	add    BYTE PTR [ebp-0x60],ah
  408946:	inc    esp
  408947:	add    BYTE PTR [eax],al
  408949:	add    BYTE PTR [eax],al
  40894b:	add    BYTE PTR [eax],al
  40894d:	inc    esp
  40894e:	push   cs
  40894f:	add    BYTE PTR [edi-0x60],dh
  408952:	inc    esp
	...
  408983:	add    BYTE PTR [ecx-0x60],dh
  408986:	inc    esp
  408987:	add    BYTE PTR [eax],al
  408989:	add    BYTE PTR [eax],al
  40898b:	add    BYTE PTR [eax],al
  40898d:	push   edx
  40898e:	pop    es
  40898f:	add    ah,al
  408991:	mov    DWORD PTR [eax+0x0],eax
	...
  4089a8:	lods   al,BYTE PTR ds:[esi]
  4089a9:	mov    DWORD PTR [eax+0x0],eax
  4089ac:	add    BYTE PTR [eax],al
  4089ae:	add    BYTE PTR [eax],al
  4089b0:	add    BYTE PTR [ecx+eax*1+0x0],dl
  4089b4:	mov    eax,0x4089
  4089b9:	add    BYTE PTR [eax],al
  4089bb:	add    BYTE PTR [eax],al
  4089bd:	push   edx
  4089be:	add    DWORD PTR [eax],eax
  4089c0:	ror    BYTE PTR [ecx+0x40],1
  4089c6:	add    BYTE PTR [eax],al
  4089c8:	add    BYTE PTR [ebp+0x1],cl
  4089cb:	add    BYTE PTR [eax],dh
  4089cd:	mov    al,BYTE PTR [eax+0x0]
  4089d0:	add    BYTE PTR [eax],al
  4089d2:	add    BYTE PTR [eax],al
  4089d4:	add    BYTE PTR [edx+0x16],al
  4089d7:	add    BYTE PTR [edi+0x44a0],cl
  4089dd:	add    BYTE PTR [eax],al
  4089df:	add    BYTE PTR [ecx+0x44a0],cl
	...
  408a11:	add    BYTE PTR [eax],al
  408a13:	add    BYTE PTR [ebx+0x44a0],al
	...
  408a29:	add    BYTE PTR [eax],al
  408a2b:	add    BYTE PTR [ebp-0x60],bh
  408a2e:	inc    esp
  408a2f:	add    BYTE PTR [eax],al
  408a31:	add    BYTE PTR [eax],al
  408a33:	add    BYTE PTR [eax],al
  408a35:	xor    ah,BYTE PTR [eax]
  408a37:	add    BYTE PTR [eax],bh
  408a39:	mov    WORD PTR [eax+0x0],es
	...
  408a80:	mov    edi,0x44a0
	...
  408a95:	mov    eax,DWORD PTR [eax+0x0]
	...
  408ab0:	mov    eax,0x9500408a
  408ab5:	mov    al,ds:0x44
  408aba:	add    BYTE PTR [eax],al
  408abc:	add    BYTE PTR [eax+edx*1+0x0],al
  408ac0:	mov    eax,ds:0x44a0
	...
  408af9:	add    BYTE PTR [eax],al
  408afb:	add    BYTE PTR [ebx+0x44a0],bl
  408b01:	add    BYTE PTR [eax],al
  408b03:	add    BYTE PTR [eax],al
  408b05:	dec    esp
  408b06:	add    DWORD PTR [eax],eax
  408b08:	sbb    BYTE PTR [ebx+0x40],cl
  408b0e:	add    BYTE PTR [eax],al
  408b10:	add    BYTE PTR [eax+0x1],dl
  408b13:	add    al,dh
  408b15:	mov    eax,DWORD PTR [eax+0x0]
  408b18:	add    BYTE PTR [eax],al
  408b1a:	add    BYTE PTR [eax],al
  408b1c:	add    BYTE PTR [edx],dh
  408b1e:	pop    ds
  408b1f:	add    BYTE PTR [ebx+ecx*4],cl
  408b22:	inc    eax
	...
  408b97:	add    BYTE PTR [eax+0x408b],ch
  408b9d:	add    BYTE PTR [eax],al
  408b9f:	add    BYTE PTR [eax],al
  408ba1:	dec    ebp
  408ba2:	add    DWORD PTR [eax],eax
  408ba4:	push   0x408c
  408ba9:	add    BYTE PTR [eax],al
  408bab:	add    BYTE PTR [eax],al
  408bad:	inc    esp
  408bae:	adc    BYTE PTR [eax],al
  408bb0:	lods   eax,DWORD PTR ds:[esi]
  408bb1:	mov    al,ds:0x44
	...
  408bea:	add    BYTE PTR [eax],al
  408bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bed:	mov    al,ds:0x44
  408bf2:	add    BYTE PTR [eax],al
  408bf4:	add    BYTE PTR [eax+edx*1+0x0],al
  408bf8:	mov    ecx,0x44a0
	...
  408c31:	add    BYTE PTR [eax],al
  408c33:	add    BYTE PTR [ebx+0x44a0],dh
  408c39:	add    BYTE PTR [eax],al
  408c3b:	add    BYTE PTR [eax],al
  408c3d:	inc    esi
  408c3e:	add    al,0x0
  408c40:	int    0xa0
  408c42:	inc    esp
	...
  408c4b:	add    ch,al
  408c4d:	mov    al,ds:0x44
  408c52:	add    BYTE PTR [eax],al
  408c54:	add    BYTE PTR [esp+eax*1+0x0],cl
  408c58:	shl    DWORD PTR [edx-0x6bcfffbc],cl
  408c5e:	inc    eax
  408c5f:	add    BYTE PTR [eax],al
  408c61:	add    BYTE PTR [eax],al
  408c63:	add    BYTE PTR [ebx+ecx*4+0x40],bl
  408c6a:	add    BYTE PTR [eax],al
  408c6c:	add    BYTE PTR [edx+0x16],al
  408c6f:	add    BYTE PTR [edi-0x5e],bh
  408c72:	inc    esp
  408c73:	add    BYTE PTR [eax],al
  408c75:	add    BYTE PTR [eax],al
  408c77:	add    BYTE PTR [ecx-0x5e],bh
  408c7a:	inc    esp
  408c7b:	add    BYTE PTR [edx+edx*4-0x71dbffc0],ah
  408c82:	inc    eax
  408c83:	add    BYTE PTR [eax+0x4090],bh
	...
  408c95:	add    BYTE PTR [eax],al
  408c97:	add    al,dh
  408c99:	mov    es,WORD PTR [eax+0x0]
  408c9c:	add    BYTE PTR [eax],al
  408c9e:	add    BYTE PTR [eax],al
  408ca0:	dec    esp
  408ca1:	lea    eax,[eax+0x0]
	...
  408cac:	and    esp,DWORD PTR [ecx+0x44]
  408cb2:	add    BYTE PTR [eax],al
  408cb4:	add    BYTE PTR [eax],al
  408cb6:	add    BYTE PTR [eax],al
  408cb8:	sub    BYTE PTR [ebp-0x7337ffc0],cl
  408cbe:	inc    eax
  408cbf:	add    BYTE PTR [eax],al
  408cc1:	add    BYTE PTR [eax],al
  408cc3:	add    ch,dl
  408cc5:	mov    al,ds:0x44
  408cca:	add    BYTE PTR [eax],al
  408ccc:	add    BYTE PTR [edx+0x16],al
  408ccf:	add    ch,ch
  408cd1:	mov    al,ds:0x44
  408cd6:	add    BYTE PTR [eax],al
  408cd8:	out    0xa0,eax
  408cda:	inc    esp
	...
  408d0b:	add    cl,ah
  408d0d:	mov    al,ds:0x44
	...
  408d22:	add    BYTE PTR [eax],al
  408d24:	(bad)  [eax+0x44]
  408d2a:	add    BYTE PTR [eax],al
  408d2c:	add    BYTE PTR [edx+0x1],dl
  408d2f:	add    BYTE PTR [ecx*4+0x40],dh
  408d36:	add    BYTE PTR [eax],al
  408d38:	add    BYTE PTR [ebp+0x1],dl
  408d3b:	add    BYTE PTR [eax-0x73],al
  408d3e:	inc    eax
  408d3f:	add    BYTE PTR [eax],al
  408d41:	add    BYTE PTR [eax],al
  408d43:	add    BYTE PTR [eax],al
  408d45:	inc    ebp
  408d46:	add    DWORD PTR [eax],eax
  408d48:	pop    eax
  408d49:	lea    eax,[eax+0x0]
  408d4c:	add    BYTE PTR [eax],al
  408d4e:	add    BYTE PTR [eax],al
  408d50:	add    BYTE PTR [ebp+0x1],al
  408d53:	add    BYTE PTR [eax],bl
  408d55:	mov    es,WORD PTR [eax+0x0]
  408d58:	add    BYTE PTR [eax],al
  408d5a:	add    BYTE PTR [eax],al
  408d5c:	add    BYTE PTR [edx+0x16],al
  408d5f:	add    BYTE PTR ds:0x44a1,bl
  408d65:	add    BYTE PTR [eax],al
  408d67:	add    BYTE PTR [edi],dl
  408d69:	mov    eax,ds:0x44
	...
  408d9a:	add    BYTE PTR [eax],al
  408d9c:	adc    DWORD PTR [ecx+0x44],esp
	...
  408daa:	add    BYTE PTR [eax],al
  408dac:	mov    eax,0x408d
  408db1:	add    BYTE PTR [eax],al
  408db3:	add    bl,dh
  408db5:	mov    al,ds:0x44
  408dba:	add    BYTE PTR [eax],al
  408dbc:	add    BYTE PTR [edx+0x16],al
  408dbf:	add    BYTE PTR [ebx],cl
  408dc1:	mov    eax,ds:0x44
  408dc6:	add    BYTE PTR [eax],al
  408dc8:	add    eax,0x44a1
	...
  408df9:	add    BYTE PTR [eax],al
  408dfb:	add    bh,bh
  408dfd:	mov    al,ds:0x44
	...
  408e12:	add    BYTE PTR [eax],al
  408e14:	stc    
  408e15:	mov    al,ds:0x44
  408e1a:	add    BYTE PTR [eax],al
  408e1c:	add    BYTE PTR [ecx+0x1],dl
  408e1f:	add    BYTE PTR [eax],dh
  408e21:	mov    es,WORD PTR [eax+0x0]
  408e24:	add    BYTE PTR [eax],al
  408e26:	add    BYTE PTR [eax],al
  408e28:	add    BYTE PTR [ecx+0x1],al
  408e2b:	add    BYTE PTR [eax+0x4092],al
  408e31:	add    BYTE PTR [eax],al
  408e33:	add    BYTE PTR [eax],al
  408e35:	inc    edx
  408e36:	push   ss
  408e37:	add    BYTE PTR [ebx-0x5f],dl
  408e3a:	inc    esp
  408e3b:	add    BYTE PTR [eax],al
  408e3d:	add    BYTE PTR [eax],al
  408e3f:	add    BYTE PTR [ebp-0x5f],cl
  408e42:	inc    esp
	...
  408e73:	add    BYTE PTR [edi-0x5f],al
  408e76:	inc    esp
	...
  408e83:	add    BYTE PTR [eax+0x408e],dl
  408e89:	add    BYTE PTR [eax],al
  408e8b:	add    BYTE PTR [ecx],ch
  408e8d:	mov    eax,ds:0x44
  408e92:	add    BYTE PTR [eax],al
  408e94:	add    BYTE PTR [edx+0x16],al
  408e97:	add    BYTE PTR [ecx-0x5f],al
  408e9a:	inc    esp
  408e9b:	add    BYTE PTR [eax],al
  408e9d:	add    BYTE PTR [eax],al
  408e9f:	add    BYTE PTR [ebx],bh
  408ea1:	mov    eax,ds:0x44
	...
  408ed2:	add    BYTE PTR [eax],al
  408ed4:	xor    eax,0x44a1
	...
  408ee9:	add    BYTE PTR [eax],al
  408eeb:	add    BYTE PTR [edi],ch
  408eed:	mov    eax,ds:0x44
  408ef2:	add    BYTE PTR [eax],al
  408ef4:	add    BYTE PTR [ebp+0x10],al
  408ef7:	add    al,bh
  408ef9:	pop    DWORD PTR [eax+0x0]
	...
  408f34:	cmp    BYTE PTR [edi+0x40],cl
  408f3a:	add    BYTE PTR [eax],al
  408f3c:	add    BYTE PTR [edx+0x16],al
  408f3f:	add    BYTE PTR [ebx+0x44a1],al
  408f45:	add    BYTE PTR [eax],al
  408f47:	add    BYTE PTR [ebp-0x5f],bh
  408f4a:	inc    esp
	...
  408f7b:	add    BYTE PTR [edi-0x5f],dh
  408f7e:	inc    esp
	...
  408f8b:	add    BYTE PTR [eax+0x408f],bl
  408f91:	add    BYTE PTR [eax],al
  408f93:	add    BYTE PTR [ecx-0x5f],bl
  408f96:	inc    esp
  408f97:	add    BYTE PTR [eax],al
  408f99:	add    BYTE PTR [eax],al
  408f9b:	add    BYTE PTR [eax],al
  408f9d:	inc    edx
  408f9e:	push   ss
  408f9f:	add    BYTE PTR [ecx-0x5f],dh
  408fa2:	inc    esp
  408fa3:	add    BYTE PTR [eax],al
  408fa5:	add    BYTE PTR [eax],al
  408fa7:	add    BYTE PTR [ebx-0x5f],ch
  408faa:	inc    esp
	...
  408fdb:	add    BYTE PTR [ebp-0x5f],ah
  408fde:	inc    esp
	...
  408ff3:	add    BYTE PTR [edi-0x5f],bl
  408ff6:	inc    esp
  408ff7:	add    BYTE PTR [eax],al
  408ff9:	add    BYTE PTR [eax],al
  408ffb:	add    BYTE PTR [eax],al
  408ffd:	inc    edx
  408ffe:	push   ss
  408fff:	add    BYTE PTR [ebx+0x44a1],dh
  409005:	add    BYTE PTR [eax],al
  409007:	add    BYTE PTR [ebp+0x44a1],ch
	...
  409039:	add    BYTE PTR [eax],al
  40903b:	add    BYTE PTR [edi+0x44a1],ah
	...
  409049:	add    BYTE PTR [eax],al
  40904b:	add    BYTE PTR [eax-0x70],bl
  40904e:	inc    eax
  40904f:	add    BYTE PTR [eax],al
  409051:	add    BYTE PTR [eax],al
  409053:	add    BYTE PTR [ecx+0x44a1],cl
  409059:	add    BYTE PTR [eax],al
  40905b:	add    BYTE PTR [eax],al
  40905d:	inc    edx
  40905e:	push   ss
  40905f:	add    BYTE PTR [ecx+0x44a1],ah
  409065:	add    BYTE PTR [eax],al
  409067:	add    BYTE PTR [ebx+0x44a1],bl
	...
  409099:	add    BYTE PTR [eax],al
  40909b:	add    BYTE PTR [ebp+0x44a1],dl
	...
  4090b1:	add    BYTE PTR [eax],al
  4090b3:	add    BYTE PTR [edi+0x44a1],cl
  4090b9:	add    BYTE PTR [eax],al
  4090bb:	add    BYTE PTR [eax],al
  4090bd:	inc    ebp
  4090be:	adc    BYTE PTR [eax],al
  4090c0:	rcl    BYTE PTR [ecx+0x40],0x0
	...
  4090fb:	add    BYTE PTR [eax],al
  4090fd:	xchg   ecx,eax
  4090fe:	inc    eax
  4090ff:	add    BYTE PTR [eax],al
  409101:	add    BYTE PTR [eax],al
  409103:	add    BYTE PTR [eax],al
  409105:	inc    edx
  409106:	push   ss
  409107:	add    bl,ah
  409109:	mov    eax,ds:0x44
  40910e:	add    BYTE PTR [eax],al
  409110:	frstor [ecx+0x44]
	...
  409142:	add    BYTE PTR [eax],al
  409144:	xlat   BYTE PTR ds:[ebx]
  409145:	mov    eax,ds:0x44
	...
  409152:	add    BYTE PTR [eax],al
  409154:	pusha  
  409155:	xchg   ecx,eax
  409156:	inc    eax
  409157:	add    BYTE PTR [eax],al
  409159:	add    BYTE PTR [eax],al
  40915b:	add    BYTE PTR [ecx+0x44a1],bh
  409161:	add    BYTE PTR [eax],al
  409163:	add    BYTE PTR [eax],al
  409165:	inc    edx
  409166:	push   ss
  409167:	add    cl,dl
  409169:	mov    eax,ds:0x44
  40916e:	add    BYTE PTR [eax],al
  409170:	retf   
  409171:	mov    eax,ds:0x44
	...
  4091a2:	add    BYTE PTR [eax],al
  4091a4:	lds    esp,FWORD PTR [ecx+0x44]
	...
  4091ba:	add    BYTE PTR [eax],al
  4091bc:	mov    edi,0x44a1
  4091c1:	add    BYTE PTR [eax],al
  4091c3:	add    BYTE PTR [eax],al
  4091c5:	inc    edx
  4091c6:	push   ss
  4091c7:	add    BYTE PTR [ebx],dl
  4091c9:	mov    ds:0x44,al
  4091ce:	add    BYTE PTR [eax],al
  4091d0:	or     eax,0x44a2
	...
  409201:	add    BYTE PTR [eax],al
  409203:	add    BYTE PTR [edi],al
  409205:	mov    ds:0x44,al
	...
  409212:	add    BYTE PTR [eax],al
  409214:	and    BYTE PTR [edx+0x40],dl
  40921a:	add    BYTE PTR [eax],al
  40921c:	jmp    0x40d6c2
  409221:	add    BYTE PTR [eax],al
  409223:	add    BYTE PTR [eax],al
  409225:	inc    edx
  409226:	push   ss
  409227:	add    BYTE PTR [ecx],al
  409229:	mov    ds:0x44,al
  40922e:	add    BYTE PTR [eax],al
  409230:	sti    
  409231:	mov    eax,ds:0x44
	...
  409262:	add    BYTE PTR [eax],al
  409264:	cmc    
  409265:	mov    eax,ds:0x44
	...
  40927a:	add    BYTE PTR [eax],al
  40927c:	out    dx,eax
  40927d:	mov    eax,ds:0x44
  409282:	add    BYTE PTR [eax],al
  409284:	add    BYTE PTR [ecx+eax*1+0x0],cl
  409288:	mov    WORD PTR [edx+0x40],ss
  40928e:	add    BYTE PTR [eax],al
  409290:	add    BYTE PTR [ebx+0x1],dl
  409293:	add    BYTE PTR [eax+0x4092],bl
  409299:	add    BYTE PTR [eax],al
  40929b:	add    BYTE PTR [eax],al
  40929d:	inc    ebp
  40929e:	add    DWORD PTR [eax],eax
  4092a0:	mov    al,0x92
  4092a2:	inc    eax
  4092a3:	add    BYTE PTR [eax],al
  4092a5:	add    BYTE PTR [eax],al
  4092a7:	add    BYTE PTR [eax],al
  4092a9:	push   ecx
  4092aa:	add    DWORD PTR [eax],eax
  4092ac:	jo     0x409241
  4092ae:	inc    eax
  4092af:	add    BYTE PTR [eax],al
  4092b1:	add    BYTE PTR [eax],al
  4092b3:	add    BYTE PTR [eax],al
  4092b5:	inc    edx
  4092b6:	push   ss
  4092b7:	add    BYTE PTR [ebx-0x5e],al
  4092ba:	inc    esp
  4092bb:	add    BYTE PTR [eax],al
  4092bd:	add    BYTE PTR [eax],al
  4092bf:	add    BYTE PTR ds:0x44a2,bh
	...
  4092f1:	add    BYTE PTR [eax],al
  4092f3:	add    BYTE PTR [edi],dh
  4092f5:	mov    ds:0x44,al
	...
  409302:	add    BYTE PTR [eax],al
  409304:	adc    BYTE PTR [ebx+0x40],dl
  40930a:	add    BYTE PTR [eax],al
  40930c:	sbb    DWORD PTR [edx+0x44],esp
  409312:	add    BYTE PTR [eax],al
  409314:	add    BYTE PTR [edx+0x16],al
  409317:	add    BYTE PTR [ecx],dh
  409319:	mov    ds:0x44,al
  40931e:	add    BYTE PTR [eax],al
  409320:	sub    esp,DWORD PTR [edx+0x44]
	...
  409352:	add    BYTE PTR [eax],al
  409354:	and    eax,0x44a2
	...
  409369:	add    BYTE PTR [eax],al
  40936b:	add    BYTE PTR [edi],bl
  40936d:	mov    ds:0x44,al
  409372:	add    BYTE PTR [eax],al
  409374:	add    BYTE PTR [edx+0x16],al
  409377:	add    BYTE PTR [ebx-0x5e],dh
  40937a:	inc    esp
  40937b:	add    BYTE PTR [eax],al
  40937d:	add    BYTE PTR [eax],al
  40937f:	add    BYTE PTR [ebp-0x5e],ch
  409382:	inc    esp
	...
  4093b3:	add    BYTE PTR [edi-0x5e],ah
  4093b6:	inc    esp
	...
  4093c3:	add    al,dl
  4093c5:	xchg   ebx,eax
  4093c6:	inc    eax
  4093c7:	add    BYTE PTR [eax],al
  4093c9:	add    BYTE PTR [eax],al
  4093cb:	add    BYTE PTR [ecx-0x5e],cl
  4093ce:	inc    esp
  4093cf:	add    BYTE PTR [eax],al
  4093d1:	add    BYTE PTR [eax],al
  4093d3:	add    BYTE PTR [eax],al
  4093d5:	inc    edx
  4093d6:	push   ss
  4093d7:	add    BYTE PTR [ecx-0x5e],ah
  4093da:	inc    esp
  4093db:	add    BYTE PTR [eax],al
  4093dd:	add    BYTE PTR [eax],al
  4093df:	add    BYTE PTR [ebx-0x5e],bl
  4093e2:	inc    esp
	...
  409413:	add    BYTE PTR [ebp-0x5e],dl
  409416:	inc    esp
	...
  40942b:	add    BYTE PTR [edi-0x5e],cl
  40942e:	inc    esp
  40942f:	add    BYTE PTR [eax],al
  409431:	add    BYTE PTR [eax],al
  409433:	add    BYTE PTR [eax],al
  409435:	dec    edi
  409436:	add    al,BYTE PTR [eax]
  409438:	int    0xa2
  40943a:	inc    esp
  40943b:	add    BYTE PTR [eax-0x6c],al
  40943e:	inc    eax
  40943f:	add    BYTE PTR [eax],al
  409441:	add    BYTE PTR [eax],al
  409443:	add    BYTE PTR [eax],al
  409445:	inc    ebp
  409446:	add    eax,0x40950800
  40944b:	add    BYTE PTR [eax],al
  40944d:	add    BYTE PTR [eax],al
  40944f:	add    BYTE PTR [esp+edx*4+0x40],bl
  409456:	add    BYTE PTR [eax],al
  409458:	pop    esp
  409459:	xchg   esp,eax
  40945a:	inc    eax
  40945b:	add    BYTE PTR [eax],al
  40945d:	add    BYTE PTR [eax],al
  40945f:	add    BYTE PTR [eax],al
  409461:	push   ebx
  409462:	add    DWORD PTR [eax],eax
  409464:	push   0x4094
  409469:	add    BYTE PTR [eax],al
  40946b:	add    BYTE PTR [eax],al
  40946d:	push   esp
  40946e:	add    DWORD PTR [eax],eax
  409470:	je     0x409406
  409472:	inc    eax
  409473:	add    BYTE PTR [eax],al
  409475:	add    BYTE PTR [eax],al
  409477:	add    BYTE PTR [eax],al
  409479:	push   edx
  40947a:	add    DWORD PTR [eax],eax
  40947c:	adc    BYTE PTR [eax+eax*2+0x0],0x0
  409484:	add    BYTE PTR [ecx+0x5],cl
  409487:	add    BYTE PTR [ebx+0x44a2],cl
	...
  409495:	add    BYTE PTR [eax],al
  409497:	add    BYTE PTR [ebp+0x44a2],al
  40949d:	add    BYTE PTR [eax],al
  40949f:	add    BYTE PTR [eax],al
  4094a1:	push   esp
  4094a2:	add    DWORD PTR [eax],eax
  4094a4:	test   al,0x94
  4094a6:	inc    eax
  4094a7:	add    BYTE PTR [eax],al
  4094a9:	add    BYTE PTR [eax],al
  4094ab:	add    BYTE PTR [eax],al
  4094ad:	inc    edx
  4094ae:	push   ss
  4094af:	add    BYTE PTR [ebx+0x44a2],ah
  4094b5:	add    BYTE PTR [eax],al
  4094b7:	add    BYTE PTR [ebp+0x44a2],bl
	...
  4094e9:	add    BYTE PTR [eax],al
  4094eb:	add    BYTE PTR [edi+0x44a2],dl
	...
  409501:	add    BYTE PTR [eax],al
  409503:	add    BYTE PTR [ecx+0x44a2],dl
  409509:	add    BYTE PTR [eax],al
  40950b:	add    BYTE PTR [eax],al
  40950d:	push   ecx
  40950e:	add    eax,DWORD PTR [eax]
  409510:	push   eax
  409511:	xchg   ebp,eax
  409512:	inc    eax
  409513:	add    BYTE PTR [eax],al
  409515:	add    BYTE PTR [eax],al
  409517:	add    BYTE PTR [edx*4+0x40],bl
  40951e:	add    BYTE PTR [eax],al
  409520:	add    BYTE PTR [ecx+eax*1+0x0],dl
  409524:	sub    BYTE PTR [ebp+0x40],dl
  40952a:	add    BYTE PTR [eax],al
  40952c:	add    BYTE PTR [edx+0x1],dl
  40952f:	add    BYTE PTR [edx*4+0x40],dh
  409536:	add    BYTE PTR [eax],al
  409538:	add    BYTE PTR [ecx+0x5],cl
  40953b:	add    BYTE PTR [edi+0x44a2],ch
	...
  409549:	add    BYTE PTR [eax],al
  40954b:	add    BYTE PTR [ecx+0x44a2],ch
  409551:	add    BYTE PTR [eax],al
  409553:	add    BYTE PTR [eax],al
  409555:	inc    edx
  409556:	push   ss
  409557:	add    bh,al
  409559:	mov    ds:0x44,al
  40955e:	add    BYTE PTR [eax],al
  409560:	shl    DWORD PTR [edx+0x44],0x0
	...
  409593:	add    BYTE PTR [ebx+0x44a2],bh
	...
  4095a9:	add    BYTE PTR [eax],al
  4095ab:	add    BYTE PTR [ebp+0x44a2],dh
  4095b1:	add    BYTE PTR [eax],al
  4095b3:	add    BYTE PTR [eax],al
  4095b5:	dec    esp
  4095b6:	pop    es
  4095b7:	add    BYTE PTR [eax+0x4096],cl
	...
  4095cd:	add    BYTE PTR [eax],al
  4095cf:	add    ah,dl
  4095d1:	xchg   ebp,eax
  4095d2:	inc    eax
  4095d3:	add    BYTE PTR [eax],al
  4095d5:	add    BYTE PTR [eax],al
  4095d7:	add    BYTE PTR [eax],al
  4095d9:	dec    edi
  4095da:	add    DWORD PTR [eax],eax
  4095dc:	loopne 0x409573
  4095de:	inc    eax
  4095df:	add    BYTE PTR [eax],al
  4095e1:	add    BYTE PTR [eax],al
  4095e3:	add    BYTE PTR [eax],al
  4095e5:	inc    ecx
  4095e6:	add    DWORD PTR [eax],eax
  4095e8:	in     al,dx
  4095e9:	xchg   ebp,eax
  4095ea:	inc    eax
  4095eb:	add    BYTE PTR [eax],al
  4095ed:	add    BYTE PTR [eax],al
  4095ef:	add    BYTE PTR [eax],al
  4095f1:	inc    esp
  4095f2:	add    DWORD PTR [eax],eax
  4095f4:	clc    
  4095f5:	xchg   ebp,eax
  4095f6:	inc    eax
  4095f7:	add    BYTE PTR [eax],al
  4095f9:	add    BYTE PTR [eax],al
  4095fb:	add    BYTE PTR [eax],al
  4095fd:	inc    ebx
  4095fe:	add    DWORD PTR [eax],eax
  409600:	add    al,0x96
  409602:	inc    eax
  409603:	add    BYTE PTR [eax],al
  409605:	add    BYTE PTR [eax],al
  409607:	add    BYTE PTR [eax],al
  409609:	inc    ecx
  40960a:	add    DWORD PTR [eax],eax
  40960c:	adc    BYTE PTR [esi+0x40],dl
  409612:	add    BYTE PTR [eax],al
  409614:	add    BYTE PTR [ebx+0x1],dl
  409617:	add    BYTE PTR [esi+edx*4],bl
  40961a:	inc    eax
  40961b:	add    BYTE PTR [eax],al
  40961d:	add    BYTE PTR [eax],al
  40961f:	add    BYTE PTR [eax],al
  409621:	push   esp
  409622:	add    DWORD PTR [eax],eax
  409624:	sub    BYTE PTR [esi+0x40],dl
  40962a:	add    BYTE PTR [eax],al
  40962c:	add    BYTE PTR [edx+0x16],al
  40962f:	add    cl,dh
  409631:	mov    ds:0x44,al
  409636:	add    BYTE PTR [eax],al
  409638:	jmp    0x4095dc
  40963a:	inc    esp
	...
  40966b:	add    ch,ah
  40966d:	mov    ds:0x44,al
	...
  409682:	add    BYTE PTR [eax],al
  409684:	fbld   TBYTE PTR [edx+0x44]
  40968a:	add    BYTE PTR [eax],al
  40968c:	add    BYTE PTR [ebp+0x1],al
  40968f:	add    BYTE PTR [esi+edx*4+0x40],dl
  409696:	add    BYTE PTR [eax],al
  409698:	add    BYTE PTR [esi+0x1],cl
  40969b:	add    BYTE PTR [eax+0x4096],ah
  4096a1:	add    BYTE PTR [eax],al
  4096a3:	add    BYTE PTR [eax],al
  4096a5:	inc    esp
  4096a6:	add    DWORD PTR [eax],eax
  4096a8:	mov    eax,0x4096
  4096ad:	add    BYTE PTR [eax],al
  4096af:	add    BYTE PTR [eax],al
  4096b1:	inc    edi
  4096b2:	add    DWORD PTR [eax],eax
  4096b4:	js     0x40964d
  4096b6:	inc    eax
  4096b7:	add    BYTE PTR [eax],al
  4096b9:	add    BYTE PTR [eax],al
  4096bb:	add    BYTE PTR [eax],al
  4096bd:	inc    esp
  4096be:	adc    al,0x0
  4096c0:	add    esp,DWORD PTR [ebx+0x44]
	...
  409706:	add    BYTE PTR [eax],al
  409708:	std    
  409709:	mov    ds:0xa2f70044,al
  40970e:	inc    esp
  40970f:	add    BYTE PTR [eax],al
  409711:	add    BYTE PTR [eax],al
  409713:	add    BYTE PTR [eax],al
  409715:	inc    edx
  409716:	adc    eax,0x4099f800
  40971b:	add    BYTE PTR [eax],dl
  40971d:	cdq    
  40971e:	inc    eax
  40971f:	add    al,bl
  409721:	xchg   edi,eax
  409722:	inc    eax
	...
  40973f:	add    BYTE PTR [edi],ah
  409741:	mov    ds:0x44,eax
  409746:	add    BYTE PTR [eax],al
  409748:	ins    BYTE PTR es:[edi],dx
  409749:	xchg   edi,eax
  40974a:	inc    eax
	...
  409767:	add    BYTE PTR [esi+edx*4+0x40],ch
  40976e:	add    BYTE PTR [eax],al
  409770:	add    BYTE PTR [ecx+eax*1+0x0],al
  409774:	adc    al,0xa3
  409776:	inc    esp
  409777:	add    BYTE PTR [eax],al
  409779:	add    BYTE PTR [eax],al
  40977b:	add    BYTE PTR [eax],al
  40977d:	inc    edx
  40977e:	push   ss
  40977f:	add    BYTE PTR [edi],cl
  409781:	mov    ds:0x44,eax
	...
  4097d2:	add    BYTE PTR [eax],al
  4097d4:	or     DWORD PTR [ebx+0x44],esp
  4097da:	add    BYTE PTR [eax],al
  4097dc:	add    BYTE PTR [ecx+eax*1+0x0],al
  4097e0:	lock xchg edi,eax
  4097e2:	inc    eax
  4097e3:	add    BYTE PTR [eax],al
  4097e5:	add    BYTE PTR [eax],al
  4097e7:	add    BYTE PTR [eax],al
  4097e9:	push   ebx
  4097ea:	add    DWORD PTR [eax],eax
  4097ec:	push   eax
  4097ed:	cwde   
  4097ee:	inc    eax
  4097ef:	add    BYTE PTR [eax],al
  4097f1:	add    BYTE PTR [eax],al
  4097f3:	add    BYTE PTR [eax],al
  4097f5:	inc    edx
  4097f6:	push   ss
  4097f7:	add    BYTE PTR [ebx-0x5d],bl
  4097fa:	inc    esp
  4097fb:	add    BYTE PTR [eax],al
  4097fd:	add    BYTE PTR [eax],al
  4097ff:	add    BYTE PTR [ebp-0x5d],dl
  409802:	inc    esp
	...
  409833:	add    BYTE PTR [edi-0x5d],cl
  409836:	inc    esp
  409837:	add    BYTE PTR [eax],al
  409839:	add    BYTE PTR [eax],al
  40983b:	add    BYTE PTR [eax+0x4098],dh
  409841:	add    BYTE PTR [eax],al
  409843:	add    ah,ah
  409845:	xchg   edi,eax
  409846:	inc    eax
  409847:	add    BYTE PTR [eax],al
  409849:	add    BYTE PTR [eax],al
  40984b:	add    BYTE PTR [ecx],dh
  40984d:	mov    ds:0x44,eax
  409852:	add    BYTE PTR [eax],al
  409854:	add    BYTE PTR [edx+0x16],al
  409857:	add    BYTE PTR ds:0x44a3,bh
	...
  4098a9:	add    BYTE PTR [eax],al
  4098ab:	add    BYTE PTR [edi],dh
  4098ad:	mov    ds:0x44,eax
  4098b2:	add    BYTE PTR [eax],al
  4098b4:	add    BYTE PTR [edx+0x16],al
  4098b7:	add    BYTE PTR [ecx-0x5d],cl
  4098ba:	inc    esp
	...
  40990b:	add    BYTE PTR [ebx-0x5d],al
  40990e:	inc    esp
  40990f:	add    BYTE PTR [eax],al
  409911:	add    BYTE PTR [eax],al
  409913:	add    BYTE PTR [eax],al
  409915:	dec    ebx
  409916:	add    DWORD PTR [eax],eax
  409918:	sbb    al,0x99
  40991a:	inc    eax
  40991b:	add    BYTE PTR [eax],al
  40991d:	add    BYTE PTR [eax],al
  40991f:	add    BYTE PTR [eax],al
  409921:	push   ebx
  409922:	add    eax,DWORD PTR [eax]
  409924:	cmp    al,0x99
  409926:	inc    eax
  409927:	add    BYTE PTR [eax],al
  409929:	add    BYTE PTR [eax],al
  40992b:	add    BYTE PTR [eax],dh
  40992d:	cdq    
  40992e:	inc    eax
  40992f:	add    BYTE PTR [eax],al
  409931:	add    BYTE PTR [eax],al
  409933:	add    BYTE PTR [eax],al
  409935:	push   ebx
  409936:	add    DWORD PTR [eax],eax
  409938:	dec    eax
  409939:	cdq    
  40993a:	inc    eax
  40993b:	add    BYTE PTR [eax],al
  40993d:	add    BYTE PTR [eax],al
  40993f:	add    BYTE PTR [eax],al
  409941:	push   ebx
  409942:	add    DWORD PTR [eax],eax
  409944:	mov    al,ds:0x4099
  409949:	add    BYTE PTR [eax],al
  40994b:	add    BYTE PTR [eax],al
  40994d:	inc    esp
  40994e:	adc    al,0x0
  409950:	addr16 mov ds:0x44,eax
	...
  40999c:	popa   
  40999d:	mov    ds:0x44,eax
  4099a2:	add    BYTE PTR [eax],al
  4099a4:	add    BYTE PTR [esp+edx*1+0x0],al
  4099a8:	jae    0x40994d
  4099aa:	inc    esp
	...
  4099f3:	add    BYTE PTR [ebp-0x5d],ch
  4099f6:	inc    esp
  4099f7:	add    BYTE PTR [eax],al
  4099f9:	add    BYTE PTR [eax],al
  4099fb:	add    BYTE PTR [eax],al
  4099fd:	push   ebx
  4099fe:	add    DWORD PTR [eax],eax
  409a00:	adc    BYTE PTR [edx+0x40],bl
  409a06:	add    BYTE PTR [eax],al
  409a08:	add    BYTE PTR [edx+0x1],dl
  409a0b:	add    BYTE PTR [eax-0x66],dh
  409a0e:	inc    eax
  409a0f:	add    BYTE PTR [eax],al
  409a11:	add    BYTE PTR [eax],al
  409a13:	add    BYTE PTR [eax],al
  409a15:	inc    edx
  409a16:	push   ss
  409a17:	add    BYTE PTR [ebp+0x44a3],al
  409a1d:	add    BYTE PTR [eax],al
  409a1f:	add    BYTE PTR [edi-0x5d],bh
  409a22:	inc    esp
	...
  409a6b:	add    BYTE PTR [ecx-0x5d],bh
  409a6e:	inc    esp
  409a6f:	add    BYTE PTR [eax],al
  409a71:	add    BYTE PTR [eax],al
  409a73:	add    BYTE PTR [eax],al
  409a75:	push   eax
  409a76:	add    DWORD PTR [eax],eax
  409a78:	mov    BYTE PTR [edx+0x40],bl
  409a7e:	add    BYTE PTR [eax],al
  409a80:	add    BYTE PTR [edi+0x1],cl
  409a83:	add    BYTE PTR [eax],bh
  409a85:	fwait
  409a86:	inc    eax
  409a87:	add    BYTE PTR [eax],al
  409a89:	add    BYTE PTR [eax],al
  409a8b:	add    BYTE PTR [eax],al
  409a8d:	inc    esp
  409a8e:	adc    BYTE PTR [eax],al
  409a90:	xchg   ecx,eax
  409a91:	mov    ds:0x44,eax
	...
  409aca:	add    BYTE PTR [eax],al
  409acc:	mov    esp,DWORD PTR [ebx+0x44]
  409ad2:	add    BYTE PTR [eax],al
  409ad4:	add    BYTE PTR [ecx+0x18],al
  409ad7:	add    al,al
  409ad9:	mov    eax,ds:0x40
  409ade:	add    BYTE PTR [eax],al
  409ae0:	mov    BYTE PTR [ecx+0x40],ah
	...
  409af6:	add    BYTE PTR [eax],al
  409af8:	aam    0xa0
  409afa:	inc    eax
	...
  409b03:	add    BYTE PTR [eax-0x26ffbf60],dl
  409b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b0a:	inc    esp
  409b0b:	add    BYTE PTR [eax],al
  409b0d:	add    BYTE PTR [eax],al
  409b0f:	add    ah,bh
  409b11:	pushf  
  409b12:	inc    eax
  409b13:	add    ah,al
  409b15:	pushf  
  409b16:	inc    eax
  409b17:	add    BYTE PTR [eax],al
  409b19:	add    BYTE PTR [eax],al
  409b1b:	add    BYTE PTR [eax],bl
  409b1d:	pushf  
  409b1e:	inc    eax
  409b1f:	add    ch,al
  409b21:	mov    ds:0x44,eax
  409b26:	add    BYTE PTR [eax],al
  409b28:	fs fwait
  409b2a:	inc    eax
  409b2b:	add    BYTE PTR [eax],al
  409b2d:	add    BYTE PTR [eax],al
  409b2f:	add    BYTE PTR [ebx+0x7c0044a3],ah
  409b35:	call   0x0:0x40
  409b3c:	add    BYTE PTR [esi+0x9],al
  409b3f:	add    BYTE PTR [ebp+0x44a3],bl
	...
  409b5d:	add    BYTE PTR [eax],al
  409b5f:	add    BYTE PTR [edi+0x44a3],dl
  409b65:	add    BYTE PTR [eax],al
  409b67:	add    BYTE PTR [eax],al
  409b69:	dec    esp
  409b6a:	add    DWORD PTR [eax],eax
  409b6c:	jo     0x409b09
  409b6e:	inc    eax
  409b6f:	add    BYTE PTR [eax],al
  409b71:	add    BYTE PTR [eax],al
  409b73:	add    BYTE PTR [eax],al
  409b75:	push   eax
  409b76:	add    al,0x0
  409b78:	rcr    BYTE PTR [ebx+0x40],1
  409b7e:	add    BYTE PTR [eax],al
  409b80:	add    BYTE PTR [eax],al
  409b82:	add    BYTE PTR [eax],al
  409b84:	mov    BYTE PTR [ebx+0x40],bl
  409b8a:	add    BYTE PTR [eax],al
  409b8c:	add    BYTE PTR [eax+edx*1+0x0],al
  409b90:	mov    bl,0xa3
  409b92:	inc    esp
	...
  409bcb:	add    BYTE PTR [ebp+0x44a3],ch
  409bd1:	add    BYTE PTR [eax],al
  409bd3:	add    BYTE PTR [eax],al
  409bd5:	inc    esp
  409bd6:	adc    BYTE PTR [eax],al
  409bd8:	mov    edi,0x44a3
	...
  409c11:	add    BYTE PTR [eax],al
  409c13:	add    BYTE PTR [ecx+0x44a3],bh
  409c19:	add    BYTE PTR [eax],al
  409c1b:	add    BYTE PTR [eax],al
  409c1d:	inc    ebp
  409c1e:	adc    DWORD PTR [eax],eax
  409c20:	jo     0x409bbe
  409c22:	inc    eax
	...
  409c5f:	add    ch,cl
  409c61:	mov    ds:0x44,eax
  409c66:	add    BYTE PTR [eax],al
  409c68:	add    BYTE PTR [edx+0x1],dl
  409c6b:	add    ah,dl
  409c6d:	pushf  
  409c6e:	inc    eax
  409c6f:	add    BYTE PTR [eax],al
  409c71:	add    BYTE PTR [eax],al
  409c73:	add    BYTE PTR [eax],al
  409c75:	inc    ecx
  409c76:	adc    eax,DWORD PTR [eax]
  409c78:	(bad)  [ebx+0x44]
	...
  409cbe:	add    BYTE PTR [eax],al
  409cc0:	shl    DWORD PTR [ebx+0x44],cl
  409cc6:	add    BYTE PTR [eax],al
  409cc8:	add    BYTE PTR [ebx+0x2],dl
  409ccb:	add    ch,ch
  409ccd:	mov    ds:0x9c640044,eax
  409cd2:	inc    eax
  409cd3:	add    BYTE PTR [eax],al
  409cd5:	add    BYTE PTR [eax],al
  409cd7:	add    BYTE PTR [eax],al
  409cd9:	dec    esp
  409cda:	or     BYTE PTR [eax],al
  409cdc:	out    0xa3,eax
  409cde:	inc    esp
	...
  409cf7:	add    cl,ah
  409cf9:	mov    ds:0x44,eax
  409cfe:	add    BYTE PTR [eax],al
  409d00:	add    BYTE PTR [esi+0x1],dl
  409d03:	add    BYTE PTR [eax],cl
  409d05:	popf   
  409d06:	inc    eax
  409d07:	add    BYTE PTR [eax],al
  409d09:	add    BYTE PTR [eax],al
  409d0b:	add    BYTE PTR [eax],al
  409d0d:	inc    ecx
  409d0e:	adc    eax,0x40a03c00
	...
  409d1b:	add    BYTE PTR [eax-0x5c],bh
  409d1e:	inc    esp
	...
  409d2b:	add    BYTE PTR [edi+ebx*4],dh
  409d2e:	inc    eax
	...
  409d3b:	add    BYTE PTR [eax],cl
  409d3d:	lahf   
  409d3e:	inc    eax
  409d3f:	add    BYTE PTR [esi+ebx*4-0x61ffffc0],bl
  409d46:	inc    eax
	...
  409d4f:	add    BYTE PTR [edi],bl
  409d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d52:	inc    esp
  409d53:	add    BYTE PTR [eax],al
  409d55:	add    BYTE PTR [eax],al
  409d57:	add    BYTE PTR [eax+0x409d],bh
  409d5d:	add    BYTE PTR [eax],al
  409d5f:	add    BYTE PTR [ebp+ebx*4+0x40],ah
  409d63:	add    BYTE PTR [eax],al
  409d65:	add    BYTE PTR [eax],al
  409d67:	add    BYTE PTR [eax],al
  409d69:	push   eax
  409d6a:	add    DWORD PTR [eax],eax
  409d6c:	jo     0x409d0b
  409d6e:	inc    eax
  409d6f:	add    BYTE PTR [eax],al
  409d71:	add    BYTE PTR [eax],al
  409d73:	add    BYTE PTR [eax],al
  409d75:	inc    esp
  409d76:	adc    BYTE PTR [eax],al
  409d78:	std    
  409d79:	mov    ds:0x44,eax
	...
  409db2:	add    BYTE PTR [eax],al
  409db4:	mul    DWORD PTR [ebx+0x44]
  409dba:	add    BYTE PTR [eax],al
  409dbc:	add    BYTE PTR [eax+edx*1+0x0],al
  409dc0:	sbb    DWORD PTR [esp+eax*2+0x0],esp
	...
  409dcf:	add    BYTE PTR [ecx],dl
  409dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd2:	inc    esp
	...
  409ddf:	add    BYTE PTR [ecx],cl
  409de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de2:	inc    esp
	...
  409dfb:	add    BYTE PTR [ebx],al
  409dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dfe:	inc    esp
  409dff:	add    BYTE PTR [eax],al
  409e01:	add    BYTE PTR [eax],al
  409e03:	add    BYTE PTR [eax],al
  409e05:	push   esp
  409e06:	add    DWORD PTR [eax],eax
  409e08:	or     al,0x9e
  409e0a:	inc    eax
  409e0b:	add    BYTE PTR [eax],al
  409e0d:	add    BYTE PTR [eax],al
  409e0f:	add    BYTE PTR [eax],al
  409e11:	inc    esp
  409e12:	or     eax,0x409e9000
	...
  409e43:	add    BYTE PTR [eax-0x62],cl
  409e46:	inc    eax
  409e47:	add    BYTE PTR [eax],al
  409e49:	add    BYTE PTR [eax],al
  409e4b:	add    BYTE PTR [eax],al
  409e4d:	inc    esp
  409e4e:	adc    BYTE PTR [eax],al
  409e50:	sub    esp,DWORD PTR [esp+eax*2+0x0]
	...
  409e8b:	add    BYTE PTR ds:0x44a4,ah
  409e91:	add    BYTE PTR [eax],al
  409e93:	add    BYTE PTR [eax],al
  409e95:	push   ecx
  409e96:	add    DWORD PTR [eax],eax
  409e98:	xor    BYTE PTR [esp+eax*2+0x0],ah
  409e9f:	add    BYTE PTR [eax],al
  409ea1:	push   ebx
  409ea2:	add    DWORD PTR [eax],eax
  409ea4:	test   al,0x9e
  409ea6:	inc    eax
  409ea7:	add    BYTE PTR [eax],al
  409ea9:	add    BYTE PTR [eax],al
  409eab:	add    BYTE PTR [eax],al
  409ead:	dec    ebx
  409eae:	add    DWORD PTR [eax],eax
  409eb0:	mov    ah,0x9e
  409eb2:	inc    eax
  409eb3:	add    BYTE PTR [eax],al
  409eb5:	add    BYTE PTR [eax],al
  409eb7:	add    BYTE PTR [eax],al
  409eb9:	push   eax
  409eba:	add    DWORD PTR [eax],eax
  409ebc:	rcr    BYTE PTR [esi+0x40],0x0
  409ec3:	add    BYTE PTR [eax],al
  409ec5:	inc    esp
  409ec6:	adc    BYTE PTR [eax],al
  409ec8:	dec    ecx
  409ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eca:	inc    esp
	...
  409f03:	add    BYTE PTR [ebx-0x5c],al
  409f06:	inc    esp
  409f07:	add    BYTE PTR [eax],al
  409f09:	add    BYTE PTR [eax],al
  409f0b:	add    BYTE PTR [eax],al
  409f0d:	dec    eax
  409f0e:	or     DWORD PTR [eax],eax
  409f10:	pop    ebx
  409f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f12:	inc    esp
	...
  409f2f:	add    BYTE PTR [eax-0x61],dl
  409f32:	inc    eax
  409f33:	add    BYTE PTR [eax],al
  409f35:	add    BYTE PTR [eax],al
  409f37:	add    BYTE PTR [eax],al
  409f39:	dec    esp
  409f3a:	add    eax,0x44a46f00
	...
  409f4b:	add    BYTE PTR [eax+0x409f],bl
  409f51:	add    BYTE PTR [eax],al
  409f53:	add    BYTE PTR [eax],al
  409f55:	inc    esp
  409f56:	adc    BYTE PTR [eax],al
  409f58:	push   ebp
  409f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f5a:	inc    esp
	...
  409f93:	add    BYTE PTR [edi-0x5c],cl
  409f96:	inc    esp
  409f97:	add    BYTE PTR [eax],al
  409f99:	add    BYTE PTR [eax],al
  409f9b:	add    BYTE PTR [eax],al
  409f9d:	inc    esp
  409f9e:	adc    BYTE PTR [eax],al
  409fa0:	imul   esp,DWORD PTR [esp+eax*2+0x0],0x0
	...
  409fdb:	add    BYTE PTR [ebx-0x5c],ah
  409fde:	inc    esp
  409fdf:	add    BYTE PTR [eax],al
  409fe1:	add    BYTE PTR [eax],al
  409fe3:	add    BYTE PTR [eax],al
  409fe5:	inc    ecx
  409fe6:	adc    eax,0x44a4bf00
	...
  40a037:	add    BYTE PTR [ecx+0x44a4],bh
  40a03d:	add    BYTE PTR [eax],al
  40a03f:	add    BYTE PTR [eax],al
  40a041:	push   eax
  40a042:	add    DWORD PTR [eax],eax
  40a044:	dec    eax
  40a045:	mov    al,ds:0x40
  40a04a:	add    BYTE PTR [eax],al
  40a04c:	add    BYTE PTR [eax+edx*1+0x0],al
  40a050:	shl    DWORD PTR [esp+eax*2+0x0],cl
	...
  40a08b:	add    ch,cl
  40a08d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a08e:	inc    esp
  40a08f:	add    BYTE PTR [eax],al
  40a091:	add    BYTE PTR [eax],al
  40a093:	add    BYTE PTR [eax],al
  40a095:	inc    ecx
  40a096:	verw   bx
  40a099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a09a:	inc    esp
	...
  40a0cf:	add    bl,ah
  40a0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d2:	inc    esp
  40a0d3:	add    BYTE PTR [eax],al
  40a0d5:	add    BYTE PTR [eax],al
  40a0d7:	add    BYTE PTR [eax],al
  40a0d9:	dec    esi
  40a0da:	add    DWORD PTR [eax],eax
  40a0dc:	loopne 0x40a07e
  40a0de:	inc    eax
  40a0df:	add    BYTE PTR [eax],al
  40a0e1:	add    BYTE PTR [eax],al
  40a0e3:	add    BYTE PTR [eax],al
  40a0e5:	push   eax
  40a0e6:	add    al,0x0
  40a0e8:	inc    eax
  40a0e9:	mov    eax,ds:0x40
  40a0ee:	add    BYTE PTR [eax],al
  40a0f0:	add    BYTE PTR [eax],al
  40a0f2:	add    BYTE PTR [eax],al
  40a0f4:	clc    
  40a0f5:	mov    al,ds:0x40
  40a0fa:	add    BYTE PTR [eax],al
  40a0fc:	add    BYTE PTR [eax+edx*1+0x0],al
  40a100:	sti    
  40a101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a102:	inc    esp
	...
  40a13b:	add    ch,dh
  40a13d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a13e:	inc    esp
  40a13f:	add    BYTE PTR [eax],al
  40a141:	add    BYTE PTR [eax],al
  40a143:	add    BYTE PTR [eax],al
  40a145:	inc    esp
  40a146:	adc    BYTE PTR [eax],al
  40a148:	pop    es
  40a149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a14a:	inc    esp
	...
  40a183:	add    BYTE PTR [ecx],al
  40a185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a186:	inc    esp
  40a187:	add    BYTE PTR [eax],al
  40a189:	add    BYTE PTR [eax],al
  40a18b:	add    BYTE PTR [eax],al
  40a18d:	inc    ecx
  40a18e:	or     al,0x0
  40a190:	adc    eax,0x44a5
	...
  40a1b9:	add    BYTE PTR [eax],al
  40a1bb:	add    BYTE PTR ds:0x44a5,cl
  40a1c1:	add    BYTE PTR [eax],al
  40a1c3:	add    BYTE PTR [eax],al
  40a1c5:	push   ebx
  40a1c6:	push   es
  40a1c7:	add    BYTE PTR [eax+0x40a2],cl
	...
  40a1d9:	add    BYTE PTR [eax],al
  40a1db:	add    al,ah
  40a1dd:	mov    eax,ds:0x40
  40a1e2:	add    BYTE PTR [eax],al
  40a1e4:	add    BYTE PTR [eax+0x4],dl
  40a1e7:	add    BYTE PTR [eax-0x5e],al
  40a1ea:	inc    eax
	...
  40a1f3:	add    al,bh
  40a1f5:	mov    eax,ds:0x40
  40a1fa:	add    BYTE PTR [eax],al
  40a1fc:	add    BYTE PTR [eax+edx*1+0x0],al
  40a200:	and    esp,DWORD PTR [ebp+0x44]
	...
  40a23a:	add    BYTE PTR [eax],al
  40a23c:	sbb    eax,0x44a5
  40a241:	add    BYTE PTR [eax],al
  40a243:	add    BYTE PTR [eax],al
  40a245:	inc    esp
  40a246:	adc    BYTE PTR [eax],al
  40a248:	das    
  40a249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a24a:	inc    esp
	...
  40a283:	add    BYTE PTR [ecx],ch
  40a285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a286:	inc    esp
  40a287:	add    BYTE PTR [eax],al
  40a289:	add    BYTE PTR [eax],al
  40a28b:	add    BYTE PTR [eax],al
  40a28d:	dec    ebx
  40a28e:	add    DWORD PTR [eax],eax
  40a290:	xchg   esp,eax
  40a291:	mov    ds:0x40,al
  40a296:	add    BYTE PTR [eax],al
  40a298:	add    BYTE PTR [ebp+0x1],cl
  40a29b:	add    BYTE PTR [eax+0x40a2],ah
  40a2a1:	add    BYTE PTR [eax],al
  40a2a3:	add    BYTE PTR [eax],al
  40a2a5:	dec    edi
  40a2a6:	add    DWORD PTR [eax],eax
  40a2a8:	lods   al,BYTE PTR ds:[esi]
  40a2a9:	mov    ds:0x40,al
  40a2ae:	add    BYTE PTR [eax],al
  40a2b0:	add    BYTE PTR [esi+0x1],dl
  40a2b3:	add    BYTE PTR [eax+0x40a2],bh
  40a2b9:	add    BYTE PTR [eax],al
  40a2bb:	add    BYTE PTR [eax],al
  40a2bd:	inc    esp
  40a2be:	or     eax,0x44a54100
	...
  40a2ef:	add    BYTE PTR [eax],al
  40a2f1:	mov    ds:0x40,eax
  40a2f6:	add    BYTE PTR [eax],al
  40a2f8:	add    BYTE PTR [ecx+eax*1+0x0],al
  40a2fc:	dec    eax
  40a2fd:	mov    ds:0x40,eax
  40a302:	add    BYTE PTR [eax],al
  40a304:	add    BYTE PTR [eax+edx*1+0x0],al
  40a308:	cmp    esp,DWORD PTR [ebp+0x44]
	...
  40a342:	add    BYTE PTR [eax],al
  40a344:	xor    eax,0x44a5
  40a349:	add    BYTE PTR [eax],al
  40a34b:	add    BYTE PTR [eax],al
  40a34d:	inc    esp
  40a34e:	or     al,BYTE PTR [eax]
  40a350:	push   ebx
  40a351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a352:	inc    esp
	...
  40a373:	add    BYTE PTR [ecx-0x5b],cl
  40a376:	inc    esp
  40a377:	add    BYTE PTR [eax],al
  40a379:	add    BYTE PTR [eax],al
  40a37b:	add    BYTE PTR [eax],al
  40a37d:	dec    esi
  40a37e:	add    DWORD PTR [eax],eax
  40a380:	test   BYTE PTR [ebx+0x40],ah
  40a386:	add    BYTE PTR [eax],al
  40a388:	add    BYTE PTR [ebx+0x1],dl
  40a38b:	add    BYTE PTR [eax+0x40a3],dl
  40a391:	add    BYTE PTR [eax],al
  40a393:	add    BYTE PTR [eax],al
  40a395:	inc    ebp
  40a396:	add    DWORD PTR [eax],eax
  40a398:	pushf  
  40a399:	mov    ds:0x40,eax
  40a39e:	add    BYTE PTR [eax],al
  40a3a0:	add    BYTE PTR [edx+0x1],dl
  40a3a3:	add    BYTE PTR [eax+0x40a3],ch
  40a3a9:	add    BYTE PTR [eax],al
  40a3ab:	add    BYTE PTR [eax],al
  40a3ad:	push   esp
  40a3ae:	add    DWORD PTR [eax],eax
  40a3b0:	mov    ah,0xa3
  40a3b2:	inc    eax
  40a3b3:	add    BYTE PTR [eax],al
  40a3b5:	add    BYTE PTR [eax],al
  40a3b7:	add    BYTE PTR [eax],al
  40a3b9:	inc    esi
  40a3ba:	or     eax,DWORD PTR [eax]
  40a3bc:	imul   esp,DWORD PTR [ebp+0x44],0x0
  40a3c6:	add    BYTE PTR [eax],al
  40a3c8:	popa   
  40a3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3ca:	inc    esp
	...
  40a3e3:	add    BYTE PTR [ebx-0x5b],bl
  40a3e6:	inc    esp
  40a3e7:	add    BYTE PTR [eax],al
  40a3e9:	add    BYTE PTR [eax],al
  40a3eb:	add    BYTE PTR [eax],al
  40a3ed:	inc    ecx
  40a3ee:	adc    eax,DWORD PTR [eax]
  40a3f0:	test   al,0xa4
  40a3f2:	inc    eax
	...
  40a437:	add    BYTE PTR [esp+eiz*4],bh
  40a43a:	inc    eax
  40a43b:	add    BYTE PTR [eax],al
  40a43d:	add    BYTE PTR [eax],al
  40a43f:	add    BYTE PTR [eax],al
  40a441:	push   ebp
  40a442:	add    DWORD PTR [eax],eax
  40a444:	dec    eax
  40a445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a446:	inc    eax
  40a447:	add    BYTE PTR [eax],al
  40a449:	add    BYTE PTR [eax],al
  40a44b:	add    BYTE PTR [eax],al
  40a44d:	inc    edx
  40a44e:	add    DWORD PTR [eax],eax
  40a450:	push   esp
  40a451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a452:	inc    eax
  40a453:	add    BYTE PTR [eax],al
  40a455:	add    BYTE PTR [eax],al
  40a457:	add    BYTE PTR [eax],al
  40a459:	push   eax
  40a45a:	add    DWORD PTR [eax],eax
  40a45c:	pusha  
  40a45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a45e:	inc    eax
  40a45f:	add    BYTE PTR [eax],al
  40a461:	add    BYTE PTR [eax],al
  40a463:	add    BYTE PTR [eax],al
  40a465:	inc    esp
  40a466:	adc    BYTE PTR [eax],al
  40a468:	ja     0x40a40f
  40a46a:	inc    esp
	...
  40a4a3:	add    BYTE PTR [ecx-0x5b],dh
  40a4a6:	inc    esp
  40a4a7:	add    BYTE PTR [eax],al
  40a4a9:	add    BYTE PTR [eax],al
  40a4ab:	add    BYTE PTR [eax],al
  40a4ad:	inc    esp
  40a4ae:	add    DWORD PTR [eax],eax
  40a4b0:	mov    ah,0xa4
  40a4b2:	inc    eax
  40a4b3:	add    BYTE PTR [eax],al
  40a4b5:	add    BYTE PTR [eax],al
  40a4b7:	add    BYTE PTR [eax],al
  40a4b9:	inc    esp
  40a4ba:	add    DWORD PTR [eax],eax
  40a4bc:	shl    BYTE PTR [eax+eax*2+0x0],0x0
  40a4c4:	add    BYTE PTR [eax+0x1],dl
  40a4c7:	add    al,bl
  40a4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4ca:	inc    eax
  40a4cb:	add    BYTE PTR [eax],al
  40a4cd:	add    BYTE PTR [eax],al
  40a4cf:	add    BYTE PTR [eax],al
  40a4d1:	inc    ecx
  40a4d2:	add    DWORD PTR [eax],eax
  40a4d4:	and    BYTE PTR [ebp+0x40],ah
  40a4da:	add    BYTE PTR [eax],al
  40a4dc:	add    BYTE PTR [eax+edx*1+0x0],al
  40a4e0:	and    DWORD PTR [ebp+0x44],0x0
	...
  40a51b:	add    BYTE PTR [ebp-0x5b],bh
  40a51e:	inc    esp
  40a51f:	add    BYTE PTR [eax],al
  40a521:	add    BYTE PTR [eax],al
  40a523:	add    BYTE PTR [eax],al
  40a525:	push   esp
  40a526:	add    DWORD PTR [eax],eax
  40a528:	sub    al,0xa5
  40a52a:	inc    eax
  40a52b:	add    BYTE PTR [eax],al
  40a52d:	add    BYTE PTR [eax],al
  40a52f:	add    BYTE PTR [eax],al
  40a531:	dec    eax
  40a532:	add    DWORD PTR [eax],eax
  40a534:	cmp    BYTE PTR [ebp+0x40],ah
  40a53a:	add    BYTE PTR [eax],al
  40a53c:	add    BYTE PTR [ebp+0x1],al
  40a53f:	add    BYTE PTR [ebp+eiz*4+0x40],al
  40a543:	add    BYTE PTR [eax],al
  40a545:	add    BYTE PTR [eax],al
  40a547:	add    BYTE PTR [eax],al
  40a549:	push   edx
  40a54a:	add    DWORD PTR [eax],eax
  40a54c:	push   eax
  40a54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a54e:	inc    eax
  40a54f:	add    BYTE PTR [eax],al
  40a551:	add    BYTE PTR [eax],al
  40a553:	add    BYTE PTR [eax],al
  40a555:	inc    esp
  40a556:	push   cs
  40a557:	add    BYTE PTR [ebp+eiz*4+0x40],bl
	...
  40a58a:	add    BYTE PTR [eax],al
  40a58c:	nop
  40a58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a58e:	inc    eax
  40a58f:	add    BYTE PTR [eax],al
  40a591:	add    BYTE PTR [eax],al
  40a593:	add    BYTE PTR [eax],al
  40a595:	push   eax
  40a596:	add    DWORD PTR [eax],eax
  40a598:	test   al,0xa5
  40a59a:	inc    eax
  40a59b:	add    BYTE PTR [eax],al
  40a59d:	add    BYTE PTR [eax],al
  40a59f:	add    BYTE PTR [eax],al
  40a5a1:	push   eax
  40a5a2:	add    DWORD PTR [eax],eax
  40a5a4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a6:	inc    eax
  40a5a7:	add    BYTE PTR [eax],al
  40a5a9:	add    BYTE PTR [eax],al
  40a5ab:	add    BYTE PTR [eax],al
  40a5ad:	inc    esp
  40a5ae:	adc    BYTE PTR [eax],al
  40a5b0:	(bad)  
  40a5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5b2:	inc    esp
	...
  40a5eb:	add    BYTE PTR [ecx+0x44a5],cl
  40a5f1:	add    BYTE PTR [eax],al
  40a5f3:	add    BYTE PTR [eax],al
  40a5f5:	inc    esp
  40a5f6:	adc    BYTE PTR [eax],al
  40a5f8:	fwait
  40a5f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5fa:	inc    esp
	...
  40a633:	add    BYTE PTR [ebp+0x44a5],dl
  40a639:	add    BYTE PTR [eax],al
  40a63b:	add    BYTE PTR [eax],al
  40a63d:	dec    ebp
  40a63e:	push   es
  40a63f:	add    BYTE PTR [eax-0x52],ch
  40a642:	inc    eax
  40a643:	add    BYTE PTR [eax],bl
  40a645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a646:	inc    eax
	...
  40a653:	add    BYTE PTR [eax-0x5a],bl
  40a656:	inc    eax
  40a657:	add    BYTE PTR [eax],al
  40a659:	add    BYTE PTR [eax],al
  40a65b:	add    BYTE PTR [eax],al
  40a65d:	inc    ebx
  40a65e:	add    DWORD PTR [eax],eax
  40a660:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a662:	inc    eax
  40a663:	add    BYTE PTR [eax],al
  40a665:	add    BYTE PTR [eax],al
  40a667:	add    BYTE PTR [eax],al
  40a669:	pop    edx
  40a66a:	add    DWORD PTR [eax],eax
  40a66c:	jo     0x40a614
  40a66e:	inc    eax
  40a66f:	add    BYTE PTR [eax],al
  40a671:	add    BYTE PTR [eax],al
  40a673:	add    BYTE PTR [eax],al
  40a675:	push   eax
  40a676:	add    al,0x0
  40a678:	shl    BYTE PTR [esi+0x40],1
  40a67e:	add    BYTE PTR [eax],al
  40a680:	add    BYTE PTR [eax],al
  40a682:	add    BYTE PTR [eax],al
  40a684:	mov    BYTE PTR [esi+0x40],ah
  40a68a:	add    BYTE PTR [eax],al
  40a68c:	add    BYTE PTR [eax+edx*1+0x0],al
  40a690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a692:	inc    esp
	...
  40a6cb:	add    BYTE PTR [ecx+0x44a5],ah
  40a6d1:	add    BYTE PTR [eax],al
  40a6d3:	add    BYTE PTR [eax],al
  40a6d5:	inc    esp
  40a6d6:	adc    BYTE PTR [eax],al
  40a6d8:	mov    bl,0xa5
  40a6da:	inc    esp
	...
  40a713:	add    BYTE PTR [ebp+0x44a5],ch
  40a719:	add    BYTE PTR [eax],al
  40a71b:	add    BYTE PTR [eax],al
  40a71d:	dec    ebp
  40a71e:	add    DWORD PTR [eax],eax
  40a720:	xor    BYTE PTR [edi+0x40],ah
  40a726:	add    BYTE PTR [eax],al
  40a728:	add    BYTE PTR [ebp+0x1],dl
  40a72b:	add    BYTE PTR [edi+eiz*4+0x40],al
  40a732:	add    BYTE PTR [eax],al
  40a734:	add    BYTE PTR [ecx+0x13],al
  40a737:	add    al,dh
  40a739:	stos   BYTE PTR es:[edi],al
  40a73a:	inc    eax
	...
  40a77f:	add    BYTE PTR [edi+eiz*4],ah
  40a782:	inc    eax
  40a783:	add    BYTE PTR [eax],al
  40a785:	add    BYTE PTR [eax],al
  40a787:	add    BYTE PTR [eax],al
  40a789:	inc    edx
  40a78a:	add    DWORD PTR [eax],eax
  40a78c:	nop
  40a78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a78e:	inc    eax
  40a78f:	add    BYTE PTR [eax],al
  40a791:	add    BYTE PTR [eax],al
  40a793:	add    BYTE PTR [eax],al
  40a795:	xor    DWORD PTR [ebx],esp
  40a797:	add    BYTE PTR [eax],dh
  40a799:	stos   BYTE PTR es:[edi],al
  40a79a:	inc    eax
  40a79b:	add    BYTE PTR [eax+ebp*4],ah
  40a79e:	inc    eax
	...
  40a813:	add    BYTE PTR [eax+0x40a8],al
  40a819:	add    BYTE PTR [eax],al
  40a81b:	add    BYTE PTR [eax],al
  40a81d:	add    BYTE PTR [eax],al
  40a81f:	add    BYTE PTR [eax],bh
  40a821:	test   al,0x40
  40a823:	add    BYTE PTR [eax],al
  40a825:	add    BYTE PTR [eax],al
  40a827:	add    BYTE PTR [eax],al
  40a829:	xor    DWORD PTR [ebx],eax
  40a82b:	add    ah,ch
  40a82d:	test   al,0x40
  40a82f:	add    BYTE PTR [eax],al
  40a831:	add    BYTE PTR [eax],al
  40a833:	add    al,cl
  40a835:	test   al,0x40
  40a837:	add    BYTE PTR [eax],al
  40a839:	add    BYTE PTR [eax],al
  40a83b:	add    BYTE PTR [eax],al
  40a83d:	inc    esp
  40a83e:	adc    BYTE PTR [eax],al
  40a840:	mov    edi,0x44a5
	...
  40a879:	add    BYTE PTR [eax],al
  40a87b:	add    BYTE PTR [ecx+0x44a5],bh
  40a881:	add    BYTE PTR [eax],al
  40a883:	add    BYTE PTR [eax],al
  40a885:	inc    esp
  40a886:	adc    BYTE PTR [eax],al
  40a888:	retf   
  40a889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a88a:	inc    esp
	...
  40a8c3:	add    ch,al
  40a8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c6:	inc    esp
  40a8c7:	add    BYTE PTR [eax],al
  40a8c9:	add    BYTE PTR [eax],al
  40a8cb:	add    BYTE PTR [eax],al
  40a8cd:	xor    DWORD PTR [ecx],eax
  40a8cf:	add    ah,dl
  40a8d1:	test   al,0x40
  40a8d3:	add    BYTE PTR [eax],al
  40a8d5:	add    BYTE PTR [eax],al
  40a8d7:	add    BYTE PTR [eax],al
  40a8d9:	push   eax
  40a8da:	add    al,0x0
  40a8dc:	inc    eax
  40a8dd:	test   eax,0x40
  40a8e2:	add    BYTE PTR [eax],al
  40a8e4:	add    BYTE PTR [eax],al
  40a8e6:	add    BYTE PTR [eax],al
  40a8e8:	clc    
  40a8e9:	test   al,0x40
  40a8eb:	add    BYTE PTR [eax],al
  40a8ed:	add    BYTE PTR [eax],al
  40a8ef:	add    BYTE PTR [eax],al
  40a8f1:	xor    eax,DWORD PTR [ecx]
  40a8f3:	add    BYTE PTR [eax+0x40a9],cl
  40a8f9:	add    BYTE PTR [eax],al
  40a8fb:	add    BYTE PTR [eax],al
  40a8fd:	inc    esp
  40a8fe:	adc    BYTE PTR [eax],al
  40a900:	xlat   BYTE PTR ds:[ebx]
  40a901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a902:	inc    esp
	...
  40a93b:	add    cl,dl
  40a93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a93e:	inc    esp
  40a93f:	add    BYTE PTR [eax],al
  40a941:	add    BYTE PTR [eax],al
  40a943:	add    BYTE PTR [eax],al
  40a945:	inc    esp
  40a946:	adc    BYTE PTR [eax],al
  40a948:	jecxz  0x40a8ef
  40a94a:	inc    esp
	...
  40a983:	add    ch,bl
  40a985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a986:	inc    esp
  40a987:	add    BYTE PTR [eax],al
  40a989:	add    BYTE PTR [eax],al
  40a98b:	add    BYTE PTR [eax],al
  40a98d:	push   eax
  40a98e:	add    al,0x0
  40a990:	call   0x40ea3e
  40a995:	add    BYTE PTR [eax],al
  40a997:	add    BYTE PTR [eax],al
  40a999:	add    BYTE PTR [eax],al
  40a99b:	add    BYTE PTR [eax+0x40a9],ah
  40a9a1:	add    BYTE PTR [eax],al
  40a9a3:	add    BYTE PTR [eax],al
  40a9a5:	inc    esp
  40a9a6:	adc    BYTE PTR [eax],al
  40a9a8:	out    dx,eax
  40a9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9aa:	inc    esp
	...
  40a9e3:	add    cl,ch
  40a9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e6:	inc    esp
  40a9e7:	add    BYTE PTR [eax],al
  40a9e9:	add    BYTE PTR [eax],al
  40a9eb:	add    BYTE PTR [eax],al
  40a9ed:	inc    esp
  40a9ee:	adc    BYTE PTR [eax],al
  40a9f0:	sti    
  40a9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f2:	inc    esp
	...
  40aa2b:	add    ch,dh
  40aa2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2e:	inc    esp
  40aa2f:	add    BYTE PTR [eax],al
  40aa31:	add    BYTE PTR [eax],al
  40aa33:	add    BYTE PTR [eax],al
  40aa35:	xor    eax,DWORD PTR [ecx]
  40aa37:	add    BYTE PTR [edx+ebp*4],bh
  40aa3a:	inc    eax
  40aa3b:	add    BYTE PTR [eax],al
  40aa3d:	add    BYTE PTR [eax],al
  40aa3f:	add    BYTE PTR [eax],al
  40aa41:	xor    al,BYTE PTR [ecx]
  40aa43:	add    BYTE PTR [eax-0x56],cl
  40aa46:	inc    eax
  40aa47:	add    BYTE PTR [eax],al
  40aa49:	add    BYTE PTR [eax],al
  40aa4b:	add    BYTE PTR [eax],al
  40aa4d:	push   eax
  40aa4e:	add    al,0x0
  40aa50:	test   al,0xaa
  40aa52:	inc    eax
	...
  40aa5b:	add    BYTE PTR [eax-0x56],ah
  40aa5e:	inc    eax
  40aa5f:	add    BYTE PTR [eax],al
  40aa61:	add    BYTE PTR [eax],al
  40aa63:	add    BYTE PTR [eax],al
  40aa65:	inc    esp
  40aa66:	adc    BYTE PTR [eax],al
  40aa68:	pop    es
  40aa69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa6a:	inc    esp
	...
  40aaa3:	add    BYTE PTR [ecx],al
  40aaa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaa6:	inc    esp
  40aaa7:	add    BYTE PTR [eax],al
  40aaa9:	add    BYTE PTR [eax],al
  40aaab:	add    BYTE PTR [eax],al
  40aaad:	inc    esp
  40aaae:	adc    BYTE PTR [eax],al
  40aab0:	adc    esp,DWORD PTR [esi+0x44]
	...
  40aaea:	add    BYTE PTR [eax],al
  40aaec:	or     eax,0x44a6
  40aaf1:	add    BYTE PTR [eax],al
  40aaf3:	add    BYTE PTR [eax],al
  40aaf5:	inc    esp
  40aaf6:	add    DWORD PTR [eax],eax
  40aaf8:	cld    
  40aaf9:	stos   BYTE PTR es:[edi],al
  40aafa:	inc    eax
  40aafb:	add    BYTE PTR [eax],al
  40aafd:	add    BYTE PTR [eax],al
  40aaff:	add    BYTE PTR [eax],al
  40ab01:	inc    esp
  40ab02:	add    DWORD PTR [eax],eax
  40ab04:	or     BYTE PTR [ebx+0x40],ch
  40ab0a:	add    BYTE PTR [eax],al
  40ab0c:	add    BYTE PTR [ecx],dh
  40ab0e:	and    eax,DWORD PTR [eax]
  40ab10:	test   al,0xad
  40ab12:	inc    eax
  40ab13:	add    BYTE PTR [ebx+ebp*4+0x40],bl
	...
  40ab8a:	add    BYTE PTR [eax],al
  40ab8c:	clc    
  40ab8d:	stos   DWORD PTR es:[edi],eax
  40ab8e:	inc    eax
	...
  40ab97:	add    BYTE PTR [eax+0x40ab],dh
  40ab9d:	add    BYTE PTR [eax],al
  40ab9f:	add    BYTE PTR [eax],al
  40aba1:	xor    DWORD PTR [ebx],eax
  40aba3:	add    BYTE PTR [esp+ebp*4+0x40],ah
  40aba7:	add    BYTE PTR [eax],al
  40aba9:	add    BYTE PTR [eax],al
  40abab:	add    BYTE PTR [eax-0x54],al
  40abae:	inc    eax
  40abaf:	add    BYTE PTR [eax],al
  40abb1:	add    BYTE PTR [eax],al
  40abb3:	add    BYTE PTR [eax],al
  40abb5:	inc    esp
  40abb6:	adc    BYTE PTR [eax],al
  40abb8:	pop    ds
  40abb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abba:	inc    esp
	...
  40abf3:	add    BYTE PTR [ecx],bl
  40abf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf6:	inc    esp
  40abf7:	add    BYTE PTR [eax],al
  40abf9:	add    BYTE PTR [eax],al
  40abfb:	add    BYTE PTR [eax],al
  40abfd:	inc    esp
  40abfe:	adc    BYTE PTR [eax],al
  40ac00:	sub    esp,DWORD PTR [esi+0x44]
	...
  40ac3a:	add    BYTE PTR [eax],al
  40ac3c:	and    eax,0x44a6
  40ac41:	add    BYTE PTR [eax],al
  40ac43:	add    BYTE PTR [eax],al
  40ac45:	xor    DWORD PTR [ecx],eax
  40ac47:	add    BYTE PTR [esp+ebp*4+0x40],cl
  40ac4b:	add    BYTE PTR [eax],al
  40ac4d:	add    BYTE PTR [eax],al
  40ac4f:	add    BYTE PTR [eax],al
  40ac51:	push   eax
  40ac52:	add    al,0x0
  40ac54:	mov    eax,0x40ac
  40ac59:	add    BYTE PTR [eax],al
  40ac5b:	add    BYTE PTR [eax],al
  40ac5d:	add    BYTE PTR [eax],al
  40ac5f:	add    BYTE PTR [eax-0x54],dh
  40ac62:	inc    eax
  40ac63:	add    BYTE PTR [eax],al
  40ac65:	add    BYTE PTR [eax],al
  40ac67:	add    BYTE PTR [eax],al
  40ac69:	xor    eax,DWORD PTR [ecx]
  40ac6b:	add    BYTE PTR [eax],al
  40ac6d:	lods   eax,DWORD PTR ds:[esi]
  40ac6e:	inc    eax
  40ac6f:	add    BYTE PTR [eax],al
  40ac71:	add    BYTE PTR [eax],al
  40ac73:	add    BYTE PTR [eax],al
  40ac75:	inc    esp
  40ac76:	adc    BYTE PTR [eax],al
  40ac78:	aaa    
  40ac79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac7a:	inc    esp
	...
  40acb3:	add    BYTE PTR [ecx],dh
  40acb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acb6:	inc    esp
  40acb7:	add    BYTE PTR [eax],al
  40acb9:	add    BYTE PTR [eax],al
  40acbb:	add    BYTE PTR [eax],al
  40acbd:	inc    esp
  40acbe:	adc    BYTE PTR [eax],al
  40acc0:	inc    ebx
  40acc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc2:	inc    esp
	...
  40acfb:	add    BYTE PTR ds:0x44a6,bh
  40ad01:	add    BYTE PTR [eax],al
  40ad03:	add    BYTE PTR [eax],al
  40ad05:	push   eax
  40ad06:	add    al,0x0
  40ad08:	pusha  
  40ad09:	lods   eax,DWORD PTR ds:[esi]
  40ad0a:	inc    eax
	...
  40ad13:	add    BYTE PTR [eax],bl
  40ad15:	lods   eax,DWORD PTR ds:[esi]
  40ad16:	inc    eax
  40ad17:	add    BYTE PTR [eax],al
  40ad19:	add    BYTE PTR [eax],al
  40ad1b:	add    BYTE PTR [eax],al
  40ad1d:	inc    esp
  40ad1e:	adc    BYTE PTR [eax],al
  40ad20:	dec    edi
  40ad21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad22:	inc    esp
	...
  40ad5b:	add    BYTE PTR [ecx-0x5a],cl
  40ad5e:	inc    esp
  40ad5f:	add    BYTE PTR [eax],al
  40ad61:	add    BYTE PTR [eax],al
  40ad63:	add    BYTE PTR [eax],al
  40ad65:	inc    esp
  40ad66:	adc    BYTE PTR [eax],al
  40ad68:	pop    ebx
  40ad69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad6a:	inc    esp
	...
  40ada3:	add    BYTE PTR [ebp-0x5a],dl
  40ada6:	inc    esp
  40ada7:	add    BYTE PTR [eax],al
  40ada9:	add    BYTE PTR [eax],al
  40adab:	add    BYTE PTR [eax],al
  40adad:	xor    eax,DWORD PTR [ecx]
  40adaf:	add    BYTE PTR [ebp+ebp*4+0x40],dh
  40adb6:	add    BYTE PTR [eax],al
  40adb8:	add    BYTE PTR [edx],dh
  40adba:	add    DWORD PTR [eax],eax
  40adbc:	shr    BYTE PTR [ebp+0x40],0x0
  40adc3:	add    BYTE PTR [eax],al
  40adc5:	push   eax
  40adc6:	add    al,0x0
  40adc8:	and    BYTE PTR [esi+0x40],ch
  40adce:	add    BYTE PTR [eax],al
  40add0:	add    BYTE PTR [eax],al
  40add2:	add    BYTE PTR [eax],al
  40add4:	fsubr  DWORD PTR [ebp+0x40]
  40adda:	add    BYTE PTR [eax],al
  40addc:	add    BYTE PTR [eax+edx*1+0x0],al
  40ade0:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ade2:	inc    esp
	...
  40ae1b:	add    BYTE PTR [ecx-0x5a],ah
  40ae1e:	inc    esp
  40ae1f:	add    BYTE PTR [eax],al
  40ae21:	add    BYTE PTR [eax],al
  40ae23:	add    BYTE PTR [eax],al
  40ae25:	inc    esp
  40ae26:	adc    BYTE PTR [eax],al
  40ae28:	jae    0x40add0
  40ae2a:	inc    esp
	...
  40ae63:	add    BYTE PTR [ebp-0x5a],ch
  40ae66:	inc    esp
  40ae67:	add    BYTE PTR [eax],al
  40ae69:	add    BYTE PTR [eax],al
  40ae6b:	add    BYTE PTR [eax],al
  40ae6d:	inc    ecx
  40ae6e:	adc    eax,DWORD PTR [eax]
  40ae70:	int3   
  40ae71:	mov    bl,0x40
	...
  40aeb7:	add    BYTE PTR [esi+ebp*4+0x40],bh
  40aebe:	add    BYTE PTR [eax],al
  40aec0:	add    BYTE PTR [ebp+0x1],dl
  40aec3:	add    al,cl
  40aec5:	scas   al,BYTE PTR es:[edi]
  40aec6:	inc    eax
  40aec7:	add    BYTE PTR [eax],al
  40aec9:	add    BYTE PTR [eax],al
  40aecb:	add    BYTE PTR [eax],al
  40aecd:	inc    edx
  40aece:	add    DWORD PTR [eax],eax
  40aed0:	loopne 0x40ae80
  40aed2:	inc    eax
  40aed3:	add    BYTE PTR [eax],al
  40aed5:	add    BYTE PTR [eax],al
  40aed7:	add    BYTE PTR [eax],al
  40aed9:	inc    esp
  40aeda:	add    DWORD PTR [eax],eax
  40aedc:	je     0x40ae8d
  40aede:	inc    eax
  40aedf:	add    BYTE PTR [eax],al
  40aee1:	add    BYTE PTR [eax],al
  40aee3:	add    BYTE PTR [eax],al
  40aee5:	xor    DWORD PTR [ebx],esp
  40aee7:	add    BYTE PTR [ebx+esi*4],cl
  40aeea:	inc    eax
  40aeeb:	add    BYTE PTR [eax],ah
  40aeed:	mov    dl,0x40
	...
  40af27:	add    ah,dl
  40af29:	scas   al,BYTE PTR es:[edi]
  40af2a:	inc    eax
	...
  40af63:	add    al,cl
  40af65:	scas   eax,DWORD PTR es:[edi]
  40af66:	inc    eax
	...
  40af6f:	add    BYTE PTR [eax+0x40af],al
  40af75:	add    BYTE PTR [eax],al
  40af77:	add    BYTE PTR [eax],al
  40af79:	inc    esp
  40af7a:	add    DWORD PTR [eax],eax
  40af7c:	adc    BYTE PTR [eax+0x40],dh
  40af82:	add    BYTE PTR [eax],al
  40af84:	add    BYTE PTR [eax+edx*1+0x0],al
  40af88:	jg     0x40af30
  40af8a:	inc    esp
	...
  40afc3:	add    BYTE PTR [ecx-0x5a],bh
  40afc6:	inc    esp
  40afc7:	add    BYTE PTR [eax],al
  40afc9:	add    BYTE PTR [eax],al
  40afcb:	add    BYTE PTR [eax],al
  40afcd:	inc    esp
  40afce:	adc    BYTE PTR [eax],al
  40afd0:	mov    esp,DWORD PTR [esi+0x44]
	...
  40b00a:	add    BYTE PTR [eax],al
  40b00c:	test   DWORD PTR [esi+0x44],esp
  40b012:	add    BYTE PTR [eax],al
  40b014:	add    BYTE PTR [ecx],dh
  40b016:	and    BYTE PTR [eax],al
  40b018:	ins    BYTE PTR es:[edi],dx
  40b019:	mov    cl,0x40
  40b01b:	add    al,ah
  40b01d:	mov    al,0x40
	...
  40b093:	add    BYTE PTR [eax+0x40b0],bl
  40b099:	add    BYTE PTR [eax],al
  40b09b:	add    BYTE PTR [eax],al
  40b09d:	inc    esp
  40b09e:	adc    BYTE PTR [eax],al
  40b0a0:	xchg   edi,eax
  40b0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a2:	inc    esp
	...
  40b0db:	add    BYTE PTR [ecx+0x44a6],dl
  40b0e1:	add    BYTE PTR [eax],al
  40b0e3:	add    BYTE PTR [eax],al
  40b0e5:	xor    DWORD PTR [ebx],eax
  40b0e7:	add    BYTE PTR [ecx+esi*4],cl
  40b0ea:	inc    eax
  40b0eb:	add    BYTE PTR [eax],al
  40b0ed:	add    BYTE PTR [eax],al
  40b0ef:	add    ah,dh
  40b0f1:	mov    al,0x40
  40b0f3:	add    BYTE PTR [eax],al
  40b0f5:	add    BYTE PTR [eax],al
  40b0f7:	add    BYTE PTR [eax],al
  40b0f9:	xor    DWORD PTR [ecx],eax
  40b0fb:	add    BYTE PTR [eax],al
  40b0fd:	mov    cl,0x40
  40b0ff:	add    BYTE PTR [eax],al
  40b101:	add    BYTE PTR [eax],al
  40b103:	add    BYTE PTR [eax],al
  40b105:	push   eax
  40b106:	add    DWORD PTR [eax],eax
  40b108:	sbb    BYTE PTR [ecx+0x40],dh
  40b10e:	add    BYTE PTR [eax],al
  40b110:	add    BYTE PTR [ebx],dh
  40b112:	add    DWORD PTR [eax],eax
  40b114:	pusha  
  40b115:	mov    cl,0x40
  40b117:	add    BYTE PTR [eax],al
  40b119:	add    BYTE PTR [eax],al
  40b11b:	add    BYTE PTR [eax],al
  40b11d:	inc    esp
  40b11e:	adc    BYTE PTR [eax],al
  40b120:	mov    ds:0x44a6,eax
	...
  40b159:	add    BYTE PTR [eax],al
  40b15b:	add    BYTE PTR [ebp+0x44a6],bl
  40b161:	add    BYTE PTR [eax],al
  40b163:	add    BYTE PTR [eax],al
  40b165:	push   eax
  40b166:	add    DWORD PTR [eax],eax
  40b168:	js     0x40b11b
  40b16a:	inc    eax
  40b16b:	add    BYTE PTR [eax],al
  40b16d:	add    BYTE PTR [eax],al
  40b16f:	add    BYTE PTR [eax],al
  40b171:	xor    eax,DWORD PTR [ecx]
  40b173:	add    al,al
  40b175:	mov    cl,0x40
  40b177:	add    BYTE PTR [eax],al
  40b179:	add    BYTE PTR [eax],al
  40b17b:	add    BYTE PTR [eax],al
  40b17d:	inc    esp
  40b17e:	adc    BYTE PTR [eax],al
  40b180:	scas   eax,DWORD PTR es:[edi]
  40b181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b182:	inc    esp
	...
  40b1bb:	add    BYTE PTR [ecx+0x44a6],ch
  40b1c1:	add    BYTE PTR [eax],al
  40b1c3:	add    BYTE PTR [eax],al
  40b1c5:	xor    al,BYTE PTR [ecx]
  40b1c7:	add    ah,cl
  40b1c9:	mov    cl,0x40
  40b1cb:	add    BYTE PTR [eax],al
  40b1cd:	add    BYTE PTR [eax],al
  40b1cf:	add    BYTE PTR [eax],al
  40b1d1:	push   eax
  40b1d2:	add    DWORD PTR [eax],eax
  40b1d4:	fdiv   DWORD PTR [ecx+0x40]
  40b1da:	add    BYTE PTR [eax],al
  40b1dc:	add    BYTE PTR [eax+edx*1+0x0],al
  40b1e0:	mov    ebx,0x44a6
	...
  40b219:	add    BYTE PTR [eax],al
  40b21b:	add    BYTE PTR [ebp+0x44a6],dh
  40b221:	add    BYTE PTR [eax],al
  40b223:	add    BYTE PTR [eax],al
  40b225:	xor    DWORD PTR [ebx],eax
  40b227:	add    al,ch
  40b229:	mov    dl,0x40
  40b22b:	add    BYTE PTR [eax],al
  40b22d:	add    BYTE PTR [eax],al
  40b22f:	add    BYTE PTR [edx+esi*4],dh
  40b232:	inc    eax
  40b233:	add    BYTE PTR [eax],al
  40b235:	add    BYTE PTR [eax],al
  40b237:	add    BYTE PTR [eax],al
  40b239:	xor    DWORD PTR [ecx],eax
  40b23b:	add    BYTE PTR [eax-0x4e],al
  40b23e:	inc    eax
  40b23f:	add    BYTE PTR [eax],al
  40b241:	add    BYTE PTR [eax],al
  40b243:	add    BYTE PTR [eax],al
  40b245:	push   eax
  40b246:	add    al,0x0
  40b248:	mov    al,ds:0x40b2
  40b24d:	add    BYTE PTR [eax],al
  40b24f:	add    BYTE PTR [eax],al
  40b251:	add    BYTE PTR [eax],al
  40b253:	add    BYTE PTR [eax-0x4e],bl
  40b256:	inc    eax
  40b257:	add    BYTE PTR [eax],al
  40b259:	add    BYTE PTR [eax],al
  40b25b:	add    BYTE PTR [eax],al
  40b25d:	inc    esp
  40b25e:	adc    BYTE PTR [eax],al
  40b260:	(bad)  
  40b261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b262:	inc    esp
	...
  40b29b:	add    cl,al
  40b29d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b29e:	inc    esp
  40b29f:	add    BYTE PTR [eax],al
  40b2a1:	add    BYTE PTR [eax],al
  40b2a3:	add    BYTE PTR [eax],al
  40b2a5:	inc    esp
  40b2a6:	adc    BYTE PTR [eax],al
  40b2a8:	shl    DWORD PTR [esi+0x44],cl
	...
  40b2e2:	add    BYTE PTR [eax],al
  40b2e4:	int    0xa6
  40b2e6:	inc    esp
  40b2e7:	add    BYTE PTR [eax],al
  40b2e9:	add    BYTE PTR [eax],al
  40b2eb:	add    BYTE PTR [eax],al
  40b2ed:	xor    eax,DWORD PTR [ecx]
  40b2ef:	add    ah,dh
  40b2f1:	mov    dl,0x40
  40b2f3:	add    BYTE PTR [eax],al
  40b2f5:	add    BYTE PTR [eax],al
  40b2f7:	add    BYTE PTR [eax],al
  40b2f9:	push   eax
  40b2fa:	add    al,0x0
  40b2fc:	pusha  
  40b2fd:	mov    bl,0x40
	...
  40b307:	add    BYTE PTR [eax],bl
  40b309:	mov    bl,0x40
  40b30b:	add    BYTE PTR [eax],al
  40b30d:	add    BYTE PTR [eax],al
  40b30f:	add    BYTE PTR [eax],al
  40b311:	xor    eax,DWORD PTR [ecx]
  40b313:	add    BYTE PTR [eax+0x40b3],ch
  40b319:	add    BYTE PTR [eax],al
  40b31b:	add    BYTE PTR [eax],al
  40b31d:	inc    esp
  40b31e:	adc    BYTE PTR [eax],al
  40b320:	fbld   TBYTE PTR [esi+0x44]
	...
  40b35a:	add    BYTE PTR [eax],al
  40b35c:	fldenv [esi+0x44]
  40b362:	add    BYTE PTR [eax],al
  40b364:	add    BYTE PTR [eax+edx*1+0x0],al
  40b368:	jmp    0x40b310
  40b36a:	inc    esp
	...
  40b3a3:	add    ch,ah
  40b3a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3a6:	inc    esp
  40b3a7:	add    BYTE PTR [eax],al
  40b3a9:	add    BYTE PTR [eax],al
  40b3ab:	add    BYTE PTR [eax],al
  40b3ad:	xor    al,BYTE PTR [ecx]
  40b3af:	add    BYTE PTR [ebx+esi*4+0x40],dh
  40b3b6:	add    BYTE PTR [eax],al
  40b3b8:	add    BYTE PTR [eax+0x4],dl
  40b3bb:	add    BYTE PTR [eax],ah
  40b3bd:	mov    ah,0x40
	...
  40b3c7:	add    al,bl
  40b3c9:	mov    bl,0x40
  40b3cb:	add    BYTE PTR [eax],al
  40b3cd:	add    BYTE PTR [eax],al
  40b3cf:	add    BYTE PTR [eax],al
  40b3d1:	inc    esp
  40b3d2:	add    DWORD PTR [eax],eax
  40b3d4:	push   0x40b4
  40b3d9:	add    BYTE PTR [eax],al
  40b3db:	add    BYTE PTR [eax],al
  40b3dd:	inc    esp
  40b3de:	adc    BYTE PTR [eax],al
  40b3e0:	mul    DWORD PTR [esi+0x44]
	...
  40b41a:	add    BYTE PTR [eax],al
  40b41c:	icebp  
  40b41d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b41e:	inc    esp
  40b41f:	add    BYTE PTR [eax],al
  40b421:	add    BYTE PTR [eax],al
  40b423:	add    BYTE PTR [eax],al
  40b425:	inc    esp
  40b426:	adc    BYTE PTR [eax],al
  40b428:	add    esp,DWORD PTR [edi+0x44]
	...
  40b462:	add    BYTE PTR [eax],al
  40b464:	std    
  40b465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b466:	inc    esp
  40b467:	add    BYTE PTR [eax],al
  40b469:	add    BYTE PTR [eax],al
  40b46b:	add    BYTE PTR [eax],al
  40b46d:	inc    esp
  40b46e:	add    DWORD PTR [eax],eax
  40b470:	xor    BYTE PTR [eax+eax*2+0x0],0x0
  40b478:	add    BYTE PTR [edx+0x1],al
  40b47b:	add    BYTE PTR [eax-0x4b],bh
  40b47e:	inc    eax
  40b47f:	add    BYTE PTR [eax],al
  40b481:	add    BYTE PTR [eax],al
  40b483:	add    BYTE PTR [eax],al
  40b485:	xor    DWORD PTR [ebx],esp
  40b487:	add    BYTE PTR [eax],bh
  40b489:	mov    ecx,0xb72c0040
  40b48e:	inc    eax
	...
  40b503:	add    BYTE PTR [eax+0x40b7],cl
  40b509:	add    BYTE PTR [eax],al
  40b50b:	add    BYTE PTR [eax],al
  40b50d:	add    BYTE PTR [eax],al
  40b50f:	add    BYTE PTR [eax],ch
  40b511:	mov    ch,0x40
  40b513:	add    BYTE PTR [eax],al
  40b515:	add    BYTE PTR [eax],al
  40b517:	add    BYTE PTR [eax],al
  40b519:	xor    DWORD PTR [ebx],eax
  40b51b:	add    BYTE PTR [eax+0x40b6],ch
  40b521:	add    BYTE PTR [eax],al
  40b523:	add    BYTE PTR [eax-0x4a],cl
  40b526:	inc    eax
  40b527:	add    BYTE PTR [eax],al
  40b529:	add    BYTE PTR [eax],al
  40b52b:	add    BYTE PTR [eax],al
  40b52d:	inc    esp
  40b52e:	adc    al,BYTE PTR [eax]
  40b530:	aas    
  40b531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b532:	inc    esp
	...
  40b56b:	add    BYTE PTR [ecx],bh
  40b56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b56e:	inc    esp
  40b56f:	add    BYTE PTR [eax],al
  40b571:	add    BYTE PTR [eax],al
  40b573:	add    BYTE PTR [esp+esi*4+0x40],dh
  40b577:	add    BYTE PTR [eax],al
  40b579:	add    BYTE PTR [eax],al
  40b57b:	add    BYTE PTR [eax],al
  40b57d:	xor    DWORD PTR [eax],esp
  40b57f:	add    BYTE PTR [eax],cl
  40b581:	mov    bh,0x40
  40b583:	add    BYTE PTR [esi*4+0x40],dl
	...
  40b5fa:	add    BYTE PTR [eax],al
  40b5fc:	add    BYTE PTR [esi+0x40],dh
  40b602:	add    BYTE PTR [eax],al
  40b604:	add    BYTE PTR [eax+edx*1+0x0],al
  40b608:	xstore-rng (bad)
  40b609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b60a:	inc    esp
	...
  40b643:	add    BYTE PTR [ecx],cl
  40b645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b646:	inc    esp
  40b647:	add    BYTE PTR [eax],al
  40b649:	add    BYTE PTR [eax],al
  40b64b:	add    BYTE PTR [eax],al
  40b64d:	xor    DWORD PTR [ecx],eax
  40b64f:	add    BYTE PTR [esi+esi*4+0x40],dl
  40b653:	add    BYTE PTR [eax],al
  40b655:	add    BYTE PTR [eax],al
  40b657:	add    BYTE PTR [eax],al
  40b659:	push   eax
  40b65a:	add    DWORD PTR [eax],eax
  40b65c:	pusha  
  40b65d:	mov    dh,0x40
  40b65f:	add    BYTE PTR [eax],al
  40b661:	add    BYTE PTR [eax],al
  40b663:	add    BYTE PTR [eax],al
  40b665:	inc    esp
  40b666:	adc    BYTE PTR [eax],al
  40b668:	sbb    esp,DWORD PTR [edi+0x44]
	...
  40b6a2:	add    BYTE PTR [eax],al
  40b6a4:	adc    eax,0x44a7
  40b6a9:	add    BYTE PTR [eax],al
  40b6ab:	add    BYTE PTR [eax],al
  40b6ad:	xor    eax,DWORD PTR [ecx]
  40b6af:	add    BYTE PTR [esi+esi*4+0x40],dh
  40b6b6:	add    BYTE PTR [eax],al
  40b6b8:	add    BYTE PTR [eax+0x1],dl
  40b6bb:	add    al,al
  40b6bd:	mov    dh,0x40
  40b6bf:	add    BYTE PTR [eax],al
  40b6c1:	add    BYTE PTR [eax],al
  40b6c3:	add    BYTE PTR [eax],al
  40b6c5:	inc    esp
  40b6c6:	adc    BYTE PTR [eax],al
  40b6c8:	daa    
  40b6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ca:	inc    esp
	...
  40b703:	add    BYTE PTR [ecx],ah
  40b705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b706:	inc    esp
  40b707:	add    BYTE PTR [eax],al
  40b709:	add    BYTE PTR [eax],al
  40b70b:	add    BYTE PTR [eax],al
  40b70d:	xor    eax,DWORD PTR [ecx]
  40b70f:	add    BYTE PTR [edi+esi*4],dl
  40b712:	inc    eax
  40b713:	add    BYTE PTR [eax],al
  40b715:	add    BYTE PTR [eax],al
  40b717:	add    BYTE PTR [eax],al
  40b719:	xor    al,BYTE PTR [ecx]
  40b71b:	add    BYTE PTR [eax],ah
  40b71d:	mov    bh,0x40
  40b71f:	add    BYTE PTR [eax],al
  40b721:	add    BYTE PTR [eax],al
  40b723:	add    BYTE PTR [eax],al
  40b725:	push   eax
  40b726:	add    DWORD PTR [eax],eax
  40b728:	inc    eax
  40b729:	mov    bh,0x40
  40b72b:	add    BYTE PTR [eax],al
  40b72d:	add    BYTE PTR [eax],al
  40b72f:	add    BYTE PTR [eax],al
  40b731:	xor    DWORD PTR [ebx],eax
  40b733:	add    ah,dh
  40b735:	mov    bh,0x40
  40b737:	add    BYTE PTR [eax],al
  40b739:	add    BYTE PTR [eax],al
  40b73b:	add    al,dl
  40b73d:	mov    bh,0x40
  40b73f:	add    BYTE PTR [eax],al
  40b741:	add    BYTE PTR [eax],al
  40b743:	add    BYTE PTR [eax],al
  40b745:	inc    esp
  40b746:	adc    BYTE PTR [eax],al
  40b748:	xor    esp,DWORD PTR [edi+0x44]
	...
  40b782:	add    BYTE PTR [eax],al
  40b784:	sub    eax,0x44a7
  40b789:	add    BYTE PTR [eax],al
  40b78b:	add    BYTE PTR [eax],al
  40b78d:	inc    esp
  40b78e:	adc    BYTE PTR [eax],al
  40b790:	dec    ebx
  40b791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b792:	inc    esp
	...
  40b7cb:	add    BYTE PTR [ebp-0x59],al
  40b7ce:	inc    esp
  40b7cf:	add    BYTE PTR [eax],al
  40b7d1:	add    BYTE PTR [eax],al
  40b7d3:	add    BYTE PTR [eax],al
  40b7d5:	xor    DWORD PTR [ecx],eax
  40b7d7:	add    ah,bl
  40b7d9:	mov    bh,0x40
  40b7db:	add    BYTE PTR [eax],al
  40b7dd:	add    BYTE PTR [eax],al
  40b7df:	add    BYTE PTR [eax],al
  40b7e1:	push   eax
  40b7e2:	add    al,0x0
  40b7e4:	dec    eax
  40b7e5:	mov    eax,0x40
  40b7ea:	add    BYTE PTR [eax],al
  40b7ec:	add    BYTE PTR [eax],al
  40b7ee:	add    BYTE PTR [eax],al
  40b7f0:	add    BYTE PTR [eax+0x40],bh
  40b7f6:	add    BYTE PTR [eax],al
  40b7f8:	add    BYTE PTR [ebx],dh
  40b7fa:	add    DWORD PTR [eax],eax
  40b7fc:	nop
  40b7fd:	mov    eax,0x40
  40b802:	add    BYTE PTR [eax],al
  40b804:	add    BYTE PTR [eax+edx*1+0x0],al
  40b808:	push   edi
  40b809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b80a:	inc    esp
	...
  40b843:	add    BYTE PTR [ecx-0x59],dl
  40b846:	inc    esp
  40b847:	add    BYTE PTR [eax],al
  40b849:	add    BYTE PTR [eax],al
  40b84b:	add    BYTE PTR [eax],al
  40b84d:	inc    esp
  40b84e:	adc    BYTE PTR [eax],al
  40b850:	arpl   WORD PTR [edi+0x44],sp
	...
  40b88a:	add    BYTE PTR [eax],al
  40b88c:	pop    ebp
  40b88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b88e:	inc    esp
  40b88f:	add    BYTE PTR [eax],al
  40b891:	add    BYTE PTR [eax],al
  40b893:	add    BYTE PTR [eax],al
  40b895:	push   eax
  40b896:	add    al,0x0
  40b898:	lock mov eax,0x40
  40b89e:	add    BYTE PTR [eax],al
  40b8a0:	add    BYTE PTR [eax],al
  40b8a2:	add    BYTE PTR [eax],al
  40b8a4:	test   al,0xb8
  40b8a6:	inc    eax
  40b8a7:	add    BYTE PTR [eax],al
  40b8a9:	add    BYTE PTR [eax],al
  40b8ab:	add    BYTE PTR [eax],al
  40b8ad:	inc    esp
  40b8ae:	adc    BYTE PTR [eax],al
  40b8b0:	outs   dx,DWORD PTR ds:[esi]
  40b8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8b2:	inc    esp
	...
  40b8eb:	add    BYTE PTR [ecx-0x59],ch
  40b8ee:	inc    esp
  40b8ef:	add    BYTE PTR [eax],al
  40b8f1:	add    BYTE PTR [eax],al
  40b8f3:	add    BYTE PTR [eax],al
  40b8f5:	inc    esp
  40b8f6:	adc    BYTE PTR [eax],al
  40b8f8:	jnp    0x40b8a1
  40b8fa:	inc    esp
	...
  40b933:	add    BYTE PTR [ebp-0x59],dh
  40b936:	inc    esp
  40b937:	add    BYTE PTR [eax],al
  40b939:	add    BYTE PTR [eax],al
  40b93b:	add    BYTE PTR [eax],al
  40b93d:	xor    eax,DWORD PTR [ecx]
  40b93f:	add    BYTE PTR [ecx+edi*4+0x40],al
  40b943:	add    BYTE PTR [eax],al
  40b945:	add    BYTE PTR [eax],al
  40b947:	add    BYTE PTR [eax],al
  40b949:	xor    al,BYTE PTR [ecx]
  40b94b:	add    BYTE PTR [eax-0x47],dl
  40b94e:	inc    eax
  40b94f:	add    BYTE PTR [eax],al
  40b951:	add    BYTE PTR [eax],al
  40b953:	add    BYTE PTR [eax],al
  40b955:	push   eax
  40b956:	add    al,0x0
  40b958:	mov    al,0xb9
  40b95a:	inc    eax
	...
  40b963:	add    BYTE PTR [eax-0x47],ch
  40b966:	inc    eax
  40b967:	add    BYTE PTR [eax],al
  40b969:	add    BYTE PTR [eax],al
  40b96b:	add    BYTE PTR [eax],al
  40b96d:	inc    esp
  40b96e:	adc    BYTE PTR [eax],al
  40b970:	xchg   DWORD PTR [edi+0x44],esp
	...
  40b9aa:	add    BYTE PTR [eax],al
  40b9ac:	and    DWORD PTR [edi+0x44],0x44000000
  40b9b6:	adc    BYTE PTR [eax],al
  40b9b8:	xchg   ebx,eax
  40b9b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ba:	inc    esp
	...
  40b9f3:	add    BYTE PTR [ebp+0x44a7],cl
  40b9f9:	add    BYTE PTR [eax],al
  40b9fb:	add    BYTE PTR [eax],al
  40b9fd:	push   edx
  40b9fe:	pop    es
  40b9ff:	add    BYTE PTR [edx+edi*4+0x40],cl
	...
  40ba16:	add    BYTE PTR [eax],al
  40ba18:	sbb    al,0xba
  40ba1a:	inc    eax
  40ba1b:	add    BYTE PTR [eax],al
  40ba1d:	add    BYTE PTR [eax],al
  40ba1f:	add    BYTE PTR [eax],al
  40ba21:	push   esp
  40ba22:	add    DWORD PTR [eax],eax
  40ba24:	sub    BYTE PTR [edx+0x40],bh
  40ba2a:	add    BYTE PTR [eax],al
  40ba2c:	add    BYTE PTR [edx+0x1],dl
  40ba2f:	add    BYTE PTR [edx+edi*4],dh
  40ba32:	inc    eax
  40ba33:	add    BYTE PTR [eax],al
  40ba35:	add    BYTE PTR [eax],al
  40ba37:	add    BYTE PTR [eax],al
  40ba39:	inc    ecx
  40ba3a:	add    DWORD PTR [eax],eax
  40ba3c:	inc    eax
  40ba3d:	mov    edx,0x40
  40ba42:	add    BYTE PTR [eax],al
  40ba44:	add    BYTE PTR [ebx+0x1],al
  40ba47:	add    BYTE PTR [edx+edi*4+0x40],cl
  40ba4b:	add    BYTE PTR [eax],al
  40ba4d:	add    BYTE PTR [eax],al
  40ba4f:	add    BYTE PTR [eax],al
  40ba51:	push   esp
  40ba52:	add    DWORD PTR [eax],eax
  40ba54:	pop    eax
  40ba55:	mov    edx,0x40
  40ba5a:	add    BYTE PTR [eax],al
  40ba5c:	add    BYTE PTR [esi+0xb],al
  40ba5f:	add    BYTE PTR [edi+0x44a7],ah
  40ba65:	add    BYTE PTR [eax],al
  40ba67:	add    BYTE PTR [eax],al
  40ba69:	add    BYTE PTR [eax],al
  40ba6b:	add    BYTE PTR [edi+0x44a7],bl
	...
  40ba85:	add    BYTE PTR [eax],al
  40ba87:	add    BYTE PTR [ecx+0x44a7],bl
  40ba8d:	add    BYTE PTR [eax],al
  40ba8f:	add    BYTE PTR [eax],al
  40ba91:	push   edx
  40ba92:	push   es
  40ba93:	add    BYTE PTR [ebp+0x44a7],dh
	...
  40baa5:	add    BYTE PTR [eax],al
  40baa7:	add    BYTE PTR [edi+0x44a7],ch
  40baad:	add    BYTE PTR [eax],al
  40baaf:	add    BYTE PTR [eax],al
  40bab1:	dec    ecx
  40bab2:	or     BYTE PTR [eax],al
  40bab4:	sub    BYTE PTR [ebx+0x40],bh
	...
  40bace:	add    BYTE PTR [eax],al
  40bad0:	aam    0xba
  40bad2:	inc    eax
  40bad3:	add    BYTE PTR [eax],al
  40bad5:	add    BYTE PTR [eax],al
  40bad7:	add    BYTE PTR [eax],al
  40bad9:	push   eax
  40bada:	add    DWORD PTR [eax],eax
  40badc:	loopne 0x40ba98
  40bade:	inc    eax
  40badf:	add    BYTE PTR [eax],al
  40bae1:	add    BYTE PTR [eax],al
  40bae3:	add    BYTE PTR [eax],al
  40bae5:	inc    esp
  40bae6:	adc    BYTE PTR [eax],al
  40bae8:	shl    DWORD PTR [edi+0x44],0x0
	...
  40bb23:	add    BYTE PTR [ebx+0x44a7],bh
  40bb29:	add    BYTE PTR [eax],al
  40bb2b:	add    BYTE PTR [eax],al
  40bb2d:	push   esi
  40bb2e:	add    DWORD PTR [eax],eax
  40bb30:	xor    al,0xbb
  40bb32:	inc    eax
  40bb33:	add    BYTE PTR [eax],al
  40bb35:	add    BYTE PTR [eax],al
  40bb37:	add    BYTE PTR [eax],al
  40bb39:	push   eax
  40bb3a:	add    al,0x0
  40bb3c:	mov    al,ds:0x40bb
  40bb41:	add    BYTE PTR [eax],al
  40bb43:	add    BYTE PTR [eax],al
  40bb45:	add    BYTE PTR [eax],al
  40bb47:	add    BYTE PTR [eax-0x45],bl
  40bb4a:	inc    eax
  40bb4b:	add    BYTE PTR [eax],al
  40bb4d:	add    BYTE PTR [eax],al
  40bb4f:	add    BYTE PTR [eax],al
  40bb51:	push   esp
  40bb52:	add    DWORD PTR [eax],eax
  40bb54:	sbb    BYTE PTR [eax+eax*2+0x0],bh
  40bb5b:	add    BYTE PTR [eax],al
  40bb5d:	inc    esp
  40bb5e:	adc    BYTE PTR [eax],al
  40bb60:	int    0xa7
  40bb62:	inc    esp
	...
  40bb9b:	add    bh,al
  40bb9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb9e:	inc    esp
  40bb9f:	add    BYTE PTR [eax],al
  40bba1:	add    BYTE PTR [eax],al
  40bba3:	add    BYTE PTR [eax],al
  40bba5:	inc    esp
  40bba6:	adc    BYTE PTR [eax],al
  40bba8:	fldenv [edi+0x44]
	...
  40bbe2:	add    BYTE PTR [eax],al
  40bbe4:	shl    DWORD PTR [edi+0x44],cl
  40bbea:	add    BYTE PTR [eax],al
  40bbec:	add    BYTE PTR [ebp+0xa],cl
  40bbef:	add    BYTE PTR [edi+edi*4+0x40],bh
  40bbf6:	add    BYTE PTR [eax],al
  40bbf8:	cwde   
  40bbf9:	mov    edi,0x40
	...
  40bc12:	add    BYTE PTR [eax],al
  40bc14:	dec    esp
  40bc15:	mov    ebx,0x40
  40bc1a:	add    BYTE PTR [eax],al
  40bc1c:	add    BYTE PTR [ecx+edx*1+0x0],al
  40bc20:	sub    al,0xbf
  40bc22:	inc    eax
	...
  40bc4f:	add    BYTE PTR [eax],bh
  40bc51:	mov    esi,0x40
  40bc56:	add    BYTE PTR [eax],al
  40bc58:	add    BYTE PTR [eax],al
  40bc5a:	add    BYTE PTR [eax],al
  40bc5c:	sbb    BYTE PTR [ebp-0x439bffc0],bh
  40bc62:	inc    eax
  40bc63:	add    BYTE PTR [eax],al
  40bc65:	add    BYTE PTR [eax],al
  40bc67:	add    BYTE PTR [eax],al
  40bc69:	push   eax
  40bc6a:	add    al,0x0
  40bc6c:	sar    BYTE PTR [eax+eax*2+0x0],1
  40bc73:	add    BYTE PTR [eax],al
  40bc75:	add    BYTE PTR [eax],al
  40bc77:	add    BYTE PTR [eax+0x40bc],cl
  40bc7d:	add    BYTE PTR [eax],al
  40bc7f:	add    BYTE PTR [eax],al
  40bc81:	xor    al,BYTE PTR [ecx]
  40bc83:	add    BYTE PTR [eax-0x43],ah
  40bc86:	inc    eax
  40bc87:	add    BYTE PTR [eax],al
  40bc89:	add    BYTE PTR [eax],al
  40bc8b:	add    BYTE PTR [eax],al
  40bc8d:	inc    esp
  40bc8e:	adc    BYTE PTR [eax],al
  40bc90:	out    0xa7,eax
  40bc92:	inc    esp
	...
  40bccb:	add    bh,bl
  40bccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcce:	inc    esp
  40bccf:	add    BYTE PTR [eax],al
  40bcd1:	add    BYTE PTR [eax],al
  40bcd3:	add    BYTE PTR [eax],al
  40bcd5:	inc    esp
  40bcd6:	adc    BYTE PTR [eax],al
  40bcd8:	mul    DWORD PTR [edi+0x44]
	...
  40bd12:	add    BYTE PTR [eax],al
  40bd14:	out    dx,eax
  40bd15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd16:	inc    esp
  40bd17:	add    BYTE PTR [eax],al
  40bd19:	add    BYTE PTR [eax],al
  40bd1b:	add    BYTE PTR [eax],al
  40bd1d:	inc    esp
  40bd1e:	adc    BYTE PTR [eax],al
  40bd20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd21:	mov    ebp,0x40
	...
  40bd32:	add    BYTE PTR [eax],al
  40bd34:	mov    WORD PTR [ebp+0x40],?
	...
  40bd5a:	add    BYTE PTR [eax],al
  40bd5c:	jl     0x40bd1a
  40bd5e:	inc    eax
  40bd5f:	add    BYTE PTR [eax],al
  40bd61:	add    BYTE PTR [eax],al
  40bd63:	add    BYTE PTR [eax],al
  40bd65:	push   ebx
  40bd66:	add    DWORD PTR [eax],eax
  40bd68:	ins    BYTE PTR es:[edi],dx
  40bd69:	mov    ebp,0x40
  40bd6e:	add    BYTE PTR [eax],al
  40bd70:	add    BYTE PTR [esi+eax*1+0x0],al
  40bd74:	add    eax,0x44a8
	...
  40bd85:	add    BYTE PTR [eax],al
  40bd87:	add    bh,bh
  40bd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd8a:	inc    esp
  40bd8b:	add    BYTE PTR [eax],al
  40bd8d:	add    BYTE PTR [eax],al
  40bd8f:	add    BYTE PTR [eax],al
  40bd91:	xor    al,BYTE PTR [ecx]
  40bd93:	add    BYTE PTR [eax+0x40bd],bl
  40bd99:	add    BYTE PTR [eax],al
  40bd9b:	add    BYTE PTR [eax],al
  40bd9d:	push   ebx
  40bd9e:	add    DWORD PTR [eax],eax
  40bda0:	mov    al,0xbd
  40bda2:	inc    eax
  40bda3:	add    BYTE PTR [eax],al
  40bda5:	add    BYTE PTR [eax],al
  40bda7:	add    BYTE PTR [eax],al
  40bda9:	xor    al,BYTE PTR [ecx]
  40bdab:	add    al,bh
  40bdad:	mov    ebp,0x40
  40bdb2:	add    BYTE PTR [eax],al
  40bdb4:	add    BYTE PTR [eax+edx*1+0x0],al
  40bdb8:	adc    DWORD PTR [eax+0x44],ebp
	...
  40bdf2:	add    BYTE PTR [eax],al
  40bdf4:	or     ebp,DWORD PTR [eax+0x44]
  40bdfa:	add    BYTE PTR [eax],al
  40bdfc:	add    BYTE PTR [ebx+0x1],dl
  40bdff:	add    BYTE PTR [esi+edi*4],al
  40be02:	inc    eax
  40be03:	add    BYTE PTR [eax],al
  40be05:	add    BYTE PTR [eax],al
  40be07:	add    BYTE PTR [eax],al
  40be09:	dec    ecx
  40be0a:	or     eax,DWORD PTR [eax]
  40be0c:	sbb    eax,0x44a8
	...
  40be31:	add    BYTE PTR [eax],al
  40be33:	add    BYTE PTR [edi],dl
  40be35:	test   al,0x44
  40be37:	add    BYTE PTR [eax],al
  40be39:	add    BYTE PTR [eax],al
  40be3b:	add    BYTE PTR [eax],al
  40be3d:	inc    esp
  40be3e:	adc    BYTE PTR [eax],al
  40be40:	in     al,0xbe
  40be42:	inc    eax
	...
  40be4f:	add    BYTE PTR ds:0x44a8,dh
	...
  40be79:	add    BYTE PTR [eax],al
  40be7b:	add    BYTE PTR [eax+0x40be],al
  40be81:	add    BYTE PTR [eax],al
  40be83:	add    BYTE PTR [eax],al
  40be85:	xor    al,BYTE PTR [ecx]
  40be87:	add    BYTE PTR [esi+edi*4+0x40],cl
  40be8e:	add    BYTE PTR [eax],al
  40be90:	add    BYTE PTR [ebp+ecx*1+0x0],al
  40be94:	das    
  40be95:	test   al,0x44
	...
  40bec3:	add    al,cl
  40bec5:	mov    esi,0x40
  40beca:	add    BYTE PTR [eax],al
  40becc:	add    BYTE PTR [ebp+eax*1+0x0],al
  40bed0:	sub    DWORD PTR [eax+0x44],ebp
	...
  40bede:	add    BYTE PTR [eax],al
  40bee0:	and    ebp,DWORD PTR [eax+0x44]
  40bee6:	add    BYTE PTR [eax],al
  40bee8:	add    BYTE PTR [edx],dh
  40beea:	add    DWORD PTR [eax],eax
  40beec:	lock mov esi,0x40
  40bef2:	add    BYTE PTR [eax],al
  40bef4:	add    BYTE PTR [ebp+ecx*1+0x0],al
  40bef8:	inc    ebx
  40bef9:	test   al,0x44
	...
  40bf27:	add    BYTE PTR ds:0x44a8,bh
  40bf2d:	add    BYTE PTR [eax],al
  40bf2f:	add    BYTE PTR [eax],al
  40bf31:	push   ecx
  40bf32:	add    DWORD PTR [eax],eax
  40bf34:	cmp    BYTE PTR [edi+0x40],bh
  40bf3a:	add    BYTE PTR [eax],al
  40bf3c:	add    BYTE PTR [edx],dh
  40bf3e:	add    DWORD PTR [eax],eax
  40bf40:	inc    esp
  40bf41:	mov    edi,0x40
  40bf46:	add    BYTE PTR [eax],al
  40bf48:	add    BYTE PTR [eax+0x1],dl
  40bf4b:	add    BYTE PTR [eax-0x41],dl
  40bf4e:	inc    eax
  40bf4f:	add    BYTE PTR [eax],al
  40bf51:	add    BYTE PTR [eax],al
  40bf53:	add    BYTE PTR [eax],al
  40bf55:	inc    esp
  40bf56:	adc    BYTE PTR [eax],al
  40bf58:	dec    edi
  40bf59:	test   al,0x44
	...
  40bf93:	add    BYTE PTR [ecx-0x58],cl
  40bf96:	inc    esp
  40bf97:	add    BYTE PTR [eax],al
  40bf99:	add    BYTE PTR [eax],al
  40bf9b:	add    BYTE PTR [eax],al
  40bf9d:	dec    ebp
  40bf9e:	add    DWORD PTR [eax],eax
  40bfa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa1:	mov    edi,0x40
  40bfa6:	add    BYTE PTR [eax],al
  40bfa8:	add    BYTE PTR [ecx+0x1],cl
  40bfab:	add    BYTE PTR [eax+0x40bf],dh
  40bfb1:	add    BYTE PTR [eax],al
  40bfb3:	add    BYTE PTR [eax],al
  40bfb5:	push   ebx
  40bfb6:	add    DWORD PTR [eax],eax
  40bfb8:	enter  0x40bf,0x0
  40bfbc:	add    BYTE PTR [eax],al
  40bfbe:	add    BYTE PTR [eax],al
  40bfc0:	add    BYTE PTR [eax+0x1],dl
  40bfc3:	add    BYTE PTR [eax],dl
  40bfc5:	rol    BYTE PTR [eax+0x0],0x0
  40bfc9:	add    BYTE PTR [eax],al
  40bfcb:	add    BYTE PTR [eax],al
  40bfcd:	inc    esp
  40bfce:	adc    BYTE PTR [eax],al
  40bfd0:	pop    ebx
  40bfd1:	test   al,0x44
	...
  40c00b:	add    BYTE PTR [ebp-0x58],dl
  40c00e:	inc    esp
  40c00f:	add    BYTE PTR [eax],al
  40c011:	add    BYTE PTR [eax],al
  40c013:	add    BYTE PTR [eax],al
  40c015:	inc    ebp
  40c016:	adc    DWORD PTR [eax],eax
  40c018:	clc    
  40c019:	fadd   DWORD PTR [eax+0x0]
  40c01c:	xor    bh,dl
  40c01e:	inc    eax
  40c01f:	add    BYTE PTR [eax+0x40d3],bh
	...
  40c031:	add    BYTE PTR [eax],al
  40c033:	add    BYTE PTR [eax-0x30],al
  40c036:	inc    eax
  40c037:	add    BYTE PTR [eax],al
  40c039:	add    BYTE PTR [eax],al
  40c03b:	add    BYTE PTR [eax],cl
  40c03d:	mov    BYTE PTR [eax+0x0],0xb4
  40c041:	ret    0x40
  40c044:	sub    ah,al
  40c046:	inc    eax
	...
  40c04f:	add    al,ah
  40c051:	ret    
  40c052:	inc    eax
  40c053:	add    BYTE PTR [eax],bl
  40c055:	ret    0x40
  40c058:	pop    esp
  40c059:	rol    BYTE PTR [eax+0x0],0x0
  40c05d:	add    BYTE PTR [eax],al
  40c05f:	add    BYTE PTR [eax],al
  40c061:	dec    esi
  40c062:	add    DWORD PTR [eax],eax
  40c064:	push   0x40c0
  40c069:	add    BYTE PTR [eax],al
  40c06b:	add    BYTE PTR [eax],al
  40c06d:	dec    edi
  40c06e:	add    DWORD PTR [eax],eax
  40c070:	je     0x40c032
  40c072:	inc    eax
  40c073:	add    BYTE PTR [eax],al
  40c075:	add    BYTE PTR [eax],al
  40c077:	add    BYTE PTR [eax],al
  40c079:	push   edx
  40c07a:	add    DWORD PTR [eax],eax
  40c07c:	add    al,0x40
  40c07f:	add    BYTE PTR [eax],al
  40c081:	add    BYTE PTR [eax],al
  40c083:	add    BYTE PTR [eax],al
  40c085:	inc    esp
  40c086:	add    DWORD PTR [eax],eax
  40c088:	cwde   
  40c089:	rol    BYTE PTR [eax+0x0],0x0
  40c08d:	add    BYTE PTR [eax],al
  40c08f:	add    BYTE PTR [eax],al
  40c091:	push   ebx
  40c092:	add    DWORD PTR [eax],eax
  40c094:	loopne 0x40c056
  40c096:	inc    eax
  40c097:	add    BYTE PTR [eax],al
  40c099:	add    BYTE PTR [eax],al
  40c09b:	add    BYTE PTR [eax],al
  40c09d:	push   eax
  40c09e:	adc    BYTE PTR [eax],al
  40c0a0:	rol    cl,1
  40c0a2:	inc    eax
	...
  40c0ab:	add    BYTE PTR [eax+0x40c1],cl
	...
  40c0d9:	add    BYTE PTR [eax],al
  40c0db:	add    BYTE PTR [eax+eax*8+0x40],cl
  40c0e2:	add    BYTE PTR [eax],al
  40c0e4:	add    BYTE PTR [eax+0x4],dl
  40c0e7:	add    BYTE PTR [eax-0x3f],al
  40c0ea:	inc    eax
	...
  40c0f3:	add    al,bh
  40c0f5:	rol    BYTE PTR [eax+0x0],0x0
  40c0f9:	add    BYTE PTR [eax],al
  40c0fb:	add    BYTE PTR [eax],al
  40c0fd:	inc    esp
  40c0fe:	adc    BYTE PTR [eax],al
  40c100:	addr16 test al,0x44
	...
  40c13b:	add    BYTE PTR [ecx-0x58],ah
  40c13e:	inc    esp
  40c13f:	add    BYTE PTR [eax],al
  40c141:	add    BYTE PTR [eax],al
  40c143:	add    BYTE PTR [eax],al
  40c145:	inc    esp
  40c146:	adc    BYTE PTR [eax],al
  40c148:	jae    0x40c0f2
  40c14a:	inc    esp
	...
  40c183:	add    BYTE PTR [ebp-0x58],ch
  40c186:	inc    esp
  40c187:	add    BYTE PTR [eax],al
  40c189:	add    BYTE PTR [eax],al
  40c18b:	add    BYTE PTR [eax],al
  40c18d:	inc    esp
  40c18e:	adc    BYTE PTR [eax],al
  40c190:	jg     0x40c13a
  40c192:	inc    esp
	...
  40c1cb:	add    BYTE PTR [ecx-0x58],bh
  40c1ce:	inc    esp
  40c1cf:	add    BYTE PTR [eax],al
  40c1d1:	add    BYTE PTR [eax],al
  40c1d3:	add    BYTE PTR [eax],al
  40c1d5:	inc    esp
  40c1d6:	adc    BYTE PTR [eax],al
  40c1d8:	mov    ebp,DWORD PTR [eax+0x44]
	...
  40c212:	add    BYTE PTR [eax],al
  40c214:	test   DWORD PTR [eax+0x44],ebp
  40c21a:	add    BYTE PTR [eax],al
  40c21c:	add    BYTE PTR [edx+0x1],dl
  40c21f:	add    BYTE PTR [edx+eax*8],ah
  40c222:	inc    eax
  40c223:	add    BYTE PTR [eax],al
  40c225:	add    BYTE PTR [eax],al
  40c227:	add    BYTE PTR [eax],al
  40c229:	push   ebp
  40c22a:	add    DWORD PTR [eax],eax
  40c22c:	xor    dl,al
  40c22e:	inc    eax
  40c22f:	add    BYTE PTR [eax],al
  40c231:	add    BYTE PTR [eax],al
  40c233:	add    BYTE PTR [eax],al
  40c235:	inc    ebp
  40c236:	add    DWORD PTR [eax],eax
  40c238:	dec    eax
  40c239:	ret    0x40
  40c23c:	add    BYTE PTR [eax],al
  40c23e:	add    BYTE PTR [eax],al
  40c240:	add    BYTE PTR [ebp+0x1],dl
  40c243:	add    BYTE PTR [eax+0x40c2],dl
  40c249:	add    BYTE PTR [eax],al
  40c24b:	add    BYTE PTR [eax],al
  40c24d:	push   eax
  40c24e:	adc    BYTE PTR [eax],al
  40c250:	cwde   
  40c251:	ret    
  40c252:	inc    eax
	...
  40c25b:	add    BYTE PTR [eax-0x3d],dl
  40c25e:	inc    eax
	...
  40c28b:	add    BYTE PTR [edx+eax*8],bh
  40c28e:	inc    eax
  40c28f:	add    BYTE PTR [eax],al
  40c291:	add    BYTE PTR [eax],al
  40c293:	add    BYTE PTR [eax],al
  40c295:	push   ebx
  40c296:	add    DWORD PTR [eax],eax
  40c298:	pushf  
  40c299:	ret    0x40
  40c29c:	add    BYTE PTR [eax],al
  40c29e:	add    BYTE PTR [eax],al
  40c2a0:	add    BYTE PTR [eax+0x4],dl
  40c2a3:	add    BYTE PTR [eax],cl
  40c2a5:	ret    
  40c2a6:	inc    eax
	...
  40c2af:	add    al,al
  40c2b1:	ret    0x40
  40c2b4:	add    BYTE PTR [eax],al
  40c2b6:	add    BYTE PTR [eax],al
  40c2b8:	add    BYTE PTR [edx+0x1],dl
  40c2bb:	add    BYTE PTR [eax-0x3c],dh
  40c2be:	inc    eax
  40c2bf:	add    BYTE PTR [eax],al
  40c2c1:	add    BYTE PTR [eax],al
  40c2c3:	add    BYTE PTR [eax],al
  40c2c5:	inc    esp
  40c2c6:	adc    BYTE PTR [eax],al
  40c2c8:	xchg   edi,eax
  40c2c9:	test   al,0x44
	...
  40c303:	add    BYTE PTR [ecx+0x44a8],dl
  40c309:	add    BYTE PTR [eax],al
  40c30b:	add    BYTE PTR [eax],al
  40c30d:	inc    esp
  40c30e:	adc    BYTE PTR [eax],al
  40c310:	mov    ds:0x44a8,eax
	...
  40c349:	add    BYTE PTR [eax],al
  40c34b:	add    BYTE PTR [ebp+0x44a8],bl
  40c351:	add    BYTE PTR [eax],al
  40c353:	add    BYTE PTR [eax],al
  40c355:	inc    esp
  40c356:	adc    BYTE PTR [eax],al
  40c358:	scas   eax,DWORD PTR es:[edi]
  40c359:	test   al,0x44
	...
  40c393:	add    BYTE PTR [ecx+0x44a8],ch
  40c399:	add    BYTE PTR [eax],al
  40c39b:	add    BYTE PTR [eax],al
  40c39d:	inc    esp
  40c39e:	adc    BYTE PTR [eax],al
  40c3a0:	mov    ebx,0x44a8
	...
  40c3d9:	add    BYTE PTR [eax],al
  40c3db:	add    BYTE PTR [ebp+0x44a8],dh
  40c3e1:	add    BYTE PTR [eax],al
  40c3e3:	add    BYTE PTR [eax],al
  40c3e5:	inc    esp
  40c3e6:	adc    BYTE PTR [eax],al
  40c3e8:	(bad)  
  40c3e9:	test   al,0x44
	...
  40c423:	add    cl,al
  40c425:	test   al,0x44
  40c427:	add    BYTE PTR [eax],al
  40c429:	add    BYTE PTR [eax],al
  40c42b:	add    BYTE PTR [eax],al
  40c42d:	inc    esp
  40c42e:	adc    BYTE PTR [eax],al
  40c430:	shr    DWORD PTR [eax+0x44],cl
	...
  40c46a:	add    BYTE PTR [eax],al
  40c46c:	int    0xa8
  40c46e:	inc    esp
  40c46f:	add    BYTE PTR [eax],al
  40c471:	add    BYTE PTR [eax],al
  40c473:	add    BYTE PTR [eax],al
  40c475:	inc    esp
  40c476:	add    DWORD PTR [eax],eax
  40c478:	mov    ah,al
  40c47a:	inc    eax
  40c47b:	add    BYTE PTR [eax],al
  40c47d:	add    BYTE PTR [eax],al
  40c47f:	add    BYTE PTR [eax],al
  40c481:	push   ebx
  40c482:	add    DWORD PTR [eax],eax
  40c484:	rol    ah,1
  40c486:	inc    eax
  40c487:	add    BYTE PTR [eax],al
  40c489:	add    BYTE PTR [eax],al
  40c48b:	add    BYTE PTR [eax],al
  40c48d:	push   eax
  40c48e:	adc    BYTE PTR [eax],al
  40c490:	rol    ch,0x40
	...
  40c49b:	add    BYTE PTR [eax-0x3b],bh
  40c49e:	inc    eax
	...
  40c4cb:	add    BYTE PTR [esp+eax*8+0x40],bh
  40c4cf:	add    BYTE PTR [eax],al
  40c4d1:	add    BYTE PTR [eax],al
  40c4d3:	add    BYTE PTR [eax],al
  40c4d5:	push   eax
  40c4d6:	add    al,0x0
  40c4d8:	xor    ch,al
  40c4da:	inc    eax
	...
  40c4e3:	add    al,ch
  40c4e5:	les    eax,FWORD PTR [eax+0x0]
  40c4e8:	add    BYTE PTR [eax],al
  40c4ea:	add    BYTE PTR [eax],al
  40c4ec:	add    BYTE PTR [eax+edx*1+0x0],al
  40c4f0:	fild   QWORD PTR [eax+0x44]
	...
  40c52a:	add    BYTE PTR [eax],al
  40c52c:	fldcw  WORD PTR [eax+0x44]
  40c532:	add    BYTE PTR [eax],al
  40c534:	add    BYTE PTR [eax+edx*1+0x0],al
  40c538:	jmp    0x40c4e2
  40c53a:	inc    esp
	...
  40c573:	add    ch,ah
  40c575:	test   al,0x44
  40c577:	add    BYTE PTR [eax],al
  40c579:	add    BYTE PTR [eax],al
  40c57b:	add    BYTE PTR [eax],al
  40c57d:	inc    esp
  40c57e:	adc    BYTE PTR [eax],al
  40c580:	imul   DWORD PTR [eax+0x44]
	...
  40c5ba:	add    BYTE PTR [eax],al
  40c5bc:	icebp  
  40c5bd:	test   al,0x44
  40c5bf:	add    BYTE PTR [eax],al
  40c5c1:	add    BYTE PTR [eax],al
  40c5c3:	add    BYTE PTR [eax],al
  40c5c5:	inc    esp
  40c5c6:	adc    BYTE PTR [eax],al
  40c5c8:	add    ebp,DWORD PTR [ecx+0x44]
	...
  40c602:	add    BYTE PTR [eax],al
  40c604:	std    
  40c605:	test   al,0x44
  40c607:	add    BYTE PTR [eax],al
  40c609:	add    BYTE PTR [eax],al
  40c60b:	add    BYTE PTR [eax],al
  40c60d:	inc    ebp
  40c60e:	or     BYTE PTR [eax],al
  40c610:	and    ch,cl
  40c612:	inc    eax
  40c613:	add    BYTE PTR [eax],al
  40c615:	add    BYTE PTR [eax],al
  40c617:	add    BYTE PTR [eax+0x40c9],ch
	...
  40c629:	add    BYTE PTR [eax],al
  40c62b:	add    BYTE PTR [eax],dh
  40c62d:	mov    BYTE PTR [eax+0x0],0x0
  40c631:	add    BYTE PTR [eax],al
  40c633:	add    BYTE PTR [eax],al
  40c635:	inc    ebp
  40c636:	adc    BYTE PTR [eax],al
  40c638:	adc    al,cl
  40c63a:	inc    eax
	...
  40c673:	add    BYTE PTR [eax-0x3a],bh
  40c676:	inc    eax
  40c677:	add    BYTE PTR [eax],al
  40c679:	add    BYTE PTR [eax],al
  40c67b:	add    BYTE PTR [eax],al
  40c67d:	push   eax
  40c67e:	adc    BYTE PTR [eax],al
  40c680:	enter  0x40c7,0x0
	...
  40c68c:	add    bh,0x40
	...
  40c6bb:	add    al,al
  40c6bd:	mov    BYTE PTR [eax+0x0],0x0
  40c6c1:	add    BYTE PTR [eax],al
  40c6c3:	add    BYTE PTR [eax],al
  40c6c5:	push   ebp
  40c6c6:	add    DWORD PTR [eax],eax
  40c6c8:	int3   
  40c6c9:	mov    BYTE PTR [eax+0x0],0x0
  40c6cd:	add    BYTE PTR [eax],al
  40c6cf:	add    BYTE PTR [eax],al
  40c6d1:	push   ecx
  40c6d2:	add    DWORD PTR [eax],eax
  40c6d4:	fadd   st,st(6)
  40c6d6:	inc    eax
  40c6d7:	add    BYTE PTR [eax],al
  40c6d9:	add    BYTE PTR [eax],al
  40c6db:	add    BYTE PTR [eax],al
  40c6dd:	push   eax
  40c6de:	add    al,0x0
  40c6e0:	cmp    bh,al
  40c6e2:	inc    eax
	...
  40c6eb:	add    al,dh
  40c6ed:	mov    BYTE PTR [eax+0x0],0x0
  40c6f1:	add    BYTE PTR [eax],al
  40c6f3:	add    BYTE PTR [eax],al
  40c6f5:	inc    esp
  40c6f6:	adc    BYTE PTR [eax],al
  40c6f8:	pop    gs
  40c6fa:	inc    esp
	...
  40c733:	add    BYTE PTR [ecx],cl
  40c735:	test   eax,0x44
  40c73a:	add    BYTE PTR [eax],al
  40c73c:	add    BYTE PTR [eax+edx*1+0x0],al
  40c740:	sbb    ebp,DWORD PTR [ecx+0x44]
	...
  40c77a:	add    BYTE PTR [eax],al
  40c77c:	adc    eax,0x44a9
  40c781:	add    BYTE PTR [eax],al
  40c783:	add    BYTE PTR [eax],al
  40c785:	inc    esp
  40c786:	adc    BYTE PTR [eax],al
  40c788:	daa    
  40c789:	test   eax,0x44
	...
  40c7c2:	add    BYTE PTR [eax],al
  40c7c4:	and    DWORD PTR [ecx+0x44],ebp
  40c7ca:	add    BYTE PTR [eax],al
  40c7cc:	add    BYTE PTR [eax+edx*1+0x0],al
  40c7d0:	xor    ebp,DWORD PTR [ecx+0x44]
	...
  40c80a:	add    BYTE PTR [eax],al
  40c80c:	sub    eax,0x44a9
  40c811:	add    BYTE PTR [eax],al
  40c813:	add    BYTE PTR [eax],al
  40c815:	push   eax
  40c816:	adc    BYTE PTR [eax],al
  40c818:	pusha  
  40c819:	leave  
  40c81a:	inc    eax
	...
  40c823:	add    BYTE PTR [eax],bl
  40c825:	leave  
  40c826:	inc    eax
	...
  40c853:	add    BYTE PTR [eax-0x38],bl
  40c856:	inc    eax
  40c857:	add    BYTE PTR [eax],al
  40c859:	add    BYTE PTR [eax],al
  40c85b:	add    BYTE PTR [eax],al
  40c85d:	push   ebp
  40c85e:	add    DWORD PTR [eax],eax
  40c860:	fs enter 0x40,0x0
  40c865:	add    BYTE PTR [eax],al
  40c867:	add    BYTE PTR [eax],al
  40c869:	push   ecx
  40c86a:	add    DWORD PTR [eax],eax
  40c86c:	jo     0x40c836
  40c86e:	inc    eax
  40c86f:	add    BYTE PTR [eax],al
  40c871:	add    BYTE PTR [eax],al
  40c873:	add    BYTE PTR [eax],al
  40c875:	push   eax
  40c876:	add    al,0x0
  40c878:	ror    al,1
  40c87a:	inc    eax
	...
  40c883:	add    BYTE PTR [eax+0x40c8],cl
  40c889:	add    BYTE PTR [eax],al
  40c88b:	add    BYTE PTR [eax],al
  40c88d:	inc    esp
  40c88e:	adc    BYTE PTR [eax],al
  40c890:	aas    
  40c891:	test   eax,0x44
	...
  40c8ca:	add    BYTE PTR [eax],al
  40c8cc:	cmp    DWORD PTR [ecx+0x44],ebp
  40c8d2:	add    BYTE PTR [eax],al
  40c8d4:	add    BYTE PTR [eax+edx*1+0x0],al
  40c8d8:	dec    ebx
  40c8d9:	test   eax,0x44
	...
  40c912:	add    BYTE PTR [eax],al
  40c914:	inc    ebp
  40c915:	test   eax,0x44
  40c91a:	add    BYTE PTR [eax],al
  40c91c:	add    BYTE PTR [eax+edx*1+0x0],al
  40c920:	push   edi
  40c921:	test   eax,0x44
	...
  40c95a:	add    BYTE PTR [eax],al
  40c95c:	push   ecx
  40c95d:	test   eax,0x44
  40c962:	add    BYTE PTR [eax],al
  40c964:	add    BYTE PTR [eax+edx*1+0x0],al
  40c968:	arpl   WORD PTR [ecx+0x44],bp
	...
  40c9a2:	add    BYTE PTR [eax],al
  40c9a4:	pop    ebp
  40c9a5:	test   eax,0x44
  40c9aa:	add    BYTE PTR [eax],al
  40c9ac:	add    BYTE PTR [ebp+0x10],al
  40c9af:	add    BYTE PTR [eax+0x40cb],cl
	...
  40c9e9:	add    BYTE PTR [eax],al
  40c9eb:	add    al,dh
  40c9ed:	leave  
  40c9ee:	inc    eax
  40c9ef:	add    BYTE PTR [eax],al
  40c9f1:	add    BYTE PTR [eax],al
  40c9f3:	add    BYTE PTR [eax],al
  40c9f5:	push   eax
  40c9f6:	adc    BYTE PTR [eax],al
  40c9f8:	inc    eax
  40c9f9:	retf   
  40c9fa:	inc    eax
	...
  40ca03:	add    al,bh
  40ca05:	retf   0x40
	...
  40ca34:	cmp    dl,cl
  40ca36:	inc    eax
  40ca37:	add    BYTE PTR [eax],al
  40ca39:	add    BYTE PTR [eax],al
  40ca3b:	add    BYTE PTR [eax],al
  40ca3d:	push   ebp
  40ca3e:	add    DWORD PTR [eax],eax
  40ca40:	inc    esp
  40ca41:	retf   0x40
  40ca44:	add    BYTE PTR [eax],al
  40ca46:	add    BYTE PTR [eax],al
  40ca48:	add    BYTE PTR [ecx+0x1],dl
  40ca4b:	add    BYTE PTR [eax-0x36],dl
  40ca4e:	inc    eax
  40ca4f:	add    BYTE PTR [eax],al
  40ca51:	add    BYTE PTR [eax],al
  40ca53:	add    BYTE PTR [eax],al
  40ca55:	push   eax
  40ca56:	add    al,0x0
  40ca58:	mov    al,0xca
  40ca5a:	inc    eax
	...
  40ca63:	add    BYTE PTR [eax-0x36],ch
  40ca66:	inc    eax
  40ca67:	add    BYTE PTR [eax],al
  40ca69:	add    BYTE PTR [eax],al
  40ca6b:	add    BYTE PTR [eax],al
  40ca6d:	inc    esp
  40ca6e:	adc    BYTE PTR [eax],al
  40ca70:	outs   dx,DWORD PTR ds:[esi]
  40ca71:	test   eax,0x44
	...
  40caaa:	add    BYTE PTR [eax],al
  40caac:	imul   ebp,DWORD PTR [ecx+0x44],0x44000000
  40cab6:	adc    BYTE PTR [eax],al
  40cab8:	jnp    0x40ca63
  40caba:	inc    esp
	...
  40caf3:	add    BYTE PTR [ebp-0x57],dh
  40caf6:	inc    esp
  40caf7:	add    BYTE PTR [eax],al
  40caf9:	add    BYTE PTR [eax],al
  40cafb:	add    BYTE PTR [eax],al
  40cafd:	inc    esp
  40cafe:	adc    BYTE PTR [eax],al
  40cb00:	xchg   DWORD PTR [ecx+0x44],ebp
	...
  40cb3a:	add    BYTE PTR [eax],al
  40cb3c:	sub    DWORD PTR [ecx+0x44],0x44000000
  40cb46:	adc    BYTE PTR [eax],al
  40cb48:	xchg   ebx,eax
  40cb49:	test   eax,0x44
	...
  40cb82:	add    BYTE PTR [eax],al
  40cb84:	lea    ebp,[ecx+0x44]
  40cb8a:	add    BYTE PTR [eax],al
  40cb8c:	add    BYTE PTR [eax+0x10],dl
  40cb8f:	add    al,bl
  40cb91:	int3   
  40cb92:	inc    eax
	...
  40cb9b:	add    BYTE PTR [eax+0x40cc],dl
	...
  40cbc9:	add    BYTE PTR [eax],al
  40cbcb:	add    al,dl
  40cbcd:	retf   
  40cbce:	inc    eax
  40cbcf:	add    BYTE PTR [eax],al
  40cbd1:	add    BYTE PTR [eax],al
  40cbd3:	add    BYTE PTR [eax],al
  40cbd5:	push   ebp
  40cbd6:	add    DWORD PTR [eax],eax
  40cbd8:	fmul   st(3),st
  40cbda:	inc    eax
  40cbdb:	add    BYTE PTR [eax],al
  40cbdd:	add    BYTE PTR [eax],al
  40cbdf:	add    BYTE PTR [eax],al
  40cbe1:	push   ecx
  40cbe2:	add    DWORD PTR [eax],eax
  40cbe4:	call   0x410cb4
  40cbe9:	add    BYTE PTR [eax],al
  40cbeb:	add    BYTE PTR [eax],al
  40cbed:	push   eax
  40cbee:	add    al,0x0
  40cbf0:	dec    eax
  40cbf1:	int3   
  40cbf2:	inc    eax
	...
  40cbfb:	add    BYTE PTR [eax],al
  40cbfd:	int3   
  40cbfe:	inc    eax
  40cbff:	add    BYTE PTR [eax],al
  40cc01:	add    BYTE PTR [eax],al
  40cc03:	add    BYTE PTR [eax],al
  40cc05:	inc    esp
  40cc06:	adc    BYTE PTR [eax],al
  40cc08:	lahf   
  40cc09:	test   eax,0x44
	...
  40cc42:	add    BYTE PTR [eax],al
  40cc44:	cdq    
  40cc45:	test   eax,0x44
  40cc4a:	add    BYTE PTR [eax],al
  40cc4c:	add    BYTE PTR [eax+edx*1+0x0],al
  40cc50:	stos   DWORD PTR es:[edi],eax
  40cc51:	test   eax,0x44
	...
  40cc8a:	add    BYTE PTR [eax],al
  40cc8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc8d:	test   eax,0x44
  40cc92:	add    BYTE PTR [eax],al
  40cc94:	add    BYTE PTR [eax+edx*1+0x0],al
  40cc98:	mov    bh,0xa9
  40cc9a:	inc    esp
	...
  40ccd3:	add    BYTE PTR [ecx+0x44a9],dh
  40ccd9:	add    BYTE PTR [eax],al
  40ccdb:	add    BYTE PTR [eax],al
  40ccdd:	inc    esp
  40ccde:	adc    BYTE PTR [eax],al
  40cce0:	ret    
  40cce1:	test   eax,0x44
	...
  40cd1a:	add    BYTE PTR [eax],al
  40cd1c:	mov    ebp,0x44a9
  40cd21:	add    BYTE PTR [eax],al
  40cd23:	add    BYTE PTR [eax],al
  40cd25:	push   ecx
  40cd26:	add    DWORD PTR [eax],eax
  40cd28:	push   eax
  40cd29:	int    0x40
  40cd2b:	add    BYTE PTR [eax],al
  40cd2d:	add    BYTE PTR [eax],al
  40cd2f:	add    BYTE PTR [eax],al
  40cd31:	dec    edi
  40cd32:	pop    es
  40cd33:	add    BYTE PTR [ebp+ecx*8+0x40],bh
	...
  40cd4a:	add    BYTE PTR [eax],al
  40cd4c:	cwde   
  40cd4d:	int    0x40
  40cd4f:	add    BYTE PTR [eax],al
  40cd51:	add    BYTE PTR [eax],al
  40cd53:	add    BYTE PTR [eax],al
  40cd55:	push   eax
  40cd56:	adc    BYTE PTR [eax],al
  40cd58:	clc    
  40cd59:	iret   
  40cd5a:	inc    eax
	...
  40cd63:	add    BYTE PTR [eax+0x40cf],dh
	...
  40cd91:	add    BYTE PTR [eax],al
  40cd93:	add    BYTE PTR [ecx*8+0x40],ch
  40cd9a:	add    BYTE PTR [eax],al
  40cd9c:	add    BYTE PTR [ebx+0x1],dl
  40cd9f:	add    BYTE PTR [ebp+ecx*8+0x40],ah
  40cda6:	add    BYTE PTR [eax],al
  40cda8:	add    BYTE PTR [eax+0x4],dl
  40cdab:	add    BYTE PTR [eax],bl
  40cdad:	into   
  40cdae:	inc    eax
	...
  40cdb7:	add    al,dl
  40cdb9:	int    0x40
  40cdbb:	add    BYTE PTR [eax],al
  40cdbd:	add    BYTE PTR [eax],al
  40cdbf:	add    BYTE PTR [eax],al
  40cdc1:	push   ecx
  40cdc2:	add    eax,DWORD PTR [eax]
  40cdc4:	or     bh,cl
  40cdc6:	inc    eax
  40cdc7:	add    BYTE PTR [eax],al
  40cdc9:	add    BYTE PTR [eax],al
  40cdcb:	add    BYTE PTR [eax-0x32],ah
  40cdce:	inc    eax
  40cdcf:	add    BYTE PTR [eax],al
  40cdd1:	add    BYTE PTR [eax],al
  40cdd3:	add    BYTE PTR [eax],al
  40cdd5:	inc    esp
  40cdd6:	adc    BYTE PTR [eax],al
  40cdd8:	iret   
  40cdd9:	test   eax,0x44
	...
  40ce12:	add    BYTE PTR [eax],al
  40ce14:	leave  
  40ce15:	test   eax,0x44
  40ce1a:	add    BYTE PTR [eax],al
  40ce1c:	add    BYTE PTR [eax+edx*1+0x0],al
  40ce20:	fld    TBYTE PTR [ecx+0x44]
	...
  40ce5a:	add    BYTE PTR [eax],al
  40ce5c:	aad    0xa9
  40ce5e:	inc    esp
  40ce5f:	add    BYTE PTR [eax],al
  40ce61:	add    BYTE PTR [eax],al
  40ce63:	add    BYTE PTR [eax],al
  40ce65:	push   eax
  40ce66:	add    al,0x0
  40ce68:	ror    dh,0x40
	...
  40ce73:	add    BYTE PTR [eax-0x32],bh
  40ce76:	inc    eax
  40ce77:	add    BYTE PTR [eax],al
  40ce79:	add    BYTE PTR [eax],al
  40ce7b:	add    BYTE PTR [eax],al
  40ce7d:	inc    esp
  40ce7e:	adc    BYTE PTR [eax],al
  40ce80:	out    0xa9,eax
  40ce82:	inc    esp
	...
  40cebb:	add    cl,ah
  40cebd:	test   eax,0x44
  40cec2:	add    BYTE PTR [eax],al
  40cec4:	add    BYTE PTR [eax+edx*1+0x0],al
  40cec8:	repz test eax,0x44
	...
  40cf02:	add    BYTE PTR [eax],al
  40cf04:	in     eax,dx
  40cf05:	test   eax,0x44
  40cf0a:	add    BYTE PTR [eax],al
  40cf0c:	add    BYTE PTR [eax+0x4],dl
  40cf0f:	add    BYTE PTR [eax-0x31],ch
  40cf12:	inc    eax
	...
  40cf1b:	add    BYTE PTR [eax],ah
  40cf1d:	iret   
  40cf1e:	inc    eax
  40cf1f:	add    BYTE PTR [eax],al
  40cf21:	add    BYTE PTR [eax],al
  40cf23:	add    BYTE PTR [eax],al
  40cf25:	inc    esp
  40cf26:	adc    BYTE PTR [eax],al
  40cf28:	jmp    FWORD PTR [ecx+0x44]
	...
  40cf62:	add    BYTE PTR [eax],al
  40cf64:	stc    
  40cf65:	test   eax,0x44
  40cf6a:	add    BYTE PTR [eax],al
  40cf6c:	add    BYTE PTR [eax+edx*1+0x0],al
  40cf70:	or     ebp,DWORD PTR [edx+0x44]
	...
  40cfaa:	add    BYTE PTR [eax],al
  40cfac:	add    eax,0x44aa
  40cfb1:	add    BYTE PTR [eax],al
  40cfb3:	add    BYTE PTR [eax],al
  40cfb5:	inc    esp
  40cfb6:	adc    BYTE PTR [eax],al
  40cfb8:	pop    ss
  40cfb9:	stos   BYTE PTR es:[edi],al
  40cfba:	inc    esp
	...
  40cff3:	add    BYTE PTR [ecx],dl
  40cff5:	stos   BYTE PTR es:[edi],al
  40cff6:	inc    esp
  40cff7:	add    BYTE PTR [eax],al
  40cff9:	add    BYTE PTR [eax],al
  40cffb:	add    BYTE PTR [eax],al
  40cffd:	inc    esp
  40cffe:	adc    BYTE PTR [eax],al
  40d000:	and    ebp,DWORD PTR [edx+0x44]
	...
  40d03a:	add    BYTE PTR [eax],al
  40d03c:	sbb    eax,0x44aa
  40d041:	add    BYTE PTR [eax],al
  40d043:	add    BYTE PTR [eax],al
  40d045:	inc    ebp
  40d046:	adc    BYTE PTR [eax],al
  40d048:	and    dl,dl
  40d04a:	inc    eax
	...
  40d083:	add    BYTE PTR [eax+0x40d0],cl
  40d089:	add    BYTE PTR [eax],al
  40d08b:	add    BYTE PTR [eax],al
  40d08d:	push   eax
  40d08e:	adc    BYTE PTR [eax],al
  40d090:	fcom   st(1)
  40d092:	inc    eax
	...
  40d09b:	add    BYTE PTR [eax+0x40d1],dl
	...
  40d0c9:	add    BYTE PTR [eax],al
  40d0cb:	add    al,dl
  40d0cd:	rol    BYTE PTR [eax+0x0],1
  40d0d0:	add    BYTE PTR [eax],al
  40d0d2:	add    BYTE PTR [eax],al
  40d0d4:	add    BYTE PTR [edi+0x1],cl
  40d0d7:	add    ah,bl
  40d0d9:	rol    BYTE PTR [eax+0x0],1
  40d0dc:	add    BYTE PTR [eax],al
  40d0de:	add    BYTE PTR [eax],al
  40d0e0:	add    BYTE PTR [ecx+0x1],dl
  40d0e3:	add    al,ch
  40d0e5:	rol    BYTE PTR [eax+0x0],1
  40d0e8:	add    BYTE PTR [eax],al
  40d0ea:	add    BYTE PTR [eax],al
  40d0ec:	add    BYTE PTR [eax+0x4],dl
  40d0ef:	add    BYTE PTR [eax-0x2f],cl
  40d0f2:	inc    eax
	...
  40d0fb:	add    BYTE PTR [eax],al
  40d0fd:	rol    DWORD PTR [eax+0x0],1
  40d100:	add    BYTE PTR [eax],al
  40d102:	add    BYTE PTR [eax],al
  40d104:	add    BYTE PTR [eax+edx*1+0x0],al
  40d108:	das    
  40d109:	stos   BYTE PTR es:[edi],al
  40d10a:	inc    esp
	...
  40d143:	add    BYTE PTR [ecx],ch
  40d145:	stos   BYTE PTR es:[edi],al
  40d146:	inc    esp
  40d147:	add    BYTE PTR [eax],al
  40d149:	add    BYTE PTR [eax],al
  40d14b:	add    BYTE PTR [eax],al
  40d14d:	inc    esp
  40d14e:	adc    BYTE PTR [eax],al
  40d150:	cmp    ebp,DWORD PTR [edx+0x44]
	...
  40d18a:	add    BYTE PTR [eax],al
  40d18c:	xor    eax,0x44aa
  40d191:	add    BYTE PTR [eax],al
  40d193:	add    BYTE PTR [eax],al
  40d195:	inc    esp
  40d196:	adc    BYTE PTR [eax],al
  40d198:	inc    edi
  40d199:	stos   BYTE PTR es:[edi],al
  40d19a:	inc    esp
	...
  40d1d3:	add    BYTE PTR [ecx-0x56],al
  40d1d6:	inc    esp
  40d1d7:	add    BYTE PTR [eax],al
  40d1d9:	add    BYTE PTR [eax],al
  40d1db:	add    BYTE PTR [eax],al
  40d1dd:	inc    esp
  40d1de:	adc    BYTE PTR [eax],al
  40d1e0:	push   ebx
  40d1e1:	stos   BYTE PTR es:[edi],al
  40d1e2:	inc    esp
	...
  40d21b:	add    BYTE PTR [ebp-0x56],cl
  40d21e:	inc    esp
  40d21f:	add    BYTE PTR [eax],al
  40d221:	add    BYTE PTR [eax],al
  40d223:	add    BYTE PTR [eax],al
  40d225:	push   eax
  40d226:	adc    BYTE PTR [eax],al
  40d228:	jo     0x40d1fd
  40d22a:	inc    eax
	...
  40d233:	add    BYTE PTR [eax],ch
  40d235:	rol    DWORD PTR [eax+0x0],cl
	...
  40d264:	push   0x40d2
  40d269:	add    BYTE PTR [eax],al
  40d26b:	add    BYTE PTR [eax],al
  40d26d:	dec    edi
  40d26e:	add    DWORD PTR [eax],eax
  40d270:	je     0x40d244
  40d272:	inc    eax
  40d273:	add    BYTE PTR [eax],al
  40d275:	add    BYTE PTR [eax],al
  40d277:	add    BYTE PTR [eax],al
  40d279:	push   ecx
  40d27a:	add    DWORD PTR [eax],eax
  40d27c:	adc    dl,0x40
  40d27f:	add    BYTE PTR [eax],al
  40d281:	add    BYTE PTR [eax],al
  40d283:	add    BYTE PTR [eax],al
  40d285:	push   eax
  40d286:	add    al,0x0
  40d288:	loopne 0x40d25c
  40d28a:	inc    eax
	...
  40d293:	add    BYTE PTR [eax+0x40d2],bl
  40d299:	add    BYTE PTR [eax],al
  40d29b:	add    BYTE PTR [eax],al
  40d29d:	inc    esp
  40d29e:	adc    BYTE PTR [eax],al
  40d2a0:	pop    edi
  40d2a1:	stos   BYTE PTR es:[edi],al
  40d2a2:	inc    esp
	...
  40d2db:	add    BYTE PTR [ecx-0x56],bl
  40d2de:	inc    esp
  40d2df:	add    BYTE PTR [eax],al
  40d2e1:	add    BYTE PTR [eax],al
  40d2e3:	add    BYTE PTR [eax],al
  40d2e5:	inc    esp
  40d2e6:	adc    BYTE PTR [eax],al
  40d2e8:	imul   ebp,DWORD PTR [edx+0x44],0x0
	...
  40d323:	add    BYTE PTR [ebp-0x56],ah
  40d326:	inc    esp
  40d327:	add    BYTE PTR [eax],al
  40d329:	add    BYTE PTR [eax],al
  40d32b:	add    BYTE PTR [eax],al
  40d32d:	inc    esp
  40d32e:	adc    BYTE PTR [eax],al
  40d330:	ja     0x40d2dc
  40d332:	inc    esp
	...
  40d36b:	add    BYTE PTR [ecx-0x56],dh
  40d36e:	inc    esp
  40d36f:	add    BYTE PTR [eax],al
  40d371:	add    BYTE PTR [eax],al
  40d373:	add    BYTE PTR [eax],al
  40d375:	inc    esp
  40d376:	adc    BYTE PTR [eax],al
  40d378:	sub    DWORD PTR [edx+0x44],0x0
	...
  40d3b3:	add    BYTE PTR [ebp-0x56],bh
  40d3b6:	inc    esp
  40d3b7:	add    BYTE PTR [eax],al
  40d3b9:	add    BYTE PTR [eax],al
  40d3bb:	add    BYTE PTR [eax],al
  40d3bd:	inc    ebp
  40d3be:	adc    BYTE PTR [eax],al
  40d3c0:	cwde   
  40d3c1:	aad    0x40
	...
  40d3fb:	add    BYTE PTR [eax],al
  40d3fd:	aam    0x40
  40d3ff:	add    BYTE PTR [eax],al
  40d401:	add    BYTE PTR [eax],al
  40d403:	add    BYTE PTR [eax],al
  40d405:	push   eax
  40d406:	adc    BYTE PTR [eax],al
  40d408:	push   eax
  40d409:	aad    0x40
	...
  40d413:	add    BYTE PTR [eax],cl
  40d415:	aad    0x40
	...
  40d443:	add    BYTE PTR [eax-0x2c],cl
  40d446:	inc    eax
  40d447:	add    BYTE PTR [eax],al
  40d449:	add    BYTE PTR [eax],al
  40d44b:	add    BYTE PTR [eax],al
  40d44d:	dec    edi
  40d44e:	add    DWORD PTR [eax],eax
  40d450:	push   esp
  40d451:	aam    0x40
  40d453:	add    BYTE PTR [eax],al
  40d455:	add    BYTE PTR [eax],al
  40d457:	add    BYTE PTR [eax],al
  40d459:	push   ecx
  40d45a:	add    DWORD PTR [eax],eax
  40d45c:	pusha  
  40d45d:	aam    0x40
  40d45f:	add    BYTE PTR [eax],al
  40d461:	add    BYTE PTR [eax],al
  40d463:	add    BYTE PTR [eax],al
  40d465:	push   eax
  40d466:	add    al,0x0
  40d468:	rcl    ah,0x40
	...
  40d473:	add    BYTE PTR [eax-0x2c],bh
  40d476:	inc    eax
  40d477:	add    BYTE PTR [eax],al
  40d479:	add    BYTE PTR [eax],al
  40d47b:	add    BYTE PTR [eax],al
  40d47d:	inc    esp
  40d47e:	adc    BYTE PTR [eax],al
  40d480:	(bad)
	...
  40d4bc:	mov    DWORD PTR [edx+0x44],ebp
  40d4c2:	add    BYTE PTR [eax],al
  40d4c4:	add    BYTE PTR [eax+edx*1+0x0],al
  40d4c8:	fwait
  40d4c9:	stos   BYTE PTR es:[edi],al
  40d4ca:	inc    esp
	...
  40d503:	add    BYTE PTR [ebp+0x44aa],dl
  40d509:	add    BYTE PTR [eax],al
  40d50b:	add    BYTE PTR [eax],al
  40d50d:	inc    esp
  40d50e:	adc    BYTE PTR [eax],al
  40d510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d511:	stos   BYTE PTR es:[edi],al
  40d512:	inc    esp
	...
  40d54b:	add    BYTE PTR [ecx+0x44aa],ah
  40d551:	add    BYTE PTR [eax],al
  40d553:	add    BYTE PTR [eax],al
  40d555:	inc    esp
  40d556:	adc    BYTE PTR [eax],al
  40d558:	mov    bl,0xaa
  40d55a:	inc    esp
	...
  40d593:	add    BYTE PTR [ebp+0x44aa],ch
  40d599:	add    BYTE PTR [eax],al
  40d59b:	add    BYTE PTR [eax],al
  40d59d:	push   eax
  40d59e:	adc    BYTE PTR [eax],al
  40d5a0:	call   0x41167b
  40d5a5:	add    BYTE PTR [eax],al
  40d5a7:	add    BYTE PTR [eax],al
  40d5a9:	add    BYTE PTR [eax],al
  40d5ab:	add    BYTE PTR [eax+0x40d6],ah
	...
  40d5d9:	add    BYTE PTR [eax],al
  40d5db:	add    al,ah
  40d5dd:	aad    0x40
  40d5df:	add    BYTE PTR [eax],al
  40d5e1:	add    BYTE PTR [eax],al
  40d5e3:	add    BYTE PTR [eax],al
  40d5e5:	dec    edi
  40d5e6:	add    DWORD PTR [eax],eax
  40d5e8:	in     al,dx
  40d5e9:	aad    0x40
  40d5eb:	add    BYTE PTR [eax],al
  40d5ed:	add    BYTE PTR [eax],al
  40d5ef:	add    BYTE PTR [eax],al
  40d5f1:	push   ecx
  40d5f2:	add    DWORD PTR [eax],eax
  40d5f4:	clc    
  40d5f5:	aad    0x40
  40d5f7:	add    BYTE PTR [eax],al
  40d5f9:	add    BYTE PTR [eax],al
  40d5fb:	add    BYTE PTR [eax],al
  40d5fd:	push   eax
  40d5fe:	add    al,0x0
  40d600:	pop    eax
  40d601:	(bad)  
  40d602:	inc    eax
	...
  40d60b:	add    BYTE PTR [eax],dl
  40d60d:	(bad)  
  40d60e:	inc    eax
  40d60f:	add    BYTE PTR [eax],al
  40d611:	add    BYTE PTR [eax],al
  40d613:	add    BYTE PTR [eax],al
  40d615:	inc    esp
  40d616:	adc    BYTE PTR [eax],al
  40d618:	mov    edi,0x44aa
	...
  40d651:	add    BYTE PTR [eax],al
  40d653:	add    BYTE PTR [ecx+0x44aa],bh
  40d659:	add    BYTE PTR [eax],al
  40d65b:	add    BYTE PTR [eax],al
  40d65d:	inc    esp
  40d65e:	adc    BYTE PTR [eax],al
  40d660:	retf   
  40d661:	stos   BYTE PTR es:[edi],al
  40d662:	inc    esp
	...
  40d69b:	add    ch,al
  40d69d:	stos   BYTE PTR es:[edi],al
  40d69e:	inc    esp
  40d69f:	add    BYTE PTR [eax],al
  40d6a1:	add    BYTE PTR [eax],al
  40d6a3:	add    BYTE PTR [eax],al
  40d6a5:	inc    esp
  40d6a6:	adc    BYTE PTR [eax],al
  40d6a8:	xlat   BYTE PTR ds:[ebx]
  40d6a9:	stos   BYTE PTR es:[edi],al
  40d6aa:	inc    esp
	...
  40d6e3:	add    cl,dl
  40d6e5:	stos   BYTE PTR es:[edi],al
  40d6e6:	inc    esp
  40d6e7:	add    BYTE PTR [eax],al
  40d6e9:	add    BYTE PTR [eax],al
  40d6eb:	add    BYTE PTR [eax],al
  40d6ed:	inc    esp
  40d6ee:	adc    BYTE PTR [eax],al
  40d6f0:	jecxz  0x40d69c
  40d6f2:	inc    esp
	...
  40d72b:	add    ch,bl
  40d72d:	stos   BYTE PTR es:[edi],al
  40d72e:	inc    esp
  40d72f:	add    BYTE PTR [eax],al
  40d731:	add    BYTE PTR [eax],al
  40d733:	add    BYTE PTR [eax],al
  40d735:	inc    ecx
  40d736:	add    DWORD PTR [eax],eax
  40d738:	cmp    al,0xd7
  40d73a:	inc    eax
  40d73b:	add    BYTE PTR [eax],al
  40d73d:	add    BYTE PTR [eax],al
  40d73f:	add    BYTE PTR [eax],al
  40d741:	dec    esp
  40d742:	add    DWORD PTR [eax],eax
  40d744:	dec    eax
  40d745:	xlat   BYTE PTR ds:[ebx]
  40d746:	inc    eax
  40d747:	add    BYTE PTR [eax],al
  40d749:	add    BYTE PTR [eax],al
  40d74b:	add    BYTE PTR [eax],al
  40d74d:	push   ebx
  40d74e:	add    DWORD PTR [eax],eax
  40d750:	push   esp
  40d751:	xlat   BYTE PTR ds:[ebx]
  40d752:	inc    eax
  40d753:	add    BYTE PTR [eax],al
  40d755:	add    BYTE PTR [eax],al
  40d757:	add    BYTE PTR [eax],al
  40d759:	inc    ebp
  40d75a:	add    DWORD PTR [eax],eax
  40d75c:	pusha  
  40d75d:	xlat   BYTE PTR ds:[ebx]
  40d75e:	inc    eax
  40d75f:	add    BYTE PTR [eax],al
  40d761:	add    BYTE PTR [eax],al
  40d763:	add    BYTE PTR [eax],al
  40d765:	push   eax
  40d766:	adc    BYTE PTR [eax],al
  40d768:	mov    al,0xd8
  40d76a:	inc    eax
	...
  40d773:	add    BYTE PTR [eax-0x28],ch
  40d776:	inc    eax
	...
  40d7a3:	add    BYTE PTR [eax+0x40d7],ch
  40d7a9:	add    BYTE PTR [eax],al
  40d7ab:	add    BYTE PTR [eax],al
  40d7ad:	dec    edi
  40d7ae:	add    DWORD PTR [eax],eax
  40d7b0:	mov    ah,0xd7
  40d7b2:	inc    eax
  40d7b3:	add    BYTE PTR [eax],al
  40d7b5:	add    BYTE PTR [eax],al
  40d7b7:	add    BYTE PTR [eax],al
  40d7b9:	push   ebx
  40d7ba:	add    DWORD PTR [eax],eax
  40d7bc:	rcl    bh,0x40
  40d7bf:	add    BYTE PTR [eax],al
  40d7c1:	add    BYTE PTR [eax],al
  40d7c3:	add    BYTE PTR [eax],al
  40d7c5:	push   eax
  40d7c6:	add    al,0x0
  40d7c8:	and    al,bl
  40d7ca:	inc    eax
	...
  40d7d3:	add    al,bl
  40d7d5:	xlat   BYTE PTR ds:[ebx]
  40d7d6:	inc    eax
  40d7d7:	add    BYTE PTR [eax],al
  40d7d9:	add    BYTE PTR [eax],al
  40d7db:	add    BYTE PTR [eax],al
  40d7dd:	inc    esp
  40d7de:	adc    BYTE PTR [eax],al
  40d7e0:	out    dx,eax
  40d7e1:	stos   BYTE PTR es:[edi],al
  40d7e2:	inc    esp
	...
  40d81b:	add    cl,ch
  40d81d:	stos   BYTE PTR es:[edi],al
  40d81e:	inc    esp
  40d81f:	add    BYTE PTR [eax],al
  40d821:	add    BYTE PTR [eax],al
  40d823:	add    BYTE PTR [eax],al
  40d825:	inc    esp
  40d826:	adc    BYTE PTR [eax],al
  40d828:	sti    
  40d829:	stos   BYTE PTR es:[edi],al
  40d82a:	inc    esp
	...
  40d863:	add    ch,dh
  40d865:	stos   BYTE PTR es:[edi],al
  40d866:	inc    esp
  40d867:	add    BYTE PTR [eax],al
  40d869:	add    BYTE PTR [eax],al
  40d86b:	add    BYTE PTR [eax],al
  40d86d:	inc    esp
  40d86e:	adc    BYTE PTR [eax],al
  40d870:	pop    es
  40d871:	stos   DWORD PTR es:[edi],eax
  40d872:	inc    esp
	...
  40d8ab:	add    BYTE PTR [ecx],al
  40d8ad:	stos   DWORD PTR es:[edi],eax
  40d8ae:	inc    esp
  40d8af:	add    BYTE PTR [eax],al
  40d8b1:	add    BYTE PTR [eax],al
  40d8b3:	add    BYTE PTR [eax],al
  40d8b5:	inc    esp
  40d8b6:	adc    BYTE PTR [eax],al
  40d8b8:	adc    ebp,DWORD PTR [ebx+0x44]
	...
  40d8f2:	add    BYTE PTR [eax],al
  40d8f4:	or     eax,0x44ab
  40d8f9:	add    BYTE PTR [eax],al
  40d8fb:	add    BYTE PTR [eax],al
  40d8fd:	push   ecx
  40d8fe:	add    DWORD PTR [eax],eax
  40d900:	sub    cl,bl
  40d902:	inc    eax
  40d903:	add    BYTE PTR [eax],al
  40d905:	add    BYTE PTR [eax],al
  40d907:	add    BYTE PTR [eax],al
  40d909:	dec    edi
  40d90a:	pop    es
  40d90b:	add    BYTE PTR [ecx+ebx*8+0x40],bl
	...
  40d922:	add    BYTE PTR [eax],al
  40d924:	jo     0x40d8ff
  40d926:	inc    eax
  40d927:	add    BYTE PTR [eax],al
  40d929:	add    BYTE PTR [eax],al
  40d92b:	add    BYTE PTR [eax],al
  40d92d:	push   eax
  40d92e:	adc    BYTE PTR [eax],al
  40d930:	rcr    bl,1
  40d932:	inc    eax
	...
  40d93b:	add    BYTE PTR [eax+0x40db],cl
	...
  40d969:	add    BYTE PTR [eax],al
  40d96b:	add    BYTE PTR [ecx+ebx*8],al
  40d96e:	inc    eax
  40d96f:	add    BYTE PTR [eax],al
  40d971:	add    BYTE PTR [eax],al
  40d973:	add    BYTE PTR [eax],al
  40d975:	push   ecx
  40d976:	add    eax,DWORD PTR [eax]
  40d978:	cmp    dl,bl
  40d97a:	inc    eax
  40d97b:	add    BYTE PTR [eax],al
  40d97d:	add    BYTE PTR [eax],al
  40d97f:	add    BYTE PTR [ecx+ebx*8+0x40],al
  40d986:	add    BYTE PTR [eax],al
  40d988:	add    BYTE PTR [eax+0x4],dl
  40d98b:	add    al,dh
  40d98d:	fld    DWORD PTR [eax+0x0]
	...
  40d998:	test   al,0xd9
  40d99a:	inc    eax
  40d99b:	add    BYTE PTR [eax],al
  40d99d:	add    BYTE PTR [eax],al
  40d99f:	add    BYTE PTR [eax],al
  40d9a1:	push   ebx
  40d9a2:	add    DWORD PTR [eax],eax
  40d9a4:	loopne 0x40d980
  40d9a6:	inc    eax
  40d9a7:	add    BYTE PTR [eax],al
  40d9a9:	add    BYTE PTR [eax],al
  40d9ab:	add    BYTE PTR [eax],al
  40d9ad:	inc    esp
  40d9ae:	adc    BYTE PTR [eax],al
  40d9b0:	pop    ds
  40d9b1:	stos   DWORD PTR es:[edi],eax
  40d9b2:	inc    esp
	...
  40d9eb:	add    BYTE PTR [ecx],bl
  40d9ed:	stos   DWORD PTR es:[edi],eax
  40d9ee:	inc    esp
  40d9ef:	add    BYTE PTR [eax],al
  40d9f1:	add    BYTE PTR [eax],al
  40d9f3:	add    BYTE PTR [eax],al
  40d9f5:	inc    esp
  40d9f6:	adc    BYTE PTR [eax],al
  40d9f8:	sub    ebp,DWORD PTR [ebx+0x44]
	...
  40da32:	add    BYTE PTR [eax],al
  40da34:	and    eax,0x44ab
  40da39:	add    BYTE PTR [eax],al
  40da3b:	add    BYTE PTR [eax],al
  40da3d:	push   eax
  40da3e:	add    al,0x0
  40da40:	cwde   
  40da41:	fiadd  DWORD PTR [eax+0x0]
	...
  40da4c:	push   eax
  40da4d:	fiadd  DWORD PTR [eax+0x0]
  40da50:	add    BYTE PTR [eax],al
  40da52:	add    BYTE PTR [eax],al
  40da54:	add    BYTE PTR [eax+edx*1+0x0],al
  40da58:	aaa    
  40da59:	stos   DWORD PTR es:[edi],eax
  40da5a:	inc    esp
	...
  40da93:	add    BYTE PTR [ecx],dh
  40da95:	stos   DWORD PTR es:[edi],eax
  40da96:	inc    esp
  40da97:	add    BYTE PTR [eax],al
  40da99:	add    BYTE PTR [eax],al
  40da9b:	add    BYTE PTR [eax],al
  40da9d:	inc    esp
  40da9e:	adc    BYTE PTR [eax],al
  40daa0:	inc    ebx
  40daa1:	stos   DWORD PTR es:[edi],eax
  40daa2:	inc    esp
	...
  40dadb:	add    BYTE PTR ds:0x44ab,bh
  40dae1:	add    BYTE PTR [eax],al
  40dae3:	add    BYTE PTR [eax],al
  40dae5:	push   eax
  40dae6:	add    al,0x0
  40dae8:	inc    eax
  40dae9:	fild   DWORD PTR [eax+0x0]
	...
  40daf4:	clc    
  40daf5:	fiadd  DWORD PTR [eax+0x0]
  40daf8:	add    BYTE PTR [eax],al
  40dafa:	add    BYTE PTR [eax],al
  40dafc:	add    BYTE PTR [eax+edx*1+0x0],al
  40db00:	dec    edi
  40db01:	stos   DWORD PTR es:[edi],eax
  40db02:	inc    esp
	...
  40db3b:	add    BYTE PTR [ecx-0x55],cl
  40db3e:	inc    esp
  40db3f:	add    BYTE PTR [eax],al
  40db41:	add    BYTE PTR [eax],al
  40db43:	add    BYTE PTR [eax],al
  40db45:	inc    esp
  40db46:	adc    BYTE PTR [eax],al
  40db48:	pop    ebx
  40db49:	stos   DWORD PTR es:[edi],eax
  40db4a:	inc    esp
	...
  40db83:	add    BYTE PTR [ebp-0x55],dl
  40db86:	inc    esp
  40db87:	add    BYTE PTR [eax],al
  40db89:	add    BYTE PTR [eax],al
  40db8b:	add    BYTE PTR [eax],al
  40db8d:	inc    esp
  40db8e:	adc    BYTE PTR [eax],al
  40db90:	stos   DWORD PTR es:[di],eax
  40db92:	inc    esp
	...
  40dbcb:	add    BYTE PTR [ecx-0x55],ah
  40dbce:	inc    esp
  40dbcf:	add    BYTE PTR [eax],al
  40dbd1:	add    BYTE PTR [eax],al
  40dbd3:	add    BYTE PTR [eax],al
  40dbd5:	inc    esp
  40dbd6:	adc    BYTE PTR [eax],al
  40dbd8:	jae    0x40db85
  40dbda:	inc    esp
	...
  40dc13:	add    BYTE PTR [ebp-0x55],ch
  40dc16:	inc    esp
  40dc17:	add    BYTE PTR [eax],al
  40dc19:	add    BYTE PTR [eax],al
  40dc1b:	add    BYTE PTR [eax],al
  40dc1d:	dec    esp
  40dc1e:	pop    es
  40dc1f:	add    BYTE PTR [eax],bl
  40dc21:	fld    QWORD PTR [eax+0x0]
	...
  40dc38:	cmp    al,0xdc
  40dc3a:	inc    eax
  40dc3b:	add    BYTE PTR [eax],al
  40dc3d:	add    BYTE PTR [eax],al
  40dc3f:	add    BYTE PTR [eax],al
  40dc41:	dec    edi
  40dc42:	add    DWORD PTR [eax],eax
  40dc44:	dec    eax
  40dc45:	fadd   QWORD PTR [eax+0x0]
  40dc48:	add    BYTE PTR [eax],al
  40dc4a:	add    BYTE PTR [eax],al
  40dc4c:	add    BYTE PTR [ecx+0x1],al
  40dc4f:	add    BYTE PTR [esp+ebx*8+0x40],dl
  40dc53:	add    BYTE PTR [eax],al
  40dc55:	add    BYTE PTR [eax],al
  40dc57:	add    BYTE PTR [eax],al
  40dc59:	inc    esp
  40dc5a:	add    DWORD PTR [eax],eax
  40dc5c:	pusha  
  40dc5d:	fadd   QWORD PTR [eax+0x0]
  40dc60:	add    BYTE PTR [eax],al
  40dc62:	add    BYTE PTR [eax],al
  40dc64:	add    BYTE PTR [ebx+0x1],al
  40dc67:	add    BYTE PTR [esp+ebx*8+0x40],ch
  40dc6b:	add    BYTE PTR [eax],al
  40dc6d:	add    BYTE PTR [eax],al
  40dc6f:	add    BYTE PTR [eax],al
  40dc71:	inc    ecx
  40dc72:	add    DWORD PTR [eax],eax
  40dc74:	js     0x40dc52
  40dc76:	inc    eax
  40dc77:	add    BYTE PTR [eax],al
  40dc79:	add    BYTE PTR [eax],al
  40dc7b:	add    BYTE PTR [eax],al
  40dc7d:	push   ebx
  40dc7e:	add    DWORD PTR [eax],eax
  40dc80:	test   ah,bl
  40dc82:	inc    eax
  40dc83:	add    BYTE PTR [eax],al
  40dc85:	add    BYTE PTR [eax],al
  40dc87:	add    BYTE PTR [eax],al
  40dc89:	push   esp
  40dc8a:	add    DWORD PTR [eax],eax
  40dc8c:	nop
  40dc8d:	fadd   QWORD PTR [eax+0x0]
  40dc90:	add    BYTE PTR [eax],al
  40dc92:	add    BYTE PTR [eax],al
  40dc94:	add    BYTE PTR [esi+0xe],al
  40dc97:	add    BYTE PTR [ebp+0x44ab],cl
  40dc9d:	add    BYTE PTR [eax],al
  40dc9f:	add    BYTE PTR [eax],al
  40dca1:	add    BYTE PTR [eax],al
  40dca3:	add    BYTE PTR [ebp+0x44ab],al
	...
  40dcc9:	add    BYTE PTR [eax],al
  40dccb:	add    al,dl
  40dccd:	fadd   QWORD PTR [eax+0x0]
  40dcd0:	add    BYTE PTR [eax],al
  40dcd2:	add    BYTE PTR [eax],al
  40dcd4:	add    BYTE PTR [eax+edx*1+0x0],al
  40dcd8:	jg     0x40dc85
  40dcda:	inc    esp
	...
  40dd13:	add    BYTE PTR [ecx-0x55],bh
  40dd16:	inc    esp
  40dd17:	add    BYTE PTR [eax],al
  40dd19:	add    BYTE PTR [eax],al
  40dd1b:	add    BYTE PTR [eax],al
  40dd1d:	inc    ebp
  40dd1e:	add    DWORD PTR [eax],eax
  40dd20:	and    al,0xdd
  40dd22:	inc    eax
  40dd23:	add    BYTE PTR [eax],al
  40dd25:	add    BYTE PTR [eax],al
  40dd27:	add    BYTE PTR [eax],al
  40dd29:	dec    esi
  40dd2a:	add    DWORD PTR [eax],eax
  40dd2c:	xor    ch,bl
  40dd2e:	inc    eax
  40dd2f:	add    BYTE PTR [eax],al
  40dd31:	add    BYTE PTR [eax],al
  40dd33:	add    BYTE PTR [eax],al
  40dd35:	inc    esp
  40dd36:	add    DWORD PTR [eax],eax
  40dd38:	cmp    al,0xdd
  40dd3a:	inc    eax
  40dd3b:	add    BYTE PTR [eax],al
  40dd3d:	add    BYTE PTR [eax],al
  40dd3f:	add    BYTE PTR [eax],al
  40dd41:	push   eax
  40dd42:	pop    es
  40dd43:	add    al,al
  40dd45:	fld    QWORD PTR [eax+0x0]
	...
  40dd5c:	pusha  
  40dd5d:	fld    QWORD PTR [eax+0x0]
  40dd60:	add    BYTE PTR [eax],al
  40dd62:	add    BYTE PTR [eax],al
  40dd64:	add    BYTE PTR [eax+0x1],dl
  40dd67:	add    BYTE PTR [eax-0x23],bh
  40dd6a:	inc    eax
  40dd6b:	add    BYTE PTR [eax],al
  40dd6d:	add    BYTE PTR [eax],al
  40dd6f:	add    BYTE PTR [eax],al
  40dd71:	inc    esp
  40dd72:	add    DWORD PTR [eax],eax
  40dd74:	dec    esp
  40dd75:	fiadd  WORD PTR [eax+0x0]
  40dd78:	add    BYTE PTR [eax],al
  40dd7a:	add    BYTE PTR [eax],al
  40dd7c:	add    BYTE PTR [eax+edx*1+0x0],al
  40dd80:	fwait
  40dd81:	stos   DWORD PTR es:[edi],eax
  40dd82:	inc    esp
	...
  40ddbb:	add    BYTE PTR [ebp+0x44ab],dl
  40ddc1:	add    BYTE PTR [eax],al
  40ddc3:	add    BYTE PTR [eax],al
  40ddc5:	inc    esp
  40ddc6:	adc    BYTE PTR [eax],al
  40ddc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddc9:	stos   DWORD PTR es:[edi],eax
  40ddca:	inc    esp
	...
  40de03:	add    BYTE PTR [ecx+0x44ab],ah
  40de09:	add    BYTE PTR [eax],al
  40de0b:	add    BYTE PTR [eax],al
  40de0d:	inc    esp
  40de0e:	verr   WORD PTR [eax-0x21]
  40de12:	inc    eax
  40de13:	add    BYTE PTR [esi+ebx*8+0x40],dh
	...
  40de36:	add    BYTE PTR [eax],al
  40de38:	ins    BYTE PTR es:[edi],dx
  40de39:	fld    QWORD PTR [eax+0x0]
	...
  40de48:	lods   eax,DWORD PTR ds:[esi]
  40de49:	stos   DWORD PTR es:[edi],eax
  40de4a:	inc    esp
  40de4b:	add    BYTE PTR [eax],al
  40de4d:	add    BYTE PTR [eax],al
  40de4f:	add    BYTE PTR [eax],al
  40de51:	dec    esi
  40de52:	add    eax,DWORD PTR [eax]
  40de54:	test   al,0xde
  40de56:	inc    eax
  40de57:	add    BYTE PTR [eax],al
  40de59:	add    BYTE PTR [eax],al
  40de5b:	add    BYTE PTR [eax-0x22],ah
  40de5e:	inc    eax
  40de5f:	add    BYTE PTR [eax],al
  40de61:	add    BYTE PTR [eax],al
  40de63:	add    BYTE PTR [eax],al
  40de65:	inc    esp
  40de66:	adc    BYTE PTR [eax],al
  40de68:	mov    ebx,0x44ab
	...
  40dea1:	add    BYTE PTR [eax],al
  40dea3:	add    BYTE PTR [ebp+0x44ab],dh
  40dea9:	add    BYTE PTR [eax],al
  40deab:	add    BYTE PTR [eax],al
  40dead:	push   eax
  40deae:	add    DWORD PTR [eax],eax
  40deb0:	rcr    dh,0x40
  40deb3:	add    BYTE PTR [eax],al
  40deb5:	add    BYTE PTR [eax],al
  40deb7:	add    BYTE PTR [eax],al
  40deb9:	push   ebx
  40deba:	add    DWORD PTR [eax],eax
  40debc:	or     bh,bl
  40debe:	inc    eax
  40debf:	add    BYTE PTR [eax],al
  40dec1:	add    BYTE PTR [eax],al
  40dec3:	add    BYTE PTR [eax],al
  40dec5:	inc    esp
  40dec6:	adc    BYTE PTR [eax],al
  40dec8:	(bad)  
  40dec9:	stos   DWORD PTR es:[edi],eax
  40deca:	inc    esp
	...
  40df03:	add    cl,al
  40df05:	stos   DWORD PTR es:[edi],eax
  40df06:	inc    esp
  40df07:	add    BYTE PTR [eax],al
  40df09:	add    BYTE PTR [eax],al
  40df0b:	add    BYTE PTR [eax],al
  40df0d:	inc    esp
  40df0e:	or     BYTE PTR [eax],al
  40df10:	dec    eax
  40df11:	fild   WORD PTR [eax+0x0]
  40df14:	xor    bh,bl
  40df16:	inc    eax
	...
  40df23:	add    ch,bl
  40df25:	stos   DWORD PTR es:[edi],eax
  40df26:	inc    esp
  40df27:	add    BYTE PTR [eax],al
  40df29:	add    BYTE PTR [eax],al
  40df2b:	add    ch,cl
  40df2d:	stos   DWORD PTR es:[edi],eax
  40df2e:	inc    esp
  40df2f:	add    BYTE PTR [eax],al
  40df31:	add    BYTE PTR [eax],al
  40df33:	add    BYTE PTR [eax],al
  40df35:	dec    esi
  40df36:	add    DWORD PTR [eax],eax
  40df38:	cmp    al,0xdf
  40df3a:	inc    eax
  40df3b:	add    BYTE PTR [eax],al
  40df3d:	add    BYTE PTR [eax],al
  40df3f:	add    BYTE PTR [eax],al
  40df41:	inc    ebx
  40df42:	add    DWORD PTR [eax],eax
  40df44:	in     al,0xab
  40df46:	inc    esp
  40df47:	add    BYTE PTR [eax],al
  40df49:	add    BYTE PTR [eax],al
  40df4b:	add    BYTE PTR [eax],al
  40df4d:	inc    ebp
  40df4e:	add    DWORD PTR [eax],eax
  40df50:	push   esp
  40df51:	fild   WORD PTR [eax+0x0]
  40df54:	add    BYTE PTR [eax],al
  40df56:	add    BYTE PTR [eax],al
  40df58:	add    BYTE PTR [ebx+0x1],al
  40df5b:	add    al,bh
  40df5d:	stos   DWORD PTR es:[edi],eax
  40df5e:	inc    esp
  40df5f:	add    BYTE PTR [eax],al
  40df61:	add    BYTE PTR [eax],al
  40df63:	add    BYTE PTR [eax],al
  40df65:	inc    esp
  40df66:	add    DWORD PTR [eax],eax
  40df68:	ins    BYTE PTR es:[edi],dx
  40df69:	fild   WORD PTR [eax+0x0]
  40df6c:	add    BYTE PTR [eax],al
  40df6e:	add    BYTE PTR [eax],al
  40df70:	add    BYTE PTR [eax+0x4],dl
  40df73:	add    BYTE PTR [eax-0x20],al
  40df76:	inc    eax
	...
  40df7f:	add    BYTE PTR [eax+0x40df],dl
  40df85:	add    BYTE PTR [eax],al
  40df87:	add    BYTE PTR [eax],al
  40df89:	inc    edx
  40df8a:	add    DWORD PTR [eax],eax
  40df8c:	loopne 0x40df6d
  40df8e:	inc    eax
  40df8f:	add    BYTE PTR [eax],al
  40df91:	add    BYTE PTR [eax],al
  40df93:	add    BYTE PTR [eax],al
  40df95:	inc    esp
  40df96:	adc    al,BYTE PTR [eax]
  40df98:	pop    ds
  40df99:	lods   al,BYTE PTR ds:[esi]
  40df9a:	inc    esp
	...
  40dfd3:	add    BYTE PTR [ecx],bl
  40dfd5:	lods   al,BYTE PTR ds:[esi]
  40dfd6:	inc    esp
  40dfd7:	add    BYTE PTR [eax],al
  40dfd9:	add    BYTE PTR [eax],al
  40dfdb:	add    BYTE PTR [edi+ebx*8+0x40],al
  40dfe2:	add    BYTE PTR [eax],al
  40dfe4:	add    BYTE PTR [eax+0x1],dl
  40dfe7:	add    al,bh
  40dfe9:	fild   WORD PTR [eax+0x0]
  40dfec:	add    BYTE PTR [eax],al
  40dfee:	add    BYTE PTR [eax],al
  40dff0:	add    BYTE PTR [ebx+0x1],al
  40dff3:	add    al,ch
  40dff5:	loopne 0x40e037
  40dff7:	add    BYTE PTR [eax],al
  40dff9:	add    BYTE PTR [eax],al
  40dffb:	add    BYTE PTR [eax],al
  40dffd:	inc    esp
  40dffe:	adc    BYTE PTR [eax],al
  40e000:	adc    ebp,DWORD PTR [esp+eax*2+0x0]
	...
  40e03b:	add    BYTE PTR ds:0x44ac,cl
  40e041:	add    BYTE PTR [eax],al
  40e043:	add    BYTE PTR [eax],al
  40e045:	inc    esp
  40e046:	adc    BYTE PTR [eax],al
  40e048:	sub    ebp,DWORD PTR [esp+eax*2+0x0]
	...
  40e083:	add    BYTE PTR ds:0x44ac,ah
  40e089:	add    BYTE PTR [eax],al
  40e08b:	add    BYTE PTR [eax],al
  40e08d:	inc    ebx
  40e08e:	or     al,0x0
  40e090:	mov    eax,0x510040e1
  40e095:	lods   al,BYTE PTR ds:[esi]
  40e096:	inc    esp
	...
  40e0bb:	add    al,al
  40e0bd:	loopne 0x40e0ff
  40e0bf:	add    BYTE PTR [eax],al
  40e0c1:	add    BYTE PTR [eax],al
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	dec    ecx
  40e0c6:	or     BYTE PTR [eax],al
  40e0c8:	dec    ecx
  40e0c9:	lods   al,BYTE PTR ds:[esi]
  40e0ca:	inc    esp
	...
  40e0e3:	add    ah,ch
  40e0e5:	fild   WORD PTR [eax+0x0]
  40e0e8:	add    BYTE PTR [eax],al
  40e0ea:	add    BYTE PTR [eax],al
  40e0ec:	add    BYTE PTR [ebx+0x1],cl
  40e0ef:	add    ah,dh
  40e0f1:	loopne 0x40e133
  40e0f3:	add    BYTE PTR [eax],al
  40e0f5:	add    BYTE PTR [eax],al
  40e0f7:	add    BYTE PTR [eax],al
  40e0f9:	dec    eax
  40e0fa:	add    eax,0x40e11c00
	...
  40e10b:	add    BYTE PTR [eax],dl
  40e10d:	loope  0x40e14f
  40e10f:	add    BYTE PTR [eax],al
  40e111:	add    BYTE PTR [eax],al
  40e113:	add    BYTE PTR [eax],al
  40e115:	push   eax
  40e116:	add    DWORD PTR [eax],eax
  40e118:	sub    cl,ah
  40e11a:	inc    eax
  40e11b:	add    BYTE PTR [eax],al
  40e11d:	add    BYTE PTR [eax],al
  40e11f:	add    BYTE PTR [eax],al
  40e121:	push   eax
  40e122:	add    DWORD PTR [eax],eax
  40e124:	jo     0x40e107
  40e126:	inc    eax
  40e127:	add    BYTE PTR [eax],al
  40e129:	add    BYTE PTR [eax],al
  40e12b:	add    BYTE PTR [eax],al
  40e12d:	inc    esp
  40e12e:	adc    BYTE PTR [eax],al
  40e130:	aaa    
  40e131:	lods   al,BYTE PTR ds:[esi]
  40e132:	inc    esp
	...
  40e16b:	add    BYTE PTR [ecx],dh
  40e16d:	lods   al,BYTE PTR ds:[esi]
  40e16e:	inc    esp
  40e16f:	add    BYTE PTR [eax],al
  40e171:	add    BYTE PTR [eax],al
  40e173:	add    BYTE PTR [eax],al
  40e175:	inc    esp
  40e176:	adc    BYTE PTR [eax],al
  40e178:	inc    ebx
  40e179:	lods   al,BYTE PTR ds:[esi]
  40e17a:	inc    esp
	...
  40e1b3:	add    BYTE PTR ds:0x44ac,bh
  40e1b9:	add    BYTE PTR [eax],al
  40e1bb:	add    BYTE PTR [eax],al
  40e1bd:	dec    edi
  40e1be:	add    DWORD PTR [eax],eax
  40e1c0:	(bad)
  40e1c4:	add    BYTE PTR [eax],al
  40e1c6:	add    BYTE PTR [eax],al
  40e1c8:	add    BYTE PTR [ebp+0x1],cl
  40e1cb:	add    al,dl
  40e1cd:	loope  0x40e20f
  40e1cf:	add    BYTE PTR [eax],al
  40e1d1:	add    BYTE PTR [eax],al
  40e1d3:	add    BYTE PTR [eax],al
  40e1d5:	dec    ecx
  40e1d6:	add    DWORD PTR [eax],eax
  40e1d8:	fsubr  st(1),st
  40e1da:	inc    eax
  40e1db:	add    BYTE PTR [eax],al
  40e1dd:	add    BYTE PTR [eax],al
  40e1df:	add    BYTE PTR [eax],al
  40e1e1:	push   ebx
  40e1e2:	add    DWORD PTR [eax],eax
  40e1e4:	call   0x4122ca
  40e1e9:	add    BYTE PTR [eax],al
  40e1eb:	add    BYTE PTR [eax],al
  40e1ed:	inc    esp
  40e1ee:	adc    BYTE PTR [eax],al
  40e1f0:	pop    ebp
  40e1f1:	lods   al,BYTE PTR ds:[esi]
  40e1f2:	inc    esp
	...
  40e22b:	add    BYTE PTR [edi-0x54],dl
  40e22e:	inc    esp
  40e22f:	add    BYTE PTR [eax],al
  40e231:	add    BYTE PTR [eax],al
  40e233:	add    BYTE PTR [eax],al
  40e235:	xor    DWORD PTR [edx],ebp
  40e237:	add    BYTE PTR [ecx+0x44ac],dh
	...
  40e279:	add    BYTE PTR [eax],al
  40e27b:	add    BYTE PTR [ecx+0x44ac],ch
  40e281:	add    BYTE PTR [eax],al
  40e283:	add    BYTE PTR [eax],al
  40e285:	add    BYTE PTR [eax],al
  40e287:	add    BYTE PTR [ebx+eiz*8],ch
  40e28a:	inc    eax
	...
  40e293:	add    BYTE PTR [ecx-0x76ffbb54],dl
  40e299:	lods   al,BYTE PTR ds:[esi]
  40e29a:	inc    esp
	...
  40e2d7:	add    BYTE PTR [ebx+eiz*8],dl
  40e2da:	inc    eax
  40e2db:	add    al,ah
  40e2dd:	loop   0x40e31f
  40e2df:	add    BYTE PTR [eax],al
  40e2e1:	add    BYTE PTR [eax],al
  40e2e3:	add    BYTE PTR [eax],al
  40e2e5:	inc    ebx
  40e2e6:	or     eax,DWORD PTR [eax]
  40e2e8:	imul   ebp,DWORD PTR [esp+eax*2+0x0],0x0
	...
  40e310:	arpl   WORD PTR [esp+eax*2+0x0],bp
  40e317:	add    BYTE PTR [eax],al
  40e319:	push   eax
  40e31a:	add    DWORD PTR [eax],eax
  40e31c:	and    bl,ah
  40e31e:	inc    eax
  40e31f:	add    BYTE PTR [eax],al
  40e321:	add    BYTE PTR [eax],al
  40e323:	add    BYTE PTR [eax],al
  40e325:	inc    ebp
  40e326:	add    DWORD PTR [eax],eax
  40e328:	je     0x40e2d6
  40e32a:	inc    esp
  40e32b:	add    BYTE PTR [eax],al
  40e32d:	add    BYTE PTR [eax],al
  40e32f:	add    BYTE PTR [eax],al
  40e331:	push   ebx
  40e332:	push   es
  40e333:	add    BYTE PTR [ebx+0x44ac],ah
	...
  40e345:	add    BYTE PTR [eax],al
  40e347:	add    BYTE PTR [ecx+0x44ac],bl
  40e34d:	add    BYTE PTR [eax],al
  40e34f:	add    BYTE PTR [eax],al
  40e351:	push   ebx
  40e352:	add    DWORD PTR [eax],eax
  40e354:	shl    bl,1
  40e356:	inc    eax
  40e357:	add    BYTE PTR [eax],al
  40e359:	add    BYTE PTR [eax],al
  40e35b:	add    BYTE PTR [eax],al
  40e35d:	inc    ecx
  40e35e:	sbb    DWORD PTR [eax],eax
  40e360:	shr    al,1
  40e362:	inc    eax
  40e363:	add    BYTE PTR [eax-0x18],ch
  40e366:	inc    eax
  40e367:	add    BYTE PTR [eax-0x18],dl
  40e36a:	inc    eax
  40e36b:	add    BYTE PTR [ebp-0x4f],dl
  40e36e:	inc    esp
  40e36f:	add    BYTE PTR [eax],ah
  40e371:	out    0x40,eax
  40e373:	add    BYTE PTR [ecx],dl
  40e375:	mov    al,0x44
  40e377:	add    BYTE PTR [ecx],cl
  40e379:	mov    al,0x44
  40e37b:	add    BYTE PTR [eax-0x6fffbf1a],dl
  40e381:	scas   al,BYTE PTR es:[edi]
  40e382:	inc    esp
  40e383:	add    BYTE PTR [eax],al
  40e385:	add    BYTE PTR [eax],al
  40e387:	add    BYTE PTR [ecx+0x380044ae],al
  40e38d:	out    0x40,al
  40e38f:	add    BYTE PTR [ebx-0x52],ch
  40e392:	inc    esp
	...
  40e39b:	add    BYTE PTR [eax-0x52],bl
  40e39e:	inc    esp
  40e39f:	add    BYTE PTR [eax-0x1b],bl
  40e3a2:	inc    eax
  40e3a3:	add    BYTE PTR [eax],al
  40e3a5:	add    BYTE PTR [eax],al
  40e3a7:	add    BYTE PTR [ebx],dh
  40e3a9:	scas   al,BYTE PTR es:[edi]
  40e3aa:	inc    esp
  40e3ab:	add    BYTE PTR [eax],dh
  40e3ad:	lods   eax,DWORD PTR ds:[esi]
  40e3ae:	inc    esp
  40e3af:	add    BYTE PTR [esp+eiz*8],ah
  40e3b2:	inc    eax
  40e3b3:	add    BYTE PTR [eax],al
  40e3b5:	add    BYTE PTR [eax],al
  40e3b7:	add    BYTE PTR [eax],dh
  40e3b9:	in     al,0x40
  40e3bb:	add    BYTE PTR [eax],al
  40e3bd:	add    BYTE PTR [eax],al
  40e3bf:	add    BYTE PTR [ebx+eiz*8+0x40],cl
  40e3c3:	add    BYTE PTR [eax],al
  40e3c5:	add    BYTE PTR [eax],al
  40e3c7:	add    BYTE PTR [eax],al
  40e3c9:	inc    ebp
  40e3ca:	add    DWORD PTR [eax],eax
  40e3cc:	sbb    ah,ah
  40e3ce:	inc    eax
  40e3cf:	add    BYTE PTR [eax],al
  40e3d1:	add    BYTE PTR [eax],al
  40e3d3:	add    BYTE PTR [eax],al
  40e3d5:	inc    ebx
  40e3d6:	adc    BYTE PTR [eax],al
  40e3d8:	iret   
  40e3d9:	lods   al,BYTE PTR ds:[esi]
  40e3da:	inc    esp
	...
  40e413:	add    ah,al
  40e415:	jecxz  0x40e457
  40e417:	add    BYTE PTR [eax],al
  40e419:	add    BYTE PTR [eax],al
  40e41b:	add    BYTE PTR [eax],al
  40e41d:	push   esp
  40e41e:	add    DWORD PTR [eax],eax
  40e420:	mov    esp,0x44ac
  40e425:	add    BYTE PTR [eax],al
  40e427:	add    BYTE PTR [eax],al
  40e429:	inc    edx
  40e42a:	add    DWORD PTR [eax],eax
  40e42c:	call   0x4128dd
  40e431:	add    BYTE PTR [eax],al
  40e433:	add    BYTE PTR [eax],al
  40e435:	inc    ecx
  40e436:	ltr    di
  40e439:	lods   al,BYTE PTR ds:[esi]
  40e43a:	inc    esp
	...
  40e46f:	add    bh,dl
  40e471:	lods   al,BYTE PTR ds:[esi]
  40e472:	inc    esp
  40e473:	add    BYTE PTR [eax],al
  40e475:	add    BYTE PTR [eax],al
  40e477:	add    BYTE PTR [eax],al
  40e479:	dec    ecx
  40e47a:	or     al,0x0
  40e47c:	or     ebp,DWORD PTR [ebp+0x44]
	...
  40e4a6:	add    BYTE PTR [eax],al
  40e4a8:	add    eax,0x44ad
  40e4ad:	add    BYTE PTR [eax],al
  40e4af:	add    BYTE PTR [eax],al
  40e4b1:	inc    ebx
  40e4b2:	add    DWORD PTR [eax],eax
  40e4b4:	test   BYTE PTR [ebp+0x44],ch
  40e4ba:	add    BYTE PTR [eax],al
  40e4bc:	add    BYTE PTR [ecx+edx*1+0x0],al
  40e4c0:	pop    ds
  40e4c1:	lods   eax,DWORD PTR ds:[esi]
  40e4c2:	inc    esp
	...
  40e4fb:	add    BYTE PTR [ecx],bl
  40e4fd:	lods   eax,DWORD PTR ds:[esi]
  40e4fe:	inc    esp
  40e4ff:	add    BYTE PTR [ebx],dl
  40e501:	lods   eax,DWORD PTR ds:[esi]
  40e502:	inc    esp
  40e503:	add    BYTE PTR [eax],al
  40e505:	add    BYTE PTR [eax],al
  40e507:	add    BYTE PTR [eax],al
  40e509:	push   ebx
  40e50a:	add    DWORD PTR [eax],eax
  40e50c:	cwde   
  40e50d:	lods   eax,DWORD PTR ds:[esi]
  40e50e:	inc    esp
  40e50f:	add    BYTE PTR [eax],al
  40e511:	add    BYTE PTR [eax],al
  40e513:	add    BYTE PTR [eax],al
  40e515:	inc    esp
  40e516:	adc    BYTE PTR [eax],al
  40e518:	sub    ebp,DWORD PTR [ebp+0x44]
	...
  40e552:	add    BYTE PTR [eax],al
  40e554:	and    eax,0x44ad
  40e559:	add    BYTE PTR [eax],al
  40e55b:	add    BYTE PTR [eax],al
  40e55d:	push   edx
  40e55e:	push   es
  40e55f:	add    BYTE PTR [eax-0x1b],bh
  40e562:	inc    eax
	...
  40e573:	add    BYTE PTR [ecx],bh
  40e575:	scas   al,BYTE PTR es:[edi]
  40e576:	inc    esp
  40e577:	add    BYTE PTR [eax],al
  40e579:	add    BYTE PTR [eax],al
  40e57b:	add    BYTE PTR [eax],al
  40e57d:	push   esp
  40e57e:	add    DWORD PTR [eax],eax
  40e580:	test   ch,ah
  40e582:	inc    eax
  40e583:	add    BYTE PTR [eax],al
  40e585:	add    BYTE PTR [eax],al
  40e587:	add    BYTE PTR [eax],al
  40e589:	push   eax
  40e58a:	add    al,0x0
  40e58c:	lock in eax,0x40
	...
  40e597:	add    BYTE PTR [eax+0x40e5],ch
  40e59d:	add    BYTE PTR [eax],al
  40e59f:	add    BYTE PTR [eax],al
  40e5a1:	inc    ebp
  40e5a2:	add    DWORD PTR [eax],eax
  40e5a4:	hlt    
  40e5a5:	scas   al,BYTE PTR es:[edi]
  40e5a6:	inc    esp
  40e5a7:	add    BYTE PTR [eax],al
  40e5a9:	add    BYTE PTR [eax],al
  40e5ab:	add    BYTE PTR [eax],al
  40e5ad:	inc    esp
  40e5ae:	adc    BYTE PTR [eax],al
  40e5b0:	inc    edi
  40e5b1:	scas   al,BYTE PTR es:[edi]
  40e5b2:	inc    esp
	...
  40e5eb:	add    BYTE PTR [ecx-0x52],al
  40e5ee:	inc    esp
  40e5ef:	add    BYTE PTR [eax],al
  40e5f1:	add    BYTE PTR [eax],al
  40e5f3:	add    BYTE PTR [eax],al
  40e5f5:	inc    esp
  40e5f6:	adc    BYTE PTR [eax],al
  40e5f8:	push   ebx
  40e5f9:	scas   al,BYTE PTR es:[edi]
  40e5fa:	inc    esp
	...
  40e633:	add    BYTE PTR [ebp-0x52],cl
  40e636:	inc    esp
  40e637:	add    BYTE PTR [eax],al
  40e639:	add    BYTE PTR [eax],al
  40e63b:	add    BYTE PTR [eax],al
  40e63d:	inc    esp
  40e63e:	adc    al,0x0
  40e640:	jnp    0x40e5f0
  40e642:	inc    esp
	...
  40e68b:	add    BYTE PTR [ebx-0x52],dh
  40e68e:	inc    esp
  40e68f:	add    BYTE PTR [eax],al
  40e691:	add    BYTE PTR [eax],al
  40e693:	add    BYTE PTR [eax],al
  40e695:	dec    esp
  40e696:	or     al,BYTE PTR [eax]
  40e698:	mov    al,ds:0x44af
  40e69d:	add    BYTE PTR [eax],al
  40e69f:	add    BYTE PTR [eax],al
  40e6a1:	add    BYTE PTR [eax],al
  40e6a3:	add    BYTE PTR [ecx+0x44af],bl
  40e6a9:	add    BYTE PTR [eax],al
  40e6ab:	add    BYTE PTR [eax],al
  40e6ad:	add    BYTE PTR [eax],al
  40e6af:	add    BYTE PTR [eax],dh
  40e6b1:	scas   eax,DWORD PTR es:[edi]
  40e6b2:	inc    esp
	...
  40e6bb:	add    al,al
  40e6bd:	out    0x40,al
  40e6bf:	add    BYTE PTR [eax],al
  40e6c1:	add    BYTE PTR [eax],al
  40e6c3:	add    BYTE PTR [eax],al
  40e6c5:	inc    esi
  40e6c6:	add    DWORD PTR [eax],eax
  40e6c8:	int3   
  40e6c9:	out    0x40,al
  40e6cb:	add    BYTE PTR [eax],al
  40e6cd:	add    BYTE PTR [eax],al
  40e6cf:	add    BYTE PTR [eax],al
  40e6d1:	push   eax
  40e6d2:	add    DWORD PTR [eax],eax
  40e6d4:	fsub   st,st(6)
  40e6d6:	inc    eax
  40e6d7:	add    BYTE PTR [eax],al
  40e6d9:	add    BYTE PTR [eax],al
  40e6db:	add    BYTE PTR [eax],al
  40e6dd:	inc    esp
  40e6de:	adc    BYTE PTR [eax],al
  40e6e0:	sub    ebp,DWORD PTR [edi+0x44]
	...
  40e71a:	add    BYTE PTR [eax],al
  40e71c:	and    eax,0x44af
  40e721:	add    BYTE PTR [eax],al
  40e723:	add    BYTE PTR [eax],al
  40e725:	inc    ebx
  40e726:	adc    al,BYTE PTR [eax]
  40e728:	dec    ecx
  40e729:	mov    cl,0x44
	...
  40e737:	add    BYTE PTR [edi],bh
  40e739:	mov    cl,0x44
	...
  40e76b:	add    BYTE PTR [eax-0x19],dh
  40e76e:	inc    eax
  40e76f:	add    BYTE PTR [eax],al
  40e771:	add    BYTE PTR [eax],al
  40e773:	add    BYTE PTR [eax],al
  40e775:	inc    ecx
  40e776:	sbb    al,BYTE PTR [eax]
  40e778:	sub    al,0xb1
  40e77a:	inc    esp
  40e77b:	add    BYTE PTR [eax],bl
  40e77d:	mov    cl,0x44
  40e77f:	add    BYTE PTR [ecx],dl
  40e781:	mov    cl,0x44
  40e783:	add    BYTE PTR [eax],al
  40e785:	add    BYTE PTR [eax],al
  40e787:	add    BYTE PTR [ebx],cl
  40e789:	mov    cl,0x44
  40e78b:	add    BYTE PTR [eax],al
  40e78d:	add    BYTE PTR [eax],al
  40e78f:	add    al,bh
  40e791:	mov    al,0x44
	...
  40e7a3:	add    ah,ah
  40e7a5:	mov    al,0x44
  40e7a7:	add    BYTE PTR [eax],al
  40e7a9:	add    BYTE PTR [eax],al
  40e7ab:	add    al,ah
  40e7ad:	out    0x40,eax
  40e7af:	add    BYTE PTR [ecx-0x50],ch
  40e7b2:	inc    esp
  40e7b3:	add    BYTE PTR [eax],ch
  40e7b5:	mov    al,0x44
	...
  40e7bf:	add    BYTE PTR [ecx],ah
  40e7c1:	mov    al,0x44
	...
  40e7db:	add    BYTE PTR [ebx],bl
  40e7dd:	mov    al,0x44
  40e7df:	add    BYTE PTR [eax],al
  40e7e1:	add    BYTE PTR [eax],al
  40e7e3:	add    BYTE PTR [eax],al
  40e7e5:	inc    ecx
  40e7e6:	sbb    al,BYTE PTR [eax]
  40e7e8:	shl    BYTE PTR [eax-0x4f43ffbc],1
  40e7ee:	inc    esp
  40e7ef:	add    BYTE PTR [ebp+0x44b0],dh
  40e7f5:	add    BYTE PTR [eax],al
  40e7f7:	add    BYTE PTR [edi+0x44b0],ch
  40e7fd:	add    BYTE PTR [eax],al
  40e7ff:	add    BYTE PTR [eax+esi*4+0x44],bl
	...
  40e812:	add    BYTE PTR [eax],al
  40e814:	mov    BYTE PTR [eax+0x44],dh
  40e81a:	add    BYTE PTR [eax],al
  40e81c:	add    BYTE PTR [eax],al
  40e81e:	add    BYTE PTR [eax],al
  40e820:	xor    DWORD PTR [eax-0x4f84ffbc],0x44
  40e82a:	add    BYTE PTR [eax],al
  40e82c:	add    BYTE PTR [eax],al
  40e82e:	add    BYTE PTR [eax],al
  40e830:	jne    0x40e7e2
  40e832:	inc    esp
	...
  40e84b:	add    BYTE PTR [edi-0x50],ch
  40e84e:	inc    esp
  40e84f:	add    BYTE PTR [eax],al
  40e851:	add    BYTE PTR [eax],al
  40e853:	add    BYTE PTR [eax],al
  40e855:	inc    ecx
  40e856:	add    DWORD PTR [eax],eax
  40e858:	pop    esp
  40e859:	call   0x40e89e
  40e85e:	add    BYTE PTR [eax],al
  40e860:	add    BYTE PTR [ebx+0x1],dl
  40e863:	add    BYTE PTR [eax-0x4f],ah
  40e866:	inc    esp
  40e867:	add    BYTE PTR [eax],al
  40e869:	add    BYTE PTR [eax],al
  40e86b:	add    BYTE PTR [eax],al
  40e86d:	inc    edx
  40e86e:	sbb    BYTE PTR [eax],al
  40e870:	loope  0x40e823
  40e872:	inc    esp
	...
  40e8cb:	add    cl,bl
  40e8cd:	mov    cl,0x44
  40e8cf:	add    BYTE PTR [eax],al
  40e8d1:	add    BYTE PTR [eax],al
  40e8d3:	add    BYTE PTR [eax],al
  40e8d5:	dec    eax
  40e8d6:	or     eax,DWORD PTR [eax]
  40e8d8:	add    DWORD PTR [edx+0x44],esi
	...
  40e8e6:	add    BYTE PTR [eax],al
  40e8e8:	sti    
  40e8e9:	mov    cl,0x44
	...
  40e8ff:	add    al,ch
  40e901:	mov    cl,0x44
  40e903:	add    BYTE PTR [eax],al
  40e905:	add    BYTE PTR [eax],al
  40e907:	add    BYTE PTR [eax],al
  40e909:	dec    ecx
  40e90a:	or     DWORD PTR [eax],eax
  40e90c:	pop    ds
  40e90d:	mov    dl,0x44
	...
  40e91b:	add    BYTE PTR [ecx],bl
  40e91d:	mov    dl,0x44
	...
  40e927:	add    BYTE PTR [ebx],dl
  40e929:	mov    dl,0x44
  40e92b:	add    ah,al
  40e92d:	jmp    0x40e972
  40e932:	add    BYTE PTR [eax],al
  40e934:	add    BYTE PTR [ecx],dh
  40e936:	and    eax,DWORD PTR [eax]
  40e938:	mov    esp,0x40ec
	...
  40e951:	add    BYTE PTR [eax],al
  40e953:	add    BYTE PTR [eax],bl
  40e955:	mov    ah,0x44
  40e957:	add    BYTE PTR [eax+0x44b3],ah
	...
  40e975:	add    BYTE PTR [eax],al
  40e977:	add    BYTE PTR [edi-0x6fffbb4d],cl
  40e97d:	in     al,dx
  40e97e:	inc    eax
  40e97f:	add    BYTE PTR [esp+ebp*8],bh
  40e982:	inc    eax
  40e983:	add    al,dl
  40e985:	jmp    0x40e9c7
  40e987:	add    al,dh
  40e989:	jmp    0x0:0x40
	...
  40e9b0:	hlt    
  40e9b1:	jmp    0x40e9f6
	...
  40e9be:	add    BYTE PTR [eax],al
  40e9c0:	add    al,0xe9
  40e9c2:	inc    eax
  40e9c3:	add    BYTE PTR [eax],al
  40e9c5:	add    BYTE PTR [eax],al
  40e9c7:	add    BYTE PTR [eax],al
  40e9c9:	push   edx
  40e9ca:	add    DWORD PTR [eax],eax
  40e9cc:	shr    cl,1
  40e9ce:	inc    eax
  40e9cf:	add    BYTE PTR [eax],al
  40e9d1:	add    BYTE PTR [eax],al
  40e9d3:	add    BYTE PTR [eax],al
  40e9d5:	push   esp
  40e9d6:	add    DWORD PTR [eax],eax
  40e9d8:	fsub   st(1),st
  40e9da:	inc    eax
  40e9db:	add    BYTE PTR [eax],al
  40e9dd:	add    BYTE PTR [eax],al
  40e9df:	add    BYTE PTR [eax],al
  40e9e1:	push   eax
  40e9e2:	add    al,0x0
  40e9e4:	or     eax,0x44b2
  40e9e9:	add    BYTE PTR [eax],al
  40e9eb:	add    BYTE PTR [eax],al
  40e9ed:	add    BYTE PTR [eax],al
  40e9ef:	add    BYTE PTR [edi],al
  40e9f1:	mov    dl,0x44
  40e9f3:	add    BYTE PTR [eax],al
  40e9f5:	add    BYTE PTR [eax],al
  40e9f7:	add    BYTE PTR [eax],al
  40e9f9:	dec    esp
  40e9fa:	or     al,BYTE PTR [eax]
  40e9fc:	dec    edi
  40e9fd:	mov    dl,0x44
	...
  40ea13:	add    BYTE PTR [edx+esi*4],bh
  40ea16:	inc    esp
	...
  40ea1f:	add    BYTE PTR [edx+ebp*8],ah
  40ea22:	inc    eax
  40ea23:	add    BYTE PTR [eax],al
  40ea25:	add    BYTE PTR [eax],al
  40ea27:	add    BYTE PTR [eax],al
  40ea29:	dec    esi
  40ea2a:	add    DWORD PTR [eax],eax
  40ea2c:	xor    dl,ch
  40ea2e:	inc    eax
  40ea2f:	add    BYTE PTR [eax],al
  40ea31:	add    BYTE PTR [eax],al
  40ea33:	add    BYTE PTR [eax],al
  40ea35:	inc    esp
  40ea36:	add    DWORD PTR [eax],eax
  40ea38:	cmp    al,0xea
  40ea3a:	inc    eax
  40ea3b:	add    BYTE PTR [eax],al
  40ea3d:	add    BYTE PTR [eax],al
  40ea3f:	add    BYTE PTR [eax],al
  40ea41:	push   eax
  40ea42:	add    al,0x0
  40ea44:	test   al,0xea
  40ea46:	inc    eax
	...
  40ea4f:	add    BYTE PTR [eax-0x16],ah
  40ea52:	inc    eax
  40ea53:	add    BYTE PTR [eax],al
  40ea55:	add    BYTE PTR [eax],al
  40ea57:	add    BYTE PTR [eax],al
  40ea59:	dec    esp
  40ea5a:	add    DWORD PTR [eax],eax
  40ea5c:	test   al,0xeb
  40ea5e:	inc    eax
  40ea5f:	add    BYTE PTR [eax],al
  40ea61:	add    BYTE PTR [eax],al
  40ea63:	add    BYTE PTR [eax],al
  40ea65:	inc    esp
  40ea66:	adc    BYTE PTR [eax],al
  40ea68:	sub    esi,DWORD PTR [edx+0x44]
	...
  40eaa2:	add    BYTE PTR [eax],al
  40eaa4:	and    eax,0x44b2
  40eaa9:	add    BYTE PTR [eax],al
  40eaab:	add    BYTE PTR [eax],al
  40eaad:	inc    esp
  40eaae:	adc    BYTE PTR [eax],al
  40eab0:	aaa    
  40eab1:	mov    dl,0x44
	...
  40eaeb:	add    BYTE PTR [ecx],dh
  40eaed:	mov    dl,0x44
  40eaef:	add    BYTE PTR [eax],al
  40eaf1:	add    BYTE PTR [eax],al
  40eaf3:	add    BYTE PTR [eax],al
  40eaf5:	inc    ecx
  40eaf6:	adc    al,0x0
  40eaf8:	push   esp
  40eaf9:	jmp    0x0:0x40
  40eb00:	push   DWORD PTR [edx+0x44]
	...
  40eb32:	add    BYTE PTR [eax],al
  40eb34:	js     0x40eae8
  40eb36:	inc    esp
	...
  40eb43:	add    BYTE PTR [edx+esi*4+0x44],dl
  40eb47:	add    BYTE PTR [eax],al
  40eb49:	add    BYTE PTR [eax],al
  40eb4b:	add    BYTE PTR [eax],al
  40eb4d:	inc    ebp
  40eb4e:	push   ss
  40eb4f:	add    ch,ah
  40eb51:	mov    dl,0x44
	...
  40eba3:	add    bh,bl
  40eba5:	mov    dl,0x44
  40eba7:	add    BYTE PTR [eax],al
  40eba9:	add    BYTE PTR [eax],al
  40ebab:	add    BYTE PTR [eax],al
  40ebad:	xor    DWORD PTR [eax],ecx
  40ebaf:	add    BYTE PTR [ebx],dl
  40ebb1:	mov    bl,0x44
	...
  40ebbb:	add    BYTE PTR ds:0x44b3,cl
	...
  40ebc9:	add    BYTE PTR [eax],al
  40ebcb:	add    BYTE PTR [edi],al
  40ebcd:	mov    bl,0x44
  40ebcf:	add    BYTE PTR [eax],al
  40ebd1:	add    BYTE PTR [eax],al
  40ebd3:	add    BYTE PTR [eax],al
  40ebd5:	inc    esi
  40ebd6:	adc    eax,DWORD PTR [eax]
  40ebd8:	pop    ebx
  40ebd9:	mov    bl,0x44
  40ebdb:	add    BYTE PTR [ecx-0x4d],dl
  40ebde:	inc    esp
  40ebdf:	add    BYTE PTR [eax],al
  40ebe1:	add    BYTE PTR [eax],al
  40ebe3:	add    BYTE PTR [ebx-0x4d],cl
  40ebe6:	inc    esp
	...
  40ebf3:	add    BYTE PTR [ebx-0x4d],al
  40ebf6:	inc    esp
	...
  40ebff:	add    BYTE PTR [ebx],bh
  40ec01:	mov    bl,0x44
  40ec03:	add    BYTE PTR [eax],al
  40ec05:	add    BYTE PTR [eax],al
  40ec07:	add    BYTE PTR [ebx],dh
  40ec09:	mov    bl,0x44
  40ec0b:	add    BYTE PTR [eax],al
  40ec0d:	add    BYTE PTR [eax],al
  40ec0f:	add    BYTE PTR [esp+ebp*8],ah
  40ec12:	inc    eax
	...
  40ec1f:	add    BYTE PTR [ecx],bl
  40ec21:	mov    bl,0x44
  40ec23:	add    BYTE PTR [eax],al
  40ec25:	add    BYTE PTR [eax],al
  40ec27:	add    BYTE PTR [eax],al
  40ec29:	push   ebx
  40ec2a:	add    DWORD PTR [eax],eax
  40ec2c:	xor    ah,ch
  40ec2e:	inc    eax
  40ec2f:	add    BYTE PTR [eax],al
  40ec31:	add    BYTE PTR [eax],al
  40ec33:	add    BYTE PTR [eax],al
  40ec35:	inc    ebx
  40ec36:	add    DWORD PTR [eax],eax
  40ec38:	and    BYTE PTR [ebx+0x44],dh
  40ec3e:	add    BYTE PTR [eax],al
  40ec40:	add    BYTE PTR [ebp+ecx*1+0x0],cl
  40ec44:	jge    0x40ebf9
  40ec46:	inc    esp
	...
  40ec53:	add    BYTE PTR [eax-0x14],bh
  40ec56:	inc    eax
  40ec57:	add    BYTE PTR [eax],al
  40ec59:	add    BYTE PTR [eax],al
  40ec5b:	add    BYTE PTR [ebx-0x4d],ch
  40ec5e:	inc    esp
	...
  40ec73:	add    BYTE PTR [ebp-0x4d],ah
  40ec76:	inc    esp
  40ec77:	add    BYTE PTR [eax],al
  40ec79:	add    BYTE PTR [eax],al
  40ec7b:	add    BYTE PTR [eax],al
  40ec7d:	push   eax
  40ec7e:	add    al,0x0
  40ec80:	ja     0x40ec35
  40ec82:	inc    esp
	...
  40ec8b:	add    BYTE PTR [ecx-0x4d],dh
  40ec8e:	inc    esp
  40ec8f:	add    BYTE PTR [eax],al
  40ec91:	add    BYTE PTR [eax],al
  40ec93:	add    BYTE PTR [eax],al
  40ec95:	push   eax
  40ec96:	or     DWORD PTR [eax],eax
  40ec98:	mov    DWORD PTR [ebx+0x44],esi
	...
  40ecb6:	add    BYTE PTR [eax],al
  40ecb8:	xor    DWORD PTR [ebx+0x44],0x0
  40ecbf:	add    BYTE PTR [eax],al
  40ecc1:	xor    BYTE PTR [esi],al
  40ecc3:	add    al,ch
  40ecc5:	mov    dh,0x44
  40ecc7:	add    BYTE PTR [eax-0x4a],dh
  40ecca:	inc    esp
  40eccb:	add    al,bh
  40eccd:	mov    ch,0x44
  40eccf:	add    BYTE PTR [eax+0x80044b5],al
  40ecd5:	mov    ch,0x44
  40ecd7:	add    BYTE PTR [eax+0x44b4],dl
  40ecdd:	add    BYTE PTR [eax],al
  40ecdf:	add    BYTE PTR [eax],al
  40ece1:	dec    eax
  40ece2:	add    DWORD PTR [eax],eax
  40ece4:	push   0x44b7
  40ece9:	add    BYTE PTR [eax],al
  40eceb:	add    BYTE PTR [eax],al
  40eced:	inc    ecx
  40ecee:	sbb    BYTE PTR [eax],al
  40ecf0:	nop
  40ecf1:	add    DWORD PTR [ecx+0x0],eax
  40ecf4:	push   eax
  40ecf5:	add    DWORD PTR [ecx+0x0],eax
  40ecf8:	and    bh,bh
  40ecfa:	inc    eax
  40ecfb:	add    BYTE PTR ds:0xa80044bb,bh
  40ed01:	inc    BYTE PTR [eax+0x0]
  40ed04:	sbb    ah,bh
  40ed06:	inc    eax
  40ed07:	add    BYTE PTR [eax],al
  40ed09:	add    BYTE PTR [eax],al
  40ed0b:	add    al,bl
  40ed0d:	cli    
  40ed0e:	inc    eax
  40ed0f:	add    BYTE PTR [eax+0x40f9],al
	...
  40ed1d:	add    BYTE PTR [eax],al
  40ed1f:	add    BYTE PTR [eax+0x40f3],dh
  40ed25:	add    BYTE PTR [eax],al
  40ed27:	add    BYTE PTR [ebx+esi*8+0x40],cl
  40ed2e:	add    BYTE PTR [eax],al
  40ed30:	add    BYTE PTR [eax],al
  40ed32:	add    BYTE PTR [eax],al
  40ed34:	mov    eax,0xe00040f2
  40ed39:	out    dx,al
  40ed3a:	inc    eax
  40ed3b:	add    BYTE PTR [eax+0x500040ee],ah
  40ed41:	in     eax,dx
  40ed42:	inc    eax
	...
  40ed4b:	add    BYTE PTR [ebp-0x49],dl
  40ed4e:	inc    esp
  40ed4f:	add    BYTE PTR [eax],al
  40ed51:	add    BYTE PTR [eax],al
  40ed53:	add    BYTE PTR [eax],al
  40ed55:	inc    edx
  40ed56:	adc    al,BYTE PTR [eax]
  40ed58:	or     eax,0x44b8
	...
  40ed85:	add    BYTE PTR [eax],al
  40ed87:	add    BYTE PTR [eax+0x40ed],ah
	...
  40ed95:	add    BYTE PTR [eax],al
  40ed97:	add    cl,dl
  40ed99:	mov    bh,0x44
  40ed9b:	add    ah,bl
  40ed9d:	in     al,dx
  40ed9e:	inc    eax
  40ed9f:	add    BYTE PTR [eax],al
  40eda1:	add    BYTE PTR [eax],al
  40eda3:	add    BYTE PTR [eax],al
  40eda5:	push   eax
  40eda6:	add    DWORD PTR [eax],eax
  40eda8:	lods   al,BYTE PTR ds:[esi]
  40eda9:	in     eax,dx
  40edaa:	inc    eax
  40edab:	add    BYTE PTR [eax],al
  40edad:	add    BYTE PTR [eax],al
  40edaf:	add    BYTE PTR [eax],al
  40edb1:	inc    ebx
  40edb2:	add    DWORD PTR [eax],eax
  40edb4:	mov    eax,0x40ed
  40edb9:	add    BYTE PTR [eax],al
  40edbb:	add    BYTE PTR [eax],al
  40edbd:	dec    ebx
  40edbe:	add    DWORD PTR [eax],eax
  40edc0:	(bad)  
  40edc1:	in     eax,dx
  40edc2:	inc    eax
  40edc3:	add    BYTE PTR [eax],al
  40edc5:	add    BYTE PTR [eax],al
  40edc7:	add    BYTE PTR [eax],al
  40edc9:	dec    eax
  40edca:	add    eax,0x40ee4000
	...
  40eddb:	add    al,ah
  40eddd:	in     eax,dx
  40edde:	inc    eax
  40eddf:	add    BYTE PTR [eax],al
  40ede1:	add    BYTE PTR [eax],al
  40ede3:	add    BYTE PTR [eax],al
  40ede5:	inc    edx
  40ede6:	push   ss
  40ede7:	add    ch,ch
  40ede9:	mov    bh,0x44
  40edeb:	add    BYTE PTR [eax],al
  40eded:	add    BYTE PTR [eax],al
  40edef:	add    bh,ah
  40edf1:	mov    bh,0x44
	...
  40ee23:	add    bh,bl
  40ee25:	mov    bh,0x44
	...
  40ee3b:	add    cl,bl
  40ee3d:	mov    bh,0x44
  40ee3f:	add    BYTE PTR [eax],al
  40ee41:	add    BYTE PTR [eax],al
  40ee43:	add    BYTE PTR [eax],al
  40ee45:	inc    edx
  40ee46:	push   ss
  40ee47:	add    BYTE PTR [edi],al
  40ee49:	mov    eax,0x44
  40ee4e:	add    BYTE PTR [eax],al
  40ee50:	add    DWORD PTR [eax+0x44],edi
	...
  40ee82:	add    BYTE PTR [eax],al
  40ee84:	stc    
  40ee85:	mov    bh,0x44
	...
  40ee9b:	add    bl,dh
  40ee9d:	mov    bh,0x44
  40ee9f:	add    BYTE PTR [eax],al
  40eea1:	add    BYTE PTR [eax],al
  40eea3:	add    BYTE PTR [eax],al
  40eea5:	inc    ebp
  40eea6:	push   cs
  40eea7:	add    BYTE PTR [ebx],bl
  40eea9:	mov    eax,0x44
	...
  40eeda:	add    BYTE PTR [eax],al
  40eedc:	adc    eax,0x44b8
  40eee1:	add    BYTE PTR [eax],al
  40eee3:	add    BYTE PTR [eax],al
  40eee5:	inc    ecx
  40eee6:	pop    ss
  40eee7:	add    BYTE PTR [ebx+0x44b8],bh
	...
  40ef01:	add    BYTE PTR [eax],al
  40ef03:	add    BYTE PTR [eax-0xe],al
  40ef06:	inc    eax
  40ef07:	add    al,cl
  40ef09:	icebp  
  40ef0a:	inc    eax
	...
  40ef13:	add    BYTE PTR [edi+ebp*8+0x40],bh
	...
  40ef2a:	add    BYTE PTR [eax],al
  40ef2c:	mov    al,dh
  40ef2e:	inc    eax
	...
  40ef37:	add    BYTE PTR [edi+ebp*8+0x40],al
  40ef3b:	add    BYTE PTR [eax],al
  40ef3d:	add    BYTE PTR [eax],al
  40ef3f:	add    BYTE PTR [ebx],ah
  40ef41:	mov    eax,0x44
  40ef46:	add    BYTE PTR [eax],al
  40ef48:	add    BYTE PTR [edx+0x1],al
  40ef4b:	add    BYTE PTR [eax-0x11],dl
  40ef4e:	inc    eax
  40ef4f:	add    BYTE PTR [eax],al
  40ef51:	add    BYTE PTR [eax],al
  40ef53:	add    BYTE PTR [eax],al
  40ef55:	inc    edx
  40ef56:	push   ss
  40ef57:	add    BYTE PTR [ebp-0x48],dl
  40ef5a:	inc    esp
  40ef5b:	add    BYTE PTR [eax],al
  40ef5d:	add    BYTE PTR [eax],al
  40ef5f:	add    BYTE PTR [edi-0x48],cl
  40ef62:	inc    esp
	...
  40ef93:	add    BYTE PTR [ecx-0x48],cl
  40ef96:	inc    esp
  40ef97:	add    BYTE PTR [eax],al
  40ef99:	add    BYTE PTR [eax],al
  40ef9b:	add    BYTE PTR [eax],ch
  40ef9d:	lock inc eax
  40ef9f:	add    BYTE PTR [eax],al
  40efa1:	add    BYTE PTR [eax],al
  40efa3:	add    BYTE PTR [eax+0x40ef],dh
  40efa9:	add    BYTE PTR [eax],al
  40efab:	add    BYTE PTR [ebx],ch
  40efad:	mov    eax,0x44
  40efb2:	add    BYTE PTR [eax],al
  40efb4:	add    BYTE PTR [ebx+0x1],dl
  40efb7:	add    al,cl
  40efb9:	out    dx,eax
  40efba:	inc    eax
  40efbb:	add    BYTE PTR [eax],al
  40efbd:	add    BYTE PTR [eax],al
  40efbf:	add    BYTE PTR [eax],al
  40efc1:	dec    esp
  40efc2:	add    DWORD PTR [eax],eax
  40efc4:	jo     0x40efb7
  40efc6:	inc    eax
  40efc7:	add    BYTE PTR [eax],al
  40efc9:	add    BYTE PTR [eax],al
  40efcb:	add    BYTE PTR [eax],al
  40efcd:	inc    edx
  40efce:	push   ss
  40efcf:	add    BYTE PTR [edi],dh
  40efd1:	mov    eax,0x44
	...
  40f022:	add    BYTE PTR [eax],al
  40f024:	xor    DWORD PTR [eax+0x44],edi
  40f02a:	add    BYTE PTR [eax],al
  40f02c:	add    BYTE PTR [edx+0x16],al
  40f02f:	add    BYTE PTR [ebx-0x48],al
  40f032:	inc    esp
	...
  40f083:	add    BYTE PTR ds:0x44b8,bh
  40f089:	add    BYTE PTR [eax],al
  40f08b:	add    BYTE PTR [eax],al
  40f08d:	inc    ecx
  40f08e:	or     al,0x0
  40f090:	sbb    cl,dh
  40f092:	inc    eax
	...
  40f0bb:	add    al,al
  40f0bd:	lock inc eax
  40f0bf:	add    BYTE PTR [eax],al
  40f0c1:	add    BYTE PTR [eax],al
  40f0c3:	add    BYTE PTR [eax],al
  40f0c5:	inc    esp
  40f0c6:	adc    al,0x0
  40f0c8:	fs mov dh,0x44
	...
  40f0fb:	add    BYTE PTR [ecx-0x48],ah
  40f0fe:	inc    esp
	...
  40f113:	add    BYTE PTR [ebx-0x48],bl
  40f116:	inc    esp
  40f117:	add    BYTE PTR [eax],al
  40f119:	add    BYTE PTR [eax],al
  40f11b:	add    BYTE PTR [eax],al
  40f11d:	inc    esp
  40f11e:	adc    al,0x0
  40f120:	jae    0x40f0da
  40f122:	inc    esp
	...
  40f16b:	add    BYTE PTR [ebp-0x48],ch
  40f16e:	inc    esp
  40f16f:	add    BYTE PTR [eax],al
  40f171:	add    BYTE PTR [eax],al
  40f173:	add    BYTE PTR [eax],al
  40f175:	inc    esp
  40f176:	adc    al,0x0
  40f178:	pop    esp
  40f179:	mov    bh,0x44
	...
  40f1ab:	add    BYTE PTR [edi-0x48],bh
  40f1ae:	inc    esp
	...
  40f1c3:	add    BYTE PTR [ecx-0x48],bh
  40f1c6:	inc    esp
  40f1c7:	add    BYTE PTR [eax],al
  40f1c9:	add    BYTE PTR [eax],al
  40f1cb:	add    BYTE PTR [eax],al
  40f1cd:	inc    edi
  40f1ce:	add    DWORD PTR [eax],eax
  40f1d0:	aam    0xf1
  40f1d2:	inc    eax
  40f1d3:	add    BYTE PTR [eax],al
  40f1d5:	add    BYTE PTR [eax],al
  40f1d7:	add    BYTE PTR [eax],al
  40f1d9:	dec    esi
  40f1da:	add    DWORD PTR [eax],eax
  40f1dc:	loopne 0x40f1cf
  40f1de:	inc    eax
  40f1df:	add    BYTE PTR [eax],al
  40f1e1:	add    BYTE PTR [eax],al
  40f1e3:	add    BYTE PTR [eax],al
  40f1e5:	inc    edx
  40f1e6:	push   ss
  40f1e7:	add    BYTE PTR [edi+0x44b8],dl
  40f1ed:	add    BYTE PTR [eax],al
  40f1ef:	add    BYTE PTR [ecx+0x44b8],dl
	...
  40f239:	add    BYTE PTR [eax],al
  40f23b:	add    BYTE PTR [ebx+0x44b8],cl
  40f241:	add    BYTE PTR [eax],al
  40f243:	add    BYTE PTR [eax],al
  40f245:	push   ebp
  40f246:	add    DWORD PTR [eax],eax
  40f248:	dec    esp
  40f249:	repnz inc eax
  40f24b:	add    BYTE PTR [eax],al
  40f24d:	add    BYTE PTR [eax],al
  40f24f:	add    BYTE PTR [eax],al
  40f251:	inc    esi
  40f252:	add    DWORD PTR [eax],eax
  40f254:	pop    eax
  40f255:	repnz inc eax
  40f257:	add    BYTE PTR [eax],al
  40f259:	add    BYTE PTR [eax],al
  40f25b:	add    BYTE PTR [eax],al
  40f25d:	inc    edx
  40f25e:	push   ss
  40f25f:	add    BYTE PTR [ebp+0x44b8],dh
  40f265:	add    BYTE PTR [eax],al
  40f267:	add    BYTE PTR [edi+0x44b8],ch
	...
  40f275:	add    BYTE PTR [eax],al
  40f277:	add    BYTE PTR [ecx+0x44b8],ch
	...
  40f285:	add    BYTE PTR [eax],al
  40f287:	add    BYTE PTR [ebx+0x44b8],ah
	...
  40f2b1:	add    BYTE PTR [eax],al
  40f2b3:	add    BYTE PTR [ebp+0x44b8],bl
  40f2b9:	add    BYTE PTR [eax],al
  40f2bb:	add    BYTE PTR [eax],al
  40f2bd:	inc    ebp
  40f2be:	or     eax,DWORD PTR [eax]
  40f2c0:	in     al,dx
  40f2c1:	repnz inc eax
	...
  40f2e7:	add    al,bh
  40f2e9:	repnz inc eax
  40f2eb:	add    BYTE PTR [eax],al
  40f2ed:	add    BYTE PTR [eax],al
  40f2ef:	add    BYTE PTR [eax],al
  40f2f1:	inc    esi
  40f2f2:	add    DWORD PTR [eax],eax
  40f2f4:	dec    eax
  40f2f5:	repz inc eax
  40f2f7:	add    BYTE PTR [eax],al
  40f2f9:	add    BYTE PTR [eax],al
  40f2fb:	add    BYTE PTR [eax],al
  40f2fd:	inc    ebx
  40f2fe:	adc    al,BYTE PTR [eax]
  40f300:	leave  
  40f301:	mov    eax,0x44
	...
  40f342:	add    BYTE PTR [eax],al
  40f344:	ret    
  40f345:	mov    eax,0x44
  40f34a:	add    BYTE PTR [eax],al
  40f34c:	add    BYTE PTR [ebp+0x1],al
  40f34f:	add    BYTE PTR [ebx+esi*8+0x40],dl
  40f353:	add    BYTE PTR [eax],al
  40f355:	add    BYTE PTR [eax],al
  40f357:	add    BYTE PTR [eax],al
  40f359:	push   esp
  40f35a:	add    DWORD PTR [eax],eax
  40f35c:	pusha  
  40f35d:	repz inc eax
  40f35f:	add    BYTE PTR [eax],al
  40f361:	add    BYTE PTR [eax],al
  40f363:	add    BYTE PTR [eax],al
  40f365:	inc    ebx
  40f366:	add    DWORD PTR [eax],eax
  40f368:	ins    BYTE PTR es:[edi],dx
  40f369:	repz inc eax
  40f36b:	add    BYTE PTR [eax],al
  40f36d:	add    BYTE PTR [eax],al
  40f36f:	add    BYTE PTR [eax],al
  40f371:	dec    eax
  40f372:	add    DWORD PTR [eax],eax
  40f374:	sar    BYTE PTR [eax+0x44],1
  40f37a:	add    BYTE PTR [eax],al
  40f37c:	add    BYTE PTR [eax],dh
  40f37e:	add    eax,DWORD PTR [eax]
  40f380:	adc    edi,DWORD PTR [ecx-0x46f2ffbc]
  40f386:	inc    esp
  40f387:	add    BYTE PTR [edi],al
  40f389:	mov    ecx,0x44
  40f38e:	add    BYTE PTR [eax],al
  40f390:	add    BYTE PTR [eax+0x3],dl
  40f393:	add    BYTE PTR [eax],ch
  40f395:	mov    ecx,0x44
  40f39a:	add    BYTE PTR [eax],al
  40f39c:	and    DWORD PTR [ecx+0x44],edi
  40f3a2:	add    BYTE PTR [eax],al
  40f3a4:	add    BYTE PTR [esi+0x2],cl
  40f3a7:	add    BYTE PTR [ebp-0x47],bl
  40f3aa:	inc    esp
  40f3ab:	add    BYTE PTR [ebx-0x47],dl
  40f3ae:	inc    esp
  40f3af:	add    BYTE PTR [eax],al
  40f3b1:	add    BYTE PTR [eax],al
  40f3b3:	add    BYTE PTR [eax],al
  40f3b5:	inc    ecx
  40f3b6:	adc    eax,0x40f83000
	...
  40f3d7:	add    BYTE PTR [eax-0x9],dl
  40f3da:	inc    eax
	...
  40f3ef:	add    ah,bh
  40f3f1:	hlt    
  40f3f2:	inc    eax
	...
  40f407:	add    BYTE PTR [esp+esi*8],cl
  40f40a:	inc    eax
  40f40b:	add    BYTE PTR [eax],al
  40f40d:	add    BYTE PTR [eax],al
  40f40f:	add    BYTE PTR [eax],al
  40f411:	dec    esp
  40f412:	add    DWORD PTR [eax],eax
  40f414:	sbb    ah,dh
  40f416:	inc    eax
  40f417:	add    BYTE PTR [eax],al
  40f419:	add    BYTE PTR [eax],al
  40f41b:	add    BYTE PTR [eax],al
  40f41d:	inc    esp
  40f41e:	adc    al,BYTE PTR [eax]
  40f420:	(bad)  
  40f421:	mov    ecx,0x44
	...
  40f42e:	add    BYTE PTR [eax],al
  40f430:	shl    ah,0x40
	...
  40f43f:	add    BYTE PTR [eax-0xc],ch
  40f442:	inc    eax
	...
  40f463:	add    BYTE PTR [ebx-0x47],ah
  40f466:	inc    esp
  40f467:	add    BYTE PTR [eax],al
  40f469:	add    BYTE PTR [eax],al
  40f46b:	add    BYTE PTR [eax],al
  40f46d:	inc    esp
  40f46e:	adc    al,0x0
  40f470:	jno    0x40f42b
  40f472:	inc    esp
	...
  40f4bb:	add    BYTE PTR [ebx-0x47],ch
  40f4be:	inc    esp
  40f4bf:	add    BYTE PTR [eax],al
  40f4c1:	add    BYTE PTR [eax],al
  40f4c3:	add    BYTE PTR [eax],al
  40f4c5:	push   edx
  40f4c6:	push   es
  40f4c7:	add    al,ah
  40f4c9:	hlt    
  40f4ca:	inc    eax
	...
  40f4d3:	add    BYTE PTR [ebp-0x47],bh
  40f4d6:	inc    esp
  40f4d7:	add    BYTE PTR [eax],al
  40f4d9:	add    BYTE PTR [eax],al
  40f4db:	add    BYTE PTR [edi-0x47],dh
  40f4de:	inc    esp
  40f4df:	add    BYTE PTR [eax],al
  40f4e1:	add    BYTE PTR [eax],al
  40f4e3:	add    BYTE PTR [eax],al
  40f4e5:	push   ebx
  40f4e6:	add    eax,0x44b98900
	...
  40f4f7:	add    BYTE PTR [ebx+0x44b9],al
  40f4fd:	add    BYTE PTR [eax],al
  40f4ff:	add    BYTE PTR [eax],al
  40f501:	push   esi
  40f502:	add    DWORD PTR [eax],eax
  40f504:	or     ch,dh
  40f506:	inc    eax
  40f507:	add    BYTE PTR [eax],al
  40f509:	add    BYTE PTR [eax],al
  40f50b:	add    BYTE PTR [eax],al
  40f50d:	dec    ebp
  40f50e:	push   cs
  40f50f:	add    ch,bl
  40f511:	mov    ecx,0x44
	...
  40f526:	add    BYTE PTR [eax],al
  40f528:	push   esp
  40f529:	cmc    
  40f52a:	inc    eax
	...
  40f543:	add    BYTE PTR [eax-0xb],cl
  40f546:	inc    eax
  40f547:	add    BYTE PTR [eax],al
  40f549:	add    BYTE PTR [eax],al
  40f54b:	add    BYTE PTR [eax],al
  40f54d:	pop    eax
  40f54e:	add    DWORD PTR [eax],eax
  40f550:	pusha  
  40f551:	cmc    
  40f552:	inc    eax
  40f553:	add    BYTE PTR [eax],al
  40f555:	add    BYTE PTR [eax],al
  40f557:	add    BYTE PTR [eax],al
  40f559:	pop    eax
  40f55a:	add    DWORD PTR [eax],eax
  40f55c:	pop    eax
  40f55d:	test   BYTE PTR [eax+0x0],0x0
  40f561:	add    BYTE PTR [eax],al
  40f563:	add    BYTE PTR [eax],al
  40f565:	inc    edx
  40f566:	push   ss
  40f567:	add    BYTE PTR [eax],al
  40f569:	test   BYTE PTR [eax+0x0],0x0
  40f56d:	add    BYTE PTR [eax],al
  40f56f:	add    BYTE PTR [ecx+0x44b9],ah
	...
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	add    al,al
  40f5bd:	cmc    
  40f5be:	inc    eax
  40f5bf:	add    BYTE PTR [eax],al
  40f5c1:	add    BYTE PTR [eax],al
  40f5c3:	add    BYTE PTR [eax],al
  40f5c5:	inc    esp
  40f5c6:	push   cs
  40f5c7:	add    BYTE PTR [ebx+0x44b9],bl
	...
  40f5f9:	add    BYTE PTR [eax],al
  40f5fb:	add    BYTE PTR [ebp+0x44b9],dl
  40f601:	add    BYTE PTR [eax],al
  40f603:	add    BYTE PTR [eax],al
  40f605:	inc    esp
  40f606:	adc    al,0x0
  40f608:	mov    bl,0xb9
  40f60a:	inc    esp
	...
  40f63b:	add    BYTE PTR [ebp+0x44b9],ch
	...
  40f651:	add    BYTE PTR [eax],al
  40f653:	add    BYTE PTR [edi+0x44b9],ah
  40f659:	add    BYTE PTR [eax],al
  40f65b:	add    BYTE PTR [eax],al
  40f65d:	inc    edx
  40f65e:	push   ss
  40f65f:	add    al,bh
  40f661:	test   BYTE PTR [eax+0x0],0x0
  40f665:	add    BYTE PTR [eax],al
  40f667:	add    ch,al
  40f669:	mov    ecx,0x44
	...
  40f6b2:	add    BYTE PTR [eax],al
  40f6b4:	mov    eax,0x40f6
  40f6b9:	add    BYTE PTR [eax],al
  40f6bb:	add    BYTE PTR [eax],al
  40f6bd:	inc    esp
  40f6be:	push   cs
  40f6bf:	add    BYTE PTR [edi+0x44b9],bh
	...
  40f6f1:	add    BYTE PTR [eax],al
  40f6f3:	add    BYTE PTR [ecx+0x44b9],bh
  40f6f9:	add    BYTE PTR [eax],al
  40f6fb:	add    BYTE PTR [eax],al
  40f6fd:	inc    esp
  40f6fe:	adc    al,0x0
  40f700:	xlat   BYTE PTR ds:[ebx]
  40f701:	mov    ecx,0x44
	...
  40f732:	add    BYTE PTR [eax],al
  40f734:	sar    DWORD PTR [ecx+0x44],1
	...
  40f74a:	add    BYTE PTR [eax],al
  40f74c:	retf   
  40f74d:	mov    ecx,0x44
  40f752:	add    BYTE PTR [eax],al
  40f754:	add    BYTE PTR [esi+0x1],cl
  40f757:	add    BYTE PTR [edi+esi*8+0x40],bl
  40f75b:	add    BYTE PTR [eax],al
  40f75d:	add    BYTE PTR [eax],al
  40f75f:	add    BYTE PTR [eax],al
  40f761:	push   ebx
  40f762:	add    eax,DWORD PTR [eax]
  40f764:	shl    bh,1
  40f766:	inc    eax
  40f767:	add    BYTE PTR [eax],al
  40f769:	add    BYTE PTR [eax],al
  40f76b:	add    BYTE PTR [eax-0x9],dh
  40f76e:	inc    eax
  40f76f:	add    BYTE PTR [eax],al
  40f771:	add    BYTE PTR [eax],al
  40f773:	add    BYTE PTR [eax],al
  40f775:	inc    edx
  40f776:	push   ss
  40f777:	add    cl,dh
  40f779:	mov    ecx,0x44
  40f77e:	add    BYTE PTR [eax],al
  40f780:	jmp    0x40f73b
  40f782:	inc    esp
	...
  40f7cb:	add    ch,ah
  40f7cd:	mov    ecx,0x44
  40f7d2:	add    BYTE PTR [eax],al
  40f7d4:	add    BYTE PTR [edx+0x16],al
  40f7d7:	add    BYTE PTR [ebx],al
  40f7d9:	mov    edx,0x44
  40f7de:	add    BYTE PTR [eax],al
  40f7e0:	std    
  40f7e1:	mov    ecx,0x44
	...
  40f82a:	add    BYTE PTR [eax],al
  40f82c:	idiv   DWORD PTR [ecx+0x44]
  40f832:	add    BYTE PTR [eax],al
  40f834:	add    BYTE PTR [ebp+edx*1+0x0],al
  40f838:	pusha  
  40f839:	stc    
  40f83a:	inc    eax
	...
  40f887:	add    BYTE PTR [eax+edi*8+0x40],cl
  40f88e:	add    BYTE PTR [eax],al
  40f890:	add    BYTE PTR [ebx+0x3],dl
  40f893:	add    BYTE PTR [eax],al
  40f895:	stc    
  40f896:	inc    eax
  40f897:	add    BYTE PTR [eax],al
  40f899:	add    BYTE PTR [eax],al
  40f89b:	add    BYTE PTR [eax+0x40f8],ah
  40f8a1:	add    BYTE PTR [eax],al
  40f8a3:	add    BYTE PTR [eax],al
  40f8a5:	inc    edx
  40f8a6:	push   ss
  40f8a7:	add    BYTE PTR ds:0x44ba,dl
  40f8ad:	add    BYTE PTR [eax],al
  40f8af:	add    BYTE PTR [edi],cl
  40f8b1:	mov    edx,0x44
	...
  40f8fa:	add    BYTE PTR [eax],al
  40f8fc:	or     DWORD PTR [edx+0x44],edi
  40f902:	add    BYTE PTR [eax],al
  40f904:	add    BYTE PTR [edx+0x16],al
  40f907:	add    BYTE PTR [edi],ah
  40f909:	mov    edx,0x44
  40f90e:	add    BYTE PTR [eax],al
  40f910:	and    DWORD PTR [edx+0x44],edi
	...
  40f95a:	add    BYTE PTR [eax],al
  40f95c:	sbb    edi,DWORD PTR [edx+0x44]
  40f962:	add    BYTE PTR [eax],al
  40f964:	add    BYTE PTR [ecx+eax*1+0x0],al
  40f968:	ins    BYTE PTR es:[edi],dx
  40f969:	stc    
  40f96a:	inc    eax
  40f96b:	add    BYTE PTR [eax],al
  40f96d:	add    BYTE PTR [eax],al
  40f96f:	add    BYTE PTR [eax],al
  40f971:	push   ebp
  40f972:	add    eax,DWORD PTR [eax]
  40f974:	xor    edi,DWORD PTR [edx+0x44]
  40f97a:	add    BYTE PTR [eax],al
  40f97c:	sub    eax,0x44ba
  40f981:	add    BYTE PTR [eax],al
  40f983:	add    BYTE PTR [eax],al
  40f985:	xor    bl,BYTE PTR ds:0x40fa1400
	...
  40f9f7:	add    ah,bh
  40f9f9:	stc    
  40f9fa:	inc    eax
  40f9fb:	add    BYTE PTR [eax],al
  40f9fd:	add    BYTE PTR [eax],al
  40f9ff:	add    BYTE PTR [eax],al
  40fa01:	push   ebx
  40fa02:	add    DWORD PTR [eax],eax
  40fa04:	or     dl,bh
  40fa06:	inc    eax
  40fa07:	add    BYTE PTR [eax],al
  40fa09:	add    BYTE PTR [eax],al
  40fa0b:	add    BYTE PTR [eax],al
  40fa0d:	push   edx
  40fa0e:	add    DWORD PTR [eax],eax
  40fa10:	and    dl,bh
  40fa12:	inc    eax
  40fa13:	add    BYTE PTR [eax],al
  40fa15:	add    BYTE PTR [eax],al
  40fa17:	add    BYTE PTR [eax],al
  40fa19:	inc    esi
  40fa1a:	add    DWORD PTR [eax],eax
  40fa1c:	cmp    dl,0x40
  40fa1f:	add    BYTE PTR [eax],al
  40fa21:	add    BYTE PTR [eax],al
  40fa23:	add    BYTE PTR [eax],al
  40fa25:	inc    edx
  40fa26:	push   ss
  40fa27:	add    BYTE PTR [ebp-0x46],cl
  40fa2a:	inc    esp
  40fa2b:	add    BYTE PTR [eax],al
  40fa2d:	add    BYTE PTR [eax],al
  40fa2f:	add    BYTE PTR [edi-0x46],al
  40fa32:	inc    esp
	...
  40fa63:	add    BYTE PTR [ecx-0x46],al
  40fa66:	inc    esp
	...
  40fa7b:	add    BYTE PTR [ebx],bh
  40fa7d:	mov    edx,0x44
  40fa82:	add    BYTE PTR [eax],al
  40fa84:	add    BYTE PTR [esp+edx*1+0x0],al
  40fa88:	pop    ecx
  40fa89:	mov    edx,0x44
	...
  40fad2:	add    BYTE PTR [eax],al
  40fad4:	push   ebx
  40fad5:	mov    edx,0x44
  40fada:	add    BYTE PTR [eax],al
  40fadc:	add    BYTE PTR [ecx+0x13],al
  40fadf:	add    BYTE PTR [ebx+edi*8+0x40],al
	...
  40fb0f:	add    BYTE PTR [ecx-0x46],dh
  40fb12:	inc    esp
	...
  40fb27:	add    BYTE PTR [ebx+edi*8],ch
  40fb2a:	inc    eax
  40fb2b:	add    BYTE PTR [eax],al
  40fb2d:	add    BYTE PTR [eax],al
  40fb2f:	add    BYTE PTR [eax],al
  40fb31:	push   ebp
  40fb32:	add    DWORD PTR [eax],eax
  40fb34:	cmp    bl,bh
  40fb36:	inc    eax
  40fb37:	add    BYTE PTR [eax],al
  40fb39:	add    BYTE PTR [eax],al
  40fb3b:	add    BYTE PTR [eax],al
  40fb3d:	inc    edx
  40fb3e:	add    DWORD PTR [eax],eax
  40fb40:	push   eax
  40fb41:	sti    
  40fb42:	inc    eax
  40fb43:	add    BYTE PTR [eax],al
  40fb45:	add    BYTE PTR [eax],al
  40fb47:	add    BYTE PTR [eax],al
  40fb49:	inc    esp
  40fb4a:	add    DWORD PTR [eax],eax
  40fb4c:	test   al,0xfb
  40fb4e:	inc    eax
  40fb4f:	add    BYTE PTR [eax],al
  40fb51:	add    BYTE PTR [eax],al
  40fb53:	add    BYTE PTR [eax],al
  40fb55:	inc    esp
  40fb56:	adc    al,0x0
  40fb58:	imul   edi,DWORD PTR [edx+0x44],0x0
	...
  40fb93:	add    BYTE PTR [ebp-0x46],ah
  40fb96:	inc    esp
	...
  40fba3:	add    BYTE PTR [edi-0x46],bl
  40fba6:	inc    esp
  40fba7:	add    BYTE PTR [eax],al
  40fba9:	add    BYTE PTR [eax],al
  40fbab:	add    BYTE PTR [eax],al
  40fbad:	inc    esp
  40fbae:	add    DWORD PTR [eax],eax
  40fbb0:	sar    bl,0x40
  40fbb3:	add    BYTE PTR [eax],al
  40fbb5:	add    BYTE PTR [eax],al
  40fbb7:	add    BYTE PTR [eax],al
  40fbb9:	push   ebp
  40fbba:	add    DWORD PTR [eax],eax
  40fbbc:	test   al,0xfc
  40fbbe:	inc    eax
  40fbbf:	add    BYTE PTR [eax],al
  40fbc1:	add    BYTE PTR [eax],al
  40fbc3:	add    BYTE PTR [eax],al
  40fbc5:	inc    esp
  40fbc6:	adc    al,0x0
  40fbc8:	mov    DWORD PTR [edx+0x44],edi
	...
  40fc02:	add    BYTE PTR [eax],al
  40fc04:	cmp    DWORD PTR [edx+0x44],0x0
	...
  40fc13:	add    BYTE PTR [ebp-0x46],bh
  40fc16:	inc    esp
  40fc17:	add    BYTE PTR [eax],al
  40fc19:	add    BYTE PTR [eax],al
  40fc1b:	add    BYTE PTR [eax],al
  40fc1d:	xor    ah,BYTE PTR [edx]
  40fc1f:	add    ah,ch
  40fc21:	std    
  40fc22:	inc    eax
	...
  40fc5b:	add    BYTE PTR [eax-0x2],al
  40fc5e:	inc    eax
  40fc5f:	add    BYTE PTR [eax],al
  40fc61:	add    BYTE PTR [eax],al
  40fc63:	add    BYTE PTR [ebp+edi*8+0x40],ah
	...
  40fc8b:	add    BYTE PTR [eax-0x3],dh
  40fc8e:	inc    eax
  40fc8f:	add    bl,dl
  40fc91:	mov    edx,0x44
  40fc96:	add    BYTE PTR [eax],al
  40fc98:	leave  
  40fc99:	mov    edx,0x44
  40fc9e:	add    BYTE PTR [eax],al
  40fca0:	sar    ah,0x40
  40fca3:	add    BYTE PTR [ebx+edi*8+0x40],dh
  40fcaa:	add    BYTE PTR [eax],al
  40fcac:	add    BYTE PTR [edx+0x1],al
  40fcaf:	add    BYTE PTR [eax+0x44ba],dl
  40fcb5:	add    BYTE PTR [eax],al
  40fcb7:	add    BYTE PTR [eax],al
  40fcb9:	push   ecx
  40fcba:	add    DWORD PTR [eax],eax
  40fcbc:	or     al,0xfd
  40fcbe:	inc    eax
  40fcbf:	add    BYTE PTR [eax],al
  40fcc1:	add    BYTE PTR [eax],al
  40fcc3:	add    BYTE PTR [eax],al
  40fcc5:	inc    ebx
  40fcc6:	adc    DWORD PTR [eax],eax
  40fcc8:	cmp    al,0xfd
  40fcca:	inc    eax
	...
  40fd07:	add    BYTE PTR [esp+edi*8+0x40],dh
  40fd0e:	add    BYTE PTR [eax],al
  40fd10:	add    BYTE PTR [ecx+0xa],cl
  40fd13:	add    BYTE PTR [ecx+0x44ba],ch
	...
  40fd35:	add    BYTE PTR [eax],al
  40fd37:	add    BYTE PTR [ebx+0x44ba],ah
  40fd3d:	add    BYTE PTR [eax],al
  40fd3f:	add    BYTE PTR [eax],al
  40fd41:	push   eax
  40fd42:	add    DWORD PTR [eax],eax
  40fd44:	mov    al,0xba
  40fd46:	inc    esp
  40fd47:	add    BYTE PTR [eax],al
  40fd49:	add    BYTE PTR [eax],al
  40fd4b:	add    BYTE PTR [eax],al
  40fd4d:	push   esp
  40fd4e:	add    DWORD PTR [eax],eax
  40fd50:	push   esp
  40fd51:	std    
  40fd52:	inc    eax
  40fd53:	add    BYTE PTR [eax],al
  40fd55:	add    BYTE PTR [eax],al
  40fd57:	add    BYTE PTR [eax],al
  40fd59:	xor    DWORD PTR [edx],eax
  40fd5b:	add    bl,al
  40fd5d:	mov    edx,0xbabd0044
  40fd62:	inc    esp
  40fd63:	add    BYTE PTR [eax],al
  40fd65:	add    BYTE PTR [eax],al
  40fd67:	add    BYTE PTR [eax],al
  40fd69:	dec    ebp
  40fd6a:	add    DWORD PTR [eax],eax
  40fd6c:	int3   
  40fd6d:	std    
  40fd6e:	inc    eax
  40fd6f:	add    BYTE PTR [eax],al
  40fd71:	add    BYTE PTR [eax],al
  40fd73:	add    BYTE PTR [eax],al
  40fd75:	inc    ecx
  40fd76:	adc    eax,0x44bae700
	...
  40fd97:	add    cl,ah
  40fd99:	mov    edx,0x44
	...
  40fdc6:	add    BYTE PTR [eax],al
  40fdc8:	fstp   TBYTE PTR [edx+0x44]
  40fdce:	add    BYTE PTR [eax],al
  40fdd0:	add    BYTE PTR [eax+0x1],dl
  40fdd3:	add    al,bl
  40fdd5:	std    
  40fdd6:	inc    eax
  40fdd7:	add    BYTE PTR [eax],al
  40fdd9:	add    BYTE PTR [eax],al
  40fddb:	add    BYTE PTR [eax],al
  40fddd:	inc    ebp
  40fdde:	add    eax,DWORD PTR [eax]
  40fde0:	stc    
  40fde1:	mov    edx,0x44
  40fde6:	add    BYTE PTR [eax],al
  40fde8:	clc    
  40fde9:	std    
  40fdea:	inc    eax
  40fdeb:	add    BYTE PTR [eax],al
  40fded:	add    BYTE PTR [eax],al
  40fdef:	add    BYTE PTR [eax],al
  40fdf1:	dec    ecx
  40fdf2:	add    DWORD PTR [eax],eax
  40fdf4:	push   eax
  40fdf5:	inc    BYTE PTR [eax+0x0]
  40fdf8:	add    BYTE PTR [eax],al
  40fdfa:	add    BYTE PTR [eax],al
  40fdfc:	add    BYTE PTR [ebp+0x10],al
  40fdff:	add    bl,dh
  40fe01:	mov    edx,0x44
	...
  40fe3a:	add    BYTE PTR [eax],al
  40fe3c:	in     eax,dx
  40fe3d:	mov    edx,0x44
  40fe42:	add    BYTE PTR [eax],al
  40fe44:	add    BYTE PTR [ebx+0x2],al
  40fe47:	add    BYTE PTR ds:0xff0044bb,al
  40fe4d:	mov    edx,0x44
  40fe52:	add    BYTE PTR [eax],al
  40fe54:	add    BYTE PTR [esp+edx*1+0x0],al
  40fe58:	adc    DWORD PTR [ebx+0x44],edi
	...
  40fea2:	add    BYTE PTR [eax],al
  40fea4:	or     edi,DWORD PTR [ebx+0x44]
  40feaa:	add    BYTE PTR [eax],al
  40feac:	add    BYTE PTR [eax+0x1],bl
  40feaf:	add    BYTE PTR [esi+edi*8+0x40],dh
  40feb6:	add    BYTE PTR [eax],al
  40feb8:	add    BYTE PTR [ecx+eax*1+0x0],dl
  40febc:	sbb    BYTE PTR [ebx+0x44],bh
  40fec2:	add    BYTE PTR [eax],al
  40fec4:	add    BYTE PTR [edx+0x16],al
  40fec7:	add    BYTE PTR [edi],dh
  40fec9:	mov    ebx,0x44
  40fece:	add    BYTE PTR [eax],al
  40fed0:	xor    DWORD PTR [ebx+0x44],edi
	...
  40ff02:	add    BYTE PTR [eax],al
  40ff04:	sub    edi,DWORD PTR [ebx+0x44]
	...
  40ff1a:	add    BYTE PTR [eax],al
  40ff1c:	and    eax,0x44bb
  40ff21:	add    BYTE PTR [eax],al
  40ff23:	add    BYTE PTR [eax],al
  40ff25:	dec    esp
  40ff26:	add    al,BYTE PTR [eax]
  40ff28:	dec    esp
  40ff29:	add    BYTE PTR [ecx+0x0],al
  40ff2c:	xor    bh,bh
  40ff2e:	inc    eax
  40ff2f:	add    BYTE PTR [eax],al
  40ff31:	add    BYTE PTR [eax],al
  40ff33:	add    BYTE PTR [eax],al
  40ff35:	push   eax
  40ff36:	add    DWORD PTR [eax],eax
  40ff38:	cmp    al,0xff
  40ff3a:	inc    eax
  40ff3b:	add    BYTE PTR [eax],al
  40ff3d:	add    BYTE PTR [eax],al
  40ff3f:	add    BYTE PTR [eax],al
  40ff41:	inc    ebp
  40ff42:	add    eax,0x40ffa400
  40ff47:	add    BYTE PTR [eax],al
  40ff49:	add    BYTE PTR [eax],al
  40ff4b:	add    BYTE PTR [eax+0x40ff],bl
  40ff51:	add    BYTE PTR [eax],al
  40ff53:	add    BYTE PTR [eax-0x1],bl
  40ff56:	inc    eax
  40ff57:	add    BYTE PTR [eax],al
  40ff59:	add    BYTE PTR [eax],al
  40ff5b:	add    BYTE PTR [eax],al
  40ff5d:	push   ebx
  40ff5e:	add    DWORD PTR [eax],eax
  40ff60:	inc    DWORD PTR fs:[eax+0x0]
  40ff64:	add    BYTE PTR [eax],al
  40ff66:	add    BYTE PTR [eax],al
  40ff68:	add    BYTE PTR [ecx+eax*1+0x0],dl
  40ff6c:	jo     0x40ff6d
  40ff6e:	inc    eax
  40ff6f:	add    BYTE PTR [eax],al
  40ff71:	add    BYTE PTR [eax],al
  40ff73:	add    BYTE PTR [eax],al
  40ff75:	push   edx
  40ff76:	add    DWORD PTR [eax],eax
  40ff78:	jl     0x40ff79
  40ff7a:	inc    eax
  40ff7b:	add    BYTE PTR [eax],al
  40ff7d:	add    BYTE PTR [eax],al
  40ff7f:	add    BYTE PTR [eax],al
  40ff81:	dec    ecx
  40ff82:	add    eax,0x44bb4b00
	...
  40ff93:	add    BYTE PTR [ebp-0x45],al
  40ff96:	inc    esp
  40ff97:	add    BYTE PTR [eax],al
  40ff99:	add    BYTE PTR [eax],al
  40ff9b:	add    BYTE PTR [eax],al
  40ff9d:	push   esp
  40ff9e:	add    DWORD PTR [eax],eax
  40ffa0:	mov    eax,0x40ff
  40ffa5:	add    BYTE PTR [eax],al
  40ffa7:	add    BYTE PTR [eax],al
  40ffa9:	push   ecx
  40ffaa:	add    eax,DWORD PTR [eax]
  40ffac:	pop    eax
  40ffad:	add    BYTE PTR [ecx+0x0],al
  40ffb0:	add    BYTE PTR [eax],al
  40ffb2:	add    BYTE PTR [eax],al
  40ffb4:	sbb    BYTE PTR [eax],al
  40ffb6:	inc    ecx
  40ffb7:	add    BYTE PTR [eax],al
  40ffb9:	add    BYTE PTR [eax],al
  40ffbb:	add    BYTE PTR [eax],al
  40ffbd:	inc    edx
  40ffbe:	push   ss
  40ffbf:	add    BYTE PTR [ebx-0x45],ah
  40ffc2:	inc    esp
  40ffc3:	add    BYTE PTR [eax],al
  40ffc5:	add    BYTE PTR [eax],al
  40ffc7:	add    BYTE PTR [ebp-0x45],bl
  40ffca:	inc    esp
	...
  40fffb:	add    BYTE PTR [edi-0x45],dl
  40fffe:	inc    esp
	...
  410013:	add    BYTE PTR [ecx-0x45],dl
  410016:	inc    esp
  410017:	add    BYTE PTR [eax],al
  410019:	add    BYTE PTR [eax],al
  41001b:	add    BYTE PTR [eax],al
  41001d:	push   esp
  41001e:	add    DWORD PTR [eax],eax
  410020:	and    al,0x0
  410022:	inc    ecx
  410023:	add    BYTE PTR [eax],al
  410025:	add    BYTE PTR [eax],al
  410027:	add    BYTE PTR [eax],al
  410029:	push   edx
  41002a:	add    DWORD PTR [eax],eax
  41002c:	xor    BYTE PTR [eax],al
  41002e:	inc    ecx
  41002f:	add    BYTE PTR [eax],al
  410031:	add    BYTE PTR [eax],al
  410033:	add    BYTE PTR [eax],al
  410035:	dec    ecx
  410036:	add    eax,0x44bb6f00
	...
  410047:	add    BYTE PTR [ecx-0x45],ch
  41004a:	inc    esp
  41004b:	add    BYTE PTR [eax],al
  41004d:	add    BYTE PTR [eax],al
  41004f:	add    BYTE PTR [eax],al
  410051:	dec    ebp
  410052:	add    DWORD PTR [eax],eax
  410054:	mov    eax,0x4100
  410059:	add    BYTE PTR [eax],al
  41005b:	add    BYTE PTR [eax],al
  41005d:	inc    edx
  41005e:	push   ss
  41005f:	add    BYTE PTR [edi+0x44bb],al
  410065:	add    BYTE PTR [eax],al
  410067:	add    BYTE PTR [ecx+0x44bb],al
	...
  410099:	add    BYTE PTR [eax],al
  41009b:	add    BYTE PTR [ebx-0x45],bh
  41009e:	inc    esp
	...
  4100b3:	add    BYTE PTR [ebp-0x45],dh
  4100b6:	inc    esp
  4100b7:	add    BYTE PTR [eax],al
  4100b9:	add    BYTE PTR [eax],al
  4100bb:	add    BYTE PTR [eax],al
  4100bd:	push   ebp
  4100be:	add    DWORD PTR [eax],eax
  4100c0:	les    eax,FWORD PTR [eax]
  4100c2:	inc    ecx
  4100c3:	add    BYTE PTR [eax],al
  4100c5:	add    BYTE PTR [eax],al
  4100c7:	add    BYTE PTR [eax],al
  4100c9:	dec    esp
  4100ca:	add    DWORD PTR [eax],eax
  4100cc:	rol    BYTE PTR [eax],1
  4100ce:	inc    ecx
  4100cf:	add    BYTE PTR [eax],al
  4100d1:	add    BYTE PTR [eax],al
  4100d3:	add    BYTE PTR [eax],al
  4100d5:	dec    eax
  4100d6:	or     al,BYTE PTR [eax]
  4100d8:	sub    BYTE PTR [ecx],al
  4100da:	inc    ecx
	...
  4100e7:	add    BYTE PTR [eax],al
  4100e9:	add    DWORD PTR [ecx+0x0],eax
	...
  4100fc:	lea    edi,[ebx+0x44]
  410102:	add    BYTE PTR [eax],al
  410104:	add    BYTE PTR [ecx+0x1],dl
  410107:	add    BYTE PTR [ecx+eax*1],cl
  41010a:	inc    ecx
  41010b:	add    BYTE PTR [eax],al
  41010d:	add    BYTE PTR [eax],al
  41010f:	add    BYTE PTR [eax],al
  410111:	dec    eax
  410112:	add    eax,0x44bb9d00
	...
  410123:	add    BYTE PTR [ebp+0x44bb],dl
  410129:	add    BYTE PTR [eax],al
  41012b:	add    BYTE PTR [eax],al
  41012d:	push   ecx
  41012e:	add    DWORD PTR [eax],eax
  410130:	xor    al,0x1
  410132:	inc    ecx
  410133:	add    BYTE PTR [eax],al
  410135:	add    BYTE PTR [eax],al
  410137:	add    BYTE PTR [eax],al
  410139:	dec    eax
  41013a:	add    eax,0x44bbad00
	...
  41014b:	add    BYTE PTR [ebp+0x44bb],ah
  410151:	add    BYTE PTR [eax],al
  410153:	add    BYTE PTR [eax],al
  410155:	dec    esp
  410156:	add    DWORD PTR [eax],eax
  410158:	pop    esp
  410159:	add    DWORD PTR [ecx+0x0],eax
  41015c:	add    BYTE PTR [eax],al
  41015e:	add    BYTE PTR [eax],al
  410160:	add    BYTE PTR [ebp+0x1],al
  410163:	add    BYTE PTR [eax+0x1],ch
  410166:	inc    ecx
  410167:	add    BYTE PTR [eax],al
  410169:	add    BYTE PTR [eax],al
  41016b:	add    BYTE PTR [eax],al
  41016d:	dec    esi
  41016e:	add    DWORD PTR [eax],eax
  410170:	je     0x410173
  410172:	inc    ecx
  410173:	add    BYTE PTR [eax],al
  410175:	add    BYTE PTR [eax],al
  410177:	add    BYTE PTR [eax],al
  410179:	inc    esp
  41017a:	add    DWORD PTR [eax],eax
  41017c:	add    BYTE PTR [ecx],0x41
  41017f:	add    BYTE PTR [eax],al
  410181:	add    BYTE PTR [eax],al
  410183:	add    BYTE PTR [eax],al
  410185:	push   esi
  410186:	add    al,BYTE PTR [eax]
  410188:	mov    ebx,0xb50044bb
  41018d:	mov    ebx,0x44
  410192:	add    BYTE PTR [eax],al
  410194:	add    BYTE PTR [edx+0x15],al
  410197:	add    BYTE PTR [esp+eax*1],ch
  41019a:	inc    ecx
  41019b:	add    ah,bl
  41019d:	add    al,BYTE PTR [ecx+0x0]
  4101a0:	add    al,BYTE PTR fs:[ecx+0x0]
	...
  4101ac:	stc    
  4101ad:	mov    ebx,0x44
	...
  4101be:	add    BYTE PTR [eax],al
  4101c0:	out    dx,eax
  4101c1:	mov    ebx,0x44
  4101c6:	add    BYTE PTR [eax],al
  4101c8:	pop    eax
  4101c9:	add    al,BYTE PTR [ecx+0x0]
	...
  4101e4:	aad    0xbb
  4101e6:	inc    esp
  4101e7:	add    ah,ch
  4101e9:	add    DWORD PTR [ecx+0x0],eax
  4101ec:	add    BYTE PTR [eax],al
  4101ee:	add    BYTE PTR [eax],al
  4101f0:	add    BYTE PTR [edi+0x1],al
  4101f3:	add    al,bh
  4101f5:	add    DWORD PTR [ecx+0x0],eax
  4101f8:	add    BYTE PTR [eax],al
  4101fa:	add    BYTE PTR [eax],al
  4101fc:	add    BYTE PTR [edx+0x16],al
  4101ff:	add    bh,cl
  410201:	mov    ebx,0x44
	...
  41024a:	add    BYTE PTR [eax],al
  41024c:	(bad)  
  41024d:	mov    ebx,0x44
  410252:	add    BYTE PTR [eax],al
  410254:	sar    DWORD PTR [ebx+0x44],0x0
  41025b:	add    BYTE PTR [eax],al
  41025d:	inc    esp
  41025e:	add    DWORD PTR [eax],eax
  410260:	fdivr  QWORD PTR [ebx+0x44]
  410266:	add    BYTE PTR [eax],al
  410268:	add    BYTE PTR [ecx+eax*1+0x0],al
  41026c:	jo     0x410270
  41026e:	inc    ecx
  41026f:	add    BYTE PTR [eax],al
  410271:	add    BYTE PTR [eax],al
  410273:	add    BYTE PTR [eax],al
  410275:	inc    edx
  410276:	push   ss
  410277:	add    BYTE PTR [ecx],ch
  410279:	mov    esp,0x44
  41027e:	add    BYTE PTR [eax],al
  410280:	and    edi,DWORD PTR [esp+eax*2+0x0]
	...
  4102b3:	add    BYTE PTR ds:0x44bc,bl
  4102b9:	add    BYTE PTR [eax],al
  4102bb:	add    BYTE PTR [eax+0x3],cl
  4102be:	inc    ecx
  4102bf:	add    BYTE PTR [eax],al
  4102c1:	add    BYTE PTR [eax],al
  4102c3:	add    al,dl
  4102c5:	add    al,BYTE PTR [ecx+0x0]
  4102c8:	add    BYTE PTR [eax],al
  4102ca:	add    BYTE PTR [eax],al
  4102cc:	(bad)  
  4102cd:	mov    ebx,0x44
  4102d2:	add    BYTE PTR [eax],al
  4102d4:	add    BYTE PTR [ebx+0x1],dl
  4102d7:	add    al,ch
  4102d9:	add    al,BYTE PTR [ecx+0x0]
  4102dc:	add    BYTE PTR [eax],al
  4102de:	add    BYTE PTR [eax],al
  4102e0:	add    BYTE PTR [ebx+0x1],cl
  4102e3:	add    BYTE PTR [eax+0x4103],ch
  4102e9:	add    BYTE PTR [eax],al
  4102eb:	add    BYTE PTR [eax],al
  4102ed:	inc    edx
  4102ee:	push   ss
  4102ef:	add    BYTE PTR [ebx],cl
  4102f1:	mov    esp,0x44
	...
  410342:	add    BYTE PTR [eax],al
  410344:	add    eax,0x44bc
  410349:	add    BYTE PTR [eax],al
  41034b:	add    BYTE PTR [eax],al
  41034d:	inc    edx
  41034e:	push   ss
  41034f:	add    BYTE PTR [edi],dl
  410351:	mov    esp,0x44
	...
  4103a2:	add    BYTE PTR [eax],al
  4103a4:	adc    DWORD PTR [esp+eax*2+0x0],edi
  4103ab:	add    BYTE PTR [eax],al
  4103ad:	push   ebx
  4103ae:	add    eax,DWORD PTR [eax]
  4103b0:	and    BYTE PTR [ecx+eax*2],al
  4103b3:	add    BYTE PTR [eax],al
  4103b5:	add    BYTE PTR [eax],al
  4103b7:	add    BYTE PTR [ebx+eax*1+0x41],bh
  4103be:	add    BYTE PTR [eax],al
  4103c0:	add    BYTE PTR [ebx+0x1],dl
  4103c3:	add    al,cl
  4103c5:	add    eax,DWORD PTR [ecx+0x0]
  4103c8:	add    BYTE PTR [eax],al
  4103ca:	add    BYTE PTR [eax],al
  4103cc:	add    BYTE PTR [esp+edx*1+0x0],al
  4103d0:	xor    eax,0x44bc
	...
  410419:	add    BYTE PTR [eax],al
  41041b:	add    BYTE PTR [edi],ch
  41041d:	mov    esp,0x44
  410422:	add    BYTE PTR [eax],al
  410424:	add    BYTE PTR [ebx+0x1],dl
  410427:	add    BYTE PTR [eax],bh
  410429:	add    al,0x41
  41042b:	add    BYTE PTR [eax],al
  41042d:	add    BYTE PTR [eax],al
  41042f:	add    BYTE PTR [eax],al
  410431:	push   ebx
  410432:	add    DWORD PTR [eax],eax
  410434:	nop
  410435:	add    al,0x41
  410437:	add    BYTE PTR [eax],al
  410439:	add    BYTE PTR [eax],al
  41043b:	add    BYTE PTR [eax],al
  41043d:	inc    esp
  41043e:	adc    al,0x0
  410440:	inc    ecx
  410441:	mov    esp,0x44
	...
  41048a:	add    BYTE PTR [eax],al
  41048c:	cmp    edi,DWORD PTR [esp+eax*2+0x0]
  410493:	add    BYTE PTR [eax],al
  410495:	inc    edx
  410496:	push   ss
  410497:	add    BYTE PTR [ebx-0x44],dl
  41049a:	inc    esp
  41049b:	add    BYTE PTR [eax],al
  41049d:	add    BYTE PTR [eax],al
  41049f:	add    BYTE PTR [ebp-0x44],cl
  4104a2:	inc    esp
	...
  4104eb:	add    BYTE PTR [edi-0x44],al
  4104ee:	inc    esp
  4104ef:	add    BYTE PTR [eax],al
  4104f1:	add    BYTE PTR [eax],al
  4104f3:	add    BYTE PTR [eax],al
  4104f5:	inc    esi
  4104f6:	adc    al,BYTE PTR [eax]
  4104f8:	ins    DWORD PTR es:[edi],dx
  4104f9:	mov    esp,0x44
	...
  41051e:	add    BYTE PTR [eax],al
  410520:	mov    al,0x5
  410522:	inc    ecx
  410523:	add    BYTE PTR [eax],al
  410525:	add    BYTE PTR [eax],al
  410527:	add    ah,ch
  410529:	mov    esp,0x44
  41052e:	add    BYTE PTR [eax],al
  410530:	add    BYTE PTR [eax],al
  410532:	add    BYTE PTR [eax],al
  410534:	inc    eax
  410535:	add    eax,0x41
  41053a:	add    BYTE PTR [eax],al
  41053c:	pop    ecx
  41053d:	mov    esp,0x44
  410542:	add    BYTE PTR [eax],al
  410544:	add    BYTE PTR [ecx+eax*1+0x0],dl
  410548:	pusha  
  410549:	mov    esp,0x44
  41054e:	add    BYTE PTR [eax],al
  410550:	add    BYTE PTR [eax+0x5],dl
  410553:	add    BYTE PTR [ebp-0x43],al
  410556:	inc    esp
	...
  410563:	add    BYTE PTR [edi],bh
  410565:	mov    ebp,0x44
  41056a:	add    BYTE PTR [eax],al
  41056c:	add    BYTE PTR [eax+edx*1+0x0],al
  410570:	and    edi,DWORD PTR [ebp+0x44]
	...
  4105aa:	add    BYTE PTR [eax],al
  4105ac:	sbb    eax,0x44bd
  4105b1:	add    BYTE PTR [eax],al
  4105b3:	add    BYTE PTR [eax],al
  4105b5:	inc    ecx
  4105b6:	adc    al,0x0
  4105b8:	aaa    
  4105b9:	mov    ebp,0x44
	...
  410602:	add    BYTE PTR [eax],al
  410604:	das    
  410605:	mov    ebp,0x44
  41060a:	add    BYTE PTR [eax],al
  41060c:	add    BYTE PTR [ecx+0xf],al
  41060f:	add    BYTE PTR [ebp-0x43],bh
  410612:	inc    esp
	...
  41061f:	add    BYTE PTR [ebp+edi*4+0x44],cl
	...
  410647:	add    BYTE PTR [ebp+eax*1+0x41],cl
  41064b:	add    BYTE PTR [eax],al
  41064d:	add    BYTE PTR [eax],al
  41064f:	add    BYTE PTR [eax],al
  410651:	dec    esp
  410652:	add    DWORD PTR [eax],eax
  410654:	mov    WORD PTR [ebp+0x44],?
  41065a:	add    BYTE PTR [eax],al
  41065c:	add    BYTE PTR [ecx+0x17],al
  41065f:	add    BYTE PTR [eax+0xc],dh
  410662:	inc    ecx
	...
  410673:	add    BYTE PTR [ebp-0x40],dl
  410676:	inc    esp
	...
  41067f:	add    ah,cl
  410681:	or     al,BYTE PTR [ecx+0x0]
	...
  410690:	and    BYTE PTR [ebx],cl
  410692:	inc    ecx
  410693:	add    BYTE PTR [eax],al
  410695:	add    BYTE PTR [eax],al
  410697:	add    BYTE PTR [eax+0x7],bl
  41069a:	inc    ecx
  41069b:	add    bh,dl
  41069d:	mov    ebp,0x44
	...
  4106ae:	add    BYTE PTR [eax],al
  4106b0:	dec    esp
  4106b1:	push   es
  4106b2:	inc    ecx
  4106b3:	add    BYTE PTR [eax],al
  4106b5:	add    BYTE PTR [eax],al
  4106b7:	add    BYTE PTR [ebp+0x44bd],al
  4106bd:	add    BYTE PTR [eax],al
  4106bf:	add    BYTE PTR [eax],al
  4106c1:	push   eax
  4106c2:	add    DWORD PTR [eax],eax
  4106c4:	mov    eax,0x4107
  4106c9:	add    BYTE PTR [eax],al
  4106cb:	add    BYTE PTR [eax],al
  4106cd:	inc    esp
  4106ce:	adc    BYTE PTR [eax],al
  4106d0:	lds    edi,FWORD PTR [ebp+0x44]
	...
  41070a:	add    BYTE PTR [eax],al
  41070c:	mov    edi,0x44bd
  410711:	add    BYTE PTR [eax],al
  410713:	add    BYTE PTR [eax],al
  410715:	inc    esp
  410716:	adc    BYTE PTR [eax],al
  410718:	sar    DWORD PTR [ebp+0x44],1
	...
  410752:	add    BYTE PTR [eax],al
  410754:	retf   
  410755:	mov    ebp,0x44
  41075a:	add    BYTE PTR [eax],al
  41075c:	add    BYTE PTR [ebx+edx*1+0x0],al
  410760:	(bad)  
  410761:	mov    edi,0x44
	...
  410786:	add    BYTE PTR [eax],al
  410788:	cmc    
  410789:	mov    edi,0x44
	...
  4107a6:	add    BYTE PTR [eax],al
  4107a8:	loopne 0x410767
  4107aa:	inc    esp
  4107ab:	add    BYTE PTR [eax],al
  4107ad:	add    BYTE PTR [eax],al
  4107af:	add    BYTE PTR [eax],al
  4107b1:	push   esp
  4107b2:	add    DWORD PTR [eax],eax
  4107b4:	add    BYTE PTR [eax],cl
  4107b6:	inc    ecx
  4107b7:	add    BYTE PTR [eax],al
  4107b9:	add    BYTE PTR [eax],al
  4107bb:	add    BYTE PTR [eax],al
  4107bd:	inc    esp
  4107be:	adc    BYTE PTR [eax],al
  4107c0:	pop    ebp
  4107c1:	mov    esi,0x44
	...
  4107fa:	add    BYTE PTR [eax],al
  4107fc:	push   edi
  4107fd:	mov    esi,0x44
  410802:	add    BYTE PTR [eax],al
  410804:	add    BYTE PTR [eax+edx*1+0x0],al
  410808:	fmul   DWORD PTR [eax]
  41080a:	inc    ecx
	...
  41081b:	add    BYTE PTR [ebx],bh
  41081d:	mov    edi,0x44
	...
  410836:	add    BYTE PTR [eax],al
  410838:	nop
  410839:	or     BYTE PTR [ecx+0x0],al
  41083c:	sub    DWORD PTR [edi+0x44],edi
  410842:	add    BYTE PTR [eax],al
  410844:	dec    eax
  410845:	or     BYTE PTR [ecx+0x0],al
  410848:	add    BYTE PTR [eax],al
  41084a:	add    BYTE PTR [eax],al
  41084c:	add    BYTE PTR [eax+edx*1+0x0],al
  410850:	and    edi,DWORD PTR [edi+0x44]
	...
  41088a:	add    BYTE PTR [eax],al
  41088c:	sbb    eax,0x44bf
  410891:	add    BYTE PTR [eax],al
  410893:	add    BYTE PTR [eax],al
  410895:	inc    esp
  410896:	adc    BYTE PTR [eax],al
  410898:	xor    eax,0x44bf
	...
  4108d1:	add    BYTE PTR [eax],al
  4108d3:	add    BYTE PTR [edi],ch
  4108d5:	mov    edi,0x44
  4108da:	add    BYTE PTR [eax],al
  4108dc:	add    BYTE PTR [ecx+0x1],dl
  4108df:	add    BYTE PTR [eax-0x41],al
  4108e2:	inc    esp
  4108e3:	add    BYTE PTR [eax],al
  4108e5:	add    BYTE PTR [eax],al
  4108e7:	add    BYTE PTR [eax],al
  4108e9:	push   ebx
  4108ea:	add    DWORD PTR [eax],eax
  4108ec:	lock or BYTE PTR [ecx+0x0],al
  4108f0:	add    BYTE PTR [eax],al
  4108f2:	add    BYTE PTR [eax],al
  4108f4:	add    BYTE PTR [ebx+0x1],cl
  4108f7:	add    ah,bh
  4108f9:	or     BYTE PTR [ecx+0x0],al
  4108fc:	add    BYTE PTR [eax],al
  4108fe:	add    BYTE PTR [eax],al
  410900:	add    BYTE PTR [eax+0x1],dl
  410903:	add    BYTE PTR [eax],cl
  410905:	or     DWORD PTR [ecx+0x0],eax
  410908:	add    BYTE PTR [eax],al
  41090a:	add    BYTE PTR [eax],al
  41090c:	add    BYTE PTR [eax+edx*1+0x0],al
  410910:	pop    ecx
  410911:	mov    edi,0x44
	...
  41094a:	add    BYTE PTR [eax],al
  41094c:	push   ebx
  41094d:	mov    edi,0x44
  410952:	add    BYTE PTR [eax],al
  410954:	add    BYTE PTR [eax+0x9],cl
  410957:	add    BYTE PTR [ebx-0x41],ch
  41095a:	inc    esp
	...
  410977:	add    BYTE PTR [eax+0x4109],bl
  41097d:	add    BYTE PTR [eax],al
  41097f:	add    BYTE PTR [eax],al
  410981:	dec    esp
  410982:	add    eax,0x44bf7f00
	...
  410993:	add    al,ah
  410995:	or     DWORD PTR [ecx+0x0],eax
  410998:	add    BYTE PTR [eax],al
  41099a:	add    BYTE PTR [eax],al
  41099c:	add    BYTE PTR [eax+edx*1+0x0],al
  4109a0:	gs mov edi,0x44
	...
  4109da:	add    BYTE PTR [eax],al
  4109dc:	pop    edi
  4109dd:	mov    edi,0x44
  4109e2:	add    BYTE PTR [eax],al
  4109e4:	add    BYTE PTR [eax+edx*1+0x0],al
  4109e8:	jns    0x4109a9
  4109ea:	inc    esp
	...
  410a23:	add    BYTE PTR [ebx-0x41],dh
  410a26:	inc    esp
  410a27:	add    BYTE PTR [eax],al
  410a29:	add    BYTE PTR [eax],al
  410a2b:	add    BYTE PTR [eax],al
  410a2d:	xor    ah,BYTE PTR [eax+eax*1]
  410a30:	aad    0xbf
  410a32:	inc    esp
	...
  410a6b:	add    bh,cl
  410a6d:	mov    edi,0x44
	...
  410aba:	add    BYTE PTR [eax],al
  410abc:	leave  
  410abd:	mov    edi,0x44
  410ac2:	add    BYTE PTR [eax],al
  410ac4:	add    BYTE PTR [eax+0x1],dl
  410ac7:	add    al,bl
  410ac9:	or     al,BYTE PTR [ecx+0x0]
  410acc:	add    BYTE PTR [eax],al
  410ace:	add    BYTE PTR [eax],al
  410ad0:	add    BYTE PTR [esi+0x1],cl
  410ad3:	add    al,cl
  410ad5:	or     eax,DWORD PTR [ecx+0x0]
  410ad8:	add    BYTE PTR [eax],al
  410ada:	add    BYTE PTR [eax],al
  410adc:	add    BYTE PTR [eax+edx*1+0x0],al
  410ae0:	out    dx,eax
  410ae1:	mov    edi,0x44
	...
  410b1a:	add    BYTE PTR [eax],al
  410b1c:	jmp    0x414fe0
  410b21:	add    BYTE PTR [eax],al
  410b23:	add    BYTE PTR [eax],al
  410b25:	xor    BYTE PTR [eax],ch
  410b27:	add    BYTE PTR [edi],dh
  410b29:	rol    BYTE PTR [eax+eax*1+0x31],0xc0
  410b2e:	inc    esp
  410b2f:	add    BYTE PTR [ebx],ch
  410b31:	rol    BYTE PTR [eax+eax*1+0x25],0xc0
  410b36:	inc    esp
  410b37:	add    BYTE PTR [edi],bl
  410b39:	rol    BYTE PTR [eax+eax*1+0x19],0xc0
  410b3e:	inc    esp
  410b3f:	add    BYTE PTR [ebx],dl
  410b41:	rol    BYTE PTR [eax+eax*1+0xd],0xc0
  410b46:	inc    esp
	...
  410bc3:	add    BYTE PTR ds:0x44c0,al
  410bc9:	add    BYTE PTR [eax],al
  410bcb:	add    BYTE PTR [eax],al
  410bcd:	push   eax
  410bce:	add    al,0x0
  410bd0:	sub    BYTE PTR [ecx+eax*2],cl
	...
  410bdb:	add    al,ah
  410bdd:	or     eax,DWORD PTR [ecx+0x0]
  410be0:	add    BYTE PTR [eax],al
  410be2:	add    BYTE PTR [eax],al
  410be4:	add    BYTE PTR [eax+edx*1+0x0],al
  410be8:	inc    ebx
  410be9:	rol    BYTE PTR [eax+eax*1+0x0],0x0
	...
  410c22:	add    BYTE PTR [eax],al
  410c24:	cmp    eax,0x44c0
  410c29:	add    BYTE PTR [eax],al
  410c2b:	add    BYTE PTR [eax],al
  410c2d:	inc    esp
  410c2e:	adc    BYTE PTR [eax],al
  410c30:	dec    edi
  410c31:	rol    BYTE PTR [eax+eax*1+0x0],0x0
	...
  410c6a:	add    BYTE PTR [eax],al
  410c6c:	dec    ecx
  410c6d:	rol    BYTE PTR [eax+eax*1+0x0],0x0
  410c72:	add    BYTE PTR [eax],al
  410c74:	add    BYTE PTR [ebx+0x16],al
  410c77:	add    BYTE PTR [ebx+0x44c0],dl
	...
  410cb5:	add    BYTE PTR [eax],al
  410cb7:	add    BYTE PTR [eax+0xd],bh
  410cba:	inc    ecx
	...
  410ccb:	add    al,dl
  410ccd:	or     al,0x41
  410ccf:	add    BYTE PTR [eax],al
  410cd1:	add    BYTE PTR [eax],al
  410cd3:	add    BYTE PTR [eax],al
  410cd5:	push   eax
  410cd6:	add    al,0x0
  410cd8:	xor    BYTE PTR ds:0x41,cl
  410cde:	add    BYTE PTR [eax],al
  410ce0:	add    BYTE PTR [eax],al
  410ce2:	add    BYTE PTR [eax],al
  410ce4:	call   0x414df5
  410ce9:	add    BYTE PTR [eax],al
  410ceb:	add    BYTE PTR [eax],al
  410ced:	inc    esp
  410cee:	adc    BYTE PTR [eax],al
  410cf0:	rol    BYTE PTR gs:[eax+eax*1+0x0],0x0
	...
  410d2a:	add    BYTE PTR [eax],al
  410d2c:	pop    edi
  410d2d:	rol    BYTE PTR [eax+eax*1+0x0],0x0
  410d32:	add    BYTE PTR [eax],al
  410d34:	add    BYTE PTR [eax+edx*1+0x0],al
  410d38:	jno    0x410cfa
  410d3a:	inc    esp
	...
  410d73:	add    BYTE PTR [ebx-0x40],ch
  410d76:	inc    esp
  410d77:	add    BYTE PTR [eax],al
  410d79:	add    BYTE PTR [eax],al
  410d7b:	add    BYTE PTR [eax],al
  410d7d:	dec    ebx
  410d7e:	add    DWORD PTR [eax],eax
  410d80:	js     0x410d42
  410d82:	inc    esp
  410d83:	add    BYTE PTR [eax],al
  410d85:	add    BYTE PTR [eax],al
  410d87:	add    BYTE PTR [eax],al
  410d89:	dec    edi
  410d8a:	add    DWORD PTR [eax],eax
  410d8c:	nop
  410d8d:	or     eax,0x41
  410d92:	add    BYTE PTR [eax],al
  410d94:	add    BYTE PTR [esi+0x1],dl
  410d97:	add    BYTE PTR [eax+0x410d],ch
  410d9d:	add    BYTE PTR [eax],al
  410d9f:	add    BYTE PTR [eax],al
  410da1:	push   eax
  410da2:	add    DWORD PTR [eax],eax
  410da4:	pop    eax
  410da5:	push   cs
  410da6:	inc    ecx
  410da7:	add    BYTE PTR [eax],al
  410da9:	add    BYTE PTR [eax],al
  410dab:	add    BYTE PTR [eax],al
  410dad:	inc    esp
  410dae:	push   cs
  410daf:	add    BYTE PTR [ebx+0x44c0],cl
	...
  410de1:	add    BYTE PTR [eax],al
  410de3:	add    BYTE PTR [ebp+0x44c0],al
  410de9:	add    BYTE PTR [eax],al
  410deb:	add    BYTE PTR [eax],al
  410ded:	inc    ecx
  410dee:	sbb    al,BYTE PTR [eax]
  410df0:	add    BYTE PTR [ecx],dl
  410df2:	inc    ecx
	...
  410dfb:	add    al,dl
  410dfd:	adc    BYTE PTR [ecx+0x0],al
  410e00:	or     bl,al
  410e02:	inc    esp
  410e03:	add    BYTE PTR [eax+0x10],ch
  410e06:	inc    ecx
  410e07:	add    BYTE PTR [eax],ah
  410e09:	adc    BYTE PTR [ecx+0x0],al
  410e0c:	add    BYTE PTR [eax],al
  410e0e:	add    BYTE PTR [eax],al
  410e10:	fcmovnb st,st(2)
  410e12:	inc    esp
	...
  410e1b:	add    al,cl
  410e1d:	cmovno eax,DWORD PTR [eax]
  410e20:	(bad)
  410e23:	add    BYTE PTR [eax],al
  410e25:	add    BYTE PTR [eax],al
  410e27:	add    al,al
  410e29:	push   cs
  410e2a:	inc    ecx
	...
  410e37:	add    BYTE PTR [eax-0x4bffbef2],bl
  410e3d:	rol    BYTE PTR [eax+eax*1+0x0],0x0
  410e42:	add    BYTE PTR [eax],al
  410e44:	add    BYTE PTR [eax],al
  410e46:	add    BYTE PTR [eax],al
  410e48:	pushf  
  410e49:	or     eax,0x41
  410e4e:	add    BYTE PTR [eax],al
  410e50:	add    BYTE PTR [eax],al
  410e52:	add    BYTE PTR [eax],al
  410e54:	fwait
  410e55:	rol    BYTE PTR [eax+eax*1+0x0],0x0
  410e5a:	add    BYTE PTR [eax],al
  410e5c:	add    BYTE PTR [ecx+0xe],cl
  410e5f:	add    BYTE PTR [ebx+0x44c0],ch
	...
  410e91:	add    BYTE PTR [eax],al
  410e93:	add    BYTE PTR [ebx+0x44c0],ah
  410e99:	add    BYTE PTR [eax],al
  410e9b:	add    BYTE PTR [eax],al
  410e9d:	dec    esp
  410e9e:	or     BYTE PTR [eax],al
  410ea0:	int    0xc0
  410ea2:	inc    esp
	...
  410ebb:	add    bh,al
  410ebd:	rol    BYTE PTR [eax+eax*1+0x0],0x0
  410ec2:	add    BYTE PTR [eax],al
  410ec4:	add    BYTE PTR [ebx+0x15],al
  410ec7:	add    BYTE PTR [edi+ecx*1+0xf880041],dl
  410ece:	inc    ecx
	...
  410ef7:	add    BYTE PTR [edi+ecx*1],bl
  410efa:	inc    ecx
	...
  410f17:	add    al,bl
  410f19:	rol    BYTE PTR [eax+eax*1+0x0],0x0
  410f1e:	add    BYTE PTR [eax],al
  410f20:	add    BYTE PTR [eax+0x1],dl
  410f23:	add    BYTE PTR [eax+0x44c1],cl
  410f29:	add    BYTE PTR [eax],al
  410f2b:	add    BYTE PTR [eax],al
  410f2d:	inc    ebp
  410f2e:	push   ss
  410f2f:	add    BYTE PTR [eax],cl
  410f31:	ret    0x44
	...
  410f84:	hlt    
  410f85:	rol    DWORD PTR [eax+eax*1+0x0],0x0
  410f8a:	add    BYTE PTR [eax],al
  410f8c:	add    BYTE PTR [ebx+0x1],dl
  410f8f:	add    BYTE PTR [eax-0x3e],al
  410f92:	inc    esp
  410f93:	add    BYTE PTR [eax],al
  410f95:	add    BYTE PTR [eax],al
  410f97:	add    BYTE PTR [eax],al
  410f99:	inc    ecx
  410f9a:	or     eax,DWORD PTR [eax]
  410f9c:	mov    edi,0x44c2
	...
  410fc1:	add    BYTE PTR [eax],al
  410fc3:	add    BYTE PTR [ecx+0x44c2],bh
  410fc9:	add    BYTE PTR [eax],al
  410fcb:	add    BYTE PTR [eax],al
  410fcd:	inc    esp
  410fce:	adc    al,0x0
  410fd0:	aad    0xc2
  410fd2:	inc    esp
	...
  41101b:	add    ch,cl
  41101d:	ret    0x44
  411020:	add    BYTE PTR [eax],al
  411022:	add    BYTE PTR [eax],al
  411024:	add    BYTE PTR [eax+edx*1+0x0],al
  411028:	jmp    0x4154ef
	...
  411061:	add    BYTE PTR [eax],al
  411063:	add    bl,ah
  411065:	ret    0x44
  411068:	add    BYTE PTR [eax],al
  41106a:	add    BYTE PTR [eax],al
  41106c:	add    BYTE PTR [ebp+0xf],al
  41106f:	add    ch,dh
  411071:	ret    0x44
	...
  4110a8:	out    dx,eax
  4110a9:	ret    0x44
  4110ac:	add    BYTE PTR [eax],al
  4110ae:	add    BYTE PTR [eax],al
  4110b0:	add    BYTE PTR [edi+0x1],al
  4110b3:	add    BYTE PTR [eax+0x4110],bh
  4110b9:	add    BYTE PTR [eax],al
  4110bb:	add    BYTE PTR [eax],al
  4110bd:	push   esp
  4110be:	add    DWORD PTR [eax],eax
  4110c0:	les    edx,FWORD PTR [eax]
  4110c2:	inc    ecx
  4110c3:	add    BYTE PTR [eax],al
  4110c5:	add    BYTE PTR [eax],al
  4110c7:	add    BYTE PTR [eax],al
  4110c9:	dec    eax
  4110ca:	add    DWORD PTR [eax],eax
  4110cc:	xor    al,0xc2
  4110ce:	inc    esp
  4110cf:	add    BYTE PTR [eax],al
  4110d1:	add    BYTE PTR [eax],al
  4110d3:	add    BYTE PTR [eax],al
  4110d5:	inc    esp
  4110d6:	or     al,BYTE PTR [eax]
  4110d8:	pop    edi
  4110d9:	ret    
  4110da:	inc    esp
	...
  4110fb:	add    BYTE PTR [ebp-0x3d],dl
  4110fe:	inc    esp
  4110ff:	add    BYTE PTR [eax],al
  411101:	add    BYTE PTR [eax],al
  411103:	add    BYTE PTR [eax],al
  411105:	inc    edx
  411106:	adc    DWORD PTR [eax],eax
  411108:	jae    0x4110cd
  41110a:	inc    esp
	...
  41111f:	add    BYTE PTR [ebp-0x3d],ch
  411122:	inc    esp
	...
  411147:	add    BYTE PTR [edi-0x3d],ah
  41114a:	inc    esp
  41114b:	add    BYTE PTR [eax],al
  41114d:	add    BYTE PTR [eax],al
  41114f:	add    BYTE PTR [eax],al
  411151:	push   esp
  411152:	add    DWORD PTR [eax],eax
  411154:	rol    ah,1
  411156:	inc    esp
  411157:	add    BYTE PTR [eax],al
  411159:	add    BYTE PTR [eax],al
  41115b:	add    BYTE PTR [eax],al
  41115d:	inc    ecx
  41115e:	sbb    al,BYTE PTR [eax]
  411160:	test   al,0xc4
  411162:	inc    esp
  411163:	add    BYTE PTR [esp+eax*8-0x3b72ffbc],dl
  41116a:	inc    esp
  41116b:	add    BYTE PTR [eax],al
  41116d:	add    BYTE PTR [eax],al
  41116f:	add    BYTE PTR [eax-0x3c],bh
  411172:	inc    esp
  411173:	add    BYTE PTR [eax],al
  411175:	add    BYTE PTR [eax],al
  411177:	add    BYTE PTR [esp+eax*8+0x44],ah
	...
  41118b:	add    BYTE PTR [eax-0x3c],dl
  41118e:	inc    esp
  41118f:	add    BYTE PTR [ebx-0x3c],cl
  411192:	inc    esp
  411193:	add    al,cl
  411195:	adc    DWORD PTR [ecx+0x0],eax
  411198:	rol    ebx,1
  41119a:	inc    esp
  41119b:	add    BYTE PTR [eax+0x44c3],dl
  4111a1:	add    BYTE PTR [eax],al
  4111a3:	add    BYTE PTR [edi-0x7effbb3d],al
  4111a9:	ret    
  4111aa:	inc    esp
	...
  4111c3:	add    BYTE PTR [ebx-0x3d],bh
  4111c6:	inc    esp
  4111c7:	add    BYTE PTR [eax],al
  4111c9:	add    BYTE PTR [eax],al
  4111cb:	add    BYTE PTR [eax],al
  4111cd:	inc    ecx
  4111ce:	sbb    al,BYTE PTR [eax]
  4111d0:	cmp    ah,al
  4111d2:	inc    esp
  4111d3:	add    BYTE PTR [esp+eax*8],ah
  4111d6:	inc    esp
  4111d7:	add    BYTE PTR ds:0x44c4,bl
  4111dd:	add    BYTE PTR [eax],al
  4111df:	add    BYTE PTR [edi],dl
  4111e1:	les    eax,FWORD PTR [eax+eax*1+0x0]
  4111e5:	add    BYTE PTR [eax],al
  4111e7:	add    BYTE PTR [esp+eax*8],al
  4111ea:	inc    esp
	...
  4111fb:	add    al,dh
  4111fd:	ret    
  4111fe:	inc    esp
	...
  411207:	add    cl,ch
  411209:	ret    
  41120a:	inc    esp
  41120b:	add    bl,ah
  41120d:	ret    
  41120e:	inc    esp
	...
  411217:	add    ch,bl
  411219:	ret    
  41121a:	inc    esp
	...
  411233:	add    bh,dl
  411235:	ret    
  411236:	inc    esp
  411237:	add    BYTE PTR [eax],al
  411239:	add    BYTE PTR [eax],al
  41123b:	add    BYTE PTR [eax],al
  41123d:	inc    esp
  41123e:	(bad)  
  411240:	xor    eax,edi
  411242:	inc    esp
  411243:	add    BYTE PTR [eax],al
  411245:	add    BYTE PTR [eax],al
  411247:	add    BYTE PTR [eax-0x3a],ah
  41124a:	inc    esp
	...
  411263:	add    BYTE PTR [eax+0x28004113],al
  411269:	lds    eax,FWORD PTR [eax+eax*1+0x0]
	...
  411275:	add    BYTE PTR [eax],al
  411277:	add    BYTE PTR [edx+edx*1+0x41],bh
  41127b:	add    BYTE PTR [eax],al
  41127d:	add    BYTE PTR [eax],al
  41127f:	add    BYTE PTR [eax],al
  411281:	inc    ebp
  411282:	or     al,0x0
  411284:	dec    esp
  411285:	adc    DWORD PTR [ecx+0x0],eax
	...
  4112b0:	mov    esp,0x44c4
  4112b5:	add    BYTE PTR [eax],al
  4112b7:	add    BYTE PTR [eax],al
  4112b9:	push   eax
  4112ba:	add    DWORD PTR [eax],eax
  4112bc:	adc    al,0x13
  4112be:	inc    ecx
  4112bf:	add    BYTE PTR [eax],al
  4112c1:	add    BYTE PTR [eax],al
  4112c3:	add    BYTE PTR [eax],al
  4112c5:	inc    esp
  4112c6:	adc    eax,DWORD PTR [eax]
  4112c8:	lahf   
  4112c9:	lds    eax,FWORD PTR [eax+eax*1-0x69]
  4112cd:	lds    eax,FWORD PTR [eax+eax*1+0x0]
	...
  4112e5:	add    BYTE PTR [eax],al
  4112e7:	add    BYTE PTR [edx+edx*1+0x41],dh
	...
  4112f6:	add    BYTE PTR [eax],al
  4112f8:	mov    ebp,eax
  4112fa:	inc    esp
	...
  41130f:	add    BYTE PTR [ecx+0x44c5],al
  411315:	add    BYTE PTR [eax],al
  411317:	add    BYTE PTR [eax],al
  411319:	inc    edi
  41131a:	add    DWORD PTR [eax],eax
  41131c:	sbb    al,0xc5
  41131e:	inc    esp
  41131f:	add    BYTE PTR [eax],al
  411321:	add    BYTE PTR [eax],al
  411323:	add    BYTE PTR [eax],al
  411325:	push   edx
  411326:	add    DWORD PTR [eax],eax
  411328:	sub    al,0x13
  41132a:	inc    ecx
  41132b:	add    BYTE PTR [eax],al
  41132d:	add    BYTE PTR [eax],al
  41132f:	add    BYTE PTR [eax],al
  411331:	push   esp
  411332:	add    DWORD PTR [eax],eax
  411334:	cmp    BYTE PTR [ebx],dl
  411336:	inc    ecx
  411337:	add    BYTE PTR [eax],al
  411339:	add    BYTE PTR [eax],al
  41133b:	add    BYTE PTR [eax],al
  41133d:	push   eax
  41133e:	add    al,BYTE PTR [eax]
  411340:	sbb    eax,0x170044c6
  411345:	mov    BYTE PTR [eax+eax*1+0x0],0x0
  41134a:	add    BYTE PTR [eax],al
  41134c:	add    BYTE PTR [ebp+0x1],dl
  41134f:	add    BYTE PTR [ebx+edx*1+0x41],dl
  411353:	add    BYTE PTR [eax],al
  411355:	add    BYTE PTR [eax],al
  411357:	add    BYTE PTR [eax],al
  411359:	inc    esp
  41135a:	add    DWORD PTR [eax],eax
  41135c:	pusha  
  41135d:	adc    eax,DWORD PTR [ecx+0x0]
  411360:	add    BYTE PTR [eax],al
  411362:	add    BYTE PTR [eax],al
  411364:	add    BYTE PTR [ebp+0x1],al
  411367:	add    BYTE PTR [esi+eax*8],bh
  41136a:	inc    esp
  41136b:	add    BYTE PTR [eax],al
  41136d:	add    BYTE PTR [eax],al
  41136f:	add    BYTE PTR [eax],al
  411371:	inc    edx
  411372:	add    eax,DWORD PTR [eax]
  411374:	jmp    0x41583f
  411379:	add    BYTE PTR [eax],al
  41137b:	add    cl,ah
  41137d:	mov    BYTE PTR [eax+eax*1+0x0],0x0
  411382:	add    BYTE PTR [eax],al
  411384:	add    BYTE PTR [ecx+0x15],al
  411387:	add    BYTE PTR [edi-0x3a],dl
  41138a:	inc    esp
	...
  4113d7:	add    BYTE PTR [ecx-0x3a],dl
  4113da:	inc    esp
  4113db:	add    BYTE PTR [eax],al
  4113dd:	add    BYTE PTR [eax],al
  4113df:	add    BYTE PTR [eax],al
  4113e1:	inc    esp
  4113e2:	add    DWORD PTR [eax],eax
  4113e4:	call   0x4154fc
  4113e9:	add    BYTE PTR [eax],al
  4113eb:	add    BYTE PTR [eax],al
  4113ed:	dec    esi
  4113ee:	add    DWORD PTR [eax],eax
  4113f0:	lock mov BYTE PTR [eax+eax*1+0x0],0x0
  4113f6:	add    BYTE PTR [eax],al
  4113f8:	add    BYTE PTR [ebp+0x5],al
  4113fb:	add    BYTE PTR [ebx],bl
  4113fd:	mov    DWORD PTR [eax+eax*1+0x0],0x0
  411405:	add    BYTE PTR [eax],al
  411407:	add    BYTE PTR [eax],al
  411409:	add    BYTE PTR [eax],al
  41140b:	add    BYTE PTR [eax],dl
  41140d:	adc    al,0x41
  41140f:	add    BYTE PTR [eax],al
  411411:	add    BYTE PTR [eax],al
  411413:	add    BYTE PTR [eax],al
  411415:	inc    esi
  411416:	add    DWORD PTR [eax],eax
  411418:	or     bh,al
  41141a:	inc    esp
  41141b:	add    BYTE PTR [eax],al
  41141d:	add    BYTE PTR [eax],al
  41141f:	add    BYTE PTR [eax],al
  411421:	push   ebp
  411422:	add    DWORD PTR [eax],eax
  411424:	jl     0x41143a
  411426:	inc    ecx
  411427:	add    BYTE PTR [eax],al
  411429:	add    BYTE PTR [eax],al
  41142b:	add    BYTE PTR [eax],al
  41142d:	inc    ecx
  41142e:	adc    eax,DWORD PTR [eax]
  411430:	hlt    
  411431:	adc    al,0x41
	...
  41144f:	add    BYTE PTR [esp+edx*1+0x41],dl
  411456:	add    BYTE PTR [eax],al
  411458:	add    BYTE PTR [eax],al
  41145a:	add    BYTE PTR [eax],al
  41145c:	inc    edi
  41145d:	mov    DWORD PTR [eax+eax*1+0x0],0x0
	...
  411475:	add    BYTE PTR [eax],al
  411477:	add    BYTE PTR [esp+edx*1],bl
  41147a:	inc    ecx
  41147b:	add    BYTE PTR [eax],al
  41147d:	add    BYTE PTR [eax],al
  41147f:	add    BYTE PTR [eax],al
  411481:	inc    edx
  411482:	add    DWORD PTR [eax],eax
  411484:	mov    BYTE PTR [ecx+eax*2],dl
  411487:	add    BYTE PTR [eax],al
  411489:	add    BYTE PTR [eax],al
  41148b:	add    BYTE PTR [eax],al
  41148d:	push   eax
  41148e:	add    DWORD PTR [eax],eax
  411490:	mov    al,ds:0x4114
  411495:	add    BYTE PTR [eax],al
  411497:	add    BYTE PTR [eax],al
  411499:	inc    edi
  41149a:	add    DWORD PTR [eax],eax
  41149c:	call   0x4155b5
  4114a1:	add    BYTE PTR [eax],al
  4114a3:	add    BYTE PTR [eax],al
  4114a5:	inc    esp
  4114a6:	adc    BYTE PTR [eax],al
  4114a8:	inc    ecx
  4114a9:	mov    DWORD PTR [eax+eax*1+0x0],0x0
	...
  4114e1:	add    BYTE PTR [eax],al
  4114e3:	add    BYTE PTR [ebx],bh
  4114e5:	mov    DWORD PTR [eax+eax*1+0x0],0x0
  4114ed:	dec    eax
  4114ee:	add    DWORD PTR [eax],eax
  4114f0:	pop    eax
  4114f1:	mov    DWORD PTR [eax+eax*1+0x0],0x0
  4114f9:	inc    esp
  4114fa:	add    DWORD PTR [eax],eax
  4114fc:	add    BYTE PTR ds:0x41,dl
  411502:	add    BYTE PTR [eax],al
  411504:	add    BYTE PTR [ecx+eax*1+0x0],al
  411508:	or     al,0x15
  41150a:	inc    ecx
  41150b:	add    BYTE PTR [eax],al
  41150d:	add    BYTE PTR [eax],al
  41150f:	add    BYTE PTR [eax],al
  411511:	push   eax
  411512:	add    DWORD PTR [eax],eax
  411514:	sbb    BYTE PTR ds:0x41,dl
  41151a:	add    BYTE PTR [eax],al
  41151c:	add    BYTE PTR [eax+edx*1+0x0],al
  411520:	or     eax,ecx
  411522:	inc    esp
	...
  41155b:	add    BYTE PTR [ebx],al
  41155d:	enter  0x44,0x0
  411561:	add    BYTE PTR [eax],al
  411563:	add    BYTE PTR [eax],al
  411565:	inc    ebp
  411566:	adc    BYTE PTR [eax],al
  411568:	dec    esp
  411569:	mov    DWORD PTR [eax+eax*1+0x0],0x0
	...
  41158d:	add    BYTE PTR [eax],al
  41158f:	add    BYTE PTR [ebx],bl
  411591:	enter  0x44,0x0
	...
  41159d:	add    BYTE PTR [eax],al
  41159f:	add    BYTE PTR ds:0xf0044c8,dl
  4115a5:	enter  0x44,0x0
  4115a9:	add    BYTE PTR [eax],al
  4115ab:	add    BYTE PTR [eax],al
  4115ad:	xor    ch,BYTE PTR [eax]
  4115af:	add    BYTE PTR [ebp+0x44cd],al
	...
  4115e9:	add    BYTE PTR [eax],al
  4115eb:	add    BYTE PTR [eax+0x1d],bl
  4115ee:	inc    ecx
  4115ef:	add    BYTE PTR [eax],dh
  4115f1:	sbb    eax,0x1c100041
  4115f6:	inc    ecx
  4115f7:	add    ah,bl
  4115f9:	sbb    eax,DWORD PTR [ecx+0x0]
  4115fc:	int3   
  4115fd:	sbb    eax,DWORD PTR [ecx+0x0]
  411600:	test   al,0x1b
  411602:	inc    ecx
	...
  41160b:	add    al,dh
  41160d:	sbb    al,BYTE PTR [ecx+0x0]
	...
  411618:	cld    
  411619:	sbb    DWORD PTR [ecx+0x0],eax
  41161c:	in     al,0x19
  41161e:	inc    ecx
  41161f:	add    al,dl
  411621:	sbb    BYTE PTR [ecx+0x0],al
  411624:	mov    eax,0x48004118
  411629:	sbb    BYTE PTR [ecx+0x0],al
  41162c:	add    BYTE PTR [eax],al
  41162e:	add    BYTE PTR [eax],al
  411630:	rcl    BYTE PTR [edi],1
  411632:	inc    ecx
  411633:	add    al,ch
  411635:	enter  0x44,0xdb
  411639:	enter  0x44,0x64
  41163d:	pop    ss
  41163e:	inc    ecx
  41163f:	add    BYTE PTR [eax],al
  411641:	add    BYTE PTR [eax],al
  411643:	add    BYTE PTR [eax],ah
  411645:	pop    ss
  411646:	inc    ecx
  411647:	add    BYTE PTR [eax+0x50004116],al
  41164d:	push   ss
  41164e:	inc    ecx
  41164f:	add    BYTE PTR [eax],al
  411651:	add    BYTE PTR [eax],al
  411653:	add    BYTE PTR [eax],al
  411655:	dec    esp
  411656:	add    DWORD PTR [eax],eax
  411658:	pop    esp
  411659:	push   ss
  41165a:	inc    ecx
  41165b:	add    BYTE PTR [eax],al
  41165d:	add    BYTE PTR [eax],al
  41165f:	add    BYTE PTR [eax],al
  411661:	xor    al,BYTE PTR [ecx]
  411663:	add    BYTE PTR [eax+0x16],ch
  411666:	inc    ecx
  411667:	add    BYTE PTR [eax],al
  411669:	add    BYTE PTR [eax],al
  41166b:	add    BYTE PTR [eax],al
  41166d:	pop    eax
  41166e:	add    DWORD PTR [eax],eax
  411670:	sub    al,0xc8
  411672:	inc    esp
  411673:	add    BYTE PTR [eax],al
  411675:	add    BYTE PTR [eax],al
  411677:	add    BYTE PTR [eax],al
  411679:	inc    ecx
  41167a:	add    DWORD PTR [eax],eax
  41167c:	fcom   DWORD PTR [esi]
  41167e:	inc    ecx
  41167f:	add    BYTE PTR [eax],al
  411681:	add    BYTE PTR [eax],al
  411683:	add    BYTE PTR [eax],al
  411685:	inc    ecx
  411686:	adc    al,0x0
  411688:	jne    0x411652
  41168a:	inc    esp
  41168b:	add    BYTE PTR [eax],al
  41168d:	add    BYTE PTR [eax],al
  41168f:	add    BYTE PTR [edi-0x38],ch
  411692:	inc    esp
	...
  4116cb:	add    al,dh
  4116cd:	push   ss
  4116ce:	inc    ecx
  4116cf:	add    BYTE PTR [esi+edx*1+0x41],dh
  4116d3:	add    BYTE PTR [edi],bh
  4116d5:	enter  0x44,0x0
  4116d9:	add    BYTE PTR [eax],al
  4116db:	add    BYTE PTR [eax],al
  4116dd:	push   esi
  4116de:	add    DWORD PTR [eax],eax
  4116e0:	in     al,0x16
  4116e2:	inc    ecx
  4116e3:	add    BYTE PTR [eax],al
  4116e5:	add    BYTE PTR [eax],al
  4116e7:	add    BYTE PTR [eax],al
  4116e9:	inc    ebp
  4116ea:	add    DWORD PTR [eax],eax
  4116ec:	dec    eax
  4116ed:	enter  0x44,0x0
  4116f1:	add    BYTE PTR [eax],al
  4116f3:	add    BYTE PTR [eax],al
  4116f5:	push   ebx
  4116f6:	add    DWORD PTR [eax],eax
  4116f8:	cld    
  4116f9:	push   ss
  4116fa:	inc    ecx
  4116fb:	add    BYTE PTR [eax],al
  4116fd:	add    BYTE PTR [eax],al
  4116ff:	add    BYTE PTR [eax],al
  411701:	push   esp
  411702:	add    DWORD PTR [eax],eax
  411704:	or     BYTE PTR [edi],dl
  411706:	inc    ecx
  411707:	add    BYTE PTR [eax],al
  411709:	add    BYTE PTR [eax],al
  41170b:	add    BYTE PTR [eax],al
  41170d:	dec    edi
  41170e:	add    DWORD PTR [eax],eax
  411710:	adc    al,0x17
  411712:	inc    ecx
  411713:	add    BYTE PTR [eax],al
  411715:	add    BYTE PTR [eax],al
  411717:	add    BYTE PTR [eax],al
  411719:	push   edx
  41171a:	add    DWORD PTR [eax],eax
  41171c:	pop    esp
  41171d:	enter  0x44,0x0
  411721:	add    BYTE PTR [eax],al
  411723:	add    BYTE PTR [eax],al
  411725:	inc    ecx
  411726:	sldt   WORD PTR [ebx+0x44c8]
	...
  41175d:	add    BYTE PTR [eax],al
  41175f:	add    BYTE PTR [ebx-0x38],bh
  411762:	inc    esp
  411763:	add    BYTE PTR [eax],al
  411765:	add    BYTE PTR [eax],al
  411767:	add    BYTE PTR [eax],al
  411769:	inc    ebx
  41176a:	add    DWORD PTR [eax],eax
  41176c:	jo     0x411785
  41176e:	inc    ecx
  41176f:	add    BYTE PTR [eax],al
  411771:	add    BYTE PTR [eax],al
  411773:	add    BYTE PTR [eax],al
  411775:	dec    edi
  411776:	add    DWORD PTR [eax],eax
  411778:	jl     0x411791
  41177a:	inc    ecx
  41177b:	add    BYTE PTR [eax],al
  41177d:	add    BYTE PTR [eax],al
  41177f:	add    BYTE PTR [eax],al
  411781:	dec    ebp
  411782:	add    DWORD PTR [eax],eax
  411784:	mov    eax,cs
  411786:	inc    esp
  411787:	add    BYTE PTR [eax],al
  411789:	add    BYTE PTR [eax],al
  41178b:	add    BYTE PTR [eax],al
  41178d:	inc    edx
  41178e:	add    DWORD PTR [eax],eax
  411790:	inc    esp
  411791:	leave  
  411792:	inc    esp
  411793:	add    BYTE PTR [eax],al
  411795:	add    BYTE PTR [eax],al
  411797:	add    BYTE PTR [eax],al
  411799:	dec    esi
  41179a:	add    DWORD PTR [eax],eax
  41179c:	mov    al,ds:0x4117
  4117a1:	add    BYTE PTR [eax],al
  4117a3:	add    BYTE PTR [eax],al
  4117a5:	push   esi
  4117a6:	add    DWORD PTR [eax],eax
  4117a8:	(bad)  
  4117a9:	leave  
  4117aa:	inc    esp
  4117ab:	add    BYTE PTR [eax],al
  4117ad:	add    BYTE PTR [eax],al
  4117af:	add    BYTE PTR [eax],al
  4117b1:	dec    esi
  4117b2:	add    DWORD PTR [eax],eax
  4117b4:	in     al,0xc9
  4117b6:	inc    esp
  4117b7:	add    BYTE PTR [eax],al
  4117b9:	add    BYTE PTR [eax],al
  4117bb:	add    BYTE PTR [eax],al
  4117bd:	push   esi
  4117be:	add    DWORD PTR [eax],eax
  4117c0:	les    edx,FWORD PTR [edi]
  4117c2:	inc    ecx
  4117c3:	add    BYTE PTR [eax],al
  4117c5:	add    BYTE PTR [eax],al
  4117c7:	add    BYTE PTR [eax],al
  4117c9:	inc    ebp
  4117ca:	add    DWORD PTR [eax],eax
  4117cc:	or     dl,cl
  4117ce:	inc    esp
  4117cf:	add    BYTE PTR [eax],al
  4117d1:	add    BYTE PTR [eax],al
  4117d3:	add    BYTE PTR [eax],al
  4117d5:	inc    ecx
  4117d6:	adc    eax,DWORD PTR [eax]
  4117d8:	cmp    edx,ecx
  4117da:	inc    esp
	...
  41180b:	add    BYTE PTR [edi],ch
  41180d:	retf   0x44
	...
  411820:	and    al,0x18
  411822:	inc    ecx
  411823:	add    BYTE PTR [eax],al
  411825:	add    BYTE PTR [eax],al
  411827:	add    BYTE PTR [eax],al
  411829:	push   esp
  41182a:	add    DWORD PTR [eax],eax
  41182c:	xor    BYTE PTR [eax],bl
  41182e:	inc    ecx
  41182f:	add    BYTE PTR [eax],al
  411831:	add    BYTE PTR [eax],al
  411833:	add    BYTE PTR [eax],al
  411835:	dec    edi
  411836:	add    DWORD PTR [eax],eax
  411838:	cmp    al,0x18
  41183a:	inc    ecx
  41183b:	add    BYTE PTR [eax],al
  41183d:	add    BYTE PTR [eax],al
  41183f:	add    BYTE PTR [eax],al
  411841:	push   edx
  411842:	add    DWORD PTR [eax],eax
  411844:	sbb    al,0xca
  411846:	inc    esp
  411847:	add    BYTE PTR [eax],al
  411849:	add    BYTE PTR [eax],al
  41184b:	add    BYTE PTR [eax],al
  41184d:	inc    ecx
  41184e:	adc    al,0x0
  411850:	pop    ebx
  411851:	retf   0x44
	...
  411894:	mov    al,ds:0x4118
  411899:	add    BYTE PTR [eax],al
  41189b:	add    BYTE PTR [ecx-0x36],al
  41189e:	inc    esp
  41189f:	add    BYTE PTR [eax],al
  4118a1:	add    BYTE PTR [eax],al
  4118a3:	add    BYTE PTR [eax],al
  4118a5:	inc    ebp
  4118a6:	add    DWORD PTR [eax],eax
  4118a8:	lods   al,BYTE PTR ds:[esi]
  4118a9:	sbb    BYTE PTR [ecx+0x0],al
  4118ac:	add    BYTE PTR [eax],al
  4118ae:	add    BYTE PTR [eax],al
  4118b0:	add    BYTE PTR [ebp+0x1],cl
  4118b3:	add    BYTE PTR [eax-0x36],cl
  4118b6:	inc    esp
  4118b7:	add    BYTE PTR [eax],al
  4118b9:	add    BYTE PTR [eax],al
  4118bb:	add    BYTE PTR [eax],al
  4118bd:	push   edx
  4118be:	add    DWORD PTR [eax],eax
  4118c0:	fs retf 0x44
  4118c4:	add    BYTE PTR [eax],al
  4118c6:	add    BYTE PTR [eax],al
  4118c8:	add    BYTE PTR [esi+0x1],cl
  4118cb:	add    BYTE PTR [ecx+ebx*1],bl
  4118ce:	inc    ecx
  4118cf:	add    BYTE PTR [eax],al
  4118d1:	add    BYTE PTR [eax],al
  4118d3:	add    BYTE PTR [eax],al
  4118d5:	inc    ebx
  4118d6:	adc    DWORD PTR [eax],eax
  4118d8:	(bad)
  4118db:	add    BYTE PTR [ebp-0x4affbb36],bh
  4118e1:	retf   0x44
	...
  4118f0:	lods   eax,DWORD PTR ds:[esi]
  4118f1:	retf   0x44
	...
  411908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411909:	retf   0x44
	...
  411918:	sub    BYTE PTR [ecx],bl
  41191a:	inc    ecx
  41191b:	add    BYTE PTR [eax],al
  41191d:	add    BYTE PTR [eax],al
  41191f:	add    BYTE PTR [eax],al
  411921:	push   esi
  411922:	add    DWORD PTR [eax],eax
  411924:	jl     0x4118f0
  411926:	inc    esp
  411927:	add    BYTE PTR [eax],al
  411929:	add    BYTE PTR [eax],al
  41192b:	add    BYTE PTR [eax],al
  41192d:	inc    ecx
  41192e:	adc    al,0x0
  411930:	int3   
  411931:	sbb    DWORD PTR [ecx+0x0],eax
	...
  41197c:	sbb    BYTE PTR [ecx],0x41
  41197f:	add    BYTE PTR [eax],al
  411981:	add    BYTE PTR [eax],al
  411983:	add    BYTE PTR [eax],al
  411985:	inc    ebx
  411986:	adc    DWORD PTR [eax],eax
  411988:	(bad)
  41198c:	add    BYTE PTR [eax],al
  41198e:	add    BYTE PTR [eax],al
  411990:	les    ebx,FWORD PTR [eax]
  411992:	inc    ecx
	...
  4119c7:	add    BYTE PTR [edi-0x36],dh
  4119ca:	inc    esp
  4119cb:	add    BYTE PTR [eax],al
  4119cd:	add    BYTE PTR [eax],al
  4119cf:	add    BYTE PTR [eax],al
  4119d1:	push   esi
  4119d2:	add    DWORD PTR [eax],eax
  4119d4:	fcomp  DWORD PTR [ecx]
  4119d6:	inc    ecx
  4119d7:	add    BYTE PTR [eax],al
  4119d9:	add    BYTE PTR [eax],al
  4119db:	add    BYTE PTR [eax],al
  4119dd:	inc    ebp
  4119de:	add    DWORD PTR [eax],eax
  4119e0:	xchg   esp,eax
  4119e1:	retf   0x44
  4119e4:	add    BYTE PTR [eax],al
  4119e6:	add    BYTE PTR [eax],al
  4119e8:	add    BYTE PTR [ebp+0x1],dl
  4119eb:	add    al,dh
  4119ed:	sbb    DWORD PTR [ecx+0x0],eax
  4119f0:	add    BYTE PTR [eax],al
  4119f2:	add    BYTE PTR [eax],al
  4119f4:	add    BYTE PTR [ecx+eax*1+0x0],cl
  4119f8:	int3   
  4119f9:	retf   0x44
  4119fc:	add    BYTE PTR [eax],al
  4119fe:	add    BYTE PTR [eax],al
  411a00:	add    BYTE PTR [ecx+eax*1+0x0],al
  411a04:	loopne 0x4119d0
  411a06:	inc    esp
  411a07:	add    BYTE PTR [eax],al
  411a09:	add    BYTE PTR [eax],al
  411a0b:	add    BYTE PTR [eax],al
  411a0d:	xor    bl,BYTE PTR ds:0x411a9000
	...
  411a63:	add    BYTE PTR [ebx+0x44cb],ah
	...
  411a7d:	add    BYTE PTR [eax],al
  411a7f:	add    BYTE PTR [ebp+0x44cb],bl
  411a85:	add    BYTE PTR [eax],al
  411a87:	add    BYTE PTR [eax],al
  411a89:	dec    esi
  411a8a:	add    DWORD PTR [eax],eax
  411a8c:	fcomp  DWORD PTR [edx]
  411a8e:	inc    ecx
  411a8f:	add    BYTE PTR [eax],al
  411a91:	add    BYTE PTR [eax],al
  411a93:	add    BYTE PTR [eax],al
  411a95:	inc    ebp
  411a96:	adc    BYTE PTR [eax],al
  411a98:	scas   eax,DWORD PTR es:[edi]
  411a99:	retf   
  411a9a:	inc    esp
	...
  411ad3:	add    BYTE PTR [ecx+0x44cb],ch
  411ad9:	add    BYTE PTR [eax],al
  411adb:	add    BYTE PTR [eax],al
  411add:	push   esi
  411ade:	add    DWORD PTR [eax],eax
  411ae0:	mov    ah,0xcb
  411ae2:	inc    esp
  411ae3:	add    BYTE PTR [eax],al
  411ae5:	add    BYTE PTR [eax],al
  411ae7:	add    BYTE PTR [eax],al
  411ae9:	inc    edx
  411aea:	add    DWORD PTR [eax],eax
  411aec:	aam    0xcb
  411aee:	inc    esp
  411aef:	add    BYTE PTR [eax],al
  411af1:	add    BYTE PTR [eax],al
  411af3:	add    BYTE PTR [eax],al
  411af5:	inc    ecx
  411af6:	adc    eax,DWORD PTR [eax]
  411af8:	push   ebx
  411af9:	int3   
  411afa:	inc    esp
  411afb:	add    BYTE PTR [eax],al
  411afd:	add    BYTE PTR [eax],al
  411aff:	add    BYTE PTR [eax+0x7800411b],dl
  411b05:	sbb    eax,DWORD PTR [ecx+0x0]
	...
  411b24:	daa    
  411b25:	int3   
  411b26:	inc    esp
  411b27:	add    BYTE PTR [edi],bl
  411b29:	int3   
  411b2a:	inc    esp
  411b2b:	add    BYTE PTR [ebx+ebx*1+0x41],dl
	...
  411b3f:	add    BYTE PTR [ebx+ebx*1+0x41],al
  411b43:	add    BYTE PTR [eax],al
  411b45:	add    BYTE PTR [eax],al
  411b47:	add    BYTE PTR [eax],al
  411b49:	push   esp
  411b4a:	add    al,BYTE PTR [eax]
  411b4c:	call   0xe441601c
  411b51:	sbb    al,BYTE PTR [ecx+0x0]
  411b54:	add    BYTE PTR [eax],al
  411b56:	add    BYTE PTR [eax],al
  411b58:	add    BYTE PTR [ebx+0x7],al
  411b5b:	add    BYTE PTR [edi],dl
  411b5d:	int3   
  411b5e:	inc    esp
	...
  411b73:	add    BYTE PTR [ecx],dl
  411b75:	int3   
  411b76:	inc    esp
  411b77:	add    BYTE PTR [eax],al
  411b79:	add    BYTE PTR [eax],al
  411b7b:	add    BYTE PTR [eax],al
  411b7d:	dec    ecx
  411b7e:	add    DWORD PTR [eax],eax
  411b80:	test   BYTE PTR [ebx],bl
  411b82:	inc    ecx
  411b83:	add    BYTE PTR [eax],al
  411b85:	add    BYTE PTR [eax],al
  411b87:	add    BYTE PTR [eax],al
  411b89:	push   esi
  411b8a:	add    DWORD PTR [eax],eax
  411b8c:	sub    al,0xcc
  411b8e:	inc    esp
  411b8f:	add    BYTE PTR [eax],al
  411b91:	add    BYTE PTR [eax],al
  411b93:	add    BYTE PTR [eax],al
  411b95:	dec    edi
  411b96:	add    DWORD PTR [eax],eax
  411b98:	pushf  
  411b99:	sbb    eax,DWORD PTR [ecx+0x0]
  411b9c:	add    BYTE PTR [eax],al
  411b9e:	add    BYTE PTR [eax],al
  411ba0:	add    BYTE PTR [ebp+0x1],cl
  411ba3:	add    BYTE PTR [eax-0x34],al
  411ba6:	inc    esp
  411ba7:	add    BYTE PTR [eax],al
  411ba9:	add    BYTE PTR [eax],al
  411bab:	add    BYTE PTR [eax],al
  411bad:	push   edx
  411bae:	add    DWORD PTR [eax],eax
  411bb0:	mov    ah,0x1b
  411bb2:	inc    ecx
  411bb3:	add    BYTE PTR [eax],al
  411bb5:	add    BYTE PTR [eax],al
  411bb7:	add    BYTE PTR [eax],al
  411bb9:	inc    ebp
  411bba:	add    DWORD PTR [eax],eax
  411bbc:	rcr    BYTE PTR [ebx],0x41
  411bbf:	add    BYTE PTR [eax],al
  411bc1:	add    BYTE PTR [eax],al
  411bc3:	add    BYTE PTR [eax],al
  411bc5:	inc    ebp
  411bc6:	add    DWORD PTR [eax],eax
  411bc8:	pop    esp
  411bc9:	int3   
  411bca:	inc    esp
  411bcb:	add    BYTE PTR [eax],al
  411bcd:	add    BYTE PTR [eax],al
  411bcf:	add    BYTE PTR [eax],al
  411bd1:	dec    ebp
  411bd2:	add    al,BYTE PTR [eax]
  411bd4:	jne    0x411ba2
  411bd6:	inc    esp
  411bd7:	add    BYTE PTR [edi-0x34],ch
  411bda:	inc    esp
  411bdb:	add    BYTE PTR [eax],al
  411bdd:	add    BYTE PTR [eax],al
  411bdf:	add    BYTE PTR [eax],al
  411be1:	inc    ebp
  411be2:	add    eax,0x44ccaf00
	...
  411bf3:	add    al,bh
  411bf5:	sbb    eax,DWORD PTR [ecx+0x0]
  411bf8:	add    BYTE PTR [eax],al
  411bfa:	add    BYTE PTR [eax],al
  411bfc:	add    BYTE PTR [ebx+0x4],dl
  411bff:	add    BYTE PTR [ecx+0x44cc],ch
  411c05:	add    BYTE PTR [eax],al
  411c07:	add    BYTE PTR [eax],al
  411c09:	add    BYTE PTR [eax],al
  411c0b:	add    BYTE PTR [esp+ecx*8+0x44],bh
  411c0f:	add    BYTE PTR [eax],al
  411c11:	add    BYTE PTR [eax],al
  411c13:	add    BYTE PTR [eax],al
  411c15:	dec    eax
  411c16:	or     BYTE PTR [eax],al
  411c18:	push   ebx
  411c19:	int    0x44
	...
  411c27:	add    BYTE PTR [ebx-0x33],cl
  411c2a:	inc    esp
  411c2b:	add    BYTE PTR [esp+ebx*1+0x41],bl
  411c2f:	add    BYTE PTR [eax],al
  411c31:	add    BYTE PTR [eax],al
  411c33:	add    BYTE PTR [eax],bh
  411c35:	sbb    al,0x41
  411c37:	add    BYTE PTR [eax],al
  411c39:	add    BYTE PTR [eax],al
  411c3b:	add    BYTE PTR [eax],al
  411c3d:	dec    ebp
  411c3e:	pop    es
  411c3f:	add    al,al
  411c41:	int3   
  411c42:	inc    esp
	...
  411c57:	add    BYTE PTR [ecx+0x44cc],bh
  411c5d:	add    BYTE PTR [eax],al
  411c5f:	add    BYTE PTR [eax],al
  411c61:	dec    edi
  411c62:	add    DWORD PTR [eax],eax
  411c64:	push   0x411c
  411c69:	add    BYTE PTR [eax],al
  411c6b:	add    BYTE PTR [eax],al
  411c6d:	push   esi
  411c6e:	add    DWORD PTR [eax],eax
  411c70:	sbb    BYTE PTR [ecx+eax*2],0x0
  411c74:	add    BYTE PTR [eax],al
  411c76:	add    BYTE PTR [eax],al
  411c78:	add    BYTE PTR [ecx+eax*1+0x0],al
  411c7c:	ins    BYTE PTR es:[edi],dx
  411c7d:	int    0x44
  411c7f:	add    BYTE PTR [eax],al
  411c81:	add    BYTE PTR [eax],al
  411c83:	add    BYTE PTR [eax],al
  411c85:	inc    edx
  411c86:	adc    al,0x0
  411c88:	cmp    ch,cl
  411c8a:	inc    esp
	...
  411c93:	add    BYTE PTR [ebx],dh
  411c95:	int    0x44
	...
  411cb7:	add    al,bl
  411cb9:	sbb    al,0x41
	...
  411cd3:	add    BYTE PTR [edi],cl
  411cd5:	int    0x44
  411cd7:	add    BYTE PTR [eax],al
  411cd9:	add    BYTE PTR [eax],al
  411cdb:	add    BYTE PTR [eax],al
  411cdd:	inc    edx
  411cde:	adc    al,0x0
  411ce0:	and    ch,cl
  411ce2:	inc    esp
	...
  411ceb:	add    BYTE PTR [ebx],bl
  411ced:	int    0x44
	...
  411d2b:	add    BYTE PTR ds:0x44cd,dl
  411d31:	add    BYTE PTR [eax],al
  411d33:	add    BYTE PTR [eax],al
  411d35:	dec    esp
  411d36:	or     BYTE PTR [eax],al
  411d38:	popa   
  411d39:	int    0x44
	...
  411d53:	add    BYTE PTR [ecx-0x33],bl
  411d56:	inc    esp
  411d57:	add    BYTE PTR [eax],al
  411d59:	add    BYTE PTR [eax],al
  411d5b:	add    BYTE PTR [eax],al
  411d5d:	inc    edx
  411d5e:	adc    DWORD PTR [eax],eax
  411d60:	jg     0x411d2f
  411d62:	inc    esp
  411d63:	add    BYTE PTR [eax],al
  411d65:	add    BYTE PTR [eax],al
  411d67:	add    BYTE PTR [esp+ebx*1+0x41],dh
	...
  411d9f:	add    BYTE PTR [edi-0x33],ah
  411da2:	inc    esp
  411da3:	add    BYTE PTR [eax],al
  411da5:	add    BYTE PTR [eax],al
  411da7:	add    BYTE PTR [eax],al
  411da9:	push   edx
  411daa:	add    DWORD PTR [eax],eax
  411dac:	fcomp  QWORD PTR [esi]
  411dae:	inc    ecx
  411daf:	add    BYTE PTR [eax],al
  411db1:	add    BYTE PTR [eax],al
  411db3:	add    BYTE PTR [eax],al
  411db5:	inc    ecx
  411db6:	sbb    BYTE PTR [eax],al
  411db8:	outs   dx,DWORD PTR ds:[esi]
  411db9:	iret   
  411dba:	inc    esp
  411dbb:	add    BYTE PTR [edi+ebx*1+0x20200041],ch
  411dc2:	inc    ecx
  411dc3:	add    al,bl
  411dc5:	pop    ds
  411dc6:	inc    ecx
	...
  411de3:	add    BYTE PTR [edi+ebx*1],dh
  411de6:	inc    ecx
  411de7:	add    BYTE PTR [ebp-0x32],ah
  411dea:	inc    esp
  411deb:	add    al,ch
  411ded:	push   ds
  411dee:	inc    ecx
	...
  411df7:	add    ah,bh
  411df9:	int    0x44
  411dfb:	add    BYTE PTR [eax],al
  411dfd:	add    BYTE PTR [eax],al
  411dff:	add    al,cl
  411e01:	int    0x44
	...
  411e0b:	add    cl,al
  411e0d:	int    0x44
  411e0f:	add    BYTE PTR [eax],al
  411e11:	add    BYTE PTR [eax],al
  411e13:	add    BYTE PTR [eax],bl
  411e15:	push   ds
  411e16:	inc    ecx
  411e17:	add    BYTE PTR [eax],al
  411e19:	add    BYTE PTR [eax],al
  411e1b:	add    BYTE PTR [eax],al
  411e1d:	dec    ecx
  411e1e:	or     al,0x0
  411e20:	mov    ecx,0x44cd
	...
  411e49:	add    BYTE PTR [eax],al
  411e4b:	add    BYTE PTR [eax+0x1e],dl
  411e4e:	inc    ecx
  411e4f:	add    BYTE PTR [eax],al
  411e51:	add    BYTE PTR [eax],al
  411e53:	add    BYTE PTR [eax],al
  411e55:	inc    ebp
  411e56:	push   cs
  411e57:	add    BYTE PTR [ebp+ebx*1+0x41],ah
	...
  411e8a:	add    BYTE PTR [eax],al
  411e8c:	nop
  411e8d:	push   ds
  411e8e:	inc    ecx
  411e8f:	add    BYTE PTR [eax],al
  411e91:	add    BYTE PTR [eax],al
  411e93:	add    BYTE PTR [eax],al
  411e95:	inc    ecx
  411e96:	adc    DWORD PTR [eax],eax
  411e98:	cdq    
  411e99:	int    0x44
	...
  411ecb:	add    BYTE PTR [ebx+0x44cd],dl
  411ed1:	add    BYTE PTR [eax],al
  411ed3:	add    BYTE PTR [eax],al
  411ed5:	add    BYTE PTR [eax],al
  411ed7:	add    BYTE PTR [ebp+0x44cd],cl
  411edd:	add    BYTE PTR [eax],al
  411edf:	add    BYTE PTR [eax],al
  411ee1:	dec    esi
  411ee2:	add    DWORD PTR [eax],eax
  411ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ee5:	int    0x44
  411ee7:	add    BYTE PTR [eax],al
  411ee9:	add    BYTE PTR [eax],al
  411eeb:	add    BYTE PTR [eax],al
  411eed:	inc    esp
  411eee:	adc    DWORD PTR [eax],eax
  411ef0:	sbb    dh,cl
  411ef2:	inc    esp
	...
  411f2f:	add    BYTE PTR [edi],cl
  411f31:	into   
  411f32:	inc    esp
  411f33:	add    BYTE PTR [eax],al
  411f35:	add    BYTE PTR [eax],al
  411f37:	add    BYTE PTR [eax],al
  411f39:	push   ebx
  411f3a:	add    DWORD PTR [eax],eax
  411f3c:	inc    eax
  411f3d:	pop    ds
  411f3e:	inc    ecx
  411f3f:	add    BYTE PTR [eax],al
  411f41:	add    BYTE PTR [eax],al
  411f43:	add    BYTE PTR [eax],al
  411f45:	inc    ebp
  411f46:	add    DWORD PTR [eax],eax
  411f48:	ins    BYTE PTR es:[edi],dx
  411f49:	into   
  411f4a:	inc    esp
  411f4b:	add    BYTE PTR [eax],al
  411f4d:	add    BYTE PTR [eax],al
  411f4f:	add    BYTE PTR [eax],al
  411f51:	inc    esi
  411f52:	add    DWORD PTR [eax],eax
  411f54:	js     0x411f24
  411f56:	inc    esp
  411f57:	add    BYTE PTR [eax],al
  411f59:	add    BYTE PTR [eax],al
  411f5b:	add    BYTE PTR [eax],al
  411f5d:	inc    edx
  411f5e:	add    eax,DWORD PTR [eax]
  411f60:	add    edi,ecx
  411f62:	inc    esp
  411f63:	add    BYTE PTR [eax],al
  411f65:	add    BYTE PTR [eax],al
  411f67:	add    cl,bh
  411f69:	into   
  411f6a:	inc    esp
  411f6b:	add    BYTE PTR [eax],al
  411f6d:	add    BYTE PTR [eax],al
  411f6f:	add    BYTE PTR [eax],al
  411f71:	inc    esp
  411f72:	add    DWORD PTR [eax],eax
  411f74:	js     0x411f95
  411f76:	inc    ecx
  411f77:	add    BYTE PTR [eax],al
  411f79:	add    BYTE PTR [eax],al
  411f7b:	add    BYTE PTR [eax],al
  411f7d:	dec    esi
  411f7e:	add    DWORD PTR [eax],eax
  411f80:	or     bh,cl
  411f82:	inc    esp
  411f83:	add    BYTE PTR [eax],al
  411f85:	add    BYTE PTR [eax],al
  411f87:	add    BYTE PTR [eax],al
  411f89:	inc    ebp
  411f8a:	add    eax,0x44cf3300
	...
  411f9b:	add    BYTE PTR [eax+0x411f],ah
  411fa1:	add    BYTE PTR [eax],al
  411fa3:	add    BYTE PTR [eax],al
  411fa5:	inc    esi
  411fa6:	add    DWORD PTR [eax],eax
  411fa8:	and    bh,cl
  411faa:	inc    esp
  411fab:	add    BYTE PTR [eax],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR [eax],al
  411fb1:	push   eax
  411fb2:	or     DWORD PTR [eax],eax
  411fb4:	imul   ecx,edi,0x44
	...
  411fd2:	add    BYTE PTR [eax],al
  411fd4:	arpl   di,cx
  411fd6:	inc    esp
  411fd7:	add    BYTE PTR [eax],al
  411fd9:	add    BYTE PTR [eax],al
  411fdb:	add    BYTE PTR [eax],al
  411fdd:	dec    ecx
  411fde:	adc    BYTE PTR [eax],al
  411fe0:	push   ecx
  411fe1:	iret   
  411fe2:	inc    esp
	...
  41201b:	add    BYTE PTR [ebx-0x31],cl
  41201e:	inc    esp
  41201f:	add    BYTE PTR [eax],al
  412021:	add    BYTE PTR [eax],al
  412023:	add    BYTE PTR [eax],al
  412025:	dec    eax
  412026:	adc    DWORD PTR [eax],eax
  412028:	pop    ebp
  412029:	iret   
  41202a:	inc    esp
	...
  412067:	add    BYTE PTR [edi-0x31],dl
  41206a:	inc    esp
  41206b:	add    BYTE PTR [eax],al
  41206d:	add    BYTE PTR [eax],al
  41206f:	add    BYTE PTR [eax],al
  412071:	push   eax
  412072:	add    DWORD PTR [eax],eax
  412074:	sbb    BYTE PTR [ecx],ah
  412076:	inc    ecx
  412077:	add    BYTE PTR [eax],al
  412079:	add    BYTE PTR [eax],al
  41207b:	add    BYTE PTR [eax],al
  41207d:	inc    edx
  41207e:	pop    ss
  41207f:	add    BYTE PTR [edi+0x44d0],ch
  412085:	add    BYTE PTR [eax],al
  412087:	add    BYTE PTR [ecx-0x5cffbb30],ch
  41208d:	rol    BYTE PTR [eax+eax*1-0x63],1
  412091:	rol    BYTE PTR [eax+eax*1+0x0],1
  412095:	add    BYTE PTR [eax],al
  412097:	add    BYTE PTR [edi+0x2c0044d0],dl
  41209d:	rol    BYTE PTR [eax+eax*1+0x0],1
  4120a1:	add    BYTE PTR [eax],al
  4120a3:	add    BYTE PTR [eax],al
  4120a5:	add    BYTE PTR [eax],al
  4120a7:	add    BYTE PTR ds:0x44d0,ah
	...
  4120b5:	add    BYTE PTR [eax],al
  4120b7:	add    BYTE PTR [eax+eiz*1+0x41],ch
  4120bb:	add    BYTE PTR [ebx],dl
  4120bd:	rol    BYTE PTR [eax+eax*1-0x24],1
  4120c1:	and    BYTE PTR [ecx+0x0],al
  4120c4:	popf   
  4120c5:	iret   
  4120c6:	inc    esp
  4120c7:	add    BYTE PTR [edi-0x6effbb31],dl
  4120cd:	iret   
  4120ce:	inc    esp
  4120cf:	add    BYTE PTR [eax],al
  4120d1:	add    BYTE PTR [eax],al
  4120d3:	add    BYTE PTR [edi+ecx*8+0x44],bh
  4120d7:	add    BYTE PTR [ebp-0x31],dh
  4120da:	inc    esp
  4120db:	add    BYTE PTR [eax],al
  4120dd:	add    BYTE PTR [eax],al
  4120df:	add    BYTE PTR [eax],al
  4120e1:	xor    BYTE PTR [edx],cl
  4120e3:	add    BYTE PTR ds:0xc80044d0,cl
  4120e9:	iret   
  4120ea:	inc    esp
  4120eb:	add    cl,al
  4120ed:	iret   
  4120ee:	inc    esp
  4120ef:	add    BYTE PTR [ebx+0x44cf],bh
  4120f5:	add    BYTE PTR [eax],al
  4120f7:	add    BYTE PTR [eax],al
  4120f9:	add    BYTE PTR [eax],al
  4120fb:	add    BYTE PTR [ebp-0x50ffbb31],dh
  412101:	iret   
  412102:	inc    esp
  412103:	add    BYTE PTR [ecx-0x5cffbb31],ch
  412109:	iret   
  41210a:	inc    esp
  41210b:	add    BYTE PTR [eax],al
  41210d:	add    BYTE PTR [eax],al
  41210f:	add    BYTE PTR [eax],al
  412111:	inc    esp
  412112:	add    DWORD PTR [eax],eax
  412114:	mov    esp,0x44d0
  412119:	add    BYTE PTR [eax],al
  41211b:	add    BYTE PTR [eax],al
  41211d:	inc    esp
  41211e:	adc    BYTE PTR [eax],al
  412120:	pop    ds
  412121:	rol    BYTE PTR [eax+eax*1+0x0],1
	...
  412159:	add    BYTE PTR [eax],al
  41215b:	add    BYTE PTR [ecx],bl
  41215d:	rol    BYTE PTR [eax+eax*1+0x0],1
  412161:	add    BYTE PTR [eax],al
  412163:	add    BYTE PTR [eax],al
  412165:	inc    esp
  412166:	adc    BYTE PTR [eax],al
  412168:	jg     0x41213a
  41216a:	inc    esp
	...
  4121a3:	add    BYTE PTR [ecx-0x30],bh
  4121a6:	inc    esp
  4121a7:	add    BYTE PTR [eax],al
  4121a9:	add    BYTE PTR [eax],al
  4121ab:	add    BYTE PTR [eax],al
  4121ad:	inc    esp
  4121ae:	adc    BYTE PTR [eax],al
  4121b0:	mov    edx,eax
  4121b2:	inc    esp
	...
  4121eb:	add    BYTE PTR [ebp+0x44d0],al
  4121f1:	add    BYTE PTR [eax],al
  4121f3:	add    BYTE PTR [eax],al
  4121f5:	inc    ecx
  4121f6:	sbb    BYTE PTR [eax],al
  4121f8:	and    BYTE PTR [eax],dh
  4121fa:	inc    ecx
  4121fb:	add    BYTE PTR [edi-0x2b],dh
  4121fe:	inc    esp
  4121ff:	add    BYTE PTR [eax],al
  412201:	add    BYTE PTR [eax],al
  412203:	add    BYTE PTR [edi+ebp*1],dh
  412206:	inc    ecx
	...
  412213:	add    BYTE PTR [edi-0x2b],bl
  412216:	inc    esp
	...
  412223:	add    al,dh
  412225:	aam    0x44
  412227:	add    BYTE PTR [eax],dh
  412229:	sub    BYTE PTR [ecx+0x0],al
  41222c:	add    BYTE PTR [eax],al
  41222e:	add    BYTE PTR [eax],al
  412230:	mov    al,ds:0xb3004127
  412235:	rol    DWORD PTR [eax+eax*1-0x53],1
  412239:	rol    DWORD PTR [eax+eax*1+0x28],1
  41223d:	daa    
  41223e:	inc    ecx
  41223f:	add    BYTE PTR [edi-0x2f],dl
  412242:	inc    esp
	...
  41224b:	add    BYTE PTR [eax+0x22],bl
  41224e:	inc    ecx
  41224f:	add    BYTE PTR [ecx+eiz*1],cl
  412252:	inc    ecx
  412253:	add    BYTE PTR [ebp+0x44d0],dh
  412259:	add    BYTE PTR [eax],al
  41225b:	add    BYTE PTR [eax],al
  41225d:	push   esp
  41225e:	add    DWORD PTR [eax],eax
  412260:	jo     0x412284
  412262:	inc    ecx
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [eax],al
  412269:	xor    al,BYTE PTR [ecx]
  41226b:	add    ah,dl
  41226d:	and    al,BYTE PTR [ecx+0x0]
  412270:	add    BYTE PTR [eax],al
  412272:	add    BYTE PTR [eax],al
  412274:	add    BYTE PTR [ecx+edx*1+0x0],al
  412278:	mov    al,ds:0x4126
	...
  4122a5:	add    BYTE PTR [eax],al
  4122a7:	add    BYTE PTR [eax],ah
  4122a9:	and    eax,0x41
  4122ae:	add    BYTE PTR [eax],al
  4122b0:	add    BYTE PTR [eax],al
  4122b2:	add    BYTE PTR [eax],al
  4122b4:	call   0xbc4163dc
  4122b9:	and    al,BYTE PTR [ecx+0x0]
  4122bc:	add    BYTE PTR [eax],al
  4122be:	add    BYTE PTR [eax],al
  4122c0:	add    BYTE PTR [eax+0x4],dl
  4122c3:	add    BYTE PTR [eax+0x23],bl
  4122c6:	inc    ecx
	...
  4122cf:	add    BYTE PTR [eax],dl
  4122d1:	and    eax,DWORD PTR [ecx+0x0]
  4122d4:	add    BYTE PTR [eax],al
  4122d6:	add    BYTE PTR [eax],al
  4122d8:	add    BYTE PTR [ebp+ecx*1+0x0],al
  4122dc:	in     eax,0xd0
  4122de:	inc    esp
	...
  41230b:	add    bh,bl
  41230d:	rol    BYTE PTR [eax+eax*1+0x0],1
  412311:	add    BYTE PTR [eax],al
  412313:	add    BYTE PTR [eax],al
  412315:	inc    esp
  412316:	adc    BYTE PTR [eax],al
  412318:	xlat   BYTE PTR ds:[ebx]
  412319:	rol    BYTE PTR [eax+eax*1+0x0],1
	...
  412351:	add    BYTE PTR [eax],al
  412353:	add    bh,cl
  412355:	rol    BYTE PTR [eax+eax*1+0x0],1
  412359:	add    BYTE PTR [eax],al
  41235b:	add    BYTE PTR [eax],al
  41235d:	inc    esp
  41235e:	adc    BYTE PTR [eax],al
  412360:	mov    al,ds:0x4123
	...
  412399:	add    BYTE PTR [eax],al
  41239b:	add    BYTE PTR [edx+eiz*1+0x41],ah
  41239f:	add    BYTE PTR [eax],al
  4123a1:	add    BYTE PTR [eax],al
  4123a3:	add    BYTE PTR [eax],al
  4123a5:	xor    al,BYTE PTR [ecx]
  4123a7:	add    BYTE PTR [ebx+eiz*1+0x41],ch
  4123ae:	add    BYTE PTR [eax],al
  4123b0:	add    BYTE PTR [ebp+ecx*1+0x0],al
  4123b4:	icebp  
  4123b5:	rol    BYTE PTR [eax+eax*1+0x0],1
	...
  4123e1:	add    BYTE PTR [eax],al
  4123e3:	add    bl,ch
  4123e5:	rol    BYTE PTR [eax+eax*1+0x0],1
  4123e9:	add    BYTE PTR [eax],al
  4123eb:	add    BYTE PTR [eax],al
  4123ed:	inc    esp
  4123ee:	adc    BYTE PTR [eax],al
  4123f0:	enter  0x4124,0x0
	...
  412404:	push   0x4124
	...
  412429:	add    BYTE PTR [eax],al
  41242b:	add    BYTE PTR [eax],dh
  41242d:	and    al,0x41
  41242f:	add    BYTE PTR [eax],al
  412431:	add    BYTE PTR [eax],al
  412433:	add    BYTE PTR [eax],al
  412435:	xor    al,BYTE PTR [ecx]
  412437:	add    BYTE PTR [esp],bh
  41243a:	inc    ecx
  41243b:	add    BYTE PTR [eax],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [eax],al
  412441:	push   ebx
  412442:	add    DWORD PTR [eax],eax
  412444:	dec    eax
  412445:	and    al,0x41
  412447:	add    BYTE PTR [eax],al
  412449:	add    BYTE PTR [eax],al
  41244b:	add    BYTE PTR [eax],al
  41244d:	inc    esp
  41244e:	push   es
  41244f:	add    ch,bh
  412451:	rol    BYTE PTR [eax+eax*1+0x0],1
	...
  412461:	add    BYTE PTR [eax],al
  412463:	add    bh,dh
  412465:	rol    BYTE PTR [eax+eax*1+0x0],1
  412469:	add    BYTE PTR [eax],al
  41246b:	add    BYTE PTR [eax],al
  41246d:	xor    al,BYTE PTR [ecx]
  41246f:	add    BYTE PTR [esp+0x41],dh
  412473:	add    BYTE PTR [eax],al
  412475:	add    BYTE PTR [eax],al
  412477:	add    BYTE PTR [eax],al
  412479:	push   ebx
  41247a:	add    DWORD PTR [eax],eax
  41247c:	and    BYTE PTR [ecx+eax*2],0x0
  412480:	add    BYTE PTR [eax],al
  412482:	add    BYTE PTR [eax],al
  412484:	add    BYTE PTR [eax+edx*1+0x0],al
  412488:	or     ecx,edx
  41248a:	inc    esp
	...
  4124c3:	add    BYTE PTR [ebx],al
  4124c5:	rol    DWORD PTR [eax+eax*1+0x0],1
  4124c9:	add    BYTE PTR [eax],al
  4124cb:	add    BYTE PTR [eax],al
  4124cd:	xor    al,BYTE PTR [ecx]
  4124cf:	add    ah,dl
  4124d1:	and    al,0x41
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax],al
  4124d9:	push   ebx
  4124da:	add    DWORD PTR [eax],eax
  4124dc:	loopne 0x412502
  4124de:	inc    ecx
  4124df:	add    BYTE PTR [eax],al
  4124e1:	add    BYTE PTR [eax],al
  4124e3:	add    BYTE PTR [eax],al
  4124e5:	dec    ecx
  4124e6:	or     eax,DWORD PTR [eax]
  4124e8:	adc    eax,0x44d1
	...
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [edi],cl
  412511:	rol    DWORD PTR [eax+eax*1+0x0],1
  412515:	add    BYTE PTR [eax],al
  412517:	add    BYTE PTR [eax],al
  412519:	xor    al,BYTE PTR [ecx]
  41251b:	add    BYTE PTR [eax+0x25],ch
  41251e:	inc    ecx
  41251f:	add    BYTE PTR [eax],al
  412521:	add    BYTE PTR [eax],al
  412523:	add    BYTE PTR [eax],al
  412525:	inc    esp
  412526:	adc    BYTE PTR [eax],al
  412528:	fsub   QWORD PTR ds:0x41
	...
  41253a:	add    BYTE PTR [eax],al
  41253c:	les    esp,FWORD PTR ds:0x41
	...
  412562:	add    BYTE PTR [eax],al
  412564:	adc    al,0x25
  412566:	inc    ecx
  412567:	add    BYTE PTR [eax],al
  412569:	add    BYTE PTR [eax],al
  41256b:	add    BYTE PTR [eax],al
  41256d:	inc    esp
  41256e:	or     eax,0x44d12700
	...
  41259f:	add    BYTE PTR [ebp+eiz*1+0x41],ah
  4125a6:	add    BYTE PTR [eax],al
  4125a8:	add    BYTE PTR [esi+eax*1+0x0],al
  4125ac:	and    ecx,edx
  4125ae:	inc    esp
	...
  4125bf:	add    BYTE PTR [ebx],bl
  4125c1:	rol    DWORD PTR [eax+eax*1+0x0],1
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [eax],al
  4125c9:	xor    al,BYTE PTR [ecx]
  4125cb:	add    al,dl
  4125cd:	and    eax,0x41
  4125d2:	add    BYTE PTR [eax],al
  4125d4:	add    BYTE PTR [eax+0x1],dl
  4125d7:	add    al,ch
  4125d9:	and    eax,0x41
  4125de:	add    BYTE PTR [eax],al
  4125e0:	add    BYTE PTR [edx],dh
  4125e2:	add    DWORD PTR [eax],eax
  4125e4:	xor    BYTE PTR [esi],ah
  4125e6:	inc    ecx
  4125e7:	add    BYTE PTR [eax],al
  4125e9:	add    BYTE PTR [eax],al
  4125eb:	add    BYTE PTR [eax],al
  4125ed:	inc    esp
  4125ee:	adc    BYTE PTR [eax],al
  4125f0:	xor    edx,ecx
  4125f2:	inc    esp
	...
  41262b:	add    BYTE PTR ds:0x44d1,ch
  412631:	add    BYTE PTR [eax],al
  412633:	add    BYTE PTR [eax],al
  412635:	inc    esp
  412636:	or     eax,0x44d14500
	...
  412667:	add    BYTE PTR [esi+eiz*1+0x41],ch
  41266b:	add    BYTE PTR [eax],al
  41266d:	add    BYTE PTR [eax],al
  41266f:	add    BYTE PTR [eax],al
  412671:	dec    ecx
  412672:	or     eax,DWORD PTR [eax]
  412674:	aas    
  412675:	rol    DWORD PTR [eax+eax*1+0x0],1
	...
  412699:	add    BYTE PTR [eax],al
  41269b:	add    BYTE PTR [ecx],bh
  41269d:	rol    DWORD PTR [eax+eax*1+0x0],1
  4126a1:	add    BYTE PTR [eax],al
  4126a3:	add    BYTE PTR [eax],al
  4126a5:	push   ecx
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	lods   al,BYTE PTR ds:[esi]
  4126a9:	es inc ecx
  4126ab:	add    BYTE PTR [eax],al
  4126ad:	add    BYTE PTR [eax],al
  4126af:	add    BYTE PTR [eax],al
  4126b1:	xor    al,BYTE PTR [ecx]
  4126b3:	add    BYTE PTR [eax+0x4126],bh
  4126b9:	add    BYTE PTR [eax],al
  4126bb:	add    BYTE PTR [eax],al
  4126bd:	push   eax
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	loopne 0x4126e8
  4126c2:	inc    ecx
  4126c3:	add    BYTE PTR [eax],al
  4126c5:	add    BYTE PTR [eax],al
  4126c7:	add    BYTE PTR [eax],al
  4126c9:	dec    ecx
  4126ca:	add    eax,0x4127d000
	...
  4126db:	add    BYTE PTR [ecx+edx*8+0x44],bh
  4126e2:	add    BYTE PTR [eax],al
  4126e4:	add    BYTE PTR [eax+edx*1+0x0],al
  4126e8:	push   ecx
  4126e9:	rol    DWORD PTR [eax+eax*1+0x0],1
	...
  412721:	add    BYTE PTR [eax],al
  412723:	add    BYTE PTR [ebx-0x2f],cl
  412726:	inc    esp
  412727:	add    BYTE PTR [eax],al
  412729:	add    BYTE PTR [eax],al
  41272b:	add    BYTE PTR [eax],al
  41272d:	xor    BYTE PTR [eax+eax*1],dl
  412730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412731:	rol    DWORD PTR [eax+eax*1-0x80],1
  412735:	daa    
  412736:	inc    ecx
  412737:	add    BYTE PTR [ebp-0x2f],bh
  41273a:	inc    esp
  41273b:	add    BYTE PTR [edi-0x2f],dh
  41273e:	inc    esp
  41273f:	add    BYTE PTR [ecx-0x2f],dh
  412742:	inc    esp
	...
  41274f:	add    BYTE PTR [ebx-0x2f],ch
  412752:	inc    esp
  412753:	add    BYTE PTR [ebp-0x2f],ah
  412756:	inc    esp
	...
  41277b:	add    BYTE PTR [ebp-0x2f],bl
  41277e:	inc    esp
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [eax],al
  412785:	xor    BYTE PTR [esi],al
  412787:	add    BYTE PTR [ecx-0x64ffbb2f],ah
  41278d:	rol    DWORD PTR [eax+eax*1-0x6b],1
  412791:	rol    DWORD PTR [eax+eax*1-0x71],1
  412795:	rol    DWORD PTR [eax+eax*1-0x77],1
  412799:	rol    DWORD PTR [eax+eax*1-0x7d],1
  41279d:	rol    DWORD PTR [eax+eax*1+0x0],1
  4127a1:	add    BYTE PTR [eax],al
  4127a3:	add    BYTE PTR [eax],al
  4127a5:	inc    esp
  4127a6:	or     al,BYTE PTR [eax]
  4127a8:	fst    st(1)
  4127aa:	inc    esp
	...
  4127cb:	add    ah,al
  4127cd:	es inc ecx
  4127cf:	add    BYTE PTR [eax],al
  4127d1:	add    BYTE PTR [eax],al
  4127d3:	add    BYTE PTR [eax],al
  4127d5:	push   ebx
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	call   0x416904
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [eax],al
  4127e1:	inc    ebx
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	jo     0x41280e
  4127e6:	inc    ecx
  4127e7:	add    BYTE PTR [eax],al
  4127e9:	add    BYTE PTR [eax],al
  4127eb:	add    BYTE PTR [eax],al
  4127ed:	inc    esp
  4127ee:	adc    BYTE PTR [eax],al
  4127f0:	xlat   BYTE PTR ds:[ebx]
  4127f1:	rol    DWORD PTR [eax+eax*1+0x0],1
	...
  412829:	add    BYTE PTR [eax],al
  41282b:	add    cl,dl
  41282d:	rol    DWORD PTR [eax+eax*1+0x0],1
  412831:	add    BYTE PTR [eax],al
  412833:	add    BYTE PTR [eax],al
  412835:	inc    ebx
  412836:	push   cs
  412837:	add    bh,bl
  412839:	aam    0x44
	...
  412867:	add    BYTE PTR [eax],ch
  412869:	das    
  41286a:	inc    ecx
  41286b:	add    al,ch
  41286d:	rol    DWORD PTR [eax+eax*1+0x0],1
  412871:	add    BYTE PTR [eax],al
  412873:	add    BYTE PTR [eax],al
  412875:	dec    eax
  412876:	add    DWORD PTR [eax],eax
  412878:	jl     0x4128a2
  41287a:	inc    ecx
  41287b:	add    BYTE PTR [eax],al
  41287d:	add    BYTE PTR [eax],al
  41287f:	add    BYTE PTR [eax],al
  412881:	inc    edi
  412882:	add    DWORD PTR [eax],eax
  412884:	inc    eax
  412885:	rol    BYTE PTR [eax+eax*1+0x0],cl
  412889:	add    BYTE PTR [eax],al
  41288b:	add    BYTE PTR [eax],al
  41288d:	dec    esi
  41288e:	add    DWORD PTR [eax],eax
  412890:	xchg   esp,eax
  412891:	sub    BYTE PTR [ecx+0x0],al
  412894:	add    BYTE PTR [eax],al
  412896:	add    BYTE PTR [eax],al
  412898:	add    BYTE PTR [edi+0x1],cl
  41289b:	add    BYTE PTR [eax+0x4128],ah
  4128a1:	add    BYTE PTR [eax],al
  4128a3:	add    BYTE PTR [eax],al
  4128a5:	push   edx
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	lods   al,BYTE PTR ds:[esi]
  4128a9:	sub    BYTE PTR [ecx+0x0],al
  4128ac:	add    BYTE PTR [eax],al
  4128ae:	add    BYTE PTR [eax],al
  4128b0:	add    BYTE PTR [ecx+eax*1+0x0],al
  4128b4:	mov    eax,0x4128
  4128b9:	add    BYTE PTR [eax],al
  4128bb:	add    BYTE PTR [eax],al
  4128bd:	push   eax
  4128be:	add    al,0x0
  4128c0:	sbb    BYTE PTR [ecx],ch
  4128c2:	inc    ecx
	...
  4128cb:	add    al,dl
  4128cd:	sub    BYTE PTR [ecx+0x0],al
  4128d0:	add    BYTE PTR [eax],al
  4128d2:	add    BYTE PTR [eax],al
  4128d4:	add    BYTE PTR [eax+edx*1+0x0],al
  4128d8:	ja     0x4128ac
  4128da:	inc    esp
	...
  412913:	add    BYTE PTR [ecx-0x2e],dh
  412916:	inc    esp
  412917:	add    BYTE PTR [eax],al
  412919:	add    BYTE PTR [eax],al
  41291b:	add    BYTE PTR [eax],al
  41291d:	inc    esp
  41291e:	adc    BYTE PTR [eax],al
  412920:	adc    edx,0x44
	...
  41295b:	add    BYTE PTR [ebp-0x2e],bh
  41295e:	inc    esp
  41295f:	add    BYTE PTR [eax],al
  412961:	add    BYTE PTR [eax],al
  412963:	add    BYTE PTR [eax],al
  412965:	inc    esp
  412966:	adc    BYTE PTR [eax],al
  412968:	or     eax,0x44d3
	...
  4129a1:	add    BYTE PTR [eax],al
  4129a3:	add    BYTE PTR [edi],al
  4129a5:	rol    DWORD PTR [eax+eax*1+0x0],cl
  4129a9:	add    BYTE PTR [eax],al
  4129ab:	add    BYTE PTR [eax],al
  4129ad:	push   edx
  4129ae:	add    DWORD PTR [eax],eax
  4129b0:	mov    ah,0x29
  4129b2:	inc    ecx
  4129b3:	add    BYTE PTR [eax],al
  4129b5:	add    BYTE PTR [eax],al
  4129b7:	add    BYTE PTR [eax],al
  4129b9:	inc    esp
  4129ba:	add    DWORD PTR [eax],eax
  4129bc:	shr    BYTE PTR [ecx],0x41
  4129bf:	add    BYTE PTR [eax],al
  4129c1:	add    BYTE PTR [eax],al
  4129c3:	add    BYTE PTR [eax],al
  4129c5:	push   eax
  4129c6:	add    al,0x0
  4129c8:	and    BYTE PTR [edx],ch
  4129ca:	inc    ecx
	...
  4129d3:	add    al,bl
  4129d5:	sub    DWORD PTR [ecx+0x0],eax
  4129d8:	add    BYTE PTR [eax],al
  4129da:	add    BYTE PTR [eax],al
  4129dc:	add    BYTE PTR [eax+edx*1+0x0],al
  4129e0:	sbb    ebx,edx
  4129e2:	inc    esp
	...
  412a1b:	add    BYTE PTR [ebx],dl
  412a1d:	rol    DWORD PTR [eax+eax*1+0x0],cl
  412a21:	add    BYTE PTR [eax],al
  412a23:	add    BYTE PTR [eax],al
  412a25:	inc    esp
  412a26:	adc    BYTE PTR [eax],al
  412a28:	and    eax,0x44d3
	...
  412a61:	add    BYTE PTR [eax],al
  412a63:	add    BYTE PTR [edi],bl
  412a65:	rol    DWORD PTR [eax+eax*1+0x0],cl
  412a69:	add    BYTE PTR [eax],al
  412a6b:	add    BYTE PTR [eax],al
  412a6d:	inc    ebp
  412a6e:	or     BYTE PTR [eax],al
  412a70:	sub    BYTE PTR [ecx+eax*2],ch
	...
  412a8b:	add    BYTE PTR [eax+0x412a],dl
  412a91:	add    BYTE PTR [eax],al
  412a93:	add    BYTE PTR [eax],al
  412a95:	inc    ebp
  412a96:	adc    BYTE PTR [eax],al
  412a98:	sub    BYTE PTR [ebx],0x41
	...
  412ad3:	add    al,bl
  412ad5:	sub    al,BYTE PTR [ecx+0x0]
  412ad8:	add    BYTE PTR [eax],al
  412ada:	add    BYTE PTR [eax],al
  412adc:	add    BYTE PTR [eax+0x4],dl
  412adf:	add    BYTE PTR [eax],bh
  412ae1:	sub    eax,DWORD PTR [ecx+0x0]
	...
  412aec:	lock sub al,BYTE PTR [ecx+0x0]
  412af0:	add    BYTE PTR [eax],al
  412af2:	add    BYTE PTR [eax],al
  412af4:	add    BYTE PTR [eax+edx*1+0x0],al
  412af8:	xor    ebx,edx
  412afa:	inc    esp
	...
  412b33:	add    BYTE PTR [ebx],ch
  412b35:	rol    DWORD PTR [eax+eax*1+0x0],cl
  412b39:	add    BYTE PTR [eax],al
  412b3b:	add    BYTE PTR [eax],al
  412b3d:	inc    esp
  412b3e:	adc    BYTE PTR [eax],al
  412b40:	cmp    eax,0x44d3
	...
  412b79:	add    BYTE PTR [eax],al
  412b7b:	add    BYTE PTR [edi],dh
  412b7d:	rol    DWORD PTR [eax+eax*1+0x0],cl
  412b81:	add    BYTE PTR [eax],al
  412b83:	add    BYTE PTR [eax],al
  412b85:	push   eax
  412b86:	add    al,0x0
  412b88:	loopne 0x412bb5
  412b8a:	inc    ecx
	...
  412b93:	add    BYTE PTR [eax+0x412b],bl
  412b99:	add    BYTE PTR [eax],al
  412b9b:	add    BYTE PTR [eax],al
  412b9d:	inc    esp
  412b9e:	adc    BYTE PTR [eax],al
  412ba0:	dec    ecx
  412ba1:	rol    DWORD PTR [eax+eax*1+0x0],cl
	...
  412bd9:	add    BYTE PTR [eax],al
  412bdb:	add    BYTE PTR [ebx-0x2d],al
  412bde:	inc    esp
  412bdf:	add    BYTE PTR [eax],al
  412be1:	add    BYTE PTR [eax],al
  412be3:	add    BYTE PTR [eax],al
  412be5:	inc    esp
  412be6:	adc    BYTE PTR [eax],al
  412be8:	push   ebp
  412be9:	rol    DWORD PTR [eax+eax*1+0x0],cl
	...
  412c21:	add    BYTE PTR [eax],al
  412c23:	add    BYTE PTR [edi-0x2d],cl
  412c26:	inc    esp
  412c27:	add    BYTE PTR [eax],al
  412c29:	add    BYTE PTR [eax],al
  412c2b:	add    BYTE PTR [eax],al
  412c2d:	push   ecx
  412c2e:	add    DWORD PTR [eax],eax
  412c30:	xor    al,0x2c
  412c32:	inc    ecx
  412c33:	add    BYTE PTR [eax],al
  412c35:	add    BYTE PTR [eax],al
  412c37:	add    BYTE PTR [eax],al
  412c39:	push   eax
  412c3a:	add    al,0x0
  412c3c:	mov    al,ds:0x412c
  412c41:	add    BYTE PTR [eax],al
  412c43:	add    BYTE PTR [eax],al
  412c45:	add    BYTE PTR [eax],al
  412c47:	add    BYTE PTR [eax+0x2c],bl
  412c4a:	inc    ecx
  412c4b:	add    BYTE PTR [eax],al
  412c4d:	add    BYTE PTR [eax],al
  412c4f:	add    BYTE PTR [eax],al
  412c51:	push   ecx
  412c52:	add    DWORD PTR [eax],eax
  412c54:	sub    BYTE PTR [esi],0x41
  412c57:	add    BYTE PTR [eax],al
  412c59:	add    BYTE PTR [eax],al
  412c5b:	add    BYTE PTR [eax],al
  412c5d:	inc    esp
  412c5e:	adc    BYTE PTR [eax],al
  412c60:	popa   
  412c61:	rol    DWORD PTR [eax+eax*1+0x0],cl
	...
  412c99:	add    BYTE PTR [eax],al
  412c9b:	add    BYTE PTR [ebx-0x2d],bl
  412c9e:	inc    esp
  412c9f:	add    BYTE PTR [eax],al
  412ca1:	add    BYTE PTR [eax],al
  412ca3:	add    BYTE PTR [eax],al
  412ca5:	inc    esp
  412ca6:	adc    BYTE PTR [eax],al
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	rol    DWORD PTR [eax+eax*1+0x0],cl
	...
  412ce1:	add    BYTE PTR [eax],al
  412ce3:	add    BYTE PTR [edi-0x2d],ah
  412ce6:	inc    esp
  412ce7:	add    BYTE PTR [eax],al
  412ce9:	add    BYTE PTR [eax],al
  412ceb:	add    BYTE PTR [eax],al
  412ced:	inc    ebp
  412cee:	adc    BYTE PTR [eax],al
  412cf0:	fsubr  DWORD PTR ds:0x41
	...
  412d2a:	add    BYTE PTR [eax],al
  412d2c:	xor    BYTE PTR ds:0x41,ch
  412d32:	add    BYTE PTR [eax],al
  412d34:	add    BYTE PTR [eax+0x4],dl
  412d37:	add    BYTE PTR [eax+0x412d],dl
  412d3d:	add    BYTE PTR [eax],al
  412d3f:	add    BYTE PTR [eax],al
  412d41:	add    BYTE PTR [eax],al
  412d43:	add    BYTE PTR [eax+0x2d],cl
  412d46:	inc    ecx
  412d47:	add    BYTE PTR [eax],al
  412d49:	add    BYTE PTR [eax],al
  412d4b:	add    BYTE PTR [eax],al
  412d4d:	inc    esp
  412d4e:	adc    BYTE PTR [eax],al
  412d50:	jns    0x412d25
  412d52:	inc    esp
	...
  412d8b:	add    BYTE PTR [ebx-0x2d],dh
  412d8e:	inc    esp
  412d8f:	add    BYTE PTR [eax],al
  412d91:	add    BYTE PTR [eax],al
  412d93:	add    BYTE PTR [eax],al
  412d95:	inc    esp
  412d96:	adc    BYTE PTR [eax],al
  412d98:	test   ebx,edx
  412d9a:	inc    esp
	...
  412dd3:	add    BYTE PTR [edi-0x2d],bh
  412dd6:	inc    esp
  412dd7:	add    BYTE PTR [eax],al
  412dd9:	add    BYTE PTR [eax],al
  412ddb:	add    BYTE PTR [eax],al
  412ddd:	push   eax
  412dde:	add    al,0x0
  412de0:	cmp    BYTE PTR [esi],ch
  412de2:	inc    ecx
	...
  412deb:	add    al,dh
  412ded:	sub    eax,0x41
  412df2:	add    BYTE PTR [eax],al
  412df4:	add    BYTE PTR [eax+edx*1+0x0],al
  412df8:	xchg   ecx,eax
  412df9:	rol    DWORD PTR [eax+eax*1+0x0],cl
	...
  412e31:	add    BYTE PTR [eax],al
  412e33:	add    BYTE PTR [ebx+0x44d3],cl
  412e39:	add    BYTE PTR [eax],al
  412e3b:	add    BYTE PTR [eax],al
  412e3d:	inc    esp
  412e3e:	adc    BYTE PTR [eax],al
  412e40:	popf   
  412e41:	rol    DWORD PTR [eax+eax*1+0x0],cl
	...
  412e79:	add    BYTE PTR [eax],al
  412e7b:	add    BYTE PTR [edi+0x44d3],dl
  412e81:	add    BYTE PTR [eax],al
  412e83:	add    BYTE PTR [eax],al
  412e85:	push   eax
  412e86:	add    al,0x0
  412e88:	loopne 0x412eb8
  412e8a:	inc    ecx
	...
  412e93:	add    BYTE PTR [eax+0x412e],bl
  412e99:	add    BYTE PTR [eax],al
  412e9b:	add    BYTE PTR [eax],al
  412e9d:	inc    esp
  412e9e:	adc    BYTE PTR [eax],al
  412ea0:	test   eax,0x44d3
	...
  412ed9:	add    BYTE PTR [eax],al
  412edb:	add    BYTE PTR [ebx+0x44d3],ah
  412ee1:	add    BYTE PTR [eax],al
  412ee3:	add    BYTE PTR [eax],al
  412ee5:	inc    esp
  412ee6:	adc    BYTE PTR [eax],al
  412ee8:	mov    ch,0xd3
  412eea:	inc    esp
	...
  412f23:	add    BYTE PTR [edi+0x44d3],ch
  412f29:	add    BYTE PTR [eax],al
  412f2b:	add    BYTE PTR [eax],al
  412f2d:	push   esi
  412f2e:	add    DWORD PTR [eax],eax
  412f30:	inc    eax
  412f31:	das    
  412f32:	inc    ecx
  412f33:	add    BYTE PTR [eax],al
  412f35:	add    BYTE PTR [eax],al
  412f37:	add    BYTE PTR [eax],al
  412f39:	push   ecx
  412f3a:	add    DWORD PTR [eax],eax
  412f3c:	fs aad 0x44
  412f3f:	add    BYTE PTR [eax],al
  412f41:	add    BYTE PTR [eax],al
  412f43:	add    BYTE PTR [eax],al
  412f45:	inc    ecx
  412f46:	sbb    al,BYTE PTR [eax]
  412f48:	int3   
  412f49:	aam    0x44
  412f4b:	add    BYTE PTR [eax-0x4effbb2c],bh
  412f51:	aam    0x44
  412f53:	add    BYTE PTR [eax],al
  412f55:	add    BYTE PTR [eax],al
  412f57:	add    BYTE PTR [ebx+0x44d4],ch
  412f5d:	add    BYTE PTR [eax],al
  412f5f:	add    BYTE PTR [eax+0x44d4],bl
	...
  412f71:	add    BYTE PTR [eax],al
  412f73:	add    BYTE PTR [esp+edx*8+0x44],al
  412f7a:	add    BYTE PTR [eax],al
  412f7c:	mov    al,0x2f
  412f7e:	inc    ecx
  412f7f:	add    BYTE PTR [ecx],cl
  412f81:	aam    0x44
  412f83:	add    al,cl
  412f85:	rol    DWORD PTR [eax+eax*1+0x0],cl
  412f89:	add    BYTE PTR [eax],al
  412f8b:	add    BYTE PTR [eax],al
  412f8d:	add    BYTE PTR [eax],al
  412f8f:	add    cl,al
  412f91:	rol    DWORD PTR [eax+eax*1+0x0],cl
	...
  412fa9:	add    BYTE PTR [eax],al
  412fab:	add    BYTE PTR [ebx+0x44d3],bh
  412fb1:	add    BYTE PTR [eax],al
  412fb3:	add    BYTE PTR [eax],al
  412fb5:	inc    ecx
  412fb6:	sbb    al,BYTE PTR [eax]
  412fb8:	jo     0x412f8e
  412fba:	inc    esp
  412fbb:	add    BYTE PTR [esp+edx*8+0x44],bl
  412fbf:	add    BYTE PTR [ebp-0x2c],dl
  412fc2:	inc    esp
  412fc3:	add    BYTE PTR [eax],al
  412fc5:	add    BYTE PTR [eax],al
  412fc7:	add    BYTE PTR [edi-0x2c],cl
  412fca:	inc    esp
  412fcb:	add    BYTE PTR [eax],al
  412fcd:	add    BYTE PTR [eax],al
  412fcf:	add    BYTE PTR [esp+edx*8],bh
  412fd2:	inc    esp
	...
  412fe3:	add    BYTE PTR [eax],ch
  412fe5:	aam    0x44
	...
  412fef:	add    BYTE PTR [ecx],ah
  412ff1:	aam    0x44
  412ff3:	add    BYTE PTR [ebx],bl
  412ff5:	aam    0x44
	...
  412fff:	add    BYTE PTR ds:0x44d4,dl
	...
  413019:	add    BYTE PTR [eax],al
  41301b:	add    BYTE PTR [edi],cl
  41301d:	aam    0x44
  41301f:	add    BYTE PTR [eax],al
  413021:	add    BYTE PTR [eax],al
  413023:	add    BYTE PTR [eax],al
  413025:	dec    esp
  413026:	or     DWORD PTR [eax],eax
  413028:	test   ebp,edx
  41302a:	inc    esp
	...
  413047:	add    BYTE PTR [ebp-0x2b],bh
  41304a:	inc    esp
  41304b:	add    BYTE PTR [eax],al
  41304d:	add    BYTE PTR [eax],al
  41304f:	add    BYTE PTR [eax],al
  413051:	inc    esi
  413052:	or     eax,0x44d69700
	...
  41305f:	add    BYTE PTR [esi+edx*8+0x44],al
	...
  41306e:	add    BYTE PTR [eax],al
  413070:	jnp    0x413048
  413072:	inc    esp
	...
  413083:	add    BYTE PTR [ebp-0x2a],dh
  413086:	inc    esp
  413087:	add    BYTE PTR [eax],al
  413089:	add    BYTE PTR [eax],al
  41308b:	add    BYTE PTR [eax],al
  41308d:	inc    ebp
  41308e:	push   ss
  41308f:	add    ch,ah
  413091:	(bad)  
  413092:	inc    esp
	...
  41309b:	add    bh,bl
  41309d:	(bad)  
  41309e:	inc    esp
	...
  4130ab:	add    BYTE PTR [eax],ch
  4130ad:	(bad)  
  4130ae:	inc    esp
	...
  4130bb:	add    BYTE PTR [esi+edx*8],dl
  4130be:	inc    esp
	...
  4130c7:	add    al,ch
  4130c9:	xor    BYTE PTR [ecx+0x0],al
  4130cc:	mov    al,ds:0x44d5
	...
  4130d9:	add    BYTE PTR [eax],al
  4130db:	add    BYTE PTR [ebx-0x6cffbb2b],bl
  4130e1:	aad    0x44
  4130e3:	add    BYTE PTR [ebx+0x44d5],cl
  4130e9:	add    BYTE PTR [eax],al
  4130eb:	add    BYTE PTR [eax],al
  4130ed:	inc    esi
  4130ee:	adc    al,BYTE PTR [eax]
  4130f0:	or     eax,0x44d6
	...
  41311d:	add    BYTE PTR [eax],al
  41311f:	add    BYTE PTR [edi],al
  413121:	(bad)  
  413122:	inc    esp
	...
  413133:	add    bh,bh
  413135:	aad    0x44
  413137:	add    BYTE PTR [eax],al
  413139:	add    BYTE PTR [eax],al
  41313b:	add    BYTE PTR [eax],al
  41313d:	dec    esi
  41313e:	add    DWORD PTR [eax],eax
  413140:	inc    esp
  413141:	xor    DWORD PTR [ecx+0x0],eax
  413144:	add    BYTE PTR [eax],al
  413146:	add    BYTE PTR [eax],al
  413148:	add    BYTE PTR [ecx+eax*1+0x0],al
  41314c:	push   eax
  41314d:	xor    DWORD PTR [ecx+0x0],eax
  413150:	add    BYTE PTR [eax],al
  413152:	add    BYTE PTR [eax],al
  413154:	add    BYTE PTR [eax+0x7],dl
  413157:	add    al,cl
  413159:	xor    DWORD PTR [ecx+0x0],eax
	...
  413170:	je     0x4131a3
  413172:	inc    ecx
  413173:	add    BYTE PTR [eax],al
  413175:	add    BYTE PTR [eax],al
  413177:	add    BYTE PTR [eax],al
  413179:	push   eax
  41317a:	add    DWORD PTR [eax],eax
  41317c:	xor    BYTE PTR [ecx],0x41
  41317f:	add    BYTE PTR [eax],al
  413181:	add    BYTE PTR [eax],al
  413183:	add    BYTE PTR [eax],al
  413185:	inc    esp
  413186:	adc    BYTE PTR [eax],al
  413188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413189:	(bad)  
  41318a:	inc    esp
	...
  4131c3:	add    BYTE PTR [edi+0x44d6],bl
  4131c9:	add    BYTE PTR [eax],al
  4131cb:	add    BYTE PTR [eax],al
  4131cd:	inc    esp
  4131ce:	adc    BYTE PTR [eax],al
  4131d0:	mov    cl,0xd6
  4131d2:	inc    esp
	...
  41320b:	add    BYTE PTR [ebx+0x44d6],ch
  413211:	add    BYTE PTR [eax],al
  413213:	add    BYTE PTR [eax],al
  413215:	inc    esi
  413216:	push   cs
  413217:	add    bh,dl
  413219:	(bad)  
  41321a:	inc    esp
	...
  413223:	add    ah,al
  413225:	(bad)  
  413226:	inc    esp
	...
  413233:	add    BYTE PTR [ebp+0x44d6],bh
	...
  413249:	add    BYTE PTR [eax],al
  41324b:	add    BYTE PTR [edi+0x44d6],dh
  413251:	add    BYTE PTR [eax],al
  413253:	add    BYTE PTR [eax],al
  413255:	inc    esp
  413256:	adc    eax,0x4133d000
  41325b:	add    BYTE PTR [ebx+esi*1+0x41],ch
	...
  413267:	add    BYTE PTR [ebx-0x29],bh
  41326a:	inc    esp
	...
  413277:	add    BYTE PTR [edi+edx*8],ch
  41327a:	inc    esp
  41327b:	add    BYTE PTR [eax],al
  41327d:	add    BYTE PTR [eax],al
  41327f:	add    BYTE PTR [edx+esi*1+0x41],ch
	...
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	in     eax,dx
  4132a9:	(bad)  
  4132aa:	inc    esp
  4132ab:	add    BYTE PTR [eax],al
  4132ad:	add    BYTE PTR [eax],al
  4132af:	add    BYTE PTR [eax],al
  4132b1:	inc    esp
  4132b2:	add    DWORD PTR [eax],eax
  4132b4:	hlt    
  4132b5:	(bad)  
  4132b6:	inc    esp
  4132b7:	add    BYTE PTR [eax],al
  4132b9:	add    BYTE PTR [eax],al
  4132bb:	add    BYTE PTR [eax],al
  4132bd:	inc    esp
  4132be:	adc    BYTE PTR [eax],al
  4132c0:	(bad)  
  4132c2:	inc    esp
	...
  4132fb:	add    BYTE PTR [ecx],cl
  4132fd:	xlat   BYTE PTR ds:[ebx]
  4132fe:	inc    esp
  4132ff:	add    BYTE PTR [eax],al
  413301:	add    BYTE PTR [eax],al
  413303:	add    BYTE PTR [eax],al
  413305:	inc    esp
  413306:	adc    BYTE PTR [eax],al
  413308:	daa    
  413309:	xlat   BYTE PTR ds:[ebx]
  41330a:	inc    esp
	...
  413343:	add    BYTE PTR [ecx],ah
  413345:	xlat   BYTE PTR ds:[ebx]
  413346:	inc    esp
  413347:	add    BYTE PTR [eax],al
  413349:	add    BYTE PTR [eax],al
  41334b:	add    BYTE PTR [eax],al
  41334d:	inc    ecx
  41334e:	pop    es
  41334f:	add    BYTE PTR [ebp-0x29],dh
  413352:	inc    esp
	...
  413367:	add    BYTE PTR [edi-0x29],ch
  41336a:	inc    esp
  41336b:	add    BYTE PTR [eax],al
  41336d:	add    BYTE PTR [eax],al
  41336f:	add    BYTE PTR [eax],al
  413371:	push   ebx
  413372:	add    DWORD PTR [eax],eax
  413374:	js     0x4133a9
  413376:	inc    ecx
  413377:	add    BYTE PTR [eax],al
  413379:	add    BYTE PTR [eax],al
  41337b:	add    BYTE PTR [eax],al
  41337d:	inc    esp
  41337e:	or     BYTE PTR [eax],al
  413380:	mov    eax,0xa0004133
  413385:	xor    eax,DWORD PTR [ecx+0x0]
	...
  413394:	xchg   ecx,eax
  413395:	xlat   BYTE PTR ds:[ebx]
  413396:	inc    esp
  413397:	add    BYTE PTR [eax],al
  413399:	add    BYTE PTR [eax],al
  41339b:	add    BYTE PTR [ecx+0x44d7],al
  4133a1:	add    BYTE PTR [eax],al
  4133a3:	add    BYTE PTR [eax],al
  4133a5:	dec    esi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	lods   al,BYTE PTR ds:[esi]
  4133a9:	xor    eax,DWORD PTR [ecx+0x0]
  4133ac:	add    BYTE PTR [eax],al
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	add    BYTE PTR [ebx+0x1],al
  4133b3:	add    BYTE PTR [eax+0x44d7],bl
  4133b9:	add    BYTE PTR [eax],al
  4133bb:	add    BYTE PTR [eax],al
  4133bd:	inc    ebp
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	les    esi,FWORD PTR [ebx]
  4133c2:	inc    ecx
  4133c3:	add    BYTE PTR [eax],al
  4133c5:	add    BYTE PTR [eax],al
  4133c7:	add    BYTE PTR [eax],al
  4133c9:	inc    ebx
  4133ca:	add    DWORD PTR [eax],eax
  4133cc:	lods   al,BYTE PTR ds:[esi]
  4133cd:	xlat   BYTE PTR ds:[ebx]
  4133ce:	inc    esp
  4133cf:	add    BYTE PTR [eax],al
  4133d1:	add    BYTE PTR [eax],al
  4133d3:	add    BYTE PTR [eax],al
  4133d5:	inc    ebx
  4133d6:	add    al,BYTE PTR [eax]
  4133d8:	add    ebx,eax
  4133da:	inc    esp
  4133db:	add    al,al
  4133dd:	xlat   BYTE PTR ds:[ebx]
  4133de:	inc    esp
  4133df:	add    BYTE PTR [eax],al
  4133e1:	add    BYTE PTR [eax],al
  4133e3:	add    BYTE PTR [eax],al
  4133e5:	inc    esp
  4133e6:	adc    al,BYTE PTR [eax]
  4133e8:	jmp    0x4133c1
  4133ea:	inc    esp
	...
  413423:	add    ch,ah
  413425:	xlat   BYTE PTR ds:[ebx]
  413426:	inc    esp
  413427:	add    BYTE PTR [eax],al
  413429:	add    BYTE PTR [eax],al
  41342b:	add    BYTE PTR [eax],dh
  41342d:	xor    al,0x41
  41342f:	add    BYTE PTR [eax],al
  413431:	add    BYTE PTR [eax],al
  413433:	add    BYTE PTR [eax],al
  413435:	inc    edx
  413436:	add    DWORD PTR [eax],eax
  413438:	cmp    al,0x34
  41343a:	inc    ecx
  41343b:	add    BYTE PTR [eax],al
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [eax],al
  413441:	push   eax
  413442:	add    DWORD PTR [eax],eax
  413444:	dec    eax
  413445:	xor    al,0x41
  413447:	add    BYTE PTR [eax],al
  413449:	add    BYTE PTR [eax],al
  41344b:	add    BYTE PTR [eax],al
  41344d:	inc    esp
  41344e:	adc    BYTE PTR [eax],al
  413450:	(bad)  
  413452:	inc    esp
	...
  41348b:	add    cl,bl
  41348d:	xlat   BYTE PTR ds:[ebx]
  41348e:	inc    esp
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],al
  413495:	inc    esp
  413496:	adc    BYTE PTR [eax],al
  413498:	std    
  413499:	xlat   BYTE PTR ds:[ebx]
  41349a:	inc    esp
	...
  4134d3:	add    bh,dh
  4134d5:	xlat   BYTE PTR ds:[ebx]
  4134d6:	inc    esp
  4134d7:	add    BYTE PTR [eax],al
  4134d9:	add    BYTE PTR [eax],al
  4134db:	add    BYTE PTR [eax],al
  4134dd:	inc    edx
  4134de:	add    eax,0x44d80f00
	...
  4134ef:	add    BYTE PTR [ecx],cl
  4134f1:	fadd   DWORD PTR [eax+eax*1+0x0]
  4134f5:	add    BYTE PTR [eax],al
  4134f7:	add    BYTE PTR [eax],al
  4134f9:	inc    ecx
  4134fa:	or     al,0x0
  4134fc:	test   eax,0x44d8
  413501:	add    BYTE PTR [eax],al
  413503:	add    BYTE PTR [ecx+0x44d8],ah
	...
  413525:	add    BYTE PTR [eax],al
  413527:	add    BYTE PTR [ecx+0x44d8],bl
  41352d:	add    BYTE PTR [eax],al
  41352f:	add    BYTE PTR [eax],al
  413531:	dec    esp
  413532:	or     eax,DWORD PTR [eax]
  413534:	xlat   BYTE PTR ds:[ebx]
  413535:	fadd   DWORD PTR [eax+eax*1+0x0]
	...
  413559:	add    BYTE PTR [eax],al
  41355b:	add    al,bl
  41355d:	xor    eax,0x41
  413562:	add    BYTE PTR [eax],al
  413564:	add    BYTE PTR [esi+0x14],al
  413567:	add    BYTE PTR [ebx],bl
  413569:	fadd   DWORD PTR [eax+eax*1+0x0]
	...
  4135b1:	add    BYTE PTR [eax],al
  4135b3:	add    BYTE PTR [ecx+0x44d8],dh
  4135b9:	add    BYTE PTR [eax],al
  4135bb:	add    BYTE PTR [eax],al
  4135bd:	inc    ecx
  4135be:	push   es
  4135bf:	add    BYTE PTR [esi*1+0x41],ch
	...
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	mov    ecx,0x250044d8
  4135d5:	fadd   DWORD PTR [eax+eax*1+0x0]
  4135d9:	add    BYTE PTR [eax],al
  4135db:	add    BYTE PTR [eax],al
  4135dd:	inc    ebp
  4135de:	add    DWORD PTR [eax],eax
  4135e0:	in     al,0x35
  4135e2:	inc    ecx
  4135e3:	add    BYTE PTR [eax],al
  4135e5:	add    BYTE PTR [eax],al
  4135e7:	add    BYTE PTR [eax],al
  4135e9:	push   edx
  4135ea:	pop    es
  4135eb:	add    bh,cl
  4135ed:	fadd   DWORD PTR [eax+eax*1+0x0]
	...
  413601:	add    BYTE PTR [eax],al
  413603:	add    ch,al
  413605:	fadd   DWORD PTR [eax+eax*1+0x0]
  413609:	add    BYTE PTR [eax],al
  41360b:	add    BYTE PTR [eax],al
  41360d:	push   ebp
  41360e:	add    DWORD PTR [eax],eax
  413610:	adc    al,0x36
  413612:	inc    ecx
  413613:	add    BYTE PTR [eax],al
  413615:	add    BYTE PTR [eax],al
  413617:	add    BYTE PTR [eax],al
  413619:	push   ebx
  41361a:	add    DWORD PTR [eax],eax
  41361c:	and    BYTE PTR [esi],dh
  41361e:	inc    ecx
  41361f:	add    BYTE PTR [eax],al
  413621:	add    BYTE PTR [eax],al
  413623:	add    BYTE PTR [eax],al
  413625:	dec    eax
  413626:	add    DWORD PTR [eax],eax
  413628:	sub    al,0x36
  41362a:	inc    ecx
  41362b:	add    BYTE PTR [eax],al
  41362d:	add    BYTE PTR [eax],al
  41362f:	add    BYTE PTR [eax],al
  413631:	inc    esi
  413632:	or     eax,0x44d8ef00
	...
  413663:	add    bh,ah
  413665:	fadd   DWORD PTR [eax+eax*1+0x0]
  413669:	add    BYTE PTR [eax],al
  41366b:	add    BYTE PTR [eax],al
  41366d:	dec    edi
  41366e:	add    DWORD PTR [eax],eax
  413670:	je     0x4136a8
  413672:	inc    ecx
  413673:	add    BYTE PTR [eax],al
  413675:	add    BYTE PTR [eax],al
  413677:	add    BYTE PTR [eax],al
  413679:	inc    ebx
  41367a:	or     al,BYTE PTR [eax]
  41367c:	and    eax,0x44d9
	...
  41369d:	add    BYTE PTR [eax],al
  41369f:	add    BYTE PTR [esi+esi*1+0x41],ah
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	add    BYTE PTR [ecx+0x1],cl
  4136ab:	add    BYTE PTR [eax+0x4136],dh
  4136b1:	add    BYTE PTR [eax],al
  4136b3:	add    BYTE PTR [eax],al
  4136b5:	push   ebx
  4136b6:	add    DWORD PTR [eax],eax
  4136b8:	mov    esp,0x4136
  4136bd:	add    BYTE PTR [eax],al
  4136bf:	add    BYTE PTR [eax],al
  4136c1:	push   esp
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	clc    
  4136c5:	fadd   DWORD PTR [eax+eax*1+0x0]
  4136c9:	add    BYTE PTR [eax],al
  4136cb:	add    BYTE PTR [eax],al
  4136cd:	inc    ecx
  4136ce:	or     DWORD PTR [eax],eax
  4136d0:	xchg   ebp,eax
  4136d1:	fld    DWORD PTR [eax+eax*1+0x0]
	...
  4136e1:	add    BYTE PTR [eax],al
  4136e3:	add    BYTE PTR [ebx+0x44d9],cl
  4136e9:	add    BYTE PTR [eax],al
  4136eb:	add    BYTE PTR [eax],al
  4136ed:	add    BYTE PTR [eax],al
  4136ef:	add    ah,dh
  4136f1:	ss inc ecx
  4136f3:	add    BYTE PTR [eax],al
  4136f5:	add    BYTE PTR [eax],al
  4136f7:	add    BYTE PTR [eax],al
  4136f9:	push   ebx
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	add    BYTE PTR [edi],dh
  4136fe:	inc    ecx
  4136ff:	add    BYTE PTR [eax],al
  413701:	add    BYTE PTR [eax],al
  413703:	add    BYTE PTR [eax],al
  413705:	push   esp
  413706:	add    DWORD PTR [eax],eax
  413708:	sub    al,0xd9
  41370a:	inc    esp
  41370b:	add    BYTE PTR [eax],al
  41370d:	add    BYTE PTR [eax],al
  41370f:	add    BYTE PTR [eax],al
  413711:	inc    ecx
  413712:	add    DWORD PTR [eax],eax
  413714:	sbb    BYTE PTR [edi],dh
  413716:	inc    ecx
  413717:	add    BYTE PTR [eax],al
  413719:	add    BYTE PTR [eax],al
  41371b:	add    BYTE PTR [eax],al
  41371d:	inc    ebx
  41371e:	add    DWORD PTR [eax],eax
  413720:	and    al,0x37
  413722:	inc    ecx
  413723:	add    BYTE PTR [eax],al
  413725:	add    BYTE PTR [eax],al
  413727:	add    BYTE PTR [eax],al
  413729:	push   edx
  41372a:	add    DWORD PTR [eax],eax
  41372c:	xor    BYTE PTR [edi],dh
  41372e:	inc    ecx
  41372f:	add    BYTE PTR [eax],al
  413731:	add    BYTE PTR [eax],al
  413733:	add    BYTE PTR [eax],al
  413735:	dec    edi
  413736:	add    DWORD PTR [eax],eax
  413738:	push   0x44d9
  41373d:	add    BYTE PTR [eax],al
  41373f:	add    BYTE PTR [eax],al
  413741:	dec    esi
  413742:	add    eax,0x44da7300
	...
  413753:	add    BYTE PTR [eax+0x37],bl
  413756:	inc    ecx
  413757:	add    BYTE PTR [eax],al
  413759:	add    BYTE PTR [eax],al
  41375b:	add    BYTE PTR [eax],al
  41375d:	push   edx
  41375e:	add    DWORD PTR [eax],eax
  413760:	test   al,0xd9
  413762:	inc    esp
  413763:	add    BYTE PTR [eax],al
  413765:	add    BYTE PTR [eax],al
  413767:	add    BYTE PTR [eax],al
  413769:	inc    esp
  41376a:	add    DWORD PTR [eax],eax
  41376c:	fdiv   QWORD PTR [edi]
  41376e:	inc    ecx
  41376f:	add    BYTE PTR [eax],al
  413771:	add    BYTE PTR [eax],al
  413773:	add    BYTE PTR [eax],al
  413775:	inc    edx
  413776:	sbb    DWORD PTR [eax],eax
  413778:	aaa    
  413779:	fiadd  DWORD PTR [eax+eax*1+0x0]
  41377d:	add    BYTE PTR [eax],al
  41377f:	add    BYTE PTR [edi],ch
  413781:	fiadd  DWORD PTR [eax+eax*1+0x0]
	...
  4137d5:	add    BYTE PTR [eax],al
  4137d7:	add    BYTE PTR [ecx],ch
  4137d9:	fiadd  DWORD PTR [eax+eax*1+0x0]
  4137dd:	add    BYTE PTR [eax],al
  4137df:	add    BYTE PTR [eax],al
  4137e1:	dec    esi
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	pushf  
  4137e5:	fld    DWORD PTR [eax+eax*1+0x0]
  4137e9:	add    BYTE PTR [eax],al
  4137eb:	add    BYTE PTR [eax],al
  4137ed:	inc    ebp
  4137ee:	add    eax,0x44da5b00
	...
  4137ff:	add    BYTE PTR [eax+edi*1],al
  413802:	inc    ecx
  413803:	add    BYTE PTR [eax],al
  413805:	add    BYTE PTR [eax],al
  413807:	add    BYTE PTR [eax],al
  413809:	inc    esi
  41380a:	add    DWORD PTR [eax],eax
  41380c:	dec    eax
  41380d:	fiadd  DWORD PTR [eax+eax*1+0x0]
  413811:	add    BYTE PTR [eax],al
  413813:	add    BYTE PTR [eax],al
  413815:	inc    ecx
  413816:	add    DWORD PTR [eax],eax
  413818:	sbb    al,0x38
  41381a:	inc    ecx
  41381b:	add    BYTE PTR [eax],al
  41381d:	add    BYTE PTR [eax],al
  41381f:	add    BYTE PTR [eax],al
  413821:	push   esp
  413822:	add    DWORD PTR [eax],eax
  413824:	sub    BYTE PTR [eax],bh
  413826:	inc    ecx
  413827:	add    BYTE PTR [eax],al
  413829:	add    BYTE PTR [eax],al
  41382b:	add    BYTE PTR [eax],al
  41382d:	inc    ecx
  41382e:	add    DWORD PTR [eax],eax
  413830:	sbb    dl,0x44
  413833:	add    BYTE PTR [eax],al
  413835:	add    BYTE PTR [eax],al
  413837:	add    BYTE PTR [eax],al
  413839:	dec    edi
  41383a:	add    al,0x0
  41383c:	dec    esp
  41383d:	cmp    BYTE PTR [ecx+0x0],al
	...
  413848:	xchg   ebx,eax
  413849:	fiadd  DWORD PTR [eax+eax*1+0x0]
  41384d:	add    BYTE PTR [eax],al
  41384f:	add    BYTE PTR [eax],al
  413851:	inc    esp
  413852:	or     eax,DWORD PTR [eax]
  413854:	mov    ds:0x44da,eax
	...
  413879:	add    BYTE PTR [eax],al
  41387b:	add    BYTE PTR [ebx+0x440044da],bl
  413881:	loope  0x4138c4
  413883:	add    BYTE PTR [ecx+0x0],cl
  413886:	inc    DWORD PTR [eax]
  413888:	sbb    DWORD PTR [eax],eax
  41388a:	add    BYTE PTR [eax],al
  41388c:	inc    esp
  41388d:	loope  0x4138d0
  41388f:	add    BYTE PTR [ecx],ch
  413891:	add    bh,bh
  413893:	add    BYTE PTR [ecx],bl
  413895:	add    BYTE PTR [eax],al
  413897:	add    BYTE PTR [ebx+eiz*8],al
  41389a:	inc    ecx
  41389b:	add    BYTE PTR [ecx+0x0],bl
  41389e:	inc    DWORD PTR [eax]
  4138a0:	sbb    DWORD PTR [eax],eax
  4138a2:	add    BYTE PTR [eax],al
  4138a4:	add    al,0xe3
  4138a6:	inc    ecx
  4138a7:	add    BYTE PTR [ecx],bh
  4138a9:	add    bh,bh
  4138ab:	add    BYTE PTR [ecx],bl
  4138ad:	add    BYTE PTR [eax],al
  4138af:	add    BYTE PTR [ebx+eiz*8],al
  4138b2:	inc    ecx
  4138b3:	add    cl,ch
  4138b5:	add    BYTE PTR [esi+0x21e00],ch
  4138bb:	add    BYTE PTR [ebx+eiz*8],al
  4138be:	inc    ecx
  4138bf:	add    cl,ch
  4138c1:	add    BYTE PTR [esi+0x21800],ch
  4138c7:	add    BYTE PTR [ebx+eiz*8],al
  4138ca:	inc    ecx
  4138cb:	add    cl,cl
  4138cd:	add    BYTE PTR [esi+0x21e00],ch
  4138d3:	add    BYTE PTR [ebx+eiz*8],al
  4138d6:	inc    ecx
  4138d7:	add    cl,cl
  4138d9:	add    BYTE PTR [esi+0x21800],ch
  4138df:	add    BYTE PTR [ebx+eiz*8],al
  4138e2:	inc    ecx
  4138e3:	add    cl,bl
  4138e5:	add    BYTE PTR [esi+0x1e00],ch
  4138eb:	add    BYTE PTR [ebx+eiz*8],al
  4138ee:	inc    ecx
  4138ef:	add    cl,bl
  4138f1:	add    BYTE PTR [esi+0x1800],ch
  4138f7:	add    BYTE PTR [ebx*8+0x820041],bl
  4138fe:	push   edi
  4138ff:	add    BYTE PTR [eax],bl
  413901:	add    BYTE PTR [eax],al
  413903:	add    BYTE PTR [eax-0x7dffbe23],bh
  413909:	add    BYTE PTR [edi+0x0],dl
  41390c:	sbb    BYTE PTR [eax],al
  41390e:	add    BYTE PTR [eax],al
  413910:	sbb    al,0xdd
  413912:	inc    ecx
  413913:	add    BYTE PTR [edx+0x38005700],al
  413919:	add    BYTE PTR [eax],al
  41391b:	add    BYTE PTR [eax-0x7dffbe23],bl
  413921:	add    BYTE PTR [edi+0x0],dl
  413924:	cmp    BYTE PTR [eax],al
  413926:	add    BYTE PTR [eax],al
  413928:	sub    ah,ah
  41392a:	inc    ecx
  41392b:	add    BYTE PTR [edx],al
  41392d:	add    BYTE PTR [eax+eax*1],dh
  413930:	sbb    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	dec    eax
  413935:	loope  0x413978
  413937:	add    BYTE PTR [edx+0x0],ch
  41393a:	add    DWORD PTR [eax],0x19
  41393d:	add    al,BYTE PTR [eax]
  41393f:	add    al,bh
  413941:	loopne 0x413984
  413943:	add    BYTE PTR [edx+0x0],ch
  413946:	add    DWORD PTR [eax],0x19
  413949:	add    al,BYTE PTR [eax]
  41394b:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41394f:	add    BYTE PTR [edx+0x0],ch
  413952:	add    BYTE PTR [eax],0x18
  413955:	add    al,BYTE PTR [eax]
  413957:	add    BYTE PTR [esp+eiz*8],al
  41395a:	inc    ecx
  41395b:	add    BYTE PTR [edx],al
  41395d:	add    BYTE PTR ds:0x11900,dh
  413963:	add    BYTE PTR [ecx+eiz*8],ch
  413966:	inc    ecx
  413967:	add    BYTE PTR [edx+0x0],ch
  41396a:	add    DWORD PTR [eax],0x319
  413970:	call   0x6a417b55
  413975:	add    BYTE PTR [ecx+0x21900],al
  41397b:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  413982:	xor    al,BYTE PTR [eax]
  413984:	sbb    BYTE PTR [ecx],al
  413986:	add    BYTE PTR [eax],al
  413988:	push   esp
  413989:	loope  0x4139cc
  41398b:	add    BYTE PTR [edx],al
  41398d:	add    BYTE PTR [eax],dh
  41398f:	add    BYTE PTR [eax],bl
  413991:	add    eax,DWORD PTR [eax]
  413993:	add    BYTE PTR [eax-0x20],ah
  413996:	inc    ecx
  413997:	add    BYTE PTR [edx],al
  413999:	add    BYTE PTR [ebx],dh
  41399b:	add    BYTE PTR [ecx],bl
  41399d:	add    DWORD PTR [eax],eax
  41399f:	add    BYTE PTR [eax+0x20041e1],dl
  4139a5:	add    BYTE PTR [ecx],dh
  4139a7:	add    BYTE PTR [edx],bl
  4139a9:	add    eax,DWORD PTR [eax]
  4139ab:	add    ah,bl
  4139ad:	loop   0x4139f0
  4139af:	add    BYTE PTR [edx+0x0],ch
  4139b2:	add    BYTE PTR [eax],0x18
  4139b5:	add    al,BYTE PTR [eax]
  4139b7:	add    ah,dl
  4139b9:	loop   0x4139fc
  4139bb:	add    BYTE PTR [edx+0x0],ch
  4139be:	add    DWORD PTR [eax],0x31c
  4139c4:	int3   
  4139c5:	loop   0x413a08
  4139c7:	add    BYTE PTR [edx+0x0],ch
  4139ca:	add    DWORD PTR [eax],0x51d
  4139d0:	add    BYTE PTR [eax],al
  4139d2:	add    BYTE PTR [eax],al
  4139d4:	add    BYTE PTR [eax],al
  4139d6:	xlat   BYTE PTR ds:[ebx]
  4139d7:	add    BYTE PTR [eax],bl
  4139d9:	add    BYTE PTR [eax],al
  4139db:	add    al,cl
  4139dd:	fadd   DWORD PTR [ecx+0x0]
  4139e0:	add    DWORD PTR [eax],eax
  4139e2:	xlat   BYTE PTR ds:[ebx]
  4139e3:	add    BYTE PTR [eax],bl
  4139e5:	add    BYTE PTR [eax],al
  4139e7:	add    BYTE PTR [esp+eiz*8],bl
  4139ea:	inc    ecx
  4139eb:	add    BYTE PTR [edx],al
  4139ed:	add    BYTE PTR [eax+0x11900],dl
  4139f3:	add    BYTE PTR [eax+0x20041e3],cl
  4139f9:	add    BYTE PTR [eax+0x11900],dl
  4139ff:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  413a06:	xchg   BYTE PTR [eax],al
  413a08:	sbb    BYTE PTR ds:0xe1540000,al
  413a0e:	inc    ecx
  413a0f:	add    BYTE PTR [edx],al
  413a11:	add    BYTE PTR [esi+0x31800],al
  413a17:	add    BYTE PTR [eax-0x20],ah
  413a1a:	inc    ecx
  413a1b:	add    BYTE PTR [edx],al
  413a1d:	add    BYTE PTR [edi+0x51900],al
  413a23:	add    BYTE PTR [eax+0x20041e1],dl
  413a29:	add    BYTE PTR [edi+0x31a00],al
  413a2f:	add    bh,al
  413a31:	clc    
  413a32:	add    al,0x4
  413a34:	add    BYTE PTR [eax],al
  413a36:	add    BYTE PTR [eax],al
  413a38:	push   esp
  413a39:	loope  0x413a7c
  413a3b:	add    BYTE PTR [edx+0x1800c000],al
  413a41:	add    eax,DWORD PTR [eax]
  413a43:	add    BYTE PTR [eax-0x7dffbe1f],dl
  413a49:	add    cl,al
  413a4b:	add    BYTE PTR [edx],bl
  413a4d:	add    eax,DWORD PTR [eax]
  413a4f:	add    BYTE PTR [ebx+eiz*8+0x41],ch
  413a53:	add    BYTE PTR [ecx],al
  413a55:	xabort 0x0
  413a58:	sbb    BYTE PTR [eax],al
  413a5a:	add    BYTE PTR [eax],al
  413a5c:	clc    
  413a5d:	loope  0x413aa0
  413a5f:	add    BYTE PTR [ecx+0x7900ae00],bh
  413a65:	add    BYTE PTR [eax],al
  413a67:	add    al,bh
  413a69:	loope  0x413aac
  413a6b:	add    BYTE PTR [ecx+0x7900ae00],ch
  413a71:	add    BYTE PTR [eax],al
  413a73:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413a77:	add    BYTE PTR [ebx+0x18005700],al
  413a7d:	or     BYTE PTR [eax],al
  413a7f:	add    ah,dh
  413a81:	fild   DWORD PTR [ecx+0x0]
  413a84:	add    DWORD PTR [eax],0x57
  413a87:	add    BYTE PTR [eax],bl
  413a89:	or     BYTE PTR [eax],al
  413a8b:	add    BYTE PTR [eax],bh
  413a8d:	fld    DWORD PTR [ecx+0x0]
  413a90:	add    DWORD PTR [eax],0x57
  413a93:	add    BYTE PTR [eax],bl
  413a95:	sbb    BYTE PTR [eax],al
  413a97:	add    ah,al
  413a99:	fld    DWORD PTR [ecx+0x0]
  413a9c:	add    DWORD PTR [eax],0x57
  413a9f:	add    BYTE PTR [eax],bl
  413aa1:	sbb    BYTE PTR [eax],al
  413aa3:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413aa7:	add    BYTE PTR [ebx+0x38005700],al
  413aad:	or     BYTE PTR [eax],al
  413aaf:	add    al,al
  413ab1:	fild   DWORD PTR [ecx+0x0]
  413ab4:	add    DWORD PTR [eax],0x57
  413ab7:	add    BYTE PTR [eax],bh
  413ab9:	or     BYTE PTR [eax],al
  413abb:	add    BYTE PTR [eax],bh
  413abd:	fld    DWORD PTR [ecx+0x0]
  413ac0:	add    DWORD PTR [eax],0x57
  413ac3:	add    BYTE PTR [eax],bh
  413ac5:	sbb    BYTE PTR [eax],al
  413ac7:	add    BYTE PTR [eax-0x7cffbe27],dl
  413acd:	add    BYTE PTR [edi+0x0],dl
  413ad0:	cmp    BYTE PTR [eax],bl
  413ad2:	add    BYTE PTR [eax],al
  413ad4:	pop    esp
  413ad5:	fild   DWORD PTR [ecx+0x0]
  413ad8:	add    DWORD PTR [eax],0x14
  413adb:	add    BYTE PTR [eax],bl
  413add:	or     BYTE PTR [eax],al
  413adf:	add    ah,dh
  413ae1:	fild   DWORD PTR [ecx+0x0]
  413ae4:	add    DWORD PTR [eax],0x14
  413ae7:	add    BYTE PTR [eax],bl
  413ae9:	or     BYTE PTR [eax],al
  413aeb:	add    BYTE PTR [eax],bh
  413aed:	fld    DWORD PTR [ecx+0x0]
  413af0:	add    DWORD PTR [eax],0x14
  413af3:	add    BYTE PTR [eax],bl
  413af5:	sbb    BYTE PTR [eax],al
  413af7:	add    ah,al
  413af9:	fld    DWORD PTR [ecx+0x0]
  413afc:	add    DWORD PTR [eax],0x14
  413aff:	add    BYTE PTR [eax],bl
  413b01:	sbb    BYTE PTR [eax],al
  413b03:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413b07:	add    BYTE PTR [ebx+0x38001400],al
  413b0d:	or     BYTE PTR [eax],al
  413b0f:	add    al,al
  413b11:	fild   DWORD PTR [ecx+0x0]
  413b14:	add    DWORD PTR [eax],0x14
  413b17:	add    BYTE PTR [eax],bh
  413b19:	or     BYTE PTR [eax],al
  413b1b:	add    BYTE PTR [eax],bh
  413b1d:	fld    DWORD PTR [ecx+0x0]
  413b20:	add    DWORD PTR [eax],0x14
  413b23:	add    BYTE PTR [eax],bh
  413b25:	sbb    BYTE PTR [eax],al
  413b27:	add    BYTE PTR [eax-0x7cffbe27],dl
  413b2d:	add    BYTE PTR [eax+eax*1],dl
  413b30:	cmp    BYTE PTR [eax],bl
  413b32:	add    BYTE PTR [eax],al
  413b34:	pop    esp
  413b35:	fild   DWORD PTR [ecx+0x0]
  413b38:	add    DWORD PTR [eax],0x15
  413b3b:	add    BYTE PTR [eax],bl
  413b3d:	or     BYTE PTR [eax],al
  413b3f:	add    ah,dh
  413b41:	fild   DWORD PTR [ecx+0x0]
  413b44:	add    DWORD PTR [eax],0x15
  413b47:	add    BYTE PTR [eax],bl
  413b49:	or     BYTE PTR [eax],al
  413b4b:	add    BYTE PTR [eax],bh
  413b4d:	fld    DWORD PTR [ecx+0x0]
  413b50:	add    DWORD PTR [eax],0x15
  413b53:	add    BYTE PTR [eax],bl
  413b55:	sbb    BYTE PTR [eax],al
  413b57:	add    ah,al
  413b59:	fld    DWORD PTR [ecx+0x0]
  413b5c:	add    DWORD PTR [eax],0x15
  413b5f:	add    BYTE PTR [eax],bl
  413b61:	sbb    BYTE PTR [eax],al
  413b63:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413b67:	add    BYTE PTR [ebx+0x38001500],al
  413b6d:	or     BYTE PTR [eax],al
  413b6f:	add    al,al
  413b71:	fild   DWORD PTR [ecx+0x0]
  413b74:	add    DWORD PTR [eax],0x15
  413b77:	add    BYTE PTR [eax],bh
  413b79:	or     BYTE PTR [eax],al
  413b7b:	add    BYTE PTR [eax],bh
  413b7d:	fld    DWORD PTR [ecx+0x0]
  413b80:	add    DWORD PTR [eax],0x15
  413b83:	add    BYTE PTR [eax],bh
  413b85:	sbb    BYTE PTR [eax],al
  413b87:	add    BYTE PTR [eax-0x7cffbe27],dl
  413b8d:	add    BYTE PTR ds:0x183800,dl
  413b93:	add    BYTE PTR [ebx*8+0x820041],bl
  413b9a:	add    BYTE PTR cs:[eax],bl
  413b9d:	or     BYTE PTR [eax],al
  413b9f:	add    BYTE PTR [esi+ebx*8],dh
  413ba2:	inc    ecx
  413ba3:	add    BYTE PTR [edx+0x18002e00],al
  413ba9:	or     BYTE PTR [eax],al
  413bab:	add    BYTE PTR [ebx*8+0x820041],bl
  413bb2:	add    BYTE PTR cs:[eax],bh
  413bb5:	or     BYTE PTR [eax],al
  413bb7:	add    BYTE PTR [eax],bl
  413bb9:	fiadd  WORD PTR [ecx+0x0]
  413bbc:	add    BYTE PTR [eax],0x2e
  413bbf:	add    BYTE PTR [eax],bh
  413bc1:	or     BYTE PTR [eax],al
  413bc3:	add    BYTE PTR [ebx*8+0x38820041],bl
  413bca:	push   cs
  413bcb:	add    BYTE PTR [eax],bh
  413bcd:	or     BYTE PTR [eax],al
  413bcf:	add    BYTE PTR [eax-0x7dffbe23],bh
  413bd5:	cmp    BYTE PTR [esi],cl
  413bd7:	add    BYTE PTR [eax],bh
  413bd9:	or     BYTE PTR [eax],al
  413bdb:	add    BYTE PTR [edx+ebx*8+0x41],dl
  413bdf:	add    BYTE PTR [edx+0x38000e38],al
  413be5:	sbb    BYTE PTR [eax],al
  413be7:	add    BYTE PTR [edx+ebx*8+0x38820041],bl
  413bee:	push   cs
  413bef:	add    BYTE PTR [eax],bh
  413bf1:	sbb    BYTE PTR [eax],al
  413bf3:	add    BYTE PTR [ebx*8+0x38820041],bl
  413bfa:	(bad)  
  413bfc:	cmp    BYTE PTR [eax],cl
  413bfe:	add    BYTE PTR [eax],al
  413c00:	cwde   
  413c01:	fld    QWORD PTR [ecx+0x0]
  413c04:	cmp    BYTE PTR [eax],0xf
  413c07:	add    BYTE PTR [eax],bh
  413c09:	or     BYTE PTR [eax],al
  413c0b:	add    BYTE PTR [edx+ebx*8+0x41],dl
  413c0f:	add    BYTE PTR [edx+0x38000f38],al
  413c15:	sbb    BYTE PTR [eax],al
  413c17:	add    BYTE PTR [eax-0x7dffbe26],cl
  413c1d:	cmp    BYTE PTR [edi],cl
  413c1f:	add    BYTE PTR [eax],bh
  413c21:	sbb    BYTE PTR [eax],al
  413c23:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413c27:	add    BYTE PTR [ebx+0x78005c00],al
  413c2d:	or     BYTE PTR [eax],al
  413c2f:	add    BYTE PTR [esp+ebx*8+0x41],ch
  413c33:	add    BYTE PTR [ebx+0x78005c00],al
  413c39:	or     BYTE PTR [eax],al
  413c3b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413c3f:	add    BYTE PTR [ebx+0x58005c00],al
  413c45:	or     BYTE PTR [eax],al
  413c47:	add    BYTE PTR [esp+ebx*8+0x41],dl
  413c4b:	add    BYTE PTR [ebx+0x58005c00],al
  413c51:	or     BYTE PTR [eax],al
  413c53:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413c57:	add    BYTE PTR [ebx+0x18005c00],al
  413c5d:	or     BYTE PTR [eax],al
  413c5f:	add    ah,dh
  413c61:	fild   DWORD PTR [ecx+0x0]
  413c64:	add    DWORD PTR [eax],0x5c
  413c67:	add    BYTE PTR [eax],bl
  413c69:	or     BYTE PTR [eax],al
  413c6b:	add    BYTE PTR [eax],bh
  413c6d:	fld    DWORD PTR [ecx+0x0]
  413c70:	add    DWORD PTR [eax],0x5c
  413c73:	add    BYTE PTR [eax],bl
  413c75:	sbb    BYTE PTR [eax],al
  413c77:	add    ah,al
  413c79:	fld    DWORD PTR [ecx+0x0]
  413c7c:	add    DWORD PTR [eax],0x5c
  413c7f:	add    BYTE PTR [eax],bl
  413c81:	sbb    BYTE PTR [eax],al
  413c83:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413c87:	add    BYTE PTR [ebx+0x38005c00],al
  413c8d:	or     BYTE PTR [eax],al
  413c8f:	add    al,al
  413c91:	fild   DWORD PTR [ecx+0x0]
  413c94:	add    DWORD PTR [eax],0x5c
  413c97:	add    BYTE PTR [eax],bh
  413c99:	or     BYTE PTR [eax],al
  413c9b:	add    BYTE PTR [eax],bh
  413c9d:	fld    DWORD PTR [ecx+0x0]
  413ca0:	add    DWORD PTR [eax],0x5c
  413ca3:	add    BYTE PTR [eax],bh
  413ca5:	sbb    BYTE PTR [eax],al
  413ca7:	add    BYTE PTR [eax-0x7cffbe27],dl
  413cad:	add    BYTE PTR [eax+eax*1+0x38],bl
  413cb1:	sbb    BYTE PTR [eax],al
  413cb3:	add    al,bh
  413cb5:	loop   0x413cf8
  413cb7:	add    BYTE PTR [ecx+0x1800ae00],bh
  413cbd:	or     BYTE PTR [eax],al
  413cbf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413cc3:	add    BYTE PTR [ebx+0x78005100],al
  413cc9:	or     BYTE PTR [eax],al
  413ccb:	add    BYTE PTR [esp+ebx*8+0x41],ch
  413ccf:	add    BYTE PTR [ebx+0x78005100],al
  413cd5:	or     BYTE PTR [eax],al
  413cd7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413cdb:	add    BYTE PTR [ebx+0x58005100],al
  413ce1:	or     BYTE PTR [eax],al
  413ce3:	add    BYTE PTR [esp+ebx*8+0x41],dl
  413ce7:	add    BYTE PTR [ebx+0x58005100],al
  413ced:	or     BYTE PTR [eax],al
  413cef:	add    BYTE PTR [ebx*8+0x820041],bl
  413cf6:	push   ecx
  413cf7:	add    BYTE PTR [eax],bl
  413cf9:	or     BYTE PTR [eax],al
  413cfb:	add    BYTE PTR [eax-0x7dffbe23],bh
  413d01:	add    BYTE PTR [ecx+0x0],dl
  413d04:	sbb    BYTE PTR [eax],cl
  413d06:	add    BYTE PTR [eax],al
  413d08:	push   esp
  413d09:	fiadd  DWORD PTR [ecx+0x0]
  413d0c:	add    BYTE PTR [eax],0x51
  413d0f:	add    BYTE PTR [eax],bl
  413d11:	sbb    BYTE PTR [eax],al
  413d13:	add    BYTE PTR [edx+ebx*8+0x820041],bl
  413d1a:	push   ecx
  413d1b:	add    BYTE PTR [eax],bl
  413d1d:	sbb    BYTE PTR [eax],al
  413d1f:	add    BYTE PTR [ebx*8+0x820041],bl
  413d26:	push   ecx
  413d27:	add    BYTE PTR [eax],bh
  413d29:	or     BYTE PTR [eax],al
  413d2b:	add    BYTE PTR [eax-0x7dffbe23],bl
  413d31:	add    BYTE PTR [ecx+0x0],dl
  413d34:	cmp    BYTE PTR [eax],cl
  413d36:	add    BYTE PTR [eax],al
  413d38:	push   esp
  413d39:	fiadd  DWORD PTR [ecx+0x0]
  413d3c:	add    BYTE PTR [eax],0x51
  413d3f:	add    BYTE PTR [eax],bh
  413d41:	sbb    BYTE PTR [eax],al
  413d43:	add    BYTE PTR [eax-0x7dffbe26],cl
  413d49:	add    BYTE PTR [ecx+0x0],dl
  413d4c:	cmp    BYTE PTR [eax],bl
  413d4e:	add    BYTE PTR [eax],al
  413d50:	push   eax
  413d51:	fild   DWORD PTR [ecx+0x0]
  413d54:	test   BYTE PTR [eax],al
  413d56:	mov    BYTE PTR [eax],0x18
  413d59:	or     BYTE PTR [eax],al
  413d5b:	add    al,ch
  413d5d:	fild   DWORD PTR [ecx+0x0]
  413d60:	test   BYTE PTR [eax],al
  413d62:	mov    BYTE PTR [eax],0x18
  413d65:	or     BYTE PTR [eax],al
  413d67:	add    BYTE PTR [ecx+ebx*8],ch
  413d6a:	inc    ecx
  413d6b:	add    BYTE PTR [eax+eax*1+0x181800c6],al
  413d72:	add    BYTE PTR [eax],al
  413d74:	mov    eax,0x840041d9
  413d79:	add    dh,al
  413d7b:	add    BYTE PTR [eax],bl
  413d7d:	sbb    BYTE PTR [eax],al
  413d7f:	add    BYTE PTR [eax-0x25],dl
  413d82:	inc    ecx
  413d83:	add    BYTE PTR [eax+eax*1+0x83800c6],al
  413d8a:	add    BYTE PTR [eax],al
  413d8c:	mov    ah,0xdb
  413d8e:	inc    ecx
  413d8f:	add    BYTE PTR [eax+eax*1+0x83800c6],al
  413d96:	add    BYTE PTR [eax],al
  413d98:	sub    al,0xd9
  413d9a:	inc    ecx
  413d9b:	add    BYTE PTR [eax+eax*1+0x183800c6],al
  413da2:	add    BYTE PTR [eax],al
  413da4:	test   cl,bl
  413da6:	inc    ecx
  413da7:	add    BYTE PTR [eax+eax*1+0x183800c6],al
  413dae:	add    BYTE PTR [eax],al
  413db0:	pop    esp
  413db1:	fild   DWORD PTR [ecx+0x0]
  413db4:	add    DWORD PTR [eax],0x52
  413db7:	add    BYTE PTR [eax+0x8],bh
  413dba:	add    BYTE PTR [eax],al
  413dbc:	ins    BYTE PTR es:[edi],dx
  413dbd:	fadd   QWORD PTR [ecx+0x0]
  413dc0:	add    DWORD PTR [eax],0x52
  413dc3:	add    BYTE PTR [eax+0x8],bh
  413dc6:	add    BYTE PTR [eax],al
  413dc8:	sbb    al,0xdd
  413dca:	inc    ecx
  413dcb:	add    BYTE PTR [edx+0x18005200],al
  413dd1:	or     BYTE PTR [eax],al
  413dd3:	add    BYTE PTR [eax-0x7dffbe23],bh
  413dd9:	add    BYTE PTR [edx+0x0],dl
  413ddc:	sbb    BYTE PTR [eax],cl
  413dde:	add    BYTE PTR [eax],al
  413de0:	push   esp
  413de1:	fiadd  DWORD PTR [ecx+0x0]
  413de4:	add    BYTE PTR [eax],0x52
  413de7:	add    BYTE PTR [eax],bl
  413de9:	sbb    BYTE PTR [eax],al
  413deb:	add    BYTE PTR [edx+ebx*8+0x820041],bl
  413df2:	push   edx
  413df3:	add    BYTE PTR [eax],bl
  413df5:	sbb    BYTE PTR [eax],al
  413df7:	add    BYTE PTR [eax-0x25],dl
  413dfa:	inc    ecx
  413dfb:	add    BYTE PTR [edx+edi*1+0x838000a],al
  413e02:	add    BYTE PTR [eax],al
  413e04:	pusha  
  413e05:	fadd   QWORD PTR [ecx+0x0]
  413e08:	test   BYTE PTR [edx],bh
  413e0a:	or     al,BYTE PTR [eax]
  413e0c:	cmp    BYTE PTR [eax],cl
  413e0e:	add    BYTE PTR [eax],al
  413e10:	push   eax
  413e11:	fild   DWORD PTR [ecx+0x0]
  413e14:	test   BYTE PTR [edx],bh
  413e16:	or     eax,DWORD PTR [eax]
  413e18:	cmp    BYTE PTR [eax],cl
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	dec    eax
  413e1d:	fadd   QWORD PTR [ecx+0x0]
  413e20:	test   BYTE PTR [edx],bh
  413e22:	or     eax,DWORD PTR [eax]
  413e24:	cmp    BYTE PTR [eax],cl
  413e26:	add    BYTE PTR [eax],al
  413e28:	adc    ch,bl
  413e2a:	inc    ecx
  413e2b:	add    BYTE PTR [ebx+0x3800083a],al
  413e31:	or     BYTE PTR [eax],al
  413e33:	add    BYTE PTR [ebp+ebx*8+0x3a830041],ch
  413e3a:	or     BYTE PTR [eax],al
  413e3c:	cmp    BYTE PTR [eax],cl
  413e3e:	add    BYTE PTR [eax],al
  413e40:	dec    eax
  413e41:	fiadd  DWORD PTR [ecx+0x0]
  413e44:	cmp    DWORD PTR [edx],0x8
  413e47:	add    BYTE PTR [eax],bh
  413e49:	sbb    BYTE PTR [eax],al
  413e4b:	add    BYTE PTR [eax-0x7cffbe26],dl
  413e51:	cmp    cl,BYTE PTR [eax]
  413e53:	add    BYTE PTR [eax],bh
  413e55:	sbb    BYTE PTR [eax],al
  413e57:	add    BYTE PTR [eax],dl
  413e59:	fld    QWORD PTR [ecx+0x0]
  413e5c:	cmp    DWORD PTR [edx],0x9
  413e5f:	add    BYTE PTR [eax],bh
  413e61:	or     BYTE PTR [eax],al
  413e63:	add    BYTE PTR [ebp+ebx*8+0x3a830041],cl
  413e6a:	or     DWORD PTR [eax],eax
  413e6c:	cmp    BYTE PTR [eax],cl
  413e6e:	add    BYTE PTR [eax],al
  413e70:	dec    eax
  413e71:	fiadd  DWORD PTR [ecx+0x0]
  413e74:	cmp    DWORD PTR [edx],0x9
  413e77:	add    BYTE PTR [eax],bh
  413e79:	sbb    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [edx+ebx*8+0x41],bh
  413e7f:	add    BYTE PTR [ebx+0x3800093a],al
  413e85:	sbb    BYTE PTR [eax],al
  413e87:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413e8b:	add    BYTE PTR [ebx+0x78005300],al
  413e91:	or     BYTE PTR [eax],al
  413e93:	add    ah,dh
  413e95:	fild   DWORD PTR [ecx+0x0]
  413e98:	add    DWORD PTR [eax],0x53
  413e9b:	add    BYTE PTR [eax+0x8],bh
  413e9e:	add    BYTE PTR [eax],al
  413ea0:	sbb    al,0xdd
  413ea2:	inc    ecx
  413ea3:	add    BYTE PTR [edx+0x18005300],al
  413ea9:	or     BYTE PTR [eax],al
  413eab:	add    BYTE PTR [eax-0x7dffbe23],bh
  413eb1:	add    BYTE PTR [ebx+0x0],dl
  413eb4:	sbb    BYTE PTR [eax],cl
  413eb6:	add    BYTE PTR [eax],al
  413eb8:	push   esp
  413eb9:	fiadd  DWORD PTR [ecx+0x0]
  413ebc:	add    BYTE PTR [eax],0x53
  413ebf:	add    BYTE PTR [eax],bl
  413ec1:	sbb    BYTE PTR [eax],al
  413ec3:	add    BYTE PTR [edx+ebx*8+0x820041],bl
  413eca:	push   ebx
  413ecb:	add    BYTE PTR [eax],bl
  413ecd:	sbb    BYTE PTR [eax],al
  413ecf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413ed3:	add    BYTE PTR [ebx+0x3800ef00],al
  413ed9:	or     BYTE PTR [eax],al
  413edb:	add    BYTE PTR [eax-0x7cffbe24],dl
  413ee1:	add    bh,ch
  413ee3:	add    BYTE PTR [eax],bh
  413ee5:	or     BYTE PTR [eax],al
  413ee7:	add    BYTE PTR [eax],bh
  413ee9:	fld    DWORD PTR [ecx+0x0]
  413eec:	add    DWORD PTR [eax],0xffffffef
  413eef:	add    BYTE PTR [eax],bh
  413ef1:	sbb    BYTE PTR [eax],al
  413ef3:	add    BYTE PTR [eax],dh
  413ef5:	fiadd  DWORD PTR [ecx+0x0]
  413ef8:	add    DWORD PTR [eax],0xffffffef
  413efb:	add    BYTE PTR [eax],bh
  413efd:	sbb    BYTE PTR [eax],al
  413eff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413f03:	add    BYTE PTR [ebx+0x38006100],al
  413f09:	or     BYTE PTR [eax],al
  413f0b:	add    BYTE PTR [eax],bl
  413f0d:	fadd   QWORD PTR [ecx+0x0]
  413f10:	add    DWORD PTR [eax],0x61
  413f13:	add    BYTE PTR [eax],bh
  413f15:	or     BYTE PTR [eax],al
  413f17:	add    BYTE PTR [eax],bh
  413f19:	fld    DWORD PTR [ecx+0x0]
  413f1c:	add    DWORD PTR [eax],0x61
  413f1f:	add    BYTE PTR [eax],bh
  413f21:	sbb    BYTE PTR [eax],al
  413f23:	add    ah,bl
  413f25:	fld    DWORD PTR [ecx+0x0]
  413f28:	add    DWORD PTR [eax],0x61
  413f2b:	add    BYTE PTR [eax],bh
  413f2d:	sbb    BYTE PTR [eax],al
  413f2f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413f33:	add    BYTE PTR [ebx+0x38006c00],al
  413f39:	or     BYTE PTR [eax],al
  413f3b:	add    al,al
  413f3d:	fild   DWORD PTR [ecx+0x0]
  413f40:	add    DWORD PTR [eax],0x6c
  413f43:	add    BYTE PTR [eax],bh
  413f45:	or     BYTE PTR [eax],al
  413f47:	add    BYTE PTR [eax],bh
  413f49:	fld    DWORD PTR [ecx+0x0]
  413f4c:	add    DWORD PTR [eax],0x6c
  413f4f:	add    BYTE PTR [eax],bh
  413f51:	sbb    BYTE PTR [eax],al
  413f53:	add    BYTE PTR [eax-0x7cffbe27],dl
  413f59:	add    BYTE PTR [eax+eax*1+0x38],ch
  413f5d:	sbb    BYTE PTR [eax],al
  413f5f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413f63:	add    BYTE PTR [ebx+0x38006200],al
  413f69:	or     BYTE PTR [eax],al
  413f6b:	add    ah,dh
  413f6d:	fild   DWORD PTR [ecx+0x0]
  413f70:	add    DWORD PTR [eax],0x62
  413f73:	add    BYTE PTR [eax],bh
  413f75:	or     BYTE PTR [eax],al
  413f77:	add    BYTE PTR [eax],bh
  413f79:	fld    DWORD PTR [ecx+0x0]
  413f7c:	add    DWORD PTR [eax],0x62
  413f7f:	add    BYTE PTR [eax],bh
  413f81:	sbb    BYTE PTR [eax],al
  413f83:	add    ah,al
  413f85:	fld    DWORD PTR [ecx+0x0]
  413f88:	add    DWORD PTR [eax],0x62
  413f8b:	add    BYTE PTR [eax],bh
  413f8d:	sbb    BYTE PTR [eax],al
  413f8f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413f93:	add    BYTE PTR [ebx+0x38006000],al
  413f99:	or     BYTE PTR [eax],al
  413f9b:	add    BYTE PTR [esp+ebx*8],bh
  413f9e:	inc    ecx
  413f9f:	add    BYTE PTR [ebx+0x38006000],al
  413fa5:	or     BYTE PTR [eax],al
  413fa7:	add    BYTE PTR [eax],bh
  413fa9:	fld    DWORD PTR [ecx+0x0]
  413fac:	add    DWORD PTR [eax],0x60
  413faf:	add    BYTE PTR [eax],bh
  413fb1:	sbb    BYTE PTR [eax],al
  413fb3:	add    BYTE PTR [eax],al
  413fb5:	fiadd  DWORD PTR [ecx+0x0]
  413fb8:	add    DWORD PTR [eax],0x60
  413fbb:	add    BYTE PTR [eax],bh
  413fbd:	sbb    BYTE PTR [eax],al
  413fbf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413fc3:	add    BYTE PTR [ebx+0x38006900],al
  413fc9:	or     BYTE PTR [eax],al
  413fcb:	add    BYTE PTR [eax],bl
  413fcd:	fadd   QWORD PTR [ecx+0x0]
  413fd0:	add    DWORD PTR [eax],0x69
  413fd3:	add    BYTE PTR [eax],bh
  413fd5:	or     BYTE PTR [eax],al
  413fd7:	add    BYTE PTR [eax],bh
  413fd9:	fld    DWORD PTR [ecx+0x0]
  413fdc:	add    DWORD PTR [eax],0x69
  413fdf:	add    BYTE PTR [eax],bh
  413fe1:	sbb    BYTE PTR [eax],al
  413fe3:	add    ah,bl
  413fe5:	fld    DWORD PTR [ecx+0x0]
  413fe8:	add    DWORD PTR [eax],0x69
  413feb:	add    BYTE PTR [eax],bh
  413fed:	sbb    BYTE PTR [eax],al
  413fef:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  413ff3:	add    BYTE PTR [ebx+0x38006d00],al
  413ff9:	or     BYTE PTR [eax],al
  413ffb:	add    al,al
  413ffd:	fild   DWORD PTR [ecx+0x0]
  414000:	add    DWORD PTR [eax],0x6d
  414003:	add    BYTE PTR [eax],bh
  414005:	or     BYTE PTR [eax],al
  414007:	add    BYTE PTR [eax],bh
  414009:	fld    DWORD PTR [ecx+0x0]
  41400c:	add    DWORD PTR [eax],0x6d
  41400f:	add    BYTE PTR [eax],bh
  414011:	sbb    BYTE PTR [eax],al
  414013:	add    BYTE PTR [eax-0x7cffbe27],dl
  414019:	add    BYTE PTR [ebp+0x0],ch
  41401c:	cmp    BYTE PTR [eax],bl
  41401e:	add    BYTE PTR [eax],al
  414020:	pop    esp
  414021:	fild   DWORD PTR [ecx+0x0]
  414024:	add    DWORD PTR [eax],0x6a
  414027:	add    BYTE PTR [eax],bh
  414029:	or     BYTE PTR [eax],al
  41402b:	add    ah,dh
  41402d:	fild   DWORD PTR [ecx+0x0]
  414030:	add    DWORD PTR [eax],0x6a
  414033:	add    BYTE PTR [eax],bh
  414035:	or     BYTE PTR [eax],al
  414037:	add    BYTE PTR [eax],bh
  414039:	fld    DWORD PTR [ecx+0x0]
  41403c:	add    DWORD PTR [eax],0x6a
  41403f:	add    BYTE PTR [eax],bh
  414041:	sbb    BYTE PTR [eax],al
  414043:	add    ah,al
  414045:	fld    DWORD PTR [ecx+0x0]
  414048:	add    DWORD PTR [eax],0x6a
  41404b:	add    BYTE PTR [eax],bh
  41404d:	sbb    BYTE PTR [eax],al
  41404f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414053:	add    BYTE PTR [ebx+0x38006800],al
  414059:	or     BYTE PTR [eax],al
  41405b:	add    BYTE PTR [esp+ebx*8],bh
  41405e:	inc    ecx
  41405f:	add    BYTE PTR [ebx+0x38006800],al
  414065:	or     BYTE PTR [eax],al
  414067:	add    BYTE PTR [eax],bh
  414069:	fld    DWORD PTR [ecx+0x0]
  41406c:	add    DWORD PTR [eax],0x68
  41406f:	add    BYTE PTR [eax],bh
  414071:	sbb    BYTE PTR [eax],al
  414073:	add    BYTE PTR [eax],al
  414075:	fiadd  DWORD PTR [ecx+0x0]
  414078:	add    DWORD PTR [eax],0x68
  41407b:	add    BYTE PTR [eax],bh
  41407d:	sbb    BYTE PTR [eax],al
  41407f:	add    BYTE PTR [ebx*8+0x38820041],bl
  414086:	pop    ss
  414087:	add    BYTE PTR [eax],bh
  414089:	or     BYTE PTR [eax],al
  41408b:	add    ah,bh
  41408d:	fld    QWORD PTR [ecx+0x0]
  414090:	cmp    BYTE PTR [eax],0x17
  414093:	add    BYTE PTR [eax],bh
  414095:	or     BYTE PTR [eax],al
  414097:	add    BYTE PTR [edx+ebx*8+0x41],dl
  41409b:	add    BYTE PTR [edx+0x38001738],al
  4140a1:	sbb    BYTE PTR [eax],al
  4140a3:	add    al,al
  4140a5:	fiadd  DWORD PTR [ecx+0x0]
  4140a8:	cmp    BYTE PTR [eax],0x17
  4140ab:	add    BYTE PTR [eax],bh
  4140ad:	sbb    BYTE PTR [eax],al
  4140af:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4140b3:	add    BYTE PTR [ebx+0x3800f900],al
  4140b9:	or     BYTE PTR [eax],al
  4140bb:	add    BYTE PTR [eax],bl
  4140bd:	fadd   QWORD PTR [ecx+0x0]
  4140c0:	add    DWORD PTR [eax],0xfffffff9
  4140c3:	add    BYTE PTR [eax],bh
  4140c5:	or     BYTE PTR [eax],al
  4140c7:	add    BYTE PTR [eax],bh
  4140c9:	fld    DWORD PTR [ecx+0x0]
  4140cc:	add    DWORD PTR [eax],0xfffffff9
  4140cf:	add    BYTE PTR [eax],bh
  4140d1:	sbb    BYTE PTR [eax],al
  4140d3:	add    ah,bl
  4140d5:	fld    DWORD PTR [ecx+0x0]
  4140d8:	add    DWORD PTR [eax],0xfffffff9
  4140db:	add    BYTE PTR [eax],bh
  4140dd:	sbb    BYTE PTR [eax],al
  4140df:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4140e3:	add    BYTE PTR [ebx+0x3800d900],al
  4140e9:	or     BYTE PTR [eax],al
  4140eb:	add    BYTE PTR [eax],bl
  4140ed:	fadd   QWORD PTR [ecx+0x0]
  4140f0:	add    DWORD PTR [eax],0xffffffd9
  4140f3:	add    BYTE PTR [eax],bh
  4140f5:	or     BYTE PTR [eax],al
  4140f7:	add    BYTE PTR [eax],bh
  4140f9:	fld    DWORD PTR [ecx+0x0]
  4140fc:	add    DWORD PTR [eax],0xffffffd9
  4140ff:	add    BYTE PTR [eax],bh
  414101:	sbb    BYTE PTR [eax],al
  414103:	add    ah,bl
  414105:	fld    DWORD PTR [ecx+0x0]
  414108:	add    DWORD PTR [eax],0xffffffd9
  41410b:	add    BYTE PTR [eax],bh
  41410d:	sbb    BYTE PTR [eax],al
  41410f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414113:	add    BYTE PTR [ebx+0x3800d800],al
  414119:	or     BYTE PTR [eax],al
  41411b:	add    BYTE PTR [esp+ebx*8],bh
  41411e:	inc    ecx
  41411f:	add    BYTE PTR [ebx+0x3800d800],al
  414125:	or     BYTE PTR [eax],al
  414127:	add    BYTE PTR [eax],bh
  414129:	fld    DWORD PTR [ecx+0x0]
  41412c:	add    DWORD PTR [eax],0xffffffd8
  41412f:	add    BYTE PTR [eax],bh
  414131:	sbb    BYTE PTR [eax],al
  414133:	add    BYTE PTR [eax],al
  414135:	fiadd  DWORD PTR [ecx+0x0]
  414138:	add    DWORD PTR [eax],0xffffffd8
  41413b:	add    BYTE PTR [eax],bh
  41413d:	sbb    BYTE PTR [eax],al
  41413f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414143:	add    BYTE PTR [ebx+0x3800e900],al
  414149:	or     BYTE PTR [eax],al
  41414b:	add    BYTE PTR [eax],bl
  41414d:	fadd   QWORD PTR [ecx+0x0]
  414150:	add    DWORD PTR [eax],0xffffffe9
  414153:	add    BYTE PTR [eax],bh
  414155:	or     BYTE PTR [eax],al
  414157:	add    BYTE PTR [eax],bh
  414159:	fld    DWORD PTR [ecx+0x0]
  41415c:	add    DWORD PTR [eax],0xffffffe9
  41415f:	add    BYTE PTR [eax],bh
  414161:	sbb    BYTE PTR [eax],al
  414163:	add    ah,bl
  414165:	fld    DWORD PTR [ecx+0x0]
  414168:	add    DWORD PTR [eax],0xffffffe9
  41416b:	add    BYTE PTR [eax],bh
  41416d:	sbb    BYTE PTR [eax],al
  41416f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414173:	add    BYTE PTR [ebx+0x3800e800],al
  414179:	or     BYTE PTR [eax],al
  41417b:	add    BYTE PTR [esp+ebx*8],bh
  41417e:	inc    ecx
  41417f:	add    BYTE PTR [ebx+0x3800e800],al
  414185:	or     BYTE PTR [eax],al
  414187:	add    BYTE PTR [eax],bh
  414189:	fld    DWORD PTR [ecx+0x0]
  41418c:	add    DWORD PTR [eax],0xffffffe8
  41418f:	add    BYTE PTR [eax],bh
  414191:	sbb    BYTE PTR [eax],al
  414193:	add    BYTE PTR [eax],al
  414195:	fiadd  DWORD PTR [ecx+0x0]
  414198:	add    DWORD PTR [eax],0xffffffe8
  41419b:	add    BYTE PTR [eax],bh
  41419d:	sbb    BYTE PTR [eax],al
  41419f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4141a3:	add    BYTE PTR [ebx+0x3800fb00],al
  4141a9:	or     BYTE PTR [eax],al
  4141ab:	add    al,al
  4141ad:	fild   DWORD PTR [ecx+0x0]
  4141b0:	add    DWORD PTR [eax],0xfffffffb
  4141b3:	add    BYTE PTR [eax],bh
  4141b5:	or     BYTE PTR [eax],al
  4141b7:	add    BYTE PTR [eax],bh
  4141b9:	fld    DWORD PTR [ecx+0x0]
  4141bc:	add    DWORD PTR [eax],0xfffffffb
  4141bf:	add    BYTE PTR [eax],bh
  4141c1:	sbb    BYTE PTR [eax],al
  4141c3:	add    BYTE PTR [eax-0x7cffbe27],dl
  4141c9:	add    bl,bh
  4141cb:	add    BYTE PTR [eax],bh
  4141cd:	sbb    BYTE PTR [eax],al
  4141cf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4141d3:	add    BYTE PTR [ebx+0x3800fa00],al
  4141d9:	or     BYTE PTR [eax],al
  4141db:	add    ah,dh
  4141dd:	fild   DWORD PTR [ecx+0x0]
  4141e0:	add    DWORD PTR [eax],0xfffffffa
  4141e3:	add    BYTE PTR [eax],bh
  4141e5:	or     BYTE PTR [eax],al
  4141e7:	add    BYTE PTR [eax],bh
  4141e9:	fld    DWORD PTR [ecx+0x0]
  4141ec:	add    DWORD PTR [eax],0xfffffffa
  4141ef:	add    BYTE PTR [eax],bh
  4141f1:	sbb    BYTE PTR [eax],al
  4141f3:	add    ah,al
  4141f5:	fld    DWORD PTR [ecx+0x0]
  4141f8:	add    DWORD PTR [eax],0xfffffffa
  4141fb:	add    BYTE PTR [eax],bh
  4141fd:	sbb    BYTE PTR [eax],al
  4141ff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414203:	add    BYTE PTR [ebx+0x3800f800],al
  414209:	or     BYTE PTR [eax],al
  41420b:	add    BYTE PTR [esp+ebx*8],bh
  41420e:	inc    ecx
  41420f:	add    BYTE PTR [ebx+0x3800f800],al
  414215:	or     BYTE PTR [eax],al
  414217:	add    BYTE PTR [eax],bh
  414219:	fld    DWORD PTR [ecx+0x0]
  41421c:	add    DWORD PTR [eax],0xfffffff8
  41421f:	add    BYTE PTR [eax],bh
  414221:	sbb    BYTE PTR [eax],al
  414223:	add    BYTE PTR [eax],al
  414225:	fiadd  DWORD PTR [ecx+0x0]
  414228:	add    DWORD PTR [eax],0xfffffff8
  41422b:	add    BYTE PTR [eax],bh
  41422d:	sbb    BYTE PTR [eax],al
  41422f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414233:	add    BYTE PTR [ebx+0x3800d100],al
  414239:	or     BYTE PTR [eax],al
  41423b:	add    al,al
  41423d:	fild   DWORD PTR [ecx+0x0]
  414240:	add    DWORD PTR [eax],0xffffffd1
  414243:	add    BYTE PTR [eax],bh
  414245:	or     BYTE PTR [eax],al
  414247:	add    BYTE PTR [ebx*8+0xab0041],al
  41424e:	jno    0x414250
  414250:	cmp    BYTE PTR [eax],cl
  414252:	add    BYTE PTR [eax],al
  414254:	push   eax
  414255:	fld    DWORD PTR [ecx+0x0]
  414258:	add    DWORD PTR [eax],0xffffffd1
  41425b:	add    BYTE PTR [eax],bh
  41425d:	sbb    BYTE PTR [eax],al
  41425f:	add    BYTE PTR [edx+ebx*8],cl
  414262:	inc    ecx
  414263:	add    BYTE PTR [ebx+0x3800d100],al
  414269:	sbb    BYTE PTR [eax],al
  41426b:	add    BYTE PTR [edx+ebx*8],bh
  41426e:	inc    ecx
  41426f:	add    BYTE PTR [ebx+0x38007100],ch
  414275:	sbb    BYTE PTR [eax],al
  414277:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41427b:	add    BYTE PTR [ebx+0x38004538],al
  414281:	sub    BYTE PTR [eax],al
  414283:	add    al,al
  414285:	fild   DWORD PTR [ecx+0x0]
  414288:	cmp    DWORD PTR [eax],0x45
  41428b:	add    BYTE PTR [eax],bh
  41428d:	sub    BYTE PTR [eax],al
  41428f:	add    BYTE PTR [eax],bh
  414291:	fld    DWORD PTR [ecx+0x0]
  414294:	cmp    DWORD PTR [eax],0x45
  414297:	add    BYTE PTR [eax],bh
  414299:	cmp    BYTE PTR [eax],al
  41429b:	add    BYTE PTR [eax-0x7cffbe27],dl
  4142a1:	cmp    BYTE PTR [ebp+0x0],al
  4142a4:	cmp    BYTE PTR [eax],bh
  4142a6:	add    BYTE PTR [eax],al
  4142a8:	pop    esp
  4142a9:	fild   DWORD PTR [ecx+0x0]
  4142ac:	cmp    DWORD PTR [eax],0x45
  4142af:	add    BYTE PTR [eax],bh
  4142b1:	or     BYTE PTR [eax],al
  4142b3:	add    ah,dh
  4142b5:	fild   DWORD PTR [ecx+0x0]
  4142b8:	cmp    DWORD PTR [eax],0x45
  4142bb:	add    BYTE PTR [eax],bh
  4142bd:	or     BYTE PTR [eax],al
  4142bf:	add    BYTE PTR [eax],bh
  4142c1:	fld    DWORD PTR [ecx+0x0]
  4142c4:	cmp    DWORD PTR [eax],0x45
  4142c7:	add    BYTE PTR [eax],bh
  4142c9:	sbb    BYTE PTR [eax],al
  4142cb:	add    ah,al
  4142cd:	fld    DWORD PTR [ecx+0x0]
  4142d0:	cmp    DWORD PTR [eax],0x45
  4142d3:	add    BYTE PTR [eax],bh
  4142d5:	sbb    BYTE PTR [eax],al
  4142d7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4142db:	add    BYTE PTR [ebx+0x3800d300],al
  4142e1:	or     BYTE PTR [eax],al
  4142e3:	add    al,al
  4142e5:	fild   DWORD PTR [ecx+0x0]
  4142e8:	add    DWORD PTR [eax],0xffffffd3
  4142eb:	add    BYTE PTR [eax],bh
  4142ed:	or     BYTE PTR [eax],al
  4142ef:	add    BYTE PTR [ebx*8+0xab0041],al
  4142f6:	jae    0x4142f8
  4142f8:	cmp    BYTE PTR [eax],cl
  4142fa:	add    BYTE PTR [eax],al
  4142fc:	push   eax
  4142fd:	fld    DWORD PTR [ecx+0x0]
  414300:	add    DWORD PTR [eax],0xffffffd3
  414303:	add    BYTE PTR [eax],bh
  414305:	sbb    BYTE PTR [eax],al
  414307:	add    BYTE PTR [edx+ebx*8],cl
  41430a:	inc    ecx
  41430b:	add    BYTE PTR [ebx+0x3800d300],al
  414311:	sbb    BYTE PTR [eax],al
  414313:	add    BYTE PTR [edx+ebx*8],bh
  414316:	inc    ecx
  414317:	add    BYTE PTR [ebx+0x38007300],ch
  41431d:	sbb    BYTE PTR [eax],al
  41431f:	add    BYTE PTR [ebx*8+0xbb0041],al
  414326:	jae    0x414328
  414328:	cmp    BYTE PTR [eax],cl
  41432a:	add    BYTE PTR [eax],al
  41432c:	cmp    al,0xda
  41432e:	inc    ecx
  41432f:	add    BYTE PTR [ebx+0x38007300],bh
  414335:	sbb    BYTE PTR [eax],al
  414337:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41433b:	add    BYTE PTR [ebx+0x3800d200],al
  414341:	or     BYTE PTR [eax],al
  414343:	add    al,al
  414345:	fild   DWORD PTR [ecx+0x0]
  414348:	add    DWORD PTR [eax],0xffffffd2
  41434b:	add    BYTE PTR [eax],bh
  41434d:	or     BYTE PTR [eax],al
  41434f:	add    BYTE PTR [ebx*8+0xab0041],al
  414356:	jb     0x414358
  414358:	cmp    BYTE PTR [eax],cl
  41435a:	add    BYTE PTR [eax],al
  41435c:	push   eax
  41435d:	fld    DWORD PTR [ecx+0x0]
  414360:	add    DWORD PTR [eax],0xffffffd2
  414363:	add    BYTE PTR [eax],bh
  414365:	sbb    BYTE PTR [eax],al
  414367:	add    BYTE PTR [edx+ebx*8],cl
  41436a:	inc    ecx
  41436b:	add    BYTE PTR [ebx+0x3800d200],al
  414371:	sbb    BYTE PTR [eax],al
  414373:	add    BYTE PTR [edx+ebx*8],bh
  414376:	inc    ecx
  414377:	add    BYTE PTR [ebx+0x38007200],ch
  41437d:	sbb    BYTE PTR [eax],al
  41437f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414383:	add    BYTE PTR [ebx+0x3800e100],al
  414389:	or     BYTE PTR [eax],al
  41438b:	add    al,al
  41438d:	fild   DWORD PTR [ecx+0x0]
  414390:	add    DWORD PTR [eax],0xffffffe1
  414393:	add    BYTE PTR [eax],bh
  414395:	or     BYTE PTR [eax],al
  414397:	add    BYTE PTR [ebx*8+0xcb0041],al
  41439e:	jno    0x4143a0
  4143a0:	cmp    BYTE PTR [eax],cl
  4143a2:	add    BYTE PTR [eax],al
  4143a4:	push   eax
  4143a5:	fld    DWORD PTR [ecx+0x0]
  4143a8:	add    DWORD PTR [eax],0xffffffe1
  4143ab:	add    BYTE PTR [eax],bh
  4143ad:	sbb    BYTE PTR [eax],al
  4143af:	add    BYTE PTR [edx+ebx*8],cl
  4143b2:	inc    ecx
  4143b3:	add    BYTE PTR [ebx+0x3800e100],al
  4143b9:	sbb    BYTE PTR [eax],al
  4143bb:	add    BYTE PTR [edx+ebx*8],bh
  4143be:	inc    ecx
  4143bf:	add    bl,cl
  4143c1:	add    BYTE PTR [ecx+0x0],dh
  4143c4:	cmp    BYTE PTR [eax],bl
  4143c6:	add    BYTE PTR [eax],al
  4143c8:	pop    esp
  4143c9:	fild   DWORD PTR [ecx+0x0]
  4143cc:	cmp    DWORD PTR [eax],0x46
  4143cf:	add    BYTE PTR [eax],bh
  4143d1:	or     BYTE PTR [eax],al
  4143d3:	add    ah,dh
  4143d5:	fild   DWORD PTR [ecx+0x0]
  4143d8:	cmp    DWORD PTR [eax],0x46
  4143db:	add    BYTE PTR [eax],bh
  4143dd:	or     BYTE PTR [eax],al
  4143df:	add    BYTE PTR [eax],bh
  4143e1:	fld    DWORD PTR [ecx+0x0]
  4143e4:	cmp    DWORD PTR [eax],0x46
  4143e7:	add    BYTE PTR [eax],bh
  4143e9:	sbb    BYTE PTR [eax],al
  4143eb:	add    ah,al
  4143ed:	fld    DWORD PTR [ecx+0x0]
  4143f0:	cmp    DWORD PTR [eax],0x46
  4143f3:	add    BYTE PTR [eax],bh
  4143f5:	sbb    BYTE PTR [eax],al
  4143f7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4143fb:	add    BYTE PTR [ebx+0x3800e200],al
  414401:	or     BYTE PTR [eax],al
  414403:	add    al,al
  414405:	fild   DWORD PTR [ecx+0x0]
  414408:	add    DWORD PTR [eax],0xffffffe2
  41440b:	add    BYTE PTR [eax],bh
  41440d:	or     BYTE PTR [eax],al
  41440f:	add    BYTE PTR [ebx*8+0xcb0041],al
  414416:	jb     0x414418
  414418:	cmp    BYTE PTR [eax],cl
  41441a:	add    BYTE PTR [eax],al
  41441c:	push   eax
  41441d:	fld    DWORD PTR [ecx+0x0]
  414420:	add    DWORD PTR [eax],0xffffffe2
  414423:	add    BYTE PTR [eax],bh
  414425:	sbb    BYTE PTR [eax],al
  414427:	add    BYTE PTR [edx+ebx*8],cl
  41442a:	inc    ecx
  41442b:	add    BYTE PTR [ebx+0x3800e200],al
  414431:	sbb    BYTE PTR [eax],al
  414433:	add    BYTE PTR [edx+ebx*8],bh
  414436:	inc    ecx
  414437:	add    bl,cl
  414439:	add    BYTE PTR [edx+0x0],dh
  41443c:	cmp    BYTE PTR [eax],bl
  41443e:	add    BYTE PTR [eax],al
  414440:	pop    esp
  414441:	fild   DWORD PTR [ecx+0x0]
  414444:	add    DWORD PTR [eax],0xfffffff1
  414447:	add    BYTE PTR [eax],bh
  414449:	or     BYTE PTR [eax],al
  41444b:	add    al,al
  41444d:	fild   DWORD PTR [ecx+0x0]
  414450:	add    DWORD PTR [eax],0xfffffff1
  414453:	add    BYTE PTR [eax],bh
  414455:	or     BYTE PTR [eax],al
  414457:	add    BYTE PTR [ebx*8+0xeb0041],al
  41445e:	jno    0x414460
  414460:	cmp    BYTE PTR [eax],cl
  414462:	add    BYTE PTR [eax],al
  414464:	push   eax
  414465:	fld    DWORD PTR [ecx+0x0]
  414468:	add    DWORD PTR [eax],0xfffffff1
  41446b:	add    BYTE PTR [eax],bh
  41446d:	sbb    BYTE PTR [eax],al
  41446f:	add    BYTE PTR [edx+ebx*8],cl
  414472:	inc    ecx
  414473:	add    BYTE PTR [ebx+0x3800f100],al
  414479:	sbb    BYTE PTR [eax],al
  41447b:	add    BYTE PTR [edx+ebx*8],bh
  41447e:	inc    ecx
  41447f:	add    bl,ch
  414481:	add    BYTE PTR [ecx+0x0],dh
  414484:	cmp    BYTE PTR [eax],bl
  414486:	add    BYTE PTR [eax],al
  414488:	pop    esp
  414489:	fild   DWORD PTR [ecx+0x0]
  41448c:	cmp    DWORD PTR [eax],0x47
  41448f:	add    BYTE PTR [eax],bh
  414491:	sub    BYTE PTR [eax],al
  414493:	add    al,al
  414495:	fild   DWORD PTR [ecx+0x0]
  414498:	cmp    DWORD PTR [eax],0x47
  41449b:	add    BYTE PTR [eax],bh
  41449d:	sub    BYTE PTR [eax],al
  41449f:	add    BYTE PTR [eax],bh
  4144a1:	fld    DWORD PTR [ecx+0x0]
  4144a4:	cmp    DWORD PTR [eax],0x47
  4144a7:	add    BYTE PTR [eax],bh
  4144a9:	cmp    BYTE PTR [eax],al
  4144ab:	add    BYTE PTR [eax-0x7cffbe27],dl
  4144b1:	cmp    BYTE PTR [edi+0x0],al
  4144b4:	cmp    BYTE PTR [eax],bh
  4144b6:	add    BYTE PTR [eax],al
  4144b8:	pop    esp
  4144b9:	fild   DWORD PTR [ecx+0x0]
  4144bc:	cmp    DWORD PTR [eax],0x47
  4144bf:	add    BYTE PTR [eax],bh
  4144c1:	or     BYTE PTR [eax],al
  4144c3:	add    ah,dh
  4144c5:	fild   DWORD PTR [ecx+0x0]
  4144c8:	cmp    DWORD PTR [eax],0x47
  4144cb:	add    BYTE PTR [eax],bh
  4144cd:	or     BYTE PTR [eax],al
  4144cf:	add    BYTE PTR [eax],bh
  4144d1:	fld    DWORD PTR [ecx+0x0]
  4144d4:	cmp    DWORD PTR [eax],0x47
  4144d7:	add    BYTE PTR [eax],bh
  4144d9:	sbb    BYTE PTR [eax],al
  4144db:	add    ah,al
  4144dd:	fld    DWORD PTR [ecx+0x0]
  4144e0:	cmp    DWORD PTR [eax],0x47
  4144e3:	add    BYTE PTR [eax],bh
  4144e5:	sbb    BYTE PTR [eax],al
  4144e7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4144eb:	add    BYTE PTR [ebx+0x3800f300],al
  4144f1:	or     BYTE PTR [eax],al
  4144f3:	add    al,al
  4144f5:	fild   DWORD PTR [ecx+0x0]
  4144f8:	add    DWORD PTR [eax],0xfffffff3
  4144fb:	add    BYTE PTR [eax],bh
  4144fd:	or     BYTE PTR [eax],al
  4144ff:	add    BYTE PTR [ebx*8+0xeb0041],al
  414506:	jae    0x414508
  414508:	cmp    BYTE PTR [eax],cl
  41450a:	add    BYTE PTR [eax],al
  41450c:	push   eax
  41450d:	fld    DWORD PTR [ecx+0x0]
  414510:	add    DWORD PTR [eax],0xfffffff3
  414513:	add    BYTE PTR [eax],bh
  414515:	sbb    BYTE PTR [eax],al
  414517:	add    BYTE PTR [edx+ebx*8],cl
  41451a:	inc    ecx
  41451b:	add    BYTE PTR [ebx+0x3800f300],al
  414521:	sbb    BYTE PTR [eax],al
  414523:	add    BYTE PTR [edx+ebx*8],bh
  414526:	inc    ecx
  414527:	add    bl,ch
  414529:	add    BYTE PTR [ebx+0x0],dh
  41452c:	cmp    BYTE PTR [eax],bl
  41452e:	add    BYTE PTR [eax],al
  414530:	add    al,0xdd
  414532:	inc    ecx
  414533:	add    bl,bh
  414535:	add    BYTE PTR [ebx+0x0],dh
  414538:	cmp    BYTE PTR [eax],cl
  41453a:	add    BYTE PTR [eax],al
  41453c:	cmp    al,0xda
  41453e:	inc    ecx
  41453f:	add    bl,bh
  414541:	add    BYTE PTR [ebx+0x0],dh
  414544:	cmp    BYTE PTR [eax],bl
  414546:	add    BYTE PTR [eax],al
  414548:	pop    esp
  414549:	fild   DWORD PTR [ecx+0x0]
  41454c:	add    DWORD PTR [eax],0xfffffff2
  41454f:	add    BYTE PTR [eax],bh
  414551:	or     BYTE PTR [eax],al
  414553:	add    al,al
  414555:	fild   DWORD PTR [ecx+0x0]
  414558:	add    DWORD PTR [eax],0xfffffff2
  41455b:	add    BYTE PTR [eax],bh
  41455d:	or     BYTE PTR [eax],al
  41455f:	add    BYTE PTR [ebx*8+0xeb0041],al
  414566:	jb     0x414568
  414568:	cmp    BYTE PTR [eax],cl
  41456a:	add    BYTE PTR [eax],al
  41456c:	push   eax
  41456d:	fld    DWORD PTR [ecx+0x0]
  414570:	add    DWORD PTR [eax],0xfffffff2
  414573:	add    BYTE PTR [eax],bh
  414575:	sbb    BYTE PTR [eax],al
  414577:	add    BYTE PTR [edx+ebx*8],cl
  41457a:	inc    ecx
  41457b:	add    BYTE PTR [ebx+0x3800f200],al
  414581:	sbb    BYTE PTR [eax],al
  414583:	add    BYTE PTR [edx+ebx*8],bh
  414586:	inc    ecx
  414587:	add    bl,ch
  414589:	add    BYTE PTR [edx+0x0],dh
  41458c:	cmp    BYTE PTR [eax],bl
  41458e:	add    BYTE PTR [eax],al
  414590:	pop    esp
  414591:	fild   DWORD PTR [ecx+0x0]
  414594:	cmp    DWORD PTR [eax],0x9
  414597:	add    BYTE PTR [eax],bh
  414599:	or     BYTE PTR [eax],al
  41459b:	add    BYTE PTR [eax],bl
  41459d:	fadd   QWORD PTR [ecx+0x0]
  4145a0:	cmp    DWORD PTR [eax],0x9
  4145a3:	add    BYTE PTR [eax],bh
  4145a5:	or     BYTE PTR [eax],al
  4145a7:	add    BYTE PTR [eax],bh
  4145a9:	fld    DWORD PTR [ecx+0x0]
  4145ac:	cmp    DWORD PTR [eax],0x9
  4145af:	add    BYTE PTR [eax],bh
  4145b1:	sbb    BYTE PTR [eax],al
  4145b3:	add    ah,bl
  4145b5:	fld    DWORD PTR [ecx+0x0]
  4145b8:	cmp    DWORD PTR [eax],0x9
  4145bb:	add    BYTE PTR [eax],bh
  4145bd:	sbb    BYTE PTR [eax],al
  4145bf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4145c3:	add    BYTE PTR [ebx+0x38000a38],al
  4145c9:	or     BYTE PTR [eax],al
  4145cb:	add    ah,dh
  4145cd:	fild   DWORD PTR [ecx+0x0]
  4145d0:	cmp    DWORD PTR [eax],0xa
  4145d3:	add    BYTE PTR [eax],bh
  4145d5:	or     BYTE PTR [eax],al
  4145d7:	add    BYTE PTR [eax],bh
  4145d9:	fld    DWORD PTR [ecx+0x0]
  4145dc:	cmp    DWORD PTR [eax],0xa
  4145df:	add    BYTE PTR [eax],bh
  4145e1:	sbb    BYTE PTR [eax],al
  4145e3:	add    ah,al
  4145e5:	fld    DWORD PTR [ecx+0x0]
  4145e8:	cmp    DWORD PTR [eax],0xa
  4145eb:	add    BYTE PTR [eax],bh
  4145ed:	sbb    BYTE PTR [eax],al
  4145ef:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4145f3:	add    BYTE PTR [ebx+0x38000838],al
  4145f9:	or     BYTE PTR [eax],al
  4145fb:	add    BYTE PTR [esp+ebx*8],bh
  4145fe:	inc    ecx
  4145ff:	add    BYTE PTR [ebx+0x38000838],al
  414605:	or     BYTE PTR [eax],al
  414607:	add    BYTE PTR [eax],bh
  414609:	fld    DWORD PTR [ecx+0x0]
  41460c:	cmp    DWORD PTR [eax],0x8
  41460f:	add    BYTE PTR [eax],bh
  414611:	sbb    BYTE PTR [eax],al
  414613:	add    BYTE PTR [eax],al
  414615:	fiadd  DWORD PTR [ecx+0x0]
  414618:	cmp    DWORD PTR [eax],0x8
  41461b:	add    BYTE PTR [eax],bh
  41461d:	sbb    BYTE PTR [eax],al
  41461f:	add    BYTE PTR [eax],dl
  414621:	fld    QWORD PTR [ecx+0x0]
  414624:	add    DWORD PTR [eax],0x70
  414627:	add    BYTE PTR [eax+0x8],bl
  41462a:	add    BYTE PTR [eax],al
  41462c:	rcr    ch,0x41
  41462f:	add    BYTE PTR [ebx+0x58007000],al
  414635:	or     BYTE PTR [eax],al
  414637:	add    BYTE PTR [eax-0x26],cl
  41463a:	inc    ecx
  41463b:	add    BYTE PTR [ebx+0x58007000],al
  414641:	sbb    BYTE PTR [eax],al
  414643:	add    BYTE PTR [edx+ebx*8+0x830041],ah
  41464a:	jo     0x41464c
  41464c:	pop    eax
  41464d:	sbb    BYTE PTR [eax],al
  41464f:	add    BYTE PTR [eax],dl
  414651:	fld    QWORD PTR [ecx+0x0]
  414654:	add    DWORD PTR [eax],0x70
  414657:	add    BYTE PTR [eax+0x8],bh
  41465a:	add    BYTE PTR [eax],al
  41465c:	rcr    ch,0x41
  41465f:	add    BYTE PTR [ebx+0x78007000],al
  414665:	or     BYTE PTR [eax],al
  414667:	add    BYTE PTR [eax-0x26],cl
  41466a:	inc    ecx
  41466b:	add    BYTE PTR [ebx+0x78007000],al
  414671:	sbb    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edx+ebx*8+0x830041],ah
  41467a:	jo     0x41467c
  41467c:	js     0x414696
  41467e:	add    BYTE PTR [eax],al
  414680:	adc    ch,bl
  414682:	inc    ecx
  414683:	add    BYTE PTR [ebx+0x38007000],al
  414689:	or     BYTE PTR [eax],al
  41468b:	add    BYTE PTR [ebp+ebx*8+0x830041],ch
  414692:	jo     0x414694
  414694:	cmp    BYTE PTR [eax],cl
  414696:	add    BYTE PTR [eax],al
  414698:	dec    eax
  414699:	fiadd  DWORD PTR [ecx+0x0]
  41469c:	add    DWORD PTR [eax],0x70
  41469f:	add    BYTE PTR [eax],bh
  4146a1:	sbb    BYTE PTR [eax],al
  4146a3:	add    BYTE PTR [eax-0x7cffbe26],dl
  4146a9:	add    BYTE PTR [eax+0x0],dh
  4146ac:	cmp    BYTE PTR [eax],bl
  4146ae:	add    BYTE PTR [eax],al
  4146b0:	pop    esp
  4146b1:	fild   DWORD PTR [ecx+0x0]
  4146b4:	cmp    DWORD PTR [eax],0x0
  4146b7:	add    BYTE PTR [eax],bh
  4146b9:	or     BYTE PTR [eax],al
  4146bb:	add    BYTE PTR [esp+ebx*8],bh
  4146be:	inc    ecx
  4146bf:	add    BYTE PTR [ebx+0x38000038],al
  4146c5:	or     BYTE PTR [eax],al
  4146c7:	add    BYTE PTR [eax],bh
  4146c9:	fld    DWORD PTR [ecx+0x0]
  4146cc:	cmp    DWORD PTR [eax],0x0
  4146cf:	add    BYTE PTR [eax],bh
  4146d1:	sbb    BYTE PTR [eax],al
  4146d3:	add    BYTE PTR [eax],al
  4146d5:	fiadd  DWORD PTR [ecx+0x0]
  4146d8:	cmp    DWORD PTR [eax],0x0
  4146db:	add    BYTE PTR [eax],bh
  4146dd:	sbb    BYTE PTR [eax],al
  4146df:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4146e3:	add    BYTE PTR [ebx+0x180095f9],al
  4146e9:	sub    BYTE PTR [eax],al
  4146eb:	add    BYTE PTR [esp+ebx*8-0x67cffbf],dh
  4146f2:	xchg   ebp,eax
  4146f3:	add    BYTE PTR [eax],bl
  4146f5:	or     BYTE PTR [eax],al
  4146f7:	add    BYTE PTR [eax],bl
  4146f9:	fadd   QWORD PTR [ecx+0x0]
  4146fc:	cmp    ecx,0xffffff95
  4146ff:	add    BYTE PTR [eax],bl
  414701:	sub    BYTE PTR [eax],al
  414703:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414707:	add    BYTE PTR [ebx+0x180097f9],al
  41470d:	sub    BYTE PTR [eax],al
  41470f:	add    BYTE PTR [esp+ebx*8-0x67cffbf],bl
  414716:	xchg   edi,eax
  414717:	add    BYTE PTR [eax],bl
  414719:	or     BYTE PTR [eax],al
  41471b:	add    al,al
  41471d:	fild   DWORD PTR [ecx+0x0]
  414720:	cmp    ecx,0xffffff97
  414723:	add    BYTE PTR [eax],bl
  414725:	sub    BYTE PTR [eax],al
  414727:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41472b:	add    BYTE PTR [ebx+0x180096f9],al
  414731:	sub    BYTE PTR [eax],al
  414733:	add    BYTE PTR [eax-0x7cffbe24],ch
  414739:	stc    
  41473a:	xchg   esi,eax
  41473b:	add    BYTE PTR [eax],bl
  41473d:	or     BYTE PTR [eax],al
  41473f:	add    ah,dh
  414741:	fild   DWORD PTR [ecx+0x0]
  414744:	cmp    ecx,0xffffff96
  414747:	add    BYTE PTR [eax],bl
  414749:	sub    BYTE PTR [eax],al
  41474b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41474f:	add    BYTE PTR [ebx+0x180094f9],al
  414755:	sub    BYTE PTR [eax],al
  414757:	add    al,al
  414759:	fadd   QWORD PTR [ecx+0x0]
  41475c:	cmp    ecx,0xffffff94
  41475f:	add    BYTE PTR [eax],bl
  414761:	or     BYTE PTR [eax],al
  414763:	add    BYTE PTR [esp+ebx*8],bh
  414766:	inc    ecx
  414767:	add    BYTE PTR [ebx+0x180094f9],al
  41476d:	sub    BYTE PTR [eax],al
  41476f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414773:	add    BYTE PTR [ebx+0x180099f9],al
  414779:	sub    BYTE PTR [eax],al
  41477b:	add    BYTE PTR [esp+ebx*8-0x67cffbf],dh
  414782:	cdq    
  414783:	add    BYTE PTR [eax],bl
  414785:	or     BYTE PTR [eax],al
  414787:	add    BYTE PTR [eax],bl
  414789:	fadd   QWORD PTR [ecx+0x0]
  41478c:	cmp    ecx,0xffffff99
  41478f:	add    BYTE PTR [eax],bl
  414791:	sub    BYTE PTR [eax],al
  414793:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414797:	add    BYTE PTR [ebx+0x18009bf9],al
  41479d:	sub    BYTE PTR [eax],al
  41479f:	add    BYTE PTR [esp+ebx*8-0x67cffbf],bl
  4147a6:	fwait
  4147a7:	add    BYTE PTR [eax],bl
  4147a9:	or     BYTE PTR [eax],al
  4147ab:	add    al,al
  4147ad:	fild   DWORD PTR [ecx+0x0]
  4147b0:	cmp    ecx,0xffffff9b
  4147b3:	add    BYTE PTR [eax],bl
  4147b5:	sub    BYTE PTR [eax],al
  4147b7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4147bb:	add    BYTE PTR [ebx+0x18009af9],al
  4147c1:	sub    BYTE PTR [eax],al
  4147c3:	add    BYTE PTR [eax-0x7cffbe24],ch
  4147c9:	stc    
  4147ca:	call   0xf400:0x81800
  4147d1:	fild   DWORD PTR [ecx+0x0]
  4147d4:	cmp    ecx,0xffffff9a
  4147d7:	add    BYTE PTR [eax],bl
  4147d9:	sub    BYTE PTR [eax],al
  4147db:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4147df:	add    BYTE PTR [ebx+0x180098f9],al
  4147e5:	sub    BYTE PTR [eax],al
  4147e7:	add    al,al
  4147e9:	fadd   QWORD PTR [ecx+0x0]
  4147ec:	cmp    ecx,0xffffff98
  4147ef:	add    BYTE PTR [eax],bl
  4147f1:	or     BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esp+ebx*8],bh
  4147f6:	inc    ecx
  4147f7:	add    BYTE PTR [ebx+0x180098f9],al
  4147fd:	sub    BYTE PTR [eax],al
  4147ff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414803:	add    BYTE PTR [ebx+0x3800f600],al
  414809:	or     BYTE PTR [eax],al
  41480b:	add    BYTE PTR [esp+ebx*8],bh
  41480e:	inc    ecx
  41480f:	add    BYTE PTR [ebx+0x3800f600],al
  414815:	or     BYTE PTR [eax],al
  414817:	add    BYTE PTR [eax],bh
  414819:	fld    DWORD PTR [ecx+0x0]
  41481c:	add    DWORD PTR [eax],0xfffffff6
  41481f:	add    BYTE PTR [eax],bh
  414821:	sbb    BYTE PTR [eax],al
  414823:	add    BYTE PTR [eax],al
  414825:	fiadd  DWORD PTR [ecx+0x0]
  414828:	add    DWORD PTR [eax],0xfffffff6
  41482b:	add    BYTE PTR [eax],bh
  41482d:	sbb    BYTE PTR [eax],al
  41482f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414833:	add    BYTE PTR [ebx+0x180091f9],al
  414839:	sub    BYTE PTR [eax],al
  41483b:	add    BYTE PTR [esp+ebx*8-0x67cffbf],dh
  414842:	xchg   ecx,eax
  414843:	add    BYTE PTR [eax],bl
  414845:	or     BYTE PTR [eax],al
  414847:	add    BYTE PTR [eax],bl
  414849:	fadd   QWORD PTR [ecx+0x0]
  41484c:	cmp    ecx,0xffffff91
  41484f:	add    BYTE PTR [eax],bl
  414851:	sub    BYTE PTR [eax],al
  414853:	add    BYTE PTR [eax],dl
  414855:	fld    QWORD PTR [ecx+0x0]
  414858:	cmp    eax,0xffffffc1
  41485b:	add    BYTE PTR [eax],bl
  41485d:	or     BYTE PTR [eax],al
  41485f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414863:	add    BYTE PTR [ebx+0x180093f9],al
  414869:	sub    BYTE PTR [eax],al
  41486b:	add    BYTE PTR [esp+ebx*8-0x67cffbf],bl
  414872:	xchg   ebx,eax
  414873:	add    BYTE PTR [eax],bl
  414875:	or     BYTE PTR [eax],al
  414877:	add    al,al
  414879:	fild   DWORD PTR [ecx+0x0]
  41487c:	cmp    ecx,0xffffff93
  41487f:	add    BYTE PTR [eax],bl
  414881:	sub    BYTE PTR [eax],al
  414883:	add    BYTE PTR [eax],dl
  414885:	fld    QWORD PTR [ecx+0x0]
  414888:	cmp    eax,0xffffffc3
  41488b:	add    BYTE PTR [eax],bl
  41488d:	or     BYTE PTR [eax],al
  41488f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414893:	add    BYTE PTR [ebx+0x180092f9],al
  414899:	sub    BYTE PTR [eax],al
  41489b:	add    BYTE PTR [eax-0x7cffbe24],ch
  4148a1:	stc    
  4148a2:	xchg   edx,eax
  4148a3:	add    BYTE PTR [eax],bl
  4148a5:	or     BYTE PTR [eax],al
  4148a7:	add    ah,dh
  4148a9:	fild   DWORD PTR [ecx+0x0]
  4148ac:	cmp    ecx,0xffffff92
  4148af:	add    BYTE PTR [eax],bl
  4148b1:	sub    BYTE PTR [eax],al
  4148b3:	add    BYTE PTR [eax],dl
  4148b5:	fld    QWORD PTR [ecx+0x0]
  4148b8:	cmp    eax,0xffffffc2
  4148bb:	add    BYTE PTR [eax],bl
  4148bd:	or     BYTE PTR [eax],al
  4148bf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4148c3:	add    BYTE PTR [ebx+0x180090f9],al
  4148c9:	sub    BYTE PTR [eax],al
  4148cb:	add    al,al
  4148cd:	fadd   QWORD PTR [ecx+0x0]
  4148d0:	cmp    ecx,0xffffff90
  4148d3:	add    BYTE PTR [eax],bl
  4148d5:	or     BYTE PTR [eax],al
  4148d7:	add    BYTE PTR [esp+ebx*8],bh
  4148da:	inc    ecx
  4148db:	add    BYTE PTR [ebx+0x180090f9],al
  4148e1:	sub    BYTE PTR [eax],al
  4148e3:	add    BYTE PTR [eax],dl
  4148e5:	fld    QWORD PTR [ecx+0x0]
  4148e8:	cmp    eax,0xffffffc0
  4148eb:	add    BYTE PTR [eax],bl
  4148ed:	or     BYTE PTR [eax],al
  4148ef:	add    BYTE PTR [ebx+ebx*8+0x41],al
  4148f3:	add    BYTE PTR [eax+edi*8+0x81800a3],al
  4148fa:	add    BYTE PTR [eax],al
  4148fc:	and    al,0xdc
  4148fe:	inc    ecx
  4148ff:	add    BYTE PTR [eax+edi*8+0x81800a3],al
  414906:	add    BYTE PTR [eax],al
  414908:	sub    bl,bl
  41490a:	inc    ecx
  41490b:	add    BYTE PTR [eax+edi*8+0x281800a3],al
  414912:	add    BYTE PTR [eax],al
  414914:	pop    esp
  414915:	fild   DWORD PTR [ecx+0x0]
  414918:	add    DWORD PTR [eax],0xffffffeb
  41491b:	add    BYTE PTR [eax],bh
  41491d:	or     BYTE PTR [eax],al
  41491f:	add    BYTE PTR [eax-0x7cffbe24],dl
  414925:	add    bl,ch
  414927:	add    BYTE PTR [eax],bh
  414929:	or     BYTE PTR [eax],al
  41492b:	add    BYTE PTR [eax],bh
  41492d:	fld    DWORD PTR [ecx+0x0]
  414930:	add    DWORD PTR [eax],0xffffffeb
  414933:	add    BYTE PTR [eax],bh
  414935:	sbb    BYTE PTR [eax],al
  414937:	add    BYTE PTR [eax],dh
  414939:	fiadd  DWORD PTR [ecx+0x0]
  41493c:	add    DWORD PTR [eax],0xffffffeb
  41493f:	add    BYTE PTR [eax],bh
  414941:	sbb    BYTE PTR [eax],al
  414943:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414947:	add    BYTE PTR [ebx+0x3800f400],al
  41494d:	or     BYTE PTR [eax],al
  41494f:	add    ah,dh
  414951:	fild   DWORD PTR [ecx+0x0]
  414954:	add    DWORD PTR [eax],0xfffffff4
  414957:	add    BYTE PTR [eax],bh
  414959:	or     BYTE PTR [eax],al
  41495b:	add    BYTE PTR [eax],bh
  41495d:	fld    DWORD PTR [ecx+0x0]
  414960:	add    DWORD PTR [eax],0xfffffff4
  414963:	add    BYTE PTR [eax],bh
  414965:	sbb    BYTE PTR [eax],al
  414967:	add    ah,al
  414969:	fld    DWORD PTR [ecx+0x0]
  41496c:	add    DWORD PTR [eax],0xfffffff4
  41496f:	add    BYTE PTR [eax],bh
  414971:	sbb    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414977:	add    BYTE PTR [ebx+0x3800d500],al
  41497d:	or     BYTE PTR [eax],al
  41497f:	add    BYTE PTR [eax],bl
  414981:	fadd   QWORD PTR [ecx+0x0]
  414984:	add    DWORD PTR [eax],0xffffffd5
  414987:	add    BYTE PTR [eax],bh
  414989:	or     BYTE PTR [eax],al
  41498b:	add    BYTE PTR [eax],bh
  41498d:	fld    DWORD PTR [ecx+0x0]
  414990:	add    DWORD PTR [eax],0xffffffd5
  414993:	add    BYTE PTR [eax],bh
  414995:	sbb    BYTE PTR [eax],al
  414997:	add    ah,bl
  414999:	fld    DWORD PTR [ecx+0x0]
  41499c:	add    DWORD PTR [eax],0xffffffd5
  41499f:	add    BYTE PTR [eax],bh
  4149a1:	sbb    BYTE PTR [eax],al
  4149a3:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4149a7:	add    BYTE PTR [ebx+0x38004038],al
  4149ad:	or     BYTE PTR [eax],al
  4149af:	add    ah,dh
  4149b1:	fild   DWORD PTR [ecx+0x0]
  4149b4:	cmp    DWORD PTR [eax],0x40
  4149b7:	add    BYTE PTR [eax],bh
  4149b9:	or     BYTE PTR [eax],al
  4149bb:	add    BYTE PTR [eax],bh
  4149bd:	fld    DWORD PTR [ecx+0x0]
  4149c0:	cmp    DWORD PTR [eax],0x40
  4149c3:	add    BYTE PTR [eax],bh
  4149c5:	sbb    BYTE PTR [eax],al
  4149c7:	add    ah,al
  4149c9:	fld    DWORD PTR [ecx+0x0]
  4149cc:	cmp    DWORD PTR [eax],0x40
  4149cf:	add    BYTE PTR [eax],bh
  4149d1:	sbb    BYTE PTR [eax],al
  4149d3:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4149d7:	add    BYTE PTR [ebx+0x3800e500],al
  4149dd:	or     BYTE PTR [eax],al
  4149df:	add    BYTE PTR [eax],bl
  4149e1:	fadd   QWORD PTR [ecx+0x0]
  4149e4:	add    DWORD PTR [eax],0xffffffe5
  4149e7:	add    BYTE PTR [eax],bh
  4149e9:	or     BYTE PTR [eax],al
  4149eb:	add    BYTE PTR [eax],bh
  4149ed:	fld    DWORD PTR [ecx+0x0]
  4149f0:	add    DWORD PTR [eax],0xffffffe5
  4149f3:	add    BYTE PTR [eax],bh
  4149f5:	sbb    BYTE PTR [eax],al
  4149f7:	add    ah,bl
  4149f9:	fld    DWORD PTR [ecx+0x0]
  4149fc:	add    DWORD PTR [eax],0xffffffe5
  4149ff:	add    BYTE PTR [eax],bh
  414a01:	sbb    BYTE PTR [eax],al
  414a03:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414a07:	add    BYTE PTR [ebx+0x3800e400],al
  414a0d:	or     BYTE PTR [eax],al
  414a0f:	add    BYTE PTR [eax],bl
  414a11:	fadd   QWORD PTR [ecx+0x0]
  414a14:	add    DWORD PTR [eax],0xffffffe4
  414a17:	add    BYTE PTR [eax],bh
  414a19:	or     BYTE PTR [eax],al
  414a1b:	add    BYTE PTR [eax],bh
  414a1d:	fld    DWORD PTR [ecx+0x0]
  414a20:	add    DWORD PTR [eax],0xffffffe4
  414a23:	add    BYTE PTR [eax],bh
  414a25:	sbb    BYTE PTR [eax],al
  414a27:	add    ah,bl
  414a29:	fld    DWORD PTR [ecx+0x0]
  414a2c:	add    DWORD PTR [eax],0xffffffe4
  414a2f:	add    BYTE PTR [eax],bh
  414a31:	sbb    BYTE PTR [eax],al
  414a33:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414a37:	add    BYTE PTR [ebx+0x38000b38],al
  414a3d:	or     BYTE PTR [eax],al
  414a3f:	add    BYTE PTR [eax],bl
  414a41:	fadd   QWORD PTR [ecx+0x0]
  414a44:	cmp    DWORD PTR [eax],0xb
  414a47:	add    BYTE PTR [eax],bh
  414a49:	or     BYTE PTR [eax],al
  414a4b:	add    BYTE PTR [eax],bh
  414a4d:	fld    DWORD PTR [ecx+0x0]
  414a50:	cmp    DWORD PTR [eax],0xb
  414a53:	add    BYTE PTR [eax],bh
  414a55:	sbb    BYTE PTR [eax],al
  414a57:	add    ah,bl
  414a59:	fld    DWORD PTR [ecx+0x0]
  414a5c:	cmp    DWORD PTR [eax],0xb
  414a5f:	add    BYTE PTR [eax],bh
  414a61:	sbb    BYTE PTR [eax],al
  414a63:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414a67:	add    BYTE PTR [ebx+0x38002838],al
  414a6d:	or     BYTE PTR [eax],al
  414a6f:	add    ah,dh
  414a71:	fild   DWORD PTR [ecx+0x0]
  414a74:	cmp    DWORD PTR [eax],0x28
  414a77:	add    BYTE PTR [eax],bh
  414a79:	or     BYTE PTR [eax],al
  414a7b:	add    BYTE PTR [eax],bh
  414a7d:	fld    DWORD PTR [ecx+0x0]
  414a80:	cmp    DWORD PTR [eax],0x28
  414a83:	add    BYTE PTR [eax],bh
  414a85:	sbb    BYTE PTR [eax],al
  414a87:	add    ah,al
  414a89:	fld    DWORD PTR [ecx+0x0]
  414a8c:	cmp    DWORD PTR [eax],0x28
  414a8f:	add    BYTE PTR [eax],bh
  414a91:	sbb    BYTE PTR [eax],al
  414a93:	add    BYTE PTR [ebx*8+0x38820041],bl
  414a9a:	xor    al,0x0
  414a9c:	cmp    BYTE PTR [eax],cl
  414a9e:	add    BYTE PTR [eax],al
  414aa0:	xor    al,0xde
  414aa2:	inc    ecx
  414aa3:	add    BYTE PTR [edx+0x38003438],al
  414aa9:	or     BYTE PTR [eax],al
  414aab:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414aaf:	add    BYTE PTR [edx+0x38003438],al
  414ab5:	sbb    BYTE PTR [eax],al
  414ab7:	add    al,bl
  414ab9:	fiadd  DWORD PTR [ecx+0x0]
  414abc:	cmp    BYTE PTR [eax],0x34
  414abf:	add    BYTE PTR [eax],bh
  414ac1:	sbb    BYTE PTR [eax],al
  414ac3:	add    BYTE PTR [ebx*8+0x38820041],bl
  414aca:	xor    eax,DWORD PTR [eax]
  414acc:	cmp    BYTE PTR [eax],cl
  414ace:	add    BYTE PTR [eax],al
  414ad0:	sbb    dh,bl
  414ad2:	inc    ecx
  414ad3:	add    BYTE PTR [edx+0x38003338],al
  414ad9:	or     BYTE PTR [eax],al
  414adb:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414adf:	add    BYTE PTR [edx+0x38003338],al
  414ae5:	sbb    BYTE PTR [eax],al
  414ae7:	add    al,dl
  414ae9:	fiadd  DWORD PTR [ecx+0x0]
  414aec:	cmp    BYTE PTR [eax],0x33
  414aef:	add    BYTE PTR [eax],bh
  414af1:	sbb    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [ebx*8+0x38820041],bl
  414afa:	xor    eax,0x83800
  414aff:	add    BYTE PTR [eax],bl
  414b01:	fiadd  WORD PTR [ecx+0x0]
  414b04:	cmp    BYTE PTR [eax],0x35
  414b07:	add    BYTE PTR [eax],bh
  414b09:	or     BYTE PTR [eax],al
  414b0b:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414b0f:	add    BYTE PTR [edx+0x38003538],al
  414b15:	sbb    BYTE PTR [eax],al
  414b17:	add    al,dl
  414b19:	fiadd  DWORD PTR [ecx+0x0]
  414b1c:	cmp    BYTE PTR [eax],0x35
  414b1f:	add    BYTE PTR [eax],bh
  414b21:	sbb    BYTE PTR [eax],al
  414b23:	add    BYTE PTR [ebx*8+0x38820041],bl
  414b2a:	xor    BYTE PTR [eax],al
  414b2c:	cmp    BYTE PTR [eax],cl
  414b2e:	add    BYTE PTR [eax],al
  414b30:	sbb    dh,bl
  414b32:	inc    ecx
  414b33:	add    BYTE PTR [edx+0x38003038],al
  414b39:	or     BYTE PTR [eax],al
  414b3b:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414b3f:	add    BYTE PTR [edx+0x38003038],al
  414b45:	sbb    BYTE PTR [eax],al
  414b47:	add    al,dl
  414b49:	fiadd  DWORD PTR [ecx+0x0]
  414b4c:	cmp    BYTE PTR [eax],0x30
  414b4f:	add    BYTE PTR [eax],bh
  414b51:	sbb    BYTE PTR [eax],al
  414b53:	add    BYTE PTR [ebx*8+0x38820041],bl
  414b5a:	xor    al,BYTE PTR [eax]
  414b5c:	cmp    BYTE PTR [eax],cl
  414b5e:	add    BYTE PTR [eax],al
  414b60:	push   eax
  414b61:	fiadd  WORD PTR [ecx+0x0]
  414b64:	cmp    BYTE PTR [eax],0x32
  414b67:	add    BYTE PTR [eax],bh
  414b69:	or     BYTE PTR [eax],al
  414b6b:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414b6f:	add    BYTE PTR [edx+0x38003238],al
  414b75:	sbb    BYTE PTR [eax],al
  414b77:	add    al,ah
  414b79:	fiadd  DWORD PTR [ecx+0x0]
  414b7c:	cmp    BYTE PTR [eax],0x32
  414b7f:	add    BYTE PTR [eax],bh
  414b81:	sbb    BYTE PTR [eax],al
  414b83:	add    BYTE PTR [ebx*8+0x38820041],bl
  414b8a:	xor    DWORD PTR [eax],eax
  414b8c:	cmp    BYTE PTR [eax],cl
  414b8e:	add    BYTE PTR [eax],al
  414b90:	xor    al,0xde
  414b92:	inc    ecx
  414b93:	add    BYTE PTR [edx+0x38003138],al
  414b99:	or     BYTE PTR [eax],al
  414b9b:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414b9f:	add    BYTE PTR [edx+0x38003138],al
  414ba5:	sbb    BYTE PTR [eax],al
  414ba7:	add    al,bl
  414ba9:	fiadd  DWORD PTR [ecx+0x0]
  414bac:	cmp    BYTE PTR [eax],0x31
  414baf:	add    BYTE PTR [eax],bh
  414bb1:	sbb    BYTE PTR [eax],al
  414bb3:	add    BYTE PTR [ebx*8+0x38820041],bl
  414bba:	and    al,0x0
  414bbc:	cmp    BYTE PTR [eax],cl
  414bbe:	add    BYTE PTR [eax],al
  414bc0:	xor    al,0xde
  414bc2:	inc    ecx
  414bc3:	add    BYTE PTR [edx+0x38002438],al
  414bc9:	or     BYTE PTR [eax],al
  414bcb:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414bcf:	add    BYTE PTR [edx+0x38002438],al
  414bd5:	sbb    BYTE PTR [eax],al
  414bd7:	add    al,bl
  414bd9:	fiadd  DWORD PTR [ecx+0x0]
  414bdc:	cmp    BYTE PTR [eax],0x24
  414bdf:	add    BYTE PTR [eax],bh
  414be1:	sbb    BYTE PTR [eax],al
  414be3:	add    BYTE PTR [ebx*8+0x38820041],bl
  414bea:	and    eax,DWORD PTR [eax]
  414bec:	cmp    BYTE PTR [eax],cl
  414bee:	add    BYTE PTR [eax],al
  414bf0:	sbb    dh,bl
  414bf2:	inc    ecx
  414bf3:	add    BYTE PTR [edx+0x38002338],al
  414bf9:	or     BYTE PTR [eax],al
  414bfb:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414bff:	add    BYTE PTR [edx+0x38002338],al
  414c05:	sbb    BYTE PTR [eax],al
  414c07:	add    al,dl
  414c09:	fiadd  DWORD PTR [ecx+0x0]
  414c0c:	cmp    BYTE PTR [eax],0x23
  414c0f:	add    BYTE PTR [eax],bh
  414c11:	sbb    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [ebx*8+0x38820041],bl
  414c1a:	and    eax,0x83800
  414c1f:	add    BYTE PTR [eax],bl
  414c21:	fiadd  WORD PTR [ecx+0x0]
  414c24:	cmp    BYTE PTR [eax],0x25
  414c27:	add    BYTE PTR [eax],bh
  414c29:	or     BYTE PTR [eax],al
  414c2b:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414c2f:	add    BYTE PTR [edx+0x38002538],al
  414c35:	sbb    BYTE PTR [eax],al
  414c37:	add    al,dl
  414c39:	fiadd  DWORD PTR [ecx+0x0]
  414c3c:	cmp    BYTE PTR [eax],0x25
  414c3f:	add    BYTE PTR [eax],bh
  414c41:	sbb    BYTE PTR [eax],al
  414c43:	add    BYTE PTR [ebx*8+0x38820041],bl
  414c4a:	and    BYTE PTR [eax],al
  414c4c:	cmp    BYTE PTR [eax],cl
  414c4e:	add    BYTE PTR [eax],al
  414c50:	sbb    dh,bl
  414c52:	inc    ecx
  414c53:	add    BYTE PTR [edx+0x38002038],al
  414c59:	or     BYTE PTR [eax],al
  414c5b:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414c5f:	add    BYTE PTR [edx+0x38002038],al
  414c65:	sbb    BYTE PTR [eax],al
  414c67:	add    al,dl
  414c69:	fiadd  DWORD PTR [ecx+0x0]
  414c6c:	cmp    BYTE PTR [eax],0x20
  414c6f:	add    BYTE PTR [eax],bh
  414c71:	sbb    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [ebx*8+0x38820041],bl
  414c7a:	and    al,BYTE PTR [eax]
  414c7c:	cmp    BYTE PTR [eax],cl
  414c7e:	add    BYTE PTR [eax],al
  414c80:	push   eax
  414c81:	fiadd  WORD PTR [ecx+0x0]
  414c84:	cmp    BYTE PTR [eax],0x22
  414c87:	add    BYTE PTR [eax],bh
  414c89:	or     BYTE PTR [eax],al
  414c8b:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414c8f:	add    BYTE PTR [edx+0x38002238],al
  414c95:	sbb    BYTE PTR [eax],al
  414c97:	add    al,ah
  414c99:	fiadd  DWORD PTR [ecx+0x0]
  414c9c:	cmp    BYTE PTR [eax],0x22
  414c9f:	add    BYTE PTR [eax],bh
  414ca1:	sbb    BYTE PTR [eax],al
  414ca3:	add    BYTE PTR [ebx*8+0x38820041],bl
  414caa:	and    DWORD PTR [eax],eax
  414cac:	cmp    BYTE PTR [eax],cl
  414cae:	add    BYTE PTR [eax],al
  414cb0:	xor    al,0xde
  414cb2:	inc    ecx
  414cb3:	add    BYTE PTR [edx+0x38002138],al
  414cb9:	or     BYTE PTR [eax],al
  414cbb:	add    BYTE PTR [edx+ebx*8+0x41],bl
  414cbf:	add    BYTE PTR [edx+0x38002138],al
  414cc5:	sbb    BYTE PTR [eax],al
  414cc7:	add    al,bl
  414cc9:	fiadd  DWORD PTR [ecx+0x0]
  414ccc:	cmp    BYTE PTR [eax],0x21
  414ccf:	add    BYTE PTR [eax],bh
  414cd1:	sbb    BYTE PTR [eax],al
  414cd3:	add    ah,dh
  414cd5:	fild   WORD PTR [ecx+0x0]
  414cd8:	add    BYTE PTR [eax],0xd7
  414cdb:	add    BYTE PTR [ecx],bh
  414cdd:	or     BYTE PTR [eax],al
  414cdf:	add    al,ah
  414ce1:	fild   WORD PTR [ecx+0x0]
  414ce4:	add    BYTE PTR [eax],0xd7
  414ce7:	add    BYTE PTR [ecx],bh
  414ce9:	sbb    BYTE PTR [eax],al
  414ceb:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414cef:	add    BYTE PTR [ebx+0x38003a38],al
  414cf5:	or     BYTE PTR [eax],al
  414cf7:	add    BYTE PTR [eax],bl
  414cf9:	fadd   QWORD PTR [ecx+0x0]
  414cfc:	cmp    DWORD PTR [eax],0x3a
  414cff:	add    BYTE PTR [eax],bh
  414d01:	or     BYTE PTR [eax],al
  414d03:	add    BYTE PTR [eax],bh
  414d05:	fld    DWORD PTR [ecx+0x0]
  414d08:	cmp    DWORD PTR [eax],0x3a
  414d0b:	add    BYTE PTR [eax],bh
  414d0d:	sbb    BYTE PTR [eax],al
  414d0f:	add    ah,bl
  414d11:	fld    DWORD PTR [ecx+0x0]
  414d14:	cmp    DWORD PTR [eax],0x3a
  414d17:	add    BYTE PTR [eax],bh
  414d19:	sbb    BYTE PTR [eax],al
  414d1b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414d1f:	add    BYTE PTR [ebx+0x38003b38],al
  414d25:	or     BYTE PTR [eax],al
  414d27:	add    ah,dh
  414d29:	fild   DWORD PTR [ecx+0x0]
  414d2c:	cmp    DWORD PTR [eax],0x3b
  414d2f:	add    BYTE PTR [eax],bh
  414d31:	or     BYTE PTR [eax],al
  414d33:	add    BYTE PTR [eax],bh
  414d35:	fld    DWORD PTR [ecx+0x0]
  414d38:	cmp    DWORD PTR [eax],0x3b
  414d3b:	add    BYTE PTR [eax],bh
  414d3d:	sbb    BYTE PTR [eax],al
  414d3f:	add    ah,al
  414d41:	fld    DWORD PTR [ecx+0x0]
  414d44:	cmp    DWORD PTR [eax],0x3b
  414d47:	add    BYTE PTR [eax],bh
  414d49:	sbb    BYTE PTR [eax],al
  414d4b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414d4f:	add    BYTE PTR [ebx+0x3800da00],al
  414d55:	or     BYTE PTR [eax],al
  414d57:	add    BYTE PTR [esp+ebx*8],bh
  414d5a:	inc    ecx
  414d5b:	add    BYTE PTR [ebx+0x3800da00],al
  414d61:	or     BYTE PTR [eax],al
  414d63:	add    BYTE PTR [eax],bh
  414d65:	fld    DWORD PTR [ecx+0x0]
  414d68:	add    DWORD PTR [eax],0xffffffda
  414d6b:	add    BYTE PTR [eax],bh
  414d6d:	sbb    BYTE PTR [eax],al
  414d6f:	add    BYTE PTR [eax],al
  414d71:	fiadd  DWORD PTR [ecx+0x0]
  414d74:	add    DWORD PTR [eax],0xffffffda
  414d77:	add    BYTE PTR [eax],bh
  414d79:	sbb    BYTE PTR [eax],al
  414d7b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414d7f:	add    BYTE PTR [ebx+0x3800ea00],al
  414d85:	or     BYTE PTR [eax],al
  414d87:	add    BYTE PTR [eax],bl
  414d89:	fadd   QWORD PTR [ecx+0x0]
  414d8c:	add    DWORD PTR [eax],0xffffffea
  414d8f:	add    BYTE PTR [eax],bh
  414d91:	or     BYTE PTR [eax],al
  414d93:	add    BYTE PTR [eax],bh
  414d95:	fld    DWORD PTR [ecx+0x0]
  414d98:	add    DWORD PTR [eax],0xffffffea
  414d9b:	add    BYTE PTR [eax],bh
  414d9d:	sbb    BYTE PTR [eax],al
  414d9f:	add    ah,bl
  414da1:	fld    DWORD PTR [ecx+0x0]
  414da4:	add    DWORD PTR [eax],0xffffffea
  414da7:	add    BYTE PTR [eax],bh
  414da9:	sbb    BYTE PTR [eax],al
  414dab:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414daf:	add    BYTE PTR [ebx+0x38003938],al
  414db5:	or     BYTE PTR [eax],al
  414db7:	add    ah,dh
  414db9:	fild   DWORD PTR [ecx+0x0]
  414dbc:	cmp    DWORD PTR [eax],0x39
  414dbf:	add    BYTE PTR [eax],bh
  414dc1:	or     BYTE PTR [eax],al
  414dc3:	add    BYTE PTR [eax],bh
  414dc5:	fld    DWORD PTR [ecx+0x0]
  414dc8:	cmp    DWORD PTR [eax],0x39
  414dcb:	add    BYTE PTR [eax],bh
  414dcd:	sbb    BYTE PTR [eax],al
  414dcf:	add    ah,al
  414dd1:	fld    DWORD PTR [ecx+0x0]
  414dd4:	cmp    DWORD PTR [eax],0x39
  414dd7:	add    BYTE PTR [eax],bh
  414dd9:	sbb    BYTE PTR [eax],al
  414ddb:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414ddf:	add    BYTE PTR [ebx+0x38003838],al
  414de5:	or     BYTE PTR [eax],al
  414de7:	add    BYTE PTR [esp+ebx*8],bh
  414dea:	inc    ecx
  414deb:	add    BYTE PTR [ebx+0x38003838],al
  414df1:	or     BYTE PTR [eax],al
  414df3:	add    BYTE PTR [eax],bh
  414df5:	fld    DWORD PTR [ecx+0x0]
  414df8:	cmp    DWORD PTR [eax],0x38
  414dfb:	add    BYTE PTR [eax],bh
  414dfd:	sbb    BYTE PTR [eax],al
  414dff:	add    BYTE PTR [eax],al
  414e01:	fiadd  DWORD PTR [ecx+0x0]
  414e04:	cmp    DWORD PTR [eax],0x38
  414e07:	add    BYTE PTR [eax],bh
  414e09:	sbb    BYTE PTR [eax],al
  414e0b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414e0f:	add    BYTE PTR [ebx+0x38003e38],al
  414e15:	or     BYTE PTR [eax],al
  414e17:	add    BYTE PTR [eax],bl
  414e19:	fadd   QWORD PTR [ecx+0x0]
  414e1c:	cmp    DWORD PTR [eax],0x3e
  414e1f:	add    BYTE PTR [eax],bh
  414e21:	or     BYTE PTR [eax],al
  414e23:	add    BYTE PTR [eax],bh
  414e25:	fld    DWORD PTR [ecx+0x0]
  414e28:	cmp    DWORD PTR [eax],0x3e
  414e2b:	add    BYTE PTR [eax],bh
  414e2d:	sbb    BYTE PTR [eax],al
  414e2f:	add    ah,bl
  414e31:	fld    DWORD PTR [ecx+0x0]
  414e34:	cmp    DWORD PTR [eax],0x3e
  414e37:	add    BYTE PTR [eax],bh
  414e39:	sbb    BYTE PTR [eax],al
  414e3b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414e3f:	add    BYTE PTR [ebx+0x38003f38],al
  414e45:	or     BYTE PTR [eax],al
  414e47:	add    ah,dh
  414e49:	fild   DWORD PTR [ecx+0x0]
  414e4c:	cmp    DWORD PTR [eax],0x3f
  414e4f:	add    BYTE PTR [eax],bh
  414e51:	or     BYTE PTR [eax],al
  414e53:	add    BYTE PTR [eax],bh
  414e55:	fld    DWORD PTR [ecx+0x0]
  414e58:	cmp    DWORD PTR [eax],0x3f
  414e5b:	add    BYTE PTR [eax],bh
  414e5d:	sbb    BYTE PTR [eax],al
  414e5f:	add    ah,al
  414e61:	fld    DWORD PTR [ecx+0x0]
  414e64:	cmp    DWORD PTR [eax],0x3f
  414e67:	add    BYTE PTR [eax],bh
  414e69:	sbb    BYTE PTR [eax],al
  414e6b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414e6f:	add    BYTE PTR [ebx+0x3800de00],al
  414e75:	or     BYTE PTR [eax],al
  414e77:	add    BYTE PTR [esp+ebx*8],bh
  414e7a:	inc    ecx
  414e7b:	add    BYTE PTR [ebx+0x3800de00],al
  414e81:	or     BYTE PTR [eax],al
  414e83:	add    BYTE PTR [eax],bh
  414e85:	fld    DWORD PTR [ecx+0x0]
  414e88:	add    DWORD PTR [eax],0xffffffde
  414e8b:	add    BYTE PTR [eax],bh
  414e8d:	sbb    BYTE PTR [eax],al
  414e8f:	add    BYTE PTR [eax],al
  414e91:	fiadd  DWORD PTR [ecx+0x0]
  414e94:	add    DWORD PTR [eax],0xffffffde
  414e97:	add    BYTE PTR [eax],bh
  414e99:	sbb    BYTE PTR [eax],al
  414e9b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414e9f:	add    BYTE PTR [ebx+0x3800ee00],al
  414ea5:	or     BYTE PTR [eax],al
  414ea7:	add    BYTE PTR [eax],bl
  414ea9:	fadd   QWORD PTR [ecx+0x0]
  414eac:	add    DWORD PTR [eax],0xffffffee
  414eaf:	add    BYTE PTR [eax],bh
  414eb1:	or     BYTE PTR [eax],al
  414eb3:	add    BYTE PTR [eax],bh
  414eb5:	fld    DWORD PTR [ecx+0x0]
  414eb8:	add    DWORD PTR [eax],0xffffffee
  414ebb:	add    BYTE PTR [eax],bh
  414ebd:	sbb    BYTE PTR [eax],al
  414ebf:	add    ah,bl
  414ec1:	fld    DWORD PTR [ecx+0x0]
  414ec4:	add    DWORD PTR [eax],0xffffffee
  414ec7:	add    BYTE PTR [eax],bh
  414ec9:	sbb    BYTE PTR [eax],al
  414ecb:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414ecf:	add    BYTE PTR [ebx+0x38003d38],al
  414ed5:	or     BYTE PTR [eax],al
  414ed7:	add    ah,dh
  414ed9:	fild   DWORD PTR [ecx+0x0]
  414edc:	cmp    DWORD PTR [eax],0x3d
  414edf:	add    BYTE PTR [eax],bh
  414ee1:	or     BYTE PTR [eax],al
  414ee3:	add    BYTE PTR [eax],bh
  414ee5:	fld    DWORD PTR [ecx+0x0]
  414ee8:	cmp    DWORD PTR [eax],0x3d
  414eeb:	add    BYTE PTR [eax],bh
  414eed:	sbb    BYTE PTR [eax],al
  414eef:	add    ah,al
  414ef1:	fld    DWORD PTR [ecx+0x0]
  414ef4:	cmp    DWORD PTR [eax],0x3d
  414ef7:	add    BYTE PTR [eax],bh
  414ef9:	sbb    BYTE PTR [eax],al
  414efb:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414eff:	add    BYTE PTR [ebx+0x38003c38],al
  414f05:	or     BYTE PTR [eax],al
  414f07:	add    BYTE PTR [esp+ebx*8],bh
  414f0a:	inc    ecx
  414f0b:	add    BYTE PTR [ebx+0x38003c38],al
  414f11:	or     BYTE PTR [eax],al
  414f13:	add    BYTE PTR [eax],bh
  414f15:	fld    DWORD PTR [ecx+0x0]
  414f18:	cmp    DWORD PTR [eax],0x3c
  414f1b:	add    BYTE PTR [eax],bh
  414f1d:	sbb    BYTE PTR [eax],al
  414f1f:	add    BYTE PTR [eax],al
  414f21:	fiadd  DWORD PTR [ecx+0x0]
  414f24:	cmp    DWORD PTR [eax],0x3c
  414f27:	add    BYTE PTR [eax],bh
  414f29:	sbb    BYTE PTR [eax],al
  414f2b:	add    al,al
  414f2d:	fild   DWORD PTR [ecx+0x0]
  414f30:	cmp    DWORD PTR [eax],0xffffff8c
  414f33:	add    BYTE PTR [eax],bh
  414f35:	sub    BYTE PTR [eax],al
  414f37:	add    BYTE PTR [eax-0x7cffbe27],dl
  414f3d:	cmp    BYTE PTR [eax+eax*1+0x3838],cl
  414f44:	cmp    dl,ah
  414f46:	inc    ecx
  414f47:	add    BYTE PTR [ebx+0x38008e38],al
  414f4d:	sub    BYTE PTR [eax],al
  414f4f:	add    BYTE PTR [edx+eiz*8],ah
  414f52:	inc    ecx
  414f53:	add    BYTE PTR [ebx+0x38008e38],al
  414f59:	cmp    BYTE PTR [eax],al
  414f5b:	add    ah,dh
  414f5d:	fild   DWORD PTR [ecx+0x0]
  414f60:	cmp    DWORD PTR [eax],0xffffff8c
  414f63:	add    BYTE PTR [eax],bh
  414f65:	or     BYTE PTR [eax],al
  414f67:	add    ah,al
  414f69:	fld    DWORD PTR [ecx+0x0]
  414f6c:	cmp    DWORD PTR [eax],0xffffff8c
  414f6f:	add    BYTE PTR [eax],bh
  414f71:	sbb    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edx+eiz*8+0x41],dh
  414f77:	add    BYTE PTR [ebx+0x38008e38],al
  414f7d:	or     BYTE PTR [eax],al
  414f7f:	add    BYTE PTR [eax-0x1e],ah
  414f82:	inc    ecx
  414f83:	add    BYTE PTR [ebx+0x38008e38],al
  414f89:	sbb    BYTE PTR [eax],al
  414f8b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414f8f:	add    BYTE PTR [ebx+0x3800f500],al
  414f95:	or     BYTE PTR [eax],al
  414f97:	add    BYTE PTR [eax],bl
  414f99:	fadd   QWORD PTR [ecx+0x0]
  414f9c:	add    DWORD PTR [eax],0xfffffff5
  414f9f:	add    BYTE PTR [eax],bh
  414fa1:	or     BYTE PTR [eax],al
  414fa3:	add    BYTE PTR [eax],bh
  414fa5:	fld    DWORD PTR [ecx+0x0]
  414fa8:	add    DWORD PTR [eax],0xfffffff5
  414fab:	add    BYTE PTR [eax],bh
  414fad:	sbb    BYTE PTR [eax],al
  414faf:	add    ah,bl
  414fb1:	fld    DWORD PTR [ecx+0x0]
  414fb4:	add    DWORD PTR [eax],0xfffffff5
  414fb7:	add    BYTE PTR [eax],bh
  414fb9:	sbb    BYTE PTR [eax],al
  414fbb:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  414fbf:	add    BYTE PTR [ebx+0x38000438],al
  414fc5:	or     BYTE PTR [eax],al
  414fc7:	add    BYTE PTR [esp+ebx*8],bh
  414fca:	inc    ecx
  414fcb:	add    BYTE PTR [ebx+0x38000438],al
  414fd1:	or     BYTE PTR [eax],al
  414fd3:	add    BYTE PTR [eax],bh
  414fd5:	fld    DWORD PTR [ecx+0x0]
  414fd8:	cmp    DWORD PTR [eax],0x4
  414fdb:	add    BYTE PTR [eax],bh
  414fdd:	sbb    BYTE PTR [eax],al
  414fdf:	add    BYTE PTR [eax],al
  414fe1:	fiadd  DWORD PTR [ecx+0x0]
  414fe4:	cmp    DWORD PTR [eax],0x4
  414fe7:	add    BYTE PTR [eax],bh
  414fe9:	sbb    BYTE PTR [eax],al
  414feb:	add    BYTE PTR [ebx+ebx*8+0x41],al
  414fef:	add    BYTE PTR [eax+edi*8+0x81800b6],al
  414ff6:	add    BYTE PTR [eax],al
  414ff8:	add    ah,bl
  414ffa:	inc    ecx
  414ffb:	add    BYTE PTR [eax+edi*8+0x81800b6],al
  415002:	add    BYTE PTR [eax],al
  415004:	inc    esp
  415005:	fild   DWORD PTR [ecx+0x0]
  415008:	test   al,bh
  41500a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41500b:	add    BYTE PTR [eax],bl
  41500d:	or     BYTE PTR [eax],al
  41500f:	add    BYTE PTR [eax],al
  415011:	fadd   QWORD PTR [ecx+0x0]
  415014:	test   al,bh
  415016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415017:	add    BYTE PTR [eax],bl
  415019:	or     BYTE PTR [eax],al
  41501b:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41501f:	add    BYTE PTR [eax+edi*8+0x8180095],al
  415026:	add    BYTE PTR [eax],al
  415028:	add    ah,bl
  41502a:	inc    ecx
  41502b:	add    BYTE PTR [eax+edi*8+0x8180095],al
  415032:	add    BYTE PTR [eax],al
  415034:	inc    esp
  415035:	fild   DWORD PTR [ecx+0x0]
  415038:	test   al,bh
  41503a:	xchg   esi,eax
  41503b:	add    BYTE PTR [eax],bl
  41503d:	or     BYTE PTR [eax],al
  41503f:	add    BYTE PTR [eax],al
  415041:	fadd   QWORD PTR [ecx+0x0]
  415044:	test   al,bh
  415046:	xchg   esi,eax
  415047:	add    BYTE PTR [eax],bl
  415049:	or     BYTE PTR [eax],al
  41504b:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41504f:	add    BYTE PTR [eax+edi*8+0x8180085],al
  415056:	add    BYTE PTR [eax],al
  415058:	add    ah,bl
  41505a:	inc    ecx
  41505b:	add    BYTE PTR [eax+edi*8+0x8180085],al
  415062:	add    BYTE PTR [eax],al
  415064:	inc    esp
  415065:	fild   DWORD PTR [ecx+0x0]
  415068:	test   al,bh
  41506a:	xchg   BYTE PTR [eax],al
  41506c:	sbb    BYTE PTR [eax],cl
  41506e:	add    BYTE PTR [eax],al
  415070:	add    ah,bl
  415072:	inc    ecx
  415073:	add    BYTE PTR [eax+edi*8+0x8180086],al
  41507a:	add    BYTE PTR [eax],al
  41507c:	inc    esp
  41507d:	fild   DWORD PTR [ecx+0x0]
  415080:	test   al,bh
  415082:	xchg   DWORD PTR [eax],eax
  415084:	sbb    BYTE PTR [eax],cl
  415086:	add    BYTE PTR [eax],al
  415088:	(bad)  
  41508a:	inc    ecx
  41508b:	add    BYTE PTR [eax+edi*8+0x8180087],al
  415092:	add    BYTE PTR [eax],al
  415094:	inc    esp
  415095:	fild   DWORD PTR [ecx+0x0]
  415098:	test   al,bh
  41509a:	pop    DWORD PTR [eax]
  41509c:	sbb    BYTE PTR [eax],cl
  41509e:	add    BYTE PTR [eax],al
  4150a0:	(bad)  
  4150a2:	inc    ecx
  4150a3:	add    BYTE PTR [eax+edi*8+0x818008f],al
  4150aa:	add    BYTE PTR [eax],al
  4150ac:	inc    esp
  4150ad:	fild   DWORD PTR [ecx+0x0]
  4150b0:	test   al,bh
  4150b2:	mov    es,WORD PTR [eax]
  4150b4:	sbb    BYTE PTR [eax],cl
  4150b6:	add    BYTE PTR [eax],al
  4150b8:	(bad)  
  4150ba:	inc    ecx
  4150bb:	add    BYTE PTR [eax+edi*8+0x818008e],al
  4150c2:	add    BYTE PTR [eax],al
  4150c4:	inc    esp
  4150c5:	fild   DWORD PTR [ecx+0x0]
  4150c8:	test   al,bh
  4150ca:	xchg   edi,eax
  4150cb:	add    BYTE PTR [eax],bl
  4150cd:	or     BYTE PTR [eax],al
  4150cf:	add    ah,bl
  4150d1:	fild   DWORD PTR [ecx+0x0]
  4150d4:	test   al,bh
  4150d6:	xchg   edi,eax
  4150d7:	add    BYTE PTR [eax],bl
  4150d9:	or     BYTE PTR [eax],al
  4150db:	add    BYTE PTR [ebx+ebx*8+0x41],al
  4150df:	add    BYTE PTR [eax+edi*8+0x818009f],al
  4150e6:	add    BYTE PTR [eax],al
  4150e8:	(bad)  
  4150ea:	inc    ecx
  4150eb:	add    BYTE PTR [eax+edi*8+0x818009f],al
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	inc    esp
  4150f5:	fild   DWORD PTR [ecx+0x0]
  4150f8:	test   al,bh
  4150fa:	sahf   
  4150fb:	add    BYTE PTR [eax],bl
  4150fd:	or     BYTE PTR [eax],al
  4150ff:	add    ah,bl
  415101:	fild   DWORD PTR [ecx+0x0]
  415104:	test   al,bh
  415106:	sahf   
  415107:	add    BYTE PTR [eax],bl
  415109:	or     BYTE PTR [eax],al
  41510b:	add    BYTE PTR [eax-0x7bffbe25],al
  415111:	add    ah,al
  415113:	add    BYTE PTR [eax],bh
  415115:	or     BYTE PTR [eax],al
  415117:	add    BYTE PTR [eax-0x24],bh
  41511a:	inc    ecx
  41511b:	add    BYTE PTR [eax+eax*1+0x83800c4],al
  415122:	add    BYTE PTR [eax],al
  415124:	push   0x840041db
  415129:	cmp    ah,BYTE PTR [edx]
  41512b:	add    BYTE PTR [eax],bh
  41512d:	sub    BYTE PTR [eax],al
  41512f:	add    BYTE PTR [eax-0x24],cl
  415132:	inc    ecx
  415133:	add    BYTE PTR [edx+edi*1+0x28380022],al
  41513a:	add    BYTE PTR [eax],al
  41513c:	sbb    bl,0x41
  41513f:	add    BYTE PTR [edx+edi*1+0x8380022],al
  415146:	add    BYTE PTR [eax],al
  415148:	pusha  
  415149:	fadd   QWORD PTR [ecx+0x0]
  41514c:	test   BYTE PTR [edx],bh
  41514e:	and    al,BYTE PTR [eax]
  415150:	cmp    BYTE PTR [eax],cl
  415152:	add    BYTE PTR [eax],al
  415154:	sbb    bl,0x41
  415157:	add    BYTE PTR [edx+edi*1+0x8380020],al
  41515e:	add    BYTE PTR [eax],al
  415160:	test   ah,bl
  415162:	inc    ecx
  415163:	add    BYTE PTR [edx+edi*1+0x8380020],al
  41516a:	add    BYTE PTR [eax],al
  41516c:	sbb    al,0xdd
  41516e:	inc    ecx
  41516f:	add    BYTE PTR [edx+0x1800e2f9],al
  415175:	or     BYTE PTR [eax],al
  415177:	add    ah,cl
  415179:	fld    QWORD PTR [ecx+0x0]
  41517c:	cmp    cl,0xe2
  41517f:	add    BYTE PTR [eax],bl
  415181:	or     BYTE PTR [eax],al
  415183:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415187:	add    BYTE PTR [ebx+0x38000538],al
  41518d:	or     BYTE PTR [eax],al
  41518f:	add    BYTE PTR [eax],bl
  415191:	fadd   QWORD PTR [ecx+0x0]
  415194:	cmp    DWORD PTR [eax],0x5
  415197:	add    BYTE PTR [eax],bh
  415199:	or     BYTE PTR [eax],al
  41519b:	add    BYTE PTR [eax],bh
  41519d:	fld    DWORD PTR [ecx+0x0]
  4151a0:	cmp    DWORD PTR [eax],0x5
  4151a3:	add    BYTE PTR [eax],bh
  4151a5:	sbb    BYTE PTR [eax],al
  4151a7:	add    ah,bl
  4151a9:	fld    DWORD PTR [ecx+0x0]
  4151ac:	cmp    DWORD PTR [eax],0x5
  4151af:	add    BYTE PTR [eax],bh
  4151b1:	sbb    BYTE PTR [eax],al
  4151b3:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4151b7:	add    BYTE PTR [ebx+0x38000738],al
  4151bd:	or     BYTE PTR [eax],al
  4151bf:	add    BYTE PTR [eax],bl
  4151c1:	fadd   QWORD PTR [ecx+0x0]
  4151c4:	cmp    DWORD PTR [eax],0x7
  4151c7:	add    BYTE PTR [eax],bh
  4151c9:	or     BYTE PTR [eax],al
  4151cb:	add    BYTE PTR [eax],bh
  4151cd:	fld    DWORD PTR [ecx+0x0]
  4151d0:	cmp    DWORD PTR [eax],0x7
  4151d3:	add    BYTE PTR [eax],bh
  4151d5:	sbb    BYTE PTR [eax],al
  4151d7:	add    ah,bl
  4151d9:	fld    DWORD PTR [ecx+0x0]
  4151dc:	cmp    DWORD PTR [eax],0x7
  4151df:	add    BYTE PTR [eax],bh
  4151e1:	sbb    BYTE PTR [eax],al
  4151e3:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  4151ea:	jecxz  0x4151ec
  4151ec:	sbb    BYTE PTR [eax],cl
  4151ee:	add    BYTE PTR [eax],al
  4151f0:	mov    eax,0x820041dd
  4151f5:	stc    
  4151f6:	jecxz  0x4151f8
  4151f8:	sbb    BYTE PTR [eax],cl
  4151fa:	add    BYTE PTR [eax],al
  4151fc:	pop    esp
  4151fd:	fild   DWORD PTR [ecx+0x0]
  415200:	cmp    DWORD PTR [eax],0x6
  415203:	add    BYTE PTR [eax],bh
  415205:	or     BYTE PTR [eax],al
  415207:	add    ah,dh
  415209:	fild   DWORD PTR [ecx+0x0]
  41520c:	cmp    DWORD PTR [eax],0x6
  41520f:	add    BYTE PTR [eax],bh
  415211:	or     BYTE PTR [eax],al
  415213:	add    BYTE PTR [eax],bh
  415215:	fld    DWORD PTR [ecx+0x0]
  415218:	cmp    DWORD PTR [eax],0x6
  41521b:	add    BYTE PTR [eax],bh
  41521d:	sbb    BYTE PTR [eax],al
  41521f:	add    ah,al
  415221:	fld    DWORD PTR [ecx+0x0]
  415224:	cmp    DWORD PTR [eax],0x6
  415227:	add    BYTE PTR [eax],bh
  415229:	sbb    BYTE PTR [eax],al
  41522b:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  415232:	loope  0x415234
  415234:	sbb    BYTE PTR [eax],cl
  415236:	add    BYTE PTR [eax],al
  415238:	in     al,dx
  415239:	fld    QWORD PTR [ecx+0x0]
  41523c:	cmp    cl,0xe1
  41523f:	add    BYTE PTR [eax],bl
  415241:	or     BYTE PTR [eax],al
  415243:	add    BYTE PTR [ebx*8+0x38820041],bl
  41524a:	inc    ecx
  41524b:	add    BYTE PTR [eax],bh
  41524d:	or     BYTE PTR [eax],al
  41524f:	add    ah,cl
  415251:	fld    QWORD PTR [ecx+0x0]
  415254:	cmp    BYTE PTR [eax],0x41
  415257:	add    BYTE PTR [eax],bh
  415259:	or     BYTE PTR [eax],al
  41525b:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  415262:	mov    DWORD PTR [eax],0x818
  415268:	mov    eax,0x820041dd
  41526d:	stc    
  41526e:	mov    DWORD PTR [eax],0x818
  415274:	sbb    al,0xdd
  415276:	inc    ecx
  415277:	add    BYTE PTR [edx+0x1800c6f9],al
  41527d:	or     BYTE PTR [eax],al
  41527f:	add    ah,cl
  415281:	fld    QWORD PTR [ecx+0x0]
  415284:	cmp    cl,0xc6
  415287:	add    BYTE PTR [eax],bl
  415289:	or     BYTE PTR [eax],al
  41528b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41528f:	add    BYTE PTR [ebx+0x38000138],al
  415295:	or     BYTE PTR [eax],al
  415297:	add    BYTE PTR [eax],bl
  415299:	fadd   QWORD PTR [ecx+0x0]
  41529c:	cmp    DWORD PTR [eax],0x1
  41529f:	add    BYTE PTR [eax],bh
  4152a1:	or     BYTE PTR [eax],al
  4152a3:	add    BYTE PTR [eax],bh
  4152a5:	fld    DWORD PTR [ecx+0x0]
  4152a8:	cmp    DWORD PTR [eax],0x1
  4152ab:	add    BYTE PTR [eax],bh
  4152ad:	sbb    BYTE PTR [eax],al
  4152af:	add    ah,bl
  4152b1:	fld    DWORD PTR [ecx+0x0]
  4152b4:	cmp    DWORD PTR [eax],0x1
  4152b7:	add    BYTE PTR [eax],bh
  4152b9:	sbb    BYTE PTR [eax],al
  4152bb:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  4152c2:	xlat   BYTE PTR ds:[ebx]
  4152c3:	add    BYTE PTR [eax],bl
  4152c5:	or     BYTE PTR [eax],al
  4152c7:	add    BYTE PTR [eax-0x7dffbe23],bh
  4152cd:	stc    
  4152ce:	xlat   BYTE PTR ds:[ebx]
  4152cf:	add    BYTE PTR [eax],bl
  4152d1:	or     BYTE PTR [eax],al
  4152d3:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  4152da:	(bad)  
  4152db:	add    BYTE PTR [eax],bl
  4152dd:	or     BYTE PTR [eax],al
  4152df:	add    ah,cl
  4152e1:	fld    QWORD PTR [ecx+0x0]
  4152e4:	cmp    cl,0xd6
  4152e7:	add    BYTE PTR [eax],bl
  4152e9:	or     BYTE PTR [eax],al
  4152eb:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  4152f2:	fild   DWORD PTR [eax]
  4152f4:	sbb    BYTE PTR [eax],cl
  4152f6:	add    BYTE PTR [eax],al
  4152f8:	mov    eax,0x820041dd
  4152fd:	stc    
  4152fe:	fild   DWORD PTR [eax]
  415300:	sbb    BYTE PTR [eax],cl
  415302:	add    BYTE PTR [eax],al
  415304:	sbb    al,0xdd
  415306:	inc    ecx
  415307:	add    BYTE PTR [edx+0x1800d1f9],al
  41530d:	or     BYTE PTR [eax],al
  41530f:	add    ah,ch
  415311:	fld    QWORD PTR [ecx+0x0]
  415314:	cmp    cl,0xd1
  415317:	add    BYTE PTR [eax],bl
  415319:	or     BYTE PTR [eax],al
  41531b:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  415322:	rol    DWORD PTR [eax],cl
  415324:	sbb    BYTE PTR [eax],cl
  415326:	add    BYTE PTR [eax],al
  415328:	in     al,dx
  415329:	fld    QWORD PTR [ecx+0x0]
  41532c:	cmp    cl,0xd3
  41532f:	add    BYTE PTR [eax],bl
  415331:	or     BYTE PTR [eax],al
  415333:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  41533a:	rol    BYTE PTR [eax],cl
  41533c:	sbb    BYTE PTR [eax],cl
  41533e:	add    BYTE PTR [eax],al
  415340:	in     al,dx
  415341:	fld    QWORD PTR [ecx+0x0]
  415344:	cmp    cl,0xd2
  415347:	add    BYTE PTR [eax],bl
  415349:	or     BYTE PTR [eax],al
  41534b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41534f:	add    BYTE PTR [ebx+0x38000338],al
  415355:	or     BYTE PTR [eax],al
  415357:	add    BYTE PTR [eax],bl
  415359:	fadd   QWORD PTR [ecx+0x0]
  41535c:	cmp    DWORD PTR [eax],0x3
  41535f:	add    BYTE PTR [eax],bh
  415361:	or     BYTE PTR [eax],al
  415363:	add    BYTE PTR [eax],bh
  415365:	fld    DWORD PTR [ecx+0x0]
  415368:	cmp    DWORD PTR [eax],0x3
  41536b:	add    BYTE PTR [eax],bh
  41536d:	sbb    BYTE PTR [eax],al
  41536f:	add    ah,bl
  415371:	fld    DWORD PTR [ecx+0x0]
  415374:	cmp    DWORD PTR [eax],0x3
  415377:	add    BYTE PTR [eax],bh
  415379:	sbb    BYTE PTR [eax],al
  41537b:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  415382:	retf   
  415383:	add    BYTE PTR [eax],bl
  415385:	or     BYTE PTR [eax],al
  415387:	add    BYTE PTR [eax-0x7dffbe23],bh
  41538d:	stc    
  41538e:	retf   
  41538f:	add    BYTE PTR [eax],bl
  415391:	or     BYTE PTR [eax],al
  415393:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415397:	add    BYTE PTR [ebx+0x38000238],al
  41539d:	or     BYTE PTR [eax],al
  41539f:	add    ah,dh
  4153a1:	fild   DWORD PTR [ecx+0x0]
  4153a4:	cmp    DWORD PTR [eax],0x2
  4153a7:	add    BYTE PTR [eax],bh
  4153a9:	or     BYTE PTR [eax],al
  4153ab:	add    BYTE PTR [eax],bh
  4153ad:	fld    DWORD PTR [ecx+0x0]
  4153b0:	cmp    DWORD PTR [eax],0x2
  4153b3:	add    BYTE PTR [eax],bh
  4153b5:	sbb    BYTE PTR [eax],al
  4153b7:	add    ah,al
  4153b9:	fld    DWORD PTR [ecx+0x0]
  4153bc:	cmp    DWORD PTR [eax],0x2
  4153bf:	add    BYTE PTR [eax],bh
  4153c1:	sbb    BYTE PTR [eax],al
  4153c3:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  4153ca:	rol    DWORD PTR [eax],0x18
  4153cd:	or     BYTE PTR [eax],al
  4153cf:	add    ah,ch
  4153d1:	fld    QWORD PTR [ecx+0x0]
  4153d4:	cmp    cl,0xc1
  4153d7:	add    BYTE PTR [eax],bl
  4153d9:	or     BYTE PTR [eax],al
  4153db:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  4153e2:	ret    
  4153e3:	add    BYTE PTR [eax],bl
  4153e5:	or     BYTE PTR [eax],al
  4153e7:	add    ah,ch
  4153e9:	fld    QWORD PTR [ecx+0x0]
  4153ec:	cmp    cl,0xc3
  4153ef:	add    BYTE PTR [eax],bl
  4153f1:	or     BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  4153fa:	ret    0x1800
  4153fd:	or     BYTE PTR [eax],al
  4153ff:	add    ah,ch
  415401:	fld    QWORD PTR [ecx+0x0]
  415404:	cmp    cl,0xc2
  415407:	add    BYTE PTR [eax],bl
  415409:	or     BYTE PTR [eax],al
  41540b:	add    BYTE PTR [eax],dh
  41540d:	fld    QWORD PTR [ecx+0x0]
  415410:	cmp    DWORD PTR [eax],0xffffff91
  415413:	add    BYTE PTR [eax],bh
  415415:	sub    BYTE PTR [eax],al
  415417:	add    BYTE PTR [edx+ebx*8+0x41],ah
  41541b:	add    BYTE PTR [ebx+0x38009138],al
  415421:	cmp    BYTE PTR [eax],al
  415423:	add    BYTE PTR [eax],dh
  415425:	fld    QWORD PTR [ecx+0x0]
  415428:	cmp    DWORD PTR [eax],0xffffff91
  41542b:	add    BYTE PTR [eax],bh
  41542d:	or     BYTE PTR [eax],al
  41542f:	add    BYTE PTR [ebx*8+0x38830041],ah
  415436:	xchg   ecx,eax
  415437:	add    BYTE PTR [eax],bh
  415439:	sbb    BYTE PTR [eax],al
  41543b:	add    BYTE PTR [eax],dh
  41543d:	fld    QWORD PTR [ecx+0x0]
  415440:	cmp    DWORD PTR [eax],0xffffff90
  415443:	add    BYTE PTR [eax],bh
  415445:	sub    BYTE PTR [eax],al
  415447:	add    BYTE PTR [eax-0x26],dh
  41544a:	inc    ecx
  41544b:	add    BYTE PTR [ebx+0x38009038],al
  415451:	cmp    BYTE PTR [eax],al
  415453:	add    BYTE PTR [eax],dh
  415455:	fld    QWORD PTR [ecx+0x0]
  415458:	cmp    DWORD PTR [eax],0xffffff90
  41545b:	add    BYTE PTR [eax],bh
  41545d:	or     BYTE PTR [eax],al
  41545f:	add    BYTE PTR [edx+ebx*8+0x41],ah
  415463:	add    BYTE PTR [ebx+0x38009038],al
  415469:	sbb    BYTE PTR [eax],al
  41546b:	add    al,ch
  41546d:	fild   WORD PTR [ecx+0x0]
  415470:	add    DWORD PTR [eax],0xffffffc5
  415473:	add    BYTE PTR [eax],bh
  415475:	or     BYTE PTR [eax],al
  415477:	add    ah,ch
  415479:	loope  0x4154bc
  41547b:	add    BYTE PTR [ebx+0x3800153a],al
  415481:	or     BYTE PTR [eax],al
  415483:	add    BYTE PTR [edx+eiz*8+0x3a830041],bl
  41548a:	adc    eax,0x83800
  41548f:	add    BYTE PTR [ecx+eiz*8+0x3a830041],ch
  415496:	push   ss
  415497:	add    BYTE PTR [eax],bh
  415499:	sub    BYTE PTR [eax],al
  41549b:	add    BYTE PTR [edx+eiz*8+0x41],cl
  41549f:	add    BYTE PTR [ebx+0x3800163a],al
  4154a5:	sub    BYTE PTR [eax],al
  4154a7:	add    ah,ch
  4154a9:	loope  0x4154ec
  4154ab:	add    BYTE PTR [ebx+0x3800163a],al
  4154b1:	or     BYTE PTR [eax],al
  4154b3:	add    BYTE PTR [eax-0x7cffbe1e],cl
  4154b9:	cmp    dl,BYTE PTR [esi]
  4154bb:	add    BYTE PTR [eax],bh
  4154bd:	or     BYTE PTR [eax],al
  4154bf:	add    ah,ch
  4154c1:	loope  0x415504
  4154c3:	add    BYTE PTR [ebx+0x3800143a],al
  4154c9:	or     BYTE PTR [eax],al
  4154cb:	add    BYTE PTR [eax-0x7cffbe1e],ch
  4154d1:	cmp    dl,BYTE PTR [eax+eax*1]
  4154d4:	cmp    BYTE PTR [eax],cl
  4154d6:	add    BYTE PTR [eax],al
  4154d8:	dec    eax
  4154d9:	fiadd  DWORD PTR [ecx+0x0]
  4154dc:	cmp    DWORD PTR [edx],0x0
  4154df:	add    BYTE PTR [eax],bh
  4154e1:	cmp    BYTE PTR [eax],al
  4154e3:	add    BYTE PTR [edx+ebx*8+0x41],bh
  4154e7:	add    BYTE PTR [ebx+0x3800003a],al
  4154ed:	cmp    BYTE PTR [eax],al
  4154ef:	add    BYTE PTR [eax],bh
  4154f1:	fld    DWORD PTR [ecx+0x0]
  4154f4:	cmp    DWORD PTR [eax],0x16
  4154f7:	add    BYTE PTR [eax],bh
  4154f9:	sbb    BYTE PTR [eax],al
  4154fb:	add    ah,al
  4154fd:	fld    DWORD PTR [ecx+0x0]
  415500:	cmp    DWORD PTR [eax],0x16
  415503:	add    BYTE PTR [eax],bh
  415505:	sbb    BYTE PTR [eax],al
  415507:	add    BYTE PTR [eax-0x26],cl
  41550a:	inc    ecx
  41550b:	add    BYTE PTR [ebx+0x3800013a],al
  415511:	cmp    BYTE PTR [eax],al
  415513:	add    BYTE PTR [edx+ebx*8+0x41],bh
  415517:	add    BYTE PTR [ebx+0x3800013a],al
  41551d:	cmp    BYTE PTR [eax],al
  41551f:	add    BYTE PTR [eax],dl
  415521:	fld    QWORD PTR [ecx+0x0]
  415524:	cmp    DWORD PTR [edx],0x4
  415527:	add    BYTE PTR [eax],bh
  415529:	or     BYTE PTR [eax],al
  41552b:	add    BYTE PTR [ebp+ebx*8+0x3a830041],ch
  415532:	add    al,0x0
  415534:	cmp    BYTE PTR [eax],cl
  415536:	add    BYTE PTR [eax],al
  415538:	dec    eax
  415539:	fiadd  DWORD PTR [ecx+0x0]
  41553c:	cmp    DWORD PTR [edx],0x4
  41553f:	add    BYTE PTR [eax],bh
  415541:	sbb    BYTE PTR [eax],al
  415543:	add    BYTE PTR [eax-0x7cffbe26],dl
  415549:	cmp    al,BYTE PTR [eax+eax*1]
  41554c:	cmp    BYTE PTR [eax],bl
  41554e:	add    BYTE PTR [eax],al
  415550:	pop    esp
  415551:	fild   DWORD PTR [ecx+0x0]
  415554:	cmp    DWORD PTR [eax],0xc
  415557:	add    BYTE PTR [eax],bh
  415559:	or     BYTE PTR [eax],al
  41555b:	add    ah,dh
  41555d:	fild   DWORD PTR [ecx+0x0]
  415560:	cmp    DWORD PTR [eax],0xc
  415563:	add    BYTE PTR [eax],bh
  415565:	or     BYTE PTR [eax],al
  415567:	add    BYTE PTR [eax],bh
  415569:	fld    DWORD PTR [ecx+0x0]
  41556c:	cmp    DWORD PTR [eax],0xc
  41556f:	add    BYTE PTR [eax],bh
  415571:	sbb    BYTE PTR [eax],al
  415573:	add    ah,al
  415575:	fld    DWORD PTR [ecx+0x0]
  415578:	cmp    DWORD PTR [eax],0xc
  41557b:	add    BYTE PTR [eax],bh
  41557d:	sbb    BYTE PTR [eax],al
  41557f:	add    BYTE PTR [eax],dl
  415581:	fld    QWORD PTR [ecx+0x0]
  415584:	cmp    DWORD PTR [edx],0x5
  415587:	add    BYTE PTR [eax],bh
  415589:	or     BYTE PTR [eax],al
  41558b:	add    BYTE PTR [ebp+ebx*8+0x3a830041],cl
  415592:	add    eax,0x83800
  415597:	add    BYTE PTR [eax-0x26],cl
  41559a:	inc    ecx
  41559b:	add    BYTE PTR [ebx+0x3800053a],al
  4155a1:	sbb    BYTE PTR [eax],al
  4155a3:	add    BYTE PTR [edx+ebx*8+0x41],bh
  4155a7:	add    BYTE PTR [ebx+0x3800053a],al
  4155ad:	sbb    BYTE PTR [eax],al
  4155af:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4155b3:	add    BYTE PTR [ebx+0x38000d38],al
  4155b9:	or     BYTE PTR [eax],al
  4155bb:	add    al,al
  4155bd:	fild   DWORD PTR [ecx+0x0]
  4155c0:	cmp    DWORD PTR [eax],0xd
  4155c3:	add    BYTE PTR [eax],bh
  4155c5:	or     BYTE PTR [eax],al
  4155c7:	add    BYTE PTR [eax],bh
  4155c9:	fld    DWORD PTR [ecx+0x0]
  4155cc:	cmp    DWORD PTR [eax],0xd
  4155cf:	add    BYTE PTR [eax],bh
  4155d1:	sbb    BYTE PTR [eax],al
  4155d3:	add    BYTE PTR [eax-0x7cffbe27],dl
  4155d9:	cmp    BYTE PTR ds:0x183800,cl
  4155df:	add    BYTE PTR [ebx+ebx*8],dh
  4155e2:	inc    ecx
  4155e3:	add    BYTE PTR [ebp+0x3800483a],al
  4155e9:	or     BYTE PTR [eax],al
  4155eb:	add    ah,cl
  4155ed:	fild   DWORD PTR [ecx+0x0]
  4155f0:	test   DWORD PTR [edx],edi
  4155f2:	dec    eax
  4155f3:	add    BYTE PTR [eax],bh
  4155f5:	or     BYTE PTR [eax],al
  4155f7:	add    BYTE PTR [ebx+ebx*8],cl
  4155fa:	inc    ecx
  4155fb:	add    BYTE PTR [ebp+0x3800483a],al
  415601:	sub    BYTE PTR [eax],al
  415603:	add    BYTE PTR [eax],dl
  415605:	fld    DWORD PTR [ecx+0x0]
  415608:	test   DWORD PTR [edx],edi
  41560a:	dec    eax
  41560b:	add    BYTE PTR [eax],bh
  41560d:	sbb    BYTE PTR [eax],al
  41560f:	add    BYTE PTR [ecx+ebx*8+0x3a850041],bl
  415616:	dec    eax
  415617:	add    BYTE PTR [eax],bh
  415619:	sbb    BYTE PTR [eax],al
  41561b:	add    al,ch
  41561d:	fadd   DWORD PTR [ecx+0x0]
  415620:	test   DWORD PTR [edx],edi
  415622:	dec    eax
  415623:	add    BYTE PTR [eax],bh
  415625:	cmp    BYTE PTR [eax],al
  415627:	add    BYTE PTR [ebx+ebx*8],dh
  41562a:	inc    ecx
  41562b:	add    BYTE PTR [ebp+0x3800493a],al
  415631:	or     BYTE PTR [eax],al
  415633:	add    BYTE PTR [eax-0x7affbe25],bl
  415639:	cmp    cl,BYTE PTR [ecx+0x0]
  41563c:	cmp    BYTE PTR [eax],cl
  41563e:	add    BYTE PTR [eax],al
  415640:	lock fiadd DWORD PTR [ecx+0x0]
  415644:	test   DWORD PTR [edx],edi
  415646:	dec    ecx
  415647:	add    BYTE PTR [eax],bh
  415649:	sub    BYTE PTR [eax],al
  41564b:	add    BYTE PTR [eax],dl
  41564d:	fld    DWORD PTR [ecx+0x0]
  415650:	test   DWORD PTR [edx],edi
  415652:	dec    ecx
  415653:	add    BYTE PTR [eax],bh
  415655:	sbb    BYTE PTR [eax],al
  415657:	add    BYTE PTR [eax-0x27],ch
  41565a:	inc    ecx
  41565b:	add    BYTE PTR [ebp+0x3800493a],al
  415661:	sbb    BYTE PTR [eax],al
  415663:	add    ah,cl
  415665:	fadd   DWORD PTR [ecx+0x0]
  415668:	test   DWORD PTR [edx],edi
  41566a:	dec    ecx
  41566b:	add    BYTE PTR [eax],bh
  41566d:	cmp    BYTE PTR [eax],al
  41566f:	add    BYTE PTR [eax],bh
  415671:	fld    DWORD PTR [ecx+0x0]
  415674:	cmp    DWORD PTR [eax],0x36
  415677:	add    BYTE PTR [eax],bh
  415679:	sbb    BYTE PTR [eax],al
  41567b:	add    ah,al
  41567d:	fld    DWORD PTR [ecx+0x0]
  415680:	cmp    DWORD PTR [eax],0x36
  415683:	add    BYTE PTR [eax],bh
  415685:	sbb    BYTE PTR [eax],al
  415687:	add    BYTE PTR [ecx+ebx*8],ch
  41568a:	inc    ecx
  41568b:	add    BYTE PTR [edx+edi*1+0x18380046],al
  415692:	add    BYTE PTR [eax],al
  415694:	pop    esp
  415695:	fld    DWORD PTR [ecx+0x0]
  415698:	test   BYTE PTR [edx],bh
  41569a:	inc    esi
  41569b:	add    BYTE PTR [eax],bh
  41569d:	sbb    BYTE PTR [eax],al
  41569f:	add    BYTE PTR [ecx+ebx*8],ch
  4156a2:	inc    ecx
  4156a3:	add    BYTE PTR [edx+edi*1+0x18380006],al
  4156aa:	add    BYTE PTR [eax],al
  4156ac:	pop    esp
  4156ad:	fld    DWORD PTR [ecx+0x0]
  4156b0:	test   BYTE PTR [edx],bh
  4156b2:	push   es
  4156b3:	add    BYTE PTR [eax],bh
  4156b5:	sbb    BYTE PTR [eax],al
  4156b7:	add    BYTE PTR [eax-0x25],dl
  4156ba:	inc    ecx
  4156bb:	add    BYTE PTR [eax+edi*8+0x81800cd],al
  4156c2:	add    BYTE PTR [eax],al
  4156c4:	or     al,0xdc
  4156c6:	inc    ecx
  4156c7:	add    BYTE PTR [eax+edi*8+0x81800cd],al
  4156ce:	add    BYTE PTR [eax],al
  4156d0:	push   eax
  4156d1:	fild   DWORD PTR [ecx+0x0]
  4156d4:	test   al,bh
  4156d6:	in     eax,dx
  4156d7:	add    BYTE PTR [eax],bl
  4156d9:	or     BYTE PTR [eax],al
  4156db:	add    BYTE PTR [esp+ebx*8],cl
  4156de:	inc    ecx
  4156df:	add    BYTE PTR [eax+edi*8+0x81800ed],al
  4156e6:	add    BYTE PTR [eax],al
  4156e8:	push   eax
  4156e9:	fild   DWORD PTR [ecx+0x0]
  4156ec:	test   al,bh
  4156ee:	out    dx,eax
  4156ef:	add    BYTE PTR [eax],bl
  4156f1:	or     BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebx+ebx*8-0x77bffbf],dh
  4156fa:	out    dx,eax
  4156fb:	add    BYTE PTR [eax],bl
  4156fd:	or     BYTE PTR [eax],al
  4156ff:	add    BYTE PTR [eax-0x25],dl
  415702:	inc    ecx
  415703:	add    BYTE PTR [eax+edi*8+0x81800ee],al
  41570a:	add    BYTE PTR [eax],al
  41570c:	call   0x844198ec
  415711:	clc    
  415712:	out    dx,al
  415713:	add    BYTE PTR [eax],bl
  415715:	or     BYTE PTR [eax],al
  415717:	add    BYTE PTR [eax-0x25],dl
  41571a:	inc    ecx
  41571b:	add    BYTE PTR [eax+edi*8+0x81800ec],al
  415722:	add    BYTE PTR [eax],al
  415724:	xor    ah,bl
  415726:	inc    ecx
  415727:	add    BYTE PTR [eax+edi*8+0x81800ec],al
  41572e:	add    BYTE PTR [eax],al
  415730:	pop    esp
  415731:	fild   DWORD PTR [ecx+0x0]
  415734:	cmp    eax,0xffffffcd
  415737:	pop    es
  415738:	cwde   
  415739:	or     BYTE PTR [eax],al
  41573b:	add    BYTE PTR [esp+ebx*8],bh
  41573e:	inc    ecx
  41573f:	add    BYTE PTR [ebx-0x67f83208],al
  415745:	or     BYTE PTR [eax],al
  415747:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41574b:	add    BYTE PTR [ebx-0x67f81208],al
  415751:	or     BYTE PTR [eax],al
  415753:	add    BYTE PTR [esp+ebx*8],bh
  415756:	inc    ecx
  415757:	add    BYTE PTR [ebx-0x67f81208],al
  41575d:	or     BYTE PTR [eax],al
  41575f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415763:	add    BYTE PTR [ebx-0x67f81008],al
  415769:	or     BYTE PTR [eax],al
  41576b:	add    BYTE PTR [esp+ebx*8],bh
  41576e:	inc    ecx
  41576f:	add    BYTE PTR [ebx-0x67f81008],al
  415775:	or     BYTE PTR [eax],al
  415777:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41577b:	add    BYTE PTR [ebx-0x67f81108],al
  415781:	or     BYTE PTR [eax],al
  415783:	add    BYTE PTR [esp+ebx*8],bh
  415786:	inc    ecx
  415787:	add    BYTE PTR [ebx-0x67f81108],al
  41578d:	or     BYTE PTR [eax],al
  41578f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415793:	add    BYTE PTR [ebx-0x67f81308],al
  415799:	or     BYTE PTR [eax],al
  41579b:	add    BYTE PTR [esp+ebx*8],bh
  41579e:	inc    ecx
  41579f:	add    BYTE PTR [ebx-0x67f81308],al
  4157a5:	or     BYTE PTR [eax],al
  4157a7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4157ab:	add    BYTE PTR [ebx-0x67f83008],al
  4157b1:	or     BYTE PTR [eax],al
  4157b3:	add    BYTE PTR [esp+ebx*8],bh
  4157b6:	inc    ecx
  4157b7:	add    BYTE PTR [ebx-0x67f83008],al
  4157bd:	or     BYTE PTR [eax],al
  4157bf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4157c3:	add    BYTE PTR [ebx-0x67f83108],al
  4157c9:	or     BYTE PTR [eax],al
  4157cb:	add    BYTE PTR [esp+ebx*8],bh
  4157ce:	inc    ecx
  4157cf:	add    BYTE PTR [ebx-0x67f83108],al
  4157d5:	or     BYTE PTR [eax],al
  4157d7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4157db:	add    BYTE PTR [ebx-0x67f83308],al
  4157e1:	or     BYTE PTR [eax],al
  4157e3:	add    BYTE PTR [esp+ebx*8],bh
  4157e6:	inc    ecx
  4157e7:	add    BYTE PTR [ebx-0x67f83308],al
  4157ed:	or     BYTE PTR [eax],al
  4157ef:	add    BYTE PTR [eax-0x25],dl
  4157f2:	inc    ecx
  4157f3:	add    BYTE PTR [eax+edi*8+0x81800cf],al
  4157fa:	add    BYTE PTR [eax],al
  4157fc:	mov    ah,0xdb
  4157fe:	inc    ecx
  4157ff:	add    BYTE PTR [eax+edi*8+0x81800cf],al
  415806:	add    BYTE PTR [eax],al
  415808:	pop    esp
  415809:	fild   DWORD PTR [ecx+0x0]
  41580c:	cmp    eax,0xffffffcd
  41580f:	add    eax,0x898
  415814:	cmp    al,0xdc
  415816:	inc    ecx
  415817:	add    BYTE PTR [ebx-0x67fa3208],al
  41581d:	or     BYTE PTR [eax],al
  41581f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415823:	add    BYTE PTR [ebx-0x67fa1208],al
  415829:	or     BYTE PTR [eax],al
  41582b:	add    BYTE PTR [esp+ebx*8],bh
  41582e:	inc    ecx
  41582f:	add    BYTE PTR [ebx-0x67fa1208],al
  415835:	or     BYTE PTR [eax],al
  415837:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41583b:	add    BYTE PTR [ebx-0x67fa1008],al
  415841:	or     BYTE PTR [eax],al
  415843:	add    BYTE PTR [esp+ebx*8],bh
  415846:	inc    ecx
  415847:	add    BYTE PTR [ebx-0x67fa1008],al
  41584d:	or     BYTE PTR [eax],al
  41584f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415853:	add    BYTE PTR [ebx-0x67fa1108],al
  415859:	or     BYTE PTR [eax],al
  41585b:	add    BYTE PTR [esp+ebx*8],bh
  41585e:	inc    ecx
  41585f:	add    BYTE PTR [ebx-0x67fa1108],al
  415865:	or     BYTE PTR [eax],al
  415867:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41586b:	add    BYTE PTR [ebx-0x67fa1308],al
  415871:	or     BYTE PTR [eax],al
  415873:	add    BYTE PTR [esp+ebx*8],bh
  415876:	inc    ecx
  415877:	add    BYTE PTR [ebx-0x67fa1308],al
  41587d:	or     BYTE PTR [eax],al
  41587f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415883:	add    BYTE PTR [ebx-0x67fa3008],al
  415889:	or     BYTE PTR [eax],al
  41588b:	add    BYTE PTR [esp+ebx*8],bh
  41588e:	inc    ecx
  41588f:	add    BYTE PTR [ebx-0x67fa3008],al
  415895:	or     BYTE PTR [eax],al
  415897:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41589b:	add    BYTE PTR [ebx-0x67fa3108],al
  4158a1:	or     BYTE PTR [eax],al
  4158a3:	add    BYTE PTR [esp+ebx*8],bh
  4158a6:	inc    ecx
  4158a7:	add    BYTE PTR [ebx-0x67fa3108],al
  4158ad:	or     BYTE PTR [eax],al
  4158af:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4158b3:	add    BYTE PTR [ebx-0x67fa3308],al
  4158b9:	or     BYTE PTR [eax],al
  4158bb:	add    BYTE PTR [esp+ebx*8],bh
  4158be:	inc    ecx
  4158bf:	add    BYTE PTR [ebx-0x67fa3308],al
  4158c5:	or     BYTE PTR [eax],al
  4158c7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4158cb:	add    BYTE PTR [ebx-0x67ff3208],al
  4158d1:	or     BYTE PTR [eax],al
  4158d3:	add    BYTE PTR [esp+ebx*8],bh
  4158d6:	inc    ecx
  4158d7:	add    BYTE PTR [ebx-0x67ff3208],al
  4158dd:	or     BYTE PTR [eax],al
  4158df:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4158e3:	add    BYTE PTR [ebx-0x67ff1208],al
  4158e9:	or     BYTE PTR [eax],al
  4158eb:	add    BYTE PTR [esp+ebx*8],bh
  4158ee:	inc    ecx
  4158ef:	add    BYTE PTR [ebx-0x67ff1208],al
  4158f5:	or     BYTE PTR [eax],al
  4158f7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4158fb:	add    BYTE PTR [ebx-0x67ff1008],al
  415901:	or     BYTE PTR [eax],al
  415903:	add    BYTE PTR [esp+ebx*8],bh
  415906:	inc    ecx
  415907:	add    BYTE PTR [ebx-0x67ff1008],al
  41590d:	or     BYTE PTR [eax],al
  41590f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415913:	add    BYTE PTR [ebx-0x67ff1108],al
  415919:	or     BYTE PTR [eax],al
  41591b:	add    BYTE PTR [esp+ebx*8],bh
  41591e:	inc    ecx
  41591f:	add    BYTE PTR [ebx-0x67ff1108],al
  415925:	or     BYTE PTR [eax],al
  415927:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41592b:	add    BYTE PTR [ebx-0x67ff1308],al
  415931:	or     BYTE PTR [eax],al
  415933:	add    BYTE PTR [esp+ebx*8],bh
  415936:	inc    ecx
  415937:	add    BYTE PTR [ebx-0x67ff1308],al
  41593d:	or     BYTE PTR [eax],al
  41593f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415943:	add    BYTE PTR [ebx-0x67ff3008],al
  415949:	or     BYTE PTR [eax],al
  41594b:	add    BYTE PTR [esp+ebx*8],bh
  41594e:	inc    ecx
  41594f:	add    BYTE PTR [ebx-0x67ff3008],al
  415955:	or     BYTE PTR [eax],al
  415957:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41595b:	add    BYTE PTR [ebx-0x67ff3108],al
  415961:	or     BYTE PTR [eax],al
  415963:	add    BYTE PTR [esp+ebx*8],bh
  415966:	inc    ecx
  415967:	add    BYTE PTR [ebx-0x67ff3108],al
  41596d:	or     BYTE PTR [eax],al
  41596f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415973:	add    BYTE PTR [ebx-0x67ff3308],al
  415979:	or     BYTE PTR [eax],al
  41597b:	add    BYTE PTR [esp+ebx*8],bh
  41597e:	inc    ecx
  41597f:	add    BYTE PTR [ebx-0x67ff3308],al
  415985:	or     BYTE PTR [eax],al
  415987:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41598b:	add    BYTE PTR [ebx-0x67fe3208],al
  415991:	or     BYTE PTR [eax],al
  415993:	add    BYTE PTR [esp+ebx*8],bh
  415996:	inc    ecx
  415997:	add    BYTE PTR [ebx-0x67fe3208],al
  41599d:	or     BYTE PTR [eax],al
  41599f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4159a3:	add    BYTE PTR [ebx-0x67fe1208],al
  4159a9:	or     BYTE PTR [eax],al
  4159ab:	add    BYTE PTR [esp+ebx*8],bh
  4159ae:	inc    ecx
  4159af:	add    BYTE PTR [ebx-0x67fe1208],al
  4159b5:	or     BYTE PTR [eax],al
  4159b7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4159bb:	add    BYTE PTR [ebx-0x67fe1008],al
  4159c1:	or     BYTE PTR [eax],al
  4159c3:	add    BYTE PTR [esp+ebx*8],bh
  4159c6:	inc    ecx
  4159c7:	add    BYTE PTR [ebx-0x67fe1008],al
  4159cd:	or     BYTE PTR [eax],al
  4159cf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4159d3:	add    BYTE PTR [ebx-0x67fe1108],al
  4159d9:	or     BYTE PTR [eax],al
  4159db:	add    BYTE PTR [esp+ebx*8],bh
  4159de:	inc    ecx
  4159df:	add    BYTE PTR [ebx-0x67fe1108],al
  4159e5:	or     BYTE PTR [eax],al
  4159e7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4159eb:	add    BYTE PTR [ebx-0x67fe1308],al
  4159f1:	or     BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [esp+ebx*8],bh
  4159f6:	inc    ecx
  4159f7:	add    BYTE PTR [ebx-0x67fe1308],al
  4159fd:	or     BYTE PTR [eax],al
  4159ff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415a03:	add    BYTE PTR [ebx-0x67fe3008],al
  415a09:	or     BYTE PTR [eax],al
  415a0b:	add    BYTE PTR [esp+ebx*8],bh
  415a0e:	inc    ecx
  415a0f:	add    BYTE PTR [ebx-0x67fe3008],al
  415a15:	or     BYTE PTR [eax],al
  415a17:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415a1b:	add    BYTE PTR [ebx-0x67fe3108],al
  415a21:	or     BYTE PTR [eax],al
  415a23:	add    BYTE PTR [esp+ebx*8],bh
  415a26:	inc    ecx
  415a27:	add    BYTE PTR [ebx-0x67fe3108],al
  415a2d:	or     BYTE PTR [eax],al
  415a2f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415a33:	add    BYTE PTR [ebx-0x67fe3308],al
  415a39:	or     BYTE PTR [eax],al
  415a3b:	add    BYTE PTR [esp+ebx*8],bh
  415a3e:	inc    ecx
  415a3f:	add    BYTE PTR [ebx-0x67fe3308],al
  415a45:	or     BYTE PTR [eax],al
  415a47:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415a4b:	add    BYTE PTR [ebx-0x67fd3208],al
  415a51:	or     BYTE PTR [eax],al
  415a53:	add    BYTE PTR [esp+ebx*8],bh
  415a56:	inc    ecx
  415a57:	add    BYTE PTR [ebx-0x67fd3208],al
  415a5d:	or     BYTE PTR [eax],al
  415a5f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415a63:	add    BYTE PTR [ebx-0x67fd1208],al
  415a69:	or     BYTE PTR [eax],al
  415a6b:	add    BYTE PTR [esp+ebx*8],bh
  415a6e:	inc    ecx
  415a6f:	add    BYTE PTR [ebx-0x67fd1208],al
  415a75:	or     BYTE PTR [eax],al
  415a77:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415a7b:	add    BYTE PTR [ebx-0x67fd1008],al
  415a81:	or     BYTE PTR [eax],al
  415a83:	add    BYTE PTR [esp+ebx*8],bh
  415a86:	inc    ecx
  415a87:	add    BYTE PTR [ebx-0x67fd1008],al
  415a8d:	or     BYTE PTR [eax],al
  415a8f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415a93:	add    BYTE PTR [ebx-0x67fd1108],al
  415a99:	or     BYTE PTR [eax],al
  415a9b:	add    BYTE PTR [esp+ebx*8],bh
  415a9e:	inc    ecx
  415a9f:	add    BYTE PTR [ebx-0x67fd1108],al
  415aa5:	or     BYTE PTR [eax],al
  415aa7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415aab:	add    BYTE PTR [ebx-0x67fd1308],al
  415ab1:	or     BYTE PTR [eax],al
  415ab3:	add    BYTE PTR [esp+ebx*8],bh
  415ab6:	inc    ecx
  415ab7:	add    BYTE PTR [ebx-0x67fd1308],al
  415abd:	or     BYTE PTR [eax],al
  415abf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415ac3:	add    BYTE PTR [ebx-0x67fd3008],al
  415ac9:	or     BYTE PTR [eax],al
  415acb:	add    BYTE PTR [esp+ebx*8],bh
  415ace:	inc    ecx
  415acf:	add    BYTE PTR [ebx-0x67fd3008],al
  415ad5:	or     BYTE PTR [eax],al
  415ad7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415adb:	add    BYTE PTR [ebx-0x67fd3108],al
  415ae1:	or     BYTE PTR [eax],al
  415ae3:	add    BYTE PTR [esp+ebx*8],bh
  415ae6:	inc    ecx
  415ae7:	add    BYTE PTR [ebx-0x67fd3108],al
  415aed:	or     BYTE PTR [eax],al
  415aef:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415af3:	add    BYTE PTR [ebx-0x67fd3308],al
  415af9:	or     BYTE PTR [eax],al
  415afb:	add    BYTE PTR [esp+ebx*8],bh
  415afe:	inc    ecx
  415aff:	add    BYTE PTR [ebx-0x67fd3308],al
  415b05:	or     BYTE PTR [eax],al
  415b07:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415b0b:	add    BYTE PTR [ebx-0x67fc3208],al
  415b11:	or     BYTE PTR [eax],al
  415b13:	add    BYTE PTR [esp+ebx*8],bh
  415b16:	inc    ecx
  415b17:	add    BYTE PTR [ebx-0x67fc3208],al
  415b1d:	or     BYTE PTR [eax],al
  415b1f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415b23:	add    BYTE PTR [ebx-0x67fc1208],al
  415b29:	or     BYTE PTR [eax],al
  415b2b:	add    BYTE PTR [esp+ebx*8],bh
  415b2e:	inc    ecx
  415b2f:	add    BYTE PTR [ebx-0x67fc1208],al
  415b35:	or     BYTE PTR [eax],al
  415b37:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415b3b:	add    BYTE PTR [ebx-0x67fc1008],al
  415b41:	or     BYTE PTR [eax],al
  415b43:	add    BYTE PTR [esp+ebx*8],bh
  415b46:	inc    ecx
  415b47:	add    BYTE PTR [ebx-0x67fc1008],al
  415b4d:	or     BYTE PTR [eax],al
  415b4f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415b53:	add    BYTE PTR [ebx-0x67fc1108],al
  415b59:	or     BYTE PTR [eax],al
  415b5b:	add    BYTE PTR [esp+ebx*8],bh
  415b5e:	inc    ecx
  415b5f:	add    BYTE PTR [ebx-0x67fc1108],al
  415b65:	or     BYTE PTR [eax],al
  415b67:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415b6b:	add    BYTE PTR [ebx-0x67fc1308],al
  415b71:	or     BYTE PTR [eax],al
  415b73:	add    BYTE PTR [esp+ebx*8],bh
  415b76:	inc    ecx
  415b77:	add    BYTE PTR [ebx-0x67fc1308],al
  415b7d:	or     BYTE PTR [eax],al
  415b7f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415b83:	add    BYTE PTR [ebx-0x67fc3008],al
  415b89:	or     BYTE PTR [eax],al
  415b8b:	add    BYTE PTR [esp+ebx*8],bh
  415b8e:	inc    ecx
  415b8f:	add    BYTE PTR [ebx-0x67fc3008],al
  415b95:	or     BYTE PTR [eax],al
  415b97:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415b9b:	add    BYTE PTR [ebx-0x67fc3108],al
  415ba1:	or     BYTE PTR [eax],al
  415ba3:	add    BYTE PTR [esp+ebx*8],bh
  415ba6:	inc    ecx
  415ba7:	add    BYTE PTR [ebx-0x67fc3108],al
  415bad:	or     BYTE PTR [eax],al
  415baf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415bb3:	add    BYTE PTR [ebx-0x67fc3308],al
  415bb9:	or     BYTE PTR [eax],al
  415bbb:	add    BYTE PTR [esp+ebx*8],bh
  415bbe:	inc    ecx
  415bbf:	add    BYTE PTR [ebx-0x67fc3308],al
  415bc5:	or     BYTE PTR [eax],al
  415bc7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415bcb:	add    BYTE PTR [ebx-0x67f93208],al
  415bd1:	or     BYTE PTR [eax],al
  415bd3:	add    BYTE PTR [esp+ebx*8],bh
  415bd6:	inc    ecx
  415bd7:	add    BYTE PTR [ebx-0x67f93208],al
  415bdd:	or     BYTE PTR [eax],al
  415bdf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415be3:	add    BYTE PTR [ebx-0x67f91208],al
  415be9:	or     BYTE PTR [eax],al
  415beb:	add    BYTE PTR [esp+ebx*8],bh
  415bee:	inc    ecx
  415bef:	add    BYTE PTR [ebx-0x67f91208],al
  415bf5:	or     BYTE PTR [eax],al
  415bf7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415bfb:	add    BYTE PTR [ebx-0x67f91008],al
  415c01:	or     BYTE PTR [eax],al
  415c03:	add    BYTE PTR [esp+ebx*8],bh
  415c06:	inc    ecx
  415c07:	add    BYTE PTR [ebx-0x67f91008],al
  415c0d:	or     BYTE PTR [eax],al
  415c0f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415c13:	add    BYTE PTR [ebx-0x67f91108],al
  415c19:	or     BYTE PTR [eax],al
  415c1b:	add    BYTE PTR [esp+ebx*8],bh
  415c1e:	inc    ecx
  415c1f:	add    BYTE PTR [ebx-0x67f91108],al
  415c25:	or     BYTE PTR [eax],al
  415c27:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415c2b:	add    BYTE PTR [ebx-0x67f91308],al
  415c31:	or     BYTE PTR [eax],al
  415c33:	add    BYTE PTR [esp+ebx*8],bh
  415c36:	inc    ecx
  415c37:	add    BYTE PTR [ebx-0x67f91308],al
  415c3d:	or     BYTE PTR [eax],al
  415c3f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415c43:	add    BYTE PTR [ebx-0x67f93008],al
  415c49:	or     BYTE PTR [eax],al
  415c4b:	add    BYTE PTR [esp+ebx*8],bh
  415c4e:	inc    ecx
  415c4f:	add    BYTE PTR [ebx-0x67f93008],al
  415c55:	or     BYTE PTR [eax],al
  415c57:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415c5b:	add    BYTE PTR [ebx-0x67f93108],al
  415c61:	or     BYTE PTR [eax],al
  415c63:	add    BYTE PTR [esp+ebx*8],bh
  415c66:	inc    ecx
  415c67:	add    BYTE PTR [ebx-0x67f93108],al
  415c6d:	or     BYTE PTR [eax],al
  415c6f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415c73:	add    BYTE PTR [ebx-0x67f93308],al
  415c79:	or     BYTE PTR [eax],al
  415c7b:	add    BYTE PTR [esp+ebx*8],bh
  415c7e:	inc    ecx
  415c7f:	add    BYTE PTR [ebx-0x67f93308],al
  415c85:	or     BYTE PTR [eax],al
  415c87:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415c8b:	add    BYTE PTR [ebx-0x67fb3208],al
  415c91:	or     BYTE PTR [eax],al
  415c93:	add    BYTE PTR [esp+ebx*8],bh
  415c96:	inc    ecx
  415c97:	add    BYTE PTR [ebx-0x67fb3208],al
  415c9d:	or     BYTE PTR [eax],al
  415c9f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415ca3:	add    BYTE PTR [ebx-0x67fb1208],al
  415ca9:	or     BYTE PTR [eax],al
  415cab:	add    BYTE PTR [esp+ebx*8],bh
  415cae:	inc    ecx
  415caf:	add    BYTE PTR [ebx-0x67fb1208],al
  415cb5:	or     BYTE PTR [eax],al
  415cb7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415cbb:	add    BYTE PTR [ebx-0x67fb1008],al
  415cc1:	or     BYTE PTR [eax],al
  415cc3:	add    BYTE PTR [esp+ebx*8],bh
  415cc6:	inc    ecx
  415cc7:	add    BYTE PTR [ebx-0x67fb1008],al
  415ccd:	or     BYTE PTR [eax],al
  415ccf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415cd3:	add    BYTE PTR [ebx-0x67fb1108],al
  415cd9:	or     BYTE PTR [eax],al
  415cdb:	add    BYTE PTR [esp+ebx*8],bh
  415cde:	inc    ecx
  415cdf:	add    BYTE PTR [ebx-0x67fb1108],al
  415ce5:	or     BYTE PTR [eax],al
  415ce7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415ceb:	add    BYTE PTR [ebx-0x67fb1308],al
  415cf1:	or     BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [esp+ebx*8],bh
  415cf6:	inc    ecx
  415cf7:	add    BYTE PTR [ebx-0x67fb1308],al
  415cfd:	or     BYTE PTR [eax],al
  415cff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415d03:	add    BYTE PTR [ebx-0x67fb3008],al
  415d09:	or     BYTE PTR [eax],al
  415d0b:	add    BYTE PTR [esp+ebx*8],bh
  415d0e:	inc    ecx
  415d0f:	add    BYTE PTR [ebx-0x67fb3008],al
  415d15:	or     BYTE PTR [eax],al
  415d17:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415d1b:	add    BYTE PTR [ebx-0x67fb3108],al
  415d21:	or     BYTE PTR [eax],al
  415d23:	add    BYTE PTR [esp+ebx*8],bh
  415d26:	inc    ecx
  415d27:	add    BYTE PTR [ebx-0x67fb3108],al
  415d2d:	or     BYTE PTR [eax],al
  415d2f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415d33:	add    BYTE PTR [ebx-0x67fb3308],al
  415d39:	or     BYTE PTR [eax],al
  415d3b:	add    BYTE PTR [esp+ebx*8],bh
  415d3e:	inc    ecx
  415d3f:	add    BYTE PTR [ebx-0x67fb3308],al
  415d45:	or     BYTE PTR [eax],al
  415d47:	add    BYTE PTR [eax-0x25],dl
  415d4a:	inc    ecx
  415d4b:	add    BYTE PTR [eax+edi*8+0x81800ce],al
  415d52:	add    BYTE PTR [eax],al
  415d54:	call   0x84419f34
  415d59:	clc    
  415d5a:	into   
  415d5b:	add    BYTE PTR [eax],bl
  415d5d:	or     BYTE PTR [eax],al
  415d5f:	add    BYTE PTR [eax-0x25],dl
  415d62:	inc    ecx
  415d63:	add    BYTE PTR [eax+edi*8+0x81800cc],al
  415d6a:	add    BYTE PTR [eax],al
  415d6c:	xor    ah,bl
  415d6e:	inc    ecx
  415d6f:	add    BYTE PTR [eax+edi*8+0x81800cc],al
  415d76:	add    BYTE PTR [eax],al
  415d78:	adc    ch,bl
  415d7a:	inc    ecx
  415d7b:	add    BYTE PTR [ebx+0x3800623a],al
  415d81:	or     BYTE PTR [eax],al
  415d83:	add    al,ah
  415d85:	fld    QWORD PTR [ecx+0x0]
  415d88:	cmp    DWORD PTR [edx],0x62
  415d8b:	add    BYTE PTR [eax],bh
  415d8d:	or     BYTE PTR [eax],al
  415d8f:	add    al,al
  415d91:	fld    QWORD PTR [ecx+0x0]
  415d94:	cmp    DWORD PTR [edx],0x62
  415d97:	add    BYTE PTR [eax],bh
  415d99:	or     BYTE PTR [eax],al
  415d9b:	add    BYTE PTR [eax],dl
  415d9d:	fld    QWORD PTR [ecx+0x0]
  415da0:	cmp    DWORD PTR [edx],0x63
  415da3:	add    BYTE PTR [eax],bh
  415da5:	or     BYTE PTR [eax],al
  415da7:	add    al,ah
  415da9:	fld    QWORD PTR [ecx+0x0]
  415dac:	cmp    DWORD PTR [edx],0x63
  415daf:	add    BYTE PTR [eax],bh
  415db1:	or     BYTE PTR [eax],al
  415db3:	add    al,al
  415db5:	fld    QWORD PTR [ecx+0x0]
  415db8:	cmp    DWORD PTR [edx],0x63
  415dbb:	add    BYTE PTR [eax],bh
  415dbd:	or     BYTE PTR [eax],al
  415dbf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415dc3:	add    BYTE PTR [ebx+0x38006500],al
  415dc9:	or     BYTE PTR [eax],al
  415dcb:	add    BYTE PTR [eax],bl
  415dcd:	fadd   QWORD PTR [ecx+0x0]
  415dd0:	add    DWORD PTR [eax],0x65
  415dd3:	add    BYTE PTR [eax],bh
  415dd5:	or     BYTE PTR [eax],al
  415dd7:	add    BYTE PTR [eax],bh
  415dd9:	fld    DWORD PTR [ecx+0x0]
  415ddc:	add    DWORD PTR [eax],0x65
  415ddf:	add    BYTE PTR [eax],bh
  415de1:	sbb    BYTE PTR [eax],al
  415de3:	add    ah,bl
  415de5:	fld    DWORD PTR [ecx+0x0]
  415de8:	add    DWORD PTR [eax],0x65
  415deb:	add    BYTE PTR [eax],bh
  415ded:	sbb    BYTE PTR [eax],al
  415def:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415df3:	add    BYTE PTR [ebx+0x38003738],al
  415df9:	or     BYTE PTR [eax],al
  415dfb:	add    al,al
  415dfd:	fild   DWORD PTR [ecx+0x0]
  415e00:	cmp    DWORD PTR [eax],0x37
  415e03:	add    BYTE PTR [eax],bh
  415e05:	or     BYTE PTR [eax],al
  415e07:	add    BYTE PTR [eax],bh
  415e09:	fld    DWORD PTR [ecx+0x0]
  415e0c:	cmp    DWORD PTR [eax],0x37
  415e0f:	add    BYTE PTR [eax],bh
  415e11:	sbb    BYTE PTR [eax],al
  415e13:	add    BYTE PTR [eax-0x7cffbe27],dl
  415e19:	cmp    BYTE PTR [edi],dh
  415e1b:	add    BYTE PTR [eax],bh
  415e1d:	sbb    BYTE PTR [eax],al
  415e1f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415e23:	add    BYTE PTR [ebx+0x38006600],al
  415e29:	or     BYTE PTR [eax],al
  415e2b:	add    ah,dh
  415e2d:	fild   DWORD PTR [ecx+0x0]
  415e30:	add    DWORD PTR [eax],0x66
  415e33:	add    BYTE PTR [eax],bh
  415e35:	or     BYTE PTR [eax],al
  415e37:	add    BYTE PTR [eax],bh
  415e39:	fld    DWORD PTR [ecx+0x0]
  415e3c:	add    DWORD PTR [eax],0x66
  415e3f:	add    BYTE PTR [eax],bh
  415e41:	sbb    BYTE PTR [eax],al
  415e43:	add    ah,al
  415e45:	fld    DWORD PTR [ecx+0x0]
  415e48:	add    DWORD PTR [eax],0x66
  415e4b:	add    BYTE PTR [eax],bh
  415e4d:	sbb    BYTE PTR [eax],al
  415e4f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415e53:	add    BYTE PTR [ebx+0x38006400],al
  415e59:	or     BYTE PTR [eax],al
  415e5b:	add    BYTE PTR [esp+ebx*8],bh
  415e5e:	inc    ecx
  415e5f:	add    BYTE PTR [ebx+0x38006400],al
  415e65:	or     BYTE PTR [eax],al
  415e67:	add    BYTE PTR [eax],bh
  415e69:	fld    DWORD PTR [ecx+0x0]
  415e6c:	add    DWORD PTR [eax],0x64
  415e6f:	add    BYTE PTR [eax],bh
  415e71:	sbb    BYTE PTR [eax],al
  415e73:	add    BYTE PTR [eax],al
  415e75:	fiadd  DWORD PTR [ecx+0x0]
  415e78:	add    DWORD PTR [eax],0x64
  415e7b:	add    BYTE PTR [eax],bh
  415e7d:	sbb    BYTE PTR [eax],al
  415e7f:	add    BYTE PTR [eax],dl
  415e81:	fld    QWORD PTR [ecx+0x0]
  415e84:	cmp    DWORD PTR [edx],0x60
  415e87:	add    BYTE PTR [eax],bh
  415e89:	or     BYTE PTR [eax],al
  415e8b:	add    al,ah
  415e8d:	fld    QWORD PTR [ecx+0x0]
  415e90:	cmp    DWORD PTR [edx],0x60
  415e93:	add    BYTE PTR [eax],bh
  415e95:	or     BYTE PTR [eax],al
  415e97:	add    al,al
  415e99:	fld    QWORD PTR [ecx+0x0]
  415e9c:	cmp    DWORD PTR [edx],0x60
  415e9f:	add    BYTE PTR [eax],bh
  415ea1:	or     BYTE PTR [eax],al
  415ea3:	add    BYTE PTR [eax],dl
  415ea5:	fld    QWORD PTR [ecx+0x0]
  415ea8:	cmp    DWORD PTR [edx],0x61
  415eab:	add    BYTE PTR [eax],bh
  415ead:	or     BYTE PTR [eax],al
  415eaf:	add    al,ah
  415eb1:	fld    QWORD PTR [ecx+0x0]
  415eb4:	cmp    DWORD PTR [edx],0x61
  415eb7:	add    BYTE PTR [eax],bh
  415eb9:	or     BYTE PTR [eax],al
  415ebb:	add    al,al
  415ebd:	fld    QWORD PTR [ecx+0x0]
  415ec0:	cmp    DWORD PTR [edx],0x61
  415ec3:	add    BYTE PTR [eax],bh
  415ec5:	or     BYTE PTR [eax],al
  415ec7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415ecb:	add    BYTE PTR [ebx+0x38007500],al
  415ed1:	or     BYTE PTR [eax],al
  415ed3:	add    BYTE PTR [eax],bl
  415ed5:	fadd   QWORD PTR [ecx+0x0]
  415ed8:	add    DWORD PTR [eax],0x75
  415edb:	add    BYTE PTR [eax],bh
  415edd:	or     BYTE PTR [eax],al
  415edf:	add    BYTE PTR [eax],bh
  415ee1:	fld    DWORD PTR [ecx+0x0]
  415ee4:	add    DWORD PTR [eax],0x75
  415ee7:	add    BYTE PTR [eax],bh
  415ee9:	sbb    BYTE PTR [eax],al
  415eeb:	add    ah,bl
  415eed:	fld    DWORD PTR [ecx+0x0]
  415ef0:	add    DWORD PTR [eax],0x75
  415ef3:	add    BYTE PTR [eax],bh
  415ef5:	sbb    BYTE PTR [eax],al
  415ef7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415efb:	add    BYTE PTR [ebx+0x38002938],al
  415f01:	or     BYTE PTR [eax],al
  415f03:	add    al,al
  415f05:	fild   DWORD PTR [ecx+0x0]
  415f08:	cmp    DWORD PTR [eax],0x29
  415f0b:	add    BYTE PTR [eax],bh
  415f0d:	or     BYTE PTR [eax],al
  415f0f:	add    BYTE PTR [eax],bh
  415f11:	fld    DWORD PTR [ecx+0x0]
  415f14:	cmp    DWORD PTR [eax],0x29
  415f17:	add    BYTE PTR [eax],bh
  415f19:	sbb    BYTE PTR [eax],al
  415f1b:	add    BYTE PTR [eax-0x7cffbe27],dl
  415f21:	cmp    BYTE PTR [ecx],ch
  415f23:	add    BYTE PTR [eax],bh
  415f25:	sbb    BYTE PTR [eax],al
  415f27:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415f2b:	add    BYTE PTR [ebx+0x38007600],al
  415f31:	or     BYTE PTR [eax],al
  415f33:	add    ah,dh
  415f35:	fild   DWORD PTR [ecx+0x0]
  415f38:	add    DWORD PTR [eax],0x76
  415f3b:	add    BYTE PTR [eax],bh
  415f3d:	or     BYTE PTR [eax],al
  415f3f:	add    BYTE PTR [eax],bh
  415f41:	fld    DWORD PTR [ecx+0x0]
  415f44:	add    DWORD PTR [eax],0x76
  415f47:	add    BYTE PTR [eax],bh
  415f49:	sbb    BYTE PTR [eax],al
  415f4b:	add    ah,al
  415f4d:	fld    DWORD PTR [ecx+0x0]
  415f50:	add    DWORD PTR [eax],0x76
  415f53:	add    BYTE PTR [eax],bh
  415f55:	sbb    BYTE PTR [eax],al
  415f57:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  415f5b:	add    BYTE PTR [ebx+0x38007400],al
  415f61:	or     BYTE PTR [eax],al
  415f63:	add    BYTE PTR [esp+ebx*8],bh
  415f66:	inc    ecx
  415f67:	add    BYTE PTR [ebx+0x38007400],al
  415f6d:	or     BYTE PTR [eax],al
  415f6f:	add    BYTE PTR [eax],bh
  415f71:	fld    DWORD PTR [ecx+0x0]
  415f74:	add    DWORD PTR [eax],0x74
  415f77:	add    BYTE PTR [eax],bh
  415f79:	sbb    BYTE PTR [eax],al
  415f7b:	add    BYTE PTR [eax],al
  415f7d:	fiadd  DWORD PTR [ecx+0x0]
  415f80:	add    DWORD PTR [eax],0x74
  415f83:	add    BYTE PTR [eax],bh
  415f85:	sbb    BYTE PTR [eax],al
  415f87:	add    BYTE PTR [ebx+ebx*8+0x41],al
  415f8b:	add    BYTE PTR [eax+edi*8+0x81800a2],al
  415f92:	add    BYTE PTR [eax],al
  415f94:	and    al,0xdc
  415f96:	inc    ecx
  415f97:	add    BYTE PTR [eax+edi*8+0x81800a2],al
  415f9e:	add    BYTE PTR [eax],al
  415fa0:	sub    bl,bl
  415fa2:	inc    ecx
  415fa3:	add    BYTE PTR [eax+edi*8+0x281800a2],al
  415faa:	add    BYTE PTR [eax],al
  415fac:	and    cl,bl
  415fae:	inc    ecx
  415faf:	add    BYTE PTR [eax+edi*8+0x181800a2],al
  415fb6:	add    BYTE PTR [eax],al
  415fb8:	call   0x8441a196
  415fbd:	clc    
  415fbe:	mov    ds:0x181800,al
  415fc3:	add    BYTE PTR [ecx+ebx*8],al
  415fc6:	inc    ecx
  415fc7:	add    BYTE PTR [eax+edi*8+0x381800a2],al
  415fce:	add    BYTE PTR [eax],al
  415fd0:	push   eax
  415fd1:	fild   DWORD PTR [ecx+0x0]
  415fd4:	test   BYTE PTR [edx],bh
  415fd6:	inc    esp
  415fd7:	add    BYTE PTR [eax],bh
  415fd9:	or     BYTE PTR [eax],al
  415fdb:	add    BYTE PTR [ebx+ebx*8+0x3a840041],dh
  415fe2:	inc    esp
  415fe3:	add    BYTE PTR [eax],bh
  415fe5:	or     BYTE PTR [eax],al
  415fe7:	add    BYTE PTR [ebx*8+0x38820041],bl
  415fee:	jns    0x415ff0
  415ff0:	cmp    BYTE PTR [eax],cl
  415ff2:	add    BYTE PTR [eax],al
  415ff4:	push   eax
  415ff5:	fiadd  WORD PTR [ecx+0x0]
  415ff8:	cmp    BYTE PTR [eax],0x79
  415ffb:	add    BYTE PTR [eax],bh
  415ffd:	or     BYTE PTR [eax],al
  415fff:	add    BYTE PTR [edx+ebx*8+0x41],bl
  416003:	add    BYTE PTR [edx+0x38007938],al
  416009:	sbb    BYTE PTR [eax],al
  41600b:	add    al,ah
  41600d:	fiadd  DWORD PTR [ecx+0x0]
  416010:	cmp    BYTE PTR [eax],0x79
  416013:	add    BYTE PTR [eax],bh
  416015:	sbb    BYTE PTR [eax],al
  416017:	add    BYTE PTR [ebx*8+0x38820041],bl
  41601e:	pop    ecx
  41601f:	add    BYTE PTR [eax],bh
  416021:	or     BYTE PTR [eax],al
  416023:	add    BYTE PTR [eax],bl
  416025:	fiadd  WORD PTR [ecx+0x0]
  416028:	cmp    BYTE PTR [eax],0x59
  41602b:	add    BYTE PTR [eax],bh
  41602d:	or     BYTE PTR [eax],al
  41602f:	add    BYTE PTR [edx+ebx*8+0x41],bl
  416033:	add    BYTE PTR [edx+0x38005938],al
  416039:	sbb    BYTE PTR [eax],al
  41603b:	add    al,dl
  41603d:	fiadd  DWORD PTR [ecx+0x0]
  416040:	cmp    BYTE PTR [eax],0x59
  416043:	add    BYTE PTR [eax],bh
  416045:	sbb    BYTE PTR [eax],al
  416047:	add    BYTE PTR [ebx*8+0x38820041],bl
  41604e:	pop    eax
  41604f:	add    BYTE PTR [eax],bh
  416051:	or     BYTE PTR [eax],al
  416053:	add    BYTE PTR [esi+ebx*8],dh
  416056:	inc    ecx
  416057:	add    BYTE PTR [edx+0x38005838],al
  41605d:	or     BYTE PTR [eax],al
  41605f:	add    BYTE PTR [edx+ebx*8+0x41],bl
  416063:	add    BYTE PTR [edx+0x38005838],al
  416069:	sbb    BYTE PTR [eax],al
  41606b:	add    al,bl
  41606d:	fiadd  DWORD PTR [ecx+0x0]
  416070:	cmp    BYTE PTR [eax],0x58
  416073:	add    BYTE PTR [eax],bh
  416075:	sbb    BYTE PTR [eax],al
  416077:	add    BYTE PTR [ebx*8+0x38820041],bl
  41607e:	js     0x416080
  416080:	cmp    BYTE PTR [eax],cl
  416082:	add    BYTE PTR [eax],al
  416084:	fiadd  WORD PTR fs:[ecx+0x0]
  416088:	cmp    BYTE PTR [eax],0x78
  41608b:	add    BYTE PTR [eax],bh
  41608d:	or     BYTE PTR [eax],al
  41608f:	add    BYTE PTR [edx+ebx*8+0x41],bl
  416093:	add    BYTE PTR [edx+0x38007838],al
  416099:	sbb    BYTE PTR [eax],al
  41609b:	add    al,ch
  41609d:	fiadd  DWORD PTR [ecx+0x0]
  4160a0:	cmp    BYTE PTR [eax],0x78
  4160a3:	add    BYTE PTR [eax],bh
  4160a5:	sbb    BYTE PTR [eax],al
  4160a7:	add    BYTE PTR [eax-0x25],dl
  4160aa:	inc    ecx
  4160ab:	add    BYTE PTR [edx+edi*1+0x838000e],al
  4160b2:	add    BYTE PTR [eax],al
  4160b4:	or     al,0xdc
  4160b6:	inc    ecx
  4160b7:	add    BYTE PTR [edx+edi*1+0x838000e],al
  4160be:	add    BYTE PTR [eax],al
  4160c0:	sub    al,0xd9
  4160c2:	inc    ecx
  4160c3:	add    BYTE PTR [edx+edi*1+0x1838000e],al
  4160ca:	add    BYTE PTR [eax],al
  4160cc:	rcr    cl,1
  4160ce:	inc    ecx
  4160cf:	add    BYTE PTR [edx+edi*1+0x1838000e],al
  4160d6:	add    BYTE PTR [eax],al
  4160d8:	inc    esp
  4160d9:	fild   DWORD PTR [ecx+0x0]
  4160dc:	test   BYTE PTR [edx],bh
  4160de:	dec    esp
  4160df:	add    BYTE PTR [eax],bh
  4160e1:	or     BYTE PTR [eax],al
  4160e3:	add    BYTE PTR [esp+ebx*8],ah
  4160e6:	inc    ecx
  4160e7:	add    BYTE PTR [edx+edi*1+0x838004c],al
  4160ee:	add    BYTE PTR [eax],al
  4160f0:	and    cl,bl
  4160f2:	inc    ecx
  4160f3:	add    BYTE PTR [edx+edi*1+0x1838004c],al
  4160fa:	add    BYTE PTR [eax],al
  4160fc:	call   0x8441a2da
  416101:	cmp    cl,BYTE PTR [eax+eax*1+0x38]
  416105:	sbb    BYTE PTR [eax],al
  416107:	add    BYTE PTR [eax-0x25],dl
  41610a:	inc    ecx
  41610b:	add    BYTE PTR [edx+edi*1+0x8380002],al
  416112:	add    BYTE PTR [eax],al
  416114:	call   0x8441a2f4
  416119:	cmp    al,BYTE PTR [edx]
  41611b:	add    BYTE PTR [eax],bh
  41611d:	or     BYTE PTR [eax],al
  41611f:	add    BYTE PTR [ecx+ebx*8],ch
  416122:	inc    ecx
  416123:	add    BYTE PTR [edx+edi*1+0x18380002],al
  41612a:	add    BYTE PTR [eax],al
  41612c:	mov    eax,0x840041d9
  416131:	cmp    al,BYTE PTR [edx]
  416133:	add    BYTE PTR [eax],bh
  416135:	sbb    BYTE PTR [eax],al
  416137:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41613b:	add    BYTE PTR [ebx+0x3800e300],al
  416141:	or     BYTE PTR [eax],al
  416143:	add    BYTE PTR [eax],bl
  416145:	fadd   QWORD PTR [ecx+0x0]
  416148:	add    DWORD PTR [eax],0xffffffe3
  41614b:	add    BYTE PTR [eax],bh
  41614d:	or     BYTE PTR [eax],al
  41614f:	add    BYTE PTR [eax],bh
  416151:	fld    DWORD PTR [ecx+0x0]
  416154:	add    DWORD PTR [eax],0xffffffe3
  416157:	add    BYTE PTR [eax],bh
  416159:	sbb    BYTE PTR [eax],al
  41615b:	add    ah,bl
  41615d:	fld    DWORD PTR [ecx+0x0]
  416160:	add    DWORD PTR [eax],0xffffffe3
  416163:	add    BYTE PTR [eax],bh
  416165:	sbb    BYTE PTR [eax],al
  416167:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41616b:	add    BYTE PTR [ebx+0x3800e000],al
  416171:	or     BYTE PTR [eax],al
  416173:	add    BYTE PTR [esp+ebx*8],bh
  416176:	inc    ecx
  416177:	add    BYTE PTR [ebx+0x3800e000],al
  41617d:	or     BYTE PTR [eax],al
  41617f:	add    BYTE PTR [eax],bh
  416181:	fld    DWORD PTR [ecx+0x0]
  416184:	add    DWORD PTR [eax],0xffffffe0
  416187:	add    BYTE PTR [eax],bh
  416189:	sbb    BYTE PTR [eax],al
  41618b:	add    BYTE PTR [eax],al
  41618d:	fiadd  DWORD PTR [ecx+0x0]
  416190:	add    DWORD PTR [eax],0xffffffe0
  416193:	add    BYTE PTR [eax],bh
  416195:	sbb    BYTE PTR [eax],al
  416197:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41619b:	add    BYTE PTR [ebx+0x3800df00],al
  4161a1:	or     BYTE PTR [eax],al
  4161a3:	add    BYTE PTR [eax-0x7cffbe24],dl
  4161a9:	add    bh,bl
  4161ab:	add    BYTE PTR [eax],bh
  4161ad:	or     BYTE PTR [eax],al
  4161af:	add    BYTE PTR [eax],bh
  4161b1:	fld    DWORD PTR [ecx+0x0]
  4161b4:	add    DWORD PTR [eax],0xffffffdf
  4161b7:	add    BYTE PTR [eax],bh
  4161b9:	sbb    BYTE PTR [eax],al
  4161bb:	add    BYTE PTR [eax],dh
  4161bd:	fiadd  DWORD PTR [ecx+0x0]
  4161c0:	add    DWORD PTR [eax],0xffffffdf
  4161c3:	add    BYTE PTR [eax],bh
  4161c5:	sbb    BYTE PTR [eax],al
  4161c7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4161cb:	add    BYTE PTR [ebx+0x3800db00],al
  4161d1:	or     BYTE PTR [eax],al
  4161d3:	add    BYTE PTR [eax-0x7cffbe24],dl
  4161d9:	add    bl,bl
  4161db:	add    BYTE PTR [eax],bh
  4161dd:	or     BYTE PTR [eax],al
  4161df:	add    BYTE PTR [eax],bh
  4161e1:	fld    DWORD PTR [ecx+0x0]
  4161e4:	add    DWORD PTR [eax],0xffffffdb
  4161e7:	add    BYTE PTR [eax],bh
  4161e9:	sbb    BYTE PTR [eax],al
  4161eb:	add    BYTE PTR [eax],dh
  4161ed:	fiadd  DWORD PTR [ecx+0x0]
  4161f0:	add    DWORD PTR [eax],0xffffffdb
  4161f3:	add    BYTE PTR [eax],bh
  4161f5:	sbb    BYTE PTR [eax],al
  4161f7:	add    BYTE PTR [eax-0x25],dl
  4161fa:	inc    ecx
  4161fb:	add    BYTE PTR [edx+edi*1+0x838000f],al
  416202:	add    BYTE PTR [eax],al
  416204:	xor    ah,bl
  416206:	inc    ecx
  416207:	add    BYTE PTR [edx+edi*1+0x838000f],al
  41620e:	add    BYTE PTR [eax],al
  416210:	sub    al,0xd9
  416212:	inc    ecx
  416213:	add    BYTE PTR [edx+edi*1+0x1838000f],al
  41621a:	add    BYTE PTR [eax],al
  41621c:	hlt    
  41621d:	fld    DWORD PTR [ecx+0x0]
  416220:	test   BYTE PTR [edx],bh
  416222:	(bad)  
  416224:	cmp    BYTE PTR [eax],bl
  416226:	add    BYTE PTR [eax],al
  416228:	pop    esp
  416229:	fild   DWORD PTR [ecx+0x0]
  41622c:	add    DWORD PTR [eax],0xfffffffd
  41622f:	add    BYTE PTR [eax],bh
  416231:	or     BYTE PTR [eax],al
  416233:	add    BYTE PTR [eax],bl
  416235:	fadd   QWORD PTR [ecx+0x0]
  416238:	add    DWORD PTR [eax],0xfffffffd
  41623b:	add    BYTE PTR [eax],bh
  41623d:	or     BYTE PTR [eax],al
  41623f:	add    BYTE PTR [eax],bh
  416241:	fld    DWORD PTR [ecx+0x0]
  416244:	add    DWORD PTR [eax],0xfffffffd
  416247:	add    BYTE PTR [eax],bh
  416249:	sbb    BYTE PTR [eax],al
  41624b:	add    ah,bl
  41624d:	fld    DWORD PTR [ecx+0x0]
  416250:	add    DWORD PTR [eax],0xfffffffd
  416253:	add    BYTE PTR [eax],bh
  416255:	sbb    BYTE PTR [eax],al
  416257:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41625b:	add    BYTE PTR [ebx+0x3800dd00],al
  416261:	or     BYTE PTR [eax],al
  416263:	add    BYTE PTR [eax],bl
  416265:	fadd   QWORD PTR [ecx+0x0]
  416268:	add    DWORD PTR [eax],0xffffffdd
  41626b:	add    BYTE PTR [eax],bh
  41626d:	or     BYTE PTR [eax],al
  41626f:	add    BYTE PTR [eax],bh
  416271:	fld    DWORD PTR [ecx+0x0]
  416274:	add    DWORD PTR [eax],0xffffffdd
  416277:	add    BYTE PTR [eax],bh
  416279:	sbb    BYTE PTR [eax],al
  41627b:	add    ah,bl
  41627d:	fld    DWORD PTR [ecx+0x0]
  416280:	add    DWORD PTR [eax],0xffffffdd
  416283:	add    BYTE PTR [eax],bh
  416285:	sbb    BYTE PTR [eax],al
  416287:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41628b:	add    BYTE PTR [ebx+0x3800dc00],al
  416291:	or     BYTE PTR [eax],al
  416293:	add    BYTE PTR [esp+ebx*8],bh
  416296:	inc    ecx
  416297:	add    BYTE PTR [ebx+0x3800dc00],al
  41629d:	or     BYTE PTR [eax],al
  41629f:	add    BYTE PTR [eax],bh
  4162a1:	fld    DWORD PTR [ecx+0x0]
  4162a4:	add    DWORD PTR [eax],0xffffffdc
  4162a7:	add    BYTE PTR [eax],bh
  4162a9:	sbb    BYTE PTR [eax],al
  4162ab:	add    BYTE PTR [eax],al
  4162ad:	fiadd  DWORD PTR [ecx+0x0]
  4162b0:	add    DWORD PTR [eax],0xffffffdc
  4162b3:	add    BYTE PTR [eax],bh
  4162b5:	sbb    BYTE PTR [eax],al
  4162b7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4162bb:	add    BYTE PTR [ebx+0x3800ed00],al
  4162c1:	or     BYTE PTR [eax],al
  4162c3:	add    BYTE PTR [eax],bl
  4162c5:	fadd   QWORD PTR [ecx+0x0]
  4162c8:	add    DWORD PTR [eax],0xffffffed
  4162cb:	add    BYTE PTR [eax],bh
  4162cd:	or     BYTE PTR [eax],al
  4162cf:	add    BYTE PTR [eax],bh
  4162d1:	fld    DWORD PTR [ecx+0x0]
  4162d4:	add    DWORD PTR [eax],0xffffffed
  4162d7:	add    BYTE PTR [eax],bh
  4162d9:	sbb    BYTE PTR [eax],al
  4162db:	add    ah,bl
  4162dd:	fld    DWORD PTR [ecx+0x0]
  4162e0:	add    DWORD PTR [eax],0xffffffed
  4162e3:	add    BYTE PTR [eax],bh
  4162e5:	sbb    BYTE PTR [eax],al
  4162e7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4162eb:	add    BYTE PTR [ebx+0x3800ec00],al
  4162f1:	or     BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [esp+ebx*8],bh
  4162f6:	inc    ecx
  4162f7:	add    BYTE PTR [ebx+0x3800ec00],al
  4162fd:	or     BYTE PTR [eax],al
  4162ff:	add    BYTE PTR [eax],bh
  416301:	fld    DWORD PTR [ecx+0x0]
  416304:	add    DWORD PTR [eax],0xffffffec
  416307:	add    BYTE PTR [eax],bh
  416309:	sbb    BYTE PTR [eax],al
  41630b:	add    BYTE PTR [eax],al
  41630d:	fiadd  DWORD PTR [ecx+0x0]
  416310:	add    DWORD PTR [eax],0xffffffec
  416313:	add    BYTE PTR [eax],bh
  416315:	sbb    BYTE PTR [eax],al
  416317:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41631b:	add    BYTE PTR [ebx+0x3800d400],al
  416321:	or     BYTE PTR [eax],al
  416323:	add    al,al
  416325:	fild   DWORD PTR [ecx+0x0]
  416328:	add    DWORD PTR [eax],0xffffffd4
  41632b:	add    BYTE PTR [eax],bh
  41632d:	or     BYTE PTR [eax],al
  41632f:	add    BYTE PTR [eax],bh
  416331:	fld    DWORD PTR [ecx+0x0]
  416334:	add    DWORD PTR [eax],0xffffffd4
  416337:	add    BYTE PTR [eax],bh
  416339:	sbb    BYTE PTR [eax],al
  41633b:	add    BYTE PTR [eax-0x7cffbe27],dl
  416341:	add    ah,dl
  416343:	add    BYTE PTR [eax],bh
  416345:	sbb    BYTE PTR [eax],al
  416347:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41634b:	add    BYTE PTR [ebx+0x3800fe00],al
  416351:	or     BYTE PTR [eax],al
  416353:	add    ah,dh
  416355:	fild   DWORD PTR [ecx+0x0]
  416358:	add    DWORD PTR [eax],0xfffffffe
  41635b:	add    BYTE PTR [eax],bh
  41635d:	or     BYTE PTR [eax],al
  41635f:	add    BYTE PTR [eax],bh
  416361:	fld    DWORD PTR [ecx+0x0]
  416364:	add    DWORD PTR [eax],0xfffffffe
  416367:	add    BYTE PTR [eax],bh
  416369:	sbb    BYTE PTR [eax],al
  41636b:	add    ah,al
  41636d:	fld    DWORD PTR [ecx+0x0]
  416370:	add    DWORD PTR [eax],0xfffffffe
  416373:	add    BYTE PTR [eax],bh
  416375:	sbb    BYTE PTR [eax],al
  416377:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41637b:	add    BYTE PTR [ebx+0x3800fc00],al
  416381:	or     BYTE PTR [eax],al
  416383:	add    BYTE PTR [esp+ebx*8],bh
  416386:	inc    ecx
  416387:	add    BYTE PTR [ebx+0x3800fc00],al
  41638d:	or     BYTE PTR [eax],al
  41638f:	add    BYTE PTR [eax],bh
  416391:	fld    DWORD PTR [ecx+0x0]
  416394:	add    DWORD PTR [eax],0xfffffffc
  416397:	add    BYTE PTR [eax],bh
  416399:	sbb    BYTE PTR [eax],al
  41639b:	add    BYTE PTR [eax],al
  41639d:	fiadd  DWORD PTR [ecx+0x0]
  4163a0:	add    DWORD PTR [eax],0xfffffffc
  4163a3:	add    BYTE PTR [eax],bh
  4163a5:	sbb    BYTE PTR [eax],al
  4163a7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4163ab:	add    BYTE PTR [ebx+0x38006700],al
  4163b1:	or     BYTE PTR [eax],al
  4163b3:	add    BYTE PTR [eax],bl
  4163b5:	fadd   QWORD PTR [ecx+0x0]
  4163b8:	add    DWORD PTR [eax],0x67
  4163bb:	add    BYTE PTR [eax],bh
  4163bd:	or     BYTE PTR [eax],al
  4163bf:	add    BYTE PTR [eax],bh
  4163c1:	fld    DWORD PTR [ecx+0x0]
  4163c4:	add    DWORD PTR [eax],0x67
  4163c7:	add    BYTE PTR [eax],bh
  4163c9:	sbb    BYTE PTR [eax],al
  4163cb:	add    ah,bl
  4163cd:	fld    DWORD PTR [ecx+0x0]
  4163d0:	add    DWORD PTR [eax],0x67
  4163d3:	add    BYTE PTR [eax],bh
  4163d5:	sbb    BYTE PTR [eax],al
  4163d7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4163db:	add    BYTE PTR [ebx+0x38002b38],al
  4163e1:	or     BYTE PTR [eax],al
  4163e3:	add    ah,dh
  4163e5:	fild   DWORD PTR [ecx+0x0]
  4163e8:	cmp    DWORD PTR [eax],0x2b
  4163eb:	add    BYTE PTR [eax],bh
  4163ed:	or     BYTE PTR [eax],al
  4163ef:	add    BYTE PTR [eax],bh
  4163f1:	fld    DWORD PTR [ecx+0x0]
  4163f4:	cmp    DWORD PTR [eax],0x2b
  4163f7:	add    BYTE PTR [eax],bh
  4163f9:	sbb    BYTE PTR [eax],al
  4163fb:	add    ah,al
  4163fd:	fld    DWORD PTR [ecx+0x0]
  416400:	cmp    DWORD PTR [eax],0x2b
  416403:	add    BYTE PTR [eax],bh
  416405:	sbb    BYTE PTR [eax],al
  416407:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41640b:	add    BYTE PTR [ebx+0x38006300],al
  416411:	or     BYTE PTR [eax],al
  416413:	add    BYTE PTR [eax],bl
  416415:	fadd   QWORD PTR [ecx+0x0]
  416418:	add    DWORD PTR [eax],0x63
  41641b:	add    BYTE PTR [eax],bh
  41641d:	or     BYTE PTR [eax],al
  41641f:	add    BYTE PTR [eax],bh
  416421:	fld    DWORD PTR [ecx+0x0]
  416424:	add    DWORD PTR [eax],0x63
  416427:	add    BYTE PTR [eax],bh
  416429:	sbb    BYTE PTR [eax],al
  41642b:	add    ah,bl
  41642d:	fld    DWORD PTR [ecx+0x0]
  416430:	add    DWORD PTR [eax],0x63
  416433:	add    BYTE PTR [eax],bh
  416435:	sbb    BYTE PTR [eax],al
  416437:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41643b:	add    BYTE PTR [ebx+0x38006b00],al
  416441:	or     BYTE PTR [eax],al
  416443:	add    ah,dh
  416445:	fild   DWORD PTR [ecx+0x0]
  416448:	add    DWORD PTR [eax],0x6b
  41644b:	add    BYTE PTR [eax],bh
  41644d:	or     BYTE PTR [eax],al
  41644f:	add    BYTE PTR [eax],bh
  416451:	fld    DWORD PTR [ecx+0x0]
  416454:	add    DWORD PTR [eax],0x6b
  416457:	add    BYTE PTR [eax],bh
  416459:	sbb    BYTE PTR [eax],al
  41645b:	add    ah,al
  41645d:	fld    DWORD PTR [ecx+0x0]
  416460:	add    DWORD PTR [eax],0x6b
  416463:	add    BYTE PTR [eax],bh
  416465:	sbb    BYTE PTR [eax],al
  416467:	add    BYTE PTR [ebx*8+0x38820041],bl
  41646e:	sbb    eax,0x83800
  416473:	add    ah,cl
  416475:	fld    QWORD PTR [ecx+0x0]
  416478:	cmp    BYTE PTR [eax],0x1d
  41647b:	add    BYTE PTR [eax],bh
  41647d:	or     BYTE PTR [eax],al
  41647f:	add    BYTE PTR [edx+ebx*8+0x41],dl
  416483:	add    BYTE PTR [edx+0x38001d38],al
  416489:	sbb    BYTE PTR [eax],al
  41648b:	add    BYTE PTR [eax-0x7dffbe26],dh
  416491:	cmp    BYTE PTR ds:0x183800,bl
  416497:	add    BYTE PTR [ebx*8+0x38820041],bl
  41649e:	push   ds
  41649f:	add    BYTE PTR [eax],bh
  4164a1:	or     BYTE PTR [eax],al
  4164a3:	add    BYTE PTR [eax-0x7dffbe23],bh
  4164a9:	cmp    BYTE PTR [esi],bl
  4164ab:	add    BYTE PTR [eax],bh
  4164ad:	or     BYTE PTR [eax],al
  4164af:	add    BYTE PTR [edx+ebx*8+0x41],dl
  4164b3:	add    BYTE PTR [edx+0x38001e38],al
  4164b9:	sbb    BYTE PTR [eax],al
  4164bb:	add    BYTE PTR [edx+ebx*8+0x38820041],bl
  4164c2:	push   ds
  4164c3:	add    BYTE PTR [eax],bh
  4164c5:	sbb    BYTE PTR [eax],al
  4164c7:	add    BYTE PTR [ebx*8+0x38820041],bl
  4164ce:	sbb    al,0x0
  4164d0:	cmp    BYTE PTR [eax],cl
  4164d2:	add    BYTE PTR [eax],al
  4164d4:	in     al,dx
  4164d5:	fld    QWORD PTR [ecx+0x0]
  4164d8:	cmp    BYTE PTR [eax],0x1c
  4164db:	add    BYTE PTR [eax],bh
  4164dd:	or     BYTE PTR [eax],al
  4164df:	add    BYTE PTR [edx+ebx*8+0x41],dl
  4164e3:	add    BYTE PTR [edx+0x38001c38],al
  4164e9:	sbb    BYTE PTR [eax],al
  4164eb:	add    BYTE PTR [eax-0x7dffbe26],bh
  4164f1:	cmp    BYTE PTR [eax+eax*1],bl
  4164f4:	cmp    BYTE PTR [eax],bl
  4164f6:	add    BYTE PTR [eax],al
  4164f8:	pop    esp
  4164f9:	fild   DWORD PTR [ecx+0x0]
  4164fc:	add    DWORD PTR [eax],0x56
  4164ff:	add    BYTE PTR [eax],bl
  416501:	or     BYTE PTR [eax],al
  416503:	add    ah,dh
  416505:	fild   DWORD PTR [ecx+0x0]
  416508:	add    DWORD PTR [eax],0x56
  41650b:	add    BYTE PTR [eax],bl
  41650d:	or     BYTE PTR [eax],al
  41650f:	add    BYTE PTR [eax],bh
  416511:	fld    DWORD PTR [ecx+0x0]
  416514:	add    DWORD PTR [eax],0x56
  416517:	add    BYTE PTR [eax],bl
  416519:	sbb    BYTE PTR [eax],al
  41651b:	add    ah,al
  41651d:	fld    DWORD PTR [ecx+0x0]
  416520:	add    DWORD PTR [eax],0x56
  416523:	add    BYTE PTR [eax],bl
  416525:	sbb    BYTE PTR [eax],al
  416527:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41652b:	add    BYTE PTR [ebx+0x38005600],al
  416531:	or     BYTE PTR [eax],al
  416533:	add    al,al
  416535:	fild   DWORD PTR [ecx+0x0]
  416538:	add    DWORD PTR [eax],0x56
  41653b:	add    BYTE PTR [eax],bh
  41653d:	or     BYTE PTR [eax],al
  41653f:	add    BYTE PTR [eax],bh
  416541:	fld    DWORD PTR [ecx+0x0]
  416544:	add    DWORD PTR [eax],0x56
  416547:	add    BYTE PTR [eax],bh
  416549:	sbb    BYTE PTR [eax],al
  41654b:	add    BYTE PTR [eax-0x7cffbe27],dl
  416551:	add    BYTE PTR [esi+0x0],dl
  416554:	cmp    BYTE PTR [eax],bl
  416556:	add    BYTE PTR [eax],al
  416558:	call   0xe941a73f
  41655d:	add    bh,al
  41655f:	add    BYTE PTR [eax+0x2],bh
  416562:	add    BYTE PTR [eax],al
  416564:	inc    eax
  416565:	fild   WORD PTR [ecx+0x0]
  416568:	add    BYTE PTR [eax],0x79
  41656b:	add    BYTE PTR [eax],bl
  41656d:	add    DWORD PTR [eax],eax
  41656f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416573:	add    BYTE PTR [ebx+0x78005900],al
  416579:	or     BYTE PTR [eax],al
  41657b:	add    BYTE PTR [esp+ebx*8+0x41],ch
  41657f:	add    BYTE PTR [ebx+0x78005900],al
  416585:	or     BYTE PTR [eax],al
  416587:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41658b:	add    BYTE PTR [ebx+0x58005900],al
  416591:	or     BYTE PTR [eax],al
  416593:	add    BYTE PTR [esp+ebx*8+0x41],dl
  416597:	add    BYTE PTR [ebx+0x58005900],al
  41659d:	or     BYTE PTR [eax],al
  41659f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4165a3:	add    BYTE PTR [ebx+0x18005900],al
  4165a9:	or     BYTE PTR [eax],al
  4165ab:	add    ah,dh
  4165ad:	fild   DWORD PTR [ecx+0x0]
  4165b0:	add    DWORD PTR [eax],0x59
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	or     BYTE PTR [eax],al
  4165b7:	add    BYTE PTR [eax],bh
  4165b9:	fld    DWORD PTR [ecx+0x0]
  4165bc:	add    DWORD PTR [eax],0x59
  4165bf:	add    BYTE PTR [eax],bl
  4165c1:	sbb    BYTE PTR [eax],al
  4165c3:	add    ah,al
  4165c5:	fld    DWORD PTR [ecx+0x0]
  4165c8:	add    DWORD PTR [eax],0x59
  4165cb:	add    BYTE PTR [eax],bl
  4165cd:	sbb    BYTE PTR [eax],al
  4165cf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4165d3:	add    BYTE PTR [ebx+0x38005900],al
  4165d9:	or     BYTE PTR [eax],al
  4165db:	add    al,al
  4165dd:	fild   DWORD PTR [ecx+0x0]
  4165e0:	add    DWORD PTR [eax],0x59
  4165e3:	add    BYTE PTR [eax],bh
  4165e5:	or     BYTE PTR [eax],al
  4165e7:	add    BYTE PTR [eax],bh
  4165e9:	fld    DWORD PTR [ecx+0x0]
  4165ec:	add    DWORD PTR [eax],0x59
  4165ef:	add    BYTE PTR [eax],bh
  4165f1:	sbb    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR [eax-0x7cffbe27],dl
  4165f9:	add    BYTE PTR [ecx+0x0],bl
  4165fc:	cmp    BYTE PTR [eax],bl
  4165fe:	add    BYTE PTR [eax],al
  416600:	shl    bl,1
  416602:	inc    ecx
  416603:	add    BYTE PTR [ecx+0x1800db01],al
  416609:	add    BYTE PTR [eax],al
  41660b:	add    al,ch
  41660d:	jecxz  0x416650
  41660f:	add    BYTE PTR [ecx+0x800db01],al
  416615:	add    BYTE PTR [eax],al
  416617:	add    al,dl
  416619:	jecxz  0x41665c
  41661b:	add    BYTE PTR [ecx+0x1800d801],al
  416621:	add    BYTE PTR [eax],al
  416623:	add    al,ch
  416625:	jecxz  0x416668
  416627:	add    BYTE PTR [ecx+0x800d801],al
  41662d:	add    BYTE PTR [eax],al
  41662f:	add    al,dh
  416631:	loopne 0x416674
  416633:	add    BYTE PTR [edx+0x18007800],al
  416639:	add    eax,DWORD PTR [eax]
  41663b:	add    al,ch
  41663d:	loop   0x416680
  41663f:	add    cl,bh
  416641:	add    bh,al
  416643:	add    BYTE PTR [eax],bl
  416645:	add    al,BYTE PTR [eax]
  416647:	add    al,ch
  416649:	loop   0x41668c
  41664b:	add    cl,ch
  41664d:	add    bh,al
  41664f:	add    BYTE PTR [eax],bl
  416651:	add    BYTE PTR [eax],al
  416653:	add    BYTE PTR [eax-0x25],dl
  416656:	inc    ecx
  416657:	add    BYTE PTR [edx+edi*1+0x8380042],al
  41665e:	add    BYTE PTR [eax],al
  416660:	xor    ah,bl
  416662:	inc    ecx
  416663:	add    BYTE PTR [edx+edi*1+0x8380042],al
  41666a:	add    BYTE PTR [eax],al
  41666c:	sub    al,0xd9
  41666e:	inc    ecx
  41666f:	add    BYTE PTR [edx+edi*1+0x18380042],al
  416676:	add    BYTE PTR [eax],al
  416678:	hlt    
  416679:	fld    DWORD PTR [ecx+0x0]
  41667c:	test   BYTE PTR [edx],bh
  41667e:	inc    edx
  41667f:	add    BYTE PTR [eax],bh
  416681:	sbb    BYTE PTR [eax],al
  416683:	add    BYTE PTR [eax],al
  416685:	add    BYTE PTR [eax],al
  416687:	add    BYTE PTR [ebx*8+0x820041],bl
  41668e:	adc    BYTE PTR [eax],al
  416690:	sbb    BYTE PTR [eax],cl
  416692:	add    BYTE PTR [eax],al
  416694:	mov    eax,0x820041dd
  416699:	add    BYTE PTR [eax],dl
  41669b:	add    BYTE PTR [eax],bl
  41669d:	or     BYTE PTR [eax],al
  41669f:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  4166a6:	adc    DWORD PTR [eax],eax
  4166a8:	sbb    BYTE PTR [eax],cl
  4166aa:	add    BYTE PTR [eax],al
  4166ac:	and    dl,0x41
  4166af:	add    BYTE PTR [edx+0x18001100],al
  4166b5:	or     BYTE PTR [eax],al
  4166b7:	add    BYTE PTR [edx+ebx*8+0x41],dl
  4166bb:	add    BYTE PTR [edx+0x18001000],al
  4166c1:	sbb    BYTE PTR [eax],al
  4166c3:	add    BYTE PTR [edx+ebx*8+0x820041],bl
  4166ca:	adc    BYTE PTR [eax],al
  4166cc:	sbb    BYTE PTR [eax],bl
  4166ce:	add    BYTE PTR [eax],al
  4166d0:	pushf  
  4166d1:	loopne 0x416714
  4166d3:	add    BYTE PTR [edx+0x18001100],al
  4166d9:	sbb    BYTE PTR [eax],al
  4166db:	add    BYTE PTR [edx+eiz*8+0x41],ch
  4166df:	add    BYTE PTR [edx+0x18001100],al
  4166e5:	sbb    BYTE PTR [eax],al
  4166e7:	add    BYTE PTR [ebx*8+0x820041],bl
  4166ee:	adc    BYTE PTR [eax],al
  4166f0:	cmp    BYTE PTR [eax],cl
  4166f2:	add    BYTE PTR [eax],al
  4166f4:	cwde   
  4166f5:	fld    QWORD PTR [ecx+0x0]
  4166f8:	add    BYTE PTR [eax],0x10
  4166fb:	add    BYTE PTR [eax],bh
  4166fd:	or     BYTE PTR [eax],al
  4166ff:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  416706:	adc    DWORD PTR [eax],eax
  416708:	cmp    BYTE PTR [eax],cl
  41670a:	add    BYTE PTR [eax],al
  41670c:	inc    esp
  41670d:	loop   0x416750
  41670f:	add    BYTE PTR [edx+0x38001100],al
  416715:	or     BYTE PTR [eax],al
  416717:	add    BYTE PTR [edx+ebx*8+0x41],dl
  41671b:	add    BYTE PTR [edx+0x38001000],al
  416721:	sbb    BYTE PTR [eax],al
  416723:	add    BYTE PTR [eax-0x7dffbe26],cl
  416729:	add    BYTE PTR [eax],dl
  41672b:	add    BYTE PTR [eax],bh
  41672d:	sbb    BYTE PTR [eax],al
  41672f:	add    BYTE PTR [eax+eiz*8+0x820041],bl
  416736:	adc    DWORD PTR [eax],eax
  416738:	cmp    BYTE PTR [eax],bl
  41673a:	add    BYTE PTR [eax],al
  41673c:	xor    dl,ah
  41673e:	inc    ecx
  41673f:	add    BYTE PTR [edx+0x38001100],al
  416745:	sbb    BYTE PTR [eax],al
  416747:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41674b:	add    BYTE PTR [ebx+0x78001000],al
  416751:	or     BYTE PTR [eax],al
  416753:	add    BYTE PTR [esi+ebx*8],dh
  416756:	inc    ecx
  416757:	add    BYTE PTR [edx+0x78001000],al
  41675d:	or     BYTE PTR [eax],al
  41675f:	add    BYTE PTR [edx+eiz*8+0x820041],dl
  416766:	adc    DWORD PTR [eax],eax
  416768:	js     0x416772
  41676a:	add    BYTE PTR [eax],al
  41676c:	sbb    al,0xdd
  41676e:	inc    ecx
  41676f:	add    BYTE PTR [edx+0x78001200],al
  416775:	or     BYTE PTR [eax],al
  416777:	add    ah,bh
  416779:	fld    QWORD PTR [ecx+0x0]
  41677c:	add    BYTE PTR [eax],0x12
  41677f:	add    BYTE PTR [eax+0x8],bh
  416782:	add    BYTE PTR [eax],al
  416784:	push   esp
  416785:	fiadd  DWORD PTR [ecx+0x0]
  416788:	add    BYTE PTR [eax],0x12
  41678b:	add    BYTE PTR [eax+0x18],bh
  41678e:	add    BYTE PTR [eax],al
  416790:	rcr    dl,0x41
  416793:	add    BYTE PTR [edx+0x78001200],al
  416799:	sbb    BYTE PTR [eax],al
  41679b:	add    BYTE PTR [ebx*8+0x820041],bl
  4167a2:	push   ss
  4167a3:	add    BYTE PTR [eax+0x8],bh
  4167a6:	add    BYTE PTR [eax],al
  4167a8:	cld    
  4167a9:	fld    QWORD PTR [ecx+0x0]
  4167ac:	add    BYTE PTR [eax],0x16
  4167af:	add    BYTE PTR [eax+0x8],bh
  4167b2:	add    BYTE PTR [eax],al
  4167b4:	push   esp
  4167b5:	fiadd  DWORD PTR [ecx+0x0]
  4167b8:	add    BYTE PTR [eax],0x16
  4167bb:	add    BYTE PTR [eax+0x18],bh
  4167be:	add    BYTE PTR [eax],al
  4167c0:	rcr    dl,0x41
  4167c3:	add    BYTE PTR [edx+0x78001600],al
  4167c9:	sbb    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4167cf:	add    BYTE PTR [ebx+0x58001000],al
  4167d5:	or     BYTE PTR [eax],al
  4167d7:	add    BYTE PTR [eax],bl
  4167d9:	fiadd  WORD PTR [ecx+0x0]
  4167dc:	add    BYTE PTR [eax],0x10
  4167df:	add    BYTE PTR [eax+0x8],bl
  4167e2:	add    BYTE PTR [eax],al
  4167e4:	pop    eax
  4167e5:	loop   0x416828
  4167e7:	add    BYTE PTR [edx+0x58001100],al
  4167ed:	or     BYTE PTR [eax],al
  4167ef:	add    BYTE PTR [eax-0x23],bl
  4167f2:	inc    ecx
  4167f3:	add    BYTE PTR [edx+0x38006e00],al
  4167f9:	sub    BYTE PTR [eax],al
  4167fb:	add    BYTE PTR [eax],bl
  4167fd:	fiadd  WORD PTR [ecx+0x0]
  416800:	add    BYTE PTR [eax],0x6e
  416803:	add    BYTE PTR [eax],bh
  416805:	sub    BYTE PTR [eax],al
  416807:	add    BYTE PTR [eax-0x7dffbe1f],bh
  41680d:	add    BYTE PTR [esi+0x0],bh
  416810:	cmp    BYTE PTR [eax],ch
  416812:	add    BYTE PTR [eax],al
  416814:	pop    eax
  416815:	loop   0x416858
  416817:	add    BYTE PTR [edx+0x38007e00],al
  41681d:	sub    BYTE PTR [eax],al
  41681f:	add    BYTE PTR [ebx*8+0x820041],bl
  416826:	jle    0x416828
  416828:	js     0x416832
  41682a:	add    BYTE PTR [eax],al
  41682c:	sbb    dh,bl
  41682e:	inc    ecx
  41682f:	add    BYTE PTR [edx+0x78007e00],al
  416835:	or     BYTE PTR [eax],al
  416837:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41683e:	(bad)  
  41683f:	add    BYTE PTR [eax],bh
  416841:	or     BYTE PTR [eax],al
  416843:	add    BYTE PTR [eax-0x1e],bl
  416846:	inc    ecx
  416847:	add    BYTE PTR [edx+0x3800d600],al
  41684d:	or     BYTE PTR [eax],al
  41684f:	add    BYTE PTR [edx+eiz*8],bl
  416852:	inc    ecx
  416853:	add    BYTE PTR [edx+0x18002b00],al
  416859:	or     BYTE PTR [eax],al
  41685b:	add    BYTE PTR [eax],cl
  41685d:	loop   0x4168a0
  41685f:	add    BYTE PTR [edx+0x18002b00],al
  416865:	sbb    BYTE PTR [eax],al
  416867:	add    BYTE PTR [edx+eiz*8],bl
  41686a:	inc    ecx
  41686b:	add    BYTE PTR [edx+0x38002b00],al
  416871:	or     BYTE PTR [eax],al
  416873:	add    BYTE PTR [eax],cl
  416875:	loop   0x4168b8
  416877:	add    BYTE PTR [edx+0x38002b00],al
  41687d:	sbb    BYTE PTR [eax],al
  41687f:	add    ah,bh
  416881:	fld    QWORD PTR [ecx+0x0]
  416884:	cmp    BYTE PTR [eax],0x2a
  416887:	add    BYTE PTR [eax],bh
  416889:	or     BYTE PTR [eax],al
  41688b:	add    al,al
  41688d:	fiadd  DWORD PTR [ecx+0x0]
  416890:	cmp    BYTE PTR [eax],0x2a
  416893:	add    BYTE PTR [eax],bh
  416895:	sbb    BYTE PTR [eax],al
  416897:	add    BYTE PTR [edx+eiz*8],bl
  41689a:	inc    ecx
  41689b:	add    BYTE PTR [edx+0x3800e700],al
  4168a1:	or     BYTE PTR [eax],al
  4168a3:	add    BYTE PTR [eax],cl
  4168a5:	loop   0x4168e8
  4168a7:	add    BYTE PTR [edx+0x3800e700],al
  4168ad:	sbb    BYTE PTR [eax],al
  4168af:	add    ah,dh
  4168b1:	fild   WORD PTR [ecx+0x0]
  4168b4:	add    BYTE PTR [eax],0x50
  4168b7:	add    BYTE PTR [eax],bl
  4168b9:	or     BYTE PTR [eax],al
  4168bb:	add    al,ah
  4168bd:	fild   WORD PTR [ecx+0x0]
  4168c0:	add    BYTE PTR [eax],0x50
  4168c3:	add    BYTE PTR [eax],bl
  4168c5:	sbb    BYTE PTR [eax],al
  4168c7:	add    ah,dh
  4168c9:	fild   WORD PTR [ecx+0x0]
  4168cc:	add    BYTE PTR [eax],0x50
  4168cf:	add    BYTE PTR [eax],bh
  4168d1:	or     BYTE PTR [eax],al
  4168d3:	add    al,ah
  4168d5:	fild   WORD PTR [ecx+0x0]
  4168d8:	add    BYTE PTR [eax],0x50
  4168db:	add    BYTE PTR [eax],bh
  4168dd:	sbb    BYTE PTR [eax],al
  4168df:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4168e3:	add    BYTE PTR [ebx+0x18001200],al
  4168e9:	or     BYTE PTR [eax],al
  4168eb:	add    BYTE PTR [eax-0x1e],bl
  4168ee:	inc    ecx
  4168ef:	add    BYTE PTR [edx+0x18001300],al
  4168f5:	or     BYTE PTR [eax],al
  4168f7:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4168fb:	add    BYTE PTR [ebx+0x38001200],al
  416901:	or     BYTE PTR [eax],al
  416903:	add    BYTE PTR [eax-0x1e],bl
  416906:	inc    ecx
  416907:	add    BYTE PTR [edx+0x38001300],al
  41690d:	or     BYTE PTR [eax],al
  41690f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416913:	add    BYTE PTR [ebx+0x18001600],al
  416919:	or     BYTE PTR [eax],al
  41691b:	add    BYTE PTR [esp+ebx*8+0x41],ch
  41691f:	add    BYTE PTR [ebx+0x18001600],al
  416925:	or     BYTE PTR [eax],al
  416927:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41692b:	add    BYTE PTR [ebx+0x18001600],al
  416931:	or     BYTE PTR [eax],al
  416933:	add    BYTE PTR [eax-0x1e],bl
  416936:	inc    ecx
  416937:	add    BYTE PTR [edx+0x18001700],al
  41693d:	or     BYTE PTR [eax],al
  41693f:	add    BYTE PTR [esp+ebx*8+0x41],dl
  416943:	add    BYTE PTR [ebx+0x38001600],al
  416949:	or     BYTE PTR [eax],al
  41694b:	add    BYTE PTR [eax-0x1e],bl
  41694e:	inc    ecx
  41694f:	add    BYTE PTR [edx+0x38001700],al
  416955:	or     BYTE PTR [eax],al
  416957:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41695b:	add    BYTE PTR [ebx+0x18001200],al
  416961:	or     BYTE PTR [eax],al
  416963:	add    BYTE PTR [eax],al
  416965:	add    BYTE PTR [eax],al
  416967:	add    BYTE PTR [ebx*8+0x820041],bl
  41696e:	outs   dx,DWORD PTR ds:[esi]
  41696f:	add    BYTE PTR [eax+0x8],bh
  416972:	add    BYTE PTR [eax],al
  416974:	cld    
  416975:	fld    QWORD PTR [ecx+0x0]
  416978:	add    BYTE PTR [eax],0x6f
  41697b:	add    BYTE PTR [eax+0x8],bh
  41697e:	add    BYTE PTR [eax],al
  416980:	push   esp
  416981:	fiadd  DWORD PTR [ecx+0x0]
  416984:	add    BYTE PTR [eax],0x6f
  416987:	add    BYTE PTR [eax+0x18],bh
  41698a:	add    BYTE PTR [eax],al
  41698c:	rcr    dl,0x41
  41698f:	add    BYTE PTR [edx+0x78006f00],al
  416995:	sbb    BYTE PTR [eax],al
  416997:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41699e:	jg     0x4169a0
  4169a0:	js     0x4169aa
  4169a2:	add    BYTE PTR [eax],al
  4169a4:	sbb    al,0xe2
  4169a6:	inc    ecx
  4169a7:	add    BYTE PTR [edx+0x78007f00],al
  4169ad:	or     BYTE PTR [eax],al
  4169af:	add    BYTE PTR [eax+eiz*8+0x820041],bl
  4169b6:	jg     0x4169b8
  4169b8:	js     0x4169d2
  4169ba:	add    BYTE PTR [eax],al
  4169bc:	or     dl,ah
  4169be:	inc    ecx
  4169bf:	add    BYTE PTR [edx+0x78007f00],al
  4169c5:	sbb    BYTE PTR [eax],al
  4169c7:	add    BYTE PTR [ebx*8+0x820041],bl
  4169ce:	outs   dx,DWORD PTR ds:[esi]
  4169cf:	add    BYTE PTR [eax],bh
  4169d1:	or     BYTE PTR [eax],al
  4169d3:	add    ah,bh
  4169d5:	fld    QWORD PTR [ecx+0x0]
  4169d8:	add    BYTE PTR [eax],0x6f
  4169db:	add    BYTE PTR [eax],bh
  4169dd:	or     BYTE PTR [eax],al
  4169df:	add    BYTE PTR [edx+ebx*8+0x41],dl
  4169e3:	add    BYTE PTR [edx+0x38006f00],al
  4169e9:	sbb    BYTE PTR [eax],al
  4169eb:	add    al,al
  4169ed:	fiadd  DWORD PTR [ecx+0x0]
  4169f0:	add    BYTE PTR [eax],0x6f
  4169f3:	add    BYTE PTR [eax],bh
  4169f5:	sbb    BYTE PTR [eax],al
  4169f7:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  4169fe:	jg     0x416a00
  416a00:	cmp    BYTE PTR [eax],cl
  416a02:	add    BYTE PTR [eax],al
  416a04:	sbb    al,0xe2
  416a06:	inc    ecx
  416a07:	add    BYTE PTR [edx+0x38007f00],al
  416a0d:	or     BYTE PTR [eax],al
  416a0f:	add    BYTE PTR [eax+eiz*8+0x820041],bl
  416a16:	jg     0x416a18
  416a18:	cmp    BYTE PTR [eax],bl
  416a1a:	add    BYTE PTR [eax],al
  416a1c:	or     dl,ah
  416a1e:	inc    ecx
  416a1f:	add    BYTE PTR [edx+0x38007f00],al
  416a25:	sbb    BYTE PTR [eax],al
  416a27:	add    BYTE PTR [ebx*8+0x820041],bl
  416a2e:	adc    al,BYTE PTR [eax]
  416a30:	pop    eax
  416a31:	or     BYTE PTR [eax],al
  416a33:	add    BYTE PTR [eax],bl
  416a35:	fiadd  WORD PTR [ecx+0x0]
  416a38:	add    BYTE PTR [eax],0x12
  416a3b:	add    BYTE PTR [eax+0x8],bl
  416a3e:	add    BYTE PTR [eax],al
  416a40:	push   esp
  416a41:	fiadd  DWORD PTR [ecx+0x0]
  416a44:	add    BYTE PTR [eax],0x12
  416a47:	add    BYTE PTR [eax+0x18],bl
  416a4a:	add    BYTE PTR [eax],al
  416a4c:	rcr    dl,0x41
  416a4f:	add    BYTE PTR [edx+0x58001200],al
  416a55:	sbb    BYTE PTR [eax],al
  416a57:	add    BYTE PTR [ebp+ebx*8+0x41],ch
  416a5b:	add    BYTE PTR [edx+0x38006e00],al
  416a61:	or     BYTE PTR [eax],al
  416a63:	add    BYTE PTR [esi+ebx*8],dh
  416a66:	inc    ecx
  416a67:	add    BYTE PTR [edx+0x38006e00],al
  416a6d:	or     BYTE PTR [eax],al
  416a6f:	add    al,ah
  416a71:	loope  0x416ab4
  416a73:	add    BYTE PTR [edx+0x38007e00],al
  416a79:	or     BYTE PTR [eax],al
  416a7b:	add    BYTE PTR [edx+eiz*8+0x820041],dl
  416a82:	jle    0x416a84
  416a84:	cmp    BYTE PTR [eax],cl
  416a86:	add    BYTE PTR [eax],al
  416a88:	sbb    al,0xdd
  416a8a:	inc    ecx
  416a8b:	add    BYTE PTR [edx+0x18002800],al
  416a91:	or     BYTE PTR [eax],al
  416a93:	add    BYTE PTR [eax-0x7dffbe23],bh
  416a99:	add    BYTE PTR [eax],ch
  416a9b:	add    BYTE PTR [eax],bl
  416a9d:	or     BYTE PTR [eax],al
  416a9f:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  416aa6:	sub    DWORD PTR [eax],eax
  416aa8:	sbb    BYTE PTR [eax],cl
  416aaa:	add    BYTE PTR [eax],al
  416aac:	and    dl,0x41
  416aaf:	add    BYTE PTR [edx+0x18002900],al
  416ab5:	or     BYTE PTR [eax],al
  416ab7:	add    BYTE PTR [edx+ebx*8+0x41],dl
  416abb:	add    BYTE PTR [edx+0x18002800],al
  416ac1:	sbb    BYTE PTR [eax],al
  416ac3:	add    BYTE PTR [edx+ebx*8+0x820041],bl
  416aca:	sub    BYTE PTR [eax],al
  416acc:	sbb    BYTE PTR [eax],bl
  416ace:	add    BYTE PTR [eax],al
  416ad0:	pushf  
  416ad1:	loopne 0x416b14
  416ad3:	add    BYTE PTR [edx+0x18002900],al
  416ad9:	sbb    BYTE PTR [eax],al
  416adb:	add    BYTE PTR [edx+eiz*8+0x41],ch
  416adf:	add    BYTE PTR [edx+0x18002900],al
  416ae5:	sbb    BYTE PTR [eax],al
  416ae7:	add    BYTE PTR [ebx*8+0x820041],bl
  416aee:	sub    BYTE PTR [eax],al
  416af0:	cmp    BYTE PTR [eax],cl
  416af2:	add    BYTE PTR [eax],al
  416af4:	cwde   
  416af5:	fld    QWORD PTR [ecx+0x0]
  416af8:	add    BYTE PTR [eax],0x28
  416afb:	add    BYTE PTR [eax],bh
  416afd:	or     BYTE PTR [eax],al
  416aff:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  416b06:	sub    DWORD PTR [eax],eax
  416b08:	cmp    BYTE PTR [eax],cl
  416b0a:	add    BYTE PTR [eax],al
  416b0c:	inc    esp
  416b0d:	loop   0x416b50
  416b0f:	add    BYTE PTR [edx+0x38002900],al
  416b15:	or     BYTE PTR [eax],al
  416b17:	add    BYTE PTR [edx+ebx*8+0x41],dl
  416b1b:	add    BYTE PTR [edx+0x38002800],al
  416b21:	sbb    BYTE PTR [eax],al
  416b23:	add    BYTE PTR [eax-0x7dffbe26],cl
  416b29:	add    BYTE PTR [eax],ch
  416b2b:	add    BYTE PTR [eax],bh
  416b2d:	sbb    BYTE PTR [eax],al
  416b2f:	add    BYTE PTR [eax+eiz*8+0x820041],bl
  416b36:	sub    DWORD PTR [eax],eax
  416b38:	cmp    BYTE PTR [eax],bl
  416b3a:	add    BYTE PTR [eax],al
  416b3c:	xor    dl,ah
  416b3e:	inc    ecx
  416b3f:	add    BYTE PTR [edx+0x38002900],al
  416b45:	sbb    BYTE PTR [eax],al
  416b47:	add    al,dl
  416b49:	jecxz  0x416b8c
  416b4b:	add    BYTE PTR [ecx+0x1800da01],al
  416b51:	add    BYTE PTR [eax],al
  416b53:	add    al,ch
  416b55:	jecxz  0x416b98
  416b57:	add    BYTE PTR [ecx+0x800da01],al
  416b5d:	add    BYTE PTR [eax],al
  416b5f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416b63:	add    BYTE PTR [ebx+0x78005d00],al
  416b69:	or     BYTE PTR [eax],al
  416b6b:	add    BYTE PTR [esp+ebx*8+0x41],ch
  416b6f:	add    BYTE PTR [ebx+0x78005d00],al
  416b75:	or     BYTE PTR [eax],al
  416b77:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416b7b:	add    BYTE PTR [ebx+0x58005d00],al
  416b81:	or     BYTE PTR [eax],al
  416b83:	add    BYTE PTR [esp+ebx*8+0x41],dl
  416b87:	add    BYTE PTR [ebx+0x58005d00],al
  416b8d:	or     BYTE PTR [eax],al
  416b8f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416b93:	add    BYTE PTR [ebx+0x18005d00],al
  416b99:	or     BYTE PTR [eax],al
  416b9b:	add    ah,dh
  416b9d:	fild   DWORD PTR [ecx+0x0]
  416ba0:	add    DWORD PTR [eax],0x5d
  416ba3:	add    BYTE PTR [eax],bl
  416ba5:	or     BYTE PTR [eax],al
  416ba7:	add    BYTE PTR [eax],bh
  416ba9:	fld    DWORD PTR [ecx+0x0]
  416bac:	add    DWORD PTR [eax],0x5d
  416baf:	add    BYTE PTR [eax],bl
  416bb1:	sbb    BYTE PTR [eax],al
  416bb3:	add    ah,al
  416bb5:	fld    DWORD PTR [ecx+0x0]
  416bb8:	add    DWORD PTR [eax],0x5d
  416bbb:	add    BYTE PTR [eax],bl
  416bbd:	sbb    BYTE PTR [eax],al
  416bbf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416bc3:	add    BYTE PTR [ebx+0x38005d00],al
  416bc9:	or     BYTE PTR [eax],al
  416bcb:	add    al,al
  416bcd:	fild   DWORD PTR [ecx+0x0]
  416bd0:	add    DWORD PTR [eax],0x5d
  416bd3:	add    BYTE PTR [eax],bh
  416bd5:	or     BYTE PTR [eax],al
  416bd7:	add    BYTE PTR [eax],bh
  416bd9:	fld    DWORD PTR [ecx+0x0]
  416bdc:	add    DWORD PTR [eax],0x5d
  416bdf:	add    BYTE PTR [eax],bh
  416be1:	sbb    BYTE PTR [eax],al
  416be3:	add    BYTE PTR [eax-0x7cffbe27],dl
  416be9:	add    BYTE PTR [ebp+0x0],bl
  416bec:	cmp    BYTE PTR [eax],bl
  416bee:	add    BYTE PTR [eax],al
  416bf0:	call   0xe941add7
  416bf5:	add    bh,al
  416bf7:	add    BYTE PTR [eax],bh
  416bf9:	add    al,BYTE PTR [eax]
  416bfb:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416bff:	add    BYTE PTR [ebx+0x78005f00],al
  416c05:	or     BYTE PTR [eax],al
  416c07:	add    BYTE PTR [esp+ebx*8+0x41],ch
  416c0b:	add    BYTE PTR [ebx+0x78005f00],al
  416c11:	or     BYTE PTR [eax],al
  416c13:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416c17:	add    BYTE PTR [ebx+0x58005f00],al
  416c1d:	or     BYTE PTR [eax],al
  416c1f:	add    BYTE PTR [esp+ebx*8+0x41],dl
  416c23:	add    BYTE PTR [ebx+0x58005f00],al
  416c29:	or     BYTE PTR [eax],al
  416c2b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416c2f:	add    BYTE PTR [ebx+0x18005f00],al
  416c35:	or     BYTE PTR [eax],al
  416c37:	add    ah,dh
  416c39:	fild   DWORD PTR [ecx+0x0]
  416c3c:	add    DWORD PTR [eax],0x5f
  416c3f:	add    BYTE PTR [eax],bl
  416c41:	or     BYTE PTR [eax],al
  416c43:	add    BYTE PTR [eax],bh
  416c45:	fld    DWORD PTR [ecx+0x0]
  416c48:	add    DWORD PTR [eax],0x5f
  416c4b:	add    BYTE PTR [eax],bl
  416c4d:	sbb    BYTE PTR [eax],al
  416c4f:	add    ah,al
  416c51:	fld    DWORD PTR [ecx+0x0]
  416c54:	add    DWORD PTR [eax],0x5f
  416c57:	add    BYTE PTR [eax],bl
  416c59:	sbb    BYTE PTR [eax],al
  416c5b:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  416c5f:	add    BYTE PTR [ebx+0x38005f00],al
  416c65:	or     BYTE PTR [eax],al
  416c67:	add    al,al
  416c69:	fild   DWORD PTR [ecx+0x0]
  416c6c:	add    DWORD PTR [eax],0x5f
  416c6f:	add    BYTE PTR [eax],bh
  416c71:	or     BYTE PTR [eax],al
  416c73:	add    BYTE PTR [eax],bh
  416c75:	fld    DWORD PTR [ecx+0x0]
  416c78:	add    DWORD PTR [eax],0x5f
  416c7b:	add    BYTE PTR [eax],bh
  416c7d:	sbb    BYTE PTR [eax],al
  416c7f:	add    BYTE PTR [eax-0x7cffbe27],dl
  416c85:	add    BYTE PTR [edi+0x0],bl
  416c88:	cmp    BYTE PTR [eax],bl
  416c8a:	add    BYTE PTR [eax],al
  416c8c:	hlt    
  416c8d:	fild   DWORD PTR [ecx+0x0]
  416c90:	cmp    DWORD PTR [eax],0x2c
  416c93:	add    BYTE PTR [eax],bh
  416c95:	or     BYTE PTR [eax],al
  416c97:	add    ah,al
  416c99:	fld    DWORD PTR [ecx+0x0]
  416c9c:	cmp    DWORD PTR [eax],0x2c
  416c9f:	add    BYTE PTR [eax],bh
  416ca1:	sbb    BYTE PTR [eax],al
  416ca3:	add    BYTE PTR [edx+eiz*8+0x41],dh
  416ca7:	add    BYTE PTR [ebx+0x38002e38],al
  416cad:	or     BYTE PTR [eax],al
  416caf:	add    BYTE PTR [eax-0x1e],ah
  416cb2:	inc    ecx
  416cb3:	add    BYTE PTR [ebx+0x38002e38],al
  416cb9:	sbb    BYTE PTR [eax],al
  416cbb:	add    al,al
  416cbd:	fild   DWORD PTR [ecx+0x0]
  416cc0:	cmp    DWORD PTR [eax],0x2d
  416cc3:	add    BYTE PTR [eax],bh
  416cc5:	or     BYTE PTR [eax],al
  416cc7:	add    BYTE PTR [eax-0x7cffbe27],dl
  416ccd:	cmp    BYTE PTR ds:0x183800,ch
  416cd3:	add    BYTE PTR [eax],bh
  416cd5:	loop   0x416d18
  416cd7:	add    BYTE PTR [ebx+0x38002f38],al
  416cdd:	or     BYTE PTR [eax],al
  416cdf:	add    BYTE PTR [edx+eiz*8],ah
  416ce2:	inc    ecx
  416ce3:	add    BYTE PTR [ebx+0x38002f38],al
  416ce9:	sbb    BYTE PTR [eax],al
  416ceb:	add    BYTE PTR [ebx*8+0x820041],bl
  416cf2:	test   DWORD PTR [eax],0x838
  416cf8:	push   esp
  416cf9:	fiadd  DWORD PTR [ecx+0x0]
  416cfc:	add    BYTE PTR [eax],0xf7
  416cff:	add    BYTE PTR [eax],bh
  416d01:	sbb    BYTE PTR [eax],al
  416d03:	add    al,bh
  416d05:	loop   0x416d48
  416d07:	add    BYTE PTR [ecx+0x1800ae00],ch
  416d0d:	or     BYTE PTR [eax],al
  416d0f:	add    ah,bh
  416d11:	fld    QWORD PTR [ecx+0x0]
  416d14:	add    BYTE PTR [eax],0xf0
  416d17:	add    BYTE PTR [eax+0x8],bl
  416d1a:	add    BYTE PTR [eax],al
  416d1c:	rcr    dl,0x41
  416d1f:	add    BYTE PTR [edx+0x5800f000],al
  416d25:	sbb    BYTE PTR [eax],al
  416d27:	add    BYTE PTR [eax-0x25],dl
  416d2a:	inc    ecx
  416d2b:	add    BYTE PTR [edx+edi*1+0x8380021],al
  416d32:	add    BYTE PTR [eax],al
  416d34:	call   0x8441af14
  416d39:	cmp    ah,BYTE PTR [ecx]
  416d3b:	add    BYTE PTR [eax],bh
  416d3d:	or     BYTE PTR [eax],al
  416d3f:	add    BYTE PTR [ecx+ebx*8+0x41],al
  416d43:	add    BYTE PTR [edx+edi*1+0x18380038],al
  416d4a:	add    BYTE PTR [eax],al
  416d4c:	and    al,0xda
  416d4e:	inc    ecx
  416d4f:	add    BYTE PTR [edx+edi*1+0x18380038],al
  416d56:	add    BYTE PTR [eax],al
  416d58:	inc    esp
  416d59:	fld    DWORD PTR [ecx+0x0]
  416d5c:	test   BYTE PTR [edx],bh
  416d5e:	sbb    BYTE PTR [eax],al
  416d60:	cmp    BYTE PTR [eax],bl
  416d62:	add    BYTE PTR [eax],al
  416d64:	sbb    dl,bl
  416d66:	inc    ecx
  416d67:	add    BYTE PTR [edx+edi*1+0x18380018],al
  416d6e:	add    BYTE PTR [eax],al
  416d70:	pop    esp
  416d71:	fild   DWORD PTR [ecx+0x0]
  416d74:	add    DWORD PTR [eax],0x7d
  416d77:	add    BYTE PTR [eax+0x8],bl
  416d7a:	add    BYTE PTR [eax],al
  416d7c:	hlt    
  416d7d:	fild   DWORD PTR [ecx+0x0]
  416d80:	add    DWORD PTR [eax],0x7d
  416d83:	add    BYTE PTR [eax+0x8],bl
  416d86:	add    BYTE PTR [eax],al
  416d88:	cmp    cl,bl
  416d8a:	inc    ecx
  416d8b:	add    BYTE PTR [ebx+0x58007d00],al
  416d91:	sbb    BYTE PTR [eax],al
  416d93:	add    ah,al
  416d95:	fld    DWORD PTR [ecx+0x0]
  416d98:	add    DWORD PTR [eax],0x7d
  416d9b:	add    BYTE PTR [eax+0x18],bl
  416d9e:	add    BYTE PTR [eax],al
  416da0:	pop    esp
  416da1:	fild   DWORD PTR [ecx+0x0]
  416da4:	add    DWORD PTR [eax],0x7d
  416da7:	add    BYTE PTR [eax],bh
  416da9:	or     BYTE PTR [eax],al
  416dab:	add    al,al
  416dad:	fild   DWORD PTR [ecx+0x0]
  416db0:	add    DWORD PTR [eax],0x7d
  416db3:	add    BYTE PTR [eax],bh
  416db5:	or     BYTE PTR [eax],al
  416db7:	add    BYTE PTR [eax],bh
  416db9:	fld    DWORD PTR [ecx+0x0]
  416dbc:	add    DWORD PTR [eax],0x7d
  416dbf:	add    BYTE PTR [eax],bh
  416dc1:	sbb    BYTE PTR [eax],al
  416dc3:	add    BYTE PTR [eax-0x7cffbe27],dl
  416dc9:	add    BYTE PTR [ebp+0x0],bh
  416dcc:	cmp    BYTE PTR [eax],bl
  416dce:	add    BYTE PTR [eax],al
  416dd0:	pop    esp
  416dd1:	fild   DWORD PTR [ecx+0x0]
  416dd4:	add    DWORD PTR [eax],0x7c
  416dd7:	add    BYTE PTR [eax+0x8],bl
  416dda:	add    BYTE PTR [eax],al
  416ddc:	hlt    
  416ddd:	fild   DWORD PTR [ecx+0x0]
  416de0:	add    DWORD PTR [eax],0x7c
  416de3:	add    BYTE PTR [eax+0x8],bl
  416de6:	add    BYTE PTR [eax],al
  416de8:	cmp    cl,bl
  416dea:	inc    ecx
  416deb:	add    BYTE PTR [ebx+0x58007c00],al
  416df1:	sbb    BYTE PTR [eax],al
  416df3:	add    ah,al
  416df5:	fld    DWORD PTR [ecx+0x0]
  416df8:	add    DWORD PTR [eax],0x7c
  416dfb:	add    BYTE PTR [eax+0x18],bl
  416dfe:	add    BYTE PTR [eax],al
  416e00:	pop    esp
  416e01:	fild   DWORD PTR [ecx+0x0]
  416e04:	add    DWORD PTR [eax],0x7c
  416e07:	add    BYTE PTR [eax],bh
  416e09:	or     BYTE PTR [eax],al
  416e0b:	add    al,al
  416e0d:	fild   DWORD PTR [ecx+0x0]
  416e10:	add    DWORD PTR [eax],0x7c
  416e13:	add    BYTE PTR [eax],bh
  416e15:	or     BYTE PTR [eax],al
  416e17:	add    BYTE PTR [eax],bh
  416e19:	fld    DWORD PTR [ecx+0x0]
  416e1c:	add    DWORD PTR [eax],0x7c
  416e1f:	add    BYTE PTR [eax],bh
  416e21:	sbb    BYTE PTR [eax],al
  416e23:	add    BYTE PTR [eax-0x7cffbe27],dl
  416e29:	add    BYTE PTR [eax+eax*1+0x38],bh
  416e2d:	sbb    BYTE PTR [eax],al
  416e2f:	add    BYTE PTR [eax],dh
  416e31:	fld    QWORD PTR [ecx+0x0]
  416e34:	cmp    DWORD PTR [eax],0xffffff93
  416e37:	add    BYTE PTR [eax],bh
  416e39:	or     BYTE PTR [eax],al
  416e3b:	add    BYTE PTR [ebx*8+0x38830041],ah
  416e42:	xchg   ebx,eax
  416e43:	add    BYTE PTR [eax],bh
  416e45:	sbb    BYTE PTR [eax],al
  416e47:	add    BYTE PTR [eax],dh
  416e49:	fld    QWORD PTR [ecx+0x0]
  416e4c:	cmp    DWORD PTR [eax],0xffffff93
  416e4f:	add    BYTE PTR [eax],bh
  416e51:	sub    BYTE PTR [eax],al
  416e53:	add    BYTE PTR [edx+ebx*8+0x41],ah
  416e57:	add    BYTE PTR [ebx+0x38009338],al
  416e5d:	cmp    BYTE PTR [eax],al
  416e5f:	add    BYTE PTR [eax],dh
  416e61:	fld    QWORD PTR [ecx+0x0]
  416e64:	cmp    DWORD PTR [eax],0xffffff92
  416e67:	add    BYTE PTR [eax],bh
  416e69:	or     BYTE PTR [eax],al
  416e6b:	add    BYTE PTR [edx+ebx*8+0x41],ah
  416e6f:	add    BYTE PTR [ebx+0x38009238],al
  416e75:	sbb    BYTE PTR [eax],al
  416e77:	add    BYTE PTR [eax],dh
  416e79:	fld    QWORD PTR [ecx+0x0]
  416e7c:	cmp    DWORD PTR [eax],0xffffff92
  416e7f:	add    BYTE PTR [eax],bh
  416e81:	sub    BYTE PTR [eax],al
  416e83:	add    BYTE PTR [eax-0x26],dh
  416e86:	inc    ecx
  416e87:	add    BYTE PTR [ebx+0x38009238],al
  416e8d:	cmp    BYTE PTR [eax],al
  416e8f:	add    BYTE PTR [edx+ebx*8+0x41],dl
  416e93:	add    BYTE PTR [edx+0x180082f9],al
  416e99:	sbb    BYTE PTR [eax],al
  416e9b:	add    BYTE PTR [edx+ebx*8-0x67dffbf],bl
  416ea2:	add    BYTE PTR [eax],0x18
  416ea5:	sbb    BYTE PTR [eax],al
  416ea7:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  416eae:	add    DWORD PTR [eax],0x18
  416eb1:	or     BYTE PTR [eax],al
  416eb3:	add    BYTE PTR [eax-0x7dffbe23],bl
  416eb9:	stc    
  416eba:	add    DWORD PTR [eax],0x18
  416ebd:	or     BYTE PTR [eax],al
  416ebf:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  416ec6:	add    BYTE PTR [eax],0x18
  416ec9:	or     BYTE PTR [eax],al
  416ecb:	add    BYTE PTR [eax-0x7dffbe23],bh
  416ed1:	stc    
  416ed2:	add    BYTE PTR [eax],0x18
  416ed5:	or     BYTE PTR [eax],al
  416ed7:	add    BYTE PTR [edx+ebx*8+0x41],dl
  416edb:	add    BYTE PTR [edx+0x180080f9],al
  416ee1:	sbb    BYTE PTR [eax],al
  416ee3:	add    BYTE PTR [edx+ebx*8-0x67dffbf],bl
  416eea:	add    BYTE PTR [eax],0x18
  416eed:	sbb    BYTE PTR [eax],al
  416eef:	add    BYTE PTR [ebx*8-0x67dffbf],bl
  416ef6:	add    DWORD PTR [eax],0x818
  416efc:	cwde   
  416efd:	fld    QWORD PTR [ecx+0x0]
  416f00:	cmp    cl,0x81
  416f03:	add    BYTE PTR [eax],bl
  416f05:	or     BYTE PTR [eax],al
  416f07:	add    BYTE PTR [edx+ebx*8+0x41],dl
  416f0b:	add    BYTE PTR [edx+0x180081f9],al
  416f11:	sbb    BYTE PTR [eax],al
  416f13:	add    BYTE PTR [eax-0x7dffbe26],cl
  416f19:	stc    
  416f1a:	add    DWORD PTR [eax],0x1818
  416f20:	inc    esp
  416f21:	fild   DWORD PTR [ecx+0x0]
  416f24:	test   BYTE PTR [edx],bh
  416f26:	jle    0x416f28
  416f28:	cmp    BYTE PTR [eax],cl
  416f2a:	add    BYTE PTR [eax],al
  416f2c:	(bad)  
  416f2e:	inc    ecx
  416f2f:	add    BYTE PTR [edx+edi*1+0x838007e],al
  416f36:	add    BYTE PTR [eax],al
  416f38:	sbb    al,0xdb
  416f3a:	inc    ecx
  416f3b:	add    BYTE PTR [edx+edi*1+0x2838007e],al
  416f42:	add    BYTE PTR [eax],al
  416f44:	and    cl,bl
  416f46:	inc    ecx
  416f47:	add    BYTE PTR [edx+edi*1+0x1838007e],al
  416f4e:	add    BYTE PTR [eax],al
  416f50:	lods   al,BYTE PTR ds:[esi]
  416f51:	fld    DWORD PTR [ecx+0x0]
  416f54:	test   BYTE PTR [edx],bh
  416f56:	jle    0x416f58
  416f58:	cmp    BYTE PTR [eax],bl
  416f5a:	add    BYTE PTR [eax],al
  416f5c:	clc    
  416f5d:	fadd   DWORD PTR [ecx+0x0]
  416f60:	test   BYTE PTR [edx],bh
  416f62:	jle    0x416f64
  416f64:	cmp    BYTE PTR [eax],bh
  416f66:	add    BYTE PTR [eax],al
  416f68:	inc    esp
  416f69:	fild   DWORD PTR [ecx+0x0]
  416f6c:	test   BYTE PTR [edx],bh
  416f6e:	jg     0x416f70
  416f70:	cmp    BYTE PTR [eax],cl
  416f72:	add    BYTE PTR [eax],al
  416f74:	test   al,0xdb
  416f76:	inc    ecx
  416f77:	add    BYTE PTR [edx+edi*1+0x838007f],al
  416f7e:	add    BYTE PTR [eax],al
  416f80:	add    bl,bl
  416f82:	inc    ecx
  416f83:	add    BYTE PTR [edx+edi*1+0x2838007f],al
  416f8a:	add    BYTE PTR [eax],al
  416f8c:	and    cl,bl
  416f8e:	inc    ecx
  416f8f:	add    BYTE PTR [edx+edi*1+0x1838007f],al
  416f96:	add    BYTE PTR [eax],al
  416f98:	js     0x416f73
  416f9a:	inc    ecx
  416f9b:	add    BYTE PTR [edx+edi*1+0x1838007f],al
  416fa2:	add    BYTE PTR [eax],al
  416fa4:	(bad)  
  416fa6:	inc    ecx
  416fa7:	add    BYTE PTR [edx+edi*1+0x3838007f],al
  416fae:	add    BYTE PTR [eax],al
  416fb0:	inc    esp
  416fb1:	fild   DWORD PTR [ecx+0x0]
  416fb4:	test   BYTE PTR [edx],bh
  416fb6:	jl     0x416fb8
  416fb8:	cmp    BYTE PTR [eax],cl
  416fba:	add    BYTE PTR [eax],al
  416fbc:	(bad)  
  416fbe:	inc    ecx
  416fbf:	add    BYTE PTR [edx+edi*1+0x838007c],al
  416fc6:	add    BYTE PTR [eax],al
  416fc8:	sbb    al,0xdb
  416fca:	inc    ecx
  416fcb:	add    BYTE PTR [edx+edi*1+0x2838007c],al
  416fd2:	add    BYTE PTR [eax],al
  416fd4:	and    cl,bl
  416fd6:	inc    ecx
  416fd7:	add    BYTE PTR [edx+edi*1+0x1838007c],al
  416fde:	add    BYTE PTR [eax],al
  416fe0:	lods   al,BYTE PTR ds:[esi]
  416fe1:	fld    DWORD PTR [ecx+0x0]
  416fe4:	test   BYTE PTR [edx],bh
  416fe6:	jl     0x416fe8
  416fe8:	cmp    BYTE PTR [eax],bl
  416fea:	add    BYTE PTR [eax],al
  416fec:	clc    
  416fed:	fadd   DWORD PTR [ecx+0x0]
  416ff0:	test   BYTE PTR [edx],bh
  416ff2:	jl     0x416ff4
  416ff4:	cmp    BYTE PTR [eax],bh
  416ff6:	add    BYTE PTR [eax],al
  416ff8:	inc    esp
  416ff9:	fild   DWORD PTR [ecx+0x0]
  416ffc:	test   BYTE PTR [edx],bh
  416ffe:	jge    0x417000
  417000:	cmp    BYTE PTR [eax],cl
  417002:	add    BYTE PTR [eax],al
  417004:	test   al,0xdb
  417006:	inc    ecx
  417007:	add    BYTE PTR [edx+edi*1+0x838007d],al
  41700e:	add    BYTE PTR [eax],al
  417010:	add    bl,bl
  417012:	inc    ecx
  417013:	add    BYTE PTR [edx+edi*1+0x2838007d],al
  41701a:	add    BYTE PTR [eax],al
  41701c:	and    cl,bl
  41701e:	inc    ecx
  41701f:	add    BYTE PTR [edx+edi*1+0x1838007d],al
  417026:	add    BYTE PTR [eax],al
  417028:	js     0x417003
  41702a:	inc    ecx
  41702b:	add    BYTE PTR [edx+edi*1+0x1838007d],al
  417032:	add    BYTE PTR [eax],al
  417034:	(bad)  
  417036:	inc    ecx
  417037:	add    BYTE PTR [edx+edi*1+0x3838007d],al
  41703e:	add    BYTE PTR [eax],al
  417040:	pop    esp
  417041:	fild   DWORD PTR [ecx+0x0]
  417044:	cmp    DWORD PTR [eax],0xffffffbf
  417047:	add    BYTE PTR [eax],bh
  417049:	or     BYTE PTR [eax],al
  41704b:	add    ah,dh
  41704d:	fild   DWORD PTR [ecx+0x0]
  417050:	cmp    DWORD PTR [eax],0xffffffbf
  417053:	add    BYTE PTR [eax],bh
  417055:	or     BYTE PTR [eax],al
  417057:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41705b:	add    BYTE PTR [ebx+0x3800bf38],al
  417061:	sub    BYTE PTR [eax],al
  417063:	add    al,al
  417065:	fild   DWORD PTR [ecx+0x0]
  417068:	cmp    DWORD PTR [eax],0xffffffbf
  41706b:	add    BYTE PTR [eax],bh
  41706d:	sub    BYTE PTR [eax],al
  41706f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417073:	add    BYTE PTR [ebx+0x3800be38],al
  417079:	or     BYTE PTR [eax],al
  41707b:	add    ah,dh
  41707d:	fild   DWORD PTR [ecx+0x0]
  417080:	cmp    DWORD PTR [eax],0xffffffbe
  417083:	add    BYTE PTR [eax],bh
  417085:	or     BYTE PTR [eax],al
  417087:	add    BYTE PTR [eax],bh
  417089:	fld    DWORD PTR [ecx+0x0]
  41708c:	cmp    DWORD PTR [eax],0xffffffbe
  41708f:	add    BYTE PTR [eax],bh
  417091:	sbb    BYTE PTR [eax],al
  417093:	add    ah,al
  417095:	fld    DWORD PTR [ecx+0x0]
  417098:	cmp    DWORD PTR [eax],0xffffffbe
  41709b:	add    BYTE PTR [eax],bh
  41709d:	sbb    BYTE PTR [eax],al
  41709f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4170a3:	add    BYTE PTR [ebx+0x3800be38],al
  4170a9:	sub    BYTE PTR [eax],al
  4170ab:	add    al,al
  4170ad:	fild   DWORD PTR [ecx+0x0]
  4170b0:	cmp    DWORD PTR [eax],0xffffffbe
  4170b3:	add    BYTE PTR [eax],bh
  4170b5:	sub    BYTE PTR [eax],al
  4170b7:	add    BYTE PTR [eax],bh
  4170b9:	fld    DWORD PTR [ecx+0x0]
  4170bc:	cmp    DWORD PTR [eax],0xffffffbe
  4170bf:	add    BYTE PTR [eax],bh
  4170c1:	cmp    BYTE PTR [eax],al
  4170c3:	add    BYTE PTR [eax-0x7cffbe27],dl
  4170c9:	cmp    BYTE PTR [esi+0x383800],bh
  4170cf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4170d3:	add    BYTE PTR [ebx+0x3800af38],al
  4170d9:	or     BYTE PTR [eax],al
  4170db:	add    ah,dh
  4170dd:	fild   DWORD PTR [ecx+0x0]
  4170e0:	cmp    DWORD PTR [eax],0xffffffaf
  4170e3:	add    BYTE PTR [eax],bh
  4170e5:	or     BYTE PTR [eax],al
  4170e7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4170eb:	add    BYTE PTR [ebx+0x3800af38],al
  4170f1:	sub    BYTE PTR [eax],al
  4170f3:	add    al,al
  4170f5:	fild   DWORD PTR [ecx+0x0]
  4170f8:	cmp    DWORD PTR [eax],0xffffffaf
  4170fb:	add    BYTE PTR [eax],bh
  4170fd:	sub    BYTE PTR [eax],al
  4170ff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417103:	add    BYTE PTR [ebx+0x3800ae38],al
  417109:	or     BYTE PTR [eax],al
  41710b:	add    ah,dh
  41710d:	fild   DWORD PTR [ecx+0x0]
  417110:	cmp    DWORD PTR [eax],0xffffffae
  417113:	add    BYTE PTR [eax],bh
  417115:	or     BYTE PTR [eax],al
  417117:	add    BYTE PTR [eax],bh
  417119:	fld    DWORD PTR [ecx+0x0]
  41711c:	cmp    DWORD PTR [eax],0xffffffae
  41711f:	add    BYTE PTR [eax],bh
  417121:	sbb    BYTE PTR [eax],al
  417123:	add    ah,al
  417125:	fld    DWORD PTR [ecx+0x0]
  417128:	cmp    DWORD PTR [eax],0xffffffae
  41712b:	add    BYTE PTR [eax],bh
  41712d:	sbb    BYTE PTR [eax],al
  41712f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417133:	add    BYTE PTR [ebx+0x3800ae38],al
  417139:	sub    BYTE PTR [eax],al
  41713b:	add    al,al
  41713d:	fild   DWORD PTR [ecx+0x0]
  417140:	cmp    DWORD PTR [eax],0xffffffae
  417143:	add    BYTE PTR [eax],bh
  417145:	sub    BYTE PTR [eax],al
  417147:	add    BYTE PTR [eax],bh
  417149:	fld    DWORD PTR [ecx+0x0]
  41714c:	cmp    DWORD PTR [eax],0xffffffae
  41714f:	add    BYTE PTR [eax],bh
  417151:	cmp    BYTE PTR [eax],al
  417153:	add    BYTE PTR [eax-0x7cffbe27],dl
  417159:	cmp    BYTE PTR [esi+0x383800],ch
  41715f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417163:	add    BYTE PTR [ebx+0x38009f38],al
  417169:	or     BYTE PTR [eax],al
  41716b:	add    ah,dh
  41716d:	fild   DWORD PTR [ecx+0x0]
  417170:	cmp    DWORD PTR [eax],0xffffff9f
  417173:	add    BYTE PTR [eax],bh
  417175:	or     BYTE PTR [eax],al
  417177:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41717b:	add    BYTE PTR [ebx+0x38009f38],al
  417181:	sub    BYTE PTR [eax],al
  417183:	add    al,al
  417185:	fild   DWORD PTR [ecx+0x0]
  417188:	cmp    DWORD PTR [eax],0xffffff9f
  41718b:	add    BYTE PTR [eax],bh
  41718d:	sub    BYTE PTR [eax],al
  41718f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417193:	add    BYTE PTR [ebx+0x38009e38],al
  417199:	or     BYTE PTR [eax],al
  41719b:	add    ah,dh
  41719d:	fild   DWORD PTR [ecx+0x0]
  4171a0:	cmp    DWORD PTR [eax],0xffffff9e
  4171a3:	add    BYTE PTR [eax],bh
  4171a5:	or     BYTE PTR [eax],al
  4171a7:	add    BYTE PTR [eax],bh
  4171a9:	fld    DWORD PTR [ecx+0x0]
  4171ac:	cmp    DWORD PTR [eax],0xffffff9e
  4171af:	add    BYTE PTR [eax],bh
  4171b1:	sbb    BYTE PTR [eax],al
  4171b3:	add    ah,al
  4171b5:	fld    DWORD PTR [ecx+0x0]
  4171b8:	cmp    DWORD PTR [eax],0xffffff9e
  4171bb:	add    BYTE PTR [eax],bh
  4171bd:	sbb    BYTE PTR [eax],al
  4171bf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4171c3:	add    BYTE PTR [ebx+0x38009e38],al
  4171c9:	sub    BYTE PTR [eax],al
  4171cb:	add    al,al
  4171cd:	fild   DWORD PTR [ecx+0x0]
  4171d0:	cmp    DWORD PTR [eax],0xffffff9e
  4171d3:	add    BYTE PTR [eax],bh
  4171d5:	sub    BYTE PTR [eax],al
  4171d7:	add    BYTE PTR [eax],bh
  4171d9:	fld    DWORD PTR [ecx+0x0]
  4171dc:	cmp    DWORD PTR [eax],0xffffff9e
  4171df:	add    BYTE PTR [eax],bh
  4171e1:	cmp    BYTE PTR [eax],al
  4171e3:	add    BYTE PTR [eax-0x7cffbe27],dl
  4171e9:	cmp    BYTE PTR [esi+0x383800],bl
  4171ef:	add    BYTE PTR [ebx+ebx*8+0x41],al
  4171f3:	add    BYTE PTR [edx+edi*1+0x838007a],al
  4171fa:	add    BYTE PTR [eax],al
  4171fc:	(bad)  
  4171fe:	inc    ecx
  4171ff:	add    BYTE PTR [edx+edi*1+0x838007a],al
  417206:	add    BYTE PTR [eax],al
  417208:	sbb    al,0xdb
  41720a:	inc    ecx
  41720b:	add    BYTE PTR [edx+edi*1+0x2838007a],al
  417212:	add    BYTE PTR [eax],al
  417214:	and    cl,bl
  417216:	inc    ecx
  417217:	add    BYTE PTR [edx+edi*1+0x1838007a],al
  41721e:	add    BYTE PTR [eax],al
  417220:	lods   al,BYTE PTR ds:[esi]
  417221:	fld    DWORD PTR [ecx+0x0]
  417224:	test   BYTE PTR [edx],bh
  417226:	jp     0x417228
  417228:	cmp    BYTE PTR [eax],bl
  41722a:	add    BYTE PTR [eax],al
  41722c:	clc    
  41722d:	fadd   DWORD PTR [ecx+0x0]
  417230:	test   BYTE PTR [edx],bh
  417232:	jp     0x417234
  417234:	cmp    BYTE PTR [eax],bh
  417236:	add    BYTE PTR [eax],al
  417238:	inc    esp
  417239:	fild   DWORD PTR [ecx+0x0]
  41723c:	test   BYTE PTR [edx],bh
  41723e:	jnp    0x417240
  417240:	cmp    BYTE PTR [eax],cl
  417242:	add    BYTE PTR [eax],al
  417244:	test   al,0xdb
  417246:	inc    ecx
  417247:	add    BYTE PTR [edx+edi*1+0x838007b],al
  41724e:	add    BYTE PTR [eax],al
  417250:	add    bl,bl
  417252:	inc    ecx
  417253:	add    BYTE PTR [edx+edi*1+0x2838007b],al
  41725a:	add    BYTE PTR [eax],al
  41725c:	and    cl,bl
  41725e:	inc    ecx
  41725f:	add    BYTE PTR [edx+edi*1+0x1838007b],al
  417266:	add    BYTE PTR [eax],al
  417268:	js     0x417243
  41726a:	inc    ecx
  41726b:	add    BYTE PTR [edx+edi*1+0x1838007b],al
  417272:	add    BYTE PTR [eax],al
  417274:	(bad)  
  417276:	inc    ecx
  417277:	add    BYTE PTR [edx+edi*1+0x3838007b],al
  41727e:	add    BYTE PTR [eax],al
  417280:	inc    esp
  417281:	fild   DWORD PTR [ecx+0x0]
  417284:	test   BYTE PTR [edx],bh
  417286:	js     0x417288
  417288:	cmp    BYTE PTR [eax],cl
  41728a:	add    BYTE PTR [eax],al
  41728c:	(bad)  
  41728e:	inc    ecx
  41728f:	add    BYTE PTR [edx+edi*1+0x8380078],al
  417296:	add    BYTE PTR [eax],al
  417298:	sbb    al,0xdb
  41729a:	inc    ecx
  41729b:	add    BYTE PTR [edx+edi*1+0x28380078],al
  4172a2:	add    BYTE PTR [eax],al
  4172a4:	and    cl,bl
  4172a6:	inc    ecx
  4172a7:	add    BYTE PTR [edx+edi*1+0x18380078],al
  4172ae:	add    BYTE PTR [eax],al
  4172b0:	lods   al,BYTE PTR ds:[esi]
  4172b1:	fld    DWORD PTR [ecx+0x0]
  4172b4:	test   BYTE PTR [edx],bh
  4172b6:	js     0x4172b8
  4172b8:	cmp    BYTE PTR [eax],bl
  4172ba:	add    BYTE PTR [eax],al
  4172bc:	clc    
  4172bd:	fadd   DWORD PTR [ecx+0x0]
  4172c0:	test   BYTE PTR [edx],bh
  4172c2:	js     0x4172c4
  4172c4:	cmp    BYTE PTR [eax],bh
  4172c6:	add    BYTE PTR [eax],al
  4172c8:	inc    esp
  4172c9:	fild   DWORD PTR [ecx+0x0]
  4172cc:	test   BYTE PTR [edx],bh
  4172ce:	jns    0x4172d0
  4172d0:	cmp    BYTE PTR [eax],cl
  4172d2:	add    BYTE PTR [eax],al
  4172d4:	test   al,0xdb
  4172d6:	inc    ecx
  4172d7:	add    BYTE PTR [edx+edi*1+0x8380079],al
  4172de:	add    BYTE PTR [eax],al
  4172e0:	add    bl,bl
  4172e2:	inc    ecx
  4172e3:	add    BYTE PTR [edx+edi*1+0x28380079],al
  4172ea:	add    BYTE PTR [eax],al
  4172ec:	and    cl,bl
  4172ee:	inc    ecx
  4172ef:	add    BYTE PTR [edx+edi*1+0x18380079],al
  4172f6:	add    BYTE PTR [eax],al
  4172f8:	js     0x4172d3
  4172fa:	inc    ecx
  4172fb:	add    BYTE PTR [edx+edi*1+0x18380079],al
  417302:	add    BYTE PTR [eax],al
  417304:	(bad)  
  417306:	inc    ecx
  417307:	add    BYTE PTR [edx+edi*1+0x38380079],al
  41730e:	add    BYTE PTR [eax],al
  417310:	pop    esp
  417311:	fild   DWORD PTR [ecx+0x0]
  417314:	cmp    DWORD PTR [eax],0xffffffbd
  417317:	add    BYTE PTR [eax],bh
  417319:	or     BYTE PTR [eax],al
  41731b:	add    ah,dh
  41731d:	fild   DWORD PTR [ecx+0x0]
  417320:	cmp    DWORD PTR [eax],0xffffffbd
  417323:	add    BYTE PTR [eax],bh
  417325:	or     BYTE PTR [eax],al
  417327:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41732b:	add    BYTE PTR [ebx+0x3800bd38],al
  417331:	sub    BYTE PTR [eax],al
  417333:	add    al,al
  417335:	fild   DWORD PTR [ecx+0x0]
  417338:	cmp    DWORD PTR [eax],0xffffffbd
  41733b:	add    BYTE PTR [eax],bh
  41733d:	sub    BYTE PTR [eax],al
  41733f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417343:	add    BYTE PTR [ebx+0x3800bc38],al
  417349:	or     BYTE PTR [eax],al
  41734b:	add    ah,dh
  41734d:	fild   DWORD PTR [ecx+0x0]
  417350:	cmp    DWORD PTR [eax],0xffffffbc
  417353:	add    BYTE PTR [eax],bh
  417355:	or     BYTE PTR [eax],al
  417357:	add    BYTE PTR [eax],bh
  417359:	fld    DWORD PTR [ecx+0x0]
  41735c:	cmp    DWORD PTR [eax],0xffffffbc
  41735f:	add    BYTE PTR [eax],bh
  417361:	sbb    BYTE PTR [eax],al
  417363:	add    ah,al
  417365:	fld    DWORD PTR [ecx+0x0]
  417368:	cmp    DWORD PTR [eax],0xffffffbc
  41736b:	add    BYTE PTR [eax],bh
  41736d:	sbb    BYTE PTR [eax],al
  41736f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417373:	add    BYTE PTR [ebx+0x3800bc38],al
  417379:	sub    BYTE PTR [eax],al
  41737b:	add    al,al
  41737d:	fild   DWORD PTR [ecx+0x0]
  417380:	cmp    DWORD PTR [eax],0xffffffbc
  417383:	add    BYTE PTR [eax],bh
  417385:	sub    BYTE PTR [eax],al
  417387:	add    BYTE PTR [eax],bh
  417389:	fld    DWORD PTR [ecx+0x0]
  41738c:	cmp    DWORD PTR [eax],0xffffffbc
  41738f:	add    BYTE PTR [eax],bh
  417391:	cmp    BYTE PTR [eax],al
  417393:	add    BYTE PTR [eax-0x7cffbe27],dl
  417399:	cmp    BYTE PTR [eax+eax*1+0x3838],bh
  4173a0:	pop    esp
  4173a1:	fild   DWORD PTR [ecx+0x0]
  4173a4:	cmp    DWORD PTR [eax],0xffffffad
  4173a7:	add    BYTE PTR [eax],bh
  4173a9:	or     BYTE PTR [eax],al
  4173ab:	add    ah,dh
  4173ad:	fild   DWORD PTR [ecx+0x0]
  4173b0:	cmp    DWORD PTR [eax],0xffffffad
  4173b3:	add    BYTE PTR [eax],bh
  4173b5:	or     BYTE PTR [eax],al
  4173b7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4173bb:	add    BYTE PTR [ebx+0x3800ad38],al
  4173c1:	sub    BYTE PTR [eax],al
  4173c3:	add    al,al
  4173c5:	fild   DWORD PTR [ecx+0x0]
  4173c8:	cmp    DWORD PTR [eax],0xffffffad
  4173cb:	add    BYTE PTR [eax],bh
  4173cd:	sub    BYTE PTR [eax],al
  4173cf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4173d3:	add    BYTE PTR [ebx+0x3800ac38],al
  4173d9:	or     BYTE PTR [eax],al
  4173db:	add    ah,dh
  4173dd:	fild   DWORD PTR [ecx+0x0]
  4173e0:	cmp    DWORD PTR [eax],0xffffffac
  4173e3:	add    BYTE PTR [eax],bh
  4173e5:	or     BYTE PTR [eax],al
  4173e7:	add    BYTE PTR [eax],bh
  4173e9:	fld    DWORD PTR [ecx+0x0]
  4173ec:	cmp    DWORD PTR [eax],0xffffffac
  4173ef:	add    BYTE PTR [eax],bh
  4173f1:	sbb    BYTE PTR [eax],al
  4173f3:	add    ah,al
  4173f5:	fld    DWORD PTR [ecx+0x0]
  4173f8:	cmp    DWORD PTR [eax],0xffffffac
  4173fb:	add    BYTE PTR [eax],bh
  4173fd:	sbb    BYTE PTR [eax],al
  4173ff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417403:	add    BYTE PTR [ebx+0x3800ac38],al
  417409:	sub    BYTE PTR [eax],al
  41740b:	add    al,al
  41740d:	fild   DWORD PTR [ecx+0x0]
  417410:	cmp    DWORD PTR [eax],0xffffffac
  417413:	add    BYTE PTR [eax],bh
  417415:	sub    BYTE PTR [eax],al
  417417:	add    BYTE PTR [eax],bh
  417419:	fld    DWORD PTR [ecx+0x0]
  41741c:	cmp    DWORD PTR [eax],0xffffffac
  41741f:	add    BYTE PTR [eax],bh
  417421:	cmp    BYTE PTR [eax],al
  417423:	add    BYTE PTR [eax-0x7cffbe27],dl
  417429:	cmp    BYTE PTR [eax+eax*1+0x3838],ch
  417430:	pop    esp
  417431:	fild   DWORD PTR [ecx+0x0]
  417434:	cmp    DWORD PTR [eax],0xffffff9d
  417437:	add    BYTE PTR [eax],bh
  417439:	or     BYTE PTR [eax],al
  41743b:	add    ah,dh
  41743d:	fild   DWORD PTR [ecx+0x0]
  417440:	cmp    DWORD PTR [eax],0xffffff9d
  417443:	add    BYTE PTR [eax],bh
  417445:	or     BYTE PTR [eax],al
  417447:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41744b:	add    BYTE PTR [ebx+0x38009d38],al
  417451:	sub    BYTE PTR [eax],al
  417453:	add    al,al
  417455:	fild   DWORD PTR [ecx+0x0]
  417458:	cmp    DWORD PTR [eax],0xffffff9d
  41745b:	add    BYTE PTR [eax],bh
  41745d:	sub    BYTE PTR [eax],al
  41745f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417463:	add    BYTE PTR [ebx+0x38009c38],al
  417469:	or     BYTE PTR [eax],al
  41746b:	add    ah,dh
  41746d:	fild   DWORD PTR [ecx+0x0]
  417470:	cmp    DWORD PTR [eax],0xffffff9c
  417473:	add    BYTE PTR [eax],bh
  417475:	or     BYTE PTR [eax],al
  417477:	add    BYTE PTR [eax],bh
  417479:	fld    DWORD PTR [ecx+0x0]
  41747c:	cmp    DWORD PTR [eax],0xffffff9c
  41747f:	add    BYTE PTR [eax],bh
  417481:	sbb    BYTE PTR [eax],al
  417483:	add    ah,al
  417485:	fld    DWORD PTR [ecx+0x0]
  417488:	cmp    DWORD PTR [eax],0xffffff9c
  41748b:	add    BYTE PTR [eax],bh
  41748d:	sbb    BYTE PTR [eax],al
  41748f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417493:	add    BYTE PTR [ebx+0x38009c38],al
  417499:	sub    BYTE PTR [eax],al
  41749b:	add    al,al
  41749d:	fild   DWORD PTR [ecx+0x0]
  4174a0:	cmp    DWORD PTR [eax],0xffffff9c
  4174a3:	add    BYTE PTR [eax],bh
  4174a5:	sub    BYTE PTR [eax],al
  4174a7:	add    BYTE PTR [eax],bh
  4174a9:	fld    DWORD PTR [ecx+0x0]
  4174ac:	cmp    DWORD PTR [eax],0xffffff9c
  4174af:	add    BYTE PTR [eax],bh
  4174b1:	cmp    BYTE PTR [eax],al
  4174b3:	add    BYTE PTR [eax-0x7cffbe27],dl
  4174b9:	cmp    BYTE PTR [eax+eax*1+0x3838],bl
  4174c0:	inc    esp
  4174c1:	fild   DWORD PTR [ecx+0x0]
  4174c4:	test   BYTE PTR [edx],bh
  4174c6:	outs   dx,BYTE PTR ds:[esi]
  4174c7:	add    BYTE PTR [eax],bh
  4174c9:	or     BYTE PTR [eax],al
  4174cb:	add    ah,bl
  4174cd:	fild   DWORD PTR [ecx+0x0]
  4174d0:	test   BYTE PTR [edx],bh
  4174d2:	outs   dx,BYTE PTR ds:[esi]
  4174d3:	add    BYTE PTR [eax],bh
  4174d5:	or     BYTE PTR [eax],al
  4174d7:	add    BYTE PTR [ebx+ebx*8],bl
  4174da:	inc    ecx
  4174db:	add    BYTE PTR [edx+edi*1+0x2838006e],al
  4174e2:	add    BYTE PTR [eax],al
  4174e4:	and    cl,bl
  4174e6:	inc    ecx
  4174e7:	add    BYTE PTR [edx+edi*1+0x1838006e],al
  4174ee:	add    BYTE PTR [eax],al
  4174f0:	lods   al,BYTE PTR ds:[esi]
  4174f1:	fld    DWORD PTR [ecx+0x0]
  4174f4:	test   BYTE PTR [edx],bh
  4174f6:	outs   dx,BYTE PTR ds:[esi]
  4174f7:	add    BYTE PTR [eax],bh
  4174f9:	sbb    BYTE PTR [eax],al
  4174fb:	add    al,bh
  4174fd:	fadd   DWORD PTR [ecx+0x0]
  417500:	test   BYTE PTR [edx],bh
  417502:	outs   dx,BYTE PTR ds:[esi]
  417503:	add    BYTE PTR [eax],bh
  417505:	cmp    BYTE PTR [eax],al
  417507:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41750b:	add    BYTE PTR [edx+edi*1+0x838006f],al
  417512:	add    BYTE PTR [eax],al
  417514:	test   al,0xdb
  417516:	inc    ecx
  417517:	add    BYTE PTR [edx+edi*1+0x838006f],al
  41751e:	add    BYTE PTR [eax],al
  417520:	add    bl,bl
  417522:	inc    ecx
  417523:	add    BYTE PTR [edx+edi*1+0x2838006f],al
  41752a:	add    BYTE PTR [eax],al
  41752c:	and    cl,bl
  41752e:	inc    ecx
  41752f:	add    BYTE PTR [edx+edi*1+0x1838006f],al
  417536:	add    BYTE PTR [eax],al
  417538:	js     0x417513
  41753a:	inc    ecx
  41753b:	add    BYTE PTR [edx+edi*1+0x1838006f],al
  417542:	add    BYTE PTR [eax],al
  417544:	(bad)  
  417546:	inc    ecx
  417547:	add    BYTE PTR [edx+edi*1+0x3838006f],al
  41754e:	add    BYTE PTR [eax],al
  417550:	inc    esp
  417551:	fild   DWORD PTR [ecx+0x0]
  417554:	test   BYTE PTR [edx],bh
  417556:	ins    BYTE PTR es:[edi],dx
  417557:	add    BYTE PTR [eax],bh
  417559:	or     BYTE PTR [eax],al
  41755b:	add    ah,bl
  41755d:	fild   DWORD PTR [ecx+0x0]
  417560:	test   BYTE PTR [edx],bh
  417562:	ins    BYTE PTR es:[edi],dx
  417563:	add    BYTE PTR [eax],bh
  417565:	or     BYTE PTR [eax],al
  417567:	add    BYTE PTR [ebx+ebx*8],bl
  41756a:	inc    ecx
  41756b:	add    BYTE PTR [edx+edi*1+0x2838006c],al
  417572:	add    BYTE PTR [eax],al
  417574:	and    cl,bl
  417576:	inc    ecx
  417577:	add    BYTE PTR [edx+edi*1+0x1838006c],al
  41757e:	add    BYTE PTR [eax],al
  417580:	lods   al,BYTE PTR ds:[esi]
  417581:	fld    DWORD PTR [ecx+0x0]
  417584:	test   BYTE PTR [edx],bh
  417586:	ins    BYTE PTR es:[edi],dx
  417587:	add    BYTE PTR [eax],bh
  417589:	sbb    BYTE PTR [eax],al
  41758b:	add    al,bh
  41758d:	fadd   DWORD PTR [ecx+0x0]
  417590:	test   BYTE PTR [edx],bh
  417592:	ins    BYTE PTR es:[edi],dx
  417593:	add    BYTE PTR [eax],bh
  417595:	cmp    BYTE PTR [eax],al
  417597:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41759b:	add    BYTE PTR [edx+edi*1+0x838006d],al
  4175a2:	add    BYTE PTR [eax],al
  4175a4:	test   al,0xdb
  4175a6:	inc    ecx
  4175a7:	add    BYTE PTR [edx+edi*1+0x838006d],al
  4175ae:	add    BYTE PTR [eax],al
  4175b0:	add    bl,bl
  4175b2:	inc    ecx
  4175b3:	add    BYTE PTR [edx+edi*1+0x2838006d],al
  4175ba:	add    BYTE PTR [eax],al
  4175bc:	and    cl,bl
  4175be:	inc    ecx
  4175bf:	add    BYTE PTR [edx+edi*1+0x1838006d],al
  4175c6:	add    BYTE PTR [eax],al
  4175c8:	js     0x4175a3
  4175ca:	inc    ecx
  4175cb:	add    BYTE PTR [edx+edi*1+0x1838006d],al
  4175d2:	add    BYTE PTR [eax],al
  4175d4:	(bad)  
  4175d6:	inc    ecx
  4175d7:	add    BYTE PTR [edx+edi*1+0x3838006d],al
  4175de:	add    BYTE PTR [eax],al
  4175e0:	inc    esp
  4175e1:	fild   DWORD PTR [ecx+0x0]
  4175e4:	test   BYTE PTR [edx],bh
  4175e6:	pop    esi
  4175e7:	add    BYTE PTR [eax],bh
  4175e9:	or     BYTE PTR [eax],al
  4175eb:	add    ah,bl
  4175ed:	fild   DWORD PTR [ecx+0x0]
  4175f0:	test   BYTE PTR [edx],bh
  4175f2:	pop    esi
  4175f3:	add    BYTE PTR [eax],bh
  4175f5:	or     BYTE PTR [eax],al
  4175f7:	add    BYTE PTR [ebx+ebx*8],bl
  4175fa:	inc    ecx
  4175fb:	add    BYTE PTR [edx+edi*1+0x2838005e],al
  417602:	add    BYTE PTR [eax],al
  417604:	and    cl,bl
  417606:	inc    ecx
  417607:	add    BYTE PTR [edx+edi*1+0x1838005e],al
  41760e:	add    BYTE PTR [eax],al
  417610:	lods   al,BYTE PTR ds:[esi]
  417611:	fld    DWORD PTR [ecx+0x0]
  417614:	test   BYTE PTR [edx],bh
  417616:	pop    esi
  417617:	add    BYTE PTR [eax],bh
  417619:	sbb    BYTE PTR [eax],al
  41761b:	add    al,bh
  41761d:	fadd   DWORD PTR [ecx+0x0]
  417620:	test   BYTE PTR [edx],bh
  417622:	pop    esi
  417623:	add    BYTE PTR [eax],bh
  417625:	cmp    BYTE PTR [eax],al
  417627:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41762b:	add    BYTE PTR [edx+edi*1+0x838005f],al
  417632:	add    BYTE PTR [eax],al
  417634:	test   al,0xdb
  417636:	inc    ecx
  417637:	add    BYTE PTR [edx+edi*1+0x838005f],al
  41763e:	add    BYTE PTR [eax],al
  417640:	add    bl,bl
  417642:	inc    ecx
  417643:	add    BYTE PTR [edx+edi*1+0x2838005f],al
  41764a:	add    BYTE PTR [eax],al
  41764c:	and    cl,bl
  41764e:	inc    ecx
  41764f:	add    BYTE PTR [edx+edi*1+0x1838005f],al
  417656:	add    BYTE PTR [eax],al
  417658:	js     0x417633
  41765a:	inc    ecx
  41765b:	add    BYTE PTR [edx+edi*1+0x1838005f],al
  417662:	add    BYTE PTR [eax],al
  417664:	(bad)  
  417666:	inc    ecx
  417667:	add    BYTE PTR [edx+edi*1+0x3838005f],al
  41766e:	add    BYTE PTR [eax],al
  417670:	pop    esp
  417671:	fild   DWORD PTR [ecx+0x0]
  417674:	cmp    DWORD PTR [eax],0xffffffb7
  417677:	add    BYTE PTR [eax],bh
  417679:	or     BYTE PTR [eax],al
  41767b:	add    ah,dh
  41767d:	fild   DWORD PTR [ecx+0x0]
  417680:	cmp    DWORD PTR [eax],0xffffffb7
  417683:	add    BYTE PTR [eax],bh
  417685:	or     BYTE PTR [eax],al
  417687:	add    BYTE PTR [eax],bh
  417689:	fld    DWORD PTR [ecx+0x0]
  41768c:	cmp    DWORD PTR [eax],0xffffffb7
  41768f:	add    BYTE PTR [eax],bh
  417691:	sbb    BYTE PTR [eax],al
  417693:	add    ah,al
  417695:	fld    DWORD PTR [ecx+0x0]
  417698:	cmp    DWORD PTR [eax],0xffffffb7
  41769b:	add    BYTE PTR [eax],bh
  41769d:	sbb    BYTE PTR [eax],al
  41769f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4176a3:	add    BYTE PTR [ebx+0x3800b738],al
  4176a9:	sub    BYTE PTR [eax],al
  4176ab:	add    al,al
  4176ad:	fild   DWORD PTR [ecx+0x0]
  4176b0:	cmp    DWORD PTR [eax],0xffffffb7
  4176b3:	add    BYTE PTR [eax],bh
  4176b5:	sub    BYTE PTR [eax],al
  4176b7:	add    BYTE PTR [eax],bh
  4176b9:	fld    DWORD PTR [ecx+0x0]
  4176bc:	cmp    DWORD PTR [eax],0xffffffb7
  4176bf:	add    BYTE PTR [eax],bh
  4176c1:	cmp    BYTE PTR [eax],al
  4176c3:	add    BYTE PTR [eax-0x7cffbe27],dl
  4176c9:	cmp    BYTE PTR [edi+0x383800],dh
  4176cf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4176d3:	add    BYTE PTR [ebx+0x3800a738],al
  4176d9:	or     BYTE PTR [eax],al
  4176db:	add    ah,dh
  4176dd:	fild   DWORD PTR [ecx+0x0]
  4176e0:	cmp    DWORD PTR [eax],0xffffffa7
  4176e3:	add    BYTE PTR [eax],bh
  4176e5:	or     BYTE PTR [eax],al
  4176e7:	add    BYTE PTR [eax],bh
  4176e9:	fld    DWORD PTR [ecx+0x0]
  4176ec:	cmp    DWORD PTR [eax],0xffffffa7
  4176ef:	add    BYTE PTR [eax],bh
  4176f1:	sbb    BYTE PTR [eax],al
  4176f3:	add    ah,al
  4176f5:	fld    DWORD PTR [ecx+0x0]
  4176f8:	cmp    DWORD PTR [eax],0xffffffa7
  4176fb:	add    BYTE PTR [eax],bh
  4176fd:	sbb    BYTE PTR [eax],al
  4176ff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417703:	add    BYTE PTR [ebx+0x3800a738],al
  417709:	sub    BYTE PTR [eax],al
  41770b:	add    al,al
  41770d:	fild   DWORD PTR [ecx+0x0]
  417710:	cmp    DWORD PTR [eax],0xffffffa7
  417713:	add    BYTE PTR [eax],bh
  417715:	sub    BYTE PTR [eax],al
  417717:	add    BYTE PTR [eax],bh
  417719:	fld    DWORD PTR [ecx+0x0]
  41771c:	cmp    DWORD PTR [eax],0xffffffa7
  41771f:	add    BYTE PTR [eax],bh
  417721:	cmp    BYTE PTR [eax],al
  417723:	add    BYTE PTR [eax-0x7cffbe27],dl
  417729:	cmp    BYTE PTR [edi+0x383800],ah
  41772f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417733:	add    BYTE PTR [ebx+0x38009738],al
  417739:	or     BYTE PTR [eax],al
  41773b:	add    ah,dh
  41773d:	fild   DWORD PTR [ecx+0x0]
  417740:	cmp    DWORD PTR [eax],0xffffff97
  417743:	add    BYTE PTR [eax],bh
  417745:	or     BYTE PTR [eax],al
  417747:	add    BYTE PTR [eax],bh
  417749:	fld    DWORD PTR [ecx+0x0]
  41774c:	cmp    DWORD PTR [eax],0xffffff97
  41774f:	add    BYTE PTR [eax],bh
  417751:	sbb    BYTE PTR [eax],al
  417753:	add    ah,al
  417755:	fld    DWORD PTR [ecx+0x0]
  417758:	cmp    DWORD PTR [eax],0xffffff97
  41775b:	add    BYTE PTR [eax],bh
  41775d:	sbb    BYTE PTR [eax],al
  41775f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417763:	add    BYTE PTR [ebx+0x38009738],al
  417769:	sub    BYTE PTR [eax],al
  41776b:	add    al,al
  41776d:	fild   DWORD PTR [ecx+0x0]
  417770:	cmp    DWORD PTR [eax],0xffffff97
  417773:	add    BYTE PTR [eax],bh
  417775:	sub    BYTE PTR [eax],al
  417777:	add    BYTE PTR [eax],bh
  417779:	fld    DWORD PTR [ecx+0x0]
  41777c:	cmp    DWORD PTR [eax],0xffffff97
  41777f:	add    BYTE PTR [eax],bh
  417781:	cmp    BYTE PTR [eax],al
  417783:	add    BYTE PTR [eax-0x7cffbe27],dl
  417789:	cmp    BYTE PTR [edi+0x383800],dl
  41778f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417793:	add    BYTE PTR [ebx+0x3800bb38],al
  417799:	or     BYTE PTR [eax],al
  41779b:	add    ah,dh
  41779d:	fild   DWORD PTR [ecx+0x0]
  4177a0:	cmp    DWORD PTR [eax],0xffffffbb
  4177a3:	add    BYTE PTR [eax],bh
  4177a5:	or     BYTE PTR [eax],al
  4177a7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4177ab:	add    BYTE PTR [ebx+0x3800bb38],al
  4177b1:	sub    BYTE PTR [eax],al
  4177b3:	add    al,al
  4177b5:	fild   DWORD PTR [ecx+0x0]
  4177b8:	cmp    DWORD PTR [eax],0xffffffbb
  4177bb:	add    BYTE PTR [eax],bh
  4177bd:	sub    BYTE PTR [eax],al
  4177bf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4177c3:	add    BYTE PTR [ebx+0x3800ba38],al
  4177c9:	or     BYTE PTR [eax],al
  4177cb:	add    ah,dh
  4177cd:	fild   DWORD PTR [ecx+0x0]
  4177d0:	cmp    DWORD PTR [eax],0xffffffba
  4177d3:	add    BYTE PTR [eax],bh
  4177d5:	or     BYTE PTR [eax],al
  4177d7:	add    BYTE PTR [eax],bh
  4177d9:	fld    DWORD PTR [ecx+0x0]
  4177dc:	cmp    DWORD PTR [eax],0xffffffba
  4177df:	add    BYTE PTR [eax],bh
  4177e1:	sbb    BYTE PTR [eax],al
  4177e3:	add    ah,al
  4177e5:	fld    DWORD PTR [ecx+0x0]
  4177e8:	cmp    DWORD PTR [eax],0xffffffba
  4177eb:	add    BYTE PTR [eax],bh
  4177ed:	sbb    BYTE PTR [eax],al
  4177ef:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4177f3:	add    BYTE PTR [ebx+0x3800ba38],al
  4177f9:	sub    BYTE PTR [eax],al
  4177fb:	add    al,al
  4177fd:	fild   DWORD PTR [ecx+0x0]
  417800:	cmp    DWORD PTR [eax],0xffffffba
  417803:	add    BYTE PTR [eax],bh
  417805:	sub    BYTE PTR [eax],al
  417807:	add    BYTE PTR [eax],bh
  417809:	fld    DWORD PTR [ecx+0x0]
  41780c:	cmp    DWORD PTR [eax],0xffffffba
  41780f:	add    BYTE PTR [eax],bh
  417811:	cmp    BYTE PTR [eax],al
  417813:	add    BYTE PTR [eax-0x7cffbe27],dl
  417819:	cmp    BYTE PTR [edx+0x383800],bh
  41781f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417823:	add    BYTE PTR [ebx+0x3800ab38],al
  417829:	or     BYTE PTR [eax],al
  41782b:	add    ah,dh
  41782d:	fild   DWORD PTR [ecx+0x0]
  417830:	cmp    DWORD PTR [eax],0xffffffab
  417833:	add    BYTE PTR [eax],bh
  417835:	or     BYTE PTR [eax],al
  417837:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41783b:	add    BYTE PTR [ebx+0x3800ab38],al
  417841:	sub    BYTE PTR [eax],al
  417843:	add    al,al
  417845:	fild   DWORD PTR [ecx+0x0]
  417848:	cmp    DWORD PTR [eax],0xffffffab
  41784b:	add    BYTE PTR [eax],bh
  41784d:	sub    BYTE PTR [eax],al
  41784f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417853:	add    BYTE PTR [ebx+0x3800aa38],al
  417859:	or     BYTE PTR [eax],al
  41785b:	add    ah,dh
  41785d:	fild   DWORD PTR [ecx+0x0]
  417860:	cmp    DWORD PTR [eax],0xffffffaa
  417863:	add    BYTE PTR [eax],bh
  417865:	or     BYTE PTR [eax],al
  417867:	add    BYTE PTR [eax],bh
  417869:	fld    DWORD PTR [ecx+0x0]
  41786c:	cmp    DWORD PTR [eax],0xffffffaa
  41786f:	add    BYTE PTR [eax],bh
  417871:	sbb    BYTE PTR [eax],al
  417873:	add    ah,al
  417875:	fld    DWORD PTR [ecx+0x0]
  417878:	cmp    DWORD PTR [eax],0xffffffaa
  41787b:	add    BYTE PTR [eax],bh
  41787d:	sbb    BYTE PTR [eax],al
  41787f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417883:	add    BYTE PTR [ebx+0x3800aa38],al
  417889:	sub    BYTE PTR [eax],al
  41788b:	add    al,al
  41788d:	fild   DWORD PTR [ecx+0x0]
  417890:	cmp    DWORD PTR [eax],0xffffffaa
  417893:	add    BYTE PTR [eax],bh
  417895:	sub    BYTE PTR [eax],al
  417897:	add    BYTE PTR [eax],bh
  417899:	fld    DWORD PTR [ecx+0x0]
  41789c:	cmp    DWORD PTR [eax],0xffffffaa
  41789f:	add    BYTE PTR [eax],bh
  4178a1:	cmp    BYTE PTR [eax],al
  4178a3:	add    BYTE PTR [eax-0x7cffbe27],dl
  4178a9:	cmp    BYTE PTR [edx+0x383800],ch
  4178af:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4178b3:	add    BYTE PTR [ebx+0x38009b38],al
  4178b9:	or     BYTE PTR [eax],al
  4178bb:	add    ah,dh
  4178bd:	fild   DWORD PTR [ecx+0x0]
  4178c0:	cmp    DWORD PTR [eax],0xffffff9b
  4178c3:	add    BYTE PTR [eax],bh
  4178c5:	or     BYTE PTR [eax],al
  4178c7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4178cb:	add    BYTE PTR [ebx+0x38009b38],al
  4178d1:	sub    BYTE PTR [eax],al
  4178d3:	add    al,al
  4178d5:	fild   DWORD PTR [ecx+0x0]
  4178d8:	cmp    DWORD PTR [eax],0xffffff9b
  4178db:	add    BYTE PTR [eax],bh
  4178dd:	sub    BYTE PTR [eax],al
  4178df:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4178e3:	add    BYTE PTR [ebx+0x38009a38],al
  4178e9:	or     BYTE PTR [eax],al
  4178eb:	add    ah,dh
  4178ed:	fild   DWORD PTR [ecx+0x0]
  4178f0:	cmp    DWORD PTR [eax],0xffffff9a
  4178f3:	add    BYTE PTR [eax],bh
  4178f5:	or     BYTE PTR [eax],al
  4178f7:	add    BYTE PTR [eax],bh
  4178f9:	fld    DWORD PTR [ecx+0x0]
  4178fc:	cmp    DWORD PTR [eax],0xffffff9a
  4178ff:	add    BYTE PTR [eax],bh
  417901:	sbb    BYTE PTR [eax],al
  417903:	add    ah,al
  417905:	fld    DWORD PTR [ecx+0x0]
  417908:	cmp    DWORD PTR [eax],0xffffff9a
  41790b:	add    BYTE PTR [eax],bh
  41790d:	sbb    BYTE PTR [eax],al
  41790f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417913:	add    BYTE PTR [ebx+0x38009a38],al
  417919:	sub    BYTE PTR [eax],al
  41791b:	add    al,al
  41791d:	fild   DWORD PTR [ecx+0x0]
  417920:	cmp    DWORD PTR [eax],0xffffff9a
  417923:	add    BYTE PTR [eax],bh
  417925:	sub    BYTE PTR [eax],al
  417927:	add    BYTE PTR [eax],bh
  417929:	fld    DWORD PTR [ecx+0x0]
  41792c:	cmp    DWORD PTR [eax],0xffffff9a
  41792f:	add    BYTE PTR [eax],bh
  417931:	cmp    BYTE PTR [eax],al
  417933:	add    BYTE PTR [eax-0x7cffbe27],dl
  417939:	cmp    BYTE PTR [edx+0x383800],bl
  41793f:	add    BYTE PTR [ebx+ebx*8+0x41],al
  417943:	add    BYTE PTR [edx+edi*1+0x838005c],al
  41794a:	add    BYTE PTR [eax],al
  41794c:	and    al,0xdc
  41794e:	inc    ecx
  41794f:	add    BYTE PTR [edx+edi*1+0x838005c],al
  417956:	add    BYTE PTR [eax],al
  417958:	sub    bl,bl
  41795a:	inc    ecx
  41795b:	add    BYTE PTR [edx+edi*1+0x2838005c],al
  417962:	add    BYTE PTR [eax],al
  417964:	and    cl,bl
  417966:	inc    ecx
  417967:	add    BYTE PTR [edx+edi*1+0x1838005c],al
  41796e:	add    BYTE PTR [eax],al
  417970:	call   0x8441bb4e
  417975:	cmp    bl,BYTE PTR [eax+eax*1+0x38]
  417979:	sbb    BYTE PTR [eax],al
  41797b:	add    BYTE PTR [ecx+ebx*8],al
  41797e:	inc    ecx
  41797f:	add    BYTE PTR [edx+edi*1+0x3838005c],al
  417986:	add    BYTE PTR [eax],al
  417988:	inc    esp
  417989:	fild   DWORD PTR [ecx+0x0]
  41798c:	test   BYTE PTR [edx],bh
  41798e:	pop    ebp
  41798f:	add    BYTE PTR [eax],bh
  417991:	or     BYTE PTR [eax],al
  417993:	add    BYTE PTR [esp+ebx*8],ah
  417996:	inc    ecx
  417997:	add    BYTE PTR [edx+edi*1+0x838005d],al
  41799e:	add    BYTE PTR [eax],al
  4179a0:	sub    bl,bl
  4179a2:	inc    ecx
  4179a3:	add    BYTE PTR [edx+edi*1+0x2838005d],al
  4179aa:	add    BYTE PTR [eax],al
  4179ac:	and    cl,bl
  4179ae:	inc    ecx
  4179af:	add    BYTE PTR [edx+edi*1+0x1838005d],al
  4179b6:	add    BYTE PTR [eax],al
  4179b8:	call   0x8441bb96
  4179bd:	cmp    bl,BYTE PTR [ebp+0x0]
  4179c0:	cmp    BYTE PTR [eax],bl
  4179c2:	add    BYTE PTR [eax],al
  4179c4:	add    al,0xd9
  4179c6:	inc    ecx
  4179c7:	add    BYTE PTR [edx+edi*1+0x3838005d],al
  4179ce:	add    BYTE PTR [eax],al
  4179d0:	pop    esp
  4179d1:	fild   DWORD PTR [ecx+0x0]
  4179d4:	cmp    DWORD PTR [eax],0xffffffb6
  4179d7:	add    BYTE PTR [eax],bh
  4179d9:	or     BYTE PTR [eax],al
  4179db:	add    ah,dh
  4179dd:	fild   DWORD PTR [ecx+0x0]
  4179e0:	cmp    DWORD PTR [eax],0xffffffb6
  4179e3:	add    BYTE PTR [eax],bh
  4179e5:	or     BYTE PTR [eax],al
  4179e7:	add    BYTE PTR [eax],bh
  4179e9:	fld    DWORD PTR [ecx+0x0]
  4179ec:	cmp    DWORD PTR [eax],0xffffffb6
  4179ef:	add    BYTE PTR [eax],bh
  4179f1:	sbb    BYTE PTR [eax],al
  4179f3:	add    ah,al
  4179f5:	fld    DWORD PTR [ecx+0x0]
  4179f8:	cmp    DWORD PTR [eax],0xffffffb6
  4179fb:	add    BYTE PTR [eax],bh
  4179fd:	sbb    BYTE PTR [eax],al
  4179ff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417a03:	add    BYTE PTR [ebx+0x3800b638],al
  417a09:	sub    BYTE PTR [eax],al
  417a0b:	add    al,al
  417a0d:	fild   DWORD PTR [ecx+0x0]
  417a10:	cmp    DWORD PTR [eax],0xffffffb6
  417a13:	add    BYTE PTR [eax],bh
  417a15:	sub    BYTE PTR [eax],al
  417a17:	add    BYTE PTR [eax],bh
  417a19:	fld    DWORD PTR [ecx+0x0]
  417a1c:	cmp    DWORD PTR [eax],0xffffffb6
  417a1f:	add    BYTE PTR [eax],bh
  417a21:	cmp    BYTE PTR [eax],al
  417a23:	add    BYTE PTR [eax-0x7cffbe27],dl
  417a29:	cmp    BYTE PTR [esi+0x383800],dh
  417a2f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417a33:	add    BYTE PTR [ebx+0x3800a638],al
  417a39:	or     BYTE PTR [eax],al
  417a3b:	add    ah,dh
  417a3d:	fild   DWORD PTR [ecx+0x0]
  417a40:	cmp    DWORD PTR [eax],0xffffffa6
  417a43:	add    BYTE PTR [eax],bh
  417a45:	or     BYTE PTR [eax],al
  417a47:	add    BYTE PTR [eax],bh
  417a49:	fld    DWORD PTR [ecx+0x0]
  417a4c:	cmp    DWORD PTR [eax],0xffffffa6
  417a4f:	add    BYTE PTR [eax],bh
  417a51:	sbb    BYTE PTR [eax],al
  417a53:	add    ah,al
  417a55:	fld    DWORD PTR [ecx+0x0]
  417a58:	cmp    DWORD PTR [eax],0xffffffa6
  417a5b:	add    BYTE PTR [eax],bh
  417a5d:	sbb    BYTE PTR [eax],al
  417a5f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417a63:	add    BYTE PTR [ebx+0x3800a638],al
  417a69:	sub    BYTE PTR [eax],al
  417a6b:	add    al,al
  417a6d:	fild   DWORD PTR [ecx+0x0]
  417a70:	cmp    DWORD PTR [eax],0xffffffa6
  417a73:	add    BYTE PTR [eax],bh
  417a75:	sub    BYTE PTR [eax],al
  417a77:	add    BYTE PTR [eax],bh
  417a79:	fld    DWORD PTR [ecx+0x0]
  417a7c:	cmp    DWORD PTR [eax],0xffffffa6
  417a7f:	add    BYTE PTR [eax],bh
  417a81:	cmp    BYTE PTR [eax],al
  417a83:	add    BYTE PTR [eax-0x7cffbe27],dl
  417a89:	cmp    BYTE PTR [esi+0x383800],ah
  417a8f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417a93:	add    BYTE PTR [ebx+0x38009638],al
  417a99:	or     BYTE PTR [eax],al
  417a9b:	add    ah,dh
  417a9d:	fild   DWORD PTR [ecx+0x0]
  417aa0:	cmp    DWORD PTR [eax],0xffffff96
  417aa3:	add    BYTE PTR [eax],bh
  417aa5:	or     BYTE PTR [eax],al
  417aa7:	add    BYTE PTR [eax],bh
  417aa9:	fld    DWORD PTR [ecx+0x0]
  417aac:	cmp    DWORD PTR [eax],0xffffff96
  417aaf:	add    BYTE PTR [eax],bh
  417ab1:	sbb    BYTE PTR [eax],al
  417ab3:	add    ah,al
  417ab5:	fld    DWORD PTR [ecx+0x0]
  417ab8:	cmp    DWORD PTR [eax],0xffffff96
  417abb:	add    BYTE PTR [eax],bh
  417abd:	sbb    BYTE PTR [eax],al
  417abf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417ac3:	add    BYTE PTR [ebx+0x38009638],al
  417ac9:	sub    BYTE PTR [eax],al
  417acb:	add    al,al
  417acd:	fild   DWORD PTR [ecx+0x0]
  417ad0:	cmp    DWORD PTR [eax],0xffffff96
  417ad3:	add    BYTE PTR [eax],bh
  417ad5:	sub    BYTE PTR [eax],al
  417ad7:	add    BYTE PTR [eax],bh
  417ad9:	fld    DWORD PTR [ecx+0x0]
  417adc:	cmp    DWORD PTR [eax],0xffffff96
  417adf:	add    BYTE PTR [eax],bh
  417ae1:	cmp    BYTE PTR [eax],al
  417ae3:	add    BYTE PTR [eax-0x7cffbe27],dl
  417ae9:	cmp    BYTE PTR [esi+0x383800],dl
  417aef:	add    BYTE PTR [ebx+ebx*8+0x41],al
  417af3:	add    BYTE PTR [edx+edi*1+0x838006a],al
  417afa:	add    BYTE PTR [eax],al
  417afc:	(bad)  
  417afe:	inc    ecx
  417aff:	add    BYTE PTR [edx+edi*1+0x838006a],al
  417b06:	add    BYTE PTR [eax],al
  417b08:	sbb    al,0xdb
  417b0a:	inc    ecx
  417b0b:	add    BYTE PTR [edx+edi*1+0x2838006a],al
  417b12:	add    BYTE PTR [eax],al
  417b14:	and    cl,bl
  417b16:	inc    ecx
  417b17:	add    BYTE PTR [edx+edi*1+0x1838006a],al
  417b1e:	add    BYTE PTR [eax],al
  417b20:	lods   al,BYTE PTR ds:[esi]
  417b21:	fld    DWORD PTR [ecx+0x0]
  417b24:	test   BYTE PTR [edx],bh
  417b26:	push   0x0
  417b28:	cmp    BYTE PTR [eax],bl
  417b2a:	add    BYTE PTR [eax],al
  417b2c:	clc    
  417b2d:	fadd   DWORD PTR [ecx+0x0]
  417b30:	test   BYTE PTR [edx],bh
  417b32:	push   0x0
  417b34:	cmp    BYTE PTR [eax],bh
  417b36:	add    BYTE PTR [eax],al
  417b38:	inc    esp
  417b39:	fild   DWORD PTR [ecx+0x0]
  417b3c:	test   BYTE PTR [edx],bh
  417b3e:	imul   eax,DWORD PTR [eax],0x38
  417b41:	or     BYTE PTR [eax],al
  417b43:	add    BYTE PTR [eax-0x7bffbe25],ch
  417b49:	cmp    ch,BYTE PTR [ebx+0x0]
  417b4c:	cmp    BYTE PTR [eax],cl
  417b4e:	add    BYTE PTR [eax],al
  417b50:	add    bl,bl
  417b52:	inc    ecx
  417b53:	add    BYTE PTR [edx+edi*1+0x2838006b],al
  417b5a:	add    BYTE PTR [eax],al
  417b5c:	and    cl,bl
  417b5e:	inc    ecx
  417b5f:	add    BYTE PTR [edx+edi*1+0x1838006b],al
  417b66:	add    BYTE PTR [eax],al
  417b68:	js     0x417b43
  417b6a:	inc    ecx
  417b6b:	add    BYTE PTR [edx+edi*1+0x1838006b],al
  417b72:	add    BYTE PTR [eax],al
  417b74:	(bad)  
  417b76:	inc    ecx
  417b77:	add    BYTE PTR [edx+edi*1+0x3838006b],al
  417b7e:	add    BYTE PTR [eax],al
  417b80:	inc    esp
  417b81:	fild   DWORD PTR [ecx+0x0]
  417b84:	test   BYTE PTR [edx],bh
  417b86:	push   0x83800
  417b8b:	add    ah,bl
  417b8d:	fild   DWORD PTR [ecx+0x0]
  417b90:	test   BYTE PTR [edx],bh
  417b92:	push   0x83800
  417b97:	add    BYTE PTR [ebx+ebx*8],bl
  417b9a:	inc    ecx
  417b9b:	add    BYTE PTR [edx+edi*1+0x28380068],al
  417ba2:	add    BYTE PTR [eax],al
  417ba4:	and    cl,bl
  417ba6:	inc    ecx
  417ba7:	add    BYTE PTR [edx+edi*1+0x18380068],al
  417bae:	add    BYTE PTR [eax],al
  417bb0:	lods   al,BYTE PTR ds:[esi]
  417bb1:	fld    DWORD PTR [ecx+0x0]
  417bb4:	test   BYTE PTR [edx],bh
  417bb6:	push   0x183800
  417bbb:	add    al,bh
  417bbd:	fadd   DWORD PTR [ecx+0x0]
  417bc0:	test   BYTE PTR [edx],bh
  417bc2:	push   0x383800
  417bc7:	add    BYTE PTR [ebx+ebx*8+0x41],al
  417bcb:	add    BYTE PTR [edx+edi*1+0x8380069],al
  417bd2:	add    BYTE PTR [eax],al
  417bd4:	test   al,0xdb
  417bd6:	inc    ecx
  417bd7:	add    BYTE PTR [edx+edi*1+0x8380069],al
  417bde:	add    BYTE PTR [eax],al
  417be0:	add    bl,bl
  417be2:	inc    ecx
  417be3:	add    BYTE PTR [edx+edi*1+0x28380069],al
  417bea:	add    BYTE PTR [eax],al
  417bec:	and    cl,bl
  417bee:	inc    ecx
  417bef:	add    BYTE PTR [edx+edi*1+0x18380069],al
  417bf6:	add    BYTE PTR [eax],al
  417bf8:	js     0x417bd3
  417bfa:	inc    ecx
  417bfb:	add    BYTE PTR [edx+edi*1+0x18380069],al
  417c02:	add    BYTE PTR [eax],al
  417c04:	(bad)  
  417c06:	inc    ecx
  417c07:	add    BYTE PTR [edx+edi*1+0x38380069],al
  417c0e:	add    BYTE PTR [eax],al
  417c10:	pop    esp
  417c11:	fild   DWORD PTR [ecx+0x0]
  417c14:	cmp    DWORD PTR [eax],0xffffffb9
  417c17:	add    BYTE PTR [eax],bh
  417c19:	or     BYTE PTR [eax],al
  417c1b:	add    ah,dh
  417c1d:	fild   DWORD PTR [ecx+0x0]
  417c20:	cmp    DWORD PTR [eax],0xffffffb9
  417c23:	add    BYTE PTR [eax],bh
  417c25:	or     BYTE PTR [eax],al
  417c27:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417c2b:	add    BYTE PTR [ebx+0x3800b938],al
  417c31:	sub    BYTE PTR [eax],al
  417c33:	add    al,al
  417c35:	fild   DWORD PTR [ecx+0x0]
  417c38:	cmp    DWORD PTR [eax],0xffffffb9
  417c3b:	add    BYTE PTR [eax],bh
  417c3d:	sub    BYTE PTR [eax],al
  417c3f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417c43:	add    BYTE PTR [ebx+0x3800b838],al
  417c49:	or     BYTE PTR [eax],al
  417c4b:	add    ah,dh
  417c4d:	fild   DWORD PTR [ecx+0x0]
  417c50:	cmp    DWORD PTR [eax],0xffffffb8
  417c53:	add    BYTE PTR [eax],bh
  417c55:	or     BYTE PTR [eax],al
  417c57:	add    BYTE PTR [eax],bh
  417c59:	fld    DWORD PTR [ecx+0x0]
  417c5c:	cmp    DWORD PTR [eax],0xffffffb8
  417c5f:	add    BYTE PTR [eax],bh
  417c61:	sbb    BYTE PTR [eax],al
  417c63:	add    ah,al
  417c65:	fld    DWORD PTR [ecx+0x0]
  417c68:	cmp    DWORD PTR [eax],0xffffffb8
  417c6b:	add    BYTE PTR [eax],bh
  417c6d:	sbb    BYTE PTR [eax],al
  417c6f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417c73:	add    BYTE PTR [ebx+0x3800b838],al
  417c79:	sub    BYTE PTR [eax],al
  417c7b:	add    al,al
  417c7d:	fild   DWORD PTR [ecx+0x0]
  417c80:	cmp    DWORD PTR [eax],0xffffffb8
  417c83:	add    BYTE PTR [eax],bh
  417c85:	sub    BYTE PTR [eax],al
  417c87:	add    BYTE PTR [eax],bh
  417c89:	fld    DWORD PTR [ecx+0x0]
  417c8c:	cmp    DWORD PTR [eax],0xffffffb8
  417c8f:	add    BYTE PTR [eax],bh
  417c91:	cmp    BYTE PTR [eax],al
  417c93:	add    BYTE PTR [eax-0x7cffbe27],dl
  417c99:	cmp    BYTE PTR [eax+0x383800],bh
  417c9f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417ca3:	add    BYTE PTR [ebx+0x3800a938],al
  417ca9:	or     BYTE PTR [eax],al
  417cab:	add    ah,dh
  417cad:	fild   DWORD PTR [ecx+0x0]
  417cb0:	cmp    DWORD PTR [eax],0xffffffa9
  417cb3:	add    BYTE PTR [eax],bh
  417cb5:	or     BYTE PTR [eax],al
  417cb7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417cbb:	add    BYTE PTR [ebx+0x3800a938],al
  417cc1:	sub    BYTE PTR [eax],al
  417cc3:	add    al,al
  417cc5:	fild   DWORD PTR [ecx+0x0]
  417cc8:	cmp    DWORD PTR [eax],0xffffffa9
  417ccb:	add    BYTE PTR [eax],bh
  417ccd:	sub    BYTE PTR [eax],al
  417ccf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417cd3:	add    BYTE PTR [ebx+0x3800a838],al
  417cd9:	or     BYTE PTR [eax],al
  417cdb:	add    ah,dh
  417cdd:	fild   DWORD PTR [ecx+0x0]
  417ce0:	cmp    DWORD PTR [eax],0xffffffa8
  417ce3:	add    BYTE PTR [eax],bh
  417ce5:	or     BYTE PTR [eax],al
  417ce7:	add    BYTE PTR [eax],bh
  417ce9:	fld    DWORD PTR [ecx+0x0]
  417cec:	cmp    DWORD PTR [eax],0xffffffa8
  417cef:	add    BYTE PTR [eax],bh
  417cf1:	sbb    BYTE PTR [eax],al
  417cf3:	add    ah,al
  417cf5:	fld    DWORD PTR [ecx+0x0]
  417cf8:	cmp    DWORD PTR [eax],0xffffffa8
  417cfb:	add    BYTE PTR [eax],bh
  417cfd:	sbb    BYTE PTR [eax],al
  417cff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417d03:	add    BYTE PTR [ebx+0x3800a838],al
  417d09:	sub    BYTE PTR [eax],al
  417d0b:	add    al,al
  417d0d:	fild   DWORD PTR [ecx+0x0]
  417d10:	cmp    DWORD PTR [eax],0xffffffa8
  417d13:	add    BYTE PTR [eax],bh
  417d15:	sub    BYTE PTR [eax],al
  417d17:	add    BYTE PTR [eax],bh
  417d19:	fld    DWORD PTR [ecx+0x0]
  417d1c:	cmp    DWORD PTR [eax],0xffffffa8
  417d1f:	add    BYTE PTR [eax],bh
  417d21:	cmp    BYTE PTR [eax],al
  417d23:	add    BYTE PTR [eax-0x7cffbe27],dl
  417d29:	cmp    BYTE PTR [eax+0x383800],ch
  417d2f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417d33:	add    BYTE PTR [ebx+0x38009938],al
  417d39:	or     BYTE PTR [eax],al
  417d3b:	add    ah,dh
  417d3d:	fild   DWORD PTR [ecx+0x0]
  417d40:	cmp    DWORD PTR [eax],0xffffff99
  417d43:	add    BYTE PTR [eax],bh
  417d45:	or     BYTE PTR [eax],al
  417d47:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417d4b:	add    BYTE PTR [ebx+0x38009938],al
  417d51:	sub    BYTE PTR [eax],al
  417d53:	add    al,al
  417d55:	fild   DWORD PTR [ecx+0x0]
  417d58:	cmp    DWORD PTR [eax],0xffffff99
  417d5b:	add    BYTE PTR [eax],bh
  417d5d:	sub    BYTE PTR [eax],al
  417d5f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417d63:	add    BYTE PTR [ebx+0x38009838],al
  417d69:	or     BYTE PTR [eax],al
  417d6b:	add    ah,dh
  417d6d:	fild   DWORD PTR [ecx+0x0]
  417d70:	cmp    DWORD PTR [eax],0xffffff98
  417d73:	add    BYTE PTR [eax],bh
  417d75:	or     BYTE PTR [eax],al
  417d77:	add    BYTE PTR [eax],bh
  417d79:	fld    DWORD PTR [ecx+0x0]
  417d7c:	cmp    DWORD PTR [eax],0xffffff98
  417d7f:	add    BYTE PTR [eax],bh
  417d81:	sbb    BYTE PTR [eax],al
  417d83:	add    ah,al
  417d85:	fld    DWORD PTR [ecx+0x0]
  417d88:	cmp    DWORD PTR [eax],0xffffff98
  417d8b:	add    BYTE PTR [eax],bh
  417d8d:	sbb    BYTE PTR [eax],al
  417d8f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417d93:	add    BYTE PTR [ebx+0x38009838],al
  417d99:	sub    BYTE PTR [eax],al
  417d9b:	add    al,al
  417d9d:	fild   DWORD PTR [ecx+0x0]
  417da0:	cmp    DWORD PTR [eax],0xffffff98
  417da3:	add    BYTE PTR [eax],bh
  417da5:	sub    BYTE PTR [eax],al
  417da7:	add    BYTE PTR [eax],bh
  417da9:	fld    DWORD PTR [ecx+0x0]
  417dac:	cmp    DWORD PTR [eax],0xffffff98
  417daf:	add    BYTE PTR [eax],bh
  417db1:	cmp    BYTE PTR [eax],al
  417db3:	add    BYTE PTR [eax-0x7cffbe27],dl
  417db9:	cmp    BYTE PTR [eax+0x383800],bl
  417dbf:	add    BYTE PTR [eax],al
  417dc1:	loope  0x417e04
  417dc3:	add    BYTE PTR [ebx+0x3800173a],al
  417dc9:	or     BYTE PTR [eax],al
  417dcb:	add    BYTE PTR [ecx+eiz*8+0x3a830041],ch
  417dd2:	pop    ss
  417dd3:	add    BYTE PTR [eax],bh
  417dd5:	sub    BYTE PTR [eax],al
  417dd7:	add    BYTE PTR [eax+eiz*8+0x3a830041],ah
  417dde:	cmp    DWORD PTR [eax],eax
  417de0:	cmp    BYTE PTR [eax],bl
  417de2:	add    BYTE PTR [eax],al
  417de4:	adc    dl,ah
  417de6:	inc    ecx
  417de7:	add    BYTE PTR [ebx+0x3800393a],al
  417ded:	sbb    BYTE PTR [eax],al
  417def:	add    BYTE PTR [eax+eiz*8+0x3a830041],ah
  417df6:	sbb    DWORD PTR [eax],eax
  417df8:	cmp    BYTE PTR [eax],bl
  417dfa:	add    BYTE PTR [eax],al
  417dfc:	adc    dl,ah
  417dfe:	inc    ecx
  417dff:	add    BYTE PTR [ebx+0x3800193a],al
  417e05:	sbb    BYTE PTR [eax],al
  417e07:	add    BYTE PTR [eax-0x1f],dl
  417e0a:	inc    ecx
  417e0b:	add    cl,bl
  417e0d:	add    BYTE PTR [eax],al
  417e0f:	add    BYTE PTR [eax],bl
  417e11:	add    BYTE PTR [eax],al
  417e13:	add    BYTE PTR [eax-0x1f],dl
  417e16:	inc    ecx
  417e17:	add    cl,cl
  417e19:	add    BYTE PTR [eax],al
  417e1b:	add    BYTE PTR [eax],bl
  417e1d:	add    BYTE PTR [eax],al
  417e1f:	add    BYTE PTR [eax-0x25],dl
  417e22:	inc    ecx
  417e23:	add    BYTE PTR [edx+edi*1+0x8380040],al
  417e2a:	add    BYTE PTR [eax],al
  417e2c:	call   0x8441c00c
  417e31:	cmp    al,BYTE PTR [eax+0x0]
  417e34:	cmp    BYTE PTR [eax],cl
  417e36:	add    BYTE PTR [eax],al
  417e38:	sub    al,0xd9
  417e3a:	inc    ecx
  417e3b:	add    BYTE PTR [edx+edi*1+0x18380040],al
  417e42:	add    BYTE PTR [eax],al
  417e44:	mov    eax,0x840041d9
  417e49:	cmp    al,BYTE PTR [eax+0x0]
  417e4c:	cmp    BYTE PTR [eax],bl
  417e4e:	add    BYTE PTR [eax],al
  417e50:	push   eax
  417e51:	fild   DWORD PTR [ecx+0x0]
  417e54:	test   BYTE PTR [edx],bh
  417e56:	inc    ecx
  417e57:	add    BYTE PTR [eax],bh
  417e59:	or     BYTE PTR [eax],al
  417e5b:	add    BYTE PTR [ebx+ebx*8+0x3a840041],dh
  417e62:	inc    ecx
  417e63:	add    BYTE PTR [eax],bh
  417e65:	or     BYTE PTR [eax],al
  417e67:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417e6b:	add    BYTE PTR [ebx+0x78005e00],al
  417e71:	or     BYTE PTR [eax],al
  417e73:	add    ah,dh
  417e75:	fild   DWORD PTR [ecx+0x0]
  417e78:	add    DWORD PTR [eax],0x5e
  417e7b:	add    BYTE PTR [eax+0x8],bh
  417e7e:	add    BYTE PTR [eax],al
  417e80:	pop    esp
  417e81:	fild   DWORD PTR [ecx+0x0]
  417e84:	add    DWORD PTR [eax],0x5e
  417e87:	add    BYTE PTR [eax+0x8],bl
  417e8a:	add    BYTE PTR [eax],al
  417e8c:	rcr    bl,0x41
  417e8f:	add    BYTE PTR [ebx+0x58005e00],al
  417e95:	or     BYTE PTR [eax],al
  417e97:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417e9b:	add    BYTE PTR [ebx+0x18005e00],al
  417ea1:	or     BYTE PTR [eax],al
  417ea3:	add    ah,dh
  417ea5:	fild   DWORD PTR [ecx+0x0]
  417ea8:	add    DWORD PTR [eax],0x5e
  417eab:	add    BYTE PTR [eax],bl
  417ead:	or     BYTE PTR [eax],al
  417eaf:	add    BYTE PTR [eax],bh
  417eb1:	fld    DWORD PTR [ecx+0x0]
  417eb4:	add    DWORD PTR [eax],0x5e
  417eb7:	add    BYTE PTR [eax],bl
  417eb9:	sbb    BYTE PTR [eax],al
  417ebb:	add    ah,al
  417ebd:	fld    DWORD PTR [ecx+0x0]
  417ec0:	add    DWORD PTR [eax],0x5e
  417ec3:	add    BYTE PTR [eax],bl
  417ec5:	sbb    BYTE PTR [eax],al
  417ec7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417ecb:	add    BYTE PTR [ebx+0x38005e00],al
  417ed1:	or     BYTE PTR [eax],al
  417ed3:	add    al,al
  417ed5:	fild   DWORD PTR [ecx+0x0]
  417ed8:	add    DWORD PTR [eax],0x5e
  417edb:	add    BYTE PTR [eax],bh
  417edd:	or     BYTE PTR [eax],al
  417edf:	add    BYTE PTR [eax],bh
  417ee1:	fld    DWORD PTR [ecx+0x0]
  417ee4:	add    DWORD PTR [eax],0x5e
  417ee7:	add    BYTE PTR [eax],bh
  417ee9:	sbb    BYTE PTR [eax],al
  417eeb:	add    BYTE PTR [eax-0x7cffbe27],dl
  417ef1:	add    BYTE PTR [esi+0x0],bl
  417ef4:	cmp    BYTE PTR [eax],bl
  417ef6:	add    BYTE PTR [eax],al
  417ef8:	sbb    bh,0x41
  417efb:	add    BYTE PTR [edx+0x78002c00],al
  417f01:	or     BYTE PTR [eax],al
  417f03:	add    al,bl
  417f05:	fild   WORD PTR [ecx+0x0]
  417f08:	add    BYTE PTR [eax],0x2c
  417f0b:	add    BYTE PTR [eax+0x8],bh
  417f0e:	add    BYTE PTR [eax],al
  417f10:	or     al,0xdf
  417f12:	inc    ecx
  417f13:	add    BYTE PTR [edx+0x78002c00],al
  417f19:	sub    BYTE PTR [eax],al
  417f1b:	add    BYTE PTR [edi+ebx*8+0x41],ch
  417f1f:	add    BYTE PTR [edx+0x78002c00],al
  417f25:	sub    BYTE PTR [eax],al
  417f27:	add    BYTE PTR [eax-0x7dffbe21],al
  417f2d:	add    BYTE PTR [eax+eax*1],ch
  417f30:	pop    eax
  417f31:	or     BYTE PTR [eax],al
  417f33:	add    al,cl
  417f35:	fild   WORD PTR [ecx+0x0]
  417f38:	add    BYTE PTR [eax],0x2c
  417f3b:	add    BYTE PTR [eax+0x8],bl
  417f3e:	add    BYTE PTR [eax],al
  417f40:	or     al,0xdf
  417f42:	inc    ecx
  417f43:	add    BYTE PTR [edx+0x58002c00],al
  417f49:	sub    BYTE PTR [eax],al
  417f4b:	add    BYTE PTR [edi+ebx*8+0x41],ah
  417f4f:	add    BYTE PTR [edx+0x58002c00],al
  417f55:	sub    BYTE PTR [eax],al
  417f57:	add    BYTE PTR [ebx*8+0x820041],bl
  417f5e:	pop    ebx
  417f5f:	add    BYTE PTR [eax+0x8],bh
  417f62:	add    BYTE PTR [eax],al
  417f64:	cld    
  417f65:	fld    QWORD PTR [ecx+0x0]
  417f68:	add    BYTE PTR [eax],0x5b
  417f6b:	add    BYTE PTR [eax+0x8],bh
  417f6e:	add    BYTE PTR [eax],al
  417f70:	push   esp
  417f71:	fiadd  DWORD PTR [ecx+0x0]
  417f74:	add    BYTE PTR [eax],0x5b
  417f77:	add    BYTE PTR [eax+0x18],bh
  417f7a:	add    BYTE PTR [eax],al
  417f7c:	rcr    dl,0x41
  417f7f:	add    BYTE PTR [edx+0x78005b00],al
  417f85:	sbb    BYTE PTR [eax],al
  417f87:	add    BYTE PTR [ebx*8+0x820041],bl
  417f8e:	out    0x0,al
  417f90:	cmp    BYTE PTR [eax],cl
  417f92:	add    BYTE PTR [eax],al
  417f94:	cld    
  417f95:	fld    QWORD PTR [ecx+0x0]
  417f98:	add    BYTE PTR [eax],0xe6
  417f9b:	add    BYTE PTR [eax],bh
  417f9d:	or     BYTE PTR [eax],al
  417f9f:	add    ah,ah
  417fa1:	fadd   QWORD PTR [ecx+0x0]
  417fa4:	add    BYTE PTR [eax],0xe6
  417fa7:	add    BYTE PTR [eax],bh
  417fa9:	sbb    BYTE PTR [eax],al
  417fab:	add    ah,dh
  417fad:	fld    QWORD PTR [ecx+0x0]
  417fb0:	add    BYTE PTR [eax],0xe6
  417fb3:	add    BYTE PTR [eax],bh
  417fb5:	sbb    BYTE PTR [eax],al
  417fb7:	add    BYTE PTR [eax-0x7dffbe21],al
  417fbd:	add    BYTE PTR ds:0x87800,ch
  417fc3:	add    al,bl
  417fc5:	fild   WORD PTR [ecx+0x0]
  417fc8:	add    BYTE PTR [eax],0x2d
  417fcb:	add    BYTE PTR [eax+0x8],bh
  417fce:	add    BYTE PTR [eax],al
  417fd0:	or     al,0xdf
  417fd2:	inc    ecx
  417fd3:	add    BYTE PTR [edx+0x78002d00],al
  417fd9:	sub    BYTE PTR [eax],al
  417fdb:	add    BYTE PTR [edi+ebx*8+0x41],ch
  417fdf:	add    BYTE PTR [edx+0x78002d00],al
  417fe5:	sub    BYTE PTR [eax],al
  417fe7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  417feb:	add    BYTE PTR [ebx+0x78005a00],al
  417ff1:	or     BYTE PTR [eax],al
  417ff3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  417ff7:	add    BYTE PTR [ebx+0x78005a00],al
  417ffd:	or     BYTE PTR [eax],al
  417fff:	add    BYTE PTR [ebx+ebx*8+0x830041],cl
  418006:	sub    al,BYTE PTR [eax]
  418008:	js     0x418012
  41800a:	add    BYTE PTR [eax],al
  41800c:	ins    BYTE PTR es:[edi],dx
  41800d:	fadd   QWORD PTR [ecx+0x0]
  418010:	add    DWORD PTR [eax],0x2a
  418013:	add    BYTE PTR [eax+0x8],bh
  418016:	add    BYTE PTR [eax],al
  418018:	je     0x417ff5
  41801a:	inc    ecx
  41801b:	add    BYTE PTR [ebx+0x78002a00],al
  418021:	sub    BYTE PTR [eax],al
  418023:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418027:	add    BYTE PTR [ebx+0x78002a00],al
  41802d:	sub    BYTE PTR [eax],al
  41802f:	add    BYTE PTR [ebx+ebx*8+0x830041],cl
  418036:	sub    al,BYTE PTR [eax]
  418038:	pop    eax
  418039:	or     BYTE PTR [eax],al
  41803b:	add    BYTE PTR [esp+ebx*8+0x41],ch
  41803f:	add    BYTE PTR [ebx+0x58002a00],al
  418045:	or     BYTE PTR [eax],al
  418047:	add    BYTE PTR [ebx+ebx*8+0x41],dh
  41804b:	add    BYTE PTR [ebx+0x58002a00],al
  418051:	sub    BYTE PTR [eax],al
  418053:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418057:	add    BYTE PTR [ebx+0x58002a00],al
  41805d:	sub    BYTE PTR [eax],al
  41805f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418063:	add    BYTE PTR [ebx+0x58005a00],al
  418069:	or     BYTE PTR [eax],al
  41806b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41806f:	add    BYTE PTR [ebx+0x58005a00],al
  418075:	or     BYTE PTR [eax],al
  418077:	add    BYTE PTR [eax-0x7dffbe21],al
  41807d:	add    BYTE PTR ds:0x85800,ch
  418083:	add    al,cl
  418085:	fild   WORD PTR [ecx+0x0]
  418088:	add    BYTE PTR [eax],0x2d
  41808b:	add    BYTE PTR [eax+0x8],bl
  41808e:	add    BYTE PTR [eax],al
  418090:	or     al,0xdf
  418092:	inc    ecx
  418093:	add    BYTE PTR [edx+0x58002d00],al
  418099:	sub    BYTE PTR [eax],al
  41809b:	add    BYTE PTR [edi+ebx*8+0x41],ah
  41809f:	add    BYTE PTR [edx+0x58002d00],al
  4180a5:	sub    BYTE PTR [eax],al
  4180a7:	add    BYTE PTR [eax-0x7cffbe20],dh
  4180ad:	cmp    bl,BYTE PTR ds:0x83800
  4180b3:	add    BYTE PTR [edx+eiz*8+0x41],cl
  4180b7:	add    BYTE PTR [ebx+0x38001d3a],al
  4180bd:	or     BYTE PTR [eax],al
  4180bf:	add    BYTE PTR [eax+eiz*8+0x3a830041],ah
  4180c6:	sbb    eax,0x183800
  4180cb:	add    BYTE PTR [eax],dl
  4180cd:	loop   0x418110
  4180cf:	add    BYTE PTR [ebx+0x38001d3a],al
  4180d5:	sbb    BYTE PTR [eax],al
  4180d7:	add    BYTE PTR [ebx*8+0x820041],bl
  4180de:	pop    edx
  4180df:	add    BYTE PTR [eax],bl
  4180e1:	or     BYTE PTR [eax],al
  4180e3:	add    BYTE PTR [eax],bl
  4180e5:	fiadd  WORD PTR [ecx+0x0]
  4180e8:	add    BYTE PTR [eax],0x5a
  4180eb:	add    BYTE PTR [eax],bl
  4180ed:	or     BYTE PTR [eax],al
  4180ef:	add    BYTE PTR [edx+ebx*8+0x41],bl
  4180f3:	add    BYTE PTR [edx+0x18005a00],al
  4180f9:	sbb    BYTE PTR [eax],al
  4180fb:	add    al,cl
  4180fd:	fiadd  DWORD PTR [ecx+0x0]
  418100:	add    BYTE PTR [eax],0x5a
  418103:	add    BYTE PTR [eax],bl
  418105:	sbb    BYTE PTR [eax],al
  418107:	add    BYTE PTR [ebx*8+0x820041],bl
  41810e:	pop    ebx
  41810f:	add    BYTE PTR [eax],bh
  418111:	or     BYTE PTR [eax],al
  418113:	add    ah,bh
  418115:	fld    QWORD PTR [ecx+0x0]
  418118:	add    BYTE PTR [eax],0x5b
  41811b:	add    BYTE PTR [eax],bh
  41811d:	or     BYTE PTR [eax],al
  41811f:	add    BYTE PTR [edx+ebx*8+0x41],dl
  418123:	add    BYTE PTR [edx+0x38005b00],al
  418129:	sbb    BYTE PTR [eax],al
  41812b:	add    al,al
  41812d:	fiadd  DWORD PTR [ecx+0x0]
  418130:	add    BYTE PTR [eax],0x5b
  418133:	add    BYTE PTR [eax],bh
  418135:	sbb    BYTE PTR [eax],al
  418137:	add    BYTE PTR [ebx*8+0x38820041],bl
  41813e:	adc    eax,DWORD PTR [eax]
  418140:	cmp    BYTE PTR [eax],cl
  418142:	add    BYTE PTR [eax],al
  418144:	sbb    dh,bl
  418146:	inc    ecx
  418147:	add    BYTE PTR [edx+0x38001338],al
  41814d:	or     BYTE PTR [eax],al
  41814f:	add    BYTE PTR [edx+ebx*8+0x41],bl
  418153:	add    BYTE PTR [edx+0x38001338],al
  418159:	sbb    BYTE PTR [eax],al
  41815b:	add    al,cl
  41815d:	fiadd  DWORD PTR [ecx+0x0]
  418160:	cmp    BYTE PTR [eax],0x13
  418163:	add    BYTE PTR [eax],bh
  418165:	sbb    BYTE PTR [eax],al
  418167:	add    BYTE PTR [ebx*8+0x820041],bl
  41816e:	pop    edx
  41816f:	add    BYTE PTR [eax],bh
  418171:	or     BYTE PTR [eax],al
  418173:	add    ah,bh
  418175:	fld    QWORD PTR [ecx+0x0]
  418178:	add    BYTE PTR [eax],0x5a
  41817b:	add    BYTE PTR [eax],bh
  41817d:	or     BYTE PTR [eax],al
  41817f:	add    ah,ah
  418181:	fadd   QWORD PTR [ecx+0x0]
  418184:	add    BYTE PTR [eax],0x5a
  418187:	add    BYTE PTR [eax],bh
  418189:	sbb    BYTE PTR [eax],al
  41818b:	add    ah,dh
  41818d:	fld    QWORD PTR [ecx+0x0]
  418190:	add    BYTE PTR [eax],0x5a
  418193:	add    BYTE PTR [eax],bh
  418195:	sbb    BYTE PTR [eax],al
  418197:	add    BYTE PTR [ebx*8+0x820041],bl
  41819e:	out    0x0,al
  4181a0:	pop    eax
  4181a1:	or     BYTE PTR [eax],al
  4181a3:	add    ah,bh
  4181a5:	fld    QWORD PTR [ecx+0x0]
  4181a8:	add    BYTE PTR [eax],0xe6
  4181ab:	add    BYTE PTR [eax+0x8],bl
  4181ae:	add    BYTE PTR [eax],al
  4181b0:	in     al,0xdc
  4181b2:	inc    ecx
  4181b3:	add    BYTE PTR [edx+0x5800e600],al
  4181b9:	sbb    BYTE PTR [eax],al
  4181bb:	add    ah,dh
  4181bd:	fld    QWORD PTR [ecx+0x0]
  4181c0:	add    BYTE PTR [eax],0xe6
  4181c3:	add    BYTE PTR [eax+0x18],bl
  4181c6:	add    BYTE PTR [eax],al
  4181c8:	sbb    al,0xdd
  4181ca:	inc    ecx
  4181cb:	add    BYTE PTR [edx+0x18005b00],al
  4181d1:	or     BYTE PTR [eax],al
  4181d3:	add    ah,bh
  4181d5:	fld    QWORD PTR [ecx+0x0]
  4181d8:	add    BYTE PTR [eax],0x5b
  4181db:	add    BYTE PTR [eax],bl
  4181dd:	or     BYTE PTR [eax],al
  4181df:	add    BYTE PTR [edx+ebx*8+0x41],dl
  4181e3:	add    BYTE PTR [edx+0x18005b00],al
  4181e9:	sbb    BYTE PTR [eax],al
  4181eb:	add    al,al
  4181ed:	fiadd  DWORD PTR [ecx+0x0]
  4181f0:	add    BYTE PTR [eax],0x5b
  4181f3:	add    BYTE PTR [eax],bl
  4181f5:	sbb    BYTE PTR [eax],al
  4181f7:	add    BYTE PTR [ebx*8+0x820041],bl
  4181fe:	out    0x0,al
  418200:	js     0x41820a
  418202:	add    BYTE PTR [eax],al
  418204:	sbb    dh,bl
  418206:	inc    ecx
  418207:	add    BYTE PTR [edx+0x7800e600],al
  41820d:	or     BYTE PTR [eax],al
  41820f:	add    BYTE PTR [edx+ebx*8+0x41],bl
  418213:	add    BYTE PTR [edx+0x7800e600],al
  418219:	sbb    BYTE PTR [eax],al
  41821b:	add    al,cl
  41821d:	fiadd  DWORD PTR [ecx+0x0]
  418220:	add    BYTE PTR [eax],0xe6
  418223:	add    BYTE PTR [eax+0x18],bh
  418226:	add    BYTE PTR [eax],al
  418228:	sbb    al,0xdd
  41822a:	inc    ecx
  41822b:	add    BYTE PTR [edx+0x18002f00],al
  418231:	or     BYTE PTR [eax],al
  418233:	add    BYTE PTR [esi+ebx*8],dh
  418236:	inc    ecx
  418237:	add    BYTE PTR [edx+0x18002f00],al
  41823d:	or     BYTE PTR [eax],al
  41823f:	add    BYTE PTR [ebx*8+0x820041],bl
  418246:	das    
  418247:	add    BYTE PTR [eax],bh
  418249:	or     BYTE PTR [eax],al
  41824b:	add    BYTE PTR [eax],bl
  41824d:	fiadd  WORD PTR [ecx+0x0]
  418250:	add    BYTE PTR [eax],0x2f
  418253:	add    BYTE PTR [eax],bh
  418255:	or     BYTE PTR [eax],al
  418257:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41825b:	add    BYTE PTR [ebx-0x7fc3e00],al
  418261:	or     BYTE PTR [eax],al
  418263:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418267:	add    BYTE PTR [ebx-0x7fc3e00],al
  41826d:	or     BYTE PTR [eax],al
  41826f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418273:	add    BYTE PTR [ebx-0x27fc3e00],al
  418279:	or     BYTE PTR [eax],al
  41827b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41827f:	add    BYTE PTR [ebx-0x27fc3e00],al
  418285:	or     BYTE PTR [eax],al
  418287:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41828b:	add    BYTE PTR [ebx-0x67fc3e00],al
  418291:	or     BYTE PTR [eax],al
  418293:	add    ah,dh
  418295:	fild   DWORD PTR [ecx+0x0]
  418298:	add    DWORD PTR [eax],0xffffffc2
  41829b:	add    ebx,DWORD PTR [eax+0x38000008]
  4182a1:	fld    DWORD PTR [ecx+0x0]
  4182a4:	add    DWORD PTR [eax],0xffffffc2
  4182a7:	add    ebx,DWORD PTR [eax-0x3bffffe8]
  4182ad:	fld    DWORD PTR [ecx+0x0]
  4182b0:	add    DWORD PTR [eax],0xffffffc2
  4182b3:	add    ebx,DWORD PTR [eax+0x5c000018]
  4182b9:	fild   DWORD PTR [ecx+0x0]
  4182bc:	add    DWORD PTR [eax],0xffffffc2
  4182bf:	add    edi,DWORD PTR [eax-0x3ffffff8]
  4182c5:	fild   DWORD PTR [ecx+0x0]
  4182c8:	add    DWORD PTR [eax],0xffffffc2
  4182cb:	add    edi,DWORD PTR [eax+0x38000008]
  4182d1:	fld    DWORD PTR [ecx+0x0]
  4182d4:	add    DWORD PTR [eax],0xffffffc2
  4182d7:	add    edi,DWORD PTR [eax-0x6fffffe8]
  4182dd:	fld    DWORD PTR [ecx+0x0]
  4182e0:	add    DWORD PTR [eax],0xffffffc2
  4182e3:	add    edi,DWORD PTR [eax+0x5c000018]
  4182e9:	fild   DWORD PTR [ecx+0x0]
  4182ec:	add    DWORD PTR [eax],0xffffffc2
  4182ef:	adc    edi,eax
  4182f1:	or     BYTE PTR [eax],al
  4182f3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  4182f7:	add    BYTE PTR [ebx-0x7ec3e00],al
  4182fd:	or     BYTE PTR [eax],al
  4182ff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418303:	add    BYTE PTR [ebx-0x27ec3e00],al
  418309:	or     BYTE PTR [eax],al
  41830b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41830f:	add    BYTE PTR [ebx-0x27ec3e00],al
  418315:	or     BYTE PTR [eax],al
  418317:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41831b:	add    BYTE PTR [ebx-0x67ec3e00],al
  418321:	or     BYTE PTR [eax],al
  418323:	add    ah,dh
  418325:	fild   DWORD PTR [ecx+0x0]
  418328:	add    DWORD PTR [eax],0xffffffc2
  41832b:	adc    ebx,DWORD PTR [eax+0x38000008]
  418331:	fld    DWORD PTR [ecx+0x0]
  418334:	add    DWORD PTR [eax],0xffffffc2
  418337:	adc    ebx,DWORD PTR [eax-0x3bffffe8]
  41833d:	fld    DWORD PTR [ecx+0x0]
  418340:	add    DWORD PTR [eax],0xffffffc2
  418343:	adc    ebx,DWORD PTR [eax+0x5c000018]
  418349:	fild   DWORD PTR [ecx+0x0]
  41834c:	add    DWORD PTR [eax],0xffffffc2
  41834f:	adc    edi,DWORD PTR [eax-0x3ffffff8]
  418355:	fild   DWORD PTR [ecx+0x0]
  418358:	add    DWORD PTR [eax],0xffffffc2
  41835b:	adc    edi,DWORD PTR [eax+0x38000008]
  418361:	fld    DWORD PTR [ecx+0x0]
  418364:	add    DWORD PTR [eax],0xffffffc2
  418367:	adc    edi,DWORD PTR [eax-0x6fffffe8]
  41836d:	fld    DWORD PTR [ecx+0x0]
  418370:	add    DWORD PTR [eax],0xffffffc2
  418373:	adc    edi,DWORD PTR [eax+0x5c000018]
  418379:	fild   DWORD PTR [ecx+0x0]
  41837c:	add    DWORD PTR [eax],0xffffffc2
  41837f:	psubb  mm1,QWORD PTR [eax]
  418382:	add    BYTE PTR [eax],al
  418384:	ins    BYTE PTR es:[edi],dx
  418385:	fadd   QWORD PTR [ecx+0x0]
  418388:	add    DWORD PTR [eax],0xffffffc2
  41838b:	psubb  mm1,QWORD PTR [eax]
  41838e:	add    BYTE PTR [eax],al
  418390:	pop    esp
  418391:	fild   DWORD PTR [ecx+0x0]
  418394:	add    DWORD PTR [eax],0xffffffc2
  418397:	psubusb mm1,QWORD PTR [eax]
  41839a:	add    BYTE PTR [eax],al
  41839c:	push   esp
  41839d:	fadd   QWORD PTR [ecx+0x0]
  4183a0:	add    DWORD PTR [eax],0xffffffc2
  4183a3:	psubusb mm1,QWORD PTR [eax]
  4183a6:	add    BYTE PTR [eax],al
  4183a8:	pop    esp
  4183a9:	fild   DWORD PTR [ecx+0x0]
  4183ac:	add    DWORD PTR [eax],0xffffffc2
  4183af:	sets   BYTE PTR [eax]
  4183b2:	add    BYTE PTR [eax],al
  4183b4:	hlt    
  4183b5:	fild   DWORD PTR [ecx+0x0]
  4183b8:	add    DWORD PTR [eax],0xffffffc2
  4183bb:	sets   BYTE PTR [eax]
  4183be:	add    BYTE PTR [eax],al
  4183c0:	cmp    cl,bl
  4183c2:	inc    ecx
  4183c3:	add    BYTE PTR [ebx-0x67f03e00],al
  4183c9:	sbb    BYTE PTR [eax],al
  4183cb:	add    ah,al
  4183cd:	fld    DWORD PTR [ecx+0x0]
  4183d0:	add    DWORD PTR [eax],0xffffffc2
  4183d3:	sets   BYTE PTR [eax]
  4183d6:	add    BYTE PTR [eax],al
  4183d8:	pop    esp
  4183d9:	fild   DWORD PTR [ecx+0x0]
  4183dc:	add    DWORD PTR [eax],0xffffffc2
  4183df:	(bad)  
  4183e1:	or     BYTE PTR [eax],al
  4183e3:	add    al,al
  4183e5:	fild   DWORD PTR [ecx+0x0]
  4183e8:	add    DWORD PTR [eax],0xffffffc2
  4183eb:	(bad)  
  4183ed:	or     BYTE PTR [eax],al
  4183ef:	add    BYTE PTR [eax],bh
  4183f1:	fld    DWORD PTR [ecx+0x0]
  4183f4:	add    DWORD PTR [eax],0xffffffc2
  4183f7:	(bad)  
  4183f9:	sbb    BYTE PTR [eax],al
  4183fb:	add    BYTE PTR [eax-0x7cffbe27],dl
  418401:	add    dl,al
  418403:	(bad)  
  418405:	sbb    BYTE PTR [eax],al
  418407:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41840b:	add    BYTE PTR [ebx-0x7e03e00],al
  418411:	or     BYTE PTR [eax],al
  418413:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418417:	add    BYTE PTR [ebx-0x7e03e00],al
  41841d:	or     BYTE PTR [eax],al
  41841f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418423:	add    BYTE PTR [ebx-0x27e03e00],al
  418429:	or     BYTE PTR [eax],al
  41842b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41842f:	add    BYTE PTR [ebx-0x27e03e00],al
  418435:	or     BYTE PTR [eax],al
  418437:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41843b:	add    BYTE PTR [ebx-0x67e03e00],al
  418441:	or     BYTE PTR [eax],al
  418443:	add    ah,dh
  418445:	fild   DWORD PTR [ecx+0x0]
  418448:	add    DWORD PTR [eax],0xffffffc2
  41844b:	pop    ds
  41844c:	cwde   
  41844d:	or     BYTE PTR [eax],al
  41844f:	add    BYTE PTR [eax],bh
  418451:	fld    DWORD PTR [ecx+0x0]
  418454:	add    DWORD PTR [eax],0xffffffc2
  418457:	pop    ds
  418458:	cwde   
  418459:	sbb    BYTE PTR [eax],al
  41845b:	add    ah,al
  41845d:	fld    DWORD PTR [ecx+0x0]
  418460:	add    DWORD PTR [eax],0xffffffc2
  418463:	pop    ds
  418464:	cwde   
  418465:	sbb    BYTE PTR [eax],al
  418467:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41846b:	add    BYTE PTR [ebx-0x47e03e00],al
  418471:	or     BYTE PTR [eax],al
  418473:	add    al,al
  418475:	fild   DWORD PTR [ecx+0x0]
  418478:	add    DWORD PTR [eax],0xffffffc2
  41847b:	pop    ds
  41847c:	mov    eax,0x38000008
  418481:	fld    DWORD PTR [ecx+0x0]
  418484:	add    DWORD PTR [eax],0xffffffc2
  418487:	pop    ds
  418488:	mov    eax,0x90000018
  41848d:	fld    DWORD PTR [ecx+0x0]
  418490:	add    DWORD PTR [eax],0xffffffc2
  418493:	pop    ds
  418494:	mov    eax,0x50000018
  418499:	fild   DWORD PTR [ecx+0x0]
  41849c:	test   BYTE PTR [eax],al
  41849e:	ret    0x7800
  4184a1:	or     BYTE PTR [eax],al
  4184a3:	add    BYTE PTR [eax-0x24],ah
  4184a6:	inc    ecx
  4184a7:	add    BYTE PTR [eax+eax*1+0x87800c2],al
  4184ae:	add    BYTE PTR [eax],al
  4184b0:	push   eax
  4184b1:	fild   DWORD PTR [ecx+0x0]
  4184b4:	test   BYTE PTR [eax],al
  4184b6:	ret    0x5800
  4184b9:	or     BYTE PTR [eax],al
  4184bb:	add    BYTE PTR [eax-0x24],cl
  4184be:	inc    ecx
  4184bf:	add    BYTE PTR [eax+eax*1+0x85800c2],al
  4184c6:	add    BYTE PTR [eax],al
  4184c8:	push   eax
  4184c9:	fild   DWORD PTR [ecx+0x0]
  4184cc:	test   BYTE PTR [eax],al
  4184ce:	ret    0x1800
  4184d1:	or     BYTE PTR [eax],al
  4184d3:	add    al,ch
  4184d5:	fild   DWORD PTR [ecx+0x0]
  4184d8:	test   BYTE PTR [eax],al
  4184da:	ret    0x1800
  4184dd:	or     BYTE PTR [eax],al
  4184df:	add    BYTE PTR [ecx+ebx*8],ch
  4184e2:	inc    ecx
  4184e3:	add    BYTE PTR [eax+eax*1+0x181800c2],al
  4184ea:	add    BYTE PTR [eax],al
  4184ec:	mov    eax,0x840041d9
  4184f1:	add    dl,al
  4184f3:	add    BYTE PTR [eax],bl
  4184f5:	sbb    BYTE PTR [eax],al
  4184f7:	add    BYTE PTR [eax-0x25],dl
  4184fa:	inc    ecx
  4184fb:	add    BYTE PTR [eax+eax*1+0x83800c2],al
  418502:	add    BYTE PTR [eax],al
  418504:	mov    ah,0xdb
  418506:	inc    ecx
  418507:	add    BYTE PTR [eax+eax*1+0x83800c2],al
  41850e:	add    BYTE PTR [eax],al
  418510:	sub    al,0xd9
  418512:	inc    ecx
  418513:	add    BYTE PTR [eax+eax*1+0x183800c2],al
  41851a:	add    BYTE PTR [eax],al
  41851c:	test   cl,bl
  41851e:	inc    ecx
  41851f:	add    BYTE PTR [eax+eax*1+0x183800c2],al
  418526:	add    BYTE PTR [eax],al
  418528:	pop    esp
  418529:	fild   DWORD PTR [ecx+0x0]
  41852c:	add    DWORD PTR [eax],0xffffffc2
  41852f:	pop    es
  418530:	clc    
  418531:	or     BYTE PTR [eax],al
  418533:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418537:	add    BYTE PTR [ebx-0x7f83e00],al
  41853d:	or     BYTE PTR [eax],al
  41853f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418543:	add    BYTE PTR [ebx-0x27f83e00],al
  418549:	or     BYTE PTR [eax],al
  41854b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41854f:	add    BYTE PTR [ebx-0x27f83e00],al
  418555:	or     BYTE PTR [eax],al
  418557:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41855b:	add    BYTE PTR [ebx-0x67f83e00],al
  418561:	or     BYTE PTR [eax],al
  418563:	add    ah,dh
  418565:	fild   DWORD PTR [ecx+0x0]
  418568:	add    DWORD PTR [eax],0xffffffc2
  41856b:	pop    es
  41856c:	cwde   
  41856d:	or     BYTE PTR [eax],al
  41856f:	add    BYTE PTR [eax],bh
  418571:	fld    DWORD PTR [ecx+0x0]
  418574:	add    DWORD PTR [eax],0xffffffc2
  418577:	pop    es
  418578:	cwde   
  418579:	sbb    BYTE PTR [eax],al
  41857b:	add    ah,al
  41857d:	fld    DWORD PTR [ecx+0x0]
  418580:	add    DWORD PTR [eax],0xffffffc2
  418583:	pop    es
  418584:	cwde   
  418585:	sbb    BYTE PTR [eax],al
  418587:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41858b:	add    BYTE PTR [ebx-0x47f83e00],al
  418591:	or     BYTE PTR [eax],al
  418593:	add    al,al
  418595:	fild   DWORD PTR [ecx+0x0]
  418598:	add    DWORD PTR [eax],0xffffffc2
  41859b:	pop    es
  41859c:	mov    eax,0x38000008
  4185a1:	fld    DWORD PTR [ecx+0x0]
  4185a4:	add    DWORD PTR [eax],0xffffffc2
  4185a7:	pop    es
  4185a8:	mov    eax,0x90000018
  4185ad:	fld    DWORD PTR [ecx+0x0]
  4185b0:	add    DWORD PTR [eax],0xffffffc2
  4185b3:	pop    es
  4185b4:	mov    eax,0x5c000018
  4185b9:	fild   DWORD PTR [ecx+0x0]
  4185bc:	add    DWORD PTR [eax],0xffffffc2
  4185bf:	pop    ss
  4185c0:	clc    
  4185c1:	or     BYTE PTR [eax],al
  4185c3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  4185c7:	add    BYTE PTR [ebx-0x7e83e00],al
  4185cd:	or     BYTE PTR [eax],al
  4185cf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4185d3:	add    BYTE PTR [ebx-0x27e83e00],al
  4185d9:	or     BYTE PTR [eax],al
  4185db:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4185df:	add    BYTE PTR [ebx-0x27e83e00],al
  4185e5:	or     BYTE PTR [eax],al
  4185e7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4185eb:	add    BYTE PTR [ebx-0x67e83e00],al
  4185f1:	or     BYTE PTR [eax],al
  4185f3:	add    ah,dh
  4185f5:	fild   DWORD PTR [ecx+0x0]
  4185f8:	add    DWORD PTR [eax],0xffffffc2
  4185fb:	pop    ss
  4185fc:	cwde   
  4185fd:	or     BYTE PTR [eax],al
  4185ff:	add    BYTE PTR [eax],bh
  418601:	fld    DWORD PTR [ecx+0x0]
  418604:	add    DWORD PTR [eax],0xffffffc2
  418607:	pop    ss
  418608:	cwde   
  418609:	sbb    BYTE PTR [eax],al
  41860b:	add    ah,al
  41860d:	fld    DWORD PTR [ecx+0x0]
  418610:	add    DWORD PTR [eax],0xffffffc2
  418613:	pop    ss
  418614:	cwde   
  418615:	sbb    BYTE PTR [eax],al
  418617:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41861b:	add    BYTE PTR [ebx-0x47e83e00],al
  418621:	or     BYTE PTR [eax],al
  418623:	add    al,al
  418625:	fild   DWORD PTR [ecx+0x0]
  418628:	add    DWORD PTR [eax],0xffffffc2
  41862b:	pop    ss
  41862c:	mov    eax,0x38000008
  418631:	fld    DWORD PTR [ecx+0x0]
  418634:	add    DWORD PTR [eax],0xffffffc2
  418637:	pop    ss
  418638:	mov    eax,0x90000018
  41863d:	fld    DWORD PTR [ecx+0x0]
  418640:	add    DWORD PTR [eax],0xffffffc2
  418643:	pop    ss
  418644:	mov    eax,0x5c000018
  418649:	fild   DWORD PTR [ecx+0x0]
  41864c:	add    DWORD PTR [eax],0xffffffc2
  41864f:	add    eax,0x8f8
  418654:	ins    BYTE PTR es:[edi],dx
  418655:	fadd   QWORD PTR [ecx+0x0]
  418658:	add    DWORD PTR [eax],0xffffffc2
  41865b:	add    eax,0x8f8
  418660:	pop    esp
  418661:	fild   DWORD PTR [ecx+0x0]
  418664:	add    DWORD PTR [eax],0xffffffc2
  418667:	add    eax,0x8d8
  41866c:	push   esp
  41866d:	fadd   QWORD PTR [ecx+0x0]
  418670:	add    DWORD PTR [eax],0xffffffc2
  418673:	add    eax,0x8d8
  418678:	pop    esp
  418679:	fild   DWORD PTR [ecx+0x0]
  41867c:	add    DWORD PTR [eax],0xffffffc2
  41867f:	add    eax,0x898
  418684:	hlt    
  418685:	fild   DWORD PTR [ecx+0x0]
  418688:	add    DWORD PTR [eax],0xffffffc2
  41868b:	add    eax,0x898
  418690:	cmp    cl,bl
  418692:	inc    ecx
  418693:	add    BYTE PTR [ebx-0x67fa3e00],al
  418699:	sbb    BYTE PTR [eax],al
  41869b:	add    ah,al
  41869d:	fld    DWORD PTR [ecx+0x0]
  4186a0:	add    DWORD PTR [eax],0xffffffc2
  4186a3:	add    eax,0x1898
  4186a8:	pop    esp
  4186a9:	fild   DWORD PTR [ecx+0x0]
  4186ac:	add    DWORD PTR [eax],0xffffffc2
  4186af:	add    eax,0x8b8
  4186b4:	rcr    bl,0x41
  4186b7:	add    BYTE PTR [ebx-0x47fa3e00],al
  4186bd:	or     BYTE PTR [eax],al
  4186bf:	add    BYTE PTR [eax],bh
  4186c1:	fld    DWORD PTR [ecx+0x0]
  4186c4:	add    DWORD PTR [eax],0xffffffc2
  4186c7:	add    eax,0x18b8
  4186cc:	nop
  4186cd:	fld    DWORD PTR [ecx+0x0]
  4186d0:	add    DWORD PTR [eax],0xffffffc2
  4186d3:	add    eax,0x18b8
  4186d8:	pop    esp
  4186d9:	fild   DWORD PTR [ecx+0x0]
  4186dc:	add    DWORD PTR [eax],0xffffffc2
  4186df:	adc    eax,0x8f8
  4186e4:	ins    BYTE PTR es:[edi],dx
  4186e5:	fadd   QWORD PTR [ecx+0x0]
  4186e8:	add    DWORD PTR [eax],0xffffffc2
  4186eb:	adc    eax,0x8f8
  4186f0:	pop    esp
  4186f1:	fild   DWORD PTR [ecx+0x0]
  4186f4:	add    DWORD PTR [eax],0xffffffc2
  4186f7:	adc    eax,0x8d8
  4186fc:	push   esp
  4186fd:	fadd   QWORD PTR [ecx+0x0]
  418700:	add    DWORD PTR [eax],0xffffffc2
  418703:	adc    eax,0x8d8
  418708:	pop    esp
  418709:	fild   DWORD PTR [ecx+0x0]
  41870c:	add    DWORD PTR [eax],0xffffffc2
  41870f:	adc    eax,0x898
  418714:	hlt    
  418715:	fild   DWORD PTR [ecx+0x0]
  418718:	add    DWORD PTR [eax],0xffffffc2
  41871b:	adc    eax,0x898
  418720:	cmp    cl,bl
  418722:	inc    ecx
  418723:	add    BYTE PTR [ebx-0x67ea3e00],al
  418729:	sbb    BYTE PTR [eax],al
  41872b:	add    ah,al
  41872d:	fld    DWORD PTR [ecx+0x0]
  418730:	add    DWORD PTR [eax],0xffffffc2
  418733:	adc    eax,0x1898
  418738:	pop    esp
  418739:	fild   DWORD PTR [ecx+0x0]
  41873c:	add    DWORD PTR [eax],0xffffffc2
  41873f:	adc    eax,0x8b8
  418744:	rcr    bl,0x41
  418747:	add    BYTE PTR [ebx-0x47ea3e00],al
  41874d:	or     BYTE PTR [eax],al
  41874f:	add    BYTE PTR [eax],bh
  418751:	fld    DWORD PTR [ecx+0x0]
  418754:	add    DWORD PTR [eax],0xffffffc2
  418757:	adc    eax,0x18b8
  41875c:	nop
  41875d:	fld    DWORD PTR [ecx+0x0]
  418760:	add    DWORD PTR [eax],0xffffffc2
  418763:	adc    eax,0x18b8
  418768:	pop    esp
  418769:	fild   DWORD PTR [ecx+0x0]
  41876c:	add    DWORD PTR [eax],0xffffffc2
  41876f:	push   es
  418770:	clc    
  418771:	or     BYTE PTR [eax],al
  418773:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418777:	add    BYTE PTR [ebx-0x7f93e00],al
  41877d:	or     BYTE PTR [eax],al
  41877f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418783:	add    BYTE PTR [ebx-0x27f93e00],al
  418789:	or     BYTE PTR [eax],al
  41878b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41878f:	add    BYTE PTR [ebx-0x27f93e00],al
  418795:	or     BYTE PTR [eax],al
  418797:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41879b:	add    BYTE PTR [ebx-0x67f93e00],al
  4187a1:	or     BYTE PTR [eax],al
  4187a3:	add    ah,dh
  4187a5:	fild   DWORD PTR [ecx+0x0]
  4187a8:	add    DWORD PTR [eax],0xffffffc2
  4187ab:	push   es
  4187ac:	cwde   
  4187ad:	or     BYTE PTR [eax],al
  4187af:	add    BYTE PTR [eax],bh
  4187b1:	fld    DWORD PTR [ecx+0x0]
  4187b4:	add    DWORD PTR [eax],0xffffffc2
  4187b7:	push   es
  4187b8:	cwde   
  4187b9:	sbb    BYTE PTR [eax],al
  4187bb:	add    ah,al
  4187bd:	fld    DWORD PTR [ecx+0x0]
  4187c0:	add    DWORD PTR [eax],0xffffffc2
  4187c3:	push   es
  4187c4:	cwde   
  4187c5:	sbb    BYTE PTR [eax],al
  4187c7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4187cb:	add    BYTE PTR [ebx-0x47f93e00],al
  4187d1:	or     BYTE PTR [eax],al
  4187d3:	add    al,al
  4187d5:	fild   DWORD PTR [ecx+0x0]
  4187d8:	add    DWORD PTR [eax],0xffffffc2
  4187db:	push   es
  4187dc:	mov    eax,0x38000008
  4187e1:	fld    DWORD PTR [ecx+0x0]
  4187e4:	add    DWORD PTR [eax],0xffffffc2
  4187e7:	push   es
  4187e8:	mov    eax,0x90000018
  4187ed:	fld    DWORD PTR [ecx+0x0]
  4187f0:	add    DWORD PTR [eax],0xffffffc2
  4187f3:	push   es
  4187f4:	mov    eax,0x5c000018
  4187f9:	fild   DWORD PTR [ecx+0x0]
  4187fc:	add    DWORD PTR [eax],0xffffffc2
  4187ff:	push   ss
  418800:	clc    
  418801:	or     BYTE PTR [eax],al
  418803:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418807:	add    BYTE PTR [ebx-0x7e93e00],al
  41880d:	or     BYTE PTR [eax],al
  41880f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418813:	add    BYTE PTR [ebx-0x27e93e00],al
  418819:	or     BYTE PTR [eax],al
  41881b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41881f:	add    BYTE PTR [ebx-0x27e93e00],al
  418825:	or     BYTE PTR [eax],al
  418827:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41882b:	add    BYTE PTR [ebx-0x67e93e00],al
  418831:	or     BYTE PTR [eax],al
  418833:	add    ah,dh
  418835:	fild   DWORD PTR [ecx+0x0]
  418838:	add    DWORD PTR [eax],0xffffffc2
  41883b:	push   ss
  41883c:	cwde   
  41883d:	or     BYTE PTR [eax],al
  41883f:	add    BYTE PTR [eax],bh
  418841:	fld    DWORD PTR [ecx+0x0]
  418844:	add    DWORD PTR [eax],0xffffffc2
  418847:	push   ss
  418848:	cwde   
  418849:	sbb    BYTE PTR [eax],al
  41884b:	add    ah,al
  41884d:	fld    DWORD PTR [ecx+0x0]
  418850:	add    DWORD PTR [eax],0xffffffc2
  418853:	push   ss
  418854:	cwde   
  418855:	sbb    BYTE PTR [eax],al
  418857:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41885b:	add    BYTE PTR [ebx-0x47e93e00],al
  418861:	or     BYTE PTR [eax],al
  418863:	add    al,al
  418865:	fild   DWORD PTR [ecx+0x0]
  418868:	add    DWORD PTR [eax],0xffffffc2
  41886b:	push   ss
  41886c:	mov    eax,0x38000008
  418871:	fld    DWORD PTR [ecx+0x0]
  418874:	add    DWORD PTR [eax],0xffffffc2
  418877:	push   ss
  418878:	mov    eax,0x90000018
  41887d:	fld    DWORD PTR [ecx+0x0]
  418880:	add    DWORD PTR [eax],0xffffffc2
  418883:	push   ss
  418884:	mov    eax,0x5c000018
  418889:	fild   DWORD PTR [ecx+0x0]
  41888c:	add    DWORD PTR [eax],0xffffffc2
  41888f:	or     bh,al
  418891:	or     BYTE PTR [eax],al
  418893:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418897:	add    BYTE PTR [ebx-0x7f53e00],al
  41889d:	or     BYTE PTR [eax],al
  41889f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4188a3:	add    BYTE PTR [ebx-0x27f53e00],al
  4188a9:	or     BYTE PTR [eax],al
  4188ab:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4188af:	add    BYTE PTR [ebx-0x27f53e00],al
  4188b5:	or     BYTE PTR [eax],al
  4188b7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4188bb:	add    BYTE PTR [ebx-0x67f53e00],al
  4188c1:	or     BYTE PTR [eax],al
  4188c3:	add    ah,dh
  4188c5:	fild   DWORD PTR [ecx+0x0]
  4188c8:	add    DWORD PTR [eax],0xffffffc2
  4188cb:	or     bl,BYTE PTR [eax+0x38000008]
  4188d1:	fld    DWORD PTR [ecx+0x0]
  4188d4:	add    DWORD PTR [eax],0xffffffc2
  4188d7:	or     bl,BYTE PTR [eax-0x3bffffe8]
  4188dd:	fld    DWORD PTR [ecx+0x0]
  4188e0:	add    DWORD PTR [eax],0xffffffc2
  4188e3:	or     bl,BYTE PTR [eax+0x5c000018]
  4188e9:	fild   DWORD PTR [ecx+0x0]
  4188ec:	add    DWORD PTR [eax],0xffffffc2
  4188ef:	or     bh,BYTE PTR [eax-0x3ffffff8]
  4188f5:	fild   DWORD PTR [ecx+0x0]
  4188f8:	add    DWORD PTR [eax],0xffffffc2
  4188fb:	or     bh,BYTE PTR [eax+0x38000008]
  418901:	fld    DWORD PTR [ecx+0x0]
  418904:	add    DWORD PTR [eax],0xffffffc2
  418907:	or     bh,BYTE PTR [eax-0x6fffffe8]
  41890d:	fld    DWORD PTR [ecx+0x0]
  418910:	add    DWORD PTR [eax],0xffffffc2
  418913:	or     bh,BYTE PTR [eax+0x5c000018]
  418919:	fild   DWORD PTR [ecx+0x0]
  41891c:	add    DWORD PTR [eax],0xffffffc2
  41891f:	sbb    bh,al
  418921:	or     BYTE PTR [eax],al
  418923:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418927:	add    BYTE PTR [ebx-0x7e53e00],al
  41892d:	or     BYTE PTR [eax],al
  41892f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418933:	add    BYTE PTR [ebx-0x27e53e00],al
  418939:	or     BYTE PTR [eax],al
  41893b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41893f:	add    BYTE PTR [ebx-0x27e53e00],al
  418945:	or     BYTE PTR [eax],al
  418947:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41894b:	add    BYTE PTR [ebx-0x67e53e00],al
  418951:	or     BYTE PTR [eax],al
  418953:	add    ah,dh
  418955:	fild   DWORD PTR [ecx+0x0]
  418958:	add    DWORD PTR [eax],0xffffffc2
  41895b:	sbb    bl,BYTE PTR [eax+0x38000008]
  418961:	fld    DWORD PTR [ecx+0x0]
  418964:	add    DWORD PTR [eax],0xffffffc2
  418967:	sbb    bl,BYTE PTR [eax-0x3bffffe8]
  41896d:	fld    DWORD PTR [ecx+0x0]
  418970:	add    DWORD PTR [eax],0xffffffc2
  418973:	sbb    bl,BYTE PTR [eax+0x5c000018]
  418979:	fild   DWORD PTR [ecx+0x0]
  41897c:	add    DWORD PTR [eax],0xffffffc2
  41897f:	sbb    bh,BYTE PTR [eax-0x3ffffff8]
  418985:	fild   DWORD PTR [ecx+0x0]
  418988:	add    DWORD PTR [eax],0xffffffc2
  41898b:	sbb    bh,BYTE PTR [eax+0x38000008]
  418991:	fld    DWORD PTR [ecx+0x0]
  418994:	add    DWORD PTR [eax],0xffffffc2
  418997:	sbb    bh,BYTE PTR [eax-0x6fffffe8]
  41899d:	fld    DWORD PTR [ecx+0x0]
  4189a0:	add    DWORD PTR [eax],0xffffffc2
  4189a3:	sbb    bh,BYTE PTR [eax+0x5c000018]
  4189a9:	fild   DWORD PTR [ecx+0x0]
  4189ac:	add    DWORD PTR [eax],0xffffffc2
  4189af:	or     eax,edi
  4189b1:	or     BYTE PTR [eax],al
  4189b3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  4189b7:	add    BYTE PTR [ebx-0x7f63e00],al
  4189bd:	or     BYTE PTR [eax],al
  4189bf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4189c3:	add    BYTE PTR [ebx-0x27f63e00],al
  4189c9:	or     BYTE PTR [eax],al
  4189cb:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4189cf:	add    BYTE PTR [ebx-0x27f63e00],al
  4189d5:	or     BYTE PTR [eax],al
  4189d7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4189db:	add    BYTE PTR [ebx-0x67f63e00],al
  4189e1:	or     BYTE PTR [eax],al
  4189e3:	add    ah,dh
  4189e5:	fild   DWORD PTR [ecx+0x0]
  4189e8:	add    DWORD PTR [eax],0xffffffc2
  4189eb:	or     DWORD PTR [eax+0x38000008],ebx
  4189f1:	fld    DWORD PTR [ecx+0x0]
  4189f4:	add    DWORD PTR [eax],0xffffffc2
  4189f7:	or     DWORD PTR [eax-0x3bffffe8],ebx
  4189fd:	fld    DWORD PTR [ecx+0x0]
  418a00:	add    DWORD PTR [eax],0xffffffc2
  418a03:	or     DWORD PTR [eax+0x5c000018],ebx
  418a09:	fild   DWORD PTR [ecx+0x0]
  418a0c:	add    DWORD PTR [eax],0xffffffc2
  418a0f:	or     DWORD PTR [eax-0x3ffffff8],edi
  418a15:	fild   DWORD PTR [ecx+0x0]
  418a18:	add    DWORD PTR [eax],0xffffffc2
  418a1b:	or     DWORD PTR [eax+0x38000008],edi
  418a21:	fld    DWORD PTR [ecx+0x0]
  418a24:	add    DWORD PTR [eax],0xffffffc2
  418a27:	or     DWORD PTR [eax-0x6fffffe8],edi
  418a2d:	fld    DWORD PTR [ecx+0x0]
  418a30:	add    DWORD PTR [eax],0xffffffc2
  418a33:	or     DWORD PTR [eax+0x5c000018],edi
  418a39:	fild   DWORD PTR [ecx+0x0]
  418a3c:	add    DWORD PTR [eax],0xffffffc2
  418a3f:	sbb    eax,edi
  418a41:	or     BYTE PTR [eax],al
  418a43:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418a47:	add    BYTE PTR [ebx-0x7e63e00],al
  418a4d:	or     BYTE PTR [eax],al
  418a4f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418a53:	add    BYTE PTR [ebx-0x27e63e00],al
  418a59:	or     BYTE PTR [eax],al
  418a5b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418a5f:	add    BYTE PTR [ebx-0x27e63e00],al
  418a65:	or     BYTE PTR [eax],al
  418a67:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418a6b:	add    BYTE PTR [ebx-0x67e63e00],al
  418a71:	or     BYTE PTR [eax],al
  418a73:	add    ah,dh
  418a75:	fild   DWORD PTR [ecx+0x0]
  418a78:	add    DWORD PTR [eax],0xffffffc2
  418a7b:	sbb    DWORD PTR [eax+0x38000008],ebx
  418a81:	fld    DWORD PTR [ecx+0x0]
  418a84:	add    DWORD PTR [eax],0xffffffc2
  418a87:	sbb    DWORD PTR [eax-0x3bffffe8],ebx
  418a8d:	fld    DWORD PTR [ecx+0x0]
  418a90:	add    DWORD PTR [eax],0xffffffc2
  418a93:	sbb    DWORD PTR [eax+0x5c000018],ebx
  418a99:	fild   DWORD PTR [ecx+0x0]
  418a9c:	add    DWORD PTR [eax],0xffffffc2
  418a9f:	sbb    DWORD PTR [eax-0x3ffffff8],edi
  418aa5:	fild   DWORD PTR [ecx+0x0]
  418aa8:	add    DWORD PTR [eax],0xffffffc2
  418aab:	sbb    DWORD PTR [eax+0x38000008],edi
  418ab1:	fld    DWORD PTR [ecx+0x0]
  418ab4:	add    DWORD PTR [eax],0xffffffc2
  418ab7:	sbb    DWORD PTR [eax-0x6fffffe8],edi
  418abd:	fld    DWORD PTR [ecx+0x0]
  418ac0:	add    DWORD PTR [eax],0xffffffc2
  418ac3:	sbb    DWORD PTR [eax+0x5c000018],edi
  418ac9:	fild   DWORD PTR [ecx+0x0]
  418acc:	add    DWORD PTR [eax],0xffffffc2
  418acf:	add    al,0xf8
  418ad1:	or     BYTE PTR [eax],al
  418ad3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418ad7:	add    BYTE PTR [ebx-0x7fb3e00],al
  418add:	or     BYTE PTR [eax],al
  418adf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418ae3:	add    BYTE PTR [ebx-0x27fb3e00],al
  418ae9:	or     BYTE PTR [eax],al
  418aeb:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418aef:	add    BYTE PTR [ebx-0x27fb3e00],al
  418af5:	or     BYTE PTR [eax],al
  418af7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418afb:	add    BYTE PTR [ebx-0x67fb3e00],al
  418b01:	or     BYTE PTR [eax],al
  418b03:	add    ah,dh
  418b05:	fild   DWORD PTR [ecx+0x0]
  418b08:	add    DWORD PTR [eax],0xffffffc2
  418b0b:	add    al,0x98
  418b0d:	or     BYTE PTR [eax],al
  418b0f:	add    BYTE PTR [eax],bh
  418b11:	fld    DWORD PTR [ecx+0x0]
  418b14:	add    DWORD PTR [eax],0xffffffc2
  418b17:	add    al,0x98
  418b19:	sbb    BYTE PTR [eax],al
  418b1b:	add    ah,al
  418b1d:	fld    DWORD PTR [ecx+0x0]
  418b20:	add    DWORD PTR [eax],0xffffffc2
  418b23:	add    al,0x98
  418b25:	sbb    BYTE PTR [eax],al
  418b27:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418b2b:	add    BYTE PTR [ebx-0x47fb3e00],al
  418b31:	or     BYTE PTR [eax],al
  418b33:	add    al,al
  418b35:	fild   DWORD PTR [ecx+0x0]
  418b38:	add    DWORD PTR [eax],0xffffffc2
  418b3b:	add    al,0xb8
  418b3d:	or     BYTE PTR [eax],al
  418b3f:	add    BYTE PTR [eax],bh
  418b41:	fld    DWORD PTR [ecx+0x0]
  418b44:	add    DWORD PTR [eax],0xffffffc2
  418b47:	add    al,0xb8
  418b49:	sbb    BYTE PTR [eax],al
  418b4b:	add    BYTE PTR [eax-0x7cffbe27],dl
  418b51:	add    dl,al
  418b53:	add    al,0xb8
  418b55:	sbb    BYTE PTR [eax],al
  418b57:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418b5b:	add    BYTE PTR [ebx-0x7eb3e00],al
  418b61:	or     BYTE PTR [eax],al
  418b63:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418b67:	add    BYTE PTR [ebx-0x7eb3e00],al
  418b6d:	or     BYTE PTR [eax],al
  418b6f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418b73:	add    BYTE PTR [ebx-0x27eb3e00],al
  418b79:	or     BYTE PTR [eax],al
  418b7b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418b7f:	add    BYTE PTR [ebx-0x27eb3e00],al
  418b85:	or     BYTE PTR [eax],al
  418b87:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418b8b:	add    BYTE PTR [ebx-0x67eb3e00],al
  418b91:	or     BYTE PTR [eax],al
  418b93:	add    ah,dh
  418b95:	fild   DWORD PTR [ecx+0x0]
  418b98:	add    DWORD PTR [eax],0xffffffc2
  418b9b:	adc    al,0x98
  418b9d:	or     BYTE PTR [eax],al
  418b9f:	add    BYTE PTR [eax],bh
  418ba1:	fld    DWORD PTR [ecx+0x0]
  418ba4:	add    DWORD PTR [eax],0xffffffc2
  418ba7:	adc    al,0x98
  418ba9:	sbb    BYTE PTR [eax],al
  418bab:	add    ah,al
  418bad:	fld    DWORD PTR [ecx+0x0]
  418bb0:	add    DWORD PTR [eax],0xffffffc2
  418bb3:	adc    al,0x98
  418bb5:	sbb    BYTE PTR [eax],al
  418bb7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418bbb:	add    BYTE PTR [ebx-0x47eb3e00],al
  418bc1:	or     BYTE PTR [eax],al
  418bc3:	add    al,al
  418bc5:	fild   DWORD PTR [ecx+0x0]
  418bc8:	add    DWORD PTR [eax],0xffffffc2
  418bcb:	adc    al,0xb8
  418bcd:	or     BYTE PTR [eax],al
  418bcf:	add    BYTE PTR [eax],bh
  418bd1:	fld    DWORD PTR [ecx+0x0]
  418bd4:	add    DWORD PTR [eax],0xffffffc2
  418bd7:	adc    al,0xb8
  418bd9:	sbb    BYTE PTR [eax],al
  418bdb:	add    BYTE PTR [eax-0x7cffbe27],dl
  418be1:	add    dl,al
  418be3:	adc    al,0xb8
  418be5:	sbb    BYTE PTR [eax],al
  418be7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418beb:	add    BYTE PTR [ebx-0x7e33e00],al
  418bf1:	or     BYTE PTR [eax],al
  418bf3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418bf7:	add    BYTE PTR [ebx-0x7e33e00],al
  418bfd:	or     BYTE PTR [eax],al
  418bff:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418c03:	add    BYTE PTR [ebx-0x27e33e00],al
  418c09:	or     BYTE PTR [eax],al
  418c0b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418c0f:	add    BYTE PTR [ebx-0x27e33e00],al
  418c15:	or     BYTE PTR [eax],al
  418c17:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418c1b:	add    BYTE PTR [ebx-0x67e33e00],al
  418c21:	or     BYTE PTR [eax],al
  418c23:	add    ah,dh
  418c25:	fild   DWORD PTR [ecx+0x0]
  418c28:	add    DWORD PTR [eax],0xffffffc2
  418c2b:	sbb    al,0x98
  418c2d:	or     BYTE PTR [eax],al
  418c2f:	add    BYTE PTR [eax],bh
  418c31:	fld    DWORD PTR [ecx+0x0]
  418c34:	add    DWORD PTR [eax],0xffffffc2
  418c37:	sbb    al,0x98
  418c39:	sbb    BYTE PTR [eax],al
  418c3b:	add    ah,al
  418c3d:	fld    DWORD PTR [ecx+0x0]
  418c40:	add    DWORD PTR [eax],0xffffffc2
  418c43:	sbb    al,0x98
  418c45:	sbb    BYTE PTR [eax],al
  418c47:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418c4b:	add    BYTE PTR [ebx-0x47e33e00],al
  418c51:	or     BYTE PTR [eax],al
  418c53:	add    al,al
  418c55:	fild   DWORD PTR [ecx+0x0]
  418c58:	add    DWORD PTR [eax],0xffffffc2
  418c5b:	sbb    al,0xb8
  418c5d:	or     BYTE PTR [eax],al
  418c5f:	add    BYTE PTR [eax],bh
  418c61:	fld    DWORD PTR [ecx+0x0]
  418c64:	add    DWORD PTR [eax],0xffffffc2
  418c67:	sbb    al,0xb8
  418c69:	sbb    BYTE PTR [eax],al
  418c6b:	add    BYTE PTR [eax-0x7cffbe27],dl
  418c71:	add    dl,al
  418c73:	sbb    al,0xb8
  418c75:	sbb    BYTE PTR [eax],al
  418c77:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418c7b:	add    BYTE PTR [ebx-0x7f33e00],al
  418c81:	or     BYTE PTR [eax],al
  418c83:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418c87:	add    BYTE PTR [ebx-0x7f33e00],al
  418c8d:	or     BYTE PTR [eax],al
  418c8f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418c93:	add    BYTE PTR [ebx-0x27f33e00],al
  418c99:	or     BYTE PTR [eax],al
  418c9b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418c9f:	add    BYTE PTR [ebx-0x27f33e00],al
  418ca5:	or     BYTE PTR [eax],al
  418ca7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418cab:	add    BYTE PTR [ebx-0x67f33e00],al
  418cb1:	or     BYTE PTR [eax],al
  418cb3:	add    ah,dh
  418cb5:	fild   DWORD PTR [ecx+0x0]
  418cb8:	add    DWORD PTR [eax],0xffffffc2
  418cbb:	or     al,0x98
  418cbd:	or     BYTE PTR [eax],al
  418cbf:	add    BYTE PTR [eax],bh
  418cc1:	fld    DWORD PTR [ecx+0x0]
  418cc4:	add    DWORD PTR [eax],0xffffffc2
  418cc7:	or     al,0x98
  418cc9:	sbb    BYTE PTR [eax],al
  418ccb:	add    ah,al
  418ccd:	fld    DWORD PTR [ecx+0x0]
  418cd0:	add    DWORD PTR [eax],0xffffffc2
  418cd3:	or     al,0x98
  418cd5:	sbb    BYTE PTR [eax],al
  418cd7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418cdb:	add    BYTE PTR [ebx-0x47f33e00],al
  418ce1:	or     BYTE PTR [eax],al
  418ce3:	add    al,al
  418ce5:	fild   DWORD PTR [ecx+0x0]
  418ce8:	add    DWORD PTR [eax],0xffffffc2
  418ceb:	or     al,0xb8
  418ced:	or     BYTE PTR [eax],al
  418cef:	add    BYTE PTR [eax],bh
  418cf1:	fld    DWORD PTR [ecx+0x0]
  418cf4:	add    DWORD PTR [eax],0xffffffc2
  418cf7:	or     al,0xb8
  418cf9:	sbb    BYTE PTR [eax],al
  418cfb:	add    BYTE PTR [eax-0x7cffbe27],dl
  418d01:	add    dl,al
  418d03:	or     al,0xb8
  418d05:	sbb    BYTE PTR [eax],al
  418d07:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418d0b:	add    BYTE PTR [ebx-0x7fe3e00],al
  418d11:	or     BYTE PTR [eax],al
  418d13:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418d17:	add    BYTE PTR [ebx-0x7fe3e00],al
  418d1d:	or     BYTE PTR [eax],al
  418d1f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418d23:	add    BYTE PTR [ebx-0x27fe3e00],al
  418d29:	or     BYTE PTR [eax],al
  418d2b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418d2f:	add    BYTE PTR [ebx-0x27fe3e00],al
  418d35:	or     BYTE PTR [eax],al
  418d37:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418d3b:	add    BYTE PTR [ebx-0x67fe3e00],al
  418d41:	or     BYTE PTR [eax],al
  418d43:	add    ah,dh
  418d45:	fild   DWORD PTR [ecx+0x0]
  418d48:	add    DWORD PTR [eax],0xffffffc2
  418d4b:	add    DWORD PTR [eax+0x38000008],ebx
  418d51:	fld    DWORD PTR [ecx+0x0]
  418d54:	add    DWORD PTR [eax],0xffffffc2
  418d57:	add    DWORD PTR [eax-0x3bffffe8],ebx
  418d5d:	fld    DWORD PTR [ecx+0x0]
  418d60:	add    DWORD PTR [eax],0xffffffc2
  418d63:	add    DWORD PTR [eax+0x5c000018],ebx
  418d69:	fild   DWORD PTR [ecx+0x0]
  418d6c:	add    DWORD PTR [eax],0xffffffc2
  418d6f:	add    DWORD PTR [eax-0x3ffffff8],edi
  418d75:	fild   DWORD PTR [ecx+0x0]
  418d78:	add    DWORD PTR [eax],0xffffffc2
  418d7b:	add    DWORD PTR [eax+0x38000008],edi
  418d81:	fld    DWORD PTR [ecx+0x0]
  418d84:	add    DWORD PTR [eax],0xffffffc2
  418d87:	add    DWORD PTR [eax-0x6fffffe8],edi
  418d8d:	fld    DWORD PTR [ecx+0x0]
  418d90:	add    DWORD PTR [eax],0xffffffc2
  418d93:	add    DWORD PTR [eax+0x5c000018],edi
  418d99:	fild   DWORD PTR [ecx+0x0]
  418d9c:	add    DWORD PTR [eax],0xffffffc2
  418d9f:	adc    eax,edi
  418da1:	or     BYTE PTR [eax],al
  418da3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418da7:	add    BYTE PTR [ebx-0x7ee3e00],al
  418dad:	or     BYTE PTR [eax],al
  418daf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418db3:	add    BYTE PTR [ebx-0x27ee3e00],al
  418db9:	or     BYTE PTR [eax],al
  418dbb:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418dbf:	add    BYTE PTR [ebx-0x27ee3e00],al
  418dc5:	or     BYTE PTR [eax],al
  418dc7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418dcb:	add    BYTE PTR [ebx-0x67ee3e00],al
  418dd1:	or     BYTE PTR [eax],al
  418dd3:	add    ah,dh
  418dd5:	fild   DWORD PTR [ecx+0x0]
  418dd8:	add    DWORD PTR [eax],0xffffffc2
  418ddb:	adc    DWORD PTR [eax+0x38000008],ebx
  418de1:	fld    DWORD PTR [ecx+0x0]
  418de4:	add    DWORD PTR [eax],0xffffffc2
  418de7:	adc    DWORD PTR [eax-0x3bffffe8],ebx
  418ded:	fld    DWORD PTR [ecx+0x0]
  418df0:	add    DWORD PTR [eax],0xffffffc2
  418df3:	adc    DWORD PTR [eax+0x5c000018],ebx
  418df9:	fild   DWORD PTR [ecx+0x0]
  418dfc:	add    DWORD PTR [eax],0xffffffc2
  418dff:	adc    DWORD PTR [eax-0x3ffffff8],edi
  418e05:	fild   DWORD PTR [ecx+0x0]
  418e08:	add    DWORD PTR [eax],0xffffffc2
  418e0b:	adc    DWORD PTR [eax+0x38000008],edi
  418e11:	fld    DWORD PTR [ecx+0x0]
  418e14:	add    DWORD PTR [eax],0xffffffc2
  418e17:	adc    DWORD PTR [eax-0x6fffffe8],edi
  418e1d:	fld    DWORD PTR [ecx+0x0]
  418e20:	add    DWORD PTR [eax],0xffffffc2
  418e23:	adc    DWORD PTR [eax+0x5c000018],edi
  418e29:	fild   DWORD PTR [ecx+0x0]
  418e2c:	add    DWORD PTR [eax],0xffffffc2
  418e2f:	add    bh,al
  418e31:	or     BYTE PTR [eax],al
  418e33:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418e37:	add    BYTE PTR [ebx-0x7fd3e00],al
  418e3d:	or     BYTE PTR [eax],al
  418e3f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418e43:	add    BYTE PTR [ebx-0x27fd3e00],al
  418e49:	or     BYTE PTR [eax],al
  418e4b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418e4f:	add    BYTE PTR [ebx-0x27fd3e00],al
  418e55:	or     BYTE PTR [eax],al
  418e57:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418e5b:	add    BYTE PTR [ebx-0x67fd3e00],al
  418e61:	or     BYTE PTR [eax],al
  418e63:	add    ah,dh
  418e65:	fild   DWORD PTR [ecx+0x0]
  418e68:	add    DWORD PTR [eax],0xffffffc2
  418e6b:	add    bl,BYTE PTR [eax+0x38000008]
  418e71:	fld    DWORD PTR [ecx+0x0]
  418e74:	add    DWORD PTR [eax],0xffffffc2
  418e77:	add    bl,BYTE PTR [eax-0x3bffffe8]
  418e7d:	fld    DWORD PTR [ecx+0x0]
  418e80:	add    DWORD PTR [eax],0xffffffc2
  418e83:	add    bl,BYTE PTR [eax+0x5c000018]
  418e89:	fild   DWORD PTR [ecx+0x0]
  418e8c:	add    DWORD PTR [eax],0xffffffc2
  418e8f:	add    bh,BYTE PTR [eax-0x3ffffff8]
  418e95:	fild   DWORD PTR [ecx+0x0]
  418e98:	add    DWORD PTR [eax],0xffffffc2
  418e9b:	add    bh,BYTE PTR [eax+0x38000008]
  418ea1:	fld    DWORD PTR [ecx+0x0]
  418ea4:	add    DWORD PTR [eax],0xffffffc2
  418ea7:	add    bh,BYTE PTR [eax-0x6fffffe8]
  418ead:	fld    DWORD PTR [ecx+0x0]
  418eb0:	add    DWORD PTR [eax],0xffffffc2
  418eb3:	add    bh,BYTE PTR [eax+0x5c000018]
  418eb9:	fild   DWORD PTR [ecx+0x0]
  418ebc:	add    DWORD PTR [eax],0xffffffc2
  418ebf:	adc    bh,al
  418ec1:	or     BYTE PTR [eax],al
  418ec3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418ec7:	add    BYTE PTR [ebx-0x7ed3e00],al
  418ecd:	or     BYTE PTR [eax],al
  418ecf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418ed3:	add    BYTE PTR [ebx-0x27ed3e00],al
  418ed9:	or     BYTE PTR [eax],al
  418edb:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418edf:	add    BYTE PTR [ebx-0x27ed3e00],al
  418ee5:	or     BYTE PTR [eax],al
  418ee7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418eeb:	add    BYTE PTR [ebx-0x67ed3e00],al
  418ef1:	or     BYTE PTR [eax],al
  418ef3:	add    ah,dh
  418ef5:	fild   DWORD PTR [ecx+0x0]
  418ef8:	add    DWORD PTR [eax],0xffffffc2
  418efb:	adc    bl,BYTE PTR [eax+0x38000008]
  418f01:	fld    DWORD PTR [ecx+0x0]
  418f04:	add    DWORD PTR [eax],0xffffffc2
  418f07:	adc    bl,BYTE PTR [eax-0x3bffffe8]
  418f0d:	fld    DWORD PTR [ecx+0x0]
  418f10:	add    DWORD PTR [eax],0xffffffc2
  418f13:	adc    bl,BYTE PTR [eax+0x5c000018]
  418f19:	fild   DWORD PTR [ecx+0x0]
  418f1c:	add    DWORD PTR [eax],0xffffffc2
  418f1f:	adc    bh,BYTE PTR [eax-0x3ffffff8]
  418f25:	fild   DWORD PTR [ecx+0x0]
  418f28:	add    DWORD PTR [eax],0xffffffc2
  418f2b:	adc    bh,BYTE PTR [eax+0x38000008]
  418f31:	fld    DWORD PTR [ecx+0x0]
  418f34:	add    DWORD PTR [eax],0xffffffc2
  418f37:	adc    bh,BYTE PTR [eax-0x6fffffe8]
  418f3d:	fld    DWORD PTR [ecx+0x0]
  418f40:	add    DWORD PTR [eax],0xffffffc2
  418f43:	adc    bh,BYTE PTR [eax+0x5c000018]
  418f49:	fild   DWORD PTR [ecx+0x0]
  418f4c:	add    DWORD PTR [eax],0xffffffc2
  418f4f:	push   cs
  418f50:	clc    
  418f51:	or     BYTE PTR [eax],al
  418f53:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418f57:	add    BYTE PTR [ebx-0x7f13e00],al
  418f5d:	or     BYTE PTR [eax],al
  418f5f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418f63:	add    BYTE PTR [ebx-0x27f13e00],al
  418f69:	or     BYTE PTR [eax],al
  418f6b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418f6f:	add    BYTE PTR [ebx-0x27f13e00],al
  418f75:	or     BYTE PTR [eax],al
  418f77:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418f7b:	add    BYTE PTR [ebx-0x67f13e00],al
  418f81:	or     BYTE PTR [eax],al
  418f83:	add    ah,dh
  418f85:	fild   DWORD PTR [ecx+0x0]
  418f88:	add    DWORD PTR [eax],0xffffffc2
  418f8b:	push   cs
  418f8c:	cwde   
  418f8d:	or     BYTE PTR [eax],al
  418f8f:	add    BYTE PTR [eax],bh
  418f91:	fld    DWORD PTR [ecx+0x0]
  418f94:	add    DWORD PTR [eax],0xffffffc2
  418f97:	push   cs
  418f98:	cwde   
  418f99:	sbb    BYTE PTR [eax],al
  418f9b:	add    ah,al
  418f9d:	fld    DWORD PTR [ecx+0x0]
  418fa0:	add    DWORD PTR [eax],0xffffffc2
  418fa3:	push   cs
  418fa4:	cwde   
  418fa5:	sbb    BYTE PTR [eax],al
  418fa7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418fab:	add    BYTE PTR [ebx-0x47f13e00],al
  418fb1:	or     BYTE PTR [eax],al
  418fb3:	add    al,al
  418fb5:	fild   DWORD PTR [ecx+0x0]
  418fb8:	add    DWORD PTR [eax],0xffffffc2
  418fbb:	push   cs
  418fbc:	mov    eax,0x38000008
  418fc1:	fld    DWORD PTR [ecx+0x0]
  418fc4:	add    DWORD PTR [eax],0xffffffc2
  418fc7:	push   cs
  418fc8:	mov    eax,0x90000018
  418fcd:	fld    DWORD PTR [ecx+0x0]
  418fd0:	add    DWORD PTR [eax],0xffffffc2
  418fd3:	push   cs
  418fd4:	mov    eax,0x5c000018
  418fd9:	fild   DWORD PTR [ecx+0x0]
  418fdc:	add    DWORD PTR [eax],0xffffffc2
  418fdf:	push   ds
  418fe0:	clc    
  418fe1:	or     BYTE PTR [eax],al
  418fe3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  418fe7:	add    BYTE PTR [ebx-0x7e13e00],al
  418fed:	or     BYTE PTR [eax],al
  418fef:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  418ff3:	add    BYTE PTR [ebx-0x27e13e00],al
  418ff9:	or     BYTE PTR [eax],al
  418ffb:	add    BYTE PTR [esp+ebx*8+0x41],dl
  418fff:	add    BYTE PTR [ebx-0x27e13e00],al
  419005:	or     BYTE PTR [eax],al
  419007:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41900b:	add    BYTE PTR [ebx-0x67e13e00],al
  419011:	or     BYTE PTR [eax],al
  419013:	add    ah,dh
  419015:	fild   DWORD PTR [ecx+0x0]
  419018:	add    DWORD PTR [eax],0xffffffc2
  41901b:	push   ds
  41901c:	cwde   
  41901d:	or     BYTE PTR [eax],al
  41901f:	add    BYTE PTR [eax],bh
  419021:	fld    DWORD PTR [ecx+0x0]
  419024:	add    DWORD PTR [eax],0xffffffc2
  419027:	push   ds
  419028:	cwde   
  419029:	sbb    BYTE PTR [eax],al
  41902b:	add    ah,al
  41902d:	fld    DWORD PTR [ecx+0x0]
  419030:	add    DWORD PTR [eax],0xffffffc2
  419033:	push   ds
  419034:	cwde   
  419035:	sbb    BYTE PTR [eax],al
  419037:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41903b:	add    BYTE PTR [ebx-0x47e13e00],al
  419041:	or     BYTE PTR [eax],al
  419043:	add    al,al
  419045:	fild   DWORD PTR [ecx+0x0]
  419048:	add    DWORD PTR [eax],0xffffffc2
  41904b:	push   ds
  41904c:	mov    eax,0x38000008
  419051:	fld    DWORD PTR [ecx+0x0]
  419054:	add    DWORD PTR [eax],0xffffffc2
  419057:	push   ds
  419058:	mov    eax,0x90000018
  41905d:	fld    DWORD PTR [ecx+0x0]
  419060:	add    DWORD PTR [eax],0xffffffc2
  419063:	push   ds
  419064:	mov    eax,0x5c000018
  419069:	fild   DWORD PTR [ecx+0x0]
  41906c:	add    DWORD PTR [eax],0xffffffc2
  41906f:	or     eax,0x8f8
  419074:	ins    BYTE PTR es:[edi],dx
  419075:	fadd   QWORD PTR [ecx+0x0]
  419078:	add    DWORD PTR [eax],0xffffffc2
  41907b:	or     eax,0x8f8
  419080:	pop    esp
  419081:	fild   DWORD PTR [ecx+0x0]
  419084:	add    DWORD PTR [eax],0xffffffc2
  419087:	or     eax,0x8d8
  41908c:	push   esp
  41908d:	fadd   QWORD PTR [ecx+0x0]
  419090:	add    DWORD PTR [eax],0xffffffc2
  419093:	or     eax,0x8d8
  419098:	pop    esp
  419099:	fild   DWORD PTR [ecx+0x0]
  41909c:	add    DWORD PTR [eax],0xffffffc2
  41909f:	or     eax,0x898
  4190a4:	hlt    
  4190a5:	fild   DWORD PTR [ecx+0x0]
  4190a8:	add    DWORD PTR [eax],0xffffffc2
  4190ab:	or     eax,0x898
  4190b0:	cmp    cl,bl
  4190b2:	inc    ecx
  4190b3:	add    BYTE PTR [ebx-0x67f23e00],al
  4190b9:	sbb    BYTE PTR [eax],al
  4190bb:	add    ah,al
  4190bd:	fld    DWORD PTR [ecx+0x0]
  4190c0:	add    DWORD PTR [eax],0xffffffc2
  4190c3:	or     eax,0x1898
  4190c8:	pop    esp
  4190c9:	fild   DWORD PTR [ecx+0x0]
  4190cc:	add    DWORD PTR [eax],0xffffffc2
  4190cf:	or     eax,0x8b8
  4190d4:	rcr    bl,0x41
  4190d7:	add    BYTE PTR [ebx-0x47f23e00],al
  4190dd:	or     BYTE PTR [eax],al
  4190df:	add    BYTE PTR [eax],bh
  4190e1:	fld    DWORD PTR [ecx+0x0]
  4190e4:	add    DWORD PTR [eax],0xffffffc2
  4190e7:	or     eax,0x18b8
  4190ec:	nop
  4190ed:	fld    DWORD PTR [ecx+0x0]
  4190f0:	add    DWORD PTR [eax],0xffffffc2
  4190f3:	or     eax,0x18b8
  4190f8:	pop    esp
  4190f9:	fild   DWORD PTR [ecx+0x0]
  4190fc:	add    DWORD PTR [eax],0xffffffc2
  4190ff:	sbb    eax,0x8f8
  419104:	ins    BYTE PTR es:[edi],dx
  419105:	fadd   QWORD PTR [ecx+0x0]
  419108:	add    DWORD PTR [eax],0xffffffc2
  41910b:	sbb    eax,0x8f8
  419110:	pop    esp
  419111:	fild   DWORD PTR [ecx+0x0]
  419114:	add    DWORD PTR [eax],0xffffffc2
  419117:	sbb    eax,0x8d8
  41911c:	push   esp
  41911d:	fadd   QWORD PTR [ecx+0x0]
  419120:	add    DWORD PTR [eax],0xffffffc2
  419123:	sbb    eax,0x8d8
  419128:	pop    esp
  419129:	fild   DWORD PTR [ecx+0x0]
  41912c:	add    DWORD PTR [eax],0xffffffc2
  41912f:	sbb    eax,0x898
  419134:	hlt    
  419135:	fild   DWORD PTR [ecx+0x0]
  419138:	add    DWORD PTR [eax],0xffffffc2
  41913b:	sbb    eax,0x898
  419140:	cmp    cl,bl
  419142:	inc    ecx
  419143:	add    BYTE PTR [ebx-0x67e23e00],al
  419149:	sbb    BYTE PTR [eax],al
  41914b:	add    ah,al
  41914d:	fld    DWORD PTR [ecx+0x0]
  419150:	add    DWORD PTR [eax],0xffffffc2
  419153:	sbb    eax,0x1898
  419158:	pop    esp
  419159:	fild   DWORD PTR [ecx+0x0]
  41915c:	add    DWORD PTR [eax],0xffffffc2
  41915f:	sbb    eax,0x8b8
  419164:	rcr    bl,0x41
  419167:	add    BYTE PTR [ebx-0x47e23e00],al
  41916d:	or     BYTE PTR [eax],al
  41916f:	add    BYTE PTR [eax],bh
  419171:	fld    DWORD PTR [ecx+0x0]
  419174:	add    DWORD PTR [eax],0xffffffc2
  419177:	sbb    eax,0x18b8
  41917c:	nop
  41917d:	fld    DWORD PTR [ecx+0x0]
  419180:	add    DWORD PTR [eax],0xffffffc2
  419183:	sbb    eax,0x18b8
  419188:	pop    esp
  419189:	fild   DWORD PTR [ecx+0x0]
  41918c:	add    DWORD PTR [eax],0xffffffc2
  41918f:	or     edi,eax
  419191:	or     BYTE PTR [eax],al
  419193:	add    BYTE PTR [esp+ebx*8+0x41],ch
  419197:	add    BYTE PTR [ebx-0x7f43e00],al
  41919d:	or     BYTE PTR [eax],al
  41919f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4191a3:	add    BYTE PTR [ebx-0x27f43e00],al
  4191a9:	or     BYTE PTR [eax],al
  4191ab:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4191af:	add    BYTE PTR [ebx-0x27f43e00],al
  4191b5:	or     BYTE PTR [eax],al
  4191b7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4191bb:	add    BYTE PTR [ebx-0x67f43e00],al
  4191c1:	or     BYTE PTR [eax],al
  4191c3:	add    ah,dh
  4191c5:	fild   DWORD PTR [ecx+0x0]
  4191c8:	add    DWORD PTR [eax],0xffffffc2
  4191cb:	or     ebx,DWORD PTR [eax+0x38000008]
  4191d1:	fld    DWORD PTR [ecx+0x0]
  4191d4:	add    DWORD PTR [eax],0xffffffc2
  4191d7:	or     ebx,DWORD PTR [eax-0x3bffffe8]
  4191dd:	fld    DWORD PTR [ecx+0x0]
  4191e0:	add    DWORD PTR [eax],0xffffffc2
  4191e3:	or     ebx,DWORD PTR [eax+0x5c000018]
  4191e9:	fild   DWORD PTR [ecx+0x0]
  4191ec:	add    DWORD PTR [eax],0xffffffc2
  4191ef:	or     edi,DWORD PTR [eax-0x3ffffff8]
  4191f5:	fild   DWORD PTR [ecx+0x0]
  4191f8:	add    DWORD PTR [eax],0xffffffc2
  4191fb:	or     edi,DWORD PTR [eax+0x38000008]
  419201:	fld    DWORD PTR [ecx+0x0]
  419204:	add    DWORD PTR [eax],0xffffffc2
  419207:	or     edi,DWORD PTR [eax-0x6fffffe8]
  41920d:	fld    DWORD PTR [ecx+0x0]
  419210:	add    DWORD PTR [eax],0xffffffc2
  419213:	or     edi,DWORD PTR [eax+0x5c000018]
  419219:	fild   DWORD PTR [ecx+0x0]
  41921c:	add    DWORD PTR [eax],0xffffffc2
  41921f:	sbb    edi,eax
  419221:	or     BYTE PTR [eax],al
  419223:	add    BYTE PTR [esp+ebx*8+0x41],ch
  419227:	add    BYTE PTR [ebx-0x7e43e00],al
  41922d:	or     BYTE PTR [eax],al
  41922f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  419233:	add    BYTE PTR [ebx-0x27e43e00],al
  419239:	or     BYTE PTR [eax],al
  41923b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41923f:	add    BYTE PTR [ebx-0x27e43e00],al
  419245:	or     BYTE PTR [eax],al
  419247:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41924b:	add    BYTE PTR [ebx-0x67e43e00],al
  419251:	or     BYTE PTR [eax],al
  419253:	add    ah,dh
  419255:	fild   DWORD PTR [ecx+0x0]
  419258:	add    DWORD PTR [eax],0xffffffc2
  41925b:	sbb    ebx,DWORD PTR [eax+0x38000008]
  419261:	fld    DWORD PTR [ecx+0x0]
  419264:	add    DWORD PTR [eax],0xffffffc2
  419267:	sbb    ebx,DWORD PTR [eax-0x3bffffe8]
  41926d:	fld    DWORD PTR [ecx+0x0]
  419270:	add    DWORD PTR [eax],0xffffffc2
  419273:	sbb    ebx,DWORD PTR [eax+0x5c000018]
  419279:	fild   DWORD PTR [ecx+0x0]
  41927c:	add    DWORD PTR [eax],0xffffffc2
  41927f:	sbb    edi,DWORD PTR [eax-0x3ffffff8]
  419285:	fild   DWORD PTR [ecx+0x0]
  419288:	add    DWORD PTR [eax],0xffffffc2
  41928b:	sbb    edi,DWORD PTR [eax+0x38000008]
  419291:	fld    DWORD PTR [ecx+0x0]
  419294:	add    DWORD PTR [eax],0xffffffc2
  419297:	sbb    edi,DWORD PTR [eax-0x6fffffe8]
  41929d:	fld    DWORD PTR [ecx+0x0]
  4192a0:	add    DWORD PTR [eax],0xffffffc2
  4192a3:	sbb    edi,DWORD PTR [eax+0x5c000018]
  4192a9:	fild   DWORD PTR [ecx+0x0]
  4192ac:	add    DWORD PTR [eax],0xffffffc2
  4192af:	add    al,bh
  4192b1:	or     BYTE PTR [eax],al
  4192b3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  4192b7:	add    BYTE PTR [ebx-0x7ff3e00],al
  4192bd:	or     BYTE PTR [eax],al
  4192bf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4192c3:	add    BYTE PTR [ebx-0x27ff3e00],al
  4192c9:	or     BYTE PTR [eax],al
  4192cb:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4192cf:	add    BYTE PTR [ebx-0x27ff3e00],al
  4192d5:	or     BYTE PTR [eax],al
  4192d7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4192db:	add    BYTE PTR [ebx-0x67ff3e00],al
  4192e1:	or     BYTE PTR [eax],al
  4192e3:	add    ah,dh
  4192e5:	fild   DWORD PTR [ecx+0x0]
  4192e8:	add    DWORD PTR [eax],0xffffffc2
  4192eb:	add    BYTE PTR [eax+0x38000008],bl
  4192f1:	fld    DWORD PTR [ecx+0x0]
  4192f4:	add    DWORD PTR [eax],0xffffffc2
  4192f7:	add    BYTE PTR [eax-0x3bffffe8],bl
  4192fd:	fld    DWORD PTR [ecx+0x0]
  419300:	add    DWORD PTR [eax],0xffffffc2
  419303:	add    BYTE PTR [eax+0x5c000018],bl
  419309:	fild   DWORD PTR [ecx+0x0]
  41930c:	add    DWORD PTR [eax],0xffffffc2
  41930f:	add    BYTE PTR [eax-0x3ffffff8],bh
  419315:	fild   DWORD PTR [ecx+0x0]
  419318:	add    DWORD PTR [eax],0xffffffc2
  41931b:	add    BYTE PTR [eax+0x38000008],bh
  419321:	fld    DWORD PTR [ecx+0x0]
  419324:	add    DWORD PTR [eax],0xffffffc2
  419327:	add    BYTE PTR [eax-0x6fffffe8],bh
  41932d:	fld    DWORD PTR [ecx+0x0]
  419330:	add    DWORD PTR [eax],0xffffffc2
  419333:	add    BYTE PTR [eax+0x5c000018],bh
  419339:	fild   DWORD PTR [ecx+0x0]
  41933c:	add    DWORD PTR [eax],0xffffffc2
  41933f:	sbb    al,bh
  419341:	or     BYTE PTR [eax],al
  419343:	add    BYTE PTR [esp+ebx*8+0x41],ch
  419347:	add    BYTE PTR [ebx-0x7e73e00],al
  41934d:	or     BYTE PTR [eax],al
  41934f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  419353:	add    BYTE PTR [ebx-0x27e73e00],al
  419359:	or     BYTE PTR [eax],al
  41935b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41935f:	add    BYTE PTR [ebx-0x27e73e00],al
  419365:	or     BYTE PTR [eax],al
  419367:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41936b:	add    BYTE PTR [ebx-0x67e73e00],al
  419371:	or     BYTE PTR [eax],al
  419373:	add    ah,dh
  419375:	fild   DWORD PTR [ecx+0x0]
  419378:	add    DWORD PTR [eax],0xffffffc2
  41937b:	sbb    BYTE PTR [eax+0x38000008],bl
  419381:	fld    DWORD PTR [ecx+0x0]
  419384:	add    DWORD PTR [eax],0xffffffc2
  419387:	sbb    BYTE PTR [eax-0x3bffffe8],bl
  41938d:	fld    DWORD PTR [ecx+0x0]
  419390:	add    DWORD PTR [eax],0xffffffc2
  419393:	sbb    BYTE PTR [eax+0x5c000018],bl
  419399:	fild   DWORD PTR [ecx+0x0]
  41939c:	add    DWORD PTR [eax],0xffffffc2
  41939f:	sbb    BYTE PTR [eax-0x3ffffff8],bh
  4193a5:	fild   DWORD PTR [ecx+0x0]
  4193a8:	add    DWORD PTR [eax],0xffffffc2
  4193ab:	sbb    BYTE PTR [eax+0x38000008],bh
  4193b1:	fld    DWORD PTR [ecx+0x0]
  4193b4:	add    DWORD PTR [eax],0xffffffc2
  4193b7:	sbb    BYTE PTR [eax-0x6fffffe8],bh
  4193bd:	fld    DWORD PTR [ecx+0x0]
  4193c0:	add    DWORD PTR [eax],0xffffffc2
  4193c3:	sbb    BYTE PTR [eax+0x5c000018],bh
  4193c9:	fild   DWORD PTR [ecx+0x0]
  4193cc:	add    DWORD PTR [eax],0xffffffc2
  4193cf:	or     al,bh
  4193d1:	or     BYTE PTR [eax],al
  4193d3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  4193d7:	add    BYTE PTR [ebx-0x7f73e00],al
  4193dd:	or     BYTE PTR [eax],al
  4193df:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4193e3:	add    BYTE PTR [ebx-0x27f73e00],al
  4193e9:	or     BYTE PTR [eax],al
  4193eb:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4193ef:	add    BYTE PTR [ebx-0x27f73e00],al
  4193f5:	or     BYTE PTR [eax],al
  4193f7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4193fb:	add    BYTE PTR [ebx-0x67f73e00],al
  419401:	or     BYTE PTR [eax],al
  419403:	add    ah,dh
  419405:	fild   DWORD PTR [ecx+0x0]
  419408:	add    DWORD PTR [eax],0xffffffc2
  41940b:	or     BYTE PTR [eax+0x38000008],bl
  419411:	fld    DWORD PTR [ecx+0x0]
  419414:	add    DWORD PTR [eax],0xffffffc2
  419417:	or     BYTE PTR [eax-0x3bffffe8],bl
  41941d:	fld    DWORD PTR [ecx+0x0]
  419420:	add    DWORD PTR [eax],0xffffffc2
  419423:	or     BYTE PTR [eax+0x5c000018],bl
  419429:	fild   DWORD PTR [ecx+0x0]
  41942c:	add    DWORD PTR [eax],0xffffffc2
  41942f:	or     BYTE PTR [eax-0x3ffffff8],bh
  419435:	fild   DWORD PTR [ecx+0x0]
  419438:	add    DWORD PTR [eax],0xffffffc2
  41943b:	or     BYTE PTR [eax+0x38000008],bh
  419441:	fld    DWORD PTR [ecx+0x0]
  419444:	add    DWORD PTR [eax],0xffffffc2
  419447:	or     BYTE PTR [eax-0x6fffffe8],bh
  41944d:	fld    DWORD PTR [ecx+0x0]
  419450:	add    DWORD PTR [eax],0xffffffc2
  419453:	or     BYTE PTR [eax+0x5c000018],bh
  419459:	fild   DWORD PTR [ecx+0x0]
  41945c:	add    DWORD PTR [eax],0xffffffc2
  41945f:	adc    al,bh
  419461:	or     BYTE PTR [eax],al
  419463:	add    BYTE PTR [esp+ebx*8+0x41],ch
  419467:	add    BYTE PTR [ebx-0x7ef3e00],al
  41946d:	or     BYTE PTR [eax],al
  41946f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  419473:	add    BYTE PTR [ebx-0x27ef3e00],al
  419479:	or     BYTE PTR [eax],al
  41947b:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41947f:	add    BYTE PTR [ebx-0x27ef3e00],al
  419485:	or     BYTE PTR [eax],al
  419487:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41948b:	add    BYTE PTR [ebx-0x67ef3e00],al
  419491:	or     BYTE PTR [eax],al
  419493:	add    ah,dh
  419495:	fild   DWORD PTR [ecx+0x0]
  419498:	add    DWORD PTR [eax],0xffffffc2
  41949b:	adc    BYTE PTR [eax+0x38000008],bl
  4194a1:	fld    DWORD PTR [ecx+0x0]
  4194a4:	add    DWORD PTR [eax],0xffffffc2
  4194a7:	adc    BYTE PTR [eax-0x3bffffe8],bl
  4194ad:	fld    DWORD PTR [ecx+0x0]
  4194b0:	add    DWORD PTR [eax],0xffffffc2
  4194b3:	adc    BYTE PTR [eax+0x5c000018],bl
  4194b9:	fild   DWORD PTR [ecx+0x0]
  4194bc:	add    DWORD PTR [eax],0xffffffc2
  4194bf:	adc    BYTE PTR [eax-0x3ffffff8],bh
  4194c5:	fild   DWORD PTR [ecx+0x0]
  4194c8:	add    DWORD PTR [eax],0xffffffc2
  4194cb:	adc    BYTE PTR [eax+0x38000008],bh
  4194d1:	fld    DWORD PTR [ecx+0x0]
  4194d4:	add    DWORD PTR [eax],0xffffffc2
  4194d7:	adc    BYTE PTR [eax-0x6fffffe8],bh
  4194dd:	fld    DWORD PTR [ecx+0x0]
  4194e0:	add    DWORD PTR [eax],0xffffffc2
  4194e3:	adc    BYTE PTR [eax+0x1c000018],bh
  4194e9:	fld    QWORD PTR [ecx+0x0]
  4194ec:	cmp    BYTE PTR [eax],0x18
  4194ef:	add    BYTE PTR [eax],bh
  4194f1:	or     BYTE PTR [eax],al
  4194f3:	add    BYTE PTR [esi+ebx*8],dh
  4194f6:	inc    ecx
  4194f7:	add    BYTE PTR [edx+0x38001838],al
  4194fd:	or     BYTE PTR [eax],al
  4194ff:	add    BYTE PTR [edx+ebx*8+0x41],bl
  419503:	add    BYTE PTR [edx+0x38001838],al
  419509:	sbb    BYTE PTR [eax],al
  41950b:	add    al,bl
  41950d:	fiadd  DWORD PTR [ecx+0x0]
  419510:	cmp    BYTE PTR [eax],0x18
  419513:	add    BYTE PTR [eax],bh
  419515:	sbb    BYTE PTR [eax],al
  419517:	add    BYTE PTR [edx+ebx*8+0x41],bl
  41951b:	add    BYTE PTR [edx+0x38001938],al
  419521:	sbb    BYTE PTR [eax],al
  419523:	add    al,dl
  419525:	fiadd  DWORD PTR [ecx+0x0]
  419528:	cmp    BYTE PTR [eax],0x19
  41952b:	add    BYTE PTR [eax],bh
  41952d:	sbb    BYTE PTR [eax],al
  41952f:	add    al,cl
  419531:	fiadd  DWORD PTR [ecx+0x0]
  419534:	cmp    BYTE PTR [eax],0x5a
  419537:	add    BYTE PTR [eax],bh
  419539:	sbb    BYTE PTR [eax],al
  41953b:	add    al,cl
  41953d:	fiadd  DWORD PTR [ecx+0x0]
  419540:	cmp    BYTE PTR [eax],0x1a
  419543:	add    BYTE PTR [eax],bh
  419545:	sbb    BYTE PTR [eax],al
  419547:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41954b:	add    BYTE PTR [edx+edi*1+0x838004a],al
  419552:	add    BYTE PTR [eax],al
  419554:	(bad)  
  419556:	inc    ecx
  419557:	add    BYTE PTR [edx+edi*1+0x838004a],al
  41955e:	add    BYTE PTR [eax],al
  419560:	and    cl,bl
  419562:	inc    ecx
  419563:	add    BYTE PTR [edx+edi*1+0x1838004a],al
  41956a:	add    BYTE PTR [eax],al
  41956c:	lods   al,BYTE PTR ds:[esi]
  41956d:	fld    DWORD PTR [ecx+0x0]
  419570:	test   BYTE PTR [edx],bh
  419572:	dec    edx
  419573:	add    BYTE PTR [eax],bh
  419575:	sbb    BYTE PTR [eax],al
  419577:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41957b:	add    BYTE PTR [edx+edi*1+0x838004b],al
  419582:	add    BYTE PTR [eax],al
  419584:	test   al,0xdb
  419586:	inc    ecx
  419587:	add    BYTE PTR [edx+edi*1+0x838004b],al
  41958e:	add    BYTE PTR [eax],al
  419590:	and    cl,bl
  419592:	inc    ecx
  419593:	add    BYTE PTR [edx+edi*1+0x1838004b],al
  41959a:	add    BYTE PTR [eax],al
  41959c:	js     0x419577
  41959e:	inc    ecx
  41959f:	add    BYTE PTR [edx+edi*1+0x1838004b],al
  4195a6:	add    BYTE PTR [eax],al
  4195a8:	push   eax
  4195a9:	fild   DWORD PTR [ecx+0x0]
  4195ac:	test   BYTE PTR [edx],bh
  4195ae:	or     al,0x0
  4195b0:	cmp    BYTE PTR [eax],cl
  4195b2:	add    BYTE PTR [eax],al
  4195b4:	call   0x8441d794
  4195b9:	cmp    cl,BYTE PTR [eax+eax*1]
  4195bc:	cmp    BYTE PTR [eax],cl
  4195be:	add    BYTE PTR [eax],al
  4195c0:	sub    al,0xd9
  4195c2:	inc    ecx
  4195c3:	add    BYTE PTR [edx+edi*1+0x1838000c],al
  4195ca:	add    BYTE PTR [eax],al
  4195cc:	mov    eax,0x840041d9
  4195d1:	cmp    cl,BYTE PTR [eax+eax*1]
  4195d4:	cmp    BYTE PTR [eax],bl
  4195d6:	add    BYTE PTR [eax],al
  4195d8:	push   eax
  4195d9:	fild   DWORD PTR [ecx+0x0]
  4195dc:	test   BYTE PTR [edx],bh
  4195de:	or     eax,0x83800
  4195e3:	add    BYTE PTR [ebx+ebx*8+0x3a840041],dh
  4195ea:	or     eax,0x83800
  4195ef:	add    BYTE PTR [ecx+ebx*8],ch
  4195f2:	inc    ecx
  4195f3:	add    BYTE PTR [edx+edi*1+0x1838000d],al
  4195fa:	add    BYTE PTR [eax],al
  4195fc:	test   cl,bl
  4195fe:	inc    ecx
  4195ff:	add    BYTE PTR [edx+edi*1+0x1838000d],al
  419606:	add    BYTE PTR [eax],al
  419608:	pop    esp
  419609:	fild   DWORD PTR [ecx+0x0]
  41960c:	add    DWORD PTR [eax],0x54
  41960f:	add    BYTE PTR [eax],bl
  419611:	or     BYTE PTR [eax],al
  419613:	add    ah,dh
  419615:	fild   DWORD PTR [ecx+0x0]
  419618:	add    DWORD PTR [eax],0x54
  41961b:	add    BYTE PTR [eax],bl
  41961d:	or     BYTE PTR [eax],al
  41961f:	add    BYTE PTR [eax],bh
  419621:	fld    DWORD PTR [ecx+0x0]
  419624:	add    DWORD PTR [eax],0x54
  419627:	add    BYTE PTR [eax],bl
  419629:	sbb    BYTE PTR [eax],al
  41962b:	add    ah,al
  41962d:	fld    DWORD PTR [ecx+0x0]
  419630:	add    DWORD PTR [eax],0x54
  419633:	add    BYTE PTR [eax],bl
  419635:	sbb    BYTE PTR [eax],al
  419637:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41963b:	add    BYTE PTR [ebx+0x38005400],al
  419641:	or     BYTE PTR [eax],al
  419643:	add    al,al
  419645:	fild   DWORD PTR [ecx+0x0]
  419648:	add    DWORD PTR [eax],0x54
  41964b:	add    BYTE PTR [eax],bh
  41964d:	or     BYTE PTR [eax],al
  41964f:	add    BYTE PTR [eax],bh
  419651:	fld    DWORD PTR [ecx+0x0]
  419654:	add    DWORD PTR [eax],0x54
  419657:	add    BYTE PTR [eax],bh
  419659:	sbb    BYTE PTR [eax],al
  41965b:	add    BYTE PTR [eax-0x7cffbe27],dl
  419661:	add    BYTE PTR [eax+eax*1+0x38],dl
  419665:	sbb    BYTE PTR [eax],al
  419667:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41966b:	add    BYTE PTR [ebx+0x18005500],al
  419671:	or     BYTE PTR [eax],al
  419673:	add    ah,dh
  419675:	fild   DWORD PTR [ecx+0x0]
  419678:	add    DWORD PTR [eax],0x55
  41967b:	add    BYTE PTR [eax],bl
  41967d:	or     BYTE PTR [eax],al
  41967f:	add    BYTE PTR [eax],bh
  419681:	fld    DWORD PTR [ecx+0x0]
  419684:	add    DWORD PTR [eax],0x55
  419687:	add    BYTE PTR [eax],bl
  419689:	sbb    BYTE PTR [eax],al
  41968b:	add    ah,al
  41968d:	fld    DWORD PTR [ecx+0x0]
  419690:	add    DWORD PTR [eax],0x55
  419693:	add    BYTE PTR [eax],bl
  419695:	sbb    BYTE PTR [eax],al
  419697:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41969b:	add    BYTE PTR [ebx+0x38005500],al
  4196a1:	or     BYTE PTR [eax],al
  4196a3:	add    al,al
  4196a5:	fild   DWORD PTR [ecx+0x0]
  4196a8:	add    DWORD PTR [eax],0x55
  4196ab:	add    BYTE PTR [eax],bh
  4196ad:	or     BYTE PTR [eax],al
  4196af:	add    BYTE PTR [eax],bh
  4196b1:	fld    DWORD PTR [ecx+0x0]
  4196b4:	add    DWORD PTR [eax],0x55
  4196b7:	add    BYTE PTR [eax],bh
  4196b9:	sbb    BYTE PTR [eax],al
  4196bb:	add    BYTE PTR [eax-0x7cffbe27],dl
  4196c1:	add    BYTE PTR [ebp+0x0],dl
  4196c4:	cmp    BYTE PTR [eax],bl
  4196c6:	add    BYTE PTR [eax],al
  4196c8:	adc    ch,bl
  4196ca:	inc    ecx
  4196cb:	add    BYTE PTR [ebx+0x3800df3a],al
  4196d1:	or     BYTE PTR [eax],al
  4196d3:	add    al,ah
  4196d5:	fld    QWORD PTR [ecx+0x0]
  4196d8:	cmp    DWORD PTR [edx],0xffffffdf
  4196db:	add    BYTE PTR [eax],bh
  4196dd:	or     BYTE PTR [eax],al
  4196df:	add    BYTE PTR [ebx*8+0x38820041],bl
  4196e6:	fild   DWORD PTR [eax]
  4196e8:	cmp    BYTE PTR [eax],cl
  4196ea:	add    BYTE PTR [eax],al
  4196ec:	in     al,dx
  4196ed:	fld    QWORD PTR [ecx+0x0]
  4196f0:	cmp    BYTE PTR [eax],0xdb
  4196f3:	add    BYTE PTR [eax],bh
  4196f5:	or     BYTE PTR [eax],al
  4196f7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4196fb:	add    BYTE PTR [ebx+0x3800dd38],al
  419701:	or     BYTE PTR [eax],al
  419703:	add    BYTE PTR [esp+ebx*8],bh
  419706:	inc    ecx
  419707:	add    BYTE PTR [ebx+0x3800dd38],al
  41970d:	or     BYTE PTR [eax],al
  41970f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  419713:	add    BYTE PTR [ebx+0x3800dc38],al
  419719:	or     BYTE PTR [eax],al
  41971b:	add    BYTE PTR [esp+ebx*8],bh
  41971e:	inc    ecx
  41971f:	add    BYTE PTR [ebx+0x3800dc38],al
  419725:	or     BYTE PTR [eax],al
  419727:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41972b:	add    BYTE PTR [ebx+0x3800df38],al
  419731:	or     BYTE PTR [eax],al
  419733:	add    BYTE PTR [esp+ebx*8],bh
  419736:	inc    ecx
  419737:	add    BYTE PTR [ebx+0x3800df38],al
  41973d:	or     BYTE PTR [eax],al
  41973f:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  419743:	add    BYTE PTR [ebx+0x3800de38],al
  419749:	or     BYTE PTR [eax],al
  41974b:	add    BYTE PTR [esp+ebx*8],bh
  41974e:	inc    ecx
  41974f:	add    BYTE PTR [ebx+0x3800de38],al
  419755:	or     BYTE PTR [eax],al
  419757:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41975b:	add    BYTE PTR [ebx+0x5800d000],al
  419761:	or     BYTE PTR [eax],al
  419763:	add    ah,dh
  419765:	fild   DWORD PTR [ecx+0x0]
  419768:	add    DWORD PTR [eax],0xffffffd0
  41976b:	add    BYTE PTR [eax+0x8],bl
  41976e:	add    BYTE PTR [eax],al
  419770:	cmp    cl,bl
  419772:	inc    ecx
  419773:	add    BYTE PTR [ebx+0x5800d000],al
  419779:	sbb    BYTE PTR [eax],al
  41977b:	add    ah,al
  41977d:	fld    DWORD PTR [ecx+0x0]
  419780:	add    DWORD PTR [eax],0xffffffd0
  419783:	add    BYTE PTR [eax+0x18],bl
  419786:	add    BYTE PTR [eax],al
  419788:	pop    esp
  419789:	fild   DWORD PTR [ecx+0x0]
  41978c:	add    DWORD PTR [eax],0xffffffd0
  41978f:	add    BYTE PTR [eax],bh
  419791:	or     BYTE PTR [eax],al
  419793:	add    al,al
  419795:	fild   DWORD PTR [ecx+0x0]
  419798:	add    DWORD PTR [eax],0xffffffd0
  41979b:	add    BYTE PTR [eax],bh
  41979d:	or     BYTE PTR [eax],al
  41979f:	add    BYTE PTR [eax],bh
  4197a1:	fld    DWORD PTR [ecx+0x0]
  4197a4:	add    DWORD PTR [eax],0xffffffd0
  4197a7:	add    BYTE PTR [eax],bh
  4197a9:	sbb    BYTE PTR [eax],al
  4197ab:	add    BYTE PTR [eax-0x7cffbe27],dl
  4197b1:	add    al,dl
  4197b3:	add    BYTE PTR [eax],bh
  4197b5:	sbb    BYTE PTR [eax],al
  4197b7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4197bb:	add    BYTE PTR [ebx+0x78005800],al
  4197c1:	or     BYTE PTR [eax],al
  4197c3:	add    BYTE PTR [esp+ebx*8+0x41],ch
  4197c7:	add    BYTE PTR [ebx+0x78005800],al
  4197cd:	or     BYTE PTR [eax],al
  4197cf:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4197d3:	add    BYTE PTR [ebx+0x58005800],al
  4197d9:	or     BYTE PTR [eax],al
  4197db:	add    BYTE PTR [esp+ebx*8+0x41],dl
  4197df:	add    BYTE PTR [ebx+0x58005800],al
  4197e5:	or     BYTE PTR [eax],al
  4197e7:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  4197eb:	add    BYTE PTR [ebx+0x18005800],al
  4197f1:	or     BYTE PTR [eax],al
  4197f3:	add    ah,dh
  4197f5:	fild   DWORD PTR [ecx+0x0]
  4197f8:	add    DWORD PTR [eax],0x58
  4197fb:	add    BYTE PTR [eax],bl
  4197fd:	or     BYTE PTR [eax],al
  4197ff:	add    BYTE PTR [eax],bh
  419801:	fld    DWORD PTR [ecx+0x0]
  419804:	add    DWORD PTR [eax],0x58
  419807:	add    BYTE PTR [eax],bl
  419809:	sbb    BYTE PTR [eax],al
  41980b:	add    ah,al
  41980d:	fld    DWORD PTR [ecx+0x0]
  419810:	add    DWORD PTR [eax],0x58
  419813:	add    BYTE PTR [eax],bl
  419815:	sbb    BYTE PTR [eax],al
  419817:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41981b:	add    BYTE PTR [ebx+0x38005800],al
  419821:	or     BYTE PTR [eax],al
  419823:	add    al,al
  419825:	fild   DWORD PTR [ecx+0x0]
  419828:	add    DWORD PTR [eax],0x58
  41982b:	add    BYTE PTR [eax],bh
  41982d:	or     BYTE PTR [eax],al
  41982f:	add    BYTE PTR [eax],bh
  419831:	fld    DWORD PTR [ecx+0x0]
  419834:	add    DWORD PTR [eax],0x58
  419837:	add    BYTE PTR [eax],bh
  419839:	sbb    BYTE PTR [eax],al
  41983b:	add    BYTE PTR [eax-0x7cffbe27],dl
  419841:	add    BYTE PTR [eax+0x0],bl
  419844:	cmp    BYTE PTR [eax],bl
  419846:	add    BYTE PTR [eax],al
  419848:	sbb    al,0xdd
  41984a:	inc    ecx
  41984b:	add    BYTE PTR [edx+0x18001400],al
  419851:	add    BYTE PTR [eax],al
  419853:	add    BYTE PTR [eax-0x7dffbe23],bh
  419859:	add    BYTE PTR [eax+eax*1],dl
  41985c:	sbb    BYTE PTR [eax],al
  41985e:	add    BYTE PTR [eax],al
  419860:	sbb    al,0xdd
  419862:	inc    ecx
  419863:	add    BYTE PTR [edx+0x38001400],al
  419869:	add    BYTE PTR [eax],al
  41986b:	add    BYTE PTR [eax-0x7dffbe23],bl
  419871:	add    BYTE PTR [eax+eax*1],dl
  419874:	cmp    BYTE PTR [eax],al
  419876:	add    BYTE PTR [eax],al
  419878:	sbb    al,0xdd
  41987a:	inc    ecx
  41987b:	add    BYTE PTR [edx+0x18001500],al
  419881:	add    BYTE PTR [eax],al
  419883:	add    BYTE PTR [eax-0x7dffbe23],bh
  419889:	add    BYTE PTR ds:0x1800,dl
  41988f:	add    BYTE PTR [ebx*8+0x820041],bl
  419896:	adc    eax,0x3800
  41989b:	add    BYTE PTR [eax-0x7dffbe23],bl
  4198a1:	add    BYTE PTR ds:0x3800,dl
  4198a7:	add    BYTE PTR [ebx*8+0x820041],bl
  4198ae:	add    BYTE PTR cs:[eax],bl
  4198b1:	add    BYTE PTR [eax],al
  4198b3:	add    BYTE PTR [esi+ebx*8],dh
  4198b6:	inc    ecx
  4198b7:	add    BYTE PTR [edx+0x18002e00],al
  4198bd:	add    BYTE PTR [eax],al
  4198bf:	add    BYTE PTR [ebx*8+0x820041],bl
  4198c6:	add    BYTE PTR cs:[eax],bh
  4198c9:	add    BYTE PTR [eax],al
  4198cb:	add    BYTE PTR [eax],bl
  4198cd:	fiadd  WORD PTR [ecx+0x0]
  4198d0:	add    BYTE PTR [eax],0x2e
  4198d3:	add    BYTE PTR [eax],bh
  4198d5:	add    BYTE PTR [eax],al
  4198d7:	add    BYTE PTR [eax-0x20],ah
  4198da:	inc    ecx
  4198db:	add    BYTE PTR [edx+0x7900bc00],al
  4198e1:	add    DWORD PTR [eax],eax
  4198e3:	add    BYTE PTR [edi+ebx*8-0x635ffbf],ch
  4198ea:	add    DWORD PTR [eax],eax
  4198ec:	sbb    BYTE PTR [eax],cl
  4198ee:	add    BYTE PTR [eax],al
  4198f0:	cmp    bh,bl
  4198f2:	inc    ecx
  4198f3:	add    dl,cl
  4198f5:	stc    
  4198f6:	add    DWORD PTR [eax],eax
  4198f8:	sbb    BYTE PTR [eax],ch
  4198fa:	add    BYTE PTR [eax],al
  4198fc:	add    BYTE PTR [eax],al
  4198fe:	add    BYTE PTR [eax],al
  419900:	sub    ah,ah
  419902:	inc    ecx
  419903:	add    BYTE PTR [edx],al
  419905:	add    BYTE PTR [eax+0x1800],ch
  41990b:	add    BYTE PTR [eax],dl
  41990d:	jecxz  0x419950
  41990f:	add    BYTE PTR [edx],al
  419911:	add    BYTE PTR [eax+0x1800],ch
  419917:	add    BYTE PTR [esp+eiz*8],al
  41991a:	inc    ecx
  41991b:	add    BYTE PTR [edx],al
  41991d:	add    BYTE PTR [ecx+0x11900],ch
  419923:	add    BYTE PTR [eax],cl
  419925:	jecxz  0x419968
  419927:	add    BYTE PTR [edx],al
  419929:	add    BYTE PTR [ecx+0x11a00],ch
  41992f:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  419933:	add    BYTE PTR [edx],cl
  419935:	add    dh,dh
  419937:	add    BYTE PTR [eax],bl
  419939:	add    BYTE PTR [eax],al
  41993b:	add    BYTE PTR [eax],bl
  41993d:	jecxz  0x419980
  41993f:	add    BYTE PTR [edx],cl
  419941:	add    dh,dh
  419943:	add    BYTE PTR [eax],bl
  419945:	add    BYTE PTR [eax],al
  419947:	add    BYTE PTR [ecx+eiz*8],ch
  41994a:	inc    ecx
  41994b:	add    BYTE PTR [edx],cl
  41994d:	add    bh,dh
  41994f:	add    BYTE PTR [ecx],bl
  419951:	add    DWORD PTR [eax],eax
  419953:	add    BYTE PTR [eax],ah
  419955:	jecxz  0x419998
  419957:	add    BYTE PTR [edx],cl
  419959:	add    bh,dh
  41995b:	add    BYTE PTR [edx],bl
  41995d:	add    DWORD PTR [eax],eax
  41995f:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  419966:	test   BYTE PTR [eax],al
  419968:	sbb    BYTE PTR [ecx],al
  41996a:	add    BYTE PTR [eax],al
  41996c:	push   esp
  41996d:	loope  0x4199b0
  41996f:	add    BYTE PTR [edx],al
  419971:	add    BYTE PTR [eax+eax*1+0x118],al
  419978:	pusha  
  419979:	loopne 0x4199bc
  41997b:	add    BYTE PTR [edx],al
  41997d:	add    BYTE PTR [ebp+0x11900],al
  419983:	add    BYTE PTR [eax+0x20041e1],dl
  419989:	add    BYTE PTR [ebp+0x11a00],al
  41998f:	add    ah,bl
  419991:	loop   0x4199d4
  419993:	add    BYTE PTR [edx],cl
  419995:	add    dh,dh
  419997:	add    BYTE PTR [eax],bl
  419999:	add    BYTE PTR [eax],al
  41999b:	add    ah,dl
  41999d:	loop   0x4199e0
  41999f:	add    BYTE PTR [edx],cl
  4199a1:	add    bh,dh
  4199a3:	add    BYTE PTR [eax+eax*1],bl
  4199a6:	add    BYTE PTR [eax],al
  4199a8:	int3   
  4199a9:	loop   0x4199ec
  4199ab:	add    BYTE PTR [edx],cl
  4199ad:	add    bh,dh
  4199af:	add    BYTE PTR ds:0xac000000,bl
  4199b5:	fild   WORD PTR [ecx+0x0]
  4199b8:	cli    
  4199b9:	stc    
  4199ba:	add    DWORD PTR [eax],eax
  4199bc:	sbb    BYTE PTR [eax],cl
  4199be:	add    BYTE PTR [eax],al
  4199c0:	cmp    bh,bl
  4199c2:	inc    ecx
  4199c3:	add    dl,bh
  4199c5:	stc    
  4199c6:	add    DWORD PTR [eax],eax
  4199c8:	sbb    BYTE PTR [eax],ch
  4199ca:	add    BYTE PTR [eax],al
  4199cc:	sbb    al,0xdd
  4199ce:	inc    ecx
  4199cf:	add    BYTE PTR [edx+0x78005c00],al
  4199d5:	add    BYTE PTR [eax],al
  4199d7:	add    BYTE PTR [esi+ebx*8],dh
  4199da:	inc    ecx
  4199db:	add    BYTE PTR [edx+0x78005c00],al
  4199e1:	add    BYTE PTR [eax],al
  4199e3:	add    BYTE PTR [ebx*8+0x820041],bl
  4199ea:	pop    esp
  4199eb:	add    BYTE PTR [eax+0x0],bl
  4199ee:	add    BYTE PTR [eax],al
  4199f0:	sbb    dh,bl
  4199f2:	inc    ecx
  4199f3:	add    BYTE PTR [edx+0x58005c00],al
  4199f9:	add    BYTE PTR [eax],al
  4199fb:	add    BYTE PTR [ebx*8+0x820041],bl
  419a02:	pop    esp
  419a03:	add    BYTE PTR [eax],bl
  419a05:	add    BYTE PTR [eax],al
  419a07:	add    BYTE PTR [eax-0x7dffbe23],bh
  419a0d:	add    BYTE PTR [eax+eax*1+0x18],bl
  419a11:	add    BYTE PTR [eax],al
  419a13:	add    BYTE PTR [ebx*8+0x820041],bl
  419a1a:	pop    esp
  419a1b:	add    BYTE PTR [eax],bh
  419a1d:	add    BYTE PTR [eax],al
  419a1f:	add    BYTE PTR [eax-0x7dffbe23],bl
  419a25:	add    BYTE PTR [eax+eax*1+0x38],bl
  419a29:	add    BYTE PTR [eax],al
  419a2b:	add    BYTE PTR [eax],al
  419a2d:	add    BYTE PTR [eax],al
  419a2f:	add    BYTE PTR [eax],ch
  419a31:	in     al,0x41
  419a33:	add    BYTE PTR [edx],al
  419a35:	add    BYTE PTR [eax+eax*1],ch
  419a38:	sbb    BYTE PTR [eax],al
  419a3a:	add    BYTE PTR [eax],al
  419a3c:	dec    eax
  419a3d:	loope  0x419a80
  419a3f:	add    BYTE PTR [edx+0x0],bl
  419a42:	add    DWORD PTR [eax],0x19
  419a45:	add    al,BYTE PTR [eax]
  419a47:	add    al,bh
  419a49:	loopne 0x419a8c
  419a4b:	add    BYTE PTR [edx+0x0],bl
  419a4e:	add    DWORD PTR [eax],0x19
  419a51:	add    al,BYTE PTR [eax]
  419a53:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  419a57:	add    BYTE PTR [edx+0x0],bl
  419a5a:	add    BYTE PTR [eax],0x18
  419a5d:	add    al,BYTE PTR [eax]
  419a5f:	add    BYTE PTR [esp+eiz*8],al
  419a62:	inc    ecx
  419a63:	add    BYTE PTR [edx],al
  419a65:	add    BYTE PTR ds:0x11900,ch
  419a6b:	add    BYTE PTR [ecx+eiz*8],ch
  419a6e:	inc    ecx
  419a6f:	add    BYTE PTR [edx+0x0],bl
  419a72:	add    DWORD PTR [eax],0x319
  419a78:	call   0x5a41dc5d
  419a7d:	add    BYTE PTR [ecx+0x21900],al
  419a83:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  419a8a:	sub    al,BYTE PTR [eax]
  419a8c:	sbb    BYTE PTR [ecx],al
  419a8e:	add    BYTE PTR [eax],al
  419a90:	push   esp
  419a91:	loope  0x419ad4
  419a93:	add    BYTE PTR [edx],al
  419a95:	add    BYTE PTR [eax],ch
  419a97:	add    BYTE PTR [eax],bl
  419a99:	add    eax,DWORD PTR [eax]
  419a9b:	add    BYTE PTR [eax-0x20],ah
  419a9e:	inc    ecx
  419a9f:	add    BYTE PTR [edx],al
  419aa1:	add    BYTE PTR [ebx],ch
  419aa3:	add    BYTE PTR [ecx],bl
  419aa5:	add    DWORD PTR [eax],eax
  419aa7:	add    BYTE PTR [eax+0x20041e1],dl
  419aad:	add    BYTE PTR [ecx],ch
  419aaf:	add    BYTE PTR [edx],bl
  419ab1:	add    eax,DWORD PTR [eax]
  419ab3:	add    ah,bl
  419ab5:	loop   0x419af8
  419ab7:	add    BYTE PTR [edx+0x0],bl
  419aba:	add    BYTE PTR [eax],0x18
  419abd:	add    al,BYTE PTR [eax]
  419abf:	add    ah,dl
  419ac1:	loop   0x419b04
  419ac3:	add    BYTE PTR [edx+0x0],bl
  419ac6:	add    DWORD PTR [eax],0x31c
  419acc:	int3   
  419acd:	loop   0x419b10
  419acf:	add    BYTE PTR [edx+0x0],bl
  419ad2:	add    DWORD PTR [eax],0x51d
  419ad8:	add    al,0xe2
  419ada:	inc    ecx
  419adb:	add    BYTE PTR [ecx+0x19000000],bl
  419ae1:	add    BYTE PTR [eax],al
  419ae3:	add    BYTE PTR [eax-0x1f],dl
  419ae6:	inc    ecx
  419ae7:	add    BYTE PTR [ecx+0x18000000],bl
  419aed:	add    al,BYTE PTR [eax]
  419aef:	add    BYTE PTR [eax],cl
  419af1:	stos   BYTE PTR es:[edi],al
  419af2:	add    DWORD PTR [ecx],eax
  419af4:	add    al,0xaa
  419af6:	add    DWORD PTR [ecx],eax
  419af8:	add    ch,BYTE PTR [edx-0x55fefeff]
  419afe:	add    DWORD PTR [ecx],eax
  419b00:	add    BYTE PTR [edx-0x1d0bfeff],ch
  419b06:	inc    ecx
  419b07:	add    BYTE PTR [ecx+0x1800ae00],bh
  419b0d:	add    al,BYTE PTR [eax]
  419b0f:	add    BYTE PTR [ebx*8+0x820041],bl
  419b16:	push   ecx
  419b17:	add    BYTE PTR [eax+0x0],bh
  419b1a:	add    BYTE PTR [eax],al
  419b1c:	xor    al,0xde
  419b1e:	inc    ecx
  419b1f:	add    BYTE PTR [edx+0x78005100],al
  419b25:	add    BYTE PTR [eax],al
  419b27:	add    BYTE PTR [ebx*8+0x820041],bl
  419b2e:	push   ecx
  419b2f:	add    BYTE PTR [eax+0x0],bl
  419b32:	add    BYTE PTR [eax],al
  419b34:	sbb    dh,bl
  419b36:	inc    ecx
  419b37:	add    BYTE PTR [edx+0x58005100],al
  419b3d:	add    BYTE PTR [eax],al
  419b3f:	add    BYTE PTR [ebx*8+0x820041],bl
  419b46:	push   ecx
  419b47:	add    BYTE PTR [eax],bl
  419b49:	add    BYTE PTR [eax],al
  419b4b:	add    BYTE PTR [eax-0x7dffbe23],bh
  419b51:	add    BYTE PTR [ecx+0x0],dl
  419b54:	sbb    BYTE PTR [eax],al
  419b56:	add    BYTE PTR [eax],al
  419b58:	sbb    al,0xdd
  419b5a:	inc    ecx
  419b5b:	add    BYTE PTR [edx+0x38005100],al
  419b61:	add    BYTE PTR [eax],al
  419b63:	add    BYTE PTR [eax-0x7dffbe23],bl
  419b69:	add    BYTE PTR [ecx+0x0],dl
  419b6c:	cmp    BYTE PTR [eax],al
  419b6e:	add    BYTE PTR [eax],al
  419b70:	add    al,0xe2
  419b72:	inc    ecx
  419b73:	add    cl,cl
  419b75:	add    BYTE PTR [ecx],al
  419b77:	add    BYTE PTR [ecx],bl
  419b79:	add    BYTE PTR [eax],al
  419b7b:	add    BYTE PTR [eax-0x1f],dl
  419b7e:	inc    ecx
  419b7f:	add    cl,cl
  419b81:	add    BYTE PTR [ecx],al
  419b83:	add    BYTE PTR [eax],bl
  419b85:	add    al,BYTE PTR [eax]
  419b87:	add    al,ch
  419b89:	loope  0x419bcc
  419b8b:	add    BYTE PTR [ecx+0x180012f9],bl
  419b91:	or     BYTE PTR [eax],al
  419b93:	add    al,dl
  419b95:	loope  0x419bd8
  419b97:	add    BYTE PTR [ecx+0x180012f9],bl
  419b9d:	sub    BYTE PTR [eax],al
  419b9f:	add    BYTE PTR [edx+eiz*8],al
  419ba2:	inc    ecx
  419ba3:	add    BYTE PTR [ecx+0x19000000],cl
  419ba9:	add    BYTE PTR [eax],al
  419bab:	add    BYTE PTR [eax-0x1f],dl
  419bae:	inc    ecx
  419baf:	add    BYTE PTR [ecx+0x18000000],cl
  419bb5:	add    al,BYTE PTR [eax]
  419bb7:	add    al,ch
  419bb9:	jecxz  0x419bfc
  419bbb:	add    BYTE PTR [ecx+0x1800de01],al
  419bc1:	add    BYTE PTR [eax],al
  419bc3:	add    BYTE PTR [ebx+eiz*8],al
  419bc6:	inc    ecx
  419bc7:	add    BYTE PTR [ecx+0x18000100],bl
  419bcd:	add    al,BYTE PTR [eax]
  419bcf:	add    BYTE PTR [eax],dl
  419bd1:	fld    QWORD PTR [ecx+0x0]
  419bd4:	add    DWORD PTR [eax],0xffffffc6
  419bd7:	add    BYTE PTR [eax],bl
  419bd9:	add    BYTE PTR [eax],al
  419bdb:	add    BYTE PTR [ebp+ebx*8+0x830041],ch
  419be2:	mov    BYTE PTR [eax],0x18
  419be5:	add    BYTE PTR [eax],al
  419be7:	add    BYTE PTR [eax],dl
  419be9:	fld    QWORD PTR [ecx+0x0]
  419bec:	add    DWORD PTR [eax],0xffffffc6
  419bef:	add    BYTE PTR [eax],bh
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [ebp+ebx*8+0x830041],cl
  419bfa:	mov    BYTE PTR [eax],0x38
  419bfd:	add    BYTE PTR [eax],al
  419bff:	add    BYTE PTR [eax-0x7cffbe21],cl
  419c05:	cmp    bh,dh
  419c07:	add    BYTE PTR [eax+0x8],bl
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	adc    al,0xdf
  419c0e:	inc    ecx
  419c0f:	add    BYTE PTR [ebx+0x5800f738],al
  419c15:	sub    BYTE PTR [eax],al
  419c17:	add    BYTE PTR [ecx+eiz*8+0x830041],al
  419c1e:	lods   al,BYTE PTR ds:[esi]
  419c1f:	add    BYTE PTR [edx],bl
  419c21:	add    eax,DWORD PTR [eax]
  419c23:	add    BYTE PTR [eax-0x1f],bh
  419c26:	inc    ecx
  419c27:	add    BYTE PTR [ebx+0x1a00ad00],al
  419c2d:	add    eax,DWORD PTR [eax]
  419c2f:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  419c33:	add    BYTE PTR [edx+0x0],bl
  419c36:	rol    BYTE PTR [eax],1
  419c38:	sbb    BYTE PTR [edx],al
  419c3a:	add    BYTE PTR [eax],al
  419c3c:	pop    esp
  419c3d:	loope  0x419c80
  419c3f:	add    BYTE PTR [edx+0x0],bl
  419c42:	rol    BYTE PTR [eax],cl
  419c44:	sbb    BYTE PTR [edx],al
  419c46:	add    BYTE PTR [eax],al
  419c48:	fs loope 0x419c8c
  419c4b:	add    BYTE PTR [edx+0x0],bl
  419c4e:	rol    BYTE PTR [eax],0x18
  419c51:	add    al,BYTE PTR [eax]
  419c53:	add    BYTE PTR [ecx+eiz*8],dh
  419c56:	inc    ecx
  419c57:	add    BYTE PTR [edx+0x0],bl
  419c5a:	rol    DWORD PTR [eax],1
  419c5c:	sbb    DWORD PTR [edx],eax
  419c5e:	add    BYTE PTR [eax],al
  419c60:	sbb    al,0xe1
  419c62:	inc    ecx
  419c63:	add    BYTE PTR [edx+0x0],bl
  419c66:	rol    DWORD PTR [eax],cl
  419c68:	sbb    DWORD PTR [edx],eax
  419c6a:	add    BYTE PTR [eax],al
  419c6c:	and    al,0xe1
  419c6e:	inc    ecx
  419c6f:	add    BYTE PTR [edx+0x0],bl
  419c72:	rol    DWORD PTR [eax],0x19
  419c75:	add    al,BYTE PTR [eax]
  419c77:	add    BYTE PTR [eax-0x7cffbe21],cl
  419c7d:	cmp    bh,dh
  419c7f:	add    BYTE PTR [eax],bh
  419c81:	or     BYTE PTR [eax],al
  419c83:	add    BYTE PTR [edi+ebx*8],dl
  419c86:	inc    ecx
  419c87:	add    BYTE PTR [ebx+0x3800f738],al
  419c8d:	sub    BYTE PTR [eax],al
  419c8f:	add    BYTE PTR [ecx+eiz*8+0x830041],al
  419c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c97:	add    BYTE PTR [edx],bl
  419c99:	add    eax,DWORD PTR [eax]
  419c9b:	add    BYTE PTR [eax-0x1f],bh
  419c9e:	inc    ecx
  419c9f:	add    BYTE PTR [ebx+0x1a00a500],al
  419ca5:	add    eax,DWORD PTR [eax]
  419ca7:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  419cab:	add    BYTE PTR [edx+0x0],cl
  419cae:	rol    BYTE PTR [eax],1
  419cb0:	sbb    BYTE PTR [edx],al
  419cb2:	add    BYTE PTR [eax],al
  419cb4:	pop    esp
  419cb5:	loope  0x419cf8
  419cb7:	add    BYTE PTR [edx+0x0],cl
  419cba:	rol    BYTE PTR [eax],cl
  419cbc:	sbb    BYTE PTR [edx],al
  419cbe:	add    BYTE PTR [eax],al
  419cc0:	fs loope 0x419d04
  419cc3:	add    BYTE PTR [edx+0x0],cl
  419cc6:	rol    BYTE PTR [eax],0x18
  419cc9:	add    al,BYTE PTR [eax]
  419ccb:	add    BYTE PTR [ecx+eiz*8],dh
  419cce:	inc    ecx
  419ccf:	add    BYTE PTR [edx+0x0],cl
  419cd2:	rol    DWORD PTR [eax],1
  419cd4:	sbb    DWORD PTR [edx],eax
  419cd6:	add    BYTE PTR [eax],al
  419cd8:	sbb    al,0xe1
  419cda:	inc    ecx
  419cdb:	add    BYTE PTR [edx+0x0],cl
  419cde:	rol    DWORD PTR [eax],cl
  419ce0:	sbb    DWORD PTR [edx],eax
  419ce2:	add    BYTE PTR [eax],al
  419ce4:	and    al,0xe1
  419ce6:	inc    ecx
  419ce7:	add    BYTE PTR [edx+0x0],cl
  419cea:	rol    DWORD PTR [eax],0x19
  419ced:	add    al,BYTE PTR [eax]
  419cef:	add    BYTE PTR [ebx+eiz*8],al
  419cf2:	inc    ecx
  419cf3:	add    BYTE PTR [ecx+0x18000100],cl
  419cf9:	add    al,BYTE PTR [eax]
  419cfb:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419cff:	add    BYTE PTR [ecx+0x18009800],al
  419d05:	add    al,BYTE PTR [eax]
  419d07:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d0b:	add    BYTE PTR [ecx+0x18009a00],al
  419d11:	add    al,BYTE PTR [eax]
  419d13:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d17:	add    BYTE PTR [ecx+0x18009000],al
  419d1d:	add    al,BYTE PTR [eax]
  419d1f:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d23:	add    BYTE PTR [ecx+0x18009900],al
  419d29:	add    al,BYTE PTR [eax]
  419d2b:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d2f:	add    BYTE PTR [ecx+0x18009b00],al
  419d35:	add    al,BYTE PTR [eax]
  419d37:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d3b:	add    BYTE PTR [ecx+0x18009100],al
  419d41:	add    al,BYTE PTR [eax]
  419d43:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d47:	add    BYTE PTR [ecx+0x18009500],al
  419d4d:	add    al,BYTE PTR [eax]
  419d4f:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d53:	add    BYTE PTR [ecx+0x18009e00],al
  419d59:	add    al,BYTE PTR [eax]
  419d5b:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d5f:	add    BYTE PTR [ecx+0x18009c00],al
  419d65:	add    al,BYTE PTR [eax]
  419d67:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d6b:	add    BYTE PTR [ecx+0x18009d00],al
  419d71:	add    al,BYTE PTR [eax]
  419d73:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d77:	add    BYTE PTR [ecx+0x18009f00],al
  419d7d:	add    al,BYTE PTR [eax]
  419d7f:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d83:	add    BYTE PTR [ecx+0x18009400],al
  419d89:	add    al,BYTE PTR [eax]
  419d8b:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d8f:	add    BYTE PTR [ecx+0x18009600],al
  419d95:	add    al,BYTE PTR [eax]
  419d97:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419d9b:	add    BYTE PTR [ecx+0x18009200],al
  419da1:	add    al,BYTE PTR [eax]
  419da3:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419da7:	add    BYTE PTR [ecx+0x18009300],al
  419dad:	add    al,BYTE PTR [eax]
  419daf:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  419db3:	add    BYTE PTR [ecx+0x18009700],al
  419db9:	add    al,BYTE PTR [eax]
  419dbb:	add    BYTE PTR [eax],cl
  419dbd:	scas   al,BYTE PTR es:[edi]
  419dbe:	add    DWORD PTR [ecx],eax
  419dc0:	add    al,0xae
  419dc2:	add    DWORD PTR [ecx],eax
  419dc4:	add    ch,BYTE PTR [esi-0x51fefeff]
  419dca:	add    DWORD PTR [ecx],eax
  419dcc:	add    BYTE PTR [esi-0x1bd7feff],ch
  419dd2:	inc    ecx
  419dd3:	add    BYTE PTR [edx],al
  419dd5:	add    BYTE PTR [eax+eax*1],bl
  419dd8:	sbb    BYTE PTR [eax],al
  419dda:	add    BYTE PTR [eax],al
  419ddc:	dec    eax
  419ddd:	loope  0x419e20
  419ddf:	add    BYTE PTR [edx],bh
  419de1:	add    BYTE PTR [ebx+0x21900],al
  419de7:	add    al,bh
  419de9:	loopne 0x419e2c
  419deb:	add    BYTE PTR [edx],bh
  419ded:	add    BYTE PTR [ebx+0x21900],al
  419df3:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  419df7:	add    BYTE PTR [edx],bh
  419df9:	add    BYTE PTR [eax+0x21800],al
  419dff:	add    BYTE PTR [esp+eiz*8],al
  419e02:	inc    ecx
  419e03:	add    BYTE PTR [edx],al
  419e05:	add    BYTE PTR ds:0x11900,bl
  419e0b:	add    BYTE PTR [ecx+eiz*8],ch
  419e0e:	inc    ecx
  419e0f:	add    BYTE PTR [edx],bh
  419e11:	add    BYTE PTR [ecx+0x31900],al
  419e17:	add    al,ch
  419e19:	loopne 0x419e5c
  419e1b:	add    BYTE PTR [edx],bh
  419e1d:	add    BYTE PTR [ecx+0x21900],al
  419e23:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  419e2a:	sbb    al,BYTE PTR [eax]
  419e2c:	sbb    BYTE PTR [ecx],al
  419e2e:	add    BYTE PTR [eax],al
  419e30:	push   esp
  419e31:	loope  0x419e74
  419e33:	add    BYTE PTR [edx],al
  419e35:	add    BYTE PTR [eax],bl
  419e37:	add    BYTE PTR [eax],bl
  419e39:	add    eax,DWORD PTR [eax]
  419e3b:	add    BYTE PTR [eax-0x20],ah
  419e3e:	inc    ecx
  419e3f:	add    BYTE PTR [edx],al
  419e41:	add    BYTE PTR [ebx],bl
  419e43:	add    BYTE PTR [ecx],bl
  419e45:	add    DWORD PTR [eax],eax
  419e47:	add    BYTE PTR [eax+0x20041e1],dl
  419e4d:	add    BYTE PTR [ecx],bl
  419e4f:	add    BYTE PTR [edx],bl
  419e51:	add    eax,DWORD PTR [eax]
  419e53:	add    ah,bl
  419e55:	loop   0x419e98
  419e57:	add    BYTE PTR [edx],bh
  419e59:	add    BYTE PTR [eax+0x21800],al
  419e5f:	add    ah,dl
  419e61:	loop   0x419ea4
  419e63:	add    BYTE PTR [edx],bh
  419e65:	add    BYTE PTR [ecx+0x31c00],al
  419e6b:	add    ah,cl
  419e6d:	loop   0x419eb0
  419e6f:	add    BYTE PTR [edx],bh
  419e71:	add    BYTE PTR [ecx+0x51d00],al
  419e77:	add    BYTE PTR [eax-0x7cffbe21],cl
  419e7d:	cmp    bh,dh
  419e7f:	add    BYTE PTR [eax+0x8],bh
  419e82:	add    BYTE PTR [eax],al
  419e84:	adc    al,0xdf
  419e86:	inc    ecx
  419e87:	add    BYTE PTR [ebx+0x7800f738],al
  419e8d:	sub    BYTE PTR [eax],al
  419e8f:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  419e93:	add    BYTE PTR [edx+0x0],bh
  419e96:	rol    BYTE PTR [eax],1
  419e98:	sbb    BYTE PTR [edx],al
  419e9a:	add    BYTE PTR [eax],al
  419e9c:	pop    esp
  419e9d:	loope  0x419ee0
  419e9f:	add    BYTE PTR [edx+0x0],bh
  419ea2:	rol    BYTE PTR [eax],cl
  419ea4:	sbb    BYTE PTR [edx],al
  419ea6:	add    BYTE PTR [eax],al
  419ea8:	fs loope 0x419eec
  419eab:	add    BYTE PTR [edx+0x0],bh
  419eae:	rol    BYTE PTR [eax],0x18
  419eb1:	add    al,BYTE PTR [eax]
  419eb3:	add    BYTE PTR [ecx+eiz*8],dh
  419eb6:	inc    ecx
  419eb7:	add    BYTE PTR [edx+0x0],bh
  419eba:	rol    DWORD PTR [eax],1
  419ebc:	sbb    DWORD PTR [edx],eax
  419ebe:	add    BYTE PTR [eax],al
  419ec0:	sbb    al,0xe1
  419ec2:	inc    ecx
  419ec3:	add    BYTE PTR [edx+0x0],bh
  419ec6:	rol    DWORD PTR [eax],cl
  419ec8:	sbb    DWORD PTR [edx],eax
  419eca:	add    BYTE PTR [eax],al
  419ecc:	and    al,0xe1
  419ece:	inc    ecx
  419ecf:	add    BYTE PTR [edx+0x0],bh
  419ed2:	rol    DWORD PTR [eax],0x19
  419ed5:	add    al,BYTE PTR [eax]
  419ed7:	add    BYTE PTR [ebx*8+0x820041],bl
  419ede:	push   edx
  419edf:	add    BYTE PTR [eax+0x0],bh
  419ee2:	add    BYTE PTR [eax],al
  419ee4:	xor    al,0xde
  419ee6:	inc    ecx
  419ee7:	add    BYTE PTR [edx+0x78005200],al
  419eed:	add    BYTE PTR [eax],al
  419eef:	add    BYTE PTR [ebx*8+0x820041],bl
  419ef6:	push   edx
  419ef7:	add    BYTE PTR [eax],bl
  419ef9:	add    BYTE PTR [eax],al
  419efb:	add    BYTE PTR [eax-0x7dffbe23],bh
  419f01:	add    BYTE PTR [edx+0x0],dl
  419f04:	sbb    BYTE PTR [eax],al
  419f06:	add    BYTE PTR [eax],al
  419f08:	adc    ch,bl
  419f0a:	inc    ecx
  419f0b:	add    BYTE PTR [ebx+0x38000a3a],al
  419f11:	add    BYTE PTR [eax],al
  419f13:	add    BYTE PTR [ebp+ebx*8+0x3a830041],ch
  419f1a:	or     al,BYTE PTR [eax]
  419f1c:	cmp    BYTE PTR [eax],al
  419f1e:	add    BYTE PTR [eax],al
  419f20:	adc    ch,bl
  419f22:	inc    ecx
  419f23:	add    BYTE PTR [ebx+0x38000b3a],al
  419f29:	add    BYTE PTR [eax],al
  419f2b:	add    BYTE PTR [ebp+ebx*8+0x3a830041],cl
  419f32:	or     eax,DWORD PTR [eax]
  419f34:	cmp    BYTE PTR [eax],al
  419f36:	add    BYTE PTR [eax],al
  419f38:	adc    ch,bl
  419f3a:	inc    ecx
  419f3b:	add    BYTE PTR [ebx+0x3800083a],al
  419f41:	add    BYTE PTR [eax],al
  419f43:	add    BYTE PTR [ebp+ebx*8+0x3a830041],ch
  419f4a:	or     BYTE PTR [eax],al
  419f4c:	cmp    BYTE PTR [eax],al
  419f4e:	add    BYTE PTR [eax],al
  419f50:	adc    ch,bl
  419f52:	inc    ecx
  419f53:	add    BYTE PTR [ebx+0x3800093a],al
  419f59:	add    BYTE PTR [eax],al
  419f5b:	add    BYTE PTR [ebp+ebx*8+0x3a830041],cl
  419f62:	or     DWORD PTR [eax],eax
  419f64:	cmp    BYTE PTR [eax],al
  419f66:	add    BYTE PTR [eax],al
  419f68:	mov    al,ds:0x830041df
  419f6d:	cmp    dh,al
  419f6f:	add    BYTE PTR [eax+0x8],bl
  419f72:	add    BYTE PTR [eax],al
  419f74:	sub    al,0xdf
  419f76:	inc    ecx
  419f77:	add    BYTE PTR [ebx+0x5800f03a],al
  419f7d:	sub    BYTE PTR [eax],al
  419f7f:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  419f83:	add    BYTE PTR [edx],bl
  419f85:	add    al,dl
  419f87:	add    BYTE PTR [eax],bl
  419f89:	add    al,BYTE PTR [eax]
  419f8b:	add    BYTE PTR [ecx+eiz*8+0x41],bl
  419f8f:	add    BYTE PTR [edx],bl
  419f91:	add    dl,dl
  419f93:	add    BYTE PTR [eax],bl
  419f95:	add    al,BYTE PTR [eax]
  419f97:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  419f9b:	add    BYTE PTR [edx],bl
  419f9d:	add    al,al
  419f9f:	add    BYTE PTR [eax],bl
  419fa1:	add    al,BYTE PTR [eax]
  419fa3:	add    BYTE PTR [ecx+eiz*8],dh
  419fa6:	inc    ecx
  419fa7:	add    BYTE PTR [edx],bl
  419fa9:	add    cl,dl
  419fab:	add    BYTE PTR [ecx],bl
  419fad:	add    al,BYTE PTR [eax]
  419faf:	add    BYTE PTR [ecx+eiz*8],bl
  419fb2:	inc    ecx
  419fb3:	add    BYTE PTR [edx],bl
  419fb5:	add    bl,dl
  419fb7:	add    BYTE PTR [ecx],bl
  419fb9:	add    al,BYTE PTR [eax]
  419fbb:	add    BYTE PTR [ecx+eiz*8],ah
  419fbe:	inc    ecx
  419fbf:	add    BYTE PTR [edx],bl
  419fc1:	add    cl,al
  419fc3:	add    BYTE PTR [ecx],bl
  419fc5:	add    al,BYTE PTR [eax]
  419fc7:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  419fcb:	add    BYTE PTR [edx],cl
  419fcd:	add    al,dl
  419fcf:	add    BYTE PTR [eax],bl
  419fd1:	add    al,BYTE PTR [eax]
  419fd3:	add    BYTE PTR [ecx+eiz*8+0x41],bl
  419fd7:	add    BYTE PTR [edx],cl
  419fd9:	add    dl,dl
  419fdb:	add    BYTE PTR [eax],bl
  419fdd:	add    al,BYTE PTR [eax]
  419fdf:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  419fe3:	add    BYTE PTR [edx],cl
  419fe5:	add    al,al
  419fe7:	add    BYTE PTR [eax],bl
  419fe9:	add    al,BYTE PTR [eax]
  419feb:	add    BYTE PTR [ecx+eiz*8],dh
  419fee:	inc    ecx
  419fef:	add    BYTE PTR [edx],cl
  419ff1:	add    cl,dl
  419ff3:	add    BYTE PTR [ecx],bl
  419ff5:	add    al,BYTE PTR [eax]
  419ff7:	add    BYTE PTR [ecx+eiz*8],bl
  419ffa:	inc    ecx
  419ffb:	add    BYTE PTR [edx],cl
  419ffd:	add    bl,dl
  419fff:	add    BYTE PTR [ecx],bl
  41a001:	add    al,BYTE PTR [eax]
  41a003:	add    BYTE PTR [ecx+eiz*8],ah
  41a006:	inc    ecx
  41a007:	add    BYTE PTR [edx],cl
  41a009:	add    cl,al
  41a00b:	add    BYTE PTR [ecx],bl
  41a00d:	add    al,BYTE PTR [eax]
  41a00f:	add    BYTE PTR [eax],al
  41a011:	add    BYTE PTR [eax],al
  41a013:	add    BYTE PTR [eax],al
  41a015:	add    bl,cl
  41a017:	add    BYTE PTR [esi],bl
  41a019:	add    BYTE PTR [eax],al
  41a01b:	add    BYTE PTR [eax-0x1d],ah
  41a01e:	inc    ecx
  41a01f:	add    BYTE PTR [ecx],al
  41a021:	add    bl,cl
  41a023:	add    BYTE PTR [esi],bl
	...
  41a02d:	add    bl,cl
  41a02f:	add    BYTE PTR [eax],bl
  41a031:	add    BYTE PTR [eax],al
  41a033:	add    BYTE PTR [eax-0x1d],ah
  41a036:	inc    ecx
  41a037:	add    BYTE PTR [ecx],al
  41a039:	add    bl,cl
  41a03b:	add    BYTE PTR [eax],bl
	...
  41a045:	add    BYTE PTR [eax],al
  41a047:	add    BYTE PTR [eax],bl
  41a049:	add    BYTE PTR [eax],al
  41a04b:	add    BYTE PTR [eax-0x1d],ah
  41a04e:	inc    ecx
  41a04f:	add    BYTE PTR [ecx],al
  41a051:	add    BYTE PTR [eax],al
  41a053:	add    BYTE PTR [eax],bl
  41a055:	add    BYTE PTR [eax],al
  41a057:	add    BYTE PTR [edx+eiz*8],al
  41a05a:	inc    ecx
  41a05b:	add    cl,ch
  41a05d:	add    bh,al
  41a05f:	add    BYTE PTR [ecx],bl
  41a061:	add    BYTE PTR [eax],al
  41a063:	add    al,bh
  41a065:	loope  0x41a0a8
  41a067:	add    BYTE PTR [ecx+0x7900ae00],bl
  41a06d:	add    BYTE PTR [eax],al
  41a06f:	add    al,bh
  41a071:	loope  0x41a0b4
  41a073:	add    BYTE PTR [ecx+0x7900ae00],cl
  41a079:	add    BYTE PTR [eax],al
  41a07b:	add    BYTE PTR [eax],al
  41a07d:	add    BYTE PTR [eax],al
  41a07f:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  41a083:	add    BYTE PTR [edx],bh
  41a085:	add    al,dl
  41a087:	add    BYTE PTR [eax],bl
  41a089:	add    al,BYTE PTR [eax]
  41a08b:	add    BYTE PTR [ecx+eiz*8+0x41],bl
  41a08f:	add    BYTE PTR [edx],bh
  41a091:	add    dl,dl
  41a093:	add    BYTE PTR [eax],bl
  41a095:	add    al,BYTE PTR [eax]
  41a097:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41a09b:	add    BYTE PTR [edx],bh
  41a09d:	add    al,al
  41a09f:	add    BYTE PTR [eax],bl
  41a0a1:	add    al,BYTE PTR [eax]
  41a0a3:	add    BYTE PTR [ecx+eiz*8],dh
  41a0a6:	inc    ecx
  41a0a7:	add    BYTE PTR [edx],bh
  41a0a9:	add    cl,dl
  41a0ab:	add    BYTE PTR [ecx],bl
  41a0ad:	add    al,BYTE PTR [eax]
  41a0af:	add    BYTE PTR [ecx+eiz*8],bl
  41a0b2:	inc    ecx
  41a0b3:	add    BYTE PTR [edx],bh
  41a0b5:	add    bl,dl
  41a0b7:	add    BYTE PTR [ecx],bl
  41a0b9:	add    al,BYTE PTR [eax]
  41a0bb:	add    BYTE PTR [ecx+eiz*8],ah
  41a0be:	inc    ecx
  41a0bf:	add    BYTE PTR [edx],bh
  41a0c1:	add    cl,al
  41a0c3:	add    BYTE PTR [ecx],bl
  41a0c5:	add    al,BYTE PTR [eax]
  41a0c7:	add    BYTE PTR [ebx*8+0x820041],bl
  41a0ce:	push   ebx
  41a0cf:	add    BYTE PTR [eax+0x0],bh
  41a0d2:	add    BYTE PTR [eax],al
  41a0d4:	xor    al,0xde
  41a0d6:	inc    ecx
  41a0d7:	add    BYTE PTR [edx+0x78005300],al
  41a0dd:	add    BYTE PTR [eax],al
  41a0df:	add    BYTE PTR [ebx*8+0x820041],bl
  41a0e6:	push   ebx
  41a0e7:	add    BYTE PTR [eax],bl
  41a0e9:	add    BYTE PTR [eax],al
  41a0eb:	add    BYTE PTR [eax-0x7dffbe23],bh
  41a0f1:	add    BYTE PTR [ebx+0x0],dl
  41a0f4:	sbb    BYTE PTR [eax],al
  41a0f6:	add    BYTE PTR [eax],al
  41a0f8:	ins    BYTE PTR es:[edi],dx
  41a0f9:	loope  0x41a13c
  41a0fb:	add    BYTE PTR [edx],ch
  41a0fd:	add    al,dl
  41a0ff:	add    BYTE PTR [eax],bl
  41a101:	add    al,BYTE PTR [eax]
  41a103:	add    BYTE PTR [ecx+eiz*8+0x41],bl
  41a107:	add    BYTE PTR [edx],ch
  41a109:	add    dl,dl
  41a10b:	add    BYTE PTR [eax],bl
  41a10d:	add    al,BYTE PTR [eax]
  41a10f:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41a113:	add    BYTE PTR [edx],ch
  41a115:	add    al,al
  41a117:	add    BYTE PTR [eax],bl
  41a119:	add    al,BYTE PTR [eax]
  41a11b:	add    BYTE PTR [ecx+eiz*8],dh
  41a11e:	inc    ecx
  41a11f:	add    BYTE PTR [edx],ch
  41a121:	add    cl,dl
  41a123:	add    BYTE PTR [ecx],bl
  41a125:	add    al,BYTE PTR [eax]
  41a127:	add    BYTE PTR [ecx+eiz*8],bl
  41a12a:	inc    ecx
  41a12b:	add    BYTE PTR [edx],ch
  41a12d:	add    bl,dl
  41a12f:	add    BYTE PTR [ecx],bl
  41a131:	add    al,BYTE PTR [eax]
  41a133:	add    BYTE PTR [ecx+eiz*8],ah
  41a136:	inc    ecx
  41a137:	add    BYTE PTR [edx],ch
  41a139:	add    cl,al
  41a13b:	add    BYTE PTR [ecx],bl
  41a13d:	add    al,BYTE PTR [eax]
  41a13f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a145:	add    bh,ch
  41a147:	add    BYTE PTR [eax],bl
  41a149:	add    BYTE PTR [eax],al
  41a14b:	add    al,bh
  41a14d:	fiadd  WORD PTR [ecx+0x0]
  41a150:	add    BYTE PTR [eax],0xef
  41a153:	add    BYTE PTR [eax],bl
  41a155:	add    DWORD PTR [eax],eax
  41a157:	add    BYTE PTR [ebx*8+0x820041],bl
  41a15e:	out    dx,eax
  41a15f:	add    BYTE PTR [eax],bh
  41a161:	add    BYTE PTR [eax],al
  41a163:	add    BYTE PTR [esi+ebx*8+0x41],ch
  41a167:	add    BYTE PTR [edx+0x3800ef00],al
  41a16d:	add    DWORD PTR [eax],eax
  41a16f:	add    BYTE PTR [ebx+eiz*8+0x41],ah
  41a173:	add    BYTE PTR [ecx],al
  41a175:	add    BYTE PTR [edx+0x0],ch
  41a178:	sbb    al,0x0
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	pusha  
  41a17d:	jecxz  0x41a1c0
  41a17f:	add    BYTE PTR [ecx],al
  41a181:	add    BYTE PTR [eax+0x0],ch
  41a184:	sbb    al,0x0
  41a186:	add    BYTE PTR [eax],al
  41a188:	in     al,dx
  41a189:	loop   0x41a1cc
  41a18b:	add    BYTE PTR [ecx+0x0],ch
  41a18e:	inc    DWORD PTR [eax]
  41a190:	sbb    BYTE PTR [eax],al
  41a192:	add    BYTE PTR [eax],al
  41a194:	and    bl,0x41
  41a197:	add    BYTE PTR [ecx],al
  41a199:	add    BYTE PTR [eax+0x0],dl
  41a19c:	sbb    BYTE PTR [eax],al
  41a19e:	add    BYTE PTR [eax],al
  41a1a0:	add    bl,ah
  41a1a2:	inc    ecx
  41a1a3:	add    BYTE PTR [ecx+0x0],ch
  41a1a6:	inc    DWORD PTR [eax]
  41a1a8:	sbb    al,0x0
  41a1aa:	add    BYTE PTR [eax],al
  41a1ac:	cwde   
  41a1ad:	jecxz  0x41a1f0
  41a1af:	add    BYTE PTR [ecx],al
  41a1b1:	add    BYTE PTR [eax+0x0],dl
  41a1b4:	sbb    al,0x0
  41a1b6:	add    BYTE PTR [eax],al
  41a1b8:	fs jecxz 0x41a1fc
  41a1bb:	add    BYTE PTR [ecx],al
  41a1bd:	add    BYTE PTR [edx+0x0],ch
  41a1c0:	sbb    BYTE PTR [eax],al
  41a1c2:	add    BYTE PTR [eax],al
  41a1c4:	push   0x10041e3
  41a1c9:	add    BYTE PTR [edx+0x0],ch
  41a1cc:	sbb    BYTE PTR [eax],al
  41a1ce:	add    BYTE PTR [eax],al
  41a1d0:	je     0x41a1b5
  41a1d2:	inc    ecx
  41a1d3:	add    BYTE PTR [ecx],al
  41a1d5:	add    BYTE PTR [eax+0x0],ch
  41a1d8:	sbb    DWORD PTR [eax],eax
  41a1da:	add    BYTE PTR [eax],al
  41a1dc:	jo     0x41a1c1
  41a1de:	inc    ecx
  41a1df:	add    BYTE PTR [ecx],al
  41a1e1:	add    BYTE PTR [eax+0x0],ch
  41a1e4:	sbb    DWORD PTR [eax],eax
  41a1e6:	add    BYTE PTR [eax],al
  41a1e8:	inc    esp
  41a1e9:	in     al,0x41
  41a1eb:	add    BYTE PTR [ecx+0x1800a000],al
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [eax-0x1c],al
  41a1f6:	inc    ecx
  41a1f7:	add    BYTE PTR [ecx+0x1800a800],al
  41a1fd:	add    BYTE PTR [eax],al
  41a1ff:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a205:	add    BYTE PTR [ecx+0x0],ah
  41a208:	sbb    BYTE PTR [eax],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	in     al,0xde
  41a20e:	inc    ecx
  41a20f:	add    BYTE PTR [edx+0x18006100],al
  41a215:	add    BYTE PTR [eax],al
  41a217:	add    BYTE PTR [ebx*8+0x820041],bl
  41a21e:	popa   
  41a21f:	add    BYTE PTR [eax],bh
  41a221:	add    BYTE PTR [eax],al
  41a223:	add    ah,cl
  41a225:	fld    QWORD PTR [ecx+0x0]
  41a228:	add    BYTE PTR [eax],0x61
  41a22b:	add    BYTE PTR [eax],bh
  41a22d:	add    BYTE PTR [eax],al
  41a22f:	add    BYTE PTR [ebx*8+0x820041],bl
  41a236:	ins    BYTE PTR es:[edi],dx
  41a237:	add    BYTE PTR [eax],bh
  41a239:	add    BYTE PTR [eax],al
  41a23b:	add    BYTE PTR [eax-0x7dffbe23],bl
  41a241:	add    BYTE PTR [eax+eax*1+0x38],ch
  41a245:	add    BYTE PTR [eax],al
  41a247:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a24d:	add    BYTE PTR [edx+0x0],ah
  41a250:	sbb    BYTE PTR [eax],al
  41a252:	add    BYTE PTR [eax],al
  41a254:	in     al,0xde
  41a256:	inc    ecx
  41a257:	add    BYTE PTR [edx+0x18006200],al
  41a25d:	add    BYTE PTR [eax],al
  41a25f:	add    BYTE PTR [ebx*8+0x820041],bl
  41a266:	bound  eax,QWORD PTR [eax]
  41a268:	cmp    BYTE PTR [eax],al
  41a26a:	add    BYTE PTR [eax],al
  41a26c:	mov    eax,0x820041dd
  41a271:	add    BYTE PTR [edx+0x0],ah
  41a274:	cmp    BYTE PTR [eax],al
  41a276:	add    BYTE PTR [eax],al
  41a278:	mov    dh,bl
  41a27a:	inc    ecx
  41a27b:	add    BYTE PTR [edx+0x18006000],al
  41a281:	add    BYTE PTR [eax],al
  41a283:	add    ah,ah
  41a285:	fiadd  WORD PTR [ecx+0x0]
  41a288:	add    BYTE PTR [eax],0x60
  41a28b:	add    BYTE PTR [eax],bl
  41a28d:	add    BYTE PTR [eax],al
  41a28f:	add    BYTE PTR [ebx*8+0x820041],bl
  41a296:	pusha  
  41a297:	add    BYTE PTR [eax],bh
  41a299:	add    BYTE PTR [eax],al
  41a29b:	add    ah,ch
  41a29d:	fld    QWORD PTR [ecx+0x0]
  41a2a0:	add    BYTE PTR [eax],0x60
  41a2a3:	add    BYTE PTR [eax],bh
  41a2a5:	add    BYTE PTR [eax],al
  41a2a7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a2ad:	add    BYTE PTR [ecx+0x0],ch
  41a2b0:	sbb    BYTE PTR [eax],al
  41a2b2:	add    BYTE PTR [eax],al
  41a2b4:	rcr    dh,0x41
  41a2b7:	add    BYTE PTR [edx+0x18006900],al
  41a2bd:	add    BYTE PTR [eax],al
  41a2bf:	add    BYTE PTR [ebx*8+0x820041],bl
  41a2c6:	imul   eax,DWORD PTR [eax],0x38
  41a2cc:	int3   
  41a2cd:	fld    QWORD PTR [ecx+0x0]
  41a2d0:	add    BYTE PTR [eax],0x69
  41a2d3:	add    BYTE PTR [eax],bh
  41a2d5:	add    BYTE PTR [eax],al
  41a2d7:	add    BYTE PTR [ebx*8+0x820041],bl
  41a2de:	ins    DWORD PTR es:[edi],dx
  41a2df:	add    BYTE PTR [eax],bh
  41a2e1:	add    BYTE PTR [eax],al
  41a2e3:	add    BYTE PTR [eax-0x7dffbe23],bl
  41a2e9:	add    BYTE PTR [ebp+0x0],ch
  41a2ec:	cmp    BYTE PTR [eax],al
  41a2ee:	add    BYTE PTR [eax],al
  41a2f0:	mov    dh,bl
  41a2f2:	inc    ecx
  41a2f3:	add    BYTE PTR [edx+0x18006a00],al
  41a2f9:	add    BYTE PTR [eax],al
  41a2fb:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41a302:	push   0x0
  41a304:	sbb    BYTE PTR [eax],al
  41a306:	add    BYTE PTR [eax],al
  41a308:	sbb    al,0xdd
  41a30a:	inc    ecx
  41a30b:	add    BYTE PTR [edx+0x38006a00],al
  41a311:	add    BYTE PTR [eax],al
  41a313:	add    BYTE PTR [eax-0x7dffbe23],bh
  41a319:	add    BYTE PTR [edx+0x0],ch
  41a31c:	cmp    BYTE PTR [eax],al
  41a31e:	add    BYTE PTR [eax],al
  41a320:	mov    dh,bl
  41a322:	inc    ecx
  41a323:	add    BYTE PTR [edx+0x18006800],al
  41a329:	add    BYTE PTR [eax],al
  41a32b:	add    ah,dl
  41a32d:	fiadd  WORD PTR [ecx+0x0]
  41a330:	add    BYTE PTR [eax],0x68
  41a333:	add    BYTE PTR [eax],bl
  41a335:	add    BYTE PTR [eax],al
  41a337:	add    BYTE PTR [ebx*8+0x820041],bl
  41a33e:	push   0x3800
  41a343:	add    ah,ch
  41a345:	fld    QWORD PTR [ecx+0x0]
  41a348:	add    BYTE PTR [eax],0x68
  41a34b:	add    BYTE PTR [eax],bh
  41a34d:	add    BYTE PTR [eax],al
  41a34f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41a356:	pop    ss
  41a357:	add    BYTE PTR [eax],bh
  41a359:	add    BYTE PTR [eax],al
  41a35b:	add    ah,bh
  41a35d:	fld    QWORD PTR [ecx+0x0]
  41a360:	cmp    BYTE PTR [eax],0x17
  41a363:	add    BYTE PTR [eax],bh
  41a365:	add    BYTE PTR [eax],al
  41a367:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a36d:	add    BYTE PTR [edi],cl
  41a36f:	mov    ebx,0x98
  41a374:	lods   al,BYTE PTR ds:[esi]
  41a375:	fiadd  WORD PTR [ecx+0x0]
  41a378:	add    BYTE PTR [eax],0xf
  41a37b:	mov    ebx,0x98
  41a380:	mov    dh,bl
  41a382:	inc    ecx
  41a383:	add    BYTE PTR [edx+0x1800f900],al
  41a389:	add    BYTE PTR [eax],al
  41a38b:	add    al,al
  41a38d:	fiadd  WORD PTR [ecx+0x0]
  41a390:	add    BYTE PTR [eax],0xf9
  41a393:	add    BYTE PTR [eax],bl
  41a395:	add    BYTE PTR [eax],al
  41a397:	add    BYTE PTR [ebx*8+0x820041],bl
  41a39e:	stc    
  41a39f:	add    BYTE PTR [eax],bh
  41a3a1:	add    BYTE PTR [eax],al
  41a3a3:	add    ah,cl
  41a3a5:	fld    QWORD PTR [ecx+0x0]
  41a3a8:	add    BYTE PTR [eax],0xf9
  41a3ab:	add    BYTE PTR [eax],bh
  41a3ad:	add    BYTE PTR [eax],al
  41a3af:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a3b5:	add    cl,bl
  41a3b7:	add    BYTE PTR [eax],bl
  41a3b9:	add    BYTE PTR [eax],al
  41a3bb:	add    al,al
  41a3bd:	fiadd  WORD PTR [ecx+0x0]
  41a3c0:	add    BYTE PTR [eax],0xd9
  41a3c3:	add    BYTE PTR [eax],bl
  41a3c5:	add    BYTE PTR [eax],al
  41a3c7:	add    BYTE PTR [ebx*8+0x820041],bl
  41a3ce:	fld    DWORD PTR [eax]
  41a3d0:	cmp    BYTE PTR [eax],al
  41a3d2:	add    BYTE PTR [eax],al
  41a3d4:	int3   
  41a3d5:	fld    QWORD PTR [ecx+0x0]
  41a3d8:	add    BYTE PTR [eax],0xd9
  41a3db:	add    BYTE PTR [eax],bh
  41a3dd:	add    BYTE PTR [eax],al
  41a3df:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a3e5:	add    al,bl
  41a3e7:	add    BYTE PTR [eax],bl
  41a3e9:	add    BYTE PTR [eax],al
  41a3eb:	add    ah,dl
  41a3ed:	fiadd  WORD PTR [ecx+0x0]
  41a3f0:	add    BYTE PTR [eax],0xd8
  41a3f3:	add    BYTE PTR [eax],bl
  41a3f5:	add    BYTE PTR [eax],al
  41a3f7:	add    BYTE PTR [ebx*8+0x820041],bl
  41a3fe:	fadd   DWORD PTR [eax]
  41a400:	cmp    BYTE PTR [eax],al
  41a402:	add    BYTE PTR [eax],al
  41a404:	in     al,dx
  41a405:	fld    QWORD PTR [ecx+0x0]
  41a408:	add    BYTE PTR [eax],0xd8
  41a40b:	add    BYTE PTR [eax],bh
  41a40d:	add    BYTE PTR [eax],al
  41a40f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a415:	add    cl,ch
  41a417:	add    BYTE PTR [eax],bl
  41a419:	add    BYTE PTR [eax],al
  41a41b:	add    al,al
  41a41d:	fiadd  WORD PTR [ecx+0x0]
  41a420:	add    BYTE PTR [eax],0xe9
  41a423:	add    BYTE PTR [eax],bl
  41a425:	add    BYTE PTR [eax],al
  41a427:	add    BYTE PTR [ebx*8+0x820041],bl
  41a42e:	jmp    0x41dc33
  41a433:	add    ah,cl
  41a435:	fld    QWORD PTR [ecx+0x0]
  41a438:	add    BYTE PTR [eax],0xe9
  41a43b:	add    BYTE PTR [eax],bh
  41a43d:	add    BYTE PTR [eax],al
  41a43f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a445:	add    al,ch
  41a447:	add    BYTE PTR [eax],bl
  41a449:	add    BYTE PTR [eax],al
  41a44b:	add    ah,dl
  41a44d:	fiadd  WORD PTR [ecx+0x0]
  41a450:	add    BYTE PTR [eax],0xe8
  41a453:	add    BYTE PTR [eax],bl
  41a455:	add    BYTE PTR [eax],al
  41a457:	add    BYTE PTR [ebx*8+0x820041],bl
  41a45e:	call   0x41dc63
  41a463:	add    ah,ch
  41a465:	fld    QWORD PTR [ecx+0x0]
  41a468:	add    BYTE PTR [eax],0xe8
  41a46b:	add    BYTE PTR [eax],bh
  41a46d:	add    BYTE PTR [eax],al
  41a46f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a475:	add    bl,bh
  41a477:	add    BYTE PTR [eax],bl
  41a479:	add    BYTE PTR [eax],al
  41a47b:	add    al,bh
  41a47d:	fiadd  WORD PTR [ecx+0x0]
  41a480:	add    BYTE PTR [eax],0xfb
  41a483:	add    BYTE PTR [eax],bl
  41a485:	add    DWORD PTR [eax],eax
  41a487:	add    BYTE PTR [ebx*8+0x820041],bl
  41a48e:	sti    
  41a48f:	add    BYTE PTR [eax],bh
  41a491:	add    BYTE PTR [eax],al
  41a493:	add    BYTE PTR [eax-0x7dffbe23],bl
  41a499:	add    bl,bh
  41a49b:	add    BYTE PTR [eax],bh
  41a49d:	add    BYTE PTR [eax],al
  41a49f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a4a5:	add    dl,bh
  41a4a7:	add    BYTE PTR [eax],bl
  41a4a9:	add    BYTE PTR [eax],al
  41a4ab:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41a4b2:	cli    
  41a4b3:	add    BYTE PTR [eax],bl
  41a4b5:	add    BYTE PTR [eax],al
  41a4b7:	add    BYTE PTR [ebx*8+0x820041],bl
  41a4be:	cli    
  41a4bf:	add    BYTE PTR [eax],bh
  41a4c1:	add    BYTE PTR [eax],al
  41a4c3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41a4c9:	add    dl,bh
  41a4cb:	add    BYTE PTR [eax],bh
  41a4cd:	add    BYTE PTR [eax],al
  41a4cf:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a4d5:	add    al,bh
  41a4d7:	add    BYTE PTR [eax],bl
  41a4d9:	add    BYTE PTR [eax],al
  41a4db:	add    ah,dl
  41a4dd:	fiadd  WORD PTR [ecx+0x0]
  41a4e0:	add    BYTE PTR [eax],0xf8
  41a4e3:	add    BYTE PTR [eax],bl
  41a4e5:	add    BYTE PTR [eax],al
  41a4e7:	add    BYTE PTR [ebx*8+0x820041],bl
  41a4ee:	clc    
  41a4ef:	add    BYTE PTR [eax],bh
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    ah,ch
  41a4f5:	fld    QWORD PTR [ecx+0x0]
  41a4f8:	add    BYTE PTR [eax],0xf8
  41a4fb:	add    BYTE PTR [eax],bh
  41a4fd:	add    BYTE PTR [eax],al
  41a4ff:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a505:	add    cl,dl
  41a507:	add    BYTE PTR [eax],bl
  41a509:	add    BYTE PTR [eax],al
  41a50b:	add    al,bh
  41a50d:	fiadd  WORD PTR [ecx+0x0]
  41a510:	add    BYTE PTR [eax],0xd1
  41a513:	add    BYTE PTR [eax],bl
  41a515:	add    DWORD PTR [eax],eax
  41a517:	add    al,ah
  41a519:	loopne 0x41a55c
  41a51b:	add    BYTE PTR [edx+0x18007100],ch
  41a521:	add    BYTE PTR [eax],al
  41a523:	add    BYTE PTR [ebx*8+0x820041],bl
  41a52a:	rol    DWORD PTR [eax],1
  41a52c:	cmp    BYTE PTR [eax],al
  41a52e:	add    BYTE PTR [eax],al
  41a530:	cwde   
  41a531:	fld    QWORD PTR [ecx+0x0]
  41a534:	add    BYTE PTR [eax],0xd1
  41a537:	add    BYTE PTR [eax],bh
  41a539:	add    BYTE PTR [eax],al
  41a53b:	add    al,dl
  41a53d:	loopne 0x41a580
  41a53f:	add    BYTE PTR [edx+0x38007100],ch
  41a545:	add    BYTE PTR [eax],al
  41a547:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a54d:	add    bl,dl
  41a54f:	add    BYTE PTR [eax],bl
  41a551:	add    BYTE PTR [eax],al
  41a553:	add    al,bh
  41a555:	fiadd  WORD PTR [ecx+0x0]
  41a558:	add    BYTE PTR [eax],0xd3
  41a55b:	add    BYTE PTR [eax],bl
  41a55d:	add    DWORD PTR [eax],eax
  41a55f:	add    al,ah
  41a561:	loopne 0x41a5a4
  41a563:	add    BYTE PTR [edx+0x18007300],ch
  41a569:	add    BYTE PTR [eax],al
  41a56b:	add    BYTE PTR [ebx*8+0x820041],bl
  41a572:	rol    DWORD PTR [eax],cl
  41a574:	cmp    BYTE PTR [eax],al
  41a576:	add    BYTE PTR [eax],al
  41a578:	cwde   
  41a579:	fld    QWORD PTR [ecx+0x0]
  41a57c:	add    BYTE PTR [eax],0xd3
  41a57f:	add    BYTE PTR [eax],bh
  41a581:	add    BYTE PTR [eax],al
  41a583:	add    al,dl
  41a585:	loopne 0x41a5c8
  41a587:	add    BYTE PTR [edx+0x38007300],ch
  41a58d:	add    BYTE PTR [eax],al
  41a58f:	add    al,dl
  41a591:	loopne 0x41a5d4
  41a593:	add    BYTE PTR [edx+0x38007300],bh
  41a599:	add    BYTE PTR [eax],al
  41a59b:	add    BYTE PTR [eax],al
  41a59d:	add    BYTE PTR [eax],al
  41a59f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a5a5:	add    dl,dl
  41a5a7:	add    BYTE PTR [eax],bl
  41a5a9:	add    BYTE PTR [eax],al
  41a5ab:	add    al,bh
  41a5ad:	fiadd  WORD PTR [ecx+0x0]
  41a5b0:	add    BYTE PTR [eax],0xd2
  41a5b3:	add    BYTE PTR [eax],bl
  41a5b5:	add    DWORD PTR [eax],eax
  41a5b7:	add    al,ah
  41a5b9:	loopne 0x41a5fc
  41a5bb:	add    BYTE PTR [edx+0x18007200],ch
  41a5c1:	add    BYTE PTR [eax],al
  41a5c3:	add    BYTE PTR [ebx*8+0x820041],bl
  41a5ca:	rol    BYTE PTR [eax],cl
  41a5cc:	cmp    BYTE PTR [eax],al
  41a5ce:	add    BYTE PTR [eax],al
  41a5d0:	cwde   
  41a5d1:	fld    QWORD PTR [ecx+0x0]
  41a5d4:	add    BYTE PTR [eax],0xd2
  41a5d7:	add    BYTE PTR [eax],bh
  41a5d9:	add    BYTE PTR [eax],al
  41a5db:	add    al,dl
  41a5dd:	loopne 0x41a620
  41a5df:	add    BYTE PTR [edx+0x38007200],ch
  41a5e5:	add    BYTE PTR [eax],al
  41a5e7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a5ed:	add    cl,ah
  41a5ef:	add    BYTE PTR [eax],bl
  41a5f1:	add    BYTE PTR [eax],al
  41a5f3:	add    al,bh
  41a5f5:	fiadd  WORD PTR [ecx+0x0]
  41a5f8:	add    BYTE PTR [eax],0xe1
  41a5fb:	add    BYTE PTR [eax],bl
  41a5fd:	add    DWORD PTR [eax],eax
  41a5ff:	add    al,ah
  41a601:	loopne 0x41a644
  41a603:	add    dl,cl
  41a605:	add    BYTE PTR [ecx+0x0],dh
  41a608:	sbb    BYTE PTR [eax],al
  41a60a:	add    BYTE PTR [eax],al
  41a60c:	sbb    al,0xdd
  41a60e:	inc    ecx
  41a60f:	add    BYTE PTR [edx+0x3800e100],al
  41a615:	add    BYTE PTR [eax],al
  41a617:	add    BYTE PTR [eax-0x7dffbe23],bl
  41a61d:	add    cl,ah
  41a61f:	add    BYTE PTR [eax],bh
  41a621:	add    BYTE PTR [eax],al
  41a623:	add    al,dl
  41a625:	loopne 0x41a668
  41a627:	add    dl,cl
  41a629:	add    BYTE PTR [ecx+0x0],dh
  41a62c:	cmp    BYTE PTR [eax],al
  41a62e:	add    BYTE PTR [eax],al
  41a630:	mov    dh,bl
  41a632:	inc    ecx
  41a633:	add    BYTE PTR [edx+0x1800e200],al
  41a639:	add    BYTE PTR [eax],al
  41a63b:	add    al,bh
  41a63d:	fiadd  WORD PTR [ecx+0x0]
  41a640:	add    BYTE PTR [eax],0xe2
  41a643:	add    BYTE PTR [eax],bl
  41a645:	add    DWORD PTR [eax],eax
  41a647:	add    al,ah
  41a649:	loopne 0x41a68c
  41a64b:	add    dl,cl
  41a64d:	add    BYTE PTR [edx+0x0],dh
  41a650:	sbb    BYTE PTR [eax],al
  41a652:	add    BYTE PTR [eax],al
  41a654:	sbb    al,0xdd
  41a656:	inc    ecx
  41a657:	add    BYTE PTR [edx+0x3800e200],al
  41a65d:	add    BYTE PTR [eax],al
  41a65f:	add    BYTE PTR [eax-0x7dffbe23],bl
  41a665:	add    dl,ah
  41a667:	add    BYTE PTR [eax],bh
  41a669:	add    BYTE PTR [eax],al
  41a66b:	add    al,dl
  41a66d:	loopne 0x41a6b0
  41a66f:	add    dl,cl
  41a671:	add    BYTE PTR [edx+0x0],dh
  41a674:	cmp    BYTE PTR [eax],al
  41a676:	add    BYTE PTR [eax],al
  41a678:	mov    dh,bl
  41a67a:	inc    ecx
  41a67b:	add    BYTE PTR [edx+0x1800f100],al
  41a681:	add    BYTE PTR [eax],al
  41a683:	add    al,bh
  41a685:	fiadd  WORD PTR [ecx+0x0]
  41a688:	add    BYTE PTR [eax],0xf1
  41a68b:	add    BYTE PTR [eax],bl
  41a68d:	add    DWORD PTR [eax],eax
  41a68f:	add    al,ah
  41a691:	loopne 0x41a6d4
  41a693:	add    dl,ch
  41a695:	add    BYTE PTR [ecx+0x0],dh
  41a698:	sbb    BYTE PTR [eax],al
  41a69a:	add    BYTE PTR [eax],al
  41a69c:	sbb    al,0xdd
  41a69e:	inc    ecx
  41a69f:	add    BYTE PTR [edx+0x3800f100],al
  41a6a5:	add    BYTE PTR [eax],al
  41a6a7:	add    BYTE PTR [eax-0x7dffbe23],bl
  41a6ad:	add    cl,dh
  41a6af:	add    BYTE PTR [eax],bh
  41a6b1:	add    BYTE PTR [eax],al
  41a6b3:	add    al,dl
  41a6b5:	loopne 0x41a6f8
  41a6b7:	add    dl,ch
  41a6b9:	add    BYTE PTR [ecx+0x0],dh
  41a6bc:	cmp    BYTE PTR [eax],al
  41a6be:	add    BYTE PTR [eax],al
  41a6c0:	mov    dh,bl
  41a6c2:	inc    ecx
  41a6c3:	add    BYTE PTR [edx+0x1800f300],al
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    al,bh
  41a6cd:	fiadd  WORD PTR [ecx+0x0]
  41a6d0:	add    BYTE PTR [eax],0xf3
  41a6d3:	add    BYTE PTR [eax],bl
  41a6d5:	add    DWORD PTR [eax],eax
  41a6d7:	add    al,ah
  41a6d9:	loopne 0x41a71c
  41a6db:	add    dl,ch
  41a6dd:	add    BYTE PTR [ebx+0x0],dh
  41a6e0:	sbb    BYTE PTR [eax],al
  41a6e2:	add    BYTE PTR [eax],al
  41a6e4:	sbb    al,0xdd
  41a6e6:	inc    ecx
  41a6e7:	add    BYTE PTR [edx+0x3800f300],al
  41a6ed:	add    BYTE PTR [eax],al
  41a6ef:	add    BYTE PTR [eax-0x7dffbe23],bl
  41a6f5:	add    bl,dh
  41a6f7:	add    BYTE PTR [eax],bh
  41a6f9:	add    BYTE PTR [eax],al
  41a6fb:	add    al,dl
  41a6fd:	loopne 0x41a740
  41a6ff:	add    dl,ch
  41a701:	add    BYTE PTR [ebx+0x0],dh
  41a704:	cmp    BYTE PTR [eax],al
  41a706:	add    BYTE PTR [eax],al
  41a708:	shl    al,1
  41a70a:	inc    ecx
  41a70b:	add    dl,bh
  41a70d:	add    BYTE PTR [ebx+0x0],dh
  41a710:	cmp    BYTE PTR [eax],al
  41a712:	add    BYTE PTR [eax],al
  41a714:	add    BYTE PTR [eax],al
  41a716:	add    BYTE PTR [eax],al
  41a718:	mov    dh,bl
  41a71a:	inc    ecx
  41a71b:	add    BYTE PTR [edx+0x1800f200],al
  41a721:	add    BYTE PTR [eax],al
  41a723:	add    al,bh
  41a725:	fiadd  WORD PTR [ecx+0x0]
  41a728:	add    BYTE PTR [eax],0xf2
  41a72b:	add    BYTE PTR [eax],bl
  41a72d:	add    DWORD PTR [eax],eax
  41a72f:	add    al,ah
  41a731:	loopne 0x41a774
  41a733:	add    dl,ch
  41a735:	add    BYTE PTR [edx+0x0],dh
  41a738:	sbb    BYTE PTR [eax],al
  41a73a:	add    BYTE PTR [eax],al
  41a73c:	sbb    al,0xdd
  41a73e:	inc    ecx
  41a73f:	add    BYTE PTR [edx+0x3800f200],al
  41a745:	add    BYTE PTR [eax],al
  41a747:	add    BYTE PTR [eax-0x7dffbe23],bl
  41a74d:	add    dl,dh
  41a74f:	add    BYTE PTR [eax],bh
  41a751:	add    BYTE PTR [eax],al
  41a753:	add    al,dl
  41a755:	loopne 0x41a798
  41a757:	add    dl,ch
  41a759:	add    BYTE PTR [edx+0x0],dh
  41a75c:	cmp    BYTE PTR [eax],al
  41a75e:	add    BYTE PTR [eax],al
  41a760:	mov    dh,bl
  41a762:	inc    ecx
  41a763:	add    BYTE PTR [edx+0x18000938],al
  41a769:	add    BYTE PTR [eax],al
  41a76b:	add    al,al
  41a76d:	fiadd  WORD PTR [ecx+0x0]
  41a770:	cmp    BYTE PTR [eax],0x9
  41a773:	add    BYTE PTR [eax],bl
  41a775:	add    BYTE PTR [eax],al
  41a777:	add    BYTE PTR [ebx*8+0x38820041],bl
  41a77e:	or     DWORD PTR [eax],eax
  41a780:	cmp    BYTE PTR [eax],al
  41a782:	add    BYTE PTR [eax],al
  41a784:	int3   
  41a785:	fld    QWORD PTR [ecx+0x0]
  41a788:	cmp    BYTE PTR [eax],0x9
  41a78b:	add    BYTE PTR [eax],bh
  41a78d:	add    BYTE PTR [eax],al
  41a78f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a795:	cmp    BYTE PTR [edx],cl
  41a797:	add    BYTE PTR [eax],bl
  41a799:	add    BYTE PTR [eax],al
  41a79b:	add    BYTE PTR [esi+ebx*8+0x38820041],ch
  41a7a2:	or     al,BYTE PTR [eax]
  41a7a4:	sbb    BYTE PTR [eax],al
  41a7a6:	add    BYTE PTR [eax],al
  41a7a8:	sbb    al,0xdd
  41a7aa:	inc    ecx
  41a7ab:	add    BYTE PTR [edx+0x38000a38],al
  41a7b1:	add    BYTE PTR [eax],al
  41a7b3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41a7b9:	cmp    BYTE PTR [edx],cl
  41a7bb:	add    BYTE PTR [eax],bh
  41a7bd:	add    BYTE PTR [eax],al
  41a7bf:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a7c5:	cmp    BYTE PTR [eax],cl
  41a7c7:	add    BYTE PTR [eax],bl
  41a7c9:	add    BYTE PTR [eax],al
  41a7cb:	add    ah,dl
  41a7cd:	fiadd  WORD PTR [ecx+0x0]
  41a7d0:	cmp    BYTE PTR [eax],0x8
  41a7d3:	add    BYTE PTR [eax],bl
  41a7d5:	add    BYTE PTR [eax],al
  41a7d7:	add    BYTE PTR [ebx*8+0x38820041],bl
  41a7de:	or     BYTE PTR [eax],al
  41a7e0:	cmp    BYTE PTR [eax],al
  41a7e2:	add    BYTE PTR [eax],al
  41a7e4:	in     al,dx
  41a7e5:	fld    QWORD PTR [ecx+0x0]
  41a7e8:	cmp    BYTE PTR [eax],0x8
  41a7eb:	add    BYTE PTR [eax],bh
  41a7ed:	add    BYTE PTR [eax],al
  41a7ef:	add    BYTE PTR [esi+ebx*8+0x41],bh
  41a7f3:	add    BYTE PTR [ebx+0x18007000],al
  41a7f9:	add    BYTE PTR [eax],al
  41a7fb:	add    BYTE PTR [esi+ebx*8+0x830041],dh
  41a802:	jo     0x41a804
  41a804:	sbb    BYTE PTR [eax],al
  41a806:	add    BYTE PTR [eax],al
  41a808:	adc    ch,bl
  41a80a:	inc    ecx
  41a80b:	add    BYTE PTR [ebx+0x58007000],al
  41a811:	add    BYTE PTR [eax],al
  41a813:	add    al,al
  41a815:	fld    QWORD PTR [ecx+0x0]
  41a818:	add    DWORD PTR [eax],0x70
  41a81b:	add    BYTE PTR [eax+0x0],bl
  41a81e:	add    BYTE PTR [eax],al
  41a820:	adc    ch,bl
  41a822:	inc    ecx
  41a823:	add    BYTE PTR [ebx+0x78007000],al
  41a829:	add    BYTE PTR [eax],al
  41a82b:	add    al,al
  41a82d:	fld    QWORD PTR [ecx+0x0]
  41a830:	add    DWORD PTR [eax],0x70
  41a833:	add    BYTE PTR [eax+0x0],bh
  41a836:	add    BYTE PTR [eax],al
  41a838:	adc    ch,bl
  41a83a:	inc    ecx
  41a83b:	add    BYTE PTR [ebx+0x38007000],al
  41a841:	add    BYTE PTR [eax],al
  41a843:	add    BYTE PTR [ebp+ebx*8+0x830041],ch
  41a84a:	jo     0x41a84c
  41a84c:	cmp    BYTE PTR [eax],al
  41a84e:	add    BYTE PTR [eax],al
  41a850:	mov    dh,bl
  41a852:	inc    ecx
  41a853:	add    BYTE PTR [edx+0x18000038],al
  41a859:	add    BYTE PTR [eax],al
  41a85b:	add    ah,dl
  41a85d:	fiadd  WORD PTR [ecx+0x0]
  41a860:	cmp    BYTE PTR [eax],0x0
  41a863:	add    BYTE PTR [eax],bl
  41a865:	add    BYTE PTR [eax],al
  41a867:	add    BYTE PTR [ebx*8+0x38820041],bl
  41a86e:	add    BYTE PTR [eax],al
  41a870:	cmp    BYTE PTR [eax],al
  41a872:	add    BYTE PTR [eax],al
  41a874:	in     al,dx
  41a875:	fld    QWORD PTR [ecx+0x0]
  41a878:	cmp    BYTE PTR [eax],0x0
  41a87b:	add    BYTE PTR [eax],bh
  41a87d:	add    BYTE PTR [eax],al
  41a87f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a885:	add    dh,dh
  41a887:	add    BYTE PTR [eax],bl
  41a889:	add    BYTE PTR [eax],al
  41a88b:	add    ah,dl
  41a88d:	fiadd  WORD PTR [ecx+0x0]
  41a890:	add    BYTE PTR [eax],0xf6
  41a893:	add    BYTE PTR [eax],bl
  41a895:	add    BYTE PTR [eax],al
  41a897:	add    BYTE PTR [ebx*8+0x820041],bl
  41a89e:	test   BYTE PTR [eax],0x38
  41a8a1:	add    BYTE PTR [eax],al
  41a8a3:	add    ah,ch
  41a8a5:	fld    QWORD PTR [ecx+0x0]
  41a8a8:	add    BYTE PTR [eax],0xf6
  41a8ab:	add    BYTE PTR [eax],bh
  41a8ad:	add    BYTE PTR [eax],al
  41a8af:	add    BYTE PTR [ebx+eiz*8],al
  41a8b2:	inc    ecx
  41a8b3:	add    BYTE PTR [ecx+0x18000d00],bl
  41a8b9:	add    BYTE PTR [eax],al
  41a8bb:	add    BYTE PTR [ebx+eiz*8],al
  41a8be:	inc    ecx
  41a8bf:	add    BYTE PTR [ecx+0x18001800],bh
  41a8c5:	add    BYTE PTR [eax],al
  41a8c7:	add    BYTE PTR [ebx+eiz*8],al
  41a8ca:	inc    ecx
  41a8cb:	add    BYTE PTR [ecx+0x18001800],ch
  41a8d1:	add    BYTE PTR [eax],al
  41a8d3:	add    BYTE PTR [ebx+eiz*8],al
  41a8d6:	inc    ecx
  41a8d7:	add    BYTE PTR [ecx+0x18001800],bl
  41a8dd:	add    BYTE PTR [eax],al
  41a8df:	add    BYTE PTR [ebx+eiz*8],al
  41a8e2:	inc    ecx
  41a8e3:	add    BYTE PTR [ecx+0x18001800],cl
  41a8e9:	add    BYTE PTR [eax],al
  41a8eb:	add    BYTE PTR [ebx+eiz*8],al
  41a8ee:	inc    ecx
  41a8ef:	add    BYTE PTR [ecx+0x18000d00],cl
  41a8f5:	add    BYTE PTR [eax],al
  41a8f7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a8fd:	add    bl,ch
  41a8ff:	add    BYTE PTR [eax],bl
  41a901:	add    BYTE PTR [eax],al
  41a903:	add    al,bh
  41a905:	fiadd  WORD PTR [ecx+0x0]
  41a908:	add    BYTE PTR [eax],0xeb
  41a90b:	add    BYTE PTR [eax],bl
  41a90d:	add    DWORD PTR [eax],eax
  41a90f:	add    BYTE PTR [ebx*8+0x820041],bl
  41a916:	jmp    0x41a918
  41a918:	cmp    BYTE PTR [eax],al
  41a91a:	add    BYTE PTR [eax],al
  41a91c:	ins    BYTE PTR es:[edi],dx
  41a91d:	fiadd  WORD PTR [ecx+0x0]
  41a920:	add    BYTE PTR [eax],0xeb
  41a923:	add    BYTE PTR [eax],bh
  41a925:	add    DWORD PTR [eax],eax
  41a927:	add    BYTE PTR [eax-0x20],ah
  41a92a:	inc    ecx
  41a92b:	add    BYTE PTR [edx+0x7900b800],al
  41a931:	add    DWORD PTR [eax],eax
  41a933:	add    BYTE PTR [eax],al
  41a935:	add    BYTE PTR [eax],al
  41a937:	add    ah,ch
  41a939:	loop   0x41a97c
  41a93b:	add    BYTE PTR [ecx],cl
  41a93d:	add    BYTE PTR [edi+0x21800],cl
  41a943:	add    BYTE PTR [eax+0x10041e3],al
  41a949:	add    BYTE PTR [eax+0x0],bl
  41a94c:	sbb    BYTE PTR [eax],al
  41a94e:	add    BYTE PTR [eax],al
  41a950:	add    bl,ah
  41a952:	inc    ecx
  41a953:	add    BYTE PTR [ecx],cl
  41a955:	add    BYTE PTR [edi+0x21c00],cl
  41a95b:	add    BYTE PTR [eax+0x10041e3],bl
  41a961:	add    BYTE PTR [eax+0x0],bl
  41a964:	sbb    al,0x0
  41a966:	add    BYTE PTR [eax],al
  41a968:	inc    esp
  41a969:	in     al,0x41
  41a96b:	add    BYTE PTR [ecx+0x1800a100],al
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR [eax-0x1c],al
  41a976:	inc    ecx
  41a977:	add    BYTE PTR [ecx+0x1800a900],al
  41a97d:	add    BYTE PTR [eax],al
  41a97f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a985:	add    ah,dh
  41a987:	add    BYTE PTR [eax],bl
  41a989:	add    BYTE PTR [eax],al
  41a98b:	add    al,bh
  41a98d:	fiadd  WORD PTR [ecx+0x0]
  41a990:	add    BYTE PTR [eax],0xf4
  41a993:	add    BYTE PTR [eax],bl
  41a995:	add    DWORD PTR [eax],eax
  41a997:	add    BYTE PTR [ebx*8+0x820041],bl
  41a99e:	hlt    
  41a99f:	add    BYTE PTR [eax],bh
  41a9a1:	add    BYTE PTR [eax],al
  41a9a3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41a9a9:	add    ah,dh
  41a9ab:	add    BYTE PTR [eax],bh
  41a9ad:	add    BYTE PTR [eax],al
  41a9af:	add    BYTE PTR [eax-0x7dffbe22],cl
  41a9b5:	add    ch,dl
  41a9b7:	add    BYTE PTR [eax],bl
  41a9b9:	add    BYTE PTR [eax],al
  41a9bb:	add    al,al
  41a9bd:	fiadd  WORD PTR [ecx+0x0]
  41a9c0:	add    BYTE PTR [eax],0xd5
  41a9c3:	add    BYTE PTR [eax],bl
  41a9c5:	add    BYTE PTR [eax],al
  41a9c7:	add    BYTE PTR [ebx*8+0x820041],bl
  41a9ce:	aad    0x0
  41a9d0:	cmp    BYTE PTR [eax],al
  41a9d2:	add    BYTE PTR [eax],al
  41a9d4:	int3   
  41a9d5:	fld    QWORD PTR [ecx+0x0]
  41a9d8:	add    BYTE PTR [eax],0xd5
  41a9db:	add    BYTE PTR [eax],bh
  41a9dd:	add    BYTE PTR [eax],al
  41a9df:	add    BYTE PTR [ebx*8+0x38820041],bl
  41a9e6:	inc    eax
  41a9e7:	add    BYTE PTR [eax],bh
  41a9e9:	add    BYTE PTR [eax],al
  41a9eb:	add    BYTE PTR [eax-0x7dffbe23],bh
  41a9f1:	cmp    BYTE PTR [eax+0x0],al
  41a9f4:	cmp    BYTE PTR [eax],al
  41a9f6:	add    BYTE PTR [eax],al
  41a9f8:	mov    dh,bl
  41a9fa:	inc    ecx
  41a9fb:	add    BYTE PTR [edx+0x1800e500],al
  41aa01:	add    BYTE PTR [eax],al
  41aa03:	add    al,al
  41aa05:	fiadd  WORD PTR [ecx+0x0]
  41aa08:	add    BYTE PTR [eax],0xe5
  41aa0b:	add    BYTE PTR [eax],bl
  41aa0d:	add    BYTE PTR [eax],al
  41aa0f:	add    BYTE PTR [ebx*8+0x820041],bl
  41aa16:	in     eax,0x0
  41aa18:	cmp    BYTE PTR [eax],al
  41aa1a:	add    BYTE PTR [eax],al
  41aa1c:	int3   
  41aa1d:	fld    QWORD PTR [ecx+0x0]
  41aa20:	add    BYTE PTR [eax],0xe5
  41aa23:	add    BYTE PTR [eax],bh
  41aa25:	add    BYTE PTR [eax],al
  41aa27:	add    BYTE PTR [eax-0x7dffbe22],cl
  41aa2d:	add    ah,ah
  41aa2f:	add    BYTE PTR [eax],bl
  41aa31:	add    BYTE PTR [eax],al
  41aa33:	add    al,al
  41aa35:	fiadd  WORD PTR [ecx+0x0]
  41aa38:	add    BYTE PTR [eax],0xe4
  41aa3b:	add    BYTE PTR [eax],bl
  41aa3d:	add    BYTE PTR [eax],al
  41aa3f:	add    BYTE PTR [ebx*8+0x820041],bl
  41aa46:	in     al,0x0
  41aa48:	cmp    BYTE PTR [eax],al
  41aa4a:	add    BYTE PTR [eax],al
  41aa4c:	int3   
  41aa4d:	fld    QWORD PTR [ecx+0x0]
  41aa50:	add    BYTE PTR [eax],0xe4
  41aa53:	add    BYTE PTR [eax],bh
  41aa55:	add    BYTE PTR [eax],al
  41aa57:	add    BYTE PTR [eax-0x7dffbe22],cl
  41aa5d:	add    BYTE PTR [edi],cl
  41aa5f:	mov    bh,0x98
  41aa61:	add    BYTE PTR [eax],al
  41aa63:	add    al,al
  41aa65:	fiadd  WORD PTR [ecx+0x0]
  41aa68:	add    BYTE PTR [eax],0xf
  41aa6b:	mov    bh,0x98
  41aa6d:	add    BYTE PTR [eax],al
  41aa6f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41aa75:	cmp    BYTE PTR [ebx],cl
  41aa77:	add    BYTE PTR [eax],bl
  41aa79:	add    BYTE PTR [eax],al
  41aa7b:	add    al,al
  41aa7d:	fiadd  WORD PTR [ecx+0x0]
  41aa80:	cmp    BYTE PTR [eax],0xb
  41aa83:	add    BYTE PTR [eax],bl
  41aa85:	add    BYTE PTR [eax],al
  41aa87:	add    BYTE PTR [ebx*8+0x38820041],bl
  41aa8e:	or     eax,DWORD PTR [eax]
  41aa90:	cmp    BYTE PTR [eax],al
  41aa92:	add    BYTE PTR [eax],al
  41aa94:	int3   
  41aa95:	fld    QWORD PTR [ecx+0x0]
  41aa98:	cmp    BYTE PTR [eax],0xb
  41aa9b:	add    BYTE PTR [eax],bh
  41aa9d:	add    BYTE PTR [eax],al
  41aa9f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41aaa6:	sub    BYTE PTR [eax],al
  41aaa8:	cmp    BYTE PTR [eax],al
  41aaaa:	add    BYTE PTR [eax],al
  41aaac:	mov    eax,0x820041dd
  41aab1:	cmp    BYTE PTR [eax],ch
  41aab3:	add    BYTE PTR [eax],bh
  41aab5:	add    BYTE PTR [eax],al
  41aab7:	add    BYTE PTR [ebx*8+0x38820041],bl
  41aabe:	xor    al,0x0
  41aac0:	cmp    BYTE PTR [eax],al
  41aac2:	add    BYTE PTR [eax],al
  41aac4:	and    dh,bl
  41aac6:	inc    ecx
  41aac7:	add    BYTE PTR [edx+0x38003438],al
  41aacd:	add    BYTE PTR [eax],al
  41aacf:	add    BYTE PTR [ebx*8+0x38820041],bl
  41aad6:	xor    eax,DWORD PTR [eax]
  41aad8:	cmp    BYTE PTR [eax],al
  41aada:	add    BYTE PTR [eax],al
  41aadc:	add    al,0xde
  41aade:	inc    ecx
  41aadf:	add    BYTE PTR [edx+0x38003338],al
  41aae5:	add    BYTE PTR [eax],al
  41aae7:	add    BYTE PTR [ebx*8+0x38820041],bl
  41aaee:	xor    eax,0x3800
  41aaf3:	add    BYTE PTR [esi+ebx*8],al
  41aaf6:	inc    ecx
  41aaf7:	add    BYTE PTR [edx+0x38003538],al
  41aafd:	add    BYTE PTR [eax],al
  41aaff:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ab06:	xor    BYTE PTR [eax],al
  41ab08:	cmp    BYTE PTR [eax],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	add    al,0xde
  41ab0e:	inc    ecx
  41ab0f:	add    BYTE PTR [edx+0x38003038],al
  41ab15:	add    BYTE PTR [eax],al
  41ab17:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ab1e:	xor    al,BYTE PTR [eax]
  41ab20:	cmp    BYTE PTR [eax],al
  41ab22:	add    BYTE PTR [eax],al
  41ab24:	cmp    al,0xde
  41ab26:	inc    ecx
  41ab27:	add    BYTE PTR [edx+0x38003238],al
  41ab2d:	add    BYTE PTR [eax],al
  41ab2f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ab36:	xor    DWORD PTR [eax],eax
  41ab38:	cmp    BYTE PTR [eax],al
  41ab3a:	add    BYTE PTR [eax],al
  41ab3c:	and    dh,bl
  41ab3e:	inc    ecx
  41ab3f:	add    BYTE PTR [edx+0x38003138],al
  41ab45:	add    BYTE PTR [eax],al
  41ab47:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ab4e:	and    al,0x0
  41ab50:	cmp    BYTE PTR [eax],al
  41ab52:	add    BYTE PTR [eax],al
  41ab54:	and    dh,bl
  41ab56:	inc    ecx
  41ab57:	add    BYTE PTR [edx+0x38002438],al
  41ab5d:	add    BYTE PTR [eax],al
  41ab5f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ab66:	and    eax,DWORD PTR [eax]
  41ab68:	cmp    BYTE PTR [eax],al
  41ab6a:	add    BYTE PTR [eax],al
  41ab6c:	add    al,0xde
  41ab6e:	inc    ecx
  41ab6f:	add    BYTE PTR [edx+0x38002338],al
  41ab75:	add    BYTE PTR [eax],al
  41ab77:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ab7e:	and    eax,0x3800
  41ab83:	add    BYTE PTR [esi+ebx*8],al
  41ab86:	inc    ecx
  41ab87:	add    BYTE PTR [edx+0x38002538],al
  41ab8d:	add    BYTE PTR [eax],al
  41ab8f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ab96:	and    BYTE PTR [eax],al
  41ab98:	cmp    BYTE PTR [eax],al
  41ab9a:	add    BYTE PTR [eax],al
  41ab9c:	add    al,0xde
  41ab9e:	inc    ecx
  41ab9f:	add    BYTE PTR [edx+0x38002038],al
  41aba5:	add    BYTE PTR [eax],al
  41aba7:	add    BYTE PTR [ebx*8+0x38820041],bl
  41abae:	and    al,BYTE PTR [eax]
  41abb0:	cmp    BYTE PTR [eax],al
  41abb2:	add    BYTE PTR [eax],al
  41abb4:	cmp    al,0xde
  41abb6:	inc    ecx
  41abb7:	add    BYTE PTR [edx+0x38002238],al
  41abbd:	add    BYTE PTR [eax],al
  41abbf:	add    BYTE PTR [ebx*8+0x38820041],bl
  41abc6:	and    DWORD PTR [eax],eax
  41abc8:	cmp    BYTE PTR [eax],al
  41abca:	add    BYTE PTR [eax],al
  41abcc:	and    dh,bl
  41abce:	inc    ecx
  41abcf:	add    BYTE PTR [edx+0x38002138],al
  41abd5:	add    BYTE PTR [eax],al
  41abd7:	add    BYTE PTR [eax],cl
  41abd9:	loopne 0x41ac1c
  41abdb:	add    BYTE PTR [edx+0x1900d700],al
  41abe1:	add    BYTE PTR [eax],al
  41abe3:	add    ah,dh
  41abe5:	fild   WORD PTR [ecx+0x0]
  41abe8:	add    BYTE PTR [eax],0xd7
  41abeb:	add    BYTE PTR [ecx],bh
  41abed:	add    BYTE PTR [eax],al
  41abef:	add    BYTE PTR [ebx*8+0x38820041],bl
  41abf6:	cmp    al,BYTE PTR [eax]
  41abf8:	cmp    BYTE PTR [eax],al
  41abfa:	add    BYTE PTR [eax],al
  41abfc:	int3   
  41abfd:	fld    QWORD PTR [ecx+0x0]
  41ac00:	cmp    BYTE PTR [eax],0x3a
  41ac03:	add    BYTE PTR [eax],bh
  41ac05:	add    BYTE PTR [eax],al
  41ac07:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ac0e:	cmp    eax,DWORD PTR [eax]
  41ac10:	cmp    BYTE PTR [eax],al
  41ac12:	add    BYTE PTR [eax],al
  41ac14:	mov    eax,0x820041dd
  41ac19:	cmp    BYTE PTR [ebx],bh
  41ac1b:	add    BYTE PTR [eax],bh
  41ac1d:	add    BYTE PTR [eax],al
  41ac1f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41ac25:	add    dl,bl
  41ac27:	add    BYTE PTR [eax],bl
  41ac29:	add    BYTE PTR [eax],al
  41ac2b:	add    ah,dl
  41ac2d:	fiadd  WORD PTR [ecx+0x0]
  41ac30:	add    BYTE PTR [eax],0xda
  41ac33:	add    BYTE PTR [eax],bl
  41ac35:	add    BYTE PTR [eax],al
  41ac37:	add    BYTE PTR [ebx*8+0x820041],bl
  41ac3e:	fiadd  DWORD PTR [eax]
  41ac40:	cmp    BYTE PTR [eax],al
  41ac42:	add    BYTE PTR [eax],al
  41ac44:	in     al,dx
  41ac45:	fld    QWORD PTR [ecx+0x0]
  41ac48:	add    BYTE PTR [eax],0xda
  41ac4b:	add    BYTE PTR [eax],bh
  41ac4d:	add    BYTE PTR [eax],al
  41ac4f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41ac55:	add    dl,ch
  41ac57:	add    BYTE PTR [eax],bl
  41ac59:	add    BYTE PTR [eax],al
  41ac5b:	add    al,al
  41ac5d:	fiadd  WORD PTR [ecx+0x0]
  41ac60:	add    BYTE PTR [eax],0xea
  41ac63:	add    BYTE PTR [eax],bl
  41ac65:	add    BYTE PTR [eax],al
  41ac67:	add    BYTE PTR [ebx*8+0x820041],bl
  41ac6e:	jmp    0xcc00:0x3800
  41ac75:	fld    QWORD PTR [ecx+0x0]
  41ac78:	add    BYTE PTR [eax],0xea
  41ac7b:	add    BYTE PTR [eax],bh
  41ac7d:	add    BYTE PTR [eax],al
  41ac7f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ac86:	cmp    DWORD PTR [eax],eax
  41ac88:	cmp    BYTE PTR [eax],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	mov    eax,0x820041dd
  41ac91:	cmp    BYTE PTR [ecx],bh
  41ac93:	add    BYTE PTR [eax],bh
  41ac95:	add    BYTE PTR [eax],al
  41ac97:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ac9e:	cmp    BYTE PTR [eax],al
  41aca0:	cmp    BYTE PTR [eax],al
  41aca2:	add    BYTE PTR [eax],al
  41aca4:	in     al,dx
  41aca5:	fld    QWORD PTR [ecx+0x0]
  41aca8:	cmp    BYTE PTR [eax],0x38
  41acab:	add    BYTE PTR [eax],bh
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [ebx*8+0x38820041],bl
  41acb6:	add    BYTE PTR ds:[eax],bh
  41acb9:	add    BYTE PTR [eax],al
  41acbb:	add    ah,cl
  41acbd:	fld    QWORD PTR [ecx+0x0]
  41acc0:	cmp    BYTE PTR [eax],0x3e
  41acc3:	add    BYTE PTR [eax],bh
  41acc5:	add    BYTE PTR [eax],al
  41acc7:	add    BYTE PTR [ebx*8+0x38820041],bl
  41acce:	aas    
  41accf:	add    BYTE PTR [eax],bh
  41acd1:	add    BYTE PTR [eax],al
  41acd3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41acd9:	cmp    BYTE PTR [edi],bh
  41acdb:	add    BYTE PTR [eax],bh
  41acdd:	add    BYTE PTR [eax],al
  41acdf:	add    BYTE PTR [eax-0x7dffbe22],cl
  41ace5:	add    dh,bl
  41ace7:	add    BYTE PTR [eax],bl
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    ah,dl
  41aced:	fiadd  WORD PTR [ecx+0x0]
  41acf0:	add    BYTE PTR [eax],0xde
  41acf3:	add    BYTE PTR [eax],bl
  41acf5:	add    BYTE PTR [eax],al
  41acf7:	add    BYTE PTR [ebx*8+0x820041],bl
  41acfe:	fiadd  WORD PTR [eax]
  41ad00:	cmp    BYTE PTR [eax],al
  41ad02:	add    BYTE PTR [eax],al
  41ad04:	in     al,dx
  41ad05:	fld    QWORD PTR [ecx+0x0]
  41ad08:	add    BYTE PTR [eax],0xde
  41ad0b:	add    BYTE PTR [eax],bh
  41ad0d:	add    BYTE PTR [eax],al
  41ad0f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41ad15:	add    dh,ch
  41ad17:	add    BYTE PTR [eax],bl
  41ad19:	add    BYTE PTR [eax],al
  41ad1b:	add    al,al
  41ad1d:	fiadd  WORD PTR [ecx+0x0]
  41ad20:	add    BYTE PTR [eax],0xee
  41ad23:	add    BYTE PTR [eax],bl
  41ad25:	add    BYTE PTR [eax],al
  41ad27:	add    BYTE PTR [ebx*8+0x820041],bl
  41ad2e:	out    dx,al
  41ad2f:	add    BYTE PTR [eax],bh
  41ad31:	add    BYTE PTR [eax],al
  41ad33:	add    ah,cl
  41ad35:	fld    QWORD PTR [ecx+0x0]
  41ad38:	add    BYTE PTR [eax],0xee
  41ad3b:	add    BYTE PTR [eax],bh
  41ad3d:	add    BYTE PTR [eax],al
  41ad3f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ad46:	cmp    eax,0x3800
  41ad4b:	add    BYTE PTR [eax-0x7dffbe23],bh
  41ad51:	cmp    BYTE PTR ds:0x3800,bh
  41ad57:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ad5e:	cmp    al,0x0
  41ad60:	cmp    BYTE PTR [eax],al
  41ad62:	add    BYTE PTR [eax],al
  41ad64:	in     al,dx
  41ad65:	fld    QWORD PTR [ecx+0x0]
  41ad68:	cmp    BYTE PTR [eax],0x3c
  41ad6b:	add    BYTE PTR [eax],bh
  41ad6d:	add    BYTE PTR [eax],al
  41ad6f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41ad75:	add    ch,dh
  41ad77:	add    BYTE PTR [eax],bl
  41ad79:	add    BYTE PTR [eax],al
  41ad7b:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41ad82:	cmc    
  41ad83:	add    BYTE PTR [eax],bl
  41ad85:	add    BYTE PTR [eax],al
  41ad87:	add    BYTE PTR [ebx*8+0x820041],bl
  41ad8e:	cmc    
  41ad8f:	add    BYTE PTR [eax],bh
  41ad91:	add    BYTE PTR [eax],al
  41ad93:	add    BYTE PTR [eax-0x7dffbe23],bh
  41ad99:	add    ch,dh
  41ad9b:	add    BYTE PTR [eax],bh
  41ad9d:	add    BYTE PTR [eax],al
  41ad9f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41ada5:	cmp    BYTE PTR [eax+eax*1],al
  41ada8:	sbb    BYTE PTR [eax],al
  41adaa:	add    BYTE PTR [eax],al
  41adac:	rcr    dh,0x41
  41adaf:	add    BYTE PTR [edx+0x18000438],al
  41adb5:	add    BYTE PTR [eax],al
  41adb7:	add    BYTE PTR [ebx*8+0x38820041],bl
  41adbe:	add    al,0x0
  41adc0:	cmp    BYTE PTR [eax],al
  41adc2:	add    BYTE PTR [eax],al
  41adc4:	int3   
  41adc5:	fld    QWORD PTR [ecx+0x0]
  41adc8:	cmp    BYTE PTR [eax],0x4
  41adcb:	add    BYTE PTR [eax],bh
  41adcd:	add    BYTE PTR [eax],al
  41adcf:	add    BYTE PTR [eax-0x7cffbe22],bl
  41add5:	add    ah,al
  41add7:	add    BYTE PTR [edx],bl
  41add9:	add    BYTE PTR [eax],al
  41addb:	add    ah,ch
  41addd:	fiadd  WORD PTR [ecx+0x0]
  41ade0:	add    DWORD PTR [eax],0xffffffc4
  41ade3:	add    BYTE PTR [eax],bl
  41ade5:	add    BYTE PTR [eax],al
  41ade7:	add    BYTE PTR [ebp+ebx*8+0x41],dh
  41adeb:	add    BYTE PTR [ebx+0x3a00c400],al
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [esi+ebx*8+0x41],al
  41adf7:	add    BYTE PTR [ebx+0x3800c400],al
  41adfd:	add    BYTE PTR [eax],al
  41adff:	add    BYTE PTR [ebp+ebx*8+0x41],cl
  41ae03:	add    BYTE PTR [ebx+0x3e00223a],al
  41ae09:	add    BYTE PTR [eax],al
  41ae0b:	add    BYTE PTR [esi+ebx*8],cl
  41ae0e:	inc    ecx
  41ae0f:	add    BYTE PTR [ebx+0x3e00223a],al
  41ae15:	add    BYTE PTR [eax],al
  41ae17:	add    BYTE PTR [eax-0x23],ah
  41ae1a:	inc    ecx
  41ae1b:	add    BYTE PTR [ebx+0x3800223a],al
  41ae21:	add    BYTE PTR [eax],al
  41ae23:	add    BYTE PTR [eax],ch
  41ae25:	fiadd  WORD PTR [ecx+0x0]
  41ae28:	cmp    DWORD PTR [edx],0x22
  41ae2b:	add    BYTE PTR [eax],bh
  41ae2d:	add    BYTE PTR [eax],al
  41ae2f:	add    BYTE PTR [ebp+ebx*8+0x41],dh
  41ae33:	add    BYTE PTR [ebx+0x3800203a],al
  41ae39:	add    BYTE PTR [eax],al
  41ae3b:	add    BYTE PTR [eax-0x22],bl
  41ae3e:	inc    ecx
  41ae3f:	add    BYTE PTR [ebx+0x3800203a],al
  41ae45:	add    BYTE PTR [eax],al
  41ae47:	add    BYTE PTR [eax-0x7dffbe22],cl
  41ae4d:	add    BYTE PTR [edi],cl
  41ae4f:	or     al,0x98
  41ae51:	add    BYTE PTR [eax],al
  41ae53:	add    al,al
  41ae55:	fiadd  WORD PTR [ecx+0x0]
  41ae58:	add    BYTE PTR [eax],0xf
  41ae5b:	or     al,0x98
  41ae5d:	add    BYTE PTR [eax],al
  41ae5f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41ae65:	add    BYTE PTR [edi],cl
  41ae67:	or     eax,0x98
  41ae6c:	lods   al,BYTE PTR ds:[esi]
  41ae6d:	fiadd  WORD PTR [ecx+0x0]
  41ae70:	add    BYTE PTR [eax],0xf
  41ae73:	or     eax,0x98
  41ae78:	mov    dh,bl
  41ae7a:	inc    ecx
  41ae7b:	add    BYTE PTR [edx+0x18000538],al
  41ae81:	add    BYTE PTR [eax],al
  41ae83:	add    al,al
  41ae85:	fiadd  WORD PTR [ecx+0x0]
  41ae88:	cmp    BYTE PTR [eax],0x5
  41ae8b:	add    BYTE PTR [eax],bl
  41ae8d:	add    BYTE PTR [eax],al
  41ae8f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41ae96:	add    eax,0x3800
  41ae9b:	add    ah,cl
  41ae9d:	fld    QWORD PTR [ecx+0x0]
  41aea0:	cmp    BYTE PTR [eax],0x5
  41aea3:	add    BYTE PTR [eax],bh
  41aea5:	add    BYTE PTR [eax],al
  41aea7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41aead:	cmp    BYTE PTR [edi],al
  41aeaf:	add    BYTE PTR [eax],bl
  41aeb1:	add    BYTE PTR [eax],al
  41aeb3:	add    al,al
  41aeb5:	fiadd  WORD PTR [ecx+0x0]
  41aeb8:	cmp    BYTE PTR [eax],0x7
  41aebb:	add    BYTE PTR [eax],bl
  41aebd:	add    BYTE PTR [eax],al
  41aebf:	add    BYTE PTR [ebx*8+0x38820041],bl
  41aec6:	pop    es
  41aec7:	add    BYTE PTR [eax],bh
  41aec9:	add    BYTE PTR [eax],al
  41aecb:	add    ah,cl
  41aecd:	fld    QWORD PTR [ecx+0x0]
  41aed0:	cmp    BYTE PTR [eax],0x7
  41aed3:	add    BYTE PTR [eax],bh
  41aed5:	add    BYTE PTR [eax],al
  41aed7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41aedd:	cmp    BYTE PTR [esi],al
  41aedf:	add    BYTE PTR [eax],bl
  41aee1:	add    BYTE PTR [eax],al
  41aee3:	add    BYTE PTR [esi+ebx*8+0x38820041],ch
  41aeea:	push   es
  41aeeb:	add    BYTE PTR [eax],bl
  41aeed:	add    BYTE PTR [eax],al
  41aeef:	add    BYTE PTR [ebx*8+0x38820041],bl
  41aef6:	push   es
  41aef7:	add    BYTE PTR [eax],bh
  41aef9:	add    BYTE PTR [eax],al
  41aefb:	add    BYTE PTR [eax-0x7dffbe23],bh
  41af01:	cmp    BYTE PTR [esi],al
  41af03:	add    BYTE PTR [eax],bh
  41af05:	add    BYTE PTR [eax],al
  41af07:	add    BYTE PTR [ebx*8+0x38820041],bl
  41af0e:	inc    ecx
  41af0f:	add    BYTE PTR [eax],bh
  41af11:	add    BYTE PTR [eax],al
  41af13:	add    ah,cl
  41af15:	fld    QWORD PTR [ecx+0x0]
  41af18:	cmp    BYTE PTR [eax],0x41
  41af1b:	add    BYTE PTR [eax],bh
  41af1d:	add    BYTE PTR [eax],al
  41af1f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41af25:	cmp    BYTE PTR [ecx],al
  41af27:	add    BYTE PTR [eax],bl
  41af29:	add    BYTE PTR [eax],al
  41af2b:	add    al,al
  41af2d:	fiadd  WORD PTR [ecx+0x0]
  41af30:	cmp    BYTE PTR [eax],0x1
  41af33:	add    BYTE PTR [eax],bl
  41af35:	add    BYTE PTR [eax],al
  41af37:	add    BYTE PTR [ebx*8+0x38820041],bl
  41af3e:	add    DWORD PTR [eax],eax
  41af40:	cmp    BYTE PTR [eax],al
  41af42:	add    BYTE PTR [eax],al
  41af44:	int3   
  41af45:	fld    QWORD PTR [ecx+0x0]
  41af48:	cmp    BYTE PTR [eax],0x1
  41af4b:	add    BYTE PTR [eax],bh
  41af4d:	add    BYTE PTR [eax],al
  41af4f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41af55:	cmp    BYTE PTR [ebx],al
  41af57:	add    BYTE PTR [eax],bl
  41af59:	add    BYTE PTR [eax],al
  41af5b:	add    al,al
  41af5d:	fiadd  WORD PTR [ecx+0x0]
  41af60:	cmp    BYTE PTR [eax],0x3
  41af63:	add    BYTE PTR [eax],bl
  41af65:	add    BYTE PTR [eax],al
  41af67:	add    BYTE PTR [ebx*8+0x38820041],bl
  41af6e:	add    eax,DWORD PTR [eax]
  41af70:	cmp    BYTE PTR [eax],al
  41af72:	add    BYTE PTR [eax],al
  41af74:	int3   
  41af75:	fld    QWORD PTR [ecx+0x0]
  41af78:	cmp    BYTE PTR [eax],0x3
  41af7b:	add    BYTE PTR [eax],bh
  41af7d:	add    BYTE PTR [eax],al
  41af7f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41af85:	cmp    BYTE PTR [edx],al
  41af87:	add    BYTE PTR [eax],bl
  41af89:	add    BYTE PTR [eax],al
  41af8b:	add    BYTE PTR [esi+ebx*8+0x38820041],ch
  41af92:	add    al,BYTE PTR [eax]
  41af94:	sbb    BYTE PTR [eax],al
  41af96:	add    BYTE PTR [eax],al
  41af98:	sbb    al,0xdd
  41af9a:	inc    ecx
  41af9b:	add    BYTE PTR [edx+0x38000238],al
  41afa1:	add    BYTE PTR [eax],al
  41afa3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41afa9:	cmp    BYTE PTR [edx],al
  41afab:	add    BYTE PTR [eax],bh
  41afad:	add    BYTE PTR [eax],al
  41afaf:	add    BYTE PTR [eax-0x7dffbe22],cl
  41afb5:	add    BYTE PTR [edi],cl
  41afb7:	stos   BYTE PTR es:[edi],al
  41afb8:	cwde   
  41afb9:	add    BYTE PTR [eax],al
  41afbb:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41afc2:	rsm    
  41afc4:	cwde   
  41afc5:	add    BYTE PTR [eax],al
  41afc7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41afcd:	add    BYTE PTR [edi],cl
  41afcf:	call   0xdeac:0x98
  41afd6:	inc    ecx
  41afd7:	add    BYTE PTR [edx-0x6765f100],al
  41afdd:	add    BYTE PTR [eax],al
  41afdf:	add    BYTE PTR [eax-0x7dffbe22],cl
  41afe5:	add    BYTE PTR [edi],cl
  41afe7:	xchg   edi,eax
  41afe8:	cwde   
  41afe9:	add    BYTE PTR [eax],al
  41afeb:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41aff2:	seta   BYTE PTR [eax-0x78000000]
  41aff9:	fiadd  WORD PTR [ecx+0x0]
  41affc:	add    BYTE PTR [eax],0xf
  41afff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b000:	cwde   
  41b001:	add    BYTE PTR [eax],al
  41b003:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b00a:	xcrypt-ctr (bad)
  41b00b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b00c:	cwde   
  41b00d:	add    BYTE PTR [eax],al
  41b00f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b015:	add    BYTE PTR [edi],cl
  41b017:	mov    dh,0x98
  41b019:	add    BYTE PTR [eax],al
  41b01b:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b022:	movzx  ebx,BYTE PTR [eax-0x78000000]
  41b029:	fiadd  WORD PTR [ecx+0x0]
  41b02c:	add    BYTE PTR [eax],0xf
  41b02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b030:	cwde   
  41b031:	add    BYTE PTR [eax],al
  41b033:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b03a:	(bad)  
  41b03c:	cwde   
  41b03d:	add    BYTE PTR [eax],al
  41b03f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b045:	add    BYTE PTR [edi],cl
  41b047:	xchg   esi,eax
  41b048:	cwde   
  41b049:	add    BYTE PTR [eax],al
  41b04b:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b052:	setbe  BYTE PTR [eax-0x78000000]
  41b059:	fiadd  WORD PTR [ecx+0x0]
  41b05c:	add    BYTE PTR [eax],0xf
  41b05f:	mov    ds,WORD PTR [eax-0x54000000]
  41b065:	fiadd  WORD PTR [ecx+0x0]
  41b068:	add    BYTE PTR [eax],0xf
  41b06b:	mov    ds,WORD PTR [eax-0x78000000]
  41b071:	fiadd  WORD PTR [ecx+0x0]
  41b074:	add    BYTE PTR [eax],0xf
  41b077:	mov    bl,BYTE PTR [eax-0x54000000]
  41b07d:	fiadd  WORD PTR [ecx+0x0]
  41b080:	add    BYTE PTR [eax],0xf
  41b083:	mov    bl,BYTE PTR [eax-0x78000000]
  41b089:	fiadd  WORD PTR [ecx+0x0]
  41b08c:	add    BYTE PTR [eax],0xf
  41b08f:	mov    ah,0x98
  41b091:	add    BYTE PTR [eax],al
  41b093:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b09a:	lfs    ebx,FWORD PTR [eax-0x78000000]
  41b0a1:	fiadd  WORD PTR [ecx+0x0]
  41b0a4:	add    BYTE PTR [eax],0xf
  41b0a7:	xchg   esp,eax
  41b0a8:	cwde   
  41b0a9:	add    BYTE PTR [eax],al
  41b0ab:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b0b2:	sete   BYTE PTR [eax-0x78000000]
  41b0b9:	fiadd  WORD PTR [ecx+0x0]
  41b0bc:	add    BYTE PTR [eax],0xf
  41b0bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0c0:	cwde   
  41b0c1:	add    BYTE PTR [eax],al
  41b0c3:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b0ca:	shld   DWORD PTR [eax-0x78000000],ebx,0xde
  41b0d2:	inc    ecx
  41b0d3:	add    BYTE PTR [edx-0x675ff100],al
  41b0d9:	add    BYTE PTR [eax],al
  41b0db:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b0e2:	push   fs
  41b0e4:	cwde   
  41b0e5:	add    BYTE PTR [eax],al
  41b0e7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b0ed:	add    BYTE PTR [edi],cl
  41b0ef:	nop
  41b0f0:	cwde   
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b0fa:	seto   BYTE PTR [eax-0x78000000]
  41b101:	fiadd  WORD PTR [ecx+0x0]
  41b104:	add    BYTE PTR [eax],0xf
  41b107:	mov    al,0x98
  41b109:	add    BYTE PTR [eax],al
  41b10b:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b112:	cmpxchg BYTE PTR [eax-0x78000000],bl
  41b119:	fiadd  WORD PTR [ecx+0x0]
  41b11c:	add    BYTE PTR [eax],0xf
  41b11f:	sahf   
  41b120:	cwde   
  41b121:	add    BYTE PTR [eax],al
  41b123:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b12a:	setle  BYTE PTR [eax-0x78000000]
  41b131:	fiadd  WORD PTR [ecx+0x0]
  41b134:	add    BYTE PTR [eax],0xf
  41b137:	scas   al,BYTE PTR es:[edi]
  41b138:	cwde   
  41b139:	add    BYTE PTR [eax],al
  41b13b:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b142:	stmxcsr DWORD PTR [eax-0x78000000]
  41b149:	fiadd  WORD PTR [ecx+0x0]
  41b14c:	add    BYTE PTR [eax],0xf
  41b14f:	sbb    al,0x98
  41b151:	add    BYTE PTR [eax],al
  41b153:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b15a:	nop    DWORD PTR [eax-0x78000000]
  41b161:	fiadd  WORD PTR [ecx+0x0]
  41b164:	add    BYTE PTR [eax],0xf
  41b167:	sbb    eax,0x98
  41b16c:	lods   al,BYTE PTR ds:[esi]
  41b16d:	fiadd  WORD PTR [ecx+0x0]
  41b170:	add    BYTE PTR [eax],0xf
  41b173:	sbb    eax,0x98
  41b178:	cld    
  41b179:	fild   WORD PTR [ecx+0x0]
  41b17c:	add    DWORD PTR [eax],0xffffffc5
  41b17f:	add    BYTE PTR [ecx],bl
  41b181:	add    BYTE PTR [eax],al
  41b183:	add    al,ch
  41b185:	fild   WORD PTR [ecx+0x0]
  41b188:	add    DWORD PTR [eax],0xffffffc5
  41b18b:	add    BYTE PTR [ecx],bh
  41b18d:	add    BYTE PTR [eax],al
  41b18f:	add    ah,ch
  41b191:	loope  0x41b1d4
  41b193:	add    BYTE PTR [ebx+0x3900153a],al
  41b199:	add    BYTE PTR [eax],al
  41b19b:	add    BYTE PTR [edx+eiz*8+0x3a830041],bl
  41b1a2:	adc    eax,0x23800
  41b1a7:	add    BYTE PTR [ecx+eiz*8+0x3a830041],ch
  41b1ae:	push   ss
  41b1af:	add    BYTE PTR [esi],bh
  41b1b1:	add    BYTE PTR [eax],al
  41b1b3:	add    BYTE PTR [edx+eiz*8+0x41],cl
  41b1b7:	add    BYTE PTR [ebx+0x3e00163a],al
  41b1bd:	add    al,BYTE PTR [eax]
  41b1bf:	add    ah,dl
  41b1c1:	loope  0x41b204
  41b1c3:	add    BYTE PTR [ebx+0x3900163a],al
  41b1c9:	add    BYTE PTR [eax],al
  41b1cb:	add    BYTE PTR [eax-0x7cffbe1e],cl
  41b1d1:	cmp    dl,BYTE PTR [esi]
  41b1d3:	add    BYTE PTR [eax],bh
  41b1d5:	add    al,BYTE PTR [eax]
  41b1d7:	add    ah,ch
  41b1d9:	loope  0x41b21c
  41b1db:	add    BYTE PTR [ebx+0x3900143a],al
  41b1e1:	add    BYTE PTR [eax],al
  41b1e3:	add    BYTE PTR [eax-0x7cffbe1e],ch
  41b1e9:	cmp    dl,BYTE PTR [eax+eax*1]
  41b1ec:	cmp    BYTE PTR [edx],al
  41b1ee:	add    BYTE PTR [eax],al
  41b1f0:	je     0x41b1d1
  41b1f2:	inc    ecx
  41b1f3:	add    BYTE PTR [ebx+0x7800f538],al
  41b1f9:	or     BYTE PTR [eax],al
  41b1fb:	add    BYTE PTR [eax],al
  41b1fd:	fild   WORD PTR [ecx+0x0]
  41b200:	cmp    DWORD PTR [eax],0xfffffff5
  41b203:	add    BYTE PTR [eax+0x28],bh
  41b206:	add    BYTE PTR [eax],al
  41b208:	je     0x41b1e9
  41b20a:	inc    ecx
  41b20b:	add    BYTE PTR [ebx+0x5800f538],al
  41b211:	or     BYTE PTR [eax],al
  41b213:	add    BYTE PTR [eax],al
  41b215:	fild   WORD PTR [ecx+0x0]
  41b218:	cmp    DWORD PTR [eax],0xfffffff5
  41b21b:	add    BYTE PTR [eax+0x28],bl
  41b21e:	add    BYTE PTR [eax],al
  41b220:	adc    ch,bl
  41b222:	inc    ecx
  41b223:	add    BYTE PTR [ebx+0x3800623a],al
  41b229:	add    BYTE PTR [eax],al
  41b22b:	add    al,ah
  41b22d:	fld    QWORD PTR [ecx+0x0]
  41b230:	cmp    DWORD PTR [edx],0x62
  41b233:	add    BYTE PTR [eax],bh
  41b235:	add    BYTE PTR [eax],al
  41b237:	add    al,al
  41b239:	fld    QWORD PTR [ecx+0x0]
  41b23c:	cmp    DWORD PTR [edx],0x62
  41b23f:	add    BYTE PTR [eax],bh
  41b241:	add    BYTE PTR [eax],al
  41b243:	add    BYTE PTR [eax],dl
  41b245:	fld    QWORD PTR [ecx+0x0]
  41b248:	cmp    DWORD PTR [edx],0x63
  41b24b:	add    BYTE PTR [eax],bh
  41b24d:	add    BYTE PTR [eax],al
  41b24f:	add    al,ah
  41b251:	fld    QWORD PTR [ecx+0x0]
  41b254:	cmp    DWORD PTR [edx],0x63
  41b257:	add    BYTE PTR [eax],bh
  41b259:	add    BYTE PTR [eax],al
  41b25b:	add    al,al
  41b25d:	fld    QWORD PTR [ecx+0x0]
  41b260:	cmp    DWORD PTR [edx],0x63
  41b263:	add    BYTE PTR [eax],bh
  41b265:	add    BYTE PTR [eax],al
  41b267:	add    BYTE PTR [ebx*8+0x38820041],bl
  41b26e:	aaa    
  41b26f:	add    BYTE PTR [eax],bh
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [eax-0x7dffbe23],bl
  41b279:	cmp    BYTE PTR [edi],dh
  41b27b:	add    BYTE PTR [eax],bh
  41b27d:	add    BYTE PTR [eax],al
  41b27f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b285:	add    BYTE PTR [ebp+0x0],ah
  41b288:	sbb    BYTE PTR [eax],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	rcr    dh,0x41
  41b28f:	add    BYTE PTR [edx+0x18006500],al
  41b295:	add    BYTE PTR [eax],al
  41b297:	add    BYTE PTR [ebx*8+0x820041],bl
  41b29e:	add    BYTE PTR gs:[eax],bh
  41b2a1:	add    BYTE PTR [eax],al
  41b2a3:	add    ah,cl
  41b2a5:	fld    QWORD PTR [ecx+0x0]
  41b2a8:	add    BYTE PTR [eax],0x65
  41b2ab:	add    BYTE PTR [eax],bh
  41b2ad:	add    BYTE PTR [eax],al
  41b2af:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b2b5:	add    BYTE PTR [esi+0x0],ah
  41b2b8:	sbb    BYTE PTR [eax],al
  41b2ba:	add    BYTE PTR [eax],al
  41b2bc:	lods   al,BYTE PTR ds:[esi]
  41b2bd:	fiadd  WORD PTR [ecx+0x0]
  41b2c0:	add    BYTE PTR [eax],0x66
  41b2c3:	add    BYTE PTR [eax],bl
  41b2c5:	add    DWORD PTR [eax],eax
  41b2c7:	add    BYTE PTR [ebx*8+0x820041],bl
  41b2ce:	data16 add BYTE PTR [eax],bh
  41b2d1:	add    BYTE PTR [eax],al
  41b2d3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41b2d9:	add    BYTE PTR [esi+0x0],ah
  41b2dc:	cmp    BYTE PTR [eax],al
  41b2de:	add    BYTE PTR [eax],al
  41b2e0:	mov    dh,bl
  41b2e2:	inc    ecx
  41b2e3:	add    BYTE PTR [edx+0x18006400],al
  41b2e9:	add    BYTE PTR [eax],al
  41b2eb:	add    ah,dl
  41b2ed:	fiadd  WORD PTR [ecx+0x0]
  41b2f0:	add    BYTE PTR [eax],0x64
  41b2f3:	add    BYTE PTR [eax],bl
  41b2f5:	add    BYTE PTR [eax],al
  41b2f7:	add    BYTE PTR [ebx*8+0x820041],bl
  41b2fe:	add    BYTE PTR fs:[eax],bh
  41b301:	add    BYTE PTR [eax],al
  41b303:	add    ah,ch
  41b305:	fld    QWORD PTR [ecx+0x0]
  41b308:	add    BYTE PTR [eax],0x64
  41b30b:	add    BYTE PTR [eax],bh
  41b30d:	add    BYTE PTR [eax],al
  41b30f:	add    BYTE PTR [eax],dl
  41b311:	fld    QWORD PTR [ecx+0x0]
  41b314:	cmp    DWORD PTR [edx],0x60
  41b317:	add    BYTE PTR [eax],bh
  41b319:	add    BYTE PTR [eax],al
  41b31b:	add    al,ah
  41b31d:	fld    QWORD PTR [ecx+0x0]
  41b320:	cmp    DWORD PTR [edx],0x60
  41b323:	add    BYTE PTR [eax],bh
  41b325:	add    BYTE PTR [eax],al
  41b327:	add    al,al
  41b329:	fld    QWORD PTR [ecx+0x0]
  41b32c:	cmp    DWORD PTR [edx],0x60
  41b32f:	add    BYTE PTR [eax],bh
  41b331:	add    BYTE PTR [eax],al
  41b333:	add    BYTE PTR [eax],dl
  41b335:	fld    QWORD PTR [ecx+0x0]
  41b338:	cmp    DWORD PTR [edx],0x61
  41b33b:	add    BYTE PTR [eax],bh
  41b33d:	add    BYTE PTR [eax],al
  41b33f:	add    al,ah
  41b341:	fld    QWORD PTR [ecx+0x0]
  41b344:	cmp    DWORD PTR [edx],0x61
  41b347:	add    BYTE PTR [eax],bh
  41b349:	add    BYTE PTR [eax],al
  41b34b:	add    al,al
  41b34d:	fld    QWORD PTR [ecx+0x0]
  41b350:	cmp    DWORD PTR [edx],0x61
  41b353:	add    BYTE PTR [eax],bh
  41b355:	add    BYTE PTR [eax],al
  41b357:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b35d:	add    BYTE PTR [ebp+0x0],dh
  41b360:	sbb    BYTE PTR [eax],al
  41b362:	add    BYTE PTR [eax],al
  41b364:	rcr    dh,0x41
  41b367:	add    BYTE PTR [edx+0x18007500],al
  41b36d:	add    BYTE PTR [eax],al
  41b36f:	add    BYTE PTR [ebx*8+0x820041],bl
  41b376:	jne    0x41b378
  41b378:	cmp    BYTE PTR [eax],al
  41b37a:	add    BYTE PTR [eax],al
  41b37c:	int3   
  41b37d:	fld    QWORD PTR [ecx+0x0]
  41b380:	add    BYTE PTR [eax],0x75
  41b383:	add    BYTE PTR [eax],bh
  41b385:	add    BYTE PTR [eax],al
  41b387:	add    BYTE PTR [ebx*8+0x38820041],bl
  41b38e:	sub    DWORD PTR [eax],eax
  41b390:	cmp    BYTE PTR [eax],al
  41b392:	add    BYTE PTR [eax],al
  41b394:	cwde   
  41b395:	fld    QWORD PTR [ecx+0x0]
  41b398:	cmp    BYTE PTR [eax],0x29
  41b39b:	add    BYTE PTR [eax],bh
  41b39d:	add    BYTE PTR [eax],al
  41b39f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b3a5:	add    BYTE PTR [esi+0x0],dh
  41b3a8:	sbb    BYTE PTR [eax],al
  41b3aa:	add    BYTE PTR [eax],al
  41b3ac:	lods   al,BYTE PTR ds:[esi]
  41b3ad:	fiadd  WORD PTR [ecx+0x0]
  41b3b0:	add    BYTE PTR [eax],0x76
  41b3b3:	add    BYTE PTR [eax],bl
  41b3b5:	add    BYTE PTR [eax],al
  41b3b7:	add    BYTE PTR [ebx*8+0x820041],bl
  41b3be:	jbe    0x41b3c0
  41b3c0:	cmp    BYTE PTR [eax],al
  41b3c2:	add    BYTE PTR [eax],al
  41b3c4:	mov    eax,0x820041dd
  41b3c9:	add    BYTE PTR [esi+0x0],dh
  41b3cc:	cmp    BYTE PTR [eax],al
  41b3ce:	add    BYTE PTR [eax],al
  41b3d0:	mov    dh,bl
  41b3d2:	inc    ecx
  41b3d3:	add    BYTE PTR [edx+0x18007400],al
  41b3d9:	add    BYTE PTR [eax],al
  41b3db:	add    ah,dl
  41b3dd:	fiadd  WORD PTR [ecx+0x0]
  41b3e0:	add    BYTE PTR [eax],0x74
  41b3e3:	add    BYTE PTR [eax],bl
  41b3e5:	add    BYTE PTR [eax],al
  41b3e7:	add    BYTE PTR [ebx*8+0x820041],bl
  41b3ee:	je     0x41b3f0
  41b3f0:	cmp    BYTE PTR [eax],al
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	in     al,dx
  41b3f5:	fld    QWORD PTR [ecx+0x0]
  41b3f8:	add    BYTE PTR [eax],0x74
  41b3fb:	add    BYTE PTR [eax],bh
  41b3fd:	add    BYTE PTR [eax],al
  41b3ff:	add    BYTE PTR [eax],dl
  41b401:	fld    QWORD PTR [ecx+0x0]
  41b404:	cmp    DWORD PTR [edx],0x44
  41b407:	add    BYTE PTR [eax],bh
  41b409:	add    BYTE PTR [eax],al
  41b40b:	add    al,al
  41b40d:	fld    QWORD PTR [ecx+0x0]
  41b410:	cmp    DWORD PTR [edx],0x44
  41b413:	add    BYTE PTR [eax],bh
  41b415:	add    BYTE PTR [eax],al
  41b417:	add    BYTE PTR [ebx*8+0x3a820041],bl
  41b41e:	inc    esp
  41b41f:	add    BYTE PTR [eax-0x34000000],bh
  41b425:	fld    QWORD PTR [ecx+0x0]
  41b428:	cmp    BYTE PTR [edx],0x44
  41b42b:	add    BYTE PTR [eax+0x1c000000],bh
  41b431:	fld    QWORD PTR [ecx+0x0]
  41b434:	cmp    BYTE PTR [edx],0x44
  41b437:	adc    BYTE PTR [eax-0x34000000],bh
  41b43d:	fld    QWORD PTR [ecx+0x0]
  41b440:	cmp    BYTE PTR [edx],0x44
  41b443:	adc    BYTE PTR [eax+0x1c000000],bh
  41b449:	fld    QWORD PTR [ecx+0x0]
  41b44c:	cmp    BYTE PTR [edx],0x44
  41b44f:	add    DWORD PTR [eax-0x34000000],edi
  41b455:	fld    QWORD PTR [ecx+0x0]
  41b458:	cmp    BYTE PTR [edx],0x44
  41b45b:	add    DWORD PTR [eax+0x1c000000],edi
  41b461:	fld    QWORD PTR [ecx+0x0]
  41b464:	cmp    BYTE PTR [edx],0x44
  41b467:	adc    DWORD PTR [eax-0x34000000],edi
  41b46d:	fld    QWORD PTR [ecx+0x0]
  41b470:	cmp    BYTE PTR [edx],0x44
  41b473:	adc    DWORD PTR [eax+0x10000000],edi
  41b479:	fld    QWORD PTR [ecx+0x0]
  41b47c:	cmp    DWORD PTR [edx],0xe
  41b47f:	add    BYTE PTR [eax],bh
  41b481:	add    BYTE PTR [eax],al
  41b483:	add    al,al
  41b485:	fld    QWORD PTR [ecx+0x0]
  41b488:	cmp    DWORD PTR [edx],0xe
  41b48b:	add    BYTE PTR [eax],bh
  41b48d:	add    BYTE PTR [eax],al
  41b48f:	add    ah,ch
  41b491:	fadd   QWORD PTR [ecx+0x0]
  41b494:	cmp    DWORD PTR [eax],0x10
  41b497:	add    BYTE PTR [eax],bh
  41b499:	add    BYTE PTR [eax],al
  41b49b:	add    ah,dl
  41b49d:	fld    QWORD PTR [ecx+0x0]
  41b4a0:	cmp    DWORD PTR [eax],0x10
  41b4a3:	add    BYTE PTR [eax],bh
  41b4a5:	add    BYTE PTR [eax],al
  41b4a7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b4ad:	add    bl,ah
  41b4af:	add    BYTE PTR [eax],bl
  41b4b1:	add    BYTE PTR [eax],al
  41b4b3:	add    al,al
  41b4b5:	fiadd  WORD PTR [ecx+0x0]
  41b4b8:	add    BYTE PTR [eax],0xe3
  41b4bb:	add    BYTE PTR [eax],bl
  41b4bd:	add    BYTE PTR [eax],al
  41b4bf:	add    BYTE PTR [ebx*8+0x820041],bl
  41b4c6:	jecxz  0x41b4c8
  41b4c8:	cmp    BYTE PTR [eax],al
  41b4ca:	add    BYTE PTR [eax],al
  41b4cc:	int3   
  41b4cd:	fld    QWORD PTR [ecx+0x0]
  41b4d0:	add    BYTE PTR [eax],0xe3
  41b4d3:	add    BYTE PTR [eax],bh
  41b4d5:	add    BYTE PTR [eax],al
  41b4d7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b4dd:	add    BYTE PTR [edi],cl
  41b4df:	mov    edi,0x98
  41b4e4:	aam    0xde
  41b4e6:	inc    ecx
  41b4e7:	add    BYTE PTR [edx-0x6740f100],al
  41b4ed:	add    BYTE PTR [eax],al
  41b4ef:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b4f5:	add    al,ah
  41b4f7:	add    BYTE PTR [eax],bl
  41b4f9:	add    BYTE PTR [eax],al
  41b4fb:	add    ah,dl
  41b4fd:	fiadd  WORD PTR [ecx+0x0]
  41b500:	add    BYTE PTR [eax],0xe0
  41b503:	add    BYTE PTR [eax],bl
  41b505:	add    BYTE PTR [eax],al
  41b507:	add    BYTE PTR [ebx*8+0x820041],bl
  41b50e:	loopne 0x41b510
  41b510:	cmp    BYTE PTR [eax],al
  41b512:	add    BYTE PTR [eax],al
  41b514:	in     al,dx
  41b515:	fld    QWORD PTR [ecx+0x0]
  41b518:	add    BYTE PTR [eax],0xe0
  41b51b:	add    BYTE PTR [eax],bh
  41b51d:	add    BYTE PTR [eax],al
  41b51f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b525:	add    bh,bl
  41b527:	add    BYTE PTR [eax],bl
  41b529:	add    BYTE PTR [eax],al
  41b52b:	add    al,bh
  41b52d:	fiadd  WORD PTR [ecx+0x0]
  41b530:	add    BYTE PTR [eax],0xdf
  41b533:	add    BYTE PTR [eax],bl
  41b535:	add    DWORD PTR [eax],eax
  41b537:	add    BYTE PTR [ebx*8+0x820041],bl
  41b53e:	fild   WORD PTR [eax]
  41b540:	cmp    BYTE PTR [eax],al
  41b542:	add    BYTE PTR [eax],al
  41b544:	ins    BYTE PTR es:[edi],dx
  41b545:	fiadd  WORD PTR [ecx+0x0]
  41b548:	add    BYTE PTR [eax],0xdf
  41b54b:	add    BYTE PTR [eax],bh
  41b54d:	add    DWORD PTR [eax],eax
  41b54f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b555:	add    bl,bl
  41b557:	add    BYTE PTR [eax],bl
  41b559:	add    BYTE PTR [eax],al
  41b55b:	add    al,bh
  41b55d:	fiadd  WORD PTR [ecx+0x0]
  41b560:	add    BYTE PTR [eax],0xdb
  41b563:	add    BYTE PTR [eax],bl
  41b565:	add    DWORD PTR [eax],eax
  41b567:	add    BYTE PTR [ebx*8+0x820041],bl
  41b56e:	fild   DWORD PTR [eax]
  41b570:	cmp    BYTE PTR [eax],al
  41b572:	add    BYTE PTR [eax],al
  41b574:	ins    BYTE PTR es:[edi],dx
  41b575:	fiadd  WORD PTR [ecx+0x0]
  41b578:	add    BYTE PTR [eax],0xdb
  41b57b:	add    BYTE PTR [eax],bh
  41b57d:	add    DWORD PTR [eax],eax
  41b57f:	add    BYTE PTR [esi+ebx*8+0x41],bh
  41b583:	add    BYTE PTR [ebx+0x18000f3a],al
  41b589:	add    BYTE PTR [eax],al
  41b58b:	add    al,cl
  41b58d:	fiadd  WORD PTR [ecx+0x0]
  41b590:	cmp    DWORD PTR [edx],0xf
  41b593:	add    BYTE PTR [eax],bl
  41b595:	add    BYTE PTR [eax],al
  41b597:	add    BYTE PTR [eax],dl
  41b599:	fld    QWORD PTR [ecx+0x0]
  41b59c:	cmp    DWORD PTR [edx],0xf
  41b59f:	add    BYTE PTR [eax],bh
  41b5a1:	add    BYTE PTR [eax],al
  41b5a3:	add    al,ah
  41b5a5:	fld    QWORD PTR [ecx+0x0]
  41b5a8:	cmp    DWORD PTR [edx],0xf
  41b5ab:	add    BYTE PTR [eax],bh
  41b5ad:	add    BYTE PTR [eax],al
  41b5af:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b5b5:	add    ch,bh
  41b5b7:	add    BYTE PTR [eax],bl
  41b5b9:	add    BYTE PTR [eax],al
  41b5bb:	add    al,al
  41b5bd:	fiadd  WORD PTR [ecx+0x0]
  41b5c0:	add    BYTE PTR [eax],0xfd
  41b5c3:	add    BYTE PTR [eax],bl
  41b5c5:	add    BYTE PTR [eax],al
  41b5c7:	add    BYTE PTR [ebx*8+0x820041],bl
  41b5ce:	std    
  41b5cf:	add    BYTE PTR [eax],bh
  41b5d1:	add    BYTE PTR [eax],al
  41b5d3:	add    ah,cl
  41b5d5:	fld    QWORD PTR [ecx+0x0]
  41b5d8:	add    BYTE PTR [eax],0xfd
  41b5db:	add    BYTE PTR [eax],bh
  41b5dd:	add    BYTE PTR [eax],al
  41b5df:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b5e5:	add    ch,bl
  41b5e7:	add    BYTE PTR [eax],bl
  41b5e9:	add    BYTE PTR [eax],al
  41b5eb:	add    al,al
  41b5ed:	fiadd  WORD PTR [ecx+0x0]
  41b5f0:	add    BYTE PTR [eax],0xdd
  41b5f3:	add    BYTE PTR [eax],bl
  41b5f5:	add    BYTE PTR [eax],al
  41b5f7:	add    BYTE PTR [ebx*8+0x820041],bl
  41b5fe:	fld    QWORD PTR [eax]
  41b600:	cmp    BYTE PTR [eax],al
  41b602:	add    BYTE PTR [eax],al
  41b604:	int3   
  41b605:	fld    QWORD PTR [ecx+0x0]
  41b608:	add    BYTE PTR [eax],0xdd
  41b60b:	add    BYTE PTR [eax],bh
  41b60d:	add    BYTE PTR [eax],al
  41b60f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b615:	add    ah,bl
  41b617:	add    BYTE PTR [eax],bl
  41b619:	add    BYTE PTR [eax],al
  41b61b:	add    ah,dl
  41b61d:	fiadd  WORD PTR [ecx+0x0]
  41b620:	add    BYTE PTR [eax],0xdc
  41b623:	add    BYTE PTR [eax],bl
  41b625:	add    BYTE PTR [eax],al
  41b627:	add    BYTE PTR [ebx*8+0x820041],bl
  41b62e:	fadd   QWORD PTR [eax]
  41b630:	cmp    BYTE PTR [eax],al
  41b632:	add    BYTE PTR [eax],al
  41b634:	in     al,dx
  41b635:	fld    QWORD PTR [ecx+0x0]
  41b638:	add    BYTE PTR [eax],0xdc
  41b63b:	add    BYTE PTR [eax],bh
  41b63d:	add    BYTE PTR [eax],al
  41b63f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b645:	add    ch,ch
  41b647:	add    BYTE PTR [eax],bl
  41b649:	add    BYTE PTR [eax],al
  41b64b:	add    al,al
  41b64d:	fiadd  WORD PTR [ecx+0x0]
  41b650:	add    BYTE PTR [eax],0xed
  41b653:	add    BYTE PTR [eax],bl
  41b655:	add    BYTE PTR [eax],al
  41b657:	add    BYTE PTR [ebx*8+0x820041],bl
  41b65e:	in     eax,dx
  41b65f:	add    BYTE PTR [eax],bh
  41b661:	add    BYTE PTR [eax],al
  41b663:	add    ah,cl
  41b665:	fld    QWORD PTR [ecx+0x0]
  41b668:	add    BYTE PTR [eax],0xed
  41b66b:	add    BYTE PTR [eax],bh
  41b66d:	add    BYTE PTR [eax],al
  41b66f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b675:	add    ah,ch
  41b677:	add    BYTE PTR [eax],bl
  41b679:	add    BYTE PTR [eax],al
  41b67b:	add    ah,dl
  41b67d:	fiadd  WORD PTR [ecx+0x0]
  41b680:	add    BYTE PTR [eax],0xec
  41b683:	add    BYTE PTR [eax],bl
  41b685:	add    BYTE PTR [eax],al
  41b687:	add    BYTE PTR [ebx*8+0x820041],bl
  41b68e:	in     al,dx
  41b68f:	add    BYTE PTR [eax],bh
  41b691:	add    BYTE PTR [eax],al
  41b693:	add    ah,ch
  41b695:	fld    QWORD PTR [ecx+0x0]
  41b698:	add    BYTE PTR [eax],0xec
  41b69b:	add    BYTE PTR [eax],bh
  41b69d:	add    BYTE PTR [eax],al
  41b69f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b6a5:	add    ah,dl
  41b6a7:	add    BYTE PTR [eax],bl
  41b6a9:	add    BYTE PTR [eax],al
  41b6ab:	add    al,bh
  41b6ad:	fiadd  WORD PTR [ecx+0x0]
  41b6b0:	add    BYTE PTR [eax],0xd4
  41b6b3:	add    BYTE PTR [eax],bl
  41b6b5:	add    DWORD PTR [eax],eax
  41b6b7:	add    BYTE PTR [ebx*8+0x820041],bl
  41b6be:	aam    0x0
  41b6c0:	cmp    BYTE PTR [eax],al
  41b6c2:	add    BYTE PTR [eax],al
  41b6c4:	cwde   
  41b6c5:	fld    QWORD PTR [ecx+0x0]
  41b6c8:	add    BYTE PTR [eax],0xd4
  41b6cb:	add    BYTE PTR [eax],bh
  41b6cd:	add    BYTE PTR [eax],al
  41b6cf:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b6d5:	add    dh,bh
  41b6d7:	add    BYTE PTR [eax],bl
  41b6d9:	add    BYTE PTR [eax],al
  41b6db:	add    BYTE PTR [esi+ebx*8+0x820041],ch
  41b6e2:	inc    BYTE PTR [eax]
  41b6e4:	sbb    BYTE PTR [eax],al
  41b6e6:	add    BYTE PTR [eax],al
  41b6e8:	sbb    al,0xdd
  41b6ea:	inc    ecx
  41b6eb:	add    BYTE PTR [edx+0x3800fe00],al
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41b6f9:	add    dh,bh
  41b6fb:	add    BYTE PTR [eax],bh
  41b6fd:	add    BYTE PTR [eax],al
  41b6ff:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b705:	add    ah,bh
  41b707:	add    BYTE PTR [eax],bl
  41b709:	add    BYTE PTR [eax],al
  41b70b:	add    ah,dl
  41b70d:	fiadd  WORD PTR [ecx+0x0]
  41b710:	add    BYTE PTR [eax],0xfc
  41b713:	add    BYTE PTR [eax],bl
  41b715:	add    BYTE PTR [eax],al
  41b717:	add    BYTE PTR [ebx*8+0x820041],bl
  41b71e:	cld    
  41b71f:	add    BYTE PTR [eax],bh
  41b721:	add    BYTE PTR [eax],al
  41b723:	add    ah,ch
  41b725:	fld    QWORD PTR [ecx+0x0]
  41b728:	add    BYTE PTR [eax],0xfc
  41b72b:	add    BYTE PTR [eax],bh
  41b72d:	add    BYTE PTR [eax],al
  41b72f:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b735:	add    BYTE PTR [edi+0x0],ah
  41b738:	sbb    BYTE PTR [eax],al
  41b73a:	add    BYTE PTR [eax],al
  41b73c:	rcr    dh,0x41
  41b73f:	add    BYTE PTR [edx+0x18006700],al
  41b745:	add    BYTE PTR [eax],al
  41b747:	add    BYTE PTR [ebx*8+0x820041],bl
  41b74e:	add    BYTE PTR [bx+si],bh
  41b751:	add    BYTE PTR [eax],al
  41b753:	add    ah,cl
  41b755:	fld    QWORD PTR [ecx+0x0]
  41b758:	add    BYTE PTR [eax],0x67
  41b75b:	add    BYTE PTR [eax],bh
  41b75d:	add    BYTE PTR [eax],al
  41b75f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41b766:	sub    eax,DWORD PTR [eax]
  41b768:	cmp    BYTE PTR [eax],al
  41b76a:	add    BYTE PTR [eax],al
  41b76c:	mov    eax,0x820041dd
  41b771:	cmp    BYTE PTR [ebx],ch
  41b773:	add    BYTE PTR [eax],bh
  41b775:	add    BYTE PTR [eax],al
  41b777:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b77d:	add    BYTE PTR [ebx+0x0],ah
  41b780:	sbb    BYTE PTR [eax],al
  41b782:	add    BYTE PTR [eax],al
  41b784:	rcr    dh,0x41
  41b787:	add    BYTE PTR [edx+0x18006300],al
  41b78d:	add    BYTE PTR [eax],al
  41b78f:	add    BYTE PTR [ebx*8+0x820041],bl
  41b796:	arpl   WORD PTR [eax],ax
  41b798:	cmp    BYTE PTR [eax],al
  41b79a:	add    BYTE PTR [eax],al
  41b79c:	int3   
  41b79d:	fld    QWORD PTR [ecx+0x0]
  41b7a0:	add    BYTE PTR [eax],0x63
  41b7a3:	add    BYTE PTR [eax],bh
  41b7a5:	add    BYTE PTR [eax],al
  41b7a7:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b7ad:	add    BYTE PTR [ebx+0x0],ch
  41b7b0:	sbb    BYTE PTR [eax],al
  41b7b2:	add    BYTE PTR [eax],al
  41b7b4:	lods   al,BYTE PTR ds:[esi]
  41b7b5:	fiadd  WORD PTR [ecx+0x0]
  41b7b8:	add    BYTE PTR [eax],0x6b
  41b7bb:	add    BYTE PTR [eax],bl
  41b7bd:	add    BYTE PTR [eax],al
  41b7bf:	add    BYTE PTR [ebx*8+0x820041],bl
  41b7c6:	imul   eax,DWORD PTR [eax],0x38
  41b7c9:	add    BYTE PTR [eax],al
  41b7cb:	add    BYTE PTR [eax-0x7dffbe23],bh
  41b7d1:	add    BYTE PTR [ebx+0x0],ch
  41b7d4:	cmp    BYTE PTR [eax],al
  41b7d6:	add    BYTE PTR [eax],al
  41b7d8:	mov    dh,bl
  41b7da:	inc    ecx
  41b7db:	add    BYTE PTR [edx+0x18001d38],al
  41b7e1:	add    BYTE PTR [eax],al
  41b7e3:	add    al,al
  41b7e5:	fiadd  WORD PTR [ecx+0x0]
  41b7e8:	cmp    BYTE PTR [eax],0x1d
  41b7eb:	add    BYTE PTR [eax],bl
  41b7ed:	add    BYTE PTR [eax],al
  41b7ef:	add    BYTE PTR [ebx*8+0x38820041],bl
  41b7f6:	sbb    eax,0x3800
  41b7fb:	add    ah,cl
  41b7fd:	fld    QWORD PTR [ecx+0x0]
  41b800:	cmp    BYTE PTR [eax],0x1d
  41b803:	add    BYTE PTR [eax],bh
  41b805:	add    BYTE PTR [eax],al
  41b807:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b80d:	cmp    BYTE PTR [esi],bl
  41b80f:	add    BYTE PTR [eax],bl
  41b811:	add    BYTE PTR [eax],al
  41b813:	add    BYTE PTR [esi+ebx*8+0x38820041],ch
  41b81a:	push   ds
  41b81b:	add    BYTE PTR [eax],bl
  41b81d:	add    BYTE PTR [eax],al
  41b81f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41b826:	push   ds
  41b827:	add    BYTE PTR [eax],bh
  41b829:	add    BYTE PTR [eax],al
  41b82b:	add    BYTE PTR [eax-0x7dffbe23],bh
  41b831:	cmp    BYTE PTR [esi],bl
  41b833:	add    BYTE PTR [eax],bh
  41b835:	add    BYTE PTR [eax],al
  41b837:	add    BYTE PTR [eax-0x7dffbe22],cl
  41b83d:	cmp    BYTE PTR [eax+eax*1],bl
  41b840:	sbb    BYTE PTR [eax],al
  41b842:	add    BYTE PTR [eax],al
  41b844:	aam    0xde
  41b846:	inc    ecx
  41b847:	add    BYTE PTR [edx+0x18001c38],al
  41b84d:	add    BYTE PTR [eax],al
  41b84f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41b856:	sbb    al,0x0
  41b858:	cmp    BYTE PTR [eax],al
  41b85a:	add    BYTE PTR [eax],al
  41b85c:	in     al,dx
  41b85d:	fld    QWORD PTR [ecx+0x0]
  41b860:	cmp    BYTE PTR [eax],0x1c
  41b863:	add    BYTE PTR [eax],bh
  41b865:	add    BYTE PTR [eax],al
  41b867:	add    BYTE PTR [esi+ebp*2],al
  41b86a:	add    al,BYTE PTR [edx+eax*1]
  41b86d:	outs   dx,BYTE PTR ds:[esi]
  41b86e:	add    al,BYTE PTR [ecx+eax*1]
  41b871:	outs   dx,BYTE PTR ds:[esi]
  41b872:	add    al,BYTE PTR [eax+eax*1]
  41b875:	outs   dx,BYTE PTR ds:[esi]
  41b876:	add    al,BYTE PTR [eax+edx*1]
  41b879:	jecxz  0x41b8bc
  41b87b:	add    BYTE PTR [edx],al
  41b87d:	add    dh,ah
  41b87f:	add    BYTE PTR [eax],bl
  41b881:	add    BYTE PTR [eax],al
  41b883:	add    BYTE PTR [eax],cl
  41b885:	jecxz  0x41b8c8
  41b887:	add    BYTE PTR [edx],al
  41b889:	add    bh,ah
  41b88b:	add    BYTE PTR [edx],bl
  41b88d:	add    BYTE PTR [eax],al
  41b88f:	add    ah,dh
  41b891:	jecxz  0x41b8d4
  41b893:	add    BYTE PTR [edx],al
  41b895:	add    dh,ch
  41b897:	add    BYTE PTR [eax],bl
  41b899:	add    BYTE PTR [eax],al
  41b89b:	add    ah,ch
  41b89d:	jecxz  0x41b8e0
  41b89f:	add    BYTE PTR [edx],al
  41b8a1:	add    bh,ch
  41b8a3:	add    BYTE PTR [edx],bl
  41b8a5:	add    BYTE PTR [eax],al
  41b8a7:	add    BYTE PTR [ebx*8+0x820041],bl
  41b8ae:	push   esi
  41b8af:	add    BYTE PTR [eax],bl
  41b8b1:	add    BYTE PTR [eax],al
  41b8b3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41b8b9:	add    BYTE PTR [esi+0x0],dl
  41b8bc:	sbb    BYTE PTR [eax],al
  41b8be:	add    BYTE PTR [eax],al
  41b8c0:	sbb    al,0xdd
  41b8c2:	inc    ecx
  41b8c3:	add    BYTE PTR [edx+0x38005600],al
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [eax-0x7dffbe23],bl
  41b8d1:	add    BYTE PTR [esi+0x0],dl
  41b8d4:	cmp    BYTE PTR [eax],al
  41b8d6:	add    BYTE PTR [eax],al
  41b8d8:	sub    ah,ah
  41b8da:	inc    ecx
  41b8db:	add    BYTE PTR [edx],al
  41b8dd:	add    BYTE PTR [eax+eax*1],cl
  41b8e0:	sbb    BYTE PTR [eax],al
  41b8e2:	add    BYTE PTR [eax],al
  41b8e4:	dec    eax
  41b8e5:	loope  0x41b928
  41b8e7:	add    BYTE PTR [edx],bl
  41b8e9:	add    BYTE PTR [ebx+0x21900],al
  41b8ef:	add    al,bh
  41b8f1:	loopne 0x41b934
  41b8f3:	add    BYTE PTR [edx],bl
  41b8f5:	add    BYTE PTR [ebx+0x21900],al
  41b8fb:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41b8ff:	add    BYTE PTR [edx],bl
  41b901:	add    BYTE PTR [eax+0x21800],al
  41b907:	add    BYTE PTR [esp+eiz*8],al
  41b90a:	inc    ecx
  41b90b:	add    BYTE PTR [edx],al
  41b90d:	add    BYTE PTR ds:0x11900,cl
  41b913:	add    BYTE PTR [ecx+eiz*8],ch
  41b916:	inc    ecx
  41b917:	add    BYTE PTR [edx],bl
  41b919:	add    BYTE PTR [ecx+0x31900],al
  41b91f:	add    al,ch
  41b921:	loopne 0x41b964
  41b923:	add    BYTE PTR [edx],bl
  41b925:	add    BYTE PTR [ecx+0x21900],al
  41b92b:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  41b932:	or     al,BYTE PTR [eax]
  41b934:	sbb    BYTE PTR [ecx],al
  41b936:	add    BYTE PTR [eax],al
  41b938:	push   esp
  41b939:	loope  0x41b97c
  41b93b:	add    BYTE PTR [edx],al
  41b93d:	add    BYTE PTR [eax],cl
  41b93f:	add    BYTE PTR [eax],bl
  41b941:	add    eax,DWORD PTR [eax]
  41b943:	add    BYTE PTR [eax-0x20],ah
  41b946:	inc    ecx
  41b947:	add    BYTE PTR [edx],al
  41b949:	add    BYTE PTR [ebx],cl
  41b94b:	add    BYTE PTR [ecx],bl
  41b94d:	add    DWORD PTR [eax],eax
  41b94f:	add    BYTE PTR [eax+0x20041e1],dl
  41b955:	add    BYTE PTR [ecx],cl
  41b957:	add    BYTE PTR [edx],bl
  41b959:	add    eax,DWORD PTR [eax]
  41b95b:	add    ah,bl
  41b95d:	loop   0x41b9a0
  41b95f:	add    BYTE PTR [edx],bl
  41b961:	add    BYTE PTR [eax+0x21800],al
  41b967:	add    ah,dl
  41b969:	loop   0x41b9ac
  41b96b:	add    BYTE PTR [edx],bl
  41b96d:	add    BYTE PTR [ecx+0x31c00],al
  41b973:	add    ah,cl
  41b975:	loop   0x41b9b8
  41b977:	add    BYTE PTR [edx],bl
  41b979:	add    BYTE PTR [ecx+0x51d00],al
  41b97f:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  41b983:	add    BYTE PTR [ecx],ch
  41b985:	add    dh,dh
  41b987:	add    BYTE PTR [eax],bl
  41b989:	add    al,BYTE PTR [eax]
  41b98b:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41b98f:	add    BYTE PTR [ecx],ch
  41b991:	add    bh,dh
  41b993:	add    BYTE PTR [ecx],bl
  41b995:	add    al,BYTE PTR [eax]
  41b997:	add    BYTE PTR [eax],al
  41b999:	add    BYTE PTR [eax],al
  41b99b:	add    BYTE PTR [eax],al
  41b99d:	add    BYTE PTR [eax+0x1800],dl
  41b9a3:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41b9a7:	add    BYTE PTR [ecx+0x19001f00],cl
  41b9ad:	add    BYTE PTR [eax],al
  41b9af:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  41b9b3:	add    BYTE PTR [ecx],bh
  41b9b5:	add    dh,dh
  41b9b7:	add    BYTE PTR [eax],bl
  41b9b9:	add    al,BYTE PTR [eax]
  41b9bb:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41b9bf:	add    BYTE PTR [ecx],bh
  41b9c1:	add    bh,dh
  41b9c3:	add    BYTE PTR [ecx],bl
  41b9c5:	add    al,BYTE PTR [eax]
  41b9c7:	add    al,al
  41b9c9:	jecxz  0x41ba0c
  41b9cb:	add    BYTE PTR [edx+0x1800c901],al
  41b9d1:	add    BYTE PTR [eax],al
  41b9d3:	add    al,ah
  41b9d5:	jecxz  0x41ba18
  41b9d7:	add    BYTE PTR [edx+0x800c901],al
  41b9dd:	add    BYTE PTR [eax],al
  41b9df:	add    BYTE PTR [edi+ebx*8+0x41],dh
  41b9e3:	add    BYTE PTR [ebx+0x5800f638],al
  41b9e9:	or     BYTE PTR [eax],al
  41b9eb:	add    BYTE PTR [eax],al
  41b9ed:	fild   WORD PTR [ecx+0x0]
  41b9f0:	cmp    DWORD PTR [eax],0xfffffff6
  41b9f3:	add    BYTE PTR [eax+0x28],bl
  41b9f6:	add    BYTE PTR [eax],al
  41b9f8:	sbb    al,0xdd
  41b9fa:	inc    ecx
  41b9fb:	add    BYTE PTR [edx+0x78005900],al
  41ba01:	add    BYTE PTR [eax],al
  41ba03:	add    BYTE PTR [esi+ebx*8],dh
  41ba06:	inc    ecx
  41ba07:	add    BYTE PTR [edx+0x78005900],al
  41ba0d:	add    BYTE PTR [eax],al
  41ba0f:	add    BYTE PTR [ebx*8+0x820041],bl
  41ba16:	pop    ecx
  41ba17:	add    BYTE PTR [eax+0x0],bl
  41ba1a:	add    BYTE PTR [eax],al
  41ba1c:	sbb    dh,bl
  41ba1e:	inc    ecx
  41ba1f:	add    BYTE PTR [edx+0x58005900],al
  41ba25:	add    BYTE PTR [eax],al
  41ba27:	add    BYTE PTR [ebx*8+0x820041],bl
  41ba2e:	pop    ecx
  41ba2f:	add    BYTE PTR [eax],bl
  41ba31:	add    BYTE PTR [eax],al
  41ba33:	add    BYTE PTR [eax-0x7dffbe23],bh
  41ba39:	add    BYTE PTR [ecx+0x0],bl
  41ba3c:	sbb    BYTE PTR [eax],al
  41ba3e:	add    BYTE PTR [eax],al
  41ba40:	sbb    al,0xdd
  41ba42:	inc    ecx
  41ba43:	add    BYTE PTR [edx+0x38005900],al
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [eax-0x7dffbe23],bl
  41ba51:	add    BYTE PTR [ecx+0x0],bl
  41ba54:	cmp    BYTE PTR [eax],al
  41ba56:	add    BYTE PTR [eax],al
  41ba58:	je     0x41ba3b
  41ba5a:	inc    ecx
  41ba5b:	add    BYTE PTR [ecx+0x0],cl
  41ba5e:	test   BYTE PTR [eax],0x18
  41ba61:	add    BYTE PTR [eax],al
  41ba63:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41ba67:	add    BYTE PTR [ecx+0x0],cl
  41ba6a:	test   DWORD PTR [eax],0x19
  41ba70:	adc    ch,bl
  41ba72:	inc    ecx
  41ba73:	add    BYTE PTR [ebx+0x3800423a],al
  41ba79:	add    BYTE PTR [eax],al
  41ba7b:	add    BYTE PTR [ebp+ebx*8+0x3a830041],ch
  41ba82:	inc    edx
  41ba83:	add    BYTE PTR [eax],bh
  41ba85:	add    BYTE PTR [eax],al
  41ba87:	add    BYTE PTR [eax+eiz*8+0x41],cl
  41ba8b:	add    BYTE PTR [edx+0x1900b600],al
  41ba91:	add    BYTE PTR [eax],al
  41ba93:	add    BYTE PTR [eax],dl
  41ba95:	loopne 0x41bad8
  41ba97:	add    BYTE PTR [edx+0x1900b700],al
  41ba9d:	add    BYTE PTR [eax],al
  41ba9f:	add    BYTE PTR [ebx*8+0x820041],bl
  41baa6:	adc    BYTE PTR [eax],al
  41baa8:	sbb    BYTE PTR [eax],al
  41baaa:	add    BYTE PTR [eax],al
  41baac:	mov    eax,0x820041dd
  41bab1:	add    BYTE PTR [eax],dl
  41bab3:	add    BYTE PTR [eax],bl
  41bab5:	add    BYTE PTR [eax],al
  41bab7:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41babe:	adc    DWORD PTR [eax],eax
  41bac0:	sbb    BYTE PTR [eax],al
  41bac2:	add    BYTE PTR [eax],al
  41bac4:	and    dl,0x41
  41bac7:	add    BYTE PTR [edx+0x18001100],al
  41bacd:	add    al,BYTE PTR [eax]
  41bacf:	add    BYTE PTR [ebx*8+0x820041],bl
  41bad6:	adc    BYTE PTR [eax],al
  41bad8:	cmp    BYTE PTR [eax],al
  41bada:	add    BYTE PTR [eax],al
  41badc:	cwde   
  41badd:	fld    QWORD PTR [ecx+0x0]
  41bae0:	add    BYTE PTR [eax],0x10
  41bae3:	add    BYTE PTR [eax],bh
  41bae5:	add    BYTE PTR [eax],al
  41bae7:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41baee:	adc    DWORD PTR [eax],eax
  41baf0:	cmp    BYTE PTR [eax],al
  41baf2:	add    BYTE PTR [eax],al
  41baf4:	inc    esp
  41baf5:	loop   0x41bb38
  41baf7:	add    BYTE PTR [edx+0x38001100],al
  41bafd:	add    al,BYTE PTR [eax]
  41baff:	add    BYTE PTR [edi+ebx*8+0x41],dl
  41bb03:	add    BYTE PTR [edx],al
  41bb05:	add    BYTE PTR [ebx+0x0],ah
  41bb08:	push   ds
  41bb09:	add    BYTE PTR [eax],al
  41bb0b:	add    BYTE PTR [eax+eiz*8+0x41],cl
  41bb0f:	add    BYTE PTR [edx+0x1900be00],al
  41bb15:	add    BYTE PTR [eax],al
  41bb17:	add    BYTE PTR [eax],dl
  41bb19:	loopne 0x41bb5c
  41bb1b:	add    BYTE PTR [edx+0x1900bf00],al
  41bb21:	add    BYTE PTR [eax],al
  41bb23:	add    BYTE PTR [ebx*8+0x820041],bl
  41bb2a:	adc    BYTE PTR [eax],al
  41bb2c:	js     0x41bb2e
  41bb2e:	add    BYTE PTR [eax],al
  41bb30:	xor    al,0xde
  41bb32:	inc    ecx
  41bb33:	add    BYTE PTR [edx+0x78001000],al
  41bb39:	add    BYTE PTR [eax],al
  41bb3b:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41bb42:	adc    DWORD PTR [eax],eax
  41bb44:	js     0x41bb46
  41bb46:	add    BYTE PTR [eax],al
  41bb48:	xchg   esp,eax
  41bb49:	loop   0x41bb8c
  41bb4b:	add    BYTE PTR [edx+0x78001100],al
  41bb51:	add    al,BYTE PTR [eax]
  41bb53:	add    BYTE PTR [ebx*8+0x820041],bl
  41bb5a:	adc    al,BYTE PTR [eax]
  41bb5c:	js     0x41bb5e
  41bb5e:	add    BYTE PTR [eax],al
  41bb60:	mov    eax,0x820041dd
  41bb65:	add    BYTE PTR [edx],dl
  41bb67:	add    BYTE PTR [eax+0x0],bh
  41bb6a:	add    BYTE PTR [eax],al
  41bb6c:	sbb    al,0xdd
  41bb6e:	inc    ecx
  41bb6f:	add    BYTE PTR [edx+0x78001600],al
  41bb75:	add    BYTE PTR [eax],al
  41bb77:	add    BYTE PTR [eax-0x7dffbe23],bh
  41bb7d:	add    BYTE PTR [esi],dl
  41bb7f:	add    BYTE PTR [eax+0x0],bh
  41bb82:	add    BYTE PTR [eax],al
  41bb84:	sbb    al,0xdd
  41bb86:	inc    ecx
  41bb87:	add    BYTE PTR [edx+0x58001000],al
  41bb8d:	add    BYTE PTR [eax],al
  41bb8f:	add    BYTE PTR [eax],bl
  41bb91:	fiadd  WORD PTR [ecx+0x0]
  41bb94:	add    BYTE PTR [eax],0x10
  41bb97:	add    BYTE PTR [eax+0x0],bl
  41bb9a:	add    BYTE PTR [eax],al
  41bb9c:	mov    esp,0x820041e0
  41bba1:	add    BYTE PTR [ecx],dl
  41bba3:	add    BYTE PTR [eax+0x0],bl
  41bba6:	add    BYTE PTR [eax],al
  41bba8:	pop    eax
  41bba9:	loop   0x41bbec
  41bbab:	add    BYTE PTR [edx+0x58001100],al
  41bbb1:	add    al,BYTE PTR [eax]
  41bbb3:	add    BYTE PTR [eax],cl
  41bbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbb6:	add    al,BYTE PTR [ecx]
  41bbb8:	add    al,0xa4
  41bbba:	add    al,BYTE PTR [ecx]
  41bbbc:	add    ah,BYTE PTR [edx+eax*1+0x2a40101]
  41bbc3:	add    DWORD PTR [eax],eax
  41bbc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbc6:	add    al,BYTE PTR [ecx]
  41bbc8:	cmp    al,0xdd
  41bbca:	inc    ecx
  41bbcb:	add    BYTE PTR [edx+0x7800d600],al
  41bbd1:	add    BYTE PTR [eax],al
  41bbd3:	add    BYTE PTR [eax],al
  41bbd5:	add    BYTE PTR [eax],al
  41bbd7:	add    al,bl
  41bbd9:	loopne 0x41bc1c
  41bbdb:	add    BYTE PTR [edx+0x18007f00],al
  41bbe1:	add    BYTE PTR [eax],al
  41bbe3:	add    BYTE PTR [edx+eiz*8+0x820041],bh
  41bbea:	jg     0x41bbec
  41bbec:	sbb    BYTE PTR [ebx],al
  41bbee:	add    BYTE PTR [eax],al
  41bbf0:	mov    dh,bl
  41bbf2:	inc    ecx
  41bbf3:	add    BYTE PTR [edx+0x18006f00],al
  41bbf9:	add    BYTE PTR [eax],al
  41bbfb:	add    al,bh
  41bbfd:	fiadd  WORD PTR [ecx+0x0]
  41bc00:	add    BYTE PTR [eax],0x6f
  41bc03:	add    BYTE PTR [eax],bl
  41bc05:	add    DWORD PTR [eax],eax
  41bc07:	add    BYTE PTR [ebx*8+0x820041],bl
  41bc0e:	jle    0x41bc10
  41bc10:	js     0x41bc12
  41bc12:	add    BYTE PTR [eax],al
  41bc14:	sbb    dh,bl
  41bc16:	inc    ecx
  41bc17:	add    BYTE PTR [edx+0x78007e00],al
  41bc1d:	add    BYTE PTR [eax],al
  41bc1f:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41bc26:	(bad)  
  41bc27:	add    BYTE PTR [eax],bh
  41bc29:	add    BYTE PTR [eax],al
  41bc2b:	add    BYTE PTR [eax-0x1e],bl
  41bc2e:	inc    ecx
  41bc2f:	add    BYTE PTR [edx+0x3800d600],al
  41bc35:	add    al,BYTE PTR [eax]
  41bc37:	add    BYTE PTR [edx+eiz*8+0x820041],dl
  41bc3e:	sub    eax,DWORD PTR [eax]
  41bc40:	js     0x41bc44
  41bc42:	add    BYTE PTR [eax],al
  41bc44:	pop    eax
  41bc45:	loop   0x41bc88
  41bc47:	add    BYTE PTR [edx+0x58002b00],al
  41bc4d:	add    al,BYTE PTR [eax]
  41bc4f:	add    BYTE PTR [edx+eiz*8+0x820041],bh
  41bc56:	out    0x0,eax
  41bc58:	sbb    BYTE PTR [ebx],al
  41bc5a:	add    BYTE PTR [eax],al
  41bc5c:	and    dl,0x41
  41bc5f:	add    BYTE PTR [edx+0x18002b00],al
  41bc65:	add    al,BYTE PTR [eax]
  41bc67:	add    BYTE PTR [edx+eiz*8+0x41],al
  41bc6b:	add    BYTE PTR [edx+0x38002b00],al
  41bc71:	add    al,BYTE PTR [eax]
  41bc73:	add    ah,al
  41bc75:	loop   0x41bcb8
  41bc77:	add    BYTE PTR [edx+0x1a00c300],al
  41bc7d:	add    eax,DWORD PTR [eax]
  41bc7f:	add    ah,bh
  41bc81:	fld    QWORD PTR [ecx+0x0]
  41bc84:	cmp    BYTE PTR [eax],0x2a
  41bc87:	add    BYTE PTR [eax],bh
  41bc89:	add    BYTE PTR [eax],al
  41bc8b:	add    BYTE PTR [edx+eiz*8+0x820041],dh
  41bc92:	out    0x0,eax
  41bc94:	cmp    BYTE PTR [ebx],al
  41bc96:	add    BYTE PTR [eax],al
  41bc98:	hlt    
  41bc99:	fild   WORD PTR [ecx+0x0]
  41bc9c:	add    BYTE PTR [eax],0x50
  41bc9f:	add    BYTE PTR [ecx],bl
  41bca1:	add    BYTE PTR [eax],al
  41bca3:	add    ah,dh
  41bca5:	fild   WORD PTR [ecx+0x0]
  41bca8:	add    BYTE PTR [eax],0x50
  41bcab:	add    BYTE PTR [ecx],bh
  41bcad:	add    BYTE PTR [eax],al
  41bcaf:	add    BYTE PTR [eax],bl
  41bcb1:	fiadd  WORD PTR [ecx+0x0]
  41bcb4:	add    BYTE PTR [eax],0x12
  41bcb7:	add    BYTE PTR [eax],bl
  41bcb9:	add    BYTE PTR [eax],al
  41bcbb:	add    BYTE PTR [eax-0x1e],bl
  41bcbe:	inc    ecx
  41bcbf:	add    BYTE PTR [edx+0x18001300],al
  41bcc5:	add    al,BYTE PTR [eax]
  41bcc7:	add    BYTE PTR [eax],bl
  41bcc9:	fiadd  WORD PTR [ecx+0x0]
  41bccc:	add    BYTE PTR [eax],0x12
  41bccf:	add    BYTE PTR [eax],bh
  41bcd1:	add    BYTE PTR [eax],al
  41bcd3:	add    BYTE PTR [eax-0x1e],bl
  41bcd6:	inc    ecx
  41bcd7:	add    BYTE PTR [edx+0x38001300],al
  41bcdd:	add    al,BYTE PTR [eax]
  41bcdf:	add    BYTE PTR [ebx*8+0x820041],bl
  41bce6:	push   ss
  41bce7:	add    BYTE PTR [eax],bl
  41bce9:	add    BYTE PTR [eax],al
  41bceb:	add    BYTE PTR [eax],bl
  41bced:	fiadd  WORD PTR [ecx+0x0]
  41bcf0:	add    BYTE PTR [eax],0x16
  41bcf3:	add    BYTE PTR [eax],bl
  41bcf5:	add    BYTE PTR [eax],al
  41bcf7:	add    BYTE PTR [eax-0x1e],bl
  41bcfa:	inc    ecx
  41bcfb:	add    BYTE PTR [edx+0x18001700],al
  41bd01:	add    al,BYTE PTR [eax]
  41bd03:	add    BYTE PTR [eax],bl
  41bd05:	fiadd  WORD PTR [ecx+0x0]
  41bd08:	add    BYTE PTR [eax],0x16
  41bd0b:	add    BYTE PTR [eax],bh
  41bd0d:	add    BYTE PTR [eax],al
  41bd0f:	add    BYTE PTR [eax-0x1e],bl
  41bd12:	inc    ecx
  41bd13:	add    BYTE PTR [edx+0x38001700],al
  41bd19:	add    al,BYTE PTR [eax]
  41bd1b:	add    BYTE PTR [ebx*8+0x820041],bl
  41bd22:	adc    al,BYTE PTR [eax]
  41bd24:	sbb    BYTE PTR [eax],al
  41bd26:	add    BYTE PTR [eax],al
  41bd28:	sbb    al,0xdd
  41bd2a:	inc    ecx
  41bd2b:	add    BYTE PTR [edx+0x78006f00],al
  41bd31:	add    BYTE PTR [eax],al
  41bd33:	add    BYTE PTR [esi+ebx*8+0x41],ch
  41bd37:	add    BYTE PTR [edx+0x78006f00],al
  41bd3d:	add    DWORD PTR [eax],eax
  41bd3f:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41bd46:	jg     0x41bd48
  41bd48:	js     0x41bd4a
  41bd4a:	add    BYTE PTR [eax],al
  41bd4c:	mov    ah,0xe2
  41bd4e:	inc    ecx
  41bd4f:	add    BYTE PTR [edx+0x78007f00],al
  41bd55:	add    eax,DWORD PTR [eax]
  41bd57:	add    BYTE PTR [ebx*8+0x820041],bl
  41bd5e:	outs   dx,DWORD PTR ds:[esi]
  41bd5f:	add    BYTE PTR [eax],bh
  41bd61:	add    BYTE PTR [eax],al
  41bd63:	add    BYTE PTR [esi+ebx*8+0x41],ch
  41bd67:	add    BYTE PTR [edx+0x38006f00],al
  41bd6d:	add    DWORD PTR [eax],eax
  41bd6f:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41bd76:	jg     0x41bd78
  41bd78:	cmp    BYTE PTR [eax],al
  41bd7a:	add    BYTE PTR [eax],al
  41bd7c:	mov    ah,0xe2
  41bd7e:	inc    ecx
  41bd7f:	add    BYTE PTR [edx+0x38007f00],al
  41bd85:	add    eax,DWORD PTR [eax]
  41bd87:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41bd8b:	add    BYTE PTR [edx+0x5800d600],al
  41bd91:	add    BYTE PTR [eax],al
  41bd93:	add    BYTE PTR [ebx*8+0x820041],bl
  41bd9a:	adc    al,BYTE PTR [eax]
  41bd9c:	pop    eax
  41bd9d:	add    BYTE PTR [eax],al
  41bd9f:	add    BYTE PTR [eax],bl
  41bda1:	fiadd  WORD PTR [ecx+0x0]
  41bda4:	add    BYTE PTR [eax],0x12
  41bda7:	add    BYTE PTR [eax+0x0],bl
  41bdaa:	add    BYTE PTR [eax],al
  41bdac:	nop
  41bdad:	fiadd  WORD PTR [ecx+0x0]
  41bdb0:	add    BYTE PTR [eax],0x6e
  41bdb3:	add    BYTE PTR [edx],bl
  41bdb5:	add    BYTE PTR [eax],al
  41bdb7:	add    BYTE PTR [ecx+eiz*8],dl
  41bdba:	inc    ecx
  41bdbb:	add    BYTE PTR [edx+0x19007e00],al
  41bdc1:	add    al,BYTE PTR [eax]
  41bdc3:	add    BYTE PTR [ebp+ebx*8+0x41],al
  41bdc7:	add    BYTE PTR [edx+0x3a006e00],al
  41bdcd:	add    BYTE PTR [eax],al
  41bdcf:	add    BYTE PTR [ecx+eiz*8],cl
  41bdd2:	inc    ecx
  41bdd3:	add    BYTE PTR [edx+0x39007e00],al
  41bdd9:	add    al,BYTE PTR [eax]
  41bddb:	add    BYTE PTR [eax-0x20],ah
  41bdde:	inc    ecx
  41bddf:	add    BYTE PTR [edx+0x1900f038],al
  41bde5:	add    BYTE PTR [eax],al
  41bde7:	add    BYTE PTR [eax-0x7dffbe1f],dl
  41bded:	cmp    cl,dh
  41bdef:	add    BYTE PTR [edx],bl
  41bdf1:	add    BYTE PTR [eax],al
  41bdf3:	add    BYTE PTR [ebx*8+0x820041],bl
  41bdfa:	sub    BYTE PTR [eax],al
  41bdfc:	sbb    BYTE PTR [eax],al
  41bdfe:	add    BYTE PTR [eax],al
  41be00:	mov    eax,0x820041dd
  41be05:	add    BYTE PTR [eax],ch
  41be07:	add    BYTE PTR [eax],bl
  41be09:	add    BYTE PTR [eax],al
  41be0b:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41be12:	sub    DWORD PTR [eax],eax
  41be14:	sbb    BYTE PTR [eax],al
  41be16:	add    BYTE PTR [eax],al
  41be18:	and    dl,0x41
  41be1b:	add    BYTE PTR [edx+0x18002900],al
  41be21:	add    al,BYTE PTR [eax]
  41be23:	add    BYTE PTR [ebx*8+0x820041],bl
  41be2a:	sub    BYTE PTR [eax],al
  41be2c:	cmp    BYTE PTR [eax],al
  41be2e:	add    BYTE PTR [eax],al
  41be30:	cwde   
  41be31:	fld    QWORD PTR [ecx+0x0]
  41be34:	add    BYTE PTR [eax],0x28
  41be37:	add    BYTE PTR [eax],bh
  41be39:	add    BYTE PTR [eax],al
  41be3b:	add    BYTE PTR [eax+eiz*8+0x820041],bh
  41be42:	sub    DWORD PTR [eax],eax
  41be44:	cmp    BYTE PTR [eax],al
  41be46:	add    BYTE PTR [eax],al
  41be48:	inc    esp
  41be49:	loop   0x41be8c
  41be4b:	add    BYTE PTR [edx+0x38002900],al
  41be51:	add    al,BYTE PTR [eax]
  41be53:	add    BYTE PTR [eax],al
  41be55:	add    BYTE PTR [eax],al
  41be57:	add    BYTE PTR [ebx+eiz*8+0x20041],bl
  41be5e:	mov    al,0x0
  41be60:	sbb    BYTE PTR [eax],al
  41be62:	add    BYTE PTR [eax],al
  41be64:	call   0x2420049
  41be69:	add    bh,al
  41be6b:	add    BYTE PTR [esi],bl
  41be6d:	add    eax,DWORD PTR [eax]
  41be6f:	add    BYTE PTR [eax-0x1d],bh
  41be72:	inc    ecx
  41be73:	add    BYTE PTR [edx],al
  41be75:	add    BYTE PTR [eax+0x1e00],bh
  41be7b:	add    BYTE PTR [eax+0x20041e3],dl
  41be81:	add    BYTE PTR [eax+0x11900],bh
  41be87:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41be8b:	add    BYTE PTR [edx],al
  41be8d:	add    dh,al
  41be8f:	add    BYTE PTR [eax],bl
  41be91:	add    al,BYTE PTR [eax]
  41be93:	add    BYTE PTR [ecx+eiz*8],ch
  41be96:	inc    ecx
  41be97:	add    BYTE PTR [edx],al
  41be99:	add    bh,al
  41be9b:	add    BYTE PTR [ecx],bl
  41be9d:	add    eax,DWORD PTR [eax]
  41be9f:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  41bea6:	mov    al,BYTE PTR [eax]
  41bea8:	sbb    BYTE PTR [ecx],al
  41beaa:	add    BYTE PTR [eax],al
  41beac:	push   esp
  41bead:	loope  0x41bef0
  41beaf:	add    BYTE PTR [edx],al
  41beb1:	add    BYTE PTR [eax+0x31800],cl
  41beb7:	add    BYTE PTR [eax-0x20],ah
  41beba:	inc    ecx
  41bebb:	add    BYTE PTR [edx],al
  41bebd:	add    BYTE PTR [ebx+0x11900],cl
  41bec3:	add    BYTE PTR [eax+0x20041e1],dl
  41bec9:	add    BYTE PTR [ecx+0x31a00],cl
  41becf:	add    BYTE PTR [eax],bh
  41bed1:	in     al,0x41
  41bed3:	add    BYTE PTR [edx],al
  41bed5:	add    BYTE PTR [eax+0x11800],ah
  41bedb:	add    BYTE PTR [esp+eiz*8],dl
  41bede:	inc    ecx
  41bedf:	add    BYTE PTR [edx],al
  41bee1:	add    BYTE PTR [ecx+0x11900],ah
  41bee7:	add    BYTE PTR [eax-0x1d],cl
  41beea:	inc    ecx
  41beeb:	add    BYTE PTR [edx],al
  41beed:	add    BYTE PTR [edx+0x31800],ah
  41bef3:	add    BYTE PTR [eax-0x1d],al
  41bef6:	inc    ecx
  41bef7:	add    BYTE PTR [edx],al
  41bef9:	add    BYTE PTR [ebx+0x31a00],ah
  41beff:	add    ah,bl
  41bf01:	loop   0x41bf44
  41bf03:	add    BYTE PTR [edx],al
  41bf05:	add    dh,al
  41bf07:	add    BYTE PTR [eax],bl
  41bf09:	add    al,BYTE PTR [eax]
  41bf0b:	add    ah,dl
  41bf0d:	loop   0x41bf50
  41bf0f:	add    BYTE PTR [edx],al
  41bf11:	add    bh,al
  41bf13:	add    BYTE PTR [ebx+eax*1],bl
  41bf16:	add    BYTE PTR [eax],al
  41bf18:	int3   
  41bf19:	loop   0x41bf5c
  41bf1b:	add    BYTE PTR [edx],al
  41bf1d:	add    bh,al
  41bf1f:	add    BYTE PTR ds:0xfc000003,bl
  41bf25:	loope  0x41bf68
  41bf27:	add    BYTE PTR [edx],al
  41bf29:	add    BYTE PTR [eax+eax*1+0x19],cl
  41bf30:	cwde   
  41bf31:	loope  0x41bf74
  41bf33:	add    BYTE PTR [edx],al
  41bf35:	add    BYTE PTR [eax+eax*1+0x318],cl
  41bf3c:	xor    bl,ah
  41bf3e:	inc    ecx
  41bf3f:	add    BYTE PTR [edx],al
  41bf41:	add    BYTE PTR [esi+0x1a00],cl
  41bf47:	add    BYTE PTR [eax],ch
  41bf49:	jecxz  0x41bf8c
  41bf4b:	add    BYTE PTR [edx],al
  41bf4d:	add    BYTE PTR [esi+0x11800],cl
  41bf53:	add    al,cl
  41bf55:	loope  0x41bf98
  41bf57:	add    BYTE PTR [edx+0x18002000],al
  41bf5d:	add    BYTE PTR [eax],al
  41bf5f:	add    BYTE PTR [eax-0x1d],bl
  41bf62:	inc    ecx
  41bf63:	add    BYTE PTR [edx+0x18002200],al
  41bf69:	add    BYTE PTR [eax],al
  41bf6b:	add    al,al
  41bf6d:	loope  0x41bfb0
  41bf6f:	add    BYTE PTR [edx+0x18002100],al
  41bf75:	add    BYTE PTR [eax],al
  41bf77:	add    BYTE PTR [eax],bh
  41bf79:	jecxz  0x41bfbc
  41bf7b:	add    BYTE PTR [edx+0x18002300],al
  41bf81:	add    BYTE PTR [eax],al
  41bf83:	add    BYTE PTR [ebx+eiz*8+0x1830041],dh
  41bf8a:	enter  0x1800,0x0
  41bf8e:	add    BYTE PTR [eax],al
  41bf90:	aam    0xe3
  41bf92:	inc    ecx
  41bf93:	add    BYTE PTR [ebx+0x800c801],al
  41bf99:	add    BYTE PTR [eax],al
  41bf9b:	add    BYTE PTR [ebx*8+0x820041],bl
  41bfa2:	pop    ebp
  41bfa3:	add    BYTE PTR [eax+0x0],bh
  41bfa6:	add    BYTE PTR [eax],al
  41bfa8:	xor    al,0xde
  41bfaa:	inc    ecx
  41bfab:	add    BYTE PTR [edx+0x78005d00],al
  41bfb1:	add    BYTE PTR [eax],al
  41bfb3:	add    BYTE PTR [ebx*8+0x820041],bl
  41bfba:	pop    ebp
  41bfbb:	add    BYTE PTR [eax+0x0],bl
  41bfbe:	add    BYTE PTR [eax],al
  41bfc0:	sbb    dh,bl
  41bfc2:	inc    ecx
  41bfc3:	add    BYTE PTR [edx+0x58005d00],al
  41bfc9:	add    BYTE PTR [eax],al
  41bfcb:	add    BYTE PTR [ebx*8+0x820041],bl
  41bfd2:	pop    ebp
  41bfd3:	add    BYTE PTR [eax],bl
  41bfd5:	add    BYTE PTR [eax],al
  41bfd7:	add    BYTE PTR [eax-0x7dffbe23],bh
  41bfdd:	add    BYTE PTR [ebp+0x0],bl
  41bfe0:	sbb    BYTE PTR [eax],al
  41bfe2:	add    BYTE PTR [eax],al
  41bfe4:	sbb    al,0xdd
  41bfe6:	inc    ecx
  41bfe7:	add    BYTE PTR [edx+0x38005d00],al
  41bfed:	add    BYTE PTR [eax],al
  41bfef:	add    BYTE PTR [eax-0x7dffbe23],bl
  41bff5:	add    BYTE PTR [ebp+0x0],bl
  41bff8:	cmp    BYTE PTR [eax],al
  41bffa:	add    BYTE PTR [eax],al
  41bffc:	sbb    al,0xdd
  41bffe:	inc    ecx
  41bfff:	add    BYTE PTR [edx+0x78005f00],al
  41c005:	add    BYTE PTR [eax],al
  41c007:	add    BYTE PTR [esi+ebx*8],dh
  41c00a:	inc    ecx
  41c00b:	add    BYTE PTR [edx+0x78005f00],al
  41c011:	add    BYTE PTR [eax],al
  41c013:	add    BYTE PTR [ebx*8+0x820041],bl
  41c01a:	pop    edi
  41c01b:	add    BYTE PTR [eax+0x0],bl
  41c01e:	add    BYTE PTR [eax],al
  41c020:	sbb    dh,bl
  41c022:	inc    ecx
  41c023:	add    BYTE PTR [edx+0x58005f00],al
  41c029:	add    BYTE PTR [eax],al
  41c02b:	add    BYTE PTR [ebx*8+0x820041],bl
  41c032:	pop    edi
  41c033:	add    BYTE PTR [eax],bl
  41c035:	add    BYTE PTR [eax],al
  41c037:	add    BYTE PTR [eax-0x7dffbe23],bh
  41c03d:	add    BYTE PTR [edi+0x0],bl
  41c040:	sbb    BYTE PTR [eax],al
  41c042:	add    BYTE PTR [eax],al
  41c044:	sbb    al,0xdd
  41c046:	inc    ecx
  41c047:	add    BYTE PTR [edx+0x38005f00],al
  41c04d:	add    BYTE PTR [eax],al
  41c04f:	add    BYTE PTR [eax-0x7dffbe23],bl
  41c055:	add    BYTE PTR [edi+0x0],bl
  41c058:	cmp    BYTE PTR [eax],al
  41c05a:	add    BYTE PTR [eax],al
  41c05c:	mov    dh,bl
  41c05e:	inc    ecx
  41c05f:	add    BYTE PTR [edx+0x1800f700],al
  41c065:	add    BYTE PTR [eax],al
  41c067:	add    BYTE PTR [ebx*8+0x820041],bl
  41c06e:	test   DWORD PTR [eax],0x38
  41c074:	pusha  
  41c075:	loopne 0x41c0b8
  41c077:	add    BYTE PTR [edx+0x7900bd00],al
  41c07d:	add    DWORD PTR [eax],eax
  41c07f:	add    BYTE PTR [edi+ebx*8-0x564ffbf],dh
  41c086:	adc    al,BYTE PTR [eax]
  41c088:	sbb    BYTE PTR [eax],cl
  41c08a:	add    BYTE PTR [eax],al
  41c08c:	dec    eax
  41c08d:	fild   WORD PTR [ecx+0x0]
  41c090:	fwait
  41c091:	cli    
  41c092:	adc    al,BYTE PTR [eax]
  41c094:	sbb    BYTE PTR [eax],ch
  41c096:	add    BYTE PTR [eax],al
  41c098:	mov    ah,0xdf
  41c09a:	inc    ecx
  41c09b:	add    BYTE PTR [ebx+0x180012fa],cl
  41c0a1:	or     BYTE PTR [eax],al
  41c0a3:	add    BYTE PTR [eax-0x21],cl
  41c0a6:	inc    ecx
  41c0a7:	add    BYTE PTR [ebx+0x180012fa],cl
  41c0ad:	sub    BYTE PTR [eax],al
  41c0af:	add    BYTE PTR [eax-0x1f],dl
  41c0b2:	inc    ecx
  41c0b3:	add    BYTE PTR [ecx+0x18000000],bh
  41c0b9:	add    BYTE PTR [eax],al
  41c0bb:	add    BYTE PTR [eax+eiz*8+0x820041],cl
  41c0c2:	mov    dl,0x0
  41c0c4:	sbb    al,0x0
  41c0c6:	add    BYTE PTR [eax],al
  41c0c8:	rcr    bh,1
  41c0ca:	inc    ecx
  41c0cb:	add    BYTE PTR [edx+0x1d00b200],al
  41c0d1:	add    BYTE PTR [eax],al
  41c0d3:	add    BYTE PTR [edi+ebx*8+0x41],bl
  41c0d7:	add    BYTE PTR [edx+0x1e00b200],al
  41c0dd:	add    BYTE PTR [eax],al
  41c0df:	add    BYTE PTR [eax-0x20],ch
  41c0e2:	inc    ecx
  41c0e3:	add    BYTE PTR [edx+0x19000300],al
  41c0e9:	add    DWORD PTR [eax],eax
  41c0eb:	add    BYTE PTR [eax-0x20],dh
  41c0ee:	inc    ecx
  41c0ef:	add    BYTE PTR [edx+0x19000300],al
  41c0f5:	add    BYTE PTR [eax],al
  41c0f7:	add    BYTE PTR [eax],al
  41c0f9:	loopne 0x41c0fc
  41c0fb:	add    BYTE PTR [ecx],al
  41c0fd:	add    BYTE PTR [eax],al
  41c0ff:	add    BYTE PTR [eax],al
  41c101:	loopne 0x41c104
  41c103:	add    BYTE PTR [ebx],al
  41c105:	add    BYTE PTR [eax],al
  41c107:	add    BYTE PTR [eax],al
  41c109:	loope  0x41c10c
  41c10b:	add    BYTE PTR [ecx],al
  41c10d:	add    BYTE PTR [eax],al
  41c10f:	add    BYTE PTR [eax],al
  41c111:	loope  0x41c114
  41c113:	add    BYTE PTR [ebx],al
  41c115:	add    BYTE PTR [eax],al
  41c117:	add    BYTE PTR [eax],al
  41c119:	loop   0x41c11c
  41c11b:	add    BYTE PTR [ecx],al
  41c11d:	add    BYTE PTR [eax],al
  41c11f:	add    BYTE PTR [eax],al
  41c121:	loop   0x41c124
  41c123:	add    BYTE PTR [ebx],al
  41c125:	add    BYTE PTR [eax],al
  41c127:	add    BYTE PTR [eax],cl
  41c129:	lods   al,BYTE PTR ds:[esi]
  41c12a:	add    DWORD PTR [eax],eax
  41c12c:	add    al,0xac
  41c12e:	add    DWORD PTR [eax],eax
  41c130:	add    ch,BYTE PTR [ecx+eax*1+0x1ac0100]
  41c137:	add    BYTE PTR [eax],al
  41c139:	lods   al,BYTE PTR ds:[esi]
  41c13a:	add    DWORD PTR [eax],eax
  41c13c:	push   eax
  41c13d:	loope  0x41c180
  41c13f:	add    cl,ch
  41c141:	add    BYTE PTR [ecx],al
  41c143:	add    BYTE PTR [eax],bl
  41c145:	add    BYTE PTR [eax],al
  41c147:	add    al,ch
  41c149:	loope  0x41c18c
  41c14b:	add    BYTE PTR [ecx+0x180012f9],cl
  41c151:	or     BYTE PTR [eax],al
  41c153:	add    al,dl
  41c155:	loope  0x41c198
  41c157:	add    BYTE PTR [ecx+0x180012f9],cl
  41c15d:	sub    BYTE PTR [eax],al
  41c15f:	add    BYTE PTR [eax-0x1f],dl
  41c162:	inc    ecx
  41c163:	add    BYTE PTR [ecx+0x18000000],ch
  41c169:	add    BYTE PTR [eax],al
  41c16b:	add    al,dh
  41c16d:	loop   0x41c1b0
  41c16f:	add    BYTE PTR [ecx+0x18000100],bh
  41c175:	add    BYTE PTR [eax],al
  41c177:	add    BYTE PTR [eax+eiz*8+0x820041],cl
  41c17e:	mov    ch,0x0
  41c180:	sbb    al,0x0
  41c182:	add    BYTE PTR [eax],al
  41c184:	rcr    bh,1
  41c186:	inc    ecx
  41c187:	add    BYTE PTR [edx+0x1d00b500],al
  41c18d:	add    BYTE PTR [eax],al
  41c18f:	add    BYTE PTR [edi+ebx*8+0x41],bl
  41c193:	add    BYTE PTR [edx+0x1e00b500],al
  41c199:	add    BYTE PTR [eax],al
  41c19b:	add    al,dh
  41c19d:	loop   0x41c1e0
  41c19f:	add    BYTE PTR [ecx+0x18000100],ch
  41c1a5:	add    BYTE PTR [eax],al
  41c1a7:	add    BYTE PTR [eax+eiz*8+0x820041],cl
  41c1ae:	mov    ah,0x0
  41c1b0:	sbb    al,0x0
  41c1b2:	add    BYTE PTR [eax],al
  41c1b4:	rcr    bh,1
  41c1b6:	inc    ecx
  41c1b7:	add    BYTE PTR [edx+0x1d00b400],al
  41c1bd:	add    BYTE PTR [eax],al
  41c1bf:	add    BYTE PTR [edi+ebx*8+0x41],bl
  41c1c3:	add    BYTE PTR [edx+0x1e00b400],al
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    BYTE PTR [eax-0x20],bh
  41c1ce:	inc    ecx
  41c1cf:	add    BYTE PTR [edx],al
  41c1d1:	add    BYTE PTR [ebp+0x1900],cl
  41c1d7:	add    ah,dh
  41c1d9:	loop   0x41c21c
  41c1db:	add    BYTE PTR [ecx+0x1800ae00],ch
  41c1e1:	add    BYTE PTR [eax],al
  41c1e3:	add    ah,bh
  41c1e5:	fld    QWORD PTR [ecx+0x0]
  41c1e8:	add    BYTE PTR [eax],0xf0
  41c1eb:	add    BYTE PTR [eax+0x0],bl
  41c1ee:	add    BYTE PTR [eax],al
  41c1f0:	push   0x820041e0
  41c1f5:	add    BYTE PTR [edx],al
  41c1f7:	add    BYTE PTR [ecx],bl
  41c1f9:	add    DWORD PTR [eax],eax
  41c1fb:	add    BYTE PTR [eax-0x20],dh
  41c1fe:	inc    ecx
  41c1ff:	add    BYTE PTR [edx+0x19000200],al
  41c205:	add    BYTE PTR [eax],al
  41c207:	add    BYTE PTR [eax],al
  41c209:	js     0x41c20c
  41c20b:	add    BYTE PTR [eax],al
  41c20d:	add    BYTE PTR [edi],cl
  41c20f:	mov    BYTE PTR [esp+eax*1],al
  41c212:	add    BYTE PTR [eax],al
  41c214:	add    bl,ah
  41c216:	add    DWORD PTR [eax],eax
  41c218:	add    al,BYTE PTR [eax]
  41c21a:	add    BYTE PTR [eax],al
  41c21c:	add    BYTE PTR [edx+0x1],bh
  41c21f:	add    BYTE PTR [eax],al
  41c221:	add    BYTE PTR [edi],cl
  41c223:	mov    al,BYTE PTR [esp+eax*1]
  41c226:	add    BYTE PTR [eax],al
  41c228:	add    BYTE PTR [eax+0x1],dh
  41c22b:	add    BYTE PTR [eax],al
  41c22d:	add    BYTE PTR [edi],cl
  41c22f:	add    BYTE PTR [esp+eax*1],0x0
  41c233:	add    BYTE PTR [eax],al
  41c235:	jns    0x41c238
  41c237:	add    BYTE PTR [eax],al
  41c239:	add    BYTE PTR [edi],cl
  41c23b:	mov    DWORD PTR [esp+eax*1],eax
  41c23e:	add    BYTE PTR [eax],al
  41c240:	add    BYTE PTR [ebx+0x1],bh
  41c243:	add    BYTE PTR [eax],al
  41c245:	add    BYTE PTR [edi],cl
  41c247:	mov    eax,DWORD PTR [esp+eax*1]
  41c24a:	add    BYTE PTR [eax],al
  41c24c:	add    BYTE PTR [ecx+0x1],dh
  41c24f:	add    BYTE PTR [eax],al
  41c251:	add    BYTE PTR [edi],cl
  41c253:	add    DWORD PTR [esp+eax*1],0x75000000
  41c25a:	add    DWORD PTR [eax],eax
  41c25c:	add    BYTE PTR [eax],al
  41c25e:	jne    0x41c668
  41c264:	add    bl,ch
  41c266:	add    DWORD PTR [eax],eax
  41c268:	add    BYTE PTR [eax],al
  41c26a:	add    cl,ch
  41c26c:	add    al,0x4
  41c26e:	add    BYTE PTR [eax],al
  41c270:	add    bh,bh
  41c272:	add    al,BYTE PTR [edx]
  41c274:	add    ebx,DWORD PTR [eax+eax*1]
  41c277:	dec    DWORD PTR [eax]
  41c279:	add    al,0x3
  41c27b:	sbb    al,0x0
  41c27d:	inc    DWORD PTR [edx+eax*1]
  41c280:	add    edi,DWORD PTR ds:0x406ff00
  41c286:	add    edi,DWORD PTR ds:0x17e00
  41c28c:	add    BYTE PTR [eax],al
  41c28e:	jle    0x41c698
  41c294:	add    BYTE PTR [ecx+eax*1+0x0],bh
  41c298:	add    BYTE PTR [eax],al
  41c29a:	jl     0x41c6a4
  41c2a0:	add    BYTE PTR [ebp+0x1],bh
  41c2a3:	add    BYTE PTR [eax],al
  41c2a5:	add    BYTE PTR [edi],cl
  41c2a7:	lea    eax,[esp+eax*1]
  41c2aa:	add    BYTE PTR [eax],al
  41c2ac:	add    BYTE PTR [edi+0x1],bh
  41c2af:	add    BYTE PTR [eax],al
  41c2b1:	add    BYTE PTR [edi],cl
  41c2b3:	pop    DWORD PTR [esp+eax*1]
  41c2b6:	add    BYTE PTR [eax],al
  41c2b8:	add    bl,ah
  41c2ba:	add    DWORD PTR [eax],eax
  41c2bc:	add    DWORD PTR [eax],eax
  41c2be:	add    BYTE PTR [eax],al
  41c2c0:	add    BYTE PTR [ecx+eax*1+0x0],dh
  41c2c4:	add    BYTE PTR [eax],al
  41c2c6:	je     0x41c2d0
  41c2cc:	add    BYTE PTR [esi+0x1],dh
  41c2cf:	add    BYTE PTR [eax],al
  41c2d1:	add    BYTE PTR [edi],cl
  41c2d3:	xchg   BYTE PTR [eax+eax*1],al
  41c2d6:	add    BYTE PTR [eax],al
  41c2d8:	add    BYTE PTR [edx+0x1],dh
  41c2db:	add    BYTE PTR [eax],al
  41c2dd:	add    BYTE PTR [edi],cl
  41c2df:	add    BYTE PTR [eax+eax*1],0x0
  41c2e3:	add    BYTE PTR [eax],al
  41c2e5:	jae    0x41c2e8
  41c2e7:	add    BYTE PTR [eax],al
  41c2e9:	add    BYTE PTR [edi],cl
  41c2eb:	add    DWORD PTR [eax+eax*1],0x0
  41c2ef:	add    BYTE PTR [eax],al
  41c2f1:	ja     0x41c2f4
  41c2f3:	add    BYTE PTR [eax],al
  41c2f5:	add    BYTE PTR [edi],cl
  41c2f7:	xchg   DWORD PTR [eax+eax*1],eax
  41c2fa:	add    BYTE PTR [eax],al
  41c2fc:	xor    al,0xe0
  41c2fe:	inc    ecx
  41c2ff:	add    BYTE PTR [edx+0x39008138],al
  41c305:	add    BYTE PTR [eax],al
  41c307:	add    BYTE PTR [eax+eiz*8],dh
  41c30a:	inc    ecx
  41c30b:	add    BYTE PTR [edx+0x39008238],al
  41c311:	add    BYTE PTR [eax],al
  41c313:	add    al,cl
  41c315:	jecxz  0x41c358
  41c317:	add    BYTE PTR [edx+0x1800df01],al
  41c31d:	add    BYTE PTR [eax],al
  41c31f:	add    BYTE PTR [ebx+eiz*8+0x1820041],ch
  41c326:	fild   WORD PTR [eax]
  41c328:	or     BYTE PTR [eax],al
  41c32a:	add    BYTE PTR [eax],al
  41c32c:	add    al,0xe3
  41c32e:	inc    ecx
  41c32f:	add    cl,bh
  41c331:	add    BYTE PTR [ecx],al
  41c333:	add    BYTE PTR [eax],bl
  41c335:	add    BYTE PTR [eax],al
  41c337:	add    BYTE PTR [eax+eiz*8],dh
  41c33a:	inc    ecx
  41c33b:	add    BYTE PTR [edx+0x39008038],al
  41c341:	add    BYTE PTR [eax],al
  41c343:	add    BYTE PTR [eax-0x1c],cl
  41c346:	inc    ecx
  41c347:	add    BYTE PTR [ecx],al
  41c349:	add    ah,cl
  41c34b:	add    BYTE PTR [eax],bl
  41c34d:	add    BYTE PTR [eax],al
  41c34f:	add    BYTE PTR [ebx+eiz*8+0x41],ch
  41c353:	add    BYTE PTR [ecx],al
  41c355:	add    ch,cl
  41c357:	add    BYTE PTR [eax],bl
  41c359:	add    BYTE PTR [eax],al
  41c35b:	add    al,bh
  41c35d:	fadd   QWORD PTR [ecx+0x0]
  41c360:	test   BYTE PTR [eax],al
  41c362:	js     0x41c364
  41c364:	pop    eax
  41c365:	add    BYTE PTR [eax],al
  41c367:	add    BYTE PTR [ebx*8+0x820041],bl
  41c36e:	jns    0x41c370
  41c370:	pop    eax
  41c371:	add    BYTE PTR [eax],al
  41c373:	add    BYTE PTR [eax],dl
  41c375:	fld    QWORD PTR [ecx+0x0]
  41c378:	cmp    DWORD PTR [edx],0x21
  41c37b:	add    BYTE PTR [eax],bh
  41c37d:	add    BYTE PTR [eax],al
  41c37f:	add    BYTE PTR [eax],ch
  41c381:	fiadd  WORD PTR [ecx+0x0]
  41c384:	cmp    DWORD PTR [edx],0x21
  41c387:	add    BYTE PTR [eax],bh
  41c389:	add    BYTE PTR [eax],al
  41c38b:	add    BYTE PTR [esp+ebp*2],al
  41c38e:	add    cl,BYTE PTR [ecx]
  41c390:	add    ch,BYTE PTR [edx+eax*1+0x9]
  41c394:	add    DWORD PTR [edx+eax*1+0x9],ebp
  41c398:	add    BYTE PTR [edx+eax*1+0x9],ch
  41c39c:	je     0x41c37f
  41c39e:	inc    ecx
  41c39f:	add    BYTE PTR [ecx],cl
  41c3a1:	add    dh,bh
  41c3a3:	add    BYTE PTR [eax],bl
  41c3a5:	add    al,BYTE PTR [eax]
  41c3a7:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41c3ab:	add    BYTE PTR [ecx],cl
  41c3ad:	add    bh,bh
  41c3af:	add    BYTE PTR [ecx],bl
  41c3b1:	add    al,BYTE PTR [eax]
  41c3b3:	add    BYTE PTR [eax],ch
  41c3b5:	in     al,0x41
  41c3b7:	add    BYTE PTR [edx],al
  41c3b9:	add    ah,ah
  41c3bb:	add    BYTE PTR [eax],bl
  41c3bd:	add    BYTE PTR [eax],al
  41c3bf:	add    ah,bh
  41c3c1:	jecxz  0x41c404
  41c3c3:	add    BYTE PTR [edx],al
  41c3c5:	add    ch,ah
  41c3c7:	add    BYTE PTR [ecx],bl
  41c3c9:	add    BYTE PTR [eax],al
  41c3cb:	add    BYTE PTR [eax],dh
  41c3cd:	in     al,0x41
  41c3cf:	add    BYTE PTR [edx],al
  41c3d1:	add    ah,ch
  41c3d3:	add    BYTE PTR [eax],bl
  41c3d5:	add    BYTE PTR [eax],al
  41c3d7:	add    BYTE PTR [esp+eiz*8],cl
  41c3da:	inc    ecx
  41c3db:	add    BYTE PTR [edx],al
  41c3dd:	add    ch,ch
  41c3df:	add    BYTE PTR [ecx],bl
  41c3e1:	add    BYTE PTR [eax],al
  41c3e3:	add    BYTE PTR [eax],al
  41c3e5:	add    BYTE PTR [eax],al
  41c3e7:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  41c3eb:	add    BYTE PTR [ecx+0x0],bl
  41c3ee:	test   BYTE PTR [eax],0x18
  41c3f1:	add    BYTE PTR [eax],al
  41c3f3:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41c3f7:	add    BYTE PTR [ecx+0x0],bl
  41c3fa:	test   DWORD PTR [eax],0x19
  41c400:	pusha  
  41c401:	loopne 0x41c444
  41c403:	add    BYTE PTR [edx+0x1900af00],al
  41c409:	add    DWORD PTR [eax],eax
  41c40b:	add    ah,bl
  41c40d:	fadd   QWORD PTR [ecx+0x0]
  41c410:	add    al,BYTE PTR [eax]
  41c412:	imul   eax,DWORD PTR [eax],0x19
  41c415:	add    BYTE PTR [eax],al
  41c417:	add    ah,dl
  41c419:	fadd   QWORD PTR [ecx+0x0]
  41c41c:	add    al,BYTE PTR [eax]
  41c41e:	imul   eax,DWORD PTR [eax],0x1c
  41c424:	int3   
  41c425:	fadd   QWORD PTR [ecx+0x0]
  41c428:	add    al,BYTE PTR [eax]
  41c42a:	imul   eax,DWORD PTR [eax],0x1d
  41c430:	push   esp
  41c431:	loopne 0x41c474
  41c433:	add    BYTE PTR [ebx],al
  41c435:	add    BYTE PTR [ebx+0x0],ch
  41c438:	sbb    DWORD PTR [ecx],eax
  41c43a:	add    BYTE PTR [eax],al
  41c43c:	and    al,0x41
  41c43f:	add    BYTE PTR [ebx],al
  41c441:	add    BYTE PTR [ecx+0x0],ch
  41c444:	sbb    al,0x1
  41c446:	add    BYTE PTR [eax],al
  41c448:	and    al,ah
  41c44a:	inc    ecx
  41c44b:	add    BYTE PTR [ebx],al
  41c44d:	add    BYTE PTR [ecx+0x0],ch
  41c450:	sbb    eax,0x74000001
  41c455:	loope  0x41c498
  41c457:	add    BYTE PTR [ecx+0x0],bh
  41c45a:	test   BYTE PTR [eax],0x18
  41c45d:	add    BYTE PTR [eax],al
  41c45f:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41c463:	add    BYTE PTR [ecx+0x0],bh
  41c466:	test   DWORD PTR [eax],0x19
  41c46c:	sbb    al,0xdd
  41c46e:	inc    ecx
  41c46f:	add    BYTE PTR [edx+0x58007d00],al
  41c475:	add    BYTE PTR [eax],al
  41c477:	add    BYTE PTR [eax-0x7dffbe23],bh
  41c47d:	add    BYTE PTR [ebp+0x0],bh
  41c480:	pop    eax
  41c481:	add    BYTE PTR [eax],al
  41c483:	add    BYTE PTR [ebx*8+0x820041],bl
  41c48a:	jge    0x41c48c
  41c48c:	cmp    BYTE PTR [eax],al
  41c48e:	add    BYTE PTR [eax],al
  41c490:	cwde   
  41c491:	fld    QWORD PTR [ecx+0x0]
  41c494:	add    BYTE PTR [eax],0x7d
  41c497:	add    BYTE PTR [eax],bh
  41c499:	add    BYTE PTR [eax],al
  41c49b:	add    BYTE PTR [ebx*8+0x820041],bl
  41c4a2:	jl     0x41c4a4
  41c4a4:	pop    eax
  41c4a5:	add    BYTE PTR [eax],al
  41c4a7:	add    BYTE PTR [eax-0x7dffbe23],bh
  41c4ad:	add    BYTE PTR [eax+eax*1+0x58],bh
  41c4b1:	add    BYTE PTR [eax],al
  41c4b3:	add    BYTE PTR [ebx*8+0x820041],bl
  41c4ba:	jl     0x41c4bc
  41c4bc:	cmp    BYTE PTR [eax],al
  41c4be:	add    BYTE PTR [eax],al
  41c4c0:	cwde   
  41c4c1:	fld    QWORD PTR [ecx+0x0]
  41c4c4:	add    BYTE PTR [eax],0x7c
  41c4c7:	add    BYTE PTR [eax],bh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [ebx+eiz*8],al
  41c4ce:	inc    ecx
  41c4cf:	add    BYTE PTR [ecx+0x1e00ae00],cl
  41c4d5:	add    BYTE PTR [eax],al
  41c4d7:	add    BYTE PTR [ebx+eiz*8],al
  41c4da:	inc    ecx
  41c4db:	add    BYTE PTR [ecx+0x1800ae00],cl
  41c4e1:	add    BYTE PTR [eax],al
  41c4e3:	add    BYTE PTR [ebx+eiz*8],al
  41c4e6:	inc    ecx
  41c4e7:	add    BYTE PTR [ecx+0x1e00ae00],bl
  41c4ed:	add    BYTE PTR [eax],al
  41c4ef:	add    BYTE PTR [ebx+eiz*8],al
  41c4f2:	inc    ecx
  41c4f3:	add    BYTE PTR [ecx+0x1800ae00],bl
	...
  41c501:	fxch   st(1)
  41c503:	add    BYTE PTR [eax],bl
  41c505:	add    BYTE PTR [eax],al
  41c507:	add    BYTE PTR [eax+0x190041e1],ch
  41c50d:	add    cl,bl
  41c50f:	add    BYTE PTR [eax],bl
	...
  41c519:	fucomp st(1)
  41c51b:	add    BYTE PTR [eax],bl
  41c51d:	add    BYTE PTR [eax],al
  41c51f:	add    BYTE PTR [eax+0x590041e1],ch
  41c525:	add    ch,bl
  41c527:	add    BYTE PTR [eax],bl
  41c529:	add    BYTE PTR [eax],al
  41c52b:	add    BYTE PTR [ebx+eiz*8+0x5a0041],ah
  41c532:	fild   WORD PTR [eax]
  41c534:	sbb    BYTE PTR [eax],al
  41c536:	add    BYTE PTR [eax],al
  41c538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c539:	jecxz  0x41c57c
  41c53b:	add    BYTE PTR [edx+0x0],bl
  41c53e:	fild   DWORD PTR [eax]
  41c540:	sbb    BYTE PTR [eax],al
  41c542:	add    BYTE PTR [eax],al
  41c544:	add    BYTE PTR [eax],al
  41c546:	add    BYTE PTR [eax],al
  41c548:	add    ch,bl
  41c54a:	loope  0x41c54c
  41c54c:	sbb    BYTE PTR [eax],al
  41c54e:	add    BYTE PTR [eax],al
  41c550:	test   al,0xe1
  41c552:	inc    ecx
  41c553:	add    BYTE PTR [ecx+0x0],cl
  41c556:	fld    QWORD PTR [eax]
  41c558:	sbb    BYTE PTR [eax],al
  41c55a:	add    BYTE PTR [eax],al
  41c55c:	add    BYTE PTR [eax],al
  41c55e:	add    BYTE PTR [eax],al
  41c560:	add    dh,bl
  41c562:	loope  0x41c564
  41c564:	sbb    BYTE PTR [eax],al
  41c566:	add    BYTE PTR [eax],al
  41c568:	mov    al,ds:0x4a0041e1
  41c56d:	add    dh,bl
  41c56f:	add    BYTE PTR [eax],bl
	...
  41c579:	fsubrp st(1),st
  41c57b:	add    BYTE PTR [eax],bl
  41c57d:	add    BYTE PTR [eax],al
  41c57f:	add    BYTE PTR [ebx+eiz*8+0x5a0041],ah
  41c586:	fadd   DWORD PTR [eax]
  41c588:	sbb    BYTE PTR [eax],al
  41c58a:	add    BYTE PTR [eax],al
  41c58c:	mov    al,ds:0x4a0041e1
  41c591:	add    ah,bl
  41c593:	add    BYTE PTR [eax],bl
  41c595:	add    BYTE PTR [eax],al
  41c597:	add    al,bh
  41c599:	loop   0x41c5dc
  41c59b:	add    BYTE PTR [ecx+0x0],bl
  41c59e:	fadd   DWORD PTR [eax]
  41c5a0:	sbb    BYTE PTR [eax],al
  41c5a2:	add    BYTE PTR [eax],al
  41c5a4:	call   0x5942078b
  41c5a9:	add    ah,bl
  41c5ab:	add    BYTE PTR [eax],bl
	...
  41c5b5:	fsubp  st(1),st
  41c5b7:	add    BYTE PTR [eax],bl
  41c5b9:	add    BYTE PTR [eax],al
  41c5bb:	add    BYTE PTR [eax+0x5a0041e1],ah
  41c5c1:	add    dh,bl
  41c5c3:	add    BYTE PTR [eax],bl
	...
  41c5cd:	fsubp  st(1),st
  41c5cf:	add    BYTE PTR [eax],bl
  41c5d1:	add    BYTE PTR [eax],al
  41c5d3:	add    BYTE PTR [ebx+eiz*8+0x4a0041],ah
  41c5da:	fadd   DWORD PTR [eax]
  41c5dc:	sbb    BYTE PTR [eax],al
  41c5de:	add    BYTE PTR [eax],al
  41c5e0:	mov    al,ds:0x5a0041e1
  41c5e5:	add    ah,bl
  41c5e7:	add    BYTE PTR [eax],bl
  41c5e9:	add    BYTE PTR [eax],al
  41c5eb:	add    al,bh
  41c5ed:	loop   0x41c630
  41c5ef:	add    BYTE PTR [ecx+0x0],cl
  41c5f2:	fadd   DWORD PTR [eax]
  41c5f4:	sbb    BYTE PTR [eax],al
  41c5f6:	add    BYTE PTR [eax],al
  41c5f8:	call   0x494207df
  41c5fd:	add    ah,bl
  41c5ff:	add    BYTE PTR [eax],bl
  41c601:	add    BYTE PTR [eax],al
  41c603:	add    BYTE PTR [esp+eiz*8],ah
  41c606:	inc    ecx
  41c607:	add    BYTE PTR [ecx],al
  41c609:	fnstsw ax
  41c60b:	add    BYTE PTR [eax],bl
  41c60d:	add    BYTE PTR [eax],al
  41c60f:	add    ah,bh
  41c611:	loop   0x41c654
  41c613:	add    BYTE PTR [ecx+0x0],bh
  41c616:	fld    QWORD PTR [eax]
  41c618:	sbb    BYTE PTR [edx],al
  41c61a:	add    BYTE PTR [eax],al
  41c61c:	test   al,0xe1
  41c61e:	inc    ecx
  41c61f:	add    BYTE PTR [ecx],bh
  41c621:	add    ch,bl
  41c623:	add    BYTE PTR [eax],bl
  41c625:	add    BYTE PTR [eax],al
  41c627:	add    al,bh
  41c629:	loop   0x41c66c
  41c62b:	add    BYTE PTR [ecx],bh
  41c62d:	add    cl,bl
  41c62f:	add    BYTE PTR [eax],bl
  41c631:	add    BYTE PTR [eax],al
  41c633:	add    al,ch
  41c635:	loop   0x41c678
  41c637:	add    BYTE PTR [ecx],bh
  41c639:	add    ch,bl
  41c63b:	add    BYTE PTR [eax],bl
  41c63d:	add    BYTE PTR [eax],al
  41c63f:	add    ah,ah
  41c641:	loop   0x41c684
  41c643:	add    BYTE PTR [ecx+0x0],bh
  41c646:	fild   DWORD PTR [eax]
  41c648:	sbb    BYTE PTR [eax],al
  41c64a:	add    BYTE PTR [eax],al
  41c64c:	add    al,0xe3
  41c64e:	inc    ecx
  41c64f:	add    BYTE PTR [ecx+0x0],ch
  41c652:	fld    DWORD PTR [eax]
  41c654:	sbb    BYTE PTR [edx],al
  41c656:	add    BYTE PTR [eax],al
  41c658:	cld    
  41c659:	loop   0x41c69c
  41c65b:	add    BYTE PTR [ecx+0x0],bh
  41c65e:	fld    DWORD PTR [eax]
  41c660:	sbb    BYTE PTR [edx],al
  41c662:	add    BYTE PTR [eax],al
  41c664:	test   al,0xe1
  41c666:	inc    ecx
  41c667:	add    BYTE PTR [ecx],ch
  41c669:	add    ch,bl
  41c66b:	add    BYTE PTR [eax],bl
  41c66d:	add    BYTE PTR [eax],al
  41c66f:	add    al,bh
  41c671:	loop   0x41c6b4
  41c673:	add    BYTE PTR [ecx],ch
  41c675:	add    cl,bl
  41c677:	add    BYTE PTR [eax],bl
  41c679:	add    BYTE PTR [eax],al
  41c67b:	add    al,ch
  41c67d:	loop   0x41c6c0
  41c67f:	add    BYTE PTR [ecx],ch
  41c681:	add    ch,bl
  41c683:	add    BYTE PTR [eax],bl
  41c685:	add    BYTE PTR [eax],al
  41c687:	add    BYTE PTR [ebx+eiz*8],al
  41c68a:	inc    ecx
  41c68b:	add    BYTE PTR [ecx+0x0],ch
  41c68e:	fld    QWORD PTR [eax]
  41c690:	sbb    al,0x2
  41c692:	add    BYTE PTR [eax],al
  41c694:	add    al,0xe3
  41c696:	inc    ecx
  41c697:	add    BYTE PTR [ecx+0x0],ch
  41c69a:	fld    QWORD PTR [eax]
  41c69c:	sbb    BYTE PTR [edx],al
  41c69e:	add    BYTE PTR [eax],al
  41c6a0:	add    al,0xe3
  41c6a2:	inc    ecx
  41c6a3:	add    BYTE PTR [ecx+0x0],cl
  41c6a6:	fld    QWORD PTR [eax]
  41c6a8:	sbb    al,0x0
  41c6aa:	add    BYTE PTR [eax],al
  41c6ac:	add    al,0xe3
  41c6ae:	inc    ecx
  41c6af:	add    BYTE PTR [ecx+0x0],cl
  41c6b2:	fld    QWORD PTR [eax]
  41c6b4:	sbb    BYTE PTR [eax],al
  41c6b6:	add    BYTE PTR [eax],al
  41c6b8:	add    al,0xe3
  41c6ba:	inc    ecx
  41c6bb:	add    BYTE PTR [ecx+0x0],ch
  41c6be:	fld    DWORD PTR [eax]
  41c6c0:	sbb    al,0x2
  41c6c2:	add    BYTE PTR [eax],al
  41c6c4:	add    BYTE PTR [eax],al
  41c6c6:	add    BYTE PTR [eax],al
  41c6c8:	add    dh,bl
  41c6ca:	leave  
  41c6cb:	add    BYTE PTR [eax],bl
  41c6cd:	add    BYTE PTR [eax],al
  41c6cf:	add    BYTE PTR [eax+0x1a0041e1],ah
  41c6d5:	add    dh,bl
  41c6d7:	add    BYTE PTR [eax],bl
	...
  41c6e1:	fmulp  st(1),st
  41c6e3:	add    BYTE PTR [eax],bl
  41c6e5:	add    BYTE PTR [eax],al
  41c6e7:	add    BYTE PTR [ebx+eiz*8+0x1a0041],ah
  41c6ee:	fadd   DWORD PTR [eax]
  41c6f0:	sbb    BYTE PTR [eax],al
  41c6f2:	add    BYTE PTR [eax],al
  41c6f4:	mov    al,ds:0x1a0041e1
  41c6f9:	add    ah,bl
  41c6fb:	add    BYTE PTR [eax],bl
  41c6fd:	add    BYTE PTR [eax],al
  41c6ff:	add    al,bh
  41c701:	loop   0x41c744
  41c703:	add    BYTE PTR [ecx],bl
  41c705:	add    al,bl
  41c707:	add    BYTE PTR [eax],bl
  41c709:	add    BYTE PTR [eax],al
  41c70b:	add    al,ch
  41c70d:	loop   0x41c750
  41c70f:	add    BYTE PTR [ecx],bl
  41c711:	add    ah,bl
  41c713:	add    BYTE PTR [eax],bl
  41c715:	add    BYTE PTR [eax],al
  41c717:	add    BYTE PTR [ebx+eiz*8],al
  41c71a:	inc    ecx
  41c71b:	add    BYTE PTR [ecx+0x0],cl
  41c71e:	fld    DWORD PTR [eax]
  41c720:	sbb    al,0x0
  41c722:	add    BYTE PTR [eax],al
  41c724:	add    al,0xe3
  41c726:	inc    ecx
  41c727:	add    BYTE PTR [ecx+0x0],cl
  41c72a:	fld    DWORD PTR [eax]
  41c72c:	sbb    BYTE PTR [eax],al
  41c72e:	add    BYTE PTR [eax],al
  41c730:	cld    
  41c731:	loop   0x41c774
  41c733:	add    BYTE PTR [ecx+0x0],bl
  41c736:	fld    DWORD PTR [eax]
  41c738:	sbb    BYTE PTR [eax],al
  41c73a:	add    BYTE PTR [eax],al
  41c73c:	test   al,0xe1
  41c73e:	inc    ecx
  41c73f:	add    BYTE PTR [ecx],cl
  41c741:	add    cl,bl
  41c743:	add    BYTE PTR [eax],bl
  41c745:	add    BYTE PTR [eax],al
  41c747:	add    al,bh
  41c749:	loop   0x41c78c
  41c74b:	add    BYTE PTR [ecx],cl
  41c74d:	add    cl,bl
  41c74f:	add    BYTE PTR [eax],bl
  41c751:	add    BYTE PTR [eax],al
  41c753:	add    al,ch
  41c755:	loop   0x41c798
  41c757:	add    BYTE PTR [ecx],cl
  41c759:	add    ch,bl
  41c75b:	add    BYTE PTR [eax],bl
  41c75d:	add    BYTE PTR [eax],al
  41c75f:	add    ah,ah
  41c761:	loop   0x41c7a4
  41c763:	add    BYTE PTR [ecx+0x0],bl
  41c766:	fild   DWORD PTR [eax]
  41c768:	sbb    BYTE PTR [eax],al
  41c76a:	add    BYTE PTR [eax],al
  41c76c:	add    bl,ah
  41c76e:	inc    ecx
  41c76f:	add    BYTE PTR [ecx+0x0],bl
  41c772:	fiadd  WORD PTR [eax]
  41c774:	sbb    BYTE PTR [eax],al
  41c776:	add    BYTE PTR [eax],al
  41c778:	clc    
  41c779:	loop   0x41c7bc
  41c77b:	add    BYTE PTR [ecx+0x0],bl
  41c77e:	fiadd  DWORD PTR [eax]
  41c780:	sbb    BYTE PTR [eax],al
  41c782:	add    BYTE PTR [eax],al
  41c784:	add    bl,ah
  41c786:	inc    ecx
  41c787:	add    BYTE PTR [ecx+0x0],cl
  41c78a:	fiadd  WORD PTR [eax]
  41c78c:	sbb    BYTE PTR [eax],al
  41c78e:	add    BYTE PTR [eax],al
  41c790:	clc    
  41c791:	loop   0x41c7d4
  41c793:	add    BYTE PTR [ecx+0x0],cl
  41c796:	fiadd  DWORD PTR [eax]
  41c798:	sbb    BYTE PTR [eax],al
  41c79a:	add    BYTE PTR [eax],al
  41c79c:	add    bl,ah
  41c79e:	inc    ecx
  41c79f:	add    BYTE PTR [ecx],bl
  41c7a1:	add    bh,bl
  41c7a3:	add    BYTE PTR [eax],bl
  41c7a5:	add    al,BYTE PTR [eax]
  41c7a7:	add    al,bh
  41c7a9:	loop   0x41c7ec
  41c7ab:	add    BYTE PTR [ecx],bl
  41c7ad:	add    bl,bl
  41c7af:	add    BYTE PTR [eax],bl
  41c7b1:	add    al,BYTE PTR [eax]
  41c7b3:	add    al,ch
  41c7b5:	loop   0x41c7f8
  41c7b7:	add    BYTE PTR [ecx],bl
  41c7b9:	add    ch,bl
  41c7bb:	add    BYTE PTR [eax],bl
  41c7bd:	add    al,BYTE PTR [eax]
  41c7bf:	add    BYTE PTR [eax],al
  41c7c1:	jecxz  0x41c804
  41c7c3:	add    BYTE PTR [ecx],bh
  41c7c5:	add    bh,bl
  41c7c7:	add    BYTE PTR [eax],bl
  41c7c9:	add    al,BYTE PTR [eax]
  41c7cb:	add    al,bh
  41c7cd:	loop   0x41c810
  41c7cf:	add    BYTE PTR [ecx],bh
  41c7d1:	add    bl,bl
  41c7d3:	add    BYTE PTR [eax],bl
  41c7d5:	add    al,BYTE PTR [eax]
  41c7d7:	add    al,ch
  41c7d9:	loop   0x41c81c
  41c7db:	add    BYTE PTR [ecx+0x0],bh
  41c7de:	fild   WORD PTR [eax]
  41c7e0:	sbb    BYTE PTR [edx],al
  41c7e2:	add    BYTE PTR [eax],al
  41c7e4:	add    bl,ah
  41c7e6:	inc    ecx
  41c7e7:	add    BYTE PTR [ecx],ch
  41c7e9:	add    bh,bl
  41c7eb:	add    BYTE PTR [eax],bl
  41c7ed:	add    al,BYTE PTR [eax]
  41c7ef:	add    al,bh
  41c7f1:	loop   0x41c834
  41c7f3:	add    BYTE PTR [ecx],ch
  41c7f5:	add    bl,bl
  41c7f7:	add    BYTE PTR [eax],bl
  41c7f9:	add    al,BYTE PTR [eax]
  41c7fb:	add    BYTE PTR [eax],al
  41c7fd:	jecxz  0x41c840
  41c7ff:	add    BYTE PTR [ecx],bl
  41c801:	add    dh,bl
  41c803:	add    BYTE PTR [eax],bl
  41c805:	add    BYTE PTR [eax],al
  41c807:	add    al,bh
  41c809:	loop   0x41c84c
  41c80b:	add    BYTE PTR [ecx],bl
  41c80d:	add    dl,bl
  41c80f:	add    BYTE PTR [eax],bl
  41c811:	add    BYTE PTR [eax],al
  41c813:	add    BYTE PTR [eax],al
  41c815:	jecxz  0x41c858
  41c817:	add    BYTE PTR [ecx],cl
  41c819:	add    bh,bl
  41c81b:	add    BYTE PTR [eax],bl
  41c81d:	add    BYTE PTR [eax],al
  41c81f:	add    al,bh
  41c821:	loop   0x41c864
  41c823:	add    BYTE PTR [ecx],cl
  41c825:	add    bl,bl
  41c827:	add    BYTE PTR [eax],bl
  41c829:	add    BYTE PTR [eax],al
  41c82b:	add    al,ch
  41c82d:	loop   0x41c870
  41c82f:	add    BYTE PTR [ecx+0x0],bl
  41c832:	fild   WORD PTR [eax]
  41c834:	sbb    BYTE PTR [eax],al
  41c836:	add    BYTE PTR [eax],al
  41c838:	add    bl,ah
  41c83a:	inc    ecx
  41c83b:	add    BYTE PTR [ecx+0x0],bh
  41c83e:	fiadd  WORD PTR [eax]
  41c840:	sbb    BYTE PTR [eax],al
  41c842:	add    BYTE PTR [eax],al
  41c844:	clc    
  41c845:	loop   0x41c888
  41c847:	add    BYTE PTR [ecx+0x0],bh
  41c84a:	fiadd  DWORD PTR [eax]
  41c84c:	sbb    BYTE PTR [eax],al
  41c84e:	add    BYTE PTR [eax],al
  41c850:	add    bl,ah
  41c852:	inc    ecx
  41c853:	add    BYTE PTR [ecx+0x0],ch
  41c856:	fiadd  WORD PTR [eax]
  41c858:	sbb    BYTE PTR [eax],al
  41c85a:	add    BYTE PTR [eax],al
  41c85c:	clc    
  41c85d:	loop   0x41c8a0
  41c85f:	add    BYTE PTR [ecx+0x0],ch
  41c862:	fiadd  DWORD PTR [eax]
  41c864:	sbb    BYTE PTR [eax],al
  41c866:	add    BYTE PTR [eax],al
  41c868:	add    bl,ah
  41c86a:	inc    ecx
  41c86b:	add    BYTE PTR [ecx],bh
  41c86d:	add    dh,bl
  41c86f:	add    BYTE PTR [eax],bl
  41c871:	add    BYTE PTR [eax],al
  41c873:	add    al,bh
  41c875:	loop   0x41c8b8
  41c877:	add    BYTE PTR [ecx],bh
  41c879:	add    dl,bl
  41c87b:	add    BYTE PTR [eax],bl
  41c87d:	add    BYTE PTR [eax],al
  41c87f:	add    BYTE PTR [eax],al
  41c881:	jecxz  0x41c8c4
  41c883:	add    BYTE PTR [ecx],ch
  41c885:	add    dh,bl
  41c887:	add    BYTE PTR [eax],bl
  41c889:	add    BYTE PTR [eax],al
  41c88b:	add    al,bh
  41c88d:	loop   0x41c8d0
  41c88f:	add    BYTE PTR [ecx],ch
  41c891:	add    dl,bl
  41c893:	add    BYTE PTR [eax],bl
  41c895:	add    BYTE PTR [eax],al
  41c897:	add    BYTE PTR [eax],al
  41c899:	jecxz  0x41c8dc
  41c89b:	add    BYTE PTR [ecx],cl
  41c89d:	add    dh,bl
  41c89f:	add    BYTE PTR [eax],bl
  41c8a1:	add    BYTE PTR [eax],al
  41c8a3:	add    al,bh
  41c8a5:	loop   0x41c8e8
  41c8a7:	add    BYTE PTR [ecx],cl
  41c8a9:	add    dl,bl
  41c8ab:	add    BYTE PTR [eax],bl
  41c8ad:	add    BYTE PTR [eax],al
  41c8af:	add    BYTE PTR [eax+0x90041e1],ch
  41c8b5:	add    bh,bl
  41c8b7:	add    BYTE PTR [eax],bl
  41c8b9:	add    BYTE PTR [eax],al
  41c8bb:	add    BYTE PTR [eax+0x90041e1],ch
  41c8c1:	add    ch,bl
  41c8c3:	add    BYTE PTR [eax],bl
	...
  41c8cd:	fdivrp st(1),st
  41c8cf:	add    BYTE PTR [eax],bl
  41c8d1:	add    BYTE PTR [eax],al
  41c8d3:	add    BYTE PTR [eax+0x6a0041e1],ah
  41c8d9:	add    dh,bl
  41c8db:	add    BYTE PTR [eax],bl
	...
  41c8e5:	fdivrp st(1),st
  41c8e7:	add    BYTE PTR [eax],bl
  41c8e9:	add    BYTE PTR [eax],al
  41c8eb:	add    BYTE PTR [ebx+eiz*8+0x7a0041],ah
  41c8f2:	fadd   DWORD PTR [eax]
  41c8f4:	sbb    BYTE PTR [eax],al
  41c8f6:	add    BYTE PTR [eax],al
  41c8f8:	mov    al,ds:0x6a0041e1
  41c8fd:	add    ah,bl
  41c8ff:	add    BYTE PTR [eax],bl
  41c901:	add    BYTE PTR [eax],al
  41c903:	add    al,bh
  41c905:	loop   0x41c948
  41c907:	add    BYTE PTR [ecx+0x0],bh
  41c90a:	fadd   DWORD PTR [eax]
  41c90c:	sbb    BYTE PTR [eax],al
  41c90e:	add    BYTE PTR [eax],al
  41c910:	call   0x79420af7
  41c915:	add    ah,bl
  41c917:	add    BYTE PTR [eax],bl
	...
  41c921:	fdivp  st(1),st
  41c923:	add    BYTE PTR [eax],bl
  41c925:	add    BYTE PTR [eax],al
  41c927:	add    BYTE PTR [eax+0x7a0041e1],ah
  41c92d:	add    dh,bl
  41c92f:	add    BYTE PTR [eax],bl
	...
  41c939:	fdivp  st(1),st
  41c93b:	add    BYTE PTR [eax],bl
  41c93d:	add    BYTE PTR [eax],al
  41c93f:	add    BYTE PTR [ebx+eiz*8+0x6a0041],ah
  41c946:	fadd   DWORD PTR [eax]
  41c948:	sbb    BYTE PTR [eax],al
  41c94a:	add    BYTE PTR [eax],al
  41c94c:	mov    al,ds:0x7a0041e1
  41c951:	add    ah,bl
  41c953:	add    BYTE PTR [eax],bl
  41c955:	add    BYTE PTR [eax],al
  41c957:	add    al,bh
  41c959:	loop   0x41c99c
  41c95b:	add    BYTE PTR [ecx+0x0],ch
  41c95e:	fadd   DWORD PTR [eax]
  41c960:	sbb    BYTE PTR [eax],al
  41c962:	add    BYTE PTR [eax],al
  41c964:	call   0x69420b4b
  41c969:	add    ah,bl
  41c96b:	add    BYTE PTR [eax],bl
	...
  41c975:	fcomp  st(1)
  41c977:	add    BYTE PTR [eax],bl
  41c979:	add    BYTE PTR [eax],al
  41c97b:	add    BYTE PTR [eax+0x390041e1],ch
  41c981:	add    al,bl
  41c983:	add    BYTE PTR [eax],bl
  41c985:	add    BYTE PTR [eax],al
  41c987:	add    al,bh
  41c989:	loop   0x41c9cc
  41c98b:	add    BYTE PTR [ecx],bh
  41c98d:	add    al,bl
  41c98f:	add    BYTE PTR [eax],bl
  41c991:	add    BYTE PTR [eax],al
  41c993:	add    al,ch
  41c995:	loop   0x41c9d8
  41c997:	add    BYTE PTR [ecx],bh
  41c999:	add    ah,bl
  41c99b:	add    BYTE PTR [eax],bl
  41c99d:	add    BYTE PTR [eax],al
  41c99f:	add    BYTE PTR [ebx+eiz*8+0x6a0041],ah
  41c9a6:	fild   WORD PTR [eax]
  41c9a8:	sbb    BYTE PTR [eax],al
  41c9aa:	add    BYTE PTR [eax],al
  41c9ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ad:	jecxz  0x41c9f0
  41c9af:	add    BYTE PTR [edx+0x0],ch
  41c9b2:	fild   DWORD PTR [eax]
  41c9b4:	sbb    BYTE PTR [eax],al
  41c9b6:	add    BYTE PTR [eax],al
  41c9b8:	add    BYTE PTR [eax],al
  41c9ba:	add    BYTE PTR [eax],al
  41c9bc:	add    al,bl
  41c9be:	rol    DWORD PTR [eax],1
  41c9c0:	sbb    BYTE PTR [eax],al
  41c9c2:	add    BYTE PTR [eax],al
  41c9c4:	test   al,0xe1
  41c9c6:	inc    ecx
  41c9c7:	add    BYTE PTR [ecx],ch
  41c9c9:	add    al,bl
  41c9cb:	add    BYTE PTR [eax],bl
  41c9cd:	add    BYTE PTR [eax],al
  41c9cf:	add    al,bh
  41c9d1:	loop   0x41ca14
  41c9d3:	add    BYTE PTR [ecx],ch
  41c9d5:	add    al,bl
  41c9d7:	add    BYTE PTR [eax],bl
  41c9d9:	add    BYTE PTR [eax],al
  41c9db:	add    al,ch
  41c9dd:	loop   0x41ca20
  41c9df:	add    BYTE PTR [ecx],ch
  41c9e1:	add    ah,bl
  41c9e3:	add    BYTE PTR [eax],bl
  41c9e5:	add    BYTE PTR [eax],al
  41c9e7:	add    BYTE PTR [ebx+eiz*8+0x3a0041],ah
  41c9ee:	fiadd  DWORD PTR [eax]
  41c9f0:	sbb    BYTE PTR [eax],al
  41c9f2:	add    BYTE PTR [eax],al
  41c9f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9f5:	jecxz  0x41ca38
  41c9f7:	add    BYTE PTR [edx],bh
  41c9f9:	add    bl,bl
  41c9fb:	add    BYTE PTR [eax],bl
  41c9fd:	add    BYTE PTR [eax],al
  41c9ff:	add    BYTE PTR [ebx+eiz*8+0x1a0041],ah
  41ca06:	fild   DWORD PTR [eax]
  41ca08:	sbb    BYTE PTR [eax],al
  41ca0a:	add    BYTE PTR [eax],al
  41ca0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca0d:	jecxz  0x41ca50
  41ca0f:	add    BYTE PTR [edx],ch
  41ca11:	add    bl,bl
  41ca13:	add    BYTE PTR [eax],bl
  41ca15:	add    BYTE PTR [eax],al
  41ca17:	add    BYTE PTR [ebx+eiz*8+0xa0041],ah
  41ca1e:	fild   DWORD PTR [eax]
  41ca20:	sbb    BYTE PTR [eax],al
  41ca22:	add    BYTE PTR [eax],al
  41ca24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca25:	jecxz  0x41ca68
  41ca27:	add    BYTE PTR [edx],bl
  41ca29:	add    dl,bl
  41ca2b:	add    BYTE PTR [eax],bl
  41ca2d:	add    BYTE PTR [eax],al
  41ca2f:	add    BYTE PTR [ebx+eiz*8+0x2a0041],ah
  41ca36:	fiadd  DWORD PTR [eax]
  41ca38:	sbb    BYTE PTR [eax],al
  41ca3a:	add    BYTE PTR [eax],al
  41ca3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca3d:	jecxz  0x41ca80
  41ca3f:	add    BYTE PTR [edx],cl
  41ca41:	add    dl,bl
  41ca43:	add    BYTE PTR [eax],bl
  41ca45:	add    BYTE PTR [eax],al
  41ca47:	add    ah,ah
  41ca49:	loop   0x41ca8c
  41ca4b:	add    BYTE PTR [ecx+0x0],ch
  41ca4e:	fild   WORD PTR [eax]
  41ca50:	sbb    BYTE PTR [edx],al
  41ca52:	add    BYTE PTR [eax],al
  41ca54:	in     al,0xe2
  41ca56:	inc    ecx
  41ca57:	add    BYTE PTR [ecx+0x0],cl
  41ca5a:	fild   WORD PTR [eax]
  41ca5c:	sbb    BYTE PTR [eax],al
  41ca5e:	add    BYTE PTR [eax],al
  41ca60:	add    BYTE PTR [eax],al
  41ca62:	add    BYTE PTR [eax],al
  41ca64:	add    dh,bl
  41ca66:	rol    DWORD PTR [eax],0x18
  41ca69:	add    BYTE PTR [eax],al
  41ca6b:	add    BYTE PTR [eax+0xa0041e1],ah
  41ca71:	add    dh,bl
  41ca73:	add    BYTE PTR [eax],bl
	...
  41ca7d:	faddp  st(1),st
  41ca7f:	add    BYTE PTR [eax],bl
  41ca81:	add    BYTE PTR [eax],al
  41ca83:	add    BYTE PTR [ebx+eiz*8+0xa0041],ah
  41ca8a:	fadd   DWORD PTR [eax]
  41ca8c:	sbb    BYTE PTR [eax],al
  41ca8e:	add    BYTE PTR [eax],al
  41ca90:	mov    al,ds:0xa0041e1
  41ca95:	add    ah,bl
  41ca97:	add    BYTE PTR [eax],bl
  41ca99:	add    BYTE PTR [eax],al
  41ca9b:	add    al,bh
  41ca9d:	loop   0x41cae0
  41ca9f:	add    BYTE PTR [ecx],cl
  41caa1:	add    al,bl
  41caa3:	add    BYTE PTR [eax],bl
  41caa5:	add    BYTE PTR [eax],al
  41caa7:	add    al,ch
  41caa9:	loop   0x41caec
  41caab:	add    BYTE PTR [ecx],cl
  41caad:	add    ah,bl
  41caaf:	add    BYTE PTR [eax],bl
  41cab1:	add    BYTE PTR [eax],al
  41cab3:	add    ah,al
  41cab5:	loopne 0x41caf8
  41cab7:	add    BYTE PTR [ebx+0x38007800],al
  41cabd:	add    al,BYTE PTR [eax]
  41cabf:	add    BYTE PTR [ebx*8+0x820041],bl
  41cac6:	jns    0x41cac8
  41cac8:	cmp    BYTE PTR [eax],al
  41caca:	add    BYTE PTR [eax],al
  41cacc:	add    cl,ah
  41cace:	inc    ecx
  41cacf:	add    BYTE PTR [ebx+0x3800173a],al
  41cad5:	add    al,BYTE PTR [eax]
  41cad7:	add    BYTE PTR [ecx+eiz*8+0x3a830041],ch
  41cade:	pop    ss
  41cadf:	add    BYTE PTR [esi],bh
  41cae1:	add    BYTE PTR [eax],al
  41cae3:	add    BYTE PTR [eax-0x1d],dl
  41cae6:	inc    ecx
  41cae7:	add    BYTE PTR [edx],al
  41cae9:	add    al,cl
  41caeb:	add    BYTE PTR [eax],bl
  41caed:	add    BYTE PTR [eax],al
  41caef:	add    BYTE PTR [eax],dl
  41caf1:	fld    QWORD PTR [ecx+0x0]
  41caf4:	cmp    DWORD PTR [edx],0x40
  41caf7:	add    BYTE PTR [eax],bh
  41caf9:	add    BYTE PTR [eax],al
  41cafb:	add    BYTE PTR [ebp+ebx*8+0x3a830041],ch
  41cb02:	inc    eax
  41cb03:	add    BYTE PTR [eax],bh
  41cb05:	add    BYTE PTR [eax],al
  41cb07:	add    BYTE PTR [eax],dl
  41cb09:	fld    QWORD PTR [ecx+0x0]
  41cb0c:	cmp    DWORD PTR [edx],0x41
  41cb0f:	add    BYTE PTR [eax],bh
  41cb11:	add    BYTE PTR [eax],al
  41cb13:	add    BYTE PTR [ebp+ebx*8+0x3a830041],cl
  41cb1a:	inc    ecx
  41cb1b:	add    BYTE PTR [eax],bh
  41cb1d:	add    BYTE PTR [eax],al
  41cb1f:	add    BYTE PTR [ebx*8+0x820041],bl
  41cb26:	pop    esi
  41cb27:	add    BYTE PTR [eax+0x0],bh
  41cb2a:	add    BYTE PTR [eax],al
  41cb2c:	xor    al,0xde
  41cb2e:	inc    ecx
  41cb2f:	add    BYTE PTR [edx+0x78005e00],al
  41cb35:	add    BYTE PTR [eax],al
  41cb37:	add    BYTE PTR [ebx*8+0x820041],bl
  41cb3e:	pop    esi
  41cb3f:	add    BYTE PTR [eax+0x0],bl
  41cb42:	add    BYTE PTR [eax],al
  41cb44:	sbb    dh,bl
  41cb46:	inc    ecx
  41cb47:	add    BYTE PTR [edx+0x58005e00],al
  41cb4d:	add    BYTE PTR [eax],al
  41cb4f:	add    BYTE PTR [ebx*8+0x820041],bl
  41cb56:	pop    esi
  41cb57:	add    BYTE PTR [eax],bl
  41cb59:	add    BYTE PTR [eax],al
  41cb5b:	add    BYTE PTR [eax-0x7dffbe23],bh
  41cb61:	add    BYTE PTR [esi+0x0],bl
  41cb64:	sbb    BYTE PTR [eax],al
  41cb66:	add    BYTE PTR [eax],al
  41cb68:	sbb    al,0xdd
  41cb6a:	inc    ecx
  41cb6b:	add    BYTE PTR [edx+0x38005e00],al
  41cb71:	add    BYTE PTR [eax],al
  41cb73:	add    BYTE PTR [eax-0x7dffbe23],bl
  41cb79:	add    BYTE PTR [esi+0x0],bl
  41cb7c:	cmp    BYTE PTR [eax],al
  41cb7e:	add    BYTE PTR [eax],al
  41cb80:	je     0x41cb63
  41cb82:	inc    ecx
  41cb83:	add    BYTE PTR [ecx+0x0],ch
  41cb86:	test   BYTE PTR [eax],0x18
  41cb89:	add    BYTE PTR [eax],al
  41cb8b:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41cb8f:	add    BYTE PTR [ecx+0x0],ch
  41cb92:	test   DWORD PTR [eax],0x19
  41cb98:	je     0x41cb7b
  41cb9a:	inc    ecx
  41cb9b:	add    BYTE PTR [ecx],bl
  41cb9d:	add    dh,bh
  41cb9f:	add    BYTE PTR [eax],bl
  41cba1:	add    al,BYTE PTR [eax]
  41cba3:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41cba7:	add    BYTE PTR [ecx],bl
  41cba9:	add    bh,bh
  41cbab:	add    BYTE PTR [ecx],bl
  41cbad:	add    al,BYTE PTR [eax]
  41cbaf:	add    ah,dh
  41cbb1:	fild   WORD PTR [ecx+0x0]
  41cbb4:	add    BYTE PTR [eax],0x2c
  41cbb7:	add    BYTE PTR [ecx+0x0],bh
  41cbba:	add    BYTE PTR [eax],al
  41cbbc:	inc    esp
  41cbbd:	loopne 0x41cc00
  41cbbf:	add    BYTE PTR [edx+0x79002c00],al
  41cbc5:	add    BYTE PTR [eax],al
  41cbc7:	add    ah,dh
  41cbc9:	fild   WORD PTR [ecx+0x0]
  41cbcc:	add    BYTE PTR [eax],0x2c
  41cbcf:	add    BYTE PTR [ecx+0x0],bl
  41cbd2:	add    BYTE PTR [eax],al
  41cbd4:	cmp    al,0xe0
  41cbd6:	inc    ecx
  41cbd7:	add    BYTE PTR [edx+0x59002c00],al
  41cbdd:	add    BYTE PTR [eax],al
  41cbdf:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41cbe3:	add    BYTE PTR [edx+0x18002c00],al
  41cbe9:	add    BYTE PTR [eax],al
  41cbeb:	add    ah,bl
  41cbed:	fiadd  WORD PTR [ecx+0x0]
  41cbf0:	add    BYTE PTR [eax],0x2c
  41cbf3:	add    BYTE PTR [eax],bl
  41cbf5:	add    BYTE PTR [eax],al
  41cbf7:	add    BYTE PTR [ebx*8+0x820041],bl
  41cbfe:	pop    ebx
  41cbff:	add    BYTE PTR [eax+0x0],bh
  41cc02:	add    BYTE PTR [eax],al
  41cc04:	mov    eax,0x820041dd
  41cc09:	add    BYTE PTR [ebx+0x0],bl
  41cc0c:	js     0x41cc0e
  41cc0e:	add    BYTE PTR [eax],al
  41cc10:	je     0x41cbf0
  41cc12:	inc    ecx
  41cc13:	add    BYTE PTR [edx+0x38002c00],al
  41cc19:	add    BYTE PTR [eax],al
  41cc1b:	add    BYTE PTR [esi+ebx*8+0x820041],ah
  41cc22:	sub    al,0x0
  41cc24:	cmp    BYTE PTR [eax],al
  41cc26:	add    BYTE PTR [eax],al
  41cc28:	sbb    al,0xdd
  41cc2a:	inc    ecx
  41cc2b:	add    BYTE PTR [edx+0x3800e600],al
  41cc31:	add    BYTE PTR [eax],al
  41cc33:	add    BYTE PTR [eax-0x7dffbe23],bl
  41cc39:	add    dh,ah
  41cc3b:	add    BYTE PTR [eax],bh
  41cc3d:	add    BYTE PTR [eax],al
  41cc3f:	add    ah,dh
  41cc41:	fild   WORD PTR [ecx+0x0]
  41cc44:	add    BYTE PTR [eax],0x2d
  41cc47:	add    BYTE PTR [ecx+0x0],bh
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	inc    esp
  41cc4d:	loopne 0x41cc90
  41cc4f:	add    BYTE PTR [edx+0x79002d00],al
  41cc55:	add    BYTE PTR [eax],al
  41cc57:	add    BYTE PTR [ebx*8+0x820041],bl
  41cc5e:	pop    edx
  41cc5f:	add    BYTE PTR [eax+0x0],bh
  41cc62:	add    BYTE PTR [eax],al
  41cc64:	xor    al,0xde
  41cc66:	inc    ecx
  41cc67:	add    BYTE PTR [edx+0x78005a00],al
  41cc6d:	add    BYTE PTR [eax],al
  41cc6f:	add    BYTE PTR [ebp+ebx*8+0x41],al
  41cc73:	add    BYTE PTR [edx+0x7a002a00],al
  41cc79:	add    BYTE PTR [eax],al
  41cc7b:	add    BYTE PTR [ebp+ebx*8+0x41],al
  41cc7f:	add    BYTE PTR [edx+0x5a002a00],al
  41cc85:	add    BYTE PTR [eax],al
  41cc87:	add    BYTE PTR [ebx*8+0x820041],bl
  41cc8e:	pop    edx
  41cc8f:	add    BYTE PTR [eax+0x0],bl
  41cc92:	add    BYTE PTR [eax],al
  41cc94:	sbb    dh,bl
  41cc96:	inc    ecx
  41cc97:	add    BYTE PTR [edx+0x58005a00],al
  41cc9d:	add    BYTE PTR [eax],al
  41cc9f:	add    ah,dh
  41cca1:	fild   WORD PTR [ecx+0x0]
  41cca4:	add    BYTE PTR [eax],0x2d
  41cca7:	add    BYTE PTR [ecx+0x0],bl
  41ccaa:	add    BYTE PTR [eax],al
  41ccac:	cmp    al,0xe0
  41ccae:	inc    ecx
  41ccaf:	add    BYTE PTR [edx+0x59002d00],al
  41ccb5:	add    BYTE PTR [eax],al
  41ccb7:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41ccbb:	add    BYTE PTR [edx+0x18002d00],al
  41ccc1:	add    BYTE PTR [eax],al
  41ccc3:	add    ah,bl
  41ccc5:	fiadd  WORD PTR [ecx+0x0]
  41ccc8:	add    BYTE PTR [eax],0x2d
  41cccb:	add    BYTE PTR [eax],bl
  41cccd:	add    BYTE PTR [eax],al
  41cccf:	add    BYTE PTR [ebx*8+0x820041],bl
  41ccd6:	pop    edx
  41ccd7:	add    BYTE PTR [eax],bl
  41ccd9:	add    BYTE PTR [eax],al
  41ccdb:	add    BYTE PTR [eax],bl
  41ccdd:	fiadd  WORD PTR [ecx+0x0]
  41cce0:	add    BYTE PTR [eax],0x5a
  41cce3:	add    BYTE PTR [eax],bl
  41cce5:	add    BYTE PTR [eax],al
  41cce7:	add    BYTE PTR [ebx*8+0x820041],bl
  41ccee:	pop    ebx
  41ccef:	add    BYTE PTR [eax],bh
  41ccf1:	add    BYTE PTR [eax],al
  41ccf3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41ccf9:	add    BYTE PTR [ebx+0x0],bl
  41ccfc:	cmp    BYTE PTR [eax],al
  41ccfe:	add    BYTE PTR [eax],al
  41cd00:	cmp    al,0xdd
  41cd02:	inc    ecx
  41cd03:	add    BYTE PTR [edx+0x18002a00],al
  41cd09:	add    BYTE PTR [eax],al
  41cd0b:	add    BYTE PTR [eax],bl
  41cd0d:	fiadd  WORD PTR [ecx+0x0]
  41cd10:	add    BYTE PTR [eax],0x2a
  41cd13:	add    BYTE PTR [eax],bl
  41cd15:	add    BYTE PTR [eax],al
  41cd17:	add    BYTE PTR [ebx*8+0x820041],bh
  41cd1e:	sub    al,BYTE PTR [eax]
  41cd20:	cmp    BYTE PTR [eax],al
  41cd22:	add    BYTE PTR [eax],al
  41cd24:	sbb    dh,bl
  41cd26:	inc    ecx
  41cd27:	add    BYTE PTR [edx+0x38002a00],al
  41cd2d:	add    BYTE PTR [eax],al
  41cd2f:	add    BYTE PTR [ebx*8+0x820041],bl
  41cd36:	pop    edx
  41cd37:	add    BYTE PTR [eax],bh
  41cd39:	add    BYTE PTR [eax],al
  41cd3b:	add    BYTE PTR [eax-0x7dffbe23],bl
  41cd41:	add    BYTE PTR [edx+0x0],bl
  41cd44:	cmp    BYTE PTR [eax],al
  41cd46:	add    BYTE PTR [eax],al
  41cd48:	je     0x41cd28
  41cd4a:	inc    ecx
  41cd4b:	add    BYTE PTR [edx+0x38002d00],al
  41cd51:	add    BYTE PTR [eax],al
  41cd53:	add    BYTE PTR [esi+ebx*8+0x820041],ah
  41cd5a:	sub    eax,0x3800
  41cd5f:	add    BYTE PTR [ebx*8+0x820041],bl
  41cd66:	out    0x0,al
  41cd68:	pop    eax
  41cd69:	add    BYTE PTR [eax],al
  41cd6b:	add    BYTE PTR [eax-0x7dffbe23],bl
  41cd71:	add    dh,ah
  41cd73:	add    BYTE PTR [eax+0x0],bl
  41cd76:	add    BYTE PTR [eax],al
  41cd78:	sbb    al,0xdd
  41cd7a:	inc    ecx
  41cd7b:	add    BYTE PTR [edx+0x18005b00],al
  41cd81:	add    BYTE PTR [eax],al
  41cd83:	add    BYTE PTR [eax-0x7dffbe23],bh
  41cd89:	add    BYTE PTR [ebx+0x0],bl
  41cd8c:	sbb    BYTE PTR [eax],al
  41cd8e:	add    BYTE PTR [eax],al
  41cd90:	sbb    al,0xdd
  41cd92:	inc    ecx
  41cd93:	add    BYTE PTR [edx+0x7800e600],al
  41cd99:	add    BYTE PTR [eax],al
  41cd9b:	add    BYTE PTR [eax],bl
  41cd9d:	fiadd  WORD PTR [ecx+0x0]
  41cda0:	add    BYTE PTR [eax],0xe6
  41cda3:	add    BYTE PTR [eax+0x0],bh
  41cda6:	add    BYTE PTR [eax],al
  41cda8:	sbb    al,ah
  41cdaa:	inc    ecx
  41cdab:	add    BYTE PTR [edx+0x5900f038],al
  41cdb1:	add    BYTE PTR [eax],al
  41cdb3:	add    al,al
  41cdb5:	fild   WORD PTR [ecx+0x0]
  41cdb8:	cmp    BYTE PTR [eax],0xf1
  41cdbb:	add    BYTE PTR [edx+0x0],bl
  41cdbe:	add    BYTE PTR [eax],al
  41cdc0:	sub    al,0xe0
  41cdc2:	inc    ecx
  41cdc3:	add    BYTE PTR [edx+0x5a00f138],al
  41cdc9:	add    DWORD PTR [eax],eax
  41cdcb:	add    BYTE PTR [ebx*8+0x820041],bl
  41cdd2:	das    
  41cdd3:	add    BYTE PTR [eax],bl
  41cdd5:	add    BYTE PTR [eax],al
  41cdd7:	add    BYTE PTR [esi+ebx*8],dh
  41cdda:	inc    ecx
  41cddb:	add    BYTE PTR [edx+0x18002f00],al
  41cde1:	add    BYTE PTR [eax],al
  41cde3:	add    BYTE PTR [ebx*8+0x820041],bl
  41cdea:	das    
  41cdeb:	add    BYTE PTR [eax],bh
  41cded:	add    BYTE PTR [eax],al
  41cdef:	add    BYTE PTR [eax],bl
  41cdf1:	fiadd  WORD PTR [ecx+0x0]
  41cdf4:	add    BYTE PTR [eax],0x2f
  41cdf7:	add    BYTE PTR [eax],bh
  41cdf9:	add    BYTE PTR [eax],al
  41cdfb:	add    al,ch
  41cdfd:	loop   0x41ce40
  41cdff:	add    BYTE PTR [ecx+0x1800c700],bl
  41ce05:	add    al,BYTE PTR [eax]
  41ce07:	add    BYTE PTR [ebx+eiz*8],al
  41ce0a:	inc    ecx
  41ce0b:	add    BYTE PTR [ecx+0x1e00c700],bl
  41ce11:	add    al,BYTE PTR [eax]
  41ce13:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41ce17:	add    BYTE PTR [edx+0x1800b000],al
  41ce1d:	add    al,BYTE PTR [eax]
  41ce1f:	add    BYTE PTR [eax-0x7dffbe1f],dl
  41ce25:	add    BYTE PTR [ecx+0x31a00],dh
  41ce2b:	add    BYTE PTR [ebx*8+0x820041],bl
  41ce32:	ret    0xf803
  41ce35:	add    BYTE PTR [eax],al
  41ce37:	add    BYTE PTR [esi+ebx*8],dh
  41ce3a:	inc    ecx
  41ce3b:	add    BYTE PTR [edx-0x7fc3e00],al
  41ce41:	add    BYTE PTR [eax],al
  41ce43:	add    BYTE PTR [ebx*8+0x820041],bl
  41ce4a:	ret    0xd803
  41ce4d:	add    BYTE PTR [eax],al
  41ce4f:	add    BYTE PTR [eax],bl
  41ce51:	fiadd  WORD PTR [ecx+0x0]
  41ce54:	add    BYTE PTR [eax],0xc2
  41ce57:	add    ebx,eax
  41ce59:	add    BYTE PTR [eax],al
  41ce5b:	add    BYTE PTR [ebx*8+0x820041],bl
  41ce62:	ret    0x9803
  41ce65:	add    BYTE PTR [eax],al
  41ce67:	add    BYTE PTR [eax-0x7dffbe23],bh
  41ce6d:	add    dl,al
  41ce6f:	add    ebx,DWORD PTR [eax+0x1c000000]
  41ce75:	fld    QWORD PTR [ecx+0x0]
  41ce78:	add    BYTE PTR [eax],0xc2
  41ce7b:	add    edi,DWORD PTR [eax-0x68000000]
  41ce81:	fld    QWORD PTR [ecx+0x0]
  41ce84:	add    BYTE PTR [eax],0xc2
  41ce87:	add    edi,DWORD PTR [eax+0x10000000]
  41ce8d:	fld    QWORD PTR [ecx+0x0]
  41ce90:	add    DWORD PTR [eax],0xffffffc2
  41ce93:	add    BYTE PTR [eax+0x0],bh
  41ce96:	add    BYTE PTR [eax],al
  41ce98:	sub    dh,bl
  41ce9a:	inc    ecx
  41ce9b:	add    BYTE PTR [ebx+0x7800c200],al
  41cea1:	add    BYTE PTR [eax],al
  41cea3:	add    BYTE PTR [eax],dl
  41cea5:	fld    QWORD PTR [ecx+0x0]
  41cea8:	add    DWORD PTR [eax],0xffffffc2
  41ceab:	add    BYTE PTR [eax+0x0],bl
  41ceae:	add    BYTE PTR [eax],al
  41ceb0:	or     al,0xde
  41ceb2:	inc    ecx
  41ceb3:	add    BYTE PTR [ebx+0x5800c200],al
  41ceb9:	add    BYTE PTR [eax],al
  41cebb:	add    BYTE PTR [eax],cl
  41cebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cebe:	add    al,BYTE PTR [edx]
  41cec0:	add    al,0xa6
  41cec2:	add    al,BYTE PTR [edx]
  41cec4:	add    ah,BYTE PTR [esi-0x59fefdfe]
  41ceca:	add    al,BYTE PTR [edx]
  41cecc:	add    BYTE PTR [esi-0x22effdfe],ah
  41ced2:	inc    ecx
  41ced3:	add    BYTE PTR [ebx+0x1800c200],al
  41ced9:	add    BYTE PTR [eax],al
  41cedb:	add    BYTE PTR [ebp+ebx*8+0x830041],ch
  41cee2:	ret    0x1800
  41cee5:	add    BYTE PTR [eax],al
  41cee7:	add    BYTE PTR [eax],dl
  41cee9:	fld    QWORD PTR [ecx+0x0]
  41ceec:	add    DWORD PTR [eax],0xffffffc2
  41ceef:	add    BYTE PTR [eax],bh
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [ebp+ebx*8+0x830041],cl
  41cefa:	ret    0x3800
  41cefd:	add    BYTE PTR [eax],al
  41ceff:	add    BYTE PTR [ebx*8+0x820041],bl
  41cf06:	ret    0xf807
  41cf09:	add    BYTE PTR [eax],al
  41cf0b:	add    BYTE PTR [esi+ebx*8],dh
  41cf0e:	inc    ecx
  41cf0f:	add    BYTE PTR [edx-0x7f83e00],al
  41cf15:	add    BYTE PTR [eax],al
  41cf17:	add    BYTE PTR [ebx*8+0x820041],bl
  41cf1e:	ret    0xd807
  41cf21:	add    BYTE PTR [eax],al
  41cf23:	add    BYTE PTR [eax],bl
  41cf25:	fiadd  WORD PTR [ecx+0x0]
  41cf28:	add    BYTE PTR [eax],0xc2
  41cf2b:	pop    es
  41cf2c:	fadd   DWORD PTR [eax]
  41cf2e:	add    BYTE PTR [eax],al
  41cf30:	sbb    al,0xdd
  41cf32:	inc    ecx
  41cf33:	add    BYTE PTR [edx-0x67f83e00],al
  41cf39:	add    BYTE PTR [eax],al
  41cf3b:	add    BYTE PTR [eax-0x7dffbe23],bh
  41cf41:	add    dl,al
  41cf43:	pop    es
  41cf44:	cwde   
  41cf45:	add    BYTE PTR [eax],al
  41cf47:	add    BYTE PTR [ebx*8+0x820041],bl
  41cf4e:	ret    0xb807
  41cf51:	add    BYTE PTR [eax],al
  41cf53:	add    BYTE PTR [eax-0x7dffbe23],bl
  41cf59:	add    dl,al
  41cf5b:	pop    es
  41cf5c:	mov    eax,0x1c000000
  41cf61:	fld    QWORD PTR [ecx+0x0]
  41cf64:	add    BYTE PTR [eax],0xc2
  41cf67:	add    eax,0xf8
  41cf6c:	xor    al,0xde
  41cf6e:	inc    ecx
  41cf6f:	add    BYTE PTR [edx-0x7fa3e00],al
  41cf75:	add    BYTE PTR [eax],al
  41cf77:	add    BYTE PTR [ebx*8+0x820041],bl
  41cf7e:	ret    0xd805
  41cf81:	add    BYTE PTR [eax],al
  41cf83:	add    BYTE PTR [eax],bl
  41cf85:	fiadd  WORD PTR [ecx+0x0]
  41cf88:	add    BYTE PTR [eax],0xc2
  41cf8b:	add    eax,0xd8
  41cf90:	sbb    al,0xdd
  41cf92:	inc    ecx
  41cf93:	add    BYTE PTR [edx-0x67fa3e00],al
  41cf99:	add    BYTE PTR [eax],al
  41cf9b:	add    BYTE PTR [eax-0x7dffbe23],bh
  41cfa1:	add    dl,al
  41cfa3:	add    eax,0x98
  41cfa8:	sbb    al,0xdd
  41cfaa:	inc    ecx
  41cfab:	add    BYTE PTR [edx-0x47fa3e00],al
  41cfb1:	add    BYTE PTR [eax],al
  41cfb3:	add    BYTE PTR [eax-0x7dffbe23],bl
  41cfb9:	add    dl,al
  41cfbb:	add    eax,0xb8
  41cfc0:	sbb    al,0xdd
  41cfc2:	inc    ecx
  41cfc3:	add    BYTE PTR [edx-0x7f93e00],al
  41cfc9:	add    BYTE PTR [eax],al
  41cfcb:	add    BYTE PTR [esi+ebx*8],dh
  41cfce:	inc    ecx
  41cfcf:	add    BYTE PTR [edx-0x7f93e00],al
  41cfd5:	add    BYTE PTR [eax],al
  41cfd7:	add    BYTE PTR [ebx*8+0x820041],bl
  41cfde:	ret    0xd806
  41cfe1:	add    BYTE PTR [eax],al
  41cfe3:	add    BYTE PTR [eax],bl
  41cfe5:	fiadd  WORD PTR [ecx+0x0]
  41cfe8:	add    BYTE PTR [eax],0xc2
  41cfeb:	push   es
  41cfec:	fadd   DWORD PTR [eax]
  41cfee:	add    BYTE PTR [eax],al
  41cff0:	sbb    al,0xdd
  41cff2:	inc    ecx
  41cff3:	add    BYTE PTR [edx-0x67f93e00],al
  41cff9:	add    BYTE PTR [eax],al
  41cffb:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d001:	add    dl,al
  41d003:	push   es
  41d004:	cwde   
  41d005:	add    BYTE PTR [eax],al
  41d007:	add    BYTE PTR [ebx*8+0x820041],bl
  41d00e:	ret    0xb806
  41d011:	add    BYTE PTR [eax],al
  41d013:	add    BYTE PTR [eax-0x7dffbe23],bl
  41d019:	add    dl,al
  41d01b:	push   es
  41d01c:	mov    eax,0x1c000000
  41d021:	fld    QWORD PTR [ecx+0x0]
  41d024:	add    BYTE PTR [eax],0xc2
  41d027:	add    al,0xf8
  41d029:	add    BYTE PTR [eax],al
  41d02b:	add    BYTE PTR [esi+ebx*8],dh
  41d02e:	inc    ecx
  41d02f:	add    BYTE PTR [edx-0x7fb3e00],al
  41d035:	add    BYTE PTR [eax],al
  41d037:	add    BYTE PTR [ebx*8+0x820041],bl
  41d03e:	ret    0xd804
  41d041:	add    BYTE PTR [eax],al
  41d043:	add    BYTE PTR [eax],bl
  41d045:	fiadd  WORD PTR [ecx+0x0]
  41d048:	add    BYTE PTR [eax],0xc2
  41d04b:	add    al,0xd8
  41d04d:	add    BYTE PTR [eax],al
  41d04f:	add    BYTE PTR [ebx*8+0x820041],bl
  41d056:	ret    0x9804
  41d059:	add    BYTE PTR [eax],al
  41d05b:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d061:	add    dl,al
  41d063:	add    al,0x98
  41d065:	add    BYTE PTR [eax],al
  41d067:	add    BYTE PTR [ebx*8+0x820041],bl
  41d06e:	ret    0xb804
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [eax-0x7dffbe23],bl
  41d079:	add    dl,al
  41d07b:	add    al,0xb8
  41d07d:	add    BYTE PTR [eax],al
  41d07f:	add    BYTE PTR [ebx*8+0x820041],bl
  41d086:	ret    0xf801
  41d089:	add    BYTE PTR [eax],al
  41d08b:	add    BYTE PTR [esi+ebx*8],dh
  41d08e:	inc    ecx
  41d08f:	add    BYTE PTR [edx-0x7fe3e00],al
  41d095:	add    BYTE PTR [eax],al
  41d097:	add    BYTE PTR [ebx*8+0x820041],bl
  41d09e:	ret    0xd801
  41d0a1:	add    BYTE PTR [eax],al
  41d0a3:	add    BYTE PTR [eax],bl
  41d0a5:	fiadd  WORD PTR [ecx+0x0]
  41d0a8:	add    BYTE PTR [eax],0xc2
  41d0ab:	add    eax,ebx
  41d0ad:	add    BYTE PTR [eax],al
  41d0af:	add    BYTE PTR [ebx*8+0x820041],bl
  41d0b6:	ret    0x9801
  41d0b9:	add    BYTE PTR [eax],al
  41d0bb:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d0c1:	add    dl,al
  41d0c3:	add    DWORD PTR [eax+0x1c000000],ebx
  41d0c9:	fld    QWORD PTR [ecx+0x0]
  41d0cc:	add    BYTE PTR [eax],0xc2
  41d0cf:	add    DWORD PTR [eax-0x68000000],edi
  41d0d5:	fld    QWORD PTR [ecx+0x0]
  41d0d8:	add    BYTE PTR [eax],0xc2
  41d0db:	add    DWORD PTR [eax+0x1c000000],edi
  41d0e1:	fld    QWORD PTR [ecx+0x0]
  41d0e4:	add    BYTE PTR [eax],0xc2
  41d0e7:	add    bh,al
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [esi+ebx*8],dh
  41d0ee:	inc    ecx
  41d0ef:	add    BYTE PTR [edx-0x7fd3e00],al
  41d0f5:	add    BYTE PTR [eax],al
  41d0f7:	add    BYTE PTR [ebx*8+0x820041],bl
  41d0fe:	ret    0xd802
  41d101:	add    BYTE PTR [eax],al
  41d103:	add    BYTE PTR [eax],bl
  41d105:	fiadd  WORD PTR [ecx+0x0]
  41d108:	add    BYTE PTR [eax],0xc2
  41d10b:	add    bl,al
  41d10d:	add    BYTE PTR [eax],al
  41d10f:	add    BYTE PTR [ebx*8+0x820041],bl
  41d116:	ret    0x9802
  41d119:	add    BYTE PTR [eax],al
  41d11b:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d121:	add    dl,al
  41d123:	add    bl,BYTE PTR [eax+0x1c000000]
  41d129:	fld    QWORD PTR [ecx+0x0]
  41d12c:	add    BYTE PTR [eax],0xc2
  41d12f:	add    bh,BYTE PTR [eax-0x68000000]
  41d135:	fld    QWORD PTR [ecx+0x0]
  41d138:	add    BYTE PTR [eax],0xc2
  41d13b:	add    bh,BYTE PTR [eax+0x1c000000]
  41d141:	fld    QWORD PTR [ecx+0x0]
  41d144:	add    BYTE PTR [eax],0xc2
  41d147:	add    al,bh
  41d149:	add    BYTE PTR [eax],al
  41d14b:	add    BYTE PTR [esi+ebx*8],dh
  41d14e:	inc    ecx
  41d14f:	add    BYTE PTR [edx-0x7ff3e00],al
  41d155:	add    BYTE PTR [eax],al
  41d157:	add    BYTE PTR [ebx*8+0x820041],bl
  41d15e:	ret    0xd800
  41d161:	add    BYTE PTR [eax],al
  41d163:	add    BYTE PTR [eax],bl
  41d165:	fiadd  WORD PTR [ecx+0x0]
  41d168:	add    BYTE PTR [eax],0xc2
  41d16b:	add    al,bl
  41d16d:	add    BYTE PTR [eax],al
  41d16f:	add    BYTE PTR [ebx*8+0x820041],bl
  41d176:	ret    0x9800
  41d179:	add    BYTE PTR [eax],al
  41d17b:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d181:	add    dl,al
  41d183:	add    BYTE PTR [eax+0x1c000000],bl
  41d189:	fld    QWORD PTR [ecx+0x0]
  41d18c:	add    BYTE PTR [eax],0xc2
  41d18f:	add    BYTE PTR [eax-0x68000000],bh
  41d195:	fld    QWORD PTR [ecx+0x0]
  41d198:	add    BYTE PTR [eax],0xc2
  41d19b:	add    BYTE PTR [eax+0x28000000],bh
  41d1a1:	in     al,0x41
  41d1a3:	add    BYTE PTR [edx],al
  41d1a5:	add    BYTE PTR [eax+eax*1],bh
  41d1a8:	sbb    BYTE PTR [eax],al
  41d1aa:	add    BYTE PTR [eax],al
  41d1ac:	fs loope 0x41d1f0
  41d1af:	add    BYTE PTR [edx+0x0],bh
  41d1b2:	add    BYTE PTR [eax],0x18
  41d1b5:	add    BYTE PTR [eax],al
  41d1b7:	add    BYTE PTR [ecx+eiz*8],bh
  41d1ba:	inc    ecx
  41d1bb:	add    BYTE PTR [edx+0x0],bh
  41d1be:	add    DWORD PTR [eax],0x19
  41d1c1:	add    BYTE PTR [eax],al
  41d1c3:	add    BYTE PTR [esp+eiz*8],al
  41d1c6:	inc    ecx
  41d1c7:	add    BYTE PTR [edx],al
  41d1c9:	add    BYTE PTR ds:0x11900,bh
  41d1cf:	add    BYTE PTR [ecx+eiz*8],ch
  41d1d2:	inc    ecx
  41d1d3:	add    BYTE PTR [edx+0x0],bh
  41d1d6:	add    DWORD PTR [eax],0x119
  41d1dc:	xchg   esp,eax
  41d1dd:	loopne 0x41d220
  41d1df:	add    BYTE PTR [edx],al
  41d1e1:	add    BYTE PTR [edx],bh
  41d1e3:	add    BYTE PTR [eax],bl
  41d1e5:	add    DWORD PTR [eax],eax
  41d1e7:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41d1eb:	add    BYTE PTR [edx],al
  41d1ed:	add    BYTE PTR [eax],bh
  41d1ef:	add    BYTE PTR [eax],bl
  41d1f1:	add    DWORD PTR [eax],eax
  41d1f3:	add    BYTE PTR [eax-0x20],ah
  41d1f6:	inc    ecx
  41d1f7:	add    BYTE PTR [edx],al
  41d1f9:	add    BYTE PTR [ebx],bh
  41d1fb:	add    BYTE PTR [ecx],bl
  41d1fd:	add    DWORD PTR [eax],eax
  41d1ff:	add    BYTE PTR [eax+0x20041e1],dl
  41d205:	add    BYTE PTR [ecx],bh
  41d207:	add    BYTE PTR [edx],bl
  41d209:	add    DWORD PTR [eax],eax
  41d20b:	add    ah,bl
  41d20d:	loop   0x41d250
  41d20f:	add    BYTE PTR [edx+0x0],bh
  41d212:	add    BYTE PTR [eax],0x18
  41d215:	add    BYTE PTR [eax],al
  41d217:	add    ah,dl
  41d219:	loop   0x41d25c
  41d21b:	add    BYTE PTR [edx+0x0],bh
  41d21e:	add    DWORD PTR [eax],0x11c
  41d224:	int3   
  41d225:	loop   0x41d268
  41d227:	add    BYTE PTR [edx+0x0],bh
  41d22a:	add    DWORD PTR [eax],0x11d
  41d230:	pusha  
  41d231:	loopne 0x41d274
  41d233:	add    BYTE PTR [edx+0x19004800],al
  41d239:	add    DWORD PTR [eax],eax
  41d23b:	add    BYTE PTR [eax-0x20],ah
  41d23e:	inc    ecx
  41d23f:	add    BYTE PTR [edx+0x19004b00],al
  41d245:	add    DWORD PTR [eax],eax
  41d247:	add    BYTE PTR [eax-0x20],ah
  41d24a:	inc    ecx
  41d24b:	add    BYTE PTR [edx+0x19004a00],al
  41d251:	add    DWORD PTR [eax],eax
  41d253:	add    BYTE PTR [eax-0x20],ah
  41d256:	inc    ecx
  41d257:	add    BYTE PTR [edx+0x19004000],al
  41d25d:	add    DWORD PTR [eax],eax
  41d25f:	add    BYTE PTR [eax-0x20],ah
  41d262:	inc    ecx
  41d263:	add    BYTE PTR [edx+0x19004500],al
  41d269:	add    DWORD PTR [eax],eax
  41d26b:	add    BYTE PTR [eax-0x20],ah
  41d26e:	inc    ecx
  41d26f:	add    BYTE PTR [edx+0x19004900],al
  41d275:	add    DWORD PTR [eax],eax
  41d277:	add    BYTE PTR [eax-0x20],ah
  41d27a:	inc    ecx
  41d27b:	add    BYTE PTR [edx+0x19004100],al
  41d281:	add    DWORD PTR [eax],eax
  41d283:	add    BYTE PTR [eax-0x20],ah
  41d286:	inc    ecx
  41d287:	add    BYTE PTR [edx+0x19004f00],al
  41d28d:	add    DWORD PTR [eax],eax
  41d28f:	add    BYTE PTR [eax-0x20],ah
  41d292:	inc    ecx
  41d293:	add    BYTE PTR [edx+0x19004d00],al
  41d299:	add    DWORD PTR [eax],eax
  41d29b:	add    BYTE PTR [eax-0x20],ah
  41d29e:	inc    ecx
  41d29f:	add    BYTE PTR [edx+0x19004c00],al
  41d2a5:	add    DWORD PTR [eax],eax
  41d2a7:	add    BYTE PTR [eax-0x20],ah
  41d2aa:	inc    ecx
  41d2ab:	add    BYTE PTR [edx+0x19004300],al
  41d2b1:	add    DWORD PTR [eax],eax
  41d2b3:	add    BYTE PTR [eax-0x20],ah
  41d2b6:	inc    ecx
  41d2b7:	add    BYTE PTR [edx+0x19004700],al
  41d2bd:	add    DWORD PTR [eax],eax
  41d2bf:	add    BYTE PTR [eax-0x20],ah
  41d2c2:	inc    ecx
  41d2c3:	add    BYTE PTR [edx+0x19004200],al
  41d2c9:	add    DWORD PTR [eax],eax
  41d2cb:	add    BYTE PTR [eax-0x20],ah
  41d2ce:	inc    ecx
  41d2cf:	add    BYTE PTR [edx+0x19004600],al
  41d2d5:	add    DWORD PTR [eax],eax
  41d2d7:	add    BYTE PTR [eax-0x20],ah
  41d2da:	inc    ecx
  41d2db:	add    BYTE PTR [edx+0x19004e00],al
  41d2e1:	add    DWORD PTR [eax],eax
  41d2e3:	add    BYTE PTR [eax-0x20],ah
  41d2e6:	inc    ecx
  41d2e7:	add    BYTE PTR [edx+0x19004400],al
  41d2ed:	add    DWORD PTR [eax],eax
  41d2ef:	add    BYTE PTR [ebx+eiz*8],al
  41d2f2:	inc    ecx
  41d2f3:	add    cl,bh
  41d2f5:	add    BYTE PTR [esi+0x1800],ch
  41d2fb:	add    BYTE PTR [eax],al
  41d2fd:	call   0x41d706
  41d302:	add    bh,bh
  41d304:	add    al,BYTE PTR [edx]
  41d306:	add    ebx,DWORD PTR [edx]
  41d308:	add    bh,bh
  41d30a:	or     BYTE PTR [ebx+eax*1],al
  41d30d:	sbb    al,BYTE PTR [eax]
  41d30f:	inc    DWORD PTR [edx+eax*1]
  41d312:	add    edi,DWORD PTR [ebx]
  41d314:	add    bh,bh
  41d316:	push   es
  41d317:	add    al,0x3
  41d319:	cmp    eax,DWORD PTR [eax]
  41d31b:	add    BYTE PTR [eax-0x7cffbe21],cl
  41d321:	cmp    ch,dh
  41d323:	add    BYTE PTR [eax],bl
  41d325:	or     BYTE PTR [eax],al
  41d327:	add    BYTE PTR [edi+ebx*8],dl
  41d32a:	inc    ecx
  41d32b:	add    BYTE PTR [ebx+0x1800f538],al
  41d331:	sub    BYTE PTR [eax],al
  41d333:	add    BYTE PTR [eax-0x7dffbe1f],dl
  41d339:	add    BYTE PTR [ebx+0x31a00],ch
  41d33f:	add    BYTE PTR [ecx+eiz*8],ah
  41d342:	inc    ecx
  41d343:	add    dl,bl
  41d345:	add    BYTE PTR [edx+0x21900],bh
  41d34b:	add    BYTE PTR [eax-0x7dffbe1f],dl
  41d351:	add    BYTE PTR [ebx+0x31a00],dh
  41d357:	add    BYTE PTR [ecx+eiz*8],ah
  41d35a:	inc    ecx
  41d35b:	add    dl,ch
  41d35d:	add    BYTE PTR [edx+0x21900],bh
  41d363:	add    BYTE PTR [eax-0x7dffbe1f],dl
  41d369:	add    BYTE PTR [ebx+0x31a00],bh
  41d36f:	add    BYTE PTR [ecx+eiz*8],ah
  41d372:	inc    ecx
  41d373:	add    dl,bh
  41d375:	add    BYTE PTR [edx+0x21900],bh
  41d37b:	add    BYTE PTR [eax-0x7dffbe1f],dl
  41d381:	add    BYTE PTR [ebx+0x11a00],ah
  41d387:	add    BYTE PTR [ecx+eiz*8],ah
  41d38a:	inc    ecx
  41d38b:	add    dl,cl
  41d38d:	add    BYTE PTR [edx+0x1900],bh
  41d393:	add    BYTE PTR [ebx+eiz*8+0x810041],al
  41d39a:	enter  0x1d00,0x0
  41d39e:	add    BYTE PTR [eax],al
  41d3a0:	pusha  
  41d3a1:	loopne 0x41d3e4
  41d3a3:	add    BYTE PTR [edx+0x1900bd00],al
  41d3a9:	add    DWORD PTR [eax],eax
  41d3ab:	add    BYTE PTR [eax-0x20],ah
  41d3ae:	inc    ecx
  41d3af:	add    BYTE PTR [edx+0x1900bc00],al
  41d3b5:	add    DWORD PTR [eax],eax
  41d3b7:	add    BYTE PTR [edi+ebx*8+0x389a0041],ch
  41d3be:	repz add BYTE PTR [eax],bl
  41d3c1:	or     BYTE PTR [eax],al
  41d3c3:	add    BYTE PTR [eax],bh
  41d3c5:	fild   WORD PTR [ecx+0x0]
  41d3c8:	call   0x28:0x1800f338
  41d3cf:	add    BYTE PTR [edi+ebx*8+0x38aa0041],ch
  41d3d6:	repz add BYTE PTR [eax],bl
  41d3d9:	or     BYTE PTR [eax],al
  41d3db:	add    BYTE PTR [eax],bh
  41d3dd:	fild   WORD PTR [ecx+0x0]
  41d3e0:	stos   BYTE PTR es:[edi],al
  41d3e1:	cmp    bl,dh
  41d3e3:	add    BYTE PTR [eax],bl
  41d3e5:	sub    BYTE PTR [eax],al
  41d3e7:	add    BYTE PTR [edi+ebx*8-0x615ffbf],ch
  41d3ee:	add    DWORD PTR [eax],eax
  41d3f0:	sbb    BYTE PTR [eax],cl
  41d3f2:	add    BYTE PTR [eax],al
  41d3f4:	cmp    bh,bl
  41d3f6:	inc    ecx
  41d3f7:	add    dl,ch
  41d3f9:	stc    
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	sbb    BYTE PTR [eax],ch
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	lods   al,BYTE PTR ds:[esi]
  41d401:	fild   WORD PTR [ecx+0x0]
  41d404:	mov    edx,0x1800f338
  41d409:	or     BYTE PTR [eax],al
  41d40b:	add    BYTE PTR [eax],bh
  41d40d:	fild   WORD PTR [ecx+0x0]
  41d410:	mov    edx,0x1800f338
  41d415:	sub    BYTE PTR [eax],al
  41d417:	add    BYTE PTR [edi+ebx*8-0x655ffbf],ch
  41d41e:	add    DWORD PTR [eax],eax
  41d420:	sbb    BYTE PTR [eax],cl
  41d422:	add    BYTE PTR [eax],al
  41d424:	cmp    bh,bl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [edx+0x180001f9],ch
  41d42d:	sub    BYTE PTR [eax],al
  41d42f:	add    BYTE PTR [edi+ebx*8-0x645ffbf],ch
  41d436:	add    DWORD PTR [eax],eax
  41d438:	sbb    BYTE PTR [eax],cl
  41d43a:	add    BYTE PTR [eax],al
  41d43c:	cmp    bh,bl
  41d43e:	inc    ecx
  41d43f:	add    BYTE PTR [edx+0x180001f9],bh
  41d445:	sub    BYTE PTR [eax],al
  41d447:	add    BYTE PTR [edi+ebx*8-0x665ffbf],ch
  41d44e:	add    al,BYTE PTR [eax]
  41d450:	sbb    BYTE PTR [eax],cl
  41d452:	add    BYTE PTR [eax],al
  41d454:	cmp    bh,bl
  41d456:	inc    ecx
  41d457:	add    BYTE PTR [edx+0x180002f9],bl
  41d45d:	sub    BYTE PTR [eax],al
  41d45f:	add    BYTE PTR [edi+ebx*8-0x625ffbf],ch
  41d466:	add    DWORD PTR [eax],eax
  41d468:	sbb    BYTE PTR [eax],cl
  41d46a:	add    BYTE PTR [eax],al
  41d46c:	cmp    bh,bl
  41d46e:	inc    ecx
  41d46f:	add    dl,bl
  41d471:	stc    
  41d472:	add    DWORD PTR [eax],eax
  41d474:	sbb    BYTE PTR [eax],ch
  41d476:	add    BYTE PTR [eax],al
  41d478:	lods   al,BYTE PTR ds:[esi]
  41d479:	fild   WORD PTR [ecx+0x0]
  41d47c:	jmp    0x8:0x180002f9
  41d483:	add    BYTE PTR [eax],bh
  41d485:	fild   WORD PTR [ecx+0x0]
  41d488:	jmp    0x28:0x180002f9
  41d48f:	add    BYTE PTR [edi+ebx*8-0x665ffbf],ch
  41d496:	add    DWORD PTR [eax],eax
  41d498:	sbb    BYTE PTR [eax],cl
  41d49a:	add    BYTE PTR [eax],al
  41d49c:	cmp    bh,bl
  41d49e:	inc    ecx
  41d49f:	add    BYTE PTR [edx+0x180001f9],bl
  41d4a5:	sub    BYTE PTR [eax],al
  41d4a7:	add    ah,ch
  41d4a9:	fadd   QWORD PTR [ecx+0x0]
  41d4ac:	cmp    DWORD PTR [eax],0x14
  41d4af:	add    BYTE PTR [eax],bh
  41d4b1:	add    BYTE PTR [eax],al
  41d4b3:	add    BYTE PTR [eax-0x7cffbe23],ah
  41d4b9:	cmp    BYTE PTR [eax+eax*1],dl
  41d4bc:	cmp    BYTE PTR [eax],al
  41d4be:	add    BYTE PTR [eax],al
  41d4c0:	in     al,dx
  41d4c1:	fadd   QWORD PTR [ecx+0x0]
  41d4c4:	cmp    DWORD PTR [eax],0x15
  41d4c7:	add    BYTE PTR [eax],bh
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    BYTE PTR [eax-0x7cffbe23],al
  41d4d1:	cmp    BYTE PTR ds:0x3800,dl
  41d4d7:	add    BYTE PTR [eax],dl
  41d4d9:	fld    QWORD PTR [ecx+0x0]
  41d4dc:	cmp    DWORD PTR [edx],0xc
  41d4df:	add    BYTE PTR [eax],bh
  41d4e1:	add    BYTE PTR [eax],al
  41d4e3:	add    BYTE PTR [ebp+ebx*8+0x3a830041],ch
  41d4ea:	or     al,0x0
  41d4ec:	cmp    BYTE PTR [eax],al
  41d4ee:	add    BYTE PTR [eax],al
  41d4f0:	adc    ch,bl
  41d4f2:	inc    ecx
  41d4f3:	add    BYTE PTR [ebx+0x38000d3a],al
  41d4f9:	add    BYTE PTR [eax],al
  41d4fb:	add    BYTE PTR [ebp+ebx*8+0x3a830041],cl
  41d502:	or     eax,0x3800
  41d507:	add    BYTE PTR [eax-0x7cffbe21],cl
  41d50d:	cmp    bh,dh
  41d50f:	add    BYTE PTR [eax],bl
  41d511:	or     BYTE PTR [eax],al
  41d513:	add    BYTE PTR [edi+ebx*8-0x57cffbf],dl
  41d51a:	adc    BYTE PTR [eax],al
  41d51c:	sbb    BYTE PTR [eax],cl
  41d51e:	add    BYTE PTR [eax],al
  41d520:	adc    al,0xdf
  41d522:	inc    ecx
  41d523:	add    BYTE PTR [ebx+0x1800f738],al
  41d529:	sub    BYTE PTR [eax],al
  41d52b:	add    BYTE PTR [eax],ah
  41d52d:	fild   WORD PTR [ecx+0x0]
  41d530:	cmp    edx,0x10
  41d533:	add    BYTE PTR [eax],bl
  41d535:	sub    BYTE PTR [eax],al
  41d537:	add    BYTE PTR [ebx*8+0x820041],bl
  41d53e:	push   esp
  41d53f:	add    BYTE PTR [eax],bl
  41d541:	add    BYTE PTR [eax],al
  41d543:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d549:	add    BYTE PTR [eax+eax*1+0x18],dl
  41d54d:	add    BYTE PTR [eax],al
  41d54f:	add    BYTE PTR [ebx*8+0x820041],bl
  41d556:	push   esp
  41d557:	add    BYTE PTR [eax],bh
  41d559:	add    BYTE PTR [eax],al
  41d55b:	add    BYTE PTR [eax-0x7dffbe23],bl
  41d561:	add    BYTE PTR [eax+eax*1+0x38],dl
  41d565:	add    BYTE PTR [eax],al
  41d567:	add    BYTE PTR [ebx*8+0x820041],bl
  41d56e:	push   ebp
  41d56f:	add    BYTE PTR [eax],bl
  41d571:	add    BYTE PTR [eax],al
  41d573:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d579:	add    BYTE PTR [ebp+0x0],dl
  41d57c:	sbb    BYTE PTR [eax],al
  41d57e:	add    BYTE PTR [eax],al
  41d580:	sbb    al,0xdd
  41d582:	inc    ecx
  41d583:	add    BYTE PTR [edx+0x38005500],al
  41d589:	add    BYTE PTR [eax],al
  41d58b:	add    BYTE PTR [eax-0x7dffbe23],bl
  41d591:	add    BYTE PTR [ebp+0x0],dl
  41d594:	cmp    BYTE PTR [eax],al
  41d596:	add    BYTE PTR [eax],al
  41d598:	je     0x41d579
  41d59a:	inc    ecx
  41d59b:	add    BYTE PTR [ebx+0x1800f238],al
  41d5a1:	or     BYTE PTR [eax],al
  41d5a3:	add    BYTE PTR [eax],al
  41d5a5:	fild   WORD PTR [ecx+0x0]
  41d5a8:	cmp    DWORD PTR [eax],0xfffffff2
  41d5ab:	add    BYTE PTR [eax],bl
  41d5ad:	sub    BYTE PTR [eax],al
  41d5af:	add    BYTE PTR [eax],ch
  41d5b1:	in     al,0x41
  41d5b3:	add    BYTE PTR [edx],al
  41d5b5:	add    BYTE PTR [eax+eax*1],ah
  41d5b8:	sbb    BYTE PTR [eax],al
  41d5ba:	add    BYTE PTR [eax],al
  41d5bc:	dec    eax
  41d5bd:	loope  0x41d600
  41d5bf:	add    BYTE PTR [edx+0x0],cl
  41d5c2:	add    DWORD PTR [eax],0x19
  41d5c5:	add    al,BYTE PTR [eax]
  41d5c7:	add    al,bh
  41d5c9:	loopne 0x41d60c
  41d5cb:	add    BYTE PTR [edx+0x0],cl
  41d5ce:	add    DWORD PTR [eax],0x19
  41d5d1:	add    al,BYTE PTR [eax]
  41d5d3:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41d5d7:	add    BYTE PTR [edx+0x0],cl
  41d5da:	add    BYTE PTR [eax],0x18
  41d5dd:	add    al,BYTE PTR [eax]
  41d5df:	add    BYTE PTR [esp+eiz*8],al
  41d5e2:	inc    ecx
  41d5e3:	add    BYTE PTR [edx],al
  41d5e5:	add    BYTE PTR ds:0x11900,ah
  41d5eb:	add    BYTE PTR [ecx+eiz*8],ch
  41d5ee:	inc    ecx
  41d5ef:	add    BYTE PTR [edx+0x0],cl
  41d5f2:	add    DWORD PTR [eax],0x319
  41d5f8:	call   0x4a4217dd
  41d5fd:	add    BYTE PTR [ecx+0x21900],al
  41d603:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  41d60a:	and    al,BYTE PTR [eax]
  41d60c:	sbb    BYTE PTR [ecx],al
  41d60e:	add    BYTE PTR [eax],al
  41d610:	push   esp
  41d611:	loope  0x41d654
  41d613:	add    BYTE PTR [edx],al
  41d615:	add    BYTE PTR [eax],ah
  41d617:	add    BYTE PTR [eax],bl
  41d619:	add    eax,DWORD PTR [eax]
  41d61b:	add    BYTE PTR [eax-0x20],ah
  41d61e:	inc    ecx
  41d61f:	add    BYTE PTR [edx],al
  41d621:	add    BYTE PTR [ebx],ah
  41d623:	add    BYTE PTR [ecx],bl
  41d625:	add    DWORD PTR [eax],eax
  41d627:	add    BYTE PTR [eax+0x20041e1],dl
  41d62d:	add    BYTE PTR [ecx],ah
  41d62f:	add    BYTE PTR [edx],bl
  41d631:	add    eax,DWORD PTR [eax]
  41d633:	add    ah,bl
  41d635:	loop   0x41d678
  41d637:	add    BYTE PTR [edx+0x0],cl
  41d63a:	add    BYTE PTR [eax],0x18
  41d63d:	add    al,BYTE PTR [eax]
  41d63f:	add    ah,dl
  41d641:	loop   0x41d684
  41d643:	add    BYTE PTR [edx+0x0],cl
  41d646:	add    DWORD PTR [eax],0x31c
  41d64c:	int3   
  41d64d:	loop   0x41d690
  41d64f:	add    BYTE PTR [edx+0x0],cl
  41d652:	add    DWORD PTR [eax],0x51d
  41d658:	adc    ch,bl
  41d65a:	inc    ecx
  41d65b:	add    BYTE PTR [ebx+0x3800df3a],al
  41d661:	add    BYTE PTR [eax],al
  41d663:	add    al,ah
  41d665:	fld    QWORD PTR [ecx+0x0]
  41d668:	cmp    DWORD PTR [edx],0xffffffdf
  41d66b:	add    BYTE PTR [eax],bh
  41d66d:	add    BYTE PTR [eax],al
  41d66f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41d676:	fild   DWORD PTR [eax]
  41d678:	cmp    BYTE PTR [eax],al
  41d67a:	add    BYTE PTR [eax],al
  41d67c:	in     al,dx
  41d67d:	fld    QWORD PTR [ecx+0x0]
  41d680:	cmp    BYTE PTR [eax],0xdb
  41d683:	add    BYTE PTR [eax],bh
  41d685:	add    BYTE PTR [eax],al
  41d687:	add    BYTE PTR [ebx*8+0x38820041],bl
  41d68e:	fld    QWORD PTR [eax]
  41d690:	cmp    BYTE PTR [eax],al
  41d692:	add    BYTE PTR [eax],al
  41d694:	in     al,dx
  41d695:	fld    QWORD PTR [ecx+0x0]
  41d698:	cmp    BYTE PTR [eax],0xdd
  41d69b:	add    BYTE PTR [eax],bh
  41d69d:	add    BYTE PTR [eax],al
  41d69f:	add    BYTE PTR [ebx*8+0x38820041],bl
  41d6a6:	fadd   QWORD PTR [eax]
  41d6a8:	cmp    BYTE PTR [eax],al
  41d6aa:	add    BYTE PTR [eax],al
  41d6ac:	in     al,dx
  41d6ad:	fld    QWORD PTR [ecx+0x0]
  41d6b0:	cmp    BYTE PTR [eax],0xdc
  41d6b3:	add    BYTE PTR [eax],bh
  41d6b5:	add    BYTE PTR [eax],al
  41d6b7:	add    BYTE PTR [ebx*8+0x38820041],bl
  41d6be:	fild   WORD PTR [eax]
  41d6c0:	cmp    BYTE PTR [eax],al
  41d6c2:	add    BYTE PTR [eax],al
  41d6c4:	in     al,dx
  41d6c5:	fld    QWORD PTR [ecx+0x0]
  41d6c8:	cmp    BYTE PTR [eax],0xdf
  41d6cb:	add    BYTE PTR [eax],bh
  41d6cd:	add    BYTE PTR [eax],al
  41d6cf:	add    BYTE PTR [ebx*8+0x38820041],bl
  41d6d6:	fiadd  WORD PTR [eax]
  41d6d8:	cmp    BYTE PTR [eax],al
  41d6da:	add    BYTE PTR [eax],al
  41d6dc:	in     al,dx
  41d6dd:	fld    QWORD PTR [ecx+0x0]
  41d6e0:	cmp    BYTE PTR [eax],0xde
  41d6e3:	add    BYTE PTR [eax],bh
  41d6e5:	add    BYTE PTR [eax],al
  41d6e7:	add    BYTE PTR [ebx*8+0x820041],bl
  41d6ee:	rol    BYTE PTR [eax],1
  41d6f0:	pop    eax
  41d6f1:	add    BYTE PTR [eax],al
  41d6f3:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d6f9:	add    al,dl
  41d6fb:	add    BYTE PTR [eax+0x0],bl
  41d6fe:	add    BYTE PTR [eax],al
  41d700:	sbb    al,0xdd
  41d702:	inc    ecx
  41d703:	add    BYTE PTR [edx+0x3800d000],al
  41d709:	add    BYTE PTR [eax],al
  41d70b:	add    BYTE PTR [eax-0x7dffbe23],bl
  41d711:	add    al,dl
  41d713:	add    BYTE PTR [eax],bh
  41d715:	add    BYTE PTR [eax],al
  41d717:	add    BYTE PTR [ebx*8+0x820041],bl
  41d71e:	pop    eax
  41d71f:	add    BYTE PTR [eax+0x0],bh
  41d722:	add    BYTE PTR [eax],al
  41d724:	xor    al,0xde
  41d726:	inc    ecx
  41d727:	add    BYTE PTR [edx+0x78005800],al
  41d72d:	add    BYTE PTR [eax],al
  41d72f:	add    BYTE PTR [ebx*8+0x820041],bl
  41d736:	pop    eax
  41d737:	add    BYTE PTR [eax+0x0],bl
  41d73a:	add    BYTE PTR [eax],al
  41d73c:	sbb    dh,bl
  41d73e:	inc    ecx
  41d73f:	add    BYTE PTR [edx+0x58005800],al
  41d745:	add    BYTE PTR [eax],al
  41d747:	add    BYTE PTR [ebx*8+0x820041],bl
  41d74e:	pop    eax
  41d74f:	add    BYTE PTR [eax],bl
  41d751:	add    BYTE PTR [eax],al
  41d753:	add    BYTE PTR [eax-0x7dffbe23],bh
  41d759:	add    BYTE PTR [eax+0x0],bl
  41d75c:	sbb    BYTE PTR [eax],al
  41d75e:	add    BYTE PTR [eax],al
  41d760:	sbb    al,0xdd
  41d762:	inc    ecx
  41d763:	add    BYTE PTR [edx+0x38005800],al
  41d769:	add    BYTE PTR [eax],al
  41d76b:	add    BYTE PTR [eax-0x7dffbe23],bl
  41d771:	add    BYTE PTR [eax+0x0],bl
  41d774:	cmp    BYTE PTR [eax],al
  41d776:	add    BYTE PTR [eax],al
  41d778:	sub    ah,ah
  41d77a:	inc    ecx
  41d77b:	add    BYTE PTR [edx],al
  41d77d:	add    BYTE PTR [eax+eax*1],al
  41d780:	sbb    BYTE PTR [eax],al
  41d782:	add    BYTE PTR [eax],al
  41d784:	dec    eax
  41d785:	loope  0x41d7c8
  41d787:	add    BYTE PTR [edx],cl
  41d789:	add    BYTE PTR [ebx+0x21900],al
  41d78f:	add    al,bh
  41d791:	loopne 0x41d7d4
  41d793:	add    BYTE PTR [edx],cl
  41d795:	add    BYTE PTR [ebx+0x21900],al
  41d79b:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41d79f:	add    BYTE PTR [edx],cl
  41d7a1:	add    BYTE PTR [eax+0x21800],al
  41d7a7:	add    BYTE PTR [esp+eiz*8],al
  41d7aa:	inc    ecx
  41d7ab:	add    BYTE PTR [edx],al
  41d7ad:	add    BYTE PTR ds:0x11900,al
  41d7b3:	add    BYTE PTR [ecx+eiz*8],ch
  41d7b6:	inc    ecx
  41d7b7:	add    BYTE PTR [edx],cl
  41d7b9:	add    BYTE PTR [ecx+0x31900],al
  41d7bf:	add    al,ch
  41d7c1:	loopne 0x41d804
  41d7c3:	add    BYTE PTR [edx],cl
  41d7c5:	add    BYTE PTR [ecx+0x21900],al
  41d7cb:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  41d7d2:	add    al,BYTE PTR [eax]
  41d7d4:	sbb    BYTE PTR [ecx],al
  41d7d6:	add    BYTE PTR [eax],al
  41d7d8:	push   esp
  41d7d9:	loope  0x41d81c
  41d7db:	add    BYTE PTR [edx],al
  41d7dd:	add    BYTE PTR [eax],al
  41d7df:	add    BYTE PTR [eax],bl
  41d7e1:	add    eax,DWORD PTR [eax]
  41d7e3:	add    BYTE PTR [eax-0x20],ah
  41d7e6:	inc    ecx
  41d7e7:	add    BYTE PTR [edx],al
  41d7e9:	add    BYTE PTR [ebx],al
  41d7eb:	add    BYTE PTR [ecx],bl
  41d7ed:	add    DWORD PTR [eax],eax
  41d7ef:	add    BYTE PTR [eax+0x20041e1],dl
  41d7f5:	add    BYTE PTR [ecx],al
  41d7f7:	add    BYTE PTR [edx],bl
  41d7f9:	add    eax,DWORD PTR [eax]
  41d7fb:	add    ah,bl
  41d7fd:	loop   0x41d840
  41d7ff:	add    BYTE PTR [edx],cl
  41d801:	add    BYTE PTR [eax+0x21800],al
  41d807:	add    ah,dl
  41d809:	loop   0x41d84c
  41d80b:	add    BYTE PTR [edx],cl
  41d80d:	add    BYTE PTR [ecx+0x31c00],al
  41d813:	add    ah,cl
  41d815:	loop   0x41d858
  41d817:	add    BYTE PTR [edx],cl
  41d819:	add    BYTE PTR [ecx+0x51d00],al
  41d81f:	add    BYTE PTR [eax],ch
  41d821:	in     al,0x41
  41d823:	add    BYTE PTR [edx],al
  41d825:	add    BYTE PTR [eax+eax*1],dl
  41d828:	sbb    BYTE PTR [eax],al
  41d82a:	add    BYTE PTR [eax],al
  41d82c:	dec    eax
  41d82d:	loope  0x41d870
  41d82f:	add    BYTE PTR [edx],ch
  41d831:	add    BYTE PTR [ebx+0x21900],al
  41d837:	add    al,bh
  41d839:	loopne 0x41d87c
  41d83b:	add    BYTE PTR [edx],ch
  41d83d:	add    BYTE PTR [ebx+0x21900],al
  41d843:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41d847:	add    BYTE PTR [edx],ch
  41d849:	add    BYTE PTR [eax+0x21800],al
  41d84f:	add    BYTE PTR [esp+eiz*8],al
  41d852:	inc    ecx
  41d853:	add    BYTE PTR [edx],al
  41d855:	add    BYTE PTR ds:0x11900,dl
  41d85b:	add    BYTE PTR [ecx+eiz*8],ch
  41d85e:	inc    ecx
  41d85f:	add    BYTE PTR [edx],ch
  41d861:	add    BYTE PTR [ecx+0x31900],al
  41d867:	add    al,ch
  41d869:	loopne 0x41d8ac
  41d86b:	add    BYTE PTR [edx],ch
  41d86d:	add    BYTE PTR [ecx+0x21900],al
  41d873:	add    BYTE PTR [eax+eiz*8+0x20041],dl
  41d87a:	adc    al,BYTE PTR [eax]
  41d87c:	sbb    BYTE PTR [ecx],al
  41d87e:	add    BYTE PTR [eax],al
  41d880:	push   esp
  41d881:	loope  0x41d8c4
  41d883:	add    BYTE PTR [edx],al
  41d885:	add    BYTE PTR [eax],dl
  41d887:	add    BYTE PTR [eax],bl
  41d889:	add    eax,DWORD PTR [eax]
  41d88b:	add    BYTE PTR [eax-0x20],ah
  41d88e:	inc    ecx
  41d88f:	add    BYTE PTR [edx],al
  41d891:	add    BYTE PTR [ebx],dl
  41d893:	add    BYTE PTR [ecx],bl
  41d895:	add    DWORD PTR [eax],eax
  41d897:	add    BYTE PTR [eax+0x20041e1],dl
  41d89d:	add    BYTE PTR [ecx],dl
  41d89f:	add    BYTE PTR [edx],bl
  41d8a1:	add    eax,DWORD PTR [eax]
  41d8a3:	add    ah,bl
  41d8a5:	loop   0x41d8e8
  41d8a7:	add    BYTE PTR [edx],ch
  41d8a9:	add    BYTE PTR [eax+0x21800],al
  41d8af:	add    ah,dl
  41d8b1:	loop   0x41d8f4
  41d8b3:	add    BYTE PTR [edx],ch
  41d8b5:	add    BYTE PTR [ecx+0x31c00],al
  41d8bb:	add    ah,cl
  41d8bd:	loop   0x41d900
  41d8bf:	add    BYTE PTR [edx],ch
  41d8c1:	add    BYTE PTR [ecx+0x51d00],al
  41d8c7:	add    BYTE PTR [edx],al
  41d8c9:	nop
  41d8ca:	or     eax,0xb00c00
  41d8cf:	or     al,0xe0
  41d8d1:	add    BYTE PTR [eax+edx*2],cl
  41d8d4:	add    BYTE PTR [edx],al
  41d8d6:	shl    BYTE PTR [eax+eax*1],0x40
  41d8da:	add    DWORD PTR [eax],eax
  41d8dc:	or     al,0xb0
  41d8de:	add    BYTE PTR [eax+eiz*8],cl
  41d8e1:	add    BYTE PTR [eax+edx*2],cl
  41d8e4:	add    BYTE PTR [edx],al
  41d8e6:	shl    BYTE PTR [esp+ecx*1],0xb0
  41d8ea:	add    BYTE PTR [eax+eiz*8],cl
  41d8ed:	add    BYTE PTR [eax+edx*2],cl
  41d8f0:	add    BYTE PTR [edx],al
  41d8f2:	rcr    BYTE PTR [esi],0x0
  41d8f5:	inc    eax
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	or     al,0xb0
  41d8fa:	add    BYTE PTR [eax+eiz*8],cl
  41d8fd:	add    BYTE PTR [eax+edx*2],cl
  41d900:	add    BYTE PTR [edx],al
  41d902:	rcr    BYTE PTR [esi],0xc
  41d905:	mov    al,0x0
  41d907:	or     al,0xe0
  41d909:	add    BYTE PTR [eax+edx*2],cl
  41d90c:	add    BYTE PTR [edx],al
  41d90e:	rcl    BYTE PTR [eax],0xc
  41d911:	mov    al,0x0
  41d913:	or     al,0xe0
  41d915:	add    BYTE PTR [eax+eax*8],cl
  41d918:	add    BYTE PTR [eax+edx*2],cl
  41d91b:	add    BYTE PTR [eax],al
  41d91d:	inc    eax
  41d91e:	add    DWORD PTR [eax],eax
  41d920:	or     al,0xb0
  41d922:	add    BYTE PTR [eax+eiz*8],cl
  41d925:	add    BYTE PTR [eax+eax*8],cl
  41d928:	add    BYTE PTR [eax+edx*2],cl
  41d92b:	add    BYTE PTR [eax+esi*4],cl
  41d92e:	add    BYTE PTR [eax+eiz*8],cl
  41d931:	add    BYTE PTR [eax+eax*8],cl
  41d934:	add    BYTE PTR [eax],al
  41d936:	push   eax
  41d937:	add    cl,BYTE PTR [eax+esi*4]
  41d93a:	add    BYTE PTR [eax+eiz*8],cl
  41d93d:	add    BYTE PTR [eax+eax*8],cl
  41d940:	add    BYTE PTR [eax],al
  41d942:	add    BYTE PTR [eax],al
  41d944:	or     al,0xb0
  41d946:	add    BYTE PTR [eax+eiz*8],cl
  41d949:	add    BYTE PTR [ebx],cl
  41d94b:	rol    BYTE PTR [eax],0x0
  41d94e:	push   eax
  41d94f:	add    cl,BYTE PTR [eax+esi*4]
  41d952:	add    BYTE PTR [eax+eiz*8],cl
  41d955:	add    BYTE PTR [ebx],cl
  41d957:	rol    BYTE PTR [eax],0x0
  41d95a:	add    BYTE PTR [eax],al
  41d95c:	or     al,0xb0
  41d95e:	add    BYTE PTR [eax+eiz*8],cl
  41d961:	add    BYTE PTR [edx],al
  41d963:	shr    BYTE PTR [eax],0x0
  41d966:	push   eax
  41d967:	add    cl,BYTE PTR [eax+esi*4]
  41d96a:	add    BYTE PTR [eax+eiz*8],cl
  41d96d:	add    BYTE PTR [edx],al
  41d96f:	shl    BYTE PTR [esp+ecx*1],0x50
  41d973:	add    BYTE PTR [eax],al
  41d975:	inc    eax
  41d976:	add    DWORD PTR [eax],eax
  41d978:	or     al,0xb0
  41d97a:	add    BYTE PTR [eax+eiz*8],cl
  41d97d:	add    BYTE PTR [edx],al
  41d97f:	shl    BYTE PTR [esp+ecx*1],0x50
  41d983:	add    BYTE PTR [eax+esi*4],cl
  41d986:	add    BYTE PTR [eax+eiz*8],cl
  41d989:	add    BYTE PTR [edx],al
  41d98b:	shl    BYTE PTR [eax+eax*1],0x50
  41d98f:	add    cl,BYTE PTR [eax+esi*4]
  41d992:	add    BYTE PTR [eax+eiz*8],cl
  41d995:	add    BYTE PTR [edx],al
  41d997:	shl    BYTE PTR [eax+eax*1],0x0
  41d99b:	add    BYTE PTR [eax+esi*4],cl
  41d99e:	add    BYTE PTR [eax+eiz*8],cl
  41d9a1:	add    BYTE PTR [edx],al
  41d9a3:	rcr    BYTE PTR [esi],0xc
  41d9a6:	push   eax
  41d9a7:	add    BYTE PTR [eax],al
  41d9a9:	inc    eax
  41d9aa:	add    DWORD PTR [eax],eax
  41d9ac:	or     al,0xb0
  41d9ae:	add    BYTE PTR [eax+eiz*8],cl
  41d9b1:	add    BYTE PTR [edx],al
  41d9b3:	rcr    BYTE PTR [esi],0xc
  41d9b6:	push   eax
  41d9b7:	add    BYTE PTR [eax+esi*4],cl
  41d9ba:	add    BYTE PTR [eax+eiz*8],cl
  41d9bd:	add    BYTE PTR [edx],al
  41d9bf:	rcr    BYTE PTR [esi],0x0
  41d9c2:	push   eax
  41d9c3:	add    cl,BYTE PTR [eax+esi*4]
  41d9c6:	add    BYTE PTR [eax+eiz*8],cl
  41d9c9:	add    BYTE PTR [edx],al
  41d9cb:	rcr    BYTE PTR [esi],0x0
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	or     al,0xb0
  41d9d2:	add    BYTE PTR [eax+eiz*8],cl
  41d9d5:	add    BYTE PTR [edx],al
  41d9d7:	rcr    BYTE PTR [eax],0x0
  41d9da:	push   eax
  41d9db:	add    cl,BYTE PTR [eax+esi*4]
  41d9de:	add    BYTE PTR [eax+eiz*8],cl
  41d9e1:	add    BYTE PTR [edx],al
  41d9e3:	rcr    BYTE PTR [eax],0x0
  41d9e6:	add    BYTE PTR [eax],al
  41d9e8:	or     al,0xb0
  41d9ea:	add    BYTE PTR [eax+eiz*8],cl
  41d9ed:	add    BYTE PTR [edx],al
  41d9ef:	rcl    BYTE PTR [eax],0xc
  41d9f2:	push   eax
  41d9f3:	add    BYTE PTR [eax+esi*4],cl
  41d9f6:	add    BYTE PTR [eax+eiz*8],cl
  41d9f9:	add    BYTE PTR [edx],al
  41d9fb:	rcl    BYTE PTR [eax],0x0
  41d9fe:	push   eax
  41d9ff:	add    cl,BYTE PTR [eax+esi*4]
  41da02:	add    BYTE PTR [eax+eiz*8],cl
  41da05:	add    BYTE PTR [edx],al
  41da07:	rcl    BYTE PTR [eax],0x0
  41da0a:	add    BYTE PTR [eax],al
  41da0c:	or     al,0xb0
  41da0e:	add    BYTE PTR [eax+eiz*8],cl
  41da11:	add    BYTE PTR [edx],al
  41da13:	shl    BYTE PTR [ebx],0x0
  41da16:	add    BYTE PTR [eax],al
  41da18:	or     al,0xb0
  41da1a:	add    BYTE PTR [eax+eiz*8],cl
  41da1d:	add    BYTE PTR [edx],al
  41da1f:	rcr    BYTE PTR ds:0xc025000,0xb0
  41da26:	add    BYTE PTR [eax+eiz*8],cl
  41da29:	add    BYTE PTR [edx],al
  41da2b:	shl    BYTE PTR [edi],0x0
  41da2e:	push   eax
  41da2f:	add    cl,BYTE PTR [eax+esi*4]
  41da32:	add    BYTE PTR [eax+eiz*8],cl
  41da35:	add    BYTE PTR [edx],al
  41da37:	rol    BYTE PTR [eax],0x0
  41da3a:	add    BYTE PTR [eax],al
  41da3c:	or     al,0xe0
  41da3e:	add    BYTE PTR [eax+eax*8],cl
  41da41:	add    BYTE PTR [eax],al
  41da43:	push   eax
  41da44:	add    al,BYTE PTR [eax]
  41da46:	add    BYTE PTR [eax],al
  41da48:	or     al,0xb0
  41da4a:	add    BYTE PTR [eax+eax*8],cl
  41da4d:	add    BYTE PTR [eax],al
  41da4f:	push   eax
  41da50:	add    al,BYTE PTR [eax]
  41da52:	add    BYTE PTR [eax],al
  41da54:	or     al,0xb0
  41da56:	add    BYTE PTR [eax+eax*8],cl
  41da59:	add    BYTE PTR [eax],al
  41da5b:	add    BYTE PTR [eax+esi*4],cl
  41da5e:	add    BYTE PTR [ebx],cl
  41da60:	rol    BYTE PTR [eax],0x0
  41da63:	add    BYTE PTR [eax+esi*4],cl
  41da66:	add    BYTE PTR [eax],dl
  41da68:	rol    BYTE PTR [eax],0xc
  41da6b:	loopne 0x41da6d
  41da6d:	add    BYTE PTR [eax],al
  41da6f:	add    BYTE PTR [eax+esi*4],cl
  41da72:	add    BYTE PTR [edi],cl
  41da74:	rol    BYTE PTR [eax],0xc
  41da77:	loopne 0x41da79
  41da79:	add    BYTE PTR [eax],al
  41da7b:	add    BYTE PTR [eax+esi*4],cl
  41da7e:	add    BYTE PTR [edx],al
  41da80:	shl    BYTE PTR [eax+eax*1],0x50
  41da84:	add    al,BYTE PTR [eax]
  41da86:	add    BYTE PTR [eax],al
  41da88:	or     al,0xb0
  41da8a:	add    BYTE PTR [edx],al
  41da8c:	shl    BYTE PTR [eax+eax*1],0x0
  41da90:	or     al,0xb0
  41da92:	add    BYTE PTR [edx],al
  41da94:	rcr    BYTE PTR [esi],0x0
  41da97:	push   eax
  41da98:	add    al,BYTE PTR [eax]
  41da9a:	add    BYTE PTR [eax],al
  41da9c:	or     al,0xb0
  41da9e:	add    BYTE PTR [edx],al
  41daa0:	rcr    BYTE PTR [esi],0x0
  41daa3:	add    BYTE PTR [eax+esi*4],cl
  41daa6:	add    BYTE PTR [edx],al
  41daa8:	rcr    BYTE PTR [eax],0x0
  41daab:	push   eax
  41daac:	add    al,BYTE PTR [eax]
  41daae:	add    BYTE PTR [eax],al
  41dab0:	or     al,0xb0
  41dab2:	add    BYTE PTR [edx],al
  41dab4:	rcr    BYTE PTR [eax],0x0
  41dab7:	add    BYTE PTR [eax+esi*4],cl
  41daba:	add    BYTE PTR [edx],al
  41dabc:	rcl    BYTE PTR [eax],0x0
  41dabf:	add    BYTE PTR [eax+esi*4],cl
  41dac2:	add    BYTE PTR [edx],al
  41dac4:	shr    BYTE PTR [ecx],0x0
  41dac7:	add    BYTE PTR [eax+esi*4],cl
  41daca:	add    BYTE PTR [edx],al
  41dacc:	shl    BYTE PTR [edi],0x0
  41dacf:	add    BYTE PTR [eax+esi*4],cl
  41dad2:	add    BYTE PTR [edx],al
  41dad4:	shl    BYTE PTR [ecx],0x0
  41dad7:	add    BYTE PTR [eax+esi*4],cl
  41dada:	add    BYTE PTR [edx],al
  41dadc:	rcr    BYTE PTR [ecx],0x0
  41dadf:	add    BYTE PTR [eax+esi*4],cl
  41dae2:	add    BYTE PTR [edx],al
  41dae4:	rcl    BYTE PTR [ecx],0x0
  41dae7:	add    BYTE PTR [eax+esi*4],cl
  41daea:	add    BYTE PTR [edx],al
  41daec:	ror    BYTE PTR ds:0xb00b0000,0x0
  41daf3:	or     esp,eax
  41daf5:	add    BYTE PTR [ebx],cl
  41daf7:	push   eax
  41daf8:	add    BYTE PTR [edx],al
  41dafa:	shl    BYTE PTR [ebx],0x0
  41dafd:	inc    eax
  41dafe:	add    DWORD PTR [eax],eax
  41db00:	or     esi,DWORD PTR [eax+0xe00b00]
  41db06:	or     edx,DWORD PTR [eax+0x0]
  41db09:	add    al,al
  41db0b:	and    ecx,DWORD PTR [ebx]
  41db0d:	mov    al,0x0
  41db0f:	or     esp,eax
  41db11:	add    BYTE PTR [ebx],cl
  41db13:	push   eax
  41db14:	add    BYTE PTR [edx],al
  41db16:	rcr    BYTE PTR ds:0x14000,0xb
  41db1d:	mov    al,0x0
  41db1f:	or     esp,eax
  41db21:	add    BYTE PTR [ebx],cl
  41db23:	push   eax
  41db24:	add    BYTE PTR [edx],al
  41db26:	rcr    BYTE PTR ds:0xb00b00b,0xe0
  41db2d:	add    BYTE PTR [ebx],cl
  41db2f:	push   eax
  41db30:	add    BYTE PTR [edx],al
  41db32:	ror    BYTE PTR [edi],0xb
  41db35:	mov    al,0x0
  41db37:	or     esp,eax
  41db39:	add    BYTE PTR [ebx],cl
  41db3b:	rol    BYTE PTR [eax],0xb
  41db3e:	push   eax
  41db3f:	add    BYTE PTR [eax],al
  41db41:	inc    eax
  41db42:	add    DWORD PTR [eax],eax
  41db44:	or     esi,DWORD PTR [eax+0xe00b00]
  41db4a:	or     eax,eax
  41db4c:	add    BYTE PTR [ebx],cl
  41db4e:	push   eax
  41db4f:	add    BYTE PTR [ebx],cl
  41db51:	mov    al,0x0
  41db53:	or     esp,eax
  41db55:	add    BYTE PTR [ebx],cl
  41db57:	rol    BYTE PTR [eax],0x0
  41db5a:	push   eax
  41db5b:	add    cl,BYTE PTR [ebx]
  41db5d:	mov    al,0x0
  41db5f:	or     esp,eax
  41db61:	add    BYTE PTR [ebx],cl
  41db63:	rol    BYTE PTR [eax],0x0
  41db66:	add    BYTE PTR [eax],al
  41db68:	or     esi,DWORD PTR [eax+0xe00b00]
  41db6e:	add    eax,0x500b21c0
  41db73:	add    BYTE PTR [ebx],cl
  41db75:	mov    al,0x0
  41db77:	or     esp,eax
  41db79:	add    BYTE PTR ds:0x21c0,al
  41db7f:	add    BYTE PTR [ebx],cl
  41db81:	mov    al,0x0
  41db83:	or     esp,eax
  41db85:	add    BYTE PTR ds:0x500019c0,al
  41db8b:	add    cl,BYTE PTR [ebx]
  41db8d:	mov    al,0x0
  41db8f:	or     esp,eax
  41db91:	add    BYTE PTR ds:0x19c0,al
  41db97:	add    BYTE PTR [ebx],cl
  41db99:	mov    al,0x0
  41db9b:	or     esp,eax
  41db9d:	add    BYTE PTR [edx],al
  41db9f:	shl    BYTE PTR [ebx],0xb
  41dba2:	push   eax
  41dba3:	add    BYTE PTR [eax],al
  41dba5:	inc    eax
  41dba6:	add    DWORD PTR [eax],eax
  41dba8:	or     esi,DWORD PTR [eax+0xe00b00]
  41dbae:	add    al,al
  41dbb0:	and    ecx,DWORD PTR [ebx]
  41dbb2:	push   eax
  41dbb3:	add    BYTE PTR [ebx],cl
  41dbb5:	mov    al,0x0
  41dbb7:	or     esp,eax
  41dbb9:	add    BYTE PTR [edx],al
  41dbbb:	shl    BYTE PTR [ebx],0x0
  41dbbe:	push   eax
  41dbbf:	add    cl,BYTE PTR [ebx]
  41dbc1:	mov    al,0x0
  41dbc3:	or     esp,eax
  41dbc5:	add    BYTE PTR [edx],al
  41dbc7:	shl    BYTE PTR [ebx],0x0
  41dbca:	add    BYTE PTR [eax],al
  41dbcc:	or     esi,DWORD PTR [eax+0xe00b00]
  41dbd2:	add    al,al
  41dbd4:	sbb    eax,0x500b
  41dbd9:	inc    eax
  41dbda:	add    DWORD PTR [eax],eax
  41dbdc:	or     esi,DWORD PTR [eax+0xe00b00]
  41dbe2:	add    al,al
  41dbe4:	sbb    eax,0xb00500b
  41dbe9:	mov    al,0x0
  41dbeb:	or     esp,eax
  41dbed:	add    BYTE PTR [edx],al
  41dbef:	rcr    BYTE PTR ds:0xb025000,0xb0
  41dbf6:	add    BYTE PTR [ebx],cl
  41dbf8:	loopne 0x41dbfa
  41dbfa:	add    al,al
  41dbfc:	sbb    eax,0xb000000
  41dc01:	mov    al,0x0
  41dc03:	or     esp,eax
  41dc05:	add    BYTE PTR [edx],al
  41dc07:	rcl    BYTE PTR [edi],0xb
  41dc0a:	push   eax
  41dc0b:	add    BYTE PTR [ebx],cl
  41dc0d:	mov    al,0x0
  41dc0f:	or     esp,eax
  41dc11:	add    BYTE PTR [edx],al
  41dc13:	rcl    BYTE PTR [edi],0x0
  41dc16:	push   eax
  41dc17:	add    cl,BYTE PTR [ebx]
  41dc19:	mov    al,0x0
  41dc1b:	or     esp,eax
  41dc1d:	add    BYTE PTR [edx],al
  41dc1f:	rcl    BYTE PTR [edi],0x0
  41dc22:	add    BYTE PTR [eax],al
  41dc24:	or     esi,DWORD PTR [eax+0xe00b00]
  41dc2a:	add    al,al
  41dc2c:	ud2    
  41dc2e:	push   eax
  41dc2f:	add    BYTE PTR [ebx],cl
  41dc31:	mov    al,0x0
  41dc33:	or     esp,eax
  41dc35:	add    BYTE PTR [edx],al
  41dc37:	ror    BYTE PTR [edi],0x0
  41dc3a:	push   eax
  41dc3b:	add    cl,BYTE PTR [ebx]
  41dc3d:	mov    al,0x0
  41dc3f:	or     esp,eax
  41dc41:	add    BYTE PTR [edx],al
  41dc43:	ror    BYTE PTR [edi],0x0
  41dc46:	add    BYTE PTR [eax],al
  41dc48:	or     esi,DWORD PTR [eax+0xe00b00]
  41dc4e:	add    al,al
  41dc50:	and    DWORD PTR [eax],eax
  41dc52:	push   eax
  41dc53:	add    cl,BYTE PTR [ebx]
  41dc55:	mov    al,0x0
  41dc57:	or     esp,eax
  41dc59:	add    BYTE PTR [edx],al
  41dc5b:	shl    BYTE PTR [ecx],0x0
  41dc5e:	add    BYTE PTR [eax],al
  41dc60:	or     esi,DWORD PTR [eax+0xe00b00]
  41dc66:	add    al,al
  41dc68:	sbb    DWORD PTR [eax],eax
  41dc6a:	push   eax
  41dc6b:	add    cl,BYTE PTR [ebx]
  41dc6d:	mov    al,0x0
  41dc6f:	or     esp,eax
  41dc71:	add    BYTE PTR [edx],al
  41dc73:	rcr    BYTE PTR [ecx],0x0
  41dc76:	add    BYTE PTR [eax],al
  41dc78:	or     esi,DWORD PTR [eax+0xe00b00]
  41dc7e:	add    al,al
  41dc80:	adc    DWORD PTR [eax],eax
  41dc82:	push   eax
  41dc83:	add    cl,BYTE PTR [ebx]
  41dc85:	mov    al,0x0
  41dc87:	or     esp,eax
  41dc89:	add    BYTE PTR [edx],al
  41dc8b:	ror    BYTE PTR ds:0xb025000,0xb0
  41dc92:	add    BYTE PTR [ebx],cl
  41dc94:	loopne 0x41dc96
  41dc96:	add    al,al
  41dc98:	add    BYTE PTR [eax],al
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	or     esi,DWORD PTR [eax+0x23c00200]
  41dca2:	or     esp,eax
  41dca4:	add    BYTE PTR [eax],al
  41dca6:	add    BYTE PTR [eax],al
  41dca8:	or     esi,DWORD PTR [eax+0x1dc00200]
  41dcae:	or     esp,eax
  41dcb0:	add    BYTE PTR [eax],al
  41dcb2:	add    BYTE PTR [eax],al
  41dcb4:	or     esi,DWORD PTR [eax+0x17c00200]
  41dcba:	or     esp,eax
  41dcbc:	add    BYTE PTR [eax],al
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	or     esi,DWORD PTR [eax+0xfc00200]
  41dcc6:	or     esp,eax
  41dcc8:	add    BYTE PTR [eax],al
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	add    eax,0x70001bd0
  41dcd1:	or     eax,DWORD PTR [eax]
  41dcd3:	add    BYTE PTR ds:0x600011d0,al
  41dcd9:	or     al,BYTE PTR [eax]
  41dcdb:	add    BYTE PTR ds:0x500015d0,al
  41dce1:	or     DWORD PTR [eax],eax
  41dce3:	add    BYTE PTR [ebx],cl
  41dce5:	mov    al,0x0
  41dce7:	or     al,0xc0
  41dce9:	add    BYTE PTR [eax],al
  41dceb:	add    BYTE PTR [ebx],cl
  41dced:	mov    al,0x0
  41dcef:	or     eax,eax
  41dcf1:	add    BYTE PTR [ebx],cl
  41dcf3:	or     BYTE PTR [eax],al
  41dcf5:	add    BYTE PTR [eax],al
  41dcf7:	add    BYTE PTR [ebx],cl
  41dcf9:	mov    al,0x0
  41dcfb:	or     eax,eax
  41dcfd:	add    BYTE PTR [eax],al
  41dcff:	push   eax
  41dd00:	add    al,BYTE PTR [eax]
  41dd02:	push   eax
  41dd03:	add    cl,BYTE PTR [ebx]
  41dd05:	loopne 0x41dd07
  41dd07:	or     eax,eax
  41dd09:	add    BYTE PTR [eax],al
  41dd0b:	push   eax
  41dd0c:	add    al,BYTE PTR [eax]
  41dd0e:	add    BYTE PTR [eax],al
  41dd10:	or     esi,DWORD PTR [eax+0xc00b00]
  41dd16:	add    BYTE PTR [eax+0x2],dl
  41dd19:	add    BYTE PTR [eax],al
  41dd1b:	add    BYTE PTR [ebx],cl
  41dd1d:	mov    al,0x0
  41dd1f:	or     eax,eax
  41dd21:	add    BYTE PTR [eax],al
  41dd23:	add    BYTE PTR [ebx],cl
  41dd25:	mov    al,0x0
  41dd27:	adc    al,al
  41dd29:	add    BYTE PTR [ebx],cl
  41dd2b:	loopne 0x41dd2d
  41dd2d:	add    BYTE PTR [eax],al
  41dd2f:	add    BYTE PTR [ebx],cl
  41dd31:	mov    al,0x0
  41dd33:	xadd   BYTE PTR [eax],al
  41dd36:	or     esp,eax
  41dd38:	add    BYTE PTR [eax],al
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	or     esi,DWORD PTR [eax+0xc00a00]
  41dd42:	add    BYTE PTR [eax],al
  41dd44:	or     esi,DWORD PTR [eax+0x1bc00e00]
  41dd4a:	add    BYTE PTR [eax],al
  41dd4c:	or     esi,DWORD PTR [eax+0x21c00500]
  41dd52:	add    BYTE PTR [eax+0x2],dl
  41dd55:	add    BYTE PTR [eax],al
  41dd57:	add    BYTE PTR [ebx],cl
  41dd59:	mov    al,0x0
  41dd5b:	add    eax,0x21c0
  41dd60:	or     esi,DWORD PTR [eax+0x19c00500]
  41dd66:	add    BYTE PTR [eax+0x2],dl
  41dd69:	add    BYTE PTR [eax],al
  41dd6b:	add    BYTE PTR [ebx],cl
  41dd6d:	mov    al,0x0
  41dd6f:	add    eax,0x19c0
  41dd74:	or     esi,DWORD PTR [eax+0x1bc00500]
  41dd7a:	add    BYTE PTR [eax+0x2],dl
  41dd7d:	add    BYTE PTR [eax],al
  41dd7f:	add    BYTE PTR [ebx],cl
  41dd81:	mov    al,0x0
  41dd83:	add    al,al
  41dd85:	and    ecx,DWORD PTR [ebx]
  41dd87:	or     BYTE PTR [eax],al
  41dd89:	add    BYTE PTR [eax],al
  41dd8b:	add    BYTE PTR [ebx],cl
  41dd8d:	mov    al,0x0
  41dd8f:	add    al,al
  41dd91:	and    eax,DWORD PTR [eax]
  41dd93:	push   eax
  41dd94:	add    al,BYTE PTR [eax]
  41dd96:	add    BYTE PTR [eax],al
  41dd98:	or     esi,DWORD PTR [eax+0x23c00200]
  41dd9e:	add    BYTE PTR [eax],al
  41dda0:	or     esi,DWORD PTR [eax+0x1dc00200]
  41dda6:	or     ecx,DWORD PTR [eax]
  41dda8:	add    BYTE PTR [eax],al
  41ddaa:	add    BYTE PTR [eax],al
  41ddac:	or     esi,DWORD PTR [eax+0x1dc00200]
  41ddb2:	add    BYTE PTR [eax+0x2],dl
  41ddb5:	add    BYTE PTR [eax],al
  41ddb7:	add    BYTE PTR [ebx],cl
  41ddb9:	mov    al,0x0
  41ddbb:	add    al,al
  41ddbd:	sbb    eax,0xb00b0000
  41ddc2:	add    BYTE PTR [edx],al
  41ddc4:	rcl    BYTE PTR [edi],0x0
  41ddc7:	push   eax
  41ddc8:	add    al,BYTE PTR [eax]
  41ddca:	add    BYTE PTR [eax],al
  41ddcc:	or     esi,DWORD PTR [eax+0x17c00200]
  41ddd2:	add    BYTE PTR [eax],al
  41ddd4:	or     esi,DWORD PTR [eax+0xfc00200]
  41ddda:	or     ecx,DWORD PTR [eax]
  41dddc:	add    BYTE PTR [eax],al
  41ddde:	add    BYTE PTR [eax],al
  41dde0:	or     esi,DWORD PTR [eax+0xfc00200]
  41dde6:	add    BYTE PTR [eax+0x2],dl
  41dde9:	add    BYTE PTR [eax],al
  41ddeb:	add    BYTE PTR [ebx],cl
  41dded:	mov    al,0x0
  41ddef:	add    al,al
  41ddf1:	sldt   WORD PTR [eax]
  41ddf4:	or     esi,DWORD PTR [eax+0x29c00200]
  41ddfa:	add    BYTE PTR [eax],al
  41ddfc:	or     esi,DWORD PTR [eax+0x27c00200]
  41de02:	add    BYTE PTR [eax],al
  41de04:	or     esi,DWORD PTR [eax+0x22c00200]
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	or     esi,DWORD PTR [eax+0x21c00200]
  41de12:	add    BYTE PTR [eax+0x2],dl
  41de15:	add    BYTE PTR [eax],al
  41de17:	add    BYTE PTR [ebx],cl
  41de19:	mov    al,0x0
  41de1b:	add    al,al
  41de1d:	and    DWORD PTR [eax],eax
  41de1f:	add    BYTE PTR [ebx],cl
  41de21:	mov    al,0x0
  41de23:	add    al,al
  41de25:	sbb    al,BYTE PTR [eax]
  41de27:	add    BYTE PTR [ebx],cl
  41de29:	mov    al,0x0
  41de2b:	add    al,al
  41de2d:	sbb    DWORD PTR [eax],eax
  41de2f:	push   eax
  41de30:	add    al,BYTE PTR [eax]
  41de32:	add    BYTE PTR [eax],al
  41de34:	or     esi,DWORD PTR [eax+0x19c00200]
  41de3a:	add    BYTE PTR [eax],al
  41de3c:	or     esi,DWORD PTR [eax+0x12c00200]
  41de42:	add    BYTE PTR [eax],al
  41de44:	or     esi,DWORD PTR [eax+0x11c00200]
  41de4a:	add    BYTE PTR [eax+0x2],dl
  41de4d:	add    BYTE PTR [eax],al
  41de4f:	add    BYTE PTR [ebx],cl
  41de51:	mov    al,0x0
  41de53:	add    al,al
  41de55:	adc    DWORD PTR [eax],eax
  41de57:	add    BYTE PTR [ebx],cl
  41de59:	mov    al,0x0
  41de5b:	add    al,al
  41de5d:	or     eax,0x25000
  41de62:	add    BYTE PTR [eax],al
  41de64:	or     esi,DWORD PTR [eax+0xdc00200]
  41de6a:	add    BYTE PTR [eax],al
  41de6c:	or     esi,DWORD PTR [eax+0xc00200]
  41de72:	add    BYTE PTR [eax],al
  41de74:	or     dh,BYTE PTR [eax+0xc00b00]
  41de7a:	add    BYTE PTR [eax],al
  41de7c:	or     dh,BYTE PTR [eax+0xc00a00]
  41de82:	add    BYTE PTR [eax+0x2],dl
  41de85:	add    BYTE PTR [eax],al
  41de87:	add    BYTE PTR [edx],cl
  41de89:	mov    al,0x0
  41de8b:	or     al,al
  41de8d:	add    BYTE PTR [eax],al
  41de8f:	add    BYTE PTR [edx],cl
  41de91:	mov    al,0x0
  41de93:	push   cs
  41de94:	rcr    BYTE PTR [ebx],0x0
  41de97:	add    BYTE PTR [edx],cl
  41de99:	mov    al,0x0
  41de9b:	add    eax,0x50001bc0
  41dea0:	add    al,BYTE PTR [eax]
  41dea2:	add    BYTE PTR [eax],al
  41dea4:	or     dh,BYTE PTR [eax+0x23c00200]
  41deaa:	add    BYTE PTR [eax],al
  41deac:	or     dh,BYTE PTR [eax+0x1cc00200]
  41deb2:	add    BYTE PTR [eax],al
  41deb4:	or     dh,BYTE PTR [eax+0x16c00200]
  41deba:	add    BYTE PTR [eax+0x2],dl
  41debd:	add    BYTE PTR [eax],al
  41debf:	add    BYTE PTR [edx],cl
  41dec1:	mov    al,0x0
  41dec3:	add    al,al
  41dec5:	push   ss
  41dec6:	add    BYTE PTR [eax],al
  41dec8:	or     dh,BYTE PTR [eax+0xec00200]
  41dece:	add    BYTE PTR [eax+0x2],dl
  41ded1:	add    BYTE PTR [eax],al
  41ded3:	add    BYTE PTR [edx],cl
  41ded5:	mov    al,0x0
  41ded7:	add    al,al
  41ded9:	push   cs
  41deda:	add    BYTE PTR [eax],al
  41dedc:	or     dh,BYTE PTR [eax+0x21c00200]
  41dee2:	add    BYTE PTR [eax],al
  41dee4:	or     dh,BYTE PTR [eax+0x1ac00200]
  41deea:	add    BYTE PTR [eax],al
  41deec:	or     dh,BYTE PTR [eax+0x11c00200]
  41def2:	add    BYTE PTR [eax+0x2],dl
  41def5:	add    BYTE PTR [eax],al
  41def7:	add    BYTE PTR [edx],cl
  41def9:	mov    al,0x0
  41defb:	add    al,al
  41defd:	add    BYTE PTR [eax],al
  41deff:	add    BYTE PTR ds:0xe00521b0,al
  41df05:	and    DWORD PTR [esi],ecx
  41df07:	rol    BYTE PTR [eax],0x0
  41df0a:	add    BYTE PTR [eax],al
  41df0c:	add    eax,0xc00b21b0
  41df11:	add    BYTE PTR [eax],al
  41df13:	add    BYTE PTR ds:0xc00e21b0,al
  41df19:	add    BYTE PTR ds:0x21e0,al
  41df1f:	add    BYTE PTR ds:0xc00e21b0,al
  41df25:	add    BYTE PTR [eax],al
  41df27:	jo     0x41df2f
  41df29:	add    BYTE PTR [eax],al
  41df2b:	add    BYTE PTR ds:0xc00e21b0,al
  41df31:	add    BYTE PTR [eax],al
  41df33:	push   eax
  41df34:	add    al,BYTE PTR [eax]
  41df36:	add    BYTE PTR [eax],al
  41df38:	add    eax,0xc00e21e0
  41df3d:	add    BYTE PTR [eax],al
  41df3f:	add    BYTE PTR ds:0xc00e21b0,al
  41df45:	and    DWORD PTR [eax],eax
  41df47:	add    BYTE PTR ds:0xc00e21b0,al
  41df4d:	sbb    DWORD PTR [eax],eax
  41df4f:	jo     0x41df57
  41df51:	add    BYTE PTR [eax],al
  41df53:	add    BYTE PTR ds:0xc00e21b0,al
  41df59:	sbb    DWORD PTR [eax],eax
  41df5b:	add    BYTE PTR ds:0xc00221b0,al
  41df61:	add    BYTE PTR es:[eax],al
  41df64:	add    eax,0xc00221b0
  41df69:	and    DWORD PTR [eax],eax
  41df6b:	add    BYTE PTR ds:0xc00221b0,al
  41df71:	sbb    DWORD PTR [eax],eax
  41df73:	add    BYTE PTR ds:0xe00519b0,al
  41df79:	sbb    DWORD PTR [esi],ecx
  41df7b:	rol    BYTE PTR [eax],0x0
  41df7e:	add    BYTE PTR [eax],al
  41df80:	add    eax,0xc00b19b0
  41df85:	add    BYTE PTR [eax],al
  41df87:	add    BYTE PTR ds:0xc00e19b0,al
  41df8d:	add    BYTE PTR ds:0x19e0,al
  41df93:	add    BYTE PTR ds:0xc00e19b0,al
  41df99:	add    BYTE PTR [eax],al
  41df9b:	jo     0x41dfa3
  41df9d:	add    BYTE PTR [eax],al
  41df9f:	add    BYTE PTR ds:0xc00e19b0,al
  41dfa5:	add    BYTE PTR [eax],al
  41dfa7:	push   eax
  41dfa8:	add    al,BYTE PTR [eax]
  41dfaa:	add    BYTE PTR [eax],al
  41dfac:	add    eax,0xc00e19e0
  41dfb1:	add    BYTE PTR [eax],al
  41dfb3:	add    BYTE PTR ds:0xc00e19b0,al
  41dfb9:	sbb    DWORD PTR [eax],eax
  41dfbb:	jo     0x41dfc3
  41dfbd:	add    BYTE PTR [eax],al
  41dfbf:	add    BYTE PTR ds:0xc00e19b0,al
  41dfc5:	adc    DWORD PTR [eax],eax
  41dfc7:	add    BYTE PTR ds:0xc00219b0,al
  41dfcd:	and    DWORD PTR [eax],eax
  41dfcf:	add    BYTE PTR ds:0xc00219b0,al
  41dfd5:	and    BYTE PTR [eax],al
  41dfd7:	add    BYTE PTR ds:0xc00219b0,al
  41dfdd:	sbb    DWORD PTR [eax],eax
  41dfdf:	add    BYTE PTR ds:0xc00c1bb0,al
  41dfe5:	add    BYTE PTR [eax],al
  41dfe7:	add    BYTE PTR ds:0xc00b1bb0,al
  41dfed:	add    BYTE PTR [eax],al
  41dfef:	push   eax
  41dff0:	add    al,BYTE PTR [eax]
  41dff2:	add    BYTE PTR [eax],al
  41dff4:	add    eax,0xc00b1bb0
  41dff9:	add    BYTE PTR [eax],al
  41dffb:	add    BYTE PTR ds:0xc00a1bb0,al
  41e001:	add    BYTE PTR [eax],al
  41e003:	push   eax
  41e004:	add    al,BYTE PTR [eax]
  41e006:	add    BYTE PTR [eax],al
  41e008:	add    eax,0xc00a1bb0
  41e00d:	add    BYTE PTR [eax],al
  41e00f:	add    BYTE PTR ds:0xc00e1bb0,al
  41e015:	adc    DWORD PTR [eax],eax
  41e017:	add    BYTE PTR ds:0xc00d1bb0,al
  41e01d:	or     eax,0xb0050000
  41e022:	sbb    ecx,DWORD PTR [esi]
  41e024:	rol    BYTE PTR [eax],0x0
  41e027:	jo     0x41e034
  41e029:	add    BYTE PTR [eax],al
  41e02b:	add    BYTE PTR ds:0xc00e1bb0,al
  41e031:	adc    eax,0xb0050000
  41e036:	sbb    eax,DWORD PTR [edx]
  41e038:	shl    BYTE PTR [edi],0x0
  41e03b:	add    BYTE PTR ds:0xc0021bb0,al
  41e041:	and    DWORD PTR [eax],eax
  41e043:	add    BYTE PTR ds:0xc0021bb0,al
  41e049:	sbb    DWORD PTR [eax],eax
  41e04b:	add    BYTE PTR ds:0xc00d15b0,al
  41e051:	or     eax,0xb0050000
  41e056:	adc    eax,0xc00e
  41e05b:	push   eax
  41e05c:	or     DWORD PTR [eax],eax
  41e05e:	add    BYTE PTR [eax],al
  41e060:	add    eax,0xc00e15b0
  41e065:	add    BYTE PTR [eax],al
  41e067:	add    BYTE PTR ds:0xc00515b0,al
  41e06d:	adc    eax,0xb0050000
  41e072:	adc    eax,0x11c002
  41e077:	add    BYTE PTR ds:0xc00215b0,al
  41e07d:	add    BYTE PTR [eax],al
  41e07f:	add    BYTE PTR ds:0xc00e11b0,al
  41e085:	add    BYTE PTR [eax],al
  41e087:	pusha  
  41e088:	or     al,BYTE PTR [eax]
  41e08a:	add    BYTE PTR [eax],al
  41e08c:	add    eax,0xc00211b0
  41e091:	sbb    al,BYTE PTR [eax]
  41e093:	add    BYTE PTR [esi],al
  41e095:	mov    al,0xd
  41e097:	or     eax,0xc0
  41e09c:	or     al,0xc0
  41e09e:	add    BYTE PTR [eax+esi*4],cl
  41e0a1:	add    BYTE PTR [eax],al
  41e0a3:	add    BYTE PTR [ebx],cl
  41e0a5:	rol    BYTE PTR [eax],0xc
  41e0a8:	mov    al,0x0
  41e0aa:	add    BYTE PTR [eax+0x2],dl
  41e0ad:	add    BYTE PTR [eax],al
  41e0af:	add    BYTE PTR [ebx],cl
  41e0b1:	rol    BYTE PTR [eax],0xb
  41e0b4:	mov    al,0x0
  41e0b6:	add    BYTE PTR [eax+0x2],dl
  41e0b9:	add    BYTE PTR [eax],al
  41e0bb:	add    BYTE PTR [ebx],cl
  41e0bd:	rol    BYTE PTR [eax],0xb
  41e0c0:	mov    al,0x0
  41e0c2:	add    BYTE PTR [eax],al
  41e0c4:	or     eax,eax
  41e0c6:	add    BYTE PTR [eax],al
  41e0c8:	push   eax
  41e0c9:	add    al,BYTE PTR [eax]
  41e0cb:	push   eax
  41e0cc:	add    al,BYTE PTR [eax]
  41e0ce:	add    BYTE PTR [eax],al
  41e0d0:	or     eax,eax
  41e0d2:	add    BYTE PTR [eax],al
  41e0d4:	push   eax
  41e0d5:	add    al,BYTE PTR [eax]
  41e0d7:	add    BYTE PTR [edx],cl
  41e0d9:	rol    BYTE PTR [eax],0xa
  41e0dc:	mov    al,0x0
  41e0de:	add    BYTE PTR [eax],al
  41e0e0:	or     al,al
  41e0e2:	add    BYTE PTR [eax],al
  41e0e4:	push   eax
  41e0e5:	add    al,BYTE PTR [eax]
  41e0e7:	add    BYTE PTR [esi],cl
  41e0e9:	shl    BYTE PTR [ecx],0x0
  41e0ec:	xor    BYTE PTR [ebx],cl
  41e0ee:	add    BYTE PTR [eax],al
  41e0f0:	push   cs
  41e0f1:	shl    BYTE PTR [ecx],0x5
  41e0f4:	mov    al,0x21
  41e0f6:	add    BYTE PTR [eax],al
  41e0f8:	push   cs
  41e0f9:	rcr    BYTE PTR [ebx],0x0
  41e0fc:	push   eax
  41e0fd:	or     DWORD PTR [eax],eax
  41e0ff:	add    BYTE PTR [esi],cl
  41e101:	rcr    BYTE PTR [ecx],0xb
  41e104:	mov    al,0x0
  41e106:	add    BYTE PTR [eax+0x2],dl
  41e109:	add    BYTE PTR [eax],al
  41e10b:	add    BYTE PTR [esi],cl
  41e10d:	rcr    BYTE PTR [ebx],0xb
  41e110:	mov    al,0x0
  41e112:	add    BYTE PTR [eax],al
  41e114:	push   cs
  41e115:	rcr    BYTE PTR [ebx],0xa
  41e118:	mov    al,0x0
  41e11a:	add    BYTE PTR [eax],al
  41e11c:	push   cs
  41e11d:	rcl    BYTE PTR ds:0xd0906,0x0
  41e124:	push   cs
  41e125:	rcl    BYTE PTR ds:0x25000,0x0
  41e12c:	push   cs
  41e12d:	rcl    BYTE PTR ds:0x3000,0x0
  41e134:	push   cs
  41e135:	rcl    BYTE PTR ds:0x900,0x0
  41e13c:	push   cs
  41e13d:	rcl    BYTE PTR ds:0x95000,0x0
  41e144:	push   cs
  41e145:	rcl    BYTE PTR ds:0x11c00e00,0x0
  41e14c:	push   eax
  41e14d:	or     DWORD PTR [eax],eax
  41e14f:	add    BYTE PTR [esi],cl
  41e151:	rcl    BYTE PTR [ecx],0x0
  41e154:	or     eax,0xb00600c0
  41e159:	or     eax,0xc00d0000
  41e15e:	or     eax,0xd0906
  41e163:	add    BYTE PTR ds:0x50000dc0,cl
  41e169:	add    al,BYTE PTR [eax]
  41e16b:	add    BYTE PTR ds:0x9000dc0,cl
  41e171:	add    BYTE PTR [eax],al
  41e173:	add    BYTE PTR ds:0xe000dc0,cl
  41e179:	rol    BYTE PTR [eax],0x5
  41e17c:	mov    al,0x15
  41e17e:	push   es
  41e17f:	or     DWORD PTR ds:0xe000000,ecx
  41e185:	rol    BYTE PTR [eax],0x5
  41e188:	mov    al,0x15
  41e18a:	add    BYTE PTR [eax+0x2],dl
  41e18d:	add    BYTE PTR [eax],al
  41e18f:	add    BYTE PTR [esi],cl
  41e191:	rol    BYTE PTR [eax],0x5
  41e194:	mov    al,0x15
  41e196:	add    BYTE PTR [eax],al
  41e198:	push   cs
  41e199:	rol    BYTE PTR [eax],0x4
  41e19c:	mov    al,ds:0x9000014
  41e1a1:	rol    BYTE PTR [eax],0x9
  41e1a4:	or     BYTE PTR [eax],al
  41e1a6:	add    BYTE PTR [eax],al
  41e1a8:	or     eax,eax
  41e1aa:	add    BYTE PTR [eax],al
  41e1ac:	add    eax,0xb00b21c0
  41e1b1:	add    BYTE PTR [eax],al
  41e1b3:	push   eax
  41e1b4:	add    al,BYTE PTR [eax]
  41e1b6:	add    BYTE PTR [eax],al
  41e1b8:	add    eax,0xb00b21c0
  41e1bd:	add    BYTE PTR [eax],al
  41e1bf:	add    BYTE PTR ds:0xb00821c0,al
  41e1c5:	and    DWORD PTR [eax],eax
  41e1c7:	add    BYTE PTR ds:0xb00721c0,al
  41e1cd:	and    DWORD PTR [eax],eax
  41e1cf:	add    BYTE PTR ds:0x50021c0,al
  41e1d5:	rcr    BYTE PTR [ecx],0xb
  41e1d8:	mov    al,0x0
  41e1da:	add    BYTE PTR [eax+0x2],dl
  41e1dd:	add    BYTE PTR [eax],al
  41e1df:	add    BYTE PTR ds:0xb00b19c0,al
  41e1e5:	add    BYTE PTR [eax],al
  41e1e7:	add    BYTE PTR ds:0x50019c0,al
  41e1ed:	rcr    BYTE PTR [ebx],0xb
  41e1f0:	mov    al,0x0
  41e1f2:	add    BYTE PTR [eax+0x2],dl
  41e1f5:	add    BYTE PTR [eax],al
  41e1f7:	add    BYTE PTR ds:0x5001bc0,al
  41e1fd:	rcl    BYTE PTR ds:0x14a004,0x0
  41e204:	add    eax,0x20015c0
  41e209:	shr    BYTE PTR [ecx],0xc
  41e20c:	mov    al,0x0
  41e20e:	add    BYTE PTR [eax],al
  41e210:	add    al,al
  41e212:	daa    
  41e213:	or     al,0xb0
  41e215:	add    BYTE PTR [eax],al
  41e217:	push   eax
  41e218:	add    al,BYTE PTR [eax]
  41e21a:	add    BYTE PTR [eax],al
  41e21c:	add    al,al
  41e21e:	daa    
  41e21f:	or     esi,DWORD PTR [eax+0x2000000]
  41e225:	shl    BYTE PTR [esp+ecx*1],0xe0
  41e229:	add    BYTE PTR [eax+esi*4],cl
  41e22c:	add    BYTE PTR [eax],al
  41e22e:	add    BYTE PTR [eax],al
  41e230:	add    al,al
  41e232:	and    al,0xc
  41e234:	mov    al,0x0
  41e236:	add    BYTE PTR [eax],al
  41e238:	add    al,al
  41e23a:	and    ecx,DWORD PTR [ebx]
  41e23c:	loopne 0x41e23e
  41e23e:	or     esi,DWORD PTR [eax+0x0]
  41e244:	add    al,al
  41e246:	and    ecx,DWORD PTR [ebx]
  41e248:	mov    al,0x0
  41e24a:	add    BYTE PTR [eax],al
  41e24c:	add    al,al
  41e24e:	and    DWORD PTR [ebx],ecx
  41e250:	mov    al,0x0
  41e252:	add    BYTE PTR [eax+0x2],dl
  41e255:	add    BYTE PTR [eax],al
  41e257:	add    BYTE PTR [edx],al
  41e259:	shl    BYTE PTR [ecx],0xb
  41e25c:	mov    al,0x0
  41e25e:	add    BYTE PTR [eax],al
  41e260:	add    al,al
  41e262:	push   ds
  41e263:	or     al,0xe0
  41e265:	add    BYTE PTR [eax+esi*4],cl
  41e268:	add    BYTE PTR [eax],al
  41e26a:	add    BYTE PTR [eax],al
  41e26c:	add    al,al
  41e26e:	push   ds
  41e26f:	or     al,0xb0
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [edx],al
  41e275:	rcr    BYTE PTR ds:0xb00e00b,0xb0
  41e27c:	add    BYTE PTR [eax],al
  41e27e:	add    BYTE PTR [eax],al
  41e280:	add    al,al
  41e282:	sbb    eax,0xb00b
  41e287:	add    BYTE PTR [edx],al
  41e289:	rcr    BYTE PTR [ecx],0xb
  41e28c:	mov    al,0x0
  41e28e:	add    BYTE PTR [eax+0x2],dl
  41e291:	add    BYTE PTR [eax],al
  41e293:	add    BYTE PTR [edx],al
  41e295:	rcr    BYTE PTR [ecx],0xb
  41e298:	mov    al,0x0
  41e29a:	add    BYTE PTR [eax],al
  41e29c:	add    al,al
  41e29e:	adc    DWORD PTR [ebx],ecx
  41e2a0:	mov    al,0x0
  41e2a2:	add    BYTE PTR [eax+0x2],dl
  41e2a5:	add    BYTE PTR [eax],al
  41e2a7:	add    BYTE PTR [edx],al
  41e2a9:	ror    BYTE PTR ds:0xb00b,0x50
  41e2b0:	add    al,BYTE PTR [eax]
  41e2b2:	add    BYTE PTR [eax],al
  41e2b4:	add    al,al
  41e2b6:	add    BYTE PTR [ebx],cl
  41e2b8:	mov    al,0x0
  41e2ba:	add    BYTE PTR [eax],al
  41e2bc:	add    al,al
  41e2be:	add    BYTE PTR [edx],cl
  41e2c0:	mov    al,0x0
  41e2c2:	add    BYTE PTR [eax],al
  41e2c4:	add    al,al
  41e2c6:	add    BYTE PTR ds:0x1bb0,al
  41e2cc:	add    al,al
  41e2ce:	or     al,0x0
  41e2d0:	jo     0x41e2d9
  41e2d2:	add    BYTE PTR [eax],al
  41e2d4:	add    al,al
  41e2d6:	or     al,0x0
  41e2d8:	pusha  
  41e2d9:	add    eax,0xc0020000
  41e2de:	or     al,0x0
  41e2e0:	push   eax
  41e2e1:	add    eax,DWORD PTR [eax]
  41e2e3:	add    BYTE PTR [edx],al
  41e2e5:	shl    BYTE PTR ds:0x21c00200,0x0
  41e2ec:	add    al,al
  41e2ee:	and    al,BYTE PTR [eax]
  41e2f0:	add    al,al
  41e2f2:	pop    ds
  41e2f3:	add    BYTE PTR [edx],al
  41e2f5:	rcr    BYTE PTR [edx],0x0
  41e2f8:	add    al,al
  41e2fa:	sbb    DWORD PTR [eax],eax
  41e2fc:	add    al,al
  41e2fe:	adc    al,BYTE PTR [eax]
  41e300:	add    al,al
  41e302:	adc    DWORD PTR [eax],eax
  41e304:	add    al,al
  41e306:	add    BYTE PTR [eax],al
  41e308:	add    BYTE PTR [eax+0x2],dl
  41e30b:	add    eax,0x1508
  41e310:	add    BYTE PTR [eax+0x2],dl
  41e313:	push   es
  41e314:	or     BYTE PTR ds:0x50000000,cl
  41e31a:	add    cl,BYTE PTR ds:0xdc0
  41e320:	add    BYTE PTR [eax],dh
  41e322:	add    BYTE PTR [esi],cl
  41e324:	rcl    BYTE PTR ds:0xa0040000,0x14
  41e32b:	push   cs
  41e32c:	rol    BYTE PTR [eax],0x0
  41e32f:	add    BYTE PTR [eax+eiz*4],al
  41e332:	adc    al,0x5
  41e334:	rcl    BYTE PTR ds:0xb0080000,0x21
  41e33b:	add    eax,0x21c0
  41e340:	add    ebx,DWORD PTR [eax]
  41e342:	add    BYTE PTR ds:0x1508,al
  41e348:	add    ebx,DWORD PTR [eax]
  41e34a:	add    BYTE PTR [esi],al
  41e34c:	or     BYTE PTR ds:0x20000000,cl
  41e352:	add    al,0x0
  41e354:	push   eax
  41e355:	add    al,BYTE PTR [eax]
  41e357:	add    BYTE PTR [edi],al
  41e359:	mov    al,0x21
  41e35b:	add    eax,0x21c0
  41e360:	add    BYTE PTR [eax+0x4],ah
  41e363:	add    BYTE PTR [eax],al
  41e365:	push   eax
  41e366:	or     DWORD PTR [eax],eax
  41e368:	add    BYTE PTR [eax+0x3],dl
  41e36b:	add    BYTE PTR [eax],al
  41e36d:	push   eax
  41e36e:	add    al,BYTE PTR [eax]
  41e370:	add    BYTE PTR [eax],dh
  41e372:	push   es
  41e373:	add    BYTE PTR [eax],al
  41e375:	xor    BYTE PTR [eax+eax*1],al
  41e378:	add    eax,0x30002180
  41e37d:	or     BYTE PTR [eax],al
  41e37f:	add    BYTE PTR ds:0x5002180,al
  41e385:	sbb    BYTE PTR [ebx],0x0
  41e388:	add    eax,0x8051580
  41e38d:	adc    eax,0x80050000
  41e392:	adc    eax,0x3000
  41e397:	add    BYTE PTR ds:0x6001180,al
  41e39d:	or     BYTE PTR ds:0x25000,0x0
  41e3a4:	or     DWORD PTR [eax],ecx
  41e3a6:	add    BYTE PTR [ecx],cl
  41e3a8:	rol    BYTE PTR [eax],0x0
  41e3ab:	add    BYTE PTR ds:0x9051908,al
  41e3b1:	sbb    DWORD PTR [eax],eax
  41e3b3:	add    BYTE PTR ds:0x9052108,al
  41e3b9:	and    DWORD PTR ds:0x210a,eax
  41e3bf:	add    BYTE PTR ds:0x9052108,al
  41e3c5:	and    DWORD PTR [eax],eax
  41e3c7:	add    BYTE PTR ds:0x9052108,al
  41e3cd:	sbb    DWORD PTR [eax],eax
  41e3cf:	add    BYTE PTR ds:0x5002108,al
  41e3d5:	or     BYTE PTR [ecx],bl
  41e3d7:	add    eax,0xa052109
  41e3dc:	and    DWORD PTR [eax],eax
  41e3de:	add    BYTE PTR [eax],al
  41e3e0:	add    eax,0x9051908
  41e3e5:	and    DWORD PTR [eax],eax
  41e3e7:	add    BYTE PTR ds:0x5001908,al
  41e3ed:	or     dl,BYTE PTR [ecx]
  41e3ef:	add    eax,0x1508
  41e3f4:	add    eax,0x806110a
  41e3f9:	or     eax,0x8050000
  41e3fe:	adc    eax,0x25000
  41e403:	add    BYTE PTR ds:0x30001508,al
  41e409:	add    BYTE PTR [eax],al
  41e40b:	add    BYTE PTR ds:0xa051508,al
  41e411:	adc    DWORD PTR [eax],eax
  41e413:	add    BYTE PTR ds:0x18031508,al
  41e419:	add    BYTE PTR [eax],al
  41e41b:	add    BYTE PTR ds:0x80051508,al
  41e421:	adc    eax,0x8050000
  41e426:	adc    DWORD PTR [eax],eax
  41e428:	push   es
  41e429:	or     BYTE PTR ds:0x25000,cl
  41e42f:	add    BYTE PTR [esi],al
  41e431:	or     BYTE PTR ds:0x110a05,cl
  41e437:	add    BYTE PTR [esi],al
  41e439:	or     BYTE PTR ds:0x1803,cl
  41e43f:	add    BYTE PTR [ecx*1+0xc040011],al
  41e446:	adc    DWORD PTR [eax],eax
  41e448:	add    BYTE PTR [ebx],cl
  41e44a:	add    BYTE PTR [eax],al
  41e44c:	add    eax,0x5845545f
  41e451:	push   esp
  41e452:	add    BYTE PTR [eax],al
  41e454:	cs je  0x41e4bc
  41e457:	js     0x41e4cd
  41e459:	add    BYTE PTR [eax],al
  41e45b:	add    BYTE PTR ds:0x5441445f,al
  41e461:	inc    ecx
  41e462:	add    BYTE PTR [eax],al
  41e464:	cs fs popa 
  41e467:	je     0x41e4ca
  41e469:	add    BYTE PTR [eax],al
  41e46b:	add    BYTE PTR ds:0x534e4f43,al
  41e471:	push   esp
  41e472:	add    BYTE PTR [eax],al
  41e474:	cs jb  0x41e4db
  41e477:	popa   
  41e478:	je     0x41e4db
  41e47a:	add    BYTE PTR [eax],al
  41e47c:	add    eax,0x434f545f
  41e481:	inc    esp
  41e482:	add    BYTE PTR [eax],al
  41e484:	cs je  0x41e4f6
  41e487:	arpl   WORD PTR [eax+eax*1+0x0],sp
  41e48b:	add    BYTE PTR [edi+ebx*2],al
  41e48e:	inc    edx
  41e48f:	push   ebx
  41e490:	push   ebx
  41e491:	add    BYTE PTR [eax],al
  41e493:	add    BYTE PTR [esi],ch
  41e495:	bound  esi,QWORD PTR [ebx+0x73]
  41e498:	add    BYTE PTR [eax],al
  41e49a:	add    BYTE PTR [eax],al
  41e49c:	push   es
  41e49d:	pop    edi
  41e49e:	pop    eax
  41e49f:	inc    esp
  41e4a0:	inc    ecx
  41e4a1:	push   esp
  41e4a2:	inc    ecx
  41e4a3:	add    BYTE PTR [esi],ch
  41e4a5:	js     0x41e50b
  41e4a7:	popa   
  41e4a8:	je     0x41e50b
  41e4aa:	add    BYTE PTR [eax],al
  41e4ac:	or     DWORD PTR [esp],esp
  41e4af:	push   ebx
  41e4b0:	pop    ecx
  41e4b1:	dec    ebp
  41e4b2:	inc    edx
  41e4b3:	dec    edi
  41e4b4:	dec    esp
  41e4b5:	push   ebx
  41e4b6:	add    BYTE PTR [eax],al
  41e4b8:	cs fs bound esi,QWORD PTR gs:[ebp+0x67]
  41e4be:	and    al,0x53
  41e4c0:	add    BYTE PTR [eax],al
  41e4c2:	add    BYTE PTR [eax],al
  41e4c4:	pop    es
  41e4c5:	and    al,0x24
  41e4c7:	push   esp
  41e4c8:	pop    ecx
  41e4c9:	push   eax
  41e4ca:	inc    ebp
  41e4cb:	push   ebx
  41e4cc:	add    BYTE PTR [eax],al
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	cs fs bound esi,QWORD PTR gs:[ebp+0x67]
  41e4d6:	and    al,0x54
  41e4d8:	add    BYTE PTR [eax],al
  41e4da:	add    BYTE PTR [eax],al
  41e4dc:	inc    ebx
  41e4dd:	dec    edi
  41e4de:	inc    esp
  41e4df:	inc    ebp
  41e4e0:	add    BYTE PTR [eax],al
  41e4e2:	add    BYTE PTR [eax],al
  41e4e4:	cs fs jb 0x41e54d
  41e4e8:	arpl   WORD PTR [esi+esi*2+0x65],si
  41e4ec:	add    BYTE PTR [eax],al
  41e4ee:	add    BYTE PTR [eax],al
  41e4f0:	and    al,0x24
  41e4f2:	and    eax,0x583630
  41e4f7:	add    BYTE PTR [eax+0x63],al
  41e4fa:	outs   dx,DWORD PTR ds:[esi]
  41e4fb:	ins    DWORD PTR es:[edi],dx
  41e4fc:	jo     0x41e52c
  41e4fe:	imul   esp,DWORD PTR [eax+eax*1+0x0],0x66400000
  41e506:	gs popa 
  41e508:	je     0x41e538
  41e50a:	xor    BYTE PTR [eax],dh
  41e50c:	add    BYTE PTR [eax],al
  41e50e:	add    BYTE PTR [eax],al
  41e510:	data16 cmp bl,BYTE PTR [esp+eiz*2+0x64]
  41e515:	pop    esp
  41e516:	jbe    0x41e57b
  41e518:	je     0x41e589
  41e51a:	outs   dx,DWORD PTR ds:[esi]
  41e51b:	ins    BYTE PTR es:[edi],dx
  41e51c:	jae    0x41e57a
  41e51e:	ins    DWORD PTR es:[edi],dx
  41e51f:	popa   
  41e520:	jae    0x41e58f
  41e522:	pop    esp
  41e523:	ins    DWORD PTR es:[edi],dx
  41e524:	ins    BYTE PTR es:[edi],dx
  41e525:	pop    esp
  41e526:	arpl   WORD PTR [edi+0x66],bp
  41e529:	gs ins WORD PTR es:[edi],dx
  41e52c:	imul   esi,DWORD PTR [esi+ebp*1+0x63],0x7070
  41e534:	imul   bp,WORD PTR cs:[ebp+eiz*2+0x0],0x0
	...
  41e548:	dec    ebp
  41e549:	add    BYTE PTR [ecx+0x0],ch
  41e54c:	arpl   WORD PTR [eax],ax
  41e54e:	jb     0x41e550
  41e550:	outs   dx,DWORD PTR ds:[esi]
  41e551:	add    BYTE PTR [ebx+0x0],dh
  41e554:	outs   dx,DWORD PTR ds:[esi]
  41e555:	add    BYTE PTR [esi+0x0],ah
  41e558:	je     0x41e55a
  41e55a:	and    BYTE PTR [eax],al
  41e55c:	inc    edx
  41e55d:	add    BYTE PTR [ecx+0x0],ah
  41e560:	jae    0x41e562
  41e562:	add    BYTE PTR gs:[eax],ah
  41e565:	add    BYTE PTR [ebx+0x0],al
  41e568:	jb     0x41e56a
  41e56a:	jns    0x41e56c
  41e56c:	jo     0x41e56e
  41e56e:	je     0x41e570
  41e570:	outs   dx,DWORD PTR ds:[esi]
  41e571:	add    BYTE PTR [edi+0x0],ah
  41e574:	jb     0x41e576
  41e576:	popa   
  41e577:	add    BYTE PTR [eax+0x0],dh
  41e57a:	push   0x63006900
  41e57f:	add    BYTE PTR [eax],ah
  41e581:	add    BYTE PTR [eax+0x0],dl
  41e584:	jb     0x41e586
  41e586:	outs   dx,DWORD PTR ds:[esi]
  41e587:	add    BYTE PTR [esi+0x0],dh
  41e58a:	imul   eax,DWORD PTR [eax],0x650064
  41e590:	jb     0x41e592
  41e592:	and    BYTE PTR [eax],al
  41e594:	jbe    0x41e596
  41e596:	xor    DWORD PTR [eax],eax
  41e598:	add    BYTE PTR cs:[eax],dh
  41e59b:	add    BYTE PTR [eax],al
  41e59d:	add    BYTE PTR [eax],al
  41e59f:	add    BYTE PTR [esi+0x0],cl
  41e5a2:	push   ebp
  41e5a3:	add    BYTE PTR [eax+eax*1+0x0],cl
	...
  41e5af:	add    BYTE PTR [ebx+0x0],dl
  41e5b2:	outs   dx,DWORD PTR ds:[esi]
  41e5b3:	add    BYTE PTR [esi+0x0],ah
  41e5b6:	je     0x41e5b8
  41e5b8:	ja     0x41e5ba
  41e5ba:	popa   
  41e5bb:	add    BYTE PTR [edx+0x0],dh
  41e5be:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
  41e5c3:	add    BYTE PTR [ecx+0x0],ch
  41e5c6:	arpl   WORD PTR [eax],ax
  41e5c8:	jb     0x41e5ca
  41e5ca:	outs   dx,DWORD PTR ds:[esi]
  41e5cb:	add    BYTE PTR [ebx+0x0],dh
  41e5ce:	outs   dx,DWORD PTR ds:[esi]
  41e5cf:	add    BYTE PTR [esi+0x0],ah
  41e5d2:	je     0x41e5d4
  41e5d4:	pop    esp
  41e5d5:	add    BYTE PTR [esi+0x0],dl
  41e5d8:	imul   eax,DWORD PTR [eax],0x750073
  41e5de:	popa   
  41e5df:	add    BYTE PTR [eax+eax*1+0x53],ch
  41e5e3:	add    BYTE PTR [eax+eax*1+0x75],dh
  41e5e7:	add    BYTE PTR [eax+eax*1+0x69],ah
  41e5eb:	add    BYTE PTR [edi+0x0],ch
  41e5ee:	pop    esp
  41e5ef:	add    BYTE PTR [ecx],bh
  41e5f1:	add    BYTE PTR [esi],ch
  41e5f3:	add    BYTE PTR [eax],dh
  41e5f5:	add    BYTE PTR [eax+eax*1+0x47],bl
  41e5f9:	add    BYTE PTR [ebp+0x0],ah
  41e5fc:	outs   dx,BYTE PTR ds:[esi]
  41e5fd:	add    BYTE PTR [ebp+0x0],ah
  41e600:	jb     0x41e602
  41e602:	popa   
  41e603:	add    BYTE PTR [eax+eax*1+0x0],ch
  41e607:	add    BYTE PTR [ebp+0x0],dl
  41e60a:	jae    0x41e60c
  41e60c:	add    BYTE PTR gs:[edx+0x0],dh
  41e610:	inc    ebx
  41e611:	add    BYTE PTR [ecx+0x0],ah
  41e614:	outs   dx,BYTE PTR ds:[esi]
  41e615:	add    BYTE PTR [ecx+0x0],al
  41e618:	jne    0x41e61a
  41e61a:	je     0x41e61c
  41e61c:	outs   dx,DWORD PTR ds:[esi]
  41e61d:	add    BYTE PTR [ebx+0x0],dl
  41e620:	add    BYTE PTR gs:[esi+0x0],ch
  41e624:	add    BYTE PTR fs:[ebp+0x0],al
  41e628:	jb     0x41e62a
  41e62a:	jb     0x41e62c
  41e62c:	outs   dx,DWORD PTR ds:[esi]
  41e62d:	add    BYTE PTR [edx+0x0],dh
  41e630:	push   edx
  41e631:	add    BYTE PTR [ebp+0x0],ah
  41e634:	jo     0x41e636
  41e636:	outs   dx,DWORD PTR ds:[esi]
  41e637:	add    BYTE PTR [edx+0x0],dh
  41e63a:	je     0x41e63c
  41e63c:	add    BYTE PTR [eax],al
  41e63e:	add    BYTE PTR [eax],al
  41e640:	push   ebx
  41e641:	add    BYTE PTR [edi+0x0],ch
  41e644:	data16 add BYTE PTR [eax+eax*1+0x77],dh
  41e649:	add    BYTE PTR [ecx+0x0],ah
  41e64c:	jb     0x41e64e
  41e64e:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
  41e653:	add    BYTE PTR [ecx+0x0],ch
  41e656:	arpl   WORD PTR [eax],ax
  41e658:	jb     0x41e65a
  41e65a:	outs   dx,DWORD PTR ds:[esi]
  41e65b:	add    BYTE PTR [ebx+0x0],dh
  41e65e:	outs   dx,DWORD PTR ds:[esi]
  41e65f:	add    BYTE PTR [esi+0x0],ah
  41e662:	je     0x41e664
  41e664:	pop    esp
  41e665:	add    BYTE PTR [eax+0x0],dl
  41e668:	inc    ebx
  41e669:	add    BYTE PTR [eax+0x0],cl
  41e66c:	add    BYTE PTR gs:[ecx+0x0],ah
  41e670:	ins    BYTE PTR es:[edi],dx
  41e671:	add    BYTE PTR [eax+eax*1+0x68],dh
  41e675:	add    BYTE PTR [eax+eax*1+0x45],bl
  41e679:	add    BYTE PTR [edx+0x0],dh
  41e67c:	jb     0x41e67e
  41e67e:	outs   dx,DWORD PTR ds:[esi]
  41e67f:	add    BYTE PTR [edx+0x0],dh
  41e682:	push   edx
  41e683:	add    BYTE PTR [ebp+0x0],ah
  41e686:	jo     0x41e688
  41e688:	outs   dx,DWORD PTR ds:[esi]
  41e689:	add    BYTE PTR [edx+0x0],dh
  41e68c:	je     0x41e68e
  41e68e:	imul   eax,DWORD PTR [eax],0x67006e
  41e694:	pop    esp
  41e695:	add    BYTE PTR [eax+eax*1+0x57],al
  41e699:	add    BYTE PTR [eax+eax*1+0x49],bl
  41e69d:	add    BYTE PTR [esi+0x0],ch
  41e6a0:	jae    0x41e6a2
  41e6a2:	je     0x41e6a4
  41e6a4:	popa   
  41e6a5:	add    BYTE PTR [eax+eax*1+0x6c],ch
  41e6a9:	add    BYTE PTR [ebp+0x0],ah
  41e6ac:	add    BYTE PTR fs:[eax],al
  41e6af:	add    BYTE PTR [eax+eax*1+0x57],al
  41e6b3:	add    BYTE PTR [eax],dh
  41e6b5:	add    BYTE PTR [edx],dh
  41e6b7:	add    BYTE PTR [eax],dh
  41e6b9:	add    BYTE PTR [eax],dh
  41e6bb:	add    BYTE PTR [eax],al
  41e6bd:	add    BYTE PTR [eax],al
  41e6bf:	add    BYTE PTR [eax+0x4b],cl
  41e6c2:	dec    esp
  41e6c3:	dec    ebp
  41e6c4:	pop    esp
  41e6c5:	push   ebx
  41e6c6:	outs   dx,DWORD PTR ds:[esi]
  41e6c7:	data16 je 0x41e741
  41e6ca:	popa   
  41e6cb:	jb     0x41e732
  41e6cd:	pop    esp
  41e6ce:	dec    ebp
  41e6cf:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  41e6d6:	je     0x41e734
  41e6d8:	dec    ecx
  41e6d9:	outs   dx,BYTE PTR ds:[esi]
  41e6da:	je     0x41e741
  41e6dc:	jb     0x41e74c
  41e6de:	gs je  0x41e701
  41e6e1:	inc    ebp
  41e6e2:	js     0x41e754
  41e6e4:	ins    BYTE PTR es:[edi],dx
  41e6e5:	outs   dx,DWORD PTR ds:[esi]
  41e6e6:	jb     0x41e74d
  41e6e8:	jb     0x41e746
  41e6ea:	push   edx
  41e6eb:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69746172
  41e6f4:	outs   dx,DWORD PTR ds:[esi]
  41e6f5:	outs   dx,BYTE PTR ds:[esi]
  41e6f6:	pop    esp
  41e6f7:	inc    esp
  41e6f8:	imul   esp,DWORD PTR [edi+0x69],0x506c6174
  41e6ff:	jb     0x41e770
  41e701:	fs jne 0x41e767
  41e704:	je     0x41e74f
  41e706:	inc    esp
  41e707:	add    BYTE PTR [eax+eax*1+0x77],ah
  41e70b:	add    BYTE PTR [edx],dh
  41e70d:	add    BYTE PTR [eax],dh
  41e70f:	add    BYTE PTR [esi],ch
  41e711:	add    BYTE PTR [ebp+0x0],ah
  41e714:	js     0x41e716
  41e716:	add    BYTE PTR gs:[eax],ah
  41e719:	add    BYTE PTR ds:0x20007800,ch
  41e71f:	add    BYTE PTR ds:0x20007300,ch
  41e725:	add    BYTE PTR ds:0x7500,ah
  41e72b:	add    BYTE PTR [eax+0x4c],al
  41e72e:	imul   ebp,DWORD PTR [esi+0x65],0x40000000
  41e735:	inc    esp
  41e736:	popa   
  41e737:	je     0x41e79e
  41e739:	add    BYTE PTR [eax],al
  41e73b:	add    BYTE PTR [eax+0x46],al
  41e73e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x656d61
  41e746:	add    BYTE PTR [eax],al
  41e748:	inc    eax
  41e749:	inc    esi
  41e74a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x43],0x7275
  41e752:	add    BYTE PTR [eax],al
  41e754:	inc    eax
  41e755:	inc    ebx
  41e756:	jne    0x41e7ca
  41e758:	push   ebx
  41e759:	add    BYTE PTR gs:[bx+si+0x54],al
  41e75e:	imul   ebp,DWORD PTR [ebp+0x65],0x40000000
  41e765:	push   esi
  41e766:	gs jb  0x41e7dc
  41e769:	imul   ebp,DWORD PTR [edi+0x6e],0x0
  41e770:	xor    DWORD PTR [ecx],esi
  41e772:	xor    BYTE PTR [eax],dh
  41e774:	add    BYTE PTR [eax],al
  41e776:	add    BYTE PTR [eax],al
  41e778:	inc    eax
  41e779:	inc    eax
  41e77a:	add    BYTE PTR [eax],al
  41e77c:	inc    eax
  41e77d:	inc    ebp
  41e77e:	outs   dx,BYTE PTR ds:[esi]
  41e77f:	jbe    0x41e7ea
  41e781:	jb     0x41e7f2
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	add    BYTE PTR [eax],al
  41e786:	add    BYTE PTR [eax],al
  41e788:	inc    eax
  41e789:	inc    ebx
  41e78a:	popa   
  41e78b:	je     0x41e7e0
  41e78d:	je     0x41e801
  41e78f:	add    BYTE PTR [eax+0x53],al
  41e792:	jne    0x41e7f6
  41e794:	push   ebx
  41e795:	je     0x41e809
  41e797:	add    BYTE PTR [eax+0x49],al
  41e79a:	outs   dx,BYTE PTR ds:[esi]
  41e79b:	push   ebx
  41e79c:	je     0x41e810
  41e79e:	add    BYTE PTR [eax],al
  41e7a0:	inc    eax
  41e7a1:	push   ebx
  41e7a2:	imul   edi,DWORD PTR [edx+0x65],0x727453
  41e7a9:	add    BYTE PTR [eax],al
  41e7ab:	add    BYTE PTR [edi+0x0],bl
  41e7ae:	add    BYTE PTR [eax],al
  41e7b0:	inc    edx
  41e7b1:	add    BYTE PTR [eax+eax*1+0x23],ch
  41e7b5:	add    BYTE PTR [eax],al
  41e7b7:	add    BYTE PTR [edx+0x0],al
  41e7ba:	jb     0x41e7bc
  41e7bc:	add    BYTE PTR gs:[eax+0x0],dh
  41e7c0:	jb     0x41e7c2
  41e7c2:	outs   dx,DWORD PTR ds:[esi]
  41e7c3:	add    BYTE PTR [eax],al
  41e7c5:	add    BYTE PTR [eax],al
  41e7c7:	add    BYTE PTR [ebx+0x0],ah
  41e7ca:	add    BYTE PTR [eax],al
  41e7cc:	inc    ebx
  41e7cd:	add    BYTE PTR [eax+0x0],dh
  41e7d0:	add    BYTE PTR [eax],al
  41e7d2:	add    BYTE PTR [eax],al
  41e7d4:	inc    ebx
  41e7d5:	add    BYTE PTR [eax+0x0],bh
  41e7d8:	add    BYTE PTR [eax],al
  41e7da:	add    BYTE PTR [eax],al
  41e7dc:	inc    esp
  41e7dd:	add    BYTE PTR [ebx],ah
  41e7df:	add    BYTE PTR [eax],al
  41e7e1:	add    BYTE PTR [eax],al
  41e7e3:	add    BYTE PTR [ebp+0x0],al
  41e7e6:	push   eax
  41e7e7:	add    BYTE PTR [eax],al
  41e7e9:	add    BYTE PTR [eax],al
  41e7eb:	add    BYTE PTR [ebp+0x0],ah
  41e7ee:	jb     0x41e7f0
  41e7f0:	jb     0x41e7f2
  41e7f2:	outs   dx,DWORD PTR ds:[esi]
  41e7f3:	add    BYTE PTR [edx+0x0],dh
  41e7f6:	push   edx
  41e7f7:	add    BYTE PTR [ebp+0x0],ah
  41e7fa:	jo     0x41e7fc
  41e7fc:	outs   dx,DWORD PTR ds:[esi]
  41e7fd:	add    BYTE PTR [edx+0x0],dh
  41e800:	je     0x41e802
  41e802:	cmp    al,BYTE PTR [eax]
  41e804:	outs   dx,BYTE PTR ds:[esi]
  41e805:	add    BYTE PTR [edi+0x0],ch
  41e808:	outs   dx,BYTE PTR ds:[esi]
  41e809:	add    BYTE PTR [ebp+0x0],ah
  41e80c:	add    BYTE PTR [eax],al
  41e80e:	add    BYTE PTR [eax],al
  41e810:	add    BYTE PTR gs:[edx+0x0],dh
  41e814:	jb     0x41e816
  41e816:	outs   dx,DWORD PTR ds:[esi]
  41e817:	add    BYTE PTR [edx+0x0],dh
  41e81a:	push   edx
  41e81b:	add    BYTE PTR [ebp+0x0],ah
  41e81e:	jo     0x41e820
  41e820:	outs   dx,DWORD PTR ds:[esi]
  41e821:	add    BYTE PTR [edx+0x0],dh
  41e824:	je     0x41e826
  41e826:	cmp    al,BYTE PTR [eax]
  41e828:	jo     0x41e82a
  41e82a:	jb     0x41e82c
  41e82c:	outs   dx,DWORD PTR ds:[esi]
  41e82d:	add    BYTE PTR [ebp+0x0],ch
  41e830:	jo     0x41e832
  41e832:	je     0x41e834
  41e834:	add    BYTE PTR [eax],al
  41e836:	add    BYTE PTR [eax],al
  41e838:	add    BYTE PTR gs:[edx+0x0],dh
  41e83c:	jb     0x41e83e
  41e83e:	outs   dx,DWORD PTR ds:[esi]
  41e83f:	add    BYTE PTR [edx+0x0],dh
  41e842:	push   edx
  41e843:	add    BYTE PTR [ebp+0x0],ah
  41e846:	jo     0x41e848
  41e848:	outs   dx,DWORD PTR ds:[esi]
  41e849:	add    BYTE PTR [edx+0x0],dh
  41e84c:	je     0x41e84e
  41e84e:	cmp    al,BYTE PTR [eax]
  41e850:	jno    0x41e852
  41e852:	jne    0x41e854
  41e854:	add    BYTE PTR gs:[ebp+0x0],dh
  41e858:	add    BYTE PTR gs:[eax],al
  41e85b:	add    BYTE PTR [ebp+0x0],ah
  41e85e:	jb     0x41e860
  41e860:	jb     0x41e862
  41e862:	outs   dx,DWORD PTR ds:[esi]
  41e863:	add    BYTE PTR [edx+0x0],dh
  41e866:	push   edx
  41e867:	add    BYTE PTR [ebp+0x0],ah
  41e86a:	jo     0x41e86c
  41e86c:	outs   dx,DWORD PTR ds:[esi]
  41e86d:	add    BYTE PTR [edx+0x0],dh
  41e870:	je     0x41e872
  41e872:	cmp    al,BYTE PTR [eax]
  41e874:	jae    0x41e876
  41e876:	add    BYTE PTR gs:[esi+0x0],ch
  41e87a:	add    BYTE PTR fs:[eax],al
  41e87d:	add    BYTE PTR [eax],al
  41e87f:	add    BYTE PTR [ebp+0x0],ah
  41e882:	jb     0x41e884
  41e884:	jb     0x41e886
  41e886:	outs   dx,DWORD PTR ds:[esi]
  41e887:	add    BYTE PTR [edx+0x0],dh
  41e88a:	push   edx
  41e88b:	add    BYTE PTR [ebp+0x0],ah
  41e88e:	jo     0x41e890
  41e890:	outs   dx,DWORD PTR ds:[esi]
  41e891:	add    BYTE PTR [edx+0x0],dh
  41e894:	je     0x41e896
  41e896:	cmp    al,BYTE PTR [eax]
  41e898:	je     0x41e89a
  41e89a:	add    BYTE PTR gs:[ebx+0x0],dh
  41e89e:	je     0x41e8a0
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	add    BYTE PTR [eax],al
  41e8a4:	inc    esi
  41e8a5:	add    BYTE PTR [ebp+0x0],ah
  41e8a8:	and    eax,DWORD PTR [eax]
  41e8aa:	add    BYTE PTR [eax],al
  41e8ac:	inc    esi
  41e8ad:	add    BYTE PTR [eax+eax*1+0x0],ch
  41e8b1:	add    BYTE PTR [eax],al
  41e8b3:	add    BYTE PTR [esi+0x0],al
  41e8b6:	ins    BYTE PTR es:[edi],dx
  41e8b7:	add    BYTE PTR [edx],ch
  41e8b9:	add    BYTE PTR [eax],al
  41e8bb:	add    BYTE PTR [esi+0x0],al
  41e8be:	ins    DWORD PTR es:[edi],dx
  41e8bf:	add    BYTE PTR [eax],al
  41e8c1:	add    BYTE PTR [eax],al
  41e8c3:	add    BYTE PTR [esi+0x0],al
  41e8c6:	ins    DWORD PTR es:[edi],dx
  41e8c7:	add    BYTE PTR [edx],ch
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR [esi+0x0],al
  41e8ce:	outs   dx,DWORD PTR ds:[esi]
  41e8cf:	add    BYTE PTR [ebx],ah
  41e8d1:	add    BYTE PTR [eax],al
  41e8d3:	add    BYTE PTR [esi+0x0],al
  41e8d6:	jb     0x41e8d8
  41e8d8:	add    BYTE PTR [eax],al
  41e8da:	add    BYTE PTR [eax],al
  41e8dc:	inc    esi
  41e8dd:	add    BYTE PTR [edx+0x0],dh
  41e8e0:	sub    al,BYTE PTR [eax]
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	inc    esi
  41e8e5:	add    BYTE PTR [edx+0x0],dl
  41e8e8:	add    BYTE PTR [eax],al
  41e8ea:	add    BYTE PTR [eax],al
  41e8ec:	inc    esi
  41e8ed:	add    BYTE PTR [edx+0x0],dl
  41e8f0:	sub    al,BYTE PTR [eax]
  41e8f2:	add    BYTE PTR [eax],al
  41e8f4:	inc    esi
  41e8f5:	add    BYTE PTR [esi+0x0],bl
  41e8f8:	add    BYTE PTR [eax],al
  41e8fa:	add    BYTE PTR [eax],al
  41e8fc:	dec    ecx
  41e8fd:	add    BYTE PTR [ebx],ah
  41e8ff:	add    BYTE PTR [eax],al
  41e901:	add    BYTE PTR [eax],al
  41e903:	add    BYTE PTR [eax+eax*1+0x69],ch
  41e907:	add    BYTE PTR [esi+0x0],ch
  41e90a:	imul   eax,DWORD PTR [eax],0x0
  41e90d:	add    BYTE PTR [eax],al
  41e90f:	add    BYTE PTR [esi+0x0],ch
  41e912:	outs   dx,DWORD PTR ds:[esi]
  41e913:	add    BYTE PTR [eax+eax*1+0x6f],ch
  41e917:	add    BYTE PTR [edi+0x0],ah
  41e91a:	outs   dx,DWORD PTR ds:[esi]
  41e91b:	add    BYTE PTR [eax],al
  41e91d:	add    BYTE PTR [eax],al
  41e91f:	add    BYTE PTR [ebx+0x0],dl
  41e922:	ins    BYTE PTR es:[edi],dx
  41e923:	add    BYTE PTR [ebx],ah
  41e925:	add    BYTE PTR [eax],al
  41e927:	add    BYTE PTR [ebx+0x0],dl
  41e92a:	jo     0x41e92c
  41e92c:	and    eax,DWORD PTR [eax]
  41e92e:	add    BYTE PTR [eax],al
  41e930:	push   ebx
  41e931:	add    BYTE PTR [ebx+0x0],dh
  41e934:	and    eax,DWORD PTR [eax]
  41e936:	add    BYTE PTR [eax],al
  41e938:	push   ebx
  41e939:	add    BYTE PTR [eax+eax*1+0x23],dh
  41e93d:	add    BYTE PTR [eax],al
  41e93f:	add    BYTE PTR [ebx+0x0],dl
  41e942:	sub    al,BYTE PTR [eax]
  41e944:	add    BYTE PTR [eax],al
  41e946:	add    BYTE PTR [eax],al
  41e948:	push   esp
  41e949:	add    BYTE PTR [ecx+0x0],ah
  41e94c:	and    eax,DWORD PTR [eax]
  41e94e:	add    BYTE PTR [eax],al
  41e950:	ja     0x41e952
  41e952:	add    BYTE PTR [eax],al
  41e954:	push   edi
  41e955:	add    BYTE PTR [eax+0x0],bl
  41e958:	add    BYTE PTR [eax],al
  41e95a:	add    BYTE PTR [eax],al
  41e95c:	push   edi
  41e95d:	add    BYTE PTR [edx],ch
  41e95f:	add    BYTE PTR [eax],al
  41e961:	add    BYTE PTR [eax],al
  41e963:	add    BYTE PTR [eax+0x0],bl
  41e966:	add    BYTE PTR [eax],al
  41e968:	js     0x41e96a
  41e96a:	outs   dx,DWORD PTR ds:[esi]
  41e96b:	add    BYTE PTR [esi+0x0],ah
  41e96e:	data16 add BYTE PTR [eax],al
  41e971:	add    BYTE PTR [eax],al
  41e973:	add    BYTE PTR [edx+0x0],bl
  41e976:	jo     0x41e978
  41e978:	add    BYTE PTR [eax],al
  41e97a:	add    BYTE PTR [eax],al
  41e97c:	pop    edx
  41e97d:	add    BYTE PTR [eax+0x0],dh
  41e980:	sub    al,BYTE PTR [eax]
  41e982:	add    BYTE PTR [eax],al
  41e984:	pop    edx
  41e985:	add    BYTE PTR [edx],ch
  41e987:	add    BYTE PTR [eax],al
  41e989:	add    BYTE PTR [eax],al
  41e98b:	add    BYTE PTR [edi],bh
  41e98d:	add    BYTE PTR [eax],al
  41e98f:	add    BYTE PTR [edx],ch
  41e991:	add    BYTE PTR [esi],ch
  41e993:	add    BYTE PTR [ecx+0x0],ah
  41e996:	jae    0x41e998
  41e998:	ins    DWORD PTR es:[edi],dx
  41e999:	add    BYTE PTR [eax],al
  41e99b:	add    BYTE PTR [edx],ch
  41e99d:	add    BYTE PTR [esi],ch
  41e99f:	add    BYTE PTR [eax+eax*1+0x69],ch
  41e9a3:	add    BYTE PTR [edx+0x0],ah
  41e9a6:	add    BYTE PTR [eax],al
  41e9a8:	sub    al,BYTE PTR [eax]
  41e9aa:	add    BYTE PTR cs:[eax+eax*1+0x65],ah
  41e9af:	add    BYTE PTR [esi+0x0],ah
  41e9b2:	add    BYTE PTR [eax],al
  41e9b4:	sub    BYTE PTR [eax],al
  41e9b6:	add    BYTE PTR [eax],al
  41e9b8:	sub    al,BYTE PTR [eax]
  41e9ba:	add    BYTE PTR cs:[edi+0x0],ch
  41e9be:	bound  eax,QWORD PTR [eax]
  41e9c0:	push   0x0
  41e9c2:	add    BYTE PTR [eax],al
  41e9c4:	sub    al,BYTE PTR [eax]
  41e9c6:	add    BYTE PTR [eax],al
  41e9c8:	or     al,BYTE PTR [eax]
  41e9ca:	dec    ebp
  41e9cb:	add    BYTE PTR [ecx+0x0],al
  41e9ce:	push   ebx
  41e9cf:	add    BYTE PTR [ebp+0x0],cl
  41e9d2:	and    BYTE PTR [eax],al
  41e9d4:	cmp    al,BYTE PTR [eax]
  41e9d6:	and    BYTE PTR [eax],al
  41e9d8:	data16 add BYTE PTR [ecx+0x0],ah
  41e9dc:	je     0x41e9de
  41e9de:	popa   
  41e9df:	add    BYTE PTR [eax+eax*1+0x20],ch
  41e9e3:	add    BYTE PTR [ebp+0x0],ah
  41e9e6:	jb     0x41e9e8
  41e9e8:	jb     0x41e9ea
  41e9ea:	outs   dx,DWORD PTR ds:[esi]
  41e9eb:	add    BYTE PTR [edx+0x0],dh
  41e9ee:	and    BYTE PTR [eax],al
  41e9f0:	inc    ecx
  41e9f1:	add    BYTE PTR [ecx],dh
  41e9f3:	add    BYTE PTR [eax],dh
  41e9f5:	add    BYTE PTR [ecx],dh
  41e9f7:	add    BYTE PTR [esi],dh
  41e9f9:	add    BYTE PTR [edx],bh
  41e9fb:	add    BYTE PTR [eax],ah
  41e9fd:	add    BYTE PTR [ecx+0x0],cl
  41ea00:	outs   dx,BYTE PTR ds:[esi]
  41ea01:	add    BYTE PTR [eax+eax*1+0x65],dh
  41ea05:	add    BYTE PTR [edx+0x0],dh
  41ea08:	outs   dx,BYTE PTR ds:[esi]
  41ea09:	add    BYTE PTR [ecx+0x0],ah
  41ea0c:	ins    BYTE PTR es:[edi],dx
  41ea0d:	add    BYTE PTR [eax],ah
  41ea0f:	add    BYTE PTR [ebp+0x0],ah
  41ea12:	jb     0x41ea14
  41ea14:	jb     0x41ea16
  41ea16:	outs   dx,DWORD PTR ds:[esi]
  41ea17:	add    BYTE PTR [edx+0x0],dh
  41ea1a:	or     al,BYTE PTR [eax]
  41ea1c:	add    BYTE PTR [eax],al
  41ea1e:	add    BYTE PTR [eax],al
  41ea20:	dec    ebp
  41ea21:	add    BYTE PTR [eax+eax*1+0x0],cl
  41ea25:	add    BYTE PTR [eax],al
  41ea27:	add    BYTE PTR [edi+0x0],bl
  41ea2a:	dec    ebp
  41ea2b:	add    BYTE PTR [eax+eax*1+0x5f],cl
  41ea2f:	add    BYTE PTR [eax],al
  41ea31:	add    BYTE PTR [eax],al
  41ea33:	add    BYTE PTR [edi],ch
  41ea35:	add    BYTE PTR [esi+0x0],ch
  41ea38:	outs   dx,DWORD PTR ds:[esi]
  41ea39:	add    BYTE PTR [eax+eax*1+0x6f],ch
  41ea3d:	add    BYTE PTR [edi+0x0],ah
  41ea40:	outs   dx,DWORD PTR ds:[esi]
  41ea41:	add    BYTE PTR [eax],al
  41ea43:	add    BYTE PTR [edi+0x0],bl
  41ea46:	dec    ebp
  41ea47:	add    BYTE PTR [eax+eax*1+0x5f],cl
  41ea4b:	add    BYTE PTR [ebx+0x0],al
  41ea4e:	dec    ebp
  41ea4f:	add    BYTE PTR [eax+eax*1+0x46],al
  41ea53:	add    BYTE PTR [eax+eax*1+0x41],cl
  41ea57:	add    BYTE PTR [edi+0x0],al
  41ea5a:	push   ebx
  41ea5b:	add    BYTE PTR [eax],al
  41ea5d:	add    BYTE PTR [eax],al
  41ea5f:	add    BYTE PTR [edx],cl
  41ea61:	add    BYTE PTR [eax],ah
  41ea63:	add    BYTE PTR [eax],ah
  41ea65:	add    BYTE PTR [esi+0x0],dl
  41ea68:	add    BYTE PTR gs:[edx+0x0],dh
  41ea6c:	jae    0x41ea6e
  41ea6e:	imul   eax,DWORD PTR [eax],0x6e006f
  41ea74:	and    BYTE PTR [eax],al
  41ea76:	xor    DWORD PTR [eax],eax
  41ea78:	xor    DWORD PTR [eax],eax
  41ea7a:	add    BYTE PTR cs:[eax],dh
  41ea7d:	add    BYTE PTR [eax],dh
  41ea7f:	add    BYTE PTR [esi],ch
  41ea81:	add    BYTE PTR ds:0x37003000,dh
  41ea87:	add    BYTE PTR [edx],dh
  41ea89:	add    BYTE PTR [edi],dh
  41ea8b:	add    BYTE PTR [esi],ch
  41ea8d:	add    BYTE PTR [ecx],dh
  41ea8f:	add    BYTE PTR [edx],cl
  41ea91:	add    BYTE PTR [edx],cl
  41ea93:	add    BYTE PTR [eax],ah
  41ea95:	add    BYTE PTR [eax],ah
  41ea97:	add    BYTE PTR [ebp+0x0],al
  41ea9a:	js     0x41ea9c
  41ea9c:	arpl   WORD PTR [eax],ax
  41ea9e:	add    BYTE PTR gs:[eax+0x0],dh
  41eaa2:	je     0x41eaa4
  41eaa4:	imul   eax,DWORD PTR [eax],0x6e006f
  41eaaa:	inc    ebx
  41eaab:	add    BYTE PTR [edi+0x0],ch
  41eaae:	add    BYTE PTR fs:[ebp+0x0],ah
  41eab2:	and    BYTE PTR [eax],al
  41eab4:	and    BYTE PTR [eax],al
  41eab6:	and    BYTE PTR [eax],al
  41eab8:	and    BYTE PTR [eax],al
  41eaba:	and    BYTE PTR [eax],al
  41eabc:	and    BYTE PTR [eax],al
  41eabe:	and    BYTE PTR [eax],al
  41eac0:	and    BYTE PTR [eax],al
  41eac2:	and    BYTE PTR [eax],al
  41eac4:	and    BYTE PTR [eax],al
  41eac6:	and    BYTE PTR [eax],al
  41eac8:	and    BYTE PTR [eax],al
  41eaca:	cmp    eax,0x25002000
  41eacf:	add    BYTE PTR [eax],dh
  41ead1:	add    BYTE PTR [eax],bh
  41ead3:	add    BYTE PTR [eax+0x0],bl
  41ead6:	or     al,BYTE PTR [eax]
  41ead8:	and    BYTE PTR [eax],al
  41eada:	and    BYTE PTR [eax],al
  41eadc:	inc    ebp
  41eadd:	add    BYTE PTR [eax+0x0],bh
  41eae0:	arpl   WORD PTR [eax],ax
  41eae2:	add    BYTE PTR gs:[eax+0x0],dh
  41eae6:	je     0x41eae8
  41eae8:	imul   eax,DWORD PTR [eax],0x6e006f
  41eaee:	inc    esi
  41eaef:	add    BYTE PTR [eax+eax*1+0x61],ch
  41eaf3:	add    BYTE PTR [edi+0x0],ah
  41eaf6:	jae    0x41eaf8
  41eaf8:	and    BYTE PTR [eax],al
  41eafa:	and    BYTE PTR [eax],al
  41eafc:	and    BYTE PTR [eax],al
  41eafe:	and    BYTE PTR [eax],al
  41eb00:	and    BYTE PTR [eax],al
  41eb02:	and    BYTE PTR [eax],al
  41eb04:	and    BYTE PTR [eax],al
  41eb06:	and    BYTE PTR [eax],al
  41eb08:	and    BYTE PTR [eax],al
  41eb0a:	and    BYTE PTR [eax],al
  41eb0c:	and    BYTE PTR [eax],al
  41eb0e:	cmp    eax,0x25002000
  41eb13:	add    BYTE PTR [eax],dh
  41eb15:	add    BYTE PTR [eax],bh
  41eb17:	add    BYTE PTR [eax+0x0],bl
  41eb1a:	or     al,BYTE PTR [eax]
  41eb1c:	and    BYTE PTR [eax],al
  41eb1e:	and    BYTE PTR [eax],al
  41eb20:	inc    ebp
  41eb21:	add    BYTE PTR [eax+0x0],bh
  41eb24:	arpl   WORD PTR [eax],ax
  41eb26:	add    BYTE PTR gs:[eax+0x0],dh
  41eb2a:	je     0x41eb2c
  41eb2c:	imul   eax,DWORD PTR [eax],0x6e006f
  41eb32:	inc    ecx
  41eb33:	add    BYTE PTR [eax+eax*1+0x64],ah
  41eb37:	add    BYTE PTR [edx+0x0],dh
  41eb3a:	add    BYTE PTR gs:[ebx+0x0],dh
  41eb3e:	jae    0x41eb40
  41eb40:	and    BYTE PTR [eax],al
  41eb42:	and    BYTE PTR [eax],al
  41eb44:	and    BYTE PTR [eax],al
  41eb46:	and    BYTE PTR [eax],al
  41eb48:	and    BYTE PTR [eax],al
  41eb4a:	and    BYTE PTR [eax],al
  41eb4c:	and    BYTE PTR [eax],al
  41eb4e:	and    BYTE PTR [eax],al
  41eb50:	and    BYTE PTR [eax],al
  41eb52:	cmp    eax,0x25002000
  41eb57:	add    BYTE PTR [eax+0x0],dh
  41eb5a:	add    BYTE PTR [eax],al
  41eb5c:	and    BYTE PTR [eax],al
  41eb5e:	sub    BYTE PTR [eax],al
  41eb60:	and    eax,0x29007000
  41eb65:	add    BYTE PTR [eax],ah
  41eb67:	add    BYTE PTR [edx],ah
  41eb69:	add    BYTE PTR ds:0x22007300,ah
	...
  41eb77:	add    BYTE PTR [edx],cl
  41eb79:	add    BYTE PTR [eax],ah
  41eb7b:	add    BYTE PTR [eax],ah
  41eb7d:	add    BYTE PTR [esi+0x0],cl
  41eb80:	jne    0x41eb82
  41eb82:	ins    DWORD PTR es:[edi],dx
  41eb83:	add    BYTE PTR [edx+0x0],ah
  41eb86:	add    BYTE PTR gs:[edx+0x0],dh
  41eb8a:	push   eax
  41eb8b:	add    BYTE PTR [ecx+0x0],ah
  41eb8e:	jb     0x41eb90
  41eb90:	popa   
  41eb91:	add    BYTE PTR [ebp+0x0],ch
  41eb94:	add    BYTE PTR gs:[eax+eax*1+0x65],dh
  41eb99:	add    BYTE PTR [edx+0x0],dh
  41eb9c:	jae    0x41eb9e
  41eb9e:	and    BYTE PTR [eax],al
  41eba0:	and    BYTE PTR [eax],al
  41eba2:	and    BYTE PTR [eax],al
  41eba4:	and    BYTE PTR [eax],al
  41eba6:	and    BYTE PTR [eax],al
  41eba8:	and    BYTE PTR [eax],al
  41ebaa:	and    BYTE PTR [eax],al
  41ebac:	and    BYTE PTR [eax],al
  41ebae:	and    BYTE PTR [eax],al
  41ebb0:	cmp    eax,0x25002000
  41ebb5:	add    BYTE PTR [eax],dh
  41ebb7:	add    BYTE PTR [eax],bh
  41ebb9:	add    BYTE PTR [eax+0x0],bl
  41ebbc:	or     al,BYTE PTR [eax]
  41ebbe:	add    BYTE PTR [eax],al
  41ebc0:	and    BYTE PTR [eax],al
  41ebc2:	and    BYTE PTR [eax],al
  41ebc4:	inc    ebp
  41ebc5:	add    BYTE PTR [eax+0x0],bh
  41ebc8:	arpl   WORD PTR [eax],ax
  41ebca:	add    BYTE PTR gs:[eax+0x0],dh
  41ebce:	je     0x41ebd0
  41ebd0:	imul   eax,DWORD PTR [eax],0x6e006f
  41ebd6:	dec    ecx
  41ebd7:	add    BYTE PTR [esi+0x0],ch
  41ebda:	data16 add BYTE PTR [edi+0x0],ch
  41ebde:	jb     0x41ebe0
  41ebe0:	ins    DWORD PTR es:[edi],dx
  41ebe1:	add    BYTE PTR [ecx+0x0],ah
  41ebe4:	je     0x41ebe6
  41ebe6:	imul   eax,DWORD PTR [eax],0x6e006f
  41ebec:	pop    ebx
  41ebed:	add    BYTE PTR ds:0x75003200,ah
  41ebf3:	add    BYTE PTR [ebp+0x0],bl
  41ebf6:	and    BYTE PTR [eax],al
  41ebf8:	cmp    eax,0x25002000
  41ebfd:	add    BYTE PTR [eax+0x0],dh
  41ec00:	or     al,BYTE PTR [eax]
  41ec02:	add    BYTE PTR [eax],al
  41ec04:	add    BYTE PTR [eax],al
  41ec06:	add    BYTE PTR [eax],al
  41ec08:	or     al,BYTE PTR [eax]
  41ec0a:	inc    ebx
  41ec0b:	add    BYTE PTR [edi+0x0],cl
  41ec0e:	dec    esi
  41ec0f:	add    BYTE PTR [eax+eax*1+0x45],dl
  41ec13:	add    BYTE PTR [eax+0x0],bl
  41ec16:	push   esp
  41ec17:	add    BYTE PTR [edx],bh
  41ec19:	add    BYTE PTR [edx],cl
  41ec1b:	add    BYTE PTR [eax],ah
  41ec1d:	add    BYTE PTR [eax],ah
  41ec1f:	add    BYTE PTR [ebp+0x0],al
  41ec22:	popa   
  41ec23:	add    BYTE PTR [eax+0x0],bh
  41ec26:	and    BYTE PTR [eax],al
  41ec28:	and    BYTE PTR [eax],al
  41ec2a:	and    BYTE PTR [eax],al
  41ec2c:	and    BYTE PTR [eax],al
  41ec2e:	cmp    eax,0x25002000
  41ec33:	add    BYTE PTR [eax+0x0],dh
  41ec36:	and    BYTE PTR [eax],al
  41ec38:	and    BYTE PTR [eax],al
  41ec3a:	inc    ebp
  41ec3b:	add    BYTE PTR [ebx+0x0],dh
  41ec3e:	jo     0x41ec40
  41ec40:	and    BYTE PTR [eax],al
  41ec42:	and    BYTE PTR [eax],al
  41ec44:	and    BYTE PTR [eax],al
  41ec46:	and    BYTE PTR [eax],al
  41ec48:	cmp    eax,0x25002000
  41ec4d:	add    BYTE PTR [eax+0x0],dh
  41ec50:	or     al,BYTE PTR [eax]
  41ec52:	and    BYTE PTR [eax],al
  41ec54:	and    BYTE PTR [eax],al
  41ec56:	inc    ebp
  41ec57:	add    BYTE PTR [edx+0x0],ah
  41ec5a:	js     0x41ec5c
  41ec5c:	and    BYTE PTR [eax],al
  41ec5e:	and    BYTE PTR [eax],al
  41ec60:	and    BYTE PTR [eax],al
  41ec62:	and    BYTE PTR [eax],al
  41ec64:	cmp    eax,0x25002000
  41ec69:	add    BYTE PTR [eax+0x0],dh
  41ec6c:	and    BYTE PTR [eax],al
  41ec6e:	and    BYTE PTR [eax],al
  41ec70:	inc    ebp
  41ec71:	add    BYTE PTR [edx+0x0],ah
  41ec74:	jo     0x41ec76
  41ec76:	and    BYTE PTR [eax],al
  41ec78:	and    BYTE PTR [eax],al
  41ec7a:	and    BYTE PTR [eax],al
  41ec7c:	and    BYTE PTR [eax],al
  41ec7e:	cmp    eax,0x25002000
  41ec83:	add    BYTE PTR [eax+0x0],dh
  41ec86:	or     al,BYTE PTR [eax]
  41ec88:	and    BYTE PTR [eax],al
  41ec8a:	and    BYTE PTR [eax],al
  41ec8c:	inc    ebp
  41ec8d:	add    BYTE PTR [ebx+0x0],ah
  41ec90:	js     0x41ec92
  41ec92:	and    BYTE PTR [eax],al
  41ec94:	and    BYTE PTR [eax],al
  41ec96:	and    BYTE PTR [eax],al
  41ec98:	and    BYTE PTR [eax],al
  41ec9a:	cmp    eax,0x25002000
  41ec9f:	add    BYTE PTR [eax+0x0],dh
  41eca2:	and    BYTE PTR [eax],al
  41eca4:	and    BYTE PTR [eax],al
  41eca6:	inc    ebp
  41eca7:	add    BYTE PTR [ebx+0x0],dh
  41ecaa:	imul   eax,DWORD PTR [eax],0x200020
  41ecb0:	and    BYTE PTR [eax],al
  41ecb2:	and    BYTE PTR [eax],al
  41ecb4:	cmp    eax,0x25002000
  41ecb9:	add    BYTE PTR [eax+0x0],dh
  41ecbc:	or     al,BYTE PTR [eax]
  41ecbe:	and    BYTE PTR [eax],al
  41ecc0:	and    BYTE PTR [eax],al
  41ecc2:	inc    ebp
  41ecc3:	add    BYTE PTR [eax+eax*1+0x78],ah
  41ecc7:	add    BYTE PTR [eax],ah
  41ecc9:	add    BYTE PTR [eax],ah
  41eccb:	add    BYTE PTR [eax],ah
  41eccd:	add    BYTE PTR [eax],ah
  41eccf:	add    BYTE PTR ds:0x25002000,bh
  41ecd5:	add    BYTE PTR [eax+0x0],dh
  41ecd8:	and    BYTE PTR [eax],al
  41ecda:	and    BYTE PTR [eax],al
  41ecdc:	inc    ebp
  41ecdd:	add    BYTE PTR [eax+eax*1+0x69],ah
  41ece1:	add    BYTE PTR [eax],ah
  41ece3:	add    BYTE PTR [eax],ah
  41ece5:	add    BYTE PTR [eax],ah
  41ece7:	add    BYTE PTR [eax],ah
  41ece9:	add    BYTE PTR ds:0x25002000,bh
  41ecef:	add    BYTE PTR [eax+0x0],dh
  41ecf2:	or     al,BYTE PTR [eax]
  41ecf4:	and    BYTE PTR [eax],al
  41ecf6:	and    BYTE PTR [eax],al
  41ecf8:	inc    ebp
  41ecf9:	add    BYTE PTR [ecx+0x0],ch
  41ecfc:	jo     0x41ecfe
  41ecfe:	and    BYTE PTR [eax],al
  41ed00:	and    BYTE PTR [eax],al
  41ed02:	and    BYTE PTR [eax],al
  41ed04:	and    BYTE PTR [eax],al
  41ed06:	cmp    eax,0x25002000
  41ed0b:	add    BYTE PTR [eax+0x0],dh
  41ed0e:	and    BYTE PTR [eax],al
  41ed10:	and    BYTE PTR [eax],al
  41ed12:	inc    ebp
  41ed13:	add    BYTE PTR [esi+0x0],al
  41ed16:	ins    BYTE PTR es:[edi],dx
  41ed17:	add    BYTE PTR [ecx+0x0],ah
  41ed1a:	add    BYTE PTR [bp+di+0x0],dh
  41ed1e:	and    BYTE PTR [eax],al
  41ed20:	cmp    eax,0x25002000
  41ed25:	add    BYTE PTR [eax+0x0],dh
  41ed28:	or     al,BYTE PTR [eax]
  41ed2a:	and    BYTE PTR [eax],al
  41ed2c:	and    BYTE PTR [eax],al
  41ed2e:	push   ebx
  41ed2f:	add    BYTE PTR [ebp+0x0],ah
  41ed32:	add    BYTE PTR [bp+di+0x0],al
  41ed36:	jae    0x41ed38
  41ed38:	and    BYTE PTR [eax],al
  41ed3a:	and    BYTE PTR [eax],al
  41ed3c:	cmp    eax,0x25002000
  41ed41:	add    BYTE PTR [eax+0x0],dh
  41ed44:	and    BYTE PTR [eax],al
  41ed46:	and    BYTE PTR [eax],al
  41ed48:	push   ebx
  41ed49:	add    BYTE PTR [ebp+0x0],ah
  41ed4c:	add    BYTE PTR [si+0x0],al
  41ed50:	jae    0x41ed52
  41ed52:	and    BYTE PTR [eax],al
  41ed54:	and    BYTE PTR [eax],al
  41ed56:	cmp    eax,0x25002000
  41ed5b:	add    BYTE PTR [eax+0x0],dh
  41ed5e:	or     al,BYTE PTR [eax]
  41ed60:	and    BYTE PTR [eax],al
  41ed62:	and    BYTE PTR [eax],al
  41ed64:	push   ebx
  41ed65:	add    BYTE PTR [ebp+0x0],ah
  41ed68:	add    BYTE PTR [bp+di+0x0],dl
  41ed6c:	jae    0x41ed6e
  41ed6e:	and    BYTE PTR [eax],al
  41ed70:	and    BYTE PTR [eax],al
  41ed72:	cmp    eax,0x25002000
  41ed77:	add    BYTE PTR [eax+0x0],dh
  41ed7a:	and    BYTE PTR [eax],al
  41ed7c:	and    BYTE PTR [eax],al
  41ed7e:	push   ebx
  41ed7f:	add    BYTE PTR [ebp+0x0],ah
  41ed82:	add    BYTE PTR [di+0x0],al
  41ed86:	jae    0x41ed88
  41ed88:	and    BYTE PTR [eax],al
  41ed8a:	and    BYTE PTR [eax],al
  41ed8c:	cmp    eax,0x25002000
  41ed91:	add    BYTE PTR [eax+0x0],dh
  41ed94:	or     al,BYTE PTR [eax]
  41ed96:	and    BYTE PTR [eax],al
  41ed98:	and    BYTE PTR [eax],al
  41ed9a:	push   ebx
  41ed9b:	add    BYTE PTR [ebp+0x0],ah
  41ed9e:	add    BYTE PTR [bp+0x0],al
  41eda2:	jae    0x41eda4
  41eda4:	and    BYTE PTR [eax],al
  41eda6:	and    BYTE PTR [eax],al
  41eda8:	cmp    eax,0x25002000
  41edad:	add    BYTE PTR [eax+0x0],dh
  41edb0:	and    BYTE PTR [eax],al
  41edb2:	and    BYTE PTR [eax],al
  41edb4:	push   ebx
  41edb5:	add    BYTE PTR [ebp+0x0],ah
  41edb8:	add    BYTE PTR [bx+0x0],al
  41edbc:	jae    0x41edbe
  41edbe:	and    BYTE PTR [eax],al
  41edc0:	and    BYTE PTR [eax],al
  41edc2:	cmp    eax,0x25002000
  41edc7:	add    BYTE PTR [eax+0x0],dh
  41edca:	or     al,BYTE PTR [eax]
  41edcc:	and    BYTE PTR [eax],al
  41edce:	and    BYTE PTR [eax],al
  41edd0:	inc    esp
  41edd1:	add    BYTE PTR [edx+0x0],dh
  41edd4:	xor    BYTE PTR [eax],al
  41edd6:	and    BYTE PTR [eax],al
  41edd8:	and    BYTE PTR [eax],al
  41edda:	and    BYTE PTR [eax],al
  41eddc:	and    BYTE PTR [eax],al
  41edde:	cmp    eax,0x25002000
  41ede3:	add    BYTE PTR [eax+0x0],dh
  41ede6:	and    BYTE PTR [eax],al
  41ede8:	and    BYTE PTR [eax],al
  41edea:	inc    esp
  41edeb:	add    BYTE PTR [edx+0x0],dh
  41edee:	xor    eax,DWORD PTR [eax]
  41edf0:	and    BYTE PTR [eax],al
  41edf2:	and    BYTE PTR [eax],al
  41edf4:	and    BYTE PTR [eax],al
  41edf6:	and    BYTE PTR [eax],al
  41edf8:	cmp    eax,0x25002000
  41edfd:	add    BYTE PTR [eax+0x0],dh
  41ee00:	or     al,BYTE PTR [eax]
  41ee02:	and    BYTE PTR [eax],al
  41ee04:	and    BYTE PTR [eax],al
  41ee06:	inc    esp
  41ee07:	add    BYTE PTR [edx+0x0],dh
  41ee0a:	xor    DWORD PTR [eax],eax
  41ee0c:	and    BYTE PTR [eax],al
  41ee0e:	and    BYTE PTR [eax],al
  41ee10:	and    BYTE PTR [eax],al
  41ee12:	and    BYTE PTR [eax],al
  41ee14:	cmp    eax,0x25002000
  41ee19:	add    BYTE PTR [eax+0x0],dh
  41ee1c:	and    BYTE PTR [eax],al
  41ee1e:	and    BYTE PTR [eax],al
  41ee20:	inc    esp
  41ee21:	add    BYTE PTR [edx+0x0],dh
  41ee24:	add    BYTE PTR ss:[eax],ah
  41ee27:	add    BYTE PTR [eax],ah
  41ee29:	add    BYTE PTR [eax],ah
  41ee2b:	add    BYTE PTR [eax],ah
  41ee2d:	add    BYTE PTR ds:0x25002000,bh
  41ee33:	add    BYTE PTR [eax+0x0],dh
  41ee36:	or     al,BYTE PTR [eax]
  41ee38:	and    BYTE PTR [eax],al
  41ee3a:	and    BYTE PTR [eax],al
  41ee3c:	inc    esp
  41ee3d:	add    BYTE PTR [edx+0x0],dh
  41ee40:	xor    al,BYTE PTR [eax]
  41ee42:	and    BYTE PTR [eax],al
  41ee44:	and    BYTE PTR [eax],al
  41ee46:	and    BYTE PTR [eax],al
  41ee48:	and    BYTE PTR [eax],al
  41ee4a:	cmp    eax,0x25002000
  41ee4f:	add    BYTE PTR [eax+0x0],dh
  41ee52:	and    BYTE PTR [eax],al
  41ee54:	and    BYTE PTR [eax],al
  41ee56:	inc    esp
  41ee57:	add    BYTE PTR [edx+0x0],dh
  41ee5a:	aaa    
  41ee5b:	add    BYTE PTR [eax],ah
  41ee5d:	add    BYTE PTR [eax],ah
  41ee5f:	add    BYTE PTR [eax],ah
  41ee61:	add    BYTE PTR [eax],ah
  41ee63:	add    BYTE PTR ds:0x25002000,bh
  41ee69:	add    BYTE PTR [eax+0x0],dh
  41ee6c:	or     al,BYTE PTR [eax]
  41ee6e:	add    BYTE PTR [eax],al
  41ee70:	das    
  41ee71:	add    BYTE PTR [edi+0x0],bl
  41ee74:	add    BYTE PTR [eax],al
  41ee76:	add    BYTE PTR [eax],al
  41ee78:	das    
  41ee79:	add    BYTE PTR [eax+eax*1+0x61],dl
  41ee7d:	add    BYTE PTR [eax],al
  41ee7f:	add    BYTE PTR [ecx+0x0],cl
  41ee82:	dec    esi
  41ee83:	add    BYTE PTR [ebx+0x0],al
  41ee86:	dec    esp
  41ee87:	add    BYTE PTR [ebp+0x0],dl
  41ee8a:	inc    esp
  41ee8b:	add    BYTE PTR [ebp+0x0],al
  41ee8e:	add    BYTE PTR [eax],al
  41ee90:	das    
  41ee91:	add    BYTE PTR [ebx+0x0],dl
  41ee94:	ins    BYTE PTR es:[edi],dx
  41ee95:	add    BYTE PTR [eax],al
  41ee97:	add    BYTE PTR [edi],ch
  41ee99:	add    BYTE PTR [ebx+0x0],dl
  41ee9c:	jo     0x41ee9e
  41ee9e:	add    BYTE PTR [eax],al
  41eea0:	das    
  41eea1:	add    BYTE PTR [edi+0x0],dl
  41eea4:	add    BYTE PTR [eax],al
  41eea6:	add    BYTE PTR [eax],al
  41eea8:	das    
  41eea9:	add    BYTE PTR [edx+0x0],bl
  41eeac:	jo     0x41eeae
  41eeae:	add    BYTE PTR [eax],al
  41eeb0:	and    BYTE PTR [eax],al
  41eeb2:	inc    ecx
  41eeb3:	add    BYTE PTR [ebx+0x0],dh
  41eeb6:	jae    0x41eeb8
  41eeb8:	add    BYTE PTR gs:[ebp+0x0],ch
  41eebc:	bound  eax,QWORD PTR [eax]
  41eebe:	ins    BYTE PTR es:[edi],dx
  41eebf:	add    BYTE PTR [ecx+0x0],ch
  41eec2:	outs   dx,BYTE PTR ds:[esi]
  41eec3:	add    BYTE PTR [edi+0x0],ah
  41eec6:	cmp    al,BYTE PTR [eax]
  41eec8:	and    BYTE PTR [eax],al
  41eeca:	and    eax,0xa007300
  41eecf:	add    BYTE PTR [eax],al
  41eed1:	add    BYTE PTR [eax],al
  41eed3:	add    BYTE PTR [edi],ch
  41eed5:	add    BYTE PTR [esi+0x0],al
  41eed8:	add    BYTE PTR gs:[eax],al
  41eedb:	add    BYTE PTR [esi],ch
  41eedd:	add    BYTE PTR [edi+0x0],ch
  41eee0:	bound  eax,QWORD PTR [eax]
  41eee2:	push   0x0
  41eee4:	add    BYTE PTR [eax],al
  41eee6:	add    BYTE PTR [eax],al
  41eee8:	add    BYTE PTR cs:[eax+eax*1+0x73],ch
  41eeed:	add    BYTE PTR [eax+eax*1+0x0],dh
  41eef1:	add    BYTE PTR [eax],al
  41eef3:	add    BYTE PTR [esi],ch
  41eef5:	add    BYTE PTR [ebx+0x0],dh
  41eef8:	bound  eax,QWORD PTR [eax]
  41eefa:	jb     0x41eefc
  41eefc:	add    BYTE PTR [eax],al
  41eefe:	add    BYTE PTR [eax],al
  41ef00:	push   0x74007400
  41ef05:	add    BYTE PTR [eax+0x0],dh
  41ef08:	cmp    al,BYTE PTR [eax]
  41ef0a:	das    
  41ef0b:	add    BYTE PTR [edi],ch
  41ef0d:	add    BYTE PTR [edi+0x0],ah
  41ef10:	outs   dx,DWORD PTR ds:[esi]
  41ef11:	add    BYTE PTR [esi],ch
  41ef13:	add    BYTE PTR [ebp+0x0],ch
  41ef16:	imul   eax,DWORD PTR [eax],0x720063
  41ef1c:	outs   dx,DWORD PTR ds:[esi]
  41ef1d:	add    BYTE PTR [ebx+0x0],dh
  41ef20:	outs   dx,DWORD PTR ds:[esi]
  41ef21:	add    BYTE PTR [esi+0x0],ah
  41ef24:	je     0x41ef26
  41ef26:	add    BYTE PTR cs:[ebx+0x0],ah
  41ef2a:	outs   dx,DWORD PTR ds:[esi]
  41ef2b:	add    BYTE PTR [ebp+0x0],ch
  41ef2e:	das    
  41ef2f:	add    BYTE PTR [esi+0x0],ah
  41ef32:	ja     0x41ef34
  41ef34:	ins    BYTE PTR es:[edi],dx
  41ef35:	add    BYTE PTR [ecx+0x0],ch
  41ef38:	outs   dx,BYTE PTR ds:[esi]
  41ef39:	add    BYTE PTR [ebx+0x0],ch
  41ef3c:	das    
  41ef3d:	add    BYTE PTR [edi],bh
  41ef3f:	add    BYTE PTR [eax+eax*1+0x69],cl
  41ef43:	add    BYTE PTR [esi+0x0],ch
  41ef46:	imul   eax,DWORD PTR [eax],0x49
  41ef49:	add    BYTE PTR [eax+eax*1+0x3d],ah
  41ef4d:	add    BYTE PTR [edi],dh
  41ef4f:	add    BYTE PTR [ecx],bh
  41ef51:	add    BYTE PTR ds:0x33003100,dh
  41ef57:	add    BYTE PTR [eax],al
  41ef59:	add    BYTE PTR [eax],al
  41ef5b:	add    BYTE PTR [eax+0x0],cl
  41ef5e:	inc    ebp
  41ef5f:	add    BYTE PTR [eax+eax*1+0x50],cl
  41ef63:	add    BYTE PTR [eax],al
  41ef65:	add    BYTE PTR [eax],al
  41ef67:	add    BYTE PTR [edi],ch
  41ef69:	add    BYTE PTR [ebx+0x0],dl
  41ef6c:	add    BYTE PTR [eax],al
  41ef6e:	add    BYTE PTR [eax],al
  41ef70:	das    
  41ef71:	add    BYTE PTR [edx+0x0],bl
  41ef74:	add    BYTE PTR [eax],al
  41ef76:	add    BYTE PTR [eax],al
  41ef78:	das    
  41ef79:	add    BYTE PTR [esi+0x0],al
  41ef7c:	add    BYTE PTR [eax],al
  41ef7e:	add    BYTE PTR [eax],al
  41ef80:	dec    ebp
  41ef81:	add    BYTE PTR [ecx+0x0],ch
  41ef84:	arpl   WORD PTR [eax],ax
  41ef86:	jb     0x41ef88
  41ef88:	outs   dx,DWORD PTR ds:[esi]
  41ef89:	add    BYTE PTR [ebx+0x0],dh
  41ef8c:	outs   dx,DWORD PTR ds:[esi]
  41ef8d:	add    BYTE PTR [esi+0x0],ah
  41ef90:	je     0x41ef92
  41ef92:	and    BYTE PTR [eax],al
  41ef94:	sub    BYTE PTR [eax],al
  41ef96:	push   edx
  41ef97:	add    BYTE PTR [ecx],ch
  41ef99:	add    BYTE PTR [eax],ah
  41ef9b:	add    BYTE PTR [ebp+0x0],cl
  41ef9e:	popa   
  41ef9f:	add    BYTE PTR [ebx+0x0],ah
  41efa2:	jb     0x41efa4
  41efa4:	outs   dx,DWORD PTR ds:[esi]
  41efa5:	add    BYTE PTR [eax],ah
  41efa7:	add    BYTE PTR [ecx+0x0],al
  41efaa:	jae    0x41efac
  41efac:	jae    0x41efae
  41efae:	add    BYTE PTR gs:[ebp+0x0],ch
  41efb2:	bound  eax,QWORD PTR [eax]
  41efb4:	ins    BYTE PTR es:[edi],dx
  41efb5:	add    BYTE PTR [ebp+0x0],ah
  41efb8:	jb     0x41efba
  41efba:	and    BYTE PTR [eax],al
  41efbc:	sub    BYTE PTR [eax],al
  41efbe:	js     0x41efc0
  41efc0:	add    BYTE PTR ss:[eax+eax*1],dh
  41efc4:	sub    DWORD PTR [eax],eax
  41efc6:	and    BYTE PTR [eax],al
  41efc8:	push   esi
  41efc9:	add    BYTE PTR [ebp+0x0],ah
  41efcc:	jb     0x41efce
  41efce:	jae    0x41efd0
  41efd0:	imul   eax,DWORD PTR [eax],0x6e006f
  41efd6:	and    BYTE PTR [eax],al
  41efd8:	xor    DWORD PTR [eax],eax
  41efda:	xor    DWORD PTR [eax],eax
  41efdc:	add    BYTE PTR cs:[eax],dh
  41efdf:	add    BYTE PTR [eax],dh
  41efe1:	add    BYTE PTR [esi],ch
  41efe3:	add    BYTE PTR ds:0x37003000,dh
  41efe9:	add    BYTE PTR [edx],dh
  41efeb:	add    BYTE PTR [edi],dh
  41efed:	add    BYTE PTR [esi],ch
  41efef:	add    BYTE PTR [ecx],dh
  41eff1:	add    BYTE PTR [edx],cl
  41eff3:	add    BYTE PTR [ebx+0x0],al
  41eff6:	outs   dx,DWORD PTR ds:[esi]
  41eff7:	add    BYTE PTR [eax+0x0],dh
  41effa:	jns    0x41effc
  41effc:	jb     0x41effe
  41effe:	imul   eax,DWORD PTR [eax],0x680067
  41f004:	je     0x41f006
  41f006:	and    BYTE PTR [eax],al
  41f008:	sub    BYTE PTR [eax],al
  41f00a:	inc    ebx
  41f00b:	add    BYTE PTR [ecx],ch
  41f00d:	add    BYTE PTR [eax],ah
  41f00f:	add    BYTE PTR [ebp+0x0],cl
  41f012:	imul   eax,DWORD PTR [eax],0x720063
  41f018:	outs   dx,DWORD PTR ds:[esi]
  41f019:	add    BYTE PTR [ebx+0x0],dh
  41f01c:	outs   dx,DWORD PTR ds:[esi]
  41f01d:	add    BYTE PTR [esi+0x0],ah
  41f020:	je     0x41f022
  41f022:	and    BYTE PTR [eax],al
  41f024:	inc    ebx
  41f025:	add    BYTE PTR [edi+0x0],ch
  41f028:	jb     0x41f02a
  41f02a:	jo     0x41f02c
  41f02c:	outs   dx,DWORD PTR ds:[esi]
  41f02d:	add    BYTE PTR [edx+0x0],dh
  41f030:	popa   
  41f031:	add    BYTE PTR [eax+eax*1+0x69],dh
  41f035:	add    BYTE PTR [edi+0x0],ch
  41f038:	outs   dx,BYTE PTR ds:[esi]
  41f039:	add    BYTE PTR [esi],ch
  41f03b:	add    BYTE PTR [eax],ah
  41f03d:	add    BYTE PTR [eax],ah
  41f03f:	add    BYTE PTR [ecx+0x0],al
  41f042:	ins    BYTE PTR es:[edi],dx
  41f043:	add    BYTE PTR [eax+eax*1+0x20],ch
  41f047:	add    BYTE PTR [edx+0x0],dh
  41f04a:	imul   eax,DWORD PTR [eax],0x680067
  41f050:	je     0x41f052
  41f052:	jae    0x41f054
  41f054:	and    BYTE PTR [eax],al
  41f056:	jb     0x41f058
  41f058:	add    BYTE PTR gs:[ebx+0x0],dh
  41f05c:	add    BYTE PTR gs:[edx+0x0],dh
  41f060:	jbe    0x41f062
  41f062:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
  41f067:	add    BYTE PTR [edx],cl
  41f069:	add    BYTE PTR [edx],cl
  41f06b:	add    BYTE PTR [eax],al
  41f06d:	add    BYTE PTR [eax],al
  41f06f:	add    BYTE PTR [ebp+0x0],dh
  41f072:	jae    0x41f074
  41f074:	popa   
  41f075:	add    BYTE PTR [edi+0x0],ah
  41f078:	add    BYTE PTR gs:[edx],bh
  41f07b:	add    BYTE PTR [eax],ah
  41f07d:	add    BYTE PTR [ebp+0x0],cl
  41f080:	dec    esp
  41f081:	add    BYTE PTR [esi],dh
  41f083:	add    BYTE PTR [eax+eax*1],dh
  41f086:	and    BYTE PTR [eax],al
  41f088:	pop    ebx
  41f089:	add    BYTE PTR [eax],ah
  41f08b:	add    BYTE PTR [edi+0x0],ch
  41f08e:	jo     0x41f090
  41f090:	je     0x41f092
  41f092:	imul   eax,DWORD PTR [eax],0x6e006f
  41f098:	jae    0x41f09a
  41f09a:	and    BYTE PTR [eax],al
  41f09c:	pop    ebp
  41f09d:	add    BYTE PTR [eax],ah
  41f09f:	add    BYTE PTR [esi+0x0],ah
  41f0a2:	imul   eax,DWORD PTR [eax],0x65006c
  41f0a8:	ins    BYTE PTR es:[edi],dx
  41f0a9:	add    BYTE PTR [ecx+0x0],ch
  41f0ac:	jae    0x41f0ae
  41f0ae:	je     0x41f0b0
  41f0b0:	and    BYTE PTR [eax],al
  41f0b2:	pop    ebx
  41f0b3:	add    BYTE PTR [eax],ah
  41f0b5:	add    BYTE PTR [edi],ch
  41f0b7:	add    BYTE PTR [eax+eax*1+0x69],ch
  41f0bb:	add    BYTE PTR [esi+0x0],ch
  41f0be:	imul   eax,DWORD PTR [eax],0x20
  41f0c1:	add    BYTE PTR [eax+eax*1+0x69],ch
  41f0c5:	add    BYTE PTR [esi+0x0],ch
  41f0c8:	imul   eax,DWORD PTR [eax],0x6f
  41f0cb:	add    BYTE PTR [eax+0x0],dh
  41f0ce:	je     0x41f0d0
  41f0d0:	imul   eax,DWORD PTR [eax],0x6e006f
  41f0d6:	jae    0x41f0d8
  41f0d8:	pop    ebp
  41f0d9:	add    BYTE PTR [edx],cl
  41f0db:	add    BYTE PTR [edx+0x0],dl
  41f0de:	jne    0x41f0e0
  41f0e0:	outs   dx,BYTE PTR ds:[esi]
  41f0e1:	add    BYTE PTR [eax],ah
  41f0e3:	add    BYTE PTR [edx],ah
  41f0e5:	add    BYTE PTR [ebp+0x0],cl
  41f0e8:	dec    esp
  41f0e9:	add    BYTE PTR [esi],dh
  41f0eb:	add    BYTE PTR [eax+eax*1],dh
  41f0ee:	and    BYTE PTR [eax],al
  41f0f0:	das    
  41f0f1:	add    BYTE PTR [eax+0x0],ch
  41f0f4:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
  41f0f9:	add    BYTE PTR [edx],ah
  41f0fb:	add    BYTE PTR [eax],ah
  41f0fd:	add    BYTE PTR [edi+0x0],ch
  41f100:	jb     0x41f102
  41f102:	and    BYTE PTR [eax],al
  41f104:	and    al,BYTE PTR [eax]
  41f106:	dec    ebp
  41f107:	add    BYTE PTR [eax+eax*1+0x36],cl
  41f10b:	add    BYTE PTR [eax+eax*1],dh
  41f10e:	and    BYTE PTR [eax],al
  41f110:	das    
  41f111:	add    BYTE PTR [edi],bh
  41f113:	add    BYTE PTR [edx],ah
  41f115:	add    BYTE PTR [eax],ah
  41f117:	add    BYTE PTR [esi+0x0],ah
  41f11a:	outs   dx,DWORD PTR ds:[esi]
  41f11b:	add    BYTE PTR [edx+0x0],dh
  41f11e:	and    BYTE PTR [eax],al
  41f120:	ins    DWORD PTR es:[edi],dx
  41f121:	add    BYTE PTR [edi+0x0],ch
  41f124:	jb     0x41f126
  41f126:	add    BYTE PTR gs:[eax],ah
  41f129:	add    BYTE PTR [ecx+0x0],ch
  41f12c:	outs   dx,BYTE PTR ds:[esi]
  41f12d:	add    BYTE PTR [esi+0x0],ah
  41f130:	outs   dx,DWORD PTR ds:[esi]
  41f131:	add    BYTE PTR [edx],cl
  41f133:	add    BYTE PTR [eax],al
  41f135:	add    BYTE PTR [eax],al
  41f137:	add    BYTE PTR [edx],ah
  41f139:	add    BYTE PTR [eax],al
  41f13b:	add    BYTE PTR ds:0xa00,cl
  41f141:	add    BYTE PTR [eax],al
  41f143:	add    BYTE PTR [esi],ch
  41f145:	add    BYTE PTR [ebp+0x0],ah
  41f148:	js     0x41f14a
  41f14a:	add    BYTE PTR gs:[eax],al
  41f14d:	add    BYTE PTR [eax],al
  41f14f:	add    bh,bh
  41f151:	inc    BYTE PTR [eax]
  41f153:	add    BYTE PTR [edi],ch
  41f155:	add    BYTE PTR [eax+eax*1+0x45],al
  41f159:	add    BYTE PTR [edx+0x0],al
  41f15c:	push   ebp
  41f15d:	add    BYTE PTR [edi+0x0],al
  41f160:	or     eax,0xa00
  41f165:	add    BYTE PTR [eax],al
  41f167:	add    BYTE PTR [edi],ch
  41f169:	add    BYTE PTR [eax+eax*1+0x45],al
  41f16d:	add    BYTE PTR [esi+0x0],al
  41f170:	cmp    al,BYTE PTR [eax]
  41f172:	add    BYTE PTR [eax],al
  41f174:	add    BYTE PTR cs:[ebp+0x0],ch
  41f178:	popa   
  41f179:	add    BYTE PTR [eax+0x0],dh
  41f17c:	add    BYTE PTR [eax],al
  41f17e:	add    BYTE PTR [eax],al
  41f180:	das    
  41f181:	add    BYTE PTR [ebp+0x0],cl
  41f184:	inc    ecx
  41f185:	add    BYTE PTR [eax+0x0],dl
  41f188:	cmp    al,BYTE PTR [eax]
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	das    
  41f18d:	add    BYTE PTR [edi+0x0],cl
  41f190:	push   ebp
  41f191:	add    BYTE PTR [eax+eax*1+0x3a],dl
  41f195:	add    BYTE PTR [eax],al
  41f197:	add    BYTE PTR [edi],ch
  41f199:	add    BYTE PTR [ebx+0x0],dl
  41f19c:	push   esp
  41f19d:	add    BYTE PTR [ecx+0x0],al
  41f1a0:	inc    ebx
  41f1a1:	add    BYTE PTR [ebx+0x0],cl
  41f1a4:	cmp    al,BYTE PTR [eax]
  41f1a6:	xor    BYTE PTR [eax],al
  41f1a8:	js     0x41f1aa
  41f1aa:	add    BYTE PTR [eax],al
  41f1ac:	ins    BYTE PTR es:[edi],dx
  41f1ad:	add    BYTE PTR [ecx+0x0],ch
  41f1b0:	outs   dx,BYTE PTR ds:[esi]
  41f1b1:	add    BYTE PTR [ebx+0x0],ch
  41f1b4:	add    BYTE PTR cs:[ebp+0x0],ah
  41f1b8:	js     0x41f1ba
  41f1ba:	add    BYTE PTR gs:[eax],al
  41f1bd:	add    BYTE PTR [eax],al
  41f1bf:	add    BYTE PTR [eax+0x0],al
  41f1c2:	ins    DWORD PTR es:[edi],dx
  41f1c3:	add    BYTE PTR [eax+eax*1+0x6c],ch
  41f1c7:	add    BYTE PTR [ecx+0x0],ch
  41f1ca:	outs   dx,BYTE PTR ds:[esi]
  41f1cb:	add    BYTE PTR [ebx+0x0],ch
  41f1ce:	and    al,0x0
  41f1d0:	add    BYTE PTR cs:[eax+eax*1+0x6e],ch
  41f1d5:	add    BYTE PTR [ebx+0x0],ch
  41f1d8:	add    BYTE PTR [eax],al
  41f1da:	add    BYTE PTR [eax],al
  41f1dc:	dec    ebp
  41f1dd:	add    BYTE PTR [ecx+0x0],ch
  41f1e0:	arpl   WORD PTR [eax],ax
  41f1e2:	jb     0x41f1e4
  41f1e4:	outs   dx,DWORD PTR ds:[esi]
  41f1e5:	add    BYTE PTR [ebx+0x0],dh
  41f1e8:	outs   dx,DWORD PTR ds:[esi]
  41f1e9:	add    BYTE PTR [esi+0x0],ah
  41f1ec:	je     0x41f1ee
  41f1ee:	scas   al,BYTE PTR es:[edi]
  41f1ef:	add    BYTE PTR [eax],ah
  41f1f1:	add    BYTE PTR [ebp+0x0],cl
  41f1f4:	popa   
  41f1f5:	add    BYTE PTR [ebx+0x0],ah
  41f1f8:	jb     0x41f1fa
  41f1fa:	outs   dx,DWORD PTR ds:[esi]
  41f1fb:	add    BYTE PTR [eax],ah
  41f1fd:	add    BYTE PTR [ecx+0x0],al
  41f200:	jae    0x41f202
  41f202:	jae    0x41f204
  41f204:	add    BYTE PTR gs:[ebp+0x0],ch
  41f208:	bound  eax,QWORD PTR [eax]
  41f20a:	ins    BYTE PTR es:[edi],dx
  41f20b:	add    BYTE PTR [ebp+0x0],ah
  41f20e:	jb     0x41f210
  41f210:	add    BYTE PTR [eax],al
  41f212:	add    BYTE PTR [eax],al
  41f214:	ins    DWORD PTR es:[edi],dx
  41f215:	add    BYTE PTR [ebx+0x0],dh
  41f218:	jbe    0x41f21a
  41f21a:	arpl   WORD PTR [eax],ax
  41f21c:	jb     0x41f21e
  41f21e:	xor    DWORD PTR [eax],eax
  41f220:	xor    DWORD PTR [eax],eax
  41f222:	xor    BYTE PTR [eax],al
  41f224:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
  41f229:	add    BYTE PTR [eax+eax*1+0x0],ch
  41f22d:	add    BYTE PTR [eax],al
  41f22f:	add    BYTE PTR [edx+0x0],ah
  41f232:	jns    0x41f234
  41f234:	and    BYTE PTR [eax],al
  41f236:	and    eax,0x20006400
  41f23b:	add    BYTE PTR [edx+0x0],ah
  41f23e:	jns    0x41f240
  41f240:	je     0x41f242
  41f242:	add    BYTE PTR gs:[eax],ch
  41f245:	add    BYTE PTR [ebx+0x0],dh
  41f248:	sub    DWORD PTR [eax],eax
  41f24a:	add    BYTE PTR [eax],al
  41f24c:	sub    esp,ebx
  41f24e:	inc    edx
  41f24f:	add    BYTE PTR [eax],bh
  41f251:	fadd   QWORD PTR [edx+0x0]
  41f254:	pop    edi
  41f255:	fadd   QWORD PTR [edx+0x0]
  41f258:	jae    0x41f2cc
  41f25a:	arpl   WORD PTR [eax],ax
  41f25c:	gs js  0x41f2c4
  41f25f:	add    BYTE PTR [ebx+0x77],ah
  41f262:	add    BYTE PTR fs:0x7300,ah
  41f269:	add    BYTE PTR [eax],al
  41f26b:	add    BYTE PTR [ebp+0x0],cl
  41f26e:	popa   
  41f26f:	add    BYTE PTR [ecx+0x0],ch
  41f272:	outs   dx,BYTE PTR ds:[esi]
  41f273:	add    BYTE PTR [eax],ah
  41f275:	add    BYTE PTR [eax+eax*1+0x69],cl
  41f279:	add    BYTE PTR [esi+0x0],ch
  41f27c:	add    BYTE PTR gs:[eax],ah
  41f27f:	add    BYTE PTR [ebx+0x0],al
  41f282:	outs   dx,DWORD PTR ds:[esi]
  41f283:	add    BYTE PTR [eax+eax*1+0x65],ah
  41f287:	add    BYTE PTR [eax],al
  41f289:	add    BYTE PTR [eax],al
  41f28b:	add    BYTE PTR [ecx+0x0],cl
  41f28e:	outs   dx,BYTE PTR ds:[esi]
  41f28f:	add    BYTE PTR [ebx+0x0],ah
  41f292:	ins    BYTE PTR es:[edi],dx
  41f293:	add    BYTE PTR [ebp+0x0],dh
  41f296:	add    BYTE PTR fs:[ebp+0x0],ah
  41f29a:	and    BYTE PTR [eax],al
  41f29c:	inc    esi
  41f29d:	add    BYTE PTR [ecx+0x0],ch
  41f2a0:	ins    BYTE PTR es:[edi],dx
  41f2a1:	add    BYTE PTR [ebp+0x0],ah
  41f2a4:	add    BYTE PTR [eax],al
  41f2a6:	add    BYTE PTR [eax],al
  41f2a8:	sub    BYTE PTR [eax],al
  41f2aa:	and    eax,0x29007500
  41f2af:	add    BYTE PTR [edx],bh
  41f2b1:	add    BYTE PTR [eax],ah
  41f2b3:	add    BYTE PTR ds:0x7300,ah
  41f2b9:	add    BYTE PTR [eax],al
  41f2bb:	add    BYTE PTR ds:0x4200,ah
  41f2c1:	add    BYTE PTR [eax],al
  41f2c3:	add    BYTE PTR [ebp+0x0],cl
  41f2c6:	popa   
  41f2c7:	add    BYTE PTR [ebx+0x0],ah
  41f2ca:	jb     0x41f2cc
  41f2cc:	outs   dx,DWORD PTR ds:[esi]
  41f2cd:	add    BYTE PTR [eax],ah
  41f2cf:	add    BYTE PTR [ebx+0x0],al
  41f2d2:	popa   
  41f2d3:	add    BYTE PTR [eax+eax*1+0x6c],ch
  41f2d7:	add    BYTE PTR [ebp+0x0],ah
  41f2da:	add    BYTE PTR fs:[eax],ah
  41f2dd:	add    BYTE PTR [esi+0x0],al
  41f2e0:	jb     0x41f2e2
  41f2e2:	outs   dx,DWORD PTR ds:[esi]
  41f2e3:	add    BYTE PTR [ebp+0x0],ch
  41f2e6:	add    BYTE PTR [eax],al
  41f2e8:	dec    ebp
  41f2e9:	add    BYTE PTR [ecx+0x0],ah
  41f2ec:	arpl   WORD PTR [eax],ax
  41f2ee:	jb     0x41f2f0
  41f2f0:	outs   dx,DWORD PTR ds:[esi]
  41f2f1:	add    BYTE PTR [eax+eax*1+0x6f],cl
  41f2f5:	add    BYTE PTR [edi+0x0],ch
  41f2f8:	jo     0x41f2fa
  41f2fa:	add    BYTE PTR [eax],al
  41f2fc:	add    BYTE PTR [eax],al
  41f2fe:	add    BYTE PTR [eax],al
  41f300:	sub    BYTE PTR [eax],al
  41f302:	and    eax,0x29007500
  41f307:	add    BYTE PTR [edx],bh
  41f309:	add    BYTE PTR [eax],ah
  41f30b:	add    BYTE PTR ds:0x74006900,ah
  41f311:	add    BYTE PTR [ebp+0x0],ah
  41f314:	jb     0x41f316
  41f316:	popa   
  41f317:	add    BYTE PTR [eax+eax*1+0x69],dh
  41f31b:	add    BYTE PTR [edi+0x0],ch
  41f31e:	outs   dx,BYTE PTR ds:[esi]
  41f31f:	add    BYTE PTR [eax],ah
  41f321:	add    BYTE PTR ds:0x3a007500,ah
  41f327:	add    BYTE PTR [eax],ah
  41f329:	add    BYTE PTR [ebp+0x0],cl
  41f32c:	popa   
  41f32d:	add    BYTE PTR [ebx+0x0],ah
  41f330:	jb     0x41f332
  41f332:	outs   dx,DWORD PTR ds:[esi]
  41f333:	add    BYTE PTR [eax],ah
  41f335:	add    BYTE PTR [ebx+0x0],al
  41f338:	popa   
  41f339:	add    BYTE PTR [eax+eax*1+0x6c],ch
  41f33d:	add    BYTE PTR [ebp+0x0],ah
  41f340:	add    BYTE PTR fs:[eax],ah
  41f343:	add    BYTE PTR [esi+0x0],al
  41f346:	jb     0x41f348
  41f348:	outs   dx,DWORD PTR ds:[esi]
  41f349:	add    BYTE PTR [ebp+0x0],ch
  41f34c:	and    BYTE PTR [eax],al
  41f34e:	add    BYTE PTR [eax],al
  41f350:	or     al,BYTE PTR [eax]
  41f352:	add    BYTE PTR [eax],al
  41f354:	and    eax,0x28007300
  41f359:	add    BYTE PTR ds:0x29007500,ah
  41f35f:	add    BYTE PTR [eax],al
  41f361:	add    BYTE PTR [eax],al
  41f363:	add    BYTE PTR [ebp+0x0],cl
  41f366:	inc    ecx
  41f367:	add    BYTE PTR [ebx+0x0],dl
  41f36a:	dec    ebp
  41f36b:	add    BYTE PTR [eax],al
  41f36d:	add    BYTE PTR [eax],al
  41f36f:	add    BYTE PTR [edi+0x0],dh
  41f372:	popa   
  41f373:	add    BYTE PTR [edx+0x0],dh
  41f376:	outs   dx,BYTE PTR ds:[esi]
  41f377:	add    BYTE PTR [ecx+0x0],ch
  41f37a:	outs   dx,BYTE PTR ds:[esi]
  41f37b:	add    BYTE PTR [edi+0x0],ah
  41f37e:	add    BYTE PTR [eax],al
  41f380:	data16 add BYTE PTR [ecx+0x0],ah
  41f384:	je     0x41f386
  41f386:	popa   
  41f387:	add    BYTE PTR [eax+eax*1+0x20],ch
  41f38b:	add    BYTE PTR [ebp+0x0],ah
  41f38e:	jb     0x41f390
  41f390:	jb     0x41f392
  41f392:	outs   dx,DWORD PTR ds:[esi]
  41f393:	add    BYTE PTR [edx+0x0],dh
  41f396:	add    BYTE PTR [eax],al
  41f398:	add    BYTE PTR gs:[edx+0x0],dh
  41f39c:	jb     0x41f39e
  41f39e:	outs   dx,DWORD PTR ds:[esi]
  41f39f:	add    BYTE PTR [edx+0x0],dh
  41f3a2:	add    BYTE PTR [eax],al
  41f3a4:	and    BYTE PTR [eax],al
  41f3a6:	cmp    al,BYTE PTR [eax]
  41f3a8:	and    BYTE PTR [eax],al
  41f3aa:	and    eax,0x20007300
  41f3af:	add    BYTE PTR [ecx+0x0],al
  41f3b2:	and    eax,0x3a007500
  41f3b7:	add    BYTE PTR ds:0x7300,ah
  41f3bd:	add    BYTE PTR [eax],al
  41f3bf:	add    BYTE PTR [eax],ah
  41f3c1:	add    BYTE PTR [edx],bh
  41f3c3:	add    BYTE PTR [eax],ah
  41f3c5:	add    BYTE PTR ds:0x6200,ah
  41f3cb:	add    BYTE PTR ds:0x2a002e00,ah
  41f3d1:	add    BYTE PTR [ebx+0x0],dl
  41f3d4:	or     al,BYTE PTR [eax]
  41f3d6:	add    BYTE PTR [eax],al
  41f3d8:	push   ds
  41f3d9:	add    al,0x0
  41f3db:	add    eax,0x31c
  41f3e0:	popa   
  41f3e1:	ins    BYTE PTR es:[edi],dx
  41f3e2:	add    BYTE PTR [eax],al
  41f3e4:	arpl   WORD PTR [eax+eax*1+0x0],bp
  41f3e8:	fs ins BYTE PTR es:[edi],dx
  41f3ea:	add    BYTE PTR [eax],al
  41f3ec:	bound  ebp,QWORD PTR [eax+eax*1+0x0]
  41f3f0:	jae    0x41f462
  41f3f2:	ins    BYTE PTR es:[edi],dx
  41f3f3:	add    BYTE PTR [edx+0x70],ah
  41f3f6:	ins    BYTE PTR es:[edi],dx
  41f3f7:	add    BYTE PTR [ebx+0x69],dh
  41f3fa:	ins    BYTE PTR es:[edi],dx
  41f3fb:	add    BYTE PTR [ecx+ebp*2+0x6c],ah
  41f3ff:	add    BYTE PTR [edx+0x38],dh
  41f402:	ja     0x41f404
  41f404:	jb     0x41f43f
  41f406:	ja     0x41f408
  41f408:	jb     0x41f43b
  41f40a:	xor    BYTE PTR [edi+0x0],dh
  41f40d:	add    BYTE PTR [eax],al
  41f40f:	add    BYTE PTR [edx+0x31],dh
  41f412:	xor    DWORD PTR [edi+0x0],esi
  41f415:	add    BYTE PTR [eax],al
  41f417:	add    BYTE PTR [edx+0x31],dh
  41f41a:	xor    dh,BYTE PTR [edi+0x0]
  41f41d:	add    BYTE PTR [eax],al
  41f41f:	add    BYTE PTR [edx+0x31],dh
  41f422:	xor    esi,DWORD PTR [edi+0x0]
  41f425:	add    BYTE PTR [eax],al
  41f427:	add    BYTE PTR [edx+0x31],dh
  41f42a:	xor    al,0x77
  41f42c:	add    BYTE PTR [eax],al
  41f42e:	add    BYTE PTR [eax],al
  41f430:	jb     0x41f463
  41f432:	xor    eax,0x77
  41f437:	add    BYTE PTR [ecx+0x68],ah
  41f43a:	add    BYTE PTR [eax],al
  41f43c:	arpl   WORD PTR [eax+0x0],bp
  41f43f:	add    BYTE PTR [eax+ebp*2+0x0],ah
  41f443:	add    BYTE PTR [edx+0x68],ah
  41f446:	add    BYTE PTR [eax],al
  41f448:	popa   
  41f449:	js     0x41f44b
  41f44b:	add    BYTE PTR [ebx+0x78],ah
  41f44e:	add    BYTE PTR [eax],al
  41f450:	fs js  0x41f453
  41f453:	add    BYTE PTR [edx+0x78],ah
  41f456:	add    BYTE PTR [eax],al
  41f458:	jae    0x41f4ca
  41f45a:	add    BYTE PTR [eax],al
  41f45c:	bound  esi,QWORD PTR [eax+0x0]
  41f45f:	add    BYTE PTR [ebx+0x69],dh
  41f462:	add    BYTE PTR [eax],al
  41f464:	imul   eax,DWORD PTR fs:[eax],0x78616500
  41f46b:	add    BYTE PTR [ebp+0x63],ah
  41f46e:	js     0x41f470
  41f470:	gs fs js 0x41f474
  41f474:	bound  edi,QWORD PTR gs:[eax+0x0]
  41f478:	gs jae 0x41f4eb
  41f47b:	add    BYTE PTR [ebp+0x62],ah
  41f47e:	jo     0x41f480
  41f480:	gs jae 0x41f4ec
  41f483:	add    BYTE PTR [ebp+0x64],ah
  41f486:	imul   eax,DWORD PTR [eax],0x643872
  41f48c:	jb     0x41f4c7
  41f48e:	add    BYTE PTR fs:[edx+0x31],dh
  41f492:	xor    BYTE PTR [eax+eax*1+0x0],ah
  41f496:	add    BYTE PTR [eax],al
  41f498:	jb     0x41f4cb
  41f49a:	xor    DWORD PTR [eax+eax*1+0x0],esp
  41f49e:	add    BYTE PTR [eax],al
  41f4a0:	jb     0x41f4d3
  41f4a2:	xor    ah,BYTE PTR [eax+eax*1+0x0]
  41f4a6:	add    BYTE PTR [eax],al
  41f4a8:	jb     0x41f4db
  41f4aa:	xor    esp,DWORD PTR [eax+eax*1+0x0]
  41f4ae:	add    BYTE PTR [eax],al
  41f4b0:	jb     0x41f4e3
  41f4b2:	xor    al,0x64
  41f4b4:	add    BYTE PTR [eax],al
  41f4b6:	add    BYTE PTR [eax],al
  41f4b8:	jb     0x41f4eb
  41f4ba:	xor    eax,0x64
  41f4bf:	add    BYTE PTR [edx+0x61],dh
  41f4c2:	js     0x41f4c4
  41f4c4:	jb     0x41f529
  41f4c6:	js     0x41f4c8
  41f4c8:	jb     0x41f52e
  41f4ca:	js     0x41f4cc
  41f4cc:	jb     0x41f530
  41f4ce:	js     0x41f4d0
  41f4d0:	jb     0x41f545
  41f4d2:	jo     0x41f4d4
  41f4d4:	jb     0x41f538
  41f4d6:	jo     0x41f4d8
  41f4d8:	jb     0x41f54d
  41f4da:	imul   eax,DWORD PTR [eax],0x696472
  41f4e0:	jb     0x41f51a
  41f4e2:	add    BYTE PTR [eax],al
  41f4e4:	jb     0x41f51f
  41f4e6:	add    BYTE PTR [eax],al
  41f4e8:	jb     0x41f51b
  41f4ea:	xor    BYTE PTR [eax],al
  41f4ec:	jb     0x41f51f
  41f4ee:	xor    DWORD PTR [eax],eax
  41f4f0:	jb     0x41f523
  41f4f2:	xor    al,BYTE PTR [eax]
  41f4f4:	jb     0x41f527
  41f4f6:	xor    eax,DWORD PTR [eax]
  41f4f8:	jb     0x41f52b
  41f4fa:	xor    al,0x0
  41f4fc:	jb     0x41f52f
  41f4fe:	xor    eax,0x726300
  41f503:	add    BYTE PTR [edx+esi*2+0x0],ah
  41f507:	add    BYTE PTR [ebx+esi*2+0x0],ah
  41f50b:	add    BYTE PTR [ebx+0x73],dh
  41f50e:	add    BYTE PTR [eax],al
  41f510:	gs jae 0x41f513
  41f513:	add    BYTE PTR [esi+0x73],ah
  41f516:	add    BYTE PTR [eax],al
  41f518:	addr16 jae 0x41f51b
  41f51b:	add    BYTE PTR [ebx+0x73],ah
  41f51e:	add    BYTE PTR [eax],al
  41f520:	xor    al,BYTE PTR [eax]
  41f522:	add    BYTE PTR [eax],al
  41f524:	xor    al,0x0
  41f526:	add    BYTE PTR [eax],al
  41f528:	cmp    BYTE PTR [eax],al
  41f52a:	add    BYTE PTR [eax],al
  41f52c:	bound  edi,QWORD PTR [ecx+0x74]
  41f52f:	and    BYTE PTR gs:[eax],al
  41f532:	add    BYTE PTR [eax],al
  41f534:	ja     0x41f5a5
  41f536:	jb     0x41f59c
  41f538:	and    BYTE PTR [eax],al
  41f53a:	add    BYTE PTR [eax],al
  41f53c:	fs ja  0x41f5ae
  41f53f:	jb     0x41f5a5
  41f541:	and    BYTE PTR [eax],al
  41f543:	add    BYTE PTR [esi+0x77],ah
  41f546:	outs   dx,DWORD PTR ds:[esi]
  41f547:	jb     0x41f5ad
  41f549:	and    BYTE PTR [eax],al
  41f54b:	add    BYTE PTR [ecx+0x77],dh
  41f54e:	outs   dx,DWORD PTR ds:[esi]
  41f54f:	jb     0x41f5b5
  41f551:	and    BYTE PTR [eax],al
  41f553:	add    BYTE PTR [edx+eiz*2+0x79],dh
  41f557:	je     0x41f5be
  41f559:	and    BYTE PTR [eax],al
  41f55b:	add    BYTE PTR [esi+0x65],ch
  41f55e:	popa   
  41f55f:	jb     0x41f581
  41f561:	add    BYTE PTR [eax],al
  41f563:	add    BYTE PTR [esi+0x61],ah
  41f566:	jb     0x41f588
  41f568:	add    BYTE PTR [eax],al
  41f56a:	add    BYTE PTR [eax],al
  41f56c:	and    BYTE PTR [esi+0x69],al
  41f56f:	jb     0x41f5e4
  41f571:	je     0x41f593
  41f573:	push   eax
  41f574:	popa   
  41f575:	jae    0x41f5ea
  41f577:	add    BYTE PTR [eax],ah
  41f579:	push   ebx
  41f57a:	jns    0x41f5e9
  41f57c:	bound  ebp,QWORD PTR [edi+0x6c]
  41f57f:	jae    0x41f581
  41f581:	add    BYTE PTR [eax],al
  41f583:	add    BYTE PTR [eax],ah
  41f585:	push   eax
  41f586:	popa   
  41f587:	add    BYTE PTR gs:[bx+si],al
  41f58b:	add    BYTE PTR [eax],ah
  41f58d:	sub    eax,0x2a0000
  41f592:	add    BYTE PTR [eax],al
  41f594:	cmp    cl,BYTE PTR ds:0x3d20000a
  41f59a:	add    BYTE PTR [eax],al
  41f59c:	and    BYTE PTR ds:0x20200020,bh
  41f5a2:	and    BYTE PTR [eax],al
  41f5a4:	jae    0x41f5a6
  41f5a6:	add    BYTE PTR [eax],al
  41f5a8:	and    BYTE PTR [eax+0x74],dh
  41f5ab:	jb     0x41f5cd
  41f5ad:	add    BYTE PTR [eax],al
  41f5af:	add    BYTE PTR [eax],ah
  41f5b1:	add    BYTE PTR [eax],al
  41f5b3:	add    BYTE PTR [edx],bh
  41f5b5:	add    BYTE PTR [eax],al
  41f5b7:	add    BYTE PTR [eax],ch
  41f5b9:	push   esp
  41f5ba:	dec    eax
  41f5bb:	dec    ecx
  41f5bc:	push   ebx
  41f5bd:	and    BYTE PTR [eax],al
  41f5bf:	add    BYTE PTR [ecx],ch
  41f5c1:	add    BYTE PTR [eax],al
  41f5c3:	add    BYTE PTR [ebx+0x0],bl
  41f5c6:	add    BYTE PTR [eax],al
  41f5c8:	sub    eax,DWORD PTR [eax]
  41f5ca:	add    BYTE PTR [eax],al
  41f5cc:	pop    ebp
  41f5cd:	add    BYTE PTR [eax],al
  41f5cf:	add    BYTE PTR [edi+0x46],cl
  41f5d2:	inc    esi
  41f5d3:	push   ebx
  41f5d4:	inc    ebp
  41f5d5:	push   esp
  41f5d6:	and    BYTE PTR [eax],al
  41f5d8:	cmp    ah,BYTE PTR [eax]
  41f5da:	add    BYTE PTR [eax],al
  41f5dc:	and    al,0x20
  41f5de:	add    BYTE PTR [eax],al
  41f5e0:	daa    
  41f5e1:	add    BYTE PTR [eax],al
  41f5e3:	add    BYTE PTR [ebx+0x0],bh
  41f5e6:	add    BYTE PTR [eax],al
  41f5e8:	jge    0x41f5ea
  41f5ea:	add    BYTE PTR [eax],al
  41f5ec:	cmp    al,0x0
  41f5ee:	add    BYTE PTR [eax],al
  41f5f0:	add    BYTE PTR ds:[eax],al
  41f5f3:	add    BYTE PTR [eax+eiz*1],ch
  41f5f6:	add    BYTE PTR [eax],al
  41f5f8:	or     eax,0x4300000a
  41f5fd:	and    BYTE PTR [eax],al
  41f5ff:	add    BYTE PTR [eax],ah
  41f601:	pop    ebx
  41f602:	add    BYTE PTR [eax],al
  41f604:	xor    DWORD PTR [eax],eax
  41f606:	add    BYTE PTR [eax],al
  41f608:	xor    DWORD PTR [esi],esi
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	xor    esi,DWORD PTR [edx]
  41f60e:	add    BYTE PTR [eax],al
  41f610:	ss xor al,0x0
  41f613:	add    BYTE PTR [ecx],dh
  41f615:	xor    bh,BYTE PTR [eax]
  41f617:	add    BYTE PTR [edx],dh
  41f619:	xor    eax,0x31350036
  41f61e:	xor    al,BYTE PTR [eax]
  41f620:	xor    DWORD PTR [eax],esi
  41f622:	xor    dh,BYTE PTR [eax+eax*1]
  41f625:	add    BYTE PTR [eax],al
  41f627:	add    BYTE PTR [edx],dh
  41f629:	xor    BYTE PTR [eax+edi*1],dh
  41f62c:	add    BYTE PTR [eax],al
  41f62e:	add    BYTE PTR [eax],al
  41f630:	xor    al,0x30
  41f632:	cmp    DWORD PTR [esi],esi
  41f634:	add    BYTE PTR [eax],al
  41f636:	add    BYTE PTR [eax],al
  41f638:	cmp    BYTE PTR [ecx],dh
  41f63a:	cmp    DWORD PTR [edx],esi
  41f63c:	add    BYTE PTR [eax],al
  41f63e:	add    BYTE PTR [eax],al
  41f640:	push   eax
  41f641:	jb     0x41f6ac
  41f643:	jbe    0x41f6a6
  41f645:	je     0x41f6ac
  41f647:	add    BYTE PTR [eax+0x75],dl
  41f64a:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  41f64e:	add    BYTE PTR [eax],al
  41f650:	inc    edx
  41f651:	jns    0x41f6c7
  41f653:	add    BYTE PTR gs:[eax],al
  41f656:	add    BYTE PTR [eax],al
  41f658:	push   edi
  41f659:	outs   dx,DWORD PTR ds:[esi]
  41f65a:	jb     0x41f6c0
  41f65c:	add    BYTE PTR [eax],al
  41f65e:	add    BYTE PTR [eax],al
  41f660:	push   ebx
  41f661:	je     0x41f6d5
  41f663:	jne    0x41f6c8
  41f665:	je     0x41f667
  41f667:	add    BYTE PTR [edi+edx*2+0x6f],al
  41f66b:	jb     0x41f6d1
  41f66d:	add    BYTE PTR [eax],al
  41f66f:	add    BYTE PTR [esi+0x57],al
  41f672:	outs   dx,DWORD PTR ds:[esi]
  41f673:	jb     0x41f6d9
  41f675:	add    BYTE PTR [eax],al
  41f677:	add    BYTE PTR [ecx+0x57],dl
  41f67a:	outs   dx,DWORD PTR ds:[esi]
  41f67b:	jb     0x41f6e1
  41f67d:	add    BYTE PTR [eax],al
  41f67f:	add    BYTE PTR [edx+eax*2+0x79],dl
  41f683:	je     0x41f6ea
  41f685:	add    BYTE PTR [eax],al
  41f687:	add    BYTE PTR [eax+0x6d],bl
  41f68a:	ins    DWORD PTR es:[edi],dx
  41f68b:	push   edi
  41f68c:	outs   dx,DWORD PTR ds:[esi]
  41f68d:	jb     0x41f6f3
  41f68f:	add    BYTE PTR [ecx+0x6d],bl
  41f692:	ins    DWORD PTR es:[edi],dx
  41f693:	push   edi
  41f694:	outs   dx,DWORD PTR ds:[esi]
  41f695:	jb     0x41f6fb
  41f697:	add    BYTE PTR [eax],ah
  41f699:	push   edi
  41f69a:	popa   
  41f69b:	jb     0x41f70b
  41f69d:	imul   ebp,DWORD PTR [esi+0x67],0xa0d73
  41f6a4:	and    BYTE PTR [ebp+0x72],al
  41f6a7:	jb     0x41f718
  41f6a9:	jb     0x41f71e
  41f6ab:	or     eax,0xa
  41f6b0:	push   eax
  41f6b1:	jb     0x41f722
  41f6b3:	arpl   WORD PTR [eax],ax
  41f6b5:	add    BYTE PTR [eax],al
  41f6b7:	add    BYTE PTR [esi+0x75],al
  41f6ba:	outs   dx,BYTE PTR ds:[esi]
  41f6bb:	arpl   WORD PTR [eax],ax
  41f6bd:	add    BYTE PTR [eax],al
  41f6bf:	add    BYTE PTR [esi+0x61],al
  41f6c2:	jb     0x41f6e4
  41f6c4:	add    BYTE PTR [eax],al
  41f6c6:	add    BYTE PTR [eax],al
  41f6c8:	push   eax
  41f6c9:	push   esp
  41f6ca:	push   edx
  41f6cb:	add    BYTE PTR [edi],bh
  41f6cd:	add    BYTE PTR [eax],al
  41f6cf:	add    BYTE PTR [edx+0x65],dl
  41f6d2:	popa   
  41f6d3:	fs dec edi
  41f6d5:	outs   dx,BYTE PTR ds:[esi]
  41f6d6:	ins    BYTE PTR es:[edi],dx
  41f6d7:	jns    0x41f6d9
  41f6d9:	add    BYTE PTR [eax],al
  41f6db:	add    BYTE PTR [eax+0x20],dl
  41f6de:	add    BYTE PTR [eax],al
  41f6e0:	dec    esp
  41f6e1:	and    BYTE PTR [eax],al
  41f6e3:	add    BYTE PTR [ebx+0x4f],al
  41f6e6:	dec    ebp
  41f6e7:	dec    ebp
  41f6e8:	and    BYTE PTR [eax],al
  41f6ea:	add    BYTE PTR [eax],al
  41f6ec:	dec    esp
  41f6ed:	outs   dx,BYTE PTR gs:[esi]
  41f6ef:	addr16 je 0x41f75a
  41f6f2:	cmp    eax,0x756f4300
  41f6f7:	outs   dx,BYTE PTR ds:[esi]
  41f6f8:	je     0x41f737
  41f6fa:	add    BYTE PTR [eax],al
  41f6fc:	dec    esi
  41f6fd:	jne    0x41f76c
  41f6ff:	bound  esp,QWORD PTR [ebp+0x72]
  41f702:	add    BYTE PTR [eax],al
  41f704:	inc    edx
  41f705:	jns    0x41f77b
  41f707:	and    BYTE PTR gs:[eax],ah
  41f70a:	add    BYTE PTR [eax],al
  41f70c:	push   edi
  41f70d:	outs   dx,DWORD PTR ds:[esi]
  41f70e:	jb     0x41f774
  41f710:	and    BYTE PTR [eax],ah
  41f712:	add    BYTE PTR [eax],al
  41f714:	inc    esp
  41f715:	push   edi
  41f716:	outs   dx,DWORD PTR ds:[esi]
  41f717:	jb     0x41f77d
  41f719:	and    BYTE PTR [eax],al
  41f71b:	add    BYTE PTR [eax+0x0],ch
  41f71e:	add    BYTE PTR [eax],al
  41f720:	push   esp
  41f721:	gs js  0x41f798
  41f724:	and    BYTE PTR [eax],ah
  41f726:	and    BYTE PTR [eax],al
  41f728:	jb     0x41f78c
  41f72a:	jo     0x41f74c
  41f72c:	sub    eax,0x72000000
  41f731:	bound  esi,QWORD PTR [eax+0x20]
  41f734:	sub    eax,DWORD PTR [eax]
  41f736:	add    BYTE PTR [eax],al
  41f738:	inc    ebp
  41f739:	js     0x41f7af
  41f73b:	gs jb  0x41f7ac
  41f73e:	popa   
  41f73f:	ins    BYTE PTR es:[edi],dx
  41f740:	add    BYTE PTR [eax],al
  41f742:	add    BYTE PTR [eax],al
  41f744:	and    BYTE PTR [ebx+0x0],al
  41f747:	add    BYTE PTR [ecx],ch
  41f749:	add    BYTE PTR [eax],al
  41f74b:	add    BYTE PTR [edi],bl
  41f74d:	add    eax,DWORD PTR [eax]
  41f74f:	add    BYTE PTR [esi],bl
  41f751:	add    al,0x0
  41f753:	add    al,0x4
  41f755:	inc    esp
  41f756:	inc    ecx
  41f757:	push   esp
  41f758:	inc    ecx
  41f759:	add    BYTE PTR [eax],al
  41f75b:	add    BYTE PTR [ebx],al
  41f75d:	inc    edx
  41f75e:	push   ebx
  41f75f:	push   ebx
  41f760:	add    BYTE PTR [eax],al
  41f762:	add    BYTE PTR [eax],al
  41f764:	add    al,0x43
  41f766:	dec    edi
  41f767:	inc    esp
  41f768:	inc    ebp
  41f769:	add    BYTE PTR [eax],al
  41f76b:	add    BYTE PTR ds:0x54414458,al
  41f771:	inc    ecx
  41f772:	add    BYTE PTR [eax],al
  41f774:	push   es
  41f775:	inc    esp
  41f776:	inc    ebp
  41f777:	inc    edx
  41f778:	push   ebx
  41f779:	pop    ecx
  41f77a:	dec    ebp
  41f77b:	add    BYTE PTR [esi],al
  41f77d:	inc    esp
  41f77e:	inc    ebp
  41f77f:	inc    edx
  41f780:	push   esp
  41f781:	pop    ecx
  41f782:	push   eax
  41f783:	add    BYTE PTR [ebx],al
  41f785:	jb     0x41f7e8
  41f787:	js     0x41f789
  41f789:	add    BYTE PTR [eax],al
  41f78b:	add    BYTE PTR [ebx],al
  41f78d:	jb     0x41f7f2
  41f78f:	js     0x41f791
  41f791:	add    BYTE PTR [eax],al
  41f793:	add    BYTE PTR [ebx],al
  41f795:	jb     0x41f7fb
  41f797:	js     0x41f799
  41f799:	add    BYTE PTR [eax],al
  41f79b:	add    BYTE PTR [ebx],al
  41f79d:	jb     0x41f801
  41f79f:	js     0x41f7a1
  41f7a1:	add    BYTE PTR [eax],al
  41f7a3:	add    BYTE PTR [ebx],al
  41f7a5:	jb     0x41f81a
  41f7a7:	jo     0x41f7a9
  41f7a9:	add    BYTE PTR [eax],al
  41f7ab:	add    BYTE PTR [ebx],al
  41f7ad:	jb     0x41f811
  41f7af:	jo     0x41f7b1
  41f7b1:	add    BYTE PTR [eax],al
  41f7b3:	add    BYTE PTR [ebx],al
  41f7b5:	jb     0x41f82a
  41f7b7:	imul   eax,DWORD PTR [eax],0x3000000
  41f7bd:	jb     0x41f823
  41f7bf:	imul   eax,DWORD PTR [eax],0x2000000
  41f7c5:	jb     0x41f7ff
  41f7c7:	add    BYTE PTR [edx],al
  41f7c9:	jb     0x41f804
  41f7cb:	add    BYTE PTR [ebx],al
  41f7cd:	jb     0x41f800
  41f7cf:	xor    BYTE PTR [eax],al
  41f7d1:	add    BYTE PTR [eax],al
  41f7d3:	add    BYTE PTR [ebx],al
  41f7d5:	jb     0x41f808
  41f7d7:	xor    DWORD PTR [eax],eax
  41f7d9:	add    BYTE PTR [eax],al
  41f7db:	add    BYTE PTR [ebx],al
  41f7dd:	jb     0x41f810
  41f7df:	xor    al,BYTE PTR [eax]
  41f7e1:	add    BYTE PTR [eax],al
  41f7e3:	add    BYTE PTR [ebx],al
  41f7e5:	jb     0x41f818
  41f7e7:	xor    eax,DWORD PTR [eax]
  41f7e9:	add    BYTE PTR [eax],al
  41f7eb:	add    BYTE PTR [ebx],al
  41f7ed:	jb     0x41f820
  41f7ef:	xor    al,0x0
  41f7f1:	add    BYTE PTR [eax],al
  41f7f3:	add    BYTE PTR [ebx],al
  41f7f5:	jb     0x41f828
  41f7f7:	xor    eax,0x0
  41f7fc:	outs   dx,WORD PTR ds:[esi]
  41f7fe:	jb     0x41f863
  41f800:	gs data16 jb 0x41f865
  41f804:	ins    DWORD PTR es:[edi],dx
  41f805:	add    BYTE PTR gs:[eax],al
  41f808:	dec    edi
  41f809:	add    BYTE PTR [eax+0x0],dh
  41f80c:	je     0x41f80e
  41f80e:	imul   eax,DWORD PTR [eax],0x6e006f
  41f814:	and    BYTE PTR [eax],al
  41f816:	add    BYTE PTR gs:[eax+0x0],dh
  41f81a:	imul   eax,DWORD PTR [eax],0x6f006c
  41f820:	add    BYTE PTR [di+0x0],dh
  41f824:	add    BYTE PTR gs:[edx],bh
  41f827:	add    BYTE PTR [esi+0x0],ch
  41f82a:	outs   dx,DWORD PTR ds:[esi]
  41f82b:	add    BYTE PTR [esi+0x0],ch
  41f82e:	add    BYTE PTR gs:[edx],cl
  41f831:	add    BYTE PTR [eax],al
  41f833:	add    BYTE PTR [edi+0x0],cl
  41f836:	jo     0x41f838
  41f838:	je     0x41f83a
  41f83a:	imul   eax,DWORD PTR [eax],0x6e006f
  41f840:	and    BYTE PTR [eax],al
  41f842:	jo     0x41f844
  41f844:	jb     0x41f846
  41f846:	outs   dx,DWORD PTR ds:[esi]
  41f847:	add    BYTE PTR [eax+eax*1+0x6f],ch
  41f84b:	add    BYTE PTR [edi+0x0],ah
  41f84e:	jne    0x41f850
  41f850:	add    BYTE PTR gs:[edx],bh
  41f853:	add    BYTE PTR [esi+0x0],ch
  41f856:	outs   dx,DWORD PTR ds:[esi]
  41f857:	add    BYTE PTR [esi+0x0],ch
  41f85a:	add    BYTE PTR gs:[edx],cl
  41f85d:	add    BYTE PTR [eax],al
  41f85f:	add    BYTE PTR ds:0x2a002e00,ah
  41f865:	add    BYTE PTR [ebx+0x0],dl
  41f868:	and    eax,0x2a002e00
  41f86d:	add    BYTE PTR [ebx+0x0],dl
  41f870:	or     al,BYTE PTR [eax]
  41f872:	add    BYTE PTR [eax],al
  41f874:	inc    esp
  41f875:	add    BYTE PTR [edi+0x0],dl
  41f878:	dec    edi
  41f879:	add    BYTE PTR [edx+0x0],dl
  41f87c:	inc    esp
  41f87d:	add    BYTE PTR [eax],al
  41f87f:	add    BYTE PTR [eax+0x0],dl
  41f882:	inc    ecx
  41f883:	add    BYTE PTR [edi+0x0],al
  41f886:	inc    ebp
  41f887:	add    BYTE PTR [eax],al
  41f889:	add    BYTE PTR [eax],al
  41f88b:	add    BYTE PTR [eax+0x0],dl
  41f88e:	inc    ecx
  41f88f:	add    BYTE PTR [edx+0x0],dl
  41f892:	inc    ecx
  41f893:	add    BYTE PTR [eax],al
  41f895:	add    BYTE PTR [eax],al
  41f897:	add    BYTE PTR [edi+0x0],dl
  41f89a:	dec    edi
  41f89b:	add    BYTE PTR [edx+0x0],dl
  41f89e:	inc    esp
  41f89f:	add    BYTE PTR [eax],al
  41f8a1:	add    BYTE PTR [eax],al
  41f8a3:	add    BYTE PTR [edx+0x0],al
  41f8a6:	pop    ecx
  41f8a7:	add    BYTE PTR [eax+eax*1+0x45],dl
  41f8ab:	add    BYTE PTR [eax],al
  41f8ad:	add    BYTE PTR [eax],al
  41f8af:	add    BYTE PTR [ecx+0x0],al
  41f8b2:	dec    esp
  41f8b3:	add    BYTE PTR [ecx+0x0],cl
  41f8b6:	inc    edi
  41f8b7:	add    BYTE PTR [esi+0x0],cl
  41f8ba:	add    BYTE PTR [eax],al
  41f8bc:	dec    ecx
  41f8bd:	add    BYTE PTR [esi+0x0],cl
  41f8c0:	inc    esi
  41f8c1:	add    BYTE PTR [edi+0x0],cl
  41f8c4:	add    BYTE PTR [eax],al
  41f8c6:	add    BYTE PTR [eax],al
  41f8c8:	push   edx
  41f8c9:	add    BYTE PTR [ebp+0x0],al
  41f8cc:	inc    ecx
  41f8cd:	add    BYTE PTR [eax+eax*1+0x0],al
  41f8d1:	add    BYTE PTR [eax],al
  41f8d3:	add    BYTE PTR [edi+0x0],dl
  41f8d6:	push   edx
  41f8d7:	add    BYTE PTR [ecx+0x0],cl
  41f8da:	push   esp
  41f8db:	add    BYTE PTR [ebp+0x0],al
  41f8de:	add    BYTE PTR [eax],al
  41f8e0:	inc    ebp
  41f8e1:	add    BYTE PTR [eax+0x0],bl
  41f8e4:	inc    ebp
  41f8e5:	add    BYTE PTR [ebx+0x0],al
  41f8e8:	push   ebp
  41f8e9:	add    BYTE PTR [eax+eax*1+0x45],dl
  41f8ed:	add    BYTE PTR [eax],al
  41f8ef:	add    BYTE PTR [ebx+0x0],dl
  41f8f2:	dec    eax
  41f8f3:	add    BYTE PTR [ecx+0x0],al
  41f8f6:	push   edx
  41f8f7:	add    BYTE PTR [ebp+0x0],al
  41f8fa:	inc    esp
  41f8fb:	add    BYTE PTR [eax],al
  41f8fd:	add    BYTE PTR [eax],al
  41f8ff:	add    BYTE PTR [esi+0x0],cl
  41f902:	dec    edi
  41f903:	add    BYTE PTR [eax+0x0],dl
  41f906:	inc    ecx
  41f907:	add    BYTE PTR [edi+0x0],al
  41f90a:	inc    ebp
  41f90b:	add    BYTE PTR [eax],al
  41f90d:	add    BYTE PTR [eax],al
  41f90f:	add    BYTE PTR [esi+0x0],cl
  41f912:	dec    edi
  41f913:	add    BYTE PTR [ebx+0x0],al
  41f916:	inc    ecx
  41f917:	add    BYTE PTR [ebx+0x0],al
  41f91a:	dec    eax
  41f91b:	add    BYTE PTR [ebp+0x0],al
  41f91e:	add    BYTE PTR [eax],al
  41f920:	inc    esp
  41f921:	add    BYTE PTR [ecx+0x0],cl
  41f924:	push   ebx
  41f925:	add    BYTE PTR [ebx+0x0],al
  41f928:	inc    ecx
  41f929:	add    BYTE PTR [edx+0x0],dl
  41f92c:	inc    esp
  41f92d:	add    BYTE PTR [eax],al
  41f92f:	add    BYTE PTR [ecx+0x0],al
  41f932:	dec    esp
  41f933:	add    BYTE PTR [ecx+0x0],cl
  41f936:	inc    ecx
  41f937:	add    BYTE PTR [ebx+0x0],dl
  41f93a:	add    BYTE PTR [eax],al
  41f93c:	cs jo  0x41f9a3
  41f93f:	popa   
  41f940:	je     0x41f9a3
  41f942:	add    BYTE PTR [eax],al
  41f944:	outs   dx,BYTE PTR gs:[esi]
  41f946:	and    BYTE PTR fs:[edi+0x66],ch
  41f94a:	and    BYTE PTR [ecx+ebp*2+0x6e],ch
  41f94e:	add    BYTE PTR gs:[esi+0x6c],ah
  41f952:	outs   dx,DWORD PTR ds:[esi]
  41f953:	popa   
  41f954:	je     0x41f9bf
  41f956:	outs   dx,BYTE PTR ds:[esi]
  41f957:	and    BYTE PTR [bx+si+0x6f],dh
  41f95b:	imul   ebp,DWORD PTR [esi+0x74],0x6e6f6320
  41f962:	jae    0x41f9d8
  41f964:	popa   
  41f965:	outs   dx,BYTE PTR ds:[esi]
  41f966:	je     0x41f968
  41f968:	imul   ebp,DWORD PTR [esi+0x74],0x72656765
  41f96f:	add    BYTE PTR [edx+0x79],ah
  41f972:	je     0x41f9d9
  41f974:	add    BYTE PTR [eax],al
  41f976:	add    BYTE PTR [eax],al
  41f978:	ja     0x41f9e9
  41f97a:	jb     0x41f9e0
  41f97c:	add    BYTE PTR [eax],al
  41f97e:	add    BYTE PTR [eax],al
  41f980:	fs ja  0x41f9f2
  41f983:	jb     0x41f9e9
  41f985:	add    BYTE PTR [eax],al
  41f987:	add    BYTE PTR [esi+0x77],ah
  41f98a:	outs   dx,DWORD PTR ds:[esi]
  41f98b:	jb     0x41f9f1
  41f98d:	add    BYTE PTR [eax],al
  41f98f:	add    BYTE PTR [ecx+0x77],dh
  41f992:	outs   dx,DWORD PTR ds:[esi]
  41f993:	jb     0x41f9f9
  41f995:	add    BYTE PTR [eax],al
  41f997:	add    BYTE PTR [edx+eiz*2+0x79],dh
  41f99b:	je     0x41fa02
  41f99d:	add    BYTE PTR [eax],al
  41f99f:	add    BYTE PTR [ebx+0x62],dh
  41f9a2:	jns    0x41fa18
  41f9a4:	add    BYTE PTR gs:[eax],al
  41f9a7:	add    BYTE PTR [ebx+0x77],dh
  41f9aa:	outs   dx,DWORD PTR ds:[esi]
  41f9ab:	jb     0x41fa11
  41f9ad:	add    BYTE PTR [eax],al
  41f9af:	add    BYTE PTR [ebx+0x64],dh
  41f9b2:	ja     0x41fa23
  41f9b4:	jb     0x41fa1a
  41f9b6:	add    BYTE PTR [eax],al
  41f9b8:	jae    0x41fa2b
  41f9ba:	ja     0x41fa2b
  41f9bc:	jb     0x41fa22
  41f9be:	add    BYTE PTR [eax],al
  41f9c0:	outs   dx,DWORD PTR ds:[esi]
  41f9c1:	ja     0x41fa32
  41f9c3:	jb     0x41fa29
  41f9c5:	add    BYTE PTR [eax],al
  41f9c7:	add    BYTE PTR [edx+0x65],dh
  41f9ca:	popa   
  41f9cb:	ins    BYTE PTR es:[edi],dx
  41f9cc:	xor    al,0x0
  41f9ce:	add    BYTE PTR [eax],al
  41f9d0:	jb     0x41fa37
  41f9d2:	popa   
  41f9d3:	ins    BYTE PTR es:[edi],dx
  41f9d4:	cmp    BYTE PTR [eax],al
  41f9d6:	add    BYTE PTR [eax],al
  41f9d8:	jb     0x41fa3f
  41f9da:	popa   
  41f9db:	ins    BYTE PTR es:[edi],dx
  41f9dc:	xor    DWORD PTR [eax],esi
  41f9de:	add    BYTE PTR [eax],al
  41f9e0:	ins    DWORD PTR es:[edi],dx
  41f9e1:	ins    DWORD PTR es:[edi],dx
  41f9e2:	ja     0x41fa53
  41f9e4:	jb     0x41fa4a
  41f9e6:	add    BYTE PTR [eax],al
  41f9e8:	js     0x41fa57
  41f9ea:	ins    DWORD PTR es:[edi],dx
  41f9eb:	ja     0x41fa5c
  41f9ed:	jb     0x41fa53
  41f9ef:	add    BYTE PTR [ecx+0x6d],bh
  41f9f2:	ins    DWORD PTR es:[edi],dx
  41f9f3:	ja     0x41fa64
  41f9f5:	jb     0x41fa5b
  41f9f7:	add    BYTE PTR [eax+eax*1],ah
  41f9fa:	add    BYTE PTR [eax],al
  41f9fc:	inc    eax
  41f9fd:	inc    esi
  41f9fe:	add    BYTE PTR [eax],al
  41fa00:	inc    eax
  41fa01:	inc    edx
  41fa02:	add    BYTE PTR [eax],al
  41fa04:	outs   dx,BYTE PTR ds:[esi]
  41fa05:	gs popa 
  41fa07:	jb     0x41fa09
  41fa09:	add    BYTE PTR [eax],al
  41fa0b:	add    BYTE PTR [esi+0x61],ah
  41fa0e:	jb     0x41fa10
  41fa10:	jo     0x41fa84
  41fa12:	outs   dx,DWORD PTR ds:[esi]
  41fa13:	arpl   WORD PTR [eax],ax
  41fa15:	add    BYTE PTR [eax],al
  41fa17:	add    BYTE PTR ds:0x2f000000,ch
  41fa1d:	add    BYTE PTR [eax],al
  41fa1f:	add    BYTE PTR [ebp+0x6f],ch
  41fa22:	add    BYTE PTR fs:[esi],ch
  41fa25:	add    BYTE PTR [eax],al
  41fa27:	add    BYTE PTR [ebx+0x68],dh
  41fa2a:	ins    BYTE PTR es:[edi],dx
  41fa2b:	add    BYTE PTR [ebx+0x68],dh
  41fa2e:	jb     0x41fa30
  41fa30:	outs   dx,BYTE PTR ds:[esi]
  41fa31:	outs   dx,DWORD PTR ds:[esi]
  41fa32:	je     0x41fa34
  41fa34:	js     0x41faa5
  41fa36:	jb     0x41fa38
  41fa38:	outs   dx,DWORD PTR ds:[esi]
  41fa39:	jb     0x41fa3b
  41fa3b:	add    BYTE PTR [ecx+0x6e],ah
  41fa3e:	add    BYTE PTR fs:[eax],ch
  41fa41:	add    BYTE PTR [eax],al
  41fa43:	add    BYTE PTR [eax+0x69],ch
  41fa46:	addr16 push 0x0
  41fa4c:	push   0x77686769
  41fa51:	outs   dx,DWORD PTR ds:[esi]
  41fa52:	jb     0x41fab8
  41fa54:	add    BYTE PTR [eax],al
  41fa56:	add    BYTE PTR [eax],al
  41fa58:	ins    BYTE PTR es:[edi],dx
  41fa59:	outs   dx,DWORD PTR ds:[esi]
  41fa5a:	ja     0x41fa5c
  41fa5c:	ins    BYTE PTR es:[edi],dx
  41fa5d:	outs   dx,DWORD PTR ds:[esi]
  41fa5e:	ja     0x41fa93
  41fa60:	xor    al,BYTE PTR [eax]
  41fa62:	add    BYTE PTR [eax],al
  41fa64:	ins    BYTE PTR es:[edi],dx
  41fa65:	outs   dx,DWORD PTR ds:[esi]
  41fa66:	ja     0x41fadf
  41fa68:	outs   dx,DWORD PTR ds:[esi]
  41fa69:	jb     0x41facf
  41fa6b:	add    BYTE PTR [eax+0x74],dh
  41fa6e:	jb     0x41fa70
  41fa70:	jae    0x41fada
  41fa72:	outs   dx,DWORD PTR ds:[esi]
  41fa73:	jb     0x41fae9
  41fa75:	add    BYTE PTR [eax],al
  41fa77:	add    BYTE PTR [ebp+eiz*2+0x6e],ch
  41fa7b:	addr16 je 0x41fae6
  41fa7e:	add    BYTE PTR [eax],al
  41fa80:	ins    BYTE PTR es:[edi],dx
  41fa81:	outs   dx,BYTE PTR gs:[esi]
  41fa83:	addr16 je 0x41faee
  41fa86:	outs   dx,DWORD PTR ds:[esi]
  41fa87:	data16 add BYTE PTR [eax],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	jae    0x41faf7
  41fa8e:	jp     0x41faf5
  41fa90:	add    BYTE PTR [eax],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	jae    0x41faff
  41fa96:	jp     0x41fafd
  41fa98:	outs   dx,DWORD PTR ds:[esi]
  41fa99:	data16 add BYTE PTR [eax],al
  41fa9c:	je     0x41fb06
  41fa9e:	imul   esi,DWORD PTR [ebx+0x0],0x74000000
  41faa5:	jns    0x41fb17
  41faa7:	add    BYTE PTR gs:[eax],al
  41faaa:	add    BYTE PTR [eax],al
  41faac:	cs je  0x41fb28
  41faaf:	jo     0x41fb16
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edi+0x70],ch
  41fab6:	popa   
  41fab7:	je     0x41fb2d
  41fab9:	jb     0x41fabb
  41fabb:	add    BYTE PTR [edi+0x66],ch
  41fabe:	data16 jae 0x41fb26
  41fac1:	je     0x41fac3
  41fac3:	add    BYTE PTR [ecx+0x6d],ch
  41fac6:	popa   
  41fac7:	addr16 gs jb 0x41fb30
  41facb:	ins    BYTE PTR es:[edi],dx
  41facc:	add    BYTE PTR [eax],al
  41face:	add    BYTE PTR [eax],al
  41fad0:	jae    0x41fb37
  41fad2:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  41fad6:	outs   dx,BYTE PTR ds:[esi]
  41fad7:	jb     0x41fb3e
  41fad9:	ins    BYTE PTR es:[edi],dx
  41fada:	add    BYTE PTR [eax],al
  41fadc:	ins    DWORD PTR es:[edi],dx
  41fadd:	popa   
  41fade:	jae    0x41fb4b
  41fae0:	add    BYTE PTR [eax],al
  41fae2:	add    BYTE PTR [eax],al
  41fae4:	ja     0x41fb4f
  41fae6:	fs je  0x41fb51
  41fae9:	add    BYTE PTR [eax],al
  41faeb:	add    BYTE PTR [ebp+esi*2+0x70],ah
  41faef:	add    BYTE PTR [ebp+0x71],ah
  41faf2:	add    BYTE PTR [eax],al
  41faf4:	outs   dx,BYTE PTR ds:[esi]
  41faf5:	add    BYTE PTR gs:[eax],al
  41faf8:	addr16 je 0x41fafb
  41fafb:	add    BYTE PTR [edi+0x65],ah
  41fafe:	add    BYTE PTR [eax],al
  41fb00:	ins    BYTE PTR es:[edi],dx
  41fb01:	je     0x41fb03
  41fb03:	add    BYTE PTR [ebp+eiz*2+0x0],ch
  41fb07:	add    BYTE PTR [ecx],ah
  41fb09:	and    eax,0x260000
  41fb0e:	add    BYTE PTR [eax],al
  41fb10:	es add BYTE PTR es:[eax],al
  41fb14:	jb     0x41fb4e
  41fb16:	bound  eax,QWORD PTR [eax]
  41fb18:	jb     0x41fb53
  41fb1a:	bound  eax,QWORD PTR [eax]
  41fb1c:	jb     0x41fb4f
  41fb1e:	xor    BYTE PTR [edx+0x0],ah
  41fb21:	add    BYTE PTR [eax],al
  41fb23:	add    BYTE PTR [edx+0x31],dh
  41fb26:	xor    DWORD PTR [edx+0x0],esp
  41fb29:	add    BYTE PTR [eax],al
  41fb2b:	add    BYTE PTR [edx+0x31],dh
  41fb2e:	xor    ah,BYTE PTR [edx+0x0]
  41fb31:	add    BYTE PTR [eax],al
  41fb33:	add    BYTE PTR [edx+0x31],dh
  41fb36:	xor    esp,DWORD PTR [edx+0x0]
  41fb39:	add    BYTE PTR [eax],al
  41fb3b:	add    BYTE PTR [edx+0x31],dh
  41fb3e:	xor    al,0x62
  41fb40:	add    BYTE PTR [eax],al
  41fb42:	add    BYTE PTR [eax],al
  41fb44:	jb     0x41fb77
  41fb46:	xor    eax,0x62
  41fb4b:	add    BYTE PTR [ebx+0x74],dh
  41fb4e:	add    BYTE PTR [eax],al
  41fb50:	ins    DWORD PTR es:[edi],dx
  41fb51:	ins    DWORD PTR es:[edi],dx
  41fb52:	xor    BYTE PTR [eax],al
  41fb54:	ins    DWORD PTR es:[edi],dx
  41fb55:	ins    DWORD PTR es:[edi],dx
  41fb56:	xor    DWORD PTR [eax],eax
  41fb58:	ins    DWORD PTR es:[edi],dx
  41fb59:	ins    DWORD PTR es:[edi],dx
  41fb5a:	xor    al,BYTE PTR [eax]
  41fb5c:	ins    DWORD PTR es:[edi],dx
  41fb5d:	ins    DWORD PTR es:[edi],dx
  41fb5e:	xor    eax,DWORD PTR [eax]
  41fb60:	ins    DWORD PTR es:[edi],dx
  41fb61:	ins    DWORD PTR es:[edi],dx
  41fb62:	xor    al,0x0
  41fb64:	ins    DWORD PTR es:[edi],dx
  41fb65:	ins    DWORD PTR es:[edi],dx
  41fb66:	xor    eax,0x366d6d00
  41fb6b:	add    BYTE PTR [ebp+0x6d],ch
  41fb6e:	aaa    
  41fb6f:	add    BYTE PTR [eax+0x6d],bh
  41fb72:	ins    DWORD PTR es:[edi],dx
  41fb73:	xor    BYTE PTR [eax],al
  41fb75:	add    BYTE PTR [eax],al
  41fb77:	add    BYTE PTR [eax+0x6d],bh
  41fb7a:	ins    DWORD PTR es:[edi],dx
  41fb7b:	xor    DWORD PTR [eax],eax
  41fb7d:	add    BYTE PTR [eax],al
  41fb7f:	add    BYTE PTR [eax+0x6d],bh
  41fb82:	ins    DWORD PTR es:[edi],dx
  41fb83:	xor    al,BYTE PTR [eax]
  41fb85:	add    BYTE PTR [eax],al
  41fb87:	add    BYTE PTR [eax+0x6d],bh
  41fb8a:	ins    DWORD PTR es:[edi],dx
  41fb8b:	xor    eax,DWORD PTR [eax]
  41fb8d:	add    BYTE PTR [eax],al
  41fb8f:	add    BYTE PTR [eax+0x6d],bh
  41fb92:	ins    DWORD PTR es:[edi],dx
  41fb93:	xor    al,0x0
  41fb95:	add    BYTE PTR [eax],al
  41fb97:	add    BYTE PTR [eax+0x6d],bh
  41fb9a:	ins    DWORD PTR es:[edi],dx
  41fb9b:	xor    eax,0x0
  41fba0:	js     0x41fc0f
  41fba2:	ins    DWORD PTR es:[edi],dx
  41fba3:	add    BYTE PTR ss:[eax],al
  41fba6:	add    BYTE PTR [eax],al
  41fba8:	js     0x41fc17
  41fbaa:	ins    DWORD PTR es:[edi],dx
  41fbab:	aaa    
  41fbac:	add    BYTE PTR [eax],al
  41fbae:	add    BYTE PTR [eax],al
  41fbb0:	js     0x41fc1f
  41fbb2:	ins    DWORD PTR es:[edi],dx
  41fbb3:	cmp    BYTE PTR [eax],al
  41fbb5:	add    BYTE PTR [eax],al
  41fbb7:	add    BYTE PTR [eax+0x6d],bh
  41fbba:	ins    DWORD PTR es:[edi],dx
  41fbbb:	cmp    DWORD PTR [eax],eax
  41fbbd:	add    BYTE PTR [eax],al
  41fbbf:	add    BYTE PTR [eax+0x6d],bh
  41fbc2:	ins    DWORD PTR es:[edi],dx
  41fbc3:	xor    DWORD PTR [eax],esi
  41fbc5:	add    BYTE PTR [eax],al
  41fbc7:	add    BYTE PTR [eax+0x6d],bh
  41fbca:	ins    DWORD PTR es:[edi],dx
  41fbcb:	xor    DWORD PTR [ecx],esi
  41fbcd:	add    BYTE PTR [eax],al
  41fbcf:	add    BYTE PTR [eax+0x6d],bh
  41fbd2:	ins    DWORD PTR es:[edi],dx
  41fbd3:	xor    DWORD PTR [edx],esi
  41fbd5:	add    BYTE PTR [eax],al
  41fbd7:	add    BYTE PTR [eax+0x6d],bh
  41fbda:	ins    DWORD PTR es:[edi],dx
  41fbdb:	xor    DWORD PTR [ebx],esi
  41fbdd:	add    BYTE PTR [eax],al
  41fbdf:	add    BYTE PTR [eax+0x6d],bh
  41fbe2:	ins    DWORD PTR es:[edi],dx
  41fbe3:	xor    DWORD PTR [eax+eax*1],esi
  41fbe6:	add    BYTE PTR [eax],al
  41fbe8:	js     0x41fc57
  41fbea:	ins    DWORD PTR es:[edi],dx
  41fbeb:	xor    DWORD PTR ds:0x79000000,esi
  41fbf1:	ins    DWORD PTR es:[edi],dx
  41fbf2:	ins    DWORD PTR es:[edi],dx
  41fbf3:	xor    BYTE PTR [eax],al
  41fbf5:	add    BYTE PTR [eax],al
  41fbf7:	add    BYTE PTR [ecx+0x6d],bh
  41fbfa:	ins    DWORD PTR es:[edi],dx
  41fbfb:	xor    DWORD PTR [eax],eax
  41fbfd:	add    BYTE PTR [eax],al
  41fbff:	add    BYTE PTR [ecx+0x6d],bh
  41fc02:	ins    DWORD PTR es:[edi],dx
  41fc03:	xor    al,BYTE PTR [eax]
  41fc05:	add    BYTE PTR [eax],al
  41fc07:	add    BYTE PTR [ecx+0x6d],bh
  41fc0a:	ins    DWORD PTR es:[edi],dx
  41fc0b:	xor    eax,DWORD PTR [eax]
  41fc0d:	add    BYTE PTR [eax],al
  41fc0f:	add    BYTE PTR [ecx+0x6d],bh
  41fc12:	ins    DWORD PTR es:[edi],dx
  41fc13:	xor    al,0x0
  41fc15:	add    BYTE PTR [eax],al
  41fc17:	add    BYTE PTR [ecx+0x6d],bh
  41fc1a:	ins    DWORD PTR es:[edi],dx
  41fc1b:	xor    eax,0x0
  41fc20:	jns    0x41fc8f
  41fc22:	ins    DWORD PTR es:[edi],dx
  41fc23:	add    BYTE PTR ss:[eax],al
  41fc26:	add    BYTE PTR [eax],al
  41fc28:	jns    0x41fc97
  41fc2a:	ins    DWORD PTR es:[edi],dx
  41fc2b:	aaa    
  41fc2c:	add    BYTE PTR [eax],al
  41fc2e:	add    BYTE PTR [eax],al
  41fc30:	jns    0x41fc9f
  41fc32:	ins    DWORD PTR es:[edi],dx
  41fc33:	cmp    BYTE PTR [eax],al
  41fc35:	add    BYTE PTR [eax],al
  41fc37:	add    BYTE PTR [ecx+0x6d],bh
  41fc3a:	ins    DWORD PTR es:[edi],dx
  41fc3b:	cmp    DWORD PTR [eax],eax
  41fc3d:	add    BYTE PTR [eax],al
  41fc3f:	add    BYTE PTR [ecx+0x6d],bh
  41fc42:	ins    DWORD PTR es:[edi],dx
  41fc43:	xor    DWORD PTR [eax],esi
  41fc45:	add    BYTE PTR [eax],al
  41fc47:	add    BYTE PTR [ecx+0x6d],bh
  41fc4a:	ins    DWORD PTR es:[edi],dx
  41fc4b:	xor    DWORD PTR [ecx],esi
  41fc4d:	add    BYTE PTR [eax],al
  41fc4f:	add    BYTE PTR [ecx+0x6d],bh
  41fc52:	ins    DWORD PTR es:[edi],dx
  41fc53:	xor    DWORD PTR [edx],esi
  41fc55:	add    BYTE PTR [eax],al
  41fc57:	add    BYTE PTR [ecx+0x6d],bh
  41fc5a:	ins    DWORD PTR es:[edi],dx
  41fc5b:	xor    DWORD PTR [ebx],esi
  41fc5d:	add    BYTE PTR [eax],al
  41fc5f:	add    BYTE PTR [ecx+0x6d],bh
  41fc62:	ins    DWORD PTR es:[edi],dx
  41fc63:	xor    DWORD PTR [eax+eax*1],esi
  41fc66:	add    BYTE PTR [eax],al
  41fc68:	jns    0x41fcd7
  41fc6a:	ins    DWORD PTR es:[edi],dx
  41fc6b:	xor    DWORD PTR ds:0x63000000,esi
  41fc71:	jb     0x41fca3
  41fc73:	add    BYTE PTR [ebx+0x72],ah
  41fc76:	xor    DWORD PTR [eax],eax
  41fc78:	arpl   WORD PTR [edx+0x32],si
  41fc7b:	add    BYTE PTR [ebx+0x72],ah
  41fc7e:	xor    eax,DWORD PTR [eax]
  41fc80:	arpl   WORD PTR [edx+0x34],si
  41fc83:	add    BYTE PTR [ebx+0x72],ah
  41fc86:	xor    eax,0x36726300
  41fc8b:	add    BYTE PTR [ebx+0x72],ah
  41fc8e:	aaa    
  41fc8f:	add    BYTE PTR [ebx+0x72],ah
  41fc92:	cmp    BYTE PTR [eax],al
  41fc94:	arpl   WORD PTR [edx+0x39],si
  41fc97:	add    BYTE PTR [ebx+0x72],ah
  41fc9a:	xor    DWORD PTR [eax],esi
  41fc9c:	add    BYTE PTR [eax],al
  41fc9e:	add    BYTE PTR [eax],al
  41fca0:	arpl   WORD PTR [edx+0x31],si
  41fca3:	xor    DWORD PTR [eax],eax
  41fca5:	add    BYTE PTR [eax],al
  41fca7:	add    BYTE PTR [ebx+0x72],ah
  41fcaa:	xor    DWORD PTR [edx],esi
  41fcac:	add    BYTE PTR [eax],al
  41fcae:	add    BYTE PTR [eax],al
  41fcb0:	arpl   WORD PTR [edx+0x31],si
  41fcb3:	xor    eax,DWORD PTR [eax]
  41fcb5:	add    BYTE PTR [eax],al
  41fcb7:	add    BYTE PTR [ebx+0x72],ah
  41fcba:	xor    DWORD PTR [eax+eax*1],esi
  41fcbd:	add    BYTE PTR [eax],al
  41fcbf:	add    BYTE PTR [ebx+0x72],ah
  41fcc2:	xor    DWORD PTR ds:0x0,esi
  41fcc8:	fs jb  0x41fcfb
  41fccb:	add    BYTE PTR [edx+esi*2+0x31],ah
  41fccf:	add    BYTE PTR [edx+esi*2+0x32],ah
  41fcd3:	add    BYTE PTR [edx+esi*2+0x33],ah
  41fcd7:	add    BYTE PTR [edx+esi*2+0x34],ah
  41fcdb:	add    BYTE PTR [edx+esi*2+0x35],ah
  41fcdf:	add    BYTE PTR [edx+esi*2+0x36],ah
  41fce3:	add    BYTE PTR [edx+esi*2+0x37],ah
  41fce7:	add    BYTE PTR [edx+esi*2+0x38],ah
  41fceb:	add    BYTE PTR [edx+esi*2+0x39],ah
  41fcef:	add    BYTE PTR [edx+esi*2+0x31],ah
  41fcf3:	xor    BYTE PTR [eax],al
  41fcf5:	add    BYTE PTR [eax],al
  41fcf7:	add    BYTE PTR [edx+esi*2+0x31],ah
  41fcfb:	xor    DWORD PTR [eax],eax
  41fcfd:	add    BYTE PTR [eax],al
  41fcff:	add    BYTE PTR [edx+esi*2+0x31],ah
  41fd03:	xor    al,BYTE PTR [eax]
  41fd05:	add    BYTE PTR [eax],al
  41fd07:	add    BYTE PTR [edx+esi*2+0x31],ah
  41fd0b:	xor    eax,DWORD PTR [eax]
  41fd0d:	add    BYTE PTR [eax],al
  41fd0f:	add    BYTE PTR [edx+esi*2+0x31],ah
  41fd13:	xor    al,0x0
  41fd15:	add    BYTE PTR [eax],al
  41fd17:	add    BYTE PTR [edx+esi*2+0x31],ah
  41fd1b:	xor    eax,0x0
  41fd20:	popa   
  41fd21:	fs add BYTE PTR fs:[ebx+0x61],ah
  41fd26:	ins    BYTE PTR es:[edi],dx
  41fd27:	ins    BYTE PTR es:[edi],dx
  41fd28:	add    BYTE PTR [eax],al
  41fd2a:	add    BYTE PTR [eax],al
  41fd2c:	arpl   WORD PTR [edx+0x77],sp
  41fd2f:	add    BYTE PTR [ebx+0x6c],ah
  41fd32:	imul   eax,DWORD PTR [eax],0x706d63
  41fd38:	arpl   WORD PTR [edi+0x64],si
  41fd3b:	add    BYTE PTR gs:[eax],al
  41fd3e:	add    BYTE PTR [eax],al
  41fd40:	fs arpl WORD PTR gs:[eax],ax
  41fd44:	imul   ebp,DWORD PTR [esi+0x63],0x746e6900
  41fd4b:	add    BYTE PTR [ecx+0x72],ch
  41fd4e:	gs je  0x41fd51
  41fd51:	add    BYTE PTR [eax],al
  41fd53:	add    BYTE PTR [ecx+0x72],ch
  41fd56:	gs je  0x41fdbd
  41fd59:	add    BYTE PTR [eax],al
  41fd5b:	add    BYTE PTR [edx+0x61],ch
  41fd5e:	add    BYTE PTR [eax],al
  41fd60:	push   0x61
  41fd62:	add    BYTE PTR gs:[edx+0x62],ch
  41fd66:	add    BYTE PTR [eax],al
  41fd68:	push   0x62
  41fd6a:	add    BYTE PTR gs:[edx+0x65],ch
  41fd6e:	add    BYTE PTR [eax],al
  41fd70:	push   0x65
  41fd72:	arpl   WORD PTR [eax+0x7a],di
  41fd75:	add    BYTE PTR [eax],al
  41fd77:	add    BYTE PTR [edx+0x67],ch
  41fd7a:	add    BYTE PTR [eax],al
  41fd7c:	push   0x67
  41fd7e:	add    BYTE PTR gs:[edx+0x6c],ch
  41fd82:	add    BYTE PTR [eax],al
  41fd84:	push   0x6c
  41fd86:	add    BYTE PTR gs:[edx+0x6d],ch
  41fd8a:	jo     0x41fd8c
  41fd8c:	push   0x6e
  41fd8e:	add    BYTE PTR gs:[edx+0x6e],ch
  41fd92:	outs   dx,DWORD PTR ds:[esi]
  41fd93:	add    BYTE PTR [edx+0x6e],ch
  41fd96:	jo     0x41fd98
  41fd98:	push   0x6e
  41fd9a:	jae    0x41fd9c
  41fd9c:	push   0x6f
  41fd9e:	add    BYTE PTR [eax],al
  41fda0:	push   0x70
  41fda2:	add    BYTE PTR [eax],al
  41fda4:	push   0x73
  41fda6:	add    BYTE PTR [eax],al
  41fda8:	ins    BYTE PTR es:[edi],dx
  41fda9:	gs popa 
  41fdab:	add    BYTE PTR [ebp+eiz*2+0x61],ch
  41fdaf:	jbe    0x41fe16
  41fdb1:	add    BYTE PTR [eax],al
  41fdb3:	add    BYTE PTR [edi+ebp*2+0x6f],ch
  41fdb7:	jo     0x41fdb9
  41fdb9:	add    BYTE PTR [eax],al
  41fdbb:	add    BYTE PTR [edi+ebp*2+0x6f],ch
  41fdbf:	jo     0x41fe25
  41fdc1:	add    BYTE PTR [eax],al
  41fdc3:	add    BYTE PTR [edi+ebp*2+0x6f],ch
  41fdc7:	jo     0x41fe2e
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    BYTE PTR [edi+ebp*2+0x6f],ch
  41fdcf:	jo     0x41fe36
  41fdd1:	add    BYTE PTR fs:[eax],al
  41fdd4:	ins    BYTE PTR es:[edi],dx
  41fdd5:	outs   dx,DWORD PTR ds:[esi]
  41fdd6:	outs   dx,DWORD PTR ds:[esi]
  41fdd7:	jo     0x41fe47
  41fdd9:	add    BYTE PTR gs:[eax],al
  41fddc:	ins    BYTE PTR es:[edi],dx
  41fddd:	outs   dx,DWORD PTR ds:[esi]
  41fdde:	outs   dx,DWORD PTR ds:[esi]
  41fddf:	jo     0x41fe4f
  41fde1:	gs add BYTE PTR fs:[ebp+0x6f],ch
  41fde6:	jbe    0x41fde8
  41fde8:	ins    DWORD PTR es:[edi],dx
  41fde9:	outs   dx,DWORD PTR ds:[esi]
  41fdea:	jbe    0x41fe5f
  41fdec:	js     0x41fdee
  41fdee:	add    BYTE PTR [eax],al
  41fdf0:	ins    DWORD PTR es:[edi],dx
  41fdf1:	outs   dx,DWORD PTR ds:[esi]
  41fdf2:	jbe    0x41fe6e
  41fdf4:	js     0x41fdf6
  41fdf6:	add    BYTE PTR [eax],al
  41fdf8:	outs   dx,BYTE PTR ds:[esi]
  41fdf9:	outs   dx,DWORD PTR ds:[esi]
  41fdfa:	jo     0x41fdfc
  41fdfc:	jo     0x41fe6d
  41fdfe:	jo     0x41fe00
  41fe00:	jo     0x41fe77
  41fe02:	jae    0x41fe6c
  41fe04:	add    BYTE PTR [eax],al
  41fe06:	add    BYTE PTR [eax],al
  41fe08:	jb     0x41fe6f
  41fe0a:	je     0x41fe0c
  41fe0c:	jae    0x41fe76
  41fe0e:	ins    BYTE PTR es:[edi],dx
  41fe0f:	add    BYTE PTR fs:[eax],al
  41fe12:	add    BYTE PTR [eax],al
  41fe14:	jae    0x41fe8a
  41fe16:	imul   eax,DWORD PTR [eax],0x627573
  41fe1c:	je     0x41fe83
  41fe1e:	jae    0x41fe94
  41fe20:	add    BYTE PTR [eax],al
  41fe22:	add    BYTE PTR [eax],al
  41fe24:	push   0x72
  41fe26:	arpl   WORD PTR [eax+0x7a],di
  41fe29:	add    BYTE PTR [eax],al
  41fe2b:	add    BYTE PTR [ecx+0x0],ch
  41fe2e:	data16 add BYTE PTR ds:0x6c006500,ch
  41fe35:	add    BYTE PTR [ebx+0x0],dh
  41fe38:	add    BYTE PTR gs:[eax],al
  41fe3b:	add    BYTE PTR [eax],al
  41fe3d:	add    BYTE PTR [eax],al
  41fe3f:	add    BYTE PTR [eax+0x0],cl
	...
  41fe7a:	add    BYTE PTR [eax],al
  41fe7c:	pop    eax
  41fe7d:	mov    BYTE PTR [eax+eax*1-0x40],al
  41fe81:	inc    BYTE PTR [ecx+0x0]
  41fe84:	add    DWORD PTR [eax],eax
  41fe86:	add    BYTE PTR [eax],al
  41fe88:	push   edx
  41fe89:	push   ebx
  41fe8a:	inc    esp
  41fe8b:	push   ebx
  41fe8c:	div    cl
  41fe8e:	inc    eax
  41fe8f:	aas    
  41fe90:	dec    ebp
  41fe91:	xchg   BYTE PTR [edi],al
  41fe93:	dec    edi
  41fe94:	mov    esi,0x46c2f2b6
  41fe99:	mov    fs,ecx
  41fe9b:	pop    ds
  41fe9c:	add    eax,0x6d000000
  41fea1:	ins    BYTE PTR es:[edi],dx
  41fea2:	ss xor al,0x2e
  41fea5:	jo     0x41ff0b
  41fea7:	bound  eax,QWORD PTR [eax]
	...
  41febd:	add    BYTE PTR [eax],al
  41febf:	add    cl,bh
  41fec1:	jae    0x41fec7
	...
  41fedf:	add    BYTE PTR [ebx+0x44def415],cl
  41fee5:	add    BYTE PTR [esi-0x75],dl
  41fee8:	xor    eax,0x44dee0
  41feed:	push   edi
  41feee:	mov    eax,DWORD PTR [esi+0x10]
  41fef1:	mov    edi,DWORD PTR ds:0x44def8
  41fef7:	lea    ecx,[edx+0x2]
  41fefa:	test   eax,eax
  41fefc:	jne    0x41ff05
  41fefe:	mov    ecx,0x81c
  41ff03:	jmp    0x41ff2e
  41ff05:	test   BYTE PTR [eax+0x2c],0x1
  41ff09:	jne    0x41ff12
  41ff0b:	mov    ecx,0x816
  41ff10:	jmp    0x41ff2e
  41ff12:	mov    eax,DWORD PTR [esi+0x4]
  41ff15:	test   eax,0x2000
  41ff1a:	je     0x41ff40
  41ff1c:	cmp    BYTE PTR [esi+0x1],0x1
  41ff20:	je     0x41ff40
  41ff22:	and    eax,0x70
  41ff25:	cmp    al,0x50
  41ff27:	jne    0x41ff40
  41ff29:	mov    ecx,0x7e8
  41ff2e:	cmp    BYTE PTR ds:0x45f692,0x0
  41ff35:	je     0x41ff3c
  41ff37:	call   0x42f124
  41ff3c:	xor    eax,eax
  41ff3e:	jmp    0x41ff9d
  41ff40:	mov    WORD PTR [edx],0x200
  41ff45:	mov    al,BYTE PTR [edi+0x4]
  41ff48:	push   ebx
  41ff49:	xor    ebx,ebx
  41ff4b:	cmp    al,0x3
  41ff4d:	je     0x41ff5a
  41ff4f:	cmp    al,0x1
  41ff51:	jne    0x41ff5a
  41ff53:	mov    BYTE PTR [ecx],0x67
  41ff56:	inc    ecx
  41ff57:	inc    BYTE PTR [edx+0x1]
  41ff5a:	mov    al,BYTE PTR [edi+0x1]
  41ff5d:	mov    BYTE PTR [ecx],al
  41ff5f:	mov    BYTE PTR [ecx+0x1],bl
  41ff62:	mov    eax,DWORD PTR [esi+0x10]
  41ff65:	add    ecx,0x2
  41ff68:	test   BYTE PTR [eax+0x7],0x2
  41ff6c:	jne    0x41ff8c
  41ff6e:	mov    eax,DWORD PTR [eax+0x20]
  41ff71:	cmp    eax,DWORD PTR ds:0x45f834
  41ff77:	jne    0x41ff8c
  41ff79:	push   0x10
  41ff7b:	push   ebx
  41ff7c:	push   ecx
  41ff7d:	push   edx
  41ff7e:	mov    edx,DWORD PTR ds:0x44dee0
  41ff84:	dec    ecx
  41ff85:	call   0x422129
  41ff8a:	jmp    0x41ff9c
  41ff8c:	push   ebx
  41ff8d:	push   ecx
  41ff8e:	push   ecx
  41ff8f:	push   edx
  41ff90:	mov    edx,DWORD PTR ds:0x44dee0
  41ff96:	dec    ecx
  41ff97:	call   0x422197
  41ff9c:	pop    ebx
  41ff9d:	pop    edi
  41ff9e:	pop    esi
  41ff9f:	ret    0x4
  41ffa2:	push   ebp
  41ffa3:	mov    ebp,esp
  41ffa5:	cmp    BYTE PTR ds:0x44ded8,0x0
  41ffac:	push   ebx
  41ffad:	push   esi
  41ffae:	mov    esi,edx
  41ffb0:	sete   bh
  41ffb3:	add    esi,0xffff
  41ffb9:	mov    bl,0x4
  41ffbb:	test   bh,bh
  41ffbd:	je     0x41ffe0
  41ffbf:	cmp    BYTE PTR [ecx],0x0
  41ffc2:	movzx  edx,BYTE PTR [ecx+0x2]
  41ffc6:	je     0x41ffc9
  41ffc8:	inc    edx
  41ffc9:	sub    edx,DWORD PTR [ebp+0x8]
  41ffcc:	mov    eax,edx
  41ffce:	sar    eax,0x10
  41ffd1:	test   ax,ax
  41ffd4:	jne    0x41ffe0
  41ffd6:	cmp    edx,0x80
  41ffdc:	jge    0x41ffe0
  41ffde:	mov    bl,0x1
  41ffe0:	cmp    bl,BYTE PTR [ecx+0x2]
  41ffe3:	jbe    0x41fff5
  41ffe5:	test   si,si
  41ffe8:	je     0x41fff5
  41ffea:	test   BYTE PTR [ecx+0xb],0x30
  41ffee:	jne    0x41fff5
  41fff0:	add    ecx,0x6
  41fff3:	jmp    0x41ffb3
  41fff5:	pop    esi
  41fff6:	mov    eax,ecx
  41fff8:	pop    ebx
  41fff9:	pop    ebp
  41fffa:	ret    0x4
  41fffd:	push   ebp
  41fffe:	mov    ebp,esp
  420000:	push   ecx
  420001:	mov    eax,DWORD PTR [ebp+0x10]
  420004:	push   ebx
  420005:	mov    ebx,DWORD PTR [ebp+0xc]
  420008:	push   esi
  420009:	mov    esi,ecx
  42000b:	xor    ecx,ecx
  42000d:	add    ebx,0x2
  420010:	inc    ecx
  420011:	push   edi
  420012:	mov    edi,DWORD PTR [ebp+0x8]
  420015:	mov    DWORD PTR [ebp-0x4],ebx
  420018:	test   eax,0xff00
  42001d:	je     0x420063
  42001f:	and    eax,0xf
  420022:	cmp    eax,0x8
  420025:	jne    0x42002a
  420027:	push   0x4
  420029:	pop    eax
  42002a:	cmp    BYTE PTR [esi+0x2],al
  42002d:	je     0x42003d
  42002f:	add    edx,0xffff
  420035:	add    esi,0x6
  420038:	test   dx,dx
  42003b:	jne    0x42002a
  42003d:	test   dx,dx
  420040:	jne    0x4200f7
  420046:	cmp    BYTE PTR ds:0x45f692,dl
  42004c:	je     0x42005c
  42004e:	push   0x0
  420050:	xor    edx,edx
  420052:	mov    ecx,0x820
  420057:	call   0x42ee80
  42005c:	xor    eax,eax
  42005e:	jmp    0x4201b1
  420063:	test   DWORD PTR [edi+0x4],0x8000
  42006a:	mov    ecx,DWORD PTR [edi+0x8]
  42006d:	je     0x420071
  42006f:	neg    ecx
  420071:	mov    eax,DWORD PTR [edi+0x10]
  420074:	add    ecx,DWORD PTR [eax+0x1c]
  420077:	test   BYTE PTR [eax+0x2c],0x40
  42007b:	jne    0x420096
  42007d:	sub    ecx,DWORD PTR ds:0x45f830
  420083:	test   ecx,ecx
  420085:	jle    0x420098
  420087:	movzx  eax,WORD PTR ds:0x44dedc
  42008e:	add    eax,DWORD PTR ds:0x45f82c
  420094:	sub    ecx,eax
  420096:	test   ecx,ecx
  420098:	jns    0x4200a9
  42009a:	push   ecx
  42009b:	mov    ecx,esi
  42009d:	call   0x41ffa2
  4200a2:	xor    ecx,ecx
  4200a4:	mov    esi,eax
  4200a6:	inc    ecx
  4200a7:	jmp    0x4200f7
  4200a9:	cmp    BYTE PTR ds:0x44ded8,0x0
  4200b0:	movzx  edx,dx
  4200b3:	mov    BYTE PTR [ebp+0x13],0x4
  4200b7:	jne    0x4200d3
  4200b9:	mov    eax,ecx
  4200bb:	sar    eax,0x10
  4200be:	test   ax,ax
  4200c1:	jne    0x4200d3
  4200c3:	cmp    ecx,0x80
  4200c9:	jge    0x4200d3
  4200cb:	xor    ecx,ecx
  4200cd:	inc    ecx
  4200ce:	mov    BYTE PTR [ebp+0x13],cl
  4200d1:	jmp    0x4200d6
  4200d3:	xor    ecx,ecx
  4200d5:	inc    ecx
  4200d6:	mov    bl,BYTE PTR [ebp+0x13]
  4200d9:	add    edx,0xffff
  4200df:	cmp    bl,BYTE PTR [esi+0x2]
  4200e2:	jbe    0x4200f4
  4200e4:	test   dx,dx
  4200e7:	je     0x4200f4
  4200e9:	test   BYTE PTR [esi+0xb],0x30
  4200ed:	jne    0x4200f4
  4200ef:	add    esi,0x6
  4200f2:	jmp    0x4200d9
  4200f4:	mov    ebx,DWORD PTR [ebp-0x4]
  4200f7:	cmp    BYTE PTR [esi+0x2],0x1
  4200fb:	mov    edx,DWORD PTR [ebp+0xc]
  4200fe:	sete   al
  420101:	dec    al
  420103:	and    BYTE PTR ds:0x44f583,al
  420109:	mov    BYTE PTR [edx],0x0
  42010c:	movzx  eax,BYTE PTR [esi+0x4]
  420110:	test   eax,eax
  420112:	je     0x42011c
  420114:	cmp    eax,ecx
  420116:	jne    0x42011c
  420118:	mov    BYTE PTR [ebx],0x67
  42011b:	inc    ebx
  42011c:	mov    al,BYTE PTR [esi+0x3]
  42011f:	test   al,al
  420121:	je     0x42012b
  420123:	cmp    al,0x4
  420125:	je     0x42012b
  420127:	mov    BYTE PTR [ebx],0x66
  42012a:	inc    ebx
  42012b:	mov    al,BYTE PTR [esi]
  42012d:	test   al,al
  42012f:	je     0x420134
  420131:	mov    BYTE PTR [ebx],al
  420133:	inc    ebx
  420134:	mov    al,BYTE PTR [esi+0x1]
  420137:	mov    BYTE PTR [ebx],al
  420139:	mov    eax,DWORD PTR [edi+0x8]
  42013c:	inc    ebx
  42013d:	mov    DWORD PTR [ebx],eax
  42013f:	movzx  ecx,BYTE PTR [esi+0x2]
  420143:	add    ebx,ecx
  420145:	mov    al,bl
  420147:	sub    al,dl
  420149:	sub    al,0x2
  42014b:	mov    BYTE PTR [edx+0x1],al
  42014e:	mov    eax,ecx
  420150:	dec    eax
  420151:	je     0x42015b
  420153:	sub    eax,0x3
  420156:	jne    0x42015b
  420158:	inc    eax
  420159:	jmp    0x42015d
  42015b:	xor    al,al
  42015d:	or     al,0x10
  42015f:	mov    BYTE PTR [ebp+0x10],al
  420162:	mov    eax,DWORD PTR [edi+0x10]
  420165:	test   BYTE PTR [eax+0x7],0x2
  420169:	jne    0x420199
  42016b:	mov    eax,DWORD PTR [eax+0x20]
  42016e:	cmp    eax,DWORD PTR ds:0x45f834
  420174:	jne    0x420199
  420176:	test   BYTE PTR [edi+0x4],0x8
  42017a:	mov    BYTE PTR [ebp+0xc],0x10
  42017e:	je     0x420184
  420180:	mov    BYTE PTR [ebp+0xc],0x11
  420184:	push   DWORD PTR [ebp+0xc]
  420187:	push   DWORD PTR [ebp+0x10]
  42018a:	push   ebx
  42018b:	sub    ebx,ecx
  42018d:	push   edx
  42018e:	mov    edx,edi
  420190:	mov    ecx,ebx
  420192:	call   0x422129
  420197:	jmp    0x4201b1
  420199:	push   DWORD PTR [ebp+0x10]
  42019c:	push   ecx
  42019d:	push   ebx
  42019e:	sub    ebx,ecx
  4201a0:	push   edx
  4201a1:	mov    edx,edi
  4201a3:	mov    ecx,ebx
  4201a5:	call   0x422197
  4201aa:	mov    BYTE PTR ds:0x44f583,0x0
  4201b1:	pop    edi
  4201b2:	pop    esi
  4201b3:	pop    ebx
  4201b4:	leave  
  4201b5:	ret    0xc
  4201b8:	push   ebp
  4201b9:	mov    ebp,esp
  4201bb:	push   ecx
  4201bc:	push   ecx
  4201bd:	push   ebx
  4201be:	push   esi
  4201bf:	push   edi
  4201c0:	mov    edi,DWORD PTR ds:0x44dee0
  4201c6:	mov    esi,edx
  4201c8:	mov    bl,BYTE PTR [edi+0x1]
  4201cb:	mov    DWORD PTR [ebp-0x8],ecx
  4201ce:	test   bl,bl
  4201d0:	jne    0x4201ea
  4201d2:	cmp    BYTE PTR ds:0x45f692,bl
  4201d8:	je     0x420218
  4201da:	push   0x0
  4201dc:	xor    edx,edx
  4201de:	mov    ecx,0x7e7
  4201e3:	call   0x42ee80
  4201e8:	jmp    0x420218
  4201ea:	mov    cl,BYTE PTR [edi]
  4201ec:	xor    eax,eax
  4201ee:	mov    DWORD PTR [ebp-0x4],eax
  4201f1:	mov    bh,al
  4201f3:	cmp    cl,0x6
  4201f6:	je     0x420234
  4201f8:	cmp    cl,0x1
  4201fb:	je     0x420221
  4201fd:	mov    ecx,0x7e7
  420202:	cmp    BYTE PTR ds:0x45f692,0x0
  420209:	jne    0x420213
  42020b:	cmp    ecx,0x7e8
  420211:	jne    0x420218
  420213:	call   0x42f124
  420218:	xor    eax,eax
  42021a:	pop    edi
  42021b:	pop    esi
  42021c:	pop    ebx
  42021d:	leave  
  42021e:	ret    0x8
  420221:	cmp    bl,0x2
  420224:	je     0x420234
  420226:	cmp    bl,0x6
  420229:	jne    0x42022f
  42022b:	mov    bh,0x1
  42022d:	jmp    0x420234
  42022f:	cmp    bl,0x8
  420232:	jne    0x420240
  420234:	mov    edx,DWORD PTR [ebp+0x8]
  420237:	mov    ecx,DWORD PTR [ebp+0x8]
  42023a:	mov    BYTE PTR [ebp-0x4],0x1
  42023e:	jmp    0x420247
  420240:	mov    edx,eax
  420242:	mov    ecx,0x7e8
  420247:	test   edx,edx
  420249:	je     0x420202
  42024b:	cmp    BYTE PTR [esi+0x2],bl
  42024e:	jne    0x420269
  420250:	mov    cl,BYTE PTR [esi+0x5]
  420253:	mov    al,cl
  420255:	shr    al,0x4
  420258:	and    al,0x1
  42025a:	cmp    al,BYTE PTR [ebp-0x4]
  42025d:	jne    0x420269
  42025f:	shr    cl,0x5
  420262:	and    cl,0x1
  420265:	cmp    cl,bh
  420267:	je     0x42026f
  420269:	add    esi,0x6
  42026c:	dec    edx
  42026d:	jne    0x42024b
  42026f:	mov    al,BYTE PTR [esi]
  420271:	test   bh,bh
  420273:	je     0x42029f
  420275:	cmp    BYTE PTR ds:0x44ded8,0x0
  42027c:	mov    ecx,0x81e
  420281:	mov    DWORD PTR ds:0x44def8,0x4138a4
  42028b:	jne    0x420297
  42028d:	mov    DWORD PTR ds:0x44def8,0x413898
  420297:	sub    bl,0x2
  42029a:	mov    BYTE PTR [edi+0x1],bl
  42029d:	jmp    0x4202c1
  42029f:	cmp    BYTE PTR ds:0x44ded8,0x0
  4202a6:	mov    ecx,0x81d
  4202ab:	mov    DWORD PTR ds:0x44def8,0x41388c
  4202b5:	jne    0x4202c1
  4202b7:	mov    DWORD PTR ds:0x44def8,0x413880
  4202c1:	test   edx,edx
  4202c3:	je     0x420202
  4202c9:	push   DWORD PTR [ebp-0x8]
  4202cc:	mov    ds:0x44deda,al
  4202d1:	call   0x420640
  4202d6:	jmp    0x42021a
  4202db:	push   ebp
  4202dc:	mov    ebp,esp
  4202de:	sub    esp,0x2c
  4202e1:	push   ebx
  4202e2:	push   esi
  4202e3:	mov    esi,ecx
  4202e5:	push   edi
  4202e6:	movzx  ebx,WORD PTR [esi+0x3]
  4202ea:	mov    eax,DWORD PTR [ebx*8+0x401158]
  4202f1:	mov    DWORD PTR [ebp-0x4],eax
  4202f4:	call   0x42c8a5
  4202f9:	cmp    WORD PTR [esi+0x3],0x65
  4202fe:	mov    edi,eax
  420300:	sete   BYTE PTR ds:0x44ded8
  420307:	movzx  ecx,BYTE PTR [edi+0x1]
  42030b:	and    DWORD PTR [ebp-0x24],0xf0000000
  420312:	mov    edx,ecx
  420314:	mov    WORD PTR ds:0x44dedc,cx
  42031b:	mov    eax,DWORD PTR [edx+edi*1+0x8]
  42031f:	sub    eax,DWORD PTR ds:0x45f82c
  420325:	xor    ecx,ecx
  420327:	test   BYTE PTR [edx+edi*1+0x3],0x40
  42032c:	mov    BYTE PTR ds:0x44f583,0x1
  420333:	mov    ds:0x45f830,eax
  420338:	mov    BYTE PTR [ebp-0x28],cl
  42033b:	mov    DWORD PTR [ebp-0x20],ecx
  42033e:	mov    DWORD PTR [ebp-0x1c],ecx
  420341:	je     0x42034d
  420343:	mov    eax,DWORD PTR [edx+edi*1+0xc]
  420347:	mov    DWORD PTR [ebp-0x20],eax
  42034a:	mov    DWORD PTR [ebp-0x1c],ecx
  42034d:	mov    eax,DWORD PTR [edx+edi*1+0x4]
  420351:	movzx  edx,BYTE PTR [ebx*8+0x40115c]
  420359:	push   ecx
  42035a:	mov    ecx,DWORD PTR [ebp-0x4]
  42035d:	mov    DWORD PTR [ebp-0x18],eax
  420360:	push   edi
  420361:	lea    eax,[ebp-0x28]
  420364:	push   eax
  420365:	call   0x41fffd
  42036a:	movzx  ecx,WORD PTR ds:0x44dedc
  420371:	movzx  eax,BYTE PTR [edi+0x1]
  420375:	sub    ecx,eax
  420377:	add    DWORD PTR ds:0x45f82c,ecx
  42037d:	cmp    BYTE PTR ds:0x44f583,0x0
  420384:	je     0x42038c
  420386:	or     BYTE PTR [esi+0x5],0xe0
  42038a:	jmp    0x420390
  42038c:	and    BYTE PTR [esi+0x5],0x1f
  420390:	pop    edi
  420391:	pop    esi
  420392:	pop    ebx
  420393:	leave  
  420394:	ret    
  420395:	push   ebp
  420396:	mov    ebp,esp
  420398:	mov    ecx,DWORD PTR [ebp+0x8]
  42039b:	mov    edx,DWORD PTR ds:0x44dee0
  4203a1:	cmp    WORD PTR [ecx+0x3],0x65
  4203a6:	push   ebx
  4203a7:	sete   BYTE PTR ds:0x44ded8
  4203ae:	cmp    BYTE PTR [edx],0x2
  4203b1:	push   esi
  4203b2:	jne    0x420468
  4203b8:	mov    esi,DWORD PTR [edx+0x10]
  4203bb:	test   esi,esi
  4203bd:	jne    0x4203dc
  4203bf:	cmp    BYTE PTR ds:0x45f692,0x0
  4203c6:	je     0x4203d5
  4203c8:	mov    ecx,0x81c
  4203cd:	xor    edx,edx
  4203cf:	push   edx
  4203d0:	call   0x42ee80
  4203d5:	xor    eax,eax
  4203d7:	jmp    0x42047c
  4203dc:	movzx  eax,BYTE PTR [edx+0x1]
  4203e0:	mov    ecx,DWORD PTR [edx+0x4]
  4203e3:	mov    bl,BYTE PTR [esi+0x7]
  4203e6:	and    ecx,0x2070
  4203ec:	or     ecx,eax
  4203ee:	mov    eax,0x2000
  4203f3:	test   eax,ecx
  4203f5:	jne    0x420427
  4203f7:	test   BYTE PTR [esi+0x2c],0x1
  4203fb:	jne    0x42040d
  4203fd:	cmp    BYTE PTR ds:0x45f692,0x0
  420404:	je     0x4203d5
  420406:	mov    ecx,0x816
  42040b:	jmp    0x4203cd
  42040d:	test   bl,0x2
  420410:	je     0x420424
  420412:	test   bl,0x1
  420415:	je     0x420420
  420417:	cmp    BYTE PTR ds:0x45f692,0x0
  42041e:	je     0x4203d5
  420420:	or     ecx,eax
  420422:	jmp    0x420427
  420424:	push   0x50
  420426:	pop    ecx
  420427:	mov    eax,ecx
  420429:	and    eax,0xffffff00
  42042e:	neg    eax
  420430:	sbb    al,al
  420432:	inc    al
  420434:	mov    ds:0x44f583,al
  420439:	mov    eax,ds:0x448860
  42043e:	push   ecx
  42043f:	mov    al,BYTE PTR [eax+0x6]
  420442:	push   DWORD PTR ds:0x44def4
  420448:	mov    ecx,DWORD PTR ds:0x44def8
  42044e:	and    al,0x1f
  420450:	movzx  eax,al
  420453:	push   edx
  420454:	movzx  edx,BYTE PTR ds:0x44ded9
  42045b:	mov    ds:0x44dedc,ax
  420461:	call   0x41fffd
  420466:	jmp    0x42047c
  420468:	movzx  eax,BYTE PTR ds:0x44ded9
  42046f:	mov    edx,DWORD PTR ds:0x44def8
  420475:	push   ecx
  420476:	push   eax
  420477:	call   0x4201b8
  42047c:	pop    esi
  42047d:	pop    ebx
  42047e:	pop    ebp
  42047f:	ret    0x4
  420482:	push   ebp
  420483:	mov    ebp,esp
  420485:	push   ecx
  420486:	push   ecx
  420487:	mov    eax,ds:0x448860
  42048c:	push   ebx
  42048d:	mov    al,BYTE PTR [eax+0x5]
  420490:	xor    dl,dl
  420492:	shr    al,0x3
  420495:	xor    bl,bl
  420497:	push   esi
  420498:	mov    BYTE PTR [ebp-0x1],dl
  42049b:	and    al,0x7
  42049d:	jne    0x4205d2
  4204a3:	mov    eax,ds:0x44def8
  4204a8:	xor    bh,bh
  4204aa:	movzx  esi,BYTE PTR [eax+0x4]
  4204ae:	and    esi,0x7
  4204b1:	jle    0x42063a
  4204b7:	push   edi
  4204b8:	movzx  edi,BYTE PTR [eax+0x8]
  4204bc:	mov    eax,DWORD PTR [eax]
  4204be:	and    edi,0x7
  4204c1:	xor    edx,edx
  4204c3:	mov    DWORD PTR [ebp-0x8],eax
  4204c6:	mov    eax,edi
  4204c8:	dec    eax
  4204c9:	je     0x4204e8
  4204cb:	dec    eax
  4204cc:	je     0x4204e3
  4204ce:	dec    eax
  4204cf:	je     0x4204df
  4204d1:	dec    eax
  4204d2:	dec    eax
  4204d3:	je     0x4204e8
  4204d5:	dec    eax
  4204d6:	jne    0x4204db
  4204d8:	or     bl,0x8
  4204db:	xor    al,al
  4204dd:	jmp    0x4204ed
  4204df:	mov    al,0x1
  4204e1:	jmp    0x4204ed
  4204e3:	cmp    bh,0x1
  4204e6:	jmp    0x4204ea
  4204e8:	test   bh,bh
  4204ea:	sete   al
  4204ed:	mov    ecx,DWORD PTR [edx*4+0x44dee0]
  4204f4:	imul   edx,edx,0x3
  4204f7:	add    edx,DWORD PTR [ebp-0x8]
  4204fa:	test   al,al
  4204fc:	je     0x420512
  4204fe:	mov    al,BYTE PTR [edx+0x2]
  420501:	cmp    al,0x15
  420503:	je     0x420509
  420505:	cmp    al,0x1b
  420507:	jne    0x420512
  420509:	cmp    BYTE PTR [ecx+0x1],0x8
  42050d:	jne    0x420512
  42050f:	or     bl,0x8
  420512:	movzx  edx,BYTE PTR [edx+0x1]
  420516:	shr    edx,0x4
  420519:	cmp    edx,0xb
  42051c:	je     0x420523
  42051e:	cmp    edx,0xd
  420521:	jne    0x42054e
  420523:	cmp    BYTE PTR [ecx],0x7
  420526:	jne    0x420542
  420528:	movzx  eax,WORD PTR [ecx+0x2]
  42052c:	test   eax,0x2000
  420531:	je     0x420539
  420533:	mov    BYTE PTR [ebp-0x1],0x1
  420537:	jmp    0x420542
  420539:	and    al,0xf
  42053b:	cmp    al,0x3
  42053d:	jbe    0x420542
  42053f:	or     bl,0x40
  420542:	mov    al,BYTE PTR [ecx+0x2]
  420545:	and    al,0xf
  420547:	cmp    al,0x7
  420549:	jbe    0x42054e
  42054b:	or     bl,0x4
  42054e:	cmp    edx,0xc
  420551:	jne    0x42058a
  420553:	cmp    BYTE PTR [ecx],0x1
  420556:	jne    0x420594
  420558:	movzx  ecx,WORD PTR [ecx+0x2]
  42055c:	test   ecx,0x800
  420562:	je     0x42056f
  420564:	mov    al,cl
  420566:	and    al,0xf
  420568:	cmp    al,0x7
  42056a:	jbe    0x42056f
  42056c:	or     bl,0x1
  42056f:	test   ecx,0x1000
  420575:	je     0x4205bf
  420577:	push   0x70
  420579:	and    ecx,0xf0
  42057f:	pop    eax
  420580:	cmp    cx,ax
  420583:	jbe    0x4205bf
  420585:	or     bl,0x2
  420588:	jmp    0x4205bf
  42058a:	cmp    edx,0x8
  42058d:	je     0x420594
  42058f:	cmp    edx,0xd
  420592:	jne    0x4205bf
  420594:	cmp    BYTE PTR [ecx],0x7
  420597:	jne    0x4205b3
  420599:	movzx  eax,WORD PTR [ecx+0x2]
  42059d:	test   eax,0x2000
  4205a2:	je     0x4205aa
  4205a4:	mov    BYTE PTR [ebp-0x1],0x1
  4205a8:	jmp    0x4205b3
  4205aa:	and    al,0xf
  4205ac:	cmp    al,0x3
  4205ae:	jbe    0x4205b3
  4205b0:	or     bl,0x40
  4205b3:	mov    al,BYTE PTR [ecx+0x2]
  4205b6:	and    al,0xf
  4205b8:	cmp    al,0x7
  4205ba:	jbe    0x4205bf
  4205bc:	or     bl,0x1
  4205bf:	inc    bh
  4205c1:	movzx  edx,bh
  4205c4:	cmp    edx,esi
  4205c6:	jl     0x4204c6
  4205cc:	mov    dl,BYTE PTR [ebp-0x1]
  4205cf:	pop    edi
  4205d0:	jmp    0x420621
  4205d2:	cmp    al,0x4
  4205d4:	jne    0x42063a
  4205d6:	mov    eax,ds:0x44dee0
  4205db:	mov    cl,BYTE PTR [eax]
  4205dd:	cmp    cl,0x1
  4205e0:	jne    0x420611
  4205e2:	movzx  ecx,WORD PTR [eax+0x2]
  4205e6:	test   ecx,0x800
  4205ec:	je     0x4205f8
  4205ee:	mov    al,cl
  4205f0:	and    al,0xf
  4205f2:	cmp    al,0x7
  4205f4:	jbe    0x4205f8
  4205f6:	mov    bl,0x1
  4205f8:	test   ecx,0x1000
  4205fe:	je     0x420621
  420600:	and    ecx,0xf0
  420606:	cmp    cx,0x70
  42060a:	jbe    0x420621
  42060c:	or     bl,0x2
  42060f:	jmp    0x420621
  420611:	cmp    cl,0x6
  420614:	jne    0x42063a
  420616:	mov    al,BYTE PTR [eax+0x2]
  420619:	and    al,0xf
  42061b:	cmp    al,0x7
  42061d:	jbe    0x42063a
  42061f:	mov    bl,0x1
  420621:	test   bl,bl
  420623:	je     0x42063a
  420625:	test   dl,dl
  420627:	je     0x420637
  420629:	push   0x0
  42062b:	xor    edx,edx
  42062d:	mov    ecx,0x8aa
  420632:	call   0x42ee80
  420637:	or     bl,0x40
  42063a:	pop    esi
  42063b:	mov    al,bl
  42063d:	pop    ebx
  42063e:	leave  
  42063f:	ret    
  420640:	push   ebp
  420641:	mov    ebp,esp
  420643:	sub    esp,0x24
  420646:	push   ebx
  420647:	xor    ebx,ebx
  420649:	push   esi
  42064a:	mov    esi,DWORD PTR ds:0x44def8
  420650:	mov    ecx,ebx
  420652:	mov    al,BYTE PTR [esi+0x4]
  420655:	and    al,0x7
  420657:	mov    DWORD PTR [ebp-0x14],ebx
  42065a:	mov    DWORD PTR [ebp-0x24],ebx
  42065d:	mov    DWORD PTR [ebp-0x20],ebx
  420660:	mov    DWORD PTR [ebp-0xc],ebx
  420663:	mov    DWORD PTR [ebp-0x10],ebx
  420666:	mov    DWORD PTR [ebp-0x1c],ecx
  420669:	mov    BYTE PTR [ebp-0x6],bl
  42066c:	cmp    al,0x1
  42066e:	jbe    0x4206bf
  420670:	test   BYTE PTR [esi+0x9],0x1
  420674:	je     0x4206bf
  420676:	mov    eax,ds:0x44dee0
  42067b:	mov    al,BYTE PTR [eax+0x1]
  42067e:	test   al,al
  420680:	je     0x4206bf
  420682:	mov    edx,DWORD PTR ds:0x44dee4
  420688:	mov    cl,BYTE PTR [edx+0x1]
  42068b:	test   cl,cl
  42068d:	je     0x4206bf
  42068f:	cmp    al,cl
  420691:	je     0x4206bf
  420693:	cmp    BYTE PTR [edx],0x2
  420696:	jne    0x4206f9
  420698:	cmp    cl,al
  42069a:	ja     0x4206a5
  42069c:	test   DWORD PTR [edx+0x4],0x4000
  4206a3:	jne    0x4206bf
  4206a5:	test   DWORD PTR [edx+0x4],0x100
  4206ac:	je     0x4206bf
  4206ae:	cmp    al,0x1
  4206b0:	je     0x4206f9
  4206b2:	cmp    cl,0x1
  4206b5:	je     0x4206f9
  4206b7:	cmp    cl,0x4
  4206ba:	je     0x4206f9
  4206bc:	mov    BYTE PTR [edx+0x1],al
  4206bf:	mov    ebx,DWORD PTR ds:0x44def4
  4206c5:	mov    eax,ds:0x448860
  4206ca:	add    ebx,0x2
  4206cd:	test   BYTE PTR [eax+0x7],0x40
  4206d1:	je     0x4206d7
  4206d3:	mov    BYTE PTR [ebx],0x9b
  4206d6:	inc    ebx
  4206d7:	test   BYTE PTR [esi+0x9],0x8
  4206db:	jne    0x420725
  4206dd:	movzx  eax,BYTE PTR [esi+0x8]
  4206e1:	shr    eax,0x5
  4206e4:	and    eax,0x3
  4206e7:	dec    eax
  4206e8:	je     0x42071e
  4206ea:	dec    eax
  4206eb:	je     0x420715
  4206ed:	dec    eax
  4206ee:	jne    0x420725
  4206f0:	mov    BYTE PTR ds:0x44deda,0xf3
  4206f7:	jmp    0x420725
  4206f9:	cmp    BYTE PTR ds:0x45f692,bl
  4206ff:	je     0x42070e
  420701:	push   ebx
  420702:	xor    edx,edx
  420704:	mov    ecx,0x7e6
  420709:	call   0x42ee80
  42070e:	xor    eax,eax
  420710:	jmp    0x420e29
  420715:	mov    BYTE PTR ds:0x44deda,0xf2
  42071c:	jmp    0x420725
  42071e:	mov    BYTE PTR ds:0x44deda,0x66
  420725:	push   edi
  420726:	call   0x420482
  42072b:	mov    cl,BYTE PTR ds:0x44deda
  420731:	mov    edi,DWORD PTR ds:0x44def8
  420737:	mov    BYTE PTR [ebp-0x4],al
  42073a:	test   cl,cl
  42073c:	je     0x420757
  42073e:	test   BYTE PTR [edi+0x9],0x8
  420742:	jne    0x420748
  420744:	test   al,al
  420746:	jne    0x420757
  420748:	mov    al,ds:0x44dede
  42074d:	mov    BYTE PTR [ebx],cl
  42074f:	inc    ebx
  420750:	test   al,al
  420752:	je     0x420757
  420754:	mov    BYTE PTR [ebx],al
  420756:	inc    ebx
  420757:	movzx  edx,BYTE PTR [edi+0x4]
  42075b:	and    edx,0x7
  42075e:	mov    DWORD PTR [ebp-0x18],edx
  420761:	mov    esi,edx
  420763:	je     0x4207b0
  420765:	mov    edi,DWORD PTR [edi]
  420767:	xor    dl,dl
  420769:	inc    edi
  42076a:	movzx  ecx,BYTE PTR [edi]
  42076d:	shr    ecx,0x4
  420770:	inc    dl
  420772:	cmp    ecx,0xc
  420775:	je     0x42078f
  420777:	cmp    ecx,0xd
  42077a:	je     0x42078f
  42077c:	cmp    ecx,0x9
  42077f:	je     0x42078f
  420781:	mov    al,cl
  420783:	dec    al
  420785:	cmp    al,0x2
  420787:	jb     0x42078f
  420789:	add    edi,0x3
  42078c:	dec    esi
  42078d:	jne    0x42076a
  42078f:	mov    edi,DWORD PTR ds:0x44def8
  420795:	mov    BYTE PTR [ebp-0x5],dl
  420798:	mov    edx,DWORD PTR [ebp-0x18]
  42079b:	test   esi,esi
  42079d:	je     0x4207b6
  42079f:	sub    edx,esi
  4207a1:	mov    DWORD PTR [ebp-0x1c],ecx
  4207a4:	mov    esi,DWORD PTR [edx*4+0x44dee0]
  4207ab:	mov    DWORD PTR [ebp-0xc],esi
  4207ae:	jmp    0x4207b9
  4207b0:	mov    al,BYTE PTR [ebp-0x6]
  4207b3:	mov    BYTE PTR [ebp-0x5],al
  4207b6:	mov    esi,DWORD PTR [ebp-0xc]
  4207b9:	movzx  eax,BYTE PTR [edi+0x8]
  4207bd:	and    DWORD PTR [ebp-0x18],0x0
  4207c1:	shr    eax,0x3
  4207c4:	and    eax,0x3
  4207c7:	je     0x42080b
  4207c9:	cmp    eax,0x3
  4207cc:	jne    0x4207d7
  4207ce:	test   esi,esi
  4207d0:	je     0x42080b
  4207d2:	cmp    BYTE PTR [esi],0x1
  4207d5:	jne    0x42080b
  4207d7:	test   esi,esi
  4207d9:	je     0x4207f0
  4207db:	mov    ecx,DWORD PTR [esi+0x4]
  4207de:	and    ecx,0x800
  4207e4:	neg    ecx
  4207e6:	sbb    ecx,ecx
  4207e8:	and    ecx,0x4
  4207eb:	add    ecx,0x4
  4207ee:	jmp    0x4207ff
  4207f0:	xor    ecx,ecx
  4207f2:	cmp    eax,0x2
  4207f5:	sete   cl
  4207f8:	lea    ecx,[ecx*4+0x4]
  4207ff:	mov    DWORD PTR [ebp-0x18],ecx
  420802:	cmp    ecx,0x4
  420805:	jne    0x42080b
  420807:	mov    BYTE PTR [ebx],0x67
  42080a:	inc    ebx
  42080b:	movzx  eax,BYTE PTR [edi+0x8]
  42080f:	and    eax,0x7
  420812:	je     0x420883
  420814:	dec    eax
  420815:	je     0x420863
  420817:	dec    eax
  420818:	je     0x420859
  42081a:	dec    eax
  42081b:	je     0x420848
  42081d:	dec    eax
  42081e:	je     0x42083f
  420820:	dec    eax
  420821:	je     0x420836
  420823:	dec    eax
  420824:	jne    0x42082f
  420826:	mov    BYTE PTR ds:0x44defc,0x8
  42082d:	jmp    0x420883
  42082f:	mov    al,ds:0x44defc
  420834:	jmp    0x42087b
  420836:	mov    BYTE PTR ds:0x44defc,0x4
  42083d:	jmp    0x420883
  42083f:	mov    BYTE PTR ds:0x44defc,0x2
  420846:	jmp    0x42087f
  420848:	mov    eax,ds:0x44dee0
  42084d:	mov    al,BYTE PTR [eax+0x1]
  420850:	mov    ds:0x44defc,al
  420855:	test   al,al
  420857:	jne    0x42087b
  420859:	mov    eax,ds:0x44dee4
  42085e:	mov    al,BYTE PTR [eax+0x1]
  420861:	jmp    0x420876
  420863:	mov    eax,ds:0x44dee0
  420868:	mov    al,BYTE PTR [eax+0x1]
  42086b:	mov    ds:0x44defc,al
  420870:	test   al,al
  420872:	jne    0x42087b
  420874:	add    al,0x4
  420876:	mov    ds:0x44defc,al
  42087b:	cmp    al,0x2
  42087d:	jne    0x420883
  42087f:	mov    BYTE PTR [ebx],0x66
  420882:	inc    ebx
  420883:	test   esi,esi
  420885:	je     0x4208cf
  420887:	cmp    BYTE PTR [esi],0x1
  42088a:	jne    0x4208cf
  42088c:	mov    al,BYTE PTR [esi+0x3]
  42088f:	and    al,0x7
  420891:	cmp    al,0x7
  420893:	sete   cl
  420896:	dec    cl
  420898:	and    cl,al
  42089a:	test   BYTE PTR [edi+0x9],0x6
  42089e:	mov    BYTE PTR [ebp-0x3],cl
  4208a1:	je     0x4208b3
  4208a3:	mov    ecx,edi
  4208a5:	call   0x422328
  4208aa:	mov    cl,BYTE PTR [ebp-0x3]
  4208ad:	mov    edi,DWORD PTR ds:0x44def8
  4208b3:	test   cl,cl
  4208b5:	je     0x4208cf
  4208b7:	cmp    DWORD PTR ds:0x448860,0x401cd0
  4208c1:	je     0x4208cf
  4208c3:	movzx  eax,cl
  4208c6:	mov    al,BYTE PTR [eax+0x40113b]
  4208cc:	mov    BYTE PTR [ebx],al
  4208ce:	inc    ebx
  4208cf:	mov    al,BYTE PTR [edi+0x9]
  4208d2:	test   al,0x8
  4208d4:	je     0x4209f5
  4208da:	mov    dh,BYTE PTR [edi+0x5]
  4208dd:	mov    al,dh
  4208df:	xor    ch,ch
  4208e1:	mov    BYTE PTR [ebp-0x3],0x0
  4208e5:	mov    dl,0x1
  4208e7:	mov    cl,0x78
  4208e9:	test   al,al
  4208eb:	je     0x420913
  4208ed:	cmp    al,0x38
  4208ef:	je     0x42090d
  4208f1:	cmp    al,0x3a
  4208f3:	je     0x420907
  4208f5:	add    al,0x8
  4208f7:	cmp    al,0x2
  4208f9:	ja     0x420915
  4208fb:	mov    BYTE PTR [ebp-0x3],dl
  4208fe:	mov    ch,dh
  420900:	xor    dl,dl
  420902:	and    ch,0xf
  420905:	jmp    0x420915
  420907:	xor    dl,dl
  420909:	mov    ch,0x3
  42090b:	jmp    0x420915
  42090d:	xor    dl,dl
  42090f:	mov    ch,0x2
  420911:	jmp    0x420915
  420913:	mov    ch,0x1
  420915:	mov    dh,BYTE PTR [edi+0x9]
  420918:	test   dh,0x20
  42091b:	je     0x420921
  42091d:	xor    dl,dl
  42091f:	mov    cl,0xf8
  420921:	mov    ah,BYTE PTR [ebp-0x4]
  420924:	mov    al,ah
  420926:	and    al,0xb
  420928:	neg    al
  42092a:	sbb    al,al
  42092c:	not    al
  42092e:	and    al,dl
  420930:	mov    BYTE PTR [ebp-0x2],al
  420933:	test   ah,0x4
  420936:	jne    0x420944
  420938:	test   al,al
  42093a:	je     0x420941
  42093c:	or     cl,0x80
  42093f:	jmp    0x420944
  420941:	or     ch,0x80
  420944:	test   ah,0x2
  420947:	jne    0x42094c
  420949:	or     ch,0x40
  42094c:	test   ah,0x1
  42094f:	jne    0x420954
  420951:	or     ch,0x20
  420954:	test   ah,0x8
  420957:	je     0x42095c
  420959:	or     cl,0x80
  42095c:	movzx  eax,BYTE PTR [edi+0x8]
  420960:	shr    eax,0x5
  420963:	and    eax,0x3
  420966:	dec    eax
  420967:	je     0x420979
  420969:	dec    eax
  42096a:	je     0x420974
  42096c:	dec    eax
  42096d:	jne    0x42097c
  42096f:	or     cl,0x2
  420972:	jmp    0x42097c
  420974:	or     cl,0x3
  420977:	jmp    0x42097c
  420979:	or     cl,0x1
  42097c:	test   dh,0x10
  42097f:	je     0x420984
  420981:	or     cl,0x4
  420984:	movzx  edx,BYTE PTR [edi+0x4]
  420988:	mov    BYTE PTR [ebp-0x4],0x0
  42098c:	and    edx,0x7
  42098f:	jle    0x4209d1
  420991:	mov    edi,DWORD PTR [edi]
  420993:	xor    eax,eax
  420995:	mov    esi,DWORD PTR [eax*4+0x44dee0]
  42099c:	imul   eax,eax,0x3
  42099f:	mov    al,BYTE PTR [eax+edi*1+0x1]
  4209a3:	and    al,0xf0
  4209a5:	cmp    al,0xe0
  4209a7:	je     0x4209ba
  4209a9:	mov    al,BYTE PTR [ebp-0x4]
  4209ac:	inc    al
  4209ae:	mov    BYTE PTR [ebp-0x4],al
  4209b1:	movzx  eax,al
  4209b4:	cmp    eax,edx
  4209b6:	jl     0x420995
  4209b8:	jmp    0x4209c8
  4209ba:	mov    al,BYTE PTR [esi+0x2]
  4209bd:	shl    al,0x3
  4209c0:	not    al
  4209c2:	xor    al,cl
  4209c4:	and    al,0x78
  4209c6:	xor    cl,al
  4209c8:	mov    esi,DWORD PTR [ebp-0xc]
  4209cb:	mov    edi,DWORD PTR ds:0x44def8
  4209d1:	cmp    BYTE PTR [ebp-0x2],0x0
  4209d5:	je     0x4209dc
  4209d7:	mov    BYTE PTR [ebx],0xc5
  4209da:	jmp    0x4209ed
  4209dc:	cmp    BYTE PTR [ebp-0x3],0x0
  4209e0:	je     0x4209e7
  4209e2:	mov    BYTE PTR [ebx],0x8f
  4209e5:	jmp    0x4209ea
  4209e7:	mov    BYTE PTR [ebx],0xc4
  4209ea:	inc    ebx
  4209eb:	mov    BYTE PTR [ebx],ch
  4209ed:	mov    BYTE PTR [ebx+0x1],cl
  4209f0:	add    ebx,0x2
  4209f3:	jmp    0x420a2d
  4209f5:	mov    al,BYTE PTR [ebp-0x4]
  4209f8:	test   al,al
  4209fa:	je     0x420a19
  4209fc:	mov    cl,BYTE PTR ds:0x44deda
  420a02:	test   cl,cl
  420a04:	je     0x420a16
  420a06:	mov    BYTE PTR [ebx],cl
  420a08:	mov    cl,BYTE PTR ds:0x44dede
  420a0e:	inc    ebx
  420a0f:	test   cl,cl
  420a11:	je     0x420a16
  420a13:	mov    BYTE PTR [ebx],cl
  420a15:	inc    ebx
  420a16:	mov    BYTE PTR [ebx],al
  420a18:	inc    ebx
  420a19:	test   BYTE PTR [edi+0x4],0x80
  420a1d:	je     0x420a23
  420a1f:	mov    BYTE PTR [ebx],0xf
  420a22:	inc    ebx
  420a23:	mov    al,BYTE PTR [edi+0x5]
  420a26:	test   al,al
  420a28:	je     0x420a2d
  420a2a:	mov    BYTE PTR [ebx],al
  420a2c:	inc    ebx
  420a2d:	push   0x8
  420a2f:	pop    edx
  420a30:	call   0x4222c5
  420a35:	test   eax,eax
  420a37:	je     0x420a43
  420a39:	mov    al,BYTE PTR [eax+0x2]
  420a3c:	and    al,0x7
  420a3e:	add    al,BYTE PTR [edi+0x6]
  420a41:	jmp    0x420a46
  420a43:	mov    al,BYTE PTR [edi+0x6]
  420a46:	mov    BYTE PTR [ebx],al
  420a48:	mov    eax,DWORD PTR [ebp-0x1c]
  420a4b:	xor    ecx,ecx
  420a4d:	inc    ebx
  420a4e:	mov    BYTE PTR ds:0x44dedf,cl
  420a54:	cmp    eax,0xc
  420a57:	je     0x420af9
  420a5d:	cmp    eax,0xd
  420a60:	je     0x420af9
  420a66:	cmp    BYTE PTR ds:0x44deda,0xf0
  420a6d:	je     0x420add
  420a6f:	cmp    BYTE PTR ds:0x44dede,0xf0
  420a76:	je     0x420add
  420a78:	cmp    eax,0x1
  420a7b:	je     0x420a86
  420a7d:	cmp    eax,0x2
  420a80:	jne    0x420c70
  420a86:	mov    edx,ebx
  420a88:	mov    DWORD PTR [ebp-0x14],edx
  420a8b:	cmp    eax,0x1
  420a8e:	jne    0x420a95
  420a90:	mov    ecx,DWORD PTR [ebp-0x18]
  420a93:	jmp    0x420a98
  420a95:	push   0x2
  420a97:	pop    ecx
  420a98:	mov    dl,BYTE PTR ds:0x44defc
  420a9e:	cmp    ecx,0x8
  420aa1:	sete   BYTE PTR ds:0x44dedf
  420aa8:	cmp    dl,0x8
  420aab:	je     0x420acb
  420aad:	movzx  eax,BYTE PTR [ebp-0x5]
  420ab1:	mov    eax,DWORD PTR [eax*4+0x44dedc]
  420ab8:	cmp    BYTE PTR [eax+0x1],0x8
  420abc:	jne    0x420acb
  420abe:	mov    BYTE PTR ds:0x44defc,0x8
  420ac5:	mov    dl,BYTE PTR ds:0x44defc
  420acb:	mov    eax,DWORD PTR [esi+0x8]
  420ace:	mov    DWORD PTR [ebx],eax
  420ad0:	mov    eax,DWORD PTR [esi+0xc]
  420ad3:	mov    DWORD PTR [ebx+0x4],eax
  420ad6:	add    ebx,ecx
  420ad8:	jmp    0x420c76
  420add:	cmp    BYTE PTR ds:0x45f692,cl
  420ae3:	je     0x420af2
  420ae5:	push   ecx
  420ae6:	xor    edx,edx
  420ae8:	mov    ecx,0x813
  420aed:	call   0x42ee80
  420af2:	xor    eax,eax
  420af4:	jmp    0x420e28
  420af9:	mov    dl,cl
  420afb:	mov    BYTE PTR [ebp-0x3],cl
  420afe:	mov    BYTE PTR [ebp-0x4],cl
  420b01:	mov    cl,BYTE PTR [esi+0x2]
  420b04:	and    cl,0x7
  420b07:	cmp    BYTE PTR [esi],0x1
  420b0a:	mov    BYTE PTR [ebp-0x2],dl
  420b0d:	je     0x420b17
  420b0f:	or     cl,0xc0
  420b12:	jmp    0x420be3
  420b17:	movzx  eax,WORD PTR [esi+0x2]
  420b1b:	mov    BYTE PTR [ebp-0x4],0x4
  420b1f:	test   eax,0x1000
  420b24:	jne    0x420b60
  420b26:	test   eax,0x800
  420b2b:	jne    0x420b52
  420b2d:	mov    eax,DWORD PTR [esi+0x10]
  420b30:	test   eax,eax
  420b32:	je     0x420b45
  420b34:	cmp    BYTE PTR [eax+0x6],0x8
  420b38:	je     0x420b45
  420b3a:	mov    BYTE PTR [ebp-0x6],0x1
  420b3e:	mov    cl,0x5
  420b40:	jmp    0x420be3
  420b45:	mov    BYTE PTR [ebp-0x3],0x1
  420b49:	mov    BYTE PTR [ebp-0x2],0x25
  420b4d:	jmp    0x420be1
  420b52:	and    al,0x7
  420b54:	cmp    al,0x4
  420b56:	jne    0x420b8b
  420b58:	mov    BYTE PTR [ebp-0x3],0x1
  420b5c:	mov    dl,0x24
  420b5e:	jmp    0x420b86
  420b60:	mov    dl,al
  420b62:	mov    eax,DWORD PTR [esi+0x4]
  420b65:	shr    dl,0x4
  420b68:	and    dl,0x7
  420b6b:	shr    eax,0x3
  420b6e:	and    al,0xc0
  420b70:	shl    dl,0x3
  420b73:	or     dl,al
  420b75:	movzx  eax,WORD PTR [esi+0x2]
  420b79:	mov    BYTE PTR [ebp-0x3],0x1
  420b7d:	test   eax,0x800
  420b82:	je     0x420bdb
  420b84:	or     dl,cl
  420b86:	mov    cl,0x4
  420b88:	mov    BYTE PTR [ebp-0x2],dl
  420b8b:	or     cl,0x80
  420b8e:	cmp    DWORD PTR [esi+0x10],0x0
  420b92:	mov    BYTE PTR [ebp-0x1],cl
  420b95:	jne    0x420be6
  420b97:	movsx  eax,BYTE PTR [esi+0x8]
  420b9b:	cmp    eax,DWORD PTR [esi+0x8]
  420b9e:	jne    0x420be6
  420ba0:	mov    eax,DWORD PTR [esi+0x8]
  420ba3:	xor    cl,0xc0
  420ba6:	or     eax,DWORD PTR [esi+0xc]
  420ba9:	mov    BYTE PTR [ebp-0x1],cl
  420bac:	jne    0x420bc9
  420bae:	cmp    cl,0x45
  420bb1:	je     0x420bc9
  420bb3:	cmp    cl,0x44
  420bb6:	jne    0x420bc0
  420bb8:	mov    al,dl
  420bba:	and    al,0x7
  420bbc:	cmp    al,0x5
  420bbe:	je     0x420bc9
  420bc0:	and    cl,0x3f
  420bc3:	mov    BYTE PTR [ebp-0x4],0x0
  420bc7:	jmp    0x420be3
  420bc9:	mov    eax,DWORD PTR [esi+0x4]
  420bcc:	and    eax,0xffffff9f
  420bcf:	or     eax,0x10
  420bd2:	mov    BYTE PTR [ebp-0x4],0x1
  420bd6:	mov    DWORD PTR [esi+0x4],eax
  420bd9:	jmp    0x420be6
  420bdb:	or     dl,0x5
  420bde:	mov    BYTE PTR [ebp-0x2],dl
  420be1:	mov    cl,0x4
  420be3:	mov    BYTE PTR [ebp-0x1],cl
  420be6:	mov    al,BYTE PTR [edi+0x4]
  420be9:	test   al,0x8
  420beb:	je     0x420bf3
  420bed:	shr    al,1
  420bef:	and    al,0x38
  420bf1:	jmp    0x420c24
  420bf3:	push   0xb
  420bf5:	pop    edx
  420bf6:	call   0x4222c5
  420bfb:	test   eax,eax
  420bfd:	jne    0x420c19
  420bff:	push   0xa
  420c01:	pop    edx
  420c02:	call   0x4222c5
  420c07:	mov    cl,BYTE PTR [ebp-0x1]
  420c0a:	test   eax,eax
  420c0c:	je     0x420c26
  420c0e:	mov    eax,DWORD PTR [eax+0x14]
  420c11:	mov    al,BYTE PTR [eax+0x4010e8]
  420c17:	jmp    0x420c21
  420c19:	mov    al,BYTE PTR [eax+0x2]
  420c1c:	mov    cl,BYTE PTR [ebp-0x1]
  420c1f:	and    al,0x7
  420c21:	shl    al,0x3
  420c24:	or     cl,al
  420c26:	mov    BYTE PTR [ebx],cl
  420c28:	inc    ebx
  420c29:	cmp    BYTE PTR [ebp-0x3],0x0
  420c2d:	je     0x420c35
  420c2f:	mov    al,BYTE PTR [ebp-0x2]
  420c32:	mov    BYTE PTR [ebx],al
  420c34:	inc    ebx
  420c35:	mov    cl,BYTE PTR [ebp-0x4]
  420c38:	test   cl,cl
  420c3a:	je     0x420c6b
  420c3c:	movzx  eax,BYTE PTR [ebp-0x5]
  420c40:	mov    edx,ebx
  420c42:	mov    eax,DWORD PTR [eax*4+0x44dedc]
  420c49:	mov    DWORD PTR [ebp-0x14],edx
  420c4c:	cmp    BYTE PTR [eax+0x1],0x8
  420c50:	mov    eax,DWORD PTR [esi+0x8]
  420c53:	mov    DWORD PTR [ebx],eax
  420c55:	jne    0x420c64
  420c57:	mov    eax,DWORD PTR [esi+0xc]
  420c5a:	mov    DWORD PTR [ebx+0x4],eax
  420c5d:	mov    BYTE PTR ds:0x44defc,0x8
  420c64:	movzx  eax,cl
  420c67:	add    ebx,eax
  420c69:	jmp    0x420c70
  420c6b:	xor    edx,edx
  420c6d:	mov    DWORD PTR [ebp-0x14],edx
  420c70:	mov    dl,BYTE PTR ds:0x44defc
  420c76:	movzx  esi,BYTE PTR [edi+0x4]
  420c7a:	and    esi,0x7
  420c7d:	je     0x420dc1
  420c83:	mov    edi,DWORD PTR [edi]
  420c85:	inc    edi
  420c86:	movzx  ecx,BYTE PTR [edi]
  420c89:	shr    ecx,0x4
  420c8c:	mov    al,cl
  420c8e:	sub    al,0x3
  420c90:	cmp    al,0x4
  420c92:	ja     0x420db1
  420c98:	mov    eax,ds:0x44def8
  420c9d:	mov    DWORD PTR [ebp-0x24],ebx
  420ca0:	movzx  eax,BYTE PTR [eax+0x4]
  420ca4:	and    eax,0x7
  420ca7:	sub    eax,esi
  420ca9:	mov    eax,DWORD PTR [eax*4+0x44dee0]
  420cb0:	mov    DWORD PTR [ebp-0x10],eax
  420cb3:	cmp    ecx,0x3
  420cb6:	jne    0x420cd8
  420cb8:	cmp    dl,BYTE PTR [eax+0x1]
  420cbb:	jae    0x420cef
  420cbd:	test   DWORD PTR [eax+0x4],0x40000
  420cc4:	jne    0x420cef
  420cc6:	mov    ecx,0x7e6
  420ccb:	xor    edx,edx
  420ccd:	push   edx
  420cce:	call   0x42ee80
  420cd3:	jmp    0x420d90
  420cd8:	cmp    ecx,0x4
  420cdb:	jne    0x420cef
  420cdd:	cmp    BYTE PTR [eax],0x2
  420ce0:	jne    0x420cef
  420ce2:	mov    ecx,DWORD PTR [ebp-0x20]
  420ce5:	mov    al,BYTE PTR [eax+0x8]
  420ce8:	or     BYTE PTR [ecx],al
  420cea:	jmp    0x420db1
  420cef:	mov    al,BYTE PTR [eax]
  420cf1:	cmp    al,0xc
  420cf3:	je     0x420da2
  420cf9:	cmp    al,0xd
  420cfb:	je     0x420da2
  420d01:	mov    eax,DWORD PTR [ebp-0x10]
  420d04:	cmp    BYTE PTR [eax+0x1],0x4
  420d08:	jbe    0x420d34
  420d0a:	mov    eax,ds:0x44def8
  420d0f:	mov    al,BYTE PTR [eax+0x6]
  420d12:	cmp    al,0xa1
  420d14:	je     0x420d21
  420d16:	cmp    al,0xb8
  420d18:	je     0x420d21
  420d1a:	mov    ecx,0x824
  420d1f:	jmp    0x420ccb
  420d21:	mov    ecx,DWORD PTR [ebp-0x10]
  420d24:	mov    eax,DWORD PTR [ecx+0x8]
  420d27:	mov    DWORD PTR [ebx],eax
  420d29:	mov    eax,DWORD PTR [ecx+0xc]
  420d2c:	mov    DWORD PTR [ebx+0x4],eax
  420d2f:	add    ebx,0x8
  420d32:	jmp    0x420db1
  420d34:	mov    eax,DWORD PTR [eax+0x8]
  420d37:	mov    DWORD PTR [ebx],eax
  420d39:	mov    eax,DWORD PTR [ebp-0x10]
  420d3c:	add    ebx,0x2
  420d3f:	mov    eax,DWORD PTR [eax+0xc]
  420d42:	mov    DWORD PTR [ebx+0x2],eax
  420d45:	cmp    ecx,0x5
  420d48:	jne    0x420d5d
  420d4a:	mov    ecx,DWORD PTR [ebp-0x10]
  420d4d:	dec    ebx
  420d4e:	mov    eax,DWORD PTR [ecx+0x4]
  420d51:	test   al,0x70
  420d53:	jne    0x420db1
  420d55:	or     eax,0x10
  420d58:	mov    DWORD PTR [ecx+0x4],eax
  420d5b:	jmp    0x420db1
  420d5d:	cmp    ecx,0x7
  420d60:	je     0x420d9d
  420d62:	cmp    ecx,0x3
  420d65:	jne    0x420db1
  420d67:	cmp    dl,0x4
  420d6a:	je     0x420d9d
  420d6c:	cmp    dl,0x8
  420d6f:	jne    0x420db1
  420d71:	mov    eax,ds:0x44def8
  420d76:	movzx  eax,BYTE PTR [eax+0x6]
  420d7a:	sub    eax,0xa1
  420d7f:	je     0x420d98
  420d81:	sub    eax,0x17
  420d84:	je     0x420d98
  420d86:	mov    BYTE PTR ds:0x44defc,0x4
  420d8d:	add    ebx,0x2
  420d90:	mov    dl,BYTE PTR ds:0x44defc
  420d96:	jmp    0x420db1
  420d98:	add    ebx,0x6
  420d9b:	jmp    0x420db1
  420d9d:	add    ebx,0x2
  420da0:	jmp    0x420db1
  420da2:	mov    eax,DWORD PTR [ebp-0x10]
  420da5:	mov    DWORD PTR [ebp-0x20],ebx
  420da8:	mov    al,BYTE PTR [eax+0x2]
  420dab:	shl    al,0x4
  420dae:	mov    BYTE PTR [ebx],al
  420db0:	inc    ebx
  420db1:	add    edi,0x3
  420db4:	dec    esi
  420db5:	jne    0x420c86
  420dbb:	mov    edi,DWORD PTR ds:0x44def8
  420dc1:	test   BYTE PTR [edi+0x8],0x80
  420dc5:	je     0x420dcd
  420dc7:	mov    al,BYTE PTR [edi+0x7]
  420dca:	mov    BYTE PTR [ebx],al
  420dcc:	inc    ebx
  420dcd:	mov    ecx,DWORD PTR ds:0x44def4
  420dd3:	mov    al,bl
  420dd5:	sub    al,cl
  420dd7:	sub    al,0x2
  420dd9:	mov    BYTE PTR [ecx+0x1],al
  420ddc:	mov    eax,DWORD PTR [ebp-0x14]
  420ddf:	mov    BYTE PTR [ecx],0x0
  420de2:	test   eax,eax
  420de4:	je     0x420e09
  420de6:	cmp    BYTE PTR [ebp-0x6],0x0
  420dea:	mov    edx,DWORD PTR [ebp-0xc]
  420ded:	je     0x420dfd
  420def:	push   0x11
  420df1:	push   ecx
  420df2:	push   ebx
  420df3:	push   ecx
  420df4:	mov    ecx,eax
  420df6:	call   0x422197
  420dfb:	jmp    0x420e07
  420dfd:	push   ecx
  420dfe:	push   ebx
  420dff:	push   ecx
  420e00:	mov    ecx,eax
  420e02:	call   0x422229
  420e07:	mov    ebx,eax
  420e09:	mov    eax,DWORD PTR [ebp-0x24]
  420e0c:	mov    BYTE PTR ds:0x44dedf,0x0
  420e13:	test   eax,eax
  420e15:	je     0x420e26
  420e17:	mov    edx,DWORD PTR [ebp-0x10]
  420e1a:	push   ecx
  420e1b:	push   ebx
  420e1c:	push   ecx
  420e1d:	mov    ecx,eax
  420e1f:	call   0x422229
  420e24:	mov    ebx,eax
  420e26:	mov    eax,ebx
  420e28:	pop    edi
  420e29:	pop    esi
  420e2a:	pop    ebx
  420e2b:	leave  
  420e2c:	ret    0x4
  420e2f:	int3   
  420e30:	push   ebp
  420e31:	mov    ebp,esp
  420e33:	and    esp,0xfffffff8
  420e36:	sub    esp,0x14
  420e39:	cmp    BYTE PTR ds:0x45f692,0x0
  420e40:	push   ebx
  420e41:	push   esi
  420e42:	mov    esi,DWORD PTR [ebp+0x8]
  420e45:	push   edi
  420e46:	push   0x5b
  420e48:	pop    edx
  420e49:	push   0x5d
  420e4b:	pop    edi
  420e4c:	jne    0x420e9a
  420e4e:	mov    ecx,DWORD PTR ds:0x462b94
  420e54:	test   ecx,ecx
  420e56:	je     0x420e9a
  420e58:	cmp    BYTE PTR [ecx+0x15],0x0
  420e5c:	je     0x420e9a
  420e5e:	movzx  eax,WORD PTR [esi+0x3]
  420e62:	cmp    eax,edx
  420e64:	jl     0x420e8c
  420e66:	cmp    eax,edi
  420e68:	jle    0x420e86
  420e6a:	cmp    eax,0x9e
  420e6f:	je     0x420e86
  420e71:	cmp    eax,0xb7
  420e76:	je     0x420e9a
  420e78:	cmp    eax,0x53c
  420e7d:	jle    0x420e8c
  420e7f:	cmp    eax,0x53f
  420e84:	jg     0x420e8c
  420e86:	mov    BYTE PTR [ecx+0x15],0x0
  420e8a:	jmp    0x420e9a
  420e8c:	push   0x0
  420e8e:	xor    edx,edx
  420e90:	mov    ecx,0xfbe
  420e95:	call   0x42ee80
  420e9a:	mov    cl,BYTE PTR ds:0x45f839
  420ea0:	xor    ebx,ebx
  420ea2:	inc    ebx
  420ea3:	mov    DWORD PTR [esp+0x18],ebx
  420ea7:	mov    DWORD PTR [esp+0x1c],0x2
  420eaf:	test   cl,cl
  420eb1:	je     0x420f18
  420eb3:	and    cl,0xfe
  420eb6:	mov    BYTE PTR ds:0x45f839,cl
  420ebc:	test   cl,0x4
  420ebf:	je     0x420ece
  420ec1:	mov    ecx,esi
  420ec3:	call   0x440ec6
  420ec8:	mov    cl,BYTE PTR ds:0x45f839
  420ece:	test   cl,0x8
  420ed1:	je     0x420f18
  420ed3:	cmp    BYTE PTR [esi],0x54
  420ed6:	jne    0x420f18
  420ed8:	movzx  edx,WORD PTR [esi+0x3]
  420edc:	lea    eax,[edx-0x53d]
  420ee2:	cmp    ax,WORD PTR [esp+0x1c]
  420ee7:	jbe    0x420ef3
  420ee9:	lea    eax,[edx-0x5b]
  420eec:	cmp    ax,WORD PTR [esp+0x1c]
  420ef1:	ja     0x420f18
  420ef3:	or     cl,0x10
  420ef6:	mov    BYTE PTR ds:0x45f839,cl
  420efc:	mov    ecx,0x53d
  420f01:	cmp    dx,cx
  420f04:	je     0x420f3e
  420f06:	push   0x5b
  420f08:	pop    eax
  420f09:	cmp    dx,ax
  420f0c:	je     0x420f45
  420f0e:	cmp    dx,di
  420f11:	je     0x420f45
  420f13:	cmp    edx,0x5c
  420f16:	je     0x420f45
  420f18:	mov    eax,ds:0x45f834
  420f1d:	test   eax,eax
  420f1f:	jne    0x420f6c
  420f21:	mov    ecx,0x7f2
  420f26:	push   0x0
  420f28:	xor    edx,edx
  420f2a:	call   0x42ee80
  420f2f:	cmp    BYTE PTR ds:0x45f692,0x0
  420f36:	jne    0x42133c
  420f3c:	jmp    0x420f61
  420f3e:	cmp    WORD PTR [esi+0x1],0x6
  420f43:	jne    0x420f47
  420f45:	xor    bl,bl
  420f47:	mov    ax,dx
  420f4a:	sub    ax,cx
  420f4d:	movzx  ecx,ax
  420f50:	neg    ecx
  420f52:	sbb    ecx,ecx
  420f54:	and    ecx,edx
  420f56:	mov    dl,bl
  420f58:	call   0x441109
  420f5d:	test   bl,bl
  420f5f:	jne    0x420f18
  420f61:	xor    eax,eax
  420f63:	mov    WORD PTR [esi+0x1],ax
  420f67:	jmp    0x42133c
  420f6c:	or     BYTE PTR [eax+0x7],0x80
  420f70:	mov    al,BYTE PTR [esi+0x5]
  420f73:	movzx  ebx,WORD PTR [esi+0x1]
  420f77:	xor    ecx,ecx
  420f79:	add    ebx,esi
  420f7b:	mov    BYTE PTR ds:0x44defd,cl
  420f81:	mov    BYTE PTR ds:0x44deda,cl
  420f87:	mov    BYTE PTR ds:0x44dede,cl
  420f8d:	mov    DWORD PTR ds:0x44def4,ebx
  420f93:	mov    DWORD PTR [esp+0x1c],eax
  420f97:	test   al,0x8
  420f99:	je     0x420fb1
  420f9b:	and    al,0xe0
  420f9d:	cmp    al,0xe0
  420f9f:	jne    0x42133c
  420fa5:	mov    ecx,esi
  420fa7:	call   0x4202db
  420fac:	jmp    0x42133c
  420fb1:	and    al,0x10
  420fb3:	mov    BYTE PTR [esp+0xe],al
  420fb7:	je     0x420fcf
  420fb9:	sub    ebx,0x4
  420fbc:	mov    DWORD PTR ds:0x44def4,ebx
  420fc2:	mov    eax,DWORD PTR [ebx]
  420fc4:	sub    eax,DWORD PTR ds:0x45f82c
  420fca:	mov    ds:0x45f830,eax
  420fcf:	movzx  eax,WORD PTR [esi+0x3]
  420fd3:	lea    edx,[esi+0x6]
  420fd6:	lea    edi,[eax*8+0x401158]
  420fdd:	mov    eax,DWORD PTR [esp+0x18]
  420fe1:	mov    DWORD PTR ds:0x448860,edi
  420fe7:	mov    BYTE PTR ds:0x44f583,cl
  420fed:	mov    DWORD PTR [esp+0x10],edx
  420ff1:	mov    ds:0x45f838,al
  420ff6:	mov    BYTE PTR ds:0x45f693,cl
  420ffc:	mov    DWORD PTR [esp+0x14],0x44dee0
  421004:	mov    BYTE PTR ds:0x44defe,cl
  42100a:	cmp    BYTE PTR ds:0x44e00b,cl
  421010:	jne    0x421028
  421012:	mov    cl,0x54
  421014:	call   0x43859a
  421019:	mov    ebx,DWORD PTR ds:0x44def4
  42101f:	mov    edi,DWORD PTR ds:0x448860
  421025:	lea    edx,[esi+0x6]
  421028:	cmp    edx,ebx
  42102a:	jae    0x421076
  42102c:	mov    edi,DWORD PTR [esp+0x10]
  421030:	xor    dl,dl
  421032:	mov    ecx,edi
  421034:	call   0x42f6c1
  421039:	mov    ebx,DWORD PTR [esp+0x14]
  42103d:	mov    DWORD PTR [ebx],eax
  42103f:	test   eax,eax
  421041:	je     0x4210d2
  421047:	mov    ecx,eax
  421049:	call   0x4219e1
  42104e:	mov    edx,edi
  421050:	add    ebx,0x4
  421053:	movzx  eax,BYTE PTR [edx]
  421056:	inc    BYTE PTR ds:0x44defe
  42105c:	mov    DWORD PTR [esp+0x14],ebx
  421060:	mov    ebx,DWORD PTR ds:0x44def4
  421066:	add    edx,eax
  421068:	mov    DWORD PTR [esp+0x10],edx
  42106c:	cmp    edx,ebx
  42106e:	jb     0x42102c
  421070:	mov    edi,DWORD PTR ds:0x448860
  421076:	movzx  eax,BYTE PTR ds:0x44defe
  42107d:	movzx  ecx,BYTE PTR [esi+0x5]
  421081:	or     ecx,eax
  421083:	mov    al,cl
  421085:	and    al,0xe0
  421087:	cmp    al,0xe0
  421089:	sete   ah
  42108c:	dec    ah
  42108e:	and    ah,al
  421090:	mov    BYTE PTR ds:0x45f838,0x0
  421097:	mov    BYTE PTR ds:0x45f693,0x0
  42109e:	mov    DWORD PTR [esp+0x1c],ecx
  4210a2:	mov    BYTE PTR [esi+0x5],cl
  4210a5:	mov    BYTE PTR [esp+0xf],ah
  4210a9:	mov    BYTE PTR ds:0x44dedb,ah
  4210af:	je     0x42110e
  4210b1:	mov    al,ah
  4210b3:	shr    al,0x5
  4210b6:	dec    al
  4210b8:	movzx  ecx,al
  4210bb:	shl    DWORD PTR [esp+0x18],cl
  4210bf:	mov    al,BYTE PTR [edi+0x7]
  4210c2:	test   BYTE PTR [esp+0x18],al
  4210c6:	jne    0x4210eb
  4210c8:	mov    ecx,0x814
  4210cd:	jmp    0x420f26
  4210d2:	mov    ebx,DWORD PTR ds:0x44def4
  4210d8:	mov    BYTE PTR ds:0x45f838,0x0
  4210df:	mov    BYTE PTR ds:0x45f693,0x0
  4210e6:	jmp    0x421295
  4210eb:	mov    cl,BYTE PTR [ecx+0x4010e0]
  4210f1:	mov    BYTE PTR ds:0x44deda,cl
  4210f7:	cmp    ah,0xa0
  4210fa:	je     0x421101
  4210fc:	cmp    ah,0xc0
  4210ff:	jne    0x421114
  421101:	test   al,0x1
  421103:	je     0x421114
  421105:	mov    BYTE PTR ds:0x44dede,0xf0
  42110c:	jmp    0x421114
  42110e:	mov    cl,BYTE PTR ds:0x44deda
  421114:	mov    eax,DWORD PTR [edi]
  421116:	mov    ch,BYTE PTR [edi+0x5]
  421119:	mov    ds:0x44def8,eax
  42111e:	mov    ah,BYTE PTR [edi+0x4]
  421121:	mov    al,ch
  421123:	shr    al,0x3
  421126:	and    al,0x7
  421128:	mov    BYTE PTR ds:0x44ded9,ah
  42112e:	cmp    al,0x4
  421130:	je     0x421174
  421132:	cmp    al,0x3
  421134:	je     0x421174
  421136:	cmp    al,0x2
  421138:	je     0x421174
  42113a:	test   ah,ah
  42113c:	je     0x42120f
  421142:	call   0x421345
  421147:	mov    ds:0x44def8,eax
  42114c:	test   eax,eax
  42114e:	jne    0x421160
  421150:	mov    ecx,DWORD PTR ds:0x44df00
  421156:	call   0x42f124
  42115b:	jmp    0x420f2f
  421160:	test   BYTE PTR [eax+0x8],0x60
  421164:	je     0x421171
  421166:	cmp    BYTE PTR [esp+0xf],0x0
  42116b:	jne    0x4210c8
  421171:	mov    ch,BYTE PTR [edi+0x5]
  421174:	mov    al,BYTE PTR [esp+0x1c]
  421178:	and    al,0x10
  42117a:	mov    BYTE PTR [esp+0xe],al
  42117e:	mov    edi,0x44df08
  421183:	je     0x42118b
  421185:	mov    DWORD PTR ds:0x44def4,edi
  42118b:	movzx  eax,ch
  42118e:	shr    eax,0x3
  421191:	and    eax,0x7
  421194:	push   esi
  421195:	call   DWORD PTR [eax*4+0x4010f0]
  42119c:	mov    ebx,eax
  42119e:	mov    DWORD PTR ds:0x44def4,ebx
  4211a4:	test   ebx,ebx
  4211a6:	je     0x421289
  4211ac:	mov    edx,DWORD PTR [esp+0x1c]
  4211b0:	or     dl,0x8
  4211b3:	cmp    BYTE PTR ds:0x44f583,0x0
  4211ba:	je     0x4211bf
  4211bc:	or     dl,0xe0
  4211bf:	cmp    BYTE PTR ds:0x45f692,0x0
  4211c6:	mov    BYTE PTR [esi+0x5],dl
  4211c9:	je     0x421283
  4211cf:	sub    ebx,edi
  4211d1:	mov    ecx,ebx
  4211d3:	call   0x43f45b
  4211d8:	push   ebx
  4211d9:	mov    esi,eax
  4211db:	push   edi
  4211dc:	push   esi
  4211dd:	mov    DWORD PTR ds:0x44def4,esi
  4211e3:	call   0x447646
  4211e8:	mov    edi,DWORD PTR [esp+0x1c]
  4211ec:	mov    edx,DWORD PTR ds:0x448860
  4211f2:	mov    DWORD PTR [edi],esi
  4211f4:	movzx  edx,BYTE PTR [edx+0x6]
  4211f8:	movzx  eax,BYTE PTR [esi+0x1]
  4211fc:	and    edx,0x1f
  4211ff:	sub    edx,eax
  421201:	add    esp,0xc
  421204:	add    DWORD PTR ds:0x45f82c,edx
  42120a:	jmp    0x421333
  42120f:	push   0x2
  421211:	pop    eax
  421212:	add    ebx,eax
  421214:	cmp    BYTE PTR ds:0x44defe,0x0
  42121b:	mov    DWORD PTR ds:0x44def4,ebx
  421221:	je     0x42122d
  421223:	mov    ecx,0x815
  421228:	jmp    0x420f26
  42122d:	test   BYTE PTR [edi+0x7],0x40
  421231:	je     0x421237
  421233:	mov    BYTE PTR [ebx],0x9b
  421236:	inc    ebx
  421237:	test   cl,cl
  421239:	je     0x42123e
  42123b:	mov    BYTE PTR [ebx],cl
  42123d:	inc    ebx
  42123e:	movzx  eax,BYTE PTR [edi+0x5]
  421242:	and    eax,0x7
  421245:	sub    eax,0x4
  421248:	je     0x421255
  42124a:	push   0x2
  42124c:	pop    ecx
  42124d:	sub    eax,ecx
  42124f:	jne    0x42125a
  421251:	mov    al,0x48
  421253:	jmp    0x421257
  421255:	mov    al,0x66
  421257:	mov    BYTE PTR [ebx],al
  421259:	inc    ebx
  42125a:	mov    eax,DWORD PTR [edi]
  42125c:	mov    BYTE PTR [ebx],al
  42125e:	shr    eax,0x8
  421261:	inc    ebx
  421262:	test   eax,eax
  421264:	jne    0x42125c
  421266:	mov    edi,DWORD PTR [esp+0x10]
  42126a:	mov    al,bl
  42126c:	sub    al,dl
  42126e:	sub    al,0x2
  421270:	mov    BYTE PTR [edx+0x1],al
  421273:	mov    BYTE PTR [edx],0x0
  421276:	movzx  eax,BYTE PTR [esi+0x5]
  42127a:	or     al,0x8
  42127c:	mov    BYTE PTR [esi+0x5],al
  42127f:	mov    dl,al
  421281:	jmp    0x4212c6
  421283:	mov    edi,DWORD PTR [esp+0x10]
  421287:	jmp    0x4212cc
  421289:	mov    edi,DWORD PTR [esp+0x10]
  42128d:	mov    ebx,edi
  42128f:	mov    DWORD PTR ds:0x44def4,ebx
  421295:	cmp    BYTE PTR [esp+0xe],0x0
  42129a:	jne    0x421333
  4212a0:	mov    eax,ds:0x45f830
  4212a5:	mov    edx,DWORD PTR [esp+0x1c]
  4212a9:	mov    DWORD PTR [ebx],eax
  4212ab:	mov    eax,ds:0x448860
  4212b0:	add    ebx,0x4
  4212b3:	movzx  eax,BYTE PTR [eax+0x6]
  4212b7:	and    eax,0x1f
  4212ba:	add    DWORD PTR ds:0x45f830,eax
  4212c0:	or     dl,0x10
  4212c3:	mov    BYTE PTR [esi+0x5],dl
  4212c6:	mov    DWORD PTR ds:0x44def4,ebx
  4212cc:	test   dl,0x8
  4212cf:	je     0x421305
  4212d1:	cmp    BYTE PTR ds:0x44defd,0x0
  4212d8:	jne    0x421305
  4212da:	cmp    BYTE PTR ds:0x4613aa,0x0
  4212e1:	jne    0x421305
  4212e3:	test   dl,0x7
  4212e6:	je     0x421305
  4212e8:	movzx  ecx,WORD PTR [esi+0x3]
  4212ec:	mov    al,BYTE PTR [esi]
  4212ee:	add    edi,0xfffffffa
  4212f1:	and    dl,0xf8
  4212f4:	sub    ebx,edi
  4212f6:	mov    BYTE PTR [edi],al
  4212f8:	mov    WORD PTR [edi+0x1],bx
  4212fc:	mov    WORD PTR [edi+0x3],cx
  421300:	mov    BYTE PTR [edi+0x5],dl
  421303:	jmp    0x42130d
  421305:	sub    ebx,esi
  421307:	mov    WORD PTR [esi+0x1],bx
  42130b:	mov    edi,esi
  42130d:	test   dl,0x10
  421310:	jne    0x421320
  421312:	mov    eax,DWORD PTR [esp+0x10]
  421316:	movzx  eax,BYTE PTR [eax+0x1]
  42131a:	add    DWORD PTR ds:0x45f830,eax
  421320:	mov    edx,DWORD PTR ds:0x448884
  421326:	mov    ecx,edi
  421328:	call   0x43f399
  42132d:	xor    eax,eax
  42132f:	mov    WORD PTR [esi+0x1],ax
  421333:	mov    ecx,DWORD PTR [esp+0x14]
  421337:	call   0x422101
  42133c:	pop    edi
  42133d:	pop    esi
  42133e:	pop    ebx
  42133f:	mov    esp,ebp
  421341:	pop    ebp
  421342:	ret    0x4
  421345:	push   ebp
  421346:	mov    ebp,esp
  421348:	sub    esp,0x1c
  42134b:	mov    dl,BYTE PTR ds:0x44defe
  421351:	push   ebx
  421352:	movzx  ebx,dl
  421355:	xor    ecx,ecx
  421357:	push   esi
  421358:	mov    DWORD PTR [ebp-0x8],ebx
  42135b:	test   dl,dl
  42135d:	je     0x421388
  42135f:	mov    esi,0x2140
  421364:	mov    eax,DWORD PTR [ecx*4+0x44dee0]
  42136b:	cmp    BYTE PTR [eax],0x2
  42136e:	jne    0x421383
  421370:	cmp    BYTE PTR [eax+0x1],0x1
  421374:	jne    0x421383
  421376:	mov    eax,DWORD PTR [eax+0x4]
  421379:	and    eax,esi
  42137b:	cmp    eax,esi
  42137d:	je     0x42143a
  421383:	inc    ecx
  421384:	cmp    ecx,ebx
  421386:	jb     0x421364
  421388:	and    DWORD PTR ds:0x44df00,0x0
  42138f:	mov    eax,ds:0x44def8
  421394:	push   edi
  421395:	movzx  edi,BYTE PTR ds:0x44ded9
  42139c:	xor    bl,bl
  42139e:	mov    DWORD PTR [ebp-0x10],edi
  4213a1:	mov    esi,eax
  4213a3:	add    eax,0xc
  4213a6:	mov    DWORD PTR [ebp-0x1c],eax
  4213a9:	mov    al,BYTE PTR [esi+0x4]
  4213ac:	and    al,0x7
  4213ae:	mov    DWORD PTR [ebp-0xc],esi
  4213b1:	cmp    dl,al
  4213b3:	jne    0x4218ac
  4213b9:	test   dl,dl
  4213bb:	je     0x42189d
  4213c1:	mov    eax,DWORD PTR [ebp-0x8]
  4213c4:	and    DWORD PTR [ebp-0x14],0x0
  4213c8:	test   eax,eax
  4213ca:	je     0x421753
  4213d0:	mov    eax,DWORD PTR [esi]
  4213d2:	mov    esi,DWORD PTR [ebp-0x14]
  4213d5:	mov    DWORD PTR [ebp-0x18],eax
  4213d8:	mov    edx,esi
  4213da:	mov    esi,DWORD PTR [esi*4+0x44dee0]
  4213e1:	imul   edx,edx,0x3
  4213e4:	mov    ch,BYTE PTR [edx+eax*1+0x1]
  4213e8:	movzx  edi,BYTE PTR [edx+eax*1]
  4213ec:	mov    al,ch
  4213ee:	and    al,0x7
  4213f0:	mov    BYTE PTR [ebp-0x4],al
  4213f3:	xor    eax,eax
  4213f5:	inc    eax
  4213f6:	shr    ch,0x3
  4213f9:	and    ch,al
  4213fb:	mov    al,BYTE PTR [esi]
  4213fd:	mov    BYTE PTR [ebp-0x3],al
  421400:	movzx  eax,al
  421403:	mov    BYTE PTR [ebp-0x2],ch
  421406:	mov    ax,WORD PTR [eax*2+0x4010c4]
  42140e:	test   WORD PTR [edi*2+0x4010a0],ax
  421416:	je     0x42187a
  42141c:	mov    cl,BYTE PTR [esi+0x1]
  42141f:	xor    eax,eax
  421421:	inc    eax
  421422:	or     bl,al
  421424:	mov    eax,DWORD PTR [ebp-0x18]
  421427:	xor    bh,bh
  421429:	movzx  eax,BYTE PTR [edx+eax*1+0x2]
  42142e:	cmp    eax,0x29
  421431:	ja     0x421462
  421433:	jmp    DWORD PTR [eax*4+0x421939]
  42143a:	mov    DWORD PTR ds:0x44df00,0x816
  421444:	xor    eax,eax
  421446:	jmp    0x421934
  42144b:	cmp    DWORD PTR [esi+0xc],0x0
  42144f:	ja     0x421462
  421451:	jb     0x421459
  421453:	cmp    DWORD PTR [esi+0x8],0xf
  421457:	ja     0x421462
  421459:	test   DWORD PTR [esi+0x4],0x8000
  421460:	je     0x4214a9
  421462:	or     bl,0x8
  421465:	jmp    0x42174a
  42146a:	xor    eax,eax
  42146c:	inc    eax
  42146d:	mov    bh,al
  42146f:	jmp    0x421474
  421471:	xor    eax,eax
  421473:	inc    eax
  421474:	dec    cl
  421476:	jne    0x421462
  421478:	mov    dl,al
  42147a:	jmp    0x4216b8
  42147f:	xor    eax,eax
  421481:	inc    eax
  421482:	mov    bh,al
  421484:	jmp    0x421489
  421486:	xor    eax,eax
  421488:	inc    eax
  421489:	dec    cl
  42148b:	cmp    cl,al
  42148d:	ja     0x421462
  42148f:	jmp    0x421478
  421491:	xor    eax,eax
  421493:	inc    eax
  421494:	mov    bh,al
  421496:	jmp    0x42149b
  421498:	xor    eax,eax
  42149a:	inc    eax
  42149b:	dec    cl
  42149d:	cmp    cl,0x3
  4214a0:	jmp    0x42148d
  4214a2:	dec    cl
  4214a4:	cmp    cl,0x7
  4214a7:	ja     0x421462
  4214a9:	xor    eax,eax
  4214ab:	lea    edx,[eax+0x1]
  4214ae:	jmp    0x4216b8
  4214b3:	mov    ecx,DWORD PTR [esi+0x4]
  4214b6:	or     bl,0x4
  4214b9:	test   ecx,0x100
  4214bf:	jne    0x421462
  4214c1:	cmp    DWORD PTR [ebp-0x14],0x0
  4214c5:	je     0x4214d8
  4214c7:	mov    eax,ds:0x44dee0
  4214cc:	mov    al,BYTE PTR [eax+0x1]
  4214cf:	mov    BYTE PTR [ebp-0x1],al
  4214d2:	cmp    al,0x4
  4214d4:	jbe    0x4214f5
  4214d6:	jmp    0x4214e2
  4214d8:	mov    eax,DWORD PTR [ebp-0xc]
  4214db:	mov    al,BYTE PTR [eax+0x8]
  4214de:	and    al,0x7
  4214e0:	jne    0x4214e9
  4214e2:	mov    al,0x4
  4214e4:	mov    BYTE PTR [ebp-0x1],al
  4214e7:	jmp    0x4214f5
  4214e9:	cmp    al,0x4
  4214eb:	jne    0x4214f2
  4214ed:	push   0x2
  4214ef:	pop    eax
  4214f0:	jmp    0x4214e4
  4214f2:	mov    al,BYTE PTR [ebp-0x1]
  4214f5:	shr    ecx,0x1c
  4214f8:	test   al,cl
  4214fa:	je     0x421462
  421500:	mov    ch,BYTE PTR [ebp-0x2]
  421503:	xor    eax,eax
  421505:	lea    edx,[eax+0x1]
  421508:	jmp    0x4216b8
  42150d:	test   DWORD PTR [esi+0x4],0x8000
  421514:	mov    eax,DWORD PTR [esi+0x8]
  421517:	je     0x42152a
  421519:	mov    edx,0xffff8000
  42151e:	and    eax,edx
  421520:	cmp    eax,edx
  421522:	jne    0x421539
  421524:	cmp    DWORD PTR [esi+0xc],0xffffffff
  421528:	jmp    0x421532
  42152a:	and    eax,0xffff8000
  42152f:	or     eax,DWORD PTR [esi+0xc]
  421532:	jne    0x421539
  421534:	xor    edx,edx
  421536:	inc    edx
  421537:	jmp    0x42153b
  421539:	xor    dl,dl
  42153b:	xor    eax,eax
  42153d:	dec    cl
  42153f:	inc    eax
  421540:	cmp    al,cl
  421542:	sbb    eax,eax
  421544:	inc    eax
  421545:	and    dl,al
  421547:	jmp    0x4216b0
  42154c:	test   DWORD PTR [esi+0x4],0x8000
  421553:	mov    eax,DWORD PTR [esi+0x8]
  421556:	je     0x421569
  421558:	mov    edx,0x80000000
  42155d:	and    eax,edx
  42155f:	cmp    eax,edx
  421561:	jne    0x42157a
  421563:	cmp    DWORD PTR [esi+0xc],0xffffffff
  421567:	jmp    0x421571
  421569:	and    eax,0x80000000
  42156e:	or     eax,DWORD PTR [esi+0xc]
  421571:	jne    0x42157a
  421573:	xor    eax,eax
  421575:	lea    edx,[eax+0x1]
  421578:	jmp    0x42157c
  42157a:	xor    dl,dl
  42157c:	push   0x3
  42157e:	dec    cl
  421580:	pop    eax
  421581:	jmp    0x421540
  421583:	test   cl,cl
  421585:	sete   dl
  421588:	test   dl,dl
  42158a:	jne    0x4216b8
  421590:	or     bl,0x6
  421593:	jmp    0x421462
  421598:	xor    eax,eax
  42159a:	inc    eax
  42159b:	cmp    cl,al
  42159d:	jmp    0x4216ad
  4215a2:	xor    eax,eax
  4215a4:	inc    eax
  4215a5:	cmp    cl,al
  4215a7:	je     0x421478
  4215ad:	cmp    cl,0x8
  4215b0:	je     0x421478
  4215b6:	test   cl,cl
  4215b8:	jmp    0x421476
  4215bd:	xor    eax,eax
  4215bf:	inc    eax
  4215c0:	cmp    cl,al
  4215c2:	je     0x421478
  4215c8:	cmp    cl,0x10
  4215cb:	jmp    0x4215b0
  4215cd:	xor    eax,eax
  4215cf:	inc    eax
  4215d0:	cmp    cl,al
  4215d2:	je     0x421478
  4215d8:	cmp    cl,0x20
  4215db:	jmp    0x4215b0
  4215dd:	push   0x2
  4215df:	pop    eax
  4215e0:	jmp    0x42159b
  4215e2:	push   0x2
  4215e4:	pop    eax
  4215e5:	cmp    cl,al
  4215e7:	je     0x4214a9
  4215ed:	test   cl,cl
  4215ef:	jmp    0x421460
  4215f4:	push   0x2
  4215f6:	pop    eax
  4215f7:	cmp    cl,al
  4215f9:	je     0x4214a9
  4215ff:	cmp    cl,0x4
  421602:	jmp    0x421460
  421607:	push   0x2
  421609:	pop    eax
  42160a:	cmp    cl,al
  42160c:	je     0x4214a9
  421612:	cmp    cl,0x4
  421615:	jmp    0x4215e7
  421617:	push   0x2
  421619:	pop    eax
  42161a:	cmp    cl,al
  42161c:	je     0x4214a9
  421622:	cmp    cl,0x4
  421625:	je     0x4214a9
  42162b:	cmp    cl,0x8
  42162e:	jmp    0x421460
  421633:	push   0x2
  421635:	pop    eax
  421636:	cmp    cl,al
  421638:	je     0x4214a9
  42163e:	cmp    cl,0x8
  421641:	jmp    0x4215e7
  421643:	push   0x2
  421645:	pop    eax
  421646:	cmp    cl,al
  421648:	je     0x4214a9
  42164e:	cmp    cl,0x10
  421651:	jmp    0x4215e7
  421653:	push   0x2
  421655:	pop    eax
  421656:	cmp    cl,al
  421658:	je     0x4214a9
  42165e:	cmp    cl,0x20
  421661:	jmp    0x4215e7
  421663:	cmp    cl,0x4
  421666:	jmp    0x4216ad
  421668:	cmp    cl,0x4
  42166b:	jmp    0x421638
  42166d:	cmp    cl,0x4
  421670:	jmp    0x421648
  421672:	cmp    cl,0x4
  421675:	jmp    0x421658
  421677:	cmp    cl,0x6
  42167a:	jmp    0x4216ad
  42167c:	cmp    cl,0x6
  42167f:	jmp    0x4215e7
  421684:	cmp    cl,0x8
  421687:	jmp    0x4216ad
  421689:	cmp    cl,0x8
  42168c:	jmp    0x421648
  42168e:	cmp    cl,0x8
  421691:	jmp    0x421658
  421693:	cmp    cl,0xa
  421696:	jmp    0x4216ad
  421698:	cmp    cl,0xa
  42169b:	jmp    0x4215e7
  4216a0:	cmp    cl,0x10
  4216a3:	jmp    0x4216ad
  4216a5:	cmp    cl,0x10
  4216a8:	jmp    0x421658
  4216aa:	cmp    cl,0x20
  4216ad:	sete   dl
  4216b0:	test   dl,dl
  4216b2:	je     0x421462
  4216b8:	or     bl,0x4
  4216bb:	test   bh,bh
  4216bd:	je     0x4216db
  4216bf:	mov    eax,DWORD PTR [esi+0x4]
  4216c2:	test   eax,0x100
  4216c7:	je     0x4216d0
  4216c9:	test   eax,0x4000
  4216ce:	je     0x4216db
  4216d0:	and    eax,0x2000
  4216d5:	neg    eax
  4216d7:	sbb    al,al
  4216d9:	and    dl,al
  4216db:	test   dl,dl
  4216dd:	je     0x421462
  4216e3:	test   ch,ch
  4216e5:	je     0x4217b8
  4216eb:	push   0x3
  4216ed:	pop    eax
  4216ee:	push   0x2
  4216f0:	pop    edx
  4216f1:	cmp    edi,eax
  4216f3:	jne    0x42171a
  4216f5:	movzx  eax,WORD PTR [esi+0x2]
  4216f9:	test   eax,0x1800
  4216fe:	jne    0x42170d
  421700:	test   DWORD PTR [esi+0x4],0x8000
  421707:	je     0x4217bb
  42170d:	mov    eax,DWORD PTR [ebp-0x8]
  421710:	mov    esi,DWORD PTR [ebp-0xc]
  421713:	mov    edi,DWORD PTR [ebp-0x10]
  421716:	or     bl,dl
  421718:	jmp    0x421756
  42171a:	cmp    BYTE PTR [ebp-0x3],dl
  42171d:	jne    0x421724
  42171f:	mov    al,BYTE PTR [esi+0x8]
  421722:	jmp    0x421743
  421724:	cmp    edi,0x4
  421727:	jne    0x42173e
  421729:	mov    eax,DWORD PTR [esi+0x4]
  42172c:	xor    ecx,ecx
  42172e:	and    al,0x3
  421730:	inc    ecx
  421731:	cmp    al,cl
  421733:	jne    0x42173a
  421735:	mov    al,BYTE PTR [esi+0x14]
  421738:	jmp    0x421743
  42173a:	xor    al,al
  42173c:	jmp    0x421743
  42173e:	mov    al,BYTE PTR [esi+0x2]
  421741:	and    al,0xf
  421743:	cmp    al,BYTE PTR [ebp-0x4]
  421746:	je     0x4217bb
  421748:	or     bl,dl
  42174a:	mov    eax,DWORD PTR [ebp-0x8]
  42174d:	mov    edi,DWORD PTR [ebp-0x10]
  421750:	mov    esi,DWORD PTR [ebp-0xc]
  421753:	push   0x2
  421755:	pop    edx
  421756:	cmp    DWORD PTR [ebp-0x14],eax
  421759:	jne    0x4218a4
  42175f:	mov    al,ds:0x44dedb
  421764:	cmp    al,0xa0
  421766:	je     0x421774
  421768:	cmp    al,0xc0
  42176a:	je     0x421774
  42176c:	cmp    al,0x20
  42176e:	jne    0x42189d
  421774:	mov    eax,DWORD PTR [esi]
  421776:	mov    cl,BYTE PTR [eax]
  421778:	cmp    cl,dl
  42177a:	je     0x42178a
  42177c:	cmp    cl,0xe
  42177f:	je     0x421793
  421781:	cmp    cl,0xd
  421784:	jne    0x4218ac
  42178a:	cmp    cl,0xe
  42178d:	jne    0x421882
  421793:	mov    edx,DWORD PTR ds:0x44dee0
  421799:	push   0x2
  42179b:	movzx  eax,BYTE PTR [edx]
  42179e:	pop    edx
  42179f:	cmp    WORD PTR [eax*2+0x4010c4],dx
  4217a7:	mov    edx,DWORD PTR ds:0x44dee0
  4217ad:	jne    0x4218b2
  4217b3:	jmp    0x421888
  4217b8:	push   0x2
  4217ba:	pop    edx
  4217bb:	mov    eax,DWORD PTR [esi+0x4]
  4217be:	and    eax,0x180000
  4217c3:	je     0x421805
  4217c5:	movzx  ecx,WORD PTR [esi+0x2]
  4217c9:	test   ecx,0x800
  4217cf:	je     0x421872
  4217d5:	test   ecx,0x1000
  4217db:	je     0x421872
  4217e1:	cmp    eax,0x80000
  4217e6:	je     0x4217fa
  4217e8:	cmp    eax,0x100000
  4217ed:	jne    0x42180f
  4217ef:	cmp    edi,0x10
  4217f2:	jne    0x42174a
  4217f8:	jmp    0x421858
  4217fa:	cmp    edi,0xf
  4217fd:	jne    0x42174a
  421803:	jmp    0x42180f
  421805:	cmp    edi,0xf
  421808:	je     0x421872
  42180a:	cmp    edi,0x10
  42180d:	je     0x421872
  42180f:	cmp    edi,edx
  421811:	je     0x42181d
  421813:	cmp    edi,0xe
  421816:	je     0x42181d
  421818:	cmp    edi,0xd
  42181b:	jne    0x421858
  42181d:	movzx  eax,WORD PTR [esi+0x2]
  421821:	test   eax,0x1800
  421826:	jne    0x421858
  421828:	test   DWORD PTR [esi+0x4],0x8000
  42182f:	jne    0x421748
  421835:	mov    ecx,DWORD PTR [esi+0x8]
  421838:	mov    edi,0x80000000
  42183d:	and    ecx,edi
  42183f:	mov    eax,ecx
  421841:	or     eax,DWORD PTR [esi+0xc]
  421844:	je     0x421858
  421846:	cmp    ecx,edi
  421848:	jne    0x421748
  42184e:	cmp    DWORD PTR [esi+0xc],0xffffffff
  421852:	jne    0x421748
  421858:	mov    esi,DWORD PTR [ebp-0x14]
  42185b:	mov    eax,DWORD PTR [ebp-0x8]
  42185e:	inc    esi
  42185f:	mov    DWORD PTR [ebp-0x14],esi
  421862:	cmp    esi,eax
  421864:	jae    0x42174d
  42186a:	mov    eax,DWORD PTR [ebp-0x18]
  42186d:	jmp    0x4213d8
  421872:	or     bl,0x16
  421875:	jmp    0x42174a
  42187a:	push   0x2
  42187c:	pop    edx
  42187d:	jmp    0x42170d
  421882:	mov    edx,DWORD PTR ds:0x44dee0
  421888:	cmp    cl,0xd
  42188b:	jne    0x42189d
  42188d:	movzx  eax,BYTE PTR [edx]
  421890:	push   0x2
  421892:	pop    ecx
  421893:	cmp    WORD PTR [eax*2+0x4010c4],cx
  42189b:	jne    0x4218b2
  42189d:	mov    eax,esi
  42189f:	jmp    0x421933
  4218a4:	mov    edx,DWORD PTR ds:0x44dee0
  4218aa:	jmp    0x4218b5
  4218ac:	mov    edx,DWORD PTR ds:0x44dee0
  4218b2:	mov    eax,DWORD PTR [ebp-0x8]
  4218b5:	dec    edi
  4218b6:	mov    DWORD PTR [ebp-0x10],edi
  4218b9:	je     0x4218c9
  4218bb:	mov    dl,BYTE PTR ds:0x44defe
  4218c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4218c4:	jmp    0x4213a1
  4218c9:	xor    ecx,ecx
  4218cb:	inc    ecx
  4218cc:	mov    DWORD PTR ds:0x44df00,0x816
  4218d6:	test   cl,bl
  4218d8:	jne    0x4218ef
  4218da:	test   edx,edx
  4218dc:	je     0x421931
  4218de:	movzx  eax,BYTE PTR [edx]
  4218e1:	mov    eax,DWORD PTR [eax*4+0x401104]
  4218e8:	mov    ds:0x44df00,eax
  4218ed:	jmp    0x421931
  4218ef:	mov    eax,DWORD PTR [eax*4+0x44dedc]
  4218f6:	test   bl,0x4
  4218f9:	jne    0x421931
  4218fb:	push   0x2
  4218fd:	pop    ecx
  4218fe:	test   cl,bl
  421900:	jne    0x42190e
  421902:	mov    eax,edx
  421904:	mov    DWORD PTR ds:0x44df00,0x7e8
  42190e:	cmp    BYTE PTR [eax+0x1],0x0
  421912:	je     0x421927
  421914:	cmp    BYTE PTR [eax],cl
  421916:	jne    0x421931
  421918:	test   DWORD PTR [eax+0x4],0x2000
  42191f:	jne    0x421931
  421921:	cmp    BYTE PTR [edx+0x1],0x0
  421925:	jne    0x421931
  421927:	mov    DWORD PTR ds:0x44df00,0x7e7
  421931:	xor    eax,eax
  421933:	pop    edi
  421934:	pop    esi
  421935:	pop    ebx
  421936:	leave  
  421937:	ret    
  421938:	nop
  421939:	test   eax,0x4b004214
  42193e:	adc    al,0x42
  421940:	add    BYTE PTR [ecx+0x14],dh
  421943:	inc    edx
  421944:	add    BYTE PTR [edx+0x14],ch
  421947:	inc    edx
  421948:	add    BYTE PTR [esi+0x7f004214],al
  42194e:	adc    al,0x42
  421950:	add    BYTE PTR [eax-0x6effbdec],bl
  421956:	adc    al,0x42
  421958:	add    BYTE PTR [edx-0x4cffbdec],ah
  42195e:	adc    al,0x42
  421960:	add    BYTE PTR ds:0x4c004215,cl
  421966:	adc    eax,0x15830042
  42196b:	inc    edx
  42196c:	add    BYTE PTR [eax-0x5dffbdeb],bl
  421972:	adc    eax,0x15bd0042
  421977:	inc    edx
  421978:	add    ch,cl
  42197a:	adc    eax,0x15dd0042
  42197f:	inc    edx
  421980:	add    dl,ah
  421982:	adc    eax,0x15f40042
  421987:	inc    edx
  421988:	add    BYTE PTR [edi],al
  42198a:	push   ss
  42198b:	inc    edx
  42198c:	add    BYTE PTR [edi],dl
  42198e:	push   ss
  42198f:	inc    edx
  421990:	add    BYTE PTR [ebx],dh
  421992:	push   ss
  421993:	inc    edx
  421994:	add    BYTE PTR [ebx+0x16],al
  421997:	inc    edx
  421998:	add    BYTE PTR [ebx+0x16],dl
  42199b:	inc    edx
  42199c:	add    BYTE PTR [ebx+0x16],ah
  42199f:	inc    edx
  4219a0:	add    BYTE PTR [edx],dl
  4219a2:	push   ss
  4219a3:	inc    edx
  4219a4:	add    BYTE PTR [edx],ah
  4219a6:	push   ss
  4219a7:	inc    edx
  4219a8:	add    BYTE PTR [eax+0x16],ch
  4219ab:	inc    edx
  4219ac:	add    BYTE PTR [ebp+0x16],ch
  4219af:	inc    edx
  4219b0:	add    BYTE PTR [edx+0x16],dh
  4219b3:	inc    edx
  4219b4:	add    BYTE PTR [edi+0x16],dh
  4219b7:	inc    edx
  4219b8:	add    BYTE PTR [esi+edx*1+0x42],bh
  4219bc:	add    BYTE PTR [esi+edx*1+0x163e0042],al
  4219c3:	inc    edx
  4219c4:	add    BYTE PTR [ecx-0x71ffbdea],cl
  4219ca:	push   ss
  4219cb:	inc    edx
  4219cc:	add    BYTE PTR [ebx-0x67ffbdea],dl
  4219d2:	push   ss
  4219d3:	inc    edx
  4219d4:	add    BYTE PTR [eax-0x5affbdea],ah
  4219da:	push   ss
  4219db:	inc    edx
  4219dc:	add    BYTE PTR [edx+0x55004216],ch
  4219e2:	mov    ebp,esp
  4219e4:	push   ecx
  4219e5:	push   ecx
  4219e6:	push   ebx
  4219e7:	push   esi
  4219e8:	mov    esi,ecx
  4219ea:	push   edi
  4219eb:	movzx  eax,BYTE PTR [esi]
  4219ee:	dec    eax
  4219ef:	je     0x421bbc
  4219f5:	dec    eax
  4219f6:	je     0x421a1f
  4219f8:	dec    eax
  4219f9:	jne    0x421be0
  4219ff:	mov    ecx,DWORD PTR [esi+0x4]
  421a02:	mov    eax,ecx
  421a04:	and    al,0x3
  421a06:	cmp    al,0x1
  421a08:	je     0x421be0
  421a0e:	or     ecx,0x104
  421a14:	mov    BYTE PTR [esi],0x2
  421a17:	mov    DWORD PTR [esi+0x4],ecx
  421a1a:	jmp    0x421be0
  421a1f:	mov    eax,DWORD PTR [esi+0x8]
  421a22:	mov    ecx,DWORD PTR [esi+0xc]
  421a25:	mov    edi,eax
  421a27:	mov    edx,0xffffff00
  421a2c:	and    edi,edx
  421a2e:	cmp    BYTE PTR ds:0x45f693,0x1
  421a35:	mov    DWORD PTR [ebp-0x8],edi
  421a38:	jne    0x421a56
  421a3a:	cmp    BYTE PTR [esi+0x1],0x0
  421a3e:	jne    0x421a56
  421a40:	mov    eax,edi
  421a42:	or     eax,ecx
  421a44:	je     0x421a4f
  421a46:	cmp    edi,edx
  421a48:	jne    0x421a53
  421a4a:	cmp    ecx,0xffffffff
  421a4d:	jne    0x421a53
  421a4f:	mov    BYTE PTR [esi+0x1],0x1
  421a53:	mov    eax,DWORD PTR [esi+0x8]
  421a56:	mov    edx,DWORD PTR [esi+0x4]
  421a59:	xor    ebx,ebx
  421a5b:	test   edx,0x8000
  421a61:	je     0x421a79
  421a63:	neg    eax
  421a65:	mov    DWORD PTR [ebp-0x4],eax
  421a68:	mov    edi,eax
  421a6a:	mov    eax,ecx
  421a6c:	adc    eax,ebx
  421a6e:	neg    eax
  421a70:	mov    DWORD PTR [esi+0x8],edi
  421a73:	mov    edi,DWORD PTR [ebp-0x8]
  421a76:	mov    DWORD PTR [esi+0xc],eax
  421a79:	test   edx,0x4000
  421a7f:	je     0x421aa5
  421a81:	cmp    BYTE PTR [esi+0x1],bl
  421a84:	jne    0x421be0
  421a8a:	cmp    DWORD PTR ds:0x448860,0x403898
  421a94:	setne  al
  421a97:	dec    al
  421a99:	and    al,0x3
  421a9b:	inc    al
  421a9d:	mov    BYTE PTR [esi+0x1],al
  421aa0:	jmp    0x421b9b
  421aa5:	test   dl,0x8
  421aa8:	jne    0x421be0
  421aae:	cmp    BYTE PTR [esi+0x1],bl
  421ab1:	jne    0x421b17
  421ab3:	test   ecx,ecx
  421ab5:	je     0x421ad7
  421ab7:	cmp    DWORD PTR [esi+0xc],ebx
  421aba:	je     0x421ad7
  421abc:	mov    eax,DWORD PTR [esi+0x8]
  421abf:	and    eax,0x80000000
  421ac4:	cmp    eax,0x80000000
  421ac9:	jne    0x421ad1
  421acb:	cmp    DWORD PTR [esi+0xc],0xffffffff
  421acf:	je     0x421ad7
  421ad1:	mov    BYTE PTR [esi+0x1],0x8
  421ad5:	jmp    0x421b17
  421ad7:	shrd   edi,ecx,0x10
  421adb:	sar    ecx,0x10
  421ade:	test   di,di
  421ae1:	je     0x421b01
  421ae3:	cmp    WORD PTR [esi+0xa],bx
  421ae7:	je     0x421b01
  421ae9:	mov    eax,DWORD PTR [esi+0x8]
  421aec:	mov    ecx,0xffff8000
  421af1:	and    eax,ecx
  421af3:	cmp    eax,ecx
  421af5:	jne    0x421afb
  421af7:	cmp    ebx,ebx
  421af9:	je     0x421b01
  421afb:	mov    BYTE PTR [esi+0x1],0x4
  421aff:	jmp    0x421b17
  421b01:	mov    eax,DWORD PTR [esi+0x8]
  421b04:	and    eax,0xff00
  421b09:	or     eax,ebx
  421b0b:	je     0x421b13
  421b0d:	mov    BYTE PTR [esi+0x1],0x2
  421b11:	jmp    0x421b17
  421b13:	mov    BYTE PTR [esi+0x1],0x1
  421b17:	test   edx,0x2100
  421b1d:	je     0x421b37
  421b1f:	cmp    DWORD PTR ds:0x448860,0x401cd0
  421b29:	jne    0x421be0
  421b2f:	mov    BYTE PTR [esi],0x1
  421b32:	jmp    0x421be0
  421b37:	mov    ecx,DWORD PTR [esi+0x8]
  421b3a:	movsx  ax,cl
  421b3e:	cmp    cx,ax
  421b41:	jne    0x421b8a
  421b43:	movsx  eax,cx
  421b46:	mov    bl,0x2
  421b48:	cmp    ecx,eax
  421b4a:	jne    0x421b8a
  421b4c:	cmp    BYTE PTR [esi+0x1],0x8
  421b50:	je     0x421b8a
  421b52:	mov    eax,ecx
  421b54:	mov    ecx,DWORD PTR [esi+0xc]
  421b57:	shrd   eax,ecx,0x10
  421b5b:	xor    eax,edx
  421b5d:	and    eax,0x8000
  421b62:	not    eax
  421b64:	add    bl,0x4
  421b67:	sar    ecx,0x10
  421b6a:	test   eax,eax
  421b6c:	je     0x421b72
  421b6e:	mov    BYTE PTR [esi+0x1],0x1
  421b72:	mov    eax,DWORD PTR [esi+0x8]
  421b75:	cdq    
  421b76:	cmp    DWORD PTR [esi+0x8],eax
  421b79:	jne    0x421b87
  421b7b:	cmp    DWORD PTR [esi+0xc],edx
  421b7e:	mov    edx,DWORD PTR [esi+0x4]
  421b81:	jne    0x421b8a
  421b83:	mov    bl,0xe
  421b85:	jmp    0x421b8a
  421b87:	mov    edx,DWORD PTR [esi+0x4]
  421b8a:	movzx  eax,bl
  421b8d:	shl    eax,0x1c
  421b90:	and    edx,0xfffffff
  421b96:	or     eax,edx
  421b98:	mov    DWORD PTR [esi+0x4],eax
  421b9b:	cmp    DWORD PTR ds:0x448860,0x401748
  421ba5:	jne    0x421be0
  421ba7:	test   DWORD PTR [esi+0x4],0x4000
  421bae:	jne    0x421bb6
  421bb0:	cmp    BYTE PTR [esi+0x1],0x2
  421bb4:	ja     0x421be0
  421bb6:	mov    BYTE PTR [esi+0x1],0x4
  421bba:	jmp    0x421be0
  421bbc:	mov    al,BYTE PTR [esi+0x4]
  421bbf:	and    al,0x3
  421bc1:	cmp    al,0x1
  421bc3:	jne    0x421bcb
  421bc5:	movzx  eax,BYTE PTR [esi+0x14]
  421bc9:	jmp    0x421bcd
  421bcb:	xor    eax,eax
  421bcd:	shl    eax,0x8
  421bd0:	xor    ax,WORD PTR [esi+0x2]
  421bd4:	mov    ecx,0x700
  421bd9:	and    ax,cx
  421bdc:	xor    WORD PTR [esi+0x2],ax
  421be0:	pop    edi
  421be1:	mov    eax,esi
  421be3:	pop    esi
  421be4:	pop    ebx
  421be5:	leave  
  421be6:	ret    
  421be7:	push   ebp
  421be8:	mov    ebp,esp
  421bea:	push   ecx
  421beb:	push   ecx
  421bec:	cmp    WORD PTR [ebp+0x8],0x18
  421bf1:	push   ebx
  421bf2:	push   esi
  421bf3:	mov    bx,dx
  421bf6:	push   edi
  421bf7:	mov    WORD PTR [ebp-0x2],bx
  421bfb:	jb     0x421c1b
  421bfd:	xor    ebx,ebx
  421bff:	mov    ecx,0x85a
  421c04:	push   ebx
  421c05:	xor    edx,edx
  421c07:	call   0x42ee80
  421c0c:	mov    BYTE PTR ds:0x44df09,bl
  421c12:	xor    eax,eax
  421c14:	pop    edi
  421c15:	pop    esi
  421c16:	pop    ebx
  421c17:	leave  
  421c18:	ret    0x4
  421c1b:	cmp    WORD PTR [ebp+0x8],0x15
  421c20:	jb     0x421c2b
  421c22:	xor    ebx,ebx
  421c24:	mov    ecx,0x88b
  421c29:	jmp    0x421c04
  421c2b:	xor    dl,dl
  421c2d:	call   0x42f6c1
  421c32:	mov    ecx,eax
  421c34:	test   ecx,ecx
  421c36:	jne    0x421c3f
  421c38:	mov    ds:0x44df09,al
  421c3d:	jmp    0x421c12
  421c3f:	mov    al,BYTE PTR [ecx]
  421c41:	mov    BYTE PTR ds:0x45f693,bl
  421c47:	xor    ebx,ebx
  421c49:	push   0x4
  421c4b:	pop    edx
  421c4c:	cmp    al,0x2
  421c4e:	je     0x421c76
  421c50:	cmp    al,0x1
  421c52:	jne    0x421bfd
  421c54:	movzx  eax,WORD PTR [ecx+0x2]
  421c58:	test   eax,0x1f00
  421c5d:	je     0x421c66
  421c5f:	mov    ecx,0x7f0
  421c64:	jmp    0x421c04
  421c66:	and    DWORD PTR [ecx+0x4],0xf0000903
  421c6d:	mov    BYTE PTR [ecx+0x1],dl
  421c70:	mov    BYTE PTR [ecx],0x2
  421c73:	mov    DWORD PTR [ecx+0x18],ebx
  421c76:	call   0x4219e1
  421c7b:	mov    esi,eax
  421c7d:	test   esi,esi
  421c7f:	je     0x421c0c
  421c81:	cmp    BYTE PTR [esi+0x1],0x8
  421c85:	mov    cx,WORD PTR [ebp-0x2]
  421c89:	jne    0x421c96
  421c8b:	push   0x4
  421c8d:	pop    eax
  421c8e:	cmp    cx,ax
  421c91:	jne    0x421c96
  421c93:	mov    BYTE PTR [esi+0x1],al
  421c96:	movzx  eax,BYTE PTR [esi+0x1]
  421c9a:	cmp    ax,cx
  421c9d:	jbe    0x421ca9
  421c9f:	mov    ecx,0x817
  421ca4:	jmp    0x421c04
  421ca9:	mov    BYTE PTR ds:0x44df08,bl
  421caf:	mov    BYTE PTR ds:0x44df09,cl
  421cb5:	mov    eax,DWORD PTR [esi+0x8]
  421cb8:	movzx  edi,cx
  421cbb:	push   0x8
  421cbd:	mov    ds:0x44df0a,eax
  421cc2:	mov    eax,DWORD PTR [esi+0xc]
  421cc5:	pop    edx
  421cc6:	mov    ds:0x44df0e,eax
  421ccb:	cmp    edi,edx
  421ccd:	jbe    0x421cf9
  421ccf:	lea    eax,[edi-0x8]
  421cd2:	push   eax
  421cd3:	mov    eax,DWORD PTR [esi+0x4]
  421cd6:	and    eax,0x8000
  421cdb:	neg    eax
  421cdd:	sbb    eax,eax
  421cdf:	and    eax,0xff
  421ce4:	push   eax
  421ce5:	push   0x44df12
  421cea:	call   0x44764c
  421cef:	mov    cx,WORD PTR [ebp-0x2]
  421cf3:	add    esp,0xc
  421cf6:	push   0x8
  421cf8:	pop    edx
  421cf9:	test   DWORD PTR [esi+0x4],0x100
  421d00:	lea    edi,[edi+0x44df0a]
  421d06:	jne    0x421d1f
  421d08:	mov    eax,ds:0x45f83c
  421d0d:	mov    DWORD PTR [esi],eax
  421d0f:	mov    DWORD PTR ds:0x45f83c,esi
  421d15:	mov    eax,0x44df08
  421d1a:	jmp    0x421c14
  421d1f:	test   DWORD PTR [esi+0x4],0x10000
  421d26:	push   0x4
  421d28:	pop    eax
  421d29:	je     0x421d3a
  421d2b:	cmp    cx,ax
  421d2e:	jne    0x421bff
  421d34:	mov    BYTE PTR [ebp+0x8],0x3
  421d38:	jmp    0x421d69
  421d3a:	test   DWORD PTR [esi+0x4],0x20000
  421d41:	je     0x421d51
  421d43:	cmp    cx,ax
  421d46:	jne    0x421bff
  421d4c:	mov    BYTE PTR [ebp+0x8],al
  421d4f:	jmp    0x421d69
  421d51:	cmp    cx,ax
  421d54:	jne    0x421d5c
  421d56:	mov    BYTE PTR [ebp+0x8],0x1
  421d5a:	jmp    0x421d69
  421d5c:	cmp    cx,dx
  421d5f:	jne    0x421bff
  421d65:	mov    BYTE PTR [ebp+0x8],0x2
  421d69:	mov    cl,0x54
  421d6b:	call   0x43859a
  421d70:	push   DWORD PTR [ebp+0x8]
  421d73:	mov    edx,esi
  421d75:	push   ecx
  421d76:	push   edi
  421d77:	mov    edi,0x44df08
  421d7c:	push   edi
  421d7d:	mov    ecx,0x44df0a
  421d82:	call   0x422197
  421d87:	mov    ecx,DWORD PTR ds:0x45f83c
  421d8d:	mov    DWORD PTR [esi],ecx
  421d8f:	mov    DWORD PTR ds:0x45f83c,esi
  421d95:	mov    eax,edi
  421d97:	jmp    0x421c14
  421d9c:	push   ebp
  421d9d:	mov    ebp,esp
  421d9f:	push   ecx
  421da0:	push   ecx
  421da1:	push   ebx
  421da2:	push   esi
  421da3:	push   edi
  421da4:	push   0x2
  421da6:	mov    ebx,edx
  421da8:	pop    edx
  421da9:	push   0xa
  421dab:	mov    edi,ecx
  421dad:	xor    ecx,ecx
  421daf:	pop    eax
  421db0:	mov    BYTE PTR [ebp-0x1],cl
  421db3:	mov    BYTE PTR ds:0x45f693,bl
  421db9:	mov    DWORD PTR ds:0x448860,ecx
  421dbf:	cmp    bx,ax
  421dc2:	jbe    0x421dcb
  421dc4:	movzx  eax,bx
  421dc7:	add    eax,edx
  421dc9:	jmp    0x421dce
  421dcb:	push   0xc
  421dcd:	pop    eax
  421dce:	push   eax
  421dcf:	push   ecx
  421dd0:	mov    esi,0x44df08
  421dd5:	push   esi
  421dd6:	call   0x44764c
  421ddb:	mov    ecx,0x5103
  421de0:	add    esp,0xc
  421de3:	cmp    WORD PTR [edi],cx
  421de6:	jne    0x421dfc
  421de8:	mov    BYTE PTR ds:0x44df08,0x20
  421def:	mov    BYTE PTR ds:0x44df09,bl
  421df5:	mov    eax,esi
  421df7:	jmp    0x4220fa
  421dfc:	mov    eax,ds:0x45f834
  421e01:	test   eax,eax
  421e03:	je     0x421e25
  421e05:	mov    eax,DWORD PTR [eax+0x2c]
  421e08:	test   eax,eax
  421e0a:	je     0x421e25
  421e0c:	cmp    DWORD PTR [eax+0x6],0x535342
  421e13:	jne    0x421e25
  421e15:	push   0x0
  421e17:	xor    edx,edx
  421e19:	mov    ecx,0xfae
  421e1e:	call   0x42ee80
  421e23:	jmp    0x421de8
  421e25:	mov    ecx,DWORD PTR [ebp+0x8]
  421e28:	lea    edx,[edi+0x1]
  421e2b:	push   0x18
  421e2d:	mov    al,BYTE PTR [edx]
  421e2f:	pop    esi
  421e30:	cmp    al,0x2f
  421e32:	jne    0x421ec8
  421e38:	cmp    BYTE PTR [edi+0x2],0x9
  421e3c:	jne    0x421ec8
  421e42:	mov    BYTE PTR [ebp-0x1],0x1
  421e46:	mov    edi,edx
  421e48:	movzx  eax,BYTE PTR [edi+0x1]
  421e4c:	mov    dl,BYTE PTR [edi+0x2]
  421e4f:	sub    eax,0x7
  421e52:	je     0x422082
  421e58:	dec    eax
  421e59:	je     0x422022
  421e5f:	dec    eax
  421e60:	je     0x421fff
  421e66:	dec    eax
  421e67:	jne    0x421f02
  421e6d:	movzx  esi,dl
  421e70:	cmp    BYTE PTR [esi+edi*1+0x2],0x52
  421e75:	jne    0x421f24
  421e7b:	lea    eax,[ecx-0x12]
  421e7e:	push   0x2
  421e80:	pop    ecx
  421e81:	cmp    ax,cx
  421e84:	jbe    0x422043
  421e8a:	dec    dl
  421e8c:	cmp    bx,0x4
  421e90:	jb     0x421ead
  421e92:	cmp    bx,0x6
  421e96:	je     0x421ead
  421e98:	cmp    BYTE PTR [edi+0x3],0x0
  421e9c:	mov    al,bl
  421e9e:	sete   cl
  421ea1:	add    al,al
  421ea3:	add    cl,al
  421ea5:	cmp    dl,cl
  421ea7:	je     0x421f47
  421ead:	mov    ecx,0x85a
  421eb2:	xor    edx,edx
  421eb4:	push   edx
  421eb5:	call   0x42ee80
  421eba:	mov    BYTE PTR ds:0x44df09,0x0
  421ec1:	xor    eax,eax
  421ec3:	jmp    0x4220fa
  421ec8:	cmp    al,0x2e
  421eca:	jne    0x421ed6
  421ecc:	cmp    BYTE PTR [edi+0x2],0x8
  421ed0:	je     0x421e46
  421ed6:	cmp    al,0x2f
  421ed8:	jne    0x421f11
  421eda:	cmp    BYTE PTR [edi+0x2],0xa
  421ede:	jne    0x421f11
  421ee0:	cmp    cx,si
  421ee3:	je     0x421ead
  421ee5:	cmp    cx,0x19
  421ee9:	je     0x421ead
  421eeb:	cmp    cx,0x1a
  421eef:	je     0x421ead
  421ef1:	mov    al,BYTE PTR [edi]
  421ef3:	sub    al,0x5
  421ef5:	mov    BYTE PTR [ebp-0x1],0x1
  421ef9:	cmp    BYTE PTR [edi+0x3],al
  421efc:	je     0x421e46
  421f02:	push   ecx
  421f03:	mov    edx,ebx
  421f05:	mov    ecx,edi
  421f07:	call   0x421be7
  421f0c:	jmp    0x4220fa
  421f11:	movzx  eax,BYTE PTR [edi]
  421f14:	cmp    BYTE PTR [eax+edi*1-0x1],0x1
  421f19:	je     0x421e48
  421f1f:	push   DWORD PTR [ebp+0x8]
  421f22:	jmp    0x421f03
  421f24:	push   0x18
  421f26:	pop    eax
  421f27:	cmp    cx,ax
  421f2a:	jae    0x421ead
  421f2c:	cmp    cx,0x15
  421f30:	jae    0x422043
  421f36:	cmp    BYTE PTR ds:0x45f83a,0xa
  421f3d:	jne    0x421f88
  421f3f:	push   0xa
  421f41:	pop    eax
  421f42:	cmp    bx,ax
  421f45:	jne    0x421f88
  421f47:	movzx  esi,dl
  421f4a:	push   esi
  421f4b:	lea    eax,[edi+0x3]
  421f4e:	push   eax
  421f4f:	push   0x461178
  421f54:	call   0x447646
  421f59:	add    esp,0xc
  421f5c:	lea    edx,[esi+0x461178]
  421f62:	mov    ecx,0x44df0a
  421f67:	mov    BYTE PTR ds:0x44df09,bl
  421f6d:	call   0x43526a
  421f72:	cmp    BYTE PTR [ebp-0x1],0x0
  421f76:	je     0x4220f5
  421f7c:	or     BYTE PTR ds:0x44df13,0x80
  421f83:	jmp    0x4220f5
  421f88:	cmp    bx,0x4
  421f8c:	jbe    0x421fef
  421f8e:	push   esi
  421f8f:	lea    eax,[edi+0x3]
  421f92:	push   eax
  421f93:	push   0x461178
  421f98:	mov    BYTE PTR ds:0x44df09,bl
  421f9e:	call   0x447646
  421fa3:	movzx  eax,BYTE PTR ds:0x45f83a
  421faa:	add    esp,0xc
  421fad:	lea    edx,[esi+0x461178]
  421fb3:	mov    esi,0x44df0a
  421fb8:	push   eax
  421fb9:	mov    ecx,esi
  421fbb:	call   0x435325
  421fc0:	mov    ecx,eax
  421fc2:	test   ecx,ecx
  421fc4:	jne    0x421fd0
  421fc6:	mov    ecx,0x800
  421fcb:	jmp    0x421eb2
  421fd0:	dec    ecx
  421fd1:	cmp    BYTE PTR [ecx],0x0
  421fd4:	je     0x421fd0
  421fd6:	movzx  eax,bx
  421fd9:	sub    ecx,0x44df08
  421fdf:	add    eax,0x3
  421fe2:	cmp    ecx,eax
  421fe4:	jle    0x4220c4
  421fea:	jmp    0x422078
  421fef:	cmp    BYTE PTR [ebp-0x1],0x0
  421ff3:	je     0x421f02
  421ff9:	dec    edi
  421ffa:	jmp    0x421f02
  421fff:	cmp    cx,si
  422002:	jae    0x421ead
  422008:	cmp    cx,0x15
  42200c:	jb     0x422018
  42200e:	mov    ecx,0x88b
  422013:	jmp    0x421eb2
  422018:	movzx  eax,dl
  42201b:	cmp    ax,bx
  42201e:	jbe    0x42209a
  422020:	jmp    0x422078
  422022:	movzx  eax,bx
  422025:	mov    esi,0x44df0a
  42202a:	sub    eax,0x4
  42202d:	je     0x422067
  42202f:	sub    eax,0x4
  422032:	je     0x42205a
  422034:	push   0x2
  422036:	pop    edx
  422037:	sub    eax,edx
  422039:	je     0x42204d
  42203b:	lea    eax,[ecx-0x12]
  42203e:	cmp    ax,dx
  422041:	ja     0x4220be
  422043:	mov    ecx,0x880
  422048:	jmp    0x421eb2
  42204d:	lea    eax,[edi+0x3]
  422050:	push   eax
  422051:	push   esi
  422052:	call   DWORD PTR ds:0x464490
  422058:	jmp    0x422072
  42205a:	lea    eax,[edi+0x3]
  42205d:	push   eax
  42205e:	push   esi
  42205f:	call   DWORD PTR ds:0x464494
  422065:	jmp    0x422072
  422067:	lea    eax,[edi+0x3]
  42206a:	push   eax
  42206b:	push   esi
  42206c:	call   DWORD PTR ds:0x464498
  422072:	pop    ecx
  422073:	pop    ecx
  422074:	test   eax,eax
  422076:	je     0x4220be
  422078:	mov    ecx,0x817
  42207d:	jmp    0x421eb2
  422082:	xor    eax,eax
  422084:	inc    eax
  422085:	cmp    bx,ax
  422088:	jne    0x421f02
  42208e:	cmp    cx,si
  422091:	jae    0x421ead
  422097:	movzx  ebx,dl
  42209a:	test   dl,dl
  42209c:	jne    0x4220a8
  42209e:	mov    ecx,0x7ff
  4220a3:	jmp    0x421eb2
  4220a8:	movzx  eax,dl
  4220ab:	push   eax
  4220ac:	lea    eax,[edi+0x3]
  4220af:	push   eax
  4220b0:	mov    esi,0x44df0a
  4220b5:	push   esi
  4220b6:	call   0x447646
  4220bb:	add    esp,0xc
  4220be:	mov    BYTE PTR ds:0x44df09,bl
  4220c4:	cmp    BYTE PTR [ebp-0x1],0x0
  4220c8:	je     0x4220f5
  4220ca:	xor    eax,eax
  4220cc:	inc    eax
  4220cd:	mov    DWORD PTR [ebp+0x8],eax
  4220d0:	mov    cx,ax
  4220d3:	mov    al,BYTE PTR [esi]
  4220d5:	not    al
  4220d7:	movzx  eax,al
  4220da:	add    cx,ax
  4220dd:	mov    al,cl
  4220df:	mov    WORD PTR [ebp+0x8],cx
  4220e3:	mov    BYTE PTR [esi],al
  4220e5:	add    ebx,0xffff
  4220eb:	inc    esi
  4220ec:	sar    cx,0x8
  4220f0:	test   bx,bx
  4220f3:	jne    0x4220d3
  4220f5:	mov    eax,0x44df08
  4220fa:	pop    edi
  4220fb:	pop    esi
  4220fc:	pop    ebx
  4220fd:	leave  
  4220fe:	ret    0x4
  422101:	push   esi
  422102:	mov    esi,0x44dee0
  422107:	cmp    ecx,esi
  422109:	jbe    0x422127
  42210b:	mov    edx,DWORD PTR ds:0x45f83c
  422111:	sub    ecx,0x4
  422114:	mov    eax,DWORD PTR [ecx]
  422116:	mov    DWORD PTR [eax],edx
  422118:	mov    edx,DWORD PTR [ecx]
  42211a:	and    DWORD PTR [ecx],0x0
  42211d:	cmp    ecx,esi
  42211f:	ja     0x422111
  422121:	mov    DWORD PTR ds:0x45f83c,edx
  422127:	pop    esi
  422128:	ret    
  422129:	push   ebp
  42212a:	mov    ebp,esp
  42212c:	mov    al,BYTE PTR [ebp+0x14]
  42212f:	or     al,0x80
  422131:	test   al,0x3
  422133:	push   ebx
  422134:	push   esi
  422135:	mov    esi,DWORD PTR [ebp+0xc]
  422138:	setne  bl
  42213b:	mov    BYTE PTR [esi],al
  42213d:	movzx  eax,BYTE PTR [ebp+0x10]
  422141:	push   edi
  422142:	mov    edi,edx
  422144:	mov    edx,ecx
  422146:	mov    ecx,DWORD PTR [ebp+0x8]
  422149:	and    eax,0xf
  42214c:	sub    dl,cl
  42214e:	sub    dl,0x2
  422151:	mov    BYTE PTR [esi+0x1],dl
  422154:	mov    al,BYTE PTR [eax+0x401144]
  42215a:	or     al,dl
  42215c:	mov    BYTE PTR [esi+0x1],al
  42215f:	inc    BYTE PTR [ecx]
  422161:	mov    eax,DWORD PTR [edi+0x10]
  422164:	mov    DWORD PTR [esi+0x2],eax
  422167:	mov    eax,ds:0x45f830
  42216c:	mov    DWORD PTR [esi+0x6],eax
  42216f:	mov    BYTE PTR ds:0x44defd,bl
  422175:	lea    eax,[esi+0xa]
  422178:	test   bl,bl
  42217a:	jne    0x422190
  42217c:	mov    ecx,DWORD PTR [edi+0x8]
  42217f:	or     ecx,DWORD PTR [edi+0xc]
  422182:	je     0x422190
  422184:	or     BYTE PTR [esi+0x1],0x40
  422188:	mov    ecx,DWORD PTR [edi+0x8]
  42218b:	mov    DWORD PTR [eax],ecx
  42218d:	add    eax,0x4
  422190:	pop    edi
  422191:	pop    esi
  422192:	pop    ebx
  422193:	pop    ebp
  422194:	ret    0x10
  422197:	push   ebp
  422198:	mov    ebp,esp
  42219a:	push   ecx
  42219b:	push   ebx
  42219c:	push   esi
  42219d:	mov    esi,edx
  42219f:	mov    ebx,ecx
  4221a1:	test   BYTE PTR [esi+0x4],0x8
  4221a5:	je     0x4221d8
  4221a7:	cmp    esi,DWORD PTR ds:0x44dee0
  4221ad:	jne    0x4221b5
  4221af:	mov    BYTE PTR [ebp-0x4],0x1
  4221b3:	jmp    0x4221c3
  4221b5:	cmp    esi,DWORD PTR ds:0x44dee4
  4221bb:	setne  al
  4221be:	add    al,0x2
  4221c0:	mov    BYTE PTR [ebp-0x4],al
  4221c3:	push   DWORD PTR [ebp-0x4]
  4221c6:	push   DWORD PTR [ebp+0x14]
  4221c9:	push   DWORD PTR [ebp+0xc]
  4221cc:	push   DWORD PTR [ebp+0x8]
  4221cf:	call   0x422129
  4221d4:	mov    edx,eax
  4221d6:	jmp    0x4221db
  4221d8:	mov    edx,DWORD PTR [ebp+0xc]
  4221db:	test   DWORD PTR [esi+0x4],0x100
  4221e2:	jne    0x4221e8
  4221e4:	mov    eax,edx
  4221e6:	jmp    0x422223
  4221e8:	mov    eax,DWORD PTR [ebp+0x14]
  4221eb:	mov    BYTE PTR [edx],al
  4221ed:	mov    eax,DWORD PTR [ebp+0x8]
  4221f0:	sub    bl,al
  4221f2:	sub    bl,0x2
  4221f5:	mov    BYTE PTR [edx+0x1],bl
  4221f8:	mov    ecx,DWORD PTR [esi+0x10]
  4221fb:	test   ecx,ecx
  4221fd:	je     0x422213
  4221ff:	movzx  eax,BYTE PTR [ecx+0x6]
  422203:	cmp    BYTE PTR [eax+0x406514],0x0
  42220a:	mov    eax,DWORD PTR [ebp+0x8]
  42220d:	je     0x422213
  42220f:	or     BYTE PTR [ecx+0x7],0x80
  422213:	mov    DWORD PTR [edx+0x2],ecx
  422216:	test   ecx,ecx
  422218:	je     0x42221e
  42221a:	or     BYTE PTR [ecx+0x8],0x2
  42221e:	inc    BYTE PTR [eax]
  422220:	lea    eax,[edx+0x6]
  422223:	pop    esi
  422224:	pop    ebx
  422225:	leave  
  422226:	ret    0x10
  422229:	push   ebp
  42222a:	mov    ebp,esp
  42222c:	test   DWORD PTR [edx+0x4],0x108
  422233:	push   esi
  422234:	mov    esi,DWORD PTR [ebp+0xc]
  422237:	je     0x4222be
  42223d:	test   DWORD PTR [edx+0x4],0x10000
  422244:	je     0x422267
  422246:	cmp    BYTE PTR ds:0x44defc,0x4
  42224d:	jne    0x422255
  42224f:	mov    BYTE PTR [ebp+0xc],0x3
  422253:	jmp    0x4222ac
  422255:	push   0x0
  422257:	xor    edx,edx
  422259:	mov    ecx,0x7e8
  42225e:	call   0x42ee80
  422263:	xor    eax,eax
  422265:	jmp    0x4222c0
  422267:	test   DWORD PTR [edx+0x4],0x20000
  42226e:	je     0x42227f
  422270:	cmp    BYTE PTR ds:0x44defc,0x4
  422277:	jne    0x422255
  422279:	mov    BYTE PTR [ebp+0xc],0x4
  42227d:	jmp    0x4222ac
  42227f:	cmp    BYTE PTR [edx],0x1
  422282:	jne    0x422295
  422284:	cmp    BYTE PTR ds:0x44dedf,0x0
  42228b:	setne  al
  42228e:	inc    al
  422290:	mov    BYTE PTR [ebp+0xc],al
  422293:	jmp    0x4222ac
  422295:	mov    al,ds:0x44defc
  42229a:	cmp    al,0x4
  42229c:	jne    0x4222a4
  42229e:	mov    BYTE PTR [ebp+0xc],0x1
  4222a2:	jmp    0x4222ac
  4222a4:	cmp    al,0x8
  4222a6:	jne    0x422255
  4222a8:	mov    BYTE PTR [ebp+0xc],0x2
  4222ac:	push   DWORD PTR [ebp+0xc]
  4222af:	push   ecx
  4222b0:	push   esi
  4222b1:	push   DWORD PTR ds:0x44def4
  4222b7:	call   0x422197
  4222bc:	mov    esi,eax
  4222be:	mov    eax,esi
  4222c0:	pop    esi
  4222c1:	pop    ebp
  4222c2:	ret    0xc
  4222c5:	push   ebp
  4222c6:	mov    ebp,esp
  4222c8:	push   ecx
  4222c9:	push   ebx
  4222ca:	push   esi
  4222cb:	mov    esi,edx
  4222cd:	mov    edx,DWORD PTR ds:0x44def8
  4222d3:	mov    bl,BYTE PTR [edx+0x4]
  4222d6:	mov    cl,bl
  4222d8:	and    cl,0x7
  4222db:	jne    0x4222e1
  4222dd:	xor    eax,eax
  4222df:	jmp    0x422324
  4222e1:	mov    edx,DWORD PTR [edx]
  4222e3:	inc    edx
  4222e4:	cmp    esi,0xb
  4222e7:	jne    0x422308
  4222e9:	jmp    0x4222f6
  4222eb:	cmp    al,0xd
  4222ed:	je     0x422312
  4222ef:	dec    cl
  4222f1:	je     0x4222dd
  4222f3:	add    edx,0x3
  4222f6:	mov    al,BYTE PTR [edx]
  4222f8:	shr    al,0x4
  4222fb:	cmp    al,0xb
  4222fd:	jne    0x4222eb
  4222ff:	jmp    0x422312
  422301:	dec    cl
  422303:	je     0x4222dd
  422305:	add    edx,0x3
  422308:	movzx  eax,BYTE PTR [edx]
  42230b:	shr    eax,0x4
  42230e:	cmp    eax,esi
  422310:	jne    0x422301
  422312:	movzx  eax,bl
  422315:	movzx  ecx,cl
  422318:	and    eax,0x7
  42231b:	sub    eax,ecx
  42231d:	mov    eax,DWORD PTR [eax*4+0x44dee0]
  422324:	pop    esi
  422325:	pop    ebx
  422326:	leave  
  422327:	ret    
  422328:	movzx  eax,BYTE PTR [ecx+0x9]
  42232c:	shr    eax,1
  42232e:	and    eax,0x3
  422331:	mov    eax,DWORD PTR [eax*4+0x44dedc]
  422338:	cmp    BYTE PTR [eax],0x1
  42233b:	jne    0x422365
  42233d:	mov    eax,DWORD PTR [eax+0x10]
  422340:	test   eax,eax
  422342:	je     0x422365
  422344:	mov    eax,DWORD PTR [eax+0x20]
  422347:	test   eax,eax
  422349:	je     0x422365
  42234b:	cmp    BYTE PTR [eax+0x6],0x11
  42234f:	je     0x422365
  422351:	test   BYTE PTR [eax+0x7],0x40
  422355:	je     0x422365
  422357:	push   0x0
  422359:	xor    edx,edx
  42235b:	mov    ecx,0xfa0
  422360:	call   0x42ee80
  422365:	ret    
  422366:	push   ebp
  422367:	mov    ebp,esp
  422369:	push   ebx
  42236a:	push   esi
  42236b:	test   dl,dl
  42236d:	jne    0x42241a
  422373:	cmp    BYTE PTR [ecx],0x1
  422376:	jne    0x422453
  42237c:	test   DWORD PTR [ecx+0x4],0x800
  422383:	mov    al,BYTE PTR [ebp+0x10]
  422386:	je     0x42239b
  422388:	test   al,al
  42238a:	je     0x422395
  42238c:	cmp    al,0x8
  42238e:	je     0x422395
  422390:	xor    eax,eax
  422392:	inc    eax
  422393:	jmp    0x422397
  422395:	xor    eax,eax
  422397:	mov    bl,0x8
  422399:	jmp    0x4223ac
  42239b:	test   al,al
  42239d:	je     0x4223a8
  42239f:	cmp    al,0x4
  4223a1:	je     0x4223a8
  4223a3:	xor    eax,eax
  4223a5:	inc    eax
  4223a6:	jmp    0x4223aa
  4223a8:	xor    eax,eax
  4223aa:	mov    bl,0x4
  4223ac:	mov    dl,BYTE PTR [ebp+0xc]
  4223af:	test   dl,dl
  4223b1:	jne    0x4223b8
  4223b3:	mov    dl,BYTE PTR [ecx+0x1]
  4223b6:	jmp    0x4223cc
  4223b8:	mov    dh,BYTE PTR [ecx+0x1]
  4223bb:	test   dh,dh
  4223bd:	je     0x4223c8
  4223bf:	cmp    dh,dl
  4223c1:	je     0x4223c8
  4223c3:	xor    esi,esi
  4223c5:	inc    esi
  4223c6:	jmp    0x4223ca
  4223c8:	xor    esi,esi
  4223ca:	or     eax,esi
  4223cc:	cmp    BYTE PTR [ebp+0x8],0x0
  4223d0:	je     0x42244e
  4223d2:	test   ax,ax
  4223d5:	jne    0x422453
  4223d7:	movzx  esi,WORD PTR [ecx+0x2]
  4223db:	mov    eax,esi
  4223dd:	shr    eax,0x8
  4223e0:	and    al,0x7
  4223e2:	je     0x4223f4
  4223e4:	cmp    al,0x7
  4223e6:	je     0x4223f4
  4223e8:	test   BYTE PTR [ecx+0x4],0x3
  4223ec:	je     0x422405
  4223ee:	cmp    DWORD PTR [ecx+0x14],0x7
  4223f2:	jbe    0x422453
  4223f4:	movzx  eax,bl
  4223f7:	movzx  ecx,dl
  4223fa:	shl    eax,0x8
  4223fd:	or     eax,ecx
  4223ff:	pop    esi
  422400:	pop    ebx
  422401:	pop    ebp
  422402:	ret    0xc
  422405:	test   esi,0x1000
  42240b:	jne    0x4223f4
  42240d:	mov    eax,DWORD PTR [ecx+0x4]
  422410:	shr    eax,0x8
  422413:	not    eax
  422415:	and    eax,0x1
  422418:	jmp    0x42244e
  42241a:	cmp    BYTE PTR [ecx],0x6
  42241d:	jne    0x422445
  42241f:	cmp    BYTE PTR [ecx+0x1],0x2
  422423:	jne    0x422445
  422425:	movzx  eax,WORD PTR [ecx+0x2]
  422429:	test   eax,0x800
  42242e:	je     0x422445
  422430:	test   eax,0x1000
  422435:	jne    0x422445
  422437:	and    al,0xf
  422439:	cmp    al,0x2
  42243b:	jne    0x422445
  42243d:	mov    bl,BYTE PTR [ebp+0x10]
  422440:	mov    dl,BYTE PTR [ebp+0xc]
  422443:	jmp    0x4223f4
  422445:	mov    bl,BYTE PTR [ebp+0x10]
  422448:	mov    dl,BYTE PTR [ebp+0xc]
  42244b:	xor    eax,eax
  42244d:	inc    eax
  42244e:	test   ax,ax
  422451:	je     0x4223f4
  422453:	cmp    BYTE PTR ds:0x45f692,0x0
  42245a:	je     0x42246a
  42245c:	push   0x0
  42245e:	xor    edx,edx
  422460:	mov    ecx,0x816
  422465:	call   0x42ee80
  42246a:	mov    eax,0xffff
  42246f:	jmp    0x4223ff
  422471:	push   ebp
  422472:	mov    ebp,esp
  422474:	push   ecx
  422475:	push   ecx
  422476:	mov    edx,DWORD PTR ds:0x44def4
  42247c:	mov    cl,BYTE PTR ds:0x44deda
  422482:	push   ebx
  422483:	xor    al,al
  422485:	push   esi
  422486:	mov    esi,DWORD PTR ds:0x44def8
  42248c:	push   edi
  42248d:	mov    BYTE PTR [ebp-0x1],al
  422490:	mov    BYTE PTR [ebp-0x2],al
  422493:	lea    ebx,[edx+0x2]
  422496:	test   cl,cl
  422498:	je     0x42249d
  42249a:	mov    BYTE PTR [ebx],cl
  42249c:	inc    ebx
  42249d:	mov    cl,BYTE PTR ds:0x44defe
  4224a3:	mov    ah,BYTE PTR [esi+0x1]
  4224a6:	mov    BYTE PTR [ebp-0x3],ah
  4224a9:	test   cl,cl
  4224ab:	je     0x4225fb
  4224b1:	mov    al,BYTE PTR [esi+0x2]
  4224b4:	cmp    cl,al
  4224b6:	je     0x4224da
  4224b8:	cmp    BYTE PTR ds:0x45f692,0x0
  4224bf:	je     0x4224d3
  4224c1:	cmp    al,cl
  4224c3:	sbb    ecx,ecx
  4224c5:	and    ecx,0x7d
  4224c8:	add    ecx,0x7e0
  4224ce:	call   0x42f124
  4224d3:	xor    eax,eax
  4224d5:	jmp    0x4225f4
  4224da:	mov    al,BYTE PTR [esi+0x3]
  4224dd:	mov    ecx,DWORD PTR ds:0x44dee0
  4224e3:	mov    dl,al
  4224e5:	shr    dl,0x2
  4224e8:	mov    BYTE PTR [ebp-0x7],0x0
  4224ec:	and    dl,0x1
  4224ef:	jne    0x422504
  4224f1:	and    al,0x1
  4224f3:	mov    BYTE PTR [ebp-0x7],al
  4224f6:	jne    0x422504
  4224f8:	mov    al,BYTE PTR [ecx+0x3]
  4224fb:	and    al,0x7
  4224fd:	mov    BYTE PTR [ebp-0x2],0x1
  422501:	mov    BYTE PTR [ebp-0x1],al
  422504:	movzx  eax,BYTE PTR [esi]
  422507:	push   0x0
  422509:	push   eax
  42250a:	push   DWORD PTR [ebp-0x7]
  42250d:	call   0x422366
  422512:	movzx  ecx,ax
  422515:	mov    edi,0xffff
  42251a:	cmp    cx,di
  42251d:	je     0x4224d3
  42251f:	cmp    BYTE PTR [esi+0x2],0x2
  422523:	jne    0x42256e
  422525:	mov    al,BYTE PTR [esi+0x3]
  422528:	mov    esi,DWORD PTR ds:0x44dee4
  42252e:	mov    dl,al
  422530:	shr    dl,0x3
  422533:	mov    BYTE PTR [ebp-0x7],0x0
  422537:	and    dl,0x1
  42253a:	jne    0x422551
  42253c:	shr    al,1
  42253e:	and    al,0x1
  422540:	mov    BYTE PTR [ebp-0x7],al
  422543:	jne    0x422551
  422545:	mov    al,BYTE PTR [esi+0x3]
  422548:	and    al,0x7
  42254a:	mov    BYTE PTR [ebp-0x2],0x1
  42254e:	mov    BYTE PTR [ebp-0x1],al
  422551:	mov    eax,ecx
  422553:	shr    eax,0x8
  422556:	push   eax
  422557:	push   ecx
  422558:	push   DWORD PTR [ebp-0x7]
  42255b:	mov    ecx,esi
  42255d:	call   0x422366
  422562:	movzx  ecx,ax
  422565:	cmp    cx,di
  422568:	je     0x4224d3
  42256e:	mov    eax,ecx
  422570:	shr    eax,0x8
  422573:	cmp    al,0x8
  422575:	je     0x42257b
  422577:	mov    BYTE PTR [ebx],0x67
  42257a:	inc    ebx
  42257b:	test   cl,cl
  42257d:	jne    0x42259d
  42257f:	cmp    BYTE PTR ds:0x45f692,cl
  422585:	je     0x4224d3
  42258b:	mov    ecx,0x7e7
  422590:	xor    edx,edx
  422592:	push   edx
  422593:	call   0x42ee80
  422598:	jmp    0x4224d3
  42259d:	mov    edx,DWORD PTR ds:0x44def4
  4225a3:	mov    al,BYTE PTR [ebp-0x1]
  4225a6:	mov    ah,BYTE PTR [ebp-0x3]
  4225a9:	cmp    cl,0x1
  4225ac:	je     0x4225bc
  4225ae:	inc    ah
  4225b0:	mov    BYTE PTR [ebp-0x3],ah
  4225b3:	cmp    cl,0x2
  4225b6:	jne    0x4225bc
  4225b8:	mov    BYTE PTR [ebx],0x66
  4225bb:	inc    ebx
  4225bc:	cmp    BYTE PTR [ebp-0x2],0x0
  4225c0:	je     0x4225d6
  4225c2:	test   al,al
  4225c4:	je     0x4225d6
  4225c6:	cmp    al,0x7
  4225c8:	je     0x4225d6
  4225ca:	movzx  eax,al
  4225cd:	mov    al,BYTE PTR [eax+0x40113b]
  4225d3:	mov    BYTE PTR [ebx],al
  4225d5:	inc    ebx
  4225d6:	cmp    cl,0x8
  4225d9:	jne    0x4225df
  4225db:	mov    BYTE PTR [ebx],0x48
  4225de:	inc    ebx
  4225df:	mov    al,BYTE PTR [ebp-0x3]
  4225e2:	mov    BYTE PTR [ebx],al
  4225e4:	inc    ebx
  4225e5:	mov    cl,bl
  4225e7:	sub    cl,dl
  4225e9:	sub    cl,0x2
  4225ec:	mov    BYTE PTR [edx],0x0
  4225ef:	mov    BYTE PTR [edx+0x1],cl
  4225f2:	mov    eax,ebx
  4225f4:	pop    edi
  4225f5:	pop    esi
  4225f6:	pop    ebx
  4225f7:	leave  
  4225f8:	ret    0x4
  4225fb:	mov    cl,BYTE PTR [esi]
  4225fd:	test   cl,cl
  4225ff:	jne    0x4225a9
  422601:	cmp    BYTE PTR ds:0x45f692,cl
  422607:	je     0x4224d3
  42260d:	mov    ecx,0x7e0
  422612:	jmp    0x422590
  422617:	push   ebp
  422618:	mov    ebp,esp
  42261a:	push   ecx
  42261b:	mov    eax,ds:0x44def8
  422620:	push   ebx
  422621:	mov    bl,BYTE PTR [eax+0x6]
  422624:	push   esi
  422625:	xor    edx,edx
  422627:	push   edi
  422628:	test   bl,bl
  42262a:	jne    0x42262e
  42262c:	mov    bl,0xc3
  42262e:	test   BYTE PTR [eax+0x4],0x7
  422632:	mov    edi,0x100
  422637:	je     0x422674
  422639:	mov    edx,DWORD PTR ds:0x44dee0
  42263f:	cmp    BYTE PTR [edx],0x2
  422642:	jne    0x422663
  422644:	test   DWORD PTR [edx+0x4],edi
  422647:	jne    0x422663
  422649:	cmp    BYTE PTR [edx+0x1],0x2
  42264d:	jbe    0x422656
  42264f:	mov    ecx,0x85c
  422654:	jmp    0x422668
  422656:	movzx  esi,WORD PTR [edx+0x8]
  42265a:	test   si,si
  42265d:	je     0x422677
  42265f:	dec    bl
  422661:	jmp    0x422677
  422663:	mov    ecx,0x816
  422668:	xor    edx,edx
  42266a:	push   edx
  42266b:	call   0x42ee80
  422670:	xor    eax,eax
  422672:	jmp    0x4226ba
  422674:	mov    esi,DWORD PTR [ebp-0x4]
  422677:	mov    al,BYTE PTR [eax+0x8]
  42267a:	mov    ecx,DWORD PTR ds:0x44def4
  422680:	and    al,0x7
  422682:	add    ecx,0x2
  422685:	cmp    al,0x6
  422687:	jne    0x42268d
  422689:	mov    BYTE PTR [ecx],0x48
  42268c:	inc    ecx
  42268d:	mov    BYTE PTR [ecx],bl
  42268f:	mov    ebx,DWORD PTR ds:0x44def4
  422695:	inc    ecx
  422696:	mov    al,cl
  422698:	sub    al,bl
  42269a:	sub    al,0x2
  42269c:	mov    BYTE PTR [ebx],0x0
  42269f:	test   edx,edx
  4226a1:	je     0x4226b5
  4226a3:	test   si,si
  4226a6:	jne    0x4226ad
  4226a8:	test   DWORD PTR [edx+0x4],edi
  4226ab:	je     0x4226b5
  4226ad:	mov    WORD PTR [ecx],si
  4226b0:	add    ecx,0x2
  4226b3:	add    al,0x2
  4226b5:	mov    BYTE PTR [ebx+0x1],al
  4226b8:	mov    eax,ecx
  4226ba:	pop    edi
  4226bb:	pop    esi
  4226bc:	pop    ebx
  4226bd:	leave  
  4226be:	ret    0x4
  4226c1:	mov    edx,DWORD PTR ds:0x45f884
  4226c7:	mov    ecx,0x3fa
  4226cc:	mov    edx,DWORD PTR [edx+0x8]
  4226cf:	call   0x42f1c0
  4226d4:	int3   
  4226d5:	push   ebp
  4226d6:	mov    ebp,esp
  4226d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4226db:	call   0x43f42e
  4226e0:	pop    ebp
  4226e1:	ret    0x4
  4226e4:	push   ebp
  4226e5:	mov    ebp,esp
  4226e7:	push   ecx
  4226e8:	push   ecx
  4226e9:	cmp    BYTE PTR ds:0x44e4c1,0x0
  4226f0:	je     0x4226f7
  4226f2:	or     eax,0xffffffff
  4226f5:	leave  
  4226f6:	ret    
  4226f7:	lea    eax,[ebp-0x8]
  4226fa:	push   eax
  4226fb:	call   DWORD PTR ds:0x46448c
  422701:	mov    eax,DWORD PTR [ebp-0x8]
  422704:	pop    ecx
  422705:	leave  
  422706:	ret    
  422707:	push   0x20
  422709:	pop    ecx
  42270a:	call   0x43f45b
  42270f:	mov    ecx,DWORD PTR ds:0x45f884
  422715:	or     DWORD PTR [eax+0x4],0xffffffff
  422719:	mov    ecx,DWORD PTR [ecx+0x4]
  42271c:	mov    DWORD PTR [eax+0x8],ecx
  42271f:	xor    ecx,ecx
  422721:	inc    ecx
  422722:	mov    WORD PTR [eax],cx
  422725:	mov    ecx,0x8664
  42272a:	mov    WORD PTR [eax+0x2],cx
  42272e:	mov    ecx,eax
  422730:	mov    DWORD PTR [eax+0x10],0x4226c1
  422737:	mov    DWORD PTR [eax+0xc],0x4226d5
  42273e:	mov    DWORD PTR [eax+0x14],0x4226e4
  422745:	mov    DWORD PTR [eax+0x18],0xcdc627
  42274c:	mov    BYTE PTR [eax+0x1c],0x0
  422750:	call   0x423cd4
  422755:	cmp    DWORD PTR ds:0x45f880,0x0
  42275c:	mov    BYTE PTR ds:0x448fb6,0x2e
  422763:	setne  BYTE PTR ds:0x45f851
  42276a:	call   0x42cd77
  42276f:	cmp    BYTE PTR ds:0x44e042,0x0
  422776:	jne    0x422781
  422778:	cmp    BYTE PTR ds:0x44e02f,0x0
  42277f:	je     0x4227b4
  422781:	mov    ecx,DWORD PTR ds:0x44e4bc
  422787:	call   0x42da8f
  42278c:	cmp    BYTE PTR ds:0x44e042,0x0
  422793:	je     0x4227b4
  422795:	mov    eax,0x1000
  42279a:	mov    ecx,0x42cd23
  42279f:	mov    DWORD PTR ds:0x44f58c,0x44f590
  4227a9:	mov    ds:0x45f690,ax
  4227af:	call   0x445821
  4227b4:	push   esi
  4227b5:	mov    esi,DWORD PTR ds:0x45f87c
  4227bb:	jmp    0x4227c7
  4227bd:	mov    ecx,esi
  4227bf:	call   0x422878
  4227c4:	mov    esi,DWORD PTR [esi+0x30]
  4227c7:	test   esi,esi
  4227c9:	jne    0x4227bd
  4227cb:	mov    eax,ds:0x45f878
  4227d0:	jmp    0x4227ed
  4227d2:	push   ecx
  4227d3:	push   ecx
  4227d4:	lea    edx,[eax+0x6]
  4227d7:	mov    ecx,0x403b88
  4227dc:	call   0x422b13
  4227e1:	mov    eax,ds:0x45f878
  4227e6:	mov    eax,DWORD PTR [eax]
  4227e8:	mov    ds:0x45f878,eax
  4227ed:	test   eax,eax
  4227ef:	jne    0x4227d2
  4227f1:	mov    esi,DWORD PTR ds:0x45f858
  4227f7:	jmp    0x422803
  4227f9:	mov    ecx,esi
  4227fb:	call   0x423a2a
  422800:	mov    esi,DWORD PTR [esi+0x18]
  422803:	test   esi,esi
  422805:	jne    0x4227f9
  422807:	mov    esi,DWORD PTR ds:0x45f860
  42280d:	jmp    0x42283d
  42280f:	cmp    BYTE PTR [esi+0x6],0x0
  422813:	jne    0x422819
  422815:	mov    BYTE PTR [esi+0x6],0x3
  422819:	mov    cl,BYTE PTR [esi+0x7]
  42281c:	mov    al,cl
  42281e:	and    al,0x3
  422820:	cmp    al,0x3
  422822:	jne    0x42282a
  422824:	and    cl,0xfe
  422827:	mov    BYTE PTR [esi+0x7],cl
  42282a:	mov    al,BYTE PTR [esi+0x7]
  42282d:	and    al,0x82
  42282f:	cmp    al,0x82
  422831:	jne    0x42283a
  422833:	mov    ecx,esi
  422835:	call   0x423a2a
  42283a:	mov    esi,DWORD PTR [esi+0x18]
  42283d:	test   esi,esi
  42283f:	jne    0x42280f
  422841:	mov    esi,DWORD PTR ds:0x45f870
  422847:	jmp    0x422853
  422849:	mov    ecx,esi
  42284b:	call   0x423a2a
  422850:	mov    esi,DWORD PTR [esi+0x18]
  422853:	test   esi,esi
  422855:	jne    0x422849
  422857:	mov    esi,DWORD PTR ds:0x45f868
  42285d:	jmp    0x422869
  42285f:	mov    ecx,esi
  422861:	call   0x423b8f
  422866:	mov    esi,DWORD PTR [esi+0x18]
  422869:	test   esi,esi
  42286b:	jne    0x42285f
  42286d:	mov    ecx,0x423c77
  422872:	pop    esi
  422873:	jmp    0x445821
  422878:	push   ebp
  422879:	mov    ebp,esp
  42287b:	sub    esp,0x10
  42287e:	push   esi
  42287f:	mov    esi,ecx
  422881:	mov    DWORD PTR [ebp-0x8],esi
  422884:	movzx  eax,WORD PTR [esi+0x1a]
  422888:	test   ax,ax
  42288b:	jne    0x422b10
  422891:	mov    eax,ds:0x403be8
  422896:	push   ebx
  422897:	push   edi
  422898:	xor    edi,edi
  42289a:	mov    DWORD PTR [ebp-0x4],edi
  42289d:	test   eax,eax
  42289f:	je     0x4228f2
  4228a1:	movzx  edx,BYTE PTR [esi+0x5]
  4228a5:	mov    DWORD PTR [ebp-0xc],edx
  4228a8:	movsx  ebx,BYTE PTR [eax]
  4228ab:	cmp    edx,ebx
  4228ad:	jl     0x4228df
  4228af:	mov    ecx,esi
  4228b1:	sub    ecx,edx
  4228b3:	push   ebx
  4228b4:	inc    eax
  4228b5:	push   eax
  4228b6:	push   ecx
  4228b7:	mov    DWORD PTR [ebp-0x10],ecx
  4228ba:	call   0x447640
  4228bf:	mov    edx,DWORD PTR [ebp-0xc]
  4228c2:	add    esp,0xc
  4228c5:	test   eax,eax
  4228c7:	jne    0x4228df
  4228c9:	cmp    edx,ebx
  4228cb:	je     0x4229a9
  4228d1:	mov    eax,DWORD PTR [ebp-0x10]
  4228d4:	cmp    BYTE PTR [eax],0x24
  4228d7:	je     0x4228df
  4228d9:	cmp    BYTE PTR [ebx+eax*1],0x24
  4228dd:	je     0x422942
  4228df:	inc    edi
  4228e0:	mov    eax,edi
  4228e2:	imul   eax,eax,0xc
  4228e5:	mov    DWORD PTR [ebp-0x4],edi
  4228e8:	mov    eax,DWORD PTR [eax+0x403be8]
  4228ee:	test   eax,eax
  4228f0:	jne    0x4228a8
  4228f2:	mov    ebx,DWORD PTR [ebp-0x10]
  4228f5:	imul   edi,edi,0xc
  4228f8:	mov    DWORD PTR [ebp-0x4],edi
  4228fb:	cmp    DWORD PTR [edi+0x403be8],0x0
  422902:	jne    0x4229ef
  422908:	push   ecx
  422909:	mov    ecx,esi
  42290b:	call   0x4239c0
  422910:	mov    edx,DWORD PTR [esi+0x2c]
  422913:	test   edx,edx
  422915:	je     0x4229ea
  42291b:	lea    ecx,[edx+0x6]
  42291e:	lea    edi,[ecx+0x1]
  422921:	mov    al,BYTE PTR [ecx]
  422923:	inc    ecx
  422924:	test   al,al
  422926:	jne    0x422921
  422928:	sub    ecx,edi
  42292a:	cmp    DWORD PTR [edx+ecx*1+0x2],0x45444f43
  422932:	jne    0x4229d5
  422938:	mov    ebx,0x60000020
  42293d:	jmp    0x4229ef
  422942:	mov    ebx,edi
  422944:	imul   ebx,ebx,0xc
  422947:	mov    edi,0x4631e0
  42294c:	push   DWORD PTR [ebx+0x403bec]
  422952:	push   0x100
  422957:	push   edi
  422958:	call   DWORD PTR ds:0x464488
  42295e:	mov    ecx,edi
  422960:	add    esp,0xc
  422963:	lea    edx,[ecx+0x1]
  422966:	mov    al,BYTE PTR [ecx]
  422968:	inc    ecx
  422969:	test   al,al
  42296b:	jne    0x422966
  42296d:	mov    eax,DWORD PTR [ebx+0x403be8]
  422973:	movzx  esi,BYTE PTR [esi+0x5]
  422977:	movsx  eax,BYTE PTR [eax]
  42297a:	sub    ecx,edx
  42297c:	sub    esi,eax
  42297e:	lea    edi,[ecx+0x4631e0]
  422984:	mov    ecx,DWORD PTR [ebp-0x10]
  422987:	push   esi
  422988:	add    eax,ecx
  42298a:	push   eax
  42298b:	push   edi
  42298c:	call   0x447646
  422991:	mov    ebx,DWORD PTR [ebx+0x403bf0]
  422997:	mov    BYTE PTR [esi+edi*1],0x0
  42299b:	mov    esi,DWORD PTR [ebp-0x8]
  42299e:	mov    edi,DWORD PTR [ebp-0x4]
  4229a1:	add    esp,0xc
  4229a4:	jmp    0x4228f5
  4229a9:	mov    esi,edi
  4229ab:	imul   esi,esi,0xc
  4229ae:	push   DWORD PTR [esi+0x403bec]
  4229b4:	push   0x100
  4229b9:	push   0x4631e0
  4229be:	call   DWORD PTR ds:0x464488
  4229c4:	mov    ebx,DWORD PTR [esi+0x403bf0]
  4229ca:	mov    esi,DWORD PTR [ebp-0x8]
  4229cd:	add    esp,0xc
  4229d0:	jmp    0x4228f5
  4229d5:	cmp    WORD PTR [edx+ecx*1+0x3],0x5342
  4229dc:	jne    0x4229ea
  4229de:	cmp    BYTE PTR [edx+ecx*1+0x5],0x53
  4229e3:	mov    ebx,0xc0000080
  4229e8:	je     0x4229ef
  4229ea:	mov    ebx,0xc0000040
  4229ef:	cmp    DWORD PTR [esi+0x44],0x0
  4229f3:	je     0x422a0b
  4229f5:	push   DWORD PTR [esi+0x44]
  4229f8:	push   0x100
  4229fd:	push   0x4631e0
  422a02:	call   DWORD PTR ds:0x464488
  422a08:	add    esp,0xc
  422a0b:	test   BYTE PTR [esi+0x7],0x40
  422a0f:	je     0x422a17
  422a11:	and    ebx,0x7fffffff
  422a17:	mov    cl,BYTE PTR [esi+0x48]
  422a1a:	xor    eax,eax
  422a1c:	test   cl,0x2
  422a1f:	je     0x422a26
  422a21:	mov    eax,0x200
  422a26:	test   cl,0x4
  422a29:	je     0x422a30
  422a2b:	or     eax,0x40000000
  422a30:	test   cl,0x8
  422a33:	je     0x422a3a
  422a35:	or     eax,0x80000000
  422a3a:	test   cl,0x10
  422a3d:	je     0x422a44
  422a3f:	or     eax,0x20000000
  422a44:	test   cl,0x20
  422a47:	je     0x422a4e
  422a49:	or     eax,0x10000000
  422a4e:	test   cl,0x40
  422a51:	je     0x422a58
  422a53:	or     eax,0x8000000
  422a58:	test   cl,cl
  422a5a:	jns    0x422a61
  422a5c:	or     eax,0x4000000
  422a61:	test   BYTE PTR [esi+0x49],0x1
  422a65:	je     0x422a6c
  422a67:	or     eax,0x2000000
  422a6c:	test   eax,eax
  422a6e:	je     0x422a78
  422a70:	and    ebx,0xe0
  422a76:	or     ebx,eax
  422a78:	mov    esi,0x4631e0
  422a7d:	lea    ecx,[esi+0x1]
  422a80:	mov    al,BYTE PTR [esi]
  422a82:	inc    esi
  422a83:	test   al,al
  422a85:	jne    0x422a80
  422a87:	sub    esi,ecx
  422a89:	inc    esi
  422a8a:	mov    ecx,esi
  422a8c:	call   0x43f45b
  422a91:	push   0x4631e0
  422a96:	mov    edi,eax
  422a98:	push   esi
  422a99:	push   edi
  422a9a:	call   DWORD PTR ds:0x464488
  422aa0:	pop    ecx
  422aa1:	pop    ecx
  422aa2:	mov    edx,ebx
  422aa4:	mov    ecx,edi
  422aa6:	call   0x42402e
  422aab:	mov    esi,DWORD PTR [ebp-0x8]
  422aae:	mov    edx,DWORD PTR [ebp-0x4]
  422ab1:	movzx  ecx,ax
  422ab4:	mov    WORD PTR [esi+0x1a],cx
  422ab8:	mov    edx,DWORD PTR [edx+0x403bf0]
  422abe:	call   0x424064
  422ac3:	test   ebx,0x200
  422ac9:	jne    0x422b02
  422acb:	movzx  eax,WORD PTR [esi+0x1c]
  422acf:	mov    ecx,DWORD PTR ds:0x44e03c
  422ad5:	mov    ebx,DWORD PTR [eax*4+0x403b98]
  422adc:	movzx  eax,WORD PTR [esi+0x1a]
  422ae0:	movsx  edx,ax
  422ae3:	call   0x424f0c
  422ae8:	mov    edi,eax
  422aea:	test   edi,edi
  422aec:	jne    0x422aff
  422aee:	push   0x37c
  422af3:	push   0x41e510
  422af8:	push   eax
  422af9:	call   DWORD PTR ds:0x44e04c
  422aff:	or     DWORD PTR [edi+0x8],ebx
  422b02:	and    DWORD PTR [esi+0x24],0x0
  422b06:	and    DWORD PTR [esi+0x28],0x0
  422b0a:	mov    ax,WORD PTR [esi+0x1a]
  422b0e:	pop    edi
  422b0f:	pop    ebx
  422b10:	pop    esi
  422b11:	leave  
  422b12:	ret    
  422b13:	push   ebp
  422b14:	mov    ebp,esp
  422b16:	push   ecx
  422b17:	cmp    WORD PTR ds:0x4632e0,0x0
  422b1f:	push   esi
  422b20:	push   edi
  422b21:	mov    edi,edx
  422b23:	mov    esi,ecx
  422b25:	jne    0x422b4d
  422b27:	push   ecx
  422b28:	mov    edx,0xa00
  422b2d:	mov    ecx,0x41e4e4
  422b32:	call   0x42402e
  422b37:	mov    ds:0x4632e0,ax
  422b3d:	mov    ecx,DWORD PTR ds:0x4632e0
  422b43:	mov    edx,0xa00
  422b48:	call   0x424064
  422b4d:	mov    ecx,DWORD PTR ds:0x4632e0
  422b53:	call   0x424194
  422b58:	mov    edx,esi
  422b5a:	lea    ecx,[edx+0x1]
  422b5d:	mov    al,BYTE PTR [edx]
  422b5f:	inc    edx
  422b60:	test   al,al
  422b62:	jne    0x422b5d
  422b64:	sub    edx,ecx
  422b66:	mov    ecx,esi
  422b68:	call   0x424be7
  422b6d:	mov    edx,edi
  422b6f:	lea    ecx,[edx+0x1]
  422b72:	mov    al,BYTE PTR [edx]
  422b74:	inc    edx
  422b75:	test   al,al
  422b77:	jne    0x422b72
  422b79:	sub    edx,ecx
  422b7b:	mov    ecx,edi
  422b7d:	call   0x424be7
  422b82:	xor    edx,edx
  422b84:	inc    edx
  422b85:	lea    ecx,[ebp-0x4]
  422b88:	mov    BYTE PTR [ebp-0x4],0x20
  422b8c:	call   0x424be7
  422b91:	mov    ecx,DWORD PTR ds:0x45f854
  422b97:	pop    edi
  422b98:	pop    esi
  422b99:	test   cx,cx
  422b9c:	je     0x422ba3
  422b9e:	call   0x424194
  422ba3:	leave  
  422ba4:	ret    0x8
  422ba7:	push   ebp
  422ba8:	mov    ebp,esp
  422baa:	mov    eax,DWORD PTR [ebp+0x8]
  422bad:	push   esi
  422bae:	movzx  esi,WORD PTR [eax+0x9]
  422bb2:	mov    eax,ds:0x45f834
  422bb7:	mov    edx,esi
  422bb9:	add    DWORD PTR ds:0x45f830,edx
  422bbf:	test   BYTE PTR [eax+0x7],0x80
  422bc3:	jne    0x422bcf
  422bc5:	call   0x424a66
  422bca:	jmp    0x422df0
  422bcf:	test   si,si
  422bd2:	je     0x422df0
  422bd8:	push   ebx
  422bd9:	push   edi
  422bda:	xor    edi,edi
  422bdc:	inc    edi
  422bdd:	xor    ebx,ebx
  422bdf:	movzx  eax,si
  422be2:	dec    eax
  422be3:	cmp    eax,0xd
  422be6:	ja     0x422d02
  422bec:	jmp    DWORD PTR [eax*4+0x422df7]
  422bf3:	mov    edx,edi
  422bf5:	lea    ecx,[ebp+0x8]
  422bf8:	add    esi,0xfffe
  422bfe:	mov    BYTE PTR [ebp+0x8],0x66
  422c02:	call   0x424be7
  422c07:	mov    BYTE PTR [ebp+0x8],0x90
  422c0b:	jmp    0x422dcb
  422c10:	mov    edx,edi
  422c12:	lea    ecx,[ebp+0x8]
  422c15:	add    esi,0xfffd
  422c1b:	mov    BYTE PTR [ebp+0x8],0xf
  422c1f:	call   0x424be7
  422c24:	mov    BYTE PTR [ebp+0x8],0x1f
  422c28:	jmp    0x422dbe
  422c2d:	mov    edx,edi
  422c2f:	lea    ecx,[ebp+0x8]
  422c32:	add    esi,0xfffc
  422c38:	mov    BYTE PTR [ebp+0x8],0xf
  422c3c:	call   0x424be7
  422c41:	mov    edx,edi
  422c43:	lea    ecx,[ebp+0x8]
  422c46:	mov    BYTE PTR [ebp+0x8],0x1f
  422c4a:	call   0x424be7
  422c4f:	mov    BYTE PTR [ebp+0x8],0x40
  422c53:	jmp    0x422dbe
  422c58:	add    esi,0xfffb
  422c5e:	mov    edx,edi
  422c60:	lea    ecx,[ebp+0x8]
  422c63:	mov    BYTE PTR [ebp+0x8],0xf
  422c67:	call   0x424be7
  422c6c:	mov    edx,edi
  422c6e:	lea    ecx,[ebp+0x8]
  422c71:	mov    BYTE PTR [ebp+0x8],0x1f
  422c75:	call   0x424be7
  422c7a:	mov    BYTE PTR [ebp+0x8],0x44
  422c7e:	jmp    0x422db1
  422c83:	mov    edx,edi
  422c85:	lea    ecx,[ebp+0x8]
  422c88:	add    esi,0xfffa
  422c8e:	mov    BYTE PTR [ebp+0x8],0x66
  422c92:	call   0x424be7
  422c97:	jmp    0x422c5e
  422c99:	mov    edx,edi
  422c9b:	lea    ecx,[ebp+0x8]
  422c9e:	add    esi,0xfff9
  422ca4:	mov    BYTE PTR [ebp+0x8],0xf
  422ca8:	call   0x424be7
  422cad:	mov    edx,edi
  422caf:	lea    ecx,[ebp+0x8]
  422cb2:	mov    BYTE PTR [ebp+0x8],0x1f
  422cb6:	call   0x424be7
  422cbb:	mov    BYTE PTR [ebp+0x8],0x80
  422cbf:	jmp    0x422d97
  422cc4:	add    esi,0xfff8
  422cca:	jmp    0x422d6a
  422ccf:	add    esi,0xfff7
  422cd5:	jmp    0x422d5c
  422cda:	add    esi,0xfff6
  422ce0:	jmp    0x422d4e
  422ce2:	add    esi,0xfff5
  422ce8:	jmp    0x422d40
  422cea:	add    esi,0xfff4
  422cf0:	jmp    0x422d32
  422cf2:	add    esi,0xfff3
  422cf8:	jmp    0x422d24
  422cfa:	add    esi,0xfff2
  422d00:	jmp    0x422d16
  422d02:	mov    edx,edi
  422d04:	lea    ecx,[ebp+0x8]
  422d07:	add    esi,0xfff1
  422d0d:	mov    BYTE PTR [ebp+0x8],0x66
  422d11:	call   0x424be7
  422d16:	mov    edx,edi
  422d18:	lea    ecx,[ebp+0x8]
  422d1b:	mov    BYTE PTR [ebp+0x8],0x66
  422d1f:	call   0x424be7
  422d24:	mov    edx,edi
  422d26:	lea    ecx,[ebp+0x8]
  422d29:	mov    BYTE PTR [ebp+0x8],0x66
  422d2d:	call   0x424be7
  422d32:	mov    edx,edi
  422d34:	lea    ecx,[ebp+0x8]
  422d37:	mov    BYTE PTR [ebp+0x8],0x66
  422d3b:	call   0x424be7
  422d40:	mov    edx,edi
  422d42:	lea    ecx,[ebp+0x8]
  422d45:	mov    BYTE PTR [ebp+0x8],0x66
  422d49:	call   0x424be7
  422d4e:	mov    edx,edi
  422d50:	lea    ecx,[ebp+0x8]
  422d53:	mov    BYTE PTR [ebp+0x8],0x66
  422d57:	call   0x424be7
  422d5c:	mov    edx,edi
  422d5e:	lea    ecx,[ebp+0x8]
  422d61:	mov    BYTE PTR [ebp+0x8],0x66
  422d65:	call   0x424be7
  422d6a:	mov    edx,edi
  422d6c:	lea    ecx,[ebp+0x8]
  422d6f:	mov    BYTE PTR [ebp+0x8],0xf
  422d73:	call   0x424be7
  422d78:	mov    edx,edi
  422d7a:	lea    ecx,[ebp+0x8]
  422d7d:	mov    BYTE PTR [ebp+0x8],0x1f
  422d81:	call   0x424be7
  422d86:	mov    edx,edi
  422d88:	lea    ecx,[ebp+0x8]
  422d8b:	mov    BYTE PTR [ebp+0x8],0x84
  422d8f:	call   0x424be7
  422d94:	mov    BYTE PTR [ebp+0x8],bl
  422d97:	mov    edx,edi
  422d99:	lea    ecx,[ebp+0x8]
  422d9c:	call   0x424be7
  422da1:	mov    edx,edi
  422da3:	lea    ecx,[ebp+0x8]
  422da6:	mov    BYTE PTR [ebp+0x8],bl
  422da9:	call   0x424be7
  422dae:	mov    BYTE PTR [ebp+0x8],bl
  422db1:	mov    edx,edi
  422db3:	lea    ecx,[ebp+0x8]
  422db6:	call   0x424be7
  422dbb:	mov    BYTE PTR [ebp+0x8],bl
  422dbe:	mov    edx,edi
  422dc0:	lea    ecx,[ebp+0x8]
  422dc3:	call   0x424be7
  422dc8:	mov    BYTE PTR [ebp+0x8],bl
  422dcb:	mov    edx,edi
  422dcd:	lea    ecx,[ebp+0x8]
  422dd0:	call   0x424be7
  422dd5:	test   si,si
  422dd8:	jne    0x422bdf
  422dde:	jmp    0x422dee
  422de0:	mov    edx,edi
  422de2:	lea    ecx,[ebp+0x8]
  422de5:	mov    BYTE PTR [ebp+0x8],0x90
  422de9:	call   0x424be7
  422dee:	pop    edi
  422def:	pop    ebx
  422df0:	pop    esi
  422df1:	pop    ebp
  422df2:	ret    0x4
  422df5:	mov    edi,edi
  422df7:	loopne 0x422e26
  422df9:	inc    edx
  422dfa:	add    bl,dh
  422dfc:	sub    eax,DWORD PTR [edx+0x0]
  422dff:	adc    BYTE PTR [edx+eax*2],ch
  422e02:	add    BYTE PTR ds:0x5800422c,ch
  422e08:	sub    al,0x42
  422e0a:	add    BYTE PTR [ebx-0x66ffbdd4],al
  422e10:	sub    al,0x42
  422e12:	add    ah,al
  422e14:	sub    al,0x42
  422e16:	add    bh,cl
  422e18:	sub    al,0x42
  422e1a:	add    dl,bl
  422e1c:	sub    al,0x42
  422e1e:	add    dl,ah
  422e20:	sub    al,0x42
  422e22:	add    dl,ch
  422e24:	sub    al,0x42
  422e26:	add    dl,dh
  422e28:	sub    al,0x42
  422e2a:	add    dl,bh
  422e2c:	sub    al,0x42
  422e2e:	add    BYTE PTR [ebp-0x75],dl
  422e31:	in     al,dx
  422e32:	push   ecx
  422e33:	cmp    BYTE PTR ds:0x44e042,0x0
  422e3a:	push   esi
  422e3b:	mov    BYTE PTR ds:0x45f850,0x1
  422e42:	je     0x422e89
  422e44:	mov    ecx,DWORD PTR ds:0x45f84c
  422e4a:	call   0x444348
  422e4f:	push   0x4
  422e51:	pop    esi
  422e52:	mov    edx,esi
  422e54:	lea    ecx,[ebp-0x4]
  422e57:	mov    DWORD PTR [ebp-0x4],esi
  422e5a:	call   0x424be7
  422e5f:	add    DWORD PTR ds:0x45f830,esi
  422e65:	mov    ecx,0x42da39
  422e6a:	call   0x445821
  422e6f:	xor    ecx,ecx
  422e71:	call   0x4442bc
  422e76:	cmp    BYTE PTR ds:0x44e042,0x0
  422e7d:	je     0x422e89
  422e7f:	mov    ecx,0x42d13c
  422e84:	call   0x445821
  422e89:	call   0x42d0b9
  422e8e:	mov    ecx,DWORD PTR [ebp+0x8]
  422e91:	mov    ax,WORD PTR [ecx+0x1]
  422e95:	sub    ax,0x3
  422e99:	je     0x422ee4
  422e9b:	cmp    BYTE PTR [ecx+0x4],0xd
  422e9f:	jne    0x422ee4
  422ea1:	movzx  eax,BYTE PTR [ecx+0x3]
  422ea5:	cmp    BYTE PTR [eax+ecx*1+0x2],0x1
  422eaa:	jne    0x422ee4
  422eac:	lea    edx,[ecx+0x5]
  422eaf:	mov    ecx,DWORD PTR [edx]
  422eb1:	test   ecx,ecx
  422eb3:	je     0x422eda
  422eb5:	cmp    BYTE PTR [ecx+0x6],0x3
  422eb9:	ja     0x422eda
  422ebb:	test   BYTE PTR [ecx+0x7],0x81
  422ebf:	je     0x422eda
  422ec1:	push   ecx
  422ec2:	call   0x4239c0
  422ec7:	push   ecx
  422ec8:	push   ecx
  422ec9:	mov    edx,0x4631e0
  422ece:	mov    ecx,0x403b80
  422ed3:	call   0x422b13
  422ed8:	jmp    0x422ee4
  422eda:	mov    ecx,0x864
  422edf:	call   0x42f140
  422ee4:	mov    ecx,DWORD PTR ds:0x44e03c
  422eea:	call   0x424f60
  422eef:	test   eax,eax
  422ef1:	je     0x422f2b
  422ef3:	mov    si,WORD PTR ds:0x44e040
  422efa:	movzx  ecx,WORD PTR [eax+0x12]
  422efe:	test   cl,0x2
  422f01:	je     0x422f15
  422f03:	and    ecx,0xfffd
  422f09:	mov    WORD PTR [eax+0x12],cx
  422f0d:	mov    eax,0xffff
  422f12:	add    si,ax
  422f15:	mov    ecx,DWORD PTR ds:0x44e03c
  422f1b:	call   0x424f60
  422f20:	test   eax,eax
  422f22:	jne    0x422efa
  422f24:	mov    WORD PTR ds:0x44e040,si
  422f2b:	call   0x423dc4
  422f30:	mov    ecx,DWORD PTR ds:0x45f884
  422f36:	call   0x433eae
  422f3b:	and    DWORD PTR ds:0x45f884,0x0
  422f42:	pop    esi
  422f43:	leave  
  422f44:	ret    0x4
  422f47:	push   ebp
  422f48:	mov    ebp,esp
  422f4a:	push   ecx
  422f4b:	movzx  eax,WORD PTR ds:0x45f854
  422f52:	push   ebx
  422f53:	mov    ebx,ecx
  422f55:	mov    DWORD PTR [ebp-0x4],eax
  422f58:	mov    eax,DWORD PTR [ebx+0x20]
  422f5b:	push   esi
  422f5c:	mov    eax,DWORD PTR [eax+0x3c]
  422f5f:	push   edi
  422f60:	movzx  esi,WORD PTR [eax+0x1a]
  422f64:	mov    ecx,esi
  422f66:	mov    edi,edx
  422f68:	call   0x424194
  422f6d:	mov    ecx,esi
  422f6f:	call   0x4243d2
  422f74:	mov    ecx,edi
  422f76:	push   0xc
  422f78:	pop    edx
  422f79:	mov    esi,eax
  422f7b:	call   0x424be7
  422f80:	cmp    DWORD PTR [ebx+0xc],0x0
  422f84:	jne    0x422f8d
  422f86:	mov    ecx,ebx
  422f88:	call   0x423a2a
  422f8d:	mov    ecx,DWORD PTR [ebx+0x10]
  422f90:	push   0x3
  422f92:	push   DWORD PTR [ebx+0xc]
  422f95:	mov    edx,esi
  422f97:	call   0x424304
  422f9c:	mov    ecx,DWORD PTR [ebx+0x10]
  422f9f:	push   0x3
  422fa1:	push   DWORD PTR [ebx+0xc]
  422fa4:	lea    edx,[esi+0x4]
  422fa7:	call   0x424304
  422fac:	mov    ecx,DWORD PTR ds:0x462b8c
  422fb2:	cmp    DWORD PTR [ecx+0xc],0x0
  422fb6:	jne    0x422fc3
  422fb8:	call   0x423a2a
  422fbd:	mov    ecx,DWORD PTR ds:0x462b8c
  422fc3:	push   0x3
  422fc5:	push   DWORD PTR [ecx+0xc]
  422fc8:	mov    ecx,DWORD PTR [ecx+0x10]
  422fcb:	lea    edx,[esi+0x8]
  422fce:	call   0x424304
  422fd3:	mov    eax,ds:0x462b88
  422fd8:	movzx  edi,WORD PTR [eax+0x1a]
  422fdc:	mov    ecx,edi
  422fde:	call   0x424194
  422fe3:	mov    edx,DWORD PTR [ebp+0x14]
  422fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  422fe9:	call   0x424be7
  422fee:	mov    esi,DWORD PTR [ebp+0xc]
  422ff1:	test   esi,esi
  422ff3:	je     0x423028
  422ff5:	cmp    DWORD PTR [esi+0xc],0x0
  422ff9:	jne    0x423002
  422ffb:	mov    ecx,esi
  422ffd:	call   0x423a2a
  423002:	mov    ecx,edi
  423004:	call   0x4243d2
  423009:	mov    ecx,DWORD PTR [esi+0x10]
  42300c:	push   0x3
  42300e:	push   DWORD PTR [esi+0xc]
  423011:	lea    edx,[eax-0x4]
  423014:	call   0x424304
  423019:	and    DWORD PTR [ebp+0x14],0x0
  42301d:	push   0x4
  42301f:	pop    edx
  423020:	lea    ecx,[ebp+0x14]
  423023:	call   0x424be7
  423028:	mov    ecx,DWORD PTR [ebp-0x4]
  42302b:	call   0x424194
  423030:	pop    edi
  423031:	pop    esi
  423032:	pop    ebx
  423033:	leave  
  423034:	ret    0x10
  423037:	push   ebp
  423038:	mov    ebp,esp
  42303a:	push   ecx
  42303b:	mov    edx,DWORD PTR [ebp+0x8]
  42303e:	movzx  eax,BYTE PTR [edx]
  423041:	movzx  ecx,BYTE PTR [edx]
  423044:	push   eax
  423045:	call   0x446047
  42304a:	lea    ecx,[edx+0x3]
  42304d:	mov    edx,eax
  42304f:	call   0x421d9c
  423054:	test   eax,eax
  423056:	je     0x42305f
  423058:	mov    ecx,eax
  42305a:	call   0x4235ee
  42305f:	cmp    BYTE PTR ds:0x44e00b,0x0
  423066:	je     0x423071
  423068:	cmp    BYTE PTR ds:0x45f83b,0x0
  42306f:	je     0x423078
  423071:	mov    BYTE PTR ds:0x45f693,0x0
  423078:	pop    ecx
  423079:	pop    ebp
  42307a:	ret    0x4
  42307d:	push   ebp
  42307e:	mov    ebp,esp
  423080:	mov    eax,DWORD PTR [ebp+0x8]
  423083:	push   esi
  423084:	mov    al,BYTE PTR [eax+0x3]
  423087:	movzx  esi,al
  42308a:	mov    edx,esi
  42308c:	call   0x424a66
  423091:	add    DWORD PTR ds:0x45f830,esi
  423097:	pop    esi
  423098:	pop    ebp
  423099:	ret    0x4
  42309c:	push   ebp
  42309d:	mov    ebp,esp
  42309f:	mov    ecx,DWORD PTR [ebp+0x8]
  4230a2:	push   esi
  4230a3:	call   0x42c8a5
  4230a8:	mov    esi,eax
  4230aa:	test   esi,esi
  4230ac:	je     0x4230c3
  4230ae:	cmp    BYTE PTR ds:0x44e02f,0x0
  4230b5:	je     0x4230bc
  4230b7:	call   0x423971
  4230bc:	mov    ecx,esi
  4230be:	call   0x4235ee
  4230c3:	pop    esi
  4230c4:	pop    ebp
  4230c5:	ret    0x4
  4230c8:	push   ebp
  4230c9:	mov    ebp,esp
  4230cb:	mov    eax,DWORD PTR [ebp+0x8]
  4230ce:	cmp    BYTE PTR [eax+0x3],0x0
  4230d2:	je     0x4230dc
  4230d4:	inc    BYTE PTR ds:0x4613aa
  4230da:	jmp    0x4230e2
  4230dc:	dec    BYTE PTR ds:0x4613aa
  4230e2:	pop    ebp
  4230e3:	ret    0x4
  4230e6:	push   ebp
  4230e7:	mov    ebp,esp
  4230e9:	sub    esp,0xc
  4230ec:	and    DWORD PTR ds:0x44daf1,0x0
  4230f3:	push   ebx
  4230f4:	mov    ebx,ecx
  4230f6:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f9:	push   esi
  4230fa:	movzx  eax,BYTE PTR [ecx+0x23]
  4230fe:	push   edi
  4230ff:	mov    edi,edx
  423101:	mov    DWORD PTR [ebp-0x8],edi
  423104:	dec    eax
  423105:	je     0x423143
  423107:	dec    eax
  423108:	je     0x423133
  42310a:	dec    eax
  42310b:	dec    eax
  42310c:	je     0x423123
  42310e:	sub    eax,0x4
  423111:	jne    0x423151
  423113:	mov    BYTE PTR ds:0x44daec,0xe
  42311a:	mov    BYTE PTR ds:0x44dae4,0xe
  423121:	jmp    0x423151
  423123:	mov    BYTE PTR ds:0x44daec,0xc
  42312a:	mov    BYTE PTR ds:0x44dae4,0xc
  423131:	jmp    0x423151
  423133:	mov    BYTE PTR ds:0x44daec,0xb
  42313a:	mov    BYTE PTR ds:0x44dae4,0xb
  423141:	jmp    0x423151
  423143:	mov    BYTE PTR ds:0x44daec,0xa
  42314a:	mov    BYTE PTR ds:0x44dae4,0xa
  423151:	mov    esi,DWORD PTR [edi]
  423153:	mov    BYTE PTR [ebp+0xb],0x1
  423157:	movzx  eax,WORD PTR [esi+0x1]
  42315b:	add    esi,eax
  42315d:	mov    eax,DWORD PTR [ecx+0x18]
  423160:	mov    DWORD PTR [ebp-0x4],eax
  423163:	test   ebx,ebx
  423165:	je     0x423249
  42316b:	test   esi,esi
  42316d:	je     0x4231e0
  42316f:	mov    al,BYTE PTR [esi]
  423171:	cmp    al,0x6b
  423173:	je     0x423198
  423175:	cmp    al,0x6a
  423177:	je     0x42318f
  423179:	xor    edx,edx
  42317b:	push   0x0
  42317d:	mov    ecx,0x85a
  423182:	cmp    al,0x69
  423184:	jne    0x423293
  42318a:	call   0x42ee80
  42318f:	mov    ecx,esi
  423191:	call   0x428f71
  423196:	mov    esi,eax
  423198:	test   esi,esi
  42319a:	je     0x4231e0
  42319c:	mov    al,BYTE PTR [esi]
  42319e:	cmp    al,0x6b
  4231a0:	je     0x4231e0
  4231a2:	cmp    al,0x66
  4231a4:	jne    0x4231b5
  4231a6:	cmp    BYTE PTR [ebx+0x4],0x51
  4231aa:	jne    0x4231b0
  4231ac:	xor    edi,edi
  4231ae:	jmp    0x4231ce
  4231b0:	lea    ecx,[ebx+0x3]
  4231b3:	jmp    0x4231c0
  4231b5:	cmp    al,0x63
  4231b7:	jne    0x42328a
  4231bd:	lea    ecx,[esi+0x3]
  4231c0:	lea    edx,[ebp+0xb]
  4231c3:	call   0x431d7f
  4231c8:	mov    edi,eax
  4231ca:	mov    BYTE PTR [ebp+0xb],0x0
  4231ce:	mov    ecx,esi
  4231d0:	call   0x428f71
  4231d5:	mov    ecx,eax
  4231d7:	call   0x428f71
  4231dc:	mov    esi,eax
  4231de:	jmp    0x4231fb
  4231e0:	cmp    BYTE PTR [ebx+0x4],0x51
  4231e4:	jne    0x4231ea
  4231e6:	xor    edi,edi
  4231e8:	jmp    0x4231fb
  4231ea:	lea    ecx,[ebx+0x3]
  4231ed:	lea    edx,[ebp+0xb]
  4231f0:	call   0x431d7f
  4231f5:	mov    edi,eax
  4231f7:	mov    BYTE PTR [ebp+0xb],0x0
  4231fb:	mov    edx,DWORD PTR [ebp-0x4]
  4231fe:	xor    eax,eax
  423200:	mov    cl,BYTE PTR [edx+0x1e]
  423203:	inc    eax
  423204:	shl    eax,cl
  423206:	dec    eax
  423207:	not    eax
  423209:	test   edi,eax
  42320b:	je     0x423221
  42320d:	movzx  eax,BYTE PTR [edx+0x5]
  423211:	push   eax
  423212:	sub    edx,eax
  423214:	mov    ecx,0x817
  423219:	call   0x42f15d
  42321e:	mov    edx,DWORD PTR [ebp-0x4]
  423221:	mov    cl,BYTE PTR [edx+0x1f]
  423224:	shl    edi,cl
  423226:	mov    ecx,ebx
  423228:	or     DWORD PTR ds:0x44daf1,edi
  42322e:	call   0x428f71
  423233:	mov    ebx,eax
  423235:	mov    eax,DWORD PTR [ebp-0x4]
  423238:	mov    eax,DWORD PTR [eax+0x18]
  42323b:	mov    DWORD PTR [ebp-0x4],eax
  42323e:	test   ebx,ebx
  423240:	jne    0x42316b
  423246:	mov    edi,DWORD PTR [ebp-0x8]
  423249:	test   esi,esi
  42324b:	je     0x423260
  42324d:	cmp    BYTE PTR [esi],0x6b
  423250:	je     0x423260
  423252:	push   0x0
  423254:	xor    edx,edx
  423256:	mov    ecx,0x85a
  42325b:	call   0x42ee80
  423260:	cmp    BYTE PTR [ebp+0xc],0x0
  423264:	mov    ebx,0x44daec
  423269:	je     0x4232af
  42326b:	cmp    BYTE PTR [ebp+0xb],0x0
  42326f:	je     0x42329a
  423271:	movzx  eax,BYTE PTR ds:0x44dae4
  423278:	mov    eax,DWORD PTR [eax*4+0x45f6a8]
  42327f:	test   eax,eax
  423281:	je     0x4232af
  423283:	push   0x44dae4
  423288:	jmp    0x4232ad
  42328a:	push   0x0
  42328c:	xor    edx,edx
  42328e:	mov    ecx,0x85a
  423293:	call   0x42ee80
  423298:	jmp    0x4232cf
  42329a:	movzx  eax,BYTE PTR ds:0x44daec
  4232a1:	mov    eax,DWORD PTR [eax*4+0x45f6a8]
  4232a8:	test   eax,eax
  4232aa:	je     0x4232af
  4232ac:	push   ebx
  4232ad:	call   eax
  4232af:	cmp    BYTE PTR ds:0x44e00b,0x0
  4232b6:	je     0x4232cd
  4232b8:	movzx  eax,BYTE PTR ds:0x44daec
  4232bf:	mov    eax,DWORD PTR [eax*4+0x448d98]
  4232c6:	test   eax,eax
  4232c8:	je     0x4232cd
  4232ca:	push   ebx
  4232cb:	call   eax
  4232cd:	mov    DWORD PTR [edi],esi
  4232cf:	pop    edi
  4232d0:	pop    esi
  4232d1:	pop    ebx
  4232d2:	leave  
  4232d3:	ret    0x8
  4232d6:	push   ebp
  4232d7:	mov    ebp,esp
  4232d9:	mov    eax,ds:0x45f830
  4232de:	mov    ds:0x45f848,eax
  4232e3:	mov    eax,DWORD PTR [ebp+0x8]
  4232e6:	push   esi
  4232e7:	mov    esi,DWORD PTR [eax+0x7]
  4232ea:	jmp    0x423357
  4232ec:	mov    al,BYTE PTR [esi]
  4232ee:	cmp    al,0x62
  4232f0:	jne    0x42330b
  4232f2:	mov    eax,DWORD PTR [esi+0x3]
  4232f5:	push   0x1
  4232f7:	mov    ecx,DWORD PTR [eax+0x24]
  4232fa:	push   eax
  4232fb:	add    ecx,0x4
  4232fe:	lea    edx,[ebp+0x8]
  423301:	call   0x4230e6
  423306:	mov    esi,DWORD PTR [ebp+0x8]
  423309:	jmp    0x42334e
  42330b:	cmp    al,0x61
  42330d:	jae    0x42334e
  42330f:	movzx  eax,al
  423312:	mov    eax,DWORD PTR [eax*4+0x45f6a8]
  423319:	test   eax,eax
  42331b:	je     0x423320
  42331d:	push   esi
  42331e:	call   eax
  423320:	mov    eax,ds:0x45f844
  423325:	test   eax,eax
  423327:	je     0x423334
  423329:	and    DWORD PTR ds:0x45f844,0x0
  423330:	mov    esi,eax
  423332:	jmp    0x42334e
  423334:	cmp    BYTE PTR ds:0x44e00b,0x0
  42333b:	je     0x42334e
  42333d:	movzx  eax,BYTE PTR [esi]
  423340:	mov    eax,DWORD PTR [eax*4+0x448d98]
  423347:	test   eax,eax
  423349:	je     0x42334e
  42334b:	push   esi
  42334c:	call   eax
  42334e:	mov    ecx,esi
  423350:	call   0x428f71
  423355:	mov    esi,eax
  423357:	mov    DWORD PTR [ebp+0x8],esi
  42335a:	test   esi,esi
  42335c:	jne    0x4232ec
  42335e:	pop    esi
  42335f:	pop    ebp
  423360:	ret    0x4
  423363:	push   ebp
  423364:	mov    ebp,esp
  423366:	cmp    BYTE PTR ds:0x45f692,0x1
  42336d:	jne    0x42344e
  423373:	push   esi
  423374:	mov    esi,DWORD PTR [ebp+0x8]
  423377:	push   edi
  423378:	movzx  edi,BYTE PTR [esi+0x3]
  42337c:	mov    al,BYTE PTR [edi+esi*1+0x4]
  423380:	test   al,al
  423382:	jne    0x423397
  423384:	push   0x0
  423386:	xor    edx,edx
  423388:	mov    ecx,0x8a5
  42338d:	call   0x42ee80
  423392:	jmp    0x42344c
  423397:	lea    ecx,[esi+0x5]
  42339a:	movzx  edx,al
  42339d:	push   ebx
  42339e:	add    ecx,edi
  4233a0:	call   0x445b60
  4233a5:	mov    ebx,eax
  4233a7:	test   ebx,ebx
  4233a9:	jne    0x4233bf
  4233ab:	movzx  eax,BYTE PTR [edi+esi*1+0x4]
  4233b0:	lea    edx,[esi+0x5]
  4233b3:	add    edx,edi
  4233b5:	mov    ecx,0x7d6
  4233ba:	jmp    0x423445
  4233bf:	mov    al,BYTE PTR [esi+0x3]
  4233c2:	test   al,al
  4233c4:	jne    0x4233d6
  4233c6:	push   0x0
  4233c8:	xor    edx,edx
  4233ca:	mov    ecx,0x8a5
  4233cf:	call   0x42ee80
  4233d4:	jmp    0x42344b
  4233d6:	movzx  edx,al
  4233d9:	lea    ecx,[esi+0x4]
  4233dc:	call   0x445b60
  4233e1:	mov    edx,eax
  4233e3:	test   edx,edx
  4233e5:	jne    0x423435
  4233e7:	movzx  edx,BYTE PTR [esi+0x3]
  4233eb:	push   0x1
  4233ed:	lea    ecx,[esi+0x4]
  4233f0:	call   0x445966
  4233f5:	mov    cl,BYTE PTR [ebx+0x7]
  4233f8:	mov    BYTE PTR [eax+0x7],cl
  4233fb:	mov    cl,BYTE PTR [ebx+0x8]
  4233fe:	and    DWORD PTR [eax+0x10],0x0
  423402:	mov    BYTE PTR [eax+0x8],cl
  423405:	push   0xc
  423407:	lea    edi,[eax+0x18]
  42340a:	pop    ecx
  42340b:	lea    esi,[ebx+0x18]
  42340e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423410:	or     BYTE PTR [eax+0x8],0x4
  423414:	and    DWORD PTR [eax+0x2c],0x0
  423418:	or     BYTE PTR [eax+0x7],0x2
  42341c:	mov    dl,0x2
  42341e:	mov    ecx,eax
  423420:	mov    DWORD PTR [eax+0x28],ebx
  423423:	mov    BYTE PTR [eax+0x6],0x8
  423427:	call   0x444f9e
  42342c:	mov    ecx,ebx
  42342e:	call   0x444fc9
  423433:	jmp    0x42344b
  423435:	cmp    DWORD PTR [edx+0x28],ebx
  423438:	je     0x42344b
  42343a:	movzx  eax,BYTE PTR [edx+0x5]
  42343e:	sub    edx,eax
  423440:	mov    ecx,0x7d5
  423445:	push   eax
  423446:	call   0x42f15d
  42344b:	pop    ebx
  42344c:	pop    edi
  42344d:	pop    esi
  42344e:	pop    ebp
  42344f:	ret    0x4
  423452:	push   ebp
  423453:	mov    ebp,esp
  423455:	push   ecx
  423456:	push   esi
  423457:	mov    esi,DWORD PTR ds:0x45f830
  42345d:	push   edi
  42345e:	mov    edi,ecx
  423460:	mov    edx,DWORD PTR [edi]
  423462:	mov    DWORD PTR [ebp-0x4],edx
  423465:	movzx  eax,BYTE PTR [edx]
  423468:	push   edx
  423469:	call   DWORD PTR [eax*4+0x448d98]
  423470:	jmp    0x42349e
  423472:	cmp    al,0x53
  423474:	jne    0x423480
  423476:	lea    ecx,[ebp-0x4]
  423479:	call   0x423452
  42347e:	jmp    0x42349e
  423480:	cmp    al,0x61
  423482:	jae    0x4234a1
  423484:	cmp    BYTE PTR ds:0x44e00b,0x0
  42348b:	je     0x4234a1
  42348d:	movzx  eax,al
  423490:	mov    eax,DWORD PTR [eax*4+0x448d98]
  423497:	test   eax,eax
  423499:	je     0x4234a1
  42349b:	push   ecx
  42349c:	call   eax
  42349e:	mov    ecx,DWORD PTR [ebp-0x4]
  4234a1:	call   0x428f71
  4234a6:	mov    ecx,eax
  4234a8:	mov    DWORD PTR [ebp-0x4],ecx
  4234ab:	mov    al,BYTE PTR [ecx]
  4234ad:	cmp    al,0x4e
  4234af:	jne    0x423472
  4234b1:	mov    eax,ds:0x45f830
  4234b6:	sub    eax,esi
  4234b8:	imul   eax,DWORD PTR [ecx+0x7]
  4234bc:	add    eax,esi
  4234be:	mov    DWORD PTR [edi],ecx
  4234c0:	pop    edi
  4234c1:	mov    ds:0x45f830,eax
  4234c6:	pop    esi
  4234c7:	leave  
  4234c8:	ret    
  4234c9:	push   ebp
  4234ca:	mov    ebp,esp
  4234cc:	cmp    BYTE PTR ds:0x44e00b,0x0
  4234d3:	push   esi
  4234d4:	mov    esi,DWORD PTR [ebp+0x8]
  4234d7:	je     0x4234e0
  4234d9:	mov    ecx,esi
  4234db:	call   0x43aa0a
  4234e0:	mov    eax,DWORD PTR [esi+0x4]
  4234e3:	mov    esi,DWORD PTR [eax+0x24]
  4234e6:	add    esi,0x4
  4234e9:	jmp    0x423542
  4234eb:	mov    al,BYTE PTR [esi]
  4234ed:	cmp    al,0x61
  4234ef:	jbe    0x42350e
  4234f1:	cmp    al,0x62
  4234f3:	jne    0x423537
  4234f5:	mov    eax,DWORD PTR [esi+0x3]
  4234f8:	push   0x0
  4234fa:	mov    ecx,DWORD PTR [eax+0x24]
  4234fd:	push   eax
  4234fe:	add    ecx,0x4
  423501:	lea    edx,[ebp+0x8]
  423504:	call   0x4230e6
  423509:	mov    esi,DWORD PTR [ebp+0x8]
  42350c:	jmp    0x423537
  42350e:	cmp    al,0x53
  423510:	jne    0x42354c
  423512:	lea    ecx,[ebp+0x8]
  423515:	call   0x423452
  42351a:	mov    esi,DWORD PTR [ebp+0x8]
  42351d:	cmp    BYTE PTR ds:0x44e00b,0x0
  423524:	je     0x423537
  423526:	movzx  eax,BYTE PTR [esi]
  423529:	mov    eax,DWORD PTR [eax*4+0x448d98]
  423530:	test   eax,eax
  423532:	je     0x423537
  423534:	push   esi
  423535:	call   eax
  423537:	mov    ecx,esi
  423539:	call   0x428f71
  42353e:	mov    esi,eax
  423540:	test   esi,esi
  423542:	mov    DWORD PTR [ebp+0x8],esi
  423545:	jne    0x4234eb
  423547:	pop    esi
  423548:	pop    ebp
  423549:	ret    0x4
  42354c:	cmp    al,0xa
  42354e:	jb     0x423554
  423550:	cmp    al,0x1b
  423552:	jbe    0x42351d
  423554:	movzx  eax,al
  423557:	mov    eax,DWORD PTR [eax*4+0x45f6a8]
  42355e:	test   eax,eax
  423560:	je     0x423565
  423562:	push   esi
  423563:	call   eax
  423565:	mov    eax,ds:0x45f844
  42356a:	test   eax,eax
  42356c:	je     0x42351d
  42356e:	and    DWORD PTR ds:0x45f844,0x0
  423575:	mov    esi,eax
  423577:	jmp    0x423537
  423579:	push   ebp
  42357a:	mov    ebp,esp
  42357c:	push   esi
  42357d:	mov    esi,DWORD PTR [ebp+0x8]
  423580:	mov    ecx,esi
  423582:	call   0x4273b2
  423587:	mov    ds:0x44dadc,eax
  42358c:	mov    eax,DWORD PTR [esi+0x3]
  42358f:	mov    cl,BYTE PTR [eax+0x23]
  423592:	movzx  eax,cl
  423595:	dec    eax
  423596:	je     0x4235b4
  423598:	dec    eax
  423599:	je     0x4235b0
  42359b:	dec    eax
  42359c:	dec    eax
  42359d:	je     0x4235ac
  42359f:	sub    eax,0x4
  4235a2:	je     0x4235a8
  4235a4:	xor    eax,eax
  4235a6:	jmp    0x4235b7
  4235a8:	push   0xe
  4235aa:	jmp    0x4235b6
  4235ac:	push   0xc
  4235ae:	jmp    0x4235b6
  4235b0:	push   0xb
  4235b2:	jmp    0x4235b6
  4235b4:	push   0xa
  4235b6:	pop    eax
  4235b7:	movzx  edx,cl
  4235ba:	push   eax
  4235bb:	mov    ecx,0x44dad8
  4235c0:	call   0x421d9c
  4235c5:	test   eax,eax
  4235c7:	je     0x4235d0
  4235c9:	mov    ecx,eax
  4235cb:	call   0x4235ee
  4235d0:	cmp    BYTE PTR ds:0x44e00b,0x0
  4235d7:	je     0x4235e2
  4235d9:	cmp    BYTE PTR ds:0x45f83b,0x0
  4235e0:	je     0x4235e9
  4235e2:	mov    BYTE PTR ds:0x45f693,0x0
  4235e9:	pop    esi
  4235ea:	pop    ebp
  4235eb:	ret    0x4
  4235ee:	push   ebx
  4235ef:	push   esi
  4235f0:	mov    esi,ecx
  4235f2:	push   edi
  4235f3:	cmp    BYTE PTR [esi+0x1],0x0
  4235f7:	je     0x42368b
  4235fd:	mov    ecx,DWORD PTR ds:0x45f854
  423603:	call   0x4243d2
  423608:	mov    ecx,DWORD PTR ds:0x45f830
  42360e:	cmp    ecx,eax
  423610:	je     0x423620
  423612:	test   ecx,ecx
  423614:	jns    0x423620
  423616:	mov    ecx,0x3ec
  42361b:	call   0x42f124
  423620:	call   0x4249be
  423625:	movzx  edx,BYTE PTR [esi+0x1]
  423629:	mov    al,BYTE PTR [esi]
  42362b:	mov    DWORD PTR ds:0x4631dc,edx
  423631:	cmp    al,0x20
  423633:	jne    0x42363c
  423635:	call   0x424a66
  42363a:	jmp    0x423679
  42363c:	movzx  edi,al
  42363f:	lea    ebx,[esi+0x2]
  423642:	lea    esi,[edx+ebx*1]
  423645:	and    edi,0x1f
  423648:	je     0x423672
  42364a:	dec    edi
  42364b:	test   BYTE PTR [esi],0x80
  42364e:	je     0x42365e
  423650:	push   ecx
  423651:	mov    edx,esi
  423653:	mov    ecx,ebx
  423655:	call   0x42c8da
  42365a:	mov    esi,eax
  42365c:	jmp    0x423668
  42365e:	mov    ecx,esi
  423660:	call   0x423855
  423665:	add    esi,0x6
  423668:	test   edi,edi
  42366a:	jne    0x42364a
  42366c:	mov    edx,DWORD PTR ds:0x4631dc
  423672:	mov    ecx,ebx
  423674:	call   0x424be7
  423679:	mov    eax,ds:0x4631dc
  42367e:	add    DWORD PTR ds:0x45f830,eax
  423684:	and    DWORD PTR ds:0x44f588,0x0
  42368b:	pop    edi
  42368c:	pop    esi
  42368d:	pop    ebx
  42368e:	ret    
  42368f:	push   ebp
  423690:	mov    ebp,esp
  423692:	and    esp,0xfffffff8
  423695:	sub    esp,0xc
  423698:	push   ebx
  423699:	push   esi
  42369a:	push   edi
  42369b:	mov    edi,ecx
  42369d:	cmp    DWORD PTR [edi+0x7],0x0
  4236a1:	jne    0x4236d7
  4236a3:	xor    ebx,ebx
  4236a5:	inc    ebx
  4236a6:	mov    esi,ebx
  4236a8:	call   0x428f71
  4236ad:	cmp    si,bx
  4236b0:	jne    0x4236b7
  4236b2:	cmp    BYTE PTR [eax],0x4e
  4236b5:	je     0x4236cb
  4236b7:	mov    cl,BYTE PTR [eax]
  4236b9:	cmp    cl,0x53
  4236bc:	jne    0x4236c1
  4236be:	inc    esi
  4236bf:	jmp    0x4236c7
  4236c1:	cmp    cl,0x4e
  4236c4:	jne    0x4236c7
  4236c6:	dec    esi
  4236c7:	mov    ecx,eax
  4236c9:	jmp    0x4236a8
  4236cb:	mov    ds:0x45f844,eax
  4236d0:	xor    al,al
  4236d2:	jmp    0x42383f
  4236d7:	cmp    BYTE PTR [edi+0x16],0x1
  4236db:	je     0x4236e1
  4236dd:	mov    BYTE PTR [edi+0x16],0x0
  4236e1:	cmp    BYTE PTR [edi+0x16],0x0
  4236e5:	jne    0x4236f2
  4236e7:	movzx  eax,BYTE PTR [edi]
  4236ea:	push   edi
  4236eb:	call   DWORD PTR [eax*4+0x448d98]
  4236f2:	xor    eax,eax
  4236f4:	xor    ebx,ebx
  4236f6:	mov    DWORD PTR [esp+0x10],eax
  4236fa:	mov    eax,DWORD PTR [edi+0x7]
  4236fd:	inc    ebx
  4236fe:	jmp    0x423831
  423703:	mov    ecx,edi
  423705:	call   0x428f71
  42370a:	mov    edx,DWORD PTR [esp+0x10]
  42370e:	mov    esi,eax
  423710:	mov    DWORD PTR [esp+0xc],esi
  423714:	test   esi,esi
  423716:	jne    0x423724
  423718:	mov    esi,edx
  42371a:	xor    eax,eax
  42371c:	mov    DWORD PTR [esp+0xc],esi
  423720:	mov    DWORD PTR [esp+0x10],eax
  423724:	mov    cl,BYTE PTR [esi]
  423726:	mov    al,cl
  423728:	cmp    al,0x4e
  42372a:	je     0x423809
  423730:	cmp    al,0x53
  423732:	je     0x4237f1
  423738:	cmp    cl,0x61
  42373b:	jb     0x423746
  42373d:	cmp    cl,0x62
  423740:	jne    0x423802
  423746:	cmp    cl,0x50
  423749:	jne    0x42375d
  42374b:	mov    ecx,esi
  42374d:	call   0x428f71
  423752:	mov    esi,DWORD PTR [esi+0x7]
  423755:	mov    edx,eax
  423757:	mov    DWORD PTR [esp+0x10],edx
  42375b:	jmp    0x423710
  42375d:	cmp    cl,0x1b
  423760:	je     0x42379d
  423762:	cmp    cl,0x57
  423765:	je     0x423795
  423767:	cmp    cl,0x62
  42376a:	je     0x42377b
  42376c:	push   esi
  42376d:	call   0x423037
  423772:	mov    BYTE PTR ds:0x45f693,0x0
  423779:	jmp    0x4237c8
  42377b:	mov    eax,DWORD PTR [esi+0x3]
  42377e:	push   ebx
  42377f:	mov    ecx,DWORD PTR [eax+0x24]
  423782:	push   eax
  423783:	add    ecx,0x4
  423786:	lea    edx,[esp+0x14]
  42378a:	call   0x4230e6
  42378f:	mov    esi,DWORD PTR [esp+0xc]
  423793:	jmp    0x4237c8
  423795:	push   esi
  423796:	call   0x423579
  42379b:	jmp    0x4237c8
  42379d:	movzx  eax,BYTE PTR [edi+0x3]
  4237a1:	mov    ds:0x4631dc,eax
  4237a6:	mov    eax,ds:0x46339c
  4237ab:	test   al,0x1
  4237ad:	jne    0x4237be
  4237af:	or     eax,ebx
  4237b1:	mov    ds:0x46339c,eax
  4237b6:	mov    al,BYTE PTR [edi+0xb]
  4237b9:	mov    ds:0x44dad7,al
  4237be:	push   0x44dad4
  4237c3:	call   0x42307d
  4237c8:	cmp    BYTE PTR [edi+0x16],0x0
  4237cc:	jne    0x423802
  4237ce:	cmp    BYTE PTR ds:0x44e00b,0x0
  4237d5:	je     0x423802
  4237d7:	mov    cl,BYTE PTR [esi]
  4237d9:	movzx  eax,cl
  4237dc:	mov    eax,DWORD PTR [eax*4+0x448d98]
  4237e3:	test   eax,eax
  4237e5:	je     0x423802
  4237e7:	cmp    cl,0x61
  4237ea:	jae    0x423802
  4237ec:	push   esi
  4237ed:	call   eax
  4237ef:	jmp    0x423802
  4237f1:	mov    ecx,esi
  4237f3:	call   0x42368f
  4237f8:	test   al,al
  4237fa:	je     0x423802
  4237fc:	mov    esi,DWORD PTR ds:0x45f844
  423802:	mov    ecx,esi
  423804:	jmp    0x423705
  423809:	cmp    BYTE PTR ds:0x44e00b,0x0
  423810:	je     0x423826
  423812:	cmp    BYTE PTR [edi+0x16],0x0
  423816:	jne    0x423826
  423818:	movzx  eax,BYTE PTR [esi]
  42381b:	push   esi
  42381c:	call   DWORD PTR [eax*4+0x448d98]
  423823:	mov    BYTE PTR [edi+0x16],bl
  423826:	mov    eax,DWORD PTR [esp+0x14]
  42382a:	mov    DWORD PTR ds:0x45f844,esi
  423830:	dec    eax
  423831:	mov    DWORD PTR [esp+0x14],eax
  423835:	test   eax,eax
  423837:	jg     0x423703
  42383d:	mov    al,bl
  42383f:	pop    edi
  423840:	pop    esi
  423841:	pop    ebx
  423842:	mov    esp,ebp
  423844:	pop    ebp
  423845:	ret    
  423846:	push   ebp
  423847:	mov    ebp,esp
  423849:	mov    ecx,DWORD PTR [ebp+0x8]
  42384c:	call   0x42368f
  423851:	pop    ebp
  423852:	ret    0x4
  423855:	push   ebp
  423856:	mov    ebp,esp
  423858:	sub    esp,0x10
  42385b:	mov    eax,ecx
  42385d:	push   ebx
  42385e:	mov    ebx,DWORD PTR [eax+0x2]
  423861:	push   esi
  423862:	mov    esi,DWORD PTR ds:0x4631dc
  423868:	mov    DWORD PTR [ebp-0x10],eax
  42386b:	test   ebx,ebx
  42386d:	je     0x42396d
  423873:	movzx  eax,BYTE PTR [eax+0x1]
  423877:	and    eax,0xf
  42387a:	add    eax,DWORD PTR ds:0x45f830
  423880:	push   edi
  423881:	mov    DWORD PTR [ebp-0x8],eax
  423884:	mov    al,BYTE PTR [ebx+0x6]
  423887:	xor    edi,edi
  423889:	test   al,al
  42388b:	je     0x4238e2
  42388d:	cmp    al,0x2
  42388f:	jbe    0x4238dd
  423891:	cmp    al,0x3
  423893:	je     0x4238d1
  423895:	cmp    al,0x8
  423897:	je     0x4238d1
  423899:	cmp    al,0x10
  42389b:	jne    0x4238e2
  42389d:	movzx  eax,WORD PTR [ebx+0x1a]
  4238a1:	mov    ecx,DWORD PTR ds:0x44e03c
  4238a7:	movsx  edx,ax
  4238aa:	call   0x424f0c
  4238af:	mov    DWORD PTR [ebp-0xc],eax
  4238b2:	test   eax,eax
  4238b4:	jne    0x4238ca
  4238b6:	push   0x4a2
  4238bb:	push   0x41e510
  4238c0:	push   edi
  4238c1:	call   DWORD PTR ds:0x44e04c
  4238c7:	mov    eax,DWORD PTR [ebp-0xc]
  4238ca:	mov    eax,DWORD PTR [eax]
  4238cc:	mov    ecx,DWORD PTR [eax+0x8]
  4238cf:	jmp    0x4238e4
  4238d1:	cmp    DWORD PTR [ebx+0xc],edi
  4238d4:	jne    0x4238dd
  4238d6:	mov    ecx,ebx
  4238d8:	call   0x423a2a
  4238dd:	mov    ecx,DWORD PTR [ebx+0xc]
  4238e0:	jmp    0x4238e4
  4238e2:	mov    ecx,edi
  4238e4:	mov    edx,DWORD PTR [ebp-0x10]
  4238e7:	mov    al,BYTE PTR [edx]
  4238e9:	mov    BYTE PTR [ebp-0x1],al
  4238ec:	movzx  eax,al
  4238ef:	and    eax,0xf
  4238f2:	dec    eax
  4238f3:	je     0x42391f
  4238f5:	dec    eax
  4238f6:	je     0x42391b
  4238f8:	dec    eax
  4238f9:	je     0x423917
  4238fb:	dec    eax
  4238fc:	je     0x423913
  4238fe:	cmp    BYTE PTR [ebx+0x6],0x1
  423902:	je     0x42396c
  423904:	push   edi
  423905:	xor    edx,edx
  423907:	mov    ecx,0x7d4
  42390c:	call   0x42ee80
  423911:	jmp    0x42396c
  423913:	push   0xb
  423915:	jmp    0x423960
  423917:	push   0x3
  423919:	jmp    0x423960
  42391b:	push   0x1
  42391d:	jmp    0x423960
  42391f:	test   BYTE PTR [ebp-0x1],0x10
  423923:	je     0x42395c
  423925:	movzx  eax,BYTE PTR [edx+0x1]
  423929:	and    eax,0xf
  42392c:	sub    esi,eax
  42392e:	sub    esi,0x4
  423931:	sub    esi,edi
  423933:	je     0x423958
  423935:	dec    esi
  423936:	je     0x423954
  423938:	dec    esi
  423939:	je     0x423950
  42393b:	dec    esi
  42393c:	je     0x42394c
  42393e:	dec    esi
  42393f:	je     0x423948
  423941:	dec    esi
  423942:	jne    0x42395f
  423944:	push   0x9
  423946:	jmp    0x42395e
  423948:	push   0x8
  42394a:	jmp    0x42395e
  42394c:	push   0x7
  42394e:	jmp    0x42395e
  423950:	push   0x6
  423952:	jmp    0x42395e
  423954:	push   0x5
  423956:	jmp    0x42395e
  423958:	push   0x4
  42395a:	jmp    0x42395e
  42395c:	push   0x2
  42395e:	pop    edi
  42395f:	push   edi
  423960:	mov    edx,DWORD PTR [ebp-0x8]
  423963:	push   ecx
  423964:	mov    ecx,DWORD PTR [ebx+0x10]
  423967:	call   0x424304
  42396c:	pop    edi
  42396d:	pop    esi
  42396e:	pop    ebx
  42396f:	leave  
  423970:	ret    
  423971:	mov    ecx,DWORD PTR ds:0x45f834
  423977:	test   BYTE PTR [ecx+0x8],0x8
  42397b:	jne    0x4239a0
  42397d:	test   BYTE PTR [ecx+0x7],0x80
  423981:	jne    0x42399c
  423983:	movzx  eax,BYTE PTR [ecx+0x5]
  423987:	sub    ecx,eax
  423989:	mov    edx,ecx
  42398b:	push   eax
  42398c:	mov    ecx,0xfac
  423991:	call   0x42f15d
  423996:	mov    ecx,DWORD PTR ds:0x45f834
  42399c:	or     BYTE PTR [ecx+0x8],0x8
  4239a0:	mov    eax,ds:0x448894
  4239a5:	push   esi
  4239a6:	mov    esi,DWORD PTR [eax+0x20]
  4239a9:	cmp    esi,DWORD PTR ds:0x45f840
  4239af:	je     0x4239be
  4239b1:	mov    ecx,esi
  4239b3:	call   0x42db29
  4239b8:	mov    DWORD PTR ds:0x45f840,esi
  4239be:	pop    esi
  4239bf:	ret    
  4239c0:	push   ebp
  4239c1:	mov    ebp,esp
  4239c3:	push   ecx
  4239c4:	mov    al,BYTE PTR [ecx+0x7]
  4239c7:	push   ebx
  4239c8:	push   esi
  4239c9:	and    al,0xc
  4239cb:	xor    ebx,ebx
  4239cd:	push   edi
  4239ce:	movzx  edi,BYTE PTR [ecx+0x5]
  4239d2:	mov    esi,0x4631e0
  4239d7:	cmp    al,0x4
  4239d9:	jne    0x4239e8
  4239db:	inc    ebx
  4239dc:	mov    BYTE PTR ds:0x4631e0,0x5f
  4239e3:	mov    esi,0x4631e1
  4239e8:	test   edi,edi
  4239ea:	jne    0x423a0a
  4239ec:	push   DWORD PTR [ecx+0x1c]
  4239ef:	mov    eax,0x4632e0
  4239f4:	push   0x41e4f0
  4239f9:	sub    eax,esi
  4239fb:	push   eax
  4239fc:	push   esi
  4239fd:	call   DWORD PTR ds:0x464484
  423a03:	add    esp,0x10
  423a06:	add    esi,eax
  423a08:	jmp    0x423a1d
  423a0a:	movzx  eax,BYTE PTR [ecx+0x5]
  423a0e:	push   edi
  423a0f:	sub    ecx,eax
  423a11:	push   ecx
  423a12:	push   esi
  423a13:	call   0x447646
  423a18:	add    esp,0xc
  423a1b:	add    esi,edi
  423a1d:	lea    eax,[ebx+edi*1]
  423a20:	pop    edi
  423a21:	mov    BYTE PTR [esi],0x0
  423a24:	pop    esi
  423a25:	pop    ebx
  423a26:	leave  
  423a27:	ret    0x4
  423a2a:	push   ebp
  423a2b:	mov    ebp,esp
  423a2d:	push   ecx
  423a2e:	push   ebx
  423a2f:	push   esi
  423a30:	mov    esi,ecx
  423a32:	xor    ebx,ebx
  423a34:	mov    al,BYTE PTR [esi+0x8]
  423a37:	inc    ebx
  423a38:	test   bl,al
  423a3a:	jne    0x423b8b
  423a40:	or     al,bl
  423a42:	mov    BYTE PTR [esi+0x8],al
  423a45:	movzx  eax,BYTE PTR [esi+0x6]
  423a49:	push   edi
  423a4a:	dec    eax
  423a4b:	je     0x423af5
  423a51:	dec    eax
  423a52:	je     0x423ae1
  423a58:	dec    eax
  423a59:	je     0x423ab7
  423a5b:	sub    eax,0x5
  423a5e:	jne    0x423b86
  423a64:	mov    cl,BYTE PTR [esi+0x7]
  423a67:	test   cl,0x2
  423a6a:	je     0x423a7e
  423a6c:	movzx  ebx,WORD PTR ds:0x44e008
  423a73:	mov    BYTE PTR [ebp-0x4],0x2
  423a77:	xor    edi,edi
  423a79:	jmp    0x423b5f
  423a7e:	mov    edx,DWORD PTR [esi+0x2c]
  423a81:	not    cl
  423a83:	and    cl,bl
  423a85:	or     cl,0x2
  423a88:	or     ebx,0xffffffff
  423a8b:	mov    BYTE PTR [ebp-0x4],cl
  423a8e:	test   edx,edx
  423a90:	je     0x423aaf
  423a92:	cmp    edx,ebx
  423a94:	je     0x423aaf
  423a96:	mov    edi,DWORD PTR [edx+0x10]
  423a99:	test   edi,edi
  423a9b:	je     0x423aaf
  423a9d:	mov    eax,DWORD PTR [edi+0x20]
  423aa0:	mov    edi,DWORD PTR [edi+0x1c]
  423aa3:	movzx  ebx,WORD PTR [eax+0x1a]
  423aa7:	add    edi,DWORD PTR [edx+0x8]
  423aaa:	jmp    0x423b5b
  423aaf:	mov    edi,DWORD PTR [esi+0x20]
  423ab2:	jmp    0x423b5b
  423ab7:	mov    al,BYTE PTR [esi+0x7]
  423aba:	test   al,0x2
  423abc:	jne    0x423a6c
  423abe:	test   bl,al
  423ac0:	je     0x423ac6
  423ac2:	mov    cl,0x2
  423ac4:	jmp    0x423ad5
  423ac6:	mov    cl,BYTE PTR [esi+0x2c]
  423ac9:	and    cl,bl
  423acb:	neg    cl
  423acd:	sbb    cl,cl
  423acf:	and    cl,0x3
  423ad2:	add    cl,0x3
  423ad5:	mov    eax,DWORD PTR [esi+0x20]
  423ad8:	mov    edi,DWORD PTR [esi+0x1c]
  423adb:	movzx  ebx,WORD PTR [eax+0x1a]
  423adf:	jmp    0x423b58
  423ae1:	mov    edi,DWORD PTR [esi+0x34]
  423ae4:	movzx  ebx,WORD PTR ds:0x44e008
  423aeb:	imul   edi,DWORD PTR [esi+0x28]
  423aef:	mov    BYTE PTR [ebp-0x4],0x2
  423af3:	jmp    0x423b5f
  423af5:	test   BYTE PTR [esi+0x7],0x2
  423af9:	jne    0x423a6c
  423aff:	test   BYTE PTR [esi+0x2c],0x20
  423b03:	je     0x423b1c
  423b05:	push   ecx
  423b06:	call   0x4239c0
  423b0b:	push   ecx
  423b0c:	push   ecx
  423b0d:	mov    edx,0x4631e0
  423b12:	mov    ecx,0x40114c
  423b17:	call   0x422b13
  423b1c:	mov    al,BYTE PTR [esi+0x7]
  423b1f:	mov    edi,DWORD PTR [esi+0x1c]
  423b22:	not    al
  423b24:	and    al,bl
  423b26:	or     al,0x2
  423b28:	mov    BYTE PTR [ebp-0x4],al
  423b2b:	mov    eax,DWORD PTR [esi+0x20]
  423b2e:	push   ecx
  423b2f:	movzx  ebx,WORD PTR [eax+0x1a]
  423b33:	mov    ecx,esi
  423b35:	call   0x4239c0
  423b3a:	xor    eax,eax
  423b3c:	cmp    BYTE PTR [esi+0x6],0x1
  423b40:	jne    0x423b45
  423b42:	push   0x20
  423b44:	pop    eax
  423b45:	mov    ecx,DWORD PTR [esi+0x10]
  423b48:	push   eax
  423b49:	push   edi
  423b4a:	push   DWORD PTR [ebp-0x4]
  423b4d:	push   ebx
  423b4e:	call   0x42429f
  423b53:	mov    DWORD PTR [esi+0xc],eax
  423b56:	xor    cl,cl
  423b58:	mov    BYTE PTR [ebp-0x4],cl
  423b5b:	test   cl,cl
  423b5d:	je     0x423b86
  423b5f:	push   ecx
  423b60:	mov    ecx,esi
  423b62:	call   0x4239c0
  423b67:	xor    eax,eax
  423b69:	cmp    BYTE PTR [esi+0x6],0x1
  423b6d:	jne    0x423b72
  423b6f:	push   0x20
  423b71:	pop    eax
  423b72:	push   eax
  423b73:	push   edi
  423b74:	push   DWORD PTR [ebp-0x4]
  423b77:	mov    edx,ebx
  423b79:	mov    ecx,0x4631e0
  423b7e:	call   0x4241f4
  423b83:	mov    DWORD PTR [esi+0xc],eax
  423b86:	and    DWORD PTR [esi+0x10],0x0
  423b8a:	pop    edi
  423b8b:	pop    esi
  423b8c:	pop    ebx
  423b8d:	leave  
  423b8e:	ret    
  423b8f:	push   ebp
  423b90:	mov    ebp,esp
  423b92:	sub    esp,0xc
  423b95:	push   ebx
  423b96:	mov    ebx,ecx
  423b98:	push   esi
  423b99:	cmp    BYTE PTR [ebx+0x6],0x8
  423b9d:	push   edi
  423b9e:	mov    DWORD PTR [ebp-0xc],ebx
  423ba1:	jne    0x423ba8
  423ba3:	mov    esi,DWORD PTR [ebx+0x28]
  423ba6:	jmp    0x423bab
  423ba8:	mov    esi,DWORD PTR [ebx+0x30]
  423bab:	test   BYTE PTR [esi+0x7],0x3
  423baf:	jne    0x423bc4
  423bb1:	movzx  eax,BYTE PTR [esi+0x5]
  423bb5:	mov    edx,esi
  423bb7:	push   eax
  423bb8:	sub    edx,eax
  423bba:	mov    ecx,0x8a9
  423bbf:	call   0x42f15d
  423bc4:	mov    ecx,esi
  423bc6:	call   0x423a2a
  423bcb:	push   ecx
  423bcc:	mov    ecx,ebx
  423bce:	call   0x4239c0
  423bd3:	mov    al,BYTE PTR [ebx+0x8]
  423bd6:	and    al,0x4
  423bd8:	mov    BYTE PTR [ebp-0x1],al
  423bdb:	je     0x423be8
  423bdd:	mov    eax,DWORD PTR [ebx+0x28]
  423be0:	mov    ecx,DWORD PTR [eax+0x1c]
  423be3:	mov    al,BYTE PTR [ebp-0x1]
  423be6:	jmp    0x423beb
  423be8:	mov    ecx,DWORD PTR [ebx+0x1c]
  423beb:	xor    edx,edx
  423bed:	cmp    BYTE PTR [ebx+0x6],0x1
  423bf1:	jne    0x423bf6
  423bf3:	push   0x20
  423bf5:	pop    edx
  423bf6:	or     al,0x8
  423bf8:	push   edx
  423bf9:	mov    edx,DWORD PTR ds:0x44e008
  423bff:	shr    al,0x2
  423c02:	push   ecx
  423c03:	mov    BYTE PTR [ebp-0x1],al
  423c06:	mov    eax,DWORD PTR [esi+0xc]
  423c09:	push   0x69
  423c0b:	mov    ecx,0x4631e0
  423c10:	mov    DWORD PTR [ebp-0x8],eax
  423c13:	call   0x4241f4
  423c18:	mov    ecx,DWORD PTR ds:0x44e034
  423c1e:	mov    ebx,eax
  423c20:	lea    edx,[ebx+0x1]
  423c23:	call   0x424f0c
  423c28:	mov    ecx,DWORD PTR [eax+0x4]
  423c2b:	push   0x8
  423c2d:	inc    BYTE PTR [ecx+0x11]
  423c30:	call   DWORD PTR ds:0x44e050
  423c36:	mov    esi,eax
  423c38:	push   0x12
  423c3a:	mov    DWORD PTR [esi],0x4
  423c40:	call   DWORD PTR ds:0x44e050
  423c46:	mov    ecx,DWORD PTR ds:0x44e034
  423c4c:	mov    edi,eax
  423c4e:	mov    edx,esi
  423c50:	mov    DWORD PTR [esi+0x4],edi
  423c53:	call   0x424ec8
  423c58:	movzx  ecx,BYTE PTR [ebp-0x1]
  423c5c:	mov    eax,DWORD PTR [ebp-0x8]
  423c5f:	mov    DWORD PTR [edi],eax
  423c61:	mov    eax,DWORD PTR [ebp-0xc]
  423c64:	mov    DWORD PTR [edi+0x4],ecx
  423c67:	or     BYTE PTR [eax+0x8],0x1
  423c6b:	and    DWORD PTR [eax+0x10],0x0
  423c6f:	pop    edi
  423c70:	pop    esi
  423c71:	mov    DWORD PTR [eax+0xc],ebx
  423c74:	pop    ebx
  423c75:	leave  
  423c76:	ret    
  423c77:	push   ebp
  423c78:	mov    ebp,esp
  423c7a:	mov    ecx,DWORD PTR [ebp+0x8]
  423c7d:	test   BYTE PTR [ecx+0x8],0x2
  423c81:	jne    0x423cba
  423c83:	mov    dl,BYTE PTR [ecx+0x7]
  423c86:	test   dl,0x1
  423c89:	jne    0x423cba
  423c8b:	mov    al,BYTE PTR [ecx+0x6]
  423c8e:	cmp    al,0x1
  423c90:	jne    0x423ca4
  423c92:	cmp    BYTE PTR ds:0x44e042,0x0
  423c99:	jne    0x423cba
  423c9b:	cmp    BYTE PTR ds:0x44e02f,0x0
  423ca2:	jne    0x423cba
  423ca4:	cmp    BYTE PTR ds:0x44e02e,0x0
  423cab:	je     0x423cd0
  423cad:	cmp    al,0x3
  423caf:	je     0x423cb5
  423cb1:	cmp    al,0x1
  423cb3:	jne    0x423cd0
  423cb5:	test   dl,0x2
  423cb8:	jne    0x423cd0
  423cba:	mov    al,BYTE PTR [ecx+0x6]
  423cbd:	cmp    al,0x3
  423cbf:	jne    0x423cc7
  423cc1:	test   BYTE PTR [ecx+0x2c],0x8
  423cc5:	jne    0x423cd0
  423cc7:	cmp    al,0x1
  423cc9:	je     0x423cd0
  423ccb:	call   0x423a2a
  423cd0:	pop    ebp
  423cd1:	ret    0x4
  423cd4:	push   ebx
  423cd5:	xor    ebx,ebx
  423cd7:	push   esi
  423cd8:	mov    esi,ecx
  423cda:	inc    ebx
  423cdb:	cmp    WORD PTR [esi],bx
  423cde:	je     0x423ce7
  423ce0:	xor    eax,eax
  423ce2:	jmp    0x423dc1
  423ce7:	mov    ax,WORD PTR [esi+0x2]
  423ceb:	mov    ds:0x44e058,ax
  423cf1:	mov    eax,DWORD PTR [esi+0x8]
  423cf4:	mov    ds:0x44e05c,eax
  423cf9:	mov    eax,DWORD PTR [esi+0x4]
  423cfc:	mov    ds:0x44e054,eax
  423d01:	mov    eax,DWORD PTR [esi+0xc]
  423d04:	mov    ds:0x44e050,eax
  423d09:	mov    eax,DWORD PTR [esi+0x10]
  423d0c:	mov    ds:0x44e04c,eax
  423d11:	mov    eax,DWORD PTR [esi+0x14]
  423d14:	mov    ds:0x44e048,eax
  423d19:	mov    al,BYTE PTR [esi+0x1c]
  423d1c:	push   edi
  423d1d:	mov    ds:0x44deff,al
  423d22:	call   0x424e89
  423d27:	mov    ds:0x44e03c,eax
  423d2c:	call   0x424e89
  423d31:	mov    ds:0x44e038,eax
  423d36:	call   0x424e89
  423d3b:	xor    edi,edi
  423d3d:	mov    ds:0x44e034,eax
  423d42:	cmp    DWORD PTR [esi+0x18],edi
  423d45:	je     0x423d5a
  423d47:	push   edi
  423d48:	push   DWORD PTR [esi+0x18]
  423d4b:	or     edx,0xffffffff
  423d4e:	push   0x3
  423d50:	mov    ecx,0x41e4f8
  423d55:	call   0x4241f4
  423d5a:	push   edi
  423d5b:	push   0x10
  423d5d:	push   0x3
  423d5f:	or     edx,0xffffffff
  423d62:	mov    ecx,0x41e504
  423d67:	call   0x4241f4
  423d6c:	xor    eax,eax
  423d6e:	mov    ds:0x44e044,ax
  423d74:	mov    ds:0x44e040,ax
  423d7a:	mov    ax,ds:0x44df04
  423d80:	xor    edx,edx
  423d82:	mov    ecx,ebx
  423d84:	mov    ds:0x44e02c,ax
  423d8a:	mov    DWORD PTR ds:0x44e030,edi
  423d90:	mov    DWORD PTR ds:0x448864,ebx
  423d96:	mov    DWORD PTR ds:0x44e020,edi
  423d9c:	mov    DWORD PTR ds:0x44e01c,edi
  423da2:	mov    DWORD PTR ds:0x44e018,edi
  423da8:	mov    DWORD PTR ds:0x44e010,edi
  423dae:	mov    DWORD PTR ds:0x44e00c,edi
  423db4:	call   0x424964
  423db9:	mov    ds:0x44e01c,eax
  423dbe:	mov    eax,ebx
  423dc0:	pop    edi
  423dc1:	pop    esi
  423dc2:	pop    ebx
  423dc3:	ret    
  423dc4:	push   ebp
  423dc5:	mov    ebp,esp
  423dc7:	and    esp,0xfffffff8
  423dca:	sub    esp,0x1c
  423dcd:	mov    eax,ds:0x448858
  423dd2:	xor    eax,esp
  423dd4:	mov    DWORD PTR [esp+0x18],eax
  423dd8:	push   ebx
  423dd9:	push   esi
  423dda:	push   edi
  423ddb:	push   0x20
  423ddd:	mov    esi,0x44e060
  423de2:	pop    edi
  423de3:	xor    ebx,ebx
  423de5:	cmp    DWORD PTR [esi],ebx
  423de7:	je     0x423dfa
  423de9:	push   0x271
  423dee:	push   0x41e510
  423df3:	push   ebx
  423df4:	call   DWORD PTR ds:0x44e04c
  423dfa:	add    esi,0x4
  423dfd:	dec    edi
  423dfe:	jne    0x423de5
  423e00:	mov    ax,ds:0x44e044
  423e06:	mov    edi,DWORD PTR ds:0x464394
  423e0c:	test   ax,ax
  423e0f:	jne    0x423e3b
  423e11:	mov    eax,ds:0x44e038
  423e16:	push   ebx
  423e17:	mov    ax,WORD PTR [eax]
  423e1a:	mov    ds:0x44e044,ax
  423e20:	movzx  eax,ax
  423e23:	imul   eax,eax,0x28
  423e26:	add    eax,0x14
  423e29:	push   eax
  423e2a:	push   DWORD PTR ds:0x44e05c
  423e30:	call   edi
  423e32:	mov    ax,ds:0x44e044
  423e38:	add    esp,0xc
  423e3b:	movzx  eax,ax
  423e3e:	imul   eax,eax,0x28
  423e41:	push   ebx
  423e42:	add    eax,0x14
  423e45:	push   eax
  423e46:	push   DWORD PTR ds:0x44e05c
  423e4c:	call   edi
  423e4e:	add    esp,0xc
  423e51:	jmp    0x423e7c
  423e53:	movzx  eax,WORD PTR [esi+0x12]
  423e57:	test   al,0x1
  423e59:	je     0x423e82
  423e5b:	test   al,0x4
  423e5d:	jne    0x423e82
  423e5f:	test   al,0x2
  423e61:	je     0x423e75
  423e63:	push   0x28e
  423e68:	push   0x41e510
  423e6d:	push   0x0
  423e6f:	call   DWORD PTR ds:0x44e04c
  423e75:	mov    ecx,esi
  423e77:	call   0x42444e
  423e7c:	mov    ebx,DWORD PTR ds:0x44e03c
  423e82:	mov    ecx,ebx
  423e84:	call   0x424f60
  423e89:	mov    esi,eax
  423e8b:	test   esi,esi
  423e8d:	jne    0x423e53
  423e8f:	mov    ax,ds:0x44e058
  423e95:	mov    WORD PTR [esp+0x10],ax
  423e9a:	mov    eax,ds:0x44e038
  423e9f:	mov    ax,WORD PTR [eax]
  423ea2:	mov    WORD PTR [esp+0x12],ax
  423ea7:	call   DWORD PTR ds:0x44e048
  423ead:	push   DWORD PTR ds:0x44e05c
  423eb3:	mov    ebx,DWORD PTR ds:0x464344
  423eb9:	mov    DWORD PTR [esp+0x18],eax
  423ebd:	xor    eax,eax
  423ebf:	mov    DWORD PTR [esp+0x24],eax
  423ec3:	mov    eax,ds:0x44e034
  423ec8:	mov    eax,DWORD PTR [eax]
  423eca:	mov    DWORD PTR [esp+0x20],eax
  423ece:	call   ebx
  423ed0:	mov    esi,DWORD PTR ds:0x464348
  423ed6:	pop    ecx
  423ed7:	mov    DWORD PTR [esp+0x18],eax
  423edb:	test   al,0x1
  423edd:	je     0x423f15
  423edf:	push   0x1
  423ee1:	push   0x44df06
  423ee6:	push   DWORD PTR ds:0x44e05c
  423eec:	call   esi
  423eee:	add    esp,0xc
  423ef1:	cmp    eax,0x1
  423ef4:	je     0x423f08
  423ef6:	push   0x2a0
  423efb:	push   0x41e510
  423f00:	push   0xe
  423f02:	call   DWORD PTR ds:0x44e04c
  423f08:	inc    DWORD PTR [esp+0x18]
  423f0c:	jmp    0x423f15
  423f0e:	mov    ecx,eax
  423f10:	call   0x424534
  423f15:	mov    ecx,DWORD PTR ds:0x44e034
  423f1b:	call   0x424f60
  423f20:	test   eax,eax
  423f22:	jne    0x423f0e
  423f24:	push   eax
  423f25:	push   eax
  423f26:	push   DWORD PTR ds:0x44e05c
  423f2c:	call   edi
  423f2e:	add    esp,0xc
  423f31:	lea    eax,[esp+0x10]
  423f35:	push   0x14
  423f37:	push   eax
  423f38:	push   DWORD PTR ds:0x44e05c
  423f3e:	call   esi
  423f40:	add    esp,0xc
  423f43:	cmp    eax,0x14
  423f46:	je     0x423f5a
  423f48:	push   0x2b2
  423f4d:	push   0x41e510
  423f52:	push   0xe
  423f54:	call   DWORD PTR ds:0x44e04c
  423f5a:	push   DWORD PTR ds:0x44e05c
  423f60:	call   DWORD PTR ds:0x46434c
  423f66:	pop    ecx
  423f67:	test   eax,eax
  423f69:	jne    0x423f94
  423f6b:	push   DWORD PTR ds:0x44e05c
  423f71:	call   ebx
  423f73:	pop    ecx
  423f74:	cmp    eax,0x14
  423f77:	je     0x423f94
  423f79:	push   0x2b6
  423f7e:	push   0x41e510
  423f83:	push   0x0
  423f85:	call   DWORD PTR ds:0x44e04c
  423f8b:	jmp    0x423f94
  423f8d:	mov    ecx,eax
  423f8f:	call   0x42479c
  423f94:	mov    ecx,DWORD PTR ds:0x44e038
  423f9a:	call   0x424f60
  423f9f:	test   eax,eax
  423fa1:	jne    0x423f8d
  423fa3:	push   0x2
  423fa5:	push   eax
  423fa6:	push   DWORD PTR ds:0x44e05c
  423fac:	call   edi
  423fae:	mov    eax,ds:0x44e01c
  423fb3:	add    esp,0xc
  423fb6:	mov    ecx,DWORD PTR [eax+0x10]
  423fb9:	mov    eax,DWORD PTR [eax+0x8]
  423fbc:	add    eax,0x4
  423fbf:	add    eax,ecx
  423fc1:	mov    DWORD PTR [esp+0xc],eax
  423fc5:	push   0x4
  423fc7:	lea    eax,[esp+0x10]
  423fcb:	push   eax
  423fcc:	push   DWORD PTR ds:0x44e05c
  423fd2:	call   esi
  423fd4:	add    esp,0xc
  423fd7:	cmp    eax,0x4
  423fda:	je     0x423fee
  423fdc:	push   0x2c6
  423fe1:	push   0x41e510
  423fe6:	push   0xe
  423fe8:	call   DWORD PTR ds:0x44e04c
  423fee:	mov    ecx,DWORD PTR ds:0x44e01c
  423ff4:	call   0x424cf4
  423ff9:	cmp    DWORD PTR ds:0x44e014,0x0
  424000:	je     0x42401c
  424002:	push   0x2
  424004:	push   0x0
  424006:	push   DWORD PTR ds:0x44e05c
  42400c:	call   edi
  42400e:	mov    ecx,DWORD PTR ds:0x44e014
  424014:	add    esp,0xc
  424017:	call   0x424cf4
  42401c:	mov    ecx,DWORD PTR [esp+0x24]
  424020:	pop    edi
  424021:	pop    esi
  424022:	pop    ebx
  424023:	xor    ecx,esp
  424025:	call   0x446dc7
  42402a:	mov    esp,ebp
  42402c:	pop    ebp
  42402d:	ret    
  42402e:	push   ebx
  42402f:	push   esi
  424030:	push   edi
  424031:	push   0x18
  424033:	mov    esi,edx
  424035:	mov    ebx,ecx
  424037:	call   DWORD PTR ds:0x44e050
  42403d:	mov    ecx,DWORD PTR ds:0x44e03c
  424043:	mov    edi,eax
  424045:	mov    edx,edi
  424047:	or     WORD PTR [edi+0x12],0x8
  42404c:	mov    DWORD PTR [edi+0x8],esi
  42404f:	call   0x424ec8
  424054:	movzx  eax,ax
  424057:	mov    DWORD PTR [edi+0x4],ebx
  42405a:	mov    WORD PTR [edi+0x10],ax
  42405e:	pop    edi
  42405f:	pop    esi
  424060:	pop    ebx
  424061:	ret    0x4
  424064:	push   ebp
  424065:	mov    ebp,esp
  424067:	push   ecx
  424068:	mov    DWORD PTR [ebp-0x4],edx
  42406b:	movsx  edx,cx
  42406e:	mov    ecx,DWORD PTR ds:0x44e03c
  424074:	push   esi
  424075:	call   0x424f0c
  42407a:	mov    esi,eax
  42407c:	test   esi,esi
  42407e:	jne    0x42408a
  424080:	push   0x323
  424085:	jmp    0x424182
  42408a:	movzx  eax,WORD PTR [esi+0x12]
  42408e:	test   al,0x2
  424090:	jne    0x42417d
  424096:	test   al,0x1
  424098:	je     0x4240b5
  42409a:	test   DWORD PTR [esi+0x8],0x1000
  4240a1:	jne    0x42417d
  4240a7:	cmp    WORD PTR ds:0x44e044,0x0
  4240af:	jne    0x42417d
  4240b5:	xor    ecx,ecx
  4240b7:	push   0x3
  4240b9:	pop    eax
  4240ba:	inc    ecx
  4240bb:	cmp    DWORD PTR ds:0x448864,eax
  4240c1:	mov    ax,ds:0x44e040
  4240c7:	jne    0x4240d2
  4240c9:	cmp    ax,cx
  4240cc:	jae    0x42417d
  4240d2:	push   ebx
  4240d3:	mov    ebx,DWORD PTR [esi]
  4240d5:	test   ebx,ebx
  4240d7:	je     0x4240e3
  4240d9:	test   BYTE PTR [ebx+0x2a],0x1
  4240dd:	je     0x424169
  4240e3:	push   edi
  4240e4:	push   0x30
  4240e6:	call   DWORD PTR ds:0x44e050
  4240ec:	mov    edi,eax
  4240ee:	xor    eax,eax
  4240f0:	xor    edx,edx
  4240f2:	cmp    DWORD PTR [ebp-0x4],0xc0000080
  4240f9:	mov    WORD PTR [edi+0x2a],ax
  4240fd:	movzx  ecx,WORD PTR [esi+0x12]
  424101:	sete   dl
  424104:	shr    ecx,0x2
  424107:	not    ecx
  424109:	and    ecx,0x1
  42410c:	call   0x424964
  424111:	push   0x1fc
  424116:	mov    DWORD PTR [edi+0xc],eax
  424119:	call   DWORD PTR ds:0x44e050
  42411f:	and    DWORD PTR [eax],0x0
  424122:	mov    DWORD PTR [eax+0x4],eax
  424125:	mov    DWORD PTR [edi+0x10],eax
  424128:	mov    DWORD PTR [edi+0x4],esi
  42412b:	test   ebx,ebx
  42412d:	je     0x42413f
  42412f:	mov    eax,DWORD PTR [ebx]
  424131:	mov    DWORD PTR [edi],eax
  424133:	mov    DWORD PTR [ebx],edi
  424135:	mov    DWORD PTR [esi],edi
  424137:	mov    eax,DWORD PTR [ebx+0x14]
  42413a:	add    DWORD PTR [esi+0xc],eax
  42413d:	jmp    0x424147
  42413f:	mov    DWORD PTR [edi],edi
  424141:	and    DWORD PTR [esi+0xc],0x0
  424145:	mov    DWORD PTR [esi],edi
  424147:	mov    ecx,DWORD PTR ds:0x44e038
  42414d:	mov    edx,edi
  42414f:	call   0x424ec8
  424154:	mov    ecx,edi
  424156:	mov    WORD PTR [edi+0x28],ax
  42415a:	call   0x4244f3
  42415f:	mov    ax,ds:0x44e040
  424165:	xor    ecx,ecx
  424167:	inc    ecx
  424168:	pop    edi
  424169:	push   0x3
  42416b:	pop    edx
  42416c:	or     WORD PTR [esi+0x12],dx
  424170:	inc    ax
  424172:	mov    ds:0x44e040,ax
  424178:	mov    eax,ecx
  42417a:	pop    ebx
  42417b:	jmp    0x424191
  42417d:	push   0x334
  424182:	push   0x41e510
  424187:	push   0x0
  424189:	call   DWORD PTR ds:0x44e04c
  42418f:	xor    eax,eax
  424191:	pop    esi
  424192:	leave  
  424193:	ret    
  424194:	push   esi
  424195:	mov    si,cx
  424198:	mov    ecx,DWORD PTR ds:0x44e03c
  42419e:	movsx  edx,si
  4241a1:	call   0x424f0c
  4241a6:	mov    ecx,eax
  4241a8:	test   ecx,ecx
  4241aa:	jne    0x4241c6
  4241ac:	push   0x3d7
  4241b1:	push   0x41e510
  4241b6:	push   0x0
  4241b8:	call   DWORD PTR ds:0x44e04c
  4241be:	mov    ax,ds:0x44df04
  4241c4:	pop    esi
  4241c5:	ret    
  4241c6:	test   BYTE PTR [ecx+0x12],0x2
  4241ca:	jne    0x4241d3
  4241cc:	push   0x3dd
  4241d1:	jmp    0x4241b1
  4241d3:	movzx  eax,WORD PTR ds:0x44e02c
  4241da:	mov    DWORD PTR ds:0x44e030,ecx
  4241e0:	mov    ecx,DWORD PTR [ecx]
  4241e2:	mov    WORD PTR ds:0x44e02c,si
  4241e9:	mov    ecx,DWORD PTR [ecx+0xc]
  4241ec:	mov    DWORD PTR ds:0x44e018,ecx
  4241f2:	pop    esi
  4241f3:	ret    
  4241f4:	push   ebp
  4241f5:	mov    ebp,esp
  4241f7:	push   ecx
  4241f8:	push   ecx
  4241f9:	push   ebx
  4241fa:	push   esi
  4241fb:	push   edi
  4241fc:	push   0x8
  4241fe:	mov    bx,dx
  424201:	mov    DWORD PTR [ebp-0x4],ecx
  424204:	call   DWORD PTR ds:0x44e050
  42420a:	push   0x12
  42420c:	mov    DWORD PTR [ebp-0x8],eax
  42420f:	call   DWORD PTR ds:0x44e050
  424215:	mov    esi,DWORD PTR [ebp+0xc]
  424218:	mov    cl,BYTE PTR [ebp+0x8]
  42421b:	mov    edi,eax
  42421d:	mov    DWORD PTR [edi+0x8],esi
  424220:	mov    BYTE PTR [edi+0x10],cl
  424223:	cmp    bx,WORD PTR ds:0x44e008
  42422a:	jne    0x424230
  42422c:	xor    eax,eax
  42422e:	jmp    0x424264
  424230:	or     eax,0xffffffff
  424233:	cmp    bx,ax
  424236:	je     0x424264
  424238:	mov    ecx,DWORD PTR ds:0x44e03c
  42423e:	movsx  edx,bx
  424241:	call   0x424f0c
  424246:	test   eax,eax
  424248:	jne    0x42425e
  42424a:	push   0x443
  42424f:	push   0x41e510
  424254:	push   0x6
  424256:	call   DWORD PTR ds:0x44e04c
  42425c:	jmp    0x424268
  42425e:	mov    eax,DWORD PTR [eax]
  424260:	mov    ax,WORD PTR [eax+0x28]
  424264:	mov    WORD PTR [edi+0xc],ax
  424268:	mov    ax,WORD PTR [ebp+0x10]
  42426c:	mov    edx,DWORD PTR [ebp-0x4]
  42426f:	mov    ecx,edi
  424271:	mov    BYTE PTR [edi+0x11],0x0
  424275:	mov    WORD PTR [edi+0xe],ax
  424279:	call   0x42484b
  42427e:	mov    eax,DWORD PTR [ebp-0x8]
  424281:	mov    ecx,DWORD PTR ds:0x44e034
  424287:	mov    edx,eax
  424289:	mov    DWORD PTR [eax],0x3
  42428f:	mov    DWORD PTR [eax+0x4],edi
  424292:	call   0x424ec8
  424297:	pop    edi
  424298:	pop    esi
  424299:	dec    eax
  42429a:	pop    ebx
  42429b:	leave  
  42429c:	ret    0xc
  42429f:	push   ebp
  4242a0:	mov    ebp,esp
  4242a2:	mov    edx,DWORD PTR [ebp+0x8]
  4242a5:	push   ebx
  4242a6:	push   edi
  4242a7:	push   DWORD PTR [ebp+0x14]
  4242aa:	mov    edi,ecx
  4242ac:	push   DWORD PTR [ebp+0x10]
  4242af:	mov    ecx,0x4631e0
  4242b4:	push   DWORD PTR [ebp+0xc]
  4242b7:	call   0x4241f4
  4242bc:	mov    ebx,eax
  4242be:	test   edi,edi
  4242c0:	je     0x4242fc
  4242c2:	push   esi
  4242c3:	mov    edx,edi
  4242c5:	xor    esi,esi
  4242c7:	and    edx,0x1f
  4242ca:	mov    ecx,DWORD PTR [edx*4+0x44e060]
  4242d1:	jmp    0x4242f7
  4242d3:	cmp    DWORD PTR [ecx],edi
  4242d5:	jne    0x4242f2
  4242d7:	mov    eax,DWORD PTR [ecx+0x4]
  4242da:	mov    DWORD PTR [eax+0x4],ebx
  4242dd:	mov    eax,DWORD PTR [ecx+0x8]
  4242e0:	test   esi,esi
  4242e2:	je     0x4242e9
  4242e4:	mov    DWORD PTR [esi+0x8],eax
  4242e7:	jmp    0x4242f4
  4242e9:	mov    DWORD PTR [edx*4+0x44e060],eax
  4242f0:	jmp    0x4242f4
  4242f2:	mov    esi,ecx
  4242f4:	mov    ecx,DWORD PTR [ecx+0x8]
  4242f7:	test   ecx,ecx
  4242f9:	jne    0x4242d3
  4242fb:	pop    esi
  4242fc:	pop    edi
  4242fd:	mov    eax,ebx
  4242ff:	pop    ebx
  424300:	pop    ebp
  424301:	ret    0x10
  424304:	push   ebp
  424305:	mov    ebp,esp
  424307:	sub    esp,0xc
  42430a:	push   ebx
  42430b:	mov    DWORD PTR [ebp-0xc],ecx
  42430e:	mov    ecx,DWORD PTR ds:0x44e030
  424314:	push   esi
  424315:	mov    ebx,DWORD PTR [ecx]
  424317:	push   edi
  424318:	mov    edi,DWORD PTR [ebx+0x10]
  42431b:	mov    DWORD PTR [ebp-0x8],edx
  42431e:	mov    esi,DWORD PTR [edi]
  424320:	mov    eax,esi
  424322:	imul   eax,eax,0xa
  424325:	lea    edx,[edi+0x8]
  424328:	add    edx,eax
  42432a:	lea    eax,[esi+0x1]
  42432d:	mov    esi,DWORD PTR [ebp-0x8]
  424330:	mov    DWORD PTR [edi],eax
  424332:	mov    DWORD PTR [ebp-0x4],edx
  424335:	cmp    esi,DWORD PTR [ecx+0xc]
  424338:	jae    0x424355
  42433a:	push   0x4f1
  42433f:	push   0x41e510
  424344:	push   0x0
  424346:	call   DWORD PTR ds:0x44e04c
  42434c:	mov    ecx,DWORD PTR ds:0x44e030
  424352:	mov    edx,DWORD PTR [ebp-0x4]
  424355:	sub    esi,DWORD PTR [ecx+0xc]
  424358:	mov    ecx,DWORD PTR [ebp+0x8]
  42435b:	mov    ax,WORD PTR [ebp+0xc]
  42435f:	mov    DWORD PTR [edx],esi
  424361:	mov    DWORD PTR [edx+0x4],ecx
  424364:	mov    WORD PTR [edx+0x8],ax
  424368:	test   ecx,ecx
  42436a:	jne    0x424393
  42436c:	push   0xc
  42436e:	call   DWORD PTR ds:0x44e050
  424374:	mov    edx,DWORD PTR [ebp-0xc]
  424377:	mov    ecx,DWORD PTR [ebp-0x4]
  42437a:	mov    DWORD PTR [eax],edx
  42437c:	and    edx,0x1f
  42437f:	mov    DWORD PTR [eax+0x4],ecx
  424382:	mov    ecx,DWORD PTR [edx*4+0x44e060]
  424389:	mov    DWORD PTR [eax+0x8],ecx
  42438c:	mov    DWORD PTR [edx*4+0x44e060],eax
  424393:	inc    DWORD PTR [ebx+0x2c]
  424396:	cmp    DWORD PTR [edi],0x32
  424399:	jl     0x4243cb
  42439b:	mov    edx,DWORD PTR ds:0x44e00c
  4243a1:	test   edx,edx
  4243a3:	je     0x4243af
  4243a5:	mov    eax,DWORD PTR [edx+0x4]
  4243a8:	mov    ds:0x44e00c,eax
  4243ad:	jmp    0x4243bc
  4243af:	push   0x1fc
  4243b4:	call   DWORD PTR ds:0x44e050
  4243ba:	mov    edx,eax
  4243bc:	and    DWORD PTR [edx],0x0
  4243bf:	mov    ecx,DWORD PTR [edi+0x4]
  4243c2:	mov    DWORD PTR [edx+0x4],ecx
  4243c5:	mov    DWORD PTR [edi+0x4],edx
  4243c8:	mov    DWORD PTR [ebx+0x10],edx
  4243cb:	pop    edi
  4243cc:	pop    esi
  4243cd:	pop    ebx
  4243ce:	leave  
  4243cf:	ret    0x8
  4243d2:	push   esi
  4243d3:	push   edi
  4243d4:	mov    edi,0x41e510
  4243d9:	cmp    cx,WORD PTR ds:0x44df04
  4243e0:	jne    0x424412
  4243e2:	movsx  edx,WORD PTR ds:0x44e02c
  4243e9:	mov    ecx,DWORD PTR ds:0x44e03c
  4243ef:	mov    esi,DWORD PTR ds:0x44e030
  4243f5:	call   0x424f0c
  4243fa:	cmp    DWORD PTR ds:0x44e030,eax
  424400:	je     0x424422
  424402:	push   0x51f
  424407:	push   edi
  424408:	push   0x0
  42440a:	call   DWORD PTR ds:0x44e04c
  424410:	jmp    0x424422
  424412:	movsx  edx,cx
  424415:	mov    ecx,DWORD PTR ds:0x44e03c
  42441b:	call   0x424f0c
  424420:	mov    esi,eax
  424422:	test   esi,esi
  424424:	jne    0x424437
  424426:	push   0x528
  42442b:	push   edi
  42442c:	push   esi
  42442d:	call   DWORD PTR ds:0x44e04c
  424433:	xor    eax,eax
  424435:	jmp    0x42444b
  424437:	test   BYTE PTR [esi+0x12],0x1
  42443b:	je     0x424433
  42443d:	mov    eax,DWORD PTR [esi]
  42443f:	mov    ecx,DWORD PTR [eax+0xc]
  424442:	mov    eax,DWORD PTR [ecx+0x10]
  424445:	add    eax,DWORD PTR [ecx+0x8]
  424448:	add    eax,DWORD PTR [esi+0xc]
  42444b:	pop    edi
  42444c:	pop    esi
  42444d:	ret    
  42444e:	push   ebx
  42444f:	push   esi
  424450:	mov    esi,DWORD PTR [ecx]
  424452:	xor    edx,edx
  424454:	mov    eax,DWORD PTR [esi+0xc]
  424457:	inc    edx
  424458:	mov    ecx,DWORD PTR [eax+0x10]
  42445b:	add    ecx,DWORD PTR [eax+0x8]
  42445e:	xor    ebx,ebx
  424460:	mov    DWORD PTR [esi+0x14],ecx
  424463:	push   edi
  424464:	mov    edi,DWORD PTR ds:0x464344
  42446a:	cmp    DWORD PTR [eax+0x4],edx
  42446d:	je     0x424481
  42446f:	test   ecx,ecx
  424471:	je     0x424481
  424473:	push   DWORD PTR ds:0x44e05c
  424479:	call   edi
  42447b:	pop    ecx
  42447c:	mov    DWORD PTR [esi+0x20],eax
  42447f:	jmp    0x424484
  424481:	mov    DWORD PTR [esi+0x20],ebx
  424484:	mov    ecx,DWORD PTR [esi+0xc]
  424487:	mov    DWORD PTR [esi+0x18],ebx
  42448a:	mov    DWORD PTR [esi+0x1c],ebx
  42448d:	call   0x424cf4
  424492:	cmp    DWORD PTR [esi+0x2c],ebx
  424495:	je     0x4244e5
  424497:	push   DWORD PTR ds:0x44e05c
  42449d:	call   edi
  42449f:	xor    edi,edi
  4244a1:	mov    ebx,eax
  4244a3:	inc    edi
  4244a4:	pop    ecx
  4244a5:	test   bl,0x1
  4244a8:	je     0x4244d6
  4244aa:	push   edi
  4244ab:	push   0x44df06
  4244b0:	push   DWORD PTR ds:0x44e05c
  4244b6:	call   DWORD PTR ds:0x464348
  4244bc:	add    esp,0xc
  4244bf:	cmp    eax,edi
  4244c1:	je     0x4244d5
  4244c3:	push   0x64b
  4244c8:	push   0x41e510
  4244cd:	push   0xe
  4244cf:	call   DWORD PTR ds:0x44e04c
  4244d5:	inc    ebx
  4244d6:	mov    edx,DWORD PTR [esi+0x18]
  4244d9:	mov    ecx,esi
  4244db:	mov    DWORD PTR [esi+0x24],ebx
  4244de:	call   0x424db3
  4244e3:	jmp    0x4244eb
  4244e5:	xor    edi,edi
  4244e7:	mov    DWORD PTR [esi+0x24],ebx
  4244ea:	inc    edi
  4244eb:	or     WORD PTR [esi+0x2a],di
  4244ef:	pop    edi
  4244f0:	pop    esi
  4244f1:	pop    ebx
  4244f2:	ret    
  4244f3:	push   esi
  4244f4:	push   0x8
  4244f6:	mov    esi,ecx
  4244f8:	call   DWORD PTR ds:0x44e050
  4244fe:	mov    ecx,DWORD PTR ds:0x44e034
  424504:	mov    edx,eax
  424506:	mov    DWORD PTR [eax],0x2
  42450c:	mov    DWORD PTR [eax+0x4],esi
  42450f:	call   0x424ec8
  424514:	dec    eax
  424515:	push   0x8
  424517:	mov    DWORD PTR [esi+0x8],eax
  42451a:	call   DWORD PTR ds:0x44e050
  424520:	mov    ecx,DWORD PTR ds:0x44e034
  424526:	mov    DWORD PTR [eax],0x5
  42452c:	mov    edx,eax
  42452e:	pop    esi
  42452f:	jmp    0x424ec8
  424534:	push   ebp
  424535:	mov    ebp,esp
  424537:	sub    esp,0x34
  42453a:	mov    eax,ds:0x448858
  42453f:	xor    eax,ebp
  424541:	mov    DWORD PTR [ebp-0x4],eax
  424544:	push   ebx
  424545:	mov    ebx,ecx
  424547:	push   esi
  424548:	mov    eax,DWORD PTR [ebx]
  42454a:	push   edi
  42454b:	dec    eax
  42454c:	je     0x4246ac
  424552:	dec    eax
  424553:	je     0x4245e4
  424559:	dec    eax
  42455a:	je     0x4245a9
  42455c:	dec    eax
  42455d:	je     0x424574
  42455f:	dec    eax
  424560:	je     0x42478d
  424566:	push   0x6c6
  42456b:	push   0x41e510
  424570:	push   0x0
  424572:	jmp    0x4245d9
  424574:	push   0x12
  424576:	pop    esi
  424577:	push   esi
  424578:	push   DWORD PTR [ebx+0x4]
  42457b:	push   DWORD PTR ds:0x44e05c
  424581:	call   DWORD PTR ds:0x464348
  424587:	add    esp,0xc
  42458a:	cmp    eax,esi
  42458c:	je     0x424786
  424592:	push   0x6bd
  424597:	push   0x41e510
  42459c:	push   0xe
  42459e:	call   DWORD PTR ds:0x44e04c
  4245a4:	jmp    0x424786
  4245a9:	mov    eax,DWORD PTR [ebx+0x4]
  4245ac:	push   0x12
  4245ae:	pop    esi
  4245af:	push   esi
  4245b0:	push   eax
  4245b1:	push   DWORD PTR ds:0x44e05c
  4245b7:	mov    ds:0x46338c,eax
  4245bc:	call   DWORD PTR ds:0x464348
  4245c2:	add    esp,0xc
  4245c5:	cmp    eax,esi
  4245c7:	je     0x42478d
  4245cd:	push   0x6b9
  4245d2:	push   0x41e510
  4245d7:	push   0xe
  4245d9:	call   DWORD PTR ds:0x44e04c
  4245df:	jmp    0x42478d
  4245e4:	mov    ebx,DWORD PTR [ebx+0x4]
  4245e7:	lea    ecx,[ebp-0x18]
  4245ea:	mov    eax,DWORD PTR [ebx+0x4]
  4245ed:	mov    DWORD PTR [ebp-0x34],ebx
  4245f0:	mov    edx,DWORD PTR [eax+0x4]
  4245f3:	mov    DWORD PTR [ebp-0x30],eax
  4245f6:	call   0x42484b
  4245fb:	and    DWORD PTR [ebp-0x10],0x0
  4245ff:	mov    ax,WORD PTR [ebx+0x28]
  424603:	push   0x12
  424605:	pop    esi
  424606:	mov    WORD PTR [ebp-0xc],ax
  42460a:	push   esi
  42460b:	lea    eax,[ebp-0x18]
  42460e:	push   eax
  42460f:	push   DWORD PTR ds:0x44e05c
  424615:	mov    DWORD PTR [ebp-0xa],0x1030000
  42461c:	call   DWORD PTR ds:0x464348
  424622:	add    esp,0xc
  424625:	mov    ebx,0x41e510
  42462a:	cmp    eax,esi
  42462c:	je     0x42463c
  42462e:	push   0x6a8
  424633:	push   ebx
  424634:	push   0xe
  424636:	call   DWORD PTR ds:0x44e04c
  42463c:	mov    ecx,DWORD PTR [ebp-0x34]
  42463f:	xor    eax,eax
  424641:	lea    edi,[ebp-0x2c]
  424644:	stos   DWORD PTR es:[edi],eax
  424645:	stos   DWORD PTR es:[edi],eax
  424646:	stos   DWORD PTR es:[edi],eax
  424647:	stos   DWORD PTR es:[edi],eax
  424648:	stos   WORD PTR es:[edi],ax
  42464a:	mov    eax,DWORD PTR [ecx+0x14]
  42464d:	mov    DWORD PTR [ebp-0x2c],eax
  424650:	mov    eax,0xffff
  424655:	cmp    DWORD PTR [ecx+0x2c],eax
  424658:	jae    0x42465e
  42465a:	mov    ax,WORD PTR [ecx+0x2c]
  42465e:	mov    ecx,DWORD PTR [ebp-0x30]
  424661:	mov    WORD PTR [ebp-0x28],ax
  424665:	xor    eax,eax
  424667:	mov    WORD PTR [ebp-0x26],ax
  42466b:	test   DWORD PTR [ecx+0x8],0x1000
  424672:	je     0x424685
  424674:	and    DWORD PTR [ebp-0x24],eax
  424677:	mov    al,BYTE PTR [ecx+0x14]
  42467a:	mov    BYTE PTR [ebp-0x1e],al
  42467d:	mov    ax,WORD PTR [ecx+0x16]
  424681:	mov    WORD PTR [ebp-0x20],ax
  424685:	push   esi
  424686:	lea    eax,[ebp-0x2c]
  424689:	push   eax
  42468a:	push   DWORD PTR ds:0x44e05c
  424690:	call   DWORD PTR ds:0x464348
  424696:	add    esp,0xc
  424699:	cmp    eax,esi
  42469b:	je     0x424786
  4246a1:	push   0x6b4
  4246a6:	push   ebx
  4246a7:	jmp    0x42459c
  4246ac:	mov    eax,ds:0x41e534
  4246b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4246b4:	mov    DWORD PTR [ebp-0x18],eax
  4246b7:	mov    eax,ds:0x41e538
  4246bc:	mov    DWORD PTR [ebp-0x14],eax
  4246bf:	mov    eax,DWORD PTR [ecx+0x4]
  4246c2:	mov    DWORD PTR [ebp-0x10],eax
  4246c5:	push   0xfffffffe
  4246c7:	pop    eax
  4246c8:	mov    WORD PTR [ebp-0xc],ax
  4246cc:	xor    eax,eax
  4246ce:	mov    WORD PTR [ebp-0xa],ax
  4246d2:	mov    BYTE PTR [ebp-0x8],0x67
  4246d6:	mov    edi,DWORD PTR [ecx]
  4246d8:	lea    ecx,[edi+0x1]
  4246db:	mov    al,BYTE PTR [edi]
  4246dd:	inc    edi
  4246de:	test   al,al
  4246e0:	jne    0x4246db
  4246e2:	push   0x12
  4246e4:	sub    edi,ecx
  4246e6:	pop    esi
  4246e7:	xor    edx,edx
  4246e9:	mov    eax,edi
  4246eb:	div    esi
  4246ed:	push   esi
  4246ee:	inc    al
  4246f0:	mov    BYTE PTR [ebp-0x7],al
  4246f3:	lea    eax,[ebp-0x18]
  4246f6:	push   eax
  4246f7:	push   DWORD PTR ds:0x44e05c
  4246fd:	call   DWORD PTR ds:0x464348
  424703:	add    esp,0xc
  424706:	cmp    eax,esi
  424708:	je     0x42471c
  42470a:	push   0x693
  42470f:	push   0x41e510
  424714:	push   0xe
  424716:	call   DWORD PTR ds:0x44e04c
  42471c:	mov    eax,DWORD PTR [ebx+0x4]
  42471f:	mov    ebx,DWORD PTR ds:0x464348
  424725:	lea    esi,[edi+0x1]
  424728:	push   esi
  424729:	push   DWORD PTR [eax]
  42472b:	push   DWORD PTR ds:0x44e05c
  424731:	call   ebx
  424733:	add    esp,0xc
  424736:	cmp    eax,esi
  424738:	je     0x42474c
  42473a:	push   0x697
  42473f:	push   0x41e510
  424744:	push   0xe
  424746:	call   DWORD PTR ds:0x44e04c
  42474c:	movzx  esi,BYTE PTR [ebp-0x7]
  424750:	imul   esi,esi,0x12
  424753:	sub    esi,edi
  424755:	dec    esi
  424756:	je     0x424786
  424758:	push   0x1
  42475a:	push   0x44df06
  42475f:	push   DWORD PTR ds:0x44e05c
  424765:	dec    esi
  424766:	call   ebx
  424768:	add    esp,0xc
  42476b:	cmp    eax,0x1
  42476e:	je     0x424782
  424770:	push   0x69a
  424775:	push   0x41e510
  42477a:	push   0xe
  42477c:	call   DWORD PTR ds:0x44e04c
  424782:	test   esi,esi
  424784:	jne    0x424758
  424786:	and    DWORD PTR ds:0x46338c,0x0
  42478d:	mov    ecx,DWORD PTR [ebp-0x4]
  424790:	pop    edi
  424791:	pop    esi
  424792:	xor    ecx,ebp
  424794:	pop    ebx
  424795:	call   0x446dc7
  42479a:	leave  
  42479b:	ret    
  42479c:	push   ebp
  42479d:	mov    ebp,esp
  42479f:	sub    esp,0x30
  4247a2:	mov    eax,ds:0x448858
  4247a7:	xor    eax,ebp
  4247a9:	mov    DWORD PTR [ebp-0x4],eax
  4247ac:	push   esi
  4247ad:	mov    esi,ecx
  4247af:	push   edi
  4247b0:	mov    edi,DWORD PTR [esi+0x4]
  4247b3:	lea    ecx,[ebp-0x2c]
  4247b6:	mov    edx,DWORD PTR [edi+0x4]
  4247b9:	call   0x4248ba
  4247be:	mov    eax,DWORD PTR [esi+0x18]
  4247c1:	and    DWORD PTR [ebp-0x10],0x0
  4247c5:	mov    DWORD PTR [ebp-0x20],eax
  4247c8:	mov    eax,DWORD PTR [esi+0x1c]
  4247cb:	mov    DWORD PTR [ebp-0x24],eax
  4247ce:	mov    eax,DWORD PTR [esi+0x14]
  4247d1:	mov    DWORD PTR [ebp-0x1c],eax
  4247d4:	mov    eax,DWORD PTR [esi+0x20]
  4247d7:	mov    DWORD PTR [ebp-0x18],eax
  4247da:	mov    eax,DWORD PTR [esi+0x24]
  4247dd:	mov    ecx,0xffff
  4247e2:	mov    DWORD PTR [ebp-0x14],eax
  4247e5:	cmp    DWORD PTR [esi+0x2c],ecx
  4247e8:	jae    0x4247f4
  4247ea:	mov    ax,WORD PTR [esi+0x2c]
  4247ee:	mov    WORD PTR [ebp-0xc],ax
  4247f2:	jmp    0x4247f8
  4247f4:	mov    WORD PTR [ebp-0xc],cx
  4247f8:	xor    eax,eax
  4247fa:	mov    WORD PTR [ebp-0xa],ax
  4247fe:	mov    eax,DWORD PTR [edi+0x8]
  424801:	mov    DWORD PTR [ebp-0x8],eax
  424804:	cmp    DWORD PTR [esi+0x2c],ecx
  424807:	jb     0x424811
  424809:	or     eax,0x1000000
  42480e:	mov    DWORD PTR [ebp-0x8],eax
  424811:	push   0x28
  424813:	lea    eax,[ebp-0x2c]
  424816:	push   eax
  424817:	push   DWORD PTR ds:0x44e05c
  42481d:	call   DWORD PTR ds:0x464348
  424823:	add    esp,0xc
  424826:	cmp    eax,0x28
  424829:	je     0x42483d
  42482b:	push   0x6f0
  424830:	push   0x41e510
  424835:	push   0xe
  424837:	call   DWORD PTR ds:0x44e04c
  42483d:	mov    ecx,DWORD PTR [ebp-0x4]
  424840:	pop    edi
  424841:	xor    ecx,ebp
  424843:	pop    esi
  424844:	call   0x446dc7
  424849:	leave  
  42484a:	ret    
  42484b:	push   ebx
  42484c:	push   esi
  42484d:	mov    ebx,edx
  42484f:	push   edi
  424850:	mov    edi,ebx
  424852:	mov    esi,ecx
  424854:	lea    ecx,[edi+0x1]
  424857:	mov    al,BYTE PTR [edi]
  424859:	inc    edi
  42485a:	test   al,al
  42485c:	jne    0x424857
  42485e:	sub    edi,ecx
  424860:	cmp    edi,0x9
  424863:	jae    0x424883
  424865:	push   edi
  424866:	push   ebx
  424867:	push   esi
  424868:	call   0x447646
  42486d:	push   0x8
  42486f:	pop    eax
  424870:	sub    eax,edi
  424872:	push   eax
  424873:	lea    eax,[edi+esi*1]
  424876:	push   0x0
  424878:	push   eax
  424879:	call   0x44764c
  42487e:	add    esp,0x18
  424881:	jmp    0x4248b6
  424883:	mov    edx,DWORD PTR ds:0x44e01c
  424889:	and    DWORD PTR [esi],0x0
  42488c:	mov    ecx,DWORD PTR [edx+0xc]
  42488f:	mov    eax,DWORD PTR [edx+0x8]
  424892:	add    ecx,0x4
  424895:	add    eax,ecx
  424897:	mov    DWORD PTR [esi+0x4],eax
  42489a:	mov    esi,DWORD PTR ds:0x44e018
  4248a0:	mov    DWORD PTR ds:0x44e018,edx
  4248a6:	lea    edx,[edi+0x1]
  4248a9:	mov    ecx,ebx
  4248ab:	call   0x424be7
  4248b0:	mov    DWORD PTR ds:0x44e018,esi
  4248b6:	pop    edi
  4248b7:	pop    esi
  4248b8:	pop    ebx
  4248b9:	ret    
  4248ba:	push   ebp
  4248bb:	mov    ebp,esp
  4248bd:	push   ecx
  4248be:	push   ebx
  4248bf:	push   edi
  4248c0:	mov    edi,edx
  4248c2:	mov    ebx,ecx
  4248c4:	mov    DWORD PTR [ebp-0x4],edx
  4248c7:	lea    ecx,[edi+0x1]
  4248ca:	mov    al,BYTE PTR [edi]
  4248cc:	inc    edi
  4248cd:	test   al,al
  4248cf:	jne    0x4248ca
  4248d1:	sub    edi,ecx
  4248d3:	cmp    edi,0x9
  4248d6:	jae    0x4248f6
  4248d8:	push   edi
  4248d9:	push   edx
  4248da:	push   ebx
  4248db:	call   0x447646
  4248e0:	push   0x8
  4248e2:	pop    eax
  4248e3:	sub    eax,edi
  4248e5:	push   eax
  4248e6:	lea    eax,[edi+ebx*1]
  4248e9:	push   0x0
  4248eb:	push   eax
  4248ec:	call   0x44764c
  4248f1:	add    esp,0x18
  4248f4:	jmp    0x424960
  4248f6:	push   esi
  4248f7:	push   0xa
  4248f9:	push   0x7
  4248fb:	lea    eax,[ebx+0x1]
  4248fe:	push   eax
  4248ff:	mov    eax,ds:0x44e01c
  424904:	mov    BYTE PTR [ebx],0x2f
  424907:	mov    ecx,DWORD PTR [eax+0xc]
  42490a:	mov    eax,DWORD PTR [eax+0x8]
  42490d:	add    ecx,0x4
  424910:	add    eax,ecx
  424912:	push   eax
  424913:	call   DWORD PTR ds:0x464350
  424919:	mov    eax,ds:0x44e01c
  42491e:	mov    esi,DWORD PTR ds:0x44e018
  424924:	mov    ecx,DWORD PTR [ebp-0x4]
  424927:	add    esp,0x10
  42492a:	lea    edx,[edi+0x1]
  42492d:	mov    ds:0x44e018,eax
  424932:	call   0x424be7
  424937:	mov    ecx,ebx
  424939:	mov    DWORD PTR ds:0x44e018,esi
  42493f:	lea    edx,[ecx+0x1]
  424942:	pop    esi
  424943:	mov    al,BYTE PTR [ecx]
  424945:	inc    ecx
  424946:	test   al,al
  424948:	jne    0x424943
  42494a:	push   0x8
  42494c:	pop    eax
  42494d:	sub    ecx,edx
  42494f:	sub    eax,ecx
  424951:	push   eax
  424952:	lea    eax,[ecx+ebx*1]
  424955:	push   0x0
  424957:	push   eax
  424958:	call   0x44764c
  42495d:	add    esp,0xc
  424960:	pop    edi
  424961:	pop    ebx
  424962:	leave  
  424963:	ret    
  424964:	push   ebx
  424965:	push   esi
  424966:	push   edi
  424967:	push   0x20
  424969:	mov    edi,edx
  42496b:	mov    esi,ecx
  42496d:	call   DWORD PTR ds:0x44e050
  424973:	mov    ebx,eax
  424975:	call   0x42499b
  42497a:	mov    DWORD PTR [ebx+0x18],eax
  42497d:	mov    DWORD PTR [eax],eax
  42497f:	mov    DWORD PTR [ebx+0x4],edi
  424982:	xor    ecx,ecx
  424984:	pop    edi
  424985:	mov    DWORD PTR [ebx],esi
  424987:	mov    DWORD PTR [ebx+0x1c],eax
  42498a:	pop    esi
  42498b:	mov    DWORD PTR [ebx+0x8],ecx
  42498e:	mov    DWORD PTR [ebx+0xc],ecx
  424991:	mov    DWORD PTR [ebx+0x10],ecx
  424994:	mov    DWORD PTR [ebx+0x14],ecx
  424997:	mov    eax,ebx
  424999:	pop    ebx
  42499a:	ret    
  42499b:	mov    ecx,DWORD PTR ds:0x44e010
  4249a1:	test   ecx,ecx
  4249a3:	je     0x4249ae
  4249a5:	mov    eax,DWORD PTR [ecx]
  4249a7:	mov    ds:0x44e010,eax
  4249ac:	jmp    0x4249bb
  4249ae:	push   0x1fc
  4249b3:	call   DWORD PTR ds:0x44e050
  4249b9:	mov    ecx,eax
  4249bb:	mov    eax,ecx
  4249bd:	ret    
  4249be:	push   ebp
  4249bf:	mov    ebp,esp
  4249c1:	push   ecx
  4249c2:	push   edi
  4249c3:	mov    edi,DWORD PTR ds:0x45f830
  4249c9:	test   edi,edi
  4249cb:	js     0x424a63
  4249d1:	push   ebx
  4249d2:	push   esi
  4249d3:	mov    esi,DWORD PTR ds:0x44e018
  4249d9:	xor    ebx,ebx
  4249db:	mov    eax,DWORD PTR [esi+0x18]
  4249de:	mov    eax,DWORD PTR [eax]
  4249e0:	mov    DWORD PTR [esi+0x1c],eax
  4249e3:	lea    eax,[edi-0x1f4]
  4249e9:	mov    DWORD PTR [esi+0xc],ebx
  4249ec:	test   eax,eax
  4249ee:	jle    0x424a35
  4249f0:	mov    ecx,0x1f4
  4249f5:	mov    eax,DWORD PTR [esi+0x1c]
  4249f8:	sub    edi,ecx
  4249fa:	cmp    eax,DWORD PTR [esi+0x18]
  4249fd:	jne    0x424a29
  4249ff:	mov    DWORD PTR [esi+0xc],ecx
  424a02:	call   0x42499b
  424a07:	mov    ecx,DWORD PTR [esi+0x1c]
  424a0a:	mov    DWORD PTR [esi+0x18],eax
  424a0d:	mov    ecx,DWORD PTR [ecx]
  424a0f:	mov    DWORD PTR [eax],ecx
  424a11:	mov    ecx,DWORD PTR [esi+0x1c]
  424a14:	mov    DWORD PTR [ecx],eax
  424a16:	mov    DWORD PTR [esi+0x1c],eax
  424a19:	mov    eax,DWORD PTR [esi+0xc]
  424a1c:	add    DWORD PTR [esi+0x8],eax
  424a1f:	mov    DWORD PTR [esi+0x10],ebx
  424a22:	mov    ecx,0x1f4
  424a27:	jmp    0x424a2e
  424a29:	mov    eax,DWORD PTR [eax]
  424a2b:	mov    DWORD PTR [esi+0x1c],eax
  424a2e:	mov    DWORD PTR [esi+0xc],ebx
  424a31:	cmp    edi,ecx
  424a33:	jg     0x4249f5
  424a35:	cmp    edi,0xffffffff
  424a38:	jbe    0x424a4b
  424a3a:	push   0x7dc
  424a3f:	push   0x41e510
  424a44:	push   ebx
  424a45:	call   DWORD PTR ds:0x44e04c
  424a4b:	add    DWORD PTR [esi+0xc],edi
  424a4e:	mov    eax,DWORD PTR [esi+0x18]
  424a51:	mov    ecx,DWORD PTR [esi+0xc]
  424a54:	cmp    eax,DWORD PTR [esi+0x1c]
  424a57:	jne    0x424a61
  424a59:	cmp    DWORD PTR [esi+0x10],ecx
  424a5c:	jae    0x424a61
  424a5e:	mov    DWORD PTR [esi+0x10],ecx
  424a61:	pop    esi
  424a62:	pop    ebx
  424a63:	pop    edi
  424a64:	leave  
  424a65:	ret    
  424a66:	push   ebx
  424a67:	push   esi
  424a68:	push   edi
  424a69:	mov    edi,DWORD PTR ds:0x44e018
  424a6f:	mov    ebx,edx
  424a71:	cmp    DWORD PTR [edi+0x4],0x1
  424a75:	je     0x424bca
  424a7b:	xor    esi,esi
  424a7d:	cmp    DWORD PTR [edi],esi
  424a7f:	jne    0x424b1c
  424a85:	push   0x50
  424a87:	push   esi
  424a88:	push   0x4633a0
  424a8d:	call   0x44764c
  424a92:	add    esp,0xc
  424a95:	mov    esi,0x41e510
  424a9a:	jmp    0x424acc
  424a9c:	push   0x50
  424a9e:	push   0x4633a0
  424aa3:	push   DWORD PTR ds:0x44e05c
  424aa9:	call   DWORD PTR ds:0x464348
  424aaf:	add    esp,0xc
  424ab2:	cmp    eax,0x50
  424ab5:	je     0x424ac5
  424ab7:	push   0x808
  424abc:	push   esi
  424abd:	push   0xe
  424abf:	call   DWORD PTR ds:0x44e04c
  424ac5:	add    DWORD PTR [edi+0xc],0x50
  424ac9:	sub    ebx,0x50
  424acc:	cmp    ebx,0x50
  424acf:	jbe    0x424a9c
  424ad1:	test   ebx,ebx
  424ad3:	je     0x424bcd
  424ad9:	cmp    ebx,0xffffffff
  424adc:	jbe    0x424aec
  424ade:	push   0x80c
  424ae3:	push   esi
  424ae4:	push   0x0
  424ae6:	call   DWORD PTR ds:0x44e04c
  424aec:	push   ebx
  424aed:	push   0x4633a0
  424af2:	push   DWORD PTR ds:0x44e05c
  424af8:	call   DWORD PTR ds:0x464348
  424afe:	add    esp,0xc
  424b01:	cmp    eax,ebx
  424b03:	je     0x424bca
  424b09:	push   0x80d
  424b0e:	push   esi
  424b0f:	push   0xe
  424b11:	call   DWORD PTR ds:0x44e04c
  424b17:	jmp    0x424bca
  424b1c:	mov    eax,0x1f4
  424b21:	sub    eax,DWORD PTR [edi+0xc]
  424b24:	cmp    eax,ebx
  424b26:	jae    0x424ba0
  424b28:	mov    eax,DWORD PTR [edi+0xc]
  424b2b:	mov    esi,0x1f4
  424b30:	sub    esi,DWORD PTR [edi+0xc]
  424b33:	add    eax,0x4
  424b36:	add    eax,DWORD PTR [edi+0x1c]
  424b39:	push   esi
  424b3a:	push   0x0
  424b3c:	push   eax
  424b3d:	sub    ebx,esi
  424b3f:	call   0x44764c
  424b44:	add    DWORD PTR [edi+0xc],esi
  424b47:	add    esp,0xc
  424b4a:	xor    esi,esi
  424b4c:	cmp    DWORD PTR [edi+0xc],0x1f4
  424b53:	je     0x424b66
  424b55:	push   0x81c
  424b5a:	push   0x41e510
  424b5f:	push   esi
  424b60:	call   DWORD PTR ds:0x44e04c
  424b66:	mov    eax,DWORD PTR [edi+0x1c]
  424b69:	cmp    DWORD PTR [edi+0x18],eax
  424b6c:	jne    0x424b90
  424b6e:	call   0x42499b
  424b73:	mov    ecx,DWORD PTR [edi+0x1c]
  424b76:	mov    DWORD PTR [edi+0x18],eax
  424b79:	mov    ecx,DWORD PTR [ecx]
  424b7b:	mov    DWORD PTR [eax],ecx
  424b7d:	mov    ecx,DWORD PTR [edi+0x1c]
  424b80:	mov    DWORD PTR [ecx],eax
  424b82:	mov    DWORD PTR [edi+0x1c],eax
  424b85:	mov    eax,DWORD PTR [edi+0xc]
  424b88:	add    DWORD PTR [edi+0x8],eax
  424b8b:	mov    DWORD PTR [edi+0x10],esi
  424b8e:	jmp    0x424b95
  424b90:	mov    eax,DWORD PTR [eax]
  424b92:	mov    DWORD PTR [edi+0x1c],eax
  424b95:	mov    DWORD PTR [edi+0xc],esi
  424b98:	cmp    ebx,0x1f4
  424b9e:	ja     0x424b28
  424ba0:	cmp    ebx,0xffffffff
  424ba3:	jbe    0x424bb6
  424ba5:	push   0x835
  424baa:	push   0x41e510
  424baf:	push   esi
  424bb0:	call   DWORD PTR ds:0x44e04c
  424bb6:	mov    eax,DWORD PTR [edi+0xc]
  424bb9:	add    eax,0x4
  424bbc:	add    eax,DWORD PTR [edi+0x1c]
  424bbf:	push   ebx
  424bc0:	push   esi
  424bc1:	push   eax
  424bc2:	call   0x44764c
  424bc7:	add    esp,0xc
  424bca:	add    DWORD PTR [edi+0xc],ebx
  424bcd:	mov    eax,DWORD PTR [edi+0x18]
  424bd0:	inc    DWORD PTR [edi+0x14]
  424bd3:	cmp    eax,DWORD PTR [edi+0x1c]
  424bd6:	jne    0x424be3
  424bd8:	mov    eax,DWORD PTR [edi+0xc]
  424bdb:	cmp    DWORD PTR [edi+0x10],eax
  424bde:	jae    0x424be3
  424be0:	mov    DWORD PTR [edi+0x10],eax
  424be3:	pop    edi
  424be4:	pop    esi
  424be5:	pop    ebx
  424be6:	ret    
  424be7:	push   ebp
  424be8:	mov    ebp,esp
  424bea:	push   ecx
  424beb:	push   ebx
  424bec:	push   edi
  424bed:	mov    edi,DWORD PTR ds:0x44e018
  424bf3:	mov    ebx,edx
  424bf5:	cmp    DWORD PTR [edi+0x4],0x1
  424bf9:	mov    DWORD PTR [ebp-0x4],ecx
  424bfc:	je     0x424cd7
  424c02:	cmp    DWORD PTR [edi],0x0
  424c05:	jne    0x424c37
  424c07:	push   ebx
  424c08:	push   ecx
  424c09:	push   DWORD PTR ds:0x44e05c
  424c0f:	call   DWORD PTR ds:0x464348
  424c15:	add    esp,0xc
  424c18:	cmp    eax,ebx
  424c1a:	je     0x424cd7
  424c20:	push   0x862
  424c25:	push   0x41e510
  424c2a:	push   0xe
  424c2c:	call   DWORD PTR ds:0x44e04c
  424c32:	jmp    0x424cd7
  424c37:	push   esi
  424c38:	mov    esi,0x1f4
  424c3d:	mov    eax,esi
  424c3f:	sub    eax,DWORD PTR [edi+0xc]
  424c42:	cmp    eax,ebx
  424c44:	jae    0x424cc0
  424c46:	sub    esi,DWORD PTR [edi+0xc]
  424c49:	mov    eax,DWORD PTR [edi+0xc]
  424c4c:	add    eax,0x4
  424c4f:	add    eax,DWORD PTR [edi+0x1c]
  424c52:	push   esi
  424c53:	push   ecx
  424c54:	push   eax
  424c55:	sub    ebx,esi
  424c57:	call   0x447646
  424c5c:	add    DWORD PTR [edi+0xc],esi
  424c5f:	add    DWORD PTR [ebp-0x4],esi
  424c62:	mov    esi,0x1f4
  424c67:	add    esp,0xc
  424c6a:	cmp    DWORD PTR [edi+0xc],esi
  424c6d:	je     0x424c81
  424c6f:	push   0x871
  424c74:	push   0x41e510
  424c79:	push   0x0
  424c7b:	call   DWORD PTR ds:0x44e04c
  424c81:	mov    eax,DWORD PTR [edi+0x1c]
  424c84:	cmp    DWORD PTR [edi+0x18],eax
  424c87:	jne    0x424cb0
  424c89:	call   0x42499b
  424c8e:	mov    ecx,DWORD PTR [edi+0x1c]
  424c91:	mov    DWORD PTR [edi+0x18],eax
  424c94:	mov    ecx,DWORD PTR [ecx]
  424c96:	mov    DWORD PTR [eax],ecx
  424c98:	mov    ecx,DWORD PTR [edi+0x1c]
  424c9b:	mov    DWORD PTR [ecx],eax
  424c9d:	mov    DWORD PTR [edi+0x1c],eax
  424ca0:	mov    eax,DWORD PTR [edi+0xc]
  424ca3:	add    DWORD PTR [edi+0x8],eax
  424ca6:	and    DWORD PTR [edi+0xc],0x0
  424caa:	and    DWORD PTR [edi+0x10],0x0
  424cae:	jmp    0x424cb9
  424cb0:	mov    eax,DWORD PTR [eax]
  424cb2:	and    DWORD PTR [edi+0xc],0x0
  424cb6:	mov    DWORD PTR [edi+0x1c],eax
  424cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  424cbc:	cmp    ebx,esi
  424cbe:	ja     0x424c46
  424cc0:	mov    eax,DWORD PTR [edi+0xc]
  424cc3:	push   ebx
  424cc4:	push   ecx
  424cc5:	mov    ecx,DWORD PTR [edi+0x1c]
  424cc8:	add    ecx,0x4
  424ccb:	add    eax,ecx
  424ccd:	push   eax
  424cce:	call   0x447646
  424cd3:	add    esp,0xc
  424cd6:	pop    esi
  424cd7:	add    DWORD PTR [edi+0xc],ebx
  424cda:	mov    eax,DWORD PTR [edi+0x18]
  424cdd:	inc    DWORD PTR [edi+0x14]
  424ce0:	mov    ecx,DWORD PTR [edi+0xc]
  424ce3:	cmp    eax,DWORD PTR [edi+0x1c]
  424ce6:	jne    0x424cf0
  424ce8:	cmp    DWORD PTR [edi+0x10],ecx
  424ceb:	jae    0x424cf0
  424ced:	mov    DWORD PTR [edi+0x10],ecx
  424cf0:	pop    edi
  424cf1:	pop    ebx
  424cf2:	leave  
  424cf3:	ret    
  424cf4:	push   esi
  424cf5:	mov    esi,ecx
  424cf7:	test   esi,esi
  424cf9:	je     0x424db1
  424cff:	cmp    DWORD PTR [esi+0x4],0x1
  424d03:	je     0x424d9f
  424d09:	mov    eax,DWORD PTR [esi+0x10]
  424d0c:	push   ebx
  424d0d:	mov    ebx,DWORD PTR [esi+0x18]
  424d10:	push   edi
  424d11:	mov    DWORD PTR [esi+0x1c],ebx
  424d14:	mov    DWORD PTR [esi+0xc],eax
  424d17:	mov    edi,DWORD PTR [ebx]
  424d19:	jmp    0x424d4e
  424d1b:	push   0x1f4
  424d20:	lea    eax,[edi+0x4]
  424d23:	push   eax
  424d24:	push   DWORD PTR ds:0x44e05c
  424d2a:	call   DWORD PTR ds:0x464348
  424d30:	add    esp,0xc
  424d33:	cmp    eax,0x1f4
  424d38:	je     0x424d4c
  424d3a:	push   0x90b
  424d3f:	push   0x41e510
  424d44:	push   0xe
  424d46:	call   DWORD PTR ds:0x44e04c
  424d4c:	mov    edi,DWORD PTR [edi]
  424d4e:	cmp    edi,ebx
  424d50:	jne    0x424d1b
  424d52:	cmp    DWORD PTR [esi+0xc],0x0
  424d56:	je     0x424d9d
  424d58:	cmp    DWORD PTR [esi+0xc],0xffffffff
  424d5c:	jbe    0x424d70
  424d5e:	push   0x90f
  424d63:	push   0x41e510
  424d68:	push   0x0
  424d6a:	call   DWORD PTR ds:0x44e04c
  424d70:	push   DWORD PTR [esi+0xc]
  424d73:	lea    eax,[edi+0x4]
  424d76:	push   eax
  424d77:	push   DWORD PTR ds:0x44e05c
  424d7d:	call   DWORD PTR ds:0x464348
  424d83:	add    esp,0xc
  424d86:	cmp    eax,DWORD PTR [esi+0xc]
  424d89:	je     0x424d9d
  424d8b:	push   0x910
  424d90:	push   0x41e510
  424d95:	push   0xe
  424d97:	call   DWORD PTR ds:0x44e04c
  424d9d:	pop    edi
  424d9e:	pop    ebx
  424d9f:	mov    ecx,DWORD PTR [esi+0x1c]
  424da2:	mov    edx,DWORD PTR ds:0x44e010
  424da8:	mov    eax,DWORD PTR [ecx]
  424daa:	mov    ds:0x44e010,eax
  424daf:	mov    DWORD PTR [ecx],edx
  424db1:	pop    esi
  424db2:	ret    
  424db3:	push   ebp
  424db4:	mov    ebp,esp
  424db6:	sub    esp,0x14
  424db9:	mov    eax,ds:0x448858
  424dbe:	xor    eax,ebp
  424dc0:	mov    DWORD PTR [ebp-0x4],eax
  424dc3:	mov    eax,DWORD PTR [ecx+0x2c]
  424dc6:	push   esi
  424dc7:	push   edi
  424dc8:	mov    edi,DWORD PTR [ecx+0x10]
  424dcb:	mov    DWORD PTR [ebp-0x14],edx
  424dce:	cmp    eax,0xffff
  424dd3:	jb     0x424e12
  424dd5:	and    DWORD PTR [ebp-0xc],0x0
  424dd9:	inc    eax
  424dda:	mov    DWORD PTR [ebp-0x10],eax
  424ddd:	xor    eax,eax
  424ddf:	mov    WORD PTR [ebp-0x8],ax
  424de3:	push   0xa
  424de5:	lea    eax,[ebp-0x10]
  424de8:	push   eax
  424de9:	push   DWORD PTR ds:0x44e05c
  424def:	call   DWORD PTR ds:0x464348
  424df5:	add    esp,0xc
  424df8:	cmp    eax,0xa
  424dfb:	je     0x424e0f
  424dfd:	push   0x960
  424e02:	push   0x41e510
  424e07:	push   0xe
  424e09:	call   DWORD PTR ds:0x44e04c
  424e0f:	mov    edx,DWORD PTR [ebp-0x14]
  424e12:	mov    esi,edi
  424e14:	mov    esi,DWORD PTR [esi+0x4]
  424e17:	mov    ecx,DWORD PTR [esi]
  424e19:	test   ecx,ecx
  424e1b:	je     0x424e2f
  424e1d:	mov    eax,ecx
  424e1f:	imul   eax,eax,0xa
  424e22:	add    eax,0x8
  424e25:	add    eax,esi
  424e27:	lea    eax,[eax-0xa]
  424e2a:	add    DWORD PTR [eax],edx
  424e2c:	dec    ecx
  424e2d:	jne    0x424e27
  424e2f:	mov    eax,DWORD PTR [esi]
  424e31:	imul   eax,eax,0xa
  424e34:	push   eax
  424e35:	lea    eax,[esi+0x8]
  424e38:	push   eax
  424e39:	push   DWORD PTR ds:0x44e05c
  424e3f:	call   DWORD PTR ds:0x464348
  424e45:	mov    ecx,DWORD PTR [esi]
  424e47:	imul   ecx,ecx,0xa
  424e4a:	add    esp,0xc
  424e4d:	cmp    eax,ecx
  424e4f:	je     0x424e63
  424e51:	push   0x96c
  424e56:	push   0x41e510
  424e5b:	push   0xe
  424e5d:	call   DWORD PTR ds:0x44e04c
  424e63:	mov    edx,DWORD PTR [ebp-0x14]
  424e66:	cmp    esi,edi
  424e68:	jne    0x424e14
  424e6a:	mov    ecx,DWORD PTR ds:0x44e00c
  424e70:	mov    eax,DWORD PTR [edi+0x4]
  424e73:	mov    DWORD PTR [edi+0x4],ecx
  424e76:	mov    ecx,DWORD PTR [ebp-0x4]
  424e79:	pop    edi
  424e7a:	xor    ecx,ebp
  424e7c:	mov    ds:0x44e00c,eax
  424e81:	pop    esi
  424e82:	call   0x446dc7
  424e87:	leave  
  424e88:	ret    
  424e89:	push   esi
  424e8a:	push   edi
  424e8b:	push   0x20
  424e8d:	call   DWORD PTR ds:0x44e050
  424e93:	mov    esi,eax
  424e95:	push   0x1e
  424e97:	pop    eax
  424e98:	xor    edi,edi
  424e9a:	push   0x80
  424e9f:	mov    WORD PTR [esi+0x4],ax
  424ea3:	mov    DWORD PTR [esi+0x8],edi
  424ea6:	mov    DWORD PTR [esi],edi
  424ea8:	call   DWORD PTR ds:0x44e050
  424eae:	mov    DWORD PTR [esi+0x18],eax
  424eb1:	mov    DWORD PTR [eax+0x4],edi
  424eb4:	mov    eax,DWORD PTR [esi+0x18]
  424eb7:	mov    DWORD PTR [esi+0xc],edi
  424eba:	mov    DWORD PTR [esi+0x10],edi
  424ebd:	mov    DWORD PTR [esi+0x14],edi
  424ec0:	mov    DWORD PTR [esi+0x1c],eax
  424ec3:	pop    edi
  424ec4:	mov    eax,esi
  424ec6:	pop    esi
  424ec7:	ret    
  424ec8:	push   esi
  424ec9:	mov    esi,ecx
  424ecb:	push   edi
  424ecc:	movzx  eax,WORD PTR [esi+0x4]
  424ed0:	mov    edi,edx
  424ed2:	cmp    DWORD PTR [esi+0x8],eax
  424ed5:	jb     0x424ef8
  424ed7:	lea    eax,[eax*4+0x8]
  424ede:	push   eax
  424edf:	call   DWORD PTR ds:0x44e050
  424ee5:	mov    ecx,DWORD PTR [esi+0x1c]
  424ee8:	mov    ecx,DWORD PTR [ecx]
  424eea:	mov    DWORD PTR [eax],ecx
  424eec:	mov    ecx,DWORD PTR [esi+0x1c]
  424eef:	mov    DWORD PTR [ecx],eax
  424ef1:	and    DWORD PTR [esi+0x8],0x0
  424ef5:	mov    DWORD PTR [esi+0x1c],eax
  424ef8:	mov    ecx,DWORD PTR [esi+0x8]
  424efb:	mov    eax,DWORD PTR [esi+0x1c]
  424efe:	mov    DWORD PTR [eax+ecx*4+0x4],edi
  424f02:	inc    DWORD PTR [esi+0x8]
  424f05:	inc    DWORD PTR [esi]
  424f07:	mov    eax,DWORD PTR [esi]
  424f09:	pop    edi
  424f0a:	pop    esi
  424f0b:	ret    
  424f0c:	push   ebp
  424f0d:	mov    ebp,esp
  424f0f:	push   ecx
  424f10:	push   esi
  424f11:	mov    eax,ecx
  424f13:	push   edi
  424f14:	mov    esi,edx
  424f16:	xor    edi,edi
  424f18:	mov    DWORD PTR [ebp-0x4],eax
  424f1b:	cmp    esi,DWORD PTR [eax]
  424f1d:	jbe    0x424f23
  424f1f:	xor    eax,eax
  424f21:	jmp    0x424f5c
  424f23:	push   ebx
  424f24:	mov    ebx,DWORD PTR [eax+0x18]
  424f27:	movzx  eax,WORD PTR [eax+0x4]
  424f2b:	cmp    esi,eax
  424f2d:	jbe    0x424f56
  424f2f:	add    edi,eax
  424f31:	test   ebx,ebx
  424f33:	jne    0x424f46
  424f35:	push   0x9d1
  424f3a:	push   0x41e510
  424f3f:	push   ebx
  424f40:	call   DWORD PTR ds:0x44e04c
  424f46:	mov    eax,DWORD PTR [ebp-0x4]
  424f49:	mov    ebx,DWORD PTR [ebx]
  424f4b:	movzx  eax,WORD PTR [eax+0x4]
  424f4f:	lea    ecx,[eax+edi*1]
  424f52:	cmp    esi,ecx
  424f54:	ja     0x424f2f
  424f56:	sub    esi,edi
  424f58:	mov    eax,DWORD PTR [ebx+esi*4]
  424f5b:	pop    ebx
  424f5c:	pop    edi
  424f5d:	pop    esi
  424f5e:	leave  
  424f5f:	ret    
  424f60:	mov    edx,ecx
  424f62:	mov    ecx,DWORD PTR [edx+0xc]
  424f65:	test   ecx,ecx
  424f67:	jne    0x424f72
  424f69:	mov    eax,DWORD PTR [edx+0x18]
  424f6c:	and    DWORD PTR [edx+0x10],ecx
  424f6f:	mov    DWORD PTR [edx+0x14],eax
  424f72:	cmp    ecx,DWORD PTR [edx]
  424f74:	jb     0x424f7d
  424f76:	and    DWORD PTR [edx+0xc],0x0
  424f7a:	xor    eax,eax
  424f7c:	ret    
  424f7d:	lea    eax,[ecx+0x1]
  424f80:	mov    DWORD PTR [edx+0xc],eax
  424f83:	movzx  eax,WORD PTR [edx+0x4]
  424f87:	cmp    DWORD PTR [edx+0x10],eax
  424f8a:	jb     0x424f98
  424f8c:	mov    eax,DWORD PTR [edx+0x14]
  424f8f:	and    DWORD PTR [edx+0x10],0x0
  424f93:	mov    eax,DWORD PTR [eax]
  424f95:	mov    DWORD PTR [edx+0x14],eax
  424f98:	mov    ecx,DWORD PTR [edx+0x10]
  424f9b:	mov    eax,DWORD PTR [edx+0x14]
  424f9e:	inc    ecx
  424f9f:	mov    eax,DWORD PTR [eax+ecx*4]
  424fa2:	mov    DWORD PTR [edx+0x10],ecx
  424fa5:	ret    
  424fa6:	mov    al,BYTE PTR [ecx+0x7]
  424fa9:	and    al,0x3
  424fab:	cmp    al,0x3
  424fad:	jne    0x424fe7
  424faf:	movzx  edx,WORD PTR [ecx+0x2c]
  424fb3:	test   edx,0x1000
  424fb9:	je     0x424fc6
  424fbb:	mov    eax,DWORD PTR [ecx+0x30]
  424fbe:	cmp    eax,DWORD PTR ds:0x44e0e4
  424fc4:	jne    0x424fd9
  424fc6:	test   edx,0x2000
  424fcc:	je     0x424fe7
  424fce:	mov    eax,DWORD PTR [ecx+0x34]
  424fd1:	cmp    eax,DWORD PTR ds:0x44e0e0
  424fd7:	je     0x424fe7
  424fd9:	push   0x0
  424fdb:	xor    edx,edx
  424fdd:	mov    ecx,0x138b
  424fe2:	call   0x42ee80
  424fe7:	ret    
  424fe8:	push   ebp
  424fe9:	mov    ebp,esp
  424feb:	push   ecx
  424fec:	cmp    DWORD PTR ds:0x45f834,0x0
  424ff3:	jne    0x425008
  424ff5:	push   0x0
  424ff7:	xor    edx,edx
  424ff9:	mov    ecx,0x7f2
  424ffe:	call   0x42ee80
  425003:	jmp    0x425113
  425008:	push   ebx
  425009:	mov    ebx,DWORD PTR [ebp+0x8]
  42500c:	push   esi
  42500d:	mov    cl,BYTE PTR [ebx]
  42500f:	push   edi
  425010:	call   0x43859a
  425015:	lea    esi,[ebx+0x3]
  425018:	xor    ecx,ecx
  42501a:	xor    edx,edx
  42501c:	xor    edi,edi
  42501e:	cmp    BYTE PTR [esi],0xd
  425021:	mov    DWORD PTR [ebp-0x4],ecx
  425024:	jne    0x425035
  425026:	movzx  eax,BYTE PTR [esi+0x5]
  42502a:	lea    ecx,[esi+0x1]
  42502d:	add    esi,0x6
  425030:	mov    DWORD PTR [ebp-0x4],ecx
  425033:	add    esi,eax
  425035:	mov    al,BYTE PTR [esi]
  425037:	cmp    al,0xf
  425039:	jb     0x425044
  42503b:	cmp    al,0x1f
  42503d:	ja     0x425044
  42503f:	mov    eax,esi
  425041:	inc    esi
  425042:	jmp    0x42505f
  425044:	cmp    al,0xd
  425046:	jne    0x425056
  425048:	movzx  eax,BYTE PTR [esi+0x5]
  42504c:	lea    edx,[esi+0x1]
  42504f:	add    esi,0x6
  425052:	add    esi,eax
  425054:	jmp    0x42505d
  425056:	mov    edx,ecx
  425058:	xor    ecx,ecx
  42505a:	mov    DWORD PTR [ebp-0x4],ecx
  42505d:	xor    eax,eax
  42505f:	test   eax,eax
  425061:	je     0x425074
  425063:	movzx  ebx,BYTE PTR [eax]
  425066:	sub    ebx,0xe
  425069:	imul   ebx,ebx,0x1c
  42506c:	add    ebx,0x449418
  425072:	jmp    0x425081
  425074:	mov    ecx,edx
  425076:	call   0x445afc
  42507b:	mov    ebx,DWORD PTR [eax+0x18]
  42507e:	mov    ecx,DWORD PTR [ebp-0x4]
  425081:	test   ecx,ecx
  425083:	je     0x4250be
  425085:	mov    edx,DWORD PTR ds:0x45f998
  42508b:	call   0x4252a6
  425090:	mov    edi,eax
  425092:	test   edi,edi
  425094:	je     0x425110
  425096:	mov    edx,DWORD PTR [edi+0x24]
  425099:	test   edx,edx
  42509b:	je     0x4250bb
  42509d:	mov    ecx,ebx
  42509f:	call   0x4448fe
  4250a4:	test   al,al
  4250a6:	jne    0x4250bb
  4250a8:	movzx  eax,BYTE PTR [edi+0x5]
  4250ac:	mov    edx,edi
  4250ae:	push   eax
  4250af:	sub    edx,eax
  4250b1:	mov    ecx,0x7d4
  4250b6:	call   0x42f15d
  4250bb:	mov    DWORD PTR [edi+0x24],ebx
  4250be:	mov    eax,DWORD PTR [esi+0x1]
  4250c1:	mov    edx,DWORD PTR ds:0x448884
  4250c7:	mov    ds:0x44e110,eax
  4250cc:	add    eax,0x4
  4250cf:	push   0x0
  4250d1:	lea    ecx,[ebp-0x4]
  4250d4:	mov    DWORD PTR [ebp-0x4],eax
  4250d7:	call   0x425376
  4250dc:	add    DWORD PTR ds:0x45f830,eax
  4250e2:	test   edi,edi
  4250e4:	je     0x425106
  4250e6:	cmp    DWORD PTR ds:0x448990,0x2
  4250ed:	jb     0x4250f6
  4250ef:	mov    ecx,edi
  4250f1:	call   0x424fa6
  4250f6:	mov    eax,ds:0x44e0e4
  4250fb:	mov    DWORD PTR [edi+0x30],eax
  4250fe:	mov    eax,ds:0x44e0e0
  425103:	mov    DWORD PTR [edi+0x34],eax
  425106:	mov    ecx,0x44e108
  42510b:	call   0x43f37f
  425110:	pop    edi
  425111:	pop    esi
  425112:	pop    ebx
  425113:	mov    eax,DWORD PTR [ebp+0x8]
  425116:	xor    ecx,ecx
  425118:	mov    WORD PTR [eax+0x1],cx
  42511c:	leave  
  42511d:	ret    0x4
  425120:	push   ebp
  425121:	mov    ebp,esp
  425123:	cmp    BYTE PTR ds:0x4631da,0x0
  42512a:	push   esi
  42512b:	mov    esi,DWORD PTR [ebp+0x8]
  42512e:	push   edi
  42512f:	mov    edi,DWORD PTR [esi+0x3]
  425132:	jne    0x425187
  425134:	cmp    WORD PTR [esi+0xf],0x0
  425139:	je     0x425187
  42513b:	mov    eax,DWORD PTR [esi+0x11]
  42513e:	sub    eax,DWORD PTR ds:0x45f82c
  425144:	lea    ecx,[esi+0x17]
  425147:	lea    edx,[ebp+0xb]
  42514a:	mov    ds:0x45f830,eax
  42514f:	mov    DWORD PTR [esi+0x11],eax
  425152:	call   0x431d7f
  425157:	mov    ecx,esi
  425159:	mov    DWORD PTR [esi+0x7],eax
  42515c:	call   0x428f71
  425161:	mov    DWORD PTR [ebp+0x8],eax
  425164:	movzx  eax,WORD PTR [esi+0xf]
  425168:	push   esi
  425169:	xor    edx,edx
  42516b:	lea    ecx,[ebp+0x8]
  42516e:	mov    ds:0x45f998,eax
  425173:	call   0x425376
  425178:	imul   eax,DWORD PTR [esi+0x7]
  42517c:	sub    edi,eax
  42517e:	add    DWORD PTR ds:0x45f82c,edi
  425184:	mov    DWORD PTR [esi+0x3],eax
  425187:	pop    edi
  425188:	pop    esi
  425189:	pop    ebp
  42518a:	ret    0x4
  42518d:	push   ebp
  42518e:	mov    ebp,esp
  425190:	cmp    DWORD PTR ds:0x45f834,0x0
  425197:	jne    0x4251b5
  425199:	push   0x0
  42519b:	xor    edx,edx
  42519d:	mov    ecx,0x7f2
  4251a2:	call   0x42ee80
  4251a7:	mov    eax,DWORD PTR [ebp+0x8]
  4251aa:	xor    ecx,ecx
  4251ac:	mov    WORD PTR [eax+0x1],cx
  4251b0:	jmp    0x4252a2
  4251b5:	push   ebx
  4251b6:	push   esi
  4251b7:	push   edi
  4251b8:	mov    edi,DWORD PTR [ebp+0x8]
  4251bb:	mov    cl,BYTE PTR [edi]
  4251bd:	call   0x43859a
  4251c2:	movzx  ecx,BYTE PTR [edi]
  4251c5:	call   0x446047
  4251ca:	mov    edx,eax
  4251cc:	lea    eax,[edi+0x3]
  4251cf:	mov    DWORD PTR ds:0x45f998,edx
  4251d5:	cmp    BYTE PTR [eax],0xd
  4251d8:	jne    0x425232
  4251da:	lea    ebx,[eax+0x1]
  4251dd:	mov    ecx,ebx
  4251df:	call   0x4252a6
  4251e4:	mov    esi,eax
  4251e6:	test   esi,esi
  4251e8:	je     0x425299
  4251ee:	mov    ecx,DWORD PTR ds:0x45f998
  4251f4:	call   0x444865
  4251f9:	mov    edx,DWORD PTR [esi+0x24]
  4251fc:	mov    DWORD PTR [ebp+0x8],eax
  4251ff:	test   edx,edx
  425201:	je     0x425224
  425203:	mov    ecx,eax
  425205:	call   0x4448fe
  42520a:	test   al,al
  42520c:	jne    0x425221
  42520e:	movzx  eax,BYTE PTR [esi+0x5]
  425212:	mov    edx,esi
  425214:	push   eax
  425215:	sub    edx,eax
  425217:	mov    ecx,0x7d4
  42521c:	call   0x42f15d
  425221:	mov    eax,DWORD PTR [ebp+0x8]
  425224:	mov    DWORD PTR [esi+0x24],eax
  425227:	movzx  eax,BYTE PTR [ebx+0x4]
  42522b:	add    eax,0x5
  42522e:	add    eax,ebx
  425230:	jmp    0x425234
  425232:	xor    esi,esi
  425234:	mov    eax,DWORD PTR [eax]
  425236:	mov    edx,DWORD PTR ds:0x448884
  42523c:	mov    ds:0x44e110,eax
  425241:	add    eax,0x4
  425244:	push   0x0
  425246:	lea    ecx,[ebp+0x8]
  425249:	mov    DWORD PTR [ebp+0x8],eax
  42524c:	call   0x425376
  425251:	test   eax,eax
  425253:	jns    0x425265
  425255:	push   0x0
  425257:	xor    edx,edx
  425259:	mov    ecx,0x82c
  42525e:	call   0x42ee80
  425263:	jmp    0x42526b
  425265:	add    DWORD PTR ds:0x45f830,eax
  42526b:	test   esi,esi
  42526d:	je     0x42528f
  42526f:	cmp    DWORD PTR ds:0x448990,0x2
  425276:	jb     0x42527f
  425278:	mov    ecx,esi
  42527a:	call   0x424fa6
  42527f:	mov    eax,ds:0x44e0e4
  425284:	mov    DWORD PTR [esi+0x30],eax
  425287:	mov    eax,ds:0x44e0e0
  42528c:	mov    DWORD PTR [esi+0x34],eax
  42528f:	mov    ecx,0x44e108
  425294:	call   0x43f37f
  425299:	xor    eax,eax
  42529b:	mov    WORD PTR [edi+0x1],ax
  42529f:	pop    edi
  4252a0:	pop    esi
  4252a1:	pop    ebx
  4252a2:	pop    ebp
  4252a3:	ret    0x4
  4252a6:	cmp    DWORD PTR ds:0x45f834,0x0
  4252ad:	push   ebx
  4252ae:	push   edi
  4252af:	mov    ebx,edx
  4252b1:	mov    edi,ecx
  4252b3:	jne    0x4252c8
  4252b5:	mov    edx,edi
  4252b7:	mov    ecx,0x7f2
  4252bc:	call   0x42f140
  4252c1:	xor    eax,eax
  4252c3:	jmp    0x425373
  4252c8:	push   esi
  4252c9:	push   0x1
  4252cb:	mov    dl,0x3
  4252cd:	call   0x44586f
  4252d2:	mov    esi,eax
  4252d4:	test   esi,esi
  4252d6:	jne    0x4252ed
  4252d8:	push   0x3
  4252da:	pop    edx
  4252db:	mov    ecx,edi
  4252dd:	call   0x4458d0
  4252e2:	mov    esi,eax
  4252e4:	test   esi,esi
  4252e6:	jne    0x42530f
  4252e8:	jmp    0x425372
  4252ed:	mov    al,BYTE PTR [esi+0x7]
  4252f0:	and    al,0x3
  4252f2:	cmp    al,0x3
  4252f4:	jne    0x42530f
  4252f6:	mov    eax,0x8000
  4252fb:	test   WORD PTR [esi+0x2c],ax
  4252ff:	je     0x42530f
  425301:	push   0x0
  425303:	xor    edx,edx
  425305:	mov    ecx,0x138a
  42530a:	call   0x42ee80
  42530f:	cmp    BYTE PTR ds:0x44e047,0x0
  425316:	je     0x42533a
  425318:	cmp    BYTE PTR ds:0x44e046,0x0
  42531f:	je     0x42533a
  425321:	cmp    BYTE PTR ds:0x45f692,0x0
  425328:	jne    0x42533a
  42532a:	test   BYTE PTR [esi+0x7],0x10
  42532e:	jne    0x42533a
  425330:	push   0x2
  425332:	pop    edx
  425333:	mov    ecx,esi
  425335:	call   0x44609b
  42533a:	and    BYTE PTR [esi+0x7],0xfd
  42533e:	mov    edx,DWORD PTR ds:0x448884
  425344:	mov    eax,0x80
  425349:	or     WORD PTR [esi+0x2c],ax
  42534d:	mov    eax,ds:0x45f830
  425352:	mov    DWORD PTR [esi+0x1c],eax
  425355:	mov    eax,ds:0x45f834
  42535a:	mov    DWORD PTR [esi+0x20],eax
  42535d:	mov    DWORD PTR [esi+0x28],ebx
  425360:	mov    ecx,0x44887c
  425365:	mov    DWORD PTR ds:0x44887f,esi
  42536b:	call   0x43f399
  425370:	mov    eax,esi
  425372:	pop    esi
  425373:	pop    edi
  425374:	pop    ebx
  425375:	ret    
  425376:	push   ebp
  425377:	mov    ebp,esp
  425379:	and    esp,0xfffffff8
  42537c:	sub    esp,0x24
  42537f:	push   ebx
  425380:	mov    eax,ecx
  425382:	xor    ecx,ecx
  425384:	and    DWORD PTR [esp+0x10],ecx
  425388:	push   esi
  425389:	mov    esi,edx
  42538b:	mov    edx,DWORD PTR ds:0x45f830
  425391:	mov    DWORD PTR [esp+0x20],eax
  425395:	mov    eax,DWORD PTR [eax]
  425397:	xor    ebx,ebx
  425399:	push   edi
  42539a:	mov    DWORD PTR [esp+0x20],esi
  42539e:	mov    DWORD PTR [esp+0x14],ecx
  4253a2:	mov    DWORD PTR [esp+0x10],eax
  4253a6:	mov    DWORD PTR [esp+0x1c],edx
  4253aa:	cmp    DWORD PTR [ebp+0x8],ecx
  4253ad:	jne    0x4253bb
  4253af:	and    DWORD PTR ds:0x44e0e4,ecx
  4253b5:	and    DWORD PTR ds:0x44e0e0,ecx
  4253bb:	mov    edi,DWORD PTR ds:0x44e118
  4253c1:	cmp    BYTE PTR ds:0x4631da,0x0
  4253c8:	je     0x42540e
  4253ca:	mov    eax,ds:0x44e144
  4253cf:	test   BYTE PTR [eax+0x14],0x2
  4253d3:	jne    0x42540e
  4253d5:	test   edi,edi
  4253d7:	je     0x42540e
  4253d9:	mov    al,BYTE PTR [edi]
  4253db:	cmp    al,0x61
  4253dd:	jae    0x42540a
  4253df:	cmp    al,0x53
  4253e1:	je     0x42540a
  4253e3:	cmp    al,0x4e
  4253e5:	je     0x42540a
  4253e7:	cmp    al,0x50
  4253e9:	je     0x42540a
  4253eb:	cmp    al,0xa
  4253ed:	jb     0x4253f3
  4253ef:	cmp    al,0x1b
  4253f1:	jb     0x42540a
  4253f3:	cmp    al,0x77
  4253f5:	je     0x42540a
  4253f7:	mov    ecx,edi
  4253f9:	call   0x428f71
  4253fe:	mov    edi,eax
  425400:	mov    DWORD PTR ds:0x44e118,edi
  425406:	test   edi,edi
  425408:	jne    0x4253d9
  42540a:	mov    ecx,DWORD PTR [esp+0x14]
  42540e:	mov    eax,DWORD PTR [esp+0x10]
  425412:	mov    dl,BYTE PTR [eax]
  425414:	mov    al,dl
  425416:	cmp    al,0xa
  425418:	je     0x42577d
  42541e:	cmp    al,0x4b
  425420:	je     0x425852
  425426:	cmp    al,0x4e
  425428:	je     0x4258ca
  42542e:	cmp    al,0x53
  425430:	je     0x425533
  425436:	cmp    al,0x68
  425438:	jbe    0x4254a2
  42543a:	cmp    al,0x6b
  42543c:	ja     0x4254a2
  42543e:	cmp    BYTE PTR ds:0x4631da,0x0
  425445:	je     0x42547d
  425447:	mov    eax,ds:0x44e144
  42544c:	test   BYTE PTR [eax+0x14],0x2
  425450:	jne    0x425852
  425456:	test   edi,edi
  425458:	jne    0x425476
  42545a:	mov    edx,DWORD PTR ds:0x44e148
  425460:	mov    ecx,0x874
  425465:	movzx  eax,BYTE PTR [edx+0x5]
  425469:	push   eax
  42546a:	sub    edx,eax
  42546c:	call   0x42f15d
  425471:	jmp    0x42584c
  425476:	cmp    BYTE PTR [edi],dl
  425478:	jmp    0x425806
  42547d:	test   esi,esi
  42547f:	je     0x425852
  425485:	cmp    DWORD PTR ds:0x45f994,0x0
  42548c:	je     0x425852
  425492:	mov    ecx,DWORD PTR [esp+0x10]
  425496:	mov    edx,esi
  425498:	call   0x43f399
  42549d:	jmp    0x42584c
  4254a2:	cmp    dl,0x77
  4254a5:	jne    0x4254b9
  4254a7:	cmp    BYTE PTR ds:0x44df07,0x0
  4254ae:	je     0x4254b9
  4254b0:	mov    eax,ds:0x44e148
  4254b5:	or     BYTE PTR [eax+0x2a],0x2
  4254b9:	add    ebx,DWORD PTR ds:0x45f998
  4254bf:	cmp    DWORD PTR [esp+0x18],0x0
  4254c4:	je     0x4254d0
  4254c6:	inc    ecx
  4254c7:	and    DWORD PTR [esp+0x18],0x0
  4254cc:	mov    DWORD PTR [esp+0x14],ecx
  4254d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4254d4:	jne    0x4254ef
  4254d6:	cmp    DWORD PTR ds:0x44e0e4,0x0
  4254dd:	jne    0x4254e9
  4254df:	mov    DWORD PTR ds:0x44e0e4,0x1
  4254e9:	inc    DWORD PTR ds:0x44e0e0
  4254ef:	cmp    BYTE PTR ds:0x4631da,0x0
  4254f6:	je     0x425836
  4254fc:	mov    eax,ds:0x44e144
  425501:	test   BYTE PTR [eax+0x14],0x2
  425505:	jne    0x425852
  42550b:	test   edi,edi
  42550d:	je     0x42545a
  425513:	mov    eax,DWORD PTR [esp+0x10]
  425517:	mov    cl,BYTE PTR [edi]
  425519:	mov    al,BYTE PTR [eax]
  42551b:	cmp    cl,al
  42551d:	je     0x425825
  425523:	cmp    cl,0x50
  425526:	jne    0x425808
  42552c:	cmp    al,0x77
  42552e:	jmp    0x425806
  425533:	cmp    DWORD PTR ds:0x45f994,0x0
  42553a:	je     0x425543
  42553c:	mov    BYTE PTR ds:0x44df07,0x1
  425543:	inc    ecx
  425544:	mov    DWORD PTR [esp+0x14],ecx
  425548:	cmp    ecx,0x1
  42554b:	jne    0x425560
  42554d:	cmp    DWORD PTR [esp+0x18],0x0
  425552:	jne    0x425560
  425554:	test   ebx,ebx
  425556:	je     0x425560
  425558:	mov    DWORD PTR [esp+0x14],0x2
  425560:	cmp    BYTE PTR ds:0x4631da,0x0
  425567:	mov    DWORD PTR [esp+0x18],0x1
  42556f:	je     0x425616
  425575:	mov    eax,ds:0x44e144
  42557a:	test   BYTE PTR [eax+0x14],0x2
  42557e:	je     0x4255a1
  425580:	mov    ecx,DWORD PTR [esp+0x10]
  425584:	mov    edi,ecx
  425586:	add    ecx,0x3
  425589:	lea    edx,[esp+0xf]
  42558d:	call   0x431d7f
  425592:	mov    ecx,DWORD PTR [esp+0x10]
  425596:	call   0x428f71
  42559b:	mov    DWORD PTR [esp+0x10],eax
  42559f:	jmp    0x4255ff
  4255a1:	test   edi,edi
  4255a3:	je     0x425897
  4255a9:	cmp    BYTE PTR [edi],0x53
  4255ac:	jne    0x42587a
  4255b2:	mov    ecx,DWORD PTR [esp+0x10]
  4255b6:	lea    edx,[esp+0xf]
  4255ba:	lea    ecx,[ecx+0x3]
  4255bd:	call   0x431d7f
  4255c2:	mov    DWORD PTR [esp+0x2c],edx
  4255c6:	cmp    DWORD PTR [edi+0x7],eax
  4255c9:	je     0x4255e2
  4255cb:	mov    edx,DWORD PTR ds:0x44e148
  4255d1:	mov    ecx,0x873
  4255d6:	movzx  eax,BYTE PTR [edx+0x5]
  4255da:	push   eax
  4255db:	sub    edx,eax
  4255dd:	call   0x42f15d
  4255e2:	mov    ecx,DWORD PTR [esp+0x10]
  4255e6:	call   0x428f71
  4255eb:	mov    ecx,DWORD PTR ds:0x44e118
  4255f1:	mov    DWORD PTR [esp+0x10],eax
  4255f5:	call   0x428f71
  4255fa:	mov    ds:0x44e118,eax
  4255ff:	push   edi
  425600:	mov    edx,esi
  425602:	lea    ecx,[esp+0x14]
  425606:	call   0x425376
  42560b:	xor    eax,eax
  42560d:	mov    WORD PTR [edi+0xf],ax
  425611:	jmp    0x4256f0
  425616:	cmp    BYTE PTR ds:0x45f692,0x0
  42561d:	mov    ecx,DWORD PTR [esp+0x10]
  425621:	mov    edi,ecx
  425623:	lea    edx,[esp+0xf]
  425627:	jne    0x425692
  425629:	add    ecx,0x3
  42562c:	call   0x431d7f
  425631:	mov    ecx,DWORD PTR [esp+0x20]
  425635:	mov    esi,eax
  425637:	test   ecx,ecx
  425639:	je     0x42568a
  42563b:	mov    eax,DWORD PTR [esp+0x10]
  42563f:	mov    edx,ecx
  425641:	add    WORD PTR [eax+0x1],0x15
  425646:	mov    ecx,DWORD PTR [esp+0x10]
  42564a:	call   0x43f399
  42564f:	mov    edi,eax
  425651:	mov    eax,DWORD PTR [esp+0x10]
  425655:	mov    ecx,0xffeb
  42565a:	add    WORD PTR [eax+0x1],cx
  42565e:	mov    ecx,DWORD PTR [esp+0x10]
  425662:	movzx  eax,WORD PTR [ecx+0x1]
  425666:	sub    eax,0x3
  425669:	push   eax
  42566a:	lea    eax,[ecx+0x3]
  42566d:	push   eax
  42566e:	lea    eax,[edi+0x17]
  425671:	push   eax
  425672:	call   0x447646
  425677:	mov    eax,ds:0x45f830
  42567c:	mov    DWORD PTR [edi+0x11],eax
  42567f:	mov    ax,ds:0x45f998
  425685:	add    esp,0xc
  425688:	jmp    0x42568c
  42568a:	xor    eax,eax
  42568c:	mov    WORD PTR [edi+0xf],ax
  425690:	jmp    0x4256a0
  425692:	mov    ecx,DWORD PTR [esp+0x10]
  425696:	lea    ecx,[ecx+0x17]
  425699:	call   0x431d7f
  42569e:	mov    esi,eax
  4256a0:	mov    ecx,DWORD PTR [esp+0x10]
  4256a4:	call   0x428f71
  4256a9:	mov    edx,DWORD PTR [esp+0x20]
  4256ad:	mov    DWORD PTR [esp+0x10],eax
  4256b1:	push   edi
  4256b2:	lea    ecx,[esp+0x14]
  4256b6:	mov    DWORD PTR [edi+0x7],esi
  4256b9:	call   0x425376
  4256be:	mov    ecx,DWORD PTR ds:0x45f998
  4256c4:	mov    esi,eax
  4256c6:	mov    eax,DWORD PTR [edi+0x7]
  4256c9:	imul   eax,esi
  4256cc:	mov    edx,ecx
  4256ce:	sub    edx,DWORD PTR ds:0x44e0e8
  4256d4:	cmp    DWORD PTR ds:0x44e0e8,ecx
  4256da:	mov    DWORD PTR [edi+0x3],eax
  4256dd:	sbb    eax,eax
  4256df:	and    eax,edx
  4256e1:	mov    DWORD PTR [edi+0xb],eax
  4256e4:	test   esi,esi
  4256e6:	je     0x4258fd
  4256ec:	mov    esi,DWORD PTR [esp+0x20]
  4256f0:	mov    eax,DWORD PTR [edi+0x3]
  4256f3:	add    ebx,eax
  4256f5:	cmp    DWORD PTR [ebp+0x8],0x0
  4256f9:	jne    0x42571c
  4256fb:	xor    edx,edx
  4256fd:	div    DWORD PTR ds:0x45f998
  425703:	cmp    DWORD PTR ds:0x44e0e4,0x0
  42570a:	mov    ecx,eax
  42570c:	jne    0x425716
  42570e:	mov    eax,DWORD PTR [edi+0x7]
  425711:	mov    ds:0x44e0e4,eax
  425716:	add    DWORD PTR ds:0x44e0e0,ecx
  42571c:	cmp    BYTE PTR ds:0x4631da,0x0
  425723:	je     0x425770
  425725:	mov    eax,ds:0x44e144
  42572a:	test   BYTE PTR [eax+0x14],0x2
  42572e:	jne    0x42584c
  425734:	mov    edx,DWORD PTR ds:0x44e118
  42573a:	test   edx,edx
  42573c:	je     0x42545a
  425742:	mov    eax,DWORD PTR [esp+0x10]
  425746:	mov    cl,BYTE PTR [edx]
  425748:	cmp    cl,BYTE PTR [eax]
  42574a:	je     0x425769
  42574c:	mov    edx,DWORD PTR ds:0x44e148
  425752:	mov    ecx,0x873
  425757:	movzx  eax,BYTE PTR [edx+0x5]
  42575b:	push   eax
  42575c:	sub    edx,eax
  42575e:	call   0x42f15d
  425763:	mov    edx,DWORD PTR ds:0x44e118
  425769:	mov    ecx,edx
  42576b:	jmp    0x425827
  425770:	test   esi,esi
  425772:	je     0x42584c
  425778:	jmp    0x425492
  42577d:	mov    ecx,DWORD PTR [esp+0x10]
  425781:	cmp    BYTE PTR [ecx+0x4],0x7
  425785:	jne    0x425797
  425787:	movzx  eax,BYTE PTR [ecx+0x3]
  42578b:	cmp    BYTE PTR [eax+ecx*1+0x2],0x1
  425790:	jne    0x425797
  425792:	mov    cl,BYTE PTR [ecx+0x5]
  425795:	jmp    0x425799
  425797:	mov    cl,0x1
  425799:	movzx  eax,cl
  42579c:	add    ebx,eax
  42579e:	cmp    DWORD PTR [esp+0x18],0x0
  4257a3:	je     0x4257ae
  4257a5:	inc    DWORD PTR [esp+0x14]
  4257a9:	and    DWORD PTR [esp+0x18],0x0
  4257ae:	cmp    DWORD PTR [ebp+0x8],0x0
  4257b2:	jne    0x4257cd
  4257b4:	cmp    DWORD PTR ds:0x44e0e4,0x0
  4257bb:	jne    0x4257c7
  4257bd:	mov    DWORD PTR ds:0x44e0e4,0x1
  4257c7:	add    DWORD PTR ds:0x44e0e0,eax
  4257cd:	cmp    BYTE PTR ds:0x4631da,0x0
  4257d4:	je     0x425836
  4257d6:	mov    eax,ds:0x44e144
  4257db:	test   BYTE PTR [eax+0x14],0x2
  4257df:	jne    0x425852
  4257e1:	test   edi,edi
  4257e3:	je     0x42545a
  4257e9:	cmp    BYTE PTR [edi],dl
  4257eb:	jne    0x425808
  4257ed:	cmp    cl,0x1
  4257f0:	jbe    0x425825
  4257f2:	cmp    BYTE PTR [edi+0x4],0x7
  4257f6:	jne    0x425808
  4257f8:	movzx  eax,BYTE PTR [edi+0x3]
  4257fc:	cmp    BYTE PTR [eax+edi*1+0x2],0x1
  425801:	jne    0x425808
  425803:	cmp    BYTE PTR [edi+0x5],cl
  425806:	je     0x425825
  425808:	mov    edx,DWORD PTR ds:0x44e148
  42580e:	mov    ecx,0x873
  425813:	movzx  eax,BYTE PTR [edx+0x5]
  425817:	push   eax
  425818:	sub    edx,eax
  42581a:	call   0x42f15d
  42581f:	mov    edi,DWORD PTR ds:0x44e118
  425825:	mov    ecx,edi
  425827:	call   0x428f71
  42582c:	mov    edi,eax
  42582e:	mov    DWORD PTR ds:0x44e118,edi
  425834:	jmp    0x425852
  425836:	test   esi,esi
  425838:	je     0x425852
  42583a:	mov    ecx,DWORD PTR [esp+0x10]
  42583e:	mov    edx,esi
  425840:	call   0x43f399
  425845:	mov    ecx,eax
  425847:	call   0x43f2e6
  42584c:	mov    edi,DWORD PTR ds:0x44e118
  425852:	mov    ecx,DWORD PTR [esp+0x10]
  425856:	call   0x428f71
  42585b:	mov    edx,DWORD PTR [esp+0x1c]
  42585f:	mov    ecx,eax
  425861:	lea    eax,[edx+ebx*1]
  425864:	mov    DWORD PTR [esp+0x10],ecx
  425868:	mov    ds:0x45f830,eax
  42586d:	test   ecx,ecx
  42586f:	je     0x4258e6
  425871:	mov    ecx,DWORD PTR [esp+0x14]
  425875:	jmp    0x4253c1
  42587a:	mov    edx,DWORD PTR ds:0x44e148
  425880:	mov    ecx,0x873
  425885:	movzx  eax,BYTE PTR [edx+0x5]
  425889:	push   eax
  42588a:	sub    edx,eax
  42588c:	call   0x42f15d
  425891:	mov    eax,DWORD PTR [esp+0x10]
  425895:	jmp    0x4258b7
  425897:	mov    edx,DWORD PTR ds:0x44e148
  42589d:	mov    ecx,0x874
  4258a2:	movzx  eax,BYTE PTR [edx+0x5]
  4258a6:	push   eax
  4258a7:	sub    edx,eax
  4258a9:	call   0x42f15d
  4258ae:	mov    ecx,DWORD PTR [esp+0x10]
  4258b2:	call   0x428f71
  4258b7:	mov    edx,DWORD PTR [esp+0x24]
  4258bb:	mov    DWORD PTR [edx],eax
  4258bd:	mov    eax,DWORD PTR [esp+0x1c]
  4258c1:	mov    ds:0x45f830,eax
  4258c6:	xor    eax,eax
  4258c8:	jmp    0x4258f4
  4258ca:	mov    edx,DWORD PTR [esp+0x24]
  4258ce:	mov    ecx,DWORD PTR [esp+0x10]
  4258d2:	mov    eax,DWORD PTR [esp+0x1c]
  4258d6:	mov    DWORD PTR [edx],ecx
  4258d8:	mov    ds:0x45f830,eax
  4258dd:	mov    BYTE PTR ds:0x44df07,0x0
  4258e4:	jmp    0x4258f2
  4258e6:	mov    DWORD PTR ds:0x45f830,edx
  4258ec:	mov    DWORD PTR ds:0x44e0e8,ebx
  4258f2:	mov    eax,ebx
  4258f4:	pop    edi
  4258f5:	pop    esi
  4258f6:	pop    ebx
  4258f7:	mov    esp,ebp
  4258f9:	pop    ebp
  4258fa:	ret    0x4
  4258fd:	push   0x0
  4258ff:	xor    edx,edx
  425901:	mov    ecx,0x85a
  425906:	call   0x42ee80
  42590b:	call   0x42c81b
  425910:	int3   
  425911:	mov    ecx,DWORD PTR ds:0x44e144
  425917:	mov    dl,BYTE PTR [ecx+0x14]
  42591a:	test   dl,0x1
  42591d:	je     0x425945
  42591f:	push   esi
  425920:	mov    esi,DWORD PTR ds:0x44e0e8
  425926:	cmp    DWORD PTR [ecx+0x4],esi
  425929:	jae    0x42592e
  42592b:	mov    DWORD PTR [ecx+0x4],esi
  42592e:	mov    eax,ds:0x45f848
  425933:	add    eax,esi
  425935:	pop    esi
  425936:	cmp    eax,DWORD PTR [ecx+0xc]
  425939:	jle    0x42593e
  42593b:	mov    DWORD PTR [ecx+0xc],eax
  42593e:	or     dl,0x2
  425941:	mov    BYTE PTR [ecx+0x14],dl
  425944:	ret    
  425945:	mov    eax,ds:0x44e0e8
  42594a:	mov    edx,DWORD PTR ds:0x45f848
  425950:	add    DWORD PTR [ecx+0x4],eax
  425953:	add    edx,eax
  425955:	mov    DWORD PTR ds:0x45f848,edx
  42595b:	cmp    edx,DWORD PTR [ecx+0xc]
  42595e:	jle    0x425963
  425960:	mov    DWORD PTR [ecx+0xc],edx
  425963:	ret    
  425964:	push   ebp
  425965:	mov    ebp,esp
  425967:	cmp    DWORD PTR ds:0x45f834,0x0
  42596e:	jne    0x42598c
  425970:	push   0x0
  425972:	xor    edx,edx
  425974:	mov    ecx,0x7f2
  425979:	call   0x42ee80
  42597e:	mov    eax,DWORD PTR [ebp+0x8]
  425981:	xor    ecx,ecx
  425983:	mov    WORD PTR [eax+0x1],cx
  425987:	jmp    0x425a21
  42598c:	push   ebx
  42598d:	mov    ebx,DWORD PTR [ebp+0x8]
  425990:	push   esi
  425991:	movzx  eax,BYTE PTR [ebx+0x8]
  425995:	lea    ecx,[ebx+0x9]
  425998:	push   edi
  425999:	add    ecx,eax
  42599b:	lea    edx,[ebp+0x8]
  42599e:	call   0x444bcc
  4259a3:	mov    edi,DWORD PTR [ebp+0x8]
  4259a6:	test   BYTE PTR [edi+0xe],0xf
  4259aa:	mov    al,BYTE PTR [edi+0x10]
  4259ad:	mov    BYTE PTR [ebp+0xb],al
  4259b0:	jne    0x4259c3
  4259b2:	push   0x0
  4259b4:	xor    edx,edx
  4259b6:	mov    ecx,0x87f
  4259bb:	call   0x42ee80
  4259c0:	mov    al,BYTE PTR [ebp+0xb]
  4259c3:	movzx  edx,al
  4259c6:	lea    ecx,[ebx+0x4]
  4259c9:	call   0x4252a6
  4259ce:	mov    esi,eax
  4259d0:	test   esi,esi
  4259d2:	je     0x425a18
  4259d4:	cmp    DWORD PTR [esi+0x24],0x0
  4259d8:	je     0x4259f4
  4259da:	cmp    DWORD PTR [esi+0x24],edi
  4259dd:	je     0x4259f4
  4259df:	movzx  eax,BYTE PTR [esi+0x5]
  4259e3:	mov    edx,esi
  4259e5:	push   eax
  4259e6:	sub    edx,eax
  4259e8:	mov    ecx,0x7d4
  4259ed:	call   0x42f15d
  4259f2:	jmp    0x4259f7
  4259f4:	mov    DWORD PTR [esi+0x24],edi
  4259f7:	xor    ecx,ecx
  4259f9:	inc    ecx
  4259fa:	test   BYTE PTR [edi+0xe],0x4
  4259fe:	je     0x425a12
  425a00:	mov    ax,ds:0x45f990
  425a06:	and    DWORD PTR [esi+0x28],0x0
  425a0a:	or     WORD PTR [esi+0x2c],cx
  425a0e:	mov    WORD PTR [esi+0x30],ax
  425a12:	mov    DWORD PTR [esi+0x34],ecx
  425a15:	mov    DWORD PTR [esi+0x30],ecx
  425a18:	pop    edi
  425a19:	xor    eax,eax
  425a1b:	pop    esi
  425a1c:	mov    WORD PTR [ebx+0x1],ax
  425a20:	pop    ebx
  425a21:	pop    ebp
  425a22:	ret    0x4
  425a25:	push   ebp
  425a26:	mov    ebp,esp
  425a28:	sub    esp,0xc
  425a2b:	call   0x438545
  425a30:	cmp    DWORD PTR ds:0x45f994,0x14
  425a37:	jb     0x425a43
  425a39:	mov    ecx,0x3ef
  425a3e:	call   0x42f124
  425a43:	mov    eax,DWORD PTR [ebp+0x8]
  425a46:	push   ebx
  425a47:	push   esi
  425a48:	push   edi
  425a49:	xor    ebx,ebx
  425a4b:	push   0x3
  425a4d:	lea    edi,[eax+0x4]
  425a50:	pop    ecx
  425a51:	cmp    DWORD PTR ds:0x45f994,ebx
  425a57:	je     0x425a7a
  425a59:	mov    ax,WORD PTR [eax+0x1]
  425a5d:	xor    edx,edx
  425a5f:	sub    ax,cx
  425a62:	inc    edx
  425a63:	cmp    ax,dx
  425a66:	jbe    0x425a74
  425a68:	lea    ecx,[edi+0x1]
  425a6b:	call   0x426256
  425a70:	mov    esi,eax
  425a72:	jmp    0x425ac4
  425a74:	xor    ebx,ebx
  425a76:	mov    esi,ebx
  425a78:	jmp    0x425af4
  425a7a:	mov    ecx,edi
  425a7c:	mov    BYTE PTR ds:0x4631da,bl
  425a82:	call   0x445afc
  425a87:	mov    esi,eax
  425a89:	test   esi,esi
  425a8b:	je     0x425aa5
  425a8d:	movzx  eax,BYTE PTR [edi+0x4]
  425a91:	add    edi,0x6
  425a94:	add    edi,eax
  425a96:	test   BYTE PTR [esi+0x7],0x20
  425a9a:	jne    0x425abe
  425a9c:	mov    BYTE PTR ds:0x4631da,0x1
  425aa3:	jmp    0x425abe
  425aa5:	push   0xa
  425aa7:	pop    edx
  425aa8:	mov    ecx,edi
  425aaa:	call   0x4458d0
  425aaf:	mov    esi,eax
  425ab1:	movzx  eax,BYTE PTR [edi+0x4]
  425ab5:	add    edi,0x6
  425ab8:	add    edi,eax
  425aba:	or     BYTE PTR [esi+0x7],0x20
  425abe:	mov    DWORD PTR ds:0x45f848,ebx
  425ac4:	test   esi,esi
  425ac6:	je     0x425de3
  425acc:	cmp    BYTE PTR ds:0x4631da,bl
  425ad2:	jne    0x425af1
  425ad4:	cmp    DWORD PTR [esi+0x1c],ebx
  425ad7:	jne    0x425ae4
  425ad9:	push   0x1c
  425adb:	pop    ecx
  425adc:	call   0x43f42e
  425ae1:	mov    DWORD PTR [esi+0x1c],eax
  425ae4:	mov    eax,DWORD PTR [esi+0x1c]
  425ae7:	push   0x8
  425ae9:	pop    ecx
  425aea:	mov    WORD PTR [eax+0xe],cx
  425aee:	mov    DWORD PTR [eax+0x14],esi
  425af1:	xor    edx,edx
  425af3:	inc    edx
  425af4:	cmp    BYTE PTR [edi-0x1],0x2a
  425af8:	jne    0x425b12
  425afa:	test   esi,esi
  425afc:	je     0x425b02
  425afe:	or     BYTE PTR [esi+0x7],0x80
  425b02:	mov    eax,ds:0x45f994
  425b07:	imul   eax,eax,0x2c
  425b0a:	mov    BYTE PTR [eax+0x44e15c],dl
  425b10:	jmp    0x425b20
  425b12:	mov    eax,ds:0x45f994
  425b17:	imul   eax,eax,0x2c
  425b1a:	mov    BYTE PTR [eax+0x44e15c],bl
  425b20:	cmp    DWORD PTR ds:0x45f994,0x0
  425b27:	mov    ecx,DWORD PTR ds:0x45f848
  425b2d:	mov    DWORD PTR [eax+0x44e148],esi
  425b33:	mov    DWORD PTR [eax+0x44e14c],ebx
  425b39:	mov    DWORD PTR [eax+0x44e158],ebx
  425b3f:	mov    DWORD PTR [eax+0x44e150],ecx
  425b45:	mov    DWORD PTR [eax+0x44e154],ecx
  425b4b:	mov    DWORD PTR [eax+0x44e170],ecx
  425b51:	lea    ecx,[eax+0x44e148]
  425b57:	mov    DWORD PTR ds:0x44e144,ecx
  425b5d:	jne    0x425d1a
  425b63:	cmp    BYTE PTR ds:0x4631da,0x0
  425b6a:	jne    0x425b88
  425b6c:	mov    edx,DWORD PTR ds:0x448884
  425b72:	mov    ecx,0x44db10
  425b77:	mov    DWORD PTR ds:0x44db14,esi
  425b7d:	call   0x43f399
  425b82:	mov    ecx,DWORD PTR ds:0x44e144
  425b88:	mov    edx,DWORD PTR ds:0x44898c
  425b8e:	xor    eax,eax
  425b90:	inc    eax
  425b91:	mov    ds:0x44e134,ax
  425b97:	mov    ds:0x44e138,ax
  425b9d:	test   edx,edx
  425b9f:	je     0x425baa
  425ba1:	mov    ax,dx
  425ba4:	mov    ds:0x44e138,ax
  425baa:	cmp    BYTE PTR [edi],0x0
  425bad:	je     0x425bd0
  425baf:	lea    edx,[ebp-0x1]
  425bb2:	mov    ecx,edi
  425bb4:	call   0x431d7f
  425bb9:	movzx  ecx,BYTE PTR [edi]
  425bbc:	add    edi,ecx
  425bbe:	mov    ecx,DWORD PTR ds:0x44e144
  425bc4:	mov    ds:0x44e134,ax
  425bca:	mov    ds:0x44e138,ax
  425bd0:	xor    edx,edx
  425bd2:	inc    edi
  425bd3:	inc    edx
  425bd4:	mov    DWORD PTR [ebp-0xc],edi
  425bd7:	cmp    ax,dx
  425bda:	je     0x425c0b
  425bdc:	cmp    ax,0x2
  425be0:	je     0x425c0b
  425be2:	push   0x4
  425be4:	pop    edx
  425be5:	cmp    ax,dx
  425be8:	je     0x425c0b
  425bea:	push   0x8
  425bec:	pop    edx
  425bed:	cmp    ax,dx
  425bf0:	je     0x425c0b
  425bf2:	cmp    ax,0x10
  425bf6:	je     0x425c0b
  425bf8:	push   ebx
  425bf9:	xor    edx,edx
  425bfb:	mov    ecx,0x810
  425c00:	call   0x42ee80
  425c05:	mov    ecx,DWORD PTR ds:0x44e144
  425c0b:	cmp    BYTE PTR ds:0x4631da,0x0
  425c12:	mov    DWORD PTR ds:0x448988,0x404bd0
  425c1c:	mov    DWORD PTR ds:0x4486fb,0x4482ec
  425c26:	mov    DWORD PTR ds:0x4486ff,0x4482f1
  425c30:	mov    DWORD PTR ds:0x4486ab,0x4482f6
  425c3a:	jne    0x425c67
  425c3c:	mov    edx,0x44e11c
  425c41:	xor    eax,eax
  425c43:	mov    edi,edx
  425c45:	stos   DWORD PTR es:[edi],eax
  425c46:	stos   DWORD PTR es:[edi],eax
  425c47:	stos   DWORD PTR es:[edi],eax
  425c48:	stos   DWORD PTR es:[edi],eax
  425c49:	mov    eax,ds:0x448884
  425c4e:	mov    edi,DWORD PTR [ebp-0xc]
  425c51:	mov    DWORD PTR [ebp-0x8],edx
  425c54:	mov    DWORD PTR ds:0x44e12c,edx
  425c5a:	mov    ds:0x44e130,eax
  425c5f:	mov    DWORD PTR ds:0x448884,edx
  425c65:	jmp    0x425c74
  425c67:	mov    eax,ds:0x448884
  425c6c:	mov    DWORD PTR [ebp-0x8],eax
  425c6f:	mov    ds:0x44e12c,eax
  425c74:	mov    edx,DWORD PTR [ebp+0x8]
  425c77:	movzx  eax,WORD PTR [edx+0x1]
  425c7b:	add    eax,edx
  425c7d:	cmp    edi,eax
  425c7f:	jae    0x425c8a
  425c81:	cmp    BYTE PTR [edi],0x92
  425c84:	jne    0x425c8a
  425c86:	or     BYTE PTR [ecx+0x14],0x4
  425c8a:	cmp    BYTE PTR ds:0x4631da,0x0
  425c91:	mov    DWORD PTR ds:0x45f848,ebx
  425c97:	mov    DWORD PTR [ecx+0x20],ebx
  425c9a:	je     0x425cae
  425c9c:	mov    ax,WORD PTR [esi+0x20]
  425ca0:	mov    WORD PTR [ecx+0x24],ax
  425ca4:	mov    eax,DWORD PTR [esi+0x18]
  425ca7:	mov    ds:0x44e13c,eax
  425cac:	jmp    0x425ccd
  425cae:	mov    ax,ds:0x44e140
  425cb4:	inc    ax
  425cb6:	mov    BYTE PTR [esi+0x2a],bl
  425cb9:	mov    WORD PTR [esi+0x20],ax
  425cbd:	mov    ds:0x44e140,ax
  425cc3:	mov    WORD PTR [ecx+0x24],ax
  425cc7:	mov    DWORD PTR ds:0x44e13c,esi
  425ccd:	cmp    BYTE PTR ds:0x4631da,0x0
  425cd4:	jne    0x425d00
  425cd6:	mov    edx,DWORD PTR [ebp-0x8]
  425cd9:	push   0x3
  425cdb:	pop    eax
  425cdc:	mov    ecx,0x44e4e8
  425ce1:	mov    BYTE PTR ds:0x44e4e8,0x6a
  425ce8:	mov    ds:0x44e4e9,al
  425ced:	mov    BYTE PTR ds:0x44e4ea,bl
  425cf3:	call   0x43f399
  425cf8:	mov    esi,DWORD PTR [ebp+0x8]
  425cfb:	jmp    0x425dc8
  425d00:	mov    ecx,DWORD PTR [esi+0x24]
  425d03:	push   0x4
  425d05:	pop    eax
  425d06:	add    ecx,eax
  425d08:	call   0x428f71
  425d0d:	mov    esi,DWORD PTR [ebp+0x8]
  425d10:	mov    ds:0x44e118,eax
  425d15:	jmp    0x425dd1
  425d1a:	mov    al,BYTE PTR [ecx-0x18]
  425d1d:	and    al,0xe
  425d1f:	or     BYTE PTR [ecx+0x14],al
  425d22:	mov    al,BYTE PTR [ecx+0x14]
  425d25:	test   al,0x2
  425d27:	je     0x425d2e
  425d29:	or     al,0x8
  425d2b:	mov    BYTE PTR [ecx+0x14],al
  425d2e:	inc    DWORD PTR [ecx-0xc]
  425d31:	test   esi,esi
  425d33:	je     0x425d69
  425d35:	or     BYTE PTR [ecx+0x14],0x4
  425d39:	mov    ax,ds:0x44e140
  425d3f:	inc    ax
  425d41:	mov    WORD PTR [esi+0x20],ax
  425d45:	mov    WORD PTR [ecx+0x24],ax
  425d49:	or     BYTE PTR [esi+0x7],0x40
  425d4d:	mov    WORD PTR [esi+0x28],dx
  425d51:	mov    WORD PTR [esi+0x2a],dx
  425d55:	mov    ds:0x44e140,ax
  425d5b:	mov    DWORD PTR ds:0x45f848,ebx
  425d61:	mov    DWORD PTR [ecx+0xc],ebx
  425d64:	mov    DWORD PTR [ecx+0x8],ebx
  425d67:	jmp    0x425d71
  425d69:	mov    ax,WORD PTR [ecx-0x8]
  425d6d:	mov    WORD PTR [ecx+0x24],ax
  425d71:	mov    esi,DWORD PTR [ebp+0x8]
  425d74:	mov    edx,DWORD PTR ds:0x44e12c
  425d7a:	push   0x4
  425d7c:	pop    eax
  425d7d:	mov    BYTE PTR [esi],0x1b
  425d80:	mov    WORD PTR [esi+0x1],ax
  425d84:	mov    ecx,esi
  425d86:	mov    BYTE PTR [esi+0x3],bl
  425d89:	call   0x43f399
  425d8e:	mov    ecx,DWORD PTR ds:0x44e144
  425d94:	xor    edx,edx
  425d96:	mov    DWORD PTR [ecx+0x1c],eax
  425d99:	mov    ax,ds:0x44e134
  425d9f:	inc    edx
  425da0:	mov    WORD PTR [ecx-0x6],ax
  425da4:	test   BYTE PTR [ecx+0x14],0x8
  425da8:	mov    WORD PTR ds:0x44e134,dx
  425daf:	jne    0x425dd1
  425db1:	mov    edx,DWORD PTR ds:0x44e12c
  425db7:	push   0x3
  425db9:	pop    eax
  425dba:	mov    ecx,esi
  425dbc:	mov    BYTE PTR [esi],0x6a
  425dbf:	mov    WORD PTR [esi+0x1],ax
  425dc3:	call   0x43f399
  425dc8:	mov    ecx,DWORD PTR ds:0x44e144
  425dce:	mov    DWORD PTR [ecx+0x18],eax
  425dd1:	inc    DWORD PTR ds:0x45f994
  425dd7:	xor    eax,eax
  425dd9:	mov    DWORD PTR ds:0x448db8,ebx
  425ddf:	mov    WORD PTR [esi+0x1],ax
  425de3:	pop    edi
  425de4:	pop    esi
  425de5:	pop    ebx
  425de6:	leave  
  425de7:	ret    0x4
  425dea:	push   esi
  425deb:	mov    esi,DWORD PTR [ecx+0x18]
  425dee:	push   edi
  425def:	test   esi,esi
  425df1:	jne    0x425e0d
  425df3:	mov    eax,DWORD PTR [ecx+0x1c]
  425df6:	mov    edi,DWORD PTR [eax+0x10]
  425df9:	test   edi,edi
  425dfb:	jne    0x425e3a
  425dfd:	push   edi
  425dfe:	xor    edx,edx
  425e00:	mov    ecx,0x1776
  425e05:	call   0x42ee80
  425e0a:	inc    edi
  425e0b:	jmp    0x425e3a
  425e0d:	xor    edi,edi
  425e0f:	push   ebx
  425e10:	inc    edi
  425e11:	xor    ebx,ebx
  425e13:	cmp    WORD PTR [esi+0x20],bx
  425e17:	je     0x425e26
  425e19:	mov    ecx,DWORD PTR [esi+0x1c]
  425e1c:	mov    ecx,DWORD PTR [ecx+0x14]
  425e1f:	call   0x425dea
  425e24:	jmp    0x425e2c
  425e26:	mov    eax,DWORD PTR [esi+0x1c]
  425e29:	mov    eax,DWORD PTR [eax+0x10]
  425e2c:	cmp    edi,eax
  425e2e:	ja     0x425e32
  425e30:	mov    edi,eax
  425e32:	mov    esi,DWORD PTR [esi+0x18]
  425e35:	test   esi,esi
  425e37:	jne    0x425e13
  425e39:	pop    ebx
  425e3a:	mov    eax,edi
  425e3c:	pop    edi
  425e3d:	pop    esi
  425e3e:	ret    
  425e3f:	push   ebp
  425e40:	mov    ebp,esp
  425e42:	push   ecx
  425e43:	push   ecx
  425e44:	cmp    DWORD PTR ds:0x45f994,0x0
  425e4b:	mov    al,ds:0x4631da
  425e50:	mov    BYTE PTR [ebp-0x1],al
  425e53:	jne    0x425e5f
  425e55:	mov    ecx,0x3f2
  425e5a:	call   0x42f124
  425e5f:	dec    DWORD PTR ds:0x45f994
  425e65:	push   ebx
  425e66:	push   esi
  425e67:	push   edi
  425e68:	mov    edi,DWORD PTR ds:0x44e144
  425e6e:	mov    ebx,DWORD PTR [edi+0xc]
  425e71:	sub    ebx,DWORD PTR [edi+0x8]
  425e74:	mov    esi,DWORD PTR [edi]
  425e76:	mov    DWORD PTR [edi+0x4],ebx
  425e79:	mov    DWORD PTR ds:0x44e0e8,ebx
  425e7f:	test   esi,esi
  425e81:	je     0x425e92
  425e83:	cmp    BYTE PTR ds:0x4631da,0x0
  425e8a:	jne    0x425eb1
  425e8c:	mov    eax,DWORD PTR [esi+0x1c]
  425e8f:	mov    DWORD PTR [eax+0x10],ebx
  425e92:	cmp    BYTE PTR ds:0x4631da,0x0
  425e99:	jne    0x425eb1
  425e9b:	cmp    DWORD PTR [edi+0x20],0x1
  425e9f:	jbe    0x425eb1
  425ea1:	test   BYTE PTR [edi+0x14],0x1
  425ea5:	jne    0x425eb1
  425ea7:	mov    eax,DWORD PTR [edi+0x18]
  425eaa:	test   eax,eax
  425eac:	je     0x425eb1
  425eae:	mov    BYTE PTR [eax],0x69
  425eb1:	cmp    DWORD PTR ds:0x45f994,0x0
  425eb8:	push   0x3
  425eba:	pop    ecx
  425ebb:	jne    0x425ef1
  425ebd:	mov    ebx,DWORD PTR [ebp+0x8]
  425ec0:	mov    ax,WORD PTR [ebx+0x1]
  425ec4:	sub    ax,cx
  425ec7:	je     0x425ed5
  425ec9:	lea    ecx,[ebx+0x4]
  425ecc:	call   0x445afc
  425ed1:	cmp    eax,esi
  425ed3:	je     0x425f0b
  425ed5:	cmp    BYTE PTR [ebx+0x3],0xd
  425ed9:	mov    ecx,0x3f2
  425ede:	jne    0x425eea
  425ee0:	lea    edx,[ebx+0x4]
  425ee3:	call   0x42f140
  425ee8:	jmp    0x425f0b
  425eea:	call   0x42f124
  425eef:	jmp    0x425f0b
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    ax,WORD PTR [eax+0x1]
  425ef8:	sub    ax,cx
  425efb:	je     0x425f17
  425efd:	push   0x0
  425eff:	xor    edx,edx
  425f01:	mov    ecx,0x7d8
  425f06:	call   0x42ee80
  425f0b:	mov    edi,DWORD PTR ds:0x44e144
  425f11:	mov    ebx,DWORD PTR ds:0x44e0e8
  425f17:	mov    al,BYTE PTR [edi+0x14]
  425f1a:	test   al,0x1
  425f1c:	je     0x425f53
  425f1e:	add    DWORD PTR ds:0x45f848,ebx
  425f24:	cmp    DWORD PTR ds:0x45f994,0x0
  425f2b:	je     0x425f33
  425f2d:	test   BYTE PTR [edi-0x18],0x1
  425f31:	jne    0x425f53
  425f33:	test   al,0x8
  425f35:	jne    0x425f53
  425f37:	sub    ebx,DWORD PTR [edi+0x10]
  425f3a:	mov    edx,DWORD PTR ds:0x44e12c
  425f40:	mov    ecx,ebx
  425f42:	call   0x4261de
  425f47:	mov    ebx,DWORD PTR ds:0x44e0e8
  425f4d:	mov    edi,DWORD PTR ds:0x44e144
  425f53:	cmp    DWORD PTR ds:0x45f994,0x0
  425f5a:	je     0x425fa4
  425f5c:	movzx  ecx,WORD PTR ds:0x44e134
  425f63:	mov    eax,DWORD PTR [edi+0x28]
  425f66:	xor    edx,edx
  425f68:	div    ecx
  425f6a:	mov    eax,ecx
  425f6c:	sub    eax,edx
  425f6e:	mov    edx,eax
  425f70:	sub    edx,ecx
  425f72:	neg    edx
  425f74:	sbb    edx,edx
  425f76:	and    edx,eax
  425f78:	mov    eax,DWORD PTR [edi+0x1c]
  425f7b:	mov    BYTE PTR [eax+0x2],dl
  425f7e:	movzx  eax,WORD PTR [edi-0x6]
  425f82:	cmp    WORD PTR ds:0x44e134,ax
  425f89:	jae    0x425f91
  425f8b:	mov    ds:0x44e134,ax
  425f91:	cmp    BYTE PTR ds:0x4631da,0x0
  425f98:	jne    0x425fa7
  425f9a:	add    ebx,edx
  425f9c:	mov    DWORD PTR ds:0x44e0e8,ebx
  425fa2:	jmp    0x425fa7
  425fa4:	mov    edx,DWORD PTR [ebp+0x8]
  425fa7:	sub    edi,0x2c
  425faa:	cmp    DWORD PTR ds:0x45f994,0x0
  425fb1:	mov    DWORD PTR ds:0x44e144,edi
  425fb7:	jne    0x42615f
  425fbd:	cmp    BYTE PTR ds:0x4631da,0x0
  425fc4:	mov    eax,ds:0x44e154
  425fc9:	mov    ds:0x45f848,eax
  425fce:	je     0x426066
  425fd4:	cmp    DWORD PTR ds:0x44e13c,0x0
  425fdb:	je     0x425ff4
  425fdd:	mov    edx,DWORD PTR ds:0x44e148
  425fe3:	mov    ecx,0x871
  425fe8:	movzx  eax,BYTE PTR [edx+0x5]
  425fec:	push   eax
  425fed:	sub    edx,eax
  425fef:	call   0x42f15d
  425ff4:	mov    eax,ds:0x44e118
  425ff9:	test   eax,eax
  425ffb:	je     0x42604f
  425ffd:	mov    cl,BYTE PTR [eax]
  425fff:	cmp    cl,0x61
  426002:	jae    0x426028
  426004:	cmp    cl,0x53
  426007:	je     0x426028
  426009:	cmp    cl,0x4e
  42600c:	je     0x426028
  42600e:	cmp    cl,0xa
  426011:	jb     0x426018
  426013:	cmp    cl,0x1b
  426016:	jb     0x426028
  426018:	cmp    cl,0x77
  42601b:	je     0x426028
  42601d:	mov    ecx,eax
  42601f:	call   0x428f71
  426024:	test   eax,eax
  426026:	jne    0x425ffd
  426028:	mov    ds:0x44e118,eax
  42602d:	test   eax,eax
  42602f:	je     0x42604f
  426031:	cmp    BYTE PTR [eax],0x6b
  426034:	je     0x42603d
  426036:	mov    ecx,0x873
  42603b:	jmp    0x426054
  42603d:	mov    ecx,eax
  42603f:	call   0x428f71
  426044:	mov    ds:0x44e118,eax
  426049:	test   eax,eax
  42604b:	je     0x426066
  42604d:	jmp    0x426036
  42604f:	mov    ecx,0x874
  426054:	mov    edx,DWORD PTR ds:0x44e148
  42605a:	movzx  eax,BYTE PTR [edx+0x5]
  42605e:	push   eax
  42605f:	sub    edx,eax
  426061:	call   0x42f15d
  426066:	mov    ecx,esi
  426068:	call   0x425dea
  42606d:	mov    ecx,eax
  42606f:	movzx  eax,WORD PTR ds:0x44e134
  426076:	cmp    ecx,eax
  426078:	jb     0x42607c
  42607a:	mov    ecx,eax
  42607c:	mov    eax,ds:0x45f848
  426081:	xor    edx,edx
  426083:	div    ecx
  426085:	mov    eax,ecx
  426087:	sub    eax,edx
  426089:	mov    edx,DWORD PTR ds:0x44e12c
  42608f:	mov    edi,eax
  426091:	sub    edi,ecx
  426093:	neg    edi
  426095:	sbb    edi,edi
  426097:	and    edi,eax
  426099:	mov    ecx,edi
  42609b:	call   0x4261de
  4260a0:	mov    cl,BYTE PTR ds:0x4631da
  4260a6:	test   cl,cl
  4260a8:	jne    0x4260c7
  4260aa:	mov    eax,DWORD PTR [esi+0x1c]
  4260ad:	add    DWORD PTR [eax+0x10],edi
  4260b0:	cmp    DWORD PTR ds:0x45f848,0x0
  4260b7:	mov    ax,ds:0x44e134
  4260bd:	mov    WORD PTR [esi+0x28],ax
  4260c1:	jne    0x4260c7
  4260c3:	or     BYTE PTR [esi+0x2a],0x1
  4260c7:	cmp    BYTE PTR ds:0x44e043,0x0
  4260ce:	je     0x4260db
  4260d0:	call   0x438545
  4260d5:	mov    cl,BYTE PTR ds:0x4631da
  4260db:	push   0x3
  4260dd:	pop    ebx
  4260de:	test   cl,cl
  4260e0:	jne    0x42611a
  4260e2:	mov    edx,DWORD PTR ds:0x44e12c
  4260e8:	mov    BYTE PTR ds:0x44e4ea,cl
  4260ee:	mov    ecx,0x44e4e8
  4260f3:	mov    BYTE PTR ds:0x44e4e8,0x6b
  4260fa:	mov    BYTE PTR ds:0x44e4e9,bl
  426100:	call   0x43f399
  426105:	cmp    BYTE PTR ds:0x4631da,0x0
  42610c:	jne    0x42611a
  42610e:	mov    eax,ds:0x44e124
  426113:	and    BYTE PTR [esi+0x7],0xdf
  426117:	mov    DWORD PTR [esi+0x24],eax
  42611a:	mov    eax,ds:0x44e130
  42611f:	mov    ds:0x448884,eax
  426124:	mov    DWORD PTR ds:0x448988,0x404a40
  42612e:	mov    DWORD PTR ds:0x4486fb,0x4482be
  426138:	mov    DWORD PTR ds:0x4486ff,0x4482d5
  426142:	mov    DWORD PTR ds:0x4486ab,0x44809e
  42614c:	mov    DWORD PTR ds:0x448db8,0x438ae0
  426156:	mov    BYTE PTR ds:0x4631da,0x0
  42615d:	jmp    0x4261b6
  42615f:	test   esi,esi
  426161:	je     0x426175
  426163:	mov    eax,DWORD PTR [edi+0x54]
  426166:	add    eax,DWORD PTR [edi+0x30]
  426169:	sub    eax,ebx
  42616b:	add    DWORD PTR [esi+0x24],edx
  42616e:	mov    ds:0x45f848,eax
  426173:	jmp    0x42617b
  426175:	sub    DWORD PTR ds:0x45f848,ebx
  42617b:	test   BYTE PTR [edi+0x14],0x2
  42617f:	jne    0x426184
  426181:	mov    DWORD PTR [edi+0x10],ebx
  426184:	call   0x425911
  426189:	test   BYTE PTR [edi+0x40],0x8
  42618d:	push   0x3
  42618f:	pop    ebx
  426190:	jne    0x4261b6
  426192:	mov    edx,DWORD PTR ds:0x44e12c
  426198:	mov    ecx,0x44e4e8
  42619d:	mov    BYTE PTR ds:0x44e4e8,0x6b
  4261a4:	mov    BYTE PTR ds:0x44e4e9,bl
  4261aa:	mov    BYTE PTR ds:0x44e4ea,0x0
  4261b1:	call   0x43f399
  4261b6:	cmp    DWORD PTR ds:0x45f994,0x0
  4261bd:	mov    eax,DWORD PTR [ebp+0x8]
  4261c0:	mov    BYTE PTR [eax],0x4f
  4261c3:	jne    0x4261d1
  4261c5:	cmp    BYTE PTR [ebp-0x1],0x0
  4261c9:	jne    0x4261d1
  4261cb:	mov    WORD PTR [eax+0x1],bx
  4261cf:	jmp    0x4261d7
  4261d1:	xor    ecx,ecx
  4261d3:	mov    WORD PTR [eax+0x1],cx
  4261d7:	pop    edi
  4261d8:	pop    esi
  4261d9:	pop    ebx
  4261da:	leave  
  4261db:	ret    0x4
  4261de:	push   esi
  4261df:	mov    esi,ecx
  4261e1:	push   edi
  4261e2:	mov    edi,edx
  4261e4:	test   esi,esi
  4261e6:	je     0x426226
  4261e8:	mov    ecx,DWORD PTR ds:0x44e118
  4261ee:	push   ebx
  4261ef:	mov    ebx,0xff
  4261f4:	mov    eax,ebx
  4261f6:	cmp    esi,ebx
  4261f8:	ja     0x4261fc
  4261fa:	mov    eax,esi
  4261fc:	mov    ds:0x44db0f,al
  426201:	movzx  eax,al
  426204:	sub    esi,eax
  426206:	cmp    BYTE PTR ds:0x4631da,0x0
  42620d:	jne    0x426250
  42620f:	mov    edx,edi
  426211:	mov    ecx,0x44db0c
  426216:	call   0x43f399
  42621b:	mov    ecx,DWORD PTR ds:0x44e118
  426221:	test   esi,esi
  426223:	jne    0x4261f4
  426225:	pop    ebx
  426226:	pop    edi
  426227:	pop    esi
  426228:	ret    
  426229:	mov    al,BYTE PTR [ecx]
  42622b:	cmp    al,0x61
  42622d:	jae    0x426221
  42622f:	cmp    al,0x53
  426231:	je     0x426221
  426233:	cmp    al,0x4e
  426235:	je     0x426221
  426237:	cmp    al,0xa
  426239:	jb     0x42623f
  42623b:	cmp    al,0x1b
  42623d:	jb     0x426221
  42623f:	cmp    al,0x77
  426241:	je     0x426221
  426243:	call   0x428f71
  426248:	mov    ecx,eax
  42624a:	mov    DWORD PTR ds:0x44e118,ecx
  426250:	test   ecx,ecx
  426252:	jne    0x426229
  426254:	jmp    0x426221
  426256:	push   ebp
  426257:	mov    ebp,esp
  426259:	push   ecx
  42625a:	mov    eax,ds:0x44e144
  42625f:	push   ebx
  426260:	mov    ax,WORD PTR [eax+0x24]
  426264:	push   edi
  426265:	xor    edi,edi
  426267:	cmp    BYTE PTR ds:0x4631da,0x0
  42626e:	mov    ebx,ecx
  426270:	mov    ds:0x45f98c,ax
  426276:	je     0x4262d0
  426278:	call   0x445afc
  42627d:	mov    ecx,eax
  42627f:	test   ecx,ecx
  426281:	jne    0x426292
  426283:	xor    eax,eax
  426285:	mov    ds:0x45f98c,ax
  42628b:	xor    eax,eax
  42628d:	jmp    0x42636a
  426292:	mov    edx,DWORD PTR ds:0x44e144
  426298:	cmp    BYTE PTR [ecx+0x6],0xb
  42629c:	jne    0x4262a8
  42629e:	mov    al,BYTE PTR [edx+0x24]
  4262a1:	xor    al,BYTE PTR [ecx+0x22]
  4262a4:	test   al,0x4
  4262a6:	je     0x4262b0
  4262a8:	mov    ecx,DWORD PTR [ecx]
  4262aa:	test   ecx,ecx
  4262ac:	jne    0x426298
  4262ae:	jmp    0x426283
  4262b0:	xor    eax,eax
  4262b2:	mov    ds:0x45f98c,ax
  4262b8:	mov    eax,ds:0x44e13c
  4262bd:	cmp    ecx,eax
  4262bf:	jne    0x42628b
  4262c1:	mov    eax,DWORD PTR [eax+0x18]
  4262c4:	mov    ds:0x44e13c,eax
  4262c9:	mov    eax,ecx
  4262cb:	jmp    0x42636a
  4262d0:	mov    eax,DWORD PTR [ebx]
  4262d2:	push   esi
  4262d3:	mov    DWORD PTR [ebp-0x4],eax
  4262d6:	test   eax,eax
  4262d8:	je     0x42630a
  4262da:	lea    esi,[eax+0x5]
  4262dd:	movzx  ecx,BYTE PTR [esi]
  4262e0:	add    ecx,0x5
  4262e3:	call   0x43f45b
  4262e8:	mov    ebx,eax
  4262ea:	mov    eax,DWORD PTR [ebp-0x4]
  4262ed:	and    DWORD PTR [ebx],0x0
  4262f0:	movzx  ecx,BYTE PTR [esi]
  4262f3:	push   ecx
  4262f4:	sub    eax,ecx
  4262f6:	push   eax
  4262f7:	lea    ecx,[ebx+0x5]
  4262fa:	push   ecx
  4262fb:	mov    edi,ebx
  4262fd:	call   0x447646
  426302:	mov    al,BYTE PTR [esi]
  426304:	add    esp,0xc
  426307:	mov    BYTE PTR [ebx+0x4],al
  42630a:	push   0xb
  42630c:	pop    edx
  42630d:	mov    ecx,ebx
  42630f:	call   0x4458d0
  426314:	mov    esi,eax
  426316:	test   esi,esi
  426318:	jne    0x426330
  42631a:	mov    ds:0x45f98c,ax
  426320:	test   edi,edi
  426322:	je     0x42632c
  426324:	push   edi
  426325:	call   DWORD PTR ds:0x464354
  42632b:	pop    ecx
  42632c:	xor    eax,eax
  42632e:	jmp    0x426369
  426330:	test   edi,edi
  426332:	je     0x42633c
  426334:	push   edi
  426335:	call   DWORD PTR ds:0x464354
  42633b:	pop    ecx
  42633c:	mov    eax,ds:0x44e13c
  426341:	mov    DWORD PTR ds:0x44e13c,esi
  426347:	mov    DWORD PTR [eax+0x18],esi
  42634a:	mov    eax,ds:0x45f848
  42634f:	mov    DWORD PTR [esi+0x24],eax
  426352:	mov    eax,ds:0x44e144
  426357:	mov    ax,WORD PTR [eax+0x24]
  42635b:	mov    WORD PTR [esi+0x22],ax
  42635f:	xor    eax,eax
  426361:	mov    ds:0x45f98c,ax
  426367:	mov    eax,esi
  426369:	pop    esi
  42636a:	pop    edi
  42636b:	pop    ebx
  42636c:	leave  
  42636d:	ret    
  42636e:	push   ebp
  42636f:	mov    ebp,esp
  426371:	push   ecx
  426372:	push   ebx
  426373:	mov    ebx,DWORD PTR [ebp+0x8]
  426376:	push   esi
  426377:	movzx  ecx,BYTE PTR [ebx]
  42637a:	push   edi
  42637b:	call   0x446047
  426380:	mov    ecx,eax
  426382:	mov    ax,ds:0x44e138
  426388:	mov    DWORD PTR ds:0x45f998,ecx
  42638e:	cmp    cx,ax
  426391:	jb     0x426396
  426393:	movzx  ecx,ax
  426396:	mov    eax,ds:0x45f848
  42639b:	xor    edx,edx
  42639d:	div    ecx
  42639f:	mov    eax,ecx
  4263a1:	sub    eax,edx
  4263a3:	mov    edi,eax
  4263a5:	sub    edi,ecx
  4263a7:	neg    edi
  4263a9:	sbb    edi,edi
  4263ab:	and    edi,eax
  4263ad:	cmp    cx,WORD PTR ds:0x44e134
  4263b4:	jbe    0x4263bd
  4263b6:	mov    WORD PTR ds:0x44e134,cx
  4263bd:	add    ebx,0x3
  4263c0:	xor    esi,esi
  4263c2:	cmp    BYTE PTR [ebx],0xd
  4263c5:	jne    0x426439
  4263c7:	lea    ecx,[ebx+0x1]
  4263ca:	call   0x426256
  4263cf:	mov    esi,eax
  4263d1:	test   esi,esi
  4263d3:	jne    0x4263f6
  4263d5:	cmp    BYTE PTR ds:0x4631da,al
  4263db:	je     0x426430
  4263dd:	mov    edx,DWORD PTR ds:0x44e148
  4263e3:	movzx  ecx,BYTE PTR [edx+0x5]
  4263e7:	push   ecx
  4263e8:	sub    edx,ecx
  4263ea:	mov    ecx,0x870
  4263ef:	call   0x42f15d
  4263f4:	jmp    0x426430
  4263f6:	cmp    BYTE PTR ds:0x4631da,0x0
  4263fd:	je     0x42641f
  4263ff:	mov    eax,ds:0x45f848
  426404:	add    eax,edi
  426406:	cmp    DWORD PTR [esi+0x24],eax
  426409:	je     0x426430
  42640b:	mov    edx,DWORD PTR ds:0x44e148
  426411:	mov    ecx,0x875
  426416:	movzx  eax,BYTE PTR [edx+0x5]
  42641a:	push   eax
  42641b:	sub    edx,eax
  42641d:	jmp    0x4263ef
  42641f:	mov    ecx,DWORD PTR ds:0x45f998
  426425:	add    DWORD PTR [esi+0x24],edi
  426428:	call   0x444865
  42642d:	mov    DWORD PTR [esi+0x1c],eax
  426430:	movzx  eax,BYTE PTR [ebx+0x5]
  426434:	add    ebx,0x6
  426437:	add    ebx,eax
  426439:	mov    eax,ds:0x44e144
  42643e:	test   BYTE PTR [eax+0x14],0x2
  426442:	jne    0x42645a
  426444:	mov    eax,ds:0x44e12c
  426449:	mov    edx,eax
  42644b:	mov    ecx,edi
  42644d:	mov    DWORD PTR [ebp-0x4],eax
  426450:	call   0x4261de
  426455:	mov    edx,DWORD PTR [ebp-0x4]
  426458:	jmp    0x42645c
  42645a:	xor    edx,edx
  42645c:	mov    eax,DWORD PTR [ebx]
  42645e:	mov    ds:0x44e110,eax
  426463:	add    eax,0x4
  426466:	push   0x0
  426468:	lea    ecx,[ebp-0x4]
  42646b:	mov    DWORD PTR [ebp-0x4],eax
  42646e:	call   0x425376
  426473:	cmp    BYTE PTR ds:0x4631da,0x0
  42647a:	jne    0x426482
  42647c:	add    DWORD PTR ds:0x44e0e8,edi
  426482:	test   esi,esi
  426484:	je     0x4264aa
  426486:	cmp    DWORD PTR ds:0x448990,0x2
  42648d:	jb     0x426496
  42648f:	mov    ecx,esi
  426491:	call   0x424fa6
  426496:	mov    ax,ds:0x44e0e4
  42649c:	mov    WORD PTR [esi+0x28],ax
  4264a0:	mov    ax,ds:0x44e0e0
  4264a6:	mov    WORD PTR [esi+0x2a],ax
  4264aa:	mov    ecx,DWORD PTR ds:0x44e144
  4264b0:	pop    edi
  4264b1:	test   BYTE PTR [ecx+0x14],0x2
  4264b5:	pop    esi
  4264b6:	pop    ebx
  4264b7:	jne    0x4264e1
  4264b9:	cmp    BYTE PTR ds:0x44e00a,0x0
  4264c0:	mov    eax,ds:0x44e0e8
  4264c5:	mov    DWORD PTR [ecx+0x10],eax
  4264c8:	je     0x4264e1
  4264ca:	mov    edx,DWORD PTR ds:0x44e12c
  4264d0:	mov    ecx,0x44db08
  4264d5:	mov    BYTE PTR ds:0x44db08,0x6b
  4264dc:	call   0x43f399
  4264e1:	mov    eax,DWORD PTR [ebp+0x8]
  4264e4:	xor    ecx,ecx
  4264e6:	mov    WORD PTR [eax+0x1],cx
  4264ea:	call   0x425911
  4264ef:	mov    ecx,0x44e108
  4264f4:	call   0x43f37f
  4264f9:	mov    eax,ds:0x44e144
  4264fe:	inc    DWORD PTR [eax+0x20]
  426501:	leave  
  426502:	ret    0x4
  426505:	push   ebp
  426506:	mov    ebp,esp
  426508:	push   ecx
  426509:	push   ecx
  42650a:	push   ebx
  42650b:	mov    ebx,DWORD PTR [ebp+0x8]
  42650e:	push   esi
  42650f:	mov    cl,BYTE PTR [ebx]
  426511:	push   edi
  426512:	call   0x43859a
  426517:	mov    edi,DWORD PTR ds:0x45f998
  42651d:	mov    ax,ds:0x44e138
  426523:	lea    esi,[ebx+0x3]
  426526:	cmp    di,ax
  426529:	jb     0x42652e
  42652b:	movzx  edi,ax
  42652e:	mov    eax,ds:0x45f848
  426533:	xor    edx,edx
  426535:	div    edi
  426537:	mov    eax,edi
  426539:	sub    eax,edx
  42653b:	sub    edi,eax
  42653d:	neg    edi
  42653f:	sbb    edi,edi
  426541:	xor    ecx,ecx
  426543:	and    edi,eax
  426545:	xor    edx,edx
  426547:	xor    ebx,ebx
  426549:	cmp    BYTE PTR [esi],0xd
  42654c:	mov    DWORD PTR [ebp-0x4],ecx
  42654f:	jne    0x426560
  426551:	movzx  eax,BYTE PTR [esi+0x5]
  426555:	lea    ecx,[esi+0x1]
  426558:	add    esi,0x6
  42655b:	mov    DWORD PTR [ebp-0x4],ecx
  42655e:	add    esi,eax
  426560:	mov    al,BYTE PTR [esi]
  426562:	cmp    al,0xf
  426564:	jb     0x42656f
  426566:	cmp    al,0x1f
  426568:	ja     0x42656f
  42656a:	mov    eax,esi
  42656c:	inc    esi
  42656d:	jmp    0x42658a
  42656f:	cmp    al,0xd
  426571:	jne    0x426581
  426573:	movzx  eax,BYTE PTR [esi+0x5]
  426577:	lea    edx,[esi+0x1]
  42657a:	add    esi,0x6
  42657d:	add    esi,eax
  42657f:	jmp    0x426588
  426581:	mov    edx,ecx
  426583:	xor    ecx,ecx
  426585:	mov    DWORD PTR [ebp-0x4],ecx
  426588:	xor    eax,eax
  42658a:	test   eax,eax
  42658c:	je     0x42659e
  42658e:	movzx  eax,BYTE PTR [eax]
  426591:	sub    eax,0xe
  426594:	imul   eax,eax,0x1c
  426597:	add    eax,0x449418
  42659c:	jmp    0x4265ab
  42659e:	mov    ecx,edx
  4265a0:	call   0x445afc
  4265a5:	mov    eax,DWORD PTR [eax+0x18]
  4265a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4265ab:	mov    DWORD PTR [ebp-0x8],eax
  4265ae:	test   ecx,ecx
  4265b0:	je     0x4265cf
  4265b2:	call   0x426256
  4265b7:	mov    ebx,eax
  4265b9:	test   ebx,ebx
  4265bb:	je     0x4265cf
  4265bd:	cmp    BYTE PTR ds:0x4631da,0x0
  4265c4:	jne    0x4265cf
  4265c6:	mov    eax,DWORD PTR [ebp-0x8]
  4265c9:	add    DWORD PTR [ebx+0x24],edi
  4265cc:	mov    DWORD PTR [ebx+0x1c],eax
  4265cf:	mov    eax,ds:0x44e144
  4265d4:	test   BYTE PTR [eax+0x14],0x2
  4265d8:	jne    0x4265ed
  4265da:	mov    eax,ds:0x44e12c
  4265df:	mov    edx,eax
  4265e1:	mov    ecx,edi
  4265e3:	mov    DWORD PTR [ebp-0x4],eax
  4265e6:	call   0x4261de
  4265eb:	jmp    0x4265f1
  4265ed:	and    DWORD PTR [ebp-0x4],0x0
  4265f1:	mov    eax,DWORD PTR [esi+0x1]
  4265f4:	mov    edx,DWORD PTR [ebp-0x4]
  4265f7:	mov    ds:0x44e110,eax
  4265fc:	add    eax,0x4
  4265ff:	push   0x0
  426601:	lea    ecx,[ebp-0x8]
  426604:	mov    DWORD PTR [ebp-0x8],eax
  426607:	call   0x425376
  42660c:	cmp    BYTE PTR ds:0x4631da,0x0
  426613:	mov    eax,ds:0x44e0e8
  426618:	jne    0x426621
  42661a:	add    eax,edi
  42661c:	mov    ds:0x44e0e8,eax
  426621:	mov    esi,DWORD PTR ds:0x44e144
  426627:	test   BYTE PTR [esi+0x14],0x2
  42662b:	jne    0x426653
  42662d:	cmp    BYTE PTR ds:0x44e00a,0x0
  426634:	mov    DWORD PTR [esi+0x10],eax
  426637:	je     0x426653
  426639:	mov    edx,DWORD PTR [ebp-0x4]
  42663c:	mov    ecx,0x44db04
  426641:	mov    BYTE PTR ds:0x44db04,0x6b
  426648:	call   0x43f399
  42664d:	mov    esi,DWORD PTR ds:0x44e144
  426653:	test   ebx,ebx
  426655:	je     0x426681
  426657:	cmp    DWORD PTR ds:0x448990,0x2
  42665e:	jb     0x42666d
  426660:	mov    ecx,ebx
  426662:	call   0x424fa6
  426667:	mov    esi,DWORD PTR ds:0x44e144
  42666d:	mov    ax,ds:0x44e0e4
  426673:	mov    WORD PTR [ebx+0x28],ax
  426677:	mov    ax,ds:0x44e0e0
  42667d:	mov    WORD PTR [ebx+0x2a],ax
  426681:	mov    eax,DWORD PTR [ebp+0x8]
  426684:	xor    ecx,ecx
  426686:	mov    WORD PTR [eax+0x1],cx
  42668a:	call   0x425911
  42668f:	inc    DWORD PTR [esi+0x20]
  426692:	mov    ecx,0x44e108
  426697:	call   0x43f37f
  42669c:	pop    edi
  42669d:	pop    esi
  42669e:	pop    ebx
  42669f:	leave  
  4266a0:	ret    0x4
  4266a3:	cmp    BYTE PTR ds:0x45f83a,0xa
  4266aa:	mov    eax,ds:0x44e0ec
  4266af:	push   esi
  4266b0:	mov    DWORD PTR [eax+0x5],0x44e4e8
  4266b7:	jne    0x4266c0
  4266b9:	mov    BYTE PTR ds:0x45f853,0x1
  4266c0:	mov    edx,eax
  4266c2:	add    eax,0x9
  4266c5:	mov    ds:0x44e0ec,eax
  4266ca:	call   0x44303b
  4266cf:	cmp    BYTE PTR ds:0x4631da,0x0
  4266d6:	mov    esi,eax
  4266d8:	mov    eax,ds:0x44e0ec
  4266dd:	mov    BYTE PTR ds:0x45f853,0x0
  4266e4:	jne    0x426728
  4266e6:	jmp    0x426723
  4266e8:	mov    edx,DWORD PTR ds:0x44e104
  4266ee:	mov    ecx,esi
  4266f0:	call   0x43f399
  4266f5:	cmp    BYTE PTR [esi],0x63
  4266f8:	jne    0x426718
  4266fa:	cmp    BYTE PTR [esi+0x4],0xd
  4266fe:	jne    0x426718
  426700:	mov    edx,DWORD PTR [esi+0x5]
  426703:	test   edx,edx
  426705:	je     0x426718
  426707:	mov    cl,BYTE PTR [edx+0x7]
  42670a:	mov    al,cl
  42670c:	and    al,0x3
  42670e:	cmp    al,0x3
  426710:	jne    0x426718
  426712:	or     cl,0x80
  426715:	mov    BYTE PTR [edx+0x7],cl
  426718:	movzx  eax,WORD PTR [esi+0x1]
  42671c:	add    esi,eax
  42671e:	mov    eax,ds:0x44e0ec
  426723:	cmp    esi,DWORD PTR [eax+0x5]
  426726:	jb     0x4266e8
  426728:	sub    eax,0x9
  42672b:	mov    ds:0x44e0ec,eax
  426730:	pop    esi
  426731:	ret    
  426732:	push   ebp
  426733:	mov    ebp,esp
  426735:	and    esp,0xfffffff8
  426738:	push   ecx
  426739:	push   ebx
  42673a:	push   esi
  42673b:	mov    esi,edx
  42673d:	mov    ebx,ecx
  42673f:	mov    ecx,DWORD PTR [esi]
  426741:	push   edi
  426742:	jmp    0x4267e2
  426747:	cmp    al,0x53
  426749:	je     0x4267a5
  42674b:	xor    eax,eax
  42674d:	mov    edi,0x44e108
  426752:	stos   DWORD PTR es:[edi],eax
  426753:	stos   DWORD PTR es:[edi],eax
  426754:	stos   DWORD PTR es:[edi],eax
  426755:	stos   DWORD PTR es:[edi],eax
  426756:	mov    DWORD PTR ds:0x44e104,0x44e108
  426760:	call   0x4266a3
  426765:	mov    edx,DWORD PTR ds:0x44e104
  42676b:	mov    ecx,0x448878
  426770:	mov    BYTE PTR ds:0x448878,0x6b
  426777:	call   0x43f399
  42677c:	mov    eax,ds:0x44e110
  426781:	add    eax,0x4
  426784:	cmp    DWORD PTR ds:0x45f994,0x0
  42678b:	mov    ds:0x448873,eax
  426790:	mov    DWORD PTR ds:0x44886f,ebx
  426796:	mov    ecx,0x44886c
  42679b:	je     0x4267cc
  42679d:	mov    edx,DWORD PTR ds:0x44e12c
  4267a3:	jmp    0x4267d2
  4267a5:	mov    edx,DWORD PTR ds:0x448884
  4267ab:	call   0x43f399
  4267b0:	mov    ecx,DWORD PTR [esp+0xc]
  4267b4:	call   0x428f71
  4267b9:	lea    edx,[esp+0xc]
  4267bd:	mov    ecx,ebx
  4267bf:	mov    DWORD PTR [esp+0xc],eax
  4267c3:	call   0x426732
  4267c8:	mov    ecx,DWORD PTR [esp+0xc]
  4267cc:	mov    edx,DWORD PTR ds:0x448884
  4267d2:	call   0x43f399
  4267d7:	mov    ecx,DWORD PTR [esp+0xc]
  4267db:	call   0x428f71
  4267e0:	mov    ecx,eax
  4267e2:	mov    DWORD PTR [esp+0xc],ecx
  4267e6:	mov    al,BYTE PTR [ecx]
  4267e8:	cmp    al,0x4e
  4267ea:	jne    0x426747
  4267f0:	pop    edi
  4267f1:	mov    DWORD PTR [esi],ecx
  4267f3:	pop    esi
  4267f4:	pop    ebx
  4267f5:	mov    esp,ebp
  4267f7:	pop    ebp
  4267f8:	ret    
  4267f9:	push   ebp
  4267fa:	mov    ebp,esp
  4267fc:	sub    esp,0xc0
  426802:	mov    eax,ds:0x448858
  426807:	xor    eax,ebp
  426809:	mov    DWORD PTR [ebp-0x4],eax
  42680c:	push   ebx
  42680d:	push   esi
  42680e:	mov    ebx,edx
  426810:	mov    esi,ecx
  426812:	lea    eax,[ebp-0xb8]
  426818:	mov    DWORD PTR [ebp-0xbc],esi
  42681e:	mov    ds:0x44e0ec,eax
  426823:	mov    DWORD PTR [ebp-0xb3],0x44f0a0
  42682d:	mov    DWORD PTR ds:0x44e0f0,0x44e4eb
  426837:	test   ebx,ebx
  426839:	je     0x426913
  42683f:	push   edi
  426840:	cmp    BYTE PTR [ebx],0x53
  426843:	mov    ecx,ebx
  426845:	je     0x4268c5
  426847:	mov    esi,DWORD PTR ds:0x45f880
  42684d:	xor    eax,eax
  42684f:	mov    edi,0x44e108
  426854:	stos   DWORD PTR es:[edi],eax
  426855:	stos   DWORD PTR es:[edi],eax
  426856:	stos   DWORD PTR es:[edi],eax
  426857:	stos   DWORD PTR es:[edi],eax
  426858:	mov    DWORD PTR ds:0x44e104,0x44e108
  426862:	call   0x4266a3
  426867:	mov    edx,DWORD PTR ds:0x44e104
  42686d:	mov    ecx,0x448878
  426872:	mov    BYTE PTR ds:0x448878,0x6b
  426879:	call   0x43f399
  42687e:	mov    eax,ds:0x44e110
  426883:	add    eax,0x4
  426886:	mov    ds:0x448873,eax
  42688b:	mov    eax,DWORD PTR [ebp-0xbc]
  426891:	mov    ds:0x44886f,eax
  426896:	cmp    esi,DWORD PTR ds:0x45f880
  42689c:	jne    0x4268ff
  42689e:	cmp    DWORD PTR ds:0x45f994,0x0
  4268a5:	mov    edx,DWORD PTR ds:0x44e12c
  4268ab:	mov    ecx,0x44886c
  4268b0:	jne    0x4268b8
  4268b2:	mov    edx,DWORD PTR ds:0x448884
  4268b8:	call   0x43f399
  4268bd:	mov    esi,DWORD PTR [ebp-0xbc]
  4268c3:	jmp    0x426901
  4268c5:	mov    edx,DWORD PTR ds:0x448884
  4268cb:	call   0x43f399
  4268d0:	mov    ecx,ebx
  4268d2:	call   0x428f71
  4268d7:	lea    edx,[ebp-0xc0]
  4268dd:	mov    ecx,esi
  4268df:	mov    DWORD PTR [ebp-0xc0],eax
  4268e5:	call   0x426732
  4268ea:	mov    ebx,DWORD PTR [ebp-0xc0]
  4268f0:	mov    edx,DWORD PTR ds:0x448884
  4268f6:	mov    ecx,ebx
  4268f8:	call   0x43f399
  4268fd:	jmp    0x426901
  4268ff:	mov    esi,eax
  426901:	mov    ecx,ebx
  426903:	call   0x428f71
  426908:	mov    ebx,eax
  42690a:	test   ebx,ebx
  42690c:	jne    0x426840
  426912:	pop    edi
  426913:	mov    ecx,DWORD PTR [ebp-0x4]
  426916:	xor    eax,eax
  426918:	pop    esi
  426919:	xor    ecx,ebp
  42691b:	mov    ds:0x462d61,ax
  426921:	pop    ebx
  426922:	call   0x446dc7
  426927:	leave  
  426928:	ret    
  426929:	push   ebp
  42692a:	mov    ebp,esp
  42692c:	sub    esp,0x110
  426932:	mov    eax,ds:0x448858
  426937:	xor    eax,ebp
  426939:	mov    DWORD PTR [ebp-0x4],eax
  42693c:	cmp    DWORD PTR ds:0x45f834,0x0
  426943:	push   esi
  426944:	mov    esi,DWORD PTR [ebp+0x8]
  426947:	jne    0x42696b
  426949:	cmp    DWORD PTR ds:0x45f994,0x0
  426950:	jne    0x42696b
  426952:	push   0x0
  426954:	xor    edx,edx
  426956:	mov    ecx,0x7f2
  42695b:	call   0x42ee80
  426960:	xor    eax,eax
  426962:	mov    WORD PTR [esi+0x1],ax
  426966:	jmp    0x426dc0
  42696b:	mov    cl,BYTE PTR [esi]
  42696d:	push   ebx
  42696e:	push   edi
  42696f:	call   0x43859a
  426974:	lea    ecx,[esi+0x4]
  426977:	xor    eax,eax
  426979:	mov    WORD PTR [esi+0x1],ax
  42697d:	movzx  edi,BYTE PTR [ecx+0x4]
  426981:	add    edi,0x5
  426984:	add    edi,ecx
  426986:	mov    DWORD PTR [ebp-0x10c],ecx
  42698c:	cmp    BYTE PTR [edi],0xd
  42698f:	jne    0x42699f
  426991:	movzx  eax,BYTE PTR [edi+0x5]
  426995:	lea    ebx,[edi+0x1]
  426998:	add    edi,0x6
  42699b:	add    edi,eax
  42699d:	jmp    0x4269a7
  42699f:	mov    ebx,ecx
  4269a1:	mov    DWORD PTR [ebp-0x10c],eax
  4269a7:	mov    ecx,ebx
  4269a9:	call   0x445afc
  4269ae:	mov    esi,eax
  4269b0:	test   esi,esi
  4269b2:	jne    0x4269c5
  4269b4:	mov    edx,ebx
  4269b6:	mov    ecx,0x7d8
  4269bb:	call   0x42f140
  4269c0:	jmp    0x426dbe
  4269c5:	cmp    BYTE PTR [esi+0x6],0xc
  4269c9:	jne    0x4269d1
  4269cb:	mov    eax,DWORD PTR [esi+0x18]
  4269ce:	mov    esi,DWORD PTR [eax+0x14]
  4269d1:	cmp    BYTE PTR [esi+0x6],0xa
  4269d5:	jne    0x4269ea
  4269d7:	test   BYTE PTR [esi+0x2a],0x1
  4269db:	je     0x4269ea
  4269dd:	xor    ebx,ebx
  4269df:	push   ebx
  4269e0:	mov    ecx,0x86f
  4269e5:	jmp    0x426b50
  4269ea:	cmp    BYTE PTR ds:0x4631da,0x0
  4269f1:	mov    ebx,DWORD PTR [esi+0x1c]
  4269f4:	mov    DWORD PTR [ebp-0x110],ebx
  4269fa:	mov    eax,DWORD PTR [ebx+0x10]
  4269fd:	mov    ds:0x45f998,eax
  426a02:	mov    eax,DWORD PTR [edi]
  426a04:	mov    ds:0x44e110,eax
  426a09:	lea    edi,[eax+0x4]
  426a0c:	mov    DWORD PTR [ebp-0x108],edi
  426a12:	je     0x426a92
  426a14:	mov    eax,ds:0x44e144
  426a19:	test   BYTE PTR [eax+0x14],0x2
  426a1d:	mov    eax,ds:0x44e118
  426a22:	jne    0x426a5d
  426a24:	test   eax,eax
  426a26:	je     0x426a61
  426a28:	mov    cl,BYTE PTR [eax]
  426a2a:	cmp    cl,0x61
  426a2d:	jae    0x426a5d
  426a2f:	cmp    cl,0x53
  426a32:	je     0x426a5d
  426a34:	cmp    cl,0x4e
  426a37:	je     0x426a5d
  426a39:	cmp    cl,0x50
  426a3c:	je     0x426a5d
  426a3e:	cmp    cl,0xa
  426a41:	jb     0x426a48
  426a43:	cmp    cl,0x1b
  426a46:	jb     0x426a5d
  426a48:	cmp    cl,0x77
  426a4b:	je     0x426a5d
  426a4d:	mov    ecx,eax
  426a4f:	call   0x428f71
  426a54:	mov    ds:0x44e118,eax
  426a59:	test   eax,eax
  426a5b:	jne    0x426a28
  426a5d:	test   eax,eax
  426a5f:	jne    0x426a68
  426a61:	mov    ecx,0x874
  426a66:	jmp    0x426a72
  426a68:	cmp    BYTE PTR [eax],0x69
  426a6b:	je     0x426a86
  426a6d:	mov    ecx,0x873
  426a72:	mov    edx,DWORD PTR ds:0x44e148
  426a78:	movzx  eax,BYTE PTR [edx+0x5]
  426a7c:	sub    edx,eax
  426a7e:	push   eax
  426a7f:	call   0x42f15d
  426a84:	jmp    0x426a92
  426a86:	mov    ecx,eax
  426a88:	call   0x428f71
  426a8d:	mov    ds:0x44e118,eax
  426a92:	cmp    BYTE PTR [esi+0x6],0xa
  426a96:	jne    0x426ac5
  426a98:	cmp    DWORD PTR ds:0x45f994,0x0
  426a9f:	jne    0x426ac5
  426aa1:	test   BYTE PTR [esi+0x2a],0x2
  426aa5:	je     0x426ac5
  426aa7:	cmp    WORD PTR [edi+0x1],0x3
  426aac:	je     0x426ac5
  426aae:	xor    edi,edi
  426ab0:	push   edi
  426ab1:	xor    edx,edx
  426ab3:	mov    ecx,0x881
  426ab8:	call   0x42ee80
  426abd:	mov    DWORD PTR [ebp-0x108],edi
  426ac3:	jmp    0x426ae1
  426ac5:	xor    edi,edi
  426ac7:	push   edi
  426ac8:	xor    edx,edx
  426aca:	lea    ecx,[ebp-0x108]
  426ad0:	call   0x425376
  426ad5:	mov    eax,DWORD PTR [ebp-0x108]
  426adb:	mov    DWORD PTR [ebp-0x108],eax
  426ae1:	cmp    BYTE PTR ds:0x4631da,0x0
  426ae8:	je     0x426b23
  426aea:	mov    ecx,DWORD PTR ds:0x44e118
  426af0:	test   ecx,ecx
  426af2:	jne    0x426afb
  426af4:	mov    ecx,0x874
  426af9:	jmp    0x426b05
  426afb:	cmp    BYTE PTR [ecx],0x6b
  426afe:	je     0x426b19
  426b00:	mov    ecx,0x873
  426b05:	mov    edx,DWORD PTR ds:0x44e148
  426b0b:	movzx  eax,BYTE PTR [edx+0x5]
  426b0f:	sub    edx,eax
  426b11:	push   eax
  426b12:	call   0x42f15d
  426b17:	jmp    0x426b23
  426b19:	call   0x428f71
  426b1e:	mov    ds:0x44e118,eax
  426b23:	cmp    DWORD PTR ds:0x45f994,0x0
  426b2a:	je     0x426cf6
  426b30:	mov    ecx,DWORD PTR ds:0x44e144
  426b36:	test   BYTE PTR [ecx+0x14],0x2
  426b3a:	jne    0x426b44
  426b3c:	mov    eax,ds:0x44e0e8
  426b41:	mov    DWORD PTR [ecx+0x10],eax
  426b44:	cmp    WORD PTR [esi+0x28],di
  426b48:	jne    0x426b5c
  426b4a:	push   edi
  426b4b:	mov    ecx,0x88f
  426b50:	xor    edx,edx
  426b52:	call   0x42ee80
  426b57:	jmp    0x426dbe
  426b5c:	cmp    BYTE PTR [esi+0x6],0xa
  426b60:	jne    0x426bbe
  426b62:	mov    ecx,esi
  426b64:	call   0x425dea
  426b69:	mov    edi,eax
  426b6b:	mov    ax,ds:0x44e138
  426b71:	cmp    di,ax
  426b74:	jb     0x426b79
  426b76:	movzx  edi,ax
  426b79:	mov    ecx,DWORD PTR ds:0x45f848
  426b7f:	xor    edx,edx
  426b81:	mov    eax,ecx
  426b83:	div    edi
  426b85:	mov    eax,edi
  426b87:	sub    eax,edx
  426b89:	mov    ebx,eax
  426b8b:	sub    ebx,edi
  426b8d:	neg    ebx
  426b8f:	sbb    ebx,ebx
  426b91:	and    ebx,eax
  426b93:	add    ecx,ebx
  426b95:	mov    DWORD PTR ds:0x45f848,ecx
  426b9b:	cmp    di,WORD PTR ds:0x44e134
  426ba2:	jbe    0x426bab
  426ba4:	mov    WORD PTR ds:0x44e134,di
  426bab:	mov    edx,DWORD PTR ds:0x44e12c
  426bb1:	mov    ecx,ebx
  426bb3:	call   0x4261de
  426bb8:	mov    ebx,DWORD PTR [ebp-0x110]
  426bbe:	mov    eax,DWORD PTR [ebp-0x10c]
  426bc4:	test   eax,eax
  426bc6:	je     0x426c40
  426bc8:	mov    ecx,eax
  426bca:	call   0x426256
  426bcf:	test   eax,eax
  426bd1:	je     0x426dbe
  426bd7:	mov    cx,WORD PTR ds:0x44e0e4
  426bde:	mov    WORD PTR [eax+0x28],cx
  426be2:	mov    cx,WORD PTR ds:0x44e0e0
  426be9:	mov    WORD PTR [eax+0x2a],cx
  426bed:	mov    DWORD PTR [eax+0x1c],ebx
  426bf0:	mov    cx,WORD PTR [esi+0x20]
  426bf4:	or     BYTE PTR [eax+0x7],0x40
  426bf8:	mov    WORD PTR [eax+0x20],cx
  426bfc:	cmp    BYTE PTR [esi+0x6],0xa
  426c00:	jne    0x426cd2
  426c06:	mov    edi,DWORD PTR [esi+0x18]
  426c09:	test   edi,edi
  426c0b:	je     0x426cd2
  426c11:	xor    ebx,ebx
  426c13:	mov    eax,0x7fff
  426c18:	and    WORD PTR [edi+0x22],ax
  426c1c:	movzx  eax,WORD PTR [edi+0x22]
  426c20:	test   eax,0x4000
  426c25:	je     0x426c34
  426c27:	push   ebx
  426c28:	xor    edx,edx
  426c2a:	mov    ecx,0xfa2
  426c2f:	call   0x42ee80
  426c34:	mov    edi,DWORD PTR [edi+0x18]
  426c37:	test   edi,edi
  426c39:	jne    0x426c13
  426c3b:	jmp    0x426cd2
  426c40:	cmp    BYTE PTR [esi+0x6],0xa
  426c44:	mov    ebx,DWORD PTR ds:0x45f848
  426c4a:	jne    0x426cd2
  426c50:	mov    edi,DWORD PTR [esi+0x18]
  426c53:	jmp    0x426cc8
  426c55:	xor    eax,eax
  426c57:	mov    DWORD PTR [ebp-0x103],eax
  426c5d:	mov    al,BYTE PTR [edi+0x5]
  426c60:	movzx  ecx,al
  426c63:	mov    BYTE PTR [ebp-0xff],al
  426c69:	push   ecx
  426c6a:	mov    eax,edi
  426c6c:	sub    eax,ecx
  426c6e:	push   eax
  426c6f:	lea    eax,[ebp-0xfe]
  426c75:	push   eax
  426c76:	call   0x447646
  426c7b:	mov    eax,DWORD PTR [edi+0x24]
  426c7e:	add    eax,ebx
  426c80:	add    esp,0xc
  426c83:	lea    ecx,[ebp-0x103]
  426c89:	mov    ds:0x45f848,eax
  426c8e:	call   0x426256
  426c93:	mov    edx,eax
  426c95:	test   edx,edx
  426c97:	je     0x426dbe
  426c9d:	mov    ecx,DWORD PTR [edi+0x1c]
  426ca0:	mov    DWORD PTR [edx+0x1c],ecx
  426ca3:	mov    cx,WORD PTR [edi+0x28]
  426ca7:	mov    WORD PTR [edx+0x28],cx
  426cab:	mov    cx,WORD PTR [edi+0x2a]
  426caf:	mov    WORD PTR [edx+0x2a],cx
  426cb3:	test   BYTE PTR [edi+0x7],0x40
  426cb7:	je     0x426cc5
  426cb9:	mov    ax,WORD PTR [edi+0x20]
  426cbd:	or     BYTE PTR [edx+0x7],0x40
  426cc1:	mov    WORD PTR [edx+0x20],ax
  426cc5:	mov    edi,DWORD PTR [edi+0x18]
  426cc8:	test   edi,edi
  426cca:	jne    0x426c55
  426ccc:	mov    DWORD PTR ds:0x45f848,ebx
  426cd2:	mov    eax,ds:0x44e144
  426cd7:	test   BYTE PTR [eax+0x14],0x2
  426cdb:	je     0x426ce7
  426cdd:	call   0x425911
  426ce2:	jmp    0x426dbe
  426ce7:	mov    eax,ds:0x44e144
  426cec:	inc    DWORD PTR [eax+0x20]
  426cef:	call   0x425911
  426cf4:	jmp    0x426d45
  426cf6:	mov    eax,DWORD PTR [ebp-0x10c]
  426cfc:	test   eax,eax
  426cfe:	je     0x426d3a
  426d00:	mov    edx,DWORD PTR ds:0x45f998
  426d06:	mov    ecx,eax
  426d08:	call   0x4252a6
  426d0d:	mov    edi,eax
  426d0f:	test   edi,edi
  426d11:	je     0x426dbe
  426d17:	mov    DWORD PTR [edi+0x24],ebx
  426d1a:	cmp    DWORD PTR ds:0x448990,0x2
  426d21:	jb     0x426d2a
  426d23:	mov    ecx,edi
  426d25:	call   0x424fa6
  426d2a:	mov    eax,ds:0x44e0e4
  426d2f:	mov    DWORD PTR [edi+0x30],eax
  426d32:	mov    eax,ds:0x44e0e0
  426d37:	mov    DWORD PTR [edi+0x34],eax
  426d3a:	mov    eax,ds:0x44e0e8
  426d3f:	add    DWORD PTR ds:0x45f830,eax
  426d45:	cmp    DWORD PTR ds:0x45f994,0x0
  426d4c:	mov    edi,0x44db00
  426d51:	je     0x426d79
  426d53:	cmp    DWORD PTR ds:0x44e0e0,0x1
  426d5a:	jbe    0x426d79
  426d5c:	cmp    BYTE PTR ds:0x4631da,0x0
  426d63:	jne    0x426d8f
  426d65:	mov    edx,DWORD PTR ds:0x44e12c
  426d6b:	mov    ecx,edi
  426d6d:	mov    BYTE PTR ds:0x44db00,0x69
  426d74:	call   0x43f399
  426d79:	cmp    BYTE PTR ds:0x4631da,0x0
  426d80:	jne    0x426d8f
  426d82:	mov    edx,DWORD PTR [ebp-0x108]
  426d88:	mov    ecx,esi
  426d8a:	call   0x4267f9
  426d8f:	cmp    DWORD PTR ds:0x45f994,0x0
  426d96:	je     0x426dbe
  426d98:	cmp    DWORD PTR ds:0x44e0e0,0x1
  426d9f:	jbe    0x426dbe
  426da1:	cmp    BYTE PTR ds:0x4631da,0x0
  426da8:	jne    0x426dbe
  426daa:	mov    edx,DWORD PTR ds:0x44e12c
  426db0:	mov    ecx,edi
  426db2:	mov    BYTE PTR ds:0x44db00,0x6b
  426db9:	call   0x43f399
  426dbe:	pop    edi
  426dbf:	pop    ebx
  426dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  426dc3:	xor    ecx,ebp
  426dc5:	pop    esi
  426dc6:	call   0x446dc7
  426dcb:	leave  
  426dcc:	ret    0x4
  426dcf:	push   ebp
  426dd0:	mov    ebp,esp
  426dd2:	mov    eax,ds:0x44e144
  426dd7:	test   BYTE PTR [eax+0x14],0x1
  426ddb:	je     0x426ded
  426ddd:	push   0x0
  426ddf:	xor    edx,edx
  426de1:	mov    ecx,0x898
  426de6:	call   0x42ee80
  426deb:	jmp    0x426e6c
  426ded:	cmp    DWORD PTR ds:0x45f994,0x0
  426df4:	push   esi
  426df5:	mov    esi,DWORD PTR [ebp+0x8]
  426df8:	push   edi
  426df9:	push   0x7
  426dfb:	pop    ecx
  426dfc:	mov    BYTE PTR [esi],0x5e
  426dff:	mov    WORD PTR [esi+0x1],cx
  426e03:	jne    0x426e14
  426e05:	mov    ecx,0x3f2
  426e0a:	call   0x42f124
  426e0f:	mov    eax,ds:0x44e144
  426e14:	mov    ecx,DWORD PTR ds:0x45f848
  426e1a:	cmp    ecx,DWORD PTR [eax+0xc]
  426e1d:	jle    0x426e22
  426e1f:	mov    DWORD PTR [eax+0xc],ecx
  426e22:	lea    edx,[ebp+0xb]
  426e25:	lea    ecx,[esi+0x3]
  426e28:	call   0x431d7f
  426e2d:	mov    edi,eax
  426e2f:	mov    DWORD PTR ds:0x45f848,edi
  426e35:	mov    DWORD PTR [esi+0x3],edi
  426e38:	cmp    edi,0x7fffffff
  426e3e:	jbe    0x426e52
  426e40:	movzx  ecx,WORD PTR ds:0x44e138
  426e47:	neg    edi
  426e49:	mov    eax,edi
  426e4b:	cdq    
  426e4c:	idiv   ecx
  426e4e:	sub    edx,edi
  426e50:	jmp    0x426e54
  426e52:	mov    edx,edi
  426e54:	mov    eax,ds:0x44e144
  426e59:	pop    edi
  426e5a:	pop    esi
  426e5b:	cmp    edx,DWORD PTR [eax+0x8]
  426e5e:	jge    0x426e63
  426e60:	mov    DWORD PTR [eax+0x8],edx
  426e63:	mov    eax,ds:0x44e148
  426e68:	or     BYTE PTR [eax+0x2a],0x1
  426e6c:	pop    ebp
  426e6d:	ret    0x4
  426e70:	push   ebp
  426e71:	mov    ebp,esp
  426e73:	sub    esp,0x14
  426e76:	mov    eax,ds:0x448858
  426e7b:	xor    eax,ebp
  426e7d:	mov    DWORD PTR [ebp-0x4],eax
  426e80:	cmp    DWORD PTR ds:0x45f994,0x0
  426e87:	push   esi
  426e88:	mov    esi,DWORD PTR [ebp+0x8]
  426e8b:	push   edi
  426e8c:	jne    0x426e98
  426e8e:	mov    ecx,0x3f2
  426e93:	call   0x42f124
  426e98:	mov    ax,WORD PTR [esi+0x1]
  426e9c:	sub    ax,0x3
  426ea0:	jne    0x426eab
  426ea2:	movzx  edi,WORD PTR ds:0x44e138
  426ea9:	jmp    0x426ec3
  426eab:	cmp    ax,0x1
  426eaf:	jne    0x426eb6
  426eb1:	push   0x2
  426eb3:	pop    edi
  426eb4:	jmp    0x426ec3
  426eb6:	lea    ecx,[esi+0x3]
  426eb9:	lea    edx,[ebp-0x11]
  426ebc:	call   0x431d7f
  426ec1:	mov    edi,eax
  426ec3:	xor    eax,eax
  426ec5:	lea    ecx,[edi-0x1]
  426ec8:	mov    WORD PTR [esi+0x1],ax
  426ecc:	test   edi,ecx
  426ece:	jne    0x426f00
  426ed0:	test   edi,edi
  426ed2:	je     0x426f00
  426ed4:	mov    eax,ds:0x45f848
  426ed9:	xor    edx,edx
  426edb:	div    edi
  426edd:	mov    eax,edi
  426edf:	sub    eax,edx
  426ee1:	mov    edx,DWORD PTR ds:0x44e12c
  426ee7:	mov    esi,eax
  426ee9:	sub    esi,edi
  426eeb:	neg    esi
  426eed:	sbb    esi,esi
  426eef:	and    esi,eax
  426ef1:	mov    ecx,esi
  426ef3:	call   0x4261de
  426ef8:	add    DWORD PTR ds:0x45f848,esi
  426efe:	jmp    0x426f2e
  426f00:	push   0xa
  426f02:	push   0x0
  426f04:	mov    edx,edi
  426f06:	lea    ecx,[ebp-0x10]
  426f09:	call   0x42ea92
  426f0e:	lea    ecx,[ebp-0x10]
  426f11:	mov    BYTE PTR [eax],0x0
  426f14:	lea    edx,[ecx+0x1]
  426f17:	mov    al,BYTE PTR [ecx]
  426f19:	inc    ecx
  426f1a:	test   al,al
  426f1c:	jne    0x426f17
  426f1e:	sub    ecx,edx
  426f20:	push   ecx
  426f21:	lea    edx,[ebp-0x10]
  426f24:	mov    ecx,0x80f
  426f29:	call   0x42f15d
  426f2e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f31:	pop    edi
  426f32:	xor    ecx,ebp
  426f34:	pop    esi
  426f35:	call   0x446dc7
  426f3a:	leave  
  426f3b:	ret    0x4
  426f3e:	push   ebp
  426f3f:	mov    ebp,esp
  426f41:	sub    esp,0x18
  426f44:	mov    ecx,DWORD PTR [ebp+0x8]
  426f47:	and    DWORD PTR [ebp-0x10],0x0
  426f4b:	movzx  eax,WORD PTR [ecx+0x1]
  426f4f:	push   ebx
  426f50:	push   esi
  426f51:	push   edi
  426f52:	add    eax,ecx
  426f54:	lea    edi,[ecx+0x4]
  426f57:	mov    ecx,edi
  426f59:	mov    DWORD PTR [ebp-0x14],eax
  426f5c:	call   0x445afc
  426f61:	mov    esi,eax
  426f63:	push   0x8
  426f65:	pop    ebx
  426f66:	test   esi,esi
  426f68:	jne    0x426f9f
  426f6a:	push   0xd
  426f6c:	pop    edx
  426f6d:	mov    ecx,edi
  426f6f:	call   0x4458d0
  426f74:	mov    esi,eax
  426f76:	test   esi,esi
  426f78:	je     0x427236
  426f7e:	push   0x1c
  426f80:	xor    al,al
  426f82:	pop    ecx
  426f83:	mov    BYTE PTR [ebp-0x1],al
  426f86:	call   0x43f42e
  426f8b:	mov    dl,BYTE PTR [ebp-0x1]
  426f8e:	mov    ecx,eax
  426f90:	mov    DWORD PTR [ebp-0xc],ecx
  426f93:	mov    WORD PTR [ecx+0xe],bx
  426f97:	mov    DWORD PTR [ecx+0x14],esi
  426f9a:	mov    DWORD PTR [esi+0x1c],ecx
  426f9d:	jmp    0x426fce
  426f9f:	cmp    BYTE PTR [esi+0x6],0xd
  426fa3:	je     0x426fbd
  426fa5:	movzx  eax,BYTE PTR [esi+0x5]
  426fa9:	sub    esi,eax
  426fab:	push   eax
  426fac:	mov    edx,esi
  426fae:	mov    ecx,0x7d5
  426fb3:	call   0x42f15d
  426fb8:	jmp    0x427236
  426fbd:	mov    eax,DWORD PTR [esi+0x1c]
  426fc0:	mov    DWORD PTR [ebp-0xc],eax
  426fc3:	mov    eax,DWORD PTR [esi+0x18]
  426fc6:	mov    dl,0x1
  426fc8:	mov    BYTE PTR [ebp-0x1],dl
  426fcb:	mov    DWORD PTR [ebp-0x8],eax
  426fce:	movzx  ebx,BYTE PTR [edi+0x4]
  426fd2:	add    edi,0x5
  426fd5:	add    ebx,edi
  426fd7:	xor    eax,eax
  426fd9:	mov    edi,0x44e0f4
  426fde:	stos   DWORD PTR es:[edi],eax
  426fdf:	stos   DWORD PTR es:[edi],eax
  426fe0:	stos   DWORD PTR es:[edi],eax
  426fe1:	stos   DWORD PTR es:[edi],eax
  426fe2:	jmp    0x42712d
  426fe7:	inc    ebx
  426fe8:	mov    ecx,ebx
  426fea:	test   dl,dl
  426fec:	jne    0x427016
  426fee:	push   0xe
  426ff0:	pop    edx
  426ff1:	call   0x4458d0
  426ff6:	mov    edi,eax
  426ff8:	test   edi,edi
  426ffa:	je     0x42718a
  427000:	cmp    DWORD PTR [esi+0x18],0x0
  427004:	je     0x42700e
  427006:	mov    eax,DWORD PTR [ebp-0x8]
  427009:	mov    DWORD PTR [eax+0x18],edi
  42700c:	jmp    0x427011
  42700e:	mov    DWORD PTR [esi+0x18],edi
  427011:	mov    DWORD PTR [ebp-0x8],edi
  427014:	jmp    0x427034
  427016:	mov    dl,0xe
  427018:	call   0x445847
  42701d:	mov    edi,eax
  42701f:	test   edi,edi
  427021:	je     0x427138
  427027:	mov    eax,DWORD PTR [ebp-0x8]
  42702a:	cmp    eax,edi
  42702c:	jne    0x427087
  42702e:	mov    eax,DWORD PTR [eax+0x18]
  427031:	mov    DWORD PTR [ebp-0x8],eax
  427034:	movzx  eax,BYTE PTR [ebx+0x4]
  427038:	add    eax,0x5
  42703b:	add    ebx,eax
  42703d:	lea    edx,[ebp-0x2]
  427040:	mov    ecx,ebx
  427042:	call   0x431d7f
  427047:	movzx  ecx,ax
  42704a:	movzx  eax,BYTE PTR [ebx]
  42704d:	add    ebx,eax
  42704f:	cmp    ecx,0x40
  427052:	jbe    0x42705b
  427054:	mov    ecx,0x829
  427059:	jmp    0x427064
  42705b:	test   ecx,ecx
  42705d:	jne    0x427075
  42705f:	mov    ecx,0x87c
  427064:	movzx  eax,BYTE PTR [edi+0x5]
  427068:	mov    edx,edi
  42706a:	push   eax
  42706b:	sub    edx,eax
  42706d:	call   0x42f15d
  427072:	xor    ecx,ecx
  427074:	inc    ecx
  427075:	mov    dl,BYTE PTR [ebp-0x1]
  427078:	add    DWORD PTR [ebp-0x10],ecx
  42707b:	test   dl,dl
  42707d:	je     0x42709f
  42707f:	movzx  eax,BYTE PTR [edi+0x1e]
  427083:	cmp    ecx,eax
  427085:	je     0x4270a2
  427087:	movzx  eax,BYTE PTR [edi+0x5]
  42708b:	sub    edi,eax
  42708d:	push   eax
  42708e:	mov    edx,edi
  427090:	mov    ecx,0x7d7
  427095:	call   0x42f15d
  42709a:	jmp    0x427144
  42709f:	mov    BYTE PTR [edi+0x1e],cl
  4270a2:	cmp    ebx,DWORD PTR [ebp-0x14]
  4270a5:	jae    0x427117
  4270a7:	cmp    BYTE PTR [ebx],0x63
  4270aa:	jne    0x427117
  4270ac:	xor    edx,edx
  4270ae:	inc    edx
  4270af:	mov    eax,edx
  4270b1:	shl    eax,cl
  4270b3:	dec    eax
  4270b4:	jne    0x4270bb
  4270b6:	mov    DWORD PTR [ebp-0x18],edx
  4270b9:	jmp    0x4270bf
  4270bb:	and    DWORD PTR [ebp-0x18],0x0
  4270bf:	inc    ebx
  4270c0:	lea    edx,[ebp-0x2]
  4270c3:	mov    ecx,ebx
  4270c5:	call   0x431d7f
  4270ca:	and    eax,DWORD PTR [ebp-0x18]
  4270cd:	xor    edx,edx
  4270cf:	or     eax,edx
  4270d1:	je     0x4270e6
  4270d3:	movzx  eax,BYTE PTR [edi+0x5]
  4270d7:	sub    edi,eax
  4270d9:	push   eax
  4270da:	mov    edx,edi
  4270dc:	mov    ecx,0x829
  4270e1:	call   0x42f15d
  4270e6:	mov    dl,BYTE PTR [ebp-0x1]
  4270e9:	push   0x3
  4270eb:	pop    edi
  4270ec:	sub    ebx,edi
  4270ee:	movzx  eax,BYTE PTR [ebx+0x3]
  4270f2:	add    ax,di
  4270f5:	mov    BYTE PTR [ebx],0x65
  4270f8:	mov    WORD PTR [ebx+0x1],ax
  4270fc:	test   dl,dl
  4270fe:	jne    0x42710f
  427100:	mov    edx,0x44e0f4
  427105:	mov    ecx,ebx
  427107:	call   0x43f399
  42710c:	mov    dl,BYTE PTR [ebp-0x1]
  42710f:	movzx  eax,WORD PTR [ebx+0x1]
  427113:	add    ebx,eax
  427115:	jmp    0x42712d
  427117:	test   dl,dl
  427119:	jne    0x42712d
  42711b:	mov    edx,0x44e0f4
  427120:	mov    ecx,0x44daf8
  427125:	call   0x43f399
  42712a:	mov    dl,BYTE PTR [ebp-0x1]
  42712d:	cmp    ebx,DWORD PTR [ebp-0x14]
  427130:	jb     0x426fe7
  427136:	jmp    0x427144
  427138:	mov    edx,ebx
  42713a:	mov    ecx,0x7d7
  42713f:	call   0x42f140
  427144:	mov    al,BYTE PTR [ebp-0x1]
  427147:	test   al,al
  427149:	je     0x42718a
  42714b:	movzx  eax,BYTE PTR [esi+0x22]
  42714f:	cmp    eax,DWORD PTR [ebp-0x10]
  427152:	je     0x427167
  427154:	movzx  eax,BYTE PTR [esi+0x5]
  427158:	mov    edx,esi
  42715a:	push   eax
  42715b:	sub    edx,eax
  42715d:	mov    ecx,0x7d7
  427162:	call   0x42f15d
  427167:	mov    eax,DWORD PTR [ebp-0x8]
  42716a:	test   eax,eax
  42716c:	je     0x42722d
  427172:	movzx  eax,BYTE PTR [esi+0x5]
  427176:	sub    esi,eax
  427178:	push   eax
  427179:	mov    edx,esi
  42717b:	mov    ecx,0x7d7
  427180:	call   0x42f15d
  427185:	jmp    0x42722d
  42718a:	mov    ebx,DWORD PTR [ebp-0x10]
  42718d:	mov    ecx,DWORD PTR [ebp-0xc]
  427190:	push   0x4
  427192:	pop    eax
  427193:	push   0x8
  427195:	pop    edx
  427196:	mov    BYTE PTR [esi+0x22],bl
  427199:	cmp    ebx,edx
  42719b:	ja     0x4271aa
  42719d:	mov    BYTE PTR [esi+0x23],0x1
  4271a1:	mov    DWORD PTR [ecx+0x10],0x1
  4271a8:	jmp    0x4271cf
  4271aa:	cmp    ebx,0x10
  4271ad:	ja     0x4271bc
  4271af:	mov    BYTE PTR [esi+0x23],0x2
  4271b3:	mov    DWORD PTR [ecx+0x10],0x2
  4271ba:	jmp    0x4271cf
  4271bc:	cmp    ebx,0x20
  4271bf:	ja     0x4271c9
  4271c1:	mov    BYTE PTR [esi+0x23],al
  4271c4:	mov    DWORD PTR [ecx+0x10],eax
  4271c7:	jmp    0x4271cf
  4271c9:	mov    BYTE PTR [esi+0x23],dl
  4271cc:	mov    DWORD PTR [ecx+0x10],edx
  4271cf:	cmp    ebx,0x10
  4271d2:	ja     0x4271dc
  4271d4:	xor    eax,eax
  4271d6:	cmp    ebx,edx
  4271d8:	seta   al
  4271db:	inc    eax
  4271dc:	mov    BYTE PTR [esi+0x23],al
  4271df:	movzx  eax,al
  4271e2:	mov    DWORD PTR [ecx+0x10],eax
  4271e5:	cmp    ebx,0x40
  4271e8:	jbe    0x4271fd
  4271ea:	movzx  eax,BYTE PTR [esi+0x5]
  4271ee:	mov    edx,esi
  4271f0:	push   eax
  4271f1:	sub    edx,eax
  4271f3:	mov    ecx,0x829
  4271f8:	call   0x42f15d
  4271fd:	test   ebx,ebx
  4271ff:	jne    0x427205
  427201:	or     BYTE PTR [esi+0x7],0x20
  427205:	mov    eax,ds:0x44e0fc
  42720a:	mov    edx,DWORD PTR [esi+0x18]
  42720d:	mov    DWORD PTR [esi+0x24],eax
  427210:	jmp    0x427229
  427212:	mov    esi,DWORD PTR [edx+0x18]
  427215:	test   esi,esi
  427217:	je     0x42722d
  427219:	mov    al,bl
  42721b:	sub    al,BYTE PTR [edx+0x1e]
  42721e:	mov    BYTE PTR [edx+0x1f],al
  427221:	movzx  eax,BYTE PTR [edx+0x1e]
  427225:	sub    ebx,eax
  427227:	mov    edx,esi
  427229:	test   edx,edx
  42722b:	jne    0x427212
  42722d:	mov    eax,DWORD PTR [ebp+0x8]
  427230:	xor    ecx,ecx
  427232:	mov    WORD PTR [eax+0x1],cx
  427236:	pop    edi
  427237:	pop    esi
  427238:	pop    ebx
  427239:	leave  
  42723a:	ret    0x4
  42723d:	push   ebp
  42723e:	mov    ebp,esp
  427240:	sub    esp,0x128
  427246:	mov    eax,ds:0x448858
  42724b:	xor    eax,ebp
  42724d:	mov    DWORD PTR [ebp-0x4],eax
  427250:	and    DWORD PTR [ebp-0x114],0x0
  427257:	and    DWORD PTR [ebp-0x110],0x0
  42725e:	push   ebx
  42725f:	push   esi
  427260:	mov    esi,ecx
  427262:	mov    eax,edx
  427264:	lea    ecx,[ebp-0x104]
  42726a:	mov    DWORD PTR [ebp-0x123],ecx
  427270:	push   edi
  427271:	lea    edx,[ebp-0x128]
  427277:	mov    ecx,eax
  427279:	call   0x44303b
  42727e:	mov    ecx,DWORD PTR [esi+0x24]
  427281:	mov    ebx,DWORD PTR [esi+0x18]
  427284:	add    ecx,0x4
  427287:	mov    edi,eax
  427289:	mov    DWORD PTR [ebp-0x10c],ecx
  42728f:	test   ebx,ebx
  427291:	je     0x42739d
  427297:	mov    esi,DWORD PTR [ebp-0x110]
  42729d:	test   edi,edi
  42729f:	je     0x427310
  4272a1:	mov    al,BYTE PTR [edi]
  4272a3:	cmp    al,0x63
  4272a5:	je     0x4272d8
  4272a7:	cmp    al,0x66
  4272a9:	je     0x4272d8
  4272ab:	cmp    al,0x68
  4272ad:	jbe    0x4272b7
  4272af:	cmp    al,0x6a
  4272b1:	jbe    0x4272c8
  4272b3:	cmp    al,0x6b
  4272b5:	je     0x4272d8
  4272b7:	mov    ecx,edi
  4272b9:	call   0x428f71
  4272be:	mov    ecx,DWORD PTR [ebp-0x10c]
  4272c4:	mov    edi,eax
  4272c6:	jmp    0x42729d
  4272c8:	mov    ecx,edi
  4272ca:	call   0x428f71
  4272cf:	inc    esi
  4272d0:	mov    DWORD PTR [ebp-0x110],esi
  4272d6:	jmp    0x4272be
  4272d8:	test   edi,edi
  4272da:	je     0x427310
  4272dc:	mov    al,BYTE PTR [edi]
  4272de:	cmp    al,0x6b
  4272e0:	je     0x427310
  4272e2:	cmp    al,0x66
  4272e4:	jne    0x4272f5
  4272e6:	cmp    BYTE PTR [ecx+0x4],0x51
  4272ea:	jne    0x4272f0
  4272ec:	xor    esi,esi
  4272ee:	jmp    0x427305
  4272f0:	add    ecx,0x3
  4272f3:	jmp    0x4272f8
  4272f5:	lea    ecx,[edi+0x3]
  4272f8:	lea    edx,[ebp-0x105]
  4272fe:	call   0x431d7f
  427303:	mov    esi,eax
  427305:	mov    ecx,edi
  427307:	call   0x428f71
  42730c:	mov    edi,eax
  42730e:	jmp    0x42732a
  427310:	cmp    BYTE PTR [ecx+0x4],0x51
  427314:	jne    0x42731a
  427316:	xor    esi,esi
  427318:	jmp    0x42732a
  42731a:	add    ecx,0x3
  42731d:	lea    edx,[ebp-0x105]
  427323:	call   0x431d7f
  427328:	mov    esi,eax
  42732a:	mov    cl,BYTE PTR [ebx+0x1e]
  42732d:	xor    eax,eax
  42732f:	inc    eax
  427330:	shl    eax,cl
  427332:	dec    eax
  427333:	neg    eax
  427335:	sbb    eax,eax
  427337:	inc    eax
  427338:	test   esi,eax
  42733a:	je     0x42734f
  42733c:	movzx  eax,BYTE PTR [ebx+0x5]
  427340:	mov    edx,ebx
  427342:	push   eax
  427343:	sub    edx,eax
  427345:	mov    ecx,0x817
  42734a:	call   0x42f15d
  42734f:	mov    cl,BYTE PTR [ebx+0x1f]
  427352:	shl    esi,cl
  427354:	or     DWORD PTR [ebp-0x114],esi
  42735a:	mov    esi,DWORD PTR [ebp-0x110]
  427360:	cmp    esi,0x1
  427363:	jle    0x42737f
  427365:	cmp    BYTE PTR [edi],0x6b
  427368:	jne    0x427379
  42736a:	mov    ecx,edi
  42736c:	dec    esi
  42736d:	call   0x428f71
  427372:	mov    edi,eax
  427374:	cmp    esi,0x1
  427377:	jne    0x427365
  427379:	mov    DWORD PTR [ebp-0x110],esi
  42737f:	mov    ecx,DWORD PTR [ebp-0x10c]
  427385:	mov    ebx,DWORD PTR [ebx+0x18]
  427388:	call   0x428f71
  42738d:	mov    ecx,eax
  42738f:	mov    DWORD PTR [ebp-0x10c],ecx
  427395:	test   ebx,ebx
  427397:	jne    0x42729d
  42739d:	mov    ecx,DWORD PTR [ebp-0x4]
  4273a0:	mov    eax,DWORD PTR [ebp-0x114]
  4273a6:	pop    edi
  4273a7:	pop    esi
  4273a8:	xor    ecx,ebp
  4273aa:	pop    ebx
  4273ab:	call   0x446dc7
  4273b0:	leave  
  4273b1:	ret    
  4273b2:	push   ebp
  4273b3:	mov    ebp,esp
  4273b5:	sub    esp,0xc
  4273b8:	push   ebx
  4273b9:	push   esi
  4273ba:	push   edi
  4273bb:	mov    edi,ecx
  4273bd:	xor    ebx,ebx
  4273bf:	mov    eax,DWORD PTR [edi+0x2]
  4273c2:	add    edi,0x6
  4273c5:	mov    esi,DWORD PTR [eax+0x18]
  4273c8:	jmp    0x42740d
  4273ca:	lea    edx,[ebp-0x1]
  4273cd:	mov    ecx,edi
  4273cf:	call   0x431d7f
  4273d4:	mov    cl,BYTE PTR [esi+0x1e]
  4273d7:	mov    edx,eax
  4273d9:	movzx  eax,BYTE PTR [edi]
  4273dc:	add    edi,eax
  4273de:	xor    eax,eax
  4273e0:	inc    eax
  4273e1:	shl    eax,cl
  4273e3:	mov    DWORD PTR [ebp-0x8],edx
  4273e6:	dec    eax
  4273e7:	not    eax
  4273e9:	test   edx,eax
  4273eb:	je     0x427403
  4273ed:	movzx  eax,BYTE PTR [esi+0x5]
  4273f1:	mov    edx,esi
  4273f3:	push   eax
  4273f4:	sub    edx,eax
  4273f6:	mov    ecx,0x817
  4273fb:	call   0x42f15d
  427400:	mov    edx,DWORD PTR [ebp-0x8]
  427403:	mov    cl,BYTE PTR [esi+0x1f]
  427406:	mov    esi,DWORD PTR [esi+0x18]
  427409:	shl    edx,cl
  42740b:	or     ebx,edx
  42740d:	test   esi,esi
  42740f:	jne    0x4273ca
  427411:	pop    edi
  427412:	pop    esi
  427413:	mov    eax,ebx
  427415:	pop    ebx
  427416:	leave  
  427417:	ret    
  427418:	push   ebp
  427419:	mov    ebp,esp
  42741b:	push   ecx
  42741c:	push   esi
  42741d:	mov    esi,DWORD PTR [ebp+0x8]
  427420:	mov    ecx,DWORD PTR [esi+0x3]
  427423:	test   ecx,ecx
  427425:	je     0x42747f
  427427:	push   edi
  427428:	xor    eax,eax
  42742a:	mov    edx,0x44e108
  42742f:	mov    edi,edx
  427431:	stos   DWORD PTR es:[edi],eax
  427432:	stos   DWORD PTR es:[edi],eax
  427433:	stos   DWORD PTR es:[edi],eax
  427434:	stos   DWORD PTR es:[edi],eax
  427435:	cmp    BYTE PTR [ecx+0x6],0xd
  427439:	mov    eax,DWORD PTR [esi+0x7]
  42743c:	mov    DWORD PTR ds:0x44e104,edx
  427442:	mov    DWORD PTR [ebp+0x8],eax
  427445:	pop    edi
  427446:	jne    0x42745a
  427448:	and    DWORD PTR [ebp-0x4],0x0
  42744c:	push   ecx
  42744d:	lea    edx,[ebp-0x4]
  427450:	lea    ecx,[ebp+0x8]
  427453:	call   0x427d59
  427458:	jmp    0x427470
  42745a:	mov    eax,DWORD PTR [ecx+0x24]
  42745d:	add    eax,0x4
  427460:	push   0x0
  427462:	lea    edx,[ebp+0x8]
  427465:	lea    ecx,[ebp-0x4]
  427468:	mov    DWORD PTR [ebp-0x4],eax
  42746b:	call   0x427484
  427470:	and    DWORD PTR [esi+0x3],0x0
  427474:	mov    eax,ds:0x44e110
  427479:	add    eax,0x4
  42747c:	mov    DWORD PTR [esi+0x7],eax
  42747f:	pop    esi
  427480:	leave  
  427481:	ret    0x4
  427484:	push   ebp
  427485:	mov    ebp,esp
  427487:	and    esp,0xfffffff8
  42748a:	sub    esp,0xc
  42748d:	and    DWORD PTR [esp+0x8],0x0
  427492:	push   ebx
  427493:	push   esi
  427494:	push   edi
  427495:	mov    edi,edx
  427497:	mov    ebx,ecx
  427499:	mov    esi,DWORD PTR [edi]
  42749b:	mov    ecx,DWORD PTR [ebx]
  42749d:	mov    DWORD PTR [esp+0xc],ecx
  4274a1:	mov    DWORD PTR [esp+0x10],esi
  4274a5:	movzx  eax,BYTE PTR [ecx]
  4274a8:	sub    eax,0x69
  4274ab:	je     0x427715
  4274b1:	dec    eax
  4274b2:	je     0x4274c2
  4274b4:	call   0x428f71
  4274b9:	mov    DWORD PTR [esp+0xc],eax
  4274bd:	jmp    0x427a54
  4274c2:	mov    edx,DWORD PTR ds:0x44e104
  4274c8:	call   0x43f399
  4274cd:	mov    ecx,DWORD PTR [esp+0xc]
  4274d1:	call   0x428f71
  4274d6:	mov    ecx,DWORD PTR [esp+0x10]
  4274da:	mov    esi,eax
  4274dc:	mov    DWORD PTR [esp+0xc],esi
  4274e0:	test   ecx,ecx
  4274e2:	je     0x42762c
  4274e8:	mov    al,BYTE PTR [ecx]
  4274ea:	cmp    al,0x6b
  4274ec:	je     0x42762c
  4274f2:	cmp    al,0x66
  4274f4:	je     0x42762c
  4274fa:	cmp    al,0x6a
  4274fc:	jne    0x42758c
  427502:	call   0x428f71
  427507:	mov    DWORD PTR [esp+0x10],eax
  42750b:	movzx  eax,BYTE PTR [esi]
  42750e:	cmp    eax,0x1d
  427511:	jg     0x427547
  427513:	cmp    eax,0x1c
  427516:	jge    0x42755b
  427518:	cmp    eax,0xa
  42751b:	je     0x427568
  42751d:	jle    0x42755b
  42751f:	cmp    eax,0x1a
  427522:	jle    0x42755f
  427524:	cmp    eax,0x1b
  427527:	jne    0x42755b
  427529:	mov    edx,DWORD PTR ds:0x44e104
  42752f:	mov    ecx,esi
  427531:	call   0x43f399
  427536:	mov    ecx,DWORD PTR [esp+0xc]
  42753a:	call   0x428f71
  42753f:	mov    esi,eax
  427541:	mov    DWORD PTR [esp+0xc],esi
  427545:	jmp    0x42750b
  427547:	cmp    eax,0x53
  42754a:	je     0x427583
  42754c:	cmp    eax,0x62
  42754f:	je     0x42757a
  427551:	cmp    eax,0x68
  427554:	jle    0x42755b
  427556:	cmp    eax,0x6a
  427559:	jle    0x427571
  42755b:	mov    ecx,esi
  42755d:	jmp    0x42753a
  42755f:	lea    edx,[esp+0x10]
  427563:	jmp    0x427681
  427568:	lea    edx,[esp+0x10]
  42756c:	jmp    0x427695
  427571:	lea    edx,[esp+0x10]
  427575:	jmp    0x4276bd
  42757a:	lea    edx,[esp+0x10]
  42757e:	jmp    0x4276cf
  427583:	lea    edx,[esp+0x10]
  427587:	jmp    0x4276a9
  42758c:	cmp    al,0x69
  42758e:	jne    0x427603
  427590:	call   0x428f71
  427595:	mov    DWORD PTR [esp+0x10],eax
  427599:	movzx  eax,BYTE PTR [esi]
  42759c:	cmp    eax,0x1d
  42759f:	jg     0x4275d5
  4275a1:	cmp    eax,0x1c
  4275a4:	jge    0x4275e9
  4275a6:	cmp    eax,0xa
  4275a9:	je     0x4275ed
  4275ab:	jle    0x4275e9
  4275ad:	cmp    eax,0x1a
  4275b0:	jle    0x42755f
  4275b2:	cmp    eax,0x1b
  4275b5:	jne    0x4275e9
  4275b7:	mov    edx,DWORD PTR ds:0x44e104
  4275bd:	mov    ecx,esi
  4275bf:	call   0x43f399
  4275c4:	mov    ecx,DWORD PTR [esp+0xc]
  4275c8:	call   0x428f71
  4275cd:	mov    esi,eax
  4275cf:	mov    DWORD PTR [esp+0xc],esi
  4275d3:	jmp    0x427599
  4275d5:	cmp    eax,0x53
  4275d8:	je     0x4275f8
  4275da:	cmp    eax,0x62
  4275dd:	je     0x42757a
  4275df:	cmp    eax,0x68
  4275e2:	jle    0x4275e9
  4275e4:	cmp    eax,0x6a
  4275e7:	jle    0x427571
  4275e9:	mov    ecx,esi
  4275eb:	jmp    0x4275c8
  4275ed:	push   0x1
  4275ef:	lea    edx,[esp+0x14]
  4275f3:	jmp    0x427697
  4275f8:	push   0x1
  4275fa:	lea    edx,[esp+0x14]
  4275fe:	jmp    0x4276ab
  427603:	push   0x0
  427605:	xor    edx,edx
  427607:	mov    ecx,0x85a
  42760c:	call   0x42ee80
  427611:	mov    eax,DWORD PTR [esp+0xc]
  427615:	jmp    0x427620
  427617:	call   0x428f71
  42761c:	mov    DWORD PTR [esp+0xc],eax
  427620:	cmp    BYTE PTR [eax],0x6b
  427623:	mov    ecx,eax
  427625:	jne    0x427617
  427627:	jmp    0x427a45
  42762c:	movzx  eax,BYTE PTR [esi]
  42762f:	cmp    eax,0x53
  427632:	jg     0x42764e
  427634:	je     0x4276a5
  427636:	cmp    eax,0xa
  427639:	je     0x427691
  42763b:	jle    0x42765d
  42763d:	cmp    eax,0x1a
  427640:	jle    0x42767d
  427642:	cmp    eax,0x1b
  427645:	jle    0x42765d
  427647:	cmp    eax,0x1d
  42764a:	jle    0x42766e
  42764c:	jmp    0x42765d
  42764e:	cmp    eax,0x62
  427651:	je     0x4276cb
  427653:	cmp    eax,0x68
  427656:	jle    0x42765d
  427658:	cmp    eax,0x6a
  42765b:	jle    0x4276b9
  42765d:	mov    edx,DWORD PTR ds:0x44e104
  427663:	mov    ecx,esi
  427665:	call   0x43f399
  42766a:	mov    esi,DWORD PTR [esp+0xc]
  42766e:	mov    ecx,esi
  427670:	call   0x428f71
  427675:	mov    esi,eax
  427677:	mov    DWORD PTR [esp+0xc],esi
  42767b:	jmp    0x42762c
  42767d:	lea    edx,[esp+0x14]
  427681:	push   0x0
  427683:	push   DWORD PTR [ebp+0x8]
  427686:	lea    ecx,[esp+0x14]
  42768a:	call   0x428740
  42768f:	jmp    0x4276db
  427691:	lea    edx,[esp+0x14]
  427695:	push   0x0
  427697:	push   DWORD PTR [ebp+0x8]
  42769a:	lea    ecx,[esp+0x14]
  42769e:	call   0x427f2a
  4276a3:	jmp    0x4276db
  4276a5:	lea    edx,[esp+0x14]
  4276a9:	push   0x0
  4276ab:	push   DWORD PTR [ebp+0x8]
  4276ae:	lea    ecx,[esp+0x14]
  4276b2:	call   0x4289bd
  4276b7:	jmp    0x4276db
  4276b9:	lea    edx,[esp+0x14]
  4276bd:	push   DWORD PTR [ebp+0x8]
  4276c0:	lea    ecx,[esp+0x10]
  4276c4:	call   0x427484
  4276c9:	jmp    0x4276db
  4276cb:	lea    edx,[esp+0x14]
  4276cf:	push   DWORD PTR [esi+0x3]
  4276d2:	lea    ecx,[esp+0x10]
  4276d6:	call   0x427d59
  4276db:	mov    ecx,DWORD PTR [esp+0xc]
  4276df:	jmp    0x4276fe
  4276e1:	cmp    cl,0x1b
  4276e4:	je     0x4276eb
  4276e6:	cmp    cl,0x4e
  4276e9:	jne    0x4276fc
  4276eb:	mov    edx,DWORD PTR ds:0x44e104
  4276f1:	mov    ecx,eax
  4276f3:	call   0x43f399
  4276f8:	mov    eax,DWORD PTR [esp+0xc]
  4276fc:	mov    ecx,eax
  4276fe:	call   0x428f71
  427703:	mov    DWORD PTR [esp+0xc],eax
  427707:	mov    cl,BYTE PTR [eax]
  427709:	cmp    cl,0x6b
  42770c:	jne    0x4276e1
  42770e:	mov    ecx,eax
  427710:	jmp    0x427a45
  427715:	mov    edx,DWORD PTR ds:0x44e104
  42771b:	call   0x43f399
  427720:	mov    ecx,DWORD PTR [esp+0xc]
  427724:	call   0x428f71
  427729:	mov    ecx,DWORD PTR [esp+0x10]
  42772d:	mov    DWORD PTR [esp+0xc],eax
  427731:	test   ecx,ecx
  427733:	je     0x427982
  427739:	mov    al,BYTE PTR [ecx]
  42773b:	cmp    al,0x6b
  42773d:	je     0x427975
  427743:	cmp    al,0x66
  427745:	je     0x427979
  42774b:	cmp    al,0x6a
  42774d:	jne    0x42788d
  427753:	call   0x428f71
  427758:	mov    DWORD PTR [esp+0x10],eax
  42775c:	mov    al,BYTE PTR [eax]
  42775e:	cmp    al,0x63
  427760:	jne    0x427779
  427762:	push   0xffffffff
  427764:	push   DWORD PTR [ebp+0x8]
  427767:	lea    edx,[esp+0x18]
  42776b:	lea    ecx,[esp+0x14]
  42776f:	call   0x427f2a
  427774:	jmp    0x427a41
  427779:	cmp    al,0x53
  42777b:	jne    0x427794
  42777d:	push   0xffffffff
  42777f:	push   DWORD PTR [ebp+0x8]
  427782:	lea    edx,[esp+0x18]
  427786:	lea    ecx,[esp+0x14]
  42778a:	call   0x4289bd
  42778f:	jmp    0x427a41
  427794:	mov    eax,DWORD PTR [esp+0xc]
  427798:	mov    al,BYTE PTR [eax]
  42779a:	cmp    al,0x6b
  42779c:	je     0x427868
  4277a2:	mov    esi,DWORD PTR [ebp+0x8]
  4277a5:	movzx  eax,al
  4277a8:	cmp    eax,0x53
  4277ab:	jg     0x42780f
  4277ad:	je     0x4277fd
  4277af:	cmp    eax,0xa
  4277b2:	je     0x4277eb
  4277b4:	jle    0x427851
  4277ba:	cmp    eax,0x1a
  4277bd:	jle    0x4277d9
  4277bf:	cmp    eax,0x1b
  4277c2:	jne    0x427851
  4277c8:	mov    edx,DWORD PTR ds:0x44e104
  4277ce:	mov    ecx,DWORD PTR [esp+0xc]
  4277d2:	call   0x43f399
  4277d7:	jmp    0x427851
  4277d9:	push   0xffffffff
  4277db:	push   esi
  4277dc:	lea    edx,[esp+0x18]
  4277e0:	lea    ecx,[esp+0x14]
  4277e4:	call   0x428740
  4277e9:	jmp    0x427851
  4277eb:	push   0xffffffff
  4277ed:	push   esi
  4277ee:	lea    edx,[esp+0x18]
  4277f2:	lea    ecx,[esp+0x14]
  4277f6:	call   0x427f2a
  4277fb:	jmp    0x427851
  4277fd:	push   0x0
  4277ff:	push   esi
  427800:	lea    edx,[esp+0x1c]
  427804:	lea    ecx,[esp+0x14]
  427808:	call   0x4289bd
  42780d:	jmp    0x427851
  42780f:	cmp    eax,0x62
  427812:	je     0x42783d
  427814:	add    eax,0xffffff97
  427817:	cmp    eax,0x1
  42781a:	ja     0x427851
  42781c:	mov    eax,DWORD PTR [esp+0x10]
  427820:	test   eax,eax
  427822:	je     0x42782d
  427824:	cmp    BYTE PTR [eax],0x66
  427827:	lea    edx,[esp+0x10]
  42782b:	jne    0x427831
  42782d:	lea    edx,[esp+0x14]
  427831:	push   esi
  427832:	lea    ecx,[esp+0x10]
  427836:	call   0x427484
  42783b:	jmp    0x427851
  42783d:	mov    eax,DWORD PTR [esp+0xc]
  427841:	lea    edx,[esp+0x10]
  427845:	push   DWORD PTR [eax+0x3]
  427848:	lea    ecx,[esp+0x10]
  42784c:	call   0x427d59
  427851:	mov    ecx,DWORD PTR [esp+0xc]
  427855:	call   0x428f71
  42785a:	mov    DWORD PTR [esp+0xc],eax
  42785e:	mov    al,BYTE PTR [eax]
  427860:	cmp    al,0x6b
  427862:	jne    0x4277a5
  427868:	mov    eax,DWORD PTR [esp+0x10]
  42786c:	test   eax,eax
  42786e:	je     0x427a41
  427874:	cmp    BYTE PTR [eax],0x66
  427877:	jne    0x427a41
  42787d:	mov    ecx,eax
  42787f:	call   0x428f71
  427884:	mov    DWORD PTR [esp+0x10],eax
  427888:	jmp    0x427a41
  42788d:	cmp    al,0x69
  42788f:	jne    0x427962
  427895:	call   0x428f71
  42789a:	mov    DWORD PTR [esp+0x10],eax
  42789e:	mov    eax,DWORD PTR [esp+0xc]
  4278a2:	mov    al,BYTE PTR [eax]
  4278a4:	cmp    al,0x6b
  4278a6:	je     0x427a41
  4278ac:	mov    esi,DWORD PTR [ebp+0x8]
  4278af:	movzx  eax,al
  4278b2:	cmp    eax,0x53
  4278b5:	jg     0x427915
  4278b7:	je     0x427903
  4278b9:	cmp    eax,0xa
  4278bc:	je     0x4278f1
  4278be:	jle    0x427946
  4278c4:	cmp    eax,0x1a
  4278c7:	jle    0x4278df
  4278c9:	cmp    eax,0x1b
  4278cc:	jne    0x427946
  4278ce:	mov    edx,DWORD PTR ds:0x44e104
  4278d4:	mov    ecx,DWORD PTR [esp+0xc]
  4278d8:	call   0x43f399
  4278dd:	jmp    0x427946
  4278df:	push   0x0
  4278e1:	push   esi
  4278e2:	lea    edx,[esp+0x18]
  4278e6:	lea    ecx,[esp+0x14]
  4278ea:	call   0x428740
  4278ef:	jmp    0x427946
  4278f1:	push   0x0
  4278f3:	push   esi
  4278f4:	lea    edx,[esp+0x18]
  4278f8:	lea    ecx,[esp+0x14]
  4278fc:	call   0x427f2a
  427901:	jmp    0x427946
  427903:	push   0x0
  427905:	push   esi
  427906:	lea    edx,[esp+0x18]
  42790a:	lea    ecx,[esp+0x14]
  42790e:	call   0x4289bd
  427913:	jmp    0x427946
  427915:	cmp    eax,0x62
  427918:	je     0x427932
  42791a:	add    eax,0xffffff97
  42791d:	cmp    eax,0x1
  427920:	ja     0x427946
  427922:	push   esi
  427923:	lea    edx,[esp+0x14]
  427927:	lea    ecx,[esp+0x10]
  42792b:	call   0x427484
  427930:	jmp    0x427946
  427932:	mov    eax,DWORD PTR [esp+0xc]
  427936:	lea    edx,[esp+0x10]
  42793a:	push   DWORD PTR [eax+0x3]
  42793d:	lea    ecx,[esp+0x10]
  427941:	call   0x427d59
  427946:	mov    ecx,DWORD PTR [esp+0xc]
  42794a:	call   0x428f71
  42794f:	mov    DWORD PTR [esp+0xc],eax
  427953:	mov    al,BYTE PTR [eax]
  427955:	cmp    al,0x6b
  427957:	jne    0x4278af
  42795d:	jmp    0x427a41
  427962:	push   0x0
  427964:	xor    edx,edx
  427966:	mov    ecx,0x85a
  42796b:	call   0x42ee80
  427970:	jmp    0x427a41
  427975:	cmp    al,0x66
  427977:	jne    0x427982
  427979:	call   0x428f71
  42797e:	mov    DWORD PTR [esp+0x10],eax
  427982:	mov    eax,DWORD PTR [esp+0xc]
  427986:	mov    al,BYTE PTR [eax]
  427988:	cmp    al,0x6b
  42798a:	je     0x427a41
  427990:	mov    esi,DWORD PTR [ebp+0x8]
  427993:	movzx  eax,al
  427996:	cmp    eax,0x53
  427999:	jg     0x4279f9
  42799b:	je     0x4279e7
  42799d:	cmp    eax,0xa
  4279a0:	je     0x4279d5
  4279a2:	jle    0x427a2a
  4279a8:	cmp    eax,0x1a
  4279ab:	jle    0x4279c3
  4279ad:	cmp    eax,0x1b
  4279b0:	jne    0x427a2a
  4279b2:	mov    edx,DWORD PTR ds:0x44e104
  4279b8:	mov    ecx,DWORD PTR [esp+0xc]
  4279bc:	call   0x43f399
  4279c1:	jmp    0x427a2a
  4279c3:	push   0x0
  4279c5:	push   esi
  4279c6:	lea    edx,[esp+0x1c]
  4279ca:	lea    ecx,[esp+0x14]
  4279ce:	call   0x428740
  4279d3:	jmp    0x427a2a
  4279d5:	push   0x0
  4279d7:	push   esi
  4279d8:	lea    edx,[esp+0x1c]
  4279dc:	lea    ecx,[esp+0x14]
  4279e0:	call   0x427f2a
  4279e5:	jmp    0x427a2a
  4279e7:	push   0x0
  4279e9:	push   esi
  4279ea:	lea    edx,[esp+0x1c]
  4279ee:	lea    ecx,[esp+0x14]
  4279f2:	call   0x4289bd
  4279f7:	jmp    0x427a2a
  4279f9:	cmp    eax,0x62
  4279fc:	je     0x427a16
  4279fe:	add    eax,0xffffff97
  427a01:	cmp    eax,0x1
  427a04:	ja     0x427a2a
  427a06:	push   esi
  427a07:	lea    edx,[esp+0x18]
  427a0b:	lea    ecx,[esp+0x10]
  427a0f:	call   0x427484
  427a14:	jmp    0x427a2a
  427a16:	mov    eax,DWORD PTR [esp+0xc]
  427a1a:	lea    edx,[esp+0x14]
  427a1e:	push   DWORD PTR [eax+0x3]
  427a21:	lea    ecx,[esp+0x10]
  427a25:	call   0x427d59
  427a2a:	mov    ecx,DWORD PTR [esp+0xc]
  427a2e:	call   0x428f71
  427a33:	mov    DWORD PTR [esp+0xc],eax
  427a37:	mov    al,BYTE PTR [eax]
  427a39:	cmp    al,0x6b
  427a3b:	jne    0x427993
  427a41:	mov    ecx,DWORD PTR [esp+0xc]
  427a45:	mov    edx,DWORD PTR ds:0x44e104
  427a4b:	call   0x43f399
  427a50:	mov    esi,DWORD PTR [esp+0x10]
  427a54:	test   esi,esi
  427a56:	je     0x427a91
  427a58:	mov    al,BYTE PTR [esi]
  427a5a:	cmp    al,0x6b
  427a5c:	je     0x427a88
  427a5e:	cmp    al,0x66
  427a60:	je     0x427a88
  427a62:	push   0x0
  427a64:	xor    edx,edx
  427a66:	mov    ecx,0x7f4
  427a6b:	call   0x42ee80
  427a70:	mov    esi,DWORD PTR [esp+0x10]
  427a74:	jmp    0x427a83
  427a76:	mov    ecx,esi
  427a78:	call   0x428f71
  427a7d:	mov    esi,eax
  427a7f:	mov    DWORD PTR [esp+0x10],esi
  427a83:	cmp    BYTE PTR [esi],0x6b
  427a86:	jne    0x427a76
  427a88:	mov    ecx,esi
  427a8a:	call   0x428f71
  427a8f:	mov    esi,eax
  427a91:	mov    eax,DWORD PTR [esp+0xc]
  427a95:	mov    DWORD PTR [edi],esi
  427a97:	pop    edi
  427a98:	pop    esi
  427a99:	mov    DWORD PTR [ebx],eax
  427a9b:	pop    ebx
  427a9c:	mov    esp,ebp
  427a9e:	pop    ebp
  427a9f:	ret    0x4
  427aa2:	push   ebp
  427aa3:	mov    ebp,esp
  427aa5:	and    esp,0xfffffff8
  427aa8:	sub    esp,0x33c
  427aae:	mov    eax,ds:0x448858
  427ab3:	xor    eax,esp
  427ab5:	mov    DWORD PTR [esp+0x338],eax
  427abc:	mov    ecx,DWORD PTR [ebp+0x8]
  427abf:	push   ebx
  427ac0:	cmp    BYTE PTR [ecx+0x3],0x0
  427ac4:	push   esi
  427ac5:	sete   bl
  427ac8:	push   edi
  427ac9:	test   bl,bl
  427acb:	je     0x427af1
  427acd:	and    DWORD PTR ds:0x45f848,0x0
  427ad4:	inc    DWORD PTR ds:0x45f994
  427ada:	mov    edx,0x44e108
  427adf:	mov    BYTE PTR [ecx+0x3],0x1
  427ae3:	xor    eax,eax
  427ae5:	mov    edi,edx
  427ae7:	stos   DWORD PTR es:[edi],eax
  427ae8:	stos   DWORD PTR es:[edi],eax
  427ae9:	stos   DWORD PTR es:[edi],eax
  427aea:	stos   DWORD PTR es:[edi],eax
  427aeb:	mov    DWORD PTR ds:0x44e104,edx
  427af1:	mov    ecx,DWORD PTR [ecx+0x4]
  427af4:	push   0x4
  427af6:	mov    esi,DWORD PTR [ecx+0x24]
  427af9:	pop    edx
  427afa:	mov    DWORD PTR [esp+0x1c],ecx
  427afe:	add    esi,edx
  427b00:	je     0x427d1a
  427b06:	lea    eax,[esp+0x1b0]
  427b0d:	lea    edi,[esp+0x20]
  427b11:	mov    DWORD PTR [esp+0x10],eax
  427b15:	movzx  eax,BYTE PTR [esi]
  427b18:	cmp    eax,0x53
  427b1b:	jg     0x427cb7
  427b21:	je     0x427c89
  427b27:	cmp    eax,0xa
  427b2a:	je     0x427bdd
  427b30:	jle    0x427ce0
  427b36:	cmp    eax,0x1a
  427b39:	jle    0x427c07
  427b3f:	cmp    eax,0x1b
  427b42:	je     0x427ccd
  427b48:	cmp    eax,0x4e
  427b4b:	je     0x427ba3
  427b4d:	cmp    eax,0x50
  427b50:	jne    0x427ce0
  427b56:	test   bl,bl
  427b58:	je     0x427d02
  427b5e:	mov    eax,DWORD PTR [esi+0x7]
  427b61:	mov    DWORD PTR [esp+0x18],eax
  427b65:	mov    eax,DWORD PTR [esi+0x3]
  427b68:	cmp    BYTE PTR [eax+0x6],0xd
  427b6c:	jne    0x427b86
  427b6e:	and    DWORD PTR [esp+0x14],0x0
  427b73:	push   eax
  427b74:	lea    edx,[esp+0x18]
  427b78:	lea    ecx,[esp+0x1c]
  427b7c:	call   0x427d59
  427b81:	jmp    0x427d02
  427b86:	mov    eax,DWORD PTR [eax+0x24]
  427b89:	add    eax,edx
  427b8b:	push   0x1
  427b8d:	lea    edx,[esp+0x1c]
  427b91:	lea    ecx,[esp+0x18]
  427b95:	mov    DWORD PTR [esp+0x18],eax
  427b99:	call   0x427484
  427b9e:	jmp    0x427d02
  427ba3:	test   bl,bl
  427ba5:	je     0x427d02
  427bab:	mov    edx,DWORD PTR ds:0x44e104
  427bb1:	mov    ecx,esi
  427bb3:	call   0x43f399
  427bb8:	mov    ecx,DWORD PTR [esp+0x10]
  427bbc:	mov    eax,ds:0x45f848
  427bc1:	push   0x4
  427bc3:	pop    edx
  427bc4:	sub    ecx,edx
  427bc6:	sub    edi,edx
  427bc8:	sub    eax,DWORD PTR [ecx]
  427bca:	mov    DWORD PTR [esp+0x10],ecx
  427bce:	imul   eax,DWORD PTR [edi]
  427bd1:	add    eax,DWORD PTR [ecx]
  427bd3:	mov    ds:0x45f848,eax
  427bd8:	jmp    0x427d02
  427bdd:	test   bl,bl
  427bdf:	je     0x427d02
  427be5:	cmp    BYTE PTR [esi+0x4],0x7
  427be9:	jne    0x427c07
  427beb:	mov    edx,DWORD PTR ds:0x44e104
  427bf1:	mov    ecx,esi
  427bf3:	call   0x43f399
  427bf8:	movzx  eax,BYTE PTR [esi+0x5]
  427bfc:	add    DWORD PTR ds:0x45f848,eax
  427c02:	jmp    0x427d02
  427c07:	test   bl,bl
  427c09:	je     0x427d02
  427c0f:	lea    ecx,[esi+0x3]
  427c12:	mov    dl,0x2
  427c14:	call   0x42f6c1
  427c19:	test   eax,eax
  427c1b:	je     0x427c2a
  427c1d:	mov    ecx,DWORD PTR ds:0x45f83c
  427c23:	mov    DWORD PTR [eax],ecx
  427c25:	mov    ds:0x45f83c,eax
  427c2a:	cmp    BYTE PTR ds:0x45f852,0x0
  427c31:	je     0x427c6f
  427c33:	movzx  eax,BYTE PTR ds:0x45f888
  427c3a:	push   eax
  427c3b:	push   0x45f888
  427c40:	push   0x45f88b
  427c45:	call   DWORD PTR ds:0x464358
  427c4b:	mov    al,BYTE PTR [esi]
  427c4d:	add    esp,0xc
  427c50:	mov    ds:0x45f888,al
  427c55:	movzx  eax,BYTE PTR ds:0x45f88b
  427c5c:	push   0x4
  427c5e:	pop    edx
  427c5f:	add    ax,dx
  427c62:	mov    ds:0x45f889,ax
  427c68:	mov    ecx,0x45f888
  427c6d:	jmp    0x427c71
  427c6f:	mov    ecx,esi
  427c71:	mov    edx,DWORD PTR ds:0x44e104
  427c77:	call   0x43f399
  427c7c:	movzx  ecx,BYTE PTR [esi]
  427c7f:	call   0x446047
  427c84:	jmp    0x427bfc
  427c89:	test   bl,bl
  427c8b:	je     0x427d02
  427c8d:	mov    edx,DWORD PTR ds:0x44e104
  427c93:	mov    ecx,esi
  427c95:	call   0x43f399
  427c9a:	mov    ecx,DWORD PTR [esp+0x10]
  427c9e:	mov    eax,ds:0x45f848
  427ca3:	push   0x4
  427ca5:	mov    DWORD PTR [ecx],eax
  427ca7:	mov    eax,DWORD PTR [esi+0x7]
  427caa:	pop    edx
  427cab:	add    ecx,edx
  427cad:	mov    DWORD PTR [edi],eax
  427caf:	mov    DWORD PTR [esp+0x10],ecx
  427cb3:	add    edi,edx
  427cb5:	jmp    0x427d02
  427cb7:	sub    eax,0x62
  427cba:	cmp    eax,0xa
  427cbd:	ja     0x427ce0
  427cbf:	movzx  eax,BYTE PTR [eax+0x427d4e]
  427cc6:	jmp    DWORD PTR [eax*4+0x427d46]
  427ccd:	test   bl,bl
  427ccf:	je     0x427d02
  427cd1:	mov    edx,DWORD PTR ds:0x44e104
  427cd7:	mov    ecx,esi
  427cd9:	call   0x43f399
  427cde:	jmp    0x427d02
  427ce0:	test   bl,bl
  427ce2:	je     0x427cf1
  427ce4:	mov    edx,DWORD PTR ds:0x44e104
  427cea:	mov    ecx,esi
  427cec:	call   0x43f399
  427cf1:	movzx  eax,BYTE PTR [esi]
  427cf4:	mov    eax,DWORD PTR [eax*4+0x404898]
  427cfb:	test   eax,eax
  427cfd:	je     0x427d02
  427cff:	push   esi
  427d00:	call   eax
  427d02:	mov    ecx,esi
  427d04:	call   0x428f71
  427d09:	mov    esi,eax
  427d0b:	push   0x4
  427d0d:	pop    edx
  427d0e:	test   esi,esi
  427d10:	jne    0x427b15
  427d16:	mov    ecx,DWORD PTR [esp+0x1c]
  427d1a:	test   bl,bl
  427d1c:	je     0x427d2c
  427d1e:	mov    eax,ds:0x44e110
  427d23:	dec    DWORD PTR ds:0x45f994
  427d29:	mov    DWORD PTR [ecx+0x24],eax
  427d2c:	mov    ecx,DWORD PTR [esp+0x344]
  427d33:	pop    edi
  427d34:	pop    esi
  427d35:	pop    ebx
  427d36:	xor    ecx,esp
  427d38:	call   0x446dc7
  427d3d:	mov    esp,ebp
  427d3f:	pop    ebp
  427d40:	ret    0x4
  427d43:	lea    ecx,[ecx+0x0]
  427d46:	int    0x7c
  427d48:	inc    edx
  427d49:	add    al,ah
  427d4b:	jl     0x427d8f
  427d4d:	add    BYTE PTR [eax],al
  427d4f:	add    BYTE PTR [ecx],al
  427d51:	add    DWORD PTR [eax],eax
  427d53:	add    BYTE PTR [eax],al
  427d55:	add    BYTE PTR [eax],al
  427d57:	add    BYTE PTR [eax],al
  427d59:	push   ebp
  427d5a:	mov    ebp,esp
  427d5c:	sub    esp,0x10
  427d5f:	push   ebx
  427d60:	push   esi
  427d61:	mov    esi,DWORD PTR [ecx]
  427d63:	mov    eax,edx
  427d65:	mov    edx,DWORD PTR ds:0x44e104
  427d6b:	push   edi
  427d6c:	mov    edi,DWORD PTR [eax]
  427d6e:	mov    DWORD PTR [ebp-0x8],eax
  427d71:	push   0x7
  427d73:	pop    eax
  427d74:	mov    WORD PTR [ebp-0xf],ax
  427d78:	mov    eax,DWORD PTR [ebp+0x8]
  427d7b:	mov    DWORD PTR [ebp-0x4],ecx
  427d7e:	lea    ecx,[ebp-0x10]
  427d81:	xor    bl,bl
  427d83:	xor    bh,bh
  427d85:	mov    BYTE PTR [ebp-0x10],0x62
  427d89:	mov    DWORD PTR [ebp-0xd],eax
  427d8c:	call   0x43f399
  427d91:	mov    ecx,esi
  427d93:	call   0x428f71
  427d98:	mov    esi,eax
  427d9a:	test   edi,edi
  427d9c:	je     0x427dd2
  427d9e:	mov    al,BYTE PTR [edi]
  427da0:	cmp    al,0x69
  427da2:	je     0x427da8
  427da4:	cmp    al,0x6a
  427da6:	jne    0x427db1
  427da8:	mov    ecx,edi
  427daa:	call   0x428f71
  427daf:	mov    edi,eax
  427db1:	mov    al,BYTE PTR [edi]
  427db3:	cmp    al,0x6b
  427db5:	je     0x427dd2
  427db7:	cmp    al,0x66
  427db9:	jne    0x427dca
  427dbb:	mov    ecx,edi
  427dbd:	call   0x428f71
  427dc2:	mov    bh,0x1
  427dc4:	mov    edi,eax
  427dc6:	mov    bl,bh
  427dc8:	jmp    0x427dd4
  427dca:	cmp    al,0x63
  427dcc:	jne    0x427dd4
  427dce:	mov    bh,0x1
  427dd0:	jmp    0x427dd4
  427dd2:	mov    bl,0x1
  427dd4:	xor    ecx,ecx
  427dd6:	inc    ecx
  427dd7:	mov    DWORD PTR [ebp+0x8],ecx
  427dda:	mov    al,BYTE PTR [esi]
  427ddc:	cmp    al,0x6b
  427dde:	jne    0x427e2f
  427de0:	dec    ecx
  427de1:	mov    DWORD PTR [ebp+0x8],ecx
  427de4:	je     0x427ea5
  427dea:	test   bl,bl
  427dec:	jne    0x427e10
  427dee:	mov    al,BYTE PTR [edi]
  427df0:	cmp    al,0x66
  427df2:	je     0x427df8
  427df4:	cmp    al,0x63
  427df6:	jne    0x427e17
  427df8:	mov    edx,DWORD PTR ds:0x44e104
  427dfe:	mov    ecx,edi
  427e00:	call   0x43f399
  427e05:	mov    ecx,edi
  427e07:	call   0x428f71
  427e0c:	mov    edi,eax
  427e0e:	jmp    0x427e17
  427e10:	cmp    bl,0x2
  427e13:	jne    0x427e20
  427e15:	xor    bl,bl
  427e17:	mov    ecx,edi
  427e19:	call   0x428f71
  427e1e:	mov    edi,eax
  427e20:	mov    edx,DWORD PTR ds:0x44e104
  427e26:	mov    ecx,esi
  427e28:	call   0x43f399
  427e2d:	jmp    0x427e94
  427e2f:	cmp    al,0x6a
  427e31:	jne    0x427e5e
  427e33:	mov    edx,DWORD PTR ds:0x44e104
  427e39:	inc    ecx
  427e3a:	mov    DWORD PTR [ebp+0x8],ecx
  427e3d:	mov    ecx,esi
  427e3f:	call   0x43f399
  427e44:	test   bl,bl
  427e46:	jne    0x427e94
  427e48:	mov    al,BYTE PTR [edi]
  427e4a:	cmp    al,0x6b
  427e4c:	jne    0x427e52
  427e4e:	inc    bl
  427e50:	jmp    0x427e94
  427e52:	cmp    al,0x69
  427e54:	je     0x427e94
  427e56:	cmp    al,0x66
  427e58:	jne    0x427e8b
  427e5a:	mov    bl,0x2
  427e5c:	jmp    0x427e94
  427e5e:	cmp    al,0x69
  427e60:	je     0x427e94
  427e62:	test   bl,bl
  427e64:	jne    0x427e7a
  427e66:	cmp    BYTE PTR [edi],0x63
  427e69:	jne    0x427e7a
  427e6b:	mov    edx,DWORD PTR ds:0x44e104
  427e71:	mov    ecx,edi
  427e73:	call   0x43f399
  427e78:	jmp    0x427e8b
  427e7a:	mov    edx,DWORD PTR ds:0x44e104
  427e80:	mov    ecx,esi
  427e82:	call   0x43f399
  427e87:	test   bl,bl
  427e89:	jne    0x427e94
  427e8b:	mov    ecx,edi
  427e8d:	call   0x428f71
  427e92:	mov    edi,eax
  427e94:	mov    ecx,esi
  427e96:	call   0x428f71
  427e9b:	mov    ecx,DWORD PTR [ebp+0x8]
  427e9e:	mov    esi,eax
  427ea0:	jmp    0x427dda
  427ea5:	mov    DWORD PTR [ebp+0x8],esi
  427ea8:	test   bl,bl
  427eaa:	jne    0x427efb
  427eac:	cmp    BYTE PTR [edi],0x6a
  427eaf:	jne    0x427efb
  427eb1:	mov    edx,DWORD PTR ds:0x44e104
  427eb7:	mov    ecx,edi
  427eb9:	call   0x43f399
  427ebe:	mov    ecx,edi
  427ec0:	call   0x428f71
  427ec5:	mov    edx,DWORD PTR ds:0x44e104
  427ecb:	mov    esi,eax
  427ecd:	mov    ecx,esi
  427ecf:	call   0x43f399
  427ed4:	mov    ecx,esi
  427ed6:	call   0x428f71
  427edb:	mov    edx,DWORD PTR ds:0x44e104
  427ee1:	mov    esi,eax
  427ee3:	mov    ecx,esi
  427ee5:	call   0x43f399
  427eea:	mov    ecx,esi
  427eec:	call   0x428f71
  427ef1:	mov    edi,eax
  427ef3:	cmp    BYTE PTR [edi],0x6a
  427ef6:	je     0x427eb1
  427ef8:	mov    esi,DWORD PTR [ebp+0x8]
  427efb:	test   edi,edi
  427efd:	je     0x427f0c
  427eff:	test   bh,bh
  427f01:	jne    0x427f0c
  427f03:	mov    ecx,edi
  427f05:	call   0x428f71
  427f0a:	mov    edi,eax
  427f0c:	mov    edx,DWORD PTR ds:0x44e104
  427f12:	mov    ecx,esi
  427f14:	call   0x43f399
  427f19:	mov    eax,DWORD PTR [ebp-0x4]
  427f1c:	mov    DWORD PTR [eax],esi
  427f1e:	mov    eax,DWORD PTR [ebp-0x8]
  427f21:	mov    DWORD PTR [eax],edi
  427f23:	pop    edi
  427f24:	pop    esi
  427f25:	pop    ebx
  427f26:	leave  
  427f27:	ret    0x4
  427f2a:	push   ebp
  427f2b:	mov    ebp,esp
  427f2d:	sub    esp,0x14
  427f30:	push   ebx
  427f31:	mov    eax,ecx
  427f33:	mov    ebx,edx
  427f35:	push   esi
  427f36:	mov    esi,DWORD PTR [ebx]
  427f38:	push   edi
  427f39:	mov    edi,DWORD PTR [eax]
  427f3b:	xor    edx,edx
  427f3d:	mov    DWORD PTR [ebp-0x10],eax
  427f40:	mov    eax,DWORD PTR [ebp+0xc]
  427f43:	xor    ecx,ecx
  427f45:	inc    edx
  427f46:	mov    DWORD PTR [ebp-0xc],ebx
  427f49:	mov    DWORD PTR [ebp-0x8],esi
  427f4c:	mov    DWORD PTR [ebp-0x14],edi
  427f4f:	mov    DWORD PTR [ebp-0x4],ecx
  427f52:	mov    ebx,0x45f888
  427f57:	test   eax,eax
  427f59:	jne    0x428423
  427f5f:	test   esi,esi
  427f61:	je     0x428346
  427f67:	mov    al,BYTE PTR [esi]
  427f69:	cmp    al,0x6b
  427f6b:	je     0x428346
  427f71:	cmp    al,0x66
  427f73:	je     0x428346
  427f79:	movzx  eax,al
  427f7c:	sub    eax,0x53
  427f7f:	je     0x4281e1
  427f85:	sub    eax,0x10
  427f88:	je     0x428045
  427f8e:	sub    eax,0x6
  427f91:	je     0x427ffe
  427f93:	dec    eax
  427f94:	je     0x427fb5
  427f96:	mov    ecx,esi
  427f98:	call   0x428f71
  427f9d:	mov    ecx,DWORD PTR [ebp-0xc]
  427fa0:	push   0x0
  427fa2:	mov    DWORD PTR [ecx],eax
  427fa4:	xor    edx,edx
  427fa6:	mov    ecx,0x885
  427fab:	call   0x42ee80
  427fb0:	jmp    0x428739
  427fb5:	cmp    BYTE PTR [edi+0x4],0x7
  427fb9:	jne    0x427ffe
  427fbb:	movzx  ebx,BYTE PTR [esi+0x5]
  427fbf:	mov    ecx,esi
  427fc1:	call   0x428f71
  427fc6:	mov    esi,eax
  427fc8:	cmp    BYTE PTR [esi],0x63
  427fcb:	jne    0x427ffe
  427fcd:	cmp    BYTE PTR [esi+0x4],0x7
  427fd1:	je     0x427ffe
  427fd3:	mov    edx,DWORD PTR ds:0x44e104
  427fd9:	mov    ecx,esi
  427fdb:	mov    BYTE PTR [esi],0xa
  427fde:	call   0x43f399
  427fe3:	mov    ecx,esi
  427fe5:	dec    ebx
  427fe6:	call   0x428f71
  427feb:	mov    ecx,eax
  427fed:	call   0x428f71
  427ff2:	mov    esi,eax
  427ff4:	cmp    BYTE PTR [esi],0x6b
  427ff7:	jne    0x427fbf
  427ff9:	jmp    0x4284ca
  427ffe:	mov    al,BYTE PTR [esi]
  428000:	xor    edi,edi
  428002:	inc    edi
  428003:	cmp    al,0x6b
  428005:	je     0x428026
  428007:	mov    ecx,esi
  428009:	call   0x428f71
  42800e:	mov    esi,eax
  428010:	mov    al,BYTE PTR [esi]
  428012:	cmp    al,0x6b
  428014:	jne    0x428019
  428016:	dec    edi
  428017:	jmp    0x428022
  428019:	cmp    al,0x69
  42801b:	je     0x428021
  42801d:	cmp    al,0x6a
  42801f:	jne    0x428022
  428021:	inc    edi
  428022:	test   edi,edi
  428024:	jne    0x428003
  428026:	push   0x0
  428028:	xor    edx,edx
  42802a:	mov    ecx,0x885
  42802f:	call   0x42ee80
  428034:	mov    ecx,esi
  428036:	call   0x428f71
  42803b:	mov    ecx,DWORD PTR [ebp-0xc]
  42803e:	mov    DWORD PTR [ecx],eax
  428040:	jmp    0x428739
  428045:	mov    al,BYTE PTR [esi+0x4]
  428048:	cmp    al,0x7
  42804a:	jne    0x42814c
  428050:	cmp    BYTE PTR [esi+0x5],dl
  428053:	jbe    0x428136
  428059:	mov    BYTE PTR [esi],0xa
  42805c:	cmp    BYTE PTR [ebp+0x8],cl
  42805f:	je     0x4280d1
  428061:	lea    ecx,[esi+0x3]
  428064:	mov    dl,0x2
  428066:	call   0x42f6c1
  42806b:	test   eax,eax
  42806d:	je     0x42807c
  42806f:	mov    ecx,DWORD PTR ds:0x45f83c
  428075:	mov    DWORD PTR [eax],ecx
  428077:	mov    ds:0x45f83c,eax
  42807c:	cmp    BYTE PTR ds:0x45f852,0x0
  428083:	je     0x4280b8
  428085:	movzx  eax,BYTE PTR ds:0x45f888
  42808c:	push   eax
  42808d:	push   ebx
  42808e:	push   0x45f88b
  428093:	call   DWORD PTR ds:0x464358
  428099:	mov    al,BYTE PTR [edi]
  42809b:	mov    ds:0x45f888,al
  4280a0:	movzx  eax,BYTE PTR ds:0x45f88b
  4280a7:	add    esp,0xc
  4280aa:	add    ax,0x4
  4280ae:	mov    ds:0x45f889,ax
  4280b4:	mov    ecx,ebx
  4280b6:	jmp    0x4280ba
  4280b8:	mov    ecx,esi
  4280ba:	mov    edx,DWORD PTR ds:0x44e104
  4280c0:	call   0x43f399
  4280c5:	movzx  eax,BYTE PTR [edi+0x5]
  4280c9:	add    DWORD PTR ds:0x45f848,eax
  4280cf:	jmp    0x4280e9
  4280d1:	cmp    BYTE PTR [esi+0x4],0x7
  4280d5:	jne    0x4280dc
  4280d7:	cmp    BYTE PTR [esi+0x5],cl
  4280da:	jbe    0x4280e9
  4280dc:	mov    edx,DWORD PTR ds:0x44e104
  4280e2:	mov    ecx,esi
  4280e4:	call   0x43f399
  4280e9:	cmp    BYTE PTR [esi+0x4],0x7
  4280ed:	movzx  ebx,BYTE PTR [edi+0x5]
  4280f1:	jne    0x428111
  4280f3:	movzx  eax,BYTE PTR [esi+0x5]
  4280f7:	sub    ebx,eax
  4280f9:	mov    ecx,edi
  4280fb:	jmp    0x428105
  4280fd:	movzx  ecx,BYTE PTR [eax+0x5]
  428101:	add    ebx,ecx
  428103:	mov    ecx,eax
  428105:	call   0x428f71
  42810a:	cmp    BYTE PTR [eax],0x6b
  42810d:	jne    0x4280fd
  42810f:	jmp    0x428112
  428111:	dec    ebx
  428112:	mov    ecx,esi
  428114:	call   0x428f71
  428119:	mov    esi,eax
  42811b:	test   ebx,ebx
  42811d:	jns    0x4284c4
  428123:	push   0x0
  428125:	mov    ecx,0x7f9
  42812a:	xor    edx,edx
  42812c:	call   0x42ee80
  428131:	jmp    0x428734
  428136:	cmp    al,0x7
  428138:	jne    0x42814c
  42813a:	cmp    BYTE PTR [esi+0x5],dl
  42813d:	jbe    0x42814c
  42813f:	push   ecx
  428140:	xor    edx,edx
  428142:	mov    ecx,0x7f9
  428147:	call   0x42ee80
  42814c:	cmp    BYTE PTR [ebp+0x8],0x0
  428150:	mov    BYTE PTR [esi],0xa
  428153:	je     0x4281c6
  428155:	lea    ecx,[esi+0x3]
  428158:	mov    dl,0x2
  42815a:	call   0x42f6c1
  42815f:	test   eax,eax
  428161:	je     0x428170
  428163:	mov    ecx,DWORD PTR ds:0x45f83c
  428169:	mov    DWORD PTR [eax],ecx
  42816b:	mov    ds:0x45f83c,eax
  428170:	cmp    BYTE PTR ds:0x45f852,0x0
  428177:	je     0x4281b1
  428179:	movzx  eax,BYTE PTR ds:0x45f888
  428180:	push   eax
  428181:	mov    ebx,0x45f888
  428186:	push   ebx
  428187:	push   0x45f88b
  42818c:	call   DWORD PTR ds:0x464358
  428192:	mov    al,BYTE PTR [edi]
  428194:	mov    ds:0x45f888,al
  428199:	movzx  eax,BYTE PTR ds:0x45f88b
  4281a0:	add    esp,0xc
  4281a3:	add    ax,0x4
  4281a7:	mov    ds:0x45f889,ax
  4281ad:	mov    ecx,ebx
  4281af:	jmp    0x4281b3
  4281b1:	mov    ecx,esi
  4281b3:	mov    edx,DWORD PTR ds:0x44e104
  4281b9:	call   0x43f399
  4281be:	inc    DWORD PTR ds:0x45f848
  4281c4:	jmp    0x4281d3
  4281c6:	mov    edx,DWORD PTR ds:0x44e104
  4281cc:	mov    ecx,esi
  4281ce:	call   0x43f399
  4281d3:	mov    ecx,esi
  4281d5:	call   0x428f71
  4281da:	mov    esi,eax
  4281dc:	jmp    0x428734
  4281e1:	cmp    BYTE PTR [edi+0x4],0x7
  4281e5:	je     0x4281f4
  4281e7:	push   ecx
  4281e8:	xor    edx,edx
  4281ea:	mov    ecx,0x885
  4281ef:	call   0x42ee80
  4281f4:	mov    ebx,DWORD PTR [esi+0x7]
  4281f7:	mov    edx,DWORD PTR ds:0x44e104
  4281fd:	mov    ecx,esi
  4281ff:	mov    DWORD PTR [esi+0x3],ebx
  428202:	call   0x43f399
  428207:	mov    ecx,esi
  428209:	call   0x428f71
  42820e:	mov    esi,eax
  428210:	cmp    BYTE PTR [esi],0x6a
  428213:	jne    0x428230
  428215:	mov    edx,DWORD PTR ds:0x44e104
  42821b:	mov    ecx,esi
  42821d:	call   0x43f399
  428222:	mov    ecx,esi
  428224:	call   0x428f71
  428229:	mov    esi,eax
  42822b:	cmp    BYTE PTR [esi],0x6a
  42822e:	je     0x428243
  428230:	push   0x0
  428232:	xor    edx,edx
  428234:	mov    ecx,0x886
  428239:	call   0x42ee80
  42823e:	jmp    0x428301
  428243:	mov    edx,DWORD PTR ds:0x44e104
  428249:	mov    ecx,esi
  42824b:	call   0x43f399
  428250:	mov    ecx,esi
  428252:	call   0x428f71
  428257:	mov    esi,eax
  428259:	cmp    BYTE PTR [esi],0x63
  42825c:	je     0x4282a2
  42825e:	push   0x0
  428260:	xor    edx,edx
  428262:	mov    ecx,0x887
  428267:	call   0x42ee80
  42826c:	xor    edi,edi
  42826e:	inc    edi
  42826f:	cmp    edi,0x1
  428272:	jne    0x428279
  428274:	cmp    BYTE PTR [esi],0x6b
  428277:	je     0x428296
  428279:	mov    al,BYTE PTR [esi]
  42827b:	cmp    al,0x6a
  42827d:	je     0x42828a
  42827f:	cmp    al,0x69
  428281:	je     0x42828a
  428283:	cmp    al,0x6b
  428285:	jne    0x42828b
  428287:	dec    edi
  428288:	jmp    0x42828b
  42828a:	inc    edi
  42828b:	mov    ecx,esi
  42828d:	call   0x428f71
  428292:	mov    esi,eax
  428294:	jmp    0x42826f
  428296:	mov    ecx,esi
  428298:	call   0x428f71
  42829d:	mov    edi,DWORD PTR [ebp-0x14]
  4282a0:	jmp    0x4282ff
  4282a2:	cmp    BYTE PTR [esi+0x4],0x7
  4282a6:	jne    0x4282bc
  4282a8:	cmp    BYTE PTR [esi+0x5],0x1
  4282ac:	jbe    0x4282bc
  4282ae:	push   0x0
  4282b0:	xor    edx,edx
  4282b2:	mov    ecx,0x7f9
  4282b7:	call   0x42ee80
  4282bc:	mov    edx,DWORD PTR ds:0x44e104
  4282c2:	mov    ecx,esi
  4282c4:	mov    BYTE PTR [esi],0xa
  4282c7:	call   0x43f399
  4282cc:	mov    ecx,esi
  4282ce:	call   0x428f71
  4282d3:	mov    edx,DWORD PTR ds:0x44e104
  4282d9:	mov    esi,eax
  4282db:	mov    ecx,esi
  4282dd:	call   0x43f399
  4282e2:	mov    ecx,esi
  4282e4:	call   0x428f71
  4282e9:	mov    edx,DWORD PTR ds:0x44e104
  4282ef:	mov    esi,eax
  4282f1:	mov    ecx,esi
  4282f3:	call   0x43f399
  4282f8:	mov    ecx,esi
  4282fa:	call   0x428f71
  4282ff:	mov    esi,eax
  428301:	cmp    BYTE PTR [esi],0x4e
  428304:	jne    0x4282f8
  428306:	mov    edx,DWORD PTR ds:0x44e104
  42830c:	mov    ecx,esi
  42830e:	call   0x43f399
  428313:	movzx  eax,BYTE PTR [edi+0x4]
  428317:	sub    ebx,eax
  428319:	test   ebx,ebx
  42831b:	jle    0x428330
  42831d:	push   0x0
  42831f:	xor    edx,edx
  428321:	mov    ecx,0x7f4
  428326:	call   0x42ee80
  42832b:	jmp    0x4281d3
  428330:	je     0x4281d3
  428336:	mov    ecx,esi
  428338:	neg    ebx
  42833a:	call   0x428f71
  42833f:	mov    esi,eax
  428341:	jmp    0x4284ca
  428346:	cmp    BYTE PTR [ebp+0x8],cl
  428349:	je     0x4283d2
  42834f:	lea    ecx,[edi+0x3]
  428352:	mov    dl,0x2
  428354:	call   0x42f6c1
  428359:	test   eax,eax
  42835b:	je     0x42836a
  42835d:	mov    ecx,DWORD PTR ds:0x45f83c
  428363:	mov    DWORD PTR [eax],ecx
  428365:	mov    ds:0x45f83c,eax
  42836a:	cmp    BYTE PTR ds:0x45f852,0x0
  428371:	je     0x4283ab
  428373:	movzx  eax,BYTE PTR ds:0x45f888
  42837a:	push   eax
  42837b:	mov    ebx,0x45f888
  428380:	push   ebx
  428381:	push   0x45f88b
  428386:	call   DWORD PTR ds:0x464358
  42838c:	mov    al,BYTE PTR [edi]
  42838e:	mov    ds:0x45f888,al
  428393:	movzx  eax,BYTE PTR ds:0x45f88b
  42839a:	add    esp,0xc
  42839d:	add    ax,0x4
  4283a1:	mov    ds:0x45f889,ax
  4283a7:	mov    ecx,ebx
  4283a9:	jmp    0x4283ad
  4283ab:	mov    ecx,edi
  4283ad:	mov    edx,DWORD PTR ds:0x44e104
  4283b3:	call   0x43f399
  4283b8:	cmp    BYTE PTR [edi+0x4],0x7
  4283bc:	jne    0x4283ca
  4283be:	movzx  eax,BYTE PTR [edi+0x5]
  4283c2:	add    DWORD PTR ds:0x45f848,eax
  4283c8:	jmp    0x4283df
  4283ca:	inc    DWORD PTR ds:0x45f848
  4283d0:	jmp    0x4283df
  4283d2:	mov    edx,DWORD PTR ds:0x44e104
  4283d8:	mov    ecx,edi
  4283da:	call   0x43f399
  4283df:	mov    ecx,edi
  4283e1:	call   0x428f71
  4283e6:	mov    edi,eax
  4283e8:	cmp    BYTE PTR [edi],0x6b
  4283eb:	je     0x42840d
  4283ed:	mov    ebx,DWORD PTR [ebp-0x10]
  4283f0:	mov    edx,DWORD PTR ds:0x44e104
  4283f6:	mov    ecx,edi
  4283f8:	mov    DWORD PTR [ebx],edi
  4283fa:	call   0x43f399
  4283ff:	mov    ecx,edi
  428401:	call   0x428f71
  428406:	mov    edi,eax
  428408:	cmp    BYTE PTR [edi],0x6b
  42840b:	jne    0x4283f0
  42840d:	test   esi,esi
  42840f:	je     0x428734
  428415:	cmp    BYTE PTR [esi],0x66
  428418:	jne    0x428734
  42841e:	jmp    0x4281d3
  428423:	cmp    eax,edx
  428425:	jne    0x42851c
  42842b:	movzx  ebx,BYTE PTR [edi+0x5]
  42842f:	mov    edi,edx
  428431:	movzx  eax,BYTE PTR [esi]
  428434:	sub    eax,0x69
  428437:	je     0x4284a6
  428439:	dec    eax
  42843a:	je     0x428460
  42843c:	dec    eax
  42843d:	je     0x42844e
  42843f:	push   ecx
  428440:	xor    edx,edx
  428442:	mov    ecx,0x85a
  428447:	call   0x42ee80
  42844c:	jmp    0x4284b4
  42844e:	dec    edi
  42844f:	jne    0x4284b4
  428451:	test   ebx,ebx
  428453:	jns    0x4284c4
  428455:	push   ecx
  428456:	mov    ecx,0x7f4
  42845b:	jmp    0x42812a
  428460:	mov    ecx,esi
  428462:	call   0x428f71
  428467:	mov    esi,eax
  428469:	cmp    BYTE PTR [esi],0x63
  42846c:	jne    0x4284a4
  42846e:	cmp    BYTE PTR [esi+0x4],0x7
  428472:	jne    0x428488
  428474:	cmp    BYTE PTR [esi+0x5],0x1
  428478:	jbe    0x428488
  42847a:	push   0x0
  42847c:	xor    edx,edx
  42847e:	mov    ecx,0x887
  428483:	call   0x42ee80
  428488:	mov    edx,DWORD PTR ds:0x44e104
  42848e:	mov    ecx,esi
  428490:	mov    BYTE PTR [esi],0xa
  428493:	call   0x43f399
  428498:	mov    ecx,esi
  42849a:	dec    ebx
  42849b:	call   0x428f71
  4284a0:	mov    esi,eax
  4284a2:	jmp    0x4284b4
  4284a4:	xor    ecx,ecx
  4284a6:	push   ecx
  4284a7:	xor    edx,edx
  4284a9:	mov    ecx,0x888
  4284ae:	call   0x42ee80
  4284b3:	inc    edi
  4284b4:	mov    ecx,esi
  4284b6:	call   0x428f71
  4284bb:	mov    esi,eax
  4284bd:	xor    ecx,ecx
  4284bf:	jmp    0x428431
  4284c4:	je     0x428734
  4284ca:	lea    eax,[ebx+0x6]
  4284cd:	push   eax
  4284ce:	push   0x20
  4284d0:	mov    edi,0x45f888
  4284d5:	push   edi
  4284d6:	call   0x44764c
  4284db:	mov    edx,DWORD PTR ds:0x44e104
  4284e1:	lea    eax,[ebx+0x7]
  4284e4:	mov    ds:0x45f889,ax
  4284ea:	lea    eax,[ebx+0x4]
  4284ed:	mov    BYTE PTR ds:0x45f888,0xa
  4284f4:	mov    ds:0x45f88b,al
  4284f9:	mov    BYTE PTR ds:0x45f88c,0x7
  428500:	mov    BYTE PTR ds:0x45f88d,bl
  428506:	add    esp,0xc
  428509:	mov    ecx,edi
  42850b:	mov    BYTE PTR [ebx+0x45f88e],0x1
  428512:	call   0x43f399
  428517:	jmp    0x428734
  42851c:	cmp    eax,0xffffffff
  42851f:	jne    0x428734
  428525:	push   0x6b
  428527:	pop    ebx
  428528:	test   esi,esi
  42852a:	je     0x428670
  428530:	mov    al,BYTE PTR [esi]
  428532:	cmp    al,bl
  428534:	je     0x428670
  42853a:	cmp    al,0x66
  42853c:	je     0x428675
  428542:	cmp    al,0x63
  428544:	jne    0x428571
  428546:	cmp    BYTE PTR [esi+0x4],0x7
  42854a:	je     0x428562
  42854c:	push   ecx
  42854d:	xor    edx,edx
  42854f:	mov    ecx,0x885
  428554:	call   0x42ee80
  428559:	and    DWORD PTR [ebp-0x4],0x0
  42855d:	jmp    0x428662
  428562:	movzx  eax,BYTE PTR [esi+0x5]
  428566:	mov    DWORD PTR [ebp-0x4],eax
  428569:	mov    BYTE PTR [esi],0xa
  42856c:	jmp    0x428655
  428571:	cmp    al,0x53
  428573:	jne    0x428681
  428579:	mov    eax,DWORD PTR [esi+0x7]
  42857c:	mov    edx,DWORD PTR ds:0x44e104
  428582:	mov    ecx,esi
  428584:	mov    DWORD PTR [ebp-0x4],eax
  428587:	mov    DWORD PTR [esi+0x3],eax
  42858a:	call   0x43f399
  42858f:	mov    ecx,esi
  428591:	call   0x428f71
  428596:	mov    esi,eax
  428598:	cmp    BYTE PTR [esi],0x6a
  42859b:	je     0x4285ab
  42859d:	push   0x0
  42859f:	xor    edx,edx
  4285a1:	mov    ecx,0x886
  4285a6:	call   0x42ee80
  4285ab:	mov    edx,DWORD PTR ds:0x44e104
  4285b1:	mov    ecx,esi
  4285b3:	call   0x43f399
  4285b8:	mov    ecx,esi
  4285ba:	call   0x428f71
  4285bf:	mov    esi,eax
  4285c1:	cmp    BYTE PTR [esi],0x63
  4285c4:	je     0x428608
  4285c6:	push   0x0
  4285c8:	xor    edx,edx
  4285ca:	mov    ecx,0x887
  4285cf:	call   0x42ee80
  4285d4:	xor    eax,eax
  4285d6:	inc    eax
  4285d7:	mov    DWORD PTR [ebp+0x8],eax
  4285da:	cmp    eax,0x1
  4285dd:	jne    0x4285e3
  4285df:	cmp    BYTE PTR [esi],bl
  4285e1:	je     0x42863f
  4285e3:	mov    cl,BYTE PTR [esi]
  4285e5:	cmp    cl,0x6a
  4285e8:	je     0x4285f6
  4285ea:	cmp    cl,0x69
  4285ed:	je     0x4285f6
  4285ef:	cmp    cl,bl
  4285f1:	jne    0x4285fa
  4285f3:	dec    eax
  4285f4:	jmp    0x4285f7
  4285f6:	inc    eax
  4285f7:	mov    DWORD PTR [ebp+0x8],eax
  4285fa:	mov    ecx,esi
  4285fc:	call   0x428f71
  428601:	mov    esi,eax
  428603:	mov    eax,DWORD PTR [ebp+0x8]
  428606:	jmp    0x4285da
  428608:	cmp    BYTE PTR [esi+0x4],0x7
  42860c:	jne    0x428622
  42860e:	cmp    BYTE PTR [esi+0x5],0x1
  428612:	jbe    0x428622
  428614:	push   0x0
  428616:	xor    edx,edx
  428618:	mov    ecx,0x7f9
  42861d:	call   0x42ee80
  428622:	mov    edx,DWORD PTR ds:0x44e104
  428628:	mov    ecx,esi
  42862a:	mov    BYTE PTR [esi],0xa
  42862d:	call   0x43f399
  428632:	mov    ecx,esi
  428634:	call   0x428f71
  428639:	mov    esi,eax
  42863b:	cmp    BYTE PTR [esi],bl
  42863d:	jne    0x428632
  42863f:	mov    edx,DWORD PTR ds:0x44e104
  428645:	mov    ecx,esi
  428647:	call   0x43f399
  42864c:	mov    ecx,esi
  42864e:	call   0x428f71
  428653:	mov    esi,eax
  428655:	mov    edx,DWORD PTR ds:0x44e104
  42865b:	mov    ecx,esi
  42865d:	call   0x43f399
  428662:	mov    ecx,esi
  428664:	call   0x428f71
  428669:	mov    esi,eax
  42866b:	mov    DWORD PTR [ebp-0x8],esi
  42866e:	jmp    0x428681
  428670:	cmp    BYTE PTR [esi],0x66
  428673:	jne    0x428681
  428675:	mov    ecx,esi
  428677:	call   0x428f71
  42867c:	mov    esi,eax
  42867e:	mov    DWORD PTR [ebp-0x8],eax
  428681:	mov    al,BYTE PTR [edi]
  428683:	cmp    al,bl
  428685:	je     0x42871b
  42868b:	mov    esi,DWORD PTR [ebp-0x4]
  42868e:	cmp    al,0x6a
  428690:	je     0x4286a9
  428692:	mov    ecx,edi
  428694:	call   0x428f71
  428699:	mov    edi,eax
  42869b:	mov    al,BYTE PTR [edi]
  42869d:	cmp    al,0x6a
  42869f:	je     0x4286a5
  4286a1:	cmp    al,bl
  4286a3:	jne    0x428692
  4286a5:	cmp    BYTE PTR [edi],bl
  4286a7:	je     0x428715
  4286a9:	test   esi,esi
  4286ab:	jg     0x4286ba
  4286ad:	mov    edx,DWORD PTR ds:0x44e104
  4286b3:	mov    ecx,edi
  4286b5:	call   0x43f399
  4286ba:	mov    ecx,edi
  4286bc:	call   0x428f71
  4286c1:	mov    edi,eax
  4286c3:	cmp    BYTE PTR [edi],0xa
  4286c6:	je     0x4286d6
  4286c8:	push   0x0
  4286ca:	xor    edx,edx
  4286cc:	mov    ecx,0x85a
  4286d1:	call   0x42ee80
  4286d6:	test   esi,esi
  4286d8:	jg     0x4286e7
  4286da:	mov    edx,DWORD PTR ds:0x44e104
  4286e0:	mov    ecx,edi
  4286e2:	call   0x43f399
  4286e7:	mov    ecx,edi
  4286e9:	call   0x428f71
  4286ee:	mov    edi,eax
  4286f0:	test   esi,esi
  4286f2:	jg     0x428701
  4286f4:	mov    edx,DWORD PTR ds:0x44e104
  4286fa:	mov    ecx,edi
  4286fc:	call   0x43f399
  428701:	mov    ecx,edi
  428703:	dec    esi
  428704:	call   0x428f71
  428709:	mov    edi,eax
  42870b:	mov    al,BYTE PTR [edi]
  42870d:	cmp    al,bl
  42870f:	jne    0x42868e
  428715:	mov    DWORD PTR [ebp-0x4],esi
  428718:	mov    esi,DWORD PTR [ebp-0x8]
  42871b:	cmp    DWORD PTR [ebp-0x4],0x0
  42871f:	jle    0x42872f
  428721:	push   0x0
  428723:	xor    edx,edx
  428725:	mov    ecx,0x7f4
  42872a:	call   0x42ee80
  42872f:	mov    ebx,DWORD PTR [ebp-0x10]
  428732:	mov    DWORD PTR [ebx],edi
  428734:	mov    ecx,DWORD PTR [ebp-0xc]
  428737:	mov    DWORD PTR [ecx],esi
  428739:	pop    edi
  42873a:	pop    esi
  42873b:	pop    ebx
  42873c:	leave  
  42873d:	ret    0x8
  428740:	push   ebp
  428741:	mov    ebp,esp
  428743:	push   ecx
  428744:	push   ecx
  428745:	cmp    DWORD PTR [ebp+0xc],0x0
  428749:	push   ebx
  42874a:	push   esi
  42874b:	mov    ebx,edx
  42874d:	mov    eax,ecx
  42874f:	mov    esi,DWORD PTR [ebx]
  428751:	push   edi
  428752:	mov    edi,DWORD PTR [eax]
  428754:	mov    DWORD PTR [ebp-0x4],ebx
  428757:	mov    DWORD PTR [ebp-0x8],eax
  42875a:	jne    0x4287a1
  42875c:	test   esi,esi
  42875e:	je     0x428917
  428764:	mov    al,BYTE PTR [esi]
  428766:	cmp    al,0x6b
  428768:	je     0x428917
  42876e:	cmp    al,0x66
  428770:	je     0x428917
  428776:	cmp    al,0x63
  428778:	je     0x428796
  42877a:	push   0x0
  42877c:	xor    edx,edx
  42877e:	mov    ecx,0x85a
  428783:	call   0x42ee80
  428788:	mov    ecx,esi
  42878a:	call   0x428f71
  42878f:	mov    DWORD PTR [ebx],eax
  428791:	jmp    0x428910
  428796:	mov    al,BYTE PTR [edi]
  428798:	mov    ebx,esi
  42879a:	mov    BYTE PTR [esi],al
  42879c:	jmp    0x428919
  4287a1:	cmp    DWORD PTR [ebp+0xc],0xffffffff
  4287a5:	jne    0x42890e
  4287ab:	test   esi,esi
  4287ad:	je     0x428917
  4287b3:	mov    al,BYTE PTR [esi]
  4287b5:	cmp    al,0x6b
  4287b7:	je     0x428917
  4287bd:	cmp    al,0x53
  4287bf:	jne    0x4288b0
  4287c5:	movzx  eax,BYTE PTR [edi]
  4287c8:	mov    ebx,DWORD PTR [esi+0x7]
  4287cb:	mov    ecx,eax
  4287cd:	mov    DWORD PTR [ebp+0x8],eax
  4287d0:	mov    DWORD PTR [ebp+0xc],ebx
  4287d3:	call   0x446047
  4287d8:	imul   eax,ebx
  4287db:	mov    edx,DWORD PTR ds:0x44e104
  4287e1:	mov    ecx,esi
  4287e3:	mov    DWORD PTR [esi+0x3],eax
  4287e6:	call   0x43f399
  4287eb:	mov    ecx,esi
  4287ed:	call   0x428f71
  4287f2:	mov    esi,eax
  4287f4:	cmp    BYTE PTR [esi],0x6a
  4287f7:	je     0x428807
  4287f9:	push   0x0
  4287fb:	xor    edx,edx
  4287fd:	mov    ecx,0x886
  428802:	call   0x42ee80
  428807:	mov    edx,DWORD PTR ds:0x44e104
  42880d:	mov    ecx,esi
  42880f:	call   0x43f399
  428814:	mov    ecx,esi
  428816:	call   0x428f71
  42881b:	mov    esi,eax
  42881d:	cmp    BYTE PTR [esi],0x63
  428820:	je     0x42885a
  428822:	push   0x0
  428824:	xor    edx,edx
  428826:	mov    ecx,0x887
  42882b:	call   0x42ee80
  428830:	xor    ebx,ebx
  428832:	inc    ebx
  428833:	cmp    ebx,0x1
  428836:	jne    0x42883d
  428838:	cmp    BYTE PTR [esi],0x6b
  42883b:	je     0x42887c
  42883d:	mov    al,BYTE PTR [esi]
  42883f:	cmp    al,0x6a
  428841:	je     0x42884e
  428843:	cmp    al,0x69
  428845:	je     0x42884e
  428847:	cmp    al,0x6b
  428849:	jne    0x42884f
  42884b:	dec    ebx
  42884c:	jmp    0x42884f
  42884e:	inc    ebx
  42884f:	mov    ecx,esi
  428851:	call   0x428f71
  428856:	mov    esi,eax
  428858:	jmp    0x428833
  42885a:	mov    eax,DWORD PTR [ebp+0x8]
  42885d:	mov    edx,DWORD PTR ds:0x44e104
  428863:	mov    ecx,esi
  428865:	mov    BYTE PTR [esi],al
  428867:	call   0x43f399
  42886c:	mov    ecx,esi
  42886e:	call   0x428f71
  428873:	mov    esi,eax
  428875:	cmp    BYTE PTR [esi],0x6b
  428878:	jne    0x42886c
  42887a:	jmp    0x42887f
  42887c:	mov    ebx,DWORD PTR [ebp+0xc]
  42887f:	mov    edx,DWORD PTR ds:0x44e104
  428885:	mov    ecx,esi
  428887:	call   0x43f399
  42888c:	mov    ecx,esi
  42888e:	call   0x428f71
  428893:	mov    edx,DWORD PTR ds:0x44e104
  428899:	mov    esi,eax
  42889b:	mov    ecx,esi
  42889d:	call   0x43f399
  4288a2:	mov    ecx,esi
  4288a4:	call   0x428f71
  4288a9:	mov    esi,eax
  4288ab:	mov    DWORD PTR [ebp+0x8],esi
  4288ae:	jmp    0x4288cc
  4288b0:	push   0x0
  4288b2:	xor    edx,edx
  4288b4:	mov    ecx,0x884
  4288b9:	call   0x42ee80
  4288be:	mov    ecx,esi
  4288c0:	xor    ebx,ebx
  4288c2:	call   0x428f71
  4288c7:	mov    esi,eax
  4288c9:	mov    DWORD PTR [ebp+0x8],eax
  4288cc:	cmp    BYTE PTR [edi],0x6b
  4288cf:	je     0x4288f9
  4288d1:	mov    esi,DWORD PTR [ebp-0x8]
  4288d4:	test   ebx,ebx
  4288d6:	jg     0x4288e5
  4288d8:	mov    edx,DWORD PTR ds:0x44e104
  4288de:	mov    ecx,edi
  4288e0:	call   0x43f399
  4288e5:	mov    ecx,edi
  4288e7:	dec    ebx
  4288e8:	mov    DWORD PTR [esi],edi
  4288ea:	call   0x428f71
  4288ef:	mov    edi,eax
  4288f1:	cmp    BYTE PTR [edi],0x6b
  4288f4:	jne    0x4288d4
  4288f6:	mov    esi,DWORD PTR [ebp+0x8]
  4288f9:	test   ebx,ebx
  4288fb:	jle    0x42890b
  4288fd:	push   0x0
  4288ff:	xor    edx,edx
  428901:	mov    ecx,0x7f4
  428906:	call   0x42ee80
  42890b:	mov    ebx,DWORD PTR [ebp-0x4]
  42890e:	mov    DWORD PTR [ebx],esi
  428910:	pop    edi
  428911:	pop    esi
  428912:	pop    ebx
  428913:	leave  
  428914:	ret    0x8
  428917:	mov    ebx,edi
  428919:	cmp    BYTE PTR [ebp+0x8],0x0
  42891d:	je     0x428994
  42891f:	lea    ecx,[ebx+0x3]
  428922:	mov    dl,0x2
  428924:	call   0x42f6c1
  428929:	test   eax,eax
  42892b:	je     0x42893a
  42892d:	mov    ecx,DWORD PTR ds:0x45f83c
  428933:	mov    DWORD PTR [eax],ecx
  428935:	mov    ds:0x45f83c,eax
  42893a:	cmp    BYTE PTR ds:0x45f852,0x0
  428941:	je     0x428977
  428943:	movzx  eax,BYTE PTR ds:0x45f888
  42894a:	push   eax
  42894b:	mov    ebx,0x45f888
  428950:	push   ebx
  428951:	push   0x45f88b
  428956:	call   DWORD PTR ds:0x464358
  42895c:	mov    al,BYTE PTR [edi]
  42895e:	mov    ds:0x45f888,al
  428963:	movzx  eax,BYTE PTR ds:0x45f88b
  42896a:	add    esp,0xc
  42896d:	add    ax,0x4
  428971:	mov    ds:0x45f889,ax
  428977:	mov    edx,DWORD PTR ds:0x44e104
  42897d:	mov    ecx,ebx
  42897f:	call   0x43f399
  428984:	movzx  ecx,BYTE PTR [edi]
  428987:	call   0x446047
  42898c:	add    DWORD PTR ds:0x45f848,eax
  428992:	jmp    0x4289a1
  428994:	mov    edx,DWORD PTR ds:0x44e104
  42899a:	mov    ecx,ebx
  42899c:	call   0x43f399
  4289a1:	test   esi,esi
  4289a3:	je     0x4289b3
  4289a5:	cmp    BYTE PTR [esi],0x6b
  4289a8:	je     0x4289b3
  4289aa:	mov    ecx,esi
  4289ac:	call   0x428f71
  4289b1:	mov    esi,eax
  4289b3:	mov    eax,DWORD PTR [ebp-0x4]
  4289b6:	mov    DWORD PTR [eax],esi
  4289b8:	jmp    0x428910
  4289bd:	push   ebp
  4289be:	mov    ebp,esp
  4289c0:	sub    esp,0x14
  4289c3:	push   ebx
  4289c4:	mov    eax,edx
  4289c6:	push   esi
  4289c7:	mov    ebx,DWORD PTR [eax]
  4289c9:	mov    esi,DWORD PTR [ecx]
  4289cb:	mov    DWORD PTR [ebp-0x10],eax
  4289ce:	mov    eax,DWORD PTR [ebp+0xc]
  4289d1:	push   edi
  4289d2:	xor    edi,edi
  4289d4:	mov    DWORD PTR [ebp-0x14],ecx
  4289d7:	mov    DWORD PTR [ebp-0xc],ebx
  4289da:	mov    DWORD PTR [ebp-0x8],ebx
  4289dd:	mov    DWORD PTR [ebp-0x4],esi
  4289e0:	test   eax,eax
  4289e2:	jne    0x428d8a
  4289e8:	test   ebx,ebx
  4289ea:	je     0x428a25
  4289ec:	mov    al,BYTE PTR [ebx]
  4289ee:	cmp    al,0x66
  4289f0:	je     0x428a25
  4289f2:	cmp    al,0x6b
  4289f4:	je     0x428a25
  4289f6:	cmp    al,0x63
  4289f8:	jne    0x428c8b
  4289fe:	cmp    BYTE PTR [ebx+0x4],0x7
  428a02:	je     0x428a90
  428a08:	mov    ecx,0x885
  428a0d:	xor    edi,edi
  428a0f:	push   edi
  428a10:	xor    edx,edx
  428a12:	call   0x42ee80
  428a17:	mov    ecx,DWORD PTR [ebp-0x8]
  428a1a:	call   0x428f71
  428a1f:	mov    esi,DWORD PTR [ebp-0x4]
  428a22:	mov    DWORD PTR [ebp-0x8],eax
  428a25:	mov    edx,DWORD PTR ds:0x44e104
  428a2b:	mov    ecx,esi
  428a2d:	call   0x43f399
  428a32:	mov    ecx,DWORD PTR [ebp-0x4]
  428a35:	mov    esi,eax
  428a37:	call   0x428f71
  428a3c:	push   DWORD PTR [ebp+0x8]
  428a3f:	lea    edx,[ebp-0xc]
  428a42:	lea    ecx,[ebp-0x4]
  428a45:	mov    DWORD PTR [ebp-0x4],eax
  428a48:	mov    DWORD PTR [ebp-0xc],edi
  428a4b:	call   0x427484
  428a50:	mov    ecx,DWORD PTR [ebp-0x4]
  428a53:	call   0x428f71
  428a58:	mov    edx,DWORD PTR ds:0x44e104
  428a5e:	mov    ecx,eax
  428a60:	mov    DWORD PTR [ebp-0x4],eax
  428a63:	call   0x43f399
  428a68:	mov    DWORD PTR [esi+0x3],edi
  428a6b:	mov    eax,DWORD PTR [ebp-0x8]
  428a6e:	test   eax,eax
  428a70:	je     0x428a7e
  428a72:	cmp    BYTE PTR [eax],0x66
  428a75:	jne    0x428a7e
  428a77:	mov    ecx,eax
  428a79:	call   0x428f71
  428a7e:	mov    ecx,DWORD PTR [ebp-0x10]
  428a81:	mov    DWORD PTR [ecx],eax
  428a83:	mov    ecx,DWORD PTR [ebp-0x14]
  428a86:	mov    eax,DWORD PTR [ebp-0x4]
  428a89:	mov    DWORD PTR [ecx],eax
  428a8b:	jmp    0x428f5b
  428a90:	mov    al,BYTE PTR [ebx+0x5]
  428a93:	mov    edi,DWORD PTR [esi+0x7]
  428a96:	movzx  eax,al
  428a99:	mov    DWORD PTR [ebp-0xc],eax
  428a9c:	cmp    edi,0x1
  428a9f:	jne    0x428aa4
  428aa1:	mov    edi,DWORD PTR [esi+0x3]
  428aa4:	mov    ecx,esi
  428aa6:	sub    edi,eax
  428aa8:	call   0x428f71
  428aad:	mov    DWORD PTR [ebp+0xc],eax
  428ab0:	cmp    BYTE PTR [eax],0x6a
  428ab3:	je     0x428abf
  428ab5:	mov    ecx,0x886
  428aba:	jmp    0x428a0d
  428abf:	mov    ecx,eax
  428ac1:	call   0x428f71
  428ac6:	mov    DWORD PTR [ebp+0xc],eax
  428ac9:	cmp    BYTE PTR [eax],0x6a
  428acc:	jne    0x428ab5
  428ace:	mov    ecx,eax
  428ad0:	call   0x428f71
  428ad5:	mov    DWORD PTR [ebp+0xc],eax
  428ad8:	cmp    BYTE PTR [eax],0xa
  428adb:	jne    0x428c81
  428ae1:	mov    cl,BYTE PTR [eax+0x4]
  428ae4:	cmp    cl,0x7
  428ae7:	jne    0x428b13
  428ae9:	cmp    BYTE PTR [eax+0x5],0x1
  428aed:	jbe    0x428af9
  428aef:	cmp    DWORD PTR [esi+0x7],0x1
  428af3:	jne    0x428c81
  428af9:	cmp    cl,0x7
  428afc:	jne    0x428b13
  428afe:	cmp    DWORD PTR [esi+0x7],0x1
  428b02:	jne    0x428b13
  428b04:	movzx  eax,BYTE PTR [eax+0x5]
  428b08:	mov    edi,eax
  428b0a:	sub    edi,DWORD PTR [ebp-0xc]
  428b0d:	mov    DWORD PTR [esi+0x3],eax
  428b10:	mov    ebx,DWORD PTR [ebp-0x8]
  428b13:	mov    BYTE PTR [ebx],0xa
  428b16:	xor    ebx,ebx
  428b18:	inc    ebx
  428b19:	cmp    DWORD PTR [esi+0x7],ebx
  428b1c:	je     0x428b2c
  428b1e:	mov    edx,DWORD PTR ds:0x44e104
  428b24:	mov    ecx,DWORD PTR [ebp-0x8]
  428b27:	call   0x43f399
  428b2c:	test   edi,edi
  428b2e:	jns    0x428b40
  428b30:	push   0x0
  428b32:	xor    edx,edx
  428b34:	mov    ecx,0x7f9
  428b39:	call   0x42ee80
  428b3e:	test   edi,edi
  428b40:	jg     0x428b8f
  428b42:	cmp    DWORD PTR [esi+0x7],ebx
  428b45:	jne    0x428b4b
  428b47:	test   edi,edi
  428b49:	jns    0x428b8f
  428b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  428b4e:	call   0x428f71
  428b53:	mov    ecx,eax
  428b55:	mov    DWORD PTR [ebp-0x4],eax
  428b58:	call   0x428f71
  428b5d:	mov    ecx,eax
  428b5f:	mov    DWORD PTR [ebp-0x4],eax
  428b62:	call   0x428f71
  428b67:	mov    ecx,eax
  428b69:	mov    DWORD PTR [ebp-0x4],eax
  428b6c:	call   0x428f71
  428b71:	mov    ecx,eax
  428b73:	mov    DWORD PTR [ebp-0x4],eax
  428b76:	call   0x428f71
  428b7b:	mov    ecx,eax
  428b7d:	mov    DWORD PTR [ebp-0x4],eax
  428b80:	call   0x428f71
  428b85:	mov    esi,eax
  428b87:	mov    DWORD PTR [ebp-0x4],esi
  428b8a:	jmp    0x428c72
  428b8f:	mov    edx,DWORD PTR ds:0x44e104
  428b95:	mov    ecx,DWORD PTR [ebp-0x4]
  428b98:	call   0x43f399
  428b9d:	mov    esi,eax
  428b9f:	mov    DWORD PTR [esi+0x3],edi
  428ba2:	mov    ecx,DWORD PTR [ebp-0x4]
  428ba5:	call   0x428f71
  428baa:	mov    edx,DWORD PTR ds:0x44e104
  428bb0:	mov    ecx,eax
  428bb2:	mov    DWORD PTR [ebp-0x4],eax
  428bb5:	call   0x43f399
  428bba:	mov    ecx,DWORD PTR [ebp-0x4]
  428bbd:	call   0x428f71
  428bc2:	mov    edx,DWORD PTR ds:0x44e104
  428bc8:	mov    ecx,eax
  428bca:	mov    DWORD PTR [ebp-0x4],eax
  428bcd:	call   0x43f399
  428bd2:	mov    ecx,DWORD PTR [ebp-0x4]
  428bd5:	call   0x428f71
  428bda:	mov    edx,DWORD PTR ds:0x44e104
  428be0:	mov    ecx,eax
  428be2:	mov    DWORD PTR [ebp-0x4],eax
  428be5:	call   0x43f399
  428bea:	mov    ecx,eax
  428bec:	mov    DWORD PTR [ebp+0xc],ecx
  428bef:	cmp    DWORD PTR [esi+0x7],ebx
  428bf2:	jne    0x428c1f
  428bf4:	movzx  eax,BYTE PTR [ecx+0x5]
  428bf8:	push   eax
  428bf9:	lea    eax,[ecx+0x6]
  428bfc:	push   0x20
  428bfe:	push   eax
  428bff:	call   0x44764c
  428c04:	mov    ecx,DWORD PTR [ebp-0x8]
  428c07:	movzx  eax,BYTE PTR [ecx+0x5]
  428c0b:	push   eax
  428c0c:	lea    eax,[ecx+0x6]
  428c0f:	push   eax
  428c10:	mov    eax,DWORD PTR [ebp+0xc]
  428c13:	add    eax,0x6
  428c16:	push   eax
  428c17:	call   0x447646
  428c1c:	add    esp,0x18
  428c1f:	mov    ecx,DWORD PTR [ebp-0x4]
  428c22:	call   0x428f71
  428c27:	mov    edx,DWORD PTR ds:0x44e104
  428c2d:	mov    ecx,eax
  428c2f:	mov    DWORD PTR [ebp-0x4],eax
  428c32:	call   0x43f399
  428c37:	mov    ecx,DWORD PTR [ebp-0x4]
  428c3a:	call   0x428f71
  428c3f:	mov    edx,DWORD PTR ds:0x44e104
  428c45:	mov    ecx,eax
  428c47:	mov    DWORD PTR [ebp-0x4],eax
  428c4a:	call   0x43f399
  428c4f:	mov    ecx,DWORD PTR [ebp-0x4]
  428c52:	call   0x428f71
  428c57:	mov    edx,DWORD PTR ds:0x44e104
  428c5d:	mov    ecx,eax
  428c5f:	mov    DWORD PTR [ebp-0x4],eax
  428c62:	call   0x43f399
  428c67:	cmp    DWORD PTR [esi+0x7],ebx
  428c6a:	je     0x428c6f
  428c6c:	mov    DWORD PTR [esi+0x7],edi
  428c6f:	mov    esi,DWORD PTR [ebp-0x4]
  428c72:	mov    ecx,DWORD PTR [ebp-0x8]
  428c75:	call   0x428f71
  428c7a:	mov    ebx,eax
  428c7c:	jmp    0x428f51
  428c81:	mov    ecx,0x887
  428c86:	jmp    0x428a0d
  428c8b:	cmp    al,0x53
  428c8d:	jne    0x428d41
  428c93:	mov    ebx,DWORD PTR [ebx+0x7]
  428c96:	sub    ebx,DWORD PTR [esi+0x7]
  428c99:	test   ebx,ebx
  428c9b:	jle    0x428caf
  428c9d:	push   edi
  428c9e:	xor    edx,edx
  428ca0:	mov    ecx,0x7f4
  428ca5:	call   0x42ee80
  428caa:	mov    ecx,DWORD PTR [ebp-0x8]
  428cad:	jmp    0x428cb2
  428caf:	mov    ecx,DWORD PTR [ebp-0xc]
  428cb2:	mov    edx,DWORD PTR ds:0x44e104
  428cb8:	call   0x43f399
  428cbd:	mov    ecx,DWORD PTR [eax+0x7]
  428cc0:	mov    DWORD PTR [eax+0x3],ecx
  428cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  428cc6:	call   0x428f71
  428ccb:	mov    ecx,DWORD PTR [ebp-0x4]
  428cce:	mov    esi,eax
  428cd0:	mov    DWORD PTR [ebp-0x8],esi
  428cd3:	call   0x428f71
  428cd8:	mov    DWORD PTR [ebp+0xc],eax
  428cdb:	mov    cl,BYTE PTR [esi]
  428cdd:	cmp    cl,BYTE PTR [eax]
  428cdf:	je     0x428d15
  428ce1:	cmp    cl,0x6a
  428ce4:	jne    0x428d0b
  428ce6:	mov    ecx,esi
  428ce8:	call   0x428f71
  428ced:	push   DWORD PTR [ebp+0x8]
  428cf0:	lea    edx,[ebp-0x8]
  428cf3:	lea    ecx,[ebp+0xc]
  428cf6:	mov    DWORD PTR [ebp-0x8],eax
  428cf9:	call   0x427484
  428cfe:	mov    ecx,DWORD PTR [ebp-0x8]
  428d01:	call   0x428f71
  428d06:	mov    DWORD PTR [ebp-0x8],eax
  428d09:	jmp    0x428d23
  428d0b:	mov    ecx,eax
  428d0d:	call   0x428f71
  428d12:	mov    DWORD PTR [ebp+0xc],eax
  428d15:	push   DWORD PTR [ebp+0x8]
  428d18:	lea    edx,[ebp-0x8]
  428d1b:	lea    ecx,[ebp+0xc]
  428d1e:	call   0x427484
  428d23:	mov    edx,DWORD PTR ds:0x44e104
  428d29:	mov    ecx,DWORD PTR [ebp-0x8]
  428d2c:	call   0x43f399
  428d31:	mov    ecx,DWORD PTR [ebp-0x8]
  428d34:	call   0x428f71
  428d39:	mov    DWORD PTR [ebp-0x8],eax
  428d3c:	jmp    0x428de4
  428d41:	cmp    al,0x6a
  428d43:	jne    0x428f51
  428d49:	xor    ebx,ebx
  428d4b:	inc    ebx
  428d4c:	sub    ebx,DWORD PTR [esi+0x7]
  428d4f:	mov    ecx,esi
  428d51:	call   0x428f71
  428d56:	mov    DWORD PTR [ebp+0xc],eax
  428d59:	cmp    BYTE PTR [eax],0x6a
  428d5c:	jne    0x428ab5
  428d62:	mov    ecx,eax
  428d64:	call   0x428f71
  428d69:	mov    DWORD PTR [ebp+0xc],eax
  428d6c:	mov    al,BYTE PTR [eax]
  428d6e:	cmp    al,0x6a
  428d70:	je     0x428d7a
  428d72:	cmp    al,0x69
  428d74:	jne    0x428ab5
  428d7a:	push   DWORD PTR [ebp+0x8]
  428d7d:	lea    edx,[ebp-0x8]
  428d80:	lea    ecx,[ebp+0xc]
  428d83:	call   0x427484
  428d88:	jmp    0x428de4
  428d8a:	cmp    eax,0x1
  428d8d:	jne    0x428e53
  428d93:	mov    ebx,DWORD PTR [esi+0x7]
  428d96:	mov    ecx,esi
  428d98:	neg    ebx
  428d9a:	call   0x428f71
  428d9f:	mov    DWORD PTR [ebp+0xc],eax
  428da2:	cmp    BYTE PTR [eax],0x6a
  428da5:	jne    0x428dd3
  428da7:	mov    ecx,eax
  428da9:	call   0x428f71
  428dae:	mov    DWORD PTR [ebp+0xc],eax
  428db1:	push   DWORD PTR [ebp+0x8]
  428db4:	lea    edx,[ebp-0x8]
  428db7:	lea    ecx,[ebp-0xc]
  428dba:	mov    DWORD PTR [ebp-0xc],eax
  428dbd:	call   0x427484
  428dc2:	mov    eax,DWORD PTR [ebp-0x8]
  428dc5:	inc    ebx
  428dc6:	cmp    BYTE PTR [eax],0x6b
  428dc9:	je     0x428dd0
  428dcb:	mov    eax,DWORD PTR [ebp+0xc]
  428dce:	jmp    0x428db1
  428dd0:	mov    esi,DWORD PTR [ebp-0x4]
  428dd3:	test   ebx,ebx
  428dd5:	jle    0x428de9
  428dd7:	push   edi
  428dd8:	xor    edx,edx
  428dda:	mov    ecx,0x7f4
  428ddf:	call   0x42ee80
  428de4:	mov    esi,DWORD PTR [ebp-0x4]
  428de7:	test   ebx,ebx
  428de9:	jns    0x428e13
  428deb:	mov    edx,DWORD PTR ds:0x44e104
  428df1:	mov    ecx,esi
  428df3:	call   0x43f399
  428df8:	mov    ecx,eax
  428dfa:	xor    edx,edx
  428dfc:	mov    eax,DWORD PTR [ecx+0x3]
  428dff:	div    DWORD PTR [ecx+0x7]
  428e02:	imul   eax,ebx
  428e05:	neg    eax
  428e07:	mov    DWORD PTR [ecx+0x3],eax
  428e0a:	mov    eax,ebx
  428e0c:	neg    eax
  428e0e:	mov    DWORD PTR [ecx+0x7],eax
  428e11:	jmp    0x428e4e
  428e13:	mov    ebx,edi
  428e15:	cmp    edi,0xffffffff
  428e18:	jne    0x428e23
  428e1a:	cmp    BYTE PTR [esi],0x4e
  428e1d:	je     0x428f4e
  428e23:	mov    ecx,esi
  428e25:	call   0x428f71
  428e2a:	mov    esi,eax
  428e2c:	mov    DWORD PTR [ebp-0x4],esi
  428e2f:	mov    al,BYTE PTR [esi]
  428e31:	cmp    al,0x4e
  428e33:	je     0x428e3c
  428e35:	cmp    al,0x53
  428e37:	jne    0x428e3d
  428e39:	inc    edi
  428e3a:	jmp    0x428e3d
  428e3c:	dec    edi
  428e3d:	test   ebx,ebx
  428e3f:	je     0x428e15
  428e41:	mov    edx,DWORD PTR ds:0x44e104
  428e47:	mov    ecx,esi
  428e49:	call   0x43f399
  428e4e:	mov    esi,DWORD PTR [ebp-0x4]
  428e51:	jmp    0x428e15
  428e53:	cmp    eax,0xffffffff
  428e56:	jne    0x428f51
  428e5c:	cmp    BYTE PTR [esi],0x6a
  428e5f:	jne    0x428f51
  428e65:	mov    edx,DWORD PTR ds:0x44e104
  428e6b:	mov    esi,DWORD PTR [ebx+0x7]
  428e6e:	mov    ecx,ebx
  428e70:	call   0x43f399
  428e75:	mov    ecx,DWORD PTR [ebp-0x8]
  428e78:	call   0x428f71
  428e7d:	mov    edx,DWORD PTR ds:0x44e104
  428e83:	mov    ecx,eax
  428e85:	mov    DWORD PTR [ebp-0x8],eax
  428e88:	call   0x43f399
  428e8d:	mov    ecx,DWORD PTR [ebp-0x8]
  428e90:	call   0x428f71
  428e95:	push   DWORD PTR [ebp+0x8]
  428e98:	lea    edx,[ebp-0x8]
  428e9b:	lea    ecx,[ebp-0x4]
  428e9e:	mov    DWORD PTR [ebp-0x8],eax
  428ea1:	call   0x427484
  428ea6:	mov    edx,DWORD PTR ds:0x44e104
  428eac:	mov    ecx,DWORD PTR [ebp-0x8]
  428eaf:	call   0x43f399
  428eb4:	mov    ecx,DWORD PTR [ebp-0x8]
  428eb7:	call   0x428f71
  428ebc:	mov    edx,DWORD PTR ds:0x44e104
  428ec2:	mov    ecx,eax
  428ec4:	mov    DWORD PTR [ebp-0x8],eax
  428ec7:	call   0x43f399
  428ecc:	mov    ecx,DWORD PTR [ebp-0x8]
  428ecf:	call   0x428f71
  428ed4:	mov    ecx,DWORD PTR [ebp-0x4]
  428ed7:	mov    ebx,eax
  428ed9:	dec    esi
  428eda:	mov    DWORD PTR [ebp-0x8],ebx
  428edd:	mov    DWORD PTR [ebp+0x8],esi
  428ee0:	call   0x428f71
  428ee5:	mov    esi,eax
  428ee7:	mov    DWORD PTR [ebp-0x4],esi
  428eea:	xor    edi,edi
  428eec:	cmp    BYTE PTR [esi],0x6b
  428eef:	je     0x428f37
  428ef1:	mov    eax,DWORD PTR [ebp+0x8]
  428ef4:	dec    eax
  428ef5:	mov    ebx,edi
  428ef7:	mov    DWORD PTR [ebp+0x8],eax
  428efa:	mov    edi,eax
  428efc:	test   edi,edi
  428efe:	jns    0x428f10
  428f00:	mov    edx,DWORD PTR ds:0x44e104
  428f06:	mov    ecx,esi
  428f08:	call   0x43f399
  428f0d:	mov    esi,DWORD PTR [ebp-0x4]
  428f10:	mov    al,BYTE PTR [esi]
  428f12:	cmp    al,0x69
  428f14:	je     0x428f62
  428f16:	cmp    al,0x6a
  428f18:	je     0x428f62
  428f1a:	cmp    al,0x6b
  428f1c:	jne    0x428f63
  428f1e:	dec    ebx
  428f1f:	jne    0x428f63
  428f21:	mov    ecx,esi
  428f23:	call   0x428f71
  428f28:	mov    esi,eax
  428f2a:	mov    DWORD PTR [ebp-0x4],esi
  428f2d:	cmp    BYTE PTR [esi],0x6b
  428f30:	push   ebx
  428f31:	pop    edi
  428f32:	jne    0x428ef1
  428f34:	mov    ebx,DWORD PTR [ebp-0x8]
  428f37:	mov    eax,DWORD PTR [ebp+0x8]
  428f3a:	test   eax,eax
  428f3c:	jle    0x428f51
  428f3e:	push   edi
  428f3f:	xor    edx,edx
  428f41:	mov    ecx,0x85a
  428f46:	call   0x42ee80
  428f4b:	mov    esi,DWORD PTR [ebp-0x4]
  428f4e:	mov    ebx,DWORD PTR [ebp-0x8]
  428f51:	mov    ecx,DWORD PTR [ebp-0x10]
  428f54:	mov    DWORD PTR [ecx],ebx
  428f56:	mov    ecx,DWORD PTR [ebp-0x14]
  428f59:	mov    DWORD PTR [ecx],esi
  428f5b:	pop    edi
  428f5c:	pop    esi
  428f5d:	pop    ebx
  428f5e:	leave  
  428f5f:	ret    0x8
  428f62:	inc    ebx
  428f63:	mov    ecx,esi
  428f65:	call   0x428f71
  428f6a:	mov    esi,eax
  428f6c:	mov    DWORD PTR [ebp-0x4],esi
  428f6f:	jmp    0x428efc
  428f71:	movzx  eax,WORD PTR [ecx+0x1]
  428f75:	add    eax,ecx
  428f77:	cmp    BYTE PTR [eax],0x0
  428f7a:	jne    0x428f87
  428f7c:	mov    eax,DWORD PTR [eax+0x1]
  428f7f:	test   eax,eax
  428f81:	jne    0x428f84
  428f83:	ret    
  428f84:	add    eax,0x4
  428f87:	ret    
  428f88:	mov    edx,DWORD PTR [ecx]
  428f8a:	mov    eax,DWORD PTR [ecx+0x4]
  428f8d:	sub    eax,edx
  428f8f:	js     0x428fa8
  428f91:	mov    DWORD PTR [ecx+0x4],edx
  428f94:	test   edx,edx
  428f96:	je     0x428fa8
  428f98:	push   edx
  428f99:	push   edx
  428f9a:	call   0x428fad
  428f9f:	test   eax,eax
  428fa1:	je     0x428fa8
  428fa3:	xor    eax,eax
  428fa5:	inc    eax
  428fa6:	jmp    0x428faa
  428fa8:	xor    eax,eax
  428faa:	ret    0x4
  428fad:	push   ebp
  428fae:	mov    ebp,esp
  428fb0:	mov    edx,DWORD PTR [ebp+0x8]
  428fb3:	cmp    DWORD PTR [ebp+0xc],edx
  428fb6:	je     0x428fc8
  428fb8:	mov    eax,DWORD PTR [ecx+0x14]
  428fbb:	test   eax,eax
  428fbd:	je     0x428fc8
  428fbf:	push   edx
  428fc0:	push   DWORD PTR [ebp+0xc]
  428fc3:	push   DWORD PTR [ecx+0x18]
  428fc6:	call   eax
  428fc8:	xor    eax,eax
  428fca:	inc    eax
  428fcb:	pop    ebp
  428fcc:	ret    0x8
  428fcf:	push   ebp
  428fd0:	mov    ebp,esp
  428fd2:	cmp    DWORD PTR [ebp+0x8],0x0
  428fd6:	push   esi
  428fd7:	mov    esi,ecx
  428fd9:	jne    0x428fdf
  428fdb:	xor    eax,eax
  428fdd:	jmp    0x42902d
  428fdf:	push   edi
  428fe0:	mov    edi,DWORD PTR [ebp+0xc]
  428fe3:	test   edi,edi
  428fe5:	js     0x42902a
  428fe7:	mov    eax,DWORD PTR [esi+0x8]
  428fea:	sub    eax,DWORD PTR [esi+0x4]
  428fed:	add    eax,DWORD PTR [esi]
  428fef:	cmp    edi,eax
  428ff1:	jle    0x428ffd
  428ff3:	push   edi
  428ff4:	call   0x429032
  428ff9:	test   eax,eax
  428ffb:	je     0x42902a
  428ffd:	cmp    DWORD PTR [esi],0x0
  429000:	push   ebx
  429001:	mov    ebx,DWORD PTR [esi+0x4]
  429004:	lea    eax,[ebx+edi*1]
  429007:	mov    DWORD PTR [esi+0x4],eax
  42900a:	je     0x429017
  42900c:	push   DWORD PTR [esi]
  42900e:	mov    ecx,esi
  429010:	push   DWORD PTR [esi]
  429012:	call   0x428fad
  429017:	push   edi
  429018:	push   DWORD PTR [ebp+0x8]
  42901b:	push   ebx
  42901c:	call   0x447646
  429021:	add    esp,0xc
  429024:	xor    eax,eax
  429026:	inc    eax
  429027:	pop    ebx
  429028:	jmp    0x42902c
  42902a:	xor    eax,eax
  42902c:	pop    edi
  42902d:	pop    esi
  42902e:	pop    ebp
  42902f:	ret    0xc
  429032:	push   ebp
  429033:	mov    ebp,esp
  429035:	push   ebx
  429036:	mov    ebx,ecx
  429038:	push   esi
  429039:	mov    esi,DWORD PTR [ebx+0x8]
  42903c:	mov    eax,0x7fffffff
  429041:	push   edi
  429042:	mov    edi,DWORD PTR [ebp+0x8]
  429045:	sub    eax,esi
  429047:	cmp    eax,edi
  429049:	jb     0x4290f9
  42904f:	mov    al,BYTE PTR [ebx+0x10]
  429052:	test   al,al
  429054:	je     0x42906e
  429056:	cmp    al,0x2
  429058:	jne    0x429060
  42905a:	cmp    BYTE PTR [ebx+0x11],0x0
  42905e:	jne    0x42906e
  429060:	cmp    al,0x1
  429062:	jne    0x42906a
  429064:	cmp    BYTE PTR [ebx+0x11],0x0
  429068:	je     0x42906e
  42906a:	add    esi,edi
  42906c:	jmp    0x429097
  42906e:	mov    eax,esi
  429070:	cdq    
  429071:	sub    eax,edx
  429073:	sar    eax,1
  429075:	cmp    edi,eax
  429077:	jle    0x42907b
  429079:	mov    eax,edi
  42907b:	mov    ecx,DWORD PTR [ebx+0xc]
  42907e:	add    eax,esi
  429080:	lea    esi,[ecx-0x1]
  429083:	add    esi,eax
  429085:	lea    eax,[ecx-0x1]
  429088:	not    eax
  42908a:	and    esi,eax
  42908c:	mov    eax,DWORD PTR [ebx+0x8]
  42908f:	add    eax,edi
  429091:	cmp    eax,esi
  429093:	jle    0x429097
  429095:	mov    esi,eax
  429097:	mov    ecx,DWORD PTR [ebx+0x1c]
  42909a:	push   esi
  42909b:	mov    eax,DWORD PTR [ecx]
  42909d:	call   DWORD PTR [eax]
  42909f:	mov    edi,eax
  4290a1:	mov    DWORD PTR [ebp+0x8],edi
  4290a4:	test   edi,edi
  4290a6:	je     0x4290f9
  4290a8:	mov    DWORD PTR [ebx+0x8],esi
  4290ab:	mov    esi,DWORD PTR [ebx+0x4]
  4290ae:	sub    esi,DWORD PTR [ebx]
  4290b0:	push   esi
  4290b1:	push   DWORD PTR [ebx]
  4290b3:	push   edi
  4290b4:	call   0x447646
  4290b9:	mov    eax,DWORD PTR [ebx+0x8]
  4290bc:	sub    eax,esi
  4290be:	push   eax
  4290bf:	add    edi,esi
  4290c1:	push   0x0
  4290c3:	push   edi
  4290c4:	call   0x44764c
  4290c9:	mov    ecx,DWORD PTR [ebx+0x1c]
  4290cc:	add    esp,0x18
  4290cf:	mov    eax,DWORD PTR [ecx]
  4290d1:	push   DWORD PTR [ebx]
  4290d3:	call   DWORD PTR [eax+0x8]
  4290d6:	mov    eax,DWORD PTR [ebx]
  4290d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4290db:	push   eax
  4290dc:	mov    DWORD PTR [ebx],ecx
  4290de:	push   ecx
  4290df:	mov    ecx,ebx
  4290e1:	mov    DWORD PTR [ebx+0x4],edi
  4290e4:	call   0x428fad
  4290e9:	xor    eax,eax
  4290eb:	mov    BYTE PTR [ebx+0x11],0x1
  4290ef:	mov    DWORD PTR [ebx+0xc],0x1000
  4290f6:	inc    eax
  4290f7:	jmp    0x4290fb
  4290f9:	xor    eax,eax
  4290fb:	pop    edi
  4290fc:	pop    esi
  4290fd:	pop    ebx
  4290fe:	pop    ebp
  4290ff:	ret    0x4
  429102:	push   ebp
  429103:	mov    ebp,esp
  429105:	push   esi
  429106:	push   edi
  429107:	mov    edi,DWORD PTR [ebp+0xc]
  42910a:	push   ecx
  42910b:	push   edi
  42910c:	push   DWORD PTR [ebp+0x8]
  42910f:	lea    esi,[ecx+0x4]
  429112:	mov    ecx,esi
  429114:	call   0x428fcf
  429119:	test   eax,eax
  42911b:	jne    0x429121
  42911d:	xor    al,al
  42911f:	jmp    0x429129
  429121:	add    DWORD PTR [esi+0x42c],edi
  429127:	mov    al,0x1
  429129:	pop    edi
  42912a:	pop    esi
  42912b:	pop    ebp
  42912c:	ret    0x8
  42912f:	push   ebp
  429130:	mov    ebp,esp
  429132:	push   esi
  429133:	push   DWORD PTR [ebp+0x8]
  429136:	lea    esi,[ecx+0x4]
  429139:	mov    ecx,esi
  42913b:	call   0x4296cf
  429140:	test   al,al
  429142:	je     0x429157
  429144:	push   DWORD PTR [ebp+0xa]
  429147:	mov    ecx,esi
  429149:	call   0x4296cf
  42914e:	test   al,al
  429150:	je     0x429157
  429152:	xor    eax,eax
  429154:	inc    eax
  429155:	jmp    0x429159
  429157:	xor    eax,eax
  429159:	pop    esi
  42915a:	pop    ebp
  42915b:	ret    0x4
  42915e:	push   ebp
  42915f:	mov    ebp,esp
  429161:	sub    esp,0x10
  429164:	mov    eax,DWORD PTR [ecx+0x430]
  42916a:	push   ebx
  42916b:	push   esi
  42916c:	mov    DWORD PTR [ebp-0xc],eax
  42916f:	mov    eax,DWORD PTR [ebp+0xc]
  429172:	push   ecx
  429173:	mov    DWORD PTR [ebp-0x8],eax
  429176:	lea    esi,[ecx+0x434]
  42917c:	push   0x10
  42917e:	lea    eax,[ebp-0x10]
  429181:	xor    ebx,ebx
  429183:	push   eax
  429184:	mov    ecx,esi
  429186:	mov    DWORD PTR [ebp-0x10],ebx
  429189:	mov    DWORD PTR [ebp-0x4],ebx
  42918c:	call   0x428fcf
  429191:	test   eax,eax
  429193:	je     0x42919d
  429195:	inc    DWORD PTR [esi+0x12c]
  42919b:	mov    bl,0x1
  42919d:	pop    esi
  42919e:	mov    al,bl
  4291a0:	pop    ebx
  4291a1:	leave  
  4291a2:	ret    0xc
  4291a5:	push   ebp
  4291a6:	mov    ebp,esp
  4291a8:	sub    esp,0xc
  4291ab:	push   ebx
  4291ac:	push   esi
  4291ad:	mov    esi,DWORD PTR [ecx+0x990]
  4291b3:	xor    ebx,ebx
  4291b5:	dec    esi
  4291b6:	push   edi
  4291b7:	mov    DWORD PTR [ebp-0x8],ecx
  4291ba:	js     0x429225
  4291bc:	mov    eax,DWORD PTR [ecx+0x564]
  4291c2:	mov    DWORD PTR [ebp-0xc],eax
  4291c5:	mov    edi,DWORD PTR [ebp+0x8]
  4291c8:	lea    eax,[esi+ebx*1]
  4291cb:	cdq    
  4291cc:	sub    eax,edx
  4291ce:	mov    edx,eax
  4291d0:	mov    eax,DWORD PTR [ecx+0x564]
  4291d6:	sar    edx,1
  4291d8:	mov    eax,DWORD PTR [eax+edx*4]
  4291db:	add    eax,DWORD PTR [ecx+0x4]
  4291de:	mov    cl,BYTE PTR [eax]
  4291e0:	cmp    cl,BYTE PTR [edi]
  4291e2:	mov    BYTE PTR [ebp-0x1],cl
  4291e5:	mov    ecx,DWORD PTR [ebp-0x8]
  4291e8:	jne    0x42920e
  4291ea:	cmp    BYTE PTR [ebp-0x1],0x0
  4291ee:	je     0x42920a
  4291f0:	mov    cl,BYTE PTR [eax+0x1]
  4291f3:	cmp    cl,BYTE PTR [edi+0x1]
  4291f6:	mov    BYTE PTR [ebp-0x1],cl
  4291f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4291fc:	jne    0x42920e
  4291fe:	add    eax,0x2
  429201:	add    edi,0x2
  429204:	cmp    BYTE PTR [ebp-0x1],0x0
  429208:	jne    0x4291de
  42920a:	xor    eax,eax
  42920c:	jmp    0x429213
  42920e:	sbb    eax,eax
  429210:	or     eax,0x1
  429213:	test   eax,eax
  429215:	jns    0x42921c
  429217:	lea    ebx,[edx+0x1]
  42921a:	jmp    0x429221
  42921c:	jle    0x429234
  42921e:	lea    esi,[edx-0x1]
  429221:	cmp    ebx,esi
  429223:	jle    0x4291c5
  429225:	push   DWORD PTR [ebp+0x8]
  429228:	call   0x42923c
  42922d:	pop    edi
  42922e:	pop    esi
  42922f:	pop    ebx
  429230:	leave  
  429231:	ret    0x4
  429234:	mov    eax,DWORD PTR [ebp-0xc]
  429237:	mov    eax,DWORD PTR [eax+edx*4]
  42923a:	jmp    0x42922d
  42923c:	push   ebp
  42923d:	mov    ebp,esp
  42923f:	push   ecx
  429240:	push   ecx
  429241:	mov    edx,DWORD PTR [ebp+0x8]
  429244:	push   ebx
  429245:	push   esi
  429246:	push   edi
  429247:	mov    edi,ecx
  429249:	lea    ecx,[edx+0x1]
  42924c:	mov    eax,DWORD PTR [edi+0x430]
  429252:	mov    DWORD PTR [ebp-0x4],eax
  429255:	mov    al,BYTE PTR [edx]
  429257:	inc    edx
  429258:	test   al,al
  42925a:	jne    0x429255
  42925c:	sub    edx,ecx
  42925e:	push   ecx
  42925f:	lea    ebx,[edx+0x1]
  429262:	push   ebx
  429263:	push   DWORD PTR [ebp+0x8]
  429266:	lea    ecx,[edi+0x4]
  429269:	call   0x428fcf
  42926e:	test   eax,eax
  429270:	je     0x4292e6
  429272:	add    DWORD PTR [edi+0x430],ebx
  429278:	xor    ecx,ecx
  42927a:	cmp    DWORD PTR [edi+0x990],ecx
  429280:	jbe    0x4292ca
  429282:	mov    ebx,DWORD PTR [edi+0x4]
  429285:	mov    esi,DWORD PTR [edi+0x564]
  42928b:	mov    eax,DWORD PTR [esi]
  42928d:	mov    edx,DWORD PTR [ebp+0x8]
  429290:	add    eax,ebx
  429292:	mov    bl,BYTE PTR [eax]
  429294:	cmp    bl,BYTE PTR [edx]
  429296:	jne    0x4292b2
  429298:	test   bl,bl
  42929a:	je     0x4292ae
  42929c:	mov    bl,BYTE PTR [eax+0x1]
  42929f:	cmp    bl,BYTE PTR [edx+0x1]
  4292a2:	jne    0x4292b2
  4292a4:	add    eax,0x2
  4292a7:	add    edx,0x2
  4292aa:	test   bl,bl
  4292ac:	jne    0x429292
  4292ae:	xor    eax,eax
  4292b0:	jmp    0x4292b7
  4292b2:	sbb    eax,eax
  4292b4:	or     eax,0x1
  4292b7:	test   eax,eax
  4292b9:	jns    0x4292ca
  4292bb:	mov    ebx,DWORD PTR [edi+0x4]
  4292be:	inc    ecx
  4292bf:	add    esi,0x4
  4292c2:	cmp    ecx,DWORD PTR [edi+0x990]
  4292c8:	jb     0x42928b
  4292ca:	push   ecx
  4292cb:	lea    eax,[ebp-0x4]
  4292ce:	push   eax
  4292cf:	lea    ecx,[edi+0x564]
  4292d5:	call   0x429711
  4292da:	movzx  eax,al
  4292dd:	neg    eax
  4292df:	sbb    eax,eax
  4292e1:	and    eax,DWORD PTR [ebp-0x4]
  4292e4:	jmp    0x4292e8
  4292e6:	xor    eax,eax
  4292e8:	pop    edi
  4292e9:	pop    esi
  4292ea:	pop    ebx
  4292eb:	leave  
  4292ec:	ret    0x4
  4292ef:	push   ebp
  4292f0:	mov    ebp,esp
  4292f2:	push   ecx
  4292f3:	push   ecx
  4292f4:	push   edi
  4292f5:	mov    edi,DWORD PTR ds:0x45f694
  4292fb:	push   DWORD PTR [ebp+0x8]
  4292fe:	mov    ecx,DWORD PTR [edi+0x564]
  429304:	call   0x4291a5
  429309:	mov    ecx,eax
  42930b:	mov    DWORD PTR [ebp-0x8],ecx
  42930e:	test   ecx,ecx
  429310:	je     0x4293ca
  429316:	push   esi
  429317:	lea    esi,[edi+0x4]
  42931a:	mov    edx,DWORD PTR [esi]
  42931c:	mov    eax,edx
  42931e:	jmp    0x42932b
  429320:	cmp    DWORD PTR [eax],ecx
  429322:	je     0x4293cf
  429328:	add    eax,0x8
  42932b:	cmp    eax,DWORD PTR [edi+0x8]
  42932e:	jb     0x429320
  429330:	mov    eax,DWORD PTR [edi+0x430]
  429336:	push   ecx
  429337:	mov    ecx,esi
  429339:	mov    DWORD PTR [ebp+0x8],eax
  42933c:	call   0x4296cf
  429341:	test   al,al
  429343:	je     0x42934f
  429345:	push   DWORD PTR [ebp-0x6]
  429348:	mov    ecx,esi
  42934a:	call   0x4296cf
  42934f:	push   ebx
  429350:	mov    bl,BYTE PTR [ebp+0xc]
  429353:	push   ecx
  429354:	push   0x1
  429356:	lea    eax,[ebp+0xc]
  429359:	push   eax
  42935a:	mov    ecx,esi
  42935c:	mov    BYTE PTR [ebp+0xc],bl
  42935f:	call   0x428fcf
  429364:	test   eax,eax
  429366:	je     0x42936e
  429368:	inc    DWORD PTR [esi+0x42c]
  42936e:	mov    al,BYTE PTR [ebp+0x10]
  429371:	push   ecx
  429372:	mov    BYTE PTR [ebp+0xc],al
  429375:	push   0x1
  429377:	lea    eax,[ebp+0xc]
  42937a:	push   eax
  42937b:	mov    ecx,esi
  42937d:	call   0x428fcf
  429382:	test   eax,eax
  429384:	je     0x42938c
  429386:	inc    DWORD PTR [esi+0x42c]
  42938c:	push   ecx
  42938d:	movzx  edi,bl
  429390:	push   edi
  429391:	push   DWORD PTR [ebp+0x14]
  429394:	mov    ecx,esi
  429396:	call   0x428fcf
  42939b:	pop    ebx
  42939c:	test   eax,eax
  42939e:	je     0x4293a6
  4293a0:	add    DWORD PTR [esi+0x42c],edi
  4293a6:	add    edi,0xfffffffe
  4293a9:	push   ecx
  4293aa:	neg    edi
  4293ac:	and    edi,0x3
  4293af:	push   edi
  4293b0:	push   0x41e540
  4293b5:	mov    ecx,esi
  4293b7:	call   0x428fcf
  4293bc:	test   eax,eax
  4293be:	je     0x4293c6
  4293c0:	add    DWORD PTR [esi+0x42c],edi
  4293c6:	mov    eax,DWORD PTR [ebp+0x8]
  4293c9:	pop    esi
  4293ca:	pop    edi
  4293cb:	leave  
  4293cc:	ret    0x10
  4293cf:	sub    eax,edx
  4293d1:	jmp    0x4293c9
  4293d3:	push   esi
  4293d4:	mov    esi,ecx
  4293d6:	mov    eax,DWORD PTR [esi+0xda8]
  4293dc:	mov    DWORD PTR [esi+0x574],eax
  4293e2:	test   eax,eax
  4293e4:	je     0x429455
  4293e6:	push   DWORD PTR [esi+0x570]
  4293ec:	call   0x42912f
  4293f1:	test   al,al
  4293f3:	jne    0x4293f9
  4293f5:	xor    al,al
  4293f7:	pop    esi
  4293f8:	ret    
  4293f9:	push   DWORD PTR [esi+0x574]
  4293ff:	mov    ecx,esi
  429401:	call   0x42912f
  429406:	test   al,al
  429408:	je     0x4293f5
  42940a:	push   DWORD PTR [esi+0x578]
  429410:	mov    ecx,esi
  429412:	call   0x42912f
  429417:	test   al,al
  429419:	je     0x4293f5
  42941b:	mov    eax,DWORD PTR [esi+0x574]
  429421:	shl    eax,0x3
  429424:	push   eax
  429425:	push   DWORD PTR [esi+0x57c]
  42942b:	mov    ecx,esi
  42942d:	call   0x429102
  429432:	test   al,al
  429434:	je     0x4293f5
  429436:	mov    eax,DWORD PTR [esi+0x11d8]
  42943c:	test   eax,eax
  42943e:	je     0x429455
  429440:	shl    eax,0x2
  429443:	push   eax
  429444:	push   DWORD PTR [esi+0xdac]
  42944a:	mov    ecx,esi
  42944c:	call   0x429102
  429451:	test   al,al
  429453:	je     0x4293f5
  429455:	mov    al,0x1
  429457:	pop    esi
  429458:	ret    
  429459:	push   ebp
  42945a:	mov    ebp,esp
  42945c:	mov    eax,DWORD PTR [ebp+0x8]
  42945f:	push   esi
  429460:	push   edi
  429461:	mov    edi,ecx
  429463:	push   ecx
  429464:	and    DWORD PTR [edi+0x574],0x0
  42946b:	lea    ecx,[edi+0x57c]
  429471:	mov    DWORD PTR [edi+0x570],eax
  429477:	mov    DWORD PTR [edi+0x578],0xc
  429481:	call   0x428f88
  429486:	and    DWORD PTR [edi+0xda8],0x0
  42948d:	push   ecx
  42948e:	lea    ecx,[edi+0xdac]
  429494:	call   0x428f88
  429499:	and    DWORD PTR [edi+0x11d8],0x0
  4294a0:	pop    edi
  4294a1:	pop    esi
  4294a2:	pop    ebp
  4294a3:	ret    0x4
  4294a6:	push   ebp
  4294a7:	mov    ebp,esp
  4294a9:	sub    esp,0x14
  4294ac:	push   ebx
  4294ad:	mov    ebx,ecx
  4294af:	push   esi
  4294b0:	mov    eax,DWORD PTR [ebx]
  4294b2:	push   edi
  4294b3:	mov    cx,WORD PTR [eax+0x1a]
  4294b7:	call   0x424194
  4294bc:	mov    eax,DWORD PTR [ebx+0x1030]
  4294c2:	mov    ecx,DWORD PTR [ebx+0x4]
  4294c5:	mov    edx,eax
  4294c7:	mov    DWORD PTR [ebp-0x14],eax
  4294ca:	call   0x424be7
  4294cf:	and    DWORD PTR [ebp-0x8],0x0
  4294d3:	cmp    DWORD PTR [ebx+0x1460],0x0
  4294da:	jbe    0x429558
  4294dc:	xor    ecx,ecx
  4294de:	mov    DWORD PTR [ebp-0xc],ecx
  4294e1:	mov    eax,DWORD PTR [ebx+0x1034]
  4294e7:	add    eax,ecx
  4294e9:	cmp    DWORD PTR [eax],0x0
  4294ec:	mov    esi,DWORD PTR [eax+0x8]
  4294ef:	mov    ecx,DWORD PTR [eax+0x4]
  4294f2:	mov    DWORD PTR [ebp-0x4],esi
  4294f5:	mov    DWORD PTR [ebp-0x10],ecx
  4294f8:	jne    0x42955f
  4294fa:	test   BYTE PTR [esi+0x8],0x1
  4294fe:	jne    0x429507
  429500:	mov    ecx,esi
  429502:	call   0x423a2a
  429507:	mov    ecx,DWORD PTR ds:0x44df04
  42950d:	call   0x4243d2
  429512:	mov    esi,DWORD PTR [esi+0xc]
  429515:	mov    ecx,DWORD PTR [ebp-0x4]
  429518:	mov    edi,eax
  42951a:	mov    eax,DWORD PTR [ebp-0x10]
  42951d:	sub    eax,DWORD PTR [ebp-0x14]
  429520:	mov    ecx,DWORD PTR [ecx+0x10]
  429523:	add    edi,eax
  429525:	push   0xb
  429527:	push   esi
  429528:	mov    edx,edi
  42952a:	call   0x424304
  42952f:	mov    eax,DWORD PTR [ebp-0x4]
  429532:	push   0xa
  429534:	mov    ecx,DWORD PTR [eax+0x10]
  429537:	push   esi
  429538:	lea    edx,[edi+0x4]
  42953b:	call   0x424304
  429540:	mov    edx,DWORD PTR [ebp-0x8]
  429543:	mov    ecx,DWORD PTR [ebp-0xc]
  429546:	inc    edx
  429547:	add    ecx,0x10
  42954a:	mov    DWORD PTR [ebp-0x8],edx
  42954d:	mov    DWORD PTR [ebp-0xc],ecx
  429550:	cmp    edx,DWORD PTR [ebx+0x1460]
  429556:	jb     0x4294e1
  429558:	mov    al,0x1
  42955a:	pop    edi
  42955b:	pop    esi
  42955c:	pop    ebx
  42955d:	leave  
  42955e:	ret    
  42955f:	xor    al,al
  429561:	jmp    0x42955a
  429563:	push   esi
  429564:	mov    esi,DWORD PTR [ecx+0x1030]
  42956a:	push   edi
  42956b:	push   ecx
  42956c:	neg    esi
  42956e:	and    esi,0x3
  429571:	lea    edi,[ecx+0x4]
  429574:	push   esi
  429575:	push   0x41e540
  42957a:	mov    ecx,edi
  42957c:	call   0x428fcf
  429581:	test   eax,eax
  429583:	jne    0x429589
  429585:	xor    al,al
  429587:	jmp    0x429591
  429589:	add    DWORD PTR [edi+0x102c],esi
  42958f:	mov    al,0x1
  429591:	pop    edi
  429592:	pop    esi
  429593:	ret    
  429594:	push   ebp
  429595:	mov    ebp,esp
  429597:	sub    esp,0x14
  42959a:	push   ebx
  42959b:	push   esi
  42959c:	mov    esi,DWORD PTR ds:0x45f6a0
  4295a2:	push   edi
  4295a3:	mov    edi,DWORD PTR [ebp+0x8]
  4295a6:	mov    edx,DWORD PTR [edi+0x430]
  4295ac:	test   edx,edx
  4295ae:	jne    0x4295b7
  4295b0:	mov    al,0x1
  4295b2:	jmp    0x4296c8
  4295b7:	cmp    BYTE PTR [ebp+0xc],0x0
  4295bb:	mov    ebx,0xf0
  4295c0:	jne    0x4295ea
  4295c2:	mov    ecx,DWORD PTR [esi+0x1464]
  4295c8:	cmp    ecx,0xffffffff
  4295cb:	jne    0x4295d1
  4295cd:	mov    eax,ebx
  4295cf:	jmp    0x4295d7
  4295d1:	mov    eax,DWORD PTR [esi+0x4]
  4295d4:	mov    eax,DWORD PTR [ecx+eax*1]
  4295d7:	cmp    eax,DWORD PTR [edi]
  4295d9:	jne    0x4295ea
  4295db:	cmp    DWORD PTR [edi],ebx
  4295dd:	je     0x4295ea
  4295df:	lea    ebx,[esi+0x4]
  4295e2:	mov    eax,DWORD PTR [ebx]
  4295e4:	add    DWORD PTR [ecx+eax*1+0x4],edx
  4295e8:	jmp    0x429639
  4295ea:	mov    ecx,DWORD PTR [esi+0x1464]
  4295f0:	cmp    ecx,0xffffffff
  4295f3:	je     0x429604
  4295f5:	mov    eax,DWORD PTR [esi+0x4]
  4295f8:	cmp    DWORD PTR [ecx+eax*1],ebx
  4295fb:	je     0x429604
  4295fd:	mov    ecx,esi
  4295ff:	call   0x429563
  429604:	mov    eax,DWORD PTR [esi+0x1030]
  42960a:	mov    DWORD PTR [esi+0x1464],eax
  429610:	push   DWORD PTR [edi]
  429612:	lea    ebx,[esi+0x4]
  429615:	mov    ecx,ebx
  429617:	call   0x429768
  42961c:	test   al,al
  42961e:	je     0x4296c6
  429624:	push   DWORD PTR [edi+0x430]
  42962a:	mov    ecx,ebx
  42962c:	call   0x429768
  429631:	test   al,al
  429633:	je     0x4296c6
  429639:	mov    eax,DWORD PTR [esi+0x1030]
  42963f:	push   ecx
  429640:	mov    DWORD PTR [ebp+0x8],eax
  429643:	mov    eax,DWORD PTR [edi+0x430]
  429649:	push   eax
  42964a:	push   DWORD PTR [edi+0x4]
  42964d:	mov    ecx,ebx
  42964f:	mov    DWORD PTR [ebp+0xc],eax
  429652:	call   0x428fcf
  429657:	test   eax,eax
  429659:	je     0x4296c6
  42965b:	mov    eax,DWORD PTR [ebp+0xc]
  42965e:	add    DWORD PTR [ebx+0x102c],eax
  429664:	mov    eax,DWORD PTR [edi+0x560]
  42966a:	mov    ecx,DWORD PTR [edi+0x434]
  429670:	xor    edi,edi
  429672:	mov    DWORD PTR [ebp+0xc],eax
  429675:	test   eax,eax
  429677:	je     0x4295b0
  42967d:	lea    ebx,[esi+0x1034]
  429683:	lea    esi,[ecx+0x8]
  429686:	mov    eax,DWORD PTR [esi-0x8]
  429689:	mov    DWORD PTR [ebp-0x14],eax
  42968c:	mov    eax,DWORD PTR [esi-0x4]
  42968f:	add    eax,DWORD PTR [ebp+0x8]
  429692:	push   ecx
  429693:	mov    DWORD PTR [ebp-0x10],eax
  429696:	mov    eax,DWORD PTR [esi]
  429698:	mov    DWORD PTR [ebp-0xc],eax
  42969b:	mov    eax,DWORD PTR [esi+0x4]
  42969e:	mov    DWORD PTR [ebp-0x8],eax
  4296a1:	push   0x10
  4296a3:	lea    eax,[ebp-0x14]
  4296a6:	push   eax
  4296a7:	mov    ecx,ebx
  4296a9:	call   0x428fcf
  4296ae:	test   eax,eax
  4296b0:	je     0x4296c6
  4296b2:	inc    DWORD PTR [ebx+0x42c]
  4296b8:	inc    edi
  4296b9:	add    esi,0x10
  4296bc:	cmp    edi,DWORD PTR [ebp+0xc]
  4296bf:	jb     0x429686
  4296c1:	jmp    0x4295b0
  4296c6:	xor    al,al
  4296c8:	pop    edi
  4296c9:	pop    esi
  4296ca:	pop    ebx
  4296cb:	leave  
  4296cc:	ret    0x8
  4296cf:	push   ebp
  4296d0:	mov    ebp,esp
  4296d2:	push   ebx
  4296d3:	push   esi
  4296d4:	push   ecx
  4296d5:	xor    ebx,ebx
  4296d7:	inc    ebx
  4296d8:	push   ebx
  4296d9:	lea    eax,[ebp+0x8]
  4296dc:	push   eax
  4296dd:	mov    esi,ecx
  4296df:	call   0x428fcf
  4296e4:	test   eax,eax
  4296e6:	je     0x429707
  4296e8:	inc    DWORD PTR [esi+0x42c]
  4296ee:	push   ecx
  4296ef:	push   ebx
  4296f0:	lea    eax,[ebp+0x9]
  4296f3:	push   eax
  4296f4:	mov    ecx,esi
  4296f6:	call   0x428fcf
  4296fb:	test   eax,eax
  4296fd:	je     0x429707
  4296ff:	inc    DWORD PTR [esi+0x42c]
  429705:	jmp    0x429709
  429707:	xor    ebx,ebx
  429709:	pop    esi
  42970a:	mov    al,bl
  42970c:	pop    ebx
  42970d:	pop    ebp
  42970e:	ret    0x4
  429711:	push   ebp
  429712:	mov    ebp,esp
  429714:	push   ebx
  429715:	mov    ebx,DWORD PTR [ebp+0xc]
  429718:	push   esi
  429719:	push   edi
  42971a:	mov    edi,ecx
  42971c:	push   ecx
  42971d:	mov    esi,DWORD PTR [edi+0x4]
  429720:	shl    ebx,0x2
  429723:	sub    esi,ebx
  429725:	sub    esi,DWORD PTR [edi]
  429727:	push   0x4
  429729:	push   DWORD PTR [ebp+0x8]
  42972c:	and    esi,0xfffffffc
  42972f:	call   0x428fcf
  429734:	test   eax,eax
  429736:	je     0x42975f
  429738:	mov    eax,DWORD PTR [edi]
  42973a:	inc    DWORD PTR [edi+0x42c]
  429740:	add    eax,ebx
  429742:	push   esi
  429743:	push   eax
  429744:	add    eax,0x4
  429747:	push   eax
  429748:	call   DWORD PTR ds:0x464358
  42974e:	mov    eax,DWORD PTR [ebp+0x8]
  429751:	mov    ecx,DWORD PTR [edi]
  429753:	mov    eax,DWORD PTR [eax]
  429755:	mov    DWORD PTR [ebx+ecx*1],eax
  429758:	add    esp,0xc
  42975b:	mov    al,0x1
  42975d:	jmp    0x429761
  42975f:	xor    al,al
  429761:	pop    edi
  429762:	pop    esi
  429763:	pop    ebx
  429764:	pop    ebp
  429765:	ret    0x8
  429768:	push   ebp
  429769:	mov    ebp,esp
  42976b:	push   esi
  42976c:	push   DWORD PTR [ebp+0x8]
  42976f:	mov    esi,ecx
  429771:	call   0x429794
  429776:	test   al,al
  429778:	je     0x42978d
  42977a:	push   DWORD PTR [ebp+0xa]
  42977d:	mov    ecx,esi
  42977f:	call   0x429794
  429784:	test   al,al
  429786:	je     0x42978d
  429788:	xor    eax,eax
  42978a:	inc    eax
  42978b:	jmp    0x42978f
  42978d:	xor    eax,eax
  42978f:	pop    esi
  429790:	pop    ebp
  429791:	ret    0x4
  429794:	push   ebp
  429795:	mov    ebp,esp
  429797:	push   ebx
  429798:	push   esi
  429799:	push   ecx
  42979a:	xor    ebx,ebx
  42979c:	inc    ebx
  42979d:	push   ebx
  42979e:	lea    eax,[ebp+0x8]
  4297a1:	push   eax
  4297a2:	mov    esi,ecx
  4297a4:	call   0x428fcf
  4297a9:	test   eax,eax
  4297ab:	je     0x4297cc
  4297ad:	inc    DWORD PTR [esi+0x102c]
  4297b3:	push   ecx
  4297b4:	push   ebx
  4297b5:	lea    eax,[ebp+0x9]
  4297b8:	push   eax
  4297b9:	mov    ecx,esi
  4297bb:	call   0x428fcf
  4297c0:	test   eax,eax
  4297c2:	je     0x4297cc
  4297c4:	inc    DWORD PTR [esi+0x102c]
  4297ca:	jmp    0x4297ce
  4297cc:	xor    ebx,ebx
  4297ce:	pop    esi
  4297cf:	mov    al,bl
  4297d1:	pop    ebx
  4297d2:	pop    ebp
  4297d3:	ret    0x4
  4297d6:	push   ebp
  4297d7:	mov    ebp,esp
  4297d9:	sub    esp,0xc
  4297dc:	cmp    BYTE PTR ds:0x44e02f,0x0
  4297e3:	mov    eax,edx
  4297e5:	push   esi
  4297e6:	mov    DWORD PTR [ebp-0x8],eax
  4297e9:	mov    esi,ecx
  4297eb:	jne    0x4297f4
  4297ed:	xor    al,al
  4297ef:	jmp    0x4298d0
  4297f4:	push   edi
  4297f5:	test   eax,eax
  4297f7:	jne    0x429807
  4297f9:	mov    edi,DWORD PTR [ebp+0x8]
  4297fc:	stos   DWORD PTR es:[edi],eax
  4297fd:	stos   DWORD PTR es:[edi],eax
  4297fe:	stos   DWORD PTR es:[edi],eax
  4297ff:	stos   DWORD PTR es:[edi],eax
  429800:	mov    al,0x1
  429802:	jmp    0x4298cf
  429807:	push   ebx
  429808:	xor    ebx,ebx
  42980a:	cmp    DWORD PTR ds:0x44e4b8,ebx
  429810:	jne    0x42982e
  429812:	push   0xf0000000
  429817:	push   0x1
  429819:	push   0x41e548
  42981e:	push   ebx
  42981f:	push   0x44e4b8
  429824:	call   DWORD PTR ds:0x464280
  42982a:	test   eax,eax
  42982c:	je     0x429898
  42982e:	push   ebx
  42982f:	push   ebx
  429830:	push   ebx
  429831:	push   0x2
  429833:	push   ebx
  429834:	push   esi
  429835:	call   DWORD PTR ds:0x4642a4
  42983b:	mov    edi,eax
  42983d:	test   edi,edi
  42983f:	je     0x429898
  429841:	push   ebx
  429842:	push   ebx
  429843:	push   ebx
  429844:	push   ebx
  429845:	push   0x4
  429847:	push   edi
  429848:	call   DWORD PTR ds:0x4642a8
  42984e:	push   edi
  42984f:	mov    esi,eax
  429851:	call   DWORD PTR ds:0x4642ac
  429857:	test   esi,esi
  429859:	je     0x429898
  42985b:	lea    eax,[ebp-0x4]
  42985e:	push   eax
  42985f:	push   ebx
  429860:	push   ebx
  429861:	push   0x8003
  429866:	push   DWORD PTR ds:0x44e4b8
  42986c:	call   DWORD PTR ds:0x464284
  429872:	test   eax,eax
  429874:	je     0x429891
  429876:	push   ebx
  429877:	push   DWORD PTR [ebp-0x8]
  42987a:	push   esi
  42987b:	push   DWORD PTR [ebp-0x4]
  42987e:	call   DWORD PTR ds:0x464288
  429884:	test   eax,eax
  429886:	jne    0x42989c
  429888:	push   DWORD PTR [ebp-0x4]
  42988b:	call   DWORD PTR ds:0x46428c
  429891:	push   esi
  429892:	call   DWORD PTR ds:0x4642b0
  429898:	xor    al,al
  42989a:	jmp    0x4298ce
  42989c:	push   ebx
  42989d:	lea    eax,[ebp-0xc]
  4298a0:	push   eax
  4298a1:	push   DWORD PTR [ebp+0x8]
  4298a4:	mov    DWORD PTR [ebp-0xc],0x10
  4298ab:	push   0x2
  4298ad:	push   DWORD PTR [ebp-0x4]
  4298b0:	call   DWORD PTR ds:0x464290
  4298b6:	test   eax,eax
  4298b8:	je     0x4298bc
  4298ba:	mov    bl,0x1
  4298bc:	push   DWORD PTR [ebp-0x4]
  4298bf:	call   DWORD PTR ds:0x46428c
  4298c5:	push   esi
  4298c6:	call   DWORD PTR ds:0x4642b0
  4298cc:	mov    al,bl
  4298ce:	pop    ebx
  4298cf:	pop    edi
  4298d0:	pop    esi
  4298d1:	leave  
  4298d2:	ret    0x4
  4298d5:	cmp    BYTE PTR ds:0x44e05a,0x0
  4298dc:	push   esi
  4298dd:	mov    esi,ecx
  4298df:	push   edi
  4298e0:	mov    eax,DWORD PTR [esi+0x3c]
  4298e3:	mov    DWORD PTR [esi+0x40],eax
  4298e6:	mov    edi,0x200
  4298eb:	je     0x429913
  4298ed:	cmp    BYTE PTR ds:0x45f856,0x0
  4298f4:	jne    0x429913
  4298f6:	movzx  ecx,WORD PTR [esi+0x3a]
  4298fa:	add    ecx,edi
  4298fc:	xor    dl,dl
  4298fe:	call   0x429c7c
  429903:	test   eax,eax
  429905:	je     0x42990c
  429907:	mov    DWORD PTR [esi+0x40],eax
  42990a:	jmp    0x429913
  42990c:	mov    BYTE PTR ds:0x45f856,0x1
  429913:	cmp    DWORD PTR [esi+0x3c],0x0
  429917:	jne    0x42992c
  429919:	movzx  ecx,WORD PTR [esi+0x3a]
  42991d:	add    ecx,edi
  42991f:	mov    dl,0x1
  429921:	call   0x429c7c
  429926:	mov    DWORD PTR [esi+0x40],eax
  429929:	mov    DWORD PTR [esi+0x3c],eax
  42992c:	mov    eax,DWORD PTR [esi+0x40]
  42992f:	pop    edi
  429930:	pop    esi
  429931:	ret    
  429932:	push   esi
  429933:	mov    esi,ecx
  429935:	test   BYTE PTR [esi+0x2d],0x4
  429939:	jne    0x429a3f
  42993f:	mov    eax,DWORD PTR [esi+0x30]
  429942:	mov    edx,0x1000
  429947:	mov    ecx,eax
  429949:	add    eax,edx
  42994b:	shr    ecx,0xc
  42994e:	push   ebx
  42994f:	mov    WORD PTR [esi+0x3a],dx
  429953:	lea    ebx,[edx-0x1]
  429956:	cmp    eax,DWORD PTR [esi+0x34]
  429959:	jbe    0x429968
  42995b:	mov    ax,WORD PTR [esi+0x34]
  42995f:	and    ax,bx
  429962:	inc    ax
  429964:	mov    WORD PTR [esi+0x3a],ax
  429968:	cmp    BYTE PTR ds:0x44e05a,0x0
  42996f:	je     0x4299b6
  429971:	cmp    BYTE PTR ds:0x45f856,0x0
  429978:	jne    0x429985
  42997a:	test   ecx,ecx
  42997c:	je     0x429985
  42997e:	mov    eax,DWORD PTR [esi+0x3c]
  429981:	mov    DWORD PTR [esi+ecx*4+0x40],eax
  429985:	mov    eax,DWORD PTR [esi+ecx*4+0x44]
  429989:	test   eax,eax
  42998b:	je     0x4299a1
  42998d:	mov    DWORD PTR [esi+0x3c],eax
  429990:	and    DWORD PTR [esi+ecx*4+0x44],0x0
  429995:	movzx  eax,WORD PTR [esi+0x3a]
  429999:	add    DWORD PTR [esi+0x30],eax
  42999c:	jmp    0x429a2c
  4299a1:	cmp    BYTE PTR ds:0x45f692,0x0
  4299a8:	je     0x4299b0
  4299aa:	or     BYTE PTR [esi+0x2d],0x8
  4299ae:	jmp    0x4299b6
  4299b0:	mov    eax,DWORD PTR [esi+0x40]
  4299b3:	mov    DWORD PTR [esi+0x3c],eax
  4299b6:	cmp    DWORD PTR [esi+0x3c],0x0
  4299ba:	jne    0x4299d0
  4299bc:	movzx  ecx,WORD PTR [esi+0x3a]
  4299c0:	add    ecx,0x200
  4299c6:	mov    dl,0x1
  4299c8:	call   0x429c7c
  4299cd:	mov    DWORD PTR [esi+0x3c],eax
  4299d0:	mov    ecx,esi
  4299d2:	call   0x429b68
  4299d7:	movzx  ecx,WORD PTR [esi+0x3a]
  4299db:	cmp    cx,bx
  4299de:	jae    0x4299eb
  4299e0:	mov    eax,DWORD PTR [esi+0x34]
  4299e3:	test   eax,eax
  4299e5:	je     0x4299eb
  4299e7:	dec    eax
  4299e8:	mov    DWORD PTR [esi+0x34],eax
  4299eb:	mov    eax,DWORD PTR [esi+0x34]
  4299ee:	cmp    DWORD PTR [esi+0x30],eax
  4299f1:	jb     0x429a2c
  4299f3:	push   edi
  4299f4:	mov    edi,DWORD PTR [esi+0x3c]
  4299f7:	mov    edx,ecx
  4299f9:	cmp    BYTE PTR [edx+edi*1+0x1ff],0xa
  429a01:	je     0x429a2b
  429a03:	cmp    cx,bx
  429a06:	jae    0x429a23
  429a08:	mov    BYTE PTR [edx+edi*1+0x200],0xa
  429a10:	mov    al,BYTE PTR [esi+0x2d]
  429a13:	inc    WORD PTR [esi+0x3a]
  429a17:	inc    DWORD PTR [esi+0x30]
  429a1a:	and    al,0xdf
  429a1c:	or     al,0x40
  429a1e:	mov    BYTE PTR [esi+0x2d],al
  429a21:	jmp    0x429a2b
  429a23:	or     BYTE PTR [esi+0x2d],0x20
  429a27:	inc    eax
  429a28:	mov    DWORD PTR [esi+0x34],eax
  429a2b:	pop    edi
  429a2c:	mov    eax,DWORD PTR [esi+0x30]
  429a2f:	pop    ebx
  429a30:	cmp    eax,DWORD PTR [esi+0x34]
  429a33:	jb     0x429a3f
  429a35:	mov    al,BYTE PTR [esi+0x2d]
  429a38:	and    al,0x10
  429a3a:	or     al,0x5
  429a3c:	mov    BYTE PTR [esi+0x2d],al
  429a3f:	pop    esi
  429a40:	ret    
  429a41:	push   ebp
  429a42:	mov    ebp,esp
  429a44:	push   esi
  429a45:	push   edi
  429a46:	mov    esi,edx
  429a48:	mov    edi,ecx
  429a4a:	call   DWORD PTR ds:0x46435c
  429a50:	push   DWORD PTR [ebp+0x8]
  429a53:	and    DWORD PTR [eax],0x0
  429a56:	push   esi
  429a57:	push   edi
  429a58:	call   DWORD PTR ds:0x464394
  429a5e:	mov    ecx,DWORD PTR [ebp+0xc]
  429a61:	add    esp,0xc
  429a64:	pop    edi
  429a65:	pop    esi
  429a66:	test   ecx,ecx
  429a68:	je     0x429a6c
  429a6a:	mov    DWORD PTR [ecx],eax
  429a6c:	call   DWORD PTR ds:0x46435c
  429a72:	mov    eax,DWORD PTR [eax]
  429a74:	pop    ebp
  429a75:	ret    0x8
  429a78:	push   ebp
  429a79:	mov    ebp,esp
  429a7b:	sub    esp,0xc
  429a7e:	push   ebx
  429a7f:	push   esi
  429a80:	push   edi
  429a81:	mov    eax,edx
  429a83:	mov    esi,0x100
  429a88:	xor    edi,edi
  429a8a:	push   0x20
  429a8c:	mov    DWORD PTR [ebp-0xc],eax
  429a8f:	mov    DWORD PTR [ebp-0x4],esi
  429a92:	pop    ebx
  429a93:	test   cl,cl
  429a95:	jne    0x429aa7
  429a97:	mov    esi,0x180
  429a9c:	push   0x10
  429a9e:	mov    DWORD PTR [ebp-0x4],esi
  429aa1:	mov    edi,0x302
  429aa6:	pop    ebx
  429aa7:	push   0x41e5a0
  429aac:	push   eax
  429aad:	call   DWORD PTR ds:0x464364
  429ab3:	pop    ecx
  429ab4:	pop    ecx
  429ab5:	test   eax,eax
  429ab7:	je     0x429abc
  429ab9:	push   0x40
  429abb:	pop    ebx
  429abc:	or     edi,0x8000
  429ac2:	call   DWORD PTR ds:0x46435c
  429ac8:	and    DWORD PTR [eax],0x0
  429acb:	push   esi
  429acc:	push   ebx
  429acd:	push   edi
  429ace:	push   DWORD PTR [ebp-0xc]
  429ad1:	lea    eax,[ebp-0x8]
  429ad4:	push   eax
  429ad5:	call   DWORD PTR ds:0x464368
  429adb:	add    esp,0x14
  429ade:	test   eax,eax
  429ae0:	je     0x429ae6
  429ae2:	or     DWORD PTR [ebp-0x8],0xffffffff
  429ae6:	call   DWORD PTR ds:0x46435c
  429aec:	cmp    DWORD PTR [eax],0x18
  429aef:	jne    0x429b10
  429af1:	mov    esi,DWORD PTR ds:0x460e80
  429af7:	jmp    0x429b0c
  429af9:	mov    al,BYTE PTR [esi+0x2d]
  429afc:	test   al,0x1
  429afe:	je     0x429b0a
  429b00:	test   al,0x2
  429b02:	jne    0x429b0a
  429b04:	cmp    DWORD PTR [esi+0x4],0xffffffff
  429b08:	jne    0x429b18
  429b0a:	mov    esi,DWORD PTR [esi]
  429b0c:	test   esi,esi
  429b0e:	jne    0x429af9
  429b10:	mov    eax,DWORD PTR [ebp-0x8]
  429b13:	pop    edi
  429b14:	pop    esi
  429b15:	pop    ebx
  429b16:	leave  
  429b17:	ret    
  429b18:	mov    ecx,esi
  429b1a:	call   0x429b4a
  429b1f:	or     DWORD PTR [esi+0x4],0xffffffff
  429b23:	or     BYTE PTR [esi+0x2d],0x8
  429b27:	mov    esi,DWORD PTR [ebp-0x4]
  429b2a:	jmp    0x429ac2
  429b2c:	push   esi
  429b2d:	mov    esi,ecx
  429b2f:	call   DWORD PTR ds:0x46435c
  429b35:	and    DWORD PTR [eax],0x0
  429b38:	push   esi
  429b39:	call   DWORD PTR ds:0x46436c
  429b3f:	pop    ecx
  429b40:	call   DWORD PTR ds:0x46435c
  429b46:	mov    eax,DWORD PTR [eax]
  429b48:	pop    esi
  429b49:	ret    
  429b4a:	push   esi
  429b4b:	mov    esi,ecx
  429b4d:	mov    ecx,DWORD PTR [esi+0x4]
  429b50:	call   0x429b2c
  429b55:	test   eax,eax
  429b57:	je     0x429b66
  429b59:	mov    edx,DWORD PTR [esi+0x8]
  429b5c:	mov    ecx,0x3e9
  429b61:	jmp    0x42f1c0
  429b66:	pop    esi
  429b67:	ret    
  429b68:	push   ebx
  429b69:	push   edi
  429b6a:	mov    edi,ecx
  429b6c:	cmp    DWORD PTR [edi+0x4],0xffffffff
  429b70:	jne    0x429b91
  429b72:	mov    edx,DWORD PTR [edi+0x8]
  429b75:	mov    cl,0x1
  429b77:	call   0x429a78
  429b7c:	mov    DWORD PTR [edi+0x4],eax
  429b7f:	cmp    eax,0xffffffff
  429b82:	jne    0x429b91
  429b84:	mov    edx,DWORD PTR [edi+0x8]
  429b87:	mov    ecx,0x3eb
  429b8c:	jmp    0x42f1c0
  429b91:	xor    ebx,ebx
  429b93:	test   BYTE PTR [edi+0x2d],0x8
  429b97:	je     0x429bae
  429b99:	mov    edx,DWORD PTR [edi+0x30]
  429b9c:	mov    ecx,DWORD PTR [edi+0x4]
  429b9f:	push   ebx
  429ba0:	push   ebx
  429ba1:	call   0x429a41
  429ba6:	test   eax,eax
  429ba8:	jne    0x429b84
  429baa:	and    BYTE PTR [edi+0x2d],0xf7
  429bae:	call   DWORD PTR ds:0x46435c
  429bb4:	mov    DWORD PTR [eax],ebx
  429bb6:	movzx  eax,WORD PTR [edi+0x3a]
  429bba:	push   eax
  429bbb:	mov    eax,DWORD PTR [edi+0x3c]
  429bbe:	add    eax,0x200
  429bc3:	push   eax
  429bc4:	push   DWORD PTR [edi+0x4]
  429bc7:	call   DWORD PTR ds:0x464360
  429bcd:	add    esp,0xc
  429bd0:	mov    ebx,eax
  429bd2:	call   DWORD PTR ds:0x46435c
  429bd8:	cmp    DWORD PTR [eax],0x0
  429bdb:	jne    0x429b84
  429bdd:	add    DWORD PTR [edi+0x30],ebx
  429be0:	mov    WORD PTR [edi+0x3a],bx
  429be4:	pop    edi
  429be5:	pop    ebx
  429be6:	ret    
  429be7:	push   ebp
  429be8:	mov    ebp,esp
  429bea:	push   ecx
  429beb:	push   esi
  429bec:	mov    esi,ecx
  429bee:	push   edi
  429bef:	mov    edx,esi
  429bf1:	mov    cl,0x1
  429bf3:	call   0x429a78
  429bf8:	mov    edi,eax
  429bfa:	cmp    edi,0xffffffff
  429bfd:	jne    0x429c03
  429bff:	xor    eax,eax
  429c01:	jmp    0x429c78
  429c03:	lea    eax,[ebp-0x4]
  429c06:	push   eax
  429c07:	push   0x2
  429c09:	xor    edx,edx
  429c0b:	mov    ecx,edi
  429c0d:	call   0x429a41
  429c12:	test   eax,eax
  429c14:	je     0x429c22
  429c16:	mov    edx,esi
  429c18:	mov    ecx,0x3eb
  429c1d:	jmp    0x42f1c0
  429c22:	xor    ecx,ecx
  429c24:	push   ebx
  429c25:	mov    ebx,DWORD PTR [ebp-0x4]
  429c28:	cmp    BYTE PTR ds:0x44e05a,cl
  429c2e:	je     0x429c45
  429c30:	mov    eax,ebx
  429c32:	cdq    
  429c33:	and    edx,0xfff
  429c39:	add    eax,edx
  429c3b:	sar    eax,0xc
  429c3e:	lea    ecx,[eax*4+0x4]
  429c45:	add    ecx,0x48
  429c48:	call   0x43f42e
  429c4d:	mov    esi,eax
  429c4f:	push   edi
  429c50:	or     DWORD PTR [esi+0x18],0xffffffff
  429c54:	mov    DWORD PTR [esi+0x4],edi
  429c57:	mov    DWORD PTR [esi+0x34],ebx
  429c5a:	mov    BYTE PTR [esi+0x2d],0x1b
  429c5e:	call   DWORD PTR ds:0x464370
  429c64:	pop    ecx
  429c65:	lea    ecx,[esi+0x1d]
  429c68:	push   ecx
  429c69:	mov    edx,ebx
  429c6b:	mov    ecx,eax
  429c6d:	call   0x4297d6
  429c72:	mov    BYTE PTR [esi+0x1c],al
  429c75:	mov    eax,esi
  429c77:	pop    ebx
  429c78:	pop    edi
  429c79:	pop    esi
  429c7a:	leave  
  429c7b:	ret    
  429c7c:	push   ebx
  429c7d:	mov    bl,dl
  429c7f:	call   0x43f45b
  429c84:	test   eax,eax
  429c86:	jne    0x429cb3
  429c88:	mov    BYTE PTR ds:0x45f856,0x1
  429c8f:	test   bl,bl
  429c91:	je     0x429cb1
  429c93:	call   0x433fac
  429c98:	test   al,al
  429c9a:	jne    0x429c88
  429c9c:	push   0x0
  429c9e:	xor    edx,edx
  429ca0:	mov    ecx,0x3ec
  429ca5:	call   0x42ee80
  429caa:	call   0x42c81b
  429caf:	jmp    0x429c88
  429cb1:	xor    eax,eax
  429cb3:	pop    ebx
  429cb4:	ret    
  429cb5:	push   esi
  429cb6:	mov    esi,ecx
  429cb8:	call   DWORD PTR ds:0x46435c
  429cbe:	and    DWORD PTR [eax],0x0
  429cc1:	cmp    DWORD PTR [esi+0x3c],0x0
  429cc5:	je     0x429cfd
  429cc7:	movzx  eax,WORD PTR [esi+0x3a]
  429ccb:	push   ebx
  429ccc:	push   eax
  429ccd:	push   DWORD PTR [esi+0x3c]
  429cd0:	push   DWORD PTR [esi+0x4]
  429cd3:	call   DWORD PTR ds:0x464348
  429cd9:	add    esp,0xc
  429cdc:	movzx  ebx,ax
  429cdf:	call   DWORD PTR ds:0x46435c
  429ce5:	cmp    DWORD PTR [eax],0x0
  429ce8:	jne    0x429cff
  429cea:	movzx  eax,WORD PTR [esi+0x3a]
  429cee:	cmp    bx,ax
  429cf1:	pop    ebx
  429cf2:	jb     0x429cff
  429cf4:	add    DWORD PTR [esi+0x30],eax
  429cf7:	xor    eax,eax
  429cf9:	mov    WORD PTR [esi+0x3a],ax
  429cfd:	pop    esi
  429cfe:	ret    
  429cff:	mov    edx,DWORD PTR [esi+0x8]
  429d02:	xor    eax,eax
  429d04:	mov    WORD PTR [esi+0x3a],ax
  429d08:	mov    ecx,0x3ea
  429d0d:	jmp    0x42f1c0
  429d12:	mov    eax,ds:0x44f584
  429d17:	test   eax,eax
  429d19:	jle    0x429d37
  429d1b:	cmp    eax,0x2
  429d1e:	jle    0x429d34
  429d20:	cmp    eax,0x3
  429d23:	jne    0x429d37
  429d25:	call   0x429d3a
  429d2a:	xor    ecx,ecx
  429d2c:	test   al,al
  429d2e:	sete   cl
  429d31:	mov    al,cl
  429d33:	ret    
  429d34:	xor    al,al
  429d36:	ret    
  429d37:	mov    al,0x1
  429d39:	ret    
  429d3a:	push   ebp
  429d3b:	mov    ebp,esp
  429d3d:	sub    esp,0x10
  429d40:	call   DWORD PTR ds:0x4642b4
  429d46:	cmp    al,0x6
  429d48:	jb     0x429d4e
  429d4a:	mov    al,0x1
  429d4c:	leave  
  429d4d:	ret    
  429d4e:	push   edi
  429d4f:	lea    eax,[ebp-0x4]
  429d52:	push   eax
  429d53:	push   0x20019
  429d58:	push   0x0
  429d5a:	push   0x41e5b0
  429d5f:	push   0x80000001
  429d64:	call   DWORD PTR ds:0x464294
  429d6a:	test   eax,eax
  429d6c:	jne    0x429db6
  429d6e:	push   esi
  429d6f:	push   0x4
  429d71:	pop    edi
  429d72:	lea    eax,[ebp-0x8]
  429d75:	push   eax
  429d76:	lea    eax,[ebp-0x10]
  429d79:	push   eax
  429d7a:	lea    eax,[ebp-0xc]
  429d7d:	push   eax
  429d7e:	push   0x0
  429d80:	push   0x41e608
  429d85:	push   DWORD PTR [ebp-0x4]
  429d88:	mov    DWORD PTR [ebp-0x8],edi
  429d8b:	call   DWORD PTR ds:0x464298
  429d91:	push   DWORD PTR [ebp-0x4]
  429d94:	mov    esi,eax
  429d96:	call   DWORD PTR ds:0x46429c
  429d9c:	test   esi,esi
  429d9e:	pop    esi
  429d9f:	jne    0x429db6
  429da1:	cmp    DWORD PTR [ebp-0xc],edi
  429da4:	jne    0x429db6
  429da6:	cmp    DWORD PTR [ebp-0x8],edi
  429da9:	jne    0x429db6
  429dab:	xor    eax,eax
  429dad:	cmp    DWORD PTR [ebp-0x10],0x1
  429db1:	sete   al
  429db4:	jmp    0x429db8
  429db6:	xor    al,al
  429db8:	pop    edi
  429db9:	leave  
  429dba:	ret    
  429dbb:	push   ebp
  429dbc:	mov    ebp,esp
  429dbe:	sub    esp,0xc
  429dc1:	xor    eax,eax
  429dc3:	push   esi
  429dc4:	push   edi
  429dc5:	mov    edi,0x4633f0
  429dca:	cmp    eax,edi
  429dcc:	je     0x429e40
  429dce:	lea    eax,[ebp-0x4]
  429dd1:	push   eax
  429dd2:	push   0x20019
  429dd7:	push   0x0
  429dd9:	push   0x41e640
  429dde:	push   0x80000002
  429de3:	call   DWORD PTR ds:0x464294
  429de9:	test   eax,eax
  429deb:	jne    0x429e40
  429ded:	lea    eax,[ebp-0xc]
  429df0:	push   eax
  429df1:	push   edi
  429df2:	lea    eax,[ebp-0x8]
  429df5:	push   eax
  429df6:	push   0x0
  429df8:	push   0x41e6b0
  429dfd:	push   DWORD PTR [ebp-0x4]
  429e00:	mov    DWORD PTR [ebp-0xc],0x208
  429e07:	call   DWORD PTR ds:0x464298
  429e0d:	push   DWORD PTR [ebp-0x4]
  429e10:	mov    esi,eax
  429e12:	call   DWORD PTR ds:0x46429c
  429e18:	xor    eax,eax
  429e1a:	mov    ds:0x4635f6,ax
  429e20:	test   esi,esi
  429e22:	jne    0x429e40
  429e24:	cmp    DWORD PTR [ebp-0x8],0x2
  429e28:	jne    0x429e46
  429e2a:	mov    esi,0x104
  429e2f:	push   esi
  429e30:	push   edi
  429e31:	push   edi
  429e32:	call   DWORD PTR ds:0x4642b8
  429e38:	cmp    eax,esi
  429e3a:	ja     0x429e40
  429e3c:	test   eax,eax
  429e3e:	jne    0x429e4c
  429e40:	xor    al,al
  429e42:	pop    edi
  429e43:	pop    esi
  429e44:	leave  
  429e45:	ret    
  429e46:	cmp    DWORD PTR [ebp-0x8],0x1
  429e4a:	jne    0x429e40
  429e4c:	mov    al,0x1
  429e4e:	jmp    0x429e42
  429e50:	push   esi
  429e51:	xor    esi,esi
  429e53:	push   esi
  429e54:	push   0x9c9c
  429e59:	push   esi
  429e5a:	push   0x4
  429e5c:	push   0x4632e4
  429e61:	push   0xffffffff
  429e63:	call   DWORD PTR ds:0x4642a4
  429e69:	mov    ds:0x44f578,eax
  429e6e:	test   eax,eax
  429e70:	jne    0x429e76
  429e72:	xor    al,al
  429e74:	pop    esi
  429e75:	ret    
  429e76:	push   esi
  429e77:	push   esi
  429e78:	push   esi
  429e79:	push   0x6
  429e7b:	push   eax
  429e7c:	call   DWORD PTR ds:0x4642bc
  429e82:	mov    ds:0x44f57c,eax
  429e87:	test   eax,eax
  429e89:	jne    0x429e9f
  429e8b:	push   DWORD PTR ds:0x44f578
  429e91:	call   DWORD PTR ds:0x4642ac
  429e97:	mov    DWORD PTR ds:0x44f578,esi
  429e9d:	jmp    0x429e72
  429e9f:	mov    al,0x1
  429ea1:	pop    esi
  429ea2:	ret    
  429ea3:	push   ebp
  429ea4:	mov    ebp,esp
  429ea6:	sub    esp,0x64
  429ea9:	mov    eax,ds:0x448858
  429eae:	xor    eax,ebp
  429eb0:	mov    DWORD PTR [ebp-0x4],eax
  429eb3:	xor    eax,eax
  429eb5:	push   ebx
  429eb6:	xor    ebx,ebx
  429eb8:	inc    eax
  429eb9:	mov    DWORD PTR [ebp-0x64],ecx
  429ebc:	mov    DWORD PTR [ebp-0x58],ebx
  429ebf:	mov    DWORD PTR [ebp-0x60],eax
  429ec2:	cmp    DWORD PTR ds:0x463390,ebx
  429ec8:	jne    0x42a286
  429ece:	call   0x429d12
  429ed3:	test   al,al
  429ed5:	je     0x429edf
  429ed7:	xor    eax,eax
  429ed9:	inc    eax
  429eda:	jmp    0x42a286
  429edf:	push   esi
  429ee0:	xor    esi,esi
  429ee2:	inc    esi
  429ee3:	mov    DWORD PTR ds:0x4632e4,0xc
  429eed:	mov    DWORD PTR ds:0x4632e8,ebx
  429ef3:	mov    DWORD PTR ds:0x4632ec,esi
  429ef9:	cmp    DWORD PTR ds:0x44f57c,ebx
  429eff:	jne    0x429f0a
  429f01:	call   0x429e50
  429f06:	test   al,al
  429f08:	je     0x429f13
  429f0a:	call   0x429dbb
  429f0f:	test   al,al
  429f11:	jne    0x429f1a
  429f13:	mov    eax,esi
  429f15:	jmp    0x42a285
  429f1a:	mov    esi,DWORD PTR ds:0x4642c0
  429f20:	push   edi
  429f21:	push   ebx
  429f22:	push   ebx
  429f23:	push   ebx
  429f24:	mov    edi,0x4632e4
  429f29:	push   edi
  429f2a:	call   esi
  429f2c:	push   ebx
  429f2d:	push   ebx
  429f2e:	push   ebx
  429f2f:	push   edi
  429f30:	mov    ds:0x463390,eax
  429f35:	call   esi
  429f37:	push   ebx
  429f38:	push   ebx
  429f39:	push   edi
  429f3a:	mov    DWORD PTR [ebp-0x54],eax
  429f3d:	call   DWORD PTR ds:0x4642c4
  429f43:	mov    edi,eax
  429f45:	mov    DWORD PTR [ebp-0x5c],edi
  429f48:	call   DWORD PTR ds:0x4642c8
  429f4e:	push   ebx
  429f4f:	push   0x1
  429f51:	push   0x1fffff
  429f56:	lea    ecx,[ebp-0x58]
  429f59:	push   ecx
  429f5a:	push   eax
  429f5b:	push   eax
  429f5c:	push   eax
  429f5d:	call   DWORD PTR ds:0x4642cc
  429f63:	mov    ebx,DWORD PTR ds:0x4642ac
  429f69:	test   eax,eax
  429f6b:	mov    eax,DWORD PTR [ebp-0x54]
  429f6e:	je     0x42a21a
  429f74:	cmp    DWORD PTR ds:0x463390,0x0
  429f7b:	je     0x42a21a
  429f81:	test   eax,eax
  429f83:	je     0x42a221
  429f89:	test   edi,edi
  429f8b:	je     0x42a21a
  429f91:	cmp    DWORD PTR [ebp-0x58],0x0
  429f95:	je     0x42a21a
  429f9b:	mov    esi,DWORD PTR ds:0x44f57c
  429fa1:	push   0x9c9c
  429fa6:	push   0x0
  429fa8:	push   esi
  429fa9:	call   0x44764c
  429fae:	mov    eax,DWORD PTR [ebp-0x58]
  429fb1:	add    esp,0xc
  429fb4:	mov    DWORD PTR [esi+0x28],eax
  429fb7:	call   DWORD PTR ds:0x4642d0
  429fbd:	mov    ecx,DWORD PTR ds:0x44f57c
  429fc3:	mov    DWORD PTR [ecx+0x8],eax
  429fc6:	call   DWORD PTR ds:0x4642d4
  429fcc:	mov    ecx,DWORD PTR ds:0x44f57c
  429fd2:	mov    DWORD PTR [ecx+0xc],eax
  429fd5:	mov    eax,ds:0x463390
  429fda:	mov    DWORD PTR [ecx+0x20],eax
  429fdd:	mov    eax,DWORD PTR [ebp-0x54]
  429fe0:	mov    DWORD PTR [ecx+0x18],eax
  429fe3:	mov    eax,DWORD PTR [ebp-0x64]
  429fe6:	mov    DWORD PTR [ecx+0x24],edi
  429fe9:	mov    DWORD PTR [ecx],0x9c9c
  429fef:	mov    DWORD PTR [ecx+0x4],0x20000
  429ff6:	mov    DWORD PTR [ecx+0x14],eax
  429ff9:	mov    eax,DWORD PTR [eax]
  429ffb:	mov    eax,DWORD PTR [eax+0xc]
  429ffe:	mov    DWORD PTR [ecx+0x10],eax
  42a001:	call   DWORD PTR ds:0x4642b4
  42a007:	cmp    al,0x6
  42a009:	mov    eax,ds:0x44f584
  42a00e:	sbb    cl,cl
  42a010:	inc    cl
  42a012:	dec    eax
  42a013:	je     0x42a043
  42a015:	dec    eax
  42a016:	je     0x42a02a
  42a018:	dec    eax
  42a019:	jne    0x42a217
  42a01f:	mov    edx,DWORD PTR ds:0x44f57c
  42a025:	and    DWORD PTR [edx+0x2c],eax
  42a028:	jmp    0x42a037
  42a02a:	mov    edx,DWORD PTR ds:0x44f57c
  42a030:	mov    DWORD PTR [edx+0x2c],0x8
  42a037:	xor    eax,eax
  42a039:	test   cl,cl
  42a03b:	sete   al
  42a03e:	mov    DWORD PTR [edx+0x30],eax
  42a041:	jmp    0x42a051
  42a043:	mov    edx,DWORD PTR ds:0x44f57c
  42a049:	and    DWORD PTR [edx+0x2c],0x0
  42a04d:	and    DWORD PTR [edx+0x30],0x0
  42a051:	and    DWORD PTR [edx+0x34],0x0
  42a055:	mov    cl,BYTE PTR ds:0x44f580
  42a05b:	xor    eax,eax
  42a05d:	test   cl,cl
  42a05f:	setne  al
  42a062:	and    DWORD PTR [edx+0x3c],0x0
  42a066:	xor    ebx,ebx
  42a068:	inc    ebx
  42a069:	push   0xffffffff
  42a06b:	push   DWORD PTR ds:0x448d90
  42a071:	mov    DWORD PTR [edx+0x44],ebx
  42a074:	dec    eax
  42a075:	and    eax,0x10
  42a078:	or     eax,0x4
  42a07b:	mov    DWORD PTR [edx+0x38],eax
  42a07e:	movzx  eax,cl
  42a081:	neg    eax
  42a083:	sbb    eax,eax
  42a085:	and    eax,0x10
  42a088:	or     eax,ebx
  42a08a:	mov    ebx,DWORD PTR ds:0x464374
  42a090:	mov    DWORD PTR [edx+0x4c],eax
  42a093:	lea    eax,[edx+0x21ac]
  42a099:	push   0x38
  42a09b:	push   eax
  42a09c:	call   ebx
  42a09e:	mov    eax,ds:0x46437c
  42a0a3:	push   0xffffffff
  42a0a5:	push   DWORD PTR [eax]
  42a0a7:	mov    eax,ds:0x44f57c
  42a0ac:	add    eax,0x258
  42a0b1:	push   0x104
  42a0b6:	push   eax
  42a0b7:	call   ebx
  42a0b9:	push   0x12
  42a0bb:	pop    ecx
  42a0bc:	push   0x48
  42a0be:	lea    eax,[ebp-0x4c]
  42a0c1:	push   eax
  42a0c2:	mov    eax,ds:0x44f57c
  42a0c7:	mov    esi,0x41e6c0
  42a0cc:	lea    edi,[ebp-0x4c]
  42a0cf:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a0d1:	mov    esi,0x104
  42a0d6:	add    eax,0x460
  42a0db:	push   esi
  42a0dc:	push   eax
  42a0dd:	call   DWORD PTR ds:0x464380
  42a0e3:	mov    eax,ds:0x44f57c
  42a0e8:	push   0xffffffff
  42a0ea:	push   DWORD PTR ds:0x448d94
  42a0f0:	add    eax,0x7a4
  42a0f5:	push   esi
  42a0f6:	push   eax
  42a0f7:	call   ebx
  42a0f9:	add    esp,0x40
  42a0fc:	mov    ebx,0x4635f8
  42a101:	push   DWORD PTR ds:0x44f578
  42a107:	push   0x41e708
  42a10c:	push   esi
  42a10d:	push   ebx
  42a10e:	call   DWORD PTR ds:0x464384
  42a114:	push   0x44
  42a116:	pop    edi
  42a117:	push   edi
  42a118:	push   0x0
  42a11a:	mov    esi,0x463800
  42a11f:	push   esi
  42a120:	call   0x44764c
  42a125:	add    esp,0x1c
  42a128:	xor    eax,eax
  42a12a:	push   0x463844
  42a12f:	push   esi
  42a130:	push   eax
  42a131:	push   eax
  42a132:	push   0x4000020
  42a137:	push   0x1
  42a139:	push   eax
  42a13a:	push   eax
  42a13b:	mov    DWORD PTR ds:0x463800,edi
  42a141:	push   ebx
  42a142:	push   0x4633f0
  42a147:	call   DWORD PTR ds:0x4642d8
  42a14d:	mov    ebx,DWORD PTR ds:0x4642ac
  42a153:	test   eax,eax
  42a155:	je     0x42a214
  42a15b:	push   DWORD PTR ds:0x463844
  42a161:	call   ebx
  42a163:	push   DWORD PTR ds:0x463848
  42a169:	call   ebx
  42a16b:	mov    esi,DWORD PTR ds:0x4642dc
  42a171:	mov    BYTE PTR [ebp-0x4d],0x1
  42a175:	push   0x4e20
  42a17a:	push   DWORD PTR ds:0x463390
  42a180:	call   esi
  42a182:	test   eax,eax
  42a184:	jne    0x42a19b
  42a186:	push   0x1
  42a188:	push   DWORD PTR [ebp-0x54]
  42a18b:	call   esi
  42a18d:	mov    edi,DWORD PTR [ebp-0x5c]
  42a190:	test   eax,eax
  42a192:	jne    0x42a1e9
  42a194:	xor    al,al
  42a196:	mov    BYTE PTR [ebp-0x4d],al
  42a199:	jmp    0x42a1ec
  42a19b:	mov    edi,DWORD PTR [ebp-0x5c]
  42a19e:	push   0x4e20
  42a1a3:	push   edi
  42a1a4:	call   esi
  42a1a6:	cmp    eax,0x102
  42a1ab:	je     0x42a1f9
  42a1ad:	cmp    eax,0x80
  42a1b2:	je     0x42a1f2
  42a1b4:	push   0x1
  42a1b6:	push   DWORD PTR ds:0x463390
  42a1bc:	call   esi
  42a1be:	test   eax,eax
  42a1c0:	je     0x42a1d1
  42a1c2:	push   DWORD PTR [ebp-0x54]
  42a1c5:	call   DWORD PTR ds:0x4642e4
  42a1cb:	mov    BYTE PTR [ebp-0x4d],0x0
  42a1cf:	jmp    0x42a1e2
  42a1d1:	push   0x1
  42a1d3:	push   DWORD PTR [ebp-0x54]
  42a1d6:	call   esi
  42a1d8:	neg    eax
  42a1da:	sbb    al,al
  42a1dc:	and    al,BYTE PTR [ebp-0x4d]
  42a1df:	mov    BYTE PTR [ebp-0x4d],al
  42a1e2:	push   edi
  42a1e3:	call   DWORD PTR ds:0x4642e0
  42a1e9:	mov    al,BYTE PTR [ebp-0x4d]
  42a1ec:	test   al,al
  42a1ee:	jne    0x42a175
  42a1f0:	jmp    0x42a1f9
  42a1f2:	push   edi
  42a1f3:	call   DWORD PTR ds:0x4642e0
  42a1f9:	mov    eax,ds:0x44f57c
  42a1fe:	mov    al,BYTE PTR [eax+0x9a84]
  42a204:	and    al,0x10
  42a206:	movzx  eax,al
  42a209:	neg    eax
  42a20b:	sbb    eax,eax
  42a20d:	not    eax
  42a20f:	and    DWORD PTR [ebp-0x60],eax
  42a212:	jmp    0x42a217
  42a214:	mov    edi,DWORD PTR [ebp-0x5c]
  42a217:	mov    eax,DWORD PTR [ebp-0x54]
  42a21a:	test   eax,eax
  42a21c:	je     0x42a221
  42a21e:	push   eax
  42a21f:	call   ebx
  42a221:	test   edi,edi
  42a223:	je     0x42a228
  42a225:	push   edi
  42a226:	call   ebx
  42a228:	cmp    DWORD PTR [ebp-0x58],0x0
  42a22c:	pop    edi
  42a22d:	je     0x42a234
  42a22f:	push   DWORD PTR [ebp-0x58]
  42a232:	call   ebx
  42a234:	mov    eax,ds:0x463390
  42a239:	test   eax,eax
  42a23b:	je     0x42a247
  42a23d:	push   eax
  42a23e:	call   ebx
  42a240:	and    DWORD PTR ds:0x463390,0x0
  42a247:	mov    eax,ds:0x44f57c
  42a24c:	test   eax,eax
  42a24e:	je     0x42a25e
  42a250:	push   eax
  42a251:	call   DWORD PTR ds:0x4642b0
  42a257:	and    DWORD PTR ds:0x44f57c,0x0
  42a25e:	mov    eax,ds:0x44f578
  42a263:	test   eax,eax
  42a265:	je     0x42a271
  42a267:	push   eax
  42a268:	call   ebx
  42a26a:	and    DWORD PTR ds:0x44f578,0x0
  42a271:	cmp    BYTE PTR ds:0x448883,0x0
  42a278:	je     0x42a282
  42a27a:	push   0x1
  42a27c:	call   DWORD PTR ds:0x464388
  42a282:	mov    eax,DWORD PTR [ebp-0x60]
  42a285:	pop    esi
  42a286:	mov    ecx,DWORD PTR [ebp-0x4]
  42a289:	xor    ecx,ebp
  42a28b:	pop    ebx
  42a28c:	call   0x446dc7
  42a291:	leave  
  42a292:	ret    
  42a293:	push   0x1
  42a295:	push   0x0
  42a297:	call   DWORD PTR ds:0x4642e8
  42a29d:	push   0x8000
  42a2a2:	call   DWORD PTR ds:0x464388
  42a2a8:	int3   
  42a2a9:	push   ebp
  42a2aa:	mov    ebp,esp
  42a2ac:	mov    ecx,DWORD PTR [ebp+0x8]
  42a2af:	mov    eax,DWORD PTR [ecx]
  42a2b1:	cmp    DWORD PTR [eax],0x80000003
  42a2b7:	jne    0x42a2bd
  42a2b9:	xor    eax,eax
  42a2bb:	jmp    0x42a2ed
  42a2bd:	cmp    BYTE PTR ds:0x44e137,0x0
  42a2c4:	jne    0x42a2b9
  42a2c6:	mov    BYTE PTR ds:0x44e137,0x1
  42a2cd:	mov    DWORD PTR ds:0x448d94,0x41f214
  42a2d7:	mov    DWORD PTR ds:0x448d90,0x41f1dc
  42a2e1:	mov    BYTE PTR ds:0x448883,0x0
  42a2e8:	call   0x429ea3
  42a2ed:	pop    ebp
  42a2ee:	ret    0x4
  42a2f1:	push   ebp
  42a2f2:	mov    ebp,esp
  42a2f4:	push   ebx
  42a2f5:	mov    ebx,edx
  42a2f7:	cmp    ecx,0xc0000006
  42a2fd:	jne    0x42a34b
  42a2ff:	mov    eax,DWORD PTR [ebx]
  42a301:	mov    eax,DWORD PTR [eax+0x18]
  42a304:	cmp    eax,DWORD PTR ds:0x463854
  42a30a:	je     0x42a315
  42a30c:	mov    ds:0x463854,eax
  42a311:	xor    eax,eax
  42a313:	jmp    0x42a31a
  42a315:	mov    eax,ds:0x463858
  42a31a:	mov    ecx,eax
  42a31c:	inc    eax
  42a31d:	mov    ds:0x463858,eax
  42a322:	cmp    ecx,0x32
  42a325:	jae    0x42a34b
  42a327:	cmp    eax,0x1
  42a32a:	je     0x42a33b
  42a32c:	push   0xa
  42a32e:	xor    edx,edx
  42a330:	pop    ecx
  42a331:	div    ecx
  42a333:	test   edx,edx
  42a335:	je     0x42a33b
  42a337:	push   0x64
  42a339:	jmp    0x42a340
  42a33b:	push   0x3e8
  42a340:	call   DWORD PTR ds:0x4642ec
  42a346:	or     eax,0xffffffff
  42a349:	jmp    0x42a3a4
  42a34b:	cmp    BYTE PTR ds:0x44e143,0x0
  42a352:	jne    0x42a359
  42a354:	call   0x42c2dc
  42a359:	push   esi
  42a35a:	push   edi
  42a35b:	push   0x41e9c8
  42a360:	call   0x441da9
  42a365:	pop    ecx
  42a366:	call   0x441d8b
  42a36b:	mov    esi,DWORD PTR [ebx]
  42a36d:	mov    edi,DWORD PTR [ebp+0x8]
  42a370:	push   0x14
  42a372:	pop    ecx
  42a373:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a375:	mov    edi,DWORD PTR [ebp+0xc]
  42a378:	test   edi,edi
  42a37a:	je     0x42a386
  42a37c:	mov    esi,DWORD PTR [ebx+0x4]
  42a37f:	mov    ecx,0xb3
  42a384:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a386:	call   0x429d12
  42a38b:	pop    edi
  42a38c:	pop    esi
  42a38d:	test   al,al
  42a38f:	jne    0x42a399
  42a391:	push   ebx
  42a392:	call   0x42a2a9
  42a397:	jmp    0x42a3a4
  42a399:	xor    eax,eax
  42a39b:	cmp    BYTE PTR ds:0x44e137,al
  42a3a1:	sete   al
  42a3a4:	pop    ebx
  42a3a5:	pop    ebp
  42a3a6:	ret    0x8
  42a3a9:	push   0x58c
  42a3ae:	push   0x4476b8
  42a3b3:	call   0x447470
  42a3b8:	mov    edi,DWORD PTR [ebp+0xc]
  42a3bb:	mov    DWORD PTR [ebp-0x2a4],edi
  42a3c1:	xor    ebx,ebx
  42a3c3:	mov    DWORD PTR [ebp-0x4],ebx
  42a3c6:	push   0x1
  42a3c8:	call   DWORD PTR ds:0x4642f0
  42a3ce:	mov    esi,DWORD PTR ds:0x4643f0
  42a3d4:	call   esi
  42a3d6:	lea    ecx,[eax+0x40]
  42a3d9:	call   0x441d4c
  42a3de:	test   al,al
  42a3e0:	je     0x42a3e9
  42a3e2:	mov    BYTE PTR ds:0x462ba7,0x1
  42a3e9:	call   esi
  42a3eb:	lea    ecx,[eax+0x20]
  42a3ee:	call   0x441d4c
  42a3f3:	test   al,al
  42a3f5:	je     0x42a3fe
  42a3f7:	mov    BYTE PTR ds:0x4617e3,0x1
  42a3fe:	push   0x1
  42a400:	push   0x42a293
  42a405:	call   DWORD PTR ds:0x4642e8
  42a40b:	mov    DWORD PTR ds:0x45f9b4,0x44f534
  42a415:	push   0x42c89d
  42a41a:	push   0x2
  42a41c:	mov    esi,DWORD PTR ds:0x46438c
  42a422:	call   esi
  42a424:	push   0x42c89d
  42a429:	push   0xf
  42a42b:	call   esi
  42a42d:	add    esp,0x10
  42a430:	mov    ecx,DWORD PTR [edi]
  42a432:	call   0x43f48d
  42a437:	mov    ds:0x44f4fc,eax
  42a43c:	mov    DWORD PTR [ebp-0x288],0x3f
  42a446:	mov    DWORD PTR [ebp-0x29c],ebx
  42a44c:	mov    DWORD PTR [ebp-0x28c],ebx
  42a452:	mov    DWORD PTR [ebp-0x278],ebx
  42a458:	push   0x41ea20
  42a45d:	push   ebx
  42a45e:	lea    eax,[ebp-0x278]
  42a464:	push   eax
  42a465:	mov    edi,DWORD PTR ds:0x464390
  42a46b:	call   edi
  42a46d:	add    esp,0xc
  42a470:	mov    ecx,DWORD PTR [ebp-0x278]
  42a476:	test   ecx,ecx
  42a478:	je     0x42a4a6
  42a47a:	lea    eax,[ebp-0x28c]
  42a480:	push   eax
  42a481:	lea    eax,[ebp-0x29c]
  42a487:	push   eax
  42a488:	lea    edx,[ebp-0x288]
  42a48e:	call   0x42b89a
  42a493:	mov    esi,DWORD PTR ds:0x464354
  42a499:	test   al,al
  42a49b:	je     0x42a589
  42a4a1:	jmp    0x42a5b0
  42a4a6:	mov    esi,DWORD PTR ds:0x464354
  42a4ac:	mov    DWORD PTR [ebp-0x284],0x3f
  42a4b6:	mov    DWORD PTR [ebp-0x294],ebx
  42a4bc:	mov    DWORD PTR [ebp-0x290],ebx
  42a4c2:	push   0x41ea28
  42a4c7:	push   ebx
  42a4c8:	lea    eax,[ebp-0x278]
  42a4ce:	push   eax
  42a4cf:	call   edi
  42a4d1:	add    esp,0xc
  42a4d4:	mov    ecx,DWORD PTR [ebp-0x278]
  42a4da:	test   ecx,ecx
  42a4dc:	je     0x42a50e
  42a4de:	lea    eax,[ebp-0x290]
  42a4e4:	push   eax
  42a4e5:	lea    eax,[ebp-0x294]
  42a4eb:	push   eax
  42a4ec:	lea    edx,[ebp-0x284]
  42a4f2:	call   0x42b89a
  42a4f7:	push   DWORD PTR [ebp-0x278]
  42a4fd:	test   al,al
  42a4ff:	je     0x42a58f
  42a505:	call   esi
  42a507:	pop    ecx
  42a508:	mov    DWORD PTR [ebp-0x278],ebx
  42a50e:	mov    eax,DWORD PTR [ebp-0x29c]
  42a514:	mov    edx,DWORD PTR [ebp-0x294]
  42a51a:	lea    ecx,[edx+eax*1]
  42a51d:	add    ecx,DWORD PTR [ebp+0x8]
  42a520:	mov    DWORD PTR [ebp-0x2b0],ecx
  42a526:	mov    DWORD PTR [ebp-0x27c],ebx
  42a52c:	mov    DWORD PTR [ebp-0x298],ebx
  42a532:	test   eax,eax
  42a534:	jg     0x42a615
  42a53a:	cmp    DWORD PTR [ebp+0x8],0x1
  42a53e:	jg     0x42a615
  42a544:	test   edx,edx
  42a546:	jg     0x42a615
  42a54c:	push   0x41ea44
  42a551:	push   ebx
  42a552:	lea    eax,[ebp-0x278]
  42a558:	push   eax
  42a559:	call   edi
  42a55b:	add    esp,0xc
  42a55e:	mov    ecx,DWORD PTR [ebp-0x278]
  42a564:	test   ecx,ecx
  42a566:	je     0x42a97d
  42a56c:	lea    eax,[ebp-0x298]
  42a572:	push   eax
  42a573:	lea    eax,[ebp-0x27c]
  42a579:	push   eax
  42a57a:	lea    edx,[ebp-0x2b0]
  42a580:	call   0x42b89a
  42a585:	test   al,al
  42a587:	jne    0x42a5d1
  42a589:	push   DWORD PTR [ebp-0x278]
  42a58f:	call   esi
  42a591:	pop    ecx
  42a592:	mov    DWORD PTR [ebp-0x278],ebx
  42a598:	cmp    BYTE PTR ds:0x44e143,0x0
  42a59f:	jne    0x42a5a6
  42a5a1:	call   0x42c2dc
  42a5a6:	mov    ecx,0x3f6
  42a5ab:	call   0x42f124
  42a5b0:	cmp    DWORD PTR [ebp-0x278],0x0
  42a5b7:	je     0x42a4ac
  42a5bd:	push   DWORD PTR [ebp-0x278]
  42a5c3:	call   esi
  42a5c5:	pop    ecx
  42a5c6:	mov    DWORD PTR [ebp-0x278],ebx
  42a5cc:	jmp    0x42a4ac
  42a5d1:	push   DWORD PTR [ebp-0x278]
  42a5d7:	call   esi
  42a5d9:	pop    ecx
  42a5da:	mov    DWORD PTR [ebp-0x278],ebx
  42a5e0:	mov    ebx,DWORD PTR [ebp-0x27c]
  42a5e6:	test   ebx,ebx
  42a5e8:	je     0x42a981
  42a5ee:	mov    BYTE PTR ds:0x44e142,0x1
  42a5f5:	lea    eax,[ebx+0x5]
  42a5f8:	xor    ecx,ecx
  42a5fa:	push   0x4
  42a5fc:	pop    edx
  42a5fd:	mul    edx
  42a5ff:	seto   cl
  42a602:	neg    ecx
  42a604:	or     ecx,eax
  42a606:	call   0x43f45b
  42a60b:	mov    ds:0x44f524,eax
  42a610:	jmp    0x42a970
  42a615:	mov    eax,ecx
  42a617:	shl    eax,0x2
  42a61a:	push   eax
  42a61b:	push   ebx
  42a61c:	call   DWORD PTR ds:0x4643e8
  42a622:	pop    ecx
  42a623:	pop    ecx
  42a624:	mov    edi,eax
  42a626:	mov    DWORD PTR [ebp-0x280],edi
  42a62c:	test   edi,edi
  42a62e:	jne    0x42a63d
  42a630:	call   0x43f480
  42a635:	mov    edi,eax
  42a637:	mov    DWORD PTR [ebp-0x280],edi
  42a63d:	mov    DWORD PTR [ebp-0x298],edi
  42a643:	mov    ecx,ebx
  42a645:	mov    DWORD PTR [ebp-0x27c],ecx
  42a64b:	mov    edx,ebx
  42a64d:	mov    DWORD PTR [ebp-0x284],0x2f
  42a657:	mov    DWORD PTR [ebp-0x288],0x2d
  42a661:	mov    DWORD PTR [ebp-0x2a8],edx
  42a667:	cmp    edx,DWORD PTR [ebp-0x29c]
  42a66d:	jge    0x42a6ee
  42a66f:	mov    eax,DWORD PTR [ebp-0x28c]
  42a675:	mov    eax,DWORD PTR [eax+edx*4]
  42a678:	movzx  esi,WORD PTR [eax]
  42a67b:	mov    DWORD PTR [ebp-0x2b4],esi
  42a681:	cmp    si,WORD PTR [ebp-0x284]
  42a688:	mov    esi,DWORD PTR ds:0x464354
  42a68e:	je     0x42a6a2
  42a690:	push   0x2d
  42a692:	pop    edi
  42a693:	cmp    WORD PTR [ebp-0x2b4],di
  42a69a:	mov    edi,DWORD PTR [ebp-0x280]
  42a6a0:	jne    0x42a6de
  42a6a2:	push   0x6c
  42a6a4:	pop    esi
  42a6a5:	cmp    WORD PTR [eax+0x2],si
  42a6a9:	mov    esi,DWORD PTR ds:0x464354
  42a6af:	jne    0x42a6de
  42a6b1:	push   0x69
  42a6b3:	pop    esi
  42a6b4:	cmp    WORD PTR [eax+0x4],si
  42a6b8:	mov    esi,DWORD PTR ds:0x464354
  42a6be:	jne    0x42a6de
  42a6c0:	push   0x6e
  42a6c2:	pop    esi
  42a6c3:	cmp    WORD PTR [eax+0x6],si
  42a6c7:	mov    esi,DWORD PTR ds:0x464354
  42a6cd:	jne    0x42a6de
  42a6cf:	push   0x6b
  42a6d1:	pop    esi
  42a6d2:	cmp    WORD PTR [eax+0x8],si
  42a6d6:	mov    esi,DWORD PTR ds:0x464354
  42a6dc:	je     0x42a6ee
  42a6de:	mov    DWORD PTR [edi+ecx*4],eax
  42a6e1:	inc    ecx
  42a6e2:	mov    DWORD PTR [ebp-0x27c],ecx
  42a6e8:	inc    edx
  42a6e9:	jmp    0x42a661
  42a6ee:	xor    edx,edx
  42a6f0:	inc    edx
  42a6f1:	mov    DWORD PTR [ebp-0x2ac],edx
  42a6f7:	cmp    edx,DWORD PTR [ebp+0x8]
  42a6fa:	jge    0x42a751
  42a6fc:	mov    eax,DWORD PTR [ebp-0x2a4]
  42a702:	mov    eax,DWORD PTR [eax+edx*4]
  42a705:	movzx  edi,WORD PTR [eax]
  42a708:	cmp    di,WORD PTR [ebp-0x284]
  42a70f:	je     0x42a71a
  42a711:	cmp    di,WORD PTR [ebp-0x288]
  42a718:	jne    0x42a751
  42a71a:	push   0x6c
  42a71c:	pop    edi
  42a71d:	cmp    WORD PTR [eax+0x2],di
  42a721:	jne    0x42a73e
  42a723:	push   0x69
  42a725:	pop    edi
  42a726:	cmp    WORD PTR [eax+0x4],di
  42a72a:	jne    0x42a73e
  42a72c:	push   0x6e
  42a72e:	pop    edi
  42a72f:	cmp    WORD PTR [eax+0x6],di
  42a733:	jne    0x42a73e
  42a735:	push   0x6b
  42a737:	pop    edi
  42a738:	cmp    WORD PTR [eax+0x8],di
  42a73c:	je     0x42a751
  42a73e:	mov    edi,DWORD PTR [ebp-0x280]
  42a744:	mov    DWORD PTR [edi+ecx*4],eax
  42a747:	inc    ecx
  42a748:	mov    DWORD PTR [ebp-0x27c],ecx
  42a74e:	inc    edx
  42a74f:	jmp    0x42a6f1
  42a751:	mov    DWORD PTR [ebp-0x2a0],ebx
  42a757:	cmp    ebx,DWORD PTR [ebp-0x294]
  42a75d:	jge    0x42a7b4
  42a75f:	mov    eax,DWORD PTR [ebp-0x290]
  42a765:	mov    eax,DWORD PTR [eax+ebx*4]
  42a768:	movzx  edi,WORD PTR [eax]
  42a76b:	cmp    di,WORD PTR [ebp-0x284]
  42a772:	je     0x42a77d
  42a774:	cmp    di,WORD PTR [ebp-0x288]
  42a77b:	jne    0x42a7b4
  42a77d:	push   0x6c
  42a77f:	pop    edi
  42a780:	cmp    WORD PTR [eax+0x2],di
  42a784:	jne    0x42a7a1
  42a786:	push   0x69
  42a788:	pop    edi
  42a789:	cmp    WORD PTR [eax+0x4],di
  42a78d:	jne    0x42a7a1
  42a78f:	push   0x6e
  42a791:	pop    edi
  42a792:	cmp    WORD PTR [eax+0x6],di
  42a796:	jne    0x42a7a1
  42a798:	push   0x6b
  42a79a:	pop    edi
  42a79b:	cmp    WORD PTR [eax+0x8],di
  42a79f:	je     0x42a7b4
  42a7a1:	mov    edi,DWORD PTR [ebp-0x280]
  42a7a7:	mov    DWORD PTR [edi+ecx*4],eax
  42a7aa:	inc    ecx
  42a7ab:	mov    DWORD PTR [ebp-0x27c],ecx
  42a7b1:	inc    ebx
  42a7b2:	jmp    0x42a751
  42a7b4:	cmp    edx,DWORD PTR [ebp+0x8]
  42a7b7:	jge    0x42a814
  42a7b9:	mov    eax,DWORD PTR [ebp-0x2a4]
  42a7bf:	mov    eax,DWORD PTR [eax+edx*4]
  42a7c2:	movzx  edi,WORD PTR [eax]
  42a7c5:	cmp    di,WORD PTR [ebp-0x284]
  42a7cc:	je     0x42a7d7
  42a7ce:	cmp    di,WORD PTR [ebp-0x288]
  42a7d5:	jne    0x42a7fb
  42a7d7:	push   0x6c
  42a7d9:	pop    edi
  42a7da:	cmp    WORD PTR [eax+0x2],di
  42a7de:	jne    0x42a7fb
  42a7e0:	push   0x69
  42a7e2:	pop    edi
  42a7e3:	cmp    WORD PTR [eax+0x4],di
  42a7e7:	jne    0x42a7fb
  42a7e9:	push   0x6e
  42a7eb:	pop    edi
  42a7ec:	cmp    WORD PTR [eax+0x6],di
  42a7f0:	jne    0x42a7fb
  42a7f2:	push   0x6b
  42a7f4:	pop    edi
  42a7f5:	cmp    WORD PTR [eax+0x8],di
  42a7f9:	je     0x42a814
  42a7fb:	mov    edi,DWORD PTR [ebp-0x280]
  42a801:	mov    DWORD PTR [edi+ecx*4],eax
  42a804:	inc    ecx
  42a805:	mov    DWORD PTR [ebp-0x27c],ecx
  42a80b:	inc    edx
  42a80c:	mov    DWORD PTR [ebp-0x2ac],edx
  42a812:	jmp    0x42a7b4
  42a814:	cmp    ebx,DWORD PTR [ebp-0x294]
  42a81a:	jge    0x42a877
  42a81c:	mov    eax,DWORD PTR [ebp-0x290]
  42a822:	mov    eax,DWORD PTR [eax+ebx*4]
  42a825:	movzx  edi,WORD PTR [eax]
  42a828:	cmp    di,WORD PTR [ebp-0x284]
  42a82f:	je     0x42a83a
  42a831:	cmp    di,WORD PTR [ebp-0x288]
  42a838:	jne    0x42a85e
  42a83a:	push   0x6c
  42a83c:	pop    edi
  42a83d:	cmp    WORD PTR [eax+0x2],di
  42a841:	jne    0x42a85e
  42a843:	push   0x69
  42a845:	pop    edi
  42a846:	cmp    WORD PTR [eax+0x4],di
  42a84a:	jne    0x42a85e
  42a84c:	push   0x6e
  42a84e:	pop    edi
  42a84f:	cmp    WORD PTR [eax+0x6],di
  42a853:	jne    0x42a85e
  42a855:	push   0x6b
  42a857:	pop    edi
  42a858:	cmp    WORD PTR [eax+0x8],di
  42a85c:	je     0x42a877
  42a85e:	mov    edi,DWORD PTR [ebp-0x280]
  42a864:	mov    DWORD PTR [edi+ecx*4],eax
  42a867:	inc    ecx
  42a868:	mov    DWORD PTR [ebp-0x27c],ecx
  42a86e:	inc    ebx
  42a86f:	mov    DWORD PTR [ebp-0x2a0],ebx
  42a875:	jmp    0x42a814
  42a877:	mov    edi,DWORD PTR [ebp-0x2a8]
  42a87d:	cmp    edi,DWORD PTR [ebp-0x29c]
  42a883:	jge    0x42a8ad
  42a885:	mov    eax,DWORD PTR [ebp-0x28c]
  42a88b:	mov    eax,DWORD PTR [eax+edi*4]
  42a88e:	mov    esi,DWORD PTR [ebp-0x280]
  42a894:	mov    DWORD PTR [esi+ecx*4],eax
  42a897:	inc    ecx
  42a898:	mov    DWORD PTR [ebp-0x27c],ecx
  42a89e:	mov    esi,DWORD PTR ds:0x464354
  42a8a4:	inc    edi
  42a8a5:	mov    DWORD PTR [ebp-0x2a8],edi
  42a8ab:	jmp    0x42a87d
  42a8ad:	mov    edi,DWORD PTR [ebp-0x280]
  42a8b3:	cmp    edx,DWORD PTR [ebp+0x8]
  42a8b6:	jge    0x42a8d4
  42a8b8:	mov    eax,DWORD PTR [ebp-0x2a4]
  42a8be:	mov    eax,DWORD PTR [eax+edx*4]
  42a8c1:	mov    DWORD PTR [edi+ecx*4],eax
  42a8c4:	inc    ecx
  42a8c5:	mov    DWORD PTR [ebp-0x27c],ecx
  42a8cb:	inc    edx
  42a8cc:	mov    DWORD PTR [ebp-0x2ac],edx
  42a8d2:	jmp    0x42a8b3
  42a8d4:	cmp    ebx,DWORD PTR [ebp-0x294]
  42a8da:	jge    0x42a8f8
  42a8dc:	mov    eax,DWORD PTR [ebp-0x290]
  42a8e2:	mov    eax,DWORD PTR [eax+ebx*4]
  42a8e5:	mov    DWORD PTR [edi+ecx*4],eax
  42a8e8:	inc    ecx
  42a8e9:	mov    DWORD PTR [ebp-0x27c],ecx
  42a8ef:	inc    ebx
  42a8f0:	mov    DWORD PTR [ebp-0x2a0],ebx
  42a8f6:	jmp    0x42a8d4
  42a8f8:	cmp    DWORD PTR [ebp-0x28c],0x0
  42a8ff:	je     0x42a90a
  42a901:	push   DWORD PTR [ebp-0x28c]
  42a907:	call   esi
  42a909:	pop    ecx
  42a90a:	mov    eax,DWORD PTR [ebp-0x290]
  42a910:	test   eax,eax
  42a912:	je     0x42a918
  42a914:	push   eax
  42a915:	call   esi
  42a917:	pop    ecx
  42a918:	lea    eax,[ebp-0x298]
  42a91e:	push   eax
  42a91f:	lea    edx,[ebp-0x27c]
  42a925:	lea    ecx,[ebp-0x2b0]
  42a92b:	call   0x42ab87
  42a930:	mov    ebx,DWORD PTR [ebp-0x27c]
  42a936:	test   ebx,ebx
  42a938:	je     0x42a981
  42a93a:	lea    eax,[ebx+0x5]
  42a93d:	xor    ecx,ecx
  42a93f:	push   0x4
  42a941:	pop    edx
  42a942:	mul    edx
  42a944:	seto   cl
  42a947:	neg    ecx
  42a949:	or     ecx,eax
  42a94b:	call   0x43f45b
  42a950:	mov    ds:0x44f524,eax
  42a955:	mov    ecx,DWORD PTR ds:0x44f528
  42a95b:	mov    DWORD PTR [eax+ecx*4],0x41ea34
  42a962:	inc    ecx
  42a963:	mov    DWORD PTR ds:0x44f528,ecx
  42a969:	add    DWORD PTR ds:0x44f520,0x8
  42a970:	mov    edx,DWORD PTR [ebp-0x298]
  42a976:	mov    ecx,ebx
  42a978:	call   0x42ba5c
  42a97d:	test   ebx,ebx
  42a97f:	jne    0x42a986
  42a981:	call   0x42c332
  42a986:	cmp    BYTE PTR ds:0x448877,0x0
  42a98d:	je     0x42a9d9
  42a98f:	cmp    DWORD PTR ds:0x44e4e4,0x0
  42a996:	jne    0x42a9b9
  42a998:	cmp    BYTE PTR ds:0x44e4c2,0x0
  42a99f:	jne    0x42a9af
  42a9a1:	cmp    BYTE PTR ds:0x44e143,0x0
  42a9a8:	jne    0x42a9af
  42a9aa:	call   0x42c2dc
  42a9af:	mov    ecx,0x3f9
  42a9b4:	call   0x42f124
  42a9b9:	cmp    BYTE PTR ds:0x44e4c0,0x0
  42a9c0:	jne    0x42a9fb
  42a9c2:	cmp    BYTE PTR ds:0x44f548,0x0
  42a9c9:	jne    0x42a9fb
  42a9cb:	cmp    BYTE PTR ds:0x44f551,0x0
  42a9d2:	jne    0x42a9fb
  42a9d4:	call   0x42c58b
  42a9d9:	mov    eax,ds:0x44e4c4
  42a9de:	test   eax,eax
  42a9e0:	je     0x42a9ea
  42a9e2:	push   eax
  42a9e3:	call   DWORD PTR ds:0x46449c
  42a9e9:	pop    ecx
  42a9ea:	mov    eax,ds:0x44e4d0
  42a9ef:	test   eax,eax
  42a9f1:	je     0x42a9fb
  42a9f3:	push   eax
  42a9f4:	call   DWORD PTR ds:0x46449c
  42a9fa:	pop    ecx
  42a9fb:	cmp    BYTE PTR ds:0x44e143,0x0
  42aa02:	jne    0x42ab6f
  42aa08:	call   0x42c2dc
  42aa0d:	jmp    0x42ab6f
  42aa12:	mov    edx,DWORD PTR [ebp-0x14]
  42aa15:	mov    eax,DWORD PTR [edx]
  42aa17:	lea    ecx,[ebp-0x59c]
  42aa1d:	push   ecx
  42aa1e:	lea    ecx,[ebp-0x274]
  42aa24:	push   ecx
  42aa25:	mov    ecx,DWORD PTR [eax]
  42aa27:	call   0x42a2f1
  42aa2c:	ret    
  42aa2d:	mov    esp,DWORD PTR [ebp-0x18]
  42aa30:	push   DWORD PTR [ebp-0x268]
  42aa36:	push   DWORD PTR [ebp-0x270]
  42aa3c:	push   DWORD PTR [ebp-0x274]
  42aa42:	push   0x41ea60
  42aa47:	call   0x441da9
  42aa4c:	add    esp,0x10
  42aa4f:	push   0x1c
  42aa51:	lea    eax,[ebp-0x2d0]
  42aa57:	push   eax
  42aa58:	push   DWORD PTR [ebp-0x268]
  42aa5e:	call   DWORD PTR ds:0x4642f4
  42aa64:	test   eax,eax
  42aa66:	je     0x42aa9e
  42aa68:	push   0x104
  42aa6d:	lea    eax,[ebp-0x224]
  42aa73:	push   eax
  42aa74:	push   DWORD PTR [ebp-0x2cc]
  42aa7a:	call   DWORD PTR ds:0x4642f8
  42aa80:	test   eax,eax
  42aa82:	je     0x42aa9e
  42aa84:	lea    eax,[ebp-0x224]
  42aa8a:	push   eax
  42aa8b:	push   DWORD PTR [ebp-0x2cc]
  42aa91:	push   0x41eb5c
  42aa96:	call   0x441da9
  42aa9b:	add    esp,0xc
  42aa9e:	mov    edi,DWORD PTR [ebp-0x264]
  42aaa4:	push   edi
  42aaa5:	push   0x41eb78
  42aaaa:	call   0x441da9
  42aaaf:	pop    ecx
  42aab0:	pop    ecx
  42aab1:	xor    ebx,ebx
  42aab3:	mov    esi,ebx
  42aab5:	test   edi,edi
  42aab7:	je     0x42aad3
  42aab9:	push   DWORD PTR [ebp+esi*4-0x260]
  42aac0:	push   esi
  42aac1:	push   0x41ebc0
  42aac6:	call   0x441da9
  42aacb:	add    esp,0xc
  42aace:	inc    esi
  42aacf:	cmp    esi,edi
  42aad1:	jb     0x42aab9
  42aad3:	push   DWORD PTR [ebp-0x584]
  42aad9:	push   DWORD PTR [ebp-0x590]
  42aadf:	push   DWORD PTR [ebp-0x588]
  42aae5:	push   DWORD PTR [ebp-0x594]
  42aaeb:	push   DWORD PTR [ebp-0x58c]
  42aaf1:	push   DWORD PTR [ebp-0x598]
  42aaf7:	push   DWORD PTR [ebp-0x510]
  42aafd:	push   DWORD PTR [ebp-0x50c]
  42ab03:	push   DWORD PTR [ebp-0x508]
  42ab09:	push   DWORD PTR [ebp-0x4d4]
  42ab0f:	push   DWORD PTR [ebp-0x504]
  42ab15:	push   DWORD PTR [ebp-0x4e0]
  42ab1b:	push   DWORD PTR [ebp-0x4dc]
  42ab21:	push   DWORD PTR [ebp-0x4e4]
  42ab27:	push   DWORD PTR [ebp-0x500]
  42ab2d:	push   DWORD PTR [ebp-0x4f4]
  42ab33:	push   DWORD PTR [ebp-0x4fc]
  42ab39:	push   DWORD PTR [ebp-0x4f0]
  42ab3f:	push   DWORD PTR [ebp-0x4e8]
  42ab45:	push   DWORD PTR [ebp-0x4f8]
  42ab4b:	push   DWORD PTR [ebp-0x4d8]
  42ab51:	push   DWORD PTR [ebp-0x4ec]
  42ab57:	push   0x41ec08
  42ab5c:	call   0x441da9
  42ab61:	add    esp,0x5c
  42ab64:	call   0x441d8b
  42ab69:	mov    BYTE PTR ds:0x448877,bl
  42ab6f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  42ab76:	xor    eax,eax
  42ab78:	cmp    BYTE PTR ds:0x448877,al
  42ab7e:	sete   al
  42ab81:	call   0x4474b8
  42ab86:	ret    
  42ab87:	push   ebp
  42ab88:	mov    ebp,esp
  42ab8a:	sub    esp,0x1c
  42ab8d:	push   ebx
  42ab8e:	push   esi
  42ab8f:	push   edi
  42ab90:	mov    edi,DWORD PTR [ebp+0x8]
  42ab93:	mov    ebx,edx
  42ab95:	mov    edi,DWORD PTR [edi]
  42ab97:	mov    esi,DWORD PTR [ebx]
  42ab99:	mov    DWORD PTR [ebp-0x18],ecx
  42ab9c:	mov    DWORD PTR [ebp-0x1c],ebx
  42ab9f:	xor    cl,cl
  42aba1:	jmp    0x42ad50
  42aba6:	dec    esi
  42aba7:	mov    DWORD PTR [ebp-0x14],esi
  42abaa:	mov    eax,DWORD PTR [edi+esi*4]
  42abad:	cmp    WORD PTR [eax],0x40
  42abb1:	jne    0x42ad50
  42abb7:	test   cl,cl
  42abb9:	je     0x42abcc
  42abbb:	mov    ecx,0x2338
  42abc0:	call   0x42eb12
  42abc5:	mov    ecx,eax
  42abc7:	call   0x42c37a
  42abcc:	mov    ebx,DWORD PTR [ebx]
  42abce:	sub    ebx,esi
  42abd0:	mov    BYTE PTR [ebp-0x2],0x1
  42abd4:	dec    ebx
  42abd5:	je     0x42ac05
  42abd7:	xor    ecx,ecx
  42abd9:	push   0x4
  42abdb:	pop    edx
  42abdc:	mov    eax,ebx
  42abde:	mul    edx
  42abe0:	seto   cl
  42abe3:	neg    ecx
  42abe5:	or     ecx,eax
  42abe7:	call   0x43f45b
  42abec:	mov    ecx,ebx
  42abee:	shl    ecx,0x2
  42abf1:	push   ecx
  42abf2:	lea    ecx,[esi+0x1]
  42abf5:	mov    DWORD PTR [ebp-0x10],eax
  42abf8:	lea    ecx,[edi+ecx*4]
  42abfb:	push   ecx
  42abfc:	push   eax
  42abfd:	call   0x447646
  42ac02:	add    esp,0xc
  42ac05:	mov    edi,DWORD PTR [edi+esi*4]
  42ac08:	add    edi,0x2
  42ac0b:	mov    edx,edi
  42ac0d:	mov    cl,0x1
  42ac0f:	call   0x429a78
  42ac14:	mov    DWORD PTR [ebp-0x8],eax
  42ac17:	cmp    eax,0xffffffff
  42ac1a:	je     0x42ad6b
  42ac20:	lea    ecx,[ebp-0xc]
  42ac23:	push   ecx
  42ac24:	push   0x2
  42ac26:	xor    edx,edx
  42ac28:	mov    ecx,eax
  42ac2a:	call   0x429a41
  42ac2f:	test   eax,eax
  42ac31:	jne    0x42ad5f
  42ac37:	mov    ecx,DWORD PTR [ebp-0xc]
  42ac3a:	add    ecx,0x2
  42ac3d:	call   0x43f45b
  42ac42:	mov    ecx,DWORD PTR [ebp-0x8]
  42ac45:	push   0x0
  42ac47:	push   0x0
  42ac49:	xor    edx,edx
  42ac4b:	mov    esi,eax
  42ac4d:	call   0x429a41
  42ac52:	call   DWORD PTR ds:0x46435c
  42ac58:	push   DWORD PTR [ebp-0xc]
  42ac5b:	and    DWORD PTR [eax],0x0
  42ac5e:	push   esi
  42ac5f:	push   DWORD PTR [ebp-0x8]
  42ac62:	call   DWORD PTR ds:0x464360
  42ac68:	add    esp,0xc
  42ac6b:	call   DWORD PTR ds:0x46435c
  42ac71:	cmp    DWORD PTR [eax],0x0
  42ac74:	jne    0x42ad5f
  42ac7a:	mov    ecx,DWORD PTR [ebp-0x8]
  42ac7d:	call   0x429b2c
  42ac82:	mov    eax,DWORD PTR [ebp-0xc]
  42ac85:	xor    ecx,ecx
  42ac87:	mov    WORD PTR [esi+eax*1],cx
  42ac8b:	mov    al,BYTE PTR [esi]
  42ac8d:	mov    BYTE PTR [ebp-0x1],cl
  42ac90:	cmp    al,0xff
  42ac92:	jne    0x42ac9f
  42ac94:	cmp    BYTE PTR [esi+0x1],0xfe
  42ac98:	jne    0x42ac9f
  42ac9a:	lea    edi,[esi+0x2]
  42ac9d:	jmp    0x42acc6
  42ac9f:	cmp    al,0xef
  42aca1:	jne    0x42acb9
  42aca3:	cmp    BYTE PTR [esi+0x1],0xbb
  42aca7:	jne    0x42acb9
  42aca9:	cmp    BYTE PTR [esi+0x2],0xbf
  42acad:	jne    0x42acb9
  42acaf:	lea    ecx,[esi+0x3]
  42acb2:	call   0x43f6d8
  42acb7:	jmp    0x42acc0
  42acb9:	mov    ecx,esi
  42acbb:	call   0x43f651
  42acc0:	mov    BYTE PTR [ebp-0x1],0x1
  42acc4:	mov    edi,eax
  42acc6:	push   DWORD PTR [ebp+0x8]
  42acc9:	mov    edx,DWORD PTR [ebp-0x18]
  42accc:	lea    eax,[ebp-0x14]
  42accf:	push   eax
  42acd0:	mov    ecx,edi
  42acd2:	call   0x42b89a
  42acd7:	cmp    BYTE PTR [ebp-0x1],0x0
  42acdb:	je     0x42ace5
  42acdd:	push   edi
  42acde:	call   DWORD PTR ds:0x464354
  42ace4:	pop    ecx
  42ace5:	push   esi
  42ace6:	call   DWORD PTR ds:0x464354
  42acec:	mov    esi,DWORD PTR [ebp-0x14]
  42acef:	pop    ecx
  42acf0:	test   ebx,ebx
  42acf2:	je     0x42ad40
  42acf4:	mov    ecx,DWORD PTR [ebp-0x18]
  42acf7:	lea    eax,[ebx+esi*1]
  42acfa:	mov    DWORD PTR [ecx],eax
  42acfc:	shl    eax,0x2
  42acff:	push   eax
  42ad00:	mov    eax,DWORD PTR [ebp+0x8]
  42ad03:	push   DWORD PTR [eax]
  42ad05:	call   DWORD PTR ds:0x4643e8
  42ad0b:	mov    edi,eax
  42ad0d:	pop    ecx
  42ad0e:	pop    ecx
  42ad0f:	test   edi,edi
  42ad11:	jne    0x42ad1d
  42ad13:	mov    ecx,0x3ec
  42ad18:	call   0x42f124
  42ad1d:	mov    eax,DWORD PTR [ebp+0x8]
  42ad20:	mov    ecx,ebx
  42ad22:	shl    ecx,0x2
  42ad25:	push   ecx
  42ad26:	push   DWORD PTR [ebp-0x10]
  42ad29:	mov    DWORD PTR [eax],edi
  42ad2b:	lea    eax,[edi+esi*4]
  42ad2e:	push   eax
  42ad2f:	call   0x447646
  42ad34:	push   DWORD PTR [ebp-0x10]
  42ad37:	call   DWORD PTR ds:0x464354
  42ad3d:	add    esp,0x10
  42ad40:	mov    eax,DWORD PTR [ebp+0x8]
  42ad43:	mov    cl,BYTE PTR [ebp-0x2]
  42ad46:	mov    edi,DWORD PTR [eax]
  42ad48:	lea    eax,[ebx+esi*1]
  42ad4b:	mov    ebx,DWORD PTR [ebp-0x1c]
  42ad4e:	mov    DWORD PTR [ebx],eax
  42ad50:	test   esi,esi
  42ad52:	jne    0x42aba6
  42ad58:	pop    edi
  42ad59:	pop    esi
  42ad5a:	pop    ebx
  42ad5b:	leave  
  42ad5c:	ret    0x4
  42ad5f:	mov    edx,edi
  42ad61:	mov    ecx,0x3eb
  42ad66:	call   0x42f1c0
  42ad6b:	mov    edx,edi
  42ad6d:	mov    ecx,0x3e8
  42ad72:	jmp    0x42ad66
  42ad74:	push   ebp
  42ad75:	mov    ebp,esp
  42ad77:	push   ecx
  42ad78:	push   ecx
  42ad79:	push   ebx
  42ad7a:	push   esi
  42ad7b:	push   edi
  42ad7c:	mov    edi,ecx
  42ad7e:	mov    ecx,DWORD PTR ds:0x45f884
  42ad84:	xor    ebx,ebx
  42ad86:	mov    DWORD PTR [ebp-0x4],ebx
  42ad89:	test   ecx,ecx
  42ad8b:	je     0x42ad98
  42ad8d:	call   0x433eae
  42ad92:	mov    DWORD PTR ds:0x45f884,ebx
  42ad98:	mov    ecx,DWORD PTR ds:0x44f574
  42ad9e:	test   ecx,ecx
  42ada0:	je     0x42adad
  42ada2:	call   0x433eae
  42ada7:	mov    DWORD PTR ds:0x44f574,ebx
  42adad:	mov    ecx,DWORD PTR ds:0x45f9b0
  42adb3:	test   ecx,ecx
  42adb5:	je     0x42adc2
  42adb7:	call   0x433eae
  42adbc:	mov    DWORD PTR ds:0x45f9b0,ebx
  42adc2:	mov    ecx,DWORD PTR ds:0x460e80
  42adc8:	test   ecx,ecx
  42adca:	je     0x42add9
  42adcc:	mov    esi,DWORD PTR [ecx]
  42adce:	call   0x433eae
  42add3:	mov    ecx,esi
  42add5:	test   esi,esi
  42add7:	jne    0x42adcc
  42add9:	cmp    BYTE PTR ds:0x448877,bl
  42addf:	mov    ebx,DWORD PTR ds:0x44f524
  42ade5:	mov    ecx,DWORD PTR ds:0x44f528
  42adeb:	mov    edx,DWORD PTR ds:0x44f520
  42adf1:	jne    0x42adfe
  42adf3:	mov    DWORD PTR [ebx+ecx*4],0x41ee70
  42adfa:	inc    ecx
  42adfb:	add    edx,0x3
  42adfe:	mov    DWORD PTR [ebx+ecx*4],0x41ee78
  42ae05:	mov    DWORD PTR [ebx+ecx*4+0x4],edi
  42ae09:	add    ecx,0x2
  42ae0c:	mov    DWORD PTR ds:0x44f528,ecx
  42ae12:	lea    esi,[edi+0x2]
  42ae15:	mov    ax,WORD PTR [edi]
  42ae18:	add    edi,0x2
  42ae1b:	cmp    ax,WORD PTR [ebp-0x4]
  42ae1f:	jne    0x42ae15
  42ae21:	sub    edi,esi
  42ae23:	mov    esi,DWORD PTR ds:0x44f530
  42ae29:	sar    edi,1
  42ae2b:	lea    eax,[edi+0x5]
  42ae2e:	mov    edi,DWORD PTR ds:0x44f52c
  42ae34:	add    eax,edx
  42ae36:	dec    esi
  42ae37:	add    edi,0x4
  42ae3a:	mov    ds:0x44f520,eax
  42ae3f:	mov    DWORD PTR ds:0x44f530,esi
  42ae45:	mov    DWORD PTR ds:0x44f52c,edi
  42ae4b:	test   esi,esi
  42ae4d:	jle    0x42ae95
  42ae4f:	mov    eax,DWORD PTR [edi]
  42ae51:	mov    DWORD PTR [ebx+ecx*4],eax
  42ae54:	mov    edx,DWORD PTR [edi]
  42ae56:	inc    ecx
  42ae57:	lea    eax,[edx+0x2]
  42ae5a:	mov    DWORD PTR [ebp-0x8],eax
  42ae5d:	mov    ax,WORD PTR [edx]
  42ae60:	add    edx,0x2
  42ae63:	cmp    ax,WORD PTR [ebp-0x4]
  42ae67:	jne    0x42ae5d
  42ae69:	sub    edx,DWORD PTR [ebp-0x8]
  42ae6c:	mov    eax,ds:0x44f520
  42ae71:	sar    edx,1
  42ae73:	inc    eax
  42ae74:	add    eax,edx
  42ae76:	dec    esi
  42ae77:	add    edi,0x4
  42ae7a:	mov    ds:0x44f520,eax
  42ae7f:	test   esi,esi
  42ae81:	jg     0x42ae4f
  42ae83:	mov    DWORD PTR ds:0x44f528,ecx
  42ae89:	mov    DWORD PTR ds:0x44f530,esi
  42ae8f:	mov    DWORD PTR ds:0x44f52c,edi
  42ae95:	push   0x41e5a8
  42ae9a:	push   0x41ea20
  42ae9f:	call   DWORD PTR ds:0x464398
  42aea5:	mov    eax,ds:0x44f520
  42aeaa:	pop    ecx
  42aeab:	pop    ecx
  42aeac:	xor    ecx,ecx
  42aeae:	push   0x2
  42aeb0:	inc    eax
  42aeb1:	pop    edx
  42aeb2:	mul    edx
  42aeb4:	seto   cl
  42aeb7:	neg    ecx
  42aeb9:	or     ecx,eax
  42aebb:	call   0x43f45b
  42aec0:	xor    edi,edi
  42aec2:	mov    ebx,edi
  42aec4:	mov    DWORD PTR [ebp-0x4],eax
  42aec7:	mov    esi,eax
  42aec9:	cmp    DWORD PTR ds:0x44f528,ebx
  42aecf:	jle    0x42af40
  42aed1:	mov    ecx,DWORD PTR ds:0x44f520
  42aed7:	mov    edi,esi
  42aed9:	sub    edi,eax
  42aedb:	sar    edi,1
  42aedd:	lea    eax,[ecx+0x1]
  42aee0:	cmp    edi,eax
  42aee2:	jb     0x42aef4
  42aee4:	mov    ecx,0x3f8
  42aee9:	call   0x42f124
  42aeee:	mov    ecx,DWORD PTR ds:0x44f520
  42aef4:	mov    eax,ds:0x44f524
  42aef9:	sub    ecx,edi
  42aefb:	push   DWORD PTR [eax+ebx*4]
  42aefe:	inc    ecx
  42aeff:	push   ecx
  42af00:	push   esi
  42af01:	call   DWORD PTR ds:0x46439c
  42af07:	mov    eax,ds:0x44f524
  42af0c:	add    esp,0xc
  42af0f:	mov    ecx,DWORD PTR [eax+ebx*4]
  42af12:	xor    edi,edi
  42af14:	lea    edx,[ecx+0x2]
  42af17:	mov    ax,WORD PTR [ecx]
  42af1a:	add    ecx,0x2
  42af1d:	cmp    ax,di
  42af20:	jne    0x42af17
  42af22:	sub    ecx,edx
  42af24:	sar    ecx,1
  42af26:	push   0x20
  42af28:	pop    eax
  42af29:	lea    esi,[esi+ecx*2]
  42af2c:	push   0x2
  42af2e:	mov    WORD PTR [esi],ax
  42af31:	pop    eax
  42af32:	add    esi,eax
  42af34:	mov    eax,DWORD PTR [ebp-0x4]
  42af37:	inc    ebx
  42af38:	cmp    ebx,DWORD PTR ds:0x44f528
  42af3e:	jl     0x42aed1
  42af40:	push   eax
  42af41:	xor    ecx,ecx
  42af43:	push   0x41ea44
  42af48:	mov    WORD PTR [esi-0x2],cx
  42af4c:	call   DWORD PTR ds:0x464398
  42af52:	pop    ecx
  42af53:	pop    ecx
  42af54:	test   eax,eax
  42af56:	je     0x42af62
  42af58:	mov    ecx,0x3ec
  42af5d:	call   0x42f124
  42af62:	mov    eax,ds:0x46437c
  42af67:	push   edi
  42af68:	push   edi
  42af69:	push   DWORD PTR ds:0x44f4fc
  42af6f:	push   DWORD PTR [eax]
  42af71:	push   edi
  42af72:	call   DWORD PTR ds:0x4643a0
  42af78:	add    esp,0x14
  42af7b:	push   eax
  42af7c:	call   DWORD PTR ds:0x464388
  42af82:	int3   
  42af83:	push   ebp
  42af84:	mov    ebp,esp
  42af86:	cmp    BYTE PTR ds:0x44e05b,0x0
  42af8d:	mov    ecx,DWORD PTR [ebp+0xc]
  42af90:	jne    0x42b059
  42af96:	push   ebx
  42af97:	call   0x42b48c
  42af9c:	call   0x446716
  42afa1:	call   0x435b51
  42afa6:	push   DWORD PTR ds:0x44e4c4
  42afac:	push   0x4489f0
  42afb1:	call   0x42c3aa
  42afb6:	mov    ecx,DWORD PTR ds:0x45f884
  42afbc:	xor    ebx,ebx
  42afbe:	test   ecx,ecx
  42afc0:	je     0x42afcd
  42afc2:	call   0x433eae
  42afc7:	mov    DWORD PTR ds:0x45f884,ebx
  42afcd:	cmp    BYTE PTR ds:0x44e047,bl
  42afd3:	je     0x42afeb
  42afd5:	call   0x4466c6
  42afda:	mov    ecx,DWORD PTR ds:0x44f574
  42afe0:	call   0x433eae
  42afe5:	mov    DWORD PTR ds:0x44f574,ebx
  42afeb:	cmp    BYTE PTR ds:0x44e00b,bl
  42aff1:	je     0x42b025
  42aff3:	cmp    BYTE PTR ds:0x44887b,bl
  42aff9:	je     0x42b000
  42affb:	call   0x43b42b
  42b000:	call   0x43a7d2
  42b005:	mov    eax,ds:0x4632f4
  42b00a:	sub    eax,DWORD PTR ds:0x4632f0
  42b010:	mov    ecx,DWORD PTR ds:0x45f9b0
  42b016:	mov    WORD PTR [ecx+0x3a],ax
  42b01a:	call   0x433eae
  42b01f:	mov    DWORD PTR ds:0x45f9b0,ebx
  42b025:	mov    ecx,DWORD PTR ds:0x44e4bc
  42b02b:	call   0x433eae
  42b030:	mov    DWORD PTR ds:0x44e4bc,ebx
  42b036:	cmp    DWORD PTR ds:0x45f880,ebx
  42b03c:	jne    0x42b04e
  42b03e:	cmp    DWORD PTR ds:0x45f9ac,ebx
  42b044:	je     0x42b054
  42b046:	cmp    BYTE PTR ds:0x44e4c3,bl
  42b04c:	je     0x42b054
  42b04e:	mov    BYTE PTR ds:0x448877,bl
  42b054:	pop    ebx
  42b055:	pop    ebp
  42b056:	ret    0x8
  42b059:	call   0x42ad74
  42b05e:	int3   
  42b05f:	push   ebp
  42b060:	mov    ebp,esp
  42b062:	push   ecx
  42b063:	push   ebx
  42b064:	xor    ebx,ebx
  42b066:	push   esi
  42b067:	cmp    BYTE PTR ds:0x44f4fb,bl
  42b06d:	jne    0x42b0e0
  42b06f:	push   0x41ee80
  42b074:	lea    eax,[ebp-0x4]
  42b077:	push   ebx
  42b078:	push   eax
  42b079:	mov    DWORD PTR [ebp-0x4],ebx
  42b07c:	call   DWORD PTR ds:0x464390
  42b082:	mov    eax,DWORD PTR [ebp-0x4]
  42b085:	add    esp,0xc
  42b088:	test   eax,eax
  42b08a:	je     0x42b0d8
  42b08c:	mov    esi,eax
  42b08e:	cmp    WORD PTR [eax],bx
  42b091:	je     0x42b0a1
  42b093:	cmp    WORD PTR [esi],0x3b
  42b097:	je     0x42b0a1
  42b099:	add    esi,0x2
  42b09c:	cmp    WORD PTR [esi],bx
  42b09f:	jne    0x42b093
  42b0a1:	cmp    WORD PTR [esi],bx
  42b0a4:	push   eax
  42b0a5:	setne  bl
  42b0a8:	xor    ecx,ecx
  42b0aa:	push   0x448ba0
  42b0af:	mov    WORD PTR [esi],cx
  42b0b2:	call   0x42c3aa
  42b0b7:	inc    DWORD PTR ds:0x44f544
  42b0bd:	movzx  eax,bl
  42b0c0:	mov    WORD PTR [esi],ax
  42b0c3:	lea    eax,[esi+0x2]
  42b0c6:	test   bl,bl
  42b0c8:	je     0x42b0d3
  42b0ca:	xor    ebx,ebx
  42b0cc:	cmp    WORD PTR [eax],bx
  42b0cf:	jne    0x42b08c
  42b0d1:	jmp    0x42b0d5
  42b0d3:	xor    ebx,ebx
  42b0d5:	mov    eax,DWORD PTR [ebp-0x4]
  42b0d8:	push   eax
  42b0d9:	call   DWORD PTR ds:0x464354
  42b0df:	pop    ecx
  42b0e0:	cmp    BYTE PTR ds:0x44e4c2,0x0
  42b0e7:	je     0x42b0f2
  42b0e9:	mov    BYTE PTR ds:0x44e143,0x1
  42b0f0:	jmp    0x42b100
  42b0f2:	cmp    BYTE PTR ds:0x44e143,0x0
  42b0f9:	jne    0x42b100
  42b0fb:	call   0x42c2dc
  42b100:	cmp    DWORD PTR ds:0x44f518,0x0
  42b107:	mov    dl,BYTE PTR ds:0x44e00b
  42b10d:	setne  al
  42b110:	or     dl,al
  42b112:	mov    BYTE PTR ds:0x44e00b,dl
  42b118:	jne    0x42b130
  42b11a:	mov    cl,bl
  42b11c:	mov    BYTE PTR ds:0x44f54d,cl
  42b122:	mov    BYTE PTR ds:0x44f54f,bl
  42b128:	mov    BYTE PTR ds:0x44f54c,bl
  42b12e:	jmp    0x42b147
  42b130:	mov    al,ds:0x44f54c
  42b135:	or     BYTE PTR ds:0x44f54f,al
  42b13b:	or     BYTE PTR ds:0x44f54a,al
  42b141:	mov    cl,BYTE PTR ds:0x44f54d
  42b147:	mov    ah,BYTE PTR ds:0x44f551
  42b14d:	mov    bl,BYTE PTR ds:0x44e02f
  42b153:	mov    al,ah
  42b155:	or     al,cl
  42b157:	cmp    DWORD PTR ds:0x44f510,0x0
  42b15e:	mov    cl,BYTE PTR ds:0x44e047
  42b164:	mov    ds:0x44f54e,al
  42b169:	setne  al
  42b16c:	or     al,BYTE PTR ds:0x44f549
  42b172:	or     bl,BYTE PTR ds:0x44e042
  42b178:	or     cl,al
  42b17a:	mov    BYTE PTR ds:0x44e047,cl
  42b180:	mov    BYTE PTR ds:0x44e02f,bl
  42b186:	test   cl,cl
  42b188:	jne    0x42b192
  42b18a:	test   dl,dl
  42b18c:	jne    0x42b192
  42b18e:	xor    al,al
  42b190:	jmp    0x42b194
  42b192:	mov    al,0x1
  42b194:	mov    ds:0x44f54b,al
  42b199:	test   bl,bl
  42b19b:	jne    0x42b1a7
  42b19d:	mov    BYTE PTR ds:0x44e043,bl
  42b1a3:	test   al,al
  42b1a5:	je     0x42b1ae
  42b1a7:	mov    BYTE PTR ds:0x44e043,0x1
  42b1ae:	mov    al,ds:0x44f548
  42b1b3:	or     BYTE PTR ds:0x44e05a,dl
  42b1b9:	or     al,ah
  42b1bb:	or     BYTE PTR ds:0x44e4c0,al
  42b1c1:	push   0x9
  42b1c3:	mov    esi,0x4489a0
  42b1c8:	push   esi
  42b1c9:	mov    ds:0x44f548,al
  42b1ce:	call   DWORD PTR ds:0x4643a4
  42b1d4:	mov    ebx,DWORD PTR ds:0x4643a8
  42b1da:	mov    DWORD PTR ds:0x4488a0,esi
  42b1e0:	push   0x9
  42b1e2:	mov    esi,0x448994
  42b1e7:	push   esi
  42b1e8:	call   ebx
  42b1ea:	add    esp,0x10
  42b1ed:	cmp    BYTE PTR ds:0x44f54e,0x0
  42b1f4:	mov    DWORD PTR ds:0x4488e0,esi
  42b1fa:	je     0x42b221
  42b1fc:	mov    ecx,0x202
  42b201:	call   0x43f42e
  42b206:	mov    ds:0x44f538,eax
  42b20b:	test   eax,eax
  42b20d:	jne    0x42b221
  42b20f:	push   eax
  42b210:	xor    edx,edx
  42b212:	mov    ecx,0xfa9
  42b217:	mov    ds:0x44f551,al
  42b21c:	call   0x42ee80
  42b221:	push   0x13
  42b223:	mov    esi,0x44f4e8
  42b228:	push   esi
  42b229:	call   DWORD PTR ds:0x4643a4
  42b22f:	pop    ecx
  42b230:	pop    ecx
  42b231:	lea    ecx,[esi+0x1]
  42b234:	mov    al,BYTE PTR [esi]
  42b236:	inc    esi
  42b237:	test   al,al
  42b239:	jne    0x42b234
  42b23b:	sub    esi,ecx
  42b23d:	mov    eax,0x44f4fa
  42b242:	lea    ecx,[esi+0x44f4e8]
  42b248:	sub    eax,ecx
  42b24a:	push   eax
  42b24b:	lea    eax,[ecx+0x1]
  42b24e:	push   eax
  42b24f:	mov    BYTE PTR [ecx],0x20
  42b252:	call   ebx
  42b254:	pop    ecx
  42b255:	pop    ecx
  42b256:	pop    esi
  42b257:	pop    ebx
  42b258:	leave  
  42b259:	ret    
  42b25a:	push   ebp
  42b25b:	mov    ebp,esp
  42b25d:	push   ecx
  42b25e:	push   edi
  42b25f:	mov    edi,DWORD PTR ds:0x44e4d4
  42b265:	test   edi,edi
  42b267:	je     0x42b30d
  42b26d:	push   0x3d
  42b26f:	pop    edx
  42b270:	push   ebx
  42b271:	push   esi
  42b272:	lea    ecx,[edi+0x4]
  42b275:	mov    esi,ecx
  42b277:	jmp    0x42b281
  42b279:	cmp    ax,dx
  42b27c:	je     0x42b289
  42b27e:	add    esi,0x2
  42b281:	movzx  eax,WORD PTR [esi]
  42b284:	test   ax,ax
  42b287:	jne    0x42b279
  42b289:	mov    edx,esi
  42b28b:	sub    edx,edi
  42b28d:	sub    edx,0x4
  42b290:	sar    edx,1
  42b292:	call   0x43f54e
  42b297:	mov    edx,eax
  42b299:	mov    DWORD PTR [ebp-0x4],eax
  42b29c:	lea    ebx,[edx+0x1]
  42b29f:	mov    cl,BYTE PTR [edx]
  42b2a1:	inc    edx
  42b2a2:	test   cl,cl
  42b2a4:	jne    0x42b29f
  42b2a6:	sub    edx,ebx
  42b2a8:	mov    ecx,eax
  42b2aa:	call   0x445b60
  42b2af:	mov    ebx,eax
  42b2b1:	test   ebx,ebx
  42b2b3:	je     0x42b2c1
  42b2b5:	push   DWORD PTR [ebx+0x18]
  42b2b8:	call   DWORD PTR ds:0x464354
  42b2be:	pop    ecx
  42b2bf:	jmp    0x42b2df
  42b2c1:	mov    ecx,DWORD PTR [ebp-0x4]
  42b2c4:	mov    edx,ecx
  42b2c6:	lea    ebx,[edx+0x1]
  42b2c9:	mov    al,BYTE PTR [edx]
  42b2cb:	inc    edx
  42b2cc:	test   al,al
  42b2ce:	jne    0x42b2c9
  42b2d0:	sub    edx,ebx
  42b2d2:	push   0x7
  42b2d4:	call   0x445966
  42b2d9:	mov    ebx,eax
  42b2db:	or     BYTE PTR [ebx+0x7],0x40
  42b2df:	push   0x3d
  42b2e1:	pop    eax
  42b2e2:	cmp    WORD PTR [esi],ax
  42b2e5:	jne    0x42b2ea
  42b2e7:	add    esi,0x2
  42b2ea:	mov    ecx,esi
  42b2ec:	call   0x43f4c7
  42b2f1:	push   DWORD PTR [ebp-0x4]
  42b2f4:	mov    DWORD PTR [ebx+0x18],eax
  42b2f7:	call   DWORD PTR ds:0x464354
  42b2fd:	mov    edi,DWORD PTR [edi]
  42b2ff:	pop    ecx
  42b300:	push   0x3d
  42b302:	pop    edx
  42b303:	test   edi,edi
  42b305:	jne    0x42b272
  42b30b:	pop    esi
  42b30c:	pop    ebx
  42b30d:	pop    edi
  42b30e:	leave  
  42b30f:	ret    
  42b310:	push   ebp
  42b311:	mov    ebp,esp
  42b313:	sub    esp,0x614
  42b319:	mov    eax,ds:0x448858
  42b31e:	xor    eax,ebp
  42b320:	mov    DWORD PTR [ebp-0x4],eax
  42b323:	push   ebx
  42b324:	mov    ebx,DWORD PTR [ebp+0x8]
  42b327:	mov    eax,ecx
  42b329:	push   esi
  42b32a:	push   edi
  42b32b:	mov    edi,DWORD PTR [eax]
  42b32d:	xor    ecx,ecx
  42b32f:	mov    esi,edx
  42b331:	mov    DWORD PTR [ebp-0x614],eax
  42b337:	mov    WORD PTR [ebp-0x20c],cx
  42b33e:	mov    DWORD PTR [ebp-0x610],ecx
  42b344:	test   edi,edi
  42b346:	je     0x42b40e
  42b34c:	mov    ecx,edi
  42b34e:	lea    edx,[ecx+0x2]
  42b351:	mov    ax,WORD PTR [ecx]
  42b354:	add    ecx,0x2
  42b357:	cmp    ax,WORD PTR [ebp-0x610]
  42b35e:	jne    0x42b351
  42b360:	sub    ecx,edx
  42b362:	sar    ecx,1
  42b364:	mov    edx,0x100
  42b369:	cmp    ecx,edx
  42b36b:	jbe    0x42b379
  42b36d:	mov    edx,edi
  42b36f:	mov    ecx,0x3f1
  42b374:	call   0x42f1c0
  42b379:	push   edx
  42b37a:	lea    eax,[ebp-0x60c]
  42b380:	push   eax
  42b381:	push   edx
  42b382:	lea    eax,[ebp-0x40c]
  42b388:	push   eax
  42b389:	xor    eax,eax
  42b38b:	push   eax
  42b38c:	push   eax
  42b38d:	push   eax
  42b38e:	push   eax
  42b38f:	push   edi
  42b390:	call   DWORD PTR ds:0x4643ac
  42b396:	add    esp,0x24
  42b399:	test   eax,eax
  42b39b:	jne    0x42b36d
  42b39d:	cmp    WORD PTR [ebp-0x60c],ax
  42b3a4:	je     0x42b3c8
  42b3a6:	mov    ecx,edi
  42b3a8:	call   0x43f48d
  42b3ad:	push   edi
  42b3ae:	mov    esi,eax
  42b3b0:	call   DWORD PTR ds:0x464354
  42b3b6:	mov    eax,DWORD PTR [ebp-0x614]
  42b3bc:	pop    ecx
  42b3bd:	xor    ecx,ecx
  42b3bf:	mov    DWORD PTR [eax],ecx
  42b3c1:	mov    eax,esi
  42b3c3:	jmp    0x42b47b
  42b3c8:	push   edi
  42b3c9:	mov    edi,0x104
  42b3ce:	lea    eax,[ebp-0x20c]
  42b3d4:	push   edi
  42b3d5:	push   eax
  42b3d6:	call   DWORD PTR ds:0x46439c
  42b3dc:	add    esp,0xc
  42b3df:	cmp    WORD PTR [ebp-0x40c],0x0
  42b3e7:	je     0x42b40a
  42b3e9:	push   ebx
  42b3ea:	lea    eax,[ebp-0x20c]
  42b3f0:	push   edi
  42b3f1:	push   eax
  42b3f2:	call   DWORD PTR ds:0x4643b0
  42b3f8:	add    esp,0xc
  42b3fb:	test   eax,eax
  42b3fd:	je     0x42b470
  42b3ff:	lea    edx,[ebp-0x20c]
  42b405:	jmp    0x42b36f
  42b40a:	xor    ecx,ecx
  42b40c:	jmp    0x42b413
  42b40e:	mov    edi,0x104
  42b413:	push   ecx
  42b414:	push   ecx
  42b415:	push   0x100
  42b41a:	lea    eax,[ebp-0x40c]
  42b420:	push   eax
  42b421:	push   ecx
  42b422:	push   ecx
  42b423:	push   ecx
  42b424:	push   ecx
  42b425:	push   esi
  42b426:	call   DWORD PTR ds:0x4643ac
  42b42c:	add    esp,0x24
  42b42f:	test   eax,eax
  42b431:	je     0x42b43a
  42b433:	mov    edx,esi
  42b435:	jmp    0x42b36f
  42b43a:	mov    esi,DWORD PTR ds:0x4643b0
  42b440:	lea    eax,[ebp-0x40c]
  42b446:	push   eax
  42b447:	lea    eax,[ebp-0x20c]
  42b44d:	push   edi
  42b44e:	push   eax
  42b44f:	call   esi
  42b451:	add    esp,0xc
  42b454:	test   eax,eax
  42b456:	je     0x42b463
  42b458:	lea    edx,[ebp-0x40c]
  42b45e:	jmp    0x42b36f
  42b463:	push   ebx
  42b464:	lea    eax,[ebp-0x20c]
  42b46a:	push   edi
  42b46b:	push   eax
  42b46c:	call   esi
  42b46e:	jmp    0x42b3f8
  42b470:	lea    ecx,[ebp-0x20c]
  42b476:	call   0x43f48d
  42b47b:	mov    ecx,DWORD PTR [ebp-0x4]
  42b47e:	pop    edi
  42b47f:	pop    esi
  42b480:	xor    ecx,ebp
  42b482:	pop    ebx
  42b483:	call   0x446dc7
  42b488:	leave  
  42b489:	ret    0x4
  42b48c:	push   ebp
  42b48d:	mov    ebp,esp
  42b48f:	sub    esp,0x60c
  42b495:	mov    eax,ds:0x448858
  42b49a:	xor    eax,ebp
  42b49c:	mov    DWORD PTR [ebp-0x4],eax
  42b49f:	push   ebx
  42b4a0:	push   esi
  42b4a1:	push   edi
  42b4a2:	mov    edi,ecx
  42b4a4:	mov    DWORD PTR ds:0x44f50c,edi
  42b4aa:	call   0x42b05f
  42b4af:	mov    eax,ds:0x44f540
  42b4b4:	xor    ebx,ebx
  42b4b6:	mov    esi,0xff
  42b4bb:	test   eax,eax
  42b4bd:	je     0x42b4d8
  42b4bf:	cmp    eax,esi
  42b4c1:	ja     0x42b4c8
  42b4c3:	cmp    eax,0x3c
  42b4c6:	jae    0x42b4d8
  42b4c8:	mov    ecx,0x41ee90
  42b4cd:	mov    DWORD PTR ds:0x44f540,ebx
  42b4d3:	call   0x42c353
  42b4d8:	mov    eax,ds:0x44f53c
  42b4dd:	test   eax,eax
  42b4df:	je     0x42b4fa
  42b4e1:	cmp    eax,esi
  42b4e3:	ja     0x42b4ea
  42b4e5:	cmp    eax,0xa
  42b4e8:	jae    0x42b4fa
  42b4ea:	mov    ecx,0x41ee98
  42b4ef:	mov    DWORD PTR ds:0x44f53c,ebx
  42b4f5:	call   0x42c353
  42b4fa:	push   0x3
  42b4fc:	pop    eax
  42b4fd:	cmp    DWORD PTR ds:0x448990,eax
  42b503:	jbe    0x42b514
  42b505:	mov    ecx,0x41eea0
  42b50a:	mov    ds:0x448990,eax
  42b50f:	call   0x42c353
  42b514:	mov    eax,ds:0x44898c
  42b519:	xor    ecx,ecx
  42b51b:	inc    ecx
  42b51c:	cmp    eax,ecx
  42b51e:	je     0x42b544
  42b520:	cmp    eax,0x2
  42b523:	je     0x42b544
  42b525:	cmp    eax,0x4
  42b528:	je     0x42b544
  42b52a:	cmp    eax,0x8
  42b52d:	je     0x42b544
  42b52f:	cmp    eax,0x10
  42b532:	je     0x42b544
  42b534:	mov    DWORD PTR ds:0x44898c,ecx
  42b53a:	mov    ecx,0x41eea8
  42b53f:	call   0x42c353
  42b544:	cmp    BYTE PTR ds:0x44f551,bl
  42b54a:	jne    0x42b559
  42b54c:	push   edi
  42b54d:	push   0x41eeb0
  42b552:	call   0x441da9
  42b557:	pop    ecx
  42b558:	pop    ecx
  42b559:	call   0x435b08
  42b55e:	mov    ecx,0x100
  42b563:	push   ecx
  42b564:	lea    eax,[ebp-0x404]
  42b56a:	push   eax
  42b56b:	push   ecx
  42b56c:	lea    eax,[ebp-0x204]
  42b572:	push   eax
  42b573:	push   ebx
  42b574:	push   ebx
  42b575:	push   ebx
  42b576:	push   ebx
  42b577:	push   edi
  42b578:	call   DWORD PTR ds:0x4643ac
  42b57e:	add    esp,0x24
  42b581:	lea    ecx,[ebp-0x204]
  42b587:	call   0x43f4c7
  42b58c:	mov    edx,eax
  42b58e:	mov    ecx,edx
  42b590:	mov    DWORD PTR ds:0x45f9a8,edx
  42b596:	mov    DWORD PTR ds:0x4488b0,edx
  42b59c:	lea    esi,[ecx+0x1]
  42b59f:	mov    al,BYTE PTR [ecx]
  42b5a1:	inc    ecx
  42b5a2:	test   al,al
  42b5a4:	jne    0x42b59f
  42b5a6:	sub    ecx,esi
  42b5a8:	lea    eax,[ecx+0x1]
  42b5ab:	push   eax
  42b5ac:	push   edx
  42b5ad:	call   DWORD PTR ds:0x4643b4
  42b5b3:	pop    ecx
  42b5b4:	pop    ecx
  42b5b5:	cmp    DWORD PTR ds:0x44e4cc,ebx
  42b5bb:	jne    0x42b60b
  42b5bd:	lea    ecx,[ebp-0x204]
  42b5c3:	call   0x43f48d
  42b5c8:	mov    edx,DWORD PTR ds:0x44f528
  42b5ce:	mov    ecx,DWORD PTR ds:0x44f524
  42b5d4:	mov    esi,eax
  42b5d6:	mov    DWORD PTR [ecx+edx*4],0x41eed4
  42b5dd:	mov    DWORD PTR [ecx+edx*4+0x4],esi
  42b5e1:	add    edx,0x2
  42b5e4:	mov    DWORD PTR ds:0x44f528,edx
  42b5ea:	lea    ecx,[esi+0x2]
  42b5ed:	mov    ax,WORD PTR [esi]
  42b5f0:	add    esi,0x2
  42b5f3:	cmp    ax,bx
  42b5f6:	jne    0x42b5ed
  42b5f8:	mov    eax,ds:0x44f520
  42b5fd:	sub    esi,ecx
  42b5ff:	sar    esi,1
  42b601:	add    eax,0x5
  42b604:	add    eax,esi
  42b606:	mov    ds:0x44f520,eax
  42b60b:	lea    eax,[ebp-0x404]
  42b611:	push   eax
  42b612:	lea    eax,[ebp-0x204]
  42b618:	push   0x100
  42b61d:	push   eax
  42b61e:	call   DWORD PTR ds:0x4643b0
  42b624:	add    esp,0xc
  42b627:	neg    eax
  42b629:	sbb    eax,eax
  42b62b:	not    eax
  42b62d:	lea    ecx,[ebp-0x204]
  42b633:	and    ecx,eax
  42b635:	call   0x43f48d
  42b63a:	mov    esi,eax
  42b63c:	cmp    BYTE PTR ds:0x44f548,bl
  42b642:	je     0x42b650
  42b644:	mov    DWORD PTR ds:0x44e4c4,0x41e5a0
  42b64e:	jmp    0x42b6a1
  42b650:	push   0x41eedc
  42b655:	mov    edx,esi
  42b657:	mov    ecx,0x44f51c
  42b65c:	call   0x42b310
  42b661:	mov    edx,DWORD PTR ds:0x44f528
  42b667:	mov    ecx,DWORD PTR ds:0x44f524
  42b66d:	mov    ds:0x44e4c4,eax
  42b672:	mov    DWORD PTR [ecx+edx*4],eax
  42b675:	mov    ecx,DWORD PTR ds:0x44e4c4
  42b67b:	inc    edx
  42b67c:	mov    DWORD PTR ds:0x44f528,edx
  42b682:	lea    edx,[ecx+0x2]
  42b685:	mov    ax,WORD PTR [ecx]
  42b688:	add    ecx,0x2
  42b68b:	cmp    ax,bx
  42b68e:	jne    0x42b685
  42b690:	mov    eax,ds:0x44f520
  42b695:	sub    ecx,edx
  42b697:	sar    ecx,1
  42b699:	inc    eax
  42b69a:	add    eax,ecx
  42b69c:	mov    ds:0x44f520,eax
  42b6a1:	mov    BYTE PTR ds:0x44e05b,0x1
  42b6a8:	cmp    BYTE PTR ds:0x44e00b,bl
  42b6ae:	je     0x42b6c6
  42b6b0:	push   0x41eee8
  42b6b5:	mov    edx,esi
  42b6b7:	mov    ecx,0x44f518
  42b6bc:	call   0x42b310
  42b6c1:	mov    ds:0x44e4c8,eax
  42b6c6:	cmp    BYTE PTR ds:0x44e047,bl
  42b6cc:	je     0x42b728
  42b6ce:	push   0x41eef4
  42b6d3:	mov    edx,esi
  42b6d5:	mov    ecx,0x44f510
  42b6da:	call   0x42b310
  42b6df:	mov    ds:0x44e4d0,eax
  42b6e4:	cmp    BYTE PTR ds:0x44e047,bl
  42b6ea:	je     0x42b728
  42b6ec:	push   0x104
  42b6f1:	lea    eax,[ebp-0x60c]
  42b6f7:	push   edi
  42b6f8:	push   eax
  42b6f9:	call   DWORD PTR ds:0x4643b8
  42b6ff:	mov    esi,eax
  42b701:	add    esp,0xc
  42b704:	test   esi,esi
  42b706:	jne    0x42b70a
  42b708:	mov    esi,edi
  42b70a:	mov    edx,DWORD PTR ds:0x44e4d0
  42b710:	xor    cl,cl
  42b712:	call   0x433cd8
  42b717:	mov    ds:0x44f574,eax
  42b71c:	call   0x446342
  42b721:	mov    ecx,esi
  42b723:	call   0x4463a0
  42b728:	call   0x42b82a
  42b72d:	mov    edx,edi
  42b72f:	mov    cl,0x1
  42b731:	call   0x433cd8
  42b736:	mov    ds:0x44e4bc,eax
  42b73b:	call   0x42b25a
  42b740:	call   0x446929
  42b745:	mov    ecx,DWORD PTR ds:0x44e4bc
  42b74b:	call   0x434b6f
  42b750:	mov    edx,DWORD PTR ds:0x44e4c4
  42b756:	xor    cl,cl
  42b758:	call   0x433cd8
  42b75d:	mov    ecx,DWORD PTR ds:0x44e4c8
  42b763:	mov    ds:0x45f884,eax
  42b768:	test   ecx,ecx
  42b76a:	je     0x42b77a
  42b76c:	push   ecx
  42b76d:	call   DWORD PTR ds:0x46449c
  42b773:	pop    ecx
  42b774:	mov    ecx,DWORD PTR ds:0x44e4c8
  42b77a:	cmp    BYTE PTR ds:0x44f54d,bl
  42b780:	je     0x42b787
  42b782:	call   0x438890
  42b787:	mov    ecx,DWORD PTR [ebp-0x4]
  42b78a:	pop    edi
  42b78b:	pop    esi
  42b78c:	mov    BYTE PTR ds:0x44f550,bl
  42b792:	xor    ecx,ebp
  42b794:	pop    ebx
  42b795:	call   0x446dc7
  42b79a:	leave  
  42b79b:	ret    
  42b79c:	cmp    BYTE PTR ds:0x44888c,0x0
  42b7a3:	je     0x42b829
  42b7a9:	push   esi
  42b7aa:	push   edi
  42b7ab:	mov    esi,0x448894
  42b7b0:	mov    ecx,DWORD PTR [esi-0xc]
  42b7b3:	mov    edx,ecx
  42b7b5:	lea    edi,[edx+0x1]
  42b7b8:	mov    al,BYTE PTR [edx]
  42b7ba:	inc    edx
  42b7bb:	test   al,al
  42b7bd:	jne    0x42b7b8
  42b7bf:	sub    edx,edi
  42b7c1:	call   0x445b60
  42b7c6:	mov    DWORD PTR [esi],eax
  42b7c8:	test   eax,eax
  42b7ca:	jne    0x42b7da
  42b7cc:	movzx  edx,BYTE PTR [esi-0x8]
  42b7d0:	mov    ecx,DWORD PTR [esi-0xc]
  42b7d3:	call   0x445ae1
  42b7d8:	mov    DWORD PTR [esi],eax
  42b7da:	movzx  eax,BYTE PTR [esi-0x8]
  42b7de:	sub    eax,0x6
  42b7e1:	je     0x42b816
  42b7e3:	dec    eax
  42b7e4:	je     0x42b80c
  42b7e6:	dec    eax
  42b7e7:	je     0x42b7fe
  42b7e9:	sub    eax,0x7
  42b7ec:	jne    0x42b81e
  42b7ee:	mov    ecx,DWORD PTR [esi]
  42b7f0:	mov    al,BYTE PTR [esi-0x4]
  42b7f3:	mov    BYTE PTR [ecx+0x1c],al
  42b7f6:	mov    eax,DWORD PTR [esi]
  42b7f8:	or     BYTE PTR [eax+0x7],0x10
  42b7fc:	jmp    0x42b81e
  42b7fe:	mov    ecx,DWORD PTR [esi]
  42b800:	mov    eax,DWORD PTR [esi-0x4]
  42b803:	mov    DWORD PTR [ecx+0x20],eax
  42b806:	and    DWORD PTR [ecx+0x24],0x0
  42b80a:	jmp    0x42b81e
  42b80c:	mov    ecx,DWORD PTR [esi]
  42b80e:	mov    eax,DWORD PTR [esi-0x4]
  42b811:	mov    DWORD PTR [ecx+0x18],eax
  42b814:	jmp    0x42b81e
  42b816:	mov    ecx,DWORD PTR [esi]
  42b818:	mov    al,BYTE PTR [esi-0x4]
  42b81b:	mov    BYTE PTR [ecx+0x18],al
  42b81e:	add    esi,0x10
  42b821:	cmp    BYTE PTR [esi-0x8],0x0
  42b825:	jne    0x42b7b0
  42b827:	pop    edi
  42b828:	pop    esi
  42b829:	ret    
  42b82a:	push   esi
  42b82b:	xor    esi,esi
  42b82d:	mov    cl,0x63
  42b82f:	mov    DWORD PTR ds:0x45f9a4,esi
  42b835:	mov    DWORD PTR ds:0x45f9a0,0x45f9a4
  42b83f:	call   0x441b05
  42b844:	call   0x42b79c
  42b849:	mov    eax,ds:0x4492e0
  42b84e:	mov    DWORD PTR [eax],esi
  42b850:	mov    eax,ds:0x4492f0
  42b855:	mov    DWORD PTR [eax],esi
  42b857:	movzx  edx,BYTE PTR ds:0x44db18
  42b85e:	mov    eax,ds:0x448988
  42b863:	mov    esi,0x44db18
  42b868:	push   esi
  42b869:	call   DWORD PTR [eax+edx*4]
  42b86c:	mov    edx,DWORD PTR ds:0x448884
  42b872:	mov    ecx,esi
  42b874:	call   0x43f399
  42b879:	mov    cl,0xa
  42b87b:	call   0x441b05
  42b880:	cmp    BYTE PTR ds:0x44e00b,0x0
  42b887:	pop    esi
  42b888:	je     0x42b899
  42b88a:	mov    edx,0x81
  42b88f:	mov    ecx,0x44f554
  42b894:	jmp    0x43f3d4
  42b899:	ret    
  42b89a:	push   ebp
  42b89b:	mov    ebp,esp
  42b89d:	sub    esp,0x14
  42b8a0:	push   esi
  42b8a1:	mov    esi,ecx
  42b8a3:	mov    eax,edx
  42b8a5:	mov    DWORD PTR [ebp-0xc],eax
  42b8a8:	test   esi,esi
  42b8aa:	jne    0x42b8b3
  42b8ac:	mov    al,0x1
  42b8ae:	jmp    0x42ba4b
  42b8b3:	push   ebx
  42b8b4:	mov    ebx,DWORD PTR [ebp+0xc]
  42b8b7:	cmp    DWORD PTR [ebx],0x0
  42b8ba:	jne    0x42b8c8
  42b8bc:	mov    ecx,DWORD PTR [eax]
  42b8be:	shl    ecx,0x2
  42b8c1:	call   0x43f42e
  42b8c6:	mov    DWORD PTR [ebx],eax
  42b8c8:	mov    eax,DWORD PTR [ebp+0x8]
  42b8cb:	push   edi
  42b8cc:	mov    ecx,DWORD PTR [eax]
  42b8ce:	mov    eax,DWORD PTR [ebx]
  42b8d0:	lea    edi,[eax+ecx*4]
  42b8d3:	mov    ecx,esi
  42b8d5:	mov    DWORD PTR [ebp-0x8],edi
  42b8d8:	call   0x43f48d
  42b8dd:	mov    esi,eax
  42b8df:	test   esi,esi
  42b8e1:	jne    0x42b8ed
  42b8e3:	mov    ecx,0x3ec
  42b8e8:	call   0x42f124
  42b8ed:	xor    edx,edx
  42b8ef:	mov    BYTE PTR [ebp-0x1],dl
  42b8f2:	cmp    WORD PTR [esi],dx
  42b8f5:	je     0x42ba45
  42b8fb:	push   0x20
  42b8fd:	pop    ecx
  42b8fe:	push   0x9
  42b900:	pop    edi
  42b901:	mov    DWORD PTR [ebp-0x10],0xd
  42b908:	mov    DWORD PTR [ebp-0x14],0xa
  42b90f:	movzx  eax,WORD PTR [esi]
  42b912:	cmp    ax,cx
  42b915:	je     0x42b928
  42b917:	cmp    ax,di
  42b91a:	je     0x42b928
  42b91c:	cmp    ax,WORD PTR [ebp-0x10]
  42b920:	je     0x42b928
  42b922:	cmp    ax,WORD PTR [ebp-0x14]
  42b926:	jne    0x42b92d
  42b928:	add    esi,0x2
  42b92b:	jmp    0x42b90f
  42b92d:	cmp    WORD PTR [esi],dx
  42b930:	je     0x42ba42
  42b936:	mov    eax,DWORD PTR [ebp-0x8]
  42b939:	mov    ecx,DWORD PTR [ebp-0xc]
  42b93c:	mov    ebx,DWORD PTR [ebp+0x8]
  42b93f:	mov    DWORD PTR [eax],esi
  42b941:	mov    ecx,DWORD PTR [ecx]
  42b943:	add    eax,0x4
  42b946:	mov    DWORD PTR [ebp-0x8],eax
  42b949:	mov    eax,DWORD PTR [ebp+0x8]
  42b94c:	mov    edi,esi
  42b94e:	mov    eax,DWORD PTR [eax]
  42b950:	lea    edx,[eax+0x2]
  42b953:	inc    eax
  42b954:	mov    DWORD PTR [ebx],eax
  42b956:	mov    ebx,DWORD PTR [ebp+0xc]
  42b959:	cmp    edx,ecx
  42b95b:	jle    0x42b99f
  42b95d:	mov    ecx,DWORD PTR [ebp-0xc]
  42b960:	mov    eax,DWORD PTR [ecx]
  42b962:	add    eax,eax
  42b964:	mov    DWORD PTR [ecx],eax
  42b966:	shl    eax,0x2
  42b969:	push   eax
  42b96a:	push   DWORD PTR [ebx]
  42b96c:	call   DWORD PTR ds:0x4643e8
  42b972:	mov    ebx,eax
  42b974:	pop    ecx
  42b975:	pop    ecx
  42b976:	test   ebx,ebx
  42b978:	jne    0x42b984
  42b97a:	mov    ecx,0x3ec
  42b97f:	call   0x42f124
  42b984:	mov    eax,DWORD PTR [ebp+0xc]
  42b987:	mov    DWORD PTR [eax],ebx
  42b989:	test   ebx,ebx
  42b98b:	je     0x42ba58
  42b991:	mov    eax,DWORD PTR [ebp+0x8]
  42b994:	mov    eax,DWORD PTR [eax]
  42b996:	lea    eax,[ebx+eax*4]
  42b999:	mov    ebx,DWORD PTR [ebp+0xc]
  42b99c:	mov    DWORD PTR [ebp-0x8],eax
  42b99f:	xor    edx,edx
  42b9a1:	cmp    WORD PTR [esi],dx
  42b9a4:	je     0x42ba2e
  42b9aa:	mov    bl,BYTE PTR [ebp-0x1]
  42b9ad:	push   0x20
  42b9af:	pop    eax
  42b9b0:	movzx  ecx,WORD PTR [esi]
  42b9b3:	cmp    cx,ax
  42b9b6:	je     0x42b9c0
  42b9b8:	push   0x9
  42b9ba:	pop    eax
  42b9bb:	cmp    cx,ax
  42b9be:	jne    0x42b9c4
  42b9c0:	test   bl,bl
  42b9c2:	je     0x42ba23
  42b9c4:	mov    eax,ecx
  42b9c6:	cmp    eax,0xa
  42b9c9:	je     0x42ba50
  42b9cf:	cmp    eax,0xd
  42b9d2:	je     0x42ba50
  42b9d4:	cmp    eax,0x22
  42b9d7:	je     0x42ba13
  42b9d9:	cmp    eax,0x5c
  42b9dc:	je     0x42b9e3
  42b9de:	mov    WORD PTR [edi],cx
  42b9e1:	jmp    0x42ba0e
  42b9e3:	push   0x22
  42b9e5:	add    esi,0x2
  42b9e8:	pop    eax
  42b9e9:	cmp    WORD PTR [esi],ax
  42b9ec:	je     0x42ba0b
  42b9ee:	push   0x5c
  42b9f0:	pop    eax
  42b9f1:	mov    WORD PTR [edi],ax
  42b9f4:	movzx  eax,WORD PTR [esi]
  42b9f7:	add    edi,0x2
  42b9fa:	test   ax,ax
  42b9fd:	je     0x42ba23
  42b9ff:	push   0x20
  42ba01:	pop    ecx
  42ba02:	cmp    ax,cx
  42ba05:	jne    0x42ba0b
  42ba07:	test   bl,bl
  42ba09:	je     0x42ba1b
  42ba0b:	mov    WORD PTR [edi],ax
  42ba0e:	add    edi,0x2
  42ba11:	jmp    0x42ba18
  42ba13:	test   bl,bl
  42ba15:	sete   bl
  42ba18:	add    esi,0x2
  42ba1b:	push   0x20
  42ba1d:	pop    eax
  42ba1e:	cmp    WORD PTR [esi],dx
  42ba21:	jne    0x42b9b0
  42ba23:	mov    BYTE PTR [ebp-0x1],bl
  42ba26:	cmp    WORD PTR [esi],dx
  42ba29:	je     0x42ba2e
  42ba2b:	add    esi,0x2
  42ba2e:	push   0x20
  42ba30:	xor    eax,eax
  42ba32:	pop    ecx
  42ba33:	mov    WORD PTR [edi],ax
  42ba36:	push   0x9
  42ba38:	pop    edi
  42ba39:	cmp    WORD PTR [esi],dx
  42ba3c:	jne    0x42b90f
  42ba42:	mov    edi,DWORD PTR [ebp-0x8]
  42ba45:	mov    DWORD PTR [edi],edx
  42ba47:	mov    al,0x1
  42ba49:	pop    edi
  42ba4a:	pop    ebx
  42ba4b:	pop    esi
  42ba4c:	leave  
  42ba4d:	ret    0x8
  42ba50:	push   0x20
  42ba52:	pop    eax
  42ba53:	mov    WORD PTR [esi],ax
  42ba56:	jmp    0x42ba1e
  42ba58:	xor    al,al
  42ba5a:	jmp    0x42ba49
  42ba5c:	push   ebp
  42ba5d:	mov    ebp,esp
  42ba5f:	sub    esp,0x18
  42ba62:	push   ebx
  42ba63:	mov    eax,ecx
  42ba65:	push   esi
  42ba66:	push   edi
  42ba67:	mov    ebx,edx
  42ba69:	mov    DWORD PTR [ebp-0x8],eax
  42ba6c:	test   eax,eax
  42ba6e:	je     0x42bebc
  42ba74:	xor    eax,eax
  42ba76:	mov    DWORD PTR ds:0x4632e4,0xc
  42ba80:	mov    DWORD PTR [ebp-0x18],eax
  42ba83:	mov    ds:0x4632e8,eax
  42ba88:	mov    DWORD PTR ds:0x4632ec,0x1
  42ba92:	call   0x429e50
  42ba97:	push   0x2
  42ba99:	pop    ecx
  42ba9a:	push   0x2d
  42ba9c:	pop    edi
  42ba9d:	xor    eax,eax
  42ba9f:	push   0x2f
  42baa1:	pop    esi
  42baa2:	mov    DWORD PTR ds:0x44f584,ecx
  42baa8:	mov    DWORD PTR [ebp-0xc],eax
  42baab:	mov    DWORD PTR [ebp-0x10],esi
  42baae:	cmp    DWORD PTR [ebp-0x8],eax
  42bab1:	jle    0x42bc36
  42bab7:	mov    edx,DWORD PTR [ebx+eax*4]
  42baba:	movzx  eax,WORD PTR [edx]
  42babd:	cmp    ax,di
  42bac0:	je     0x42bacb
  42bac2:	cmp    ax,si
  42bac5:	jne    0x42bc09
  42bacb:	lea    edi,[edx+0x2]
  42bace:	mov    edx,0x41e7ec
  42bad3:	mov    eax,edi
  42bad5:	mov    si,WORD PTR [eax]
  42bad8:	cmp    si,WORD PTR [edx]
  42badb:	jne    0x42bafd
  42badd:	test   si,si
  42bae0:	je     0x42baf7
  42bae2:	mov    si,WORD PTR [eax+0x2]
  42bae6:	cmp    si,WORD PTR [edx+0x2]
  42baea:	jne    0x42bafd
  42baec:	add    eax,0x4
  42baef:	add    edx,0x4
  42baf2:	test   si,si
  42baf5:	jne    0x42bad5
  42baf7:	xor    edx,edx
  42baf9:	mov    eax,edx
  42bafb:	jmp    0x42bb04
  42bafd:	sbb    eax,eax
  42baff:	or     eax,0x1
  42bb02:	xor    edx,edx
  42bb04:	test   eax,eax
  42bb06:	jne    0x42bb15
  42bb08:	mov    ecx,edx
  42bb0a:	mov    DWORD PTR ds:0x44f584,ecx
  42bb10:	jmp    0x42bc03
  42bb15:	mov    edx,0x41e810
  42bb1a:	mov    eax,edi
  42bb1c:	mov    si,WORD PTR [eax]
  42bb1f:	cmp    si,WORD PTR [edx]
  42bb22:	jne    0x42bb42
  42bb24:	test   si,si
  42bb27:	je     0x42bb3e
  42bb29:	mov    si,WORD PTR [eax+0x2]
  42bb2d:	cmp    si,WORD PTR [edx+0x2]
  42bb31:	jne    0x42bb42
  42bb33:	add    eax,0x4
  42bb36:	add    edx,0x4
  42bb39:	test   si,si
  42bb3c:	jne    0x42bb1c
  42bb3e:	xor    eax,eax
  42bb40:	jmp    0x42bb47
  42bb42:	sbb    eax,eax
  42bb44:	or     eax,0x1
  42bb47:	test   eax,eax
  42bb49:	jne    0x42bb50
  42bb4b:	xor    ecx,ecx
  42bb4d:	inc    ecx
  42bb4e:	jmp    0x42bb0a
  42bb50:	mov    edx,0x41e838
  42bb55:	mov    eax,edi
  42bb57:	mov    si,WORD PTR [eax]
  42bb5a:	cmp    si,WORD PTR [edx]
  42bb5d:	jne    0x42bb7d
  42bb5f:	test   si,si
  42bb62:	je     0x42bb79
  42bb64:	mov    si,WORD PTR [eax+0x2]
  42bb68:	cmp    si,WORD PTR [edx+0x2]
  42bb6c:	jne    0x42bb7d
  42bb6e:	add    eax,0x4
  42bb71:	add    edx,0x4
  42bb74:	test   si,si
  42bb77:	jne    0x42bb57
  42bb79:	xor    eax,eax
  42bb7b:	jmp    0x42bb82
  42bb7d:	sbb    eax,eax
  42bb7f:	or     eax,0x1
  42bb82:	test   eax,eax
  42bb84:	jne    0x42bb8e
  42bb86:	push   0x2
  42bb88:	pop    ecx
  42bb89:	jmp    0x42bb0a
  42bb8e:	mov    edx,0x41e85c
  42bb93:	mov    eax,edi
  42bb95:	mov    si,WORD PTR [eax]
  42bb98:	cmp    si,WORD PTR [edx]
  42bb9b:	jne    0x42bbbb
  42bb9d:	test   si,si
  42bba0:	je     0x42bbb7
  42bba2:	mov    si,WORD PTR [eax+0x2]
  42bba6:	cmp    si,WORD PTR [edx+0x2]
  42bbaa:	jne    0x42bbbb
  42bbac:	add    eax,0x4
  42bbaf:	add    edx,0x4
  42bbb2:	test   si,si
  42bbb5:	jne    0x42bb95
  42bbb7:	xor    eax,eax
  42bbb9:	jmp    0x42bbc0
  42bbbb:	sbb    eax,eax
  42bbbd:	or     eax,0x1
  42bbc0:	test   eax,eax
  42bbc2:	jne    0x42bbc8
  42bbc4:	push   0x3
  42bbc6:	jmp    0x42bb88
  42bbc8:	mov    eax,0x41e880
  42bbcd:	mov    dx,WORD PTR [edi]
  42bbd0:	cmp    dx,WORD PTR [eax]
  42bbd3:	jne    0x42bbf3
  42bbd5:	test   dx,dx
  42bbd8:	je     0x42bbef
  42bbda:	mov    dx,WORD PTR [edi+0x2]
  42bbde:	cmp    dx,WORD PTR [eax+0x2]
  42bbe2:	jne    0x42bbf3
  42bbe4:	add    edi,0x4
  42bbe7:	add    eax,0x4
  42bbea:	test   dx,dx
  42bbed:	jne    0x42bbcd
  42bbef:	xor    eax,eax
  42bbf1:	jmp    0x42bbf8
  42bbf3:	sbb    eax,eax
  42bbf5:	or     eax,0x1
  42bbf8:	test   eax,eax
  42bbfa:	jne    0x42bc03
  42bbfc:	mov    BYTE PTR ds:0x44e136,0x1
  42bc03:	push   0x2d
  42bc05:	pop    edi
  42bc06:	push   0x2f
  42bc08:	pop    esi
  42bc09:	mov    eax,DWORD PTR [ebp-0xc]
  42bc0c:	inc    eax
  42bc0d:	mov    DWORD PTR [ebp-0xc],eax
  42bc10:	cmp    eax,DWORD PTR [ebp-0x8]
  42bc13:	jl     0x42bab7
  42bc19:	cmp    ecx,0x3
  42bc1c:	jne    0x42bc36
  42bc1e:	call   0x429d3a
  42bc23:	test   al,al
  42bc25:	jne    0x42bc36
  42bc27:	mov    edx,0x41ef00
  42bc2c:	mov    ecx,0xfbc
  42bc31:	call   0x42f1c0
  42bc36:	call   0x429d12
  42bc3b:	test   al,al
  42bc3d:	jne    0x42bc4a
  42bc3f:	push   0x42a2a9
  42bc44:	call   DWORD PTR ds:0x4642fc
  42bc4a:	xor    ecx,ecx
  42bc4c:	cmp    BYTE PTR ds:0x44e136,cl
  42bc52:	je     0x42bc5a
  42bc54:	mov    BYTE PTR ds:0x0,cl
  42bc5a:	mov    eax,DWORD PTR [ebp-0x8]
  42bc5d:	mov    ds:0x44f530,eax
  42bc62:	mov    DWORD PTR ds:0x44f52c,ebx
  42bc68:	test   eax,eax
  42bc6a:	jle    0x42bd13
  42bc70:	push   0x28
  42bc72:	mov    DWORD PTR [ebp-0xc],0x2a
  42bc79:	pop    edx
  42bc7a:	mov    esi,DWORD PTR [ebx]
  42bc7c:	mov    BYTE PTR [ebp-0x1],cl
  42bc7f:	movzx  eax,WORD PTR [esi]
  42bc82:	cmp    ax,WORD PTR [ebp-0x10]
  42bc86:	je     0x42bd18
  42bc8c:	cmp    ax,di
  42bc8f:	je     0x42bd18
  42bc95:	cmp    DWORD PTR ds:0x4489b0,0x0
  42bc9c:	mov    edi,0x4489b0
  42bca1:	je     0x42bce1
  42bca3:	push   0x2a
  42bca5:	pop    eax
  42bca6:	mov    ebx,DWORD PTR [edi]
  42bca8:	cmp    WORD PTR [ebx],ax
  42bcab:	jne    0x42bcc6
  42bcad:	mov    edx,esi
  42bcaf:	mov    ecx,ebx
  42bcb1:	call   0x42becb
  42bcb6:	test   al,al
  42bcb8:	jne    0x42bdbe
  42bcbe:	push   0x28
  42bcc0:	pop    edx
  42bcc1:	push   0x2a
  42bcc3:	xor    ecx,ecx
  42bcc5:	pop    eax
  42bcc6:	cmp    WORD PTR [ebx],dx
  42bcc9:	jne    0x42bcd4
  42bccb:	cmp    WORD PTR [esi],dx
  42bcce:	je     0x42bdbe
  42bcd4:	add    edi,0x10
  42bcd7:	cmp    DWORD PTR [edi],ecx
  42bcd9:	jne    0x42bca6
  42bcdb:	mov    ebx,DWORD PTR ds:0x44f52c
  42bce1:	mov    ecx,DWORD PTR [ebx]
  42bce3:	call   0x42c37a
  42bce8:	mov    ebx,DWORD PTR ds:0x44f52c
  42bcee:	mov    eax,ds:0x44f530
  42bcf3:	push   0x0
  42bcf5:	pop    ecx
  42bcf6:	push   0x28
  42bcf8:	pop    edx
  42bcf9:	dec    eax
  42bcfa:	add    ebx,0x4
  42bcfd:	push   0x2d
  42bcff:	mov    ds:0x44f530,eax
  42bd04:	mov    DWORD PTR ds:0x44f52c,ebx
  42bd0a:	pop    edi
  42bd0b:	test   eax,eax
  42bd0d:	jg     0x42bc7a
  42bd13:	pop    edi
  42bd14:	pop    esi
  42bd15:	pop    ebx
  42bd16:	leave  
  42bd17:	ret    
  42bd18:	lea    eax,[esi+0x2]
  42bd1b:	push   0x41ef5c
  42bd20:	push   eax
  42bd21:	call   DWORD PTR ds:0x464364
  42bd27:	pop    ecx
  42bd28:	pop    ecx
  42bd29:	test   eax,eax
  42bd2b:	je     0x42bec1
  42bd31:	cmp    DWORD PTR ds:0x448a20,0x0
  42bd38:	mov    edi,0x448a20
  42bd3d:	je     0x42bcdb
  42bd3f:	mov    ebx,DWORD PTR ds:0x44f52c
  42bd45:	mov    eax,DWORD PTR [ebx]
  42bd47:	mov    edx,DWORD PTR [edi]
  42bd49:	mov    DWORD PTR [ebp-0x8],edx
  42bd4c:	mov    DWORD PTR [ebp-0x14],eax
  42bd4f:	lea    esi,[eax+0x2]
  42bd52:	jmp    0x42bd96
  42bd54:	xor    eax,eax
  42bd56:	cmp    cx,0x23
  42bd5a:	je     0x42be26
  42bd60:	cmp    cx,0x5e
  42bd64:	jne    0x42bd6f
  42bd66:	cmp    WORD PTR [esi],ax
  42bd69:	je     0x42be2b
  42bd6f:	cmp    cx,WORD PTR [ebp-0xc]
  42bd73:	je     0x42bda3
  42bd75:	mov    ax,WORD PTR [esi]
  42bd78:	add    edx,0x2
  42bd7b:	add    esi,0x2
  42bd7e:	mov    DWORD PTR [ebp-0x8],edx
  42bd81:	cmp    ax,cx
  42bd84:	jne    0x42be73
  42bd8a:	xor    ecx,ecx
  42bd8c:	cmp    WORD PTR [esi],cx
  42bd8f:	jne    0x42bd96
  42bd91:	cmp    WORD PTR [edx],cx
  42bd94:	je     0x42bdbe
  42bd96:	movzx  ecx,WORD PTR [edx]
  42bd99:	test   cx,cx
  42bd9c:	jne    0x42bd54
  42bd9e:	jmp    0x42be73
  42bda3:	cmp    WORD PTR [esi],ax
  42bda6:	je     0x42be73
  42bdac:	mov    ecx,DWORD PTR [ebp-0x8]
  42bdaf:	mov    edx,esi
  42bdb1:	call   0x42becb
  42bdb6:	test   al,al
  42bdb8:	je     0x42be6d
  42bdbe:	push   esi
  42bdbf:	push   edi
  42bdc0:	call   DWORD PTR [edi+0xc]
  42bdc3:	movzx  eax,BYTE PTR [edi+0x8]
  42bdc7:	mov    ebx,DWORD PTR ds:0x44f52c
  42bdcd:	dec    eax
  42bdce:	dec    eax
  42bdcf:	je     0x42bde8
  42bdd1:	dec    eax
  42bdd2:	jne    0x42bcee
  42bdd8:	cmp    BYTE PTR ds:0x44e05b,al
  42bdde:	jne    0x42bde8
  42bde0:	mov    eax,DWORD PTR [ebx]
  42bde2:	xor    ecx,ecx
  42bde4:	mov    WORD PTR [eax+0x6],cx
  42bde8:	cmp    BYTE PTR [ebp-0x1],0x0
  42bdec:	mov    edi,DWORD PTR ds:0x44f524
  42bdf2:	mov    edx,DWORD PTR ds:0x44f528
  42bdf8:	je     0x42be85
  42bdfe:	mov    eax,DWORD PTR [ebx-0x4]
  42be01:	mov    DWORD PTR [edi+edx*4],eax
  42be04:	mov    ecx,DWORD PTR [ebx-0x4]
  42be07:	inc    edx
  42be08:	lea    esi,[ecx+0x2]
  42be0b:	mov    ax,WORD PTR [ecx]
  42be0e:	add    ecx,0x2
  42be11:	cmp    ax,WORD PTR [ebp-0x18]
  42be15:	jne    0x42be0b
  42be17:	sub    ecx,esi
  42be19:	mov    esi,DWORD PTR ds:0x44f520
  42be1f:	sar    ecx,1
  42be21:	inc    esi
  42be22:	add    esi,ecx
  42be24:	jmp    0x42be8b
  42be26:	cmp    WORD PTR [esi],ax
  42be29:	jne    0x42be56
  42be2b:	mov    eax,ds:0x44f530
  42be30:	add    ebx,0x4
  42be33:	dec    eax
  42be34:	mov    esi,DWORD PTR [ebx]
  42be36:	mov    DWORD PTR ds:0x44f52c,ebx
  42be3c:	mov    ds:0x44f530,eax
  42be41:	test   eax,eax
  42be43:	jg     0x42be52
  42be45:	mov    edx,DWORD PTR [ebp-0x14]
  42be48:	mov    ecx,0x3ff
  42be4d:	call   0x42f1c0
  42be52:	mov    BYTE PTR [ebp-0x1],0x1
  42be56:	mov    ecx,DWORD PTR [ebp-0x8]
  42be59:	mov    edx,esi
  42be5b:	call   0x42becb
  42be60:	test   al,al
  42be62:	jne    0x42bdbe
  42be68:	xor    ebx,ebx
  42be6a:	mov    BYTE PTR [ebp-0x1],bl
  42be6d:	mov    ebx,DWORD PTR ds:0x44f52c
  42be73:	add    edi,0x10
  42be76:	xor    esi,esi
  42be78:	cmp    DWORD PTR [edi],esi
  42be7a:	jne    0x42bd45
  42be80:	jmp    0x42bce1
  42be85:	mov    esi,DWORD PTR ds:0x44f520
  42be8b:	mov    eax,DWORD PTR [ebx]
  42be8d:	mov    DWORD PTR [edi+edx*4],eax
  42be90:	mov    ecx,DWORD PTR [ebx]
  42be92:	inc    edx
  42be93:	mov    DWORD PTR ds:0x44f528,edx
  42be99:	lea    edx,[ecx+0x2]
  42be9c:	xor    edi,edi
  42be9e:	mov    ax,WORD PTR [ecx]
  42bea1:	add    ecx,0x2
  42bea4:	cmp    ax,di
  42bea7:	jne    0x42be9e
  42bea9:	sub    ecx,edx
  42beab:	sar    ecx,1
  42bead:	lea    eax,[ecx+0x1]
  42beb0:	add    eax,esi
  42beb2:	mov    ds:0x44f520,eax
  42beb7:	jmp    0x42bcee
  42bebc:	call   0x42c332
  42bec1:	xor    eax,eax
  42bec3:	push   eax
  42bec4:	push   eax
  42bec5:	call   0x42c311
  42beca:	int3   
  42becb:	push   ebp
  42becc:	mov    ebp,esp
  42bece:	push   ecx
  42becf:	push   ebx
  42bed0:	push   esi
  42bed1:	xor    ebx,ebx
  42bed3:	push   edi
  42bed4:	mov    esi,edx
  42bed6:	lea    edi,[ecx+0x2]
  42bed9:	mov    DWORD PTR [ebp-0x4],ebx
  42bedc:	cmp    WORD PTR [ecx],bx
  42bedf:	jne    0x42bee5
  42bee1:	mov    al,0x1
  42bee3:	jmp    0x42bf42
  42bee5:	mov    ecx,esi
  42bee7:	lea    edx,[ecx+0x2]
  42beea:	mov    ax,WORD PTR [ecx]
  42beed:	add    ecx,0x2
  42bef0:	cmp    ax,bx
  42bef3:	jne    0x42beea
  42bef5:	sub    ecx,edx
  42bef7:	mov    edx,edi
  42bef9:	sar    ecx,1
  42befb:	lea    ebx,[edx+0x2]
  42befe:	mov    ax,WORD PTR [edx]
  42bf01:	add    edx,0x2
  42bf04:	cmp    ax,WORD PTR [ebp-0x4]
  42bf08:	jne    0x42befe
  42bf0a:	sub    edx,ebx
  42bf0c:	sar    edx,1
  42bf0e:	sub    ecx,edx
  42bf10:	lea    edx,[esi+ecx*2]
  42bf13:	cmp    edx,esi
  42bf15:	jae    0x42bf1b
  42bf17:	xor    al,al
  42bf19:	jmp    0x42bf42
  42bf1b:	mov    ecx,edx
  42bf1d:	xor    ebx,ebx
  42bf1f:	lea    esi,[ecx+0x2]
  42bf22:	mov    ax,WORD PTR [ecx]
  42bf25:	add    ecx,0x2
  42bf28:	cmp    ax,bx
  42bf2b:	jne    0x42bf22
  42bf2d:	sub    ecx,esi
  42bf2f:	sar    ecx,1
  42bf31:	push   ecx
  42bf32:	push   edx
  42bf33:	push   edi
  42bf34:	call   DWORD PTR ds:0x4643bc
  42bf3a:	add    esp,0xc
  42bf3d:	neg    eax
  42bf3f:	sbb    eax,eax
  42bf41:	inc    eax
  42bf42:	pop    edi
  42bf43:	pop    esi
  42bf44:	pop    ebx
  42bf45:	leave  
  42bf46:	ret    
  42bf47:	push   ebp
  42bf48:	mov    ebp,esp
  42bf4a:	sub    esp,0x44
  42bf4d:	mov    eax,ds:0x448858
  42bf52:	xor    eax,ebp
  42bf54:	mov    DWORD PTR [ebp-0x4],eax
  42bf57:	push   ebx
  42bf58:	mov    ebx,DWORD PTR [ebp+0x8]
  42bf5b:	push   esi
  42bf5c:	mov    esi,DWORD PTR [ebp+0xc]
  42bf5f:	movzx  eax,WORD PTR [esi]
  42bf62:	test   ax,ax
  42bf65:	jne    0x42bf71
  42bf67:	lea    ecx,[esi-0x2]
  42bf6a:	call   0x42c37a
  42bf6f:	jmp    0x42bfdf
  42bf71:	mov    ecx,DWORD PTR [ebx+0x4]
  42bf74:	jmp    0x42bf7e
  42bf76:	cmp    ax,WORD PTR [ecx]
  42bf79:	je     0x42bf98
  42bf7b:	add    ecx,0x10
  42bf7e:	cmp    DWORD PTR [ecx],0x0
  42bf81:	jne    0x42bf76
  42bf83:	test   ax,ax
  42bf86:	je     0x42bfe7
  42bf88:	cmp    DWORD PTR [ebx+0x4],0x448d30
  42bf8f:	jne    0x42bf9f
  42bf91:	push   0x41ef68
  42bf96:	jmp    0x42bfad
  42bf98:	push   esi
  42bf99:	push   ecx
  42bf9a:	call   DWORD PTR [ecx+0xc]
  42bf9d:	jmp    0x42bfdc
  42bf9f:	cmp    DWORD PTR [ebx+0x4],0x448cd0
  42bfa6:	jne    0x42bfbc
  42bfa8:	push   0x41ef70
  42bfad:	lea    eax,[ebp-0x44]
  42bfb0:	push   0x20
  42bfb2:	push   eax
  42bfb3:	call   DWORD PTR ds:0x46439c
  42bfb9:	add    esp,0xc
  42bfbc:	push   0x1d
  42bfbe:	push   esi
  42bfbf:	lea    eax,[ebp-0x44]
  42bfc2:	push   0x20
  42bfc4:	push   eax
  42bfc5:	call   DWORD PTR ds:0x464378
  42bfcb:	xor    eax,eax
  42bfcd:	add    esp,0x10
  42bfd0:	lea    ecx,[ebp-0x44]
  42bfd3:	mov    WORD PTR [ebp-0x6],ax
  42bfd7:	call   0x42c37a
  42bfdc:	add    esi,0x2
  42bfdf:	movzx  eax,WORD PTR [esi]
  42bfe2:	test   ax,ax
  42bfe5:	jne    0x42bf71
  42bfe7:	mov    ecx,DWORD PTR [ebp-0x4]
  42bfea:	pop    esi
  42bfeb:	xor    ecx,ebp
  42bfed:	pop    ebx
  42bfee:	call   0x446dc7
  42bff3:	leave  
  42bff4:	ret    0x8
  42bff7:	push   ebp
  42bff8:	mov    ebp,esp
  42bffa:	mov    eax,DWORD PTR [ebp+0x8]
  42bffd:	mov    eax,DWORD PTR [eax+0x4]
  42c000:	mov    BYTE PTR [eax],0x1
  42c003:	pop    ebp
  42c004:	ret    0x8
  42c007:	push   ebp
  42c008:	mov    ebp,esp
  42c00a:	mov    eax,DWORD PTR [ebp+0x8]
  42c00d:	mov    eax,DWORD PTR [eax+0x4]
  42c010:	mov    BYTE PTR [eax],0x0
  42c013:	pop    ebp
  42c014:	ret    0x8
  42c017:	push   ebp
  42c018:	mov    ebp,esp
  42c01a:	mov    eax,DWORD PTR [ebp+0x8]
  42c01d:	mov    al,BYTE PTR [eax+0x4]
  42c020:	mov    ds:0x44f553,al
  42c025:	pop    ebp
  42c026:	ret    0x8
  42c029:	push   ebp
  42c02a:	mov    ebp,esp
  42c02c:	push   esi
  42c02d:	push   edi
  42c02e:	mov    edi,DWORD PTR [ebp+0xc]
  42c031:	xor    eax,eax
  42c033:	mov    esi,edi
  42c035:	cmp    WORD PTR [edi],ax
  42c038:	je     0x42c070
  42c03a:	movzx  eax,WORD PTR [esi]
  42c03d:	cmp    eax,0x30
  42c040:	jb     0x42c047
  42c042:	cmp    eax,0x39
  42c045:	jbe    0x42c066
  42c047:	push   eax
  42c048:	call   DWORD PTR ds:0x4643c0
  42c04e:	pop    ecx
  42c04f:	cmp    ax,0x41
  42c053:	jb     0x42c085
  42c055:	movzx  eax,WORD PTR [esi]
  42c058:	push   eax
  42c059:	call   DWORD PTR ds:0x4643c0
  42c05f:	pop    ecx
  42c060:	cmp    ax,0x46
  42c064:	ja     0x42c085
  42c066:	add    esi,0x2
  42c069:	xor    eax,eax
  42c06b:	cmp    WORD PTR [esi],ax
  42c06e:	jne    0x42c03a
  42c070:	mov    ecx,edi
  42c072:	call   0x43f48d
  42c077:	mov    ecx,DWORD PTR [ebp+0x8]
  42c07a:	pop    edi
  42c07b:	mov    ecx,DWORD PTR [ecx+0x4]
  42c07e:	pop    esi
  42c07f:	mov    DWORD PTR [ecx],eax
  42c081:	pop    ebp
  42c082:	ret    0x8
  42c085:	cmp    BYTE PTR ds:0x44e143,0x0
  42c08c:	jne    0x42c093
  42c08e:	call   0x42c2dc
  42c093:	mov    edx,0x41ef78
  42c098:	mov    ecx,0x3f5
  42c09d:	call   0x42f1c0
  42c0a2:	int3   
  42c0a3:	push   ebp
  42c0a4:	mov    ebp,esp
  42c0a6:	sub    esp,0x10
  42c0a9:	mov    eax,ds:0x448858
  42c0ae:	xor    eax,ebp
  42c0b0:	mov    DWORD PTR [ebp-0x4],eax
  42c0b3:	mov    ecx,DWORD PTR [ebp+0xc]
  42c0b6:	push   esi
  42c0b7:	mov    esi,DWORD PTR [ebp+0x8]
  42c0ba:	movzx  eax,WORD PTR [ecx]
  42c0bd:	mov    edx,ecx
  42c0bf:	jmp    0x42c0d3
  42c0c1:	cmp    ax,0x30
  42c0c5:	jb     0x42c0f4
  42c0c7:	cmp    ax,0x39
  42c0cb:	ja     0x42c0f4
  42c0cd:	add    edx,0x2
  42c0d0:	movzx  eax,WORD PTR [edx]
  42c0d3:	test   ax,ax
  42c0d6:	jne    0x42c0c1
  42c0d8:	push   ecx
  42c0d9:	call   DWORD PTR ds:0x4643c4
  42c0df:	pop    ecx
  42c0e0:	mov    ecx,DWORD PTR [esi+0x4]
  42c0e3:	pop    esi
  42c0e4:	mov    DWORD PTR [ecx],eax
  42c0e6:	mov    ecx,DWORD PTR [ebp-0x4]
  42c0e9:	xor    ecx,ebp
  42c0eb:	call   0x446dc7
  42c0f0:	leave  
  42c0f1:	ret    0x8
  42c0f4:	xor    edi,edi
  42c0f6:	cmp    BYTE PTR ds:0x44e143,0x0
  42c0fd:	mov    DWORD PTR [ebp-0x10],0x2f
  42c104:	mov    DWORD PTR [ebp-0xc],edi
  42c107:	mov    WORD PTR [ebp-0x8],di
  42c10b:	jne    0x42c112
  42c10d:	call   0x42c2dc
  42c112:	push   DWORD PTR [esi]
  42c114:	lea    eax,[ebp-0x10]
  42c117:	push   0x5
  42c119:	push   eax
  42c11a:	call   DWORD PTR ds:0x4643b0
  42c120:	lea    ecx,[ebp-0x10]
  42c123:	add    esp,0xc
  42c126:	lea    edx,[ecx+0x2]
  42c129:	mov    ax,WORD PTR [ecx]
  42c12c:	add    ecx,0x2
  42c12f:	cmp    ax,di
  42c132:	jne    0x42c129
  42c134:	sub    ecx,edx
  42c136:	sar    ecx,1
  42c138:	lea    ecx,[ecx*2-0x2]
  42c13f:	cmp    ecx,0xa
  42c142:	jae    0x42c158
  42c144:	xor    eax,eax
  42c146:	mov    WORD PTR [ebp+ecx*1-0x10],ax
  42c14b:	lea    edx,[ebp-0x10]
  42c14e:	mov    ecx,0x3f5
  42c153:	call   0x42f1c0
  42c158:	call   0x446f0c
  42c15d:	int3   
  42c15e:	and    DWORD PTR ds:0x448990,0x0
  42c165:	mov    BYTE PTR ds:0x44e4c3,0x1
  42c16c:	ret    0x8
  42c16f:	mov    eax,ds:0x44f530
  42c174:	test   eax,eax
  42c176:	jg     0x42c187
  42c178:	mov    ecx,0x3f8
  42c17d:	call   0x42f124
  42c182:	mov    eax,ds:0x44f530
  42c187:	dec    eax
  42c188:	mov    ds:0x44f530,eax
  42c18d:	test   eax,eax
  42c18f:	jle    0x42c1ff
  42c191:	mov    edx,DWORD PTR ds:0x44f52c
  42c197:	push   ebx
  42c198:	push   esi
  42c199:	push   edi
  42c19a:	add    edx,0x4
  42c19d:	mov    DWORD PTR ds:0x44f52c,edx
  42c1a3:	mov    edi,DWORD PTR [edx]
  42c1a5:	mov    esi,0x41e904
  42c1aa:	lea    ecx,[edi+0x2]
  42c1ad:	mov    bx,WORD PTR [ecx]
  42c1b0:	cmp    bx,WORD PTR [esi]
  42c1b3:	jne    0x42c1d3
  42c1b5:	test   bx,bx
  42c1b8:	je     0x42c1cf
  42c1ba:	mov    bx,WORD PTR [ecx+0x2]
  42c1be:	cmp    bx,WORD PTR [esi+0x2]
  42c1c2:	jne    0x42c1d3
  42c1c4:	add    ecx,0x4
  42c1c7:	add    esi,0x4
  42c1ca:	test   bx,bx
  42c1cd:	jne    0x42c1ad
  42c1cf:	xor    ecx,ecx
  42c1d1:	jmp    0x42c1d8
  42c1d3:	sbb    ecx,ecx
  42c1d5:	or     ecx,0x1
  42c1d8:	test   ecx,ecx
  42c1da:	je     0x42c1f2
  42c1dc:	push   edi
  42c1dd:	push   0x4489c0
  42c1e2:	call   0x42c3aa
  42c1e7:	mov    eax,ds:0x44f530
  42c1ec:	mov    edx,DWORD PTR ds:0x44f52c
  42c1f2:	dec    eax
  42c1f3:	mov    ds:0x44f530,eax
  42c1f8:	test   eax,eax
  42c1fa:	jg     0x42c19a
  42c1fc:	pop    edi
  42c1fd:	pop    esi
  42c1fe:	pop    ebx
  42c1ff:	ret    0x8
  42c202:	push   ebp
  42c203:	mov    ebp,esp
  42c205:	mov    ecx,DWORD PTR [ebp+0xc]
  42c208:	push   esi
  42c209:	push   edi
  42c20a:	call   0x43f4c7
  42c20f:	mov    esi,eax
  42c211:	lea    edx,[eax+0x1]
  42c214:	mov    cl,BYTE PTR [eax]
  42c216:	inc    eax
  42c217:	test   cl,cl
  42c219:	jne    0x42c214
  42c21b:	sub    eax,edx
  42c21d:	cmp    eax,0x3c
  42c220:	jbe    0x42c225
  42c222:	mov    BYTE PTR [esi+0x3c],cl
  42c225:	mov    eax,DWORD PTR [ebp+0x8]
  42c228:	mov    edi,DWORD PTR ds:0x464354
  42c22e:	mov    eax,DWORD PTR [eax]
  42c230:	movzx  eax,WORD PTR [eax+0x2]
  42c234:	cmp    eax,0x74
  42c237:	jne    0x42c24e
  42c239:	mov    eax,ds:0x4613b0
  42c23e:	test   eax,eax
  42c240:	je     0x42c246
  42c242:	push   eax
  42c243:	call   edi
  42c245:	pop    ecx
  42c246:	mov    DWORD PTR ds:0x4613b0,esi
  42c24c:	jmp    0x42c266
  42c24e:	cmp    eax,0x73
  42c251:	jne    0x42c266
  42c253:	mov    eax,ds:0x4613ac
  42c258:	test   eax,eax
  42c25a:	je     0x42c260
  42c25c:	push   eax
  42c25d:	call   edi
  42c25f:	pop    ecx
  42c260:	mov    DWORD PTR ds:0x4613ac,esi
  42c266:	push   esi
  42c267:	call   edi
  42c269:	pop    ecx
  42c26a:	pop    edi
  42c26b:	pop    esi
  42c26c:	pop    ebp
  42c26d:	ret    0x8
  42c270:	push   ebp
  42c271:	mov    ebp,esp
  42c273:	push   esi
  42c274:	mov    esi,DWORD PTR [ebp+0x8]
  42c277:	mov    eax,DWORD PTR [esi+0x4]
  42c27a:	cmp    DWORD PTR [eax],0x0
  42c27d:	je     0x42c287
  42c27f:	mov    ecx,DWORD PTR [ebp+0xc]
  42c282:	call   0x42c37a
  42c287:	mov    ecx,DWORD PTR [ebp+0xc]
  42c28a:	call   0x43f48d
  42c28f:	mov    ecx,DWORD PTR [esi+0x4]
  42c292:	pop    esi
  42c293:	mov    DWORD PTR [ecx],eax
  42c295:	pop    ebp
  42c296:	ret    0x8
  42c299:	push   ebp
  42c29a:	mov    ebp,esp
  42c29c:	push   esi
  42c29d:	mov    esi,DWORD PTR [ebp+0x8]
  42c2a0:	mov    eax,DWORD PTR [esi+0x4]
  42c2a3:	cmp    DWORD PTR [eax],0x0
  42c2a6:	je     0x42c2b1
  42c2a8:	push   DWORD PTR [eax]
  42c2aa:	call   DWORD PTR ds:0x464354
  42c2b0:	pop    ecx
  42c2b1:	mov    ecx,DWORD PTR [ebp+0xc]
  42c2b4:	call   0x43f48d
  42c2b9:	mov    ecx,DWORD PTR [esi+0x4]
  42c2bc:	pop    esi
  42c2bd:	mov    DWORD PTR [ecx],eax
  42c2bf:	pop    ebp
  42c2c0:	ret    0x8
  42c2c3:	push   ebp
  42c2c4:	mov    ebp,esp
  42c2c6:	push   DWORD PTR [ebp+0xc]
  42c2c9:	push   DWORD PTR [ebp+0x8]
  42c2cc:	call   0x42c299
  42c2d1:	mov    BYTE PTR ds:0x44f549,0x1
  42c2d8:	pop    ebp
  42c2d9:	ret    0x8
  42c2dc:	cmp    BYTE PTR ds:0x462ba7,0x0
  42c2e3:	mov    BYTE PTR ds:0x44e143,0x1
  42c2ea:	je     0x42c2f9
  42c2ec:	push   0x41ef80
  42c2f1:	call   DWORD PTR ds:0x4643f8
  42c2f7:	pop    ecx
  42c2f8:	ret    
  42c2f9:	call   DWORD PTR ds:0x4643f0
  42c2ff:	add    eax,0x40
  42c302:	push   eax
  42c303:	push   0x41ef80
  42c308:	call   DWORD PTR ds:0x4643fc
  42c30e:	pop    ecx
  42c30f:	pop    ecx
  42c310:	ret    
  42c311:	cmp    BYTE PTR ds:0x44e143,0x0
  42c318:	jne    0x42c31f
  42c31a:	call   0x42c2dc
  42c31f:	mov    ecx,0x403c70
  42c324:	call   0x441ddb
  42c329:	push   0x0
  42c32b:	call   DWORD PTR ds:0x464388
  42c331:	int3   
  42c332:	cmp    BYTE PTR ds:0x44e143,0x0
  42c339:	jne    0x42c340
  42c33b:	call   0x42c2dc
  42c340:	mov    ecx,0x41f070
  42c345:	call   0x441ddb
  42c34a:	push   0x0
  42c34c:	call   DWORD PTR ds:0x464388
  42c352:	int3   
  42c353:	cmp    BYTE PTR ds:0x44e143,0x0
  42c35a:	push   esi
  42c35b:	mov    esi,ecx
  42c35d:	jne    0x42c364
  42c35f:	call   0x42c2dc
  42c364:	test   esi,esi
  42c366:	jne    0x42c36d
  42c368:	mov    esi,0x41e5a8
  42c36d:	mov    edx,esi
  42c36f:	mov    ecx,0xfa8
  42c374:	pop    esi
  42c375:	jmp    0x42f1c0
  42c37a:	cmp    BYTE PTR ds:0x44e4c2,0x0
  42c381:	push   esi
  42c382:	mov    esi,ecx
  42c384:	jne    0x42c394
  42c386:	cmp    BYTE PTR ds:0x44e143,0x0
  42c38d:	jne    0x42c394
  42c38f:	call   0x42c2dc
  42c394:	test   esi,esi
  42c396:	jne    0x42c39d
  42c398:	mov    esi,0x41e5a8
  42c39d:	mov    edx,esi
  42c39f:	mov    ecx,0xfb2
  42c3a4:	pop    esi
  42c3a5:	jmp    0x42f1c0
  42c3aa:	push   ebp
  42c3ab:	mov    ebp,esp
  42c3ad:	mov    eax,DWORD PTR [ebp+0x8]
  42c3b0:	push   esi
  42c3b1:	push   edi
  42c3b2:	mov    edi,DWORD PTR [eax+0x4]
  42c3b5:	jmp    0x42c3b9
  42c3b7:	mov    edi,eax
  42c3b9:	mov    eax,DWORD PTR [edi]
  42c3bb:	test   eax,eax
  42c3bd:	jne    0x42c3b7
  42c3bf:	mov    esi,DWORD PTR [ebp+0xc]
  42c3c2:	lea    ecx,[esi+0x2]
  42c3c5:	mov    ax,WORD PTR [esi]
  42c3c8:	add    esi,0x2
  42c3cb:	test   ax,ax
  42c3ce:	jne    0x42c3c5
  42c3d0:	sub    esi,ecx
  42c3d2:	sar    esi,1
  42c3d4:	inc    esi
  42c3d5:	lea    ecx,[esi*2+0x6]
  42c3dc:	call   0x43f42e
  42c3e1:	push   DWORD PTR [ebp+0xc]
  42c3e4:	mov    DWORD PTR [edi],eax
  42c3e6:	add    eax,0x4
  42c3e9:	push   esi
  42c3ea:	push   eax
  42c3eb:	call   DWORD PTR ds:0x46439c
  42c3f1:	add    esp,0xc
  42c3f4:	pop    edi
  42c3f5:	pop    esi
  42c3f6:	pop    ebp
  42c3f7:	ret    0x8
  42c3fa:	push   ebp
  42c3fb:	mov    ebp,esp
  42c3fd:	mov    eax,DWORD PTR [ebp+0x8]
  42c400:	push   esi
  42c401:	mov    eax,DWORD PTR [eax+0x4]
  42c404:	mov    esi,DWORD PTR ds:0x44f544
  42c40a:	mov    BYTE PTR [eax],0x1
  42c40d:	test   esi,esi
  42c40f:	je     0x42c42f
  42c411:	mov    ecx,DWORD PTR ds:0x44e4d8
  42c417:	push   ecx
  42c418:	mov    eax,DWORD PTR [ecx]
  42c41a:	mov    ds:0x44e4d8,eax
  42c41f:	call   DWORD PTR ds:0x464354
  42c425:	pop    ecx
  42c426:	dec    esi
  42c427:	jne    0x42c411
  42c429:	mov    DWORD PTR ds:0x44f544,esi
  42c42f:	pop    esi
  42c430:	pop    ebp
  42c431:	ret    0x8
  42c434:	push   ebp
  42c435:	mov    ebp,esp
  42c437:	sub    esp,0x210
  42c43d:	mov    eax,ds:0x448858
  42c442:	xor    eax,ebp
  42c444:	mov    DWORD PTR [ebp-0x4],eax
  42c447:	push   ebx
  42c448:	push   esi
  42c449:	xor    ebx,ebx
  42c44b:	push   ebx
  42c44c:	push   ebx
  42c44d:	push   ebx
  42c44e:	push   ebx
  42c44f:	push   0x100
  42c454:	lea    eax,[ebp-0x20c]
  42c45a:	push   eax
  42c45b:	push   0x3
  42c45d:	lea    eax,[ebp-0xc]
  42c460:	mov    esi,ecx
  42c462:	push   eax
  42c463:	push   esi
  42c464:	call   DWORD PTR ds:0x4643ac
  42c46a:	lea    ecx,[ebp-0xc]
  42c46d:	add    esp,0x24
  42c470:	lea    edx,[ecx+0x2]
  42c473:	mov    ax,WORD PTR [ecx]
  42c476:	add    ecx,0x2
  42c479:	cmp    ax,bx
  42c47c:	jne    0x42c473
  42c47e:	sub    ecx,edx
  42c480:	lea    edx,[ebp-0x20c]
  42c486:	push   edi
  42c487:	sar    ecx,1
  42c489:	lea    edi,[edx+0x2]
  42c48c:	mov    ax,WORD PTR [edx]
  42c48f:	add    edx,0x2
  42c492:	cmp    ax,bx
  42c495:	jne    0x42c48c
  42c497:	sub    edx,edi
  42c499:	sar    edx,1
  42c49b:	pop    edi
  42c49c:	lea    eax,[edx+ecx*1]
  42c49f:	lea    esi,[esi+eax*2]
  42c4a2:	mov    ecx,esi
  42c4a4:	lea    edx,[ecx+0x2]
  42c4a7:	mov    ax,WORD PTR [ecx]
  42c4aa:	add    ecx,0x2
  42c4ad:	cmp    ax,bx
  42c4b0:	jne    0x42c4a7
  42c4b2:	sub    ecx,edx
  42c4b4:	sar    ecx,1
  42c4b6:	jne    0x42c4c9
  42c4b8:	mov    ecx,0x2335
  42c4bd:	call   0x42eb12
  42c4c2:	mov    ecx,eax
  42c4c4:	call   0x42c37a
  42c4c9:	mov    ecx,DWORD PTR [ebp-0x4]
  42c4cc:	mov    eax,esi
  42c4ce:	pop    esi
  42c4cf:	xor    ecx,ebp
  42c4d1:	pop    ebx
  42c4d2:	call   0x446dc7
  42c4d7:	leave  
  42c4d8:	ret    
  42c4d9:	push   esi
  42c4da:	mov    esi,ecx
  42c4dc:	push   edi
  42c4dd:	movzx  edi,WORD PTR [esi]
  42c4e0:	test   di,di
  42c4e3:	je     0x42c51f
  42c4e5:	mov    ecx,DWORD PTR ds:0x44e4bc
  42c4eb:	push   ebx
  42c4ec:	push   0x2
  42c4ee:	pop    ebx
  42c4ef:	movzx  edx,WORD PTR [ecx+0x3a]
  42c4f3:	mov    eax,DWORD PTR [ecx+0x3c]
  42c4f6:	mov    WORD PTR [edx+eax*1],di
  42c4fa:	add    WORD PTR [ecx+0x3a],bx
  42c4fe:	mov    eax,0x1000
  42c503:	cmp    WORD PTR [ecx+0x3a],ax
  42c507:	jb     0x42c514
  42c509:	call   0x429cb5
  42c50e:	mov    ecx,DWORD PTR ds:0x44e4bc
  42c514:	add    esi,ebx
  42c516:	movzx  edi,WORD PTR [esi]
  42c519:	test   di,di
  42c51c:	jne    0x42c4ef
  42c51e:	pop    ebx
  42c51f:	pop    edi
  42c520:	pop    esi
  42c521:	ret    
  42c522:	push   ebp
  42c523:	mov    ebp,esp
  42c525:	push   ecx
  42c526:	push   ebx
  42c527:	push   esi
  42c528:	push   edi
  42c529:	mov    edi,edx
  42c52b:	xor    ebx,ebx
  42c52d:	mov    DWORD PTR [ebp-0x4],ecx
  42c530:	mov    esi,edi
  42c532:	cmp    WORD PTR [edi],bx
  42c535:	je     0x42c552
  42c537:	movzx  eax,WORD PTR [esi]
  42c53a:	push   eax
  42c53b:	call   DWORD PTR ds:0x4643c8
  42c541:	pop    ecx
  42c542:	test   eax,eax
  42c544:	jne    0x42c550
  42c546:	add    esi,0x2
  42c549:	cmp    WORD PTR [esi],bx
  42c54c:	jne    0x42c537
  42c54e:	jmp    0x42c552
  42c550:	mov    bl,0x1
  42c552:	mov    ecx,DWORD PTR [ebp-0x4]
  42c555:	call   0x42c4d9
  42c55a:	mov    esi,0x41f138
  42c55f:	test   bl,bl
  42c561:	je     0x42c56a
  42c563:	mov    ecx,esi
  42c565:	call   0x42c4d9
  42c56a:	mov    ecx,edi
  42c56c:	call   0x42c4d9
  42c571:	test   bl,bl
  42c573:	je     0x42c57c
  42c575:	mov    ecx,esi
  42c577:	call   0x42c4d9
  42c57c:	mov    ecx,0x41f13c
  42c581:	call   0x42c4d9
  42c586:	pop    edi
  42c587:	pop    esi
  42c588:	pop    ebx
  42c589:	leave  
  42c58a:	ret    
  42c58b:	push   ebp
  42c58c:	mov    ebp,esp
  42c58e:	sub    esp,0x420
  42c594:	mov    eax,ds:0x448858
  42c599:	xor    eax,ebp
  42c59b:	mov    DWORD PTR [ebp-0x4],eax
  42c59e:	cmp    WORD PTR ds:0x45f99c,0x1
  42c5a6:	push   ebx
  42c5a7:	push   esi
  42c5a8:	push   edi
  42c5a9:	jae    0x42c5c2
  42c5ab:	cmp    BYTE PTR ds:0x44e4c2,0x0
  42c5b2:	jne    0x42c5c2
  42c5b4:	cmp    BYTE PTR ds:0x44e143,0x0
  42c5bb:	jne    0x42c5c2
  42c5bd:	call   0x42c2dc
  42c5c2:	mov    ecx,DWORD PTR ds:0x45f884
  42c5c8:	xor    edi,edi
  42c5ca:	test   ecx,ecx
  42c5cc:	je     0x42c5d9
  42c5ce:	call   0x433eae
  42c5d3:	mov    DWORD PTR ds:0x45f884,edi
  42c5d9:	mov    ecx,DWORD PTR ds:0x44f574
  42c5df:	test   ecx,ecx
  42c5e1:	je     0x42c5ee
  42c5e3:	call   0x433eae
  42c5e8:	mov    DWORD PTR ds:0x44f574,edi
  42c5ee:	mov    ecx,DWORD PTR ds:0x45f9b0
  42c5f4:	test   ecx,ecx
  42c5f6:	je     0x42c603
  42c5f8:	call   0x433eae
  42c5fd:	mov    DWORD PTR ds:0x45f9b0,edi
  42c603:	mov    ecx,DWORD PTR ds:0x460e80
  42c609:	test   ecx,ecx
  42c60b:	je     0x42c61a
  42c60d:	mov    esi,DWORD PTR [ecx]
  42c60f:	call   0x433eae
  42c614:	mov    ecx,esi
  42c616:	test   esi,esi
  42c618:	jne    0x42c60d
  42c61a:	mov    edx,0x41f1c2
  42c61f:	xor    cl,cl
  42c621:	call   0x433cd8
  42c626:	mov    ds:0x44e4bc,eax
  42c62b:	mov    eax,ds:0x44f50c
  42c630:	test   eax,eax
  42c632:	jne    0x42c63c
  42c634:	mov    eax,ds:0x44e4e4
  42c639:	add    eax,0x4
  42c63c:	push   0x41f144
  42c641:	mov    ecx,eax
  42c643:	call   0x42c434
  42c648:	mov    edx,eax
  42c64a:	mov    ecx,0x44e4cc
  42c64f:	call   0x42b310
  42c654:	mov    ecx,0x41f150
  42c659:	mov    ds:0x44e4cc,eax
  42c65e:	call   0x42c4d9
  42c663:	cmp    BYTE PTR ds:0x44e042,0x0
  42c66a:	je     0x42c676
  42c66c:	mov    ecx,0x41f154
  42c671:	call   0x42c4d9
  42c676:	mov    edx,DWORD PTR ds:0x44f508
  42c67c:	test   edx,edx
  42c67e:	je     0x42c68a
  42c680:	mov    ecx,0x41f168
  42c685:	call   0x42c522
  42c68a:	cmp    DWORD PTR ds:0x44f514,edi
  42c690:	setne  al
  42c693:	or     BYTE PTR ds:0x44f552,al
  42c699:	je     0x42c6c3
  42c69b:	mov    ecx,DWORD PTR ds:0x44e4cc
  42c6a1:	push   0x41f174
  42c6a6:	call   0x42c434
  42c6ab:	mov    edx,eax
  42c6ad:	mov    ecx,0x44f514
  42c6b2:	call   0x42b310
  42c6b7:	mov    edx,eax
  42c6b9:	mov    ecx,0x41f180
  42c6be:	call   0x42c522
  42c6c3:	mov    edx,DWORD PTR ds:0x44e4cc
  42c6c9:	mov    ecx,0x41f18c
  42c6ce:	call   0x42c522
  42c6d3:	cmp    DWORD PTR ds:0x44f504,edi
  42c6d9:	je     0x42c6fa
  42c6db:	mov    ecx,0x41f198
  42c6e0:	call   0x42c4d9
  42c6e5:	mov    ecx,DWORD PTR ds:0x44f504
  42c6eb:	call   0x42c4d9
  42c6f0:	mov    ecx,0x41f13c
  42c6f5:	call   0x42c4d9
  42c6fa:	mov    esi,DWORD PTR ds:0x44e4e4
  42c700:	mov    ebx,0x41e5a8
  42c705:	jmp    0x42c713
  42c707:	lea    edx,[esi+0x4]
  42c70a:	mov    ecx,ebx
  42c70c:	call   0x42c522
  42c711:	mov    esi,DWORD PTR [esi]
  42c713:	test   esi,esi
  42c715:	jne    0x42c707
  42c717:	mov    esi,DWORD PTR ds:0x44e4dc
  42c71d:	jmp    0x42c72b
  42c71f:	lea    edx,[esi+0x4]
  42c722:	mov    ecx,ebx
  42c724:	call   0x42c522
  42c729:	mov    esi,DWORD PTR [esi]
  42c72b:	test   esi,esi
  42c72d:	jne    0x42c71f
  42c72f:	mov    ecx,DWORD PTR ds:0x44e4bc
  42c735:	call   0x433eae
  42c73a:	mov    eax,ds:0x44f500
  42c73f:	mov    esi,0x41e904
  42c744:	mov    DWORD PTR ds:0x44e4bc,edi
  42c74a:	mov    DWORD PTR [ebp-0x420],esi
  42c750:	mov    DWORD PTR [ebp-0x41c],0x41f1c0
  42c75a:	mov    DWORD PTR [ebp-0x418],edi
  42c760:	test   eax,eax
  42c762:	je     0x42c76e
  42c764:	lea    ecx,[ebp-0x420]
  42c76a:	push   ecx
  42c76b:	push   eax
  42c76c:	jmp    0x42c7e5
  42c76e:	push   edi
  42c76f:	push   edi
  42c770:	push   edi
  42c771:	push   edi
  42c772:	push   0x100
  42c777:	lea    eax,[ebp-0x414]
  42c77d:	push   eax
  42c77e:	push   0x3
  42c780:	lea    eax,[ebp-0xc]
  42c783:	push   eax
  42c784:	mov    eax,ds:0x46437c
  42c789:	push   DWORD PTR [eax]
  42c78b:	call   DWORD PTR ds:0x4643ac
  42c791:	push   0x41f144
  42c796:	push   esi
  42c797:	lea    eax,[ebp-0x414]
  42c79d:	push   eax
  42c79e:	lea    eax,[ebp-0xc]
  42c7a1:	push   eax
  42c7a2:	lea    eax,[ebp-0x214]
  42c7a8:	push   0x104
  42c7ad:	push   eax
  42c7ae:	call   DWORD PTR ds:0x4643d8
  42c7b4:	lea    eax,[ebp-0x214]
  42c7ba:	push   edi
  42c7bb:	push   eax
  42c7bc:	call   DWORD PTR ds:0x4643d0
  42c7c2:	add    esp,0x44
  42c7c5:	test   eax,eax
  42c7c7:	lea    eax,[ebp-0x420]
  42c7cd:	push   eax
  42c7ce:	jne    0x42c7e0
  42c7d0:	lea    eax,[ebp-0x214]
  42c7d6:	push   eax
  42c7d7:	push   edi
  42c7d8:	call   DWORD PTR ds:0x4643d4
  42c7de:	jmp    0x42c7ec
  42c7e0:	push   0x41f1ac
  42c7e5:	push   edi
  42c7e6:	call   DWORD PTR ds:0x4643cc
  42c7ec:	mov    esi,eax
  42c7ee:	add    esp,0xc
  42c7f1:	test   esi,esi
  42c7f3:	je     0x42c813
  42c7f5:	cmp    esi,0xffffffff
  42c7f8:	jne    0x42c807
  42c7fa:	push   edi
  42c7fb:	xor    edx,edx
  42c7fd:	mov    ecx,0x3fc
  42c802:	call   0x42ee80
  42c807:	push   0x41f1c2
  42c80c:	call   DWORD PTR ds:0x46449c
  42c812:	pop    ecx
  42c813:	push   esi
  42c814:	call   DWORD PTR ds:0x464388
  42c81a:	int3   
  42c81b:	cmp    BYTE PTR ds:0x44f54d,0x0
  42c822:	je     0x42c83b
  42c824:	cmp    DWORD PTR ds:0x44f538,0x0
  42c82b:	je     0x42c83b
  42c82d:	cmp    DWORD PTR ds:0x45f9b0,0x0
  42c834:	je     0x42c83b
  42c836:	call   0x43b009
  42c83b:	cmp    DWORD PTR ds:0x44e4c4,0x0
  42c842:	je     0x42c860
  42c844:	mov    ecx,DWORD PTR ds:0x45f884
  42c84a:	test   ecx,ecx
  42c84c:	je     0x42c860
  42c84e:	call   0x433eae
  42c853:	push   DWORD PTR ds:0x44e4c4
  42c859:	call   DWORD PTR ds:0x46449c
  42c85f:	pop    ecx
  42c860:	cmp    DWORD PTR ds:0x44e4d0,0x0
  42c867:	je     0x42c885
  42c869:	mov    ecx,DWORD PTR ds:0x44f574
  42c86f:	test   ecx,ecx
  42c871:	je     0x42c885
  42c873:	call   0x433eae
  42c878:	push   DWORD PTR ds:0x44e4d0
  42c87e:	call   DWORD PTR ds:0x46449c
  42c884:	pop    ecx
  42c885:	mov    ecx,DWORD PTR ds:0x45f9b0
  42c88b:	test   ecx,ecx
  42c88d:	je     0x42c894
  42c88f:	call   0x433eae
  42c894:	push   0x1
  42c896:	call   DWORD PTR ds:0x464388
  42c89c:	int3   
  42c89d:	mov    BYTE PTR ds:0x44e13b,0x1
  42c8a4:	ret    
  42c8a5:	push   ebx
  42c8a6:	mov    bl,BYTE PTR [ecx+0x5]
  42c8a9:	test   bl,0x8
  42c8ac:	jne    0x42c8b2
  42c8ae:	xor    eax,eax
  42c8b0:	pop    ebx
  42c8b1:	ret    
  42c8b2:	movzx  edx,bl
  42c8b5:	add    ecx,0x6
  42c8b8:	mov    DWORD PTR ds:0x44f588,ecx
  42c8be:	and    edx,0x7
  42c8c1:	jle    0x42c8cd
  42c8c3:	movzx  eax,BYTE PTR [ecx]
  42c8c6:	add    ecx,eax
  42c8c8:	dec    edx
  42c8c9:	test   edx,edx
  42c8cb:	jg     0x42c8c3
  42c8cd:	test   bl,0x10
  42c8d0:	je     0x42c8d6
  42c8d2:	mov    eax,DWORD PTR [ecx]
  42c8d4:	pop    ebx
  42c8d5:	ret    
  42c8d6:	mov    eax,ecx
  42c8d8:	pop    ebx
  42c8d9:	ret    
  42c8da:	push   ebp
  42c8db:	mov    ebp,esp
  42c8dd:	push   ecx
  42c8de:	push   ecx
  42c8df:	push   ebx
  42c8e0:	push   esi
  42c8e1:	mov    esi,edx
  42c8e3:	push   edi
  42c8e4:	mov    al,BYTE PTR [esi]
  42c8e6:	mov    ah,BYTE PTR [esi+0x1]
  42c8e9:	mov    edi,ecx
  42c8eb:	mov    ecx,DWORD PTR ds:0x4631dc
  42c8f1:	xor    ebx,ebx
  42c8f3:	mov    DWORD PTR [ebp-0x8],ecx
  42c8f6:	mov    BYTE PTR [ebp-0x2],al
  42c8f9:	mov    BYTE PTR [ebp-0x1],ah
  42c8fc:	test   al,0x3
  42c8fe:	je     0x42c951
  42c900:	mov    ecx,DWORD PTR ds:0x44f588
  42c906:	test   ecx,ecx
  42c908:	je     0x42c94e
  42c90a:	movzx  eax,al
  42c90d:	and    eax,0x3
  42c910:	cmp    eax,0x1
  42c913:	jle    0x42c920
  42c915:	lea    edx,[eax-0x1]
  42c918:	movzx  eax,BYTE PTR [ecx]
  42c91b:	add    ecx,eax
  42c91d:	dec    edx
  42c91e:	jne    0x42c918
  42c920:	xor    dl,dl
  42c922:	call   0x42f6c1
  42c927:	mov    ecx,eax
  42c929:	test   ecx,ecx
  42c92b:	je     0x42c948
  42c92d:	test   DWORD PTR [ecx+0x4],0x8000
  42c934:	mov    ebx,DWORD PTR [ecx+0x8]
  42c937:	je     0x42c93b
  42c939:	neg    ebx
  42c93b:	mov    eax,ds:0x45f83c
  42c940:	mov    DWORD PTR [ecx],eax
  42c942:	mov    DWORD PTR ds:0x45f83c,ecx
  42c948:	mov    ah,BYTE PTR [ebp-0x1]
  42c94b:	mov    al,BYTE PTR [ebp-0x2]
  42c94e:	mov    ecx,DWORD PTR [ebp-0x8]
  42c951:	test   al,0x10
  42c953:	je     0x42c976
  42c955:	mov    ebx,DWORD PTR [esi+0x2]
  42c958:	test   BYTE PTR [ebx+0x2c],0x40
  42c95c:	je     0x42c964
  42c95e:	mov    ebx,ecx
  42c960:	neg    ebx
  42c962:	jmp    0x42c96f
  42c964:	mov    ebx,DWORD PTR [ebx+0x1c]
  42c967:	sub    ebx,DWORD PTR ds:0x45f830
  42c96d:	sub    ebx,ecx
  42c96f:	mov    edx,0x81b
  42c974:	jmp    0x42c97b
  42c976:	mov    edx,0x7e8
  42c97b:	test   ah,0x40
  42c97e:	je     0x42c98b
  42c980:	add    ebx,DWORD PTR [esi+0xa]
  42c983:	add    esi,0xe
  42c986:	mov    DWORD PTR [ebp-0x8],esi
  42c989:	jmp    0x42c994
  42c98b:	lea    eax,[esi+0xa]
  42c98e:	mov    DWORD PTR [ebp-0x8],eax
  42c991:	mov    ah,BYTE PTR [ebp-0x1]
  42c994:	movzx  ecx,ah
  42c997:	mov    eax,ecx
  42c999:	shr    ecx,0x4
  42c99c:	and    eax,0xf
  42c99f:	and    ecx,0x3
  42c9a2:	add    edi,eax
  42c9a4:	sub    ecx,0x0
  42c9a7:	je     0x42c9ef
  42c9a9:	dec    ecx
  42c9aa:	je     0x42c9bb
  42c9ac:	dec    ecx
  42c9ad:	dec    ecx
  42c9ae:	jne    0x42ca59
  42c9b4:	mov    DWORD PTR [edi],ebx
  42c9b6:	jmp    0x42ca59
  42c9bb:	cmp    edx,0x81b
  42c9c1:	jne    0x42c9dd
  42c9c3:	mov    ecx,0x7fff
  42c9c8:	mov    eax,0xffff8000
  42c9cd:	cmp    ebx,ecx
  42c9cf:	jg     0x42c9d5
  42c9d1:	cmp    ebx,eax
  42c9d3:	jge    0x42c9dd
  42c9d5:	test   ebx,ebx
  42c9d7:	jle    0x42ca0c
  42c9d9:	sub    ebx,ecx
  42c9db:	jmp    0x42ca10
  42c9dd:	lea    eax,[ebx+0x10000]
  42c9e3:	cmp    eax,0x1ffff
  42c9e8:	ja     0x42ca52
  42c9ea:	mov    WORD PTR [edi],bx
  42c9ed:	jmp    0x42ca59
  42c9ef:	cmp    edx,0x81b
  42c9f5:	jne    0x42ca41
  42c9f7:	push   0xffffff80
  42c9f9:	pop    eax
  42c9fa:	cmp    ebx,0x7f
  42c9fd:	jg     0x42ca03
  42c9ff:	cmp    ebx,eax
  42ca01:	jge    0x42ca41
  42ca03:	test   ebx,ebx
  42ca05:	jle    0x42ca0c
  42ca07:	sub    ebx,0x7f
  42ca0a:	jmp    0x42ca10
  42ca0c:	sub    eax,ebx
  42ca0e:	mov    ebx,eax
  42ca10:	push   0x50
  42ca12:	pop    ecx
  42ca13:	call   0x43f45b
  42ca18:	push   ebx
  42ca19:	push   0x41f230
  42ca1e:	mov    esi,eax
  42ca20:	push   0x28
  42ca22:	push   esi
  42ca23:	call   0x445ff6
  42ca28:	add    esp,0x10
  42ca2b:	mov    edx,esi
  42ca2d:	mov    ecx,0x81b
  42ca32:	call   0x42f1c0
  42ca37:	push   esi
  42ca38:	call   DWORD PTR ds:0x464354
  42ca3e:	pop    ecx
  42ca3f:	jmp    0x42ca59
  42ca41:	lea    eax,[ebx+0x100]
  42ca47:	cmp    eax,0x1ff
  42ca4c:	ja     0x42ca52
  42ca4e:	mov    BYTE PTR [edi],bl
  42ca50:	jmp    0x42ca59
  42ca52:	mov    ecx,edx
  42ca54:	call   0x42f124
  42ca59:	mov    eax,DWORD PTR [ebp-0x8]
  42ca5c:	pop    edi
  42ca5d:	pop    esi
  42ca5e:	pop    ebx
  42ca5f:	leave  
  42ca60:	ret    0x4
  42ca63:	push   ebp
  42ca64:	mov    ebp,esp
  42ca66:	xor    eax,eax
  42ca68:	mov    DWORD PTR [ecx],eax
  42ca6a:	mov    DWORD PTR [ecx+0x4],eax
  42ca6d:	mov    DWORD PTR [ecx+0x8],eax
  42ca70:	mov    WORD PTR [ecx+0x10],ax
  42ca74:	mov    DWORD PTR [ecx+0x14],eax
  42ca77:	mov    DWORD PTR [ecx+0x18],eax
  42ca7a:	mov    eax,DWORD PTR [ebp+0x10]
  42ca7d:	mov    DWORD PTR [ecx+0x1c],eax
  42ca80:	mov    DWORD PTR [ecx+0xc],0x1000
  42ca87:	mov    eax,ecx
  42ca89:	pop    ebp
  42ca8a:	ret    0xc
  42ca8d:	push   ebp
  42ca8e:	mov    ebp,esp
  42ca90:	mov    eax,DWORD PTR [ebp+0x8]
  42ca93:	push   ebx
  42ca94:	mov    ebx,ecx
  42ca96:	push   esi
  42ca97:	push   edi
  42ca98:	lea    ecx,[ebx+0x4]
  42ca9b:	mov    DWORD PTR [ebx],eax
  42ca9d:	call   0x42dc76
  42caa2:	and    DWORD PTR [ebx+0x430],0x0
  42caa9:	lea    edi,[ebx+0x434]
  42caaf:	lea    esi,[edi+0x120]
  42cab5:	push   esi
  42cab6:	push   ecx
  42cab7:	push   ecx
  42cab8:	mov    ecx,edi
  42caba:	call   0x42ca63
  42cabf:	lea    eax,[edi+0x20]
  42cac2:	mov    DWORD PTR [esi+0x4],eax
  42cac5:	mov    DWORD PTR [esi],0x41f24c
  42cacb:	mov    ecx,0x100
  42cad0:	mov    DWORD PTR [esi+0x8],ecx
  42cad3:	and    DWORD PTR [edi+0x12c],0x0
  42cada:	mov    DWORD PTR [edi],eax
  42cadc:	mov    DWORD PTR [edi+0x4],eax
  42cadf:	mov    DWORD PTR [edi+0x8],ecx
  42cae2:	pop    edi
  42cae3:	pop    esi
  42cae4:	mov    eax,ebx
  42cae6:	pop    ebx
  42cae7:	pop    ebp
  42cae8:	ret    0x4
  42caeb:	push   ebp
  42caec:	mov    ebp,esp
  42caee:	push   ecx
  42caef:	push   ebx
  42caf0:	push   esi
  42caf1:	mov    esi,DWORD PTR ds:0x45f69c
  42caf7:	push   ecx
  42caf8:	push   0x1
  42cafa:	lea    eax,[ebp-0x4]
  42cafd:	xor    ebx,ebx
  42caff:	push   eax
  42cb00:	lea    ecx,[esi+0x4]
  42cb03:	mov    BYTE PTR [ebp-0x4],bl
  42cb06:	call   0x428fcf
  42cb0b:	test   eax,eax
  42cb0d:	je     0x42cb17
  42cb0f:	inc    DWORD PTR [esi+0x430]
  42cb15:	mov    bl,0x1
  42cb17:	pop    esi
  42cb18:	mov    al,bl
  42cb1a:	pop    ebx
  42cb1b:	leave  
  42cb1c:	ret    0x4
  42cb1f:	push   ebx
  42cb20:	push   esi
  42cb21:	push   edi
  42cb22:	push   0xf2
  42cb27:	mov    ebx,ecx
  42cb29:	call   0x42ca8d
  42cb2e:	lea    edi,[ebx+0x57c]
  42cb34:	lea    esi,[edi+0x820]
  42cb3a:	push   esi
  42cb3b:	push   ecx
  42cb3c:	push   ecx
  42cb3d:	mov    ecx,edi
  42cb3f:	call   0x42ca63
  42cb44:	lea    eax,[edi+0x20]
  42cb47:	mov    DWORD PTR [esi],0x41f24c
  42cb4d:	mov    DWORD PTR [esi+0x4],eax
  42cb50:	mov    ecx,0x800
  42cb55:	mov    DWORD PTR [esi+0x8],ecx
  42cb58:	and    DWORD PTR [edi+0x82c],0x0
  42cb5f:	mov    DWORD PTR [edi+0x8],ecx
  42cb62:	lea    ecx,[ebx+0xdac]
  42cb68:	mov    DWORD PTR [edi],eax
  42cb6a:	mov    DWORD PTR [edi+0x4],eax
  42cb6d:	call   0x42dc76
  42cb72:	mov    eax,ds:0x45f694
  42cb77:	and    DWORD PTR [ebx+0x11d8],0x0
  42cb7e:	pop    edi
  42cb7f:	mov    DWORD PTR [ebx+0x11dc],eax
  42cb85:	pop    esi
  42cb86:	mov    eax,ebx
  42cb88:	pop    ebx
  42cb89:	ret    0x4
  42cb8c:	push   ebp
  42cb8d:	mov    ebp,esp
  42cb8f:	push   ecx
  42cb90:	push   ecx
  42cb91:	push   ebx
  42cb92:	push   esi
  42cb93:	push   edi
  42cb94:	push   0xf3
  42cb99:	mov    edi,ecx
  42cb9b:	call   0x42ca8d
  42cba0:	lea    esi,[edi+0x564]
  42cba6:	mov    ecx,esi
  42cba8:	call   0x42dc76
  42cbad:	and    DWORD PTR [esi+0x42c],0x0
  42cbb4:	push   ecx
  42cbb5:	push   0x1
  42cbb7:	lea    eax,[ebp-0x4]
  42cbba:	push   eax
  42cbbb:	lea    ecx,[edi+0x4]
  42cbbe:	mov    BYTE PTR [ebp-0x4],0x0
  42cbc2:	call   0x428fcf
  42cbc7:	test   eax,eax
  42cbc9:	je     0x42cbd1
  42cbcb:	inc    DWORD PTR [edi+0x430]
  42cbd1:	and    DWORD PTR [ebp-0x8],0x0
  42cbd5:	push   ecx
  42cbd6:	push   0x4
  42cbd8:	lea    eax,[ebp-0x8]
  42cbdb:	push   eax
  42cbdc:	mov    ecx,esi
  42cbde:	call   0x428fcf
  42cbe3:	test   eax,eax
  42cbe5:	je     0x42cbed
  42cbe7:	inc    DWORD PTR [esi+0x42c]
  42cbed:	mov    eax,edi
  42cbef:	pop    edi
  42cbf0:	pop    esi
  42cbf1:	pop    ebx
  42cbf2:	leave  
  42cbf3:	ret    
  42cbf4:	mov    eax,ds:0x45fab0
  42cbf9:	push   ebx
  42cbfa:	push   esi
  42cbfb:	mov    ebx,ecx
  42cbfd:	push   edi
  42cbfe:	lea    esi,[ebx+0x1024]
  42cc04:	push   esi
  42cc05:	push   ecx
  42cc06:	push   ecx
  42cc07:	lea    ecx,[ebx+0x4]
  42cc0a:	mov    DWORD PTR [ebx],eax
  42cc0c:	call   0x42ca63
  42cc11:	lea    eax,[ebx+0x24]
  42cc14:	mov    DWORD PTR [esi],0x41f24c
  42cc1a:	mov    DWORD PTR [esi+0x4],eax
  42cc1d:	mov    ecx,0x1000
  42cc22:	mov    DWORD PTR [esi+0x8],ecx
  42cc25:	and    DWORD PTR [ebx+0x1030],0x0
  42cc2c:	mov    DWORD PTR [ebx+0xc],ecx
  42cc2f:	lea    ecx,[ebx+0x1034]
  42cc35:	mov    DWORD PTR [ebx+0x4],eax
  42cc38:	mov    DWORD PTR [ebx+0x8],eax
  42cc3b:	call   0x42dc76
  42cc40:	and    DWORD PTR [ebx+0x1460],0x0
  42cc47:	or     DWORD PTR [ebx+0x1464],0xffffffff
  42cc4e:	pop    edi
  42cc4f:	pop    esi
  42cc50:	mov    eax,ebx
  42cc52:	pop    ebx
  42cc53:	ret    0x4
  42cc56:	push   esi
  42cc57:	mov    esi,ecx
  42cc59:	mov    ecx,0x4000
  42cc5e:	movzx  eax,WORD PTR [esi+0xe]
  42cc62:	push   edi
  42cc63:	test   ecx,eax
  42cc65:	jne    0x42cd20
  42cc6b:	or     eax,ecx
  42cc6d:	mov    ecx,DWORD PTR [esi]
  42cc6f:	mov    WORD PTR [esi+0xe],ax
  42cc73:	test   ecx,ecx
  42cc75:	je     0x42cc7c
  42cc77:	call   0x42cc56
  42cc7c:	movzx  ecx,WORD PTR [esi+0xe]
  42cc80:	mov    eax,ecx
  42cc82:	and    eax,0x1f
  42cc85:	dec    eax
  42cc86:	je     0x42cd0e
  42cc8c:	sub    eax,0x3
  42cc8f:	je     0x42ccf5
  42cc91:	sub    eax,0x4
  42cc94:	jne    0x42cd20
  42cc9a:	mov    edi,DWORD PTR [esi+0x14]
  42cc9d:	mov    al,BYTE PTR [edi+0x6]
  42cca0:	cmp    al,0xa
  42cca2:	jb     0x42cd20
  42cca4:	cmp    al,0xb
  42cca6:	jbe    0x42ccde
  42cca8:	cmp    al,0xd
  42ccaa:	jne    0x42cd20
  42ccac:	mov    ax,ds:0x45f690
  42ccb2:	mov    WORD PTR [esi+0xc],ax
  42ccb6:	mov    ecx,DWORD PTR [edi+0x18]
  42ccb9:	add    ax,0x2
  42ccbd:	mov    ds:0x45f690,ax
  42ccc3:	test   ecx,ecx
  42ccc5:	je     0x42cd20
  42ccc7:	mov    ecx,DWORD PTR [ecx+0x18]
  42ccca:	inc    ax
  42cccc:	test   ecx,ecx
  42ccce:	jne    0x42ccc7
  42ccd0:	jmp    0x42cd1a
  42ccd2:	mov    ecx,DWORD PTR [edi+0x1c]
  42ccd5:	test   ecx,ecx
  42ccd7:	je     0x42ccde
  42ccd9:	call   0x42cc56
  42ccde:	mov    edi,DWORD PTR [edi+0x18]
  42cce1:	test   edi,edi
  42cce3:	jne    0x42ccd2
  42cce5:	mov    ax,ds:0x45f690
  42cceb:	mov    WORD PTR [esi+0xc],ax
  42ccef:	add    ax,0x2
  42ccf3:	jmp    0x42cd1a
  42ccf5:	test   cl,cl
  42ccf7:	jns    0x42cd0e
  42ccf9:	mov    edi,DWORD PTR [esi+0x14]
  42ccfc:	jmp    0x42cd08
  42ccfe:	mov    ecx,DWORD PTR [edi+0x4]
  42cd01:	call   0x42cc56
  42cd06:	mov    edi,DWORD PTR [edi]
  42cd08:	test   edi,edi
  42cd0a:	jne    0x42ccfe
  42cd0c:	jmp    0x42cce5
  42cd0e:	mov    ax,ds:0x45f690
  42cd14:	mov    WORD PTR [esi+0xc],ax
  42cd18:	inc    ax
  42cd1a:	mov    ds:0x45f690,ax
  42cd20:	pop    edi
  42cd21:	pop    esi
  42cd22:	ret    
  42cd23:	push   ebp
  42cd24:	mov    ebp,esp
  42cd26:	push   esi
  42cd27:	mov    esi,DWORD PTR [ebp+0x8]
  42cd2a:	mov    al,BYTE PTR [esi+0x6]
  42cd2d:	test   al,al
  42cd2f:	je     0x42cd66
  42cd31:	cmp    al,0x1
  42cd33:	je     0x42cd48
  42cd35:	jbe    0x42cd72
  42cd37:	cmp    al,0x3
  42cd39:	jbe    0x42cd66
  42cd3b:	cmp    al,0xa
  42cd3d:	je     0x42cd43
  42cd3f:	cmp    al,0xd
  42cd41:	jne    0x42cd72
  42cd43:	mov    ecx,DWORD PTR [esi+0x1c]
  42cd46:	jmp    0x42cd69
  42cd48:	mov    edx,DWORD PTR [esi+0x30]
  42cd4b:	jmp    0x42cd62
  42cd4d:	cmp    BYTE PTR [edx+0x6],0x9
  42cd51:	jne    0x42cd5f
  42cd53:	mov    ecx,DWORD PTR [edx+0x1c]
  42cd56:	test   ecx,ecx
  42cd58:	je     0x42cd5f
  42cd5a:	call   0x42cc56
  42cd5f:	mov    edx,DWORD PTR [edx+0x18]
  42cd62:	test   edx,edx
  42cd64:	jne    0x42cd4d
  42cd66:	mov    ecx,DWORD PTR [esi+0x24]
  42cd69:	test   ecx,ecx
  42cd6b:	je     0x42cd72
  42cd6d:	call   0x42cc56
  42cd72:	pop    esi
  42cd73:	pop    ebp
  42cd74:	ret    0x4
  42cd77:	push   ebp
  42cd78:	mov    ebp,esp
  42cd7a:	sub    esp,0x240
  42cd80:	mov    eax,ds:0x448858
  42cd85:	xor    eax,ebp
  42cd87:	mov    DWORD PTR [ebp-0x4],eax
  42cd8a:	mov    ecx,0x1468
  42cd8f:	call   0x43f45b
  42cd94:	test   eax,eax
  42cd96:	je     0x42cda2
  42cd98:	push   ecx
  42cd99:	mov    ecx,eax
  42cd9b:	call   0x42cbf4
  42cda0:	jmp    0x42cda4
  42cda2:	xor    eax,eax
  42cda4:	push   esi
  42cda5:	push   edi
  42cda6:	push   0x4
  42cda8:	lea    ecx,[eax+0x4]
  42cdab:	mov    ds:0x45f6a0,eax
  42cdb0:	call   0x429768
  42cdb5:	mov    ecx,0x564
  42cdba:	call   0x43f45b
  42cdbf:	mov    esi,eax
  42cdc1:	test   esi,esi
  42cdc3:	je     0x42cdd9
  42cdc5:	push   0xf1
  42cdca:	mov    ecx,esi
  42cdcc:	call   0x42ca8d
  42cdd1:	mov    DWORD PTR ds:0x45f69c,esi
  42cdd7:	jmp    0x42cde0
  42cdd9:	and    DWORD PTR ds:0x45f69c,0x0
  42cde0:	mov    ecx,DWORD PTR ds:0x45f884
  42cde6:	mov    ecx,DWORD PTR [ecx+0xc]
  42cde9:	call   0x43f5f6
  42cdee:	mov    edi,eax
  42cdf0:	mov    esi,edi
  42cdf2:	lea    eax,[esi+0x1]
  42cdf5:	mov    cl,BYTE PTR [esi]
  42cdf7:	inc    esi
  42cdf8:	test   cl,cl
  42cdfa:	jne    0x42cdf5
  42cdfc:	mov    ecx,DWORD PTR ds:0x45f69c
  42ce02:	and    DWORD PTR [ebp-0x214],0x0
  42ce09:	sub    esi,eax
  42ce0b:	inc    esi
  42ce0c:	push   0x8
  42ce0e:	lea    eax,[esi+0x6]
  42ce11:	mov    WORD PTR [ebp-0x218],ax
  42ce18:	mov    eax,0x1101
  42ce1d:	mov    WORD PTR [ebp-0x216],ax
  42ce24:	lea    eax,[ebp-0x218]
  42ce2a:	push   eax
  42ce2b:	call   0x429102
  42ce30:	mov    ecx,DWORD PTR ds:0x45f69c
  42ce36:	push   esi
  42ce37:	push   edi
  42ce38:	call   0x429102
  42ce3d:	push   edi
  42ce3e:	call   DWORD PTR ds:0x464354
  42ce44:	pop    ecx
  42ce45:	push   0x6
  42ce47:	xor    eax,eax
  42ce49:	pop    ecx
  42ce4a:	lea    edi,[ebp-0x23e]
  42ce50:	rep stos DWORD PTR es:[edi],eax
  42ce52:	stos   BYTE PTR es:[edi],al
  42ce53:	xor    ecx,ecx
  42ce55:	cmp    BYTE PTR ds:0x44e042,cl
  42ce5b:	push   0x37
  42ce5d:	sete   cl
  42ce60:	pop    eax
  42ce61:	mov    WORD PTR [ebp-0x240],ax
  42ce68:	xor    edx,edx
  42ce6a:	mov    eax,0x113c
  42ce6f:	mov    WORD PTR [ebp-0x23e],ax
  42ce76:	mov    eax,DWORD PTR [ebp-0x23c]
  42ce7c:	inc    edx
  42ce7d:	and    ecx,edx
  42ce7f:	and    eax,0xfffffd03
  42ce84:	shl    ecx,0x9
  42ce87:	or     ecx,eax
  42ce89:	push   0xb
  42ce8b:	mov    eax,0xd0
  42ce90:	mov    WORD PTR [ebp-0x238],ax
  42ce97:	pop    eax
  42ce98:	or     ecx,0x3
  42ce9b:	mov    WORD PTR [ebp-0x22e],ax
  42cea2:	push   0x1a
  42cea4:	lea    eax,[ebp-0x240]
  42ceaa:	mov    DWORD PTR [ebp-0x23c],ecx
  42ceb0:	mov    ecx,DWORD PTR ds:0x45f69c
  42ceb6:	push   eax
  42ceb7:	mov    DWORD PTR [ebp-0x22c],0xc6270000
  42cec1:	mov    WORD PTR [ebp-0x228],dx
  42cec8:	call   0x429102
  42cecd:	mov    ecx,DWORD PTR ds:0x45f69c
  42ced3:	push   0x1e
  42ced5:	push   0x404824
  42ceda:	call   0x429102
  42cedf:	push   ecx
  42cee0:	call   0x42caeb
  42cee5:	cmp    BYTE PTR ds:0x44e042,0x0
  42ceec:	je     0x42d048
  42cef2:	lea    eax,[ebp-0x20c]
  42cef8:	push   0x104
  42cefd:	push   eax
  42cefe:	call   DWORD PTR ds:0x4643dc
  42cf04:	pop    ecx
  42cf05:	pop    ecx
  42cf06:	lea    ecx,[ebp-0x20c]
  42cf0c:	call   0x43f5f6
  42cf11:	mov    edi,eax
  42cf13:	mov    edx,edi
  42cf15:	lea    eax,[edx+0x1]
  42cf18:	mov    cl,BYTE PTR [edx]
  42cf1a:	inc    edx
  42cf1b:	test   cl,cl
  42cf1d:	jne    0x42cf18
  42cf1f:	mov    ecx,DWORD PTR ds:0x46437c
  42cf25:	sub    edx,eax
  42cf27:	mov    ecx,DWORD PTR [ecx]
  42cf29:	lea    eax,[edx+0x1]
  42cf2c:	mov    DWORD PTR [ebp-0x220],eax
  42cf32:	call   0x43f5f6
  42cf37:	mov    edx,eax
  42cf39:	mov    DWORD PTR [ebp-0x21c],eax
  42cf3f:	lea    eax,[edx+0x1]
  42cf42:	mov    cl,BYTE PTR [edx]
  42cf44:	inc    edx
  42cf45:	test   cl,cl
  42cf47:	jne    0x42cf42
  42cf49:	mov    ecx,DWORD PTR ds:0x44e4bc
  42cf4f:	sub    edx,eax
  42cf51:	mov    ecx,DWORD PTR [ecx+0x8]
  42cf54:	lea    eax,[edx+0x1]
  42cf57:	push   ebx
  42cf58:	mov    DWORD PTR [ebp-0x224],eax
  42cf5e:	call   0x43f5f6
  42cf63:	mov    ebx,eax
  42cf65:	mov    esi,ebx
  42cf67:	lea    eax,[esi+0x1]
  42cf6a:	mov    cl,BYTE PTR [esi]
  42cf6c:	inc    esi
  42cf6d:	test   cl,cl
  42cf6f:	jne    0x42cf6a
  42cf71:	mov    ecx,DWORD PTR [ebp-0x220]
  42cf77:	and    DWORD PTR [ebp-0x216],0x0
  42cf7e:	sub    esi,eax
  42cf80:	mov    eax,DWORD PTR [ebp-0x224]
  42cf86:	add    ecx,0x10
  42cf89:	add    eax,ecx
  42cf8b:	mov    ecx,DWORD PTR ds:0x45f69c
  42cf91:	inc    esi
  42cf92:	add    eax,esi
  42cf94:	mov    WORD PTR [ebp-0x218],ax
  42cf9b:	mov    eax,0x113d
  42cfa0:	mov    WORD PTR [ebp-0x216],ax
  42cfa7:	push   0x5
  42cfa9:	lea    eax,[ebp-0x218]
  42cfaf:	push   eax
  42cfb0:	call   0x429102
  42cfb5:	mov    ecx,DWORD PTR ds:0x45f69c
  42cfbb:	push   0x4
  42cfbd:	push   0x41f260
  42cfc2:	call   0x429102
  42cfc7:	push   DWORD PTR [ebp-0x220]
  42cfcd:	mov    ecx,DWORD PTR ds:0x45f69c
  42cfd3:	push   edi
  42cfd4:	call   0x429102
  42cfd9:	mov    ecx,DWORD PTR ds:0x45f69c
  42cfdf:	push   0x4
  42cfe1:	push   0x41f25c
  42cfe6:	call   0x429102
  42cfeb:	push   DWORD PTR [ebp-0x224]
  42cff1:	mov    ecx,DWORD PTR ds:0x45f69c
  42cff7:	push   DWORD PTR [ebp-0x21c]
  42cffd:	call   0x429102
  42d002:	mov    ecx,DWORD PTR ds:0x45f69c
  42d008:	push   0x4
  42d00a:	push   0x41f258
  42d00f:	call   0x429102
  42d014:	mov    ecx,DWORD PTR ds:0x45f69c
  42d01a:	push   esi
  42d01b:	push   ebx
  42d01c:	call   0x429102
  42d021:	push   ecx
  42d022:	call   0x42caeb
  42d027:	mov    esi,DWORD PTR ds:0x464354
  42d02d:	push   ebx
  42d02e:	call   esi
  42d030:	push   DWORD PTR [ebp-0x21c]
  42d036:	call   esi
  42d038:	push   edi
  42d039:	call   esi
  42d03b:	add    esp,0xc
  42d03e:	cmp    BYTE PTR ds:0x44e042,0x0
  42d045:	pop    ebx
  42d046:	jne    0x42d051
  42d048:	cmp    BYTE PTR ds:0x44e02f,0x0
  42d04f:	je     0x42d0ab
  42d051:	mov    ecx,0x994
  42d056:	call   0x43f45b
  42d05b:	test   eax,eax
  42d05d:	je     0x42d06d
  42d05f:	mov    ecx,eax
  42d061:	call   0x42cb8c
  42d066:	mov    ds:0x45f698,eax
  42d06b:	jmp    0x42d074
  42d06d:	and    DWORD PTR ds:0x45f698,0x0
  42d074:	mov    ecx,0x568
  42d079:	call   0x43f45b
  42d07e:	mov    esi,eax
  42d080:	test   esi,esi
  42d082:	je     0x42d0a4
  42d084:	push   0xf4
  42d089:	mov    ecx,esi
  42d08b:	call   0x42ca8d
  42d090:	mov    ecx,DWORD PTR ds:0x45f698
  42d096:	mov    DWORD PTR [esi+0x564],ecx
  42d09c:	mov    DWORD PTR ds:0x45f694,esi
  42d0a2:	jmp    0x42d0ab
  42d0a4:	and    DWORD PTR ds:0x45f694,0x0
  42d0ab:	mov    ecx,DWORD PTR [ebp-0x4]
  42d0ae:	pop    edi
  42d0af:	xor    ecx,ebp
  42d0b1:	pop    esi
  42d0b2:	call   0x446dc7
  42d0b7:	leave  
  42d0b8:	ret    
  42d0b9:	push   ebp
  42d0ba:	mov    ebp,esp
  42d0bc:	and    esp,0xfffffff8
  42d0bf:	push   ecx
  42d0c0:	cmp    BYTE PTR ds:0x44e042,0x0
  42d0c7:	push   esi
  42d0c8:	jne    0x42d0d3
  42d0ca:	cmp    BYTE PTR ds:0x44e02f,0x0
  42d0d1:	je     0x42d112
  42d0d3:	push   0x0
  42d0d5:	push   DWORD PTR ds:0x45f698
  42d0db:	call   0x429594
  42d0e0:	push   0x0
  42d0e2:	push   DWORD PTR ds:0x45f694
  42d0e8:	call   0x429594
  42d0ed:	mov    esi,DWORD PTR ds:0x45f87c
  42d0f3:	jmp    0x42d10e
  42d0f5:	mov    ecx,DWORD PTR [esi+0x40]
  42d0f8:	test   ecx,ecx
  42d0fa:	je     0x42d10b
  42d0fc:	call   0x4293d3
  42d101:	push   0x1
  42d103:	push   DWORD PTR [esi+0x40]
  42d106:	call   0x429594
  42d10b:	mov    esi,DWORD PTR [esi+0x30]
  42d10e:	test   esi,esi
  42d110:	jne    0x42d0f5
  42d112:	push   0x0
  42d114:	push   DWORD PTR ds:0x45f69c
  42d11a:	call   0x429594
  42d11f:	mov    esi,DWORD PTR ds:0x45f6a0
  42d125:	mov    ecx,esi
  42d127:	call   0x429563
  42d12c:	test   al,al
  42d12e:	je     0x42d137
  42d130:	mov    ecx,esi
  42d132:	call   0x4294a6
  42d137:	pop    esi
  42d138:	mov    esp,ebp
  42d13a:	pop    ebp
  42d13b:	ret    
  42d13c:	push   ebp
  42d13d:	mov    ebp,esp
  42d13f:	push   esi
  42d140:	mov    esi,DWORD PTR [ebp+0x8]
  42d143:	push   edi
  42d144:	test   BYTE PTR [esi+0x7],0x2
  42d148:	jne    0x42d38b
  42d14e:	movzx  ecx,BYTE PTR [esi+0x6]
  42d152:	push   ebx
  42d153:	mov    eax,ecx
  42d155:	xor    ebx,ebx
  42d157:	sub    eax,ebx
  42d159:	je     0x42d391
  42d15f:	dec    eax
  42d160:	je     0x42d262
  42d166:	dec    eax
  42d167:	dec    eax
  42d168:	je     0x42d391
  42d16e:	sub    eax,0x6
  42d171:	je     0x42d1f0
  42d173:	sub    ecx,0xa
  42d176:	je     0x42d183
  42d178:	dec    ecx
  42d179:	dec    ecx
  42d17a:	je     0x42d1eb
  42d17c:	dec    ecx
  42d17d:	jne    0x42d38a
  42d183:	mov    eax,DWORD PTR [esi+0x1c]
  42d186:	movzx  edi,WORD PTR [eax+0xc]
  42d18a:	test   di,di
  42d18d:	je     0x42d38a
  42d193:	movzx  eax,BYTE PTR [esi+0x5]
  42d197:	mov    ecx,DWORD PTR ds:0x45f69c
  42d19d:	add    ax,0x7
  42d1a1:	movzx  eax,ax
  42d1a4:	push   eax
  42d1a5:	lea    ecx,[ecx+0x4]
  42d1a8:	call   0x4296cf
  42d1ad:	mov    ecx,DWORD PTR ds:0x45f69c
  42d1b3:	push   0x1108
  42d1b8:	lea    ecx,[ecx+0x4]
  42d1bb:	call   0x4296cf
  42d1c0:	mov    ecx,DWORD PTR ds:0x45f69c
  42d1c6:	movzx  eax,di
  42d1c9:	push   eax
  42d1ca:	call   0x42912f
  42d1cf:	movzx  eax,BYTE PTR [esi+0x5]
  42d1d3:	mov    ecx,DWORD PTR ds:0x45f69c
  42d1d9:	push   eax
  42d1da:	sub    esi,eax
  42d1dc:	push   esi
  42d1dd:	call   0x429102
  42d1e2:	pop    ebx
  42d1e3:	pop    edi
  42d1e4:	pop    esi
  42d1e5:	pop    ebp
  42d1e6:	jmp    0x42caeb
  42d1eb:	mov    eax,DWORD PTR [esi+0x18]
  42d1ee:	jmp    0x42d186
  42d1f0:	cmp    BYTE PTR ds:0x46385c,bl
  42d1f6:	je     0x42d38a
  42d1fc:	movzx  eax,BYTE PTR [esi+0x5]
  42d200:	mov    ecx,DWORD PTR ds:0x45f69c
  42d206:	add    ax,0xd
  42d20a:	movzx  eax,ax
  42d20d:	push   eax
  42d20e:	lea    ecx,[ecx+0x4]
  42d211:	call   0x4296cf
  42d216:	mov    ecx,DWORD PTR ds:0x45f69c
  42d21c:	push   0x1111
  42d221:	lea    ecx,[ecx+0x4]
  42d224:	call   0x4296cf
  42d229:	push   DWORD PTR [esi+0x20]
  42d22c:	mov    ecx,DWORD PTR ds:0x45f69c
  42d232:	call   0x42912f
  42d237:	mov    eax,DWORD PTR [esi+0x1c]
  42d23a:	mov    ecx,DWORD PTR ds:0x45f69c
  42d240:	movzx  eax,WORD PTR [eax+0xc]
  42d244:	push   eax
  42d245:	call   0x42912f
  42d24a:	push   0x14e
  42d24f:	mov    ecx,DWORD PTR ds:0x45f69c
  42d255:	lea    ecx,[ecx+0x4]
  42d258:	call   0x4296cf
  42d25d:	jmp    0x42d1cf
  42d262:	movzx  eax,BYTE PTR [esi+0x5]
  42d266:	mov    ecx,DWORD PTR ds:0x45f69c
  42d26c:	add    ax,0x26
  42d270:	movzx  eax,ax
  42d273:	push   eax
  42d274:	lea    ecx,[ecx+0x4]
  42d277:	call   0x4296cf
  42d27c:	test   BYTE PTR [esi+0x7],0x1
  42d280:	mov    ecx,DWORD PTR ds:0x45f69c
  42d286:	lea    ecx,[ecx+0x4]
  42d289:	je     0x42d292
  42d28b:	push   0x1110
  42d290:	jmp    0x42d297
  42d292:	push   0x110f
  42d297:	call   0x4296cf
  42d29c:	mov    ecx,DWORD PTR ds:0x45f69c
  42d2a2:	push   ebx
  42d2a3:	call   0x42912f
  42d2a8:	mov    ecx,DWORD PTR ds:0x45f69c
  42d2ae:	push   ebx
  42d2af:	call   0x42912f
  42d2b4:	mov    ecx,DWORD PTR ds:0x45f69c
  42d2ba:	push   ebx
  42d2bb:	call   0x42912f
  42d2c0:	movzx  eax,WORD PTR [esi+0x3c]
  42d2c4:	mov    ecx,DWORD PTR ds:0x45f69c
  42d2ca:	push   eax
  42d2cb:	call   0x42912f
  42d2d0:	push   DWORD PTR [esi+0x28]
  42d2d3:	mov    ecx,DWORD PTR ds:0x45f69c
  42d2d9:	call   0x42912f
  42d2de:	movzx  eax,WORD PTR [esi+0x3c]
  42d2e2:	mov    ecx,DWORD PTR ds:0x45f69c
  42d2e8:	push   eax
  42d2e9:	call   0x42912f
  42d2ee:	mov    eax,DWORD PTR [esi+0x24]
  42d2f1:	mov    ecx,DWORD PTR ds:0x45f69c
  42d2f7:	movzx  eax,WORD PTR [eax+0xc]
  42d2fb:	push   eax
  42d2fc:	call   0x42912f
  42d301:	push   ecx
  42d302:	push   esi
  42d303:	push   ecx
  42d304:	mov    ecx,DWORD PTR ds:0x45f69c
  42d30a:	call   0x42915e
  42d30f:	mov    ecx,DWORD PTR ds:0x45f69c
  42d315:	push   ebx
  42d316:	call   0x42912f
  42d31b:	mov    ecx,DWORD PTR ds:0x45f69c
  42d321:	push   ebx
  42d322:	add    ecx,0x4
  42d325:	call   0x4296cf
  42d32a:	push   ecx
  42d32b:	call   0x42caeb
  42d330:	movzx  ecx,BYTE PTR [esi+0x5]
  42d334:	push   ecx
  42d335:	mov    eax,esi
  42d337:	sub    eax,ecx
  42d339:	mov    ecx,DWORD PTR ds:0x45f69c
  42d33f:	push   eax
  42d340:	call   0x429102
  42d345:	push   ecx
  42d346:	call   0x42caeb
  42d34b:	mov    esi,DWORD PTR [esi+0x30]
  42d34e:	mov    BYTE PTR ds:0x46385c,0x1
  42d355:	jmp    0x42d360
  42d357:	push   esi
  42d358:	call   0x42d13c
  42d35d:	mov    esi,DWORD PTR [esi+0x18]
  42d360:	test   esi,esi
  42d362:	jne    0x42d357
  42d364:	mov    ecx,DWORD PTR ds:0x45f69c
  42d36a:	push   0x2
  42d36c:	lea    ecx,[ecx+0x4]
  42d36f:	mov    BYTE PTR ds:0x46385c,bl
  42d375:	call   0x4296cf
  42d37a:	mov    ecx,DWORD PTR ds:0x45f69c
  42d380:	push   0x6
  42d382:	lea    ecx,[ecx+0x4]
  42d385:	call   0x4296cf
  42d38a:	pop    ebx
  42d38b:	pop    edi
  42d38c:	pop    esi
  42d38d:	pop    ebp
  42d38e:	ret    0x4
  42d391:	movzx  eax,WORD PTR [esi+0x2c]
  42d395:	test   al,0x1
  42d397:	je     0x42d406
  42d399:	test   al,0x8
  42d39b:	je     0x42d3a5
  42d39d:	cmp    BYTE PTR ds:0x46385c,bl
  42d3a3:	je     0x42d38a
  42d3a5:	movzx  eax,BYTE PTR [esi+0x5]
  42d3a9:	mov    ecx,DWORD PTR ds:0x45f69c
  42d3af:	add    ax,0xa
  42d3b3:	movzx  eax,ax
  42d3b6:	push   eax
  42d3b7:	lea    ecx,[ecx+0x4]
  42d3ba:	call   0x4296cf
  42d3bf:	mov    ecx,DWORD PTR ds:0x45f69c
  42d3c5:	push   0x1105
  42d3ca:	add    ecx,0x4
  42d3cd:	call   0x4296cf
  42d3d2:	push   ecx
  42d3d3:	push   esi
  42d3d4:	push   ecx
  42d3d5:	mov    ecx,DWORD PTR ds:0x45f69c
  42d3db:	call   0x42915e
  42d3e0:	mov    ecx,DWORD PTR ds:0x45f69c
  42d3e6:	push   ebx
  42d3e7:	call   0x42912f
  42d3ec:	mov    ecx,DWORD PTR ds:0x45f69c
  42d3f2:	push   ebx
  42d3f3:	add    ecx,0x4
  42d3f6:	call   0x4296cf
  42d3fb:	push   ecx
  42d3fc:	call   0x42caeb
  42d401:	jmp    0x42d1cf
  42d406:	movzx  eax,BYTE PTR [esi+0x5]
  42d40a:	mov    ecx,DWORD PTR ds:0x45f69c
  42d410:	add    ax,0xd
  42d414:	movzx  eax,ax
  42d417:	push   eax
  42d418:	lea    ecx,[ecx+0x4]
  42d41b:	call   0x4296cf
  42d420:	test   BYTE PTR [esi+0x7],0x1
  42d424:	mov    ecx,DWORD PTR ds:0x45f69c
  42d42a:	lea    ecx,[ecx+0x4]
  42d42d:	je     0x42d436
  42d42f:	push   0x110d
  42d434:	jmp    0x42d43b
  42d436:	push   0x110c
  42d43b:	call   0x4296cf
  42d440:	mov    eax,DWORD PTR [esi+0x24]
  42d443:	mov    ecx,DWORD PTR ds:0x45f69c
  42d449:	movzx  eax,WORD PTR [eax+0xc]
  42d44d:	push   eax
  42d44e:	call   0x42912f
  42d453:	push   ecx
  42d454:	push   esi
  42d455:	push   ecx
  42d456:	mov    ecx,DWORD PTR ds:0x45f69c
  42d45c:	call   0x42915e
  42d461:	mov    ecx,DWORD PTR ds:0x45f69c
  42d467:	push   ebx
  42d468:	call   0x42912f
  42d46d:	push   ebx
  42d46e:	jmp    0x42d24f
  42d473:	mov    eax,ds:0x44f58c
  42d478:	cmp    ecx,0x8000
  42d47e:	jae    0x42d48d
  42d480:	mov    WORD PTR [eax],cx
  42d483:	push   0x2
  42d485:	pop    eax
  42d486:	add    DWORD PTR ds:0x44f58c,eax
  42d48c:	ret    
  42d48d:	mov    edx,0x8004
  42d492:	mov    WORD PTR [eax],dx
  42d495:	mov    eax,ds:0x44f58c
  42d49a:	add    eax,0x2
  42d49d:	mov    ds:0x44f58c,eax
  42d4a2:	mov    DWORD PTR [eax],ecx
  42d4a4:	add    DWORD PTR ds:0x44f58c,0x4
  42d4ab:	push   0x6
  42d4ad:	pop    eax
  42d4ae:	ret    
  42d4af:	push   esi
  42d4b0:	movzx  esi,BYTE PTR [ecx+0x5]
  42d4b4:	push   esi
  42d4b5:	sub    ecx,esi
  42d4b7:	push   ecx
  42d4b8:	push   DWORD PTR ds:0x44f58c
  42d4be:	call   0x447646
  42d4c3:	mov    eax,ds:0x44f58c
  42d4c8:	add    eax,esi
  42d4ca:	add    esp,0xc
  42d4cd:	mov    ds:0x44f58c,eax
  42d4d2:	mov    BYTE PTR [eax],0x0
  42d4d5:	inc    DWORD PTR ds:0x44f58c
  42d4db:	pop    esi
  42d4dc:	ret    
  42d4dd:	movzx  eax,cl
  42d4e0:	dec    eax
  42d4e1:	je     0x42d4f7
  42d4e3:	dec    eax
  42d4e4:	je     0x42d4f0
  42d4e6:	dec    eax
  42d4e7:	jne    0x42d521
  42d4e9:	mov    eax,ds:0x44f58c
  42d4ee:	jmp    0x42d518
  42d4f0:	mov    eax,ds:0x44f58c
  42d4f5:	jmp    0x42d50a
  42d4f7:	mov    eax,ds:0x44f58c
  42d4fc:	mov    BYTE PTR [eax],0xf3
  42d4ff:	mov    eax,ds:0x44f58c
  42d504:	inc    eax
  42d505:	mov    ds:0x44f58c,eax
  42d50a:	mov    BYTE PTR [eax],0xf2
  42d50d:	mov    eax,ds:0x44f58c
  42d512:	inc    eax
  42d513:	mov    ds:0x44f58c,eax
  42d518:	mov    BYTE PTR [eax],0xf1
  42d51b:	inc    DWORD PTR ds:0x44f58c
  42d521:	ret    
  42d522:	push   ebp
  42d523:	mov    ebp,esp
  42d525:	push   ecx
  42d526:	push   esi
  42d527:	mov    esi,DWORD PTR ds:0x44f58c
  42d52d:	push   edi
  42d52e:	push   0xfffffffe
  42d530:	mov    edi,0x44f590
  42d535:	pop    edx
  42d536:	sub    esi,edi
  42d538:	sub    edx,esi
  42d53a:	and    edx,0x3
  42d53d:	mov    cl,dl
  42d53f:	call   0x42d4dd
  42d544:	add    esi,edx
  42d546:	movzx  eax,si
  42d549:	push   0x2
  42d54b:	pop    edx
  42d54c:	lea    ecx,[ebp-0x4]
  42d54f:	mov    DWORD PTR [ebp-0x4],eax
  42d552:	call   0x424be7
  42d557:	add    DWORD PTR ds:0x45f830,0x2
  42d55e:	mov    edx,esi
  42d560:	mov    ecx,edi
  42d562:	call   0x424be7
  42d567:	add    DWORD PTR ds:0x45f830,esi
  42d56d:	mov    DWORD PTR ds:0x44f58c,edi
  42d573:	pop    edi
  42d574:	pop    esi
  42d575:	leave  
  42d576:	ret    
  42d577:	push   ebp
  42d578:	mov    ebp,esp
  42d57a:	sub    esp,0x10
  42d57d:	mov    dl,BYTE PTR [ecx+0xe]
  42d580:	push   esi
  42d581:	push   edi
  42d582:	and    dl,0x40
  42d585:	neg    dl
  42d587:	sbb    dl,dl
  42d589:	xor    eax,eax
  42d58b:	lea    edi,[ebp-0x10]
  42d58e:	stos   DWORD PTR es:[edi],eax
  42d58f:	stos   DWORD PTR es:[edi],eax
  42d590:	stos   DWORD PTR es:[edi],eax
  42d591:	stos   DWORD PTR es:[edi],eax
  42d592:	mov    edi,DWORD PTR ds:0x44f58c
  42d598:	mov    eax,0x1002
  42d59d:	mov    WORD PTR [ebp-0x10],ax
  42d5a1:	mov    eax,DWORD PTR [ecx]
  42d5a3:	mov    ecx,DWORD PTR [ebp-0xa]
  42d5a6:	movzx  eax,WORD PTR [eax+0xc]
  42d5aa:	mov    DWORD PTR [ebp-0xe],eax
  42d5ad:	add    dl,0xc
  42d5b0:	movzx  eax,dl
  42d5b3:	xor    eax,ecx
  42d5b5:	and    eax,0x1f
  42d5b8:	xor    ecx,eax
  42d5ba:	mov    DWORD PTR [ebp-0xa],ecx
  42d5bd:	lea    esi,[ebp-0x10]
  42d5c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5c4:	add    DWORD PTR ds:0x44f58c,0x10
  42d5cb:	pop    edi
  42d5cc:	pop    esi
  42d5cd:	leave  
  42d5ce:	ret    
  42d5cf:	push   ebp
  42d5d0:	mov    ebp,esp
  42d5d2:	sub    esp,0x18
  42d5d5:	push   ebx
  42d5d6:	mov    ebx,ecx
  42d5d8:	push   esi
  42d5d9:	movzx  eax,WORD PTR [ebx+0xe]
  42d5dd:	mov    DWORD PTR [ebp-0x8],ebx
  42d5e0:	test   al,al
  42d5e2:	jns    0x42d6b2
  42d5e8:	mov    esi,DWORD PTR [ebx+0x14]
  42d5eb:	xor    al,al
  42d5ed:	mov    BYTE PTR [ebp-0x1],al
  42d5f0:	test   esi,esi
  42d5f2:	je     0x42d60f
  42d5f4:	mov    bl,al
  42d5f6:	mov    ecx,DWORD PTR [esi+0x4]
  42d5f9:	call   0x42d9bf
  42d5fe:	mov    esi,DWORD PTR [esi]
  42d600:	inc    bl
  42d602:	test   esi,esi
  42d604:	jne    0x42d5f6
  42d606:	mov    BYTE PTR [ebp-0x1],bl
  42d609:	mov    ebx,DWORD PTR [ebp-0x8]
  42d60c:	mov    al,BYTE PTR [ebp-0x1]
  42d60f:	xor    cl,cl
  42d611:	test   BYTE PTR [ebx+0xe],0x40
  42d615:	je     0x42d619
  42d617:	inc    cl
  42d619:	movzx  eax,al
  42d61c:	mov    WORD PTR [ebp-0x10],ax
  42d620:	movzx  eax,WORD PTR [ebx+0xc]
  42d624:	push   edi
  42d625:	mov    edi,DWORD PTR ds:0x44f58c
  42d62b:	mov    BYTE PTR [ebp-0x12],cl
  42d62e:	mov    edx,0x1008
  42d633:	mov    WORD PTR [ebp-0x18],dx
  42d637:	mov    DWORD PTR [ebp-0x16],0x3
  42d63e:	mov    BYTE PTR [ebp-0x11],0x0
  42d642:	inc    eax
  42d643:	mov    DWORD PTR [ebp-0xe],eax
  42d646:	lea    esi,[ebp-0x18]
  42d649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d64c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42d64e:	add    DWORD PTR ds:0x44f58c,0xe
  42d655:	call   0x42d522
  42d65a:	mov    eax,ds:0x44f58c
  42d65f:	mov    ecx,0x1201
  42d664:	mov    WORD PTR [eax],cx
  42d667:	mov    ecx,DWORD PTR ds:0x44f58c
  42d66d:	movzx  eax,BYTE PTR [ebp-0x1]
  42d671:	add    ecx,0x2
  42d674:	mov    DWORD PTR ds:0x44f58c,ecx
  42d67a:	mov    DWORD PTR [ecx],eax
  42d67c:	mov    ecx,DWORD PTR ds:0x44f58c
  42d682:	push   0x4
  42d684:	pop    edx
  42d685:	add    ecx,edx
  42d687:	mov    DWORD PTR ds:0x44f58c,ecx
  42d68d:	mov    esi,DWORD PTR [ebx+0x14]
  42d690:	pop    edi
  42d691:	jmp    0x42d6ac
  42d693:	mov    eax,DWORD PTR [esi+0x4]
  42d696:	movzx  eax,WORD PTR [eax+0xc]
  42d69a:	mov    DWORD PTR [ecx],eax
  42d69c:	mov    ecx,DWORD PTR ds:0x44f58c
  42d6a2:	add    ecx,edx
  42d6a4:	mov    DWORD PTR ds:0x44f58c,ecx
  42d6aa:	mov    esi,DWORD PTR [esi]
  42d6ac:	test   esi,esi
  42d6ae:	jne    0x42d693
  42d6b0:	jmp    0x42d6dc
  42d6b2:	push   0xe
  42d6b4:	pop    ecx
  42d6b5:	push   0x4
  42d6b7:	mov    WORD PTR [ebp-0x8],cx
  42d6bb:	pop    edx
  42d6bc:	test   al,0x40
  42d6be:	je     0x42d6c6
  42d6c0:	mov    WORD PTR [ebp-0x6],dx
  42d6c4:	jmp    0x42d6cc
  42d6c6:	xor    eax,eax
  42d6c8:	mov    WORD PTR [ebp-0x6],ax
  42d6cc:	mov    eax,ds:0x44f58c
  42d6d1:	mov    ecx,DWORD PTR [ebp-0x8]
  42d6d4:	mov    DWORD PTR [eax],ecx
  42d6d6:	add    DWORD PTR ds:0x44f58c,edx
  42d6dc:	pop    esi
  42d6dd:	pop    ebx
  42d6de:	leave  
  42d6df:	ret    
  42d6e0:	push   ebp
  42d6e1:	mov    ebp,esp
  42d6e3:	sub    esp,0x20
  42d6e6:	push   ebx
  42d6e7:	push   esi
  42d6e8:	mov    ebx,ecx
  42d6ea:	push   edi
  42d6eb:	mov    esi,DWORD PTR [ebx+0x18]
  42d6ee:	mov    eax,edx
  42d6f0:	xor    edi,edi
  42d6f2:	mov    DWORD PTR [ebp-0x4],eax
  42d6f5:	test   esi,esi
  42d6f7:	je     0x42d722
  42d6f9:	mov    ecx,DWORD PTR [esi+0x1c]
  42d6fc:	test   ecx,ecx
  42d6fe:	je     0x42d705
  42d700:	call   0x42d9bf
  42d705:	mov    ax,WORD PTR [esi+0x22]
  42d709:	xor    ax,WORD PTR [ebx+0x20]
  42d70d:	mov    ecx,0x3fff
  42d712:	test   cx,ax
  42d715:	jne    0x42d718
  42d717:	inc    edi
  42d718:	mov    esi,DWORD PTR [esi+0x18]
  42d71b:	test   esi,esi
  42d71d:	jne    0x42d6f9
  42d71f:	mov    eax,DWORD PTR [ebp-0x4]
  42d722:	movzx  eax,WORD PTR [eax+0xc]
  42d726:	and    DWORD PTR [ebp-0x16],0x0
  42d72a:	and    DWORD PTR [ebp-0x12],0x0
  42d72e:	inc    eax
  42d72f:	mov    DWORD PTR [ebp-0x1a],eax
  42d732:	mov    WORD PTR [ebp-0x1e],di
  42d736:	mov    edi,DWORD PTR ds:0x44f58c
  42d73c:	xor    eax,eax
  42d73e:	mov    ecx,0x1505
  42d743:	mov    WORD PTR [ebp-0x20],cx
  42d747:	or     ax,0x1
  42d74b:	mov    WORD PTR [ebp-0x1c],ax
  42d74f:	lea    esi,[ebp-0x20]
  42d752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d756:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42d758:	add    DWORD PTR ds:0x44f58c,0x12
  42d75f:	mov    ecx,DWORD PTR [ebx+0x1c]
  42d762:	mov    ecx,DWORD PTR [ecx+0x10]
  42d765:	call   0x42d473
  42d76a:	mov    ecx,ebx
  42d76c:	call   0x42d4af
  42d771:	call   0x42d522
  42d776:	mov    eax,ds:0x44f58c
  42d77b:	mov    ecx,0x1203
  42d780:	mov    WORD PTR [eax],cx
  42d783:	mov    edx,DWORD PTR ds:0x44f58c
  42d789:	push   0x2
  42d78b:	pop    edi
  42d78c:	add    edx,edi
  42d78e:	mov    DWORD PTR ds:0x44f58c,edx
  42d794:	mov    esi,DWORD PTR [ebx+0x18]
  42d797:	jmp    0x42d84a
  42d79c:	mov    eax,0x150d
  42d7a1:	mov    WORD PTR [ebp-0xc],ax
  42d7a5:	xor    eax,eax
  42d7a7:	or     ax,0x3
  42d7ab:	mov    WORD PTR [ebp-0xa],ax
  42d7af:	mov    eax,DWORD PTR [esi+0x1c]
  42d7b2:	movzx  ecx,WORD PTR [eax+0xc]
  42d7b6:	mov    eax,DWORD PTR [ebp-0xc]
  42d7b9:	mov    DWORD PTR [edx],eax
  42d7bb:	mov    eax,ds:0x44f58c
  42d7c0:	mov    DWORD PTR [eax+0x4],ecx
  42d7c3:	mov    eax,ds:0x44f58c
  42d7c8:	add    eax,0x8
  42d7cb:	mov    ds:0x44f58c,eax
  42d7d0:	mov    ecx,DWORD PTR [esi+0x24]
  42d7d3:	test   ecx,ecx
  42d7d5:	jns    0x42d80e
  42d7d7:	cmp    ecx,0x8000
  42d7dd:	jae    0x42d7ec
  42d7df:	mov    WORD PTR [eax],cx
  42d7e2:	add    DWORD PTR ds:0x44f58c,edi
  42d7e8:	mov    eax,edi
  42d7ea:	jmp    0x42d813
  42d7ec:	mov    edx,0x8003
  42d7f1:	mov    WORD PTR [eax],dx
  42d7f4:	mov    eax,ds:0x44f58c
  42d7f9:	add    eax,edi
  42d7fb:	mov    ds:0x44f58c,eax
  42d800:	mov    DWORD PTR [eax],ecx
  42d802:	add    DWORD PTR ds:0x44f58c,0x4
  42d809:	push   0x6
  42d80b:	pop    eax
  42d80c:	jmp    0x42d813
  42d80e:	call   0x42d473
  42d813:	movzx  eax,ax
  42d816:	add    eax,0x8
  42d819:	mov    ecx,esi
  42d81b:	mov    DWORD PTR [ebp-0x4],eax
  42d81e:	call   0x42d4af
  42d823:	mov    cl,BYTE PTR [esi+0x5]
  42d826:	inc    cl
  42d828:	add    cl,BYTE PTR [ebp-0x4]
  42d82b:	and    cl,0x3
  42d82e:	call   0x42d4dd
  42d833:	mov    edx,DWORD PTR ds:0x44f58c
  42d839:	mov    esi,DWORD PTR [esi+0x18]
  42d83c:	mov    eax,edx
  42d83e:	sub    eax,0x44f590
  42d843:	cmp    eax,0x10000
  42d848:	jg     0x42d854
  42d84a:	test   esi,esi
  42d84c:	jne    0x42d79c
  42d852:	jmp    0x42d867
  42d854:	movzx  eax,BYTE PTR [ebx+0x5]
  42d858:	sub    ebx,eax
  42d85a:	push   eax
  42d85b:	mov    edx,ebx
  42d85d:	mov    ecx,0xfb6
  42d862:	call   0x42f15d
  42d867:	pop    edi
  42d868:	pop    esi
  42d869:	pop    ebx
  42d86a:	leave  
  42d86b:	ret    
  42d86c:	push   ebp
  42d86d:	mov    ebp,esp
  42d86f:	sub    esp,0x20
  42d872:	mov    eax,DWORD PTR [edx+0x10]
  42d875:	push   ebx
  42d876:	shr    eax,1
  42d878:	mov    ebx,ecx
  42d87a:	xor    ecx,ecx
  42d87c:	add    eax,0x20
  42d87f:	movzx  eax,ax
  42d882:	push   esi
  42d883:	mov    DWORD PTR [ebp-0xc],eax
  42d886:	mov    eax,DWORD PTR [ebx+0x18]
  42d889:	push   edi
  42d88a:	mov    DWORD PTR [ebp-0x4],edx
  42d88d:	jmp    0x42d893
  42d88f:	mov    eax,DWORD PTR [eax+0x18]
  42d892:	inc    ecx
  42d893:	test   eax,eax
  42d895:	jne    0x42d88f
  42d897:	mov    edi,DWORD PTR ds:0x44f58c
  42d89d:	and    DWORD PTR [ebp-0x16],0x0
  42d8a1:	and    DWORD PTR [ebp-0x12],0x0
  42d8a5:	mov    eax,0x1505
  42d8aa:	mov    WORD PTR [ebp-0x20],ax
  42d8ae:	xor    eax,eax
  42d8b0:	or     ax,0x1
  42d8b4:	mov    WORD PTR [ebp-0x1c],ax
  42d8b8:	movzx  eax,WORD PTR [edx+0xc]
  42d8bc:	mov    WORD PTR [ebp-0x1e],cx
  42d8c0:	inc    eax
  42d8c1:	mov    DWORD PTR [ebp-0x1a],eax
  42d8c4:	lea    esi,[ebp-0x20]
  42d8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8cb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42d8cd:	add    DWORD PTR ds:0x44f58c,0x12
  42d8d4:	movzx  ecx,BYTE PTR [ebx+0x23]
  42d8d8:	call   0x42d473
  42d8dd:	mov    ecx,ebx
  42d8df:	call   0x42d4af
  42d8e4:	call   0x42d522
  42d8e9:	mov    eax,ds:0x44f58c
  42d8ee:	mov    ecx,0x1203
  42d8f3:	mov    WORD PTR [eax],cx
  42d8f6:	mov    edx,DWORD PTR ds:0x44f58c
  42d8fc:	mov    eax,DWORD PTR [ebp-0x4]
  42d8ff:	add    edx,0x2
  42d902:	mov    DWORD PTR ds:0x44f58c,edx
  42d908:	mov    ax,WORD PTR [eax+0xc]
  42d90c:	mov    esi,DWORD PTR [ebx+0x18]
  42d90f:	inc    ax
  42d911:	movzx  edi,ax
  42d914:	test   esi,esi
  42d916:	je     0x42d96d
  42d918:	mov    eax,0x150d
  42d91d:	mov    WORD PTR [ebp-0x8],ax
  42d921:	xor    eax,eax
  42d923:	or     ax,0x3
  42d927:	mov    WORD PTR [ebp-0x6],ax
  42d92b:	mov    eax,DWORD PTR [ebp-0x8]
  42d92e:	mov    DWORD PTR [edx],eax
  42d930:	mov    eax,ds:0x44f58c
  42d935:	inc    edi
  42d936:	movzx  ecx,di
  42d939:	mov    DWORD PTR [eax+0x4],ecx
  42d93c:	add    DWORD PTR ds:0x44f58c,0x8
  42d943:	xor    ecx,ecx
  42d945:	call   0x42d473
  42d94a:	mov    ecx,esi
  42d94c:	call   0x42d4af
  42d951:	mov    cl,BYTE PTR [esi+0x5]
  42d954:	dec    cl
  42d956:	and    cl,0x3
  42d959:	call   0x42d4dd
  42d95e:	mov    esi,DWORD PTR [esi+0x18]
  42d961:	test   esi,esi
  42d963:	je     0x42d96d
  42d965:	mov    edx,DWORD PTR ds:0x44f58c
  42d96b:	jmp    0x42d918
  42d96d:	mov    esi,DWORD PTR [ebx+0x18]
  42d970:	test   esi,esi
  42d972:	je     0x42d9ba
  42d974:	mov    eax,0x1205
  42d979:	mov    WORD PTR [ebp-0x8],ax
  42d97d:	mov    eax,DWORD PTR [ebp-0xc]
  42d980:	movzx  eax,ax
  42d983:	mov    DWORD PTR [ebp-0x6],eax
  42d986:	mov    edi,DWORD PTR [ebp-0x8]
  42d989:	call   0x42d522
  42d98e:	mov    al,BYTE PTR [esi+0x1e]
  42d991:	mov    BYTE PTR [ebp-0x2],al
  42d994:	mov    al,BYTE PTR [esi+0x1f]
  42d997:	mov    BYTE PTR [ebp-0x1],al
  42d99a:	mov    eax,ds:0x44f58c
  42d99f:	mov    ecx,DWORD PTR [ebp-0x4]
  42d9a2:	mov    DWORD PTR [eax],edi
  42d9a4:	mov    eax,ds:0x44f58c
  42d9a9:	mov    DWORD PTR [eax+0x4],ecx
  42d9ac:	add    DWORD PTR ds:0x44f58c,0x8
  42d9b3:	mov    esi,DWORD PTR [esi+0x18]
  42d9b6:	test   esi,esi
  42d9b8:	jne    0x42d989
  42d9ba:	pop    edi
  42d9bb:	pop    esi
  42d9bc:	pop    ebx
  42d9bd:	leave  
  42d9be:	ret    
  42d9bf:	push   ebp
  42d9c0:	mov    ebp,esp
  42d9c2:	and    esp,0xfffffff8
  42d9c5:	push   ecx
  42d9c6:	push   esi
  42d9c7:	mov    esi,ecx
  42d9c9:	mov    ecx,0x8000
  42d9ce:	movzx  eax,WORD PTR [esi+0xe]
  42d9d2:	test   ecx,eax
  42d9d4:	jne    0x42da34
  42d9d6:	or     eax,ecx
  42d9d8:	mov    ecx,DWORD PTR [esi]
  42d9da:	mov    WORD PTR [esi+0xe],ax
  42d9de:	test   ecx,ecx
  42d9e0:	je     0x42d9e7
  42d9e2:	call   0x42d9bf
  42d9e7:	movzx  eax,WORD PTR [esi+0xe]
  42d9eb:	and    eax,0x1f
  42d9ee:	dec    eax
  42d9ef:	je     0x42da28
  42d9f1:	sub    eax,0x3
  42d9f4:	je     0x42da1f
  42d9f6:	sub    eax,0x4
  42d9f9:	jne    0x42da2f
  42d9fb:	mov    ecx,DWORD PTR [esi+0x14]
  42d9fe:	mov    al,BYTE PTR [ecx+0x6]
  42da01:	cmp    al,0xa
  42da03:	jb     0x42da2f
  42da05:	cmp    al,0xb
  42da07:	jbe    0x42da16
  42da09:	cmp    al,0xd
  42da0b:	jne    0x42da2f
  42da0d:	mov    edx,esi
  42da0f:	call   0x42d86c
  42da14:	jmp    0x42da2f
  42da16:	mov    edx,esi
  42da18:	call   0x42d6e0
  42da1d:	jmp    0x42da2f
  42da1f:	mov    ecx,esi
  42da21:	call   0x42d5cf
  42da26:	jmp    0x42da2f
  42da28:	mov    ecx,esi
  42da2a:	call   0x42d577
  42da2f:	call   0x42d522
  42da34:	pop    esi
  42da35:	mov    esp,ebp
  42da37:	pop    ebp
  42da38:	ret    
  42da39:	push   ebp
  42da3a:	mov    ebp,esp
  42da3c:	push   edi
  42da3d:	mov    edi,DWORD PTR [ebp+0x8]
  42da40:	mov    al,BYTE PTR [edi+0x6]
  42da43:	test   al,al
  42da45:	je     0x42da7e
  42da47:	cmp    al,0x1
  42da49:	je     0x42da5e
  42da4b:	jbe    0x42da8a
  42da4d:	cmp    al,0x3
  42da4f:	jbe    0x42da7e
  42da51:	cmp    al,0xa
  42da53:	je     0x42da59
  42da55:	cmp    al,0xd
  42da57:	jne    0x42da8a
  42da59:	mov    ecx,DWORD PTR [edi+0x1c]
  42da5c:	jmp    0x42da81
  42da5e:	push   esi
  42da5f:	mov    esi,DWORD PTR [edi+0x30]
  42da62:	jmp    0x42da79
  42da64:	cmp    BYTE PTR [esi+0x6],0x9
  42da68:	jne    0x42da76
  42da6a:	mov    ecx,DWORD PTR [esi+0x1c]
  42da6d:	test   ecx,ecx
  42da6f:	je     0x42da76
  42da71:	call   0x42d9bf
  42da76:	mov    esi,DWORD PTR [esi+0x18]
  42da79:	test   esi,esi
  42da7b:	jne    0x42da64
  42da7d:	pop    esi
  42da7e:	mov    ecx,DWORD PTR [edi+0x24]
  42da81:	test   ecx,ecx
  42da83:	je     0x42da8a
  42da85:	call   0x42d9bf
  42da8a:	pop    edi
  42da8b:	pop    ebp
  42da8c:	ret    0x4
  42da8f:	push   ebp
  42da90:	mov    ebp,esp
  42da92:	push   ecx
  42da93:	push   ecx
  42da94:	cmp    DWORD PTR ds:0x45f694,0x0
  42da9b:	push   edi
  42da9c:	mov    edi,ecx
  42da9e:	je     0x42dae4
  42daa0:	cmp    DWORD PTR [edi+0x18],0xffffffff
  42daa4:	jne    0x42dae4
  42daa6:	push   ebx
  42daa7:	xor    ebx,ebx
  42daa9:	push   esi
  42daaa:	mov    BYTE PTR [ebp-0x8],bl
  42daad:	mov    BYTE PTR [ebp-0x4],bl
  42dab0:	cmp    BYTE PTR [edi+0x1c],bl
  42dab3:	je     0x42dac0
  42dab5:	mov    BYTE PTR [ebp-0x8],0x10
  42dab9:	mov    BYTE PTR [ebp-0x4],0x1
  42dabd:	lea    ebx,[edi+0x1d]
  42dac0:	mov    ecx,DWORD PTR [edi+0xc]
  42dac3:	call   0x43f5f6
  42dac8:	push   ebx
  42dac9:	push   DWORD PTR [ebp-0x4]
  42dacc:	mov    esi,eax
  42dace:	push   DWORD PTR [ebp-0x8]
  42dad1:	push   esi
  42dad2:	call   0x4292ef
  42dad7:	push   esi
  42dad8:	mov    DWORD PTR [edi+0x18],eax
  42dadb:	call   DWORD PTR ds:0x464354
  42dae1:	pop    ecx
  42dae2:	pop    esi
  42dae3:	pop    ebx
  42dae4:	pop    edi
  42dae5:	leave  
  42dae6:	ret    
  42dae7:	push   ebp
  42dae8:	mov    ebp,esp
  42daea:	push   ecx
  42daeb:	push   esi
  42daec:	push   edi
  42daed:	mov    edi,DWORD PTR ds:0x44e4bc
  42daf3:	mov    ecx,edi
  42daf5:	call   0x42da8f
  42dafa:	mov    esi,DWORD PTR ds:0x45f834
  42db00:	test   esi,esi
  42db02:	je     0x42db25
  42db04:	mov    esi,DWORD PTR [esi+0x40]
  42db07:	test   esi,esi
  42db09:	je     0x42db25
  42db0b:	mov    edi,DWORD PTR [edi+0x18]
  42db0e:	cmp    DWORD PTR [esi+0x570],edi
  42db14:	je     0x42db1d
  42db16:	mov    ecx,esi
  42db18:	call   0x4293d3
  42db1d:	push   edi
  42db1e:	mov    ecx,esi
  42db20:	call   0x429459
  42db25:	pop    edi
  42db26:	pop    esi
  42db27:	leave  
  42db28:	ret    
  42db29:	push   ebp
  42db2a:	mov    ebp,esp
  42db2c:	sub    esp,0x10
  42db2f:	cmp    DWORD PTR ds:0x45f694,0x0
  42db36:	mov    eax,ecx
  42db38:	mov    ecx,DWORD PTR ds:0x45f830
  42db3e:	mov    DWORD PTR [ebp-0x8],eax
  42db41:	mov    DWORD PTR [ebp-0xc],ecx
  42db44:	je     0x42dc27
  42db4a:	push   esi
  42db4b:	mov    esi,DWORD PTR ds:0x45f834
  42db51:	push   edi
  42db52:	cmp    DWORD PTR [esi+0x40],0x0
  42db56:	jne    0x42dbef
  42db5c:	mov    ecx,0x11e0
  42db61:	call   0x43f45b
  42db66:	test   eax,eax
  42db68:	je     0x42db76
  42db6a:	push   ecx
  42db6b:	mov    ecx,eax
  42db6d:	call   0x42cb1f
  42db72:	mov    ecx,eax
  42db74:	jmp    0x42db78
  42db76:	xor    ecx,ecx
  42db78:	mov    eax,ds:0x45f834
  42db7d:	push   ebx
  42db7e:	push   0x3
  42db80:	mov    DWORD PTR [eax+0x40],ecx
  42db83:	pop    edx
  42db84:	mov    ecx,0x41e77b
  42db89:	call   0x445ae1
  42db8e:	mov    ecx,DWORD PTR ds:0x44e4bc
  42db94:	mov    edx,DWORD PTR ds:0x45f834
  42db9a:	push   ecx
  42db9b:	mov    DWORD PTR [eax+0x20],edx
  42db9e:	mov    edi,DWORD PTR [edx+0x40]
  42dba1:	mov    ebx,DWORD PTR [ecx+0x18]
  42dba4:	push   eax
  42dba5:	push   ecx
  42dba6:	mov    ecx,edi
  42dba8:	mov    DWORD PTR [ebp-0x4],edx
  42dbab:	call   0x42915e
  42dbb0:	push   0x0
  42dbb2:	mov    ecx,edi
  42dbb4:	call   0x42912f
  42dbb9:	push   0x0
  42dbbb:	lea    ecx,[edi+0x4]
  42dbbe:	call   0x4296cf
  42dbc3:	push   0x0
  42dbc5:	lea    ecx,[edi+0x4]
  42dbc8:	call   0x4296cf
  42dbcd:	mov    eax,DWORD PTR [ebp-0x4]
  42dbd0:	mov    ecx,edi
  42dbd2:	push   DWORD PTR [eax+0x20]
  42dbd5:	call   0x42912f
  42dbda:	push   ebx
  42dbdb:	mov    ecx,edi
  42dbdd:	call   0x429459
  42dbe2:	mov    esi,DWORD PTR ds:0x45f834
  42dbe8:	mov    eax,DWORD PTR [ebp-0x8]
  42dbeb:	mov    ecx,DWORD PTR [ebp-0xc]
  42dbee:	pop    ebx
  42dbef:	mov    esi,DWORD PTR [esi+0x40]
  42dbf2:	and    eax,0xffffff
  42dbf7:	or     eax,0x80000000
  42dbfc:	push   ecx
  42dbfd:	mov    DWORD PTR [ebp-0xc],eax
  42dc00:	push   0x8
  42dc02:	lea    eax,[ebp-0x10]
  42dc05:	mov    DWORD PTR [ebp-0x10],ecx
  42dc08:	push   eax
  42dc09:	lea    ecx,[esi+0x57c]
  42dc0f:	call   0x428fcf
  42dc14:	test   eax,eax
  42dc16:	je     0x42dc25
  42dc18:	inc    DWORD PTR [esi+0xda8]
  42dc1e:	add    DWORD PTR [esi+0x578],0x8
  42dc25:	pop    edi
  42dc26:	pop    esi
  42dc27:	leave  
  42dc28:	ret    
  42dc29:	push   ebp
  42dc2a:	mov    ebp,esp
  42dc2c:	mov    ecx,DWORD PTR [ebp+0x8]
  42dc2f:	call   0x43f45b
  42dc34:	pop    ebp
  42dc35:	ret    0x4
  42dc38:	push   ebp
  42dc39:	mov    ebp,esp
  42dc3b:	mov    ecx,DWORD PTR [ebp+0x8]
  42dc3e:	push   esi
  42dc3f:	call   0x43f45b
  42dc44:	mov    esi,eax
  42dc46:	test   esi,esi
  42dc48:	je     0x42dc58
  42dc4a:	push   DWORD PTR [ebp+0x8]
  42dc4d:	push   0x0
  42dc4f:	push   esi
  42dc50:	call   0x44764c
  42dc55:	add    esp,0xc
  42dc58:	mov    eax,esi
  42dc5a:	pop    esi
  42dc5b:	pop    ebp
  42dc5c:	ret    0x4
  42dc5f:	push   ebp
  42dc60:	mov    ebp,esp
  42dc62:	mov    eax,DWORD PTR [ebp+0x8]
  42dc65:	cmp    eax,DWORD PTR [ecx+0x4]
  42dc68:	je     0x42dc72
  42dc6a:	push   eax
  42dc6b:	call   DWORD PTR ds:0x464354
  42dc71:	pop    ecx
  42dc72:	pop    ebp
  42dc73:	ret    0x4
  42dc76:	push   esi
  42dc77:	push   edi
  42dc78:	mov    edi,ecx
  42dc7a:	lea    esi,[edi+0x420]
  42dc80:	push   esi
  42dc81:	push   ecx
  42dc82:	push   ecx
  42dc83:	call   0x42ca63
  42dc88:	lea    eax,[edi+0x20]
  42dc8b:	mov    DWORD PTR [esi+0x4],eax
  42dc8e:	mov    DWORD PTR [esi],0x41f24c
  42dc94:	mov    ecx,0x400
  42dc99:	mov    DWORD PTR [esi+0x8],ecx
  42dc9c:	mov    DWORD PTR [edi],eax
  42dc9e:	mov    DWORD PTR [edi+0x4],eax
  42dca1:	mov    DWORD PTR [edi+0x8],ecx
  42dca4:	mov    eax,edi
  42dca6:	pop    edi
  42dca7:	pop    esi
  42dca8:	ret    
  42dca9:	push   ebp
  42dcaa:	mov    ebp,esp
  42dcac:	push   ebx
  42dcad:	push   esi
  42dcae:	push   edi
  42dcaf:	mov    edi,DWORD PTR [ebp+0x8]
  42dcb2:	mov    cl,BYTE PTR [edi]
  42dcb4:	call   0x43859a
  42dcb9:	lea    esi,[edi+0x3]
  42dcbc:	mov    ebx,0xff
  42dcc1:	push   ebx
  42dcc2:	mov    edx,0x44e4e8
  42dcc7:	mov    ecx,esi
  42dcc9:	call   0x42e945
  42dcce:	mov    DWORD PTR [ebp+0x8],eax
  42dcd1:	test   eax,eax
  42dcd3:	je     0x42dd3e
  42dcd5:	movzx  ecx,BYTE PTR [esi]
  42dcd8:	add    ecx,esi
  42dcda:	push   ebx
  42dcdb:	mov    edx,0x44e5e8
  42dce0:	call   0x42e945
  42dce5:	mov    ebx,eax
  42dce7:	test   ebx,ebx
  42dce9:	je     0x42dd3e
  42dceb:	mov    esi,DWORD PTR [ebp+0x8]
  42dcee:	mov    BYTE PTR ds:0x44e6e8,0x52
  42dcf5:	movzx  ecx,BYTE PTR [esi]
  42dcf8:	inc    ecx
  42dcf9:	push   ecx
  42dcfa:	push   esi
  42dcfb:	push   0x44e6eb
  42dd00:	call   0x447646
  42dd05:	movzx  esi,BYTE PTR [esi]
  42dd08:	movzx  eax,BYTE PTR [ebx]
  42dd0b:	add    esi,0x44e6ec
  42dd11:	inc    eax
  42dd12:	push   eax
  42dd13:	push   ebx
  42dd14:	push   esi
  42dd15:	call   0x447646
  42dd1a:	movzx  eax,BYTE PTR [ebx]
  42dd1d:	mov    edx,DWORD PTR ds:0x448884
  42dd23:	mov    ecx,0x44e6e8
  42dd28:	sub    ax,cx
  42dd2b:	inc    ax
  42dd2d:	add    ax,si
  42dd30:	add    esp,0x18
  42dd33:	mov    ds:0x44e6e9,ax
  42dd39:	call   0x43f399
  42dd3e:	xor    eax,eax
  42dd40:	mov    WORD PTR [edi+0x1],ax
  42dd44:	pop    edi
  42dd45:	pop    esi
  42dd46:	pop    ebx
  42dd47:	pop    ebp
  42dd48:	ret    0x4
  42dd4b:	push   ebp
  42dd4c:	mov    ebp,esp
  42dd4e:	sub    esp,0x244
  42dd54:	mov    eax,ds:0x448858
  42dd59:	xor    eax,ebp
  42dd5b:	mov    DWORD PTR [ebp-0x4],eax
  42dd5e:	push   ebx
  42dd5f:	mov    ebx,DWORD PTR [ebp+0x8]
  42dd62:	push   esi
  42dd63:	mov    cl,BYTE PTR [ebx]
  42dd65:	push   edi
  42dd66:	mov    DWORD PTR [ebp-0x23c],ebx
  42dd6c:	call   0x43859a
  42dd71:	lea    esi,[ebx+0x4]
  42dd74:	push   0x5
  42dd76:	movzx  eax,BYTE PTR [esi+0x4]
  42dd7a:	pop    ecx
  42dd7b:	add    eax,0x5
  42dd7e:	mov    BYTE PTR [ebp-0x238],cl
  42dd84:	push   0x2
  42dd86:	add    eax,esi
  42dd88:	pop    ecx
  42dd89:	mov    BYTE PTR [ebp-0x237],cl
  42dd8f:	mov    WORD PTR [ebp-0x236],0x3e3c
  42dd98:	cmp    BYTE PTR [eax+0x1],0x0
  42dd9c:	mov    DWORD PTR [ebp-0x244],eax
  42dda2:	jne    0x42ddb0
  42dda4:	lea    eax,[ebp-0x238]
  42ddaa:	mov    DWORD PTR [ebp-0x244],eax
  42ddb0:	mov    bh,BYTE PTR ds:0x45f98f
  42ddb6:	mov    bl,BYTE PTR ds:0x45f98e
  42ddbc:	lea    ecx,[eax+0x2]
  42ddbf:	cmp    BYTE PTR [ecx],0x3c
  42ddc2:	setne  BYTE PTR [ebp-0x231]
  42ddc9:	xor    edx,edx
  42ddcb:	inc    edx
  42ddcc:	mov    BYTE PTR ds:0x45f98f,dl
  42ddd2:	mov    BYTE PTR ds:0x45f98e,dl
  42ddd8:	movzx  edx,BYTE PTR [eax+0x1]
  42dddc:	call   0x434ba9
  42dde1:	xor    eax,eax
  42dde3:	push   0x5
  42dde5:	mov    edi,eax
  42dde7:	mov    ax,ds:0x45fac8
  42dded:	pop    ecx
  42ddee:	mov    BYTE PTR ds:0x45f98e,bl
  42ddf4:	mov    BYTE PTR ds:0x45f98f,bh
  42ddfa:	cmp    ax,cx
  42ddfd:	je     0x42df77
  42de03:	test   ax,ax
  42de06:	je     0x42df77
  42de0c:	mov    ecx,esi
  42de0e:	call   0x445afc
  42de13:	test   eax,eax
  42de15:	je     0x42de21
  42de17:	cmp    BYTE PTR [eax+0x6],0x7
  42de1b:	je     0x42df63
  42de21:	lea    edx,[ebp-0x104]
  42de27:	mov    ecx,0x45fac8
  42de2c:	call   0x442fb2
  42de31:	test   eax,eax
  42de33:	je     0x42df63
  42de39:	xor    ecx,ecx
  42de3b:	cmp    WORD PTR [eax],cx
  42de3e:	jne    0x42df63
  42de44:	xor    eax,eax
  42de46:	inc    eax
  42de47:	xor    dl,dl
  42de49:	lea    ecx,[ebp-0x104]
  42de4f:	mov    ds:0x45f857,al
  42de54:	call   0x42f6c1
  42de59:	mov    edi,eax
  42de5b:	test   edi,edi
  42de5d:	je     0x42df5c
  42de63:	mov    cl,BYTE PTR [edi]
  42de65:	cmp    cl,0x2
  42de68:	je     0x42de87
  42de6a:	cmp    cl,0x4
  42de6d:	je     0x42de87
  42de6f:	cmp    cl,0x1
  42de72:	jne    0x42df5c
  42de78:	movzx  eax,WORD PTR [edi+0x2]
  42de7c:	test   eax,0x1f00
  42de81:	jne    0x42df5c
  42de87:	mov    eax,DWORD PTR [edi+0x10]
  42de8a:	test   eax,eax
  42de8c:	je     0x42de98
  42de8e:	test   BYTE PTR [eax+0x7],0x2
  42de92:	jne    0x42df5c
  42de98:	mov    ebx,DWORD PTR [edi+0x4]
  42de9b:	test   bl,0x3
  42de9e:	jne    0x42df5c
  42dea4:	test   ebx,0x1000
  42deaa:	je     0x42deb5
  42deac:	cmp    cl,0x2
  42deaf:	je     0x42df5c
  42deb5:	xor    eax,eax
  42deb7:	push   eax
  42deb8:	mov    edx,edi
  42deba:	mov    ecx,esi
  42debc:	and    ebx,0xfffffff
  42dec2:	mov    ds:0x45f857,al
  42dec7:	call   0x42e6c3
  42decc:	mov    edi,DWORD PTR [ebp-0x23c]
  42ded2:	test   bl,0x8
  42ded5:	je     0x42df18
  42ded7:	movzx  ecx,BYTE PTR [ebp-0x104]
  42dede:	mov    BYTE PTR [edi],0x5d
  42dee1:	movzx  eax,BYTE PTR [esi+0x4]
  42dee5:	add    esi,0x5
  42dee8:	add    esi,eax
  42deea:	push   0x2
  42deec:	movzx  eax,BYTE PTR [esi+0x1]
  42def0:	sub    cx,ax
  42def3:	pop    eax
  42def4:	sub    cx,ax
  42def7:	movzx  eax,BYTE PTR [ebp-0x104]
  42defe:	add    WORD PTR [edi+0x1],cx
  42df02:	push   eax
  42df03:	lea    eax,[ebp-0x104]
  42df09:	push   eax
  42df0a:	push   esi
  42df0b:	call   0x447646
  42df10:	add    esp,0xc
  42df13:	jmp    0x42e01e
  42df18:	xor    eax,eax
  42df1a:	mov    dl,0x8
  42df1c:	mov    ecx,esi
  42df1e:	mov    WORD PTR [edi+0x1],ax
  42df22:	call   0x445847
  42df27:	test   eax,eax
  42df29:	je     0x42e01e
  42df2f:	mov    edx,DWORD PTR ds:0x448884
  42df35:	push   0x7
  42df37:	pop    ecx
  42df38:	mov    WORD PTR [ebp-0x243],cx
  42df3f:	lea    ecx,[ebp-0x244]
  42df45:	mov    BYTE PTR [ebp-0x244],0x5a
  42df4c:	mov    DWORD PTR [ebp-0x241],eax
  42df52:	call   0x43f399
  42df57:	jmp    0x42e01e
  42df5c:	xor    eax,eax
  42df5e:	mov    ds:0x45f857,al
  42df63:	mov    ecx,DWORD PTR [ebp-0x244]
  42df69:	movzx  eax,BYTE PTR [ecx+0x1]
  42df6d:	lea    ebx,[ecx+0x2]
  42df70:	lea    esi,[ebx-0x1]
  42df73:	add    esi,eax
  42df75:	jmp    0x42dfa6
  42df77:	xor    eax,eax
  42df79:	inc    eax
  42df7a:	cmp    WORD PTR ds:0x45faca,ax
  42df81:	jne    0x42df63
  42df83:	cmp    BYTE PTR [ebp-0x231],0x0
  42df8a:	jne    0x42df63
  42df8c:	mov    ebx,DWORD PTR ds:0x45fad4
  42df92:	movsx  esi,WORD PTR ds:0x45facc
  42df99:	jmp    0x42dfbe
  42df9b:	mov    al,BYTE PTR [esi]
  42df9d:	cmp    al,0x20
  42df9f:	je     0x42dfa5
  42dfa1:	cmp    al,0x9
  42dfa3:	jne    0x42dfaa
  42dfa5:	dec    esi
  42dfa6:	cmp    esi,ebx
  42dfa8:	ja     0x42df9b
  42dfaa:	sub    esi,ebx
  42dfac:	inc    esi
  42dfad:	test   edi,edi
  42dfaf:	je     0x42dfbe
  42dfb1:	mov    eax,ds:0x45f83c
  42dfb6:	mov    DWORD PTR [edi],eax
  42dfb8:	mov    DWORD PTR ds:0x45f83c,edi
  42dfbe:	mov    edi,DWORD PTR [ebp-0x23c]
  42dfc4:	push   ecx
  42dfc5:	push   ebx
  42dfc6:	mov    edx,esi
  42dfc8:	lea    ecx,[edi+0x4]
  42dfcb:	call   0x42e55e
  42dfd0:	mov    DWORD PTR [ebp-0x22c],eax
  42dfd6:	xor    eax,eax
  42dfd8:	push   esi
  42dfd9:	mov    BYTE PTR [ebp-0x228],al
  42dfdf:	lea    eax,[ebp-0x227]
  42dfe5:	push   ebx
  42dfe6:	push   eax
  42dfe7:	mov    BYTE PTR [ebp-0x230],0x2e
  42dfee:	mov    BYTE PTR [ebp-0x22d],0xd
  42dff5:	call   0x447646
  42dffa:	mov    edx,DWORD PTR ds:0x448884
  42e000:	lea    eax,[esi+0x9]
  42e003:	add    esp,0xc
  42e006:	lea    ecx,[ebp-0x230]
  42e00c:	mov    WORD PTR [ebp-0x22f],ax
  42e013:	call   0x43f399
  42e018:	xor    eax,eax
  42e01a:	mov    WORD PTR [edi+0x1],ax
  42e01e:	mov    ecx,DWORD PTR [ebp-0x4]
  42e021:	pop    edi
  42e022:	pop    esi
  42e023:	xor    ecx,ebp
  42e025:	pop    ebx
  42e026:	call   0x446dc7
  42e02b:	leave  
  42e02c:	ret    0x4
  42e02f:	push   ebp
  42e030:	mov    ebp,esp
  42e032:	push   esi
  42e033:	mov    esi,DWORD PTR [ebp+0x8]
  42e036:	push   edi
  42e037:	lea    edi,[esi+0x4]
  42e03a:	xor    dl,dl
  42e03c:	movzx  eax,BYTE PTR [edi+0x4]
  42e040:	lea    ecx,[edi+0x5]
  42e043:	add    ecx,eax
  42e045:	mov    BYTE PTR ds:0x45f857,0x1
  42e04c:	call   0x42f6c1
  42e051:	mov    edx,eax
  42e053:	mov    BYTE PTR ds:0x45f857,0x0
  42e05a:	test   edx,edx
  42e05c:	jne    0x42e080
  42e05e:	cmp    BYTE PTR ds:0x45f692,al
  42e064:	jne    0x42e06d
  42e066:	mov    cl,BYTE PTR [esi]
  42e068:	call   0x43859a
  42e06d:	mov    dl,0x8
  42e06f:	mov    ecx,edi
  42e071:	call   0x445847
  42e076:	test   eax,eax
  42e078:	je     0x42e0e1
  42e07a:	or     BYTE PTR [eax+0x7],0x20
  42e07e:	jmp    0x42e0e1
  42e080:	cmp    BYTE PTR [edx],0x2
  42e083:	je     0x42e090
  42e085:	movzx  eax,WORD PTR [edx+0x2]
  42e089:	test   eax,0x1f00
  42e08e:	jne    0x42e09d
  42e090:	mov    eax,DWORD PTR [edx+0x10]
  42e093:	test   eax,eax
  42e095:	je     0x42e0c9
  42e097:	test   BYTE PTR [eax+0x7],0x2
  42e09b:	je     0x42e0c9
  42e09d:	mov    eax,ds:0x45f83c
  42e0a2:	mov    DWORD PTR [edx],eax
  42e0a4:	mov    DWORD PTR ds:0x45f83c,edx
  42e0aa:	push   0x0
  42e0ac:	xor    edx,edx
  42e0ae:	mov    ecx,0x7ea
  42e0b3:	call   0x42ee80
  42e0b8:	cmp    BYTE PTR ds:0x45f692,0x0
  42e0bf:	jne    0x42e0e1
  42e0c1:	xor    eax,eax
  42e0c3:	mov    WORD PTR [esi+0x1],ax
  42e0c7:	jmp    0x42e0e1
  42e0c9:	cmp    BYTE PTR [esi],0x5d
  42e0cc:	jne    0x42e0d8
  42e0ce:	mov    eax,DWORD PTR [edi]
  42e0d0:	test   eax,eax
  42e0d2:	je     0x42e0d8
  42e0d4:	or     BYTE PTR [eax+0x7],0x40
  42e0d8:	push   0x40
  42e0da:	mov    ecx,edi
  42e0dc:	call   0x42e6c3
  42e0e1:	pop    edi
  42e0e2:	pop    esi
  42e0e3:	pop    ebp
  42e0e4:	ret    0x4
  42e0e7:	push   ebp
  42e0e8:	mov    ebp,esp
  42e0ea:	sub    esp,0x10
  42e0ed:	mov    eax,DWORD PTR [ebp+0x8]
  42e0f0:	push   ebx
  42e0f1:	movzx  ecx,WORD PTR [eax+0x1]
  42e0f5:	add    ecx,eax
  42e0f7:	mov    DWORD PTR [ebp-0x8],ecx
  42e0fa:	lea    ecx,[eax+0x4]
  42e0fd:	mov    DWORD PTR [ebp-0x10],ecx
  42e100:	movzx  eax,BYTE PTR [ecx+0x4]
  42e104:	add    ecx,0x5
  42e107:	push   esi
  42e108:	add    eax,ecx
  42e10a:	push   edi
  42e10b:	mov    ecx,0x108
  42e110:	mov    DWORD PTR [ebp-0x4],eax
  42e113:	xor    edi,edi
  42e115:	call   0x43f45b
  42e11a:	mov    ecx,DWORD PTR [ebp-0x4]
  42e11d:	mov    esi,eax
  42e11f:	lea    ebx,[esi+0x9]
  42e122:	jmp    0x42e165
  42e124:	mov    eax,0xff
  42e129:	sub    eax,edi
  42e12b:	push   eax
  42e12c:	mov    edx,ebx
  42e12e:	call   0x42e945
  42e133:	mov    ecx,eax
  42e135:	test   ecx,ecx
  42e137:	je     0x42e1af
  42e139:	movzx  eax,BYTE PTR [ecx]
  42e13c:	add    edi,eax
  42e13e:	mov    DWORD PTR [ebp-0xc],eax
  42e141:	cmp    edi,0xff
  42e147:	ja     0x42e16c
  42e149:	push   eax
  42e14a:	lea    eax,[ecx+0x1]
  42e14d:	push   eax
  42e14e:	push   ebx
  42e14f:	call   0x447646
  42e154:	mov    ecx,DWORD PTR [ebp-0x4]
  42e157:	add    ebx,DWORD PTR [ebp-0xc]
  42e15a:	movzx  eax,BYTE PTR [ecx]
  42e15d:	add    esp,0xc
  42e160:	add    ecx,eax
  42e162:	mov    DWORD PTR [ebp-0x4],ecx
  42e165:	cmp    ecx,DWORD PTR [ebp-0x8]
  42e168:	jb     0x42e124
  42e16a:	jmp    0x42e17f
  42e16c:	push   0x0
  42e16e:	xor    edx,edx
  42e170:	mov    ecx,0x82b
  42e175:	call   0x42ee80
  42e17a:	mov    edi,0xff
  42e17f:	push   ecx
  42e180:	mov    ecx,DWORD PTR [ebp-0x10]
  42e183:	lea    eax,[esi+0x9]
  42e186:	push   eax
  42e187:	mov    edx,edi
  42e189:	call   0x42e55e
  42e18e:	mov    edx,DWORD PTR ds:0x448884
  42e194:	sub    ebx,esi
  42e196:	mov    DWORD PTR [esi+0x4],eax
  42e199:	mov    BYTE PTR [esi],0x2e
  42e19c:	mov    BYTE PTR [esi+0x3],0xd
  42e1a0:	mov    BYTE PTR [esi+0x8],0x0
  42e1a4:	mov    ecx,esi
  42e1a6:	mov    WORD PTR [esi+0x1],bx
  42e1aa:	call   0x43f399
  42e1af:	push   esi
  42e1b0:	call   DWORD PTR ds:0x464354
  42e1b6:	mov    eax,DWORD PTR [ebp+0x8]
  42e1b9:	pop    ecx
  42e1ba:	pop    edi
  42e1bb:	xor    ecx,ecx
  42e1bd:	pop    esi
  42e1be:	mov    WORD PTR [eax+0x1],cx
  42e1c2:	pop    ebx
  42e1c3:	leave  
  42e1c4:	ret    0x4
  42e1c7:	push   ebp
  42e1c8:	mov    ebp,esp
  42e1ca:	push   esi
  42e1cb:	mov    esi,DWORD PTR [ebp+0x8]
  42e1ce:	movzx  edx,WORD PTR [esi+0x1]
  42e1d2:	lea    ecx,[esi+0x4]
  42e1d5:	push   ecx
  42e1d6:	lea    eax,[ecx+0x5]
  42e1d9:	sub    edx,eax
  42e1db:	push   eax
  42e1dc:	add    edx,esi
  42e1de:	call   0x42e55e
  42e1e3:	pop    esi
  42e1e4:	pop    ebp
  42e1e5:	ret    0x4
  42e1e8:	push   ebp
  42e1e9:	mov    ebp,esp
  42e1eb:	push   ebx
  42e1ec:	push   esi
  42e1ed:	push   edi
  42e1ee:	mov    edi,DWORD PTR [ebp+0x8]
  42e1f1:	mov    ecx,0x100
  42e1f6:	lea    ebx,[edi+0x4]
  42e1f9:	call   0x43f45b
  42e1fe:	movzx  ecx,BYTE PTR [ebx+0x4]
  42e202:	mov    esi,eax
  42e204:	add    ecx,0x5
  42e207:	push   0xff
  42e20c:	add    ecx,ebx
  42e20e:	mov    edx,esi
  42e210:	call   0x42e945
  42e215:	test   eax,eax
  42e217:	je     0x42e257
  42e219:	mov    bl,BYTE PTR [eax]
  42e21b:	movzx  eax,bl
  42e21e:	cdq    
  42e21f:	push   edx
  42e220:	push   eax
  42e221:	lea    ecx,[edi+0x4]
  42e224:	call   0x42e602
  42e229:	mov    edx,DWORD PTR ds:0x448884
  42e22f:	push   0xd
  42e231:	mov    DWORD PTR [esi+0x4],eax
  42e234:	pop    eax
  42e235:	mov    ecx,esi
  42e237:	mov    BYTE PTR [esi],0x26
  42e23a:	mov    WORD PTR [esi+0x1],ax
  42e23e:	mov    BYTE PTR [esi+0x3],al
  42e241:	mov    WORD PTR [esi+0x8],0x400
  42e247:	mov    BYTE PTR [esi+0xa],0xb
  42e24b:	mov    BYTE PTR [esi+0xb],bl
  42e24e:	mov    BYTE PTR [esi+0xc],0x1
  42e252:	call   0x43f399
  42e257:	push   esi
  42e258:	call   DWORD PTR ds:0x464354
  42e25e:	pop    ecx
  42e25f:	xor    eax,eax
  42e261:	mov    WORD PTR [edi+0x1],ax
  42e265:	pop    edi
  42e266:	pop    esi
  42e267:	pop    ebx
  42e268:	pop    ebp
  42e269:	ret    0x4
  42e26c:	push   ebp
  42e26d:	mov    ebp,esp
  42e26f:	sub    esp,0x10
  42e272:	push   ebx
  42e273:	push   esi
  42e274:	push   edi
  42e275:	mov    edi,DWORD PTR [ebp+0x8]
  42e278:	mov    ecx,0x109
  42e27d:	movzx  eax,WORD PTR [edi+0x1]
  42e281:	mov    DWORD PTR [ebp-0x10],eax
  42e284:	movzx  eax,BYTE PTR [edi+0x8]
  42e288:	lea    ebx,[edi+0x9]
  42e28b:	add    ebx,eax
  42e28d:	call   0x43f45b
  42e292:	mov    esi,eax
  42e294:	push   0xff
  42e299:	lea    edx,[esi+0x9]
  42e29c:	mov    ecx,ebx
  42e29e:	call   0x42e945
  42e2a3:	mov    DWORD PTR [ebp-0x4],eax
  42e2a6:	test   eax,eax
  42e2a8:	je     0x42e38c
  42e2ae:	movzx  eax,BYTE PTR [ebx]
  42e2b1:	add    ebx,eax
  42e2b3:	lea    edx,[ebp+0xb]
  42e2b6:	mov    ecx,ebx
  42e2b8:	mov    DWORD PTR [ebp-0xc],ebx
  42e2bb:	call   0x431d7f
  42e2c0:	dec    eax
  42e2c1:	mov    DWORD PTR [ebp-0x8],eax
  42e2c4:	jns    0x42e2d0
  42e2c6:	mov    ecx,0x82a
  42e2cb:	jmp    0x42e383
  42e2d0:	mov    ecx,DWORD PTR [ebp-0x4]
  42e2d3:	mov    cl,BYTE PTR [ecx]
  42e2d5:	test   cl,cl
  42e2d7:	je     0x42e37e
  42e2dd:	movzx  ebx,cl
  42e2e0:	cmp    eax,ebx
  42e2e2:	jae    0x42e37e
  42e2e8:	mov    ecx,DWORD PTR [ebp-0xc]
  42e2eb:	movzx  eax,BYTE PTR [ecx]
  42e2ee:	add    ecx,eax
  42e2f0:	mov    eax,DWORD PTR [ebp-0x10]
  42e2f3:	movzx  eax,ax
  42e2f6:	add    eax,edi
  42e2f8:	cmp    ecx,eax
  42e2fa:	jb     0x42e353
  42e2fc:	mov    ecx,DWORD PTR [ebp-0x8]
  42e2ff:	sub    ebx,ecx
  42e301:	mov    eax,DWORD PTR [ebp-0x4]
  42e304:	inc    eax
  42e305:	add    eax,ecx
  42e307:	push   ebx
  42e308:	push   eax
  42e309:	lea    eax,[esi+0x9]
  42e30c:	push   eax
  42e30d:	call   0x447646
  42e312:	pop    ecx
  42e313:	pop    ecx
  42e314:	lea    eax,[esi+0x9]
  42e317:	push   eax
  42e318:	mov    edx,ebx
  42e31a:	lea    ecx,[edi+0x4]
  42e31d:	call   0x42e55e
  42e322:	mov    edx,DWORD PTR ds:0x448884
  42e328:	mov    DWORD PTR [esi+0x4],eax
  42e32b:	lea    eax,[ebx+0x9]
  42e32e:	mov    BYTE PTR [esi],0x2f
  42e331:	mov    BYTE PTR [esi+0x3],0xd
  42e335:	mov    BYTE PTR [esi+0x8],0x0
  42e339:	mov    ecx,esi
  42e33b:	mov    WORD PTR [esi+0x1],ax
  42e33f:	call   0x43f399
  42e344:	push   esi
  42e345:	call   DWORD PTR ds:0x464354
  42e34b:	xor    eax,eax
  42e34d:	mov    WORD PTR [edi+0x1],ax
  42e351:	jmp    0x42e399
  42e353:	lea    edx,[ebp+0xb]
  42e356:	call   0x431d7f
  42e35b:	mov    ebx,eax
  42e35d:	test   ebx,ebx
  42e35f:	jns    0x42e368
  42e361:	mov    ecx,0x82c
  42e366:	jmp    0x42e383
  42e368:	mov    eax,DWORD PTR [ebp-0x4]
  42e36b:	mov    ecx,DWORD PTR [ebp-0x8]
  42e36e:	movzx  eax,BYTE PTR [eax]
  42e371:	sub    eax,ecx
  42e373:	cmp    ebx,eax
  42e375:	jle    0x42e301
  42e377:	mov    ecx,0x82d
  42e37c:	jmp    0x42e383
  42e37e:	mov    ecx,0x82b
  42e383:	push   0x0
  42e385:	xor    edx,edx
  42e387:	call   0x42ee80
  42e38c:	xor    eax,eax
  42e38e:	push   esi
  42e38f:	mov    WORD PTR [edi+0x1],ax
  42e393:	call   DWORD PTR ds:0x464354
  42e399:	pop    ecx
  42e39a:	pop    edi
  42e39b:	pop    esi
  42e39c:	pop    ebx
  42e39d:	leave  
  42e39e:	ret    0x4
  42e3a1:	push   ebp
  42e3a2:	mov    ebp,esp
  42e3a4:	push   ecx
  42e3a5:	push   ebx
  42e3a6:	push   esi
  42e3a7:	mov    esi,edx
  42e3a9:	push   edi
  42e3aa:	movzx  edi,BYTE PTR [esi]
  42e3ad:	inc    esi
  42e3ae:	mov    bl,cl
  42e3b0:	test   edi,edi
  42e3b2:	jne    0x42e3c1
  42e3b4:	push   edi
  42e3b5:	xor    edx,edx
  42e3b7:	mov    ecx,0x86c
  42e3bc:	call   0x42ee80
  42e3c1:	movzx  eax,bl
  42e3c4:	dec    bl
  42e3c6:	cmp    edi,eax
  42e3c8:	jae    0x42e3e1
  42e3ca:	push   0x0
  42e3cc:	xor    edx,edx
  42e3ce:	mov    ecx,0x82b
  42e3d3:	call   0x42ee80
  42e3d8:	xor    al,al
  42e3da:	pop    edi
  42e3db:	pop    esi
  42e3dc:	pop    ebx
  42e3dd:	leave  
  42e3de:	ret    0x4
  42e3e1:	mov    eax,DWORD PTR [ebp+0x8]
  42e3e4:	mov    cl,BYTE PTR [eax]
  42e3e6:	test   cl,cl
  42e3e8:	je     0x42e3d8
  42e3ea:	movzx  ecx,cl
  42e3ed:	inc    eax
  42e3ee:	mov    DWORD PTR [ebp-0x4],ecx
  42e3f1:	mov    DWORD PTR [ebp+0x8],eax
  42e3f4:	test   ecx,ecx
  42e3f6:	je     0x42e3d8
  42e3f8:	test   edi,edi
  42e3fa:	je     0x42e3d8
  42e3fc:	movzx  edx,bl
  42e3ff:	sub    edi,edx
  42e401:	cmp    ecx,edi
  42e403:	ja     0x42e3d8
  42e405:	add    esi,edx
  42e407:	add    edi,esi
  42e409:	jmp    0x42e432
  42e40b:	push   ecx
  42e40c:	push   eax
  42e40d:	push   esi
  42e40e:	call   0x447640
  42e413:	add    esp,0xc
  42e416:	test   eax,eax
  42e418:	je     0x42e438
  42e41a:	movzx  eax,BYTE PTR [esi]
  42e41d:	cmp    BYTE PTR [eax+0x4630d0],0x0
  42e424:	je     0x42e429
  42e426:	inc    esi
  42e427:	inc    bl
  42e429:	mov    eax,DWORD PTR [ebp+0x8]
  42e42c:	mov    ecx,DWORD PTR [ebp-0x4]
  42e42f:	inc    esi
  42e430:	inc    bl
  42e432:	cmp    esi,edi
  42e434:	jb     0x42e40b
  42e436:	jmp    0x42e3d8
  42e438:	movzx  eax,bl
  42e43b:	inc    eax
  42e43c:	jmp    0x42e3da
  42e43e:	push   ebp
  42e43f:	mov    ebp,esp
  42e441:	and    esp,0xfffffff8
  42e444:	sub    esp,0xc
  42e447:	push   ebx
  42e448:	push   esi
  42e449:	push   edi
  42e44a:	mov    edi,DWORD PTR [ebp+0x8]
  42e44d:	movzx  eax,BYTE PTR [edi+0x8]
  42e451:	movzx  ecx,WORD PTR [edi+0x1]
  42e455:	lea    ebx,[edi+0x9]
  42e458:	add    ebx,eax
  42e45a:	add    ecx,edi
  42e45c:	movzx  esi,BYTE PTR [ebx]
  42e45f:	add    esi,ebx
  42e461:	movzx  eax,BYTE PTR [esi]
  42e464:	add    eax,esi
  42e466:	cmp    eax,ecx
  42e468:	jb     0x42e474
  42e46a:	mov    DWORD PTR [esp+0x10],0x1
  42e472:	jmp    0x42e49f
  42e474:	lea    edx,[esp+0xf]
  42e478:	mov    ecx,ebx
  42e47a:	call   0x431d7f
  42e47f:	mov    DWORD PTR [esp+0x10],eax
  42e483:	cmp    eax,0xff
  42e488:	jle    0x42e49d
  42e48a:	push   0x0
  42e48c:	xor    edx,edx
  42e48e:	mov    ecx,0x824
  42e493:	call   0x42ee80
  42e498:	jmp    0x42e54f
  42e49d:	mov    ebx,esi
  42e49f:	mov    ecx,0x200
  42e4a4:	call   0x43f45b
  42e4a9:	mov    esi,eax
  42e4ab:	push   0xff
  42e4b0:	mov    edx,esi
  42e4b2:	mov    ecx,ebx
  42e4b4:	call   0x42e945
  42e4b9:	mov    DWORD PTR [esp+0x14],eax
  42e4bd:	test   eax,eax
  42e4bf:	je     0x42e547
  42e4c5:	cmp    BYTE PTR [eax],0x0
  42e4c8:	jne    0x42e4e4
  42e4ca:	xor    edx,edx
  42e4cc:	cmp    DWORD PTR [esp+0x10],0x1
  42e4d1:	push   0x0
  42e4d3:	mov    ecx,0x824
  42e4d8:	je     0x42e4dd
  42e4da:	add    ecx,0x7
  42e4dd:	call   0x42ee80
  42e4e2:	jmp    0x42e547
  42e4e4:	movzx  ecx,BYTE PTR [ebx]
  42e4e7:	add    ecx,ebx
  42e4e9:	push   0xff
  42e4ee:	lea    edx,[esi+0x100]
  42e4f4:	call   0x42e945
  42e4f9:	test   eax,eax
  42e4fb:	je     0x42e547
  42e4fd:	mov    edx,DWORD PTR [esp+0x14]
  42e501:	mov    cl,BYTE PTR [esp+0x10]
  42e505:	push   eax
  42e506:	call   0x42e3a1
  42e50b:	mov    BYTE PTR [esi+0xb],al
  42e50e:	movzx  eax,al
  42e511:	cdq    
  42e512:	push   edx
  42e513:	push   eax
  42e514:	lea    ecx,[edi+0x4]
  42e517:	call   0x42e602
  42e51c:	mov    edx,DWORD PTR ds:0x448884
  42e522:	push   0xd
  42e524:	mov    DWORD PTR [esi+0x4],eax
  42e527:	pop    eax
  42e528:	mov    ecx,esi
  42e52a:	mov    BYTE PTR [esi],0x26
  42e52d:	mov    WORD PTR [esi+0x1],ax
  42e531:	mov    BYTE PTR [esi+0x3],al
  42e534:	mov    WORD PTR [esi+0x8],0x400
  42e53a:	mov    BYTE PTR [esi+0xa],0xb
  42e53e:	mov    BYTE PTR [esi+0xc],0x1
  42e542:	call   0x43f399
  42e547:	push   esi
  42e548:	call   DWORD PTR ds:0x464354
  42e54e:	pop    ecx
  42e54f:	xor    eax,eax
  42e551:	mov    WORD PTR [edi+0x1],ax
  42e555:	pop    edi
  42e556:	pop    esi
  42e557:	pop    ebx
  42e558:	mov    esp,ebp
  42e55a:	pop    ebp
  42e55b:	ret    0x4
  42e55e:	push   ebp
  42e55f:	mov    ebp,esp
  42e561:	push   ebx
  42e562:	push   esi
  42e563:	push   edi
  42e564:	mov    edi,edx
  42e566:	mov    dl,0x7
  42e568:	mov    ebx,ecx
  42e56a:	call   0x445847
  42e56f:	mov    esi,eax
  42e571:	test   esi,esi
  42e573:	jne    0x42e592
  42e575:	push   0x7
  42e577:	pop    edx
  42e578:	mov    ecx,ebx
  42e57a:	call   0x4458d0
  42e57f:	mov    esi,eax
  42e581:	test   esi,esi
  42e583:	je     0x42e5f9
  42e585:	lea    ecx,[edi+0x1]
  42e588:	call   0x43f45b
  42e58d:	mov    DWORD PTR [esi+0x18],eax
  42e590:	jmp    0x42e5ba
  42e592:	test   BYTE PTR [esi+0x7],0x40
  42e596:	je     0x42e5e6
  42e598:	lea    eax,[edi+0x1]
  42e59b:	push   eax
  42e59c:	push   DWORD PTR [esi+0x18]
  42e59f:	call   DWORD PTR ds:0x4643e8
  42e5a5:	mov    ebx,eax
  42e5a7:	pop    ecx
  42e5a8:	pop    ecx
  42e5a9:	test   ebx,ebx
  42e5ab:	jne    0x42e5b7
  42e5ad:	mov    ecx,0x3ec
  42e5b2:	call   0x42f124
  42e5b7:	mov    DWORD PTR [esi+0x18],ebx
  42e5ba:	cmp    DWORD PTR [ebp+0x8],0x0
  42e5be:	je     0x42e5d8
  42e5c0:	push   edi
  42e5c1:	push   DWORD PTR [ebp+0x8]
  42e5c4:	push   DWORD PTR [esi+0x18]
  42e5c7:	call   0x447646
  42e5cc:	mov    eax,DWORD PTR [esi+0x18]
  42e5cf:	add    esp,0xc
  42e5d2:	mov    BYTE PTR [edi+eax*1],0x0
  42e5d6:	jmp    0x42e5de
  42e5d8:	mov    eax,DWORD PTR [esi+0x18]
  42e5db:	mov    BYTE PTR [eax],0x0
  42e5de:	or     BYTE PTR [esi+0x7],0x40
  42e5e2:	mov    eax,esi
  42e5e4:	jmp    0x42e5fb
  42e5e6:	movzx  eax,BYTE PTR [esi+0x5]
  42e5ea:	sub    esi,eax
  42e5ec:	push   eax
  42e5ed:	mov    edx,esi
  42e5ef:	mov    ecx,0x7d5
  42e5f4:	call   0x42f15d
  42e5f9:	xor    eax,eax
  42e5fb:	pop    edi
  42e5fc:	pop    esi
  42e5fd:	pop    ebx
  42e5fe:	pop    ebp
  42e5ff:	ret    0x8
  42e602:	push   ebp
  42e603:	mov    ebp,esp
  42e605:	push   ebx
  42e606:	push   esi
  42e607:	push   edi
  42e608:	mov    dl,0x8
  42e60a:	mov    edi,ecx
  42e60c:	call   0x445847
  42e611:	mov    ebx,DWORD PTR [ebp+0xc]
  42e614:	mov    esi,eax
  42e616:	test   esi,esi
  42e618:	jne    0x42e677
  42e61a:	push   0x8
  42e61c:	pop    edx
  42e61d:	mov    ecx,edi
  42e61f:	call   0x4458d0
  42e624:	mov    esi,eax
  42e626:	test   esi,esi
  42e628:	jne    0x42e62e
  42e62a:	xor    eax,eax
  42e62c:	jmp    0x42e670
  42e62e:	lea    edi,[esi+0x7]
  42e631:	or     BYTE PTR [edi],0x40
  42e634:	cmp    BYTE PTR ds:0x44e047,0x0
  42e63b:	je     0x42e65e
  42e63d:	cmp    BYTE PTR ds:0x44e046,0x0
  42e644:	je     0x42e65e
  42e646:	cmp    BYTE PTR ds:0x45f692,0x0
  42e64d:	jne    0x42e65e
  42e64f:	test   BYTE PTR [edi],0x10
  42e652:	jne    0x42e65e
  42e654:	push   0x2
  42e656:	pop    edx
  42e657:	mov    ecx,esi
  42e659:	call   0x44609b
  42e65e:	mov    eax,DWORD PTR [ebp+0x8]
  42e661:	and    BYTE PTR [edi],0xdf
  42e664:	and    DWORD PTR [esi+0x2c],0x0
  42e668:	mov    DWORD PTR [esi+0x20],eax
  42e66b:	mov    DWORD PTR [esi+0x24],ebx
  42e66e:	mov    eax,esi
  42e670:	pop    edi
  42e671:	pop    esi
  42e672:	pop    ebx
  42e673:	pop    ebp
  42e674:	ret    0x8
  42e677:	lea    edi,[esi+0x7]
  42e67a:	mov    cl,BYTE PTR [edi]
  42e67c:	mov    al,cl
  42e67e:	and    al,0x3
  42e680:	cmp    al,0x3
  42e682:	jne    0x42e68b
  42e684:	and    cl,0xfd
  42e687:	mov    BYTE PTR [edi],cl
  42e689:	jmp    0x42e634
  42e68b:	test   cl,0x40
  42e68e:	jne    0x42e6a3
  42e690:	mov    eax,DWORD PTR [ebp+0x8]
  42e693:	cmp    eax,DWORD PTR [esi+0x20]
  42e696:	jne    0x42e6a8
  42e698:	cmp    ebx,DWORD PTR [esi+0x24]
  42e69b:	jne    0x42e6a8
  42e69d:	cmp    DWORD PTR [esi+0x2c],0x0
  42e6a1:	jne    0x42e6a8
  42e6a3:	test   cl,0x2
  42e6a6:	je     0x42e634
  42e6a8:	movzx  eax,BYTE PTR [esi+0x5]
  42e6ac:	sub    esi,eax
  42e6ae:	push   eax
  42e6af:	mov    edx,esi
  42e6b1:	mov    ecx,0x7d5
  42e6b6:	call   0x42f15d
  42e6bb:	and    BYTE PTR [edi],0xdf
  42e6be:	jmp    0x42e62a
  42e6c3:	push   ebp
  42e6c4:	mov    ebp,esp
  42e6c6:	sub    esp,0x10
  42e6c9:	push   ebx
  42e6ca:	push   esi
  42e6cb:	mov    esi,edx
  42e6cd:	push   edi
  42e6ce:	cmp    BYTE PTR [esi],0x4
  42e6d1:	mov    DWORD PTR [ebp-0xc],esi
  42e6d4:	mov    DWORD PTR [ebp-0x10],ecx
  42e6d7:	mov    BYTE PTR [ebp-0x1],0x0
  42e6db:	jne    0x42e6e7
  42e6dd:	mov    ecx,esi
  42e6df:	call   0x431bbe
  42e6e4:	mov    ecx,DWORD PTR [ebp-0x10]
  42e6e7:	cmp    BYTE PTR [esi],0x2
  42e6ea:	mov    eax,DWORD PTR [esi+0x8]
  42e6ed:	mov    edi,DWORD PTR [esi+0xc]
  42e6f0:	jne    0x42e702
  42e6f2:	test   DWORD PTR [esi+0x4],0x8000
  42e6f9:	je     0x42e702
  42e6fb:	neg    eax
  42e6fd:	adc    edi,0x0
  42e700:	neg    edi
  42e702:	mov    dl,0x8
  42e704:	mov    DWORD PTR [ebp-0x8],eax
  42e707:	call   0x445847
  42e70c:	mov    ebx,eax
  42e70e:	test   ebx,ebx
  42e710:	jne    0x42e7c7
  42e716:	mov    ecx,DWORD PTR [ebp-0x10]
  42e719:	push   0x8
  42e71b:	pop    edx
  42e71c:	call   0x4458d0
  42e721:	mov    ebx,eax
  42e723:	test   ebx,ebx
  42e725:	jne    0x42e739
  42e727:	mov    eax,ds:0x45f83c
  42e72c:	mov    DWORD PTR [esi],eax
  42e72e:	mov    DWORD PTR ds:0x45f83c,esi
  42e734:	jmp    0x42e93e
  42e739:	mov    al,BYTE PTR [ebp+0x8]
  42e73c:	lea    edx,[ebx+0x7]
  42e73f:	mov    DWORD PTR [ebp-0x10],edx
  42e742:	or     BYTE PTR [edx],al
  42e744:	cmp    BYTE PTR ds:0x44e047,0x0
  42e74b:	je     0x42e76e
  42e74d:	cmp    BYTE PTR ds:0x44e046,0x0
  42e754:	je     0x42e76e
  42e756:	cmp    BYTE PTR ds:0x45f692,0x0
  42e75d:	jne    0x42e76e
  42e75f:	test   BYTE PTR [edx],0x10
  42e762:	jne    0x42e76e
  42e764:	push   0x2
  42e766:	pop    edx
  42e767:	mov    ecx,ebx
  42e769:	call   0x44609b
  42e76e:	mov    eax,DWORD PTR [ebp-0x8]
  42e771:	mov    DWORD PTR [ebx+0x20],eax
  42e774:	mov    eax,DWORD PTR [ebx+0x2c]
  42e777:	xor    edx,edx
  42e779:	lea    ecx,[eax+0x1]
  42e77c:	neg    ecx
  42e77e:	sbb    ecx,ecx
  42e780:	and    ecx,eax
  42e782:	mov    DWORD PTR [ebx+0x24],edi
  42e785:	mov    DWORD PTR [ebx+0x2c],edx
  42e788:	mov    al,BYTE PTR [esi]
  42e78a:	mov    DWORD PTR [ebp+0x8],ecx
  42e78d:	cmp    al,0x2
  42e78f:	jne    0x42e836
  42e795:	cmp    DWORD PTR [esi+0x18],edx
  42e798:	jne    0x42e836
  42e79e:	cmp    DWORD PTR [esi+0x10],edx
  42e7a1:	jne    0x42e836
  42e7a7:	test   BYTE PTR [esi+0x4],0x8
  42e7ab:	jne    0x42e836
  42e7b1:	test   DWORD PTR [esi+0x4],0x8000
  42e7b8:	je     0x42e8bd
  42e7be:	or     DWORD PTR [ebx+0x2c],0xffffffff
  42e7c2:	jmp    0x42e8bd
  42e7c7:	lea    edx,[ebx+0x7]
  42e7ca:	mov    DWORD PTR [ebp-0x10],edx
  42e7cd:	mov    cl,BYTE PTR [edx]
  42e7cf:	mov    al,cl
  42e7d1:	and    al,0x3
  42e7d3:	cmp    al,0x3
  42e7d5:	jne    0x42e7e1
  42e7d7:	and    cl,0xfd
  42e7da:	or     cl,0x40
  42e7dd:	mov    BYTE PTR [edx],cl
  42e7df:	jmp    0x42e80d
  42e7e1:	movzx  eax,cl
  42e7e4:	and    eax,DWORD PTR [ebp+0x8]
  42e7e7:	sete   BYTE PTR [ebp-0x1]
  42e7eb:	test   cl,0x2
  42e7ee:	jne    0x42e91e
  42e7f4:	test   eax,eax
  42e7f6:	jne    0x42e80d
  42e7f8:	mov    eax,DWORD PTR [ebp-0x8]
  42e7fb:	cmp    eax,DWORD PTR [ebx+0x20]
  42e7fe:	jne    0x42e91e
  42e804:	cmp    edi,DWORD PTR [ebx+0x24]
  42e807:	jne    0x42e91e
  42e80d:	test   BYTE PTR [edx],0x1
  42e810:	je     0x42e744
  42e816:	cmp    BYTE PTR [esi],0x2
  42e819:	jne    0x42e744
  42e81f:	test   DWORD PTR [esi+0x4],0x100
  42e826:	je     0x42e744
  42e82c:	mov    ecx,0x7ea
  42e831:	jmp    0x42e923
  42e836:	mov    edx,DWORD PTR [esi+0x4]
  42e839:	mov    ecx,0xc000
  42e83e:	and    WORD PTR [esi+0x2],cx
  42e842:	mov    ecx,edx
  42e844:	and    ecx,0x3d90c
  42e84a:	cmp    al,0x2
  42e84c:	jne    0x42e866
  42e84e:	test   edx,0x2000
  42e854:	je     0x42e85e
  42e856:	or     ecx,0x80
  42e85c:	jmp    0x42e866
  42e85e:	and    DWORD PTR [esi+0x18],0x0
  42e862:	mov    BYTE PTR [esi+0x1],0x0
  42e866:	mov    eax,edx
  42e868:	xor    eax,ecx
  42e86a:	and    eax,0xfffffff
  42e86f:	xor    eax,edx
  42e871:	mov    DWORD PTR [esi+0x4],eax
  42e874:	call   0x431f11
  42e879:	push   0x8
  42e87b:	mov    edi,eax
  42e87d:	mov    DWORD PTR [ebx+0x2c],eax
  42e880:	pop    ecx
  42e881:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e883:	mov    eax,DWORD PTR [ebx+0x2c]
  42e886:	mov    eax,DWORD PTR [eax+0x10]
  42e889:	test   eax,eax
  42e88b:	je     0x42e897
  42e88d:	mov    eax,DWORD PTR [eax+0x1c]
  42e890:	add    DWORD PTR [ebx+0x20],eax
  42e893:	adc    DWORD PTR [ebx+0x24],0x0
  42e897:	cmp    BYTE PTR [ebp-0x1],0x0
  42e89b:	mov    ecx,DWORD PTR [ebp+0x8]
  42e89e:	je     0x42e8ba
  42e8a0:	test   ecx,ecx
  42e8a2:	jne    0x42e8de
  42e8a4:	movzx  eax,BYTE PTR [ebx+0x5]
  42e8a8:	sub    ebx,eax
  42e8aa:	push   eax
  42e8ab:	mov    edx,ebx
  42e8ad:	mov    ecx,0x7d5
  42e8b2:	call   0x42f15d
  42e8b7:	mov    ecx,DWORD PTR [ebp+0x8]
  42e8ba:	mov    esi,DWORD PTR [ebp-0xc]
  42e8bd:	mov    eax,DWORD PTR [ebp-0x10]
  42e8c0:	and    BYTE PTR [eax],0xdf
  42e8c3:	mov    eax,ds:0x45f83c
  42e8c8:	mov    DWORD PTR [esi],eax
  42e8ca:	mov    DWORD PTR ds:0x45f83c,esi
  42e8d0:	test   ecx,ecx
  42e8d2:	je     0x42e93e
  42e8d4:	mov    DWORD PTR [ecx],esi
  42e8d6:	mov    DWORD PTR ds:0x45f83c,ecx
  42e8dc:	jmp    0x42e93e
  42e8de:	mov    esi,DWORD PTR [ebp-0xc]
  42e8e1:	mov    edi,DWORD PTR [esi+0x10]
  42e8e4:	test   edi,edi
  42e8e6:	jne    0x42e8ef
  42e8e8:	cmp    DWORD PTR [ecx+0x10],edi
  42e8eb:	je     0x42e8bd
  42e8ed:	jmp    0x42e8f6
  42e8ef:	mov    edx,DWORD PTR [ecx+0x10]
  42e8f2:	test   edx,edx
  42e8f4:	jne    0x42e90e
  42e8f6:	movzx  eax,BYTE PTR [ebx+0x5]
  42e8fa:	sub    ebx,eax
  42e8fc:	push   eax
  42e8fd:	mov    edx,ebx
  42e8ff:	mov    ecx,0x7d5
  42e904:	call   0x42f15d
  42e909:	mov    ecx,DWORD PTR [ebp+0x8]
  42e90c:	jmp    0x42e8bd
  42e90e:	mov    eax,DWORD PTR [edi+0x1c]
  42e911:	cmp    eax,DWORD PTR [edx+0x1c]
  42e914:	jne    0x42e8f6
  42e916:	mov    eax,DWORD PTR [edi+0x20]
  42e919:	cmp    eax,DWORD PTR [edx+0x20]
  42e91c:	jmp    0x42e8eb
  42e91e:	mov    ecx,0x7d5
  42e923:	mov    eax,ds:0x45f83c
  42e928:	mov    DWORD PTR [esi],eax
  42e92a:	movzx  eax,BYTE PTR [ebx+0x5]
  42e92e:	sub    ebx,eax
  42e930:	push   eax
  42e931:	mov    edx,ebx
  42e933:	mov    DWORD PTR ds:0x45f83c,esi
  42e939:	call   0x42f15d
  42e93e:	pop    edi
  42e93f:	pop    esi
  42e940:	pop    ebx
  42e941:	leave  
  42e942:	ret    0x4
  42e945:	push   ebp
  42e946:	mov    ebp,esp
  42e948:	sub    esp,0xc
  42e94b:	push   ebx
  42e94c:	push   esi
  42e94d:	mov    esi,ecx
  42e94f:	mov    ebx,edx
  42e951:	mov    al,BYTE PTR [esi+0x1]
  42e954:	cmp    al,0x5
  42e956:	je     0x42ea6e
  42e95c:	cmp    al,0xd
  42e95e:	je     0x42e9a5
  42e960:	cmp    al,0x59
  42e962:	jne    0x42ea78
  42e968:	mov    al,BYTE PTR [esi]
  42e96a:	dec    al
  42e96c:	lea    edx,[ebp+0xb]
  42e96f:	lea    ecx,[esi+0x1]
  42e972:	mov    BYTE PTR [esi+0x1],al
  42e975:	call   0x431d7f
  42e97a:	movzx  ecx,BYTE PTR ds:0x45f83a
  42e981:	push   ecx
  42e982:	mov    DWORD PTR [ebp-0x4],edx
  42e985:	push   0x0
  42e987:	lea    ecx,[ebx+0x1]
  42e98a:	mov    edx,eax
  42e98c:	call   0x42ea92
  42e991:	or     cl,0xff
  42e994:	sub    cl,bl
  42e996:	add    al,cl
  42e998:	mov    BYTE PTR [ebx],al
  42e99a:	mov    BYTE PTR [esi+0x1],0x59
  42e99e:	mov    eax,ebx
  42e9a0:	jmp    0x42ea8c
  42e9a5:	lea    ecx,[esi+0x2]
  42e9a8:	call   0x445afc
  42e9ad:	mov    ecx,eax
  42e9af:	test   ecx,ecx
  42e9b1:	jne    0x42e9c5
  42e9b3:	lea    edx,[esi+0x2]
  42e9b6:	mov    ecx,0x7d6
  42e9bb:	call   0x42f140
  42e9c0:	jmp    0x42ea85
  42e9c5:	mov    al,BYTE PTR [ecx+0x6]
  42e9c8:	cmp    al,0x7
  42e9ca:	jne    0x42e9f4
  42e9cc:	mov    ecx,DWORD PTR [ecx+0x18]
  42e9cf:	mov    edx,ecx
  42e9d1:	lea    esi,[edx+0x1]
  42e9d4:	mov    al,BYTE PTR [edx]
  42e9d6:	inc    edx
  42e9d7:	test   al,al
  42e9d9:	jne    0x42e9d4
  42e9db:	mov    eax,DWORD PTR [ebp+0x8]
  42e9de:	push   0x0
  42e9e0:	push   0x0
  42e9e2:	add    eax,ebx
  42e9e4:	push   eax
  42e9e5:	lea    eax,[ebx+0x1]
  42e9e8:	sub    edx,esi
  42e9ea:	push   eax
  42e9eb:	call   0x434790
  42e9f0:	mov    BYTE PTR [ebx],al
  42e9f2:	jmp    0x42e99e
  42e9f4:	cmp    al,0x5
  42e9f6:	je     0x42e9fc
  42e9f8:	cmp    al,0x6
  42e9fa:	jne    0x42ea78
  42e9fc:	cmp    BYTE PTR [esi+0x7],0x5
  42ea00:	jne    0x42ea78
  42ea02:	movzx  eax,BYTE PTR [esi+0x8]
  42ea06:	push   eax
  42ea07:	lea    edx,[esi+0x9]
  42ea0a:	call   0x43451d
  42ea0f:	mov    ecx,DWORD PTR ds:0x448988
  42ea15:	mov    esi,eax
  42ea17:	push   esi
  42ea18:	movzx  edx,BYTE PTR [esi]
  42ea1b:	call   DWORD PTR [ecx+edx*4]
  42ea1e:	push   esi
  42ea1f:	call   DWORD PTR ds:0x464354
  42ea25:	mov    esi,DWORD PTR ds:0x45fab4
  42ea2b:	pop    ecx
  42ea2c:	test   esi,esi
  42ea2e:	je     0x42ea85
  42ea30:	mov    ecx,esi
  42ea32:	lea    edx,[ecx+0x1]
  42ea35:	mov    al,BYTE PTR [ecx]
  42ea37:	inc    ecx
  42ea38:	test   al,al
  42ea3a:	jne    0x42ea35
  42ea3c:	sub    ecx,edx
  42ea3e:	cmp    ecx,DWORD PTR [ebp+0x8]
  42ea41:	jbe    0x42ea4a
  42ea43:	mov    ecx,0x82b
  42ea48:	jmp    0x42ea7d
  42ea4a:	push   ecx
  42ea4b:	lea    eax,[ebx+0x1]
  42ea4e:	push   esi
  42ea4f:	push   eax
  42ea50:	mov    BYTE PTR [ebx],cl
  42ea52:	call   0x447646
  42ea57:	add    esp,0xc
  42ea5a:	push   esi
  42ea5b:	call   DWORD PTR ds:0x464354
  42ea61:	and    DWORD PTR ds:0x45fab4,0x0
  42ea68:	pop    ecx
  42ea69:	jmp    0x42e99e
  42ea6e:	movzx  eax,BYTE PTR [esi]
  42ea71:	cmp    BYTE PTR [eax+esi*1-0x1],0x1
  42ea76:	je     0x42ea89
  42ea78:	mov    ecx,0x803
  42ea7d:	xor    edx,edx
  42ea7f:	push   edx
  42ea80:	call   0x42ee80
  42ea85:	xor    eax,eax
  42ea87:	jmp    0x42ea8c
  42ea89:	lea    eax,[esi+0x2]
  42ea8c:	pop    esi
  42ea8d:	pop    ebx
  42ea8e:	leave  
  42ea8f:	ret    0x4
  42ea92:	push   ebp
  42ea93:	mov    ebp,esp
  42ea95:	sub    esp,0x28
  42ea98:	mov    eax,ds:0x448858
  42ea9d:	xor    eax,ebp
  42ea9f:	mov    DWORD PTR [ebp-0x4],eax
  42eaa2:	push   ebx
  42eaa3:	push   esi
  42eaa4:	push   edi
  42eaa5:	mov    esi,edx
  42eaa7:	mov    edi,ecx
  42eaa9:	mov    BYTE PTR [ebp-0x8],0x0
  42eaad:	lea    ebx,[ebp-0x9]
  42eab0:	xor    edx,edx
  42eab2:	mov    eax,esi
  42eab4:	div    DWORD PTR [ebp+0xc]
  42eab7:	mov    esi,eax
  42eab9:	mov    al,BYTE PTR [edx+0x449270]
  42eabf:	mov    BYTE PTR [ebx],al
  42eac1:	dec    ebx
  42eac2:	test   esi,esi
  42eac4:	je     0x42eacd
  42eac6:	lea    eax,[ebp-0x28]
  42eac9:	cmp    ebx,eax
  42eacb:	jae    0x42eab0
  42eacd:	mov    eax,DWORD PTR [ebp+0x8]
  42ead0:	lea    esi,[ebp-0x9]
  42ead3:	sub    esi,ebx
  42ead5:	cmp    esi,eax
  42ead7:	jae    0x42eaed
  42ead9:	sub    eax,esi
  42eadb:	push   eax
  42eadc:	push   0x30
  42eade:	push   edi
  42eadf:	mov    DWORD PTR [ebp+0x8],eax
  42eae2:	call   0x44764c
  42eae7:	add    esp,0xc
  42eaea:	add    edi,DWORD PTR [ebp+0x8]
  42eaed:	inc    ebx
  42eaee:	test   esi,esi
  42eaf0:	je     0x42eaff
  42eaf2:	push   esi
  42eaf3:	push   ebx
  42eaf4:	push   edi
  42eaf5:	call   0x447646
  42eafa:	add    esp,0xc
  42eafd:	add    edi,esi
  42eaff:	mov    ecx,DWORD PTR [ebp-0x4]
  42eb02:	mov    eax,edi
  42eb04:	pop    edi
  42eb05:	pop    esi
  42eb06:	xor    ecx,ebp
  42eb08:	pop    ebx
  42eb09:	call   0x446dc7
  42eb0e:	leave  
  42eb0f:	ret    0x8
  42eb12:	push   esi
  42eb13:	mov    esi,ecx
  42eb15:	mov    eax,esi
  42eb17:	shr    eax,0x4
  42eb1a:	inc    eax
  42eb1b:	movzx  eax,ax
  42eb1e:	push   0x6
  42eb20:	push   eax
  42eb21:	push   0x0
  42eb23:	call   DWORD PTR ds:0x464300
  42eb29:	test   eax,eax
  42eb2b:	jne    0x42eb31
  42eb2d:	xor    eax,eax
  42eb2f:	pop    esi
  42eb30:	ret    
  42eb31:	push   eax
  42eb32:	push   0x0
  42eb34:	call   DWORD PTR ds:0x464304
  42eb3a:	mov    edx,eax
  42eb3c:	test   edx,edx
  42eb3e:	je     0x42eb2d
  42eb40:	and    esi,0xf
  42eb43:	je     0x42eb51
  42eb45:	movzx  eax,WORD PTR [edx]
  42eb48:	lea    edx,[edx+eax*2]
  42eb4b:	add    edx,0x2
  42eb4e:	dec    esi
  42eb4f:	jne    0x42eb45
  42eb51:	movzx  eax,WORD PTR [edx]
  42eb54:	neg    eax
  42eb56:	lea    ecx,[edx+0x2]
  42eb59:	sbb    eax,eax
  42eb5b:	and    eax,ecx
  42eb5d:	pop    esi
  42eb5e:	ret    
  42eb5f:	push   ebp
  42eb60:	mov    ebp,esp
  42eb62:	sub    esp,0x70
  42eb65:	mov    eax,ds:0x448858
  42eb6a:	xor    eax,ebp
  42eb6c:	mov    DWORD PTR [ebp-0x4],eax
  42eb6f:	mov    eax,ds:0x4600fc
  42eb74:	imul   eax,eax,0x1c
  42eb77:	push   ebx
  42eb78:	push   esi
  42eb79:	mov    ebx,0x460100
  42eb7e:	lea    esi,[eax+0x4600e4]
  42eb84:	lea    eax,[ebx-0x38]
  42eb87:	push   edi
  42eb88:	xor    edi,edi
  42eb8a:	mov    DWORD PTR [ebp-0x58],edx
  42eb8d:	mov    DWORD PTR [ebp-0x5c],ecx
  42eb90:	mov    DWORD PTR [ebp-0x60],eax
  42eb93:	cmp    esi,eax
  42eb95:	je     0x42eccc
  42eb9b:	sub    ebx,0x1c
  42eb9e:	mov    eax,ecx
  42eba0:	push   0x20
  42eba2:	pop    ecx
  42eba3:	mov    WORD PTR [eax],cx
  42eba6:	add    eax,0x2
  42eba9:	mov    DWORD PTR [ebp-0x70],eax
  42ebac:	mov    DWORD PTR [ebp-0x6c],eax
  42ebaf:	mov    DWORD PTR [ebp-0x68],0x100
  42ebb6:	cmp    esi,ebx
  42ebb8:	je     0x42ec22
  42ebba:	cmp    BYTE PTR [esi+0xe],0x0
  42ebbe:	jne    0x42ec22
  42ebc0:	mov    ecx,DWORD PTR [esi]
  42ebc2:	test   ecx,ecx
  42ebc4:	je     0x42ebf3
  42ebc6:	movzx  eax,BYTE PTR [ecx+0x5]
  42ebca:	push   eax
  42ebcb:	sub    ecx,eax
  42ebcd:	push   ecx
  42ebce:	lea    eax,[ebp-0x6c]
  42ebd1:	push   0x41f2bc
  42ebd6:	push   eax
  42ebd7:	call   0x446021
  42ebdc:	push   0x41f2c4
  42ebe1:	push   DWORD PTR [ebp-0x58]
  42ebe4:	push   0x41f2a8
  42ebe9:	call   0x446038
  42ebee:	add    esp,0x1c
  42ebf1:	jmp    0x42ec5a
  42ebf3:	lea    eax,[ebp-0x6c]
  42ebf6:	push   0x41f2e8
  42ebfb:	push   eax
  42ebfc:	call   0x446021
  42ec01:	movzx  eax,WORD PTR [esi+0xc]
  42ec05:	push   eax
  42ec06:	push   DWORD PTR [ebp-0x58]
  42ec09:	push   0x41f300
  42ec0e:	call   0x446038
  42ec13:	mov    ax,WORD PTR [esi+0xc]
  42ec17:	add    esp,0x14
  42ec1a:	mov    WORD PTR [ebp+edi*2-0x54],ax
  42ec1f:	inc    edi
  42ec20:	jmp    0x42ec5a
  42ec22:	mov    eax,ds:0x44e4bc
  42ec27:	push   DWORD PTR [eax+0x8]
  42ec2a:	lea    eax,[ebp-0x6c]
  42ec2d:	push   0x41f264
  42ec32:	push   eax
  42ec33:	call   0x446021
  42ec38:	add    esp,0xc
  42ec3b:	mov    eax,0x41f26c
  42ec40:	cmp    esi,ebx
  42ec42:	je     0x42ec49
  42ec44:	mov    eax,0x41f28c
  42ec49:	push   eax
  42ec4a:	push   DWORD PTR [ebp-0x58]
  42ec4d:	push   0x41f2a8
  42ec52:	call   0x446038
  42ec57:	add    esp,0xc
  42ec5a:	mov    al,ds:0x44f581
  42ec5f:	test   al,al
  42ec61:	jne    0x42ec7b
  42ec63:	push   0x41f350
  42ec68:	call   0x446038
  42ec6d:	pop    ecx
  42ec6e:	mov    ecx,DWORD PTR [ebp-0x5c]
  42ec71:	call   0x441ddb
  42ec76:	mov    al,ds:0x44f581
  42ec7b:	cmp    al,0x1
  42ec7d:	jne    0x42ec8f
  42ec7f:	mov    ecx,DWORD PTR [ebp-0x6c]
  42ec82:	sub    ecx,DWORD PTR [ebp-0x5c]
  42ec85:	mov    edx,DWORD PTR [ebp-0x5c]
  42ec88:	sar    ecx,1
  42ec8a:	call   0x43a7a1
  42ec8f:	cmp    BYTE PTR [esi+0xe],0x0
  42ec93:	jne    0x42ecaa
  42ec95:	mov    eax,DWORD PTR [esi+0x4]
  42ec98:	sub    esi,0x1c
  42ec9b:	mov    DWORD PTR [ebp-0x58],eax
  42ec9e:	mov    eax,DWORD PTR [ebp-0x70]
  42eca1:	cmp    esi,DWORD PTR [ebp-0x60]
  42eca4:	jne    0x42eba0
  42ecaa:	test   edi,edi
  42ecac:	je     0x42eccc
  42ecae:	lea    esi,[edi+edi*1]
  42ecb1:	mov    ecx,esi
  42ecb3:	call   0x43f45b
  42ecb8:	mov    edi,eax
  42ecba:	push   esi
  42ecbb:	lea    eax,[ebp-0x54]
  42ecbe:	push   eax
  42ecbf:	push   edi
  42ecc0:	call   0x447646
  42ecc5:	add    esp,0xc
  42ecc8:	mov    eax,edi
  42ecca:	jmp    0x42ecce
  42eccc:	xor    eax,eax
  42ecce:	mov    ecx,DWORD PTR [ebp-0x4]
  42ecd1:	pop    edi
  42ecd2:	pop    esi
  42ecd3:	xor    ecx,ebp
  42ecd5:	pop    ebx
  42ecd6:	call   0x446dc7
  42ecdb:	leave  
  42ecdc:	ret    
  42ecdd:	push   ebp
  42ecde:	mov    ebp,esp
  42ece0:	sub    esp,0x1b8
  42ece6:	mov    eax,ds:0x448858
  42eceb:	xor    eax,ebp
  42eced:	mov    DWORD PTR [ebp-0x4],eax
  42ecf0:	mov    eax,ds:0x448990
  42ecf5:	add    eax,0x4
  42ecf8:	imul   eax,eax,0x3e8
  42ecfe:	push   ebx
  42ecff:	mov    ebx,DWORD PTR [ebp+0x8]
  42ed02:	push   esi
  42ed03:	mov    esi,edx
  42ed05:	mov    DWORD PTR [ebp-0x1b8],ecx
  42ed0b:	cmp    esi,eax
  42ed0d:	jge    0x42ee6e
  42ed13:	and    DWORD PTR [ebp-0x1ac],0x0
  42ed1a:	lea    eax,[ebp-0x1a8]
  42ed20:	mov    DWORD PTR [ebp-0x1b4],eax
  42ed26:	mov    eax,ds:0x44e4bc
  42ed2b:	mov    DWORD PTR [ebp-0x1b0],0xd2
  42ed35:	test   eax,eax
  42ed37:	je     0x42ed5f
  42ed39:	mov    ecx,DWORD PTR [eax+0x8]
  42ed3c:	test   ecx,ecx
  42ed3e:	je     0x42ed5f
  42ed40:	mov    eax,ds:0x448894
  42ed45:	push   DWORD PTR [eax+0x20]
  42ed48:	lea    eax,[ebp-0x1b4]
  42ed4e:	push   ecx
  42ed4f:	push   0x41f354
  42ed54:	push   eax
  42ed55:	call   0x446021
  42ed5a:	add    esp,0x10
  42ed5d:	jmp    0x42ed72
  42ed5f:	lea    eax,[ebp-0x1b4]
  42ed65:	push   0x41f364
  42ed6a:	push   eax
  42ed6b:	call   0x446021
  42ed70:	pop    ecx
  42ed71:	pop    ecx
  42ed72:	push   edi
  42ed73:	cmp    esi,0xfa0
  42ed79:	jl     0x42ed82
  42ed7b:	mov    edi,0x41f370
  42ed80:	jmp    0x42ed94
  42ed82:	mov    edi,0x41f380
  42ed87:	cmp    esi,0x7d0
  42ed8d:	jl     0x42ed94
  42ed8f:	mov    edi,0x41f398
  42ed94:	mov    ecx,esi
  42ed96:	call   0x42eb12
  42ed9b:	push   eax
  42ed9c:	push   esi
  42ed9d:	push   edi
  42ed9e:	lea    eax,[ebp-0x1b4]
  42eda4:	push   0x41f3a4
  42eda9:	push   eax
  42edaa:	call   0x446021
  42edaf:	mov    eax,DWORD PTR [ebp+0xc]
  42edb2:	add    esp,0x14
  42edb5:	pop    edi
  42edb6:	test   eax,eax
  42edb8:	je     0x42edd7
  42edba:	cmp    DWORD PTR [ebp-0x1b0],eax
  42edc0:	jae    0x42edc8
  42edc2:	mov    eax,DWORD PTR [ebp-0x1b0]
  42edc8:	push   eax
  42edc9:	push   ebx
  42edca:	push   0x41f3c0
  42edcf:	call   0x446038
  42edd4:	add    esp,0xc
  42edd7:	mov    al,ds:0x44f581
  42eddc:	test   al,al
  42edde:	jne    0x42edfb
  42ede0:	push   0x41f350
  42ede5:	call   0x446038
  42edea:	pop    ecx
  42edeb:	lea    ecx,[ebp-0x1a8]
  42edf1:	call   0x441ddb
  42edf6:	mov    al,ds:0x44f581
  42edfb:	cmp    al,0x1
  42edfd:	jne    0x42ee1e
  42edff:	cmp    esi,0x3ea
  42ee05:	je     0x42ee1e
  42ee07:	mov    ecx,DWORD PTR [ebp-0x1b4]
  42ee0d:	lea    eax,[ebp-0x1a8]
  42ee13:	sub    ecx,eax
  42ee15:	sar    ecx,1
  42ee17:	mov    edx,eax
  42ee19:	call   0x43a7a1
  42ee1e:	cmp    BYTE PTR ds:0x45f992,0x0
  42ee25:	je     0x42ee6e
  42ee27:	cmp    esi,0x3ec
  42ee2d:	jne    0x42ee5b
  42ee2f:	mov    eax,ds:0x44e4c4
  42ee34:	test   eax,eax
  42ee36:	je     0x42ee5b
  42ee38:	mov    ecx,DWORD PTR ds:0x45f884
  42ee3e:	test   ecx,ecx
  42ee40:	je     0x42ee53
  42ee42:	call   0x433eae
  42ee47:	and    DWORD PTR ds:0x45f884,0x0
  42ee4e:	mov    eax,ds:0x44e4c4
  42ee53:	push   eax
  42ee54:	call   DWORD PTR ds:0x46449c
  42ee5a:	pop    ecx
  42ee5b:	mov    edx,DWORD PTR [ebp-0x1b8]
  42ee61:	lea    ecx,[ebp-0x1a8]
  42ee67:	call   0x42eb5f
  42ee6c:	jmp    0x42ee70
  42ee6e:	xor    eax,eax
  42ee70:	mov    ecx,DWORD PTR [ebp-0x4]
  42ee73:	pop    esi
  42ee74:	xor    ecx,ebp
  42ee76:	pop    ebx
  42ee77:	call   0x446dc7
  42ee7c:	leave  
  42ee7d:	ret    0x8
  42ee80:	push   ebp
  42ee81:	mov    ebp,esp
  42ee83:	sub    esp,0x6c
  42ee86:	mov    eax,ds:0x448858
  42ee8b:	xor    eax,ebp
  42ee8d:	mov    DWORD PTR [ebp-0x4],eax
  42ee90:	mov    eax,DWORD PTR [ebp+0x8]
  42ee93:	push   esi
  42ee94:	mov    DWORD PTR [ebp-0x64],edx
  42ee97:	mov    edx,ecx
  42ee99:	xor    esi,esi
  42ee9b:	cmp    BYTE PTR ds:0x45f851,0x0
  42eea2:	mov    DWORD PTR [ebp-0x5c],edx
  42eea5:	mov    DWORD PTR [ebp-0x60],eax
  42eea8:	je     0x42eeb6
  42eeaa:	cmp    edx,0x81b
  42eeb0:	je     0x42f115
  42eeb6:	cmp    edx,0xfa0
  42eebc:	jge    0x42eee6
  42eebe:	mov    eax,ds:0x45f880
  42eec3:	inc    eax
  42eec4:	mov    ds:0x45f880,eax
  42eec9:	cmp    eax,0x65
  42eecc:	jne    0x42ef02
  42eece:	push   0x0
  42eed0:	xor    edx,edx
  42eed2:	mov    ecx,0x3f4
  42eed7:	call   0x42ee80
  42eedc:	call   0x42c81b
  42eee1:	mov    edx,DWORD PTR [ebp-0x5c]
  42eee4:	jmp    0x42ef02
  42eee6:	mov    eax,ds:0x448990
  42eeeb:	add    eax,0x4
  42eeee:	imul   eax,eax,0x3e8
  42eef4:	cmp    edx,eax
  42eef6:	jge    0x42f115
  42eefc:	inc    DWORD PTR ds:0x45f9ac
  42ef02:	push   ebx
  42ef03:	xor    ebx,ebx
  42ef05:	push   edi
  42ef06:	cmp    BYTE PTR ds:0x45f992,bl
  42ef0c:	je     0x42ef56
  42ef0e:	mov    eax,ds:0x4600fc
  42ef13:	imul   eax,eax,0x1c
  42ef16:	mov    edi,0x460100
  42ef1b:	lea    ecx,[eax+0x4600e4]
  42ef21:	lea    eax,[edi-0x38]
  42ef24:	mov    DWORD PTR [ebp-0x68],eax
  42ef27:	cmp    ecx,eax
  42ef29:	je     0x42ef56
  42ef2b:	sub    edi,0x1c
  42ef2e:	cmp    ecx,edi
  42ef30:	je     0x42ef49
  42ef32:	cmp    BYTE PTR [ecx+0xe],0x0
  42ef36:	jne    0x42ef56
  42ef38:	cmp    DWORD PTR [ecx],esi
  42ef3a:	jne    0x42ef49
  42ef3c:	mov    ax,WORD PTR [ecx+0xc]
  42ef40:	mov    WORD PTR [ebp+ebx*2-0x54],ax
  42ef45:	mov    eax,DWORD PTR [ebp-0x68]
  42ef48:	inc    ebx
  42ef49:	cmp    BYTE PTR [ecx+0xe],0x0
  42ef4d:	jne    0x42ef56
  42ef4f:	sub    ecx,0x1c
  42ef52:	cmp    ecx,eax
  42ef54:	jne    0x42ef2e
  42ef56:	mov    edi,DWORD PTR ds:0x45f9a0
  42ef5c:	test   edi,edi
  42ef5e:	je     0x42f0cf
  42ef64:	cmp    edx,0x7d0
  42ef6a:	jl     0x42f0cf
  42ef70:	mov    ecx,DWORD PTR [edi]
  42ef72:	mov    BYTE PTR [ebp-0x56],0x0
  42ef76:	test   ecx,ecx
  42ef78:	je     0x42efd7
  42ef7a:	mov    BYTE PTR [ebp-0x55],0x1
  42ef7e:	test   ebx,ebx
  42ef80:	je     0x42efb9
  42ef82:	xor    esi,esi
  42ef84:	test   ebx,ebx
  42ef86:	je     0x42efb9
  42ef88:	mov    eax,DWORD PTR [ecx+0xc]
  42ef8b:	lea    edx,[ebp-0x54]
  42ef8e:	sub    eax,edx
  42ef90:	mov    DWORD PTR [ebp-0x6c],eax
  42ef93:	movzx  edx,WORD PTR [ebp+esi*2-0x54]
  42ef98:	lea    eax,[eax+esi*2]
  42ef9b:	mov    DWORD PTR [ebp-0x68],edx
  42ef9e:	movzx  eax,WORD PTR [ebp+eax*1-0x54]
  42efa3:	cmp    ax,dx
  42efa6:	mov    edx,DWORD PTR [ebp-0x5c]
  42efa9:	ja     0x42efd7
  42efab:	cmp    ax,WORD PTR [ebp-0x68]
  42efaf:	jb     0x42f02b
  42efb1:	mov    eax,DWORD PTR [ebp-0x6c]
  42efb4:	inc    esi
  42efb5:	cmp    esi,ebx
  42efb7:	jb     0x42ef93
  42efb9:	mov    esi,DWORD PTR ds:0x45f9b4
  42efbf:	mov    eax,DWORD PTR [ecx+0x4]
  42efc2:	cmp    DWORD PTR [esi],eax
  42efc4:	jb     0x42efd7
  42efc6:	mov    al,BYTE PTR [ebp-0x55]
  42efc9:	je     0x42f02f
  42efcb:	mov    edi,ecx
  42efcd:	mov    ecx,DWORD PTR [edi]
  42efcf:	test   ecx,ecx
  42efd1:	jne    0x42ef7a
  42efd3:	test   al,al
  42efd5:	jne    0x42f033
  42efd7:	mov    eax,DWORD PTR [ebp-0x60]
  42efda:	movzx  eax,al
  42efdd:	lea    ecx,[eax*2+0x12]
  42efe4:	call   0x43f45b
  42efe9:	mov    ecx,DWORD PTR [edi]
  42efeb:	mov    esi,eax
  42efed:	mov    DWORD PTR [esi],ecx
  42efef:	mov    ecx,DWORD PTR ds:0x45f9b4
  42eff5:	mov    DWORD PTR [edi],esi
  42eff7:	mov    ecx,DWORD PTR [ecx]
  42eff9:	mov    edi,DWORD PTR [ebp-0x5c]
  42effc:	mov    BYTE PTR [esi+0x10],bl
  42efff:	mov    ebx,DWORD PTR [ebp-0x60]
  42f002:	mov    DWORD PTR [esi+0x4],ecx
  42f005:	mov    DWORD PTR [esi+0x8],edi
  42f008:	mov    BYTE PTR [esi+0x11],bl
  42f00b:	test   bl,bl
  42f00d:	je     0x42f0d5
  42f013:	lea    eax,[ebx+ebx*1]
  42f016:	push   eax
  42f017:	push   DWORD PTR [ebp-0x64]
  42f01a:	lea    eax,[esi+0x12]
  42f01d:	push   eax
  42f01e:	call   0x447646
  42f023:	add    esp,0xc
  42f026:	jmp    0x42f0d5
  42f02b:	xor    al,al
  42f02d:	jmp    0x42efcb
  42f02f:	mov    BYTE PTR [ebp-0x56],0x1
  42f033:	mov    ecx,DWORD PTR [edi]
  42f035:	test   ecx,ecx
  42f037:	je     0x42efd7
  42f039:	test   al,al
  42f03b:	je     0x42efd7
  42f03d:	cmp    DWORD PTR [ecx+0x8],edx
  42f040:	jne    0x42f06a
  42f042:	movzx  eax,BYTE PTR [ecx+0x11]
  42f046:	cmp    DWORD PTR [ebp-0x60],eax
  42f049:	jne    0x42f06a
  42f04b:	mov    eax,DWORD PTR [ebp-0x60]
  42f04e:	test   eax,eax
  42f050:	je     0x42f0b7
  42f052:	push   eax
  42f053:	push   DWORD PTR [ebp-0x64]
  42f056:	lea    eax,[ecx+0x12]
  42f059:	push   eax
  42f05a:	call   DWORD PTR ds:0x4643bc
  42f060:	mov    edx,DWORD PTR [ebp-0x5c]
  42f063:	add    esp,0xc
  42f066:	test   eax,eax
  42f068:	je     0x42f0b7
  42f06a:	mov    edi,DWORD PTR [edi]
  42f06c:	mov    ecx,DWORD PTR [edi]
  42f06e:	test   ecx,ecx
  42f070:	je     0x42efd7
  42f076:	mov    al,0x1
  42f078:	mov    BYTE PTR [ebp-0x55],al
  42f07b:	test   ebx,ebx
  42f07d:	je     0x42f039
  42f07f:	xor    esi,esi
  42f081:	test   ebx,ebx
  42f083:	je     0x42f09e
  42f085:	cmp    BYTE PTR [ebp-0x56],0x0
  42f089:	jne    0x42f09e
  42f08b:	mov    eax,DWORD PTR [ecx+0xc]
  42f08e:	mov    ax,WORD PTR [eax+esi*2]
  42f092:	cmp    ax,WORD PTR [ebp+esi*2-0x54]
  42f097:	jne    0x42f0b3
  42f099:	inc    esi
  42f09a:	cmp    esi,ebx
  42f09c:	jb     0x42f085
  42f09e:	mov    eax,ds:0x45f9b4
  42f0a3:	mov    eax,DWORD PTR [eax]
  42f0a5:	cmp    eax,DWORD PTR [ecx+0x4]
  42f0a8:	mov    al,BYTE PTR [ebp-0x55]
  42f0ab:	ja     0x42f039
  42f0ad:	mov    BYTE PTR [ebp-0x56],0x1
  42f0b1:	jmp    0x42f039
  42f0b3:	xor    al,al
  42f0b5:	jmp    0x42f039
  42f0b7:	cmp    edx,0xfa0
  42f0bd:	jge    0x42f0c7
  42f0bf:	dec    DWORD PTR ds:0x45f880
  42f0c5:	jmp    0x42f113
  42f0c7:	dec    DWORD PTR ds:0x45f9ac
  42f0cd:	jmp    0x42f113
  42f0cf:	mov    edi,DWORD PTR [ebp-0x5c]
  42f0d2:	mov    ebx,DWORD PTR [ebp-0x60]
  42f0d5:	mov    ecx,DWORD PTR ds:0x45f9b4
  42f0db:	push   ebx
  42f0dc:	push   DWORD PTR [ebp-0x64]
  42f0df:	mov    ecx,DWORD PTR [ecx]
  42f0e1:	mov    edx,edi
  42f0e3:	mov    BYTE PTR ds:0x44f581,0x0
  42f0ea:	call   0x42ecdd
  42f0ef:	cmp    DWORD PTR ds:0x4600f8,0x0
  42f0f6:	jne    0x42f0fe
  42f0f8:	mov    DWORD PTR ds:0x4600f8,esi
  42f0fe:	test   esi,esi
  42f100:	je     0x42f107
  42f102:	mov    DWORD PTR [esi+0xc],eax
  42f105:	jmp    0x42f113
  42f107:	test   eax,eax
  42f109:	je     0x42f113
  42f10b:	push   eax
  42f10c:	call   DWORD PTR ds:0x464354
  42f112:	pop    ecx
  42f113:	pop    edi
  42f114:	pop    ebx
  42f115:	mov    ecx,DWORD PTR [ebp-0x4]
  42f118:	xor    ecx,ebp
  42f11a:	pop    esi
  42f11b:	call   0x446dc7
  42f120:	leave  
  42f121:	ret    0x4
  42f124:	push   esi
  42f125:	push   0x0
  42f127:	xor    edx,edx
  42f129:	mov    esi,ecx
  42f12b:	call   0x42ee80
  42f130:	cmp    esi,0x7d0
  42f136:	pop    esi
  42f137:	jl     0x42f13a
  42f139:	ret    
  42f13a:	call   0x42c81b
  42f13f:	int3   
  42f140:	mov    eax,edx
  42f142:	mov    edx,DWORD PTR [eax]
  42f144:	test   edx,edx
  42f146:	je     0x42f155
  42f148:	movzx  eax,BYTE PTR [edx+0x5]
  42f14c:	push   eax
  42f14d:	sub    edx,eax
  42f14f:	call   0x42f15d
  42f154:	ret    
  42f155:	lea    edx,[eax+0x4]
  42f158:	jmp    0x42f194
  42f15d:	push   ebp
  42f15e:	mov    ebp,esp
  42f160:	mov    eax,edx
  42f162:	mov    edx,DWORD PTR [ebp+0x8]
  42f165:	push   edi
  42f166:	mov    edi,ecx
  42f168:	test   edx,edx
  42f16a:	jne    0x42f173
  42f16c:	call   0x42f124
  42f171:	jmp    0x42f18f
  42f173:	push   esi
  42f174:	mov    ecx,eax
  42f176:	call   0x43f691
  42f17b:	mov    esi,eax
  42f17d:	mov    edx,esi
  42f17f:	mov    ecx,edi
  42f181:	call   0x42f1c0
  42f186:	push   esi
  42f187:	call   DWORD PTR ds:0x464354
  42f18d:	pop    ecx
  42f18e:	pop    esi
  42f18f:	pop    edi
  42f190:	pop    ebp
  42f191:	ret    0x4
  42f194:	test   edx,edx
  42f196:	je     0x42f124
  42f19c:	movzx  eax,BYTE PTR [edx]
  42f19f:	push   eax
  42f1a0:	inc    edx
  42f1a1:	call   0x42f15d
  42f1a6:	ret    
  42f1a7:	push   esi
  42f1a8:	mov    esi,edx
  42f1aa:	push   edi
  42f1ab:	lea    edi,[esi+0x1]
  42f1ae:	mov    al,BYTE PTR [esi]
  42f1b0:	inc    esi
  42f1b1:	test   al,al
  42f1b3:	jne    0x42f1ae
  42f1b5:	sub    esi,edi
  42f1b7:	push   esi
  42f1b8:	call   0x42f15d
  42f1bd:	pop    edi
  42f1be:	pop    esi
  42f1bf:	ret    
  42f1c0:	push   esi
  42f1c1:	mov    esi,edx
  42f1c3:	push   edi
  42f1c4:	mov    edi,ecx
  42f1c6:	lea    ecx,[esi+0x2]
  42f1c9:	mov    ax,WORD PTR [esi]
  42f1cc:	add    esi,0x2
  42f1cf:	test   ax,ax
  42f1d2:	jne    0x42f1c9
  42f1d4:	sub    esi,ecx
  42f1d6:	sar    esi,1
  42f1d8:	push   esi
  42f1d9:	mov    ecx,edi
  42f1db:	call   0x42ee80
  42f1e0:	cmp    edi,0x7d0
  42f1e6:	pop    edi
  42f1e7:	pop    esi
  42f1e8:	jl     0x42c81b
  42f1ee:	ret    
  42f1ef:	movzx  eax,WORD PTR [edx+0x2]
  42f1f3:	test   ax,ax
  42f1f6:	je     0x42f221
  42f1f8:	cmp    eax,0x1
  42f1fb:	jne    0x42f203
  42f1fd:	cmp    WORD PTR [edx],0x5f
  42f201:	jb     0x42f221
  42f203:	cmp    DWORD PTR [edx+0xc],0x0
  42f207:	mov    ecx,0x7d8
  42f20c:	je     0x42f21c
  42f20e:	movsx  eax,WORD PTR [edx+0x4]
  42f212:	mov    edx,DWORD PTR [edx+0xc]
  42f215:	push   eax
  42f216:	call   0x42f15d
  42f21b:	ret    
  42f21c:	jmp    0x42f124
  42f221:	push   ebx
  42f222:	push   esi
  42f223:	movzx  esi,WORD PTR [edx]
  42f226:	push   edi
  42f227:	mov    edi,DWORD PTR [esi*4+0x406528]
  42f22e:	mov    ecx,edi
  42f230:	lea    ebx,[ecx+0x1]
  42f233:	mov    al,BYTE PTR [ecx]
  42f235:	inc    ecx
  42f236:	test   al,al
  42f238:	jne    0x42f233
  42f23a:	sub    ecx,ebx
  42f23c:	jne    0x42f254
  42f23e:	cmp    esi,0x5
  42f241:	jl     0x42f254
  42f243:	cmp    esi,0x7
  42f246:	jle    0x42f24d
  42f248:	cmp    esi,0xd
  42f24b:	jne    0x42f254
  42f24d:	mov    edi,DWORD PTR [edx+0xc]
  42f250:	movsx  ecx,WORD PTR [edx+0x4]
  42f254:	push   ecx
  42f255:	mov    edx,edi
  42f257:	mov    ecx,0x7d8
  42f25c:	call   0x42f15d
  42f261:	pop    edi
  42f262:	pop    esi
  42f263:	pop    ebx
  42f264:	ret    
  42f265:	push   ebp
  42f266:	mov    ebp,esp
  42f268:	mov    ecx,DWORD PTR [ebp+0x8]
  42f26b:	xor    eax,eax
  42f26d:	mov    WORD PTR [ecx+0x1],ax
  42f271:	cmp    BYTE PTR ds:0x44f551,al
  42f277:	jne    0x42f28f
  42f279:	lea    eax,[ecx+0x5]
  42f27c:	push   eax
  42f27d:	movzx  eax,BYTE PTR [ecx+0x4]
  42f281:	push   eax
  42f282:	push   0x41f3cc
  42f287:	call   0x441da9
  42f28c:	add    esp,0xc
  42f28f:	pop    ebp
  42f290:	ret    0x4
  42f293:	push   ebp
  42f294:	mov    ebp,esp
  42f296:	push   esi
  42f297:	mov    esi,DWORD PTR [ebp+0x8]
  42f29a:	movzx  eax,BYTE PTR [esi+0x3]
  42f29e:	dec    eax
  42f29f:	cmp    eax,0xa
  42f2a2:	ja     0x42f4bc
  42f2a8:	push   edi
  42f2a9:	jmp    DWORD PTR [eax*4+0x42f4c3]
  42f2b0:	cmp    BYTE PTR ds:0x44e00b,0x0
  42f2b7:	je     0x42f2d5
  42f2b9:	mov    BYTE PTR ds:0x45f83b,0x0
  42f2c0:	mov    BYTE PTR ds:0x45f99f,0x3
  42f2c7:	mov    BYTE PTR ds:0x45f99e,0x1
  42f2ce:	mov    BYTE PTR ds:0x44f54f,0x1
  42f2d5:	mov    edx,DWORD PTR ds:0x448884
  42f2db:	mov    edi,0x44db24
  42f2e0:	mov    ecx,edi
  42f2e2:	mov    BYTE PTR ds:0x44db27,0x3
  42f2e9:	call   0x43f399
  42f2ee:	mov    BYTE PTR ds:0x44db27,0x5
  42f2f5:	jmp    0x42f330
  42f2f7:	call   0x438545
  42f2fc:	mov    al,ds:0x45f99f
  42f301:	mov    edx,DWORD PTR ds:0x448884
  42f307:	and    BYTE PTR ds:0x45f83b,0xfe
  42f30e:	mov    edi,0x44db24
  42f313:	mov    ecx,edi
  42f315:	mov    ds:0x44db27,al
  42f31a:	call   0x43f399
  42f31f:	cmp    BYTE PTR ds:0x45f993,0x0
  42f326:	sete   al
  42f329:	add    al,0x4
  42f32b:	mov    ds:0x44db27,al
  42f330:	mov    edx,DWORD PTR ds:0x448884
  42f336:	mov    ecx,edi
  42f338:	call   0x43f399
  42f33d:	jmp    0x42f48d
  42f342:	cmp    BYTE PTR ds:0x44f54c,0x0
  42f349:	jne    0x42f48d
  42f34f:	call   0x438545
  42f354:	cmp    BYTE PTR ds:0x44e043,0x0
  42f35b:	je     0x42f36b
  42f35d:	test   BYTE PTR ds:0x45f83b,0x1
  42f364:	jne    0x42f36b
  42f366:	call   0x43857e
  42f36b:	mov    edx,DWORD PTR ds:0x448884
  42f371:	mov    edi,0x44db24
  42f376:	mov    ecx,edi
  42f378:	mov    BYTE PTR ds:0x44db27,0x4
  42f37f:	call   0x43f399
  42f384:	cmp    BYTE PTR ds:0x44f54d,0x0
  42f38b:	je     0x42f39c
  42f38d:	mov    dl,BYTE PTR ds:0x44db27
  42f393:	push   0x0
  42f395:	mov    ecx,edi
  42f397:	call   0x43abf1
  42f39c:	or     BYTE PTR ds:0x45f83b,0x1
  42f3a3:	jmp    0x42f48d
  42f3a8:	mov    BYTE PTR ds:0x45f99e,0x1
  42f3af:	jmp    0x42f48d
  42f3b4:	cmp    BYTE PTR ds:0x44f54c,0x0
  42f3bb:	sete   al
  42f3be:	dec    al
  42f3c0:	and    BYTE PTR ds:0x45f99e,al
  42f3c6:	jmp    0x42f48d
  42f3cb:	cmp    BYTE PTR ds:0x44f54c,0x0
  42f3d2:	jne    0x42f48d
  42f3d8:	cmp    BYTE PTR ds:0x45f99e,0x0
  42f3df:	sete   BYTE PTR ds:0x45f99e
  42f3e6:	jmp    0x42f48d
  42f3eb:	cmp    BYTE PTR ds:0x44e00b,0x0
  42f3f2:	je     0x42f48d
  42f3f8:	cmp    BYTE PTR ds:0x45f99f,0x3
  42f3ff:	je     0x42f48d
  42f405:	call   0x438545
  42f40a:	mov    BYTE PTR ds:0x44db27,0x3
  42f411:	mov    BYTE PTR ds:0x45f99f,0x3
  42f418:	jmp    0x42f478
  42f41a:	cmp    BYTE PTR ds:0x44e00b,0x0
  42f421:	je     0x42f48d
  42f423:	cmp    BYTE PTR ds:0x44f54c,0x0
  42f42a:	jne    0x42f48d
  42f42c:	cmp    BYTE PTR ds:0x45f99f,0x1
  42f433:	je     0x42f48d
  42f435:	call   0x438545
  42f43a:	mov    BYTE PTR ds:0x44db27,0x1
  42f441:	mov    BYTE PTR ds:0x45f99f,0x1
  42f448:	jmp    0x42f478
  42f44a:	cmp    BYTE PTR ds:0x44e00b,0x0
  42f451:	je     0x42f48d
  42f453:	cmp    BYTE PTR ds:0x44f54c,0x0
  42f45a:	jne    0x42f48d
  42f45c:	cmp    BYTE PTR ds:0x45f99f,0x0
  42f463:	je     0x42f48d
  42f465:	call   0x438545
  42f46a:	mov    BYTE PTR ds:0x44db27,0x0
  42f471:	mov    BYTE PTR ds:0x45f99f,0x0
  42f478:	mov    edx,DWORD PTR ds:0x448884
  42f47e:	mov    ecx,0x44db24
  42f483:	call   0x43f399
  42f488:	call   0x43857e
  42f48d:	xor    eax,eax
  42f48f:	mov    WORD PTR [esi+0x1],ax
  42f493:	jmp    0x42f4bb
  42f495:	cmp    BYTE PTR ds:0x44f551,0x0
  42f49c:	mov    al,ds:0x44f54b
  42f4a1:	mov    ds:0x44e046,al
  42f4a6:	je     0x42f4bb
  42f4a8:	mov    BYTE PTR ds:0x44f550,0x1
  42f4af:	jmp    0x42f4bb
  42f4b1:	mov    ecx,0x3f0
  42f4b6:	call   0x42f124
  42f4bb:	pop    edi
  42f4bc:	pop    esi
  42f4bd:	pop    ebp
  42f4be:	ret    0x4
  42f4c1:	mov    edi,edi
  42f4c3:	mov    al,0xf2
  42f4c5:	inc    edx
  42f4c6:	add    bh,dh
  42f4c8:	repnz inc edx
  42f4ca:	add    BYTE PTR [edx-0xd],al
  42f4cd:	inc    edx
  42f4ce:	add    BYTE PTR [edx-0xc],cl
  42f4d1:	inc    edx
  42f4d2:	add    bl,ch
  42f4d4:	repz inc edx
  42f4d6:	add    BYTE PTR [eax-0x4bffbd0d],ch
  42f4dc:	repz inc edx
  42f4de:	add    bl,cl
  42f4e0:	repz inc edx
  42f4e2:	add    BYTE PTR [edx],bl
  42f4e4:	hlt    
  42f4e5:	inc    edx
  42f4e6:	add    BYTE PTR [ebp-0x4effbd0c],dl
  42f4ec:	hlt    
  42f4ed:	inc    edx
  42f4ee:	add    BYTE PTR [eax+0x45f6923d],al
  42f4f4:	add    BYTE PTR [eax],al
  42f4f6:	jne    0x42f54f
  42f4f8:	cmp    DWORD PTR ds:0x45f834,0x0
  42f4ff:	je     0x42f538
  42f501:	mov    eax,ds:0x45f830
  42f506:	movzx  edx,BYTE PTR ds:0x44db1c
  42f50d:	push   esi
  42f50e:	mov    ds:0x44db20,eax
  42f513:	mov    eax,ds:0x448988
  42f518:	mov    esi,0x44db1c
  42f51d:	push   esi
  42f51e:	call   DWORD PTR [eax+edx*4]
  42f521:	mov    edx,DWORD PTR ds:0x448884
  42f527:	mov    ecx,esi
  42f529:	call   0x43f399
  42f52e:	cmp    BYTE PTR ds:0x45f692,0x0
  42f535:	pop    esi
  42f536:	jne    0x42f54f
  42f538:	mov    cl,0x9
  42f53a:	call   0x43859a
  42f53f:	cmp    BYTE PTR ds:0x45f692,0x0
  42f546:	jne    0x42f54f
  42f548:	mov    BYTE PTR ds:0x45f850,0x1
  42f54f:	push   0x5
  42f551:	pop    ecx
  42f552:	call   0x43f762
  42f557:	mov    eax,ds:0x45f834
  42f55c:	xor    ecx,ecx
  42f55e:	or     BYTE PTR [eax+0x7],0x10
  42f562:	mov    ds:0x45fab0,eax
  42f567:	call   0x4442bc
  42f56c:	cmp    BYTE PTR ds:0x44e042,0x0
  42f573:	je     0x42f592
  42f575:	push   0x6
  42f577:	pop    ecx
  42f578:	call   0x43f762
  42f57d:	mov    eax,ds:0x45f834
  42f582:	xor    ecx,ecx
  42f584:	or     BYTE PTR [eax+0x7],0x10
  42f588:	mov    ds:0x45f84c,eax
  42f58d:	call   0x4442bc
  42f592:	ret    0x4
  42f595:	push   ebp
  42f596:	mov    ebp,esp
  42f598:	push   ebx
  42f599:	mov    ebx,DWORD PTR [ebp+0x8]
  42f59c:	push   esi
  42f59d:	movzx  esi,BYTE PTR [ebx+0x4]
  42f5a1:	push   edi
  42f5a2:	lea    ecx,[esi+0x8]
  42f5a5:	call   0x43f42e
  42f5aa:	mov    edi,eax
  42f5ac:	push   esi
  42f5ad:	lea    ecx,[ebx+0x5]
  42f5b0:	push   ecx
  42f5b1:	lea    ecx,[edi+0x6]
  42f5b4:	push   ecx
  42f5b5:	call   0x447646
  42f5ba:	add    esp,0xc
  42f5bd:	cmp    DWORD PTR ds:0x45f878,0x0
  42f5c4:	mov    BYTE PTR [edi+esi*1+0x6],0x0
  42f5c9:	jne    0x42f5d3
  42f5cb:	mov    DWORD PTR ds:0x45f878,edi
  42f5d1:	jmp    0x42f5da
  42f5d3:	mov    eax,ds:0x463860
  42f5d8:	mov    DWORD PTR [eax],edi
  42f5da:	mov    DWORD PTR ds:0x463860,edi
  42f5e0:	pop    edi
  42f5e1:	xor    eax,eax
  42f5e3:	pop    esi
  42f5e4:	mov    WORD PTR [ebx+0x1],ax
  42f5e8:	pop    ebx
  42f5e9:	pop    ebp
  42f5ea:	ret    0x4
  42f5ed:	push   ebp
  42f5ee:	mov    ebp,esp
  42f5f0:	mov    eax,DWORD PTR [ebp+0x8]
  42f5f3:	cmp    BYTE PTR [eax],0x0
  42f5f6:	jne    0x42f5fe
  42f5f8:	xor    ecx,ecx
  42f5fa:	mov    WORD PTR [eax+0x1],cx
  42f5fe:	pop    ebp
  42f5ff:	ret    0x4
  42f602:	push   ebp
  42f603:	mov    ebp,esp
  42f605:	mov    eax,DWORD PTR [ebp+0x8]
  42f608:	xor    ecx,ecx
  42f60a:	mov    WORD PTR [eax+0x1],cx
  42f60e:	pop    ebp
  42f60f:	ret    0x4
  42f612:	push   ebp
  42f613:	mov    ebp,esp
  42f615:	push   0x0
  42f617:	xor    edx,edx
  42f619:	mov    ecx,0x7f5
  42f61e:	call   0x42ee80
  42f623:	cmp    BYTE PTR ds:0x45f692,0x0
  42f62a:	jne    0x42f635
  42f62c:	mov    eax,DWORD PTR [ebp+0x8]
  42f62f:	xor    ecx,ecx
  42f631:	mov    WORD PTR [eax+0x1],cx
  42f635:	pop    ebp
  42f636:	ret    0x4
  42f639:	push   ebp
  42f63a:	mov    ebp,esp
  42f63c:	mov    eax,DWORD PTR [ebp+0x8]
  42f63f:	push   esi
  42f640:	mov    esi,DWORD PTR [eax+0x3]
  42f643:	mov    eax,ds:0x45f82c
  42f648:	sub    DWORD PTR [esi+0x1c],eax
  42f64b:	test   BYTE PTR [esi+0x2c],0x10
  42f64f:	mov    eax,DWORD PTR [esi+0x1c]
  42f652:	mov    ds:0x45f830,eax
  42f657:	je     0x42f6aa
  42f659:	cmp    BYTE PTR [esi+0x6],0x1
  42f65d:	je     0x42f6aa
  42f65f:	mov    eax,ds:0x448924
  42f664:	mov    ecx,DWORD PTR [eax+0x18]
  42f667:	mov    eax,ds:0x448904
  42f66c:	mov    DWORD PTR [eax+0x18],ecx
  42f66f:	mov    eax,ds:0x448904
  42f674:	mov    ecx,DWORD PTR [eax+0x18]
  42f677:	mov    eax,ds:0x448914
  42f67c:	mov    DWORD PTR [eax+0x18],ecx
  42f67f:	mov    ecx,DWORD PTR ds:0x448924
  42f685:	mov    eax,DWORD PTR [ecx+0x18]
  42f688:	mov    eax,DWORD PTR [eax+0x18]
  42f68b:	mov    DWORD PTR [ecx+0x18],eax
  42f68e:	mov    eax,ds:0x448914
  42f693:	mov    eax,DWORD PTR [eax+0x18]
  42f696:	test   BYTE PTR [eax+0x7],0x40
  42f69a:	jne    0x42f6aa
  42f69c:	push   0x0
  42f69e:	xor    edx,edx
  42f6a0:	mov    ecx,0x1388
  42f6a5:	call   0x42ee80
  42f6aa:	mov    eax,0x100
  42f6af:	test   WORD PTR [esi+0x2c],ax
  42f6b3:	je     0x42f6bc
  42f6b5:	mov    ecx,esi
  42f6b7:	call   0x444639
  42f6bc:	pop    esi
  42f6bd:	pop    ebp
  42f6be:	ret    0x4
  42f6c1:	push   ebp
  42f6c2:	mov    ebp,esp
  42f6c4:	and    esp,0xfffffff8
  42f6c7:	sub    esp,0x24
  42f6ca:	mov    BYTE PTR ds:0x460564,dl
  42f6d0:	push   ebx
  42f6d1:	push   esi
  42f6d2:	xor    edx,edx
  42f6d4:	push   edi
  42f6d5:	mov    esi,ecx
  42f6d7:	mov    BYTE PTR ds:0x45f852,dl
  42f6dd:	mov    al,BYTE PTR [esi]
  42f6df:	movzx  eax,al
  42f6e2:	add    eax,0xfffffffe
  42f6e5:	mov    DWORD PTR [esp+0x18],esi
  42f6e9:	inc    esi
  42f6ea:	add    eax,esi
  42f6ec:	mov    DWORD PTR [esp+0x1c],eax
  42f6f0:	mov    al,BYTE PTR [eax]
  42f6f2:	cmp    al,0x1
  42f6f4:	jne    0x42f703
  42f6f6:	cmp    BYTE PTR ds:0x45f857,0x0
  42f6fd:	je     0x42f912
  42f703:	cmp    al,0x2
  42f705:	je     0x42f96e
  42f70b:	mov    DWORD PTR [esp+0x20],edx
  42f70f:	mov    DWORD PTR [esp+0x28],edx
  42f713:	mov    WORD PTR [esp+0x2c],0x1900
  42f71a:	mov    BYTE PTR [esp+0x2e],0x1
  42f71f:	lea    ebx,[esp+0x20]
  42f723:	movzx  edi,BYTE PTR [ebx+0xd]
  42f727:	mov    al,BYTE PTR [esi]
  42f729:	mov    BYTE PTR [esp+0x11],al
  42f72d:	movzx  eax,al
  42f730:	mov    ecx,edi
  42f732:	imul   ecx,ecx,0x1a
  42f735:	mov    DWORD PTR [esp+0x14],eax
  42f739:	movzx  eax,BYTE PTR [eax+0x405598]
  42f740:	mov    al,BYTE PTR [ecx+eax*1+0x4056a0]
  42f747:	mov    BYTE PTR [esp+0x13],al
  42f74b:	movzx  eax,al
  42f74e:	mov    eax,DWORD PTR [eax*4+0x404844]
  42f755:	sub    eax,edx
  42f757:	je     0x42f77f
  42f759:	dec    eax
  42f75a:	jne    0x42f91e
  42f760:	mov    al,BYTE PTR [esp+0x11]
  42f764:	push   ebx
  42f765:	mov    ds:0x44f582,al
  42f76a:	call   DWORD PTR [edi*4+0x405530]
  42f771:	mov    ebx,eax
  42f773:	test   ebx,ebx
  42f775:	je     0x42f961
  42f77b:	xor    edx,edx
  42f77d:	jmp    0x42f723
  42f77f:	cmp    DWORD PTR ds:0x460560,0x0
  42f786:	jne    0x42f7b3
  42f788:	mov    ecx,0x200
  42f78d:	mov    BYTE PTR [esp+0x12],0x1e
  42f792:	call   0x43f42e
  42f797:	mov    edi,eax
  42f799:	mov    al,BYTE PTR [esp+0x12]
  42f79d:	mov    DWORD PTR ds:0x460560,edi
  42f7a3:	add    edi,0x10
  42f7a6:	mov    DWORD PTR [edi],edi
  42f7a8:	dec    al
  42f7aa:	jne    0x42f7a3
  42f7ac:	add    edi,0x10
  42f7af:	xor    edx,edx
  42f7b1:	jmp    0x42f7c0
  42f7b3:	mov    edi,DWORD PTR ds:0x460560
  42f7b9:	mov    eax,DWORD PTR [edi]
  42f7bb:	mov    ds:0x460560,eax
  42f7c0:	mov    al,BYTE PTR [esp+0x11]
  42f7c4:	mov    ecx,DWORD PTR [esp+0x14]
  42f7c8:	mov    BYTE PTR [edi+0xc],al
  42f7cb:	mov    al,BYTE PTR [ecx+0x405598]
  42f7d1:	mov    BYTE PTR [edi+0xd],al
  42f7d4:	mov    al,BYTE PTR [esp+0x13]
  42f7d8:	inc    esi
  42f7d9:	mov    DWORD PTR [edi],ebx
  42f7db:	mov    BYTE PTR [edi+0xe],al
  42f7de:	mov    DWORD PTR [edi+0x4],esi
  42f7e1:	mov    eax,DWORD PTR [ecx*4+0x405160]
  42f7e8:	mov    ebx,edi
  42f7ea:	cmp    eax,0x7
  42f7ed:	ja     0x42f961
  42f7f3:	jmp    DWORD PTR [eax*4+0x42f981]
  42f7fa:	mov    ecx,esi
  42f7fc:	call   0x445afc
  42f801:	mov    DWORD PTR [esp+0x14],eax
  42f805:	test   eax,eax
  42f807:	je     0x42f813
  42f809:	cmp    BYTE PTR [eax+0x6],0x7
  42f80d:	je     0x42f8e6
  42f813:	movzx  eax,BYTE PTR [esi+0x4]
  42f817:	add    esi,0x5
  42f81a:	add    esi,eax
  42f81c:	jmp    0x42f77b
  42f821:	add    esi,0x4
  42f824:	jmp    0x42f723
  42f829:	movzx  eax,BYTE PTR [esi]
  42f82c:	inc    esi
  42f82d:	add    esi,eax
  42f82f:	jmp    0x42f723
  42f834:	add    esi,0xfffffff6
  42f837:	add    esi,ecx
  42f839:	jmp    0x42f723
  42f83e:	mov    eax,DWORD PTR [edi]
  42f840:	test   eax,eax
  42f842:	je     0x42f867
  42f844:	mov    al,BYTE PTR [eax+0xc]
  42f847:	cmp    al,0x2f
  42f849:	je     0x42f84f
  42f84b:	cmp    al,0x2e
  42f84d:	jne    0x42f867
  42f84f:	movzx  eax,BYTE PTR [edi+0xd]
  42f853:	push   edi
  42f854:	call   DWORD PTR [eax*4+0x405530]
  42f85b:	push   eax
  42f85c:	call   0x42f9a1
  42f861:	mov    ecx,DWORD PTR [esp+0x14]
  42f865:	mov    ebx,eax
  42f867:	add    esi,0xfffffff6
  42f86a:	add    esi,ecx
  42f86c:	jmp    0x42f77b
  42f871:	mov    eax,DWORD PTR [edi]
  42f873:	mov    eax,DWORD PTR [eax+0x8]
  42f876:	test   eax,eax
  42f878:	je     0x42f723
  42f87e:	mov    eax,DWORD PTR [eax+0x18]
  42f881:	test   eax,eax
  42f883:	je     0x42f723
  42f889:	test   BYTE PTR [eax+0xe],0x8
  42f88d:	je     0x42f723
  42f893:	mov    ecx,DWORD PTR [eax+0x14]
  42f896:	mov    al,BYTE PTR [ecx+0x6]
  42f899:	cmp    al,0xb
  42f89b:	je     0x42f8a5
  42f89d:	cmp    al,0xa
  42f89f:	jne    0x42f723
  42f8a5:	mov    ax,WORD PTR [ecx+0x20]
  42f8a9:	mov    ds:0x45f98c,ax
  42f8af:	jmp    0x42f723
  42f8b4:	mov    edx,DWORD PTR [esp+0x1c]
  42f8b8:	push   edi
  42f8b9:	mov    ecx,esi
  42f8bb:	call   0x4324e3
  42f8c0:	mov    esi,eax
  42f8c2:	test   esi,esi
  42f8c4:	je     0x42f95a
  42f8ca:	mov    eax,ds:0x460560
  42f8cf:	mov    ebx,DWORD PTR [edi]
  42f8d1:	xor    edx,edx
  42f8d3:	mov    DWORD PTR [edi+0x8],edx
  42f8d6:	mov    DWORD PTR [edi+0x4],edx
  42f8d9:	mov    DWORD PTR [edi],eax
  42f8db:	mov    DWORD PTR ds:0x460560,edi
  42f8e1:	jmp    0x42f723
  42f8e6:	mov    ecx,edi
  42f8e8:	mov    BYTE PTR ds:0x45f852,0x1
  42f8ef:	call   0x431abd
  42f8f4:	mov    edx,DWORD PTR [esp+0x18]
  42f8f8:	push   ecx
  42f8f9:	mov    ecx,DWORD PTR [esp+0x18]
  42f8fd:	sub    esi,edx
  42f8ff:	push   esi
  42f900:	call   0x434576
  42f905:	mov    esi,eax
  42f907:	test   esi,esi
  42f909:	je     0x42f961
  42f90b:	xor    edx,edx
  42f90d:	jmp    0x42f6dd
  42f912:	mov    cl,BYTE PTR [esi]
  42f914:	lea    edx,[esi+0x1]
  42f917:	call   0x43278a
  42f91c:	jmp    0x42f97a
  42f91e:	dec    eax
  42f91f:	je     0x42f950
  42f921:	dec    eax
  42f922:	je     0x42f949
  42f924:	dec    eax
  42f925:	je     0x42f942
  42f927:	dec    eax
  42f928:	je     0x42f93b
  42f92a:	dec    eax
  42f92b:	jne    0x42f961
  42f92d:	mov    edx,0x8a0
  42f932:	mov    ecx,ebx
  42f934:	call   0x431aff
  42f939:	jmp    0x42f961
  42f93b:	mov    edx,0x89f
  42f940:	jmp    0x42f932
  42f942:	mov    edx,0x89e
  42f947:	jmp    0x42f932
  42f949:	mov    edx,0x7d9
  42f94e:	jmp    0x42f932
  42f950:	mov    ecx,DWORD PTR [ebx+0x8]
  42f953:	call   0x431922
  42f958:	jmp    0x42f963
  42f95a:	mov    ecx,edi
  42f95c:	call   0x431abd
  42f961:	xor    eax,eax
  42f963:	xor    ecx,ecx
  42f965:	mov    WORD PTR ds:0x45f98c,cx
  42f96c:	jmp    0x42f97a
  42f96e:	call   0x431f11
  42f973:	push   0x8
  42f975:	pop    ecx
  42f976:	mov    edi,eax
  42f978:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f97a:	pop    edi
  42f97b:	pop    esi
  42f97c:	pop    ebx
  42f97d:	mov    esp,ebp
  42f97f:	pop    ebp
  42f980:	ret    
  42f981:	and    esi,edi
  42f983:	inc    edx
  42f984:	add    BYTE PTR [esi],bh
  42f986:	clc    
  42f987:	inc    edx
  42f988:	add    dl,bh
  42f98a:	test   DWORD PTR [edx+0x0],0x42f834
  42f991:	jno    0x42f98b
  42f993:	inc    edx
  42f994:	add    BYTE PTR [ecx],ah
  42f996:	clc    
  42f997:	inc    edx
  42f998:	add    BYTE PTR [ecx],ch
  42f99a:	clc    
  42f99b:	inc    edx
  42f99c:	add    BYTE PTR [eax+edi*8-0x74aaffbe],dh
  42f9a3:	in     al,dx
  42f9a4:	push   esi
  42f9a5:	push   edi
  42f9a6:	mov    edi,DWORD PTR [ebp+0x8]
  42f9a9:	mov    esi,DWORD PTR [edi+0x8]
  42f9ac:	test   esi,esi
  42f9ae:	jne    0x42f9c1
  42f9b0:	mov    edx,0x821
  42f9b5:	mov    ecx,edi
  42f9b7:	call   0x431aff
  42f9bc:	jmp    0x42fa48
  42f9c1:	mov    eax,DWORD PTR [edi]
  42f9c3:	push   ebx
  42f9c4:	xor    ebx,ebx
  42f9c6:	mov    DWORD PTR [ebp+0x8],eax
  42f9c9:	cmp    DWORD PTR [eax+0x8],ebx
  42f9cc:	je     0x42f9d8
  42f9ce:	mov    edx,0x7e1
  42f9d3:	jmp    0x42fea7
  42f9d8:	and    DWORD PTR [esi+0x4],0xfffbffff
  42f9df:	cmp    BYTE PTR [esi],0x5
  42f9e2:	mov    edx,DWORD PTR [esi+0x4]
  42f9e5:	jne    0x42f9ea
  42f9e7:	mov    BYTE PTR [esi],0x2
  42f9ea:	mov    cl,BYTE PTR [edi+0xc]
  42f9ed:	movzx  eax,cl
  42f9f0:	add    eax,0xffffffd2
  42f9f3:	cmp    eax,0x21
  42f9f6:	ja     0x42fa2b
  42f9f8:	movzx  eax,BYTE PTR [eax+0x42feed]
  42f9ff:	jmp    DWORD PTR [eax*4+0x42feb5]
  42fa06:	mov    edx,edi
  42fa08:	mov    ecx,esi
  42fa0a:	call   0x431c3c
  42fa0f:	test   al,al
  42fa11:	jne    0x42fa2b
  42fa13:	xor    eax,eax
  42fa15:	jmp    0x42fa47
  42fa17:	mov    edx,edi
  42fa19:	mov    ecx,esi
  42fa1b:	call   0x431c3c
  42fa20:	test   al,al
  42fa22:	je     0x42fa13
  42fa24:	xor    DWORD PTR [esi+0x4],0x8000
  42fa2b:	mov    eax,DWORD PTR [ebp+0x8]
  42fa2e:	mov    ecx,DWORD PTR ds:0x460560
  42fa34:	mov    DWORD PTR [eax+0x8],esi
  42fa37:	and    DWORD PTR [edi+0x8],0x0
  42fa3b:	and    DWORD PTR [edi+0x4],0x0
  42fa3f:	mov    DWORD PTR [edi],ecx
  42fa41:	mov    DWORD PTR ds:0x460560,edi
  42fa47:	pop    ebx
  42fa48:	pop    edi
  42fa49:	pop    esi
  42fa4a:	pop    ebp
  42fa4b:	ret    0x4
  42fa4e:	mov    edx,edi
  42fa50:	mov    ecx,esi
  42fa52:	call   0x431c3c
  42fa57:	test   al,al
  42fa59:	je     0x42fa13
  42fa5b:	mov    edx,DWORD PTR [esi+0x4]
  42fa5e:	test   edx,0x8000
  42fa64:	je     0x42fa78
  42fa66:	mov    ecx,DWORD PTR [esi+0x8]
  42fa69:	mov    eax,DWORD PTR [esi+0xc]
  42fa6c:	neg    ecx
  42fa6e:	adc    eax,ebx
  42fa70:	neg    eax
  42fa72:	mov    DWORD PTR [esi+0x8],ecx
  42fa75:	mov    DWORD PTR [esi+0xc],eax
  42fa78:	mov    ecx,DWORD PTR [esi+0x8]
  42fa7b:	mov    eax,DWORD PTR [esi+0xc]
  42fa7e:	xor    edx,0x40000
  42fa84:	not    ecx
  42fa86:	not    eax
  42fa88:	mov    DWORD PTR [esi+0x8],ecx
  42fa8b:	mov    DWORD PTR [esi+0xc],eax
  42fa8e:	mov    DWORD PTR [esi+0x4],edx
  42fa91:	test   edx,0x8000
  42fa97:	je     0x42fac1
  42fa99:	mov    ebx,ecx
  42fa9b:	mov    ecx,eax
  42fa9d:	mov    eax,ebx
  42fa9f:	and    eax,0x80000000
  42faa4:	or     eax,0x0
  42faa7:	je     0x42fabf
  42faa9:	neg    ebx
  42faab:	adc    ecx,0x0
  42faae:	neg    ecx
  42fab0:	xor    edx,0x8000
  42fab6:	mov    DWORD PTR [esi+0x8],ebx
  42fab9:	mov    DWORD PTR [esi+0xc],ecx
  42fabc:	mov    DWORD PTR [esi+0x4],edx
  42fabf:	xor    ebx,ebx
  42fac1:	mov    eax,DWORD PTR [esi+0x4]
  42fac4:	mov    edx,0x8000
  42fac9:	test   edx,eax
  42facb:	je     0x42fad2
  42facd:	xor    eax,edx
  42facf:	mov    DWORD PTR [esi+0x4],eax
  42fad2:	and    DWORD PTR [esi+0x4],0xffffdf7f
  42fad9:	mov    DWORD PTR [esi+0x18],ebx
  42fadc:	mov    BYTE PTR [esi+0x1],bl
  42fadf:	jmp    0x42fa2b
  42fae4:	mov    eax,DWORD PTR [esi+0x10]
  42fae7:	test   eax,eax
  42fae9:	je     0x42fb1f
  42faeb:	cmp    BYTE PTR [eax+0x6],0x3
  42faef:	ja     0x42fb1f
  42faf1:	test   dl,0x70
  42faf4:	je     0x42fb1f
  42faf6:	movzx  eax,WORD PTR [esi+0x2]
  42fafa:	test   eax,0x1f00
  42faff:	jne    0x42fb1f
  42fb01:	cmp    DWORD PTR ds:0x45f834,ebx
  42fb07:	je     0x42fe34
  42fb0d:	or     edx,0x2050
  42fb13:	mov    BYTE PTR [esi+0x1],0x1
  42fb17:	mov    DWORD PTR [esi+0x4],edx
  42fb1a:	jmp    0x42fa2b
  42fb1f:	mov    edx,0x7ec
  42fb24:	jmp    0x42fea7
  42fb29:	xor    eax,eax
  42fb2b:	inc    eax
  42fb2c:	cmp    BYTE PTR [esi],al
  42fb2e:	jne    0x42fc1a
  42fb34:	movzx  eax,WORD PTR [esi+0x2]
  42fb38:	test   eax,0x1f00
  42fb3d:	jne    0x42fc1a
  42fb43:	test   dl,0x3
  42fb46:	jne    0x42fc1a
  42fb4c:	mov    eax,DWORD PTR [esi+0x10]
  42fb4f:	test   eax,eax
  42fb51:	je     0x42fb5d
  42fb53:	cmp    BYTE PTR [eax+0x6],0x8
  42fb57:	je     0x42fc1a
  42fb5d:	test   edx,0x100
  42fb63:	je     0x42fc1a
  42fb69:	mov    ebx,DWORD PTR [esi+0x18]
  42fb6c:	test   ebx,ebx
  42fb6e:	je     0x42fba4
  42fb70:	cmp    DWORD PTR [ebx+0x4],0x0
  42fb74:	jne    0x42fb9c
  42fb76:	push   0x1c
  42fb78:	pop    ecx
  42fb79:	call   0x43f42e
  42fb7e:	mov    ecx,eax
  42fb80:	mov    DWORD PTR [ebx+0x4],ecx
  42fb83:	mov    eax,DWORD PTR [esi+0x18]
  42fb86:	mov    DWORD PTR [ecx],eax
  42fb88:	mov    eax,DWORD PTR [ebx+0x4]
  42fb8b:	xor    ecx,ecx
  42fb8d:	inc    ecx
  42fb8e:	mov    WORD PTR [eax+0xe],cx
  42fb92:	mov    eax,DWORD PTR [ebx+0x4]
  42fb95:	mov    DWORD PTR [eax+0x10],0x8
  42fb9c:	mov    eax,DWORD PTR [ebx+0x4]
  42fb9f:	mov    DWORD PTR [esi+0x18],eax
  42fba2:	jmp    0x42fbc2
  42fba4:	and    edx,0x800
  42fbaa:	or     edx,0x4400
  42fbb0:	shr    edx,0xa
  42fbb3:	sub    edx,0xe
  42fbb6:	imul   edx,edx,0x1c
  42fbb9:	add    edx,0x449418
  42fbbf:	mov    DWORD PTR [esi+0x18],edx
  42fbc2:	mov    ecx,esi
  42fbc4:	call   0x431d21
  42fbc9:	or     DWORD PTR [esi+0x4],0x1000
  42fbd0:	mov    eax,DWORD PTR [esi+0x4]
  42fbd3:	mov    WORD PTR [esi],0x802
  42fbd8:	test   eax,0x100
  42fbdd:	je     0x42fa2b
  42fbe3:	and    eax,0xffffff7f
  42fbe8:	mov    DWORD PTR [esi+0x4],eax
  42fbeb:	jmp    0x42fa2b
  42fbf0:	cmp    BYTE PTR [esi],0x1
  42fbf3:	jne    0x42fc1a
  42fbf5:	movzx  eax,WORD PTR [esi+0x2]
  42fbf9:	test   eax,0x1f00
  42fbfe:	jne    0x42fc1a
  42fc00:	test   dl,0x3
  42fc03:	jne    0x42fc1a
  42fc05:	mov    eax,DWORD PTR [esi+0x10]
  42fc08:	test   eax,eax
  42fc0a:	je     0x42fc12
  42fc0c:	cmp    BYTE PTR [eax+0x6],0x8
  42fc10:	je     0x42fc1a
  42fc12:	test   edx,0x100
  42fc18:	jne    0x42fc24
  42fc1a:	mov    edx,0x832
  42fc1f:	jmp    0x42fea7
  42fc24:	and    edx,0xffffff7f
  42fc2a:	mov    BYTE PTR [esi],0x2
  42fc2d:	mov    DWORD PTR [esi+0x4],edx
  42fc30:	cmp    BYTE PTR [edi+0xc],0x4c
  42fc34:	mov    BYTE PTR [esi+0x1],0x4
  42fc38:	jne    0x42fc42
  42fc3a:	or     edx,0x10000
  42fc40:	jmp    0x42fc48
  42fc42:	or     edx,0x20000
  42fc48:	mov    DWORD PTR [esi+0x4],edx
  42fc4b:	mov    DWORD PTR [esi+0x18],ebx
  42fc4e:	jmp    0x42fa2b
  42fc53:	cmp    BYTE PTR [esi],0x4
  42fc56:	jne    0x42fc5f
  42fc58:	mov    ecx,esi
  42fc5a:	call   0x431bbe
  42fc5f:	cmp    BYTE PTR [esi],0x2
  42fc62:	jne    0x42fd27
  42fc68:	mov    edx,DWORD PTR [esi+0x4]
  42fc6b:	mov    BYTE PTR [esi+0x1],0x1
  42fc6f:	test   edx,0x100
  42fc75:	jne    0x42fd27
  42fc7b:	test   edx,0x8000
  42fc81:	je     0x42fc95
  42fc83:	mov    ecx,DWORD PTR [esi+0x8]
  42fc86:	mov    eax,DWORD PTR [esi+0xc]
  42fc89:	neg    ecx
  42fc8b:	adc    eax,ebx
  42fc8d:	neg    eax
  42fc8f:	mov    DWORD PTR [esi+0x8],ecx
  42fc92:	mov    DWORD PTR [esi+0xc],eax
  42fc95:	and    edx,0xffff7fff
  42fc9b:	or     edx,0x2000
  42fca1:	mov    DWORD PTR [esi+0x4],edx
  42fca4:	cmp    BYTE PTR [edi+0xc],0x3d
  42fca8:	jne    0x42fcb0
  42fcaa:	movzx  eax,BYTE PTR [esi+0x8]
  42fcae:	jmp    0x42fcb4
  42fcb0:	movzx  eax,BYTE PTR [esi+0x9]
  42fcb4:	cdq    
  42fcb5:	mov    DWORD PTR [esi+0x8],eax
  42fcb8:	mov    DWORD PTR [esi+0xc],edx
  42fcbb:	jmp    0x42fa2b
  42fcc0:	cmp    BYTE PTR [esi],0x4
  42fcc3:	jne    0x42fccc
  42fcc5:	mov    ecx,esi
  42fcc7:	call   0x431bbe
  42fccc:	cmp    BYTE PTR [esi],0x2
  42fccf:	jne    0x42fd27
  42fcd1:	mov    edx,DWORD PTR [esi+0x4]
  42fcd4:	test   edx,0x100
  42fcda:	jne    0x42fd27
  42fcdc:	mov    BYTE PTR [esi+0x1],0x4
  42fce0:	test   edx,0x8000
  42fce6:	je     0x42fcfa
  42fce8:	mov    ecx,DWORD PTR [esi+0x8]
  42fceb:	mov    eax,DWORD PTR [esi+0xc]
  42fcee:	neg    ecx
  42fcf0:	adc    eax,ebx
  42fcf2:	neg    eax
  42fcf4:	mov    DWORD PTR [esi+0x8],ecx
  42fcf7:	mov    DWORD PTR [esi+0xc],eax
  42fcfa:	and    edx,0xffff7fff
  42fd00:	or     edx,0x2000
  42fd06:	mov    DWORD PTR [esi+0x4],edx
  42fd09:	cmp    BYTE PTR [edi+0xc],0x3e
  42fd0d:	jne    0x42fd14
  42fd0f:	mov    eax,DWORD PTR [esi+0x8]
  42fd12:	jmp    0x42fd17
  42fd14:	mov    eax,DWORD PTR [esi+0xc]
  42fd17:	mov    DWORD PTR [esi+0x8],eax
  42fd1a:	mov    DWORD PTR [esi+0xc],ebx
  42fd1d:	jmp    0x42fa2b
  42fd22:	cmp    BYTE PTR [esi],0x2
  42fd25:	je     0x42fd31
  42fd27:	mov    edx,0x839
  42fd2c:	jmp    0x42fea7
  42fd31:	test   edx,0x100
  42fd37:	je     0x42fd90
  42fd39:	cmp    cl,0x3f
  42fd3c:	je     0x42fd48
  42fd3e:	mov    edx,0x7ea
  42fd43:	jmp    0x42fea7
  42fd48:	mov    ebx,DWORD PTR [esi+0x18]
  42fd4b:	and    edx,0xfffff7ff
  42fd51:	mov    DWORD PTR [esi+0x4],edx
  42fd54:	test   ebx,ebx
  42fd56:	je     0x42fdca
  42fd58:	mov    ebx,DWORD PTR [ebx]
  42fd5a:	cmp    DWORD PTR [ebx+0x4],0x0
  42fd5e:	jne    0x42fd81
  42fd60:	push   0x1c
  42fd62:	pop    ecx
  42fd63:	call   0x43f42e
  42fd68:	mov    DWORD PTR [ebx+0x4],eax
  42fd6b:	mov    DWORD PTR [eax],ebx
  42fd6d:	mov    eax,DWORD PTR [ebx+0x4]
  42fd70:	xor    ecx,ecx
  42fd72:	inc    ecx
  42fd73:	mov    WORD PTR [eax+0xe],cx
  42fd77:	mov    eax,DWORD PTR [ebx+0x4]
  42fd7a:	mov    DWORD PTR [eax+0x10],0x2
  42fd81:	mov    eax,DWORD PTR [ebx+0x4]
  42fd84:	mov    ecx,esi
  42fd86:	mov    DWORD PTR [esi+0x18],eax
  42fd89:	call   0x431d21
  42fd8e:	jmp    0x42fdca
  42fd90:	test   edx,0x8000
  42fd96:	je     0x42fdaa
  42fd98:	mov    ecx,DWORD PTR [esi+0x8]
  42fd9b:	mov    eax,DWORD PTR [esi+0xc]
  42fd9e:	neg    ecx
  42fda0:	adc    eax,ebx
  42fda2:	neg    eax
  42fda4:	mov    DWORD PTR [esi+0x8],ecx
  42fda7:	mov    DWORD PTR [esi+0xc],eax
  42fdaa:	and    edx,0xffff7fff
  42fdb0:	mov    DWORD PTR [esi+0x4],edx
  42fdb3:	cmp    BYTE PTR [edi+0xc],0x3f
  42fdb7:	jne    0x42fdbf
  42fdb9:	movzx  eax,WORD PTR [esi+0x8]
  42fdbd:	jmp    0x42fdc3
  42fdbf:	movzx  eax,WORD PTR [esi+0xa]
  42fdc3:	cdq    
  42fdc4:	mov    DWORD PTR [esi+0xc],edx
  42fdc7:	mov    DWORD PTR [esi+0x8],eax
  42fdca:	mov    BYTE PTR [esi+0x1],0x2
  42fdce:	jmp    0x42fa2b
  42fdd3:	cmp    BYTE PTR [esi],0x6
  42fdd6:	jb     0x42fde9
  42fdd8:	cmp    DWORD PTR [esi+0x18],ebx
  42fddb:	jne    0x42fde9
  42fddd:	movzx  ecx,BYTE PTR [esi+0x1]
  42fde1:	call   0x444865
  42fde6:	mov    DWORD PTR [esi+0x18],eax
  42fde9:	mov    eax,0xc000
  42fdee:	and    WORD PTR [esi+0x2],ax
  42fdf2:	and    edx,0xf0002070
  42fdf8:	or     edx,0x2000
  42fdfe:	mov    BYTE PTR [esi],0x4
  42fe01:	mov    DWORD PTR [esi+0x4],edx
  42fe04:	mov    DWORD PTR [esi+0x8],ebx
  42fe07:	mov    DWORD PTR [esi+0xc],ebx
  42fe0a:	mov    DWORD PTR [esi+0x10],ebx
  42fe0d:	mov    DWORD PTR [esi+0x14],ebx
  42fe10:	jmp    0x42fa2b
  42fe15:	cmp    BYTE PTR [esi],0x4
  42fe18:	je     0x42fe24
  42fe1a:	mov    edx,0x7da
  42fe1f:	jmp    0x42fea7
  42fe24:	cmp    DWORD PTR ds:0x45f834,ebx
  42fe2a:	jne    0x42fe3b
  42fe2c:	cmp    DWORD PTR ds:0x45f994,ebx
  42fe32:	jne    0x42fe3b
  42fe34:	mov    edx,0x7f2
  42fe39:	jmp    0x42fea7
  42fe3b:	or     edx,0x800
  42fe41:	mov    BYTE PTR [esi],0x1
  42fe44:	mov    DWORD PTR [esi+0x4],edx
  42fe47:	cmp    BYTE PTR [edi+0xc],0x46
  42fe4b:	jne    0x42fe57
  42fe4d:	call   0x4443ba
  42fe52:	mov    DWORD PTR [esi+0x10],eax
  42fe55:	jmp    0x42fe78
  42fe57:	mov    ecx,DWORD PTR [edi+0x4]
  42fe5a:	call   0x445afc
  42fe5f:	mov    ecx,DWORD PTR [esi+0x18]
  42fe62:	mov    DWORD PTR [esi+0x10],eax
  42fe65:	test   ecx,ecx
  42fe67:	je     0x42fe78
  42fe69:	test   BYTE PTR [ecx+0xe],0x4
  42fe6d:	jne    0x42fe78
  42fe6f:	mov    ecx,0xfffe
  42fe74:	and    WORD PTR [eax+0x2c],cx
  42fe78:	or     DWORD PTR [esi+0x4],0x100
  42fe7f:	mov    eax,0xc000
  42fe84:	and    WORD PTR [esi+0x2],ax
  42fe88:	jmp    0x42fa2b
  42fe8d:	cmp    BYTE PTR [esi],0x4
  42fe90:	jne    0x42fea2
  42fe92:	test   dl,dl
  42fe94:	js     0x42fea2
  42fe96:	mov    ecx,esi
  42fe98:	call   0x431bbe
  42fe9d:	jmp    0x42fa2b
  42fea2:	mov    edx,0x7d9
  42fea7:	mov    ecx,edi
  42fea9:	call   0x431aff
  42feae:	jmp    0x42fa47
  42feb3:	mov    edi,edi
  42feb5:	push   es
  42feb6:	cli    
  42feb7:	inc    edx
  42feb8:	add    BYTE PTR [edi],dl
  42feba:	cli    
  42febb:	inc    edx
  42febc:	add    BYTE PTR [esi-0x6],cl
  42febf:	inc    edx
  42fec0:	add    BYTE PTR [ebx-0x4],dl
  42fec3:	inc    edx
  42fec4:	add    al,al
  42fec6:	cld    
  42fec7:	inc    edx
  42fec8:	add    BYTE PTR [edx],ah
  42feca:	std    
  42fecb:	inc    edx
  42fecc:	add    ah,ah
  42fece:	cli    
  42fecf:	inc    edx
  42fed0:	add    BYTE PTR [edx-0x72ffbd02],ah
  42fed6:	inc    BYTE PTR [edx+0x0]
  42fed9:	adc    eax,0xd30042fe
  42fede:	std    
  42fedf:	inc    edx
  42fee0:	add    BYTE PTR [ecx],ch
  42fee2:	sti    
  42fee3:	inc    edx
  42fee4:	add    al,dh
  42fee6:	sti    
  42fee7:	inc    edx
  42fee8:	add    BYTE PTR [ebx],ch
  42feea:	cli    
  42feeb:	inc    edx
  42feec:	add    BYTE PTR [eax],al
  42feee:	add    DWORD PTR ds:0xd0d0d0d,ecx
  42fef4:	add    cl,BYTE PTR ds:0x30d0d0d
  42fefa:	add    al,0x5
  42fefc:	add    eax,DWORD PTR [eax*1+0x707060d]
  42ff03:	or     BYTE PTR [eax],cl
  42ff05:	or     DWORD PTR [ecx],ecx
  42ff07:	or     cl,BYTE PTR ds:0xc0c0b0d
  42ff0d:	pop    es
  42ff0e:	pop    es
  42ff0f:	push   ebp
  42ff10:	mov    ebp,esp
  42ff12:	and    esp,0xfffffff8
  42ff15:	sub    esp,0x24
  42ff18:	push   ebx
  42ff19:	mov    ebx,DWORD PTR [ebp+0x8]
  42ff1c:	push   esi
  42ff1d:	mov    eax,DWORD PTR [ebx]
  42ff1f:	push   edi
  42ff20:	mov    esi,DWORD PTR [eax+0x8]
  42ff23:	mov    DWORD PTR [esp+0x14],eax
  42ff27:	test   esi,esi
  42ff29:	jne    0x42ff3c
  42ff2b:	mov    edx,0x7e0
  42ff30:	mov    ecx,ebx
  42ff32:	call   0x431aff
  42ff37:	jmp    0x430ac0
  42ff3c:	mov    edi,DWORD PTR [ebx+0x8]
  42ff3f:	test   edi,edi
  42ff41:	je     0x42ff2b
  42ff43:	cmp    BYTE PTR [ebx+0xc],0x31
  42ff47:	jne    0x4300ba
  42ff4d:	mov    cl,BYTE PTR [edi]
  42ff4f:	xor    eax,eax
  42ff51:	mov    ds:0x45f98c,ax
  42ff57:	cmp    cl,0x4
  42ff5a:	jne    0x42ffa4
  42ff5c:	mov    eax,DWORD PTR [edi+0x18]
  42ff5f:	test   eax,eax
  42ff61:	je     0x42ffa4
  42ff63:	test   BYTE PTR [eax+0xe],0x8
  42ff67:	je     0x42ffa4
  42ff69:	mov    eax,DWORD PTR [eax+0x14]
  42ff6c:	cmp    BYTE PTR [eax+0x6],0xd
  42ff70:	je     0x42ffa4
  42ff72:	mov    al,BYTE PTR [esi]
  42ff74:	cmp    al,0x6
  42ff76:	jne    0x42ff87
  42ff78:	mov    ecx,esi
  42ff7a:	call   0x431d48
  42ff7f:	test   eax,eax
  42ff81:	je     0x42ff92
  42ff83:	mov    edx,eax
  42ff85:	jmp    0x42ff30
  42ff87:	cmp    al,0x1
  42ff89:	je     0x42ff92
  42ff8b:	mov    edx,0x7eb
  42ff90:	jmp    0x42ff30
  42ff92:	mov    eax,esi
  42ff94:	mov    esi,edi
  42ff96:	mov    edi,eax
  42ff98:	mov    eax,DWORD PTR [esi+0x18]
  42ff9b:	mov    DWORD PTR [esp+0x24],eax
  42ff9f:	jmp    0x43070b
  42ffa4:	push   0x5
  42ffa6:	pop    edx
  42ffa7:	cmp    cl,dl
  42ffa9:	je     0x42ffb5
  42ffab:	mov    edx,0x876
  42ffb0:	jmp    0x42ff30
  42ffb5:	mov    al,BYTE PTR [esi]
  42ffb7:	xor    ecx,ecx
  42ffb9:	inc    ecx
  42ffba:	mov    BYTE PTR [esp+0x13],al
  42ffbe:	cmp    al,0x4
  42ffc0:	je     0x42ffc6
  42ffc2:	cmp    al,cl
  42ffc4:	jne    0x42ff8b
  42ffc6:	mov    eax,DWORD PTR [esi+0x18]
  42ffc9:	test   eax,eax
  42ffcb:	je     0x42ff8b
  42ffcd:	test   BYTE PTR [eax+0xe],0x8
  42ffd1:	je     0x42ff8b
  42ffd3:	mov    eax,DWORD PTR [eax+0x14]
  42ffd6:	cmp    BYTE PTR [eax+0x6],0xd
  42ffda:	je     0x42ff8b
  42ffdc:	cmp    BYTE PTR [esp+0x13],dl
  42ffe0:	jne    0x42ffe5
  42ffe2:	mov    BYTE PTR [esi],0x2
  42ffe5:	mov    al,BYTE PTR [esi]
  42ffe7:	cmp    al,cl
  42ffe9:	je     0x430023
  42ffeb:	cmp    BYTE PTR [edi],dl
  42ffed:	jne    0x430023
  42ffef:	mov    eax,DWORD PTR [edi+0x18]
  42fff2:	test   eax,eax
  42fff4:	je     0x430021
  42fff6:	mov    al,BYTE PTR [eax+0xe]
  42fff9:	and    al,0x1f
  42fffb:	cmp    al,0x8
  42fffd:	jne    0x430021
  42ffff:	mov    eax,DWORD PTR [esi+0x8]
  430002:	add    DWORD PTR [edi+0x8],eax
  430005:	mov    eax,DWORD PTR [esi+0xc]
  430008:	mov    BYTE PTR [edi],0x4
  43000b:	adc    DWORD PTR [edi+0xc],eax
  43000e:	mov    eax,DWORD PTR [esp+0x14]
  430012:	mov    DWORD PTR [eax+0x8],edi
  430015:	mov    eax,ds:0x45f83c
  43001a:	mov    DWORD PTR [esi],eax
  43001c:	jmp    0x430aa0
  430021:	mov    al,BYTE PTR [esi]
  430023:	cmp    al,0x4
  430025:	jne    0x430036
  430027:	mov    eax,DWORD PTR [esi+0x18]
  43002a:	mov    al,BYTE PTR [eax+0xe]
  43002d:	and    al,0x1f
  43002f:	cmp    al,0x8
  430031:	jne    0x430036
  430033:	mov    BYTE PTR [esi],0x2
  430036:	mov    al,BYTE PTR [edi]
  430038:	cmp    al,dl
  43003a:	jne    0x430041
  43003c:	mov    BYTE PTR [edi],0x2
  43003f:	jmp    0x43004c
  430041:	cmp    al,0x4
  430043:	jne    0x43004c
  430045:	mov    ecx,edi
  430047:	call   0x431bbe
  43004c:	mov    eax,DWORD PTR [edi+0x18]
  43004f:	and    DWORD PTR [ebx+0x8],0x0
  430053:	mov    edx,edi
  430055:	mov    ecx,esi
  430057:	mov    DWORD PTR [esp+0x28],eax
  43005b:	call   0x431f51
  430060:	mov    ecx,DWORD PTR [esp+0x14]
  430064:	mov    DWORD PTR [ecx+0x8],eax
  430067:	test   eax,eax
  430069:	jne    0x430088
  43006b:	mov    eax,ds:0x45f83c
  430070:	mov    DWORD PTR [esi],eax
  430072:	mov    ecx,ebx
  430074:	mov    DWORD PTR [edi],esi
  430076:	mov    DWORD PTR ds:0x45f83c,edi
  43007c:	call   0x431abd
  430081:	xor    eax,eax
  430083:	jmp    0x430ac0
  430088:	mov    ecx,DWORD PTR [esp+0x28]
  43008c:	test   ecx,ecx
  43008e:	je     0x430aa6
  430094:	cmp    BYTE PTR [eax],0x2
  430097:	jne    0x4300a6
  430099:	test   DWORD PTR [eax+0x4],0x100
  4300a0:	je     0x430aa6
  4300a6:	mov    DWORD PTR [eax+0x18],ecx
  4300a9:	mov    eax,DWORD PTR [esp+0x14]
  4300ad:	mov    ecx,DWORD PTR [eax+0x8]
  4300b0:	call   0x431d21
  4300b5:	jmp    0x430aa6
  4300ba:	push   0x5
  4300bc:	pop    edx
  4300bd:	cmp    BYTE PTR [esi],dl
  4300bf:	jne    0x4300c4
  4300c1:	mov    BYTE PTR [esi],0x2
  4300c4:	cmp    BYTE PTR [edi],dl
  4300c6:	jne    0x4300cb
  4300c8:	mov    BYTE PTR [edi],0x2
  4300cb:	mov    cl,BYTE PTR [ebx+0xc]
  4300ce:	movzx  eax,cl
  4300d1:	cmp    eax,0x40
  4300d4:	jg     0x430772
  4300da:	je     0x43065d
  4300e0:	cmp    eax,0x32
  4300e3:	jg     0x430568
  4300e9:	je     0x430547
  4300ef:	sub    eax,0x2a
  4300f2:	je     0x43051c
  4300f8:	dec    eax
  4300f9:	je     0x43030c
  4300ff:	dec    eax
  430100:	je     0x43010e
  430102:	dec    eax
  430103:	je     0x43014e
  430105:	sub    eax,0x3
  430108:	jne    0x430aa6
  43010e:	push   ebx
  43010f:	push   0x0
  430111:	mov    edx,edi
  430113:	mov    ecx,esi
  430115:	call   0x431c6f
  43011a:	test   al,al
  43011c:	je     0x430081
  430122:	mov    eax,DWORD PTR [edi+0x8]
  430125:	or     eax,DWORD PTR [edi+0xc]
  430128:	je     0x430302
  43012e:	cmp    BYTE PTR [ebx+0xc],0x30
  430132:	push   DWORD PTR [edi+0xc]
  430135:	push   DWORD PTR [edi+0x8]
  430138:	push   DWORD PTR [esi+0xc]
  43013b:	push   DWORD PTR [esi+0x8]
  43013e:	jne    0x4302d4
  430144:	call   0x4475a0
  430149:	jmp    0x4302d9
  43014e:	mov    cl,BYTE PTR [esi]
  430150:	mov    edx,0x180000
  430155:	cmp    cl,0x6
  430158:	jbe    0x430163
  43015a:	test   DWORD PTR [esi+0x4],edx
  43015d:	je     0x430685
  430163:	mov    al,BYTE PTR [edi]
  430165:	cmp    al,0x6
  430167:	jbe    0x430172
  430169:	test   DWORD PTR [edi+0x4],edx
  43016c:	je     0x430685
  430172:	cmp    cl,0x6
  430175:	je     0x4301b7
  430177:	cmp    cl,0xc
  43017a:	je     0x4301b7
  43017c:	cmp    cl,0xd
  43017f:	je     0x4301b7
  430181:	cmp    al,0x6
  430183:	je     0x4301c7
  430185:	cmp    al,0xc
  430187:	je     0x4301c7
  430189:	cmp    al,0xd
  43018b:	je     0x4301c7
  43018d:	push   ebx
  43018e:	push   0x0
  430190:	mov    edx,edi
  430192:	mov    ecx,esi
  430194:	call   0x431c6f
  430199:	test   al,al
  43019b:	je     0x430081
  4301a1:	push   DWORD PTR [esi+0xc]
  4301a4:	push   DWORD PTR [esi+0x8]
  4301a7:	push   DWORD PTR [edi+0xc]
  4301aa:	push   DWORD PTR [edi+0x8]
  4301ad:	call   0x4474d0
  4301b2:	jmp    0x4302d9
  4301b7:	mov    ecx,DWORD PTR [esp+0x14]
  4301bb:	mov    eax,esi
  4301bd:	mov    esi,edi
  4301bf:	mov    DWORD PTR [ecx+0x8],esi
  4301c2:	mov    edi,eax
  4301c4:	mov    DWORD PTR [ebx+0x8],eax
  4301c7:	test   DWORD PTR [edi+0x4],edx
  4301ca:	jne    0x4301db
  4301cc:	mov    al,BYTE PTR [edi+0x1]
  4301cf:	cmp    al,0x4
  4301d1:	je     0x4301db
  4301d3:	cmp    al,0x8
  4301d5:	jne    0x430685
  4301db:	cmp    BYTE PTR [edi],0x6
  4301de:	jne    0x4301f5
  4301e0:	movzx  eax,WORD PTR [edi+0x2]
  4301e4:	test   eax,0x800
  4301e9:	je     0x4301f5
  4301eb:	and    al,0xf
  4301ed:	cmp    al,0x4
  4301ef:	je     0x430685
  4301f5:	mov    edx,ebx
  4301f7:	mov    ecx,esi
  4301f9:	call   0x431c3c
  4301fe:	test   al,al
  430200:	je     0x430081
  430206:	mov    ecx,DWORD PTR [esi+0x4]
  430209:	test   ecx,0x8000
  43020f:	jne    0x4302ca
  430215:	mov    eax,DWORD PTR [esi+0x8]
  430218:	and    eax,0xffffff00
  43021d:	or     eax,DWORD PTR [esi+0xc]
  430220:	jne    0x4302ca
  430226:	movzx  eax,BYTE PTR [esi+0x8]
  43022a:	dec    eax
  43022b:	je     0x430267
  43022d:	dec    eax
  43022e:	je     0x430259
  430230:	dec    eax
  430231:	dec    eax
  430232:	je     0x43024b
  430234:	sub    eax,0x4
  430237:	jne    0x4302ca
  43023d:	and    ecx,0xf0000600
  430243:	or     ecx,0x600
  430249:	jmp    0x43026d
  43024b:	and    ecx,0xf0000400
  430251:	or     ecx,0x400
  430257:	jmp    0x43026d
  430259:	and    ecx,0xf0000200
  43025f:	or     ecx,0x200
  430265:	jmp    0x43026d
  430267:	and    ecx,0xf0000000
  43026d:	mov    DWORD PTR [esi+0x4],ecx
  430270:	mov    BYTE PTR [esi],0x1
  430273:	mov    eax,DWORD PTR [edi+0x4]
  430276:	and    eax,0x800
  43027b:	or     DWORD PTR [esi+0x4],eax
  43027e:	mov    eax,DWORD PTR [edi+0x4]
  430281:	and    eax,0x180000
  430286:	or     DWORD PTR [esi+0x4],eax
  430289:	xor    eax,eax
  43028b:	mov    BYTE PTR [esi+0x1],al
  43028e:	mov    DWORD PTR [esi+0x8],eax
  430291:	mov    DWORD PTR [esi+0xc],eax
  430294:	mov    DWORD PTR [esi+0x18],eax
  430297:	mov    eax,0xfff0
  43029c:	and    WORD PTR [esi+0x2],ax
  4302a0:	mov    ax,WORD PTR [edi+0x2]
  4302a4:	movzx  ecx,WORD PTR [esi+0x2]
  4302a8:	and    ax,0xf
  4302ac:	mov    edx,0x100
  4302b1:	or     ax,dx
  4302b4:	shl    ax,0x4
  4302b8:	and    ecx,0xd00f
  4302be:	or     ax,cx
  4302c1:	mov    WORD PTR [esi+0x2],ax
  4302c5:	jmp    0x4309f3
  4302ca:	mov    edx,0x823
  4302cf:	jmp    0x42ff30
  4302d4:	call   0x447530
  4302d9:	mov    ecx,DWORD PTR [esi+0x4]
  4302dc:	mov    DWORD PTR [esi+0xc],edx
  4302df:	mov    DWORD PTR [esi+0x8],eax
  4302e2:	mov    eax,DWORD PTR [edi+0x4]
  4302e5:	mov    edx,0x8000
  4302ea:	xor    eax,ecx
  4302ec:	test   edx,eax
  4302ee:	jne    0x4302f8
  4302f0:	and    ecx,0xffff7fff
  4302f6:	jmp    0x4302fa
  4302f8:	or     ecx,edx
  4302fa:	mov    DWORD PTR [esi+0x4],ecx
  4302fd:	jmp    0x4309f3
  430302:	mov    edx,0x879
  430307:	jmp    0x42ff30
  43030c:	cmp    BYTE PTR [esi],0x4
  43030f:	jne    0x430318
  430311:	mov    ecx,esi
  430313:	call   0x431bbe
  430318:	cmp    BYTE PTR [edi],0x4
  43031b:	jne    0x430324
  43031d:	mov    ecx,edi
  43031f:	call   0x431bbe
  430324:	mov    al,BYTE PTR [edi]
  430326:	mov    BYTE PTR [esp+0x12],al
  43032a:	cmp    al,0x6
  43032c:	jae    0x430685
  430332:	xor    ecx,ecx
  430334:	inc    ecx
  430335:	cmp    al,cl
  430337:	jne    0x43034c
  430339:	movzx  eax,WORD PTR [edi+0x2]
  43033d:	test   eax,0x1f00
  430342:	jne    0x430685
  430348:	mov    al,BYTE PTR [esp+0x12]
  43034c:	push   0x3
  43034e:	pop    edx
  43034f:	cmp    al,dl
  430351:	je     0x430897
  430357:	test   DWORD PTR [edi+0x4],0x4000
  43035e:	jne    0x43053d
  430364:	mov    eax,DWORD PTR [esi+0x4]
  430367:	mov    DWORD PTR [esp+0x20],eax
  43036b:	test   DWORD PTR [esp+0x20],0x4000
  430373:	mov    eax,0x100
  430378:	je     0x43038e
  43037a:	cmp    BYTE PTR [esp+0x12],0x2
  43037f:	jne    0x43053d
  430385:	test   DWORD PTR [edi+0x4],eax
  430388:	jne    0x43053d
  43038e:	test   DWORD PTR [edi+0x4],eax
  430391:	je     0x4304df
  430397:	test   DWORD PTR [esp+0x20],eax
  43039b:	je     0x430897
  4303a1:	mov    eax,DWORD PTR [esp+0x20]
  4303a5:	and    eax,edx
  4303a7:	mov    DWORD PTR [esp+0x28],eax
  4303ab:	je     0x4303ca
  4303ad:	mov    eax,DWORD PTR [edi+0x4]
  4303b0:	and    eax,edx
  4303b2:	je     0x4303ca
  4303b4:	cmp    DWORD PTR [esp+0x28],eax
  4303b8:	jne    0x430a05
  4303be:	mov    eax,DWORD PTR [esi+0x14]
  4303c1:	cmp    eax,DWORD PTR [edi+0x14]
  4303c4:	jne    0x430a05
  4303ca:	mov    edx,DWORD PTR [esi+0x10]
  4303cd:	xor    eax,eax
  4303cf:	mov    DWORD PTR [esp+0x1c],eax
  4303d3:	mov    DWORD PTR [esp+0x24],eax
  4303d7:	mov    DWORD PTR [esp+0x18],eax
  4303db:	test   edx,edx
  4303dd:	jne    0x4303f2
  4303df:	mov    eax,DWORD PTR [esi+0x14]
  4303e2:	mov    DWORD PTR [esp+0x28],eax
  4303e6:	mov    edx,DWORD PTR [edi+0x10]
  4303e9:	test   edx,edx
  4303eb:	jne    0x430420
  4303ed:	mov    eax,DWORD PTR [edi+0x14]
  4303f0:	jmp    0x430443
  4303f2:	test   BYTE PTR [edx+0x2c],0x40
  4303f6:	mov    eax,DWORD PTR [edx+0x20]
  4303f9:	mov    DWORD PTR [esp+0x28],eax
  4303fd:	mov    eax,ds:0x45f830
  430402:	jne    0x430407
  430404:	mov    eax,DWORD PTR [edx+0x1c]
  430407:	and    DWORD PTR [esp+0x24],0x0
  43040c:	test   BYTE PTR [edx+0x7],0x2
  430410:	mov    DWORD PTR [esp+0x1c],eax
  430414:	je     0x4303e6
  430416:	mov    edx,0x7e2
  43041b:	jmp    0x42ff30
  430420:	test   BYTE PTR [edx+0x2c],0x40
  430424:	mov    eax,DWORD PTR [edx+0x20]
  430427:	mov    DWORD PTR [esp+0x2c],eax
  43042b:	mov    eax,ds:0x45f830
  430430:	jne    0x430435
  430432:	mov    eax,DWORD PTR [edx+0x1c]
  430435:	test   BYTE PTR [edx+0x7],0x2
  430439:	mov    DWORD PTR [esp+0x18],eax
  43043d:	jne    0x430416
  43043f:	mov    eax,DWORD PTR [esp+0x2c]
  430443:	mov    edx,DWORD PTR [esp+0x28]
  430447:	cmp    edx,eax
  430449:	jne    0x430a05
  43044f:	cmp    BYTE PTR [edx+0x6],0x10
  430453:	jne    0x430a05
  430459:	mov    eax,DWORD PTR [esp+0x20]
  43045d:	and    eax,0xf0008008
  430462:	or     eax,0x8
  430465:	push   ecx
  430466:	mov    edx,edi
  430468:	mov    ecx,esi
  43046a:	mov    DWORD PTR [esi+0x4],eax
  43046d:	call   0x431e18
  430472:	mov    eax,DWORD PTR [esp+0x18]
  430476:	mov    ecx,DWORD PTR [esp+0x1c]
  43047a:	xor    edx,edx
  43047c:	mov    BYTE PTR [edi],0x2
  43047f:	cmp    edx,DWORD PTR [esp+0x24]
  430483:	jl     0x4304a0
  430485:	jg     0x43048b
  430487:	cmp    eax,ecx
  430489:	jbe    0x4304a0
  43048b:	sub    eax,ecx
  43048d:	sbb    edx,DWORD PTR [esp+0x24]
  430491:	or     DWORD PTR [edi+0x4],0x8000
  430498:	mov    DWORD PTR [edi+0x8],eax
  43049b:	mov    DWORD PTR [edi+0xc],edx
  43049e:	jmp    0x4304b5
  4304a0:	sub    ecx,eax
  4304a2:	mov    eax,DWORD PTR [esp+0x24]
  4304a6:	sbb    eax,edx
  4304a8:	and    DWORD PTR [edi+0x4],0xffff7fff
  4304af:	mov    DWORD PTR [edi+0x8],ecx
  4304b2:	mov    DWORD PTR [edi+0xc],eax
  4304b5:	xor    ecx,ecx
  4304b7:	inc    ecx
  4304b8:	cmp    BYTE PTR [esi],cl
  4304ba:	jne    0x4304ca
  4304bc:	movzx  eax,WORD PTR [esi+0x2]
  4304c0:	test   eax,0x1f00
  4304c5:	jne    0x4304ca
  4304c7:	mov    BYTE PTR [esi],0x2
  4304ca:	push   0x0
  4304cc:	mov    edx,edi
  4304ce:	mov    ecx,esi
  4304d0:	call   0x431e18
  4304d5:	xor    eax,eax
  4304d7:	mov    BYTE PTR [esi+0x1],al
  4304da:	jmp    0x4309ea
  4304df:	test   DWORD PTR [esp+0x20],eax
  4304e3:	jne    0x430504
  4304e5:	cmp    BYTE PTR [esi],cl
  4304e7:	jne    0x430504
  4304e9:	cmp    BYTE PTR [esp+0x12],cl
  4304ed:	jne    0x430504
  4304ef:	mov    ecx,DWORD PTR [edi+0x8]
  4304f2:	mov    eax,DWORD PTR [edi+0xc]
  4304f5:	neg    ecx
  4304f7:	adc    eax,0x0
  4304fa:	neg    eax
  4304fc:	mov    DWORD PTR [edi+0x8],ecx
  4304ff:	mov    DWORD PTR [edi+0xc],eax
  430502:	jmp    0x430515
  430504:	mov    edx,ebx
  430506:	mov    ecx,edi
  430508:	call   0x431c3c
  43050d:	test   al,al
  43050f:	je     0x430081
  430515:	xor    DWORD PTR [edi+0x4],0x8000
  43051c:	and    DWORD PTR [ebx+0x8],0x0
  430520:	mov    edx,edi
  430522:	mov    ecx,esi
  430524:	call   0x431f51
  430529:	mov    ecx,DWORD PTR [esp+0x14]
  43052d:	mov    DWORD PTR [ecx+0x8],eax
  430530:	test   eax,eax
  430532:	jne    0x430aa6
  430538:	jmp    0x43006b
  43053d:	mov    edx,0x833
  430542:	jmp    0x42ff30
  430547:	cmp    BYTE PTR [esi],0x4
  43054a:	jne    0x43051c
  43054c:	mov    eax,DWORD PTR [esi+0x18]
  43054f:	test   eax,eax
  430551:	je     0x43051c
  430553:	cmp    BYTE PTR [edi],0x1
  430556:	jne    0x43051c
  430558:	test   BYTE PTR [eax+0xe],0x8
  43055c:	jne    0x43051c
  43055e:	mov    edx,0x7d9
  430563:	jmp    0x42ff30
  430568:	cmp    eax,0x33
  43056b:	jl     0x430aa6
  430571:	cmp    eax,0x34
  430574:	jle    0x4305fc
  43057a:	cmp    eax,0x36
  43057d:	je     0x4305d7
  43057f:	cmp    eax,0x37
  430582:	je     0x4305b2
  430584:	cmp    eax,0x38
  430587:	jne    0x430aa6
  43058d:	push   ebx
  43058e:	push   0x1
  430590:	mov    edx,edi
  430592:	mov    ecx,esi
  430594:	call   0x431c6f
  430599:	test   al,al
  43059b:	je     0x430081
  4305a1:	mov    eax,DWORD PTR [edi+0x8]
  4305a4:	and    DWORD PTR [esi+0x8],eax
  4305a7:	mov    eax,DWORD PTR [edi+0xc]
  4305aa:	and    DWORD PTR [esi+0xc],eax
  4305ad:	jmp    0x4309f3
  4305b2:	push   ebx
  4305b3:	push   0x1
  4305b5:	mov    edx,edi
  4305b7:	mov    ecx,esi
  4305b9:	call   0x431c6f
  4305be:	test   al,al
  4305c0:	je     0x430081
  4305c6:	mov    eax,DWORD PTR [edi+0x8]
  4305c9:	or     DWORD PTR [esi+0x8],eax
  4305cc:	mov    eax,DWORD PTR [edi+0xc]
  4305cf:	or     DWORD PTR [esi+0xc],eax
  4305d2:	jmp    0x4309f3
  4305d7:	push   ebx
  4305d8:	push   0x1
  4305da:	mov    edx,edi
  4305dc:	mov    ecx,esi
  4305de:	call   0x431c6f
  4305e3:	test   al,al
  4305e5:	je     0x430081
  4305eb:	mov    eax,DWORD PTR [edi+0x8]
  4305ee:	xor    DWORD PTR [esi+0x8],eax
  4305f1:	mov    eax,DWORD PTR [edi+0xc]
  4305f4:	xor    DWORD PTR [esi+0xc],eax
  4305f7:	jmp    0x4309f3
  4305fc:	test   DWORD PTR [edi+0x4],0x8000
  430603:	je     0x43060f
  430605:	mov    edx,0x82c
  43060a:	jmp    0x42ff30
  43060f:	push   ebx
  430610:	push   0x1
  430612:	mov    edx,edi
  430614:	mov    ecx,esi
  430616:	call   0x431c6f
  43061b:	test   al,al
  43061d:	je     0x430081
  430623:	xor    eax,eax
  430625:	cmp    DWORD PTR [edi+0xc],eax
  430628:	jb     0x430637
  43062a:	ja     0x430632
  43062c:	cmp    DWORD PTR [edi+0x8],0x40
  430630:	jbe    0x430637
  430632:	mov    DWORD PTR [esi+0xc],eax
  430635:	jmp    0x430655
  430637:	cmp    BYTE PTR [ebx+0xc],0x33
  43063b:	mov    eax,DWORD PTR [esi+0x8]
  43063e:	mov    edx,DWORD PTR [esi+0xc]
  430641:	mov    ecx,DWORD PTR [edi+0x8]
  430644:	jne    0x43064d
  430646:	call   0x447510
  43064b:	jmp    0x430652
  43064d:	call   0x447620
  430652:	mov    DWORD PTR [esi+0xc],edx
  430655:	mov    DWORD PTR [esi+0x8],eax
  430658:	jmp    0x4309f3
  43065d:	cmp    BYTE PTR [esi],0x4
  430660:	je     0x43066c
  430662:	mov    edx,0x7da
  430667:	jmp    0x42ff30
  43066c:	mov    edx,DWORD PTR [esi+0x18]
  43066f:	mov    DWORD PTR [esp+0x24],edx
  430673:	test   edx,edx
  430675:	je     0x430662
  430677:	cmp    BYTE PTR [edi],0x6
  43067a:	jb     0x43068f
  43067c:	movzx  eax,BYTE PTR [edi+0x1]
  430680:	cmp    DWORD PTR [edx+0x10],eax
  430683:	je     0x43068f
  430685:	mov    edx,0x7f0
  43068a:	jmp    0x42ff30
  43068f:	test   BYTE PTR [edx+0xe],0x8
  430693:	je     0x4306ac
  430695:	mov    eax,DWORD PTR [edx+0x14]
  430698:	cmp    BYTE PTR [eax+0x6],0xd
  43069c:	jne    0x4306ac
  43069e:	mov    ecx,DWORD PTR [edx+0x10]
  4306a1:	call   0x444865
  4306a6:	mov    edx,eax
  4306a8:	mov    DWORD PTR [esp+0x24],eax
  4306ac:	movzx  eax,WORD PTR [edx+0xe]
  4306b0:	xor    ecx,ecx
  4306b2:	inc    ecx
  4306b3:	mov    DWORD PTR [esp+0x2c],eax
  4306b7:	test   al,0x4
  4306b9:	mov    al,BYTE PTR [edi]
  4306bb:	je     0x4306de
  4306bd:	cmp    al,cl
  4306bf:	je     0x4306de
  4306c1:	mov    edx,DWORD PTR [edi+0x10]
  4306c4:	test   edx,edx
  4306c6:	je     0x4306de
  4306c8:	cmp    BYTE PTR [edx+0x6],0x3
  4306cc:	ja     0x4306de
  4306ce:	test   BYTE PTR [edi+0x4],0x40
  4306d2:	jne    0x4306de
  4306d4:	mov    edx,0x7ec
  4306d9:	jmp    0x42ff30
  4306de:	test   BYTE PTR [esp+0x2c],0x8
  4306e3:	je     0x4306ed
  4306e5:	cmp    al,cl
  4306e7:	jne    0x42ff8b
  4306ed:	cmp    al,0x2
  4306ef:	jne    0x43070b
  4306f1:	mov    ecx,DWORD PTR [edi+0x4]
  4306f4:	mov    eax,ecx
  4306f6:	and    eax,0x4100
  4306fb:	cmp    eax,0x100
  430700:	je     0x43070b
  430702:	or     ecx,0x2000
  430708:	mov    DWORD PTR [edi+0x4],ecx
  43070b:	cmp    BYTE PTR [edi],0x4
  43070e:	jne    0x430717
  430710:	mov    ecx,edi
  430712:	call   0x431bbe
  430717:	cmp    BYTE PTR [edi],0x2
  43071a:	je     0x430736
  43071c:	mov    eax,DWORD PTR [esp+0x24]
  430720:	mov    ecx,edi
  430722:	mov    DWORD PTR [edi+0x18],eax
  430725:	call   0x431d21
  43072a:	or     DWORD PTR [edi+0x4],0x2000
  430731:	jmp    0x43000e
  430736:	mov    ecx,DWORD PTR [edi+0x4]
  430739:	test   ecx,0x1000
  43073f:	jne    0x43000e
  430745:	mov    eax,DWORD PTR [esp+0x24]
  430749:	and    ecx,0xffffff0f
  43074f:	mov    DWORD PTR [edi+0x18],eax
  430752:	mov    DWORD PTR [edi+0x4],ecx
  430755:	mov    eax,DWORD PTR [esi+0x4]
  430758:	and    eax,0x70
  43075b:	je     0x430767
  43075d:	or     eax,ecx
  43075f:	or     eax,0x2000
  430764:	mov    DWORD PTR [edi+0x4],eax
  430767:	mov    al,BYTE PTR [esi+0x1]
  43076a:	mov    BYTE PTR [edi+0x1],al
  43076d:	jmp    0x43000e
  430772:	cmp    eax,0x52
  430775:	je     0x430a19
  43077b:	add    eax,0xffffffad
  43077e:	cmp    eax,edx
  430780:	ja     0x430aa6
  430786:	mov    eax,0x4000
  43078b:	test   DWORD PTR [esi+0x4],eax
  43078e:	je     0x4307a4
  430790:	push   DWORD PTR [esi+0x10]
  430793:	mov    edx,0x7e2
  430798:	mov    ecx,ebx
  43079a:	call   0x431b61
  43079f:	jmp    0x430ac0
  4307a4:	test   DWORD PTR [edi+0x4],eax
  4307a7:	je     0x4307ae
  4307a9:	push   DWORD PTR [edi+0x10]
  4307ac:	jmp    0x430793
  4307ae:	cmp    BYTE PTR [esi],0x4
  4307b1:	jne    0x4307d8
  4307b3:	cmp    BYTE PTR [edi],0x4
  4307b6:	jne    0x4307d1
  4307b8:	cmp    cl,0x53
  4307bb:	je     0x4307c2
  4307bd:	cmp    cl,0x54
  4307c0:	jne    0x4307d1
  4307c2:	mov    eax,DWORD PTR [esi+0x18]
  4307c5:	sub    eax,DWORD PTR [edi+0x18]
  4307c8:	neg    eax
  4307ca:	sbb    eax,eax
  4307cc:	jmp    0x4309ad
  4307d1:	mov    ecx,esi
  4307d3:	call   0x431bbe
  4307d8:	cmp    BYTE PTR [edi],0x4
  4307db:	jne    0x4307e4
  4307dd:	mov    ecx,edi
  4307df:	call   0x431bbe
  4307e4:	mov    al,BYTE PTR [esi]
  4307e6:	push   0x2
  4307e8:	pop    edx
  4307e9:	mov    BYTE PTR [esp+0x13],al
  4307ed:	cmp    al,dl
  4307ef:	ja     0x430a0f
  4307f5:	mov    al,BYTE PTR [edi]
  4307f7:	mov    BYTE PTR [esp+0x12],al
  4307fb:	cmp    al,dl
  4307fd:	ja     0x430a0f
  430803:	xor    ecx,ecx
  430805:	inc    ecx
  430806:	mov    eax,0x100
  43080b:	cmp    BYTE PTR [esp+0x13],dl
  43080f:	jne    0x43088c
  430811:	test   DWORD PTR [esi+0x4],eax
  430814:	jne    0x43088c
  430816:	cmp    BYTE PTR [esp+0x12],dl
  43081a:	jne    0x430882
  43081c:	test   DWORD PTR [edi+0x4],eax
  43081f:	jne    0x430882
  430821:	mov    al,BYTE PTR [ebx+0xc]
  430824:	cmp    al,0x53
  430826:	je     0x43082e
  430828:	cmp    al,0x54
  43082a:	je     0x43082e
  43082c:	xor    cl,cl
  43082e:	push   ebx
  43082f:	push   ecx
  430830:	mov    edx,edi
  430832:	mov    ecx,esi
  430834:	call   0x431c6f
  430839:	test   al,al
  43083b:	je     0x430081
  430841:	push   0x2
  430843:	pop    edx
  430844:	mov    cl,BYTE PTR [esi]
  430846:	cmp    cl,dl
  430848:	jne    0x430969
  43084e:	cmp    BYTE PTR [edi],dl
  430850:	jne    0x430969
  430856:	mov    ecx,DWORD PTR [esi+0x4]
  430859:	mov    eax,DWORD PTR [edi+0x4]
  43085c:	and    ecx,0x8000
  430862:	and    eax,0x8000
  430867:	cmp    ecx,eax
  430869:	je     0x430967
  43086f:	xor    eax,eax
  430871:	test   ecx,ecx
  430873:	sete   al
  430876:	lea    eax,[eax*2-0x1]
  43087d:	jmp    0x4309ad
  430882:	mov    edx,0x7ea
  430887:	jmp    0x42ff30
  43088c:	cmp    BYTE PTR [esp+0x12],dl
  430890:	jne    0x4308a1
  430892:	test   DWORD PTR [edi+0x4],eax
  430895:	jne    0x4308a1
  430897:	mov    edx,0x82e
  43089c:	jmp    0x42ff30
  4308a1:	mov    ecx,DWORD PTR [esi+0x10]
  4308a4:	test   ecx,ecx
  4308a6:	je     0x430897
  4308a8:	mov    eax,DWORD PTR [edi+0x10]
  4308ab:	test   eax,eax
  4308ad:	je     0x430897
  4308af:	mov    ebx,DWORD PTR [edi+0x10]
  4308b2:	mov    eax,DWORD PTR [ecx+0x20]
  4308b5:	cmp    eax,DWORD PTR [ebx+0x20]
  4308b8:	mov    ebx,DWORD PTR [ebp+0x8]
  4308bb:	jne    0x430a05
  4308c1:	mov    eax,DWORD PTR [esi+0x14]
  4308c4:	cmp    eax,DWORD PTR [edi+0x14]
  4308c7:	jne    0x430a05
  4308cd:	test   BYTE PTR [ecx+0x7],dl
  4308d0:	je     0x4308d8
  4308d2:	push   ecx
  4308d3:	jmp    0x430793
  4308d8:	mov    eax,DWORD PTR [edi+0x10]
  4308db:	test   BYTE PTR [eax+0x7],dl
  4308de:	je     0x4308e6
  4308e0:	push   eax
  4308e1:	jmp    0x430793
  4308e6:	cmp    BYTE PTR [esp+0x13],dl
  4308ea:	jne    0x430908
  4308ec:	test   DWORD PTR [esi+0x4],0x8000
  4308f3:	je     0x430908
  4308f5:	mov    ecx,DWORD PTR [esi+0x8]
  4308f8:	mov    eax,DWORD PTR [esi+0xc]
  4308fb:	neg    ecx
  4308fd:	adc    eax,0x0
  430900:	neg    eax
  430902:	mov    DWORD PTR [esi+0x8],ecx
  430905:	mov    DWORD PTR [esi+0xc],eax
  430908:	cmp    BYTE PTR [edi],dl
  43090a:	jne    0x430928
  43090c:	test   DWORD PTR [edi+0x4],0x8000
  430913:	je     0x430928
  430915:	mov    ecx,DWORD PTR [edi+0x8]
  430918:	mov    eax,DWORD PTR [edi+0xc]
  43091b:	neg    ecx
  43091d:	adc    eax,0x0
  430920:	neg    eax
  430922:	mov    DWORD PTR [edi+0x8],ecx
  430925:	mov    DWORD PTR [edi+0xc],eax
  430928:	mov    eax,0xf0000000
  43092d:	and    DWORD PTR [edi+0x4],eax
  430930:	mov    ecx,DWORD PTR [esi+0x10]
  430933:	and    DWORD PTR [esi+0x4],eax
  430936:	test   BYTE PTR [ecx+0x2c],0x40
  43093a:	mov    eax,ds:0x45f830
  43093f:	je     0x430945
  430941:	mov    ecx,eax
  430943:	jmp    0x430948
  430945:	mov    ecx,DWORD PTR [ecx+0x1c]
  430948:	add    DWORD PTR [esi+0x8],ecx
  43094b:	adc    DWORD PTR [esi+0xc],0x0
  43094f:	mov    ecx,DWORD PTR [edi+0x10]
  430952:	test   BYTE PTR [ecx+0x2c],0x40
  430956:	jne    0x43095b
  430958:	mov    eax,DWORD PTR [ecx+0x1c]
  43095b:	add    DWORD PTR [edi+0x8],eax
  43095e:	adc    DWORD PTR [edi+0xc],0x0
  430962:	jmp    0x430844
  430967:	mov    cl,BYTE PTR [esi]
  430969:	mov    ebx,DWORD PTR [esi+0x8]
  43096c:	cmp    ebx,DWORD PTR [edi+0x8]
  43096f:	mov    eax,DWORD PTR [esi+0xc]
  430972:	mov    ebx,DWORD PTR [ebp+0x8]
  430975:	jne    0x430980
  430977:	cmp    eax,DWORD PTR [edi+0xc]
  43097a:	jne    0x430983
  43097c:	xor    eax,eax
  43097e:	jmp    0x430997
  430980:	cmp    eax,DWORD PTR [edi+0xc]
  430983:	ja     0x430994
  430985:	jb     0x43098f
  430987:	mov    eax,DWORD PTR [esi+0x8]
  43098a:	cmp    eax,DWORD PTR [edi+0x8]
  43098d:	jae    0x430994
  43098f:	or     eax,0xffffffff
  430992:	jmp    0x430997
  430994:	xor    eax,eax
  430996:	inc    eax
  430997:	cmp    cl,dl
  430999:	jne    0x4309ad
  43099b:	cmp    BYTE PTR [edi],dl
  43099d:	jne    0x4309ad
  43099f:	test   DWORD PTR [esi+0x4],0x8000
  4309a6:	je     0x4309ad
  4309a8:	neg    eax
  4309aa:	movzx  eax,ax
  4309ad:	movsx  ecx,ax
  4309b0:	movzx  eax,BYTE PTR [ebx+0xc]
  4309b4:	imul   ecx,ecx,0x6
  4309b7:	movzx  eax,BYTE PTR [ecx+eax*1+0x403b87]
  4309bf:	cdq    
  4309c0:	mov    DWORD PTR [esi+0x8],eax
  4309c3:	or     eax,edx
  4309c5:	mov    DWORD PTR [esi+0xc],edx
  4309c8:	je     0x4309dc
  4309ca:	mov    eax,DWORD PTR [esi+0x4]
  4309cd:	and    eax,0xf0008000
  4309d2:	or     eax,0x8000
  4309d7:	mov    DWORD PTR [esi+0x4],eax
  4309da:	jmp    0x4309e3
  4309dc:	and    DWORD PTR [esi+0x4],0xf0000000
  4309e3:	mov    WORD PTR [esi],0x2
  4309e8:	xor    eax,eax
  4309ea:	mov    DWORD PTR [esi+0x10],eax
  4309ed:	mov    DWORD PTR [esi+0x14],eax
  4309f0:	mov    DWORD PTR [esi+0x18],eax
  4309f3:	mov    eax,ds:0x45f83c
  4309f8:	mov    DWORD PTR [edi],eax
  4309fa:	mov    DWORD PTR ds:0x45f83c,edi
  430a00:	jmp    0x430aa6
  430a05:	mov    edx,0x7e9
  430a0a:	jmp    0x42ff30
  430a0f:	mov    edx,0x82f
  430a14:	jmp    0x42ff30
  430a19:	mov    cl,BYTE PTR [edi]
  430a1b:	mov    BYTE PTR [esp+0x13],cl
  430a1f:	cmp    cl,0x6
  430a22:	jae    0x430685
  430a28:	push   0x3
  430a2a:	pop    edx
  430a2b:	cmp    BYTE PTR [esi],dl
  430a2d:	je     0x430a39
  430a2f:	mov    edx,0x830
  430a34:	jmp    0x42ff30
  430a39:	mov    eax,DWORD PTR [esi+0x8]
  430a3c:	or     eax,DWORD PTR [esi+0xc]
  430a3f:	jne    0x430a2f
  430a41:	cmp    cl,dl
  430a43:	jne    0x430a4f
  430a45:	mov    edx,0x834
  430a4a:	jmp    0x42ff30
  430a4f:	mov    eax,DWORD PTR [esi+0x4]
  430a52:	xor    ecx,ecx
  430a54:	and    al,dl
  430a56:	inc    ecx
  430a57:	cmp    al,cl
  430a59:	jne    0x430a75
  430a5b:	mov    eax,DWORD PTR [esi+0x14]
  430a5e:	test   eax,eax
  430a60:	jle    0x430a75
  430a62:	cmp    eax,edx
  430a64:	jle    0x430a6b
  430a66:	cmp    eax,0x6
  430a69:	jne    0x430a75
  430a6b:	mov    edx,0x89a
  430a70:	jmp    0x42ff30
  430a75:	cmp    BYTE PTR [esp+0x13],cl
  430a79:	jne    0x42ff8b
  430a7f:	and    DWORD PTR [edi+0x4],0xfffffffc
  430a83:	mov    eax,DWORD PTR [esi+0x4]
  430a86:	mov    ecx,DWORD PTR [esp+0x14]
  430a8a:	and    eax,edx
  430a8c:	or     DWORD PTR [edi+0x4],eax
  430a8f:	mov    eax,DWORD PTR [esi+0x14]
  430a92:	mov    DWORD PTR [edi+0x14],eax
  430a95:	mov    DWORD PTR [ecx+0x8],edi
  430a98:	mov    ecx,DWORD PTR ds:0x45f83c
  430a9e:	mov    DWORD PTR [esi],ecx
  430aa0:	mov    DWORD PTR ds:0x45f83c,esi
  430aa6:	mov    ecx,DWORD PTR ds:0x460560
  430aac:	and    DWORD PTR [ebx+0x8],0x0
  430ab0:	and    DWORD PTR [ebx+0x4],0x0
  430ab4:	mov    eax,DWORD PTR [esp+0x14]
  430ab8:	mov    DWORD PTR [ebx],ecx
  430aba:	mov    DWORD PTR ds:0x460560,ebx
  430ac0:	pop    edi
  430ac1:	pop    esi
  430ac2:	pop    ebx
  430ac3:	mov    esp,ebp
  430ac5:	pop    ebp
  430ac6:	ret    0x4
  430ac9:	push   ebp
  430aca:	mov    ebp,esp
  430acc:	sub    esp,0x10
  430acf:	push   edi
  430ad0:	mov    edi,DWORD PTR [ebp+0x8]
  430ad3:	mov    edx,DWORD PTR [edi]
  430ad5:	mov    DWORD PTR [ebp-0x8],edx
  430ad8:	cmp    DWORD PTR [edx+0x8],0x0
  430adc:	je     0x430aef
  430ade:	mov    edx,0x7e1
  430ae3:	mov    ecx,edi
  430ae5:	call   0x431aff
  430aea:	jmp    0x430d55
  430aef:	push   ebx
  430af0:	push   esi
  430af1:	call   0x431f11
  430af6:	mov    edx,DWORD PTR [ebp-0x8]
  430af9:	mov    ebx,eax
  430afb:	mov    ecx,edi
  430afd:	mov    DWORD PTR [edx+0x8],ebx
  430b00:	movzx  eax,BYTE PTR [ecx+0xd]
  430b04:	sub    eax,0x12
  430b07:	je     0x431518
  430b0d:	dec    eax
  430b0e:	dec    eax
  430b0f:	je     0x430e99
  430b15:	dec    eax
  430b16:	je     0x430e8f
  430b1c:	dec    eax
  430b1d:	je     0x430d5a
  430b23:	dec    eax
  430b24:	je     0x430b4f
  430b26:	dec    eax
  430b27:	jne    0x430d39
  430b2d:	mov    eax,DWORD PTR [ebx+0x4]
  430b30:	and    eax,0xf0000001
  430b35:	or     eax,0x1
  430b38:	mov    DWORD PTR [ebx+0x4],eax
  430b3b:	mov    BYTE PTR [ebx],0x3
  430b3e:	movzx  eax,BYTE PTR [ecx+0xc]
  430b42:	sub    eax,0xa4
  430b47:	mov    DWORD PTR [ebx+0x14],eax
  430b4a:	jmp    0x430d39
  430b4f:	movzx  edx,BYTE PTR [ecx+0xc]
  430b53:	cmp    edx,0x6f
  430b56:	ja     0x430b80
  430b58:	mov    ax,WORD PTR [ebx+0x2]
  430b5c:	mov    esi,0xfff0
  430b61:	and    edx,0xf
  430b64:	and    ax,si
  430b67:	or     ax,dx
  430b6a:	mov    edx,0x800
  430b6f:	or     ax,dx
  430b72:	mov    WORD PTR [ebx],0x107
  430b77:	mov    WORD PTR [ebx+0x2],ax
  430b7b:	jmp    0x430ce8
  430b80:	cmp    edx,0x73
  430b83:	ja     0x430ba9
  430b85:	mov    ax,WORD PTR [ebx+0x2]
  430b89:	lea    ecx,[edx+0x4]
  430b8c:	mov    edx,0xfff0
  430b91:	and    ax,dx
  430b94:	and    ecx,0xf
  430b97:	or     cx,ax
  430b9a:	mov    WORD PTR [ebx],0x107
  430b9f:	mov    eax,0x2800
  430ba4:	jmp    0x430cdf
  430ba9:	push   0x7b
  430bab:	pop    eax
  430bac:	cmp    dx,ax
  430baf:	ja     0x430be4
  430bb1:	mov    WORD PTR [ebx],0x206
  430bb6:	cmp    edx,0x7a
  430bb9:	je     0x430bc4
  430bbb:	cmp    dx,ax
  430bbe:	jne    0x430cc5
  430bc4:	mov    ax,WORD PTR [ebx+0x2]
  430bc8:	lea    ecx,[edx-0x4]
  430bcb:	and    ecx,0xf
  430bce:	or     ecx,0x100
  430bd4:	mov    edx,0xff0f
  430bd9:	shl    ecx,0x4
  430bdc:	and    ax,dx
  430bdf:	jmp    0x430cdf
  430be4:	mov    esi,0x83
  430be9:	cmp    dx,si
  430bec:	ja     0x430c00
  430bee:	lea    eax,[esi-0x1]
  430bf1:	mov    WORD PTR [ebx],0x206
  430bf6:	cmp    dx,ax
  430bf9:	je     0x430bc4
  430bfb:	cmp    dx,si
  430bfe:	jmp    0x430bbe
  430c00:	mov    eax,0x93
  430c05:	cmp    dx,ax
  430c08:	ja     0x430c14
  430c0a:	mov    WORD PTR [ebx],0x406
  430c0f:	jmp    0x430cc5
  430c14:	mov    eax,0xa3
  430c19:	cmp    dx,ax
  430c1c:	ja     0x430c52
  430c1e:	mov    eax,DWORD PTR [ebx+0x4]
  430c21:	and    eax,0xf0000800
  430c26:	mov    esi,0x800
  430c2b:	or     eax,esi
  430c2d:	mov    DWORD PTR [ebx+0x4],eax
  430c30:	mov    ax,WORD PTR [ebx+0x2]
  430c34:	lea    ecx,[edx-0x4]
  430c37:	mov    edx,0xfff0
  430c3c:	and    ecx,0xf
  430c3f:	and    ax,dx
  430c42:	or     cx,ax
  430c45:	mov    WORD PTR [ebx],0x806
  430c4a:	or     cx,si
  430c4d:	jmp    0x430ce2
  430c52:	mov    eax,0xb3
  430c57:	cmp    dx,ax
  430c5a:	ja     0x430c66
  430c5c:	mov    WORD PTR [ebx],0x80b
  430c61:	lea    ecx,[edx+0x4]
  430c64:	jmp    0x430cc8
  430c66:	mov    eax,0xc3
  430c6b:	cmp    dx,ax
  430c6e:	ja     0x430c87
  430c70:	mov    eax,DWORD PTR [ebx+0x4]
  430c73:	and    eax,0xf0080000
  430c78:	mov    WORD PTR [ebx],0x100c
  430c7d:	or     eax,0x80000
  430c82:	mov    DWORD PTR [ebx+0x4],eax
  430c85:	jmp    0x430cc5
  430c87:	mov    eax,0xd3
  430c8c:	cmp    dx,ax
  430c8f:	ja     0x430ca5
  430c91:	mov    eax,DWORD PTR [ebx+0x4]
  430c94:	and    eax,0xf0100000
  430c99:	mov    WORD PTR [ebx],0x200d
  430c9e:	or     eax,0x100000
  430ca3:	jmp    0x430c82
  430ca5:	mov    eax,0xe3
  430caa:	cmp    dx,ax
  430cad:	ja     0x430cb6
  430caf:	mov    WORD PTR [ebx],0x808
  430cb4:	jmp    0x430cc5
  430cb6:	mov    eax,0xf3
  430cbb:	cmp    dx,ax
  430cbe:	ja     0x430ce8
  430cc0:	mov    WORD PTR [ebx],0x809
  430cc5:	lea    ecx,[edx-0x4]
  430cc8:	mov    ax,WORD PTR [ebx+0x2]
  430ccc:	mov    edx,0xfff0
  430cd1:	and    ax,dx
  430cd4:	and    ecx,0xf
  430cd7:	or     cx,ax
  430cda:	mov    eax,0x800
  430cdf:	or     cx,ax
  430ce2:	mov    WORD PTR [ebx+0x2],cx
  430ce6:	mov    ecx,edi
  430ce8:	cmp    DWORD PTR [ebx+0x18],0x0
  430cec:	je     0x430d36
  430cee:	mov    eax,0xffff
  430cf3:	cmp    WORD PTR [ebx+0x18],ax
  430cf7:	jne    0x430d2f
  430cf9:	mov    edx,DWORD PTR [ebp-0x8]
  430cfc:	mov    eax,DWORD PTR [edx]
  430cfe:	jmp    0x430d1b
  430d00:	mov    cl,BYTE PTR [eax+0xc]
  430d03:	mov    BYTE PTR [ebp-0x1],cl
  430d06:	cmp    cl,0x48
  430d09:	mov    ecx,edi
  430d0b:	je     0x430d29
  430d0d:	cmp    BYTE PTR [ebp-0x1],0x49
  430d11:	je     0x430d29
  430d13:	cmp    BYTE PTR [ebp-0x1],0x4a
  430d17:	je     0x430d29
  430d19:	mov    eax,DWORD PTR [eax]
  430d1b:	test   eax,eax
  430d1d:	jne    0x430d00
  430d1f:	mov    edx,0x83c
  430d24:	jmp    0x4315bb
  430d29:	and    DWORD PTR [ebx+0x18],0x0
  430d2d:	jmp    0x430d39
  430d2f:	mov    ecx,ebx
  430d31:	call   0x431d21
  430d36:	mov    edx,DWORD PTR [ebp-0x8]
  430d39:	mov    eax,DWORD PTR [ebp+0x8]
  430d3c:	mov    ecx,DWORD PTR ds:0x460560
  430d42:	and    DWORD PTR [eax+0x8],0x0
  430d46:	and    DWORD PTR [eax+0x4],0x0
  430d4a:	mov    DWORD PTR [eax],ecx
  430d4c:	mov    ds:0x460560,eax
  430d51:	mov    eax,edx
  430d53:	pop    esi
  430d54:	pop    ebx
  430d55:	pop    edi
  430d56:	leave  
  430d57:	ret    0x4
  430d5a:	mov    BYTE PTR [ebx],0x2
  430d5d:	movzx  eax,BYTE PTR [ecx+0xc]
  430d61:	cmp    eax,0xb
  430d64:	jg     0x430e27
  430d6a:	je     0x430e15
  430d70:	sub    eax,0x7
  430d73:	je     0x430da0
  430d75:	dec    eax
  430d76:	je     0x430db3
  430d78:	dec    eax
  430d79:	je     0x430d8f
  430d7b:	dec    eax
  430d7c:	jne    0x430d39
  430d7e:	mov    ecx,DWORD PTR [ecx+0x4]
  430d81:	call   0x431dea
  430d86:	and    DWORD PTR [ebx+0xc],0x0
  430d8a:	mov    DWORD PTR [ebx+0x8],eax
  430d8d:	jmp    0x430d36
  430d8f:	mov    ecx,DWORD PTR [ecx+0x4]
  430d92:	lea    edx,[ebx+0x8]
  430d95:	call   0x431a40
  430d9a:	test   al,al
  430d9c:	jne    0x430d36
  430d9e:	mov    ecx,edi
  430da0:	mov    eax,DWORD PTR [ecx+0x4]
  430da3:	mov    al,BYTE PTR [eax]
  430da5:	cmp    al,0x8
  430da7:	jbe    0x430dbd
  430da9:	mov    edx,0x824
  430dae:	jmp    0x4315bb
  430db3:	mov    edx,0x802
  430db8:	jmp    0x4315bb
  430dbd:	test   al,al
  430dbf:	jne    0x430dcb
  430dc1:	mov    edx,0x7ff
  430dc6:	jmp    0x4315bb
  430dcb:	and    DWORD PTR [ebx+0x8],0x0
  430dcf:	and    DWORD PTR [ebx+0xc],0x0
  430dd3:	mov    ecx,DWORD PTR [ecx+0x4]
  430dd6:	movzx  eax,BYTE PTR [ecx]
  430dd9:	lea    edx,[ecx+0x1]
  430ddc:	add    eax,ecx
  430dde:	cmp    edx,eax
  430de0:	jmp    0x430e0b
  430de2:	movzx  eax,BYTE PTR [edx]
  430de5:	mov    ecx,DWORD PTR [ebx+0x8]
  430de8:	mov    esi,DWORD PTR [ebx+0xc]
  430deb:	shld   esi,ecx,0x8
  430def:	shl    ecx,0x8
  430df2:	cdq    
  430df3:	add    ecx,eax
  430df5:	adc    esi,edx
  430df7:	mov    edx,DWORD PTR [ebp-0x10]
  430dfa:	mov    DWORD PTR [ebx+0x8],ecx
  430dfd:	mov    DWORD PTR [ebx+0xc],esi
  430e00:	mov    eax,DWORD PTR [edi+0x4]
  430e03:	inc    edx
  430e04:	movzx  ecx,BYTE PTR [eax]
  430e07:	add    ecx,eax
  430e09:	cmp    edx,ecx
  430e0b:	mov    DWORD PTR [ebp-0x10],edx
  430e0e:	jbe    0x430de2
  430e10:	jmp    0x430d36
  430e15:	mov    eax,DWORD PTR [ecx+0x4]
  430e18:	movzx  eax,BYTE PTR [eax]
  430e1b:	cdq    
  430e1c:	mov    DWORD PTR [ebx+0x8],eax
  430e1f:	mov    DWORD PTR [ebx+0xc],edx
  430e22:	jmp    0x430d36
  430e27:	sub    eax,0xc
  430e2a:	je     0x430e87
  430e2c:	dec    eax
  430e2d:	dec    eax
  430e2e:	je     0x430e57
  430e30:	sub    eax,0x12
  430e33:	je     0x430e68
  430e35:	dec    eax
  430e36:	jne    0x430d39
  430e3c:	cmp    DWORD PTR ds:0x45f994,eax
  430e42:	je     0x430e57
  430e44:	mov    ecx,DWORD PTR [ecx+0x4]
  430e47:	mov    eax,ds:0x45f848
  430e4c:	mov    DWORD PTR [ecx],eax
  430e4e:	mov    ecx,edi
  430e50:	mov    eax,DWORD PTR [ecx+0x4]
  430e53:	mov    BYTE PTR [eax-0x1],0xe
  430e57:	mov    eax,DWORD PTR [ecx+0x4]
  430e5a:	mov    eax,DWORD PTR [eax]
  430e5c:	and    DWORD PTR [ebx+0xc],0x0
  430e60:	mov    DWORD PTR [ebx+0x8],eax
  430e63:	jmp    0x430d39
  430e68:	cmp    DWORD PTR ds:0x45f834,0x0
  430e6f:	jne    0x430e7b
  430e71:	mov    edx,0x7f2
  430e76:	jmp    0x4315bb
  430e7b:	call   0x4443ba
  430e80:	mov    esi,eax
  430e82:	mov    DWORD PTR [ebp-0xc],esi
  430e85:	jmp    0x430eeb
  430e87:	mov    eax,DWORD PTR [ecx+0x4]
  430e8a:	movzx  eax,WORD PTR [eax]
  430e8d:	jmp    0x430e1b
  430e8f:	mov    WORD PTR [ebx],0xa0a
  430e94:	jmp    0x430d39
  430e99:	mov    al,BYTE PTR [ecx+0xc]
  430e9c:	cmp    al,0x22
  430e9e:	jne    0x430ea8
  430ea0:	mov    esi,DWORD PTR ds:0x448924
  430ea6:	jmp    0x430eb2
  430ea8:	cmp    al,0x23
  430eaa:	jne    0x430eb7
  430eac:	mov    esi,DWORD PTR ds:0x448914
  430eb2:	mov    DWORD PTR [ebp-0xc],esi
  430eb5:	jmp    0x430ef0
  430eb7:	mov    ecx,DWORD PTR [ecx+0x4]
  430eba:	call   0x445afc
  430ebf:	mov    esi,eax
  430ec1:	mov    DWORD PTR [ebp-0xc],esi
  430ec4:	test   esi,esi
  430ec6:	je     0x431509
  430ecc:	mov    cl,BYTE PTR [esi+0x7]
  430ecf:	test   cl,0x20
  430ed2:	jne    0x431509
  430ed8:	movzx  eax,BYTE PTR [esi+0x6]
  430edc:	cmp    BYTE PTR [eax+0x406514],0x0
  430ee3:	je     0x430eeb
  430ee5:	or     cl,0x80
  430ee8:	mov    BYTE PTR [esi+0x7],cl
  430eeb:	mov    edx,DWORD PTR [ebp-0x8]
  430eee:	mov    ecx,edi
  430ef0:	mov    al,BYTE PTR [edx+0xc]
  430ef3:	mov    BYTE PTR [ebp-0x1],al
  430ef6:	movzx  eax,al
  430ef9:	cmp    BYTE PTR [eax+0x405598],0x1
  430f00:	jne    0x430f77
  430f02:	cmp    BYTE PTR ds:0x44f582,0x31
  430f09:	mov    al,BYTE PTR [ebp-0x1]
  430f0c:	movzx  edx,al
  430f0f:	mov    DWORD PTR [ebp-0x10],edx
  430f12:	jne    0x430f19
  430f14:	xor    edx,edx
  430f16:	mov    DWORD PTR [ebp-0x10],edx
  430f19:	push   0x4f
  430f1b:	pop    eax
  430f1c:	push   0x4e
  430f1e:	pop    ecx
  430f1f:	test   dx,dx
  430f22:	je     0x430fde
  430f28:	cmp    dx,ax
  430f2b:	je     0x430f32
  430f2d:	cmp    dx,cx
  430f30:	jne    0x430f41
  430f32:	mov    al,BYTE PTR [esi+0x6]
  430f35:	cmp    al,0xe
  430f37:	je     0x430f41
  430f39:	cmp    al,0xd
  430f3b:	jne    0x431573
  430f41:	mov    eax,ds:0x460560
  430f46:	and    DWORD PTR [edi+0x8],0x0
  430f4a:	and    DWORD PTR [edi+0x4],0x0
  430f4e:	mov    DWORD PTR [edi],eax
  430f50:	mov    eax,DWORD PTR [ebp-0x8]
  430f53:	mov    ecx,eax
  430f55:	mov    eax,DWORD PTR [eax]
  430f57:	mov    DWORD PTR ds:0x460560,edi
  430f5d:	xor    edi,edi
  430f5f:	mov    DWORD PTR [ecx+0x8],edi
  430f62:	mov    DWORD PTR [ebp+0x8],ecx
  430f65:	mov    DWORD PTR [ebp-0x8],eax
  430f68:	cmp    DWORD PTR [eax+0x8],edi
  430f6b:	je     0x430fd9
  430f6d:	mov    edx,0x7e0
  430f72:	jmp    0x4315bb
  430f77:	cmp    BYTE PTR [ebp-0x1],0x31
  430f7b:	jne    0x430f14
  430f7d:	mov    eax,DWORD PTR [edx]
  430f7f:	movzx  eax,BYTE PTR [eax+0xc]
  430f83:	cmp    BYTE PTR [eax+0x405598],0x1
  430f8a:	jne    0x430f14
  430f8c:	cmp    BYTE PTR ds:0x44f582,0x31
  430f93:	je     0x430f14
  430f99:	and    DWORD PTR [ecx+0x8],0x0
  430f9d:	and    DWORD PTR [ecx+0x4],0x0
  430fa1:	mov    eax,ds:0x460560
  430fa6:	mov    DWORD PTR [ecx],eax
  430fa8:	mov    eax,ds:0x45f83c
  430fad:	mov    edi,edx
  430faf:	mov    edx,DWORD PTR [edx]
  430fb1:	and    DWORD PTR [edi+0x8],0x0
  430fb5:	mov    DWORD PTR ds:0x460560,ecx
  430fbb:	mov    ecx,DWORD PTR [edx+0x8]
  430fbe:	mov    DWORD PTR [ebp-0x8],edx
  430fc1:	mov    DWORD PTR [ecx],eax
  430fc3:	and    DWORD PTR [edx+0x8],0x0
  430fc7:	movzx  edx,BYTE PTR [edx+0xc]
  430fcb:	mov    DWORD PTR [ebp+0x8],edi
  430fce:	mov    DWORD PTR ds:0x45f83c,ecx
  430fd4:	jmp    0x430f16
  430fd9:	mov    DWORD PTR [eax+0x8],ebx
  430fdc:	jmp    0x430fe3
  430fde:	mov    ecx,DWORD PTR [ebp+0x8]
  430fe1:	xor    edi,edi
  430fe3:	movzx  eax,BYTE PTR [esi+0x6]
  430fe7:	cmp    eax,0xb
  430fea:	jg     0x431256
  430ff0:	je     0x4311d5
  430ff6:	test   eax,eax
  430ff8:	js     0x431270
  430ffe:	cmp    eax,0x3
  431001:	jle    0x431294
  431007:	cmp    eax,0x8
  43100a:	je     0x4310f9
  431010:	cmp    eax,0x9
  431013:	je     0x43106a
  431015:	cmp    eax,0xa
  431018:	jne    0x431270
  43101e:	test   BYTE PTR [esi+0x7],0x20
  431022:	je     0x43102a
  431024:	push   esi
  431025:	jmp    0x43134a
  43102a:	mov    BYTE PTR [ebx],0x4
  43102d:	mov    eax,DWORD PTR [esi+0x1c]
  431030:	mov    al,BYTE PTR [eax+0x10]
  431033:	mov    BYTE PTR [ebx+0x1],al
  431036:	mov    eax,DWORD PTR [esi+0x1c]
  431039:	mov    DWORD PTR [ebx+0x18],eax
  43103c:	cmp    dx,0x44
  431040:	je     0x4315a8
  431046:	cmp    dx,0x45
  43104a:	je     0x4315a8
  431050:	cmp    dx,0x42
  431054:	je     0x431060
  431056:	cmp    dx,0x43
  43105a:	jne    0x430d36
  431060:	mov    edx,0x85f
  431065:	jmp    0x4315bb
  43106a:	or     BYTE PTR [esi+0x7],0x40
  43106e:	test   dx,dx
  431071:	je     0x4310b4
  431073:	and    DWORD PTR [ebx+0x4],0xf0000000
  43107a:	mov    BYTE PTR [ebx],0x2
  43107d:	cmp    dx,0x42
  431081:	jne    0x431092
  431083:	mov    DWORD PTR [ebx+0x8],0x1
  43108a:	mov    DWORD PTR [ebx+0xc],edi
  43108d:	jmp    0x430d36
  431092:	cmp    dx,0x43
  431096:	jne    0x4310a0
  431098:	mov    eax,DWORD PTR [esi+0x28]
  43109b:	mov    DWORD PTR [ebx+0x8],eax
  43109e:	jmp    0x43108a
  4310a0:	movzx  eax,WORD PTR [esi+0x2c]
  4310a4:	cmp    dx,0x45
  4310a8:	jne    0x430e1b
  4310ae:	imul   eax,DWORD PTR [esi+0x28]
  4310b2:	jmp    0x43109b
  4310b4:	mov    BYTE PTR [ebx],0x1
  4310b7:	mov    al,BYTE PTR [esi+0x2c]
  4310ba:	mov    BYTE PTR [ebx+0x1],al
  4310bd:	mov    eax,DWORD PTR [esi+0x20]
  4310c0:	mov    DWORD PTR [ebx+0x8],eax
  4310c3:	mov    ax,WORD PTR [ebx+0x2]
  4310c7:	mov    ecx,0xfff5
  4310cc:	and    ax,cx
  4310cf:	mov    ecx,0x805
  4310d4:	or     ax,cx
  4310d7:	mov    WORD PTR [ebx+0x2],ax
  4310db:	mov    eax,DWORD PTR [ebx+0x4]
  4310de:	and    eax,0xf0001800
  4310e3:	or     eax,0x1800
  4310e8:	mov    DWORD PTR [ebx+0x4],eax
  4310eb:	mov    DWORD PTR [ebx+0xc],edi
  4310ee:	mov    eax,DWORD PTR [esi+0x1c]
  4310f1:	mov    DWORD PTR [ebx+0x18],eax
  4310f4:	jmp    0x430d2f
  4310f9:	test   BYTE PTR [esi+0x7],0x40
  4310fd:	je     0x43114d
  4310ff:	cmp    DWORD PTR ds:0x45f994,0x0
  431106:	je     0x43114d
  431108:	cmp    BYTE PTR ds:0x45f692,0x0
  43110f:	je     0x43114d
  431111:	and    DWORD PTR ds:0x463864,0x0
  431118:	push   0x8
  43111a:	pop    edx
  43111b:	mov    ecx,0x463864
  431120:	mov    BYTE PTR ds:0x463868,0x0
  431127:	call   0x4458d0
  43112c:	mov    cl,BYTE PTR [esi+0x7]
  43112f:	mov    edx,eax
  431131:	and    cl,0xbf
  431134:	mov    BYTE PTR [edx+0x7],cl
  431137:	push   0x6
  431139:	add    esi,0x18
  43113c:	lea    edi,[edx+0x18]
  43113f:	pop    ecx
  431140:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431142:	mov    edi,DWORD PTR [ebp+0x8]
  431145:	mov    esi,DWORD PTR [ebp-0xc]
  431148:	mov    eax,DWORD PTR [edi+0x4]
  43114b:	mov    DWORD PTR [eax],edx
  43114d:	mov    eax,DWORD PTR [esi+0x2c]
  431150:	test   eax,eax
  431152:	je     0x431167
  431154:	cmp    eax,0xffffffff
  431157:	je     0x431167
  431159:	push   0x8
  43115b:	pop    ecx
  43115c:	mov    esi,eax
  43115e:	mov    edi,ebx
  431160:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431162:	jmp    0x430d36
  431167:	mov    BYTE PTR [ebx],0x2
  43116a:	mov    eax,DWORD PTR [esi+0x20]
  43116d:	mov    DWORD PTR [ebx+0x8],eax
  431170:	mov    eax,DWORD PTR [esi+0x24]
  431173:	mov    DWORD PTR [ebx+0xc],eax
  431176:	cmp    DWORD PTR [esi+0x2c],0x0
  43117a:	je     0x4311a1
  43117c:	mov    eax,DWORD PTR [ebx+0x4]
  43117f:	mov    ecx,DWORD PTR [ebx+0x8]
  431182:	and    eax,0xf0008000
  431187:	or     eax,0x8000
  43118c:	mov    DWORD PTR [ebx+0x4],eax
  43118f:	mov    eax,DWORD PTR [ebx+0xc]
  431192:	neg    ecx
  431194:	adc    eax,0x0
  431197:	neg    eax
  431199:	mov    DWORD PTR [ebx+0x8],ecx
  43119c:	mov    DWORD PTR [ebx+0xc],eax
  43119f:	jmp    0x4311a8
  4311a1:	and    DWORD PTR [ebx+0x4],0xf0000000
  4311a8:	test   BYTE PTR [esi+0x7],0x2
  4311ac:	je     0x430d36
  4311b2:	or     DWORD PTR [ebx+0x4],0x4100
  4311b9:	test   BYTE PTR [esi+0x8],0x4
  4311bd:	mov    edx,DWORD PTR [ebp-0x8]
  4311c0:	je     0x4311cd
  4311c2:	mov    eax,DWORD PTR [esi+0x28]
  4311c5:	mov    DWORD PTR [ebx+0x10],eax
  4311c8:	jmp    0x430d39
  4311cd:	mov    DWORD PTR [ebx+0x10],esi
  4311d0:	jmp    0x430d39
  4311d5:	and    DWORD PTR [ebx+0x4],0xf0000000
  4311dc:	mov    BYTE PTR [ebx],0x2
  4311df:	cmp    dx,0x44
  4311e3:	jne    0x4311f8
  4311e5:	movzx  ecx,WORD PTR [esi+0x28]
  4311e9:	mov    eax,DWORD PTR [esi+0x1c]
  4311ec:	imul   ecx,DWORD PTR [eax+0x10]
  4311f0:	mov    DWORD PTR [ebx+0x8],ecx
  4311f3:	jmp    0x43108a
  4311f8:	cmp    dx,0x45
  4311fc:	jne    0x431204
  4311fe:	movzx  ecx,WORD PTR [esi+0x2a]
  431202:	jmp    0x4311e9
  431204:	cmp    dx,0x42
  431208:	jne    0x431213
  43120a:	movzx  eax,WORD PTR [esi+0x28]
  43120e:	jmp    0x430e1b
  431213:	cmp    dx,0x43
  431217:	jne    0x431222
  431219:	movzx  eax,WORD PTR [esi+0x2a]
  43121d:	jmp    0x430e1b
  431222:	movzx  eax,WORD PTR [esi+0x22]
  431226:	cmp    ax,WORD PTR ds:0x45f98c
  43122d:	je     0x431238
  43122f:	or     eax,0x4000
  431234:	mov    WORD PTR [esi+0x22],ax
  431238:	mov    eax,DWORD PTR [ebx+0x4]
  43123b:	and    eax,0xf0000080
  431240:	or     eax,0x80
  431245:	mov    BYTE PTR [ebx],0x5
  431248:	mov    DWORD PTR [ebx+0x4],eax
  43124b:	mov    eax,DWORD PTR [esi+0x24]
  43124e:	mov    DWORD PTR [ebx+0x8],eax
  431251:	jmp    0x4310eb
  431256:	sub    eax,0xc
  431259:	je     0x4314d9
  43125f:	dec    eax
  431260:	je     0x431472
  431266:	dec    eax
  431267:	je     0x43140f
  43126d:	dec    eax
  43126e:	je     0x43127b
  431270:	push   esi
  431271:	mov    edx,0x864
  431276:	jmp    0x43134f
  43127b:	mov    al,BYTE PTR [esi+0x1c]
  43127e:	test   al,al
  431280:	je     0x431310
  431286:	cmp    al,0x1
  431288:	je     0x4312e9
  43128a:	sub    al,0x2
  43128c:	cmp    al,0x1
  43128e:	jbe    0x431344
  431294:	cmp    BYTE PTR ds:0x45faaf,0x0
  43129b:	je     0x4312a6
  43129d:	mov    eax,0x8000
  4312a2:	or     WORD PTR [esi+0x2c],ax
  4312a6:	test   dx,dx
  4312a9:	je     0x431401
  4312af:	and    DWORD PTR [ebx+0x4],0xf0000000
  4312b6:	push   0x2
  4312b8:	pop    ecx
  4312b9:	mov    BYTE PTR [ebx],cl
  4312bb:	cmp    dx,0x42
  4312bf:	jne    0x431359
  4312c5:	mov    eax,0x1000
  4312ca:	or     WORD PTR [esi+0x2c],ax
  4312ce:	test   BYTE PTR [esi+0x7],cl
  4312d1:	jne    0x431083
  4312d7:	test   BYTE PTR [esi+0x2c],0x1
  4312db:	jne    0x431083
  4312e1:	mov    eax,DWORD PTR [esi+0x30]
  4312e4:	jmp    0x43109b
  4312e9:	mov    eax,ds:0x448924
  4312ee:	mov    esi,DWORD PTR [eax+0x18]
  4312f1:	test   esi,esi
  4312f3:	je     0x431344
  4312f5:	cmp    BYTE PTR ds:0x44899d,0x0
  4312fc:	je     0x43130a
  4312fe:	mov    ax,ds:0x45f990
  431304:	cmp    ax,WORD PTR [esi+0x30]
  431308:	jne    0x431344
  43130a:	or     BYTE PTR [esi+0x7],0x40
  43130e:	jmp    0x431294
  431310:	mov    eax,ds:0x448914
  431315:	mov    esi,DWORD PTR [eax+0x18]
  431318:	or     BYTE PTR [esi+0x7],0x40
  43131c:	cmp    BYTE PTR ds:0x44899d,0x0
  431323:	je     0x431294
  431329:	mov    eax,ds:0x448914
  43132e:	mov    ecx,DWORD PTR [eax+0x18]
  431331:	mov    ax,ds:0x45f990
  431337:	cmp    ax,WORD PTR [ecx+0x30]
  43133b:	je     0x431294
  431341:	mov    ecx,DWORD PTR [ebp+0x8]
  431344:	push   DWORD PTR ds:0x448904
  43134a:	mov    edx,0x7d6
  43134f:	call   0x431b61
  431354:	jmp    0x430d53
  431359:	cmp    dx,0x43
  43135d:	jne    0x43138e
  43135f:	mov    eax,0x2000
  431364:	or     WORD PTR [esi+0x2c],ax
  431368:	xor    eax,eax
  43136a:	inc    eax
  43136b:	test   BYTE PTR [esi+0x2c],al
  43136e:	jne    0x4314fc
  431374:	cmp    BYTE PTR [esi+0x6],cl
  431377:	jne    0x431381
  431379:	mov    eax,DWORD PTR [esi+0x34]
  43137c:	jmp    0x43109b
  431381:	mov    edx,DWORD PTR [ebp-0x8]
  431384:	test   BYTE PTR [esi+0x7],cl
  431387:	jne    0x4313f6
  431389:	mov    eax,DWORD PTR [esi+0x34]
  43138c:	jmp    0x4313f6
  43138e:	cmp    dx,0x45
  431392:	jne    0x4313c8
  431394:	mov    eax,0x2000
  431399:	or     WORD PTR [esi+0x2c],ax
  43139d:	test   BYTE PTR [esi+0x2c],0x1
  4313a1:	jne    0x4314fc
  4313a7:	cmp    BYTE PTR [esi+0x6],cl
  4313aa:	jne    0x4313b4
  4313ac:	mov    eax,DWORD PTR [esi+0x34]
  4313af:	jmp    0x4310ae
  4313b4:	mov    eax,DWORD PTR [esi+0x24]
  4313b7:	mov    edx,DWORD PTR [ebp-0x8]
  4313ba:	mov    eax,DWORD PTR [eax+0x10]
  4313bd:	test   BYTE PTR [esi+0x7],cl
  4313c0:	jne    0x4313f6
  4313c2:	imul   eax,DWORD PTR [esi+0x34]
  4313c6:	jmp    0x4313f6
  4313c8:	mov    eax,0x1000
  4313cd:	or     WORD PTR [esi+0x2c],ax
  4313d1:	test   BYTE PTR [esi+0x2c],0x1
  4313d5:	je     0x4313e4
  4313d7:	mov    ecx,DWORD PTR [esi+0x24]
  4313da:	call   0x431ba0
  4313df:	jmp    0x43109b
  4313e4:	mov    eax,DWORD PTR [esi+0x24]
  4313e7:	mov    edx,DWORD PTR [ebp-0x8]
  4313ea:	mov    eax,DWORD PTR [eax+0x10]
  4313ed:	test   BYTE PTR [esi+0x7],cl
  4313f0:	jne    0x4313f6
  4313f2:	imul   eax,DWORD PTR [esi+0x30]
  4313f6:	mov    DWORD PTR [ebx+0x8],eax
  4313f9:	mov    DWORD PTR [ebx+0xc],edi
  4313fc:	jmp    0x430d39
  431401:	mov    edx,ebx
  431403:	mov    ecx,esi
  431405:	call   0x4315cc
  43140a:	jmp    0x430d36
  43140f:	and    DWORD PTR [ebx+0x4],0xf0000000
  431416:	movsx  eax,dx
  431419:	mov    BYTE PTR [ebx],0x2
  43141c:	test   eax,eax
  43141e:	je     0x431469
  431420:	cmp    eax,0x41
  431423:	jle    0x430d36
  431429:	cmp    eax,0x45
  43142c:	jle    0x431060
  431432:	cmp    eax,0x4e
  431435:	je     0x431449
  431437:	cmp    eax,0x4f
  43143a:	jne    0x430d36
  431440:	movzx  eax,BYTE PTR [esi+0x1e]
  431444:	jmp    0x430e1b
  431449:	movzx  ecx,BYTE PTR [esi+0x1e]
  43144d:	or     eax,0xffffffff
  431450:	or     edx,eax
  431452:	call   0x447510
  431457:	movzx  ecx,BYTE PTR [esi+0x1f]
  43145b:	not    eax
  43145d:	not    edx
  43145f:	call   0x447510
  431464:	jmp    0x430e1c
  431469:	movzx  eax,BYTE PTR [esi+0x1f]
  43146d:	jmp    0x430e1b
  431472:	and    DWORD PTR [ebx+0x4],0xf0000000
  431479:	movsx  eax,dx
  43147c:	mov    BYTE PTR [ebx],0x2
  43147f:	test   eax,eax
  431481:	je     0x4314d1
  431483:	cmp    eax,0x41
  431486:	jle    0x430d36
  43148c:	cmp    eax,0x43
  43148f:	jle    0x431060
  431495:	cmp    eax,0x45
  431498:	jle    0x4314c8
  43149a:	cmp    eax,0x4e
  43149d:	je     0x4314b1
  43149f:	cmp    eax,0x4f
  4314a2:	jne    0x430d36
  4314a8:	movzx  eax,BYTE PTR [esi+0x22]
  4314ac:	jmp    0x430e1b
  4314b1:	movzx  ecx,BYTE PTR [esi+0x22]
  4314b5:	or     eax,0xffffffff
  4314b8:	or     edx,eax
  4314ba:	call   0x447510
  4314bf:	not    eax
  4314c1:	not    edx
  4314c3:	jmp    0x430e1c
  4314c8:	movzx  eax,BYTE PTR [esi+0x23]
  4314cc:	jmp    0x430e1b
  4314d1:	mov    BYTE PTR [ebx],0x4
  4314d4:	jmp    0x4310ee
  4314d9:	mov    BYTE PTR [ebx],0x4
  4314dc:	mov    eax,DWORD PTR [esi+0x18]
  4314df:	mov    ecx,ebx
  4314e1:	mov    DWORD PTR [ebx+0x18],eax
  4314e4:	call   0x431d21
  4314e9:	mov    eax,DWORD PTR [ebp-0x10]
  4314ec:	cmp    ax,0x42
  4314f0:	je     0x4314fc
  4314f2:	cmp    ax,0x43
  4314f6:	jne    0x430d36
  4314fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4314ff:	mov    edx,0x85f
  431504:	jmp    0x4315bb
  431509:	push   DWORD PTR [edi+0x4]
  43150c:	mov    ecx,edi
  43150e:	call   0x431b2a
  431513:	jmp    0x430d53
  431518:	mov    BYTE PTR [ebx],0x4
  43151b:	mov    dl,BYTE PTR [ecx+0xc]
  43151e:	mov    al,dl
  431520:	cmp    al,0x26
  431522:	jb     0x431543
  431524:	cmp    al,0x27
  431526:	jbe    0x431530
  431528:	cmp    al,0x28
  43152a:	jne    0x431543
  43152c:	mov    BYTE PTR [ecx+0xc],0x26
  431530:	xor    eax,eax
  431532:	cmp    BYTE PTR [ecx+0xc],0x27
  431536:	sete   al
  431539:	imul   eax,eax,0x1c
  43153c:	add    eax,0x4493c4
  431541:	jmp    0x431551
  431543:	movzx  eax,dl
  431546:	sub    eax,0xe
  431549:	imul   eax,eax,0x1c
  43154c:	add    eax,0x449418
  431551:	mov    ecx,ebx
  431553:	mov    DWORD PTR [ebx+0x18],eax
  431556:	call   0x431d21
  43155b:	mov    ecx,DWORD PTR [ebp-0x8]
  43155e:	mov    al,BYTE PTR [ecx+0xc]
  431561:	cmp    al,0x42
  431563:	jb     0x4315c5
  431565:	cmp    al,0x43
  431567:	jbe    0x4315b4
  431569:	cmp    al,0x45
  43156b:	jbe    0x43157a
  43156d:	sub    al,0x4e
  43156f:	cmp    al,0x1
  431571:	ja     0x4315c5
  431573:	mov    edx,0x7e3
  431578:	jmp    0x4315b9
  43157a:	mov    eax,ds:0x460560
  43157f:	xor    edx,edx
  431581:	mov    DWORD PTR [edi+0x8],edx
  431584:	mov    DWORD PTR [edi+0x4],edx
  431587:	mov    DWORD PTR [edi],eax
  431589:	mov    DWORD PTR ds:0x460560,edi
  43158f:	mov    edi,ecx
  431591:	mov    ecx,DWORD PTR [ecx]
  431593:	mov    DWORD PTR [ebp+0x8],edi
  431596:	mov    DWORD PTR [ebp-0x8],ecx
  431599:	cmp    DWORD PTR [ecx+0x8],edx
  43159c:	je     0x4315a5
  43159e:	mov    edx,0x7e0
  4315a3:	jmp    0x4315b9
  4315a5:	mov    DWORD PTR [ecx+0x8],ebx
  4315a8:	mov    ecx,ebx
  4315aa:	call   0x431bbe
  4315af:	jmp    0x430d36
  4315b4:	mov    edx,0x85f
  4315b9:	mov    ecx,edi
  4315bb:	call   0x431aff
  4315c0:	jmp    0x430d53
  4315c5:	mov    edx,ecx
  4315c7:	jmp    0x430d39
  4315cc:	push   esi
  4315cd:	mov    esi,edx
  4315cf:	mov    edx,ecx
  4315d1:	mov    ecx,DWORD PTR [edx+0x24]
  4315d4:	test   BYTE PTR [ecx+0xe],0x8
  4315d8:	je     0x4315ed
  4315da:	mov    eax,DWORD PTR [ecx+0x14]
  4315dd:	cmp    BYTE PTR [eax+0x6],0xd
  4315e1:	jne    0x4315ed
  4315e3:	mov    ecx,DWORD PTR [ecx+0x10]
  4315e6:	call   0x444865
  4315eb:	mov    ecx,eax
  4315ed:	test   BYTE PTR [edx+0x8],0x4
  4315f1:	je     0x4315fb
  4315f3:	mov    eax,DWORD PTR [edx+0x28]
  4315f6:	mov    DWORD PTR [esi+0x10],eax
  4315f9:	jmp    0x4315fe
  4315fb:	mov    DWORD PTR [esi+0x10],edx
  4315fe:	mov    DWORD PTR [esi+0x18],ecx
  431601:	mov    ecx,esi
  431603:	call   0x431d21
  431608:	or     DWORD PTR [esi+0x4],0x900
  43160f:	mov    BYTE PTR [esi],0x1
  431612:	pop    esi
  431613:	ret    
  431614:	xor    eax,eax
  431616:	ret    0x4
  431619:	push   ebp
  43161a:	mov    ebp,esp
  43161c:	push   ecx
  43161d:	push   ecx
  43161e:	push   ebx
  43161f:	push   esi
  431620:	mov    esi,DWORD PTR [ebp+0x8]
  431623:	xor    ebx,ebx
  431625:	cmp    DWORD PTR [esi+0x8],ebx
  431628:	je     0x43163b
  43162a:	mov    edx,0x7e1
  43162f:	mov    ecx,esi
  431631:	call   0x431aff
  431636:	jmp    0x431713
  43163b:	mov    eax,ds:0x460560
  431640:	push   edi
  431641:	mov    edi,DWORD PTR [esi]
  431643:	mov    DWORD PTR [esi+0x8],ebx
  431646:	mov    DWORD PTR [esi+0x4],ebx
  431649:	mov    DWORD PTR [esi],eax
  43164b:	mov    edx,DWORD PTR [edi+0x8]
  43164e:	mov    DWORD PTR ds:0x460560,esi
  431654:	test   edx,edx
  431656:	jne    0x431664
  431658:	mov    edx,0x7e0
  43165d:	mov    ecx,edi
  43165f:	jmp    0x43172b
  431664:	mov    ecx,DWORD PTR [edi]
  431666:	mov    DWORD PTR [edi+0x8],ebx
  431669:	mov    DWORD PTR [edi+0x4],ebx
  43166c:	mov    DWORD PTR [edi],esi
  43166e:	mov    DWORD PTR ds:0x460560,edi
  431674:	cmp    DWORD PTR [ecx+0x8],ebx
  431677:	je     0x431690
  431679:	mov    eax,ds:0x45f83c
  43167e:	mov    DWORD PTR [edx],eax
  431680:	mov    DWORD PTR ds:0x45f83c,edx
  431686:	mov    edx,0x7e1
  43168b:	jmp    0x43172b
  431690:	cmp    BYTE PTR [ecx+0xc],0xab
  431694:	jne    0x43170d
  431696:	mov    eax,ecx
  431698:	mov    ecx,DWORD PTR [ecx]
  43169a:	mov    DWORD PTR [eax+0x8],ebx
  43169d:	mov    DWORD PTR [eax+0x4],ebx
  4316a0:	mov    DWORD PTR [eax],edi
  4316a2:	mov    edi,DWORD PTR [edx+0x4]
  4316a5:	mov    esi,DWORD PTR [edx+0x8]
  4316a8:	mov    ds:0x460560,eax
  4316ad:	mov    eax,DWORD PTR [edx+0xc]
  4316b0:	test   edi,0x8000
  4316b6:	je     0x4316be
  4316b8:	neg    esi
  4316ba:	adc    eax,ebx
  4316bc:	neg    eax
  4316be:	cmp    BYTE PTR [edx],0x2
  4316c1:	mov    DWORD PTR [ebp-0x4],eax
  4316c4:	movzx  esi,si
  4316c7:	jne    0x431719
  4316c9:	test   edi,0x100
  4316cf:	jne    0x431719
  4316d1:	cmp    esi,0x7
  4316d4:	ja     0x431719
  4316d6:	mov    ax,WORD PTR [edx+0x2]
  4316da:	mov    ebx,0xc800
  4316df:	and    ax,bx
  4316e2:	and    esi,0xf
  4316e5:	or     ax,si
  4316e8:	mov    esi,0x800
  4316ed:	or     ax,si
  4316f0:	and    edi,0xf0000000
  4316f6:	mov    WORD PTR [edx+0x2],ax
  4316fa:	xor    eax,eax
  4316fc:	mov    WORD PTR [edx],0xa0a
  431701:	mov    DWORD PTR [edx+0x4],edi
  431704:	mov    DWORD PTR [edx+0x10],eax
  431707:	mov    DWORD PTR [edx+0x14],eax
  43170a:	mov    DWORD PTR [edx+0x18],eax
  43170d:	mov    DWORD PTR [ecx+0x8],edx
  431710:	mov    eax,ecx
  431712:	pop    edi
  431713:	pop    esi
  431714:	pop    ebx
  431715:	leave  
  431716:	ret    0x4
  431719:	mov    eax,ds:0x45f83c
  43171e:	mov    DWORD PTR [edx],eax
  431720:	mov    DWORD PTR ds:0x45f83c,edx
  431726:	mov    edx,0x843
  43172b:	call   0x431aff
  431730:	jmp    0x431712
  431732:	push   ebp
  431733:	mov    ebp,esp
  431735:	mov    ecx,DWORD PTR [ebp+0x8]
  431738:	xor    edx,edx
  43173a:	cmp    DWORD PTR [ecx+0x8],edx
  43173d:	je     0x43174e
  43173f:	mov    edx,0x7e1
  431744:	call   0x431aff
  431749:	jmp    0x431820
  43174e:	mov    eax,ds:0x460560
  431753:	push   esi
  431754:	push   edi
  431755:	mov    edi,DWORD PTR [ecx]
  431757:	mov    DWORD PTR [ecx+0x8],edx
  43175a:	mov    DWORD PTR [ecx+0x4],edx
  43175d:	mov    DWORD PTR [ecx],eax
  43175f:	mov    esi,DWORD PTR [edi+0x8]
  431762:	mov    DWORD PTR ds:0x460560,ecx
  431768:	test   esi,esi
  43176a:	jne    0x43177d
  43176c:	mov    edx,0x7e0
  431771:	mov    ecx,edi
  431773:	call   0x431aff
  431778:	jmp    0x43181e
  43177d:	push   ebx
  43177e:	mov    ebx,DWORD PTR [edi]
  431780:	mov    DWORD PTR [edi+0x8],edx
  431783:	mov    DWORD PTR [edi+0x4],edx
  431786:	mov    DWORD PTR [edi],ecx
  431788:	mov    al,BYTE PTR [esi]
  43178a:	mov    DWORD PTR ds:0x460560,edi
  431790:	cmp    al,0x2
  431792:	jne    0x4317c8
  431794:	mov    edx,DWORD PTR [esi+0x4]
  431797:	test   edx,0x8000
  43179d:	je     0x4317b2
  43179f:	mov    ecx,DWORD PTR [esi+0x8]
  4317a2:	mov    eax,DWORD PTR [esi+0xc]
  4317a5:	neg    ecx
  4317a7:	adc    eax,0x0
  4317aa:	neg    eax
  4317ac:	mov    DWORD PTR [esi+0x8],ecx
  4317af:	mov    DWORD PTR [esi+0xc],eax
  4317b2:	and    edx,0xffff0fff
  4317b8:	or     edx,0x800
  4317be:	mov    WORD PTR [esi],0x1
  4317c3:	mov    DWORD PTR [esi+0x4],edx
  4317c6:	jmp    0x4317ec
  4317c8:	cmp    al,0x3
  4317ca:	je     0x4317d0
  4317cc:	cmp    al,0x6
  4317ce:	jb     0x4317e7
  4317d0:	mov    ecx,esi
  4317d2:	call   0x431d48
  4317d7:	test   eax,eax
  4317d9:	je     0x4317e7
  4317db:	mov    edx,DWORD PTR ds:0x45f83c
  4317e1:	mov    DWORD PTR [esi],edx
  4317e3:	mov    edx,eax
  4317e5:	jmp    0x431810
  4317e7:	cmp    BYTE PTR [esi],0x1
  4317ea:	jne    0x431804
  4317ec:	mov    eax,DWORD PTR [esi+0x4]
  4317ef:	mov    ecx,0x1000
  4317f4:	test   ecx,eax
  4317f6:	jne    0x431804
  4317f8:	or     eax,ecx
  4317fa:	mov    DWORD PTR [esi+0x4],eax
  4317fd:	mov    DWORD PTR [ebx+0x8],esi
  431800:	mov    eax,ebx
  431802:	jmp    0x43181d
  431804:	mov    eax,ds:0x45f83c
  431809:	mov    edx,0x7d9
  43180e:	mov    DWORD PTR [esi],eax
  431810:	mov    ecx,ebx
  431812:	mov    DWORD PTR ds:0x45f83c,esi
  431818:	call   0x431aff
  43181d:	pop    ebx
  43181e:	pop    edi
  43181f:	pop    esi
  431820:	pop    ebp
  431821:	ret    0x4
  431824:	push   ebp
  431825:	mov    ebp,esp
  431827:	push   ecx
  431828:	push   ebx
  431829:	push   esi
  43182a:	mov    esi,DWORD PTR [ebp+0x8]
  43182d:	push   edi
  43182e:	mov    ebx,DWORD PTR [esi]
  431830:	xor    edi,edi
  431832:	cmp    DWORD PTR [ebx+0x8],edi
  431835:	jne    0x43190f
  43183b:	cmp    BYTE PTR [ebx+0xd],0x14
  43183f:	jne    0x43190f
  431845:	mov    ecx,DWORD PTR [ebx+0x4]
  431848:	call   0x445afc
  43184d:	mov    DWORD PTR [ebp+0x8],eax
  431850:	test   eax,eax
  431852:	jne    0x431863
  431854:	push   DWORD PTR [ebx+0x4]
  431857:	mov    ecx,esi
  431859:	call   0x431b2a
  43185e:	jmp    0x43191b
  431863:	mov    cl,BYTE PTR [eax+0x6]
  431866:	cmp    cl,0xd
  431869:	je     0x43188c
  43186b:	cmp    cl,0x5
  43186e:	je     0x43187a
  431870:	mov    edx,0x7e4
  431875:	cmp    cl,0x6
  431878:	jne    0x43187f
  43187a:	mov    edx,0x87b
  43187f:	push   eax
  431880:	mov    ecx,esi
  431882:	call   0x431b61
  431887:	jmp    0x43191b
  43188c:	mov    eax,DWORD PTR [esi+0x4]
  43188f:	mov    DWORD PTR [ebp-0x4],eax
  431892:	lea    ecx,[eax+0x1]
  431895:	movzx  eax,BYTE PTR [eax]
  431898:	test   eax,eax
  43189a:	jle    0x4318b2
  43189c:	cmp    BYTE PTR [ecx],0xa
  43189f:	je     0x4318a7
  4318a1:	dec    eax
  4318a2:	inc    ecx
  4318a3:	test   eax,eax
  4318a5:	jg     0x43189c
  4318a7:	test   eax,eax
  4318a9:	jle    0x4318b2
  4318ab:	mov    edx,0x7e5
  4318b0:	jmp    0x431914
  4318b2:	mov    eax,ds:0x460560
  4318b7:	mov    DWORD PTR [esi+0x8],edi
  4318ba:	mov    DWORD PTR [esi+0x4],edi
  4318bd:	mov    DWORD PTR [esi],eax
  4318bf:	mov    edi,DWORD PTR [ebx]
  4318c1:	mov    DWORD PTR ds:0x460560,esi
  4318c7:	call   0x431f11
  4318cc:	mov    edx,DWORD PTR [ebp-0x4]
  4318cf:	mov    esi,eax
  4318d1:	mov    eax,DWORD PTR [ebp+0x8]
  4318d4:	mov    DWORD PTR [edi+0x8],esi
  4318d7:	mov    BYTE PTR [esi],0x2
  4318da:	mov    cl,BYTE PTR [eax+0x23]
  4318dd:	and    DWORD PTR [esi+0x4],0xf0000000
  4318e4:	mov    BYTE PTR [esi+0x1],cl
  4318e7:	dec    edx
  4318e8:	mov    ecx,eax
  4318ea:	call   0x42723d
  4318ef:	mov    ecx,DWORD PTR ds:0x460560
  4318f5:	mov    DWORD PTR [esi+0x8],eax
  4318f8:	xor    eax,eax
  4318fa:	mov    DWORD PTR [esi+0xc],eax
  4318fd:	mov    DWORD PTR [ebx+0x8],eax
  431900:	mov    DWORD PTR [ebx+0x4],eax
  431903:	mov    DWORD PTR [ebx],ecx
  431905:	mov    DWORD PTR ds:0x460560,ebx
  43190b:	mov    eax,edi
  43190d:	jmp    0x43191b
  43190f:	mov    edx,0x7e1
  431914:	mov    ecx,esi
  431916:	call   0x431aff
  43191b:	pop    edi
  43191c:	pop    esi
  43191d:	pop    ebx
  43191e:	leave  
  43191f:	ret    0x4
  431922:	push   esi
  431923:	mov    esi,ecx
  431925:	test   esi,esi
  431927:	jne    0x431936
  431929:	mov    edx,0x7d9
  43192e:	xor    ecx,ecx
  431930:	pop    esi
  431931:	jmp    0x431aff
  431936:	movzx  eax,BYTE PTR [esi]
  431939:	dec    eax
  43193a:	je     0x4319b6
  43193c:	dec    eax
  43193d:	je     0x431992
  43193f:	dec    eax
  431940:	dec    eax
  431941:	je     0x4319a6
  431943:	dec    eax
  431944:	je     0x43198f
  431946:	dec    eax
  431947:	jne    0x43198b
  431949:	movzx  ecx,WORD PTR [esi+0x2]
  43194d:	test   ecx,0x1000
  431953:	je     0x431975
  431955:	mov    eax,ecx
  431957:	and    eax,0xf0
  43195c:	mov    edx,0x800f
  431961:	or     ax,dx
  431964:	shr    ax,0x4
  431968:	and    ecx,0xe800
  43196e:	or     ax,cx
  431971:	mov    WORD PTR [esi+0x2],ax
  431975:	cmp    BYTE PTR ds:0x45f838,0x0
  43197c:	je     0x43198b
  43197e:	cmp    BYTE PTR [esi+0x1],0x1
  431982:	jne    0x43198b
  431984:	mov    BYTE PTR ds:0x45f693,0x1
  43198b:	mov    eax,esi
  43198d:	pop    esi
  43198e:	ret    
  43198f:	mov    BYTE PTR [esi],0x2
  431992:	test   BYTE PTR [esi+0x4],0x80
  431996:	je     0x43198b
  431998:	mov    DWORD PTR [esi+0x18],0x449418
  43199f:	call   0x431d21
  4319a4:	jmp    0x43198b
  4319a6:	cmp    BYTE PTR ds:0x45f857,0x0
  4319ad:	jne    0x43198b
  4319af:	call   0x431bbe
  4319b4:	jmp    0x43198b
  4319b6:	movzx  ecx,WORD PTR [esi+0x2]
  4319ba:	mov    eax,ecx
  4319bc:	shr    eax,0xb
  4319bf:	mov    edx,0x1000
  4319c4:	and    eax,0x1
  4319c7:	jne    0x4319cd
  4319c9:	test   edx,ecx
  4319cb:	je     0x4319e9
  4319cd:	test   DWORD PTR [esi+0x4],edx
  4319d0:	jne    0x4319e9
  4319d2:	mov    eax,ds:0x45f83c
  4319d7:	mov    DWORD PTR [esi],eax
  4319d9:	mov    DWORD PTR ds:0x45f83c,esi
  4319df:	mov    edx,0x7f0
  4319e4:	jmp    0x43192e
  4319e9:	cmp    BYTE PTR ds:0x45f857,0x0
  4319f0:	jne    0x431975
  4319f2:	mov    edx,DWORD PTR [esi+0x18]
  4319f5:	test   edx,edx
  4319f7:	je     0x431975
  4319fd:	test   BYTE PTR [edx+0xe],0x4
  431a01:	je     0x431975
  431a07:	test   ax,ax
  431a0a:	jne    0x431975
  431a10:	test   ecx,0x1700
  431a16:	jne    0x431975
  431a1c:	mov    eax,DWORD PTR [esi+0x4]
  431a1f:	mov    BYTE PTR [esi],0x2
  431a22:	test   eax,0x2000
  431a27:	jne    0x431a33
  431a29:	cmp    DWORD PTR [esi+0x14],0x0
  431a2d:	jne    0x431a33
  431a2f:	mov    BYTE PTR [esi+0x1],0x8
  431a33:	and    eax,0xffffefff
  431a38:	mov    DWORD PTR [esi+0x4],eax
  431a3b:	jmp    0x43198b
  431a40:	push   ebp
  431a41:	mov    ebp,esp
  431a43:	push   ecx
  431a44:	push   ebx
  431a45:	mov    ebx,ecx
  431a47:	push   edi
  431a48:	mov    cl,BYTE PTR [ebx]
  431a4a:	mov    edi,edx
  431a4c:	cmp    cl,0x4
  431a4f:	jbe    0x431ab7
  431a51:	lea    eax,[ecx-0x5]
  431a54:	cmp    al,0x2
  431a56:	ja     0x431a93
  431a58:	and    DWORD PTR [edi],0x0
  431a5b:	and    DWORD PTR [edi+0x4],0x0
  431a5f:	movzx  eax,cl
  431a62:	add    eax,ebx
  431a64:	mov    DWORD PTR [ebp-0x4],eax
  431a67:	cmp    eax,ebx
  431a69:	jbe    0x431ab3
  431a6b:	push   esi
  431a6c:	movzx  eax,BYTE PTR [eax]
  431a6f:	mov    ecx,DWORD PTR [edi]
  431a71:	mov    esi,DWORD PTR [edi+0x4]
  431a74:	shld   esi,ecx,0x8
  431a78:	cdq    
  431a79:	shl    ecx,0x8
  431a7c:	or     ecx,eax
  431a7e:	mov    eax,DWORD PTR [ebp-0x4]
  431a81:	or     esi,edx
  431a83:	dec    eax
  431a84:	mov    DWORD PTR [edi],ecx
  431a86:	mov    DWORD PTR [edi+0x4],esi
  431a89:	mov    DWORD PTR [ebp-0x4],eax
  431a8c:	cmp    eax,ebx
  431a8e:	ja     0x431a6c
  431a90:	pop    esi
  431a91:	jmp    0x431ab3
  431a93:	cmp    cl,0x8
  431a96:	jne    0x431aa5
  431a98:	mov    eax,DWORD PTR [ebx+0x1]
  431a9b:	mov    DWORD PTR [edi],eax
  431a9d:	mov    eax,DWORD PTR [ebx+0x5]
  431aa0:	mov    DWORD PTR [edi+0x4],eax
  431aa3:	jmp    0x431ab3
  431aa5:	push   0x0
  431aa7:	xor    edx,edx
  431aa9:	mov    ecx,0x824
  431aae:	call   0x42ee80
  431ab3:	mov    al,0x1
  431ab5:	jmp    0x431ab9
  431ab7:	xor    al,al
  431ab9:	pop    edi
  431aba:	pop    ebx
  431abb:	leave  
  431abc:	ret    
  431abd:	test   ecx,ecx
  431abf:	je     0x431afe
  431ac1:	mov    edx,DWORD PTR ds:0x460560
  431ac7:	push   esi
  431ac8:	mov    esi,DWORD PTR ds:0x45f83c
  431ace:	mov    eax,DWORD PTR [ecx+0x8]
  431ad1:	test   eax,eax
  431ad3:	je     0x431ad9
  431ad5:	mov    DWORD PTR [eax],esi
  431ad7:	mov    esi,eax
  431ad9:	mov    eax,DWORD PTR [ecx]
  431adb:	test   eax,eax
  431add:	je     0x431aeb
  431adf:	and    DWORD PTR [ecx+0x8],0x0
  431ae3:	and    DWORD PTR [ecx+0x4],0x0
  431ae7:	mov    DWORD PTR [ecx],edx
  431ae9:	mov    edx,ecx
  431aeb:	mov    ecx,eax
  431aed:	test   eax,eax
  431aef:	jne    0x431ace
  431af1:	mov    DWORD PTR ds:0x45f83c,esi
  431af7:	mov    DWORD PTR ds:0x460560,edx
  431afd:	pop    esi
  431afe:	ret    
  431aff:	mov    al,ds:0x460564
  431b04:	push   esi
  431b05:	mov    esi,ecx
  431b07:	cmp    al,0x2
  431b09:	je     0x431b1f
  431b0b:	cmp    BYTE PTR ds:0x45f692,0x0
  431b12:	jne    0x431b18
  431b14:	cmp    al,0x1
  431b16:	jne    0x431b1f
  431b18:	mov    ecx,edx
  431b1a:	call   0x42f124
  431b1f:	mov    ecx,esi
  431b21:	call   0x431abd
  431b26:	xor    eax,eax
  431b28:	pop    esi
  431b29:	ret    
  431b2a:	push   ebp
  431b2b:	mov    ebp,esp
  431b2d:	mov    al,ds:0x460564
  431b32:	push   esi
  431b33:	mov    esi,ecx
  431b35:	cmp    al,0x2
  431b37:	je     0x431b53
  431b39:	cmp    BYTE PTR ds:0x45f692,0x0
  431b40:	jne    0x431b46
  431b42:	cmp    al,0x1
  431b44:	jne    0x431b53
  431b46:	mov    edx,DWORD PTR [ebp+0x8]
  431b49:	mov    ecx,0x7d6
  431b4e:	call   0x42f140
  431b53:	mov    ecx,esi
  431b55:	call   0x431abd
  431b5a:	xor    eax,eax
  431b5c:	pop    esi
  431b5d:	pop    ebp
  431b5e:	ret    0x4
  431b61:	push   ebp
  431b62:	mov    ebp,esp
  431b64:	mov    al,ds:0x460564
  431b69:	push   esi
  431b6a:	push   edi
  431b6b:	mov    edi,edx
  431b6d:	mov    esi,ecx
  431b6f:	cmp    al,0x2
  431b71:	je     0x431b91
  431b73:	cmp    BYTE PTR ds:0x45f692,0x0
  431b7a:	jne    0x431b80
  431b7c:	cmp    al,0x1
  431b7e:	jne    0x431b91
  431b80:	mov    edx,DWORD PTR [ebp+0x8]
  431b83:	mov    ecx,edi
  431b85:	movzx  eax,BYTE PTR [edx+0x5]
  431b89:	push   eax
  431b8a:	sub    edx,eax
  431b8c:	call   0x42f15d
  431b91:	mov    ecx,esi
  431b93:	call   0x431abd
  431b98:	pop    edi
  431b99:	xor    eax,eax
  431b9b:	pop    esi
  431b9c:	pop    ebp
  431b9d:	ret    0x4
  431ba0:	test   BYTE PTR [ecx+0xe],0x40
  431ba4:	mov    edx,DWORD PTR [ecx+0x10]
  431ba7:	je     0x431bb7
  431ba9:	xor    eax,eax
  431bab:	cmp    edx,0x4
  431bae:	setne  al
  431bb1:	add    eax,0xff05
  431bb6:	ret    
  431bb7:	lea    eax,[edx+0xff00]
  431bbd:	ret    
  431bbe:	push   ebx
  431bbf:	push   esi
  431bc0:	mov    esi,ecx
  431bc2:	xor    edx,edx
  431bc4:	mov    ebx,DWORD PTR [esi+0x4]
  431bc7:	test   bl,bl
  431bc9:	js     0x431c22
  431bcb:	mov    ecx,DWORD PTR [esi+0x18]
  431bce:	test   ecx,ecx
  431bd0:	jne    0x431bd7
  431bd2:	mov    DWORD PTR [esi+0x8],edx
  431bd5:	jmp    0x431c1f
  431bd7:	movzx  eax,WORD PTR [ecx+0xe]
  431bdb:	test   al,0x4
  431bdd:	je     0x431be8
  431bdf:	call   0x431ba0
  431be4:	xor    edx,edx
  431be6:	jmp    0x431c1c
  431be8:	test   ebx,0x2000
  431bee:	jne    0x431c19
  431bf0:	test   al,0x8
  431bf2:	je     0x431c19
  431bf4:	mov    eax,DWORD PTR [ecx+0x14]
  431bf7:	cmp    BYTE PTR [eax+0x6],0xd
  431bfb:	jne    0x431c19
  431bfd:	movzx  ecx,BYTE PTR [eax+0x22]
  431c01:	or     edx,0xffffffff
  431c04:	mov    eax,edx
  431c06:	call   0x447510
  431c0b:	not    edx
  431c0d:	not    eax
  431c0f:	mov    DWORD PTR [esi+0xc],edx
  431c12:	mov    DWORD PTR [esi+0x8],eax
  431c15:	xor    edx,edx
  431c17:	jmp    0x431c22
  431c19:	mov    eax,DWORD PTR [ecx+0x10]
  431c1c:	mov    DWORD PTR [esi+0x8],eax
  431c1f:	mov    DWORD PTR [esi+0xc],edx
  431c22:	and    ebx,0xf0000000
  431c28:	mov    DWORD PTR [esi+0x4],ebx
  431c2b:	mov    WORD PTR [esi],0x2
  431c30:	mov    DWORD PTR [esi+0x10],edx
  431c33:	mov    DWORD PTR [esi+0x14],edx
  431c36:	mov    DWORD PTR [esi+0x18],edx
  431c39:	pop    esi
  431c3a:	pop    ebx
  431c3b:	ret    
  431c3c:	push   esi
  431c3d:	mov    esi,ecx
  431c3f:	push   edi
  431c40:	cmp    BYTE PTR [esi],0x4
  431c43:	mov    edi,edx
  431c45:	jne    0x431c4c
  431c47:	call   0x431bbe
  431c4c:	cmp    BYTE PTR [esi],0x2
  431c4f:	jne    0x431c5e
  431c51:	test   DWORD PTR [esi+0x4],0x100
  431c58:	jne    0x431c5e
  431c5a:	mov    al,0x1
  431c5c:	jmp    0x431c6c
  431c5e:	mov    edx,0x7ea
  431c63:	mov    ecx,edi
  431c65:	call   0x431aff
  431c6a:	xor    al,al
  431c6c:	pop    edi
  431c6d:	pop    esi
  431c6e:	ret    
  431c6f:	push   ebp
  431c70:	mov    ebp,esp
  431c72:	push   esi
  431c73:	mov    esi,ecx
  431c75:	push   edi
  431c76:	cmp    BYTE PTR [esi],0x4
  431c79:	mov    edi,edx
  431c7b:	jne    0x431c82
  431c7d:	call   0x431bbe
  431c82:	cmp    BYTE PTR [edi],0x4
  431c85:	jne    0x431c8e
  431c87:	mov    ecx,edi
  431c89:	call   0x431bbe
  431c8e:	cmp    BYTE PTR [esi],0x2
  431c91:	jne    0x431d0c
  431c93:	mov    edx,DWORD PTR [esi+0x4]
  431c96:	mov    eax,0x100
  431c9b:	test   eax,edx
  431c9d:	jne    0x431d0c
  431c9f:	cmp    BYTE PTR [edi],0x2
  431ca2:	jne    0x431d0c
  431ca4:	test   DWORD PTR [edi+0x4],eax
  431ca7:	jne    0x431d0c
  431ca9:	push   ebx
  431caa:	xor    ebx,ebx
  431cac:	cmp    BYTE PTR [ebp+0x8],bl
  431caf:	je     0x431cfa
  431cb1:	test   edx,0x8000
  431cb7:	je     0x431cd4
  431cb9:	mov    ecx,DWORD PTR [esi+0x8]
  431cbc:	mov    eax,DWORD PTR [esi+0xc]
  431cbf:	neg    ecx
  431cc1:	adc    eax,ebx
  431cc3:	neg    eax
  431cc5:	and    edx,0xffff7fff
  431ccb:	mov    DWORD PTR [esi+0x8],ecx
  431cce:	mov    DWORD PTR [esi+0xc],eax
  431cd1:	mov    DWORD PTR [esi+0x4],edx
  431cd4:	mov    edx,DWORD PTR [edi+0x4]
  431cd7:	test   edx,0x8000
  431cdd:	je     0x431cfa
  431cdf:	mov    ecx,DWORD PTR [edi+0x8]
  431ce2:	mov    eax,DWORD PTR [edi+0xc]
  431ce5:	neg    ecx
  431ce7:	adc    eax,ebx
  431ce9:	neg    eax
  431ceb:	and    edx,0xffff7fff
  431cf1:	mov    DWORD PTR [edi+0x8],ecx
  431cf4:	mov    DWORD PTR [edi+0xc],eax
  431cf7:	mov    DWORD PTR [edi+0x4],edx
  431cfa:	and    DWORD PTR [esi+0x4],0xffffdf7f
  431d01:	mov    DWORD PTR [esi+0x18],ebx
  431d04:	mov    BYTE PTR [esi+0x1],bl
  431d07:	mov    al,0x1
  431d09:	pop    ebx
  431d0a:	jmp    0x431d1b
  431d0c:	mov    ecx,DWORD PTR [ebp+0xc]
  431d0f:	mov    edx,0x7ea
  431d14:	call   0x431aff
  431d19:	xor    al,al
  431d1b:	pop    edi
  431d1c:	pop    esi
  431d1d:	pop    ebp
  431d1e:	ret    0x8
  431d21:	mov    edx,DWORD PTR [ecx+0x18]
  431d24:	cmp    DWORD PTR [edx+0x10],0xff
  431d2b:	jb     0x431d33
  431d2d:	mov    BYTE PTR [ecx+0x1],0xff
  431d31:	jmp    0x431d39
  431d33:	mov    al,BYTE PTR [edx+0x10]
  431d36:	mov    BYTE PTR [ecx+0x1],al
  431d39:	and    DWORD PTR [ecx+0x4],0xffffff8f
  431d3d:	test   BYTE PTR [edx+0xe],0x4
  431d41:	je     0x431d47
  431d43:	or     DWORD PTR [ecx+0x4],0x50
  431d47:	ret    
  431d48:	cmp    BYTE PTR [ecx],0x6
  431d4b:	je     0x431d53
  431d4d:	mov    eax,0x7ef
  431d52:	ret    
  431d53:	mov    al,BYTE PTR [ecx+0x1]
  431d56:	cmp    al,0x1
  431d58:	je     0x431d4d
  431d5a:	cmp    al,0x2
  431d5c:	je     0x431d4d
  431d5e:	mov    eax,DWORD PTR [ecx+0x18]
  431d61:	mov    BYTE PTR [ecx],0x1
  431d64:	test   eax,eax
  431d66:	je     0x431d78
  431d68:	mov    eax,DWORD PTR [eax]
  431d6a:	mov    DWORD PTR [ecx+0x18],eax
  431d6d:	test   eax,eax
  431d6f:	je     0x431d78
  431d71:	call   0x431d21
  431d76:	jmp    0x431d7c
  431d78:	mov    BYTE PTR [ecx+0x1],0x0
  431d7c:	xor    eax,eax
  431d7e:	ret    
  431d7f:	push   esi
  431d80:	push   edi
  431d81:	mov    edi,edx
  431d83:	mov    BYTE PTR [edi],0x0
  431d86:	cmp    BYTE PTR [ecx],0x2
  431d89:	jne    0x431d91
  431d8b:	xor    eax,eax
  431d8d:	xor    edx,edx
  431d8f:	jmp    0x431de7
  431d91:	mov    dl,0x1
  431d93:	call   0x42f6c1
  431d98:	mov    esi,eax
  431d9a:	test   esi,esi
  431d9c:	je     0x431d8b
  431d9e:	cmp    BYTE PTR [esi],0x2
  431da1:	jne    0x431dc7
  431da3:	test   DWORD PTR [esi+0x4],0x100
  431daa:	jne    0x431dc7
  431dac:	test   DWORD PTR [esi+0x4],0x8000
  431db3:	mov    eax,DWORD PTR [esi+0x8]
  431db6:	mov    edx,DWORD PTR [esi+0xc]
  431db9:	je     0x431dd9
  431dbb:	neg    eax
  431dbd:	adc    edx,0x0
  431dc0:	mov    BYTE PTR [edi],0x1
  431dc3:	neg    edx
  431dc5:	jmp    0x431dd9
  431dc7:	push   0x0
  431dc9:	xor    edx,edx
  431dcb:	mov    ecx,0x7ea
  431dd0:	call   0x42ee80
  431dd5:	xor    eax,eax
  431dd7:	xor    edx,edx
  431dd9:	mov    ecx,DWORD PTR ds:0x45f83c
  431ddf:	mov    DWORD PTR [esi],ecx
  431de1:	mov    DWORD PTR ds:0x45f83c,esi
  431de7:	pop    edi
  431de8:	pop    esi
  431de9:	ret    
  431dea:	mov    edx,ecx
  431dec:	mov    cl,BYTE PTR ds:0x45f83a
  431df2:	movzx  eax,BYTE PTR [edx]
  431df5:	push   esi
  431df6:	lea    esi,[edx+0x1]
  431df9:	add    esi,eax
  431dfb:	xor    eax,eax
  431dfd:	inc    edx
  431dfe:	cmp    edx,esi
  431e00:	jae    0x431e16
  431e02:	push   edi
  431e03:	movzx  edi,cl
  431e06:	mov    ecx,edi
  431e08:	imul   ecx,eax
  431e0b:	movzx  eax,BYTE PTR [edx]
  431e0e:	add    eax,ecx
  431e10:	inc    edx
  431e11:	cmp    edx,esi
  431e13:	jb     0x431e06
  431e15:	pop    edi
  431e16:	pop    esi
  431e17:	ret    
  431e18:	push   ebp
  431e19:	mov    ebp,esp
  431e1b:	sub    esp,0x10
  431e1e:	push   ebx
  431e1f:	push   esi
  431e20:	push   edi
  431e21:	mov    edi,ecx
  431e23:	mov    eax,edx
  431e25:	mov    bl,BYTE PTR [edi]
  431e27:	mov    ecx,DWORD PTR [edi+0x8]
  431e2a:	mov    esi,DWORD PTR [eax+0x8]
  431e2d:	mov    edx,DWORD PTR [edi+0xc]
  431e30:	mov    BYTE PTR [ebp-0x1],bl
  431e33:	cmp    BYTE PTR [ebp-0x1],0x2
  431e37:	mov    DWORD PTR [ebp-0xc],eax
  431e3a:	mov    eax,DWORD PTR [eax+0xc]
  431e3d:	mov    DWORD PTR [ebp-0x10],edi
  431e40:	mov    DWORD PTR [ebp-0x8],ecx
  431e43:	mov    ebx,0x8000
  431e48:	jne    0x431ec9
  431e4a:	mov    ecx,DWORD PTR [ebp-0xc]
  431e4d:	cmp    BYTE PTR [ecx],0x2
  431e50:	mov    ecx,DWORD PTR [ebp-0x8]
  431e53:	jne    0x431ebd
  431e55:	mov    ecx,DWORD PTR [edi+0x4]
  431e58:	and    ecx,ebx
  431e5a:	mov    ebx,DWORD PTR [ebp-0xc]
  431e5d:	mov    ebx,DWORD PTR [ebx+0x4]
  431e60:	and    ebx,0x8000
  431e66:	cmp    BYTE PTR [ebp+0x8],0x0
  431e6a:	je     0x431e72
  431e6c:	xor    ebx,0x8000
  431e72:	cmp    ecx,ebx
  431e74:	jne    0x431e7d
  431e76:	add    esi,DWORD PTR [ebp-0x8]
  431e79:	adc    eax,edx
  431e7b:	jmp    0x431e9a
  431e7d:	sub    DWORD PTR [ebp-0x8],esi
  431e80:	mov    esi,DWORD PTR [ebp-0x8]
  431e83:	sbb    edx,eax
  431e85:	mov    eax,edx
  431e87:	test   eax,eax
  431e89:	jg     0x431e9a
  431e8b:	jl     0x431e91
  431e8d:	test   esi,esi
  431e8f:	jae    0x431e9a
  431e91:	neg    esi
  431e93:	adc    eax,0x0
  431e96:	mov    ecx,ebx
  431e98:	neg    eax
  431e9a:	mov    edx,DWORD PTR [edi+0x4]
  431e9d:	and    edx,0xffff7fff
  431ea3:	mov    DWORD PTR [edi+0x8],esi
  431ea6:	or     esi,eax
  431ea8:	mov    DWORD PTR [edi+0x4],edx
  431eab:	mov    DWORD PTR [edi+0xc],eax
  431eae:	je     0x431f0a
  431eb0:	and    ecx,0xfffffff
  431eb6:	or     ecx,edx
  431eb8:	mov    DWORD PTR [edi+0x4],ecx
  431ebb:	jmp    0x431f0a
  431ebd:	test   DWORD PTR [edi+0x4],ebx
  431ec0:	je     0x431ec9
  431ec2:	neg    ecx
  431ec4:	adc    edx,0x0
  431ec7:	neg    edx
  431ec9:	mov    edi,DWORD PTR [ebp-0xc]
  431ecc:	cmp    BYTE PTR [edi],0x2
  431ecf:	mov    edi,DWORD PTR [ebp-0x10]
  431ed2:	jne    0x431ee6
  431ed4:	mov    edi,DWORD PTR [ebp-0xc]
  431ed7:	test   DWORD PTR [edi+0x4],ebx
  431eda:	mov    edi,DWORD PTR [ebp-0x10]
  431edd:	je     0x431ee6
  431edf:	neg    esi
  431ee1:	adc    eax,0x0
  431ee4:	neg    eax
  431ee6:	cmp    BYTE PTR [ebp+0x8],0x0
  431eea:	je     0x431ef3
  431eec:	neg    esi
  431eee:	adc    eax,0x0
  431ef1:	neg    eax
  431ef3:	cmp    BYTE PTR [ebp-0x1],0x2
  431ef7:	jne    0x431f00
  431ef9:	and    DWORD PTR [edi+0x4],0xffff7fff
  431f00:	add    esi,ecx
  431f02:	adc    eax,edx
  431f04:	mov    DWORD PTR [edi+0x8],esi
  431f07:	mov    DWORD PTR [edi+0xc],eax
  431f0a:	pop    edi
  431f0b:	pop    esi
  431f0c:	pop    ebx
  431f0d:	leave  
  431f0e:	ret    0x4
  431f11:	mov    edx,DWORD PTR ds:0x45f83c
  431f17:	test   edx,edx
  431f19:	je     0x431f31
  431f1b:	mov    ecx,DWORD PTR [edx]
  431f1d:	push   edi
  431f1e:	push   0x8
  431f20:	mov    DWORD PTR ds:0x45f83c,ecx
  431f26:	pop    ecx
  431f27:	xor    eax,eax
  431f29:	mov    edi,edx
  431f2b:	rep stos DWORD PTR es:[edi],eax
  431f2d:	mov    eax,edx
  431f2f:	pop    edi
  431f30:	ret    
  431f31:	push   esi
  431f32:	push   0x14
  431f34:	pop    esi
  431f35:	mov    ecx,0x2c0
  431f3a:	call   0x43f42e
  431f3f:	mov    ds:0x45f83c,eax
  431f44:	add    eax,0x20
  431f47:	mov    DWORD PTR [eax],eax
  431f49:	dec    esi
  431f4a:	jne    0x431f44
  431f4c:	add    eax,0x20
  431f4f:	pop    esi
  431f50:	ret    
  431f51:	push   ebp
  431f52:	mov    ebp,esp
  431f54:	push   ecx
  431f55:	push   ebx
  431f56:	push   esi
  431f57:	push   edi
  431f58:	mov    edi,ecx
  431f5a:	mov    esi,edx
  431f5c:	mov    al,BYTE PTR [edi]
  431f5e:	mov    ecx,0x180000
  431f63:	cmp    al,0x6
  431f65:	jbe    0x431f6c
  431f67:	test   DWORD PTR [edi+0x4],ecx
  431f6a:	je     0x431f76
  431f6c:	cmp    BYTE PTR [esi],0x6
  431f6f:	jbe    0x431f80
  431f71:	test   DWORD PTR [esi+0x4],ecx
  431f74:	jne    0x431f80
  431f76:	mov    edx,0x7f0
  431f7b:	jmp    0x4324d7
  431f80:	cmp    al,0x4
  431f82:	jne    0x431f8b
  431f84:	mov    ecx,edi
  431f86:	call   0x431bbe
  431f8b:	cmp    BYTE PTR [esi],0x4
  431f8e:	jne    0x431f97
  431f90:	mov    ecx,esi
  431f92:	call   0x431bbe
  431f97:	mov    cl,BYTE PTR [edi]
  431f99:	push   0x3
  431f9b:	pop    eax
  431f9c:	cmp    cl,al
  431f9e:	jne    0x431fc5
  431fa0:	cmp    BYTE PTR [esi],0x2
  431fa3:	jne    0x431fc5
  431fa5:	mov    eax,DWORD PTR [esi+0x8]
  431fa8:	add    DWORD PTR [edi+0x8],eax
  431fab:	mov    eax,DWORD PTR [esi+0xc]
  431fae:	adc    DWORD PTR [edi+0xc],eax
  431fb1:	mov    eax,ds:0x45f83c
  431fb6:	mov    DWORD PTR [esi],eax
  431fb8:	mov    DWORD PTR ds:0x45f83c,esi
  431fbe:	mov    eax,edi
  431fc0:	jmp    0x4324de
  431fc5:	mov    ch,BYTE PTR [esi]
  431fc7:	cmp    ch,al
  431fc9:	jne    0x431ff0
  431fcb:	cmp    cl,0x2
  431fce:	jne    0x431ff0
  431fd0:	mov    eax,DWORD PTR [edi+0x8]
  431fd3:	add    DWORD PTR [esi+0x8],eax
  431fd6:	mov    eax,DWORD PTR [edi+0xc]
  431fd9:	adc    DWORD PTR [esi+0xc],eax
  431fdc:	mov    eax,ds:0x45f83c
  431fe1:	mov    DWORD PTR [edi],eax
  431fe3:	mov    DWORD PTR ds:0x45f83c,edi
  431fe9:	mov    eax,esi
  431feb:	jmp    0x4324de
  431ff0:	cmp    cl,al
  431ff2:	je     0x4324d2
  431ff8:	cmp    ch,al
  431ffa:	je     0x4324d2
  432000:	mov    ebx,DWORD PTR [esi+0x4]
  432003:	mov    edx,DWORD PTR [edi+0x4]
  432006:	mov    eax,ebx
  432008:	and    eax,edx
  43200a:	test   eax,0x100
  43200f:	je     0x43201b
  432011:	mov    edx,0x835
  432016:	jmp    0x4324d7
  43201b:	and    dl,0x3
  43201e:	cmp    dl,0x1
  432021:	jne    0x432027
  432023:	xor    edx,edx
  432025:	jmp    0x43202a
  432027:	mov    edx,DWORD PTR [edi+0x14]
  43202a:	and    bl,0x3
  43202d:	cmp    bl,0x1
  432030:	jne    0x432036
  432032:	xor    eax,eax
  432034:	jmp    0x432039
  432036:	mov    eax,DWORD PTR [esi+0x14]
  432039:	test   edx,edx
  43203b:	je     0x43204f
  43203d:	test   eax,eax
  43203f:	je     0x43204f
  432041:	cmp    edx,eax
  432043:	je     0x43204f
  432045:	mov    edx,0x819
  43204a:	jmp    0x4324d7
  43204f:	cmp    cl,0x2
  432052:	jne    0x43205e
  432054:	cmp    ch,cl
  432056:	je     0x43205e
  432058:	mov    eax,esi
  43205a:	mov    esi,edi
  43205c:	mov    edi,eax
  43205e:	lea    ebx,[edi+0x4]
  432061:	mov    ecx,0x180000
  432066:	test   DWORD PTR [ebx],ecx
  432068:	je     0x43207b
  43206a:	mov    eax,esi
  43206c:	mov    esi,edi
  43206e:	lea    ebx,[eax+0x4]
  432071:	mov    edi,eax
  432073:	test   DWORD PTR [ebx],ecx
  432075:	jne    0x431f76
  43207b:	mov    al,BYTE PTR [edi]
  43207d:	cmp    al,0x2
  43207f:	je     0x432324
  432085:	cmp    al,0x1
  432087:	jne    0x4320e0
  432089:	mov    ecx,DWORD PTR [esi+0x4]
  43208c:	mov    eax,ecx
  43208e:	xor    eax,DWORD PTR [ebx]
  432090:	test   al,0x40
  432092:	je     0x4320cb
  432094:	cmp    BYTE PTR [esi],0x1
  432097:	jne    0x4320cb
  432099:	mov    edx,DWORD PTR [edi+0x14]
  43209c:	cmp    DWORD PTR [esi+0x14],edx
  43209f:	je     0x4320cb
  4320a1:	cmp    DWORD PTR [esi+0x14],0x0
  4320a5:	jne    0x4320b2
  4320a7:	movzx  eax,WORD PTR [esi+0x2]
  4320ab:	test   eax,0x1f00
  4320b0:	jne    0x4320cb
  4320b2:	test   edx,edx
  4320b4:	jne    0x4320c1
  4320b6:	movzx  eax,WORD PTR [edi+0x2]
  4320ba:	test   eax,0x1f00
  4320bf:	jne    0x4320cb
  4320c1:	mov    edx,0x836
  4320c6:	jmp    0x4324d7
  4320cb:	cmp    BYTE PTR [esi],0x6
  4320ce:	jne    0x432102
  4320d0:	cmp    DWORD PTR [esi+0x14],0x0
  4320d4:	jne    0x432102
  4320d6:	and    ecx,0xfffffff
  4320dc:	or     DWORD PTR [ebx],ecx
  4320de:	jmp    0x432102
  4320e0:	mov    ecx,edi
  4320e2:	call   0x431d48
  4320e7:	test   eax,eax
  4320e9:	je     0x4320f2
  4320eb:	mov    edx,eax
  4320ed:	jmp    0x4324d7
  4320f2:	cmp    BYTE PTR [esi],0x6
  4320f5:	jne    0x432102
  4320f7:	mov    ecx,esi
  4320f9:	call   0x431d48
  4320fe:	test   eax,eax
  432100:	jne    0x4320eb
  432102:	cmp    BYTE PTR [esi],0x2
  432105:	je     0x432300
  43210b:	movzx  eax,WORD PTR [edi+0x2]
  43210f:	mov    ecx,eax
  432111:	shr    ecx,0xb
  432114:	and    ecx,0x1
  432117:	jne    0x432120
  432119:	test   eax,0x1700
  43211e:	je     0x43214e
  432120:	movzx  eax,WORD PTR [esi+0x2]
  432124:	test   eax,0x1f00
  432129:	je     0x43214a
  43212b:	test   DWORD PTR [esi+0x4],0x180000
  432132:	jne    0x43214a
  432134:	mov    eax,DWORD PTR [ebx]
  432136:	xor    eax,DWORD PTR [esi+0x4]
  432139:	test   eax,0x800
  43213e:	je     0x43214a
  432140:	mov    edx,0x822
  432145:	jmp    0x4324d7
  43214a:	movzx  eax,WORD PTR [edi+0x2]
  43214e:	movzx  edx,WORD PTR [esi+0x2]
  432152:	mov    DWORD PTR [ebp-0x4],edx
  432155:	shr    edx,0xb
  432158:	and    edx,0x1
  43215b:	jne    0x432166
  43215d:	test   DWORD PTR [ebp-0x4],0x1700
  432164:	je     0x4321c7
  432166:	test   cx,cx
  432169:	jne    0x432172
  43216b:	test   eax,0x1700
  432170:	je     0x4321c7
  432172:	mov    eax,DWORD PTR [ebx]
  432174:	test   eax,0x1000
  432179:	je     0x4321c7
  43217b:	test   DWORD PTR [esi+0x4],0x1000
  432182:	jne    0x4321c7
  432184:	and    eax,0xffffefff
  432189:	mov    DWORD PTR [ebx],eax
  43218b:	mov    eax,0x1000
  432190:	cmp    BYTE PTR [esi],0x1
  432193:	jne    0x4321f4
  432195:	cmp    BYTE PTR [edi],0x1
  432198:	jne    0x4321f4
  43219a:	mov    ecx,0x800
  43219f:	test   DWORD PTR [esi+0x4],eax
  4321a2:	je     0x4321af
  4321a4:	test   DWORD PTR [esi+0x4],ecx
  4321a7:	jne    0x4321af
  4321a9:	cmp    DWORD PTR [edi+0x10],0x0
  4321ad:	jne    0x4321bd
  4321af:	test   DWORD PTR [ebx],eax
  4321b1:	je     0x4321f4
  4321b3:	test   DWORD PTR [ebx],ecx
  4321b5:	jne    0x4321f4
  4321b7:	cmp    DWORD PTR [esi+0x10],0x0
  4321bb:	je     0x4321f4
  4321bd:	mov    edx,0x8b5
  4321c2:	jmp    0x4324d7
  4321c7:	test   cx,cx
  4321ca:	jne    0x43218b
  4321cc:	movzx  eax,WORD PTR [edi+0x2]
  4321d0:	mov    ecx,0x1700
  4321d5:	test   ecx,eax
  4321d7:	jne    0x43218b
  4321d9:	test   dx,dx
  4321dc:	jne    0x4321e6
  4321de:	movzx  eax,WORD PTR [esi+0x2]
  4321e2:	test   ecx,eax
  4321e4:	je     0x43218b
  4321e6:	mov    eax,0x1000
  4321eb:	test   DWORD PTR [esi+0x4],eax
  4321ee:	je     0x432190
  4321f0:	or     DWORD PTR [ebx],eax
  4321f2:	jmp    0x432190
  4321f4:	movzx  edx,WORD PTR [edi+0x2]
  4321f8:	test   eax,edx
  4321fa:	je     0x43220c
  4321fc:	test   WORD PTR [esi+0x2],ax
  432200:	je     0x43220c
  432202:	mov    edx,0x7ee
  432207:	jmp    0x4324d7
  43220c:	test   edx,0x800
  432212:	je     0x4322b8
  432218:	movzx  ecx,WORD PTR [esi+0x2]
  43221c:	test   ecx,0x800
  432222:	je     0x4322b8
  432228:	test   DWORD PTR [esi+0x4],0x180000
  43222f:	push   0xf
  432231:	je     0x432253
  432233:	mov    eax,ecx
  432235:	pop    edx
  432236:	and    eax,edx
  432238:	or     eax,0x100
  43223d:	shl    eax,0x4
  432240:	and    ecx,0xf700
  432246:	or     eax,ecx
  432248:	mov    WORD PTR [esi+0x2],ax
  43224c:	mov    eax,0x1000
  432251:	jmp    0x4322bb
  432253:	mov    eax,edx
  432255:	and    eax,0xf
  432258:	mov    DWORD PTR [ebp-0x4],0x4
  43225f:	cmp    ax,WORD PTR [ebp-0x4]
  432263:	je     0x432284
  432265:	shl    eax,0x4
  432268:	and    edx,0xff0f
  43226e:	or     eax,edx
  432270:	and    eax,0xf7f0
  432275:	mov    ecx,0x1000
  43227a:	or     eax,ecx
  43227c:	mov    WORD PTR [edi+0x2],ax
  432280:	mov    eax,ecx
  432282:	jmp    0x4322ba
  432284:	mov    eax,ecx
  432286:	pop    edx
  432287:	and    eax,edx
  432289:	cmp    ax,WORD PTR [ebp-0x4]
  43228d:	je     0x4322ae
  43228f:	shl    eax,0x4
  432292:	and    ecx,0xff0f
  432298:	or     eax,ecx
  43229a:	and    eax,0xf7f0
  43229f:	mov    ecx,0x1000
  4322a4:	or     eax,ecx
  4322a6:	mov    WORD PTR [esi+0x2],ax
  4322aa:	mov    eax,ecx
  4322ac:	jmp    0x4322bb
  4322ae:	mov    edx,0x7ed
  4322b3:	jmp    0x4324d7
  4322b8:	push   0xf
  4322ba:	pop    edx
  4322bb:	test   WORD PTR [esi+0x2],ax
  4322bf:	je     0x4322d9
  4322c1:	or     WORD PTR [edi+0x2],ax
  4322c5:	mov    ax,WORD PTR [esi+0x2]
  4322c9:	xor    ax,WORD PTR [edi+0x2]
  4322cd:	mov    ecx,0xf0
  4322d2:	and    ax,cx
  4322d5:	xor    WORD PTR [edi+0x2],ax
  4322d9:	mov    eax,0x800
  4322de:	test   WORD PTR [esi+0x2],ax
  4322e2:	je     0x4323a6
  4322e8:	or     WORD PTR [edi+0x2],ax
  4322ec:	mov    ax,WORD PTR [esi+0x2]
  4322f0:	xor    ax,WORD PTR [edi+0x2]
  4322f4:	and    ax,dx
  4322f7:	xor    WORD PTR [edi+0x2],ax
  4322fb:	jmp    0x4323a6
  432300:	mov    eax,DWORD PTR [esi+0x10]
  432303:	test   eax,eax
  432305:	je     0x4323a6
  43230b:	cmp    BYTE PTR [eax+0x6],0x3
  43230f:	ja     0x4323a6
  432315:	test   BYTE PTR [esi+0x4],0x40
  432319:	je     0x4323a6
  43231f:	jmp    0x4320c1
  432324:	mov    ax,WORD PTR [esi+0x2]
  432328:	xor    ax,WORD PTR [edi+0x2]
  43232c:	mov    edx,0xf0
  432331:	and    ax,0xf
  432335:	xor    WORD PTR [edi+0x2],ax
  432339:	movzx  eax,WORD PTR [edi+0x2]
  43233d:	mov    cx,WORD PTR [esi+0x2]
  432341:	xor    cx,ax
  432344:	and    cx,dx
  432347:	xor    cx,ax
  43234a:	mov    WORD PTR [edi+0x2],cx
  43234e:	mov    ax,WORD PTR [esi+0x2]
  432352:	xor    ax,cx
  432355:	mov    edx,0x700
  43235a:	and    ax,dx
  43235d:	xor    ax,cx
  432360:	mov    WORD PTR [edi+0x2],ax
  432364:	mov    dx,WORD PTR [esi+0x2]
  432368:	xor    dx,ax
  43236b:	mov    ecx,0x800
  432370:	and    dx,cx
  432373:	xor    dx,ax
  432376:	mov    WORD PTR [edi+0x2],dx
  43237a:	mov    cx,WORD PTR [esi+0x2]
  43237e:	xor    cx,dx
  432381:	mov    eax,0x1000
  432386:	and    cx,ax
  432389:	xor    cx,dx
  43238c:	mov    WORD PTR [edi+0x2],cx
  432390:	mov    ax,WORD PTR [esi+0x2]
  432394:	xor    ax,cx
  432397:	mov    edx,0x2000
  43239c:	and    ax,dx
  43239f:	xor    ax,cx
  4323a2:	mov    WORD PTR [edi+0x2],ax
  4323a6:	push   0x0
  4323a8:	mov    edx,esi
  4323aa:	mov    ecx,edi
  4323ac:	call   0x431e18
  4323b1:	cmp    BYTE PTR [esi],0x1
  4323b4:	jne    0x4323d4
  4323b6:	movzx  eax,WORD PTR [esi+0x2]
  4323ba:	test   eax,0x1f00
  4323bf:	je     0x4323d4
  4323c1:	mov    eax,DWORD PTR [esi+0x4]
  4323c4:	test   eax,0x180000
  4323c9:	jne    0x4323d4
  4323cb:	mov    ecx,0x800
  4323d0:	and    eax,ecx
  4323d2:	or     DWORD PTR [ebx],eax
  4323d4:	mov    ecx,DWORD PTR [ebx]
  4323d6:	mov    eax,0x100
  4323db:	test   eax,ecx
  4323dd:	jne    0x4324a1
  4323e3:	test   DWORD PTR [esi+0x4],eax
  4323e6:	mov    eax,DWORD PTR [esi+0x10]
  4323e9:	je     0x432422
  4323eb:	mov    DWORD PTR [edi+0x10],eax
  4323ee:	mov    al,BYTE PTR [esi+0x1]
  4323f1:	and    ecx,0xfffcff0f
  4323f7:	mov    BYTE PTR [edi+0x1],al
  4323fa:	mov    DWORD PTR [ebx],ecx
  4323fc:	mov    eax,DWORD PTR [esi+0x4]
  4323ff:	and    eax,0x30070
  432404:	or     eax,ecx
  432406:	mov    DWORD PTR [ebx],eax
  432408:	mov    eax,DWORD PTR [esi+0x18]
  43240b:	mov    DWORD PTR [edi+0x18],eax
  43240e:	test   eax,eax
  432410:	jne    0x432419
  432412:	mov    DWORD PTR [edi+0x18],0x449418
  432419:	mov    ecx,edi
  43241b:	call   0x431d21
  432420:	jmp    0x4324a1
  432422:	test   eax,eax
  432424:	je     0x432429
  432426:	mov    DWORD PTR [edi+0x10],eax
  432429:	mov    edx,DWORD PTR [esi+0x18]
  43242c:	test   edx,edx
  43242e:	je     0x43247c
  432430:	movzx  eax,WORD PTR [edi+0x2]
  432434:	mov    ecx,0x800
  432439:	test   ecx,eax
  43243b:	je     0x432460
  43243d:	mov    ecx,0x1000
  432442:	test   ecx,eax
  432444:	je     0x432460
  432446:	test   WORD PTR [esi+0x2],cx
  43244a:	je     0x432460
  43244c:	cmp    DWORD PTR [esi+0x10],0x0
  432450:	jne    0x432460
  432452:	cmp    BYTE PTR [edi+0x1],0x0
  432456:	jne    0x4324a1
  432458:	mov    al,BYTE PTR [esi+0x1]
  43245b:	mov    BYTE PTR [edi+0x1],al
  43245e:	jmp    0x4324a1
  432460:	mov    ecx,edi
  432462:	mov    DWORD PTR [edi+0x18],edx
  432465:	call   0x431d21
  43246a:	and    DWORD PTR [ebx],0xffffdf7f
  432470:	mov    eax,DWORD PTR [esi+0x4]
  432473:	and    eax,0x2080
  432478:	or     DWORD PTR [ebx],eax
  43247a:	jmp    0x4324a1
  43247c:	cmp    DWORD PTR [edi+0x18],0x0
  432480:	jne    0x4324a1
  432482:	mov    al,BYTE PTR [esi+0x1]
  432485:	test   al,al
  432487:	je     0x43248c
  432489:	mov    BYTE PTR [edi+0x1],al
  43248c:	test   BYTE PTR [esi+0x4],0x70
  432490:	je     0x4324a1
  432492:	and    ecx,0xffffff8f
  432495:	mov    DWORD PTR [ebx],ecx
  432497:	mov    eax,DWORD PTR [esi+0x4]
  43249a:	and    eax,0x70
  43249d:	or     eax,ecx
  43249f:	mov    DWORD PTR [ebx],eax
  4324a1:	test   BYTE PTR [esi+0x4],0x3
  4324a5:	je     0x4324c3
  4324a7:	mov    ecx,DWORD PTR [ebx]
  4324a9:	test   cl,0x3
  4324ac:	jne    0x4324c3
  4324ae:	and    ecx,0xfffffffc
  4324b1:	mov    DWORD PTR [ebx],ecx
  4324b3:	mov    eax,DWORD PTR [esi+0x4]
  4324b6:	and    eax,0x3
  4324b9:	or     eax,ecx
  4324bb:	mov    DWORD PTR [ebx],eax
  4324bd:	mov    eax,DWORD PTR [esi+0x14]
  4324c0:	mov    DWORD PTR [edi+0x14],eax
  4324c3:	mov    eax,DWORD PTR [esi+0x4]
  4324c6:	and    eax,0x180708
  4324cb:	or     DWORD PTR [ebx],eax
  4324cd:	jmp    0x431fb1
  4324d2:	mov    edx,0x834
  4324d7:	xor    ecx,ecx
  4324d9:	call   0x431aff
  4324de:	pop    edi
  4324df:	pop    esi
  4324e0:	pop    ebx
  4324e1:	leave  
  4324e2:	ret    
  4324e3:	push   ebp
  4324e4:	mov    ebp,esp
  4324e6:	sub    esp,0xc
  4324e9:	push   ebx
  4324ea:	push   esi
  4324eb:	push   edi
  4324ec:	xor    bl,bl
  4324ee:	xor    bh,bh
  4324f0:	lea    esi,[ecx-0x1]
  4324f3:	push   0x4
  4324f5:	mov    DWORD PTR [ebp-0x8],ecx
  4324f8:	mov    DWORD PTR [ebp-0xc],esi
  4324fb:	pop    edi
  4324fc:	cmp    ecx,edx
  4324fe:	jae    0x43256d
  432500:	movzx  eax,BYTE PTR [ecx]
  432503:	cmp    eax,0xd
  432506:	jg     0x43253a
  432508:	je     0x43252f
  43250a:	cmp    eax,0x3
  43250d:	je     0x43252b
  43250f:	cmp    eax,edi
  432511:	jle    0x432565
  432513:	cmp    eax,0xa
  432516:	jle    0x432524
  432518:	cmp    eax,0xb
  43251b:	je     0x432564
  43251d:	cmp    eax,0xc
  432520:	je     0x432563
  432522:	jmp    0x432565
  432524:	movzx  eax,BYTE PTR [ecx+0x1]
  432528:	inc    ecx
  432529:	jmp    0x432536
  43252b:	inc    bl
  43252d:	jmp    0x432565
  43252f:	movzx  eax,BYTE PTR [ecx+0x5]
  432533:	add    ecx,0x5
  432536:	add    ecx,eax
  432538:	jmp    0x432565
  43253a:	sub    eax,0xe
  43253d:	je     0x432560
  43253f:	sub    eax,0x16
  432542:	je     0x432558
  432544:	dec    eax
  432545:	je     0x432550
  432547:	sub    eax,0x14
  43254a:	jne    0x432565
  43254c:	inc    bh
  43254e:	jmp    0x432565
  432550:	test   bl,bl
  432552:	je     0x43256a
  432554:	dec    bl
  432556:	jmp    0x432565
  432558:	test   bh,bh
  43255a:	je     0x43256a
  43255c:	dec    bh
  43255e:	jmp    0x432565
  432560:	add    ecx,0x2
  432563:	inc    ecx
  432564:	inc    ecx
  432565:	inc    ecx
  432566:	cmp    ecx,edx
  432568:	jb     0x432500
  43256a:	mov    DWORD PTR [ebp-0x8],ecx
  43256d:	mov    al,ds:0x460564
  432572:	mov    bh,BYTE PTR [ecx]
  432574:	mov    bl,BYTE PTR ds:0x45f857
  43257a:	mov    BYTE PTR [ebp-0x3],al
  43257d:	mov    al,ds:0x45f693
  432582:	mov    BYTE PTR [ebp-0x2],al
  432585:	mov    al,BYTE PTR [esi]
  432587:	mov    esi,DWORD PTR ds:0x45f6a4
  43258d:	xor    edx,edx
  43258f:	mov    BYTE PTR [ebp-0x1],al
  432592:	mov    BYTE PTR [ecx],dl
  432594:	mov    al,cl
  432596:	mov    ecx,DWORD PTR [ebp-0xc]
  432599:	sub    al,cl
  43259b:	inc    al
  43259d:	inc    BYTE PTR ds:0x45faaf
  4325a3:	mov    BYTE PTR [ecx],al
  4325a5:	mov    DWORD PTR ds:0x45f6a4,edx
  4325ab:	xor    eax,eax
  4325ad:	mov    BYTE PTR ds:0x45f857,dl
  4325b3:	mov    dl,0x2
  4325b5:	mov    ds:0x45f98c,ax
  4325bb:	call   0x42f6c1
  4325c0:	mov    cl,BYTE PTR [ebp-0x1]
  4325c3:	mov    edi,eax
  4325c5:	xor    eax,eax
  4325c7:	dec    BYTE PTR ds:0x45faaf
  4325cd:	mov    DWORD PTR ds:0x45f6a4,esi
  4325d3:	mov    esi,DWORD PTR [ebp-0x8]
  4325d6:	mov    ds:0x45f98c,ax
  4325dc:	mov    eax,DWORD PTR [ebp-0xc]
  4325df:	mov    BYTE PTR [esi],bh
  4325e1:	mov    BYTE PTR [eax],cl
  4325e3:	mov    cl,BYTE PTR [ebp-0x2]
  4325e6:	mov    BYTE PTR ds:0x45f857,bl
  4325ec:	mov    ebx,DWORD PTR [ebp+0x8]
  4325ef:	mov    BYTE PTR ds:0x45f693,cl
  4325f5:	mov    eax,DWORD PTR [ebx]
  4325f7:	mov    cl,BYTE PTR [ebp-0x3]
  4325fa:	xor    edx,edx
  4325fc:	mov    BYTE PTR ds:0x460564,cl
  432602:	mov    DWORD PTR [ebp-0xc],eax
  432605:	cmp    DWORD PTR [eax+0x8],edx
  432608:	je     0x43261b
  43260a:	mov    edx,0x7e1
  43260f:	mov    ecx,ebx
  432611:	call   0x431aff
  432616:	jmp    0x432781
  43261b:	test   edi,edi
  43261d:	jne    0x43262b
  43261f:	call   0x431f11
  432624:	mov    edi,eax
  432626:	jmp    0x4326ea
  43262b:	mov    ecx,DWORD PTR [edi+0x10]
  43262e:	mov    DWORD PTR [edi+0x8],0x20
  432635:	mov    DWORD PTR [edi+0xc],edx
  432638:	test   ecx,ecx
  43263a:	je     0x432680
  43263c:	cmp    BYTE PTR [ecx+0x6],0x3
  432640:	ja     0x432680
  432642:	mov    eax,DWORD PTR [edi+0x18]
  432645:	test   eax,eax
  432647:	je     0x432664
  432649:	test   BYTE PTR [eax+0xe],0x4
  43264d:	jne    0x43265b
  43264f:	mov    eax,DWORD PTR [eax]
  432651:	test   eax,eax
  432653:	je     0x432664
  432655:	test   BYTE PTR [eax+0xe],0x4
  432659:	je     0x432664
  43265b:	mov    DWORD PTR [edi+0x8],0x21
  432662:	jmp    0x43266b
  432664:	mov    DWORD PTR [edi+0x8],0x22
  43266b:	mov    DWORD PTR [edi+0xc],edx
  43266e:	test   BYTE PTR [ecx+0x7],0x2
  432672:	je     0x432680
  432674:	or     DWORD PTR [edi+0x8],0x80
  43267b:	mov    eax,edx
  43267d:	mov    DWORD PTR [edi+0xc],eax
  432680:	mov    cl,BYTE PTR [edi]
  432682:	cmp    cl,0x1
  432685:	jne    0x43270e
  43268b:	mov    eax,DWORD PTR [edi+0xc]
  43268e:	or     DWORD PTR [edi+0x8],0x2
  432692:	mov    edx,DWORD PTR [edi+0x8]
  432695:	mov    DWORD PTR [edi+0xc],eax
  432698:	mov    ebx,eax
  43269a:	mov    eax,edx
  43269c:	and    eax,0x2
  43269f:	or     eax,0x0
  4326a2:	je     0x4326b3
  4326a4:	test   BYTE PTR [edi+0x2],0xf
  4326a8:	jne    0x4326b3
  4326aa:	or     edx,0x8
  4326ad:	mov    DWORD PTR [edi+0x8],edx
  4326b0:	mov    DWORD PTR [edi+0xc],ebx
  4326b3:	mov    eax,DWORD PTR [edi+0x4]
  4326b6:	and    al,0x3
  4326b8:	cmp    al,0x1
  4326ba:	jne    0x4326f6
  4326bc:	cmp    DWORD PTR [edi+0x14],0x2
  4326c0:	jne    0x4326f6
  4326c2:	mov    eax,DWORD PTR [edi+0xc]
  4326c5:	or     DWORD PTR [edi+0x8],0x40
  4326c9:	mov    DWORD PTR [edi+0xc],eax
  4326cc:	mov    ebx,DWORD PTR [ebp+0x8]
  4326cf:	cmp    cl,0x2
  4326d2:	jne    0x4326ea
  4326d4:	test   DWORD PTR [edi+0x4],0x4000
  4326db:	je     0x4326ea
  4326dd:	mov    eax,DWORD PTR [edi+0xc]
  4326e0:	or     DWORD PTR [edi+0x8],0x80
  4326e7:	mov    DWORD PTR [edi+0xc],eax
  4326ea:	cmp    BYTE PTR [ebx+0xc],0x49
  4326ee:	jne    0x432741
  4326f0:	mov    BYTE PTR [edi+0x1],0x0
  4326f4:	jmp    0x432765
  4326f6:	mov    ax,WORD PTR [edi+0x2]
  4326fa:	and    ax,0xf
  4326fe:	cmp    ax,0x5
  432702:	je     0x4326c2
  432704:	push   0x4
  432706:	pop    edx
  432707:	cmp    ax,dx
  43270a:	jne    0x4326cc
  43270c:	jmp    0x4326c2
  43270e:	cmp    cl,0x2
  432711:	je     0x432739
  432713:	cmp    cl,0x4
  432716:	je     0x432739
  432718:	cmp    cl,0x6
  43271b:	jb     0x432729
  43271d:	or     DWORD PTR [edi+0x8],0x10
  432721:	mov    eax,DWORD PTR [edi+0xc]
  432724:	mov    DWORD PTR [edi+0xc],eax
  432727:	jmp    0x4326cf
  432729:	cmp    cl,0x3
  43272c:	jne    0x4326cf
  43272e:	mov    eax,DWORD PTR [edi+0x4]
  432731:	and    al,cl
  432733:	cmp    al,0x1
  432735:	jne    0x4326cf
  432737:	jmp    0x43271d
  432739:	push   0x4
  43273b:	pop    edx
  43273c:	or     DWORD PTR [edi+0x8],edx
  43273f:	jmp    0x432721
  432741:	mov    eax,DWORD PTR [edi+0x10]
  432744:	mov    BYTE PTR [edi+0x1],0x2
  432748:	test   eax,eax
  43274a:	je     0x432765
  43274c:	mov    ax,WORD PTR [eax+0x2c]
  432750:	shr    ax,1
  432753:	mov    ecx,0x700
  432758:	and    ax,cx
  43275b:	movzx  eax,ax
  43275e:	cdq    
  43275f:	or     DWORD PTR [edi+0x8],eax
  432762:	or     DWORD PTR [edi+0xc],edx
  432765:	and    DWORD PTR [edi+0x4],0xf0000000
  43276c:	and    DWORD PTR [edi+0x10],0x0
  432770:	and    DWORD PTR [edi+0x14],0x0
  432774:	mov    eax,DWORD PTR [ebp-0xc]
  432777:	and    DWORD PTR [edi+0x18],0x0
  43277b:	mov    BYTE PTR [edi],0x2
  43277e:	mov    DWORD PTR [eax+0x8],edi
  432781:	pop    edi
  432782:	mov    eax,esi
  432784:	pop    esi
  432785:	pop    ebx
  432786:	leave  
  432787:	ret    0x4
  43278a:	push   ebp
  43278b:	mov    ebp,esp
  43278d:	sub    esp,0xc
  432790:	push   ebx
  432791:	push   esi
  432792:	push   edi
  432793:	mov    edi,edx
  432795:	mov    DWORD PTR [ebp-0xc],edi
  432798:	mov    BYTE PTR [ebp-0x1],cl
  43279b:	call   0x431f11
  4327a0:	mov    cl,BYTE PTR [ebp-0x1]
  4327a3:	movzx  esi,cl
  4327a6:	mov    ebx,eax
  4327a8:	movzx  eax,BYTE PTR [esi+0x405598]
  4327af:	cmp    eax,0x15
  4327b2:	jg     0x4328e1
  4327b8:	je     0x4328ad
  4327be:	sub    eax,0x0
  4327c1:	je     0x43288f
  4327c7:	sub    eax,0x12
  4327ca:	je     0x432849
  4327cc:	dec    eax
  4327cd:	je     0x432842
  4327cf:	dec    eax
  4327d0:	jne    0x4328f0
  4327d6:	cmp    cl,0x22
  4327d9:	jne    0x4327e3
  4327db:	mov    esi,DWORD PTR ds:0x448924
  4327e1:	jmp    0x4327ee
  4327e3:	cmp    cl,0x23
  4327e6:	jne    0x4327f6
  4327e8:	mov    esi,DWORD PTR ds:0x448914
  4327ee:	mov    DWORD PTR [ebp-0x8],esi
  4327f1:	jmp    0x432bb2
  4327f6:	mov    ecx,edi
  4327f8:	call   0x445afc
  4327fd:	mov    esi,eax
  4327ff:	mov    DWORD PTR [ebp-0x8],esi
  432802:	test   esi,esi
  432804:	je     0x432828
  432806:	mov    al,BYTE PTR [esi+0x7]
  432809:	test   al,0x20
  43280b:	jne    0x432828
  43280d:	movzx  ecx,BYTE PTR [esi+0x6]
  432811:	cmp    BYTE PTR [ecx+0x406514],0x0
  432818:	je     0x432bb2
  43281e:	or     al,0x80
  432820:	mov    BYTE PTR [esi+0x7],al
  432823:	jmp    0x432bb2
  432828:	mov    eax,ds:0x45f83c
  43282d:	push   edi
  43282e:	xor    ecx,ecx
  432830:	mov    DWORD PTR [ebx],eax
  432832:	mov    DWORD PTR ds:0x45f83c,ebx
  432838:	call   0x431b2a
  43283d:	jmp    0x432f08
  432842:	mov    edx,0x877
  432847:	jmp    0x432894
  432849:	mov    BYTE PTR [ebx],0x4
  43284c:	cmp    cl,0x26
  43284f:	jb     0x432870
  432851:	cmp    cl,0x27
  432854:	jbe    0x43285e
  432856:	cmp    cl,0x28
  432859:	jne    0x432870
  43285b:	add    cl,0xfe
  43285e:	xor    eax,eax
  432860:	cmp    cl,0x27
  432863:	sete   al
  432866:	imul   eax,eax,0x1c
  432869:	add    eax,0x4493c4
  43286e:	jmp    0x43287b
  432870:	lea    eax,[esi-0xe]
  432873:	imul   eax,eax,0x1c
  432876:	add    eax,0x449418
  43287b:	mov    ecx,ebx
  43287d:	mov    DWORD PTR [ebx+0x18],eax
  432880:	call   0x431d21
  432885:	call   0x431bbe
  43288a:	jmp    0x432f06
  43288f:	mov    edx,0x7d9
  432894:	mov    eax,ds:0x45f83c
  432899:	xor    ecx,ecx
  43289b:	mov    DWORD PTR ds:0x45f83c,ebx
  4328a1:	mov    DWORD PTR [ebx],eax
  4328a3:	call   0x431aff
  4328a8:	jmp    0x432f08
  4328ad:	mov    ax,WORD PTR [ebx+0x2]
  4328b1:	and    DWORD PTR [ebx+0x4],0xf0000000
  4328b8:	mov    ecx,0xc800
  4328bd:	and    ax,cx
  4328c0:	mov    ecx,0x800
  4328c5:	or     ax,cx
  4328c8:	xor    edx,edx
  4328ca:	mov    WORD PTR [ebx],0xa0a
  4328cf:	mov    WORD PTR [ebx+0x2],ax
  4328d3:	mov    DWORD PTR [ebx+0x10],edx
  4328d6:	mov    DWORD PTR [ebx+0x14],edx
  4328d9:	mov    DWORD PTR [ebx+0x18],edx
  4328dc:	jmp    0x432f06
  4328e1:	sub    eax,0x16
  4328e4:	je     0x432aaf
  4328ea:	dec    eax
  4328eb:	je     0x432957
  4328ed:	dec    eax
  4328ee:	je     0x43292f
  4328f0:	cmp    cl,0x49
  4328f3:	je     0x4328fa
  4328f5:	cmp    cl,0x4a
  4328f8:	jne    0x432925
  4328fa:	mov    al,ds:0x460564
  4328ff:	cmp    al,0x2
  432901:	je     0x432925
  432903:	cmp    BYTE PTR ds:0x45f692,0x0
  43290a:	jne    0x432910
  43290c:	cmp    al,0x1
  43290e:	jne    0x432925
  432910:	cmp    cl,0x49
  432913:	sete   al
  432916:	dec    al
  432918:	and    al,0x2
  43291a:	mov    BYTE PTR [ebx+0x1],al
  43291d:	mov    BYTE PTR [ebx],0x2
  432920:	jmp    0x432f06
  432925:	mov    edx,0x821
  43292a:	jmp    0x432894
  43292f:	mov    eax,DWORD PTR [ebx+0x4]
  432932:	and    eax,0xf0000001
  432937:	or     eax,0x1
  43293a:	mov    DWORD PTR [ebx+0x4],eax
  43293d:	lea    eax,[esi-0xa4]
  432943:	mov    WORD PTR [ebx],0x203
  432948:	mov    DWORD PTR [ebx+0x14],eax
  43294b:	mov    DWORD PTR [ebx+0x18],0x449450
  432952:	jmp    0x432f06
  432957:	cmp    cl,0x6f
  43295a:	ja     0x43297c
  43295c:	cmp    BYTE PTR ds:0x45f838,0x0
  432963:	je     0x43296c
  432965:	mov    BYTE PTR ds:0x45f693,0x1
  43296c:	and    cl,0xf
  43296f:	mov    WORD PTR [ebx],0x107
  432974:	movzx  ecx,cl
  432977:	jmp    0x432a69
  43297c:	cmp    cl,0x73
  43297f:	ja     0x4329ba
  432981:	cmp    BYTE PTR ds:0x45f838,0x0
  432988:	je     0x432991
  43298a:	mov    BYTE PTR ds:0x45f693,0x1
  432991:	mov    ax,WORD PTR [ebx+0x2]
  432995:	movzx  ecx,cl
  432998:	add    cx,0x4
  43299c:	mov    edx,0xfff0
  4329a1:	and    ax,dx
  4329a4:	and    cx,0xf
  4329a8:	or     cx,ax
  4329ab:	mov    WORD PTR [ebx],0x107
  4329b0:	mov    eax,0x2800
  4329b5:	jmp    0x432a7d
  4329ba:	cmp    cl,0x83
  4329bd:	ja     0x4329c9
  4329bf:	mov    WORD PTR [ebx],0x206
  4329c4:	jmp    0x432a5e
  4329c9:	cmp    cl,0x93
  4329cc:	ja     0x4329e2
  4329ce:	push   0x4
  4329d0:	movzx  ecx,cl
  4329d3:	pop    eax
  4329d4:	mov    BYTE PTR [ebx],0x6
  4329d7:	mov    BYTE PTR [ebx+0x1],al
  4329da:	sub    cx,ax
  4329dd:	jmp    0x432a65
  4329e2:	cmp    cl,0xa3
  4329e5:	ja     0x432a1d
  4329e7:	mov    eax,DWORD PTR [ebx+0x4]
  4329ea:	and    eax,0xf0000800
  4329ef:	movzx  ecx,cl
  4329f2:	mov    esi,0x800
  4329f7:	or     eax,esi
  4329f9:	mov    DWORD PTR [ebx+0x4],eax
  4329fc:	mov    ax,WORD PTR [ebx+0x2]
  432a00:	sub    cx,0x4
  432a04:	mov    edx,0xfff0
  432a09:	and    cx,0xf
  432a0d:	and    ax,dx
  432a10:	or     cx,ax
  432a13:	mov    WORD PTR [ebx],0x806
  432a18:	or     cx,si
  432a1b:	jmp    0x432a80
  432a1d:	cmp    cl,0xb3
  432a20:	ja     0x432a30
  432a22:	movzx  ecx,cl
  432a25:	mov    WORD PTR [ebx],0x80b
  432a2a:	add    cx,0x4
  432a2e:	jmp    0x432a65
  432a30:	cmp    cl,0xc3
  432a33:	ja     0x432a3c
  432a35:	mov    WORD PTR [ebx],0x100c
  432a3a:	jmp    0x432a5e
  432a3c:	cmp    cl,0xd3
  432a3f:	ja     0x432a48
  432a41:	mov    WORD PTR [ebx],0x200d
  432a46:	jmp    0x432a5e
  432a48:	cmp    cl,0xe3
  432a4b:	ja     0x432a54
  432a4d:	mov    WORD PTR [ebx],0x808
  432a52:	jmp    0x432a5e
  432a54:	cmp    cl,0xf3
  432a57:	ja     0x432a84
  432a59:	mov    WORD PTR [ebx],0x809
  432a5e:	movzx  ecx,cl
  432a61:	sub    cx,0x4
  432a65:	and    cx,0xf
  432a69:	mov    ax,WORD PTR [ebx+0x2]
  432a6d:	mov    edx,0xfff0
  432a72:	and    ax,dx
  432a75:	or     cx,ax
  432a78:	mov    eax,0x800
  432a7d:	or     cx,ax
  432a80:	mov    WORD PTR [ebx+0x2],cx
  432a84:	cmp    DWORD PTR [ebx+0x18],0x0
  432a88:	jne    0x432a96
  432a8a:	movzx  ecx,BYTE PTR [ebx+0x1]
  432a8e:	call   0x444865
  432a93:	mov    DWORD PTR [ebx+0x18],eax
  432a96:	mov    eax,0xffff
  432a9b:	cmp    WORD PTR [ebx+0x18],ax
  432a9f:	jne    0x432c74
  432aa5:	mov    edx,0x83c
  432aaa:	jmp    0x432894
  432aaf:	mov    BYTE PTR [ebx],0x2
  432ab2:	cmp    esi,0xb
  432ab5:	jg     0x432b62
  432abb:	je     0x432b5a
  432ac1:	sub    esi,0x7
  432ac4:	je     0x432af5
  432ac6:	dec    esi
  432ac7:	je     0x432b05
  432ac9:	dec    esi
  432aca:	je     0x432ae3
  432acc:	dec    esi
  432acd:	jne    0x432f06
  432ad3:	mov    ecx,edi
  432ad5:	call   0x431dea
  432ada:	and    DWORD PTR [ebx+0xc],0x0
  432ade:	jmp    0x432f03
  432ae3:	lea    edx,[ebx+0x8]
  432ae6:	mov    ecx,edi
  432ae8:	call   0x431a40
  432aed:	test   al,al
  432aef:	jne    0x432f06
  432af5:	mov    al,BYTE PTR [edi]
  432af7:	cmp    al,0x8
  432af9:	jbe    0x432b0f
  432afb:	mov    edx,0x824
  432b00:	jmp    0x432894
  432b05:	mov    edx,0x802
  432b0a:	jmp    0x432894
  432b0f:	test   al,al
  432b11:	jne    0x432b1d
  432b13:	mov    edx,0x7ff
  432b18:	jmp    0x432894
  432b1d:	xor    edx,edx
  432b1f:	mov    DWORD PTR [ebx+0x8],edx
  432b22:	mov    DWORD PTR [ebx+0xc],edx
  432b25:	lea    edx,[edi+0x1]
  432b28:	jmp    0x432b49
  432b2a:	movzx  eax,BYTE PTR [edx]
  432b2d:	mov    ecx,DWORD PTR [ebx+0x8]
  432b30:	mov    esi,DWORD PTR [ebx+0xc]
  432b33:	shld   esi,ecx,0x8
  432b37:	cdq    
  432b38:	shl    ecx,0x8
  432b3b:	add    ecx,eax
  432b3d:	adc    esi,edx
  432b3f:	mov    edx,DWORD PTR [ebp-0x8]
  432b42:	mov    DWORD PTR [ebx+0x8],ecx
  432b45:	mov    DWORD PTR [ebx+0xc],esi
  432b48:	inc    edx
  432b49:	movzx  eax,BYTE PTR [edi]
  432b4c:	add    eax,edi
  432b4e:	mov    DWORD PTR [ebp-0x8],edx
  432b51:	cmp    edx,eax
  432b53:	jbe    0x432b2a
  432b55:	jmp    0x432f06
  432b5a:	movzx  eax,BYTE PTR [edi]
  432b5d:	jmp    0x432eff
  432b62:	sub    esi,0xc
  432b65:	je     0x432efc
  432b6b:	dec    esi
  432b6c:	dec    esi
  432b6d:	je     0x432b8e
  432b6f:	sub    esi,0x12
  432b72:	je     0x432b95
  432b74:	dec    esi
  432b75:	jne    0x432f06
  432b7b:	cmp    DWORD PTR ds:0x45f994,esi
  432b81:	je     0x432b8e
  432b83:	mov    eax,ds:0x45f848
  432b88:	mov    DWORD PTR [edi],eax
  432b8a:	mov    BYTE PTR [edi-0x1],0xe
  432b8e:	mov    eax,DWORD PTR [edi]
  432b90:	jmp    0x432ada
  432b95:	cmp    DWORD PTR ds:0x45f834,0x0
  432b9c:	jne    0x432ba8
  432b9e:	mov    edx,0x7f2
  432ba3:	jmp    0x432894
  432ba8:	call   0x4443ba
  432bad:	mov    esi,eax
  432baf:	mov    DWORD PTR [ebp-0x8],eax
  432bb2:	movzx  eax,BYTE PTR [esi+0x6]
  432bb6:	cmp    eax,0xb
  432bb9:	jg     0x432dc9
  432bbf:	je     0x432dae
  432bc5:	test   eax,eax
  432bc7:	js     0x432de3
  432bcd:	cmp    eax,0x3
  432bd0:	jle    0x432e10
  432bd6:	cmp    eax,0x7
  432bd9:	je     0x432d72
  432bdf:	cmp    eax,0x8
  432be2:	je     0x432c80
  432be8:	cmp    eax,0x9
  432beb:	je     0x432c2f
  432bed:	cmp    eax,0xa
  432bf0:	jne    0x432de3
  432bf6:	test   BYTE PTR [esi+0x7],0x20
  432bfa:	je     0x432c1b
  432bfc:	mov    eax,ds:0x45f83c
  432c01:	mov    DWORD PTR [ebx],eax
  432c03:	push   esi
  432c04:	mov    DWORD PTR ds:0x45f83c,ebx
  432c0a:	mov    edx,0x7d6
  432c0f:	xor    ecx,ecx
  432c11:	call   0x431b61
  432c16:	jmp    0x432f08
  432c1b:	mov    BYTE PTR [ebx],0x4
  432c1e:	mov    eax,DWORD PTR [esi+0x1c]
  432c21:	mov    al,BYTE PTR [eax+0x10]
  432c24:	mov    BYTE PTR [ebx+0x1],al
  432c27:	mov    eax,DWORD PTR [esi+0x1c]
  432c2a:	jmp    0x43287b
  432c2f:	or     BYTE PTR [esi+0x7],0x40
  432c33:	mov    BYTE PTR [ebx],0x1
  432c36:	mov    al,BYTE PTR [esi+0x2c]
  432c39:	mov    BYTE PTR [ebx+0x1],al
  432c3c:	mov    ax,WORD PTR [ebx+0x2]
  432c40:	mov    ecx,0xfff5
  432c45:	and    ax,cx
  432c48:	mov    ecx,0x805
  432c4d:	or     ax,cx
  432c50:	mov    WORD PTR [ebx+0x2],ax
  432c54:	mov    eax,DWORD PTR [esi+0x20]
  432c57:	and    DWORD PTR [ebx+0xc],0x0
  432c5b:	mov    DWORD PTR [ebx+0x8],eax
  432c5e:	mov    eax,DWORD PTR [ebx+0x4]
  432c61:	and    eax,0xf0001800
  432c66:	or     eax,0x1800
  432c6b:	mov    DWORD PTR [ebx+0x4],eax
  432c6e:	mov    eax,DWORD PTR [esi+0x1c]
  432c71:	mov    DWORD PTR [ebx+0x18],eax
  432c74:	mov    ecx,ebx
  432c76:	call   0x431d21
  432c7b:	jmp    0x432f06
  432c80:	test   BYTE PTR [esi+0x7],0x40
  432c84:	je     0x432ccf
  432c86:	cmp    DWORD PTR ds:0x45f994,0x0
  432c8d:	je     0x432ccf
  432c8f:	cmp    BYTE PTR ds:0x45f692,0x0
  432c96:	je     0x432ccf
  432c98:	and    DWORD PTR ds:0x46386c,0x0
  432c9f:	push   0x8
  432ca1:	pop    edx
  432ca2:	mov    ecx,0x46386c
  432ca7:	mov    BYTE PTR ds:0x463870,0x0
  432cae:	call   0x4458d0
  432cb3:	mov    cl,BYTE PTR [esi+0x7]
  432cb6:	and    cl,0xbf
  432cb9:	mov    BYTE PTR [eax+0x7],cl
  432cbc:	push   0x6
  432cbe:	add    esi,0x18
  432cc1:	lea    edi,[eax+0x18]
  432cc4:	pop    ecx
  432cc5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432cc7:	mov    ecx,DWORD PTR [ebp-0xc]
  432cca:	mov    esi,DWORD PTR [ebp-0x8]
  432ccd:	mov    DWORD PTR [ecx],eax
  432ccf:	mov    eax,DWORD PTR [esi+0x2c]
  432cd2:	test   eax,eax
  432cd4:	je     0x432d10
  432cd6:	cmp    eax,0xffffffff
  432cd9:	je     0x432d10
  432cdb:	cmp    BYTE PTR [eax],0x0
  432cde:	je     0x432d10
  432ce0:	cmp    BYTE PTR ds:0x45f838,0x0
  432ce7:	push   0x8
  432ce9:	pop    ecx
  432cea:	mov    esi,eax
  432cec:	mov    edi,ebx
  432cee:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432cf0:	je     0x432d04
  432cf2:	cmp    BYTE PTR [ebx+0x1],0x1
  432cf6:	jne    0x432d04
  432cf8:	cmp    BYTE PTR [ebx],0x2
  432cfb:	je     0x432d04
  432cfd:	mov    BYTE PTR ds:0x45f693,0x1
  432d04:	mov    ecx,ebx
  432d06:	call   0x431922
  432d0b:	jmp    0x432f06
  432d10:	mov    BYTE PTR [ebx],0x2
  432d13:	mov    eax,DWORD PTR [esi+0x20]
  432d16:	mov    DWORD PTR [ebx+0x8],eax
  432d19:	mov    eax,DWORD PTR [esi+0x24]
  432d1c:	xor    edx,edx
  432d1e:	mov    DWORD PTR [ebx+0xc],eax
  432d21:	cmp    DWORD PTR [esi+0x2c],edx
  432d24:	je     0x432d48
  432d26:	mov    eax,DWORD PTR [ebx+0x4]
  432d29:	mov    ecx,DWORD PTR [ebx+0x8]
  432d2c:	and    eax,0xf0008000
  432d31:	or     eax,0x8000
  432d36:	mov    DWORD PTR [ebx+0x4],eax
  432d39:	mov    eax,DWORD PTR [ebx+0xc]
  432d3c:	neg    ecx
  432d3e:	adc    eax,edx
  432d40:	neg    eax
  432d42:	mov    DWORD PTR [ebx+0x8],ecx
  432d45:	mov    DWORD PTR [ebx+0xc],eax
  432d48:	test   BYTE PTR [esi+0x7],0x2
  432d4c:	je     0x432f06
  432d52:	or     DWORD PTR [ebx+0x4],0x4100
  432d59:	test   BYTE PTR [esi+0x8],0x4
  432d5d:	je     0x432d6a
  432d5f:	mov    eax,DWORD PTR [esi+0x28]
  432d62:	mov    DWORD PTR [ebx+0x10],eax
  432d65:	jmp    0x432f06
  432d6a:	mov    DWORD PTR [ebx+0x10],esi
  432d6d:	jmp    0x432f06
  432d72:	cmp    BYTE PTR ds:0x45f692,0x0
  432d79:	mov    eax,ds:0x45f83c
  432d7e:	mov    DWORD PTR [ebx],eax
  432d80:	mov    DWORD PTR ds:0x45f83c,ebx
  432d86:	je     0x432df0
  432d88:	push   ecx
  432d89:	push   0x2
  432d8b:	lea    edx,[edi-0x2]
  432d8e:	mov    ecx,esi
  432d90:	call   0x434576
  432d95:	test   eax,eax
  432d97:	je     0x432df0
  432d99:	xor    dl,dl
  432d9b:	mov    ecx,eax
  432d9d:	call   0x42f6c1
  432da2:	mov    BYTE PTR ds:0x45f852,0x1
  432da9:	jmp    0x432f08
  432dae:	mov    BYTE PTR [ebx],0x2
  432db1:	mov    eax,DWORD PTR [esi+0x24]
  432db4:	and    DWORD PTR [ebx+0xc],0x0
  432db8:	mov    DWORD PTR [ebx+0x8],eax
  432dbb:	mov    eax,0x4000
  432dc0:	or     WORD PTR [esi+0x22],ax
  432dc4:	jmp    0x432f06
  432dc9:	sub    eax,0xc
  432dcc:	je     0x432ef1
  432dd2:	dec    eax
  432dd3:	je     0x432eda
  432dd9:	dec    eax
  432dda:	je     0x432ed1
  432de0:	dec    eax
  432de1:	je     0x432dfb
  432de3:	mov    eax,ds:0x45f83c
  432de8:	mov    DWORD PTR [ebx],eax
  432dea:	mov    DWORD PTR ds:0x45f83c,ebx
  432df0:	push   esi
  432df1:	mov    edx,0x864
  432df6:	jmp    0x432c0f
  432dfb:	mov    al,BYTE PTR [esi+0x1c]
  432dfe:	test   al,al
  432e00:	je     0x432e77
  432e02:	cmp    al,0x1
  432e04:	je     0x432e50
  432e06:	sub    al,0x2
  432e08:	cmp    al,0x1
  432e0a:	jbe    0x432ea4
  432e10:	mov    ecx,DWORD PTR [esi+0x24]
  432e13:	test   BYTE PTR [ecx+0xe],0x8
  432e17:	je     0x432e2c
  432e19:	mov    eax,DWORD PTR [ecx+0x14]
  432e1c:	cmp    BYTE PTR [eax+0x6],0xd
  432e20:	jne    0x432e2c
  432e22:	mov    ecx,DWORD PTR [ecx+0x10]
  432e25:	call   0x444865
  432e2a:	mov    ecx,eax
  432e2c:	mov    DWORD PTR [ebx+0x18],ecx
  432e2f:	mov    ecx,ebx
  432e31:	mov    DWORD PTR [ebx+0x10],esi
  432e34:	call   0x431d21
  432e39:	or     DWORD PTR [ebx+0x4],0x900
  432e40:	test   BYTE PTR [esi+0x2c],0x1
  432e44:	je     0x432eb6
  432e46:	mov    WORD PTR [ebx],0x802
  432e4b:	jmp    0x432f06
  432e50:	mov    eax,ds:0x448924
  432e55:	mov    esi,DWORD PTR [eax+0x18]
  432e58:	test   esi,esi
  432e5a:	je     0x432ea4
  432e5c:	cmp    BYTE PTR ds:0x44899d,0x0
  432e63:	je     0x432e71
  432e65:	mov    ax,ds:0x45f990
  432e6b:	cmp    ax,WORD PTR [esi+0x30]
  432e6f:	jne    0x432ea4
  432e71:	or     BYTE PTR [esi+0x7],0x40
  432e75:	jmp    0x432e10
  432e77:	mov    eax,ds:0x448914
  432e7c:	mov    esi,DWORD PTR [eax+0x18]
  432e7f:	or     BYTE PTR [esi+0x7],0x40
  432e83:	cmp    BYTE PTR ds:0x44899d,0x0
  432e8a:	je     0x432e10
  432e8c:	mov    eax,ds:0x448914
  432e91:	mov    ecx,DWORD PTR [eax+0x18]
  432e94:	mov    ax,ds:0x45f990
  432e9a:	cmp    ax,WORD PTR [ecx+0x30]
  432e9e:	je     0x432e10
  432ea4:	mov    eax,ds:0x45f83c
  432ea9:	mov    DWORD PTR [ebx],eax
  432eab:	push   DWORD PTR ds:0x448904
  432eb1:	jmp    0x432c04
  432eb6:	cmp    BYTE PTR ds:0x45f838,0x0
  432ebd:	mov    BYTE PTR [ebx],0x1
  432ec0:	je     0x432f06
  432ec2:	cmp    BYTE PTR [ebx+0x1],0x1
  432ec6:	jne    0x432f06
  432ec8:	mov    BYTE PTR ds:0x45f693,0x1
  432ecf:	jmp    0x432f06
  432ed1:	mov    BYTE PTR [ebx],0x2
  432ed4:	movzx  eax,BYTE PTR [esi+0x1f]
  432ed8:	jmp    0x432eff
  432eda:	mov    BYTE PTR [ebx],0x2
  432edd:	movzx  ecx,BYTE PTR [esi+0x22]
  432ee1:	or     edx,0xffffffff
  432ee4:	mov    eax,edx
  432ee6:	call   0x447510
  432eeb:	not    eax
  432eed:	not    edx
  432eef:	jmp    0x432f00
  432ef1:	mov    BYTE PTR [ebx],0x4
  432ef4:	mov    eax,DWORD PTR [esi+0x18]
  432ef7:	jmp    0x43287b
  432efc:	movzx  eax,WORD PTR [edi]
  432eff:	cdq    
  432f00:	mov    DWORD PTR [ebx+0xc],edx
  432f03:	mov    DWORD PTR [ebx+0x8],eax
  432f06:	mov    eax,ebx
  432f08:	pop    edi
  432f09:	pop    esi
  432f0a:	pop    ebx
  432f0b:	leave  
  432f0c:	ret    
  432f0d:	push   ebx
  432f0e:	push   esi
  432f0f:	mov    bl,dl
  432f11:	test   ecx,ecx
  432f13:	jne    0x432f77
  432f15:	test   bl,bl
  432f17:	jne    0x432f77
  432f19:	mov    BYTE PTR ds:0x45f993,0x1
  432f20:	mov    ecx,DWORD PTR ds:0x45f9b4
  432f26:	cmp    BYTE PTR ds:0x45f99e,0x0
  432f2d:	jne    0x432f74
  432f2f:	test   bl,bl
  432f31:	jne    0x432f74
  432f33:	test   BYTE PTR ds:0x45f83b,0x1
  432f3a:	jne    0x432f74
  432f3c:	cmp    BYTE PTR ds:0x45f992,bl
  432f42:	jne    0x432f74
  432f44:	mov    eax,ds:0x460618
  432f49:	add    DWORD PTR [ecx],eax
  432f4b:	call   0x438545
  432f50:	mov    ecx,DWORD PTR ds:0x45f9b4
  432f56:	mov    eax,ds:0x460618
  432f5b:	sub    DWORD PTR [ecx],eax
  432f5d:	mov    edx,DWORD PTR ds:0x448884
  432f63:	mov    ecx,0x41f750
  432f68:	call   0x43f399
  432f6d:	or     BYTE PTR ds:0x45f83b,0x4
  432f74:	pop    esi
  432f75:	pop    ebx
  432f76:	ret    
  432f77:	cmp    BYTE PTR [ecx],0x0
  432f7a:	jne    0x432f82
  432f7c:	mov    ecx,DWORD PTR [ecx+0x1]
  432f7f:	add    ecx,0x4
  432f82:	test   bl,bl
  432f84:	sete   al
  432f87:	inc    al
  432f89:	mov    ds:0x460565,al
  432f8e:	mov    DWORD PTR ds:0x460590,ecx
  432f94:	test   ecx,ecx
  432f96:	je     0x432f20
  432f98:	call   0x428f71
  432f9d:	cmp    BYTE PTR ds:0x44e043,0x0
  432fa4:	mov    ecx,DWORD PTR ds:0x45f9b4
  432faa:	mov    esi,eax
  432fac:	je     0x432fbd
  432fae:	inc    DWORD PTR [ecx]
  432fb0:	call   0x438545
  432fb5:	mov    ecx,DWORD PTR ds:0x45f9b4
  432fbb:	dec    DWORD PTR [ecx]
  432fbd:	cmp    BYTE PTR ds:0x45f99e,0x0
  432fc4:	jne    0x432fcf
  432fc6:	cmp    BYTE PTR ds:0x45f992,0x0
  432fcd:	jne    0x432fe0
  432fcf:	test   bl,bl
  432fd1:	jne    0x432fe0
  432fd3:	test   BYTE PTR ds:0x45f83b,0x1
  432fda:	je     0x432f26
  432fe0:	mov    eax,DWORD PTR [esi+0x3]
  432fe3:	dec    eax
  432fe4:	mov    ds:0x460620,eax
  432fe9:	jmp    0x432f26
  432fee:	push   ebp
  432fef:	mov    ebp,esp
  432ff1:	cmp    BYTE PTR ds:0x45f692,0x0
  432ff8:	jne    0x433018
  432ffa:	mov    eax,ds:0x460594
  432fff:	test   eax,eax
  433001:	js     0x43300e
  433003:	inc    eax
  433004:	mov    ds:0x460594,eax
  433009:	cmp    eax,0x14
  43300c:	jle    0x433018
  43300e:	mov    ecx,0x3ef
  433013:	call   0x42f124
  433018:	push   ebx
  433019:	push   esi
  43301a:	mov    esi,DWORD PTR [ebp+0x8]
  43301d:	lea    ecx,[esi+0x7]
  433020:	call   0x433981
  433025:	cmp    BYTE PTR ds:0x45f692,0x0
  43302c:	mov    bl,al
  43302e:	je     0x43304f
  433030:	movzx  eax,BYTE PTR [esi+0x3]
  433034:	xor    ecx,ecx
  433036:	test   bl,bl
  433038:	setne  cl
  43303b:	cmp    ecx,eax
  43303d:	je     0x4330a2
  43303f:	push   0x0
  433041:	xor    edx,edx
  433043:	mov    ecx,0x1775
  433048:	call   0x42ee80
  43304d:	jmp    0x4330a2
  43304f:	mov    dl,BYTE PTR [esi]
  433051:	push   0x0
  433053:	mov    ecx,esi
  433055:	call   0x43abf1
  43305a:	test   bl,bl
  43305c:	je     0x433075
  43305e:	mov    ecx,DWORD PTR ds:0x460594
  433064:	lea    eax,[ecx-0x1]
  433067:	cmp    eax,0x14
  43306a:	jae    0x4330a8
  43306c:	mov    BYTE PTR [eax+0x460e6c],0x0
  433073:	jmp    0x433091
  433075:	mov    eax,ds:0x460594
  43307a:	xor    dl,dl
  43307c:	mov    BYTE PTR [eax+0x460e6b],0x1
  433083:	mov    ecx,DWORD PTR [esi+0x3]
  433086:	call   0x432f0d
  43308b:	mov    ecx,DWORD PTR ds:0x460594
  433091:	mov    al,ds:0x460e5c
  433096:	or     BYTE PTR [ecx+0x460e6b],al
  43309c:	xor    eax,eax
  43309e:	mov    WORD PTR [esi+0x1],ax
  4330a2:	pop    esi
  4330a3:	pop    ebx
  4330a4:	pop    ebp
  4330a5:	ret    0x4
  4330a8:	call   0x446f0c
  4330ad:	int3   
  4330ae:	push   ebp
  4330af:	mov    ebp,esp
  4330b1:	call   0x43334e
  4330b6:	test   al,al
  4330b8:	je     0x43325d
  4330be:	mov    eax,ds:0x460594
  4330c3:	xor    ecx,ecx
  4330c5:	test   BYTE PTR [eax+0x460e6b],0x80
  4330cc:	push   edi
  4330cd:	mov    edi,DWORD PTR [ebp+0x8]
  4330d0:	je     0x4330f5
  4330d2:	cmp    BYTE PTR ds:0x44886b,cl
  4330d8:	je     0x4330ee
  4330da:	push   ecx
  4330db:	xor    edx,edx
  4330dd:	mov    ecx,0x80d
  4330e2:	call   0x42ee80
  4330e7:	mov    eax,ds:0x460594
  4330ec:	xor    ecx,ecx
  4330ee:	and    BYTE PTR [eax+0x460e6b],0x7f
  4330f5:	cmp    BYTE PTR [eax+0x460e6b],0x1
  4330fc:	push   ebx
  4330fd:	push   esi
  4330fe:	jne    0x43323e
  433104:	mov    bl,BYTE PTR [edi+0x7]
  433107:	mov    bh,BYTE PTR ds:0x45f98f
  43310d:	movzx  eax,bl
  433110:	mov    BYTE PTR ds:0x45f993,cl
  433116:	mov    al,BYTE PTR [eax+0x405910]
  43311c:	mov    cl,BYTE PTR [edi+0x9]
  43311f:	mov    ds:0x4605b4,al
  433124:	movzx  eax,cl
  433127:	mov    BYTE PTR ds:0x45f98f,0x1
  43312e:	cmp    BYTE PTR [eax+edi*1+0x9],0xd
  433133:	jne    0x43313a
  433135:	dec    cl
  433137:	mov    BYTE PTR [edi+0x9],cl
  43313a:	movzx  edx,BYTE PTR [edi+0x9]
  43313e:	lea    ecx,[edi+0xa]
  433141:	call   0x434ba9
  433146:	mov    BYTE PTR ds:0x4605b4,0x0
  43314d:	mov    BYTE PTR ds:0x45f98f,bh
  433153:	mov    BYTE PTR ds:0x44e4ef,bl
  433159:	cmp    bl,0x4a
  43315c:	jae    0x433170
  43315e:	cmp    WORD PTR ds:0x45fac8,0x0
  433166:	jne    0x433231
  43316c:	xor    ebx,ebx
  43316e:	jmp    0x4331c5
  433170:	mov    edx,0x44e4f0
  433175:	mov    ecx,0x45fac8
  43317a:	call   0x442fb2
  43317f:	test   eax,eax
  433181:	jne    0x43319b
  433183:	cmp    bl,0x4e
  433186:	je     0x433191
  433188:	cmp    bl,0x4f
  43318b:	jne    0x433231
  433191:	xor    ebx,ebx
  433193:	mov    BYTE PTR ds:0x44e4f0,bl
  433199:	jmp    0x4331c5
  43319b:	cmp    bl,0x50
  43319e:	jb     0x4331be
  4331a0:	cmp    DWORD PTR [eax],0x40068
  4331a6:	jne    0x433231
  4331ac:	mov    edx,DWORD PTR ds:0x4605c4
  4331b2:	lea    ecx,[eax+0x10]
  4331b5:	call   0x442fb2
  4331ba:	test   eax,eax
  4331bc:	je     0x433231
  4331be:	xor    ebx,ebx
  4331c0:	cmp    WORD PTR [eax],bx
  4331c3:	jne    0x433231
  4331c5:	mov    ecx,DWORD PTR ds:0x460594
  4331cb:	mov    al,ds:0x460e5c
  4331d0:	or     BYTE PTR [ecx+0x460e6b],al
  4331d6:	mov    ecx,0x44e4ef
  4331db:	call   0x433981
  4331e0:	mov    dl,BYTE PTR [edi]
  4331e2:	push   ebx
  4331e3:	mov    ecx,edi
  4331e5:	test   al,al
  4331e7:	je     0x433243
  4331e9:	call   0x43abf1
  4331ee:	mov    eax,ds:0x460594
  4331f3:	dec    eax
  4331f4:	mov    BYTE PTR ds:0x45f993,bl
  4331fa:	cmp    eax,0x14
  4331fd:	jae    0x433261
  4331ff:	mov    BYTE PTR [eax+0x460e6c],bl
  433205:	mov    al,ds:0x45f83b
  43320a:	test   al,0x4
  43320c:	je     0x433228
  43320e:	call   0x438545
  433213:	mov    edx,DWORD PTR ds:0x448884
  433219:	mov    ecx,0x41f3d8
  43321e:	call   0x43f399
  433223:	mov    al,ds:0x45f83b
  433228:	and    al,0xfb
  43322a:	mov    ds:0x45f83b,al
  43322f:	jmp    0x433254
  433231:	mov    edx,DWORD PTR ds:0x460624
  433237:	call   0x42f1ef
  43323c:	jmp    0x433254
  43323e:	mov    dl,BYTE PTR [edi]
  433240:	push   ecx
  433241:	mov    ecx,edi
  433243:	mov    esi,DWORD PTR [edi+0x3]
  433246:	call   0x43abf1
  43324b:	xor    dl,dl
  43324d:	mov    ecx,esi
  43324f:	call   0x432f0d
  433254:	pop    esi
  433255:	xor    eax,eax
  433257:	pop    ebx
  433258:	mov    WORD PTR [edi+0x1],ax
  43325c:	pop    edi
  43325d:	pop    ebp
  43325e:	ret    0x4
  433261:	call   0x446f0c
  433266:	int3   
  433267:	push   ebp
  433268:	mov    ebp,esp
  43326a:	push   esi
  43326b:	mov    esi,DWORD PTR [ebp+0x8]
  43326e:	xor    eax,eax
  433270:	mov    WORD PTR [esi+0x1],ax
  433274:	call   0x43334e
  433279:	test   al,al
  43327b:	je     0x433349
  433281:	mov    eax,ds:0x460594
  433286:	lea    eax,[eax+0x460e6b]
  43328c:	test   BYTE PTR [eax],0x80
  43328f:	je     0x4332b6
  433291:	cmp    BYTE PTR ds:0x44886b,0x0
  433298:	je     0x4332a8
  43329a:	push   0x0
  43329c:	xor    edx,edx
  43329e:	mov    ecx,0x80d
  4332a3:	call   0x42ee80
  4332a8:	mov    eax,ds:0x460594
  4332ad:	lea    eax,[eax+0x460e6b]
  4332b3:	and    BYTE PTR [eax],0x7f
  4332b6:	cmp    BYTE PTR [eax],0x1
  4332b9:	push   ebx
  4332ba:	push   edi
  4332bb:	jne    0x433324
  4332bd:	movzx  ebx,BYTE PTR [esi+0x8]
  4332c1:	lea    edx,[esi+0x9]
  4332c4:	lea    ecx,[esi+0x9]
  4332c7:	add    edx,ebx
  4332c9:	jmp    0x4332d8
  4332cb:	movzx  eax,BYTE PTR [ecx]
  4332ce:	cmp    BYTE PTR [eax+0x448f88],0x20
  4332d5:	jne    0x43330f
  4332d7:	inc    ecx
  4332d8:	cmp    ecx,edx
  4332da:	jb     0x4332cb
  4332dc:	mov    al,ds:0x45f83b
  4332e1:	mov    BYTE PTR ds:0x45f993,0x0
  4332e8:	test   al,0x4
  4332ea:	je     0x433306
  4332ec:	call   0x438545
  4332f1:	mov    edx,DWORD PTR ds:0x448884
  4332f7:	mov    ecx,0x41f3d8
  4332fc:	call   0x43f399
  433301:	mov    al,ds:0x45f83b
  433306:	and    al,0xfb
  433308:	mov    ds:0x45f83b,al
  43330d:	jmp    0x43333b
  43330f:	cmp    BYTE PTR [ecx],0x3b
  433312:	je     0x4332dc
  433314:	push   ebx
  433315:	lea    edx,[esi+0x9]
  433318:	mov    ecx,0x7d8
  43331d:	call   0x42f15d
  433322:	jmp    0x433347
  433324:	mov    esi,DWORD PTR [esi+0x3]
  433327:	push   0x0
  433329:	mov    dl,0x2b
  43332b:	xor    ecx,ecx
  43332d:	call   0x43abf1
  433332:	xor    dl,dl
  433334:	mov    ecx,esi
  433336:	call   0x432f0d
  43333b:	mov    eax,ds:0x460594
  433340:	mov    BYTE PTR [eax+0x460e6b],0x2
  433347:	pop    edi
  433348:	pop    ebx
  433349:	pop    esi
  43334a:	pop    ebp
  43334b:	ret    0x4
  43334e:	mov    eax,ds:0x460594
  433353:	test   eax,eax
  433355:	jne    0x433366
  433357:	mov    ecx,0x3f2
  43335c:	call   0x42f124
  433361:	mov    eax,ds:0x460594
  433366:	cmp    BYTE PTR [eax+0x460e6b],0x2
  43336d:	jne    0x433380
  43336f:	push   0x0
  433371:	xor    edx,edx
  433373:	mov    ecx,0x7d2
  433378:	call   0x42ee80
  43337d:	xor    al,al
  43337f:	ret    
  433380:	mov    al,0x1
  433382:	ret    
  433383:	push   ebp
  433384:	mov    ebp,esp
  433386:	cmp    BYTE PTR ds:0x44f54e,0x0
  43338d:	push   esi
  43338e:	mov    esi,DWORD PTR [ebp+0x8]
  433391:	je     0x43339e
  433393:	mov    dl,BYTE PTR [esi]
  433395:	push   0x0
  433397:	mov    ecx,esi
  433399:	call   0x43abf1
  43339e:	xor    eax,eax
  4333a0:	mov    WORD PTR [esi+0x1],ax
  4333a4:	mov    eax,ds:0x460594
  4333a9:	pop    esi
  4333aa:	test   eax,eax
  4333ac:	jne    0x4333bd
  4333ae:	mov    ecx,0x3f2
  4333b3:	call   0x42f124
  4333b8:	mov    eax,ds:0x460594
  4333bd:	dec    eax
  4333be:	mov    ds:0x460594,eax
  4333c3:	mov    al,ds:0x45f83b
  4333c8:	test   al,0x4
  4333ca:	je     0x4333e6
  4333cc:	call   0x438545
  4333d1:	mov    edx,DWORD PTR ds:0x448884
  4333d7:	mov    ecx,0x41f3d8
  4333dc:	call   0x43f399
  4333e1:	mov    al,ds:0x45f83b
  4333e6:	and    al,0xfb
  4333e8:	mov    ds:0x45f83b,al
  4333ed:	pop    ebp
  4333ee:	ret    0x4
  4333f1:	push   ebp
  4333f2:	mov    ebp,esp
  4333f4:	push   esi
  4333f5:	mov    esi,DWORD PTR [ebp+0x8]
  4333f8:	lea    ecx,[esi+0x7]
  4333fb:	call   0x433981
  433400:	xor    ecx,ecx
  433402:	test   al,al
  433404:	movzx  eax,BYTE PTR [esi+0x3]
  433408:	setne  cl
  43340b:	pop    esi
  43340c:	cmp    ecx,eax
  43340e:	je     0x43341e
  433410:	push   0x0
  433412:	xor    edx,edx
  433414:	mov    ecx,0x1775
  433419:	call   0x42ee80
  43341e:	pop    ebp
  43341f:	ret    0x4
  433422:	push   esi
  433423:	mov    eax,edx
  433425:	push   edi
  433426:	mov    esi,ecx
  433428:	push   0xff
  43342d:	mov    edx,0x44ece8
  433432:	mov    ecx,eax
  433434:	call   0x42e945
  433439:	mov    edi,eax
  43343b:	test   edi,edi
  43343d:	jne    0x433443
  43343f:	mov    eax,esi
  433441:	jmp    0x43346c
  433443:	mov    al,BYTE PTR [edi]
  433445:	add    al,0x4
  433447:	mov    BYTE PTR [esi],al
  433449:	mov    BYTE PTR [esi+0x1],0x5
  43344d:	movzx  eax,BYTE PTR [edi]
  433450:	add    esi,0x2
  433453:	inc    eax
  433454:	push   eax
  433455:	push   edi
  433456:	push   esi
  433457:	call   0x447646
  43345c:	movzx  eax,BYTE PTR [edi]
  43345f:	add    eax,0x2
  433462:	mov    BYTE PTR [esi+eax*1-0x1],0x1
  433467:	add    esp,0xc
  43346a:	add    eax,esi
  43346c:	pop    edi
  43346d:	pop    esi
  43346e:	ret    
  43346f:	cmp    BYTE PTR [ecx+0x1],0xd
  433473:	je     0x433478
  433475:	xor    al,al
  433477:	ret    
  433478:	add    ecx,0x2
  43347b:	call   0x445afc
  433480:	test   eax,eax
  433482:	je     0x433475
  433484:	mov    al,BYTE PTR [eax+0x6]
  433487:	cmp    al,0x5
  433489:	je     0x43348f
  43348b:	cmp    al,0x6
  43348d:	jne    0x433475
  43348f:	mov    al,0x1
  433491:	ret    
  433492:	push   ebp
  433493:	mov    ebp,esp
  433495:	push   ebx
  433496:	push   esi
  433497:	push   edi
  433498:	mov    cl,0x2d
  43349a:	call   0x43859a
  43349f:	mov    eax,DWORD PTR [ebp+0x8]
  4334a2:	mov    edi,0x44e4ec
  4334a7:	movzx  ebx,WORD PTR [eax+0x1]
  4334ab:	lea    esi,[eax+0x3]
  4334ae:	add    ebx,eax
  4334b0:	mov    BYTE PTR ds:0x44e4e8,0x2d
  4334b7:	mov    al,BYTE PTR [esi]
  4334b9:	mov    ds:0x44e4eb,al
  4334be:	movzx  eax,BYTE PTR [esi]
  4334c1:	sub    eax,0x55
  4334c4:	inc    esi
  4334c5:	cmp    eax,0xc
  4334c8:	ja     0x43351b
  4334ca:	movzx  eax,BYTE PTR [eax+0x43364e]
  4334d1:	jmp    DWORD PTR [eax*4+0x433636]
  4334d8:	push   0x0
  4334da:	xor    edx,edx
  4334dc:	mov    ecx,0x1775
  4334e1:	call   0x42ee80
  4334e6:	jmp    0x43353e
  4334e8:	movzx  eax,BYTE PTR [esi]
  4334eb:	push   eax
  4334ec:	push   esi
  4334ed:	push   edi
  4334ee:	call   0x447646
  4334f3:	movzx  eax,BYTE PTR [esi]
  4334f6:	add    esp,0xc
  4334f9:	lea    edi,[eax+0x44e4ec]
  4334ff:	add    esi,eax
  433501:	cmp    esi,ebx
  433503:	jae    0x43353e
  433505:	mov    ecx,esi
  433507:	call   0x43346f
  43350c:	test   al,al
  43350e:	je     0x43353e
  433510:	mov    edx,esi
  433512:	mov    ecx,edi
  433514:	call   0x433422
  433519:	mov    edi,eax
  43351b:	mov    edx,DWORD PTR ds:0x448884
  433521:	mov    ecx,0x44e4e8
  433526:	sub    di,cx
  433529:	mov    WORD PTR ds:0x44e4e9,di
  433530:	call   0x43f399
  433535:	mov    eax,DWORD PTR [ebp+0x8]
  433538:	xor    ecx,ecx
  43353a:	mov    WORD PTR [eax+0x1],cx
  43353e:	pop    edi
  43353f:	pop    esi
  433540:	pop    ebx
  433541:	pop    ebp
  433542:	ret    0x4
  433545:	movzx  eax,BYTE PTR [esi+0x5]
  433549:	add    eax,0x6
  43354c:	push   eax
  43354d:	push   esi
  43354e:	push   0x44e4ed
  433553:	call   0x447646
  433558:	mov    al,BYTE PTR [esi+0x5]
  43355b:	add    al,0x6
  43355d:	mov    ds:0x44e4ec,al
  433562:	movzx  eax,BYTE PTR [esi+0x5]
  433566:	add    esi,0x6
  433569:	add    esi,eax
  43356b:	add    esp,0xc
  43356e:	lea    edi,[eax+0x44e4f3]
  433574:	cmp    esi,ebx
  433576:	jae    0x43351b
  433578:	mov    ecx,esi
  43357a:	call   0x43346f
  43357f:	test   al,al
  433581:	jne    0x433510
  433583:	jmp    0x43351b
  433585:	mov    ecx,esi
  433587:	call   0x43346f
  43358c:	test   al,al
  43358e:	je     0x4335c0
  433590:	mov    edx,esi
  433592:	mov    ecx,edi
  433594:	call   0x433422
  433599:	mov    edi,eax
  43359b:	movzx  eax,BYTE PTR [esi]
  43359e:	add    esi,eax
  4335a0:	mov    ecx,esi
  4335a2:	call   0x43346f
  4335a7:	test   al,al
  4335a9:	jne    0x4335fc
  4335ab:	movzx  eax,BYTE PTR [esi]
  4335ae:	push   eax
  4335af:	push   esi
  4335b0:	push   edi
  4335b1:	call   0x447646
  4335b6:	movzx  eax,BYTE PTR [esi]
  4335b9:	add    esp,0xc
  4335bc:	add    edi,eax
  4335be:	jmp    0x433607
  4335c0:	movzx  eax,BYTE PTR [esi]
  4335c3:	push   eax
  4335c4:	push   esi
  4335c5:	push   edi
  4335c6:	call   0x447646
  4335cb:	movzx  eax,BYTE PTR [esi]
  4335ce:	add    esp,0xc
  4335d1:	lea    edi,[eax+0x44e4ec]
  4335d7:	add    esi,eax
  4335d9:	mov    ecx,esi
  4335db:	call   0x43346f
  4335e0:	test   al,al
  4335e2:	jne    0x4335fc
  4335e4:	movzx  eax,BYTE PTR [esi]
  4335e7:	push   eax
  4335e8:	push   esi
  4335e9:	push   edi
  4335ea:	call   0x447646
  4335ef:	movzx  eax,BYTE PTR [esi]
  4335f2:	add    esp,0xc
  4335f5:	add    edi,eax
  4335f7:	jmp    0x4334ff
  4335fc:	mov    edx,esi
  4335fe:	mov    ecx,edi
  433600:	call   0x433422
  433605:	mov    edi,eax
  433607:	movzx  eax,BYTE PTR [esi]
  43360a:	add    esi,eax
  43360c:	cmp    esi,ebx
  43360e:	jae    0x43361f
  433610:	mov    ecx,esi
  433612:	call   0x43346f
  433617:	test   al,al
  433619:	jne    0x433510
  43361f:	sub    ebx,esi
  433621:	push   ebx
  433622:	push   esi
  433623:	push   edi
  433624:	call   0x447646
  433629:	add    esp,0xc
  43362c:	add    edi,ebx
  43362e:	jmp    0x43351b
  433633:	lea    ecx,[ecx+0x0]
  433636:	fdiv   DWORD PTR [ebx+eax*2]
  433639:	add    BYTE PTR [ecx],al
  43363b:	xor    eax,0x34e80043
  433640:	inc    ebx
  433641:	add    BYTE PTR [ebp+0x35],al
  433644:	inc    ebx
  433645:	add    cl,bl
  433647:	xor    eax,0x35850043
  43364c:	inc    ebx
  43364d:	add    BYTE PTR [eax],al
  43364f:	add    BYTE PTR [ecx],al
  433651:	add    al,BYTE PTR [edx]
  433653:	add    eax,DWORD PTR [ebx]
  433655:	add    al,0x4
  433657:	add    eax,0x55050505
  43365c:	mov    ebp,esp
  43365e:	sub    esp,0x6c
  433661:	mov    eax,ds:0x448858
  433666:	xor    eax,ebp
  433668:	mov    DWORD PTR [ebp-0x4],eax
  43366b:	mov    eax,DWORD PTR [ebp+0x8]
  43366e:	push   esi
  43366f:	push   edi
  433670:	movzx  edi,WORD PTR [eax+0x1]
  433674:	lea    esi,[eax+0x3]
  433677:	mov    ecx,esi
  433679:	add    edi,eax
  43367b:	call   0x433981
  433680:	test   al,al
  433682:	je     0x4337f5
  433688:	movzx  eax,BYTE PTR [esi]
  43368b:	add    eax,0x7ad
  433690:	mov    DWORD PTR [ebp-0x6c],eax
  433693:	lea    eax,[ebp-0x68]
  433696:	push   ebx
  433697:	mov    ecx,0x100
  43369c:	mov    ds:0x460e60,eax
  4336a1:	mov    ds:0x460e64,eax
  4336a6:	mov    BYTE PTR [ebp-0x68],0x0
  4336aa:	call   0x43f45b
  4336af:	mov    ebx,eax
  4336b1:	movzx  eax,BYTE PTR [esi]
  4336b4:	sub    eax,0x55
  4336b7:	inc    esi
  4336b8:	cmp    eax,0xc
  4336bb:	ja     0x4337ec
  4336c1:	jmp    DWORD PTR [eax*4+0x433807]
  4336c8:	cmp    BYTE PTR ds:0x44886b,0x0
  4336cf:	je     0x4336df
  4336d1:	push   0x0
  4336d3:	xor    edx,edx
  4336d5:	mov    ecx,0x80d
  4336da:	call   0x42ee80
  4336df:	cmp    esi,edi
  4336e1:	jb     0x4336ea
  4336e3:	mov    ecx,0x804
  4336e8:	jmp    0x433703
  4336ea:	push   0xff
  4336ef:	mov    edx,ebx
  4336f1:	mov    ecx,esi
  4336f3:	call   0x42e945
  4336f8:	mov    edx,eax
  4336fa:	mov    ecx,0x804
  4336ff:	test   edx,edx
  433701:	jne    0x433710
  433703:	xor    edx,edx
  433705:	push   edx
  433706:	call   0x42ee80
  43370b:	jmp    0x4337ec
  433710:	movzx  eax,BYTE PTR [edx]
  433713:	push   eax
  433714:	inc    edx
  433715:	call   0x42f15d
  43371a:	jmp    0x4337ec
  43371f:	cmp    BYTE PTR ds:0x460e5d,0x0
  433726:	lea    ecx,[ebp-0x54]
  433729:	je     0x433732
  43372b:	mov    BYTE PTR [ebp-0x54],0x2d
  43372f:	lea    ecx,[ebp-0x53]
  433732:	mov    edx,DWORD PTR ds:0x460e68
  433738:	push   0xa
  43373a:	push   0x0
  43373c:	call   0x42ea92
  433741:	lea    ecx,[ebp-0x54]
  433744:	sub    eax,ecx
  433746:	push   0x0
  433748:	mov    edx,eax
  43374a:	jmp    0x4337b4
  43374c:	mov    ecx,DWORD PTR [esi+0x2]
  43374f:	test   ecx,ecx
  433751:	je     0x433769
  433753:	movzx  edx,BYTE PTR [ecx+0x5]
  433757:	sub    ecx,edx
  433759:	push   0x0
  43375b:	call   0x43383b
  433760:	movzx  eax,BYTE PTR [esi+0x6]
  433764:	add    esi,0x7
  433767:	jmp    0x4337bc
  433769:	movzx  edx,BYTE PTR [esi+0x6]
  43376d:	lea    ecx,[esi+0x7]
  433770:	jmp    0x433759
  433772:	sub    DWORD PTR [ebp-0x6c],0x2
  433776:	push   0xff
  43377b:	mov    edx,ebx
  43377d:	mov    ecx,esi
  43377f:	call   0x42e945
  433784:	test   eax,eax
  433786:	je     0x4337ec
  433788:	movzx  edx,BYTE PTR [eax]
  43378b:	push   0x1
  43378d:	lea    ecx,[eax+0x1]
  433790:	call   0x43383b
  433795:	movzx  eax,BYTE PTR [esi]
  433798:	add    esi,eax
  43379a:	push   0xff
  43379f:	mov    edx,ebx
  4337a1:	mov    ecx,esi
  4337a3:	call   0x42e945
  4337a8:	test   eax,eax
  4337aa:	je     0x4337ec
  4337ac:	movzx  edx,BYTE PTR [eax]
  4337af:	push   0x1
  4337b1:	lea    ecx,[eax+0x1]
  4337b4:	call   0x43383b
  4337b9:	movzx  eax,BYTE PTR [esi]
  4337bc:	add    esi,eax
  4337be:	cmp    esi,edi
  4337c0:	jae    0x4337e1
  4337c2:	push   0xff
  4337c7:	mov    edx,ebx
  4337c9:	mov    ecx,esi
  4337cb:	call   0x42e945
  4337d0:	test   eax,eax
  4337d2:	je     0x4337e1
  4337d4:	movzx  edx,BYTE PTR [eax]
  4337d7:	push   0x0
  4337d9:	lea    ecx,[eax+0x1]
  4337dc:	call   0x43383b
  4337e1:	mov    ecx,DWORD PTR [ebp-0x6c]
  4337e4:	lea    edx,[ebp-0x68]
  4337e7:	call   0x42f1a7
  4337ec:	push   ebx
  4337ed:	call   DWORD PTR ds:0x464354
  4337f3:	pop    ecx
  4337f4:	pop    ebx
  4337f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4337f8:	pop    edi
  4337f9:	xor    ecx,ebp
  4337fb:	pop    esi
  4337fc:	call   0x446dc7
  433801:	leave  
  433802:	ret    0x4
  433805:	mov    edi,edi
  433807:	fbstp  TBYTE PTR [esi]
  433809:	inc    ebx
  43380a:	add    al,cl
  43380c:	ss inc ebx
  43380e:	add    bh,bl
  433810:	ss inc ebx
  433812:	add    BYTE PTR [edi],bl
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    BYTE PTR [edi],bl
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    BYTE PTR [ecx+0x37],ch
  43381d:	inc    ebx
  43381e:	add    BYTE PTR [edi+esi*1+0x43],cl
  433822:	add    BYTE PTR [ecx-0x65ffbcc9],bh
  433828:	aaa    
  433829:	inc    ebx
  43382a:	add    BYTE PTR [esi+0x37],dh
  43382d:	inc    ebx
  43382e:	add    BYTE PTR [esi+0x37],dh
  433831:	inc    ebx
  433832:	add    BYTE PTR [edx+0x37],dh
  433835:	inc    ebx
  433836:	add    BYTE PTR [edx+0x37],dh
  433839:	inc    ebx
  43383a:	add    BYTE PTR [ebp-0x75],dl
  43383d:	in     al,dx
  43383e:	push   ecx
  43383f:	push   ecx
  433840:	push   esi
  433841:	push   edi
  433842:	mov    edi,DWORD PTR ds:0x460e64
  433848:	mov    DWORD PTR [ebp-0x4],ecx
  43384b:	mov    ecx,DWORD PTR ds:0x460e60
  433851:	lea    esi,[edi+edx*1]
  433854:	lea    eax,[ecx+0x62]
  433857:	mov    DWORD PTR [ebp-0x8],edx
  43385a:	cmp    esi,eax
  43385c:	ja     0x43389e
  43385e:	cmp    edi,ecx
  433860:	je     0x43386a
  433862:	mov    WORD PTR [edi],0x203a
  433867:	add    edi,0x2
  43386a:	push   ebx
  43386b:	mov    bl,BYTE PTR [ebp+0x8]
  43386e:	test   bl,bl
  433870:	je     0x433876
  433872:	mov    BYTE PTR [edi],0x3c
  433875:	inc    edi
  433876:	push   edx
  433877:	push   DWORD PTR [ebp-0x4]
  43387a:	push   edi
  43387b:	call   0x447646
  433880:	add    edi,DWORD PTR [ebp-0x8]
  433883:	add    esp,0xc
  433886:	test   bl,bl
  433888:	mov    DWORD PTR ds:0x460e64,edi
  43388e:	pop    ebx
  43388f:	je     0x43389b
  433891:	mov    BYTE PTR [edi],0x3e
  433894:	inc    edi
  433895:	mov    DWORD PTR ds:0x460e64,edi
  43389b:	mov    BYTE PTR [edi],0x0
  43389e:	pop    edi
  43389f:	pop    esi
  4338a0:	leave  
  4338a1:	ret    0x4
  4338a4:	push   ebp
  4338a5:	mov    ebp,esp
  4338a7:	push   ecx
  4338a8:	push   ebx
  4338a9:	push   esi
  4338aa:	mov    esi,ecx
  4338ac:	push   edi
  4338ad:	mov    ecx,0x200
  4338b2:	mov    DWORD PTR [ebp-0x4],edx
  4338b5:	call   0x43f45b
  4338ba:	movzx  ecx,BYTE PTR [esi]
  4338bd:	mov    edi,eax
  4338bf:	push   0xff
  4338c4:	add    ecx,esi
  4338c6:	mov    edx,edi
  4338c8:	call   0x42e945
  4338cd:	mov    ebx,eax
  4338cf:	test   ebx,ebx
  4338d1:	je     0x433917
  4338d3:	push   0xff
  4338d8:	lea    edx,[edi+0x100]
  4338de:	mov    ecx,esi
  4338e0:	call   0x42e945
  4338e5:	mov    esi,eax
  4338e7:	test   esi,esi
  4338e9:	je     0x433917
  4338eb:	cmp    DWORD PTR [ebp-0x4],0x0
  4338ef:	je     0x433907
  4338f1:	movzx  ecx,BYTE PTR [esi]
  4338f4:	inc    ecx
  4338f5:	push   ecx
  4338f6:	push   ebx
  4338f7:	push   esi
  4338f8:	call   0x447640
  4338fd:	add    esp,0xc
  433900:	test   eax,eax
  433902:	setne  bl
  433905:	jmp    0x433919
  433907:	movzx  eax,BYTE PTR [esi]
  43390a:	inc    eax
  43390b:	push   eax
  43390c:	mov    edx,ebx
  43390e:	mov    ecx,esi
  433910:	call   0x445d5e
  433915:	jmp    0x433900
  433917:	mov    bl,0x1
  433919:	push   edi
  43391a:	call   DWORD PTR ds:0x464354
  433920:	pop    ecx
  433921:	pop    edi
  433922:	pop    esi
  433923:	mov    al,bl
  433925:	pop    ebx
  433926:	leave  
  433927:	ret    
  433928:	push   ebx
  433929:	push   esi
  43392a:	mov    esi,ecx
  43392c:	push   edi
  43392d:	mov    ecx,0x100
  433932:	call   0x43f45b
  433937:	mov    edi,eax
  433939:	push   0xff
  43393e:	mov    edx,edi
  433940:	mov    ecx,esi
  433942:	call   0x42e945
  433947:	test   eax,eax
  433949:	jne    0x433956
  43394b:	push   edi
  43394c:	call   DWORD PTR ds:0x464354
  433952:	xor    al,al
  433954:	jmp    0x433978
  433956:	movzx  ecx,BYTE PTR [eax]
  433959:	test   ecx,ecx
  43395b:	je     0x43396d
  43395d:	inc    eax
  43395e:	mov    dl,BYTE PTR [eax]
  433960:	cmp    dl,0x20
  433963:	je     0x43396a
  433965:	cmp    dl,0x9
  433968:	jne    0x43397d
  43396a:	dec    ecx
  43396b:	jne    0x43395d
  43396d:	mov    bl,0x1
  43396f:	push   edi
  433970:	call   DWORD PTR ds:0x464354
  433976:	mov    al,bl
  433978:	pop    ecx
  433979:	pop    edi
  43397a:	pop    esi
  43397b:	pop    ebx
  43397c:	ret    
  43397d:	xor    bl,bl
  43397f:	jmp    0x43396f
  433981:	push   ebp
  433982:	mov    ebp,esp
  433984:	and    esp,0xfffffff8
  433987:	movzx  eax,BYTE PTR [ecx]
  43398a:	xor    edx,edx
  43398c:	movzx  eax,BYTE PTR [eax+0x433ae6]
  433993:	mov    BYTE PTR ds:0x460e5c,dl
  433999:	inc    ecx
  43399a:	jmp    DWORD PTR [eax*4+0x433ae9]
  4339a1:	cmp    BYTE PTR [ecx],dl
  4339a3:	jne    0x4339b9
  4339a5:	mov    ecx,0x1389
  4339aa:	push   edx
  4339ab:	xor    edx,edx
  4339ad:	call   0x42ee80
  4339b2:	xor    al,al
  4339b4:	jmp    0x433ae5
  4339b9:	mov    edx,0x460e5d
  4339be:	call   0x431d7f
  4339c3:	cmp    BYTE PTR ds:0x460e5d,0x0
  4339ca:	mov    ecx,eax
  4339cc:	mov    DWORD PTR ds:0x460e68,ecx
  4339d2:	je     0x4339dc
  4339d4:	neg    ecx
  4339d6:	mov    DWORD PTR ds:0x460e68,ecx
  4339dc:	xor    eax,eax
  4339de:	test   ecx,ecx
  4339e0:	setne  al
  4339e3:	jmp    0x433ae5
  4339e8:	cmp    BYTE PTR [ecx],dl
  4339ea:	jne    0x433a00
  4339ec:	push   edx
  4339ed:	xor    edx,edx
  4339ef:	mov    ecx,0x1389
  4339f4:	call   0x42ee80
  4339f9:	mov    al,0x1
  4339fb:	jmp    0x433ae5
  433a00:	mov    edx,0x460e5d
  433a05:	call   0x431d7f
  433a0a:	cmp    BYTE PTR ds:0x460e5d,0x0
  433a11:	mov    ecx,eax
  433a13:	mov    DWORD PTR ds:0x460e68,ecx
  433a19:	je     0x433a23
  433a1b:	neg    ecx
  433a1d:	mov    DWORD PTR ds:0x460e68,ecx
  433a23:	xor    eax,eax
  433a25:	test   ecx,ecx
  433a27:	sete   al
  433a2a:	jmp    0x433ae5
  433a2f:	cmp    BYTE PTR [ecx],dl
  433a31:	je     0x4339b2
  433a37:	mov    al,BYTE PTR [ecx+0x1]
  433a3a:	cmp    al,0xd
  433a3c:	jne    0x433a51
  433a3e:	add    ecx,0x2
  433a41:	call   0x445afc
  433a46:	neg    eax
  433a48:	sbb    eax,eax
  433a4a:	neg    eax
  433a4c:	jmp    0x433ae5
  433a51:	cmp    al,0x5f
  433a53:	jb     0x4339b2
  433a59:	cmp    al,0xf3
  433a5b:	ja     0x4339b2
  433a61:	jmp    0x4339f9
  433a63:	cmp    BYTE PTR [ecx],dl
  433a65:	je     0x4339f9
  433a67:	mov    al,BYTE PTR [ecx+0x1]
  433a6a:	cmp    al,0xd
  433a6c:	jne    0x4339f9
  433a6e:	add    ecx,0x2
  433a71:	call   0x445afc
  433a76:	neg    eax
  433a78:	sbb    eax,eax
  433a7a:	inc    eax
  433a7b:	jmp    0x433ae5
  433a7d:	call   0x433928
  433a82:	jmp    0x433ae5
  433a84:	call   0x433928
  433a89:	xor    ecx,ecx
  433a8b:	test   al,al
  433a8d:	sete   cl
  433a90:	mov    al,cl
  433a92:	jmp    0x433ae5
  433a94:	xor    edx,edx
  433a96:	inc    edx
  433a97:	call   0x4338a4
  433a9c:	jmp    0x433ae5
  433a9e:	xor    edx,edx
  433aa0:	jmp    0x433a97
  433aa2:	xor    edx,edx
  433aa4:	inc    edx
  433aa5:	call   0x4338a4
  433aaa:	jmp    0x433a89
  433aac:	xor    edx,edx
  433aae:	jmp    0x433aa5
  433ab0:	mov    BYTE PTR ds:0x460e5c,0x80
  433ab7:	jmp    0x4339f9
  433abc:	cmp    BYTE PTR ds:0x44886b,dl
  433ac2:	je     0x433ae0
  433ac4:	cmp    BYTE PTR ds:0x45f692,dl
  433aca:	je     0x433ad6
  433acc:	cmp    BYTE PTR [ecx-0x1],0x56
  433ad0:	jne    0x4339b2
  433ad6:	mov    ecx,0x80d
  433adb:	jmp    0x4339aa
  433ae0:	mov    al,ds:0x44886a
  433ae5:	mov    esp,ebp
  433ae7:	pop    ebp
  433ae8:	ret    
  433ae9:	mov    eax,ds:0xb0004339
  433aee:	cmp    al,BYTE PTR [ebx+0x0]
  433af1:	mov    esp,0xe800433a
  433af6:	cmp    DWORD PTR [ebx+0x0],eax
  433af9:	jge    0x433b35
  433afb:	inc    ebx
  433afc:	add    BYTE PTR [edx+edi*1+0x3a2f0043],al
  433b03:	inc    ebx
  433b04:	add    BYTE PTR [ebx+0x3a],ah
  433b07:	inc    ebx
  433b08:	add    BYTE PTR [edx+edi*1+0x3a9e0043],dl
  433b0f:	inc    ebx
  433b10:	add    BYTE PTR [edx-0x53ffbcc6],ah
  433b16:	cmp    al,BYTE PTR [ebx+0x0]
  433b19:	stc    
  433b1a:	cmp    DWORD PTR [ebx+0x0],eax
  433b1d:	add    BYTE PTR [eax],al
  433b1f:	add    BYTE PTR [eax],al
  433b21:	add    BYTE PTR [ecx],al
  433b23:	add    al,BYTE PTR [ebx]
  433b25:	add    al,0x5
  433b27:	push   es
  433b28:	pop    es
  433b29:	or     BYTE PTR [ecx],cl
  433b2b:	or     cl,BYTE PTR [ebx]
  433b2d:	or     eax,0x3000201
  433b32:	add    al,0x5
  433b34:	push   es
  433b35:	pop    es
  433b36:	or     BYTE PTR [ecx],cl
  433b38:	or     cl,BYTE PTR [ebx]
  433b3a:	or     eax,0x30c0201
  433b3f:	add    BYTE PTR [edi],al
  433b41:	push   es
  433b42:	add    al,0x5
  433b44:	or     cl,BYTE PTR [eax]
  433b46:	or     ecx,DWORD PTR [ecx]
  433b48:	push   ebp
  433b49:	mov    ebp,esp
  433b4b:	sub    esp,0x214
  433b51:	mov    eax,ds:0x448858
  433b56:	xor    eax,ebp
  433b58:	mov    DWORD PTR [ebp-0x4],eax
  433b5b:	and    DWORD PTR [ebp-0x214],0x0
  433b62:	push   ebx
  433b63:	push   esi
  433b64:	push   edi
  433b65:	mov    edi,edx
  433b67:	mov    ebx,ecx
  433b69:	mov    esi,edi
  433b6b:	push   0x2
  433b6d:	mov    DWORD PTR [ebp-0x210],ebx
  433b73:	lea    ecx,[esi+0x2]
  433b76:	pop    edx
  433b77:	mov    ax,WORD PTR [esi]
  433b7a:	add    esi,edx
  433b7c:	cmp    ax,WORD PTR [ebp-0x214]
  433b83:	jne    0x433b77
  433b85:	sub    esi,ecx
  433b87:	sar    esi,1
  433b89:	inc    esi
  433b8a:	xor    ecx,ecx
  433b8c:	mov    eax,esi
  433b8e:	mul    edx
  433b90:	seto   cl
  433b93:	neg    ecx
  433b95:	or     ecx,eax
  433b97:	call   0x43f45b
  433b9c:	push   edi
  433b9d:	push   esi
  433b9e:	push   eax
  433b9f:	mov    DWORD PTR [ebx+0x8],eax
  433ba2:	call   DWORD PTR ds:0x46439c
  433ba8:	push   0x104
  433bad:	lea    eax,[ebp-0x20c]
  433bb3:	push   edi
  433bb4:	push   eax
  433bb5:	call   DWORD PTR ds:0x4643b8
  433bbb:	mov    ebx,eax
  433bbd:	add    esp,0x18
  433bc0:	test   ebx,ebx
  433bc2:	jne    0x433bc6
  433bc4:	mov    ebx,edi
  433bc6:	mov    esi,ebx
  433bc8:	push   0x2
  433bca:	lea    ecx,[esi+0x2]
  433bcd:	pop    edx
  433bce:	xor    edi,edi
  433bd0:	mov    ax,WORD PTR [esi]
  433bd3:	add    esi,edx
  433bd5:	cmp    ax,di
  433bd8:	jne    0x433bd0
  433bda:	sub    esi,ecx
  433bdc:	sar    esi,1
  433bde:	inc    esi
  433bdf:	xor    ecx,ecx
  433be1:	mov    eax,esi
  433be3:	mul    edx
  433be5:	seto   cl
  433be8:	neg    ecx
  433bea:	or     ecx,eax
  433bec:	call   0x43f45b
  433bf1:	mov    edi,DWORD PTR [ebp-0x210]
  433bf7:	push   ebx
  433bf8:	push   esi
  433bf9:	push   eax
  433bfa:	mov    DWORD PTR [edi+0xc],eax
  433bfd:	call   DWORD PTR ds:0x46439c
  433c03:	mov    ecx,DWORD PTR [edi+0x8]
  433c06:	add    esp,0xc
  433c09:	call   0x43f4c7
  433c0e:	mov    ecx,DWORD PTR [edi+0xc]
  433c11:	mov    DWORD PTR [edi+0x10],eax
  433c14:	call   0x43f4c7
  433c19:	mov    ecx,DWORD PTR [ebp-0x4]
  433c1c:	mov    DWORD PTR [edi+0x14],eax
  433c1f:	pop    edi
  433c20:	pop    esi
  433c21:	xor    ecx,ebp
  433c23:	pop    ebx
  433c24:	call   0x446dc7
  433c29:	leave  
  433c2a:	ret    
  433c2b:	push   ebp
  433c2c:	mov    ebp,esp
  433c2e:	sub    esp,0x20c
  433c34:	mov    eax,ds:0x448858
  433c39:	xor    eax,ebp
  433c3b:	mov    DWORD PTR [ebp-0x4],eax
  433c3e:	push   ebx
  433c3f:	push   esi
  433c40:	push   edi
  433c41:	xor    ebx,ebx
  433c43:	push   ebx
  433c44:	push   ebx
  433c45:	push   ebx
  433c46:	push   ebx
  433c47:	push   0xff
  433c4c:	lea    eax,[ebp-0x202]
  433c52:	push   eax
  433c53:	push   0x5
  433c55:	lea    eax,[ebp-0x20c]
  433c5b:	mov    edi,ecx
  433c5d:	push   eax
  433c5e:	push   edi
  433c5f:	call   DWORD PTR ds:0x4643ac
  433c65:	lea    ecx,[ebp-0x20c]
  433c6b:	add    esp,0x24
  433c6e:	lea    edx,[ecx+0x2]
  433c71:	mov    ax,WORD PTR [ecx]
  433c74:	add    ecx,0x2
  433c77:	cmp    ax,bx
  433c7a:	jne    0x433c71
  433c7c:	sub    ecx,edx
  433c7e:	lea    edx,[ebp-0x202]
  433c84:	sar    ecx,1
  433c86:	lea    esi,[edx+0x2]
  433c89:	mov    ax,WORD PTR [edx]
  433c8c:	add    edx,0x2
  433c8f:	cmp    ax,bx
  433c92:	jne    0x433c89
  433c94:	sub    edx,esi
  433c96:	sar    edx,1
  433c98:	lea    esi,[edx+ecx*1]
  433c9b:	add    esi,esi
  433c9d:	sar    esi,1
  433c9f:	lea    ecx,[esi*2+0x8]
  433ca6:	call   0x43f42e
  433cab:	mov    ecx,DWORD PTR ds:0x44e4d8
  433cb1:	mov    DWORD PTR [eax],ecx
  433cb3:	lea    ecx,[esi+esi*1]
  433cb6:	push   ecx
  433cb7:	mov    ds:0x44e4d8,eax
  433cbc:	add    eax,0x4
  433cbf:	push   edi
  433cc0:	push   eax
  433cc1:	call   0x447646
  433cc6:	mov    ecx,DWORD PTR [ebp-0x4]
  433cc9:	add    esp,0xc
  433ccc:	xor    ecx,ebp
  433cce:	pop    edi
  433ccf:	pop    esi
  433cd0:	pop    ebx
  433cd1:	call   0x446dc7
  433cd6:	leave  
  433cd7:	ret    
  433cd8:	push   ebp
  433cd9:	mov    ebp,esp
  433cdb:	sub    esp,0x20c
  433ce1:	mov    eax,ds:0x448858
  433ce6:	xor    eax,ebp
  433ce8:	mov    DWORD PTR [ebp-0x4],eax
  433ceb:	push   esi
  433cec:	push   edi
  433ced:	mov    edi,edx
  433cef:	test   cl,cl
  433cf1:	jne    0x433d42
  433cf3:	push   0x48
  433cf5:	pop    ecx
  433cf6:	call   0x43f42e
  433cfb:	mov    edx,edi
  433cfd:	xor    cl,cl
  433cff:	mov    esi,eax
  433d01:	call   0x429a78
  433d06:	mov    DWORD PTR [esi+0x4],eax
  433d09:	cmp    eax,0xffffffff
  433d0c:	jne    0x433d1a
  433d0e:	mov    edx,edi
  433d10:	mov    ecx,0x3e8
  433d15:	call   0x42f1c0
  433d1a:	mov    dl,0x1
  433d1c:	mov    ecx,0x1000
  433d21:	call   0x429c7c
  433d26:	mov    edx,edi
  433d28:	mov    ecx,esi
  433d2a:	mov    DWORD PTR [esi+0x3c],eax
  433d2d:	call   0x433b48
  433d32:	mov    eax,esi
  433d34:	mov    ecx,DWORD PTR [ebp-0x4]
  433d37:	pop    edi
  433d38:	xor    ecx,ebp
  433d3a:	pop    esi
  433d3b:	call   0x446dc7
  433d40:	leave  
  433d41:	ret    
  433d42:	mov    eax,ds:0x448894
  433d47:	push   ebx
  433d48:	xor    esi,esi
  433d4a:	push   esi
  433d4b:	push   esi
  433d4c:	push   esi
  433d4d:	add    eax,0x20
  433d50:	push   esi
  433d51:	mov    ds:0x45f9b4,eax
  433d56:	push   0xff
  433d5b:	lea    eax,[ebp-0x202]
  433d61:	push   eax
  433d62:	push   0x5
  433d64:	lea    eax,[ebp-0x20c]
  433d6a:	push   eax
  433d6b:	push   edi
  433d6c:	call   DWORD PTR ds:0x4643ac
  433d72:	add    esp,0x24
  433d75:	cmp    WORD PTR [ebp-0x20c],si
  433d7c:	jne    0x433e31
  433d82:	cmp    WORD PTR [ebp-0x202],0x2e
  433d8a:	je     0x433e31
  433d90:	cmp    WORD PTR [ebp-0x202],0x2f
  433d98:	je     0x433e31
  433d9e:	cmp    WORD PTR [ebp-0x202],0x5c
  433da6:	je     0x433e31
  433dac:	cmp    DWORD PTR ds:0x44e4bc,esi
  433db2:	je     0x433e31
  433db4:	mov    ebx,DWORD PTR ds:0x44e4d8
  433dba:	test   ebx,ebx
  433dbc:	je     0x433e9c
  433dc2:	push   esi
  433dc3:	push   edi
  433dc4:	lea    eax,[ebx+0x4]
  433dc7:	push   eax
  433dc8:	push   esi
  433dc9:	lea    eax,[ebp-0x20c]
  433dcf:	push   0x104
  433dd4:	push   eax
  433dd5:	call   DWORD PTR ds:0x4643d8
  433ddb:	mov    esi,DWORD PTR ds:0x460e80
  433de1:	add    esp,0x18
  433de4:	jmp    0x433e04
  433de6:	test   BYTE PTR [esi+0x2d],0x10
  433dea:	jne    0x433e02
  433dec:	push   DWORD PTR [esi+0x8]
  433def:	lea    eax,[ebp-0x20c]
  433df5:	push   eax
  433df6:	call   DWORD PTR ds:0x464364
  433dfc:	pop    ecx
  433dfd:	pop    ecx
  433dfe:	test   eax,eax
  433e00:	je     0x433e21
  433e02:	mov    esi,DWORD PTR [esi]
  433e04:	test   esi,esi
  433e06:	jne    0x433de6
  433e08:	lea    ecx,[ebp-0x20c]
  433e0e:	call   0x429be7
  433e13:	mov    esi,eax
  433e15:	test   esi,esi
  433e17:	jne    0x433e54
  433e19:	mov    ebx,DWORD PTR [ebx]
  433e1b:	test   ebx,ebx
  433e1d:	je     0x433e9c
  433e1f:	jmp    0x433dc2
  433e21:	mov    al,BYTE PTR [esi+0x2d]
  433e24:	and    al,0x10
  433e26:	or     al,0xb
  433e28:	and    DWORD PTR [esi+0x30],0x0
  433e2c:	mov    BYTE PTR [esi+0x2d],al
  433e2f:	jmp    0x433e7a
  433e31:	mov    ecx,edi
  433e33:	call   0x429be7
  433e38:	mov    esi,eax
  433e3a:	test   esi,esi
  433e3c:	je     0x433e9c
  433e3e:	push   edi
  433e3f:	lea    eax,[ebp-0x20c]
  433e45:	push   0x104
  433e4a:	push   eax
  433e4b:	call   DWORD PTR ds:0x46439c
  433e51:	add    esp,0xc
  433e54:	lea    edx,[ebp-0x20c]
  433e5a:	mov    ecx,esi
  433e5c:	call   0x433b48
  433e61:	mov    eax,ds:0x460e84
  433e66:	mov    DWORD PTR ds:0x460e84,esi
  433e6c:	test   eax,eax
  433e6e:	jne    0x433e78
  433e70:	mov    DWORD PTR ds:0x460e80,esi
  433e76:	jmp    0x433e7a
  433e78:	mov    DWORD PTR [eax],esi
  433e7a:	lea    ecx,[ebp-0x20c]
  433e80:	call   0x433c2b
  433e85:	mov    eax,ds:0x4488c4
  433e8a:	mov    ecx,DWORD PTR [esi+0x10]
  433e8d:	mov    DWORD PTR [eax+0x18],ecx
  433e90:	or     BYTE PTR [esi+0x2d],0x10
  433e94:	mov    eax,esi
  433e96:	pop    ebx
  433e97:	jmp    0x433d34
  433e9c:	mov    edx,edi
  433e9e:	mov    ecx,0x3e8
  433ea3:	call   0x42f1c0
  433ea8:	call   0x42c81b
  433ead:	int3   
  433eae:	push   ebp
  433eaf:	mov    ebp,esp
  433eb1:	push   ecx
  433eb2:	push   esi
  433eb3:	mov    esi,ecx
  433eb5:	push   edi
  433eb6:	test   BYTE PTR [esi+0x2d],0x1
  433eba:	je     0x433f48
  433ec0:	cmp    BYTE PTR ds:0x44e05a,0x0
  433ec7:	mov    edi,DWORD PTR ds:0x464354
  433ecd:	je     0x433f07
  433ecf:	mov    eax,DWORD PTR [esi+0x34]
  433ed2:	shr    eax,0xc
  433ed5:	inc    eax
  433ed6:	push   ebx
  433ed7:	movzx  ebx,ax
  433eda:	test   bx,bx
  433edd:	je     0x433f06
  433edf:	lea    eax,[esi+0x40]
  433ee2:	lea    eax,[eax+ebx*4]
  433ee5:	mov    DWORD PTR [ebp-0x4],eax
  433ee8:	mov    ecx,DWORD PTR [eax]
  433eea:	test   ecx,ecx
  433eec:	je     0x433ef5
  433eee:	push   ecx
  433eef:	call   edi
  433ef1:	mov    eax,DWORD PTR [ebp-0x4]
  433ef4:	pop    ecx
  433ef5:	add    ebx,0xffff
  433efb:	sub    eax,0x4
  433efe:	mov    DWORD PTR [ebp-0x4],eax
  433f01:	test   bx,bx
  433f04:	jne    0x433ee8
  433f06:	pop    ebx
  433f07:	mov    ecx,0x460e80
  433f0c:	cmp    DWORD PTR ds:0x460e80,esi
  433f12:	je     0x433f1a
  433f14:	mov    ecx,DWORD PTR [ecx]
  433f16:	cmp    DWORD PTR [ecx],esi
  433f18:	jne    0x433f14
  433f1a:	mov    edx,DWORD PTR [ecx]
  433f1c:	cmp    DWORD PTR ds:0x460e84,edx
  433f22:	jne    0x433f2b
  433f24:	mov    eax,DWORD PTR [edx]
  433f26:	mov    ds:0x460e84,eax
  433f2b:	mov    eax,DWORD PTR [edx]
  433f2d:	mov    DWORD PTR [ecx],eax
  433f2f:	push   DWORD PTR [esi+0x8]
  433f32:	call   edi
  433f34:	push   DWORD PTR [esi+0xc]
  433f37:	call   edi
  433f39:	push   DWORD PTR [esi+0x10]
  433f3c:	call   edi
  433f3e:	push   DWORD PTR [esi+0x14]
  433f41:	call   edi
  433f43:	add    esp,0x10
  433f46:	jmp    0x433f59
  433f48:	call   0x429cb5
  433f4d:	push   DWORD PTR [esi+0x3c]
  433f50:	mov    edi,DWORD PTR ds:0x464354
  433f56:	call   edi
  433f58:	pop    ecx
  433f59:	cmp    DWORD PTR [esi+0x4],0xffffffff
  433f5d:	je     0x433f66
  433f5f:	mov    ecx,esi
  433f61:	call   0x429b4a
  433f66:	push   esi
  433f67:	call   edi
  433f69:	pop    ecx
  433f6a:	pop    edi
  433f6b:	pop    esi
  433f6c:	leave  
  433f6d:	ret    
  433f6e:	cmp    BYTE PTR ds:0x44e05a,0x0
  433f75:	push   esi
  433f76:	mov    esi,ecx
  433f78:	je     0x433f92
  433f7a:	cmp    BYTE PTR ds:0x45f856,0x0
  433f81:	jne    0x433f92
  433f83:	mov    ecx,DWORD PTR [esi+0x30]
  433f86:	mov    eax,DWORD PTR [esi+0x3c]
  433f89:	shr    ecx,0xc
  433f8c:	mov    DWORD PTR [esi+ecx*4+0x44],eax
  433f90:	jmp    0x433fa6
  433f92:	cmp    DWORD PTR [esi+0x3c],0x0
  433f96:	je     0x433fa6
  433f98:	push   DWORD PTR [esi+0x3c]
  433f9b:	call   DWORD PTR ds:0x464354
  433fa1:	and    DWORD PTR [esi+0x3c],0x0
  433fa5:	pop    ecx
  433fa6:	and    DWORD PTR [esi+0x3c],0x0
  433faa:	pop    esi
  433fab:	ret    
  433fac:	cmp    BYTE PTR ds:0x44e05a,0x0
  433fb3:	jne    0x433fb8
  433fb5:	xor    al,al
  433fb7:	ret    
  433fb8:	push   edi
  433fb9:	mov    edi,DWORD PTR ds:0x460e80
  433fbf:	mov    BYTE PTR ds:0x45f856,0x1
  433fc6:	jmp    0x433ff2
  433fc8:	test   BYTE PTR [edi+0x2d],0x1
  433fcc:	je     0x433ff0
  433fce:	mov    eax,DWORD PTR [edi+0x34]
  433fd1:	shr    eax,0xc
  433fd4:	movzx  eax,ax
  433fd7:	mov    edx,eax
  433fd9:	xor    ecx,ecx
  433fdb:	test   edx,edx
  433fdd:	jle    0x433ff0
  433fdf:	xor    eax,eax
  433fe1:	cmp    DWORD PTR [edi+eax*4+0x44],0x0
  433fe6:	jne    0x433ffa
  433fe8:	inc    ecx
  433fe9:	movzx  eax,cx
  433fec:	cmp    eax,edx
  433fee:	jl     0x433fe1
  433ff0:	mov    edi,DWORD PTR [edi]
  433ff2:	test   edi,edi
  433ff4:	jne    0x433fc8
  433ff6:	xor    al,al
  433ff8:	pop    edi
  433ff9:	ret    
  433ffa:	push   esi
  433ffb:	movzx  esi,cx
  433ffe:	push   DWORD PTR [edi+esi*4+0x44]
  434002:	call   DWORD PTR ds:0x464354
  434008:	and    DWORD PTR [edi+esi*4+0x44],0x0
  43400d:	pop    ecx
  43400e:	pop    esi
  43400f:	mov    al,0x1
  434011:	pop    edi
  434012:	ret    
  434013:	push   ebp
  434014:	mov    ebp,esp
  434016:	sub    esp,0x18
  434019:	push   ebx
  43401a:	push   esi
  43401b:	mov    esi,DWORD PTR [ebp+0x8]
  43401e:	push   edi
  43401f:	mov    ax,WORD PTR [esi+0x1]
  434023:	push   0x3
  434025:	pop    ecx
  434026:	sub    ax,cx
  434029:	jne    0x434092
  43402b:	call   0x4342cb
  434030:	call   0x42dae7
  434035:	mov    edi,DWORD PTR ds:0x4600fc
  43403b:	mov    eax,edi
  43403d:	imul   eax,eax,0x1c
  434040:	xor    ebx,ebx
  434042:	mov    eax,DWORD PTR [eax+0x460118]
  434048:	mov    ecx,ebx
  43404a:	mov    ds:0x45f9a0,eax
  43404f:	mov    DWORD PTR ds:0x460578,ebx
  434055:	mov    DWORD PTR ds:0x4617e4,ecx
  43405b:	mov    edx,ebx
  43405d:	test   edi,edi
  43405f:	je     0x4342b4
  434065:	mov    esi,0x46010e
  43406a:	inc    ecx
  43406b:	mov    DWORD PTR ds:0x4617e4,ecx
  434071:	cmp    BYTE PTR [esi],bl
  434073:	je     0x434085
  434075:	mov    ecx,ebx
  434077:	lea    eax,[edx+0x1]
  43407a:	mov    DWORD PTR ds:0x4617e4,ecx
  434080:	mov    ds:0x460578,eax
  434085:	add    esi,0x1c
  434088:	inc    edx
  434089:	cmp    edx,edi
  43408b:	jb     0x43406a
  43408d:	jmp    0x4342b4
  434092:	mov    eax,ds:0x4600fc
  434097:	mov    dx,WORD PTR ds:0x4605bc
  43409e:	inc    eax
  43409f:	xor    ebx,ebx
  4340a1:	mov    ds:0x460578,eax
  4340a6:	mov    DWORD PTR ds:0x4617e4,ebx
  4340ac:	cmp    dx,0x14
  4340b0:	jae    0x4342bb
  4340b6:	cmp    BYTE PTR ds:0x45f692,bl
  4340bc:	jne    0x43412e
  4340be:	cmp    BYTE PTR ds:0x44e043,bl
  4340c4:	je     0x4340d9
  4340c6:	mov    eax,ds:0x45f9b4
  4340cb:	inc    DWORD PTR [eax]
  4340cd:	call   0x438545
  4340d2:	mov    eax,ds:0x45f9b4
  4340d7:	dec    DWORD PTR [eax]
  4340d9:	mov    dl,BYTE PTR [esi]
  4340db:	push   ebx
  4340dc:	mov    ecx,esi
  4340de:	call   0x43abf1
  4340e3:	lea    ecx,[esi+0x5]
  4340e6:	call   0x43f651
  4340eb:	mov    esi,eax
  4340ed:	mov    edx,esi
  4340ef:	mov    cl,0x1
  4340f1:	call   0x433cd8
  4340f6:	mov    edi,eax
  4340f8:	push   esi
  4340f9:	mov    DWORD PTR [ebp-0x4],edi
  4340fc:	call   DWORD PTR ds:0x464354
  434102:	mov    edx,DWORD PTR ds:0x448884
  434108:	pop    ecx
  434109:	push   0xb
  43410b:	pop    eax
  43410c:	lea    ecx,[ebp-0x18]
  43410f:	mov    BYTE PTR [ebp-0x18],0x32
  434113:	mov    WORD PTR [ebp-0x17],ax
  434117:	mov    DWORD PTR [ebp-0x15],edi
  43411a:	mov    DWORD PTR [ebp-0x11],ebx
  43411d:	call   0x43f399
  434122:	mov    dx,WORD PTR ds:0x4605bc
  434129:	mov    DWORD PTR [ebp-0x8],eax
  43412c:	jmp    0x434144
  43412e:	mov    ecx,DWORD PTR [esi+0x3]
  434131:	mov    DWORD PTR [ebp-0x4],ecx
  434134:	mov    al,BYTE PTR [ecx+0x2d]
  434137:	and    al,0x10
  434139:	or     al,0xb
  43413b:	mov    BYTE PTR [ecx+0x2d],al
  43413e:	mov    DWORD PTR [ecx+0x30],ebx
  434141:	mov    DWORD PTR [ebp-0x8],esi
  434144:	mov    eax,ds:0x460620
  434149:	movzx  edi,dx
  43414c:	imul   edi,edi,0x14
  43414f:	push   0x5
  434151:	add    edi,0x460ec0
  434157:	pop    ecx
  434158:	mov    esi,0x460eac
  43415d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43415f:	mov    esi,DWORD PTR [ebp-0x4]
  434162:	inc    dx
  434164:	mov    ecx,esi
  434166:	mov    DWORD PTR [ebp-0xc],eax
  434169:	mov    DWORD PTR ds:0x460620,ebx
  43416f:	mov    WORD PTR ds:0x4605bc,dx
  434176:	call   0x434b6f
  43417b:	mov    DWORD PTR ds:0x44e4bc,esi
  434181:	call   0x42dae7
  434186:	mov    eax,DWORD PTR [ebp-0x8]
  434189:	push   0x1
  43418b:	add    eax,0x7
  43418e:	push   eax
  43418f:	xor    ecx,ecx
  434191:	call   0x43d87d
  434196:	mov    eax,ds:0x4600fc
  43419b:	imul   eax,eax,0x1c
  43419e:	lea    eax,[eax+0x4600f4]
  4341a4:	mov    ds:0x45f9a0,eax
  4341a9:	cmp    BYTE PTR ds:0x45f692,bl
  4341af:	jne    0x4342b4
  4341b5:	mov    esi,DWORD PTR ds:0x460618
  4341bb:	cmp    BYTE PTR ds:0x45f850,bl
  4341c1:	jne    0x43421d
  4341c3:	call   0x438344
  4341c8:	test   al,al
  4341ca:	je     0x434214
  4341cc:	cmp    WORD PTR ds:0x45fac8,bx
  4341d3:	je     0x4341e6
  4341d5:	mov    DWORD PTR ds:0x460624,0x45fab8
  4341df:	call   0x441eb1
  4341e4:	jmp    0x4341fd
  4341e6:	push   ebx
  4341e7:	xor    dl,dl
  4341e9:	xor    ecx,ecx
  4341eb:	call   0x43abf1
  4341f0:	mov    ecx,DWORD PTR ds:0x45f9b4
  4341f6:	mov    eax,ds:0x460618
  4341fb:	add    DWORD PTR [ecx],eax
  4341fd:	cmp    BYTE PTR ds:0x44e13b,bl
  434203:	jne    0x4342c5
  434209:	mov    al,ds:0x45f850
  43420e:	test   al,al
  434210:	je     0x4341c3
  434212:	jmp    0x434219
  434214:	mov    al,ds:0x45f850
  434219:	test   al,al
  43421b:	je     0x434242
  43421d:	mov    BYTE PTR ds:0x4605b6,0x1
  434224:	jmp    0x434233
  434226:	mov    ecx,DWORD PTR ds:0x45f9b4
  43422c:	mov    eax,ds:0x460618
  434231:	add    DWORD PTR [ecx],eax
  434233:	call   0x438344
  434238:	test   al,al
  43423a:	jne    0x434226
  43423c:	mov    BYTE PTR ds:0x4605b6,bl
  434242:	mov    eax,DWORD PTR [ebp+0x8]
  434245:	push   0x3
  434247:	pop    ecx
  434248:	mov    BYTE PTR [eax],0x32
  43424b:	mov    WORD PTR [eax+0x1],cx
  43424f:	call   0x4342cb
  434254:	mov    edi,DWORD PTR ds:0x4600fc
  43425a:	mov    eax,edi
  43425c:	imul   eax,eax,0x1c
  43425f:	mov    ecx,ebx
  434261:	mov    eax,DWORD PTR [eax+0x460118]
  434267:	mov    ds:0x45f9a0,eax
  43426c:	mov    eax,DWORD PTR [ebp-0xc]
  43426f:	mov    DWORD PTR ds:0x460618,esi
  434275:	mov    ds:0x460620,eax
  43427a:	mov    DWORD PTR ds:0x460578,ebx
  434280:	mov    DWORD PTR ds:0x4617e4,ecx
  434286:	mov    edx,ebx
  434288:	test   edi,edi
  43428a:	je     0x4342b4
  43428c:	mov    esi,0x46010e
  434291:	inc    ecx
  434292:	mov    DWORD PTR ds:0x4617e4,ecx
  434298:	cmp    BYTE PTR [esi],bl
  43429a:	je     0x4342ac
  43429c:	mov    ecx,ebx
  43429e:	lea    eax,[edx+0x1]
  4342a1:	mov    DWORD PTR ds:0x4617e4,ecx
  4342a7:	mov    ds:0x460578,eax
  4342ac:	add    esi,0x1c
  4342af:	inc    edx
  4342b0:	cmp    edx,edi
  4342b2:	jb     0x434291
  4342b4:	pop    edi
  4342b5:	pop    esi
  4342b6:	pop    ebx
  4342b7:	leave  
  4342b8:	ret    0x4
  4342bb:	mov    ecx,0x3ef
  4342c0:	call   0x42f124
  4342c5:	call   0x42c81b
  4342ca:	int3   
  4342cb:	cmp    BYTE PTR ds:0x44e043,0x0
  4342d2:	je     0x4342e9
  4342d4:	cmp    BYTE PTR ds:0x45f692,0x0
  4342db:	jne    0x4342e9
  4342dd:	mov    eax,ds:0x45f9b4
  4342e2:	inc    DWORD PTR [eax]
  4342e4:	call   0x438545
  4342e9:	mov    ecx,DWORD PTR ds:0x460eac
  4342ef:	call   0x433f6e
  4342f4:	cmp    BYTE PTR ds:0x45f692,0x0
  4342fb:	jne    0x434312
  4342fd:	mov    ecx,DWORD PTR ds:0x44e4d8
  434303:	push   ecx
  434304:	mov    eax,DWORD PTR [ecx]
  434306:	mov    ds:0x44e4d8,eax
  43430b:	call   DWORD PTR ds:0x464354
  434311:	pop    ecx
  434312:	push   esi
  434313:	push   edi
  434314:	call   0x43d909
  434319:	mov    ax,ds:0x4605bc
  43431f:	mov    ecx,0xffff
  434324:	add    ax,cx
  434327:	movzx  esi,ax
  43432a:	imul   esi,esi,0x14
  43432d:	push   0x5
  43432f:	pop    ecx
  434330:	add    esi,0x460ec0
  434336:	mov    edi,0x460eac
  43433b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43433d:	mov    ds:0x4605bc,ax
  434343:	mov    eax,ds:0x460eac
  434348:	mov    ds:0x44e4bc,eax
  43434d:	mov    ecx,DWORD PTR [eax+0x10]
  434350:	mov    eax,ds:0x4488c4
  434355:	pop    edi
  434356:	mov    DWORD PTR [eax+0x18],ecx
  434359:	pop    esi
  43435a:	ret    
  43435b:	push   esi
  43435c:	mov    esi,ecx
  43435e:	mov    eax,0x45fab8
  434363:	cmp    esi,eax
  434365:	jae    0x43436b
  434367:	xor    eax,eax
  434369:	pop    esi
  43436a:	ret    
  43436b:	cmp    esi,0x4600f8
  434371:	jae    0x434367
  434373:	push   ebx
  434374:	mov    ebx,esi
  434376:	sub    ebx,eax
  434378:	mov    eax,ds:0x460e38
  43437d:	and    ebx,0xfffffff0
  434380:	mov    ecx,ebx
  434382:	sub    ecx,DWORD PTR ds:0x44f538
  434388:	add    eax,0x18
  43438b:	push   edi
  43438c:	add    ecx,eax
  43438e:	call   0x43f45b
  434393:	mov    ecx,DWORD PTR ds:0x460e38
  434399:	mov    edi,eax
  43439b:	mov    DWORD PTR [edi+0x4],esi
  43439e:	mov    esi,DWORD PTR ds:0x44f538
  4343a4:	sub    ecx,esi
  4343a6:	push   ecx
  4343a7:	mov    DWORD PTR [edi],ecx
  4343a9:	lea    ecx,[edi+0x8]
  4343ac:	push   esi
  4343ad:	push   ecx
  4343ae:	call   0x447646
  4343b3:	lea    eax,[ebx+0x10]
  4343b6:	push   eax
  4343b7:	mov    eax,DWORD PTR [edi]
  4343b9:	add    eax,0x8
  4343bc:	add    eax,edi
  4343be:	push   0x45fab8
  4343c3:	push   eax
  4343c4:	call   0x447646
  4343c9:	add    esp,0x18
  4343cc:	mov    eax,edi
  4343ce:	pop    edi
  4343cf:	pop    ebx
  4343d0:	mov    DWORD PTR ds:0x460e38,esi
  4343d6:	pop    esi
  4343d7:	ret    
  4343d8:	push   ebp
  4343d9:	mov    ebp,esp
  4343db:	push   ecx
  4343dc:	mov    eax,ecx
  4343de:	mov    DWORD PTR [ebp-0x4],eax
  4343e1:	test   eax,eax
  4343e3:	jne    0x4343e7
  4343e5:	leave  
  4343e6:	ret    
  4343e7:	push   ebx
  4343e8:	mov    ebx,DWORD PTR [eax+0x4]
  4343eb:	push   esi
  4343ec:	mov    esi,DWORD PTR ds:0x44f538
  4343f2:	push   edi
  4343f3:	mov    edi,DWORD PTR [eax]
  4343f5:	push   edi
  4343f6:	add    eax,0x8
  4343f9:	push   eax
  4343fa:	push   esi
  4343fb:	call   0x447646
  434400:	mov    ecx,DWORD PTR [ebp-0x4]
  434403:	mov    edx,0x45fab8
  434408:	mov    eax,ebx
  43440a:	sub    eax,edx
  43440c:	sar    eax,0x4
  43440f:	inc    eax
  434410:	shl    eax,0x4
  434413:	push   eax
  434414:	mov    eax,DWORD PTR [ecx]
  434416:	add    ecx,0x8
  434419:	add    ecx,eax
  43441b:	push   ecx
  43441c:	push   edx
  43441d:	call   0x447646
  434422:	push   DWORD PTR [ebp-0x4]
  434425:	lea    ecx,[esi+edi*1]
  434428:	mov    DWORD PTR ds:0x460e38,ecx
  43442e:	call   DWORD PTR ds:0x464354
  434434:	add    esp,0x1c
  434437:	mov    eax,ebx
  434439:	pop    edi
  43443a:	pop    esi
  43443b:	pop    ebx
  43443c:	leave  
  43443d:	ret    
  43443e:	push   ebp
  43443f:	mov    ebp,esp
  434441:	mov    ecx,DWORD PTR [ebp+0x8]
  434444:	push   ebx
  434445:	mov    bl,BYTE PTR ds:0x45f83a
  43444b:	lea    ecx,[ecx+0x3]
  43444e:	lea    edx,[ebp+0xb]
  434451:	mov    BYTE PTR ds:0x45f83a,0xa
  434458:	call   0x431d7f
  43445d:	lea    ecx,[eax-0x2]
  434460:	cmp    ecx,0xe
  434463:	ja     0x43446c
  434465:	mov    ds:0x45f83a,al
  43446a:	jmp    0x434480
  43446c:	push   0x0
  43446e:	xor    edx,edx
  434470:	mov    ecx,0x841
  434475:	call   0x42ee80
  43447a:	mov    BYTE PTR ds:0x45f83a,bl
  434480:	pop    ebx
  434481:	pop    ebp
  434482:	ret    0x4
  434485:	push   esi
  434486:	push   edi
  434487:	mov    edi,ecx
  434489:	mov    esi,edx
  43448b:	mov    al,BYTE PTR [edi+0x3]
  43448e:	test   al,0x40
  434490:	jne    0x43451a
  434496:	cmp    BYTE PTR [edi+0x2],0x2
  43449a:	jne    0x4344bc
  43449c:	mov    ecx,0x1ab
  4344a1:	cmp    WORD PTR [edi],cx
  4344a4:	jne    0x4344bc
  4344a6:	mov    al,ds:0x460566
  4344ab:	test   al,0x1
  4344ad:	jne    0x43451a
  4344af:	or     BYTE PTR [esi+0x8],0x1
  4344b3:	or     al,0x1
  4344b5:	mov    ds:0x460566,al
  4344ba:	jmp    0x43451a
  4344bc:	or     al,0x40
  4344be:	mov    BYTE PTR [edi+0x3],al
  4344c1:	movzx  eax,WORD PTR [esi+0x2]
  4344c5:	cmp    WORD PTR [esi],ax
  4344c8:	jb     0x43450e
  4344ca:	add    eax,0xa
  4344cd:	cmp    DWORD PTR [esi+0x4],0x0
  4344d1:	mov    WORD PTR [esi+0x2],ax
  4344d5:	jne    0x4344e7
  4344d7:	movzx  ecx,ax
  4344da:	shl    ecx,0x2
  4344dd:	call   0x43f42e
  4344e2:	mov    DWORD PTR [esi+0x4],eax
  4344e5:	jmp    0x43450e
  4344e7:	movzx  eax,ax
  4344ea:	push   ebx
  4344eb:	shl    eax,0x2
  4344ee:	push   eax
  4344ef:	push   DWORD PTR [esi+0x4]
  4344f2:	call   DWORD PTR ds:0x4643e8
  4344f8:	mov    ebx,eax
  4344fa:	pop    ecx
  4344fb:	pop    ecx
  4344fc:	test   ebx,ebx
  4344fe:	jne    0x43450a
  434500:	mov    ecx,0x3ec
  434505:	call   0x42f124
  43450a:	mov    DWORD PTR [esi+0x4],ebx
  43450d:	pop    ebx
  43450e:	movzx  ecx,WORD PTR [esi]
  434511:	mov    eax,DWORD PTR [esi+0x4]
  434514:	mov    DWORD PTR [eax+ecx*4],edi
  434517:	inc    WORD PTR [esi]
  43451a:	pop    edi
  43451b:	pop    esi
  43451c:	ret    
  43451d:	push   ebp
  43451e:	mov    ebp,esp
  434520:	push   ecx
  434521:	push   ebx
  434522:	mov    bl,BYTE PTR [ebp+0x8]
  434525:	movzx  eax,bl
  434528:	push   esi
  434529:	add    ax,0xb
  43452d:	movzx  esi,ax
  434530:	push   edi
  434531:	mov    edi,ecx
  434533:	mov    ecx,esi
  434535:	mov    DWORD PTR [ebp-0x4],edx
  434538:	call   0x43f45b
  43453d:	mov    DWORD PTR [ebp+0x8],eax
  434540:	mov    BYTE PTR [eax],0x3d
  434543:	mov    WORD PTR [eax+0x1],si
  434547:	lea    ecx,[eax+0x3]
  43454a:	movzx  eax,bl
  43454d:	push   eax
  43454e:	push   DWORD PTR [ebp-0x4]
  434551:	mov    BYTE PTR [ecx],0xd
  434554:	mov    DWORD PTR [ecx+0x1],edi
  434557:	lea    eax,[ecx+0x8]
  43455a:	mov    WORD PTR [ecx+0x5],0x500
  434560:	push   eax
  434561:	mov    BYTE PTR [ecx+0x7],bl
  434564:	call   0x447646
  434569:	mov    eax,DWORD PTR [ebp+0x8]
  43456c:	add    esp,0xc
  43456f:	pop    edi
  434570:	pop    esi
  434571:	pop    ebx
  434572:	leave  
  434573:	ret    0x4
  434576:	push   ebp
  434577:	mov    ebp,esp
  434579:	sub    esp,0x10
  43457c:	push   ebx
  43457d:	push   esi
  43457e:	mov    esi,ecx
  434580:	push   edi
  434581:	mov    ecx,0x100
  434586:	mov    edi,edx
  434588:	call   0x43f45b
  43458d:	mov    edx,DWORD PTR [esi+0x18]
  434590:	mov    ecx,eax
  434592:	mov    DWORD PTR [ebp-0x8],ecx
  434595:	lea    ebx,[edx+0x1]
  434598:	mov    al,BYTE PTR [edx]
  43459a:	inc    edx
  43459b:	test   al,al
  43459d:	jne    0x434598
  43459f:	sub    edx,ebx
  4345a1:	xor    ebx,ebx
  4345a3:	push   ebx
  4345a4:	push   ebx
  4345a5:	lea    eax,[ecx+0x100]
  4345ab:	push   eax
  4345ac:	push   ecx
  4345ad:	mov    ecx,DWORD PTR [esi+0x18]
  4345b0:	call   0x434790
  4345b5:	mov    DWORD PTR [ebp-0x10],eax
  4345b8:	test   eax,eax
  4345ba:	jne    0x4345cc
  4345bc:	push   DWORD PTR [ebp-0x8]
  4345bf:	call   DWORD PTR ds:0x464354
  4345c5:	xor    eax,eax
  4345c7:	jmp    0x434702
  4345cc:	mov    ecx,0x100
  4345d1:	call   0x43f45b
  4345d6:	mov    edx,DWORD PTR [ebp-0x10]
  4345d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4345dc:	mov    esi,DWORD PTR ds:0x460618
  4345e2:	mov    DWORD PTR [ebp-0xc],eax
  4345e5:	call   0x434ba9
  4345ea:	mov    DWORD PTR ds:0x460618,esi
  4345f0:	mov    esi,DWORD PTR [ebp-0xc]
  4345f3:	mov    edx,esi
  4345f5:	mov    ecx,0x45fac8
  4345fa:	call   0x442fb2
  4345ff:	mov    eax,DWORD PTR [ebp+0x8]
  434602:	dec    eax
  434603:	push   eax
  434604:	push   edi
  434605:	push   0x45f888
  43460a:	call   0x447646
  43460f:	mov    edx,DWORD PTR [ebp+0x8]
  434612:	add    esp,0xc
  434615:	mov    al,BYTE PTR [edi+edx*1+0x4]
  434619:	add    al,0x6
  43461b:	movzx  ecx,al
  43461e:	mov    BYTE PTR [ebp-0x1],al
  434621:	movzx  eax,BYTE PTR ds:0x45f888
  434628:	mov    DWORD PTR [ebp-0x10],eax
  43462b:	movzx  eax,BYTE PTR [esi]
  43462e:	sub    eax,ecx
  434630:	mov    DWORD PTR [ebp-0xc],ecx
  434633:	mov    ecx,DWORD PTR [ebp-0x10]
  434636:	add    eax,0xfffffffe
  434639:	add    eax,ecx
  43463b:	mov    DWORD PTR [ebp-0x10],eax
  43463e:	cmp    eax,0xff
  434643:	jbe    0x434657
  434645:	push   ebx
  434646:	xor    edx,edx
  434648:	mov    ecx,0x7fa
  43464d:	call   0x42ee80
  434652:	jmp    0x4346f1
  434657:	movzx  eax,BYTE PTR [edi]
  43465a:	cmp    BYTE PTR [eax+edi*1-0x1],0x1
  43465f:	jne    0x43466a
  434661:	cmp    BYTE PTR [ecx+0x45f887],0x1
  434668:	je     0x43466e
  43466a:	mov    BYTE PTR [eax+edi*1-0x1],bl
  43466e:	mov    cl,BYTE PTR [esi]
  434670:	movzx  eax,BYTE PTR [edi]
  434673:	cmp    cl,BYTE PTR [ebp-0x1]
  434676:	jae    0x4346a2
  434678:	mov    ebx,DWORD PTR [ebp-0xc]
  43467b:	sub    eax,ebx
  43467d:	sub    eax,edx
  43467f:	inc    eax
  434680:	push   eax
  434681:	lea    eax,[ebx-0x1]
  434684:	add    eax,edi
  434686:	add    eax,edx
  434688:	push   eax
  434689:	movzx  eax,cl
  43468c:	lea    eax,[eax+0x45f885]
  434692:	add    eax,edx
  434694:	push   eax
  434695:	call   0x447646
  43469a:	mov    edx,DWORD PTR [ebp+0x8]
  43469d:	add    esp,0xc
  4346a0:	jmp    0x4346c6
  4346a2:	lea    ecx,[edi-0x1]
  4346a5:	add    ecx,eax
  4346a7:	mov    eax,DWORD PTR [ebp-0x10]
  4346aa:	lea    ebx,[eax+0x45f887]
  4346b0:	mov    eax,DWORD PTR [ebp-0xc]
  4346b3:	add    eax,edi
  4346b5:	lea    edi,[edx-0x1]
  4346b8:	add    edi,eax
  4346ba:	jmp    0x4346c2
  4346bc:	mov    al,BYTE PTR [ecx]
  4346be:	mov    BYTE PTR [ebx],al
  4346c0:	dec    ecx
  4346c1:	dec    ebx
  4346c2:	cmp    ecx,edi
  4346c4:	jae    0x4346bc
  4346c6:	mov    eax,DWORD PTR [ebp-0x10]
  4346c9:	mov    ds:0x45f888,al
  4346ce:	test   eax,eax
  4346d0:	je     0x4346ec
  4346d2:	movzx  eax,BYTE PTR [esi]
  4346d5:	sub    eax,0x2
  4346d8:	push   eax
  4346d9:	lea    eax,[esi+0x1]
  4346dc:	push   eax
  4346dd:	lea    eax,[edx+0x45f887]
  4346e3:	push   eax
  4346e4:	call   0x447646
  4346e9:	add    esp,0xc
  4346ec:	mov    ebx,0x45f888
  4346f1:	push   esi
  4346f2:	mov    esi,DWORD PTR ds:0x464354
  4346f8:	call   esi
  4346fa:	push   DWORD PTR [ebp-0x8]
  4346fd:	call   esi
  4346ff:	pop    ecx
  434700:	mov    eax,ebx
  434702:	pop    ecx
  434703:	pop    edi
  434704:	pop    esi
  434705:	pop    ebx
  434706:	leave  
  434707:	ret    0x8
  43470a:	push   ebp
  43470b:	mov    ebp,esp
  43470d:	push   ebx
  43470e:	push   esi
  43470f:	push   edi
  434710:	mov    esi,edx
  434712:	lea    ebx,[ecx+0x1]
  434715:	jmp    0x434727
  434717:	movzx  eax,BYTE PTR [ebx]
  43471a:	mov    al,BYTE PTR [eax+0x448f88]
  434720:	sub    al,0x24
  434722:	cmp    al,0x3b
  434724:	ja     0x43472b
  434726:	inc    ebx
  434727:	cmp    ebx,esi
  434729:	jb     0x434717
  43472b:	mov    al,bl
  43472d:	sub    al,cl
  43472f:	movzx  edx,al
  434732:	call   0x445b60
  434737:	mov    edi,eax
  434739:	mov    eax,DWORD PTR [ebp+0xc]
  43473c:	mov    DWORD PTR [eax],ebx
  43473e:	test   edi,edi
  434740:	je     0x434787
  434742:	mov    al,BYTE PTR [edi+0x6]
  434745:	cmp    al,0x5
  434747:	je     0x43474d
  434749:	cmp    al,0x6
  43474b:	jne    0x434787
  43474d:	cmp    ebx,esi
  43474f:	jae    0x434785
  434751:	movzx  eax,BYTE PTR [ebx]
  434754:	cmp    BYTE PTR [eax+0x448f88],0x20
  43475b:	jne    0x434762
  43475d:	inc    ebx
  43475e:	cmp    ebx,esi
  434760:	jb     0x434751
  434762:	cmp    ebx,esi
  434764:	jae    0x434785
  434766:	cmp    BYTE PTR [ebx],0x28
  434769:	jne    0x434785
  43476b:	mov    eax,DWORD PTR [ebp+0x8]
  43476e:	push   esi
  43476f:	lea    ecx,[ebx+0x1]
  434772:	push   ebx
  434773:	mov    DWORD PTR [eax],ecx
  434775:	call   0x43f248
  43477a:	test   eax,eax
  43477c:	je     0x434789
  43477e:	mov    ecx,DWORD PTR [ebp+0xc]
  434781:	mov    DWORD PTR [ecx],eax
  434783:	jmp    0x434787
  434785:	xor    edi,edi
  434787:	mov    eax,edi
  434789:	pop    edi
  43478a:	pop    esi
  43478b:	pop    ebx
  43478c:	pop    ebp
  43478d:	ret    0x8
  434790:	push   ebp
  434791:	mov    ebp,esp
  434793:	sub    esp,0x2c
  434796:	and    DWORD PTR [ebp-0x20],0x0
  43479a:	push   ebx
  43479b:	mov    ebx,ecx
  43479d:	push   esi
  43479e:	lea    eax,[ebx+edx*1]
  4347a1:	mov    ecx,eax
  4347a3:	push   edi
  4347a4:	mov    edi,DWORD PTR [ebp+0x8]
  4347a7:	mov    DWORD PTR [ebp-0x2c],eax
  4347aa:	xor    edx,edx
  4347ac:	mov    eax,ebx
  4347ae:	mov    DWORD PTR [ebp-0x1c],ebx
  4347b1:	mov    DWORD PTR [ebp-0xc],ecx
  4347b4:	mov    DWORD PTR [ebp-0x18],edi
  4347b7:	mov    DWORD PTR [ebp-0x14],eax
  4347ba:	mov    DWORD PTR [ebp-0x10],edx
  4347bd:	mov    BYTE PTR [ebp-0x1],dl
  4347c0:	jmp    0x4347c5
  4347c2:	mov    edi,DWORD PTR [ebp+0x8]
  4347c5:	cmp    ebx,ecx
  4347c7:	jae    0x434812
  4347c9:	mov    edi,DWORD PTR [ebp-0xc]
  4347cc:	mov    dl,BYTE PTR [ebx]
  4347ce:	mov    cl,dl
  4347d0:	call   0x43f224
  4347d5:	test   al,al
  4347d7:	jne    0x434806
  4347d9:	cmp    dl,0x22
  4347dc:	je     0x4347e3
  4347de:	cmp    dl,0x27
  4347e1:	jne    0x434801
  4347e3:	cmp    BYTE PTR [ebp-0x1],0x0
  4347e7:	je     0x4347fa
  4347e9:	movzx  eax,BYTE PTR [ebp-0x2]
  4347ed:	movsx  ecx,dl
  4347f0:	cmp    ecx,eax
  4347f2:	jne    0x434801
  4347f4:	mov    BYTE PTR [ebp-0x1],0x0
  4347f8:	jmp    0x434801
  4347fa:	mov    BYTE PTR [ebp-0x1],0x1
  4347fe:	mov    BYTE PTR [ebp-0x2],dl
  434801:	inc    ebx
  434802:	cmp    ebx,edi
  434804:	jb     0x4347cc
  434806:	mov    edi,DWORD PTR [ebp+0x8]
  434809:	mov    ecx,DWORD PTR [ebp-0xc]
  43480c:	mov    edx,DWORD PTR [ebp-0x10]
  43480f:	mov    eax,DWORD PTR [ebp-0x14]
  434812:	mov    esi,DWORD PTR [ebp+0xc]
  434815:	test   edx,edx
  434817:	jne    0x43484a
  434819:	mov    edx,DWORD PTR [ebp-0x14]
  43481c:	mov    eax,ebx
  43481e:	sub    eax,edx
  434820:	lea    ecx,[eax+edi*1]
  434823:	mov    DWORD PTR [ebp+0x8],ecx
  434826:	cmp    ecx,esi
  434828:	jae    0x434b24
  43482e:	push   eax
  43482f:	push   edx
  434830:	push   edi
  434831:	call   0x447646
  434836:	mov    edi,DWORD PTR [ebp+0x8]
  434839:	mov    ecx,DWORD PTR [ebp-0xc]
  43483c:	mov    edx,DWORD PTR [ebp-0x10]
  43483f:	mov    eax,ebx
  434841:	add    esp,0xc
  434844:	mov    DWORD PTR [ebp+0x8],edi
  434847:	mov    DWORD PTR [ebp-0x14],eax
  43484a:	cmp    ebx,ecx
  43484c:	jae    0x434ad9
  434852:	lea    eax,[ebp-0x8]
  434855:	push   eax
  434856:	lea    eax,[ebp-0x28]
  434859:	mov    edx,ecx
  43485b:	push   eax
  43485c:	mov    ecx,ebx
  43485e:	call   0x43470a
  434863:	mov    DWORD PTR [ebp-0x24],eax
  434866:	test   eax,eax
  434868:	je     0x434ab8
  43486e:	mov    al,BYTE PTR [eax+0x6]
  434871:	mov    BYTE PTR [ebp-0x3],al
  434874:	cmp    al,0x7
  434876:	je     0x434884
  434878:	cmp    al,0x5
  43487a:	je     0x434884
  43487c:	cmp    al,0x6
  43487e:	jne    0x434ab8
  434884:	cmp    BYTE PTR [ebp-0x1],0x0
  434888:	mov    ecx,DWORD PTR [ebp-0x8]
  43488b:	mov    eax,DWORD PTR [ebp-0xc]
  43488e:	je     0x4348ba
  434890:	cmp    DWORD PTR [ebp+0x14],0x0
  434894:	je     0x434abe
  43489a:	cmp    ecx,eax
  43489c:	jae    0x4348a3
  43489e:	cmp    BYTE PTR [ecx],0x26
  4348a1:	je     0x4348ba
  4348a3:	mov    edx,DWORD PTR [ebp-0x1c]
  4348a6:	cmp    ebx,edx
  4348a8:	jbe    0x434abe
  4348ae:	cmp    BYTE PTR [ebx-0x1],0x26
  4348b2:	jne    0x434abe
  4348b8:	jmp    0x4348bd
  4348ba:	mov    edx,DWORD PTR [ebp-0x1c]
  4348bd:	cmp    DWORD PTR [ebp+0x14],0x0
  4348c1:	je     0x4348f0
  4348c3:	cmp    ebx,edx
  4348c5:	jbe    0x4348da
  4348c7:	cmp    BYTE PTR [ebx-0x1],0x26
  4348cb:	jne    0x4348da
  4348cd:	cmp    DWORD PTR [ebp-0x10],0x0
  4348d1:	jne    0x4348d9
  4348d3:	dec    edi
  4348d4:	mov    DWORD PTR [ebp+0x8],edi
  4348d7:	jmp    0x4348da
  4348d9:	dec    ebx
  4348da:	cmp    ecx,eax
  4348dc:	jae    0x4348f0
  4348de:	cmp    BYTE PTR [ecx],0x26
  4348e1:	jne    0x4348f0
  4348e3:	mov    edx,DWORD PTR [ebp-0x28]
  4348e6:	inc    edx
  4348e7:	inc    ecx
  4348e8:	mov    DWORD PTR [ebp-0x28],edx
  4348eb:	mov    DWORD PTR [ebp-0x8],ecx
  4348ee:	jmp    0x4348f3
  4348f0:	mov    edx,DWORD PTR [ebp-0x28]
  4348f3:	cmp    BYTE PTR [ebp-0x3],0x7
  4348f7:	jne    0x43499e
  4348fd:	mov    edx,DWORD PTR [ebp-0x24]
  434900:	mov    edx,DWORD PTR [edx+0x18]
  434903:	lea    eax,[edx+0x1]
  434906:	mov    DWORD PTR [ebp+0x8],eax
  434909:	mov    al,BYTE PTR [edx]
  43490b:	inc    edx
  43490c:	test   al,al
  43490e:	jne    0x434909
  434910:	sub    edx,DWORD PTR [ebp+0x8]
  434913:	mov    eax,DWORD PTR [ebp-0x20]
  434916:	inc    eax
  434917:	mov    DWORD PTR [ebp+0x8],edx
  43491a:	mov    DWORD PTR [ebp-0x20],eax
  43491d:	cmp    eax,0x3e8
  434922:	jg     0x434b39
  434928:	cmp    DWORD PTR [ebp-0x10],0x0
  43492c:	jne    0x434958
  43492e:	lea    ebx,[edx+edi*1]
  434931:	cmp    ebx,esi
  434933:	jae    0x434b24
  434939:	mov    eax,DWORD PTR [ebp-0x24]
  43493c:	push   edx
  43493d:	push   DWORD PTR [eax+0x18]
  434940:	push   edi
  434941:	call   0x447646
  434946:	mov    ecx,DWORD PTR [ebp-0x8]
  434949:	mov    DWORD PTR [ebp-0x10],ecx
  43494c:	mov    ecx,edi
  43494e:	mov    DWORD PTR [ebp-0x1c],edi
  434951:	add    esp,0xc
  434954:	mov    edi,ebx
  434956:	jmp    0x434990
  434958:	mov    eax,edx
  43495a:	sub    eax,ecx
  43495c:	add    eax,ebx
  43495e:	add    eax,edi
  434960:	mov    DWORD PTR [ebp-0xc],eax
  434963:	cmp    eax,esi
  434965:	jae    0x434b24
  43496b:	sub    edi,ecx
  43496d:	push   edi
  43496e:	push   ecx
  43496f:	lea    eax,[edx+ebx*1]
  434972:	push   eax
  434973:	call   DWORD PTR ds:0x464358
  434979:	push   DWORD PTR [ebp+0x8]
  43497c:	mov    eax,DWORD PTR [ebp-0x24]
  43497f:	push   DWORD PTR [eax+0x18]
  434982:	push   ebx
  434983:	call   0x447646
  434988:	mov    edi,DWORD PTR [ebp-0xc]
  43498b:	add    esp,0x18
  43498e:	mov    ecx,ebx
  434990:	mov    DWORD PTR [ebp-0x8],ecx
  434993:	mov    DWORD PTR [ebp+0x8],edi
  434996:	mov    DWORD PTR [ebp-0xc],edi
  434999:	jmp    0x434aa3
  43499e:	cmp    BYTE PTR ds:0x45f993,0x0
  4349a5:	jne    0x434aa0
  4349ab:	mov    eax,DWORD PTR [ebp-0x20]
  4349ae:	inc    eax
  4349af:	mov    DWORD PTR [ebp-0x20],eax
  4349b2:	cmp    eax,0x3e8
  4349b7:	jg     0x434b39
  4349bd:	mov    al,cl
  4349bf:	mov    ecx,DWORD PTR [ebp-0x24]
  4349c2:	sub    al,dl
  4349c4:	dec    al
  4349c6:	movzx  eax,al
  4349c9:	push   eax
  4349ca:	call   0x43451d
  4349cf:	mov    ecx,DWORD PTR [ebp+0x10]
  4349d2:	mov    edi,eax
  4349d4:	call   0x43435b
  4349d9:	movzx  ecx,BYTE PTR [edi]
  4349dc:	mov    esi,eax
  4349de:	mov    eax,ds:0x448988
  4349e3:	push   edi
  4349e4:	call   DWORD PTR [eax+ecx*4]
  4349e7:	mov    ecx,esi
  4349e9:	call   0x4343d8
  4349ee:	push   edi
  4349ef:	call   DWORD PTR ds:0x464354
  4349f5:	pop    ecx
  4349f6:	mov    ecx,DWORD PTR ds:0x45fab4
  4349fc:	test   ecx,ecx
  4349fe:	je     0x434aa0
  434a04:	mov    edx,ecx
  434a06:	lea    esi,[edx+0x1]
  434a09:	mov    al,BYTE PTR [edx]
  434a0b:	inc    edx
  434a0c:	test   al,al
  434a0e:	jne    0x434a09
  434a10:	mov    edi,DWORD PTR [ebp+0x8]
  434a13:	sub    edx,esi
  434a15:	cmp    DWORD PTR [ebp-0x10],0x0
  434a19:	mov    esi,DWORD PTR [ebp+0xc]
  434a1c:	mov    DWORD PTR [ebp-0x24],edx
  434a1f:	jne    0x434a46
  434a21:	lea    ebx,[edx+edi*1]
  434a24:	cmp    ebx,esi
  434a26:	jae    0x434b4b
  434a2c:	push   edx
  434a2d:	push   ecx
  434a2e:	push   edi
  434a2f:	call   0x447646
  434a34:	mov    ecx,DWORD PTR [ebp-0x8]
  434a37:	mov    DWORD PTR [ebp-0x10],ecx
  434a3a:	mov    ecx,edi
  434a3c:	mov    DWORD PTR [ebp-0x1c],edi
  434a3f:	add    esp,0xc
  434a42:	mov    edi,ebx
  434a44:	jmp    0x434a81
  434a46:	mov    ecx,DWORD PTR [ebp-0x8]
  434a49:	mov    eax,edx
  434a4b:	sub    eax,ecx
  434a4d:	add    eax,ebx
  434a4f:	add    eax,edi
  434a51:	mov    DWORD PTR [ebp+0x8],eax
  434a54:	cmp    eax,esi
  434a56:	jae    0x434b4b
  434a5c:	sub    edi,ecx
  434a5e:	push   edi
  434a5f:	push   ecx
  434a60:	lea    eax,[edx+ebx*1]
  434a63:	push   eax
  434a64:	call   DWORD PTR ds:0x464358
  434a6a:	push   DWORD PTR [ebp-0x24]
  434a6d:	push   DWORD PTR ds:0x45fab4
  434a73:	push   ebx
  434a74:	call   0x447646
  434a79:	mov    edi,DWORD PTR [ebp+0x8]
  434a7c:	add    esp,0x18
  434a7f:	mov    ecx,ebx
  434a81:	push   DWORD PTR ds:0x45fab4
  434a87:	mov    DWORD PTR [ebp-0x8],ecx
  434a8a:	mov    DWORD PTR [ebp+0x8],edi
  434a8d:	mov    DWORD PTR [ebp-0xc],edi
  434a90:	call   DWORD PTR ds:0x464354
  434a96:	and    DWORD PTR ds:0x45fab4,0x0
  434a9d:	pop    ecx
  434a9e:	jmp    0x434aa6
  434aa0:	mov    edi,DWORD PTR [ebp+0x8]
  434aa3:	mov    esi,DWORD PTR [ebp+0xc]
  434aa6:	mov    edx,DWORD PTR [ebp-0x10]
  434aa9:	mov    ecx,DWORD PTR [ebp-0x8]
  434aac:	mov    eax,DWORD PTR [ebp-0xc]
  434aaf:	test   edx,edx
  434ab1:	jne    0x434ac7
  434ab3:	mov    DWORD PTR [ebp-0x14],ecx
  434ab6:	jmp    0x434ac7
  434ab8:	mov    ecx,DWORD PTR [ebp-0x8]
  434abb:	mov    eax,DWORD PTR [ebp-0xc]
  434abe:	mov    edx,DWORD PTR [ebp-0x10]
  434ac1:	mov    edi,DWORD PTR [ebp+0x8]
  434ac4:	mov    esi,DWORD PTR [ebp+0xc]
  434ac7:	cmp    ecx,eax
  434ac9:	mov    eax,DWORD PTR [ebp-0x14]
  434acc:	mov    ebx,ecx
  434ace:	mov    ecx,DWORD PTR [ebp-0xc]
  434ad1:	jb     0x4347c2
  434ad7:	jmp    0x434adf
  434ad9:	mov    esi,DWORD PTR [ebp+0xc]
  434adc:	mov    edi,DWORD PTR [ebp+0x8]
  434adf:	test   edx,edx
  434ae1:	je     0x434af8
  434ae3:	mov    ecx,DWORD PTR [ebp-0x2c]
  434ae6:	mov    eax,edx
  434ae8:	mov    ebx,edx
  434aea:	mov    DWORD PTR [ebp-0x1c],edx
  434aed:	xor    edx,edx
  434aef:	mov    DWORD PTR [ebp-0x14],eax
  434af2:	mov    DWORD PTR [ebp-0xc],ecx
  434af5:	mov    DWORD PTR [ebp-0x10],edx
  434af8:	cmp    ebx,ecx
  434afa:	jb     0x4347c2
  434b00:	sub    ebx,eax
  434b02:	lea    eax,[ebx+edi*1]
  434b05:	cmp    eax,esi
  434b07:	jae    0x434b24
  434b09:	mov    edx,DWORD PTR [ebp-0x14]
  434b0c:	push   ebx
  434b0d:	push   edx
  434b0e:	push   edi
  434b0f:	call   0x447646
  434b14:	add    esp,0xc
  434b17:	sub    ebx,DWORD PTR [ebp-0x18]
  434b1a:	lea    eax,[edi+ebx*1]
  434b1d:	pop    edi
  434b1e:	pop    esi
  434b1f:	pop    ebx
  434b20:	leave  
  434b21:	ret    0x10
  434b24:	push   0x0
  434b26:	xor    edx,edx
  434b28:	mov    ecx,0x7f7
  434b2d:	call   0x42ee80
  434b32:	sub    esi,DWORD PTR [ebp-0x18]
  434b35:	mov    eax,esi
  434b37:	jmp    0x434b1d
  434b39:	push   0x0
  434b3b:	xor    edx,edx
  434b3d:	mov    ecx,0x84b
  434b42:	call   0x42ee80
  434b47:	xor    eax,eax
  434b49:	jmp    0x434b1d
  434b4b:	push   0x0
  434b4d:	xor    edx,edx
  434b4f:	mov    ecx,0x7f7
  434b54:	call   0x42ee80
  434b59:	push   DWORD PTR ds:0x45fab4
  434b5f:	call   DWORD PTR ds:0x464354
  434b65:	and    DWORD PTR ds:0x45fab4,0x0
  434b6c:	pop    ecx
  434b6d:	jmp    0x434b32
  434b6f:	push   esi
  434b70:	mov    esi,ecx
  434b72:	call   0x429932
  434b77:	mov    eax,DWORD PTR [esi+0x3c]
  434b7a:	movzx  ecx,WORD PTR [esi+0x3a]
  434b7e:	lea    edx,[eax+0x200]
  434b84:	mov    ds:0x460eb0,eax
  434b89:	lea    eax,[edx+ecx*1]
  434b8c:	test   cx,cx
  434b8f:	mov    DWORD PTR ds:0x460eac,esi
  434b95:	mov    DWORD PTR ds:0x460eb4,edx
  434b9b:	mov    ds:0x460eb8,eax
  434ba0:	sete   BYTE PTR ds:0x460ebd
  434ba7:	pop    esi
  434ba8:	ret    
  434ba9:	push   ebp
  434baa:	mov    ebp,esp
  434bac:	sub    esp,0x30
  434baf:	mov    ax,ds:0x4605b0
  434bb5:	mov    ds:0x460ea4,ax
  434bbb:	mov    ax,ds:0x4605b8
  434bc1:	mov    ds:0x460ea8,ax
  434bc7:	mov    eax,ds:0x460eac
  434bcc:	mov    DWORD PTR [ebp-0xc],edx
  434bcf:	mov    dx,WORD PTR ds:0x4605bc
  434bd6:	mov    DWORD PTR [ebp-0x8],ecx
  434bd9:	mov    WORD PTR ds:0x460ea6,dx
  434be0:	test   eax,eax
  434be2:	je     0x434bf3
  434be4:	movzx  ecx,WORD PTR [eax+0x38]
  434be8:	mov    DWORD PTR [ebp-0x4],ecx
  434beb:	xor    ecx,ecx
  434bed:	mov    WORD PTR [eax+0x38],cx
  434bf1:	jmp    0x434bf9
  434bf3:	mov    eax,DWORD PTR [ebp-0xc]
  434bf6:	mov    DWORD PTR [ebp-0x4],eax
  434bf9:	push   ebx
  434bfa:	push   esi
  434bfb:	push   edi
  434bfc:	push   0x9
  434bfe:	pop    ecx
  434bff:	mov    esi,0x460e88
  434c04:	lea    edi,[ebp-0x30]
  434c07:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c09:	push   0x5
  434c0b:	pop    ecx
  434c0c:	mov    esi,0x460eac
  434c11:	lea    edi,[ebp-0x30]
  434c14:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c16:	mov    edi,DWORD PTR [ebp-0xc]
  434c19:	mov    esi,DWORD PTR [ebp-0x8]
  434c1c:	and    DWORD PTR ds:0x460eac,0x0
  434c23:	mov    bl,BYTE PTR [esi+edi*1]
  434c26:	lea    eax,[edi+0x1]
  434c29:	add    eax,esi
  434c2b:	mov    BYTE PTR [esi+edi*1],0xa
  434c2f:	mov    DWORD PTR ds:0x460eb0,esi
  434c35:	mov    DWORD PTR ds:0x460eb4,esi
  434c3b:	mov    ds:0x460eb8,eax
  434c40:	mov    WORD PTR ds:0x4605b8,dx
  434c47:	mov    BYTE PTR ds:0x460ebd,0x0
  434c4e:	call   0x438344
  434c53:	cmp    DWORD PTR ds:0x460eac,0x0
  434c5a:	mov    dl,BYTE PTR ds:0x460ebd
  434c60:	sete   al
  434c63:	push   0x9
  434c65:	pop    ecx
  434c66:	dec    al
  434c68:	and    BYTE PTR ds:0x46107f,al
  434c6e:	mov    BYTE PTR [esi+edi*1],bl
  434c71:	push   0x5
  434c73:	lea    esi,[ebp-0x30]
  434c76:	mov    edi,0x460e88
  434c7b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c7d:	pop    ecx
  434c7e:	lea    esi,[ebp-0x30]
  434c81:	mov    edi,0x460eac
  434c86:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c88:	mov    ecx,DWORD PTR [ebp-0x30]
  434c8b:	pop    edi
  434c8c:	pop    esi
  434c8d:	pop    ebx
  434c8e:	test   ecx,ecx
  434c90:	je     0x434c99
  434c92:	mov    eax,DWORD PTR [ebp-0x4]
  434c95:	mov    WORD PTR [ecx+0x38],ax
  434c99:	mov    ecx,DWORD PTR [ebp-0x14]
  434c9c:	mov    WORD PTR ds:0x4605b0,cx
  434ca3:	shr    ecx,0x10
  434ca6:	mov    WORD PTR ds:0x4605bc,cx
  434cad:	mov    cx,WORD PTR [ebp-0x10]
  434cb1:	mov    WORD PTR ds:0x4605b8,cx
  434cb8:	mov    al,dl
  434cba:	leave  
  434cbb:	ret    
  434cbc:	mov    eax,ds:0x461070
  434cc1:	mov    cl,BYTE PTR [eax]
  434cc3:	inc    eax
  434cc4:	dec    WORD PTR ds:0x461074
  434ccb:	mov    ds:0x461070,eax
  434cd0:	movzx  eax,cl
  434cd3:	mov    BYTE PTR ds:0x461077,cl
  434cd9:	mov    al,BYTE PTR [eax+0x448f88]
  434cdf:	mov    ds:0x461076,al
  434ce4:	ret    
  434ce5:	push   ebp
  434ce6:	mov    ebp,esp
  434ce8:	push   ecx
  434ce9:	mov    DWORD PTR ds:0x461070,ecx
  434cef:	call   0x434cbc
  434cf4:	movzx  eax,BYTE PTR ds:0x461077
  434cfb:	mov    ds:0x461074,ax
  434d01:	test   ax,ax
  434d04:	je     0x434e4e
  434d0a:	push   ebx
  434d0b:	call   0x434cbc
  434d10:	mov    cl,BYTE PTR ds:0x461076
  434d16:	mov    ax,ds:0x461074
  434d1c:	cmp    cl,0x20
  434d1f:	jne    0x434d26
  434d21:	test   ax,ax
  434d24:	jne    0x434d0b
  434d26:	mov    dl,BYTE PTR ds:0x461077
  434d2c:	mov    BYTE PTR [ebp-0x1],dl
  434d2f:	cmp    cl,0x20
  434d32:	je     0x434e4d
  434d38:	cmp    dl,0x2e
  434d3b:	je     0x434d42
  434d3d:	cmp    dl,0x25
  434d40:	jne    0x434d4a
  434d42:	mov    cl,dl
  434d44:	mov    BYTE PTR ds:0x461076,cl
  434d4a:	movzx  ecx,cl
  434d4d:	sub    ecx,0x24
  434d50:	mov    ebx,0x406a80
  434d55:	cmp    ecx,0x36
  434d58:	jae    0x434d90
  434d5a:	mov    ebx,DWORD PTR [ebx+ecx*4+0x8]
  434d5e:	test   ebx,ebx
  434d60:	je     0x434e3f
  434d66:	test   bl,0x1
  434d69:	jne    0x434dad
  434d6b:	test   ax,ax
  434d6e:	je     0x434da4
  434d70:	call   0x434cbc
  434d75:	movzx  eax,BYTE PTR [ebx+0x5]
  434d79:	movzx  ecx,BYTE PTR ds:0x461076
  434d80:	sub    ecx,eax
  434d82:	movzx  eax,BYTE PTR [ebx+0x6]
  434d86:	cmp    ecx,eax
  434d88:	mov    ax,ds:0x461074
  434d8e:	jb     0x434d5a
  434d90:	cmp    ecx,0x24
  434d93:	jb     0x434d9a
  434d95:	cmp    ecx,0x5f
  434d98:	jbe    0x434df9
  434d9a:	cmp    BYTE PTR [ebx+0x4],0x0
  434d9e:	je     0x434df9
  434da0:	xor    cl,cl
  434da2:	jmp    0x434dfb
  434da4:	cmp    BYTE PTR [ebx+0x4],0x0
  434da8:	sete   cl
  434dab:	jmp    0x434dfb
  434dad:	and    ebx,0xfffffffe
  434db0:	lea    edx,[ebx+0x4]
  434db3:	test   ax,ax
  434db6:	jne    0x434dbf
  434db8:	cmp    BYTE PTR [edx],al
  434dba:	setne  cl
  434dbd:	jmp    0x434dfb
  434dbf:	dec    edx
  434dc0:	inc    edx
  434dc1:	call   0x434cbc
  434dc6:	mov    ax,ds:0x461074
  434dcc:	mov    cl,BYTE PTR ds:0x461076
  434dd2:	test   ax,ax
  434dd5:	je     0x434ddb
  434dd7:	cmp    cl,BYTE PTR [edx]
  434dd9:	je     0x434dc0
  434ddb:	mov    ch,BYTE PTR [edx]
  434ddd:	cmp    cl,ch
  434ddf:	jne    0x434deb
  434de1:	test   ax,ax
  434de4:	jne    0x434deb
  434de6:	cmp    BYTE PTR [edx+0x1],al
  434de9:	jmp    0x434dba
  434deb:	cmp    cl,0x24
  434dee:	jb     0x434df5
  434df0:	cmp    cl,0x5f
  434df3:	jbe    0x434df9
  434df5:	test   ch,ch
  434df7:	je     0x434dff
  434df9:	mov    cl,0x1
  434dfb:	test   cl,cl
  434dfd:	jne    0x434e3f
  434dff:	cmp    BYTE PTR [ebp-0x1],0x25
  434e03:	je     0x434e19
  434e05:	mov    edx,0x4605a4
  434e0a:	mov    ecx,ebx
  434e0c:	call   0x434485
  434e11:	mov    ax,ds:0x461074
  434e17:	jmp    0x434e34
  434e19:	mov    cl,BYTE PTR ds:0x460566
  434e1f:	test   cl,0x2
  434e22:	jne    0x434e34
  434e24:	or     cl,0x2
  434e27:	or     BYTE PTR ds:0x4605ac,0x2
  434e2e:	mov    BYTE PTR ds:0x460566,cl
  434e34:	test   ax,ax
  434e37:	jne    0x434d0b
  434e3d:	jmp    0x434e4d
  434e3f:	push   0x0
  434e41:	xor    edx,edx
  434e43:	mov    ecx,0xfbb
  434e48:	call   0x42ee80
  434e4d:	pop    ebx
  434e4e:	leave  
  434e4f:	ret    
  434e50:	push   ebp
  434e51:	mov    ebp,esp
  434e53:	push   ecx
  434e54:	cmp    WORD PTR ds:0x4059a0,0x0
  434e5c:	mov    edx,DWORD PTR ds:0x460624
  434e62:	mov    ecx,0x4059a0
  434e67:	je     0x434e9a
  434e69:	push   esi
  434e6a:	movzx  esi,WORD PTR [edx+0x2]
  434e6e:	movzx  eax,BYTE PTR [ecx+0x4]
  434e72:	cmp    ax,si
  434e75:	jne    0x434e80
  434e77:	mov    ax,WORD PTR [ecx+0x6]
  434e7b:	cmp    ax,WORD PTR [edx]
  434e7e:	je     0x434e8b
  434e80:	add    ecx,0x8
  434e83:	cmp    WORD PTR [ecx],0x0
  434e87:	jne    0x434e6e
  434e89:	jmp    0x434e99
  434e8b:	movzx  eax,BYTE PTR [ecx]
  434e8e:	mov    WORD PTR [edx+0x2],ax
  434e92:	mov    ax,WORD PTR [ecx+0x2]
  434e96:	mov    WORD PTR [edx],ax
  434e99:	pop    esi
  434e9a:	leave  
  434e9b:	ret    
  434e9c:	push   ebp
  434e9d:	mov    ebp,esp
  434e9f:	push   ecx
  434ea0:	mov    ecx,DWORD PTR ds:0x46106c
  434ea6:	inc    ecx
  434ea7:	mov    DWORD PTR ds:0x46106c,ecx
  434ead:	mov    al,BYTE PTR [ecx]
  434eaf:	mov    ds:0x46107e,al
  434eb4:	cmp    ecx,DWORD PTR ds:0x460eb8
  434eba:	jb     0x434edb
  434ebc:	lea    edx,[ebp-0x1]
  434ebf:	mov    ecx,0x46106c
  434ec4:	call   0x435a34
  434ec9:	cmp    BYTE PTR [ebp-0x1],0x0
  434ecd:	mov    ds:0x46107e,al
  434ed2:	je     0x434edb
  434ed4:	mov    BYTE PTR ds:0x46107e,0xa
  434edb:	leave  
  434edc:	ret    
  434edd:	jmp    0x434ee4
  434edf:	call   0x434e9c
  434ee4:	cmp    BYTE PTR ds:0x46107e,0xa
  434eeb:	jne    0x434edf
  434eed:	and    DWORD PTR ds:0x461060,0x0
  434ef4:	inc    DWORD PTR ds:0x460618
  434efa:	ret    
  434efb:	mov    eax,ds:0x461064
  434f00:	mov    ecx,DWORD PTR ds:0x461068
  434f06:	add    eax,0x200
  434f0b:	cmp    ecx,eax
  434f0d:	jb     0x434f27
  434f0f:	push   0x0
  434f11:	xor    edx,edx
  434f13:	mov    ecx,0x7f7
  434f18:	call   0x42ee80
  434f1d:	and    DWORD PTR ds:0x46105c,0x0
  434f24:	mov    al,0x1
  434f26:	ret    
  434f27:	mov    al,ds:0x46107e
  434f2c:	mov    BYTE PTR [ecx],al
  434f2e:	inc    DWORD PTR ds:0x461068
  434f34:	xor    al,al
  434f36:	ret    
  434f37:	push   ebp
  434f38:	mov    ebp,esp
  434f3a:	sub    esp,0x404
  434f40:	mov    eax,ds:0x448858
  434f45:	xor    eax,ebp
  434f47:	mov    DWORD PTR [ebp-0x4],eax
  434f4a:	mov    eax,ds:0x46137c
  434f4f:	dec    eax
  434f50:	and    DWORD PTR ds:0x461060,0x0
  434f57:	mov    ds:0x46106c,eax
  434f5c:	lea    eax,[ebp-0x404]
  434f62:	push   esi
  434f63:	mov    esi,edx
  434f65:	mov    ds:0x461068,eax
  434f6a:	mov    ds:0x461064,eax
  434f6f:	mov    DWORD PTR ds:0x46105c,0x1
  434f79:	call   0x434e9c
  434f7e:	mov    al,ds:0x46107e
  434f83:	cmp    al,0xd
  434f85:	je     0x434f79
  434f87:	cmp    al,0xa
  434f89:	je     0x434ff7
  434f8b:	cmp    al,0x3b
  434f8d:	je     0x434ff7
  434f8f:	cmp    al,0x5c
  434f91:	jne    0x434fd1
  434f93:	call   0x434e9c
  434f98:	mov    cl,BYTE PTR ds:0x46107e
  434f9e:	cmp    cl,0xa
  434fa1:	je     0x43500e
  434fa3:	cmp    cl,0x3b
  434fa6:	je     0x43500e
  434fa8:	mov    eax,ds:0x461068
  434fad:	mov    BYTE PTR [eax],cl
  434faf:	mov    eax,ds:0x461068
  434fb4:	mov    ds:0x461060,eax
  434fb9:	inc    eax
  434fba:	mov    ds:0x461068,eax
  434fbf:	movzx  eax,BYTE PTR ds:0x46107e
  434fc6:	cmp    BYTE PTR [eax+0x448f88],0x20
  434fcd:	je     0x434f93
  434fcf:	jmp    0x434f79
  434fd1:	call   0x434efb
  434fd6:	test   al,al
  434fd8:	jne    0x435033
  434fda:	movzx  eax,BYTE PTR ds:0x46107e
  434fe1:	cmp    BYTE PTR [eax+0x448f88],0x20
  434fe8:	je     0x434f79
  434fea:	mov    eax,ds:0x461068
  434fef:	dec    eax
  434ff0:	mov    ds:0x461060,eax
  434ff5:	jmp    0x434f79
  434ff7:	mov    ecx,DWORD PTR ds:0x461060
  434ffd:	test   ecx,ecx
  434fff:	je     0x435018
  435001:	cmp    BYTE PTR [ecx],0x2c
  435004:	jne    0x435018
  435006:	lea    eax,[ecx+0x1]
  435009:	mov    ds:0x461068,eax
  43500e:	call   0x434edd
  435013:	jmp    0x434f79
  435018:	cmp    al,0xa
  43501a:	je     0x435033
  43501c:	call   0x434efb
  435021:	test   al,al
  435023:	jne    0x435033
  435025:	call   0x434e9c
  43502a:	cmp    BYTE PTR ds:0x46107e,0xa
  435031:	jne    0x43501c
  435033:	mov    edx,DWORD PTR ds:0x46105c
  435039:	mov    ecx,DWORD PTR ds:0x461064
  43503f:	test   edx,edx
  435041:	je     0x435051
  435043:	mov    edx,DWORD PTR ds:0x461068
  435049:	sub    edx,ecx
  43504b:	mov    DWORD PTR ds:0x46105c,edx
  435051:	mov    eax,ds:0x46106c
  435056:	push   0x1
  435058:	push   DWORD PTR ds:0x461174
  43505e:	mov    ds:0x460eb4,eax
  435063:	lea    eax,[ebp-0x4]
  435066:	push   eax
  435067:	lea    eax,[ebp-0x204]
  43506d:	push   eax
  43506e:	call   0x434790
  435073:	mov    edx,eax
  435075:	lea    ecx,[ebp-0x204]
  43507b:	mov    ds:0x46105c,eax
  435080:	call   0x435b7c
  435085:	mov    edx,DWORD PTR ds:0x46105c
  43508b:	push   esi
  43508c:	mov    ecx,0x461068
  435091:	mov    ds:0x461068,eax
  435096:	call   0x435a6e
  43509b:	mov    ecx,DWORD PTR ds:0x461068
  4350a1:	mov    DWORD PTR ds:0x46137c,ecx
  4350a7:	mov    ecx,DWORD PTR [ebp-0x4]
  4350aa:	xor    ecx,ebp
  4350ac:	mov    ds:0x46107e,al
  4350b1:	pop    esi
  4350b2:	call   0x446dc7
  4350b7:	leave  
  4350b8:	ret    
  4350b9:	push   ebp
  4350ba:	mov    ebp,esp
  4350bc:	sub    esp,0xc
  4350bf:	push   ebx
  4350c0:	mov    bl,BYTE PTR [ebp+0xb]
  4350c3:	push   esi
  4350c4:	mov    eax,ecx
  4350c6:	push   edi
  4350c7:	mov    esi,DWORD PTR [eax]
  4350c9:	mov    edi,DWORD PTR [ebp+0x8]
  4350cc:	mov    DWORD PTR [ebp-0x8],edx
  4350cf:	mov    DWORD PTR [ebp-0xc],eax
  4350d2:	mov    DWORD PTR [ebp-0x4],esi
  4350d5:	mov    BYTE PTR [edi],0x0
  4350d8:	cmp    esi,DWORD PTR ds:0x460eb8
  4350de:	jb     0x4350f2
  4350e0:	mov    edx,edi
  4350e2:	lea    ecx,[ebp-0x4]
  4350e5:	call   0x435a34
  4350ea:	mov    esi,DWORD PTR [ebp-0x4]
  4350ed:	mov    edx,DWORD PTR [ebp-0x8]
  4350f0:	mov    bl,al
  4350f2:	cmp    BYTE PTR [edi],0x0
  4350f5:	jne    0x43510d
  4350f7:	mov    al,BYTE PTR [esi]
  4350f9:	mov    BYTE PTR [edx],al
  4350fb:	movzx  eax,al
  4350fe:	inc    esi
  4350ff:	mov    bl,BYTE PTR [eax+0x448f88]
  435105:	mov    DWORD PTR [ebp-0x4],esi
  435108:	cmp    bl,0x20
  43510b:	je     0x4350d8
  43510d:	mov    ecx,DWORD PTR [ebp-0xc]
  435110:	lea    eax,[esi-0x1]
  435113:	pop    edi
  435114:	mov    DWORD PTR [ecx],eax
  435116:	pop    esi
  435117:	mov    al,bl
  435119:	pop    ebx
  43511a:	leave  
  43511b:	ret    0x4
  43511e:	push   ebp
  43511f:	mov    ebp,esp
  435121:	push   ecx
  435122:	push   ecx
  435123:	push   ebx
  435124:	push   esi
  435125:	push   edi
  435126:	mov    edi,ecx
  435128:	mov    esi,edx
  43512a:	mov    eax,DWORD PTR [edi]
  43512c:	mov    DWORD PTR [ebp-0x8],eax
  43512f:	mov    ds:0x461078,eax
  435134:	lea    eax,[ebp-0x1]
  435137:	push   eax
  435138:	lea    edx,[ebp-0x2]
  43513b:	lea    ecx,[ebp-0x8]
  43513e:	xor    ebx,ebx
  435140:	call   0x4350b9
  435145:	mov    dh,al
  435147:	mov    ecx,esi
  435149:	cmp    BYTE PTR [esi],bl
  43514b:	je     0x43515c
  43514d:	cmp    dh,BYTE PTR [ecx+0x1]
  435150:	je     0x43516a
  435152:	movzx  eax,BYTE PTR [ecx]
  435155:	inc    ecx
  435156:	add    ecx,eax
  435158:	cmp    BYTE PTR [ecx],bl
  43515a:	jne    0x43514d
  43515c:	mov    eax,ds:0x461078
  435161:	mov    DWORD PTR [edi],eax
  435163:	xor    eax,eax
  435165:	pop    edi
  435166:	pop    esi
  435167:	pop    ebx
  435168:	leave  
  435169:	ret    
  43516a:	mov    ecx,DWORD PTR [ebp-0x8]
  43516d:	inc    ecx
  43516e:	mov    dl,bl
  435170:	jmp    0x4351b1
  435172:	cmp    dh,0x5f
  435175:	jg     0x4351bc
  435177:	test   dl,dl
  435179:	jne    0x4351bc
  43517b:	mov    BYTE PTR [ebx+0x461054],dh
  435181:	inc    ebx
  435182:	cmp    ecx,DWORD PTR ds:0x460eb8
  435188:	jb     0x43519f
  43518a:	lea    edx,[ebp-0x1]
  43518d:	lea    ecx,[ebp-0x8]
  435190:	call   0x435a34
  435195:	mov    dl,BYTE PTR [ebp-0x1]
  435198:	test   dl,dl
  43519a:	jne    0x4351bc
  43519c:	mov    ecx,DWORD PTR [ebp-0x8]
  43519f:	mov    al,BYTE PTR [ecx]
  4351a1:	movzx  eax,al
  4351a4:	inc    ecx
  4351a5:	mov    dh,BYTE PTR [eax+0x448f88]
  4351ab:	cmp    ebx,0x8
  4351ae:	sete   dl
  4351b1:	mov    BYTE PTR [ebp-0x1],dl
  4351b4:	mov    DWORD PTR [ebp-0x8],ecx
  4351b7:	cmp    dh,0x24
  4351ba:	jge    0x435172
  4351bc:	mov    eax,ds:0x461078
  4351c1:	mov    DWORD PTR [edi],eax
  4351c3:	test   dl,dl
  4351c5:	jne    0x435163
  4351c7:	movzx  edi,BYTE PTR [esi]
  4351ca:	jmp    0x4351e8
  4351cc:	cmp    edi,ebx
  4351ce:	jne    0x4351e3
  4351d0:	push   edi
  4351d1:	push   esi
  4351d2:	push   0x461054
  4351d7:	call   0x447640
  4351dc:	add    esp,0xc
  4351df:	test   eax,eax
  4351e1:	je     0x4351f2
  4351e3:	add    esi,edi
  4351e5:	movsx  edi,BYTE PTR [esi]
  4351e8:	inc    esi
  4351e9:	test   edi,edi
  4351eb:	jne    0x4351cc
  4351ed:	jmp    0x435163
  4351f2:	xor    eax,eax
  4351f4:	inc    eax
  4351f5:	jmp    0x435165
  4351fa:	push   ebp
  4351fb:	mov    ebp,esp
  4351fd:	push   ecx
  4351fe:	push   ebx
  4351ff:	push   esi
  435200:	push   edi
  435201:	mov    ebx,edx
  435203:	mov    esi,ecx
  435205:	mov    ecx,0x461178
  43520a:	lea    eax,[esi-0x8]
  43520d:	cmp    eax,ecx
  43520f:	jae    0x435219
  435211:	sub    esi,ecx
  435213:	mov    edx,esi
  435215:	mov    esi,ecx
  435217:	jmp    0x43521e
  435219:	push   0x8
  43521b:	pop    edx
  43521c:	sub    esi,edx
  43521e:	xor    ecx,ecx
  435220:	xor    edi,edi
  435222:	mov    DWORD PTR [ebp-0x4],ecx
  435225:	test   edx,edx
  435227:	je     0x435240
  435229:	mov    al,BYTE PTR [edi+esi*1]
  43522c:	cmp    al,0x8
  43522e:	jae    0x435266
  435230:	shl    ecx,0x3
  435233:	movzx  eax,al
  435236:	or     ecx,eax
  435238:	inc    edi
  435239:	mov    DWORD PTR [ebp-0x4],ecx
  43523c:	cmp    edi,edx
  43523e:	jb     0x435229
  435240:	mov    ecx,DWORD PTR [ebx]
  435242:	mov    ax,WORD PTR [ebp-0x4]
  435246:	mov    WORD PTR [ecx],ax
  435249:	mov    al,BYTE PTR [ebp-0x2]
  43524c:	mov    BYTE PTR [ecx+0x2],al
  43524f:	add    ecx,0x3
  435252:	mov    DWORD PTR [ebx],ecx
  435254:	cmp    esi,0x461178
  43525a:	ja     0x435205
  43525c:	mov    BYTE PTR [ecx],0x0
  43525f:	xor    al,al
  435261:	pop    edi
  435262:	pop    esi
  435263:	pop    ebx
  435264:	leave  
  435265:	ret    
  435266:	mov    al,0x1
  435268:	jmp    0x435261
  43526a:	push   ebx
  43526b:	push   esi
  43526c:	push   edi
  43526d:	mov    ebx,0x461178
  435272:	lea    eax,[edx-0x4]
  435275:	cmp    eax,ebx
  435277:	jae    0x435281
  435279:	sub    edx,ebx
  43527b:	mov    edi,edx
  43527d:	mov    edx,ebx
  43527f:	jmp    0x435286
  435281:	push   0x4
  435283:	pop    edi
  435284:	sub    edx,edi
  435286:	xor    esi,esi
  435288:	xor    ebx,ebx
  43528a:	test   edi,edi
  43528c:	je     0x4352a0
  43528e:	movzx  eax,BYTE PTR [ebx+edx*1]
  435292:	shl    esi,0x4
  435295:	or     ax,si
  435298:	inc    ebx
  435299:	movzx  esi,ax
  43529c:	cmp    ebx,edi
  43529e:	jb     0x43528e
  4352a0:	mov    WORD PTR [ecx],si
  4352a3:	mov    ebx,0x461178
  4352a8:	add    ecx,0x2
  4352ab:	cmp    edx,ebx
  4352ad:	ja     0x435272
  4352af:	pop    edi
  4352b0:	pop    esi
  4352b1:	mov    eax,ecx
  4352b3:	pop    ebx
  4352b4:	ret    
  4352b5:	push   ebp
  4352b6:	mov    ebp,esp
  4352b8:	push   ecx
  4352b9:	push   ecx
  4352ba:	push   ebx
  4352bb:	push   esi
  4352bc:	mov    eax,edx
  4352be:	push   edi
  4352bf:	mov    edi,DWORD PTR [eax]
  4352c1:	mov    esi,ecx
  4352c3:	mov    DWORD PTR [ebp-0x8],eax
  4352c6:	mov    ecx,0x461178
  4352cb:	lea    eax,[esi-0x10]
  4352ce:	cmp    eax,ecx
  4352d0:	jae    0x4352da
  4352d2:	sub    esi,ecx
  4352d4:	mov    edx,esi
  4352d6:	mov    esi,ecx
  4352d8:	jmp    0x4352df
  4352da:	push   0x10
  4352dc:	pop    edx
  4352dd:	sub    esi,edx
  4352df:	xor    eax,eax
  4352e1:	xor    ebx,ebx
  4352e3:	test   edx,edx
  4352e5:	je     0x43530b
  4352e7:	mov    cl,BYTE PTR [ebx+esi*1]
  4352ea:	mov    BYTE PTR [ebp-0x1],cl
  4352ed:	cmp    cl,0x2
  4352f0:	jae    0x435321
  4352f2:	lea    ecx,[eax+eax*1]
  4352f5:	mov    al,BYTE PTR [ebp-0x1]
  4352f8:	movzx  eax,al
  4352fb:	or     cx,ax
  4352fe:	inc    ebx
  4352ff:	movzx  eax,cx
  435302:	cmp    ebx,edx
  435304:	jb     0x4352e7
  435306:	mov    ecx,0x461178
  43530b:	mov    WORD PTR [edi],ax
  43530e:	add    edi,0x2
  435311:	cmp    esi,ecx
  435313:	ja     0x4352cb
  435315:	mov    eax,DWORD PTR [ebp-0x8]
  435318:	mov    DWORD PTR [eax],edi
  43531a:	xor    al,al
  43531c:	pop    edi
  43531d:	pop    esi
  43531e:	pop    ebx
  43531f:	leave  
  435320:	ret    
  435321:	mov    al,0x1
  435323:	jmp    0x43531c
  435325:	push   ebp
  435326:	mov    ebp,esp
  435328:	push   ecx
  435329:	push   ecx
  43532a:	push   ebx
  43532b:	push   esi
  43532c:	push   edi
  43532d:	xor    eax,eax
  43532f:	mov    edi,ecx
  435331:	stos   DWORD PTR es:[edi],eax
  435332:	stos   DWORD PTR es:[edi],eax
  435333:	stos   WORD PTR es:[edi],ax
  435335:	mov    esi,0x461178
  43533a:	mov    DWORD PTR [ebp-0x8],edx
  43533d:	stos   BYTE PTR es:[edi],al
  43533e:	cmp    edx,esi
  435340:	jbe    0x435377
  435342:	mov    bl,BYTE PTR [ebp+0x8]
  435345:	mov    edi,ecx
  435347:	mov    al,BYTE PTR [esi]
  435349:	cmp    al,bl
  43534b:	jae    0x435396
  43534d:	movzx  edx,al
  435350:	movzx  eax,bl
  435353:	xor    ecx,ecx
  435355:	mov    DWORD PTR [ebp+0x8],eax
  435358:	movzx  eax,WORD PTR [edi+ecx*2]
  43535c:	imul   eax,DWORD PTR [ebp+0x8]
  435360:	add    edx,eax
  435362:	mov    WORD PTR [edi+ecx*2],dx
  435366:	shr    edx,0x10
  435369:	inc    ecx
  43536a:	cmp    ecx,0x6
  43536d:	jl     0x435358
  43536f:	inc    esi
  435370:	cmp    esi,DWORD PTR [ebp-0x8]
  435373:	jb     0x435347
  435375:	mov    ecx,edi
  435377:	lea    esi,[ecx+0xa]
  43537a:	cmp    BYTE PTR [esi],0x0
  43537d:	je     0x43538d
  43537f:	push   0x0
  435381:	xor    edx,edx
  435383:	mov    ecx,0x817
  435388:	call   0x42ee80
  43538d:	mov    eax,esi
  43538f:	pop    edi
  435390:	pop    esi
  435391:	pop    ebx
  435392:	leave  
  435393:	ret    0x4
  435396:	xor    eax,eax
  435398:	jmp    0x43538f
  43539a:	mov    eax,ds:0x461050
  43539f:	inc    eax
  4353a0:	mov    ds:0x461050,eax
  4353a5:	cmp    eax,DWORD PTR ds:0x460eb8
  4353ab:	jb     0x4353cd
  4353ad:	mov    edx,0x460e5e
  4353b2:	mov    ecx,0x461050
  4353b7:	call   0x43598d
  4353bc:	mov    ds:0x460e5f,al
  4353c1:	xor    eax,eax
  4353c3:	cmp    BYTE PTR ds:0x460e5e,al
  4353c9:	sete   al
  4353cc:	ret    
  4353cd:	mov    al,BYTE PTR [eax]
  4353cf:	mov    ds:0x460e5f,al
  4353d4:	mov    al,0x1
  4353d6:	ret    
  4353d7:	push   ebp
  4353d8:	mov    ebp,esp
  4353da:	mov    eax,ds:0x460e9c
  4353df:	push   ebx
  4353e0:	push   esi
  4353e1:	mov    esi,DWORD PTR [ebp+0x8]
  4353e4:	mov    ds:0x461078,eax
  4353e9:	mov    eax,ds:0x46137c
  4353ee:	mov    BYTE PTR ds:0x460e5e,0x0
  4353f5:	xor    bh,bh
  4353f7:	mov    ds:0x461050,eax
  4353fc:	and    DWORD PTR [esi],0x0
  4353ff:	mov    bl,dl
  435401:	xor    ecx,ecx
  435403:	inc    ecx
  435404:	cmp    BYTE PTR ds:0x460e5e,0x0
  43540b:	je     0x435437
  43540d:	mov    eax,ds:0x461050
  435412:	inc    eax
  435413:	mov    BYTE PTR ds:0x460e5e,0x0
  43541a:	mov    ds:0x461050,eax
  43541f:	cmp    bl,0xd
  435422:	jne    0x4354b6
  435428:	cmp    BYTE PTR ds:0x45f98f,0x0
  43542f:	je     0x4354ce
  435435:	jmp    0x435440
  435437:	test   bh,bh
  435439:	je     0x435465
  43543b:	mov    eax,ds:0x461050
  435440:	mov    ecx,DWORD PTR [esi]
  435442:	xor    bh,bh
  435444:	test   cl,cl
  435446:	je     0x4354cc
  43544c:	cmp    bl,0xd
  43544f:	jne    0x4354cc
  435451:	shl    ecx,0x8
  435454:	cmp    DWORD PTR ds:0x460eac,0x0
  43545b:	mov    DWORD PTR [esi],ecx
  43545d:	je     0x435465
  43545f:	inc    DWORD PTR ds:0x460618
  435465:	call   0x43539a
  43546a:	test   al,al
  43546c:	je     0x435401
  43546e:	mov    al,ds:0x460e5f
  435473:	cmp    al,bl
  435475:	jne    0x435492
  435477:	call   0x43539a
  43547c:	test   al,al
  43547e:	je     0x435401
  435480:	cmp    BYTE PTR ds:0x460e5f,bl
  435486:	je     0x4354af
  435488:	xor    ecx,ecx
  43548a:	inc    ecx
  43548b:	mov    bh,cl
  43548d:	jmp    0x435404
  435492:	cmp    al,0xa
  435494:	sete   BYTE PTR ds:0x460e5e
  43549b:	push   0x1
  43549d:	pop    ecx
  43549e:	cmp    al,0x5c
  4354a0:	jne    0x435404
  4354a6:	cmp    bl,0xd
  4354a9:	jne    0x435404
  4354af:	inc    DWORD PTR [esi]
  4354b1:	jmp    0x435401
  4354b6:	cmp    DWORD PTR [esi],0x0
  4354b9:	je     0x4354d4
  4354bb:	cmp    DWORD PTR ds:0x460eac,0x0
  4354c2:	je     0x4354d4
  4354c4:	inc    DWORD PTR ds:0x460618
  4354ca:	jmp    0x4354d4
  4354cc:	xor    cl,cl
  4354ce:	dec    eax
  4354cf:	mov    ds:0x46137c,eax
  4354d4:	pop    esi
  4354d5:	mov    al,cl
  4354d7:	pop    ebx
  4354d8:	pop    ebp
  4354d9:	ret    0x4
  4354dc:	push   ebp
  4354dd:	mov    ebp,esp
  4354df:	push   ecx
  4354e0:	mov    eax,ds:0x460e9c
  4354e5:	mov    edx,DWORD PTR ds:0x46137c
  4354eb:	push   ebx
  4354ec:	mov    BYTE PTR [ebp-0x1],0x0
  4354f0:	mov    bh,BYTE PTR [ebp-0x1]
  4354f3:	mov    cl,BYTE PTR [ebp-0x1]
  4354f6:	push   esi
  4354f7:	mov    ds:0x461078,eax
  4354fc:	xor    esi,esi
  4354fe:	mov    bl,0x1
  435500:	test   bl,bl
  435502:	jne    0x43550e
  435504:	cmp    bh,0x3b
  435507:	jne    0x435542
  435509:	cmp    cl,0xa
  43550c:	je     0x435547
  43550e:	inc    edx
  43550f:	mov    DWORD PTR ds:0x46137c,edx
  435515:	cmp    edx,DWORD PTR ds:0x460eb8
  43551b:	jb     0x435536
  43551d:	lea    edx,[ebp-0x1]
  435520:	mov    ecx,0x46137c
  435525:	call   0x43598d
  43552a:	cmp    BYTE PTR [ebp-0x1],0x0
  43552e:	jne    0x43557b
  435530:	mov    edx,DWORD PTR ds:0x46137c
  435536:	mov    cl,BYTE PTR [edx]
  435538:	test   bl,bl
  43553a:	je     0x43553e
  43553c:	mov    bh,cl
  43553e:	xor    bl,bl
  435540:	jmp    0x435500
  435542:	cmp    cl,0xa
  435545:	jne    0x43555f
  435547:	test   esi,esi
  435549:	jle    0x43557b
  43554b:	or     esi,0xffffffff
  43554e:	cmp    DWORD PTR ds:0x460eac,0x0
  435555:	je     0x4354fe
  435557:	inc    DWORD PTR ds:0x460618
  43555d:	jmp    0x4354fe
  43555f:	cmp    cl,0x5c
  435562:	jne    0x435569
  435564:	xor    esi,esi
  435566:	inc    esi
  435567:	jmp    0x4354fe
  435569:	movzx  eax,cl
  43556c:	cmp    BYTE PTR [eax+0x448f88],0x20
  435573:	je     0x4354fe
  435575:	test   esi,esi
  435577:	jle    0x4354fe
  435579:	jmp    0x4354fc
  43557b:	mov    eax,esi
  43557d:	pop    esi
  43557e:	pop    ebx
  43557f:	leave  
  435580:	ret    
  435581:	push   ebp
  435582:	mov    ebp,esp
  435584:	push   ecx
  435585:	push   ecx
  435586:	mov    ecx,DWORD PTR ds:0x46137c
  43558c:	push   ebx
  43558d:	mov    bl,BYTE PTR [ebp+0xb]
  435590:	lea    eax,[ecx+0x1]
  435593:	push   esi
  435594:	mov    ds:0x461078,eax
  435599:	xor    eax,eax
  43559b:	xor    esi,esi
  43559d:	push   edi
  43559e:	mov    BYTE PTR [ebp-0x3],dl
  4355a1:	inc    esi
  4355a2:	mov    BYTE PTR [ebp-0x2],al
  4355a5:	mov    edi,0x46137c
  4355aa:	mov    ds:0x4613a0,eax
  4355af:	mov    dl,BYTE PTR [ebp-0x1]
  4355b2:	mov    bh,0x1
  4355b4:	test   bh,bh
  4355b6:	jne    0x4355c6
  4355b8:	cmp    dl,0x3b
  4355bb:	jne    0x435608
  4355bd:	test   al,al
  4355bf:	je     0x435608
  4355c1:	cmp    bl,0xa
  4355c4:	je     0x435608
  4355c6:	inc    ecx
  4355c7:	mov    DWORD PTR ds:0x46137c,ecx
  4355cd:	cmp    ecx,DWORD PTR ds:0x460eb8
  4355d3:	jb     0x4355f4
  4355d5:	lea    edx,[ebp-0x2]
  4355d8:	mov    ecx,edi
  4355da:	call   0x43598d
  4355df:	cmp    BYTE PTR [ebp-0x2],0x0
  4355e3:	jne    0x4356f6
  4355e9:	mov    ecx,DWORD PTR ds:0x46137c
  4355ef:	mov    eax,ds:0x4613a0
  4355f4:	mov    bl,BYTE PTR [ecx]
  4355f6:	test   bh,bh
  4355f8:	je     0x435601
  4355fa:	mov    dl,bl
  4355fc:	mov    BYTE PTR [ebp-0x1],dl
  4355ff:	jmp    0x435604
  435601:	mov    dl,BYTE PTR [ebp-0x1]
  435604:	xor    bh,bh
  435606:	jmp    0x4355b4
  435608:	cmp    bl,0x3b
  43560b:	je     0x4355b2
  43560d:	cmp    bl,0xa
  435610:	jne    0x435638
  435612:	test   al,al
  435614:	je     0x4356f6
  43561a:	cmp    DWORD PTR ds:0x460eac,0x0
  435621:	mov    eax,0x100
  435626:	mov    ds:0x4613a0,eax
  43562b:	je     0x4355b2
  43562d:	inc    DWORD PTR ds:0x460618
  435633:	jmp    0x4355b2
  435638:	mov    dl,BYTE PTR [ebp-0x3]
  43563b:	cmp    bl,dl
  43563d:	jne    0x435645
  43563f:	inc    esi
  435640:	jmp    0x4355af
  435645:	cmp    bl,BYTE PTR [ebp+0x8]
  435648:	jne    0x43566e
  43564a:	dec    esi
  43564b:	jne    0x4355af
  435651:	cmp    dl,0x28
  435654:	jne    0x435660
  435656:	and    eax,0xff
  43565b:	mov    ds:0x4613a0,eax
  435660:	and    BYTE PTR ds:0x46107d,0x1
  435667:	xor    al,al
  435669:	jmp    0x4356f8
  43566e:	cmp    bl,0x21
  435671:	jne    0x4356a3
  435673:	mov    dl,BYTE PTR [ebp-0x1]
  435676:	or     eax,0x100
  43567b:	inc    ecx
  43567c:	mov    ds:0x4613a0,eax
  435681:	mov    DWORD PTR ds:0x46137c,ecx
  435687:	cmp    ecx,DWORD PTR ds:0x460eb8
  43568d:	jb     0x4355b2
  435693:	lea    edx,[ebp-0x2]
  435696:	mov    ecx,edi
  435698:	call   0x43598d
  43569d:	cmp    BYTE PTR [ebp-0x2],0x0
  4356a1:	jmp    0x4356ce
  4356a3:	cmp    bl,0x5c
  4356a6:	jne    0x4356ae
  4356a8:	inc    eax
  4356a9:	jmp    0x4355aa
  4356ae:	test   BYTE PTR ds:0x46107d,0x3
  4356b5:	je     0x4356e0
  4356b7:	cmp    bl,0x22
  4356ba:	je     0x4356c1
  4356bc:	cmp    bl,0x27
  4356bf:	jne    0x4356e0
  4356c1:	lea    eax,[ebp-0x8]
  4356c4:	push   eax
  4356c5:	mov    dl,bl
  4356c7:	call   0x4353d7
  4356cc:	test   al,al
  4356ce:	jne    0x4356f6
  4356d0:	mov    ecx,DWORD PTR ds:0x46137c
  4356d6:	mov    eax,ds:0x4613a0
  4356db:	jmp    0x4355af
  4356e0:	mov    dl,BYTE PTR [ebp-0x1]
  4356e3:	cmp    bl,0x20
  4356e6:	jle    0x4355b2
  4356ec:	and    eax,0xff00
  4356f1:	jmp    0x4355aa
  4356f6:	mov    al,0x1
  4356f8:	pop    edi
  4356f9:	pop    esi
  4356fa:	pop    ebx
  4356fb:	leave  
  4356fc:	ret    0x8
  4356ff:	cmp    BYTE PTR ds:0x45f98f,0x0
  435706:	push   esi
  435707:	mov    esi,ecx
  435709:	jne    0x43574d
  43570b:	test   esi,esi
  43570d:	jg     0x435717
  43570f:	add    DWORD PTR ds:0x460e38,esi
  435715:	pop    esi
  435716:	ret    
  435717:	mov    eax,ds:0x44f538
  43571c:	push   edi
  43571d:	mov    edi,DWORD PTR ds:0x460e38
  435723:	sub    eax,edi
  435725:	add    eax,0x200
  43572a:	jns    0x43572e
  43572c:	xor    eax,eax
  43572e:	cmp    eax,esi
  435730:	jge    0x435734
  435732:	mov    esi,eax
  435734:	push   esi
  435735:	push   DWORD PTR ds:0x460ea0
  43573b:	push   edi
  43573c:	call   0x447646
  435741:	add    esp,0xc
  435744:	add    edi,esi
  435746:	mov    DWORD PTR ds:0x460e38,edi
  43574c:	pop    edi
  43574d:	pop    esi
  43574e:	ret    
  43574f:	xor    edx,edx
  435751:	inc    edx
  435752:	cmp    WORD PTR [ecx+0x2],dx
  435756:	jne    0x43576a
  435758:	movzx  eax,WORD PTR [ecx]
  43575b:	cmp    eax,0xb
  43575e:	je     0x43576c
  435760:	cmp    eax,0xc
  435763:	je     0x43576c
  435765:	cmp    eax,0xe
  435768:	je     0x43576c
  43576a:	xor    edx,edx
  43576c:	mov    al,dl
  43576e:	ret    
  43576f:	push   ebp
  435770:	mov    ebp,esp
  435772:	push   ecx
  435773:	push   ecx
  435774:	mov    ax,ds:0x4605bc
  43577a:	mov    dl,BYTE PTR ds:0x460ebd
  435780:	push   esi
  435781:	mov    ecx,0xffff
  435786:	add    ax,cx
  435789:	movzx  esi,ax
  43578c:	imul   esi,esi,0x14
  43578f:	push   edi
  435790:	push   0x5
  435792:	add    esi,0x460ec0
  435798:	pop    ecx
  435799:	mov    edi,0x460eac
  43579e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4357a0:	mov    ds:0x4605bc,ax
  4357a6:	mov    eax,ds:0x460eb4
  4357ab:	pop    edi
  4357ac:	mov    BYTE PTR [ebp-0x1],dl
  4357af:	mov    BYTE PTR ds:0x460ebd,dl
  4357b5:	mov    DWORD PTR [ebp-0x8],eax
  4357b8:	mov    ds:0x460ea0,eax
  4357bd:	pop    esi
  4357be:	cmp    eax,DWORD PTR ds:0x460eb8
  4357c4:	jb     0x4357d4
  4357c6:	lea    edx,[ebp-0x1]
  4357c9:	lea    ecx,[ebp-0x8]
  4357cc:	call   0x435a34
  4357d1:	mov    eax,DWORD PTR [ebp-0x8]
  4357d4:	leave  
  4357d5:	ret    
  4357d6:	push   ebp
  4357d7:	mov    ebp,esp
  4357d9:	sub    esp,0x10
  4357dc:	push   ebx
  4357dd:	mov    ebx,DWORD PTR ds:0x460eac
  4357e3:	push   esi
  4357e4:	mov    esi,DWORD PTR ds:0x46061c
  4357ea:	mov    eax,ecx
  4357ec:	push   edi
  4357ed:	mov    BYTE PTR [edx],0x1
  4357f0:	mov    ecx,DWORD PTR [esi+0xc]
  4357f3:	mov    edi,DWORD PTR [eax]
  4357f5:	sub    edi,ecx
  4357f7:	mov    DWORD PTR [ebp-0x10],edx
  4357fa:	mov    DWORD PTR [ebp-0xc],eax
  4357fd:	mov    BYTE PTR ds:0x461379,0x0
  435804:	mov    DWORD PTR [ebp-0x4],ecx
  435807:	test   ebx,ebx
  435809:	jne    0x43582c
  43580b:	mov    ax,ds:0x4605b8
  435811:	cmp    ax,WORD PTR ds:0x4605bc
  435818:	jne    0x435821
  43581a:	mov    al,0xa
  43581c:	jmp    0x435978
  435821:	mov    edi,DWORD PTR ds:0x460eb8
  435827:	jmp    0x4358da
  43582c:	test   BYTE PTR [ebx+0x2d],0x4
  435830:	jne    0x43581a
  435832:	test   edi,edi
  435834:	jle    0x435933
  43583a:	cmp    edi,0x200
  435840:	jg     0x43597d
  435846:	mov    ecx,ebx
  435848:	call   0x4298d5
  43584d:	mov    ebx,0x200
  435852:	push   edi
  435853:	push   DWORD PTR [ebp-0x4]
  435856:	sub    ebx,edi
  435858:	add    ebx,eax
  43585a:	push   ebx
  43585b:	mov    DWORD PTR [ebp-0x8],ebx
  43585e:	call   0x447646
  435863:	mov    ecx,DWORD PTR [ebp-0x4]
  435866:	mov    edi,DWORD PTR ds:0x460eb8
  43586c:	mov    eax,ebx
  43586e:	sub    eax,ecx
  435870:	add    DWORD PTR ds:0x461078,eax
  435876:	mov    DWORD PTR [esi+0xc],ebx
  435879:	add    esi,0x10
  43587c:	add    esp,0xc
  43587f:	cmp    esi,DWORD PTR ds:0x461174
  435885:	ja     0x4358ba
  435887:	mov    ebx,DWORD PTR [esi+0xc]
  43588a:	cmp    ebx,DWORD PTR ds:0x460eb0
  435890:	jb     0x4358ac
  435892:	cmp    ebx,edi
  435894:	ja     0x4358ac
  435896:	mov    ecx,esi
  435898:	call   0x43574f
  43589d:	mov    ecx,DWORD PTR [ebp-0x4]
  4358a0:	test   al,al
  4358a2:	jne    0x4358ac
  4358a4:	sub    ebx,ecx
  4358a6:	add    ebx,DWORD PTR [ebp-0x8]
  4358a9:	mov    DWORD PTR [esi+0xc],ebx
  4358ac:	add    esi,0x10
  4358af:	cmp    esi,DWORD PTR ds:0x461174
  4358b5:	jbe    0x435887
  4358b7:	mov    ebx,DWORD PTR [ebp-0x8]
  4358ba:	mov    eax,ds:0x460e9c
  4358bf:	cmp    eax,DWORD PTR ds:0x460eb0
  4358c5:	jb     0x4358d4
  4358c7:	cmp    eax,edi
  4358c9:	ja     0x4358d4
  4358cb:	sub    ebx,ecx
  4358cd:	add    eax,ebx
  4358cf:	mov    ds:0x460e9c,eax
  4358d4:	mov    ebx,DWORD PTR ds:0x460eac
  4358da:	sub    edi,DWORD PTR ds:0x460ea0
  4358e0:	cmp    BYTE PTR ds:0x44f54e,0x0
  4358e7:	je     0x4358f0
  4358e9:	mov    ecx,edi
  4358eb:	call   0x4356ff
  4358f0:	mov    eax,ds:0x46061c
  4358f5:	add    WORD PTR [eax+0x4],di
  4358f9:	test   ebx,ebx
  4358fb:	jne    0x435933
  4358fd:	call   0x43576f
  435902:	mov    esi,DWORD PTR [ebp-0xc]
  435905:	jmp    0x43591f
  435907:	mov    ax,ds:0x4605bc
  43590d:	cmp    ax,WORD PTR ds:0x4605b8
  435914:	je     0x43581a
  43591a:	call   0x43576f
  43591f:	mov    ecx,eax
  435921:	mov    DWORD PTR ds:0x461078,ecx
  435927:	mov    DWORD PTR [esi],ecx
  435929:	cmp    ecx,DWORD PTR ds:0x460eb8
  43592f:	jae    0x435907
  435931:	jmp    0x435968
  435933:	mov    ecx,ebx
  435935:	call   0x429932
  43593a:	mov    eax,ds:0x460eac
  43593f:	mov    esi,DWORD PTR [ebp-0xc]
  435942:	mov    ecx,DWORD PTR [eax+0x3c]
  435945:	mov    DWORD PTR ds:0x460eb0,ecx
  43594b:	add    ecx,0x200
  435951:	mov    DWORD PTR ds:0x46137c,ecx
  435957:	movzx  eax,WORD PTR [eax+0x3a]
  43595b:	add    eax,ecx
  43595d:	mov    DWORD PTR ds:0x460eb4,ecx
  435963:	mov    ds:0x460eb8,eax
  435968:	mov    eax,DWORD PTR [ebp-0x10]
  43596b:	mov    DWORD PTR ds:0x460ea0,ecx
  435971:	mov    BYTE PTR [eax],0x0
  435974:	mov    DWORD PTR [esi],ecx
  435976:	mov    al,BYTE PTR [ecx]
  435978:	pop    edi
  435979:	pop    esi
  43597a:	pop    ebx
  43597b:	leave  
  43597c:	ret    
  43597d:	mov    ecx,0x3f1
  435982:	call   0x42f124
  435987:	call   0x42c81b
  43598c:	int3   
  43598d:	push   ebx
  43598e:	xor    ebx,ebx
  435990:	push   esi
  435991:	inc    ebx
  435992:	cmp    DWORD PTR ds:0x460eac,0x0
  435999:	push   edi
  43599a:	mov    edi,edx
  43599c:	mov    esi,ecx
  43599e:	je     0x4359a4
  4359a0:	xor    bl,bl
  4359a2:	jmp    0x4359c7
  4359a4:	mov    edx,DWORD PTR [esi]
  4359a6:	mov    ecx,DWORD PTR ds:0x461078
  4359ac:	sub    edx,ecx
  4359ae:	call   0x435b7c
  4359b3:	cmp    BYTE PTR ds:0x46107c,0x0
  4359ba:	jne    0x4359c7
  4359bc:	mov    ds:0x460e9c,eax
  4359c1:	mov    BYTE PTR ds:0x46107c,bl
  4359c7:	mov    edx,edi
  4359c9:	mov    ecx,esi
  4359cb:	call   0x4357d6
  4359d0:	test   bl,bl
  4359d2:	je     0x4359dc
  4359d4:	mov    ecx,DWORD PTR [esi]
  4359d6:	mov    DWORD PTR ds:0x461078,ecx
  4359dc:	pop    edi
  4359dd:	pop    esi
  4359de:	pop    ebx
  4359df:	ret    
  4359e0:	push   ebp
  4359e1:	mov    ebp,esp
  4359e3:	push   ecx
  4359e4:	cmp    BYTE PTR ds:0x46107c,0x0
  4359eb:	push   esi
  4359ec:	mov    esi,DWORD PTR ds:0x46137c
  4359f2:	jne    0x4359fe
  4359f4:	sub    esi,DWORD PTR ds:0x460e9c
  4359fa:	mov    eax,esi
  4359fc:	jmp    0x435a31
  4359fe:	mov    ecx,DWORD PTR ds:0x461078
  435a04:	mov    BYTE PTR ds:0x46107c,0x0
  435a0b:	cmp    esi,ecx
  435a0d:	jae    0x435a20
  435a0f:	mov    eax,ds:0x461170
  435a14:	mov    eax,DWORD PTR [eax+0x4]
  435a17:	sub    eax,DWORD PTR ds:0x460e9c
  435a1d:	dec    eax
  435a1e:	jmp    0x435a31
  435a20:	sub    esi,ecx
  435a22:	mov    edx,esi
  435a24:	call   0x435b7c
  435a29:	sub    esi,DWORD PTR ds:0x460e9c
  435a2f:	add    eax,esi
  435a31:	pop    esi
  435a32:	leave  
  435a33:	ret    
  435a34:	cmp    DWORD PTR ds:0x460eac,0x0
  435a3b:	jne    0x435a69
  435a3d:	mov    ax,ds:0x4605bc
  435a43:	cmp    ax,WORD PTR ds:0x4605b8
  435a4a:	je     0x435a69
  435a4c:	cmp    BYTE PTR ds:0x460ebc,0x0
  435a53:	jne    0x435a62
  435a55:	mov    BYTE PTR ds:0x460ebc,0x1
  435a5c:	mov    BYTE PTR [edx],0x0
  435a5f:	mov    al,0x20
  435a61:	ret    
  435a62:	mov    BYTE PTR ds:0x460ebc,0x0
  435a69:	jmp    0x4357d6
  435a6e:	push   ebp
  435a6f:	mov    ebp,esp
  435a71:	push   ecx
  435a72:	mov    eax,DWORD PTR [ebp+0x8]
  435a75:	push   ebx
  435a76:	push   esi
  435a77:	mov    si,WORD PTR ds:0x4605bc
  435a7e:	mov    DWORD PTR [ebp-0x4],edx
  435a81:	mov    ebx,ecx
  435a83:	cmp    si,0x14
  435a87:	jb     0x435a93
  435a89:	mov    DWORD PTR [eax],0x84b
  435a8f:	xor    al,al
  435a91:	jmp    0x435b02
  435a93:	and    DWORD PTR [eax],0x0
  435a96:	movzx  edx,si
  435a99:	imul   edx,edx,0x14
  435a9c:	add    edx,0x460ec0
  435aa2:	push   edi
  435aa3:	mov    al,BYTE PTR [edx+0x11]
  435aa6:	inc    si
  435aa8:	push   0x5
  435aaa:	mov    WORD PTR ds:0x4605bc,si
  435ab1:	pop    ecx
  435ab2:	mov    edi,edx
  435ab4:	mov    esi,0x460eac
  435ab9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435abb:	and    DWORD PTR ds:0x460eac,0x0
  435ac2:	mov    BYTE PTR [edx+0x11],al
  435ac5:	mov    ecx,DWORD PTR [ebx]
  435ac7:	mov    edx,DWORD PTR [ebp-0x4]
  435aca:	mov    BYTE PTR ds:0x460ebc,0x0
  435ad1:	lea    eax,[ecx+edx*1]
  435ad4:	mov    DWORD PTR ds:0x460eb0,ecx
  435ada:	mov    DWORD PTR ds:0x460eb4,ecx
  435ae0:	mov    ds:0x460eb8,eax
  435ae5:	mov    DWORD PTR ds:0x460ea0,ecx
  435aeb:	pop    edi
  435aec:	test   edx,edx
  435aee:	jne    0x435af7
  435af0:	call   0x43576f
  435af5:	mov    ecx,eax
  435af7:	mov    DWORD PTR [ebx],ecx
  435af9:	movzx  eax,BYTE PTR [ecx]
  435afc:	mov    al,BYTE PTR [eax+0x448f88]
  435b02:	pop    esi
  435b03:	pop    ebx
  435b04:	leave  
  435b05:	ret    0x4
  435b08:	mov    eax,ds:0x461170
  435b0d:	test   eax,eax
  435b0f:	jne    0x435b19
  435b11:	mov    eax,0x461080
  435b16:	sub    eax,0xc
  435b19:	add    eax,0xc
  435b1c:	mov    ds:0x461170,eax
  435b21:	cmp    eax,0x461170
  435b26:	jb     0x435b37
  435b28:	mov    ecx,0x3ef
  435b2d:	call   0x42f124
  435b32:	jmp    0x42c81b
  435b37:	push   0x20
  435b39:	pop    ecx
  435b3a:	call   0x43f45b
  435b3f:	mov    ecx,DWORD PTR ds:0x461170
  435b45:	mov    DWORD PTR [ecx],eax
  435b47:	mov    DWORD PTR [ecx+0x4],eax
  435b4a:	add    eax,0x20
  435b4d:	mov    DWORD PTR [ecx+0x8],eax
  435b50:	ret    
  435b51:	push   esi
  435b52:	mov    esi,DWORD PTR ds:0x461170
  435b58:	push   DWORD PTR [esi]
  435b5a:	call   DWORD PTR ds:0x464354
  435b60:	mov    eax,esi
  435b62:	sub    esi,0xc
  435b65:	pop    ecx
  435b66:	mov    DWORD PTR ds:0x461170,esi
  435b6c:	pop    esi
  435b6d:	cmp    eax,0x461080
  435b72:	jne    0x435b7b
  435b74:	and    DWORD PTR ds:0x461170,0x0
  435b7b:	ret    
  435b7c:	push   ebp
  435b7d:	mov    ebp,esp
  435b7f:	sub    esp,0x14
  435b82:	push   ebx
  435b83:	push   esi
  435b84:	mov    esi,DWORD PTR ds:0x461170
  435b8a:	push   edi
  435b8b:	mov    edi,DWORD PTR [esi+0x8]
  435b8e:	mov    ebx,DWORD PTR [esi+0x4]
  435b91:	mov    eax,edi
  435b93:	sub    eax,ebx
  435b95:	mov    DWORD PTR [ebp-0x14],edx
  435b98:	mov    DWORD PTR [ebp-0xc],ecx
  435b9b:	cmp    eax,edx
  435b9d:	jae    0x435cef
  435ba3:	mov    esi,DWORD PTR [esi]
  435ba5:	sub    ebx,esi
  435ba7:	sub    edi,esi
  435ba9:	mov    eax,ebx
  435bab:	sub    eax,edi
  435bad:	add    eax,edx
  435baf:	cmp    eax,0x20
  435bb2:	jae    0x435bb7
  435bb4:	push   0x20
  435bb6:	pop    eax
  435bb7:	add    eax,edi
  435bb9:	push   eax
  435bba:	push   esi
  435bbb:	mov    DWORD PTR [ebp-0x8],eax
  435bbe:	call   DWORD PTR ds:0x4643e8
  435bc4:	mov    edi,eax
  435bc6:	pop    ecx
  435bc7:	pop    ecx
  435bc8:	test   edi,edi
  435bca:	jne    0x435bd6
  435bcc:	mov    ecx,0x3ec
  435bd1:	call   0x42f124
  435bd6:	mov    ecx,DWORD PTR ds:0x461170
  435bdc:	mov    eax,DWORD PTR [ebp-0x8]
  435bdf:	add    eax,edi
  435be1:	mov    DWORD PTR [ecx+0x8],eax
  435be4:	lea    eax,[edi+ebx*1]
  435be7:	mov    DWORD PTR [ecx],edi
  435be9:	mov    DWORD PTR [ecx+0x4],eax
  435bec:	mov    ecx,DWORD PTR ds:0x461174
  435bf2:	mov    edx,0x45fab8
  435bf7:	cmp    ecx,edx
  435bf9:	jb     0x435c49
  435bfb:	sub    ecx,edx
  435bfd:	shr    ecx,0x4
  435c00:	mov    eax,0x45fac4
  435c05:	inc    ecx
  435c06:	mov    DWORD PTR [ebp-0x4],eax
  435c09:	mov    DWORD PTR [ebp-0x8],ecx
  435c0c:	mov    edx,DWORD PTR [eax]
  435c0e:	mov    DWORD PTR [ebp-0x10],edx
  435c11:	cmp    edx,esi
  435c13:	jb     0x435c3d
  435c15:	lea    eax,[ebx+esi*1]
  435c18:	cmp    edx,eax
  435c1a:	ja     0x435c3a
  435c1c:	mov    ecx,DWORD PTR [ebp-0x4]
  435c1f:	lea    ecx,[ecx-0xc]
  435c22:	call   0x43574f
  435c27:	test   al,al
  435c29:	jne    0x435c37
  435c2b:	mov    eax,DWORD PTR [ebp-0x10]
  435c2e:	mov    ecx,DWORD PTR [ebp-0x4]
  435c31:	sub    eax,esi
  435c33:	add    eax,edi
  435c35:	mov    DWORD PTR [ecx],eax
  435c37:	mov    ecx,DWORD PTR [ebp-0x8]
  435c3a:	mov    eax,DWORD PTR [ebp-0x4]
  435c3d:	add    eax,0x10
  435c40:	dec    ecx
  435c41:	mov    DWORD PTR [ebp-0x4],eax
  435c44:	mov    DWORD PTR [ebp-0x8],ecx
  435c47:	jne    0x435c0c
  435c49:	mov    ecx,DWORD PTR ds:0x460e9c
  435c4f:	cmp    ecx,esi
  435c51:	jb     0x435c66
  435c53:	lea    eax,[ebx+esi*1]
  435c56:	cmp    ecx,eax
  435c58:	ja     0x435c66
  435c5a:	mov    eax,edi
  435c5c:	sub    eax,esi
  435c5e:	add    ecx,eax
  435c60:	mov    DWORD PTR ds:0x460e9c,ecx
  435c66:	mov    ecx,DWORD PTR ds:0x460ea0
  435c6c:	cmp    ecx,esi
  435c6e:	jb     0x435c83
  435c70:	lea    eax,[ebx+esi*1]
  435c73:	cmp    ecx,eax
  435c75:	ja     0x435c83
  435c77:	mov    eax,edi
  435c79:	sub    eax,esi
  435c7b:	add    ecx,eax
  435c7d:	mov    DWORD PTR ds:0x460ea0,ecx
  435c83:	mov    ecx,DWORD PTR ds:0x460eb0
  435c89:	cmp    ecx,esi
  435c8b:	jb     0x435ca0
  435c8d:	lea    eax,[ebx+esi*1]
  435c90:	cmp    ecx,eax
  435c92:	ja     0x435ca0
  435c94:	mov    eax,edi
  435c96:	sub    eax,esi
  435c98:	add    ecx,eax
  435c9a:	mov    DWORD PTR ds:0x460eb0,ecx
  435ca0:	mov    ecx,DWORD PTR ds:0x460eb4
  435ca6:	cmp    ecx,esi
  435ca8:	jb     0x435cbd
  435caa:	lea    eax,[ebx+esi*1]
  435cad:	cmp    ecx,eax
  435caf:	ja     0x435cbd
  435cb1:	mov    eax,edi
  435cb3:	sub    eax,esi
  435cb5:	add    ecx,eax
  435cb7:	mov    DWORD PTR ds:0x460eb4,ecx
  435cbd:	mov    ecx,DWORD PTR ds:0x460eb8
  435cc3:	cmp    ecx,esi
  435cc5:	jb     0x435cda
  435cc7:	lea    eax,[ebx+esi*1]
  435cca:	cmp    ecx,eax
  435ccc:	ja     0x435cda
  435cce:	mov    eax,edi
  435cd0:	sub    eax,esi
  435cd2:	add    ecx,eax
  435cd4:	mov    DWORD PTR ds:0x460eb8,ecx
  435cda:	mov    ecx,DWORD PTR [ebp-0xc]
  435cdd:	cmp    ecx,esi
  435cdf:	jb     0x435cef
  435ce1:	lea    eax,[ebx+esi*1]
  435ce4:	cmp    ecx,eax
  435ce6:	ja     0x435cef
  435ce8:	sub    edi,esi
  435cea:	add    ecx,edi
  435cec:	mov    DWORD PTR [ebp-0xc],ecx
  435cef:	mov    esi,DWORD PTR [ebp-0x14]
  435cf2:	mov    ebx,DWORD PTR ds:0x461170
  435cf8:	push   esi
  435cf9:	push   0x0
  435cfb:	push   DWORD PTR [ebx+0x4]
  435cfe:	call   0x44764c
  435d03:	push   esi
  435d04:	push   DWORD PTR [ebp-0xc]
  435d07:	push   DWORD PTR [ebx+0x4]
  435d0a:	call   0x447646
  435d0f:	add    esp,0x18
  435d12:	add    DWORD PTR [ebx+0x4],esi
  435d15:	pop    edi
  435d16:	pop    esi
  435d17:	pop    ebx
  435d18:	leave  
  435d19:	ret    
  435d1a:	push   ebp
  435d1b:	mov    ebp,esp
  435d1d:	sub    esp,0x124
  435d23:	mov    eax,ds:0x448858
  435d28:	xor    eax,ebp
  435d2a:	mov    DWORD PTR [ebp-0x4],eax
  435d2d:	mov    eax,ds:0x461398
  435d32:	push   ebx
  435d33:	push   esi
  435d34:	mov    esi,DWORD PTR [ebp+0x8]
  435d37:	push   edi
  435d38:	mov    edi,DWORD PTR ds:0x46137c
  435d3e:	xor    ecx,ecx
  435d40:	and    DWORD PTR [esi],ecx
  435d42:	mov    DWORD PTR [ebp-0x124],esi
  435d48:	mov    bl,0x1
  435d4a:	mov    DWORD PTR [ebp-0x120],ecx
  435d50:	mov    DWORD PTR [ebp-0x11c],edi
  435d56:	mov    BYTE PTR [ebp-0x10d],0xd
  435d5d:	mov    DWORD PTR [ebp-0x10c],eax
  435d63:	mov    WORD PTR [ebp-0x108],0x500
  435d6c:	cmp    DWORD PTR [esi],0x0
  435d6f:	jne    0x435e0b
  435d75:	cmp    ecx,0x100
  435d7b:	jne    0x435d85
  435d7d:	mov    DWORD PTR [esi],0x84f
  435d83:	jmp    0x435dfb
  435d85:	inc    edi
  435d86:	mov    DWORD PTR [ebp-0x114],edi
  435d8c:	cmp    edi,DWORD PTR ds:0x460eb8
  435d92:	jb     0x435dd1
  435d94:	lea    edx,[ebp-0x115]
  435d9a:	lea    ecx,[ebp-0x114]
  435da0:	call   0x435a34
  435da5:	mov    eax,ds:0x46137c
  435daa:	cmp    eax,DWORD PTR [ebp-0x11c]
  435db0:	je     0x435dbc
  435db2:	mov    edi,eax
  435db4:	mov    DWORD PTR [ebp-0x11c],edi
  435dba:	jmp    0x435dc2
  435dbc:	mov    edi,DWORD PTR [ebp-0x114]
  435dc2:	cmp    BYTE PTR [ebp-0x115],0x0
  435dc9:	jne    0x435e05
  435dcb:	mov    ecx,DWORD PTR [ebp-0x120]
  435dd1:	mov    al,BYTE PTR [edi]
  435dd3:	mov    BYTE PTR [ebp+ecx*1-0x105],al
  435dda:	inc    ecx
  435ddb:	mov    DWORD PTR [ebp-0x120],ecx
  435de1:	cmp    al,0x28
  435de3:	jne    0x435de9
  435de5:	inc    bl
  435de7:	jmp    0x435dfb
  435de9:	cmp    al,0x29
  435deb:	jne    0x435df1
  435ded:	dec    bl
  435def:	jmp    0x435dfb
  435df1:	cmp    al,0xa
  435df3:	jne    0x435dfb
  435df5:	mov    DWORD PTR [esi],0x86d
  435dfb:	test   bl,bl
  435dfd:	jne    0x435d6c
  435e03:	jmp    0x435e0b
  435e05:	mov    DWORD PTR [esi],0x3f8
  435e0b:	inc    edi
  435e0c:	mov    al,0xa
  435e0e:	test   bl,bl
  435e10:	jne    0x435f17
  435e16:	mov    DWORD PTR [ebp-0x114],edi
  435e1c:	cmp    BYTE PTR ds:0x461379,bl
  435e22:	je     0x435e3f
  435e24:	mov    edx,0x403c54
  435e29:	lea    ecx,[ebp-0x114]
  435e2f:	call   0x43511e
  435e34:	neg    ax
  435e37:	sbb    al,al
  435e39:	and    BYTE PTR ds:0x461379,al
  435e3f:	mov    eax,ds:0x46137c
  435e44:	cmp    eax,DWORD PTR [ebp-0x11c]
  435e4a:	je     0x435e4e
  435e4c:	mov    edi,eax
  435e4e:	mov    ecx,DWORD PTR [ebp-0x120]
  435e54:	dec    ecx
  435e55:	mov    BYTE PTR [ebp-0x106],cl
  435e5b:	lea    eax,[ecx+0xe]
  435e5e:	mov    ecx,DWORD PTR ds:0x461174
  435e64:	mov    BYTE PTR [ebp-0x110],0x3d
  435e6b:	mov    WORD PTR [ebp-0x10f],ax
  435e72:	call   0x43435b
  435e77:	mov    bl,BYTE PTR ds:0x461379
  435e7d:	mov    esi,eax
  435e7f:	mov    BYTE PTR ds:0x461379,0x0
  435e86:	call   0x435b08
  435e8b:	movzx  ecx,BYTE PTR [ebp-0x110]
  435e92:	lea    eax,[ebp-0x110]
  435e98:	push   eax
  435e99:	mov    eax,ds:0x448988
  435e9e:	call   DWORD PTR [eax+ecx*4]
  435ea1:	call   0x435b51
  435ea6:	mov    ecx,esi
  435ea8:	call   0x4343d8
  435ead:	mov    ecx,DWORD PTR ds:0x45fab4
  435eb3:	xor    esi,esi
  435eb5:	mov    BYTE PTR ds:0x461379,bl
  435ebb:	mov    DWORD PTR ds:0x460eb4,edi
  435ec1:	mov    DWORD PTR [ebp-0x114],0x449088
  435ecb:	test   ecx,ecx
  435ecd:	je     0x435efe
  435ecf:	mov    esi,ecx
  435ed1:	lea    edx,[esi+0x1]
  435ed4:	mov    al,BYTE PTR [esi]
  435ed6:	inc    esi
  435ed7:	test   al,al
  435ed9:	jne    0x435ed4
  435edb:	sub    esi,edx
  435edd:	mov    edx,esi
  435edf:	call   0x435b7c
  435ee4:	push   DWORD PTR ds:0x45fab4
  435eea:	mov    DWORD PTR [ebp-0x114],eax
  435ef0:	call   DWORD PTR ds:0x464354
  435ef6:	and    DWORD PTR ds:0x45fab4,0x0
  435efd:	pop    ecx
  435efe:	push   DWORD PTR [ebp-0x124]
  435f04:	mov    edx,esi
  435f06:	lea    ecx,[ebp-0x114]
  435f0c:	call   0x435a6e
  435f11:	mov    edi,DWORD PTR [ebp-0x114]
  435f17:	mov    ecx,DWORD PTR [ebp-0x4]
  435f1a:	and    DWORD PTR ds:0x460e9c,0x0
  435f21:	mov    DWORD PTR ds:0x46137c,edi
  435f27:	pop    edi
  435f28:	pop    esi
  435f29:	xor    ecx,ebp
  435f2b:	pop    ebx
  435f2c:	call   0x446dc7
  435f31:	leave  
  435f32:	ret    0x4
  435f35:	mov    eax,ds:0x46137c
  435f3a:	and    DWORD PTR ds:0x460e9c,0x0
  435f41:	dec    eax
  435f42:	mov    ds:0x46137c,eax
  435f47:	mov    ds:0x460eb4,eax
  435f4c:	call   0x42f124
  435f51:	mov    eax,ds:0x46061c
  435f56:	xor    ecx,ecx
  435f58:	mov    WORD PTR [eax+0x10],cx
  435f5c:	add    eax,0x20
  435f5f:	mov    ds:0x461384,eax
  435f64:	ret    
  435f65:	cmp    BYTE PTR ds:0x4605b6,0x0
  435f6c:	jne    0x435f75
  435f6e:	call   0x435f35
  435f73:	jmp    0x435fab
  435f75:	mov    ecx,DWORD PTR ds:0x461384
  435f7b:	cmp    ecx,0x4600e8
  435f81:	jb     0x435f86
  435f83:	sub    ecx,0x10
  435f86:	push   0x78
  435f88:	pop    eax
  435f89:	mov    WORD PTR [ecx],ax
  435f8c:	push   0x4
  435f8e:	pop    eax
  435f8f:	mov    WORD PTR [ecx+0x2],ax
  435f93:	mov    eax,ds:0x460e9c
  435f98:	mov    DWORD PTR [ecx+0xc],eax
  435f9b:	add    ecx,0x10
  435f9e:	and    DWORD PTR ds:0x460e9c,0x0
  435fa5:	mov    DWORD PTR ds:0x461384,ecx
  435fab:	jmp    0x438026
  435fb0:	sub    DWORD PTR ds:0x461384,0x10
  435fb7:	mov    ecx,0x7fa
  435fbc:	jmp    0x435f65
  435fc1:	push   ebp
  435fc2:	mov    ebp,esp
  435fc4:	push   ecx
  435fc5:	mov    eax,ds:0x46137c
  435fca:	push   ebx
  435fcb:	xor    bl,bl
  435fcd:	mov    BYTE PTR [ebp-0x1],bl
  435fd0:	cmp    eax,DWORD PTR ds:0x460eb8
  435fd6:	jb     0x43601f
  435fd8:	lea    edx,[ebp-0x1]
  435fdb:	mov    ecx,0x46137c
  435fe0:	call   0x435a34
  435fe5:	mov    bl,BYTE PTR [ebp-0x1]
  435fe8:	mov    cl,al
  435fea:	mov    BYTE PTR ds:0x46107e,cl
  435ff0:	mov    BYTE PTR ds:0x46107f,bl
  435ff6:	test   bl,bl
  435ff8:	je     0x436018
  435ffa:	cmp    DWORD PTR ds:0x461384,0x4600f8
  436004:	jb     0x436018
  436006:	call   0x435fb0
  43600b:	mov    eax,ds:0x46137c
  436010:	mov    cl,BYTE PTR ds:0x46107e
  436016:	jmp    0x436027
  436018:	mov    eax,ds:0x46137c
  43601d:	jmp    0x436027
  43601f:	mov    cl,BYTE PTR [eax]
  436021:	mov    BYTE PTR ds:0x46107e,cl
  436027:	inc    eax
  436028:	mov    ds:0x46137c,eax
  43602d:	movzx  eax,cl
  436030:	mov    al,BYTE PTR [eax+0x448f88]
  436036:	mov    ds:0x46139e,al
  43603b:	xor    eax,eax
  43603d:	test   bl,bl
  43603f:	sete   al
  436042:	pop    ebx
  436043:	leave  
  436044:	ret    
  436045:	mov    eax,ds:0x46137c
  43604a:	inc    eax
  43604b:	mov    ds:0x46137c,eax
  436050:	cmp    eax,DWORD PTR ds:0x460eb8
  436056:	jb     0x4360a8
  436058:	mov    edx,0x46107f
  43605d:	mov    ecx,0x46137c
  436062:	call   0x435a34
  436067:	mov    cl,BYTE PTR ds:0x46107f
  43606d:	mov    ds:0x46107e,al
  436072:	test   cl,cl
  436074:	je     0x436092
  436076:	cmp    DWORD PTR ds:0x461384,0x4600f8
  436080:	jb     0x436092
  436082:	call   0x435fb0
  436087:	mov    al,ds:0x46107e
  43608c:	mov    cl,BYTE PTR ds:0x46107f
  436092:	movzx  eax,al
  436095:	mov    al,BYTE PTR [eax+0x448f88]
  43609b:	mov    ds:0x46139e,al
  4360a0:	xor    eax,eax
  4360a2:	test   cl,cl
  4360a4:	sete   al
  4360a7:	ret    
  4360a8:	mov    al,BYTE PTR [eax]
  4360aa:	mov    ds:0x46107e,al
  4360af:	movzx  eax,al
  4360b2:	mov    al,BYTE PTR [eax+0x448f88]
  4360b8:	mov    ds:0x46139e,al
  4360bd:	mov    al,0x1
  4360bf:	ret    
  4360c0:	mov    edx,DWORD PTR ds:0x46137c
  4360c6:	inc    edx
  4360c7:	push   ebx
  4360c8:	mov    bl,BYTE PTR ds:0x46139e
  4360ce:	mov    bh,cl
  4360d0:	mov    DWORD PTR ds:0x46137c,edx
  4360d6:	cmp    edx,DWORD PTR ds:0x460eb8
  4360dc:	jb     0x436124
  4360de:	mov    edx,0x46107f
  4360e3:	mov    ecx,0x46137c
  4360e8:	call   0x435a34
  4360ed:	cmp    BYTE PTR ds:0x46107f,0x0
  4360f4:	movzx  ecx,al
  4360f7:	mov    ds:0x46107e,al
  4360fc:	mov    cl,BYTE PTR [ecx+0x448f88]
  436102:	mov    BYTE PTR ds:0x46139e,cl
  436108:	je     0x43611c
  43610a:	cmp    DWORD PTR ds:0x461384,0x4600f8
  436114:	jb     0x43611c
  436116:	pop    ebx
  436117:	jmp    0x435fb0
  43611c:	mov    edx,DWORD PTR ds:0x46137c
  436122:	jmp    0x43612b
  436124:	mov    al,BYTE PTR [edx]
  436126:	mov    ds:0x46107e,al
  43612b:	movsx  ecx,al
  43612e:	movzx  eax,bh
  436131:	mov    BYTE PTR ds:0x46139e,bl
  436137:	cmp    ecx,eax
  436139:	jne    0x436145
  43613b:	inc    bl
  43613d:	mov    BYTE PTR ds:0x46139e,bl
  436143:	jmp    0x43614c
  436145:	dec    edx
  436146:	mov    DWORD PTR ds:0x46137c,edx
  43614c:	pop    ebx
  43614d:	jmp    0x437ee0
  436152:	push   ebp
  436153:	mov    ebp,esp
  436155:	sub    esp,0x38
  436158:	mov    eax,ds:0x448858
  43615d:	xor    eax,ebp
  43615f:	mov    DWORD PTR [ebp-0x4],eax
  436162:	push   ebx
  436163:	mov    bl,BYTE PTR ds:0x46139e
  436169:	movsx  eax,bl
  43616c:	push   esi
  43616d:	mov    al,BYTE PTR [eax+0x405ac8]
  436173:	xor    edx,edx
  436175:	push   edi
  436176:	lea    edi,[ebp-0x28]
  436179:	mov    BYTE PTR [ebp-0x29],dl
  43617c:	mov    ecx,edx
  43617e:	mov    edx,DWORD PTR ds:0x46137c
  436184:	mov    DWORD PTR [ebp-0x30],edi
  436187:	mov    esi,0x461178
  43618c:	cmp    al,0xff
  43618e:	je     0x43622b
  436194:	cmp    ecx,0x20
  436197:	jg     0x436527
  43619d:	mov    BYTE PTR [esi],al
  43619f:	inc    esi
  4361a0:	inc    ecx
  4361a1:	mov    DWORD PTR [ebp-0x38],ecx
  4361a4:	movzx  ecx,al
  4361a7:	inc    edx
  4361a8:	mov    DWORD PTR [ebp-0x34],ecx
  4361ab:	mov    DWORD PTR ds:0x46137c,edx
  4361b1:	cmp    edx,DWORD PTR ds:0x460eb8
  4361b7:	jb     0x436200
  4361b9:	mov    edx,0x46107f
  4361be:	mov    ecx,0x46137c
  4361c3:	call   0x435a34
  4361c8:	cmp    BYTE PTR ds:0x46107f,0x0
  4361cf:	mov    ds:0x46107e,al
  4361d4:	movzx  eax,al
  4361d7:	mov    bl,BYTE PTR [eax+0x448f88]
  4361dd:	mov    BYTE PTR ds:0x46139e,bl
  4361e3:	je     0x4361f5
  4361e5:	cmp    DWORD PTR ds:0x461384,0x4600f8
  4361ef:	jae    0x436499
  4361f5:	mov    edx,DWORD PTR ds:0x46137c
  4361fb:	mov    ecx,DWORD PTR [ebp-0x34]
  4361fe:	jmp    0x436216
  436200:	mov    al,BYTE PTR [edx]
  436202:	mov    ds:0x46107e,al
  436207:	movzx  eax,al
  43620a:	mov    bl,BYTE PTR [eax+0x448f88]
  436210:	mov    BYTE PTR ds:0x46139e,bl
  436216:	movsx  eax,bl
  436219:	mov    al,BYTE PTR [eax+0x405ac8]
  43621f:	cmp    al,0xff
  436221:	je     0x43622b
  436223:	mov    ecx,DWORD PTR [ebp-0x38]
  436226:	jmp    0x436194
  43622b:	inc    edx
  43622c:	mov    DWORD PTR ds:0x46137c,edx
  436232:	cmp    bl,0x21
  436235:	je     0x4363c6
  43623b:	mov    al,bl
  43623d:	sub    al,0x48
  43623f:	cmp    al,0x11
  436241:	ja     0x436250
  436243:	movsx  eax,bl
  436246:	movzx  eax,WORD PTR [eax*2+0x40498c]
  43624e:	jmp    0x436252
  436250:	xor    eax,eax
  436252:	test   eax,eax
  436254:	jne    0x4362c4
  436256:	mov    bl,BYTE PTR ds:0x45f83a
  43625c:	dec    edx
  43625d:	mov    DWORD PTR ds:0x46137c,edx
  436263:	cmp    bl,0xa
  436266:	ja     0x436283
  436268:	lea    edx,[esi-0x1]
  43626b:	mov    al,BYTE PTR [edx]
  43626d:	cmp    al,0xb
  43626f:	jne    0x436275
  436271:	mov    esi,edx
  436273:	jmp    0x4362dd
  436275:	cmp    al,0xd
  436277:	jne    0x436283
  436279:	push   0xa
  43627b:	pop    eax
  43627c:	mov    esi,edx
  43627e:	jmp    0x436347
  436283:	test   DWORD PTR ds:0x4605b0,0x1000
  43628d:	je     0x4362c1
  43628f:	mov    bl,0xa
  436291:	xor    edx,edx
  436293:	xor    eax,eax
  436295:	inc    edx
  436296:	mov    edi,esi
  436298:	mov    esi,0x461178
  43629d:	sub    edi,esi
  43629f:	test   al,al
  4362a1:	je     0x436476
  4362a7:	lea    ecx,[ebp-0x29]
  4362aa:	call   0x435b7c
  4362af:	mov    edx,edi
  4362b1:	mov    ecx,esi
  4362b3:	call   0x435b7c
  4362b8:	lea    ecx,[eax-0x1]
  4362bb:	inc    edi
  4362bc:	jmp    0x436481
  4362c1:	movzx  eax,bl
  4362c4:	cmp    eax,0x63
  4362c7:	je     0x4363c6
  4362cd:	cmp    eax,0x64
  4362d0:	jne    0x4362d8
  4362d2:	mov    BYTE PTR [esi],0x52
  4362d5:	inc    esi
  4362d6:	jmp    0x43628f
  4362d8:	cmp    eax,0x2
  4362db:	jne    0x436302
  4362dd:	cmp    esi,0x461179
  4362e3:	jne    0x4362ea
  4362e5:	cmp    ecx,0x2
  4362e8:	jb     0x436353
  4362ea:	lea    edx,[ebp-0x30]
  4362ed:	mov    ecx,esi
  4362ef:	call   0x4352b5
  4362f4:	test   al,al
  4362f6:	je     0x43631f
  4362f8:	mov    ecx,0x800
  4362fd:	jmp    0x43652c
  436302:	cmp    eax,0x8
  436305:	jne    0x436324
  436307:	cmp    esi,0x461179
  43630d:	jne    0x436313
  43630f:	cmp    ecx,eax
  436311:	jb     0x436353
  436313:	lea    edx,[ebp-0x30]
  436316:	mov    ecx,esi
  436318:	call   0x4351fa
  43631d:	jmp    0x4362f4
  43631f:	mov    edi,DWORD PTR [ebp-0x30]
  436322:	jmp    0x436392
  436324:	cmp    eax,0x10
  436327:	jne    0x436343
  436329:	cmp    esi,0x461179
  43632f:	jne    0x436335
  436331:	cmp    ecx,eax
  436333:	jb     0x436353
  436335:	mov    edx,esi
  436337:	lea    ecx,[ebp-0x28]
  43633a:	call   0x43526a
  43633f:	mov    edi,eax
  436341:	jmp    0x436392
  436343:	test   eax,eax
  436345:	je     0x436399
  436347:	cmp    esi,0x461179
  43634d:	jne    0x436375
  43634f:	cmp    ecx,eax
  436351:	jae    0x436375
  436353:	xor    edi,edi
  436355:	cmp    ecx,0xffff
  43635b:	jbe    0x436364
  43635d:	mov    bl,0xe
  43635f:	jmp    0x436481
  436364:	cmp    ecx,0xff
  43636a:	seta   bl
  43636d:	add    bl,0xb
  436370:	jmp    0x436481
  436375:	push   eax
  436376:	mov    edx,esi
  436378:	lea    ecx,[ebp-0x28]
  43637b:	call   0x435325
  436380:	mov    edi,eax
  436382:	test   edi,edi
  436384:	jne    0x436392
  436386:	jmp    0x4362f8
  43638b:	cmp    BYTE PTR [edi-0x1],0x0
  43638f:	jne    0x436399
  436391:	dec    edi
  436392:	lea    eax,[ebp-0x28]
  436395:	cmp    edi,eax
  436397:	ja     0x43638b
  436399:	lea    eax,[ebp-0x28]
  43639c:	sub    edi,eax
  43639e:	cmp    edi,0x4
  4363a1:	ja     0x4363bc
  4363a3:	cmp    edi,0x2
  4363a6:	jbe    0x4363ac
  4363a8:	mov    bl,0xe
  4363aa:	jmp    0x4363b2
  4363ac:	sete   bl
  4363af:	add    bl,0xb
  4363b2:	mov    ecx,DWORD PTR [ebp-0x28]
  4363b5:	xor    edi,edi
  4363b7:	jmp    0x436481
  4363bc:	mov    bl,0x9
  4363be:	lea    ecx,[ebp-0x28]
  4363c1:	jmp    0x436478
  4363c6:	mov    edx,0x461178
  4363cb:	mov    eax,edx
  4363cd:	cmp    esi,edx
  4363cf:	jbe    0x4363e6
  4363d1:	mov    cl,BYTE PTR [eax]
  4363d3:	cmp    cl,0xa
  4363d6:	jae    0x436465
  4363dc:	add    cl,0x30
  4363df:	mov    BYTE PTR [eax],cl
  4363e1:	inc    eax
  4363e2:	cmp    eax,esi
  4363e4:	jb     0x4363d1
  4363e6:	mov    BYTE PTR [esi],0x2e
  4363e9:	inc    esi
  4363ea:	mov    edi,esi
  4363ec:	sub    edi,edx
  4363ee:	call   0x435fc1
  4363f3:	test   al,al
  4363f5:	je     0x436531
  4363fb:	cmp    edi,0x20
  4363fe:	jge    0x436527
  436404:	mov    al,ds:0x46107e
  436409:	mov    BYTE PTR [esi],al
  43640b:	mov    al,ds:0x46139e
  436410:	inc    esi
  436411:	inc    edi
  436412:	cmp    al,0x24
  436414:	jl     0x43641a
  436416:	cmp    al,0x5f
  436418:	jle    0x4363ee
  43641a:	cmp    al,0x6d
  43641c:	je     0x4363ee
  43641e:	cmp    al,0x6e
  436420:	je     0x4363ee
  436422:	mov    ecx,DWORD PTR ds:0x461384
  436428:	dec    DWORD PTR ds:0x46137c
  43642e:	lea    eax,[ecx-0x10]
  436431:	dec    esi
  436432:	mov    bl,0x8
  436434:	cmp    eax,DWORD PTR ds:0x46061c
  43643a:	je     0x436291
  436440:	lea    eax,[ecx-0x10]
  436443:	xor    edx,edx
  436445:	cmp    WORD PTR [eax],0x2f
  436449:	jne    0x436293
  43644f:	inc    edx
  436450:	cmp    WORD PTR [ecx-0xe],dx
  436454:	jne    0x43646f
  436456:	mov    ds:0x461384,eax
  43645b:	mov    al,0x2d
  43645d:	mov    BYTE PTR [ebp-0x29],al
  436460:	jmp    0x436296
  436465:	mov    ecx,0x801
  43646a:	jmp    0x43652c
  43646f:	xor    eax,eax
  436471:	jmp    0x436296
  436476:	mov    ecx,esi
  436478:	mov    edx,edi
  43647a:	call   0x435b7c
  43647f:	mov    ecx,eax
  436481:	mov    eax,0xffbf
  436486:	and    WORD PTR ds:0x4605b0,ax
  43648d:	cmp    DWORD PTR ds:0x461384,0x4600f8
  436497:	jb     0x4364a3
  436499:	call   0x435fb0
  43649e:	jmp    0x436531
  4364a3:	mov    esi,DWORD PTR ds:0x461384
  4364a9:	add    DWORD PTR ds:0x461384,0x10
  4364b0:	movzx  eax,bl
  4364b3:	xor    ebx,ebx
  4364b5:	inc    ebx
  4364b6:	mov    DWORD PTR [esi+0xc],ecx
  4364b9:	mov    WORD PTR [esi+0x4],di
  4364bd:	mov    WORD PTR [esi],ax
  4364c0:	mov    WORD PTR [esi+0x2],bx
  4364c4:	mov    eax,ds:0x46137c
  4364c9:	cmp    eax,DWORD PTR ds:0x460eb8
  4364cf:	jb     0x43650a
  4364d1:	mov    edx,0x46107f
  4364d6:	mov    ecx,0x46137c
  4364db:	call   0x435a34
  4364e0:	cmp    BYTE PTR ds:0x46107f,0x0
  4364e7:	mov    ds:0x46107e,al
  4364ec:	movzx  eax,al
  4364ef:	mov    al,BYTE PTR [eax+0x448f88]
  4364f5:	mov    ds:0x46139e,al
  4364fa:	je     0x43651f
  4364fc:	cmp    DWORD PTR ds:0x461384,0x4600f8
  436506:	jb     0x43651f
  436508:	jmp    0x436499
  43650a:	mov    al,BYTE PTR [eax]
  43650c:	mov    ds:0x46107e,al
  436511:	movzx  eax,al
  436514:	mov    al,BYTE PTR [eax+0x448f88]
  43651a:	mov    ds:0x46139e,al
  43651f:	mov    BYTE PTR ds:0x46137a,bl
  436525:	jmp    0x436531
  436527:	mov    ecx,0x817
  43652c:	call   0x435f65
  436531:	mov    ecx,DWORD PTR [ebp-0x4]
  436534:	pop    edi
  436535:	pop    esi
  436536:	xor    ecx,ebp
  436538:	pop    ebx
  436539:	call   0x446dc7
  43653e:	leave  
  43653f:	ret    
  436540:	mov    ecx,DWORD PTR ds:0x461384
  436546:	push   ebx
  436547:	mov    edx,DWORD PTR [ecx-0x8]
  43654a:	xor    ebx,ebx
  43654c:	inc    ebx
  43654d:	cmp    BYTE PTR ds:0x4605b3,0x0
  436554:	je     0x43657e
  436556:	lea    eax,[ecx-0x10]
  436559:	cmp    eax,DWORD PTR ds:0x46061c
  43655f:	je     0x436578
  436561:	cmp    WORD PTR [ecx-0x10],0xd
  436566:	jne    0x436578
  436568:	cmp    WORD PTR [ecx-0xe],bx
  43656c:	jne    0x436578
  43656e:	test   edx,edx
  436570:	je     0x436578
  436572:	cmp    BYTE PTR [edx+0x6],0xd
  436576:	je     0x43657e
  436578:	pop    ebx
  436579:	jmp    0x437ee0
  43657e:	mov    ecx,DWORD PTR ds:0x46137c
  436584:	push   esi
  436585:	lea    eax,[ecx+0x1]
  436588:	push   edi
  436589:	mov    BYTE PTR ds:0x46139d,bl
  43658f:	mov    ds:0x460e9c,eax
  436594:	xor    esi,esi
  436596:	mov    ebx,0x46107f
  43659b:	mov    edi,0x4600f8
  4365a0:	mov    DWORD PTR ds:0x4613a0,esi
  4365a6:	inc    ecx
  4365a7:	mov    DWORD PTR ds:0x46137c,ecx
  4365ad:	cmp    ecx,DWORD PTR ds:0x460eb8
  4365b3:	jb     0x4365f5
  4365b5:	mov    edx,ebx
  4365b7:	mov    ecx,0x46137c
  4365bc:	call   0x435a34
  4365c1:	cmp    BYTE PTR ds:0x46107f,0x0
  4365c8:	mov    dl,al
  4365ca:	movzx  ecx,dl
  4365cd:	mov    BYTE PTR ds:0x46107e,dl
  4365d3:	mov    cl,BYTE PTR [ecx+0x448f88]
  4365d9:	mov    BYTE PTR ds:0x46139e,cl
  4365df:	je     0x4365ed
  4365e1:	cmp    DWORD PTR ds:0x461384,edi
  4365e7:	jae    0x43672e
  4365ed:	mov    ecx,DWORD PTR ds:0x46137c
  4365f3:	jmp    0x43660b
  4365f5:	mov    dl,BYTE PTR [ecx]
  4365f7:	movzx  eax,dl
  4365fa:	mov    BYTE PTR ds:0x46107e,dl
  436600:	mov    al,BYTE PTR [eax+0x448f88]
  436606:	mov    ds:0x46139e,al
  43660b:	cmp    dl,0x7d
  43660e:	jne    0x43662f
  436610:	dec    BYTE PTR ds:0x46139d
  436616:	mov    DWORD PTR ds:0x4613a0,esi
  43661c:	jne    0x4365a6
  43661e:	push   0x6
  436620:	pop    eax
  436621:	pop    edi
  436622:	pop    esi
  436623:	mov    ds:0x4613a4,ax
  436629:	pop    ebx
  43662a:	jmp    0x437b11
  43662f:	cmp    dl,0x7b
  436632:	jne    0x43663f
  436634:	inc    BYTE PTR ds:0x46139d
  43663a:	jmp    0x4365a0
  43663f:	cmp    dl,0x5c
  436642:	je     0x436723
  436648:	cmp    dl,0x2c
  43664b:	je     0x436723
  436651:	cmp    dl,0x22
  436654:	je     0x4366f7
  43665a:	cmp    dl,0x27
  43665d:	je     0x4366f7
  436663:	cmp    dl,0x3b
  436666:	jne    0x4366d1
  436668:	inc    ecx
  436669:	mov    DWORD PTR ds:0x46137c,ecx
  43666f:	cmp    ecx,DWORD PTR ds:0x460eb8
  436675:	jb     0x4366b6
  436677:	mov    edx,ebx
  436679:	mov    ecx,0x46137c
  43667e:	call   0x435a34
  436683:	cmp    BYTE PTR ds:0x46107f,0x0
  43668a:	mov    dl,al
  43668c:	movzx  eax,dl
  43668f:	mov    BYTE PTR ds:0x46107e,dl
  436695:	mov    al,BYTE PTR [eax+0x448f88]
  43669b:	mov    ds:0x46139e,al
  4366a0:	je     0x4366ae
  4366a2:	cmp    DWORD PTR ds:0x461384,edi
  4366a8:	jae    0x43672e
  4366ae:	mov    ecx,DWORD PTR ds:0x46137c
  4366b4:	jmp    0x4366cc
  4366b6:	mov    dl,BYTE PTR [ecx]
  4366b8:	movzx  eax,dl
  4366bb:	mov    BYTE PTR ds:0x46107e,dl
  4366c1:	mov    al,BYTE PTR [eax+0x448f88]
  4366c7:	mov    ds:0x46139e,al
  4366cc:	cmp    dl,0xa
  4366cf:	jne    0x436668
  4366d1:	cmp    dl,0xa
  4366d4:	jne    0x4366e9
  4366d6:	cmp    DWORD PTR ds:0x4613a0,esi
  4366dc:	je     0x43670f
  4366de:	inc    DWORD PTR ds:0x460618
  4366e4:	jmp    0x4365a6
  4366e9:	cmp    dl,0x20
  4366ec:	jle    0x4365a6
  4366f2:	jmp    0x4365a0
  4366f7:	push   0x4613a0
  4366fc:	call   0x4353d7
  436701:	mov    ecx,DWORD PTR ds:0x46137c
  436707:	test   al,al
  436709:	je     0x4365a0
  43670f:	pop    edi
  436710:	dec    ecx
  436711:	pop    esi
  436712:	mov    DWORD PTR ds:0x46137c,ecx
  436718:	mov    ecx,0x7fd
  43671d:	pop    ebx
  43671e:	jmp    0x435f65
  436723:	inc    DWORD PTR ds:0x4613a0
  436729:	jmp    0x4365a6
  43672e:	pop    edi
  43672f:	pop    esi
  436730:	pop    ebx
  436731:	jmp    0x435fb0
  436736:	cmp    DWORD PTR ds:0x460eac,0x0
  43673d:	je     0x436745
  43673f:	inc    DWORD PTR ds:0x460618
  436745:	mov    ecx,DWORD PTR ds:0x46137c
  43674b:	push   ebx
  43674c:	push   esi
  43674d:	push   edi
  43674e:	mov    edi,0x46107f
  436753:	mov    ebx,0x46137c
  436758:	mov    esi,0x4600f8
  43675d:	inc    ecx
  43675e:	mov    DWORD PTR ds:0x46137c,ecx
  436764:	cmp    ecx,DWORD PTR ds:0x460eb8
  43676a:	jb     0x4367a1
  43676c:	mov    edx,edi
  43676e:	mov    ecx,ebx
  436770:	call   0x435a34
  436775:	cmp    BYTE PTR ds:0x46107f,0x0
  43677c:	mov    ds:0x46107e,al
  436781:	movzx  eax,al
  436784:	mov    al,BYTE PTR [eax+0x448f88]
  43678a:	mov    ds:0x46139e,al
  43678f:	je     0x436799
  436791:	cmp    DWORD PTR ds:0x461384,esi
  436797:	jae    0x436804
  436799:	mov    ecx,DWORD PTR ds:0x46137c
  43679f:	jmp    0x4367b6
  4367a1:	mov    al,BYTE PTR [ecx]
  4367a3:	mov    ds:0x46107e,al
  4367a8:	movzx  eax,al
  4367ab:	mov    al,BYTE PTR [eax+0x448f88]
  4367b1:	mov    ds:0x46139e,al
  4367b6:	cmp    al,0x20
  4367b8:	je     0x43675d
  4367ba:	cmp    al,0x1f
  4367bc:	jne    0x43682c
  4367be:	mov    eax,ds:0x461384
  4367c3:	inc    ecx
  4367c4:	mov    ds:0x461174,eax
  4367c9:	mov    DWORD PTR ds:0x46137c,ecx
  4367cf:	cmp    ecx,DWORD PTR ds:0x460eb8
  4367d5:	jb     0x43680c
  4367d7:	mov    edx,edi
  4367d9:	mov    ecx,ebx
  4367db:	call   0x435a34
  4367e0:	cmp    BYTE PTR ds:0x46107f,0x0
  4367e7:	mov    ds:0x46107e,al
  4367ec:	movzx  eax,al
  4367ef:	mov    al,BYTE PTR [eax+0x448f88]
  4367f5:	mov    ds:0x46139e,al
  4367fa:	je     0x436821
  4367fc:	cmp    DWORD PTR ds:0x461384,esi
  436802:	jb     0x436821
  436804:	pop    edi
  436805:	pop    esi
  436806:	pop    ebx
  436807:	jmp    0x435fb0
  43680c:	mov    al,BYTE PTR [ecx]
  43680e:	mov    ds:0x46107e,al
  436813:	movzx  eax,al
  436816:	mov    al,BYTE PTR [eax+0x448f88]
  43681c:	mov    ds:0x46139e,al
  436821:	pop    edi
  436822:	pop    esi
  436823:	mov    BYTE PTR ds:0x46137a,0x1
  43682a:	pop    ebx
  43682b:	ret    
  43682c:	pop    edi
  43682d:	pop    esi
  43682e:	pop    ebx
  43682f:	cmp    al,0x22
  436831:	je     0x43683d
  436833:	mov    ecx,0x83d
  436838:	jmp    0x435f65
  43683d:	mov    BYTE PTR ds:0x46139f,0x1
  436844:	jmp    0x438026
  436849:	cmp    BYTE PTR ds:0x4605b3,0x0
  436850:	jne    0x43685c
  436852:	mov    ecx,0x7fd
  436857:	jmp    0x435f65
  43685c:	jmp    0x437ee0
  436861:	cmp    BYTE PTR ds:0x4613a8,0x0
  436868:	je     0x436871
  43686a:	mov    BYTE PTR ds:0x4613a9,0x2
  436871:	mov    cl,0x26
  436873:	jmp    0x4360c0
  436878:	mov    cx,WORD PTR ds:0x4605b0
  43687f:	mov    al,cl
  436881:	and    al,0x7
  436883:	cmp    al,0x3
  436885:	jne    0x43689d
  436887:	mov    eax,0xfff8
  43688c:	and    cx,ax
  43688f:	mov    WORD PTR ds:0x4605b0,cx
  436896:	mov    BYTE PTR ds:0x461380,0x4
  43689d:	mov    cl,0x3a
  43689f:	jmp    0x4360c0
  4368a4:	mov    al,ds:0x4605b0
  4368a9:	test   al,0x20
  4368ab:	je     0x4368c2
  4368ad:	mov    eax,ds:0x4605b0
  4368b2:	xor    eax,0x10
  4368b5:	and    eax,0xffdf
  4368ba:	mov    ds:0x4605b0,ax
  4368c0:	jmp    0x4368ce
  4368c2:	test   al,al
  4368c4:	jns    0x4368ce
  4368c6:	or     WORD PTR ds:0x4605b0,0x10
  4368ce:	jmp    0x437ee0
  4368d3:	mov    ecx,DWORD PTR ds:0x461384
  4368d9:	mov    edx,DWORD PTR [ecx-0x8]
  4368dc:	lea    eax,[ecx-0x10]
  4368df:	cmp    eax,DWORD PTR ds:0x46061c
  4368e5:	jbe    0x436917
  4368e7:	cmp    WORD PTR [ecx-0xe],0x1
  4368ec:	jne    0x436917
  4368ee:	cmp    WORD PTR [ecx-0x10],0xd
  4368f3:	jne    0x436917
  4368f5:	test   edx,edx
  4368f7:	je     0x436917
  4368f9:	mov    al,BYTE PTR [edx+0x6]
  4368fc:	cmp    al,0x5
  4368fe:	je     0x436904
  436900:	cmp    al,0x6
  436902:	jne    0x436917
  436904:	mov    BYTE PTR ds:0x46139c,0x28
  43690b:	mov    BYTE PTR ds:0x461383,0x29
  436912:	jmp    0x437873
  436917:	jmp    0x437ee0
  43691c:	test   BYTE PTR ds:0x4605b0,0x40
  436923:	je     0x43692c
  436925:	add    BYTE PTR ds:0x46139e,0x9
  43692c:	jmp    0x437ee0
  436931:	push   ebp
  436932:	mov    ebp,esp
  436934:	push   ecx
  436935:	mov    ecx,DWORD PTR ds:0x46137c
  43693b:	inc    ecx
  43693c:	push   esi
  43693d:	mov    DWORD PTR ds:0x46137c,ecx
  436943:	cmp    ecx,DWORD PTR ds:0x460eb8
  436949:	jb     0x436996
  43694b:	mov    edx,0x46107f
  436950:	mov    ecx,0x46137c
  436955:	call   0x435a34
  43695a:	cmp    BYTE PTR ds:0x46107f,0x0
  436961:	mov    esi,DWORD PTR ds:0x461384
  436967:	mov    ds:0x46107e,al
  43696c:	movzx  eax,al
  43696f:	mov    al,BYTE PTR [eax+0x448f88]
  436975:	mov    ds:0x46139e,al
  43697a:	je     0x43698e
  43697c:	cmp    esi,0x4600f8
  436982:	jb     0x43698e
  436984:	call   0x435fb0
  436989:	jmp    0x436a1b
  43698e:	mov    ecx,DWORD PTR ds:0x46137c
  436994:	jmp    0x4369b1
  436996:	mov    al,BYTE PTR [ecx]
  436998:	mov    esi,DWORD PTR ds:0x461384
  43699e:	mov    ds:0x46107e,al
  4369a3:	movzx  eax,al
  4369a6:	mov    al,BYTE PTR [eax+0x448f88]
  4369ac:	mov    ds:0x46139e,al
  4369b1:	cmp    al,0x4f
  4369b3:	jne    0x4369c3
  4369b5:	mov    BYTE PTR ds:0x4613a7,0x1
  4369bc:	call   0x437680
  4369c1:	jmp    0x436a1b
  4369c3:	lea    eax,[esi-0x10]
  4369c6:	cmp    eax,DWORD PTR ds:0x46061c
  4369cc:	jne    0x4369fc
  4369ce:	cmp    BYTE PTR ds:0x4605b6,0x0
  4369d5:	jne    0x4369fc
  4369d7:	cmp    BYTE PTR ds:0x45f98f,0x0
  4369de:	jne    0x4369fc
  4369e0:	lea    edx,[ebp-0x4]
  4369e3:	call   0x434f37
  4369e8:	mov    ds:0x46139e,al
  4369ed:	mov    DWORD PTR ds:0x461384,esi
  4369f3:	mov    BYTE PTR ds:0x46137a,0x1
  4369fa:	jmp    0x436a1b
  4369fc:	dec    ecx
  4369fd:	mov    eax,0xffef
  436a02:	and    WORD PTR ds:0x4605b0,ax
  436a09:	mov    DWORD PTR ds:0x46137c,ecx
  436a0f:	mov    BYTE PTR ds:0x46139e,0x60
  436a16:	call   0x437ee0
  436a1b:	pop    esi
  436a1c:	leave  
  436a1d:	ret    
  436a1e:	push   ebp
  436a1f:	mov    ebp,esp
  436a21:	sub    esp,0xc
  436a24:	cmp    BYTE PTR ds:0x4613a9,0x0
  436a2b:	push   edi
  436a2c:	mov    edi,ecx
  436a2e:	je     0x436a3a
  436a30:	call   0x437586
  436a35:	jmp    0x436b4e
  436a3a:	cmp    BYTE PTR ds:0x4605b6,0x0
  436a41:	push   ebx
  436a42:	push   esi
  436a43:	je     0x436b51
  436a49:	mov    ecx,DWORD PTR ds:0x46137c
  436a4f:	mov    bh,BYTE PTR ds:0x46139e
  436a55:	xor    bl,bl
  436a57:	inc    ecx
  436a58:	mov    DWORD PTR ds:0x46137c,ecx
  436a5e:	cmp    ecx,DWORD PTR ds:0x460eb8
  436a64:	jb     0x436aae
  436a66:	mov    edx,0x46107f
  436a6b:	mov    ecx,0x46137c
  436a70:	call   0x435a34
  436a75:	mov    esi,DWORD PTR ds:0x461384
  436a7b:	mov    dl,al
  436a7d:	movzx  ecx,dl
  436a80:	mov    BYTE PTR ds:0x46107e,dl
  436a86:	mov    cl,BYTE PTR [ecx+0x448f88]
  436a8c:	mov    BYTE PTR ds:0x46139e,cl
  436a92:	cmp    BYTE PTR ds:0x46107f,bl
  436a98:	je     0x436aa6
  436a9a:	cmp    esi,0x4600f8
  436aa0:	jae    0x436e9b
  436aa6:	mov    ecx,DWORD PTR ds:0x46137c
  436aac:	jmp    0x436aca
  436aae:	mov    dl,BYTE PTR [ecx]
  436ab0:	mov    esi,DWORD PTR ds:0x461384
  436ab6:	movzx  eax,dl
  436ab9:	mov    BYTE PTR ds:0x46107e,dl
  436abf:	mov    al,BYTE PTR [eax+0x448f88]
  436ac5:	mov    ds:0x46139e,al
  436aca:	cmp    dl,0x26
  436acd:	jne    0x436b35
  436acf:	inc    ecx
  436ad0:	mov    DWORD PTR ds:0x46137c,ecx
  436ad6:	cmp    ecx,DWORD PTR ds:0x460eb8
  436adc:	jb     0x436b24
  436ade:	mov    edx,0x46107f
  436ae3:	mov    ecx,0x46137c
  436ae8:	call   0x435a34
  436aed:	cmp    BYTE PTR ds:0x46107f,0x0
  436af4:	mov    esi,DWORD PTR ds:0x461384
  436afa:	mov    ds:0x46107e,al
  436aff:	movzx  eax,al
  436b02:	mov    bl,BYTE PTR [eax+0x448f88]
  436b08:	mov    BYTE PTR ds:0x46139e,bl
  436b0e:	je     0x436b1c
  436b10:	cmp    esi,0x4600f8
  436b16:	jae    0x436e9b
  436b1c:	mov    ecx,DWORD PTR ds:0x46137c
  436b22:	jmp    0x436b34
  436b24:	mov    al,BYTE PTR [ecx]
  436b26:	mov    ds:0x46107e,al
  436b2b:	movzx  eax,al
  436b2e:	mov    bl,BYTE PTR [eax+0x448f88]
  436b34:	dec    ecx
  436b35:	dec    ecx
  436b36:	mov    DWORD PTR ds:0x46137c,ecx
  436b3c:	mov    BYTE PTR ds:0x46139e,bh
  436b42:	cmp    bl,0x20
  436b45:	jne    0x436b57
  436b47:	call   0x437586
  436b4c:	pop    esi
  436b4d:	pop    ebx
  436b4e:	pop    edi
  436b4f:	leave  
  436b50:	ret    
  436b51:	mov    esi,DWORD PTR ds:0x461384
  436b57:	cmp    BYTE PTR ds:0x46137b,0x0
  436b5e:	mov    bl,BYTE PTR [edi+0x2]
  436b61:	movzx  edx,WORD PTR [edi]
  436b64:	mov    cl,BYTE PTR [edi+0x3]
  436b67:	push   0x54
  436b69:	pop    eax
  436b6a:	mov    DWORD PTR [ebp-0x8],0x6c
  436b71:	je     0x436b94
  436b73:	cmp    bl,0x8
  436b76:	jne    0x436b88
  436b78:	cmp    edx,0x3b
  436b7b:	jb     0x436b82
  436b7d:	cmp    dx,ax
  436b80:	jbe    0x436b94
  436b82:	cmp    dx,WORD PTR [ebp-0x8]
  436b86:	je     0x436b94
  436b88:	and    DWORD PTR ds:0x460e9c,0x0
  436b8f:	jmp    0x436e91
  436b94:	mov    eax,0x800
  436b99:	test   DWORD PTR ds:0x4605b0,eax
  436b9f:	je     0x436baf
  436ba1:	mov    edx,0x460598
  436ba6:	mov    ecx,edi
  436ba8:	call   0x434485
  436bad:	jmp    0x436b47
  436baf:	test   cl,0x40
  436bb2:	jne    0x436b47
  436bb4:	mov    ch,BYTE PTR ds:0x4613a7
  436bba:	mov    edi,0x1ab
  436bbf:	cmp    bl,0x2
  436bc2:	jne    0x436be2
  436bc4:	cmp    dx,di
  436bc7:	jne    0x436be2
  436bc9:	mov    al,ds:0x460566
  436bce:	test   ch,ch
  436bd0:	je     0x436bda
  436bd2:	test   al,0x2
  436bd4:	jne    0x436b47
  436bda:	test   al,0x1
  436bdc:	jne    0x436b47
  436be2:	mov    al,ds:0x4605b0
  436be7:	and    al,0x8
  436be9:	or     al,cl
  436beb:	mov    DWORD PTR [ebp-0xc],0x2
  436bf2:	cmp    al,0x88
  436bf4:	jne    0x436c17
  436bf6:	mov    eax,0x4059a0
  436bfb:	mov    cl,0x2
  436bfd:	cmp    cl,bl
  436bff:	jne    0x436c07
  436c01:	cmp    WORD PTR [eax+0x2],dx
  436c05:	je     0x436c10
  436c07:	add    eax,0x8
  436c0a:	mov    cl,BYTE PTR [eax]
  436c0c:	test   cl,cl
  436c0e:	jne    0x436bfd
  436c10:	mov    bl,BYTE PTR [eax+0x4]
  436c13:	movzx  edx,WORD PTR [eax+0x6]
  436c17:	cmp    esi,0x4600f8
  436c1d:	jae    0x436e9b
  436c23:	test   ch,ch
  436c25:	je     0x436c59
  436c27:	mov    BYTE PTR ds:0x4613a7,0x0
  436c2e:	cmp    dx,di
  436c31:	jne    0x436c3a
  436c33:	push   0x67
  436c35:	pop    edx
  436c36:	mov    bl,0x8
  436c38:	jmp    0x436c59
  436c3a:	push   0x59
  436c3c:	pop    eax
  436c3d:	mov    WORD PTR [esi],ax
  436c40:	xor    eax,eax
  436c42:	inc    eax
  436c43:	mov    WORD PTR [esi+0x2],ax
  436c47:	mov    eax,ds:0x46137c
  436c4c:	dec    eax
  436c4d:	mov    DWORD PTR [esi+0xc],eax
  436c50:	xor    eax,eax
  436c52:	mov    WORD PTR [esi+0x4],ax
  436c56:	add    esi,0x10
  436c59:	mov    ecx,DWORD PTR ds:0x460e9c
  436c5f:	and    DWORD PTR ds:0x460e9c,0x0
  436c66:	mov    bh,BYTE PTR ds:0x45f98f
  436c6c:	movzx  eax,bl
  436c6f:	mov    WORD PTR [esi+0x2],ax
  436c73:	mov    WORD PTR [esi],dx
  436c76:	mov    eax,ds:0x46137c
  436c7b:	sub    eax,ecx
  436c7d:	mov    DWORD PTR [esi+0xc],ecx
  436c80:	mov    cx,WORD PTR ds:0x4605b0
  436c87:	mov    WORD PTR [esi+0x4],ax
  436c8b:	mov    al,ds:0x46137b
  436c90:	add    esi,0x10
  436c93:	or     cx,0x40
  436c97:	mov    WORD PTR ds:0x4613a4,dx
  436c9e:	mov    DWORD PTR ds:0x461384,esi
  436ca4:	mov    WORD PTR ds:0x4605b0,cx
  436cab:	test   al,al
  436cad:	je     0x436d1d
  436caf:	cmp    bl,0x8
  436cb2:	jne    0x436cbe
  436cb4:	cmp    dx,WORD PTR [ebp-0x8]
  436cb8:	je     0x436d77
  436cbe:	mov    BYTE PTR ds:0x46137b,0x0
  436cc5:	cmp    bl,0x8
  436cc8:	jne    0x436d08
  436cca:	lea    eax,[edx-0x3b]
  436ccd:	cmp    ax,0x19
  436cd1:	ja     0x436d08
  436cd3:	cmp    dx,0x46
  436cd7:	ja     0x436ce1
  436cd9:	inc    BYTE PTR ds:0x45f993
  436cdf:	jmp    0x436d0f
  436ce1:	push   0x54
  436ce3:	pop    eax
  436ce4:	cmp    dx,ax
  436ce7:	jne    0x436cfa
  436ce9:	mov    al,ds:0x45f993
  436cee:	dec    al
  436cf0:	mov    ds:0x45f993,al
  436cf5:	movsx  eax,al
  436cf8:	jmp    0x436d0b
  436cfa:	xor    eax,eax
  436cfc:	cmp    BYTE PTR ds:0x45f993,0x1
  436d03:	setg   al
  436d06:	jmp    0x436d0b
  436d08:	xor    eax,eax
  436d0a:	inc    eax
  436d0b:	test   eax,eax
  436d0d:	je     0x436d7b
  436d0f:	sub    esi,0x10
  436d12:	mov    DWORD PTR ds:0x461384,esi
  436d18:	jmp    0x436e91
  436d1d:	cmp    bl,0x4
  436d20:	jne    0x436d3f
  436d22:	test   BYTE PTR ds:0x4605b0,0x7
  436d29:	jne    0x436fb7
  436d2f:	or     cx,0x3
  436d33:	mov    WORD PTR ds:0x4605b0,cx
  436d3a:	jmp    0x436fb7
  436d3f:	cmp    bl,0x1
  436d42:	jne    0x436d7b
  436d44:	push   0x4
  436d46:	pop    edi
  436d47:	cmp    di,dx
  436d4a:	jae    0x436d52
  436d4c:	cmp    dx,0x29
  436d50:	jb     0x436d68
  436d52:	lea    eax,[edx-0x5f]
  436d55:	mov    edi,0x94
  436d5a:	cmp    ax,di
  436d5d:	ja     0x436f6a
  436d63:	mov    al,ds:0x46137b
  436d68:	mov    edi,0xffbf
  436d6d:	and    cx,di
  436d70:	mov    WORD PTR ds:0x4605b0,cx
  436d77:	test   al,al
  436d79:	jne    0x436d84
  436d7b:	cmp    bl,0x8
  436d7e:	jne    0x436f6a
  436d84:	cmp    bl,0x8
  436d87:	jne    0x436f6a
  436d8d:	cmp    dx,WORD PTR [ebp-0x8]
  436d91:	jne    0x436ea5
  436d97:	sub    esi,0x10
  436d9a:	test   BYTE PTR ds:0x4605b0,0x7
  436da1:	mov    DWORD PTR ds:0x461384,esi
  436da7:	je     0x436db0
  436da9:	mov    ecx,0x7d8
  436dae:	jmp    0x436df5
  436db0:	lea    eax,[ebp-0x1]
  436db3:	mov    esi,0x46137c
  436db8:	push   eax
  436db9:	mov    edx,0x46107e
  436dbe:	mov    ecx,esi
  436dc0:	call   0x4350b9
  436dc5:	mov    ds:0x46139e,al
  436dca:	cmp    al,0x1f
  436dcc:	je     0x436df0
  436dce:	mov    eax,ds:0x46061c
  436dd3:	xor    ecx,ecx
  436dd5:	inc    ecx
  436dd6:	mov    WORD PTR [eax],cx
  436dd9:	mov    bl,BYTE PTR ds:0x46107e
  436ddf:	movsx  eax,bl
  436de2:	mov    BYTE PTR ds:0x4613a6,bl
  436de8:	cmp    BYTE PTR [eax+0x4630d0],cl
  436dee:	jne    0x436dff
  436df0:	mov    ecx,0x83e
  436df5:	call   0x435f65
  436dfa:	jmp    0x436b4c
  436dff:	mov    ecx,DWORD PTR ds:0x46137c
  436e05:	inc    ecx
  436e06:	mov    DWORD PTR ds:0x46137c,ecx
  436e0c:	cmp    ecx,DWORD PTR ds:0x460eb8
  436e12:	jb     0x436e54
  436e14:	mov    edx,0x46107f
  436e19:	mov    ecx,esi
  436e1b:	call   0x435a34
  436e20:	cmp    BYTE PTR ds:0x46107f,0x0
  436e27:	mov    dl,al
  436e29:	movzx  ecx,dl
  436e2c:	mov    BYTE PTR ds:0x46107e,dl
  436e32:	mov    cl,BYTE PTR [ecx+0x448f88]
  436e38:	mov    BYTE PTR ds:0x46139e,cl
  436e3e:	je     0x436e4c
  436e40:	cmp    DWORD PTR ds:0x461384,0x4600f8
  436e4a:	jae    0x436e9b
  436e4c:	mov    ecx,DWORD PTR ds:0x46137c
  436e52:	jmp    0x436e6a
  436e54:	mov    dl,BYTE PTR [ecx]
  436e56:	movzx  eax,dl
  436e59:	mov    BYTE PTR ds:0x46107e,dl
  436e5f:	mov    al,BYTE PTR [eax+0x448f88]
  436e65:	mov    ds:0x46139e,al
  436e6a:	cmp    dl,0xa
  436e6d:	jne    0x436e82
  436e6f:	cmp    DWORD PTR ds:0x460eac,0x0
  436e76:	je     0x436e05
  436e78:	call   0x437fb7
  436e7d:	jmp    0x436b4c
  436e82:	cmp    dl,bl
  436e84:	jne    0x436e05
  436e8a:	mov    BYTE PTR ds:0x4613a6,0x0
  436e91:	call   0x438026
  436e96:	jmp    0x436b4c
  436e9b:	call   0x435fb0
  436ea0:	jmp    0x436b4c
  436ea5:	push   0x32
  436ea7:	pop    esi
  436ea8:	cmp    dx,0x2e
  436eac:	je     0x436eb9
  436eae:	cmp    dx,0x31
  436eb2:	je     0x436eb9
  436eb4:	cmp    dx,si
  436eb7:	jne    0x436ec2
  436eb9:	cmp    BYTE PTR ds:0x4605b6,0x0
  436ec0:	je     0x436edd
  436ec2:	cmp    dx,0x2c
  436ec6:	jne    0x436eec
  436ec8:	cmp    BYTE PTR ds:0x4605b6,0x0
  436ecf:	je     0x436f6a
  436ed5:	test   bh,bh
  436ed7:	jne    0x436f6a
  436edd:	mov    eax,0x800
  436ee2:	or     cx,ax
  436ee5:	mov    WORD PTR ds:0x4605b0,cx
  436eec:	lea    eax,[edx-0x64]
  436eef:	cmp    ax,0x6
  436ef3:	ja     0x436f06
  436ef5:	mov    eax,0xfdff
  436efa:	and    cx,ax
  436efd:	mov    WORD PTR ds:0x4605b0,cx
  436f04:	jmp    0x436f2c
  436f06:	cmp    dx,0x47
  436f0a:	jb     0x436f12
  436f0c:	cmp    dx,0x53
  436f10:	jbe    0x436f17
  436f12:	cmp    dx,si
  436f15:	jne    0x436f36
  436f17:	mov    eax,ds:0x4605b0
  436f1c:	and    eax,0xfdff
  436f21:	or     eax,0x4000
  436f26:	mov    ds:0x4605b0,ax
  436f2c:	call   0x437378
  436f31:	jmp    0x436b4c
  436f36:	lea    eax,[edx-0x34]
  436f39:	cmp    ax,0x2d
  436f3d:	ja     0x436f55
  436f3f:	movzx  eax,dx
  436f42:	movzx  ecx,BYTE PTR [eax+0x405910]
  436f49:	mov    eax,ds:0x4605b0
  436f4e:	and    eax,0xffcf
  436f53:	jmp    0x436f60
  436f55:	cmp    dx,0x6b
  436f59:	jne    0x436f6a
  436f5b:	mov    eax,0x1000
  436f60:	or     cx,ax
  436f63:	mov    WORD PTR ds:0x4605b0,cx
  436f6a:	mov    cl,BYTE PTR ds:0x4605b0
  436f70:	mov    al,cl
  436f72:	and    al,0x7
  436f74:	test   bh,bh
  436f76:	jne    0x436fb7
  436f78:	test   cl,0x8
  436f7b:	jne    0x436fb7
  436f7d:	test   al,al
  436f7f:	je     0x436f85
  436f81:	cmp    al,0x3
  436f83:	jne    0x436fb7
  436f85:	cmp    al,0x3
  436f87:	jne    0x436f93
  436f89:	cmp    bl,0x4
  436f8c:	je     0x436f93
  436f8e:	mov    eax,DWORD PTR [ebp-0xc]
  436f91:	jmp    0x436f96
  436f93:	xor    eax,eax
  436f95:	inc    eax
  436f96:	movzx  ecx,al
  436f99:	mov    eax,ds:0x46061c
  436f9e:	mov    WORD PTR [eax+0x2],cx
  436fa2:	mov    eax,ds:0x4605b0
  436fa7:	and    eax,0xfff8
  436fac:	or     eax,ecx
  436fae:	or     eax,0x48
  436fb1:	mov    ds:0x4605b0,ax
  436fb7:	xor    eax,eax
  436fb9:	inc    eax
  436fba:	mov    ds:0x46137a,al
  436fbf:	jmp    0x436b4c
  436fc4:	test   BYTE PTR ds:0x4605b0,0x8
  436fcb:	jne    0x436fd6
  436fcd:	or     BYTE PTR ds:0x46107d,0x1
  436fd4:	jmp    0x437053
  436fd6:	cmp    BYTE PTR ds:0x46139e,0x20
  436fdd:	jne    0x43704c
  436fdf:	mov    ecx,DWORD PTR ds:0x46137c
  436fe5:	inc    ecx
  436fe6:	mov    DWORD PTR ds:0x46137c,ecx
  436fec:	cmp    ecx,DWORD PTR ds:0x460eb8
  436ff2:	jb     0x437033
  436ff4:	mov    edx,0x46107f
  436ff9:	mov    ecx,0x46137c
  436ffe:	call   0x435a34
  437003:	cmp    BYTE PTR ds:0x46107f,0x0
  43700a:	mov    ds:0x46107e,al
  43700f:	movzx  eax,al
  437012:	mov    al,BYTE PTR [eax+0x448f88]
  437018:	mov    ds:0x46139e,al
  43701d:	je     0x43702b
  43701f:	cmp    DWORD PTR ds:0x461384,0x4600f8
  437029:	jae    0x437058
  43702b:	mov    ecx,DWORD PTR ds:0x46137c
  437031:	jmp    0x437048
  437033:	mov    al,BYTE PTR [ecx]
  437035:	mov    ds:0x46107e,al
  43703a:	movzx  eax,al
  43703d:	mov    al,BYTE PTR [eax+0x448f88]
  437043:	mov    ds:0x46139e,al
  437048:	cmp    al,0x20
  43704a:	je     0x436fe5
  43704c:	or     BYTE PTR ds:0x46107d,0x2
  437053:	jmp    0x4374bc
  437058:	jmp    0x435fb0
  43705d:	mov    al,ds:0x4605b0
  437062:	and    al,0xf
  437064:	test   al,0x8
  437066:	jne    0x437090
  437068:	test   al,al
  43706a:	setne  al
  43706d:	inc    al
  43706f:	movzx  ecx,al
  437072:	mov    eax,ds:0x46061c
  437077:	mov    WORD PTR [eax+0x2],cx
  43707b:	mov    eax,ds:0x4605b0
  437080:	and    eax,0xfff8
  437085:	or     eax,ecx
  437087:	or     eax,0x48
  43708a:	mov    ds:0x4605b0,ax
  437090:	jmp    0x4374bc
  437095:	and    DWORD PTR ds:0x461398,0x0
  43709c:	jmp    0x4374bc
  4370a1:	test   BYTE PTR ds:0x4605b0,0x8
  4370a8:	jne    0x4370b1
  4370aa:	or     BYTE PTR ds:0x46107d,0x1
  4370b1:	jmp    0x4374bc
  4370b6:	push   ebp
  4370b7:	mov    ebp,esp
  4370b9:	push   ecx
  4370ba:	cmp    BYTE PTR ds:0x4605b6,0x0
  4370c1:	push   edi
  4370c2:	jne    0x4371b2
  4370c8:	cmp    BYTE PTR ds:0x45f98f,0x0
  4370cf:	mov    edi,0x46137c
  4370d4:	je     0x4370df
  4370d6:	movzx  eax,BYTE PTR ds:0x4605b4
  4370dd:	jmp    0x437132
  4370df:	cmp    BYTE PTR ds:0x461379,0x0
  4370e6:	jne    0x43712f
  4370e8:	test   DWORD PTR ds:0x4605b0,0x2010
  4370f2:	jne    0x43712f
  4370f4:	mov    eax,ds:0x461384
  4370f9:	mov    ecx,DWORD PTR ds:0x46061c
  4370ff:	add    eax,0xfffffff0
  437102:	cmp    eax,ecx
  437104:	jne    0x43713c
  437106:	cmp    DWORD PTR ds:0x460eac,0x0
  43710d:	jne    0x43711e
  43710f:	mov    ax,ds:0x4605bc
  437115:	cmp    ax,WORD PTR ds:0x4605b8
  43711c:	jne    0x43713c
  43711e:	mov    edx,0x403c54
  437123:	mov    ecx,edi
  437125:	call   0x43511e
  43712a:	test   ax,ax
  43712d:	je     0x437136
  43712f:	xor    eax,eax
  437131:	inc    eax
  437132:	test   eax,eax
  437134:	jne    0x4371b2
  437136:	mov    ecx,DWORD PTR ds:0x46061c
  43713c:	mov    eax,ds:0x46137c
  437141:	mov    ds:0x460eb4,eax
  437146:	mov    eax,ds:0x461398
  43714b:	push   esi
  43714c:	mov    esi,DWORD PTR [eax+0x18]
  43714f:	mov    DWORD PTR ds:0x46137c,esi
  437155:	lea    edx,[esi+0x1]
  437158:	mov    al,BYTE PTR [esi]
  43715a:	inc    esi
  43715b:	test   al,al
  43715d:	jne    0x437158
  43715f:	mov    eax,ds:0x460e9c
  437164:	sub    eax,DWORD PTR ds:0x460ea0
  43716a:	sub    esi,edx
  43716c:	cmp    BYTE PTR ds:0x44f54e,0x0
  437173:	mov    WORD PTR [ecx+0x4],ax
  437177:	je     0x437181
  437179:	movsx  ecx,ax
  43717c:	call   0x4356ff
  437181:	and    DWORD PTR ds:0x460e9c,0x0
  437188:	lea    eax,[ebp-0x4]
  43718b:	push   eax
  43718c:	mov    edx,esi
  43718e:	mov    ecx,edi
  437190:	call   0x435a6e
  437195:	mov    ecx,DWORD PTR [ebp-0x4]
  437198:	mov    ds:0x46139e,al
  43719d:	pop    esi
  43719e:	test   ecx,ecx
  4371a0:	je     0x4371a9
  4371a2:	call   0x435f65
  4371a7:	jmp    0x4371b7
  4371a9:	mov    BYTE PTR ds:0x46137a,0x1
  4371b0:	jmp    0x4371b7
  4371b2:	call   0x4374bc
  4371b7:	pop    edi
  4371b8:	leave  
  4371b9:	ret    
  4371ba:	push   ebp
  4371bb:	mov    ebp,esp
  4371bd:	sub    esp,0xc
  4371c0:	cmp    BYTE PTR ds:0x4605b6,0x0
  4371c7:	jne    0x437323
  4371cd:	cmp    BYTE PTR ds:0x45f98f,0x0
  4371d4:	je     0x4371df
  4371d6:	movzx  eax,BYTE PTR ds:0x45f98e
  4371dd:	jmp    0x4371e9
  4371df:	mov    eax,ds:0x4605b0
  4371e4:	and    eax,0x2010
  4371e9:	test   eax,eax
  4371eb:	jne    0x437323
  4371f1:	mov    eax,ds:0x461384
  4371f6:	add    eax,0xfffffff0
  4371f9:	cmp    eax,DWORD PTR ds:0x46061c
  4371ff:	jne    0x437222
  437201:	cmp    DWORD PTR ds:0x460eac,0x0
  437208:	jne    0x437219
  43720a:	mov    ax,ds:0x4605bc
  437210:	cmp    ax,WORD PTR ds:0x4605b8
  437217:	jne    0x437222
  437219:	mov    BYTE PTR ds:0x461379,0x1
  437220:	jmp    0x437229
  437222:	mov    BYTE PTR ds:0x461379,0x0
  437229:	lea    eax,[ebp-0x4]
  43722c:	push   eax
  43722d:	mov    edx,0x46107e
  437232:	mov    ecx,0x46137c
  437237:	call   0x4350b9
  43723c:	xor    ecx,ecx
  43723e:	cmp    al,0x63
  437240:	setne  cl
  437243:	mov    ds:0x46139e,al
  437248:	test   ecx,ecx
  43724a:	jne    0x437323
  437250:	mov    ecx,DWORD PTR ds:0x460e9c
  437256:	sub    ecx,DWORD PTR ds:0x460ea0
  43725c:	cmp    BYTE PTR ds:0x44f54e,0x0
  437263:	mov    eax,ds:0x46061c
  437268:	mov    WORD PTR [eax+0x4],cx
  43726c:	je     0x437276
  43726e:	movsx  ecx,cx
  437271:	call   0x4356ff
  437276:	mov    al,ds:0x461380
  43727b:	mov    BYTE PTR [ebp-0x1],al
  43727e:	mov    al,ds:0x46137b
  437283:	mov    BYTE PTR [ebp-0x2],al
  437286:	mov    al,ds:0x46107f
  43728b:	mov    BYTE PTR [ebp-0x3],al
  43728e:	mov    al,ds:0x46137a
  437293:	push   ebx
  437294:	mov    bl,BYTE PTR ds:0x461382
  43729a:	mov    bh,BYTE PTR ds:0x461381
  4372a0:	mov    BYTE PTR [ebp-0x4],al
  4372a3:	mov    eax,ds:0x461384
  4372a8:	push   esi
  4372a9:	mov    esi,DWORD PTR ds:0x460618
  4372af:	push   edi
  4372b0:	movzx  edi,WORD PTR ds:0x4605b0
  4372b7:	mov    DWORD PTR [ebp-0x8],eax
  4372ba:	lea    eax,[ebp-0xc]
  4372bd:	push   eax
  4372be:	call   0x435d1a
  4372c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4372c6:	mov    ds:0x46139e,al
  4372cb:	mov    al,BYTE PTR [ebp-0x1]
  4372ce:	mov    ds:0x461380,al
  4372d3:	mov    al,BYTE PTR [ebp-0x2]
  4372d6:	mov    ds:0x46137b,al
  4372db:	mov    al,BYTE PTR [ebp-0x3]
  4372de:	mov    ds:0x46107f,al
  4372e3:	mov    al,BYTE PTR [ebp-0x4]
  4372e6:	mov    WORD PTR ds:0x4605b0,di
  4372ed:	pop    edi
  4372ee:	mov    DWORD PTR ds:0x460618,esi
  4372f4:	mov    ds:0x46137a,al
  4372f9:	mov    eax,DWORD PTR [ebp-0x8]
  4372fc:	pop    esi
  4372fd:	mov    BYTE PTR ds:0x461382,bl
  437303:	mov    BYTE PTR ds:0x461381,bh
  437309:	mov    ds:0x461384,eax
  43730e:	pop    ebx
  43730f:	test   ecx,ecx
  437311:	je     0x43731a
  437313:	call   0x435f65
  437318:	leave  
  437319:	ret    
  43731a:	mov    BYTE PTR ds:0x46137a,0x1
  437321:	leave  
  437322:	ret    
  437323:	call   0x4374bc
  437328:	leave  
  437329:	ret    
  43732a:	cmp    BYTE PTR ds:0x45f98f,0x0
  437331:	jne    0x437373
  437333:	test   BYTE PTR ds:0x4605b0,0x7
  43733a:	je     0x437353
  43733c:	cmp    BYTE PTR ds:0x461380,0x0
  437343:	je     0x437373
  437345:	mov    eax,ds:0x461384
  43734a:	cmp    DWORD PTR [eax-0x10],0x10052
  437351:	jne    0x437373
  437353:	mov    edx,0x449268
  437358:	mov    ecx,0x46137c
  43735d:	call   0x43511e
  437362:	test   ax,ax
  437365:	jne    0x437373
  437367:	mov    eax,0x200
  43736c:	or     WORD PTR ds:0x4605b0,ax
  437373:	jmp    0x4374bc
  437378:	mov    cx,WORD PTR ds:0x4605b0
  43737f:	mov    eax,0x400
  437384:	or     cx,ax
  437387:	mov    al,cl
  437389:	mov    WORD PTR ds:0x4605b0,cx
  437390:	and    al,0x7
  437392:	jne    0x4373b1
  437394:	mov    eax,ds:0x46061c
  437399:	xor    ecx,ecx
  43739b:	inc    ecx
  43739c:	mov    WORD PTR [eax+0x2],cx
  4373a0:	mov    ecx,DWORD PTR ds:0x4605b0
  4373a6:	and    ecx,0xfff9
  4373ac:	or     ecx,0x9
  4373af:	jmp    0x4373d0
  4373b1:	cmp    al,0x3
  4373b3:	jne    0x4373d7
  4373b5:	mov    eax,ds:0x46061c
  4373ba:	push   0x2
  4373bc:	pop    ecx
  4373bd:	mov    WORD PTR [eax+0x2],cx
  4373c1:	mov    ecx,DWORD PTR ds:0x4605b0
  4373c7:	and    ecx,0xfffa
  4373cd:	or     ecx,0xa
  4373d0:	mov    WORD PTR ds:0x4605b0,cx
  4373d7:	mov    eax,ds:0x461384
  4373dc:	mov    WORD PTR [eax-0xa],cx
  4373e0:	call   0x435fc1
  4373e5:	test   al,al
  4373e7:	je     0x4374bb
  4373ed:	mov    dl,BYTE PTR ds:0x46139e
  4373f3:	cmp    dl,0x20
  4373f6:	je     0x4373e0
  4373f8:	mov    eax,ds:0x46137c
  4373fd:	dec    eax
  4373fe:	push   esi
  4373ff:	mov    ds:0x46137c,eax
  437404:	mov    ds:0x460e9c,eax
  437409:	cmp    dl,0x1f
  43740c:	jne    0x437443
  43740e:	dec    eax
  43740f:	mov    ds:0x46137c,eax
  437414:	cmp    BYTE PTR ds:0x46107e,0x5c
  43741b:	jne    0x437423
  43741d:	dec    eax
  43741e:	mov    ds:0x46137c,eax
  437423:	call   0x4354dc
  437428:	mov    ds:0x4613a0,eax
  43742d:	mov    BYTE PTR ds:0x46139d,0xd
  437434:	push   0x5
  437436:	pop    eax
  437437:	mov    ds:0x4613a4,ax
  43743d:	pop    esi
  43743e:	jmp    0x437b11
  437443:	mov    esi,DWORD PTR ds:0x4605b0
  437449:	mov    cl,BYTE PTR ds:0x461382
  43744f:	and    esi,0x4200
  437455:	jne    0x43745f
  437457:	inc    cl
  437459:	mov    BYTE PTR ds:0x461382,cl
  43745f:	cmp    dl,0x23
  437462:	jne    0x437414
  437464:	test   si,si
  437467:	jne    0x437414
  437469:	mov    dx,WORD PTR ds:0x4613a4
  437470:	cmp    dx,0x67
  437474:	je     0x437414
  437476:	mov    esi,0x100
  43747b:	cmp    dx,0x64
  43747f:	jne    0x437489
  437481:	or     WORD PTR ds:0x4605b0,si
  437488:	dec    eax
  437489:	dec    cl
  43748b:	inc    eax
  43748c:	mov    dl,0x3c
  43748e:	mov    BYTE PTR ds:0x461382,cl
  437494:	mov    ds:0x460e9c,eax
  437499:	push   ecx
  43749a:	push   0x3e
  43749c:	call   0x435581
  4374a1:	mov    BYTE PTR ds:0x46139d,0x21
  4374a8:	test   DWORD PTR ds:0x4605b0,esi
  4374ae:	je     0x437434
  4374b0:	inc    DWORD PTR ds:0x46137c
  4374b6:	jmp    0x437434
  4374bb:	ret    
  4374bc:	mov    ecx,DWORD PTR ds:0x461384
  4374c2:	mov    eax,ds:0x461398
  4374c7:	and    DWORD PTR ds:0x460e9c,0x0
  4374ce:	push   ebx
  4374cf:	mov    DWORD PTR [ecx+0x8],eax
  4374d2:	push   0xd
  4374d4:	pop    eax
  4374d5:	mov    WORD PTR [ecx],ax
  4374d8:	xor    ebx,ebx
  4374da:	inc    ebx
  4374db:	mov    eax,0xffbf
  4374e0:	and    WORD PTR ds:0x4605b0,ax
  4374e7:	mov    WORD PTR [ecx+0x2],bx
  4374eb:	mov    eax,ds:0x46137c
  4374f0:	add    ecx,0x10
  4374f3:	mov    DWORD PTR ds:0x461384,ecx
  4374f9:	cmp    eax,DWORD PTR ds:0x460eb8
  4374ff:	jb     0x437540
  437501:	mov    edx,0x46107f
  437506:	mov    ecx,0x46137c
  43750b:	call   0x435a34
  437510:	cmp    BYTE PTR ds:0x46107f,0x0
  437517:	mov    ecx,DWORD PTR ds:0x461384
  43751d:	mov    ds:0x46107e,al
  437522:	movzx  eax,al
  437525:	mov    al,BYTE PTR [eax+0x448f88]
  43752b:	mov    ds:0x46139e,al
  437530:	je     0x437555
  437532:	cmp    ecx,0x4600f8
  437538:	jb     0x437555
  43753a:	pop    ebx
  43753b:	jmp    0x435fb0
  437540:	mov    al,BYTE PTR [eax]
  437542:	mov    ds:0x46107e,al
  437547:	movzx  eax,al
  43754a:	mov    al,BYTE PTR [eax+0x448f88]
  437550:	mov    ds:0x46139e,al
  437555:	test   DWORD PTR ds:0x4605b0,0x200
  43755f:	je     0x43756d
  437561:	mov    DWORD PTR ds:0x461174,ecx
  437567:	pop    ebx
  437568:	jmp    0x437378
  43756d:	test   BYTE PTR ds:0x4605b0,0x7
  437574:	jne    0x43757e
  437576:	or     WORD PTR ds:0x4605b0,0x3
  43757e:	mov    BYTE PTR ds:0x46137a,bl
  437584:	pop    ebx
  437585:	ret    
  437586:	mov    eax,0xfdff
  43758b:	and    WORD PTR ds:0x4605b0,ax
  437592:	cmp    BYTE PTR ds:0x46137b,0x0
  437599:	je     0x4375a7
  43759b:	and    DWORD PTR ds:0x460e9c,0x0
  4375a2:	jmp    0x438026
  4375a7:	mov    ecx,DWORD PTR ds:0x461384
  4375ad:	mov    edx,0x4600f8
  4375b2:	cmp    ecx,edx
  4375b4:	jb     0x4375bb
  4375b6:	jmp    0x435fb0
  4375bb:	push   edi
  4375bc:	xor    edi,edi
  4375be:	inc    edi
  4375bf:	cmp    BYTE PTR ds:0x4613a7,0x0
  4375c6:	je     0x4375f1
  4375c8:	push   0x59
  4375ca:	pop    eax
  4375cb:	mov    WORD PTR [ecx],ax
  4375ce:	mov    WORD PTR [ecx+0x2],di
  4375d2:	mov    eax,ds:0x46137c
  4375d7:	inc    eax
  4375d8:	mov    DWORD PTR [ecx+0xc],eax
  4375db:	xor    eax,eax
  4375dd:	mov    WORD PTR [ecx+0x4],ax
  4375e1:	add    ecx,0x10
  4375e4:	mov    BYTE PTR ds:0x4613a7,0x0
  4375eb:	mov    DWORD PTR ds:0x461384,ecx
  4375f1:	push   esi
  4375f2:	mov    esi,DWORD PTR ds:0x460e9c
  4375f8:	cmp    BYTE PTR [esi],0x2e
  4375fb:	jne    0x43762c
  4375fd:	cmp    BYTE PTR ds:0x460e4e,0x0
  437604:	jne    0x43762c
  437606:	cmp    ecx,edx
  437608:	jb     0x43760e
  43760a:	pop    esi
  43760b:	pop    edi
  43760c:	jmp    0x4375b6
  43760e:	and    DWORD PTR [ecx+0xc],0x0
  437612:	push   0x31
  437614:	pop    eax
  437615:	mov    WORD PTR [ecx],ax
  437618:	xor    eax,eax
  43761a:	mov    WORD PTR [ecx+0x2],di
  43761e:	mov    WORD PTR [ecx+0x4],ax
  437622:	add    ecx,0x10
  437625:	mov    DWORD PTR ds:0x461384,ecx
  43762b:	inc    esi
  43762c:	mov    eax,ds:0x46137c
  437631:	sub    eax,esi
  437633:	cmp    eax,0xf7
  437638:	jbe    0x437646
  43763a:	pop    esi
  43763b:	mov    ecx,0x7fb
  437640:	pop    edi
  437641:	jmp    0x435f65
  437646:	mov    WORD PTR [ecx+0x4],ax
  43764a:	mov    DWORD PTR [ecx+0xc],esi
  43764d:	movzx  edx,al
  437650:	mov    ecx,esi
  437652:	call   0x445b60
  437657:	mov    ds:0x461398,eax
  43765c:	test   eax,eax
  43765e:	je     0x437679
  437660:	test   DWORD PTR ds:0x4605b0,0x800
  43766a:	jne    0x437679
  43766c:	movzx  eax,BYTE PTR [eax+0x6]
  437670:	pop    esi
  437671:	pop    edi
  437672:	jmp    DWORD PTR [eax*4+0x405a68]
  437679:	pop    esi
  43767a:	pop    edi
  43767b:	jmp    0x4374bc
  437680:	push   ebp
  437681:	mov    ebp,esp
  437683:	push   ecx
  437684:	mov    edx,DWORD PTR ds:0x46137c
  43768a:	push   ebx
  43768b:	mov    bl,BYTE PTR ds:0x46139e
  437691:	push   esi
  437692:	movsx  esi,bl
  437695:	sub    esi,0x24
  437698:	push   edi
  437699:	mov    DWORD PTR ds:0x460e9c,edx
  43769f:	mov    ecx,0x406a80
  4376a4:	mov    edi,0x4600f8
  4376a9:	cmp    esi,0x36
  4376ac:	jae    0x437747
  4376b2:	mov    ecx,DWORD PTR [ecx+esi*4+0x8]
  4376b6:	mov    DWORD PTR [ebp-0x4],ecx
  4376b9:	test   ecx,ecx
  4376bb:	je     0x4377fc
  4376c1:	test   cl,0x1
  4376c4:	jne    0x437762
  4376ca:	inc    edx
  4376cb:	mov    DWORD PTR ds:0x46137c,edx
  4376d1:	cmp    edx,DWORD PTR ds:0x460eb8
  4376d7:	jb     0x43771c
  4376d9:	mov    edx,0x46107f
  4376de:	mov    ecx,0x46137c
  4376e3:	call   0x435a34
  4376e8:	cmp    BYTE PTR ds:0x46107f,0x0
  4376ef:	mov    ds:0x46107e,al
  4376f4:	movzx  eax,al
  4376f7:	mov    bl,BYTE PTR [eax+0x448f88]
  4376fd:	mov    BYTE PTR ds:0x46139e,bl
  437703:	je     0x437711
  437705:	cmp    DWORD PTR ds:0x461384,edi
  43770b:	jae    0x4377d9
  437711:	mov    edx,DWORD PTR ds:0x46137c
  437717:	mov    ecx,DWORD PTR [ebp-0x4]
  43771a:	jmp    0x437732
  43771c:	mov    al,BYTE PTR [edx]
  43771e:	mov    ds:0x46107e,al
  437723:	movzx  eax,al
  437726:	mov    bl,BYTE PTR [eax+0x448f88]
  43772c:	mov    BYTE PTR ds:0x46139e,bl
  437732:	movzx  eax,BYTE PTR [ecx+0x5]
  437736:	movsx  esi,bl
  437739:	sub    esi,eax
  43773b:	movzx  eax,BYTE PTR [ecx+0x6]
  43773f:	cmp    esi,eax
  437741:	jb     0x4376b2
  437747:	mov    al,bl
  437749:	sub    al,0x24
  43774b:	cmp    al,0x3b
  43774d:	jbe    0x4377fc
  437753:	cmp    BYTE PTR [ecx+0x4],0x0
  437757:	je     0x437869
  43775d:	jmp    0x4377f5
  437762:	and    ecx,0xfffffffe
  437765:	mov    DWORD PTR [ebp-0x4],ecx
  437768:	lea    esi,[ecx+0x4]
  43776b:	inc    edx
  43776c:	mov    DWORD PTR ds:0x46137c,edx
  437772:	cmp    edx,DWORD PTR ds:0x460eb8
  437778:	jb     0x4377b6
  43777a:	mov    edx,0x46107f
  43777f:	mov    ecx,0x46137c
  437784:	call   0x435a34
  437789:	cmp    BYTE PTR ds:0x46107f,0x0
  437790:	mov    ds:0x46107e,al
  437795:	movzx  eax,al
  437798:	mov    bl,BYTE PTR [eax+0x448f88]
  43779e:	mov    BYTE PTR ds:0x46139e,bl
  4377a4:	je     0x4377ae
  4377a6:	cmp    DWORD PTR ds:0x461384,edi
  4377ac:	jae    0x4377d9
  4377ae:	mov    edx,DWORD PTR ds:0x46137c
  4377b4:	jmp    0x4377cc
  4377b6:	mov    al,BYTE PTR [edx]
  4377b8:	mov    ds:0x46107e,al
  4377bd:	movzx  eax,al
  4377c0:	mov    bl,BYTE PTR [eax+0x448f88]
  4377c6:	mov    BYTE PTR ds:0x46139e,bl
  4377cc:	movzx  ecx,BYTE PTR [esi]
  4377cf:	movsx  eax,bl
  4377d2:	cmp    eax,ecx
  4377d4:	jne    0x4377e3
  4377d6:	inc    esi
  4377d7:	jmp    0x43776b
  4377d9:	call   0x435fb0
  4377de:	jmp    0x43786e
  4377e3:	cmp    bl,0x24
  4377e6:	jl     0x4377ed
  4377e8:	cmp    bl,0x5f
  4377eb:	jle    0x4377fc
  4377ed:	cmp    BYTE PTR [esi],0x0
  4377f0:	jne    0x4377fc
  4377f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4377f5:	call   0x436a1e
  4377fa:	jmp    0x43786e
  4377fc:	sub    bl,0x24
  4377ff:	cmp    bl,0x3b
  437802:	ja     0x437869
  437804:	inc    edx
  437805:	mov    DWORD PTR ds:0x46137c,edx
  43780b:	cmp    edx,DWORD PTR ds:0x460eb8
  437811:	jb     0x43784e
  437813:	mov    edx,0x46107f
  437818:	mov    ecx,0x46137c
  43781d:	call   0x435a34
  437822:	cmp    BYTE PTR ds:0x46107f,0x0
  437829:	mov    ds:0x46107e,al
  43782e:	movzx  eax,al
  437831:	mov    al,BYTE PTR [eax+0x448f88]
  437837:	mov    ds:0x46139e,al
  43783c:	je     0x437846
  43783e:	cmp    DWORD PTR ds:0x461384,edi
  437844:	jae    0x4377d9
  437846:	mov    edx,DWORD PTR ds:0x46137c
  43784c:	jmp    0x437863
  43784e:	mov    al,BYTE PTR [edx]
  437850:	mov    ds:0x46107e,al
  437855:	movzx  eax,al
  437858:	mov    al,BYTE PTR [eax+0x448f88]
  43785e:	mov    ds:0x46139e,al
  437863:	sub    al,0x24
  437865:	cmp    al,0x3b
  437867:	jbe    0x437804
  437869:	call   0x437586
  43786e:	pop    edi
  43786f:	pop    esi
  437870:	pop    ebx
  437871:	leave  
  437872:	ret    
  437873:	mov    eax,ds:0x46137c
  437878:	mov    dl,BYTE PTR ds:0x46139c
  43787e:	inc    eax
  43787f:	mov    ds:0x460e9c,eax
  437884:	movzx  eax,BYTE PTR ds:0x461383
  43788b:	push   ecx
  43788c:	push   eax
  43788d:	call   0x435581
  437892:	test   al,al
  437894:	je     0x4378a6
  437896:	dec    DWORD PTR ds:0x46137c
  43789c:	mov    ecx,0x7fd
  4378a1:	jmp    0x435f65
  4378a6:	push   0x5
  4378a8:	pop    eax
  4378a9:	mov    ds:0x4613a4,ax
  4378af:	mov    BYTE PTR ds:0x46139d,0x21
  4378b6:	jmp    0x437b11
  4378bb:	cmp    BYTE PTR ds:0x4605b3,0x0
  4378c2:	mov    ecx,DWORD PTR ds:0x461384
  4378c8:	mov    BYTE PTR ds:0x46139e,0x79
  4378cf:	mov    edx,DWORD PTR [ecx-0x8]
  4378d2:	je     0x4378fc
  4378d4:	lea    eax,[ecx-0x10]
  4378d7:	cmp    eax,DWORD PTR ds:0x46061c
  4378dd:	je     0x4378f7
  4378df:	cmp    WORD PTR [ecx-0x10],0xd
  4378e4:	jne    0x4378f7
  4378e6:	cmp    WORD PTR [ecx-0xe],0x1
  4378eb:	jne    0x4378f7
  4378ed:	test   edx,edx
  4378ef:	je     0x4378fc
  4378f1:	cmp    BYTE PTR [edx+0x6],0xd
  4378f5:	je     0x4378fc
  4378f7:	jmp    0x437ee0
  4378fc:	mov    BYTE PTR ds:0x46139c,0x3c
  437903:	mov    BYTE PTR ds:0x461383,0x3e
  43790a:	jmp    0x437873
  43790f:	cmp    BYTE PTR ds:0x4605b6,0x0
  437916:	je     0x4379a2
  43791c:	mov    ecx,DWORD PTR ds:0x46137c
  437922:	inc    ecx
  437923:	mov    DWORD PTR ds:0x46137c,ecx
  437929:	cmp    ecx,DWORD PTR ds:0x460eb8
  43792f:	jb     0x437978
  437931:	mov    edx,0x46107f
  437936:	mov    ecx,0x46137c
  43793b:	call   0x435a34
  437940:	cmp    BYTE PTR ds:0x46107f,0x0
  437947:	mov    dl,al
  437949:	movzx  ecx,dl
  43794c:	mov    BYTE PTR ds:0x46107e,dl
  437952:	mov    cl,BYTE PTR [ecx+0x448f88]
  437958:	mov    BYTE PTR ds:0x46139e,cl
  43795e:	je     0x437970
  437960:	cmp    DWORD PTR ds:0x461384,0x4600f8
  43796a:	jae    0x435fb0
  437970:	mov    ecx,DWORD PTR ds:0x46137c
  437976:	jmp    0x43798e
  437978:	mov    dl,BYTE PTR [ecx]
  43797a:	movzx  eax,dl
  43797d:	mov    BYTE PTR ds:0x46107e,dl
  437983:	mov    al,BYTE PTR [eax+0x448f88]
  437989:	mov    ds:0x46139e,al
  43798e:	cmp    dl,0x3b
  437991:	jne    0x4379a2
  437993:	lea    eax,[ecx-0x1]
  437996:	mov    BYTE PTR ds:0x461381,0x1
  43799d:	mov    ds:0x460e9c,eax
  4379a2:	jmp    0x438026
  4379a7:	mov    cx,WORD PTR ds:0x4605b0
  4379ae:	push   ebx
  4379af:	push   esi
  4379b0:	mov    BYTE PTR ds:0x46139e,0x2e
  4379b7:	test   cl,0x40
  4379ba:	jne    0x437a7a
  4379c0:	cmp    BYTE PTR ds:0x45f98f,0x0
  4379c7:	jne    0x4379d5
  4379c9:	mov    al,cl
  4379cb:	and    al,0x7
  4379cd:	cmp    al,0x3
  4379cf:	je     0x437a7a
  4379d5:	mov    eax,ds:0x461384
  4379da:	mov    esi,0x4600f8
  4379df:	cmp    eax,esi
  4379e1:	jb     0x4379ea
  4379e3:	pop    esi
  4379e4:	pop    ebx
  4379e5:	jmp    0x435fb0
  4379ea:	and    DWORD PTR [eax+0xc],0x0
  4379ee:	push   0x31
  4379f0:	pop    edx
  4379f1:	mov    WORD PTR [eax],dx
  4379f4:	xor    ebx,ebx
  4379f6:	inc    ebx
  4379f7:	xor    edx,edx
  4379f9:	mov    WORD PTR [eax+0x2],bx
  4379fd:	mov    WORD PTR [eax+0x4],dx
  437a01:	add    eax,0x10
  437a04:	mov    ds:0x461384,eax
  437a09:	mov    eax,ds:0x46137c
  437a0e:	or     cx,0x40
  437a12:	inc    eax
  437a13:	mov    WORD PTR ds:0x4605b0,cx
  437a1a:	mov    ds:0x46137c,eax
  437a1f:	cmp    eax,DWORD PTR ds:0x460eb8
  437a25:	jb     0x437a5c
  437a27:	mov    edx,0x46107f
  437a2c:	mov    ecx,0x46137c
  437a31:	call   0x435a34
  437a36:	cmp    BYTE PTR ds:0x46107f,0x0
  437a3d:	mov    ds:0x46107e,al
  437a42:	movzx  eax,al
  437a45:	mov    al,BYTE PTR [eax+0x448f88]
  437a4b:	mov    ds:0x46139e,al
  437a50:	je     0x437a71
  437a52:	cmp    DWORD PTR ds:0x461384,esi
  437a58:	jb     0x437a71
  437a5a:	jmp    0x4379e3
  437a5c:	mov    al,BYTE PTR [eax]
  437a5e:	mov    ds:0x46107e,al
  437a63:	movzx  eax,al
  437a66:	mov    al,BYTE PTR [eax+0x448f88]
  437a6c:	mov    ds:0x46139e,al
  437a71:	pop    esi
  437a72:	mov    BYTE PTR ds:0x46137a,bl
  437a78:	pop    ebx
  437a79:	ret    
  437a7a:	pop    esi
  437a7b:	pop    ebx
  437a7c:	jmp    0x437680
  437a81:	mov    ecx,DWORD PTR ds:0x46137c
  437a87:	mov    BYTE PTR ds:0x4613a8,0xff
  437a8e:	inc    ecx
  437a8f:	mov    DWORD PTR ds:0x46137c,ecx
  437a95:	cmp    ecx,DWORD PTR ds:0x460eb8
  437a9b:	jb     0x437adc
  437a9d:	mov    edx,0x46107f
  437aa2:	mov    ecx,0x46137c
  437aa7:	call   0x435a34
  437aac:	cmp    BYTE PTR ds:0x46107f,0x0
  437ab3:	mov    ds:0x46107e,al
  437ab8:	movzx  eax,al
  437abb:	mov    al,BYTE PTR [eax+0x448f88]
  437ac1:	mov    ds:0x46139e,al
  437ac6:	je     0x437ad4
  437ac8:	cmp    DWORD PTR ds:0x461384,0x4600f8
  437ad2:	jae    0x437afd
  437ad4:	mov    ecx,DWORD PTR ds:0x46137c
  437ada:	jmp    0x437af1
  437adc:	mov    al,BYTE PTR [ecx]
  437ade:	mov    ds:0x46107e,al
  437ae3:	movzx  eax,al
  437ae6:	mov    al,BYTE PTR [eax+0x448f88]
  437aec:	mov    ds:0x46139e,al
  437af1:	cmp    al,0x20
  437af3:	je     0x437a8e
  437af5:	mov    BYTE PTR ds:0x46137a,0x1
  437afc:	ret    
  437afd:	jmp    0x435fb0
  437b02:	mov    ecx,0x7fc
  437b07:	call   0x435f35
  437b0c:	jmp    0x438026
  437b11:	mov    edx,DWORD PTR ds:0x461384
  437b17:	push   esi
  437b18:	mov    esi,DWORD PTR ds:0x460e9c
  437b1e:	push   edi
  437b1f:	mov    edi,DWORD PTR ds:0x46137c
  437b25:	sub    edi,esi
  437b27:	cmp    edx,0x4600f8
  437b2d:	jb     0x437b36
  437b2f:	pop    edi
  437b30:	pop    esi
  437b31:	jmp    0x435fb0
  437b36:	mov    ax,ds:0x4613a4
  437b3c:	push   ebx
  437b3d:	mov    WORD PTR [edx],ax
  437b40:	xor    ebx,ebx
  437b42:	mov    eax,0xffbf
  437b47:	and    WORD PTR ds:0x4605b0,ax
  437b4e:	inc    ebx
  437b4f:	cmp    BYTE PTR ds:0x46107c,0x0
  437b56:	mov    WORD PTR [edx+0x2],bx
  437b5a:	mov    DWORD PTR [edx+0xc],esi
  437b5d:	je     0x437b72
  437b5f:	call   0x4359e0
  437b64:	mov    esi,DWORD PTR ds:0x460e9c
  437b6a:	mov    edx,DWORD PTR ds:0x461384
  437b70:	mov    edi,eax
  437b72:	cmp    DWORD PTR ds:0x4613a0,0x0
  437b79:	je     0x437ca0
  437b7f:	cmp    BYTE PTR ds:0x4605b6,0x0
  437b86:	jne    0x437ca0
  437b8c:	mov    eax,ds:0x461170
  437b91:	mov    cl,BYTE PTR ds:0x46139d
  437b97:	mov    eax,DWORD PTR [eax+0x4]
  437b9a:	add    edi,esi
  437b9c:	mov    ds:0x460e9c,eax
  437ba1:	cmp    cl,0xd
  437ba4:	je     0x437be1
  437ba6:	cmp    cl,0x21
  437ba9:	je     0x437be1
  437bab:	mov    al,BYTE PTR [esi]
  437bad:	inc    esi
  437bae:	mov    ds:0x46107e,al
  437bb3:	cmp    al,cl
  437bb5:	jne    0x437bc7
  437bb7:	cmp    esi,edi
  437bb9:	jae    0x437c87
  437bbf:	mov    al,BYTE PTR [esi]
  437bc1:	mov    ds:0x46107e,al
  437bc6:	inc    esi
  437bc7:	lea    ecx,[esi-0x1]
  437bca:	mov    edx,ebx
  437bcc:	call   0x435b7c
  437bd1:	cmp    esi,edi
  437bd3:	jae    0x437c87
  437bd9:	mov    cl,BYTE PTR ds:0x46139d
  437bdf:	jmp    0x437bab
  437be1:	and    DWORD PTR ds:0x461078,0x0
  437be8:	mov    ebx,esi
  437bea:	mov    al,BYTE PTR [esi]
  437bec:	mov    ds:0x46107e,al
  437bf1:	cmp    al,0x5c
  437bf3:	jne    0x437c4f
  437bf5:	mov    edx,esi
  437bf7:	inc    esi
  437bf8:	cmp    esi,edi
  437bfa:	jae    0x437c4b
  437bfc:	movzx  eax,BYTE PTR [esi]
  437bff:	cmp    BYTE PTR [eax+0x448f88],0x20
  437c06:	je     0x437bf7
  437c08:	movzx  eax,BYTE PTR [esi]
  437c0b:	mov    al,BYTE PTR [eax+0x448f88]
  437c11:	cmp    al,0x22
  437c13:	je     0x437c1d
  437c15:	cmp    al,0x1f
  437c17:	jne    0x437c4b
  437c19:	cmp    al,0x22
  437c1b:	jne    0x437c27
  437c1d:	inc    esi
  437c1e:	cmp    esi,edi
  437c20:	jae    0x437c27
  437c22:	cmp    BYTE PTR [esi],0xa
  437c25:	jne    0x437c1d
  437c27:	inc    esi
  437c28:	cmp    esi,edi
  437c2a:	jae    0x437c38
  437c2c:	movzx  eax,BYTE PTR [esi]
  437c2f:	cmp    BYTE PTR [eax+0x448f88],0x20
  437c36:	je     0x437c27
  437c38:	sub    edx,ebx
  437c3a:	mov    ecx,ebx
  437c3c:	call   0x435b7c
  437c41:	mov    cl,BYTE PTR ds:0x46139d
  437c47:	mov    ebx,esi
  437c49:	jmp    0x437c74
  437c4b:	mov    esi,edx
  437c4d:	jmp    0x437c73
  437c4f:	cmp    al,cl
  437c51:	jne    0x437c73
  437c53:	inc    esi
  437c54:	cmp    esi,edi
  437c56:	jae    0x437c7c
  437c58:	mov    edx,esi
  437c5a:	sub    edx,ebx
  437c5c:	dec    edx
  437c5d:	mov    ecx,ebx
  437c5f:	call   0x435b7c
  437c64:	mov    al,BYTE PTR [esi]
  437c66:	mov    cl,BYTE PTR ds:0x46139d
  437c6c:	mov    ds:0x46107e,al
  437c71:	mov    ebx,esi
  437c73:	inc    esi
  437c74:	cmp    esi,edi
  437c76:	jb     0x437bea
  437c7c:	sub    esi,ebx
  437c7e:	mov    edx,esi
  437c80:	mov    ecx,ebx
  437c82:	call   0x435b7c
  437c87:	mov    ecx,DWORD PTR ds:0x460e9c
  437c8d:	mov    edx,DWORD PTR ds:0x461384
  437c93:	mov    eax,ds:0x461170
  437c98:	mov    DWORD PTR [edx+0xc],ecx
  437c9b:	mov    edi,DWORD PTR [eax+0x4]
  437c9e:	sub    edi,ecx
  437ca0:	cmp    edi,0xff
  437ca6:	jbe    0x437cb5
  437ca8:	pop    ebx
  437ca9:	pop    edi
  437caa:	mov    ecx,0x7f9
  437caf:	pop    esi
  437cb0:	jmp    0x435f65
  437cb5:	and    DWORD PTR ds:0x460e9c,0x0
  437cbc:	mov    esi,DWORD PTR ds:0x460eb8
  437cc2:	add    edx,0x10
  437cc5:	cmp    BYTE PTR ds:0x461382,0x0
  437ccc:	mov    WORD PTR [edx-0xc],di
  437cd0:	mov    DWORD PTR ds:0x461384,edx
  437cd6:	mov    DWORD PTR ds:0x461174,edx
  437cdc:	je     0x437d1a
  437cde:	mov    ecx,DWORD PTR [edx-0x4]
  437ce1:	mov    BYTE PTR ds:0x461382,0x0
  437ce8:	lea    eax,[ecx-0x1]
  437ceb:	test   edi,edi
  437ced:	je     0x437d13
  437cef:	mov    bl,BYTE PTR [ecx]
  437cf1:	dec    edi
  437cf2:	mov    BYTE PTR ds:0x46107e,bl
  437cf8:	cmp    bl,0x3b
  437cfb:	je     0x437d09
  437cfd:	cmp    bl,0x20
  437d00:	jle    0x437d04
  437d02:	mov    eax,ecx
  437d04:	inc    ecx
  437d05:	test   edi,edi
  437d07:	jne    0x437cef
  437d09:	sub    ax,WORD PTR [edx-0x4]
  437d0d:	inc    ax
  437d0f:	mov    WORD PTR [edx-0xc],ax
  437d13:	mov    eax,ds:0x46137c
  437d18:	jmp    0x437d48
  437d1a:	mov    eax,ds:0x46137c
  437d1f:	cmp    eax,esi
  437d21:	jae    0x437d30
  437d23:	cmp    BYTE PTR [eax],0xa
  437d26:	jne    0x437d30
  437d28:	pop    ebx
  437d29:	pop    edi
  437d2a:	pop    esi
  437d2b:	jmp    0x437fb7
  437d30:	test   DWORD PTR ds:0x4605b0,0x100
  437d3a:	je     0x437d49
  437d3c:	mov    ecx,0xfeff
  437d41:	and    WORD PTR ds:0x4605b0,cx
  437d48:	dec    eax
  437d49:	inc    eax
  437d4a:	mov    ds:0x46137c,eax
  437d4f:	cmp    eax,esi
  437d51:	jb     0x437d90
  437d53:	mov    edx,0x46107f
  437d58:	mov    ecx,0x46137c
  437d5d:	call   0x435a34
  437d62:	cmp    BYTE PTR ds:0x46107f,0x0
  437d69:	mov    ds:0x46107e,al
  437d6e:	movzx  eax,al
  437d71:	mov    al,BYTE PTR [eax+0x448f88]
  437d77:	mov    ds:0x46139e,al
  437d7c:	je     0x437da5
  437d7e:	cmp    DWORD PTR ds:0x461384,0x4600f8
  437d88:	jb     0x437da5
  437d8a:	pop    ebx
  437d8b:	jmp    0x437b2f
  437d90:	mov    al,BYTE PTR [eax]
  437d92:	mov    ds:0x46107e,al
  437d97:	movzx  eax,al
  437d9a:	mov    al,BYTE PTR [eax+0x448f88]
  437da0:	mov    ds:0x46139e,al
  437da5:	pop    ebx
  437da6:	pop    edi
  437da7:	mov    BYTE PTR ds:0x46137a,0x1
  437dae:	pop    esi
  437daf:	ret    
  437db0:	mov    ecx,DWORD PTR ds:0x46137c
  437db6:	push   0x4613a0
  437dbb:	mov    dl,BYTE PTR [ecx]
  437dbd:	lea    eax,[ecx+0x1]
  437dc0:	mov    ds:0x460e9c,eax
  437dc5:	mov    BYTE PTR ds:0x46107e,dl
  437dcb:	mov    BYTE PTR ds:0x46139d,dl
  437dd1:	call   0x4353d7
  437dd6:	test   al,al
  437dd8:	je     0x437dea
  437dda:	dec    DWORD PTR ds:0x46137c
  437de0:	mov    ecx,0x7fe
  437de5:	jmp    0x435f65
  437dea:	push   0x7
  437dec:	pop    eax
  437ded:	mov    ds:0x4613a4,ax
  437df3:	jmp    0x437b11
  437df8:	mov    eax,ds:0x46137c
  437dfd:	push   ebx
  437dfe:	push   esi
  437dff:	push   edi
  437e00:	inc    eax
  437e01:	push   0x63
  437e03:	pop    esi
  437e04:	mov    bl,0x4
  437e06:	mov    ds:0x46137c,eax
  437e0b:	mov    edi,0x4600f8
  437e10:	cmp    eax,DWORD PTR ds:0x460eb8
  437e16:	jb     0x437e55
  437e18:	mov    edx,0x46107f
  437e1d:	mov    ecx,0x46137c
  437e22:	call   0x435a34
  437e27:	cmp    BYTE PTR ds:0x46107f,0x0
  437e2e:	mov    ecx,DWORD PTR ds:0x461384
  437e34:	mov    ds:0x46107e,al
  437e39:	movzx  eax,al
  437e3c:	mov    al,BYTE PTR [eax+0x448f88]
  437e42:	mov    ds:0x46139e,al
  437e47:	je     0x437e70
  437e49:	cmp    ecx,edi
  437e4b:	jb     0x437e70
  437e4d:	pop    edi
  437e4e:	pop    esi
  437e4f:	pop    ebx
  437e50:	jmp    0x435fb0
  437e55:	mov    al,BYTE PTR [eax]
  437e57:	mov    ecx,DWORD PTR ds:0x461384
  437e5d:	mov    ds:0x46107e,al
  437e62:	movzx  eax,al
  437e65:	mov    al,BYTE PTR [eax+0x448f88]
  437e6b:	mov    ds:0x46139e,al
  437e70:	or     WORD PTR ds:0x4605b0,0x40
  437e78:	mov    al,ds:0x4605b0
  437e7d:	and    al,0x7
  437e7f:	cmp    al,0x3
  437e81:	jne    0x437ea7
  437e83:	mov    eax,ds:0x46061c
  437e88:	push   0x2
  437e8a:	pop    edx
  437e8b:	mov    WORD PTR [eax+0x2],dx
  437e8f:	mov    eax,ds:0x4605b0
  437e94:	and    eax,0xfffa
  437e99:	or     eax,0xa
  437e9c:	push   0x36
  437e9e:	mov    ds:0x4605b0,ax
  437ea4:	pop    esi
  437ea5:	mov    bl,0x8
  437ea7:	cmp    ecx,edi
  437ea9:	jb     0x437eb8
  437eab:	call   0x435fb0
  437eb0:	dec    DWORD PTR ds:0x46137c
  437eb6:	jmp    0x437edc
  437eb8:	and    DWORD PTR [ecx+0xc],0x0
  437ebc:	movzx  eax,bl
  437ebf:	mov    WORD PTR [ecx],si
  437ec2:	mov    WORD PTR [ecx+0x2],ax
  437ec6:	add    ecx,0x10
  437ec9:	mov    DWORD PTR ds:0x461384,ecx
  437ecf:	mov    DWORD PTR ds:0x461174,ecx
  437ed5:	mov    BYTE PTR ds:0x46137a,0x1
  437edc:	pop    edi
  437edd:	pop    esi
  437ede:	pop    ebx
  437edf:	ret    
  437ee0:	movsx  edx,BYTE PTR ds:0x46139e
  437ee7:	mov    eax,ds:0x4605b0
  437eec:	mov    ecx,DWORD PTR ds:0x461384
  437ef2:	and    eax,0xffbf
  437ef7:	or     ax,WORD PTR [edx*4+0x405880]
  437eff:	push   esi
  437f00:	mov    esi,0x4600f8
  437f05:	mov    ds:0x4605b0,ax
  437f0b:	cmp    ecx,esi
  437f0d:	jb     0x437f15
  437f0f:	pop    esi
  437f10:	jmp    0x435fb0
  437f15:	movzx  eax,BYTE PTR [edx*2+0x4047a4]
  437f1d:	mov    WORD PTR [ecx],ax
  437f20:	movzx  eax,BYTE PTR [edx*2+0x4047a5]
  437f28:	mov    WORD PTR [ecx+0x2],ax
  437f2c:	mov    eax,ds:0x46137c
  437f31:	push   ebx
  437f32:	xor    ebx,ebx
  437f34:	inc    ebx
  437f35:	mov    DWORD PTR [ecx+0xc],eax
  437f38:	mov    WORD PTR [ecx+0x4],bx
  437f3c:	mov    eax,ds:0x46137c
  437f41:	add    ecx,0x10
  437f44:	inc    eax
  437f45:	mov    DWORD PTR ds:0x461384,ecx
  437f4b:	mov    DWORD PTR ds:0x461174,ecx
  437f51:	mov    ds:0x46137c,eax
  437f56:	cmp    eax,DWORD PTR ds:0x460eb8
  437f5c:	jb     0x437f97
  437f5e:	mov    edx,0x46107f
  437f63:	mov    ecx,0x46137c
  437f68:	call   0x435a34
  437f6d:	cmp    BYTE PTR ds:0x46107f,0x0
  437f74:	mov    ds:0x46107e,al
  437f79:	movzx  eax,al
  437f7c:	mov    al,BYTE PTR [eax+0x448f88]
  437f82:	mov    ds:0x46139e,al
  437f87:	je     0x437fac
  437f89:	cmp    DWORD PTR ds:0x461384,esi
  437f8f:	jb     0x437fac
  437f91:	pop    ebx
  437f92:	jmp    0x437f0f
  437f97:	mov    al,BYTE PTR [eax]
  437f99:	mov    ds:0x46107e,al
  437f9e:	movzx  eax,al
  437fa1:	mov    al,BYTE PTR [eax+0x448f88]
  437fa7:	mov    ds:0x46139e,al
  437fac:	mov    BYTE PTR ds:0x46137a,bl
  437fb2:	pop    ebx
  437fb3:	pop    esi
  437fb4:	ret    
  437fb5:	int3   
  437fb6:	int3   
  437fb7:	cmp    DWORD PTR ds:0x460eac,0x0
  437fbe:	je     0x437fc6
  437fc0:	inc    DWORD PTR ds:0x460618
  437fc6:	mov    eax,ds:0x461384
  437fcb:	mov    ds:0x461174,eax
  437fd0:	call   0x436045
  437fd5:	test   al,al
  437fd7:	mov    eax,ds:0x461384
  437fdc:	je     0x43801a
  437fde:	cmp    WORD PTR [eax-0x10],0x68
  437fe3:	jne    0x43801a
  437fe5:	cmp    WORD PTR [eax-0xe],0x4
  437fea:	jne    0x43801a
  437fec:	cmp    BYTE PTR ds:0x4605b3,0x0
  437ff3:	jne    0x437ffe
  437ff5:	cmp    BYTE PTR ds:0x45f98f,0x0
  437ffc:	jne    0x43801a
  437ffe:	cmp    BYTE PTR ds:0x46137a,0x0
  438005:	push   0x69
  438007:	pop    ecx
  438008:	mov    WORD PTR [eax-0x10],cx
  43800c:	jne    0x438153
  438012:	mov    BYTE PTR ds:0x46137a,0x1
  438019:	ret    
  43801a:	cmp    eax,0x4600f8
  43801f:	jae    0x435fb0
  438025:	ret    
  438026:	mov    ecx,DWORD PTR ds:0x46137c
  43802c:	mov    edx,DWORD PTR ds:0x461384
  438032:	push   ebx
  438033:	push   esi
  438034:	push   edi
  438035:	dec    ecx
  438036:	mov    edi,0x46107f
  43803b:	mov    esi,0x4600f8
  438040:	inc    ecx
  438041:	mov    DWORD PTR ds:0x46137c,ecx
  438047:	cmp    ecx,DWORD PTR ds:0x460eb8
  43804d:	jb     0x438091
  43804f:	mov    edx,edi
  438051:	mov    ecx,0x46137c
  438056:	call   0x435a34
  43805b:	cmp    BYTE PTR ds:0x46107f,0x0
  438062:	mov    edx,DWORD PTR ds:0x461384
  438068:	mov    bl,al
  43806a:	movzx  ecx,bl
  43806d:	mov    BYTE PTR ds:0x46107e,bl
  438073:	mov    cl,BYTE PTR [ecx+0x448f88]
  438079:	mov    BYTE PTR ds:0x46139e,cl
  43807f:	je     0x438089
  438081:	cmp    edx,esi
  438083:	jae    0x438110
  438089:	mov    ecx,DWORD PTR ds:0x46137c
  43808f:	jmp    0x4380a7
  438091:	mov    bl,BYTE PTR [ecx]
  438093:	movzx  eax,bl
  438096:	mov    BYTE PTR ds:0x46107e,bl
  43809c:	mov    al,BYTE PTR [eax+0x448f88]
  4380a2:	mov    ds:0x46139e,al
  4380a7:	cmp    bl,0xa
  4380aa:	jne    0x438040
  4380ac:	cmp    BYTE PTR ds:0x46139f,0x0
  4380b3:	je     0x43813b
  4380b9:	inc    ecx
  4380ba:	mov    BYTE PTR ds:0x46139f,0x0
  4380c1:	mov    DWORD PTR ds:0x461174,edx
  4380c7:	mov    DWORD PTR ds:0x46137c,ecx
  4380cd:	cmp    ecx,DWORD PTR ds:0x460eb8
  4380d3:	jb     0x438126
  4380d5:	mov    edx,edi
  4380d7:	mov    ecx,0x46137c
  4380dc:	call   0x435a34
  4380e1:	cmp    BYTE PTR ds:0x46107f,0x0
  4380e8:	mov    ds:0x46107e,al
  4380ed:	movzx  eax,al
  4380f0:	mov    al,BYTE PTR [eax+0x448f88]
  4380f6:	mov    ds:0x46139e,al
  4380fb:	je     0x43813b
  4380fd:	mov    eax,ds:0x461384
  438102:	cmp    eax,esi
  438104:	jb     0x43813b
  438106:	sub    eax,0x10
  438109:	mov    ds:0x461384,eax
  43810e:	jmp    0x438119
  438110:	sub    edx,0x10
  438113:	mov    DWORD PTR ds:0x461384,edx
  438119:	pop    edi
  43811a:	pop    esi
  43811b:	mov    ecx,0x7fa
  438120:	pop    ebx
  438121:	jmp    0x435f65
  438126:	mov    al,BYTE PTR [ecx]
  438128:	mov    ds:0x46107e,al
  43812d:	movzx  eax,al
  438130:	mov    al,BYTE PTR [eax+0x448f88]
  438136:	mov    ds:0x46139e,al
  43813b:	cmp    BYTE PTR ds:0x46137a,0x0
  438142:	pop    edi
  438143:	pop    esi
  438144:	pop    ebx
  438145:	jne    0x438153
  43814b:	mov    BYTE PTR ds:0x46137a,0x1
  438152:	ret    
  438153:	jmp    0x43821d
  438158:	inc    BYTE PTR ds:0x4613a8
  43815e:	cmp    BYTE PTR ds:0x4605b6,0x0
  438165:	mov    ecx,DWORD PTR ds:0x461384
  43816b:	mov    BYTE PTR ds:0x46137a,0x0
  438172:	mov    DWORD PTR ds:0x461174,ecx
  438178:	je     0x438184
  43817a:	mov    ax,ds:0x4605b0
  438180:	mov    WORD PTR [ecx-0xa],ax
  438184:	mov    al,ds:0x4613a9
  438189:	test   al,al
  43818b:	je     0x438194
  43818d:	dec    al
  43818f:	mov    ds:0x4613a9,al
  438194:	mov    al,ds:0x46139e
  438199:	cmp    al,0x20
  43819b:	jne    0x438213
  43819d:	mov    ecx,DWORD PTR ds:0x46137c
  4381a3:	inc    ecx
  4381a4:	mov    DWORD PTR ds:0x46137c,ecx
  4381aa:	cmp    ecx,DWORD PTR ds:0x460eb8
  4381b0:	jb     0x4381f3
  4381b2:	mov    edx,0x46107f
  4381b7:	mov    ecx,0x46137c
  4381bc:	call   0x435a34
  4381c1:	cmp    BYTE PTR ds:0x46107f,0x0
  4381c8:	mov    ds:0x46107e,al
  4381cd:	movzx  eax,al
  4381d0:	mov    al,BYTE PTR [eax+0x448f88]
  4381d6:	mov    ds:0x46139e,al
  4381db:	je     0x4381eb
  4381dd:	mov    ecx,DWORD PTR ds:0x461384
  4381e3:	cmp    ecx,0x4600f8
  4381e9:	jae    0x43822b
  4381eb:	mov    ecx,DWORD PTR ds:0x46137c
  4381f1:	jmp    0x438208
  4381f3:	mov    al,BYTE PTR [ecx]
  4381f5:	mov    ds:0x46107e,al
  4381fa:	movzx  eax,al
  4381fd:	mov    al,BYTE PTR [eax+0x448f88]
  438203:	mov    ds:0x46139e,al
  438208:	cmp    al,0x20
  43820a:	je     0x4381a3
  43820c:	mov    BYTE PTR ds:0x4613a8,0x0
  438213:	movsx  eax,al
  438216:	call   DWORD PTR [eax*4+0x449090]
  43821d:	cmp    BYTE PTR ds:0x46137a,0x0
  438224:	jne    0x438158
  43822a:	ret    
  43822b:	sub    ecx,0x10
  43822e:	mov    DWORD PTR ds:0x461384,ecx
  438234:	mov    ecx,0x7fa
  438239:	jmp    0x435f65
  43823e:	push   ebp
  43823f:	mov    ebp,esp
  438241:	push   ecx
  438242:	xor    ecx,ecx
  438244:	inc    ecx
  438245:	cmp    BYTE PTR ds:0x45f850,0x0
  43824c:	push   esi
  43824d:	mov    BYTE PTR ds:0x46137a,cl
  438253:	je     0x43825f
  438255:	call   0x438026
  43825a:	jmp    0x438341
  43825f:	cmp    BYTE PTR ds:0x4613a6,0x0
  438266:	je     0x4382cd
  438268:	mov    eax,ds:0x46061c
  43826d:	mov    WORD PTR [eax],cx
  438270:	jmp    0x4382b9
  438272:	mov    cl,BYTE PTR ds:0x46107e
  438278:	movsx  eax,cl
  43827b:	cmp    BYTE PTR [eax+0x4630d0],0x1
  438282:	jne    0x438293
  438284:	call   0x435fc1
  438289:	test   al,al
  43828b:	je     0x438341
  438291:	jmp    0x4382b9
  438293:	cmp    cl,0xa
  438296:	jne    0x4382b1
  438298:	cmp    DWORD PTR ds:0x460eac,0x0
  43829f:	je     0x4382b9
  4382a1:	dec    DWORD PTR ds:0x46137c
  4382a7:	call   0x437fb7
  4382ac:	jmp    0x438341
  4382b1:	cmp    cl,BYTE PTR ds:0x4613a6
  4382b7:	je     0x4382c4
  4382b9:	call   0x435fc1
  4382be:	test   al,al
  4382c0:	jne    0x438272
  4382c2:	jmp    0x438341
  4382c4:	mov    BYTE PTR ds:0x4613a6,0x0
  4382cb:	jmp    0x438255
  4382cd:	cmp    BYTE PTR ds:0x45f993,0x0
  4382d4:	mov    BYTE PTR ds:0x4605b2,0x0
  4382db:	je     0x43833c
  4382dd:	mov    al,ds:0x46139e
  4382e2:	mov    ds:0x46137b,al
  4382e7:	mov    esi,0x8000
  4382ec:	cmp    al,0x20
  4382ee:	je     0x4382fb
  4382f0:	cmp    al,0x60
  4382f2:	jne    0x43830b
  4382f4:	or     WORD PTR ds:0x4605b0,si
  4382fb:	call   0x436045
  438300:	test   al,al
  438302:	je     0x438341
  438304:	mov    al,ds:0x46139e
  438309:	jmp    0x4382ec
  43830b:	test   DWORD PTR ds:0x4605b0,esi
  438311:	je     0x43832c
  438313:	mov    eax,0x7fff
  438318:	and    WORD PTR ds:0x4605b0,ax
  43831f:	lea    edx,[ebp-0x4]
  438322:	call   0x434f37
  438327:	mov    ds:0x46139e,al
  43832c:	cmp    al,0x49
  43832e:	je     0x43833c
  438330:	cmp    al,0x45
  438332:	je     0x43833c
  438334:	cmp    al,0x43
  438336:	jne    0x438255
  43833c:	call   0x438153
  438341:	pop    esi
  438342:	leave  
  438343:	ret    
  438344:	cmp    BYTE PTR ds:0x460ebd,0x0
  43834b:	je     0x438357
  43834d:	mov    BYTE PTR ds:0x460ebd,0x0
  438354:	xor    al,al
  438356:	ret    
  438357:	mov    dl,BYTE PTR ds:0x45f98f
  43835d:	push   ebx
  43835e:	xor    ebx,ebx
  438360:	push   esi
  438361:	mov    esi,0x45fab8
  438366:	push   edi
  438367:	mov    BYTE PTR ds:0x461382,bl
  43836d:	mov    BYTE PTR ds:0x461381,bl
  438373:	mov    BYTE PTR ds:0x461380,bl
  438379:	mov    BYTE PTR ds:0x46137b,bl
  43837f:	mov    BYTE PTR ds:0x46107f,bl
  438385:	mov    DWORD PTR ds:0x461384,esi
  43838b:	test   dl,dl
  43838d:	jne    0x438399
  43838f:	mov    eax,ds:0x44f538
  438394:	mov    ds:0x460e38,eax
  438399:	mov    eax,ds:0x460eb4
  43839e:	mov    ds:0x460ea0,eax
  4383a3:	mov    ds:0x46137c,eax
  4383a8:	movzx  eax,BYTE PTR [eax]
  4383ab:	push   0x8
  4383ad:	mov    al,BYTE PTR [eax+0x448f88]
  4383b3:	mov    ds:0x46139e,al
  4383b8:	mov    BYTE PTR ds:0x4613a9,bl
  4383be:	mov    BYTE PTR ds:0x4613a8,0xff
  4383c5:	pop    edi
  4383c6:	cmp    BYTE PTR ds:0x4605b2,bl
  4383cc:	jne    0x438464
  4383d2:	mov    ecx,DWORD PTR ds:0x461170
  4383d8:	push   0x40
  4383da:	mov    eax,DWORD PTR [ecx]
  4383dc:	mov    DWORD PTR [ecx+0x4],eax
  4383df:	mov    eax,ds:0x46137c
  4383e4:	mov    ds:0x45fac4,eax
  4383e9:	xor    eax,eax
  4383eb:	pop    ecx
  4383ec:	mov    BYTE PTR ds:0x46107d,bl
  4383f2:	mov    BYTE PTR ds:0x4613a7,bl
  4383f8:	mov    DWORD PTR ds:0x46061c,esi
  4383fe:	mov    ds:0x45fabc,ax
  438404:	mov    ds:0x45fab8,ax
  43840a:	mov    DWORD PTR ds:0x461384,0x45fac8
  438414:	mov    DWORD PTR ds:0x460e9c,ebx
  43841a:	mov    WORD PTR ds:0x4605b0,cx
  438421:	cmp    BYTE PTR ds:0x4605b6,al
  438427:	je     0x438435
  438429:	mov    ecx,0x3040
  43842e:	mov    WORD PTR ds:0x4605b0,cx
  438435:	cmp    BYTE PTR ds:0x45f853,al
  43843b:	je     0x43844c
  43843d:	mov    eax,0x1000
  438442:	or     cx,ax
  438445:	mov    WORD PTR ds:0x4605b0,cx
  43844c:	test   dl,dl
  43844e:	je     0x4384ab
  438450:	movzx  eax,BYTE PTR ds:0x4605b4
  438457:	or     cx,ax
  43845a:	or     cx,di
  43845d:	mov    WORD PTR ds:0x4605b0,cx
  438464:	call   0x43823e
  438469:	mov    ecx,DWORD PTR ds:0x461384
  43846f:	mov    ax,ds:0x4605b0
  438475:	mov    edi,DWORD PTR ds:0x46061c
  43847b:	mov    WORD PTR [ecx-0xa],ax
  43847f:	xor    eax,eax
  438481:	mov    DWORD PTR [ecx],eax
  438483:	mov    esi,DWORD PTR ds:0x46137c
  438489:	mov    DWORD PTR ds:0x461384,edi
  43848f:	mov    DWORD PTR ds:0x460eb4,esi
  438495:	cmp    BYTE PTR ds:0x461381,al
  43849b:	je     0x4384bb
  43849d:	mov    esi,DWORD PTR ds:0x460e9c
  4384a3:	sub    esi,DWORD PTR ds:0x460ea0
  4384a9:	jmp    0x4384c2
  4384ab:	cmp    BYTE PTR ds:0x45f692,bl
  4384b1:	ja     0x43845a
  4384b3:	mov    DWORD PTR ds:0x460618,ebx
  4384b9:	jmp    0x438464
  4384bb:	sub    esi,DWORD PTR ds:0x460ea0
  4384c1:	dec    esi
  4384c2:	cmp    BYTE PTR ds:0x44f54e,al
  4384c8:	je     0x4384d1
  4384ca:	mov    ecx,esi
  4384cc:	call   0x4356ff
  4384d1:	add    WORD PTR [edi+0x4],si
  4384d5:	mov    eax,0x200
  4384da:	cmp    WORD PTR [edi+0x4],ax
  4384de:	jle    0x4384f8
  4384e0:	push   ebx
  4384e1:	xor    edx,edx
  4384e3:	mov    ecx,0x7f7
  4384e8:	call   0x42ee80
  4384ed:	mov    edi,DWORD PTR ds:0x461384
  4384f3:	xor    eax,eax
  4384f5:	mov    DWORD PTR [edi+0x10],eax
  4384f8:	mov    al,ds:0x46107f
  4384fd:	movzx  ecx,WORD PTR [edi+0x2]
  438501:	mov    ds:0x460ebd,al
  438506:	mov    eax,0xfffb
  43850b:	and    cx,ax
  43850e:	movzx  eax,BYTE PTR ds:0x461380
  438515:	or     cx,ax
  438518:	test   BYTE PTR ds:0x4605b0,0x8
  43851f:	mov    WORD PTR [edi+0x2],cx
  438523:	jne    0x43853f
  438525:	mov    eax,ds:0x4605b0
  43852a:	and    ecx,0x4
  43852d:	and    eax,0xfff8
  438532:	or     eax,0x8
  438535:	mov    WORD PTR [edi+0x2],cx
  438539:	mov    ds:0x4605b0,ax
  43853f:	pop    edi
  438540:	pop    esi
  438541:	mov    al,0x1
  438543:	pop    ebx
  438544:	ret    
  438545:	mov    eax,ds:0x45f9b4
  43854a:	mov    ecx,DWORD PTR ds:0x460620
  438550:	push   esi
  438551:	mov    esi,DWORD PTR [eax]
  438553:	lea    eax,[ecx+0x1]
  438556:	cmp    esi,eax
  438558:	jbe    0x43857c
  43855a:	mov    edx,DWORD PTR ds:0x448884
  438560:	mov    eax,esi
  438562:	sub    eax,ecx
  438564:	dec    eax
  438565:	mov    ecx,0x44db2c
  43856a:	mov    ds:0x44db2f,eax
  43856f:	call   0x43f399
  438574:	lea    eax,[esi-0x1]
  438577:	mov    ds:0x460620,eax
  43857c:	pop    esi
  43857d:	ret    
  43857e:	mov    eax,ds:0x45f9b4
  438583:	mov    edx,DWORD PTR ds:0x448884
  438589:	mov    eax,DWORD PTR [eax]
  43858b:	mov    ds:0x460620,eax
  438590:	mov    ecx,0x41f3dc
  438595:	jmp    0x43f399
  43859a:	cmp    BYTE PTR ds:0x45f692,0x0
  4385a1:	jne    0x4385be
  4385a3:	cmp    BYTE PTR ds:0x44e043,0x0
  4385aa:	je     0x4385b9
  4385ac:	movzx  eax,cl
  4385af:	cmp    DWORD PTR [eax*4+0x448d98],0x0
  4385b7:	jne    0x4385be
  4385b9:	jmp    0x438545
  4385be:	ret    
  4385bf:	cmp    BYTE PTR ds:0x44e043,0x0
  4385c6:	je     0x4385f0
  4385c8:	test   ecx,ecx
  4385ca:	je     0x4385d4
  4385cc:	inc    BYTE PTR ds:0x4613aa
  4385d2:	jmp    0x4385da
  4385d4:	dec    BYTE PTR ds:0x4613aa
  4385da:	mov    edx,DWORD PTR ds:0x448884
  4385e0:	mov    BYTE PTR ds:0x44db2b,cl
  4385e6:	mov    ecx,0x44db28
  4385eb:	jmp    0x43f399
  4385f0:	ret    
  4385f1:	push   ebp
  4385f2:	mov    ebp,esp
  4385f4:	mov    eax,DWORD PTR [ebp+0x8]
  4385f7:	mov    ecx,DWORD PTR [eax+0x3]
  4385fa:	mov    eax,ds:0x448894
  4385ff:	mov    DWORD PTR [eax+0x20],ecx
  438602:	pop    ebp
  438603:	ret    0x4
  438606:	push   ebp
  438607:	mov    ebp,esp
  438609:	mov    eax,DWORD PTR [ebp+0x8]
  43860c:	mov    ecx,DWORD PTR [eax+0x3]
  43860f:	mov    eax,ds:0x45f9b4
  438614:	mov    DWORD PTR [eax],ecx
  438616:	pop    ebp
  438617:	ret    0x4
  43861a:	push   ebp
  43861b:	mov    ebp,esp
  43861d:	mov    eax,DWORD PTR [ebp+0x8]
  438620:	push   edi
  438621:	lea    edi,[eax+0x4]
  438624:	cmp    BYTE PTR [edi],0x3c
  438627:	jbe    0x43862c
  438629:	mov    BYTE PTR [edi],0x3c
  43862c:	cmp    BYTE PTR [eax],0x21
  43862f:	jne    0x438669
  438631:	xor    ecx,ecx
  438633:	mov    WORD PTR [eax+0x1],cx
  438637:	cmp    DWORD PTR ds:0x4613b0,ecx
  43863d:	jne    0x438669
  43863f:	push   ebx
  438640:	movzx  ebx,BYTE PTR [edi]
  438643:	test   ebx,ebx
  438645:	je     0x438668
  438647:	push   esi
  438648:	lea    ecx,[ebx+0x1]
  43864b:	call   0x43f45b
  438650:	push   ebx
  438651:	mov    esi,eax
  438653:	push   edi
  438654:	push   esi
  438655:	mov    DWORD PTR ds:0x4613b0,esi
  43865b:	call   0x447646
  438660:	add    esp,0xc
  438663:	mov    BYTE PTR [esi+ebx*1],0x0
  438667:	pop    esi
  438668:	pop    ebx
  438669:	pop    edi
  43866a:	pop    ebp
  43866b:	ret    0x4
  43866e:	push   ebp
  43866f:	mov    ebp,esp
  438671:	cmp    BYTE PTR ds:0x44e00b,0x0
  438678:	push   ebx
  438679:	mov    bl,BYTE PTR ds:0x45f692
  43867f:	je     0x43868a
  438681:	cmp    bl,0x1
  438684:	jne    0x438730
  43868a:	push   esi
  43868b:	mov    esi,DWORD PTR [ebp+0x8]
  43868e:	mov    ax,WORD PTR [esi+0x1]
  438692:	sub    ax,0x3
  438696:	jne    0x4386c8
  438698:	mov    al,ds:0x4605b7
  43869d:	dec    al
  43869f:	mov    ds:0x4605b7,al
  4386a4:	movzx  eax,al
  4386a7:	mov    eax,DWORD PTR [eax*4+0x4605c8]
  4386ae:	mov    ds:0x44e4bc,eax
  4386b3:	call   0x43d909
  4386b8:	mov    eax,ds:0x4600fc
  4386bd:	imul   eax,eax,0x1c
  4386c0:	mov    eax,DWORD PTR [eax+0x460118]
  4386c6:	jmp    0x43870e
  4386c8:	mov    dl,BYTE PTR ds:0x4605b7
  4386ce:	mov    eax,ds:0x44e4bc
  4386d3:	movzx  ecx,dl
  4386d6:	push   0x1
  4386d8:	mov    DWORD PTR [ecx*4+0x4605c8],eax
  4386df:	mov    eax,DWORD PTR [esi+0x3]
  4386e2:	mov    ds:0x44e4bc,eax
  4386e7:	lea    eax,[esi+0x7]
  4386ea:	inc    dl
  4386ec:	push   eax
  4386ed:	xor    ecx,ecx
  4386ef:	mov    BYTE PTR ds:0x4605b7,dl
  4386f5:	call   0x43d87d
  4386fa:	mov    eax,ds:0x4600fc
  4386ff:	mov    bl,BYTE PTR ds:0x45f692
  438705:	imul   eax,eax,0x1c
  438708:	lea    eax,[eax+0x4600f4]
  43870e:	cmp    BYTE PTR ds:0x44e02f,0x0
  438715:	mov    ds:0x45f9a0,eax
  43871a:	pop    esi
  43871b:	je     0x438730
  43871d:	cmp    bl,0x2
  438720:	jne    0x438730
  438722:	cmp    BYTE PTR ds:0x45f850,0x0
  438729:	jne    0x438730
  43872b:	call   0x42dae7
  438730:	pop    ebx
  438731:	pop    ebp
  438732:	ret    0x4
  438735:	push   ebp
  438736:	mov    ebp,esp
  438738:	cmp    BYTE PTR ds:0x44e00b,0x0
  43873f:	je     0x43874a
  438741:	cmp    BYTE PTR ds:0x45f692,0x2
  438748:	jae    0x438757
  43874a:	mov    eax,DWORD PTR [ebp+0x8]
  43874d:	mov    ecx,DWORD PTR [eax+0x3]
  438750:	mov    eax,ds:0x45f9b4
  438755:	add    DWORD PTR [eax],ecx
  438757:	pop    ebp
  438758:	ret    0x4
  43875b:	cmp    BYTE PTR ds:0x44e00b,0x0
  438762:	je     0x43876d
  438764:	cmp    BYTE PTR ds:0x45f692,0x2
  43876b:	jae    0x43877d
  43876d:	mov    ecx,DWORD PTR ds:0x45f9b4
  438773:	mov    eax,DWORD PTR [ecx]
  438775:	cmp    eax,0xffffffff
  438778:	je     0x43877d
  43877a:	inc    eax
  43877b:	mov    DWORD PTR [ecx],eax
  43877d:	ret    0x4
  438780:	mov    dl,BYTE PTR ds:0x44e00b
  438786:	test   dl,dl
  438788:	sete   BYTE PTR ds:0x45f83b
  43878f:	cmp    BYTE PTR ds:0x44f54c,0x0
  438796:	push   esi
  438797:	setne  al
  43879a:	push   edi
  43879b:	xor    edi,edi
  43879d:	mov    esi,ecx
  43879f:	mov    DWORD PTR ds:0x45f840,edi
  4387a5:	mov    BYTE PTR ds:0x4613bf,0x20
  4387ac:	lea    eax,[eax*2+0x1]
  4387b3:	mov    ds:0x45f99f,al
  4387b8:	test   dl,dl
  4387ba:	je     0x43888d
  4387c0:	mov    ecx,DWORD PTR ds:0x44e4bc
  4387c6:	mov    al,BYTE PTR [ecx+0x2d]
  4387c9:	and    al,0x10
  4387cb:	or     al,0xb
  4387cd:	mov    BYTE PTR [ecx+0x2d],al
  4387d0:	mov    DWORD PTR [ecx+0x30],edi
  4387d3:	call   0x429932
  4387d8:	mov    eax,ds:0x44e4bc
  4387dd:	mov    ecx,DWORD PTR [eax+0x3c]
  4387e0:	movzx  eax,WORD PTR [eax+0x3a]
  4387e4:	add    ecx,0x200
  4387ea:	add    eax,ecx
  4387ec:	cmp    BYTE PTR ds:0x44f54d,0x0
  4387f3:	mov    DWORD PTR ds:0x4632fc,ecx
  4387f9:	mov    DWORD PTR ds:0x463300,ecx
  4387ff:	mov    ds:0x463304,eax
  438804:	jne    0x438835
  438806:	mov    edx,esi
  438808:	xor    cl,cl
  43880a:	call   0x433cd8
  43880f:	mov    ds:0x45f9b0,eax
  438814:	mov    eax,DWORD PTR [eax+0x3c]
  438817:	mov    ds:0x4632f0,eax
  43881c:	mov    ds:0x4632f4,eax
  438821:	add    eax,0x1000
  438826:	mov    ds:0x4632f8,eax
  43882b:	mov    DWORD PTR ds:0x4613d8,0x4613e0
  438835:	mov    eax,ds:0x44f53c
  43883a:	mov    ds:0x4613d0,eax
  43883f:	mov    eax,ds:0x44f540
  438844:	mov    DWORD PTR ds:0x460574,edi
  43884a:	mov    BYTE PTR ds:0x4613bc,0x1
  438851:	mov    DWORD PTR ds:0x4613c8,edi
  438857:	mov    DWORD PTR ds:0x4613c4,0x1
  438861:	mov    ds:0x4613cc,eax
  438866:	cmp    DWORD PTR ds:0x4613b0,edi
  43886c:	jne    0x43887b
  43886e:	mov    eax,ds:0x4488c4
  438873:	mov    eax,DWORD PTR [eax+0x18]
  438876:	mov    ds:0x4613b0,eax
  43887b:	call   0x4388fe
  438880:	mov    eax,ds:0x44f55c
  438885:	add    eax,0x4
  438888:	mov    ds:0x460568,eax
  43888d:	pop    edi
  43888e:	pop    esi
  43888f:	ret    
  438890:	mov    edx,ecx
  438892:	xor    cl,cl
  438894:	mov    BYTE PTR ds:0x4613bf,0x20
  43889b:	call   0x433cd8
  4388a0:	and    DWORD PTR ds:0x460574,0x0
  4388a7:	mov    ds:0x45f9b0,eax
  4388ac:	mov    eax,DWORD PTR [eax+0x3c]
  4388af:	mov    ds:0x4632f0,eax
  4388b4:	mov    ds:0x4632f4,eax
  4388b9:	add    eax,0x1000
  4388be:	and    DWORD PTR ds:0x4613c8,0x0
  4388c5:	mov    ds:0x4632f8,eax
  4388ca:	mov    eax,ds:0x44f53c
  4388cf:	mov    ds:0x4613d0,eax
  4388d4:	mov    eax,ds:0x44f540
  4388d9:	mov    DWORD PTR ds:0x4613d8,0x4613e0
  4388e3:	mov    BYTE PTR ds:0x4613bc,0x1
  4388ea:	mov    DWORD PTR ds:0x4613c4,0x1
  4388f4:	mov    ds:0x4613cc,eax
  4388f9:	jmp    0x4388fe
  4388fe:	mov    ecx,DWORD PTR ds:0x4613d8
  438904:	and    DWORD PTR ds:0x4613d4,0x0
  43890b:	push   esi
  43890c:	mov    esi,DWORD PTR ds:0x4613b4
  438912:	and    DWORD PTR ds:0x4613b4,0x0
  438919:	lea    eax,[ecx+0x1]
  43891c:	push   edi
  43891d:	cmp    eax,0x4617e0
  438922:	jbe    0x43892f
  438924:	call   0x43a7d2
  438929:	mov    ecx,DWORD PTR ds:0x4613d8
  43892f:	mov    edx,DWORD PTR ds:0x4613c8
  438935:	test   edx,edx
  438937:	jne    0x438941
  438939:	mov    eax,ds:0x4613c4
  43893e:	dec    eax
  43893f:	je     0x43894b
  438941:	mov    BYTE PTR [ecx],0xc
  438944:	inc    ecx
  438945:	mov    DWORD PTR ds:0x4613d8,ecx
  43894b:	mov    edi,DWORD PTR ds:0x4613dc
  438951:	and    DWORD PTR ds:0x4613dc,0x0
  438958:	inc    edx
  438959:	push   0x39
  43895b:	mov    DWORD PTR ds:0x4613c8,edx
  438961:	mov    edx,0x406a24
  438966:	pop    ecx
  438967:	call   0x43a48e
  43896c:	push   0x3c
  43896e:	pop    ecx
  43896f:	call   0x439dfb
  438974:	mov    ecx,0x44f4e8
  438979:	call   0x43a78c
  43897e:	call   0x439ef0
  438983:	mov    ecx,DWORD PTR ds:0x4613b0
  438989:	test   ecx,ecx
  43898b:	je     0x438992
  43898d:	call   0x43a78c
  438992:	push   0x3c
  438994:	pop    ecx
  438995:	call   0x439dfb
  43899a:	mov    al,ds:0x45f692
  43899f:	test   al,al
  4389a1:	jne    0x4389aa
  4389a3:	mov    ecx,0x41f56c
  4389a8:	jmp    0x4389b8
  4389aa:	mov    ecx,0x41f578
  4389af:	cmp    al,0x3
  4389b1:	je     0x4389b8
  4389b3:	mov    ecx,0x41f584
  4389b8:	call   0x43a78c
  4389bd:	mov    ecx,DWORD PTR ds:0x4613c8
  4389c3:	call   0x439d91
  4389c8:	mov    ecx,0x41f58c
  4389cd:	call   0x43a78c
  4389d2:	mov    ecx,DWORD PTR ds:0x4613c4
  4389d8:	call   0x439d91
  4389dd:	call   0x439ef0
  4389e2:	mov    ecx,DWORD PTR ds:0x4613ac
  4389e8:	test   ecx,ecx
  4389ea:	je     0x4389f1
  4389ec:	call   0x43a78c
  4389f1:	call   0x439ef0
  4389f6:	call   0x439ef0
  4389fb:	mov    ecx,DWORD PTR ds:0x460570
  438a01:	test   ecx,ecx
  438a03:	je     0x438a0f
  438a05:	call   0x43a78c
  438a0a:	call   0x439ef0
  438a0f:	mov    DWORD PTR ds:0x4613dc,edi
  438a15:	pop    edi
  438a16:	mov    DWORD PTR ds:0x4613b4,esi
  438a1c:	pop    esi
  438a1d:	ret    
  438a1e:	push   ebp
  438a1f:	mov    ebp,esp
  438a21:	mov    ecx,DWORD PTR ds:0x463300
  438a27:	sub    ecx,DWORD PTR ds:0x4632fc
  438a2d:	mov    eax,ds:0x44e4bc
  438a32:	mov    WORD PTR [eax+0x38],cx
  438a36:	mov    eax,DWORD PTR [ebp+0x8]
  438a39:	push   eax
  438a3a:	movzx  ecx,BYTE PTR [eax]
  438a3d:	mov    eax,ds:0x448988
  438a42:	call   DWORD PTR [eax+ecx*4]
  438a45:	mov    ecx,DWORD PTR ds:0x44e4bc
  438a4b:	mov    edx,DWORD PTR [ecx+0x3c]
  438a4e:	movzx  eax,WORD PTR [ecx+0x38]
  438a52:	add    edx,0x200
  438a58:	add    eax,edx
  438a5a:	mov    ds:0x463300,eax
  438a5f:	movzx  eax,WORD PTR [ecx+0x3a]
  438a63:	add    eax,edx
  438a65:	mov    DWORD PTR ds:0x4632fc,edx
  438a6b:	mov    ds:0x463304,eax
  438a70:	pop    ebp
  438a71:	ret    0x4
  438a74:	push   ebp
  438a75:	mov    ebp,esp
  438a77:	cmp    BYTE PTR ds:0x4613bc,0x0
  438a7e:	je     0x438a91
  438a80:	mov    DWORD PTR ds:0x4613dc,0x1
  438a8a:	mov    BYTE PTR ds:0x4613bc,0x0
  438a91:	mov    eax,ds:0x4613ac
  438a96:	test   eax,eax
  438a98:	je     0x438aa2
  438a9a:	push   eax
  438a9b:	call   DWORD PTR ds:0x464354
  438aa1:	pop    ecx
  438aa2:	push   ebx
  438aa3:	mov    ebx,DWORD PTR [ebp+0x8]
  438aa6:	add    ebx,0x4
  438aa9:	push   edi
  438aaa:	movzx  edi,BYTE PTR [ebx]
  438aad:	test   edi,edi
  438aaf:	jne    0x438ab9
  438ab1:	and    DWORD PTR ds:0x4613ac,edi
  438ab7:	jmp    0x438ada
  438ab9:	push   esi
  438aba:	lea    ecx,[edi+0x1]
  438abd:	call   0x43f45b
  438ac2:	push   edi
  438ac3:	mov    esi,eax
  438ac5:	push   ebx
  438ac6:	push   esi
  438ac7:	mov    DWORD PTR ds:0x4613ac,esi
  438acd:	call   0x447646
  438ad2:	add    esp,0xc
  438ad5:	mov    BYTE PTR [esi+edi*1],0x0
  438ad9:	pop    esi
  438ada:	pop    edi
  438adb:	pop    ebx
  438adc:	pop    ebp
  438add:	ret    0x4
  438ae0:	push   ebp
  438ae1:	mov    ebp,esp
  438ae3:	push   esi
  438ae4:	mov    esi,DWORD PTR [ebp+0x8]
  438ae7:	cmp    BYTE PTR [esi],0x8
  438aea:	jne    0x438af2
  438aec:	cmp    BYTE PTR [esi+0x3],0x0
  438af0:	jne    0x438b6c
  438af2:	cmp    BYTE PTR ds:0x4613bc,0x0
  438af9:	je     0x438b0c
  438afb:	mov    DWORD PTR ds:0x4613dc,0x1
  438b05:	mov    BYTE PTR ds:0x4613bc,0x0
  438b0c:	cmp    BYTE PTR ds:0x45f83b,0x0
  438b13:	jne    0x438b6c
  438b15:	cmp    BYTE PTR ds:0x4613aa,0x0
  438b1c:	je     0x438b27
  438b1e:	cmp    BYTE PTR ds:0x44f54f,0x0
  438b25:	je     0x438b6c
  438b27:	mov    ecx,DWORD PTR ds:0x45f830
  438b2d:	call   0x439c80
  438b32:	cmp    BYTE PTR ds:0x4613aa,0x0
  438b39:	je     0x438b6c
  438b3b:	push   0x1b
  438b3d:	pop    ecx
  438b3e:	call   0x439dfb
  438b43:	mov    ecx,0x41f590
  438b48:	call   0x43a78c
  438b4d:	mov    edx,DWORD PTR [esi+0x3]
  438b50:	movzx  ecx,BYTE PTR [edx+0x5]
  438b54:	sub    edx,ecx
  438b56:	call   0x43a48e
  438b5b:	mov    ecx,0x41f594
  438b60:	call   0x43a78c
  438b65:	and    DWORD PTR ds:0x460574,0x0
  438b6c:	pop    esi
  438b6d:	pop    ebp
  438b6e:	ret    0x4
  438b71:	push   ebp
  438b72:	mov    ebp,esp
  438b74:	cmp    BYTE PTR ds:0x4613bc,0x0
  438b7b:	je     0x438b8e
  438b7d:	mov    DWORD PTR ds:0x4613dc,0x1
  438b87:	mov    BYTE PTR ds:0x4613bc,0x0
  438b8e:	cmp    BYTE PTR ds:0x45f83b,0x0
  438b95:	jne    0x438be6
  438b97:	mov    eax,DWORD PTR [ebp+0x8]
  438b9a:	push   esi
  438b9b:	mov    esi,DWORD PTR [eax+0x3]
  438b9e:	mov    ecx,0x41f598
  438ba3:	call   0x43a78c
  438ba8:	mov    eax,DWORD PTR [esi+0x2c]
  438bab:	cmp    eax,0xffffffff
  438bae:	jne    0x438bca
  438bb0:	mov    ecx,DWORD PTR [esi+0x20]
  438bb3:	neg    ecx
  438bb5:	mov    BYTE PTR ds:0x4613bf,0x2d
  438bbc:	call   0x439c80
  438bc1:	mov    BYTE PTR ds:0x4613bf,0x20
  438bc8:	jmp    0x438be5
  438bca:	test   eax,eax
  438bcc:	je     0x438bdd
  438bce:	mov    ecx,DWORD PTR [eax+0x10]
  438bd1:	test   ecx,ecx
  438bd3:	je     0x438bdd
  438bd5:	mov    ecx,DWORD PTR [ecx+0x1c]
  438bd8:	add    ecx,DWORD PTR [eax+0x8]
  438bdb:	jmp    0x438be0
  438bdd:	mov    ecx,DWORD PTR [esi+0x20]
  438be0:	call   0x439c80
  438be5:	pop    esi
  438be6:	pop    ebp
  438be7:	ret    0x4
  438bea:	push   ebp
  438beb:	mov    ebp,esp
  438bed:	cmp    BYTE PTR ds:0x4613bc,0x0
  438bf4:	je     0x438c07
  438bf6:	mov    DWORD PTR ds:0x4613dc,0x1
  438c00:	mov    BYTE PTR ds:0x4613bc,0x0
  438c07:	cmp    BYTE PTR ds:0x45f992,0x0
  438c0e:	push   ebx
  438c0f:	push   edi
  438c10:	mov    BYTE PTR ds:0x4613ab,0x0
  438c17:	je     0x438c2e
  438c19:	cmp    BYTE PTR ds:0x45f99f,0x1
  438c20:	jne    0x438c2e
  438c22:	mov    BYTE PTR ds:0x4613ab,0x1
  438c29:	jmp    0x438d3b
  438c2e:	cmp    BYTE PTR ds:0x45f83b,0x0
  438c35:	jne    0x438d3b
  438c3b:	mov    ecx,DWORD PTR [ebp+0x8]
  438c3e:	push   esi
  438c3f:	lea    ecx,[ecx+0x4]
  438c42:	call   0x445afc
  438c47:	mov    esi,eax
  438c49:	test   esi,esi
  438c4b:	je     0x438d3a
  438c51:	mov    al,BYTE PTR [esi+0x6]
  438c54:	cmp    al,0x7
  438c56:	jne    0x438cf3
  438c5c:	mov    ecx,0x41f59c
  438c61:	call   0x43a78c
  438c66:	mov    edx,DWORD PTR [esi+0x18]
  438c69:	mov    edi,edx
  438c6b:	lea    ecx,[edi+0x1]
  438c6e:	mov    al,BYTE PTR [edi]
  438c70:	inc    edi
  438c71:	test   al,al
  438c73:	jne    0x438c6e
  438c75:	sub    edi,ecx
  438c77:	mov    ecx,DWORD PTR ds:0x460574
  438c7d:	lea    eax,[ecx+edi*1]
  438c80:	cmp    eax,0x1c
  438c83:	jae    0x438c8c
  438c85:	mov    eax,edi
  438c87:	mov    DWORD PTR [ebp+0x8],edi
  438c8a:	jmp    0x438c94
  438c8c:	push   0x1b
  438c8e:	pop    eax
  438c8f:	sub    eax,ecx
  438c91:	mov    DWORD PTR [ebp+0x8],eax
  438c94:	mov    ecx,eax
  438c96:	call   0x43a48e
  438c9b:	mov    eax,DWORD PTR [ebp+0x8]
  438c9e:	mov    ebx,edi
  438ca0:	sub    ebx,eax
  438ca2:	cmp    ebx,edi
  438ca4:	jbe    0x438cb3
  438ca6:	mov    ecx,0x3f8
  438cab:	call   0x42f124
  438cb0:	mov    eax,DWORD PTR [ebp+0x8]
  438cb3:	mov    edi,DWORD PTR [esi+0x18]
  438cb6:	add    edi,eax
  438cb8:	test   ebx,ebx
  438cba:	je     0x438d3a
  438cbc:	call   0x439ef0
  438cc1:	mov    ecx,0x41f5a0
  438cc6:	call   0x43a78c
  438ccb:	mov    ecx,DWORD PTR ds:0x460574
  438cd1:	lea    eax,[ecx+ebx*1]
  438cd4:	cmp    eax,0x1c
  438cd7:	jae    0x438cdd
  438cd9:	mov    esi,ebx
  438cdb:	jmp    0x438ce2
  438cdd:	push   0x1b
  438cdf:	pop    esi
  438ce0:	sub    esi,ecx
  438ce2:	mov    edx,edi
  438ce4:	mov    ecx,esi
  438ce6:	call   0x43a48e
  438ceb:	add    edi,esi
  438ced:	sub    ebx,esi
  438cef:	jne    0x438cbc
  438cf1:	jmp    0x438d3a
  438cf3:	cmp    al,0x8
  438cf5:	jne    0x438d3a
  438cf7:	mov    ecx,0x41f598
  438cfc:	call   0x43a78c
  438d01:	mov    eax,DWORD PTR [esi+0x2c]
  438d04:	cmp    eax,0xffffffff
  438d07:	jne    0x438d23
  438d09:	mov    ecx,DWORD PTR [esi+0x20]
  438d0c:	neg    ecx
  438d0e:	mov    BYTE PTR ds:0x4613bf,0x2d
  438d15:	call   0x439c80
  438d1a:	mov    BYTE PTR ds:0x4613bf,0x20
  438d21:	jmp    0x438d3a
  438d23:	test   eax,eax
  438d25:	je     0x438d32
  438d27:	cmp    BYTE PTR [eax],0x4
  438d2a:	jne    0x438d32
  438d2c:	movzx  ecx,BYTE PTR [eax+0x1]
  438d30:	jmp    0x438d35
  438d32:	mov    ecx,DWORD PTR [esi+0x20]
  438d35:	call   0x439c80
  438d3a:	pop    esi
  438d3b:	pop    edi
  438d3c:	pop    ebx
  438d3d:	pop    ebp
  438d3e:	ret    0x4
  438d41:	push   ebp
  438d42:	mov    ebp,esp
  438d44:	cmp    DWORD PTR ds:0x463308,0x0
  438d4b:	mov    eax,DWORD PTR [ebp+0x8]
  438d4e:	push   ebx
  438d4f:	mov    bl,BYTE PTR [eax+0x3]
  438d52:	je     0x438d5f
  438d54:	movzx  eax,bl
  438d57:	add    DWORD PTR ds:0x45f830,eax
  438d5d:	jmp    0x438dcb
  438d5f:	cmp    BYTE PTR ds:0x4613bc,0x0
  438d66:	je     0x438d79
  438d68:	mov    DWORD PTR ds:0x4613dc,0x1
  438d72:	mov    BYTE PTR ds:0x4613bc,0x0
  438d79:	mov    eax,ds:0x4613d8
  438d7e:	add    eax,0x1c
  438d81:	cmp    eax,0x4617e0
  438d86:	jbe    0x438d8d
  438d88:	call   0x43a7d2
  438d8d:	cmp    DWORD PTR ds:0x460574,0x0
  438d94:	jne    0x438dba
  438d96:	mov    ecx,DWORD PTR ds:0x45f830
  438d9c:	movzx  eax,bl
  438d9f:	sub    ecx,eax
  438da1:	call   0x439c80
  438da6:	mov    eax,ds:0x4613d8
  438dab:	mov    BYTE PTR [eax],0x20
  438dae:	inc    eax
  438daf:	inc    DWORD PTR ds:0x460574
  438db5:	mov    ds:0x4613d8,eax
  438dba:	and    DWORD PTR [ebp+0x8],0x0
  438dbe:	movzx  edx,bl
  438dc1:	push   0x0
  438dc3:	lea    ecx,[ebp+0x8]
  438dc6:	call   0x439aa7
  438dcb:	pop    ebx
  438dcc:	pop    ebp
  438dcd:	ret    0x4
  438dd0:	push   ebx
  438dd1:	xor    ebx,ebx
  438dd3:	cmp    BYTE PTR ds:0x4613bc,bl
  438dd9:	je     0x438deb
  438ddb:	mov    DWORD PTR ds:0x4613dc,0x1
  438de5:	mov    BYTE PTR ds:0x4613bc,bl
  438deb:	cmp    BYTE PTR ds:0x45f83b,bl
  438df1:	jne    0x438ec4
  438df7:	push   esi
  438df8:	movzx  esi,BYTE PTR ds:0x44df09
  438dff:	test   esi,esi
  438e01:	je     0x438ec3
  438e07:	mov    al,ds:0x44df08
  438e0c:	and    al,0x1f
  438e0e:	push   edi
  438e0f:	movzx  edi,al
  438e12:	mov    eax,ds:0x4613d8
  438e17:	neg    edi
  438e19:	sbb    edi,edi
  438e1b:	lea    ecx,[esi+0x44df0a]
  438e21:	add    eax,0x1c
  438e24:	and    edi,ecx
  438e26:	cmp    eax,0x4617e0
  438e2b:	jbe    0x438e32
  438e2d:	call   0x43a7d2
  438e32:	cmp    DWORD PTR ds:0x460574,ebx
  438e38:	jne    0x438e8d
  438e3a:	cmp    DWORD PTR ds:0x463308,ebx
  438e40:	je     0x438e6c
  438e42:	mov    eax,ds:0x45f830
  438e47:	mov    ecx,eax
  438e49:	sub    ecx,esi
  438e4b:	cmp    ecx,0x7fffffff
  438e51:	jbe    0x438e74
  438e53:	mov    ecx,esi
  438e55:	sub    ecx,eax
  438e57:	mov    BYTE PTR ds:0x4613bf,0x2d
  438e5e:	call   0x439c80
  438e63:	mov    BYTE PTR ds:0x4613bf,0x20
  438e6a:	jmp    0x438e79
  438e6c:	mov    ecx,DWORD PTR ds:0x45f830
  438e72:	sub    ecx,esi
  438e74:	call   0x439c80
  438e79:	mov    eax,ds:0x4613d8
  438e7e:	mov    BYTE PTR [eax],0x20
  438e81:	inc    eax
  438e82:	inc    DWORD PTR ds:0x460574
  438e88:	mov    ds:0x4613d8,eax
  438e8d:	cmp    BYTE PTR ds:0x45f693,0x1
  438e94:	jne    0x438eb5
  438e96:	cmp    esi,0x1
  438e99:	je     0x438eb5
  438e9b:	mov    edi,0x44df0a
  438ea0:	jmp    0x438eaf
  438ea2:	xor    edx,edx
  438ea4:	push   ebx
  438ea5:	inc    edx
  438ea6:	mov    ecx,edi
  438ea8:	call   0x439aa7
  438ead:	inc    edi
  438eae:	dec    esi
  438eaf:	test   esi,esi
  438eb1:	jg     0x438ea2
  438eb3:	jmp    0x438ec2
  438eb5:	push   edi
  438eb6:	mov    edx,esi
  438eb8:	mov    ecx,0x44df0a
  438ebd:	call   0x439aa7
  438ec2:	pop    edi
  438ec3:	pop    esi
  438ec4:	mov    BYTE PTR ds:0x45f693,bl
  438eca:	pop    ebx
  438ecb:	ret    0x4
  438ece:	push   ebx
  438ecf:	push   esi
  438ed0:	mov    esi,DWORD PTR ds:0x4613d8
  438ed6:	push   edi
  438ed7:	mov    edi,edx
  438ed9:	mov    eax,edi
  438edb:	imul   eax,eax,0x3
  438ede:	add    eax,esi
  438ee0:	mov    ebx,ecx
  438ee2:	cmp    eax,0x4617e0
  438ee7:	jbe    0x438ef4
  438ee9:	call   0x43a7d2
  438eee:	mov    esi,DWORD PTR ds:0x4613d8
  438ef4:	mov    edx,ebx
  438ef6:	mov    ecx,edi
  438ef8:	call   0x439cfe
  438efd:	mov    eax,ds:0x4613d8
  438f02:	mov    BYTE PTR [esi],0x30
  438f05:	pop    edi
  438f06:	mov    BYTE PTR [eax],0x68
  438f09:	inc    eax
  438f0a:	inc    DWORD PTR ds:0x460574
  438f10:	pop    esi
  438f11:	mov    ds:0x4613d8,eax
  438f16:	pop    ebx
  438f17:	ret    
  438f18:	mov    eax,DWORD PTR [ecx+0x4]
  438f1b:	and    eax,0x3
  438f1e:	dec    eax
  438f1f:	jne    0x438f31
  438f21:	movzx  ecx,BYTE PTR [ecx+0x14]
  438f25:	mov    ecx,DWORD PTR [ecx*4+0x405970]
  438f2c:	jmp    0x43a78c
  438f31:	ret    
  438f32:	mov    edx,DWORD PTR [ecx+0x18]
  438f35:	test   edx,edx
  438f37:	je     0x438f9f
  438f39:	movzx  eax,WORD PTR [edx+0xe]
  438f3d:	test   al,0x1
  438f3f:	je     0x438f53
  438f41:	shr    eax,0x6
  438f44:	and    eax,0x1
  438f47:	mov    ecx,DWORD PTR [eax*4+0x404dd8]
  438f4e:	jmp    0x43a78c
  438f53:	push   esi
  438f54:	test   al,0x2
  438f56:	je     0x438f79
  438f58:	mov    esi,DWORD PTR [edx+0x10]
  438f5b:	test   esi,esi
  438f5d:	je     0x438f79
  438f5f:	shr    esi,1
  438f61:	test   al,al
  438f63:	jns    0x438f6f
  438f65:	mov    ecx,0x41f5a4
  438f6a:	call   0x43a78c
  438f6f:	mov    ecx,DWORD PTR [esi*4+0x404dd4]
  438f76:	pop    esi
  438f77:	jmp    0x438f4e
  438f79:	test   al,0x4
  438f7b:	je     0x438f8c
  438f7d:	shr    eax,0x6
  438f80:	and    eax,0x1
  438f83:	mov    ecx,DWORD PTR [eax*4+0x404dec]
  438f8a:	jmp    0x438f76
  438f8c:	pop    esi
  438f8d:	test   al,0x8
  438f8f:	je     0x438f9f
  438f91:	mov    edx,DWORD PTR [edx+0x14]
  438f94:	movzx  ecx,BYTE PTR [edx+0x5]
  438f98:	sub    edx,ecx
  438f9a:	jmp    0x43a48e
  438f9f:	ret    
  438fa0:	push   esi
  438fa1:	mov    esi,ecx
  438fa3:	push   edi
  438fa4:	mov    ecx,DWORD PTR [esi+0x10]
  438fa7:	test   ecx,ecx
  438fa9:	je     0x438fb3
  438fab:	mov    eax,DWORD PTR [esi+0x18]
  438fae:	cmp    eax,DWORD PTR [ecx+0x24]
  438fb1:	je     0x438fe0
  438fb3:	mov    ecx,esi
  438fb5:	call   0x438f32
  438fba:	mov    eax,DWORD PTR [esi+0x18]
  438fbd:	test   eax,eax
  438fbf:	je     0x438fd3
  438fc1:	test   BYTE PTR [eax+0xe],0x10
  438fc5:	jne    0x438fd3
  438fc7:	mov    ecx,0x41f5a8
  438fcc:	call   0x43a78c
  438fd1:	jmp    0x438fe0
  438fd3:	xor    ecx,ecx
  438fd5:	mov    edx,0x41f5b0
  438fda:	inc    ecx
  438fdb:	call   0x43a48e
  438fe0:	mov    ecx,esi
  438fe2:	call   0x438f18
  438fe7:	test   BYTE PTR [esi+0x4],0x3
  438feb:	je     0x438ff7
  438fed:	mov    ecx,0x41f5b4
  438ff2:	call   0x43a78c
  438ff7:	mov    edx,DWORD PTR [esi+0x10]
  438ffa:	test   edx,edx
  438ffc:	je     0x43902c
  438ffe:	test   BYTE PTR [edx+0x2c],0x40
  439002:	je     0x439021
  439004:	mov    ecx,0x41f5b8
  439009:	call   0x43a78c
  43900e:	mov    ecx,esi
  439010:	call   0x438f32
  439015:	mov    ecx,0x41f5c0
  43901a:	call   0x43a78c
  43901f:	jmp    0x43902c
  439021:	movzx  ecx,BYTE PTR [edx+0x5]
  439025:	sub    edx,ecx
  439027:	call   0x43a48e
  43902c:	movzx  eax,WORD PTR [esi+0x2]
  439030:	test   eax,0x1800
  439035:	je     0x4390e0
  43903b:	push   ebx
  43903c:	mov    ecx,0x41f5c4
  439041:	call   0x43a78c
  439046:	movzx  ecx,WORD PTR [esi+0x2]
  43904a:	mov    ebx,0x800
  43904f:	push   0xf
  439051:	pop    edi
  439052:	test   ebx,ecx
  439054:	je     0x439072
  439056:	and    ecx,edi
  439058:	test   DWORD PTR [esi+0x4],ebx
  43905b:	je     0x439066
  43905d:	mov    ecx,DWORD PTR [ecx*4+0x405fc0]
  439064:	jmp    0x43906d
  439066:	mov    ecx,DWORD PTR [ecx*4+0x406000]
  43906d:	call   0x43a78c
  439072:	mov    eax,0x1000
  439077:	test   WORD PTR [esi+0x2],ax
  43907b:	je     0x4390d5
  43907d:	mov    ecx,0x41f5c8
  439082:	call   0x43a78c
  439087:	movzx  ecx,WORD PTR [esi+0x2]
  43908b:	shr    ecx,0x4
  43908e:	and    ecx,edi
  439090:	test   DWORD PTR [esi+0x4],ebx
  439093:	je     0x43909e
  439095:	mov    ecx,DWORD PTR [ecx*4+0x405fc0]
  43909c:	jmp    0x4390a5
  43909e:	mov    ecx,DWORD PTR [ecx*4+0x406000]
  4390a5:	call   0x43a78c
  4390aa:	test   DWORD PTR [esi+0x4],0x600
  4390b1:	je     0x4390d5
  4390b3:	mov    ecx,0x41f590
  4390b8:	call   0x43a78c
  4390bd:	mov    edx,DWORD PTR [esi+0x4]
  4390c0:	shr    edx,0x9
  4390c3:	and    edx,0x3
  4390c6:	xor    ecx,ecx
  4390c8:	mov    edx,DWORD PTR [edx*4+0x404bc0]
  4390cf:	inc    ecx
  4390d0:	call   0x43a48e
  4390d5:	mov    ecx,0x41f5cc
  4390da:	call   0x43a78c
  4390df:	pop    ebx
  4390e0:	lea    edi,[esi+0x8]
  4390e3:	mov    eax,DWORD PTR [edi]
  4390e5:	or     eax,DWORD PTR [edi+0x4]
  4390e8:	je     0x439115
  4390ea:	mov    ecx,0x41f5c8
  4390ef:	call   0x43a78c
  4390f4:	mov    al,BYTE PTR [esi+0x1]
  4390f7:	mov    ecx,edi
  4390f9:	cmp    al,0x2
  4390fb:	jne    0x439107
  4390fd:	push   0x2
  4390ff:	pop    edx
  439100:	pop    edi
  439101:	pop    esi
  439102:	jmp    0x438ece
  439107:	cmp    al,0x1
  439109:	jne    0x439110
  43910b:	xor    edx,edx
  43910d:	inc    edx
  43910e:	jmp    0x439100
  439110:	push   0x4
  439112:	pop    edx
  439113:	jmp    0x439100
  439115:	pop    edi
  439116:	pop    esi
  439117:	ret    
  439118:	push   esi
  439119:	mov    esi,ecx
  43911b:	mov    ecx,DWORD PTR [esi+0x10]
  43911e:	test   ecx,ecx
  439120:	je     0x43912a
  439122:	mov    eax,DWORD PTR [esi+0x18]
  439125:	cmp    eax,DWORD PTR [ecx+0x24]
  439128:	je     0x439148
  43912a:	mov    ecx,esi
  43912c:	call   0x438f32
  439131:	mov    eax,DWORD PTR [esi+0x18]
  439134:	test   eax,eax
  439136:	je     0x439148
  439138:	test   BYTE PTR [eax+0xe],0x10
  43913c:	jne    0x439148
  43913e:	mov    ecx,0x41f5a8
  439143:	call   0x43a78c
  439148:	test   DWORD PTR [esi+0x4],0x1000
  43914f:	je     0x43915b
  439151:	mov    ecx,0x41f5d0
  439156:	call   0x43a78c
  43915b:	test   BYTE PTR [esi+0x4],0x3
  43915f:	je     0x439172
  439161:	mov    ecx,esi
  439163:	call   0x438f18
  439168:	mov    ecx,0x41f5d8
  43916d:	call   0x43a78c
  439172:	mov    edx,DWORD PTR [esi+0x10]
  439175:	test   edx,edx
  439177:	je     0x439196
  439179:	test   BYTE PTR [edx+0x2c],0x40
  43917d:	je     0x43918b
  43917f:	mov    ecx,0x41f5dc
  439184:	call   0x43a78c
  439189:	jmp    0x439196
  43918b:	movzx  ecx,BYTE PTR [edx+0x5]
  43918f:	sub    edx,ecx
  439191:	call   0x43a48e
  439196:	cmp    DWORD PTR [esi+0x10],0x0
  43919a:	je     0x4391a4
  43919c:	mov    eax,DWORD PTR [esi+0x8]
  43919f:	or     eax,DWORD PTR [esi+0xc]
  4391a2:	je     0x4391e6
  4391a4:	test   DWORD PTR [esi+0x4],0x8000
  4391ab:	mov    ecx,0x41f58c
  4391b0:	jne    0x4391b7
  4391b2:	mov    ecx,0x41f5c8
  4391b7:	call   0x43a78c
  4391bc:	cmp    BYTE PTR [esi+0x1],0x0
  4391c0:	jne    0x4391c6
  4391c2:	mov    BYTE PTR [esi+0x1],0x4
  4391c6:	mov    al,BYTE PTR [esi+0x1]
  4391c9:	lea    ecx,[esi+0x8]
  4391cc:	cmp    al,0x2
  4391ce:	jne    0x4391d9
  4391d0:	push   0x2
  4391d2:	pop    edx
  4391d3:	pop    esi
  4391d4:	jmp    0x438ece
  4391d9:	cmp    al,0x1
  4391db:	jne    0x4391e2
  4391dd:	xor    edx,edx
  4391df:	inc    edx
  4391e0:	jmp    0x4391d3
  4391e2:	push   0x4
  4391e4:	jmp    0x4391d2
  4391e6:	pop    esi
  4391e7:	ret    
  4391e8:	push   ebp
  4391e9:	mov    ebp,esp
  4391eb:	push   ecx
  4391ec:	push   ebx
  4391ed:	push   esi
  4391ee:	push   edi
  4391ef:	mov    edi,ecx
  4391f1:	movzx  eax,BYTE PTR [edi]
  4391f4:	add    eax,edi
  4391f6:	inc    edi
  4391f7:	cmp    BYTE PTR [eax-0x1],0x2
  4391fb:	mov    DWORD PTR [ebp-0x4],eax
  4391fe:	jne    0x4392e4
  439204:	call   0x431f11
  439209:	mov    ebx,eax
  43920b:	push   0x8
  43920d:	mov    esi,edi
  43920f:	pop    ecx
  439210:	mov    edi,ebx
  439212:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439214:	mov    cl,BYTE PTR [ebx]
  439216:	mov    al,cl
  439218:	cmp    al,0x1
  43921a:	je     0x4392c7
  439220:	cmp    al,0x2
  439222:	je     0x4392be
  439228:	cmp    al,0x3
  43922a:	je     0x4392b5
  439230:	cmp    al,0x6
  439232:	je     0x439288
  439234:	cmp    al,0x7
  439236:	je     0x439262
  439238:	sub    al,0x8
  43923a:	cmp    al,0x1
  43923c:	ja     0x4392ce
  439242:	movzx  ecx,cl
  439245:	mov    ecx,DWORD PTR [ecx*4+0x405f98]
  43924c:	call   0x43a78c
  439251:	movzx  ecx,WORD PTR [ebx+0x2]
  439255:	and    ecx,0xffff000f
  43925b:	call   0x439d91
  439260:	jmp    0x4392ce
  439262:	movzx  edx,WORD PTR [ebx+0x2]
  439266:	mov    ecx,edx
  439268:	and    ecx,0x2000
  43926e:	neg    ecx
  439270:	sbb    ecx,ecx
  439272:	and    ecx,0xc
  439275:	and    edx,0xf
  439278:	add    ecx,edx
  43927a:	mov    ecx,DWORD PTR [ecx*4+0x406080]
  439281:	call   0x43a78c
  439286:	jmp    0x4392ce
  439288:	movzx  ecx,WORD PTR [ebx+0x2]
  43928c:	mov    al,BYTE PTR [ebx+0x1]
  43928f:	and    ecx,0xf
  439292:	cmp    al,0x4
  439294:	jne    0x43929f
  439296:	mov    ecx,DWORD PTR [ecx*4+0x406000]
  43929d:	jmp    0x439281
  43929f:	cmp    al,0x8
  4392a1:	jne    0x4392ac
  4392a3:	mov    ecx,DWORD PTR [ecx*4+0x405fc0]
  4392aa:	jmp    0x439281
  4392ac:	mov    ecx,DWORD PTR [ecx*4+0x406040]
  4392b3:	jmp    0x439281
  4392b5:	mov    ecx,ebx
  4392b7:	call   0x438f18
  4392bc:	jmp    0x4392ce
  4392be:	mov    ecx,ebx
  4392c0:	call   0x439118
  4392c5:	jmp    0x4392ce
  4392c7:	mov    ecx,ebx
  4392c9:	call   0x438fa0
  4392ce:	mov    ecx,DWORD PTR ds:0x45f83c
  4392d4:	mov    eax,DWORD PTR [ebp-0x4]
  4392d7:	mov    DWORD PTR [ebx],ecx
  4392d9:	mov    DWORD PTR ds:0x45f83c,ebx
  4392df:	jmp    0x4394ad
  4392e4:	mov    esi,DWORD PTR ds:0x4613d8
  4392ea:	movzx  eax,BYTE PTR [edi]
  4392ed:	inc    edi
  4392ee:	cmp    eax,0xa
  4392f1:	jg     0x4393cf
  4392f7:	je     0x439399
  4392fd:	test   eax,eax
  4392ff:	js     0x439448
  439305:	cmp    eax,0x1
  439308:	jle    0x43949e
  43930e:	cmp    eax,0x3
  439311:	je     0x43938a
  439313:	cmp    eax,0x5
  439316:	je     0x43936c
  439318:	cmp    eax,0x6
  43931b:	je     0x43934e
  43931d:	cmp    eax,0x7
  439320:	jne    0x439448
  439326:	movzx  esi,BYTE PTR [edi]
  439329:	mov    ecx,0x41f5e0
  43932e:	inc    edi
  43932f:	call   0x43a78c
  439334:	mov    edx,edi
  439336:	mov    ecx,esi
  439338:	call   0x43a48e
  43933d:	mov    ecx,0x41f5e0
  439342:	call   0x43a78c
  439347:	add    edi,esi
  439349:	jmp    0x43942b
  43934e:	movzx  esi,BYTE PTR [edi]
  439351:	mov    ecx,0x41f5e4
  439356:	inc    edi
  439357:	call   0x43a78c
  43935c:	mov    edx,edi
  43935e:	mov    ecx,esi
  439360:	call   0x43a48e
  439365:	mov    ecx,0x41f5e8
  43936a:	jmp    0x439342
  43936c:	movzx  esi,BYTE PTR [edi]
  43936f:	mov    ecx,0x41f5ec
  439374:	inc    edi
  439375:	call   0x43a78c
  43937a:	mov    edx,edi
  43937c:	mov    ecx,esi
  43937e:	call   0x43a48e
  439383:	mov    ecx,0x41f5f0
  439388:	jmp    0x439342
  43938a:	mov    ecx,0x41f5c4
  43938f:	call   0x43a78c
  439394:	jmp    0x4392e4
  439399:	movzx  ebx,BYTE PTR [edi]
  43939c:	inc    edi
  43939d:	lea    eax,[esi+ebx*1]
  4393a0:	cmp    eax,0x4617e0
  4393a5:	jbe    0x4393b2
  4393a7:	call   0x43a7d2
  4393ac:	mov    esi,DWORD PTR ds:0x4613d8
  4393b2:	test   ebx,ebx
  4393b4:	je     0x439489
  4393ba:	movzx  eax,BYTE PTR [edi]
  4393bd:	mov    al,BYTE PTR [eax+0x449270]
  4393c3:	mov    BYTE PTR [esi],al
  4393c5:	inc    esi
  4393c6:	inc    edi
  4393c7:	dec    ebx
  4393c8:	jne    0x4393ba
  4393ca:	jmp    0x439489
  4393cf:	cmp    eax,0xb
  4393d2:	jl     0x439448
  4393d4:	cmp    eax,0xc
  4393d7:	jle    0x439433
  4393d9:	cmp    eax,0xd
  4393dc:	je     0x439401
  4393de:	cmp    eax,0xe
  4393e1:	je     0x439433
  4393e3:	cmp    eax,0x25
  4393e6:	jne    0x439448
  4393e8:	dec    esi
  4393e9:	dec    DWORD PTR ds:0x460574
  4393ef:	mov    ecx,0x41f5cc
  4393f4:	mov    DWORD PTR ds:0x4613d8,esi
  4393fa:	call   0x43a78c
  4393ff:	jmp    0x43942b
  439401:	mov    ecx,edi
  439403:	call   0x445afc
  439408:	test   eax,eax
  43940a:	je     0x439416
  43940c:	movzx  ecx,BYTE PTR [eax+0x5]
  439410:	sub    eax,ecx
  439412:	mov    edx,eax
  439414:	jmp    0x43941d
  439416:	movzx  ecx,BYTE PTR [edi+0x4]
  43941a:	lea    edx,[edi+0x5]
  43941d:	call   0x43a48e
  439422:	movzx  eax,BYTE PTR [edi+0x4]
  439426:	add    edi,0x5
  439429:	add    edi,eax
  43942b:	mov    esi,DWORD PTR ds:0x4613d8
  439431:	jmp    0x439489
  439433:	movzx  esi,BYTE PTR [edi-0x1]
  439437:	sub    esi,0xa
  43943a:	mov    edx,esi
  43943c:	mov    ecx,edi
  43943e:	call   0x438ece
  439443:	jmp    0x439347
  439448:	lea    eax,[esi+0x20]
  43944b:	cmp    eax,0x4617e0
  439450:	jbe    0x43945d
  439452:	call   0x43a7d2
  439457:	mov    esi,DWORD PTR ds:0x4613d8
  43945d:	movzx  eax,BYTE PTR [edi-0x1]
  439461:	mov    ecx,DWORD PTR [eax*4+0x406528]
  439468:	mov    ebx,ecx
  43946a:	lea    edx,[ebx+0x1]
  43946d:	mov    al,BYTE PTR [ebx]
  43946f:	inc    ebx
  439470:	test   al,al
  439472:	jne    0x43946d
  439474:	sub    ebx,edx
  439476:	push   ebx
  439477:	push   ecx
  439478:	push   esi
  439479:	call   0x447646
  43947e:	add    esp,0xc
  439481:	add    esi,ebx
  439483:	add    DWORD PTR ds:0x460574,ebx
  439489:	mov    BYTE PTR [esi],0x20
  43948c:	inc    esi
  43948d:	inc    DWORD PTR ds:0x460574
  439493:	mov    DWORD PTR ds:0x4613d8,esi
  439499:	jmp    0x4392ea
  43949e:	dec    esi
  43949f:	dec    DWORD PTR ds:0x460574
  4394a5:	mov    DWORD PTR ds:0x4613d8,esi
  4394ab:	mov    eax,edi
  4394ad:	pop    edi
  4394ae:	pop    esi
  4394af:	pop    ebx
  4394b0:	leave  
  4394b1:	ret    
  4394b2:	push   ebp
  4394b3:	mov    ebp,esp
  4394b5:	push   ecx
  4394b6:	push   ebx
  4394b7:	push   esi
  4394b8:	mov    ebx,ecx
  4394ba:	push   0x1b
  4394bc:	pop    ecx
  4394bd:	mov    DWORD PTR [ebp-0x4],ebx
  4394c0:	call   0x439dfb
  4394c5:	mov    ecx,0x41f590
  4394ca:	call   0x43a78c
  4394cf:	push   0x24
  4394d1:	pop    ecx
  4394d2:	call   0x439dfb
  4394d7:	movzx  edx,WORD PTR [ebx+0x3]
  4394db:	mov    esi,0x405b48
  4394e0:	mov    eax,0xf7
  4394e5:	cmp    ax,dx
  4394e8:	je     0x4394f5
  4394ea:	add    esi,0x2
  4394ed:	movzx  eax,WORD PTR [esi]
  4394f0:	test   ax,ax
  4394f3:	jne    0x4394e5
  4394f5:	push   edi
  4394f6:	mov    edi,DWORD PTR ds:0x4613d8
  4394fc:	lea    eax,[edi+0x20]
  4394ff:	cmp    eax,0x4617e0
  439504:	jbe    0x439511
  439506:	call   0x43a7d2
  43950b:	mov    edi,DWORD PTR ds:0x4613d8
  439511:	sub    esi,0x405b48
  439517:	sar    esi,1
  439519:	mov    ecx,DWORD PTR [esi*4+0x4068f8]
  439520:	mov    esi,ecx
  439522:	lea    edx,[esi+0x1]
  439525:	mov    al,BYTE PTR [esi]
  439527:	inc    esi
  439528:	test   al,al
  43952a:	jne    0x439525
  43952c:	sub    esi,edx
  43952e:	push   esi
  43952f:	push   ecx
  439530:	push   edi
  439531:	call   0x447646
  439536:	mov    ecx,DWORD PTR ds:0x460574
  43953c:	inc    ecx
  43953d:	add    ecx,esi
  43953f:	mov    eax,ecx
  439541:	mov    DWORD PTR ds:0x460574,ecx
  439547:	and    eax,0x3
  43954a:	sub    ecx,eax
  43954c:	add    edi,esi
  43954e:	add    esp,0xc
  439551:	add    ecx,0x4
  439554:	mov    DWORD PTR ds:0x4613d8,edi
  43955a:	call   0x439dfb
  43955f:	mov    bl,BYTE PTR [ebx+0x5]
  439562:	mov    esi,DWORD PTR [ebp-0x4]
  439565:	pop    edi
  439566:	lea    esi,[esi+0x6]
  439569:	and    bl,0x7
  43956c:	jbe    0x439587
  43956e:	mov    ecx,esi
  439570:	call   0x4391e8
  439575:	mov    esi,eax
  439577:	dec    bl
  439579:	je     0x439587
  43957b:	mov    ecx,0x41f5f4
  439580:	call   0x43a78c
  439585:	jmp    0x43956e
  439587:	mov    ecx,0x41f5f8
  43958c:	call   0x43a78c
  439591:	and    DWORD PTR ds:0x460574,0x0
  439598:	pop    esi
  439599:	pop    ebx
  43959a:	leave  
  43959b:	ret    
  43959c:	push   ebp
  43959d:	mov    ebp,esp
  43959f:	and    esp,0xfffffff8
  4395a2:	sub    esp,0x14
  4395a5:	push   ebx
  4395a6:	mov    ebx,ecx
  4395a8:	xor    al,al
  4395aa:	push   esi
  4395ab:	push   edi
  4395ac:	mov    DWORD PTR [esp+0x18],edx
  4395b0:	mov    DWORD PTR [esp+0x1c],ebx
  4395b4:	mov    BYTE PTR [esp+0xd],al
  4395b8:	mov    BYTE PTR [esp+0xf],al
  4395bc:	test   bl,bl
  4395be:	jns    0x4396b3
  4395c4:	mov    esi,DWORD PTR [ebp+0x8]
  4395c7:	mov    al,BYTE PTR [esi]
  4395c9:	mov    BYTE PTR [esp+0xf],al
  4395cd:	mov    BYTE PTR [esp+0xe],al
  4395d1:	mov    eax,ds:0x460574
  4395d6:	inc    esi
  4395d7:	add    eax,0x3
  4395da:	mov    DWORD PTR [esp+0x14],esi
  4395de:	cmp    eax,0x1c
  4395e1:	jb     0x439605
  4395e3:	call   0x439ef0
  4395e8:	movzx  ecx,BYTE PTR ds:0x4613bd
  4395ef:	mov    eax,ds:0x4613b8
  4395f4:	neg    ecx
  4395f6:	sbb    ecx,ecx
  4395f8:	and    ecx,0x5
  4395fb:	add    eax,0xa
  4395fe:	add    ecx,eax
  439600:	call   0x439dfb
  439605:	lea    ecx,[esp+0xe]
  439609:	call   0x439ca8
  43960e:	mov    cl,BYTE PTR [esp+0xf]
  439612:	movzx  eax,cl
  439615:	mov    edx,0xc0
  43961a:	and    eax,edx
  43961c:	sub    eax,0x0
  43961f:	je     0x439640
  439621:	sub    eax,0x40
  439624:	je     0x43963b
  439626:	sub    eax,0x40
  439629:	je     0x439636
  43962b:	sub    eax,0x40
  43962e:	je     0x439648
  439630:	mov    eax,DWORD PTR [esp+0x1c]
  439634:	jmp    0x43964a
  439636:	push   0x4
  439638:	pop    eax
  439639:	jmp    0x43964a
  43963b:	xor    eax,eax
  43963d:	inc    eax
  43963e:	jmp    0x43964a
  439640:	mov    al,cl
  439642:	and    al,0x7
  439644:	cmp    al,0x5
  439646:	je     0x439636
  439648:	xor    eax,eax
  43964a:	mov    ch,cl
  43964c:	and    ch,dl
  43964e:	mov    DWORD PTR [esp+0x10],eax
  439652:	mov    BYTE PTR [esp+0xf],ch
  439656:	cmp    ch,dl
  439658:	je     0x4396ab
  43965a:	and    cl,0x7
  43965d:	cmp    cl,0x4
  439660:	jne    0x4396ab
  439662:	mov    eax,ds:0x460574
  439667:	add    eax,0x3
  43966a:	cmp    eax,0x1c
  43966d:	jb     0x439691
  43966f:	call   0x439ef0
  439674:	movzx  ecx,BYTE PTR ds:0x4613bd
  43967b:	mov    eax,ds:0x4613b8
  439680:	neg    ecx
  439682:	sbb    ecx,ecx
  439684:	and    ecx,0x5
  439687:	add    ecx,0xa
  43968a:	add    ecx,eax
  43968c:	call   0x439dfb
  439691:	mov    al,BYTE PTR [esi]
  439693:	inc    esi
  439694:	lea    ecx,[esp+0xe]
  439698:	mov    BYTE PTR [esp+0xd],al
  43969c:	mov    BYTE PTR [esp+0xe],al
  4396a0:	mov    DWORD PTR [esp+0x14],esi
  4396a4:	call   0x439ca8
  4396a9:	jmp    0x43970a
  4396ab:	xor    al,al
  4396ad:	mov    BYTE PTR [esp+0xd],al
  4396b1:	jmp    0x43970a
  4396b3:	mov    eax,ebx
  4396b5:	shr    eax,0x8
  4396b8:	and    eax,0xf
  4396bb:	mov    DWORD PTR [esp+0x10],eax
  4396bf:	cmp    eax,0x3
  4396c2:	jne    0x4396d5
  4396c4:	xor    eax,eax
  4396c6:	cmp    BYTE PTR [ebp+0x18],al
  4396c9:	setne  al
  4396cc:	lea    eax,[eax*2+0x2]
  4396d3:	jmp    0x4396ff
  4396d5:	cmp    eax,0x5
  4396d8:	jne    0x4396eb
  4396da:	xor    eax,eax
  4396dc:	cmp    BYTE PTR [ebp+0x18],al
  4396df:	setne  al
  4396e2:	lea    eax,[eax*2+0x4]
  4396e9:	jmp    0x4396ff
  4396eb:	cmp    eax,0x7
  4396ee:	jne    0x439703
  4396f0:	xor    eax,eax
  4396f2:	cmp    BYTE PTR [ebp+0x10],al
  4396f5:	sete   al
  4396f8:	lea    eax,[eax*4+0x4]
  4396ff:	mov    DWORD PTR [esp+0x10],eax
  439703:	mov    esi,DWORD PTR [ebp+0x8]
  439706:	mov    DWORD PTR [esp+0x14],esi
  43970a:	mov    ecx,DWORD PTR [esp+0x18]
  43970e:	mov    edx,DWORD PTR [ebp+0xc]
  439711:	test   BYTE PTR [ecx],0x1f
  439714:	mov    edi,edx
  439716:	je     0x439730
  439718:	movzx  ecx,BYTE PTR [edx+0x1]
  43971c:	mov    eax,esi
  43971e:	sub    eax,DWORD PTR [esp+0x18]
  439722:	and    ecx,0xf
  439725:	sub    eax,0x2
  439728:	cmp    eax,ecx
  43972a:	mov    ecx,DWORD PTR [esp+0x18]
  43972e:	jle    0x439732
  439730:	xor    edi,edi
  439732:	mov    ebx,DWORD PTR [esp+0x10]
  439736:	mov    al,BYTE PTR [esp+0xd]
  43973a:	test   ebx,ebx
  43973c:	je     0x4397dd
  439742:	cmp    esi,edx
  439744:	jae    0x4397dd
  43974a:	test   edi,edi
  43974c:	je     0x4397cb
  43974e:	mov    cl,BYTE PTR [ecx]
  439750:	and    cl,0x1f
  439753:	test   BYTE PTR [edi],0x80
  439756:	mov    BYTE PTR [esp+0xe],cl
  43975a:	je     0x439792
  43975c:	mov    dl,BYTE PTR [edi+0x1]
  43975f:	mov    esi,DWORD PTR [esp+0x18]
  439763:	movzx  eax,dl
  439766:	add    esi,0x2
  439769:	and    eax,0xf
  43976c:	add    eax,esi
  43976e:	mov    esi,DWORD PTR [esp+0x14]
  439772:	cmp    eax,esi
  439774:	jne    0x439792
  439776:	cmp    cl,0x2
  439779:	jb     0x439790
  43977b:	test   dl,0x40
  43977e:	je     0x439785
  439780:	add    edi,0x6
  439783:	jmp    0x439788
  439785:	add    edi,0xa
  439788:	dec    cl
  43978a:	mov    BYTE PTR [esp+0xe],cl
  43978e:	jmp    0x439792
  439790:	xor    edi,edi
  439792:	test   edi,edi
  439794:	je     0x4397cb
  439796:	movzx  eax,BYTE PTR [edi+0x1]
  43979a:	mov    ecx,DWORD PTR [esp+0x18]
  43979e:	and    eax,0xf
  4397a1:	add    ecx,0x2
  4397a4:	add    eax,ecx
  4397a6:	cmp    eax,esi
  4397a8:	jne    0x4397cb
  4397aa:	push   edi
  4397ab:	mov    edx,ebx
  4397ad:	mov    ecx,esi
  4397af:	call   0x439aa7
  4397b4:	cmp    BYTE PTR [esp+0xe],0x2
  4397b9:	mov    al,BYTE PTR [esp+0xd]
  4397bd:	mov    edx,DWORD PTR [ebp+0xc]
  4397c0:	jae    0x4397c6
  4397c2:	xor    edi,edi
  4397c4:	jmp    0x4397dd
  4397c6:	add    edi,0x6
  4397c9:	jmp    0x4397dd
  4397cb:	push   0x0
  4397cd:	mov    edx,ebx
  4397cf:	mov    ecx,esi
  4397d1:	call   0x439aa7
  4397d6:	mov    edx,DWORD PTR [ebp+0xc]
  4397d9:	mov    al,BYTE PTR [esp+0xd]
  4397dd:	add    esi,ebx
  4397df:	and    al,0x7
  4397e1:	mov    DWORD PTR [esp+0x14],esi
  4397e5:	cmp    al,0x5
  4397e7:	jne    0x439809
  4397e9:	mov    ecx,DWORD PTR [esp+0x18]
  4397ed:	xor    ebx,ebx
  4397ef:	cmp    BYTE PTR [esp+0xf],0x40
  4397f4:	setne  bl
  4397f7:	dec    ebx
  4397f8:	and    ebx,0xfffffffd
  4397fb:	add    ebx,0x4
  4397fe:	xor    al,al
  439800:	mov    BYTE PTR [esp+0xd],al
  439804:	jmp    0x43973a
  439809:	mov    ebx,DWORD PTR [esp+0x1c]
  43980d:	and    ebx,0xf
  439810:	je     0x43985c
  439812:	cmp    esi,edx
  439814:	jae    0x43985c
  439816:	cmp    ebx,0x3
  439819:	je     0x439841
  43981b:	cmp    ebx,0x5
  43981e:	jne    0x439831
  439820:	xor    ebx,ebx
  439822:	cmp    BYTE PTR [ebp+0x18],bl
  439825:	setne  bl
  439828:	lea    ebx,[ebx*2+0x4]
  43982f:	jmp    0x439850
  439831:	cmp    ebx,0x9
  439834:	jne    0x439850
  439836:	cmp    BYTE PTR [ebp+0x14],0x0
  43983a:	je     0x439841
  43983c:	push   0x8
  43983e:	pop    ebx
  43983f:	jmp    0x439850
  439841:	xor    ebx,ebx
  439843:	cmp    BYTE PTR [ebp+0x18],bl
  439846:	setne  bl
  439849:	lea    ebx,[ebx*2+0x2]
  439850:	push   edi
  439851:	mov    edx,ebx
  439853:	mov    ecx,esi
  439855:	call   0x439aa7
  43985a:	add    esi,ebx
  43985c:	pop    edi
  43985d:	mov    eax,esi
  43985f:	pop    esi
  439860:	pop    ebx
  439861:	mov    esp,ebp
  439863:	pop    ebp
  439864:	ret    0x14
  439867:	push   ebp
  439868:	mov    ebp,esp
  43986a:	sub    esp,0x18
  43986d:	cmp    BYTE PTR ds:0x45f83b,0x0
  439874:	jne    0x439aa3
  43987a:	push   ebx
  43987b:	xor    ebx,ebx
  43987d:	cmp    BYTE PTR ds:0x4613aa,bl
  439883:	je     0x439899
  439885:	cmp    BYTE PTR ds:0x44f54f,bl
  43988b:	je     0x439aa2
  439891:	mov    DWORD PTR ds:0x4613dc,ebx
  439897:	jmp    0x4398b1
  439899:	cmp    BYTE PTR ds:0x4613bc,bl
  43989f:	je     0x4398b1
  4398a1:	mov    DWORD PTR ds:0x4613dc,0x1
  4398ab:	mov    BYTE PTR ds:0x4613bc,bl
  4398b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4398b4:	call   0x42c8a5
  4398b9:	mov    edx,eax
  4398bb:	mov    DWORD PTR [ebp-0x14],edx
  4398be:	test   edx,edx
  4398c0:	je     0x439a8a
  4398c6:	mov    ecx,DWORD PTR ds:0x4613d8
  4398cc:	push   esi
  4398cd:	push   edi
  4398ce:	movzx  edi,BYTE PTR [edx+0x1]
  4398d2:	lea    esi,[edx+0x2]
  4398d5:	lea    eax,[ecx+0x1c]
  4398d8:	add    edi,esi
  4398da:	cmp    eax,0x4617e0
  4398df:	jbe    0x4398ef
  4398e1:	call   0x43a7d2
  4398e6:	mov    ecx,DWORD PTR ds:0x4613d8
  4398ec:	mov    edx,DWORD PTR [ebp-0x14]
  4398ef:	cmp    DWORD PTR ds:0x460574,ebx
  4398f5:	jne    0x43990e
  4398f7:	movzx  eax,BYTE PTR [edx+0x1]
  4398fb:	mov    ecx,DWORD PTR ds:0x45f830
  439901:	sub    ecx,eax
  439903:	call   0x439c80
  439908:	mov    ecx,DWORD PTR ds:0x4613d8
  43990e:	mov    BYTE PTR [ecx],0x20
  439911:	inc    ecx
  439912:	inc    DWORD PTR ds:0x460574
  439918:	mov    DWORD PTR ds:0x4613d8,ecx
  43991e:	mov    BYTE PTR [ebp-0xe],bl
  439921:	mov    BYTE PTR [ebp-0x6],0x1
  439925:	mov    BYTE PTR [ebp-0xa],bl
  439928:	jmp    0x439a80
  43992d:	mov    al,BYTE PTR [esi]
  43992f:	mov    BYTE PTR [ebp-0x2],al
  439932:	mov    BYTE PTR [ebp-0x1],al
  439935:	mov    eax,ds:0x460574
  43993a:	add    eax,0x4
  43993d:	inc    esi
  43993e:	cmp    eax,0x1c
  439941:	jb     0x439965
  439943:	call   0x439ef0
  439948:	movzx  ecx,BYTE PTR ds:0x4613bd
  43994f:	mov    eax,ds:0x4613b8
  439954:	neg    ecx
  439956:	sbb    ecx,ecx
  439958:	and    ecx,0x5
  43995b:	add    eax,0xa
  43995e:	add    ecx,eax
  439960:	call   0x439dfb
  439965:	lea    ecx,[ebp-0x1]
  439968:	call   0x439ca8
  43996d:	mov    cl,BYTE PTR [ebp-0x2]
  439970:	movzx  eax,cl
  439973:	movzx  edx,WORD PTR [eax*2+0x405db8]
  43997b:	mov    eax,edx
  43997d:	and    eax,0x70
  439980:	je     0x439a65
  439986:	cmp    eax,0x10
  439989:	je     0x439a17
  43998f:	cmp    eax,0x20
  439992:	je     0x4399b5
  439994:	cmp    eax,0x30
  439997:	je     0x4399f9
  439999:	cmp    eax,0x40
  43999c:	je     0x4399d8
  43999e:	cmp    eax,0x50
  4399a1:	je     0x4399ce
  4399a3:	cmp    eax,0x60
  4399a6:	jne    0x439a80
  4399ac:	shr    cl,0x3
  4399af:	and    cl,0x1
  4399b2:	mov    BYTE PTR [ebp-0xa],cl
  4399b5:	mov    eax,ds:0x4613d8
  4399ba:	mov    BYTE PTR [eax],0x2f
  4399bd:	inc    eax
  4399be:	inc    DWORD PTR ds:0x460574
  4399c4:	mov    ds:0x4613d8,eax
  4399c9:	jmp    0x439a80
  4399ce:	mov    eax,ds:0x4613d8
  4399d3:	mov    BYTE PTR [eax],0x3a
  4399d6:	jmp    0x4399bd
  4399d8:	mov    eax,ds:0x4613d8
  4399dd:	mov    BYTE PTR [eax],0x7c
  4399e0:	inc    eax
  4399e1:	inc    DWORD PTR ds:0x460574
  4399e7:	cmp    BYTE PTR [ebp-0x6],0x0
  4399eb:	mov    ds:0x4613d8,eax
  4399f0:	sete   BYTE PTR [ebp-0x6]
  4399f4:	jmp    0x439a80
  4399f9:	mov    eax,ds:0x4613d8
  4399fe:	mov    BYTE PTR [eax],0x26
  439a01:	inc    eax
  439a02:	inc    DWORD PTR ds:0x460574
  439a08:	test   bl,bl
  439a0a:	sete   bl
  439a0d:	mov    ds:0x4613d8,eax
  439a12:	mov    BYTE PTR [ebp-0xe],bl
  439a15:	jmp    0x439a80
  439a17:	mov    al,BYTE PTR [esi]
  439a19:	mov    BYTE PTR [ebp-0x2],al
  439a1c:	mov    BYTE PTR [ebp-0x1],al
  439a1f:	mov    eax,ds:0x460574
  439a24:	add    eax,0x3
  439a27:	inc    esi
  439a28:	cmp    eax,0x1c
  439a2b:	jb     0x439a4f
  439a2d:	call   0x439ef0
  439a32:	movzx  ecx,BYTE PTR ds:0x4613bd
  439a39:	mov    eax,ds:0x4613b8
  439a3e:	neg    ecx
  439a40:	sbb    ecx,ecx
  439a42:	and    ecx,0x5
  439a45:	add    eax,0xa
  439a48:	add    ecx,eax
  439a4a:	call   0x439dfb
  439a4f:	lea    ecx,[ebp-0x1]
  439a52:	call   0x439ca8
  439a57:	movzx  eax,BYTE PTR [ebp-0x2]
  439a5b:	movzx  ecx,WORD PTR [eax*2+0x405bb8]
  439a63:	jmp    0x439a67
  439a65:	mov    ecx,edx
  439a67:	cmp    esi,edi
  439a69:	jae    0x439a88
  439a6b:	push   DWORD PTR [ebp-0x6]
  439a6e:	mov    edx,DWORD PTR [ebp-0x14]
  439a71:	push   DWORD PTR [ebp-0xa]
  439a74:	push   DWORD PTR [ebp-0xe]
  439a77:	push   edi
  439a78:	push   esi
  439a79:	call   0x43959c
  439a7e:	mov    esi,eax
  439a80:	cmp    esi,edi
  439a82:	jb     0x43992d
  439a88:	pop    edi
  439a89:	pop    esi
  439a8a:	cmp    BYTE PTR ds:0x4613aa,0x0
  439a91:	je     0x439aa2
  439a93:	mov    ecx,DWORD PTR [ebp+0x8]
  439a96:	call   0x4394b2
  439a9b:	mov    BYTE PTR ds:0x4613bc,0x1
  439aa2:	pop    ebx
  439aa3:	leave  
  439aa4:	ret    0x4
  439aa7:	push   ebp
  439aa8:	mov    ebp,esp
  439aaa:	push   ecx
  439aab:	push   ecx
  439aac:	push   ebx
  439aad:	push   esi
  439aae:	mov    esi,DWORD PTR [ebp+0x8]
  439ab1:	push   edi
  439ab2:	mov    ebx,edx
  439ab4:	mov    edi,ecx
  439ab6:	test   esi,esi
  439ab8:	je     0x439ac9
  439aba:	mov    al,BYTE PTR [esi]
  439abc:	and    al,0x80
  439abe:	movzx  eax,al
  439ac1:	neg    eax
  439ac3:	sbb    eax,eax
  439ac5:	not    eax
  439ac7:	and    esi,eax
  439ac9:	movzx  ecx,BYTE PTR ds:0x4613bd
  439ad0:	mov    eax,ds:0x4613b8
  439ad5:	neg    ecx
  439ad7:	sbb    ecx,ecx
  439ad9:	and    ecx,0x5
  439adc:	add    eax,0xa
  439adf:	add    eax,ecx
  439ae1:	mov    ecx,DWORD PTR ds:0x460574
  439ae7:	cmp    ecx,eax
  439ae9:	je     0x439b18
  439aeb:	lea    eax,[ecx+0x3]
  439aee:	lea    eax,[eax+ebx*2]
  439af1:	cmp    eax,0x1c
  439af4:	jb     0x439b18
  439af6:	call   0x439ef0
  439afb:	movzx  ecx,BYTE PTR ds:0x4613bd
  439b02:	mov    eax,ds:0x4613b8
  439b07:	neg    ecx
  439b09:	sbb    ecx,ecx
  439b0b:	and    ecx,0x5
  439b0e:	add    eax,0xa
  439b11:	add    ecx,eax
  439b13:	call   0x439dfb
  439b18:	mov    eax,ds:0x4613d8
  439b1d:	add    eax,0x14
  439b20:	cmp    eax,0x4617e0
  439b25:	jbe    0x439b2c
  439b27:	call   0x43a7d2
  439b2c:	test   esi,esi
  439b2e:	je     0x439b72
  439b30:	mov    ecx,DWORD PTR [esi+0x2]
  439b33:	test   ecx,ecx
  439b35:	je     0x439b72
  439b37:	movzx  eax,BYTE PTR [esi]
  439b3a:	mov    ecx,DWORD PTR [ecx+0x1c]
  439b3d:	and    eax,0xf
  439b40:	xor    edx,edx
  439b42:	cmp    eax,0x1
  439b45:	je     0x439b57
  439b47:	cmp    eax,0x2
  439b4a:	je     0x439c07
  439b50:	jle    0x439b72
  439b52:	cmp    eax,0x4
  439b55:	jg     0x439b72
  439b57:	add    ecx,DWORD PTR [edi]
  439b59:	push   0x4
  439b5b:	adc    edx,edx
  439b5d:	mov    DWORD PTR [ebp-0x8],ecx
  439b60:	mov    DWORD PTR [ebp-0x4],edx
  439b63:	lea    edx,[ebp-0x8]
  439b66:	pop    ecx
  439b67:	call   0x439cfe
  439b6c:	sub    ebx,0x4
  439b6f:	add    edi,0x4
  439b72:	mov    eax,ebx
  439b74:	sub    eax,0x0
  439b77:	je     0x439c43
  439b7d:	dec    eax
  439b7e:	je     0x439c3c
  439b84:	dec    eax
  439b85:	je     0x439c30
  439b8b:	dec    eax
  439b8c:	dec    eax
  439b8d:	je     0x439c2c
  439b93:	sub    eax,0x4
  439b96:	je     0x439c28
  439b9c:	movzx  ecx,BYTE PTR ds:0x4613bd
  439ba3:	mov    eax,ds:0x4613b8
  439ba8:	neg    ecx
  439baa:	sbb    ecx,ecx
  439bac:	and    ecx,0x5
  439baf:	add    eax,0xa
  439bb2:	add    eax,ecx
  439bb4:	mov    ecx,DWORD PTR ds:0x460574
  439bba:	cmp    ecx,eax
  439bbc:	je     0x439bec
  439bbe:	mov    eax,ebx
  439bc0:	imul   eax,eax,0x3
  439bc3:	add    eax,ecx
  439bc5:	cmp    eax,0x1c
  439bc8:	jb     0x439bec
  439bca:	call   0x439ef0
  439bcf:	movzx  ecx,BYTE PTR ds:0x4613bd
  439bd6:	mov    eax,ds:0x4613b8
  439bdb:	neg    ecx
  439bdd:	sbb    ecx,ecx
  439bdf:	and    ecx,0x5
  439be2:	add    eax,0xa
  439be5:	add    ecx,eax
  439be7:	call   0x439dfb
  439bec:	mov    eax,ebx
  439bee:	imul   eax,eax,0x3
  439bf1:	add    eax,DWORD PTR ds:0x4613d8
  439bf7:	cmp    eax,0x4617e0
  439bfc:	jbe    0x439c03
  439bfe:	call   0x43a7d2
  439c03:	mov    ecx,ebx
  439c05:	jmp    0x439c33
  439c07:	add    ecx,DWORD PTR [edi]
  439c09:	push   0x8
  439c0b:	adc    edx,DWORD PTR [edi+0x4]
  439c0e:	mov    DWORD PTR [ebp-0x8],ecx
  439c11:	mov    DWORD PTR [ebp-0x4],edx
  439c14:	lea    edx,[ebp-0x8]
  439c17:	pop    ecx
  439c18:	call   0x439cfe
  439c1d:	sub    ebx,0x8
  439c20:	add    edi,0x8
  439c23:	jmp    0x439b72
  439c28:	push   0x8
  439c2a:	jmp    0x439c32
  439c2c:	push   0x4
  439c2e:	jmp    0x439c32
  439c30:	push   0x2
  439c32:	pop    ecx
  439c33:	mov    edx,edi
  439c35:	call   0x439cfe
  439c3a:	jmp    0x439c43
  439c3c:	mov    ecx,edi
  439c3e:	call   0x439ca8
  439c43:	test   esi,esi
  439c45:	je     0x439c79
  439c47:	mov    eax,ds:0x4613d8
  439c4c:	mov    BYTE PTR [eax],0x20
  439c4f:	mov    ecx,DWORD PTR [esi+0x2]
  439c52:	test   ecx,ecx
  439c54:	je     0x439c62
  439c56:	test   BYTE PTR [ecx+0x7],0x2
  439c5a:	je     0x439c62
  439c5c:	mov    BYTE PTR [eax+0x1],0x45
  439c60:	jmp    0x439c6b
  439c62:	mov    eax,ds:0x4613d8
  439c67:	mov    BYTE PTR [eax+0x1],0x52
  439c6b:	add    DWORD PTR ds:0x4613d8,0x2
  439c72:	add    DWORD PTR ds:0x460574,0x2
  439c79:	pop    edi
  439c7a:	pop    esi
  439c7b:	pop    ebx
  439c7c:	leave  
  439c7d:	ret    0x4
  439c80:	push   ebp
  439c81:	mov    ebp,esp
  439c83:	push   ecx
  439c84:	mov    eax,ds:0x4613d8
  439c89:	add    eax,0xa
  439c8c:	mov    DWORD PTR [ebp-0x4],ecx
  439c8f:	cmp    eax,0x4617e0
  439c94:	jbe    0x439c9b
  439c96:	call   0x43a7d2
  439c9b:	push   0x4
  439c9d:	lea    edx,[ebp-0x4]
  439ca0:	pop    ecx
  439ca1:	call   0x439cfe
  439ca6:	leave  
  439ca7:	ret    
  439ca8:	mov    edx,DWORD PTR ds:0x4613d8
  439cae:	push   esi
  439caf:	lea    eax,[edx+0x3]
  439cb2:	mov    esi,ecx
  439cb4:	cmp    eax,0x4617e0
  439cb9:	jbe    0x439cc6
  439cbb:	call   0x43a7d2
  439cc0:	mov    edx,DWORD PTR ds:0x4613d8
  439cc6:	mov    cl,BYTE PTR [esi]
  439cc8:	mov    al,ds:0x4613bf
  439ccd:	add    DWORD PTR ds:0x460574,0x3
  439cd4:	mov    BYTE PTR [edx],al
  439cd6:	movzx  ecx,cl
  439cd9:	mov    eax,ecx
  439cdb:	shr    eax,0x4
  439cde:	and    ecx,0xf
  439ce1:	mov    al,BYTE PTR [eax+0x449270]
  439ce7:	mov    BYTE PTR [edx+0x1],al
  439cea:	mov    al,BYTE PTR [ecx+0x449270]
  439cf0:	mov    BYTE PTR [edx+0x2],al
  439cf3:	add    edx,0x3
  439cf6:	mov    DWORD PTR ds:0x4613d8,edx
  439cfc:	pop    esi
  439cfd:	ret    
  439cfe:	push   ebp
  439cff:	mov    ebp,esp
  439d01:	push   ecx
  439d02:	push   ebx
  439d03:	push   esi
  439d04:	mov    esi,DWORD PTR ds:0x4613d8
  439d0a:	push   edi
  439d0b:	lea    eax,[esi+0x1]
  439d0e:	mov    ebx,edx
  439d10:	mov    edi,ecx
  439d12:	cmp    eax,0x4617e0
  439d17:	jbe    0x439d24
  439d19:	call   0x43a7d2
  439d1e:	mov    esi,DWORD PTR ds:0x4613d8
  439d24:	mov    al,ds:0x4613bf
  439d29:	mov    edx,DWORD PTR ds:0x460574
  439d2f:	mov    BYTE PTR [esi],al
  439d31:	inc    esi
  439d32:	dec    edi
  439d33:	inc    edx
  439d34:	add    edi,ebx
  439d36:	jmp    0x439d7c
  439d38:	mov    al,BYTE PTR [edi]
  439d3a:	mov    BYTE PTR [ebp-0x1],al
  439d3d:	lea    eax,[esi+0x2]
  439d40:	cmp    eax,0x4617e0
  439d45:	jbe    0x439d58
  439d47:	call   0x43a7d2
  439d4c:	mov    esi,DWORD PTR ds:0x4613d8
  439d52:	mov    edx,DWORD PTR ds:0x460574
  439d58:	movzx  ecx,BYTE PTR [ebp-0x1]
  439d5c:	mov    eax,ecx
  439d5e:	and    eax,0xf
  439d61:	shr    ecx,0x4
  439d64:	mov    al,BYTE PTR [eax+0x449270]
  439d6a:	mov    BYTE PTR [esi+0x1],al
  439d6d:	mov    al,BYTE PTR [ecx+0x449270]
  439d73:	mov    BYTE PTR [esi],al
  439d75:	add    esi,0x2
  439d78:	add    edx,0x2
  439d7b:	dec    edi
  439d7c:	mov    DWORD PTR ds:0x460574,edx
  439d82:	mov    DWORD PTR ds:0x4613d8,esi
  439d88:	cmp    edi,ebx
  439d8a:	jae    0x439d38
  439d8c:	pop    edi
  439d8d:	pop    esi
  439d8e:	pop    ebx
  439d8f:	leave  
  439d90:	ret    
  439d91:	push   ebp
  439d92:	mov    ebp,esp
  439d94:	sub    esp,0xc
  439d97:	mov    eax,ds:0x448858
  439d9c:	xor    eax,ebp
  439d9e:	mov    DWORD PTR [ebp-0x4],eax
  439da1:	mov    edx,DWORD PTR ds:0x4613d8
  439da7:	mov    al,ds:0x4613bf
  439dac:	mov    BYTE PTR [edx],al
  439dae:	inc    edx
  439daf:	inc    DWORD PTR ds:0x460574
  439db5:	push   esi
  439db6:	mov    DWORD PTR ds:0x4613d8,edx
  439dbc:	mov    BYTE PTR [ebp-0x7],0x0
  439dc0:	lea    esi,[ebp-0x8]
  439dc3:	movzx  eax,cx
  439dc6:	push   0xa
  439dc8:	cdq    
  439dc9:	pop    ecx
  439dca:	idiv   ecx
  439dcc:	add    dl,0x30
  439dcf:	movzx  ecx,ax
  439dd2:	mov    BYTE PTR [esi],dl
  439dd4:	dec    esi
  439dd5:	test   cx,cx
  439dd8:	je     0x439de1
  439dda:	lea    eax,[ebp-0xc]
  439ddd:	cmp    esi,eax
  439ddf:	jae    0x439dc3
  439de1:	lea    ecx,[ebp-0x8]
  439de4:	lea    edx,[esi+0x1]
  439de7:	sub    ecx,esi
  439de9:	call   0x43a48e
  439dee:	mov    ecx,DWORD PTR [ebp-0x4]
  439df1:	xor    ecx,ebp
  439df3:	pop    esi
  439df4:	call   0x446dc7
  439df9:	leave  
  439dfa:	ret    
  439dfb:	push   ebp
  439dfc:	mov    ebp,esp
  439dfe:	push   ecx
  439dff:	push   ebx
  439e00:	mov    ebx,DWORD PTR ds:0x460574
  439e06:	push   esi
  439e07:	push   edi
  439e08:	mov    edi,ecx
  439e0a:	cmp    edi,ebx
  439e0c:	ja     0x439e11
  439e0e:	lea    edi,[ebx+0x1]
  439e11:	mov    esi,DWORD PTR ds:0x4613cc
  439e17:	mov    DWORD PTR ds:0x460574,edi
  439e1d:	test   esi,esi
  439e1f:	je     0x439e8a
  439e21:	cmp    edi,esi
  439e23:	jb     0x439e3d
  439e25:	sub    edi,esi
  439e27:	mov    ecx,esi
  439e29:	sub    ecx,DWORD PTR ds:0x4613b4
  439e2f:	mov    eax,edi
  439e31:	xor    edx,edx
  439e33:	div    ecx
  439e35:	mov    edi,edx
  439e37:	add    edi,DWORD PTR ds:0x4613b4
  439e3d:	cmp    ebx,esi
  439e3f:	jbe    0x439e59
  439e41:	sub    ebx,esi
  439e43:	mov    ecx,esi
  439e45:	sub    ecx,DWORD PTR ds:0x4613b4
  439e4b:	mov    eax,ebx
  439e4d:	xor    edx,edx
  439e4f:	div    ecx
  439e51:	mov    ebx,edx
  439e53:	add    ebx,DWORD PTR ds:0x4613b4
  439e59:	cmp    edi,ebx
  439e5b:	jae    0x439e8a
  439e5d:	mov    esi,DWORD PTR ds:0x4613d8
  439e63:	lea    eax,[esi+0x2]
  439e66:	cmp    eax,0x4617e0
  439e6b:	jbe    0x439e78
  439e6d:	call   0x43a7d2
  439e72:	mov    esi,DWORD PTR ds:0x4613d8
  439e78:	mov    WORD PTR [esi],0xa0d
  439e7d:	add    esi,0x2
  439e80:	mov    DWORD PTR ds:0x4613d8,esi
  439e86:	xor    ebx,ebx
  439e88:	jmp    0x439e90
  439e8a:	mov    esi,DWORD PTR ds:0x4613d8
  439e90:	mov    eax,ebx
  439e92:	shr    eax,0x3
  439e95:	mov    ecx,edi
  439e97:	shr    ecx,0x3
  439e9a:	sub    ecx,eax
  439e9c:	mov    DWORD PTR [ebp-0x4],ecx
  439e9f:	lea    eax,[ecx+0x8]
  439ea2:	add    eax,esi
  439ea4:	cmp    eax,0x4617e0
  439ea9:	jbe    0x439eb9
  439eab:	call   0x43a7d2
  439eb0:	mov    esi,DWORD PTR ds:0x4613d8
  439eb6:	mov    ecx,DWORD PTR [ebp-0x4]
  439eb9:	test   ecx,ecx
  439ebb:	je     0x439ed3
  439ebd:	push   ecx
  439ebe:	push   0x9
  439ec0:	push   esi
  439ec1:	call   0x44764c
  439ec6:	add    esi,DWORD PTR [ebp-0x4]
  439ec9:	add    esp,0xc
  439ecc:	and    edi,0x7
  439ecf:	jbe    0x439ee5
  439ed1:	jmp    0x439ed7
  439ed3:	sub    edi,ebx
  439ed5:	je     0x439ee5
  439ed7:	push   edi
  439ed8:	push   0x20
  439eda:	push   esi
  439edb:	call   0x44764c
  439ee0:	add    esp,0xc
  439ee3:	add    esi,edi
  439ee5:	pop    edi
  439ee6:	mov    DWORD PTR ds:0x4613d8,esi
  439eec:	pop    esi
  439eed:	pop    ebx
  439eee:	leave  
  439eef:	ret    
  439ef0:	cmp    DWORD PTR ds:0x4613dc,0x0
  439ef7:	jle    0x439f06
  439ef9:	call   0x439fa5
  439efe:	mov    ecx,DWORD PTR ds:0x4613d0
  439f04:	jmp    0x439f4f
  439f06:	mov    ecx,DWORD PTR ds:0x4613d8
  439f0c:	lea    eax,[ecx+0x2]
  439f0f:	cmp    eax,0x4617e0
  439f14:	jb     0x439f21
  439f16:	call   0x43a7d2
  439f1b:	mov    ecx,DWORD PTR ds:0x4613d8
  439f21:	and    DWORD PTR ds:0x460574,0x0
  439f28:	mov    WORD PTR [ecx],0xa0d
  439f2d:	add    ecx,0x2
  439f30:	mov    DWORD PTR ds:0x4613d8,ecx
  439f36:	mov    ecx,DWORD PTR ds:0x4613d0
  439f3c:	test   ecx,ecx
  439f3e:	je     0x439f4f
  439f40:	cmp    BYTE PTR ds:0x45f83b,0x0
  439f47:	jne    0x439f4f
  439f49:	inc    DWORD PTR ds:0x4613d4
  439f4f:	cmp    BYTE PTR ds:0x4613be,0x0
  439f56:	je     0x439f70
  439f58:	mov    edx,DWORD PTR ds:0x4613c0
  439f5e:	test   edx,edx
  439f60:	je     0x439f70
  439f62:	mov    eax,ds:0x45f9b4
  439f67:	and    DWORD PTR ds:0x4613c0,0x0
  439f6e:	mov    DWORD PTR [eax],edx
  439f70:	test   ecx,ecx
  439f72:	je     0x439f80
  439f74:	cmp    DWORD PTR ds:0x4613d4,ecx
  439f7a:	jae    0x4388fe
  439f80:	ret    
  439f81:	mov    edx,DWORD PTR [ecx+0x8]
  439f84:	cmp    edx,0x3ea
  439f8a:	je     0x439fa4
  439f8c:	movzx  eax,BYTE PTR [ecx+0x11]
  439f90:	push   eax
  439f91:	lea    eax,[ecx+0x12]
  439f94:	mov    ecx,DWORD PTR [ecx+0x4]
  439f97:	push   eax
  439f98:	mov    BYTE PTR ds:0x44f581,0x1
  439f9f:	call   0x42ecdd
  439fa4:	ret    
  439fa5:	push   ebp
  439fa6:	mov    ebp,esp
  439fa8:	sub    esp,0x10
  439fab:	push   ebx
  439fac:	xor    ebx,ebx
  439fae:	mov    BYTE PTR [ebp-0x1],bl
  439fb1:	cmp    BYTE PTR ds:0x45f992,bl
  439fb7:	je     0x43a098
  439fbd:	cmp    BYTE PTR ds:0x45f83b,bl
  439fc3:	jne    0x43a000
  439fc5:	push   0x1c
  439fc7:	pop    ecx
  439fc8:	call   0x439dfb
  439fcd:	mov    edx,DWORD PTR ds:0x4600fc
  439fd3:	sub    edx,DWORD PTR ds:0x460578
  439fd9:	cmp    edx,0x9
  439fdc:	jbe    0x439fe3
  439fde:	lea    ecx,[ebp-0x10]
  439fe1:	jmp    0x439fee
  439fe3:	test   edx,edx
  439fe5:	jle    0x439ff8
  439fe7:	mov    BYTE PTR [ebp-0x10],0x20
  439feb:	lea    ecx,[ebp-0xf]
  439fee:	push   0xa
  439ff0:	push   ebx
  439ff1:	call   0x42ea92
  439ff6:	mov    BYTE PTR [eax],bl
  439ff8:	lea    ecx,[ebp-0x10]
  439ffb:	call   0x43a78c
  43a000:	cmp    BYTE PTR ds:0x463397,bl
  43a006:	jne    0x43a098
  43a00c:	mov    eax,ds:0x463300
  43a011:	mov    edx,DWORD PTR ds:0x460568
  43a017:	mov    ds:0x463874,eax
  43a01c:	mov    eax,ds:0x463304
  43a021:	mov    ds:0x463878,eax
  43a026:	test   edx,edx
  43a028:	je     0x43a052
  43a02a:	cmp    BYTE PTR [edx],0x3e
  43a02d:	jne    0x43a052
  43a02f:	movzx  eax,WORD PTR [edx+0x1]
  43a033:	lea    ecx,[edx+0x3]
  43a036:	add    eax,edx
  43a038:	mov    DWORD PTR ds:0x463300,ecx
  43a03e:	mov    ds:0x463304,eax
  43a043:	mov    DWORD PTR ds:0x46387c,edx
  43a049:	mov    BYTE PTR ds:0x463397,0x1
  43a050:	jmp    0x43a09e
  43a052:	cmp    BYTE PTR ds:0x45f83b,bl
  43a058:	jne    0x43a06c
  43a05a:	mov    eax,ds:0x4613d8
  43a05f:	mov    WORD PTR [eax],0xa0d
  43a064:	add    eax,0x2
  43a067:	mov    ds:0x4613d8,eax
  43a06c:	mov    eax,ds:0x4613dc
  43a071:	test   eax,eax
  43a073:	jle    0x43a07b
  43a075:	dec    eax
  43a076:	mov    ds:0x4613dc,eax
  43a07b:	mov    DWORD PTR ds:0x460574,ebx
  43a081:	cmp    DWORD PTR ds:0x4613d0,ebx
  43a087:	je     0x43a42c
  43a08d:	cmp    BYTE PTR ds:0x45f83b,bl
  43a093:	jmp    0x43a424
  43a098:	mov    ecx,DWORD PTR ds:0x463300
  43a09e:	cmp    BYTE PTR ds:0x45f83b,bl
  43a0a4:	jne    0x43a0f7
  43a0a6:	cmp    WORD PTR ds:0x4605bc,bx
  43a0ad:	jbe    0x43a0cb
  43a0af:	push   0x1e
  43a0b1:	pop    ecx
  43a0b2:	cmp    DWORD PTR ds:0x460574,ecx
  43a0b8:	jae    0x43a0bf
  43a0ba:	call   0x439dfb
  43a0bf:	mov    ecx,0x41f5fc
  43a0c4:	call   0x43a78c
  43a0c9:	jmp    0x43a0f1
  43a0cb:	cmp    DWORD PTR ds:0x4600fc,ebx
  43a0d1:	jne    0x43a0e9
  43a0d3:	mov    eax,ds:0x463304
  43a0d8:	sub    eax,ecx
  43a0da:	cmp    eax,0x1
  43a0dd:	jle    0x43a0f7
  43a0df:	mov    eax,0xa0d
  43a0e4:	cmp    WORD PTR [ecx],ax
  43a0e7:	je     0x43a0f7
  43a0e9:	push   0x20
  43a0eb:	pop    ecx
  43a0ec:	call   0x439dfb
  43a0f1:	mov    ecx,DWORD PTR ds:0x463300
  43a0f7:	mov    edx,DWORD PTR ds:0x460574
  43a0fd:	push   esi
  43a0fe:	mov    esi,DWORD PTR ds:0x4613d8
  43a104:	push   edi
  43a105:	mov    edi,DWORD PTR ds:0x4613c0
  43a10b:	mov    eax,ds:0x463304
  43a110:	mov    ebx,0x4617e0
  43a115:	sub    ebx,esi
  43a117:	sub    eax,ecx
  43a119:	mov    DWORD PTR [ebp-0xc],ebx
  43a11c:	mov    DWORD PTR [ebp-0x8],eax
  43a11f:	test   ebx,ebx
  43a121:	je     0x43a258
  43a127:	test   eax,eax
  43a129:	je     0x43a260
  43a12f:	cmp    BYTE PTR ds:0x45f83b,0x0
  43a136:	jne    0x43a19f
  43a138:	cmp    BYTE PTR ds:0x463396,0x0
  43a13f:	mov    bl,BYTE PTR [ecx]
  43a141:	je     0x43a14c
  43a143:	mov    BYTE PTR ds:0x463396,0x0
  43a14a:	jmp    0x43a192
  43a14c:	movzx  eax,bl
  43a14f:	cmp    BYTE PTR [eax+0x4630d0],0x0
  43a156:	je     0x43a175
  43a158:	cmp    DWORD PTR ds:0x4613cc,0x0
  43a15f:	je     0x43a16c
  43a161:	lea    eax,[edx+0x1]
  43a164:	cmp    eax,DWORD PTR ds:0x4613cc
  43a16a:	jae    0x43a1d1
  43a16c:	mov    BYTE PTR ds:0x463396,0x1
  43a173:	jmp    0x43a18f
  43a175:	test   bl,0x8
  43a178:	je     0x43a18f
  43a17a:	cmp    bl,0x9
  43a17d:	jne    0x43a187
  43a17f:	and    edx,0xfffffff8
  43a182:	add    edx,0x7
  43a185:	jmp    0x43a18f
  43a187:	cmp    bl,0x1a
  43a18a:	jne    0x43a18f
  43a18c:	add    bl,0x6
  43a18f:	mov    eax,DWORD PTR [ebp-0x8]
  43a192:	inc    edx
  43a193:	mov    BYTE PTR [esi],bl
  43a195:	inc    esi
  43a196:	dec    DWORD PTR [ebp-0xc]
  43a199:	mov    DWORD PTR ds:0x460574,edx
  43a19f:	mov    ebx,DWORD PTR ds:0x4613cc
  43a1a5:	dec    eax
  43a1a6:	mov    DWORD PTR [ebp-0x8],eax
  43a1a9:	mov    al,BYTE PTR [ecx]
  43a1ab:	inc    ecx
  43a1ac:	mov    DWORD PTR ds:0x463300,ecx
  43a1b2:	cmp    al,0xa
  43a1b4:	je     0x43a1e2
  43a1b6:	test   ebx,ebx
  43a1b8:	je     0x43a1be
  43a1ba:	cmp    edx,ebx
  43a1bc:	jae    0x43a1e2
  43a1be:	cmp    DWORD PTR [ebp-0xc],0x0
  43a1c2:	mov    eax,DWORD PTR [ebp-0x8]
  43a1c5:	je     0x43a1e5
  43a1c7:	test   eax,eax
  43a1c9:	jne    0x43a12f
  43a1cf:	jmp    0x43a1e5
  43a1d1:	mov    ebx,DWORD PTR ds:0x4613cc
  43a1d7:	inc    edx
  43a1d8:	mov    BYTE PTR [esi],0x20
  43a1db:	mov    DWORD PTR ds:0x460574,edx
  43a1e1:	inc    esi
  43a1e2:	mov    eax,DWORD PTR [ebp-0x8]
  43a1e5:	cmp    BYTE PTR [ecx-0x1],0xa
  43a1e9:	sete   BYTE PTR [ebp-0x1]
  43a1ed:	cmp    BYTE PTR [ebp-0x1],0x0
  43a1f1:	jne    0x43a1ff
  43a1f3:	test   eax,eax
  43a1f5:	jne    0x43a249
  43a1f7:	cmp    BYTE PTR ds:0x45f992,al
  43a1fd:	je     0x43a249
  43a1ff:	mov    eax,ds:0x4613dc
  43a204:	test   eax,eax
  43a206:	jle    0x43a20e
  43a208:	dec    eax
  43a209:	mov    ds:0x4613dc,eax
  43a20e:	cmp    BYTE PTR ds:0x4613be,0x0
  43a215:	je     0x43a220
  43a217:	mov    eax,ds:0x45f9b4
  43a21c:	inc    DWORD PTR [eax]
  43a21e:	jmp    0x43a232
  43a220:	test   edi,edi
  43a222:	jne    0x43a22b
  43a224:	mov    eax,ds:0x45f9b4
  43a229:	mov    edi,DWORD PTR [eax]
  43a22b:	inc    edi
  43a22c:	mov    DWORD PTR ds:0x4613c0,edi
  43a232:	mov    eax,DWORD PTR [ebp-0x8]
  43a235:	test   eax,eax
  43a237:	jne    0x43a32b
  43a23d:	cmp    BYTE PTR ds:0x45f992,al
  43a243:	jne    0x43a32b
  43a249:	test   ebx,ebx
  43a24b:	je     0x43a255
  43a24d:	cmp    edx,ebx
  43a24f:	jae    0x43a32b
  43a255:	mov    ebx,DWORD PTR [ebp-0xc]
  43a258:	test   eax,eax
  43a25a:	jne    0x43a2f2
  43a260:	cmp    BYTE PTR ds:0x45f992,0x0
  43a267:	je     0x43a29e
  43a269:	mov    eax,ds:0x4613dc
  43a26e:	test   eax,eax
  43a270:	jle    0x43a278
  43a272:	dec    eax
  43a273:	mov    ds:0x4613dc,eax
  43a278:	cmp    BYTE PTR ds:0x4613be,0x0
  43a27f:	je     0x43a28a
  43a281:	mov    eax,ds:0x45f9b4
  43a286:	inc    DWORD PTR [eax]
  43a288:	jmp    0x43a2f2
  43a28a:	test   edi,edi
  43a28c:	jne    0x43a295
  43a28e:	mov    eax,ds:0x45f9b4
  43a293:	mov    edi,DWORD PTR [eax]
  43a295:	inc    edi
  43a296:	mov    DWORD PTR ds:0x4613c0,edi
  43a29c:	jmp    0x43a2f2
  43a29e:	mov    eax,ds:0x44e4bc
  43a2a3:	test   BYTE PTR [eax+0x2d],0x4
  43a2a7:	jne    0x43a2e3
  43a2a9:	mov    ecx,eax
  43a2ab:	call   0x429932
  43a2b0:	mov    eax,ds:0x44e4bc
  43a2b5:	mov    edx,DWORD PTR ds:0x460574
  43a2bb:	mov    ecx,DWORD PTR [eax+0x3c]
  43a2be:	movzx  eax,WORD PTR [eax+0x3a]
  43a2c2:	mov    edi,DWORD PTR ds:0x4613c0
  43a2c8:	add    ecx,0x200
  43a2ce:	add    eax,ecx
  43a2d0:	mov    DWORD PTR ds:0x4632fc,ecx
  43a2d6:	mov    DWORD PTR ds:0x463300,ecx
  43a2dc:	mov    ds:0x463304,eax
  43a2e1:	jmp    0x43a2f2
  43a2e3:	mov    eax,ds:0x4613dc
  43a2e8:	test   eax,eax
  43a2ea:	jle    0x43a2f2
  43a2ec:	dec    eax
  43a2ed:	mov    ds:0x4613dc,eax
  43a2f2:	test   ebx,ebx
  43a2f4:	jne    0x43a319
  43a2f6:	mov    DWORD PTR ds:0x4613d8,esi
  43a2fc:	call   0x43a7d2
  43a301:	mov    esi,DWORD PTR ds:0x4613d8
  43a307:	mov    ecx,DWORD PTR ds:0x463300
  43a30d:	mov    edx,DWORD PTR ds:0x460574
  43a313:	mov    edi,DWORD PTR ds:0x4613c0
  43a319:	cmp    ecx,DWORD PTR ds:0x463304
  43a31f:	jae    0x43a32b
  43a321:	cmp    BYTE PTR [ebp-0x1],0x0
  43a325:	je     0x43a10b
  43a32b:	mov    eax,ds:0x4613cc
  43a330:	test   eax,eax
  43a332:	je     0x43a338
  43a334:	cmp    edx,eax
  43a336:	jae    0x43a344
  43a338:	cmp    ecx,DWORD PTR ds:0x463304
  43a33e:	jb     0x43a3cb
  43a344:	mov    bl,BYTE PTR [esi-0x1]
  43a347:	lea    eax,[esi+0x2]
  43a34a:	cmp    eax,0x4617e0
  43a34f:	jb     0x43a362
  43a351:	mov    DWORD PTR ds:0x4613d8,esi
  43a357:	call   0x43a7d2
  43a35c:	mov    esi,DWORD PTR ds:0x4613d8
  43a362:	cmp    bl,0xa
  43a365:	je     0x43a3cb
  43a367:	cmp    bl,0xd
  43a36a:	je     0x43a370
  43a36c:	mov    BYTE PTR [esi],0xd
  43a36f:	inc    esi
  43a370:	mov    BYTE PTR [esi],0xa
  43a373:	inc    esi
  43a374:	call   0x43a42f
  43a379:	cmp    al,0xd
  43a37b:	je     0x43a383
  43a37d:	dec    DWORD PTR ds:0x463300
  43a383:	call   0x43a42f
  43a388:	cmp    al,0xa
  43a38a:	je     0x43a394
  43a38c:	dec    DWORD PTR ds:0x463300
  43a392:	jmp    0x43a3cb
  43a394:	mov    eax,ds:0x4613dc
  43a399:	test   eax,eax
  43a39b:	jle    0x43a3a3
  43a39d:	dec    eax
  43a39e:	mov    ds:0x4613dc,eax
  43a3a3:	cmp    BYTE PTR ds:0x4613be,0x0
  43a3aa:	je     0x43a3b5
  43a3ac:	mov    eax,ds:0x45f9b4
  43a3b1:	inc    DWORD PTR [eax]
  43a3b3:	jmp    0x43a3cb
  43a3b5:	mov    eax,ds:0x4613c0
  43a3ba:	test   eax,eax
  43a3bc:	jne    0x43a3c5
  43a3be:	mov    eax,ds:0x45f9b4
  43a3c3:	mov    eax,DWORD PTR [eax]
  43a3c5:	inc    eax
  43a3c6:	mov    ds:0x4613c0,eax
  43a3cb:	cmp    BYTE PTR ds:0x45f992,0x0
  43a3d2:	je     0x43a405
  43a3d4:	cmp    DWORD PTR [ebp-0x8],0x0
  43a3d8:	jne    0x43a405
  43a3da:	mov    ecx,DWORD PTR ds:0x46387c
  43a3e0:	call   0x428f71
  43a3e5:	mov    ds:0x460568,eax
  43a3ea:	mov    eax,ds:0x463874
  43a3ef:	mov    ds:0x463300,eax
  43a3f4:	mov    eax,ds:0x463878
  43a3f9:	mov    ds:0x463304,eax
  43a3fe:	mov    BYTE PTR ds:0x463397,0x0
  43a405:	and    DWORD PTR ds:0x460574,0x0
  43a40c:	cmp    DWORD PTR ds:0x4613d0,0x0
  43a413:	pop    edi
  43a414:	mov    DWORD PTR ds:0x4613d8,esi
  43a41a:	pop    esi
  43a41b:	je     0x43a42c
  43a41d:	cmp    BYTE PTR ds:0x45f83b,0x0
  43a424:	jne    0x43a42c
  43a426:	inc    DWORD PTR ds:0x4613d4
  43a42c:	pop    ebx
  43a42d:	leave  
  43a42e:	ret    
  43a42f:	cmp    BYTE PTR ds:0x45f992,0x0
  43a436:	je     0x43a441
  43a438:	inc    DWORD PTR ds:0x463300
  43a43e:	xor    al,al
  43a440:	ret    
  43a441:	mov    edx,DWORD PTR ds:0x463300
  43a447:	cmp    edx,DWORD PTR ds:0x463304
  43a44d:	jb     0x43a47f
  43a44f:	mov    ecx,DWORD PTR ds:0x44e4bc
  43a455:	test   BYTE PTR [ecx+0x2d],0x4
  43a459:	jne    0x43a489
  43a45b:	call   0x429932
  43a460:	mov    eax,ds:0x44e4bc
  43a465:	mov    edx,DWORD PTR [eax+0x3c]
  43a468:	movzx  eax,WORD PTR [eax+0x3a]
  43a46c:	add    edx,0x200
  43a472:	add    eax,edx
  43a474:	mov    DWORD PTR ds:0x4632fc,edx
  43a47a:	mov    ds:0x463304,eax
  43a47f:	inc    edx
  43a480:	mov    al,BYTE PTR [edx]
  43a482:	mov    DWORD PTR ds:0x463300,edx
  43a488:	ret    
  43a489:	inc    edx
  43a48a:	xor    al,al
  43a48c:	jmp    0x43a482
  43a48e:	push   ebp
  43a48f:	mov    ebp,esp
  43a491:	sub    esp,0x18
  43a494:	push   ebx
  43a495:	mov    ebx,DWORD PTR ds:0x4613cc
  43a49b:	push   esi
  43a49c:	mov    esi,DWORD PTR ds:0x460574
  43a4a2:	push   edi
  43a4a3:	mov    DWORD PTR [ebp-0x10],edx
  43a4a6:	mov    DWORD PTR [ebp-0x8],ecx
  43a4a9:	test   ebx,ebx
  43a4ab:	je     0x43a54c
  43a4b1:	cmp    esi,ebx
  43a4b3:	jbe    0x43a4de
  43a4b5:	mov    eax,ds:0x4613b4
  43a4ba:	xor    edx,edx
  43a4bc:	test   eax,eax
  43a4be:	je     0x43a4d2
  43a4c0:	mov    ecx,ebx
  43a4c2:	sub    ecx,eax
  43a4c4:	sub    eax,ebx
  43a4c6:	dec    eax
  43a4c7:	add    eax,esi
  43a4c9:	div    ecx
  43a4cb:	imul   eax,ecx
  43a4ce:	add    eax,ebx
  43a4d0:	jmp    0x43a4e0
  43a4d2:	lea    eax,[ebx-0x1]
  43a4d5:	add    eax,esi
  43a4d7:	div    ebx
  43a4d9:	imul   eax,ebx
  43a4dc:	jmp    0x43a4e0
  43a4de:	mov    eax,ebx
  43a4e0:	mov    edi,DWORD PTR ds:0x4613d8
  43a4e6:	cmp    esi,eax
  43a4e8:	jne    0x43a552
  43a4ea:	mov    ecx,DWORD PTR ds:0x4613d0
  43a4f0:	and    DWORD PTR ds:0x460574,0x0
  43a4f7:	mov    WORD PTR [edi],0xa0d
  43a4fc:	add    edi,0x2
  43a4ff:	mov    DWORD PTR ds:0x4613d8,edi
  43a505:	test   ecx,ecx
  43a507:	je     0x43a529
  43a509:	mov    eax,ds:0x4613d4
  43a50e:	inc    eax
  43a50f:	mov    ds:0x4613d4,eax
  43a514:	cmp    eax,ecx
  43a516:	jbe    0x43a529
  43a518:	call   0x4388fe
  43a51d:	mov    ebx,DWORD PTR ds:0x4613cc
  43a523:	mov    edi,DWORD PTR ds:0x4613d8
  43a529:	mov    ecx,DWORD PTR ds:0x4613b4
  43a52f:	test   ecx,ecx
  43a531:	je     0x43a544
  43a533:	call   0x439dfb
  43a538:	mov    ebx,DWORD PTR ds:0x4613cc
  43a53e:	mov    edi,DWORD PTR ds:0x4613d8
  43a544:	mov    DWORD PTR ds:0x460574,esi
  43a54a:	jmp    0x43a552
  43a54c:	mov    edi,DWORD PTR ds:0x4613d8
  43a552:	mov    edx,0x4617e0
  43a557:	sub    edx,edi
  43a559:	mov    DWORD PTR [ebp-0x14],edi
  43a55c:	mov    DWORD PTR [ebp-0xc],edx
  43a55f:	test   ebx,ebx
  43a561:	je     0x43a595
  43a563:	cmp    esi,ebx
  43a565:	jb     0x43a595
  43a567:	mov    eax,ds:0x4613b4
  43a56c:	xor    edx,edx
  43a56e:	test   eax,eax
  43a570:	je     0x43a586
  43a572:	mov    ecx,ebx
  43a574:	sub    ecx,eax
  43a576:	mov    eax,esi
  43a578:	sub    eax,ebx
  43a57a:	div    ecx
  43a57c:	lea    edx,[eax+0x1]
  43a57f:	imul   edx,ecx
  43a582:	add    edx,ebx
  43a584:	jmp    0x43a590
  43a586:	mov    eax,esi
  43a588:	div    ebx
  43a58a:	lea    edx,[eax+0x1]
  43a58d:	imul   edx,ebx
  43a590:	mov    DWORD PTR [ebp-0x18],edx
  43a593:	jmp    0x43a59a
  43a595:	mov    edx,ebx
  43a597:	mov    DWORD PTR [ebp-0x18],ebx
  43a59a:	cmp    DWORD PTR [ebp-0xc],0x0
  43a59e:	je     0x43a684
  43a5a4:	cmp    DWORD PTR [ebp-0x8],0x0
  43a5a8:	je     0x43a684
  43a5ae:	test   ebx,ebx
  43a5b0:	je     0x43a5ba
  43a5b2:	cmp    esi,edx
  43a5b4:	jae    0x43a684
  43a5ba:	mov    ecx,DWORD PTR [ebp-0x10]
  43a5bd:	mov    edi,DWORD PTR [ebp-0x14]
  43a5c0:	cmp    BYTE PTR ds:0x463395,0x0
  43a5c7:	je     0x43a5d2
  43a5c9:	mov    BYTE PTR ds:0x463395,0x0
  43a5d0:	jmp    0x43a603
  43a5d2:	mov    al,BYTE PTR [ecx]
  43a5d4:	mov    BYTE PTR [ebp-0x1],al
  43a5d7:	movzx  eax,al
  43a5da:	cmp    BYTE PTR [eax+0x4630d0],0x0
  43a5e1:	je     0x43a5f7
  43a5e3:	test   ebx,ebx
  43a5e5:	je     0x43a5ee
  43a5e7:	lea    eax,[esi+0x1]
  43a5ea:	cmp    eax,edx
  43a5ec:	jae    0x43a638
  43a5ee:	mov    BYTE PTR ds:0x463395,0x1
  43a5f5:	jmp    0x43a603
  43a5f7:	cmp    BYTE PTR [ebp-0x1],0x9
  43a5fb:	jne    0x43a603
  43a5fd:	and    esi,0xfffffff8
  43a600:	add    esi,0x7
  43a603:	mov    al,BYTE PTR [ecx]
  43a605:	mov    BYTE PTR [edi],al
  43a607:	mov    al,BYTE PTR [ecx]
  43a609:	inc    edi
  43a60a:	dec    DWORD PTR [ebp-0xc]
  43a60d:	inc    esi
  43a60e:	dec    DWORD PTR [ebp-0x8]
  43a611:	inc    ecx
  43a612:	mov    DWORD PTR [ebp-0x14],edi
  43a615:	mov    DWORD PTR ds:0x460574,esi
  43a61b:	mov    DWORD PTR [ebp-0x10],ecx
  43a61e:	cmp    al,0xa
  43a620:	je     0x43a646
  43a622:	test   ebx,ebx
  43a624:	je     0x43a62a
  43a626:	cmp    esi,edx
  43a628:	jae    0x43a646
  43a62a:	cmp    DWORD PTR [ebp-0x8],0x0
  43a62e:	je     0x43a646
  43a630:	cmp    DWORD PTR [ebp-0xc],0x0
  43a634:	jne    0x43a5c0
  43a636:	jmp    0x43a646
  43a638:	inc    esi
  43a639:	mov    BYTE PTR [edi],0x20
  43a63c:	inc    edi
  43a63d:	mov    DWORD PTR ds:0x460574,esi
  43a643:	mov    DWORD PTR [ebp-0x14],edi
  43a646:	cmp    BYTE PTR [ecx-0x1],0xa
  43a64a:	mov    DWORD PTR ds:0x4613d8,edi
  43a650:	jne    0x43a684
  43a652:	mov    ecx,DWORD PTR ds:0x4613d0
  43a658:	test   ecx,ecx
  43a65a:	je     0x43a67c
  43a65c:	mov    eax,ds:0x4613d4
  43a661:	inc    eax
  43a662:	mov    ds:0x4613d4,eax
  43a667:	cmp    eax,ecx
  43a669:	jb     0x43a67c
  43a66b:	call   0x4388fe
  43a670:	mov    ebx,DWORD PTR ds:0x4613cc
  43a676:	mov    edi,DWORD PTR ds:0x4613d8
  43a67c:	xor    esi,esi
  43a67e:	mov    DWORD PTR ds:0x460574,esi
  43a684:	cmp    DWORD PTR [ebp-0xc],0x0
  43a688:	mov    eax,DWORD PTR [ebp-0x14]
  43a68b:	mov    al,BYTE PTR [eax-0x1]
  43a68e:	mov    BYTE PTR [ebp-0x1],al
  43a691:	jne    0x43a6ad
  43a693:	call   0x43a7d2
  43a698:	mov    ebx,DWORD PTR ds:0x4613cc
  43a69e:	mov    esi,DWORD PTR ds:0x460574
  43a6a4:	mov    edi,DWORD PTR ds:0x4613d8
  43a6aa:	mov    al,BYTE PTR [ebp-0x1]
  43a6ad:	test   ebx,ebx
  43a6af:	je     0x43a77d
  43a6b5:	cmp    esi,DWORD PTR [ebp-0x18]
  43a6b8:	jb     0x43a77d
  43a6be:	cmp    al,0xa
  43a6c0:	je     0x43a77d
  43a6c6:	cmp    al,0xd
  43a6c8:	je     0x43a77d
  43a6ce:	mov    ecx,DWORD PTR [ebp-0x8]
  43a6d1:	test   ecx,ecx
  43a6d3:	je     0x43a787
  43a6d9:	lea    eax,[edi+0x3]
  43a6dc:	cmp    eax,0x4617e0
  43a6e1:	jbe    0x43a6fd
  43a6e3:	call   0x43a7d2
  43a6e8:	mov    ebx,DWORD PTR ds:0x4613cc
  43a6ee:	mov    esi,DWORD PTR ds:0x460574
  43a6f4:	mov    edi,DWORD PTR ds:0x4613d8
  43a6fa:	mov    ecx,DWORD PTR [ebp-0x8]
  43a6fd:	mov    eax,DWORD PTR [ebp-0x10]
  43a700:	cmp    BYTE PTR [eax],0xd
  43a703:	jne    0x43a70d
  43a705:	inc    eax
  43a706:	dec    ecx
  43a707:	mov    DWORD PTR [ebp-0x10],eax
  43a70a:	mov    DWORD PTR [ebp-0x8],ecx
  43a70d:	mov    BYTE PTR [edi],0xd
  43a710:	cmp    BYTE PTR [eax],0xa
  43a713:	jne    0x43a71d
  43a715:	inc    eax
  43a716:	dec    ecx
  43a717:	mov    DWORD PTR [ebp-0x10],eax
  43a71a:	mov    DWORD PTR [ebp-0x8],ecx
  43a71d:	mov    ecx,DWORD PTR ds:0x4613d0
  43a723:	and    DWORD PTR ds:0x460574,0x0
  43a72a:	mov    BYTE PTR [edi+0x1],0xa
  43a72e:	add    edi,0x2
  43a731:	mov    DWORD PTR ds:0x4613d8,edi
  43a737:	test   ecx,ecx
  43a739:	je     0x43a75b
  43a73b:	mov    eax,ds:0x4613d4
  43a740:	inc    eax
  43a741:	mov    ds:0x4613d4,eax
  43a746:	cmp    eax,ecx
  43a748:	jb     0x43a75b
  43a74a:	call   0x4388fe
  43a74f:	mov    ebx,DWORD PTR ds:0x4613cc
  43a755:	mov    edi,DWORD PTR ds:0x4613d8
  43a75b:	mov    eax,ds:0x4613b4
  43a760:	test   eax,eax
  43a762:	je     0x43a777
  43a764:	mov    ecx,eax
  43a766:	call   0x439dfb
  43a76b:	mov    ebx,DWORD PTR ds:0x4613cc
  43a771:	mov    edi,DWORD PTR ds:0x4613d8
  43a777:	mov    DWORD PTR ds:0x460574,esi
  43a77d:	cmp    DWORD PTR [ebp-0x8],0x0
  43a781:	jne    0x43a552
  43a787:	pop    edi
  43a788:	pop    esi
  43a789:	pop    ebx
  43a78a:	leave  
  43a78b:	ret    
  43a78c:	push   esi
  43a78d:	mov    edx,ecx
  43a78f:	lea    esi,[ecx+0x1]
  43a792:	mov    al,BYTE PTR [ecx]
  43a794:	inc    ecx
  43a795:	test   al,al
  43a797:	jne    0x43a792
  43a799:	sub    ecx,esi
  43a79b:	pop    esi
  43a79c:	jmp    0x43a48e
  43a7a1:	mov    eax,edx
  43a7a3:	mov    edx,ecx
  43a7a5:	push   esi
  43a7a6:	mov    ecx,eax
  43a7a8:	call   0x43f54e
  43a7ad:	mov    esi,eax
  43a7af:	mov    ecx,esi
  43a7b1:	lea    eax,[ecx+0x1]
  43a7b4:	mov    dl,BYTE PTR [ecx]
  43a7b6:	inc    ecx
  43a7b7:	test   dl,dl
  43a7b9:	jne    0x43a7b4
  43a7bb:	sub    ecx,eax
  43a7bd:	mov    edx,esi
  43a7bf:	call   0x43a48e
  43a7c4:	push   esi
  43a7c5:	call   DWORD PTR ds:0x464354
  43a7cb:	pop    ecx
  43a7cc:	pop    esi
  43a7cd:	jmp    0x439ef0
  43a7d2:	push   ebx
  43a7d3:	mov    ebx,DWORD PTR ds:0x4632f8
  43a7d9:	push   esi
  43a7da:	mov    esi,DWORD PTR ds:0x4632f4
  43a7e0:	push   edi
  43a7e1:	mov    edi,DWORD PTR ds:0x4613d8
  43a7e7:	mov    ecx,0x4613e0
  43a7ec:	sub    ebx,esi
  43a7ee:	sub    edi,ecx
  43a7f0:	mov    eax,ecx
  43a7f2:	cmp    edi,ebx
  43a7f4:	jbe    0x43a82b
  43a7f6:	push   ebx
  43a7f7:	push   ecx
  43a7f8:	push   esi
  43a7f9:	call   0x447646
  43a7fe:	mov    ecx,DWORD PTR ds:0x45f9b0
  43a804:	mov    eax,0x1000
  43a809:	add    esp,0xc
  43a80c:	mov    WORD PTR [ecx+0x3a],ax
  43a810:	call   0x429cb5
  43a815:	mov    eax,ds:0x45f9b0
  43a81a:	sub    edi,ebx
  43a81c:	mov    esi,DWORD PTR [eax+0x3c]
  43a81f:	mov    DWORD PTR ds:0x4632f0,esi
  43a825:	lea    eax,[ebx+0x4613e0]
  43a82b:	push   edi
  43a82c:	push   eax
  43a82d:	push   esi
  43a82e:	call   0x447646
  43a833:	add    esp,0xc
  43a836:	add    esi,edi
  43a838:	pop    edi
  43a839:	mov    DWORD PTR ds:0x4632f4,esi
  43a83f:	pop    esi
  43a840:	mov    DWORD PTR ds:0x4613d8,0x4613e0
  43a84a:	pop    ebx
  43a84b:	ret    
  43a84c:	push   ebp
  43a84d:	mov    ebp,esp
  43a84f:	cmp    BYTE PTR ds:0x45f83b,0x0
  43a856:	jne    0x43a8a8
  43a858:	push   ebx
  43a859:	xor    ebx,ebx
  43a85b:	cmp    BYTE PTR ds:0x4613bc,bl
  43a861:	je     0x43a873
  43a863:	mov    DWORD PTR ds:0x4613dc,0x1
  43a86d:	mov    BYTE PTR ds:0x4613bc,bl
  43a873:	push   esi
  43a874:	mov    esi,DWORD PTR [ebp+0x8]
  43a877:	push   edi
  43a878:	movzx  ecx,WORD PTR [esi+0x1]
  43a87c:	lea    eax,[ecx-0x3]
  43a87f:	test   ax,ax
  43a882:	je     0x43a8a0
  43a884:	lea    edi,[esi+ecx*1]
  43a887:	add    esi,0x3
  43a88a:	mov    eax,0x2e03
  43a88f:	cmp    WORD PTR [esi],ax
  43a892:	jne    0x43a8ac
  43a894:	inc    DWORD PTR ds:0x4613c4
  43a89a:	mov    DWORD PTR ds:0x4613c8,ebx
  43a8a0:	call   0x4388fe
  43a8a5:	pop    edi
  43a8a6:	pop    esi
  43a8a7:	pop    ebx
  43a8a8:	pop    ebp
  43a8a9:	ret    0x4
  43a8ac:	cmp    BYTE PTR [esi],0x68
  43a8af:	je     0x43a8de
  43a8b1:	lea    edx,[ebp+0xb]
  43a8b4:	mov    ecx,esi
  43a8b6:	call   0x431d7f
  43a8bb:	movzx  eax,ax
  43a8be:	test   ax,ax
  43a8c1:	je     0x43a8d3
  43a8c3:	mov    ecx,0xff
  43a8c8:	cmp    ax,cx
  43a8cb:	jg     0x43a905
  43a8cd:	cmp    ax,0xe
  43a8d1:	jl     0x43a905
  43a8d3:	cwde   
  43a8d4:	mov    ds:0x4613d0,eax
  43a8d9:	movzx  eax,BYTE PTR [esi]
  43a8dc:	add    esi,eax
  43a8de:	inc    esi
  43a8df:	cmp    esi,edi
  43a8e1:	jae    0x43a8a5
  43a8e3:	lea    edx,[ebp+0xb]
  43a8e6:	mov    ecx,esi
  43a8e8:	call   0x431d7f
  43a8ed:	movzx  eax,ax
  43a8f0:	test   ax,ax
  43a8f3:	je     0x43a914
  43a8f5:	mov    ecx,0xff
  43a8fa:	cmp    ax,cx
  43a8fd:	jg     0x43a905
  43a8ff:	cmp    ax,0x3c
  43a903:	jge    0x43a914
  43a905:	push   ebx
  43a906:	xor    edx,edx
  43a908:	mov    ecx,0x86c
  43a90d:	call   0x42ee80
  43a912:	jmp    0x43a8a5
  43a914:	cwde   
  43a915:	mov    ds:0x4613cc,eax
  43a91a:	jmp    0x43a8a5
  43a91c:	push   ebp
  43a91d:	mov    ebp,esp
  43a91f:	cmp    BYTE PTR ds:0x4613bc,0x0
  43a926:	je     0x43a939
  43a928:	mov    DWORD PTR ds:0x4613dc,0x1
  43a932:	mov    BYTE PTR ds:0x4613bc,0x0
  43a939:	push   esi
  43a93a:	push   edi
  43a93b:	mov    edi,DWORD PTR [ebp+0x8]
  43a93e:	mov    eax,DWORD PTR [edi+0x3]
  43a941:	movzx  esi,BYTE PTR [eax+0x23]
  43a945:	mov    eax,ds:0x4613d8
  43a94a:	add    eax,0x1c
  43a94d:	cmp    eax,0x4617e0
  43a952:	jbe    0x43a959
  43a954:	call   0x43a7d2
  43a959:	cmp    DWORD PTR ds:0x460574,0x0
  43a960:	jne    0x43a983
  43a962:	mov    ecx,DWORD PTR ds:0x45f830
  43a968:	sub    ecx,esi
  43a96a:	call   0x439c80
  43a96f:	mov    eax,ds:0x4613d8
  43a974:	mov    BYTE PTR [eax],0x20
  43a977:	inc    eax
  43a978:	inc    DWORD PTR ds:0x460574
  43a97e:	mov    ds:0x4613d8,eax
  43a983:	mov    ecx,edi
  43a985:	call   0x4273b2
  43a98a:	push   0x0
  43a98c:	mov    edx,esi
  43a98e:	lea    ecx,[ebp+0x8]
  43a991:	mov    DWORD PTR [ebp+0x8],eax
  43a994:	call   0x439aa7
  43a999:	pop    edi
  43a99a:	pop    esi
  43a99b:	pop    ebp
  43a99c:	ret    0x4
  43a99f:	push   ebp
  43a9a0:	mov    ebp,esp
  43a9a2:	cmp    BYTE PTR ds:0x4613bc,0x0
  43a9a9:	je     0x43a9bc
  43a9ab:	mov    DWORD PTR ds:0x4613dc,0x1
  43a9b5:	mov    BYTE PTR ds:0x4613bc,0x0
  43a9bc:	push   esi
  43a9bd:	mov    esi,DWORD PTR [ebp+0x8]
  43a9c0:	mov    cl,BYTE PTR [esi]
  43a9c2:	cmp    cl,0x57
  43a9c5:	jne    0x43a9dc
  43a9c7:	mov    eax,DWORD PTR [esi+0x3]
  43a9ca:	push   esi
  43a9cb:	movzx  eax,BYTE PTR [eax+0x23]
  43a9cf:	add    DWORD PTR ds:0x45f830,eax
  43a9d5:	call   0x43a91c
  43a9da:	jmp    0x43aa05
  43a9dc:	movzx  eax,cl
  43a9df:	movzx  ecx,cl
  43a9e2:	push   eax
  43a9e3:	call   0x446047
  43a9e8:	lea    ecx,[esi+0x3]
  43a9eb:	mov    edx,eax
  43a9ed:	call   0x421d9c
  43a9f2:	movzx  eax,BYTE PTR ds:0x44df09
  43a9f9:	add    DWORD PTR ds:0x45f830,eax
  43a9ff:	push   esi
  43aa00:	call   0x438dd0
  43aa05:	pop    esi
  43aa06:	pop    ebp
  43aa07:	ret    0x4
  43aa0a:	cmp    BYTE PTR ds:0x4613bc,0x0
  43aa11:	mov    edx,ecx
  43aa13:	je     0x43aa26
  43aa15:	mov    DWORD PTR ds:0x4613dc,0x1
  43aa1f:	mov    BYTE PTR ds:0x4613bc,0x0
  43aa26:	mov    ecx,DWORD PTR ds:0x463308
  43aa2c:	mov    eax,ds:0x45f830
  43aa31:	and    DWORD PTR ds:0x45f830,0x0
  43aa38:	inc    ecx
  43aa39:	cmp    BYTE PTR ds:0x45f83b,0x0
  43aa40:	mov    DWORD PTR ds:0x463308,ecx
  43aa46:	mov    ds:0x46330c,eax
  43aa4b:	jne    0x43aa7b
  43aa4d:	mov    eax,DWORD PTR [edx+0x4]
  43aa50:	test   eax,eax
  43aa52:	je     0x43aa65
  43aa54:	mov    ecx,DWORD PTR [eax+0x1c]
  43aa57:	mov    ecx,DWORD PTR [ecx+0x10]
  43aa5a:	call   0x439c80
  43aa5f:	mov    ecx,DWORD PTR ds:0x463308
  43aa65:	cmp    ecx,0x1
  43aa68:	jg     0x43aa7b
  43aa6a:	push   edi
  43aa6b:	push   0x11
  43aa6d:	pop    ecx
  43aa6e:	mov    eax,0x43a99f
  43aa73:	mov    edi,0x448dc0
  43aa78:	rep stos DWORD PTR es:[edi],eax
  43aa7a:	pop    edi
  43aa7b:	ret    
  43aa7c:	dec    DWORD PTR ds:0x463308
  43aa82:	jne    0x43aab0
  43aa84:	and    DWORD PTR ds:0x4613dc,0x0
  43aa8b:	push   edi
  43aa8c:	push   0x11
  43aa8e:	pop    ecx
  43aa8f:	mov    eax,0x438dd0
  43aa94:	mov    edi,0x448dc0
  43aa99:	rep stos DWORD PTR es:[edi],eax
  43aa9b:	mov    eax,ds:0x46330c
  43aaa0:	mov    DWORD PTR ds:0x448db8,0x438ae0
  43aaaa:	mov    ds:0x45f830,eax
  43aaaf:	pop    edi
  43aab0:	ret    0x4
  43aab3:	push   ebp
  43aab4:	mov    ebp,esp
  43aab6:	cmp    BYTE PTR ds:0x4613bc,0x0
  43aabd:	je     0x43aad0
  43aabf:	mov    DWORD PTR ds:0x4613dc,0x1
  43aac9:	mov    BYTE PTR ds:0x4613bc,0x0
  43aad0:	cmp    BYTE PTR ds:0x45f83b,0x0
  43aad7:	jne    0x43ab7b
  43aadd:	mov    edx,DWORD PTR ds:0x460574
  43aae3:	test   edx,edx
  43aae5:	jne    0x43aaf4
  43aae7:	mov    ecx,DWORD PTR ds:0x45f830
  43aaed:	call   0x439c80
  43aaf2:	jmp    0x43ab15
  43aaf4:	movzx  ecx,BYTE PTR ds:0x4613bd
  43aafb:	mov    eax,ds:0x4613b8
  43ab00:	neg    ecx
  43ab02:	sbb    ecx,ecx
  43ab04:	and    ecx,0x5
  43ab07:	add    eax,0xa
  43ab0a:	add    eax,ecx
  43ab0c:	cmp    edx,eax
  43ab0e:	jbe    0x43ab1b
  43ab10:	call   0x439ef0
  43ab15:	mov    edx,DWORD PTR ds:0x460574
  43ab1b:	movzx  ecx,BYTE PTR ds:0x4613bd
  43ab22:	mov    eax,ds:0x4613b8
  43ab27:	neg    ecx
  43ab29:	sbb    ecx,ecx
  43ab2b:	and    ecx,0x5
  43ab2e:	add    eax,0xa
  43ab31:	add    ecx,eax
  43ab33:	cmp    edx,ecx
  43ab35:	jae    0x43ab3c
  43ab37:	call   0x439dfb
  43ab3c:	mov    ecx,DWORD PTR [ebp+0x8]
  43ab3f:	mov    ecx,DWORD PTR [ecx+0x7]
  43ab42:	call   0x439c80
  43ab47:	mov    ecx,0x41f600
  43ab4c:	call   0x43a78c
  43ab51:	call   0x439ef0
  43ab56:	mov    ecx,DWORD PTR ds:0x4613b8
  43ab5c:	movzx  eax,BYTE PTR ds:0x4613bd
  43ab63:	inc    ecx
  43ab64:	neg    eax
  43ab66:	sbb    eax,eax
  43ab68:	mov    DWORD PTR ds:0x4613b8,ecx
  43ab6e:	and    eax,0x5
  43ab71:	add    ecx,0xa
  43ab74:	add    ecx,eax
  43ab76:	call   0x439dfb
  43ab7b:	pop    ebp
  43ab7c:	ret    0x4
  43ab7f:	cmp    BYTE PTR ds:0x45f83b,0x0
  43ab86:	jne    0x43abda
  43ab88:	movzx  ecx,BYTE PTR ds:0x4613bd
  43ab8f:	mov    eax,ds:0x4613b8
  43ab94:	neg    ecx
  43ab96:	sbb    ecx,ecx
  43ab98:	and    ecx,0x5
  43ab9b:	add    eax,0xa
  43ab9e:	add    eax,ecx
  43aba0:	cmp    DWORD PTR ds:0x460574,eax
  43aba6:	jbe    0x43abca
  43aba8:	call   0x439ef0
  43abad:	movzx  ecx,BYTE PTR ds:0x4613bd
  43abb4:	mov    eax,ds:0x4613b8
  43abb9:	neg    ecx
  43abbb:	sbb    ecx,ecx
  43abbd:	and    ecx,0x5
  43abc0:	add    eax,0xa
  43abc3:	add    ecx,eax
  43abc5:	call   0x439dfb
  43abca:	mov    ecx,0x41f5cc
  43abcf:	call   0x43a78c
  43abd4:	dec    DWORD PTR ds:0x4613b8
  43abda:	ret    0x4
  43abdd:	push   ebp
  43abde:	mov    ebp,esp
  43abe0:	mov    eax,DWORD PTR [ebp+0x8]
  43abe3:	mov    eax,DWORD PTR [eax+0x3]
  43abe6:	mov    ds:0x45f830,eax
  43abeb:	pop    ebp
  43abec:	ret    0x4
  43abef:	int3   
  43abf0:	int3   
  43abf1:	push   ebp
  43abf2:	mov    ebp,esp
  43abf4:	sub    esp,0x14
  43abf7:	cmp    BYTE PTR ds:0x44f551,0x0
  43abfe:	push   ebx
  43abff:	push   esi
  43ac00:	mov    ebx,ecx
  43ac02:	push   edi
  43ac03:	mov    DWORD PTR [ebp-0x14],ebx
  43ac06:	je     0x43ac70
  43ac08:	cmp    BYTE PTR ds:0x44f550,0x0
  43ac0f:	jne    0x43ac70
  43ac11:	cmp    BYTE PTR ds:0x4605b6,0x0
  43ac18:	jne    0x43ac70
  43ac1a:	cmp    DWORD PTR ds:0x460e38,0x0
  43ac21:	je     0x43ac70
  43ac23:	movzx  eax,dl
  43ac26:	cmp    BYTE PTR [eax+0x404d68],0x0
  43ac2d:	jne    0x43ac35
  43ac2f:	cmp    BYTE PTR [ebp+0x8],0x0
  43ac33:	je     0x43ac70
  43ac35:	cmp    BYTE PTR ds:0x45f993,0x0
  43ac3c:	jne    0x43ac70
  43ac3e:	mov    eax,ds:0x460e38
  43ac43:	mov    ecx,DWORD PTR ds:0x44f538
  43ac49:	sub    eax,ecx
  43ac4b:	je     0x43ac61
  43ac4d:	cmp    BYTE PTR [ecx+eax*1-0x1],0x1a
  43ac52:	jne    0x43ac55
  43ac54:	dec    eax
  43ac55:	test   eax,eax
  43ac57:	je     0x43ac61
  43ac59:	cmp    BYTE PTR [ecx+eax*1-0x1],0xd
  43ac5e:	jne    0x43ac61
  43ac60:	dec    eax
  43ac61:	push   ecx
  43ac62:	push   eax
  43ac63:	push   0x41f3cc
  43ac68:	call   0x441da9
  43ac6d:	add    esp,0xc
  43ac70:	mov    ecx,DWORD PTR ds:0x44f538
  43ac76:	mov    al,ds:0x44f54d
  43ac7b:	xor    ah,ah
  43ac7d:	mov    edx,ecx
  43ac7f:	mov    BYTE PTR ds:0x44f550,0x0
  43ac86:	mov    DWORD PTR [ebp-0x4],edx
  43ac89:	mov    BYTE PTR [ebp+0xb],ah
  43ac8c:	test   al,al
  43ac8e:	je     0x43affc
  43ac94:	mov    esi,DWORD PTR ds:0x460574
  43ac9a:	cmp    edx,DWORD PTR ds:0x460e38
  43aca0:	jae    0x43afca
  43aca6:	test   ah,ah
  43aca8:	jne    0x43afca
  43acae:	test   BYTE PTR ds:0x45f83b,0x1
  43acb5:	jne    0x43affc
  43acbb:	cmp    BYTE PTR ds:0x45f99e,ah
  43acc1:	jne    0x43accf
  43acc3:	cmp    BYTE PTR ds:0x45f993,ah
  43acc9:	jne    0x43affc
  43accf:	test   ebx,ebx
  43acd1:	je     0x43ace0
  43acd3:	movzx  eax,BYTE PTR [ebx+0x1]
  43acd7:	neg    eax
  43acd9:	sbb    eax,eax
  43acdb:	and    ebx,eax
  43acdd:	mov    DWORD PTR [ebp-0x14],ebx
  43ace0:	mov    dl,BYTE PTR ds:0x45f992
  43ace6:	test   dl,dl
  43ace8:	je     0x43ad27
  43acea:	mov    al,ds:0x45f99f
  43acef:	test   al,al
  43acf1:	je     0x43affc
  43acf7:	cmp    al,0x1
  43acf9:	jne    0x43ad27
  43acfb:	test   ebx,ebx
  43acfd:	je     0x43affc
  43ad03:	mov    al,BYTE PTR [ebx]
  43ad05:	cmp    al,0x61
  43ad07:	jae    0x43ad1a
  43ad09:	movzx  eax,al
  43ad0c:	cmp    DWORD PTR [eax*4+0x448d98],0x0
  43ad14:	je     0x43affc
  43ad1a:	cmp    BYTE PTR ds:0x4605b6,0x0
  43ad21:	jne    0x43affc
  43ad27:	mov    eax,ds:0x460e38
  43ad2c:	inc    DWORD PTR ds:0x460e38
  43ad32:	mov    BYTE PTR [eax],0xa
  43ad35:	test   ebx,ebx
  43ad37:	je     0x43ad6b
  43ad39:	cmp    BYTE PTR ds:0x4605b6,0x0
  43ad40:	jne    0x43ad6b
  43ad42:	mov    al,BYTE PTR [ebx]
  43ad44:	cmp    al,0x61
  43ad46:	jae    0x43ad6b
  43ad48:	movzx  eax,al
  43ad4b:	mov    eax,DWORD PTR [eax*4+0x404e30]
  43ad52:	test   eax,eax
  43ad54:	je     0x43ad6b
  43ad56:	push   ebx
  43ad57:	call   eax
  43ad59:	mov    ecx,DWORD PTR ds:0x44f538
  43ad5f:	mov    dl,BYTE PTR ds:0x45f992
  43ad65:	mov    esi,DWORD PTR ds:0x460574
  43ad6b:	xor    ebx,ebx
  43ad6d:	mov    DWORD PTR ds:0x4613dc,ebx
  43ad73:	test   dl,dl
  43ad75:	je     0x43adbe
  43ad77:	push   0x1c
  43ad79:	pop    ecx
  43ad7a:	call   0x439dfb
  43ad7f:	mov    edx,DWORD PTR ds:0x4600fc
  43ad85:	sub    edx,DWORD PTR ds:0x460578
  43ad8b:	cmp    edx,0x9
  43ad8e:	jbe    0x43ad95
  43ad90:	lea    ecx,[ebp-0x10]
  43ad93:	jmp    0x43ada0
  43ad95:	test   edx,edx
  43ad97:	jle    0x43adaa
  43ad99:	mov    BYTE PTR [ebp-0x10],0x20
  43ad9d:	lea    ecx,[ebp-0xf]
  43ada0:	push   0xa
  43ada2:	push   ebx
  43ada3:	call   0x42ea92
  43ada8:	mov    BYTE PTR [eax],bl
  43adaa:	lea    ecx,[ebp-0x10]
  43adad:	call   0x43a78c
  43adb2:	mov    ecx,DWORD PTR ds:0x44f538
  43adb8:	mov    esi,DWORD PTR ds:0x460574
  43adbe:	cmp    WORD PTR ds:0x4605bc,bx
  43adc5:	jbe    0x43ade0
  43adc7:	cmp    esi,0x1e
  43adca:	jae    0x43add4
  43adcc:	push   0x1e
  43adce:	pop    ecx
  43adcf:	call   0x439dfb
  43add4:	mov    ecx,0x41f5fc
  43add9:	call   0x43a78c
  43adde:	jmp    0x43adfc
  43ade0:	cmp    DWORD PTR ds:0x4600fc,ebx
  43ade6:	jne    0x43adf4
  43ade8:	mov    eax,ds:0x460e38
  43aded:	sub    eax,ecx
  43adef:	cmp    eax,0x1
  43adf2:	jle    0x43ae08
  43adf4:	push   0x20
  43adf6:	pop    ecx
  43adf7:	call   0x439dfb
  43adfc:	mov    esi,DWORD PTR ds:0x460574
  43ae02:	mov    ecx,DWORD PTR ds:0x44f538
  43ae08:	mov    edx,DWORD PTR ds:0x4613d8
  43ae0e:	mov    edi,DWORD PTR ds:0x460e38
  43ae14:	mov    ebx,0x4617e0
  43ae19:	sub    ebx,edx
  43ae1b:	sub    edi,ecx
  43ae1d:	mov    DWORD PTR [ebp-0x8],ebx
  43ae20:	mov    DWORD PTR [ebp-0xc],edi
  43ae23:	test   ebx,ebx
  43ae25:	je     0x43af08
  43ae2b:	test   edi,edi
  43ae2d:	je     0x43af04
  43ae33:	cmp    BYTE PTR ds:0x463394,0x0
  43ae3a:	je     0x43ae45
  43ae3c:	mov    BYTE PTR ds:0x463394,0x0
  43ae43:	jmp    0x43ae8e
  43ae45:	mov    eax,DWORD PTR [ebp-0x4]
  43ae48:	mov    bl,BYTE PTR [eax]
  43ae4a:	movzx  eax,bl
  43ae4d:	cmp    BYTE PTR [eax+0x4630d0],0x0
  43ae54:	je     0x43ae73
  43ae56:	mov    edi,DWORD PTR ds:0x4613cc
  43ae5c:	test   edi,edi
  43ae5e:	je     0x43ae67
  43ae60:	lea    eax,[esi+0x1]
  43ae63:	cmp    eax,edi
  43ae65:	jae    0x43aed0
  43ae67:	mov    edi,DWORD PTR [ebp-0xc]
  43ae6a:	mov    BYTE PTR ds:0x463394,0x1
  43ae71:	jmp    0x43ae8b
  43ae73:	cmp    bl,0x9
  43ae76:	jne    0x43ae80
  43ae78:	and    esi,0xfffffff8
  43ae7b:	add    esi,0x7
  43ae7e:	jmp    0x43ae8b
  43ae80:	cmp    bl,0x1a
  43ae83:	jne    0x43ae8b
  43ae85:	mov    ebx,DWORD PTR [ebp-0x4]
  43ae88:	mov    BYTE PTR [ebx],0x20
  43ae8b:	mov    ebx,DWORD PTR [ebp-0x8]
  43ae8e:	mov    eax,DWORD PTR [ebp-0x4]
  43ae91:	inc    esi
  43ae92:	mov    al,BYTE PTR [eax]
  43ae94:	mov    BYTE PTR [edx],al
  43ae96:	mov    eax,DWORD PTR [ebp-0x4]
  43ae99:	inc    edx
  43ae9a:	mov    al,BYTE PTR [eax]
  43ae9c:	dec    ebx
  43ae9d:	dec    edi
  43ae9e:	inc    DWORD PTR [ebp-0x4]
  43aea1:	mov    DWORD PTR ds:0x460574,esi
  43aea7:	mov    DWORD PTR [ebp-0x8],ebx
  43aeaa:	mov    DWORD PTR [ebp-0xc],edi
  43aead:	cmp    al,0xa
  43aeaf:	je     0x43aee1
  43aeb1:	mov    edi,DWORD PTR ds:0x4613cc
  43aeb7:	test   edi,edi
  43aeb9:	je     0x43aebf
  43aebb:	cmp    esi,edi
  43aebd:	jae    0x43aede
  43aebf:	mov    edi,DWORD PTR [ebp-0xc]
  43aec2:	test   ebx,ebx
  43aec4:	je     0x43aee1
  43aec6:	test   edi,edi
  43aec8:	jne    0x43ae33
  43aece:	jmp    0x43aee1
  43aed0:	mov    ebx,DWORD PTR [ebp-0x8]
  43aed3:	inc    esi
  43aed4:	mov    BYTE PTR [edx],0x20
  43aed7:	mov    DWORD PTR ds:0x460574,esi
  43aedd:	inc    edx
  43aede:	mov    edi,DWORD PTR [ebp-0xc]
  43aee1:	mov    eax,DWORD PTR [ebp-0x4]
  43aee4:	cmp    BYTE PTR [eax-0x1],0xa
  43aee8:	sete   al
  43aeeb:	mov    BYTE PTR [ebp+0xb],al
  43aeee:	test   al,al
  43aef0:	je     0x43aef6
  43aef2:	test   edi,edi
  43aef4:	jne    0x43af72
  43aef6:	mov    edi,DWORD PTR ds:0x4613cc
  43aefc:	test   edi,edi
  43aefe:	je     0x43af04
  43af00:	cmp    esi,edi
  43af02:	jae    0x43af3c
  43af04:	test   ebx,ebx
  43af06:	jne    0x43af25
  43af08:	mov    DWORD PTR ds:0x4613d8,edx
  43af0e:	call   0x43a7d2
  43af13:	mov    edx,DWORD PTR ds:0x4613d8
  43af19:	mov    ecx,DWORD PTR ds:0x44f538
  43af1f:	mov    esi,DWORD PTR ds:0x460574
  43af25:	mov    ebx,DWORD PTR [ebp-0x4]
  43af28:	cmp    ebx,DWORD PTR ds:0x460e38
  43af2e:	jae    0x43af72
  43af30:	cmp    BYTE PTR [ebp+0xb],0x0
  43af34:	je     0x43ae0e
  43af3a:	jmp    0x43af72
  43af3c:	mov    bl,BYTE PTR [edx-0x1]
  43af3f:	lea    eax,[edx+0x2]
  43af42:	cmp    eax,0x4617e0
  43af47:	jb     0x43af60
  43af49:	mov    DWORD PTR ds:0x4613d8,edx
  43af4f:	call   0x43a7d2
  43af54:	mov    edx,DWORD PTR ds:0x4613d8
  43af5a:	mov    ecx,DWORD PTR ds:0x44f538
  43af60:	cmp    bl,0xa
  43af63:	je     0x43af72
  43af65:	cmp    bl,0xd
  43af68:	je     0x43af6e
  43af6a:	mov    BYTE PTR [edx],0xd
  43af6d:	inc    edx
  43af6e:	mov    BYTE PTR [edx],0xa
  43af71:	inc    edx
  43af72:	mov    DWORD PTR ds:0x4613d8,edx
  43af78:	mov    edx,DWORD PTR ds:0x4613d0
  43af7e:	xor    esi,esi
  43af80:	mov    DWORD PTR ds:0x460574,esi
  43af86:	test   edx,edx
  43af88:	je     0x43afb3
  43af8a:	cmp    BYTE PTR ds:0x45f83b,0x0
  43af91:	mov    eax,ds:0x4613d4
  43af96:	jne    0x43af9e
  43af98:	inc    eax
  43af99:	mov    ds:0x4613d4,eax
  43af9e:	cmp    eax,edx
  43afa0:	jb     0x43afb3
  43afa2:	call   0x4388fe
  43afa7:	mov    ecx,DWORD PTR ds:0x44f538
  43afad:	mov    esi,DWORD PTR ds:0x460574
  43afb3:	mov    al,ds:0x44f54d
  43afb8:	test   al,al
  43afba:	je     0x43affc
  43afbc:	mov    ebx,DWORD PTR [ebp-0x14]
  43afbf:	mov    edx,DWORD PTR [ebp-0x4]
  43afc2:	mov    ah,BYTE PTR [ebp+0xb]
  43afc5:	jmp    0x43ac9a
  43afca:	test   al,al
  43afcc:	je     0x43affc
  43afce:	cmp    ecx,DWORD PTR ds:0x460e38
  43afd4:	je     0x43affc
  43afd6:	mov    eax,ds:0x4600f8
  43afdb:	test   eax,eax
  43afdd:	je     0x43affc
  43afdf:	mov    ecx,eax
  43afe1:	call   0x439f81
  43afe6:	mov    eax,ds:0x4600f8
  43afeb:	mov    eax,DWORD PTR [eax]
  43afed:	mov    ds:0x4600f8,eax
  43aff2:	test   eax,eax
  43aff4:	jne    0x43afdf
  43aff6:	mov    ecx,DWORD PTR ds:0x44f538
  43affc:	pop    edi
  43affd:	pop    esi
  43affe:	mov    DWORD PTR ds:0x460e38,ecx
  43b004:	pop    ebx
  43b005:	leave  
  43b006:	ret    0x4
  43b009:	push   0x0
  43b00b:	xor    dl,dl
  43b00d:	xor    ecx,ecx
  43b00f:	call   0x43abf1
  43b014:	mov    eax,ds:0x4600f8
  43b019:	jmp    0x43b02e
  43b01b:	mov    ecx,eax
  43b01d:	call   0x439f81
  43b022:	mov    eax,ds:0x4600f8
  43b027:	mov    eax,DWORD PTR [eax]
  43b029:	mov    ds:0x4600f8,eax
  43b02e:	test   eax,eax
  43b030:	jne    0x43b01b
  43b032:	cmp    BYTE PTR ds:0x44887b,al
  43b038:	je     0x43b03f
  43b03a:	call   0x43b42b
  43b03f:	call   0x43a7d2
  43b044:	mov    ecx,DWORD PTR ds:0x4632f4
  43b04a:	sub    ecx,DWORD PTR ds:0x4632f0
  43b050:	mov    eax,ds:0x45f9b0
  43b055:	mov    WORD PTR [eax+0x3a],cx
  43b059:	ret    
  43b05a:	push   ebp
  43b05b:	mov    ebp,esp
  43b05d:	cmp    BYTE PTR ds:0x4613bc,0x0
  43b064:	je     0x43b077
  43b066:	mov    DWORD PTR ds:0x4613dc,0x1
  43b070:	mov    BYTE PTR ds:0x4613bc,0x0
  43b077:	mov    eax,DWORD PTR [ebp+0x8]
  43b07a:	mov    cl,BYTE PTR [eax+0x3]
  43b07d:	mov    al,cl
  43b07f:	cmp    al,0x1
  43b081:	jbe    0x43b0a1
  43b083:	cmp    al,0x3
  43b085:	je     0x43b0a1
  43b087:	cmp    al,0x4
  43b089:	je     0x43b098
  43b08b:	cmp    al,0x5
  43b08d:	jne    0x43b0a7
  43b08f:	mov    BYTE PTR ds:0x45f83b,0x0
  43b096:	jmp    0x43b0a7
  43b098:	mov    BYTE PTR ds:0x45f83b,0x1
  43b09f:	jmp    0x43b0a7
  43b0a1:	mov    BYTE PTR ds:0x45f99f,cl
  43b0a7:	pop    ebp
  43b0a8:	ret    0x4
  43b0ab:	push   ebp
  43b0ac:	mov    ebp,esp
  43b0ae:	sub    esp,0x60
  43b0b1:	mov    eax,ds:0x448858
  43b0b6:	xor    eax,ebp
  43b0b8:	mov    DWORD PTR [ebp-0x4],eax
  43b0bb:	cmp    BYTE PTR ds:0x4613aa,0x0
  43b0c2:	mov    dl,BYTE PTR ds:0x45f83b
  43b0c8:	push   ebx
  43b0c9:	mov    bh,dl
  43b0cb:	mov    BYTE PTR [ebp-0x55],bh
  43b0ce:	je     0x43b0dd
  43b0d0:	cmp    BYTE PTR ds:0x44f54f,0x0
  43b0d7:	je     0x43b248
  43b0dd:	cmp    BYTE PTR ds:0x4613ab,0x0
  43b0e4:	je     0x43b0f5
  43b0e6:	mov    dl,0x1
  43b0e8:	mov    BYTE PTR ds:0x45f83b,dl
  43b0ee:	mov    BYTE PTR ds:0x4613ab,0x0
  43b0f5:	push   esi
  43b0f6:	xor    esi,esi
  43b0f8:	cmp    BYTE PTR ds:0x45f992,0x0
  43b0ff:	push   edi
  43b100:	je     0x43b148
  43b102:	mov    eax,ds:0x4600fc
  43b107:	imul   eax,eax,0x1c
  43b10a:	mov    edi,0x460100
  43b10f:	lea    ecx,[eax+0x4600e4]
  43b115:	lea    ebx,[edi-0x38]
  43b118:	cmp    ecx,ebx
  43b11a:	je     0x43b145
  43b11c:	sub    edi,0x1c
  43b11f:	cmp    ecx,edi
  43b121:	je     0x43b138
  43b123:	cmp    BYTE PTR [ecx+0xe],0x0
  43b127:	jne    0x43b145
  43b129:	cmp    DWORD PTR [ecx],0x0
  43b12c:	jne    0x43b138
  43b12e:	mov    ax,WORD PTR [ecx+0xc]
  43b132:	mov    WORD PTR [ebp+esi*2-0x54],ax
  43b137:	inc    esi
  43b138:	cmp    BYTE PTR [ecx+0xe],0x0
  43b13c:	jne    0x43b145
  43b13e:	sub    ecx,0x1c
  43b141:	cmp    ecx,ebx
  43b143:	jne    0x43b11f
  43b145:	mov    bh,BYTE PTR [ebp-0x55]
  43b148:	mov    ecx,DWORD PTR ds:0x45f9a0
  43b14e:	mov    edi,DWORD PTR ds:0x45f9b4
  43b154:	mov    eax,DWORD PTR [ecx]
  43b156:	test   eax,eax
  43b158:	setne  bl
  43b15b:	xor    ecx,ecx
  43b15d:	mov    DWORD PTR [ebp-0x5c],eax
  43b160:	test   esi,esi
  43b162:	je     0x43b182
  43b164:	test   bl,bl
  43b166:	je     0x43b194
  43b168:	mov    eax,DWORD PTR [eax+0xc]
  43b16b:	mov    ax,WORD PTR [eax+ecx*2]
  43b16f:	cmp    ax,WORD PTR [ebp+ecx*2-0x54]
  43b174:	mov    eax,DWORD PTR [ebp-0x5c]
  43b177:	jne    0x43b180
  43b179:	inc    ecx
  43b17a:	cmp    ecx,esi
  43b17c:	jb     0x43b164
  43b17e:	jmp    0x43b182
  43b180:	xor    bl,bl
  43b182:	test   bl,bl
  43b184:	je     0x43b194
  43b186:	mov    eax,DWORD PTR [eax+0x4]
  43b189:	cmp    DWORD PTR [edi],eax
  43b18b:	sbb    al,al
  43b18d:	and    al,dl
  43b18f:	mov    ds:0x45f83b,al
  43b194:	mov    eax,DWORD PTR [edi]
  43b196:	mov    DWORD PTR [ebp-0x5c],eax
  43b199:	mov    BYTE PTR ds:0x4613be,0x1
  43b1a0:	call   0x439ef0
  43b1a5:	mov    edi,DWORD PTR ds:0x45f9b4
  43b1ab:	mov    ecx,DWORD PTR ds:0x45f9a0
  43b1b1:	mov    eax,DWORD PTR [edi]
  43b1b3:	cmp    DWORD PTR [ecx],0x0
  43b1b6:	mov    BYTE PTR ds:0x4613be,0x0
  43b1bd:	mov    DWORD PTR [ebp-0x60],eax
  43b1c0:	mov    bl,0x1
  43b1c2:	je     0x43b21b
  43b1c4:	xor    edx,edx
  43b1c6:	test   esi,esi
  43b1c8:	je     0x43b1e7
  43b1ca:	test   bl,bl
  43b1cc:	je     0x43b21b
  43b1ce:	mov    eax,DWORD PTR [ecx]
  43b1d0:	mov    eax,DWORD PTR [eax+0xc]
  43b1d3:	mov    ax,WORD PTR [eax+edx*2]
  43b1d7:	cmp    ax,WORD PTR [ebp+edx*2-0x54]
  43b1dc:	jne    0x43b1e5
  43b1de:	inc    edx
  43b1df:	cmp    edx,esi
  43b1e1:	jb     0x43b1ca
  43b1e3:	jmp    0x43b1e7
  43b1e5:	xor    bl,bl
  43b1e7:	test   bl,bl
  43b1e9:	je     0x43b21b
  43b1eb:	mov    eax,DWORD PTR [ecx]
  43b1ed:	mov    eax,DWORD PTR [eax+0x4]
  43b1f0:	cmp    eax,DWORD PTR [edi]
  43b1f2:	jae    0x43b21b
  43b1f4:	mov    eax,DWORD PTR [ebp-0x5c]
  43b1f7:	mov    DWORD PTR [edi],eax
  43b1f9:	mov    ecx,DWORD PTR [ecx]
  43b1fb:	call   0x439f81
  43b200:	mov    edi,DWORD PTR ds:0x45f9b4
  43b206:	mov    eax,DWORD PTR [ebp-0x60]
  43b209:	mov    ecx,DWORD PTR ds:0x45f9a0
  43b20f:	mov    DWORD PTR [edi],eax
  43b211:	mov    eax,DWORD PTR [ecx]
  43b213:	mov    eax,DWORD PTR [eax]
  43b215:	mov    DWORD PTR [ecx],eax
  43b217:	test   eax,eax
  43b219:	jne    0x43b1c4
  43b21b:	cmp    DWORD PTR ds:0x4613dc,0x0
  43b222:	jle    0x43b22f
  43b224:	mov    dl,BYTE PTR ds:0x45f83b
  43b22a:	jmp    0x43b154
  43b22f:	pop    edi
  43b230:	mov    BYTE PTR ds:0x4613bc,0x1
  43b237:	mov    DWORD PTR ds:0x4613dc,0x1
  43b241:	mov    BYTE PTR ds:0x45f83b,bh
  43b247:	pop    esi
  43b248:	mov    ecx,DWORD PTR [ebp-0x4]
  43b24b:	xor    ecx,ebp
  43b24d:	pop    ebx
  43b24e:	call   0x446dc7
  43b253:	leave  
  43b254:	ret    0x4
  43b257:	push   ebp
  43b258:	mov    ebp,esp
  43b25a:	sub    esp,0x64
  43b25d:	mov    eax,ds:0x448858
  43b262:	xor    eax,ebp
  43b264:	mov    DWORD PTR [ebp-0x4],eax
  43b267:	mov    cl,BYTE PTR ds:0x45f992
  43b26d:	mov    dl,BYTE PTR ds:0x45f83b
  43b273:	mov    BYTE PTR [ebp-0x57],dl
  43b276:	test   cl,cl
  43b278:	je     0x43b28b
  43b27a:	cmp    BYTE PTR ds:0x45f99f,0x1
  43b281:	jne    0x43b28b
  43b283:	mov    dl,0x1
  43b285:	mov    BYTE PTR ds:0x45f83b,dl
  43b28b:	mov    eax,DWORD PTR [ebp+0x8]
  43b28e:	push   ebx
  43b28f:	mov    eax,DWORD PTR [eax+0x3]
  43b292:	push   esi
  43b293:	xor    esi,esi
  43b295:	push   edi
  43b296:	mov    BYTE PTR [ebp-0x56],dl
  43b299:	mov    DWORD PTR [ebp-0x5c],eax
  43b29c:	test   cl,cl
  43b29e:	je     0x43b2e6
  43b2a0:	mov    eax,ds:0x4600fc
  43b2a5:	imul   eax,eax,0x1c
  43b2a8:	mov    edi,0x460100
  43b2ad:	lea    ecx,[eax+0x4600e4]
  43b2b3:	lea    ebx,[edi-0x38]
  43b2b6:	cmp    ecx,ebx
  43b2b8:	je     0x43b2e3
  43b2ba:	sub    edi,0x1c
  43b2bd:	cmp    ecx,edi
  43b2bf:	je     0x43b2d6
  43b2c1:	cmp    BYTE PTR [ecx+0xe],0x0
  43b2c5:	jne    0x43b2e3
  43b2c7:	cmp    DWORD PTR [ecx],0x0
  43b2ca:	jne    0x43b2d6
  43b2cc:	mov    ax,WORD PTR [ecx+0xc]
  43b2d0:	mov    WORD PTR [ebp+esi*2-0x54],ax
  43b2d5:	inc    esi
  43b2d6:	cmp    BYTE PTR [ecx+0xe],0x0
  43b2da:	jne    0x43b2e3
  43b2dc:	sub    ecx,0x1c
  43b2df:	cmp    ecx,ebx
  43b2e1:	jne    0x43b2bd
  43b2e3:	mov    eax,DWORD PTR [ebp-0x5c]
  43b2e6:	test   eax,eax
  43b2e8:	je     0x43b401
  43b2ee:	mov    ecx,DWORD PTR ds:0x45f9a0
  43b2f4:	dec    eax
  43b2f5:	mov    DWORD PTR [ebp-0x5c],eax
  43b2f8:	mov    DWORD PTR ds:0x4613dc,0x1
  43b302:	mov    edi,DWORD PTR [ecx]
  43b304:	test   edi,edi
  43b306:	setne  bl
  43b309:	xor    ecx,ecx
  43b30b:	test   esi,esi
  43b30d:	je     0x43b32a
  43b30f:	test   bl,bl
  43b311:	je     0x43b344
  43b313:	mov    eax,DWORD PTR [edi+0xc]
  43b316:	mov    ax,WORD PTR [eax+ecx*2]
  43b31a:	cmp    ax,WORD PTR [ebp+ecx*2-0x54]
  43b31f:	jne    0x43b328
  43b321:	inc    ecx
  43b322:	cmp    ecx,esi
  43b324:	jb     0x43b30f
  43b326:	jmp    0x43b32a
  43b328:	xor    bl,bl
  43b32a:	mov    ecx,DWORD PTR ds:0x45f9b4
  43b330:	test   bl,bl
  43b332:	je     0x43b34a
  43b334:	mov    eax,DWORD PTR [edi+0x4]
  43b337:	cmp    DWORD PTR [ecx],eax
  43b339:	sbb    al,al
  43b33b:	and    al,dl
  43b33d:	mov    ds:0x45f83b,al
  43b342:	jmp    0x43b34a
  43b344:	mov    ecx,DWORD PTR ds:0x45f9b4
  43b34a:	mov    eax,DWORD PTR [ecx]
  43b34c:	mov    DWORD PTR [ebp-0x64],eax
  43b34f:	mov    BYTE PTR ds:0x4613be,0x1
  43b356:	call   0x439ef0
  43b35b:	mov    ebx,DWORD PTR ds:0x45f9b4
  43b361:	mov    ecx,DWORD PTR ds:0x45f9a0
  43b367:	mov    eax,DWORD PTR [ebx]
  43b369:	cmp    DWORD PTR [ecx],0x0
  43b36c:	mov    dl,BYTE PTR ds:0x45f83b
  43b372:	mov    dh,0x1
  43b374:	mov    BYTE PTR ds:0x4613be,0x0
  43b37b:	mov    DWORD PTR [ebp-0x60],eax
  43b37e:	mov    BYTE PTR [ebp-0x55],dh
  43b381:	je     0x43b3e9
  43b383:	xor    edi,edi
  43b385:	test   esi,esi
  43b387:	je     0x43b3a9
  43b389:	test   dh,dh
  43b38b:	je     0x43b3e9
  43b38d:	mov    eax,DWORD PTR [ecx]
  43b38f:	mov    eax,DWORD PTR [eax+0xc]
  43b392:	mov    ax,WORD PTR [eax+edi*2]
  43b396:	cmp    ax,WORD PTR [ebp+edi*2-0x54]
  43b39b:	jne    0x43b3a4
  43b39d:	inc    edi
  43b39e:	cmp    edi,esi
  43b3a0:	jb     0x43b389
  43b3a2:	jmp    0x43b3a9
  43b3a4:	xor    dh,dh
  43b3a6:	mov    BYTE PTR [ebp-0x55],dh
  43b3a9:	test   dh,dh
  43b3ab:	je     0x43b3e9
  43b3ad:	mov    eax,DWORD PTR [ecx]
  43b3af:	mov    eax,DWORD PTR [eax+0x4]
  43b3b2:	cmp    eax,DWORD PTR [ebx]
  43b3b4:	jae    0x43b3e9
  43b3b6:	mov    eax,DWORD PTR [ebp-0x64]
  43b3b9:	mov    DWORD PTR [ebx],eax
  43b3bb:	mov    ecx,DWORD PTR [ecx]
  43b3bd:	call   0x439f81
  43b3c2:	mov    ebx,DWORD PTR ds:0x45f9b4
  43b3c8:	mov    eax,DWORD PTR [ebp-0x60]
  43b3cb:	mov    ecx,DWORD PTR ds:0x45f9a0
  43b3d1:	mov    dl,BYTE PTR [ebp-0x56]
  43b3d4:	mov    dh,BYTE PTR [ebp-0x55]
  43b3d7:	mov    DWORD PTR [ebx],eax
  43b3d9:	mov    eax,DWORD PTR [ecx]
  43b3db:	mov    BYTE PTR ds:0x45f83b,dl
  43b3e1:	mov    eax,DWORD PTR [eax]
  43b3e3:	mov    DWORD PTR [ecx],eax
  43b3e5:	test   eax,eax
  43b3e7:	jne    0x43b383
  43b3e9:	cmp    DWORD PTR ds:0x4613dc,0x0
  43b3f0:	jg     0x43b302
  43b3f6:	mov    eax,DWORD PTR [ebp-0x5c]
  43b3f9:	test   eax,eax
  43b3fb:	jne    0x43b2f4
  43b401:	mov    ecx,DWORD PTR [ebp-0x4]
  43b404:	mov    al,BYTE PTR [ebp-0x57]
  43b407:	pop    edi
  43b408:	pop    esi
  43b409:	xor    ecx,ebp
  43b40b:	mov    BYTE PTR ds:0x4613bc,0x1
  43b412:	mov    DWORD PTR ds:0x4613dc,0x1
  43b41c:	mov    ds:0x45f83b,al
  43b421:	pop    ebx
  43b422:	call   0x446dc7
  43b427:	leave  
  43b428:	ret    0x4
  43b42b:	push   ebx
  43b42c:	xor    ebx,ebx
  43b42e:	push   esi
  43b42f:	mov    BYTE PTR ds:0x45f692,0x3
  43b436:	mov    DWORD PTR ds:0x4613b4,0x28
  43b440:	mov    DWORD PTR ds:0x4613dc,ebx
  43b446:	call   0x43bc7b
  43b44b:	mov    esi,eax
  43b44d:	cmp    DWORD PTR ds:0x4613d0,ebx
  43b453:	jne    0x43b4a7
  43b455:	call   0x4388fe
  43b45a:	jmp    0x43b4a7
  43b45c:	movzx  eax,BYTE PTR [esi+0x6]
  43b460:	cmp    BYTE PTR [eax+0x404d54],bl
  43b466:	jne    0x43b4ab
  43b468:	test   BYTE PTR [esi+0x7],0x30
  43b46c:	jne    0x43b4a5
  43b46e:	mov    ecx,DWORD PTR [ebx*8+0x4060d0]
  43b475:	cmp    DWORD PTR ds:0x460570,ecx
  43b47b:	je     0x43b49d
  43b47d:	cmp    DWORD PTR ds:0x4613d0,0x0
  43b484:	mov    DWORD PTR ds:0x460570,ecx
  43b48a:	je     0x43b493
  43b48c:	call   0x4388fe
  43b491:	jmp    0x43b49d
  43b493:	call   0x43a78c
  43b498:	call   0x439ef0
  43b49d:	push   esi
  43b49e:	call   DWORD PTR [ebx*8+0x4060d4]
  43b4a5:	mov    esi,DWORD PTR [esi]
  43b4a7:	test   esi,esi
  43b4a9:	jne    0x43b45c
  43b4ab:	inc    ebx
  43b4ac:	cmp    ebx,0x7
  43b4af:	jl     0x43b4a7
  43b4b1:	mov    eax,0x4617e0
  43b4b6:	sub    eax,DWORD PTR ds:0x4613d8
  43b4bc:	pop    esi
  43b4bd:	pop    ebx
  43b4be:	cmp    eax,0x1e
  43b4c1:	jg     0x43b4c8
  43b4c3:	call   0x43a7d2
  43b4c8:	call   0x439ef0
  43b4cd:	push   0xa
  43b4cf:	pop    ecx
  43b4d0:	call   0x439dfb
  43b4d5:	mov    ecx,DWORD PTR ds:0x45f9ac
  43b4db:	call   0x439d91
  43b4e0:	mov    ecx,0x41f698
  43b4e5:	call   0x43a78c
  43b4ea:	push   0xa
  43b4ec:	pop    ecx
  43b4ed:	call   0x439dfb
  43b4f2:	mov    ecx,DWORD PTR ds:0x45f880
  43b4f8:	call   0x439d91
  43b4fd:	mov    ecx,0x41f6a4
  43b502:	jmp    0x43a78c
  43b507:	mov    edx,DWORD PTR ds:0x4613d8
  43b50d:	mov    eax,0x4617e0
  43b512:	sub    eax,edx
  43b514:	push   esi
  43b515:	mov    esi,ecx
  43b517:	cmp    eax,0x20
  43b51a:	ja     0x43b527
  43b51c:	call   0x43a7d2
  43b521:	mov    edx,DWORD PTR ds:0x4613d8
  43b527:	cmp    BYTE PTR ds:0x4617e0,0x0
  43b52e:	je     0x43b54c
  43b530:	mov    WORD PTR [edx],0x2020
  43b535:	add    edx,0x2
  43b538:	add    DWORD PTR ds:0x460574,0x2
  43b53f:	mov    DWORD PTR ds:0x4613d8,edx
  43b545:	mov    BYTE PTR ds:0x4617e0,0x0
  43b54c:	movzx  ecx,BYTE PTR [esi+0x5]
  43b550:	sub    esi,ecx
  43b552:	mov    edx,esi
  43b554:	call   0x43a48e
  43b559:	mov    ecx,DWORD PTR ds:0x4613d8
  43b55f:	mov    eax,ds:0x460574
  43b564:	mov    BYTE PTR [ecx],0x20
  43b567:	inc    ecx
  43b568:	inc    eax
  43b569:	mov    DWORD PTR ds:0x4613d8,ecx
  43b56f:	mov    ds:0x460574,eax
  43b574:	pop    esi
  43b575:	test   al,0x1
  43b577:	je     0x43b589
  43b579:	mov    BYTE PTR [ecx],0x2e
  43b57c:	inc    ecx
  43b57d:	inc    eax
  43b57e:	mov    DWORD PTR ds:0x4613d8,ecx
  43b584:	mov    ds:0x460574,eax
  43b589:	cmp    eax,0x20
  43b58c:	jae    0x43b5af
  43b58e:	push   0x1f
  43b590:	pop    edx
  43b591:	sub    edx,eax
  43b593:	shr    edx,1
  43b595:	inc    edx
  43b596:	lea    eax,[eax+edx*2]
  43b599:	mov    ds:0x460574,eax
  43b59e:	mov    WORD PTR [ecx],0x2e20
  43b5a3:	add    ecx,0x2
  43b5a6:	dec    edx
  43b5a7:	jne    0x43b59e
  43b5a9:	mov    DWORD PTR ds:0x4613d8,ecx
  43b5af:	push   0x28
  43b5b1:	pop    ecx
  43b5b2:	jmp    0x439dfb
  43b5b7:	push   ebp
  43b5b8:	mov    ebp,esp
  43b5ba:	push   esi
  43b5bb:	mov    esi,DWORD PTR [ebp+0x8]
  43b5be:	mov    ecx,esi
  43b5c0:	call   0x43b507
  43b5c5:	cmp    BYTE PTR [esi+0x6],0x4
  43b5c9:	pop    esi
  43b5ca:	mov    ecx,0x41f6b0
  43b5cf:	je     0x43b5d6
  43b5d1:	mov    ecx,0x41f6b8
  43b5d6:	call   0x43a78c
  43b5db:	call   0x439ef0
  43b5e0:	pop    ebp
  43b5e1:	ret    0x4
  43b5e4:	push   esi
  43b5e5:	mov    esi,ecx
  43b5e7:	xor    al,al
  43b5e9:	jmp    0x43b64c
  43b5eb:	test   al,al
  43b5ed:	je     0x43b5f9
  43b5ef:	mov    ecx,0x41f5b0
  43b5f4:	call   0x43a78c
  43b5f9:	movzx  eax,WORD PTR [esi+0xe]
  43b5fd:	test   al,0x1
  43b5ff:	je     0x43b616
  43b601:	test   al,0x40
  43b603:	je     0x43b60f
  43b605:	mov    ecx,0x41f6c0
  43b60a:	call   0x43a78c
  43b60f:	mov    ecx,0x41f6c8
  43b614:	jmp    0x43b62f
  43b616:	test   al,0x2
  43b618:	je     0x43b626
  43b61a:	mov    ecx,DWORD PTR [esi+0x10]
  43b61d:	mov    ecx,DWORD PTR [ecx*4+0x406104]
  43b624:	jmp    0x43b62f
  43b626:	test   al,0x4
  43b628:	je     0x43b636
  43b62a:	mov    ecx,0x41e4dc
  43b62f:	call   0x43a78c
  43b634:	jmp    0x43b648
  43b636:	test   al,0x8
  43b638:	je     0x43b648
  43b63a:	mov    edx,DWORD PTR [esi+0x14]
  43b63d:	movzx  ecx,BYTE PTR [edx+0x5]
  43b641:	sub    edx,ecx
  43b643:	call   0x43a48e
  43b648:	mov    esi,DWORD PTR [esi]
  43b64a:	mov    al,0x1
  43b64c:	test   esi,esi
  43b64e:	jne    0x43b5eb
  43b650:	pop    esi
  43b651:	ret    
  43b652:	push   ebp
  43b653:	mov    ebp,esp
  43b655:	push   esi
  43b656:	mov    esi,DWORD PTR [ebp+0x8]
  43b659:	push   esi
  43b65a:	call   0x43b9b9
  43b65f:	mov    esi,DWORD PTR [esi+0x30]
  43b662:	jmp    0x43b695
  43b664:	test   BYTE PTR [esi+0x7],0x30
  43b668:	jne    0x43b692
  43b66a:	mov    BYTE PTR ds:0x4617e0,0x1
  43b671:	cmp    BYTE PTR [esi+0x6],0x9
  43b675:	jne    0x43b67f
  43b677:	push   esi
  43b678:	call   0x43b9b9
  43b67d:	jmp    0x43b692
  43b67f:	mov    ecx,esi
  43b681:	call   0x43b507
  43b686:	mov    ecx,esi
  43b688:	call   0x43b912
  43b68d:	call   0x439ef0
  43b692:	mov    esi,DWORD PTR [esi+0x18]
  43b695:	test   esi,esi
  43b697:	jne    0x43b664
  43b699:	pop    esi
  43b69a:	pop    ebp
  43b69b:	ret    0x4
  43b69e:	push   ebp
  43b69f:	mov    ebp,esp
  43b6a1:	push   esi
  43b6a2:	mov    esi,DWORD PTR [ebp+0x8]
  43b6a5:	mov    ecx,esi
  43b6a7:	call   0x43b507
  43b6ac:	mov    ecx,DWORD PTR [esi+0x18]
  43b6af:	mov    ecx,DWORD PTR [ecx+0x10]
  43b6b2:	call   0x439c80
  43b6b7:	mov    ecx,DWORD PTR ds:0x460574
  43b6bd:	lea    ecx,[ecx+0x5]
  43b6c0:	call   0x439dfb
  43b6c5:	mov    ecx,DWORD PTR [esi+0x18]
  43b6c8:	call   0x43b5e4
  43b6cd:	call   0x439ef0
  43b6d2:	pop    esi
  43b6d3:	pop    ebp
  43b6d4:	ret    0x4
  43b6d7:	push   ebp
  43b6d8:	mov    ebp,esp
  43b6da:	push   esi
  43b6db:	mov    esi,DWORD PTR [ebp+0x8]
  43b6de:	mov    ecx,esi
  43b6e0:	call   0x43b507
  43b6e5:	mov    ecx,DWORD PTR [esi+0x1c]
  43b6e8:	mov    ecx,DWORD PTR [ecx+0x10]
  43b6eb:	call   0x439c80
  43b6f0:	call   0x439ef0
  43b6f5:	mov    esi,DWORD PTR [esi+0x18]
  43b6f8:	test   esi,esi
  43b6fa:	jne    0x43b701
  43b6fc:	pop    esi
  43b6fd:	pop    ebp
  43b6fe:	ret    0x4
  43b701:	mov    ecx,esi
  43b703:	mov    BYTE PTR ds:0x4617e0,0x1
  43b70a:	call   0x43b507
  43b70f:	mov    eax,DWORD PTR [esi+0x24]
  43b712:	cmp    eax,0x7fffffff
  43b717:	jbe    0x43b725
  43b719:	neg    eax
  43b71b:	mov    BYTE PTR ds:0x4613bf,0x2d
  43b722:	mov    DWORD PTR [esi+0x24],eax
  43b725:	mov    ecx,DWORD PTR [esi+0x24]
  43b728:	call   0x439c80
  43b72d:	mov    ecx,DWORD PTR ds:0x460574
  43b733:	mov    BYTE PTR ds:0x4613bf,0x20
  43b73a:	lea    ecx,[ecx+0x8]
  43b73d:	call   0x439dfb
  43b742:	mov    eax,DWORD PTR [esi+0x1c]
  43b745:	mov    ecx,DWORD PTR [eax+0x10]
  43b748:	cmp    ecx,0x20
  43b74b:	ja     0x43b6eb
  43b74d:	mov    ecx,DWORD PTR [ecx*4+0x406104]
  43b754:	call   0x43a78c
  43b759:	jmp    0x43b6f0
  43b75b:	push   ebp
  43b75c:	mov    ebp,esp
  43b75e:	push   ebx
  43b75f:	push   esi
  43b760:	push   edi
  43b761:	mov    edi,DWORD PTR [ebp+0x8]
  43b764:	xor    esi,esi
  43b766:	cmp    BYTE PTR [edi+0x22],0x10
  43b76a:	mov    ecx,edi
  43b76c:	seta   bl
  43b76f:	call   0x43b507
  43b774:	movzx  ecx,BYTE PTR [edi+0x22]
  43b778:	call   0x439c80
  43b77d:	mov    ecx,DWORD PTR ds:0x460574
  43b783:	lea    ecx,[ecx+0x5]
  43b786:	call   0x439dfb
  43b78b:	mov    eax,DWORD PTR [edi+0x18]
  43b78e:	jmp    0x43b794
  43b790:	mov    eax,DWORD PTR [eax+0x18]
  43b793:	inc    esi
  43b794:	test   eax,eax
  43b796:	jne    0x43b790
  43b798:	mov    ecx,esi
  43b79a:	call   0x439c80
  43b79f:	call   0x439ef0
  43b7a4:	mov    esi,DWORD PTR [edi+0x24]
  43b7a7:	mov    edi,DWORD PTR [edi+0x18]
  43b7aa:	add    esi,0x4
  43b7ad:	jmp    0x43b865
  43b7b2:	mov    ecx,edi
  43b7b4:	mov    BYTE PTR ds:0x4617e0,0x1
  43b7bb:	call   0x43b507
  43b7c0:	movzx  ecx,BYTE PTR [edi+0x1f]
  43b7c4:	call   0x439c80
  43b7c9:	mov    ecx,DWORD PTR ds:0x460574
  43b7cf:	lea    ecx,[ecx+0x5]
  43b7d2:	call   0x439dfb
  43b7d7:	movzx  ecx,BYTE PTR [edi+0x1e]
  43b7db:	call   0x439c80
  43b7e0:	mov    ecx,DWORD PTR ds:0x460574
  43b7e6:	lea    ecx,[ecx+0x5]
  43b7e9:	call   0x439dfb
  43b7ee:	mov    cl,BYTE PTR [edi+0x1e]
  43b7f1:	or     eax,0xffffffff
  43b7f4:	shl    eax,cl
  43b7f6:	mov    cl,BYTE PTR [edi+0x1f]
  43b7f9:	lea    edx,[ebp+0x8]
  43b7fc:	not    eax
  43b7fe:	shl    eax,cl
  43b800:	mov    DWORD PTR [ebp+0x8],eax
  43b803:	test   bl,bl
  43b805:	je     0x43b81a
  43b807:	push   0x4
  43b809:	pop    ecx
  43b80a:	call   0x439cfe
  43b80f:	mov    ecx,DWORD PTR ds:0x460574
  43b815:	lea    ecx,[ecx+0x1]
  43b818:	jmp    0x43b82b
  43b81a:	push   0x2
  43b81c:	pop    ecx
  43b81d:	call   0x439cfe
  43b822:	mov    ecx,DWORD PTR ds:0x460574
  43b828:	lea    ecx,[ecx+0x5]
  43b82b:	call   0x439dfb
  43b830:	cmp    BYTE PTR [esi+0x4],0x51
  43b834:	jne    0x43b842
  43b836:	mov    ecx,0x41f6cc
  43b83b:	call   0x43a78c
  43b840:	jmp    0x43b854
  43b842:	lea    ecx,[esi+0x3]
  43b845:	lea    edx,[ebp+0xb]
  43b848:	call   0x431d7f
  43b84d:	mov    ecx,eax
  43b84f:	call   0x439c80
  43b854:	call   0x439ef0
  43b859:	mov    edi,DWORD PTR [edi+0x18]
  43b85c:	mov    ecx,esi
  43b85e:	call   0x428f71
  43b863:	mov    esi,eax
  43b865:	test   edi,edi
  43b867:	jne    0x43b7b2
  43b86d:	pop    edi
  43b86e:	pop    esi
  43b86f:	pop    ebx
  43b870:	pop    ebp
  43b871:	ret    0x4
  43b874:	push   ebp
  43b875:	mov    ebp,esp
  43b877:	mov    ecx,DWORD PTR [ebp+0x8]
  43b87a:	call   0x43b883
  43b87f:	pop    ebp
  43b880:	ret    0x4
  43b883:	push   esi
  43b884:	push   edi
  43b885:	mov    edi,ecx
  43b887:	call   0x43b507
  43b88c:	mov    ecx,DWORD PTR [edi+0x20]
  43b88f:	mov    esi,DWORD PTR ds:0x460574
  43b895:	call   0x439c80
  43b89a:	lea    ecx,[esi+0xa]
  43b89d:	call   0x439dfb
  43b8a2:	movzx  ecx,WORD PTR [edi+0x1c]
  43b8a6:	mov    esi,DWORD PTR ds:0x460574
  43b8ac:	mov    ecx,DWORD PTR [ecx*4+0x404df4]
  43b8b3:	call   0x43a78c
  43b8b8:	lea    ecx,[esi+0x8]
  43b8bb:	call   0x439dfb
  43b8c0:	cmp    DWORD PTR [edi+0x2c],0x0
  43b8c4:	je     0x43b8fb
  43b8c6:	mov    eax,ds:0x4613d8
  43b8cb:	mov    BYTE PTR [eax],0x27
  43b8ce:	mov    ecx,DWORD PTR [edi+0x2c]
  43b8d1:	inc    eax
  43b8d2:	add    ecx,0x6
  43b8d5:	mov    ds:0x4613d8,eax
  43b8da:	call   0x43a78c
  43b8df:	mov    eax,ds:0x4613d8
  43b8e4:	mov    ecx,DWORD PTR ds:0x460574
  43b8ea:	mov    BYTE PTR [eax],0x27
  43b8ed:	inc    eax
  43b8ee:	lea    ecx,[ecx+0x2]
  43b8f1:	mov    ds:0x4613d8,eax
  43b8f6:	call   0x439dfb
  43b8fb:	test   BYTE PTR [edi+0x7],0x40
  43b8ff:	pop    edi
  43b900:	pop    esi
  43b901:	je     0x43b90d
  43b903:	mov    ecx,0x41f6d0
  43b908:	call   0x43a78c
  43b90d:	jmp    0x439ef0
  43b912:	push   esi
  43b913:	mov    esi,DWORD PTR ds:0x460574
  43b919:	push   edi
  43b91a:	mov    edi,ecx
  43b91c:	test   BYTE PTR [edi+0x2c],0x1
  43b920:	je     0x43b936
  43b922:	cmp    BYTE PTR [edi+0x6],0x1
  43b926:	jne    0x43b92f
  43b928:	mov    ecx,0x41f6dc
  43b92d:	jmp    0x43b966
  43b92f:	mov    ecx,0x41f6e0
  43b934:	jmp    0x43b966
  43b936:	cmp    BYTE PTR [edi+0x6],0x2
  43b93a:	jne    0x43b943
  43b93c:	mov    ecx,0x41f6e4
  43b941:	jmp    0x43b966
  43b943:	mov    edx,DWORD PTR [edi+0x24]
  43b946:	test   BYTE PTR [edx+0xe],0x8
  43b94a:	je     0x43b95c
  43b94c:	mov    edx,DWORD PTR [edx+0x14]
  43b94f:	movzx  ecx,BYTE PTR [edx+0x5]
  43b953:	sub    edx,ecx
  43b955:	call   0x43a48e
  43b95a:	jmp    0x43b96b
  43b95c:	mov    ecx,DWORD PTR [edi+0x28]
  43b95f:	mov    ecx,DWORD PTR [ecx*4+0x406104]
  43b966:	call   0x43a78c
  43b96b:	lea    ecx,[esi+0x8]
  43b96e:	call   0x439dfb
  43b973:	mov    ecx,DWORD PTR [edi+0x1c]
  43b976:	mov    esi,DWORD PTR ds:0x460574
  43b97c:	call   0x439c80
  43b981:	lea    ecx,[esi+0xa]
  43b984:	call   0x439dfb
  43b989:	mov    edx,DWORD PTR [edi+0x20]
  43b98c:	pop    edi
  43b98d:	pop    esi
  43b98e:	test   edx,edx
  43b990:	je     0x43b9b8
  43b992:	cmp    BYTE PTR [edx+0x6],0x11
  43b996:	je     0x43b9b8
  43b998:	movzx  ecx,BYTE PTR [edx+0x5]
  43b99c:	sub    edx,ecx
  43b99e:	call   0x43a48e
  43b9a3:	mov    ecx,DWORD PTR ds:0x460574
  43b9a9:	shr    ecx,0x3
  43b9ac:	lea    ecx,[ecx*8+0x8]
  43b9b3:	jmp    0x439dfb
  43b9b8:	ret    
  43b9b9:	push   ebp
  43b9ba:	mov    ebp,esp
  43b9bc:	push   esi
  43b9bd:	mov    esi,DWORD PTR [ebp+0x8]
  43b9c0:	movzx  eax,BYTE PTR [esi+0x6]
  43b9c4:	sub    eax,0x0
  43b9c7:	je     0x43bc1b
  43b9cd:	dec    eax
  43b9ce:	je     0x43bbee
  43b9d4:	dec    eax
  43b9d5:	je     0x43bbbf
  43b9db:	dec    eax
  43b9dc:	je     0x43bba5
  43b9e2:	mov    ecx,esi
  43b9e4:	sub    eax,0x4
  43b9e7:	je     0x43bb84
  43b9ed:	dec    eax
  43b9ee:	je     0x43ba90
  43b9f4:	dec    eax
  43b9f5:	jne    0x43bc1d
  43b9fb:	call   0x43b507
  43ba00:	movzx  eax,WORD PTR [esi+0x2c]
  43ba04:	test   ax,ax
  43ba07:	je     0x43ba43
  43ba09:	cmp    eax,0x20
  43ba0c:	ja     0x43ba3e
  43ba0e:	mov    ecx,DWORD PTR [eax*4+0x406104]
  43ba15:	call   0x43a78c
  43ba1a:	movzx  eax,WORD PTR [esi+0x2c]
  43ba1e:	mov    edx,DWORD PTR [eax*4+0x406104]
  43ba25:	lea    ecx,[edx+0x1]
  43ba28:	mov    al,BYTE PTR [edx]
  43ba2a:	inc    edx
  43ba2b:	test   al,al
  43ba2d:	jne    0x43ba28
  43ba2f:	sub    edx,ecx
  43ba31:	mov    ecx,DWORD PTR ds:0x460574
  43ba37:	sub    ecx,edx
  43ba39:	add    ecx,0x9
  43ba3c:	jmp    0x43ba5c
  43ba3e:	test   ax,ax
  43ba41:	jne    0x43ba4d
  43ba43:	mov    eax,ds:0x460574
  43ba48:	lea    ecx,[eax+0x9]
  43ba4b:	jmp    0x43ba5c
  43ba4d:	mov    ecx,eax
  43ba4f:	call   0x439c80
  43ba54:	mov    eax,ds:0x460574
  43ba59:	lea    ecx,[eax+0x4]
  43ba5c:	call   0x439dfb
  43ba61:	test   DWORD PTR [esi+0x20],0x8000000
  43ba68:	je     0x43ba7e
  43ba6a:	mov    ecx,0x41f728
  43ba6f:	call   0x43a78c
  43ba74:	mov    ecx,DWORD PTR [esi+0x20]
  43ba77:	neg    ecx
  43ba79:	jmp    0x43bbe7
  43ba7e:	mov    ecx,0x41f730
  43ba83:	call   0x43a78c
  43ba88:	mov    ecx,DWORD PTR [esi+0x20]
  43ba8b:	jmp    0x43bbe7
  43ba90:	push   edi
  43ba91:	call   0x43b507
  43ba96:	mov    eax,DWORD PTR [esi+0x2c]
  43ba99:	test   eax,eax
  43ba9b:	je     0x43bab1
  43ba9d:	cmp    eax,0xffffffff
  43baa0:	je     0x43bab1
  43baa2:	mov    edi,DWORD PTR [eax+0x10]
  43baa5:	test   edi,edi
  43baa7:	je     0x43bab1
  43baa9:	mov    edi,DWORD PTR [edi+0x1c]
  43baac:	add    edi,DWORD PTR [eax+0x8]
  43baaf:	jmp    0x43bab4
  43bab1:	mov    edi,DWORD PTR [esi+0x20]
  43bab4:	cmp    eax,0xffffffff
  43bab7:	jne    0x43bac7
  43bab9:	mov    ecx,0x41f6fc
  43babe:	call   0x43a78c
  43bac3:	neg    edi
  43bac5:	jmp    0x43bb2d
  43bac7:	test   eax,eax
  43bac9:	je     0x43bb23
  43bacb:	cmp    BYTE PTR [eax],0x2
  43bace:	jne    0x43bb0b
  43bad0:	movzx  eax,BYTE PTR [eax+0x1]
  43bad4:	dec    eax
  43bad5:	je     0x43baf3
  43bad7:	dec    eax
  43bad8:	je     0x43baec
  43bada:	dec    eax
  43badb:	dec    eax
  43badc:	je     0x43bae5
  43bade:	mov    ecx,0x41f6fc
  43bae3:	jmp    0x43baf8
  43bae5:	mov    ecx,0x41f714
  43baea:	jmp    0x43baf8
  43baec:	mov    ecx,0x41f70c
  43baf1:	jmp    0x43baf8
  43baf3:	mov    ecx,0x41f704
  43baf8:	call   0x43a78c
  43bafd:	mov    eax,DWORD PTR [esi+0x2c]
  43bb00:	test   DWORD PTR [eax+0x4],0x8000
  43bb07:	je     0x43bb2d
  43bb09:	jmp    0x43bac3
  43bb0b:	mov    ecx,0x41f6fc
  43bb10:	call   0x43a78c
  43bb15:	mov    eax,DWORD PTR [esi+0x2c]
  43bb18:	cmp    BYTE PTR [eax],0x4
  43bb1b:	jne    0x43bb2d
  43bb1d:	movzx  edi,BYTE PTR [eax+0x1]
  43bb21:	jmp    0x43bb2d
  43bb23:	mov    ecx,0x41f6fc
  43bb28:	call   0x43a78c
  43bb2d:	mov    ecx,DWORD PTR ds:0x460574
  43bb33:	lea    ecx,[ecx+0x2]
  43bb36:	call   0x439dfb
  43bb3b:	test   edi,edi
  43bb3d:	je     0x43bb59
  43bb3f:	mov    eax,DWORD PTR [esi+0x20]
  43bb42:	neg    eax
  43bb44:	cmp    edi,eax
  43bb46:	jne    0x43bb59
  43bb48:	mov    ecx,0x41f5b0
  43bb4d:	call   0x43a78c
  43bb52:	mov    BYTE PTR ds:0x4613bf,0x2d
  43bb59:	mov    ecx,edi
  43bb5b:	call   0x439c80
  43bb60:	mov    ecx,0x41f71c
  43bb65:	mov    BYTE PTR ds:0x4613bf,0x20
  43bb6c:	call   0x43a78c
  43bb71:	mov    eax,ds:0x460574
  43bb76:	lea    ecx,[eax+0x3]
  43bb79:	call   0x439dfb
  43bb7e:	pop    edi
  43bb7f:	jmp    0x43bc22
  43bb84:	call   0x43b507
  43bb89:	mov    ecx,0x41f720
  43bb8e:	call   0x43a78c
  43bb93:	mov    eax,ds:0x460574
  43bb98:	lea    ecx,[eax+0x2]
  43bb9b:	call   0x439dfb
  43bba0:	mov    ecx,DWORD PTR [esi+0x18]
  43bba3:	jmp    0x43bc14
  43bba5:	test   BYTE PTR [esi+0x2c],0x8
  43bba9:	jne    0x43bc76
  43bbaf:	mov    ecx,esi
  43bbb1:	call   0x43b507
  43bbb6:	mov    ecx,esi
  43bbb8:	call   0x43b912
  43bbbd:	jmp    0x43bc22
  43bbbf:	mov    ecx,esi
  43bbc1:	call   0x43b507
  43bbc6:	mov    eax,DWORD PTR [esi+0x28]
  43bbc9:	mov    ecx,esi
  43bbcb:	mov    DWORD PTR [esi+0x1c],eax
  43bbce:	call   0x43b912
  43bbd3:	mov    ecx,0x41f6f4
  43bbd8:	call   0x43a78c
  43bbdd:	mov    eax,DWORD PTR [esi+0x30]
  43bbe0:	xor    edx,edx
  43bbe2:	div    DWORD PTR [esi+0x28]
  43bbe5:	mov    ecx,eax
  43bbe7:	call   0x439c80
  43bbec:	jmp    0x43bc22
  43bbee:	mov    ecx,esi
  43bbf0:	call   0x43b507
  43bbf5:	mov    ecx,esi
  43bbf7:	call   0x43b912
  43bbfc:	mov    ecx,0x41f6ec
  43bc01:	call   0x43a78c
  43bc06:	movzx  ecx,WORD PTR [esi+0x3c]
  43bc0a:	call   0x439c80
  43bc0f:	mov    ecx,0x41f5b0
  43bc14:	call   0x43a78c
  43bc19:	jmp    0x43bc22
  43bc1b:	mov    ecx,esi
  43bc1d:	call   0x43b507
  43bc22:	mov    al,BYTE PTR [esi+0x7]
  43bc25:	test   al,0x2
  43bc27:	je     0x43bc30
  43bc29:	mov    ecx,0x41f738
  43bc2e:	jmp    0x43bc46
  43bc30:	test   al,0x1
  43bc32:	je     0x43bc3b
  43bc34:	mov    ecx,0x41f648
  43bc39:	jmp    0x43bc46
  43bc3b:	cmp    BYTE PTR [esi+0x6],0x1
  43bc3f:	jne    0x43bc4b
  43bc41:	mov    ecx,0x41f640
  43bc46:	call   0x43a78c
  43bc4b:	cmp    BYTE PTR [esi+0x6],0x3
  43bc4f:	ja     0x43bc71
  43bc51:	mov    ax,WORD PTR [esi+0x2c]
  43bc55:	mov    ecx,0xe00
  43bc5a:	and    ax,cx
  43bc5d:	mov    ecx,0x200
  43bc62:	cmp    ax,cx
  43bc65:	jne    0x43bc71
  43bc67:	mov    ecx,0x41f744
  43bc6c:	call   0x43a78c
  43bc71:	call   0x439ef0
  43bc76:	pop    esi
  43bc77:	pop    ebp
  43bc78:	ret    0x4
  43bc7b:	push   ebp
  43bc7c:	mov    ebp,esp
  43bc7e:	sub    esp,0xc
  43bc81:	mov    ecx,DWORD PTR [ebp-0x8]
  43bc84:	push   ebx
  43bc85:	push   esi
  43bc86:	push   edi
  43bc87:	mov    edi,0x460628
  43bc8c:	mov    DWORD PTR [ebp-0xc],edi
  43bc8f:	mov    eax,DWORD PTR [edi]
  43bc91:	mov    DWORD PTR [ebp-0x4],eax
  43bc94:	lea    esi,[ebp-0x4]
  43bc97:	test   eax,eax
  43bc99:	je     0x43bcdb
  43bc9b:	mov    edx,DWORD PTR [esi]
  43bc9d:	mov    edi,edx
  43bc9f:	mov    ebx,DWORD PTR [edx]
  43bca1:	test   ebx,ebx
  43bca3:	je     0x43bcc0
  43bca5:	mov    ecx,ebx
  43bca7:	call   0x43bd9b
  43bcac:	test   al,al
  43bcae:	je     0x43bcb5
  43bcb0:	mov    edx,ebx
  43bcb2:	mov    DWORD PTR [ebp-0x8],edi
  43bcb5:	mov    edi,ebx
  43bcb7:	mov    ebx,DWORD PTR [ebx]
  43bcb9:	test   ebx,ebx
  43bcbb:	jne    0x43bca5
  43bcbd:	mov    ecx,DWORD PTR [ebp-0x8]
  43bcc0:	cmp    edx,DWORD PTR [esi]
  43bcc2:	je     0x43bcce
  43bcc4:	mov    eax,DWORD PTR [edx]
  43bcc6:	mov    DWORD PTR [ecx],eax
  43bcc8:	mov    eax,DWORD PTR [esi]
  43bcca:	mov    DWORD PTR [edx],eax
  43bccc:	mov    DWORD PTR [esi],edx
  43bcce:	mov    esi,DWORD PTR [esi]
  43bcd0:	cmp    DWORD PTR [esi],0x0
  43bcd3:	jne    0x43bc9b
  43bcd5:	mov    eax,DWORD PTR [ebp-0x4]
  43bcd8:	mov    edi,DWORD PTR [ebp-0xc]
  43bcdb:	mov    DWORD PTR [edi],eax
  43bcdd:	add    edi,0x4
  43bce0:	mov    DWORD PTR [ebp-0xc],edi
  43bce3:	cmp    edi,0x460e28
  43bce9:	jb     0x43bc8f
  43bceb:	xor    ebx,ebx
  43bced:	inc    ebx
  43bcee:	mov    eax,ebx
  43bcf0:	mov    edi,0x460628
  43bcf5:	shl    eax,0x3
  43bcf8:	mov    esi,DWORD PTR [edi]
  43bcfa:	mov    edx,DWORD PTR [edi+ebx*4]
  43bcfd:	test   esi,esi
  43bcff:	je     0x43bd71
  43bd01:	cmp    esi,edx
  43bd03:	je     0x43bd71
  43bd05:	test   edx,edx
  43bd07:	je     0x43bd73
  43bd09:	mov    ecx,esi
  43bd0b:	call   0x43bd9b
  43bd10:	test   al,al
  43bd12:	je     0x43bd1d
  43bd14:	mov    ecx,esi
  43bd16:	mov    esi,DWORD PTR [esi]
  43bd18:	mov    DWORD PTR [ebp-0x8],ecx
  43bd1b:	jmp    0x43bd24
  43bd1d:	mov    ecx,edx
  43bd1f:	mov    DWORD PTR [ebp-0x8],edx
  43bd22:	mov    edx,DWORD PTR [edx]
  43bd24:	mov    eax,ecx
  43bd26:	mov    DWORD PTR [ebp-0x4],eax
  43bd29:	test   esi,esi
  43bd2b:	je     0x43bd62
  43bd2d:	test   edx,edx
  43bd2f:	je     0x43bd57
  43bd31:	mov    ecx,esi
  43bd33:	call   0x43bd9b
  43bd38:	test   al,al
  43bd3a:	mov    eax,DWORD PTR [ebp-0x4]
  43bd3d:	je     0x43bd4a
  43bd3f:	mov    DWORD PTR [eax],esi
  43bd41:	mov    eax,esi
  43bd43:	mov    esi,DWORD PTR [esi]
  43bd45:	mov    DWORD PTR [ebp-0x4],eax
  43bd48:	jmp    0x43bd53
  43bd4a:	mov    DWORD PTR [eax],edx
  43bd4c:	mov    eax,edx
  43bd4e:	mov    DWORD PTR [ebp-0x4],edx
  43bd51:	mov    edx,DWORD PTR [edx]
  43bd53:	test   esi,esi
  43bd55:	jne    0x43bd2d
  43bd57:	mov    ecx,DWORD PTR [ebp-0x8]
  43bd5a:	test   esi,esi
  43bd5c:	je     0x43bd62
  43bd5e:	mov    DWORD PTR [eax],esi
  43bd60:	jmp    0x43bd68
  43bd62:	test   edx,edx
  43bd64:	je     0x43bd68
  43bd66:	mov    DWORD PTR [eax],edx
  43bd68:	mov    eax,ebx
  43bd6a:	mov    esi,ecx
  43bd6c:	shl    eax,0x3
  43bd6f:	jmp    0x43bd73
  43bd71:	mov    esi,edx
  43bd73:	mov    DWORD PTR [edi],esi
  43bd75:	add    edi,eax
  43bd77:	cmp    edi,0x460e28
  43bd7d:	jb     0x43bcf8
  43bd83:	add    ebx,ebx
  43bd85:	cmp    ebx,0x200
  43bd8b:	jl     0x43bcee
  43bd91:	mov    eax,ds:0x460628
  43bd96:	pop    edi
  43bd97:	pop    esi
  43bd98:	pop    ebx
  43bd99:	leave  
  43bd9a:	ret    
  43bd9b:	push   esi
  43bd9c:	mov    esi,ecx
  43bd9e:	movzx  eax,BYTE PTR [esi+0x6]
  43bda2:	movzx  ecx,BYTE PTR [eax+0x404d54]
  43bda9:	movzx  eax,BYTE PTR [edx+0x6]
  43bdad:	movzx  eax,BYTE PTR [eax+0x404d54]
  43bdb4:	cmp    ecx,eax
  43bdb6:	jge    0x43bdbc
  43bdb8:	mov    al,0x1
  43bdba:	pop    esi
  43bdbb:	ret    
  43bdbc:	jle    0x43bdc2
  43bdbe:	xor    al,al
  43bdc0:	pop    esi
  43bdc1:	ret    
  43bdc2:	movzx  eax,BYTE PTR [esi+0x5]
  43bdc6:	mov    ecx,esi
  43bdc8:	push   ebx
  43bdc9:	sub    ecx,eax
  43bdcb:	push   edi
  43bdcc:	movzx  edi,BYTE PTR [edx+0x5]
  43bdd0:	cmp    ecx,esi
  43bdd2:	jae    0x43bdf8
  43bdd4:	sub    eax,edi
  43bdd6:	sub    eax,esi
  43bdd8:	add    eax,ecx
  43bdda:	add    eax,edx
  43bddc:	cmp    eax,edx
  43bdde:	jae    0x43bdf0
  43bde0:	mov    bl,BYTE PTR [ecx]
  43bde2:	mov    bh,BYTE PTR [eax]
  43bde4:	cmp    bl,bh
  43bde6:	jl     0x43bdf4
  43bde8:	jg     0x43bdf8
  43bdea:	inc    ecx
  43bdeb:	inc    eax
  43bdec:	cmp    ecx,esi
  43bdee:	jb     0x43bddc
  43bdf0:	cmp    ecx,esi
  43bdf2:	jae    0x43bdf8
  43bdf4:	mov    al,0x1
  43bdf6:	jmp    0x43bdfa
  43bdf8:	xor    al,al
  43bdfa:	pop    edi
  43bdfb:	pop    ebx
  43bdfc:	pop    esi
  43bdfd:	ret    
  43bdfe:	push   ebp
  43bdff:	mov    ebp,esp
  43be01:	sub    esp,0x14
  43be04:	cmp    BYTE PTR ds:0x45f692,0x0
  43be0b:	je     0x43be20
  43be0d:	push   0x0
  43be0f:	xor    edx,edx
  43be11:	mov    ecx,0x8a1
  43be16:	call   0x42ee80
  43be1b:	jmp    0x43c042
  43be20:	push   ebx
  43be21:	push   esi
  43be22:	push   edi
  43be23:	mov    edi,DWORD PTR [ebp+0x8]
  43be26:	lea    ecx,[edi+0x4]
  43be29:	call   0x445afc
  43be2e:	mov    esi,eax
  43be30:	xor    ebx,ebx
  43be32:	inc    ebx
  43be33:	cmp    BYTE PTR [esi+0x6],0x4
  43be37:	mov    DWORD PTR [ebp-0x14],esi
  43be3a:	jne    0x43be82
  43be3c:	mov    ecx,DWORD PTR ds:0x460618
  43be42:	cmp    ecx,ebx
  43be44:	ja     0x43be48
  43be46:	mov    ecx,ebx
  43be48:	mov    eax,ds:0x45f9b4
  43be4d:	add    DWORD PTR [eax],ecx
  43be4f:	call   0x438545
  43be54:	mov    ecx,DWORD PTR ds:0x460618
  43be5a:	cmp    ecx,ebx
  43be5c:	ja     0x43be60
  43be5e:	mov    ecx,ebx
  43be60:	mov    eax,ds:0x45f9b4
  43be65:	sub    DWORD PTR [eax],ecx
  43be67:	cmp    BYTE PTR ds:0x45f99f,0x0
  43be6e:	jne    0x43be87
  43be70:	mov    edx,DWORD PTR ds:0x448884
  43be76:	mov    ecx,0x41f750
  43be7b:	call   0x43f399
  43be80:	jmp    0x43be87
  43be82:	call   0x438545
  43be87:	xor    ebx,ebx
  43be89:	cmp    BYTE PTR ds:0x44f54e,bl
  43be8f:	je     0x43be9b
  43be91:	push   ebx
  43be92:	mov    dl,0x3d
  43be94:	xor    ecx,ecx
  43be96:	call   0x43abf1
  43be9b:	mov    eax,ds:0x4617e4
  43bea0:	inc    eax
  43bea1:	add    edi,0xa
  43bea4:	cmp    BYTE PTR [esi+0x6],0x6
  43bea8:	mov    ds:0x4617e4,eax
  43bead:	mov    DWORD PTR [ebp-0x10],edi
  43beb0:	jne    0x43bee8
  43beb2:	push   ebx
  43beb3:	push   DWORD PTR ds:0x45f9a0
  43beb9:	mov    ecx,esi
  43bebb:	call   0x43d87d
  43bec0:	mov    eax,ds:0x45f9b4
  43bec5:	push   edi
  43bec6:	mov    eax,DWORD PTR [eax]
  43bec8:	mov    ds:0x460620,eax
  43becd:	movzx  eax,BYTE PTR [esi+0x18]
  43bed1:	call   DWORD PTR [eax*4+0x40598c]
  43bed8:	dec    DWORD PTR ds:0x4617e4
  43bede:	call   0x43d909
  43bee3:	jmp    0x43c03f
  43bee8:	mov    edi,DWORD PTR [esi+0x18]
  43beeb:	test   edi,edi
  43beed:	jne    0x43befa
  43beef:	dec    eax
  43bef0:	mov    ds:0x4617e4,eax
  43bef5:	jmp    0x43c03f
  43befa:	mov    dl,0x1
  43befc:	mov    ecx,esi
  43befe:	call   0x43d777
  43bf03:	mov    ecx,0x203
  43bf08:	call   0x43f45b
  43bf0d:	mov    DWORD PTR [ebp-0xc],eax
  43bf10:	push   ecx
  43bf11:	mov    ecx,DWORD PTR [ebp-0x10]
  43bf14:	lea    eax,[ebp-0x8]
  43bf17:	push   eax
  43bf18:	mov    edx,edi
  43bf1a:	call   0x43c813
  43bf1f:	mov    ecx,DWORD PTR ds:0x4605c0
  43bf25:	mov    DWORD PTR [ebp+0x8],ebx
  43bf28:	mov    DWORD PTR [ebp-0x4],ecx
  43bf2b:	test   ecx,ecx
  43bf2d:	je     0x43bf5a
  43bf2f:	movzx  esi,WORD PTR [ecx+0x1]
  43bf33:	mov    DWORD PTR [ebp+0x8],ebx
  43bf36:	test   esi,esi
  43bf38:	je     0x43bf5a
  43bf3a:	mov    ecx,esi
  43bf3c:	call   0x43f45b
  43bf41:	push   esi
  43bf42:	push   DWORD PTR ds:0x4605c0
  43bf48:	mov    DWORD PTR [ebp+0x8],eax
  43bf4b:	push   eax
  43bf4c:	call   0x447646
  43bf51:	add    esp,0xc
  43bf54:	mov    DWORD PTR ds:0x4605c0,ebx
  43bf5a:	push   DWORD PTR [ebp-0xc]
  43bf5d:	mov    edx,DWORD PTR [ebp-0x8]
  43bf60:	mov    esi,DWORD PTR ds:0x460594
  43bf66:	mov    ecx,edi
  43bf68:	call   0x43c21c
  43bf6d:	mov    ecx,DWORD PTR [ebp-0x4]
  43bf70:	mov    DWORD PTR ds:0x460594,esi
  43bf76:	test   ecx,ecx
  43bf78:	je     0x43bf9f
  43bf7a:	mov    esi,DWORD PTR [ebp+0x8]
  43bf7d:	test   esi,esi
  43bf7f:	je     0x43bf9f
  43bf81:	movzx  eax,WORD PTR [esi+0x1]
  43bf85:	push   eax
  43bf86:	push   esi
  43bf87:	push   ecx
  43bf88:	call   0x447646
  43bf8d:	push   esi
  43bf8e:	call   DWORD PTR ds:0x464354
  43bf94:	mov    eax,DWORD PTR [ebp-0x4]
  43bf97:	add    esp,0x10
  43bf9a:	mov    ds:0x4605c0,eax
  43bf9f:	mov    ecx,DWORD PTR [ebp-0x8]
  43bfa2:	call   0x43d0d5
  43bfa7:	mov    eax,ds:0x4600fc
  43bfac:	test   eax,eax
  43bfae:	jne    0x43bfbf
  43bfb0:	mov    ecx,0x3f8
  43bfb5:	call   0x42f124
  43bfba:	mov    eax,ds:0x4600fc
  43bfbf:	lea    edx,[eax-0x1]
  43bfc2:	test   edx,edx
  43bfc4:	je     0x43bfda
  43bfc6:	mov    eax,DWORD PTR [ebp-0x14]
  43bfc9:	mov    ecx,0x460100
  43bfce:	cmp    eax,DWORD PTR [ecx]
  43bfd0:	je     0x43bfda
  43bfd2:	inc    ebx
  43bfd3:	add    ecx,0x1c
  43bfd6:	cmp    ebx,edx
  43bfd8:	jb     0x43bfce
  43bfda:	cmp    ebx,edx
  43bfdc:	jne    0x43bfe1
  43bfde:	and    BYTE PTR [edi],0xfb
  43bfe1:	mov    al,BYTE PTR [edi]
  43bfe3:	test   al,0x8
  43bfe5:	je     0x43bffb
  43bfe7:	test   al,0x4
  43bfe9:	jne    0x43bffb
  43bfeb:	lea    ecx,[edi+0x3]
  43bfee:	call   0x43f37f
  43bff3:	push   edi
  43bff4:	call   DWORD PTR ds:0x464354
  43bffa:	pop    ecx
  43bffb:	push   DWORD PTR [ebp-0xc]
  43bffe:	call   DWORD PTR ds:0x464354
  43c004:	mov    eax,DWORD PTR [ebp-0x10]
  43c007:	pop    ecx
  43c008:	xor    ecx,ecx
  43c00a:	xor    dl,dl
  43c00c:	mov    WORD PTR [eax-0x9],cx
  43c010:	call   0x43d777
  43c015:	dec    DWORD PTR ds:0x4617e4
  43c01b:	jne    0x43c03f
  43c01d:	cmp    BYTE PTR ds:0x45f99f,0x0
  43c024:	jne    0x43c03f
  43c026:	test   BYTE PTR ds:0x45f83b,0x1
  43c02d:	jne    0x43c03f
  43c02f:	mov    edx,DWORD PTR ds:0x448884
  43c035:	mov    ecx,0x41f3d8
  43c03a:	call   0x43f399
  43c03f:	pop    edi
  43c040:	pop    esi
  43c041:	pop    ebx
  43c042:	leave  
  43c043:	ret    0x4
  43c046:	push   ebp
  43c047:	mov    ebp,esp
  43c049:	sub    esp,0x208
  43c04f:	mov    eax,ds:0x448858
  43c054:	xor    eax,ebp
  43c056:	mov    DWORD PTR [ebp-0x4],eax
  43c059:	mov    ecx,DWORD PTR ds:0x463880
  43c05f:	push   ebx
  43c060:	mov    al,BYTE PTR [ecx]
  43c062:	push   esi
  43c063:	xor    esi,esi
  43c065:	push   edi
  43c066:	mov    ebx,esi
  43c068:	cmp    al,0x36
  43c06a:	jne    0x43c06e
  43c06c:	mov    ebx,ecx
  43c06e:	add    ecx,0x3
  43c071:	cmp    al,0x37
  43c073:	jne    0x43c087
  43c075:	mov    edi,DWORD PTR [ecx]
  43c077:	cmp    BYTE PTR [edi],0x0
  43c07a:	jne    0x43c082
  43c07c:	mov    edi,DWORD PTR [edi+0x1]
  43c07f:	add    edi,0x4
  43c082:	add    ecx,0x4
  43c085:	jmp    0x43c08d
  43c087:	mov    edi,DWORD PTR [ebp-0x208]
  43c08d:	lea    eax,[ebp-0x208]
  43c093:	push   eax
  43c094:	lea    eax,[ebp-0x204]
  43c09a:	push   eax
  43c09b:	add    ecx,0x2
  43c09e:	call   0x43d0f2
  43c0a3:	mov    edx,DWORD PTR [ebp-0x208]
  43c0a9:	lea    ecx,[ebp-0x204]
  43c0af:	call   0x434ba9
  43c0b4:	cmp    BYTE PTR ds:0x44e00b,0x0
  43c0bb:	je     0x43c0e9
  43c0bd:	mov    ecx,DWORD PTR [ebp-0x208]
  43c0c3:	mov    edx,0x44f554
  43c0c8:	call   0x43f2c0
  43c0cd:	push   DWORD PTR [ebp-0x208]
  43c0d3:	lea    ecx,[ebp-0x204]
  43c0d9:	mov    BYTE PTR [eax],0x3e
  43c0dc:	push   ecx
  43c0dd:	add    eax,0x3
  43c0e0:	push   eax
  43c0e1:	call   0x447646
  43c0e6:	add    esp,0xc
  43c0e9:	cmp    WORD PTR ds:0x45fac8,si
  43c0f0:	je     0x43c119
  43c0f2:	mov    esi,DWORD PTR ds:0x460618
  43c0f8:	mov    DWORD PTR ds:0x460624,0x45fab8
  43c102:	call   0x441eb1
  43c107:	mov    ecx,DWORD PTR ds:0x45f9b4
  43c10d:	mov    DWORD PTR ds:0x460618,esi
  43c113:	sub    DWORD PTR [ecx],esi
  43c115:	xor    esi,esi
  43c117:	jmp    0x43c11f
  43c119:	mov    ecx,DWORD PTR ds:0x45f9b4
  43c11f:	mov    al,ds:0x45f993
  43c124:	test   al,al
  43c126:	je     0x43c177
  43c128:	test   ebx,ebx
  43c12a:	je     0x43c161
  43c12c:	cmp    BYTE PTR [ebx],0x36
  43c12f:	jne    0x43c161
  43c131:	movzx  edi,WORD PTR [ebx+0x1]
  43c135:	add    edi,ebx
  43c137:	cmp    BYTE PTR [edi],0x36
  43c13a:	je     0x43c161
  43c13c:	movzx  eax,WORD PTR [edi+0x1]
  43c140:	add    edi,eax
  43c142:	cmp    BYTE PTR [edi],0x0
  43c145:	je     0x43c14d
  43c147:	cmp    WORD PTR [edi+0x1],si
  43c14b:	jne    0x43c157
  43c14d:	mov    ecx,0x3f2
  43c152:	call   0x42f124
  43c157:	cmp    BYTE PTR [edi],0x36
  43c15a:	jne    0x43c13c
  43c15c:	mov    al,ds:0x45f993
  43c161:	dec    al
  43c163:	xor    dl,dl
  43c165:	mov    ecx,edi
  43c167:	mov    ds:0x45f993,al
  43c16c:	call   0x432f0d
  43c171:	mov    ecx,DWORD PTR ds:0x45f9b4
  43c177:	mov    eax,ds:0x460618
  43c17c:	add    DWORD PTR [ecx],eax
  43c17e:	mov    ecx,DWORD PTR [ebp-0x4]
  43c181:	pop    edi
  43c182:	pop    esi
  43c183:	xor    ecx,ebp
  43c185:	pop    ebx
  43c186:	call   0x446dc7
  43c18b:	leave  
  43c18c:	ret    
  43c18d:	push   ebp
  43c18e:	mov    ebp,esp
  43c190:	push   ecx
  43c191:	mov    eax,ds:0x460580
  43c196:	push   ebx
  43c197:	mov    ebx,DWORD PTR ds:0x460584
  43c19d:	mov    DWORD PTR [ebp-0x4],eax
  43c1a0:	mov    eax,ds:0x463880
  43c1a5:	push   esi
  43c1a6:	mov    esi,DWORD PTR ds:0x46058c
  43c1ac:	mov    ds:0x46058c,eax
  43c1b1:	mov    eax,ds:0x448884
  43c1b6:	push   edi
  43c1b7:	mov    eax,DWORD PTR [eax+0xc]
  43c1ba:	mov    edi,DWORD PTR ds:0x460588
  43c1c0:	mov    ds:0x460588,eax
  43c1c5:	mov    eax,DWORD PTR [ebp+0x8]
  43c1c8:	mov    DWORD PTR ds:0x460584,edx
  43c1ce:	mov    ds:0x460580,eax
  43c1d3:	call   0x43df97
  43c1d8:	mov    DWORD PTR ds:0x460624,0x45fab8
  43c1e2:	call   0x441eb1
  43c1e7:	cmp    BYTE PTR ds:0x44e043,0x0
  43c1ee:	je     0x43c1f5
  43c1f0:	call   0x438545
  43c1f5:	mov    eax,ds:0x46058c
  43c1fa:	mov    ecx,DWORD PTR [ebp-0x4]
  43c1fd:	mov    DWORD PTR ds:0x460588,edi
  43c203:	pop    edi
  43c204:	mov    DWORD PTR ds:0x46058c,esi
  43c20a:	pop    esi
  43c20b:	mov    DWORD PTR ds:0x460584,ebx
  43c211:	mov    DWORD PTR ds:0x460580,ecx
  43c217:	pop    ebx
  43c218:	leave  
  43c219:	ret    0x4
  43c21c:	push   ebp
  43c21d:	mov    ebp,esp
  43c21f:	sub    esp,0xc
  43c222:	mov    eax,ds:0x460618
  43c227:	push   ebx
  43c228:	push   esi
  43c229:	mov    DWORD PTR [ebp-0x8],eax
  43c22c:	mov    eax,ds:0x463310
  43c231:	push   edi
  43c232:	mov    edi,ecx
  43c234:	mov    WORD PTR [edx+0x16],ax
  43c238:	movzx  esi,BYTE PTR [edi+0x1]
  43c23c:	or     BYTE PTR [edi],0x4
  43c23f:	add    eax,esi
  43c241:	mov    DWORD PTR [ebp-0x4],edx
  43c244:	mov    DWORD PTR [ebp-0xc],edi
  43c247:	mov    ds:0x463310,eax
  43c24c:	test   esi,esi
  43c24e:	je     0x43c27e
  43c250:	mov    edi,edx
  43c252:	movzx  edx,WORD PTR [edi+0x16]
  43c256:	push   0x10
  43c258:	dec    esi
  43c259:	push   0x4
  43c25b:	add    edx,esi
  43c25d:	mov    ecx,0x44db3e
  43c262:	call   0x42ea92
  43c267:	mov    edx,DWORD PTR ds:0x448884
  43c26d:	mov    ecx,0x44db34
  43c272:	call   0x43f399
  43c277:	test   esi,esi
  43c279:	jne    0x43c252
  43c27b:	mov    edi,DWORD PTR [ebp-0xc]
  43c27e:	mov    esi,DWORD PTR [edi+0xb]
  43c281:	add    esi,0x4
  43c284:	mov    DWORD PTR ds:0x463880,esi
  43c28a:	je     0x43c693
  43c290:	push   0x3
  43c292:	pop    edi
  43c293:	mov    ecx,esi
  43c295:	call   0x428f71
  43c29a:	mov    ebx,eax
  43c29c:	mov    al,BYTE PTR [esi]
  43c29e:	cmp    al,0x6d
  43c2a0:	jne    0x43c2b2
  43c2a2:	mov    ecx,DWORD PTR ds:0x45f9b4
  43c2a8:	mov    edx,DWORD PTR [esi+0x3]
  43c2ab:	mov    DWORD PTR [ecx],edx
  43c2ad:	jmp    0x43c683
  43c2b2:	cmp    al,0x3e
  43c2b4:	jne    0x43c314
  43c2b6:	cmp    BYTE PTR ds:0x44e00b,0x0
  43c2bd:	je     0x43c2d1
  43c2bf:	mov    edx,0x44f554
  43c2c4:	mov    ecx,esi
  43c2c6:	call   0x43f399
  43c2cb:	mov    esi,DWORD PTR ds:0x463880
  43c2d1:	cmp    BYTE PTR ds:0x44f54e,0x0
  43c2d8:	je     0x43c683
  43c2de:	mov    ax,WORD PTR [esi+0x1]
  43c2e2:	sub    ax,di
  43c2e5:	movzx  edi,ax
  43c2e8:	lea    eax,[esi+0x3]
  43c2eb:	mov    esi,DWORD PTR ds:0x44f538
  43c2f1:	push   edi
  43c2f2:	push   eax
  43c2f3:	push   esi
  43c2f4:	call   0x447646
  43c2f9:	add    esp,0xc
  43c2fc:	lea    eax,[esi+edi*1]
  43c2ff:	push   0x0
  43c301:	xor    dl,dl
  43c303:	xor    ecx,ecx
  43c305:	mov    ds:0x460e38,eax
  43c30a:	call   0x43abf1
  43c30f:	jmp    0x43c680
  43c314:	cmp    al,0x5b
  43c316:	jne    0x43c339
  43c318:	cmp    BYTE PTR ds:0x44e00b,0x0
  43c31f:	je     0x43c683
  43c325:	mov    edx,0x44f554
  43c32a:	mov    ecx,esi
  43c32c:	call   0x43f399
  43c331:	mov    BYTE PTR [eax],0x3e
  43c334:	jmp    0x43c683
  43c339:	test   ebx,ebx
  43c33b:	je     0x43c693
  43c341:	mov    eax,ds:0x45f9b4
  43c346:	mov    ecx,DWORD PTR [ebx+0x3]
  43c349:	mov    DWORD PTR [eax],ecx
  43c34b:	mov    al,BYTE PTR [esi]
  43c34d:	mov    BYTE PTR ds:0x460565,0x0
  43c354:	cmp    al,0x36
  43c356:	jb     0x43c381
  43c358:	cmp    al,0x37
  43c35a:	jbe    0x43c372
  43c35c:	cmp    al,0x39
  43c35e:	jne    0x43c381
  43c360:	push   DWORD PTR [ebp+0x8]
  43c363:	mov    edx,DWORD PTR [ebp-0x4]
  43c366:	call   0x43c18d
  43c36b:	mov    ebx,eax
  43c36d:	jmp    0x43c680
  43c372:	mov    edi,DWORD PTR [ebp-0x4]
  43c375:	mov    edx,edi
  43c377:	call   0x43c046
  43c37c:	jmp    0x43c493
  43c381:	movzx  eax,WORD PTR [esi+0x1]
  43c385:	push   eax
  43c386:	push   esi
  43c387:	push   0x462d60
  43c38c:	call   0x447646
  43c391:	add    esp,0xc
  43c394:	cmp    BYTE PTR ds:0x44e00b,0x0
  43c39b:	jne    0x43c3a6
  43c39d:	cmp    BYTE PTR ds:0x44f551,0x0
  43c3a4:	je     0x43c3fc
  43c3a6:	mov    ecx,ebx
  43c3a8:	call   0x428f71
  43c3ad:	cmp    BYTE PTR ds:0x44e00b,0x0
  43c3b4:	mov    ebx,eax
  43c3b6:	je     0x43c3c4
  43c3b8:	mov    edx,0x44f554
  43c3bd:	mov    ecx,ebx
  43c3bf:	call   0x43f399
  43c3c4:	cmp    BYTE PTR ds:0x44f54e,0x0
  43c3cb:	je     0x43c3f3
  43c3cd:	mov    ax,WORD PTR [ebx+0x1]
  43c3d1:	mov    esi,DWORD PTR ds:0x44f538
  43c3d7:	sub    ax,di
  43c3da:	movzx  edi,ax
  43c3dd:	push   edi
  43c3de:	lea    eax,[ebx+0x3]
  43c3e1:	push   eax
  43c3e2:	push   esi
  43c3e3:	call   0x447646
  43c3e8:	lea    eax,[esi+edi*1]
  43c3eb:	add    esp,0xc
  43c3ee:	mov    ds:0x460e38,eax
  43c3f3:	mov    ecx,ebx
  43c3f5:	call   0x428f71
  43c3fa:	mov    ebx,eax
  43c3fc:	cmp    BYTE PTR ds:0x44e043,0x0
  43c403:	je     0x43c41b
  43c405:	movzx  eax,BYTE PTR ds:0x462d60
  43c40c:	cmp    DWORD PTR [eax*4+0x448d98],0x0
  43c414:	je     0x43c41b
  43c416:	call   0x438545
  43c41b:	mov    eax,ds:0x45f9b4
  43c420:	movzx  ecx,BYTE PTR ds:0x462d60
  43c427:	mov    esi,DWORD PTR [eax]
  43c429:	mov    eax,ds:0x448988
  43c42e:	mov    edi,0x462d60
  43c433:	push   edi
  43c434:	call   DWORD PTR [eax+ecx*4]
  43c437:	mov    eax,ds:0x45f9b4
  43c43c:	mov    edx,DWORD PTR ds:0x448884
  43c442:	mov    ecx,edi
  43c444:	mov    DWORD PTR [eax],esi
  43c446:	call   0x43f399
  43c44b:	cmp    BYTE PTR ds:0x44e043,0x0
  43c452:	mov    dl,BYTE PTR ds:0x462d60
  43c458:	je     0x43c480
  43c45a:	movzx  eax,dl
  43c45d:	cmp    DWORD PTR [eax*4+0x448d98],0x0
  43c465:	je     0x43c480
  43c467:	cmp    dl,0x32
  43c46a:	je     0x43c480
  43c46c:	cmp    BYTE PTR ds:0x4605bf,0x0
  43c473:	jne    0x43c480
  43c475:	call   0x43857e
  43c47a:	mov    dl,BYTE PTR ds:0x462d60
  43c480:	push   0x0
  43c482:	mov    ecx,edi
  43c484:	mov    BYTE PTR ds:0x4605bf,0x0
  43c48b:	call   0x43abf1
  43c490:	mov    edi,DWORD PTR [ebp-0x4]
  43c493:	mov    al,ds:0x460565
  43c498:	test   al,al
  43c49a:	je     0x43c680
  43c4a0:	cmp    BYTE PTR ds:0x44e00b,0x0
  43c4a7:	je     0x43c662
  43c4ad:	cmp    BYTE PTR ds:0x45f99e,0x0
  43c4b4:	je     0x43c662
  43c4ba:	cmp    al,0x2
  43c4bc:	jne    0x43c662
  43c4c2:	cmp    BYTE PTR ds:0x45f99f,0x3
  43c4c9:	jne    0x43c662
  43c4cf:	mov    esi,ebx
  43c4d1:	mov    DWORD PTR ds:0x463880,esi
  43c4d7:	cmp    ebx,DWORD PTR ds:0x460590
  43c4dd:	je     0x43c662
  43c4e3:	mov    ecx,ebx
  43c4e5:	call   0x428f71
  43c4ea:	mov    ebx,eax
  43c4ec:	mov    al,BYTE PTR [esi]
  43c4ee:	cmp    al,0x6d
  43c4f0:	je     0x43c64a
  43c4f6:	cmp    al,0x3e
  43c4f8:	jne    0x43c552
  43c4fa:	mov    edx,0x44f554
  43c4ff:	mov    ecx,esi
  43c501:	call   0x43f399
  43c506:	cmp    BYTE PTR ds:0x44f54e,0x0
  43c50d:	je     0x43c64a
  43c513:	mov    ecx,DWORD PTR ds:0x463880
  43c519:	push   0x3
  43c51b:	mov    ax,WORD PTR [ecx+0x1]
  43c51f:	pop    edx
  43c520:	sub    ax,dx
  43c523:	movzx  edi,ax
  43c526:	lea    eax,[ecx+0x3]
  43c529:	mov    esi,DWORD PTR ds:0x44f538
  43c52f:	push   edi
  43c530:	push   eax
  43c531:	push   esi
  43c532:	call   0x447646
  43c537:	add    esp,0xc
  43c53a:	lea    eax,[esi+edi*1]
  43c53d:	push   0x0
  43c53f:	xor    dl,dl
  43c541:	xor    ecx,ecx
  43c543:	mov    ds:0x460e38,eax
  43c548:	call   0x43abf1
  43c54d:	jmp    0x43c64a
  43c552:	test   ebx,ebx
  43c554:	je     0x43c662
  43c55a:	mov    eax,ds:0x45f9b4
  43c55f:	mov    ecx,DWORD PTR [ebx+0x3]
  43c562:	mov    DWORD PTR [eax],ecx
  43c564:	mov    cl,BYTE PTR [esi]
  43c566:	mov    al,cl
  43c568:	mov    BYTE PTR ds:0x460565,0x0
  43c56f:	cmp    al,0x36
  43c571:	jb     0x43c5ef
  43c573:	cmp    al,0x37
  43c575:	jbe    0x43c58c
  43c577:	cmp    al,0x39
  43c579:	jne    0x43c5ef
  43c57b:	mov    eax,DWORD PTR [ebp+0x8]
  43c57e:	add    eax,0x3
  43c581:	push   0x463884
  43c586:	push   eax
  43c587:	lea    ecx,[esi+0x3]
  43c58a:	jmp    0x43c5ac
  43c58c:	mov    eax,DWORD PTR [ebp+0x8]
  43c58f:	add    eax,0x3
  43c592:	push   0x463884
  43c597:	push   eax
  43c598:	xor    eax,eax
  43c59a:	cmp    cl,0x36
  43c59d:	setne  al
  43c5a0:	lea    ecx,[esi+0x3]
  43c5a3:	lea    eax,[eax*4+0x2]
  43c5aa:	add    ecx,eax
  43c5ac:	mov    edx,edi
  43c5ae:	call   0x43d0f2
  43c5b3:	mov    esi,DWORD PTR [ebp+0x8]
  43c5b6:	mov    edx,0x44f554
  43c5bb:	mov    BYTE PTR [esi],0x3e
  43c5be:	mov    eax,ds:0x463884
  43c5c3:	add    eax,0x3
  43c5c6:	mov    ecx,esi
  43c5c8:	mov    WORD PTR [esi+0x1],ax
  43c5cc:	call   0x43f399
  43c5d1:	cmp    BYTE PTR ds:0x44f54e,0x0
  43c5d8:	je     0x43c64a
  43c5da:	mov    ax,WORD PTR [esi+0x1]
  43c5de:	push   0x3
  43c5e0:	pop    ecx
  43c5e1:	sub    ax,cx
  43c5e4:	movzx  edi,ax
  43c5e7:	lea    eax,[esi+0x3]
  43c5ea:	jmp    0x43c529
  43c5ef:	mov    ecx,ebx
  43c5f1:	call   0x428f71
  43c5f6:	mov    ebx,eax
  43c5f8:	mov    edx,0x44f554
  43c5fd:	mov    ecx,ebx
  43c5ff:	call   0x43f399
  43c604:	cmp    BYTE PTR ds:0x44f54e,0x0
  43c60b:	je     0x43c641
  43c60d:	mov    cx,WORD PTR [ebx+0x1]
  43c611:	mov    esi,DWORD PTR ds:0x44f538
  43c617:	push   0x3
  43c619:	pop    eax
  43c61a:	sub    cx,ax
  43c61d:	movzx  edi,cx
  43c620:	push   edi
  43c621:	lea    eax,[ebx+0x3]
  43c624:	push   eax
  43c625:	push   esi
  43c626:	call   0x447646
  43c62b:	add    esp,0xc
  43c62e:	lea    eax,[esi+edi*1]
  43c631:	push   0x0
  43c633:	xor    dl,dl
  43c635:	xor    ecx,ecx
  43c637:	mov    ds:0x460e38,eax
  43c63c:	call   0x43abf1
  43c641:	mov    ecx,ebx
  43c643:	call   0x428f71
  43c648:	mov    ebx,eax
  43c64a:	mov    esi,ebx
  43c64c:	mov    DWORD PTR ds:0x463880,esi
  43c652:	cmp    ebx,DWORD PTR ds:0x460590
  43c658:	je     0x43c662
  43c65a:	mov    edi,DWORD PTR [ebp-0x4]
  43c65d:	jmp    0x43c4e3
  43c662:	mov    eax,DWORD PTR [ebp-0x8]
  43c665:	cmp    BYTE PTR ds:0x460565,0x3
  43c66c:	mov    ebx,DWORD PTR ds:0x460590
  43c672:	mov    ds:0x460618,eax
  43c677:	mov    BYTE PTR ds:0x460565,0x0
  43c67e:	je     0x43c6a4
  43c680:	push   0x3
  43c682:	pop    edi
  43c683:	mov    esi,ebx
  43c685:	mov    DWORD PTR ds:0x463880,esi
  43c68b:	test   ebx,ebx
  43c68d:	jne    0x43c293
  43c693:	mov    eax,DWORD PTR [ebp-0x8]
  43c696:	mov    ds:0x460618,eax
  43c69b:	mov    al,0x1
  43c69d:	pop    edi
  43c69e:	pop    esi
  43c69f:	pop    ebx
  43c6a0:	leave  
  43c6a1:	ret    0x4
  43c6a4:	xor    al,al
  43c6a6:	jmp    0x43c69d
  43c6a8:	push   ebp
  43c6a9:	mov    ebp,esp
  43c6ab:	cmp    BYTE PTR ds:0x45f992,0x0
  43c6b2:	jne    0x43c6d6
  43c6b4:	push   0x0
  43c6b6:	xor    edx,edx
  43c6b8:	mov    ecx,0x87a
  43c6bd:	call   0x42ee80
  43c6c2:	cmp    BYTE PTR ds:0x45f692,0x0
  43c6c9:	jne    0x43c73a
  43c6cb:	mov    eax,DWORD PTR [ebp+0x8]
  43c6ce:	xor    ecx,ecx
  43c6d0:	mov    WORD PTR [eax+0x1],cx
  43c6d4:	jmp    0x43c73a
  43c6d6:	push   esi
  43c6d7:	mov    esi,DWORD PTR [ebp+0x8]
  43c6da:	mov    eax,DWORD PTR [esi+0x3]
  43c6dd:	test   eax,eax
  43c6df:	je     0x43c739
  43c6e1:	cmp    BYTE PTR [eax],0x0
  43c6e4:	jne    0x43c6ec
  43c6e6:	mov    eax,DWORD PTR [eax+0x1]
  43c6e9:	add    eax,0x4
  43c6ec:	mov    ecx,eax
  43c6ee:	call   0x428f71
  43c6f3:	test   eax,eax
  43c6f5:	je     0x43c70e
  43c6f7:	mov    cl,BYTE PTR [eax]
  43c6f9:	cmp    cl,0x3e
  43c6fc:	je     0x43c6ec
  43c6fe:	cmp    cl,0x6d
  43c701:	je     0x43c6ec
  43c703:	mov    dl,0x1
  43c705:	mov    ecx,eax
  43c707:	call   0x432f0d
  43c70c:	jmp    0x43c71c
  43c70e:	and    DWORD PTR ds:0x460590,0x0
  43c715:	mov    BYTE PTR ds:0x460565,0x1
  43c71c:	mov    ecx,DWORD PTR [esi+0x7]
  43c71f:	movzx  eax,BYTE PTR [ecx]
  43c722:	push   eax
  43c723:	mov    ds:0x460594,eax
  43c728:	lea    eax,[ecx+0x1]
  43c72b:	push   eax
  43c72c:	push   0x460e6c
  43c731:	call   0x447646
  43c736:	add    esp,0xc
  43c739:	pop    esi
  43c73a:	pop    ebp
  43c73b:	ret    0x4
  43c73e:	push   ebp
  43c73f:	mov    ebp,esp
  43c741:	cmp    BYTE PTR ds:0x45f992,0x0
  43c748:	jne    0x43c773
  43c74a:	push   0x0
  43c74c:	xor    edx,edx
  43c74e:	mov    ecx,0x87a
  43c753:	call   0x42ee80
  43c758:	cmp    BYTE PTR ds:0x45f692,0x0
  43c75f:	jne    0x43c80f
  43c765:	mov    eax,DWORD PTR [ebp+0x8]
  43c768:	xor    ecx,ecx
  43c76a:	mov    WORD PTR [eax+0x1],cx
  43c76e:	jmp    0x43c80f
  43c773:	push   edi
  43c774:	mov    edi,DWORD PTR [ebp+0x8]
  43c777:	push   0x3
  43c779:	mov    ax,WORD PTR [edi+0x1]
  43c77d:	pop    ecx
  43c77e:	sub    ax,cx
  43c781:	jne    0x43c78c
  43c783:	cmp    DWORD PTR ds:0x45fab4,0x0
  43c78a:	je     0x43c7e8
  43c78c:	push   ebx
  43c78d:	mov    ecx,0x100
  43c792:	call   0x43f45b
  43c797:	push   0xff
  43c79c:	lea    ecx,[edi+0x3]
  43c79f:	mov    edx,eax
  43c7a1:	mov    DWORD PTR [ebp+0x8],eax
  43c7a4:	call   0x42e945
  43c7a9:	mov    ebx,eax
  43c7ab:	test   ebx,ebx
  43c7ad:	je     0x43c7da
  43c7af:	movzx  ecx,BYTE PTR [ebx]
  43c7b2:	push   esi
  43c7b3:	inc    ecx
  43c7b4:	call   0x43f45b
  43c7b9:	movzx  ecx,BYTE PTR [ebx]
  43c7bc:	push   ecx
  43c7bd:	lea    ecx,[ebx+0x1]
  43c7c0:	mov    esi,eax
  43c7c2:	push   ecx
  43c7c3:	push   esi
  43c7c4:	mov    DWORD PTR ds:0x45fab4,esi
  43c7ca:	call   0x447646
  43c7cf:	movzx  ecx,BYTE PTR [ebx]
  43c7d2:	add    esp,0xc
  43c7d5:	mov    BYTE PTR [ecx+esi*1],0x0
  43c7d9:	pop    esi
  43c7da:	push   DWORD PTR [ebp+0x8]
  43c7dd:	call   DWORD PTR ds:0x464354
  43c7e3:	pop    ecx
  43c7e4:	push   0x3
  43c7e6:	pop    ecx
  43c7e7:	pop    ebx
  43c7e8:	mov    eax,ds:0x45f9b4
  43c7ed:	and    DWORD PTR ds:0x460590,0x0
  43c7f4:	inc    DWORD PTR [eax]
  43c7f6:	mov    BYTE PTR ds:0x460565,cl
  43c7fc:	call   0x438545
  43c801:	mov    eax,ds:0x45f9b4
  43c806:	dec    DWORD PTR [eax]
  43c808:	xor    eax,eax
  43c80a:	mov    WORD PTR [edi+0x1],ax
  43c80e:	pop    edi
  43c80f:	pop    ebp
  43c810:	ret    0x4
  43c813:	push   ebp
  43c814:	mov    ebp,esp
  43c816:	sub    esp,0xc
  43c819:	push   ebx
  43c81a:	push   esi
  43c81b:	mov    ebx,edx
  43c81d:	push   edi
  43c81e:	mov    edi,DWORD PTR [ebp+0x8]
  43c821:	mov    esi,ecx
  43c823:	lea    eax,[ebx+0x13]
  43c826:	mov    ecx,edi
  43c828:	mov    DWORD PTR [ebp-0xc],ebx
  43c82b:	mov    DWORD PTR [ebp-0x4],eax
  43c82e:	call   0x43c8d4
  43c833:	movzx  ecx,BYTE PTR [esi]
  43c836:	lea    eax,[esi+0x1]
  43c839:	add    ecx,eax
  43c83b:	xor    esi,esi
  43c83d:	mov    DWORD PTR [ebp+0x8],ecx
  43c840:	mov    BYTE PTR ds:0x4605b5,0x1
  43c847:	cmp    eax,ecx
  43c849:	jae    0x43c881
  43c84b:	cmp    BYTE PTR [eax],0x3b
  43c84e:	je     0x43c881
  43c850:	mov    ebx,eax
  43c852:	mov    ecx,DWORD PTR [edi]
  43c854:	mov    edx,esi
  43c856:	call   0x43cc17
  43c85b:	push   DWORD PTR [edi]
  43c85d:	mov    edx,DWORD PTR [ebp+0x8]
  43c860:	mov    ecx,ebx
  43c862:	call   0x43c91a
  43c867:	push   DWORD PTR [ebp-0x4]
  43c86a:	mov    ecx,DWORD PTR [edi]
  43c86c:	mov    edx,esi
  43c86e:	mov    ebx,eax
  43c870:	call   0x43ccc9
  43c875:	inc    esi
  43c876:	mov    DWORD PTR [ebp-0x4],eax
  43c879:	cmp    ebx,DWORD PTR [ebp+0x8]
  43c87c:	jb     0x43c852
  43c87e:	mov    ebx,DWORD PTR [ebp-0xc]
  43c881:	mov    cl,BYTE PTR [ebx+0x2]
  43c884:	movzx  eax,cl
  43c887:	mov    BYTE PTR ds:0x4605b5,0x0
  43c88e:	cmp    esi,eax
  43c890:	jbe    0x43c8c5
  43c892:	mov    eax,DWORD PTR [edi]
  43c894:	cmp    BYTE PTR [eax+0x1],0xff
  43c898:	jne    0x43c8c5
  43c89a:	mov    BYTE PTR [eax],cl
  43c89c:	push   0x0
  43c89e:	xor    edx,edx
  43c8a0:	mov    ecx,0xfa6
  43c8a5:	call   0x42ee80
  43c8aa:	jmp    0x43c8c5
  43c8ac:	mov    ecx,DWORD PTR [edi]
  43c8ae:	mov    edx,esi
  43c8b0:	call   0x43cc17
  43c8b5:	push   DWORD PTR [ebp-0x4]
  43c8b8:	mov    ecx,DWORD PTR [edi]
  43c8ba:	mov    edx,esi
  43c8bc:	call   0x43ccc9
  43c8c1:	mov    DWORD PTR [ebp-0x4],eax
  43c8c4:	inc    esi
  43c8c5:	movzx  eax,BYTE PTR [ebx+0x2]
  43c8c9:	cmp    esi,eax
  43c8cb:	jb     0x43c8ac
  43c8cd:	pop    edi
  43c8ce:	pop    esi
  43c8cf:	pop    ebx
  43c8d0:	leave  
  43c8d1:	ret    0x8
  43c8d4:	push   ebx
  43c8d5:	push   esi
  43c8d6:	push   edi
  43c8d7:	push   0x18
  43c8d9:	mov    edi,ecx
  43c8db:	pop    ecx
  43c8dc:	call   0x43f45b
  43c8e1:	mov    esi,eax
  43c8e3:	mov    ecx,0x100
  43c8e8:	mov    WORD PTR [esi],0xff00
  43c8ed:	call   0x43f45b
  43c8f2:	lea    ecx,[eax+0x100]
  43c8f8:	mov    DWORD PTR [esi+0xc],ecx
  43c8fb:	mov    ebx,0x80
  43c900:	mov    ecx,ebx
  43c902:	mov    DWORD PTR [esi+0x4],eax
  43c905:	mov    DWORD PTR [esi+0x8],eax
  43c908:	call   0x43f45b
  43c90d:	mov    DWORD PTR [edi],esi
  43c90f:	pop    edi
  43c910:	mov    WORD PTR [esi+0x14],bx
  43c914:	mov    DWORD PTR [esi+0x10],eax
  43c917:	pop    esi
  43c918:	pop    ebx
  43c919:	ret    
  43c91a:	push   ebp
  43c91b:	mov    ebp,esp
  43c91d:	sub    esp,0x10
  43c920:	push   ebx
  43c921:	push   esi
  43c922:	push   edi
  43c923:	mov    edi,edx
  43c925:	mov    esi,ecx
  43c927:	xor    ecx,ecx
  43c929:	mov    DWORD PTR [ebp-0x10],edi
  43c92c:	mov    DWORD PTR [ebp-0x8],ecx
  43c92f:	cmp    esi,edi
  43c931:	jae    0x43c99f
  43c933:	cmp    BYTE PTR [esi],0x20
  43c936:	ja     0x43c93d
  43c938:	inc    esi
  43c939:	cmp    esi,edi
  43c93b:	jb     0x43c933
  43c93d:	cmp    esi,edi
  43c93f:	jae    0x43c99f
  43c941:	mov    bl,BYTE PTR [esi]
  43c943:	movsx  eax,bl
  43c946:	mov    BYTE PTR [ebp-0x1],bl
  43c949:	cmp    eax,0x25
  43c94c:	jg     0x43ca08
  43c952:	je     0x43c9f7
  43c958:	sub    eax,0x9
  43c95b:	je     0x43c9c7
  43c95d:	sub    eax,0x4
  43c960:	je     0x43cbb6
  43c966:	sub    eax,0x13
  43c969:	je     0x43c9c7
  43c96b:	dec    eax
  43c96c:	je     0x43c9a8
  43c96e:	dec    eax
  43c96f:	jne    0x43ca32
  43c975:	push   ecx
  43c976:	push   DWORD PTR [ebp+0x8]
  43c979:	mov    edx,edi
  43c97b:	mov    ecx,esi
  43c97d:	call   0x43cbcc
  43c982:	lea    esi,[eax-0x1]
  43c985:	mov    ecx,DWORD PTR [ebp-0x8]
  43c988:	inc    esi
  43c989:	cmp    esi,edi
  43c98b:	jb     0x43c941
  43c98d:	test   ecx,ecx
  43c98f:	je     0x43c99f
  43c991:	push   0x0
  43c993:	xor    edx,edx
  43c995:	mov    ecx,0xfaa
  43c99a:	call   0x42ee80
  43c99f:	mov    eax,edi
  43c9a1:	pop    edi
  43c9a2:	pop    esi
  43c9a3:	pop    ebx
  43c9a4:	leave  
  43c9a5:	ret    0x4
  43c9a8:	inc    esi
  43c9a9:	cmp    esi,edi
  43c9ab:	jb     0x43c9c0
  43c9ad:	push   0x0
  43c9af:	xor    edx,edx
  43c9b1:	mov    ecx,0x7f6
  43c9b6:	call   0x42ee80
  43c9bb:	jmp    0x43cba0
  43c9c0:	mov    bl,BYTE PTR [esi]
  43c9c2:	jmp    0x43cba0
  43c9c7:	test   ecx,ecx
  43c9c9:	jne    0x43cba0
  43c9cf:	lea    eax,[esi+0x1]
  43c9d2:	cmp    eax,edi
  43c9d4:	jae    0x43c99f
  43c9d6:	cmp    BYTE PTR [eax],0x20
  43c9d9:	ja     0x43c9e0
  43c9db:	inc    eax
  43c9dc:	cmp    eax,edi
  43c9de:	jb     0x43c9d6
  43c9e0:	cmp    eax,edi
  43c9e2:	jae    0x43c99f
  43c9e4:	mov    cl,BYTE PTR [eax]
  43c9e6:	cmp    cl,0x3b
  43c9e9:	je     0x43c99f
  43c9eb:	cmp    cl,0x2c
  43c9ee:	jne    0x43cba0
  43c9f4:	inc    eax
  43c9f5:	jmp    0x43c9a1
  43c9f7:	push   DWORD PTR [ebp+0x8]
  43c9fa:	mov    edx,edi
  43c9fc:	mov    ecx,esi
  43c9fe:	call   0x43cdaa
  43ca03:	jmp    0x43c982
  43ca08:	sub    eax,0x27
  43ca0b:	je     0x43c975
  43ca11:	sub    eax,0x5
  43ca14:	je     0x43cbc0
  43ca1a:	sub    eax,0xf
  43ca1d:	je     0x43cbb6
  43ca23:	dec    eax
  43ca24:	je     0x43cbaf
  43ca2a:	dec    eax
  43ca2b:	dec    eax
  43ca2c:	je     0x43cb96
  43ca32:	test   ecx,ecx
  43ca34:	jne    0x43cba0
  43ca3a:	mov    cl,bl
  43ca3c:	call   0x43f224
  43ca41:	test   al,al
  43ca43:	je     0x43cba0
  43ca49:	lea    ebx,[esi+0x1]
  43ca4c:	jmp    0x43ca5e
  43ca4e:	movzx  eax,BYTE PTR [ebx]
  43ca51:	mov    al,BYTE PTR [eax+0x448f88]
  43ca57:	sub    al,0x24
  43ca59:	cmp    al,0x3b
  43ca5b:	ja     0x43ca62
  43ca5d:	inc    ebx
  43ca5e:	cmp    ebx,edi
  43ca60:	jb     0x43ca4e
  43ca62:	mov    edx,ebx
  43ca64:	sub    edx,esi
  43ca66:	mov    ecx,esi
  43ca68:	call   0x445b60
  43ca6d:	mov    DWORD PTR [ebp-0xc],eax
  43ca70:	test   eax,eax
  43ca72:	je     0x43cb8c
  43ca78:	mov    cl,BYTE PTR [eax+0x6]
  43ca7b:	cmp    cl,0x5
  43ca7e:	je     0x43ca89
  43ca80:	cmp    cl,0x6
  43ca83:	jne    0x43cb8c
  43ca89:	cmp    ebx,edi
  43ca8b:	jae    0x43cb8c
  43ca91:	cmp    BYTE PTR [ebx],0x28
  43ca94:	je     0x43ca9b
  43ca96:	inc    ebx
  43ca97:	cmp    ebx,edi
  43ca99:	jb     0x43ca91
  43ca9b:	cmp    ebx,edi
  43ca9d:	jae    0x43cb8c
  43caa3:	cmp    BYTE PTR [ebx],0x28
  43caa6:	jne    0x43cb8c
  43caac:	inc    ebx
  43caad:	xor    eax,eax
  43caaf:	mov    edx,ebx
  43cab1:	inc    eax
  43cab2:	cmp    ebx,edi
  43cab4:	jae    0x43cace
  43cab6:	mov    cl,BYTE PTR [ebx]
  43cab8:	mov    BYTE PTR [ebp-0x1],cl
  43cabb:	cmp    cl,0x28
  43cabe:	jne    0x43cac3
  43cac0:	inc    eax
  43cac1:	jmp    0x43cac9
  43cac3:	cmp    cl,0x29
  43cac6:	jne    0x43cac9
  43cac8:	dec    eax
  43cac9:	inc    ebx
  43caca:	test   eax,eax
  43cacc:	jne    0x43cab2
  43cace:	test   eax,eax
  43cad0:	je     0x43cae9
  43cad2:	mov    edx,0x41f748
  43cad7:	mov    ecx,0x811
  43cadc:	call   0x42f1c0
  43cae1:	mov    bl,BYTE PTR [ebp-0x1]
  43cae4:	jmp    0x43cba0
  43cae9:	mov    eax,ebx
  43caeb:	sub    eax,edx
  43caed:	dec    eax
  43caee:	cmp    eax,0xff
  43caf3:	jle    0x43cb05
  43caf5:	push   0x0
  43caf7:	xor    edx,edx
  43caf9:	mov    ecx,0x84f
  43cafe:	call   0x42ee80
  43cb03:	jmp    0x43cae1
  43cb05:	mov    ecx,DWORD PTR [ebp-0xc]
  43cb08:	mov    al,bl
  43cb0a:	sub    al,dl
  43cb0c:	dec    al
  43cb0e:	movzx  eax,al
  43cb11:	push   eax
  43cb12:	call   0x43451d
  43cb17:	mov    ecx,DWORD PTR ds:0x448988
  43cb1d:	mov    esi,eax
  43cb1f:	push   esi
  43cb20:	movzx  edx,BYTE PTR [esi]
  43cb23:	call   DWORD PTR [ecx+edx*4]
  43cb26:	push   esi
  43cb27:	call   DWORD PTR ds:0x464354
  43cb2d:	mov    esi,DWORD PTR ds:0x45fab4
  43cb33:	pop    ecx
  43cb34:	test   esi,esi
  43cb36:	je     0x43cb79
  43cb38:	mov    ecx,esi
  43cb3a:	lea    edx,[ecx+0x1]
  43cb3d:	mov    al,BYTE PTR [ecx]
  43cb3f:	inc    ecx
  43cb40:	test   al,al
  43cb42:	jne    0x43cb3d
  43cb44:	sub    ecx,edx
  43cb46:	lea    eax,[ecx+esi*1]
  43cb49:	mov    DWORD PTR [ebp-0xc],eax
  43cb4c:	cmp    esi,eax
  43cb4e:	jae    0x43cb6a
  43cb50:	mov    edi,eax
  43cb52:	mov    edx,DWORD PTR [ebp+0x8]
  43cb55:	mov    cl,BYTE PTR [esi]
  43cb57:	call   0x43cc6f
  43cb5c:	inc    esi
  43cb5d:	cmp    esi,edi
  43cb5f:	jb     0x43cb52
  43cb61:	mov    edi,DWORD PTR [ebp-0x10]
  43cb64:	mov    esi,DWORD PTR ds:0x45fab4
  43cb6a:	push   esi
  43cb6b:	call   DWORD PTR ds:0x464354
  43cb71:	and    DWORD PTR ds:0x45fab4,0x0
  43cb78:	pop    ecx
  43cb79:	lea    esi,[ebx-0x1]
  43cb7c:	jmp    0x43c985
  43cb81:	mov    edx,DWORD PTR [ebp+0x8]
  43cb84:	mov    cl,BYTE PTR [esi]
  43cb86:	call   0x43cc6f
  43cb8b:	inc    esi
  43cb8c:	cmp    esi,ebx
  43cb8e:	jb     0x43cb81
  43cb90:	dec    esi
  43cb91:	jmp    0x43c985
  43cb96:	dec    ecx
  43cb97:	mov    DWORD PTR [ebp-0x8],ecx
  43cb9a:	je     0x43c988
  43cba0:	mov    edx,DWORD PTR [ebp+0x8]
  43cba3:	mov    cl,bl
  43cba5:	call   0x43cc6f
  43cbaa:	jmp    0x43c985
  43cbaf:	mov    eax,ecx
  43cbb1:	inc    ecx
  43cbb2:	test   eax,eax
  43cbb4:	jmp    0x43cb97
  43cbb6:	test   ecx,ecx
  43cbb8:	je     0x43c99f
  43cbbe:	jmp    0x43cba0
  43cbc0:	test   ecx,ecx
  43cbc2:	jne    0x43cba0
  43cbc4:	lea    eax,[esi+0x1]
  43cbc7:	jmp    0x43c9a1
  43cbcc:	push   ebp
  43cbcd:	mov    ebp,esp
  43cbcf:	push   ebx
  43cbd0:	push   esi
  43cbd1:	mov    esi,ecx
  43cbd3:	push   edi
  43cbd4:	mov    bh,BYTE PTR [esi]
  43cbd6:	mov    edi,edx
  43cbd8:	mov    edx,DWORD PTR [ebp+0x8]
  43cbdb:	xor    bl,bl
  43cbdd:	mov    cl,bh
  43cbdf:	inc    esi
  43cbe0:	call   0x43cc6f
  43cbe5:	jmp    0x43cbf8
  43cbe7:	mov    bl,BYTE PTR [esi]
  43cbe9:	mov    edx,DWORD PTR [ebp+0x8]
  43cbec:	mov    cl,bl
  43cbee:	inc    esi
  43cbef:	call   0x43cc6f
  43cbf4:	cmp    bl,bh
  43cbf6:	je     0x43cc0e
  43cbf8:	cmp    esi,edi
  43cbfa:	jb     0x43cbe7
  43cbfc:	cmp    bl,bh
  43cbfe:	je     0x43cc0e
  43cc00:	push   0x0
  43cc02:	xor    edx,edx
  43cc04:	mov    ecx,0x7fe
  43cc09:	call   0x42ee80
  43cc0e:	pop    edi
  43cc0f:	mov    eax,esi
  43cc11:	pop    esi
  43cc12:	pop    ebx
  43cc13:	pop    ebp
  43cc14:	ret    0x8
  43cc17:	push   esi
  43cc18:	mov    esi,ecx
  43cc1a:	push   edi
  43cc1b:	movzx  ecx,WORD PTR [esi+0x14]
  43cc1f:	inc    BYTE PTR [esi]
  43cc21:	mov    edi,edx
  43cc23:	cmp    edi,ecx
  43cc25:	jb     0x43cc55
  43cc27:	lea    eax,[ecx+0x80]
  43cc2d:	mov    WORD PTR [esi+0x14],ax
  43cc31:	movzx  eax,ax
  43cc34:	push   ebx
  43cc35:	push   eax
  43cc36:	push   DWORD PTR [esi+0x10]
  43cc39:	call   DWORD PTR ds:0x4643e8
  43cc3f:	mov    ebx,eax
  43cc41:	pop    ecx
  43cc42:	pop    ecx
  43cc43:	test   ebx,ebx
  43cc45:	jne    0x43cc51
  43cc47:	mov    ecx,0x3ec
  43cc4c:	call   0x42f124
  43cc51:	mov    DWORD PTR [esi+0x10],ebx
  43cc54:	pop    ebx
  43cc55:	mov    cx,WORD PTR [esi+0x8]
  43cc59:	sub    cx,WORD PTR [esi+0x4]
  43cc5d:	mov    eax,DWORD PTR [esi+0x10]
  43cc60:	mov    edx,esi
  43cc62:	mov    WORD PTR [eax+edi*2],cx
  43cc66:	pop    edi
  43cc67:	xor    cl,cl
  43cc69:	pop    esi
  43cc6a:	jmp    0x43cc6f
  43cc6f:	push   ebp
  43cc70:	mov    ebp,esp
  43cc72:	push   ecx
  43cc73:	push   esi
  43cc74:	mov    esi,edx
  43cc76:	push   edi
  43cc77:	mov    edi,DWORD PTR [esi+0xc]
  43cc7a:	mov    BYTE PTR [ebp-0x1],cl
  43cc7d:	cmp    DWORD PTR [esi+0x8],edi
  43cc80:	jb     0x43ccba
  43cc82:	sub    edi,DWORD PTR [esi+0x4]
  43cc85:	push   ebx
  43cc86:	lea    eax,[edi+0x100]
  43cc8c:	push   eax
  43cc8d:	push   DWORD PTR [esi+0x4]
  43cc90:	call   DWORD PTR ds:0x4643e8
  43cc96:	mov    ebx,eax
  43cc98:	pop    ecx
  43cc99:	pop    ecx
  43cc9a:	test   ebx,ebx
  43cc9c:	jne    0x43cca8
  43cc9e:	mov    ecx,0x3ec
  43cca3:	call   0x42f124
  43cca8:	lea    eax,[ebx+edi*1]
  43ccab:	mov    DWORD PTR [esi+0x8],eax
  43ccae:	add    eax,0x100
  43ccb3:	mov    DWORD PTR [esi+0x4],ebx
  43ccb6:	mov    DWORD PTR [esi+0xc],eax
  43ccb9:	pop    ebx
  43ccba:	mov    eax,DWORD PTR [esi+0x8]
  43ccbd:	mov    cl,BYTE PTR [ebp-0x1]
  43ccc0:	mov    BYTE PTR [eax],cl
  43ccc2:	inc    DWORD PTR [esi+0x8]
  43ccc5:	pop    edi
  43ccc6:	pop    esi
  43ccc7:	leave  
  43ccc8:	ret    
  43ccc9:	push   ebp
  43ccca:	mov    ebp,esp
  43cccc:	sub    esp,0xc
  43cccf:	push   esi
  43ccd0:	mov    esi,DWORD PTR [ebp+0x8]
  43ccd3:	push   edi
  43ccd4:	mov    edi,ecx
  43ccd6:	mov    DWORD PTR [ebp-0x4],edx
  43ccd9:	mov    eax,DWORD PTR [edi+0x10]
  43ccdc:	movsx  ecx,WORD PTR [eax+edx*2]
  43cce0:	add    ecx,DWORD PTR [edi+0x4]
  43cce3:	mov    al,BYTE PTR [edi+0x8]
  43cce6:	sub    al,cl
  43cce8:	dec    al
  43ccea:	mov    DWORD PTR [ebp-0xc],ecx
  43cced:	mov    BYTE PTR [ecx],al
  43ccef:	jne    0x43cd7c
  43ccf5:	push   ebx
  43ccf6:	mov    al,BYTE PTR [esi]
  43ccf8:	cmp    al,0x7f
  43ccfa:	je     0x43cd3c
  43ccfc:	cmp    al,0x63
  43ccfe:	jne    0x43cd78
  43cd00:	mov    al,BYTE PTR [esi+0x1]
  43cd03:	test   al,al
  43cd05:	je     0x43cd78
  43cd07:	movzx  eax,al
  43cd0a:	add    eax,0x2
  43cd0d:	add    eax,esi
  43cd0f:	lea    ebx,[esi+0x2]
  43cd12:	mov    DWORD PTR [ebp-0x8],eax
  43cd15:	cmp    ebx,eax
  43cd17:	jae    0x43cd2f
  43cd19:	mov    esi,eax
  43cd1b:	mov    cl,BYTE PTR [ebx]
  43cd1d:	mov    edx,edi
  43cd1f:	call   0x43cc6f
  43cd24:	inc    ebx
  43cd25:	cmp    ebx,esi
  43cd27:	jb     0x43cd1b
  43cd29:	mov    esi,DWORD PTR [ebp+0x8]
  43cd2c:	mov    ecx,DWORD PTR [ebp-0xc]
  43cd2f:	mov    al,BYTE PTR [edi+0x8]
  43cd32:	sub    al,cl
  43cd34:	dec    al
  43cd36:	mov    BYTE PTR [ecx],al
  43cd38:	je     0x43ccf6
  43cd3a:	jmp    0x43cd78
  43cd3c:	mov    eax,ds:0x45f9b4
  43cd41:	push   0x0
  43cd43:	mov    DWORD PTR [eax],0x1
  43cd49:	mov    eax,ds:0x4600fc
  43cd4e:	imul   eax,eax,0x1c
  43cd51:	xor    edx,edx
  43cd53:	inc    WORD PTR [eax+0x4600f0]
  43cd5a:	mov    ecx,0x84d
  43cd5f:	call   0x42ee80
  43cd64:	mov    eax,ds:0x4600fc
  43cd69:	imul   eax,eax,0x1c
  43cd6c:	mov    ecx,0xffff
  43cd71:	add    WORD PTR [eax+0x4600f0],cx
  43cd78:	mov    edx,DWORD PTR [ebp-0x4]
  43cd7b:	pop    ebx
  43cd7c:	movzx  eax,BYTE PTR [esi]
  43cd7f:	sub    eax,0x63
  43cd82:	je     0x43cd9b
  43cd84:	sub    eax,0x1d
  43cd87:	je     0x43cd8e
  43cd89:	lea    eax,[esi+0x1]
  43cd8c:	jmp    0x43cda4
  43cd8e:	cmp    BYTE PTR [edi+0x1],0xff
  43cd92:	jne    0x43cd97
  43cd94:	mov    BYTE PTR [edi+0x1],dl
  43cd97:	mov    eax,esi
  43cd99:	jmp    0x43cda4
  43cd9b:	movzx  eax,BYTE PTR [esi+0x1]
  43cd9f:	add    eax,0x2
  43cda2:	add    eax,esi
  43cda4:	pop    edi
  43cda5:	pop    esi
  43cda6:	leave  
  43cda7:	ret    0x4
  43cdaa:	push   ebp
  43cdab:	mov    ebp,esp
  43cdad:	sub    esp,0x40
  43cdb0:	mov    eax,ds:0x448858
  43cdb5:	xor    eax,ebp
  43cdb7:	mov    DWORD PTR [ebp-0x4],eax
  43cdba:	mov    eax,DWORD PTR [ebp+0x8]
  43cdbd:	push   ebx
  43cdbe:	push   esi
  43cdbf:	push   edi
  43cdc0:	mov    edi,edx
  43cdc2:	lea    ebx,[ecx+0x1]
  43cdc5:	mov    DWORD PTR [ebp-0x34],eax
  43cdc8:	cmp    ebx,edi
  43cdca:	jb     0x43cde1
  43cdcc:	push   0x0
  43cdce:	xor    edx,edx
  43cdd0:	mov    ecx,0x7f6
  43cdd5:	call   0x42ee80
  43cdda:	mov    eax,edi
  43cddc:	jmp    0x43d0c4
  43cde1:	cmp    BYTE PTR [ebx],0x20
  43cde4:	ja     0x43cdeb
  43cde6:	inc    ebx
  43cde7:	cmp    ebx,edi
  43cde9:	jb     0x43cde1
  43cdeb:	xor    eax,eax
  43cded:	xor    edx,edx
  43cdef:	mov    esi,ebx
  43cdf1:	mov    DWORD PTR [ebp-0x30],eax
  43cdf4:	mov    BYTE PTR [ebp-0x29],al
  43cdf7:	cmp    ebx,edi
  43cdf9:	jae    0x43cfab
  43cdff:	test   edx,edx
  43ce01:	js     0x43cf95
  43ce07:	mov    cl,BYTE PTR [esi]
  43ce09:	mov    BYTE PTR [ebp-0x2a],cl
  43ce0c:	test   eax,eax
  43ce0e:	je     0x43ce27
  43ce10:	cmp    cl,0x22
  43ce13:	je     0x43ce1e
  43ce15:	cmp    cl,0x27
  43ce18:	jne    0x43cf8c
  43ce1e:	dec    eax
  43ce1f:	mov    DWORD PTR [ebp-0x30],eax
  43ce22:	jmp    0x43cf8c
  43ce27:	movsx  eax,cl
  43ce2a:	cmp    eax,0x3c
  43ce2d:	jg     0x43ce96
  43ce2f:	je     0x43cf77
  43ce35:	cmp    eax,0x26
  43ce38:	jg     0x43ce79
  43ce3a:	cmp    eax,0x25
  43ce3d:	jge    0x43cf82
  43ce43:	sub    eax,0x9
  43ce46:	je     0x43cf89
  43ce4c:	sub    eax,0x17
  43ce4f:	je     0x43cf89
  43ce55:	dec    eax
  43ce56:	je     0x43cf82
  43ce5c:	dec    eax
  43ce5d:	jne    0x43ceea
  43ce63:	xor    eax,eax
  43ce65:	inc    eax
  43ce66:	mov    DWORD PTR [ebp-0x30],eax
  43ce69:	test   edx,edx
  43ce6b:	jne    0x43cf8c
  43ce71:	mov    BYTE PTR [ebp-0x29],al
  43ce74:	jmp    0x43cf8c
  43ce79:	sub    eax,0x27
  43ce7c:	je     0x43ce63
  43ce7e:	dec    eax
  43ce7f:	je     0x43cf77
  43ce85:	dec    eax
  43ce86:	je     0x43cec8
  43ce88:	sub    eax,0x3
  43ce8b:	je     0x43cf82
  43ce91:	sub    eax,0xf
  43ce94:	jmp    0x43ceeb
  43ce96:	cmp    eax,0x5e
  43ce99:	jg     0x43cece
  43ce9b:	je     0x43cf82
  43cea1:	sub    eax,0x3d
  43cea4:	je     0x43cf82
  43ceaa:	dec    eax
  43ceab:	je     0x43cec0
  43cead:	sub    eax,0x1d
  43ceb0:	je     0x43cf77
  43ceb6:	dec    eax
  43ceb7:	je     0x43cf82
  43cebd:	dec    eax
  43cebe:	jne    0x43cef1
  43cec0:	cmp    edx,0x1
  43cec3:	jne    0x43cec8
  43cec5:	mov    BYTE PTR [ebp-0x29],dl
  43cec8:	dec    edx
  43cec9:	jmp    0x43cf89
  43cece:	sub    eax,0x60
  43ced1:	je     0x43cf82
  43ced7:	sub    eax,0x1b
  43ceda:	je     0x43cf77
  43cee0:	dec    eax
  43cee1:	je     0x43cf82
  43cee7:	dec    eax
  43cee8:	je     0x43cec0
  43ceea:	dec    eax
  43ceeb:	je     0x43cf82
  43cef1:	mov    al,cl
  43cef3:	sub    al,0x20
  43cef5:	cmp    al,0x5e
  43cef7:	ja     0x43cf6b
  43cef9:	test   edx,edx
  43cefb:	jne    0x43cf89
  43cf01:	call   0x43f224
  43cf06:	test   al,al
  43cf08:	je     0x43cf65
  43cf0a:	cmp    BYTE PTR [ebp-0x2a],0x2e
  43cf0e:	jne    0x43cf2e
  43cf10:	lea    eax,[esi-0x1]
  43cf13:	jmp    0x43cf16
  43cf15:	dec    eax
  43cf16:	cmp    BYTE PTR [eax],0x20
  43cf19:	ja     0x43cf15
  43cf1b:	movzx  eax,BYTE PTR [eax]
  43cf1e:	mov    al,BYTE PTR [eax+0x448f88]
  43cf24:	sub    al,0x24
  43cf26:	cmp    al,0x3b
  43cf28:	ja     0x43cf2e
  43cf2a:	mov    BYTE PTR [ebp-0x29],0x1
  43cf2e:	inc    esi
  43cf2f:	cmp    esi,edi
  43cf31:	jae    0x43cf62
  43cf33:	movzx  eax,BYTE PTR [esi]
  43cf36:	mov    al,BYTE PTR [eax+0x448f88]
  43cf3c:	sub    al,0x24
  43cf3e:	cmp    al,0x3b
  43cf40:	ja     0x43cf47
  43cf42:	inc    esi
  43cf43:	cmp    esi,edi
  43cf45:	jb     0x43cf33
  43cf47:	cmp    esi,edi
  43cf49:	jae    0x43cf62
  43cf4b:	cmp    BYTE PTR [esi],0x20
  43cf4e:	ja     0x43cf55
  43cf50:	inc    esi
  43cf51:	cmp    esi,edi
  43cf53:	jb     0x43cf4b
  43cf55:	cmp    esi,edi
  43cf57:	jae    0x43cf62
  43cf59:	cmp    BYTE PTR [esi],0x28
  43cf5c:	jne    0x43cf62
  43cf5e:	xor    edx,edx
  43cf60:	inc    esi
  43cf61:	inc    edx
  43cf62:	dec    esi
  43cf63:	jmp    0x43cf89
  43cf65:	mov    BYTE PTR [ebp-0x29],0x1
  43cf69:	jmp    0x43cf89
  43cf6b:	mov    eax,DWORD PTR [ebp-0x30]
  43cf6e:	test   edx,edx
  43cf70:	jne    0x43cf8c
  43cf72:	or     edx,0xffffffff
  43cf75:	jmp    0x43cf8c
  43cf77:	test   edx,edx
  43cf79:	jne    0x43cf7f
  43cf7b:	mov    BYTE PTR [ebp-0x29],0x1
  43cf7f:	inc    edx
  43cf80:	jmp    0x43cf89
  43cf82:	test   edx,edx
  43cf84:	jne    0x43cf89
  43cf86:	or     edx,0xffffffff
  43cf89:	mov    eax,DWORD PTR [ebp-0x30]
  43cf8c:	inc    esi
  43cf8d:	cmp    esi,edi
  43cf8f:	jb     0x43cdff
  43cf95:	cmp    edx,0xffffffff
  43cf98:	jne    0x43cfab
  43cf9a:	dec    esi
  43cf9b:	jmp    0x43cfab
  43cf9d:	mov    al,BYTE PTR [esi]
  43cf9f:	cmp    al,0x20
  43cfa1:	je     0x43cfab
  43cfa3:	cmp    al,0xd
  43cfa5:	je     0x43cfab
  43cfa7:	cmp    al,0x9
  43cfa9:	jne    0x43cfb0
  43cfab:	dec    esi
  43cfac:	cmp    esi,ebx
  43cfae:	jae    0x43cf9d
  43cfb0:	mov    cl,BYTE PTR [ebx]
  43cfb2:	inc    esi
  43cfb3:	mov    DWORD PTR [ebp-0x38],esi
  43cfb6:	call   0x43f224
  43cfbb:	test   al,al
  43cfbd:	je     0x43d00a
  43cfbf:	lea    ecx,[ebx+0x1]
  43cfc2:	jmp    0x43cfc9
  43cfc4:	cmp    ecx,esi
  43cfc6:	jae    0x43cfd8
  43cfc8:	inc    ecx
  43cfc9:	movzx  eax,BYTE PTR [ecx]
  43cfcc:	mov    al,BYTE PTR [eax+0x448f88]
  43cfd2:	sub    al,0x24
  43cfd4:	cmp    al,0x3b
  43cfd6:	jbe    0x43cfc4
  43cfd8:	mov    al,BYTE PTR [ebx-0x1]
  43cfdb:	sub    cl,bl
  43cfdd:	movsx  edx,cl
  43cfe0:	mov    BYTE PTR [ebx-0x1],cl
  43cfe3:	mov    ecx,ebx
  43cfe5:	mov    BYTE PTR [ebp-0x2a],al
  43cfe8:	call   0x445b60
  43cfed:	test   eax,eax
  43cfef:	je     0x43d000
  43cff1:	mov    al,BYTE PTR [eax+0x6]
  43cff4:	cmp    al,0x7
  43cff6:	je     0x43d004
  43cff8:	cmp    al,0x5
  43cffa:	je     0x43d004
  43cffc:	cmp    al,0x6
  43cffe:	je     0x43d004
  43d000:	mov    BYTE PTR [ebp-0x29],0x1
  43d004:	mov    al,BYTE PTR [ebp-0x2a]
  43d007:	mov    BYTE PTR [ebx-0x1],al
  43d00a:	mov    ecx,0x201
  43d00f:	call   0x43f45b
  43d014:	push   0x0
  43d016:	lea    edi,[eax+0x1]
  43d019:	mov    DWORD PTR [ebp-0x30],eax
  43d01c:	push   0x0
  43d01e:	add    eax,0x200
  43d023:	push   eax
  43d024:	mov    edx,esi
  43d026:	push   edi
  43d027:	sub    edx,ebx
  43d029:	mov    ecx,ebx
  43d02b:	call   0x434790
  43d030:	cmp    BYTE PTR [ebp-0x29],0x0
  43d034:	mov    ebx,DWORD PTR [ebp-0x30]
  43d037:	mov    BYTE PTR [ebx],al
  43d039:	jne    0x43d068
  43d03b:	inc    eax
  43d03c:	add    eax,ebx
  43d03e:	mov    DWORD PTR [ebp-0x3c],eax
  43d041:	cmp    edi,eax
  43d043:	jae    0x43d05e
  43d045:	mov    esi,DWORD PTR [ebp-0x34]
  43d048:	mov    ebx,eax
  43d04a:	mov    cl,BYTE PTR [edi]
  43d04c:	mov    edx,esi
  43d04e:	call   0x43cc6f
  43d053:	inc    edi
  43d054:	cmp    edi,ebx
  43d056:	jb     0x43d04a
  43d058:	mov    esi,DWORD PTR [ebp-0x38]
  43d05b:	mov    ebx,DWORD PTR [ebp-0x30]
  43d05e:	push   ebx
  43d05f:	call   DWORD PTR ds:0x464354
  43d065:	pop    ecx
  43d066:	jmp    0x43d0c2
  43d068:	lea    ecx,[ebp-0x2a]
  43d06b:	push   ecx
  43d06c:	movzx  edx,al
  43d06f:	mov    ecx,edi
  43d071:	call   0x442fd5
  43d076:	mov    edi,eax
  43d078:	push   ebx
  43d079:	call   DWORD PTR ds:0x464354
  43d07f:	cmp    BYTE PTR [ebp-0x2a],0x0
  43d083:	pop    ecx
  43d084:	lea    ecx,[ebp-0x28]
  43d087:	je     0x43d092
  43d089:	neg    edi
  43d08b:	mov    BYTE PTR [ebp-0x28],0x2d
  43d08f:	lea    ecx,[ebp-0x27]
  43d092:	movzx  eax,BYTE PTR ds:0x45f83a
  43d099:	push   eax
  43d09a:	push   0x0
  43d09c:	mov    edx,edi
  43d09e:	call   0x42ea92
  43d0a3:	mov    ebx,eax
  43d0a5:	lea    edi,[ebp-0x28]
  43d0a8:	mov    eax,edi
  43d0aa:	cmp    eax,ebx
  43d0ac:	jae    0x43d0c2
  43d0ae:	mov    esi,DWORD PTR [ebp-0x34]
  43d0b1:	mov    cl,BYTE PTR [edi]
  43d0b3:	mov    edx,esi
  43d0b5:	call   0x43cc6f
  43d0ba:	inc    edi
  43d0bb:	cmp    edi,ebx
  43d0bd:	jb     0x43d0b1
  43d0bf:	mov    esi,DWORD PTR [ebp-0x38]
  43d0c2:	mov    eax,esi
  43d0c4:	mov    ecx,DWORD PTR [ebp-0x4]
  43d0c7:	pop    edi
  43d0c8:	pop    esi
  43d0c9:	xor    ecx,ebp
  43d0cb:	pop    ebx
  43d0cc:	call   0x446dc7
  43d0d1:	leave  
  43d0d2:	ret    0x4
  43d0d5:	push   esi
  43d0d6:	mov    esi,DWORD PTR ds:0x464354
  43d0dc:	push   edi
  43d0dd:	mov    edi,ecx
  43d0df:	push   DWORD PTR [edi+0x4]
  43d0e2:	call   esi
  43d0e4:	push   DWORD PTR [edi+0x10]
  43d0e7:	call   esi
  43d0e9:	push   edi
  43d0ea:	call   esi
  43d0ec:	add    esp,0xc
  43d0ef:	pop    edi
  43d0f0:	pop    esi
  43d0f1:	ret    
  43d0f2:	push   ebp
  43d0f3:	mov    ebp,esp
  43d0f5:	push   ecx
  43d0f6:	push   ecx
  43d0f7:	push   ebx
  43d0f8:	push   esi
  43d0f9:	mov    esi,edx
  43d0fb:	push   edi
  43d0fc:	mov    edi,DWORD PTR [ebp+0x8]
  43d0ff:	mov    DWORD PTR [ebp-0x8],esi
  43d102:	mov    DWORD PTR [ebp-0x4],ecx
  43d105:	jmp    0x43d1e6
  43d10a:	jns    0x43d1c7
  43d110:	mov    dl,BYTE PTR [esi+0x1]
  43d113:	and    bl,0x7f
  43d116:	cmp    dl,0xff
  43d119:	jne    0x43d11f
  43d11b:	cmp    bl,BYTE PTR [esi]
  43d11d:	jae    0x43d123
  43d11f:	cmp    bl,dl
  43d121:	jbe    0x43d157
  43d123:	cmp    dl,0xff
  43d126:	jne    0x43d12c
  43d128:	sub    bl,BYTE PTR [esi]
  43d12a:	jmp    0x43d132
  43d12c:	or     al,0xff
  43d12e:	sub    al,dl
  43d130:	add    bl,al
  43d132:	mov    WORD PTR [edi],0x3f3f
  43d137:	movzx  edx,WORD PTR [esi+0x16]
  43d13b:	movzx  eax,bl
  43d13e:	push   0x10
  43d140:	push   0x4
  43d142:	add    edx,eax
  43d144:	lea    ecx,[edi+0x2]
  43d147:	call   0x42ea92
  43d14c:	mov    ecx,DWORD PTR [ebp-0x4]
  43d14f:	mov    edi,eax
  43d151:	inc    ecx
  43d152:	jmp    0x43d1e0
  43d157:	je     0x43d185
  43d159:	mov    eax,DWORD PTR [esi+0x10]
  43d15c:	movzx  ecx,bl
  43d15f:	movsx  esi,WORD PTR [eax+ecx*2]
  43d163:	mov    eax,DWORD PTR [ebp-0x8]
  43d166:	add    esi,DWORD PTR [eax+0x4]
  43d169:	movzx  eax,BYTE PTR [esi]
  43d16c:	push   eax
  43d16d:	lea    eax,[esi+0x1]
  43d170:	push   eax
  43d171:	push   edi
  43d172:	call   0x447646
  43d177:	movzx  eax,BYTE PTR [esi]
  43d17a:	mov    ecx,DWORD PTR [ebp-0x4]
  43d17d:	add    esp,0xc
  43d180:	inc    ecx
  43d181:	add    edi,eax
  43d183:	jmp    0x43d1e0
  43d185:	movzx  eax,BYTE PTR [esi]
  43d188:	movzx  ebx,dl
  43d18b:	cmp    ebx,eax
  43d18d:	jae    0x43d1c4
  43d18f:	mov    eax,DWORD PTR [esi+0x10]
  43d192:	movsx  esi,WORD PTR [eax+ebx*2]
  43d196:	mov    eax,DWORD PTR [ebp-0x8]
  43d199:	add    esi,DWORD PTR [eax+0x4]
  43d19c:	movzx  eax,BYTE PTR [esi]
  43d19f:	push   eax
  43d1a0:	lea    eax,[esi+0x1]
  43d1a3:	push   eax
  43d1a4:	push   edi
  43d1a5:	call   0x447646
  43d1aa:	movzx  eax,BYTE PTR [esi]
  43d1ad:	mov    esi,DWORD PTR [ebp-0x8]
  43d1b0:	add    edi,eax
  43d1b2:	add    esp,0xc
  43d1b5:	mov    BYTE PTR [edi],0x2c
  43d1b8:	movzx  eax,BYTE PTR [esi]
  43d1bb:	inc    edi
  43d1bc:	inc    ebx
  43d1bd:	cmp    ebx,eax
  43d1bf:	jb     0x43d18f
  43d1c1:	mov    ecx,DWORD PTR [ebp-0x4]
  43d1c4:	dec    edi
  43d1c5:	jmp    0x43d151
  43d1c7:	movzx  esi,bl
  43d1ca:	push   esi
  43d1cb:	lea    eax,[ecx+0x1]
  43d1ce:	push   eax
  43d1cf:	push   edi
  43d1d0:	call   0x447646
  43d1d5:	mov    ecx,DWORD PTR [ebp-0x4]
  43d1d8:	inc    ecx
  43d1d9:	add    esp,0xc
  43d1dc:	add    edi,esi
  43d1de:	add    ecx,esi
  43d1e0:	mov    esi,DWORD PTR [ebp-0x8]
  43d1e3:	mov    DWORD PTR [ebp-0x4],ecx
  43d1e6:	mov    bl,BYTE PTR [ecx]
  43d1e8:	test   bl,bl
  43d1ea:	jne    0x43d10a
  43d1f0:	sub    edi,DWORD PTR [ebp+0x8]
  43d1f3:	mov    eax,DWORD PTR [ebp+0xc]
  43d1f6:	mov    DWORD PTR [eax],edi
  43d1f8:	pop    edi
  43d1f9:	pop    esi
  43d1fa:	lea    eax,[ecx+0x1]
  43d1fd:	pop    ebx
  43d1fe:	leave  
  43d1ff:	ret    0x8
  43d202:	push   ebp
  43d203:	mov    ebp,esp
  43d205:	push   ecx
  43d206:	mov    eax,ds:0x460620
  43d20b:	mov    DWORD PTR [ebp-0x4],eax
  43d20e:	mov    eax,ds:0x4600fc
  43d213:	imul   eax,eax,0x1c
  43d216:	push   ebx
  43d217:	inc    WORD PTR [eax+0x4600f0]
  43d21e:	push   esi
  43d21f:	push   edi
  43d220:	mov    ebx,edx
  43d222:	mov    edx,DWORD PTR ds:0x448884
  43d228:	mov    edi,ecx
  43d22a:	mov    ecx,0x41f74c
  43d22f:	call   0x43f399
  43d234:	mov    esi,DWORD PTR ds:0x460594
  43d23a:	push   DWORD PTR [ebp+0x8]
  43d23d:	mov    edx,ebx
  43d23f:	mov    ecx,edi
  43d241:	call   0x43c21c
  43d246:	cmp    BYTE PTR ds:0x44e043,0x0
  43d24d:	mov    ecx,DWORD PTR [ebx+0x4]
  43d250:	pop    edi
  43d251:	mov    DWORD PTR ds:0x460594,esi
  43d257:	pop    esi
  43d258:	mov    WORD PTR [ebx],0xff00
  43d25d:	mov    DWORD PTR [ebx+0x8],ecx
  43d260:	mov    BYTE PTR [ebp+0xb],al
  43d263:	pop    ebx
  43d264:	je     0x43d26b
  43d266:	call   0x438545
  43d26b:	mov    eax,DWORD PTR [ebp-0x4]
  43d26e:	mov    ds:0x460620,eax
  43d273:	mov    al,BYTE PTR [ebp+0xb]
  43d276:	leave  
  43d277:	ret    0x4
  43d27a:	call   0x43e3f5
  43d27f:	mov    ecx,DWORD PTR ds:0x460618
  43d285:	mov    eax,ds:0x45f9b4
  43d28a:	inc    ecx
  43d28b:	add    DWORD PTR [eax],ecx
  43d28d:	call   0x438545
  43d292:	mov    eax,ds:0x45f9b4
  43d297:	dec    DWORD PTR [eax]
  43d299:	mov    eax,ds:0x4617e4
  43d29e:	test   eax,eax
  43d2a0:	jne    0x43d2bf
  43d2a2:	cmp    BYTE PTR ds:0x45f99f,al
  43d2a8:	jne    0x43d2bf
  43d2aa:	mov    edx,DWORD PTR ds:0x448884
  43d2b0:	mov    ecx,0x41f750
  43d2b5:	call   0x43f399
  43d2ba:	mov    eax,ds:0x4617e4
  43d2bf:	inc    eax
  43d2c0:	mov    ds:0x4617e4,eax
  43d2c5:	mov    dl,0x1
  43d2c7:	xor    ecx,ecx
  43d2c9:	jmp    0x43d777
  43d2ce:	mov    eax,ds:0x45f9b4
  43d2d3:	xor    dl,dl
  43d2d5:	mov    eax,DWORD PTR [eax]
  43d2d7:	xor    ecx,ecx
  43d2d9:	mov    ds:0x460620,eax
  43d2de:	call   0x43d777
  43d2e3:	dec    DWORD PTR ds:0x4617e4
  43d2e9:	jne    0x43d304
  43d2eb:	cmp    BYTE PTR ds:0x45f99f,0x0
  43d2f2:	jne    0x43d304
  43d2f4:	mov    edx,DWORD PTR ds:0x448884
  43d2fa:	mov    ecx,0x41f750
  43d2ff:	jmp    0x43f399
  43d304:	ret    
  43d305:	push   ebp
  43d306:	mov    ebp,esp
  43d308:	mov    ecx,DWORD PTR [ebp+0x8]
  43d30b:	sub    esp,0x1c
  43d30e:	add    ecx,0x3
  43d311:	push   ebx
  43d312:	push   esi
  43d313:	push   edi
  43d314:	lea    edx,[ebp-0x1]
  43d317:	call   0x431d7f
  43d31c:	mov    ebx,eax
  43d31e:	call   0x43e1bc
  43d323:	call   0x43d27a
  43d328:	mov    esi,0x4617e8
  43d32d:	lea    edi,[ebp-0x1c]
  43d330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d334:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43d336:	mov    ecx,0x203
  43d33b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d33c:	call   0x43f45b
  43d341:	lea    ecx,[ebp-0x8]
  43d344:	mov    esi,eax
  43d346:	call   0x43c8d4
  43d34b:	mov    ecx,ebx
  43d34d:	dec    ebx
  43d34e:	test   ecx,ecx
  43d350:	jle    0x43d362
  43d352:	mov    edx,DWORD PTR [ebp-0x8]
  43d355:	push   esi
  43d356:	lea    ecx,[ebp-0x1c]
  43d359:	call   0x43d202
  43d35e:	test   al,al
  43d360:	jne    0x43d34b
  43d362:	mov    ecx,DWORD PTR [ebp-0x8]
  43d365:	call   0x43d0d5
  43d36a:	call   0x43d2ce
  43d36f:	mov    eax,DWORD PTR [ebp+0x8]
  43d372:	xor    ecx,ecx
  43d374:	mov    WORD PTR [eax+0x1],cx
  43d378:	lea    ecx,[ebp-0x19]
  43d37b:	call   0x43f37f
  43d380:	push   esi
  43d381:	call   DWORD PTR ds:0x464354
  43d387:	pop    ecx
  43d388:	pop    edi
  43d389:	pop    esi
  43d38a:	pop    ebx
  43d38b:	leave  
  43d38c:	ret    0x4
  43d38f:	push   ebp
  43d390:	mov    ebp,esp
  43d392:	sub    esp,0x1c
  43d395:	push   ebx
  43d396:	push   esi
  43d397:	mov    esi,DWORD PTR [ebp+0x8]
  43d39a:	add    esi,0x3
  43d39d:	push   edi
  43d39e:	movzx  ecx,BYTE PTR [esi]
  43d3a1:	call   0x43f45b
  43d3a6:	movzx  ecx,BYTE PTR [esi]
  43d3a9:	push   ecx
  43d3aa:	mov    ebx,eax
  43d3ac:	push   esi
  43d3ad:	push   ebx
  43d3ae:	call   0x447646
  43d3b3:	add    esp,0xc
  43d3b6:	call   0x43e1bc
  43d3bb:	call   0x43d27a
  43d3c0:	mov    esi,0x4617e8
  43d3c5:	lea    edi,[ebp-0x1c]
  43d3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d3cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d3cc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43d3ce:	mov    ecx,0x203
  43d3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d3d4:	call   0x43f45b
  43d3d9:	lea    ecx,[ebp-0x8]
  43d3dc:	mov    esi,eax
  43d3de:	call   0x43c8d4
  43d3e3:	lea    edx,[ebp-0x1]
  43d3e6:	mov    ecx,ebx
  43d3e8:	call   0x431d7f
  43d3ed:	or     eax,edx
  43d3ef:	je     0x43d401
  43d3f1:	mov    edx,DWORD PTR [ebp-0x8]
  43d3f4:	push   esi
  43d3f5:	lea    ecx,[ebp-0x1c]
  43d3f8:	call   0x43d202
  43d3fd:	test   al,al
  43d3ff:	jne    0x43d3e3
  43d401:	mov    ecx,DWORD PTR [ebp-0x8]
  43d404:	call   0x43d0d5
  43d409:	call   0x43d2ce
  43d40e:	mov    eax,DWORD PTR [ebp+0x8]
  43d411:	xor    ecx,ecx
  43d413:	mov    WORD PTR [eax+0x1],cx
  43d417:	lea    ecx,[ebp-0x19]
  43d41a:	call   0x43f37f
  43d41f:	push   esi
  43d420:	mov    esi,DWORD PTR ds:0x464354
  43d426:	call   esi
  43d428:	push   ebx
  43d429:	call   esi
  43d42b:	pop    ecx
  43d42c:	pop    ecx
  43d42d:	pop    edi
  43d42e:	pop    esi
  43d42f:	pop    ebx
  43d430:	leave  
  43d431:	ret    0x4
  43d434:	push   ebp
  43d435:	mov    ebp,esp
  43d437:	mov    eax,DWORD PTR [ebp+0x8]
  43d43a:	sub    esp,0xc
  43d43d:	push   ebx
  43d43e:	push   esi
  43d43f:	push   edi
  43d440:	movzx  edi,WORD PTR [eax+0x1]
  43d444:	lea    esi,[eax+0x5]
  43d447:	add    edi,eax
  43d449:	mov    ebx,esi
  43d44b:	inc    esi
  43d44c:	cmp    ebx,edi
  43d44e:	jae    0x43d45b
  43d450:	mov    cl,BYTE PTR [ebx]
  43d452:	call   0x43f224
  43d457:	test   al,al
  43d459:	jne    0x43d491
  43d45b:	mov    ecx,0x2329
  43d460:	call   0x42eb12
  43d465:	mov    edx,eax
  43d467:	mov    ecx,0x811
  43d46c:	call   0x42f1c0
  43d471:	mov    eax,DWORD PTR [ebp+0x8]
  43d474:	pop    edi
  43d475:	xor    ecx,ecx
  43d477:	pop    esi
  43d478:	mov    WORD PTR [eax+0x1],cx
  43d47c:	pop    ebx
  43d47d:	leave  
  43d47e:	ret    0x4
  43d481:	movzx  eax,BYTE PTR [esi]
  43d484:	mov    al,BYTE PTR [eax+0x448f88]
  43d48a:	sub    al,0x24
  43d48c:	cmp    al,0x3b
  43d48e:	ja     0x43d495
  43d490:	inc    esi
  43d491:	cmp    esi,edi
  43d493:	jb     0x43d481
  43d495:	call   0x43e1bc
  43d49a:	mov    edx,esi
  43d49c:	sub    edx,ebx
  43d49e:	mov    ecx,ebx
  43d4a0:	mov    BYTE PTR ds:0x4617e8,0x1
  43d4a7:	mov    BYTE PTR ds:0x4617ea,0x1
  43d4ae:	call   0x43e1e9
  43d4b3:	xor    edx,edx
  43d4b5:	mov    DWORD PTR [ebp-0xc],edx
  43d4b8:	mov    BYTE PTR ds:0x4617fb,dl
  43d4be:	cmp    esi,edi
  43d4c0:	jae    0x43d640
  43d4c6:	cmp    BYTE PTR [esi],0x20
  43d4c9:	ja     0x43d4d0
  43d4cb:	inc    esi
  43d4cc:	cmp    esi,edi
  43d4ce:	jb     0x43d4c6
  43d4d0:	cmp    esi,edi
  43d4d2:	jae    0x43d640
  43d4d8:	cmp    BYTE PTR [esi],0x2c
  43d4db:	jne    0x43d640
  43d4e1:	lea    eax,[esi+0x1]
  43d4e4:	mov    DWORD PTR [ebp-0x4],eax
  43d4e7:	cmp    eax,edi
  43d4e9:	jae    0x43d57f
  43d4ef:	cmp    BYTE PTR [eax],0x20
  43d4f2:	ja     0x43d4f9
  43d4f4:	inc    eax
  43d4f5:	cmp    eax,edi
  43d4f7:	jb     0x43d4ef
  43d4f9:	mov    DWORD PTR [ebp-0x4],eax
  43d4fc:	cmp    eax,edi
  43d4fe:	jae    0x43d57f
  43d500:	cmp    BYTE PTR [eax],0x3c
  43d503:	jne    0x43d57f
  43d505:	xor    ecx,ecx
  43d507:	inc    ecx
  43d508:	inc    eax
  43d509:	mov    DWORD PTR [ebp-0x4],eax
  43d50c:	mov    ebx,eax
  43d50e:	cmp    eax,edi
  43d510:	jae    0x43d56d
  43d512:	test   cx,cx
  43d515:	je     0x43d539
  43d517:	movzx  edx,BYTE PTR [ebx]
  43d51a:	sub    edx,0x21
  43d51d:	je     0x43d52e
  43d51f:	sub    edx,0x1b
  43d522:	je     0x43d52b
  43d524:	dec    edx
  43d525:	dec    edx
  43d526:	jne    0x43d52f
  43d528:	dec    ecx
  43d529:	jmp    0x43d52f
  43d52b:	inc    ecx
  43d52c:	jmp    0x43d52f
  43d52e:	inc    ebx
  43d52f:	inc    ebx
  43d530:	cmp    ebx,edi
  43d532:	jb     0x43d512
  43d534:	test   cx,cx
  43d537:	jne    0x43d56b
  43d539:	lea    ecx,[ebx+0x1]
  43d53c:	cmp    ecx,edi
  43d53e:	jae    0x43d564
  43d540:	cmp    BYTE PTR [ecx],0x20
  43d543:	ja     0x43d54a
  43d545:	inc    ecx
  43d546:	cmp    ecx,edi
  43d548:	jb     0x43d540
  43d54a:	cmp    ecx,edi
  43d54c:	jae    0x43d564
  43d54e:	cmp    BYTE PTR [ecx],0x3b
  43d551:	je     0x43d564
  43d553:	push   0x0
  43d555:	xor    edx,edx
  43d557:	mov    ecx,0x7d3
  43d55c:	call   0x42ee80
  43d561:	mov    eax,DWORD PTR [ebp-0x4]
  43d564:	dec    ebx
  43d565:	mov    BYTE PTR [ebp-0xc],0x1
  43d569:	jmp    0x43d58f
  43d56b:	xor    edx,edx
  43d56d:	push   edx
  43d56e:	xor    edx,edx
  43d570:	mov    ecx,0x7fd
  43d575:	call   0x42ee80
  43d57a:	jmp    0x43d471
  43d57f:	mov    ebx,eax
  43d581:	cmp    eax,edi
  43d583:	jae    0x43d58f
  43d585:	cmp    BYTE PTR [ebx],0x20
  43d588:	jbe    0x43d58f
  43d58a:	inc    ebx
  43d58b:	cmp    ebx,edi
  43d58d:	jb     0x43d585
  43d58f:	mov    esi,ebx
  43d591:	sub    esi,eax
  43d593:	lea    ecx,[esi+0x214]
  43d599:	call   0x43f45b
  43d59e:	push   esi
  43d59f:	mov    esi,DWORD PTR [ebp-0x4]
  43d5a2:	lea    edi,[eax+0x14]
  43d5a5:	push   esi
  43d5a6:	push   edi
  43d5a7:	mov    DWORD PTR [ebp-0x8],eax
  43d5aa:	call   0x447646
  43d5af:	sub    edi,esi
  43d5b1:	add    edi,ebx
  43d5b3:	add    esp,0xc
  43d5b6:	mov    DWORD PTR [ebp-0x4],edi
  43d5b9:	call   0x43d27a
  43d5be:	mov    edi,DWORD PTR [ebp-0x8]
  43d5c1:	push   0x5
  43d5c3:	pop    ecx
  43d5c4:	mov    esi,0x4617e8
  43d5c9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d5cb:	mov    edi,DWORD PTR [ebp-0x8]
  43d5ce:	lea    ecx,[ebp-0x8]
  43d5d1:	call   0x43c8d4
  43d5d6:	mov    esi,DWORD PTR [ebp-0x8]
  43d5d9:	lea    ebx,[edi+0x14]
  43d5dc:	jmp    0x43d61a
  43d5de:	xor    edx,edx
  43d5e0:	mov    ecx,esi
  43d5e2:	call   0x43cc17
  43d5e7:	cmp    BYTE PTR [ebp-0xc],0x0
  43d5eb:	je     0x43d5f3
  43d5ed:	cmp    BYTE PTR [ebx],0x21
  43d5f0:	jne    0x43d5f3
  43d5f2:	inc    ebx
  43d5f3:	mov    cl,BYTE PTR [ebx]
  43d5f5:	mov    edx,esi
  43d5f7:	call   0x43cc6f
  43d5fc:	lea    eax,[edi+0x13]
  43d5ff:	push   eax
  43d600:	xor    edx,edx
  43d602:	mov    ecx,esi
  43d604:	inc    ebx
  43d605:	call   0x43ccc9
  43d60a:	push   DWORD PTR [ebp-0x4]
  43d60d:	mov    edx,esi
  43d60f:	mov    ecx,edi
  43d611:	call   0x43d202
  43d616:	test   al,al
  43d618:	je     0x43d61f
  43d61a:	cmp    ebx,DWORD PTR [ebp-0x4]
  43d61d:	jb     0x43d5de
  43d61f:	mov    ecx,esi
  43d621:	call   0x43d0d5
  43d626:	call   0x43d2ce
  43d62b:	lea    ecx,[edi+0x3]
  43d62e:	call   0x43f37f
  43d633:	push   edi
  43d634:	call   DWORD PTR ds:0x464354
  43d63a:	pop    ecx
  43d63b:	jmp    0x43d471
  43d640:	mov    ecx,0x232b
  43d645:	jmp    0x43d460
  43d64a:	push   ebp
  43d64b:	mov    ebp,esp
  43d64d:	sub    esp,0x10
  43d650:	mov    ecx,DWORD PTR [ebp+0x8]
  43d653:	push   ebx
  43d654:	movzx  edx,WORD PTR [ecx+0x1]
  43d658:	push   esi
  43d659:	lea    eax,[ecx+0x4]
  43d65c:	push   edi
  43d65d:	add    edx,ecx
  43d65f:	mov    DWORD PTR [ebp-0x4],eax
  43d662:	call   0x43e1bc
  43d667:	lea    eax,[ebp-0x8]
  43d66a:	push   eax
  43d66b:	lea    ecx,[ebp-0x4]
  43d66e:	mov    BYTE PTR ds:0x4617e8,0x1
  43d675:	mov    BYTE PTR ds:0x4617ea,0x1
  43d67c:	mov    DWORD PTR [ebp-0x8],0x4617fb
  43d683:	call   0x43e296
  43d688:	mov    edi,DWORD PTR [ebp-0x4]
  43d68b:	mov    ebx,DWORD PTR [ebp-0x8]
  43d68e:	inc    edi
  43d68f:	sub    ebx,0x4617e8
  43d695:	movzx  esi,BYTE PTR [edi]
  43d698:	inc    esi
  43d699:	lea    eax,[ebx+0x13]
  43d69c:	add    eax,esi
  43d69e:	mov    DWORD PTR [ebp-0x10],eax
  43d6a1:	lea    ecx,[eax+0x200]
  43d6a7:	call   0x43f45b
  43d6ac:	lea    edx,[ebx+0x13]
  43d6af:	add    edx,eax
  43d6b1:	push   esi
  43d6b2:	mov    DWORD PTR [ebp-0x8],eax
  43d6b5:	lea    eax,[esi+edx*1]
  43d6b8:	mov    ecx,edx
  43d6ba:	inc    edx
  43d6bb:	push   edi
  43d6bc:	push   ecx
  43d6bd:	mov    DWORD PTR [ebp-0xc],eax
  43d6c0:	mov    DWORD PTR [ebp-0x4],edx
  43d6c3:	call   0x447646
  43d6c8:	add    esp,0xc
  43d6cb:	call   0x43d27a
  43d6d0:	lea    eax,[ebx+0x13]
  43d6d3:	mov    ebx,DWORD PTR [ebp-0x8]
  43d6d6:	push   eax
  43d6d7:	push   0x4617e8
  43d6dc:	push   ebx
  43d6dd:	call   0x447646
  43d6e2:	add    esp,0xc
  43d6e5:	lea    ecx,[ebp-0x8]
  43d6e8:	call   0x43c8d4
  43d6ed:	mov    ecx,DWORD PTR [ebp-0x4]
  43d6f0:	mov    esi,DWORD PTR [ebp-0xc]
  43d6f3:	mov    edi,DWORD PTR [ebp-0x8]
  43d6f6:	cmp    ecx,esi
  43d6f8:	jae    0x43d74b
  43d6fa:	movzx  eax,BYTE PTR [ecx]
  43d6fd:	cmp    BYTE PTR [eax+0x448f88],0x20
  43d704:	jne    0x43d70b
  43d706:	inc    ecx
  43d707:	cmp    ecx,esi
  43d709:	jb     0x43d6fa
  43d70b:	cmp    ecx,esi
  43d70d:	jae    0x43d74b
  43d70f:	xor    edx,edx
  43d711:	mov    ecx,edi
  43d713:	call   0x43cc17
  43d718:	mov    ecx,DWORD PTR [ebp-0x4]
  43d71b:	push   edi
  43d71c:	mov    edx,esi
  43d71e:	call   0x43c91a
  43d723:	mov    DWORD PTR [ebp-0x4],eax
  43d726:	lea    eax,[ebx+0x13]
  43d729:	push   eax
  43d72a:	xor    edx,edx
  43d72c:	mov    ecx,edi
  43d72e:	call   0x43ccc9
  43d733:	mov    eax,DWORD PTR [ebp-0x10]
  43d736:	add    eax,ebx
  43d738:	push   eax
  43d739:	mov    edx,edi
  43d73b:	mov    ecx,ebx
  43d73d:	call   0x43d202
  43d742:	test   al,al
  43d744:	je     0x43d74b
  43d746:	cmp    DWORD PTR [ebp-0x4],esi
  43d749:	jb     0x43d70f
  43d74b:	mov    ecx,edi
  43d74d:	call   0x43d0d5
  43d752:	call   0x43d2ce
  43d757:	lea    ecx,[ebx+0x3]
  43d75a:	call   0x43f37f
  43d75f:	push   ebx
  43d760:	call   DWORD PTR ds:0x464354
  43d766:	mov    eax,DWORD PTR [ebp+0x8]
  43d769:	pop    ecx
  43d76a:	pop    edi
  43d76b:	xor    ecx,ecx
  43d76d:	pop    esi
  43d76e:	mov    WORD PTR [eax+0x1],cx
  43d772:	pop    ebx
  43d773:	leave  
  43d774:	ret    0x4
  43d777:	push   esi
  43d778:	mov    esi,ecx
  43d77a:	test   dl,dl
  43d77c:	je     0x43d7d5
  43d77e:	cmp    BYTE PTR ds:0x44e043,0x0
  43d785:	je     0x43d7a0
  43d787:	xor    al,al
  43d789:	cmp    BYTE PTR ds:0x45f99f,al
  43d78f:	jne    0x43d793
  43d791:	add    al,0x2
  43d793:	or     BYTE PTR ds:0x45f83b,al
  43d799:	call   0x438545
  43d79e:	jmp    0x43d7a7
  43d7a0:	mov    cl,0x3f
  43d7a2:	call   0x43859a
  43d7a7:	mov    edx,DWORD PTR ds:0x448884
  43d7ad:	push   0xf
  43d7af:	pop    eax
  43d7b0:	mov    ecx,0x449280
  43d7b5:	mov    ds:0x449281,ax
  43d7bb:	mov    DWORD PTR ds:0x449287,esi
  43d7c1:	call   0x43f399
  43d7c6:	push   eax
  43d7c7:	call   0x43d7f7
  43d7cc:	and    DWORD PTR ds:0x460620,0x0
  43d7d3:	pop    esi
  43d7d4:	ret    
  43d7d5:	push   0x3
  43d7d7:	pop    eax
  43d7d8:	mov    esi,0x449280
  43d7dd:	push   esi
  43d7de:	mov    ds:0x449281,ax
  43d7e4:	call   0x43d7f7
  43d7e9:	mov    edx,DWORD PTR ds:0x448884
  43d7ef:	mov    ecx,esi
  43d7f1:	pop    esi
  43d7f2:	jmp    0x43f399
  43d7f7:	push   ebp
  43d7f8:	mov    ebp,esp
  43d7fa:	mov    ecx,DWORD PTR [ebp+0x8]
  43d7fd:	mov    ax,WORD PTR [ecx+0x1]
  43d801:	sub    ax,0x3
  43d805:	je     0x43d83a
  43d807:	cmp    BYTE PTR ds:0x45f692,0x0
  43d80e:	je     0x43d817
  43d810:	mov    eax,ds:0x45f9b4
  43d815:	dec    DWORD PTR [eax]
  43d817:	lea    eax,[ecx+0xb]
  43d81a:	mov    ecx,DWORD PTR [ecx+0x7]
  43d81d:	push   0x0
  43d81f:	push   eax
  43d820:	call   0x43d87d
  43d825:	mov    eax,ds:0x4600fc
  43d82a:	imul   eax,eax,0x1c
  43d82d:	lea    eax,[eax+0x4600f4]
  43d833:	mov    ds:0x45f9a0,eax
  43d838:	jmp    0x43d879
  43d83a:	cmp    BYTE PTR ds:0x44e043,0x0
  43d841:	je     0x43d851
  43d843:	cmp    BYTE PTR ds:0x45f692,0x0
  43d84a:	jne    0x43d851
  43d84c:	call   0x438545
  43d851:	call   0x43d909
  43d856:	mov    eax,ds:0x4600fc
  43d85b:	imul   eax,eax,0x1c
  43d85e:	cmp    BYTE PTR ds:0x45f692,0x0
  43d865:	mov    eax,DWORD PTR [eax+0x460118]
  43d86b:	mov    ds:0x45f9a0,eax
  43d870:	je     0x43d879
  43d872:	mov    eax,ds:0x45f9b4
  43d877:	inc    DWORD PTR [eax]
  43d879:	pop    ebp
  43d87a:	ret    0x4
  43d87d:	push   ebp
  43d87e:	mov    ebp,esp
  43d880:	push   ecx
  43d881:	mov    eax,ds:0x4600fc
  43d886:	push   esi
  43d887:	push   edi
  43d888:	mov    edi,DWORD PTR ds:0x45f9a0
  43d88e:	mov    esi,ecx
  43d890:	cmp    eax,0x28
  43d893:	jb     0x43d8a4
  43d895:	mov    ecx,0x3ef
  43d89a:	call   0x42f124
  43d89f:	mov    eax,ds:0x4600fc
  43d8a4:	mov    ecx,DWORD PTR [ebp+0x8]
  43d8a7:	mov    edx,eax
  43d8a9:	imul   edx,edx,0x1c
  43d8ac:	add    edx,0x460100
  43d8b2:	inc    eax
  43d8b3:	mov    ds:0x4600fc,eax
  43d8b8:	xor    eax,eax
  43d8ba:	mov    DWORD PTR [edx],esi
  43d8bc:	mov    esi,DWORD PTR ds:0x45f9b4
  43d8c2:	mov    WORD PTR [edx+0xc],ax
  43d8c6:	mov    eax,DWORD PTR [esi]
  43d8c8:	mov    DWORD PTR [edx+0x4],eax
  43d8cb:	mov    eax,ds:0x460620
  43d8d0:	mov    DWORD PTR [edx+0x8],eax
  43d8d3:	mov    DWORD PTR [edx+0x18],edi
  43d8d6:	mov    eax,DWORD PTR [ecx]
  43d8d8:	mov    DWORD PTR [edx+0x10],eax
  43d8db:	mov    al,BYTE PTR [ebp+0xc]
  43d8de:	test   al,al
  43d8e0:	mov    BYTE PTR [edx+0xe],al
  43d8e3:	sete   al
  43d8e6:	mov    DWORD PTR [edx+0x14],ecx
  43d8e9:	mov    ds:0x45f992,al
  43d8ee:	test   al,al
  43d8f0:	je     0x43d8fd
  43d8f2:	mov    esi,0x463314
  43d8f7:	mov    DWORD PTR ds:0x45f9b4,esi
  43d8fd:	pop    edi
  43d8fe:	mov    DWORD PTR [esi],0x1
  43d904:	pop    esi
  43d905:	leave  
  43d906:	ret    0x8
  43d909:	mov    edx,DWORD PTR ds:0x4600fc
  43d90f:	dec    edx
  43d910:	push   esi
  43d911:	mov    DWORD PTR ds:0x4600fc,edx
  43d917:	je     0x43d938
  43d919:	mov    eax,edx
  43d91b:	imul   eax,eax,0x1c
  43d91e:	cmp    BYTE PTR [eax+0x4600f2],0x0
  43d925:	sete   al
  43d928:	mov    ds:0x45f992,al
  43d92d:	test   al,al
  43d92f:	je     0x43d938
  43d931:	mov    esi,0x463314
  43d936:	jmp    0x43d948
  43d938:	mov    esi,DWORD PTR ds:0x448894
  43d93e:	mov    BYTE PTR ds:0x45f992,0x0
  43d945:	add    esi,0x20
  43d948:	imul   edx,edx,0x1c
  43d94b:	mov    DWORD PTR ds:0x45f9b4,esi
  43d951:	mov    ecx,DWORD PTR [edx+0x460114]
  43d957:	mov    eax,DWORD PTR [edx+0x460110]
  43d95d:	mov    DWORD PTR [ecx],eax
  43d95f:	mov    eax,DWORD PTR [edx+0x460104]
  43d965:	mov    DWORD PTR [esi],eax
  43d967:	mov    eax,DWORD PTR [edx+0x460108]
  43d96d:	mov    ds:0x460620,eax
  43d972:	pop    esi
  43d973:	ret    
  43d974:	mov    eax,ds:0x4600fc
  43d979:	imul   eax,eax,0x1c
  43d97c:	inc    WORD PTR [eax+0x4600f0]
  43d983:	mov    eax,ds:0x45f9b4
  43d988:	mov    DWORD PTR [eax],0x1
  43d98e:	ret    0x4
  43d991:	push   ebp
  43d992:	mov    ebp,esp
  43d994:	sub    esp,0x114
  43d99a:	mov    eax,ds:0x448858
  43d99f:	xor    eax,ebp
  43d9a1:	mov    DWORD PTR [ebp-0x4],eax
  43d9a4:	push   ebx
  43d9a5:	push   esi
  43d9a6:	mov    esi,DWORD PTR [ebp+0x8]
  43d9a9:	push   edi
  43d9aa:	mov    ecx,0x203
  43d9af:	call   0x43f45b
  43d9b4:	mov    DWORD PTR [ebp-0x114],eax
  43d9ba:	push   ecx
  43d9bb:	lea    eax,[ebp-0x110]
  43d9c1:	push   eax
  43d9c2:	mov    edx,0x40514c
  43d9c7:	mov    ecx,esi
  43d9c9:	call   0x43c813
  43d9ce:	mov    ebx,DWORD PTR [ebp-0x110]
  43d9d4:	and    DWORD PTR [ebp-0x10c],0x0
  43d9db:	xor    edi,edi
  43d9dd:	cmp    BYTE PTR [ebx],0x1
  43d9e0:	mov    BYTE PTR [ebp-0x105],0x0
  43d9e7:	jne    0x43da15
  43d9e9:	mov    eax,DWORD PTR [ebx+0x10]
  43d9ec:	mov    edi,0x100
  43d9f1:	movsx  esi,WORD PTR [eax]
  43d9f4:	add    esi,DWORD PTR [ebx+0x4]
  43d9f7:	movzx  eax,BYTE PTR [esi]
  43d9fa:	cmp    eax,edi
  43d9fc:	jl     0x43da72
  43d9fe:	mov    ecx,0x3f8
  43da03:	call   0x42f124
  43da08:	xor    edi,edi
  43da0a:	mov    DWORD PTR [ebp-0x10c],0x41f5b0
  43da14:	inc    edi
  43da15:	mov    ecx,ebx
  43da17:	call   0x43d0d5
  43da1c:	push   DWORD PTR [ebp-0x114]
  43da22:	mov    ebx,DWORD PTR ds:0x464354
  43da28:	call   ebx
  43da2a:	pop    ecx
  43da2b:	lea    ecx,[edi+0x1]
  43da2e:	call   0x43f45b
  43da33:	push   edi
  43da34:	push   DWORD PTR [ebp-0x10c]
  43da3a:	mov    esi,eax
  43da3c:	push   esi
  43da3d:	mov    DWORD PTR ds:0x45fab4,esi
  43da43:	call   0x447646
  43da48:	add    esp,0xc
  43da4b:	cmp    BYTE PTR [ebp-0x105],0x0
  43da52:	mov    BYTE PTR [esi+edi*1],0x0
  43da56:	je     0x43da61
  43da58:	push   DWORD PTR [ebp-0x10c]
  43da5e:	call   ebx
  43da60:	pop    ecx
  43da61:	mov    ecx,DWORD PTR [ebp-0x4]
  43da64:	pop    edi
  43da65:	pop    esi
  43da66:	xor    ecx,ebp
  43da68:	pop    ebx
  43da69:	call   0x446dc7
  43da6e:	leave  
  43da6f:	ret    0x4
  43da72:	push   eax
  43da73:	lea    eax,[esi+0x1]
  43da76:	push   eax
  43da77:	lea    eax,[ebp-0x104]
  43da7d:	push   eax
  43da7e:	call   0x447646
  43da83:	movzx  eax,BYTE PTR [esi]
  43da86:	add    esp,0xc
  43da89:	cmp    eax,edi
  43da8b:	jae    0x43dad4
  43da8d:	mov    BYTE PTR [ebp+eax*1-0x104],0x0
  43da95:	lea    eax,[ebp-0x104]
  43da9b:	push   eax
  43da9c:	lea    eax,[ebp-0x10c]
  43daa2:	push   0x0
  43daa4:	push   eax
  43daa5:	call   DWORD PTR ds:0x4643e0
  43daab:	mov    edi,DWORD PTR [ebp-0x10c]
  43dab1:	add    esp,0xc
  43dab4:	test   edi,edi
  43dab6:	je     0x43da08
  43dabc:	lea    ecx,[edi+0x1]
  43dabf:	mov    al,BYTE PTR [edi]
  43dac1:	inc    edi
  43dac2:	test   al,al
  43dac4:	jne    0x43dabf
  43dac6:	sub    edi,ecx
  43dac8:	mov    BYTE PTR [ebp-0x105],0x1
  43dacf:	jmp    0x43da15
  43dad4:	call   0x446f0c
  43dad9:	int3   
  43dada:	push   ebp
  43dadb:	mov    ebp,esp
  43dadd:	sub    esp,0xc
  43dae0:	push   ebx
  43dae1:	push   esi
  43dae2:	push   edi
  43dae3:	mov    ecx,0x203
  43dae8:	call   0x43f45b
  43daed:	mov    DWORD PTR [ebp-0xc],eax
  43daf0:	push   ecx
  43daf1:	mov    ecx,DWORD PTR [ebp+0x8]
  43daf4:	lea    eax,[ebp-0x4]
  43daf7:	push   eax
  43daf8:	mov    edx,0x40568c
  43dafd:	call   0x43c813
  43db02:	mov    ecx,0xff
  43db07:	call   0x43f45b
  43db0c:	mov    ecx,DWORD PTR [ebp-0x4]
  43db0f:	xor    edx,edx
  43db11:	mov    esi,eax
  43db13:	mov    DWORD PTR [ebp-0x8],esi
  43db16:	mov    ebx,esi
  43db18:	mov    DWORD PTR [ebp+0x8],edx
  43db1b:	cmp    BYTE PTR [ecx],dl
  43db1d:	jbe    0x43db70
  43db1f:	mov    eax,DWORD PTR [ecx+0x10]
  43db22:	movsx  edi,WORD PTR [eax+edx*2]
  43db26:	add    edi,DWORD PTR [ecx+0x4]
  43db29:	lea    edx,[esi+0xff]
  43db2f:	movzx  ecx,BYTE PTR [edi]
  43db32:	lea    eax,[ecx+ebx*1]
  43db35:	cmp    eax,edx
  43db37:	ja     0x43db5f
  43db39:	push   ecx
  43db3a:	lea    eax,[edi+0x1]
  43db3d:	push   eax
  43db3e:	push   ebx
  43db3f:	call   0x447646
  43db44:	movzx  eax,BYTE PTR [edi]
  43db47:	mov    ecx,DWORD PTR [ebp-0x4]
  43db4a:	mov    edx,DWORD PTR [ebp+0x8]
  43db4d:	add    ebx,eax
  43db4f:	movzx  eax,BYTE PTR [ecx]
  43db52:	add    esp,0xc
  43db55:	inc    edx
  43db56:	mov    DWORD PTR [ebp+0x8],edx
  43db59:	cmp    edx,eax
  43db5b:	jl     0x43db1f
  43db5d:	jmp    0x43db70
  43db5f:	push   0x0
  43db61:	xor    edx,edx
  43db63:	mov    ecx,0x7f9
  43db68:	call   0x42ee80
  43db6d:	mov    ecx,DWORD PTR [ebp-0x4]
  43db70:	call   0x43d0d5
  43db75:	push   DWORD PTR [ebp-0xc]
  43db78:	mov    edi,DWORD PTR ds:0x464354
  43db7e:	call   edi
  43db80:	sub    ebx,esi
  43db82:	pop    ecx
  43db83:	lea    ecx,[ebx+0x1]
  43db86:	call   0x43f45b
  43db8b:	push   ebx
  43db8c:	push   DWORD PTR [ebp-0x8]
  43db8f:	mov    esi,eax
  43db91:	push   esi
  43db92:	mov    DWORD PTR ds:0x45fab4,esi
  43db98:	call   0x447646
  43db9d:	push   DWORD PTR [ebp-0x8]
  43dba0:	mov    BYTE PTR [esi+ebx*1],0x0
  43dba4:	call   edi
  43dba6:	add    esp,0x10
  43dba9:	pop    edi
  43dbaa:	pop    esi
  43dbab:	pop    ebx
  43dbac:	leave  
  43dbad:	ret    0x4
  43dbb0:	push   ebp
  43dbb1:	mov    ebp,esp
  43dbb3:	sub    esp,0xc
  43dbb6:	push   edi
  43dbb7:	mov    ecx,0x203
  43dbbc:	call   0x43f45b
  43dbc1:	mov    DWORD PTR [ebp-0xc],eax
  43dbc4:	push   ecx
  43dbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  43dbc8:	lea    eax,[ebp-0x4]
  43dbcb:	push   eax
  43dbcc:	mov    edx,0x406474
  43dbd1:	call   0x43c813
  43dbd6:	mov    edi,DWORD PTR [ebp-0x4]
  43dbd9:	cmp    BYTE PTR [edi],0x3
  43dbdc:	jne    0x43dc83
  43dbe2:	mov    eax,DWORD PTR [edi+0x10]
  43dbe5:	push   ebx
  43dbe6:	movsx  ecx,WORD PTR [eax]
  43dbe9:	add    ecx,DWORD PTR [edi+0x4]
  43dbec:	push   esi
  43dbed:	movzx  esi,BYTE PTR [ecx]
  43dbf0:	inc    ecx
  43dbf1:	mov    DWORD PTR [ebp-0x8],ecx
  43dbf4:	movsx  ecx,WORD PTR [eax+0x2]
  43dbf8:	add    ecx,DWORD PTR [edi+0x4]
  43dbfb:	lea    eax,[ebp+0xb]
  43dbfe:	push   eax
  43dbff:	movzx  edx,BYTE PTR [ecx]
  43dc02:	inc    ecx
  43dc03:	call   0x442fd5
  43dc08:	mov    ebx,eax
  43dc0a:	test   ebx,ebx
  43dc0c:	jne    0x43dc0f
  43dc0e:	inc    ebx
  43dc0f:	mov    eax,DWORD PTR [edi+0x10]
  43dc12:	mov    ecx,DWORD PTR [edi+0x4]
  43dc15:	movsx  eax,WORD PTR [eax+0x4]
  43dc19:	cmp    BYTE PTR [eax+ecx*1],0x0
  43dc1d:	je     0x43dc33
  43dc1f:	lea    edx,[ebp+0xb]
  43dc22:	push   edx
  43dc23:	movzx  edx,BYTE PTR [eax+ecx*1]
  43dc27:	inc    ecx
  43dc28:	add    ecx,eax
  43dc2a:	call   0x442fd5
  43dc2f:	mov    edi,eax
  43dc31:	jmp    0x43dc38
  43dc33:	mov    edi,esi
  43dc35:	sub    edi,ebx
  43dc37:	inc    edi
  43dc38:	cmp    ebx,esi
  43dc3a:	jbe    0x43dc4b
  43dc3c:	mov    ecx,0x82b
  43dc41:	xor    edx,edx
  43dc43:	push   edx
  43dc44:	call   0x42ee80
  43dc49:	jmp    0x43dc7e
  43dc4b:	sub    esi,ebx
  43dc4d:	inc    esi
  43dc4e:	cmp    edi,esi
  43dc50:	jbe    0x43dc59
  43dc52:	mov    ecx,0x82d
  43dc57:	jmp    0x43dc41
  43dc59:	lea    ecx,[edi+0x1]
  43dc5c:	call   0x43f45b
  43dc61:	mov    edx,DWORD PTR [ebp-0x8]
  43dc64:	dec    edx
  43dc65:	push   edi
  43dc66:	add    edx,ebx
  43dc68:	mov    esi,eax
  43dc6a:	push   edx
  43dc6b:	push   esi
  43dc6c:	mov    DWORD PTR ds:0x45fab4,esi
  43dc72:	call   0x447646
  43dc77:	add    esp,0xc
  43dc7a:	mov    BYTE PTR [esi+edi*1],0x0
  43dc7e:	mov    edi,DWORD PTR [ebp-0x4]
  43dc81:	pop    esi
  43dc82:	pop    ebx
  43dc83:	mov    ecx,edi
  43dc85:	call   0x43d0d5
  43dc8a:	push   DWORD PTR [ebp-0xc]
  43dc8d:	call   DWORD PTR ds:0x464354
  43dc93:	pop    ecx
  43dc94:	pop    edi
  43dc95:	leave  
  43dc96:	ret    0x4
  43dc99:	push   ebp
  43dc9a:	mov    ebp,esp
  43dc9c:	and    esp,0xfffffff8
  43dc9f:	sub    esp,0xc
  43dca2:	push   ebx
  43dca3:	push   esi
  43dca4:	push   edi
  43dca5:	mov    ecx,0x203
  43dcaa:	call   0x43f45b
  43dcaf:	mov    DWORD PTR [esp+0x14],eax
  43dcb3:	push   ecx
  43dcb4:	mov    ecx,DWORD PTR [ebp+0x8]
  43dcb7:	lea    eax,[esp+0x14]
  43dcbb:	push   eax
  43dcbc:	mov    edx,0x40621c
  43dcc1:	call   0x43c813
  43dcc6:	mov    esi,DWORD PTR [esp+0x10]
  43dcca:	xor    edi,edi
  43dccc:	cmp    BYTE PTR [esi],0x3
  43dccf:	jne    0x43dd2e
  43dcd1:	mov    eax,DWORD PTR [esi+0x10]
  43dcd4:	movsx  ecx,WORD PTR [eax]
  43dcd7:	add    ecx,DWORD PTR [esi+0x4]
  43dcda:	lea    eax,[esp+0xf]
  43dcde:	push   eax
  43dcdf:	movzx  edx,BYTE PTR [ecx]
  43dce2:	inc    ecx
  43dce3:	call   0x442fd5
  43dce8:	mov    ebx,eax
  43dcea:	test   edx,edx
  43dcec:	jl     0x43dd2e
  43dcee:	jg     0x43dcf4
  43dcf0:	test   ebx,ebx
  43dcf2:	je     0x43dd2e
  43dcf4:	cmp    BYTE PTR [esp+0xf],0x0
  43dcf9:	jne    0x43dd2e
  43dcfb:	and    eax,0xffffff00
  43dd00:	or     eax,edx
  43dd02:	je     0x43dd12
  43dd04:	push   0x0
  43dd06:	xor    edx,edx
  43dd08:	mov    ecx,0x824
  43dd0d:	call   0x42ee80
  43dd12:	mov    edx,DWORD PTR [esi+0x10]
  43dd15:	mov    cl,bl
  43dd17:	movsx  eax,WORD PTR [edx+0x4]
  43dd1b:	movsx  edx,WORD PTR [edx+0x2]
  43dd1f:	add    eax,DWORD PTR [esi+0x4]
  43dd22:	add    edx,DWORD PTR [esi+0x4]
  43dd25:	push   eax
  43dd26:	call   0x42e3a1
  43dd2b:	movzx  edi,al
  43dd2e:	mov    ecx,esi
  43dd30:	call   0x43d0d5
  43dd35:	push   DWORD PTR [esp+0x14]
  43dd39:	call   DWORD PTR ds:0x464354
  43dd3f:	pop    ecx
  43dd40:	push   0x8
  43dd42:	pop    ecx
  43dd43:	call   0x43f45b
  43dd48:	movzx  ecx,BYTE PTR ds:0x45f83a
  43dd4f:	push   ecx
  43dd50:	push   0x0
  43dd52:	lea    ecx,[eax+0x1]
  43dd55:	mov    edx,edi
  43dd57:	mov    ds:0x45fab4,eax
  43dd5c:	mov    BYTE PTR [eax],0x30
  43dd5f:	call   0x42ea92
  43dd64:	pop    edi
  43dd65:	pop    esi
  43dd66:	mov    BYTE PTR [eax],0x0
  43dd69:	pop    ebx
  43dd6a:	mov    esp,ebp
  43dd6c:	pop    ebp
  43dd6d:	ret    0x4
  43dd70:	push   ebp
  43dd71:	mov    ebp,esp
  43dd73:	push   ecx
  43dd74:	push   ebx
  43dd75:	push   esi
  43dd76:	mov    ecx,0x203
  43dd7b:	call   0x43f45b
  43dd80:	mov    esi,eax
  43dd82:	push   ecx
  43dd83:	mov    ecx,DWORD PTR [ebp+0x8]
  43dd86:	lea    eax,[ebp-0x4]
  43dd89:	push   eax
  43dd8a:	mov    edx,0x404fb4
  43dd8f:	call   0x43c813
  43dd94:	mov    ecx,DWORD PTR [ebp-0x4]
  43dd97:	cmp    BYTE PTR [ecx],0x1
  43dd9a:	je     0x43dda0
  43dd9c:	xor    bl,bl
  43dd9e:	jmp    0x43ddac
  43dda0:	mov    eax,DWORD PTR [ecx+0x10]
  43dda3:	movsx  edx,WORD PTR [eax]
  43dda6:	mov    eax,DWORD PTR [ecx+0x4]
  43dda9:	mov    bl,BYTE PTR [edx+eax*1]
  43ddac:	call   0x43d0d5
  43ddb1:	push   esi
  43ddb2:	call   DWORD PTR ds:0x464354
  43ddb8:	pop    ecx
  43ddb9:	push   0x8
  43ddbb:	pop    ecx
  43ddbc:	call   0x43f45b
  43ddc1:	movzx  ecx,BYTE PTR ds:0x45f83a
  43ddc8:	push   ecx
  43ddc9:	movzx  edx,bl
  43ddcc:	push   0x0
  43ddce:	lea    ecx,[eax+0x1]
  43ddd1:	mov    ds:0x45fab4,eax
  43ddd6:	mov    BYTE PTR [eax],0x30
  43ddd9:	call   0x42ea92
  43ddde:	pop    esi
  43dddf:	mov    BYTE PTR [eax],0x0
  43dde2:	pop    ebx
  43dde3:	leave  
  43dde4:	ret    0x4
  43dde7:	push   ebp
  43dde8:	mov    ebp,esp
  43ddea:	mov    eax,DWORD PTR [ebp+0x8]
  43dded:	push   esi
  43ddee:	push   edi
  43ddef:	movzx  edi,WORD PTR [eax+0x1]
  43ddf3:	add    edi,eax
  43ddf5:	lea    esi,[eax+0x4]
  43ddf8:	jmp    0x43de48
  43ddfa:	mov    ecx,esi
  43ddfc:	call   0x445afc
  43de01:	test   eax,eax
  43de03:	jne    0x43de13
  43de05:	mov    edx,esi
  43de07:	mov    ecx,0x7d6
  43de0c:	call   0x42f140
  43de11:	jmp    0x43de3f
  43de13:	mov    cl,BYTE PTR [eax+0x6]
  43de16:	cmp    cl,0x4
  43de19:	je     0x43de38
  43de1b:	cmp    cl,0x5
  43de1e:	je     0x43de38
  43de20:	mov    ecx,0x2336
  43de25:	call   0x42eb12
  43de2a:	mov    edx,eax
  43de2c:	mov    ecx,0x811
  43de31:	call   0x42f1c0
  43de36:	jmp    0x43de3f
  43de38:	mov    ecx,eax
  43de3a:	call   0x43e18e
  43de3f:	movzx  eax,BYTE PTR [esi+0x4]
  43de43:	add    esi,0x6
  43de46:	add    esi,eax
  43de48:	cmp    esi,edi
  43de4a:	jb     0x43ddfa
  43de4c:	pop    edi
  43de4d:	pop    esi
  43de4e:	pop    ebp
  43de4f:	ret    0x4
  43de52:	push   ebp
  43de53:	mov    ebp,esp
  43de55:	push   ecx
  43de56:	push   ecx
  43de57:	mov    eax,DWORD PTR [ebp+0x8]
  43de5a:	push   ebx
  43de5b:	movzx  ebx,WORD PTR [eax+0x1]
  43de5f:	push   esi
  43de60:	push   edi
  43de61:	lea    edi,[eax+0x4]
  43de64:	mov    ecx,edi
  43de66:	add    ebx,eax
  43de68:	call   0x445afc
  43de6d:	mov    esi,eax
  43de6f:	test   esi,esi
  43de71:	je     0x43dec2
  43de73:	mov    al,BYTE PTR [esi+0x6]
  43de76:	cmp    al,0x4
  43de78:	je     0x43de96
  43de7a:	cmp    al,0x5
  43de7c:	je     0x43de9a
  43de7e:	movzx  eax,BYTE PTR [esi+0x5]
  43de82:	sub    esi,eax
  43de84:	push   eax
  43de85:	mov    edx,esi
  43de87:	mov    ecx,0x7d5
  43de8c:	call   0x42f15d
  43de91:	jmp    0x43df90
  43de96:	cmp    al,0x5
  43de98:	jne    0x43deb5
  43de9a:	mov    eax,DWORD PTR [esi+0x18]
  43de9d:	test   BYTE PTR [eax],0x4
  43dea0:	je     0x43deb5
  43dea2:	movzx  eax,BYTE PTR [esi+0x5]
  43dea6:	mov    edx,esi
  43dea8:	push   eax
  43dea9:	sub    edx,eax
  43deab:	mov    ecx,0x87d
  43deb0:	call   0x42f15d
  43deb5:	mov    ecx,esi
  43deb7:	call   0x43e18e
  43debc:	mov    BYTE PTR [esi+0x6],0x4
  43dec0:	jmp    0x43ded6
  43dec2:	push   0x4
  43dec4:	pop    edx
  43dec5:	mov    ecx,edi
  43dec7:	call   0x4458d0
  43decc:	mov    esi,eax
  43dece:	test   esi,esi
  43ded0:	je     0x43df90
  43ded6:	mov    ecx,DWORD PTR [ebp+0x8]
  43ded9:	mov    BYTE PTR ds:0x4617e8,0x0
  43dee0:	mov    BYTE PTR ds:0x4617ea,0x0
  43dee7:	movzx  eax,BYTE PTR [ecx+0x8]
  43deeb:	add    eax,0x9
  43deee:	mov    edi,0x4617fb
  43def3:	add    eax,ecx
  43def5:	mov    DWORD PTR [ebp-0x8],edi
  43def8:	mov    DWORD PTR [ebp-0x4],eax
  43defb:	call   0x43e1bc
  43df00:	cmp    eax,ebx
  43df02:	jae    0x43df20
  43df04:	lea    eax,[ebp-0x8]
  43df07:	push   eax
  43df08:	mov    edx,ebx
  43df0a:	lea    ecx,[ebp-0x4]
  43df0d:	call   0x43e296
  43df12:	inc    BYTE PTR ds:0x4617ea
  43df18:	cmp    DWORD PTR [ebp-0x4],ebx
  43df1b:	jb     0x43df04
  43df1d:	mov    edi,DWORD PTR [ebp-0x8]
  43df20:	mov    ecx,DWORD PTR ds:0x45f9b4
  43df26:	mov    eax,ds:0x460618
  43df2b:	add    DWORD PTR [ecx],eax
  43df2d:	call   0x43e3f5
  43df32:	mov    dl,BYTE PTR ds:0x4617e8
  43df38:	movzx  ecx,dl
  43df3b:	lea    eax,[ecx-0x1]
  43df3e:	test   ecx,eax
  43df40:	je     0x43df56
  43df42:	push   0x0
  43df44:	xor    edx,edx
  43df46:	mov    ecx,0x84e
  43df4b:	call   0x42ee80
  43df50:	mov    dl,BYTE PTR ds:0x4617e8
  43df56:	test   dl,dl
  43df58:	jne    0x43df62
  43df5a:	inc    dl
  43df5c:	mov    BYTE PTR ds:0x4617e8,dl
  43df62:	cmp    dl,0x1
  43df65:	je     0x43df6b
  43df67:	mov    BYTE PTR [esi+0x6],0x5
  43df6b:	mov    ebx,0x4617e8
  43df70:	sub    edi,ebx
  43df72:	mov    ecx,edi
  43df74:	call   0x43f45b
  43df79:	push   edi
  43df7a:	push   ebx
  43df7b:	push   eax
  43df7c:	mov    DWORD PTR [esi+0x18],eax
  43df7f:	call   0x447646
  43df84:	mov    eax,DWORD PTR [ebp+0x8]
  43df87:	add    esp,0xc
  43df8a:	xor    ecx,ecx
  43df8c:	mov    WORD PTR [eax+0x1],cx
  43df90:	pop    edi
  43df91:	pop    esi
  43df92:	pop    ebx
  43df93:	leave  
  43df94:	ret    0x4
  43df97:	push   ebp
  43df98:	mov    ebp,esp
  43df9a:	push   ecx
  43df9b:	push   ebx
  43df9c:	mov    ebx,DWORD PTR ds:0x46058c
  43dfa2:	test   ebx,ebx
  43dfa4:	jne    0x43e02e
  43dfaa:	cmp    BYTE PTR ds:0x44e00b,bl
  43dfb0:	jne    0x43dfba
  43dfb2:	cmp    BYTE PTR ds:0x44f551,bl
  43dfb8:	je     0x43e023
  43dfba:	call   0x438344
  43dfbf:	test   al,al
  43dfc1:	je     0x43dffd
  43dfc3:	cmp    WORD PTR ds:0x45fac8,0x0
  43dfcb:	jne    0x43dff5
  43dfcd:	xor    cl,cl
  43dfcf:	call   0x43e113
  43dfd4:	mov    ecx,DWORD PTR ds:0x45f9b4
  43dfda:	mov    eax,ds:0x460618
  43dfdf:	add    DWORD PTR [ecx],eax
  43dfe1:	push   0x0
  43dfe3:	xor    dl,dl
  43dfe5:	xor    ecx,ecx
  43dfe7:	call   0x43abf1
  43dfec:	call   0x438344
  43dff1:	test   al,al
  43dff3:	jne    0x43dfc3
  43dff5:	test   al,al
  43dff7:	jne    0x43e110
  43dffd:	mov    ecx,0x3f0
  43e002:	call   0x42f124
  43e007:	jmp    0x43e110
  43e00c:	cmp    WORD PTR ds:0x45fac8,0x0
  43e014:	jne    0x43dff5
  43e016:	mov    ecx,DWORD PTR ds:0x45f9b4
  43e01c:	mov    eax,ds:0x460618
  43e021:	add    DWORD PTR [ecx],eax
  43e023:	call   0x438344
  43e028:	test   al,al
  43e02a:	jne    0x43e00c
  43e02c:	jmp    0x43dff5
  43e02e:	push   esi
  43e02f:	push   edi
  43e030:	jmp    0x43e076
  43e032:	cmp    BYTE PTR ds:0x44e00b,0x0
  43e039:	jne    0x43e044
  43e03b:	cmp    BYTE PTR ds:0x44f551,0x0
  43e042:	je     0x43e067
  43e044:	mov    edx,0x44f554
  43e049:	mov    ecx,ebx
  43e04b:	call   0x43f399
  43e050:	mov    edx,DWORD PTR ds:0x448884
  43e056:	mov    ecx,DWORD PTR ds:0x46058c
  43e05c:	call   0x43f399
  43e061:	mov    ebx,DWORD PTR ds:0x46058c
  43e067:	mov    ecx,ebx
  43e069:	call   0x428f71
  43e06e:	mov    ebx,eax
  43e070:	mov    DWORD PTR ds:0x46058c,ebx
  43e076:	cmp    BYTE PTR [ebx],0x39
  43e079:	jne    0x43e032
  43e07b:	mov    ecx,ebx
  43e07d:	call   0x428f71
  43e082:	mov    ecx,DWORD PTR ds:0x45f9b4
  43e088:	mov    esi,DWORD PTR ds:0x460580
  43e08e:	mov    edi,eax
  43e090:	lea    eax,[ebp-0x4]
  43e093:	mov    edx,DWORD PTR [edi+0x3]
  43e096:	mov    DWORD PTR [ecx],edx
  43e098:	mov    edx,DWORD PTR ds:0x460584
  43e09e:	push   eax
  43e09f:	add    esi,0x3
  43e0a2:	push   esi
  43e0a3:	lea    ecx,[ebx+0x3]
  43e0a6:	call   0x43d0f2
  43e0ab:	mov    edx,DWORD PTR [ebp-0x4]
  43e0ae:	mov    ecx,esi
  43e0b0:	call   0x434ba9
  43e0b5:	and    DWORD PTR ds:0x460618,0x0
  43e0bc:	mov    ecx,edi
  43e0be:	call   0x428f71
  43e0c3:	cmp    BYTE PTR ds:0x44e00b,0x0
  43e0ca:	mov    ebx,eax
  43e0cc:	mov    DWORD PTR ds:0x46058c,ebx
  43e0d2:	jne    0x43e0dd
  43e0d4:	cmp    BYTE PTR ds:0x44f551,0x0
  43e0db:	je     0x43e100
  43e0dd:	mov    ecx,DWORD PTR ds:0x460580
  43e0e3:	mov    eax,DWORD PTR [ebp-0x4]
  43e0e6:	add    eax,0x3
  43e0e9:	mov    edx,0x44f554
  43e0ee:	mov    BYTE PTR [ecx],0x3e
  43e0f1:	mov    WORD PTR [ecx+0x1],ax
  43e0f5:	call   0x43f399
  43e0fa:	mov    ebx,DWORD PTR ds:0x46058c
  43e100:	cmp    WORD PTR ds:0x45fac8,0x0
  43e108:	je     0x43e076
  43e10e:	pop    edi
  43e10f:	pop    esi
  43e110:	pop    ebx
  43e111:	leave  
  43e112:	ret    
  43e113:	cmp    BYTE PTR ds:0x44e00b,0x0
  43e11a:	push   ebx
  43e11b:	mov    bl,cl
  43e11d:	jne    0x43e128
  43e11f:	cmp    BYTE PTR ds:0x44f551,0x0
  43e126:	je     0x43e18c
  43e128:	mov    ax,ds:0x45fabc
  43e12e:	test   ax,ax
  43e131:	je     0x43e155
  43e133:	mov    edx,DWORD PTR ds:0x45fac4
  43e139:	movsx  ecx,ax
  43e13c:	cmp    BYTE PTR [ecx+edx*1-0x1],0xd
  43e141:	je     0x43e155
  43e143:	mov    BYTE PTR [ecx+edx*1],0xd
  43e147:	mov    ax,ds:0x45fabc
  43e14d:	inc    ax
  43e14f:	mov    ds:0x45fabc,ax
  43e155:	mov    edx,DWORD PTR ds:0x448884
  43e15b:	movsx  ecx,ax
  43e15e:	call   0x43f2c0
  43e163:	test   bl,bl
  43e165:	sete   cl
  43e168:	dec    cl
  43e16a:	and    cl,0x1d
  43e16d:	add    cl,0x3e
  43e170:	mov    BYTE PTR [eax],cl
  43e172:	movsx  ecx,WORD PTR ds:0x45fabc
  43e179:	push   ecx
  43e17a:	push   DWORD PTR ds:0x45fac4
  43e180:	add    eax,0x3
  43e183:	push   eax
  43e184:	call   0x447646
  43e189:	add    esp,0xc
  43e18c:	pop    ebx
  43e18d:	ret    
  43e18e:	push   esi
  43e18f:	mov    esi,ecx
  43e191:	mov    ecx,DWORD PTR [esi+0x18]
  43e194:	test   ecx,ecx
  43e196:	je     0x43e1ba
  43e198:	mov    al,BYTE PTR [ecx]
  43e19a:	test   al,0x4
  43e19c:	je     0x43e1a4
  43e19e:	or     al,0x8
  43e1a0:	mov    BYTE PTR [ecx],al
  43e1a2:	jmp    0x43e1b6
  43e1a4:	add    ecx,0x3
  43e1a7:	call   0x43f37f
  43e1ac:	push   DWORD PTR [esi+0x18]
  43e1af:	call   DWORD PTR ds:0x464354
  43e1b5:	pop    ecx
  43e1b6:	and    DWORD PTR [esi+0x18],0x0
  43e1ba:	pop    esi
  43e1bb:	ret    
  43e1bc:	and    DWORD PTR ds:0x44e4f4,0x0
  43e1c3:	or     DWORD PTR ds:0x44e4f0,0xffffffff
  43e1ca:	mov    DWORD PTR ds:0x46057c,0x44e4e8
  43e1d4:	mov    DWORD PTR ds:0x44e4e8,0x44e4f8
  43e1de:	mov    DWORD PTR ds:0x44e4ec,0x44ece8
  43e1e8:	ret    
  43e1e9:	push   ebx
  43e1ea:	push   esi
  43e1eb:	mov    esi,DWORD PTR ds:0x46057c
  43e1f1:	mov    ebx,edx
  43e1f3:	mov    eax,DWORD PTR [esi]
  43e1f5:	inc    eax
  43e1f6:	add    eax,ebx
  43e1f8:	push   edi
  43e1f9:	mov    edi,ecx
  43e1fb:	cmp    eax,DWORD PTR [esi+0x4]
  43e1fe:	jb     0x43e210
  43e200:	mov    ecx,0x3ed
  43e205:	call   0x42f124
  43e20a:	mov    esi,DWORD PTR ds:0x46057c
  43e210:	mov    eax,DWORD PTR [esi]
  43e212:	push   ebx
  43e213:	mov    BYTE PTR [eax],bl
  43e215:	inc    DWORD PTR [esi]
  43e217:	push   edi
  43e218:	push   DWORD PTR [esi]
  43e21a:	call   0x447646
  43e21f:	add    DWORD PTR [esi],ebx
  43e221:	add    esp,0xc
  43e224:	inc    DWORD PTR [esi+0xc]
  43e227:	pop    edi
  43e228:	pop    esi
  43e229:	pop    ebx
  43e22a:	ret    
  43e22b:	push   ebp
  43e22c:	mov    ebp,esp
  43e22e:	push   ecx
  43e22f:	push   ecx
  43e230:	mov    eax,ds:0x46057c
  43e235:	push   ebx
  43e236:	push   esi
  43e237:	lea    esi,[eax+0x10]
  43e23a:	mov    eax,DWORD PTR [eax]
  43e23c:	push   edi
  43e23d:	xor    edi,edi
  43e23f:	mov    ebx,edx
  43e241:	mov    DWORD PTR [ebp-0x4],ecx
  43e244:	mov    DWORD PTR [ebp-0x8],eax
  43e247:	cmp    esi,eax
  43e249:	jae    0x43e28a
  43e24b:	mov    al,BYTE PTR [esi]
  43e24d:	inc    esi
  43e24e:	cmp    al,bl
  43e250:	jne    0x43e27e
  43e252:	cmp    BYTE PTR ds:0x460e4c,0xff
  43e259:	je     0x43e26c
  43e25b:	mov    edx,ecx
  43e25d:	push   ebx
  43e25e:	mov    ecx,esi
  43e260:	call   0x445d5e
  43e265:	test   eax,eax
  43e267:	je     0x43e292
  43e269:	mov    ecx,DWORD PTR [ebp-0x4]
  43e26c:	push   ebx
  43e26d:	push   ecx
  43e26e:	push   esi
  43e26f:	call   0x447640
  43e274:	add    esp,0xc
  43e277:	test   eax,eax
  43e279:	je     0x43e292
  43e27b:	mov    ecx,DWORD PTR [ebp-0x4]
  43e27e:	movzx  eax,BYTE PTR [esi-0x1]
  43e282:	add    esi,eax
  43e284:	inc    edi
  43e285:	cmp    esi,DWORD PTR [ebp-0x8]
  43e288:	jb     0x43e24b
  43e28a:	or     eax,0xffffffff
  43e28d:	pop    edi
  43e28e:	pop    esi
  43e28f:	pop    ebx
  43e290:	leave  
  43e291:	ret    
  43e292:	mov    eax,edi
  43e294:	jmp    0x43e28d
  43e296:	push   ebp
  43e297:	mov    ebp,esp
  43e299:	push   ecx
  43e29a:	push   ecx
  43e29b:	push   ebx
  43e29c:	mov    ebx,DWORD PTR [ebp+0x8]
  43e29f:	mov    eax,ecx
  43e2a1:	mov    ebx,DWORD PTR [ebx]
  43e2a3:	push   esi
  43e2a4:	mov    esi,DWORD PTR [eax]
  43e2a6:	push   edi
  43e2a7:	lea    ecx,[esi+0x1]
  43e2aa:	mov    DWORD PTR [ebp-0x4],edx
  43e2ad:	mov    DWORD PTR [ebp-0x8],eax
  43e2b0:	call   0x445afc
  43e2b5:	test   eax,eax
  43e2b7:	jne    0x43e2c2
  43e2b9:	movzx  edx,BYTE PTR [esi+0x5]
  43e2bd:	lea    ecx,[esi+0x6]
  43e2c0:	jmp    0x43e2ca
  43e2c2:	movzx  edx,BYTE PTR [eax+0x5]
  43e2c6:	sub    eax,edx
  43e2c8:	mov    ecx,eax
  43e2ca:	call   0x43e1e9
  43e2cf:	movzx  eax,BYTE PTR [esi+0x5]
  43e2d3:	mov    ecx,DWORD PTR ds:0x46057c
  43e2d9:	lea    edi,[esi+0x6]
  43e2dc:	add    edi,eax
  43e2de:	cmp    DWORD PTR [ecx+0x8],0x0
  43e2e2:	jl     0x43e2f8
  43e2e4:	push   0x0
  43e2e6:	xor    edx,edx
  43e2e8:	mov    ecx,0x851
  43e2ed:	call   0x42ee80
  43e2f2:	mov    ecx,DWORD PTR ds:0x46057c
  43e2f8:	cmp    edi,DWORD PTR [ebp-0x4]
  43e2fb:	jae    0x43e354
  43e2fd:	mov    al,BYTE PTR [edi]
  43e2ff:	cmp    al,0xd
  43e301:	je     0x43e354
  43e303:	cmp    al,0x5
  43e305:	je     0x43e354
  43e307:	mov    BYTE PTR [ebx],al
  43e309:	inc    ebx
  43e30a:	inc    edi
  43e30b:	cmp    al,0x63
  43e30d:	jne    0x43e345
  43e30f:	cmp    BYTE PTR [edi],0x5
  43e312:	je     0x43e32c
  43e314:	mov    ecx,0x233a
  43e319:	call   0x42eb12
  43e31e:	mov    edx,eax
  43e320:	mov    ecx,0x811
  43e325:	call   0x42f1c0
  43e32a:	jmp    0x43e358
  43e32c:	inc    edi
  43e32d:	mov    al,BYTE PTR [edi]
  43e32f:	inc    al
  43e331:	movzx  esi,al
  43e334:	push   esi
  43e335:	push   edi
  43e336:	push   ebx
  43e337:	call   0x447646
  43e33c:	add    esp,0xc
  43e33f:	add    ebx,esi
  43e341:	add    edi,esi
  43e343:	jmp    0x43e358
  43e345:	cmp    BYTE PTR [ebx-0x1],0x80
  43e349:	jne    0x43e358
  43e34b:	mov    eax,DWORD PTR [ecx+0xc]
  43e34e:	dec    eax
  43e34f:	mov    DWORD PTR [ecx+0x8],eax
  43e352:	jmp    0x43e358
  43e354:	mov    BYTE PTR [ebx],0x0
  43e357:	inc    ebx
  43e358:	mov    eax,DWORD PTR [ebp+0x8]
  43e35b:	mov    DWORD PTR [eax],ebx
  43e35d:	mov    eax,DWORD PTR [ebp-0x8]
  43e360:	mov    DWORD PTR [eax],edi
  43e362:	pop    edi
  43e363:	pop    esi
  43e364:	pop    ebx
  43e365:	leave  
  43e366:	ret    0x4
  43e369:	push   ebx
  43e36a:	xor    ebx,ebx
  43e36c:	push   edi
  43e36d:	mov    BYTE PTR ds:0x4617e9,bl
  43e373:	call   0x43df97
  43e378:	mov    edi,0x8002c
  43e37d:	cmp    DWORD PTR ds:0x45fac8,edi
  43e383:	jne    0x43e3f2
  43e385:	push   esi
  43e386:	mov    cl,0x1
  43e388:	call   0x43e113
  43e38d:	mov    esi,0x45fad8
  43e392:	cmp    DWORD PTR [esi],0x1000d
  43e398:	jne    0x43e3af
  43e39a:	movsx  edx,WORD PTR [esi+0x4]
  43e39e:	mov    ecx,DWORD PTR [esi+0xc]
  43e3a1:	call   0x43e1e9
  43e3a6:	inc    BYTE PTR ds:0x4617e9
  43e3ac:	add    esi,0x10
  43e3af:	cmp    WORD PTR [esi],bx
  43e3b2:	je     0x43e3c1
  43e3b4:	cmp    DWORD PTR [esi],0x40068
  43e3ba:	jne    0x43e3dd
  43e3bc:	add    esi,0x10
  43e3bf:	jmp    0x43e392
  43e3c1:	mov    ecx,DWORD PTR ds:0x45f9b4
  43e3c7:	mov    eax,ds:0x460618
  43e3cc:	add    DWORD PTR [ecx],eax
  43e3ce:	call   0x43df97
  43e3d3:	cmp    DWORD PTR ds:0x45fac8,edi
  43e3d9:	je     0x43e386
  43e3db:	jmp    0x43e3f1
  43e3dd:	mov    edx,esi
  43e3df:	call   0x42f1ef
  43e3e4:	mov    ecx,DWORD PTR ds:0x45f9b4
  43e3ea:	mov    eax,ds:0x460618
  43e3ef:	add    DWORD PTR [ecx],eax
  43e3f1:	pop    esi
  43e3f2:	pop    edi
  43e3f3:	pop    ebx
  43e3f4:	ret    
  43e3f5:	push   ebp
  43e3f6:	mov    ebp,esp
  43e3f8:	push   ecx
  43e3f9:	mov    eax,ds:0x448884
  43e3fe:	push   ebx
  43e3ff:	mov    DWORD PTR [ebp-0x4],eax
  43e402:	xor    eax,eax
  43e404:	cmp    DWORD PTR ds:0x4617e4,0x0
  43e40b:	push   esi
  43e40c:	push   edi
  43e40d:	mov    ecx,0x4617eb
  43e412:	mov    edi,ecx
  43e414:	stos   DWORD PTR es:[edi],eax
  43e415:	stos   DWORD PTR es:[edi],eax
  43e416:	stos   DWORD PTR es:[edi],eax
  43e417:	stos   DWORD PTR es:[edi],eax
  43e418:	mov    eax,ds:0x45f9b4
  43e41d:	mov    DWORD PTR ds:0x448884,ecx
  43e423:	mov    eax,DWORD PTR [eax]
  43e425:	mov    BYTE PTR ds:0x4605b6,0x1
  43e42c:	jne    0x43e42f
  43e42e:	dec    eax
  43e42f:	xor    ebx,ebx
  43e431:	mov    ds:0x46056c,eax
  43e436:	cmp    BYTE PTR ds:0x44f54e,bl
  43e43c:	je     0x43e448
  43e43e:	push   ebx
  43e43f:	mov    dl,0x34
  43e441:	xor    ecx,ecx
  43e443:	call   0x43abf1
  43e448:	call   0x43e369
  43e44d:	mov    eax,ds:0x45fac8
  43e452:	mov    esi,0x44f075
  43e457:	mov    DWORD PTR ds:0x44ece8,esi
  43e45d:	mov    DWORD PTR ds:0x44ecec,0x44f4e8
  43e467:	mov    BYTE PTR ds:0x44f074,bl
  43e46d:	cmp    eax,0x8000b
  43e472:	je     0x43e489
  43e474:	mov    ecx,DWORD PTR ds:0x448884
  43e47a:	mov    edx,0x81
  43e47f:	call   0x43f3d4
  43e484:	mov    eax,ds:0x45fac8
  43e489:	mov    edi,DWORD PTR ds:0x463384
  43e48f:	cmp    eax,0x8000b
  43e494:	je     0x43e4e7
  43e496:	mov    ecx,0x44ece8
  43e49b:	call   0x43eb99
  43e4a0:	test   al,al
  43e4a2:	je     0x43e4b2
  43e4a4:	call   0x43f29e
  43e4a9:	xor    cl,cl
  43e4ab:	call   0x43e113
  43e4b0:	jmp    0x43e4b7
  43e4b2:	call   0x43f29e
  43e4b7:	mov    ecx,DWORD PTR ds:0x45f9b4
  43e4bd:	mov    eax,ds:0x460618
  43e4c2:	add    DWORD PTR [ecx],eax
  43e4c4:	call   0x43df97
  43e4c9:	cmp    DWORD PTR ds:0x45fac8,0x8000b
  43e4d3:	jne    0x43e496
  43e4d5:	cmp    DWORD PTR ds:0x463384,edi
  43e4db:	je     0x43e4e7
  43e4dd:	mov    ecx,0x3f2
  43e4e2:	call   0x42f124
  43e4e7:	call   0x43f29e
  43e4ec:	mov    al,ds:0x4605a0
  43e4f1:	mov    ecx,DWORD PTR ds:0x46059c
  43e4f7:	not    al
  43e4f9:	and    BYTE PTR ds:0x460566,al
  43e4ff:	mov    BYTE PTR ds:0x4605a0,bl
  43e505:	cmp    WORD PTR ds:0x460598,bx
  43e50c:	jbe    0x43e525
  43e50e:	mov    eax,DWORD PTR [ecx]
  43e510:	lea    ecx,[ecx+0x4]
  43e513:	and    BYTE PTR [eax+0x3],0xbf
  43e517:	mov    eax,0xffff
  43e51c:	add    WORD PTR ds:0x460598,ax
  43e523:	jne    0x43e50e
  43e525:	mov    bl,BYTE PTR ds:0x44f074
  43e52b:	mov    edi,0x44f010
  43e530:	jmp    0x43e560
  43e532:	mov    al,BYTE PTR [edi]
  43e534:	dec    bl
  43e536:	inc    edi
  43e537:	test   al,al
  43e539:	jne    0x43e55a
  43e53b:	mov    ecx,0x863
  43e540:	test   esi,esi
  43e542:	jne    0x43e54e
  43e544:	push   esi
  43e545:	xor    edx,edx
  43e547:	call   0x42ee80
  43e54c:	jmp    0x43e55a
  43e54e:	movzx  eax,BYTE PTR [esi]
  43e551:	push   eax
  43e552:	lea    edx,[esi+0x1]
  43e555:	call   0x42f15d
  43e55a:	movzx  eax,BYTE PTR [esi]
  43e55d:	inc    esi
  43e55e:	add    esi,eax
  43e560:	test   bl,bl
  43e562:	jne    0x43e532
  43e564:	cmp    BYTE PTR ds:0x44f54e,0x0
  43e56b:	mov    eax,DWORD PTR [ebp-0x4]
  43e56e:	pop    edi
  43e56f:	pop    esi
  43e570:	mov    BYTE PTR ds:0x4605b6,bl
  43e576:	mov    ds:0x448884,eax
  43e57b:	pop    ebx
  43e57c:	je     0x43e589
  43e57e:	push   0x0
  43e580:	mov    dl,0x34
  43e582:	xor    ecx,ecx
  43e584:	call   0x43abf1
  43e589:	leave  
  43e58a:	ret    
  43e58b:	push   ebx
  43e58c:	push   esi
  43e58d:	push   edi
  43e58e:	xor    ecx,ecx
  43e590:	push   0x4
  43e592:	pop    esi
  43e593:	mov    bl,cl
  43e595:	mov    edi,0x45fac8
  43e59a:	cmp    WORD PTR ds:0x45fac8,cx
  43e5a1:	je     0x43e61a
  43e5a3:	cmp    WORD PTR [edi+0x2],0x8
  43e5a8:	jne    0x43e5ea
  43e5aa:	test   bl,bl
  43e5ac:	jne    0x43e5ea
  43e5ae:	movzx  eax,WORD PTR [edi]
  43e5b1:	inc    bl
  43e5b3:	cmp    eax,0x2e
  43e5b6:	jb     0x43e612
  43e5b8:	cmp    eax,0x33
  43e5bb:	jbe    0x43e620
  43e5bd:	cmp    esi,0x4
  43e5c0:	jne    0x43e612
  43e5c2:	cmp    eax,0x34
  43e5c5:	jne    0x43e5d3
  43e5c7:	cmp    edi,0x45fac8
  43e5cd:	jne    0x43e608
  43e5cf:	push   0x2
  43e5d1:	jmp    0x43e5e7
  43e5d3:	cmp    eax,0x3b
  43e5d6:	jb     0x43e612
  43e5d8:	cmp    eax,0x54
  43e5db:	ja     0x43e612
  43e5dd:	cmp    edi,0x45fac8
  43e5e3:	jne    0x43e608
  43e5e5:	push   0x3
  43e5e7:	pop    esi
  43e5e8:	jmp    0x43e612
  43e5ea:	mov    ecx,edi
  43e5ec:	call   0x43ed76
  43e5f1:	test   al,al
  43e5f3:	je     0x43e610
  43e5f5:	cmp    esi,0x2
  43e5f8:	jne    0x43e601
  43e5fa:	or     BYTE PTR ds:0x4617e8,0x2
  43e601:	xor    ecx,ecx
  43e603:	cmp    esi,0x1
  43e606:	je     0x43e60c
  43e608:	mov    esi,ecx
  43e60a:	jmp    0x43e612
  43e60c:	mov    bl,0x1
  43e60e:	jmp    0x43e612
  43e610:	xor    ecx,ecx
  43e612:	add    edi,0x10
  43e615:	cmp    WORD PTR [edi],cx
  43e618:	jne    0x43e5a3
  43e61a:	mov    eax,esi
  43e61c:	pop    edi
  43e61d:	pop    esi
  43e61e:	pop    ebx
  43e61f:	ret    
  43e620:	xor    eax,eax
  43e622:	inc    eax
  43e623:	jmp    0x43e61c
  43e625:	push   ebp
  43e626:	mov    ebp,esp
  43e628:	push   ecx
  43e629:	push   ecx
  43e62a:	push   ebx
  43e62b:	push   esi
  43e62c:	mov    esi,DWORD PTR [ebp+0x8]
  43e62f:	push   edi
  43e630:	mov    edi,DWORD PTR [ebp+0x10]
  43e633:	mov    ebx,ecx
  43e635:	xor    ecx,ecx
  43e637:	mov    DWORD PTR [ebp-0x4],edx
  43e63a:	mov    DWORD PTR [ebp-0x8],ecx
  43e63d:	add    edi,0xc
  43e640:	movzx  eax,WORD PTR [edi-0xc]
  43e644:	test   ax,ax
  43e647:	je     0x43e72e
  43e64d:	xor    edx,edx
  43e64f:	inc    edx
  43e650:	cmp    WORD PTR [edi-0xa],dx
  43e654:	mov    edx,DWORD PTR [ebp-0x4]
  43e657:	jne    0x43e700
  43e65d:	cmp    eax,0x5
  43e660:	jl     0x43e6da
  43e662:	cmp    eax,0x6
  43e665:	jle    0x43e6e2
  43e667:	cmp    eax,0x7
  43e66a:	je     0x43e6b2
  43e66c:	cmp    eax,0xd
  43e66f:	jne    0x43e6da
  43e671:	movsx  edx,WORD PTR [edi-0x8]
  43e675:	mov    ecx,DWORD PTR [edi]
  43e677:	call   0x43e22b
  43e67c:	mov    DWORD PTR [ebp+0x8],eax
  43e67f:	cmp    eax,0xffffffff
  43e682:	je     0x43e6d4
  43e684:	mov    ecx,DWORD PTR [edi]
  43e686:	mov    eax,ecx
  43e688:	sub    eax,esi
  43e68a:	je     0x43e693
  43e68c:	cmp    BYTE PTR [ecx-0x1],0x26
  43e690:	jne    0x43e693
  43e692:	dec    eax
  43e693:	mov    edx,DWORD PTR [ebp-0x4]
  43e696:	push   eax
  43e697:	push   esi
  43e698:	mov    ecx,ebx
  43e69a:	call   0x43ee7c
  43e69f:	mov    eax,DWORD PTR [ebx]
  43e6a1:	mov    edx,DWORD PTR [ebp-0x4]
  43e6a4:	inc    eax
  43e6a5:	cmp    eax,edx
  43e6a7:	jb     0x43e779
  43e6ad:	jmp    0x43e768
  43e6b2:	mov    eax,DWORD PTR [edi]
  43e6b4:	sub    eax,esi
  43e6b6:	push   eax
  43e6b7:	push   esi
  43e6b8:	mov    ecx,ebx
  43e6ba:	call   0x43ee7c
  43e6bf:	push   DWORD PTR [ebp-0x4]
  43e6c2:	movsx  edx,WORD PTR [edi-0x8]
  43e6c6:	mov    ecx,DWORD PTR [edi]
  43e6c8:	push   ebx
  43e6c9:	call   0x43efd3
  43e6ce:	movsx  esi,WORD PTR [edi-0x8]
  43e6d2:	add    esi,DWORD PTR [edi]
  43e6d4:	mov    edx,DWORD PTR [ebp-0x4]
  43e6d7:	mov    ecx,DWORD PTR [ebp-0x8]
  43e6da:	add    edi,0x10
  43e6dd:	jmp    0x43e640
  43e6e2:	mov    eax,DWORD PTR [edi]
  43e6e4:	sub    eax,esi
  43e6e6:	push   eax
  43e6e7:	push   esi
  43e6e8:	mov    ecx,ebx
  43e6ea:	call   0x43ee7c
  43e6ef:	push   DWORD PTR [ebp-0x4]
  43e6f2:	movsx  edx,WORD PTR [edi-0x8]
  43e6f6:	mov    ecx,DWORD PTR [edi]
  43e6f8:	push   ebx
  43e6f9:	call   0x43f0ee
  43e6fe:	jmp    0x43e6ce
  43e700:	cmp    DWORD PTR [edi-0xc],0x8002e
  43e707:	jb     0x43e719
  43e709:	cmp    DWORD PTR [edi-0xc],0x80032
  43e710:	ja     0x43e719
  43e712:	xor    eax,eax
  43e714:	lea    ecx,[eax+0x1]
  43e717:	jmp    0x43e729
  43e719:	cmp    DWORD PTR [edi-0xc],0x8000b
  43e720:	jne    0x43e6da
  43e722:	test   ecx,ecx
  43e724:	jne    0x43e6da
  43e726:	or     ecx,0xffffffff
  43e729:	mov    DWORD PTR [ebp-0x8],ecx
  43e72c:	jmp    0x43e6da
  43e72e:	cmp    esi,DWORD PTR [ebp+0xc]
  43e731:	jae    0x43e744
  43e733:	mov    eax,DWORD PTR [ebp+0xc]
  43e736:	sub    eax,esi
  43e738:	push   eax
  43e739:	push   esi
  43e73a:	mov    ecx,ebx
  43e73c:	call   0x43ee7c
  43e741:	mov    edx,DWORD PTR [ebp-0x4]
  43e744:	mov    ecx,DWORD PTR [ebx]
  43e746:	cmp    BYTE PTR [ecx-0x1],0xd
  43e74a:	je     0x43e761
  43e74c:	lea    eax,[ecx+0x2]
  43e74f:	cmp    eax,edx
  43e751:	jae    0x43e768
  43e753:	xor    eax,eax
  43e755:	inc    eax
  43e756:	mov    BYTE PTR [ecx],al
  43e758:	lea    eax,[ecx+0x2]
  43e75b:	mov    BYTE PTR [ecx+0x1],0xd
  43e75f:	mov    DWORD PTR [ebx],eax
  43e761:	mov    eax,DWORD PTR [ebx]
  43e763:	inc    eax
  43e764:	cmp    eax,edx
  43e766:	jb     0x43e7a8
  43e768:	push   0x0
  43e76a:	xor    edx,edx
  43e76c:	mov    ecx,0x7fa
  43e771:	call   0x42ee80
  43e776:	mov    edx,DWORD PTR [ebp-0x4]
  43e779:	mov    ecx,DWORD PTR [ebx]
  43e77b:	mov    al,BYTE PTR [ebp+0x8]
  43e77e:	or     al,0x80
  43e780:	mov    BYTE PTR [ecx],al
  43e782:	movsx  esi,WORD PTR [edi-0x8]
  43e786:	add    esi,DWORD PTR [edi]
  43e788:	lea    eax,[ecx+0x1]
  43e78b:	mov    DWORD PTR [ebx],eax
  43e78d:	cmp    esi,DWORD PTR [ebp+0xc]
  43e790:	jae    0x43e6d7
  43e796:	cmp    BYTE PTR [esi],0x26
  43e799:	mov    ecx,DWORD PTR [ebp-0x8]
  43e79c:	jne    0x43e6da
  43e7a2:	inc    esi
  43e7a3:	jmp    0x43e6da
  43e7a8:	mov    ecx,DWORD PTR [ebx]
  43e7aa:	mov    eax,DWORD PTR [ebp-0x8]
  43e7ad:	pop    edi
  43e7ae:	mov    BYTE PTR [ecx],0x0
  43e7b1:	inc    ecx
  43e7b2:	pop    esi
  43e7b3:	mov    DWORD PTR [ebx],ecx
  43e7b5:	pop    ebx
  43e7b6:	leave  
  43e7b7:	ret    0xc
  43e7ba:	mov    edx,DWORD PTR ds:0x463384
  43e7c0:	push   ebx
  43e7c1:	push   esi
  43e7c2:	movzx  esi,WORD PTR [ecx]
  43e7c5:	push   edi
  43e7c6:	push   0x54
  43e7c8:	pop    eax
  43e7c9:	push   0x47
  43e7cb:	pop    ebx
  43e7cc:	mov    edi,0x3f2
  43e7d1:	cmp    si,bx
  43e7d4:	jae    0x43e7f8
  43e7d6:	test   edx,edx
  43e7d8:	js     0x43e7df
  43e7da:	cmp    edx,0x14
  43e7dd:	jl     0x43e7ef
  43e7df:	mov    ecx,0x3ef
  43e7e4:	call   0x42f124
  43e7e9:	mov    edx,DWORD PTR ds:0x463384
  43e7ef:	inc    edx
  43e7f0:	mov    DWORD PTR ds:0x463384,edx
  43e7f6:	jmp    0x43e813
  43e7f8:	cmp    si,ax
  43e7fb:	jae    0x43e813
  43e7fd:	cmp    BYTE PTR [edx+0x46336c],0x0
  43e804:	jne    0x43e813
  43e806:	mov    ecx,edi
  43e808:	call   0x42f124
  43e80d:	mov    edx,DWORD PTR ds:0x463384
  43e813:	cmp    si,bx
  43e816:	jb     0x43e848
  43e818:	test   edx,edx
  43e81a:	jne    0x43e829
  43e81c:	mov    ecx,edi
  43e81e:	call   0x42f124
  43e823:	mov    edx,DWORD PTR ds:0x463384
  43e829:	mov    ecx,DWORD PTR [edx*4+0x463318]
  43e830:	cmp    BYTE PTR [ecx],0x0
  43e833:	jne    0x43e83b
  43e835:	mov    ecx,DWORD PTR [ecx+0x1]
  43e838:	add    ecx,0x4
  43e83b:	mov    edi,DWORD PTR ds:0x448884
  43e841:	mov    eax,DWORD PTR [edi]
  43e843:	mov    DWORD PTR [ecx+0x3],eax
  43e846:	jmp    0x43e84e
  43e848:	mov    edi,DWORD PTR ds:0x448884
  43e84e:	cmp    si,bx
  43e851:	jne    0x43e861
  43e853:	cmp    edx,0x15
  43e856:	jae    0x43e88b
  43e858:	mov    BYTE PTR [edx+0x46336c],0x0
  43e85f:	jmp    0x43e870
  43e861:	push   0x54
  43e863:	pop    eax
  43e864:	mov    BYTE PTR [edx+0x46336c],0x1
  43e86b:	cmp    si,ax
  43e86e:	jae    0x43e87e
  43e870:	mov    ecx,DWORD PTR [edi]
  43e872:	push   0x4
  43e874:	mov    DWORD PTR [edx*4+0x463318],ecx
  43e87b:	pop    eax
  43e87c:	jmp    0x43e887
  43e87e:	dec    edx
  43e87f:	mov    DWORD PTR ds:0x463384,edx
  43e885:	xor    eax,eax
  43e887:	pop    edi
  43e888:	pop    esi
  43e889:	pop    ebx
  43e88a:	ret    
  43e88b:	call   0x446f0c
  43e890:	int3   
  43e891:	push   ebp
  43e892:	mov    ebp,esp
  43e894:	sub    esp,0x2d4
  43e89a:	mov    eax,ds:0x448858
  43e89f:	xor    eax,ebp
  43e8a1:	mov    DWORD PTR [ebp-0x4],eax
  43e8a4:	push   ebx
  43e8a5:	lea    eax,[ebp-0x2c3]
  43e8ab:	mov    DWORD PTR [ebp-0x2d4],eax
  43e8b1:	mov    ax,ds:0x45fabe
  43e8b7:	push   esi
  43e8b8:	push   edi
  43e8b9:	mov    WORD PTR [ebp-0x2c5],ax
  43e8c0:	movsx  eax,WORD PTR ds:0x45fabc
  43e8c7:	mov    ebx,ecx
  43e8c9:	mov    ecx,DWORD PTR ds:0x45fac4
  43e8cf:	mov    edi,0x45fac8
  43e8d4:	push   edi
  43e8d5:	add    eax,ecx
  43e8d7:	push   eax
  43e8d8:	push   ecx
  43e8d9:	lea    edx,[ebp-0x7]
  43e8dc:	lea    ecx,[ebp-0x2d4]
  43e8e2:	lea    esi,[ebp-0x2c5]
  43e8e8:	call   0x43e625
  43e8ed:	cmp    DWORD PTR ds:0x45fac8,0x10059
  43e8f7:	mov    al,0x36
  43e8f9:	jne    0x43e900
  43e8fb:	mov    edi,0x45fad8
  43e900:	cmp    DWORD PTR [edi],0x8003b
  43e906:	jb     0x43e93b
  43e908:	cmp    DWORD PTR [edi],0x80054
  43e90e:	ja     0x43e93b
  43e910:	mov    al,0x37
  43e912:	mov    BYTE PTR [ebp-0x2cd],al
  43e918:	test   ebx,ebx
  43e91a:	je     0x43e926
  43e91c:	lea    esi,[ebp-0x2c5]
  43e922:	sub    esi,ebx
  43e924:	jmp    0x43e93b
  43e926:	mov    ecx,edi
  43e928:	call   0x43e7ba
  43e92d:	lea    esi,[ebp-0x2c5]
  43e933:	sub    esi,eax
  43e935:	mov    al,BYTE PTR [ebp-0x2cd]
  43e93b:	mov    edx,DWORD PTR ds:0x448884
  43e941:	lea    ecx,[esi-0x3]
  43e944:	mov    BYTE PTR [ecx],al
  43e946:	mov    eax,DWORD PTR [ebp-0x2d4]
  43e94c:	sub    eax,ecx
  43e94e:	mov    WORD PTR [ecx+0x1],ax
  43e952:	call   0x43f399
  43e957:	mov    ecx,DWORD PTR [ebp-0x4]
  43e95a:	pop    edi
  43e95b:	pop    esi
  43e95c:	xor    ecx,ebp
  43e95e:	pop    ebx
  43e95f:	call   0x446dc7
  43e964:	leave  
  43e965:	ret    
  43e966:	push   ebp
  43e967:	mov    ebp,esp
  43e969:	push   ecx
  43e96a:	push   ecx
  43e96b:	mov    eax,DWORD PTR [ebp+0x8]
  43e96e:	push   ebx
  43e96f:	push   esi
  43e970:	lea    esi,[eax+0x38d]
  43e976:	mov    eax,DWORD PTR [eax]
  43e978:	push   edi
  43e979:	xor    edi,edi
  43e97b:	mov    DWORD PTR [ebp-0x8],edx
  43e97e:	mov    DWORD PTR [ebp-0x4],ecx
  43e981:	mov    DWORD PTR [ebp+0x8],eax
  43e984:	cmp    esi,eax
  43e986:	jae    0x43e9ad
  43e988:	mov    bl,BYTE PTR [esi]
  43e98a:	cmp    dl,bl
  43e98c:	jne    0x43e9a1
  43e98e:	push   edx
  43e98f:	mov    edx,DWORD PTR [ebp-0x4]
  43e992:	lea    ecx,[esi+0x1]
  43e995:	call   0x445d5e
  43e99a:	test   eax,eax
  43e99c:	je     0x43e9b7
  43e99e:	mov    edx,DWORD PTR [ebp-0x8]
  43e9a1:	movzx  eax,bl
  43e9a4:	inc    esi
  43e9a5:	add    esi,eax
  43e9a7:	inc    edi
  43e9a8:	cmp    esi,DWORD PTR [ebp+0x8]
  43e9ab:	jb     0x43e988
  43e9ad:	or     eax,0xffffffff
  43e9b0:	pop    edi
  43e9b1:	pop    esi
  43e9b2:	pop    ebx
  43e9b3:	leave  
  43e9b4:	ret    0x4
  43e9b7:	mov    eax,edi
  43e9b9:	jmp    0x43e9b0
  43e9bb:	push   ebp
  43e9bc:	mov    ebp,esp
  43e9be:	push   ecx
  43e9bf:	push   ecx
  43e9c0:	mov    eax,ds:0x448884
  43e9c5:	push   ebx
  43e9c6:	mov    eax,DWORD PTR [eax]
  43e9c8:	mov    ebx,ecx
  43e9ca:	mov    DWORD PTR [ebp-0x4],eax
  43e9cd:	movzx  eax,WORD PTR [ebx+0x4]
  43e9d1:	mov    ecx,DWORD PTR [ebx+0xc]
  43e9d4:	push   esi
  43e9d5:	cwde   
  43e9d6:	mov    esi,edx
  43e9d8:	push   edi
  43e9d9:	push   esi
  43e9da:	mov    edx,eax
  43e9dc:	mov    DWORD PTR [ebp-0x8],eax
  43e9df:	call   0x43e966
  43e9e4:	mov    edi,DWORD PTR [ebp+0x8]
  43e9e7:	mov    edx,eax
  43e9e9:	cmp    edx,0xffffffff
  43e9ec:	jne    0x43ea67
  43e9ee:	cmp    BYTE PTR [esi+0x38c],0x64
  43e9f5:	jae    0x43ea0a
  43e9f7:	movzx  eax,WORD PTR [ebx+0x4]
  43e9fb:	test   ax,ax
  43e9fe:	js     0x43ea0a
  43ea00:	mov    eax,DWORD PTR [esi+0x4]
  43ea03:	sub    eax,DWORD PTR [esi]
  43ea05:	cmp    eax,DWORD PTR [ebp-0x8]
  43ea08:	jg     0x43ea14
  43ea0a:	mov    ecx,0x3ed
  43ea0f:	call   0x42f124
  43ea14:	mov    ecx,DWORD PTR [esi]
  43ea16:	mov    al,BYTE PTR [ebx+0x4]
  43ea19:	mov    BYTE PTR [ecx],al
  43ea1b:	inc    DWORD PTR [esi]
  43ea1d:	movsx  eax,WORD PTR [ebx+0x4]
  43ea21:	push   eax
  43ea22:	push   DWORD PTR [ebx+0xc]
  43ea25:	push   DWORD PTR [esi]
  43ea27:	call   0x447646
  43ea2c:	movsx  eax,WORD PTR [ebx+0x4]
  43ea30:	add    DWORD PTR [esi],eax
  43ea32:	mov    al,BYTE PTR [esi+0x38c]
  43ea38:	add    esp,0xc
  43ea3b:	movzx  edx,al
  43ea3e:	inc    al
  43ea40:	mov    BYTE PTR [esi+0x38c],al
  43ea46:	mov    ebx,DWORD PTR [ebp-0x4]
  43ea49:	test   edi,edi
  43ea4b:	mov    DWORD PTR [esi+edx*4+0x198],edi
  43ea52:	mov    DWORD PTR [esi+edx*4+0x8],ebx
  43ea56:	setne  al
  43ea59:	pop    edi
  43ea5a:	mov    BYTE PTR [edx+esi*1+0x328],al
  43ea61:	pop    esi
  43ea62:	pop    ebx
  43ea63:	leave  
  43ea64:	ret    0x4
  43ea67:	mov    ecx,DWORD PTR [esi+edx*4+0x8]
  43ea6b:	test   ecx,ecx
  43ea6d:	je     0x43ea46
  43ea6f:	mov    ebx,DWORD PTR [ebp-0x4]
  43ea72:	cmp    BYTE PTR [ecx],0x0
  43ea75:	jne    0x43ea7d
  43ea77:	mov    ecx,DWORD PTR [ecx+0x1]
  43ea7a:	add    ecx,0x4
  43ea7d:	lea    eax,[ecx+0x3]
  43ea80:	mov    ecx,DWORD PTR [eax]
  43ea82:	mov    DWORD PTR [eax],ebx
  43ea84:	mov    DWORD PTR [eax+0x4],edi
  43ea87:	test   ecx,ecx
  43ea89:	jne    0x43ea72
  43ea8b:	jmp    0x43ea49
  43ea8d:	push   ebp
  43ea8e:	mov    ebp,esp
  43ea90:	sub    esp,0x108
  43ea96:	mov    eax,ds:0x448858
  43ea9b:	xor    eax,ebp
  43ea9d:	mov    DWORD PTR [ebp-0x4],eax
  43eaa0:	cmp    WORD PTR ds:0x45fad8,0x0
  43eaa8:	push   esi
  43eaa9:	lea    esi,[ebp-0x105]
  43eaaf:	jne    0x43eaba
  43eab1:	or     BYTE PTR ds:0x4617e8,0x1
  43eab8:	jmp    0x43eaed
  43eaba:	or     BYTE PTR ds:0x4617e8,0x2
  43eac1:	lea    edx,[ebp-0x105]
  43eac7:	mov    ecx,0x45fad8
  43eacc:	call   0x442fb2
  43ead1:	movzx  ecx,BYTE PTR [ebp-0x105]
  43ead8:	lea    esi,[ebp-0x105]
  43eade:	add    esi,ecx
  43eae0:	cmp    WORD PTR [eax],0x0
  43eae4:	je     0x43eaed
  43eae6:	mov    edx,eax
  43eae8:	call   0x42f1ef
  43eaed:	mov    edx,DWORD PTR ds:0x448884
  43eaf3:	lea    eax,[ebp-0x108]
  43eaf9:	sub    si,ax
  43eafc:	mov    ecx,eax
  43eafe:	mov    BYTE PTR [ebp-0x108],0x38
  43eb05:	mov    WORD PTR [ebp-0x107],si
  43eb0c:	call   0x43f399
  43eb11:	mov    ecx,DWORD PTR [ebp-0x4]
  43eb14:	xor    ecx,ebp
  43eb16:	pop    esi
  43eb17:	call   0x446dc7
  43eb1c:	leave  
  43eb1d:	ret    
  43eb1e:	push   ebp
  43eb1f:	mov    ebp,esp
  43eb21:	sub    esp,0xc
  43eb24:	movsx  edx,WORD PTR ds:0x45fadc
  43eb2b:	push   esi
  43eb2c:	push   0xb
  43eb2e:	mov    esi,ecx
  43eb30:	mov    ecx,DWORD PTR ds:0x45fae4
  43eb36:	pop    eax
  43eb37:	push   esi
  43eb38:	mov    BYTE PTR [ebp-0xc],0x35
  43eb3c:	mov    WORD PTR [ebp-0xb],ax
  43eb40:	call   0x43e966
  43eb45:	mov    ecx,eax
  43eb47:	cmp    ecx,0xffffffff
  43eb4a:	jne    0x43eb60
  43eb4c:	push   0x0
  43eb4e:	mov    edx,esi
  43eb50:	mov    ecx,0x45fad8
  43eb55:	call   0x43e9bb
  43eb5a:	and    DWORD PTR [ebp-0x9],0x0
  43eb5e:	jmp    0x43eb88
  43eb60:	cmp    BYTE PTR [ecx+esi*1+0x328],0x0
  43eb68:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  43eb6c:	mov    DWORD PTR [ebp-0x9],eax
  43eb6f:	jne    0x43eb7e
  43eb71:	mov    eax,ds:0x448884
  43eb76:	mov    eax,DWORD PTR [eax]
  43eb78:	mov    DWORD PTR [esi+ecx*4+0x8],eax
  43eb7c:	jmp    0x43eb88
  43eb7e:	mov    eax,DWORD PTR [esi+ecx*4+0x198]
  43eb85:	mov    DWORD PTR [ebp-0x5],eax
  43eb88:	mov    edx,DWORD PTR ds:0x448884
  43eb8e:	lea    ecx,[ebp-0xc]
  43eb91:	call   0x43f399
  43eb96:	pop    esi
  43eb97:	leave  
  43eb98:	ret    
  43eb99:	cmp    DWORD PTR ds:0x45fac8,0x10052
  43eba3:	push   ebx
  43eba4:	push   esi
  43eba5:	push   edi
  43eba6:	mov    edi,ecx
  43eba8:	jne    0x43ec0a
  43ebaa:	cmp    DWORD PTR ds:0x45fad8,0x1000d
  43ebb4:	jne    0x43ec0a
  43ebb6:	cmp    DWORD PTR ds:0x45fae8,0x0
  43ebbd:	jne    0x43ebfb
  43ebbf:	mov    ecx,DWORD PTR ds:0x460594
  43ebc5:	lea    ecx,[ecx+0x1]
  43ebc8:	call   0x43f45b
  43ebcd:	mov    ecx,DWORD PTR ds:0x460594
  43ebd3:	mov    esi,eax
  43ebd5:	push   ecx
  43ebd6:	mov    BYTE PTR [esi],cl
  43ebd8:	lea    ecx,[esi+0x1]
  43ebdb:	push   0x460e6c
  43ebe0:	push   ecx
  43ebe1:	call   0x447646
  43ebe6:	add    esp,0xc
  43ebe9:	mov    edx,edi
  43ebeb:	push   esi
  43ebec:	mov    ecx,0x45fad8
  43ebf1:	call   0x43e9bb
  43ebf6:	jmp    0x43ecac
  43ebfb:	mov    edx,0x45fae8
  43ec00:	call   0x42f1ef
  43ec05:	jmp    0x43ecac
  43ec0a:	xor    ebx,ebx
  43ec0c:	call   0x43e58b
  43ec11:	sub    eax,ebx
  43ec13:	je     0x43ec5d
  43ec15:	dec    eax
  43ec16:	je     0x43ec87
  43ec18:	dec    eax
  43ec19:	je     0x43ec75
  43ec1b:	dec    eax
  43ec1c:	je     0x43ec26
  43ec1e:	dec    eax
  43ec1f:	je     0x43ec32
  43ec21:	jmp    0x43ecac
  43ec26:	mov    ecx,0x45fac8
  43ec2b:	call   0x43e7ba
  43ec30:	mov    ebx,eax
  43ec32:	mov    esi,DWORD PTR ds:0x460618
  43ec38:	and    DWORD PTR ds:0x460618,0x0
  43ec3f:	mov    DWORD PTR ds:0x460624,0x45fab8
  43ec49:	call   0x441eb1
  43ec4e:	cmp    BYTE PTR ds:0x462d60,0x0
  43ec55:	mov    DWORD PTR ds:0x460618,esi
  43ec5b:	jne    0x43ecac
  43ec5d:	push   0x0
  43ec5f:	xor    dl,dl
  43ec61:	xor    ecx,ecx
  43ec63:	call   0x43abf1
  43ec68:	mov    ecx,ebx
  43ec6a:	call   0x43e891
  43ec6f:	xor    al,al
  43ec71:	pop    edi
  43ec72:	pop    esi
  43ec73:	pop    ebx
  43ec74:	ret    
  43ec75:	push   0x0
  43ec77:	xor    dl,dl
  43ec79:	xor    ecx,ecx
  43ec7b:	call   0x43abf1
  43ec80:	call   0x43ea8d
  43ec85:	jmp    0x43ecac
  43ec87:	push   0x0
  43ec89:	xor    dl,dl
  43ec8b:	xor    ecx,ecx
  43ec8d:	call   0x43abf1
  43ec92:	cmp    DWORD PTR ds:0x45fac8,0x80033
  43ec9c:	je     0x43eca5
  43ec9e:	call   0x43ecb0
  43eca3:	jmp    0x43ec6f
  43eca5:	mov    ecx,edi
  43eca7:	call   0x43eb1e
  43ecac:	mov    al,0x1
  43ecae:	jmp    0x43ec71
  43ecb0:	push   ebp
  43ecb1:	mov    ebp,esp
  43ecb3:	sub    esp,0x264
  43ecb9:	mov    eax,ds:0x448858
  43ecbe:	xor    eax,ebp
  43ecc0:	mov    DWORD PTR [ebp-0x4],eax
  43ecc3:	push   esi
  43ecc4:	xor    esi,esi
  43ecc6:	mov    ecx,DWORD PTR ds:0x45fac4
  43eccc:	lea    eax,[ebp-0x25d]
  43ecd2:	mov    DWORD PTR [ebp-0x264],eax
  43ecd8:	movsx  eax,WORD PTR ds:0x45fabc
  43ecdf:	push   0x45fac8
  43ece4:	add    eax,ecx
  43ece6:	push   eax
  43ece7:	push   ecx
  43ece8:	lea    edx,[ebp-0x5]
  43eceb:	lea    ecx,[ebp-0x264]
  43ecf1:	call   0x43e625
  43ecf6:	mov    edx,DWORD PTR ds:0x448884
  43ecfc:	add    esi,eax
  43ecfe:	mov    ax,WORD PTR [ebp-0x264]
  43ed05:	lea    ecx,[ebp-0x260]
  43ed0b:	sub    ax,cx
  43ed0e:	mov    BYTE PTR [ebp-0x260],0x39
  43ed15:	mov    WORD PTR [ebp-0x25f],ax
  43ed1c:	call   0x43f399
  43ed21:	call   0x43f29e
  43ed26:	test   esi,esi
  43ed28:	jle    0x43ed55
  43ed2a:	mov    ecx,DWORD PTR ds:0x45f9b4
  43ed30:	mov    eax,ds:0x460618
  43ed35:	add    DWORD PTR [ecx],eax
  43ed37:	cmp    BYTE PTR ds:0x44f54e,0x0
  43ed3e:	je     0x43ed4b
  43ed40:	push   0x0
  43ed42:	mov    dl,0x34
  43ed44:	xor    ecx,ecx
  43ed46:	call   0x43abf1
  43ed4b:	call   0x43df97
  43ed50:	jmp    0x43ecc6
  43ed55:	cmp    BYTE PTR ds:0x44f54e,0x0
  43ed5c:	pop    esi
  43ed5d:	je     0x43ed6a
  43ed5f:	push   0x0
  43ed61:	mov    dl,0x34
  43ed63:	xor    ecx,ecx
  43ed65:	call   0x43abf1
  43ed6a:	mov    ecx,DWORD PTR [ebp-0x4]
  43ed6d:	xor    ecx,ebp
  43ed6f:	call   0x446dc7
  43ed74:	leave  
  43ed75:	ret    
  43ed76:	push   ebx
  43ed77:	push   esi
  43ed78:	xor    ebx,ebx
  43ed7a:	mov    esi,ecx
  43ed7c:	inc    ebx
  43ed7d:	push   edi
  43ed7e:	cmp    WORD PTR [esi+0x2],bx
  43ed82:	jne    0x43ee51
  43ed88:	movzx  ecx,WORD PTR [esi]
  43ed8b:	cmp    ecx,0x5
  43ed8e:	jl     0x43ee75
  43ed94:	cmp    ecx,0x6
  43ed97:	jle    0x43ee00
  43ed99:	cmp    ecx,0x7
  43ed9c:	je     0x43ede9
  43ed9e:	cmp    ecx,0xd
  43eda1:	je     0x43edbc
  43eda3:	cmp    ecx,0x20
  43eda6:	je     0x43edb6
  43eda8:	cmp    ecx,0x46
  43edab:	je     0x43edb6
  43edad:	cmp    ecx,0x59
  43edb0:	jne    0x43ee75
  43edb6:	mov    al,bl
  43edb8:	pop    edi
  43edb9:	pop    esi
  43edba:	pop    ebx
  43edbb:	ret    
  43edbc:	movsx  edx,WORD PTR [esi+0x4]
  43edc0:	mov    ecx,DWORD PTR [esi+0xc]
  43edc3:	call   0x43e22b
  43edc8:	cmp    eax,0xffffffff
  43edcb:	jne    0x43edb6
  43edcd:	mov    eax,DWORD PTR [esi+0x8]
  43edd0:	test   eax,eax
  43edd2:	je     0x43edb6
  43edd4:	mov    al,BYTE PTR [eax+0x6]
  43edd7:	cmp    al,0x4
  43edd9:	jb     0x43ee75
  43eddf:	cmp    al,0x7
  43ede1:	ja     0x43ee75
  43ede7:	jmp    0x43edb6
  43ede9:	movsx  ecx,WORD PTR [esi+0x4]
  43eded:	mov    eax,DWORD PTR [esi+0xc]
  43edf0:	add    ecx,eax
  43edf2:	jmp    0x43edfa
  43edf4:	cmp    BYTE PTR [eax],0x26
  43edf7:	je     0x43edb6
  43edf9:	inc    eax
  43edfa:	cmp    eax,ecx
  43edfc:	jb     0x43edf4
  43edfe:	jmp    0x43ee75
  43ee00:	movsx  ebx,WORD PTR [esi+0x4]
  43ee04:	mov    edi,DWORD PTR [esi+0xc]
  43ee07:	add    ebx,edi
  43ee09:	jmp    0x43ee44
  43ee0b:	mov    cl,BYTE PTR [edi]
  43ee0d:	call   0x43f224
  43ee12:	test   al,al
  43ee14:	je     0x43ee43
  43ee16:	lea    esi,[edi+0x1]
  43ee19:	jmp    0x43ee2b
  43ee1b:	movzx  eax,BYTE PTR [esi]
  43ee1e:	mov    al,BYTE PTR [eax+0x448f88]
  43ee24:	sub    al,0x24
  43ee26:	cmp    al,0x3b
  43ee28:	ja     0x43ee2f
  43ee2a:	inc    esi
  43ee2b:	cmp    esi,ebx
  43ee2d:	jb     0x43ee1b
  43ee2f:	mov    edx,esi
  43ee31:	sub    edx,edi
  43ee33:	mov    ecx,edi
  43ee35:	call   0x43e22b
  43ee3a:	cmp    eax,0xffffffff
  43ee3d:	jne    0x43ee4a
  43ee3f:	mov    edi,esi
  43ee41:	jmp    0x43ee44
  43ee43:	inc    edi
  43ee44:	cmp    edi,ebx
  43ee46:	jb     0x43ee0b
  43ee48:	jmp    0x43ee75
  43ee4a:	mov    al,0x1
  43ee4c:	jmp    0x43edb8
  43ee51:	cmp    DWORD PTR [esi],0x40078
  43ee57:	je     0x43edb6
  43ee5d:	cmp    DWORD PTR [esi],0x4005b
  43ee63:	je     0x43edb6
  43ee69:	cmp    DWORD PTR [esi],0x4005c
  43ee6f:	je     0x43edb6
  43ee75:	xor    al,al
  43ee77:	jmp    0x43edb8
  43ee7c:	push   ebp
  43ee7d:	mov    ebp,esp
  43ee7f:	push   ecx
  43ee80:	push   ecx
  43ee81:	push   ebx
  43ee82:	mov    ebx,DWORD PTR [ebp+0xc]
  43ee85:	mov    eax,ecx
  43ee87:	push   edi
  43ee88:	mov    edi,edx
  43ee8a:	mov    DWORD PTR [ebp-0x8],eax
  43ee8d:	cmp    ebx,0xffffffff
  43ee90:	je     0x43ef10
  43ee92:	test   ebx,ebx
  43ee94:	je     0x43ef10
  43ee96:	push   esi
  43ee97:	mov    esi,DWORD PTR [eax]
  43ee99:	mov    eax,ebx
  43ee9b:	cdq    
  43ee9c:	push   0x7f
  43ee9e:	pop    ecx
  43ee9f:	idiv   ecx
  43eea1:	inc    eax
  43eea2:	add    eax,esi
  43eea4:	add    eax,ebx
  43eea6:	cmp    eax,edi
  43eea8:	jb     0x43eeb7
  43eeaa:	mov    ecx,0x3f7
  43eeaf:	call   0x42f124
  43eeb4:	push   0x7f
  43eeb6:	pop    ecx
  43eeb7:	cmp    ebx,ecx
  43eeb9:	jle    0x43eef6
  43eebb:	xor    edx,edx
  43eebd:	lea    eax,[ebx-0x80]
  43eec0:	div    ecx
  43eec2:	mov    edx,DWORD PTR [ebp+0x8]
  43eec5:	inc    eax
  43eec6:	mov    ecx,eax
  43eec8:	imul   ecx,ecx,0xffffff81
  43eecb:	add    ebx,ecx
  43eecd:	mov    DWORD PTR [ebp+0xc],ebx
  43eed0:	mov    ebx,esi
  43eed2:	mov    BYTE PTR [ebx],0x7f
  43eed5:	push   0x1f
  43eed7:	mov    esi,edx
  43eed9:	lea    edi,[ebx+0x1]
  43eedc:	pop    ecx
  43eedd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eedf:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43eee1:	sub    ebx,0xffffff80
  43eee4:	add    edx,0x7f
  43eee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eee8:	dec    eax
  43eee9:	jne    0x43eed2
  43eeeb:	mov    DWORD PTR [ebp-0x4],ebx
  43eeee:	mov    ebx,DWORD PTR [ebp+0xc]
  43eef1:	mov    esi,DWORD PTR [ebp-0x4]
  43eef4:	jmp    0x43eef9
  43eef6:	mov    edx,DWORD PTR [ebp+0x8]
  43eef9:	push   ebx
  43eefa:	mov    BYTE PTR [esi],bl
  43eefc:	push   edx
  43eefd:	inc    esi
  43eefe:	push   esi
  43eeff:	call   0x447646
  43ef04:	mov    ecx,DWORD PTR [ebp-0x8]
  43ef07:	add    esp,0xc
  43ef0a:	lea    eax,[esi+ebx*1]
  43ef0d:	mov    DWORD PTR [ecx],eax
  43ef0f:	pop    esi
  43ef10:	pop    edi
  43ef11:	pop    ebx
  43ef12:	leave  
  43ef13:	ret    0x8
  43ef16:	push   ebp
  43ef17:	mov    ebp,esp
  43ef19:	push   ecx
  43ef1a:	push   ebx
  43ef1b:	mov    ebx,ecx
  43ef1d:	push   esi
  43ef1e:	lea    esi,[ebx-0x1]
  43ef21:	push   edi
  43ef22:	cmp    BYTE PTR [esi],0x29
  43ef25:	mov    edi,edx
  43ef27:	jne    0x43ef4b
  43ef29:	xor    eax,eax
  43ef2b:	inc    eax
  43ef2c:	jmp    0x43ef41
  43ef2e:	test   eax,eax
  43ef30:	jle    0x43ef46
  43ef32:	movsx  ecx,BYTE PTR [esi]
  43ef35:	sub    ecx,0x28
  43ef38:	je     0x43ef40
  43ef3a:	dec    ecx
  43ef3b:	jne    0x43ef41
  43ef3d:	inc    eax
  43ef3e:	jmp    0x43ef41
  43ef40:	dec    eax
  43ef41:	dec    esi
  43ef42:	cmp    esi,edi
  43ef44:	jae    0x43ef2e
  43ef46:	lea    edx,[esi+0x1]
  43ef49:	jmp    0x43ef5e
  43ef4b:	mov    edx,ebx
  43ef4d:	jmp    0x43ef5e
  43ef4f:	movzx  eax,BYTE PTR [esi]
  43ef52:	mov    al,BYTE PTR [eax+0x448f88]
  43ef58:	sub    al,0x24
  43ef5a:	cmp    al,0x3b
  43ef5c:	ja     0x43ef63
  43ef5e:	dec    esi
  43ef5f:	cmp    esi,edi
  43ef61:	jae    0x43ef4f
  43ef63:	inc    esi
  43ef64:	cmp    esi,edi
  43ef66:	jb     0x43efbb
  43ef68:	mov    cl,BYTE PTR [esi]
  43ef6a:	call   0x43f224
  43ef6f:	test   al,al
  43ef71:	je     0x43efbb
  43ef73:	sub    edx,esi
  43ef75:	mov    ecx,esi
  43ef77:	call   0x43e22b
  43ef7c:	mov    DWORD PTR [ebp-0x4],eax
  43ef7f:	cmp    eax,0xffffffff
  43ef82:	je     0x43efbb
  43ef84:	mov    edx,DWORD PTR [ebp+0xc]
  43ef87:	sub    esi,edi
  43ef89:	push   esi
  43ef8a:	mov    esi,DWORD PTR [ebp+0x8]
  43ef8d:	push   edi
  43ef8e:	mov    ecx,esi
  43ef90:	call   0x43ee7c
  43ef95:	mov    eax,DWORD PTR [esi]
  43ef97:	inc    eax
  43ef98:	cmp    eax,DWORD PTR [ebp+0xc]
  43ef9b:	jb     0x43efab
  43ef9d:	push   0x0
  43ef9f:	xor    edx,edx
  43efa1:	mov    ecx,0x7fa
  43efa6:	call   0x42ee80
  43efab:	mov    ecx,DWORD PTR [esi]
  43efad:	mov    eax,DWORD PTR [ebp-0x4]
  43efb0:	or     al,0x80
  43efb2:	mov    BYTE PTR [ecx],al
  43efb4:	inc    ecx
  43efb5:	mov    DWORD PTR [esi],ecx
  43efb7:	mov    al,0x1
  43efb9:	jmp    0x43efcc
  43efbb:	mov    edx,DWORD PTR [ebp+0xc]
  43efbe:	mov    ecx,DWORD PTR [ebp+0x8]
  43efc1:	sub    ebx,edi
  43efc3:	push   ebx
  43efc4:	push   edi
  43efc5:	call   0x43ee7c
  43efca:	xor    al,al
  43efcc:	pop    edi
  43efcd:	pop    esi
  43efce:	pop    ebx
  43efcf:	leave  
  43efd0:	ret    0x8
  43efd3:	push   ebp
  43efd4:	mov    ebp,esp
  43efd6:	sub    esp,0xc
  43efd9:	push   ebx
  43efda:	push   esi
  43efdb:	mov    esi,DWORD PTR [ebp+0x8]
  43efde:	push   edi
  43efdf:	mov    esi,DWORD PTR [esi]
  43efe1:	mov    edi,ecx
  43efe3:	lea    ebx,[edi+edx*1]
  43efe6:	mov    DWORD PTR [ebp-0x8],ebx
  43efe9:	mov    DWORD PTR [ebp-0x4],esi
  43efec:	jmp    0x43f098
  43eff1:	mov    esi,edi
  43eff3:	cmp    edi,ebx
  43eff5:	jae    0x43f0d5
  43effb:	cmp    BYTE PTR [esi],0x26
  43effe:	je     0x43f005
  43f000:	inc    esi
  43f001:	cmp    esi,ebx
  43f003:	jb     0x43effb
  43f005:	cmp    esi,ebx
  43f007:	jae    0x43f0d5
  43f00d:	push   DWORD PTR [ebp+0xc]
  43f010:	lea    eax,[ebp-0x4]
  43f013:	push   eax
  43f014:	mov    edx,edi
  43f016:	mov    ecx,esi
  43f018:	call   0x43ef16
  43f01d:	lea    edi,[esi+0x1]
  43f020:	test   al,al
  43f022:	je     0x43f029
  43f024:	mov    esi,DWORD PTR [ebp-0x4]
  43f027:	jmp    0x43f098
  43f029:	mov    cl,BYTE PTR [edi]
  43f02b:	call   0x43f224
  43f030:	test   al,al
  43f032:	je     0x43f0af
  43f034:	mov    ecx,DWORD PTR [ebp-0x8]
  43f037:	lea    ebx,[edi+0x1]
  43f03a:	jmp    0x43f04c
  43f03c:	movzx  eax,BYTE PTR [ebx]
  43f03f:	mov    al,BYTE PTR [eax+0x448f88]
  43f045:	sub    al,0x24
  43f047:	cmp    al,0x3b
  43f049:	ja     0x43f050
  43f04b:	inc    ebx
  43f04c:	cmp    ebx,ecx
  43f04e:	jb     0x43f03c
  43f050:	mov    edx,ebx
  43f052:	sub    edx,edi
  43f054:	mov    ecx,edi
  43f056:	call   0x43e22b
  43f05b:	mov    DWORD PTR [ebp-0xc],eax
  43f05e:	cmp    eax,0xffffffff
  43f061:	je     0x43f0ac
  43f063:	mov    edi,DWORD PTR [ebp-0x4]
  43f066:	lea    esi,[edi+0x1]
  43f069:	cmp    esi,DWORD PTR [ebp+0xc]
  43f06c:	jb     0x43f07f
  43f06e:	push   0x0
  43f070:	xor    edx,edx
  43f072:	mov    ecx,0x7fa
  43f077:	call   0x42ee80
  43f07c:	mov    eax,DWORD PTR [ebp-0xc]
  43f07f:	or     al,0x80
  43f081:	mov    BYTE PTR [edi],al
  43f083:	mov    DWORD PTR [ebp-0x4],esi
  43f086:	mov    edi,ebx
  43f088:	cmp    ebx,DWORD PTR [ebp-0x8]
  43f08b:	jae    0x43f0a0
  43f08d:	cmp    BYTE PTR [ebx],0x26
  43f090:	jne    0x43f095
  43f092:	lea    edi,[ebx+0x1]
  43f095:	mov    ebx,DWORD PTR [ebp-0x8]
  43f098:	cmp    edi,ebx
  43f09a:	jb     0x43eff1
  43f0a0:	mov    ebx,DWORD PTR [ebp+0x8]
  43f0a3:	mov    DWORD PTR [ebx],esi
  43f0a5:	pop    edi
  43f0a6:	pop    esi
  43f0a7:	pop    ebx
  43f0a8:	leave  
  43f0a9:	ret    0x8
  43f0ac:	mov    ebx,DWORD PTR [ebp-0x8]
  43f0af:	mov    esi,DWORD PTR [ebp-0x4]
  43f0b2:	lea    eax,[esi+0x2]
  43f0b5:	cmp    eax,DWORD PTR [ebp+0xc]
  43f0b8:	jb     0x43f0c8
  43f0ba:	push   0x0
  43f0bc:	xor    edx,edx
  43f0be:	mov    ecx,0x7fa
  43f0c3:	call   0x42ee80
  43f0c8:	mov    WORD PTR [esi],0x2601
  43f0cd:	add    esi,0x2
  43f0d0:	jmp    0x43efe9
  43f0d5:	mov    edx,DWORD PTR [ebp+0xc]
  43f0d8:	sub    esi,edi
  43f0da:	push   esi
  43f0db:	push   edi
  43f0dc:	lea    ecx,[ebp-0x4]
  43f0df:	call   0x43ee7c
  43f0e4:	mov    ecx,DWORD PTR [ebp+0x8]
  43f0e7:	mov    eax,DWORD PTR [ebp-0x4]
  43f0ea:	mov    DWORD PTR [ecx],eax
  43f0ec:	jmp    0x43f0a5
  43f0ee:	push   ebp
  43f0ef:	mov    ebp,esp
  43f0f1:	sub    esp,0xc
  43f0f4:	mov    eax,DWORD PTR [ebp+0x8]
  43f0f7:	push   ebx
  43f0f8:	mov    eax,DWORD PTR [eax]
  43f0fa:	mov    ebx,ecx
  43f0fc:	push   esi
  43f0fd:	push   edi
  43f0fe:	lea    edi,[ebx+edx*1]
  43f101:	mov    esi,ebx
  43f103:	mov    DWORD PTR [ebp-0x4],eax
  43f106:	cmp    ebx,edi
  43f108:	jae    0x43f206
  43f10e:	mov    dl,BYTE PTR [esi]
  43f110:	mov    cl,dl
  43f112:	call   0x43f224
  43f117:	test   al,al
  43f119:	je     0x43f1a0
  43f11f:	mov    ecx,esi
  43f121:	mov    DWORD PTR [ebp-0x8],ecx
  43f124:	jmp    0x43f135
  43f126:	movzx  eax,BYTE PTR [esi]
  43f129:	mov    al,BYTE PTR [eax+0x448f88]
  43f12f:	sub    al,0x24
  43f131:	cmp    al,0x3b
  43f133:	ja     0x43f13a
  43f135:	inc    esi
  43f136:	cmp    esi,edi
  43f138:	jb     0x43f126
  43f13a:	mov    edx,esi
  43f13c:	sub    edx,ecx
  43f13e:	call   0x43e22b
  43f143:	mov    DWORD PTR [ebp-0xc],eax
  43f146:	cmp    eax,0xffffffff
  43f149:	je     0x43f1fe
  43f14f:	mov    edx,DWORD PTR [ebp-0x8]
  43f152:	mov    ecx,edx
  43f154:	sub    ecx,ebx
  43f156:	je     0x43f15f
  43f158:	cmp    BYTE PTR [edx-0x1],0x26
  43f15c:	jne    0x43f15f
  43f15e:	dec    ecx
  43f15f:	mov    edx,DWORD PTR [ebp+0xc]
  43f162:	push   ecx
  43f163:	push   ebx
  43f164:	lea    ecx,[ebp-0x4]
  43f167:	call   0x43ee7c
  43f16c:	mov    ebx,DWORD PTR [ebp-0x4]
  43f16f:	lea    eax,[ebx+0x1]
  43f172:	cmp    eax,DWORD PTR [ebp+0xc]
  43f175:	jb     0x43f185
  43f177:	push   0x0
  43f179:	xor    edx,edx
  43f17b:	mov    ecx,0x7fa
  43f180:	call   0x42ee80
  43f185:	mov    eax,DWORD PTR [ebp-0xc]
  43f188:	or     al,0x80
  43f18a:	mov    BYTE PTR [ebx],al
  43f18c:	lea    eax,[ebx+0x1]
  43f18f:	mov    DWORD PTR [ebp-0x4],eax
  43f192:	cmp    esi,edi
  43f194:	jae    0x43f19c
  43f196:	cmp    BYTE PTR [esi],0x26
  43f199:	jne    0x43f19c
  43f19b:	inc    esi
  43f19c:	mov    ebx,esi
  43f19e:	jmp    0x43f1fe
  43f1a0:	cmp    dl,0x21
  43f1a3:	jne    0x43f1aa
  43f1a5:	add    esi,0x2
  43f1a8:	jmp    0x43f1fe
  43f1aa:	cmp    dl,0x27
  43f1ad:	je     0x43f1b4
  43f1af:	cmp    dl,0x22
  43f1b2:	jne    0x43f1fd
  43f1b4:	inc    esi
  43f1b5:	mov    ecx,esi
  43f1b7:	mov    DWORD PTR [ebp-0xc],ecx
  43f1ba:	cmp    esi,edi
  43f1bc:	jae    0x43f1d5
  43f1be:	lea    eax,[esi+0x1]
  43f1c1:	cmp    BYTE PTR [esi],dl
  43f1c3:	jne    0x43f1cf
  43f1c5:	cmp    eax,edi
  43f1c7:	jae    0x43f1d5
  43f1c9:	cmp    BYTE PTR [eax],dl
  43f1cb:	jne    0x43f1d5
  43f1cd:	inc    esi
  43f1ce:	inc    eax
  43f1cf:	inc    esi
  43f1d0:	inc    eax
  43f1d1:	cmp    esi,edi
  43f1d3:	jb     0x43f1c1
  43f1d5:	mov    edx,DWORD PTR [ebp+0xc]
  43f1d8:	sub    ecx,ebx
  43f1da:	push   ecx
  43f1db:	push   ebx
  43f1dc:	lea    ecx,[ebp-0x4]
  43f1df:	call   0x43ee7c
  43f1e4:	push   DWORD PTR [ebp+0xc]
  43f1e7:	mov    ecx,DWORD PTR [ebp-0xc]
  43f1ea:	lea    eax,[ebp-0x4]
  43f1ed:	mov    edx,esi
  43f1ef:	push   eax
  43f1f0:	sub    edx,ecx
  43f1f2:	call   0x43efd3
  43f1f7:	mov    ebx,esi
  43f1f9:	cmp    esi,edi
  43f1fb:	jae    0x43f206
  43f1fd:	inc    esi
  43f1fe:	cmp    esi,edi
  43f200:	jb     0x43f10e
  43f206:	mov    edx,DWORD PTR [ebp+0xc]
  43f209:	sub    esi,ebx
  43f20b:	push   esi
  43f20c:	push   ebx
  43f20d:	lea    ecx,[ebp-0x4]
  43f210:	call   0x43ee7c
  43f215:	mov    ecx,DWORD PTR [ebp+0x8]
  43f218:	mov    eax,DWORD PTR [ebp-0x4]
  43f21b:	pop    edi
  43f21c:	pop    esi
  43f21d:	mov    DWORD PTR [ecx],eax
  43f21f:	pop    ebx
  43f220:	leave  
  43f221:	ret    0x8
  43f224:	cmp    cl,0x2e
  43f227:	je     0x43f244
  43f229:	movzx  eax,cl
  43f22c:	mov    cl,BYTE PTR [eax+0x448f88]
  43f232:	lea    eax,[ecx-0x24]
  43f235:	cmp    al,0x3b
  43f237:	ja     0x43f241
  43f239:	sub    cl,0x30
  43f23c:	cmp    cl,0x9
  43f23f:	ja     0x43f244
  43f241:	xor    eax,eax
  43f243:	ret    
  43f244:	xor    eax,eax
  43f246:	inc    eax
  43f247:	ret    
  43f248:	push   ebp
  43f249:	mov    ebp,esp
  43f24b:	mov    eax,DWORD PTR [ebp+0x8]
  43f24e:	xor    ecx,ecx
  43f250:	inc    ecx
  43f251:	inc    eax
  43f252:	cmp    eax,DWORD PTR [ebp+0xc]
  43f255:	jae    0x43f275
  43f257:	test   ecx,ecx
  43f259:	je     0x43f29a
  43f25b:	mov    dl,BYTE PTR [eax]
  43f25d:	cmp    dl,0x28
  43f260:	jne    0x43f265
  43f262:	inc    ecx
  43f263:	jmp    0x43f26b
  43f265:	cmp    dl,0x29
  43f268:	jne    0x43f26b
  43f26a:	dec    ecx
  43f26b:	inc    eax
  43f26c:	cmp    eax,DWORD PTR [ebp+0xc]
  43f26f:	jb     0x43f257
  43f271:	test   ecx,ecx
  43f273:	je     0x43f29a
  43f275:	lea    ecx,[ebp+0xc]
  43f278:	mov    WORD PTR [ebp+0xc],0x29
  43f27e:	lea    edx,[ecx+0x1]
  43f281:	mov    al,BYTE PTR [ecx]
  43f283:	inc    ecx
  43f284:	test   al,al
  43f286:	jne    0x43f281
  43f288:	sub    ecx,edx
  43f28a:	push   ecx
  43f28b:	lea    edx,[ebp+0xc]
  43f28e:	mov    ecx,0x811
  43f293:	call   0x42f15d
  43f298:	xor    eax,eax
  43f29a:	pop    ebp
  43f29b:	ret    0x8
  43f29e:	mov    eax,ds:0x45f9b4
  43f2a3:	mov    edx,DWORD PTR ds:0x448884
  43f2a9:	mov    eax,DWORD PTR [eax]
  43f2ab:	sub    eax,DWORD PTR ds:0x46056c
  43f2b1:	mov    ecx,0x44db44
  43f2b6:	mov    ds:0x44db47,eax
  43f2bb:	jmp    0x43f399
  43f2c0:	push   esi
  43f2c1:	push   edi
  43f2c2:	mov    edi,edx
  43f2c4:	lea    esi,[ecx+0x3]
  43f2c7:	cmp    esi,DWORD PTR [edi+0x4]
  43f2ca:	jbe    0x43f2d5
  43f2cc:	mov    edx,esi
  43f2ce:	mov    ecx,edi
  43f2d0:	call   0x43f3d4
  43f2d5:	mov    eax,DWORD PTR [edi]
  43f2d7:	sub    DWORD PTR [edi+0x4],esi
  43f2da:	lea    ecx,[eax+esi*1]
  43f2dd:	mov    DWORD PTR [edi],ecx
  43f2df:	pop    edi
  43f2e0:	mov    WORD PTR [eax+0x1],si
  43f2e4:	pop    esi
  43f2e5:	ret    
  43f2e6:	push   esi
  43f2e7:	mov    esi,ecx
  43f2e9:	push   edi
  43f2ea:	movzx  edi,WORD PTR [esi+0x1]
  43f2ee:	add    edi,esi
  43f2f0:	cmp    BYTE PTR [esi],0x53
  43f2f3:	jne    0x43f30d
  43f2f5:	add    esi,0x17
  43f2f8:	jmp    0x43f307
  43f2fa:	mov    ecx,esi
  43f2fc:	call   0x43f2e6
  43f301:	movzx  eax,WORD PTR [esi+0x1]
  43f305:	add    esi,eax
  43f307:	cmp    esi,edi
  43f309:	jb     0x43f2fa
  43f30b:	jmp    0x43f37c
  43f30d:	lea    ecx,[esi+0x4]
  43f310:	cmp    ecx,edi
  43f312:	jae    0x43f37c
  43f314:	mov    edx,DWORD PTR ds:0x460e3c
  43f31a:	push   ebx
  43f31b:	movzx  eax,BYTE PTR [ecx]
  43f31e:	inc    ecx
  43f31f:	cmp    eax,0x5
  43f322:	jl     0x43f371
  43f324:	cmp    eax,0xa
  43f327:	jle    0x43f36b
  43f329:	cmp    eax,0xc
  43f32c:	jle    0x43f338
  43f32e:	cmp    eax,0xd
  43f331:	je     0x43f341
  43f333:	cmp    eax,0xe
  43f336:	jne    0x43f371
  43f338:	movzx  eax,BYTE PTR [ecx-0x1]
  43f33c:	add    ecx,0xfffffff6
  43f33f:	jmp    0x43f36f
  43f341:	mov    esi,DWORD PTR [ecx]
  43f343:	test   esi,esi
  43f345:	jne    0x43f351
  43f347:	test   edx,edx
  43f349:	je     0x43f34d
  43f34b:	mov    DWORD PTR [ecx],edx
  43f34d:	mov    edx,ecx
  43f34f:	jmp    0x43f362
  43f351:	mov    bl,BYTE PTR [esi+0x7]
  43f354:	mov    al,bl
  43f356:	and    al,0x3
  43f358:	cmp    al,0x3
  43f35a:	jne    0x43f362
  43f35c:	or     bl,0x80
  43f35f:	mov    BYTE PTR [esi+0x7],bl
  43f362:	movzx  eax,BYTE PTR [ecx+0x4]
  43f366:	add    ecx,0x5
  43f369:	jmp    0x43f36f
  43f36b:	movzx  eax,BYTE PTR [ecx]
  43f36e:	inc    ecx
  43f36f:	add    ecx,eax
  43f371:	cmp    ecx,edi
  43f373:	jb     0x43f31b
  43f375:	mov    DWORD PTR ds:0x460e3c,edx
  43f37b:	pop    ebx
  43f37c:	pop    edi
  43f37d:	pop    esi
  43f37e:	ret    
  43f37f:	mov    eax,DWORD PTR [ecx+0x8]
  43f382:	test   eax,eax
  43f384:	je     0x43f398
  43f386:	push   esi
  43f387:	mov    esi,DWORD PTR [eax]
  43f389:	push   eax
  43f38a:	call   DWORD PTR ds:0x464354
  43f390:	pop    ecx
  43f391:	mov    eax,esi
  43f393:	test   esi,esi
  43f395:	jne    0x43f387
  43f397:	pop    esi
  43f398:	ret    
  43f399:	push   ebp
  43f39a:	mov    ebp,esp
  43f39c:	push   ecx
  43f39d:	push   ebx
  43f39e:	mov    eax,ecx
  43f3a0:	push   esi
  43f3a1:	movzx  ebx,WORD PTR [eax+0x1]
  43f3a5:	push   edi
  43f3a6:	mov    edi,edx
  43f3a8:	mov    DWORD PTR [ebp-0x4],eax
  43f3ab:	cmp    ebx,DWORD PTR [edi+0x4]
  43f3ae:	jbe    0x43f3b9
  43f3b0:	mov    edx,ebx
  43f3b2:	mov    ecx,edi
  43f3b4:	call   0x43f3d4
  43f3b9:	mov    esi,DWORD PTR [edi]
  43f3bb:	push   ebx
  43f3bc:	push   DWORD PTR [ebp-0x4]
  43f3bf:	push   esi
  43f3c0:	call   0x447646
  43f3c5:	sub    DWORD PTR [edi+0x4],ebx
  43f3c8:	add    esp,0xc
  43f3cb:	add    DWORD PTR [edi],ebx
  43f3cd:	pop    edi
  43f3ce:	mov    eax,esi
  43f3d0:	pop    esi
  43f3d1:	pop    ebx
  43f3d2:	leave  
  43f3d3:	ret    
  43f3d4:	push   esi
  43f3d5:	mov    esi,ecx
  43f3d7:	cmp    DWORD PTR [esi+0x8],0x0
  43f3db:	jne    0x43f401
  43f3dd:	cmp    edx,0x77
  43f3e0:	sbb    ecx,ecx
  43f3e2:	and    ecx,0xfffff880
  43f3e8:	add    ecx,0x7f7
  43f3ee:	mov    DWORD PTR [esi+0x4],ecx
  43f3f1:	add    ecx,0x9
  43f3f4:	call   0x43f42e
  43f3f9:	mov    DWORD PTR [esi+0x8],eax
  43f3fc:	mov    DWORD PTR [esi+0xc],eax
  43f3ff:	jmp    0x43f424
  43f401:	mov    ecx,0x800
  43f406:	mov    DWORD PTR [esi+0x4],0x7f7
  43f40d:	call   0x43f42e
  43f412:	mov    ecx,DWORD PTR [esi+0xc]
  43f415:	mov    DWORD PTR [ecx],eax
  43f417:	mov    eax,DWORD PTR [esi+0xc]
  43f41a:	mov    ecx,DWORD PTR [eax]
  43f41c:	mov    eax,DWORD PTR [esi]
  43f41e:	mov    DWORD PTR [esi+0xc],ecx
  43f421:	mov    DWORD PTR [eax+0x1],ecx
  43f424:	mov    eax,DWORD PTR [esi+0xc]
  43f427:	add    eax,0x4
  43f42a:	mov    DWORD PTR [esi],eax
  43f42c:	pop    esi
  43f42d:	ret    
  43f42e:	push   esi
  43f42f:	push   edi
  43f430:	mov    edi,ecx
  43f432:	push   edi
  43f433:	call   DWORD PTR ds:0x4643e4
  43f439:	mov    esi,eax
  43f43b:	pop    ecx
  43f43c:	test   esi,esi
  43f43e:	jne    0x43f44a
  43f440:	mov    ecx,0x3ec
  43f445:	call   0x42f124
  43f44a:	push   edi
  43f44b:	push   0x0
  43f44d:	push   esi
  43f44e:	call   0x44764c
  43f453:	add    esp,0xc
  43f456:	mov    eax,esi
  43f458:	pop    edi
  43f459:	pop    esi
  43f45a:	ret    
  43f45b:	push   esi
  43f45c:	push   ecx
  43f45d:	call   DWORD PTR ds:0x4643e4
  43f463:	mov    esi,eax
  43f465:	pop    ecx
  43f466:	test   esi,esi
  43f468:	jne    0x43f47c
  43f46a:	push   eax
  43f46b:	xor    edx,edx
  43f46d:	mov    ecx,0x3ec
  43f472:	call   0x42ee80
  43f477:	call   0x42c81b
  43f47c:	mov    eax,esi
  43f47e:	pop    esi
  43f47f:	ret    
  43f480:	mov    ecx,0x3ec
  43f485:	call   0x42f124
  43f48a:	xor    eax,eax
  43f48c:	ret    
  43f48d:	push   ebx
  43f48e:	mov    ebx,ecx
  43f490:	push   esi
  43f491:	mov    esi,ebx
  43f493:	push   edi
  43f494:	lea    ecx,[esi+0x2]
  43f497:	mov    ax,WORD PTR [esi]
  43f49a:	add    esi,0x2
  43f49d:	test   ax,ax
  43f4a0:	jne    0x43f497
  43f4a2:	sub    esi,ecx
  43f4a4:	sar    esi,1
  43f4a6:	lea    esi,[esi*2+0x2]
  43f4ad:	mov    ecx,esi
  43f4af:	call   0x43f45b
  43f4b4:	push   esi
  43f4b5:	mov    edi,eax
  43f4b7:	push   ebx
  43f4b8:	push   edi
  43f4b9:	call   0x447646
  43f4be:	add    esp,0xc
  43f4c1:	mov    eax,edi
  43f4c3:	pop    edi
  43f4c4:	pop    esi
  43f4c5:	pop    ebx
  43f4c6:	ret    
  43f4c7:	push   ebp
  43f4c8:	mov    ebp,esp
  43f4ca:	sub    esp,0x1c
  43f4cd:	mov    eax,ds:0x448858
  43f4d2:	xor    eax,ebp
  43f4d4:	mov    DWORD PTR [ebp-0x4],eax
  43f4d7:	push   ebx
  43f4d8:	push   esi
  43f4d9:	push   edi
  43f4da:	lea    eax,[ebp-0x18]
  43f4dd:	push   eax
  43f4de:	xor    esi,esi
  43f4e0:	push   esi
  43f4e1:	mov    ebx,ecx
  43f4e3:	call   DWORD PTR ds:0x464308
  43f4e9:	test   eax,eax
  43f4eb:	jne    0x43f4f7
  43f4ed:	mov    ecx,0x3f8
  43f4f2:	call   0x42f124
  43f4f7:	mov    edi,ebx
  43f4f9:	lea    ecx,[edi+0x2]
  43f4fc:	mov    ax,WORD PTR [edi]
  43f4ff:	add    edi,0x2
  43f502:	cmp    ax,si
  43f505:	jne    0x43f4fc
  43f507:	sub    edi,ecx
  43f509:	sar    edi,1
  43f50b:	inc    edi
  43f50c:	lea    esi,[edi-0x1]
  43f50f:	imul   esi,DWORD PTR [ebp-0x18]
  43f513:	inc    esi
  43f514:	mov    ecx,esi
  43f516:	call   0x43f45b
  43f51b:	xor    ecx,ecx
  43f51d:	push   ecx
  43f51e:	push   ecx
  43f51f:	push   esi
  43f520:	push   eax
  43f521:	push   edi
  43f522:	push   ebx
  43f523:	push   ecx
  43f524:	push   ecx
  43f525:	mov    DWORD PTR [ebp-0x1c],eax
  43f528:	call   DWORD PTR ds:0x46430c
  43f52e:	pop    edi
  43f52f:	pop    esi
  43f530:	pop    ebx
  43f531:	test   eax,eax
  43f533:	jne    0x43f53f
  43f535:	mov    ecx,0x3f8
  43f53a:	call   0x42f124
  43f53f:	mov    ecx,DWORD PTR [ebp-0x4]
  43f542:	mov    eax,DWORD PTR [ebp-0x1c]
  43f545:	xor    ecx,ebp
  43f547:	call   0x446dc7
  43f54c:	leave  
  43f54d:	ret    
  43f54e:	push   ebp
  43f54f:	mov    ebp,esp
  43f551:	sub    esp,0x1c
  43f554:	mov    eax,ds:0x448858
  43f559:	xor    eax,ebp
  43f55b:	mov    DWORD PTR [ebp-0x4],eax
  43f55e:	push   ebx
  43f55f:	push   esi
  43f560:	push   edi
  43f561:	lea    eax,[ebp-0x18]
  43f564:	push   eax
  43f565:	push   0x0
  43f567:	mov    ebx,edx
  43f569:	mov    DWORD PTR [ebp-0x1c],ecx
  43f56c:	call   DWORD PTR ds:0x464308
  43f572:	test   eax,eax
  43f574:	jne    0x43f588
  43f576:	push   eax
  43f577:	xor    edx,edx
  43f579:	mov    ecx,0x3f8
  43f57e:	call   0x42ee80
  43f583:	call   0x42c81b
  43f588:	mov    esi,DWORD PTR [ebp-0x18]
  43f58b:	imul   esi,ebx
  43f58e:	inc    esi
  43f58f:	mov    ecx,esi
  43f591:	call   0x43f45b
  43f596:	mov    edi,eax
  43f598:	xor    eax,eax
  43f59a:	push   eax
  43f59b:	push   eax
  43f59c:	push   esi
  43f59d:	push   edi
  43f59e:	push   ebx
  43f59f:	push   DWORD PTR [ebp-0x1c]
  43f5a2:	push   eax
  43f5a3:	push   eax
  43f5a4:	call   DWORD PTR ds:0x46430c
  43f5aa:	mov    esi,eax
  43f5ac:	test   esi,esi
  43f5ae:	jne    0x43f5c2
  43f5b0:	push   eax
  43f5b1:	xor    edx,edx
  43f5b3:	mov    ecx,0x3f8
  43f5b8:	call   0x42ee80
  43f5bd:	call   0x42c81b
  43f5c2:	mov    ecx,DWORD PTR [ebp-0x4]
  43f5c5:	mov    BYTE PTR [esi+edi*1],0x0
  43f5c9:	mov    eax,edi
  43f5cb:	pop    edi
  43f5cc:	pop    esi
  43f5cd:	xor    ecx,ebp
  43f5cf:	pop    ebx
  43f5d0:	call   0x446dc7
  43f5d5:	leave  
  43f5d6:	ret    
  43f5d7:	push   esi
  43f5d8:	push   edi
  43f5d9:	call   0x43f691
  43f5de:	mov    esi,eax
  43f5e0:	mov    ecx,esi
  43f5e2:	call   0x43f5f6
  43f5e7:	push   esi
  43f5e8:	mov    edi,eax
  43f5ea:	call   DWORD PTR ds:0x464354
  43f5f0:	pop    ecx
  43f5f1:	mov    eax,edi
  43f5f3:	pop    edi
  43f5f4:	pop    esi
  43f5f5:	ret    
  43f5f6:	push   ebp
  43f5f7:	mov    ebp,esp
  43f5f9:	push   ecx
  43f5fa:	push   ebx
  43f5fb:	push   esi
  43f5fc:	mov    ebx,ecx
  43f5fe:	push   edi
  43f5ff:	mov    edi,ebx
  43f601:	xor    edx,edx
  43f603:	lea    ecx,[edi+0x2]
  43f606:	mov    ax,WORD PTR [edi]
  43f609:	add    edi,0x2
  43f60c:	cmp    ax,dx
  43f60f:	jne    0x43f606
  43f611:	sub    edi,ecx
  43f613:	sar    edi,1
  43f615:	inc    edi
  43f616:	lea    esi,[edi-0x1]
  43f619:	imul   esi,esi,0x3
  43f61c:	inc    esi
  43f61d:	mov    ecx,esi
  43f61f:	call   0x43f45b
  43f624:	xor    ecx,ecx
  43f626:	push   ecx
  43f627:	push   ecx
  43f628:	push   esi
  43f629:	push   eax
  43f62a:	push   edi
  43f62b:	push   ebx
  43f62c:	push   ecx
  43f62d:	push   0xfde9
  43f632:	mov    DWORD PTR [ebp-0x4],eax
  43f635:	call   DWORD PTR ds:0x46430c
  43f63b:	pop    edi
  43f63c:	pop    esi
  43f63d:	pop    ebx
  43f63e:	test   eax,eax
  43f640:	jne    0x43f64c
  43f642:	mov    ecx,0x3f8
  43f647:	call   0x42f124
  43f64c:	mov    eax,DWORD PTR [ebp-0x4]
  43f64f:	leave  
  43f650:	ret    
  43f651:	push   ebx
  43f652:	push   esi
  43f653:	push   edi
  43f654:	mov    edi,ecx
  43f656:	mov    esi,edi
  43f658:	lea    ecx,[esi+0x1]
  43f65b:	mov    al,BYTE PTR [esi]
  43f65d:	inc    esi
  43f65e:	test   al,al
  43f660:	jne    0x43f65b
  43f662:	sub    esi,ecx
  43f664:	inc    esi
  43f665:	lea    ecx,[esi+esi*1]
  43f668:	call   0x43f45b
  43f66d:	push   esi
  43f66e:	mov    ebx,eax
  43f670:	push   ebx
  43f671:	push   esi
  43f672:	push   edi
  43f673:	push   0x1
  43f675:	push   0x0
  43f677:	call   DWORD PTR ds:0x464310
  43f67d:	test   eax,eax
  43f67f:	jne    0x43f68b
  43f681:	mov    ecx,0x3f8
  43f686:	call   0x42f124
  43f68b:	pop    edi
  43f68c:	pop    esi
  43f68d:	mov    eax,ebx
  43f68f:	pop    ebx
  43f690:	ret    
  43f691:	push   ebx
  43f692:	push   esi
  43f693:	mov    esi,edx
  43f695:	push   edi
  43f696:	mov    edi,ecx
  43f698:	lea    ecx,[esi*2+0x2]
  43f69f:	call   0x43f45b
  43f6a4:	push   esi
  43f6a5:	mov    ebx,eax
  43f6a7:	push   ebx
  43f6a8:	push   esi
  43f6a9:	push   edi
  43f6aa:	push   0x1
  43f6ac:	push   0x0
  43f6ae:	call   DWORD PTR ds:0x464310
  43f6b4:	mov    esi,eax
  43f6b6:	test   esi,esi
  43f6b8:	jne    0x43f6cc
  43f6ba:	push   eax
  43f6bb:	xor    edx,edx
  43f6bd:	mov    ecx,0x3f8
  43f6c2:	call   0x42ee80
  43f6c7:	call   0x42c81b
  43f6cc:	xor    eax,eax
  43f6ce:	mov    WORD PTR [ebx+esi*2],ax
  43f6d2:	pop    edi
  43f6d3:	pop    esi
  43f6d4:	mov    eax,ebx
  43f6d6:	pop    ebx
  43f6d7:	ret    
  43f6d8:	push   ebx
  43f6d9:	push   esi
  43f6da:	push   edi
  43f6db:	mov    edi,ecx
  43f6dd:	mov    esi,edi
  43f6df:	lea    ecx,[esi+0x1]
  43f6e2:	mov    al,BYTE PTR [esi]
  43f6e4:	inc    esi
  43f6e5:	test   al,al
  43f6e7:	jne    0x43f6e2
  43f6e9:	sub    esi,ecx
  43f6eb:	inc    esi
  43f6ec:	lea    ecx,[esi+esi*1]
  43f6ef:	call   0x43f45b
  43f6f4:	push   esi
  43f6f5:	mov    ebx,eax
  43f6f7:	push   ebx
  43f6f8:	push   esi
  43f6f9:	push   edi
  43f6fa:	push   0x0
  43f6fc:	push   0xfde9
  43f701:	call   DWORD PTR ds:0x464310
  43f707:	test   eax,eax
  43f709:	jne    0x43f715
  43f70b:	mov    ecx,0x3f8
  43f710:	call   0x42f124
  43f715:	pop    edi
  43f716:	pop    esi
  43f717:	mov    eax,ebx
  43f719:	pop    ebx
  43f71a:	ret    
  43f71b:	mov    eax,0x449294
  43f720:	mov    BYTE PTR [eax],0x5
  43f723:	add    eax,0x10
  43f726:	cmp    eax,0x4492c4
  43f72b:	jle    0x43f720
  43f72d:	cmp    BYTE PTR ds:0x45f692,0x0
  43f734:	jne    0x43f75f
  43f736:	xor    ecx,ecx
  43f738:	mov    eax,DWORD PTR [ecx+0x449290]
  43f73e:	add    ecx,0x10
  43f741:	and    DWORD PTR [eax],0x0
  43f744:	cmp    ecx,0x50
  43f747:	jb     0x43f738
  43f749:	push   0x3
  43f74b:	pop    ecx
  43f74c:	call   0x43f762
  43f751:	xor    ecx,ecx
  43f753:	call   0x43f762
  43f758:	xor    ecx,ecx
  43f75a:	call   0x4442bc
  43f75f:	ret    0x4
  43f762:	push   ebx
  43f763:	push   esi
  43f764:	push   edi
  43f765:	mov    edi,ecx
  43f767:	cmp    edi,0x4
  43f76a:	je     0x43f77f
  43f76c:	cmp    edi,0x5
  43f76f:	jge    0x43f77a
  43f771:	xor    ecx,ecx
  43f773:	call   0x4442bc
  43f778:	jmp    0x43f77f
  43f77a:	call   0x444280
  43f77f:	mov    ebx,edi
  43f781:	shl    ebx,0x4
  43f784:	mov    ecx,DWORD PTR [ebx+0x449290]
  43f78a:	mov    esi,DWORD PTR [ecx]
  43f78c:	test   esi,esi
  43f78e:	je     0x43f796
  43f790:	test   BYTE PTR [esi+0x7],0x20
  43f794:	je     0x43f7c8
  43f796:	call   0x444026
  43f79b:	mov    esi,eax
  43f79d:	test   esi,esi
  43f79f:	jne    0x43f7a5
  43f7a1:	xor    eax,eax
  43f7a3:	jmp    0x43f809
  43f7a5:	movzx  eax,BYTE PTR [ebx+0x449294]
  43f7ac:	mov    WORD PTR [esi+0x1c],ax
  43f7b0:	cmp    edi,0x2
  43f7b3:	jne    0x43f7b9
  43f7b5:	or     BYTE PTR [esi+0x7],0x40
  43f7b9:	mov    ecx,DWORD PTR [ebx+0x449298]
  43f7bf:	call   0x444158
  43f7c4:	or     BYTE PTR [esi+0x48],0x1
  43f7c8:	mov    al,BYTE PTR [esi+0x6]
  43f7cb:	cmp    al,0x8
  43f7cd:	jne    0x43f7e7
  43f7cf:	mov    ecx,0x232d
  43f7d4:	call   0x42eb12
  43f7d9:	mov    edx,eax
  43f7db:	mov    ecx,0x7d8
  43f7e0:	call   0x42f1c0
  43f7e5:	jmp    0x43f7a1
  43f7e7:	cmp    al,0x10
  43f7e9:	je     0x43f800
  43f7eb:	movzx  eax,BYTE PTR [esi+0x5]
  43f7ef:	sub    esi,eax
  43f7f1:	push   eax
  43f7f2:	mov    edx,esi
  43f7f4:	mov    ecx,0x7d5
  43f7f9:	call   0x42f15d
  43f7fe:	jmp    0x43f7a1
  43f800:	mov    ecx,esi
  43f802:	call   0x444348
  43f807:	mov    eax,esi
  43f809:	pop    edi
  43f80a:	pop    esi
  43f80b:	pop    ebx
  43f80c:	ret    
  43f80d:	push   ebp
  43f80e:	mov    ebp,esp
  43f810:	mov    al,ds:0x45f839
  43f815:	push   esi
  43f816:	mov    esi,DWORD PTR [ebp+0x8]
  43f819:	test   al,al
  43f81b:	je     0x43f82f
  43f81d:	and    al,0xfe
  43f81f:	mov    ds:0x45f839,al
  43f824:	test   al,0x4
  43f826:	je     0x43f82f
  43f828:	mov    ecx,esi
  43f82a:	call   0x440ec6
  43f82f:	cmp    BYTE PTR ds:0x45f692,0x0
  43f836:	push   edi
  43f837:	jne    0x43f877
  43f839:	cmp    DWORD PTR ds:0x45f834,0x0
  43f840:	je     0x43f877
  43f842:	mov    edi,0x44db4c
  43f847:	mov    eax,ds:0x45f830
  43f84c:	movzx  ecx,BYTE PTR ds:0x44db4c
  43f853:	mov    ds:0x44db50,eax
  43f858:	mov    eax,ds:0x448988
  43f85d:	push   edi
  43f85e:	call   DWORD PTR [eax+ecx*4]
  43f861:	mov    edx,DWORD PTR ds:0x448884
  43f867:	mov    ecx,edi
  43f869:	call   0x43f399
  43f86e:	cmp    DWORD PTR ds:0x45f834,0x0
  43f875:	jne    0x43f847
  43f877:	movzx  eax,BYTE PTR [esi+0x3]
  43f87b:	sub    ax,0x10
  43f87f:	movzx  ecx,ax
  43f882:	mov    ax,WORD PTR [esi+0x1]
  43f886:	sub    ax,0x3
  43f88a:	movsx  edi,cx
  43f88d:	cmp    ax,0x1
  43f891:	jbe    0x43f8ba
  43f893:	mov    ecx,edi
  43f895:	shl    ecx,0x4
  43f898:	lea    eax,[esi+0x5]
  43f89b:	test   BYTE PTR [ecx+0x44929c],0x1
  43f8a2:	mov    DWORD PTR [ecx+0x449290],eax
  43f8a8:	jne    0x43f8d0
  43f8aa:	push   0x0
  43f8ac:	xor    edx,edx
  43f8ae:	mov    ecx,0x7d3
  43f8b3:	call   0x42ee80
  43f8b8:	jmp    0x43f8d0
  43f8ba:	mov    ecx,DWORD PTR [edi*4+0x449320]
  43f8c1:	test   ecx,ecx
  43f8c3:	je     0x43f8d0
  43f8c5:	mov    eax,edi
  43f8c7:	shl    eax,0x4
  43f8ca:	mov    DWORD PTR [eax+0x449290],ecx
  43f8d0:	mov    ecx,edi
  43f8d2:	call   0x43f762
  43f8d7:	pop    edi
  43f8d8:	test   eax,eax
  43f8da:	jne    0x43f8e0
  43f8dc:	mov    WORD PTR [esi+0x1],ax
  43f8e0:	cmp    BYTE PTR ds:0x45f692,0x0
  43f8e7:	jne    0x43f8fc
  43f8e9:	cmp    BYTE PTR [esi+0x3],0x13
  43f8ed:	jne    0x43f8fc
  43f8ef:	mov    eax,ds:0x45f834
  43f8f4:	test   eax,eax
  43f8f6:	je     0x43f8fc
  43f8f8:	or     BYTE PTR [eax+0x7],0x80
  43f8fc:	pop    esi
  43f8fd:	pop    ebp
  43f8fe:	ret    0x4
  43f901:	push   ebp
  43f902:	mov    ebp,esp
  43f904:	push   ecx
  43f905:	push   ebx
  43f906:	push   esi
  43f907:	mov    esi,DWORD PTR ds:0x460e30
  43f90d:	push   edi
  43f90e:	mov    edi,DWORD PTR [ebp+0xc]
  43f911:	mov    BYTE PTR [ebp-0x1],cl
  43f914:	mov    eax,DWORD PTR [edi+0x1c]
  43f917:	movzx  ebx,WORD PTR [eax+0x10]
  43f91b:	test   cl,cl
  43f91d:	je     0x43f94e
  43f91f:	mov    edx,ebx
  43f921:	mov    eax,ebx
  43f923:	imul   eax,DWORD PTR [ebp+0x8]
  43f927:	sub    esi,eax
  43f929:	push   0x4
  43f92b:	pop    eax
  43f92c:	mov    ds:0x449318,ax
  43f932:	and    edx,0x3
  43f935:	movzx  eax,si
  43f938:	movsx  ecx,WORD PTR [edx*2+0x449318]
  43f940:	cdq    
  43f941:	idiv   ecx
  43f943:	mov    cl,BYTE PTR [ebp-0x1]
  43f946:	sub    esi,edx
  43f948:	mov    DWORD PTR ds:0x460e30,esi
  43f94e:	mov    ax,ds:0x45f990
  43f954:	mov    DWORD PTR [edi+0x20],esi
  43f957:	mov    WORD PTR [edi+0x2c],bx
  43f95b:	mov    WORD PTR [edi+0x24],ax
  43f95f:	test   cl,cl
  43f961:	jne    0x43f986
  43f963:	add    esi,ebx
  43f965:	push   0x8
  43f967:	pop    edx
  43f968:	mov    ecx,esi
  43f96a:	and    ecx,0x7
  43f96d:	mov    eax,edx
  43f96f:	sub    eax,ecx
  43f971:	movzx  eax,ax
  43f974:	cmp    ax,dx
  43f977:	jne    0x43f97b
  43f979:	xor    eax,eax
  43f97b:	movzx  eax,ax
  43f97e:	add    esi,eax
  43f980:	mov    DWORD PTR ds:0x460e30,esi
  43f986:	mov    eax,ds:0x460e44
  43f98b:	pop    edi
  43f98c:	mov    DWORD PTR [eax+0x44],esi
  43f98f:	pop    esi
  43f990:	pop    ebx
  43f991:	leave  
  43f992:	ret    0x8
  43f995:	push   ebp
  43f996:	mov    ebp,esp
  43f998:	or     BYTE PTR ds:0x45f839,0x6
  43f99f:	push   ebx
  43f9a0:	push   esi
  43f9a1:	mov    esi,DWORD PTR [ebp+0x8]
  43f9a4:	mov    ebx,edx
  43f9a6:	cmp    esi,DWORD PTR [ebp+0xc]
  43f9a9:	jae    0x43fa9c
  43f9af:	push   edi
  43f9b0:	mov    edx,0x89
  43f9b5:	lea    ecx,[esi+0x1]
  43f9b8:	call   0x4458d0
  43f9bd:	mov    edi,eax
  43f9bf:	test   edi,edi
  43f9c1:	je     0x43fa9b
  43f9c7:	mov    ecx,DWORD PTR ds:0x460e44
  43f9cd:	xor    edx,edx
  43f9cf:	cmp    DWORD PTR [ecx+0x30],edx
  43f9d2:	jne    0x43f9d9
  43f9d4:	mov    DWORD PTR [ecx+0x30],edi
  43f9d7:	jmp    0x43f9e1
  43f9d9:	mov    eax,ds:0x460e40
  43f9de:	mov    DWORD PTR [eax+0x18],edi
  43f9e1:	inc    BYTE PTR [ecx+0x40]
  43f9e4:	movzx  eax,BYTE PTR [esi+0x5]
  43f9e8:	add    esi,0x6
  43f9eb:	add    esi,eax
  43f9ed:	mov    DWORD PTR ds:0x460e40,edi
  43f9f3:	mov    DWORD PTR [edi+0x28],0x1
  43f9fa:	cmp    esi,DWORD PTR [ebp+0xc]
  43f9fd:	jae    0x43fa18
  43f9ff:	cmp    BYTE PTR [esi],0x52
  43fa02:	jne    0x43fa18
  43fa04:	lea    edx,[edi+0x1c]
  43fa07:	lea    ecx,[esi+0x1]
  43fa0a:	call   0x444bcc
  43fa0f:	mov    esi,eax
  43fa11:	lea    ecx,[edi+0x1c]
  43fa14:	xor    edx,edx
  43fa16:	jmp    0x43fa21
  43fa18:	lea    ecx,[edi+0x1c]
  43fa1b:	mov    DWORD PTR [ecx],0x44946c
  43fa21:	test   ebx,ebx
  43fa23:	je     0x43fa34
  43fa25:	mov    eax,DWORD PTR [ebx+0x4]
  43fa28:	movzx  eax,WORD PTR [eax+0xe]
  43fa2c:	test   al,0x10
  43fa2e:	je     0x43fa39
  43fa30:	test   al,0x20
  43fa32:	je     0x43fa64
  43fa34:	cmp    esi,DWORD PTR [ebp+0xc]
  43fa37:	jb     0x43fa8e
  43fa39:	test   ebx,ebx
  43fa3b:	je     0x43fa87
  43fa3d:	mov    eax,DWORD PTR [ebx+0x4]
  43fa40:	cmp    eax,DWORD PTR [ecx]
  43fa42:	jne    0x43fa72
  43fa44:	mov    ebx,DWORD PTR [ebx]
  43fa46:	test   ebx,ebx
  43fa48:	jne    0x43fa4f
  43fa4a:	cmp    esi,DWORD PTR [ebp+0xc]
  43fa4d:	jb     0x43fa6b
  43fa4f:	push   edi
  43fa50:	push   0x1
  43fa52:	xor    cl,cl
  43fa54:	call   0x43f901
  43fa59:	cmp    esi,DWORD PTR [ebp+0xc]
  43fa5c:	jb     0x43f9b0
  43fa62:	jmp    0x43fa9b
  43fa64:	mov    ecx,0x893
  43fa69:	jmp    0x43fa93
  43fa6b:	mov    ecx,0x83f
  43fa70:	jmp    0x43fa93
  43fa72:	movzx  eax,BYTE PTR [edi+0x5]
  43fa76:	sub    edi,eax
  43fa78:	push   eax
  43fa79:	mov    edx,edi
  43fa7b:	mov    ecx,0x83f
  43fa80:	call   0x42f15d
  43fa85:	jmp    0x43fa9b
  43fa87:	mov    ecx,0x840
  43fa8c:	jmp    0x43fa93
  43fa8e:	mov    ecx,0x851
  43fa93:	push   edx
  43fa94:	xor    edx,edx
  43fa96:	call   0x42ee80
  43fa9b:	pop    edi
  43fa9c:	pop    esi
  43fa9d:	pop    ebx
  43fa9e:	pop    ebp
  43fa9f:	ret    0x8
  43faa2:	push   ebp
  43faa3:	mov    ebp,esp
  43faa5:	push   ecx
  43faa6:	push   ecx
  43faa7:	or     BYTE PTR ds:0x45f839,0x6
  43faae:	push   ebx
  43faaf:	push   esi
  43fab0:	mov    al,cl
  43fab2:	push   edi
  43fab3:	xor    edi,edi
  43fab5:	mov    BYTE PTR [ebp-0x1],al
  43fab8:	test   al,al
  43faba:	jne    0x43fad2
  43fabc:	push   0x1c
  43fabe:	pop    ecx
  43fabf:	call   0x43f42e
  43fac4:	mov    edi,eax
  43fac6:	mov    eax,0x84
  43facb:	mov    WORD PTR [edi+0xe],ax
  43facf:	mov    al,BYTE PTR [ebp-0x1]
  43fad2:	mov    esi,DWORD PTR [ebp+0x8]
  43fad5:	xor    ebx,ebx
  43fad7:	mov    DWORD PTR [ebp-0x8],ebx
  43fada:	jmp    0x43fc07
  43fadf:	test   al,al
  43fae1:	jne    0x43fb08
  43fae3:	push   0x8
  43fae5:	pop    ecx
  43fae6:	call   0x43f42e
  43faeb:	cmp    DWORD PTR [edi+0x14],0x0
  43faef:	jne    0x43fafb
  43faf1:	mov    ecx,eax
  43faf3:	mov    DWORD PTR [ebp-0x8],ecx
  43faf6:	mov    DWORD PTR [edi+0x14],ecx
  43faf9:	jmp    0x43fb00
  43fafb:	mov    DWORD PTR [ebx],eax
  43fafd:	mov    DWORD PTR [ebp-0x8],eax
  43fb00:	mov    eax,ds:0x460e44
  43fb05:	inc    BYTE PTR [eax+0x40]
  43fb08:	mov    edx,0x89
  43fb0d:	lea    ecx,[esi+0x1]
  43fb10:	call   0x4458d0
  43fb15:	mov    ebx,eax
  43fb17:	test   ebx,ebx
  43fb19:	je     0x43fc19
  43fb1f:	mov    eax,ds:0x460e44
  43fb24:	cmp    DWORD PTR [eax+0x30],0x0
  43fb28:	jne    0x43fb2f
  43fb2a:	mov    DWORD PTR [eax+0x30],ebx
  43fb2d:	jmp    0x43fb37
  43fb2f:	mov    eax,ds:0x460e40
  43fb34:	mov    DWORD PTR [eax+0x18],ebx
  43fb37:	movzx  eax,BYTE PTR [esi+0x5]
  43fb3b:	add    esi,0x6
  43fb3e:	add    esi,eax
  43fb40:	mov    DWORD PTR ds:0x460e40,ebx
  43fb46:	cmp    esi,DWORD PTR [ebp+0xc]
  43fb49:	jae    0x43fb65
  43fb4b:	cmp    BYTE PTR [esi],0x5a
  43fb4e:	jne    0x43fb65
  43fb50:	inc    esi
  43fb51:	lea    edx,[ebp+0xb]
  43fb54:	mov    ecx,esi
  43fb56:	call   0x431d7f
  43fb5b:	mov    DWORD PTR [ebx+0x28],eax
  43fb5e:	movzx  ecx,BYTE PTR [esi]
  43fb61:	add    esi,ecx
  43fb63:	jmp    0x43fb6b
  43fb65:	xor    eax,eax
  43fb67:	inc    eax
  43fb68:	mov    DWORD PTR [ebx+0x28],eax
  43fb6b:	mov    DWORD PTR [ebp+0x8],eax
  43fb6e:	cmp    esi,DWORD PTR [ebp+0xc]
  43fb71:	jae    0x43fb8a
  43fb73:	cmp    BYTE PTR [esi],0x52
  43fb76:	jne    0x43fb8a
  43fb78:	lea    edx,[ebx+0x1c]
  43fb7b:	lea    ecx,[esi+0x1]
  43fb7e:	call   0x444bcc
  43fb83:	mov    esi,eax
  43fb85:	lea    eax,[ebx+0x1c]
  43fb88:	jmp    0x43fb93
  43fb8a:	lea    eax,[ebx+0x1c]
  43fb8d:	mov    DWORD PTR [eax],0x44946c
  43fb93:	cmp    BYTE PTR [ebp-0x1],0x0
  43fb97:	mov    eax,DWORD PTR [eax]
  43fb99:	jne    0x43fbc4
  43fb9b:	mov    ecx,DWORD PTR [ebp-0x8]
  43fb9e:	mov    DWORD PTR [ecx+0x4],eax
  43fba1:	mov    al,BYTE PTR [eax+0xe]
  43fba4:	and    al,0x30
  43fba6:	cmp    al,0x30
  43fba8:	jne    0x43fbdb
  43fbaa:	cmp    esi,DWORD PTR [ebp+0xc]
  43fbad:	jae    0x43fbbd
  43fbaf:	push   0x0
  43fbb1:	xor    edx,edx
  43fbb3:	mov    ecx,0x851
  43fbb8:	call   0x42ee80
  43fbbd:	or     WORD PTR [edi+0x18],0x10
  43fbc2:	jmp    0x43fbdb
  43fbc4:	mov    al,BYTE PTR [eax+0xe]
  43fbc7:	and    al,0x30
  43fbc9:	cmp    al,0x30
  43fbcb:	jne    0x43fbdb
  43fbcd:	push   0x0
  43fbcf:	xor    edx,edx
  43fbd1:	mov    ecx,0x852
  43fbd6:	call   0x42ee80
  43fbdb:	mov    eax,DWORD PTR [ebx+0x1c]
  43fbde:	mov    al,BYTE PTR [eax+0xe]
  43fbe1:	and    al,0x30
  43fbe3:	cmp    al,0x10
  43fbe5:	jne    0x43fbf5
  43fbe7:	push   0x0
  43fbe9:	xor    edx,edx
  43fbeb:	mov    ecx,0x893
  43fbf0:	call   0x42ee80
  43fbf5:	mov    cl,BYTE PTR [ebp-0x1]
  43fbf8:	push   ebx
  43fbf9:	push   DWORD PTR [ebp+0x8]
  43fbfc:	call   0x43f901
  43fc01:	mov    al,BYTE PTR [ebp-0x1]
  43fc04:	mov    ebx,DWORD PTR [ebp-0x8]
  43fc07:	cmp    esi,DWORD PTR [ebp+0xc]
  43fc0a:	jb     0x43fadf
  43fc10:	mov    eax,edi
  43fc12:	pop    edi
  43fc13:	pop    esi
  43fc14:	pop    ebx
  43fc15:	leave  
  43fc16:	ret    0x8
  43fc19:	xor    eax,eax
  43fc1b:	jmp    0x43fc12
  43fc1d:	push   ebp
  43fc1e:	mov    ebp,esp
  43fc20:	push   ecx
  43fc21:	push   ebx
  43fc22:	push   esi
  43fc23:	push   edi
  43fc24:	mov    esi,ecx
  43fc26:	xor    edi,edi
  43fc28:	test   esi,esi
  43fc2a:	je     0x43fc85
  43fc2c:	mov    bl,BYTE PTR [esi]
  43fc2e:	cmp    bl,0x28
  43fc31:	je     0x43fc85
  43fc33:	cmp    bl,0x9
  43fc36:	je     0x43fc85
  43fc38:	cmp    bl,0x8
  43fc3b:	je     0x43fc85
  43fc3d:	mov    ecx,esi
  43fc3f:	call   0x428f71
  43fc44:	mov    DWORD PTR [ebp-0x4],eax
  43fc47:	cmp    bl,0x54
  43fc4a:	jne    0x43fc7c
  43fc4c:	mov    ecx,esi
  43fc4e:	call   0x42c8a5
  43fc53:	movzx  eax,BYTE PTR [eax+0x1]
  43fc57:	add    edi,eax
  43fc59:	movzx  eax,WORD PTR [esi+0x3]
  43fc5d:	cmp    eax,0x5b
  43fc60:	jl     0x43fc7c
  43fc62:	cmp    eax,0x5d
  43fc65:	jle    0x43fc85
  43fc67:	cmp    eax,0x9e
  43fc6c:	je     0x43fc85
  43fc6e:	cmp    eax,0x53c
  43fc73:	jle    0x43fc7c
  43fc75:	cmp    eax,0x53f
  43fc7a:	jle    0x43fc85
  43fc7c:	mov    ebx,DWORD PTR [ebp-0x4]
  43fc7f:	mov    esi,ebx
  43fc81:	test   ebx,ebx
  43fc83:	jne    0x43fc2c
  43fc85:	mov    eax,edi
  43fc87:	pop    edi
  43fc88:	pop    esi
  43fc89:	pop    ebx
  43fc8a:	leave  
  43fc8b:	ret    
  43fc8c:	push   ebp
  43fc8d:	mov    ebp,esp
  43fc8f:	and    esp,0xfffffff8
  43fc92:	sub    esp,0xc
  43fc95:	cmp    BYTE PTR ds:0x45f692,0x0
  43fc9c:	push   ebx
  43fc9d:	push   esi
  43fc9e:	push   edi
  43fc9f:	jne    0x43fde0
  43fca5:	mov    ecx,DWORD PTR ds:0x462b94
  43fcab:	test   ecx,ecx
  43fcad:	jne    0x43fcc1
  43fcaf:	push   ecx
  43fcb0:	xor    edx,edx
  43fcb2:	mov    ecx,0xfb4
  43fcb7:	call   0x42ee80
  43fcbc:	jmp    0x4401df
  43fcc1:	mov    edi,DWORD PTR [ebp+0x8]
  43fcc4:	xor    esi,esi
  43fcc6:	cmp    BYTE PTR [edi+0x3],0x7b
  43fcca:	je     0x43fce5
  43fccc:	cmp    BYTE PTR [ecx+0x14],0x0
  43fcd0:	je     0x43fce5
  43fcd2:	push   esi
  43fcd3:	xor    edx,edx
  43fcd5:	mov    ecx,0xfba
  43fcda:	call   0x42ee80
  43fcdf:	mov    ecx,DWORD PTR ds:0x462b94
  43fce5:	cmp    BYTE PTR [ecx+0xc],0x0
  43fce9:	jne    0x43fcfe
  43fceb:	push   esi
  43fcec:	xor    edx,edx
  43fcee:	mov    ecx,0x8ad
  43fcf3:	call   0x42ee80
  43fcf8:	mov    ecx,DWORD PTR ds:0x462b94
  43fcfe:	movzx  eax,BYTE PTR [edi+0x3]
  43fd02:	add    eax,0xffffff8c
  43fd05:	cmp    eax,0x7
  43fd08:	ja     0x4401df
  43fd0e:	jmp    DWORD PTR [eax*4+0x4401e8]
  43fd15:	inc    DWORD PTR [ecx+0x8]
  43fd18:	jmp    0x4401df
  43fd1d:	lea    ecx,[edi+0x4]
  43fd20:	lea    edx,[esp+0xf]
  43fd24:	call   0x431d7f
  43fd29:	cmp    eax,0x80
  43fd2e:	jbe    0x43fd3c
  43fd30:	cmp    eax,0x80000
  43fd35:	sbb    ecx,ecx
  43fd37:	add    ecx,0x3
  43fd3a:	jmp    0x43fd3f
  43fd3c:	xor    ecx,ecx
  43fd3e:	inc    ecx
  43fd3f:	mov    eax,ds:0x462b94
  43fd44:	add    DWORD PTR [eax+0x8],ecx
  43fd47:	jmp    0x4401df
  43fd4c:	lea    ecx,[edi+0x5]
  43fd4f:	lea    edx,[esp+0xf]
  43fd53:	call   0x431d7f
  43fd58:	cmp    eax,0xfbf8
  43fd5d:	jmp    0x43fd35
  43fd5f:	cmp    DWORD PTR ds:0x462b88,esi
  43fd65:	jne    0x43fdcb
  43fd67:	call   0x444280
  43fd6c:	push   0x4
  43fd6e:	pop    ecx
  43fd6f:	call   0x43f762
  43fd74:	or     BYTE PTR [eax+0x7],0x10
  43fd78:	mov    ds:0x462b88,eax
  43fd7d:	cmp    DWORD PTR ds:0x462b8c,esi
  43fd83:	jne    0x43fdbe
  43fd85:	push   0x3
  43fd87:	pop    edx
  43fd88:	mov    ecx,0x449308
  43fd8d:	call   0x4458d0
  43fd92:	and    BYTE PTR [eax+0x7],0xfd
  43fd96:	mov    ecx,0x80
  43fd9b:	or     WORD PTR [eax+0x2c],cx
  43fd9f:	mov    ecx,DWORD PTR ds:0x45f834
  43fda5:	mov    DWORD PTR [eax+0x1c],esi
  43fda8:	mov    DWORD PTR [eax+0x20],ecx
  43fdab:	mov    DWORD PTR [eax+0x28],0x1
  43fdb2:	mov    DWORD PTR [eax+0x24],0x449434
  43fdb9:	mov    ds:0x462b8c,eax
  43fdbe:	xor    ecx,ecx
  43fdc0:	call   0x4442bc
  43fdc5:	mov    ecx,DWORD PTR ds:0x462b94
  43fdcb:	mov    BYTE PTR [ecx+0x14],0x1
  43fdcf:	jmp    0x4401df
  43fdd4:	inc    DWORD PTR [ecx+0x18]
  43fdd7:	mov    BYTE PTR [ecx+0x15],0x1
  43fddb:	jmp    0x4401df
  43fde0:	mov    edi,DWORD PTR ds:0x462b94
  43fde6:	test   edi,edi
  43fde8:	je     0x4401df
  43fdee:	xor    esi,esi
  43fdf0:	cmp    DWORD PTR [edi+0x20],esi
  43fdf3:	jne    0x43fe4e
  43fdf5:	mov    eax,DWORD PTR [edi+0x18]
  43fdf8:	test   eax,eax
  43fdfa:	jle    0x43fe05
  43fdfc:	add    eax,0x2
  43fdff:	cdq    
  43fe00:	sub    eax,edx
  43fe02:	and    eax,0xfffffffe
  43fe05:	mov    ecx,DWORD PTR [edi+0x8]
  43fe08:	inc    ecx
  43fe09:	add    eax,ecx
  43fe0b:	mov    ecx,DWORD PTR [edi+0x4]
  43fe0e:	cdq    
  43fe0f:	sub    eax,edx
  43fe11:	sar    eax,1
  43fe13:	lea    ecx,[ecx+eax*4]
  43fe16:	add    ecx,0x7
  43fe19:	and    ecx,0xfffffffc
  43fe1c:	mov    DWORD PTR [edi+0x4],ecx
  43fe1f:	call   0x43f45b
  43fe24:	mov    edi,DWORD PTR ds:0x462b94
  43fe2a:	push   DWORD PTR [edi+0x4]
  43fe2d:	mov    DWORD PTR [edi+0x20],eax
  43fe30:	push   esi
  43fe31:	push   eax
  43fe32:	call   0x44764c
  43fe37:	mov    ecx,DWORD PTR [edi+0x20]
  43fe3a:	add    esp,0xc
  43fe3d:	mov    al,BYTE PTR [ecx]
  43fe3f:	and    al,0xf9
  43fe41:	or     al,0x1
  43fe43:	mov    BYTE PTR [ecx],al
  43fe45:	mov    ecx,DWORD PTR [edi+0x20]
  43fe48:	mov    al,BYTE PTR [edi+0x8]
  43fe4b:	mov    BYTE PTR [ecx+0x2],al
  43fe4e:	mov    edx,DWORD PTR [ebp+0x8]
  43fe51:	mov    ebx,DWORD PTR [edi+0x10]
  43fe54:	movzx  eax,BYTE PTR [edx+0x3]
  43fe58:	add    eax,0xffffff8c
  43fe5b:	cmp    eax,0x7
  43fe5e:	ja     0x4401dc
  43fe64:	jmp    DWORD PTR [eax*4+0x440208]
  43fe6b:	mov    eax,DWORD PTR [edi+0x20]
  43fe6e:	lea    esi,[eax+ebx*2]
  43fe71:	mov    eax,ds:0x45f834
  43fe76:	inc    ebx
  43fe77:	movzx  ecx,WORD PTR [eax+0x1a]
  43fe7b:	call   0x4243d2
  43fe80:	mov    edi,DWORD PTR ds:0x462b94
  43fe86:	mov    edx,DWORD PTR [ebp+0x8]
  43fe89:	sub    al,BYTE PTR [edi+0x24]
  43fe8c:	and    BYTE PTR [esi+0x5],0xf0
  43fe90:	mov    cl,BYTE PTR [esi+0x5]
  43fe93:	mov    BYTE PTR [esi+0x4],al
  43fe96:	mov    al,BYTE PTR [edx+0x4]
  43fe99:	sub    al,0x4
  43fe9b:	shl    al,0x4
  43fe9e:	and    cl,0xf
  43fea1:	or     al,cl
  43fea3:	mov    BYTE PTR [esi+0x5],al
  43fea6:	jmp    0x4401dc
  43feab:	mov    edi,DWORD PTR [edi+0x20]
  43feae:	mov    eax,ds:0x45f834
  43feb3:	add    edi,0x4
  43feb6:	movzx  ecx,WORD PTR [eax+0x1a]
  43feba:	lea    edi,[edi+ebx*2]
  43febd:	mov    DWORD PTR [esp+0x14],edi
  43fec1:	inc    ebx
  43fec2:	call   0x4243d2
  43fec7:	mov    ecx,DWORD PTR ds:0x462b94
  43fecd:	lea    edx,[esp+0xf]
  43fed1:	sub    al,BYTE PTR [ecx+0x24]
  43fed4:	mov    ecx,DWORD PTR [ebp+0x8]
  43fed7:	mov    BYTE PTR [edi],al
  43fed9:	lea    ecx,[ecx+0x4]
  43fedc:	call   0x431d7f
  43fee1:	mov    DWORD PTR [esp+0x10],eax
  43fee5:	test   al,0x7
  43fee7:	je     0x43fefa
  43fee9:	push   esi
  43feea:	xor    edx,edx
  43feec:	mov    ecx,0x8ab
  43fef1:	call   0x42ee80
  43fef6:	mov    eax,DWORD PTR [esp+0x10]
  43fefa:	mov    ecx,eax
  43fefc:	shr    ecx,0x3
  43feff:	cmp    eax,0x80
  43ff04:	jbe    0x43ff4d
  43ff06:	mov    edx,DWORD PTR [esp+0x14]
  43ff0a:	mov    esi,DWORD PTR [esp+0x10]
  43ff0e:	mov    al,BYTE PTR [edx+0x1]
  43ff11:	mov    edi,DWORD PTR ds:0x462b94
  43ff17:	and    al,0xf1
  43ff19:	or     al,0x1
  43ff1b:	mov    BYTE PTR [edx+0x1],al
  43ff1e:	mov    eax,DWORD PTR [edi+0x20]
  43ff21:	cmp    esi,0x80000
  43ff27:	jae    0x43ff38
  43ff29:	mov    WORD PTR [eax+ebx*2+0x4],cx
  43ff2e:	inc    ebx
  43ff2f:	and    BYTE PTR [edx+0x1],0xf
  43ff33:	jmp    0x4401dc
  43ff38:	add    ebx,0x2
  43ff3b:	mov    DWORD PTR [eax+ebx*2],esi
  43ff3e:	mov    al,BYTE PTR [edx+0x1]
  43ff41:	and    al,0xf
  43ff43:	or     al,0x10
  43ff45:	mov    BYTE PTR [edx+0x1],al
  43ff48:	jmp    0x4401dc
  43ff4d:	test   eax,eax
  43ff4f:	je     0x43ff5e
  43ff51:	dec    cl
  43ff53:	shl    cl,0x4
  43ff56:	or     cl,0x2
  43ff59:	mov    BYTE PTR [edi+0x1],cl
  43ff5c:	jmp    0x43ff6b
  43ff5e:	push   esi
  43ff5f:	xor    edx,edx
  43ff61:	mov    ecx,0x86c
  43ff66:	call   0x42ee80
  43ff6b:	mov    edi,DWORD PTR ds:0x462b94
  43ff71:	jmp    0x4401dc
  43ff76:	mov    eax,DWORD PTR [edi+0x20]
  43ff79:	lea    edi,[eax+ebx*2]
  43ff7c:	mov    eax,ds:0x45f834
  43ff81:	inc    ebx
  43ff82:	movzx  ecx,WORD PTR [eax+0x1a]
  43ff86:	call   0x4243d2
  43ff8b:	mov    ecx,DWORD PTR ds:0x462b94
  43ff91:	mov    edx,DWORD PTR [ebp+0x8]
  43ff94:	sub    al,BYTE PTR [ecx+0x24]
  43ff97:	mov    BYTE PTR [edi+0x4],al
  43ff9a:	mov    cl,BYTE PTR [edx+0x4]
  43ff9d:	mov    al,BYTE PTR [edi+0x5]
  43ffa0:	sub    cl,0x4
  43ffa3:	shl    cl,0x4
  43ffa6:	and    al,0xf
  43ffa8:	or     cl,al
  43ffaa:	mov    BYTE PTR [edi+0x5],cl
  43ffad:	lea    ecx,[edx+0x5]
  43ffb0:	lea    edx,[esp+0xf]
  43ffb4:	call   0x431d7f
  43ffb9:	mov    ecx,eax
  43ffbb:	mov    DWORD PTR [esp+0x14],ecx
  43ffbf:	test   cl,0x7
  43ffc2:	je     0x43ffd5
  43ffc4:	push   esi
  43ffc5:	xor    edx,edx
  43ffc7:	mov    ecx,0x8ab
  43ffcc:	call   0x42ee80
  43ffd1:	mov    ecx,DWORD PTR [esp+0x14]
  43ffd5:	mov    al,BYTE PTR [edi+0x5]
  43ffd8:	cmp    ecx,0xfbf8
  43ffde:	jae    0x440000
  43ffe0:	and    al,0xf4
  43ffe2:	or     al,0x4
  43ffe4:	mov    BYTE PTR [edi+0x5],al
  43ffe7:	mov    edi,DWORD PTR ds:0x462b94
  43ffed:	mov    eax,DWORD PTR [edi+0x20]
  43fff0:	lea    eax,[eax+ebx*2]
  43fff3:	inc    ebx
  43fff4:	shr    ecx,0x3
  43fff7:	mov    WORD PTR [eax+0x4],cx
  43fffb:	jmp    0x4401dc
  440000:	and    al,0xf5
  440002:	or     al,0x5
  440004:	mov    BYTE PTR [edi+0x5],al
  440007:	mov    edi,DWORD PTR ds:0x462b94
  44000d:	add    ebx,0x2
  440010:	mov    eax,DWORD PTR [edi+0x20]
  440013:	mov    DWORD PTR [eax+ebx*2],ecx
  440016:	jmp    0x4401dc
  44001b:	mov    eax,DWORD PTR [edi+0x20]
  44001e:	lea    edi,[eax+ebx*2]
  440021:	mov    eax,ds:0x45f834
  440026:	inc    ebx
  440027:	movzx  ecx,WORD PTR [eax+0x1a]
  44002b:	call   0x4243d2
  440030:	mov    ecx,DWORD PTR ds:0x462b94
  440036:	mov    edx,DWORD PTR [ebp+0x8]
  440039:	sub    al,BYTE PTR [ecx+0x24]
  44003c:	mov    BYTE PTR [edi+0x4],al
  44003f:	mov    cl,BYTE PTR [edx+0x4]
  440042:	mov    al,BYTE PTR [edi+0x5]
  440045:	sub    cl,0x4
  440048:	shl    cl,0x4
  44004b:	and    al,0xf
  44004d:	or     cl,al
  44004f:	mov    BYTE PTR [edi+0x5],cl
  440052:	lea    ecx,[edx+0x5]
  440055:	lea    edx,[esp+0xf]
  440059:	call   0x431d7f
  44005e:	mov    ecx,eax
  440060:	mov    DWORD PTR [esp+0x14],ecx
  440064:	test   cl,0xf
  440067:	je     0x44007a
  440069:	push   esi
  44006a:	xor    edx,edx
  44006c:	mov    ecx,0x8ab
  440071:	call   0x42ee80
  440076:	mov    ecx,DWORD PTR [esp+0x14]
  44007a:	mov    al,BYTE PTR [edi+0x5]
  44007d:	cmp    ecx,0xfbf8
  440083:	jae    0x4400a1
  440085:	and    al,0xf8
  440087:	or     al,0x8
  440089:	mov    BYTE PTR [edi+0x5],al
  44008c:	mov    edi,DWORD PTR ds:0x462b94
  440092:	mov    eax,DWORD PTR [edi+0x20]
  440095:	lea    eax,[eax+ebx*2]
  440098:	inc    ebx
  440099:	shr    ecx,0x4
  44009c:	jmp    0x43fff7
  4400a1:	and    al,0xf9
  4400a3:	or     al,0x9
  4400a5:	jmp    0x440004
  4400aa:	mov    eax,DWORD PTR [edi+0x20]
  4400ad:	lea    esi,[eax+ebx*2]
  4400b0:	mov    eax,ds:0x45f834
  4400b5:	inc    ebx
  4400b6:	movzx  ecx,WORD PTR [eax+0x1a]
  4400ba:	call   0x4243d2
  4400bf:	mov    edi,DWORD PTR ds:0x462b94
  4400c5:	mov    edx,DWORD PTR [ebp+0x8]
  4400c8:	sub    al,BYTE PTR [edi+0x24]
  4400cb:	mov    BYTE PTR [esi+0x4],al
  4400ce:	mov    al,0xa
  4400d0:	mov    BYTE PTR [esi+0x5],al
  4400d3:	cmp    BYTE PTR [edx+0x4],0x13
  4400d7:	jne    0x4401dc
  4400dd:	and    al,0xf
  4400df:	or     al,0x10
  4400e1:	jmp    0x43fea3
  4400e6:	mov    al,BYTE PTR [edx+0x4]
  4400e9:	mov    ecx,DWORD PTR [edi+0x20]
  4400ec:	sub    al,0x4
  4400ee:	xor    al,BYTE PTR [ecx+0x3]
  4400f1:	and    al,0xf
  4400f3:	xor    BYTE PTR [ecx+0x3],al
  4400f6:	lea    ecx,[edx+0x5]
  4400f9:	lea    edx,[esp+0xf]
  4400fd:	call   0x431d7f
  440102:	mov    DWORD PTR [esp+0x10],eax
  440106:	test   al,0xf
  440108:	je     0x44011b
  44010a:	push   esi
  44010b:	xor    edx,edx
  44010d:	mov    ecx,0x8ab
  440112:	call   0x42ee80
  440117:	mov    eax,DWORD PTR [esp+0x10]
  44011b:	cmp    eax,0xf0
  440120:	jbe    0x440133
  440122:	push   esi
  440123:	xor    edx,edx
  440125:	mov    ecx,0x86c
  44012a:	call   0x42ee80
  44012f:	mov    eax,DWORD PTR [esp+0x10]
  440133:	mov    edx,DWORD PTR ds:0x462b94
  440139:	shr    eax,0x4
  44013c:	mov    ecx,DWORD PTR [edx+0x20]
  44013f:	shl    al,0x4
  440142:	mov    DWORD PTR [esp+0x10],eax
  440146:	mov    al,BYTE PTR [ecx+0x3]
  440149:	and    al,0xf
  44014b:	or     BYTE PTR [esp+0x10],al
  44014f:	mov    eax,DWORD PTR [esp+0x10]
  440153:	mov    BYTE PTR [ecx+0x3],al
  440156:	mov    eax,DWORD PTR [edx+0x20]
  440159:	lea    esi,[eax+ebx*2]
  44015c:	mov    eax,ds:0x45f834
  440161:	inc    ebx
  440162:	movzx  ecx,WORD PTR [eax+0x1a]
  440166:	call   0x4243d2
  44016b:	mov    edi,DWORD PTR ds:0x462b94
  440171:	mov    cl,BYTE PTR [esi+0x5]
  440174:	sub    al,BYTE PTR [edi+0x24]
  440177:	and    cl,0xf3
  44017a:	or     cl,0x3
  44017d:	mov    BYTE PTR [esi+0x4],al
  440180:	mov    BYTE PTR [esi+0x5],cl
  440183:	mov    eax,DWORD PTR [edi+0x20]
  440186:	mov    al,BYTE PTR [eax+0x3]
  440189:	jmp    0x43fe9b
  44018e:	mov    eax,ds:0x45f834
  440193:	movzx  ecx,WORD PTR [eax+0x1a]
  440197:	call   0x4243d2
  44019c:	mov    edi,DWORD PTR ds:0x462b94
  4401a2:	mov    DWORD PTR [edi+0x28],eax
  4401a5:	jmp    0x4401dc
  4401a7:	push   0xc
  4401a9:	pop    ecx
  4401aa:	call   0x43f42e
  4401af:	mov    edx,DWORD PTR ds:0x45f834
  4401b5:	mov    esi,eax
  4401b7:	movzx  ecx,WORD PTR [edx+0x1a]
  4401bb:	call   0x4243d2
  4401c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4401c3:	mov    DWORD PTR [esi],eax
  4401c5:	call   0x43fc1d
  4401ca:	mov    edi,DWORD PTR ds:0x462b94
  4401d0:	mov    DWORD PTR [esi+0x4],eax
  4401d3:	mov    eax,DWORD PTR [edi+0x1c]
  4401d6:	mov    DWORD PTR [esi+0x8],eax
  4401d9:	mov    DWORD PTR [edi+0x1c],esi
  4401dc:	mov    DWORD PTR [edi+0x10],ebx
  4401df:	pop    edi
  4401e0:	pop    esi
  4401e1:	pop    ebx
  4401e2:	mov    esp,ebp
  4401e4:	pop    ebp
  4401e5:	ret    0x4
  4401e8:	adc    eax,0x1d0043fd
  4401ed:	std    
  4401ee:	inc    ebx
  4401ef:	add    BYTE PTR [ebp+edi*8+0x43],cl
  4401f3:	add    BYTE PTR [ebp+edi*8+0x43],cl
  4401f7:	add    BYTE PTR ds:0x150043fd,dl
  4401fd:	std    
  4401fe:	inc    ebx
  4401ff:	add    BYTE PTR [edi-0x3],bl
  440202:	inc    ebx
  440203:	add    ah,dl
  440205:	std    
  440206:	inc    ebx
  440207:	add    BYTE PTR [ebx-0x2],ch
  44020a:	inc    ebx
  44020b:	add    BYTE PTR [ebx+0x760043fe],ch
  440211:	inc    DWORD PTR [ebx+0x0]
  440214:	sbb    eax,DWORD PTR [eax]
  440216:	inc    esp
  440217:	add    BYTE PTR [edx-0x19ffbc00],ch
  44021d:	add    BYTE PTR [eax+eax*1-0x72],al
  440221:	add    DWORD PTR [eax+eax*1-0x59],eax
  440225:	add    DWORD PTR [eax+eax*1+0x55],eax
  440229:	mov    ebp,esp
  44022b:	sub    esp,0x18
  44022e:	and    DWORD PTR [ebp-0xc],0x0
  440232:	xor    al,al
  440234:	mov    BYTE PTR [ebp-0x1],al
  440237:	mov    al,ds:0x4617e2
  44023c:	or     al,0x1
  44023e:	cmp    DWORD PTR ds:0x460e44,0x0
  440245:	mov    BYTE PTR [ebp-0x3],al
  440248:	mov    eax,ds:0x448894
  44024d:	mov    BYTE PTR [ebp-0x2],0x0
  440251:	mov    eax,DWORD PTR [eax+0x20]
  440254:	mov    ds:0x462ca8,eax
  440259:	je     0x4402a0
  44025b:	test   BYTE PTR ds:0x45f839,0xc
  440262:	je     0x440272
  440264:	push   0x0
  440266:	xor    edx,edx
  440268:	mov    ecx,0x860
  44026d:	call   0x42ee80
  440272:	mov    ecx,DWORD PTR ds:0x462cb0
  440278:	cmp    ecx,0x14
  44027b:	jl     0x44028d
  44027d:	mov    ecx,0x3ef
  440282:	call   0x42f124
  440287:	mov    ecx,DWORD PTR ds:0x462cb0
  44028d:	mov    eax,ds:0x460e44
  440292:	mov    DWORD PTR [ecx*4+0x462cb8],eax
  440299:	inc    ecx
  44029a:	mov    DWORD PTR ds:0x462cb0,ecx
  4402a0:	push   ebx
  4402a1:	push   edi
  4402a2:	mov    edi,DWORD PTR [ebp+0x8]
  4402a5:	movzx  eax,WORD PTR [edi+0x1]
  4402a9:	add    eax,edi
  4402ab:	cmp    DWORD PTR ds:0x45f834,0x0
  4402b2:	mov    DWORD PTR [ebp+0x8],eax
  4402b5:	lea    ebx,[edi+0x4]
  4402b8:	jne    0x4402d1
  4402ba:	mov    edx,ebx
  4402bc:	mov    ecx,0x7f2
  4402c1:	call   0x42f140
  4402c6:	xor    eax,eax
  4402c8:	mov    WORD PTR [edi+0x1],ax
  4402cc:	jmp    0x4407ef
  4402d1:	push   esi
  4402d2:	xor    eax,eax
  4402d4:	push   0x1
  4402d6:	mov    dl,0x1
  4402d8:	mov    ecx,ebx
  4402da:	mov    DWORD PTR [ebp-0x8],eax
  4402dd:	call   0x44586f
  4402e2:	mov    esi,eax
  4402e4:	mov    ecx,0xe00
  4402e9:	test   esi,esi
  4402eb:	je     0x44030a
  4402ed:	mov    eax,DWORD PTR [esi+0x24]
  4402f0:	mov    DWORD PTR [ebp-0x8],eax
  4402f3:	mov    ax,WORD PTR [esi+0x2c]
  4402f7:	and    ax,cx
  4402fa:	movzx  ecx,ax
  4402fd:	mov    al,BYTE PTR [esi+0x7]
  440300:	and    al,0x1
  440302:	mov    DWORD PTR [ebp-0x14],ecx
  440305:	mov    BYTE PTR [ebp-0x2],al
  440308:	jmp    0x440329
  44030a:	xor    edx,edx
  44030c:	inc    edx
  44030d:	mov    ecx,ebx
  44030f:	call   0x4458d0
  440314:	mov    esi,eax
  440316:	test   esi,esi
  440318:	jne    0x440323
  44031a:	mov    WORD PTR [edi+0x1],ax
  44031e:	jmp    0x4407ee
  440323:	mov    eax,DWORD PTR [ebp+0x8]
  440326:	mov    DWORD PTR [ebp-0x14],eax
  440329:	cmp    BYTE PTR ds:0x44e047,0x0
  440330:	je     0x440354
  440332:	cmp    BYTE PTR ds:0x44e046,0x0
  440339:	je     0x440354
  44033b:	cmp    BYTE PTR ds:0x45f692,0x0
  440342:	jne    0x440354
  440344:	test   BYTE PTR [esi+0x7],0x10
  440348:	jne    0x440354
  44034a:	push   0x2
  44034c:	pop    edx
  44034d:	mov    ecx,esi
  44034f:	call   0x44609b
  440354:	or     BYTE PTR ds:0x45f839,0x1
  44035b:	and    DWORD PTR ds:0x460e40,0x0
  440362:	push   0x10
  440364:	mov    eax,0x80
  440369:	or     WORD PTR [esi+0x2c],ax
  44036d:	pop    eax
  44036e:	mov    ds:0x460e30,eax
  440373:	mov    eax,ds:0x45f830
  440378:	mov    BYTE PTR ds:0x462ba8,0x0
  44037f:	mov    DWORD PTR [esi+0x1c],eax
  440382:	mov    eax,ds:0x45f834
  440387:	mov    DWORD PTR [esi+0x20],eax
  44038a:	mov    ax,ds:0x45f99c
  440390:	mov    WORD PTR [esi+0x3e],ax
  440394:	movzx  edi,BYTE PTR [ebx+0x4]
  440398:	mov    ds:0x45f990,ax
  44039e:	push   0x3c
  4403a0:	inc    ax
  4403a2:	add    ebx,0x5
  4403a5:	pop    ecx
  4403a6:	mov    DWORD PTR ds:0x460e44,esi
  4403ac:	mov    BYTE PTR ds:0x4617e1,0x0
  4403b3:	mov    ds:0x45f99c,ax
  4403b9:	add    edi,ebx
  4403bb:	call   0x43f42e
  4403c0:	mov    ecx,DWORD PTR ds:0x462b94
  4403c6:	mov    ebx,eax
  4403c8:	xor    edx,edx
  4403ca:	mov    DWORD PTR [ebp-0x10],ebx
  4403cd:	mov    BYTE PTR [ebx+0xc],dl
  4403d0:	test   ecx,ecx
  4403d2:	je     0x4403d7
  4403d4:	mov    DWORD PTR [ecx+0x38],ebx
  4403d7:	mov    DWORD PTR ds:0x462b94,ebx
  4403dd:	cmp    DWORD PTR ds:0x462b90,edx
  4403e3:	jne    0x4403eb
  4403e5:	mov    DWORD PTR ds:0x462b90,ebx
  4403eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4403ee:	cmp    edi,ecx
  4403f0:	jae    0x4405a5
  4403f6:	movzx  eax,BYTE PTR [edi]
  4403f9:	inc    edi
  4403fa:	sub    eax,0x5
  4403fd:	je     0x44054c
  440403:	sub    eax,0x8
  440406:	je     0x440573
  44040c:	sub    eax,0x54
  44040f:	je     0x440521
  440415:	dec    eax
  440416:	je     0x4404c1
  44041c:	sub    eax,0x1f
  44041f:	je     0x44048f
  440421:	dec    eax
  440422:	je     0x440467
  440424:	dec    eax
  440425:	jne    0x440568
  44042b:	mov    ebx,DWORD PTR [ebp+0x8]
  44042e:	mov    cl,dl
  440430:	mov    BYTE PTR ds:0x4617e1,cl
  440436:	cmp    edi,ebx
  440438:	jae    0x440452
  44043a:	mov    dl,BYTE PTR [edi]
  44043c:	cmp    dl,0xd
  44043f:	je     0x440452
  440441:	movzx  eax,cl
  440444:	inc    cl
  440446:	inc    edi
  440447:	mov    BYTE PTR [eax+0x462b98],dl
  44044d:	cmp    cl,0xf
  440450:	jb     0x440436
  440452:	or     BYTE PTR ds:0x45f839,0x4
  440459:	mov    ebx,DWORD PTR [ebp-0x10]
  44045c:	mov    BYTE PTR ds:0x4617e1,cl
  440462:	jmp    0x440565
  440467:	mov    al,BYTE PTR [ebp-0x1]
  44046a:	or     BYTE PTR [ebp-0x3],0x8
  44046e:	test   al,0x7
  440470:	je     0x44048b
  440472:	movzx  eax,BYTE PTR [esi+0x5]
  440476:	mov    edx,esi
  440478:	push   eax
  440479:	sub    edx,eax
  44047b:	mov    ecx,0x862
  440480:	call   0x42f15d
  440485:	mov    ecx,DWORD PTR [ebp+0x8]
  440488:	mov    al,BYTE PTR [ebp-0x1]
  44048b:	or     al,0x2
  44048d:	jmp    0x4404b9
  44048f:	mov    al,BYTE PTR [ebp-0x1]
  440492:	test   al,0x7
  440494:	je     0x4404af
  440496:	movzx  eax,BYTE PTR [esi+0x5]
  44049a:	mov    edx,esi
  44049c:	push   eax
  44049d:	sub    edx,eax
  44049f:	mov    ecx,0x862
  4404a4:	call   0x42f15d
  4404a9:	mov    ecx,DWORD PTR [ebp+0x8]
  4404ac:	mov    al,BYTE PTR [ebp-0x1]
  4404af:	or     BYTE PTR [ebp-0x3],0x20
  4404b3:	or     BYTE PTR [ebp-0x2],0x1
  4404b7:	or     al,0x4
  4404b9:	mov    BYTE PTR [ebp-0x1],al
  4404bc:	jmp    0x440568
  4404c1:	cmp    edi,ecx
  4404c3:	jae    0x4404f4
  4404c5:	cmp    BYTE PTR [edi],0x52
  4404c8:	jne    0x4404f4
  4404ca:	add    DWORD PTR [ebx+0x4],0x4
  4404ce:	lea    ecx,[edi+0x2]
  4404d1:	call   0x445afc
  4404d6:	mov    DWORD PTR [ebx],eax
  4404d8:	test   eax,eax
  4404da:	jne    0x4404e9
  4404dc:	lea    edx,[edi+0x2]
  4404df:	mov    ecx,0x7d6
  4404e4:	call   0x42f140
  4404e9:	movzx  eax,BYTE PTR [edi+0x6]
  4404ed:	add    edi,0x7
  4404f0:	add    edi,eax
  4404f2:	xor    edx,edx
  4404f4:	mov    eax,ds:0x45f834
  4404f9:	mov    DWORD PTR [ebx+0x24],edx
  4404fc:	mov    DWORD PTR [ebx+0x28],edx
  4404ff:	mov    DWORD PTR [ebx+0x2c],edx
  440502:	mov    DWORD PTR [ebx+0x30],edx
  440505:	mov    DWORD PTR [ebx+0x34],edx
  440508:	cmp    DWORD PTR [eax+0x3c],edx
  44050b:	jne    0x44051b
  44050d:	call   0x4440e0
  440512:	mov    ecx,DWORD PTR ds:0x45f834
  440518:	mov    DWORD PTR [ecx+0x3c],eax
  44051b:	mov    BYTE PTR [ebx+0xc],0x1
  44051f:	jmp    0x440565
  440521:	mov    al,BYTE PTR [ebp-0x1]
  440524:	test   al,0x7
  440526:	je     0x440541
  440528:	movzx  eax,BYTE PTR [esi+0x5]
  44052c:	mov    edx,esi
  44052e:	push   eax
  44052f:	sub    edx,eax
  440531:	mov    ecx,0x862
  440536:	call   0x42f15d
  44053b:	mov    ecx,DWORD PTR [ebp+0x8]
  44053e:	mov    al,BYTE PTR [ebp-0x1]
  440541:	or     al,0x1
  440543:	or     BYTE PTR [ebp-0x2],0x1
  440547:	mov    BYTE PTR [ebp-0x1],al
  44054a:	jmp    0x440568
  44054c:	movzx  eax,BYTE PTR [edi]
  44054f:	inc    eax
  440550:	push   eax
  440551:	push   edi
  440552:	push   0x462ba8
  440557:	call   0x447646
  44055c:	movzx  eax,BYTE PTR [edi]
  44055f:	inc    edi
  440560:	add    esp,0xc
  440563:	add    edi,eax
  440565:	mov    ecx,DWORD PTR [ebp+0x8]
  440568:	cmp    edi,ecx
  44056a:	jae    0x44059e
  44056c:	xor    edx,edx
  44056e:	jmp    0x4403f6
  440573:	mov    edx,DWORD PTR [ebp-0x8]
  440576:	test   edx,edx
  440578:	je     0x44058f
  44057a:	test   BYTE PTR [edx+0xe],0x80
  44057e:	je     0x44058f
  440580:	mov    edx,DWORD PTR [edx+0x14]
  440583:	push   ecx
  440584:	lea    eax,[edi-0x1]
  440587:	push   eax
  440588:	call   0x43f995
  44058d:	jmp    0x44059e
  44058f:	push   ecx
  440590:	lea    eax,[edi-0x1]
  440593:	push   eax
  440594:	xor    cl,cl
  440596:	call   0x43faa2
  44059b:	mov    DWORD PTR [esi+0x24],eax
  44059e:	mov    al,BYTE PTR [ebp-0x1]
  4405a1:	test   al,al
  4405a3:	jne    0x4405c5
  4405a5:	movzx  eax,BYTE PTR ds:0x44899e
  4405ac:	sub    eax,0x61
  4405af:	je     0x4405c1
  4405b1:	sub    eax,0x20
  4405b4:	mov    al,BYTE PTR [ebp-0x3]
  4405b7:	jne    0x4405c8
  4405b9:	or     al,0x20
  4405bb:	or     BYTE PTR [ebp-0x2],0x1
  4405bf:	jmp    0x4405c8
  4405c1:	or     BYTE PTR [ebp-0x2],0x1
  4405c5:	mov    al,BYTE PTR [ebp-0x3]
  4405c8:	mov    cx,WORD PTR [esi+0x2c]
  4405cc:	movzx  eax,al
  4405cf:	mov    edx,0xf1ff
  4405d4:	and    cx,dx
  4405d7:	or     cx,ax
  4405da:	mov    al,BYTE PTR [ebp-0x2]
  4405dd:	mov    WORD PTR [esi+0x2c],cx
  4405e1:	mov    BYTE PTR [esi+0x7],al
  4405e4:	cmp    BYTE PTR ds:0x44e047,0x0
  4405eb:	je     0x440617
  4405ed:	test   al,0x10
  4405ef:	jne    0x440617
  4405f1:	mov    ecx,DWORD PTR ds:0x448894
  4405f7:	mov    ecx,DWORD PTR [ecx+0x20]
  4405fa:	call   0x4463c0
  4405ff:	movzx  eax,WORD PTR ds:0x4631d8
  440606:	push   eax
  440607:	xor    edx,edx
  440609:	mov    ecx,esi
  44060b:	call   0x4463e1
  440610:	inc    WORD PTR ds:0x4631d8
  440617:	mov    eax,ds:0x460e54
  44061c:	test   eax,eax
  44061e:	je     0x440625
  440620:	cmp    BYTE PTR [eax],0x8b
  440623:	jne    0x440634
  440625:	mov    ecx,DWORD PTR ds:0x460e50
  44062b:	test   ecx,ecx
  44062d:	je     0x44063b
  44062f:	cmp    BYTE PTR [ecx],0x8b
  440632:	je     0x44063b
  440634:	or     BYTE PTR ds:0x45f839,0x4
  44063b:	cmp    BYTE PTR ds:0x462ba8,0x0
  440642:	je     0x4406e0
  440648:	test   eax,eax
  44064a:	jne    0x4406e0
  440650:	mov    ecx,0x203
  440655:	call   0x43f45b
  44065a:	mov    DWORD PTR [ebp-0x18],eax
  44065d:	push   ecx
  44065e:	lea    eax,[ebp+0x8]
  440661:	push   eax
  440662:	mov    edx,0x405ab4
  440667:	mov    ecx,0x462ba8
  44066c:	call   0x43c813
  440671:	mov    edi,DWORD PTR [ebp+0x8]
  440674:	and    DWORD PTR [ebp-0x10],0x0
  440678:	cmp    BYTE PTR [edi],0x0
  44067b:	jbe    0x4406cf
  44067d:	xor    ecx,ecx
  44067f:	mov    eax,DWORD PTR [edi+0x10]
  440682:	movsx  ebx,WORD PTR [eax+ecx*2]
  440686:	add    ebx,DWORD PTR [edi+0x4]
  440689:	mov    al,BYTE PTR [ebx]
  44068b:	cmp    al,0xa
  44068d:	jne    0x4406ad
  44068f:	push   0xa
  440691:	lea    ecx,[ebx+0x1]
  440694:	mov    edx,0x41f7fc
  440699:	call   0x445d5e
  44069e:	test   eax,eax
  4406a0:	jne    0x4406ab
  4406a2:	or     BYTE PTR ds:0x45f839,0x6
  4406a9:	jmp    0x4406be
  4406ab:	mov    al,BYTE PTR [ebx]
  4406ad:	movzx  eax,al
  4406b0:	push   eax
  4406b1:	lea    edx,[ebx+0x1]
  4406b4:	mov    ecx,0xfa5
  4406b9:	call   0x42f15d
  4406be:	mov    edx,DWORD PTR [ebp-0x10]
  4406c1:	movzx  eax,BYTE PTR [edi]
  4406c4:	inc    edx
  4406c5:	movsx  ecx,dx
  4406c8:	mov    DWORD PTR [ebp-0x10],edx
  4406cb:	cmp    ecx,eax
  4406cd:	jl     0x44067f
  4406cf:	mov    ecx,edi
  4406d1:	call   0x43d0d5
  4406d6:	push   DWORD PTR [ebp-0x18]
  4406d9:	call   DWORD PTR ds:0x464354
  4406df:	pop    ecx
  4406e0:	mov    eax,ds:0x460e30
  4406e5:	add    eax,0xfffffff8
  4406e8:	mov    ds:0x462cac,eax
  4406ed:	mov    eax,ds:0x460e44
  4406f2:	xor    ebx,ebx
  4406f4:	mov    DWORD PTR [eax+0x44],ebx
  4406f7:	mov    DWORD PTR ds:0x460e30,ebx
  4406fd:	cmp    DWORD PTR [esi+0x24],ebx
  440700:	jne    0x440716
  440702:	push   0x1c
  440704:	pop    ecx
  440705:	call   0x43f42e
  44070a:	mov    ecx,0x84
  44070f:	mov    DWORD PTR [esi+0x24],eax
  440712:	mov    WORD PTR [eax+0xe],cx
  440716:	mov    eax,DWORD PTR [esi+0x24]
  440719:	mov    ecx,DWORD PTR [ebp-0x8]
  44071c:	mov    DWORD PTR [eax+0x10],0x8
  440723:	test   ecx,ecx
  440725:	je     0x440736
  440727:	mov    ax,WORD PTR [ecx+0x18]
  44072b:	push   0x10
  44072d:	pop    edx
  44072e:	and    ax,dx
  440731:	movzx  eax,ax
  440734:	jmp    0x440747
  440736:	mov    eax,DWORD PTR [esi+0x24]
  440739:	movzx  eax,WORD PTR [eax+0x18]
  44073d:	test   ax,ax
  440740:	je     0x44074a
  440742:	push   0x10
  440744:	pop    edx
  440745:	and    eax,edx
  440747:	mov    DWORD PTR [ebp-0xc],eax
  44074a:	mov    eax,DWORD PTR [esi+0x24]
  44074d:	mov    edx,DWORD PTR [ebp-0xc]
  440750:	mov    WORD PTR [eax+0x18],dx
  440754:	mov    ax,WORD PTR [esi+0x3e]
  440758:	mov    ds:0x45f990,ax
  44075e:	mov    DWORD PTR ds:0x460e44,esi
  440764:	test   ecx,ecx
  440766:	je     0x4407c9
  440768:	mov    eax,DWORD PTR [esi+0x24]
  44076b:	mov    edx,0xe00
  440770:	mov    ax,WORD PTR [eax+0x18]
  440774:	and    ax,dx
  440777:	cmp    WORD PTR [ebp-0x14],ax
  44077b:	je     0x440793
  44077d:	push   ebx
  44077e:	xor    edx,edx
  440780:	mov    ecx,0x840
  440785:	call   0x42ee80
  44078a:	mov    esi,DWORD PTR ds:0x460e44
  440790:	mov    ecx,DWORD PTR [ebp-0x8]
  440793:	test   BYTE PTR [esi+0x2c],0x10
  440797:	jne    0x4407c9
  440799:	mov    ecx,DWORD PTR [ecx+0x14]
  44079c:	mov    eax,DWORD PTR [esi+0x30]
  44079f:	test   ecx,ecx
  4407a1:	je     0x4407c9
  4407a3:	test   eax,eax
  4407a5:	je     0x4407b8
  4407a7:	test   ecx,ecx
  4407a9:	je     0x4407b4
  4407ab:	mov    eax,DWORD PTR [eax+0x18]
  4407ae:	mov    ecx,DWORD PTR [ecx]
  4407b0:	test   eax,eax
  4407b2:	jne    0x4407a7
  4407b4:	test   eax,eax
  4407b6:	jne    0x4407bc
  4407b8:	test   ecx,ecx
  4407ba:	je     0x4407c9
  4407bc:	push   ebx
  4407bd:	xor    edx,edx
  4407bf:	mov    ecx,0x83f
  4407c4:	call   0x42ee80
  4407c9:	cmp    DWORD PTR ds:0x462cb0,ebx
  4407cf:	je     0x4407ee
  4407d1:	test   BYTE PTR ds:0x45f839,0xc
  4407d8:	je     0x4407e7
  4407da:	push   ebx
  4407db:	xor    edx,edx
  4407dd:	mov    ecx,0x860
  4407e2:	call   0x42ee80
  4407e7:	and    BYTE PTR ds:0x45f839,0xfe
  4407ee:	pop    esi
  4407ef:	pop    edi
  4407f0:	pop    ebx
  4407f1:	leave  
  4407f2:	ret    0x4
  4407f5:	push   esi
  4407f6:	mov    esi,ecx
  4407f8:	jmp    0x440811
  4407fa:	movzx  ecx,WORD PTR [esi+0xe]
  4407fe:	mov    al,BYTE PTR [edx+0xe]
  440801:	xor    al,cl
  440803:	test   al,0x1f
  440805:	jne    0x44083e
  440807:	and    ecx,0x1f
  44080a:	dec    ecx
  44080b:	jne    0x440817
  44080d:	mov    edx,DWORD PTR [edx]
  44080f:	mov    esi,DWORD PTR [esi]
  440811:	cmp    esi,edx
  440813:	jne    0x4407fa
  440815:	pop    esi
  440816:	ret    
  440817:	dec    ecx
  440818:	je     0x440836
  44081a:	dec    ecx
  44081b:	dec    ecx
  44081c:	je     0x440825
  44081e:	sub    ecx,0x4
  440821:	jne    0x44084c
  440823:	jmp    0x44083e
  440825:	test   BYTE PTR [esi+0xe],0x80
  440829:	je     0x44084c
  44082b:	push   0x0
  44082d:	mov    ecx,esi
  44082f:	call   0x44084e
  440834:	pop    esi
  440835:	ret    
  440836:	mov    eax,DWORD PTR [esi+0x10]
  440839:	cmp    eax,DWORD PTR [edx+0x10]
  44083c:	je     0x44084c
  44083e:	push   0x0
  440840:	xor    edx,edx
  440842:	mov    ecx,0x138d
  440847:	call   0x42ee80
  44084c:	pop    esi
  44084d:	ret    
  44084e:	push   ebp
  44084f:	mov    ebp,esp
  440851:	mov    ax,WORD PTR [ecx+0xe]
  440855:	cmp    ax,WORD PTR [edx+0xe]
  440859:	je     0x44086b
  44085b:	xor    edx,edx
  44085d:	push   0x0
  44085f:	cmp    BYTE PTR [ebp+0x8],dl
  440862:	je     0x440883
  440864:	mov    ecx,0x840
  440869:	jmp    0x440888
  44086b:	mov    ax,WORD PTR [ecx+0x18]
  44086f:	cmp    ax,WORD PTR [edx+0x18]
  440873:	je     0x44088f
  440875:	xor    edx,edx
  440877:	push   0x0
  440879:	mov    ecx,0x890
  44087e:	cmp    BYTE PTR [ebp+0x8],dl
  440881:	jne    0x440888
  440883:	mov    ecx,0x138d
  440888:	call   0x42ee80
  44088d:	jmp    0x4408f8
  44088f:	push   ebx
  440890:	mov    bl,BYTE PTR [ebp+0x8]
  440893:	push   esi
  440894:	mov    esi,DWORD PTR [edx+0x14]
  440897:	push   edi
  440898:	mov    edi,DWORD PTR [ecx+0x14]
  44089b:	test   edi,edi
  44089d:	je     0x4408da
  44089f:	test   esi,esi
  4408a1:	je     0x4408d6
  4408a3:	test   esi,esi
  4408a5:	je     0x4408d6
  4408a7:	test   bl,bl
  4408a9:	je     0x4408c3
  4408ab:	mov    eax,DWORD PTR [edi+0x4]
  4408ae:	cmp    eax,DWORD PTR [esi+0x4]
  4408b1:	je     0x4408ce
  4408b3:	push   0x0
  4408b5:	xor    edx,edx
  4408b7:	mov    ecx,0x83f
  4408bc:	call   0x42ee80
  4408c1:	jmp    0x4408ce
  4408c3:	mov    edx,DWORD PTR [esi+0x4]
  4408c6:	mov    ecx,DWORD PTR [edi+0x4]
  4408c9:	call   0x4407f5
  4408ce:	mov    edi,DWORD PTR [edi]
  4408d0:	mov    esi,DWORD PTR [esi]
  4408d2:	test   edi,edi
  4408d4:	jne    0x4408a3
  4408d6:	test   edi,edi
  4408d8:	jne    0x4408de
  4408da:	test   esi,esi
  4408dc:	je     0x4408f5
  4408de:	xor    edx,edx
  4408e0:	push   0x0
  4408e2:	mov    ecx,0x83f
  4408e7:	test   bl,bl
  4408e9:	jne    0x4408f0
  4408eb:	mov    ecx,0x138d
  4408f0:	call   0x42ee80
  4408f5:	pop    edi
  4408f6:	pop    esi
  4408f7:	pop    ebx
  4408f8:	pop    ebp
  4408f9:	ret    0x4
  4408fc:	push   ebp
  4408fd:	mov    ebp,esp
  4408ff:	sub    esp,0x10
  440902:	push   ebx
  440903:	push   esi
  440904:	mov    ebx,edx
  440906:	mov    esi,ecx
  440908:	mov    DWORD PTR [ebx],0x449418
  44090e:	cmp    BYTE PTR [esi],0xd
  440911:	push   edi
  440912:	mov    DWORD PTR [ebp-0x10],ebx
  440915:	jne    0x44098e
  440917:	movzx  eax,BYTE PTR [esi+0x5]
  44091b:	cmp    BYTE PTR [eax+esi*1+0x5],0x0
  440920:	jne    0x44098e
  440922:	inc    esi
  440923:	mov    dl,0xc
  440925:	mov    ecx,esi
  440927:	call   0x445847
  44092c:	mov    ecx,eax
  44092e:	test   ecx,ecx
  440930:	jne    0x44094c
  440932:	mov    edx,esi
  440934:	mov    ecx,0x7d6
  440939:	call   0x42f140
  44093e:	movzx  eax,BYTE PTR [esi+0x4]
  440942:	add    eax,0x6
  440945:	add    eax,esi
  440947:	jmp    0x440ab0
  44094c:	movzx  edi,BYTE PTR [esi+0x4]
  440950:	add    edi,esi
  440952:	mov    esi,DWORD PTR [ecx+0x18]
  440955:	mov    DWORD PTR [ebx],esi
  440957:	mov    cl,BYTE PTR [esi+0xe]
  44095a:	and    cl,0x84
  44095d:	cmp    cl,0x84
  440960:	je     0x440978
  440962:	push   0x0
  440964:	xor    edx,edx
  440966:	mov    ecx,0x87f
  44096b:	call   0x42ee80
  440970:	lea    eax,[edi+0x6]
  440973:	jmp    0x440ab0
  440978:	mov    edx,DWORD PTR [ebp+0x8]
  44097b:	test   edx,edx
  44097d:	je     0x440970
  44097f:	cmp    esi,edx
  440981:	je     0x440970
  440983:	push   0x1
  440985:	mov    ecx,esi
  440987:	call   0x44084e
  44098c:	jmp    0x440970
  44098e:	mov    ebx,DWORD PTR [ebp+0x8]
  440991:	xor    ecx,ecx
  440993:	mov    DWORD PTR [ebp-0x4],ecx
  440996:	test   ebx,ebx
  440998:	je     0x4409ba
  44099a:	movzx  eax,WORD PTR [ebx+0xe]
  44099e:	mov    edi,ebx
  4409a0:	mov    DWORD PTR [ebp+0x8],edi
  4409a3:	test   al,0x4
  4409a5:	jne    0x4409d3
  4409a7:	test   al,al
  4409a9:	jns    0x4409d3
  4409ab:	push   ecx
  4409ac:	xor    edx,edx
  4409ae:	mov    ecx,0x7d5
  4409b3:	call   0x42ee80
  4409b8:	jmp    0x4409d0
  4409ba:	push   0x1c
  4409bc:	pop    ecx
  4409bd:	call   0x43f42e
  4409c2:	mov    edi,eax
  4409c4:	mov    eax,0x84
  4409c9:	mov    DWORD PTR [ebp+0x8],edi
  4409cc:	mov    WORD PTR [edi+0xe],ax
  4409d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4409d3:	lea    eax,[edi+0x14]
  4409d6:	mov    DWORD PTR [ebp-0x8],eax
  4409d9:	mov    al,BYTE PTR [esi]
  4409db:	test   al,al
  4409dd:	je     0x440a9d
  4409e3:	mov    edi,DWORD PTR [ebp-0x8]
  4409e6:	movzx  eax,al
  4409e9:	inc    esi
  4409ea:	cmp    eax,0xd
  4409ed:	je     0x440ab7
  4409f3:	cmp    eax,0x52
  4409f6:	jne    0x440a90
  4409fc:	test   ebx,ebx
  4409fe:	jne    0x440a22
  440a00:	push   0x8
  440a02:	pop    ecx
  440a03:	call   0x43f42e
  440a08:	mov    DWORD PTR [edi],eax
  440a0a:	mov    edi,eax
  440a0c:	mov    ecx,esi
  440a0e:	lea    eax,[edi+0x4]
  440a11:	mov    edx,eax
  440a13:	mov    DWORD PTR [ebp-0x8],eax
  440a16:	call   0x444bcc
  440a1b:	mov    ecx,DWORD PTR [ebp-0x8]
  440a1e:	mov    esi,eax
  440a20:	jmp    0x440a45
  440a22:	mov    eax,DWORD PTR [edi]
  440a24:	lea    edx,[ebp-0xc]
  440a27:	mov    ecx,esi
  440a29:	mov    DWORD PTR [ebp-0x8],eax
  440a2c:	mov    edi,eax
  440a2e:	call   0x444bcc
  440a33:	mov    ecx,edi
  440a35:	mov    esi,eax
  440a37:	test   ecx,ecx
  440a39:	je     0x440a7f
  440a3b:	mov    eax,DWORD PTR [ebp-0xc]
  440a3e:	add    ecx,0x4
  440a41:	cmp    eax,DWORD PTR [ecx]
  440a43:	jne    0x440a7f
  440a45:	mov    eax,DWORD PTR [ecx]
  440a47:	movzx  eax,WORD PTR [eax+0xe]
  440a4b:	test   al,0x10
  440a4d:	je     0x440a8d
  440a4f:	test   al,0x20
  440a51:	jne    0x440a61
  440a53:	push   0x0
  440a55:	xor    edx,edx
  440a57:	mov    ecx,0x893
  440a5c:	call   0x42ee80
  440a61:	cmp    BYTE PTR [esi],0x0
  440a64:	je     0x440a74
  440a66:	push   0x0
  440a68:	xor    edx,edx
  440a6a:	mov    ecx,0x851
  440a6f:	call   0x42ee80
  440a74:	mov    ecx,DWORD PTR [ebp-0x4]
  440a77:	or     ecx,0x10
  440a7a:	mov    DWORD PTR [ebp-0x4],ecx
  440a7d:	jmp    0x440a90
  440a7f:	push   0x0
  440a81:	xor    edx,edx
  440a83:	mov    ecx,0x83f
  440a88:	call   0x42ee80
  440a8d:	mov    ecx,DWORD PTR [ebp-0x4]
  440a90:	mov    al,BYTE PTR [esi]
  440a92:	test   al,al
  440a94:	jne    0x4409e6
  440a9a:	mov    edi,DWORD PTR [ebp+0x8]
  440a9d:	mov    eax,DWORD PTR [ebp-0x10]
  440aa0:	mov    DWORD PTR [edi+0x10],0x8
  440aa7:	mov    WORD PTR [edi+0x18],cx
  440aab:	mov    DWORD PTR [eax],edi
  440aad:	lea    eax,[esi+0x1]
  440ab0:	pop    edi
  440ab1:	pop    esi
  440ab2:	pop    ebx
  440ab3:	leave  
  440ab4:	ret    0x4
  440ab7:	movzx  eax,BYTE PTR [esi+0x4]
  440abb:	add    esi,0x5
  440abe:	add    esi,eax
  440ac0:	jmp    0x440a90
  440ac2:	push   ebp
  440ac3:	mov    ebp,esp
  440ac5:	push   ebx
  440ac6:	push   esi
  440ac7:	push   edi
  440ac8:	mov    edi,DWORD PTR [ebp+0x8]
  440acb:	xor    ebx,ebx
  440acd:	add    edi,0x4
  440ad0:	inc    ebx
  440ad1:	push   0x0
  440ad3:	mov    dl,bl
  440ad5:	mov    ecx,edi
  440ad7:	call   0x44586f
  440adc:	test   eax,eax
  440ade:	je     0x440b0c
  440ae0:	movzx  ecx,BYTE PTR [edi+0x4]
  440ae4:	lea    esi,[eax+0x24]
  440ae7:	add    ecx,0x6
  440aea:	mov    eax,DWORD PTR [esi]
  440aec:	add    ecx,edi
  440aee:	movzx  edx,WORD PTR [eax+0xe]
  440af2:	test   dl,0x4
  440af5:	je     0x440b01
  440af7:	test   dl,dl
  440af9:	jns    0x440b01
  440afb:	push   eax
  440afc:	lea    edx,[ebp+0x8]
  440aff:	jmp    0x440b05
  440b01:	push   0x0
  440b03:	mov    edx,esi
  440b05:	call   0x4408fc
  440b0a:	jmp    0x440b78
  440b0c:	mov    edx,ebx
  440b0e:	mov    ecx,edi
  440b10:	call   0x4458d0
  440b15:	mov    esi,eax
  440b17:	test   esi,esi
  440b19:	je     0x440b78
  440b1b:	movzx  ecx,BYTE PTR [edi+0x4]
  440b1f:	add    ecx,0x6
  440b22:	push   0x0
  440b24:	add    ecx,edi
  440b26:	lea    edx,[esi+0x24]
  440b29:	call   0x4408fc
  440b2e:	or     BYTE PTR [esi+0x7],0x3
  440b32:	and    DWORD PTR [esi+0x20],0x0
  440b36:	mov    dl,0x1
  440b38:	mov    ecx,esi
  440b3a:	call   0x444f9e
  440b3f:	cmp    BYTE PTR ds:0x44e047,0x0
  440b46:	je     0x440b68
  440b48:	cmp    BYTE PTR ds:0x44e046,0x0
  440b4f:	je     0x440b68
  440b51:	cmp    BYTE PTR ds:0x45f692,0x0
  440b58:	jne    0x440b68
  440b5a:	test   BYTE PTR [esi+0x7],0x10
  440b5e:	jne    0x440b68
  440b60:	xor    edx,edx
  440b62:	inc    edx
  440b63:	call   0x44609b
  440b68:	mov    eax,DWORD PTR [esi+0x24]
  440b6b:	test   BYTE PTR [eax+0xe],0x4
  440b6f:	je     0x440b78
  440b71:	xor    eax,eax
  440b73:	inc    eax
  440b74:	or     WORD PTR [esi+0x2c],ax
  440b78:	pop    edi
  440b79:	pop    esi
  440b7a:	pop    ebx
  440b7b:	pop    ebp
  440b7c:	ret    0x4
  440b7f:	push   ebp
  440b80:	mov    ebp,esp
  440b82:	mov    ecx,DWORD PTR ds:0x460e44
  440b88:	test   ecx,ecx
  440b8a:	je     0x440bb8
  440b8c:	mov    eax,ds:0x462cb0
  440b91:	cmp    eax,0x14
  440b94:	jl     0x440bab
  440b96:	mov    ecx,0x3ef
  440b9b:	call   0x42f124
  440ba0:	mov    ecx,DWORD PTR ds:0x460e44
  440ba6:	mov    eax,ds:0x462cb0
  440bab:	mov    DWORD PTR [eax*4+0x462cb8],ecx
  440bb2:	inc    eax
  440bb3:	mov    ds:0x462cb0,eax
  440bb8:	mov    ecx,DWORD PTR [ebp+0x8]
  440bbb:	push   ebx
  440bbc:	push   esi
  440bbd:	lea    ecx,[ecx+0x4]
  440bc0:	call   0x445afc
  440bc5:	mov    bl,BYTE PTR ds:0x45f692
  440bcb:	mov    esi,eax
  440bcd:	cmp    bl,0x2
  440bd0:	jne    0x440bda
  440bd2:	test   esi,esi
  440bd4:	je     0x440c62
  440bda:	mov    eax,ds:0x45f82c
  440bdf:	sub    DWORD PTR [esi+0x1c],eax
  440be2:	mov    DWORD PTR [esi+0x38],eax
  440be5:	mov    ax,WORD PTR [esi+0x3e]
  440be9:	mov    ds:0x45f990,ax
  440bef:	mov    eax,0x100
  440bf4:	mov    DWORD PTR ds:0x460e44,esi
  440bfa:	test   WORD PTR [esi+0x2c],ax
  440bfe:	je     0x440c07
  440c00:	mov    ecx,esi
  440c02:	call   0x444639
  440c07:	cmp    bl,0x2
  440c0a:	jne    0x440c5c
  440c0c:	mov    ecx,esi
  440c0e:	call   0x423a2a
  440c13:	call   0x423971
  440c18:	mov    ecx,DWORD PTR ds:0x45f834
  440c1e:	test   ecx,ecx
  440c20:	je     0x440c5c
  440c22:	cmp    DWORD PTR ds:0x462b88,0x0
  440c29:	je     0x440c5c
  440c2b:	mov    eax,ds:0x462b94
  440c30:	mov    DWORD PTR [eax+0x30],esi
  440c33:	movzx  ecx,WORD PTR [ecx+0x1a]
  440c37:	call   0x4243d2
  440c3c:	mov    ecx,DWORD PTR ds:0x462b94
  440c42:	mov    DWORD PTR [ecx+0x24],eax
  440c45:	mov    eax,ds:0x462b88
  440c4a:	movzx  ecx,WORD PTR [eax+0x1a]
  440c4e:	call   0x4243d2
  440c53:	mov    ecx,DWORD PTR ds:0x462b94
  440c59:	mov    DWORD PTR [ecx+0x2c],eax
  440c5c:	pop    esi
  440c5d:	pop    ebx
  440c5e:	pop    ebp
  440c5f:	ret    0x4
  440c62:	push   0x0
  440c64:	xor    edx,edx
  440c66:	mov    ecx,0x7f2
  440c6b:	call   0x42ee80
  440c70:	call   0x42c81b
  440c75:	int3   
  440c76:	push   ebp
  440c77:	mov    ebp,esp
  440c79:	mov    ecx,DWORD PTR [ebp+0x8]
  440c7c:	xor    edx,edx
  440c7e:	test   BYTE PTR ds:0x45f839,0x1
  440c85:	movzx  eax,WORD PTR [ecx+0x1]
  440c89:	mov    WORD PTR [ecx+0x1],dx
  440c8d:	jne    0x440c9c
  440c8f:	push   edx
  440c90:	mov    ecx,0x7dc
  440c95:	call   0x42ee80
  440c9a:	jmp    0x440caa
  440c9c:	add    eax,ecx
  440c9e:	push   eax
  440c9f:	lea    eax,[ecx+0x3]
  440ca2:	push   eax
  440ca3:	mov    cl,0x1
  440ca5:	call   0x43faa2
  440caa:	pop    ebp
  440cab:	ret    0x4
  440cae:	push   ebp
  440caf:	mov    ebp,esp
  440cb1:	push   ecx
  440cb2:	cmp    BYTE PTR ds:0x44f551,0x0
  440cb9:	push   ebx
  440cba:	mov    ebx,DWORD PTR [ebp+0xc]
  440cbd:	push   esi
  440cbe:	push   edi
  440cbf:	mov    edi,DWORD PTR ds:0x462cac
  440cc5:	mov    esi,ecx
  440cc7:	je     0x440cdc
  440cc9:	mov    ecx,0x41f808
  440cce:	test   ebx,ebx
  440cd0:	jne    0x440cd7
  440cd2:	mov    ecx,0x41f834
  440cd7:	call   0x441ddb
  440cdc:	mov    DWORD PTR ds:0x44e4ec,esi
  440ce2:	mov    esi,DWORD PTR ds:0x460e44
  440ce8:	mov    BYTE PTR ds:0x44e4e8,0x3d
  440cef:	mov    BYTE PTR ds:0x44e4eb,0xd
  440cf6:	mov    WORD PTR ds:0x44e4f0,0x500
  440cff:	movzx  ecx,BYTE PTR [esi+0x5]
  440d03:	push   ecx
  440d04:	mov    eax,esi
  440d06:	sub    eax,ecx
  440d08:	push   eax
  440d09:	push   0x44e4f3
  440d0e:	call   0x447646
  440d13:	movzx  ecx,BYTE PTR [esi+0x5]
  440d17:	add    ecx,0x44e4f3
  440d1d:	mov    DWORD PTR [ebp+0xc],0x2000
  440d24:	mov    BYTE PTR [ecx],0x2c
  440d27:	movzx  edx,WORD PTR [esi+0x2c]
  440d2b:	mov    eax,edx
  440d2d:	and    eax,0xe00
  440d32:	or     ax,WORD PTR [ebp+0xc]
  440d36:	add    esp,0xc
  440d39:	shr    ax,0x9
  440d3d:	test   BYTE PTR [esi+0x7],0x1
  440d41:	movzx  eax,ax
  440d44:	jne    0x440d49
  440d46:	or     eax,0x40
  440d49:	test   dl,0x20
  440d4c:	je     0x440d53
  440d4e:	or     eax,0x80
  440d53:	cmp    BYTE PTR [ebp+0x10],0x0
  440d57:	je     0x440d5e
  440d59:	or     eax,0x100
  440d5e:	push   0x10
  440d60:	mov    BYTE PTR [ecx+0x1],0x30
  440d64:	movzx  edx,ax
  440d67:	push   0x0
  440d69:	add    ecx,0x2
  440d6c:	call   0x42ea92
  440d71:	mov    WORD PTR [eax],0x2c48
  440d76:	add    eax,0x2
  440d79:	test   edi,edi
  440d7b:	jns    0x440d83
  440d7d:	mov    BYTE PTR [eax],0x2d
  440d80:	inc    eax
  440d81:	neg    edi
  440d83:	push   0x10
  440d85:	push   0x0
  440d87:	lea    ecx,[eax+0x1]
  440d8a:	mov    edx,edi
  440d8c:	mov    BYTE PTR [eax],0x30
  440d8f:	call   0x42ea92
  440d94:	mov    edx,DWORD PTR [ebp+0x8]
  440d97:	mov    WORD PTR [eax],0x2c48
  440d9c:	add    eax,0x2
  440d9f:	test   edx,edx
  440da1:	jns    0x440da9
  440da3:	mov    BYTE PTR [eax],0x2d
  440da6:	inc    eax
  440da7:	neg    edx
  440da9:	push   0x10
  440dab:	push   0x0
  440dad:	lea    ecx,[eax+0x1]
  440db0:	mov    BYTE PTR [eax],0x30
  440db3:	call   0x42ea92
  440db8:	mov    edi,eax
  440dba:	mov    DWORD PTR [edi],0x3c3c2c48
  440dc0:	add    edi,0x4
  440dc3:	test   ebx,ebx
  440dc5:	mov    bl,BYTE PTR ds:0x4617e1
  440dcb:	jne    0x440e09
  440dcd:	mov    bh,bl
  440dcf:	mov    eax,0x462b98
  440dd4:	test   bh,bh
  440dd6:	jmp    0x440e02
  440dd8:	movzx  eax,BYTE PTR [eax]
  440ddb:	mov    esi,DWORD PTR [eax*4+0x406258]
  440de2:	movsx  eax,BYTE PTR [esi]
  440de5:	push   eax
  440de6:	lea    eax,[esi+0x1]
  440de9:	push   eax
  440dea:	push   edi
  440deb:	call   0x447646
  440df0:	movzx  eax,BYTE PTR [esi]
  440df3:	add    edi,eax
  440df5:	mov    eax,DWORD PTR [ebp+0x10]
  440df8:	add    esp,0xc
  440dfb:	mov    BYTE PTR [edi],0x2c
  440dfe:	inc    edi
  440dff:	inc    eax
  440e00:	dec    bh
  440e02:	mov    DWORD PTR [ebp+0x10],eax
  440e05:	jne    0x440dd8
  440e07:	jmp    0x440e46
  440e09:	movzx  eax,bl
  440e0c:	lea    eax,[eax+0x462b97]
  440e12:	jmp    0x440e3c
  440e14:	movzx  eax,BYTE PTR [eax]
  440e17:	mov    esi,DWORD PTR [eax*4+0x406258]
  440e1e:	movsx  eax,BYTE PTR [esi]
  440e21:	push   eax
  440e22:	lea    eax,[esi+0x1]
  440e25:	push   eax
  440e26:	push   edi
  440e27:	call   0x447646
  440e2c:	movzx  eax,BYTE PTR [esi]
  440e2f:	add    edi,eax
  440e31:	mov    eax,DWORD PTR [ebp+0x10]
  440e34:	add    esp,0xc
  440e37:	mov    BYTE PTR [edi],0x2c
  440e3a:	inc    edi
  440e3b:	dec    eax
  440e3c:	mov    DWORD PTR [ebp+0x10],eax
  440e3f:	cmp    eax,0x462b98
  440e44:	jae    0x440e14
  440e46:	test   bl,bl
  440e48:	jne    0x440e4b
  440e4a:	inc    edi
  440e4b:	mov    DWORD PTR [edi-0x1],0x3c2c3e3e
  440e52:	mov    al,ds:0x462ba8
  440e57:	add    edi,0x3
  440e5a:	test   al,al
  440e5c:	je     0x440e79
  440e5e:	movzx  eax,al
  440e61:	push   eax
  440e62:	push   0x462ba9
  440e67:	push   edi
  440e68:	call   0x447646
  440e6d:	movzx  eax,BYTE PTR ds:0x462ba8
  440e74:	add    esp,0xc
  440e77:	add    edi,eax
  440e79:	mov    BYTE PTR [edi],0x3e
  440e7c:	inc    edi
  440e7d:	mov    eax,edi
  440e7f:	sub    eax,0x44e4f3
  440e84:	cmp    eax,0xff
  440e89:	jbe    0x440e9b
  440e8b:	push   0x0
  440e8d:	xor    edx,edx
  440e8f:	mov    ecx,0x84f
  440e94:	call   0x42ee80
  440e99:	jmp    0x440ebf
  440e9b:	movzx  ecx,BYTE PTR ds:0x44e4e8
  440ea2:	mov    ds:0x44e4f2,al
  440ea7:	mov    eax,0x44e4e8
  440eac:	sub    di,ax
  440eaf:	push   eax
  440eb0:	mov    eax,ds:0x448988
  440eb5:	mov    WORD PTR ds:0x44e4e9,di
  440ebc:	call   DWORD PTR [eax+ecx*4]
  440ebf:	pop    edi
  440ec0:	pop    esi
  440ec1:	pop    ebx
  440ec2:	leave  
  440ec3:	ret    0xc
  440ec6:	push   ebp
  440ec7:	mov    ebp,esp
  440ec9:	sub    esp,0x24
  440ecc:	push   ebx
  440ecd:	push   esi
  440ece:	mov    esi,ecx
  440ed0:	push   edi
  440ed1:	movzx  ecx,WORD PTR [esi+0x1]
  440ed5:	mov    DWORD PTR [ebp-0x8],esi
  440ed8:	call   0x43f45b
  440edd:	movzx  edx,WORD PTR [esi+0x1]
  440ee1:	push   edx
  440ee2:	mov    ebx,eax
  440ee4:	push   esi
  440ee5:	push   ebx
  440ee6:	call   0x447646
  440eeb:	add    esp,0xc
  440eee:	mov    BYTE PTR [ebp-0x18],0x58
  440ef2:	push   0x7
  440ef4:	pop    eax
  440ef5:	mov    WORD PTR [ebp-0x17],ax
  440ef9:	mov    eax,ds:0x448894
  440efe:	mov    eax,DWORD PTR [eax+0x20]
  440f01:	mov    DWORD PTR [ebp-0xc],eax
  440f04:	call   0x438545
  440f09:	mov    eax,ds:0x460620
  440f0e:	mov    ecx,DWORD PTR ds:0x462ca8
  440f14:	mov    edx,DWORD PTR ds:0x448884
  440f1a:	mov    DWORD PTR [ebp-0x10],eax
  440f1d:	mov    eax,ds:0x448894
  440f22:	mov    DWORD PTR [ebp-0x15],ecx
  440f25:	mov    DWORD PTR [eax+0x20],ecx
  440f28:	mov    eax,ds:0x45f9b4
  440f2d:	lea    ecx,[ebp-0x18]
  440f30:	mov    eax,DWORD PTR [eax]
  440f32:	mov    ds:0x460620,eax
  440f37:	call   0x43f399
  440f3c:	mov    ecx,DWORD PTR ds:0x460e54
  440f42:	and    BYTE PTR ds:0x45f839,0xea
  440f49:	and    DWORD PTR ds:0x460e30,0xfffffff8
  440f50:	test   ecx,ecx
  440f52:	je     0x441039
  440f58:	cmp    BYTE PTR [ecx],0x8b
  440f5b:	je     0x441097
  440f61:	inc    ecx
  440f62:	call   0x445afc
  440f67:	mov    esi,eax
  440f69:	test   esi,esi
  440f6b:	je     0x441029
  440f71:	cmp    BYTE PTR [esi+0x6],0x5
  440f75:	jne    0x441029
  440f7b:	xor    eax,eax
  440f7d:	mov    ecx,0x45fac8
  440f82:	cmp    WORD PTR ds:0x45fac8,ax
  440f89:	je     0x440f93
  440f8b:	add    ecx,0x10
  440f8e:	cmp    WORD PTR [ecx],ax
  440f91:	jne    0x440f8b
  440f93:	call   0x43435b
  440f98:	mov    ecx,DWORD PTR ds:0x460e30
  440f9e:	push   0x0
  440fa0:	neg    ecx
  440fa2:	push   0x0
  440fa4:	push   ecx
  440fa5:	mov    ecx,esi
  440fa7:	mov    edi,eax
  440fa9:	call   0x440cae
  440fae:	mov    ecx,DWORD PTR ds:0x45fab4
  440fb4:	xor    esi,esi
  440fb6:	test   ecx,ecx
  440fb8:	je     0x440fe8
  440fba:	mov    edx,ecx
  440fbc:	lea    esi,[edx+0x1]
  440fbf:	mov    al,BYTE PTR [edx]
  440fc1:	inc    edx
  440fc2:	test   al,al
  440fc4:	jne    0x440fbf
  440fc6:	lea    eax,[ebp-0x1]
  440fc9:	sub    edx,esi
  440fcb:	push   eax
  440fcc:	call   0x442fd5
  440fd1:	push   DWORD PTR ds:0x45fab4
  440fd7:	movzx  esi,ax
  440fda:	call   DWORD PTR ds:0x464354
  440fe0:	and    DWORD PTR ds:0x45fab4,0x0
  440fe7:	pop    ecx
  440fe8:	mov    ecx,edi
  440fea:	call   0x4343d8
  440fef:	test   si,si
  440ff2:	je     0x441097
  440ff8:	add    esi,DWORD PTR ds:0x460e30
  440ffe:	test   si,si
  441001:	je     0x441097
  441007:	mov    eax,ds:0x460e44
  44100c:	mov    ecx,DWORD PTR [eax+0x30]
  44100f:	jmp    0x441023
  441011:	mov    edx,DWORD PTR [ecx+0x20]
  441014:	test   edx,edx
  441016:	jns    0x441020
  441018:	movsx  eax,si
  44101b:	sub    edx,eax
  44101d:	mov    DWORD PTR [ecx+0x20],edx
  441020:	mov    ecx,DWORD PTR [ecx+0x18]
  441023:	test   ecx,ecx
  441025:	jne    0x441011
  441027:	jmp    0x441097
  441029:	push   0x0
  44102b:	xor    edx,edx
  44102d:	mov    ecx,0x848
  441032:	call   0x42ee80
  441037:	jmp    0x441097
  441039:	xor    ecx,ecx
  44103b:	inc    ecx
  44103c:	call   0x4385bf
  441041:	mov    eax,ds:0x462b94
  441046:	cmp    BYTE PTR [eax+0xc],0x0
  44104a:	jne    0x441090
  44104c:	test   BYTE PTR ds:0x45f839,0x2
  441053:	je     0x441069
  441055:	mov    eax,ds:0x460e30
  44105a:	mov    ecx,0x406234
  44105f:	mov    ds:0x448f22,eax
  441064:	call   0x441366
  441069:	movzx  esi,BYTE PTR ds:0x4617e1
  441070:	mov    edi,0x462b98
  441075:	jmp    0x44108b
  441077:	movzx  eax,BYTE PTR [edi]
  44107a:	mov    ecx,0x4062fc
  44107f:	mov    ds:0x448f54,eax
  441084:	call   0x441366
  441089:	dec    esi
  44108a:	inc    edi
  44108b:	test   si,si
  44108e:	jne    0x441077
  441090:	xor    ecx,ecx
  441092:	call   0x4385bf
  441097:	movzx  eax,WORD PTR [ebx+0x1]
  44109b:	or     BYTE PTR ds:0x45f839,0x8
  4410a2:	push   eax
  4410a3:	push   ebx
  4410a4:	push   DWORD PTR [ebp-0x8]
  4410a7:	call   0x447646
  4410ac:	add    esp,0xc
  4410af:	push   ebx
  4410b0:	call   DWORD PTR ds:0x464354
  4410b6:	mov    edx,DWORD PTR ds:0x448884
  4410bc:	pop    ecx
  4410bd:	push   0xb
  4410bf:	pop    eax
  4410c0:	mov    WORD PTR [ebp-0x23],ax
  4410c4:	mov    eax,ds:0x460e44
  4410c9:	mov    DWORD PTR [ebp-0x21],eax
  4410cc:	mov    eax,ds:0x45f830
  4410d1:	lea    ecx,[ebp-0x24]
  4410d4:	mov    BYTE PTR [ebp-0x24],0x5c
  4410d8:	mov    DWORD PTR [ebp-0x1d],eax
  4410db:	call   0x43f399
  4410e0:	mov    eax,ds:0x448894
  4410e5:	mov    ecx,DWORD PTR [ebp-0xc]
  4410e8:	mov    edx,DWORD PTR ds:0x448884
  4410ee:	mov    DWORD PTR [eax+0x20],ecx
  4410f1:	mov    DWORD PTR [ebp-0x15],ecx
  4410f4:	lea    ecx,[ebp-0x18]
  4410f7:	call   0x43f399
  4410fc:	mov    eax,DWORD PTR [ebp-0x10]
  4410ff:	pop    edi
  441100:	pop    esi
  441101:	mov    ds:0x460620,eax
  441106:	pop    ebx
  441107:	leave  
  441108:	ret    
  441109:	push   ebp
  44110a:	mov    ebp,esp
  44110c:	mov    eax,ds:0x462b94
  441111:	sub    esp,0xc
  441114:	cmp    BYTE PTR [eax+0xc],0x0
  441118:	push   ebx
  441119:	push   edi
  44111a:	mov    bl,dl
  44111c:	mov    di,cx
  44111f:	jne    0x4412c5
  441125:	test   bl,bl
  441127:	jne    0x441130
  441129:	mov    eax,ds:0x45f9b4
  44112e:	inc    DWORD PTR [eax]
  441130:	call   0x438545
  441135:	test   bl,bl
  441137:	jne    0x441140
  441139:	mov    eax,ds:0x45f9b4
  44113e:	dec    DWORD PTR [eax]
  441140:	mov    edx,DWORD PTR ds:0x448884
  441146:	push   esi
  441147:	push   0x7
  441149:	pop    eax
  44114a:	mov    WORD PTR [ebp-0xb],ax
  44114e:	mov    eax,ds:0x448894
  441153:	lea    ecx,[ebp-0xc]
  441156:	mov    eax,DWORD PTR [eax+0x20]
  441159:	mov    BYTE PTR [ebp-0xc],0x58
  44115d:	mov    DWORD PTR [ebp-0x9],eax
  441160:	call   0x43f399
  441165:	mov    al,ds:0x45f839
  44116a:	mov    ecx,DWORD PTR ds:0x460e50
  441170:	mov    bh,al
  441172:	and    al,0xf3
  441174:	mov    ds:0x45f839,al
  441179:	test   ecx,ecx
  44117b:	je     0x44122f
  441181:	cmp    BYTE PTR [ecx],0x8b
  441184:	jne    0x4411b2
  441186:	xor    ecx,ecx
  441188:	inc    ecx
  441189:	call   0x4385bf
  44118e:	xor    eax,eax
  441190:	mov    ds:0x448f83,ax
  441196:	test   bl,bl
  441198:	jne    0x441292
  44119e:	cmp    di,0x5b
  4411a2:	jne    0x44127d
  4411a8:	mov    ecx,0x448f30
  4411ad:	jmp    0x44128d
  4411b2:	inc    ecx
  4411b3:	call   0x445afc
  4411b8:	mov    DWORD PTR [ebp-0x4],eax
  4411bb:	test   eax,eax
  4411bd:	je     0x441218
  4411bf:	cmp    BYTE PTR [eax+0x6],0x4
  4411c3:	jne    0x441218
  4411c5:	cmp    WORD PTR ds:0x45fac8,0x0
  4411cd:	mov    ecx,0x45fac8
  4411d2:	je     0x4411de
  4411d4:	xor    eax,eax
  4411d6:	add    ecx,0x10
  4411d9:	cmp    WORD PTR [ecx],ax
  4411dc:	jne    0x4411d6
  4411de:	call   0x43435b
  4411e3:	test   di,di
  4411e6:	setne  cl
  4411e9:	movzx  ecx,cl
  4411ec:	push   ecx
  4411ed:	mov    ecx,DWORD PTR ds:0x460e30
  4411f3:	neg    ecx
  4411f5:	push   0x1
  4411f7:	push   ecx
  4411f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4411fb:	mov    esi,eax
  4411fd:	call   0x440cae
  441202:	mov    ecx,esi
  441204:	call   0x4343d8
  441209:	mov    eax,ds:0x44f538
  44120e:	mov    ds:0x460e38,eax
  441213:	jmp    0x441299
  441218:	push   0x0
  44121a:	xor    edx,edx
  44121c:	mov    ecx,0x849
  441221:	call   0x42ee80
  441226:	xor    eax,eax
  441228:	mov    ds:0x4605bf,al
  44122d:	jmp    0x441299
  44122f:	xor    ecx,ecx
  441231:	inc    ecx
  441232:	call   0x4385bf
  441237:	movzx  eax,BYTE PTR ds:0x4617e1
  44123e:	lea    esi,[eax+0x462b97]
  441244:	jmp    0x441259
  441246:	movzx  eax,BYTE PTR [esi]
  441249:	mov    ecx,0x4062a4
  44124e:	mov    ds:0x448f5c,eax
  441253:	call   0x441366
  441258:	dec    esi
  441259:	cmp    esi,0x462b98
  44125f:	jae    0x441246
  441261:	test   BYTE PTR ds:0x45f839,0x2
  441268:	je     0x44118e
  44126e:	mov    ecx,0x405bb4
  441273:	call   0x441366
  441278:	jmp    0x44118e
  44127d:	mov    ecx,0x448f38
  441282:	cmp    di,0x5c
  441286:	je     0x44128d
  441288:	mov    ecx,0x448f70
  44128d:	call   0x4412c9
  441292:	xor    ecx,ecx
  441294:	call   0x4385bf
  441299:	mov    BYTE PTR ds:0x45f839,bh
  44129f:	pop    esi
  4412a0:	test   bl,bl
  4412a2:	jne    0x4412c5
  4412a4:	mov    eax,ds:0x448894
  4412a9:	mov    edx,DWORD PTR ds:0x448884
  4412af:	mov    eax,DWORD PTR [eax+0x20]
  4412b2:	inc    eax
  4412b3:	lea    ecx,[ebp-0xc]
  4412b6:	mov    DWORD PTR [ebp-0x9],eax
  4412b9:	call   0x43f399
  4412be:	mov    BYTE PTR ds:0x4605bf,0x1
  4412c5:	pop    edi
  4412c6:	pop    ebx
  4412c7:	leave  
  4412c8:	ret    
  4412c9:	push   ebp
  4412ca:	mov    ebp,esp
  4412cc:	sub    esp,0x40
  4412cf:	mov    eax,ds:0x448858
  4412d4:	xor    eax,ebp
  4412d6:	mov    DWORD PTR [ebp-0x4],eax
  4412d9:	mov    ax,WORD PTR [ecx]
  4412dc:	mov    dl,0x54
  4412de:	mov    WORD PTR [ebp-0x3d],ax
  4412e2:	mov    BYTE PTR [ebp-0x40],dl
  4412e5:	mov    BYTE PTR [ebp-0x3b],0x0
  4412e9:	lea    eax,[ebp-0x3a]
  4412ec:	cmp    ecx,0x448f40
  4412f2:	jbe    0x441333
  4412f4:	cmp    ecx,0x448f58
  4412fa:	jbe    0x441322
  4412fc:	push   esi
  4412fd:	mov    esi,DWORD PTR [ecx+0x4]
  441300:	movzx  eax,BYTE PTR [esi]
  441303:	push   eax
  441304:	lea    eax,[esi+0x1]
  441307:	push   eax
  441308:	lea    eax,[ebp-0x3a]
  44130b:	push   eax
  44130c:	call   0x447646
  441311:	movzx  eax,BYTE PTR [esi]
  441314:	mov    dl,BYTE PTR [ebp-0x40]
  441317:	add    esp,0xc
  44131a:	lea    esi,[ebp-0x3a]
  44131d:	add    eax,esi
  44131f:	pop    esi
  441320:	jmp    0x441333
  441322:	mov    al,BYTE PTR [ecx+0x4]
  441325:	mov    BYTE PTR [ebp-0x39],al
  441328:	mov    BYTE PTR [ebp-0x3a],0x3
  44132c:	mov    BYTE PTR [ebp-0x38],0x1
  441330:	lea    eax,[ebp-0x37]
  441333:	lea    ecx,[ebp-0x40]
  441336:	sub    ax,cx
  441339:	mov    WORD PTR [ebp-0x3f],ax
  44133d:	lea    eax,[ebp-0x40]
  441340:	movzx  ecx,dl
  441343:	push   eax
  441344:	mov    eax,ds:0x448988
  441349:	call   DWORD PTR [eax+ecx*4]
  44134c:	mov    edx,DWORD PTR ds:0x448884
  441352:	lea    ecx,[ebp-0x40]
  441355:	call   0x43f399
  44135a:	mov    ecx,DWORD PTR [ebp-0x4]
  44135d:	xor    ecx,ebp
  44135f:	call   0x446dc7
  441364:	leave  
  441365:	ret    
  441366:	push   esi
  441367:	mov    esi,ecx
  441369:	jmp    0x44138d
  44136b:	test   al,al
  44136d:	jns    0x441378
  44136f:	cmp    DWORD PTR ds:0x460e30,0x0
  441376:	je     0x44138c
  441378:	movzx  eax,al
  44137b:	and    eax,0xffffff7f
  441380:	lea    ecx,[eax*8+0x448f28]
  441387:	call   0x4412c9
  44138c:	inc    esi
  44138d:	mov    al,BYTE PTR [esi]
  44138f:	cmp    al,0xa
  441391:	jne    0x44136b
  441393:	pop    esi
  441394:	ret    
  441395:	push   ebp
  441396:	mov    ebp,esp
  441398:	sub    esp,0x10
  44139b:	cmp    BYTE PTR ds:0x45f692,0x0
  4413a2:	jne    0x4413ab
  4413a4:	mov    cl,0x28
  4413a6:	call   0x43859a
  4413ab:	push   ebx
  4413ac:	push   esi
  4413ad:	mov    esi,DWORD PTR [ebp+0x8]
  4413b0:	push   edi
  4413b1:	lea    ecx,[esi+0x4]
  4413b4:	call   0x445afc
  4413b9:	mov    edi,eax
  4413bb:	test   edi,edi
  4413bd:	je     0x4418cc
  4413c3:	cmp    DWORD PTR ds:0x460e44,edi
  4413c9:	jne    0x4418cc
  4413cf:	mov    ecx,DWORD PTR [edi+0x20]
  4413d2:	cmp    ecx,DWORD PTR ds:0x45f834
  4413d8:	jne    0x4418cc
  4413de:	mov    esi,DWORD PTR [edi+0x30]
  4413e1:	jmp    0x44140e
  4413e3:	test   BYTE PTR [esi+0x7],0x40
  4413e7:	jne    0x44140b
  4413e9:	cmp    BYTE PTR ds:0x45f692,0x2
  4413f0:	jne    0x44140b
  4413f2:	cmp    BYTE PTR [esi+0x6],0x9
  4413f6:	jne    0x44140b
  4413f8:	movzx  eax,BYTE PTR [esi+0x5]
  4413fc:	mov    edx,esi
  4413fe:	push   eax
  4413ff:	sub    edx,eax
  441401:	mov    ecx,0x1774
  441406:	call   0x42f15d
  44140b:	mov    esi,DWORD PTR [esi+0x18]
  44140e:	test   esi,esi
  441410:	jne    0x4413e3
  441412:	xor    ebx,ebx
  441414:	cmp    BYTE PTR ds:0x45f692,bl
  44141a:	jne    0x441458
  44141c:	mov    ax,ds:0x45f830
  441422:	sub    ax,WORD PTR [edi+0x1c]
  441426:	mov    WORD PTR [edi+0x3c],ax
  44142a:	mov    eax,ds:0x462b94
  44142f:	test   eax,eax
  441431:	je     0x441863
  441437:	cmp    BYTE PTR [eax+0x15],bl
  44143a:	je     0x441863
  441440:	push   ebx
  441441:	xor    edx,edx
  441443:	mov    ecx,0xfbd
  441448:	call   0x42ee80
  44144d:	mov    esi,DWORD PTR ds:0x462b94
  441453:	mov    BYTE PTR [esi+0x15],bl
  441456:	jmp    0x441473
  441458:	mov    ecx,DWORD PTR ds:0x45f82c
  44145e:	mov    esi,DWORD PTR ds:0x462b94
  441464:	test   ecx,ecx
  441466:	je     0x441473
  441468:	mov    ax,WORD PTR [edi+0x38]
  44146c:	sub    ax,cx
  44146f:	add    WORD PTR [edi+0x3c],ax
  441473:	cmp    BYTE PTR ds:0x45f692,0x2
  44147a:	jne    0x441835
  441480:	test   esi,esi
  441482:	je     0x441800
  441488:	cmp    BYTE PTR [esi+0xc],bl
  44148b:	je     0x441800
  441491:	cmp    DWORD PTR ds:0x462b88,ebx
  441497:	je     0x441800
  44149d:	mov    eax,ds:0x45f834
  4414a2:	cmp    DWORD PTR [eax+0x3c],ebx
  4414a5:	je     0x441800
  4414ab:	cmp    DWORD PTR [esi+0x20],ebx
  4414ae:	jne    0x441522
  4414b0:	movzx  eax,BYTE PTR [edi+0x5]
  4414b4:	sub    edi,eax
  4414b6:	push   eax
  4414b7:	mov    edx,edi
  4414b9:	mov    ecx,0xfb9
  4414be:	call   0x42f15d
  4414c3:	mov    esi,DWORD PTR ds:0x462b94
  4414c9:	mov    eax,DWORD PTR [esi+0x18]
  4414cc:	test   eax,eax
  4414ce:	jle    0x4414d9
  4414d0:	add    eax,0x2
  4414d3:	cdq    
  4414d4:	sub    eax,edx
  4414d6:	and    eax,0xfffffffe
  4414d9:	mov    ecx,DWORD PTR [esi+0x8]
  4414dc:	inc    ecx
  4414dd:	add    eax,ecx
  4414df:	mov    ecx,DWORD PTR [esi+0x4]
  4414e2:	cdq    
  4414e3:	sub    eax,edx
  4414e5:	sar    eax,1
  4414e7:	lea    ecx,[ecx+eax*4]
  4414ea:	add    ecx,0x7
  4414ed:	and    ecx,0xfffffffc
  4414f0:	mov    DWORD PTR [esi+0x4],ecx
  4414f3:	call   0x43f45b
  4414f8:	mov    esi,DWORD PTR ds:0x462b94
  4414fe:	push   DWORD PTR [esi+0x4]
  441501:	mov    DWORD PTR [esi+0x20],eax
  441504:	push   ebx
  441505:	push   eax
  441506:	call   0x44764c
  44150b:	mov    ecx,DWORD PTR [esi+0x20]
  44150e:	add    esp,0xc
  441511:	mov    al,BYTE PTR [ecx]
  441513:	and    al,0xf9
  441515:	or     al,0x1
  441517:	mov    BYTE PTR [ecx],al
  441519:	mov    ecx,DWORD PTR [esi+0x20]
  44151c:	mov    al,BYTE PTR [esi+0x8]
  44151f:	mov    BYTE PTR [ecx+0x2],al
  441522:	cmp    DWORD PTR [esi],ebx
  441524:	je     0x441531
  441526:	mov    ecx,DWORD PTR [esi+0x20]
  441529:	mov    al,BYTE PTR [ecx]
  44152b:	and    al,0x7
  44152d:	or     al,0x18
  44152f:	mov    BYTE PTR [ecx],al
  441531:	mov    eax,DWORD PTR [esi+0x28]
  441534:	sub    eax,DWORD PTR [esi+0x24]
  441537:	cmp    eax,0xff
  44153c:	jbe    0x441551
  44153e:	push   ebx
  44153f:	xor    edx,edx
  441541:	mov    ecx,0x8c7
  441546:	call   0x42ee80
  44154b:	mov    esi,DWORD PTR ds:0x462b94
  441551:	mov    cl,BYTE PTR [esi+0x28]
  441554:	sub    cl,BYTE PTR [esi+0x24]
  441557:	mov    eax,DWORD PTR [esi+0x20]
  44155a:	mov    BYTE PTR [eax+0x1],cl
  44155d:	mov    ecx,DWORD PTR [esi+0x30]
  441560:	test   ecx,ecx
  441562:	je     0x441573
  441564:	mov    eax,DWORD PTR [esi+0x20]
  441567:	movzx  eax,BYTE PTR [eax+0x1]
  44156b:	cmp    DWORD PTR [ecx+0x28],eax
  44156e:	jae    0x441573
  441570:	mov    DWORD PTR [ecx+0x28],eax
  441573:	mov    eax,ds:0x45f834
  441578:	movzx  ecx,WORD PTR [eax+0x1a]
  44157c:	call   0x4243d2
  441581:	mov    esi,DWORD PTR ds:0x462b94
  441587:	mov    edi,DWORD PTR [esi+0x1c]
  44158a:	mov    ebx,DWORD PTR [esi+0x10]
  44158d:	mov    DWORD PTR [esi+0x28],eax
  441590:	mov    DWORD PTR [ebp-0xc],ebx
  441593:	test   edi,edi
  441595:	je     0x441717
  44159b:	mov    ecx,0x7fffffff
  4415a0:	xor    edx,edx
  4415a2:	mov    DWORD PTR [ebp-0x8],ecx
  4415a5:	mov    DWORD PTR [ebp+0x8],edx
  4415a8:	mov    DWORD PTR [ebp-0x10],0x1
  4415af:	mov    eax,DWORD PTR [esi+0x28]
  4415b2:	sub    eax,DWORD PTR [edi]
  4415b4:	cmp    eax,0xfff
  4415b9:	jbe    0x4415d9
  4415bb:	push   0x0
  4415bd:	xor    edx,edx
  4415bf:	mov    ecx,0xfc0
  4415c4:	call   0x42ee80
  4415c9:	and    DWORD PTR [ebp-0x10],0x0
  4415cd:	mov    esi,DWORD PTR ds:0x462b94
  4415d3:	mov    edx,DWORD PTR [ebp+0x8]
  4415d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4415d9:	cmp    ecx,DWORD PTR [edi+0x4]
  4415dc:	jb     0x4415e4
  4415de:	mov    ecx,DWORD PTR [edi+0x4]
  4415e1:	mov    DWORD PTR [ebp-0x8],ecx
  4415e4:	mov    edi,DWORD PTR [edi+0x8]
  4415e7:	inc    edx
  4415e8:	mov    DWORD PTR [ebp+0x8],edx
  4415eb:	test   edi,edi
  4415ed:	jne    0x4415af
  4415ef:	mov    ecx,DWORD PTR [esi+0x1c]
  4415f2:	and    DWORD PTR [ebp-0x4],edi
  4415f5:	test   ecx,ecx
  4415f7:	je     0x44161c
  4415f9:	mov    ebx,DWORD PTR [ebp-0x4]
  4415fc:	mov    edi,DWORD PTR [ebp-0x8]
  4415ff:	mov    eax,DWORD PTR [ecx]
  441601:	add    eax,edi
  441603:	cmp    eax,DWORD PTR [esi+0x28]
  441606:	jne    0x44160b
  441608:	xor    ebx,ebx
  44160a:	inc    ebx
  44160b:	mov    ecx,DWORD PTR [ecx+0x8]
  44160e:	test   ecx,ecx
  441610:	jne    0x4415ff
  441612:	mov    DWORD PTR [ebp-0x4],ebx
  441615:	test   ebx,ebx
  441617:	mov    ebx,DWORD PTR [ebp-0xc]
  44161a:	jne    0x441620
  44161c:	inc    edx
  44161d:	mov    DWORD PTR [ebp+0x8],edx
  441620:	test   dl,0x1
  441623:	je     0x44163f
  441625:	mov    ecx,DWORD PTR [esi+0x20]
  441628:	mov    WORD PTR [ebp+0x8],0x600
  44162e:	mov    ax,WORD PTR [ebp+0x8]
  441632:	mov    WORD PTR [ecx+ebx*2+0x4],ax
  441637:	inc    ebx
  441638:	inc    edx
  441639:	mov    DWORD PTR [ebp-0xc],ebx
  44163c:	mov    DWORD PTR [ebp+0x8],edx
  44163f:	mov    eax,DWORD PTR [esi+0x8]
  441642:	inc    edx
  441643:	add    eax,edx
  441645:	cdq    
  441646:	sub    eax,edx
  441648:	mov    edi,eax
  44164a:	and    edi,0xfffffffe
  44164d:	cmp    edi,0xff
  441653:	jle    0x44166d
  441655:	push   0x0
  441657:	xor    edx,edx
  441659:	mov    ecx,0xfbf
  44165e:	call   0x42ee80
  441663:	mov    esi,DWORD PTR ds:0x462b94
  441669:	xor    eax,eax
  44166b:	jmp    0x441670
  44166d:	mov    eax,DWORD PTR [ebp-0x10]
  441670:	test   eax,eax
  441672:	je     0x441717
  441678:	mov    ecx,DWORD PTR [esi+0x20]
  44167b:	mov    al,BYTE PTR [ecx]
  44167d:	and    al,0xfa
  44167f:	or     al,0x2
  441681:	mov    BYTE PTR [ecx],al
  441683:	mov    eax,DWORD PTR [esi+0x20]
  441686:	mov    ecx,DWORD PTR [ebp+0x8]
  441689:	add    BYTE PTR [eax+0x2],cl
  44168c:	cmp    DWORD PTR [esi],0x0
  44168f:	je     0x44169a
  441691:	mov    DWORD PTR [esi+0x4],0x4
  441698:	jmp    0x44169e
  44169a:	and    DWORD PTR [esi+0x4],0x0
  44169e:	mov    eax,DWORD PTR [esi+0x4]
  4416a1:	mov    edx,DWORD PTR [esi+0x1c]
  4416a4:	lea    eax,[eax+edi*2]
  4416a7:	add    eax,0x7
  4416aa:	and    eax,0xfffffffc
  4416ad:	mov    DWORD PTR [esi+0x4],eax
  4416b0:	mov    eax,DWORD PTR [ebp-0x4]
  4416b3:	test   eax,eax
  4416b5:	je     0x4416ba
  4416b7:	mov    edx,DWORD PTR [edx+0x8]
  4416ba:	test   edx,edx
  4416bc:	je     0x4416f3
  4416be:	lea    edi,[ebx*2+0x4]
  4416c5:	mov    ecx,DWORD PTR [esi+0x28]
  4416c8:	sub    ecx,DWORD PTR [edx]
  4416ca:	mov    eax,ecx
  4416cc:	shr    eax,0x8
  4416cf:	shl    al,0x4
  4416d2:	or     al,0x6
  4416d4:	mov    BYTE PTR [ebp+0x8],cl
  4416d7:	mov    ecx,DWORD PTR [esi+0x20]
  4416da:	mov    BYTE PTR [ebp+0x9],al
  4416dd:	mov    ax,WORD PTR [ebp+0x8]
  4416e1:	mov    WORD PTR [edi+ecx*1],ax
  4416e5:	mov    edx,DWORD PTR [edx+0x8]
  4416e8:	inc    ebx
  4416e9:	lea    edi,[edi+0x2]
  4416ec:	test   edx,edx
  4416ee:	jne    0x4416c5
  4416f0:	mov    eax,DWORD PTR [ebp-0x4]
  4416f3:	mov    ecx,DWORD PTR [esi+0x20]
  4416f6:	cmp    eax,0x1
  4416f9:	sete   al
  4416fc:	shl    al,0x4
  4416ff:	or     al,0x6
  441701:	mov    BYTE PTR [ebp+0x9],al
  441704:	mov    eax,DWORD PTR [ebp-0x8]
  441707:	mov    BYTE PTR [ebp+0x8],al
  44170a:	mov    ax,WORD PTR [ebp+0x8]
  44170e:	mov    WORD PTR [ecx+ebx*2+0x4],ax
  441713:	inc    ebx
  441714:	mov    DWORD PTR [ebp-0xc],ebx
  441717:	test   ebx,ebx
  441719:	je     0x4417d0
  44171f:	lea    edi,[ebx-0x1]
  441722:	mov    eax,edi
  441724:	cdq    
  441725:	sub    eax,edx
  441727:	sar    eax,1
  441729:	js     0x441761
  44172b:	lea    ecx,[ebx+ebx*1]
  44172e:	push   0x4
  441730:	inc    eax
  441731:	pop    edi
  441732:	mov    DWORD PTR [ebp-0x10],ecx
  441735:	mov    DWORD PTR [ebp+0x8],eax
  441738:	mov    ebx,ecx
  44173a:	dec    DWORD PTR [ebp+0x8]
  44173d:	mov    edx,DWORD PTR [esi+0x20]
  441740:	lea    ebx,[ebx-0x2]
  441743:	mov    cx,WORD PTR [edi+edx*1]
  441747:	mov    ax,WORD PTR [ebx+edx*1+0x4]
  44174c:	mov    WORD PTR [ebx+edx*1+0x4],cx
  441751:	mov    ecx,DWORD PTR [esi+0x20]
  441754:	mov    WORD PTR [edi+ecx*1],ax
  441758:	lea    edi,[edi+0x2]
  44175b:	jne    0x44173a
  44175d:	mov    edi,DWORD PTR [ebp-0xc]
  441760:	dec    edi
  441761:	test   edi,edi
  441763:	js     0x4417d0
  441765:	lea    edx,[edi*2+0x4]
  44176c:	mov    ebx,DWORD PTR [esi+0x20]
  44176f:	mov    cl,BYTE PTR [ebx+edi*2+0x5]
  441773:	mov    al,cl
  441775:	and    al,0xf
  441777:	cmp    al,0x1
  441779:	jne    0x441786
  44177b:	test   cl,0xf0
  44177e:	mov    cx,WORD PTR [edx+ebx*1]
  441782:	je     0x4417b5
  441784:	jmp    0x44179a
  441786:	cmp    al,0x4
  441788:	je     0x4417b1
  44178a:	cmp    al,0x8
  44178c:	je     0x4417b1
  44178e:	cmp    al,0x5
  441790:	je     0x441796
  441792:	cmp    al,0x9
  441794:	jne    0x4417ca
  441796:	mov    cx,WORD PTR [edx+ebx*1]
  44179a:	mov    ax,WORD PTR [ebx+edi*2]
  44179e:	mov    WORD PTR [ebx+edi*2],cx
  4417a2:	mov    ecx,DWORD PTR [esi+0x20]
  4417a5:	sub    edi,0x2
  4417a8:	mov    WORD PTR [edx+ecx*1],ax
  4417ac:	sub    edx,0x4
  4417af:	jmp    0x4417ca
  4417b1:	mov    cx,WORD PTR [edx+ebx*1]
  4417b5:	mov    ax,WORD PTR [ebx+edi*2+0x2]
  4417ba:	mov    WORD PTR [ebx+edi*2+0x2],cx
  4417bf:	mov    ecx,DWORD PTR [esi+0x20]
  4417c2:	dec    edi
  4417c3:	mov    WORD PTR [edx+ecx*1],ax
  4417c7:	sub    edx,0x2
  4417ca:	sub    edx,0x2
  4417cd:	dec    edi
  4417ce:	jns    0x44176c
  4417d0:	lea    edx,[esi+0x24]
  4417d3:	xor    ebx,ebx
  4417d5:	mov    eax,DWORD PTR [edx]
  4417d7:	sub    DWORD PTR [esi+0x28],eax
  4417da:	mov    DWORD PTR [edx],ebx
  4417dc:	cmp    DWORD PTR [esi+0x20],ebx
  4417df:	je     0x4417fd
  4417e1:	cmp    DWORD PTR [esi+0x4],ebx
  4417e4:	je     0x4417fd
  4417e6:	push   DWORD PTR [esi+0x4]
  4417e9:	push   DWORD PTR [esi+0x20]
  4417ec:	push   DWORD PTR [esi]
  4417ee:	push   ecx
  4417ef:	mov    ecx,DWORD PTR [esi+0x30]
  4417f2:	call   0x422f47
  4417f7:	mov    esi,DWORD PTR ds:0x462b94
  4417fd:	mov    DWORD PTR [esi+0x10],ebx
  441800:	cmp    BYTE PTR [esi+0xc],0x0
  441804:	je     0x441819
  441806:	cmp    BYTE PTR [esi+0x14],0x0
  44180a:	jne    0x441819
  44180c:	push   ebx
  44180d:	xor    edx,edx
  44180f:	mov    ecx,0x8ac
  441814:	call   0x42ee80
  441819:	mov    eax,ds:0x462b90
  44181e:	push   eax
  44181f:	mov    esi,DWORD PTR [eax+0x38]
  441822:	mov    DWORD PTR ds:0x462b90,esi
  441828:	mov    DWORD PTR ds:0x462b94,esi
  44182e:	call   DWORD PTR ds:0x464354
  441834:	pop    ecx
  441835:	cmp    BYTE PTR ds:0x45f692,0x1
  44183c:	jne    0x441863
  44183e:	test   esi,esi
  441840:	je     0x441863
  441842:	cmp    BYTE PTR [esi+0xc],0x0
  441846:	je     0x441863
  441848:	cmp    DWORD PTR ds:0x462b88,0x0
  44184f:	je     0x441863
  441851:	mov    eax,ds:0x45f834
  441856:	cmp    DWORD PTR [eax+0x3c],ebx
  441859:	je     0x441863
  44185b:	mov    eax,DWORD PTR [esi+0x38]
  44185e:	mov    ds:0x462b94,eax
  441863:	mov    ecx,DWORD PTR ds:0x462cb0
  441869:	test   ecx,ecx
  44186b:	jle    0x44189e
  44186d:	dec    ecx
  44186e:	mov    DWORD PTR ds:0x462cb0,ecx
  441874:	mov    ecx,DWORD PTR [ecx*4+0x462cb8]
  44187b:	mov    DWORD PTR ds:0x460e44,ecx
  441881:	mov    ax,WORD PTR [ecx+0x3e]
  441885:	mov    ds:0x45f990,ax
  44188b:	mov    eax,DWORD PTR [ecx+0x30]
  44188e:	jmp    0x441898
  441890:	mov    ds:0x460e40,eax
  441895:	mov    eax,DWORD PTR [eax+0x18]
  441898:	test   eax,eax
  44189a:	jne    0x441890
  44189c:	jmp    0x4418ac
  44189e:	xor    eax,eax
  4418a0:	mov    DWORD PTR ds:0x460e44,ebx
  4418a6:	mov    ds:0x45f990,ax
  4418ac:	mov    al,ds:0x45f839
  4418b1:	and    al,0x1c
  4418b3:	cmp    al,0x8
  4418b5:	jne    0x4418c4
  4418b7:	push   ebx
  4418b8:	xor    edx,edx
  4418ba:	mov    ecx,0x1771
  4418bf:	call   0x42ee80
  4418c4:	mov    BYTE PTR ds:0x45f839,bl
  4418ca:	jmp    0x4418df
  4418cc:	lea    edx,[esi+0x4]
  4418cf:	mov    ecx,0x3f2
  4418d4:	call   0x42f140
  4418d9:	xor    eax,eax
  4418db:	mov    WORD PTR [esi+0x1],ax
  4418df:	pop    edi
  4418e0:	pop    esi
  4418e1:	pop    ebx
  4418e2:	leave  
  4418e3:	ret    0x4
  4418e6:	push   ebp
  4418e7:	mov    ebp,esp
  4418e9:	mov    edx,DWORD PTR [ebp+0x8]
  4418ec:	mov    eax,ds:0x45f82c
  4418f1:	sub    DWORD PTR [edx+0x7],eax
  4418f4:	mov    eax,DWORD PTR [edx+0x3]
  4418f7:	mov    ecx,DWORD PTR [edx+0x7]
  4418fa:	sub    ecx,DWORD PTR [eax+0x1c]
  4418fd:	mov    DWORD PTR [eax+0x28],ecx
  441900:	pop    ebp
  441901:	ret    0x4
  441904:	push   ebp
  441905:	mov    ebp,esp
  441907:	push   ecx
  441908:	push   ecx
  441909:	mov    eax,DWORD PTR [ebp+0x8]
  44190c:	push   ebx
  44190d:	movzx  ebx,WORD PTR [eax+0x1]
  441911:	push   esi
  441912:	add    ebx,eax
  441914:	lea    esi,[eax+0x3]
  441917:	mov    DWORD PTR [ebp-0x4],ebx
  44191a:	cmp    esi,ebx
  44191c:	jae    0x441aff
  441922:	push   edi
  441923:	movzx  eax,BYTE PTR [esi]
  441926:	xor    ecx,ecx
  441928:	inc    esi
  441929:	cmp    eax,0x87
  44192e:	jg     0x441a63
  441934:	je     0x441a58
  44193a:	sub    eax,0x28
  44193d:	je     0x441a4b
  441943:	sub    eax,0x54
  441946:	je     0x441990
  441948:	dec    eax
  441949:	je     0x441984
  44194b:	sub    eax,0x7
  44194e:	je     0x441978
  441950:	dec    eax
  441951:	je     0x44196d
  441953:	dec    eax
  441954:	jne    0x441afe
  44195a:	mov    BYTE PTR ds:0x44899d,0x1
  441961:	mov    BYTE PTR ds:0x460e4f,0x1
  441968:	jmp    0x441ae4
  44196d:	mov    BYTE PTR ds:0x460e4e,cl
  441973:	jmp    0x441ae4
  441978:	mov    BYTE PTR ds:0x460e4e,0x1
  44197f:	jmp    0x441ae4
  441984:	mov    edi,0x460e50
  441989:	mov    edx,0x4493a4
  44198e:	jmp    0x44199a
  441990:	mov    edi,0x460e54
  441995:	mov    edx,0x4493b4
  44199a:	cmp    BYTE PTR [esi],0x8b
  44199d:	jne    0x4419d9
  44199f:	cmp    DWORD PTR [edi],0x0
  4419a2:	je     0x4419c7
  4419a4:	push   0x1
  4419a6:	push   DWORD PTR [edi]
  4419a8:	call   DWORD PTR ds:0x4643e8
  4419ae:	mov    ebx,eax
  4419b0:	pop    ecx
  4419b1:	pop    ecx
  4419b2:	test   ebx,ebx
  4419b4:	jne    0x4419c0
  4419b6:	mov    ecx,0x3ec
  4419bb:	call   0x42f124
  4419c0:	mov    DWORD PTR [edi],ebx
  4419c2:	mov    ebx,DWORD PTR [ebp-0x4]
  4419c5:	jmp    0x4419d1
  4419c7:	xor    ecx,ecx
  4419c9:	inc    ecx
  4419ca:	call   0x43f45b
  4419cf:	mov    DWORD PTR [edi],eax
  4419d1:	mov    ecx,DWORD PTR [edi]
  4419d3:	mov    al,BYTE PTR [esi]
  4419d5:	mov    BYTE PTR [ecx],al
  4419d7:	jmp    0x441a52
  4419d9:	inc    esi
  4419da:	lea    ecx,[esi+0x4]
  4419dd:	mov    al,BYTE PTR [ecx]
  4419df:	add    al,0x5
  4419e1:	cmp    BYTE PTR ds:0x45f692,0x0
  4419e8:	mov    BYTE PTR [ebp+0xb],al
  4419eb:	jne    0x441a46
  4419ed:	movzx  ebx,al
  4419f0:	lea    eax,[ebx-0x4]
  4419f3:	push   eax
  4419f4:	call   0x445d5e
  4419f9:	test   eax,eax
  4419fb:	je     0x441aed
  441a01:	inc    ebx
  441a02:	cmp    DWORD PTR [edi],0x0
  441a05:	je     0x441a28
  441a07:	push   ebx
  441a08:	push   DWORD PTR [edi]
  441a0a:	call   DWORD PTR ds:0x4643e8
  441a10:	pop    ecx
  441a11:	pop    ecx
  441a12:	mov    DWORD PTR [ebp-0x8],eax
  441a15:	test   eax,eax
  441a17:	jne    0x441a2f
  441a19:	mov    ecx,0x3ec
  441a1e:	call   0x42f124
  441a23:	mov    eax,DWORD PTR [ebp-0x8]
  441a26:	jmp    0x441a2f
  441a28:	mov    ecx,ebx
  441a2a:	call   0x43f42e
  441a2f:	mov    DWORD PTR [edi],eax
  441a31:	push   ebx
  441a32:	lea    eax,[esi-0x1]
  441a35:	push   eax
  441a36:	push   DWORD PTR [edi]
  441a38:	call   0x447646
  441a3d:	mov    al,BYTE PTR [ebp+0xb]
  441a40:	mov    ebx,DWORD PTR [ebp-0x4]
  441a43:	add    esp,0xc
  441a46:	movzx  eax,al
  441a49:	jmp    0x441ab2
  441a4b:	mov    al,BYTE PTR [esi]
  441a4d:	mov    ds:0x44899e,al
  441a52:	inc    esi
  441a53:	jmp    0x441ae4
  441a58:	mov    BYTE PTR ds:0x44899d,cl
  441a5e:	jmp    0x441961
  441a63:	sub    eax,0x88
  441a68:	je     0x441add
  441a6a:	dec    eax
  441a6b:	je     0x441ad5
  441a6d:	dec    eax
  441a6e:	je     0x441ab6
  441a70:	sub    eax,0x3
  441a73:	je     0x441a9a
  441a75:	dec    eax
  441a76:	jne    0x441afe
  441a7c:	mov    al,BYTE PTR [esi]
  441a7e:	inc    esi
  441a7f:	mov    BYTE PTR ds:0x44886b,cl
  441a85:	test   al,al
  441a87:	je     0x441a92
  441a89:	mov    BYTE PTR ds:0x44886a,0x1
  441a90:	jmp    0x441ae4
  441a92:	mov    BYTE PTR ds:0x44886a,cl
  441a98:	jmp    0x441ae4
  441a9a:	cmp    BYTE PTR ds:0x45f692,0x0
  441aa1:	jne    0x441aab
  441aa3:	lea    ecx,[esi+0x1]
  441aa6:	call   0x434ce5
  441aab:	movzx  eax,WORD PTR [esi+0x1]
  441aaf:	add    esi,0x2
  441ab2:	add    esi,eax
  441ab4:	jmp    0x441ae4
  441ab6:	movzx  eax,BYTE PTR [esi]
  441ab9:	inc    esi
  441aba:	sub    eax,0x8b
  441abf:	je     0x441acc
  441ac1:	dec    eax
  441ac2:	jne    0x441afe
  441ac4:	mov    BYTE PTR ds:0x460e4c,cl
  441aca:	jmp    0x441ae4
  441acc:	mov    BYTE PTR ds:0x460e4c,0xff
  441ad3:	jmp    0x441ae4
  441ad5:	mov    BYTE PTR ds:0x460e4d,cl
  441adb:	jmp    0x441ae4
  441add:	mov    BYTE PTR ds:0x460e4d,0x1
  441ae4:	cmp    esi,ebx
  441ae6:	jae    0x441afe
  441ae8:	jmp    0x441923
  441aed:	cmp    DWORD PTR [edi],0x0
  441af0:	je     0x441afe
  441af2:	push   DWORD PTR [edi]
  441af4:	call   DWORD PTR ds:0x464354
  441afa:	and    DWORD PTR [edi],0x0
  441afd:	pop    ecx
  441afe:	pop    edi
  441aff:	pop    esi
  441b00:	pop    ebx
  441b01:	leave  
  441b02:	ret    0x4
  441b05:	push   ebp
  441b06:	mov    ebp,esp
  441b08:	push   ecx
  441b09:	mov    al,cl
  441b0b:	cmp    al,0x63
  441b0d:	jne    0x441b1b
  441b0f:	push   0x3
  441b11:	pop    eax
  441b12:	add    cl,0xe9
  441b15:	mov    WORD PTR [ebp-0x3],ax
  441b19:	jmp    0x441b27
  441b1b:	push   0x4
  441b1d:	pop    edx
  441b1e:	mov    cl,0x3
  441b20:	mov    WORD PTR [ebp-0x3],dx
  441b24:	mov    BYTE PTR [ebp-0x1],al
  441b27:	cmp    BYTE PTR ds:0x44e043,0x0
  441b2e:	mov    BYTE PTR [ebp-0x4],cl
  441b31:	push   ebx
  441b32:	je     0x441b52
  441b34:	movzx  eax,cl
  441b37:	cmp    DWORD PTR [eax*4+0x448d98],0x0
  441b3f:	je     0x441b52
  441b41:	cmp    cl,0x32
  441b44:	je     0x441b52
  441b46:	mov    bl,0x1
  441b48:	call   0x438545
  441b4d:	mov    cl,BYTE PTR [ebp-0x4]
  441b50:	jmp    0x441b54
  441b52:	xor    bl,bl
  441b54:	lea    eax,[ebp-0x4]
  441b57:	movzx  ecx,cl
  441b5a:	push   eax
  441b5b:	mov    eax,ds:0x448988
  441b60:	call   DWORD PTR [eax+ecx*4]
  441b63:	mov    edx,DWORD PTR ds:0x448884
  441b69:	lea    ecx,[ebp-0x4]
  441b6c:	call   0x43f399
  441b71:	test   bl,bl
  441b73:	pop    ebx
  441b74:	je     0x441b84
  441b76:	cmp    BYTE PTR ds:0x4605bf,0x0
  441b7d:	jne    0x441b84
  441b7f:	call   0x43857e
  441b84:	mov    BYTE PTR ds:0x4605bf,0x0
  441b8b:	leave  
  441b8c:	ret    
  441b8d:	push   ebp
  441b8e:	mov    ebp,esp
  441b90:	mov    eax,DWORD PTR [ebp+0x8]
  441b93:	push   ebx
  441b94:	cmp    BYTE PTR [eax+0x3],0xe
  441b98:	mov    bl,BYTE PTR [eax+0x4]
  441b9b:	push   esi
  441b9c:	push   edi
  441b9d:	jne    0x441c43
  441ba3:	push   0xa
  441ba5:	pop    esi
  441ba6:	mov    edi,0x3ef
  441bab:	cmp    bl,0x8f
  441bae:	je     0x441bb5
  441bb0:	cmp    bl,0x90
  441bb3:	jne    0x441be6
  441bb5:	mov    dx,WORD PTR ds:0x462d08
  441bbc:	cmp    dx,si
  441bbf:	jb     0x441bcf
  441bc1:	mov    ecx,edi
  441bc3:	call   0x42f124
  441bc8:	mov    dx,WORD PTR ds:0x462d08
  441bcf:	mov    al,ds:0x45f83a
  441bd4:	movzx  ecx,dx
  441bd7:	inc    dx
  441bd9:	mov    BYTE PTR [ecx+0x462d2c],al
  441bdf:	mov    WORD PTR ds:0x462d08,dx
  441be6:	cmp    bl,0x8f
  441be9:	je     0x441bf4
  441beb:	cmp    bl,0x91
  441bee:	jne    0x441d45
  441bf4:	mov    dx,WORD PTR ds:0x462cb4
  441bfb:	cmp    dx,si
  441bfe:	jb     0x441c0e
  441c00:	mov    ecx,edi
  441c02:	call   0x42f124
  441c07:	mov    dx,WORD PTR ds:0x462cb4
  441c0e:	mov    al,ds:0x44e046
  441c13:	movzx  ecx,dx
  441c16:	imul   ecx,ecx,0x3
  441c19:	inc    dx
  441c1b:	mov    BYTE PTR [ecx+0x462d0c],al
  441c21:	mov    al,ds:0x45f83b
  441c26:	mov    BYTE PTR [ecx+0x462d0d],al
  441c2c:	mov    al,ds:0x45f99f
  441c31:	mov    BYTE PTR [ecx+0x462d0e],al
  441c37:	mov    WORD PTR ds:0x462cb4,dx
  441c3e:	jmp    0x441d45
  441c43:	mov    esi,0x3f2
  441c48:	mov    edi,0xffff
  441c4d:	cmp    bl,0x8f
  441c50:	je     0x441c57
  441c52:	cmp    bl,0x90
  441c55:	jne    0x441c86
  441c57:	mov    ax,ds:0x462d08
  441c5d:	test   ax,ax
  441c60:	jne    0x441c6f
  441c62:	mov    ecx,esi
  441c64:	call   0x42f124
  441c69:	mov    ax,ds:0x462d08
  441c6f:	add    ax,di
  441c72:	mov    ds:0x462d08,ax
  441c78:	movzx  eax,ax
  441c7b:	mov    al,BYTE PTR [eax+0x462d2c]
  441c81:	mov    ds:0x45f83a,al
  441c86:	cmp    bl,0x8f
  441c89:	je     0x441c94
  441c8b:	cmp    bl,0x91
  441c8e:	jne    0x441d45
  441c94:	cmp    WORD PTR ds:0x462cb4,0x0
  441c9c:	jne    0x441ca5
  441c9e:	mov    ecx,esi
  441ca0:	call   0x42f124
  441ca5:	mov    ax,ds:0x462cb4
  441cab:	add    ax,di
  441cae:	cmp    BYTE PTR ds:0x45f692,0x0
  441cb5:	mov    ds:0x462cb4,ax
  441cbb:	jne    0x441d45
  441cc1:	mov    cl,BYTE PTR ds:0x44e046
  441cc7:	movzx  eax,ax
  441cca:	imul   eax,eax,0x3
  441ccd:	cmp    cl,BYTE PTR [eax+0x462d0c]
  441cd3:	je     0x441ce3
  441cd5:	test   cl,cl
  441cd7:	mov    cl,0x63
  441cd9:	jne    0x441cde
  441cdb:	add    cl,0xa7
  441cde:	call   0x441b05
  441ce3:	movzx  eax,WORD PTR ds:0x462cb4
  441cea:	imul   eax,eax,0x3
  441ced:	mov    al,BYTE PTR [eax+0x462d0e]
  441cf3:	cmp    BYTE PTR ds:0x45f99f,al
  441cf9:	je     0x441d19
  441cfb:	movzx  eax,al
  441cfe:	sub    eax,0x0
  441d01:	je     0x441d12
  441d03:	dec    eax
  441d04:	je     0x441d0e
  441d06:	dec    eax
  441d07:	dec    eax
  441d08:	jne    0x441d19
  441d0a:	mov    cl,0x5
  441d0c:	jmp    0x441d14
  441d0e:	mov    cl,0x9
  441d10:	jmp    0x441d14
  441d12:	mov    cl,0x4
  441d14:	call   0x441b05
  441d19:	movzx  eax,WORD PTR ds:0x462cb4
  441d20:	mov    dl,BYTE PTR ds:0x45f83b
  441d26:	imul   eax,eax,0x3
  441d29:	mov    al,BYTE PTR [eax+0x462d0d]
  441d2f:	and    dl,0x1
  441d32:	and    al,0x1
  441d34:	cmp    dl,al
  441d36:	je     0x441d45
  441d38:	mov    cl,0x2
  441d3a:	test   dl,dl
  441d3c:	jne    0x441d40
  441d3e:	inc    cl
  441d40:	call   0x441b05
  441d45:	pop    edi
  441d46:	pop    esi
  441d47:	pop    ebx
  441d48:	pop    ebp
  441d49:	ret    0x4
  441d4c:	push   ebp
  441d4d:	mov    ebp,esp
  441d4f:	push   ecx
  441d50:	push   esi
  441d51:	push   ecx
  441d52:	call   DWORD PTR ds:0x4643ec
  441d58:	push   eax
  441d59:	call   DWORD PTR ds:0x464370
  441d5f:	pop    ecx
  441d60:	pop    ecx
  441d61:	mov    esi,eax
  441d63:	push   esi
  441d64:	call   DWORD PTR ds:0x464314
  441d6a:	and    eax,0xffff7fff
  441d6f:	cmp    eax,0x2
  441d72:	je     0x441d78
  441d74:	xor    al,al
  441d76:	jmp    0x441d88
  441d78:	lea    eax,[ebp-0x4]
  441d7b:	push   eax
  441d7c:	push   esi
  441d7d:	call   DWORD PTR ds:0x464318
  441d83:	test   eax,eax
  441d85:	setne  al
  441d88:	pop    esi
  441d89:	leave  
  441d8a:	ret    
  441d8b:	cmp    BYTE PTR ds:0x4617e3,0x0
  441d92:	je     0x441d97
  441d94:	xor    eax,eax
  441d96:	ret    
  441d97:	call   DWORD PTR ds:0x4643f0
  441d9d:	add    eax,0x20
  441da0:	push   eax
  441da1:	call   DWORD PTR ds:0x4643f4
  441da7:	pop    ecx
  441da8:	ret    
  441da9:	push   ebp
  441daa:	mov    ebp,esp
  441dac:	cmp    BYTE PTR ds:0x4617e3,0x0
  441db3:	lea    eax,[ebp+0xc]
  441db6:	push   eax
  441db7:	push   DWORD PTR [ebp+0x8]
  441dba:	je     0x441dc6
  441dbc:	call   DWORD PTR ds:0x464400
  441dc2:	pop    ecx
  441dc3:	pop    ecx
  441dc4:	pop    ebp
  441dc5:	ret    
  441dc6:	call   DWORD PTR ds:0x4643f0
  441dcc:	add    eax,0x20
  441dcf:	push   eax
  441dd0:	call   DWORD PTR ds:0x464404
  441dd6:	add    esp,0xc
  441dd9:	pop    ebp
  441dda:	ret    
  441ddb:	cmp    BYTE PTR ds:0x4617e3,0x0
  441de2:	push   esi
  441de3:	mov    esi,ecx
  441de5:	je     0x441df0
  441de7:	push   esi
  441de8:	call   DWORD PTR ds:0x4643f8
  441dee:	jmp    0x441e02
  441df0:	call   DWORD PTR ds:0x4643f0
  441df6:	add    eax,0x20
  441df9:	push   eax
  441dfa:	push   esi
  441dfb:	call   DWORD PTR ds:0x4643fc
  441e01:	pop    ecx
  441e02:	pop    ecx
  441e03:	pop    esi
  441e04:	ret    
  441e05:	cmp    BYTE PTR ds:0x4605b6,0x0
  441e0c:	jne    0x441e13
  441e0e:	call   0x42f124
  441e13:	mov    BYTE PTR ds:0x462d60,0x0
  441e1a:	ret    
  441e1b:	cmp    BYTE PTR ds:0x4605b6,0x0
  441e22:	jne    0x441e2e
  441e24:	mov    ecx,0x811
  441e29:	call   0x42f1c0
  441e2e:	mov    BYTE PTR ds:0x462d60,0x0
  441e35:	ret    
  441e36:	push   ebx
  441e37:	xor    ebx,ebx
  441e39:	cmp    BYTE PTR ds:0x4605b6,bl
  441e3f:	jne    0x441e6b
  441e41:	cmp    WORD PTR [edx],bx
  441e44:	jne    0x441e66
  441e46:	mov    ecx,DWORD PTR ds:0x463064
  441e4c:	mov    ecx,DWORD PTR [ecx*4+0x40648c]
  441e53:	call   0x42eb12
  441e58:	mov    edx,eax
  441e5a:	mov    ecx,0x7d8
  441e5f:	call   0x42f1c0
  441e64:	jmp    0x441e6b
  441e66:	call   0x42f1ef
  441e6b:	mov    BYTE PTR ds:0x462d60,bl
  441e71:	pop    ebx
  441e72:	ret    
  441e73:	and    DWORD PTR ds:0x44db68,0x0
  441e7a:	cmp    BYTE PTR ds:0x4605b6,0x0
  441e81:	push   0x9
  441e83:	pop    eax
  441e84:	mov    ds:0x44db65,ax
  441e8a:	jne    0x441eb0
  441e8c:	movzx  edx,BYTE PTR ds:0x44db64
  441e93:	mov    eax,ds:0x448988
  441e98:	push   esi
  441e99:	mov    esi,0x44db64
  441e9e:	push   esi
  441e9f:	call   DWORD PTR [eax+edx*4]
  441ea2:	mov    edx,DWORD PTR ds:0x448884
  441ea8:	mov    ecx,esi
  441eaa:	pop    esi
  441eab:	jmp    0x43f399
  441eb0:	ret    
  441eb1:	push   ebp
  441eb2:	mov    ebp,esp
  441eb4:	push   ecx
  441eb5:	push   ecx
  441eb6:	movzx  eax,WORD PTR ds:0x45faba
  441ebd:	push   ebx
  441ebe:	push   esi
  441ebf:	push   edi
  441ec0:	push   0x4
  441ec2:	pop    ebx
  441ec3:	mov    edi,eax
  441ec5:	mov    esi,0x45fac8
  441eca:	push   0x0
  441ecc:	mov    DWORD PTR [ebp-0x8],eax
  441ecf:	mov    DWORD PTR ds:0x460624,esi
  441ed5:	pop    edx
  441ed6:	and    edi,ebx
  441ed8:	je     0x442042
  441ede:	mov    bl,BYTE PTR ds:0x4605b6
  441ee4:	cmp    BYTE PTR ds:0x44e043,dl
  441eea:	je     0x441f03
  441eec:	test   bl,bl
  441eee:	jne    0x441f03
  441ef0:	call   0x438545
  441ef5:	mov    esi,DWORD PTR ds:0x460624
  441efb:	mov    bl,BYTE PTR ds:0x4605b6
  441f01:	xor    edx,edx
  441f03:	cmp    WORD PTR [esi],0xd
  441f07:	jne    0x442055
  441f0d:	movzx  eax,WORD PTR [esi+0x10]
  441f11:	mov    DWORD PTR [ebp-0x4],0x73
  441f18:	cmp    eax,0x52
  441f1b:	je     0x441f2b
  441f1d:	cmp    ax,WORD PTR [ebp-0x4]
  441f21:	je     0x441f2b
  441f23:	lea    edx,[esi+0x10]
  441f26:	jmp    0x442057
  441f2b:	test   bl,bl
  441f2d:	jne    0x441f47
  441f2f:	cmp    DWORD PTR ds:0x45f834,0x0
  441f36:	jne    0x441f47
  441f38:	mov    ecx,0x7f2
  441f3d:	call   0x441e05
  441f42:	jmp    0x44205c
  441f47:	cmp    DWORD PTR ds:0x45f994,0x0
  441f4e:	je     0x441f57
  441f50:	mov    ecx,0x7f5
  441f55:	jmp    0x441f3d
  441f57:	mov    eax,DWORD PTR [esi+0x8]
  441f5a:	test   eax,eax
  441f5c:	je     0x441f7c
  441f5e:	cmp    BYTE PTR [eax+0x6],0xf
  441f62:	jne    0x441f7c
  441f64:	cmp    BYTE PTR [eax+0x1c],0x3
  441f68:	jne    0x441f7c
  441f6a:	test   bl,bl
  441f6c:	jne    0x44205c
  441f72:	call   0x441e73
  441f77:	jmp    0x44200a
  441f7c:	mov    BYTE PTR ds:0x462d60,0x1
  441f83:	mov    al,BYTE PTR [esi+0x4]
  441f86:	add    al,0x9
  441f88:	movzx  eax,al
  441f8b:	mov    ds:0x462d61,ax
  441f91:	mov    eax,DWORD PTR [esi+0x8]
  441f94:	test   eax,eax
  441f96:	je     0x441fab
  441f98:	test   BYTE PTR [eax+0x6],0x80
  441f9c:	je     0x441fab
  441f9e:	cmp    WORD PTR ds:0x45f990,0x0
  441fa6:	je     0x441fab
  441fa8:	mov    DWORD PTR [esi+0x8],edx
  441fab:	mov    DWORD PTR ds:0x4605c4,0x462d63
  441fb5:	call   0x442ee3
  441fba:	test   al,al
  441fbc:	jne    0x441fc5
  441fbe:	xor    ebx,ebx
  441fc0:	jmp    0x442069
  441fc5:	mov    eax,DWORD PTR [ebp-0x4]
  441fc8:	mov    BYTE PTR ds:0x462d63,0xe
  441fcf:	cmp    WORD PTR [esi+0x10],ax
  441fd3:	jne    0x441fdc
  441fd5:	mov    BYTE PTR ds:0x462d63,0x1e
  441fdc:	test   bl,bl
  441fde:	jne    0x441ffa
  441fe0:	movzx  ecx,BYTE PTR ds:0x462d60
  441fe7:	mov    eax,ds:0x448988
  441fec:	push   0x462d60
  441ff1:	call   DWORD PTR [eax+ecx*4]
  441ff4:	mov    DWORD PTR ds:0x460624,esi
  441ffa:	mov    edx,DWORD PTR ds:0x448884
  442000:	mov    ecx,0x462d60
  442005:	call   0x43f399
  44200a:	mov    esi,DWORD PTR ds:0x460624
  442010:	add    esi,0x20
  442013:	xor    ebx,ebx
  442015:	mov    DWORD PTR ds:0x460624,esi
  44201b:	cmp    WORD PTR [esi],bx
  44201e:	jne    0x442037
  442020:	cmp    BYTE PTR ds:0x44e043,bl
  442026:	je     0x44205e
  442028:	cmp    BYTE PTR ds:0x4605b6,bl
  44202e:	jne    0x44205e
  442030:	call   0x43857e
  442035:	jmp    0x44205e
  442037:	call   0x434e50
  44203c:	mov    eax,DWORD PTR [ebp-0x8]
  44203f:	push   0x4
  442041:	pop    ebx
  442042:	movzx  ecx,ax
  442045:	mov    eax,ecx
  442047:	push   0x2
  442049:	and    eax,0xfffffffb
  44204c:	pop    edx
  44204d:	sub    eax,edx
  44204f:	je     0x442071
  442051:	and    ecx,ebx
  442053:	jmp    0x4420a3
  442055:	mov    edx,esi
  442057:	call   0x441e36
  44205c:	xor    ebx,ebx
  44205e:	push   0x1
  442060:	xor    dl,dl
  442062:	xor    ecx,ecx
  442064:	call   0x43abf1
  442069:	mov    BYTE PTR ds:0x462d60,bl
  44206f:	jmp    0x4420a8
  442071:	cmp    WORD PTR [esi+0x2],bx
  442075:	jne    0x44208c
  442077:	cmp    WORD PTR [esi+0x12],bx
  44207b:	jne    0x44208c
  44207d:	test   di,di
  442080:	je     0x442088
  442082:	cmp    WORD PTR [esi+0x22],dx
  442086:	jne    0x442097
  442088:	mov    ecx,edx
  44208a:	jmp    0x4420a3
  44208c:	test   di,di
  44208f:	je     0x4420a0
  442091:	cmp    WORD PTR [esi+0x12],dx
  442095:	je     0x4420a0
  442097:	mov    edx,esi
  442099:	call   0x441e36
  44209e:	jmp    0x4420a8
  4420a0:	xor    ecx,ecx
  4420a2:	inc    ecx
  4420a3:	call   0x4420cb
  4420a8:	mov    eax,ds:0x460618
  4420ad:	mov    ecx,DWORD PTR ds:0x45f9b4
  4420b3:	pop    edi
  4420b4:	add    DWORD PTR [ecx],eax
  4420b6:	xor    eax,eax
  4420b8:	pop    esi
  4420b9:	mov    ds:0x460618,eax
  4420be:	mov    ds:0x462cb6,al
  4420c3:	mov    ds:0x463064,eax
  4420c8:	pop    ebx
  4420c9:	leave  
  4420ca:	ret    
  4420cb:	push   ebp
  4420cc:	mov    ebp,esp
  4420ce:	sub    esp,0x10
  4420d1:	mov    eax,ds:0x45f880
  4420d6:	push   ebx
  4420d7:	push   esi
  4420d8:	mov    esi,DWORD PTR ds:0x460624
  4420de:	mov    DWORD PTR [ebp-0x10],eax
  4420e1:	push   edi
  4420e2:	mov    ebx,ecx
  4420e4:	mov    eax,ebx
  4420e6:	and    eax,0xfffffffb
  4420e9:	mov    edi,eax
  4420eb:	shl    edi,0x4
  4420ee:	add    edi,esi
  4420f0:	push   0x1
  4420f2:	mov    DWORD PTR [ebp-0xc],eax
  4420f5:	movzx  eax,WORD PTR [edi+0x2]
  4420f9:	pop    edx
  4420fa:	push   0x4
  4420fc:	mov    DWORD PTR ds:0x4605c4,0x462d63
  442106:	mov    DWORD PTR [ebp-0x4],edx
  442109:	pop    ecx
  44210a:	dec    eax
  44210b:	je     0x442350
  442111:	dec    eax
  442112:	je     0x44216b
  442114:	sub    eax,0x6
  442117:	jne    0x4426f6
  44211d:	movzx  eax,WORD PTR [edi]
  442120:	cmp    eax,0xc
  442123:	ja     0x442142
  442125:	mov    BYTE PTR ds:0x462d60,0x3
  44212c:	mov    al,BYTE PTR [edi]
  44212e:	mov    ds:0x462d63,al
  442133:	mov    DWORD PTR ds:0x4605c4,0x462d64
  44213d:	jmp    0x4422f9
  442142:	mov    DWORD PTR ds:0x463064,0x2
  44214c:	test   bl,0x4
  44214f:	je     0x44215f
  442151:	cmp    eax,0x17
  442154:	jb     0x44215f
  442156:	cmp    eax,0x1c
  442159:	jbe    0x4426f6
  44215f:	mov    ecx,DWORD PTR [eax*4+0x448657]
  442166:	jmp    0x442424
  44216b:	movzx  ebx,WORD PTR [edi]
  44216e:	mov    eax,0x4d4
  442173:	cmp    bx,ax
  442176:	je     0x442180
  442178:	add    eax,0x1d
  44217b:	cmp    bx,ax
  44217e:	jne    0x4421d5
  442180:	lea    ecx,[edi+0x10]
  442183:	jmp    0x4421ca
  442185:	cmp    WORD PTR [ecx+0x2],dx
  442189:	jne    0x4421c7
  44218b:	mov    DWORD PTR [ebp-0x8],0xb4
  442192:	cmp    WORD PTR [ebp-0x8],ax
  442196:	ja     0x4421a9
  442198:	mov    DWORD PTR [ebp-0x8],0xbb
  44219f:	cmp    ax,WORD PTR [ebp-0x8]
  4421a3:	jbe    0x4422cd
  4421a9:	mov    DWORD PTR [ebp-0x8],0xbc
  4421b0:	cmp    WORD PTR [ebp-0x8],ax
  4421b4:	ja     0x4421c7
  4421b6:	mov    DWORD PTR [ebp-0x8],0xc3
  4421bd:	cmp    ax,WORD PTR [ebp-0x8]
  4421c1:	jbe    0x4422cd
  4421c7:	add    ecx,0x10
  4421ca:	movzx  eax,WORD PTR [ecx]
  4421cd:	test   ax,ax
  4421d0:	jne    0x442185
  4421d2:	push   0x4
  4421d4:	pop    ecx
  4421d5:	xor    eax,eax
  4421d7:	mov    DWORD PTR ds:0x463064,edx
  4421dd:	mov    BYTE PTR ds:0x462cb6,dl
  4421e3:	mov    DWORD PTR ds:0x4605c4,0x462d66
  4421ed:	mov    BYTE PTR ds:0x462d60,0x54
  4421f4:	mov    ds:0x462d65,al
  4421f9:	cmp    DWORD PTR [ebp-0xc],eax
  4421fc:	je     0x4422b8
  442202:	cmp    WORD PTR [esi+0x2],cx
  442206:	jne    0x4426f6
  44220c:	movzx  eax,WORD PTR [esi]
  44220f:	push   0x6b
  442211:	pop    ebx
  442212:	cmp    ax,bx
  442215:	jb     0x4426f6
  44221b:	push   0x70
  44221d:	pop    ecx
  44221e:	cmp    ax,cx
  442221:	ja     0x4426f6
  442227:	mov    cl,BYTE PTR [esi]
  442229:	sub    cl,0x2
  44222c:	shl    cl,0x5
  44222f:	add    esi,0x10
  442232:	push   0x4
  442234:	pop    eax
  442235:	mov    BYTE PTR ds:0x462d65,cl
  44223b:	mov    DWORD PTR ds:0x460624,esi
  442241:	cmp    WORD PTR [esi+0x2],ax
  442245:	jne    0x4422b8
  442247:	movzx  edx,WORD PTR [esi]
  44224a:	cmp    dx,bx
  44224d:	jb     0x4426f6
  442253:	push   0x70
  442255:	pop    eax
  442256:	cmp    dx,ax
  442259:	ja     0x4426f6
  44225f:	mov    al,cl
  442261:	and    al,0xe0
  442263:	cmp    al,0xa0
  442265:	jne    0x44226c
  442267:	cmp    dx,bx
  44226a:	je     0x442296
  44226c:	cmp    al,0xc0
  44226e:	jne    0x442275
  442270:	cmp    dx,bx
  442273:	je     0x442296
  442275:	cmp    al,0x20
  442277:	jne    0x4426f6
  44227d:	cmp    edx,0x6f
  442280:	je     0x442296
  442282:	cmp    al,al
  442284:	jne    0x4426f6
  44228a:	push   0x70
  44228c:	pop    ebx
  44228d:	cmp    dx,bx
  442290:	jne    0x4426f6
  442296:	cmp    al,0x20
  442298:	jne    0x4422b2
  44229a:	and    cl,0x1f
  44229d:	mov    BYTE PTR ds:0x462d65,cl
  4422a3:	mov    al,BYTE PTR [esi]
  4422a5:	sub    al,0x2
  4422a7:	shl    al,0x5
  4422aa:	or     cl,al
  4422ac:	mov    BYTE PTR ds:0x462d65,cl
  4422b2:	xor    edx,edx
  4422b4:	add    esi,0x10
  4422b7:	inc    edx
  4422b8:	movzx  eax,WORD PTR [edi]
  4422bb:	mov    ecx,0x489
  4422c0:	cmp    ax,cx
  4422c3:	jbe    0x4422ee
  4422c5:	mov    ecx,DWORD PTR ds:0x44881f
  4422cb:	jmp    0x44232f
  4422cd:	mov    eax,0x4d4
  4422d2:	push   0x4
  4422d4:	pop    ecx
  4422d5:	cmp    bx,ax
  4422d8:	jne    0x4422e7
  4422da:	mov    eax,0x2a1
  4422df:	mov    WORD PTR [edi],ax
  4422e2:	jmp    0x4421d5
  4422e7:	mov    eax,0x19b
  4422ec:	jmp    0x4422df
  4422ee:	cmp    eax,0x63
  4422f1:	ja     0x442307
  4422f3:	mov    ds:0x462d63,ax
  4422f9:	add    esi,0x10
  4422fc:	mov    DWORD PTR ds:0x460624,esi
  442302:	jmp    0x44257e
  442307:	mov    ecx,0xf5
  44230c:	cmp    ax,cx
  44230f:	ja     0x442319
  442311:	mov    ecx,DWORD PTR ds:0x44880b
  442317:	jmp    0x44232f
  442319:	mov    ecx,0x296
  44231e:	cmp    ax,cx
  442321:	mov    ecx,DWORD PTR ds:0x44880f
  442327:	jbe    0x44232f
  442329:	mov    ecx,DWORD PTR ds:0x448813
  44232f:	mov    ds:0x462d63,ax
  442335:	lea    eax,[edi+0x10]
  442338:	mov    ds:0x460624,eax
  44233d:	mov    DWORD PTR ds:0x463064,edx
  442343:	inc    ecx
  442344:	xor    edx,edx
  442346:	call   0x442716
  44234b:	jmp    0x442578
  442350:	movzx  eax,WORD PTR [edi]
  442353:	mov    DWORD PTR ds:0x463064,0x6
  44235d:	cmp    eax,0xf
  442360:	jb     0x44239e
  442362:	cmp    eax,0x1f
  442365:	ja     0x44239e
  442367:	test   bl,0x4
  44236a:	jne    0x4426f6
  442370:	cmp    eax,0x1a
  442373:	jae    0x44238b
  442375:	sub    eax,0xe
  442378:	imul   eax,eax,0x1c
  44237b:	mov    eax,DWORD PTR [eax+0x449428]
  442381:	shr    eax,1
  442383:	mov    al,BYTE PTR [eax+0x4064e8]
  442389:	jmp    0x44238f
  44238b:	mov    al,BYTE PTR [edi]
  44238d:	sub    al,0x5
  44238f:	mov    ds:0x460567,al
  442394:	mov    ecx,0x4480f0
  442399:	jmp    0x442424
  44239e:	push   0xd
  4423a0:	pop    ecx
  4423a1:	cmp    ax,cx
  4423a4:	jne    0x4426f6
  4423aa:	mov    ecx,DWORD PTR [edi+0x8]
  4423ad:	test   ecx,ecx
  4423af:	je     0x4423b7
  4423b1:	cmp    BYTE PTR [ecx+0x6],0x3
  4423b5:	ja     0x4423cf
  4423b7:	cmp    DWORD PTR [edi+0x10],0x1000d
  4423be:	jne    0x4426f6
  4423c4:	mov    ecx,DWORD PTR [edi+0x18]
  4423c7:	test   ecx,ecx
  4423c9:	je     0x4426f6
  4423cf:	movzx  eax,BYTE PTR [ecx+0x6]
  4423d3:	sub    eax,0x4
  4423d6:	je     0x442539
  4423dc:	sub    eax,0x6
  4423df:	je     0x4423f0
  4423e1:	dec    eax
  4423e2:	dec    eax
  4423e3:	je     0x44246c
  4423e9:	dec    eax
  4423ea:	jne    0x4426f6
  4423f0:	test   BYTE PTR [ecx+0x7],0x20
  4423f4:	push   0x4
  4423f6:	pop    eax
  4423f7:	mov    ds:0x463064,eax
  4423fc:	jne    0x4426f6
  442402:	test   al,bl
  442404:	jne    0x4426f6
  44240a:	mov    eax,DWORD PTR [ecx+0x1c]
  44240d:	cmp    ecx,DWORD PTR [esi+0x8]
  442410:	mov    eax,DWORD PTR [eax+0x10]
  442413:	mov    ds:0x45f998,eax
  442418:	mov    ecx,0x4480f6
  44241d:	jne    0x442424
  44241f:	mov    ecx,0x4480fb
  442424:	mov    al,BYTE PTR [ecx]
  442426:	mov    ds:0x462d60,al
  44242b:	cmp    al,0x25
  44242d:	je     0x442433
  44242f:	cmp    al,0x26
  442431:	jne    0x442439
  442433:	mov    BYTE PTR ds:0x462cb6,dl
  442439:	mov    al,ds:0x45f993
  44243e:	test   al,al
  442440:	je     0x442343
  442446:	cmp    al,dl
  442448:	jne    0x44245b
  44244a:	movzx  eax,WORD PTR [edi]
  44244d:	cmp    eax,0x47
  442450:	jb     0x44245b
  442452:	cmp    eax,0x54
  442455:	jb     0x442343
  44245b:	mov    esi,edi
  44245d:	xor    eax,eax
  44245f:	mov    DWORD PTR ds:0x460624,esi
  442465:	mov    DWORD PTR [edi],eax
  442467:	jmp    0x44257e
  44246c:	cmp    WORD PTR [edi+0x10],0x2b
  442471:	push   0x8
  442473:	mov    DWORD PTR ds:0x463064,0x5
  44247d:	pop    esi
  44247e:	jne    0x44248e
  442480:	cmp    WORD PTR [edi+0x12],si
  442484:	jne    0x44248e
  442486:	mov    ecx,DWORD PTR ds:0x448703
  44248c:	jmp    0x442424
  44248e:	mov    edx,DWORD PTR [ecx+0x18]
  442491:	test   edx,edx
  442493:	je     0x4426f6
  442499:	test   bl,0x4
  44249c:	jne    0x4426f6
  4424a2:	movzx  eax,WORD PTR [edx+0xe]
  4424a6:	test   al,0x1
  4424a8:	je     0x4424cc
  4424aa:	test   al,0x40
  4424ac:	je     0x4424bd
  4424ae:	push   0xd
  4424b0:	mov    DWORD PTR ds:0x45f998,0x6
  4424ba:	pop    eax
  4424bb:	jmp    0x4424e0
  4424bd:	mov    DWORD PTR ds:0x45f998,esi
  4424c3:	mov    BYTE PTR ds:0x460567,0xe
  4424ca:	jmp    0x4424e5
  4424cc:	test   al,0x2
  4424ce:	je     0x442500
  4424d0:	mov    eax,DWORD PTR [edx+0x10]
  4424d3:	mov    ds:0x45f998,eax
  4424d8:	shr    eax,1
  4424da:	mov    al,BYTE PTR [eax+0x4064e8]
  4424e0:	mov    ds:0x460567,al
  4424e5:	xor    edx,edx
  4424e7:	inc    edx
  4424e8:	test   dl,bl
  4424ea:	je     0x4424f6
  4424ec:	mov    ecx,0x4480e5
  4424f1:	jmp    0x442424
  4424f6:	mov    ecx,0x4480eb
  4424fb:	jmp    0x442424
  442500:	test   al,0x8
  442502:	je     0x442511
  442504:	mov    eax,DWORD PTR [edx+0x10]
  442507:	xor    edx,edx
  442509:	inc    edx
  44250a:	test   dl,bl
  44250c:	jmp    0x442413
  442511:	cmp    BYTE PTR ds:0x4605b6,0x0
  442518:	jne    0x44252d
  44251a:	movzx  eax,BYTE PTR [ecx+0x5]
  44251e:	sub    ecx,eax
  442520:	mov    edx,ecx
  442522:	push   eax
  442523:	mov    ecx,0x838
  442528:	call   0x42f15d
  44252d:	mov    BYTE PTR ds:0x462d60,0x0
  442534:	jmp    0x4426fd
  442539:	mov    BYTE PTR ds:0x462d60,0x3d
  442540:	call   0x442ee3
  442545:	test   al,al
  442547:	jne    0x442553
  442549:	mov    ds:0x462d60,al
  44254e:	jmp    0x442711
  442553:	xor    eax,eax
  442555:	add    esi,0x10
  442558:	inc    eax
  442559:	mov    DWORD PTR ds:0x460624,esi
  44255f:	cmp    WORD PTR [esi+0x2],ax
  442563:	jne    0x4426ec
  442569:	cmp    WORD PTR [esi],0x5
  44256d:	jne    0x4426ec
  442573:	call   0x442f6e
  442578:	mov    esi,DWORD PTR ds:0x460624
  44257e:	xor    edx,edx
  442580:	cmp    WORD PTR [esi],dx
  442583:	je     0x442594
  442585:	cmp    BYTE PTR ds:0x462d60,dl
  44258b:	je     0x442594
  44258d:	mov    edx,esi
  44258f:	jmp    0x4426f8
  442594:	mov    ax,ds:0x4605c4
  44259a:	mov    bl,BYTE PTR ds:0x462d60
  4425a0:	mov    esi,0x462d60
  4425a5:	sub    ax,si
  4425a8:	mov    ds:0x462d61,ax
  4425ae:	mov    DWORD PTR ds:0x4605c0,esi
  4425b4:	cmp    BYTE PTR ds:0x4605b6,dl
  4425ba:	jne    0x4426b4
  4425c0:	cmp    BYTE PTR ds:0x44f551,dl
  4425c6:	je     0x442645
  4425c8:	movzx  eax,bl
  4425cb:	cmp    BYTE PTR [eax+0x404d68],dl
  4425d1:	jne    0x442645
  4425d3:	push   0xd
  4425d5:	pop    eax
  4425d6:	cmp    WORD PTR ds:0x45fac8,ax
  4425dd:	jne    0x442645
  4425df:	xor    edx,edx
  4425e1:	inc    edx
  4425e2:	cmp    WORD PTR ds:0x45faca,dx
  4425e9:	jne    0x442643
  4425eb:	mov    cx,WORD PTR ds:0x45fad8
  4425f2:	mov    ax,ds:0x45fada
  4425f8:	cmp    cx,0x52
  4425fc:	jne    0x442603
  4425fe:	cmp    ax,dx
  442601:	je     0x442611
  442603:	cmp    cx,0x73
  442607:	jne    0x442643
  442609:	push   0x4
  44260b:	pop    ecx
  44260c:	cmp    ax,cx
  44260f:	jne    0x442643
  442611:	push   DWORD PTR ds:0x45fae4
  442617:	movsx  eax,WORD PTR ds:0x45fadc
  44261e:	push   eax
  44261f:	push   DWORD PTR ds:0x45fad4
  442625:	movsx  eax,WORD PTR ds:0x45facc
  44262c:	push   eax
  44262d:	push   0x41f860
  442632:	call   0x441da9
  442637:	add    esp,0x14
  44263a:	cmp    BYTE PTR ds:0x4605b6,0x0
  442641:	jne    0x4426b4
  442643:	xor    edx,edx
  442645:	cmp    BYTE PTR ds:0x44e043,0x0
  44264c:	je     0x44266c
  44264e:	mov    cl,BYTE PTR ds:0x462d60
  442654:	movzx  eax,cl
  442657:	cmp    DWORD PTR [eax*4+0x448d98],edx
  44265e:	je     0x44266c
  442660:	cmp    cl,0x32
  442663:	je     0x44266c
  442665:	call   0x438545
  44266a:	jmp    0x44266f
  44266c:	mov    DWORD PTR [ebp-0x4],edx
  44266f:	movzx  ecx,BYTE PTR ds:0x462d60
  442676:	mov    eax,ds:0x448988
  44267b:	push   esi
  44267c:	call   DWORD PTR [eax+ecx*4]
  44267f:	cmp    WORD PTR ds:0x462d61,0x0
  442687:	je     0x442696
  442689:	mov    edx,DWORD PTR ds:0x448884
  44268f:	mov    ecx,esi
  442691:	call   0x43f399
  442696:	cmp    DWORD PTR [ebp-0x4],0x0
  44269a:	je     0x4426aa
  44269c:	cmp    BYTE PTR ds:0x4605bf,0x0
  4426a3:	jne    0x4426aa
  4426a5:	call   0x43857e
  4426aa:	xor    ecx,ecx
  4426ac:	mov    BYTE PTR ds:0x4605bf,cl
  4426b2:	jmp    0x4426c7
  4426b4:	test   bl,bl
  4426b6:	je     0x4426c5
  4426b8:	mov    edx,DWORD PTR ds:0x448884
  4426be:	mov    ecx,esi
  4426c0:	call   0x43f399
  4426c5:	xor    ecx,ecx
  4426c7:	cmp    BYTE PTR ds:0x44f54e,0x0
  4426ce:	mov    DWORD PTR ds:0x4605c0,ecx
  4426d4:	je     0x442711
  4426d6:	mov    eax,DWORD PTR [ebp-0x10]
  4426d9:	cmp    eax,DWORD PTR ds:0x45f880
  4426df:	mov    dl,bl
  4426e1:	setne  al
  4426e4:	movzx  eax,al
  4426e7:	push   eax
  4426e8:	mov    ecx,esi
  4426ea:	jmp    0x44270c
  4426ec:	mov    DWORD PTR ds:0x463064,0x3
  4426f6:	mov    edx,edi
  4426f8:	call   0x441e36
  4426fd:	cmp    BYTE PTR ds:0x44f54e,0x0
  442704:	je     0x442711
  442706:	xor    dl,dl
  442708:	push   0x1
  44270a:	xor    ecx,ecx
  44270c:	call   0x43abf1
  442711:	pop    edi
  442712:	pop    esi
  442713:	pop    ebx
  442714:	leave  
  442715:	ret    
  442716:	push   ebp
  442717:	mov    ebp,esp
  442719:	and    esp,0xfffffff8
  44271c:	sub    esp,0x14
  44271f:	mov    eax,ecx
  442721:	push   ebx
  442722:	movzx  ecx,BYTE PTR [eax]
  442725:	add    ecx,eax
  442727:	push   esi
  442728:	xor    bl,bl
  44272a:	mov    DWORD PTR [esp+0xc],edx
  44272e:	mov    edx,DWORD PTR ds:0x460624
  442734:	push   edi
  442735:	mov    DWORD PTR [esp+0x14],eax
  442739:	mov    DWORD PTR [esp+0x1c],ecx
  44273d:	mov    BYTE PTR [esp+0xf],bl
  442741:	lea    esi,[eax+0x1]
  442744:	mov    eax,ds:0x4605c4
  442749:	movzx  edi,BYTE PTR [esi]
  44274c:	mov    DWORD PTR [esp+0x18],eax
  442750:	mov    eax,edi
  442752:	and    eax,0x1f
  442755:	sub    eax,0x12
  442758:	je     0x4427c4
  44275a:	dec    eax
  44275b:	je     0x442789
  44275d:	dec    eax
  44275e:	je     0x442771
  442760:	dec    eax
  442761:	je     0x442789
  442763:	dec    eax
  442764:	je     0x442771
  442766:	mov    ecx,esi
  442768:	call   0x44287a
  44276d:	mov    ecx,eax
  44276f:	jmp    0x442781
  442771:	and    edi,0x20
  442774:	lea    ecx,[esi+0x1]
  442777:	mov    edx,edi
  442779:	call   0x442716
  44277e:	lea    ecx,[eax+0x2]
  442781:	mov    edx,DWORD PTR ds:0x460624
  442787:	jmp    0x4427d5
  442789:	movzx  eax,BYTE PTR [esi+0x1]
  44278d:	lea    ebx,[esi+0x2]
  442790:	lea    edi,[esi+0x2]
  442793:	add    ebx,eax
  442795:	mov    ecx,edi
  442797:	call   0x44287a
  44279c:	mov    ecx,eax
  44279e:	and    eax,0xffff7fff
  4427a3:	mov    edx,0x8000
  4427a8:	add    edi,eax
  4427aa:	test   edx,ecx
  4427ac:	je     0x4427b2
  4427ae:	cmp    edi,ebx
  4427b0:	jb     0x442795
  4427b2:	and    ecx,edx
  4427b4:	mov    edx,DWORD PTR ds:0x460624
  4427ba:	sub    ecx,esi
  4427bc:	add    ecx,ebx
  4427be:	mov    bl,BYTE PTR [esp+0xf]
  4427c2:	jmp    0x4427d5
  4427c4:	mov    eax,ds:0x4605c4
  4427c9:	inc    DWORD PTR ds:0x4605c4
  4427cf:	xor    ecx,ecx
  4427d1:	mov    BYTE PTR [eax],0x0
  4427d4:	inc    ecx
  4427d5:	mov    edi,0x8000
  4427da:	test   edi,ecx
  4427dc:	je     0x442807
  4427de:	cmp    DWORD PTR [esp+0x10],0x0
  4427e3:	jne    0x44286f
  4427e9:	mov    al,BYTE PTR [esi]
  4427eb:	test   al,0x40
  4427ed:	je     0x4427fb
  4427ef:	test   bl,bl
  4427f1:	je     0x4427fb
  4427f3:	xor    bl,bl
  4427f5:	mov    BYTE PTR [esp+0xf],bl
  4427f9:	jmp    0x4427ff
  4427fb:	test   al,0x20
  4427fd:	je     0x442868
  4427ff:	and    ecx,0xffff7fff
  442805:	jmp    0x44284e
  442807:	mov    al,BYTE PTR [esi]
  442809:	and    DWORD PTR [esp+0x10],0x0
  44280e:	test   al,0x40
  442810:	je     0x442841
  442812:	test   al,al
  442814:	js     0x442839
  442816:	cmp    WORD PTR [edx+0x2],0x4
  44281b:	jne    0x44284e
  44281d:	movzx  edi,WORD PTR [edx]
  442820:	cmp    edi,0x68
  442823:	je     0x442830
  442825:	and    al,0x1f
  442827:	cmp    al,0x15
  442829:	jb     0x44284e
  44282b:	cmp    edi,0x69
  44282e:	jne    0x44284e
  442830:	add    edx,0x10
  442833:	mov    DWORD PTR ds:0x460624,edx
  442839:	mov    bl,0x1
  44283b:	mov    BYTE PTR [esp+0xf],bl
  44283f:	jmp    0x442850
  442841:	test   al,al
  442843:	jns    0x44284e
  442845:	mov    eax,DWORD PTR [esp+0x18]
  442849:	mov    ds:0x4605c4,eax
  44284e:	add    esi,ecx
  442850:	cmp    esi,DWORD PTR [esp+0x1c]
  442854:	jbe    0x442744
  44285a:	mov    eax,DWORD PTR [esp+0x14]
  44285e:	movzx  eax,BYTE PTR [eax]
  442861:	pop    edi
  442862:	pop    esi
  442863:	pop    ebx
  442864:	mov    esp,ebp
  442866:	pop    ebp
  442867:	ret    
  442868:	call   0x441e36
  44286d:	jmp    0x44285a
  44286f:	mov    eax,DWORD PTR [esp+0x14]
  442873:	movzx  eax,BYTE PTR [eax]
  442876:	or     eax,edi
  442878:	jmp    0x442861
  44287a:	push   ebp
  44287b:	mov    ebp,esp
  44287d:	sub    esp,0x18
  442880:	push   esi
  442881:	mov    esi,ecx
  442883:	push   edi
  442884:	mov    cl,BYTE PTR [esi]
  442886:	movzx  edx,cl
  442889:	mov    eax,edx
  44288b:	and    eax,0x1f
  44288e:	jmp    DWORD PTR [eax*4+0x442b82]
  442895:	mov    esi,DWORD PTR ds:0x460624
  44289b:	cmp    DWORD PTR [esi],0x1000d
  4428a1:	jne    0x4428ac
  4428a3:	call   0x442ee3
  4428a8:	test   al,al
  4428aa:	jne    0x4428b6
  4428ac:	mov    eax,0x8001
  4428b1:	jmp    0x442b7b
  4428b6:	add    esi,0x10
  4428b9:	mov    DWORD PTR ds:0x460624,esi
  4428bf:	xor    eax,eax
  4428c1:	inc    eax
  4428c2:	jmp    0x442b7b
  4428c7:	mov    cl,0x52
  4428c9:	call   0x442bca
  4428ce:	mov    esi,eax
  4428d0:	xor    eax,eax
  4428d2:	movzx  edi,WORD PTR [esi+0x2]
  4428d6:	mov    WORD PTR [esi+0x2],ax
  4428da:	call   0x442c30
  4428df:	mov    WORD PTR [esi+0x2],di
  4428e3:	test   eax,0x8000
  4428e8:	jne    0x4428ac
  4428ea:	xor    ecx,ecx
  4428ec:	inc    ecx
  4428ed:	cmp    di,cx
  4428f0:	jne    0x442980
  4428f6:	mov    edx,DWORD PTR ds:0x460624
  4428fc:	mov    ecx,DWORD PTR ds:0x4605c4
  442902:	mov    al,BYTE PTR [edx]
  442904:	mov    BYTE PTR [ecx],al
  442906:	inc    ecx
  442907:	add    edx,0x10
  44290a:	mov    DWORD PTR ds:0x4605c4,ecx
  442910:	mov    DWORD PTR ds:0x460624,edx
  442916:	call   0x442c30
  44291b:	jmp    0x442b7b
  442920:	mov    eax,ds:0x460624
  442925:	cmp    DWORD PTR [eax],0x10003
  44292b:	jne    0x4428bf
  44292d:	add    eax,0x10
  442930:	mov    cl,0x25
  442932:	mov    ds:0x460624,eax
  442937:	call   0x442bca
  44293c:	mov    ecx,DWORD PTR ds:0x4605c4
  442942:	mov    esi,eax
  442944:	xor    eax,eax
  442946:	movzx  edi,WORD PTR [esi+0x2]
  44294a:	mov    WORD PTR [esi+0x2],ax
  44294e:	mov    BYTE PTR [ecx],0x5a
  442951:	inc    ecx
  442952:	mov    DWORD PTR ds:0x4605c4,ecx
  442958:	call   0x442c30
  44295d:	mov    WORD PTR [esi+0x2],di
  442961:	test   eax,0x8000
  442966:	jne    0x4428ac
  44296c:	xor    ecx,ecx
  44296e:	inc    ecx
  44296f:	cmp    di,cx
  442972:	jne    0x4428ac
  442978:	lea    eax,[esi+0x10]
  44297b:	mov    ds:0x460624,eax
  442980:	mov    eax,ecx
  442982:	jmp    0x442b7b
  442987:	mov    cl,0x24
  442989:	call   0x442bca
  44298e:	mov    edi,eax
  442990:	xor    eax,eax
  442992:	movzx  esi,WORD PTR [edi+0x2]
  442996:	mov    WORD PTR [edi+0x2],ax
  44299a:	call   0x442c30
  44299f:	mov    WORD PTR [edi+0x2],si
  4429a3:	jmp    0x442b7b
  4429a8:	mov    cl,0x39
  4429aa:	jmp    0x442989
  4429ac:	xor    eax,eax
  4429ae:	lea    edi,[ebp-0x14]
  4429b1:	stos   DWORD PTR es:[edi],eax
  4429b2:	stos   DWORD PTR es:[edi],eax
  4429b3:	stos   DWORD PTR es:[edi],eax
  4429b4:	and    cl,0x1f
  4429b7:	stos   DWORD PTR es:[edi],eax
  4429b8:	cmp    cl,0x6
  4429bb:	jne    0x4429cc
  4429bd:	push   0x0
  4429bf:	lea    edx,[ebp-0x14]
  4429c2:	lea    ecx,[ebp-0x1]
  4429c5:	call   0x443429
  4429ca:	jmp    0x4429d4
  4429cc:	lea    ecx,[ebp-0x14]
  4429cf:	call   0x443756
  4429d4:	mov    ecx,DWORD PTR ds:0x4605c4
  4429da:	mov    edx,eax
  4429dc:	mov    eax,DWORD PTR [ebp-0xc]
  4429df:	mov    DWORD PTR [ecx],eax
  4429e1:	add    ecx,0x4
  4429e4:	neg    edx
  4429e6:	sbb    edx,edx
  4429e8:	and    edx,0xffff8000
  4429ee:	mov    DWORD PTR ds:0x4605c4,ecx
  4429f4:	lea    eax,[edx+0x8001]
  4429fa:	jmp    0x442b7b
  4429ff:	mov    ecx,DWORD PTR ds:0x460624
  442a05:	mov    dl,BYTE PTR [ecx]
  442a07:	movzx  esi,dl
  442a0a:	lea    eax,[esi-0xf]
  442a0d:	cmp    eax,0x10
  442a10:	jg     0x4428ac
  442a16:	mov    eax,ds:0x4605c4
  442a1b:	mov    BYTE PTR [eax],dl
  442a1d:	inc    eax
  442a1e:	mov    ds:0x4605c4,eax
  442a23:	lea    eax,[esi-0xe]
  442a26:	imul   eax,eax,0x1c
  442a29:	add    ecx,0x10
  442a2c:	mov    eax,DWORD PTR [eax+0x449428]
  442a32:	mov    ds:0x45f998,eax
  442a37:	mov    DWORD PTR ds:0x460624,ecx
  442a3d:	jmp    0x4428bf
  442a42:	mov    eax,ds:0x460624
  442a47:	cmp    DWORD PTR [eax],0x80021
  442a4d:	je     0x442a5b
  442a4f:	cmp    DWORD PTR [eax],0x40071
  442a55:	jne    0x4428ac
  442a5b:	cmp    DWORD PTR [eax+0x10],0x1000d
  442a62:	jne    0x442a90
  442a64:	cmp    DWORD PTR [eax+0x20],0x10052
  442a6b:	je     0x442a90
  442a6d:	cmp    DWORD PTR [eax+0x20],0x10039
  442a74:	je     0x442a90
  442a76:	mov    ecx,0x448193
  442a7b:	and    edx,0x20
  442a7e:	call   0x442716
  442a83:	and    eax,0x8000
  442a88:	or     eax,0x3
  442a8b:	jmp    0x442b7b
  442a90:	mov    ecx,0x44819c
  442a95:	jmp    0x442a7b
  442a97:	call   0x44398b
  442a9c:	jmp    0x442b7b
  442aa1:	mov    ecx,DWORD PTR [esi+0x1]
  442aa4:	and    edx,0x20
  442aa7:	call   0x442716
  442aac:	and    eax,0x8000
  442ab1:	or     eax,0x5
  442ab4:	jmp    0x442b7b
  442ab9:	mov    eax,ds:0x460624
  442abe:	cmp    DWORD PTR [eax],0x10005
  442ac4:	jne    0x4428ac
  442aca:	call   0x442f6e
  442acf:	jmp    0x4428bf
  442ad4:	mov    eax,ds:0x460624
  442ad9:	cmp    DWORD PTR [eax],0x10007
  442adf:	jmp    0x442ac4
  442ae1:	mov    edi,DWORD PTR ds:0x460624
  442ae7:	cmp    DWORD PTR [edi],0x1000d
  442aed:	jne    0x442b2f
  442aef:	movsx  ecx,WORD PTR [edi+0x4]
  442af3:	movzx  eax,BYTE PTR [esi+0x2]
  442af7:	cmp    ecx,eax
  442af9:	jne    0x442b2f
  442afb:	push   ecx
  442afc:	mov    ecx,DWORD PTR [edi+0xc]
  442aff:	lea    edx,[esi+0x3]
  442b02:	call   0x445d5e
  442b07:	test   eax,eax
  442b09:	jne    0x442b2f
  442b0b:	mov    ecx,DWORD PTR ds:0x4605c4
  442b11:	mov    al,BYTE PTR [esi+0x1]
  442b14:	mov    BYTE PTR [ecx],al
  442b16:	movzx  eax,BYTE PTR [esi+0x2]
  442b1a:	inc    ecx
  442b1b:	add    edi,0x10
  442b1e:	mov    DWORD PTR ds:0x4605c4,ecx
  442b24:	mov    DWORD PTR ds:0x460624,edi
  442b2a:	add    eax,0x3
  442b2d:	jmp    0x442b7b
  442b2f:	movzx  eax,BYTE PTR [esi+0x2]
  442b33:	add    eax,0x8003
  442b38:	jmp    0x442b7b
  442b3a:	mov    ecx,DWORD PTR ds:0x460624
  442b40:	cmp    WORD PTR [ecx+0x2],0x1
  442b45:	je     0x442b76
  442b47:	mov    dl,BYTE PTR [ecx]
  442b49:	cmp    BYTE PTR [esi+0x1],dl
  442b4c:	jne    0x442b76
  442b4e:	mov    eax,ds:0x4605c4
  442b53:	push   0x2
  442b55:	mov    BYTE PTR [eax],dl
  442b57:	inc    eax
  442b58:	add    ecx,0x10
  442b5b:	mov    ds:0x4605c4,eax
  442b60:	mov    DWORD PTR ds:0x460624,ecx
  442b66:	pop    eax
  442b67:	jmp    0x442b7b
  442b69:	mov    ecx,DWORD PTR ds:0x460624
  442b6f:	cmp    WORD PTR [ecx+0x2],0x1
  442b74:	je     0x442b47
  442b76:	mov    eax,0x8002
  442b7b:	pop    edi
  442b7c:	pop    esi
  442b7d:	leave  
  442b7e:	ret    
  442b7f:	lea    ecx,[ecx+0x0]
  442b82:	xchg   ebp,eax
  442b83:	sub    BYTE PTR [eax+eax*1-0x47],al
  442b87:	sub    al,BYTE PTR [eax+eax*1-0x1]
  442b8b:	sub    DWORD PTR [eax+eax*1+0x16],eax
  442b8f:	sub    DWORD PTR [eax+eax*1-0x79],eax
  442b93:	sub    DWORD PTR [eax+eax*1-0x58],eax
  442b97:	sub    DWORD PTR [eax+eax*1-0x54],eax
  442b9b:	sub    DWORD PTR [eax+eax*1-0x54],eax
  442b9f:	sub    DWORD PTR [eax+eax*1-0x2c],eax
  442ba3:	sub    al,BYTE PTR [eax+eax*1+0x3a]
  442ba7:	sub    eax,DWORD PTR [eax+eax*1+0x69]
  442bab:	sub    eax,DWORD PTR [eax+eax*1-0x5f]
  442baf:	sub    al,BYTE PTR [eax+eax*1+0x42]
  442bb3:	sub    al,BYTE PTR [eax+eax*1-0x69]
  442bb7:	sub    al,BYTE PTR [eax+eax*1+0x0]
  442bbb:	add    BYTE PTR [eax],al
  442bbd:	add    bh,al
  442bbf:	sub    BYTE PTR [eax+eax*1+0x20],al
  442bc3:	sub    DWORD PTR [eax+eax*1-0x1f],eax
  442bc7:	sub    al,BYTE PTR [eax+eax*1-0x75]
  442bcb:	adc    eax,0x460624
  442bd0:	push   ebx
  442bd1:	push   esi
  442bd2:	xor    esi,esi
  442bd4:	push   edi
  442bd5:	mov    bl,cl
  442bd7:	mov    edi,esi
  442bd9:	movzx  eax,WORD PTR [edx+0x2]
  442bdd:	cmp    eax,0x1
  442be0:	je     0x442bf4
  442be2:	cmp    eax,0x4
  442be5:	jne    0x442c2a
  442be7:	movzx  eax,WORD PTR [edx]
  442bea:	cmp    eax,0x75
  442bed:	je     0x442bf4
  442bef:	cmp    eax,0x76
  442bf2:	jne    0x442c2a
  442bf4:	movzx  ecx,WORD PTR [edx]
  442bf7:	movzx  eax,bl
  442bfa:	cmp    cx,ax
  442bfd:	jne    0x442c07
  442bff:	test   edi,edi
  442c01:	jne    0x442c07
  442c03:	test   esi,esi
  442c05:	je     0x442c2a
  442c07:	mov    eax,ecx
  442c09:	add    edx,0x10
  442c0c:	sub    eax,0x3
  442c0f:	je     0x442c27
  442c11:	sub    eax,0x21
  442c14:	je     0x442c24
  442c16:	dec    eax
  442c17:	je     0x442c21
  442c19:	sub    eax,0x14
  442c1c:	jne    0x442bd9
  442c1e:	inc    edi
  442c1f:	jmp    0x442bd9
  442c21:	dec    esi
  442c22:	jmp    0x442bd9
  442c24:	dec    edi
  442c25:	jmp    0x442bd9
  442c27:	inc    esi
  442c28:	jmp    0x442bd9
  442c2a:	pop    edi
  442c2b:	pop    esi
  442c2c:	mov    eax,edx
  442c2e:	pop    ebx
  442c2f:	ret    
  442c30:	push   ebp
  442c31:	mov    ebp,esp
  442c33:	push   ecx
  442c34:	push   ecx
  442c35:	push   ebx
  442c36:	mov    ebx,DWORD PTR ds:0x4605c4
  442c3c:	push   esi
  442c3d:	push   edi
  442c3e:	mov    edi,DWORD PTR ds:0x460624
  442c44:	mov    esi,edi
  442c46:	mov    DWORD PTR [ebp-0x4],edi
  442c49:	test   BYTE PTR [esi+0x2],0x1
  442c4d:	lea    edx,[ebx+0xff]
  442c53:	jne    0x442c5f
  442c55:	mov    eax,0x8001
  442c5a:	jmp    0x442ede
  442c5f:	lea    ecx,[ebx+0x1]
  442c62:	mov    DWORD PTR ds:0x4605c4,ecx
  442c68:	movzx  eax,WORD PTR [esi]
  442c6b:	cmp    eax,0xd
  442c6e:	jg     0x442d4b
  442c74:	je     0x442cfb
  442c7a:	cmp    eax,0x3
  442c7d:	je     0x442d7f
  442c83:	cmp    eax,0x4
  442c86:	jle    0x442d63
  442c8c:	cmp    eax,0xa
  442c8f:	jle    0x442cd9
  442c91:	cmp    eax,0xb
  442c94:	je     0x442cbd
  442c96:	cmp    eax,0xc
  442c99:	jne    0x442d63
  442c9f:	lea    eax,[ecx+0x3]
  442ca2:	cmp    eax,edx
  442ca4:	ja     0x442ea2
  442caa:	mov    BYTE PTR [ecx],0xc
  442cad:	mov    ax,WORD PTR [esi+0xc]
  442cb1:	mov    WORD PTR [ecx+0x1],ax
  442cb5:	add    ecx,0x3
  442cb8:	jmp    0x442e6a
  442cbd:	lea    eax,[ecx+0x2]
  442cc0:	cmp    eax,edx
  442cc2:	ja     0x442ea2
  442cc8:	mov    BYTE PTR [ecx],0xb
  442ccb:	mov    al,BYTE PTR [esi+0xc]
  442cce:	mov    BYTE PTR [ecx+0x1],al
  442cd1:	add    ecx,0x2
  442cd4:	jmp    0x442e6a
  442cd9:	movsx  eax,WORD PTR [esi+0x4]
  442cdd:	inc    eax
  442cde:	add    eax,ecx
  442ce0:	cmp    eax,edx
  442ce2:	ja     0x442ea2
  442ce8:	mov    DWORD PTR ds:0x460624,esi
  442cee:	call   0x442f6e
  442cf3:	mov    edi,DWORD PTR ds:0x460624
  442cf9:	jmp    0x442d40
  442cfb:	movsx  eax,WORD PTR [esi+0x4]
  442cff:	add    eax,0x6
  442d02:	add    eax,ecx
  442d04:	cmp    eax,edx
  442d06:	ja     0x442ea2
  442d0c:	mov    eax,DWORD PTR [edi+0x8]
  442d0f:	cmp    eax,DWORD PTR ds:0x448894
  442d15:	jne    0x442d2b
  442d17:	cmp    BYTE PTR ds:0x4605b6,0x0
  442d1e:	jne    0x442d2b
  442d20:	mov    cl,BYTE PTR ds:0x462d60
  442d26:	call   0x43859a
  442d2b:	mov    edi,esi
  442d2d:	mov    DWORD PTR ds:0x460624,edi
  442d33:	call   0x442ee3
  442d38:	test   al,al
  442d3a:	je     0x442c55
  442d40:	mov    ecx,DWORD PTR ds:0x4605c4
  442d46:	jmp    0x442e70
  442d4b:	cmp    eax,0xe
  442d4e:	je     0x442e55
  442d54:	cmp    eax,0x20
  442d57:	je     0x442dd1
  442d59:	cmp    eax,0x39
  442d5c:	je     0x442d7f
  442d5e:	cmp    eax,0x46
  442d61:	je     0x442dd1
  442d63:	lea    edx,[ecx+0x1]
  442d66:	lea    eax,[ebx+0xff]
  442d6c:	cmp    edx,eax
  442d6e:	ja     0x442ea2
  442d74:	mov    al,BYTE PTR [esi]
  442d76:	mov    BYTE PTR [ecx],al
  442d78:	mov    ecx,edx
  442d7a:	jmp    0x442e6a
  442d7f:	lea    eax,[ecx+0x2]
  442d82:	cmp    eax,edx
  442d84:	ja     0x442ea2
  442d8a:	cmp    esi,DWORD PTR [ebp-0x4]
  442d8d:	jbe    0x442dc7
  442d8f:	xor    eax,eax
  442d91:	inc    eax
  442d92:	cmp    WORD PTR [esi-0xe],ax
  442d96:	jne    0x442dc7
  442d98:	movzx  edx,WORD PTR [esi-0x10]
  442d9c:	push   0x4
  442d9e:	pop    eax
  442d9f:	cmp    dx,ax
  442da2:	jbe    0x442da9
  442da4:	cmp    edx,0x29
  442da7:	jb     0x442dc3
  442da9:	lea    eax,[edx-0x5f]
  442dac:	mov    DWORD PTR [ebp-0x8],0x94
  442db3:	cmp    ax,WORD PTR [ebp-0x8]
  442db7:	ja     0x442dc7
  442db9:	mov    eax,0xab
  442dbe:	cmp    dx,ax
  442dc1:	je     0x442dc7
  442dc3:	mov    BYTE PTR [ecx],0x32
  442dc6:	inc    ecx
  442dc7:	mov    al,BYTE PTR [esi]
  442dc9:	mov    BYTE PTR [ecx],al
  442dcb:	inc    ecx
  442dcc:	jmp    0x442e6a
  442dd1:	cmp    DWORD PTR ds:0x45f994,0x0
  442dd8:	je     0x442de5
  442dda:	mov    BYTE PTR [ecx],0x21
  442ddd:	add    ecx,0x5
  442de0:	jmp    0x442e6a
  442de5:	cmp    BYTE PTR ds:0x462cb6,0x0
  442dec:	je     0x442dc7
  442dee:	lea    eax,[ecx+0x6]
  442df1:	cmp    eax,edx
  442df3:	ja     0x442ea2
  442df9:	movzx  ecx,BYTE PTR ds:0x44db58
  442e00:	mov    eax,ds:0x448988
  442e05:	and    DWORD PTR ds:0x44db5c,0x0
  442e0c:	mov    edi,0x44db58
  442e11:	push   edi
  442e12:	call   DWORD PTR [eax+ecx*4]
  442e15:	mov    ecx,DWORD PTR ds:0x4605c4
  442e1b:	push   0x20
  442e1d:	pop    eax
  442e1e:	cmp    WORD PTR [esi],ax
  442e21:	mov    edx,DWORD PTR ds:0x448884
  442e27:	setne  al
  442e2a:	dec    al
  442e2c:	and    al,0xc6
  442e2e:	add    al,0x47
  442e30:	mov    BYTE PTR [ecx],al
  442e32:	mov    eax,ds:0x44db5c
  442e37:	inc    ecx
  442e38:	push   0x4
  442e3a:	mov    DWORD PTR [ecx],eax
  442e3c:	pop    eax
  442e3d:	add    ecx,eax
  442e3f:	mov    BYTE PTR [ecx],0x0
  442e42:	inc    ecx
  442e43:	mov    DWORD PTR ds:0x4605c4,ecx
  442e49:	mov    ecx,edi
  442e4b:	call   0x43f399
  442e50:	jmp    0x442cf3
  442e55:	lea    eax,[ecx+0x5]
  442e58:	cmp    eax,edx
  442e5a:	ja     0x442ea2
  442e5c:	mov    BYTE PTR [ecx],0xe
  442e5f:	mov    eax,DWORD PTR [esi+0xc]
  442e62:	inc    ecx
  442e63:	push   0x4
  442e65:	mov    DWORD PTR [ecx],eax
  442e67:	pop    eax
  442e68:	add    ecx,eax
  442e6a:	mov    DWORD PTR ds:0x4605c4,ecx
  442e70:	add    esi,0x10
  442e73:	test   BYTE PTR [esi+0x2],0x1
  442e77:	je     0x442e84
  442e79:	lea    edx,[ebx+0xff]
  442e7f:	jmp    0x442c68
  442e84:	mov    eax,DWORD PTR [ebp-0x4]
  442e87:	add    eax,0x10
  442e8a:	cmp    esi,eax
  442e8c:	sete   al
  442e8f:	mov    BYTE PTR [ecx],al
  442e91:	inc    ecx
  442e92:	mov    DWORD PTR ds:0x4605c4,ecx
  442e98:	sub    ecx,ebx
  442e9a:	cmp    ecx,0xff
  442ea0:	jbe    0x442ed3
  442ea2:	mov    ecx,0x7fa
  442ea7:	call   0x441e05
  442eac:	lea    eax,[ebx+0x2]
  442eaf:	mov    ds:0x4605c4,eax
  442eb4:	push   0x2
  442eb6:	xor    eax,eax
  442eb8:	xor    edx,edx
  442eba:	mov    WORD PTR [ebx],0x2
  442ebf:	pop    ecx
  442ec0:	inc    eax
  442ec1:	jmp    0x442ecc
  442ec3:	cmp    WORD PTR [esi+0x2],ax
  442ec7:	jne    0x442ed6
  442ec9:	add    esi,0x10
  442ecc:	cmp    WORD PTR [esi],dx
  442ecf:	jne    0x442ec3
  442ed1:	jmp    0x442ed6
  442ed3:	xor    eax,eax
  442ed5:	inc    eax
  442ed6:	mov    BYTE PTR [ebx],cl
  442ed8:	mov    DWORD PTR ds:0x460624,esi
  442ede:	pop    edi
  442edf:	pop    esi
  442ee0:	pop    ebx
  442ee1:	leave  
  442ee2:	ret    
  442ee3:	xor    edx,edx
  442ee5:	push   edi
  442ee6:	mov    edi,DWORD PTR ds:0x460624
  442eec:	cmp    BYTE PTR ds:0x4605b6,dl
  442ef2:	je     0x442f1d
  442ef4:	mov    eax,DWORD PTR [edi+0x8]
  442ef7:	test   eax,eax
  442ef9:	je     0x442f1d
  442efb:	mov    cl,BYTE PTR [eax+0x6]
  442efe:	cmp    cl,0xb
  442f01:	je     0x442f19
  442f03:	cmp    cl,0x9
  442f06:	je     0x442f19
  442f08:	cmp    cl,0x3
  442f0b:	jne    0x442f1d
  442f0d:	test   BYTE PTR [eax+0x2c],0x1
  442f11:	je     0x442f1d
  442f13:	cmp    WORD PTR [eax+0x30],dx
  442f17:	je     0x442f1d
  442f19:	xor    al,al
  442f1b:	pop    edi
  442f1c:	ret    
  442f1d:	push   esi
  442f1e:	mov    esi,DWORD PTR ds:0x4605c4
  442f24:	mov    BYTE PTR [esi],0xd
  442f27:	mov    eax,DWORD PTR [edi+0x8]
  442f2a:	mov    DWORD PTR [esi+0x1],eax
  442f2d:	cmp    DWORD PTR [edi+0x8],edx
  442f30:	je     0x442f43
  442f32:	cmp    BYTE PTR ds:0x462d60,0x23
  442f39:	je     0x442f43
  442f3b:	mov    BYTE PTR [esi+0x5],dl
  442f3e:	add    esi,0x6
  442f41:	jmp    0x442f63
  442f43:	mov    al,BYTE PTR [edi+0x4]
  442f46:	mov    BYTE PTR [esi+0x5],al
  442f49:	movsx  eax,WORD PTR [edi+0x4]
  442f4d:	push   eax
  442f4e:	push   DWORD PTR [edi+0xc]
  442f51:	add    esi,0x6
  442f54:	push   esi
  442f55:	call   0x447646
  442f5a:	movsx  eax,WORD PTR [edi+0x4]
  442f5e:	add    esp,0xc
  442f61:	add    esi,eax
  442f63:	mov    DWORD PTR ds:0x4605c4,esi
  442f69:	pop    esi
  442f6a:	mov    al,0x1
  442f6c:	pop    edi
  442f6d:	ret    
  442f6e:	push   esi
  442f6f:	mov    esi,DWORD PTR ds:0x4605c4
  442f75:	push   edi
  442f76:	mov    edi,DWORD PTR ds:0x460624
  442f7c:	mov    al,BYTE PTR [edi]
  442f7e:	mov    BYTE PTR [esi],al
  442f80:	mov    al,BYTE PTR [edi+0x4]
  442f83:	mov    BYTE PTR [esi+0x1],al
  442f86:	movsx  eax,WORD PTR [edi+0x4]
  442f8a:	push   eax
  442f8b:	push   DWORD PTR [edi+0xc]
  442f8e:	add    esi,0x2
  442f91:	push   esi
  442f92:	call   0x447646
  442f97:	movsx  eax,WORD PTR [edi+0x4]
  442f9b:	add    esp,0xc
  442f9e:	add    edi,0x10
  442fa1:	add    esi,eax
  442fa3:	mov    DWORD PTR ds:0x460624,edi
  442fa9:	pop    edi
  442faa:	mov    DWORD PTR ds:0x4605c4,esi
  442fb0:	pop    esi
  442fb1:	ret    
  442fb2:	mov    DWORD PTR ds:0x460624,ecx
  442fb8:	mov    DWORD PTR ds:0x4605c4,edx
  442fbe:	call   0x442c30
  442fc3:	and    eax,0x8000
  442fc8:	neg    eax
  442fca:	sbb    eax,eax
  442fcc:	not    eax
  442fce:	and    eax,DWORD PTR ds:0x460624
  442fd4:	ret    
  442fd5:	push   ebp
  442fd6:	mov    ebp,esp
  442fd8:	push   ecx
  442fd9:	push   ebx
  442fda:	mov    bl,BYTE PTR ds:0x45f98f
  442fe0:	push   esi
  442fe1:	mov    BYTE PTR ds:0x45f98f,0x1
  442fe8:	call   0x434ba9
  442fed:	mov    esi,0x463888
  442ff2:	mov    edx,esi
  442ff4:	mov    ecx,0x45fac8
  442ff9:	mov    BYTE PTR ds:0x45f98f,bl
  442fff:	call   0x442fb2
  443004:	xor    edx,edx
  443006:	test   eax,eax
  443008:	jne    0x443012
  44300a:	push   eax
  44300b:	mov    ecx,0x7ea
  443010:	jmp    0x44302b
  443012:	cmp    WORD PTR [eax],dx
  443015:	jne    0x443023
  443017:	mov    edx,DWORD PTR [ebp+0x8]
  44301a:	mov    ecx,esi
  44301c:	call   0x431d7f
  443021:	jmp    0x443034
  443023:	push   edx
  443024:	xor    edx,edx
  443026:	mov    ecx,0x7d9
  44302b:	call   0x42ee80
  443030:	xor    eax,eax
  443032:	xor    edx,edx
  443034:	pop    esi
  443035:	pop    ebx
  443036:	pop    ecx
  443037:	pop    ebp
  443038:	ret    0x4
  44303b:	push   ebx
  44303c:	push   esi
  44303d:	mov    esi,edx
  44303f:	mov    DWORD PTR ds:0x460624,0x45fac8
  443049:	mov    eax,DWORD PTR [esi+0x5]
  44304c:	mov    ds:0x4605c4,eax
  443051:	mov    BYTE PTR [eax+0x1],0x0
  443055:	mov    al,BYTE PTR [ecx]
  443057:	cmp    al,0x5
  443059:	je     0x44306f
  44305b:	cmp    al,0x6
  44305d:	je     0x44306f
  44305f:	cmp    al,0x77
  443061:	je     0x44306f
  443063:	push   0x0
  443065:	mov    ecx,0x889
  44306a:	jmp    0x443124
  44306f:	mov    bl,BYTE PTR ds:0x45f98f
  443075:	push   0x3
  443077:	mov    BYTE PTR ds:0x45f98f,0x1
  44307e:	mov    BYTE PTR ds:0x4605b3,0x1
  443085:	pop    edx
  443086:	cmp    al,0x77
  443088:	jne    0x443099
  44308a:	mov    ax,WORD PTR [ecx+0x1]
  44308e:	sub    ax,dx
  443091:	movzx  edx,ax
  443094:	add    ecx,0x3
  443097:	jmp    0x4430a0
  443099:	movzx  edx,BYTE PTR [ecx+0x1]
  44309d:	add    ecx,0x2
  4430a0:	call   0x434ba9
  4430a5:	xor    edx,edx
  4430a7:	test   al,al
  4430a9:	jne    0x4430b9
  4430ab:	push   0x0
  4430ad:	mov    ecx,0x889
  4430b2:	call   0x42ee80
  4430b7:	jmp    0x4430c8
  4430b9:	mov    eax,ds:0x460624
  4430be:	cmp    WORD PTR [eax],dx
  4430c1:	je     0x4430d2
  4430c3:	call   0x44313a
  4430c8:	mov    ecx,DWORD PTR ds:0x4605c4
  4430ce:	xor    edx,edx
  4430d0:	jmp    0x443108
  4430d2:	mov    ecx,DWORD PTR ds:0x4605c4
  4430d8:	push   0x3
  4430da:	mov    BYTE PTR [ecx],0x6a
  4430dd:	pop    eax
  4430de:	mov    BYTE PTR [ecx+0x1],al
  4430e1:	mov    WORD PTR [ecx+0x2],0x6a00
  4430e7:	mov    BYTE PTR [ecx+0x4],al
  4430ea:	mov    WORD PTR [ecx+0x5],0x6b00
  4430f0:	mov    BYTE PTR [ecx+0x7],al
  4430f3:	mov    WORD PTR [ecx+0x8],0x6b00
  4430f9:	mov    BYTE PTR [ecx+0xa],al
  4430fc:	mov    BYTE PTR [ecx+0xb],dl
  4430ff:	add    ecx,0xc
  443102:	mov    DWORD PTR ds:0x4605c4,ecx
  443108:	mov    eax,ds:0x460624
  44310d:	mov    BYTE PTR ds:0x4605b3,dl
  443113:	mov    BYTE PTR ds:0x45f98f,bl
  443119:	cmp    WORD PTR [eax],dx
  44311c:	je     0x443131
  44311e:	push   edx
  44311f:	mov    ecx,0x88a
  443124:	xor    edx,edx
  443126:	call   0x42ee80
  44312b:	mov    ecx,DWORD PTR ds:0x4605c4
  443131:	mov    DWORD PTR [esi+0xe],ecx
  443134:	mov    eax,DWORD PTR [esi+0x5]
  443137:	pop    esi
  443138:	pop    ebx
  443139:	ret    
  44313a:	push   ebp
  44313b:	mov    ebp,esp
  44313d:	and    esp,0xfffffff8
  443140:	sub    esp,0x14
  443143:	mov    ecx,DWORD PTR ds:0x4605c4
  443149:	push   ebx
  44314a:	push   esi
  44314b:	push   edi
  44314c:	push   0x3
  44314e:	pop    edx
  44314f:	push   0x5e
  443151:	xor    ebx,ebx
  443153:	mov    BYTE PTR [ecx],0x6a
  443156:	mov    BYTE PTR [ecx+0x1],dl
  443159:	pop    esi
  44315a:	mov    DWORD PTR [esp+0x14],ecx
  44315e:	or     al,0xff
  443160:	mov    BYTE PTR [ecx+0x2],bl
  443163:	add    ecx,edx
  443165:	mov    edx,DWORD PTR ds:0x460624
  44316b:	push   0x76
  44316d:	mov    DWORD PTR [esp+0x14],ebx
  443171:	mov    DWORD PTR ds:0x4605c4,ecx
  443177:	mov    DWORD PTR [esp+0x20],0x69
  44317f:	pop    edi
  443180:	mov    DWORD PTR [esp+0x18],0x68
  443188:	jmp    0x44318e
  44318a:	mov    al,BYTE PTR [esp+0xe]
  44318e:	inc    al
  443190:	mov    BYTE PTR [esp+0xe],al
  443194:	movzx  eax,WORD PTR [edx+0x2]
  443198:	test   ax,ax
  44319b:	jne    0x4431c0
  44319d:	mov    BYTE PTR [ecx],0x6a
  4431a0:	push   0x3
  4431a2:	pop    eax
  4431a3:	mov    BYTE PTR [ecx+0x1],al
  4431a6:	mov    DWORD PTR [ecx+0x2],0x36600
  4431ad:	xor    eax,eax
  4431af:	mov    WORD PTR [ecx+0x6],0x36b
  4431b5:	mov    BYTE PTR [ecx+0x8],al
  4431b8:	add    ecx,0x9
  4431bb:	jmp    0x4433b3
  4431c0:	test   al,0x4
  4431c2:	je     0x44328b
  4431c8:	movzx  eax,WORD PTR [edx]
  4431cb:	cmp    eax,0x5d
  4431ce:	je     0x443243
  4431d0:	cmp    eax,esi
  4431d2:	je     0x4431ef
  4431d4:	cmp    eax,0x67
  4431d7:	jle    0x4433b9
  4431dd:	cmp    eax,0x69
  4431e0:	jle    0x44319d
  4431e2:	cmp    eax,0x75
  4431e5:	je     0x44321d
  4431e7:	cmp    eax,edi
  4431e9:	jne    0x4433b9
  4431ef:	cmp    BYTE PTR [esp+0xe],0x0
  4431f4:	push   0x3
  4431f6:	mov    BYTE PTR [ecx],0x66
  4431f9:	pop    edx
  4431fa:	mov    BYTE PTR [ecx+0x1],dl
  4431fd:	mov    BYTE PTR [ecx+0x2],0x0
  443201:	je     0x44320a
  443203:	mov    eax,DWORD PTR [esp+0x14]
  443207:	mov    BYTE PTR [eax],0x69
  44320a:	mov    BYTE PTR [ecx+0x3],0x6b
  44320e:	mov    BYTE PTR [ecx+0x4],dl
  443211:	mov    BYTE PTR [ecx+0x5],0x0
  443215:	add    ecx,0x6
  443218:	jmp    0x443403
  44321d:	add    edx,0x10
  443220:	mov    DWORD PTR ds:0x460624,edx
  443226:	call   0x44313a
  44322b:	mov    edx,DWORD PTR ds:0x460624
  443231:	test   eax,eax
  443233:	jne    0x44323e
  443235:	cmp    WORD PTR [edx],di
  443238:	jne    0x443412
  44323e:	cmp    WORD PTR [edx],di
  443241:	jmp    0x443267
  443243:	add    edx,0x10
  443246:	mov    DWORD PTR ds:0x460624,edx
  44324c:	call   0x44313a
  443251:	mov    edx,DWORD PTR ds:0x460624
  443257:	test   eax,eax
  443259:	jne    0x443264
  44325b:	cmp    WORD PTR [edx],si
  44325e:	jne    0x443412
  443264:	cmp    WORD PTR [edx],si
  443267:	je     0x44327d
  443269:	push   0x0
  44326b:	xor    edx,edx
  44326d:	mov    ecx,0x881
  443272:	call   0x42ee80
  443277:	mov    edx,DWORD PTR ds:0x460624
  44327d:	mov    ecx,DWORD PTR ds:0x4605c4
  443283:	add    edx,0x10
  443286:	jmp    0x4433b9
  44328b:	push   0x3
  44328d:	pop    eax
  44328e:	mov    BYTE PTR [ecx],0x6a
  443291:	mov    BYTE PTR [ecx+0x1],al
  443294:	lea    edi,[ecx+0x3]
  443297:	push   0x24
  443299:	lea    eax,[edi+0x3]
  44329c:	mov    ds:0x4605c4,eax
  4432a1:	pop    eax
  4432a2:	mov    BYTE PTR [ecx+0x2],0x0
  4432a6:	mov    cl,al
  4432a8:	call   0x442bca
  4432ad:	mov    esi,eax
  4432af:	xor    eax,eax
  4432b1:	movzx  ebx,WORD PTR [esi+0x2]
  4432b5:	mov    WORD PTR [esi+0x2],ax
  4432b9:	call   0x442c30
  4432be:	mov    edx,DWORD PTR ds:0x460624
  4432c4:	test   eax,0x8000
  4432c9:	je     0x4432e2
  4432cb:	movzx  eax,WORD PTR [edx]
  4432ce:	push   0x68
  4432d0:	pop    ecx
  4432d1:	cmp    ax,cx
  4432d4:	je     0x4432e2
  4432d6:	push   0x69
  4432d8:	pop    ecx
  4432d9:	cmp    ax,cx
  4432dc:	jne    0x443416
  4432e2:	mov    WORD PTR [esi+0x2],bx
  4432e6:	cmp    WORD PTR [edx],0x50
  4432ea:	jne    0x443377
  4432f0:	add    edx,0x10
  4432f3:	mov    DWORD PTR ds:0x460624,edx
  4432f9:	cmp    WORD PTR [edx],0x39
  4432fd:	je     0x44330f
  4432ff:	mov    edx,0x41e9b4
  443304:	call   0x441e1b
  443309:	mov    edx,DWORD PTR ds:0x460624
  44330f:	add    edx,0x10
  443312:	push   0x18
  443314:	mov    DWORD PTR ds:0x460624,edx
  44331a:	pop    eax
  44331b:	lea    edx,[esp+0xf]
  44331f:	lea    ecx,[edi+0x3]
  443322:	mov    BYTE PTR [edi],0x53
  443325:	mov    WORD PTR [edi+0x1],ax
  443329:	call   0x431d7f
  44332e:	mov    DWORD PTR [edi+0x7],eax
  443331:	lea    eax,[edi+0x18]
  443334:	mov    ds:0x4605c4,eax
  443339:	call   0x44313a
  44333e:	mov    edx,DWORD PTR ds:0x460624
  443344:	push   0x24
  443346:	pop    eax
  443347:	cmp    WORD PTR [edx],ax
  44334a:	je     0x44335c
  44334c:	mov    edx,0x41f748
  443351:	call   0x441e1b
  443356:	mov    edx,DWORD PTR ds:0x460624
  44335c:	mov    eax,ds:0x4605c4
  443361:	mov    ebx,DWORD PTR [esp+0x10]
  443365:	push   0x3
  443367:	pop    ecx
  443368:	mov    WORD PTR [eax+0x1],cx
  44336c:	add    edx,0x10
  44336f:	mov    BYTE PTR [eax],0x4e
  443372:	lea    ecx,[eax+0x3]
  443375:	jmp    0x44339e
  443377:	mov    BYTE PTR [edi],0x63
  44337a:	movzx  ecx,BYTE PTR ds:0x462d60
  443381:	call   0x446047
  443386:	mov    ebx,DWORD PTR [esp+0x10]
  44338a:	mov    ecx,DWORD PTR ds:0x4605c4
  443390:	add    ebx,eax
  443392:	mov    eax,ecx
  443394:	sub    eax,edi
  443396:	mov    DWORD PTR [esp+0x10],ebx
  44339a:	mov    WORD PTR [edi+0x1],ax
  44339e:	push   0x3
  4433a0:	pop    eax
  4433a1:	push   0x5e
  4433a3:	mov    BYTE PTR [ecx],0x6b
  4433a6:	pop    esi
  4433a7:	mov    BYTE PTR [ecx+0x1],al
  4433aa:	push   0x76
  4433ac:	mov    BYTE PTR [ecx+0x2],0x0
  4433b0:	add    ecx,eax
  4433b2:	pop    edi
  4433b3:	mov    DWORD PTR ds:0x4605c4,ecx
  4433b9:	movzx  eax,WORD PTR [edx]
  4433bc:	add    edx,0x10
  4433bf:	mov    DWORD PTR ds:0x460624,edx
  4433c5:	cmp    ax,WORD PTR [esp+0x18]
  4433ca:	je     0x44318a
  4433d0:	cmp    ax,WORD PTR [esp+0x1c]
  4433d5:	je     0x44318a
  4433db:	sub    edx,0x10
  4433de:	cmp    BYTE PTR [esp+0xe],0x0
  4433e3:	mov    DWORD PTR ds:0x460624,edx
  4433e9:	je     0x4433f4
  4433eb:	mov    eax,DWORD PTR [esp+0x14]
  4433ef:	push   0x69
  4433f1:	pop    edx
  4433f2:	mov    BYTE PTR [eax],dl
  4433f4:	push   0x3
  4433f6:	mov    BYTE PTR [ecx],0x6b
  4433f9:	pop    eax
  4433fa:	mov    BYTE PTR [ecx+0x1],al
  4433fd:	mov    BYTE PTR [ecx+0x2],0x0
  443401:	add    ecx,eax
  443403:	mov    eax,ebx
  443405:	mov    DWORD PTR ds:0x4605c4,ecx
  44340b:	pop    edi
  44340c:	pop    esi
  44340d:	pop    ebx
  44340e:	mov    esp,ebp
  443410:	pop    ebp
  443411:	ret    
  443412:	xor    eax,eax
  443414:	jmp    0x44340b
  443416:	push   0x3
  443418:	pop    eax
  443419:	sub    DWORD PTR ds:0x4605c4,eax
  44341f:	mov    eax,DWORD PTR [esp+0x10]
  443423:	mov    WORD PTR [esi+0x2],bx
  443427:	jmp    0x44340b
  443429:	push   ebp
  44342a:	mov    ebp,esp
  44342c:	sub    esp,0x1c
  44342f:	xor    al,al
  443431:	push   ebx
  443432:	push   edi
  443433:	mov    BYTE PTR [ebp-0x1],al
  443436:	xor    ebx,ebx
  443438:	mov    BYTE PTR [ebp-0x3],al
  44343b:	mov    eax,ds:0x4605c4
  443440:	mov    edi,edx
  443442:	mov    DWORD PTR [ebp-0xc],edi
  443445:	mov    DWORD PTR [ebp-0x10],ecx
  443448:	mov    BYTE PTR [ebp-0x2],0xff
  44344c:	mov    DWORD PTR [ebp-0x14],eax
  44344f:	cmp    BYTE PTR ds:0x4605b6,bl
  443455:	je     0x44345e
  443457:	xor    eax,eax
  443459:	jmp    0x44373b
  44345e:	mov    ecx,0x44db54
  443463:	call   0x43f399
  443468:	mov    dl,BYTE PTR [ebp-0x2]
  44346b:	mov    DWORD PTR [ebp-0x1c],eax
  44346e:	push   esi
  44346f:	inc    dl
  443471:	mov    BYTE PTR [ebp-0x2],dl
  443474:	mov    edx,edi
  443476:	mov    ecx,0x44db54
  44347b:	call   0x43f399
  443480:	push   0x24
  443482:	mov    DWORD PTR [ebp-0x18],eax
  443485:	pop    eax
  443486:	mov    cl,al
  443488:	mov    DWORD PTR ds:0x4605c4,0x44e4eb
  443492:	call   0x442bca
  443497:	mov    esi,eax
  443499:	xor    eax,eax
  44349b:	movzx  edi,WORD PTR [esi+0x2]
  44349f:	mov    WORD PTR [esi+0x2],ax
  4434a3:	mov    BYTE PTR [ebp-0x4],al
  4434a6:	mov    eax,ds:0x460624
  4434ab:	cmp    WORD PTR [eax],0x7
  4434af:	jne    0x4434b7
  4434b1:	mov    al,BYTE PTR [eax+0x4]
  4434b4:	mov    BYTE PTR [ebp-0x4],al
  4434b7:	call   0x442c30
  4434bc:	mov    ecx,DWORD PTR ds:0x460624
  4434c2:	test   eax,0x8000
  4434c7:	je     0x4434e0
  4434c9:	movzx  eax,WORD PTR [ecx]
  4434cc:	push   0x68
  4434ce:	pop    edx
  4434cf:	cmp    ax,dx
  4434d2:	je     0x4434e0
  4434d4:	push   0x69
  4434d6:	pop    edx
  4434d7:	cmp    ax,dx
  4434da:	jne    0x443741
  4434e0:	mov    WORD PTR [esi+0x2],di
  4434e4:	cmp    WORD PTR [ecx],0x50
  4434e8:	jne    0x4435c3
  4434ee:	mov    ecx,DWORD PTR ds:0x4605c4
  4434f4:	mov    eax,ecx
  4434f6:	mov    esi,0x44e4e8
  4434fb:	push   0x18
  4434fd:	sub    eax,esi
  4434ff:	pop    edx
  443500:	mov    BYTE PTR ds:0x44e4e8,0x53
  443507:	cmp    eax,edx
  443509:	jae    0x443516
  44350b:	mov    ecx,0x44e500
  443510:	mov    DWORD PTR ds:0x4605c4,ecx
  443516:	mov    edi,DWORD PTR [ebp-0xc]
  443519:	sub    ecx,esi
  44351b:	mov    WORD PTR ds:0x44e4e9,cx
  443522:	mov    edx,edi
  443524:	mov    ecx,esi
  443526:	call   0x43f399
  44352b:	mov    cl,BYTE PTR [ebp-0x1]
  44352e:	inc    cl
  443530:	mov    BYTE PTR [ebp-0x1],cl
  443533:	cmp    cl,0x1
  443536:	jne    0x443540
  443538:	test   bl,bl
  44353a:	je     0x443540
  44353c:	mov    BYTE PTR [ebp-0x1],0x2
  443540:	mov    eax,ds:0x460624
  443545:	add    eax,0x10
  443548:	mov    BYTE PTR [ebp-0x3],0x1
  44354c:	cmp    WORD PTR [eax],0x39
  443550:	mov    ds:0x460624,eax
  443555:	je     0x443566
  443557:	mov    edx,0x41e9b4
  44355c:	call   0x441e1b
  443561:	mov    eax,ds:0x460624
  443566:	add    eax,0x10
  443569:	push   0x1
  44356b:	mov    edx,edi
  44356d:	lea    ecx,[ebp-0x5]
  443570:	mov    ds:0x460624,eax
  443575:	call   0x443429
  44357a:	test   eax,0x8000
  44357f:	jne    0x443738
  443585:	mov    eax,ds:0x460624
  44358a:	xor    ebx,ebx
  44358c:	push   0x24
  44358e:	pop    ecx
  44358f:	inc    ebx
  443590:	cmp    WORD PTR [eax],cx
  443593:	je     0x4435a4
  443595:	mov    edx,0x41f748
  44359a:	call   0x441e1b
  44359f:	mov    eax,ds:0x460624
  4435a4:	add    eax,0x10
  4435a7:	mov    ds:0x460624,eax
  4435ac:	mov    WORD PTR ds:0x44e4e8,0x34e
  4435b5:	mov    BYTE PTR ds:0x44e4ea,0x0
  4435bc:	mov    ecx,esi
  4435be:	jmp    0x443699
  4435c3:	cmp    DWORD PTR ds:0x45f994,0x0
  4435ca:	mov    al,ds:0x462d60
  4435cf:	mov    cl,BYTE PTR ds:0x460567
  4435d5:	je     0x443647
  4435d7:	cmp    BYTE PTR [ebp+0x8],0x0
  4435db:	jne    0x443647
  4435dd:	cmp    al,0xa
  4435df:	je     0x4435ea
  4435e1:	cmp    al,0x42
  4435e3:	jne    0x44364b
  4435e5:	cmp    cl,0xa
  4435e8:	jne    0x44364d
  4435ea:	xor    edx,edx
  4435ec:	inc    edx
  4435ed:	cmp    BYTE PTR [ebp-0x4],dl
  4435f0:	jbe    0x443647
  4435f2:	mov    edi,DWORD PTR [ebp-0xc]
  4435f5:	push   0x18
  4435f7:	pop    eax
  4435f8:	mov    DWORD PTR ds:0x44e4ef,edx
  4435fe:	mov    BYTE PTR ds:0x44e4fd,dl
  443604:	mov    esi,0x44e4e8
  443609:	mov    edx,edi
  44360b:	mov    ecx,esi
  44360d:	mov    BYTE PTR ds:0x44e4e8,0x53
  443614:	mov    ds:0x44e4e9,ax
  44361a:	mov    DWORD PTR ds:0x44e4eb,0x1010b04
  443624:	call   0x43f399
  443629:	sub    DWORD PTR ds:0x460624,0x10
  443630:	push   0x1
  443632:	mov    edx,edi
  443634:	lea    ecx,[ebp-0x5]
  443637:	mov    BYTE PTR [ebp-0x1],0x1
  44363b:	call   0x443429
  443640:	add    ebx,eax
  443642:	jmp    0x4435ac
  443647:	cmp    al,0x42
  443649:	je     0x44364d
  44364b:	mov    cl,al
  44364d:	mov    BYTE PTR ds:0x44e4e8,cl
  443653:	cmp    cl,0xa
  443656:	jne    0x44366d
  443658:	cmp    BYTE PTR ds:0x44e4ec,0x7
  44365f:	jne    0x44366d
  443661:	cmp    BYTE PTR ds:0x44e4eb,0xb
  443668:	jne    0x44366d
  44366a:	inc    ebx
  44366b:	jmp    0x443677
  44366d:	movzx  ecx,al
  443670:	call   0x446047
  443675:	add    ebx,eax
  443677:	cmp    BYTE PTR [ebp-0x3],0x0
  44367b:	je     0x443680
  44367d:	inc    BYTE PTR [ebp-0x1]
  443680:	mov    eax,ds:0x4605c4
  443685:	mov    edi,DWORD PTR [ebp-0xc]
  443688:	mov    ecx,0x44e4e8
  44368d:	sub    eax,ecx
  44368f:	mov    BYTE PTR [ebp-0x3],0x0
  443693:	mov    ds:0x44e4e9,ax
  443699:	mov    edx,edi
  44369b:	call   0x43f399
  4436a0:	mov    eax,ds:0x460624
  4436a5:	movzx  esi,WORD PTR [eax]
  4436a8:	add    eax,0x10
  4436ab:	cmp    BYTE PTR [ebp+0x8],0x0
  4436af:	mov    ds:0x460624,eax
  4436b4:	jne    0x4436d5
  4436b6:	mov    dl,BYTE PTR [ebp-0x2]
  4436b9:	test   dl,dl
  4436bb:	jne    0x4436d5
  4436bd:	push   0x68
  4436bf:	pop    ecx
  4436c0:	cmp    si,cx
  4436c3:	je     0x4436d5
  4436c5:	push   0x69
  4436c7:	pop    ecx
  4436c8:	cmp    si,cx
  4436cb:	je     0x4436d5
  4436cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4436d0:	mov    BYTE PTR [ecx],0x4b
  4436d3:	jmp    0x4436ec
  4436d5:	mov    edx,edi
  4436d7:	mov    ecx,0x44db54
  4436dc:	call   0x43f399
  4436e1:	mov    dl,BYTE PTR [ebp-0x2]
  4436e4:	mov    BYTE PTR [eax],0x6b
  4436e7:	mov    eax,ds:0x460624
  4436ec:	push   0x68
  4436ee:	pop    ecx
  4436ef:	cmp    si,cx
  4436f2:	je     0x44346f
  4436f8:	push   0x69
  4436fa:	pop    ecx
  4436fb:	cmp    si,cx
  4436fe:	je     0x44346f
  443704:	mov    ecx,DWORD PTR [ebp-0x10]
  443707:	sub    eax,0x10
  44370a:	mov    ds:0x460624,eax
  44370f:	mov    al,BYTE PTR [ebp-0x1]
  443712:	mov    BYTE PTR [ecx],al
  443714:	mov    ecx,DWORD PTR [ebp-0x14]
  443717:	mov    DWORD PTR ds:0x4605c4,ecx
  44371d:	test   dl,dl
  44371f:	je     0x443729
  443721:	mov    eax,DWORD PTR [ebp-0x1c]
  443724:	push   0x69
  443726:	pop    ecx
  443727:	mov    BYTE PTR [eax],cl
  443729:	mov    edx,edi
  44372b:	mov    ecx,0x44db54
  443730:	call   0x43f399
  443735:	mov    BYTE PTR [eax],0x6b
  443738:	mov    eax,ebx
  44373a:	pop    esi
  44373b:	pop    edi
  44373c:	pop    ebx
  44373d:	leave  
  44373e:	ret    0x4
  443741:	mov    ecx,DWORD PTR [ebp-0x14]
  443744:	mov    DWORD PTR ds:0x4605c4,ecx
  44374a:	mov    ecx,DWORD PTR [ebp-0x10]
  44374d:	mov    WORD PTR [esi+0x2],di
  443751:	mov    BYTE PTR [ecx],0x0
  443754:	jmp    0x443738
  443756:	push   ebp
  443757:	mov    ebp,esp
  443759:	sub    esp,0x10
  44375c:	cmp    BYTE PTR ds:0x4605b6,0x0
  443763:	push   esi
  443764:	mov    DWORD PTR [ebp-0x4],ecx
  443767:	je     0x443770
  443769:	xor    eax,eax
  44376b:	jmp    0x44396a
  443770:	mov    eax,ds:0x460624
  443775:	push   edi
  443776:	xor    edi,edi
  443778:	cmp    WORD PTR [eax+0x2],di
  44377c:	jne    0x443785
  44377e:	xor    eax,eax
  443780:	jmp    0x443969
  443785:	add    eax,0x10
  443788:	cmp    WORD PTR [eax+0x2],di
  44378c:	jne    0x443785
  44378e:	add    eax,0x10
  443791:	push   ebx
  443792:	mov    ecx,0x203
  443797:	mov    DWORD PTR [ebp-0xc],eax
  44379a:	call   0x43f45b
  44379f:	mov    ebx,eax
  4437a1:	mov    eax,ds:0x460624
  4437a6:	mov    DWORD PTR [ebp-0x8],ebx
  4437a9:	movzx  eax,WORD PTR [eax]
  4437ac:	cmp    eax,0x6
  4437af:	je     0x44389a
  4437b5:	cmp    eax,0x5
  4437b8:	je     0x44389a
  4437be:	mov    esi,DWORD PTR ds:0x4605c4
  4437c4:	lea    eax,[ebx+0x3]
  4437c7:	mov    ds:0x4605c4,eax
  4437cc:	call   0x442c30
  4437d1:	test   eax,0x8000
  4437d6:	jne    0x44396d
  4437dc:	mov    eax,ds:0x460624
  4437e1:	cmp    WORD PTR [eax],0x50
  4437e5:	jne    0x44396d
  4437eb:	mov    ecx,DWORD PTR ds:0x4605c4
  4437f1:	mov    eax,ecx
  4437f3:	sub    eax,ebx
  4437f5:	mov    BYTE PTR [ebx],0x53
  4437f8:	cmp    eax,0x18
  4437fb:	jae    0x443806
  4437fd:	lea    ecx,[ebx+0x18]
  443800:	mov    DWORD PTR ds:0x4605c4,ecx
  443806:	mov    edx,DWORD PTR [ebp-0x4]
  443809:	sub    ecx,ebx
  44380b:	mov    WORD PTR [ebx+0x1],cx
  44380f:	mov    ecx,ebx
  443811:	call   0x43f399
  443816:	mov    eax,ds:0x460624
  44381b:	add    eax,0x10
  44381e:	mov    ds:0x460624,eax
  443823:	cmp    WORD PTR [eax],0x39
  443827:	je     0x443838
  443829:	mov    edx,0x41e9b4
  44382e:	call   0x441e1b
  443833:	mov    eax,ds:0x460624
  443838:	mov    DWORD PTR ds:0x4605c4,esi
  44383e:	mov    esi,DWORD PTR [ebp-0x4]
  443841:	add    eax,0x10
  443844:	mov    ecx,esi
  443846:	mov    ds:0x460624,eax
  44384b:	call   0x443756
  443850:	test   eax,0x8000
  443855:	jne    0x44395e
  44385b:	mov    eax,ds:0x460624
  443860:	cmp    WORD PTR [eax],0x24
  443864:	je     0x443875
  443866:	mov    edx,0x41f748
  44386b:	call   0x441e1b
  443870:	mov    eax,ds:0x460624
  443875:	add    eax,0x10
  443878:	push   0x3
  44387a:	mov    ds:0x460624,eax
  44387f:	pop    eax
  443880:	mov    edx,esi
  443882:	mov    ecx,ebx
  443884:	mov    BYTE PTR [ebx],0x4e
  443887:	mov    WORD PTR [ebx+0x1],ax
  44388b:	call   0x43f399
  443890:	mov    eax,ds:0x460624
  443895:	jmp    0x443936
  44389a:	mov    esi,DWORD PTR ds:0x4605c4
  4438a0:	sub    esi,0x462d60
  4438a6:	mov    ecx,esi
  4438a8:	mov    DWORD PTR [ebp-0x10],esi
  4438ab:	call   0x43f45b
  4438b0:	push   esi
  4438b1:	mov    ebx,eax
  4438b3:	push   0x462d60
  4438b8:	push   ebx
  4438b9:	call   0x447646
  4438be:	mov    eax,DWORD PTR [ebp-0x8]
  4438c1:	mov    esi,DWORD PTR ds:0x460624
  4438c7:	add    esp,0xc
  4438ca:	lea    ecx,[eax+0x3]
  4438cd:	push   edi
  4438ce:	push   DWORD PTR [ebp-0xc]
  4438d1:	mov    BYTE PTR [eax],0x77
  4438d4:	movsx  edx,WORD PTR [esi+0x4]
  4438d8:	lea    eax,[ecx+0x200]
  4438de:	push   eax
  4438df:	push   ecx
  4438e0:	mov    ecx,DWORD PTR [esi+0xc]
  4438e3:	call   0x434790
  4438e8:	mov    DWORD PTR ds:0x460624,esi
  4438ee:	mov    esi,DWORD PTR [ebp-0x10]
  4438f1:	push   esi
  4438f2:	push   ebx
  4438f3:	push   0x462d60
  4438f8:	mov    edi,eax
  4438fa:	call   0x447646
  4438ff:	push   ebx
  443900:	call   DWORD PTR ds:0x464354
  443906:	mov    ebx,DWORD PTR [ebp-0x8]
  443909:	mov    edx,DWORD PTR [ebp-0x4]
  44390c:	lea    eax,[esi+0x462d60]
  443912:	mov    ds:0x4605c4,eax
  443917:	lea    eax,[ebx+0x3]
  44391a:	sub    eax,ebx
  44391c:	add    eax,edi
  44391e:	add    esp,0x10
  443921:	mov    ecx,ebx
  443923:	mov    WORD PTR [ebx+0x1],ax
  443927:	call   0x43f399
  44392c:	mov    eax,ds:0x460624
  443931:	add    eax,0x10
  443934:	xor    edi,edi
  443936:	movzx  ecx,WORD PTR [eax]
  443939:	add    eax,0x10
  44393c:	mov    ds:0x460624,eax
  443941:	cmp    ecx,0x68
  443944:	je     0x4437a9
  44394a:	cmp    ecx,0x69
  44394d:	je     0x4437a9
  443953:	sub    eax,0x10
  443956:	xor    edi,edi
  443958:	mov    ds:0x460624,eax
  44395d:	inc    edi
  44395e:	push   ebx
  44395f:	call   DWORD PTR ds:0x464354
  443965:	mov    eax,edi
  443967:	pop    ecx
  443968:	pop    ebx
  443969:	pop    edi
  44396a:	pop    esi
  44396b:	leave  
  44396c:	ret    
  44396d:	push   edi
  44396e:	xor    edx,edx
  443970:	mov    ecx,0x883
  443975:	call   0x42ee80
  44397a:	push   ebx
  44397b:	mov    DWORD PTR ds:0x4605c4,esi
  443981:	call   DWORD PTR ds:0x464354
  443987:	xor    eax,eax
  443989:	jmp    0x443967
  44398b:	mov    ecx,DWORD PTR ds:0x4605c4
  443991:	push   ebx
  443992:	push   esi
  443993:	mov    esi,DWORD PTR ds:0x460624
  443999:	push   edi
  44399a:	push   0x26
  44399c:	pop    edi
  44399d:	push   0x28
  44399f:	pop    ebx
  4439a0:	push   0x40
  4439a2:	pop    edx
  4439a3:	movzx  eax,WORD PTR [esi]
  4439a6:	cmp    ax,di
  4439a9:	jb     0x4439b0
  4439ab:	cmp    ax,bx
  4439ae:	jbe    0x4439b5
  4439b0:	cmp    ax,dx
  4439b3:	jne    0x4439df
  4439b5:	cmp    ax,dx
  4439b8:	je     0x4439c0
  4439ba:	cmp    WORD PTR [esi+0x10],dx
  4439be:	jne    0x4439df
  4439c0:	cmp    ax,di
  4439c3:	jb     0x4439d6
  4439c5:	cmp    ax,bx
  4439c8:	ja     0x4439d6
  4439ca:	mov    al,BYTE PTR [esi]
  4439cc:	sub    al,0x25
  4439ce:	mov    BYTE PTR [ecx],al
  4439d0:	inc    ecx
  4439d1:	add    esi,0x10
  4439d4:	jmp    0x4439da
  4439d6:	mov    BYTE PTR [ecx],0x4
  4439d9:	inc    ecx
  4439da:	add    esi,0x10
  4439dd:	jmp    0x4439a3
  4439df:	mov    BYTE PTR [ecx],0x0
  4439e2:	movzx  eax,WORD PTR [esi]
  4439e5:	inc    ecx
  4439e6:	mov    DWORD PTR ds:0x4605c4,ecx
  4439ec:	cmp    eax,0xd
  4439ef:	je     0x443a2c
  4439f1:	cmp    eax,0xe
  4439f4:	jle    0x443a1d
  4439f6:	cmp    eax,0x1f
  4439f9:	jle    0x443a03
  4439fb:	add    eax,0xffffffda
  4439fe:	cmp    eax,0x2
  443a01:	ja     0x443a1d
  443a03:	mov    al,BYTE PTR [esi]
  443a05:	mov    BYTE PTR [ecx],al
  443a07:	inc    ecx
  443a08:	mov    DWORD PTR ds:0x4605c4,ecx
  443a0e:	lea    eax,[esi+0x10]
  443a11:	mov    ds:0x460624,eax
  443a16:	xor    eax,eax
  443a18:	inc    eax
  443a19:	pop    edi
  443a1a:	pop    esi
  443a1b:	pop    ebx
  443a1c:	ret    
  443a1d:	mov    BYTE PTR [ecx],0x0
  443a20:	inc    ecx
  443a21:	mov    DWORD PTR ds:0x4605c4,ecx
  443a27:	sub    esi,0x10
  443a2a:	jmp    0x443a0e
  443a2c:	mov    DWORD PTR ds:0x460624,esi
  443a32:	call   0x442ee3
  443a37:	test   al,al
  443a39:	jne    0x443a0e
  443a3b:	mov    eax,0x8001
  443a40:	jmp    0x443a19
  443a42:	push   ebp
  443a43:	mov    ebp,esp
  443a45:	sub    esp,0x14
  443a48:	xor    eax,eax
  443a4a:	push   ebx
  443a4b:	push   esi
  443a4c:	push   edi
  443a4d:	call   0x444280
  443a52:	mov    al,ds:0x45f839
  443a57:	mov    ebx,DWORD PTR [ebp+0x8]
  443a5a:	test   al,al
  443a5c:	je     0x443a70
  443a5e:	and    al,0xfe
  443a60:	mov    ds:0x45f839,al
  443a65:	test   al,0x4
  443a67:	je     0x443a70
  443a69:	mov    ecx,ebx
  443a6b:	call   0x440ec6
  443a70:	lea    edi,[ebx+0x4]
  443a73:	mov    ecx,edi
  443a75:	call   0x444026
  443a7a:	mov    esi,eax
  443a7c:	test   esi,esi
  443a7e:	je     0x443ffd
  443a84:	mov    cl,BYTE PTR [ebx]
  443a86:	call   0x43859a
  443a8b:	cmp    BYTE PTR ds:0x45f692,0x0
  443a92:	jne    0x443ff6
  443a98:	mov    edx,DWORD PTR [ebp+0x8]
  443a9b:	xor    eax,eax
  443a9d:	mov    ecx,eax
  443a9f:	mov    BYTE PTR [ebp-0x6],al
  443aa2:	mov    BYTE PTR [ebp-0x5],al
  443aa5:	mov    BYTE PTR [ebp-0x4],al
  443aa8:	mov    BYTE PTR [ebp-0x3],al
  443aab:	mov    BYTE PTR [ebp-0x2],al
  443aae:	mov    BYTE PTR [ebp-0x1],al
  443ab1:	mov    bl,al
  443ab3:	mov    BYTE PTR [ebp-0x7],al
  443ab6:	mov    DWORD PTR [ebp-0x14],eax
  443ab9:	movzx  eax,BYTE PTR [edi+0x4]
  443abd:	add    eax,0x5
  443ac0:	add    edi,eax
  443ac2:	movzx  eax,WORD PTR [edx+0x1]
  443ac6:	add    eax,edx
  443ac8:	mov    DWORD PTR [ebp-0xc],ecx
  443acb:	cmp    edi,eax
  443acd:	jae    0x443ff2
  443ad3:	mov    bh,cl
  443ad5:	movzx  eax,BYTE PTR [edi]
  443ad8:	inc    edi
  443ad9:	mov    DWORD PTR [ebp-0x10],edi
  443adc:	cmp    eax,0x7a
  443adf:	jg     0x443d05
  443ae5:	je     0x443cfc
  443aeb:	cmp    eax,0x1d
  443aee:	jg     0x443c76
  443af4:	je     0x443b97
  443afa:	sub    eax,0x7
  443afd:	je     0x443b64
  443aff:	sub    eax,0x8
  443b02:	je     0x443b49
  443b04:	dec    eax
  443b05:	je     0x443b2f
  443b07:	dec    eax
  443b08:	jne    0x443e25
  443b0e:	test   ecx,ecx
  443b10:	je     0x443b24
  443b12:	mov    edx,0x41f874
  443b17:	mov    ecx,0x7df
  443b1c:	call   0x42f1c0
  443b21:	mov    edx,DWORD PTR [ebp+0x8]
  443b24:	push   0x3
  443b26:	pop    ecx
  443b27:	mov    DWORD PTR [ebp-0xc],ecx
  443b2a:	jmp    0x443e25
  443b2f:	test   ecx,ecx
  443b31:	je     0x443b45
  443b33:	mov    edx,0x41f898
  443b38:	mov    ecx,0x7df
  443b3d:	call   0x42f1c0
  443b42:	mov    edx,DWORD PTR [ebp+0x8]
  443b45:	push   0x2
  443b47:	jmp    0x443b26
  443b49:	test   ecx,ecx
  443b4b:	je     0x443b5f
  443b4d:	mov    edx,0x41f8a4
  443b52:	mov    ecx,0x7df
  443b57:	call   0x42f1c0
  443b5c:	mov    edx,DWORD PTR [ebp+0x8]
  443b5f:	xor    ecx,ecx
  443b61:	inc    ecx
  443b62:	jmp    0x443b27
  443b64:	test   bh,bh
  443b66:	jne    0x443b78
  443b68:	mov    ecx,edi
  443b6a:	call   0x444158
  443b6f:	mov    BYTE PTR [ebp-0x8],0x1
  443b73:	mov    bh,BYTE PTR [ebp-0x8]
  443b76:	jmp    0x443b86
  443b78:	push   0x0
  443b7a:	xor    edx,edx
  443b7c:	mov    ecx,0x7df
  443b81:	call   0x42ee80
  443b86:	movzx  eax,BYTE PTR [edi]
  443b89:	inc    edi
  443b8a:	add    edi,eax
  443b8c:	mov    ecx,DWORD PTR [ebp-0xc]
  443b8f:	mov    edx,DWORD PTR [ebp+0x8]
  443b92:	jmp    0x443e25
  443b97:	lea    edx,[ebp-0x8]
  443b9a:	mov    ecx,edi
  443b9c:	call   0x431d7f
  443ba1:	mov    edi,eax
  443ba3:	mov    eax,DWORD PTR [ebp-0x10]
  443ba6:	movzx  ecx,BYTE PTR [eax]
  443ba9:	add    eax,ecx
  443bab:	mov    DWORD PTR [ebp-0x10],eax
  443bae:	mov    eax,DWORD PTR [ebp-0xc]
  443bb1:	test   eax,eax
  443bb3:	je     0x443bc4
  443bb5:	mov    edx,0x41f8b0
  443bba:	mov    ecx,0x7df
  443bbf:	call   0x42f1c0
  443bc4:	mov    eax,0x80
  443bc9:	cmp    edi,eax
  443bcb:	jg     0x443c0e
  443bcd:	je     0x443c0a
  443bcf:	dec    edi
  443bd0:	je     0x443c05
  443bd2:	dec    edi
  443bd3:	je     0x443c01
  443bd5:	dec    edi
  443bd6:	dec    edi
  443bd7:	je     0x443bfd
  443bd9:	sub    edi,0x4
  443bdc:	je     0x443bf9
  443bde:	sub    edi,0x8
  443be1:	je     0x443bf5
  443be3:	sub    edi,0x10
  443be6:	je     0x443bf1
  443be8:	sub    edi,0x20
  443beb:	jne    0x443c3e
  443bed:	push   0x7
  443bef:	jmp    0x443c67
  443bf1:	push   0x6
  443bf3:	jmp    0x443c67
  443bf5:	push   0x5
  443bf7:	jmp    0x443c67
  443bf9:	push   0x4
  443bfb:	jmp    0x443c67
  443bfd:	push   0x3
  443bff:	jmp    0x443c67
  443c01:	push   0x2
  443c03:	jmp    0x443c67
  443c05:	xor    ecx,ecx
  443c07:	inc    ecx
  443c08:	jmp    0x443c68
  443c0a:	push   0x8
  443c0c:	jmp    0x443c67
  443c0e:	cmp    edi,0x100
  443c14:	je     0x443c65
  443c16:	cmp    edi,0x200
  443c1c:	je     0x443c61
  443c1e:	cmp    edi,0x400
  443c24:	je     0x443c5d
  443c26:	cmp    edi,0x800
  443c2c:	je     0x443c59
  443c2e:	cmp    edi,0x1000
  443c34:	je     0x443c55
  443c36:	cmp    edi,0x2000
  443c3c:	je     0x443c51
  443c3e:	push   0x0
  443c40:	xor    edx,edx
  443c42:	mov    ecx,0x88d
  443c47:	call   0x42ee80
  443c4c:	mov    ecx,DWORD PTR [ebp-0xc]
  443c4f:	jmp    0x443c6b
  443c51:	push   0xe
  443c53:	jmp    0x443c67
  443c55:	push   0xd
  443c57:	jmp    0x443c67
  443c59:	push   0xc
  443c5b:	jmp    0x443c67
  443c5d:	push   0xb
  443c5f:	jmp    0x443c67
  443c61:	push   0xa
  443c63:	jmp    0x443c67
  443c65:	push   0x9
  443c67:	pop    ecx
  443c68:	mov    DWORD PTR [ebp-0xc],ecx
  443c6b:	mov    edx,DWORD PTR [ebp+0x8]
  443c6e:	mov    edi,DWORD PTR [ebp-0x10]
  443c71:	jmp    0x443e25
  443c76:	cmp    eax,0x35
  443c79:	je     0x443cc3
  443c7b:	cmp    eax,0x6a
  443c7e:	je     0x443ca6
  443c80:	cmp    eax,0x79
  443c83:	jne    0x443e25
  443c89:	test   ecx,ecx
  443c8b:	je     0x443c9f
  443c8d:	mov    edx,0x41f88c
  443c92:	mov    ecx,0x7df
  443c97:	call   0x42f1c0
  443c9c:	mov    edx,DWORD PTR [ebp+0x8]
  443c9f:	push   0x5
  443ca1:	jmp    0x443b26
  443ca6:	test   ecx,ecx
  443ca8:	je     0x443cbc
  443caa:	mov    edx,0x41f880
  443caf:	mov    ecx,0x7df
  443cb4:	call   0x42f1c0
  443cb9:	mov    edx,DWORD PTR [ebp+0x8]
  443cbc:	push   0x9
  443cbe:	jmp    0x443b26
  443cc3:	inc    edi
  443cc4:	cmp    DWORD PTR [ebp-0x14],0x0
  443cc8:	je     0x443ce3
  443cca:	mov    edx,0x41f930
  443ccf:	mov    ecx,0x7df
  443cd4:	call   0x42f1c0
  443cd9:	push   DWORD PTR [ebp-0x14]
  443cdc:	call   DWORD PTR ds:0x464354
  443ce2:	pop    ecx
  443ce3:	movzx  edx,BYTE PTR [edi]
  443ce6:	lea    ecx,[edi+0x1]
  443ce9:	call   0x43f5d7
  443cee:	movzx  ecx,BYTE PTR [edi]
  443cf1:	inc    ecx
  443cf2:	mov    DWORD PTR [ebp-0x14],eax
  443cf5:	add    edi,ecx
  443cf7:	jmp    0x443b8c
  443cfc:	or     BYTE PTR [esi+0x7],0x40
  443d00:	jmp    0x443e25
  443d05:	sub    eax,0x93
  443d0a:	cmp    eax,0x7
  443d0d:	ja     0x443e25
  443d13:	jmp    DWORD PTR [eax*4+0x444006]
  443d1a:	cmp    BYTE PTR [ebp-0x6],0x0
  443d1e:	je     0x443d35
  443d20:	mov    edx,0x41f8bc
  443d25:	mov    ecx,0x7df
  443d2a:	call   0x42f1c0
  443d2f:	mov    ecx,DWORD PTR [ebp-0xc]
  443d32:	mov    edx,DWORD PTR [ebp+0x8]
  443d35:	mov    BYTE PTR [ebp-0x6],0x1
  443d39:	jmp    0x443e25
  443d3e:	cmp    BYTE PTR [ebp-0x5],0x0
  443d42:	je     0x443d59
  443d44:	mov    edx,0x41f8c8
  443d49:	mov    ecx,0x7df
  443d4e:	call   0x42f1c0
  443d53:	mov    ecx,DWORD PTR [ebp-0xc]
  443d56:	mov    edx,DWORD PTR [ebp+0x8]
  443d59:	mov    BYTE PTR [ebp-0x5],0x1
  443d5d:	jmp    0x443e25
  443d62:	cmp    BYTE PTR [ebp-0x4],0x0
  443d66:	je     0x443d7d
  443d68:	mov    edx,0x41f8d4
  443d6d:	mov    ecx,0x7df
  443d72:	call   0x42f1c0
  443d77:	mov    ecx,DWORD PTR [ebp-0xc]
  443d7a:	mov    edx,DWORD PTR [ebp+0x8]
  443d7d:	mov    BYTE PTR [ebp-0x4],0x1
  443d81:	jmp    0x443e25
  443d86:	cmp    BYTE PTR [ebp-0x3],0x0
  443d8a:	je     0x443da1
  443d8c:	mov    edx,0x41f8e0
  443d91:	mov    ecx,0x7df
  443d96:	call   0x42f1c0
  443d9b:	mov    ecx,DWORD PTR [ebp-0xc]
  443d9e:	mov    edx,DWORD PTR [ebp+0x8]
  443da1:	mov    BYTE PTR [ebp-0x3],0x1
  443da5:	jmp    0x443e25
  443da7:	cmp    BYTE PTR [ebp-0x2],0x0
  443dab:	je     0x443dc2
  443dad:	mov    edx,0x41f8f0
  443db2:	mov    ecx,0x7df
  443db7:	call   0x42f1c0
  443dbc:	mov    ecx,DWORD PTR [ebp-0xc]
  443dbf:	mov    edx,DWORD PTR [ebp+0x8]
  443dc2:	mov    BYTE PTR [ebp-0x2],0x1
  443dc6:	jmp    0x443e25
  443dc8:	cmp    BYTE PTR [ebp-0x1],0x0
  443dcc:	je     0x443de3
  443dce:	mov    edx,0x41f900
  443dd3:	mov    ecx,0x7df
  443dd8:	call   0x42f1c0
  443ddd:	mov    ecx,DWORD PTR [ebp-0xc]
  443de0:	mov    edx,DWORD PTR [ebp+0x8]
  443de3:	mov    BYTE PTR [ebp-0x1],0x1
  443de7:	jmp    0x443e25
  443de9:	test   bl,bl
  443deb:	je     0x443e02
  443ded:	mov    edx,0x41f910
  443df2:	mov    ecx,0x7df
  443df7:	call   0x42f1c0
  443dfc:	mov    ecx,DWORD PTR [ebp-0xc]
  443dff:	mov    edx,DWORD PTR [ebp+0x8]
  443e02:	mov    bl,0x1
  443e04:	jmp    0x443e25
  443e06:	cmp    BYTE PTR [ebp-0x7],0x0
  443e0a:	je     0x443e21
  443e0c:	mov    edx,0x41f920
  443e11:	mov    ecx,0x7df
  443e16:	call   0x42f1c0
  443e1b:	mov    ecx,DWORD PTR [ebp-0xc]
  443e1e:	mov    edx,DWORD PTR [ebp+0x8]
  443e21:	mov    BYTE PTR [ebp-0x7],0x1
  443e25:	movzx  eax,WORD PTR [edx+0x1]
  443e29:	add    eax,edx
  443e2b:	cmp    edi,eax
  443e2d:	jb     0x443ad5
  443e33:	test   ecx,ecx
  443e35:	je     0x443e5e
  443e37:	movzx  eax,WORD PTR [esi+0x1c]
  443e3b:	test   ax,ax
  443e3e:	je     0x443e5e
  443e40:	cmp    eax,ecx
  443e42:	je     0x443e5e
  443e44:	mov    ecx,0x2328
  443e49:	call   0x42eb12
  443e4e:	mov    edi,0x7df
  443e53:	mov    edx,eax
  443e55:	mov    ecx,edi
  443e57:	call   0x42f1c0
  443e5c:	jmp    0x443e63
  443e5e:	mov    edi,0x7df
  443e63:	mov    al,BYTE PTR [esi+0x48]
  443e66:	test   al,0x1
  443e68:	je     0x443f7c
  443e6e:	shr    al,1
  443e70:	and    al,0x1
  443e72:	cmp    al,BYTE PTR [ebp-0x6]
  443e75:	je     0x443e83
  443e77:	mov    edx,0x41f8bc
  443e7c:	mov    ecx,edi
  443e7e:	call   0x42f1c0
  443e83:	mov    al,BYTE PTR [esi+0x48]
  443e86:	shr    al,0x2
  443e89:	and    al,0x1
  443e8b:	cmp    al,BYTE PTR [ebp-0x5]
  443e8e:	je     0x443e9c
  443e90:	mov    edx,0x41f8c8
  443e95:	mov    ecx,edi
  443e97:	call   0x42f1c0
  443e9c:	mov    al,BYTE PTR [esi+0x48]
  443e9f:	shr    al,0x3
  443ea2:	and    al,0x1
  443ea4:	cmp    al,BYTE PTR [ebp-0x4]
  443ea7:	je     0x443eb5
  443ea9:	mov    edx,0x41f8d4
  443eae:	mov    ecx,edi
  443eb0:	call   0x42f1c0
  443eb5:	mov    al,BYTE PTR [esi+0x48]
  443eb8:	shr    al,0x4
  443ebb:	and    al,0x1
  443ebd:	cmp    al,BYTE PTR [ebp-0x3]
  443ec0:	je     0x443ece
  443ec2:	mov    edx,0x41f8e0
  443ec7:	mov    ecx,edi
  443ec9:	call   0x42f1c0
  443ece:	mov    al,BYTE PTR [esi+0x48]
  443ed1:	shr    al,0x5
  443ed4:	and    al,0x1
  443ed6:	cmp    al,BYTE PTR [ebp-0x2]
  443ed9:	je     0x443ee7
  443edb:	mov    edx,0x41f8f0
  443ee0:	mov    ecx,edi
  443ee2:	call   0x42f1c0
  443ee7:	mov    al,BYTE PTR [esi+0x48]
  443eea:	mov    bh,BYTE PTR [ebp-0x1]
  443eed:	shr    al,0x6
  443ef0:	and    al,0x1
  443ef2:	cmp    al,bh
  443ef4:	je     0x443f02
  443ef6:	mov    edx,0x41f900
  443efb:	mov    ecx,edi
  443efd:	call   0x42f1c0
  443f02:	mov    al,BYTE PTR [esi+0x48]
  443f05:	shr    al,0x7
  443f08:	cmp    al,bl
  443f0a:	je     0x443f18
  443f0c:	mov    edx,0x41f910
  443f11:	mov    ecx,edi
  443f13:	call   0x42f1c0
  443f18:	mov    al,BYTE PTR [esi+0x49]
  443f1b:	and    al,0x1
  443f1d:	cmp    al,BYTE PTR [ebp-0x7]
  443f20:	je     0x443f2e
  443f22:	mov    edx,0x41f920
  443f27:	mov    ecx,edi
  443f29:	call   0x42f1c0
  443f2e:	mov    eax,DWORD PTR [esi+0x44]
  443f31:	mov    edi,DWORD PTR [ebp-0x14]
  443f34:	test   eax,eax
  443f36:	jne    0x443f4d
  443f38:	test   edi,edi
  443f3a:	je     0x443f82
  443f3c:	mov    edx,0x41f930
  443f41:	mov    ecx,0x7df
  443f46:	call   0x42f1c0
  443f4b:	jmp    0x443f82
  443f4d:	test   edi,edi
  443f4f:	je     0x443f3c
  443f51:	mov    ecx,edi
  443f53:	mov    dl,BYTE PTR [eax]
  443f55:	cmp    dl,BYTE PTR [ecx]
  443f57:	jne    0x443f73
  443f59:	test   dl,dl
  443f5b:	je     0x443f6f
  443f5d:	mov    dl,BYTE PTR [eax+0x1]
  443f60:	cmp    dl,BYTE PTR [ecx+0x1]
  443f63:	jne    0x443f73
  443f65:	add    eax,0x2
  443f68:	add    ecx,0x2
  443f6b:	test   dl,dl
  443f6d:	jne    0x443f53
  443f6f:	xor    eax,eax
  443f71:	jmp    0x443f78
  443f73:	sbb    eax,eax
  443f75:	or     eax,0x1
  443f78:	test   eax,eax
  443f7a:	jmp    0x443f3a
  443f7c:	mov    edi,DWORD PTR [ebp-0x14]
  443f7f:	mov    bh,BYTE PTR [ebp-0x1]
  443f82:	xor    ecx,ecx
  443f84:	cmp    WORD PTR [esi+0x1c],cx
  443f88:	jne    0x443f91
  443f8a:	mov    eax,DWORD PTR [ebp-0xc]
  443f8d:	mov    WORD PTR [esi+0x1c],ax
  443f91:	mov    al,BYTE PTR [ebp-0x2]
  443f94:	add    bl,bl
  443f96:	and    al,0x1
  443f98:	and    bh,0x1
  443f9b:	or     bl,bh
  443f9d:	add    bl,bl
  443f9f:	or     bl,al
  443fa1:	mov    al,BYTE PTR [ebp-0x3]
  443fa4:	and    al,0x1
  443fa6:	add    bl,bl
  443fa8:	or     bl,al
  443faa:	mov    al,BYTE PTR [ebp-0x4]
  443fad:	and    al,0x1
  443faf:	add    bl,bl
  443fb1:	or     bl,al
  443fb3:	mov    al,BYTE PTR [ebp-0x5]
  443fb6:	and    al,0x1
  443fb8:	add    bl,bl
  443fba:	or     bl,al
  443fbc:	mov    al,BYTE PTR [ebp-0x6]
  443fbf:	and    al,0x1
  443fc1:	add    bl,bl
  443fc3:	or     bl,al
  443fc5:	mov    al,BYTE PTR [esi+0x48]
  443fc8:	and    al,0x1
  443fca:	add    bl,bl
  443fcc:	or     bl,al
  443fce:	mov    al,BYTE PTR [esi+0x49]
  443fd1:	xor    al,BYTE PTR [ebp-0x7]
  443fd4:	mov    BYTE PTR [esi+0x48],bl
  443fd7:	and    al,0x1
  443fd9:	xor    BYTE PTR [esi+0x49],al
  443fdc:	test   edi,edi
  443fde:	je     0x443ff2
  443fe0:	cmp    DWORD PTR [esi+0x44],ecx
  443fe3:	jne    0x443fea
  443fe5:	mov    DWORD PTR [esi+0x44],edi
  443fe8:	jmp    0x443ff2
  443fea:	push   edi
  443feb:	call   DWORD PTR ds:0x464354
  443ff1:	pop    ecx
  443ff2:	or     BYTE PTR [esi+0x48],0x1
  443ff6:	mov    ecx,esi
  443ff8:	call   0x444348
  443ffd:	pop    edi
  443ffe:	pop    esi
  443fff:	pop    ebx
  444000:	leave  
  444001:	ret    0x4
  444004:	mov    edi,edi
  444006:	sbb    bh,BYTE PTR ds:0x3d3e0044
  44400c:	inc    esp
  44400d:	add    BYTE PTR [edx+0x3d],ah
  444010:	inc    esp
  444011:	add    BYTE PTR [esi-0x58ffbbc3],al
  444017:	cmp    eax,0x3dc80044
  44401c:	inc    esp
  44401d:	add    cl,ch
  44401f:	cmp    eax,0x3e060044
  444024:	inc    esp
  444025:	add    BYTE PTR [esi-0x75],dl
  444028:	icebp  
  444029:	call   0x445afc
  44402e:	mov    edx,eax
  444030:	mov    DWORD PTR ds:0x45f834,edx
  444036:	test   edx,edx
  444038:	jne    0x44404b
  44403a:	push   0x10
  44403c:	pop    edx
  44403d:	mov    ecx,esi
  44403f:	call   0x4458d0
  444044:	mov    ds:0x45f834,eax
  444049:	jmp    0x444080
  44404b:	cmp    BYTE PTR [edx+0x6],0x10
  44404f:	je     0x44406d
  444051:	movzx  eax,BYTE PTR [edx+0x5]
  444055:	push   eax
  444056:	sub    edx,eax
  444058:	mov    ecx,0x7d5
  44405d:	call   0x42f15d
  444062:	and    DWORD PTR ds:0x45f834,0x0
  444069:	xor    eax,eax
  44406b:	pop    esi
  44406c:	ret    
  44406d:	mov    al,BYTE PTR [edx+0x7]
  444070:	test   al,0x20
  444072:	je     0x4440dc
  444074:	and    al,0xdf
  444076:	mov    BYTE PTR ds:0x4605be,0x0
  44407d:	mov    BYTE PTR [edx+0x7],al
  444080:	push   0x3
  444082:	pop    edx
  444083:	mov    ecx,0x41e77b
  444088:	call   0x445ae1
  44408d:	mov    edx,DWORD PTR ds:0x45f834
  444093:	mov    ecx,0x80
  444098:	mov    DWORD PTR [edx+0x38],eax
  44409b:	or     WORD PTR [eax+0x2c],cx
  44409f:	mov    DWORD PTR [eax+0x20],edx
  4440a2:	mov    DWORD PTR [eax+0x24],0x449418
  4440a9:	mov    eax,ds:0x45f87c
  4440ae:	mov    ecx,0x45f87c
  4440b3:	jmp    0x4440be
  4440b5:	cmp    eax,edx
  4440b7:	je     0x4440dc
  4440b9:	lea    ecx,[eax+0x30]
  4440bc:	mov    eax,DWORD PTR [ecx]
  4440be:	test   eax,eax
  4440c0:	jne    0x4440b5
  4440c2:	mov    DWORD PTR [edx+0x30],eax
  4440c5:	mov    eax,ds:0x460e28
  4440ca:	inc    eax
  4440cb:	mov    DWORD PTR [ecx],edx
  4440cd:	mov    ds:0x460e28,eax
  4440d2:	mov    WORD PTR [edx+0x18],ax
  4440d6:	xor    eax,eax
  4440d8:	mov    WORD PTR [edx+0x1a],ax
  4440dc:	mov    eax,edx
  4440de:	pop    esi
  4440df:	ret    
  4440e0:	push   ebx
  4440e1:	push   esi
  4440e2:	push   edi
  4440e3:	push   0x10
  4440e5:	mov    edi,0x41e77b
  4440ea:	pop    edx
  4440eb:	mov    ecx,edi
  4440ed:	call   0x445ae1
  4440f2:	push   0x3
  4440f4:	pop    ebx
  4440f5:	mov    edx,ebx
  4440f7:	mov    ecx,edi
  4440f9:	mov    esi,eax
  4440fb:	call   0x445ae1
  444100:	lea    ecx,[ebx+0x7d]
  444103:	or     WORD PTR [eax+0x2c],cx
  444107:	mov    DWORD PTR [eax+0x20],esi
  44410a:	mov    DWORD PTR [eax+0x24],0x449418
  444111:	mov    ecx,DWORD PTR ds:0x45f87c
  444117:	mov    edx,0x45f87c
  44411c:	jmp    0x444123
  44411e:	lea    edx,[ecx+0x30]
  444121:	mov    ecx,DWORD PTR [edx]
  444123:	test   ecx,ecx
  444125:	jne    0x44411e
  444127:	mov    DWORD PTR [edx],esi
  444129:	or     BYTE PTR [esi+0x7],0x10
  44412d:	or     BYTE PTR [esi+0x48],0x5
  444131:	mov    DWORD PTR [esi+0x38],eax
  444134:	mov    eax,ds:0x460e28
  444139:	inc    eax
  44413a:	mov    WORD PTR [esi+0x18],ax
  44413e:	pop    edi
  44413f:	mov    WORD PTR [esi+0x1c],bx
  444143:	mov    ds:0x460e28,eax
  444148:	mov    WORD PTR [esi+0x1a],cx
  44414c:	mov    DWORD PTR [esi+0x44],0x41f93c
  444153:	mov    eax,esi
  444155:	pop    esi
  444156:	pop    ebx
  444157:	ret    
  444158:	push   ebp
  444159:	mov    ebp,esp
  44415b:	sub    esp,0xfc
  444161:	mov    eax,ds:0x448858
  444166:	xor    eax,ebp
  444168:	mov    DWORD PTR [ebp-0x4],eax
  44416b:	push   esi
  44416c:	push   edi
  44416d:	movzx  edi,BYTE PTR [ecx]
  444170:	lea    eax,[ecx+0x1]
  444173:	push   edi
  444174:	push   eax
  444175:	lea    eax,[ebp-0xfc]
  44417b:	push   eax
  44417c:	call   0x447646
  444181:	add    esp,0xc
  444184:	cmp    edi,0xf7
  44418a:	jae    0x44427a
  444190:	mov    esi,DWORD PTR ds:0x460e2c
  444196:	mov    BYTE PTR [ebp+edi*1-0xfc],0x0
  44419e:	jmp    0x4441d4
  4441a0:	lea    ecx,[ebp-0xfc]
  4441a6:	lea    eax,[esi+0x6]
  4441a9:	mov    dl,BYTE PTR [eax]
  4441ab:	cmp    dl,BYTE PTR [ecx]
  4441ad:	jne    0x4441c9
  4441af:	test   dl,dl
  4441b1:	je     0x4441c5
  4441b3:	mov    dl,BYTE PTR [eax+0x1]
  4441b6:	cmp    dl,BYTE PTR [ecx+0x1]
  4441b9:	jne    0x4441c9
  4441bb:	add    eax,0x2
  4441be:	add    ecx,0x2
  4441c1:	test   dl,dl
  4441c3:	jne    0x4441a9
  4441c5:	xor    eax,eax
  4441c7:	jmp    0x4441ce
  4441c9:	sbb    eax,eax
  4441cb:	or     eax,0x1
  4441ce:	test   eax,eax
  4441d0:	je     0x444245
  4441d2:	mov    esi,DWORD PTR [esi]
  4441d4:	test   esi,esi
  4441d6:	jne    0x4441a0
  4441d8:	lea    ecx,[edi+0x8]
  4441db:	call   0x43f45b
  4441e0:	mov    esi,eax
  4441e2:	lea    eax,[ebp-0xfc]
  4441e8:	push   eax
  4441e9:	lea    ecx,[edi+0x1]
  4441ec:	push   ecx
  4441ed:	lea    ecx,[esi+0x6]
  4441f0:	push   ecx
  4441f1:	call   DWORD PTR ds:0x464488
  4441f7:	mov    ecx,DWORD PTR ds:0x460e2c
  4441fd:	add    esp,0xc
  444200:	mov    DWORD PTR [esi],ecx
  444202:	mov    DWORD PTR ds:0x460e2c,esi
  444208:	cmp    edi,0x4
  44420b:	jb     0x44422f
  44420d:	lea    eax,[ebp+edi*1-0x100]
  444214:	push   0x41e4dc
  444219:	push   eax
  44421a:	call   DWORD PTR ds:0x464408
  444220:	pop    ecx
  444221:	pop    ecx
  444222:	test   eax,eax
  444224:	jne    0x44422f
  444226:	mov    eax,ds:0x45f834
  44422b:	or     BYTE PTR [eax+0x7],0x80
  44422f:	mov    eax,ds:0x45f834
  444234:	mov    ecx,DWORD PTR [ebp-0x4]
  444237:	pop    edi
  444238:	mov    DWORD PTR [eax+0x2c],esi
  44423b:	xor    ecx,ebp
  44423d:	pop    esi
  44423e:	call   0x446dc7
  444243:	leave  
  444244:	ret    
  444245:	mov    eax,ds:0x45f834
  44424a:	cmp    DWORD PTR [eax+0x2c],0x0
  44424e:	je     0x444208
  444250:	cmp    DWORD PTR [eax+0x2c],esi
  444253:	je     0x444208
  444255:	lea    ecx,[ebp-0xfc]
  44425b:	lea    edx,[ecx+0x1]
  44425e:	mov    al,BYTE PTR [ecx]
  444260:	inc    ecx
  444261:	test   al,al
  444263:	jne    0x44425e
  444265:	sub    ecx,edx
  444267:	push   ecx
  444268:	lea    edx,[ebp-0xfc]
  44426e:	mov    ecx,0x7df
  444273:	call   0x42f15d
  444278:	jmp    0x444208
  44427a:	call   0x446f0c
  44427f:	int3   
  444280:	mov    ecx,DWORD PTR ds:0x45f834
  444286:	test   ecx,ecx
  444288:	je     0x4442bb
  44428a:	mov    eax,ds:0x463068
  44428f:	cmp    eax,0x14
  444292:	jl     0x4442a9
  444294:	mov    ecx,0x3ef
  444299:	call   0x42f124
  44429e:	mov    ecx,DWORD PTR ds:0x45f834
  4442a4:	mov    eax,ds:0x463068
  4442a9:	inc    eax
  4442aa:	mov    ds:0x463068,eax
  4442af:	mov    DWORD PTR [eax*4+0x463070],ecx
  4442b6:	jmp    0x44431f
  4442bb:	ret    
  4442bc:	mov    edx,DWORD PTR ds:0x45f834
  4442c2:	test   edx,edx
  4442c4:	je     0x4442f5
  4442c6:	test   ecx,ecx
  4442c8:	je     0x4442e3
  4442ca:	cmp    BYTE PTR ds:0x45f692,0x0
  4442d1:	je     0x4442e3
  4442d3:	mov    eax,ds:0x45f82c
  4442d8:	sub    DWORD PTR [ecx],eax
  4442da:	mov    eax,DWORD PTR [ecx]
  4442dc:	mov    ds:0x45f830,eax
  4442e1:	jmp    0x4442e8
  4442e3:	mov    eax,ds:0x45f830
  4442e8:	cmp    DWORD PTR [edx+0x20],eax
  4442eb:	jae    0x4442f0
  4442ed:	mov    DWORD PTR [edx+0x20],eax
  4442f0:	call   0x44431f
  4442f5:	mov    eax,ds:0x463068
  4442fa:	test   eax,eax
  4442fc:	jle    0x444310
  4442fe:	mov    ecx,DWORD PTR [eax*4+0x463070]
  444305:	dec    eax
  444306:	mov    ds:0x463068,eax
  44430b:	jmp    0x444348
  444310:	and    DWORD PTR ds:0x45f834,0x0
  444317:	mov    BYTE PTR ds:0x45f9b8,0x0
  44431e:	ret    
  44431f:	mov    edx,DWORD PTR ds:0x45f834
  444325:	mov    ecx,DWORD PTR ds:0x45f830
  44432b:	mov    eax,DWORD PTR [edx+0x38]
  44432e:	mov    DWORD PTR [edx+0x24],ecx
  444331:	mov    DWORD PTR [eax+0x1c],ecx
  444334:	mov    eax,ds:0x45f82c
  444339:	mov    DWORD PTR [edx+0x28],eax
  44433c:	test   eax,eax
  44433e:	je     0x444347
  444340:	mov    BYTE PTR ds:0x4605ba,0x1
  444347:	ret    
  444348:	push   esi
  444349:	mov    esi,ecx
  44434b:	mov    DWORD PTR ds:0x45f834,esi
  444351:	mov    eax,DWORD PTR [esi+0x24]
  444354:	movzx  edx,BYTE PTR [esi+0x5]
  444358:	mov    ds:0x45f830,eax
  44435d:	mov    eax,DWORD PTR [esi+0x28]
  444360:	mov    ds:0x45f82c,eax
  444365:	push   edx
  444366:	mov    eax,esi
  444368:	sub    eax,edx
  44436a:	push   eax
  44436b:	push   0x45f9b8
  444370:	call   0x447646
  444375:	movzx  eax,BYTE PTR [esi+0x5]
  444379:	add    esp,0xc
  44437c:	cmp    eax,0xf7
  444381:	jae    0x4443b4
  444383:	cmp    BYTE PTR ds:0x45f692,0x2
  44438a:	mov    BYTE PTR [eax+0x45f9b8],0x0
  444391:	jne    0x4443b2
  444393:	movzx  eax,WORD PTR [esi+0x1a]
  444397:	cmp    WORD PTR ds:0x45f854,ax
  44439e:	je     0x4443b2
  4443a0:	mov    ds:0x45f854,ax
  4443a6:	mov    ecx,DWORD PTR ds:0x45f854
  4443ac:	pop    esi
  4443ad:	jmp    0x424194
  4443b2:	pop    esi
  4443b3:	ret    
  4443b4:	call   0x446f0c
  4443b9:	int3   
  4443ba:	cmp    DWORD PTR ds:0x45f994,0x0
  4443c1:	je     0x4443fb
  4443c3:	mov    eax,ds:0x463b88
  4443c8:	test   eax,eax
  4443ca:	je     0x4443d9
  4443cc:	xor    ecx,ecx
  4443ce:	xor    edx,edx
  4443d0:	mov    WORD PTR [eax+0x2c],dx
  4443d4:	mov    DWORD PTR [eax+0x24],ecx
  4443d7:	jmp    0x444429
  4443d9:	push   0x8
  4443db:	pop    edx
  4443dc:	mov    ecx,0x41e77b
  4443e1:	call   0x445ae1
  4443e6:	xor    ecx,ecx
  4443e8:	xor    edx,edx
  4443ea:	mov    DWORD PTR [eax+0x2c],ecx
  4443ed:	mov    ds:0x463b88,eax
  4443f2:	mov    DWORD PTR [eax+0x24],ecx
  4443f5:	mov    WORD PTR [eax+0x2c],dx
  4443f9:	jmp    0x444429
  4443fb:	mov    eax,ds:0x45f834
  444400:	mov    eax,DWORD PTR [eax+0x34]
  444403:	test   eax,eax
  444405:	jne    0x44442c
  444407:	push   0x3
  444409:	pop    edx
  44440a:	mov    ecx,0x41e77b
  44440f:	call   0x445ae1
  444414:	mov    ecx,DWORD PTR ds:0x45f834
  44441a:	mov    DWORD PTR [ecx+0x34],eax
  44441d:	or     WORD PTR [eax+0x2c],0x41
  444422:	mov    DWORD PTR [eax+0x24],0x4493c4
  444429:	mov    DWORD PTR [eax+0x20],ecx
  44442c:	ret    
  44442d:	push   ebp
  44442e:	mov    ebp,esp
  444430:	push   esi
  444431:	mov    esi,DWORD PTR [ebp+0x8]
  444434:	add    esi,0x4
  444437:	mov    al,BYTE PTR [esi-0x1]
  44443a:	test   al,al
  44443c:	jne    0x44446e
  44443e:	lea    ecx,[esi+0x1]
  444441:	call   0x445afc
  444446:	test   eax,eax
  444448:	je     0x444458
  44444a:	test   BYTE PTR [eax+0x7],0x20
  44444e:	jne    0x444458
  444450:	cmp    DWORD PTR ds:0x45f834,eax
  444456:	je     0x444465
  444458:	lea    edx,[esi+0x1]
  44445b:	mov    ecx,0x3f2
  444460:	call   0x42f140
  444465:	movzx  eax,BYTE PTR [esi+0x5]
  444469:	add    esi,0x6
  44446c:	add    esi,eax
  44446e:	cmp    BYTE PTR ds:0x45f692,0x0
  444475:	jne    0x44447e
  444477:	mov    eax,ds:0x45f830
  44447c:	mov    DWORD PTR [esi],eax
  44447e:	mov    ecx,esi
  444480:	call   0x4442bc
  444485:	pop    esi
  444486:	pop    ebp
  444487:	ret    0x4
  44448a:	push   ebp
  44448b:	mov    ebp,esp
  44448d:	sub    esp,0x20
  444490:	mov    eax,ds:0x448858
  444495:	xor    eax,ebp
  444497:	mov    DWORD PTR [ebp-0x4],eax
  44449a:	mov    ecx,DWORD PTR ds:0x45f834
  4444a0:	push   edi
  4444a1:	mov    edi,DWORD PTR [ebp+0x8]
  4444a4:	push   0xb
  4444a6:	pop    eax
  4444a7:	xor    edx,edx
  4444a9:	mov    WORD PTR [ebp-0x1f],ax
  4444ad:	xor    eax,eax
  4444af:	mov    BYTE PTR [ebp-0x20],0x4
  4444b3:	mov    BYTE PTR [ebp-0x1d],0xe
  4444b7:	mov    DWORD PTR [ebp-0x1c],edx
  4444ba:	mov    BYTE PTR [ebp-0x18],dl
  4444bd:	mov    WORD PTR [ebp-0x17],ax
  4444c1:	test   ecx,ecx
  4444c3:	jne    0x4444d5
  4444c5:	push   edx
  4444c6:	mov    ecx,0x7f2
  4444cb:	call   0x42ee80
  4444d0:	jmp    0x4445b6
  4444d5:	mov    ax,WORD PTR [edi+0x1]
  4444d9:	push   ebx
  4444da:	push   esi
  4444db:	push   0x1
  4444dd:	pop    ebx
  4444de:	sub    ax,0x3
  4444e2:	jne    0x4444f2
  4444e4:	movzx  eax,WORD PTR [ecx+0x1c]
  4444e8:	movzx  esi,WORD PTR [eax*2+0x4064f4]
  4444f0:	jmp    0x444512
  4444f2:	cmp    ax,bx
  4444f5:	jne    0x4444fc
  4444f7:	push   0x2
  4444f9:	pop    esi
  4444fa:	jmp    0x444512
  4444fc:	lea    ecx,[edi+0x3]
  4444ff:	lea    edx,[ebp-0x11]
  444502:	call   0x431d7f
  444507:	mov    ecx,DWORD PTR ds:0x45f834
  44450d:	movzx  esi,ax
  444510:	xor    edx,edx
  444512:	movzx  ebx,si
  444515:	lea    eax,[ebx-0x1]
  444518:	test   ebx,eax
  44451a:	jne    0x444587
  44451c:	test   si,si
  44451f:	je     0x444587
  444521:	movzx  eax,WORD PTR [ecx+0x1c]
  444525:	cmp    si,WORD PTR [eax*2+0x4064f4]
  44452d:	jbe    0x444556
  44452f:	push   0xa
  444531:	push   edx
  444532:	mov    edx,ebx
  444534:	lea    ecx,[ebp-0x10]
  444537:	call   0x42ea92
  44453c:	lea    ecx,[ebp-0x10]
  44453f:	mov    BYTE PTR [eax],0x0
  444542:	lea    edx,[ecx+0x1]
  444545:	mov    al,BYTE PTR [ecx]
  444547:	inc    ecx
  444548:	test   al,al
  44454a:	jne    0x444545
  44454c:	sub    ecx,edx
  44454e:	push   ecx
  44454f:	mov    ecx,0x88d
  444554:	jmp    0x4445ac
  444556:	lea    eax,[ebp-0x20]
  444559:	push   eax
  44455a:	call   0x444958
  44455f:	mov    eax,ds:0x45f830
  444564:	mov    edx,DWORD PTR ds:0x448884
  44456a:	dec    eax
  44456b:	add    eax,ebx
  44456d:	lea    ecx,[ebp-0x20]
  444570:	mov    WORD PTR [ebp-0x17],si
  444574:	mov    ds:0x45f830,eax
  444579:	mov    BYTE PTR ds:0x4605bb,0x1
  444580:	call   0x43f399
  444585:	jmp    0x4445b4
  444587:	push   0xa
  444589:	push   edx
  44458a:	mov    edx,ebx
  44458c:	lea    ecx,[ebp-0x10]
  44458f:	call   0x42ea92
  444594:	lea    ecx,[ebp-0x10]
  444597:	mov    BYTE PTR [eax],0x0
  44459a:	lea    edx,[ecx+0x1]
  44459d:	mov    al,BYTE PTR [ecx]
  44459f:	inc    ecx
  4445a0:	test   al,al
  4445a2:	jne    0x44459d
  4445a4:	sub    ecx,edx
  4445a6:	push   ecx
  4445a7:	mov    ecx,0x80f
  4445ac:	lea    edx,[ebp-0x10]
  4445af:	call   0x42f15d
  4445b4:	pop    esi
  4445b5:	pop    ebx
  4445b6:	mov    ecx,DWORD PTR [ebp-0x4]
  4445b9:	xor    eax,eax
  4445bb:	mov    WORD PTR [edi+0x1],ax
  4445bf:	xor    ecx,ebp
  4445c1:	pop    edi
  4445c2:	call   0x446dc7
  4445c7:	leave  
  4445c8:	ret    0x4
  4445cb:	push   ebp
  4445cc:	mov    ebp,esp
  4445ce:	mov    ecx,DWORD PTR ds:0x45f82c
  4445d4:	push   ebx
  4445d5:	mov    ebx,DWORD PTR [ebp+0x8]
  4445d8:	push   esi
  4445d9:	mov    eax,DWORD PTR [ebx+0x4]
  4445dc:	sub    DWORD PTR [eax+0x1c],ecx
  4445df:	cmp    BYTE PTR ds:0x4605bb,0x0
  4445e6:	mov    esi,DWORD PTR [eax+0x1c]
  4445e9:	mov    DWORD PTR ds:0x45f830,esi
  4445ef:	jne    0x444633
  4445f1:	push   edi
  4445f2:	movzx  edi,WORD PTR [ebx+0x9]
  4445f6:	test   di,di
  4445f9:	je     0x44460f
  4445fb:	xor    edx,edx
  4445fd:	mov    ecx,edi
  4445ff:	mov    eax,esi
  444601:	div    ecx
  444603:	mov    eax,edi
  444605:	sub    eax,edx
  444607:	movzx  eax,ax
  44460a:	cmp    ax,di
  44460d:	jne    0x444611
  44460f:	xor    eax,eax
  444611:	movzx  ecx,ax
  444614:	mov    WORD PTR [ebx+0x9],ax
  444618:	add    esi,ecx
  44461a:	mov    eax,edi
  44461c:	sub    eax,ecx
  44461e:	mov    ecx,DWORD PTR ds:0x45f82c
  444624:	dec    ecx
  444625:	add    eax,ecx
  444627:	mov    DWORD PTR ds:0x45f830,esi
  44462d:	mov    ds:0x45f82c,eax
  444632:	pop    edi
  444633:	pop    esi
  444634:	pop    ebx
  444635:	pop    ebp
  444636:	ret    0x4
  444639:	mov    eax,ds:0x460e34
  44463e:	test   eax,eax
  444640:	je     0x444657
  444642:	mov    edx,DWORD PTR ds:0x45f82c
  444648:	cmp    DWORD PTR [eax+0x3],ecx
  44464b:	jne    0x444650
  44464d:	mov    DWORD PTR [eax+0xb],edx
  444650:	mov    eax,DWORD PTR [eax+0x13]
  444653:	test   eax,eax
  444655:	jne    0x444648
  444657:	ret    
  444658:	push   ebp
  444659:	mov    ebp,esp
  44465b:	push   ebx
  44465c:	mov    bl,BYTE PTR ds:0x45f692
  444662:	push   esi
  444663:	mov    esi,DWORD PTR [ebp+0x8]
  444666:	test   bl,bl
  444668:	je     0x44467d
  44466a:	mov    eax,ds:0x45f82c
  44466f:	sub    DWORD PTR [esi+0xf],eax
  444672:	test   eax,eax
  444674:	je     0x44467d
  444676:	mov    BYTE PTR ds:0x4605ba,0x1
  44467d:	mov    eax,ds:0x45f834
  444682:	mov    ecx,DWORD PTR [esi+0xf]
  444685:	cmp    ecx,DWORD PTR [eax+0x20]
  444688:	jbe    0x44468d
  44468a:	mov    DWORD PTR [eax+0x20],ecx
  44468d:	mov    ecx,DWORD PTR [esi+0x3]
  444690:	test   ecx,ecx
  444692:	je     0x4446f8
  444694:	cmp    ecx,0xffffffff
  444697:	jne    0x4446dd
  444699:	test   bl,bl
  44469b:	je     0x4446d9
  44469d:	cmp    bl,0x2
  4446a0:	jae    0x4446d9
  4446a2:	push   edi
  4446a3:	mov    edi,DWORD PTR [esi+0x7]
  4446a6:	lea    ecx,[esi+0x17]
  4446a9:	mov    dl,0x1
  4446ab:	call   0x42f6c1
  4446b0:	mov    edx,eax
  4446b2:	test   DWORD PTR [edx+0x4],0x8000
  4446b9:	mov    ecx,DWORD PTR [edx+0x8]
  4446bc:	je     0x4446c0
  4446be:	neg    ecx
  4446c0:	mov    eax,ds:0x45f83c
  4446c5:	sub    edi,ecx
  4446c7:	mov    DWORD PTR [esi+0x7],ecx
  4446ca:	mov    DWORD PTR ds:0x45f82c,edi
  4446d0:	mov    DWORD PTR [edx],eax
  4446d2:	mov    DWORD PTR ds:0x45f83c,edx
  4446d8:	pop    edi
  4446d9:	xor    ecx,ecx
  4446db:	jmp    0x444700
  4446dd:	test   BYTE PTR [ecx+0x2c],0x40
  4446e1:	jne    0x4446f0
  4446e3:	mov    eax,DWORD PTR [esi+0xb]
  4446e6:	mov    ecx,DWORD PTR [ecx+0x1c]
  4446e9:	mov    ds:0x45f82c,eax
  4446ee:	jmp    0x444700
  4446f0:	mov    ecx,DWORD PTR ds:0x45f830
  4446f6:	jmp    0x444700
  4446f8:	xor    ecx,ecx
  4446fa:	mov    DWORD PTR ds:0x45f82c,ecx
  444700:	add    ecx,DWORD PTR [esi+0x7]
  444703:	pop    esi
  444704:	mov    DWORD PTR ds:0x45f830,ecx
  44470a:	pop    ebx
  44470b:	pop    ebp
  44470c:	ret    0x4
  44470f:	push   ebp
  444710:	mov    ebp,esp
  444712:	mov    eax,DWORD PTR [ebp+0x8]
  444715:	push   ebx
  444716:	movzx  ebx,WORD PTR [eax+0x1]
  44471a:	xor    edx,edx
  44471c:	add    ebx,eax
  44471e:	lea    ecx,[eax+0x3]
  444721:	mov    DWORD PTR [ebp+0x8],ecx
  444724:	mov    WORD PTR [eax+0x1],dx
  444728:	cmp    DWORD PTR ds:0x45f834,edx
  44472e:	jne    0x444740
  444730:	push   edx
  444731:	mov    ecx,0x7f2
  444736:	call   0x42ee80
  44473b:	jmp    0x444860
  444740:	push   esi
  444741:	mov    dl,0x1
  444743:	call   0x42f6c1
  444748:	mov    esi,eax
  44474a:	test   esi,esi
  44474c:	je     0x44485f
  444752:	mov    al,BYTE PTR [esi]
  444754:	cmp    al,0x2
  444756:	je     0x44477a
  444758:	cmp    al,0x1
  44475a:	jne    0x444767
  44475c:	movzx  eax,WORD PTR [esi+0x2]
  444760:	test   eax,0x1f00
  444765:	je     0x44477a
  444767:	push   0x0
  444769:	xor    edx,edx
  44476b:	mov    ecx,0x854
  444770:	call   0x42ee80
  444775:	jmp    0x444852
  44477a:	push   edi
  44477b:	xor    eax,eax
  44477d:	mov    edi,0x44e4e8
  444782:	stos   DWORD PTR es:[edi],eax
  444783:	stos   DWORD PTR es:[edi],eax
  444784:	stos   DWORD PTR es:[edi],eax
  444785:	stos   DWORD PTR es:[edi],eax
  444786:	stos   DWORD PTR es:[edi],eax
  444787:	stos   WORD PTR es:[edi],ax
  444789:	stos   BYTE PTR es:[edi],al
  44478a:	push   0x17
  44478c:	pop    eax
  44478d:	mov    edx,0x100
  444792:	mov    BYTE PTR ds:0x44e4e9,0x45
  444799:	mov    ds:0x44e4ea,ax
  44479f:	mov    edi,0x44e4e9
  4447a4:	test   DWORD PTR [esi+0x4],edx
  4447a7:	je     0x4447e7
  4447a9:	mov    ecx,DWORD PTR [esi+0x10]
  4447ac:	mov    DWORD PTR ds:0x44e4ec,ecx
  4447b2:	test   ecx,ecx
  4447b4:	je     0x4447d7
  4447b6:	mov    eax,DWORD PTR [ecx+0x20]
  4447b9:	cmp    eax,DWORD PTR ds:0x45f834
  4447bf:	jne    0x4447d7
  4447c1:	test   BYTE PTR [ecx+0x7],0x2
  4447c5:	jne    0x4447d7
  4447c7:	movzx  eax,WORD PTR [ecx+0x2c]
  4447cb:	test   al,0x40
  4447cd:	jne    0x444812
  4447cf:	or     eax,edx
  4447d1:	mov    WORD PTR [ecx+0x2c],ax
  4447d5:	jmp    0x444812
  4447d7:	push   0x0
  4447d9:	xor    edx,edx
  4447db:	mov    ecx,0x854
  4447e0:	call   0x42ee80
  4447e5:	jmp    0x444851
  4447e7:	test   BYTE PTR [esi+0x4],0x8
  4447eb:	je     0x444812
  4447ed:	mov    eax,DWORD PTR [ebp+0x8]
  4447f0:	sub    ebx,eax
  4447f2:	push   ebx
  4447f3:	push   eax
  4447f4:	push   0x44e500
  4447f9:	call   0x447646
  4447fe:	or     DWORD PTR ds:0x44e4ec,0xffffffff
  444805:	sub    eax,edi
  444807:	add    esp,0xc
  44480a:	add    eax,ebx
  44480c:	mov    ds:0x44e4ea,ax
  444812:	test   DWORD PTR [esi+0x4],0x8000
  444819:	mov    eax,DWORD PTR [esi+0x8]
  44481c:	je     0x444820
  44481e:	neg    eax
  444820:	mov    edx,DWORD PTR ds:0x448884
  444826:	mov    ds:0x44e4f0,eax
  44482b:	mov    eax,ds:0x45f830
  444830:	mov    ds:0x44e4f8,eax
  444835:	mov    eax,ds:0x460e34
  44483a:	mov    ecx,edi
  44483c:	mov    ds:0x44e4fc,eax
  444841:	call   0x43f399
  444846:	push   eax
  444847:	mov    ds:0x460e34,eax
  44484c:	call   0x444658
  444851:	pop    edi
  444852:	mov    eax,ds:0x45f83c
  444857:	mov    DWORD PTR [esi],eax
  444859:	mov    DWORD PTR ds:0x45f83c,esi
  44485f:	pop    esi
  444860:	pop    ebx
  444861:	pop    ebp
  444862:	ret    0x4
  444865:	cmp    ecx,0x8
  444868:	jg     0x444898
  44486a:	je     0x444892
  44486c:	dec    ecx
  44486d:	je     0x44488c
  44486f:	dec    ecx
  444870:	je     0x444886
  444872:	dec    ecx
  444873:	dec    ecx
  444874:	je     0x444880
  444876:	dec    ecx
  444877:	dec    ecx
  444878:	jne    0x4448a7
  44487a:	mov    eax,0x449488
  44487f:	ret    
  444880:	mov    eax,0x44946c
  444885:	ret    
  444886:	mov    eax,0x449450
  44488b:	ret    
  44488c:	mov    eax,0x449434
  444891:	ret    
  444892:	mov    eax,0x4494a4
  444897:	ret    
  444898:	cmp    ecx,0xa
  44489b:	je     0x4448b9
  44489d:	cmp    ecx,0x10
  4448a0:	je     0x4448b3
  4448a2:	cmp    ecx,0x20
  4448a5:	je     0x4448ad
  4448a7:	mov    eax,0x449418
  4448ac:	ret    
  4448ad:	mov    eax,0x4495f4
  4448b2:	ret    
  4448b3:	mov    eax,0x44954c
  4448b8:	ret    
  4448b9:	mov    eax,0x4494c0
  4448be:	ret    
  4448bf:	push   esi
  4448c0:	xor    esi,esi
  4448c2:	push   edi
  4448c3:	mov    edi,ecx
  4448c5:	mov    WORD PTR ds:0x4630c4,si
  4448cc:	movzx  eax,BYTE PTR [edi]
  4448cf:	movsx  ax,BYTE PTR [eax+0x448f88]
  4448d7:	add    si,ax
  4448da:	mov    WORD PTR ds:0x4630c4,si
  4448e1:	inc    edi
  4448e2:	push   cx
  4448e4:	mov    cl,0x7
  4448e6:	rol    WORD PTR ds:0x4630c4,cl
  4448ed:	pop    cx
  4448ef:	dec    edx
  4448f0:	je     0x4448fb
  4448f2:	mov    si,WORD PTR ds:0x4630c4
  4448f9:	jmp    0x4448cc
  4448fb:	pop    edi
  4448fc:	pop    esi
  4448fd:	ret    
  4448fe:	push   esi
  4448ff:	push   edi
  444900:	cmp    ecx,edx
  444902:	jne    0x444908
  444904:	mov    al,0x1
  444906:	jmp    0x444955
  444908:	test   ecx,ecx
  44490a:	je     0x444953
  44490c:	test   edx,edx
  44490e:	je     0x444953
  444910:	movzx  eax,WORD PTR [ecx+0xe]
  444914:	test   al,0x4
  444916:	je     0x444953
  444918:	test   al,al
  44491a:	jns    0x444953
  44491c:	cmp    WORD PTR [edx+0xe],ax
  444920:	jne    0x444953
  444922:	mov    ax,WORD PTR [ecx+0x18]
  444926:	cmp    ax,WORD PTR [edx+0x18]
  44492a:	jne    0x444953
  44492c:	mov    edi,DWORD PTR [ecx+0x14]
  44492f:	mov    esi,DWORD PTR [edx+0x14]
  444932:	test   edi,edi
  444934:	je     0x44494f
  444936:	test   esi,esi
  444938:	je     0x444953
  44493a:	mov    edx,DWORD PTR [esi+0x4]
  44493d:	mov    ecx,DWORD PTR [edi+0x4]
  444940:	call   0x4448fe
  444945:	test   al,al
  444947:	je     0x444953
  444949:	mov    edi,DWORD PTR [edi]
  44494b:	mov    esi,DWORD PTR [esi]
  44494d:	jmp    0x444932
  44494f:	test   esi,esi
  444951:	je     0x444904
  444953:	xor    al,al
  444955:	pop    edi
  444956:	pop    esi
  444957:	ret    
  444958:	push   ebp
  444959:	mov    ebp,esp
  44495b:	push   ecx
  44495c:	push   ebx
  44495d:	push   edi
  44495e:	mov    edi,DWORD PTR [ebp+0x8]
  444961:	push   0x1
  444963:	lea    ebx,[edi+0x4]
  444966:	mov    dl,0x3
  444968:	mov    ecx,ebx
  44496a:	call   0x44586f
  44496f:	cmp    BYTE PTR [edi],0x4
  444972:	je     0x4449c7
  444974:	cmp    DWORD PTR ds:0x45f834,0x0
  44497b:	jne    0x4449a6
  44497d:	lea    edx,[edi+0x8]
  444980:	mov    ecx,0x7f2
  444985:	test   edx,edx
  444987:	jne    0x444991
  444989:	push   edx
  44498a:	call   0x42ee80
  44498f:	jmp    0x44499b
  444991:	movzx  eax,BYTE PTR [edx]
  444994:	push   eax
  444995:	inc    edx
  444996:	call   0x42f15d
  44499b:	xor    eax,eax
  44499d:	mov    WORD PTR [edi+0x1],ax
  4449a1:	jmp    0x444bc6
  4449a6:	mov    al,ds:0x45f839
  4449ab:	test   al,al
  4449ad:	je     0x4449c1
  4449af:	and    al,0xfe
  4449b1:	mov    ds:0x45f839,al
  4449b6:	test   al,0x4
  4449b8:	je     0x4449c1
  4449ba:	mov    ecx,edi
  4449bc:	call   0x440ec6
  4449c1:	xor    eax,eax
  4449c3:	mov    WORD PTR [edi+0x1],ax
  4449c7:	xor    eax,eax
  4449c9:	push   esi
  4449ca:	mov    DWORD PTR [ebp-0x4],eax
  4449cd:	cmp    DWORD PTR [ebx],eax
  4449cf:	jne    0x444a1d
  4449d1:	cmp    BYTE PTR [edi+0x8],al
  4449d4:	jne    0x444a1d
  4449d6:	mov    BYTE PTR [ebp+0xb],0x1
  4449da:	push   0x3
  4449dc:	pop    edx
  4449dd:	mov    ecx,ebx
  4449df:	call   0x4458d0
  4449e4:	mov    esi,eax
  4449e6:	test   esi,esi
  4449e8:	je     0x444bc5
  4449ee:	cmp    BYTE PTR [ebp+0xb],0x0
  4449f2:	jne    0x444a93
  4449f8:	cmp    DWORD PTR ds:0x4630c8,0x1
  4449ff:	jne    0x444a9e
  444a05:	movzx  eax,BYTE PTR [esi+0x5]
  444a09:	mov    edx,esi
  444a0b:	push   eax
  444a0c:	sub    edx,eax
  444a0e:	mov    ecx,0x7d5
  444a13:	call   0x42f15d
  444a18:	jmp    0x444a9e
  444a1d:	test   BYTE PTR [edi+0x3],0x30
  444a21:	mov    BYTE PTR [ebp+0xb],al
  444a24:	jne    0x444a72
  444a26:	cmp    WORD PTR ds:0x45f990,ax
  444a2d:	je     0x444a72
  444a2f:	cmp    BYTE PTR ds:0x44899d,al
  444a35:	je     0x444a72
  444a37:	mov    edx,0x83
  444a3c:	mov    ecx,ebx
  444a3e:	call   0x4458d0
  444a43:	mov    esi,eax
  444a45:	test   esi,esi
  444a47:	je     0x444bc5
  444a4d:	mov    eax,ds:0x460e44
  444a52:	or     WORD PTR [esi+0x2c],0x8
  444a57:	cmp    DWORD PTR [eax+0x30],0x0
  444a5b:	jne    0x444a62
  444a5d:	mov    DWORD PTR [eax+0x30],esi
  444a60:	jmp    0x444a6a
  444a62:	mov    eax,ds:0x460e40
  444a67:	mov    DWORD PTR [eax+0x18],esi
  444a6a:	mov    DWORD PTR ds:0x460e40,esi
  444a70:	jmp    0x444a9e
  444a72:	push   0x1
  444a74:	mov    dl,0x3
  444a76:	mov    ecx,ebx
  444a78:	call   0x44586f
  444a7d:	mov    esi,eax
  444a7f:	test   esi,esi
  444a81:	je     0x4449da
  444a87:	mov    eax,DWORD PTR [esi+0x24]
  444a8a:	and    BYTE PTR [esi+0x7],0xfd
  444a8e:	mov    DWORD PTR [ebp-0x4],eax
  444a91:	jmp    0x444a9e
  444a93:	mov    cl,0x1
  444a95:	call   0x43859a
  444a9a:	or     BYTE PTR [esi+0x7],0x10
  444a9e:	test   BYTE PTR [edi+0x3],0x20
  444aa2:	je     0x444af3
  444aa4:	or     WORD PTR [esi+0x2c],0x10
  444aa9:	mov    eax,ds:0x448914
  444aae:	mov    eax,DWORD PTR [eax+0x18]
  444ab1:	test   eax,eax
  444ab3:	je     0x444ab8
  444ab5:	mov    DWORD PTR [eax+0x18],esi
  444ab8:	cmp    DWORD PTR ds:0x460e48,0x0
  444abf:	mov    eax,ds:0x448904
  444ac4:	mov    DWORD PTR [eax+0x18],esi
  444ac7:	mov    eax,ds:0x448914
  444acc:	mov    DWORD PTR [eax+0x18],esi
  444acf:	mov    eax,ds:0x448914
  444ad4:	mov    BYTE PTR [eax+0x1c],0x0
  444ad8:	jne    0x444ae0
  444ada:	mov    DWORD PTR ds:0x460e48,esi
  444ae0:	mov    eax,ds:0x448904
  444ae5:	mov    ecx,DWORD PTR [eax+0x18]
  444ae8:	mov    eax,ds:0x448924
  444aed:	mov    eax,DWORD PTR [eax+0x18]
  444af0:	mov    DWORD PTR [ecx+0x18],eax
  444af3:	cmp    BYTE PTR ds:0x44e047,0x0
  444afa:	je     0x444b1e
  444afc:	cmp    BYTE PTR ds:0x44e046,0x0
  444b03:	je     0x444b1e
  444b05:	cmp    BYTE PTR ds:0x45f692,0x0
  444b0c:	jne    0x444b1e
  444b0e:	test   BYTE PTR [esi+0x7],0x10
  444b12:	jne    0x444b1e
  444b14:	push   0x2
  444b16:	pop    edx
  444b17:	mov    ecx,esi
  444b19:	call   0x44609b
  444b1e:	mov    eax,0x80
  444b23:	test   BYTE PTR [esi+0x2c],al
  444b26:	je     0x444b40
  444b28:	movzx  eax,BYTE PTR [esi+0x5]
  444b2c:	mov    edx,esi
  444b2e:	push   eax
  444b2f:	sub    edx,eax
  444b31:	mov    ecx,0x7d5
  444b36:	call   0x42f15d
  444b3b:	mov    eax,0x80
  444b40:	or     WORD PTR [esi+0x2c],ax
  444b44:	test   BYTE PTR [edi+0x3],0x10
  444b48:	mov    cx,WORD PTR [esi+0x2c]
  444b4c:	jne    0x444b61
  444b4e:	cmp    BYTE PTR ds:0x44899d,0x0
  444b55:	je     0x444b61
  444b57:	mov    ax,ds:0x45f990
  444b5d:	mov    WORD PTR [esi+0x30],ax
  444b61:	mov    eax,ds:0x45f830
  444b66:	mov    DWORD PTR [esi+0x1c],eax
  444b69:	mov    eax,ds:0x45f834
  444b6e:	or     cx,0x1
  444b72:	mov    WORD PTR [esi+0x2c],cx
  444b76:	mov    DWORD PTR [esi+0x20],eax
  444b79:	cmp    BYTE PTR [edi],0x4
  444b7c:	je     0x444b96
  444b7e:	mov    edx,DWORD PTR ds:0x448884
  444b84:	mov    ecx,0x44887c
  444b89:	mov    DWORD PTR ds:0x44887f,esi
  444b8f:	call   0x43f399
  444b94:	jmp    0x444b98
  444b96:	mov    DWORD PTR [ebx],esi
  444b98:	mov    eax,DWORD PTR [ebp-0x4]
  444b9b:	mov    ecx,0x4493c4
  444ba0:	mov    DWORD PTR [esi+0x24],ecx
  444ba3:	test   eax,eax
  444ba5:	je     0x444bc5
  444ba7:	mov    edx,eax
  444ba9:	call   0x4448fe
  444bae:	test   al,al
  444bb0:	jne    0x444bc5
  444bb2:	movzx  eax,BYTE PTR [esi+0x5]
  444bb6:	sub    esi,eax
  444bb8:	push   eax
  444bb9:	mov    edx,esi
  444bbb:	mov    ecx,0x7d4
  444bc0:	call   0x42f15d
  444bc5:	pop    esi
  444bc6:	pop    edi
  444bc7:	pop    ebx
  444bc8:	leave  
  444bc9:	ret    0x4
  444bcc:	push   ebp
  444bcd:	mov    ebp,esp
  444bcf:	sub    esp,0x18
  444bd2:	push   esi
  444bd3:	mov    esi,ecx
  444bd5:	mov    eax,edx
  444bd7:	cmp    BYTE PTR [esi],0x64
  444bda:	mov    DWORD PTR [ebp-0x18],eax
  444bdd:	jne    0x444bed
  444bdf:	mov    DWORD PTR [eax],0x4493fc
  444be5:	lea    eax,[esi+0x1]
  444be8:	jmp    0x444d63
  444bed:	mov    edx,0x449418
  444bf2:	mov    DWORD PTR [eax],edx
  444bf4:	mov    DWORD PTR [ebp-0xc],esi
  444bf7:	mov    al,BYTE PTR [esi]
  444bf9:	inc    esi
  444bfa:	test   al,al
  444bfc:	jne    0x444bf7
  444bfe:	mov    cl,BYTE PTR [esi]
  444c00:	push   ebx
  444c01:	push   edi
  444c02:	mov    al,cl
  444c04:	lea    edi,[esi-0x1]
  444c07:	xor    ebx,ebx
  444c09:	mov    DWORD PTR [ebp-0x10],edi
  444c0c:	mov    DWORD PTR [ebp-0x14],0x8
  444c13:	test   al,al
  444c15:	je     0x444ced
  444c1b:	cmp    al,0xd
  444c1d:	je     0x444c53
  444c1f:	sub    al,0x26
  444c21:	cmp    al,0x2
  444c23:	ja     0x444c43
  444c25:	inc    esi
  444c26:	mov    DWORD PTR [ebp-0x8],esi
  444c29:	cmp    cl,0x27
  444c2c:	jne    0x444c33
  444c2e:	lea    edi,[ebx+0x1]
  444c31:	jmp    0x444c35
  444c33:	xor    edi,edi
  444c35:	imul   edi,edi,0x1c
  444c38:	add    edi,0x4493c4
  444c3e:	jmp    0x444cf3
  444c43:	movzx  edi,cl
  444c46:	sub    edi,0xe
  444c49:	imul   edi,edi,0x1c
  444c4c:	add    edi,edx
  444c4e:	jmp    0x444cef
  444c53:	inc    esi
  444c54:	mov    ecx,esi
  444c56:	call   0x445afc
  444c5b:	mov    ebx,eax
  444c5d:	test   ebx,ebx
  444c5f:	jne    0x444cab
  444c61:	cmp    edi,DWORD PTR [ebp-0xc]
  444c64:	jne    0x444c74
  444c66:	mov    edx,esi
  444c68:	mov    ecx,0x7d6
  444c6d:	call   0x42f140
  444c72:	jmp    0x444c84
  444c74:	push   0xa
  444c76:	pop    edx
  444c77:	mov    ecx,esi
  444c79:	call   0x4458d0
  444c7e:	mov    ebx,eax
  444c80:	test   ebx,ebx
  444c82:	jne    0x444c92
  444c84:	movzx  eax,BYTE PTR [esi+0x4]
  444c88:	add    eax,0x5
  444c8b:	add    eax,esi
  444c8d:	jmp    0x444d61
  444c92:	or     BYTE PTR [ebx+0x7],0x20
  444c96:	push   0x1c
  444c98:	pop    ecx
  444c99:	call   0x43f42e
  444c9e:	mov    ecx,DWORD PTR [ebp-0x14]
  444ca1:	mov    WORD PTR [eax+0xe],cx
  444ca5:	mov    DWORD PTR [eax+0x14],ebx
  444ca8:	mov    DWORD PTR [ebx+0x1c],eax
  444cab:	movzx  eax,BYTE PTR [esi+0x4]
  444caf:	add    eax,0x5
  444cb2:	add    esi,eax
  444cb4:	movzx  eax,BYTE PTR [ebx+0x6]
  444cb8:	mov    DWORD PTR [ebp-0x8],esi
  444cbb:	sub    eax,0xa
  444cbe:	je     0x444ce8
  444cc0:	dec    eax
  444cc1:	dec    eax
  444cc2:	je     0x444cdf
  444cc4:	dec    eax
  444cc5:	je     0x444ce8
  444cc7:	movzx  eax,BYTE PTR [ebx+0x5]
  444ccb:	sub    ebx,eax
  444ccd:	push   eax
  444cce:	mov    edx,ebx
  444cd0:	mov    ecx,0x87f
  444cd5:	call   0x42f15d
  444cda:	jmp    0x444d5f
  444cdf:	mov    edi,DWORD PTR [ebx+0x18]
  444ce2:	test   edi,edi
  444ce4:	jne    0x444cf3
  444ce6:	jmp    0x444cc7
  444ce8:	mov    edi,DWORD PTR [ebx+0x1c]
  444ceb:	jmp    0x444cf3
  444ced:	mov    edi,edx
  444cef:	inc    esi
  444cf0:	mov    DWORD PTR [ebp-0x8],esi
  444cf3:	mov    eax,DWORD PTR [ebp-0x10]
  444cf6:	cmp    DWORD PTR [ebp-0xc],eax
  444cf9:	je     0x444d5a
  444cfb:	mov    esi,DWORD PTR [ebp-0xc]
  444cfe:	dec    eax
  444cff:	mov    DWORD PTR [ebp-0x10],eax
  444d02:	cmp    BYTE PTR [eax],0x2
  444d05:	lea    ebx,[edi+0x8]
  444d08:	sete   cl
  444d0b:	mov    BYTE PTR [ebp-0x1],cl
  444d0e:	test   cl,cl
  444d10:	jne    0x444d15
  444d12:	lea    ebx,[edi+0x4]
  444d15:	mov    ecx,DWORD PTR [ebx]
  444d17:	test   ecx,ecx
  444d19:	je     0x444d1f
  444d1b:	mov    edi,ecx
  444d1d:	jmp    0x444d53
  444d1f:	push   0x1c
  444d21:	pop    ecx
  444d22:	call   0x43f42e
  444d27:	cmp    BYTE PTR [ebp-0x1],0x0
  444d2b:	mov    DWORD PTR [eax],edi
  444d2d:	je     0x444d3f
  444d2f:	push   0x41
  444d31:	pop    ecx
  444d32:	mov    WORD PTR [eax+0xe],cx
  444d36:	mov    DWORD PTR [eax+0x10],0x6
  444d3d:	jmp    0x444d4c
  444d3f:	xor    ecx,ecx
  444d41:	inc    ecx
  444d42:	mov    WORD PTR [eax+0xe],cx
  444d46:	mov    ecx,DWORD PTR [ebp-0x14]
  444d49:	mov    DWORD PTR [eax+0x10],ecx
  444d4c:	mov    DWORD PTR [ebx],eax
  444d4e:	mov    edi,eax
  444d50:	mov    eax,DWORD PTR [ebp-0x10]
  444d53:	cmp    eax,esi
  444d55:	jne    0x444cfe
  444d57:	mov    esi,DWORD PTR [ebp-0x8]
  444d5a:	mov    eax,DWORD PTR [ebp-0x18]
  444d5d:	mov    DWORD PTR [eax],edi
  444d5f:	mov    eax,esi
  444d61:	pop    edi
  444d62:	pop    ebx
  444d63:	pop    esi
  444d64:	leave  
  444d65:	ret    
  444d66:	push   ebp
  444d67:	mov    ebp,esp
  444d69:	push   ecx
  444d6a:	mov    eax,DWORD PTR [ebp+0x8]
  444d6d:	push   ebx
  444d6e:	movzx  ecx,WORD PTR [eax+0x1]
  444d72:	push   esi
  444d73:	add    ecx,eax
  444d75:	lea    esi,[eax+0x4]
  444d78:	mov    DWORD PTR [ebp-0x4],ecx
  444d7b:	push   edi
  444d7c:	mov    dl,0xc
  444d7e:	mov    ecx,esi
  444d80:	xor    ebx,ebx
  444d82:	call   0x445847
  444d87:	mov    edi,eax
  444d89:	test   edi,edi
  444d8b:	jne    0x444d9f
  444d8d:	push   0xc
  444d8f:	pop    edx
  444d90:	mov    ecx,esi
  444d92:	call   0x4458d0
  444d97:	mov    edi,eax
  444d99:	test   edi,edi
  444d9b:	je     0x444e16
  444d9d:	jmp    0x444da2
  444d9f:	mov    ebx,DWORD PTR [edi+0x18]
  444da2:	movzx  ecx,BYTE PTR [esi+0x4]
  444da6:	add    ecx,0x5
  444da9:	add    ecx,esi
  444dab:	cmp    BYTE PTR [ecx],0x71
  444dae:	jne    0x444dc7
  444db0:	inc    ecx
  444db1:	test   ebx,ebx
  444db3:	je     0x444dbb
  444db5:	push   ebx
  444db6:	lea    edx,[ebp+0x8]
  444db9:	jmp    0x444dc0
  444dbb:	push   0x0
  444dbd:	lea    edx,[edi+0x18]
  444dc0:	call   0x4408fc
  444dc5:	jmp    0x444e02
  444dc7:	lea    edx,[edi+0x18]
  444dca:	call   0x444bcc
  444dcf:	mov    ecx,DWORD PTR [edi+0x18]
  444dd2:	mov    DWORD PTR [ebp+0x8],eax
  444dd5:	test   ecx,ecx
  444dd7:	jne    0x444ddd
  444dd9:	or     BYTE PTR [edi+0x7],0x20
  444ddd:	test   ebx,ebx
  444ddf:	je     0x444e02
  444de1:	mov    edx,ebx
  444de3:	call   0x4448fe
  444de8:	test   al,al
  444dea:	jne    0x444dff
  444dec:	movzx  eax,BYTE PTR [edi+0x5]
  444df0:	sub    edi,eax
  444df2:	push   eax
  444df3:	mov    edx,edi
  444df5:	mov    ecx,0x7d4
  444dfa:	call   0x42f15d
  444dff:	mov    eax,DWORD PTR [ebp+0x8]
  444e02:	inc    eax
  444e03:	cmp    eax,DWORD PTR [ebp-0x4]
  444e06:	jae    0x444e16
  444e08:	push   0x0
  444e0a:	xor    edx,edx
  444e0c:	mov    ecx,0x7da
  444e11:	call   0x42ee80
  444e16:	pop    edi
  444e17:	pop    esi
  444e18:	pop    ebx
  444e19:	leave  
  444e1a:	ret    0x4
  444e1d:	push   ebp
  444e1e:	mov    ebp,esp
  444e20:	push   ebx
  444e21:	push   esi
  444e22:	mov    esi,DWORD PTR [ebp+0x8]
  444e25:	push   edi
  444e26:	mov    cl,BYTE PTR [esi]
  444e28:	mov    BYTE PTR ds:0x462cb7,0x1
  444e2f:	call   0x43859a
  444e34:	movzx  edi,WORD PTR [esi+0x1]
  444e38:	add    edi,esi
  444e3a:	add    esi,0x3
  444e3d:	jmp    0x444eb0
  444e3f:	lea    ecx,[esi+0x1]
  444e42:	call   0x445afc
  444e47:	mov    edx,eax
  444e49:	test   edx,edx
  444e4b:	je     0x444e91
  444e4d:	mov    al,BYTE PTR [edx+0x6]
  444e50:	movzx  ecx,al
  444e53:	cmp    BYTE PTR [ecx+0x406514],0x0
  444e5a:	je     0x444ec4
  444e5c:	cmp    al,0x8
  444e5e:	je     0x444e66
  444e60:	test   BYTE PTR [edx+0x2c],0x8
  444e64:	jne    0x444eb6
  444e66:	lea    ebx,[edx+0x7]
  444e69:	mov    cl,BYTE PTR [ebx]
  444e6b:	mov    al,cl
  444e6d:	and    al,0x3
  444e6f:	cmp    al,0x2
  444e71:	je     0x444ebd
  444e73:	test   cl,0x1
  444e76:	jne    0x444ea7
  444e78:	movzx  ecx,BYTE PTR [edx+0x5]
  444e7c:	push   ecx
  444e7d:	lea    eax,[esi+0x6]
  444e80:	push   eax
  444e81:	sub    edx,ecx
  444e83:	push   edx
  444e84:	call   0x447646
  444e89:	add    esp,0xc
  444e8c:	or     BYTE PTR [ebx],0x1
  444e8f:	jmp    0x444ea7
  444e91:	cmp    BYTE PTR ds:0x45f692,0x0
  444e98:	je     0x444ea7
  444e9a:	lea    edx,[esi+0x1]
  444e9d:	mov    ecx,0x7d6
  444ea2:	call   0x42f140
  444ea7:	movzx  eax,BYTE PTR [esi+0x5]
  444eab:	add    esi,0x6
  444eae:	add    esi,eax
  444eb0:	cmp    esi,edi
  444eb2:	jb     0x444e3f
  444eb4:	jmp    0x444ed5
  444eb6:	mov    ecx,0x89b
  444ebb:	jmp    0x444ec9
  444ebd:	mov    ecx,0x7d5
  444ec2:	jmp    0x444ec9
  444ec4:	mov    ecx,0x7de
  444ec9:	movzx  eax,BYTE PTR [edx+0x5]
  444ecd:	sub    edx,eax
  444ecf:	push   eax
  444ed0:	call   0x42f15d
  444ed5:	pop    edi
  444ed6:	pop    esi
  444ed7:	mov    BYTE PTR ds:0x462cb7,0x0
  444ede:	pop    ebx
  444edf:	pop    ebp
  444ee0:	ret    0x4
  444ee3:	push   ebp
  444ee4:	mov    ebp,esp
  444ee6:	push   ebx
  444ee7:	push   esi
  444ee8:	mov    esi,DWORD PTR [ebp+0x8]
  444eeb:	push   edi
  444eec:	mov    cl,BYTE PTR [esi]
  444eee:	call   0x43859a
  444ef3:	movzx  ebx,WORD PTR [esi+0x1]
  444ef7:	add    ebx,esi
  444ef9:	lea    edi,[esi+0x3]
  444efc:	jmp    0x444f70
  444efe:	lea    ecx,[edi+0x1]
  444f01:	call   0x445afc
  444f06:	mov    esi,eax
  444f08:	test   esi,esi
  444f0a:	je     0x444f51
  444f0c:	mov    al,BYTE PTR [esi+0x6]
  444f0f:	movzx  ecx,al
  444f12:	cmp    BYTE PTR [ecx+0x406514],0x0
  444f19:	je     0x444f84
  444f1b:	cmp    al,0x8
  444f1d:	je     0x444f25
  444f1f:	test   BYTE PTR [esi+0x2c],0x8
  444f23:	jne    0x444f76
  444f25:	mov    cl,BYTE PTR [esi+0x7]
  444f28:	mov    al,cl
  444f2a:	and    al,0x3
  444f2c:	cmp    al,0x2
  444f2e:	je     0x444f7d
  444f30:	test   cl,0x1
  444f33:	jne    0x444f67
  444f35:	movzx  ecx,BYTE PTR [esi+0x5]
  444f39:	push   ecx
  444f3a:	lea    eax,[edi+0x6]
  444f3d:	push   eax
  444f3e:	mov    eax,esi
  444f40:	sub    eax,ecx
  444f42:	push   eax
  444f43:	call   0x447646
  444f48:	add    esp,0xc
  444f4b:	or     BYTE PTR [esi+0x7],0x1
  444f4f:	jmp    0x444f67
  444f51:	cmp    BYTE PTR ds:0x45f692,0x0
  444f58:	je     0x444f67
  444f5a:	lea    edx,[edi+0x1]
  444f5d:	mov    ecx,0x7d6
  444f62:	call   0x42f140
  444f67:	movzx  eax,BYTE PTR [edi+0x5]
  444f6b:	add    edi,0x6
  444f6e:	add    edi,eax
  444f70:	cmp    edi,ebx
  444f72:	jb     0x444efe
  444f74:	jmp    0x444f97
  444f76:	mov    ecx,0x89b
  444f7b:	jmp    0x444f89
  444f7d:	mov    ecx,0x7d5
  444f82:	jmp    0x444f89
  444f84:	mov    ecx,0x7de
  444f89:	movzx  eax,BYTE PTR [esi+0x5]
  444f8d:	sub    esi,eax
  444f8f:	push   eax
  444f90:	mov    edx,esi
  444f92:	call   0x42f15d
  444f97:	pop    edi
  444f98:	pop    esi
  444f99:	pop    ebx
  444f9a:	pop    ebp
  444f9b:	ret    0x4
  444f9e:	movzx  edx,dl
  444fa1:	cmp    DWORD PTR [edx*8+0x45f858],0x0
  444fa9:	jne    0x444fb4
  444fab:	mov    DWORD PTR [edx*8+0x45f858],ecx
  444fb2:	jmp    0x444fbe
  444fb4:	mov    eax,DWORD PTR [edx*8+0x45f85c]
  444fbb:	mov    DWORD PTR [eax+0x18],ecx
  444fbe:	mov    DWORD PTR [edx*8+0x45f85c],ecx
  444fc5:	ret    
  444fc6:	int3   
  444fc7:	int3   
  444fc8:	int3   
  444fc9:	mov    eax,ds:0x45f860
  444fce:	test   eax,eax
  444fd0:	je     0x44500e
  444fd2:	push   esi
  444fd3:	xor    edx,edx
  444fd5:	jmp    0x444fdf
  444fd7:	cmp    eax,ecx
  444fd9:	je     0x444fea
  444fdb:	mov    edx,eax
  444fdd:	mov    eax,esi
  444fdf:	mov    esi,DWORD PTR [eax+0x18]
  444fe2:	test   esi,esi
  444fe4:	jne    0x444fd7
  444fe6:	cmp    eax,ecx
  444fe8:	jne    0x44500d
  444fea:	mov    eax,DWORD PTR [eax+0x18]
  444fed:	test   edx,edx
  444fef:	jne    0x445006
  444ff1:	mov    ds:0x45f860,eax
  444ff6:	cmp    DWORD PTR ds:0x45f864,ecx
  444ffc:	jne    0x445009
  444ffe:	and    DWORD PTR ds:0x45f864,edx
  445004:	jmp    0x445009
  445006:	mov    DWORD PTR [edx+0x18],eax
  445009:	and    DWORD PTR [ecx+0x18],0x0
  44500d:	pop    esi
  44500e:	ret    
  44500f:	push   ebp
  445010:	mov    ebp,esp
  445012:	sub    esp,0x18
  445015:	push   ebx
  445016:	mov    ebx,DWORD PTR [ebp+0x8]
  445019:	push   edi
  44501a:	movzx  eax,WORD PTR [ebx+0x1]
  44501e:	xor    edi,edi
  445020:	add    eax,ebx
  445022:	cmp    BYTE PTR ds:0x45f692,0x0
  445029:	mov    DWORD PTR [ebp-0x8],edi
  44502c:	mov    DWORD PTR [ebp-0x18],eax
  44502f:	jne    0x445039
  445031:	xor    ecx,ecx
  445033:	mov    WORD PTR [ebx+0x1],cx
  445037:	jmp    0x44503c
  445039:	mov    BYTE PTR [ebx],0x4b
  44503c:	mov    cl,BYTE PTR [ebx+0x3]
  44503f:	add    ebx,0x4
  445042:	mov    BYTE PTR [ebp-0x1],cl
  445045:	cmp    ebx,eax
  445047:	jae    0x4455e0
  44504d:	push   esi
  44504e:	cmp    BYTE PTR ds:0x45f692,0x0
  445055:	lea    eax,[ebx-0x1]
  445058:	mov    BYTE PTR [ebp+0xb],0x0
  44505c:	mov    DWORD PTR [ebp-0x14],eax
  44505f:	jne    0x445064
  445061:	add    ebx,0x3
  445064:	inc    ebx
  445065:	mov    ecx,ebx
  445067:	mov    DWORD PTR [ebp-0x10],ebx
  44506a:	call   0x445afc
  44506f:	mov    esi,eax
  445071:	test   esi,esi
  445073:	je     0x445091
  445075:	mov    cl,BYTE PTR [esi+0x6]
  445078:	movzx  eax,cl
  44507b:	cmp    BYTE PTR [eax+0x406514],0x0
  445082:	je     0x4455cc
  445088:	cmp    cl,0x8
  44508b:	jne    0x445091
  44508d:	and    BYTE PTR [esi+0x7],0xbf
  445091:	movzx  eax,BYTE PTR [ebx+0x4]
  445095:	add    ebx,0x5
  445098:	add    ebx,eax
  44509a:	xor    ecx,ecx
  44509c:	cmp    BYTE PTR [ebx],0xd
  44509f:	mov    DWORD PTR [ebp-0xc],ecx
  4450a2:	jne    0x44516c
  4450a8:	mov    cl,0x24
  4450aa:	call   0x43859a
  4450af:	lea    ecx,[ebx+0x1]
  4450b2:	call   0x445afc
  4450b7:	mov    ecx,eax
  4450b9:	mov    DWORD PTR [ebp-0xc],ecx
  4450bc:	test   ecx,ecx
  4450be:	jne    0x4450d5
  4450c0:	cmp    BYTE PTR ds:0x45f692,al
  4450c6:	je     0x4450d5
  4450c8:	lea    edx,[ebx+0x1]
  4450cb:	mov    ecx,0x7d6
  4450d0:	call   0x42f140
  4450d5:	movzx  eax,BYTE PTR [ebx+0x5]
  4450d9:	add    ebx,0x6
  4450dc:	add    ebx,eax
  4450de:	cmp    BYTE PTR ds:0x45f692,0x0
  4450e5:	jne    0x44516c
  4450eb:	cmp    BYTE PTR [ebp-0x1],0x27
  4450ef:	jne    0x4450ff
  4450f1:	push   0x0
  4450f3:	xor    edx,edx
  4450f5:	mov    ecx,0x84a
  4450fa:	call   0x42ee80
  4450ff:	mov    al,BYTE PTR [ebx+0x1]
  445102:	cmp    al,0x7e
  445104:	jne    0x44510b
  445106:	add    ebx,0x2
  445109:	jmp    0x445145
  44510b:	cmp    al,0x71
  44510d:	jne    0x445135
  44510f:	test   esi,esi
  445111:	je     0x445131
  445113:	mov    ecx,DWORD PTR [esi+0x24]
  445116:	test   ecx,ecx
  445118:	je     0x445131
  44511a:	mov    al,BYTE PTR [ecx+0xe]
  44511d:	and    al,0x84
  44511f:	cmp    al,0x84
  445121:	jne    0x445131
  445123:	push   ecx
  445124:	lea    ecx,[ebx+0x2]
  445127:	lea    edx,[ebp-0x8]
  44512a:	call   0x4408fc
  44512f:	jmp    0x445140
  445131:	push   0x0
  445133:	jmp    0x445124
  445135:	lea    edx,[ebp-0x8]
  445138:	lea    ecx,[ebx+0x1]
  44513b:	call   0x444bcc
  445140:	mov    edi,DWORD PTR [ebp-0x8]
  445143:	mov    ebx,eax
  445145:	mov    ecx,DWORD PTR [ebp-0x14]
  445148:	mov    edx,DWORD PTR ds:0x448884
  44514e:	mov    al,bl
  445150:	sub    al,cl
  445152:	mov    BYTE PTR [ecx+0x1],al
  445155:	mov    al,BYTE PTR [ebp-0x1]
  445158:	mov    BYTE PTR [ecx],0x24
  44515b:	mov    BYTE PTR [ecx+0x2],0x0
  44515f:	mov    BYTE PTR [ecx+0x3],al
  445162:	call   0x43f399
  445167:	jmp    0x4455c1
  44516c:	mov    al,BYTE PTR [ebx+0x1]
  44516f:	cmp    al,0x7e
  445171:	jne    0x445183
  445173:	xor    edx,edx
  445175:	add    ebx,0x2
  445178:	inc    edx
  445179:	mov    al,dl
  44517b:	mov    BYTE PTR [ebp+0xb],al
  44517e:	jmp    0x44520d
  445183:	cmp    al,0x71
  445185:	jne    0x4451f7
  445187:	test   esi,esi
  445189:	jne    0x44519a
  44518b:	push   0x0
  44518d:	lea    ecx,[ebx+0x2]
  445190:	lea    edx,[ebp-0x8]
  445193:	call   0x4408fc
  445198:	jmp    0x445202
  44519a:	mov    ecx,DWORD PTR [esi+0x24]
  44519d:	test   ecx,ecx
  44519f:	je     0x4451e2
  4451a1:	mov    al,BYTE PTR [ecx+0xe]
  4451a4:	and    al,0x84
  4451a6:	cmp    al,0x84
  4451a8:	jne    0x4451e2
  4451aa:	push   ecx
  4451ab:	lea    ecx,[ebx+0x2]
  4451ae:	lea    edx,[ebp-0x8]
  4451b1:	call   0x4408fc
  4451b6:	mov    edi,DWORD PTR [ebp-0x8]
  4451b9:	mov    ebx,eax
  4451bb:	mov    ax,WORD PTR [esi+0x2c]
  4451bf:	xor    ax,WORD PTR [edi+0x18]
  4451c3:	mov    ecx,0xe00
  4451c8:	test   cx,ax
  4451cb:	je     0x445207
  4451cd:	movzx  eax,BYTE PTR [esi+0x5]
  4451d1:	mov    edx,esi
  4451d3:	push   eax
  4451d4:	sub    edx,eax
  4451d6:	mov    ecx,0x840
  4451db:	call   0x42f15d
  4451e0:	jmp    0x445207
  4451e2:	movzx  eax,BYTE PTR [esi+0x5]
  4451e6:	mov    edx,esi
  4451e8:	push   eax
  4451e9:	sub    edx,eax
  4451eb:	mov    ecx,0x7d5
  4451f0:	call   0x42f15d
  4451f5:	jmp    0x44518b
  4451f7:	lea    edx,[ebp-0x8]
  4451fa:	lea    ecx,[ebx+0x1]
  4451fd:	call   0x444bcc
  445202:	mov    edi,DWORD PTR [ebp-0x8]
  445205:	mov    ebx,eax
  445207:	mov    al,BYTE PTR [ebp+0xb]
  44520a:	xor    edx,edx
  44520c:	inc    edx
  44520d:	cmp    BYTE PTR [ebp-0x1],0x27
  445211:	jne    0x4452a3
  445217:	test   esi,esi
  445219:	je     0x445261
  44521b:	test   al,al
  44521d:	je     0x44522c
  44521f:	cmp    BYTE PTR [esi+0x6],0x8
  445223:	je     0x44524c
  445225:	mov    ecx,0x7d5
  44522a:	jmp    0x44523e
  44522c:	mov    eax,DWORD PTR [esi+0x24]
  44522f:	mov    al,BYTE PTR [eax+0xe]
  445232:	xor    al,BYTE PTR [edi+0xe]
  445235:	test   al,0x60
  445237:	je     0x44524c
  445239:	mov    ecx,0x7d4
  44523e:	movzx  eax,BYTE PTR [esi+0x5]
  445242:	mov    edx,esi
  445244:	push   eax
  445245:	sub    edx,eax
  445247:	call   0x42f15d
  44524c:	mov    al,BYTE PTR [esi+0x7]
  44524f:	test   al,0x3
  445251:	jne    0x4455c1
  445257:	or     al,0x1
  445259:	mov    BYTE PTR [esi+0x7],al
  44525c:	jmp    0x4455c1
  445261:	test   al,al
  445263:	je     0x44526a
  445265:	push   0x8
  445267:	pop    edx
  445268:	jmp    0x445286
  44526a:	movzx  ecx,WORD PTR [edi+0xe]
  44526e:	mov    al,cl
  445270:	and    al,0x84
  445272:	cmp    al,0x84
  445274:	je     0x445286
  445276:	and    cl,0x4
  445279:	movzx  edx,cl
  44527c:	neg    edx
  44527e:	sbb    edx,edx
  445280:	and    edx,0xfffffffd
  445283:	add    edx,0x3
  445286:	mov    ecx,DWORD PTR [ebp-0x10]
  445289:	call   0x4458d0
  44528e:	mov    esi,eax
  445290:	test   esi,esi
  445292:	je     0x4455c1
  445298:	or     BYTE PTR [esi+0x7],0x3
  44529c:	mov    dl,0x1
  44529e:	jmp    0x4454cc
  4452a3:	mov    eax,DWORD PTR [ebp-0xc]
  4452a6:	test   eax,eax
  4452a8:	je     0x4453fc
  4452ae:	test   esi,esi
  4452b0:	je     0x445340
  4452b6:	cmp    BYTE PTR [ebp+0xb],0x0
  4452ba:	je     0x4452c9
  4452bc:	cmp    BYTE PTR [esi+0x6],0x8
  4452c0:	je     0x44530a
  4452c2:	mov    ecx,0x7d5
  4452c7:	jmp    0x4452f9
  4452c9:	mov    eax,0x80
  4452ce:	test   BYTE PTR [esi+0x2c],al
  4452d1:	je     0x4452e6
  4452d3:	movzx  eax,BYTE PTR [esi+0x5]
  4452d7:	mov    edx,esi
  4452d9:	push   eax
  4452da:	sub    edx,eax
  4452dc:	mov    ecx,0x7d5
  4452e1:	call   0x42f15d
  4452e6:	mov    ecx,DWORD PTR [esi+0x24]
  4452e9:	mov    edx,edi
  4452eb:	call   0x4448fe
  4452f0:	test   al,al
  4452f2:	jne    0x445307
  4452f4:	mov    ecx,0x7d4
  4452f9:	movzx  eax,BYTE PTR [esi+0x5]
  4452fd:	mov    edx,esi
  4452ff:	push   eax
  445300:	sub    edx,eax
  445302:	call   0x42f15d
  445307:	mov    eax,DWORD PTR [ebp-0xc]
  44530a:	test   BYTE PTR [esi+0x7],0x2
  44530e:	je     0x44532e
  445310:	mov    cl,BYTE PTR [esi+0x6]
  445313:	cmp    cl,0x8
  445316:	jne    0x445325
  445318:	cmp    DWORD PTR [esi+0x28],eax
  44531b:	jne    0x44532e
  44531d:	cmp    cl,cl
  44531f:	je     0x4455c1
  445325:	cmp    DWORD PTR [esi+0x30],eax
  445328:	je     0x4455c1
  44532e:	movzx  eax,BYTE PTR [esi+0x5]
  445332:	sub    esi,eax
  445334:	mov    edx,esi
  445336:	mov    ecx,0x7d5
  44533b:	jmp    0x4453f1
  445340:	cmp    BYTE PTR [ebp+0xb],0x0
  445344:	je     0x44534b
  445346:	push   0x8
  445348:	pop    edx
  445349:	jmp    0x44535e
  44534b:	mov    al,BYTE PTR [edi+0xe]
  44534e:	xor    edx,edx
  445350:	and    al,0x84
  445352:	cmp    al,0x84
  445354:	setne  dl
  445357:	lea    edx,[edx*2+0x1]
  44535e:	mov    ecx,DWORD PTR [ebp-0x10]
  445361:	call   0x4458d0
  445366:	mov    esi,eax
  445368:	test   esi,esi
  44536a:	je     0x4455c1
  445370:	mov    al,BYTE PTR [esi+0x6]
  445373:	cmp    al,0x8
  445375:	je     0x445380
  445377:	mov    ecx,0x80
  44537c:	or     WORD PTR [esi+0x2c],cx
  445380:	or     BYTE PTR [esi+0x7],0x2
  445384:	mov    ecx,DWORD PTR [ebp-0xc]
  445387:	cmp    al,0x8
  445389:	jne    0x445390
  44538b:	mov    DWORD PTR [esi+0x28],ecx
  44538e:	jmp    0x445393
  445390:	mov    DWORD PTR [esi+0x30],ecx
  445393:	mov    cl,BYTE PTR [ecx+0x6]
  445396:	cmp    al,cl
  445398:	je     0x4453c7
  44539a:	cmp    al,0x3
  44539c:	jne    0x4453b4
  44539e:	test   cl,cl
  4453a0:	je     0x4453c7
  4453a2:	cmp    al,al
  4453a4:	jne    0x4453b4
  4453a6:	cmp    cl,0x1
  4453a9:	je     0x4453c7
  4453ab:	cmp    al,al
  4453ad:	jne    0x4453b4
  4453af:	cmp    cl,0x2
  4453b2:	je     0x4453c7
  4453b4:	movzx  eax,BYTE PTR [esi+0x5]
  4453b8:	mov    edx,esi
  4453ba:	push   eax
  4453bb:	sub    edx,eax
  4453bd:	mov    ecx,0x7d4
  4453c2:	call   0x42f15d
  4453c7:	mov    dl,0x2
  4453c9:	mov    ecx,esi
  4453cb:	call   0x444f9e
  4453d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4453d3:	movzx  eax,BYTE PTR [ecx+0x6]
  4453d7:	cmp    BYTE PTR [eax+0x406514],0x0
  4453de:	jne    0x4454d3
  4453e4:	movzx  eax,BYTE PTR [ecx+0x5]
  4453e8:	sub    ecx,eax
  4453ea:	mov    edx,ecx
  4453ec:	mov    ecx,0x7de
  4453f1:	push   eax
  4453f2:	call   0x42f15d
  4453f7:	jmp    0x4455c1
  4453fc:	test   esi,esi
  4453fe:	je     0x445487
  445404:	mov    al,BYTE PTR [ebp+0xb]
  445407:	test   al,al
  445409:	je     0x44542d
  44540b:	cmp    BYTE PTR [esi+0x6],0x8
  44540f:	je     0x4454d6
  445415:	movzx  eax,BYTE PTR [esi+0x5]
  445419:	mov    edx,esi
  44541b:	push   eax
  44541c:	sub    edx,eax
  44541e:	mov    ecx,0x7d5
  445423:	call   0x42f15d
  445428:	jmp    0x4454d3
  44542d:	mov    eax,0x80
  445432:	test   BYTE PTR [esi+0x2c],al
  445435:	je     0x445453
  445437:	mov    al,BYTE PTR [esi+0x7]
  44543a:	and    al,0x3
  44543c:	cmp    al,0x2
  44543e:	je     0x445453
  445440:	movzx  eax,BYTE PTR [esi+0x5]
  445444:	mov    edx,esi
  445446:	push   eax
  445447:	sub    edx,eax
  445449:	mov    ecx,0x7d5
  44544e:	call   0x42f15d
  445453:	cmp    BYTE PTR [esi+0x6],0x8
  445457:	je     0x445467
  445459:	mov    ecx,DWORD PTR [esi+0x24]
  44545c:	mov    edx,edi
  44545e:	call   0x4448fe
  445463:	test   al,al
  445465:	jne    0x4454da
  445467:	movzx  eax,BYTE PTR [esi+0x5]
  44546b:	mov    edx,esi
  44546d:	push   eax
  44546e:	sub    edx,eax
  445470:	mov    ecx,0x7d4
  445475:	call   0x42f15d
  44547a:	cmp    BYTE PTR [esi+0x6],0x8
  44547e:	jne    0x4454da
  445480:	xor    edi,edi
  445482:	mov    DWORD PTR [ebp-0x8],edi
  445485:	jmp    0x4454d3
  445487:	cmp    BYTE PTR [ebp+0xb],0x0
  44548b:	je     0x445492
  44548d:	push   0x8
  44548f:	pop    edx
  445490:	jmp    0x4454a5
  445492:	mov    al,BYTE PTR [edi+0xe]
  445495:	xor    edx,edx
  445497:	and    al,0x84
  445499:	cmp    al,0x84
  44549b:	setne  dl
  44549e:	lea    edx,[edx*2+0x1]
  4454a5:	mov    ecx,DWORD PTR [ebp-0x10]
  4454a8:	call   0x4458d0
  4454ad:	mov    esi,eax
  4454af:	test   esi,esi
  4454b1:	je     0x4455c1
  4454b7:	cmp    BYTE PTR [esi+0x6],0x8
  4454bb:	je     0x4454c6
  4454bd:	mov    eax,0x80
  4454c2:	or     WORD PTR [esi+0x2c],ax
  4454c6:	or     BYTE PTR [esi+0x7],0x2
  4454ca:	xor    dl,dl
  4454cc:	mov    ecx,esi
  4454ce:	call   0x444f9e
  4454d3:	mov    al,BYTE PTR [ebp+0xb]
  4454d6:	test   al,al
  4454d8:	jne    0x445518
  4454da:	mov    DWORD PTR [esi+0x24],edi
  4454dd:	test   edi,edi
  4454df:	je     0x4454fc
  4454e1:	movzx  eax,WORD PTR [edi+0xe]
  4454e5:	test   al,0x4
  4454e7:	je     0x4454f2
  4454e9:	xor    eax,eax
  4454eb:	inc    eax
  4454ec:	or     WORD PTR [esi+0x2c],ax
  4454f0:	jmp    0x4454fc
  4454f2:	test   al,0x3
  4454f4:	je     0x4454fc
  4454f6:	mov    eax,DWORD PTR [edi+0x10]
  4454f9:	mov    DWORD PTR [esi+0x28],eax
  4454fc:	mov    ecx,DWORD PTR ds:0x45f834
  445502:	test   ecx,ecx
  445504:	je     0x445518
  445506:	mov    al,BYTE PTR [edi+0xe]
  445509:	and    al,0x44
  44550b:	cmp    al,0x44
  44550d:	je     0x445518
  44550f:	cmp    DWORD PTR [esi+0x20],0x0
  445513:	jne    0x445518
  445515:	mov    DWORD PTR [esi+0x20],ecx
  445518:	cmp    BYTE PTR ds:0x44e047,0x0
  44551f:	je     0x445545
  445521:	cmp    BYTE PTR ds:0x44e046,0x0
  445528:	je     0x445545
  44552a:	cmp    BYTE PTR ds:0x45f692,0x0
  445531:	jne    0x445545
  445533:	test   BYTE PTR [esi+0x7],0x10
  445537:	jne    0x445545
  445539:	xor    eax,eax
  44553b:	mov    ecx,esi
  44553d:	lea    edx,[eax+0x1]
  445540:	call   0x44609b
  445545:	test   BYTE PTR [esi+0x7],0xc
  445549:	je     0x44555e
  44554b:	movzx  eax,BYTE PTR [esi+0x5]
  44554f:	mov    edx,esi
  445551:	push   eax
  445552:	sub    edx,eax
  445554:	mov    ecx,0x890
  445559:	call   0x42f15d
  44555e:	mov    ecx,0xe00
  445563:	test   edi,edi
  445565:	je     0x44558e
  445567:	mov    al,BYTE PTR [edi+0xe]
  44556a:	and    al,0x84
  44556c:	cmp    al,0x84
  44556e:	jne    0x44558e
  445570:	test   WORD PTR [edi+0x18],cx
  445574:	je     0x44558e
  445576:	movzx  eax,BYTE PTR [esi+0x5]
  44557a:	mov    edx,esi
  44557c:	push   eax
  44557d:	sub    edx,eax
  44557f:	mov    ecx,0x890
  445584:	call   0x42f15d
  445589:	mov    ecx,0xe00
  44558e:	and    BYTE PTR [esi+0x7],0xf3
  445592:	cmp    BYTE PTR [esi+0x6],0x8
  445596:	je     0x4455c1
  445598:	lea    eax,[esi+0x2c]
  44559b:	mov    DWORD PTR [ebp+0x8],eax
  44559e:	test   WORD PTR [eax],cx
  4455a1:	je     0x4455b9
  4455a3:	movzx  eax,BYTE PTR [esi+0x5]
  4455a7:	sub    esi,eax
  4455a9:	push   eax
  4455aa:	mov    edx,esi
  4455ac:	mov    ecx,0x890
  4455b1:	call   0x42f15d
  4455b6:	mov    eax,DWORD PTR [ebp+0x8]
  4455b9:	mov    ecx,0xf1ff
  4455be:	and    WORD PTR [eax],cx
  4455c1:	cmp    ebx,DWORD PTR [ebp-0x18]
  4455c4:	jb     0x44504e
  4455ca:	jmp    0x4455df
  4455cc:	movzx  eax,BYTE PTR [esi+0x5]
  4455d0:	sub    esi,eax
  4455d2:	push   eax
  4455d3:	mov    edx,esi
  4455d5:	mov    ecx,0x7de
  4455da:	call   0x42f15d
  4455df:	pop    esi
  4455e0:	pop    edi
  4455e1:	pop    ebx
  4455e2:	leave  
  4455e3:	ret    0x4
  4455e6:	push   ebp
  4455e7:	mov    ebp,esp
  4455e9:	and    esp,0xfffffff8
  4455ec:	sub    esp,0xc
  4455ef:	mov    eax,DWORD PTR [ebp+0x8]
  4455f2:	and    DWORD PTR [esp+0x4],0x0
  4455f7:	movzx  ecx,WORD PTR [eax+0x1]
  4455fb:	push   ebx
  4455fc:	push   esi
  4455fd:	push   edi
  4455fe:	add    ecx,eax
  445600:	xor    bl,bl
  445602:	lea    edi,[eax+0x3]
  445605:	mov    BYTE PTR [esp+0xe],bl
  445609:	mov    DWORD PTR [esp+0x14],ecx
  44560d:	cmp    edi,ecx
  44560f:	jae    0x445785
  445615:	push   0x0
  445617:	mov    dl,0x2
  445619:	lea    ecx,[edi+0x1]
  44561c:	call   0x44586f
  445621:	mov    esi,eax
  445623:	test   esi,esi
  445625:	je     0x445646
  445627:	mov    cl,BYTE PTR [esi+0x7]
  44562a:	mov    al,cl
  44562c:	and    al,0x3
  44562e:	cmp    al,0x3
  445630:	jne    0x445638
  445632:	and    cl,0xfe
  445635:	mov    BYTE PTR [esi+0x7],cl
  445638:	test   BYTE PTR [esi+0x2c],0x80
  44563c:	je     0x445663
  44563e:	mov    bl,0x1
  445640:	mov    BYTE PTR [esp+0xe],bl
  445644:	jmp    0x445663
  445646:	push   0x2
  445648:	pop    edx
  445649:	lea    ecx,[edi+0x1]
  44564c:	call   0x4458d0
  445651:	mov    esi,eax
  445653:	test   esi,esi
  445655:	je     0x445785
  44565b:	mov    eax,ds:0x45f834
  445660:	mov    DWORD PTR [esi+0x20],eax
  445663:	cmp    BYTE PTR ds:0x44e047,0x0
  44566a:	je     0x44568e
  44566c:	cmp    BYTE PTR ds:0x44e046,0x0
  445673:	je     0x44568e
  445675:	cmp    BYTE PTR ds:0x45f692,0x0
  44567c:	jne    0x44568e
  44567e:	test   BYTE PTR [esi+0x7],0x10
  445682:	jne    0x44568e
  445684:	push   0x2
  445686:	pop    edx
  445687:	mov    ecx,esi
  445689:	call   0x44609b
  44568e:	mov    eax,0x80
  445693:	or     WORD PTR [esi+0x2c],ax
  445697:	movzx  eax,BYTE PTR [edi+0x5]
  44569b:	add    edi,0x6
  44569e:	add    edi,eax
  4456a0:	cmp    BYTE PTR [edi],0x2
  4456a3:	jne    0x4456bb
  4456a5:	push   0x0
  4456a7:	xor    edx,edx
  4456a9:	mov    ecx,0x82a
  4456ae:	call   0x42ee80
  4456b3:	xor    edx,edx
  4456b5:	inc    edx
  4456b6:	jmp    0x44576e
  4456bb:	mov    dl,0x1
  4456bd:	mov    ecx,edi
  4456bf:	mov    BYTE PTR ds:0x45f857,0x1
  4456c6:	call   0x42f6c1
  4456cb:	mov    ebx,eax
  4456cd:	xor    ecx,ecx
  4456cf:	mov    BYTE PTR ds:0x45f857,cl
  4456d5:	test   ebx,ebx
  4456d7:	jne    0x4456eb
  4456d9:	push   ecx
  4456da:	xor    edx,edx
  4456dc:	mov    ecx,0x82a
  4456e1:	call   0x42ee80
  4456e6:	xor    edx,edx
  4456e8:	inc    edx
  4456e9:	jmp    0x44576a
  4456eb:	mov    al,BYTE PTR [ebx]
  4456ed:	cmp    al,0x2
  4456ef:	jne    0x445727
  4456f1:	test   DWORD PTR [ebx+0x4],0x100
  4456f8:	jne    0x44570a
  4456fa:	test   DWORD PTR [ebx+0x4],0x8000
  445701:	mov    edx,DWORD PTR [ebx+0x8]
  445704:	je     0x44571a
  445706:	neg    edx
  445708:	jmp    0x44571a
  44570a:	push   ecx
  44570b:	xor    edx,edx
  44570d:	mov    ecx,0x7ea
  445712:	call   0x42ee80
  445717:	xor    edx,edx
  445719:	inc    edx
  44571a:	mov    ecx,edx
  44571c:	call   0x444865
  445721:	mov    DWORD PTR [esp+0x10],eax
  445725:	jmp    0x44575d
  445727:	cmp    al,0x4
  445729:	jne    0x44574d
  44572b:	mov    eax,DWORD PTR [ebx+0x18]
  44572e:	test   BYTE PTR [eax+0xe],0x4
  445732:	je     0x445741
  445734:	push   ecx
  445735:	xor    edx,edx
  445737:	mov    ecx,0x838
  44573c:	call   0x42ee80
  445741:	mov    ecx,DWORD PTR [ebx+0x18]
  445744:	mov    DWORD PTR [esp+0x10],ecx
  445748:	mov    edx,DWORD PTR [ecx+0x10]
  44574b:	jmp    0x44575d
  44574d:	push   ecx
  44574e:	xor    edx,edx
  445750:	mov    ecx,0x82a
  445755:	call   0x42ee80
  44575a:	xor    edx,edx
  44575c:	inc    edx
  44575d:	mov    eax,ds:0x45f83c
  445762:	mov    DWORD PTR [ebx],eax
  445764:	mov    DWORD PTR ds:0x45f83c,ebx
  44576a:	mov    bl,BYTE PTR [esp+0xe]
  44576e:	test   bl,bl
  445770:	je     0x44578e
  445772:	cmp    DWORD PTR [esi+0x28],edx
  445775:	je     0x445791
  445777:	push   0x0
  445779:	xor    edx,edx
  44577b:	mov    ecx,0x891
  445780:	call   0x42ee80
  445785:	pop    edi
  445786:	pop    esi
  445787:	pop    ebx
  445788:	mov    esp,ebp
  44578a:	pop    ebp
  44578b:	ret    0x4
  44578e:	mov    DWORD PTR [esi+0x28],edx
  445791:	test   bl,bl
  445793:	jne    0x44579c
  445795:	mov    eax,DWORD PTR [esp+0x10]
  445799:	mov    DWORD PTR [esi+0x24],eax
  44579c:	movzx  eax,BYTE PTR [edi]
  44579f:	add    edi,eax
  4457a1:	cmp    edi,DWORD PTR [esp+0x14]
  4457a5:	jae    0x4457e7
  4457a7:	cmp    BYTE PTR [edi],0x52
  4457aa:	jne    0x4457e7
  4457ac:	inc    edi
  4457ad:	lea    edx,[esp+0xf]
  4457b1:	mov    ecx,edi
  4457b3:	call   0x431d7f
  4457b8:	test   eax,eax
  4457ba:	jne    0x4457d2
  4457bc:	push   eax
  4457bd:	xor    edx,edx
  4457bf:	mov    ecx,0x82a
  4457c4:	call   0x42ee80
  4457c9:	mov    DWORD PTR [esi+0x34],0x1
  4457d0:	jmp    0x4457e0
  4457d2:	test   bl,bl
  4457d4:	je     0x4457dd
  4457d6:	cmp    eax,DWORD PTR [esi+0x34]
  4457d9:	jne    0x445777
  4457db:	jmp    0x4457e0
  4457dd:	mov    DWORD PTR [esi+0x34],eax
  4457e0:	movzx  eax,BYTE PTR [edi]
  4457e3:	add    edi,eax
  4457e5:	jmp    0x4457fa
  4457e7:	test   bl,bl
  4457e9:	je     0x4457f3
  4457eb:	cmp    DWORD PTR [esi+0x34],0x1
  4457ef:	jne    0x445777
  4457f1:	jmp    0x4457fa
  4457f3:	mov    DWORD PTR [esi+0x34],0x1
  4457fa:	or     BYTE PTR [esi+0x7],0x2
  4457fe:	mov    DWORD PTR [esi+0x30],0x1
  445805:	test   bl,bl
  445807:	jne    0x445812
  445809:	mov    dl,0x3
  44580b:	mov    ecx,esi
  44580d:	call   0x444f9e
  445812:	cmp    edi,DWORD PTR [esp+0x14]
  445816:	jb     0x445615
  44581c:	jmp    0x445785
  445821:	push   ebx
  445822:	push   esi
  445823:	push   edi
  445824:	mov    ebx,ecx
  445826:	mov    edi,0x460628
  44582b:	mov    esi,DWORD PTR [edi]
  44582d:	jmp    0x445834
  44582f:	push   esi
  445830:	call   ebx
  445832:	mov    esi,DWORD PTR [esi]
  445834:	test   esi,esi
  445836:	jne    0x44582f
  445838:	add    edi,0x4
  44583b:	cmp    edi,0x460e28
  445841:	jb     0x44582b
  445843:	pop    edi
  445844:	pop    esi
  445845:	pop    ebx
  445846:	ret    
  445847:	push   ebx
  445848:	mov    bl,dl
  44584a:	call   0x445afc
  44584f:	test   eax,eax
  445851:	je     0x44586d
  445853:	cmp    BYTE PTR [eax+0x6],bl
  445856:	je     0x44586d
  445858:	movzx  ecx,BYTE PTR [eax+0x5]
  44585c:	sub    eax,ecx
  44585e:	push   ecx
  44585f:	mov    edx,eax
  445861:	mov    ecx,0x7d5
  445866:	call   0x42f15d
  44586b:	xor    eax,eax
  44586d:	pop    ebx
  44586e:	ret    
  44586f:	push   ebp
  445870:	mov    ebp,esp
  445872:	push   ebx
  445873:	mov    bl,dl
  445875:	call   0x445afc
  44587a:	mov    ecx,eax
  44587c:	test   ecx,ecx
  44587e:	je     0x4458c5
  445880:	mov    al,BYTE PTR [ecx+0x6]
  445883:	cmp    al,bl
  445885:	je     0x445893
  445887:	test   al,al
  445889:	jne    0x4458cc
  44588b:	cmp    bl,0x3
  44588e:	ja     0x4458cc
  445890:	mov    BYTE PTR [ecx+0x6],bl
  445893:	cmp    BYTE PTR [ebp+0x8],0x0
  445897:	je     0x4458c5
  445899:	mov    dl,BYTE PTR [ecx+0x7]
  44589c:	mov    al,dl
  44589e:	and    al,0x3
  4458a0:	cmp    al,0x3
  4458a2:	je     0x4458c5
  4458a4:	test   BYTE PTR [ecx+0x2c],0x80
  4458a8:	je     0x4458c5
  4458aa:	test   dl,0x2
  4458ad:	jne    0x4458cc
  4458af:	mov    eax,DWORD PTR [ecx+0x1c]
  4458b2:	cmp    eax,DWORD PTR ds:0x45f830
  4458b8:	jne    0x4458cc
  4458ba:	mov    eax,DWORD PTR [ecx+0x20]
  4458bd:	cmp    eax,DWORD PTR ds:0x45f834
  4458c3:	jne    0x4458cc
  4458c5:	mov    eax,ecx
  4458c7:	pop    ebx
  4458c8:	pop    ebp
  4458c9:	ret    0x4
  4458cc:	xor    eax,eax
  4458ce:	jmp    0x4458c7
  4458d0:	push   ebx
  4458d1:	push   esi
  4458d2:	push   edi
  4458d3:	mov    edi,ecx
  4458d5:	mov    ebx,edx
  4458d7:	mov    esi,DWORD PTR [edi]
  4458d9:	test   esi,esi
  4458db:	jne    0x445929
  4458dd:	movzx  edx,BYTE PTR [edi+0x4]
  4458e1:	mov    eax,ebx
  4458e3:	and    eax,0xffffff7f
  4458e8:	push   eax
  4458e9:	lea    ecx,[edi+0x5]
  4458ec:	call   0x445966
  4458f1:	mov    esi,eax
  4458f3:	mov    eax,ds:0x4630c8
  4458f8:	test   eax,eax
  4458fa:	je     0x445925
  4458fc:	and    ebx,0x80
  445902:	je     0x445909
  445904:	cmp    eax,0x2
  445907:	je     0x445912
  445909:	test   ebx,ebx
  44590b:	jne    0x445925
  44590d:	cmp    eax,0x1
  445910:	jne    0x445925
  445912:	movzx  eax,BYTE PTR [esi+0x5]
  445916:	mov    edx,esi
  445918:	push   eax
  445919:	sub    edx,eax
  44591b:	mov    ecx,0x7d5
  445920:	call   0x42f15d
  445925:	mov    DWORD PTR [edi],esi
  445927:	jmp    0x445949
  445929:	mov    cl,BYTE PTR [esi+0x7]
  44592c:	test   cl,0x20
  44592f:	je     0x445936
  445931:	and    cl,0xdf
  445934:	jmp    0x445946
  445936:	cmp    BYTE PTR [esi+0x6],bl
  445939:	jne    0x44594d
  44593b:	mov    al,cl
  44593d:	and    al,0x3
  44593f:	cmp    al,0x3
  445941:	jne    0x44594d
  445943:	and    cl,0xfd
  445946:	mov    BYTE PTR [esi+0x7],cl
  445949:	mov    eax,esi
  44594b:	jmp    0x445962
  44594d:	movzx  eax,BYTE PTR [esi+0x5]
  445951:	sub    esi,eax
  445953:	push   eax
  445954:	mov    edx,esi
  445956:	mov    ecx,0x7d5
  44595b:	call   0x42f15d
  445960:	xor    eax,eax
  445962:	pop    edi
  445963:	pop    esi
  445964:	pop    ebx
  445965:	ret    
  445966:	push   ebp
  445967:	mov    ebp,esp
  445969:	push   ecx
  44596a:	push   ecx
  44596b:	mov    eax,DWORD PTR [ebp+0x8]
  44596e:	inc    DWORD PTR ds:0x460e58
  445974:	push   ebx
  445975:	push   esi
  445976:	movzx  esi,BYTE PTR [eax+0x4069cc]
  44597d:	mov    ebx,edx
  44597f:	push   edi
  445980:	mov    edi,ecx
  445982:	add    esi,ebx
  445984:	cmp    BYTE PTR ds:0x44e047,0x0
  44598b:	mov    DWORD PTR [ebp-0x4],edi
  44598e:	je     0x445993
  445990:	add    esi,0x4
  445993:	mov    ecx,DWORD PTR ds:0x4630c0
  445999:	cmp    ecx,esi
  44599b:	jae    0x4459b0
  44599d:	mov    ecx,0x1000
  4459a2:	call   0x43f42e
  4459a7:	mov    edx,eax
  4459a9:	mov    ecx,0x1000
  4459ae:	jmp    0x4459b6
  4459b0:	mov    edx,DWORD PTR ds:0x46306c
  4459b6:	mov    eax,edx
  4459b8:	mov    DWORD PTR [ebp-0x8],edx
  4459bb:	add    edx,esi
  4459bd:	sub    ecx,esi
  4459bf:	cmp    BYTE PTR ds:0x44e047,0x0
  4459c6:	mov    DWORD PTR ds:0x46306c,edx
  4459cc:	mov    DWORD PTR ds:0x4630c0,ecx
  4459d2:	je     0x4459da
  4459d4:	add    eax,0x4
  4459d7:	mov    DWORD PTR [ebp-0x8],eax
  4459da:	push   ebx
  4459db:	push   edi
  4459dc:	push   eax
  4459dd:	call   0x447646
  4459e2:	mov    esi,DWORD PTR [ebp-0x8]
  4459e5:	mov    eax,DWORD PTR [ebp+0x8]
  4459e8:	add    esi,ebx
  4459ea:	add    esp,0xc
  4459ed:	mov    BYTE PTR [esi+0x6],al
  4459f0:	mov    eax,ds:0x460e58
  4459f5:	mov    BYTE PTR [esi+0x5],bl
  4459f8:	mov    DWORD PTR [esi+0x10],eax
  4459fb:	test   ebx,ebx
  4459fd:	je     0x445aaf
  445a03:	mov    edx,ebx
  445a05:	mov    ecx,edi
  445a07:	call   0x445b60
  445a0c:	mov    edi,eax
  445a0e:	test   edi,edi
  445a10:	je     0x445a72
  445a12:	mov    eax,DWORD PTR [ebp+0x8]
  445a15:	cmp    eax,0xb
  445a18:	je     0x445a20
  445a1a:	cmp    BYTE PTR [edi+0x6],0xb
  445a1e:	jne    0x445a53
  445a20:	cmp    al,BYTE PTR [edi+0x6]
  445a23:	jne    0x445a72
  445a25:	mov    eax,0x4000
  445a2a:	test   WORD PTR [edi+0x22],ax
  445a2e:	je     0x445a3e
  445a30:	mov    edx,DWORD PTR [ebp-0x4]
  445a33:	push   ebx
  445a34:	mov    ecx,0xfa2
  445a39:	call   0x42f15d
  445a3e:	mov    ax,WORD PTR [edi+0x22]
  445a42:	mov    ecx,0x3fff
  445a47:	and    ax,cx
  445a4a:	cmp    ax,WORD PTR ds:0x45f98c
  445a51:	jne    0x445a65
  445a53:	mov    edx,DWORD PTR [ebp-0x4]
  445a56:	push   ebx
  445a57:	mov    ecx,0x7d5
  445a5c:	call   0x42f15d
  445a61:	xor    eax,eax
  445a63:	jmp    0x445ada
  445a65:	mov    WORD PTR [edi+0x22],ax
  445a69:	mov    eax,0xffff
  445a6e:	mov    WORD PTR [esi+0x22],ax
  445a72:	mov    ecx,DWORD PTR [ebp-0x4]
  445a75:	mov    edx,ebx
  445a77:	call   0x4448bf
  445a7c:	mov    eax,ds:0x4630c4
  445a81:	xor    ah,al
  445a83:	mov    BYTE PTR [esi+0x4],ah
  445a86:	mov    eax,ds:0x4630c4
  445a8b:	shr    eax,0x2
  445a8e:	mov    ecx,0x1ff
  445a93:	and    eax,ecx
  445a95:	mov    eax,DWORD PTR [eax*4+0x460628]
  445a9c:	mov    DWORD PTR [esi],eax
  445a9e:	mov    eax,ds:0x4630c4
  445aa3:	shr    eax,0x2
  445aa6:	and    eax,ecx
  445aa8:	mov    DWORD PTR [eax*4+0x460628],esi
  445aaf:	and    DWORD PTR ds:0x4630c8,0x0
  445ab6:	cmp    BYTE PTR ds:0x44e046,0x0
  445abd:	jne    0x445ac5
  445abf:	or     BYTE PTR [esi+0x7],0x10
  445ac3:	jmp    0x445ad8
  445ac5:	cmp    BYTE PTR ds:0x44e047,0x0
  445acc:	je     0x445ad8
  445ace:	push   0x2
  445ad0:	pop    edx
  445ad1:	mov    ecx,esi
  445ad3:	call   0x4460ec
  445ad8:	mov    eax,esi
  445ada:	pop    edi
  445adb:	pop    esi
  445adc:	pop    ebx
  445add:	leave  
  445ade:	ret    0x4
  445ae1:	push   esi
  445ae2:	mov    esi,edx
  445ae4:	mov    edx,ecx
  445ae6:	push   edi
  445ae7:	lea    edi,[edx+0x1]
  445aea:	mov    al,BYTE PTR [edx]
  445aec:	inc    edx
  445aed:	test   al,al
  445aef:	jne    0x445aea
  445af1:	sub    edx,edi
  445af3:	push   esi
  445af4:	call   0x445966
  445af9:	pop    edi
  445afa:	pop    esi
  445afb:	ret    
  445afc:	push   esi
  445afd:	push   edi
  445afe:	mov    edi,ecx
  445b00:	mov    esi,DWORD PTR [edi]
  445b02:	test   esi,esi
  445b04:	jne    0x445b14
  445b06:	movzx  edx,BYTE PTR [edi+0x4]
  445b0a:	lea    ecx,[edi+0x5]
  445b0d:	call   0x445b60
  445b12:	jmp    0x445b57
  445b14:	mov    cx,WORD PTR ds:0x45f98c
  445b1b:	mov    BYTE PTR ds:0x4605be,0x1
  445b22:	test   cx,cx
  445b25:	je     0x445b5b
  445b27:	mov    al,BYTE PTR [esi+0x6]
  445b2a:	cmp    al,0xb
  445b2c:	je     0x445b32
  445b2e:	cmp    al,0xa
  445b30:	jne    0x445b43
  445b32:	mov    ax,WORD PTR [esi+0x20]
  445b36:	mov    edx,0x3fff
  445b3b:	and    ax,dx
  445b3e:	cmp    ax,cx
  445b41:	je     0x445b5b
  445b43:	movzx  edx,BYTE PTR [esi+0x5]
  445b47:	sub    esi,edx
  445b49:	mov    ecx,esi
  445b4b:	call   0x445b60
  445b50:	mov    BYTE PTR ds:0x4605be,0x0
  445b57:	mov    esi,eax
  445b59:	mov    DWORD PTR [edi],esi
  445b5b:	pop    edi
  445b5c:	mov    eax,esi
  445b5e:	pop    esi
  445b5f:	ret    
  445b60:	push   ebp
  445b61:	mov    ebp,esp
  445b63:	push   ecx
  445b64:	push   ebx
  445b65:	push   edi
  445b66:	mov    edi,edx
  445b68:	mov    ebx,ecx
  445b6a:	test   edi,edi
  445b6c:	jne    0x445b75
  445b6e:	xor    eax,eax
  445b70:	jmp    0x445cfd
  445b75:	push   esi
  445b76:	call   0x4448bf
  445b7b:	mov    ecx,DWORD PTR ds:0x4630c4
  445b81:	mov    dh,ch
  445b83:	xor    dh,cl
  445b85:	xor    dl,dl
  445b87:	cmp    WORD PTR ds:0x45f990,0x0
  445b8f:	mov    BYTE PTR [ebp-0x2],dh
  445b92:	mov    BYTE PTR [ebp-0x1],dl
  445b95:	je     0x445baa
  445b97:	mov    eax,ds:0x460e44
  445b9c:	mov    esi,DWORD PTR [eax+0x30]
  445b9f:	test   esi,esi
  445ba1:	je     0x445baa
  445ba3:	inc    dl
  445ba5:	mov    BYTE PTR [ebp-0x1],dl
  445ba8:	jmp    0x445bbb
  445baa:	mov    eax,ecx
  445bac:	shr    eax,0x2
  445baf:	and    eax,0x1ff
  445bb4:	mov    esi,DWORD PTR [eax*4+0x460628]
  445bbb:	and    DWORD PTR ds:0x4630c8,0x0
  445bc2:	jmp    0x445d54
  445bc7:	cmp    BYTE PTR [esi+0x4],dh
  445bca:	jne    0x445d30
  445bd0:	movzx  edx,BYTE PTR [esi+0x5]
  445bd4:	cmp    edx,edi
  445bd6:	jne    0x445d2a
  445bdc:	mov    eax,esi
  445bde:	push   edi
  445bdf:	sub    eax,edx
  445be1:	cmp    BYTE PTR ds:0x460e4c,0xff
  445be8:	push   eax
  445be9:	push   ebx
  445bea:	jne    0x445bf4
  445bec:	call   DWORD PTR ds:0x46440c
  445bf2:	jmp    0x445bfa
  445bf4:	call   DWORD PTR ds:0x464410
  445bfa:	add    esp,0xc
  445bfd:	test   eax,eax
  445bff:	jne    0x445d24
  445c05:	mov    al,BYTE PTR [esi+0x6]
  445c08:	cmp    al,0xb
  445c0a:	jne    0x445c2d
  445c0c:	movzx  eax,WORD PTR [esi+0x22]
  445c10:	cmp    ax,WORD PTR ds:0x45f98c
  445c17:	je     0x445c24
  445c19:	test   eax,0x8000
  445c1e:	je     0x445d24
  445c24:	and    DWORD PTR ds:0x4630c8,0x0
  445c2b:	jmp    0x445c7d
  445c2d:	cmp    WORD PTR ds:0x45f98c,0x0
  445c35:	jne    0x445d24
  445c3b:	and    DWORD PTR ds:0x4630c8,0x0
  445c42:	cmp    al,0x3
  445c44:	jne    0x445d01
  445c4a:	test   BYTE PTR [esi+0x2c],0x8
  445c4e:	je     0x445c73
  445c50:	mov    ax,WORD PTR [esi+0x30]
  445c54:	cmp    ax,WORD PTR ds:0x45f990
  445c5b:	je     0x445c7d
  445c5d:	cmp    BYTE PTR ds:0x462cb7,0x0
  445c64:	je     0x445d1a
  445c6a:	mov    eax,0xfff7
  445c6f:	and    WORD PTR [esi+0x2c],ax
  445c73:	mov    DWORD PTR ds:0x4630c8,0x2
  445c7d:	cmp    BYTE PTR ds:0x44e046,0x0
  445c84:	je     0x445c99
  445c86:	cmp    BYTE PTR ds:0x44e047,0x0
  445c8d:	je     0x445c99
  445c8f:	push   0x3
  445c91:	pop    edx
  445c92:	mov    ecx,esi
  445c94:	call   0x4460ec
  445c99:	mov    bl,BYTE PTR [esi+0x7]
  445c9c:	mov    al,bl
  445c9e:	and    al,0x3
  445ca0:	cmp    al,0x3
  445ca2:	jne    0x445cfa
  445ca4:	mov    al,ds:0x45f692
  445ca9:	cmp    al,0x1
  445cab:	jae    0x445cfa
  445cad:	cmp    BYTE PTR ds:0x4605b6,0x0
  445cb4:	jne    0x445cfa
  445cb6:	cmp    BYTE PTR ds:0x4605b5,0x0
  445cbd:	jne    0x445cfa
  445cbf:	test   al,al
  445cc1:	jne    0x445cf4
  445cc3:	cmp    WORD PTR ds:0x45fac8,0x27
  445ccb:	jne    0x445cf4
  445ccd:	movzx  ecx,BYTE PTR [esi+0x5]
  445cd1:	movsx  eax,WORD PTR ds:0x45fadc
  445cd8:	cmp    eax,ecx
  445cda:	jne    0x445cf4
  445cdc:	push   eax
  445cdd:	mov    eax,esi
  445cdf:	sub    eax,ecx
  445ce1:	push   eax
  445ce2:	push   DWORD PTR ds:0x45fae4
  445ce8:	call   0x447640
  445ced:	add    esp,0xc
  445cf0:	test   eax,eax
  445cf2:	je     0x445cfa
  445cf4:	or     bl,0x80
  445cf7:	mov    BYTE PTR [esi+0x7],bl
  445cfa:	mov    eax,esi
  445cfc:	pop    esi
  445cfd:	pop    edi
  445cfe:	pop    ebx
  445cff:	leave  
  445d00:	ret    
  445d01:	cmp    al,0x9
  445d03:	jne    0x445c7d
  445d09:	mov    ax,WORD PTR [esi+0x24]
  445d0d:	cmp    ax,WORD PTR ds:0x45f990
  445d14:	je     0x445c7d
  445d1a:	mov    DWORD PTR ds:0x4630c8,0x1
  445d24:	mov    ecx,DWORD PTR ds:0x4630c4
  445d2a:	mov    dh,BYTE PTR [ebp-0x2]
  445d2d:	mov    dl,BYTE PTR [ebp-0x1]
  445d30:	mov    esi,DWORD PTR [esi]
  445d32:	test   dl,dl
  445d34:	je     0x445d54
  445d36:	test   esi,esi
  445d38:	jne    0x445bc7
  445d3e:	mov    eax,ecx
  445d40:	shr    eax,0x2
  445d43:	and    eax,0x1ff
  445d48:	xor    dl,dl
  445d4a:	mov    esi,DWORD PTR [eax*4+0x460628]
  445d51:	mov    BYTE PTR [ebp-0x1],dl
  445d54:	test   esi,esi
  445d56:	jne    0x445bc7
  445d5c:	jmp    0x445cfa
  445d5e:	push   ebp
  445d5f:	mov    ebp,esp
  445d61:	push   ebx
  445d62:	push   esi
  445d63:	push   edi
  445d64:	mov    edi,DWORD PTR [ebp+0x8]
  445d67:	xor    al,al
  445d69:	mov    esi,edx
  445d6b:	mov    ebx,ecx
  445d6d:	test   edi,edi
  445d6f:	je     0x445da7
  445d71:	sub    ebx,esi
  445d73:	mov    dl,BYTE PTR [ebx+esi*1]
  445d76:	mov    cl,BYTE PTR [esi]
  445d78:	dec    edi
  445d79:	inc    esi
  445d7a:	test   al,al
  445d7c:	jne    0x445d9d
  445d7e:	lea    eax,[edx-0x41]
  445d81:	cmp    al,0x19
  445d83:	ja     0x445d88
  445d85:	add    dl,0x20
  445d88:	lea    eax,[ecx-0x41]
  445d8b:	cmp    al,0x19
  445d8d:	ja     0x445d92
  445d8f:	add    cl,0x20
  445d92:	movzx  eax,dl
  445d95:	mov    al,BYTE PTR [eax+0x4630d0]
  445d9b:	jmp    0x445d9f
  445d9d:	xor    al,al
  445d9f:	cmp    dl,cl
  445da1:	jne    0x445db0
  445da3:	test   edi,edi
  445da5:	jne    0x445d73
  445da7:	xor    eax,eax
  445da9:	pop    edi
  445daa:	pop    esi
  445dab:	pop    ebx
  445dac:	pop    ebp
  445dad:	ret    0x4
  445db0:	movzx  ecx,cl
  445db3:	movzx  eax,dl
  445db6:	sub    eax,ecx
  445db8:	jmp    0x445da9
  445dba:	mov    eax,ds:0x4631d4
  445dbf:	mov    ecx,DWORD PTR [eax+0x8]
  445dc2:	test   ecx,ecx
  445dc4:	jne    0x445dd5
  445dc6:	push   ecx
  445dc7:	xor    edx,edx
  445dc9:	mov    ecx,0x817
  445dce:	call   0x42ee80
  445dd3:	jmp    0x445dd8
  445dd5:	push   eax
  445dd6:	call   ecx
  445dd8:	mov    eax,ds:0x4631d4
  445ddd:	mov    ecx,DWORD PTR [eax]
  445ddf:	mov    eax,DWORD PTR [eax+0x4]
  445de2:	mov    DWORD PTR ds:0x4631d0,ecx
  445de8:	lea    eax,[ecx+eax*2]
  445deb:	mov    ds:0x4630cc,eax
  445df0:	ret    
  445df1:	push   ebp
  445df2:	mov    ebp,esp
  445df4:	push   ecx
  445df5:	push   ecx
  445df6:	push   esi
  445df7:	mov    esi,edx
  445df9:	mov    DWORD PTR [ebp-0x8],esi
  445dfc:	mov    eax,ecx
  445dfe:	mov    DWORD PTR [ebp-0x4],ecx
  445e01:	test   esi,esi
  445e03:	je     0x445e57
  445e05:	push   ebx
  445e06:	mov    ebx,DWORD PTR ds:0x4631d0
  445e0c:	push   edi
  445e0d:	mov    edi,DWORD PTR ds:0x4630cc
  445e13:	sub    edi,ebx
  445e15:	sar    edi,1
  445e17:	jne    0x445e27
  445e19:	call   0x445dba
  445e1e:	mov    ebx,DWORD PTR ds:0x4631d0
  445e24:	mov    eax,DWORD PTR [ebp-0x4]
  445e27:	cmp    edi,esi
  445e29:	jbe    0x445e2d
  445e2b:	mov    edi,esi
  445e2d:	lea    esi,[edi+edi*1]
  445e30:	push   esi
  445e31:	push   eax
  445e32:	push   ebx
  445e33:	call   0x447646
  445e38:	mov    eax,DWORD PTR [ebp-0x4]
  445e3b:	add    eax,esi
  445e3d:	add    ebx,esi
  445e3f:	mov    esi,DWORD PTR [ebp-0x8]
  445e42:	add    esp,0xc
  445e45:	sub    esi,edi
  445e47:	mov    DWORD PTR [ebp-0x4],eax
  445e4a:	mov    DWORD PTR ds:0x4631d0,ebx
  445e50:	mov    DWORD PTR [ebp-0x8],esi
  445e53:	jne    0x445e0d
  445e55:	pop    edi
  445e56:	pop    ebx
  445e57:	pop    esi
  445e58:	leave  
  445e59:	ret    
  445e5a:	push   ebp
  445e5b:	mov    ebp,esp
  445e5d:	sub    esp,0x28
  445e60:	mov    eax,ds:0x448858
  445e65:	xor    eax,ebp
  445e67:	mov    DWORD PTR [ebp-0x4],eax
  445e6a:	mov    eax,ds:0x4631d4
  445e6f:	push   ebx
  445e70:	push   esi
  445e71:	push   edi
  445e72:	mov    edi,DWORD PTR [eax]
  445e74:	mov    eax,DWORD PTR [eax+0x4]
  445e77:	mov    DWORD PTR ds:0x4631d0,edi
  445e7d:	lea    eax,[edi+eax*2]
  445e80:	xor    edi,edi
  445e82:	mov    ebx,ecx
  445e84:	mov    ds:0x4630cc,eax
  445e89:	lea    esi,[edx-0x4]
  445e8c:	mov    DWORD PTR [ebp-0x28],edi
  445e8f:	movzx  eax,WORD PTR [ebx]
  445e92:	cmp    eax,0x25
  445e95:	je     0x445ebf
  445e97:	mov    edi,DWORD PTR ds:0x4631d0
  445e9d:	mov    WORD PTR [edi],ax
  445ea0:	add    edi,0x2
  445ea3:	mov    DWORD PTR ds:0x4631d0,edi
  445ea9:	cmp    edi,DWORD PTR ds:0x4630cc
  445eaf:	jb     0x445fb9
  445eb5:	call   0x445dba
  445eba:	jmp    0x445fb9
  445ebf:	add    ebx,0x2
  445ec2:	movzx  eax,WORD PTR [ebx]
  445ec5:	sub    eax,0x42
  445ec8:	je     0x445f86
  445ece:	sub    eax,0x20
  445ed1:	je     0x445f7c
  445ed7:	dec    eax
  445ed8:	dec    eax
  445ed9:	je     0x445f48
  445edb:	sub    eax,0xf
  445ede:	je     0x445f28
  445ee0:	dec    eax
  445ee1:	dec    eax
  445ee2:	jne    0x445fbb
  445ee8:	push   0xa
  445eea:	push   0x10
  445eec:	lea    eax,[ebp-0x24]
  445eef:	add    esi,0x4
  445ef2:	push   eax
  445ef3:	push   DWORD PTR [esi]
  445ef5:	call   DWORD PTR ds:0x464418
  445efb:	add    esp,0x10
  445efe:	neg    eax
  445f00:	sbb    ecx,ecx
  445f02:	not    ecx
  445f04:	lea    eax,[ebp-0x24]
  445f07:	and    ecx,eax
  445f09:	mov    edx,ecx
  445f0b:	lea    edi,[edx+0x2]
  445f0e:	mov    ax,WORD PTR [edx]
  445f11:	add    edx,0x2
  445f14:	cmp    ax,WORD PTR [ebp-0x28]
  445f18:	jne    0x445f0e
  445f1a:	sub    edx,edi
  445f1c:	sar    edx,1
  445f1e:	call   0x445df1
  445f23:	jmp    0x445fb9
  445f28:	add    esi,0x4
  445f2b:	mov    edx,DWORD PTR [esi]
  445f2d:	lea    ecx,[edx+0x2]
  445f30:	mov    ax,WORD PTR [edx]
  445f33:	add    edx,0x2
  445f36:	cmp    ax,di
  445f39:	jne    0x445f30
  445f3b:	sub    edx,ecx
  445f3d:	mov    ecx,DWORD PTR [esi]
  445f3f:	sar    edx,1
  445f41:	call   0x445df1
  445f46:	jmp    0x445fbb
  445f48:	push   0xa
  445f4a:	push   0x10
  445f4c:	lea    eax,[ebp-0x24]
  445f4f:	add    esi,0x4
  445f52:	push   eax
  445f53:	push   DWORD PTR [esi]
  445f55:	call   DWORD PTR ds:0x464414
  445f5b:	add    esp,0x10
  445f5e:	neg    eax
  445f60:	sbb    ecx,ecx
  445f62:	not    ecx
  445f64:	lea    eax,[ebp-0x24]
  445f67:	and    ecx,eax
  445f69:	mov    edx,ecx
  445f6b:	lea    edi,[edx+0x2]
  445f6e:	mov    ax,WORD PTR [edx]
  445f71:	add    edx,0x2
  445f74:	cmp    ax,WORD PTR [ebp-0x28]
  445f78:	jne    0x445f6e
  445f7a:	jmp    0x445f1a
  445f7c:	mov    ecx,DWORD PTR [esi+0x4]
  445f7f:	add    esi,0x8
  445f82:	mov    edx,DWORD PTR [esi]
  445f84:	jmp    0x445f41
  445f86:	mov    ecx,DWORD PTR [esi+0x4]
  445f89:	add    esi,0x8
  445f8c:	mov    edx,DWORD PTR [esi]
  445f8e:	call   0x43f691
  445f93:	mov    edi,eax
  445f95:	mov    edx,edi
  445f97:	lea    eax,[edx+0x2]
  445f9a:	mov    cx,WORD PTR [edx]
  445f9d:	add    edx,0x2
  445fa0:	cmp    cx,WORD PTR [ebp-0x28]
  445fa4:	jne    0x445f9a
  445fa6:	sub    edx,eax
  445fa8:	sar    edx,1
  445faa:	mov    ecx,edi
  445fac:	call   0x445df1
  445fb1:	push   edi
  445fb2:	call   DWORD PTR ds:0x464354
  445fb8:	pop    ecx
  445fb9:	xor    edi,edi
  445fbb:	mov    ax,WORD PTR [ebx]
  445fbe:	add    ebx,0x2
  445fc1:	test   ax,ax
  445fc4:	jne    0x445e8f
  445fca:	mov    ecx,DWORD PTR ds:0x4631d0
  445fd0:	mov    edx,DWORD PTR ds:0x4631d4
  445fd6:	mov    eax,ds:0x4630cc
  445fdb:	add    ecx,0xfffffffe
  445fde:	sub    eax,ecx
  445fe0:	mov    DWORD PTR [edx],ecx
  445fe2:	mov    ecx,DWORD PTR [ebp-0x4]
  445fe5:	pop    edi
  445fe6:	sar    eax,1
  445fe8:	pop    esi
  445fe9:	xor    ecx,ebp
  445feb:	mov    DWORD PTR [edx+0x4],eax
  445fee:	pop    ebx
  445fef:	call   0x446dc7
  445ff4:	leave  
  445ff5:	ret    
  445ff6:	push   ebp
  445ff7:	mov    ebp,esp
  445ff9:	sub    esp,0xc
  445ffc:	mov    eax,DWORD PTR [ebp+0x8]
  445fff:	mov    ecx,DWORD PTR [ebp+0x10]
  446002:	and    DWORD PTR [ebp-0x4],0x0
  446006:	mov    DWORD PTR [ebp-0xc],eax
  446009:	mov    eax,DWORD PTR [ebp+0xc]
  44600c:	mov    DWORD PTR [ebp-0x8],eax
  44600f:	lea    eax,[ebp-0xc]
  446012:	lea    edx,[ebp+0x14]
  446015:	mov    ds:0x4631d4,eax
  44601a:	call   0x445e5a
  44601f:	leave  
  446020:	ret    
  446021:	push   ebp
  446022:	mov    ebp,esp
  446024:	mov    eax,DWORD PTR [ebp+0x8]
  446027:	mov    ecx,DWORD PTR [ebp+0xc]
  44602a:	mov    ds:0x4631d4,eax
  44602f:	lea    edx,[ebp+0x10]
  446032:	pop    ebp
  446033:	jmp    0x445e5a
  446038:	push   ebp
  446039:	mov    ebp,esp
  44603b:	lea    edx,[ebp+0xc]
  44603e:	mov    ecx,DWORD PTR [ebp+0x8]
  446041:	pop    ebp
  446042:	jmp    0x445e5a
  446047:	lea    eax,[ecx-0xa]
  44604a:	cmp    eax,0x11
  44604d:	jae    0x446057
  44604f:	mov    eax,DWORD PTR [eax*4+0x4069e0]
  446056:	ret    
  446057:	mov    eax,ds:0x45f998
  44605c:	ret    
  44605d:	mov    al,BYTE PTR [ecx+0xb]
  446060:	test   al,al
  446062:	je     0x44606d
  446064:	add    al,al
  446066:	or     al,0x7
  446068:	mov    BYTE PTR [ecx+0xb],al
  44606b:	jmp    0x446071
  44606d:	mov    BYTE PTR [ecx+0xb],0x1
  446071:	movzx  eax,BYTE PTR [ecx+0xb]
  446075:	push   esi
  446076:	lea    eax,[eax*8+0x14]
  44607d:	push   eax
  44607e:	push   ecx
  44607f:	call   DWORD PTR ds:0x4643e8
  446085:	mov    esi,eax
  446087:	pop    ecx
  446088:	pop    ecx
  446089:	test   esi,esi
  44608b:	jne    0x446097
  44608d:	mov    ecx,0x3ec
  446092:	call   0x42f124
  446097:	mov    eax,esi
  446099:	pop    esi
  44609a:	ret    
  44609b:	test   BYTE PTR [ecx+0x7],0x10
  44609f:	push   edi
  4460a0:	mov    edi,edx
  4460a2:	jne    0x4460ea
  4460a4:	movzx  eax,BYTE PTR [ecx+0x5]
  4460a8:	sub    ecx,eax
  4460aa:	push   esi
  4460ab:	mov    esi,DWORD PTR [ecx-0x4]
  4460ae:	test   esi,esi
  4460b0:	je     0x4460e9
  4460b2:	mov    eax,ds:0x44e4bc
  4460b7:	mov    cx,WORD PTR ds:0x45f990
  4460be:	cmp    DWORD PTR [esi+0x4],eax
  4460c1:	jne    0x4460c9
  4460c3:	cmp    WORD PTR [esi+0x8],cx
  4460c7:	je     0x4460cf
  4460c9:	mov    esi,DWORD PTR [esi]
  4460cb:	test   esi,esi
  4460cd:	jne    0x4460be
  4460cf:	test   esi,esi
  4460d1:	je     0x4460e9
  4460d3:	movzx  edx,BYTE PTR [esi+0xa]
  4460d7:	mov    eax,ds:0x448894
  4460dc:	mov    ecx,DWORD PTR [esi+edx*8+0x8]
  4460e0:	cmp    ecx,DWORD PTR [eax+0x20]
  4460e3:	jne    0x4460e9
  4460e5:	mov    DWORD PTR [esi+edx*8+0x4],edi
  4460e9:	pop    esi
  4460ea:	pop    edi
  4460eb:	ret    
  4460ec:	push   ebx
  4460ed:	push   edi
  4460ee:	mov    edi,ecx
  4460f0:	mov    ebx,edx
  4460f2:	test   BYTE PTR [edi+0x7],0x10
  4460f6:	jne    0x446194
  4460fc:	movzx  eax,BYTE PTR [edi+0x5]
  446100:	push   esi
  446101:	mov    esi,edi
  446103:	sub    esi,eax
  446105:	sub    esi,0x4
  446108:	cmp    DWORD PTR [esi],0x0
  44610b:	je     0x446134
  44610d:	mov    ecx,DWORD PTR ds:0x44e4bc
  446113:	mov    dx,WORD PTR ds:0x45f990
  44611a:	mov    eax,DWORD PTR [esi]
  44611c:	cmp    DWORD PTR [eax+0x4],ecx
  44611f:	jne    0x44612d
  446121:	cmp    WORD PTR [eax+0x8],dx
  446125:	jne    0x44612d
  446127:	cmp    BYTE PTR [eax+0xa],0xff
  44612b:	jb     0x446197
  44612d:	mov    esi,eax
  44612f:	cmp    DWORD PTR [esi],0x0
  446132:	jne    0x44611a
  446134:	push   0x14
  446136:	pop    ecx
  446137:	call   0x43f45b
  44613c:	mov    ecx,DWORD PTR ds:0x44e4bc
  446142:	mov    edx,eax
  446144:	xor    eax,eax
  446146:	mov    DWORD PTR [edx+0x4],ecx
  446149:	mov    cx,WORD PTR ds:0x45f990
  446150:	mov    DWORD PTR [edx],eax
  446152:	mov    WORD PTR [edx+0xa],ax
  446156:	mov    WORD PTR [edx+0x8],cx
  44615a:	movzx  ecx,BYTE PTR [edi+0x5]
  44615e:	mov    eax,edi
  446160:	sub    eax,ecx
  446162:	mov    eax,DWORD PTR [eax-0x4]
  446165:	mov    DWORD PTR [edx],eax
  446167:	movzx  eax,BYTE PTR [edi+0x5]
  44616b:	sub    edi,eax
  44616d:	mov    DWORD PTR [edi-0x4],edx
  446170:	movzx  ecx,BYTE PTR [edx+0xa]
  446174:	pop    esi
  446175:	mov    DWORD PTR [edx+ecx*8+0xc],ebx
  446179:	mov    eax,ds:0x448894
  44617e:	mov    eax,DWORD PTR [eax+0x20]
  446181:	mov    DWORD PTR [edx+ecx*8+0x10],eax
  446185:	test   eax,eax
  446187:	jne    0x446191
  446189:	mov    DWORD PTR [edx+ecx*8+0x10],0x1
  446191:	inc    BYTE PTR [edx+0xa]
  446194:	pop    edi
  446195:	pop    ebx
  446196:	ret    
  446197:	mov    ecx,eax
  446199:	mov    al,BYTE PTR [ecx+0xa]
  44619c:	cmp    al,BYTE PTR [ecx+0xb]
  44619f:	jbe    0x4461a8
  4461a1:	call   0x44605d
  4461a6:	mov    DWORD PTR [esi],eax
  4461a8:	mov    edx,DWORD PTR [esi]
  4461aa:	jmp    0x446170
  4461ac:	push   ebp
  4461ad:	mov    ebp,esp
  4461af:	push   esi
  4461b0:	mov    esi,DWORD PTR [ebp+0x8]
  4461b3:	movzx  ecx,WORD PTR [esi+0x1]
  4461b7:	lea    eax,[ecx-0x3]
  4461ba:	test   ax,ax
  4461bd:	jne    0x4461c6
  4461bf:	mov    ds:0x44e046,al
  4461c4:	jmp    0x4461ec
  4461c6:	push   edi
  4461c7:	lea    edi,[esi+ecx*1]
  4461ca:	add    esi,0x4
  4461cd:	jmp    0x4461e7
  4461cf:	mov    ecx,esi
  4461d1:	call   0x445afc
  4461d6:	test   eax,eax
  4461d8:	je     0x4461de
  4461da:	or     BYTE PTR [eax+0x7],0x10
  4461de:	movzx  eax,BYTE PTR [esi+0x4]
  4461e2:	add    esi,0x6
  4461e5:	add    esi,eax
  4461e7:	cmp    esi,edi
  4461e9:	jb     0x4461cf
  4461eb:	pop    edi
  4461ec:	pop    esi
  4461ed:	pop    ebp
  4461ee:	ret    0x4
  4461f1:	mov    edx,DWORD PTR ds:0x44f574
  4461f7:	mov    eax,0x1000
  4461fc:	push   ebx
  4461fd:	mov    bl,cl
  4461ff:	cmp    WORD PTR [edx+0x3a],ax
  446203:	jne    0x446212
  446205:	mov    ecx,edx
  446207:	call   0x429cb5
  44620c:	mov    edx,DWORD PTR ds:0x44f574
  446212:	movzx  ecx,WORD PTR [edx+0x3a]
  446216:	mov    eax,DWORD PTR [edx+0x3c]
  446219:	mov    BYTE PTR [ecx+eax*1],bl
  44621c:	inc    WORD PTR [edx+0x3a]
  446220:	pop    ebx
  446221:	ret    
  446222:	mov    edx,DWORD PTR ds:0x44f574
  446228:	mov    eax,0x1000
  44622d:	push   ebx
  44622e:	mov    ebx,ecx
  446230:	cmp    WORD PTR [edx+0x3a],ax
  446234:	jne    0x446243
  446236:	mov    ecx,edx
  446238:	call   0x429cb5
  44623d:	mov    edx,DWORD PTR ds:0x44f574
  446243:	movzx  eax,WORD PTR [edx+0x3a]
  446247:	mov    ecx,0xffe
  44624c:	cmp    ax,cx
  44624f:	jae    0x446261
  446251:	mov    ecx,eax
  446253:	mov    eax,DWORD PTR [edx+0x3c]
  446256:	mov    WORD PTR [ecx+eax*1],bx
  44625a:	add    WORD PTR [edx+0x3a],0x2
  44625f:	pop    ebx
  446260:	ret    
  446261:	mov    cl,bl
  446263:	call   0x4461f1
  446268:	shr    ebx,0x8
  44626b:	mov    cl,bl
  44626d:	pop    ebx
  44626e:	jmp    0x4461f1
  446273:	mov    edx,DWORD PTR ds:0x44f574
  446279:	mov    eax,0x1000
  44627e:	push   esi
  44627f:	mov    esi,ecx
  446281:	cmp    WORD PTR [edx+0x3a],ax
  446285:	jne    0x446294
  446287:	mov    ecx,edx
  446289:	call   0x429cb5
  44628e:	mov    edx,DWORD PTR ds:0x44f574
  446294:	movzx  eax,WORD PTR [edx+0x3a]
  446298:	mov    ecx,0xffc
  44629d:	cmp    ax,cx
  4462a0:	jae    0x4462b1
  4462a2:	mov    ecx,eax
  4462a4:	mov    eax,DWORD PTR [edx+0x3c]
  4462a7:	mov    DWORD PTR [ecx+eax*1],esi
  4462aa:	add    WORD PTR [edx+0x3a],0x4
  4462af:	pop    esi
  4462b0:	ret    
  4462b1:	mov    ecx,esi
  4462b3:	call   0x446222
  4462b8:	shr    esi,0x10
  4462bb:	mov    ecx,esi
  4462bd:	pop    esi
  4462be:	jmp    0x446222
  4462c3:	push   ebp
  4462c4:	mov    ebp,esp
  4462c6:	push   ecx
  4462c7:	push   ebx
  4462c8:	mov    ebx,edx
  4462ca:	mov    eax,ecx
  4462cc:	mov    DWORD PTR [ebp-0x4],ecx
  4462cf:	test   ebx,ebx
  4462d1:	je     0x446329
  4462d3:	push   esi
  4462d4:	mov    esi,DWORD PTR ds:0x44f574
  4462da:	push   edi
  4462db:	mov    edi,0x1000
  4462e0:	cmp    WORD PTR [esi+0x3a],di
  4462e4:	jb     0x4462f6
  4462e6:	mov    ecx,esi
  4462e8:	call   0x429cb5
  4462ed:	mov    esi,DWORD PTR ds:0x44f574
  4462f3:	mov    eax,DWORD PTR [ebp-0x4]
  4462f6:	movzx  ecx,WORD PTR [esi+0x3a]
  4462fa:	sub    edi,ecx
  4462fc:	cmp    edi,ebx
  4462fe:	jbe    0x446302
  446300:	mov    edi,ebx
  446302:	push   edi
  446303:	push   eax
  446304:	mov    eax,DWORD PTR [esi+0x3c]
  446307:	add    eax,ecx
  446309:	push   eax
  44630a:	call   0x447646
  44630f:	mov    eax,DWORD PTR [ebp-0x4]
  446312:	add    WORD PTR [esi+0x3a],di
  446316:	add    eax,edi
  446318:	add    esp,0xc
  44631b:	sub    ebx,edi
  44631d:	mov    DWORD PTR [ebp-0x4],eax
  446320:	mov    edi,0x1000
  446325:	jne    0x4462e0
  446327:	pop    edi
  446328:	pop    esi
  446329:	pop    ebx
  44632a:	leave  
  44632b:	ret    
  44632c:	mov    edx,ecx
  44632e:	push   esi
  44632f:	lea    esi,[edx+0x1]
  446332:	mov    al,BYTE PTR [edx]
  446334:	inc    edx
  446335:	test   al,al
  446337:	jne    0x446332
  446339:	sub    edx,esi
  44633b:	inc    edx
  44633c:	pop    esi
  44633d:	jmp    0x4462c3
  446342:	push   ebp
  446343:	mov    ebp,esp
  446345:	sub    esp,0x20c
  44634b:	mov    eax,ds:0x448858
  446350:	xor    eax,ebp
  446352:	mov    DWORD PTR [ebp-0x4],eax
  446355:	push   esi
  446356:	lea    eax,[ebp-0x20c]
  44635c:	push   0x104
  446361:	push   eax
  446362:	call   DWORD PTR ds:0x4643dc
  446368:	pop    ecx
  446369:	pop    ecx
  44636a:	lea    ecx,[ebp-0x20c]
  446370:	call   0x43f5f6
  446375:	push   0x5
  446377:	pop    edx
  446378:	mov    ecx,0x406a74
  44637d:	mov    esi,eax
  44637f:	call   0x4462c3
  446384:	mov    ecx,esi
  446386:	call   0x44632c
  44638b:	push   esi
  44638c:	call   DWORD PTR ds:0x464354
  446392:	pop    ecx
  446393:	mov    ecx,DWORD PTR [ebp-0x4]
  446396:	xor    ecx,ebp
  446398:	pop    esi
  446399:	call   0x446dc7
  44639e:	leave  
  44639f:	ret    
  4463a0:	push   esi
  4463a1:	call   0x43f5f6
  4463a6:	mov    cl,0x1
  4463a8:	mov    esi,eax
  4463aa:	call   0x4461f1
  4463af:	mov    ecx,esi
  4463b1:	call   0x44632c
  4463b6:	push   esi
  4463b7:	call   DWORD PTR ds:0x464354
  4463bd:	pop    ecx
  4463be:	pop    esi
  4463bf:	ret    
  4463c0:	push   esi
  4463c1:	mov    esi,ecx
  4463c3:	cmp    DWORD PTR ds:0x44db74,esi
  4463c9:	je     0x4463df
  4463cb:	mov    cl,0x1a
  4463cd:	call   0x4461f1
  4463d2:	mov    ecx,esi
  4463d4:	call   0x446273
  4463d9:	mov    DWORD PTR ds:0x44db74,esi
  4463df:	pop    esi
  4463e0:	ret    
  4463e1:	push   ebp
  4463e2:	mov    ebp,esp
  4463e4:	push   ecx
  4463e5:	mov    DWORD PTR [ebp-0x4],edx
  4463e8:	test   ecx,ecx
  4463ea:	je     0x4464c0
  4463f0:	push   ebx
  4463f1:	mov    bh,BYTE PTR [ecx+0x6]
  4463f4:	movzx  eax,bh
  4463f7:	mov    bl,BYTE PTR [eax+0x406a60]
  4463fd:	test   bl,bl
  4463ff:	je     0x4464bf
  446405:	cmp    bl,0x4
  446408:	jne    0x446423
  44640a:	mov    eax,DWORD PTR [ecx+0x24]
  44640d:	test   eax,eax
  44640f:	je     0x446431
  446411:	test   BYTE PTR [eax+0xe],bl
  446414:	je     0x446431
  446416:	test   BYTE PTR [ecx+0x7],0x3
  44641a:	je     0x446421
  44641c:	add    bl,0xfd
  44641f:	jmp    0x446431
  446421:	mov    bl,0x2
  446423:	cmp    bl,0x8
  446426:	jne    0x446431
  446428:	test   BYTE PTR [ecx+0x7],0x80
  44642c:	je     0x446431
  44642e:	add    bl,0x3
  446431:	push   edi
  446432:	xor    edi,edi
  446434:	cmp    bh,0x9
  446437:	je     0x446444
  446439:	cmp    bh,0x3
  44643c:	jne    0x446450
  44643e:	test   BYTE PTR [ecx+0x2c],0x8
  446442:	je     0x446450
  446444:	cmp    BYTE PTR ds:0x44f549,0x0
  44644b:	je     0x4464be
  44644d:	xor    edi,edi
  44644f:	inc    edi
  446450:	test   BYTE PTR [ecx+0x7],0x3
  446454:	je     0x44645b
  446456:	or     edi,0x40
  446459:	jmp    0x44646a
  44645b:	movzx  eax,bh
  44645e:	cmp    BYTE PTR [eax+0x406514],0x0
  446465:	je     0x44646a
  446467:	or     edi,0x2
  44646a:	test   edx,edx
  44646c:	je     0x446476
  44646e:	cmp    DWORD PTR [edx],0x1
  446471:	jne    0x446476
  446473:	or     edi,0x20
  446476:	movzx  edx,BYTE PTR [ecx+0x5]
  44647a:	push   esi
  44647b:	sub    ecx,edx
  44647d:	call   0x43f5d7
  446482:	mov    cl,0x3
  446484:	mov    esi,eax
  446486:	call   0x4461f1
  44648b:	mov    cl,bl
  44648d:	call   0x4461f1
  446492:	mov    ecx,edi
  446494:	call   0x446222
  446499:	mov    ecx,DWORD PTR [ebp+0x8]
  44649c:	add    ecx,0x64
  44649f:	call   0x446222
  4464a4:	mov    ecx,esi
  4464a6:	call   0x44632c
  4464ab:	push   esi
  4464ac:	call   DWORD PTR ds:0x464354
  4464b2:	mov    eax,DWORD PTR [ebp-0x4]
  4464b5:	pop    ecx
  4464b6:	pop    esi
  4464b7:	test   eax,eax
  4464b9:	je     0x4464be
  4464bb:	and    DWORD PTR [eax],0x0
  4464be:	pop    edi
  4464bf:	pop    ebx
  4464c0:	leave  
  4464c1:	ret    0x4
  4464c4:	push   esi
  4464c5:	mov    esi,ecx
  4464c7:	push   edi
  4464c8:	movzx  edi,si
  4464cb:	cmp    edi,DWORD PTR ds:0x44db70
  4464d1:	je     0x4464e8
  4464d3:	mov    cl,0xb
  4464d5:	call   0x4461f1
  4464da:	lea    ecx,[esi+0x64]
  4464dd:	call   0x446222
  4464e2:	mov    DWORD PTR ds:0x44db70,edi
  4464e8:	pop    edi
  4464e9:	pop    esi
  4464ea:	ret    
  4464eb:	push   ebp
  4464ec:	mov    ebp,esp
  4464ee:	sub    esp,0xc
  4464f1:	push   ebx
  4464f2:	mov    ebx,ecx
  4464f4:	push   esi
  4464f5:	movzx  eax,BYTE PTR [ebx+0x6]
  4464f9:	push   edi
  4464fa:	dec    eax
  4464fb:	je     0x446553
  4464fd:	sub    eax,0x8
  446500:	je     0x446538
  446502:	dec    eax
  446503:	dec    eax
  446504:	je     0x4466c1
  44650a:	sub    eax,0x3
  44650d:	je     0x4466c1
  446513:	mov    ax,ds:0x4631d8
  446519:	movzx  ecx,ax
  44651c:	mov    DWORD PTR [ebp-0x8],ecx
  44651f:	inc    ax
  446521:	mov    ds:0x4631d8,ax
  446527:	movzx  eax,BYTE PTR [ebx+0x5]
  44652b:	mov    ecx,ebx
  44652d:	sub    ecx,eax
  44652f:	xor    edi,edi
  446531:	mov    esi,DWORD PTR [ecx-0x4]
  446534:	mov    eax,esi
  446536:	jmp    0x446593
  446538:	cmp    BYTE PTR ds:0x44f549,0x0
  44653f:	je     0x4466c1
  446545:	mov    ax,ds:0x4631d8
  44654b:	movzx  edx,ax
  44654e:	mov    DWORD PTR [ebp-0x8],edx
  446551:	jmp    0x44651f
  446553:	movzx  eax,WORD PTR [ebx+0x3e]
  446557:	mov    DWORD PTR [ebp-0x8],eax
  44655a:	test   ax,ax
  44655d:	je     0x446513
  44655f:	movzx  eax,BYTE PTR [ebx+0x5]
  446563:	sub    ecx,eax
  446565:	mov    esi,DWORD PTR [ecx-0x4]
  446568:	jmp    0x4465f3
  44656d:	movzx  ecx,BYTE PTR [eax+0xb]
  446571:	mov    DWORD PTR [ebp-0xc],ecx
  446574:	xor    edx,edx
  446576:	lea    ecx,[eax+0xc]
  446579:	cmp    DWORD PTR [ecx+0x4],edi
  44657c:	je     0x446591
  44657e:	cmp    DWORD PTR [ecx],0x2
  446581:	je     0x4465fc
  446583:	cmp    DWORD PTR [ecx],0x1
  446586:	je     0x4465fc
  446588:	inc    edx
  446589:	add    ecx,0x8
  44658c:	cmp    edx,DWORD PTR [ebp-0xc]
  44658f:	jbe    0x446579
  446591:	mov    eax,DWORD PTR [eax]
  446593:	test   eax,eax
  446595:	jne    0x44656d
  446597:	and    DWORD PTR [ebp-0x4],edi
  44659a:	mov    eax,ds:0x463388
  44659f:	cmp    DWORD PTR [edi+0x4],eax
  4465a2:	je     0x4465d2
  4465a4:	test   eax,eax
  4465a6:	je     0x4465b7
  4465a8:	cmp    eax,DWORD PTR ds:0x44e4bc
  4465ae:	je     0x4465b7
  4465b0:	mov    cl,0xa
  4465b2:	call   0x4461f1
  4465b7:	mov    ecx,DWORD PTR [edi+0x4]
  4465ba:	cmp    ecx,DWORD PTR ds:0x44e4bc
  4465c0:	je     0x4465ca
  4465c2:	mov    ecx,DWORD PTR [ecx+0xc]
  4465c5:	call   0x4463a0
  4465ca:	mov    eax,DWORD PTR [edi+0x4]
  4465cd:	mov    ds:0x463388,eax
  4465d2:	mov    ecx,DWORD PTR [ebp-0x4]
  4465d5:	mov    ecx,DWORD PTR [ecx+0x4]
  4465d8:	call   0x4463c0
  4465dd:	mov    cx,WORD PTR [edi+0x8]
  4465e1:	call   0x4464c4
  4465e6:	push   DWORD PTR [ebp-0x8]
  4465e9:	mov    edx,DWORD PTR [ebp-0x4]
  4465ec:	mov    ecx,ebx
  4465ee:	call   0x4463e1
  4465f3:	or     DWORD PTR [ebp-0xc],0xffffffff
  4465f7:	jmp    0x4466b9
  4465fc:	lea    ecx,[edx*8+0xc]
  446603:	add    ecx,eax
  446605:	mov    edi,eax
  446607:	mov    DWORD PTR [ebp-0x4],ecx
  44660a:	jmp    0x44659a
  44660c:	mov    eax,ds:0x463388
  446611:	cmp    DWORD PTR [esi+0x4],eax
  446614:	je     0x446648
  446616:	test   eax,eax
  446618:	je     0x446629
  44661a:	cmp    eax,DWORD PTR ds:0x44e4bc
  446620:	je     0x446629
  446622:	mov    cl,0xa
  446624:	call   0x4461f1
  446629:	mov    ecx,DWORD PTR [esi+0x4]
  44662c:	cmp    ecx,DWORD PTR ds:0x44e4bc
  446632:	je     0x44663c
  446634:	mov    ecx,DWORD PTR [ecx+0xc]
  446637:	call   0x4463a0
  44663c:	mov    eax,DWORD PTR [esi+0x4]
  44663f:	or     DWORD PTR [ebp-0xc],0xffffffff
  446643:	mov    ds:0x463388,eax
  446648:	mov    cx,WORD PTR [esi+0x8]
  44664c:	call   0x4464c4
  446651:	xor    eax,eax
  446653:	mov    DWORD PTR [ebp-0x4],eax
  446656:	cmp    BYTE PTR [esi+0xa],al
  446659:	jbe    0x4466b7
  44665b:	lea    edi,[esi+0xc]
  44665e:	cmp    DWORD PTR [edi],0x0
  446661:	je     0x4466ab
  446663:	mov    ecx,DWORD PTR [edi+0x4]
  446666:	call   0x4463c0
  44666b:	cmp    DWORD PTR [edi],0x0
  44666e:	jle    0x4466a8
  446670:	cmp    DWORD PTR [edi],0x2
  446673:	jle    0x44669c
  446675:	cmp    DWORD PTR [edi],0x3
  446678:	jne    0x4466a8
  44667a:	mov    eax,DWORD PTR [ebp-0xc]
  44667d:	cmp    DWORD PTR [edi+0x4],eax
  446680:	je     0x4466a8
  446682:	mov    eax,DWORD PTR [edi+0x4]
  446685:	mov    cl,0x4
  446687:	mov    DWORD PTR [ebp-0xc],eax
  44668a:	call   0x4461f1
  44668f:	mov    ecx,DWORD PTR [ebp-0x8]
  446692:	lea    ecx,[ecx+0x64]
  446695:	call   0x446222
  44669a:	jmp    0x4466a8
  44669c:	push   DWORD PTR [ebp-0x8]
  44669f:	mov    edx,edi
  4466a1:	mov    ecx,ebx
  4466a3:	call   0x4463e1
  4466a8:	mov    eax,DWORD PTR [ebp-0x4]
  4466ab:	inc    eax
  4466ac:	add    edi,0x8
  4466af:	mov    DWORD PTR [ebp-0x4],eax
  4466b2:	cmp    al,BYTE PTR [esi+0xa]
  4466b5:	jb     0x44665e
  4466b7:	mov    esi,DWORD PTR [esi]
  4466b9:	test   esi,esi
  4466bb:	jne    0x44660c
  4466c1:	pop    edi
  4466c2:	pop    esi
  4466c3:	pop    ebx
  4466c4:	leave  
  4466c5:	ret    
  4466c6:	mov    eax,ds:0x44e4bc
  4466cb:	push   esi
  4466cc:	push   edi
  4466cd:	mov    ds:0x463388,eax
  4466d2:	mov    edi,0x460628
  4466d7:	mov    esi,DWORD PTR [edi]
  4466d9:	jmp    0x4466ea
  4466db:	test   BYTE PTR [esi+0x7],0x10
  4466df:	jne    0x4466e8
  4466e1:	mov    ecx,esi
  4466e3:	call   0x4464eb
  4466e8:	mov    esi,DWORD PTR [esi]
  4466ea:	test   esi,esi
  4466ec:	jne    0x4466db
  4466ee:	add    edi,0x4
  4466f1:	cmp    edi,0x460e28
  4466f7:	jl     0x4466d7
  4466f9:	mov    eax,ds:0x463388
  4466fe:	pop    edi
  4466ff:	pop    esi
  446700:	cmp    eax,DWORD PTR ds:0x44e4bc
  446706:	je     0x44670f
  446708:	mov    cl,0xa
  44670a:	call   0x4461f1
  44670f:	mov    cl,0xa
  446711:	jmp    0x4461f1
  446716:	push   ebx
  446717:	xor    ebx,ebx
  446719:	push   esi
  44671a:	cmp    BYTE PTR ds:0x45f850,bl
  446720:	jne    0x4467bd
  446726:	call   0x438344
  44672b:	test   al,al
  44672d:	je     0x44677d
  44672f:	cmp    WORD PTR ds:0x45fac8,bx
  446736:	je     0x44674f
  446738:	mov    DWORD PTR ds:0x460624,0x45fab8
  446742:	call   0x441eb1
  446747:	mov    ecx,DWORD PTR ds:0x45f9b4
  44674d:	jmp    0x446766
  44674f:	push   ebx
  446750:	xor    dl,dl
  446752:	xor    ecx,ecx
  446754:	call   0x43abf1
  446759:	mov    ecx,DWORD PTR ds:0x45f9b4
  44675f:	mov    eax,ds:0x460618
  446764:	add    DWORD PTR [ecx],eax
  446766:	cmp    BYTE PTR ds:0x44e13b,bl
  44676c:	jne    0x4468ca
  446772:	mov    al,ds:0x45f850
  446777:	test   al,al
  446779:	je     0x446726
  44677b:	jmp    0x446788
  44677d:	mov    al,ds:0x45f850
  446782:	mov    ecx,DWORD PTR ds:0x45f9b4
  446788:	test   al,al
  44678a:	jne    0x4467bd
  44678c:	dec    DWORD PTR [ecx]
  44678e:	push   ebx
  44678f:	xor    edx,edx
  446791:	mov    ecx,0x828
  446796:	call   0x42ee80
  44679b:	mov    esi,0x44db78
  4467a0:	push   esi
  4467a1:	call   0x42f4ef
  4467a6:	mov    edx,DWORD PTR ds:0x448884
  4467ac:	mov    ecx,esi
  4467ae:	call   0x43f399
  4467b3:	mov    ecx,DWORD PTR ds:0x45f9b4
  4467b9:	inc    DWORD PTR [ecx]
  4467bb:	jmp    0x4467e8
  4467bd:	mov    BYTE PTR ds:0x4605b6,0x1
  4467c4:	jmp    0x4467cd
  4467c6:	mov    eax,ds:0x460618
  4467cb:	add    DWORD PTR [ecx],eax
  4467cd:	call   0x438344
  4467d2:	mov    ecx,DWORD PTR ds:0x45f9b4
  4467d8:	test   al,al
  4467da:	jne    0x4467c6
  4467dc:	mov    BYTE PTR ds:0x45f850,bl
  4467e2:	mov    BYTE PTR ds:0x4605b6,bl
  4467e8:	dec    DWORD PTR [ecx]
  4467ea:	cmp    DWORD PTR ds:0x460594,ebx
  4467f0:	je     0x446803
  4467f2:	mov    edx,0x41fe2c
  4467f7:	mov    ecx,0x3f2
  4467fc:	call   0x42f1c0
  446801:	jmp    0x446840
  446803:	cmp    DWORD PTR ds:0x45f994,ebx
  446809:	je     0x446814
  44680b:	mov    eax,ds:0x44e144
  446810:	mov    edx,DWORD PTR [eax]
  446812:	jmp    0x44682f
  446814:	cmp    WORD PTR ds:0x45f990,bx
  44681b:	je     0x446825
  44681d:	mov    edx,DWORD PTR ds:0x460e44
  446823:	jmp    0x44682f
  446825:	mov    edx,DWORD PTR ds:0x45f834
  44682b:	test   edx,edx
  44682d:	je     0x446846
  44682f:	movzx  eax,BYTE PTR [edx+0x5]
  446833:	push   eax
  446834:	sub    edx,eax
  446836:	mov    ecx,0x3f2
  44683b:	call   0x42f15d
  446840:	mov    ecx,DWORD PTR ds:0x45f9b4
  446846:	mov    eax,ds:0x462b94
  44684b:	test   eax,eax
  44684d:	je     0x446867
  44684f:	cmp    BYTE PTR [eax+0x15],bl
  446852:	je     0x446867
  446854:	push   ebx
  446855:	xor    edx,edx
  446857:	mov    ecx,0xfc1
  44685c:	call   0x42ee80
  446861:	mov    ecx,DWORD PTR ds:0x45f9b4
  446867:	inc    DWORD PTR [ecx]
  446869:	cmp    BYTE PTR ds:0x44e043,bl
  44686f:	je     0x446878
  446871:	inc    DWORD PTR [ecx]
  446873:	call   0x438545
  446878:	mov    ecx,DWORD PTR ds:0x44e4bc
  44687e:	call   0x433f6e
  446883:	mov    eax,ds:0x460e3c
  446888:	test   eax,eax
  44688a:	je     0x4468b9
  44688c:	mov    esi,DWORD PTR [eax]
  44688e:	mov    ecx,eax
  446890:	mov    DWORD PTR [eax],ebx
  446892:	call   0x445afc
  446897:	test   eax,eax
  446899:	je     0x4468ae
  44689b:	mov    dl,BYTE PTR [eax+0x7]
  44689e:	mov    cl,dl
  4468a0:	and    cl,0x3
  4468a3:	cmp    cl,0x3
  4468a6:	jne    0x4468ae
  4468a8:	or     dl,0x80
  4468ab:	mov    BYTE PTR [eax+0x7],dl
  4468ae:	mov    eax,esi
  4468b0:	mov    ds:0x460e3c,eax
  4468b5:	test   esi,esi
  4468b7:	jne    0x44688c
  4468b9:	call   0x44699f
  4468be:	call   0x4469fb
  4468c3:	pop    esi
  4468c4:	pop    ebx
  4468c5:	jmp    0x446a4d
  4468ca:	call   0x42c81b
  4468cf:	int3   
  4468d0:	xor    edx,edx
  4468d2:	mov    BYTE PTR ds:0x4605ba,dl
  4468d8:	mov    BYTE PTR ds:0x45f83b,dl
  4468de:	call   0x446929
  4468e3:	mov    ecx,DWORD PTR ds:0x45f87c
  4468e9:	jmp    0x4468fd
  4468eb:	mov    eax,DWORD PTR [ecx+0x38]
  4468ee:	mov    DWORD PTR [ecx+0x20],edx
  4468f1:	mov    DWORD PTR [ecx+0x24],edx
  4468f4:	mov    DWORD PTR [ecx+0x28],edx
  4468f7:	mov    DWORD PTR [eax+0x1c],edx
  4468fa:	mov    ecx,DWORD PTR [ecx+0x30]
  4468fd:	test   ecx,ecx
  4468ff:	jne    0x4468eb
  446901:	mov    eax,ds:0x448904
  446906:	mov    DWORD PTR [eax+0x18],edx
  446909:	mov    eax,ds:0x448914
  44690e:	mov    DWORD PTR [eax+0x18],edx
  446911:	mov    ecx,DWORD PTR ds:0x448924
  446917:	mov    eax,ds:0x460e48
  44691c:	mov    DWORD PTR [ecx+0x18],eax
  44691f:	mov    eax,ds:0x448914
  446924:	mov    BYTE PTR [eax+0x1c],0x2
  446928:	ret    
  446929:	mov    al,ds:0x44f54a
  44692e:	mov    ds:0x45f99e,al
  446933:	xor    eax,eax
  446935:	mov    ds:0x45f990,ax
  44693b:	mov    eax,ds:0x45f9b4
  446940:	xor    ecx,ecx
  446942:	inc    ecx
  446943:	mov    DWORD PTR [eax],ecx
  446945:	xor    eax,eax
  446947:	cmp    BYTE PTR ds:0x44e00b,al
  44694d:	mov    ds:0x45f854,ax
  446953:	mov    al,ds:0x44f54b
  446958:	sete   BYTE PTR ds:0x45f83b
  44695f:	cmp    BYTE PTR ds:0x44f54c,0x0
  446966:	mov    ds:0x44e046,al
  44696b:	setne  al
  44696e:	mov    BYTE PTR ds:0x45f83a,0xa
  446975:	mov    WORD PTR ds:0x45f99c,cx
  44697c:	mov    BYTE PTR ds:0x4489a9,cl
  446982:	mov    BYTE PTR ds:0x460e4d,cl
  446988:	lea    eax,[eax*2+0x1]
  44698f:	mov    ds:0x45f99f,al
  446994:	mov    al,ds:0x44f553
  446999:	mov    ds:0x460e4c,al
  44699e:	ret    
  44699f:	mov    eax,ds:0x462b90
  4469a4:	mov    BYTE PTR ds:0x45f692,0x1
  4469ab:	mov    ds:0x462b94,eax
  4469b0:	push   esi
  4469b1:	call   0x4468d0
  4469b6:	mov    eax,ds:0x448884
  4469bb:	mov    esi,DWORD PTR [eax+0x8]
  4469be:	add    esi,0x4
  4469c1:	je     0x4469ea
  4469c3:	movzx  eax,BYTE PTR [esi]
  4469c6:	mov    eax,DWORD PTR [eax*4+0x404898]
  4469cd:	test   eax,eax
  4469cf:	je     0x4469d4
  4469d1:	push   esi
  4469d2:	call   eax
  4469d4:	mov    ecx,esi
  4469d6:	call   0x428f71
  4469db:	cmp    BYTE PTR ds:0x44e13b,0x0
  4469e2:	mov    esi,eax
  4469e4:	jne    0x4469f5
  4469e6:	test   esi,esi
  4469e8:	jne    0x4469c3
  4469ea:	cmp    BYTE PTR ds:0x4605ba,0x0
  4469f1:	jne    0x4469b1
  4469f3:	pop    esi
  4469f4:	ret    
  4469f5:	call   0x42c81b
  4469fa:	int3   
  4469fb:	cmp    BYTE PTR ds:0x4605bb,0x0
  446a02:	je     0x446a46
  446a04:	push   esi
  446a05:	mov    BYTE PTR ds:0x4605bb,0x0
  446a0c:	call   0x4468d0
  446a11:	mov    eax,ds:0x448884
  446a16:	mov    esi,DWORD PTR [eax+0x8]
  446a19:	add    esi,0x4
  446a1c:	je     0x446a45
  446a1e:	movzx  eax,BYTE PTR [esi]
  446a21:	mov    eax,DWORD PTR [eax*4+0x404898]
  446a28:	test   eax,eax
  446a2a:	je     0x446a2f
  446a2c:	push   esi
  446a2d:	call   eax
  446a2f:	mov    ecx,esi
  446a31:	call   0x428f71
  446a36:	cmp    BYTE PTR ds:0x44e13b,0x0
  446a3d:	mov    esi,eax
  446a3f:	jne    0x446a47
  446a41:	test   esi,esi
  446a43:	jne    0x446a1e
  446a45:	pop    esi
  446a46:	ret    
  446a47:	call   0x42c81b
  446a4c:	int3   
  446a4d:	push   esi
  446a4e:	push   edi
  446a4f:	push   0x61
  446a51:	pop    ecx
  446a52:	mov    esi,0x404fc8
  446a57:	mov    edi,0x45f6a8
  446a5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446a5e:	call   0x422707
  446a63:	mov    eax,ds:0x462b90
  446a68:	mov    ds:0x462b94,eax
  446a6d:	mov    eax,ds:0x460e80
  446a72:	mov    BYTE PTR ds:0x45f692,0x2
  446a79:	jmp    0x446a81
  446a7b:	and    BYTE PTR [eax+0x2d],0xef
  446a7f:	mov    eax,DWORD PTR [eax]
  446a81:	test   eax,eax
  446a83:	jne    0x446a7b
  446a85:	mov    ecx,DWORD PTR ds:0x44e4c8
  446a8b:	call   0x438780
  446a90:	call   0x446929
  446a95:	mov    eax,ds:0x448904
  446a9a:	xor    edi,edi
  446a9c:	mov    DWORD PTR [eax+0x18],edi
  446a9f:	mov    eax,ds:0x448914
  446aa4:	mov    DWORD PTR [eax+0x18],edi
  446aa7:	mov    ecx,DWORD PTR ds:0x448924
  446aad:	mov    eax,ds:0x460e48
  446ab2:	mov    DWORD PTR [ecx+0x18],eax
  446ab5:	mov    eax,ds:0x448914
  446aba:	mov    BYTE PTR [eax+0x1c],0x2
  446abe:	mov    eax,ds:0x448884
  446ac3:	mov    esi,DWORD PTR [eax+0x8]
  446ac6:	add    esi,0x4
  446ac9:	je     0x446b1f
  446acb:	movzx  eax,BYTE PTR [esi]
  446ace:	mov    eax,DWORD PTR [eax*4+0x45f6a8]
  446ad5:	test   eax,eax
  446ad7:	je     0x446adc
  446ad9:	push   esi
  446ada:	call   eax
  446adc:	mov    eax,ds:0x45f844
  446ae1:	test   eax,eax
  446ae3:	je     0x446aef
  446ae5:	mov    esi,eax
  446ae7:	mov    DWORD PTR ds:0x45f844,edi
  446aed:	jmp    0x446b12
  446aef:	cmp    BYTE PTR ds:0x44e00b,0x0
  446af6:	je     0x446b09
  446af8:	movzx  eax,BYTE PTR [esi]
  446afb:	mov    eax,DWORD PTR [eax*4+0x448d98]
  446b02:	test   eax,eax
  446b04:	je     0x446b09
  446b06:	push   esi
  446b07:	call   eax
  446b09:	cmp    BYTE PTR ds:0x44e13b,0x0
  446b10:	jne    0x446b22
  446b12:	mov    ecx,esi
  446b14:	call   0x428f71
  446b19:	mov    esi,eax
  446b1b:	test   esi,esi
  446b1d:	jne    0x446acb
  446b1f:	pop    edi
  446b20:	pop    esi
  446b21:	ret    
  446b22:	call   0x42c81b
  446b27:	int3   
  446b28:	call   DWORD PTR ds:0x4642b4
  446b2e:	cmp    al,0x6
  446b30:	jae    0x446b51
  446b32:	push   0x401068
  446b37:	call   DWORD PTR ds:0x46431c
  446b3d:	push   0x401084
  446b42:	push   eax
  446b43:	call   DWORD PTR ds:0x464320
  446b49:	test   eax,eax
  446b4b:	je     0x446b51
  446b4d:	push   0x1
  446b4f:	call   eax
  446b51:	xor    eax,eax
  446b53:	ret    
  446b54:	mov    eax,0x5a4d
  446b59:	cmp    WORD PTR ds:0x400000,ax
  446b60:	je     0x446b66
  446b62:	xor    eax,eax
  446b64:	jmp    0x446b9a
  446b66:	mov    ecx,DWORD PTR ds:0x40003c
  446b6c:	cmp    DWORD PTR [ecx+0x400000],0x4550
  446b76:	jne    0x446b62
  446b78:	mov    eax,0x10b
  446b7d:	cmp    WORD PTR [ecx+0x400018],ax
  446b84:	jne    0x446b62
  446b86:	xor    eax,eax
  446b88:	cmp    DWORD PTR [ecx+0x400074],0xe
  446b8f:	jbe    0x446b9a
  446b91:	cmp    DWORD PTR [ecx+0x4000e8],eax
  446b97:	setne  al
  446b9a:	push   0x1
  446b9c:	mov    ds:0x44db98,eax
  446ba1:	call   DWORD PTR ds:0x464428
  446ba7:	pop    ecx
  446ba8:	push   0xffffffff
  446baa:	call   DWORD PTR ds:0x464338
  446bb0:	mov    ecx,DWORD PTR ds:0x464448
  446bb6:	mov    ds:0x463b94,eax
  446bbb:	mov    ds:0x463b98,eax
  446bc0:	mov    eax,ds:0x44ded0
  446bc5:	mov    DWORD PTR [ecx],eax
  446bc7:	mov    ecx,DWORD PTR ds:0x46444c
  446bcd:	mov    eax,ds:0x44dec4
  446bd2:	mov    DWORD PTR [ecx],eax
  446bd4:	call   0x447324
  446bd9:	call   0x44722b
  446bde:	cmp    DWORD PTR ds:0x44884c,0x0
  446be5:	jne    0x446bf3
  446be7:	push   0x44722b
  446bec:	call   DWORD PTR ds:0x464438
  446bf2:	pop    ecx
  446bf3:	call   0x447364
  446bf8:	cmp    DWORD PTR ds:0x448850,0xffffffff
  446bff:	jne    0x446c0a
  446c01:	push   0xffffffff
  446c03:	call   DWORD PTR ds:0x464434
  446c09:	pop    ecx
  446c0a:	xor    eax,eax
  446c0c:	ret    
  446c0d:	push   0x447344
  446c12:	call   0x44730f
  446c17:	mov    eax,ds:0x44decc
  446c1c:	mov    DWORD PTR [esp],0x44db9c
  446c23:	push   DWORD PTR ds:0x44dec8
  446c29:	mov    ds:0x44db9c,eax
  446c2e:	push   0x44db90
  446c33:	push   0x44db8c
  446c38:	push   0x44db88
  446c3d:	call   DWORD PTR ds:0x464424
  446c43:	add    esp,0x14
  446c46:	mov    ds:0x44db94,eax
  446c4b:	test   eax,eax
  446c4d:	jns    0x446c57
  446c4f:	push   0x8
  446c51:	call   0x44703c
  446c56:	pop    ecx
  446c57:	ret    
  446c58:	push   0xc
  446c5a:	push   0x447658
  446c5f:	call   0x4473a0
  446c64:	xor    ebx,ebx
  446c66:	mov    DWORD PTR [ebp-0x4],ebx
  446c69:	mov    eax,fs:0x18
  446c6f:	mov    edx,DWORD PTR [eax+0x4]
  446c72:	mov    edi,ebx
  446c74:	mov    esi,0x463b8c
  446c79:	mov    ecx,edx
  446c7b:	xor    eax,eax
  446c7d:	lock cmpxchg DWORD PTR [esi],ecx
  446c81:	test   eax,eax
  446c83:	je     0x446c90
  446c85:	cmp    eax,edx
  446c87:	jne    0x446c79
  446c89:	xor    esi,esi
  446c8b:	inc    esi
  446c8c:	mov    edi,esi
  446c8e:	jmp    0x446c93
  446c90:	xor    esi,esi
  446c92:	inc    esi
  446c93:	cmp    DWORD PTR ds:0x463b90,esi
  446c99:	jne    0x446ca5
  446c9b:	push   0x1f
  446c9d:	call   0x44703c
  446ca2:	pop    ecx
  446ca3:	jmp    0x446cdf
  446ca5:	cmp    DWORD PTR ds:0x463b90,ebx
  446cab:	jne    0x446cd9
  446cad:	mov    DWORD PTR ds:0x463b90,esi
  446cb3:	push   0x401020
  446cb8:	push   0x40100c
  446cbd:	call   0x44738c
  446cc2:	pop    ecx
  446cc3:	pop    ecx
  446cc4:	test   eax,eax
  446cc6:	je     0x446cdf
  446cc8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  446ccf:	mov    eax,0xff
  446cd4:	jmp    0x446db7
  446cd9:	mov    DWORD PTR ds:0x44db84,esi
  446cdf:	cmp    DWORD PTR ds:0x463b90,esi
  446ce5:	jne    0x446d02
  446ce7:	push   0x401008
  446cec:	push   0x401000
  446cf1:	call   0x447392
  446cf6:	pop    ecx
  446cf7:	pop    ecx
  446cf8:	mov    DWORD PTR ds:0x463b90,0x2
  446d02:	test   edi,edi
  446d04:	jne    0x446d0f
  446d06:	xor    eax,eax
  446d08:	mov    ecx,0x463b8c
  446d0d:	xchg   DWORD PTR [ecx],eax
  446d0f:	cmp    DWORD PTR ds:0x463b9c,0x0
  446d16:	je     0x446d31
  446d18:	push   0x463b9c
  446d1d:	call   0x4470a0
  446d22:	pop    ecx
  446d23:	test   eax,eax
  446d25:	je     0x446d31
  446d27:	push   ebx
  446d28:	push   0x2
  446d2a:	push   ebx
  446d2b:	call   DWORD PTR ds:0x463b9c
  446d31:	mov    ecx,DWORD PTR ds:0x44db90
  446d37:	mov    eax,ds:0x464444
  446d3c:	mov    DWORD PTR [eax],ecx
  446d3e:	push   DWORD PTR ds:0x44db90
  446d44:	push   DWORD PTR ds:0x44db8c
  446d4a:	push   DWORD PTR ds:0x44db88
  446d50:	call   0x42a3a9
  446d55:	add    esp,0xc
  446d58:	mov    ds:0x44db80,eax
  446d5d:	cmp    DWORD PTR ds:0x44db98,0x0
  446d64:	jne    0x446d9c
  446d66:	push   eax
  446d67:	call   DWORD PTR ds:0x464388
  446d6d:	mov    ecx,DWORD PTR [ebp-0x14]
  446d70:	mov    eax,DWORD PTR [ecx]
  446d72:	mov    eax,DWORD PTR [eax]
  446d74:	mov    DWORD PTR [ebp-0x1c],eax
  446d77:	push   ecx
  446d78:	push   eax
  446d79:	call   0x447036
  446d7e:	pop    ecx
  446d7f:	pop    ecx
  446d80:	ret    
  446d81:	mov    esp,DWORD PTR [ebp-0x18]
  446d84:	mov    eax,DWORD PTR [ebp-0x1c]
  446d87:	mov    ds:0x44db80,eax
  446d8c:	cmp    DWORD PTR ds:0x44db98,0x0
  446d93:	jne    0x446d9c
  446d95:	push   eax
  446d96:	call   DWORD PTR ds:0x46442c
  446d9c:	cmp    DWORD PTR ds:0x44db84,0x0
  446da3:	jne    0x446db0
  446da5:	call   DWORD PTR ds:0x464430
  446dab:	mov    eax,ds:0x44db80
  446db0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  446db7:	call   0x4473e5
  446dbc:	ret    
  446dbd:	call   0x447191
  446dc2:	jmp    0x446c58
  446dc7:	cmp    ecx,DWORD PTR ds:0x448858
  446dcd:	jne    0x446dd1
  446dcf:	repz ret 
  446dd1:	jmp    0x446e13
  446dd6:	push   ebp
  446dd7:	mov    ebp,esp
  446dd9:	call   DWORD PTR ds:0x464334
  446ddf:	push   0x1
  446de1:	mov    ds:0x44debc,eax
  446de6:	call   0x44741c
  446deb:	push   DWORD PTR [ebp+0x8]
  446dee:	call   0x447422
  446df3:	cmp    DWORD PTR ds:0x44debc,0x0
  446dfa:	pop    ecx
  446dfb:	pop    ecx
  446dfc:	jne    0x446e06
  446dfe:	push   0x1
  446e00:	call   0x44741c
  446e05:	pop    ecx
  446e06:	push   0xc0000409
  446e0b:	call   0x447428
  446e10:	pop    ecx
  446e11:	pop    ebp
  446e12:	ret    
  446e13:	push   ebp
  446e14:	mov    ebp,esp
  446e16:	sub    esp,0x324
  446e1c:	push   0x17
  446e1e:	call   0x44745e
  446e23:	test   eax,eax
  446e25:	je     0x446e2c
  446e27:	push   0x2
  446e29:	pop    ecx
  446e2a:	int    0x29
  446e2c:	mov    ds:0x44dca0,eax
  446e31:	mov    DWORD PTR ds:0x44dc9c,ecx
  446e37:	mov    DWORD PTR ds:0x44dc98,edx
  446e3d:	mov    DWORD PTR ds:0x44dc94,ebx
  446e43:	mov    DWORD PTR ds:0x44dc90,esi
  446e49:	mov    DWORD PTR ds:0x44dc8c,edi
  446e4f:	data16 mov WORD PTR ds:0x44dcb8,ss
  446e56:	data16 mov WORD PTR ds:0x44dcac,cs
  446e5d:	data16 mov WORD PTR ds:0x44dc88,ds
  446e64:	data16 mov WORD PTR ds:0x44dc84,es
  446e6b:	data16 mov WORD PTR ds:0x44dc80,fs
  446e72:	data16 mov WORD PTR ds:0x44dc7c,gs
  446e79:	pushf  
  446e7a:	pop    DWORD PTR ds:0x44dcb0
  446e80:	mov    eax,DWORD PTR [ebp+0x0]
  446e83:	mov    ds:0x44dca4,eax
  446e88:	mov    eax,DWORD PTR [ebp+0x4]
  446e8b:	mov    ds:0x44dca8,eax
  446e90:	lea    eax,[ebp+0x8]
  446e93:	mov    ds:0x44dcb4,eax
  446e98:	mov    eax,DWORD PTR [ebp-0x324]
  446e9e:	mov    DWORD PTR ds:0x44dbf0,0x10001
  446ea8:	mov    eax,ds:0x44dca8
  446ead:	mov    ds:0x44dbac,eax
  446eb2:	mov    DWORD PTR ds:0x44dba0,0xc0000409
  446ebc:	mov    DWORD PTR ds:0x44dba4,0x1
  446ec6:	mov    DWORD PTR ds:0x44dbb0,0x1
  446ed0:	push   0x4
  446ed2:	pop    eax
  446ed3:	imul   eax,eax,0x0
  446ed6:	mov    DWORD PTR [eax+0x44dbb4],0x2
  446ee0:	push   0x4
  446ee2:	pop    eax
  446ee3:	imul   eax,eax,0x0
  446ee6:	mov    ecx,DWORD PTR ds:0x448858
  446eec:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  446ef0:	push   0x4
  446ef2:	pop    eax
  446ef3:	shl    eax,0x0
  446ef6:	mov    ecx,DWORD PTR ds:0x44885c
  446efc:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  446f00:	push   0x401098
  446f05:	call   0x446dd6
  446f0a:	leave  
  446f0b:	ret    
  446f0c:	push   ebp
  446f0d:	mov    ebp,esp
  446f0f:	push   0x8
  446f11:	call   0x446f18
  446f16:	pop    ebp
  446f17:	ret    
  446f18:	push   ebp
  446f19:	mov    ebp,esp
  446f1b:	sub    esp,0x31c
  446f21:	push   0x17
  446f23:	call   0x44745e
  446f28:	test   eax,eax
  446f2a:	je     0x446f31
  446f2c:	mov    ecx,DWORD PTR [ebp+0x8]
  446f2f:	int    0x29
  446f31:	mov    ds:0x44dca0,eax
  446f36:	mov    DWORD PTR ds:0x44dc9c,ecx
  446f3c:	mov    DWORD PTR ds:0x44dc98,edx
  446f42:	mov    DWORD PTR ds:0x44dc94,ebx
  446f48:	mov    DWORD PTR ds:0x44dc90,esi
  446f4e:	mov    DWORD PTR ds:0x44dc8c,edi
  446f54:	data16 mov WORD PTR ds:0x44dcb8,ss
  446f5b:	data16 mov WORD PTR ds:0x44dcac,cs
  446f62:	data16 mov WORD PTR ds:0x44dc88,ds
  446f69:	data16 mov WORD PTR ds:0x44dc84,es
  446f70:	data16 mov WORD PTR ds:0x44dc80,fs
  446f77:	data16 mov WORD PTR ds:0x44dc7c,gs
  446f7e:	pushf  
  446f7f:	pop    DWORD PTR ds:0x44dcb0
  446f85:	mov    eax,DWORD PTR [ebp+0x0]
  446f88:	mov    ds:0x44dca4,eax
  446f8d:	mov    eax,DWORD PTR [ebp+0x4]
  446f90:	mov    ds:0x44dca8,eax
  446f95:	lea    eax,[ebp+0x8]
  446f98:	mov    ds:0x44dcb4,eax
  446f9d:	mov    eax,DWORD PTR [ebp-0x31c]
  446fa3:	mov    eax,ds:0x44dca8
  446fa8:	mov    ds:0x44dbac,eax
  446fad:	mov    DWORD PTR ds:0x44dba0,0xc0000409
  446fb7:	mov    DWORD PTR ds:0x44dba4,0x1
  446fc1:	mov    DWORD PTR ds:0x44dbb0,0x1
  446fcb:	push   0x4
  446fcd:	pop    eax
  446fce:	imul   eax,eax,0x0
  446fd1:	mov    ecx,DWORD PTR [ebp+0x8]
  446fd4:	mov    DWORD PTR [eax+0x44dbb4],ecx
  446fda:	push   0x401098
  446fdf:	call   0x446dd6
  446fe4:	leave  
  446fe5:	ret    
  446fe6:	push   ebp
  446fe7:	mov    ebp,esp
  446fe9:	mov    eax,DWORD PTR [ebp+0x8]
  446fec:	mov    eax,DWORD PTR [eax]
  446fee:	cmp    DWORD PTR [eax],0xe06d7363
  446ff4:	jne    0x44701b
  446ff6:	cmp    DWORD PTR [eax+0x10],0x3
  446ffa:	jne    0x44701b
  446ffc:	mov    eax,DWORD PTR [eax+0x14]
  446fff:	cmp    eax,0x19930520
  447004:	je     0x447021
  447006:	cmp    eax,0x19930521
  44700b:	je     0x447021
  44700d:	cmp    eax,0x19930522
  447012:	je     0x447021
  447014:	cmp    eax,0x1994000
  447019:	je     0x447021
  44701b:	xor    eax,eax
  44701d:	pop    ebp
  44701e:	ret    0x4
  447021:	call   0x44742e
  447026:	int3   
  447027:	push   0x446fe6
  44702c:	call   0x447434
  447031:	pop    ecx
  447032:	xor    eax,eax
  447034:	ret    
  447035:	int3   
  447036:	jmp    DWORD PTR ds:0x46441c
  44703c:	jmp    DWORD PTR ds:0x464420
  447042:	int3   
  447043:	int3   
  447044:	int3   
  447045:	int3   
  447046:	int3   
  447047:	int3   
  447048:	int3   
  447049:	int3   
  44704a:	int3   
  44704b:	int3   
  44704c:	int3   
  44704d:	int3   
  44704e:	int3   
  44704f:	int3   
  447050:	push   ebp
  447051:	mov    ebp,esp
  447053:	mov    eax,DWORD PTR [ebp+0x8]
  447056:	push   ebx
  447057:	mov    ecx,DWORD PTR [eax+0x3c]
  44705a:	add    ecx,eax
  44705c:	push   esi
  44705d:	movzx  eax,WORD PTR [ecx+0x14]
  447061:	movzx  ebx,WORD PTR [ecx+0x6]
  447065:	add    eax,0x18
  447068:	xor    edx,edx
  44706a:	add    eax,ecx
  44706c:	push   edi
  44706d:	test   ebx,ebx
  44706f:	je     0x44708c
  447071:	mov    edi,DWORD PTR [ebp+0xc]
  447074:	mov    esi,DWORD PTR [eax+0xc]
  447077:	cmp    edi,esi
  447079:	jb     0x447084
  44707b:	mov    ecx,DWORD PTR [eax+0x8]
  44707e:	add    ecx,esi
  447080:	cmp    edi,ecx
  447082:	jb     0x44708e
  447084:	inc    edx
  447085:	add    eax,0x28
  447088:	cmp    edx,ebx
  44708a:	jb     0x447074
  44708c:	xor    eax,eax
  44708e:	pop    edi
  44708f:	pop    esi
  447090:	pop    ebx
  447091:	pop    ebp
  447092:	ret    
  447093:	int3   
  447094:	int3   
  447095:	int3   
  447096:	int3   
  447097:	int3   
  447098:	int3   
  447099:	int3   
  44709a:	int3   
  44709b:	int3   
  44709c:	int3   
  44709d:	int3   
  44709e:	int3   
  44709f:	int3   
  4470a0:	push   ebp
  4470a1:	mov    ebp,esp
  4470a3:	push   0xfffffffe
  4470a5:	push   0x447678
  4470aa:	push   0x4473f9
  4470af:	mov    eax,fs:0x0
  4470b5:	push   eax
  4470b6:	sub    esp,0x8
  4470b9:	push   ebx
  4470ba:	push   esi
  4470bb:	push   edi
  4470bc:	mov    eax,ds:0x448858
  4470c1:	xor    DWORD PTR [ebp-0x8],eax
  4470c4:	xor    eax,ebp
  4470c6:	push   eax
  4470c7:	lea    eax,[ebp-0x10]
  4470ca:	mov    fs:0x0,eax
  4470d0:	mov    DWORD PTR [ebp-0x18],esp
  4470d3:	mov    DWORD PTR [ebp-0x4],0x0
  4470da:	push   0x400000
  4470df:	call   0x447160
  4470e4:	add    esp,0x4
  4470e7:	test   eax,eax
  4470e9:	je     0x44713f
  4470eb:	mov    eax,DWORD PTR [ebp+0x8]
  4470ee:	sub    eax,0x400000
  4470f3:	push   eax
  4470f4:	push   0x400000
  4470f9:	call   0x447050
  4470fe:	add    esp,0x8
  447101:	test   eax,eax
  447103:	je     0x44713f
  447105:	mov    eax,DWORD PTR [eax+0x24]
  447108:	shr    eax,0x1f
  44710b:	not    eax
  44710d:	and    eax,0x1
  447110:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  447117:	mov    ecx,DWORD PTR [ebp-0x10]
  44711a:	mov    DWORD PTR fs:0x0,ecx
  447121:	pop    ecx
  447122:	pop    edi
  447123:	pop    esi
  447124:	pop    ebx
  447125:	mov    esp,ebp
  447127:	pop    ebp
  447128:	ret    
  447129:	mov    eax,DWORD PTR [ebp-0x14]
  44712c:	mov    eax,DWORD PTR [eax]
  44712e:	xor    ecx,ecx
  447130:	cmp    DWORD PTR [eax],0xc0000005
  447136:	sete   cl
  447139:	mov    eax,ecx
  44713b:	ret    
  44713c:	mov    esp,DWORD PTR [ebp-0x18]
  44713f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  447146:	xor    eax,eax
  447148:	mov    ecx,DWORD PTR [ebp-0x10]
  44714b:	mov    DWORD PTR fs:0x0,ecx
  447152:	pop    ecx
  447153:	pop    edi
  447154:	pop    esi
  447155:	pop    ebx
  447156:	mov    esp,ebp
  447158:	pop    ebp
  447159:	ret    
  44715a:	int3   
  44715b:	int3   
  44715c:	int3   
  44715d:	int3   
  44715e:	int3   
  44715f:	int3   
  447160:	push   ebp
  447161:	mov    ebp,esp
  447163:	mov    eax,DWORD PTR [ebp+0x8]
  447166:	mov    ecx,0x5a4d
  44716b:	cmp    WORD PTR [eax],cx
  44716e:	je     0x447174
  447170:	xor    eax,eax
  447172:	pop    ebp
  447173:	ret    
  447174:	mov    ecx,DWORD PTR [eax+0x3c]
  447177:	add    ecx,eax
  447179:	xor    eax,eax
  44717b:	cmp    DWORD PTR [ecx],0x4550
  447181:	jne    0x44718f
  447183:	mov    edx,0x10b
  447188:	cmp    WORD PTR [ecx+0x18],dx
  44718c:	sete   al
  44718f:	pop    ebp
  447190:	ret    
  447191:	push   ebp
  447192:	mov    ebp,esp
  447194:	sub    esp,0x14
  447197:	mov    eax,ds:0x448858
  44719c:	and    DWORD PTR [ebp-0xc],0x0
  4471a0:	and    DWORD PTR [ebp-0x8],0x0
  4471a4:	push   esi
  4471a5:	push   edi
  4471a6:	mov    edi,0xbb40e64e
  4471ab:	mov    esi,0xffff0000
  4471b0:	cmp    eax,edi
  4471b2:	je     0x4471c1
  4471b4:	test   esi,eax
  4471b6:	je     0x4471c1
  4471b8:	not    eax
  4471ba:	mov    ds:0x44885c,eax
  4471bf:	jmp    0x447227
  4471c1:	lea    eax,[ebp-0xc]
  4471c4:	push   eax
  4471c5:	call   DWORD PTR ds:0x464328
  4471cb:	mov    eax,DWORD PTR [ebp-0x8]
  4471ce:	xor    eax,DWORD PTR [ebp-0xc]
  4471d1:	mov    DWORD PTR [ebp-0x4],eax
  4471d4:	call   DWORD PTR ds:0x4642d4
  4471da:	xor    DWORD PTR [ebp-0x4],eax
  4471dd:	call   DWORD PTR ds:0x464324
  4471e3:	xor    DWORD PTR [ebp-0x4],eax
  4471e6:	lea    eax,[ebp-0x14]
  4471e9:	push   eax
  4471ea:	call   DWORD PTR ds:0x46432c
  4471f0:	mov    ecx,DWORD PTR [ebp-0x10]
  4471f3:	xor    ecx,DWORD PTR [ebp-0x14]
  4471f6:	lea    eax,[ebp-0x4]
  4471f9:	xor    ecx,DWORD PTR [ebp-0x4]
  4471fc:	xor    ecx,eax
  4471fe:	cmp    ecx,edi
  447200:	jne    0x447209
  447202:	mov    ecx,0xbb40e64f
  447207:	jmp    0x447219
  447209:	test   esi,ecx
  44720b:	jne    0x447219
  44720d:	mov    eax,ecx
  44720f:	or     eax,0x4711
  447214:	shl    eax,0x10
  447217:	or     ecx,eax
  447219:	mov    DWORD PTR ds:0x448858,ecx
  44721f:	not    ecx
  447221:	mov    DWORD PTR ds:0x44885c,ecx
  447227:	pop    edi
  447228:	pop    esi
  447229:	leave  
  44722a:	ret    
  44722b:	xor    eax,eax
  44722d:	ret    
  44722e:	cmp    DWORD PTR ds:0x463b98,0x0
  447235:	je     0x44723a
  447237:	xor    eax,eax
  447239:	ret    
  44723a:	push   esi
  44723b:	push   0x4
  44723d:	push   0x20
  44723f:	call   DWORD PTR ds:0x46446c
  447245:	pop    ecx
  447246:	pop    ecx
  447247:	mov    esi,eax
  447249:	push   esi
  44724a:	call   DWORD PTR ds:0x464338
  447250:	mov    ds:0x463b98,eax
  447255:	mov    ds:0x463b94,eax
  44725a:	test   esi,esi
  44725c:	jne    0x447263
  44725e:	push   0x18
  447260:	pop    eax
  447261:	pop    esi
  447262:	ret    
  447263:	and    DWORD PTR [esi],0x0
  447266:	xor    eax,eax
  447268:	pop    esi
  447269:	ret    
  44726a:	push   0x14
  44726c:	push   0x447698
  447271:	call   0x4473a0
  447276:	push   DWORD PTR ds:0x463b98
  44727c:	mov    esi,DWORD PTR ds:0x46433c
  447282:	call   esi
  447284:	mov    DWORD PTR [ebp-0x1c],eax
  447287:	cmp    eax,0xffffffff
  44728a:	jne    0x447298
  44728c:	push   DWORD PTR [ebp+0x8]
  44728f:	call   DWORD PTR ds:0x464474
  447295:	pop    ecx
  447296:	jmp    0x4472fd
  447298:	push   0x8
  44729a:	call   0x44743a
  44729f:	pop    ecx
  4472a0:	and    DWORD PTR [ebp-0x4],0x0
  4472a4:	push   DWORD PTR ds:0x463b98
  4472aa:	call   esi
  4472ac:	mov    DWORD PTR [ebp-0x1c],eax
  4472af:	push   DWORD PTR ds:0x463b94
  4472b5:	call   esi
  4472b7:	mov    DWORD PTR [ebp-0x20],eax
  4472ba:	lea    eax,[ebp-0x20]
  4472bd:	push   eax
  4472be:	lea    eax,[ebp-0x1c]
  4472c1:	push   eax
  4472c2:	push   DWORD PTR [ebp+0x8]
  4472c5:	mov    esi,DWORD PTR ds:0x464338
  4472cb:	call   esi
  4472cd:	push   eax
  4472ce:	call   0x447446
  4472d3:	add    esp,0xc
  4472d6:	mov    edi,eax
  4472d8:	mov    DWORD PTR [ebp-0x24],edi
  4472db:	push   DWORD PTR [ebp-0x1c]
  4472de:	call   esi
  4472e0:	mov    ds:0x463b98,eax
  4472e5:	push   DWORD PTR [ebp-0x20]
  4472e8:	call   esi
  4472ea:	mov    ds:0x463b94,eax
  4472ef:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4472f6:	call   0x447306
  4472fb:	mov    eax,edi
  4472fd:	call   0x4473e5
  447302:	ret    
  447303:	mov    edi,DWORD PTR [ebp-0x24]
  447306:	push   0x8
  447308:	call   0x447440
  44730d:	pop    ecx
  44730e:	ret    
  44730f:	push   ebp
  447310:	mov    ebp,esp
  447312:	push   DWORD PTR [ebp+0x8]
  447315:	call   0x44726a
  44731a:	neg    eax
  44731c:	sbb    eax,eax
  44731e:	neg    eax
  447320:	pop    ecx
  447321:	dec    eax
  447322:	pop    ebp
  447323:	ret    
  447324:	push   esi
  447325:	push   edi
  447326:	mov    esi,0x41fec8
  44732b:	mov    edi,0x41fec8
  447330:	jmp    0x44733d
  447332:	mov    eax,DWORD PTR [esi]
  447334:	test   eax,eax
  447336:	je     0x44733a
  447338:	call   eax
  44733a:	add    esi,0x4
  44733d:	cmp    esi,edi
  44733f:	jb     0x447332
  447341:	pop    edi
  447342:	pop    esi
  447343:	ret    
  447344:	push   esi
  447345:	push   edi
  447346:	mov    esi,0x41fed0
  44734b:	mov    edi,0x41fed0
  447350:	jmp    0x44735d
  447352:	mov    eax,DWORD PTR [esi]
  447354:	test   eax,eax
  447356:	je     0x44735a
  447358:	call   eax
  44735a:	add    esi,0x4
  44735d:	cmp    esi,edi
  44735f:	jb     0x447352
  447361:	pop    edi
  447362:	pop    esi
  447363:	ret    
  447364:	push   esi
  447365:	push   0x30000
  44736a:	push   0x10000
  44736f:	xor    esi,esi
  447371:	push   esi
  447372:	call   0x447452
  447377:	add    esp,0xc
  44737a:	test   eax,eax
  44737c:	jne    0x447380
  44737e:	pop    esi
  44737f:	ret    
  447380:	push   esi
  447381:	push   esi
  447382:	push   esi
  447383:	push   esi
  447384:	push   esi
  447385:	call   0x44744c
  44738a:	int3   
  44738b:	int3   
  44738c:	jmp    DWORD PTR ds:0x46443c
  447392:	jmp    DWORD PTR ds:0x464440
  447398:	int3   
  447399:	int3   
  44739a:	int3   
  44739b:	int3   
  44739c:	int3   
  44739d:	int3   
  44739e:	int3   
  44739f:	int3   
  4473a0:	push   0x4473f9
  4473a5:	push   DWORD PTR fs:0x0
  4473ac:	mov    eax,DWORD PTR [esp+0x10]
  4473b0:	mov    DWORD PTR [esp+0x10],ebp
  4473b4:	lea    ebp,[esp+0x10]
  4473b8:	sub    esp,eax
  4473ba:	push   ebx
  4473bb:	push   esi
  4473bc:	push   edi
  4473bd:	mov    eax,ds:0x448858
  4473c2:	xor    DWORD PTR [ebp-0x4],eax
  4473c5:	xor    eax,ebp
  4473c7:	push   eax
  4473c8:	mov    DWORD PTR [ebp-0x18],esp
  4473cb:	push   DWORD PTR [ebp-0x8]
  4473ce:	mov    eax,DWORD PTR [ebp-0x4]
  4473d1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4473d8:	mov    DWORD PTR [ebp-0x8],eax
  4473db:	lea    eax,[ebp-0x10]
  4473de:	mov    fs:0x0,eax
  4473e4:	ret    
  4473e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4473e8:	mov    DWORD PTR fs:0x0,ecx
  4473ef:	pop    ecx
  4473f0:	pop    edi
  4473f1:	pop    edi
  4473f2:	pop    esi
  4473f3:	pop    ebx
  4473f4:	mov    esp,ebp
  4473f6:	pop    ebp
  4473f7:	push   ecx
  4473f8:	ret    
  4473f9:	push   ebp
  4473fa:	mov    ebp,esp
  4473fc:	push   DWORD PTR [ebp+0x14]
  4473ff:	push   DWORD PTR [ebp+0x10]
  447402:	push   DWORD PTR [ebp+0xc]
  447405:	push   DWORD PTR [ebp+0x8]
  447408:	push   0x446dc7
  44740d:	push   0x448858
  447412:	call   0x447458
  447417:	add    esp,0x18
  44741a:	pop    ebp
  44741b:	ret    
  44741c:	jmp    DWORD PTR ds:0x464450
  447422:	jmp    DWORD PTR ds:0x464454
  447428:	jmp    DWORD PTR ds:0x464458
  44742e:	jmp    DWORD PTR ds:0x46445c
  447434:	jmp    DWORD PTR ds:0x464460
  44743a:	jmp    DWORD PTR ds:0x464464
  447440:	jmp    DWORD PTR ds:0x464468
  447446:	jmp    DWORD PTR ds:0x464470
  44744c:	jmp    DWORD PTR ds:0x464478
  447452:	jmp    DWORD PTR ds:0x46447c
  447458:	jmp    DWORD PTR ds:0x464480
  44745e:	jmp    DWORD PTR ds:0x464330
  447464:	int3   
  447465:	int3   
  447466:	int3   
  447467:	int3   
  447468:	int3   
  447469:	int3   
  44746a:	int3   
  44746b:	int3   
  44746c:	int3   
  44746d:	int3   
  44746e:	int3   
  44746f:	int3   
  447470:	push   0x4473f9
  447475:	push   DWORD PTR fs:0x0
  44747c:	mov    eax,DWORD PTR [esp+0x10]
  447480:	mov    DWORD PTR [esp+0x10],ebp
  447484:	lea    ebp,[esp+0x10]
  447488:	sub    esp,eax
  44748a:	push   ebx
  44748b:	push   esi
  44748c:	push   edi
  44748d:	mov    eax,ds:0x448858
  447492:	xor    DWORD PTR [ebp-0x4],eax
  447495:	xor    eax,ebp
  447497:	mov    DWORD PTR [ebp-0x1c],eax
  44749a:	push   eax
  44749b:	mov    DWORD PTR [ebp-0x18],esp
  44749e:	push   DWORD PTR [ebp-0x8]
  4474a1:	mov    eax,DWORD PTR [ebp-0x4]
  4474a4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4474ab:	mov    DWORD PTR [ebp-0x8],eax
  4474ae:	lea    eax,[ebp-0x10]
  4474b1:	mov    fs:0x0,eax
  4474b7:	ret    
  4474b8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4474bb:	xor    ecx,ebp
  4474bd:	call   0x446dc7
  4474c2:	jmp    0x4473e5
  4474c7:	int3   
  4474c8:	int3   
  4474c9:	int3   
  4474ca:	int3   
  4474cb:	int3   
  4474cc:	int3   
  4474cd:	int3   
  4474ce:	int3   
  4474cf:	int3   
  4474d0:	mov    eax,DWORD PTR [esp+0x8]
  4474d4:	mov    ecx,DWORD PTR [esp+0x10]
  4474d8:	or     ecx,eax
  4474da:	mov    ecx,DWORD PTR [esp+0xc]
  4474de:	jne    0x4474e9
  4474e0:	mov    eax,DWORD PTR [esp+0x4]
  4474e4:	mul    ecx
  4474e6:	ret    0x10
  4474e9:	push   ebx
  4474ea:	mul    ecx
  4474ec:	mov    ebx,eax
  4474ee:	mov    eax,DWORD PTR [esp+0x8]
  4474f2:	mul    DWORD PTR [esp+0x14]
  4474f6:	add    ebx,eax
  4474f8:	mov    eax,DWORD PTR [esp+0x8]
  4474fc:	mul    ecx
  4474fe:	add    edx,ebx
  447500:	pop    ebx
  447501:	ret    0x10
  447504:	int3   
  447505:	int3   
  447506:	int3   
  447507:	int3   
  447508:	int3   
  447509:	int3   
  44750a:	int3   
  44750b:	int3   
  44750c:	int3   
  44750d:	int3   
  44750e:	int3   
  44750f:	int3   
  447510:	cmp    cl,0x40
  447513:	jae    0x44752a
  447515:	cmp    cl,0x20
  447518:	jae    0x447520
  44751a:	shld   edx,eax,cl
  44751d:	shl    eax,cl
  44751f:	ret    
  447520:	mov    edx,eax
  447522:	xor    eax,eax
  447524:	and    cl,0x1f
  447527:	shl    edx,cl
  447529:	ret    
  44752a:	xor    eax,eax
  44752c:	xor    edx,edx
  44752e:	ret    
  44752f:	int3   
  447530:	push   ebx
  447531:	push   esi
  447532:	mov    eax,DWORD PTR [esp+0x18]
  447536:	or     eax,eax
  447538:	jne    0x447552
  44753a:	mov    ecx,DWORD PTR [esp+0x14]
  44753e:	mov    eax,DWORD PTR [esp+0x10]
  447542:	xor    edx,edx
  447544:	div    ecx
  447546:	mov    ebx,eax
  447548:	mov    eax,DWORD PTR [esp+0xc]
  44754c:	div    ecx
  44754e:	mov    edx,ebx
  447550:	jmp    0x447593
  447552:	mov    ecx,eax
  447554:	mov    ebx,DWORD PTR [esp+0x14]
  447558:	mov    edx,DWORD PTR [esp+0x10]
  44755c:	mov    eax,DWORD PTR [esp+0xc]
  447560:	shr    ecx,1
  447562:	rcr    ebx,1
  447564:	shr    edx,1
  447566:	rcr    eax,1
  447568:	or     ecx,ecx
  44756a:	jne    0x447560
  44756c:	div    ebx
  44756e:	mov    esi,eax
  447570:	mul    DWORD PTR [esp+0x18]
  447574:	mov    ecx,eax
  447576:	mov    eax,DWORD PTR [esp+0x14]
  44757a:	mul    esi
  44757c:	add    edx,ecx
  44757e:	jb     0x44758e
  447580:	cmp    edx,DWORD PTR [esp+0x10]
  447584:	ja     0x44758e
  447586:	jb     0x44758f
  447588:	cmp    eax,DWORD PTR [esp+0xc]
  44758c:	jbe    0x44758f
  44758e:	dec    esi
  44758f:	xor    edx,edx
  447591:	mov    eax,esi
  447593:	pop    esi
  447594:	pop    ebx
  447595:	ret    0x10
  447598:	int3   
  447599:	int3   
  44759a:	int3   
  44759b:	int3   
  44759c:	int3   
  44759d:	int3   
  44759e:	int3   
  44759f:	int3   
  4475a0:	push   ebx
  4475a1:	mov    eax,DWORD PTR [esp+0x14]
  4475a5:	or     eax,eax
  4475a7:	jne    0x4475c1
  4475a9:	mov    ecx,DWORD PTR [esp+0x10]
  4475ad:	mov    eax,DWORD PTR [esp+0xc]
  4475b1:	xor    edx,edx
  4475b3:	div    ecx
  4475b5:	mov    eax,DWORD PTR [esp+0x8]
  4475b9:	div    ecx
  4475bb:	mov    eax,edx
  4475bd:	xor    edx,edx
  4475bf:	jmp    0x447611
  4475c1:	mov    ecx,eax
  4475c3:	mov    ebx,DWORD PTR [esp+0x10]
  4475c7:	mov    edx,DWORD PTR [esp+0xc]
  4475cb:	mov    eax,DWORD PTR [esp+0x8]
  4475cf:	shr    ecx,1
  4475d1:	rcr    ebx,1
  4475d3:	shr    edx,1
  4475d5:	rcr    eax,1
  4475d7:	or     ecx,ecx
  4475d9:	jne    0x4475cf
  4475db:	div    ebx
  4475dd:	mov    ecx,eax
  4475df:	mul    DWORD PTR [esp+0x14]
  4475e3:	xchg   ecx,eax
  4475e4:	mul    DWORD PTR [esp+0x10]
  4475e8:	add    edx,ecx
  4475ea:	jb     0x4475fa
  4475ec:	cmp    edx,DWORD PTR [esp+0xc]
  4475f0:	ja     0x4475fa
  4475f2:	jb     0x447602
  4475f4:	cmp    eax,DWORD PTR [esp+0x8]
  4475f8:	jbe    0x447602
  4475fa:	sub    eax,DWORD PTR [esp+0x10]
  4475fe:	sbb    edx,DWORD PTR [esp+0x14]
  447602:	sub    eax,DWORD PTR [esp+0x8]
  447606:	sbb    edx,DWORD PTR [esp+0xc]
  44760a:	neg    edx
  44760c:	neg    eax
  44760e:	sbb    edx,0x0
  447611:	pop    ebx
  447612:	ret    0x10
  447615:	int3   
  447616:	int3   
  447617:	int3   
  447618:	int3   
  447619:	int3   
  44761a:	int3   
  44761b:	int3   
  44761c:	int3   
  44761d:	int3   
  44761e:	int3   
  44761f:	int3   
  447620:	cmp    cl,0x40
  447623:	jae    0x44763a
  447625:	cmp    cl,0x20
  447628:	jae    0x447630
  44762a:	shrd   eax,edx,cl
  44762d:	shr    edx,cl
  44762f:	ret    
  447630:	mov    eax,edx
  447632:	xor    edx,edx
  447634:	and    cl,0x1f
  447637:	shr    eax,cl
  447639:	ret    
  44763a:	xor    eax,eax
  44763c:	xor    edx,edx
  44763e:	ret    
  44763f:	int3   
  447640:	jmp    DWORD PTR ds:0x4644a0
  447646:	jmp    DWORD PTR ds:0x4644a4
  44764c:	jmp    DWORD PTR ds:0x4644a8
  447652:	int3   
  447653:	int3   
  447654:	int3   
  447655:	int3   
  447656:	int3   
  447657:	int3   
  447658:	(bad)  
  447659:	(bad)  
  44765a:	(bad)  
  44765b:	inc    DWORD PTR [eax]
  44765d:	add    BYTE PTR [eax],al
  44765f:	add    ah,dl
  447661:	(bad)  
  447662:	(bad)  
  447663:	inc    DWORD PTR [eax]
  447665:	add    BYTE PTR [eax],al
  447667:	add    dh,bh
  447669:	(bad)  
  44766a:	(bad)  
  44766b:	jmp    FWORD PTR [ebp+0x6d]
  44766e:	inc    esp
  44766f:	add    BYTE PTR [ecx+0x446d],al
  447675:	add    BYTE PTR [eax],al
  447677:	add    dh,bh
  447679:	(bad)  
  44767a:	(bad)  
  44767b:	inc    DWORD PTR [eax]
  44767d:	add    BYTE PTR [eax],al
  44767f:	add    al,bl
  447681:	(bad)  
  447682:	(bad)  
  447683:	inc    DWORD PTR [eax]
  447685:	add    BYTE PTR [eax],al
  447687:	add    dh,bh
  447689:	(bad)  
  44768a:	(bad)  
  44768b:	jmp    FWORD PTR [ecx]
  44768d:	jno    0x4476d3
  44768f:	add    BYTE PTR [ecx+esi*2],bh
  447692:	inc    esp
  447693:	add    BYTE PTR [eax],al
  447695:	add    BYTE PTR [eax],al
  447697:	add    dh,bh
  447699:	(bad)  
  44769a:	(bad)  
  44769b:	inc    DWORD PTR [eax]
  44769d:	add    BYTE PTR [eax],al
  44769f:	add    ah,cl
  4476a1:	(bad)  
  4476a2:	(bad)  
  4476a3:	inc    DWORD PTR [eax]
  4476a5:	add    BYTE PTR [eax],al
  4476a7:	add    dh,bh
  4476a9:	(bad)  
  4476aa:	(bad)  
  4476ab:	inc    DWORD PTR [eax]
  4476ad:	add    BYTE PTR [eax],al
  4476af:	add    BYTE PTR [ebx],al
  4476b1:	jae    0x4476f7
  4476b3:	add    BYTE PTR [eax],al
  4476b5:	add    BYTE PTR [eax],al
  4476b7:	add    ah,ah
  4476b9:	(bad)  
  4476ba:	(bad)  
  4476bb:	inc    DWORD PTR [eax]
  4476bd:	add    BYTE PTR [eax],al
  4476bf:	add    BYTE PTR [edx+edi*8-0x1],dl
  4476c3:	inc    DWORD PTR [eax]
  4476c5:	add    BYTE PTR [eax],al
  4476c7:	add    dh,bh
  4476c9:	(bad)  
  4476ca:	(bad)  
  4476cb:	call   DWORD PTR [edx]
  4476cd:	stos   BYTE PTR es:[edi],al
  4476ce:	inc    edx
  4476cf:	.byte 0x0
  4476d0:	.byte 0x2d
  4476d1:	stos   BYTE PTR es:[edi],al
  4476d2:	inc    edx
	...
