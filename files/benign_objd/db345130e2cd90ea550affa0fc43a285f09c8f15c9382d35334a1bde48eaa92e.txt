
db345130e2cd90ea550affa0fc43a285f09c8f15c9382d35334a1bde48eaa92e.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rcx
   140001005:	mov    QWORD PTR [rsp+0x10],rdx
   14000100a:	mov    QWORD PTR [rsp+0x18],r8
   14000100f:	mov    QWORD PTR [rsp+0x20],r9
   140001014:	sub    rsp,0x28
   140001018:	mov    rdx,rcx
   14000101b:	lea    r8,[rsp+0x38]
   140001020:	xor    ecx,ecx
   140001022:	call   0x140002990
   140001027:	mov    rcx,rax
   14000102a:	call   QWORD PTR [rip+0x3c318]        # 0x14003d348
   140001030:	call   0x14002abd0
   140001035:	lea    rcx,[rax+0x60]
   140001039:	call   0x14002ab80
   14000103e:	add    rsp,0x28
   140001042:	ret    
   140001043:	int3   
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	mov    QWORD PTR [rsp+0x8],rcx
   140001055:	mov    QWORD PTR [rsp+0x10],rdx
   14000105a:	mov    QWORD PTR [rsp+0x18],r8
   14000105f:	mov    QWORD PTR [rsp+0x20],r9
   140001064:	sub    rsp,0x28
   140001068:	mov    r8,rcx
   14000106b:	lea    r9,[rsp+0x38]
   140001070:	lea    rcx,[rip+0x66e29]        # 0x140067ea0
   140001077:	mov    edx,0x400
   14000107c:	call   0x1400027c0
   140001081:	call   0x14002abd0
   140001086:	lea    rdx,[rip+0x66e13]        # 0x140067ea0
   14000108d:	lea    rcx,[rax+0x60]
   140001091:	call   0x14002ae98
   140001096:	call   0x14002adf4
   14000109b:	add    rsp,0x28
   14000109f:	ret    
   1400010a0:	cmp    rcx,0xffffffff80000000
   1400010a7:	jne    0x1400010b1
   1400010a9:	lea    rax,[rip+0x3c408]        # 0x14003d4b8
   1400010b0:	ret    
   1400010b1:	cmp    rcx,0xffffffff80000005
   1400010b8:	jne    0x1400010c2
   1400010ba:	lea    rax,[rip+0x3c3df]        # 0x14003d4a0
   1400010c1:	ret    
   1400010c2:	cmp    rcx,0xffffffff80000001
   1400010c9:	jne    0x1400010d3
   1400010cb:	lea    rax,[rip+0x3c3b6]        # 0x14003d488
   1400010d2:	ret    
   1400010d3:	cmp    rcx,0xffffffff80000002
   1400010da:	jne    0x1400010e4
   1400010dc:	lea    rax,[rip+0x3c38d]        # 0x14003d470
   1400010e3:	ret    
   1400010e4:	lea    rax,[rip+0x3c375]        # 0x14003d460
   1400010eb:	cmp    rcx,0xffffffff80000003
   1400010f2:	je     0x1400010fb
   1400010f4:	lea    rax,[rip+0x3c361]        # 0x14003d45c
   1400010fb:	repz ret 
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	mov    QWORD PTR [rsp+0x8],rbx
   140001105:	mov    QWORD PTR [rsp+0x10],rbp
   14000110a:	mov    QWORD PTR [rsp+0x18],rsi
   14000110f:	push   rdi
   140001110:	sub    rsp,0x40
   140001114:	lea    rax,[rsp+0x38]
   140001119:	mov    rbp,r9
   14000111c:	mov    rsi,r8
   14000111f:	mov    r9d,0x20019
   140001125:	xor    r8d,r8d
   140001128:	mov    rbx,rdx
   14000112b:	mov    QWORD PTR [rsp+0x20],rax
   140001130:	mov    rdi,rcx
   140001133:	call   0x140008c20
   140001138:	mov    r9d,eax
   14000113b:	test   eax,eax
   14000113d:	je     0x14000115d
   14000113f:	mov    rcx,rdi
   140001142:	call   0x1400010a0
   140001147:	lea    rcx,[rip+0x3c3aa]        # 0x14003d4f8
   14000114e:	mov    r8,rbx
   140001151:	mov    rdx,rax
   140001154:	call   0x140001000
   140001159:	xor    eax,eax
   14000115b:	jmp    0x1400011be
   14000115d:	mov    rcx,QWORD PTR [rsp+0x38]
   140001162:	lea    rax,[rsp+0x70]
   140001167:	lea    r9,[rsp+0x30]
   14000116c:	mov    QWORD PTR [rsp+0x28],rax
   140001171:	xor    r8d,r8d
   140001174:	mov    rdx,rsi
   140001177:	mov    QWORD PTR [rsp+0x20],rbp
   14000117c:	call   0x140008e80
   140001181:	mov    r11d,eax
   140001184:	test   eax,eax
   140001186:	je     0x1400011ae
   140001188:	mov    rcx,rdi
   14000118b:	call   0x1400010a0
   140001190:	lea    rcx,[rip+0x3c339]        # 0x14003d4d0
   140001197:	mov    r9,rsi
   14000119a:	mov    r8,rbx
   14000119d:	mov    rdx,rax
   1400011a0:	mov    DWORD PTR [rsp+0x20],r11d
   1400011a5:	call   0x140001000
   1400011aa:	xor    eax,eax
   1400011ac:	jmp    0x1400011be
   1400011ae:	mov    rcx,QWORD PTR [rsp+0x38]
   1400011b3:	call   QWORD PTR [rip+0x3be6f]        # 0x14003d028
   1400011b9:	mov    eax,0x1
   1400011be:	mov    rbx,QWORD PTR [rsp+0x50]
   1400011c3:	mov    rbp,QWORD PTR [rsp+0x58]
   1400011c8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400011cd:	add    rsp,0x40
   1400011d1:	pop    rdi
   1400011d2:	ret    
   1400011d3:	int3   
   1400011d4:	int3   
   1400011d5:	int3   
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400011ea:	mov    QWORD PTR [rsp+0x20],rsi
   1400011ef:	push   rdi
   1400011f0:	sub    rsp,0x30
   1400011f4:	xor    ebx,ebx
   1400011f6:	mov    rsi,r8
   1400011f9:	mov    rbp,rdx
   1400011fc:	mov    r10,rcx
   1400011ff:	test   rdx,rdx
   140001202:	je     0x1400012b2
   140001208:	or     rcx,0xffffffffffffffff
   14000120c:	xor    eax,eax
   14000120e:	mov    rdi,rdx
   140001211:	repnz scas al,BYTE PTR es:[rdi]
   140001213:	not    rcx
   140001216:	cmp    rcx,0x1
   14000121a:	je     0x1400012b2
   140001220:	test   r8,r8
   140001223:	je     0x1400012a9
   140001229:	or     rcx,0xffffffffffffffff
   14000122d:	mov    rdi,r8
   140001230:	repnz scas al,BYTE PTR es:[rdi]
   140001232:	not    rcx
   140001235:	cmp    rcx,0x1
   140001239:	je     0x1400012a9
   14000123b:	lea    rax,[rsp+0x48]
   140001240:	mov    r9d,0xf003f
   140001246:	xor    r8d,r8d
   140001249:	mov    rcx,r10
   14000124c:	mov    QWORD PTR [rsp+0x20],rax
   140001251:	call   0x140008c20
   140001256:	test   eax,eax
   140001258:	jne    0x1400012a5
   14000125a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000125f:	mov    rdx,rsi
   140001262:	call   0x140008d60
   140001267:	test   eax,eax
   140001269:	je     0x140001295
   14000126b:	call   QWORD PTR [rip+0x3c0c7]        # 0x14003d338
   140001271:	lea    rcx,[rip+0x3c2f0]        # 0x14003d568
   140001278:	mov    r8,rsi
   14000127b:	mov    r9d,eax
   14000127e:	mov    rdx,rbp
   140001281:	call   0x140001000
   140001286:	mov    rcx,QWORD PTR [rsp+0x48]
   14000128b:	call   QWORD PTR [rip+0x3bd97]        # 0x14003d028
   140001291:	mov    eax,ebx
   140001293:	jmp    0x1400012c0
   140001295:	mov    rcx,QWORD PTR [rsp+0x48]
   14000129a:	mov    ebx,0x1
   14000129f:	call   QWORD PTR [rip+0x3bd83]        # 0x14003d028
   1400012a5:	mov    eax,ebx
   1400012a7:	jmp    0x1400012c0
   1400012a9:	lea    rcx,[rip+0x3c290]        # 0x14003d540
   1400012b0:	jmp    0x1400012b9
   1400012b2:	lea    rcx,[rip+0x3c267]        # 0x14003d520
   1400012b9:	call   0x140001000
   1400012be:	xor    eax,eax
   1400012c0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012c5:	mov    rbp,QWORD PTR [rsp+0x50]
   1400012ca:	mov    rsi,QWORD PTR [rsp+0x58]
   1400012cf:	add    rsp,0x30
   1400012d3:	pop    rdi
   1400012d4:	ret    
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	mov    r11,rsp
   1400012e3:	mov    QWORD PTR [r11+0x8],rbx
   1400012e7:	mov    QWORD PTR [r11+0x10],rbp
   1400012eb:	mov    QWORD PTR [r11+0x18],rsi
   1400012ef:	mov    QWORD PTR [r11+0x20],rdi
   1400012f3:	push   r12
   1400012f5:	sub    rsp,0x60
   1400012f9:	lea    rax,[r11-0x18]
   1400012fd:	xor    ebx,ebx
   1400012ff:	mov    r12d,r9d
   140001302:	mov    QWORD PTR [r11-0x28],rbx
   140001306:	mov    QWORD PTR [r11-0x30],rax
   14000130a:	mov    eax,DWORD PTR [rsp+0xa0]
   140001311:	mov    QWORD PTR [r11-0x38],rbx
   140001315:	mov    rsi,r8
   140001318:	lea    r9,[rip+0x3c13d]        # 0x14003d45c
   14000131f:	xor    r8d,r8d
   140001322:	mov    DWORD PTR [rsp+0x28],0x20006
   14000132a:	mov    rdi,rdx
   14000132d:	mov    DWORD PTR [rsp+0x20],eax
   140001331:	mov    rbp,rcx
   140001334:	call   0x140008c90
   140001339:	test   eax,eax
   14000133b:	jne    0x1400013ae
   14000133d:	mov    eax,DWORD PTR [rsp+0x98]
   140001344:	mov    rcx,QWORD PTR [rsp+0x50]
   140001349:	mov    r9d,r12d
   14000134c:	mov    DWORD PTR [rsp+0x28],eax
   140001350:	mov    rax,QWORD PTR [rsp+0x90]
   140001358:	xor    r8d,r8d
   14000135b:	mov    rdx,rsi
   14000135e:	mov    QWORD PTR [rsp+0x20],rax
   140001363:	call   0x140008db0
   140001368:	mov    r11d,eax
   14000136b:	test   eax,eax
   14000136d:	jne    0x14000137f
   14000136f:	mov    rcx,QWORD PTR [rsp+0x50]
   140001374:	lea    ebx,[rax+0x1]
   140001377:	call   QWORD PTR [rip+0x3bcab]        # 0x14003d028
   14000137d:	jmp    0x1400013c0
   14000137f:	mov    rcx,rbp
   140001382:	call   0x1400010a0
   140001387:	lea    rcx,[rip+0x3c222]        # 0x14003d5b0
   14000138e:	mov    r9,rsi
   140001391:	mov    r8,rdi
   140001394:	mov    rdx,rax
   140001397:	mov    DWORD PTR [rsp+0x20],r11d
   14000139c:	call   0x140001000
   1400013a1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400013a6:	call   QWORD PTR [rip+0x3bc7c]        # 0x14003d028
   1400013ac:	jmp    0x1400013c0
   1400013ae:	lea    rcx,[rip+0x3c1db]        # 0x14003d590
   1400013b5:	mov    r8d,eax
   1400013b8:	mov    rdx,rdi
   1400013bb:	call   0x140001000
   1400013c0:	lea    r11,[rsp+0x60]
   1400013c5:	mov    eax,ebx
   1400013c7:	mov    rbx,QWORD PTR [r11+0x10]
   1400013cb:	mov    rbp,QWORD PTR [r11+0x18]
   1400013cf:	mov    rsi,QWORD PTR [r11+0x20]
   1400013d3:	mov    rdi,QWORD PTR [r11+0x28]
   1400013d7:	mov    rsp,r11
   1400013da:	pop    r12
   1400013dc:	ret    
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	rex push rbx
   1400013e2:	sub    rsp,0x20
   1400013e6:	xor    edx,edx
   1400013e8:	mov    rbx,rcx
   1400013eb:	call   0x1400090f0
   1400013f0:	mov    rdx,rbx
   1400013f3:	cmp    eax,0xffffffff
   1400013f6:	je     0x14000140f
   1400013f8:	lea    rcx,[rip+0x3c201]        # 0x14003d600
   1400013ff:	call   0x140001000
   140001404:	mov    eax,0x1
   140001409:	add    rsp,0x20
   14000140d:	pop    rbx
   14000140e:	ret    
   14000140f:	lea    rcx,[rip+0x3c1c2]        # 0x14003d5d8
   140001416:	call   0x140001000
   14000141b:	xor    eax,eax
   14000141d:	add    rsp,0x20
   140001421:	pop    rbx
   140001422:	ret    
   140001423:	int3   
   140001424:	int3   
   140001425:	int3   
   140001426:	int3   
   140001427:	int3   
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	mov    QWORD PTR [rsp+0x10],rbx
   140001435:	mov    QWORD PTR [rsp+0x18],rsi
   14000143a:	push   rdi
   14000143b:	sub    rsp,0x4a0
   140001442:	mov    rax,QWORD PTR [rip+0x65467]        # 0x1400668b0
   140001449:	xor    rax,rsp
   14000144c:	mov    QWORD PTR [rsp+0x490],rax
   140001454:	mov    rbx,rcx
   140001457:	xor    eax,eax
   140001459:	or     rcx,0xffffffffffffffff
   14000145d:	mov    rdi,rbx
   140001460:	mov    esi,eax
   140001462:	repnz scas al,BYTE PTR es:[rdi]
   140001464:	not    rcx
   140001467:	sub    rcx,0x1
   14000146b:	mov    rdi,rcx
   14000146e:	je     0x1400014db
   140001470:	lea    rcx,[rsp+0x270]
   140001478:	xor    edx,edx
   14000147a:	mov    r8d,0x105
   140001480:	call   0x14002b280
   140001485:	mov    edx,0x5c
   14000148a:	mov    rcx,rbx
   14000148d:	call   0x14002b010
   140001492:	test   rax,rax
   140001495:	je     0x1400014a7
   140001497:	sub    rax,rbx
   14000149a:	cmp    rdi,rax
   14000149d:	jne    0x1400014a7
   14000149f:	dec    rdi
   1400014a2:	mov    esi,0x1
   1400014a7:	lea    rcx,[rsp+0x270]
   1400014af:	mov    r8,rdi
   1400014b2:	mov    rdx,rbx
   1400014b5:	call   0x14002b0d0
   1400014ba:	lea    rdx,[rsp+0x20]
   1400014bf:	lea    rcx,[rsp+0x270]
   1400014c7:	call   0x140009190
   1400014cc:	cmp    rax,0xffffffffffffffff
   1400014d0:	je     0x140001505
   1400014d2:	mov    rcx,rax
   1400014d5:	call   QWORD PTR [rip+0x3be55]        # 0x14003d330
   1400014db:	mov    eax,0x1
   1400014e0:	mov    rcx,QWORD PTR [rsp+0x490]
   1400014e8:	xor    rcx,rsp
   1400014eb:	call   0x14002b250
   1400014f0:	lea    r11,[rsp+0x4a0]
   1400014f8:	mov    rbx,QWORD PTR [r11+0x18]
   1400014fc:	mov    rsi,QWORD PTR [r11+0x20]
   140001500:	mov    rsp,r11
   140001503:	pop    rdi
   140001504:	ret    
   140001505:	lea    rcx,[rsp+0x380]
   14000150d:	xor    edx,edx
   14000150f:	mov    r8d,0x105
   140001515:	call   0x14002b280
   14000151a:	lea    rcx,[rsp+0x270]
   140001522:	mov    edx,0x5c
   140001527:	call   0x14002b010
   14000152c:	test   rax,rax
   14000152f:	je     0x1400014db
   140001531:	lea    rcx,[rsp+0x270]
   140001539:	lea    rdx,[rsp+0x270]
   140001541:	sub    rax,rcx
   140001544:	lea    rcx,[rsp+0x380]
   14000154c:	mov    r8,rax
   14000154f:	call   0x14002b0d0
   140001554:	lea    rcx,[rsp+0x380]
   14000155c:	call   0x140001430
   140001561:	test   eax,eax
   140001563:	je     0x1400015a8
   140001565:	test   esi,esi
   140001567:	je     0x1400014db
   14000156d:	xor    edx,edx
   14000156f:	mov    rcx,rbx
   140001572:	call   0x140009210
   140001577:	test   eax,eax
   140001579:	jne    0x1400014db
   14000157f:	call   QWORD PTR [rip+0x3bdb3]        # 0x14003d338
   140001585:	cmp    eax,0xb7
   14000158a:	je     0x1400014db
   140001590:	call   QWORD PTR [rip+0x3bda2]        # 0x14003d338
   140001596:	lea    rcx,[rip+0x3c073]        # 0x14003d610
   14000159d:	mov    rdx,rbx
   1400015a0:	mov    r8d,eax
   1400015a3:	call   0x140001000
   1400015a8:	xor    eax,eax
   1400015aa:	jmp    0x1400014e0
   1400015af:	int3   
   1400015b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400015ba:	push   rdi
   1400015bb:	sub    rsp,0x20
   1400015bf:	mov    edi,edx
   1400015c1:	mov    rbx,rcx
   1400015c4:	mov    rdx,rcx
   1400015c7:	lea    rcx,[rip+0x3c0aa]        # 0x14003d678
   1400015ce:	mov    esi,r8d
   1400015d1:	call   0x140001000
   1400015d6:	xor    edx,edx
   1400015d8:	mov    rcx,rbx
   1400015db:	call   0x1400090f0
   1400015e0:	mov    rdx,rbx
   1400015e3:	cmp    eax,0xffffffff
   1400015e6:	je     0x14000169c
   1400015ec:	lea    rcx,[rip+0x3c00d]        # 0x14003d600
   1400015f3:	call   0x140001000
   1400015f8:	add    edi,0x1
   1400015fb:	je     0x14000166c
   1400015fd:	nop    DWORD PTR [rax]
   140001600:	mov    edx,0x180
   140001605:	mov    rcx,rbx
   140001608:	dec    edi
   14000160a:	call   0x140009050
   14000160f:	test   eax,eax
   140001611:	jne    0x14000161f
   140001613:	mov    rcx,rbx
   140001616:	call   0x1400091d0
   14000161b:	test   eax,eax
   14000161d:	jne    0x140001648
   14000161f:	call   QWORD PTR [rip+0x3bd13]        # 0x14003d338
   140001625:	lea    rcx,[rip+0x3c034]        # 0x14003d660
   14000162c:	mov    rdx,rbx
   14000162f:	mov    r8d,eax
   140001632:	call   0x140001000
   140001637:	test   edi,edi
   140001639:	je     0x14000166c
   14000163b:	mov    ecx,0x3e8
   140001640:	call   QWORD PTR [rip+0x3bce2]        # 0x14003d328
   140001646:	jmp    0x140001600
   140001648:	lea    rcx,[rip+0x3c001]        # 0x14003d650
   14000164f:	mov    rdx,rbx
   140001652:	call   0x140001000
   140001657:	mov    eax,0x1
   14000165c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001661:	mov    rsi,QWORD PTR [rsp+0x38]
   140001666:	add    rsp,0x20
   14000166a:	pop    rdi
   14000166b:	ret    
   14000166c:	test   esi,esi
   14000166e:	je     0x1400016b7
   140001670:	mov    rcx,rbx
   140001673:	call   0x1400013e0
   140001678:	test   eax,eax
   14000167a:	je     0x1400016b7
   14000167c:	xor    edx,edx
   14000167e:	mov    rcx,rbx
   140001681:	lea    r8d,[rdx+0x4]
   140001685:	call   0x1400092b0
   14000168a:	xor    eax,eax
   14000168c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001691:	mov    rsi,QWORD PTR [rsp+0x38]
   140001696:	add    rsp,0x20
   14000169a:	pop    rdi
   14000169b:	ret    
   14000169c:	lea    rcx,[rip+0x3bf35]        # 0x14003d5d8
   1400016a3:	call   0x140001000
   1400016a8:	lea    rcx,[rip+0x3bf89]        # 0x14003d638
   1400016af:	mov    rdx,rbx
   1400016b2:	call   0x140001000
   1400016b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400016bc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400016c1:	xor    eax,eax
   1400016c3:	add    rsp,0x20
   1400016c7:	pop    rdi
   1400016c8:	ret    
   1400016c9:	int3   
   1400016ca:	int3   
   1400016cb:	int3   
   1400016cc:	int3   
   1400016cd:	int3   
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400016d5:	push   rbp
   1400016d6:	push   rsi
   1400016d7:	push   rdi
   1400016d8:	sub    rsp,0x240
   1400016df:	mov    rax,QWORD PTR [rip+0x651ca]        # 0x1400668b0
   1400016e6:	xor    rax,rsp
   1400016e9:	mov    QWORD PTR [rsp+0x230],rax
   1400016f1:	mov    ebp,r8d
   1400016f4:	mov    rdi,rcx
   1400016f7:	mov    r8,rcx
   1400016fa:	lea    rcx,[rip+0x3bf87]        # 0x14003d688
   140001701:	mov    esi,r9d
   140001704:	mov    rbx,rdx
   140001707:	call   0x140001000
   14000170c:	lea    rcx,[rsp+0x20]
   140001711:	mov    r8d,0x208
   140001717:	mov    rdx,rdi
   14000171a:	call   0x1400028b0
   14000171f:	or     rcx,0xffffffffffffffff
   140001723:	xor    eax,eax
   140001725:	lea    rdi,[rsp+0x20]
   14000172a:	repnz scas al,BYTE PTR es:[rdi]
   14000172c:	not    rcx
   14000172f:	cmp    BYTE PTR [rsp+rcx*1+0x1f],0x5c
   140001734:	je     0x14000174d
   140001736:	lea    rdx,[rip+0x3bf47]        # 0x14003d684
   14000173d:	lea    rcx,[rsp+0x20]
   140001742:	mov    r8d,0x208
   140001748:	call   0x140002910
   14000174d:	lea    rcx,[rsp+0x20]
   140001752:	mov    r8d,0x208
   140001758:	mov    rdx,rbx
   14000175b:	call   0x140002910
   140001760:	lea    rcx,[rsp+0x20]
   140001765:	mov    r8d,esi
   140001768:	mov    edx,ebp
   14000176a:	call   0x1400015b0
   14000176f:	mov    rcx,QWORD PTR [rsp+0x230]
   140001777:	xor    rcx,rsp
   14000177a:	call   0x14002b250
   14000177f:	mov    rbx,QWORD PTR [rsp+0x278]
   140001787:	add    rsp,0x240
   14000178e:	pop    rdi
   14000178f:	pop    rsi
   140001790:	pop    rbp
   140001791:	ret    
   140001792:	int3   
   140001793:	int3   
   140001794:	int3   
   140001795:	int3   
   140001796:	int3   
   140001797:	int3   
   140001798:	int3   
   140001799:	int3   
   14000179a:	int3   
   14000179b:	int3   
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	mov    QWORD PTR [rsp+0x20],rbx
   1400017a5:	push   rdi
   1400017a6:	sub    rsp,0x140
   1400017ad:	mov    rax,QWORD PTR [rip+0x650fc]        # 0x1400668b0
   1400017b4:	xor    rax,rsp
   1400017b7:	mov    QWORD PTR [rsp+0x130],rax
   1400017bf:	mov    rdi,rdx
   1400017c2:	xor    edx,edx
   1400017c4:	mov    rbx,rcx
   1400017c7:	call   0x1400090f0
   1400017cc:	cmp    eax,0xffffffff
   1400017cf:	je     0x1400018ae
   1400017d5:	lea    rcx,[rip+0x3be24]        # 0x14003d600
   1400017dc:	mov    rdx,rbx
   1400017df:	mov    QWORD PTR [rsp+0x160],rsi
   1400017e7:	call   0x140001000
   1400017ec:	mov    edx,0x5c
   1400017f1:	mov    rcx,rdi
   1400017f4:	call   0x14002b010
   1400017f9:	mov    rsi,rax
   1400017fc:	test   rax,rax
   1400017ff:	je     0x140001865
   140001801:	lea    rcx,[rsp+0x20]
   140001806:	xor    edx,edx
   140001808:	mov    r8d,0x105
   14000180e:	call   0x14002b280
   140001813:	sub    rsi,rdi
   140001816:	lea    rcx,[rsp+0x20]
   14000181b:	mov    r8,rsi
   14000181e:	mov    rdx,rdi
   140001821:	call   0x14002b0d0
   140001826:	lea    rcx,[rsp+0x20]
   14000182b:	xor    edx,edx
   14000182d:	call   0x1400090f0
   140001832:	cmp    eax,0xffffffff
   140001835:	je     0x14000184a
   140001837:	lea    rdx,[rsp+0x20]
   14000183c:	lea    rcx,[rip+0x3bdbd]        # 0x14003d600
   140001843:	call   0x140001000
   140001848:	jmp    0x140001865
   14000184a:	lea    rdx,[rsp+0x20]
   14000184f:	lea    rcx,[rip+0x3bd82]        # 0x14003d5d8
   140001856:	call   0x140001000
   14000185b:	lea    rcx,[rsp+0x20]
   140001860:	call   0x140001430
   140001865:	lea    rcx,[rip+0x3be8c]        # 0x14003d6f8
   14000186c:	mov    r8,rdi
   14000186f:	mov    rdx,rbx
   140001872:	call   0x140001000
   140001877:	xor    r8d,r8d
   14000187a:	mov    rdx,rdi
   14000187d:	mov    rcx,rbx
   140001880:	call   0x140009240
   140001885:	mov    rsi,QWORD PTR [rsp+0x160]
   14000188d:	test   eax,eax
   14000188f:	jne    0x1400018a7
   140001891:	call   QWORD PTR [rip+0x3baa1]        # 0x14003d338
   140001897:	lea    rcx,[rip+0x3be2a]        # 0x14003d6c8
   14000189e:	mov    edx,eax
   1400018a0:	call   0x140001000
   1400018a5:	jmp    0x1400018cc
   1400018a7:	mov    eax,0x1
   1400018ac:	jmp    0x1400018ce
   1400018ae:	lea    rcx,[rip+0x3bd23]        # 0x14003d5d8
   1400018b5:	mov    rdx,rbx
   1400018b8:	call   0x140001000
   1400018bd:	lea    rcx,[rip+0x3bddc]        # 0x14003d6a0
   1400018c4:	mov    rdx,rbx
   1400018c7:	call   0x140001000
   1400018cc:	xor    eax,eax
   1400018ce:	mov    rcx,QWORD PTR [rsp+0x130]
   1400018d6:	xor    rcx,rsp
   1400018d9:	call   0x14002b250
   1400018de:	mov    rbx,QWORD PTR [rsp+0x168]
   1400018e6:	add    rsp,0x140
   1400018ed:	pop    rdi
   1400018ee:	ret    
   1400018ef:	int3   
   1400018f0:	rex push rbx
   1400018f2:	push   rbp
   1400018f3:	push   rsi
   1400018f4:	push   rdi
   1400018f5:	sub    rsp,0x458
   1400018fc:	mov    rax,QWORD PTR [rip+0x64fad]        # 0x1400668b0
   140001903:	xor    rax,rsp
   140001906:	mov    QWORD PTR [rsp+0x440],rax
   14000190e:	mov    rsi,rdx
   140001911:	mov    rdx,rcx
   140001914:	mov    rbp,r8
   140001917:	lea    rcx,[rsp+0x230]
   14000191f:	mov    r8d,0x208
   140001925:	mov    rbx,r9
   140001928:	call   0x1400028b0
   14000192d:	or     rcx,0xffffffffffffffff
   140001931:	xor    eax,eax
   140001933:	lea    rdi,[rsp+0x230]
   14000193b:	repnz scas al,BYTE PTR es:[rdi]
   14000193d:	not    rcx
   140001940:	cmp    BYTE PTR [rsp+rcx*1+0x22f],0x5c
   140001948:	je     0x140001964
   14000194a:	lea    rdx,[rip+0x3bd33]        # 0x14003d684
   140001951:	lea    rcx,[rsp+0x230]
   140001959:	mov    r8d,0x208
   14000195f:	call   0x140002910
   140001964:	lea    rcx,[rsp+0x230]
   14000196c:	mov    r8d,0x208
   140001972:	mov    rdx,rsi
   140001975:	call   0x140002910
   14000197a:	lea    rcx,[rsp+0x20]
   14000197f:	mov    r8d,0x208
   140001985:	mov    rdx,rbp
   140001988:	call   0x1400028b0
   14000198d:	or     rcx,0xffffffffffffffff
   140001991:	xor    eax,eax
   140001993:	lea    rdi,[rsp+0x20]
   140001998:	repnz scas al,BYTE PTR es:[rdi]
   14000199a:	not    rcx
   14000199d:	cmp    BYTE PTR [rsp+rcx*1+0x1f],0x5c
   1400019a2:	je     0x1400019bb
   1400019a4:	lea    rdx,[rip+0x3bcd9]        # 0x14003d684
   1400019ab:	lea    rcx,[rsp+0x20]
   1400019b0:	mov    r8d,0x208
   1400019b6:	call   0x140002910
   1400019bb:	mov    r8d,0x208
   1400019c1:	lea    rcx,[rsp+0x20]
   1400019c6:	mov    rdx,rsi
   1400019c9:	test   rbx,rbx
   1400019cc:	je     0x1400019d1
   1400019ce:	mov    rdx,rbx
   1400019d1:	call   0x140002910
   1400019d6:	lea    rdx,[rsp+0x20]
   1400019db:	lea    rcx,[rsp+0x230]
   1400019e3:	call   0x1400017a0
   1400019e8:	mov    rcx,QWORD PTR [rsp+0x440]
   1400019f0:	xor    rcx,rsp
   1400019f3:	call   0x14002b250
   1400019f8:	add    rsp,0x458
   1400019ff:	pop    rdi
   140001a00:	pop    rsi
   140001a01:	pop    rbp
   140001a02:	pop    rbx
   140001a03:	ret    
   140001a04:	int3   
   140001a05:	int3   
   140001a06:	int3   
   140001a07:	int3   
   140001a08:	int3   
   140001a09:	int3   
   140001a0a:	int3   
   140001a0b:	int3   
   140001a0c:	int3   
   140001a0d:	int3   
   140001a0e:	int3   
   140001a0f:	int3   
   140001a10:	mov    QWORD PTR [rsp+0x18],rbx
   140001a15:	push   rdi
   140001a16:	sub    rsp,0x20
   140001a1a:	call   0x14002abd0
   140001a1f:	lea    rdx,[rip+0x3c322]        # 0x14003dd48
   140001a26:	lea    rcx,[rax+0x60]
   140001a2a:	call   0x14002ae98
   140001a2f:	mov    rdi,QWORD PTR [rip+0x545ca]        # 0x140056000
   140001a36:	xor    ebx,ebx
   140001a38:	test   rdi,rdi
   140001a3b:	je     0x140001a90
   140001a3d:	mov    QWORD PTR [rsp+0x30],rbp
   140001a42:	mov    QWORD PTR [rsp+0x38],rsi
   140001a47:	mov    rsi,rbx
   140001a4a:	lea    rbp,[rip+0x545af]        # 0x140056000
   140001a51:	call   0x14002abd0
   140001a56:	mov    r9,QWORD PTR [rsi+rbp*1+0x8]
   140001a5b:	lea    rdx,[rip+0x3c2ce]        # 0x14003dd30
   140001a62:	lea    rcx,[rax+0x60]
   140001a66:	mov    r8,rdi
   140001a69:	call   0x14002ae98
   140001a6e:	inc    rbx
   140001a71:	lea    rax,[rbx+rbx*2]
   140001a75:	lea    rsi,[rax*8+0x0]
   140001a7d:	mov    rdi,QWORD PTR [rsi+rbp*1]
   140001a81:	test   rdi,rdi
   140001a84:	jne    0x140001a51
   140001a86:	mov    rsi,QWORD PTR [rsp+0x38]
   140001a8b:	mov    rbp,QWORD PTR [rsp+0x30]
   140001a90:	call   0x14002abd0
   140001a95:	lea    rdx,[rip+0x3c28c]        # 0x14003dd28
   140001a9c:	lea    rcx,[rax+0x60]
   140001aa0:	mov    rbx,QWORD PTR [rsp+0x40]
   140001aa5:	add    rsp,0x20
   140001aa9:	pop    rdi
   140001aaa:	jmp    0x14002ae98
   140001aaf:	int3   
   140001ab0:	rex push rbx
   140001ab2:	sub    rsp,0x30
   140001ab6:	mov    rbx,rdx
   140001ab9:	mov    DWORD PTR [rsp+0x40],0x0
   140001ac1:	cmp    ecx,0x2
   140001ac4:	je     0x140001adc
   140001ac6:	lea    rcx,[rip+0x3c30b]        # 0x14003ddd8
   140001acd:	call   0x140001000
   140001ad2:	mov    eax,DWORD PTR [rsp+0x40]
   140001ad6:	add    rsp,0x30
   140001ada:	pop    rbx
   140001adb:	ret    
   140001adc:	mov    rdx,QWORD PTR [rdx+0x8]
   140001ae0:	lea    rcx,[rip+0x3c2d9]        # 0x14003ddc0
   140001ae7:	mov    QWORD PTR [rsp+0x48],rdi
   140001aec:	call   0x140001000
   140001af1:	mov    rcx,QWORD PTR [rbx+0x8]
   140001af5:	or     r8d,0xffffffff
   140001af9:	or     rdx,0xffffffffffffffff
   140001afd:	call   0x14000b990
   140001b02:	mov    edx,0x1
   140001b07:	mov    rcx,rax
   140001b0a:	mov    rbx,rax
   140001b0d:	call   0x14000bf50
   140001b12:	lea    r8,[rip+0x3bd17]        # 0x14003d830
   140001b19:	lea    rcx,[rip+0x3c1f8]        # 0x14003dd18
   140001b20:	mov    rdi,rax
   140001b23:	lea    rax,[rsp+0x40]
   140001b28:	mov    r9d,0x2
   140001b2e:	mov    rdx,rdi
   140001b31:	mov    QWORD PTR [rsp+0x20],rax
   140001b36:	call   0x14003b930
   140001b3b:	test   eax,eax
   140001b3d:	jne    0x140001b4d
   140001b3f:	lea    rcx,[rip+0x3c24a]        # 0x14003dd90
   140001b46:	call   0x140001000
   140001b4b:	jmp    0x140001b5d
   140001b4d:	mov    edx,DWORD PTR [rsp+0x40]
   140001b51:	lea    rcx,[rip+0x3c208]        # 0x14003dd60
   140001b58:	call   0x140001000
   140001b5d:	mov    rcx,rdi
   140001b60:	call   0x14002b36c
   140001b65:	mov    rcx,rbx
   140001b68:	call   0x14002b36c
   140001b6d:	mov    rdi,QWORD PTR [rsp+0x48]
   140001b72:	mov    eax,DWORD PTR [rsp+0x40]
   140001b76:	add    rsp,0x30
   140001b7a:	pop    rbx
   140001b7b:	ret    
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	sub    rsp,0x28
   140001b84:	call   0x14002b3f4
   140001b89:	lea    rcx,[rip+0x3c188]        # 0x14003dd18
   140001b90:	mov    rdx,rax
   140001b93:	call   0x14003b936
   140001b98:	test   eax,eax
   140001b9a:	je     0x140001bb1
   140001b9c:	lea    rcx,[rip+0x3c295]        # 0x14003de38
   140001ba3:	xor    edx,edx
   140001ba5:	call   0x140001000
   140001baa:	xor    eax,eax
   140001bac:	add    rsp,0x28
   140001bb0:	ret    
   140001bb1:	lea    rcx,[rip+0x3c240]        # 0x14003ddf8
   140001bb8:	call   0x140001000
   140001bbd:	xor    eax,eax
   140001bbf:	add    rsp,0x28
   140001bc3:	ret    
   140001bc4:	int3   
   140001bc5:	int3   
   140001bc6:	int3   
   140001bc7:	int3   
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	rex push rbp
   140001bd2:	push   rsi
   140001bd3:	sub    rsp,0x78
   140001bd7:	mov    rax,QWORD PTR [rip+0x64cd2]        # 0x1400668b0
   140001bde:	xor    rax,rsp
   140001be1:	mov    QWORD PTR [rsp+0x68],rax
   140001be6:	mov    rbp,rcx
   140001be9:	mov    r9d,0x6
   140001bef:	xor    r8d,r8d
   140001bf2:	xor    ecx,ecx
   140001bf4:	xor    edx,edx
   140001bf6:	call   QWORD PTR [rip+0x3b75c]        # 0x14003d358
   140001bfc:	mov    rsi,rax
   140001bff:	cmp    rax,0xffffffffffffffff
   140001c03:	jne    0x140001c10
   140001c05:	call   QWORD PTR [rip+0x3b72d]        # 0x14003d338
   140001c0b:	jmp    0x140001dd0
   140001c10:	mov    QWORD PTR [rsp+0x90],rbx
   140001c18:	mov    QWORD PTR [rsp+0x98],rdi
   140001c20:	mov    QWORD PTR [rsp+0xa0],r12
   140001c28:	mov    QWORD PTR [rsp+0xa8],r13
   140001c30:	lea    r8,[rsp+0x48]
   140001c35:	mov    QWORD PTR [rsp+0x70],r14
   140001c3a:	xor    r14d,r14d
   140001c3d:	xor    edx,edx
   140001c3f:	mov    rcx,rax
   140001c42:	mov    r12d,r14d
   140001c45:	mov    r13d,r14d
   140001c48:	mov    DWORD PTR [rsp+0x48],0x20
   140001c50:	call   QWORD PTR [rip+0x3b732]        # 0x14003d388
   140001c56:	test   eax,eax
   140001c58:	je     0x140001d98
   140001c5e:	xchg   ax,ax
   140001c60:	lea    rax,[rsp+0x40]
   140001c65:	lea    r9,[rsp+0x44]
   140001c6a:	lea    rdx,[rsp+0x48]
   140001c6f:	mov    QWORD PTR [rsp+0x30],rax
   140001c74:	mov    r8d,0x1
   140001c7a:	mov    rcx,rsi
   140001c7d:	mov    DWORD PTR [rsp+0x28],r14d
   140001c82:	mov    rbx,r14
   140001c85:	mov    DWORD PTR [rsp+0x40],r14d
   140001c8a:	mov    QWORD PTR [rsp+0x20],r14
   140001c8f:	call   QWORD PTR [rip+0x3b6fb]        # 0x14003d390
   140001c95:	test   eax,eax
   140001c97:	jne    0x140001d0e
   140001c99:	nop    DWORD PTR [rax+0x0]
   140001ca0:	call   QWORD PTR [rip+0x3b692]        # 0x14003d338
   140001ca6:	mov    edi,eax
   140001ca8:	cmp    eax,0xd
   140001cab:	je     0x140001d72
   140001cb1:	cmp    eax,0x7a
   140001cb4:	jne    0x140001da0
   140001cba:	test   rbx,rbx
   140001cbd:	je     0x140001cc8
   140001cbf:	mov    rcx,rbx
   140001cc2:	call   QWORD PTR [rip+0x3b650]        # 0x14003d318
   140001cc8:	mov    edx,DWORD PTR [rsp+0x40]
   140001ccc:	mov    ecx,0x40
   140001cd1:	call   QWORD PTR [rip+0x3b649]        # 0x14003d320
   140001cd7:	lea    r9,[rsp+0x44]
   140001cdc:	lea    rdx,[rsp+0x48]
   140001ce1:	mov    rbx,rax
   140001ce4:	lea    rax,[rsp+0x40]
   140001ce9:	mov    r8d,0x1
   140001cef:	mov    QWORD PTR [rsp+0x30],rax
   140001cf4:	mov    eax,DWORD PTR [rsp+0x40]
   140001cf8:	mov    rcx,rsi
   140001cfb:	mov    DWORD PTR [rsp+0x28],eax
   140001cff:	mov    QWORD PTR [rsp+0x20],rbx
   140001d04:	call   QWORD PTR [rip+0x3b686]        # 0x14003d390
   140001d0a:	test   eax,eax
   140001d0c:	je     0x140001ca0
   140001d0e:	mov    r8,rbx
   140001d11:	cmp    BYTE PTR [rbx],r14b
   140001d14:	je     0x140001d64
   140001d16:	mov    r9d,DWORD PTR [rsp+0x40]
   140001d1b:	add    r9,rbx
   140001d1e:	xchg   ax,ax
   140001d20:	cmp    r8,r9
   140001d23:	jae    0x140001d64
   140001d25:	mov    rdi,r8
   140001d28:	mov    rax,rbp
   140001d2b:	sub    rdi,rbp
   140001d2e:	xchg   ax,ax
   140001d30:	movzx  edx,BYTE PTR [rax]
   140001d33:	movzx  ecx,BYTE PTR [rax+rdi*1]
   140001d37:	sub    edx,ecx
   140001d39:	jne    0x140001d42
   140001d3b:	inc    rax
   140001d3e:	test   ecx,ecx
   140001d40:	jne    0x140001d30
   140001d42:	test   edx,edx
   140001d44:	je     0x140001d5e
   140001d46:	or     rcx,0xffffffffffffffff
   140001d4a:	xor    eax,eax
   140001d4c:	mov    rdi,r8
   140001d4f:	repnz scas al,BYTE PTR es:[rdi]
   140001d51:	not    rcx
   140001d54:	add    r8,rcx
   140001d57:	cmp    BYTE PTR [r8],al
   140001d5a:	jne    0x140001d20
   140001d5c:	jmp    0x140001d64
   140001d5e:	mov    r12d,0x1
   140001d64:	mov    rcx,rbx
   140001d67:	call   QWORD PTR [rip+0x3b5ab]        # 0x14003d318
   140001d6d:	test   r12d,r12d
   140001d70:	jne    0x140001d93
   140001d72:	inc    r13d
   140001d75:	lea    r8,[rsp+0x48]
   140001d7a:	mov    rcx,rsi
   140001d7d:	mov    edx,r13d
   140001d80:	call   QWORD PTR [rip+0x3b602]        # 0x14003d388
   140001d86:	test   eax,eax
   140001d88:	jne    0x140001c60
   140001d8e:	test   r12d,r12d
   140001d91:	je     0x140001d98
   140001d93:	mov    edi,r14d
   140001d96:	jmp    0x140001da0
   140001d98:	call   QWORD PTR [rip+0x3b59a]        # 0x14003d338
   140001d9e:	mov    edi,eax
   140001da0:	mov    rcx,rsi
   140001da3:	call   QWORD PTR [rip+0x3b5ef]        # 0x14003d398
   140001da9:	mov    r14,QWORD PTR [rsp+0x70]
   140001dae:	mov    r13,QWORD PTR [rsp+0xa8]
   140001db6:	mov    r12,QWORD PTR [rsp+0xa0]
   140001dbe:	mov    rbx,QWORD PTR [rsp+0x90]
   140001dc6:	mov    eax,edi
   140001dc8:	mov    rdi,QWORD PTR [rsp+0x98]
   140001dd0:	mov    rcx,QWORD PTR [rsp+0x68]
   140001dd5:	xor    rcx,rsp
   140001dd8:	call   0x14002b250
   140001ddd:	add    rsp,0x78
   140001de1:	pop    rsi
   140001de2:	pop    rbp
   140001de3:	ret    
   140001de4:	int3   
   140001de5:	int3   
   140001de6:	int3   
   140001de7:	int3   
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	rex push rbx
   140001df2:	push   rbp
   140001df3:	push   rsi
   140001df4:	push   rdi
   140001df5:	push   r12
   140001df7:	push   r13
   140001df9:	push   r14
   140001dfb:	push   r15
   140001dfd:	sub    rsp,0xc8
   140001e04:	mov    rax,QWORD PTR [rip+0x64aa5]        # 0x1400668b0
   140001e0b:	xor    rax,rsp
   140001e0e:	mov    QWORD PTR [rsp+0xb0],rax
   140001e16:	mov    r15,QWORD PTR [rsp+0x130]
   140001e1e:	xor    edi,edi
   140001e20:	mov    rbx,rdx
   140001e23:	mov    r13,rcx
   140001e26:	lea    edx,[rdi+0x1]
   140001e29:	mov    rcx,r8
   140001e2c:	mov    r14d,r9d
   140001e2f:	mov    rbp,rdi
   140001e32:	call   0x14000bf50
   140001e37:	lea    r9d,[rdi+0x8]
   140001e3b:	lea    r8,[rsp+0x70]
   140001e40:	lea    rdx,[rsp+0x40]
   140001e45:	mov    rcx,rax
   140001e48:	mov    r12,rax
   140001e4b:	mov    QWORD PTR [rsp+0x20],rdi
   140001e50:	call   QWORD PTR [rip+0x3b50a]        # 0x14003d360
   140001e56:	test   eax,eax
   140001e58:	je     0x140001f5c
   140001e5e:	lea    r8d,[rdi+0x1]
   140001e62:	lea    rcx,[rsp+0x70]
   140001e67:	or     rdx,0xffffffffffffffff
   140001e6b:	call   0x14000b990
   140001e70:	lea    rcx,[rsp+0x40]
   140001e75:	xor    edx,edx
   140001e77:	mov    rbp,rax
   140001e7a:	call   QWORD PTR [rip+0x3b4e8]        # 0x14003d368
   140001e80:	mov    rsi,rax
   140001e83:	cmp    rax,0xffffffffffffffff
   140001e87:	je     0x140001f5c
   140001e8d:	lea    rax,[rsp+0x50]
   140001e92:	lea    r8,[rsp+0x40]
   140001e97:	lea    rdx,[rsp+0x70]
   140001e9c:	mov    QWORD PTR [rsp+0x30],rax
   140001ea1:	xor    r9d,r9d
   140001ea4:	mov    rcx,rsi
   140001ea7:	mov    DWORD PTR [rsp+0x28],0x1
   140001eaf:	mov    QWORD PTR [rsp+0x20],rdi
   140001eb4:	mov    DWORD PTR [rsp+0x50],0x20
   140001ebc:	call   QWORD PTR [rip+0x3b4ae]        # 0x14003d370
   140001ec2:	test   eax,eax
   140001ec4:	je     0x140001f53
   140001eca:	or     rcx,0xffffffffffffffff
   140001ece:	xor    eax,eax
   140001ed0:	mov    rdi,rbx
   140001ed3:	repnz scas al,BYTE PTR es:[rdi]
   140001ed5:	lea    rdx,[rsp+0x50]
   140001eda:	lea    r8d,[rax+0x1]
   140001ede:	not    rcx
   140001ee1:	mov    r9,rbx
   140001ee4:	inc    ecx
   140001ee6:	mov    DWORD PTR [rsp+0x20],ecx
   140001eea:	mov    rcx,rsi
   140001eed:	call   QWORD PTR [rip+0x3b485]        # 0x14003d378
   140001ef3:	test   eax,eax
   140001ef5:	je     0x140001f53
   140001ef7:	lea    r8,[rsp+0x50]
   140001efc:	mov    rdx,rsi
   140001eff:	mov    ecx,0x19
   140001f04:	call   QWORD PTR [rip+0x3b476]        # 0x14003d380
   140001f0a:	test   eax,eax
   140001f0c:	je     0x140001f53
   140001f0e:	mov    edx,0x1
   140001f13:	mov    rcx,rbx
   140001f16:	call   0x14000bf50
   140001f1b:	mov    r9d,r14d
   140001f1e:	mov    r8,r12
   140001f21:	mov    rcx,r13
   140001f24:	mov    rdx,rax
   140001f27:	mov    QWORD PTR [rsp+0x20],r15
   140001f2c:	mov    rbx,rax
   140001f2f:	call   0x14003b92a
   140001f34:	mov    rcx,rbx
   140001f37:	mov    edi,eax
   140001f39:	call   0x14002b36c
   140001f3e:	test   edi,edi
   140001f40:	jne    0x140001f96
   140001f42:	lea    r8,[rsp+0x50]
   140001f47:	lea    ecx,[rdi+0x5]
   140001f4a:	mov    rdx,rsi
   140001f4d:	call   QWORD PTR [rip+0x3b42d]        # 0x14003d380
   140001f53:	mov    rcx,rsi
   140001f56:	call   QWORD PTR [rip+0x3b43c]        # 0x14003d398
   140001f5c:	mov    rcx,r12
   140001f5f:	call   0x14002b36c
   140001f64:	mov    rcx,rbp
   140001f67:	call   0x14002b36c
   140001f6c:	call   QWORD PTR [rip+0x3b3c6]        # 0x14003d338
   140001f72:	mov    rcx,QWORD PTR [rsp+0xb0]
   140001f7a:	xor    rcx,rsp
   140001f7d:	call   0x14002b250
   140001f82:	add    rsp,0xc8
   140001f89:	pop    r15
   140001f8b:	pop    r14
   140001f8d:	pop    r13
   140001f8f:	pop    r12
   140001f91:	pop    rdi
   140001f92:	pop    rsi
   140001f93:	pop    rbp
   140001f94:	pop    rbx
   140001f95:	ret    
   140001f96:	mov    rcx,rsi
   140001f99:	call   QWORD PTR [rip+0x3b3f9]        # 0x14003d398
   140001f9f:	mov    rcx,r12
   140001fa2:	call   0x14002b36c
   140001fa7:	mov    rcx,rbp
   140001faa:	call   0x14002b36c
   140001faf:	xor    eax,eax
   140001fb1:	jmp    0x140001f72
   140001fb3:	int3   
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    QWORD PTR [rsp+0x10],rbx
   140001fc5:	push   rdi
   140001fc6:	sub    rsp,0x20
   140001fca:	mov    ebx,ecx
   140001fcc:	lea    rcx,[rip+0x3beb5]        # 0x14003de88
   140001fd3:	mov    rdi,rdx
   140001fd6:	call   0x140001000
   140001fdb:	cmp    ebx,0x1
   140001fde:	jg     0x140002001
   140001fe0:	lea    rcx,[rip+0x3be89]        # 0x14003de70
   140001fe7:	call   0x140001000
   140001fec:	call   0x140001a10
   140001ff1:	mov    eax,0x1
   140001ff6:	mov    rbx,QWORD PTR [rsp+0x38]
   140001ffb:	add    rsp,0x20
   140001fff:	pop    rdi
   140002000:	ret    
   140002001:	mov    rax,QWORD PTR [rip+0x53ff8]        # 0x140056000
   140002008:	xor    r10d,r10d
   14000200b:	mov    QWORD PTR [rsp+0x30],rsi
   140002010:	mov    r9,r10
   140002013:	test   rax,rax
   140002016:	je     0x14000206a
   140002018:	mov    r11,QWORD PTR [rdi+0x8]
   14000201c:	lea    rsi,[rip+0x53fdd]        # 0x140056000
   140002023:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002030:	mov    r8,r11
   140002033:	sub    r8,rax
   140002036:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002040:	movzx  edx,BYTE PTR [rax]
   140002043:	movzx  ecx,BYTE PTR [rax+r8*1]
   140002048:	sub    edx,ecx
   14000204a:	jne    0x140002053
   14000204c:	inc    rax
   14000204f:	test   ecx,ecx
   140002051:	jne    0x140002040
   140002053:	test   edx,edx
   140002055:	je     0x140002084
   140002057:	inc    r9
   14000205a:	inc    r10d
   14000205d:	lea    rax,[r9+r9*2]
   140002061:	mov    rax,QWORD PTR [rsi+rax*8]
   140002065:	test   rax,rax
   140002068:	jne    0x140002030
   14000206a:	call   0x140001a10
   14000206f:	mov    rsi,QWORD PTR [rsp+0x30]
   140002074:	mov    eax,0x1
   140002079:	mov    rbx,QWORD PTR [rsp+0x38]
   14000207e:	add    rsp,0x20
   140002082:	pop    rdi
   140002083:	ret    
   140002084:	movsxd rax,r10d
   140002087:	lea    rdx,[rdi+0x8]
   14000208b:	lea    ecx,[rbx-0x1]
   14000208e:	lea    r8,[rax+rax*2]
   140002092:	mov    rax,QWORD PTR [rsi+r8*8+0x10]
   140002097:	mov    rsi,QWORD PTR [rsp+0x30]
   14000209c:	mov    rbx,QWORD PTR [rsp+0x38]
   1400020a1:	add    rsp,0x20
   1400020a5:	pop    rdi
   1400020a6:	rex.W jmp rax
   1400020a9:	int3   
   1400020aa:	int3   
   1400020ab:	int3   
   1400020ac:	int3   
   1400020ad:	int3   
   1400020ae:	int3   
   1400020af:	int3   
   1400020b0:	rex push rbx
   1400020b2:	push   r12
   1400020b4:	sub    rsp,0x48
   1400020b8:	xor    r12d,r12d
   1400020bb:	dec    ecx
   1400020bd:	mov    rbx,rdx
   1400020c0:	mov    DWORD PTR [rsp+0x60],r12d
   1400020c5:	mov    QWORD PTR [rsp+0x68],r12
   1400020ca:	cmp    ecx,0x4
   1400020cd:	je     0x1400020ef
   1400020cf:	mov    edx,ecx
   1400020d1:	lea    rcx,[rip+0x3be50]        # 0x14003df28
   1400020d8:	call   0x140001000
   1400020dd:	call   0x140001a10
   1400020e2:	lea    eax,[r12+0x1]
   1400020e7:	add    rsp,0x48
   1400020eb:	pop    r12
   1400020ed:	pop    rbx
   1400020ee:	ret    
   1400020ef:	mov    rcx,QWORD PTR [rbx+0x8]
   1400020f3:	mov    QWORD PTR [rsp+0x78],rsi
   1400020f8:	mov    QWORD PTR [rsp+0x40],rdi
   1400020fd:	lea    rdx,[rsp+0x68]
   140002102:	mov    r8d,0xa
   140002108:	mov    QWORD PTR [rsp+0x38],r13
   14000210d:	mov    QWORD PTR [rsp+0x30],r14
   140002112:	call   0x14002b7ac
   140002117:	mov    rcx,QWORD PTR [rbx+0x20]
   14000211b:	mov    rdi,QWORD PTR [rbx+0x10]
   14000211f:	mov    rsi,QWORD PTR [rbx+0x18]
   140002123:	lea    rdx,[rsp+0x68]
   140002128:	mov    r8d,0xa
   14000212e:	movsxd r13,eax
   140002131:	call   0x14002b7ac
   140002136:	lea    rcx,[rip+0x3bdab]        # 0x14003dee8
   14000213d:	mov    r8,rsi
   140002140:	mov    r9d,eax
   140002143:	mov    rdx,rdi
   140002146:	mov    ebx,eax
   140002148:	call   0x140001000
   14000214d:	mov    rcx,rdi
   140002150:	call   0x140001bd0
   140002155:	or     r14,0xffffffffffffffff
   140002159:	test   eax,eax
   14000215b:	jne    0x1400021e7
   140002161:	lea    rcx,[rip+0x3bd68]        # 0x14003ded0
   140002168:	mov    QWORD PTR [rsp+0x70],rbp
   14000216d:	call   0x140001000
   140002172:	mov    r8d,r14d
   140002175:	mov    rdx,r14
   140002178:	mov    rcx,rsi
   14000217b:	call   0x14000b990
   140002180:	lea    edx,[r14+0x2]
   140002184:	mov    rcx,rax
   140002187:	mov    rbp,rax
   14000218a:	call   0x14000bf50
   14000218f:	lea    edx,[r14+0x2]
   140002193:	mov    rcx,rdi
   140002196:	mov    rsi,rax
   140002199:	call   0x14000bf50
   14000219e:	mov    r9d,ebx
   1400021a1:	mov    rdi,rax
   1400021a4:	lea    rax,[rsp+0x60]
   1400021a9:	mov    r8,rsi
   1400021ac:	mov    rdx,rdi
   1400021af:	mov    rcx,r13
   1400021b2:	mov    QWORD PTR [rsp+0x20],rax
   1400021b7:	call   0x14003b92a
   1400021bc:	mov    rcx,rdi
   1400021bf:	mov    ebx,eax
   1400021c1:	call   0x14002b36c
   1400021c6:	mov    rcx,rsi
   1400021c9:	call   0x14002b36c
   1400021ce:	mov    rcx,rbp
   1400021d1:	call   0x14002b36c
   1400021d6:	mov    rbp,QWORD PTR [rsp+0x70]
   1400021db:	test   ebx,ebx
   1400021dd:	jne    0x140002205
   1400021df:	call   QWORD PTR [rip+0x3b153]        # 0x14003d338
   1400021e5:	jmp    0x140002202
   1400021e7:	lea    rax,[rsp+0x60]
   1400021ec:	mov    r9d,ebx
   1400021ef:	mov    r8,rsi
   1400021f2:	mov    rdx,rdi
   1400021f5:	mov    rcx,r13
   1400021f8:	mov    QWORD PTR [rsp+0x20],rax
   1400021fd:	call   0x140001df0
   140002202:	mov    r12d,eax
   140002205:	lea    rcx,[rip+0x3bc94]        # 0x14003dea0
   14000220c:	mov    edx,r12d
   14000220f:	call   0x140001000
   140002214:	cmp    DWORD PTR [rsp+0x60],0x0
   140002219:	mov    r13,QWORD PTR [rsp+0x38]
   14000221e:	mov    rdi,QWORD PTR [rsp+0x40]
   140002223:	mov    rsi,QWORD PTR [rsp+0x78]
   140002228:	cmovne r12d,r14d
   14000222c:	mov    r14,QWORD PTR [rsp+0x30]
   140002231:	mov    eax,r12d
   140002234:	add    rsp,0x48
   140002238:	pop    r12
   14000223a:	pop    rbx
   14000223b:	ret    
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	rex push rbx
   140002242:	push   rsi
   140002243:	push   rdi
   140002244:	sub    rsp,0x290
   14000224b:	mov    rax,QWORD PTR [rip+0x6465e]        # 0x1400668b0
   140002252:	xor    rax,rsp
   140002255:	mov    QWORD PTR [rsp+0x270],rax
   14000225d:	mov    edi,ecx
   14000225f:	mov    rsi,rdx
   140002262:	lea    rcx,[rsp+0x51]
   140002267:	xor    ebx,ebx
   140002269:	xor    edx,edx
   14000226b:	mov    r8d,0x104
   140002271:	mov    BYTE PTR [rsp+0x50],bl
   140002275:	call   0x14002b280
   14000227a:	lea    rcx,[rsp+0x161]
   140002282:	xor    edx,edx
   140002284:	mov    r8d,0x103
   14000228a:	mov    BYTE PTR [rsp+0x160],bl
   140002291:	call   0x14002b280
   140002296:	lea    rcx,[rip+0x3be9b]        # 0x14003e138
   14000229d:	mov    QWORD PTR [rsp+0x40],rbx
   1400022a2:	call   0x140001000
   1400022a7:	cmp    edi,0x5
   1400022aa:	je     0x1400022c7
   1400022ac:	lea    rcx,[rip+0x3be45]        # 0x14003e0f8
   1400022b3:	mov    edx,edi
   1400022b5:	call   0x140001000
   1400022ba:	call   0x140001a10
   1400022bf:	lea    eax,[rbx+0x1]
   1400022c2:	jmp    0x1400024e1
   1400022c7:	mov    rcx,QWORD PTR [rsi+0x8]
   1400022cb:	mov    QWORD PTR [rsp+0x2c0],rbp
   1400022d3:	lea    rdx,[rsp+0x40]
   1400022d8:	mov    r8d,0xa
   1400022de:	mov    QWORD PTR [rsp+0x288],r12
   1400022e6:	mov    QWORD PTR [rsp+0x280],r13
   1400022ee:	call   0x14002b7ac
   1400022f3:	mov    r12,QWORD PTR [rsi+0x10]
   1400022f7:	mov    rbp,QWORD PTR [rsi+0x18]
   1400022fb:	mov    rsi,QWORD PTR [rsi+0x20]
   1400022ff:	xor    eax,eax
   140002301:	or     rcx,0xffffffffffffffff
   140002305:	mov    rdi,rsi
   140002308:	mov    r13,rsi
   14000230b:	repnz scas al,BYTE PTR es:[rdi]
   14000230d:	cmp    BYTE PTR [rsi],0x22
   140002310:	not    rcx
   140002313:	lea    rax,[rcx-0x1]
   140002317:	cdqe   
   140002319:	lea    rdi,[rax+rsi*1-0x1]
   14000231e:	jne    0x140002324
   140002320:	lea    r13,[rsi+0x1]
   140002324:	cmp    BYTE PTR [rdi],0x22
   140002327:	jne    0x14000232c
   140002329:	dec    rdi
   14000232c:	lea    rcx,[rsp+0x50]
   140002331:	xor    edx,edx
   140002333:	mov    r8d,0x105
   140002339:	call   0x14002b280
   14000233e:	sub    rdi,r13
   140002341:	lea    rcx,[rsp+0x50]
   140002346:	lea    r8,[rdi+0x1]
   14000234a:	mov    rdx,r13
   14000234d:	call   0x14002b0d0
   140002352:	lea    r8,[rdi+0x1]
   140002356:	lea    rdx,[rsp+0x50]
   14000235b:	mov    rcx,rsi
   14000235e:	call   0x14002b0d0
   140002363:	lea    rcx,[rsp+0x160]
   14000236b:	mov    edx,0x104
   140002370:	call   0x140009500
   140002375:	lea    r8,[rsp+0x160]
   14000237d:	mov    r9,rbp
   140002380:	mov    rdx,rbp
   140002383:	mov    rcx,rsi
   140002386:	call   0x1400018f0
   14000238b:	mov    r13,QWORD PTR [rsp+0x280]
   140002393:	test   eax,eax
   140002395:	jne    0x1400023b5
   140002397:	lea    rdx,[rsp+0x160]
   14000239f:	lea    rcx,[rip+0x3bd1a]        # 0x14003e0c0
   1400023a6:	call   0x140001000
   1400023ab:	mov    eax,0x2
   1400023b0:	jmp    0x1400024d1
   1400023b5:	lea    rcx,[rsp+0x50]
   1400023ba:	xor    edx,edx
   1400023bc:	mov    r8d,0x105
   1400023c2:	call   0x14002b280
   1400023c7:	lea    r9,[rsp+0x50]
   1400023cc:	lea    r8,[rip+0x3bce5]        # 0x14003e0b8
   1400023d3:	lea    rdx,[rip+0x3bca6]        # 0x14003e080
   1400023da:	mov    rcx,0xffffffff80000002
   1400023e1:	mov    DWORD PTR [rsp+0x20],0x105
   1400023e9:	call   0x140001100
   1400023ee:	test   eax,eax
   1400023f0:	je     0x140002446
   1400023f2:	or     rcx,0xffffffffffffffff
   1400023f6:	xor    eax,eax
   1400023f8:	mov    DWORD PTR [rsp+0x30],ebx
   1400023fc:	lea    rdi,[rsp+0x50]
   140002401:	lea    rdx,[rip+0x3bc78]        # 0x14003e080
   140002408:	mov    r9d,0x1
   14000240e:	repnz scas al,BYTE PTR es:[rdi]
   140002410:	lea    rax,[rsp+0x50]
   140002415:	mov    r8,r12
   140002418:	not    rcx
   14000241b:	dec    rcx
   14000241e:	mov    DWORD PTR [rsp+0x28],ecx
   140002422:	mov    rcx,0xffffffff80000002
   140002429:	mov    QWORD PTR [rsp+0x20],rax
   14000242e:	call   0x1400012e0
   140002433:	test   eax,eax
   140002435:	je     0x140002497
   140002437:	lea    rcx,[rip+0x3bc1a]        # 0x14003e058
   14000243e:	mov    rdx,r12
   140002441:	call   0x140001000
   140002446:	or     rcx,0xffffffffffffffff
   14000244a:	xor    eax,eax
   14000244c:	mov    DWORD PTR [rsp+0x30],ebx
   140002450:	mov    rdi,rbp
   140002453:	lea    r8,[rip+0x3bc5e]        # 0x14003e0b8
   14000245a:	lea    rdx,[rip+0x3bc1f]        # 0x14003e080
   140002461:	repnz scas al,BYTE PTR es:[rdi]
   140002463:	lea    r9d,[rax+0x1]
   140002467:	not    rcx
   14000246a:	dec    rcx
   14000246d:	mov    DWORD PTR [rsp+0x28],ecx
   140002471:	mov    rcx,0xffffffff80000002
   140002478:	mov    QWORD PTR [rsp+0x20],rbp
   14000247d:	call   0x1400012e0
   140002482:	test   eax,eax
   140002484:	je     0x1400024ad
   140002486:	lea    rcx,[rip+0x3bb93]        # 0x14003e020
   14000248d:	mov    rdx,rbp
   140002490:	call   0x140001000
   140002495:	jmp    0x1400024c1
   140002497:	lea    rcx,[rip+0x3bb32]        # 0x14003dfd0
   14000249e:	mov    rdx,r12
   1400024a1:	call   0x140001000
   1400024a6:	mov    ebx,0x3
   1400024ab:	jmp    0x1400024c1
   1400024ad:	lea    rcx,[rip+0x3badc]        # 0x14003df90
   1400024b4:	mov    rdx,rbp
   1400024b7:	call   0x140001000
   1400024bc:	mov    ebx,0x4
   1400024c1:	lea    rcx,[rip+0x3ba98]        # 0x14003df60
   1400024c8:	mov    edx,ebx
   1400024ca:	call   0x140001000
   1400024cf:	mov    eax,ebx
   1400024d1:	mov    rbp,QWORD PTR [rsp+0x2c0]
   1400024d9:	mov    r12,QWORD PTR [rsp+0x288]
   1400024e1:	mov    rcx,QWORD PTR [rsp+0x270]
   1400024e9:	xor    rcx,rsp
   1400024ec:	call   0x14002b250
   1400024f1:	add    rsp,0x290
   1400024f8:	pop    rdi
   1400024f9:	pop    rsi
   1400024fa:	pop    rbx
   1400024fb:	ret    
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	rex push rbx
   140002502:	push   rbp
   140002503:	push   rdi
   140002504:	sub    rsp,0x280
   14000250b:	mov    rax,QWORD PTR [rip+0x6439e]        # 0x1400668b0
   140002512:	xor    rax,rsp
   140002515:	mov    QWORD PTR [rsp+0x270],rax
   14000251d:	mov    edi,ecx
   14000251f:	mov    rbp,rdx
   140002522:	lea    rcx,[rsp+0x51]
   140002527:	xor    ebx,ebx
   140002529:	xor    edx,edx
   14000252b:	mov    r8d,0x104
   140002531:	mov    BYTE PTR [rsp+0x50],bl
   140002535:	call   0x14002b280
   14000253a:	lea    rcx,[rsp+0x161]
   140002542:	xor    edx,edx
   140002544:	mov    r8d,0x104
   14000254a:	mov    BYTE PTR [rsp+0x160],bl
   140002551:	call   0x14002b280
   140002556:	lea    rcx,[rip+0x3be33]        # 0x14003e390
   14000255d:	mov    QWORD PTR [rsp+0x40],rbx
   140002562:	call   0x140001000
   140002567:	cmp    edi,0x4
   14000256a:	je     0x140002587
   14000256c:	lea    rcx,[rip+0x3bddd]        # 0x14003e350
   140002573:	mov    edx,edi
   140002575:	call   0x140001000
   14000257a:	call   0x140001a10
   14000257f:	lea    eax,[rbx+0x1]
   140002582:	jmp    0x14000279b
   140002587:	mov    rcx,QWORD PTR [rbp+0x8]
   14000258b:	lea    rdx,[rsp+0x40]
   140002590:	mov    r8d,0xa
   140002596:	mov    QWORD PTR [rsp+0x2b0],rsi
   14000259e:	call   0x14002b7ac
   1400025a3:	mov    rsi,QWORD PTR [rbp+0x10]
   1400025a7:	mov    rdi,QWORD PTR [rbp+0x18]
   1400025ab:	lea    rcx,[rsp+0x160]
   1400025b3:	mov    edx,0x105
   1400025b8:	call   0x140009500
   1400025bd:	mov    r9d,0x1
   1400025c3:	lea    rcx,[rsp+0x160]
   1400025cb:	lea    r8d,[r9+0x4]
   1400025cf:	mov    rdx,rdi
   1400025d2:	call   0x1400016d0
   1400025d7:	lea    rcx,[rsp+0x50]
   1400025dc:	xor    edx,edx
   1400025de:	mov    r8d,0x105
   1400025e4:	call   0x14002b280
   1400025e9:	lea    r9,[rsp+0x50]
   1400025ee:	lea    r8,[rip+0x3bac3]        # 0x14003e0b8
   1400025f5:	lea    rdx,[rip+0x3ba84]        # 0x14003e080
   1400025fc:	mov    rcx,0xffffffff80000002
   140002603:	mov    DWORD PTR [rsp+0x20],0x105
   14000260b:	call   0x140001100
   140002610:	test   eax,eax
   140002612:	je     0x140002783
   140002618:	lea    rdx,[rsp+0x50]
   14000261d:	lea    rcx,[rip+0x3bd0c]        # 0x14003e330
   140002624:	call   0x140001000
   140002629:	lea    rdx,[rsp+0x50]
   14000262e:	sub    rdx,rdi
   140002631:	movzx  ecx,BYTE PTR [rdi]
   140002634:	movzx  eax,BYTE PTR [rdi+rdx*1]
   140002638:	sub    ecx,eax
   14000263a:	jne    0x140002643
   14000263c:	inc    rdi
   14000263f:	test   eax,eax
   140002641:	jne    0x140002631
   140002643:	test   ecx,ecx
   140002645:	jne    0x140002772
   14000264b:	lea    rcx,[rsp+0x50]
   140002650:	xor    edx,edx
   140002652:	mov    r8d,0x105
   140002658:	call   0x14002b280
   14000265d:	lea    r9,[rsp+0x50]
   140002662:	lea    rdx,[rip+0x3ba17]        # 0x14003e080
   140002669:	mov    r8,rsi
   14000266c:	mov    rcx,0xffffffff80000002
   140002673:	mov    DWORD PTR [rsp+0x20],0x105
   14000267b:	call   0x140001100
   140002680:	test   eax,eax
   140002682:	je     0x14000272c
   140002688:	or     rcx,0xffffffffffffffff
   14000268c:	xor    eax,eax
   14000268e:	mov    DWORD PTR [rsp+0x30],ebx
   140002692:	lea    rdi,[rsp+0x50]
   140002697:	lea    r8,[rip+0x3ba1a]        # 0x14003e0b8
   14000269e:	lea    rdx,[rip+0x3b9db]        # 0x14003e080
   1400026a5:	repnz scas al,BYTE PTR es:[rdi]
   1400026a7:	lea    rax,[rsp+0x50]
   1400026ac:	mov    r9d,0x1
   1400026b2:	not    rcx
   1400026b5:	dec    rcx
   1400026b8:	mov    DWORD PTR [rsp+0x28],ecx
   1400026bc:	mov    rcx,0xffffffff80000002
   1400026c3:	mov    QWORD PTR [rsp+0x20],rax
   1400026c8:	call   0x1400012e0
   1400026cd:	test   eax,eax
   1400026cf:	je     0x140002714
   1400026d1:	lea    rdx,[rsp+0x50]
   1400026d6:	lea    rcx,[rip+0x3bc33]        # 0x14003e310
   1400026dd:	call   0x140001000
   1400026e2:	lea    rdx,[rip+0x3b997]        # 0x14003e080
   1400026e9:	mov    r8,rsi
   1400026ec:	mov    rcx,0xffffffff80000002
   1400026f3:	call   0x1400011e0
   1400026f8:	test   eax,eax
   1400026fa:	je     0x140002708
   1400026fc:	mov    rdx,rsi
   1400026ff:	lea    rcx,[rip+0x3bbca]        # 0x14003e2d0
   140002706:	jmp    0x14000277e
   140002708:	mov    rdx,rsi
   14000270b:	lea    rcx,[rip+0x3bb7e]        # 0x14003e290
   140002712:	jmp    0x14000277e
   140002714:	lea    rdx,[rsp+0x50]
   140002719:	lea    rcx,[rip+0x3bb30]        # 0x14003e250
   140002720:	call   0x140001000
   140002725:	mov    ebx,0x2
   14000272a:	jmp    0x140002783
   14000272c:	lea    rcx,[rip+0x3bafd]        # 0x14003e230
   140002733:	call   0x140001000
   140002738:	lea    r8,[rip+0x3b979]        # 0x14003e0b8
   14000273f:	lea    rdx,[rip+0x3b93a]        # 0x14003e080
   140002746:	mov    rcx,0xffffffff80000002
   14000274d:	call   0x1400011e0
   140002752:	test   eax,eax
   140002754:	je     0x140002764
   140002756:	lea    rcx,[rip+0x3baa3]        # 0x14003e200
   14000275d:	call   0x140001000
   140002762:	jmp    0x140002783
   140002764:	lea    rcx,[rip+0x3ba55]        # 0x14003e1c0
   14000276b:	call   0x140001000
   140002770:	jmp    0x140002783
   140002772:	lea    rdx,[rsp+0x50]
   140002777:	lea    rcx,[rip+0x3ba02]        # 0x14003e180
   14000277e:	call   0x140001000
   140002783:	lea    rcx,[rip+0x3b9c6]        # 0x14003e150
   14000278a:	mov    edx,ebx
   14000278c:	call   0x140001000
   140002791:	mov    rsi,QWORD PTR [rsp+0x2b0]
   140002799:	mov    eax,ebx
   14000279b:	mov    rcx,QWORD PTR [rsp+0x270]
   1400027a3:	xor    rcx,rsp
   1400027a6:	call   0x14002b250
   1400027ab:	add    rsp,0x280
   1400027b2:	pop    rdi
   1400027b3:	pop    rbp
   1400027b4:	pop    rbx
   1400027b5:	ret    
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400027c5:	push   rbx
   1400027c6:	sub    rsp,0x20
   1400027ca:	lea    rcx,[rsp+0x30]
   1400027cf:	mov    rbx,rdx
   1400027d2:	call   0x140008730
   1400027d7:	movsxd r11,eax
   1400027da:	test   eax,eax
   1400027dc:	js     0x1400027e3
   1400027de:	cmp    r11,rbx
   1400027e1:	jb     0x140002834
   1400027e3:	test   rbx,rbx
   1400027e6:	je     0x140002834
   1400027e8:	mov    r8,QWORD PTR [rsp+0x30]
   1400027ed:	lea    rdx,[rbx-0x1]
   1400027f1:	mov    r9,rdx
   1400027f4:	test   rdx,rdx
   1400027f7:	je     0x140002829
   1400027f9:	sub    rdx,0x1
   1400027fd:	je     0x140002811
   1400027ff:	nop
   140002800:	movzx  eax,BYTE PTR [rdx+r8*1]
   140002805:	and    al,0xc0
   140002807:	cmp    al,0x80
   140002809:	jne    0x140002811
   14000280b:	sub    rdx,0x1
   14000280f:	jne    0x140002800
   140002811:	movzx  eax,BYTE PTR [rdx+r8*1]
   140002816:	test   al,al
   140002818:	jns    0x14000282c
   14000281a:	movzx  ecx,dl
   14000281d:	sub    cl,r9b
   140002820:	add    cl,0x7
   140002823:	sar    al,cl
   140002825:	cmp    al,0xfe
   140002827:	je     0x14000282c
   140002829:	mov    r9,rdx
   14000282c:	movsxd rax,r9d
   14000282f:	mov    BYTE PTR [rax+r8*1],0x0
   140002834:	or     ecx,0xffffffff
   140002837:	cmp    r11,rbx
   14000283a:	cmovae r11d,ecx
   14000283e:	mov    eax,r11d
   140002841:	add    rsp,0x20
   140002845:	pop    rbx
   140002846:	ret    
   140002847:	int3   
   140002848:	int3   
   140002849:	int3   
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	mov    QWORD PTR [rsp+0x18],r8
   140002855:	mov    QWORD PTR [rsp+0x20],r9
   14000285a:	sub    rsp,0x28
   14000285e:	lea    r9,[rsp+0x48]
   140002863:	call   0x1400027c0
   140002868:	test   eax,eax
   14000286a:	jns    0x140002886
   14000286c:	lea    rdx,[rip+0x3bb4d]        # 0x14003e3c0
   140002873:	lea    rcx,[rip+0x3bb2e]        # 0x14003e3a8
   14000287a:	mov    r8d,0xd3
   140002880:	call   0x140001050
   140002885:	int3   
   140002886:	add    rsp,0x28
   14000288a:	ret    
   14000288b:	int3   
   14000288c:	int3   
   14000288d:	int3   
   14000288e:	int3   
   14000288f:	int3   
   140002890:	mov    QWORD PTR [rsp+0x18],r8
   140002895:	mov    QWORD PTR [rsp+0x20],r9
   14000289a:	sub    rsp,0x28
   14000289e:	lea    r9,[rsp+0x48]
   1400028a3:	call   0x1400027c0
   1400028a8:	add    rsp,0x28
   1400028ac:	ret    
   1400028ad:	int3   
   1400028ae:	int3   
   1400028af:	int3   
   1400028b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028b5:	push   rdi
   1400028b6:	sub    rsp,0x20
   1400028ba:	mov    rbx,rcx
   1400028bd:	or     rcx,0xffffffffffffffff
   1400028c1:	xor    eax,eax
   1400028c3:	mov    rdi,rdx
   1400028c6:	repnz scas al,BYTE PTR es:[rdi]
   1400028c8:	not    rcx
   1400028cb:	dec    rcx
   1400028ce:	cmp    rcx,r8
   1400028d1:	jb     0x1400028ed
   1400028d3:	lea    rdx,[rip+0x3bae6]        # 0x14003e3c0
   1400028da:	lea    rcx,[rip+0x3bac7]        # 0x14003e3a8
   1400028e1:	mov    r8d,0x11e
   1400028e7:	call   0x140001050
   1400028ec:	int3   
   1400028ed:	lea    r8,[rcx+0x1]
   1400028f1:	mov    rcx,rbx
   1400028f4:	call   0x14002b9a0
   1400028f9:	mov    rax,rbx
   1400028fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140002901:	add    rsp,0x20
   140002905:	pop    rdi
   140002906:	ret    
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	mov    QWORD PTR [rsp+0x8],rbx
   140002915:	push   rdi
   140002916:	sub    rsp,0x20
   14000291a:	mov    rbx,rcx
   14000291d:	or     rcx,0xffffffffffffffff
   140002921:	xor    eax,eax
   140002923:	mov    rdi,rbx
   140002926:	repnz scas al,BYTE PTR es:[rdi]
   140002928:	mov    rdi,rdx
   14000292b:	not    rcx
   14000292e:	lea    r9,[rcx-0x1]
   140002932:	or     rcx,0xffffffffffffffff
   140002936:	repnz scas al,BYTE PTR es:[rdi]
   140002938:	not    rcx
   14000293b:	dec    rcx
   14000293e:	lea    rax,[rcx+r9*1]
   140002942:	cmp    rax,rcx
   140002945:	jb     0x140002967
   140002947:	cmp    rax,r8
   14000294a:	jae    0x140002967
   14000294c:	lea    r8,[rcx+0x1]
   140002950:	lea    rcx,[r9+rbx*1]
   140002954:	call   0x14002b9a0
   140002959:	mov    rax,rbx
   14000295c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002961:	add    rsp,0x20
   140002965:	pop    rdi
   140002966:	ret    
   140002967:	lea    rdx,[rip+0x3ba52]        # 0x14003e3c0
   14000296e:	lea    rcx,[rip+0x3ba33]        # 0x14003e3a8
   140002975:	mov    r8d,0x195
   14000297b:	call   0x140001050
   140002980:	int3   
   140002981:	int3   
   140002982:	int3   
   140002983:	int3   
   140002984:	int3   
   140002985:	int3   
   140002986:	int3   
   140002987:	int3   
   140002988:	int3   
   140002989:	int3   
   14000298a:	int3   
   14000298b:	int3   
   14000298c:	int3   
   14000298d:	int3   
   14000298e:	int3   
   14000298f:	int3   
   140002990:	rex push rbx
   140002992:	sub    rsp,0x20
   140002996:	mov    rbx,rcx
   140002999:	mov    r9,r8
   14000299c:	mov    r8,rdx
   14000299f:	lea    rcx,[rsp+0x48]
   1400029a4:	xor    edx,edx
   1400029a6:	mov    QWORD PTR [rsp+0x48],0x0
   1400029af:	call   0x140008730
   1400029b4:	test   eax,eax
   1400029b6:	jns    0x1400029c0
   1400029b8:	xor    eax,eax
   1400029ba:	add    rsp,0x20
   1400029be:	pop    rbx
   1400029bf:	ret    
   1400029c0:	test   rbx,rbx
   1400029c3:	je     0x1400029ca
   1400029c5:	cdqe   
   1400029c7:	mov    QWORD PTR [rbx],rax
   1400029ca:	mov    rax,QWORD PTR [rsp+0x48]
   1400029cf:	add    rsp,0x20
   1400029d3:	pop    rbx
   1400029d4:	ret    
   1400029d5:	int3   
   1400029d6:	int3   
   1400029d7:	int3   
   1400029d8:	int3   
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400029e5:	mov    QWORD PTR [rsp+0x20],rdi
   1400029ea:	push   r12
   1400029ec:	sub    rsp,0x20
   1400029f0:	cmp    BYTE PTR [rcx],0x0
   1400029f3:	mov    r12,rdx
   1400029f6:	mov    rdi,rcx
   1400029f9:	je     0x140002a55
   1400029fb:	mov    rax,QWORD PTR [rcx+0x18]
   1400029ff:	movsxd r8,DWORD PTR [rdx+0xc]
   140002a03:	mov    rcx,QWORD PTR [rcx+0x10]
   140002a07:	lea    rdx,[r8+rax*1+0x1]
   140002a0c:	cmp    rdx,rcx
   140002a0f:	jbe    0x140002a55
   140002a11:	lea    rax,[rcx+rdx*1-0x1]
   140002a16:	xor    edx,edx
   140002a18:	div    rcx
   140002a1b:	mov    rbx,rax
   140002a1e:	imul   rbx,rcx
   140002a22:	mov    rcx,QWORD PTR [rdi+0x8]
   140002a26:	mov    rdx,rbx
   140002a29:	call   0x14002bf78
   140002a2e:	test   rax,rax
   140002a31:	jne    0x140002a4d
   140002a33:	mov    BYTE PTR [rdi+0x1],0x1
   140002a37:	mov    eax,0x1
   140002a3c:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a41:	mov    rdi,QWORD PTR [rsp+0x48]
   140002a46:	add    rsp,0x20
   140002a4a:	pop    r12
   140002a4c:	ret    
   140002a4d:	mov    QWORD PTR [rdi+0x8],rax
   140002a51:	mov    QWORD PTR [rdi+0x10],rbx
   140002a55:	mov    QWORD PTR [rsp+0x30],rbp
   140002a5a:	xor    ebp,ebp
   140002a5c:	mov    QWORD PTR [rsp+0x38],rsi
   140002a61:	cmp    DWORD PTR [r12+0x8],ebp
   140002a66:	mov    rsi,QWORD PTR [r12]
   140002a6a:	jle    0x140002aab
   140002a6c:	nop    DWORD PTR [rax+0x0]
   140002a70:	mov    ecx,DWORD PTR [rdi+0x10]
   140002a73:	sub    ecx,DWORD PTR [rdi+0x18]
   140002a76:	dec    ecx
   140002a78:	movsxd rax,ecx
   140002a7b:	cmp    rax,QWORD PTR [rsi+0x8]
   140002a7f:	jbe    0x140002a84
   140002a81:	mov    ecx,DWORD PTR [rsi+0x8]
   140002a84:	mov    rdx,QWORD PTR [rsi]
   140002a87:	movsxd rbx,ecx
   140002a8a:	mov    rcx,QWORD PTR [rdi+0x18]
   140002a8e:	add    rcx,QWORD PTR [rdi+0x8]
   140002a92:	mov    r8,rbx
   140002a95:	call   0x14002b9a0
   140002a9a:	add    QWORD PTR [rdi+0x18],rbx
   140002a9e:	inc    ebp
   140002aa0:	add    rsi,0x10
   140002aa4:	cmp    ebp,DWORD PTR [r12+0x8]
   140002aa9:	jl     0x140002a70
   140002aab:	mov    rsi,QWORD PTR [rsp+0x38]
   140002ab0:	mov    rbp,QWORD PTR [rsp+0x30]
   140002ab5:	mov    rbx,QWORD PTR [rsp+0x40]
   140002aba:	mov    rdi,QWORD PTR [rsp+0x48]
   140002abf:	xor    eax,eax
   140002ac1:	add    rsp,0x20
   140002ac5:	pop    r12
   140002ac7:	ret    
   140002ac8:	int3   
   140002ac9:	int3   
   140002aca:	int3   
   140002acb:	int3   
   140002acc:	int3   
   140002acd:	int3   
   140002ace:	int3   
   140002acf:	int3   
   140002ad0:	rex push rbx
   140002ad2:	sub    rsp,0x20
   140002ad6:	mov    rbx,rdx
   140002ad9:	mov    r10d,ecx
   140002adc:	cmp    r8d,0x8
   140002ae0:	je     0x140002c10
   140002ae6:	cmp    r8d,0xa
   140002aea:	je     0x140002b31
   140002aec:	cmp    r8d,0x10
   140002af0:	je     0x140002b00
   140002af2:	call   0x14002adf4
   140002af7:	mov    rax,rbx
   140002afa:	add    rsp,0x20
   140002afe:	pop    rbx
   140002aff:	ret    
   140002b00:	mov    rcx,QWORD PTR [rsp+0x50]
   140002b05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002b10:	mov    eax,r10d
   140002b13:	dec    rbx
   140002b16:	shr    r10d,0x4
   140002b1a:	and    eax,0xf
   140002b1d:	movzx  eax,BYTE PTR [rax+rcx*1]
   140002b21:	mov    BYTE PTR [rbx],al
   140002b23:	test   r10d,r10d
   140002b26:	jne    0x140002b10
   140002b28:	mov    rax,rbx
   140002b2b:	add    rsp,0x20
   140002b2f:	pop    rbx
   140002b30:	ret    
   140002b31:	cmp    ecx,0xa
   140002b34:	jae    0x140002b47
   140002b36:	lea    rax,[rdx-0x1]
   140002b3a:	add    r10b,0x30
   140002b3e:	mov    BYTE PTR [rax],r10b
   140002b41:	add    rsp,0x20
   140002b45:	pop    rbx
   140002b46:	ret    
   140002b47:	xor    r11d,r11d
   140002b4a:	mov    QWORD PTR [rsp+0x30],rdi
   140002b4f:	cmp    ecx,0x7fffffff
   140002b55:	jbe    0x140002b88
   140002b57:	dec    rbx
   140002b5a:	mov    eax,0xcccccccd
   140002b5f:	mov    r11d,0x1
   140002b65:	mul    r10d
   140002b68:	mov    r9d,edx
   140002b6b:	shr    r9d,0x3
   140002b6f:	movzx  eax,r9b
   140002b73:	shl    al,0x2
   140002b76:	lea    ecx,[rax+r9*1]
   140002b7a:	add    cl,cl
   140002b7c:	sub    r10b,cl
   140002b7f:	add    r10b,0x30
   140002b83:	mov    BYTE PTR [rbx],r10b
   140002b86:	jmp    0x140002b8b
   140002b88:	mov    r9d,ecx
   140002b8b:	movzx  r10d,BYTE PTR [rsp+0x60]
   140002b91:	mov    edi,DWORD PTR [rsp+0x58]
   140002b95:	mov    r8,QWORD PTR [rsp+0x68]
   140002b9a:	nop    WORD PTR [rax+rax*1+0x0]
   140002ba0:	mov    eax,0x66666667
   140002ba5:	dec    rbx
   140002ba8:	inc    r11d
   140002bab:	imul   r9d
   140002bae:	sar    edx,0x2
   140002bb1:	mov    eax,edx
   140002bb3:	shr    eax,0x1f
   140002bb6:	add    edx,eax
   140002bb8:	movzx  eax,dl
   140002bbb:	shl    al,0x2
   140002bbe:	lea    ecx,[rax+rdx*1]
   140002bc1:	movzx  eax,r9b
   140002bc5:	add    cl,cl
   140002bc7:	sub    al,cl
   140002bc9:	add    al,0x30
   140002bcb:	mov    BYTE PTR [rbx],al
   140002bcd:	test   edi,edi
   140002bcf:	je     0x140002bf9
   140002bd1:	movsx  ecx,BYTE PTR [r8]
   140002bd5:	cmp    r11d,ecx
   140002bd8:	jne    0x140002bf9
   140002bda:	cmp    cl,0x7f
   140002bdd:	je     0x140002bf9
   140002bdf:	cmp    r9d,0x9
   140002be3:	jle    0x140002bf9
   140002be5:	lea    rax,[r8+0x1]
   140002be9:	dec    rbx
   140002bec:	xor    r11d,r11d
   140002bef:	mov    BYTE PTR [rbx],r10b
   140002bf2:	cmp    BYTE PTR [rax],r11b
   140002bf5:	cmovne r8,rax
   140002bf9:	mov    r9d,edx
   140002bfc:	test   edx,edx
   140002bfe:	jne    0x140002ba0
   140002c00:	mov    rdi,QWORD PTR [rsp+0x30]
   140002c05:	mov    rax,rbx
   140002c08:	add    rsp,0x20
   140002c0c:	pop    rbx
   140002c0d:	ret    
   140002c0e:	xchg   ax,ax
   140002c10:	movzx  eax,r10b
   140002c14:	dec    rbx
   140002c17:	shr    r10d,0x3
   140002c1b:	and    al,0x7
   140002c1d:	add    al,0x30
   140002c1f:	mov    BYTE PTR [rbx],al
   140002c21:	test   r10d,r10d
   140002c24:	jne    0x140002c10
   140002c26:	test   r9d,r9d
   140002c29:	je     0x140002c35
   140002c2b:	cmp    al,0x30
   140002c2d:	je     0x140002c35
   140002c2f:	dec    rbx
   140002c32:	mov    BYTE PTR [rbx],0x30
   140002c35:	mov    rax,rbx
   140002c38:	add    rsp,0x20
   140002c3c:	pop    rbx
   140002c3d:	ret    
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	rex push rbx
   140002c42:	sub    rsp,0x40
   140002c46:	mov    eax,0xffffffff
   140002c4b:	mov    rbx,rdx
   140002c4e:	mov    r10,rcx
   140002c51:	cmp    rcx,rax
   140002c54:	ja     0x140002c8c
   140002c56:	mov    rax,QWORD PTR [rsp+0x88]
   140002c5e:	mov    QWORD PTR [rsp+0x38],rax
   140002c63:	movzx  eax,BYTE PTR [rsp+0x80]
   140002c6b:	mov    BYTE PTR [rsp+0x30],al
   140002c6f:	mov    eax,DWORD PTR [rsp+0x78]
   140002c73:	mov    DWORD PTR [rsp+0x28],eax
   140002c77:	mov    rax,QWORD PTR [rsp+0x70]
   140002c7c:	mov    QWORD PTR [rsp+0x20],rax
   140002c81:	call   0x140002ad0
   140002c86:	add    rsp,0x40
   140002c8a:	pop    rbx
   140002c8b:	ret    
   140002c8c:	cmp    r8d,0x8
   140002c90:	je     0x140002e10
   140002c96:	cmp    r8d,0xa
   140002c9a:	je     0x140002ce1
   140002c9c:	cmp    r8d,0x10
   140002ca0:	je     0x140002cb0
   140002ca2:	call   0x14002adf4
   140002ca7:	mov    rax,rbx
   140002caa:	add    rsp,0x40
   140002cae:	pop    rbx
   140002caf:	ret    
   140002cb0:	mov    rcx,QWORD PTR [rsp+0x70]
   140002cb5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002cc0:	mov    rax,r10
   140002cc3:	dec    rbx
   140002cc6:	shr    r10,0x4
   140002cca:	and    eax,0xf
   140002ccd:	movzx  eax,BYTE PTR [rax+rcx*1]
   140002cd1:	mov    BYTE PTR [rbx],al
   140002cd3:	test   r10,r10
   140002cd6:	jne    0x140002cc0
   140002cd8:	mov    rax,rbx
   140002cdb:	add    rsp,0x40
   140002cdf:	pop    rbx
   140002ce0:	ret    
   140002ce1:	cmp    rcx,0xa
   140002ce5:	jae    0x140002d17
   140002ce7:	movabs rax,0xcccccccccccccccd
   140002cf1:	mul    r10
   140002cf4:	lea    rax,[rbx-0x1]
   140002cf8:	shr    rdx,0x3
   140002cfc:	movzx  ecx,dl
   140002cff:	shl    cl,0x2
   140002d02:	add    dl,cl
   140002d04:	add    dl,dl
   140002d06:	sub    r10b,dl
   140002d09:	add    r10b,0x30
   140002d0d:	mov    BYTE PTR [rbx-0x1],r10b
   140002d11:	add    rsp,0x40
   140002d15:	pop    rbx
   140002d16:	ret    
   140002d17:	movabs rax,0x7fffffffffffffff
   140002d21:	xor    r11d,r11d
   140002d24:	mov    QWORD PTR [rsp+0x50],rsi
   140002d29:	mov    QWORD PTR [rsp+0x58],rdi
   140002d2e:	cmp    rcx,rax
   140002d31:	jbe    0x140002d69
   140002d33:	movabs rax,0xcccccccccccccccd
   140002d3d:	dec    rbx
   140002d40:	mov    r11d,0x1
   140002d46:	mul    r10
   140002d49:	mov    r9,rdx
   140002d4c:	shr    r9,0x3
   140002d50:	movzx  eax,r9b
   140002d54:	shl    al,0x2
   140002d57:	lea    ecx,[rax+r9*1]
   140002d5b:	add    cl,cl
   140002d5d:	sub    r10b,cl
   140002d60:	add    r10b,0x30
   140002d64:	mov    BYTE PTR [rbx],r10b
   140002d67:	jmp    0x140002d6c
   140002d69:	mov    r9,rcx
   140002d6c:	movzx  r10d,BYTE PTR [rsp+0x80]
   140002d75:	mov    edi,DWORD PTR [rsp+0x78]
   140002d79:	mov    r8,QWORD PTR [rsp+0x88]
   140002d81:	movabs rsi,0x6666666666666667
   140002d8b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002d90:	mov    rax,rsi
   140002d93:	dec    rbx
   140002d96:	inc    r11d
   140002d99:	imul   r9
   140002d9c:	sar    rdx,0x2
   140002da0:	mov    rax,rdx
   140002da3:	shr    rax,0x3f
   140002da7:	add    rdx,rax
   140002daa:	movzx  eax,dl
   140002dad:	shl    al,0x2
   140002db0:	lea    ecx,[rax+rdx*1]
   140002db3:	movzx  eax,r9b
   140002db7:	add    cl,cl
   140002db9:	sub    al,cl
   140002dbb:	add    al,0x30
   140002dbd:	mov    BYTE PTR [rbx],al
   140002dbf:	test   edi,edi
   140002dc1:	je     0x140002ded
   140002dc3:	movzx  eax,BYTE PTR [r8]
   140002dc7:	cmp    al,0x7f
   140002dc9:	je     0x140002ded
   140002dcb:	movsx  eax,al
   140002dce:	cmp    r11d,eax
   140002dd1:	jne    0x140002ded
   140002dd3:	cmp    r9,0x9
   140002dd7:	jle    0x140002ded
   140002dd9:	lea    rax,[r8+0x1]
   140002ddd:	dec    rbx
   140002de0:	xor    r11d,r11d
   140002de3:	mov    BYTE PTR [rbx],r10b
   140002de6:	cmp    BYTE PTR [rax],r11b
   140002de9:	cmovne r8,rax
   140002ded:	mov    r9,rdx
   140002df0:	test   rdx,rdx
   140002df3:	jne    0x140002d90
   140002df5:	mov    rdi,QWORD PTR [rsp+0x58]
   140002dfa:	mov    rsi,QWORD PTR [rsp+0x50]
   140002dff:	mov    rax,rbx
   140002e02:	add    rsp,0x40
   140002e06:	pop    rbx
   140002e07:	ret    
   140002e08:	nop    DWORD PTR [rax+rax*1+0x0]
   140002e10:	movzx  eax,r10b
   140002e14:	dec    rbx
   140002e17:	shr    r10,0x3
   140002e1b:	and    al,0x7
   140002e1d:	add    al,0x30
   140002e1f:	mov    BYTE PTR [rbx],al
   140002e21:	test   r10,r10
   140002e24:	jne    0x140002e10
   140002e26:	test   r9d,r9d
   140002e29:	je     0x140002e35
   140002e2b:	cmp    al,0x30
   140002e2d:	je     0x140002e35
   140002e2f:	dec    rbx
   140002e32:	mov    BYTE PTR [rbx],0x30
   140002e35:	mov    rax,rbx
   140002e38:	add    rsp,0x40
   140002e3c:	pop    rbx
   140002e3d:	ret    
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    QWORD PTR [rsp+0x8],rbx
   140002e45:	mov    QWORD PTR [rsp+0x10],rbp
   140002e4a:	push   rsi
   140002e4b:	push   rdi
   140002e4c:	push   r12
   140002e4e:	sub    rsp,0x30
   140002e52:	mov    r12,rcx
   140002e55:	or     rcx,0xffffffffffffffff
   140002e59:	xor    eax,eax
   140002e5b:	mov    rdi,r12
   140002e5e:	movsxd rsi,edx
   140002e61:	repnz scas ax,WORD PTR es:[rdi]
   140002e64:	not    rcx
   140002e67:	lea    rbp,[rcx-0x1]
   140002e6b:	add    rbp,rbp
   140002e6e:	cmp    esi,0xffffffff
   140002e71:	jne    0x140002e78
   140002e73:	mov    rdi,rbp
   140002e76:	jmp    0x140002e82
   140002e78:	mov    rdi,rsi
   140002e7b:	cmp    rbp,rsi
   140002e7e:	cmovb  rdi,rbp
   140002e82:	lea    rdx,[rdi+0x4]
   140002e86:	xor    ecx,ecx
   140002e88:	call   0x14002bf78
   140002e8d:	mov    rbx,rax
   140002e90:	test   rax,rax
   140002e93:	je     0x140002f4c
   140002e99:	add    rbp,r12
   140002e9c:	nop    DWORD PTR [rax+0x0]
   140002ea0:	movsx  ecx,BYTE PTR [rip+0x53209]        # 0x1400560b0
   140002ea7:	lea    r9,[rdi+rbx*1]
   140002eab:	lea    r8,[rsp+0x60]
   140002eb0:	mov    DWORD PTR [rsp+0x20],ecx
   140002eb4:	lea    rcx,[rsp+0x68]
   140002eb9:	mov    rdx,rbp
   140002ebc:	mov    QWORD PTR [rsp+0x60],rbx
   140002ec1:	mov    QWORD PTR [rsp+0x68],r12
   140002ec6:	call   0x1400087b0
   140002ecb:	cmp    eax,0x2
   140002ece:	jne    0x140002f06
   140002ed0:	mov    rcx,rsi
   140002ed3:	cmp    rdi,rsi
   140002ed6:	je     0x140002f37
   140002ed8:	cmp    esi,0xffffffff
   140002edb:	jne    0x140002ee2
   140002edd:	add    rdi,rdi
   140002ee0:	jmp    0x140002ef0
   140002ee2:	lea    rax,[rdi+rdi*1]
   140002ee6:	mov    rdi,rcx
   140002ee9:	cmp    rax,rcx
   140002eec:	cmovb  rdi,rax
   140002ef0:	lea    rdx,[rdi+0x4]
   140002ef4:	mov    rcx,rbx
   140002ef7:	call   0x14002bf78
   140002efc:	mov    rbx,rax
   140002eff:	test   rax,rax
   140002f02:	jne    0x140002ea0
   140002f04:	jmp    0x140002f4c
   140002f06:	cmp    eax,0x1
   140002f09:	je     0x140002f2e
   140002f0b:	cmp    eax,0x3
   140002f0e:	je     0x140002f2e
   140002f10:	test   eax,eax
   140002f12:	je     0x140002f37
   140002f14:	lea    rdx,[rip+0x3b51d]        # 0x14003e438
   140002f1b:	lea    rcx,[rip+0x3b4fe]        # 0x14003e420
   140002f22:	mov    r8d,0x19c
   140002f28:	call   0x140001050
   140002f2d:	int3   
   140002f2e:	cmp    BYTE PTR [rip+0x5317b],0x0        # 0x1400560b0
   140002f35:	je     0x140002f42
   140002f37:	mov    rax,QWORD PTR [rsp+0x60]
   140002f3c:	xor    ecx,ecx
   140002f3e:	mov    DWORD PTR [rax],ecx
   140002f40:	jmp    0x140002f4c
   140002f42:	mov    rcx,rbx
   140002f45:	call   0x14002b36c
   140002f4a:	xor    ebx,ebx
   140002f4c:	mov    rbp,QWORD PTR [rsp+0x58]
   140002f51:	mov    rax,rbx
   140002f54:	mov    rbx,QWORD PTR [rsp+0x50]
   140002f59:	add    rsp,0x30
   140002f5d:	pop    r12
   140002f5f:	pop    rdi
   140002f60:	pop    rsi
   140002f61:	ret    
   140002f62:	int3   
   140002f63:	int3   
   140002f64:	int3   
   140002f65:	int3   
   140002f66:	int3   
   140002f67:	int3   
   140002f68:	int3   
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	mov    QWORD PTR [rsp+0x18],rbx
   140002f75:	mov    QWORD PTR [rsp+0x20],rbp
   140002f7a:	push   rsi
   140002f7b:	push   rdi
   140002f7c:	push   r12
   140002f7e:	sub    rsp,0x20
   140002f82:	mov    QWORD PTR [rsp+0x40],r13
   140002f87:	mov    r13,QWORD PTR [rdx]
   140002f8a:	lea    eax,[rcx+0x1]
   140002f8d:	mov    QWORD PTR [rsp+0x48],r14
   140002f92:	movsxd r14,DWORD PTR [r8]
   140002f95:	mov    rbp,r8
   140002f98:	lea    esi,[r14+r14*1]
   140002f9c:	mov    r12,rdx
   140002f9f:	cmp    esi,eax
   140002fa1:	cmovl  esi,eax
   140002fa4:	cmp    r14d,0x8
   140002fa8:	jne    0x140002fda
   140002faa:	movsxd rdi,esi
   140002fad:	lea    rcx,[rdi*4+0x0]
   140002fb5:	call   0x14002c04c
   140002fba:	mov    rbx,rax
   140002fbd:	test   rax,rax
   140002fc0:	jne    0x140002fc7
   140002fc2:	call   0x14002adf4
   140002fc7:	mov    r8d,0x20
   140002fcd:	mov    rdx,r13
   140002fd0:	mov    rcx,rbx
   140002fd3:	call   0x14002b9a0
   140002fd8:	jmp    0x140002ffa
   140002fda:	movsxd rdi,esi
   140002fdd:	mov    rcx,r13
   140002fe0:	lea    rdx,[rdi*4+0x0]
   140002fe8:	call   0x14002bf78
   140002fed:	mov    rbx,rax
   140002ff0:	test   rax,rax
   140002ff3:	jne    0x140002ffa
   140002ff5:	call   0x14002adf4
   140002ffa:	mov    r13,QWORD PTR [rsp+0x40]
   140002fff:	mov    rax,r14
   140003002:	mov    r14,QWORD PTR [rsp+0x48]
   140003007:	cmp    rax,rdi
   14000300a:	jge    0x140003021
   14000300c:	sub    rdi,rax
   14000300f:	lea    rcx,[rbx+rax*4]
   140003013:	xor    edx,edx
   140003015:	shl    rdi,0x2
   140003019:	mov    r8,rdi
   14000301c:	call   0x14002b280
   140003021:	mov    QWORD PTR [r12],rbx
   140003025:	mov    rbx,QWORD PTR [rsp+0x50]
   14000302a:	mov    DWORD PTR [rbp+0x0],esi
   14000302d:	mov    rbp,QWORD PTR [rsp+0x58]
   140003032:	add    rsp,0x20
   140003036:	pop    r12
   140003038:	pop    rdi
   140003039:	pop    rsi
   14000303a:	ret    
   14000303b:	int3   
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	mov    QWORD PTR [rsp+0x18],rsi
   140003045:	push   rdi
   140003046:	sub    rsp,0x30
   14000304a:	mov    rax,QWORD PTR [rip+0x6385f]        # 0x1400668b0
   140003051:	xor    rax,rsp
   140003054:	mov    QWORD PTR [rsp+0x28],rax
   140003059:	mov    r9d,edx
   14000305c:	mov    rsi,rcx
   14000305f:	mov    BYTE PTR [rcx],r8b
   140003062:	lea    rdi,[rcx+0x1]
   140003066:	test   edx,edx
   140003068:	jns    0x140003075
   14000306a:	neg    r9d
   14000306d:	mov    BYTE PTR [rdi],0x2d
   140003070:	inc    rdi
   140003073:	jmp    0x14000307b
   140003075:	mov    BYTE PTR [rdi],0x2b
   140003078:	inc    rdi
   14000307b:	cmp    r9d,0xa
   14000307f:	lea    r10,[rsp+0x26]
   140003084:	jge    0x14000308c
   140003086:	mov    BYTE PTR [rdi],0x30
   140003089:	inc    rdi
   14000308c:	cmp    r9d,0x9
   140003090:	jle    0x14000310b
   140003092:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400030a0:	mov    eax,0x66666667
   1400030a5:	dec    r10
   1400030a8:	imul   r9d
   1400030ab:	sar    edx,0x2
   1400030ae:	mov    eax,edx
   1400030b0:	shr    eax,0x1f
   1400030b3:	add    edx,eax
   1400030b5:	movzx  eax,dl
   1400030b8:	shl    al,0x2
   1400030bb:	lea    ecx,[rax+rdx*1]
   1400030be:	add    cl,cl
   1400030c0:	sub    r9b,cl
   1400030c3:	add    r9b,0x30
   1400030c7:	cmp    edx,0x9
   1400030ca:	mov    BYTE PTR [r10],r9b
   1400030cd:	mov    r9d,edx
   1400030d0:	jg     0x1400030a0
   1400030d2:	dec    r10
   1400030d5:	add    r9b,0x30
   1400030d9:	lea    rax,[rsp+0x26]
   1400030de:	mov    BYTE PTR [r10],r9b
   1400030e1:	cmp    r10,rax
   1400030e4:	jae    0x140003116
   1400030e6:	mov    QWORD PTR [rsp+0x48],rbx
   1400030eb:	lea    rbx,[rsp+0x26]
   1400030f0:	mov    rdx,r10
   1400030f3:	sub    rbx,r10
   1400030f6:	mov    rcx,rdi
   1400030f9:	mov    r8,rbx
   1400030fc:	call   0x14002b9a0
   140003101:	add    rdi,rbx
   140003104:	mov    rbx,QWORD PTR [rsp+0x48]
   140003109:	jmp    0x140003116
   14000310b:	add    r9b,0x30
   14000310f:	inc    rdi
   140003112:	mov    BYTE PTR [rdi-0x1],r9b
   140003116:	sub    rdi,rsi
   140003119:	mov    eax,edi
   14000311b:	mov    rcx,QWORD PTR [rsp+0x28]
   140003120:	xor    rcx,rsp
   140003123:	call   0x14002b250
   140003128:	mov    rsi,QWORD PTR [rsp+0x50]
   14000312d:	add    rsp,0x30
   140003131:	pop    rdi
   140003132:	ret    
   140003133:	int3   
   140003134:	int3   
   140003135:	int3   
   140003136:	int3   
   140003137:	int3   
   140003138:	int3   
   140003139:	int3   
   14000313a:	int3   
   14000313b:	int3   
   14000313c:	int3   
   14000313d:	int3   
   14000313e:	int3   
   14000313f:	int3   
   140003140:	mov    rax,rsp
   140003143:	mov    QWORD PTR [rax+0x18],r8
   140003147:	mov    QWORD PTR [rax+0x10],rdx
   14000314b:	push   rbx
   14000314c:	push   rbp
   14000314d:	push   rsi
   14000314e:	push   rdi
   14000314f:	push   r12
   140003151:	push   r13
   140003153:	push   r14
   140003155:	push   r15
   140003157:	sub    rsp,0x58
   14000315b:	xor    ebp,ebp
   14000315d:	lea    r14,[rax-0x68]
   140003161:	mov    r15d,0x8
   140003167:	mov    edi,0x1
   14000316c:	mov    rbx,rcx
   14000316f:	lea    r9,[rip+0xffffffffffffce8a]        # 0x140000000
   140003176:	mov    QWORD PTR [rax-0x70],r14
   14000317a:	mov    DWORD PTR [rax+0x20],r15d
   14000317e:	mov    QWORD PTR [rax-0x68],rbp
   140003182:	mov    r12d,edi
   140003185:	mov    QWORD PTR [rax-0x60],rbp
   140003189:	mov    QWORD PTR [rax-0x58],rbp
   14000318d:	mov    QWORD PTR [rax-0x50],rbp
   140003191:	mov    DWORD PTR [rsp+0xa0],ebp
   140003198:	nop    DWORD PTR [rax+rax*1+0x0]
   1400031a0:	movsx  eax,BYTE PTR [rbx]
   1400031a3:	test   eax,eax
   1400031a5:	je     0x14000474d
   1400031ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400031b0:	inc    rbx
   1400031b3:	cmp    eax,0x25
   1400031b6:	je     0x1400031c4
   1400031b8:	movsx  eax,BYTE PTR [rbx]
   1400031bb:	test   eax,eax
   1400031bd:	jne    0x1400031b0
   1400031bf:	jmp    0x14000474d
   1400031c4:	xor    r13d,r13d
   1400031c7:	nop    WORD PTR [rax+rax*1+0x0]
   1400031d0:	movsx  edx,BYTE PTR [rbx]
   1400031d3:	inc    rbx
   1400031d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400031e0:	lea    eax,[rdx-0x20]
   1400031e3:	cmp    eax,0x5a
   1400031e6:	ja     0x140004740
   1400031ec:	cdqe   
   1400031ee:	movzx  eax,BYTE PTR [r9+rax*1+0x487c]
   1400031f7:	mov    ecx,DWORD PTR [r9+rax*4+0x4818]
   1400031ff:	add    rcx,r9
   140003202:	jmp    rcx
   140003204:	movsx  edx,BYTE PTR [rbx]
   140003207:	inc    rbx
   14000320a:	cmp    edx,0x2a
   14000320d:	je     0x140003255
   14000320f:	lea    eax,[rdx-0x30]
   140003212:	cmp    eax,0x9
   140003215:	ja     0x1400031e0
   140003217:	nop    WORD PTR [rax+rax*1+0x0]
   140003220:	movsx  edx,BYTE PTR [rbx]
   140003223:	inc    rbx
   140003226:	lea    eax,[rdx-0x30]
   140003229:	cmp    eax,0x9
   14000322c:	jbe    0x140003220
   14000322e:	jmp    0x1400031e0
   140003230:	xor    ecx,ecx
   140003232:	lea    eax,[rcx+rcx*4]
   140003235:	inc    rbx
   140003238:	lea    ecx,[rdx+rax*2-0x30]
   14000323c:	movsx  edx,BYTE PTR [rbx-0x1]
   140003240:	lea    eax,[rdx-0x30]
   140003243:	cmp    eax,0x9
   140003246:	jbe    0x140003232
   140003248:	cmp    edx,0x24
   14000324b:	jne    0x1400031e0
   14000324d:	mov    r12d,ecx
   140003250:	jmp    0x1400031d0
   140003255:	movsx  ecx,BYTE PTR [rbx]
   140003258:	xor    edi,edi
   14000325a:	mov    rsi,rbx
   14000325d:	lea    eax,[rcx-0x30]
   140003260:	cmp    eax,0x9
   140003263:	ja     0x140003285
   140003265:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003270:	lea    eax,[rdi+rdi*4]
   140003273:	inc    rsi
   140003276:	lea    edi,[rcx+rax*2-0x30]
   14000327a:	movsx  ecx,BYTE PTR [rsi]
   14000327d:	lea    eax,[rcx-0x30]
   140003280:	cmp    eax,0x9
   140003283:	jbe    0x140003270
   140003285:	cmp    BYTE PTR [rsi],0x24
   140003288:	je     0x14000338e
   14000328e:	cmp    r12d,r15d
   140003291:	jl     0x140003335
   140003297:	lea    ebp,[r15+r15*1]
   14000329b:	lea    eax,[r12+0x1]
   1400032a0:	cmp    ebp,eax
   1400032a2:	cmovl  ebp,eax
   1400032a5:	movsxd rdi,ebp
   1400032a8:	cmp    r15d,0x8
   1400032ac:	jne    0x1400032db
   1400032ae:	lea    rcx,[rdi*4+0x0]
   1400032b6:	call   0x14002c04c
   1400032bb:	mov    rsi,rax
   1400032be:	test   rax,rax
   1400032c1:	jne    0x1400032c8
   1400032c3:	call   0x14002adf4
   1400032c8:	mov    r8d,0x20
   1400032ce:	mov    rdx,r14
   1400032d1:	mov    rcx,rsi
   1400032d4:	call   0x14002b9a0
   1400032d9:	jmp    0x1400032f8
   1400032db:	lea    rdx,[rdi*4+0x0]
   1400032e3:	mov    rcx,r14
   1400032e6:	call   0x14002bf78
   1400032eb:	mov    rsi,rax
   1400032ee:	test   rax,rax
   1400032f1:	jne    0x1400032f8
   1400032f3:	call   0x14002adf4
   1400032f8:	movsxd rax,r15d
   1400032fb:	cmp    rax,rdi
   1400032fe:	jge    0x140003315
   140003300:	sub    rdi,rax
   140003303:	lea    rcx,[rsi+rax*4]
   140003307:	xor    edx,edx
   140003309:	shl    rdi,0x2
   14000330d:	mov    r8,rdi
   140003310:	call   0x14002b280
   140003315:	mov    r15d,ebp
   140003318:	mov    DWORD PTR [rsp+0xb8],ebp
   14000331f:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003326:	mov    r14,rsi
   140003329:	mov    QWORD PTR [rsp+0x28],rsi
   14000332e:	lea    r9,[rip+0xffffffffffffcccb]        # 0x140000000
   140003335:	cmp    r12d,ebp
   140003338:	movsxd rax,r12d
   14000333b:	cmovg  ebp,r12d
   14000333f:	mov    DWORD PTR [r14+rax*4],0x2
   140003347:	inc    r12d
   14000334a:	mov    DWORD PTR [rsp+0xa0],ebp
   140003351:	jmp    0x1400031d0
   140003356:	movsx  ecx,BYTE PTR [rbx]
   140003359:	xor    edi,edi
   14000335b:	mov    rsi,rbx
   14000335e:	lea    eax,[rcx-0x30]
   140003361:	cmp    eax,0x9
   140003364:	ja     0x140003385
   140003366:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003370:	lea    eax,[rdi+rdi*4]
   140003373:	inc    rsi
   140003376:	lea    edi,[rcx+rax*2-0x30]
   14000337a:	movsx  ecx,BYTE PTR [rsi]
   14000337d:	lea    eax,[rcx-0x30]
   140003380:	cmp    eax,0x9
   140003383:	jbe    0x140003370
   140003385:	cmp    BYTE PTR [rsi],0x24
   140003388:	jne    0x140003460
   14000338e:	cmp    edi,r15d
   140003391:	mov    DWORD PTR [rsp+0x20],r12d
   140003396:	jl     0x140003440
   14000339c:	lea    eax,[rdi+0x1]
   14000339f:	lea    r12d,[r15+r15*1]
   1400033a3:	cmp    r12d,eax
   1400033a6:	cmovl  r12d,eax
   1400033aa:	movsxd rbp,r12d
   1400033ad:	cmp    r15d,0x8
   1400033b1:	jne    0x1400033e0
   1400033b3:	lea    rcx,[rbp*4+0x0]
   1400033bb:	call   0x14002c04c
   1400033c0:	mov    rbx,rax
   1400033c3:	test   rax,rax
   1400033c6:	jne    0x1400033cd
   1400033c8:	call   0x14002adf4
   1400033cd:	mov    r8d,0x20
   1400033d3:	mov    rdx,r14
   1400033d6:	mov    rcx,rbx
   1400033d9:	call   0x14002b9a0
   1400033de:	jmp    0x1400033fd
   1400033e0:	lea    rdx,[rbp*4+0x0]
   1400033e8:	mov    rcx,r14
   1400033eb:	call   0x14002bf78
   1400033f0:	mov    rbx,rax
   1400033f3:	test   rax,rax
   1400033f6:	jne    0x1400033fd
   1400033f8:	call   0x14002adf4
   1400033fd:	movsxd rax,r15d
   140003400:	cmp    rax,rbp
   140003403:	jge    0x14000341a
   140003405:	sub    rbp,rax
   140003408:	lea    rcx,[rbx+rax*4]
   14000340c:	xor    edx,edx
   14000340e:	shl    rbp,0x2
   140003412:	mov    r8,rbp
   140003415:	call   0x14002b280
   14000341a:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003421:	mov    r15d,r12d
   140003424:	mov    DWORD PTR [rsp+0xb8],r12d
   14000342c:	mov    r12d,DWORD PTR [rsp+0x20]
   140003431:	mov    r14,rbx
   140003434:	mov    QWORD PTR [rsp+0x28],rbx
   140003439:	lea    r9,[rip+0xffffffffffffcbc0]        # 0x140000000
   140003440:	cmp    edi,ebp
   140003442:	movsxd rax,edi
   140003445:	lea    rbx,[rsi+0x1]
   140003449:	cmovg  ebp,edi
   14000344c:	mov    DWORD PTR [r14+rax*4],0x2
   140003454:	mov    DWORD PTR [rsp+0xa0],ebp
   14000345b:	jmp    0x1400031d0
   140003460:	cmp    r12d,r15d
   140003463:	jl     0x140003335
   140003469:	lea    ebp,[r15+r15*1]
   14000346d:	lea    eax,[r12+0x1]
   140003472:	cmp    ebp,eax
   140003474:	cmovl  ebp,eax
   140003477:	movsxd rdi,ebp
   14000347a:	cmp    r15d,0x8
   14000347e:	je     0x1400032ae
   140003484:	jmp    0x1400032db
   140003489:	test   r13b,0x40
   14000348d:	je     0x14000349d
   14000348f:	and    r13d,0xffffffbf
   140003493:	bts    r13d,0xd
   140003498:	jmp    0x1400031d0
   14000349d:	or     r13d,0x40
   1400034a1:	jmp    0x1400031d0
   1400034a6:	bts    r13d,0xc
   1400034ab:	jmp    0x1400031d0
   1400034b0:	movzx  eax,BYTE PTR [rbx]
   1400034b3:	cmp    al,0x36
   1400034b5:	jne    0x1400034ca
   1400034b7:	cmp    BYTE PTR [rbx+0x1],0x34
   1400034bb:	jne    0x1400034ca
   1400034bd:	add    rbx,0x2
   1400034c1:	or     r13d,0x20
   1400034c5:	jmp    0x1400031d0
   1400034ca:	cmp    al,0x33
   1400034cc:	jne    0x140003503
   1400034ce:	cmp    BYTE PTR [rbx+0x1],0x32
   1400034d2:	jne    0x140003503
   1400034d4:	add    rbx,0x2
   1400034d8:	jmp    0x1400031d0
   1400034dd:	test   r13b,0x10
   1400034e1:	je     0x1400034f0
   1400034e3:	and    r13d,0xffffffef
   1400034e7:	or     r13d,0x20
   1400034eb:	jmp    0x1400031d0
   1400034f0:	or     r13d,0x10
   1400034f4:	jmp    0x1400031d0
   1400034f9:	bts    r13d,0xb
   1400034fe:	jmp    0x1400031d0
   140003503:	bts    r13d,0xa
   140003508:	jmp    0x1400031d0
   14000350d:	or     r13d,0x10
   140003511:	test   r13b,0x10
   140003515:	je     0x1400035d2
   14000351b:	cmp    r12d,r15d
   14000351e:	jl     0x1400035c2
   140003524:	lea    ebp,[r15+r15*1]
   140003528:	lea    eax,[r12+0x1]
   14000352d:	cmp    ebp,eax
   14000352f:	cmovl  ebp,eax
   140003532:	movsxd rdi,ebp
   140003535:	cmp    r15d,0x8
   140003539:	jne    0x140003568
   14000353b:	lea    rcx,[rdi*4+0x0]
   140003543:	call   0x14002c04c
   140003548:	mov    rsi,rax
   14000354b:	test   rax,rax
   14000354e:	jne    0x140003555
   140003550:	call   0x14002adf4
   140003555:	mov    r8d,0x20
   14000355b:	mov    rdx,r14
   14000355e:	mov    rcx,rsi
   140003561:	call   0x14002b9a0
   140003566:	jmp    0x140003585
   140003568:	lea    rdx,[rdi*4+0x0]
   140003570:	mov    rcx,r14
   140003573:	call   0x14002bf78
   140003578:	mov    rsi,rax
   14000357b:	test   rax,rax
   14000357e:	jne    0x140003585
   140003580:	call   0x14002adf4
   140003585:	movsxd rax,r15d
   140003588:	cmp    rax,rdi
   14000358b:	jge    0x1400035a2
   14000358d:	sub    rdi,rax
   140003590:	lea    rcx,[rsi+rax*4]
   140003594:	xor    edx,edx
   140003596:	shl    rdi,0x2
   14000359a:	mov    r8,rdi
   14000359d:	call   0x14002b280
   1400035a2:	mov    r15d,ebp
   1400035a5:	mov    DWORD PTR [rsp+0xb8],ebp
   1400035ac:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400035b3:	mov    r14,rsi
   1400035b6:	mov    QWORD PTR [rsp+0x28],rsi
   1400035bb:	lea    r9,[rip+0xffffffffffffca3e]        # 0x140000000
   1400035c2:	movsxd rax,r12d
   1400035c5:	mov    DWORD PTR [r14+rax*4],0x17
   1400035cd:	jmp    0x140003684
   1400035d2:	cmp    r12d,r15d
   1400035d5:	jl     0x140003679
   1400035db:	lea    ebp,[r15+r15*1]
   1400035df:	lea    eax,[r12+0x1]
   1400035e4:	cmp    ebp,eax
   1400035e6:	cmovl  ebp,eax
   1400035e9:	movsxd rdi,ebp
   1400035ec:	cmp    r15d,0x8
   1400035f0:	jne    0x14000361f
   1400035f2:	lea    rcx,[rdi*4+0x0]
   1400035fa:	call   0x14002c04c
   1400035ff:	mov    rsi,rax
   140003602:	test   rax,rax
   140003605:	jne    0x14000360c
   140003607:	call   0x14002adf4
   14000360c:	mov    r8d,0x20
   140003612:	mov    rdx,r14
   140003615:	mov    rcx,rsi
   140003618:	call   0x14002b9a0
   14000361d:	jmp    0x14000363c
   14000361f:	lea    rdx,[rdi*4+0x0]
   140003627:	mov    rcx,r14
   14000362a:	call   0x14002bf78
   14000362f:	mov    rsi,rax
   140003632:	test   rax,rax
   140003635:	jne    0x14000363c
   140003637:	call   0x14002adf4
   14000363c:	movsxd rax,r15d
   14000363f:	cmp    rax,rdi
   140003642:	jge    0x140003659
   140003644:	sub    rdi,rax
   140003647:	lea    rcx,[rsi+rax*4]
   14000364b:	xor    edx,edx
   14000364d:	shl    rdi,0x2
   140003651:	mov    r8,rdi
   140003654:	call   0x14002b280
   140003659:	mov    r15d,ebp
   14000365c:	mov    DWORD PTR [rsp+0xb8],ebp
   140003663:	mov    ebp,DWORD PTR [rsp+0xa0]
   14000366a:	mov    r14,rsi
   14000366d:	mov    QWORD PTR [rsp+0x28],rsi
   140003672:	lea    r9,[rip+0xffffffffffffc987]        # 0x140000000
   140003679:	movsxd rax,r12d
   14000367c:	mov    DWORD PTR [r14+rax*4],0x2
   140003684:	cmp    r12d,ebp
   140003687:	mov    edi,0x1
   14000368c:	cmovg  ebp,r12d
   140003690:	inc    r12d
   140003693:	jmp    0x140003191
   140003698:	or     r13d,0x10
   14000369c:	bt     r13d,0xc
   1400036a1:	jae    0x14000375e
   1400036a7:	cmp    r12d,r15d
   1400036aa:	jl     0x14000374e
   1400036b0:	lea    ebp,[r15+r15*1]
   1400036b4:	lea    eax,[r12+0x1]
   1400036b9:	cmp    ebp,eax
   1400036bb:	cmovl  ebp,eax
   1400036be:	movsxd rdi,ebp
   1400036c1:	cmp    r15d,0x8
   1400036c5:	jne    0x1400036f4
   1400036c7:	lea    rcx,[rdi*4+0x0]
   1400036cf:	call   0x14002c04c
   1400036d4:	mov    rsi,rax
   1400036d7:	test   rax,rax
   1400036da:	jne    0x1400036e1
   1400036dc:	call   0x14002adf4
   1400036e1:	mov    r8d,0x20
   1400036e7:	mov    rdx,r14
   1400036ea:	mov    rcx,rsi
   1400036ed:	call   0x14002b9a0
   1400036f2:	jmp    0x140003711
   1400036f4:	lea    rdx,[rdi*4+0x0]
   1400036fc:	mov    rcx,r14
   1400036ff:	call   0x14002bf78
   140003704:	mov    rsi,rax
   140003707:	test   rax,rax
   14000370a:	jne    0x140003711
   14000370c:	call   0x14002adf4
   140003711:	movsxd rax,r15d
   140003714:	cmp    rax,rdi
   140003717:	jge    0x14000372e
   140003719:	sub    rdi,rax
   14000371c:	lea    rcx,[rsi+rax*4]
   140003720:	xor    edx,edx
   140003722:	shl    rdi,0x2
   140003726:	mov    r8,rdi
   140003729:	call   0x14002b280
   14000372e:	mov    r15d,ebp
   140003731:	mov    DWORD PTR [rsp+0xb8],ebp
   140003738:	mov    ebp,DWORD PTR [rsp+0xa0]
   14000373f:	mov    r14,rsi
   140003742:	mov    QWORD PTR [rsp+0x28],rsi
   140003747:	lea    r9,[rip+0xffffffffffffc8b2]        # 0x140000000
   14000374e:	movsxd rax,r12d
   140003751:	mov    DWORD PTR [r14+rax*4],0xf
   140003759:	jmp    0x140003684
   14000375e:	bt     r13d,0xa
   140003763:	jae    0x140003820
   140003769:	cmp    r12d,r15d
   14000376c:	jl     0x140003810
   140003772:	lea    ebp,[r15+r15*1]
   140003776:	lea    eax,[r12+0x1]
   14000377b:	cmp    ebp,eax
   14000377d:	cmovl  ebp,eax
   140003780:	movsxd rdi,ebp
   140003783:	cmp    r15d,0x8
   140003787:	jne    0x1400037b6
   140003789:	lea    rcx,[rdi*4+0x0]
   140003791:	call   0x14002c04c
   140003796:	mov    rsi,rax
   140003799:	test   rax,rax
   14000379c:	jne    0x1400037a3
   14000379e:	call   0x14002adf4
   1400037a3:	mov    r8d,0x20
   1400037a9:	mov    rdx,r14
   1400037ac:	mov    rcx,rsi
   1400037af:	call   0x14002b9a0
   1400037b4:	jmp    0x1400037d3
   1400037b6:	lea    rdx,[rdi*4+0x0]
   1400037be:	mov    rcx,r14
   1400037c1:	call   0x14002bf78
   1400037c6:	mov    rsi,rax
   1400037c9:	test   rax,rax
   1400037cc:	jne    0x1400037d3
   1400037ce:	call   0x14002adf4
   1400037d3:	movsxd rax,r15d
   1400037d6:	cmp    rax,rdi
   1400037d9:	jge    0x1400037f0
   1400037db:	sub    rdi,rax
   1400037de:	lea    rcx,[rsi+rax*4]
   1400037e2:	xor    edx,edx
   1400037e4:	shl    rdi,0x2
   1400037e8:	mov    r8,rdi
   1400037eb:	call   0x14002b280
   1400037f0:	mov    r15d,ebp
   1400037f3:	mov    DWORD PTR [rsp+0xb8],ebp
   1400037fa:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003801:	mov    r14,rsi
   140003804:	mov    QWORD PTR [rsp+0x28],rsi
   140003809:	lea    r9,[rip+0xffffffffffffc7f0]        # 0x140000000
   140003810:	movsxd rax,r12d
   140003813:	mov    DWORD PTR [r14+rax*4],0xd
   14000381b:	jmp    0x140003684
   140003820:	bt     r13d,0xb
   140003825:	jae    0x1400038e2
   14000382b:	cmp    r12d,r15d
   14000382e:	jl     0x1400038d2
   140003834:	lea    ebp,[r15+r15*1]
   140003838:	lea    eax,[r12+0x1]
   14000383d:	cmp    ebp,eax
   14000383f:	cmovl  ebp,eax
   140003842:	movsxd rdi,ebp
   140003845:	cmp    r15d,0x8
   140003849:	jne    0x140003878
   14000384b:	lea    rcx,[rdi*4+0x0]
   140003853:	call   0x14002c04c
   140003858:	mov    rsi,rax
   14000385b:	test   rax,rax
   14000385e:	jne    0x140003865
   140003860:	call   0x14002adf4
   140003865:	mov    r8d,0x20
   14000386b:	mov    rdx,r14
   14000386e:	mov    rcx,rsi
   140003871:	call   0x14002b9a0
   140003876:	jmp    0x140003895
   140003878:	lea    rdx,[rdi*4+0x0]
   140003880:	mov    rcx,r14
   140003883:	call   0x14002bf78
   140003888:	mov    rsi,rax
   14000388b:	test   rax,rax
   14000388e:	jne    0x140003895
   140003890:	call   0x14002adf4
   140003895:	movsxd rax,r15d
   140003898:	cmp    rax,rdi
   14000389b:	jge    0x1400038b2
   14000389d:	sub    rdi,rax
   1400038a0:	lea    rcx,[rsi+rax*4]
   1400038a4:	xor    edx,edx
   1400038a6:	shl    rdi,0x2
   1400038aa:	mov    r8,rdi
   1400038ad:	call   0x14002b280
   1400038b2:	mov    r15d,ebp
   1400038b5:	mov    DWORD PTR [rsp+0xb8],ebp
   1400038bc:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400038c3:	mov    r14,rsi
   1400038c6:	mov    QWORD PTR [rsp+0x28],rsi
   1400038cb:	lea    r9,[rip+0xffffffffffffc72e]        # 0x140000000
   1400038d2:	movsxd rax,r12d
   1400038d5:	mov    DWORD PTR [r14+rax*4],0xb
   1400038dd:	jmp    0x140003684
   1400038e2:	test   r13b,0x20
   1400038e6:	je     0x1400039a3
   1400038ec:	cmp    r12d,r15d
   1400038ef:	jl     0x140003993
   1400038f5:	lea    ebp,[r15+r15*1]
   1400038f9:	lea    eax,[r12+0x1]
   1400038fe:	cmp    ebp,eax
   140003900:	cmovl  ebp,eax
   140003903:	movsxd rdi,ebp
   140003906:	cmp    r15d,0x8
   14000390a:	jne    0x140003939
   14000390c:	lea    rcx,[rdi*4+0x0]
   140003914:	call   0x14002c04c
   140003919:	mov    rsi,rax
   14000391c:	test   rax,rax
   14000391f:	jne    0x140003926
   140003921:	call   0x14002adf4
   140003926:	mov    r8d,0x20
   14000392c:	mov    rdx,r14
   14000392f:	mov    rcx,rsi
   140003932:	call   0x14002b9a0
   140003937:	jmp    0x140003956
   140003939:	lea    rdx,[rdi*4+0x0]
   140003941:	mov    rcx,r14
   140003944:	call   0x14002bf78
   140003949:	mov    rsi,rax
   14000394c:	test   rax,rax
   14000394f:	jne    0x140003956
   140003951:	call   0x14002adf4
   140003956:	movsxd rax,r15d
   140003959:	cmp    rax,rdi
   14000395c:	jge    0x140003973
   14000395e:	sub    rdi,rax
   140003961:	lea    rcx,[rsi+rax*4]
   140003965:	xor    edx,edx
   140003967:	shl    rdi,0x2
   14000396b:	mov    r8,rdi
   14000396e:	call   0x14002b280
   140003973:	mov    r15d,ebp
   140003976:	mov    DWORD PTR [rsp+0xb8],ebp
   14000397d:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003984:	mov    r14,rsi
   140003987:	mov    QWORD PTR [rsp+0x28],rsi
   14000398c:	lea    r9,[rip+0xffffffffffffc66d]        # 0x140000000
   140003993:	movsxd rax,r12d
   140003996:	mov    DWORD PTR [r14+rax*4],0x8
   14000399e:	jmp    0x140003684
   1400039a3:	test   r13b,0x10
   1400039a7:	je     0x140003a64
   1400039ad:	cmp    r12d,r15d
   1400039b0:	jl     0x140003a54
   1400039b6:	lea    ebp,[r15+r15*1]
   1400039ba:	lea    eax,[r12+0x1]
   1400039bf:	cmp    ebp,eax
   1400039c1:	cmovl  ebp,eax
   1400039c4:	movsxd rdi,ebp
   1400039c7:	cmp    r15d,0x8
   1400039cb:	jne    0x1400039fa
   1400039cd:	lea    rcx,[rdi*4+0x0]
   1400039d5:	call   0x14002c04c
   1400039da:	mov    rsi,rax
   1400039dd:	test   rax,rax
   1400039e0:	jne    0x1400039e7
   1400039e2:	call   0x14002adf4
   1400039e7:	mov    r8d,0x20
   1400039ed:	mov    rdx,r14
   1400039f0:	mov    rcx,rsi
   1400039f3:	call   0x14002b9a0
   1400039f8:	jmp    0x140003a17
   1400039fa:	lea    rdx,[rdi*4+0x0]
   140003a02:	mov    rcx,r14
   140003a05:	call   0x14002bf78
   140003a0a:	mov    rsi,rax
   140003a0d:	test   rax,rax
   140003a10:	jne    0x140003a17
   140003a12:	call   0x14002adf4
   140003a17:	movsxd rax,r15d
   140003a1a:	cmp    rax,rdi
   140003a1d:	jge    0x140003a34
   140003a1f:	sub    rdi,rax
   140003a22:	lea    rcx,[rsi+rax*4]
   140003a26:	xor    edx,edx
   140003a28:	shl    rdi,0x2
   140003a2c:	mov    r8,rdi
   140003a2f:	call   0x14002b280
   140003a34:	mov    r15d,ebp
   140003a37:	mov    DWORD PTR [rsp+0xb8],ebp
   140003a3e:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003a45:	mov    r14,rsi
   140003a48:	mov    QWORD PTR [rsp+0x28],rsi
   140003a4d:	lea    r9,[rip+0xffffffffffffc5ac]        # 0x140000000
   140003a54:	movsxd rax,r12d
   140003a57:	mov    DWORD PTR [r14+rax*4],0x5
   140003a5f:	jmp    0x140003684
   140003a64:	cmp    r12d,r15d
   140003a67:	jl     0x140003679
   140003a6d:	lea    ebp,[r15+r15*1]
   140003a71:	lea    eax,[r12+0x1]
   140003a76:	cmp    ebp,eax
   140003a78:	cmovl  ebp,eax
   140003a7b:	movsxd rdi,ebp
   140003a7e:	cmp    r15d,0x8
   140003a82:	je     0x1400035f2
   140003a88:	jmp    0x14000361f
   140003a8d:	test   r13b,0x20
   140003a91:	je     0x140003b4e
   140003a97:	cmp    r12d,r15d
   140003a9a:	jl     0x140003b3e
   140003aa0:	lea    ebp,[r15+r15*1]
   140003aa4:	lea    eax,[r12+0x1]
   140003aa9:	cmp    ebp,eax
   140003aab:	cmovl  ebp,eax
   140003aae:	movsxd rdi,ebp
   140003ab1:	cmp    r15d,0x8
   140003ab5:	jne    0x140003ae4
   140003ab7:	lea    rcx,[rdi*4+0x0]
   140003abf:	call   0x14002c04c
   140003ac4:	mov    rsi,rax
   140003ac7:	test   rax,rax
   140003aca:	jne    0x140003ad1
   140003acc:	call   0x14002adf4
   140003ad1:	mov    r8d,0x20
   140003ad7:	mov    rdx,r14
   140003ada:	mov    rcx,rsi
   140003add:	call   0x14002b9a0
   140003ae2:	jmp    0x140003b01
   140003ae4:	lea    rdx,[rdi*4+0x0]
   140003aec:	mov    rcx,r14
   140003aef:	call   0x14002bf78
   140003af4:	mov    rsi,rax
   140003af7:	test   rax,rax
   140003afa:	jne    0x140003b01
   140003afc:	call   0x14002adf4
   140003b01:	movsxd rax,r15d
   140003b04:	cmp    rax,rdi
   140003b07:	jge    0x140003b1e
   140003b09:	sub    rdi,rax
   140003b0c:	lea    rcx,[rsi+rax*4]
   140003b10:	xor    edx,edx
   140003b12:	shl    rdi,0x2
   140003b16:	mov    r8,rdi
   140003b19:	call   0x14002b280
   140003b1e:	mov    r15d,ebp
   140003b21:	mov    DWORD PTR [rsp+0xb8],ebp
   140003b28:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003b2f:	mov    r14,rsi
   140003b32:	mov    QWORD PTR [rsp+0x28],rsi
   140003b37:	lea    r9,[rip+0xffffffffffffc4c2]        # 0x140000000
   140003b3e:	movsxd rax,r12d
   140003b41:	mov    DWORD PTR [r14+rax*4],0x16
   140003b49:	jmp    0x140003684
   140003b4e:	cmp    r12d,r15d
   140003b51:	jl     0x140003bf5
   140003b57:	lea    ebp,[r15+r15*1]
   140003b5b:	lea    eax,[r12+0x1]
   140003b60:	cmp    ebp,eax
   140003b62:	cmovl  ebp,eax
   140003b65:	movsxd rdi,ebp
   140003b68:	cmp    r15d,0x8
   140003b6c:	jne    0x140003b9b
   140003b6e:	lea    rcx,[rdi*4+0x0]
   140003b76:	call   0x14002c04c
   140003b7b:	mov    rsi,rax
   140003b7e:	test   rax,rax
   140003b81:	jne    0x140003b88
   140003b83:	call   0x14002adf4
   140003b88:	mov    r8d,0x20
   140003b8e:	mov    rdx,r14
   140003b91:	mov    rcx,rsi
   140003b94:	call   0x14002b9a0
   140003b99:	jmp    0x140003bb8
   140003b9b:	lea    rdx,[rdi*4+0x0]
   140003ba3:	mov    rcx,r14
   140003ba6:	call   0x14002bf78
   140003bab:	mov    rsi,rax
   140003bae:	test   rax,rax
   140003bb1:	jne    0x140003bb8
   140003bb3:	call   0x14002adf4
   140003bb8:	movsxd rax,r15d
   140003bbb:	cmp    rax,rdi
   140003bbe:	jge    0x140003bd5
   140003bc0:	sub    rdi,rax
   140003bc3:	lea    rcx,[rsi+rax*4]
   140003bc7:	xor    edx,edx
   140003bc9:	shl    rdi,0x2
   140003bcd:	mov    r8,rdi
   140003bd0:	call   0x14002b280
   140003bd5:	mov    r15d,ebp
   140003bd8:	mov    DWORD PTR [rsp+0xb8],ebp
   140003bdf:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003be6:	mov    r14,rsi
   140003be9:	mov    QWORD PTR [rsp+0x28],rsi
   140003bee:	lea    r9,[rip+0xffffffffffffc40b]        # 0x140000000
   140003bf5:	movsxd rax,r12d
   140003bf8:	mov    DWORD PTR [r14+rax*4],0x15
   140003c00:	jmp    0x140003684
   140003c05:	bt     r13d,0xc
   140003c0a:	jae    0x140003cd6
   140003c10:	cmp    r12d,r15d
   140003c13:	jl     0x140003cb7
   140003c19:	lea    ebp,[r15+r15*1]
   140003c1d:	lea    eax,[r12+0x1]
   140003c22:	cmp    ebp,eax
   140003c24:	cmovl  ebp,eax
   140003c27:	movsxd rdi,ebp
   140003c2a:	cmp    r15d,0x8
   140003c2e:	jne    0x140003c5d
   140003c30:	lea    rcx,[rdi*4+0x0]
   140003c38:	call   0x14002c04c
   140003c3d:	mov    rsi,rax
   140003c40:	test   rax,rax
   140003c43:	jne    0x140003c4a
   140003c45:	call   0x14002adf4
   140003c4a:	mov    r8d,0x20
   140003c50:	mov    rdx,r14
   140003c53:	mov    rcx,rsi
   140003c56:	call   0x14002b9a0
   140003c5b:	jmp    0x140003c7a
   140003c5d:	lea    rdx,[rdi*4+0x0]
   140003c65:	mov    rcx,r14
   140003c68:	call   0x14002bf78
   140003c6d:	mov    rsi,rax
   140003c70:	test   rax,rax
   140003c73:	jne    0x140003c7a
   140003c75:	call   0x14002adf4
   140003c7a:	movsxd rax,r15d
   140003c7d:	cmp    rax,rdi
   140003c80:	jge    0x140003c97
   140003c82:	sub    rdi,rax
   140003c85:	lea    rcx,[rsi+rax*4]
   140003c89:	xor    edx,edx
   140003c8b:	shl    rdi,0x2
   140003c8f:	mov    r8,rdi
   140003c92:	call   0x14002b280
   140003c97:	mov    r15d,ebp
   140003c9a:	mov    DWORD PTR [rsp+0xb8],ebp
   140003ca1:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003ca8:	mov    r14,rsi
   140003cab:	mov    QWORD PTR [rsp+0x28],rsi
   140003cb0:	lea    r9,[rip+0xffffffffffffc349]        # 0x140000000
   140003cb7:	cmp    r12d,ebp
   140003cba:	movsxd rax,r12d
   140003cbd:	mov    edi,0x1
   140003cc2:	cmovg  ebp,r12d
   140003cc6:	mov    DWORD PTR [r14+rax*4],0x11
   140003cce:	inc    r12d
   140003cd1:	jmp    0x140003191
   140003cd6:	bt     r13d,0xb
   140003cdb:	jae    0x140003da7
   140003ce1:	cmp    r12d,r15d
   140003ce4:	jl     0x140003d88
   140003cea:	lea    ebp,[r15+r15*1]
   140003cee:	lea    eax,[r12+0x1]
   140003cf3:	cmp    ebp,eax
   140003cf5:	cmovl  ebp,eax
   140003cf8:	movsxd rdi,ebp
   140003cfb:	cmp    r15d,0x8
   140003cff:	jne    0x140003d2e
   140003d01:	lea    rcx,[rdi*4+0x0]
   140003d09:	call   0x14002c04c
   140003d0e:	mov    rsi,rax
   140003d11:	test   rax,rax
   140003d14:	jne    0x140003d1b
   140003d16:	call   0x14002adf4
   140003d1b:	mov    r8d,0x20
   140003d21:	mov    rdx,r14
   140003d24:	mov    rcx,rsi
   140003d27:	call   0x14002b9a0
   140003d2c:	jmp    0x140003d4b
   140003d2e:	lea    rdx,[rdi*4+0x0]
   140003d36:	mov    rcx,r14
   140003d39:	call   0x14002bf78
   140003d3e:	mov    rsi,rax
   140003d41:	test   rax,rax
   140003d44:	jne    0x140003d4b
   140003d46:	call   0x14002adf4
   140003d4b:	movsxd rax,r15d
   140003d4e:	cmp    rax,rdi
   140003d51:	jge    0x140003d68
   140003d53:	sub    rdi,rax
   140003d56:	lea    rcx,[rsi+rax*4]
   140003d5a:	xor    edx,edx
   140003d5c:	shl    rdi,0x2
   140003d60:	mov    r8,rdi
   140003d63:	call   0x14002b280
   140003d68:	mov    r15d,ebp
   140003d6b:	mov    DWORD PTR [rsp+0xb8],ebp
   140003d72:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003d79:	mov    r14,rsi
   140003d7c:	mov    QWORD PTR [rsp+0x28],rsi
   140003d81:	lea    r9,[rip+0xffffffffffffc278]        # 0x140000000
   140003d88:	cmp    r12d,ebp
   140003d8b:	movsxd rax,r12d
   140003d8e:	mov    edi,0x1
   140003d93:	cmovg  ebp,r12d
   140003d97:	mov    DWORD PTR [r14+rax*4],0xc
   140003d9f:	inc    r12d
   140003da2:	jmp    0x140003191
   140003da7:	bt     r13d,0xa
   140003dac:	jae    0x140003e78
   140003db2:	cmp    r12d,r15d
   140003db5:	jl     0x140003e59
   140003dbb:	lea    ebp,[r15+r15*1]
   140003dbf:	lea    eax,[r12+0x1]
   140003dc4:	cmp    ebp,eax
   140003dc6:	cmovl  ebp,eax
   140003dc9:	movsxd rdi,ebp
   140003dcc:	cmp    r15d,0x8
   140003dd0:	jne    0x140003dff
   140003dd2:	lea    rcx,[rdi*4+0x0]
   140003dda:	call   0x14002c04c
   140003ddf:	mov    rsi,rax
   140003de2:	test   rax,rax
   140003de5:	jne    0x140003dec
   140003de7:	call   0x14002adf4
   140003dec:	mov    r8d,0x20
   140003df2:	mov    rdx,r14
   140003df5:	mov    rcx,rsi
   140003df8:	call   0x14002b9a0
   140003dfd:	jmp    0x140003e1c
   140003dff:	lea    rdx,[rdi*4+0x0]
   140003e07:	mov    rcx,r14
   140003e0a:	call   0x14002bf78
   140003e0f:	mov    rsi,rax
   140003e12:	test   rax,rax
   140003e15:	jne    0x140003e1c
   140003e17:	call   0x14002adf4
   140003e1c:	movsxd rax,r15d
   140003e1f:	cmp    rax,rdi
   140003e22:	jge    0x140003e39
   140003e24:	sub    rdi,rax
   140003e27:	lea    rcx,[rsi+rax*4]
   140003e2b:	xor    edx,edx
   140003e2d:	shl    rdi,0x2
   140003e31:	mov    r8,rdi
   140003e34:	call   0x14002b280
   140003e39:	mov    r15d,ebp
   140003e3c:	mov    DWORD PTR [rsp+0xb8],ebp
   140003e43:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003e4a:	mov    r14,rsi
   140003e4d:	mov    QWORD PTR [rsp+0x28],rsi
   140003e52:	lea    r9,[rip+0xffffffffffffc1a7]        # 0x140000000
   140003e59:	cmp    r12d,ebp
   140003e5c:	movsxd rax,r12d
   140003e5f:	mov    edi,0x1
   140003e64:	cmovg  ebp,r12d
   140003e68:	mov    DWORD PTR [r14+rax*4],0xe
   140003e70:	inc    r12d
   140003e73:	jmp    0x140003191
   140003e78:	test   r13b,0x20
   140003e7c:	je     0x140003f48
   140003e82:	cmp    r12d,r15d
   140003e85:	jl     0x140003f29
   140003e8b:	lea    ebp,[r15+r15*1]
   140003e8f:	lea    eax,[r12+0x1]
   140003e94:	cmp    ebp,eax
   140003e96:	cmovl  ebp,eax
   140003e99:	movsxd rdi,ebp
   140003e9c:	cmp    r15d,0x8
   140003ea0:	jne    0x140003ecf
   140003ea2:	lea    rcx,[rdi*4+0x0]
   140003eaa:	call   0x14002c04c
   140003eaf:	mov    rsi,rax
   140003eb2:	test   rax,rax
   140003eb5:	jne    0x140003ebc
   140003eb7:	call   0x14002adf4
   140003ebc:	mov    r8d,0x20
   140003ec2:	mov    rdx,r14
   140003ec5:	mov    rcx,rsi
   140003ec8:	call   0x14002b9a0
   140003ecd:	jmp    0x140003eec
   140003ecf:	lea    rdx,[rdi*4+0x0]
   140003ed7:	mov    rcx,r14
   140003eda:	call   0x14002bf78
   140003edf:	mov    rsi,rax
   140003ee2:	test   rax,rax
   140003ee5:	jne    0x140003eec
   140003ee7:	call   0x14002adf4
   140003eec:	movsxd rax,r15d
   140003eef:	cmp    rax,rdi
   140003ef2:	jge    0x140003f09
   140003ef4:	sub    rdi,rax
   140003ef7:	lea    rcx,[rsi+rax*4]
   140003efb:	xor    edx,edx
   140003efd:	shl    rdi,0x2
   140003f01:	mov    r8,rdi
   140003f04:	call   0x14002b280
   140003f09:	mov    r15d,ebp
   140003f0c:	mov    DWORD PTR [rsp+0xb8],ebp
   140003f13:	mov    ebp,DWORD PTR [rsp+0xa0]
   140003f1a:	mov    r14,rsi
   140003f1d:	mov    QWORD PTR [rsp+0x28],rsi
   140003f22:	lea    r9,[rip+0xffffffffffffc0d7]        # 0x140000000
   140003f29:	cmp    r12d,ebp
   140003f2c:	movsxd rax,r12d
   140003f2f:	mov    edi,0x1
   140003f34:	cmovg  ebp,r12d
   140003f38:	mov    DWORD PTR [r14+rax*4],0xa
   140003f40:	inc    r12d
   140003f43:	jmp    0x140003191
   140003f48:	test   r13b,0x10
   140003f4c:	je     0x140003f9b
   140003f4e:	cmp    r12d,r15d
   140003f51:	jl     0x140003f7c
   140003f53:	lea    r8,[rsp+0xb8]
   140003f5b:	lea    rdx,[rsp+0x28]
   140003f60:	mov    ecx,r12d
   140003f63:	call   0x140002f70
   140003f68:	mov    r14,QWORD PTR [rsp+0x28]
   140003f6d:	mov    r15d,DWORD PTR [rsp+0xb8]
   140003f75:	lea    r9,[rip+0xffffffffffffc084]        # 0x140000000
   140003f7c:	cmp    r12d,ebp
   140003f7f:	movsxd rax,r12d
   140003f82:	mov    edi,0x1
   140003f87:	cmovg  ebp,r12d
   140003f8b:	mov    DWORD PTR [r14+rax*4],0x7
   140003f93:	inc    r12d
   140003f96:	jmp    0x140003191
   140003f9b:	test   r13b,0x40
   140003f9f:	je     0x140003fea
   140003fa1:	cmp    r12d,r15d
   140003fa4:	jl     0x140003fcf
   140003fa6:	lea    r8,[rsp+0xb8]
   140003fae:	lea    rdx,[rsp+0x28]
   140003fb3:	mov    ecx,r12d
   140003fb6:	call   0x140002f70
   140003fbb:	mov    r14,QWORD PTR [rsp+0x28]
   140003fc0:	mov    r15d,DWORD PTR [rsp+0xb8]
   140003fc8:	lea    r9,[rip+0xffffffffffffc031]        # 0x140000000
   140003fcf:	cmp    r12d,ebp
   140003fd2:	movsxd rax,r12d
   140003fd5:	mov    edi,0x1
   140003fda:	cmovg  ebp,r12d
   140003fde:	mov    DWORD PTR [r14+rax*4],edi
   140003fe2:	inc    r12d
   140003fe5:	jmp    0x140003191
   140003fea:	bt     r13d,0xd
   140003fef:	jae    0x14000403e
   140003ff1:	cmp    r12d,r15d
   140003ff4:	jl     0x14000401f
   140003ff6:	lea    r8,[rsp+0xb8]
   140003ffe:	lea    rdx,[rsp+0x28]
   140004003:	mov    ecx,r12d
   140004006:	call   0x140002f70
   14000400b:	mov    r14,QWORD PTR [rsp+0x28]
   140004010:	mov    r15d,DWORD PTR [rsp+0xb8]
   140004018:	lea    r9,[rip+0xffffffffffffbfe1]        # 0x140000000
   14000401f:	cmp    r12d,ebp
   140004022:	movsxd rax,r12d
   140004025:	mov    edi,0x1
   14000402a:	cmovg  ebp,r12d
   14000402e:	mov    DWORD PTR [r14+rax*4],0x14
   140004036:	inc    r12d
   140004039:	jmp    0x140003191
   14000403e:	cmp    r12d,r15d
   140004041:	jl     0x14000406c
   140004043:	lea    r8,[rsp+0xb8]
   14000404b:	lea    rdx,[rsp+0x28]
   140004050:	mov    ecx,r12d
   140004053:	call   0x140002f70
   140004058:	mov    r14,QWORD PTR [rsp+0x28]
   14000405d:	mov    r15d,DWORD PTR [rsp+0xb8]
   140004065:	lea    r9,[rip+0xffffffffffffbf94]        # 0x140000000
   14000406c:	cmp    r12d,ebp
   14000406f:	movsxd rax,r12d
   140004072:	mov    edi,0x1
   140004077:	cmovg  ebp,r12d
   14000407b:	mov    DWORD PTR [r14+rax*4],0x4
   140004083:	inc    r12d
   140004086:	jmp    0x140003191
   14000408b:	or     r13d,0x10
   14000408f:	bt     r13d,0xc
   140004094:	jae    0x140004151
   14000409a:	cmp    r12d,r15d
   14000409d:	jl     0x140004141
   1400040a3:	lea    ebp,[r15+r15*1]
   1400040a7:	lea    eax,[r12+0x1]
   1400040ac:	cmp    ebp,eax
   1400040ae:	cmovl  ebp,eax
   1400040b1:	movsxd rdi,ebp
   1400040b4:	cmp    r15d,0x8
   1400040b8:	jne    0x1400040e7
   1400040ba:	lea    rcx,[rdi*4+0x0]
   1400040c2:	call   0x14002c04c
   1400040c7:	mov    rsi,rax
   1400040ca:	test   rax,rax
   1400040cd:	jne    0x1400040d4
   1400040cf:	call   0x14002adf4
   1400040d4:	mov    r8d,0x20
   1400040da:	mov    rdx,r14
   1400040dd:	mov    rcx,rsi
   1400040e0:	call   0x14002b9a0
   1400040e5:	jmp    0x140004104
   1400040e7:	lea    rdx,[rdi*4+0x0]
   1400040ef:	mov    rcx,r14
   1400040f2:	call   0x14002bf78
   1400040f7:	mov    rsi,rax
   1400040fa:	test   rax,rax
   1400040fd:	jne    0x140004104
   1400040ff:	call   0x14002adf4
   140004104:	movsxd rax,r15d
   140004107:	cmp    rax,rdi
   14000410a:	jge    0x140004121
   14000410c:	sub    rdi,rax
   14000410f:	lea    rcx,[rsi+rax*4]
   140004113:	xor    edx,edx
   140004115:	shl    rdi,0x2
   140004119:	mov    r8,rdi
   14000411c:	call   0x14002b280
   140004121:	mov    r15d,ebp
   140004124:	mov    DWORD PTR [rsp+0xb8],ebp
   14000412b:	mov    ebp,DWORD PTR [rsp+0xa0]
   140004132:	mov    r14,rsi
   140004135:	mov    QWORD PTR [rsp+0x28],rsi
   14000413a:	lea    r9,[rip+0xffffffffffffbebf]        # 0x140000000
   140004141:	movsxd rax,r12d
   140004144:	mov    DWORD PTR [r14+rax*4],0x10
   14000414c:	jmp    0x140003684
   140004151:	bt     r13d,0xa
   140004156:	jae    0x140004185
   140004158:	cmp    r12d,r15d
   14000415b:	jl     0x140003810
   140004161:	lea    ebp,[r15+r15*1]
   140004165:	lea    eax,[r12+0x1]
   14000416a:	cmp    ebp,eax
   14000416c:	cmovl  ebp,eax
   14000416f:	cmp    r15d,0x8
   140004173:	jne    0x14000417d
   140004175:	movsxd rdi,ebp
   140004178:	jmp    0x140003789
   14000417d:	movsxd rdi,ebp
   140004180:	jmp    0x1400037b6
   140004185:	bt     r13d,0xb
   14000418a:	jae    0x1400041b9
   14000418c:	cmp    r12d,r15d
   14000418f:	jl     0x1400038d2
   140004195:	lea    ebp,[r15+r15*1]
   140004199:	lea    eax,[r12+0x1]
   14000419e:	cmp    ebp,eax
   1400041a0:	cmovl  ebp,eax
   1400041a3:	cmp    r15d,0x8
   1400041a7:	jne    0x1400041b1
   1400041a9:	movsxd rdi,ebp
   1400041ac:	jmp    0x14000384b
   1400041b1:	movsxd rdi,ebp
   1400041b4:	jmp    0x140003878
   1400041b9:	test   r13b,0x20
   1400041bd:	je     0x14000427a
   1400041c3:	cmp    r12d,r15d
   1400041c6:	jl     0x14000426a
   1400041cc:	lea    ebp,[r15+r15*1]
   1400041d0:	lea    eax,[r12+0x1]
   1400041d5:	cmp    ebp,eax
   1400041d7:	cmovl  ebp,eax
   1400041da:	movsxd rdi,ebp
   1400041dd:	cmp    r15d,0x8
   1400041e1:	jne    0x140004210
   1400041e3:	lea    rcx,[rdi*4+0x0]
   1400041eb:	call   0x14002c04c
   1400041f0:	mov    rsi,rax
   1400041f3:	test   rax,rax
   1400041f6:	jne    0x1400041fd
   1400041f8:	call   0x14002adf4
   1400041fd:	mov    r8d,0x20
   140004203:	mov    rdx,r14
   140004206:	mov    rcx,rsi
   140004209:	call   0x14002b9a0
   14000420e:	jmp    0x14000422d
   140004210:	lea    rdx,[rdi*4+0x0]
   140004218:	mov    rcx,r14
   14000421b:	call   0x14002bf78
   140004220:	mov    rsi,rax
   140004223:	test   rax,rax
   140004226:	jne    0x14000422d
   140004228:	call   0x14002adf4
   14000422d:	movsxd rax,r15d
   140004230:	cmp    rax,rdi
   140004233:	jge    0x14000424a
   140004235:	sub    rdi,rax
   140004238:	lea    rcx,[rsi+rax*4]
   14000423c:	xor    edx,edx
   14000423e:	shl    rdi,0x2
   140004242:	mov    r8,rdi
   140004245:	call   0x14002b280
   14000424a:	mov    r15d,ebp
   14000424d:	mov    DWORD PTR [rsp+0xb8],ebp
   140004254:	mov    ebp,DWORD PTR [rsp+0xa0]
   14000425b:	mov    r14,rsi
   14000425e:	mov    QWORD PTR [rsp+0x28],rsi
   140004263:	lea    r9,[rip+0xffffffffffffbd96]        # 0x140000000
   14000426a:	movsxd rax,r12d
   14000426d:	mov    DWORD PTR [r14+rax*4],0x9
   140004275:	jmp    0x140003684
   14000427a:	test   r13b,0x10
   14000427e:	je     0x14000433b
   140004284:	cmp    r12d,r15d
   140004287:	jl     0x14000432b
   14000428d:	lea    ebp,[r15+r15*1]
   140004291:	lea    eax,[r12+0x1]
   140004296:	cmp    ebp,eax
   140004298:	cmovl  ebp,eax
   14000429b:	movsxd rdi,ebp
   14000429e:	cmp    r15d,0x8
   1400042a2:	jne    0x1400042d1
   1400042a4:	lea    rcx,[rdi*4+0x0]
   1400042ac:	call   0x14002c04c
   1400042b1:	mov    rsi,rax
   1400042b4:	test   rax,rax
   1400042b7:	jne    0x1400042be
   1400042b9:	call   0x14002adf4
   1400042be:	mov    r8d,0x20
   1400042c4:	mov    rdx,r14
   1400042c7:	mov    rcx,rsi
   1400042ca:	call   0x14002b9a0
   1400042cf:	jmp    0x1400042ee
   1400042d1:	lea    rdx,[rdi*4+0x0]
   1400042d9:	mov    rcx,r14
   1400042dc:	call   0x14002bf78
   1400042e1:	mov    rsi,rax
   1400042e4:	test   rax,rax
   1400042e7:	jne    0x1400042ee
   1400042e9:	call   0x14002adf4
   1400042ee:	movsxd rax,r15d
   1400042f1:	cmp    rax,rdi
   1400042f4:	jge    0x14000430b
   1400042f6:	sub    rdi,rax
   1400042f9:	lea    rcx,[rsi+rax*4]
   1400042fd:	xor    edx,edx
   1400042ff:	shl    rdi,0x2
   140004303:	mov    r8,rdi
   140004306:	call   0x14002b280
   14000430b:	mov    r15d,ebp
   14000430e:	mov    DWORD PTR [rsp+0xb8],ebp
   140004315:	mov    ebp,DWORD PTR [rsp+0xa0]
   14000431c:	mov    r14,rsi
   14000431f:	mov    QWORD PTR [rsp+0x28],rsi
   140004324:	lea    r9,[rip+0xffffffffffffbcd5]        # 0x140000000
   14000432b:	movsxd rax,r12d
   14000432e:	mov    DWORD PTR [r14+rax*4],0x6
   140004336:	jmp    0x140003684
   14000433b:	cmp    r12d,r15d
   14000433e:	jl     0x1400043e2
   140004344:	lea    ebp,[r15+r15*1]
   140004348:	lea    eax,[r12+0x1]
   14000434d:	cmp    ebp,eax
   14000434f:	cmovl  ebp,eax
   140004352:	movsxd rdi,ebp
   140004355:	cmp    r15d,0x8
   140004359:	jne    0x140004388
   14000435b:	lea    rcx,[rdi*4+0x0]
   140004363:	call   0x14002c04c
   140004368:	mov    rsi,rax
   14000436b:	test   rax,rax
   14000436e:	jne    0x140004375
   140004370:	call   0x14002adf4
   140004375:	mov    r8d,0x20
   14000437b:	mov    rdx,r14
   14000437e:	mov    rcx,rsi
   140004381:	call   0x14002b9a0
   140004386:	jmp    0x1400043a5
   140004388:	lea    rdx,[rdi*4+0x0]
   140004390:	mov    rcx,r14
   140004393:	call   0x14002bf78
   140004398:	mov    rsi,rax
   14000439b:	test   rax,rax
   14000439e:	jne    0x1400043a5
   1400043a0:	call   0x14002adf4
   1400043a5:	movsxd rax,r15d
   1400043a8:	cmp    rax,rdi
   1400043ab:	jge    0x1400043c2
   1400043ad:	sub    rdi,rax
   1400043b0:	lea    rcx,[rsi+rax*4]
   1400043b4:	xor    edx,edx
   1400043b6:	shl    rdi,0x2
   1400043ba:	mov    r8,rdi
   1400043bd:	call   0x14002b280
   1400043c2:	mov    r15d,ebp
   1400043c5:	mov    DWORD PTR [rsp+0xb8],ebp
   1400043cc:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400043d3:	mov    r14,rsi
   1400043d6:	mov    QWORD PTR [rsp+0x28],rsi
   1400043db:	lea    r9,[rip+0xffffffffffffbc1e]        # 0x140000000
   1400043e2:	movsxd rax,r12d
   1400043e5:	mov    DWORD PTR [r14+rax*4],0x3
   1400043ed:	jmp    0x140003684
   1400043f2:	cmp    r12d,r15d
   1400043f5:	jl     0x140004499
   1400043fb:	lea    ebp,[r15+r15*1]
   1400043ff:	lea    eax,[r12+0x1]
   140004404:	cmp    ebp,eax
   140004406:	cmovl  ebp,eax
   140004409:	movsxd rdi,ebp
   14000440c:	cmp    r15d,0x8
   140004410:	jne    0x14000443f
   140004412:	lea    rcx,[rdi*4+0x0]
   14000441a:	call   0x14002c04c
   14000441f:	mov    rsi,rax
   140004422:	test   rax,rax
   140004425:	jne    0x14000442c
   140004427:	call   0x14002adf4
   14000442c:	mov    r8d,0x20
   140004432:	mov    rdx,r14
   140004435:	mov    rcx,rsi
   140004438:	call   0x14002b9a0
   14000443d:	jmp    0x14000445c
   14000443f:	lea    rdx,[rdi*4+0x0]
   140004447:	mov    rcx,r14
   14000444a:	call   0x14002bf78
   14000444f:	mov    rsi,rax
   140004452:	test   rax,rax
   140004455:	jne    0x14000445c
   140004457:	call   0x14002adf4
   14000445c:	movsxd rax,r15d
   14000445f:	cmp    rax,rdi
   140004462:	jge    0x140004479
   140004464:	sub    rdi,rax
   140004467:	lea    rcx,[rsi+rax*4]
   14000446b:	xor    edx,edx
   14000446d:	shl    rdi,0x2
   140004471:	mov    r8,rdi
   140004474:	call   0x14002b280
   140004479:	mov    r15d,ebp
   14000447c:	mov    DWORD PTR [rsp+0xb8],ebp
   140004483:	mov    ebp,DWORD PTR [rsp+0xa0]
   14000448a:	mov    r14,rsi
   14000448d:	mov    QWORD PTR [rsp+0x28],rsi
   140004492:	lea    r9,[rip+0xffffffffffffbb67]        # 0x140000000
   140004499:	movsxd rax,r12d
   14000449c:	mov    DWORD PTR [r14+rax*4],0x12
   1400044a4:	jmp    0x140003684
   1400044a9:	or     r13d,0x10
   1400044ad:	test   r13b,0x10
   1400044b1:	je     0x14000456e
   1400044b7:	cmp    r12d,r15d
   1400044ba:	jl     0x14000455e
   1400044c0:	lea    ebp,[r15+r15*1]
   1400044c4:	lea    eax,[r12+0x1]
   1400044c9:	cmp    ebp,eax
   1400044cb:	cmovl  ebp,eax
   1400044ce:	movsxd rdi,ebp
   1400044d1:	cmp    r15d,0x8
   1400044d5:	jne    0x140004504
   1400044d7:	lea    rcx,[rdi*4+0x0]
   1400044df:	call   0x14002c04c
   1400044e4:	mov    rsi,rax
   1400044e7:	test   rax,rax
   1400044ea:	jne    0x1400044f1
   1400044ec:	call   0x14002adf4
   1400044f1:	mov    r8d,0x20
   1400044f7:	mov    rdx,r14
   1400044fa:	mov    rcx,rsi
   1400044fd:	call   0x14002b9a0
   140004502:	jmp    0x140004521
   140004504:	lea    rdx,[rdi*4+0x0]
   14000450c:	mov    rcx,r14
   14000450f:	call   0x14002bf78
   140004514:	mov    rsi,rax
   140004517:	test   rax,rax
   14000451a:	jne    0x140004521
   14000451c:	call   0x14002adf4
   140004521:	movsxd rax,r15d
   140004524:	cmp    rax,rdi
   140004527:	jge    0x14000453e
   140004529:	sub    rdi,rax
   14000452c:	lea    rcx,[rsi+rax*4]
   140004530:	xor    edx,edx
   140004532:	shl    rdi,0x2
   140004536:	mov    r8,rdi
   140004539:	call   0x14002b280
   14000453e:	mov    r15d,ebp
   140004541:	mov    DWORD PTR [rsp+0xb8],ebp
   140004548:	mov    ebp,DWORD PTR [rsp+0xa0]
   14000454f:	mov    r14,rsi
   140004552:	mov    QWORD PTR [rsp+0x28],rsi
   140004557:	lea    r9,[rip+0xffffffffffffbaa2]        # 0x140000000
   14000455e:	movsxd rax,r12d
   140004561:	mov    DWORD PTR [r14+rax*4],0x18
   140004569:	jmp    0x140003684
   14000456e:	cmp    r12d,r15d
   140004571:	jl     0x140004615
   140004577:	lea    ebp,[r15+r15*1]
   14000457b:	lea    eax,[r12+0x1]
   140004580:	cmp    ebp,eax
   140004582:	cmovl  ebp,eax
   140004585:	movsxd rdi,ebp
   140004588:	cmp    r15d,0x8
   14000458c:	jne    0x1400045bb
   14000458e:	lea    rcx,[rdi*4+0x0]
   140004596:	call   0x14002c04c
   14000459b:	mov    rsi,rax
   14000459e:	test   rax,rax
   1400045a1:	jne    0x1400045a8
   1400045a3:	call   0x14002adf4
   1400045a8:	mov    r8d,0x20
   1400045ae:	mov    rdx,r14
   1400045b1:	mov    rcx,rsi
   1400045b4:	call   0x14002b9a0
   1400045b9:	jmp    0x1400045d8
   1400045bb:	lea    rdx,[rdi*4+0x0]
   1400045c3:	mov    rcx,r14
   1400045c6:	call   0x14002bf78
   1400045cb:	mov    rsi,rax
   1400045ce:	test   rax,rax
   1400045d1:	jne    0x1400045d8
   1400045d3:	call   0x14002adf4
   1400045d8:	movsxd rax,r15d
   1400045db:	cmp    rax,rdi
   1400045de:	jge    0x1400045f5
   1400045e0:	sub    rdi,rax
   1400045e3:	lea    rcx,[rsi+rax*4]
   1400045e7:	xor    edx,edx
   1400045e9:	shl    rdi,0x2
   1400045ed:	mov    r8,rdi
   1400045f0:	call   0x14002b280
   1400045f5:	mov    r15d,ebp
   1400045f8:	mov    DWORD PTR [rsp+0xb8],ebp
   1400045ff:	mov    ebp,DWORD PTR [rsp+0xa0]
   140004606:	mov    r14,rsi
   140004609:	mov    QWORD PTR [rsp+0x28],rsi
   14000460e:	lea    r9,[rip+0xffffffffffffb9eb]        # 0x140000000
   140004615:	movsxd rax,r12d
   140004618:	mov    DWORD PTR [r14+rax*4],0x13
   140004620:	jmp    0x140003684
   140004625:	or     r13d,0x10
   140004629:	bt     r13d,0xc
   14000462e:	jae    0x140004659
   140004630:	cmp    r12d,r15d
   140004633:	jl     0x140004141
   140004639:	lea    ebp,[r15+r15*1]
   14000463d:	lea    eax,[r12+0x1]
   140004642:	cmp    ebp,eax
   140004644:	cmovl  ebp,eax
   140004647:	movsxd rdi,ebp
   14000464a:	cmp    r15d,0x8
   14000464e:	je     0x1400040ba
   140004654:	jmp    0x1400040e7
   140004659:	bt     r13d,0xa
   14000465e:	jae    0x140004689
   140004660:	cmp    r12d,r15d
   140004663:	jl     0x140003810
   140004669:	lea    ebp,[r15+r15*1]
   14000466d:	lea    eax,[r12+0x1]
   140004672:	cmp    ebp,eax
   140004674:	cmovl  ebp,eax
   140004677:	cmp    r15d,0x8
   14000467b:	jne    0x14000417d
   140004681:	movsxd rdi,ebp
   140004684:	jmp    0x140003789
   140004689:	bt     r13d,0xb
   14000468e:	jae    0x1400046b9
   140004690:	cmp    r12d,r15d
   140004693:	jl     0x1400038d2
   140004699:	lea    ebp,[r15+r15*1]
   14000469d:	lea    eax,[r12+0x1]
   1400046a2:	cmp    ebp,eax
   1400046a4:	cmovl  ebp,eax
   1400046a7:	cmp    r15d,0x8
   1400046ab:	jne    0x1400041b1
   1400046b1:	movsxd rdi,ebp
   1400046b4:	jmp    0x14000384b
   1400046b9:	test   r13b,0x20
   1400046bd:	je     0x1400046e8
   1400046bf:	cmp    r12d,r15d
   1400046c2:	jl     0x14000426a
   1400046c8:	lea    ebp,[r15+r15*1]
   1400046cc:	lea    eax,[r12+0x1]
   1400046d1:	cmp    ebp,eax
   1400046d3:	cmovl  ebp,eax
   1400046d6:	movsxd rdi,ebp
   1400046d9:	cmp    r15d,0x8
   1400046dd:	je     0x1400041e3
   1400046e3:	jmp    0x140004210
   1400046e8:	test   r13b,0x10
   1400046ec:	je     0x140004717
   1400046ee:	cmp    r12d,r15d
   1400046f1:	jl     0x14000432b
   1400046f7:	lea    ebp,[r15+r15*1]
   1400046fb:	lea    eax,[r12+0x1]
   140004700:	cmp    ebp,eax
   140004702:	cmovl  ebp,eax
   140004705:	movsxd rdi,ebp
   140004708:	cmp    r15d,0x8
   14000470c:	je     0x1400042a4
   140004712:	jmp    0x1400042d1
   140004717:	cmp    r12d,r15d
   14000471a:	jl     0x1400043e2
   140004720:	lea    ebp,[r15+r15*1]
   140004724:	lea    eax,[r12+0x1]
   140004729:	cmp    ebp,eax
   14000472b:	cmovl  ebp,eax
   14000472e:	movsxd rdi,ebp
   140004731:	cmp    r15d,0x8
   140004735:	je     0x14000435b
   14000473b:	jmp    0x140004388
   140004740:	mov    edi,0x1
   140004745:	test   edx,edx
   140004747:	jne    0x1400031a0
   14000474d:	cmp    ebp,0x8
   140004750:	jl     0x140004775
   140004752:	lea    eax,[rbp+0x1]
   140004755:	movsxd rcx,eax
   140004758:	shl    rcx,0x3
   14000475c:	call   0x14002c04c
   140004761:	mov    rsi,QWORD PTR [rsp+0xb0]
   140004769:	lea    r9,[rip+0xffffffffffffb890]        # 0x140000000
   140004770:	mov    QWORD PTR [rsi],rax
   140004773:	jmp    0x14000477d
   140004775:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000477d:	mov    rax,QWORD PTR [rsi]
   140004780:	movsxd r8,ebp
   140004783:	cmp    rdi,r8
   140004786:	mov    DWORD PTR [rax],0x0
   14000478c:	jg     0x1400047ed
   14000478e:	mov    rdx,QWORD PTR [rsp+0xa8]
   140004796:	add    rdx,0xfffffffffffffff8
   14000479a:	nop    WORD PTR [rax+rax*1+0x0]
   1400047a0:	movsxd rax,DWORD PTR [r14+rdi*4]
   1400047a4:	cmp    eax,0x18
   1400047a7:	ja     0x1400047e5
   1400047a9:	mov    ecx,DWORD PTR [r9+rax*4+0x48d8]
   1400047b1:	add    rcx,r9
   1400047b4:	jmp    rcx
   1400047b6:	mov    rcx,QWORD PTR [rsi]
   1400047b9:	mov    eax,DWORD PTR [rdx+0x8]
   1400047bc:	add    rdx,0x8
   1400047c0:	mov    DWORD PTR [rcx+rdi*8],eax
   1400047c3:	jmp    0x1400047e5
   1400047c5:	mov    rcx,QWORD PTR [rsi]
   1400047c8:	movzx  eax,WORD PTR [rdx+0x8]
   1400047cc:	add    rdx,0x8
   1400047d0:	mov    WORD PTR [rcx+rdi*8],ax
   1400047d4:	jmp    0x1400047e5
   1400047d6:	mov    rcx,QWORD PTR [rsi]
   1400047d9:	mov    rax,QWORD PTR [rdx+0x8]
   1400047dd:	add    rdx,0x8
   1400047e1:	mov    QWORD PTR [rcx+rdi*8],rax
   1400047e5:	inc    rdi
   1400047e8:	cmp    rdi,r8
   1400047eb:	jle    0x1400047a0
   1400047ed:	test   r14,r14
   1400047f0:	je     0x140004804
   1400047f2:	lea    rax,[rsp+0x30]
   1400047f7:	cmp    r14,rax
   1400047fa:	je     0x140004804
   1400047fc:	mov    rcx,r14
   1400047ff:	call   0x14002b36c
   140004804:	add    rsp,0x58
   140004808:	pop    r15
   14000480a:	pop    r14
   14000480c:	pop    r13
   14000480e:	pop    r12
   140004810:	pop    rdi
   140004811:	pop    rsi
   140004812:	pop    rbp
   140004813:	pop    rbx
   140004814:	ret    
   140004815:	nop    DWORD PTR [rax]
   140004818:	shl    BYTE PTR [rcx],1
   14000481a:	add    BYTE PTR [rax],al
   14000481c:	push   rsi
   14000481d:	xor    eax,DWORD PTR [rax]
   14000481f:	add    BYTE PTR [rdx+rsi*1],al
   140004822:	add    BYTE PTR [rax],al
   140004824:	xor    BYTE PTR [rdx],dh
   140004826:	add    BYTE PTR [rax],al
   140004828:	lea    edi,[rdx]
   14000482a:	add    BYTE PTR [rax],al
   14000482c:	or     eax,0x98000035
   140004831:	add    BYTE PTR ss:[rax],al
   140004834:	mov    al,0x34
   140004836:	add    BYTE PTR [rax],al
   140004838:	shl    DWORD PTR [rax+rax*1],0x0
   14000483c:	mov    eax,DWORD PTR [rax+0x0]
   14000483f:	add    BYTE PTR [rcx+0x25000044],ch
   140004845:	rex.RX add BYTE PTR [rax],r8b
   140004848:	sub    DWORD PTR [rsi+0x0],eax
   14000484b:	add    BYTE PTR [rbx],al
   14000484d:	xor    eax,0x35110000
   140004852:	add    BYTE PTR [rax],al
   140004854:	pushf  
   140004855:	add    BYTE PTR ss:[rax],al
   140004858:	mov    DWORD PTR [rax+rax*1],esi
   14000485b:	add    BYTE PTR [rsi-0x22ffffcc],ah
   140004861:	xor    al,0x0
   140004863:	add    BYTE PTR [rip+0xffffffff8f00003c],al        # 0xcf0048a5
   140004869:	add    BYTE PTR [rax],al
   14000486c:	repnz rex.XB add BYTE PTR [r8],al
   140004870:	lods   eax,DWORD PTR ds:[rsi]
   140004871:	add    BYTE PTR [rax],r8b
   140004874:	stc    
   140004875:	xor    al,0x0
   140004877:	add    BYTE PTR [rax+0x47],al
   14000487a:	add    BYTE PTR [rax],al
   14000487c:	add    BYTE PTR [rax],bl
   14000487e:	sbb    BYTE PTR [rax],al
   140004880:	sbb    BYTE PTR [rax],bl
   140004882:	sbb    BYTE PTR [rax],al
   140004884:	sbb    BYTE PTR [rax],bl
   140004886:	add    DWORD PTR [rax],eax
   140004888:	sbb    BYTE PTR [rax],al
   14000488a:	add    bl,BYTE PTR [rax]
   14000488c:	add    BYTE PTR [rbx],al
   14000488e:	add    eax,DWORD PTR [rbx]
   140004890:	add    eax,DWORD PTR [rbx]
   140004892:	add    eax,DWORD PTR [rbx]
   140004894:	add    eax,DWORD PTR [rbx]
   140004896:	sbb    BYTE PTR [rax],bl
   140004898:	sbb    BYTE PTR [rax],bl
   14000489a:	sbb    BYTE PTR [rax],bl
   14000489c:	sbb    BYTE PTR [rax+rbx*1],al
   14000489f:	add    eax,0x4180406
   1400048a4:	sbb    BYTE PTR [rdi],al
   1400048a6:	sbb    BYTE PTR [rax],bl
   1400048a8:	or     BYTE PTR [rax],bl
   1400048aa:	sbb    BYTE PTR [rcx],cl
   1400048ac:	sbb    BYTE PTR [rax],bl
   1400048ae:	sbb    BYTE PTR [rdx],cl
   1400048b0:	sbb    BYTE PTR [rbx],cl
   1400048b2:	sbb    BYTE PTR [rax],bl
   1400048b4:	or     al,0x18
   1400048b6:	or     eax,0x18181818
   1400048bb:	sbb    BYTE PTR [rax],bl
   1400048bd:	add    al,0x18
   1400048bf:	(bad)  
   1400048c0:	(bad)  
   1400048c2:	add    al,0x4
   1400048c4:	adc    BYTE PTR [rdi],cl
   1400048c6:	adc    DWORD PTR [rax],ebx
   1400048c8:	adc    bl,BYTE PTR [rax]
   1400048ca:	adc    edx,DWORD PTR [rdx*1+0x17161808]
   1400048d1:	or     al,0x18
   1400048d3:	sbb    BYTE PTR [rax+rbx*1],cl
   1400048d6:	or     eax,0x47b690
   1400048db:	add    dh,dl
   1400048dd:	rex.RXB add BYTE PTR [r8],r8b
   1400048e0:	mov    dh,0x47
   1400048e2:	add    BYTE PTR [rax],al
   1400048e4:	mov    dh,0x47
   1400048e6:	add    BYTE PTR [rax],al
   1400048e8:	(bad)  
   1400048e9:	rex.RXB add BYTE PTR [r8],r8b
   1400048ec:	mov    dh,0x47
   1400048ee:	add    BYTE PTR [rax],al
   1400048f0:	mov    dh,0x47
   1400048f2:	add    BYTE PTR [rax],al
   1400048f4:	(bad)  
   1400048f5:	rex.RXB add BYTE PTR [r8],r8b
   1400048f8:	(bad)  
   1400048f9:	rex.RXB add BYTE PTR [r8],r8b
   1400048fc:	(bad)  
   1400048fd:	rex.RXB add BYTE PTR [r8],r8b
   140004900:	(bad)  
   140004901:	rex.RXB add BYTE PTR [r8],r8b
   140004904:	(bad)  
   140004905:	rex.RXB add BYTE PTR [r8],r8b
   140004908:	(bad)  
   140004909:	rex.RXB add BYTE PTR [r8],r8b
   14000490c:	(bad)  
   14000490d:	rex.RXB add BYTE PTR [r8],r8b
   140004910:	(bad)  
   140004911:	rex.RXB add BYTE PTR [r8],r8b
   140004914:	(bad)  
   140004915:	rex.RXB add BYTE PTR [r8],r8b
   140004918:	(bad)  
   140004919:	rex.RXB add BYTE PTR [r8],r8b
   14000491c:	(bad)  
   14000491d:	rex.RXB add BYTE PTR [r8],r8b
   140004920:	(bad)  
   140004921:	rex.RXB add BYTE PTR [r8],r8b
   140004924:	(bad)  
   140004925:	rex.RXB add BYTE PTR [r8],r8b
   140004928:	(bad)  
   140004929:	rex.RXB add BYTE PTR [r8],r8b
   14000492c:	(bad)  
   14000492d:	rex.RXB add BYTE PTR [r8],r8b
   140004930:	(bad)  
   140004931:	rex.RXB add BYTE PTR [r8],r8b
   140004934:	(bad)
   140004937:	add    dh,dl
   140004939:	rex.RXB add BYTE PTR [r8],r8b
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	mov    r11,rsp
   140004943:	push   rdi
   140004944:	push   r15
   140004946:	sub    rsp,0x2d8
   14000494d:	mov    rax,QWORD PTR [rip+0x61f5c]        # 0x1400668b0
   140004954:	xor    rax,rsp
   140004957:	mov    QWORD PTR [rsp+0x2a0],rax
   14000495f:	mov    rdi,QWORD PTR [rsp+0x318]
   140004967:	mov    QWORD PTR [r11+0x20],rbx
   14000496b:	mov    QWORD PTR [r11-0x18],rbp
   14000496f:	mov    rbp,rcx
   140004972:	mov    QWORD PTR [rsp+0x1d8],rcx
   14000497a:	mov    rcx,QWORD PTR [rsp+0x320]
   140004982:	mov    BYTE PTR [rsp+0xe0],r8b
   14000498a:	xor    r8d,r8d
   14000498d:	mov    QWORD PTR [r11-0x20],rsi
   140004991:	lea    rax,[rip+0x39a58]        # 0x14003e3f0
   140004998:	mov    DWORD PTR [r11-0x234],r8d
   14000499f:	mov    BYTE PTR [r11-0x238],r8b
   1400049a6:	mov    QWORD PTR [rsp+0x118],rax
   1400049ae:	mov    QWORD PTR [rsp+0xf8],r8
   1400049b6:	mov    QWORD PTR [rsp+0xd8],r8
   1400049be:	mov    QWORD PTR [rsp+0x130],r8
   1400049c6:	lea    rax,[r11-0x108]
   1400049cd:	mov    QWORD PTR [rsp+0x1d0],rdx
   1400049d5:	mov    QWORD PTR [rsp+0x78],rcx
   1400049da:	mov    rdx,rcx
   1400049dd:	mov    QWORD PTR [r11-0x30],r13
   1400049e1:	lea    r8,[r11-0x220]
   1400049e8:	mov    rcx,rdi
   1400049eb:	mov    QWORD PTR [r11-0x38],r14
   1400049ef:	mov    QWORD PTR [rsp+0x140],r9
   1400049f7:	mov    QWORD PTR [rsp+0x100],rdi
   1400049ff:	mov    DWORD PTR [rsp+0x40],0x1
   140004a07:	mov    QWORD PTR [r11-0x220],rax
   140004a0e:	call   0x140003140
   140004a13:	mov    r15,QWORD PTR [rbp+0x0]
   140004a17:	mov    rcx,QWORD PTR [rsp+0x310]
   140004a1f:	xor    edx,edx
   140004a21:	xor    r13d,r13d
   140004a24:	xor    esi,esi
   140004a26:	lea    rax,[rsp+0x150]
   140004a2e:	test   r15,r15
   140004a31:	mov    QWORD PTR [rsp+0x48],rax
   140004a36:	sete   al
   140004a39:	xor    r14d,r14d
   140004a3c:	lea    rbx,[rsp+0x150]
   140004a44:	mov    DWORD PTR [rsp+0x54],r13d
   140004a49:	mov    DWORD PTR [rsp+0x50],esi
   140004a4d:	mov    QWORD PTR [rsp+0x98],r14
   140004a55:	mov    DWORD PTR [rsp+0x70],edx
   140004a59:	mov    QWORD PTR [rsp+0x68],r15
   140004a5e:	mov    BYTE PTR [rsp+0x80],al
   140004a65:	mov    BYTE PTR [rsp+0x81],dl
   140004a6c:	mov    QWORD PTR [rsp+0x88],r15
   140004a74:	mov    QWORD PTR [rsp+0x90],rcx
   140004a7c:	test   al,al
   140004a7e:	je     0x140004adb
   140004a80:	or     rcx,0xffffffffffffffff
   140004a84:	xor    eax,eax
   140004a86:	repnz scas al,BYTE PTR es:[rdi]
   140004a88:	not    rcx
   140004a8b:	mov    rdi,rcx
   140004a8e:	mov    QWORD PTR [rsp+0x310],rcx
   140004a96:	cmp    rcx,0x1
   140004a9a:	jbe    0x140004aac
   140004a9c:	add    rdi,0x3f
   140004aa0:	and    rdi,0xffffffffffffffc0
   140004aa4:	mov    QWORD PTR [rsp+0x310],rdi
   140004aac:	mov    rcx,rdi
   140004aaf:	call   0x14002c04c
   140004ab4:	mov    r15,rax
   140004ab7:	mov    QWORD PTR [rsp+0x68],rax
   140004abc:	mov    QWORD PTR [rsp+0x88],rax
   140004ac4:	test   rax,rax
   140004ac7:	je     0x1400085bd
   140004acd:	mov    edx,DWORD PTR [rsp+0x70]
   140004ad1:	mov    QWORD PTR [rsp+0x90],rdi
   140004ad9:	jmp    0x140004ade
   140004adb:	mov    rdi,rcx
   140004ade:	xor    eax,eax
   140004ae0:	xor    r8d,r8d
   140004ae3:	mov    QWORD PTR [rsp+0x2c0],r12
   140004aeb:	mov    DWORD PTR [rsp+0x108],r8d
   140004af3:	mov    r8,QWORD PTR [rsp+0x100]
   140004afb:	mov    BYTE PTR [rsp+0x5c],sil
   140004b00:	mov    DWORD PTR [rsp+0x120],eax
   140004b07:	mov    DWORD PTR [rsp+0xf4],eax
   140004b0e:	mov    DWORD PTR [rsp+0xf0],eax
   140004b15:	mov    DWORD PTR [rsp+0xe4],eax
   140004b1c:	mov    DWORD PTR [rsp+0x60],eax
   140004b20:	mov    QWORD PTR [rsp+0xa8],rax
   140004b28:	nop    DWORD PTR [rax+rax*1+0x0]
   140004b30:	movsx  ebp,BYTE PTR [r8]
   140004b34:	mov    rax,r8
   140004b37:	test   ebp,ebp
   140004b39:	je     0x140004b59
   140004b3b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004b40:	cmp    ebp,0x25
   140004b43:	je     0x140004b51
   140004b45:	movsx  ebp,BYTE PTR [r8+0x1]
   140004b4a:	inc    r8
   140004b4d:	test   ebp,ebp
   140004b4f:	jne    0x140004b40
   140004b51:	mov    QWORD PTR [rsp+0x100],r8
   140004b59:	mov    ecx,r8d
   140004b5c:	sub    ecx,eax
   140004b5e:	je     0x140004c9f
   140004b64:	lea    r12d,[rcx+rdx*1]
   140004b68:	cmp    r12d,0x7fffffff
   140004b6f:	ja     0x140008394
   140004b75:	mov    QWORD PTR [rbx],rax
   140004b78:	inc    esi
   140004b7a:	add    r13d,ecx
   140004b7d:	movsxd rax,ecx
   140004b80:	add    rbx,0x10
   140004b84:	cmp    esi,0x8
   140004b87:	mov    QWORD PTR [rbx-0x8],rax
   140004b8b:	mov    DWORD PTR [rsp+0x54],r13d
   140004b90:	mov    DWORD PTR [rsp+0x50],esi
   140004b94:	jl     0x140004c9a
   140004b9a:	test   r13d,r13d
   140004b9d:	jne    0x140004baa
   140004b9f:	xor    esi,esi
   140004ba1:	mov    DWORD PTR [rsp+0x50],esi
   140004ba5:	jmp    0x140004c92
   140004baa:	cmp    BYTE PTR [rsp+0x80],0x0
   140004bb2:	je     0x140004c1c
   140004bb4:	movsxd rax,r13d
   140004bb7:	lea    rcx,[rax+r14*1+0x1]
   140004bbc:	cmp    rcx,rdi
   140004bbf:	jbe    0x140004c1c
   140004bc1:	lea    rax,[rcx+rdi*1-0x1]
   140004bc6:	mov    rcx,QWORD PTR [rsp+0x310]
   140004bce:	xor    edx,edx
   140004bd0:	div    rdi
   140004bd3:	mov    rdi,rax
   140004bd6:	imul   rdi,rcx
   140004bda:	mov    rcx,r15
   140004bdd:	mov    rdx,rdi
   140004be0:	call   0x14002bf78
   140004be5:	test   rax,rax
   140004be8:	jne    0x140004bf9
   140004bea:	mov    BYTE PTR [rsp+0x81],0x1
   140004bf2:	mov    eax,0x1
   140004bf7:	jmp    0x140004c74
   140004bf9:	mov    r15,rax
   140004bfc:	mov    QWORD PTR [rsp+0x68],rax
   140004c01:	mov    QWORD PTR [rsp+0x88],rax
   140004c09:	mov    rax,rdi
   140004c0c:	mov    QWORD PTR [rsp+0x310],rax
   140004c14:	mov    QWORD PTR [rsp+0x90],rax
   140004c1c:	test   esi,esi
   140004c1e:	jle    0x140004c72
   140004c20:	lea    rbx,[rsp+0x158]
   140004c28:	nop    DWORD PTR [rax+rax*1+0x0]
   140004c30:	mov    ecx,DWORD PTR [rsp+0x90]
   140004c37:	sub    ecx,DWORD PTR [rsp+0x98]
   140004c3e:	dec    ecx
   140004c40:	movsxd rax,ecx
   140004c43:	cmp    rax,QWORD PTR [rbx]
   140004c46:	jbe    0x140004c4a
   140004c48:	mov    ecx,DWORD PTR [rbx]
   140004c4a:	mov    rdx,QWORD PTR [rbx-0x8]
   140004c4e:	movsxd rdi,ecx
   140004c51:	lea    rcx,[r14+r15*1]
   140004c55:	mov    r8,rdi
   140004c58:	call   0x14002b9a0
   140004c5d:	add    r14,rdi
   140004c60:	add    rbx,0x10
   140004c64:	sub    rsi,0x1
   140004c68:	mov    QWORD PTR [rsp+0x98],r14
   140004c70:	jne    0x140004c30
   140004c72:	xor    eax,eax
   140004c74:	xor    r13d,r13d
   140004c77:	xor    esi,esi
   140004c79:	mov    DWORD PTR [rsp+0x54],r13d
   140004c7e:	mov    DWORD PTR [rsp+0x50],esi
   140004c82:	test   eax,eax
   140004c84:	jne    0x14000856f
   140004c8a:	mov    r8,QWORD PTR [rsp+0x100]
   140004c92:	lea    rbx,[rsp+0x150]
   140004c9a:	mov    DWORD PTR [rsp+0x70],r12d
   140004c9f:	test   ebp,ebp
   140004ca1:	je     0x1400083fc
   140004ca7:	mov    r10d,DWORD PTR [rsp+0x40]
   140004cac:	mov    r11,QWORD PTR [rsp+0x78]
   140004cb1:	mov    rdx,QWORD PTR [rsp+0xc8]
   140004cb9:	xor    eax,eax
   140004cbb:	xor    r9d,r9d
   140004cbe:	xor    ebp,ebp
   140004cc0:	inc    r8
   140004cc3:	or     r12d,0xffffffff
   140004cc7:	mov    DWORD PTR [rsp+0x58],r9d
   140004ccc:	mov    DWORD PTR [rsp+0xe8],ebp
   140004cd3:	mov    DWORD PTR [rsp+0xbc],eax
   140004cda:	mov    BYTE PTR [rsp+0x44],al
   140004cde:	mov    DWORD PTR [rsp+0xa0],r12d
   140004ce6:	mov    BYTE PTR [rsp+0xb9],al
   140004ced:	nop    DWORD PTR [rax]
   140004cf0:	movsx  edi,BYTE PTR [r8]
   140004cf4:	inc    r8
   140004cf7:	mov    QWORD PTR [rsp+0x100],r8
   140004cff:	nop
   140004d00:	lea    eax,[rdi-0x20]
   140004d03:	cmp    eax,0x5a
   140004d06:	ja     0x1400066a1
   140004d0c:	lea    rcx,[rip+0xffffffffffffb2ed]        # 0x140000000
   140004d13:	cdqe   
   140004d15:	movzx  eax,BYTE PTR [rcx+rax*1+0x86d4]
   140004d1d:	mov    ecx,DWORD PTR [rcx+rax*4+0x864c]
   140004d24:	lea    rax,[rip+0xffffffffffffb2d5]        # 0x140000000
   140004d2b:	add    rcx,rax
   140004d2e:	jmp    rcx
   140004d30:	movsx  edi,BYTE PTR [r8]
   140004d34:	inc    r8
   140004d37:	mov    QWORD PTR [rsp+0x100],r8
   140004d3f:	cmp    edi,0x2a
   140004d42:	je     0x140004dc4
   140004d48:	xor    r12d,r12d
   140004d4b:	lea    eax,[rdi-0x30]
   140004d4e:	mov    DWORD PTR [rsp+0xa0],r12d
   140004d56:	cmp    eax,0x9
   140004d59:	ja     0x140004d00
   140004d5b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004d60:	lea    eax,[r12+r12*4]
   140004d64:	inc    r8
   140004d67:	lea    r12d,[rdi+rax*2-0x30]
   140004d6c:	movsx  edi,BYTE PTR [r8-0x1]
   140004d71:	lea    eax,[rdi-0x30]
   140004d74:	cmp    eax,0x9
   140004d77:	jbe    0x140004d60
   140004d79:	mov    QWORD PTR [rsp+0x100],r8
   140004d81:	mov    DWORD PTR [rsp+0xa0],r12d
   140004d89:	jmp    0x140004d00
   140004d8e:	xor    ecx,ecx
   140004d90:	lea    eax,[rcx+rcx*4]
   140004d93:	inc    r8
   140004d96:	lea    ecx,[rdi+rax*2-0x30]
   140004d9a:	movsx  edi,BYTE PTR [r8-0x1]
   140004d9f:	lea    eax,[rdi-0x30]
   140004da2:	cmp    eax,0x9
   140004da5:	jbe    0x140004d90
   140004da7:	mov    QWORD PTR [rsp+0x100],r8
   140004daf:	cmp    edi,0x24
   140004db2:	je     0x140004e91
   140004db8:	mov    DWORD PTR [rsp+0xbc],ecx
   140004dbf:	jmp    0x140004d00
   140004dc4:	movsx  edi,BYTE PTR [r8]
   140004dc8:	xor    edx,edx
   140004dca:	mov    rcx,r8
   140004dcd:	lea    eax,[rdi-0x30]
   140004dd0:	cmp    eax,0x9
   140004dd3:	ja     0x140004df5
   140004dd5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004de0:	lea    eax,[rdx+rdx*4]
   140004de3:	inc    rcx
   140004de6:	lea    edx,[rdi+rax*2-0x30]
   140004dea:	movsx  edi,BYTE PTR [rcx]
   140004ded:	lea    eax,[rdi-0x30]
   140004df0:	cmp    eax,0x9
   140004df3:	jbe    0x140004de0
   140004df5:	cmp    BYTE PTR [rcx],0x24
   140004df8:	jne    0x140004e47
   140004dfa:	mov    rdi,QWORD PTR [rsp+0xc8]
   140004e02:	test   rdi,rdi
   140004e05:	je     0x140004e22
   140004e07:	movsxd rax,edx
   140004e0a:	lea    r8,[rcx+0x1]
   140004e0e:	mov    rdx,rdi
   140004e11:	mov    r12d,DWORD PTR [rdi+rax*8]
   140004e15:	mov    DWORD PTR [rsp+0xa0],r12d
   140004e1d:	jmp    0x140004cf0
   140004e22:	mov    r12d,DWORD PTR [r11]
   140004e25:	mov    rdx,QWORD PTR [rsp+0xc8]
   140004e2d:	add    r11,0x8
   140004e31:	mov    QWORD PTR [rsp+0x78],r11
   140004e36:	lea    r8,[rcx+0x1]
   140004e3a:	mov    DWORD PTR [rsp+0xa0],r12d
   140004e42:	jmp    0x140004cf0
   140004e47:	mov    rdx,QWORD PTR [rsp+0xc8]
   140004e4f:	test   rdx,rdx
   140004e52:	je     0x140004e70
   140004e54:	movsxd rax,r10d
   140004e57:	inc    r10d
   140004e5a:	mov    r12d,DWORD PTR [rdx+rax*8]
   140004e5e:	mov    DWORD PTR [rsp+0x40],r10d
   140004e63:	mov    DWORD PTR [rsp+0xa0],r12d
   140004e6b:	jmp    0x140004cf0
   140004e70:	mov    r12d,DWORD PTR [r11]
   140004e73:	inc    r10d
   140004e76:	add    r11,0x8
   140004e7a:	mov    DWORD PTR [rsp+0xa0],r12d
   140004e82:	mov    DWORD PTR [rsp+0x40],r10d
   140004e87:	mov    QWORD PTR [rsp+0x78],r11
   140004e8c:	jmp    0x140004cf0
   140004e91:	mov    r10d,ecx
   140004e94:	mov    DWORD PTR [rsp+0x40],ecx
   140004e98:	jmp    0x140004cf0
   140004e9d:	cmp    BYTE PTR [rsp+0x44],bpl
   140004ea2:	jne    0x140004cf0
   140004ea8:	mov    BYTE PTR [rsp+0x44],0x20
   140004ead:	jmp    0x140004cf0
   140004eb2:	or     r9d,0x1
   140004eb6:	mov    DWORD PTR [rsp+0x58],r9d
   140004ebb:	jmp    0x140004cf0
   140004ec0:	movsx  edi,BYTE PTR [r8]
   140004ec4:	xor    edx,edx
   140004ec6:	mov    rcx,r8
   140004ec9:	lea    eax,[rdi-0x30]
   140004ecc:	cmp    eax,0x9
   140004ecf:	ja     0x140004ef5
   140004ed1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004ee0:	lea    eax,[rdx+rdx*4]
   140004ee3:	inc    rcx
   140004ee6:	lea    edx,[rdi+rax*2-0x30]
   140004eea:	movsx  edi,BYTE PTR [rcx]
   140004eed:	lea    eax,[rdi-0x30]
   140004ef0:	cmp    eax,0x9
   140004ef3:	jbe    0x140004ee0
   140004ef5:	cmp    BYTE PTR [rcx],0x24
   140004ef8:	jne    0x140004f42
   140004efa:	mov    r8,QWORD PTR [rsp+0xc8]
   140004f02:	test   r8,r8
   140004f05:	je     0x140004f1f
   140004f07:	movsxd rax,edx
   140004f0a:	mov    rdx,r8
   140004f0d:	lea    r8,[rcx+0x1]
   140004f11:	mov    eax,DWORD PTR [rdx+rax*8]
   140004f14:	mov    DWORD PTR [rsp+0xbc],eax
   140004f1b:	mov    ecx,eax
   140004f1d:	jmp    0x140004f81
   140004f1f:	mov    eax,DWORD PTR [r11]
   140004f22:	mov    rdx,QWORD PTR [rsp+0xc8]
   140004f2a:	add    r11,0x8
   140004f2e:	lea    r8,[rcx+0x1]
   140004f32:	mov    QWORD PTR [rsp+0x78],r11
   140004f37:	mov    DWORD PTR [rsp+0xbc],eax
   140004f3e:	mov    ecx,eax
   140004f40:	jmp    0x140004f81
   140004f42:	mov    rdx,QWORD PTR [rsp+0xc8]
   140004f4a:	test   rdx,rdx
   140004f4d:	je     0x140004f66
   140004f4f:	movsxd rax,r10d
   140004f52:	inc    r10d
   140004f55:	mov    ecx,DWORD PTR [rdx+rax*8]
   140004f58:	mov    DWORD PTR [rsp+0x40],r10d
   140004f5d:	mov    DWORD PTR [rsp+0xbc],ecx
   140004f64:	jmp    0x140004f81
   140004f66:	mov    ecx,DWORD PTR [r11]
   140004f69:	inc    r10d
   140004f6c:	add    r11,0x8
   140004f70:	mov    DWORD PTR [rsp+0xbc],ecx
   140004f77:	mov    DWORD PTR [rsp+0x40],r10d
   140004f7c:	mov    QWORD PTR [rsp+0x78],r11
   140004f81:	test   ecx,ecx
   140004f83:	jns    0x140004cf0
   140004f89:	neg    ecx
   140004f8b:	mov    DWORD PTR [rsp+0xbc],ecx
   140004f92:	or     r9d,0x4
   140004f96:	mov    DWORD PTR [rsp+0x58],r9d
   140004f9b:	jmp    0x140004cf0
   140004fa0:	mov    BYTE PTR [rsp+0x44],0x2b
   140004fa5:	jmp    0x140004cf0
   140004faa:	movzx  eax,BYTE PTR [rsp+0xe0]
   140004fb2:	bts    r9d,0x9
   140004fb7:	mov    BYTE PTR [rsp+0xb0],al
   140004fbe:	mov    rax,QWORD PTR [rsp+0x1d0]
   140004fc6:	mov    DWORD PTR [rsp+0x58],r9d
   140004fcb:	mov    QWORD PTR [rsp+0xf8],rax
   140004fd3:	test   rax,rax
   140004fd6:	je     0x140004cf0
   140004fdc:	cmp    BYTE PTR [rax],bpl
   140004fdf:	jne    0x140004cf0
   140004fe5:	lea    rax,[rip+0x510c8]        # 0x1400560b4
   140004fec:	mov    QWORD PTR [rsp+0xf8],rax
   140004ff4:	jmp    0x140004cf0
   140004ff9:	bts    r9d,0x7
   140004ffe:	mov    DWORD PTR [rsp+0x58],r9d
   140005003:	jmp    0x140004cf0
   140005008:	test   r9b,0x40
   14000500c:	je     0x140005021
   14000500e:	and    r9d,0xffffffbf
   140005012:	bts    r9d,0xd
   140005017:	mov    DWORD PTR [rsp+0x58],r9d
   14000501c:	jmp    0x140004cf0
   140005021:	or     r9d,0x40
   140005025:	mov    DWORD PTR [rsp+0x58],r9d
   14000502a:	jmp    0x140004cf0
   14000502f:	bts    r9d,0xc
   140005034:	mov    DWORD PTR [rsp+0x58],r9d
   140005039:	jmp    0x140004cf0
   14000503e:	movzx  eax,BYTE PTR [r8]
   140005042:	cmp    al,0x36
   140005044:	jne    0x14000505f
   140005046:	cmp    BYTE PTR [r8+0x1],0x34
   14000504b:	jne    0x14000505f
   14000504d:	add    r8,0x2
   140005051:	or     r9d,0x20
   140005055:	mov    DWORD PTR [rsp+0x58],r9d
   14000505a:	jmp    0x140004cf0
   14000505f:	cmp    al,0x33
   140005061:	jne    0x140005073
   140005063:	cmp    BYTE PTR [r8+0x1],0x32
   140005068:	jne    0x140005073
   14000506a:	add    r8,0x2
   14000506e:	jmp    0x140004cf0
   140005073:	bts    r9d,0xa
   140005078:	mov    DWORD PTR [rsp+0x58],r9d
   14000507d:	jmp    0x140004cf0
   140005082:	test   r9b,0x10
   140005086:	je     0x14000509a
   140005088:	and    r9d,0xffffffef
   14000508c:	or     r9d,0x20
   140005090:	mov    DWORD PTR [rsp+0x58],r9d
   140005095:	jmp    0x140004cf0
   14000509a:	or     r9d,0x10
   14000509e:	mov    DWORD PTR [rsp+0x58],r9d
   1400050a3:	jmp    0x140004cf0
   1400050a8:	or     r9d,0x20
   1400050ac:	mov    DWORD PTR [rsp+0x58],r9d
   1400050b1:	jmp    0x140004cf0
   1400050b6:	bts    r9d,0xb
   1400050bb:	mov    DWORD PTR [rsp+0x58],r9d
   1400050c0:	jmp    0x140004cf0
   1400050c5:	bts    r9d,0xa
   1400050ca:	mov    DWORD PTR [rsp+0x58],r9d
   1400050cf:	jmp    0x140004cf0
   1400050d4:	or     r9d,0x10
   1400050d8:	mov    DWORD PTR [rsp+0x58],r9d
   1400050dd:	test   r9b,0x10
   1400050e1:	je     0x14000516e
   1400050e7:	mov    eax,DWORD PTR [rip+0x392fb]        # 0x14003e3e8
   1400050ed:	mov    DWORD PTR [rsp+0xc0],eax
   1400050f4:	test   rdx,rdx
   1400050f7:	je     0x14000510a
   1400050f9:	movsxd rax,r10d
   1400050fc:	inc    r10d
   1400050ff:	movzx  ecx,WORD PTR [rdx+rax*8]
   140005103:	mov    DWORD PTR [rsp+0x40],r10d
   140005108:	jmp    0x14000511f
   14000510a:	movzx  ecx,WORD PTR [r11]
   14000510e:	inc    r10d
   140005111:	add    r11,0x8
   140005115:	mov    DWORD PTR [rsp+0x40],r10d
   14000511a:	mov    QWORD PTR [rsp+0x78],r11
   14000511f:	movzx  edx,cx
   140005122:	lea    rdi,[rsp+0x230]
   14000512a:	lea    r8,[rsp+0xc0]
   140005132:	lea    rcx,[rsp+0x230]
   14000513a:	mov    QWORD PTR [rsp+0xd0],rdi
   140005142:	call   0x14002cbdc
   140005147:	mov    r15,rax
   14000514a:	cmp    rax,0xffffffffffffffff
   14000514e:	jne    0x1400051b4
   140005150:	mov    r15,QWORD PTR [rsp+0x68]
   140005155:	mov    edi,DWORD PTR [rsp+0x70]
   140005159:	mov    r12,QWORD PTR [rsp+0xd8]
   140005161:	mov    BYTE PTR [rsp+0x81],0x1
   140005169:	jmp    0x140008589
   14000516e:	test   rdx,rdx
   140005171:	je     0x140005183
   140005173:	movsxd rax,r10d
   140005176:	inc    r10d
   140005179:	mov    ecx,DWORD PTR [rdx+rax*8]
   14000517c:	mov    DWORD PTR [rsp+0x40],r10d
   140005181:	jmp    0x140005197
   140005183:	mov    ecx,DWORD PTR [r11]
   140005186:	inc    r10d
   140005189:	add    r11,0x8
   14000518d:	mov    DWORD PTR [rsp+0x40],r10d
   140005192:	mov    QWORD PTR [rsp+0x78],r11
   140005197:	lea    rax,[rsp+0x230]
   14000519f:	mov    BYTE PTR [rsp+0x230],cl
   1400051a6:	mov    r15d,0x1
   1400051ac:	mov    QWORD PTR [rsp+0xd0],rax
   1400051b4:	mov    BYTE PTR [rsp+0x44],bpl
   1400051b9:	jmp    0x1400066cc
   1400051be:	or     r9d,0x10
   1400051c2:	mov    DWORD PTR [rsp+0x58],r9d
   1400051c7:	test   r9d,0x1c20
   1400051ce:	je     0x140005304
   1400051d4:	bt     r9d,0xc
   1400051d9:	jae    0x14000521d
   1400051db:	test   rdx,rdx
   1400051de:	je     0x1400051fc
   1400051e0:	movsxd rax,r10d
   1400051e3:	inc    r10d
   1400051e6:	mov    rax,QWORD PTR [rdx+rax*8]
   1400051ea:	mov    DWORD PTR [rsp+0x40],r10d
   1400051ef:	mov    QWORD PTR [rsp+0xa8],rax
   1400051f7:	jmp    0x1400052e0
   1400051fc:	mov    rax,QWORD PTR [r11]
   1400051ff:	inc    r10d
   140005202:	add    r11,0x8
   140005206:	mov    QWORD PTR [rsp+0xa8],rax
   14000520e:	mov    DWORD PTR [rsp+0x40],r10d
   140005213:	mov    QWORD PTR [rsp+0x78],r11
   140005218:	jmp    0x1400052e0
   14000521d:	bt     r9d,0xa
   140005222:	jae    0x140005263
   140005224:	test   rdx,rdx
   140005227:	je     0x140005245
   140005229:	movsxd rax,r10d
   14000522c:	inc    r10d
   14000522f:	mov    rax,QWORD PTR [rdx+rax*8]
   140005233:	mov    DWORD PTR [rsp+0x40],r10d
   140005238:	mov    QWORD PTR [rsp+0xa8],rax
   140005240:	jmp    0x1400052e0
   140005245:	mov    rax,QWORD PTR [r11]
   140005248:	inc    r10d
   14000524b:	add    r11,0x8
   14000524f:	mov    QWORD PTR [rsp+0xa8],rax
   140005257:	mov    DWORD PTR [rsp+0x40],r10d
   14000525c:	mov    QWORD PTR [rsp+0x78],r11
   140005261:	jmp    0x1400052e0
   140005263:	bt     r9d,0xb
   140005268:	jae    0x1400052a6
   14000526a:	test   rdx,rdx
   14000526d:	je     0x140005288
   14000526f:	movsxd rax,r10d
   140005272:	inc    r10d
   140005275:	mov    rax,QWORD PTR [rdx+rax*8]
   140005279:	mov    DWORD PTR [rsp+0x40],r10d
   14000527e:	mov    QWORD PTR [rsp+0xa8],rax
   140005286:	jmp    0x1400052e0
   140005288:	mov    rax,QWORD PTR [r11]
   14000528b:	inc    r10d
   14000528e:	add    r11,0x8
   140005292:	mov    QWORD PTR [rsp+0xa8],rax
   14000529a:	mov    DWORD PTR [rsp+0x40],r10d
   14000529f:	mov    QWORD PTR [rsp+0x78],r11
   1400052a4:	jmp    0x1400052e0
   1400052a6:	test   rdx,rdx
   1400052a9:	je     0x1400052c4
   1400052ab:	movsxd rax,r10d
   1400052ae:	inc    r10d
   1400052b1:	mov    rax,QWORD PTR [rdx+rax*8]
   1400052b5:	mov    DWORD PTR [rsp+0x40],r10d
   1400052ba:	mov    QWORD PTR [rsp+0xa8],rax
   1400052c2:	jmp    0x1400052e0
   1400052c4:	mov    rax,QWORD PTR [r11]
   1400052c7:	inc    r10d
   1400052ca:	add    r11,0x8
   1400052ce:	mov    QWORD PTR [rsp+0xa8],rax
   1400052d6:	mov    DWORD PTR [rsp+0x40],r10d
   1400052db:	mov    QWORD PTR [rsp+0x78],r11
   1400052e0:	test   rax,rax
   1400052e3:	jns    0x140005405
   1400052e9:	neg    rax
   1400052ec:	mov    BYTE PTR [rsp+0x44],0x2d
   1400052f1:	mov    r8d,0xa
   1400052f7:	mov    QWORD PTR [rsp+0xa8],rax
   1400052ff:	jmp    0x14000655d
   140005304:	test   r9b,0x10
   140005308:	je     0x140005343
   14000530a:	test   rdx,rdx
   14000530d:	je     0x140005326
   14000530f:	movsxd rax,r10d
   140005312:	inc    r10d
   140005315:	mov    eax,DWORD PTR [rdx+rax*8]
   140005318:	mov    DWORD PTR [rsp+0x40],r10d
   14000531d:	mov    DWORD PTR [rsp+0x60],eax
   140005321:	jmp    0x1400053f6
   140005326:	mov    eax,DWORD PTR [r11]
   140005329:	inc    r10d
   14000532c:	add    r11,0x8
   140005330:	mov    DWORD PTR [rsp+0x60],eax
   140005334:	mov    DWORD PTR [rsp+0x40],r10d
   140005339:	mov    QWORD PTR [rsp+0x78],r11
   14000533e:	jmp    0x1400053f6
   140005343:	test   r9b,0x40
   140005347:	je     0x140005385
   140005349:	test   rdx,rdx
   14000534c:	je     0x140005368
   14000534e:	movsxd rax,r10d
   140005351:	inc    r10d
   140005354:	mov    ecx,DWORD PTR [rdx+rax*8]
   140005357:	mov    DWORD PTR [rsp+0x40],r10d
   14000535c:	movsx  eax,cx
   14000535f:	mov    DWORD PTR [rsp+0x60],eax
   140005363:	jmp    0x1400053f6
   140005368:	mov    ecx,DWORD PTR [r11]
   14000536b:	inc    r10d
   14000536e:	add    r11,0x8
   140005372:	movsx  eax,cx
   140005375:	mov    DWORD PTR [rsp+0x40],r10d
   14000537a:	mov    QWORD PTR [rsp+0x78],r11
   14000537f:	mov    DWORD PTR [rsp+0x60],eax
   140005383:	jmp    0x1400053f6
   140005385:	bt     r9d,0xd
   14000538a:	jae    0x1400053c5
   14000538c:	test   rdx,rdx
   14000538f:	je     0x1400053a8
   140005391:	movsxd rax,r10d
   140005394:	inc    r10d
   140005397:	mov    ecx,DWORD PTR [rdx+rax*8]
   14000539a:	mov    DWORD PTR [rsp+0x40],r10d
   14000539f:	movsx  eax,cl
   1400053a2:	mov    DWORD PTR [rsp+0x60],eax
   1400053a6:	jmp    0x1400053f6
   1400053a8:	mov    ecx,DWORD PTR [r11]
   1400053ab:	inc    r10d
   1400053ae:	add    r11,0x8
   1400053b2:	movsx  eax,cl
   1400053b5:	mov    DWORD PTR [rsp+0x40],r10d
   1400053ba:	mov    QWORD PTR [rsp+0x78],r11
   1400053bf:	mov    DWORD PTR [rsp+0x60],eax
   1400053c3:	jmp    0x1400053f6
   1400053c5:	test   rdx,rdx
   1400053c8:	je     0x1400053de
   1400053ca:	movsxd rax,r10d
   1400053cd:	inc    r10d
   1400053d0:	mov    eax,DWORD PTR [rdx+rax*8]
   1400053d3:	mov    DWORD PTR [rsp+0x40],r10d
   1400053d8:	mov    DWORD PTR [rsp+0x60],eax
   1400053dc:	jmp    0x1400053f6
   1400053de:	mov    eax,DWORD PTR [r11]
   1400053e1:	inc    r10d
   1400053e4:	add    r11,0x8
   1400053e8:	mov    DWORD PTR [rsp+0x60],eax
   1400053ec:	mov    DWORD PTR [rsp+0x40],r10d
   1400053f1:	mov    QWORD PTR [rsp+0x78],r11
   1400053f6:	test   eax,eax
   1400053f8:	jns    0x140005405
   1400053fa:	neg    eax
   1400053fc:	mov    BYTE PTR [rsp+0x44],0x2d
   140005401:	mov    DWORD PTR [rsp+0x60],eax
   140005405:	mov    r8d,0xa
   14000540b:	jmp    0x14000655d
   140005410:	mov    BYTE PTR [rsp+0x5c],dil
   140005415:	test   r12d,r12d
   140005418:	jns    0x14000542a
   14000541a:	mov    r12d,0x7
   140005420:	mov    DWORD PTR [rsp+0xa0],r12d
   140005428:	jmp    0x140005441
   14000542a:	inc    r12d
   14000542d:	test   r12d,r12d
   140005430:	mov    eax,0x6
   140005435:	cmovs  r12d,eax
   140005439:	mov    DWORD PTR [rsp+0xa0],r12d
   140005441:	mov    rax,QWORD PTR [rsp+0x130]
   140005449:	test   rax,rax
   14000544c:	je     0x14000545b
   14000544e:	mov    rcx,rax
   140005451:	call   0x140008ac0
   140005456:	mov    r9d,DWORD PTR [rsp+0x58]
   14000545b:	test   r9b,0x20
   14000545f:	je     0x14000552d
   140005465:	mov    r8,QWORD PTR [rsp+0xc8]
   14000546d:	test   r8,r8
   140005470:	je     0x1400054b1
   140005472:	movsxd rdx,DWORD PTR [rsp+0x40]
   140005477:	movsd  xmm0,QWORD PTR [r8+rdx*8]
   14000547d:	inc    edx
   14000547f:	movsd  QWORD PTR [rsp+0x128],xmm0
   140005488:	mov    DWORD PTR [rsp+0x40],edx
   14000548c:	jmp    0x1400054d7
   14000548e:	mov    BYTE PTR [rsp+0x5c],bpl
   140005493:	jmp    0x14000542d
   140005495:	lea    eax,[rdi-0x2]
   140005498:	mov    BYTE PTR [rsp+0x5c],al
   14000549c:	test   r12d,r12d
   14000549f:	jne    0x14000542d
   1400054a1:	mov    r12d,0x1
   1400054a7:	mov    DWORD PTR [rsp+0xa0],r12d
   1400054af:	jmp    0x140005441
   1400054b1:	mov    edx,DWORD PTR [rsp+0x40]
   1400054b5:	mov    rcx,QWORD PTR [rsp+0x78]
   1400054ba:	inc    edx
   1400054bc:	add    rcx,0x8
   1400054c0:	mov    DWORD PTR [rsp+0x40],edx
   1400054c4:	mov    QWORD PTR [rsp+0x78],rcx
   1400054c9:	movsd  xmm0,QWORD PTR [rcx-0x8]
   1400054ce:	movsd  QWORD PTR [rsp+0x128],xmm0
   1400054d7:	movzx  eax,BYTE PTR [rsp+0x5c]
   1400054dc:	lea    r9,[rsp+0xb4]
   1400054e4:	lea    rcx,[rsp+0x128]
   1400054ec:	neg    al
   1400054ee:	lea    rax,[rsp+0x110]
   1400054f6:	mov    r8d,r12d
   1400054f9:	mov    QWORD PTR [rsp+0x28],rax
   1400054fe:	lea    rax,[rsp+0x124]
   140005506:	sbb    edx,edx
   140005508:	add    edx,0x3
   14000550b:	mov    QWORD PTR [rsp+0x20],rax
   140005510:	call   0x140008a90
   140005515:	mov    r12,rax
   140005518:	mov    QWORD PTR [rsp+0xd0],rax
   140005520:	mov    QWORD PTR [rsp+0x130],rax
   140005528:	jmp    0x1400055c5
   14000552d:	mov    r8,QWORD PTR [rsp+0xc8]
   140005535:	test   r8,r8
   140005538:	je     0x140005556
   14000553a:	movsxd rdx,DWORD PTR [rsp+0x40]
   14000553f:	movsd  xmm0,QWORD PTR [r8+rdx*8]
   140005545:	inc    edx
   140005547:	movsd  QWORD PTR [rsp+0x128],xmm0
   140005550:	mov    DWORD PTR [rsp+0x40],edx
   140005554:	jmp    0x14000557c
   140005556:	mov    edx,DWORD PTR [rsp+0x40]
   14000555a:	mov    rcx,QWORD PTR [rsp+0x78]
   14000555f:	inc    edx
   140005561:	add    rcx,0x8
   140005565:	mov    DWORD PTR [rsp+0x40],edx
   140005569:	mov    QWORD PTR [rsp+0x78],rcx
   14000556e:	movsd  xmm0,QWORD PTR [rcx-0x8]
   140005573:	movsd  QWORD PTR [rsp+0x128],xmm0
   14000557c:	movzx  eax,BYTE PTR [rsp+0x5c]
   140005581:	lea    r9,[rsp+0xb4]
   140005589:	mov    r8d,r12d
   14000558c:	neg    al
   14000558e:	lea    rax,[rsp+0x110]
   140005596:	mov    QWORD PTR [rsp+0x28],rax
   14000559b:	lea    rax,[rsp+0x124]
   1400055a3:	sbb    edx,edx
   1400055a5:	add    edx,0x3
   1400055a8:	mov    QWORD PTR [rsp+0x20],rax
   1400055ad:	call   0x140008970
   1400055b2:	mov    r12,rax
   1400055b5:	mov    QWORD PTR [rsp+0xd0],rax
   1400055bd:	mov    QWORD PTR [rsp+0x130],rax
   1400055c5:	test   r12,r12
   1400055c8:	je     0x1400083a4
   1400055ce:	mov    r15d,DWORD PTR [rsp+0x58]
   1400055d3:	bts    r15d,0x8
   1400055d8:	cmp    DWORD PTR [rsp+0xb4],0x270f
   1400055e3:	mov    DWORD PTR [rsp+0x58],r15d
   1400055e8:	je     0x140005817
   1400055ee:	lea    rdx,[rip+0x38e73]        # 0x14003e468
   1400055f5:	mov    rcx,r12
   1400055f8:	call   0x14002c9d4
   1400055fd:	test   eax,eax
   1400055ff:	je     0x140005817
   140005605:	lea    rdx,[rip+0x38e58]        # 0x14003e464
   14000560c:	mov    rcx,r12
   14000560f:	call   0x14002c9d4
   140005614:	test   eax,eax
   140005616:	je     0x140005817
   14000561c:	lea    rdx,[rip+0x38e3d]        # 0x14003e460
   140005623:	mov    rcx,r12
   140005626:	call   0x14002c9d4
   14000562b:	test   eax,eax
   14000562d:	je     0x140005817
   140005633:	movzx  eax,BYTE PTR [rsp+0x44]
   140005638:	cmp    DWORD PTR [rsp+0x124],ebp
   14000563f:	mov    r8d,DWORD PTR [rsp+0x110]
   140005647:	mov    ecx,0x2d
   14000564c:	cmovne eax,ecx
   14000564f:	sub    r8d,r12d
   140005652:	mov    DWORD PTR [rsp+0x108],r8d
   14000565a:	mov    BYTE PTR [rsp+0x44],al
   14000565e:	cmp    edi,0x67
   140005661:	je     0x14000566c
   140005663:	cmp    edi,0x47
   140005666:	jne    0x14000577a
   14000566c:	mov    ecx,DWORD PTR [rsp+0xb4]
   140005673:	cmp    ecx,0xfffffffc
   140005676:	jle    0x140005760
   14000567c:	mov    r12d,DWORD PTR [rsp+0xa0]
   140005684:	cmp    ecx,r12d
   140005687:	jg     0x140005768
   14000568d:	xor    dl,dl
   14000568f:	mov    BYTE PTR [rsp+0x5c],dl
   140005693:	test   r15b,0x1
   140005697:	je     0x1400056a6
   140005699:	sub    r12d,ecx
   14000569c:	mov    DWORD PTR [rsp+0xa0],r12d
   1400056a4:	jmp    0x1400056b9
   1400056a6:	mov    r12d,r8d
   1400056a9:	sub    r12d,DWORD PTR [rsp+0xb4]
   1400056b1:	mov    DWORD PTR [rsp+0xa0],r12d
   1400056b9:	test   r12d,r12d
   1400056bc:	jns    0x1400056c9
   1400056be:	xor    r12d,r12d
   1400056c1:	mov    DWORD PTR [rsp+0xa0],r12d
   1400056c9:	mov    ecx,DWORD PTR [rsp+0xb4]
   1400056d0:	mov    eax,0x1
   1400056d5:	test   ecx,ecx
   1400056d7:	cmovg  eax,ecx
   1400056da:	mov    r15d,eax
   1400056dd:	test   r12d,r12d
   1400056e0:	jne    0x1400056e9
   1400056e2:	test   BYTE PTR [rsp+0x58],0x1
   1400056e7:	je     0x1400056ee
   1400056e9:	lea    r15d,[rax+r12*1+0x1]
   1400056ee:	mov    rdx,QWORD PTR [rsp+0xf8]
   1400056f6:	test   rdx,rdx
   1400056f9:	je     0x140005804
   1400056ff:	mov    ecx,DWORD PTR [rsp+0xb4]
   140005706:	test   ecx,ecx
   140005708:	jle    0x140005804
   14000570e:	movzx  eax,BYTE PTR [rdx]
   140005711:	xor    edi,edi
   140005713:	xor    r8d,r8d
   140005716:	mov    r9d,ecx
   140005719:	mov    DWORD PTR [rsp+0xf4],ecx
   140005720:	mov    DWORD PTR [rsp+0xe4],edi
   140005727:	mov    DWORD PTR [rsp+0xf0],r8d
   14000572f:	cmp    al,0x7f
   140005731:	je     0x1400057f8
   140005737:	nop    WORD PTR [rax+rax*1+0x0]
   140005740:	movsx  ecx,al
   140005743:	cmp    r9d,ecx
   140005746:	jle    0x1400057d9
   14000574c:	lea    rax,[rdx+0x1]
   140005750:	sub    r9d,ecx
   140005753:	cmp    BYTE PTR [rax],bpl
   140005756:	je     0x1400057cd
   140005758:	inc    r8d
   14000575b:	mov    rdx,rax
   14000575e:	jmp    0x1400057cf
   140005760:	mov    r12d,DWORD PTR [rsp+0xa0]
   140005768:	test   r15b,0x1
   14000576c:	cmove  r12d,r8d
   140005770:	mov    DWORD PTR [rsp+0xa0],r12d
   140005778:	jmp    0x140005782
   14000577a:	mov    r12d,DWORD PTR [rsp+0xa0]
   140005782:	movzx  edx,BYTE PTR [rsp+0x5c]
   140005787:	test   dl,dl
   140005789:	je     0x1400056c9
   14000578f:	movsx  r8d,dl
   140005793:	mov    edx,DWORD PTR [rsp+0xb4]
   14000579a:	lea    rcx,[rsp+0x220]
   1400057a2:	dec    edx
   1400057a4:	call   0x140003040
   1400057a9:	cmp    r12d,0x1
   1400057ad:	lea    r15d,[r12+rax*1]
   1400057b1:	mov    DWORD PTR [rsp+0x120],eax
   1400057b8:	jg     0x1400057c5
   1400057ba:	test   BYTE PTR [rsp+0x58],0x1
   1400057bf:	je     0x1400066cc
   1400057c5:	inc    r15d
   1400057c8:	jmp    0x1400066cc
   1400057cd:	inc    edi
   1400057cf:	mov    al,BYTE PTR [rdx]
   1400057d1:	cmp    al,0x7f
   1400057d3:	jne    0x140005740
   1400057d9:	mov    DWORD PTR [rsp+0xf4],r9d
   1400057e1:	mov    DWORD PTR [rsp+0xf0],r8d
   1400057e9:	mov    DWORD PTR [rsp+0xe4],edi
   1400057f0:	mov    QWORD PTR [rsp+0xf8],rdx
   1400057f8:	lea    eax,[rdi+r8*1]
   1400057fc:	add    r15d,eax
   1400057ff:	jmp    0x1400066cc
   140005804:	mov    eax,DWORD PTR [rsp+0xb4]
   14000580b:	mov    DWORD PTR [rsp+0xf4],eax
   140005812:	jmp    0x1400066cc
   140005817:	cmp    BYTE PTR [r12],0x2d
   14000581c:	jne    0x140005826
   14000581e:	mov    BYTE PTR [rsp+0x44],0x2d
   140005823:	inc    r12
   140005826:	mov    ecx,edi
   140005828:	call   0x14002c730
   14000582d:	test   eax,eax
   14000582f:	je     0x140005846
   140005831:	mov    rcx,r12
   140005834:	call   0x14002c6bc
   140005839:	mov    r12,rax
   14000583c:	mov    QWORD PTR [rsp+0xd0],rax
   140005844:	jmp    0x140005859
   140005846:	mov    rcx,r12
   140005849:	call   0x14002c3f0
   14000584e:	mov    r12,rax
   140005851:	mov    QWORD PTR [rsp+0xd0],rax
   140005859:	or     rcx,0xffffffffffffffff
   14000585d:	xor    eax,eax
   14000585f:	mov    rdi,r12
   140005862:	mov    DWORD PTR [rsp+0xb4],0x7fffffff
   14000586d:	repnz scas al,BYTE PTR es:[rdi]
   14000586f:	not    rcx
   140005872:	lea    r15d,[rcx-0x1]
   140005876:	jmp    0x1400066cc
   14000587b:	test   r9b,0x20
   14000587f:	je     0x1400058d3
   140005881:	test   rdx,rdx
   140005884:	je     0x1400058aa
   140005886:	mov    rdi,QWORD PTR [rsp+0x310]
   14000588e:	movsxd rax,r10d
   140005891:	inc    r10d
   140005894:	mov    rcx,QWORD PTR [rdx+rax*8]
   140005898:	movsxd rdx,DWORD PTR [rsp+0x70]
   14000589d:	mov    DWORD PTR [rsp+0x40],r10d
   1400058a2:	mov    QWORD PTR [rcx],rdx
   1400058a5:	jmp    0x140004b30
   1400058aa:	mov    rcx,QWORD PTR [r11]
   1400058ad:	movsxd rdx,DWORD PTR [rsp+0x70]
   1400058b2:	mov    rdi,QWORD PTR [rsp+0x310]
   1400058ba:	inc    r10d
   1400058bd:	add    r11,0x8
   1400058c1:	mov    QWORD PTR [rcx],rdx
   1400058c4:	mov    DWORD PTR [rsp+0x40],r10d
   1400058c9:	mov    QWORD PTR [rsp+0x78],r11
   1400058ce:	jmp    0x140004b30
   1400058d3:	bt     r9d,0xa
   1400058d8:	jae    0x14000592c
   1400058da:	test   rdx,rdx
   1400058dd:	je     0x140005903
   1400058df:	mov    rdi,QWORD PTR [rsp+0x310]
   1400058e7:	movsxd rax,r10d
   1400058ea:	inc    r10d
   1400058ed:	mov    rcx,QWORD PTR [rdx+rax*8]
   1400058f1:	movsxd rdx,DWORD PTR [rsp+0x70]
   1400058f6:	mov    DWORD PTR [rsp+0x40],r10d
   1400058fb:	mov    QWORD PTR [rcx],rdx
   1400058fe:	jmp    0x140004b30
   140005903:	mov    rcx,QWORD PTR [r11]
   140005906:	movsxd rdx,DWORD PTR [rsp+0x70]
   14000590b:	mov    rdi,QWORD PTR [rsp+0x310]
   140005913:	inc    r10d
   140005916:	add    r11,0x8
   14000591a:	mov    QWORD PTR [rcx],rdx
   14000591d:	mov    DWORD PTR [rsp+0x40],r10d
   140005922:	mov    QWORD PTR [rsp+0x78],r11
   140005927:	jmp    0x140004b30
   14000592c:	bt     r9d,0xb
   140005931:	jae    0x140005985
   140005933:	test   rdx,rdx
   140005936:	je     0x14000595c
   140005938:	mov    rdi,QWORD PTR [rsp+0x310]
   140005940:	movsxd rax,r10d
   140005943:	inc    r10d
   140005946:	mov    rcx,QWORD PTR [rdx+rax*8]
   14000594a:	movsxd rdx,DWORD PTR [rsp+0x70]
   14000594f:	mov    DWORD PTR [rsp+0x40],r10d
   140005954:	mov    QWORD PTR [rcx],rdx
   140005957:	jmp    0x140004b30
   14000595c:	mov    rcx,QWORD PTR [r11]
   14000595f:	movsxd rdx,DWORD PTR [rsp+0x70]
   140005964:	mov    rdi,QWORD PTR [rsp+0x310]
   14000596c:	inc    r10d
   14000596f:	add    r11,0x8
   140005973:	mov    QWORD PTR [rcx],rdx
   140005976:	mov    DWORD PTR [rsp+0x40],r10d
   14000597b:	mov    QWORD PTR [rsp+0x78],r11
   140005980:	jmp    0x140004b30
   140005985:	bt     r9d,0xc
   14000598a:	jae    0x1400059de
   14000598c:	test   rdx,rdx
   14000598f:	je     0x1400059b5
   140005991:	mov    rdi,QWORD PTR [rsp+0x310]
   140005999:	movsxd rax,r10d
   14000599c:	inc    r10d
   14000599f:	mov    rcx,QWORD PTR [rdx+rax*8]
   1400059a3:	movsxd rdx,DWORD PTR [rsp+0x70]
   1400059a8:	mov    DWORD PTR [rsp+0x40],r10d
   1400059ad:	mov    QWORD PTR [rcx],rdx
   1400059b0:	jmp    0x140004b30
   1400059b5:	mov    rcx,QWORD PTR [r11]
   1400059b8:	movsxd rdx,DWORD PTR [rsp+0x70]
   1400059bd:	mov    rdi,QWORD PTR [rsp+0x310]
   1400059c5:	inc    r10d
   1400059c8:	add    r11,0x8
   1400059cc:	mov    QWORD PTR [rcx],rdx
   1400059cf:	mov    DWORD PTR [rsp+0x40],r10d
   1400059d4:	mov    QWORD PTR [rsp+0x78],r11
   1400059d9:	jmp    0x140004b30
   1400059de:	test   r9b,0x10
   1400059e2:	je     0x140005a32
   1400059e4:	test   rdx,rdx
   1400059e7:	je     0x140005a0b
   1400059e9:	mov    rdi,QWORD PTR [rsp+0x310]
   1400059f1:	movsxd rax,r10d
   1400059f4:	inc    r10d
   1400059f7:	mov    rcx,QWORD PTR [rdx+rax*8]
   1400059fb:	mov    edx,DWORD PTR [rsp+0x70]
   1400059ff:	mov    DWORD PTR [rsp+0x40],r10d
   140005a04:	mov    DWORD PTR [rcx],edx
   140005a06:	jmp    0x140004b30
   140005a0b:	mov    rcx,QWORD PTR [r11]
   140005a0e:	mov    edx,DWORD PTR [rsp+0x70]
   140005a12:	mov    rdi,QWORD PTR [rsp+0x310]
   140005a1a:	inc    r10d
   140005a1d:	add    r11,0x8
   140005a21:	mov    DWORD PTR [rcx],edx
   140005a23:	mov    DWORD PTR [rsp+0x40],r10d
   140005a28:	mov    QWORD PTR [rsp+0x78],r11
   140005a2d:	jmp    0x140004b30
   140005a32:	test   r9b,0x40
   140005a36:	je     0x140005a88
   140005a38:	test   rdx,rdx
   140005a3b:	je     0x140005a60
   140005a3d:	mov    rdi,QWORD PTR [rsp+0x310]
   140005a45:	movsxd rax,r10d
   140005a48:	inc    r10d
   140005a4b:	mov    rcx,QWORD PTR [rdx+rax*8]
   140005a4f:	mov    edx,DWORD PTR [rsp+0x70]
   140005a53:	mov    DWORD PTR [rsp+0x40],r10d
   140005a58:	mov    WORD PTR [rcx],dx
   140005a5b:	jmp    0x140004b30
   140005a60:	mov    rcx,QWORD PTR [r11]
   140005a63:	mov    edx,DWORD PTR [rsp+0x70]
   140005a67:	mov    rdi,QWORD PTR [rsp+0x310]
   140005a6f:	inc    r10d
   140005a72:	add    r11,0x8
   140005a76:	mov    WORD PTR [rcx],dx
   140005a79:	mov    DWORD PTR [rsp+0x40],r10d
   140005a7e:	mov    QWORD PTR [rsp+0x78],r11
   140005a83:	jmp    0x140004b30
   140005a88:	bt     r9d,0xd
   140005a8d:	jae    0x140005add
   140005a8f:	test   rdx,rdx
   140005a92:	je     0x140005ab6
   140005a94:	mov    rdi,QWORD PTR [rsp+0x310]
   140005a9c:	movsxd rax,r10d
   140005a9f:	inc    r10d
   140005aa2:	mov    rcx,QWORD PTR [rdx+rax*8]
   140005aa6:	mov    edx,DWORD PTR [rsp+0x70]
   140005aaa:	mov    DWORD PTR [rsp+0x40],r10d
   140005aaf:	mov    BYTE PTR [rcx],dl
   140005ab1:	jmp    0x140004b30
   140005ab6:	mov    rcx,QWORD PTR [r11]
   140005ab9:	mov    edx,DWORD PTR [rsp+0x70]
   140005abd:	mov    rdi,QWORD PTR [rsp+0x310]
   140005ac5:	inc    r10d
   140005ac8:	add    r11,0x8
   140005acc:	mov    BYTE PTR [rcx],dl
   140005ace:	mov    DWORD PTR [rsp+0x40],r10d
   140005ad3:	mov    QWORD PTR [rsp+0x78],r11
   140005ad8:	jmp    0x140004b30
   140005add:	test   rdx,rdx
   140005ae0:	je     0x140005b04
   140005ae2:	mov    rdi,QWORD PTR [rsp+0x310]
   140005aea:	movsxd rax,r10d
   140005aed:	inc    r10d
   140005af0:	mov    rcx,QWORD PTR [rdx+rax*8]
   140005af4:	mov    edx,DWORD PTR [rsp+0x70]
   140005af8:	mov    DWORD PTR [rsp+0x40],r10d
   140005afd:	mov    DWORD PTR [rcx],edx
   140005aff:	jmp    0x140004b30
   140005b04:	mov    rcx,QWORD PTR [r11]
   140005b07:	mov    edx,DWORD PTR [rsp+0x70]
   140005b0b:	mov    rdi,QWORD PTR [rsp+0x310]
   140005b13:	inc    r10d
   140005b16:	add    r11,0x8
   140005b1a:	mov    DWORD PTR [rcx],edx
   140005b1c:	mov    DWORD PTR [rsp+0x40],r10d
   140005b21:	mov    QWORD PTR [rsp+0x78],r11
   140005b26:	jmp    0x140004b30
   140005b2b:	or     r9d,0x10
   140005b2f:	mov    DWORD PTR [rsp+0x58],r9d
   140005b34:	test   r9d,0x1c20
   140005b3b:	je     0x140005c8e
   140005b41:	bt     r9d,0xc
   140005b46:	jae    0x140005b96
   140005b48:	test   rdx,rdx
   140005b4b:	je     0x140005b6f
   140005b4d:	movsxd rax,r10d
   140005b50:	inc    r10d
   140005b53:	mov    r8d,0x8
   140005b59:	mov    rax,QWORD PTR [rdx+rax*8]
   140005b5d:	mov    DWORD PTR [rsp+0x40],r10d
   140005b62:	mov    QWORD PTR [rsp+0xa8],rax
   140005b6a:	jmp    0x140006558
   140005b6f:	mov    rax,QWORD PTR [r11]
   140005b72:	inc    r10d
   140005b75:	add    r11,0x8
   140005b79:	mov    QWORD PTR [rsp+0xa8],rax
   140005b81:	mov    DWORD PTR [rsp+0x40],r10d
   140005b86:	mov    QWORD PTR [rsp+0x78],r11
   140005b8b:	mov    r8d,0x8
   140005b91:	jmp    0x140006558
   140005b96:	bt     r9d,0xa
   140005b9b:	jae    0x140005beb
   140005b9d:	test   rdx,rdx
   140005ba0:	je     0x140005bc4
   140005ba2:	movsxd rax,r10d
   140005ba5:	inc    r10d
   140005ba8:	mov    r8d,0x8
   140005bae:	mov    rax,QWORD PTR [rdx+rax*8]
   140005bb2:	mov    DWORD PTR [rsp+0x40],r10d
   140005bb7:	mov    QWORD PTR [rsp+0xa8],rax
   140005bbf:	jmp    0x140006558
   140005bc4:	mov    rax,QWORD PTR [r11]
   140005bc7:	inc    r10d
   140005bca:	add    r11,0x8
   140005bce:	mov    QWORD PTR [rsp+0xa8],rax
   140005bd6:	mov    DWORD PTR [rsp+0x40],r10d
   140005bdb:	mov    QWORD PTR [rsp+0x78],r11
   140005be0:	mov    r8d,0x8
   140005be6:	jmp    0x140006558
   140005beb:	bt     r9d,0xb
   140005bf0:	jae    0x140005c40
   140005bf2:	test   rdx,rdx
   140005bf5:	je     0x140005c19
   140005bf7:	movsxd rax,r10d
   140005bfa:	inc    r10d
   140005bfd:	mov    r8d,0x8
   140005c03:	mov    rax,QWORD PTR [rdx+rax*8]
   140005c07:	mov    DWORD PTR [rsp+0x40],r10d
   140005c0c:	mov    QWORD PTR [rsp+0xa8],rax
   140005c14:	jmp    0x140006558
   140005c19:	mov    rax,QWORD PTR [r11]
   140005c1c:	inc    r10d
   140005c1f:	add    r11,0x8
   140005c23:	mov    QWORD PTR [rsp+0xa8],rax
   140005c2b:	mov    DWORD PTR [rsp+0x40],r10d
   140005c30:	mov    QWORD PTR [rsp+0x78],r11
   140005c35:	mov    r8d,0x8
   140005c3b:	jmp    0x140006558
   140005c40:	test   rdx,rdx
   140005c43:	je     0x140005c67
   140005c45:	movsxd rax,r10d
   140005c48:	inc    r10d
   140005c4b:	mov    r8d,0x8
   140005c51:	mov    rax,QWORD PTR [rdx+rax*8]
   140005c55:	mov    DWORD PTR [rsp+0x40],r10d
   140005c5a:	mov    QWORD PTR [rsp+0xa8],rax
   140005c62:	jmp    0x140006558
   140005c67:	mov    rax,QWORD PTR [r11]
   140005c6a:	inc    r10d
   140005c6d:	add    r11,0x8
   140005c71:	mov    QWORD PTR [rsp+0xa8],rax
   140005c79:	mov    DWORD PTR [rsp+0x40],r10d
   140005c7e:	mov    QWORD PTR [rsp+0x78],r11
   140005c83:	mov    r8d,0x8
   140005c89:	jmp    0x140006558
   140005c8e:	test   r9b,0x10
   140005c92:	je     0x140005cd9
   140005c94:	test   rdx,rdx
   140005c97:	je     0x140005cb6
   140005c99:	movsxd rax,r10d
   140005c9c:	inc    r10d
   140005c9f:	mov    r8d,0x8
   140005ca5:	mov    eax,DWORD PTR [rdx+rax*8]
   140005ca8:	mov    DWORD PTR [rsp+0x40],r10d
   140005cad:	mov    DWORD PTR [rsp+0x60],eax
   140005cb1:	jmp    0x140006558
   140005cb6:	mov    eax,DWORD PTR [r11]
   140005cb9:	inc    r10d
   140005cbc:	add    r11,0x8
   140005cc0:	mov    DWORD PTR [rsp+0x60],eax
   140005cc4:	mov    DWORD PTR [rsp+0x40],r10d
   140005cc9:	mov    QWORD PTR [rsp+0x78],r11
   140005cce:	mov    r8d,0x8
   140005cd4:	jmp    0x140006558
   140005cd9:	test   r9b,0x40
   140005cdd:	je     0x140005d2a
   140005cdf:	test   rdx,rdx
   140005ce2:	je     0x140005d04
   140005ce4:	movsxd rax,r10d
   140005ce7:	inc    r10d
   140005cea:	mov    r8d,0x8
   140005cf0:	mov    ecx,DWORD PTR [rdx+rax*8]
   140005cf3:	mov    DWORD PTR [rsp+0x40],r10d
   140005cf8:	movzx  eax,cx
   140005cfb:	mov    DWORD PTR [rsp+0x60],eax
   140005cff:	jmp    0x140006558
   140005d04:	mov    ecx,DWORD PTR [r11]
   140005d07:	inc    r10d
   140005d0a:	add    r11,0x8
   140005d0e:	movzx  eax,cx
   140005d11:	mov    DWORD PTR [rsp+0x40],r10d
   140005d16:	mov    QWORD PTR [rsp+0x78],r11
   140005d1b:	mov    DWORD PTR [rsp+0x60],eax
   140005d1f:	mov    r8d,0x8
   140005d25:	jmp    0x140006558
   140005d2a:	bt     r9d,0xd
   140005d2f:	jae    0x140005d7c
   140005d31:	test   rdx,rdx
   140005d34:	je     0x140005d56
   140005d36:	movsxd rax,r10d
   140005d39:	inc    r10d
   140005d3c:	mov    r8d,0x8
   140005d42:	mov    ecx,DWORD PTR [rdx+rax*8]
   140005d45:	mov    DWORD PTR [rsp+0x40],r10d
   140005d4a:	movzx  eax,cl
   140005d4d:	mov    DWORD PTR [rsp+0x60],eax
   140005d51:	jmp    0x140006558
   140005d56:	mov    ecx,DWORD PTR [r11]
   140005d59:	inc    r10d
   140005d5c:	add    r11,0x8
   140005d60:	movzx  eax,cl
   140005d63:	mov    DWORD PTR [rsp+0x40],r10d
   140005d68:	mov    QWORD PTR [rsp+0x78],r11
   140005d6d:	mov    DWORD PTR [rsp+0x60],eax
   140005d71:	mov    r8d,0x8
   140005d77:	jmp    0x140006558
   140005d7c:	test   rdx,rdx
   140005d7f:	je     0x140005d9e
   140005d81:	movsxd rax,r10d
   140005d84:	inc    r10d
   140005d87:	mov    r8d,0x8
   140005d8d:	mov    eax,DWORD PTR [rdx+rax*8]
   140005d90:	mov    DWORD PTR [rsp+0x40],r10d
   140005d95:	mov    DWORD PTR [rsp+0x60],eax
   140005d99:	jmp    0x140006558
   140005d9e:	mov    eax,DWORD PTR [r11]
   140005da1:	inc    r10d
   140005da4:	add    r11,0x8
   140005da8:	mov    DWORD PTR [rsp+0x60],eax
   140005dac:	mov    DWORD PTR [rsp+0x40],r10d
   140005db1:	mov    QWORD PTR [rsp+0x78],r11
   140005db6:	mov    r8d,0x8
   140005dbc:	jmp    0x140006558
   140005dc1:	test   rdx,rdx
   140005dc4:	je     0x140005ddf
   140005dc6:	movsxd rax,r10d
   140005dc9:	inc    r10d
   140005dcc:	mov    rax,QWORD PTR [rdx+rax*8]
   140005dd0:	mov    DWORD PTR [rsp+0x40],r10d
   140005dd5:	mov    QWORD PTR [rsp+0xa8],rax
   140005ddd:	jmp    0x140005dfb
   140005ddf:	mov    rax,QWORD PTR [r11]
   140005de2:	inc    r10d
   140005de5:	add    r11,0x8
   140005de9:	mov    QWORD PTR [rsp+0xa8],rax
   140005df1:	mov    DWORD PTR [rsp+0x40],r10d
   140005df6:	mov    QWORD PTR [rsp+0x78],r11
   140005dfb:	lea    rax,[rip+0x38606]        # 0x14003e408
   140005e02:	bts    r9d,0xc
   140005e07:	mov    r8d,0x10
   140005e0d:	mov    QWORD PTR [rsp+0x118],rax
   140005e15:	mov    DWORD PTR [rsp+0x58],r9d
   140005e1a:	jmp    0x140006558
   140005e1f:	or     r9d,0x10
   140005e23:	mov    DWORD PTR [rsp+0x58],r9d
   140005e28:	test   r9b,0x10
   140005e2c:	je     0x140005ec7
   140005e32:	mov    rax,QWORD PTR [rsp+0xd8]
   140005e3a:	test   rax,rax
   140005e3d:	je     0x140005e51
   140005e3f:	mov    rcx,rax
   140005e42:	call   0x14002b36c
   140005e47:	xor    edx,edx
   140005e49:	mov    QWORD PTR [rsp+0xd8],rdx
   140005e51:	mov    r8,QWORD PTR [rsp+0xc8]
   140005e59:	test   r8,r8
   140005e5c:	je     0x140005e6f
   140005e5e:	movsxd rdx,DWORD PTR [rsp+0x40]
   140005e63:	mov    rcx,QWORD PTR [r8+rdx*8]
   140005e67:	inc    edx
   140005e69:	mov    DWORD PTR [rsp+0x40],edx
   140005e6d:	jmp    0x140005e8b
   140005e6f:	mov    edx,DWORD PTR [rsp+0x40]
   140005e73:	mov    rcx,QWORD PTR [rsp+0x78]
   140005e78:	inc    edx
   140005e7a:	add    rcx,0x8
   140005e7e:	mov    QWORD PTR [rsp+0x78],rcx
   140005e83:	mov    rcx,QWORD PTR [rcx-0x8]
   140005e87:	mov    DWORD PTR [rsp+0x40],edx
   140005e8b:	test   rcx,rcx
   140005e8e:	jne    0x140005ea1
   140005e90:	lea    r12,[rip+0x385c1]        # 0x14003e458
   140005e97:	mov    QWORD PTR [rsp+0xd0],r12
   140005e9f:	jmp    0x140005f07
   140005ea1:	mov    edx,r12d
   140005ea4:	call   0x140002e40
   140005ea9:	mov    r12,rax
   140005eac:	mov    QWORD PTR [rsp+0xd8],rax
   140005eb4:	test   rax,rax
   140005eb7:	je     0x1400083bd
   140005ebd:	mov    QWORD PTR [rsp+0xd0],rax
   140005ec5:	jmp    0x140005f07
   140005ec7:	test   rdx,rdx
   140005eca:	je     0x140005edd
   140005ecc:	movsxd rax,r10d
   140005ecf:	inc    r10d
   140005ed2:	mov    rcx,QWORD PTR [rdx+rax*8]
   140005ed6:	mov    DWORD PTR [rsp+0x40],r10d
   140005edb:	jmp    0x140005ef1
   140005edd:	mov    rcx,QWORD PTR [r11]
   140005ee0:	inc    r10d
   140005ee3:	add    r11,0x8
   140005ee7:	mov    DWORD PTR [rsp+0x40],r10d
   140005eec:	mov    QWORD PTR [rsp+0x78],r11
   140005ef1:	lea    r12,[rip+0x38560]        # 0x14003e458
   140005ef8:	test   rcx,rcx
   140005efb:	cmovne r12,rcx
   140005eff:	mov    QWORD PTR [rsp+0xd0],r12
   140005f07:	movsxd rdi,DWORD PTR [rsp+0xa0]
   140005f0f:	test   edi,edi
   140005f11:	js     0x140005f7a
   140005f13:	mov    r8,rdi
   140005f16:	xor    edx,edx
   140005f18:	mov    rcx,r12
   140005f1b:	call   0x14002bcd4
   140005f20:	test   rax,rax
   140005f23:	jne    0x140005f29
   140005f25:	mov    eax,edi
   140005f27:	jmp    0x140005f31
   140005f29:	sub    eax,r12d
   140005f2c:	cmp    eax,edi
   140005f2e:	cmovg  eax,edi
   140005f31:	movsxd rdx,eax
   140005f34:	mov    rdi,rdx
   140005f37:	test   eax,eax
   140005f39:	je     0x140005f6a
   140005f3b:	sub    rdx,0x1
   140005f3f:	je     0x140005f52
   140005f41:	movzx  eax,BYTE PTR [rdx+r12*1]
   140005f46:	and    al,0xc0
   140005f48:	cmp    al,0x80
   140005f4a:	jne    0x140005f52
   140005f4c:	sub    rdx,0x1
   140005f50:	jne    0x140005f41
   140005f52:	movzx  eax,BYTE PTR [rdx+r12*1]
   140005f57:	test   al,al
   140005f59:	jns    0x140005f6d
   140005f5b:	movzx  ecx,dl
   140005f5e:	sub    cl,dil
   140005f61:	add    cl,0x7
   140005f64:	sar    al,cl
   140005f66:	cmp    al,0xfe
   140005f68:	je     0x140005f6d
   140005f6a:	mov    rdi,rdx
   140005f6d:	mov    r15d,edi
   140005f70:	mov    BYTE PTR [rsp+0x44],bpl
   140005f75:	jmp    0x1400066cc
   140005f7a:	or     rcx,0xffffffffffffffff
   140005f7e:	xor    eax,eax
   140005f80:	mov    rdi,r12
   140005f83:	repnz scas al,BYTE PTR es:[rdi]
   140005f85:	mov    BYTE PTR [rsp+0x44],bpl
   140005f8a:	not    rcx
   140005f8d:	lea    r15d,[rcx-0x1]
   140005f91:	jmp    0x1400066cc
   140005f96:	or     r9d,0x10
   140005f9a:	mov    DWORD PTR [rsp+0x58],r9d
   140005f9f:	test   r9d,0x1c20
   140005fa6:	je     0x1400060f9
   140005fac:	bt     r9d,0xc
   140005fb1:	jae    0x140006001
   140005fb3:	test   rdx,rdx
   140005fb6:	je     0x140005fda
   140005fb8:	movsxd rax,r10d
   140005fbb:	inc    r10d
   140005fbe:	mov    r8d,0xa
   140005fc4:	mov    rax,QWORD PTR [rdx+rax*8]
   140005fc8:	mov    DWORD PTR [rsp+0x40],r10d
   140005fcd:	mov    QWORD PTR [rsp+0xa8],rax
   140005fd5:	jmp    0x140006558
   140005fda:	mov    rax,QWORD PTR [r11]
   140005fdd:	inc    r10d
   140005fe0:	add    r11,0x8
   140005fe4:	mov    QWORD PTR [rsp+0xa8],rax
   140005fec:	mov    DWORD PTR [rsp+0x40],r10d
   140005ff1:	mov    QWORD PTR [rsp+0x78],r11
   140005ff6:	mov    r8d,0xa
   140005ffc:	jmp    0x140006558
   140006001:	bt     r9d,0xa
   140006006:	jae    0x140006056
   140006008:	test   rdx,rdx
   14000600b:	je     0x14000602f
   14000600d:	movsxd rax,r10d
   140006010:	inc    r10d
   140006013:	mov    r8d,0xa
   140006019:	mov    rax,QWORD PTR [rdx+rax*8]
   14000601d:	mov    DWORD PTR [rsp+0x40],r10d
   140006022:	mov    QWORD PTR [rsp+0xa8],rax
   14000602a:	jmp    0x140006558
   14000602f:	mov    rax,QWORD PTR [r11]
   140006032:	inc    r10d
   140006035:	add    r11,0x8
   140006039:	mov    QWORD PTR [rsp+0xa8],rax
   140006041:	mov    DWORD PTR [rsp+0x40],r10d
   140006046:	mov    QWORD PTR [rsp+0x78],r11
   14000604b:	mov    r8d,0xa
   140006051:	jmp    0x140006558
   140006056:	bt     r9d,0xb
   14000605b:	jae    0x1400060ab
   14000605d:	test   rdx,rdx
   140006060:	je     0x140006084
   140006062:	movsxd rax,r10d
   140006065:	inc    r10d
   140006068:	mov    r8d,0xa
   14000606e:	mov    rax,QWORD PTR [rdx+rax*8]
   140006072:	mov    DWORD PTR [rsp+0x40],r10d
   140006077:	mov    QWORD PTR [rsp+0xa8],rax
   14000607f:	jmp    0x140006558
   140006084:	mov    rax,QWORD PTR [r11]
   140006087:	inc    r10d
   14000608a:	add    r11,0x8
   14000608e:	mov    QWORD PTR [rsp+0xa8],rax
   140006096:	mov    DWORD PTR [rsp+0x40],r10d
   14000609b:	mov    QWORD PTR [rsp+0x78],r11
   1400060a0:	mov    r8d,0xa
   1400060a6:	jmp    0x140006558
   1400060ab:	test   rdx,rdx
   1400060ae:	je     0x1400060d2
   1400060b0:	movsxd rax,r10d
   1400060b3:	inc    r10d
   1400060b6:	mov    r8d,0xa
   1400060bc:	mov    rax,QWORD PTR [rdx+rax*8]
   1400060c0:	mov    DWORD PTR [rsp+0x40],r10d
   1400060c5:	mov    QWORD PTR [rsp+0xa8],rax
   1400060cd:	jmp    0x140006558
   1400060d2:	mov    rax,QWORD PTR [r11]
   1400060d5:	inc    r10d
   1400060d8:	add    r11,0x8
   1400060dc:	mov    QWORD PTR [rsp+0xa8],rax
   1400060e4:	mov    DWORD PTR [rsp+0x40],r10d
   1400060e9:	mov    QWORD PTR [rsp+0x78],r11
   1400060ee:	mov    r8d,0xa
   1400060f4:	jmp    0x140006558
   1400060f9:	test   r9b,0x10
   1400060fd:	je     0x140006144
   1400060ff:	test   rdx,rdx
   140006102:	je     0x140006121
   140006104:	movsxd rax,r10d
   140006107:	inc    r10d
   14000610a:	mov    r8d,0xa
   140006110:	mov    eax,DWORD PTR [rdx+rax*8]
   140006113:	mov    DWORD PTR [rsp+0x40],r10d
   140006118:	mov    DWORD PTR [rsp+0x60],eax
   14000611c:	jmp    0x140006558
   140006121:	mov    eax,DWORD PTR [r11]
   140006124:	inc    r10d
   140006127:	add    r11,0x8
   14000612b:	mov    DWORD PTR [rsp+0x60],eax
   14000612f:	mov    DWORD PTR [rsp+0x40],r10d
   140006134:	mov    QWORD PTR [rsp+0x78],r11
   140006139:	mov    r8d,0xa
   14000613f:	jmp    0x140006558
   140006144:	test   r9b,0x40
   140006148:	je     0x140006195
   14000614a:	test   rdx,rdx
   14000614d:	je     0x14000616f
   14000614f:	movsxd rax,r10d
   140006152:	inc    r10d
   140006155:	mov    r8d,0xa
   14000615b:	mov    ecx,DWORD PTR [rdx+rax*8]
   14000615e:	mov    DWORD PTR [rsp+0x40],r10d
   140006163:	movzx  eax,cx
   140006166:	mov    DWORD PTR [rsp+0x60],eax
   14000616a:	jmp    0x140006558
   14000616f:	mov    ecx,DWORD PTR [r11]
   140006172:	inc    r10d
   140006175:	add    r11,0x8
   140006179:	movzx  eax,cx
   14000617c:	mov    DWORD PTR [rsp+0x40],r10d
   140006181:	mov    QWORD PTR [rsp+0x78],r11
   140006186:	mov    DWORD PTR [rsp+0x60],eax
   14000618a:	mov    r8d,0xa
   140006190:	jmp    0x140006558
   140006195:	bt     r9d,0xd
   14000619a:	jae    0x1400061e7
   14000619c:	test   rdx,rdx
   14000619f:	je     0x1400061c1
   1400061a1:	movsxd rax,r10d
   1400061a4:	inc    r10d
   1400061a7:	mov    r8d,0xa
   1400061ad:	mov    ecx,DWORD PTR [rdx+rax*8]
   1400061b0:	mov    DWORD PTR [rsp+0x40],r10d
   1400061b5:	movzx  eax,cl
   1400061b8:	mov    DWORD PTR [rsp+0x60],eax
   1400061bc:	jmp    0x140006558
   1400061c1:	mov    ecx,DWORD PTR [r11]
   1400061c4:	inc    r10d
   1400061c7:	add    r11,0x8
   1400061cb:	movzx  eax,cl
   1400061ce:	mov    DWORD PTR [rsp+0x40],r10d
   1400061d3:	mov    QWORD PTR [rsp+0x78],r11
   1400061d8:	mov    DWORD PTR [rsp+0x60],eax
   1400061dc:	mov    r8d,0xa
   1400061e2:	jmp    0x140006558
   1400061e7:	test   rdx,rdx
   1400061ea:	je     0x140006209
   1400061ec:	movsxd rax,r10d
   1400061ef:	inc    r10d
   1400061f2:	mov    r8d,0xa
   1400061f8:	mov    eax,DWORD PTR [rdx+rax*8]
   1400061fb:	mov    DWORD PTR [rsp+0x40],r10d
   140006200:	mov    DWORD PTR [rsp+0x60],eax
   140006204:	jmp    0x140006558
   140006209:	mov    eax,DWORD PTR [r11]
   14000620c:	inc    r10d
   14000620f:	add    r11,0x8
   140006213:	mov    DWORD PTR [rsp+0x60],eax
   140006217:	mov    DWORD PTR [rsp+0x40],r10d
   14000621c:	mov    QWORD PTR [rsp+0x78],r11
   140006221:	mov    r8d,0xa
   140006227:	jmp    0x140006558
   14000622c:	lea    rax,[rip+0x381d5]        # 0x14003e408
   140006233:	mov    QWORD PTR [rsp+0x118],rax
   14000623b:	jmp    0x14000624c
   14000623d:	lea    rax,[rip+0x381ac]        # 0x14003e3f0
   140006244:	mov    QWORD PTR [rsp+0x118],rax
   14000624c:	mov    edx,r9d
   14000624f:	and    edx,0x1c20
   140006255:	je     0x1400063bc
   14000625b:	bt     r9d,0xc
   140006260:	jae    0x1400062b5
   140006262:	mov    rbp,QWORD PTR [rsp+0xc8]
   14000626a:	test   rbp,rbp
   14000626d:	je     0x140006290
   14000626f:	mov    ecx,DWORD PTR [rsp+0x60]
   140006273:	movsxd rax,r10d
   140006276:	inc    r10d
   140006279:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
   14000627e:	mov    DWORD PTR [rsp+0x40],r10d
   140006283:	mov    QWORD PTR [rsp+0xa8],rax
   14000628b:	jmp    0x140006515
   140006290:	mov    rax,QWORD PTR [r11]
   140006293:	mov    ecx,DWORD PTR [rsp+0x60]
   140006297:	inc    r10d
   14000629a:	add    r11,0x8
   14000629e:	mov    DWORD PTR [rsp+0x40],r10d
   1400062a3:	mov    QWORD PTR [rsp+0xa8],rax
   1400062ab:	mov    QWORD PTR [rsp+0x78],r11
   1400062b0:	jmp    0x140006515
   1400062b5:	bt     r9d,0xa
   1400062ba:	jae    0x14000630f
   1400062bc:	mov    rbp,QWORD PTR [rsp+0xc8]
   1400062c4:	test   rbp,rbp
   1400062c7:	je     0x1400062ea
   1400062c9:	mov    ecx,DWORD PTR [rsp+0x60]
   1400062cd:	movsxd rax,r10d
   1400062d0:	inc    r10d
   1400062d3:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
   1400062d8:	mov    DWORD PTR [rsp+0x40],r10d
   1400062dd:	mov    QWORD PTR [rsp+0xa8],rax
   1400062e5:	jmp    0x140006515
   1400062ea:	mov    rax,QWORD PTR [r11]
   1400062ed:	mov    ecx,DWORD PTR [rsp+0x60]
   1400062f1:	inc    r10d
   1400062f4:	add    r11,0x8
   1400062f8:	mov    DWORD PTR [rsp+0x40],r10d
   1400062fd:	mov    QWORD PTR [rsp+0xa8],rax
   140006305:	mov    QWORD PTR [rsp+0x78],r11
   14000630a:	jmp    0x140006515
   14000630f:	bt     r9d,0xb
   140006314:	jae    0x140006369
   140006316:	mov    rbp,QWORD PTR [rsp+0xc8]
   14000631e:	test   rbp,rbp
   140006321:	je     0x140006344
   140006323:	mov    ecx,DWORD PTR [rsp+0x60]
   140006327:	movsxd rax,r10d
   14000632a:	inc    r10d
   14000632d:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
   140006332:	mov    DWORD PTR [rsp+0x40],r10d
   140006337:	mov    QWORD PTR [rsp+0xa8],rax
   14000633f:	jmp    0x140006515
   140006344:	mov    rax,QWORD PTR [r11]
   140006347:	mov    ecx,DWORD PTR [rsp+0x60]
   14000634b:	inc    r10d
   14000634e:	add    r11,0x8
   140006352:	mov    DWORD PTR [rsp+0x40],r10d
   140006357:	mov    QWORD PTR [rsp+0xa8],rax
   14000635f:	mov    QWORD PTR [rsp+0x78],r11
   140006364:	jmp    0x140006515
   140006369:	mov    rbp,QWORD PTR [rsp+0xc8]
   140006371:	test   rbp,rbp
   140006374:	je     0x140006397
   140006376:	mov    ecx,DWORD PTR [rsp+0x60]
   14000637a:	movsxd rax,r10d
   14000637d:	inc    r10d
   140006380:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
   140006385:	mov    DWORD PTR [rsp+0x40],r10d
   14000638a:	mov    QWORD PTR [rsp+0xa8],rax
   140006392:	jmp    0x140006515
   140006397:	mov    rax,QWORD PTR [r11]
   14000639a:	mov    ecx,DWORD PTR [rsp+0x60]
   14000639e:	inc    r10d
   1400063a1:	add    r11,0x8
   1400063a5:	mov    DWORD PTR [rsp+0x40],r10d
   1400063aa:	mov    QWORD PTR [rsp+0xa8],rax
   1400063b2:	mov    QWORD PTR [rsp+0x78],r11
   1400063b7:	jmp    0x140006515
   1400063bc:	test   r9b,0x10
   1400063c0:	je     0x140006414
   1400063c2:	mov    rbp,QWORD PTR [rsp+0xc8]
   1400063ca:	test   rbp,rbp
   1400063cd:	je     0x1400063ef
   1400063cf:	movsxd rax,r10d
   1400063d2:	inc    r10d
   1400063d5:	mov    ecx,DWORD PTR [rbp+rax*8+0x0]
   1400063d9:	mov    rax,QWORD PTR [rsp+0xa8]
   1400063e1:	mov    DWORD PTR [rsp+0x40],r10d
   1400063e6:	mov    DWORD PTR [rsp+0x60],ecx
   1400063ea:	jmp    0x140006515
   1400063ef:	mov    ecx,DWORD PTR [r11]
   1400063f2:	mov    rax,QWORD PTR [rsp+0xa8]
   1400063fa:	inc    r10d
   1400063fd:	add    r11,0x8
   140006401:	mov    DWORD PTR [rsp+0x40],r10d
   140006406:	mov    DWORD PTR [rsp+0x60],ecx
   14000640a:	mov    QWORD PTR [rsp+0x78],r11
   14000640f:	jmp    0x140006515
   140006414:	test   r9b,0x40
   140006418:	je     0x140006472
   14000641a:	mov    rbp,QWORD PTR [rsp+0xc8]
   140006422:	test   rbp,rbp
   140006425:	je     0x14000644a
   140006427:	movsxd rax,r10d
   14000642a:	inc    r10d
   14000642d:	mov    ecx,DWORD PTR [rbp+rax*8+0x0]
   140006431:	mov    rax,QWORD PTR [rsp+0xa8]
   140006439:	mov    DWORD PTR [rsp+0x40],r10d
   14000643e:	movzx  ecx,cx
   140006441:	mov    DWORD PTR [rsp+0x60],ecx
   140006445:	jmp    0x140006515
   14000644a:	mov    ecx,DWORD PTR [r11]
   14000644d:	mov    rax,QWORD PTR [rsp+0xa8]
   140006455:	inc    r10d
   140006458:	add    r11,0x8
   14000645c:	movzx  ecx,cx
   14000645f:	mov    DWORD PTR [rsp+0x40],r10d
   140006464:	mov    DWORD PTR [rsp+0x60],ecx
   140006468:	mov    QWORD PTR [rsp+0x78],r11
   14000646d:	jmp    0x140006515
   140006472:	bt     r9d,0xd
   140006477:	jae    0x1400064cb
   140006479:	mov    rbp,QWORD PTR [rsp+0xc8]
   140006481:	test   rbp,rbp
   140006484:	je     0x1400064a6
   140006486:	movsxd rax,r10d
   140006489:	inc    r10d
   14000648c:	mov    ecx,DWORD PTR [rbp+rax*8+0x0]
   140006490:	mov    rax,QWORD PTR [rsp+0xa8]
   140006498:	mov    DWORD PTR [rsp+0x40],r10d
   14000649d:	movzx  ecx,cl
   1400064a0:	mov    DWORD PTR [rsp+0x60],ecx
   1400064a4:	jmp    0x140006515
   1400064a6:	mov    ecx,DWORD PTR [r11]
   1400064a9:	mov    rax,QWORD PTR [rsp+0xa8]
   1400064b1:	inc    r10d
   1400064b4:	add    r11,0x8
   1400064b8:	movzx  ecx,cl
   1400064bb:	mov    DWORD PTR [rsp+0x40],r10d
   1400064c0:	mov    DWORD PTR [rsp+0x60],ecx
   1400064c4:	mov    QWORD PTR [rsp+0x78],r11
   1400064c9:	jmp    0x140006515
   1400064cb:	mov    rbp,QWORD PTR [rsp+0xc8]
   1400064d3:	test   rbp,rbp
   1400064d6:	je     0x1400064f5
   1400064d8:	movsxd rax,r10d
   1400064db:	inc    r10d
   1400064de:	mov    ecx,DWORD PTR [rbp+rax*8+0x0]
   1400064e2:	mov    rax,QWORD PTR [rsp+0xa8]
   1400064ea:	mov    DWORD PTR [rsp+0x40],r10d
   1400064ef:	mov    DWORD PTR [rsp+0x60],ecx
   1400064f3:	jmp    0x140006515
   1400064f5:	mov    ecx,DWORD PTR [r11]
   1400064f8:	mov    rax,QWORD PTR [rsp+0xa8]
   140006500:	inc    r10d
   140006503:	add    r11,0x8
   140006507:	mov    DWORD PTR [rsp+0x40],r10d
   14000650c:	mov    DWORD PTR [rsp+0x60],ecx
   140006510:	mov    QWORD PTR [rsp+0x78],r11
   140006515:	mov    r8d,0x10
   14000651b:	test   r9b,0x1
   14000651f:	je     0x14000654e
   140006521:	test   edx,edx
   140006523:	je     0x14000652f
   140006525:	xor    edx,edx
   140006527:	test   rax,rax
   14000652a:	setne  dl
   14000652d:	jmp    0x140006536
   14000652f:	xor    edx,edx
   140006531:	test   ecx,ecx
   140006533:	setne  dl
   140006536:	movzx  ecx,BYTE PTR [rsp+0xb9]
   14000653e:	movzx  eax,dil
   140006542:	test   edx,edx
   140006544:	cmovne ecx,eax
   140006547:	mov    BYTE PTR [rsp+0xb9],cl
   14000654e:	btr    r9d,0x9
   140006553:	mov    DWORD PTR [rsp+0x58],r9d
   140006558:	mov    BYTE PTR [rsp+0x44],0x0
   14000655d:	mov    ebp,r12d
   140006560:	mov    DWORD PTR [rsp+0xe8],r12d
   140006568:	test   r12d,r12d
   14000656b:	js     0x140006577
   14000656d:	btr    r9d,0x7
   140006572:	mov    DWORD PTR [rsp+0x58],r9d
   140006577:	lea    r12,[rsp+0x294]
   14000657f:	mov    QWORD PTR [rsp+0xd0],r12
   140006587:	test   r9d,0x1c20
   14000658e:	je     0x140006614
   140006594:	mov    r10,QWORD PTR [rsp+0xa8]
   14000659c:	test   r10,r10
   14000659f:	jne    0x1400065c0
   1400065a1:	mov    edi,DWORD PTR [rsp+0xa0]
   1400065a8:	test   edi,edi
   1400065aa:	jne    0x1400065c0
   1400065ac:	test   r9b,0x1
   1400065b0:	je     0x140006687
   1400065b6:	cmp    r8d,0x8
   1400065ba:	jne    0x140006687
   1400065c0:	mov    rax,QWORD PTR [rsp+0xf8]
   1400065c8:	mov    ecx,r9d
   1400065cb:	lea    rdx,[rsp+0x294]
   1400065d3:	mov    QWORD PTR [rsp+0x38],rax
   1400065d8:	movzx  eax,BYTE PTR [rsp+0xb0]
   1400065e0:	and    ecx,0x200
   1400065e6:	mov    BYTE PTR [rsp+0x30],al
   1400065ea:	mov    rax,QWORD PTR [rsp+0x118]
   1400065f2:	mov    DWORD PTR [rsp+0x28],ecx
   1400065f6:	and    r9d,0x1
   1400065fa:	mov    rcx,r10
   1400065fd:	mov    QWORD PTR [rsp+0x20],rax
   140006602:	call   0x140002c40
   140006607:	mov    r12,rax
   14000660a:	mov    QWORD PTR [rsp+0xd0],rax
   140006612:	jmp    0x140006687
   140006614:	mov    r10d,DWORD PTR [rsp+0x60]
   140006619:	test   r10d,r10d
   14000661c:	jne    0x140006635
   14000661e:	mov    edi,DWORD PTR [rsp+0xa0]
   140006625:	test   edi,edi
   140006627:	jne    0x140006635
   140006629:	test   r9b,0x1
   14000662d:	je     0x140006687
   14000662f:	cmp    r8d,0x8
   140006633:	jne    0x140006687
   140006635:	mov    rax,QWORD PTR [rsp+0xf8]
   14000663d:	mov    ecx,r9d
   140006640:	lea    rdx,[rsp+0x294]
   140006648:	mov    QWORD PTR [rsp+0x38],rax
   14000664d:	movzx  eax,BYTE PTR [rsp+0xb0]
   140006655:	and    ecx,0x200
   14000665b:	mov    BYTE PTR [rsp+0x30],al
   14000665f:	mov    rax,QWORD PTR [rsp+0x118]
   140006667:	mov    DWORD PTR [rsp+0x28],ecx
   14000666b:	and    r9d,0x1
   14000666f:	mov    ecx,r10d
   140006672:	mov    QWORD PTR [rsp+0x20],rax
   140006677:	call   0x140002ad0
   14000667c:	mov    r12,rax
   14000667f:	mov    QWORD PTR [rsp+0xd0],rax
   140006687:	lea    rax,[rsp+0x294]
   14000668f:	sub    eax,r12d
   140006692:	cmp    eax,0x64
   140006695:	mov    r15d,eax
   140006698:	jle    0x1400066cc
   14000669a:	call   0x14002adf4
   14000669f:	jmp    0x1400066cc
   1400066a1:	test   edi,edi
   1400066a3:	je     0x1400083fc
   1400066a9:	lea    rax,[rsp+0x230]
   1400066b1:	mov    BYTE PTR [rsp+0x230],dil
   1400066b9:	mov    r15d,0x1
   1400066bf:	mov    QWORD PTR [rsp+0xd0],rax
   1400066c7:	mov    BYTE PTR [rsp+0x44],bpl
   1400066cc:	cmp    ebp,r15d
   1400066cf:	mov    edi,r15d
   1400066d2:	cmovg  edi,ebp
   1400066d5:	cmp    BYTE PTR [rsp+0x44],0x0
   1400066da:	mov    DWORD PTR [rsp+0xec],edi
   1400066e1:	je     0x1400066ec
   1400066e3:	inc    edi
   1400066e5:	mov    DWORD PTR [rsp+0xec],edi
   1400066ec:	cmp    BYTE PTR [rsp+0xb9],0x0
   1400066f4:	je     0x140006700
   1400066f6:	add    edi,0x2
   1400066f9:	mov    DWORD PTR [rsp+0xec],edi
   140006700:	mov    ecx,DWORD PTR [rsp+0xbc]
   140006707:	mov    edx,DWORD PTR [rsp+0x70]
   14000670b:	mov    eax,edi
   14000670d:	cmp    ecx,edi
   14000670f:	cmovg  eax,ecx
   140006712:	add    eax,edx
   140006714:	mov    DWORD PTR [rsp+0x138],eax
   14000671b:	cmp    eax,0x7fffffff
   140006720:	ja     0x1400083e7
   140006726:	mov    ebp,DWORD PTR [rsp+0x58]
   14000672a:	mov    r12d,ebp
   14000672d:	and    r12d,0x84
   140006734:	mov    DWORD PTR [rsp+0xc0],r12d
   14000673c:	jne    0x140006929
   140006742:	mov    ebp,ecx
   140006744:	sub    ebp,edi
   140006746:	test   ebp,ebp
   140006748:	jle    0x14000691f
   14000674e:	cmp    ebp,0x10
   140006751:	jle    0x14000688b
   140006757:	lea    rax,[rip+0x4f932]        # 0x140056090
   14000675e:	xchg   ax,ax
   140006760:	inc    esi
   140006762:	mov    QWORD PTR [rbx],rax
   140006765:	mov    QWORD PTR [rbx+0x8],0x10
   14000676d:	add    r13d,0x10
   140006771:	add    rbx,0x10
   140006775:	cmp    esi,0x8
   140006778:	jl     0x140006878
   14000677e:	test   r13d,r13d
   140006781:	jne    0x14000678a
   140006783:	xor    esi,esi
   140006785:	jmp    0x140006870
   14000678a:	cmp    BYTE PTR [rsp+0x80],0x0
   140006792:	je     0x1400067fe
   140006794:	mov    r8,QWORD PTR [rsp+0x310]
   14000679c:	movsxd rax,r13d
   14000679f:	lea    rcx,[rax+r14*1+0x1]
   1400067a4:	cmp    rcx,r8
   1400067a7:	jbe    0x1400067fe
   1400067a9:	lea    rax,[rcx+r8*1-0x1]
   1400067ae:	mov    rcx,QWORD PTR [rsp+0x68]
   1400067b3:	xor    edx,edx
   1400067b5:	div    r8
   1400067b8:	mov    rdi,rax
   1400067bb:	imul   rdi,r8
   1400067bf:	mov    rdx,rdi
   1400067c2:	call   0x14002bf78
   1400067c7:	test   rax,rax
   1400067ca:	jne    0x1400067de
   1400067cc:	mov    BYTE PTR [rsp+0x81],0x1
   1400067d4:	mov    eax,0x1
   1400067d9:	jmp    0x14000685c
   1400067de:	mov    QWORD PTR [rsp+0x68],rax
   1400067e3:	mov    QWORD PTR [rsp+0x88],rax
   1400067eb:	mov    rax,rdi
   1400067ee:	mov    QWORD PTR [rsp+0x310],rax
   1400067f6:	mov    QWORD PTR [rsp+0x90],rax
   1400067fe:	test   esi,esi
   140006800:	jle    0x14000685a
   140006802:	mov    r12,QWORD PTR [rsp+0x68]
   140006807:	lea    rbx,[rsp+0x158]
   14000680f:	nop
   140006810:	mov    ecx,DWORD PTR [rsp+0x90]
   140006817:	sub    ecx,DWORD PTR [rsp+0x98]
   14000681e:	dec    ecx
   140006820:	movsxd rax,ecx
   140006823:	cmp    rax,QWORD PTR [rbx]
   140006826:	jbe    0x14000682a
   140006828:	mov    ecx,DWORD PTR [rbx]
   14000682a:	mov    rdx,QWORD PTR [rbx-0x8]
   14000682e:	movsxd rdi,ecx
   140006831:	lea    rcx,[r14+r12*1]
   140006835:	mov    r8,rdi
   140006838:	call   0x14002b9a0
   14000683d:	add    r14,rdi
   140006840:	add    rbx,0x10
   140006844:	sub    rsi,0x1
   140006848:	mov    QWORD PTR [rsp+0x98],r14
   140006850:	jne    0x140006810
   140006852:	mov    r12d,DWORD PTR [rsp+0xc0]
   14000685a:	xor    eax,eax
   14000685c:	xor    r13d,r13d
   14000685f:	xor    esi,esi
   140006861:	test   eax,eax
   140006863:	jne    0x1400084e7
   140006869:	lea    rax,[rip+0x4f820]        # 0x140056090
   140006870:	lea    rbx,[rsp+0x150]
   140006878:	sub    ebp,0x10
   14000687b:	cmp    ebp,0x10
   14000687e:	jg     0x140006760
   140006884:	mov    edi,DWORD PTR [rsp+0xec]
   14000688b:	lea    rax,[rip+0x4f7fe]        # 0x140056090
   140006892:	inc    esi
   140006894:	add    r13d,ebp
   140006897:	mov    QWORD PTR [rbx],rax
   14000689a:	movsxd rax,ebp
   14000689d:	add    rbx,0x10
   1400068a1:	cmp    esi,0x8
   1400068a4:	mov    QWORD PTR [rbx-0x8],rax
   1400068a8:	mov    DWORD PTR [rsp+0x54],r13d
   1400068ad:	mov    DWORD PTR [rsp+0x50],esi
   1400068b1:	jl     0x140006925
   1400068b3:	test   r13d,r13d
   1400068b6:	jne    0x1400068cc
   1400068b8:	mov    ebp,DWORD PTR [rsp+0x58]
   1400068bc:	xor    esi,esi
   1400068be:	lea    rbx,[rsp+0x150]
   1400068c6:	mov    DWORD PTR [rsp+0x50],esi
   1400068ca:	jmp    0x140006929
   1400068cc:	lea    rdx,[rsp+0x48]
   1400068d1:	lea    rcx,[rsp+0x80]
   1400068d9:	call   0x1400029e0
   1400068de:	xor    r13d,r13d
   1400068e1:	xor    esi,esi
   1400068e3:	mov    DWORD PTR [rsp+0x54],r13d
   1400068e8:	mov    DWORD PTR [rsp+0x50],esi
   1400068ec:	test   eax,eax
   1400068ee:	jne    0x1400083ce
   1400068f4:	mov    rax,QWORD PTR [rsp+0x90]
   1400068fc:	mov    ebp,DWORD PTR [rsp+0x58]
   140006900:	lea    rbx,[rsp+0x150]
   140006908:	mov    QWORD PTR [rsp+0x310],rax
   140006910:	mov    rax,QWORD PTR [rsp+0x88]
   140006918:	mov    QWORD PTR [rsp+0x68],rax
   14000691d:	jmp    0x140006929
   14000691f:	mov    ebp,DWORD PTR [rsp+0x58]
   140006923:	jmp    0x140006929
   140006925:	mov    ebp,DWORD PTR [rsp+0x58]
   140006929:	cmp    BYTE PTR [rsp+0x44],0x0
   14000692e:	je     0x1400069b5
   140006934:	inc    esi
   140006936:	inc    r13d
   140006939:	lea    rax,[rsp+0x44]
   14000693e:	mov    QWORD PTR [rbx+0x8],0x1
   140006946:	mov    QWORD PTR [rbx],rax
   140006949:	add    rbx,0x10
   14000694d:	cmp    esi,0x8
   140006950:	mov    DWORD PTR [rsp+0x54],r13d
   140006955:	mov    DWORD PTR [rsp+0x50],esi
   140006959:	jl     0x1400069b5
   14000695b:	test   r13d,r13d
   14000695e:	jne    0x140006968
   140006960:	xor    esi,esi
   140006962:	mov    DWORD PTR [rsp+0x50],esi
   140006966:	jmp    0x1400069ad
   140006968:	lea    rdx,[rsp+0x48]
   14000696d:	lea    rcx,[rsp+0x80]
   140006975:	call   0x1400029e0
   14000697a:	xor    r13d,r13d
   14000697d:	xor    esi,esi
   14000697f:	mov    DWORD PTR [rsp+0x54],r13d
   140006984:	mov    DWORD PTR [rsp+0x50],esi
   140006988:	test   eax,eax
   14000698a:	jne    0x1400083ce
   140006990:	mov    rax,QWORD PTR [rsp+0x90]
   140006998:	mov    QWORD PTR [rsp+0x310],rax
   1400069a0:	mov    rax,QWORD PTR [rsp+0x88]
   1400069a8:	mov    QWORD PTR [rsp+0x68],rax
   1400069ad:	lea    rbx,[rsp+0x150]
   1400069b5:	mov    r14d,ebp
   1400069b8:	and    r14d,0x100
   1400069bf:	mov    DWORD PTR [rsp+0xc0],r14d
   1400069c7:	je     0x140006a85
   1400069cd:	cmp    DWORD PTR [rsp+0xb4],0x7fffffff
   1400069d8:	jne    0x140006a85
   1400069de:	mov    rax,QWORD PTR [rsp+0xd0]
   1400069e6:	inc    esi
   1400069e8:	add    r13d,r15d
   1400069eb:	mov    QWORD PTR [rbx],rax
   1400069ee:	movsxd rax,r15d
   1400069f1:	add    rbx,0x10
   1400069f5:	cmp    esi,0x8
   1400069f8:	mov    QWORD PTR [rbx-0x8],rax
   1400069fc:	mov    DWORD PTR [rsp+0x54],r13d
   140006a01:	mov    DWORD PTR [rsp+0x50],esi
   140006a05:	jl     0x1400080e6
   140006a0b:	test   r13d,r13d
   140006a0e:	jne    0x140006a2b
   140006a10:	mov    r12,QWORD PTR [rsp+0x98]
   140006a18:	xor    esi,esi
   140006a1a:	lea    rbx,[rsp+0x150]
   140006a22:	mov    DWORD PTR [rsp+0x50],esi
   140006a26:	jmp    0x1400080ee
   140006a2b:	lea    rdx,[rsp+0x48]
   140006a30:	lea    rcx,[rsp+0x80]
   140006a38:	call   0x1400029e0
   140006a3d:	xor    r13d,r13d
   140006a40:	xor    esi,esi
   140006a42:	mov    DWORD PTR [rsp+0x54],r13d
   140006a47:	mov    DWORD PTR [rsp+0x50],esi
   140006a4b:	test   eax,eax
   140006a4d:	jne    0x1400083ce
   140006a53:	mov    rax,QWORD PTR [rsp+0x90]
   140006a5b:	mov    r12,QWORD PTR [rsp+0x98]
   140006a63:	lea    rbx,[rsp+0x150]
   140006a6b:	mov    QWORD PTR [rsp+0x310],rax
   140006a73:	mov    rax,QWORD PTR [rsp+0x88]
   140006a7b:	mov    QWORD PTR [rsp+0x68],rax
   140006a80:	jmp    0x1400080ee
   140006a85:	cmp    BYTE PTR [rsp+0xb9],0x0
   140006a8d:	je     0x140006b20
   140006a93:	inc    esi
   140006a95:	add    r13d,0x2
   140006a99:	lea    rax,[rsp+0xb8]
   140006aa1:	mov    QWORD PTR [rbx+0x8],0x2
   140006aa9:	mov    QWORD PTR [rbx],rax
   140006aac:	add    rbx,0x10
   140006ab0:	cmp    esi,0x8
   140006ab3:	mov    BYTE PTR [rsp+0xb8],0x30
   140006abb:	mov    DWORD PTR [rsp+0x54],r13d
   140006ac0:	mov    DWORD PTR [rsp+0x50],esi
   140006ac4:	jl     0x140006b20
   140006ac6:	test   r13d,r13d
   140006ac9:	jne    0x140006ad3
   140006acb:	xor    esi,esi
   140006acd:	mov    DWORD PTR [rsp+0x50],esi
   140006ad1:	jmp    0x140006b18
   140006ad3:	lea    rdx,[rsp+0x48]
   140006ad8:	lea    rcx,[rsp+0x80]
   140006ae0:	call   0x1400029e0
   140006ae5:	xor    r13d,r13d
   140006ae8:	xor    esi,esi
   140006aea:	mov    DWORD PTR [rsp+0x54],r13d
   140006aef:	mov    DWORD PTR [rsp+0x50],esi
   140006af3:	test   eax,eax
   140006af5:	jne    0x1400083ce
   140006afb:	mov    rax,QWORD PTR [rsp+0x90]
   140006b03:	mov    QWORD PTR [rsp+0x310],rax
   140006b0b:	mov    rax,QWORD PTR [rsp+0x88]
   140006b13:	mov    QWORD PTR [rsp+0x68],rax
   140006b18:	lea    rbx,[rsp+0x150]
   140006b20:	cmp    r12d,0x80
   140006b27:	jne    0x140006d31
   140006b2d:	mov    ebp,DWORD PTR [rsp+0xbc]
   140006b34:	sub    ebp,edi
   140006b36:	test   ebp,ebp
   140006b38:	jle    0x140006d42
   140006b3e:	cmp    ebp,0x10
   140006b41:	jle    0x140006c86
   140006b47:	mov    r12,QWORD PTR [rsp+0x98]
   140006b4f:	lea    rax,[rip+0x4f54a]        # 0x1400560a0
   140006b56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006b60:	inc    esi
   140006b62:	mov    QWORD PTR [rbx],rax
   140006b65:	mov    QWORD PTR [rbx+0x8],0x10
   140006b6d:	add    r13d,0x10
   140006b71:	add    rbx,0x10
   140006b75:	cmp    esi,0x8
   140006b78:	jl     0x140006c78
   140006b7e:	test   r13d,r13d
   140006b81:	jne    0x140006b8a
   140006b83:	xor    esi,esi
   140006b85:	jmp    0x140006c70
   140006b8a:	cmp    BYTE PTR [rsp+0x80],0x0
   140006b92:	je     0x140006bfe
   140006b94:	mov    r8,QWORD PTR [rsp+0x310]
   140006b9c:	movsxd rax,r13d
   140006b9f:	lea    rcx,[rax+r12*1+0x1]
   140006ba4:	cmp    rcx,r8
   140006ba7:	jbe    0x140006bfe
   140006ba9:	lea    rax,[rcx+r8*1-0x1]
   140006bae:	mov    rcx,QWORD PTR [rsp+0x68]
   140006bb3:	xor    edx,edx
   140006bb5:	div    r8
   140006bb8:	mov    rdi,rax
   140006bbb:	imul   rdi,r8
   140006bbf:	mov    rdx,rdi
   140006bc2:	call   0x14002bf78
   140006bc7:	test   rax,rax
   140006bca:	jne    0x140006bde
   140006bcc:	mov    BYTE PTR [rsp+0x81],0x1
   140006bd4:	mov    eax,0x1
   140006bd9:	jmp    0x140006c5c
   140006bde:	mov    QWORD PTR [rsp+0x68],rax
   140006be3:	mov    QWORD PTR [rsp+0x88],rax
   140006beb:	mov    rax,rdi
   140006bee:	mov    QWORD PTR [rsp+0x310],rax
   140006bf6:	mov    QWORD PTR [rsp+0x90],rax
   140006bfe:	test   esi,esi
   140006c00:	jle    0x140006c5a
   140006c02:	mov    r14,QWORD PTR [rsp+0x68]
   140006c07:	lea    rbx,[rsp+0x158]
   140006c0f:	nop
   140006c10:	mov    ecx,DWORD PTR [rsp+0x90]
   140006c17:	sub    ecx,DWORD PTR [rsp+0x98]
   140006c1e:	dec    ecx
   140006c20:	movsxd rax,ecx
   140006c23:	cmp    rax,QWORD PTR [rbx]
   140006c26:	jbe    0x140006c2a
   140006c28:	mov    ecx,DWORD PTR [rbx]
   140006c2a:	mov    rdx,QWORD PTR [rbx-0x8]
   140006c2e:	movsxd rdi,ecx
   140006c31:	lea    rcx,[r12+r14*1]
   140006c35:	mov    r8,rdi
   140006c38:	call   0x14002b9a0
   140006c3d:	add    r12,rdi
   140006c40:	add    rbx,0x10
   140006c44:	sub    rsi,0x1
   140006c48:	mov    QWORD PTR [rsp+0x98],r12
   140006c50:	jne    0x140006c10
   140006c52:	mov    r14d,DWORD PTR [rsp+0xc0]
   140006c5a:	xor    eax,eax
   140006c5c:	xor    r13d,r13d
   140006c5f:	xor    esi,esi
   140006c61:	test   eax,eax
   140006c63:	jne    0x1400084fd
   140006c69:	lea    rax,[rip+0x4f430]        # 0x1400560a0
   140006c70:	lea    rbx,[rsp+0x150]
   140006c78:	sub    ebp,0x10
   140006c7b:	cmp    ebp,0x10
   140006c7e:	jg     0x140006b60
   140006c84:	jmp    0x140006c8e
   140006c86:	mov    r12,QWORD PTR [rsp+0x98]
   140006c8e:	inc    esi
   140006c90:	add    r13d,ebp
   140006c93:	lea    rdi,[rip+0x4f406]        # 0x1400560a0
   140006c9a:	movsxd rax,ebp
   140006c9d:	mov    QWORD PTR [rbx],rdi
   140006ca0:	add    rbx,0x10
   140006ca4:	cmp    esi,0x8
   140006ca7:	mov    QWORD PTR [rbx-0x8],rax
   140006cab:	mov    DWORD PTR [rsp+0x54],r13d
   140006cb0:	mov    DWORD PTR [rsp+0x50],esi
   140006cb4:	jl     0x140006d57
   140006cba:	test   r13d,r13d
   140006cbd:	jne    0x140006cd6
   140006cbf:	mov    ebp,DWORD PTR [rsp+0x58]
   140006cc3:	xor    esi,esi
   140006cc5:	lea    rbx,[rsp+0x150]
   140006ccd:	mov    DWORD PTR [rsp+0x50],esi
   140006cd1:	jmp    0x140006d5b
   140006cd6:	lea    rdx,[rsp+0x48]
   140006cdb:	lea    rcx,[rsp+0x80]
   140006ce3:	call   0x1400029e0
   140006ce8:	xor    r13d,r13d
   140006ceb:	xor    esi,esi
   140006ced:	mov    DWORD PTR [rsp+0x54],r13d
   140006cf2:	mov    DWORD PTR [rsp+0x50],esi
   140006cf6:	test   eax,eax
   140006cf8:	jne    0x1400083ce
   140006cfe:	mov    rax,QWORD PTR [rsp+0x90]
   140006d06:	mov    r12,QWORD PTR [rsp+0x98]
   140006d0e:	mov    ebp,DWORD PTR [rsp+0x58]
   140006d12:	mov    QWORD PTR [rsp+0x310],rax
   140006d1a:	mov    rax,QWORD PTR [rsp+0x88]
   140006d22:	lea    rbx,[rsp+0x150]
   140006d2a:	mov    QWORD PTR [rsp+0x68],rax
   140006d2f:	jmp    0x140006d5b
   140006d31:	mov    r12,QWORD PTR [rsp+0x98]
   140006d39:	lea    rdi,[rip+0x4f360]        # 0x1400560a0
   140006d40:	jmp    0x140006d5b
   140006d42:	mov    r12,QWORD PTR [rsp+0x98]
   140006d4a:	mov    ebp,DWORD PTR [rsp+0x58]
   140006d4e:	lea    rdi,[rip+0x4f34b]        # 0x1400560a0
   140006d55:	jmp    0x140006d5b
   140006d57:	mov    ebp,DWORD PTR [rsp+0x58]
   140006d5b:	mov    ecx,DWORD PTR [rsp+0xe8]
   140006d62:	sub    ecx,r15d
   140006d65:	mov    DWORD PTR [rsp+0xe8],ecx
   140006d6c:	test   ecx,ecx
   140006d6e:	jle    0x140006f35
   140006d74:	cmp    ecx,0x10
   140006d77:	jle    0x140006eb2
   140006d7d:	nop    DWORD PTR [rax]
   140006d80:	inc    esi
   140006d82:	mov    QWORD PTR [rbx],rdi
   140006d85:	mov    QWORD PTR [rbx+0x8],0x10
   140006d8d:	add    r13d,0x10
   140006d91:	add    rbx,0x10
   140006d95:	cmp    esi,0x8
   140006d98:	jl     0x140006e9f
   140006d9e:	test   r13d,r13d
   140006da1:	jne    0x140006daa
   140006da3:	xor    esi,esi
   140006da5:	jmp    0x140006e97
   140006daa:	cmp    BYTE PTR [rsp+0x80],0x0
   140006db2:	je     0x140006e1e
   140006db4:	mov    r8,QWORD PTR [rsp+0x310]
   140006dbc:	movsxd rax,r13d
   140006dbf:	lea    rcx,[rax+r12*1+0x1]
   140006dc4:	cmp    rcx,r8
   140006dc7:	jbe    0x140006e1e
   140006dc9:	lea    rax,[rcx+r8*1-0x1]
   140006dce:	mov    rcx,QWORD PTR [rsp+0x68]
   140006dd3:	xor    edx,edx
   140006dd5:	div    r8
   140006dd8:	mov    rdi,rax
   140006ddb:	imul   rdi,r8
   140006ddf:	mov    rdx,rdi
   140006de2:	call   0x14002bf78
   140006de7:	test   rax,rax
   140006dea:	jne    0x140006dfe
   140006dec:	mov    BYTE PTR [rsp+0x81],0x1
   140006df4:	mov    eax,0x1
   140006df9:	jmp    0x140006e7c
   140006dfe:	mov    QWORD PTR [rsp+0x68],rax
   140006e03:	mov    QWORD PTR [rsp+0x88],rax
   140006e0b:	mov    rax,rdi
   140006e0e:	mov    QWORD PTR [rsp+0x310],rax
   140006e16:	mov    QWORD PTR [rsp+0x90],rax
   140006e1e:	test   esi,esi
   140006e20:	jle    0x140006e7a
   140006e22:	mov    r14,QWORD PTR [rsp+0x68]
   140006e27:	lea    rbx,[rsp+0x158]
   140006e2f:	nop
   140006e30:	mov    ecx,DWORD PTR [rsp+0x90]
   140006e37:	sub    ecx,DWORD PTR [rsp+0x98]
   140006e3e:	dec    ecx
   140006e40:	movsxd rax,ecx
   140006e43:	cmp    rax,QWORD PTR [rbx]
   140006e46:	jbe    0x140006e4a
   140006e48:	mov    ecx,DWORD PTR [rbx]
   140006e4a:	mov    rdx,QWORD PTR [rbx-0x8]
   140006e4e:	movsxd rdi,ecx
   140006e51:	lea    rcx,[r12+r14*1]
   140006e55:	mov    r8,rdi
   140006e58:	call   0x14002b9a0
   140006e5d:	add    r12,rdi
   140006e60:	add    rbx,0x10
   140006e64:	sub    rsi,0x1
   140006e68:	mov    QWORD PTR [rsp+0x98],r12
   140006e70:	jne    0x140006e30
   140006e72:	mov    r14d,DWORD PTR [rsp+0xc0]
   140006e7a:	xor    eax,eax
   140006e7c:	xor    r13d,r13d
   140006e7f:	xor    esi,esi
   140006e81:	test   eax,eax
   140006e83:	jne    0x140008510
   140006e89:	mov    ecx,DWORD PTR [rsp+0xe8]
   140006e90:	lea    rdi,[rip+0x4f209]        # 0x1400560a0
   140006e97:	lea    rbx,[rsp+0x150]
   140006e9f:	sub    ecx,0x10
   140006ea2:	cmp    ecx,0x10
   140006ea5:	mov    DWORD PTR [rsp+0xe8],ecx
   140006eac:	jg     0x140006d80
   140006eb2:	inc    esi
   140006eb4:	add    r13d,ecx
   140006eb7:	movsxd rax,ecx
   140006eba:	mov    QWORD PTR [rbx],rdi
   140006ebd:	mov    QWORD PTR [rbx+0x8],rax
   140006ec1:	add    rbx,0x10
   140006ec5:	cmp    esi,0x8
   140006ec8:	mov    DWORD PTR [rsp+0x54],r13d
   140006ecd:	mov    DWORD PTR [rsp+0x50],esi
   140006ed1:	jl     0x140006f35
   140006ed3:	test   r13d,r13d
   140006ed6:	jne    0x140006ee0
   140006ed8:	xor    esi,esi
   140006eda:	mov    DWORD PTR [rsp+0x50],esi
   140006ede:	jmp    0x140006f2d
   140006ee0:	lea    rdx,[rsp+0x48]
   140006ee5:	lea    rcx,[rsp+0x80]
   140006eed:	call   0x1400029e0
   140006ef2:	xor    r13d,r13d
   140006ef5:	xor    esi,esi
   140006ef7:	mov    DWORD PTR [rsp+0x54],r13d
   140006efc:	mov    DWORD PTR [rsp+0x50],esi
   140006f00:	test   eax,eax
   140006f02:	jne    0x1400083ce
   140006f08:	mov    rax,QWORD PTR [rsp+0x90]
   140006f10:	mov    r12,QWORD PTR [rsp+0x98]
   140006f18:	mov    QWORD PTR [rsp+0x310],rax
   140006f20:	mov    rax,QWORD PTR [rsp+0x88]
   140006f28:	mov    QWORD PTR [rsp+0x68],rax
   140006f2d:	lea    rbx,[rsp+0x150]
   140006f35:	test   r14d,r14d
   140006f38:	je     0x140008051
   140006f3e:	cmp    BYTE PTR [rsp+0x5c],0x0
   140006f43:	je     0x140007438
   140006f49:	mov    edi,DWORD PTR [rsp+0xa0]
   140006f50:	cmp    edi,0x1
   140006f53:	jg     0x140006ff6
   140006f59:	test   bpl,0x1
   140006f5d:	jne    0x140006ff6
   140006f63:	mov    rax,QWORD PTR [rsp+0xd0]
   140006f6b:	inc    esi
   140006f6d:	inc    r13d
   140006f70:	mov    QWORD PTR [rbx+0x8],0x1
   140006f78:	mov    QWORD PTR [rbx],rax
   140006f7b:	add    rbx,0x10
   140006f7f:	cmp    esi,0x8
   140006f82:	mov    DWORD PTR [rsp+0x54],r13d
   140006f87:	mov    DWORD PTR [rsp+0x50],esi
   140006f8b:	jl     0x140007394
   140006f91:	test   r13d,r13d
   140006f94:	jne    0x140006fa5
   140006f96:	xor    esi,esi
   140006f98:	lea    rbx,[rsp+0x150]
   140006fa0:	jmp    0x140007394
   140006fa5:	lea    rdx,[rsp+0x48]
   140006faa:	lea    rcx,[rsp+0x80]
   140006fb2:	call   0x1400029e0
   140006fb7:	xor    r13d,r13d
   140006fba:	xor    esi,esi
   140006fbc:	test   eax,eax
   140006fbe:	jne    0x1400083ce
   140006fc4:	mov    rax,QWORD PTR [rsp+0x90]
   140006fcc:	mov    r12,QWORD PTR [rsp+0x98]
   140006fd4:	lea    rbx,[rsp+0x150]
   140006fdc:	mov    QWORD PTR [rsp+0x310],rax
   140006fe4:	mov    rax,QWORD PTR [rsp+0x88]
   140006fec:	mov    QWORD PTR [rsp+0x68],rax
   140006ff1:	jmp    0x140007394
   140006ff6:	mov    rcx,QWORD PTR [rsp+0xd0]
   140006ffe:	inc    esi
   140007000:	add    r13d,0x2
   140007004:	movzx  eax,BYTE PTR [rcx]
   140007007:	inc    rcx
   14000700a:	mov    QWORD PTR [rbx+0x8],0x2
   140007012:	mov    BYTE PTR [rsp+0x230],al
   140007019:	mov    rax,QWORD PTR [rsp+0x140]
   140007021:	add    rbx,0x10
   140007025:	cmp    esi,0x8
   140007028:	movzx  eax,BYTE PTR [rax]
   14000702b:	mov    QWORD PTR [rsp+0xd0],rcx
   140007033:	mov    BYTE PTR [rsp+0x231],al
   14000703a:	lea    rax,[rsp+0x230]
   140007042:	mov    DWORD PTR [rsp+0x54],r13d
   140007047:	mov    QWORD PTR [rbx-0x10],rax
   14000704b:	mov    DWORD PTR [rsp+0x50],esi
   14000704f:	jl     0x1400070ae
   140007051:	test   r13d,r13d
   140007054:	jne    0x14000705a
   140007056:	xor    esi,esi
   140007058:	jmp    0x1400070a6
   14000705a:	lea    rdx,[rsp+0x48]
   14000705f:	lea    rcx,[rsp+0x80]
   140007067:	call   0x1400029e0
   14000706c:	xor    r13d,r13d
   14000706f:	xor    esi,esi
   140007071:	test   eax,eax
   140007073:	jne    0x1400083ce
   140007079:	mov    rax,QWORD PTR [rsp+0x90]
   140007081:	mov    r12,QWORD PTR [rsp+0x98]
   140007089:	mov    rcx,QWORD PTR [rsp+0xd0]
   140007091:	mov    QWORD PTR [rsp+0x310],rax
   140007099:	mov    rax,QWORD PTR [rsp+0x88]
   1400070a1:	mov    QWORD PTR [rsp+0x68],rax
   1400070a6:	lea    rbx,[rsp+0x150]
   1400070ae:	mov    edx,DWORD PTR [rsp+0x108]
   1400070b5:	test   edx,edx
   1400070b7:	jle    0x14000726f
   1400070bd:	mov    QWORD PTR [rbx],rcx
   1400070c0:	lea    ecx,[rdx-0x1]
   1400070c3:	inc    esi
   1400070c5:	add    r13d,ecx
   1400070c8:	movsxd rax,ecx
   1400070cb:	add    rbx,0x10
   1400070cf:	cmp    esi,0x8
   1400070d2:	mov    QWORD PTR [rbx-0x8],rax
   1400070d6:	mov    DWORD PTR [rsp+0x54],r13d
   1400070db:	mov    DWORD PTR [rsp+0x50],esi
   1400070df:	jl     0x14000713d
   1400070e1:	test   r13d,r13d
   1400070e4:	jne    0x1400070ea
   1400070e6:	xor    esi,esi
   1400070e8:	jmp    0x140007135
   1400070ea:	lea    rdx,[rsp+0x48]
   1400070ef:	lea    rcx,[rsp+0x80]
   1400070f7:	call   0x1400029e0
   1400070fc:	xor    r13d,r13d
   1400070ff:	xor    esi,esi
   140007101:	test   eax,eax
   140007103:	jne    0x1400083ce
   140007109:	mov    rax,QWORD PTR [rsp+0x90]
   140007111:	mov    r12,QWORD PTR [rsp+0x98]
   140007119:	mov    edx,DWORD PTR [rsp+0x108]
   140007120:	mov    QWORD PTR [rsp+0x310],rax
   140007128:	mov    rax,QWORD PTR [rsp+0x88]
   140007130:	mov    QWORD PTR [rsp+0x68],rax
   140007135:	lea    rbx,[rsp+0x150]
   14000713d:	sub    edi,edx
   14000713f:	test   edi,edi
   140007141:	jle    0x140007394
   140007147:	cmp    edi,0x10
   14000714a:	jle    0x1400071de
   140007150:	lea    rax,[rip+0x4ef49]        # 0x1400560a0
   140007157:	inc    esi
   140007159:	add    r13d,0x10
   14000715d:	mov    QWORD PTR [rbx],rax
   140007160:	mov    QWORD PTR [rbx+0x8],0x10
   140007168:	add    rbx,0x10
   14000716c:	cmp    esi,0x8
   14000716f:	mov    DWORD PTR [rsp+0x54],r13d
   140007174:	mov    DWORD PTR [rsp+0x50],esi
   140007178:	jl     0x1400071b1
   14000717a:	test   r13d,r13d
   14000717d:	jne    0x140007183
   14000717f:	xor    esi,esi
   140007181:	jmp    0x1400071a9
   140007183:	lea    rdx,[rsp+0x48]
   140007188:	lea    rcx,[rsp+0x80]
   140007190:	call   0x1400029e0
   140007195:	xor    r13d,r13d
   140007198:	xor    esi,esi
   14000719a:	test   eax,eax
   14000719c:	jne    0x1400083ce
   1400071a2:	lea    rax,[rip+0x4eef7]        # 0x1400560a0
   1400071a9:	lea    rbx,[rsp+0x150]
   1400071b1:	sub    edi,0x10
   1400071b4:	cmp    edi,0x10
   1400071b7:	jg     0x140007157
   1400071b9:	mov    rax,QWORD PTR [rsp+0x90]
   1400071c1:	mov    rcx,QWORD PTR [rsp+0x88]
   1400071c9:	mov    r12,QWORD PTR [rsp+0x98]
   1400071d1:	mov    QWORD PTR [rsp+0x310],rax
   1400071d9:	mov    QWORD PTR [rsp+0x68],rcx
   1400071de:	lea    rax,[rip+0x4eebb]        # 0x1400560a0
   1400071e5:	inc    esi
   1400071e7:	add    r13d,edi
   1400071ea:	mov    QWORD PTR [rbx],rax
   1400071ed:	movsxd rax,edi
   1400071f0:	add    rbx,0x10
   1400071f4:	cmp    esi,0x8
   1400071f7:	mov    QWORD PTR [rbx-0x8],rax
   1400071fb:	mov    DWORD PTR [rsp+0x54],r13d
   140007200:	mov    DWORD PTR [rsp+0x50],esi
   140007204:	jl     0x140007394
   14000720a:	test   r13d,r13d
   14000720d:	jne    0x14000721e
   14000720f:	xor    esi,esi
   140007211:	lea    rbx,[rsp+0x150]
   140007219:	jmp    0x140007394
   14000721e:	lea    rdx,[rsp+0x48]
   140007223:	lea    rcx,[rsp+0x80]
   14000722b:	call   0x1400029e0
   140007230:	xor    r13d,r13d
   140007233:	xor    esi,esi
   140007235:	test   eax,eax
   140007237:	jne    0x1400083ce
   14000723d:	mov    rax,QWORD PTR [rsp+0x90]
   140007245:	mov    r12,QWORD PTR [rsp+0x98]
   14000724d:	lea    rbx,[rsp+0x150]
   140007255:	mov    QWORD PTR [rsp+0x310],rax
   14000725d:	mov    rax,QWORD PTR [rsp+0x88]
   140007265:	mov    QWORD PTR [rsp+0x68],rax
   14000726a:	jmp    0x140007394
   14000726f:	sub    edi,edx
   140007271:	dec    edi
   140007273:	test   edi,edi
   140007275:	jle    0x140007394
   14000727b:	cmp    edi,0x10
   14000727e:	jle    0x140007317
   140007284:	lea    rax,[rip+0x4ee15]        # 0x1400560a0
   14000728b:	nop    DWORD PTR [rax+rax*1+0x0]
   140007290:	inc    esi
   140007292:	add    r13d,0x10
   140007296:	mov    QWORD PTR [rbx],rax
   140007299:	mov    QWORD PTR [rbx+0x8],0x10
   1400072a1:	add    rbx,0x10
   1400072a5:	cmp    esi,0x8
   1400072a8:	mov    DWORD PTR [rsp+0x54],r13d
   1400072ad:	mov    DWORD PTR [rsp+0x50],esi
   1400072b1:	jl     0x1400072ea
   1400072b3:	test   r13d,r13d
   1400072b6:	jne    0x1400072bc
   1400072b8:	xor    esi,esi
   1400072ba:	jmp    0x1400072e2
   1400072bc:	lea    rdx,[rsp+0x48]
   1400072c1:	lea    rcx,[rsp+0x80]
   1400072c9:	call   0x1400029e0
   1400072ce:	xor    r13d,r13d
   1400072d1:	xor    esi,esi
   1400072d3:	test   eax,eax
   1400072d5:	jne    0x1400083ce
   1400072db:	lea    rax,[rip+0x4edbe]        # 0x1400560a0
   1400072e2:	lea    rbx,[rsp+0x150]
   1400072ea:	sub    edi,0x10
   1400072ed:	cmp    edi,0x10
   1400072f0:	jg     0x140007290
   1400072f2:	mov    rax,QWORD PTR [rsp+0x90]
   1400072fa:	mov    rcx,QWORD PTR [rsp+0x88]
   140007302:	mov    r12,QWORD PTR [rsp+0x98]
   14000730a:	mov    QWORD PTR [rsp+0x310],rax
   140007312:	mov    QWORD PTR [rsp+0x68],rcx
   140007317:	lea    rax,[rip+0x4ed82]        # 0x1400560a0
   14000731e:	inc    esi
   140007320:	add    r13d,edi
   140007323:	mov    QWORD PTR [rbx],rax
   140007326:	movsxd rax,edi
   140007329:	add    rbx,0x10
   14000732d:	cmp    esi,0x8
   140007330:	mov    QWORD PTR [rbx-0x8],rax
   140007334:	mov    DWORD PTR [rsp+0x54],r13d
   140007339:	mov    DWORD PTR [rsp+0x50],esi
   14000733d:	jl     0x140007394
   14000733f:	test   r13d,r13d
   140007342:	jne    0x140007348
   140007344:	xor    esi,esi
   140007346:	jmp    0x14000738c
   140007348:	lea    rdx,[rsp+0x48]
   14000734d:	lea    rcx,[rsp+0x80]
   140007355:	call   0x1400029e0
   14000735a:	xor    r13d,r13d
   14000735d:	xor    esi,esi
   14000735f:	test   eax,eax
   140007361:	jne    0x1400083ce
   140007367:	mov    rax,QWORD PTR [rsp+0x90]
   14000736f:	mov    r12,QWORD PTR [rsp+0x98]
   140007377:	mov    QWORD PTR [rsp+0x310],rax
   14000737f:	mov    rax,QWORD PTR [rsp+0x88]
   140007387:	mov    QWORD PTR [rsp+0x68],rax
   14000738c:	lea    rbx,[rsp+0x150]
   140007394:	movsxd rcx,DWORD PTR [rsp+0x120]
   14000739c:	inc    esi
   14000739e:	lea    rax,[rsp+0x220]
   1400073a6:	add    r13d,ecx
   1400073a9:	mov    QWORD PTR [rbx+0x8],rcx
   1400073ad:	mov    QWORD PTR [rbx],rax
   1400073b0:	add    rbx,0x10
   1400073b4:	cmp    esi,0x8
   1400073b7:	mov    DWORD PTR [rsp+0x50],esi
   1400073bb:	mov    DWORD PTR [rsp+0x54],r13d
   1400073c0:	jl     0x1400080ee
   1400073c6:	test   r13d,r13d
   1400073c9:	jne    0x1400073de
   1400073cb:	xor    esi,esi
   1400073cd:	lea    rbx,[rsp+0x150]
   1400073d5:	mov    DWORD PTR [rsp+0x50],esi
   1400073d9:	jmp    0x1400080ee
   1400073de:	lea    rdx,[rsp+0x48]
   1400073e3:	lea    rcx,[rsp+0x80]
   1400073eb:	call   0x1400029e0
   1400073f0:	xor    r13d,r13d
   1400073f3:	xor    esi,esi
   1400073f5:	mov    DWORD PTR [rsp+0x54],r13d
   1400073fa:	mov    DWORD PTR [rsp+0x50],esi
   1400073fe:	test   eax,eax
   140007400:	jne    0x1400083ce
   140007406:	mov    rax,QWORD PTR [rsp+0x90]
   14000740e:	mov    r12,QWORD PTR [rsp+0x98]
   140007416:	lea    rbx,[rsp+0x150]
   14000741e:	mov    QWORD PTR [rsp+0x310],rax
   140007426:	mov    rax,QWORD PTR [rsp+0x88]
   14000742e:	mov    QWORD PTR [rsp+0x68],rax
   140007433:	jmp    0x1400080ee
   140007438:	cmp    DWORD PTR [rsp+0xb4],0x0
   140007440:	jg     0x1400076c1
   140007446:	inc    esi
   140007448:	inc    r13d
   14000744b:	lea    r15,[rip+0x4ec4e]        # 0x1400560a0
   140007452:	mov    QWORD PTR [rbx+0x8],0x1
   14000745a:	mov    QWORD PTR [rbx],r15
   14000745d:	add    rbx,0x10
   140007461:	cmp    esi,0x8
   140007464:	mov    DWORD PTR [rsp+0x54],r13d
   140007469:	mov    DWORD PTR [rsp+0x50],esi
   14000746d:	jl     0x1400074d1
   14000746f:	test   r13d,r13d
   140007472:	jne    0x14000747c
   140007474:	xor    esi,esi
   140007476:	mov    DWORD PTR [rsp+0x50],esi
   14000747a:	jmp    0x1400074c9
   14000747c:	lea    rdx,[rsp+0x48]
   140007481:	lea    rcx,[rsp+0x80]
   140007489:	call   0x1400029e0
   14000748e:	xor    r13d,r13d
   140007491:	xor    esi,esi
   140007493:	mov    DWORD PTR [rsp+0x54],r13d
   140007498:	mov    DWORD PTR [rsp+0x50],esi
   14000749c:	test   eax,eax
   14000749e:	jne    0x1400083ce
   1400074a4:	mov    rax,QWORD PTR [rsp+0x90]
   1400074ac:	mov    r12,QWORD PTR [rsp+0x98]
   1400074b4:	mov    QWORD PTR [rsp+0x310],rax
   1400074bc:	mov    rax,QWORD PTR [rsp+0x88]
   1400074c4:	mov    QWORD PTR [rsp+0x68],rax
   1400074c9:	lea    rbx,[rsp+0x150]
   1400074d1:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400074d8:	test   ebp,ebp
   1400074da:	jne    0x1400074e7
   1400074dc:	test   BYTE PTR [rsp+0x58],0x1
   1400074e1:	je     0x140007573
   1400074e7:	mov    rax,QWORD PTR [rsp+0x140]
   1400074ef:	inc    esi
   1400074f1:	inc    r13d
   1400074f4:	mov    QWORD PTR [rbx+0x8],0x1
   1400074fc:	mov    QWORD PTR [rbx],rax
   1400074ff:	add    rbx,0x10
   140007503:	cmp    esi,0x8
   140007506:	mov    DWORD PTR [rsp+0x54],r13d
   14000750b:	mov    DWORD PTR [rsp+0x50],esi
   14000750f:	jl     0x140007573
   140007511:	test   r13d,r13d
   140007514:	jne    0x14000751e
   140007516:	xor    esi,esi
   140007518:	mov    DWORD PTR [rsp+0x50],esi
   14000751c:	jmp    0x14000756b
   14000751e:	lea    rdx,[rsp+0x48]
   140007523:	lea    rcx,[rsp+0x80]
   14000752b:	call   0x1400029e0
   140007530:	xor    r13d,r13d
   140007533:	xor    esi,esi
   140007535:	mov    DWORD PTR [rsp+0x54],r13d
   14000753a:	mov    DWORD PTR [rsp+0x50],esi
   14000753e:	test   eax,eax
   140007540:	jne    0x1400083ce
   140007546:	mov    rax,QWORD PTR [rsp+0x90]
   14000754e:	mov    r12,QWORD PTR [rsp+0x98]
   140007556:	mov    QWORD PTR [rsp+0x310],rax
   14000755e:	mov    rax,QWORD PTR [rsp+0x88]
   140007566:	mov    QWORD PTR [rsp+0x68],rax
   14000756b:	lea    rbx,[rsp+0x150]
   140007573:	mov    edi,DWORD PTR [rsp+0xb4]
   14000757a:	neg    edi
   14000757c:	test   edi,edi
   14000757e:	jle    0x1400076ad
   140007584:	cmp    edi,0x10
   140007587:	jle    0x140007610
   14000758d:	nop    DWORD PTR [rax]
   140007590:	inc    esi
   140007592:	add    r13d,0x10
   140007596:	mov    QWORD PTR [rbx],r15
   140007599:	mov    QWORD PTR [rbx+0x8],0x10
   1400075a1:	add    rbx,0x10
   1400075a5:	cmp    esi,0x8
   1400075a8:	mov    DWORD PTR [rsp+0x54],r13d
   1400075ad:	mov    DWORD PTR [rsp+0x50],esi
   1400075b1:	jl     0x1400075e3
   1400075b3:	test   r13d,r13d
   1400075b6:	jne    0x1400075bc
   1400075b8:	xor    esi,esi
   1400075ba:	jmp    0x1400075db
   1400075bc:	lea    rdx,[rsp+0x48]
   1400075c1:	lea    rcx,[rsp+0x80]
   1400075c9:	call   0x1400029e0
   1400075ce:	xor    r13d,r13d
   1400075d1:	xor    esi,esi
   1400075d3:	test   eax,eax
   1400075d5:	jne    0x1400083ce
   1400075db:	lea    rbx,[rsp+0x150]
   1400075e3:	sub    edi,0x10
   1400075e6:	cmp    edi,0x10
   1400075e9:	jg     0x140007590
   1400075eb:	mov    rax,QWORD PTR [rsp+0x90]
   1400075f3:	mov    rcx,QWORD PTR [rsp+0x88]
   1400075fb:	mov    r12,QWORD PTR [rsp+0x98]
   140007603:	mov    QWORD PTR [rsp+0x310],rax
   14000760b:	mov    QWORD PTR [rsp+0x68],rcx
   140007610:	inc    esi
   140007612:	add    r13d,edi
   140007615:	movsxd rax,edi
   140007618:	mov    QWORD PTR [rbx],r15
   14000761b:	mov    QWORD PTR [rbx+0x8],rax
   14000761f:	add    rbx,0x10
   140007623:	cmp    esi,0x8
   140007626:	mov    DWORD PTR [rsp+0x54],r13d
   14000762b:	mov    DWORD PTR [rsp+0x50],esi
   14000762f:	jl     0x1400076ad
   140007631:	test   r13d,r13d
   140007634:	jne    0x140007658
   140007636:	mov    r14,QWORD PTR [rsp+0xd0]
   14000763e:	xor    esi,esi
   140007640:	add    ebp,DWORD PTR [rsp+0xb4]
   140007647:	mov    DWORD PTR [rsp+0x50],esi
   14000764b:	lea    rbx,[rsp+0x150]
   140007653:	jmp    0x140007dd8
   140007658:	lea    rdx,[rsp+0x48]
   14000765d:	lea    rcx,[rsp+0x80]
   140007665:	call   0x1400029e0
   14000766a:	xor    r13d,r13d
   14000766d:	xor    esi,esi
   14000766f:	mov    DWORD PTR [rsp+0x54],r13d
   140007674:	mov    DWORD PTR [rsp+0x50],esi
   140007678:	test   eax,eax
   14000767a:	jne    0x1400083ce
   140007680:	mov    rax,QWORD PTR [rsp+0x90]
   140007688:	mov    r12,QWORD PTR [rsp+0x98]
   140007690:	lea    rbx,[rsp+0x150]
   140007698:	mov    QWORD PTR [rsp+0x310],rax
   1400076a0:	mov    rax,QWORD PTR [rsp+0x88]
   1400076a8:	mov    QWORD PTR [rsp+0x68],rax
   1400076ad:	add    ebp,DWORD PTR [rsp+0xb4]
   1400076b4:	mov    r14,QWORD PTR [rsp+0xd0]
   1400076bc:	jmp    0x140007dd8
   1400076c1:	movsxd r15,DWORD PTR [rsp+0xf4]
   1400076c9:	mov    edi,DWORD PTR [rsp+0x110]
   1400076d0:	mov    r14,QWORD PTR [rsp+0xd0]
   1400076d8:	sub    edi,r14d
   1400076db:	cmp    edi,r15d
   1400076de:	cmovg  edi,r15d
   1400076e2:	test   edi,edi
   1400076e4:	jle    0x14000776d
   1400076ea:	inc    esi
   1400076ec:	add    r13d,edi
   1400076ef:	movsxd rax,edi
   1400076f2:	mov    QWORD PTR [rbx],r14
   1400076f5:	mov    QWORD PTR [rbx+0x8],rax
   1400076f9:	add    rbx,0x10
   1400076fd:	cmp    esi,0x8
   140007700:	mov    DWORD PTR [rsp+0x54],r13d
   140007705:	mov    DWORD PTR [rsp+0x50],esi
   140007709:	jl     0x14000776d
   14000770b:	test   r13d,r13d
   14000770e:	jne    0x140007718
   140007710:	xor    esi,esi
   140007712:	mov    DWORD PTR [rsp+0x50],esi
   140007716:	jmp    0x140007765
   140007718:	lea    rdx,[rsp+0x48]
   14000771d:	lea    rcx,[rsp+0x80]
   140007725:	call   0x1400029e0
   14000772a:	xor    r13d,r13d
   14000772d:	xor    esi,esi
   14000772f:	mov    DWORD PTR [rsp+0x54],r13d
   140007734:	mov    DWORD PTR [rsp+0x50],esi
   140007738:	test   eax,eax
   14000773a:	jne    0x1400083ce
   140007740:	mov    rax,QWORD PTR [rsp+0x90]
   140007748:	mov    r12,QWORD PTR [rsp+0x98]
   140007750:	mov    QWORD PTR [rsp+0x310],rax
   140007758:	mov    rax,QWORD PTR [rsp+0x88]
   140007760:	mov    QWORD PTR [rsp+0x68],rax
   140007765:	lea    rbx,[rsp+0x150]
   14000776d:	xor    eax,eax
   14000776f:	test   edi,edi
   140007771:	mov    ebp,r15d
   140007774:	cmovg  eax,edi
   140007777:	sub    ebp,eax
   140007779:	mov    DWORD PTR [rsp+0xc0],ebp
   140007780:	test   ebp,ebp
   140007782:	jle    0x140007954
   140007788:	cmp    ebp,0x10
   14000778b:	jle    0x1400078ca
   140007791:	lea    rax,[rip+0x4e908]        # 0x1400560a0
   140007798:	nop    DWORD PTR [rax+rax*1+0x0]
   1400077a0:	inc    esi
   1400077a2:	mov    QWORD PTR [rbx],rax
   1400077a5:	mov    QWORD PTR [rbx+0x8],0x10
   1400077ad:	add    r13d,0x10
   1400077b1:	add    rbx,0x10
   1400077b5:	cmp    esi,0x8
   1400077b8:	jl     0x1400078b7
   1400077be:	test   r13d,r13d
   1400077c1:	jne    0x1400077ca
   1400077c3:	xor    esi,esi
   1400077c5:	jmp    0x1400078af
   1400077ca:	cmp    BYTE PTR [rsp+0x80],0x0
   1400077d2:	je     0x14000783e
   1400077d4:	mov    r8,QWORD PTR [rsp+0x310]
   1400077dc:	movsxd rax,r13d
   1400077df:	lea    rcx,[rax+r12*1+0x1]
   1400077e4:	cmp    rcx,r8
   1400077e7:	jbe    0x14000783e
   1400077e9:	lea    rax,[rcx+r8*1-0x1]
   1400077ee:	mov    rcx,QWORD PTR [rsp+0x68]
   1400077f3:	xor    edx,edx
   1400077f5:	div    r8
   1400077f8:	mov    rdi,rax
   1400077fb:	imul   rdi,r8
   1400077ff:	mov    rdx,rdi
   140007802:	call   0x14002bf78
   140007807:	test   rax,rax
   14000780a:	jne    0x14000781e
   14000780c:	mov    BYTE PTR [rsp+0x81],0x1
   140007814:	mov    eax,0x1
   140007819:	jmp    0x14000789b
   14000781e:	mov    QWORD PTR [rsp+0x68],rax
   140007823:	mov    QWORD PTR [rsp+0x88],rax
   14000782b:	mov    rax,rdi
   14000782e:	mov    QWORD PTR [rsp+0x310],rax
   140007836:	mov    QWORD PTR [rsp+0x90],rax
   14000783e:	test   esi,esi
   140007840:	jle    0x140007899
   140007842:	mov    rbp,QWORD PTR [rsp+0x68]
   140007847:	lea    rbx,[rsp+0x158]
   14000784f:	nop
   140007850:	mov    ecx,DWORD PTR [rsp+0x90]
   140007857:	sub    ecx,DWORD PTR [rsp+0x98]
   14000785e:	dec    ecx
   140007860:	movsxd rax,ecx
   140007863:	cmp    rax,QWORD PTR [rbx]
   140007866:	jbe    0x14000786a
   140007868:	mov    ecx,DWORD PTR [rbx]
   14000786a:	mov    rdx,QWORD PTR [rbx-0x8]
   14000786e:	movsxd rdi,ecx
   140007871:	lea    rcx,[r12+rbp*1]
   140007875:	mov    r8,rdi
   140007878:	call   0x14002b9a0
   14000787d:	add    r12,rdi
   140007880:	add    rbx,0x10
   140007884:	sub    rsi,0x1
   140007888:	mov    QWORD PTR [rsp+0x98],r12
   140007890:	jne    0x140007850
   140007892:	mov    ebp,DWORD PTR [rsp+0xc0]
   140007899:	xor    eax,eax
   14000789b:	xor    r13d,r13d
   14000789e:	xor    esi,esi
   1400078a0:	test   eax,eax
   1400078a2:	jne    0x140008523
   1400078a8:	lea    rax,[rip+0x4e7f1]        # 0x1400560a0
   1400078af:	lea    rbx,[rsp+0x150]
   1400078b7:	sub    ebp,0x10
   1400078ba:	cmp    ebp,0x10
   1400078bd:	mov    DWORD PTR [rsp+0xc0],ebp
   1400078c4:	jg     0x1400077a0
   1400078ca:	lea    rax,[rip+0x4e7cf]        # 0x1400560a0
   1400078d1:	inc    esi
   1400078d3:	add    r13d,ebp
   1400078d6:	mov    QWORD PTR [rbx],rax
   1400078d9:	movsxd rax,ebp
   1400078dc:	add    rbx,0x10
   1400078e0:	cmp    esi,0x8
   1400078e3:	mov    QWORD PTR [rbx-0x8],rax
   1400078e7:	mov    DWORD PTR [rsp+0x54],r13d
   1400078ec:	mov    DWORD PTR [rsp+0x50],esi
   1400078f0:	jl     0x140007954
   1400078f2:	test   r13d,r13d
   1400078f5:	jne    0x1400078ff
   1400078f7:	xor    esi,esi
   1400078f9:	mov    DWORD PTR [rsp+0x50],esi
   1400078fd:	jmp    0x14000794c
   1400078ff:	lea    rdx,[rsp+0x48]
   140007904:	lea    rcx,[rsp+0x80]
   14000790c:	call   0x1400029e0
   140007911:	xor    r13d,r13d
   140007914:	xor    esi,esi
   140007916:	mov    DWORD PTR [rsp+0x54],r13d
   14000791b:	mov    DWORD PTR [rsp+0x50],esi
   14000791f:	test   eax,eax
   140007921:	jne    0x1400083ce
   140007927:	mov    rax,QWORD PTR [rsp+0x90]
   14000792f:	mov    r12,QWORD PTR [rsp+0x98]
   140007937:	mov    QWORD PTR [rsp+0x310],rax
   14000793f:	mov    rax,QWORD PTR [rsp+0x88]
   140007947:	mov    QWORD PTR [rsp+0x68],rax
   14000794c:	lea    rbx,[rsp+0x150]
   140007954:	add    r14,r15
   140007957:	mov    r15,QWORD PTR [rsp+0xf8]
   14000795f:	test   r15,r15
   140007962:	je     0x1400079a5
   140007964:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007970:	mov    ecx,DWORD PTR [rsp+0xf0]
   140007977:	test   ecx,ecx
   140007979:	jg     0x140007a0c
   14000797f:	mov    eax,DWORD PTR [rsp+0xe4]
   140007986:	test   eax,eax
   140007988:	jg     0x140007a17
   14000798e:	mov    rax,QWORD PTR [rsp+0x110]
   140007996:	mov    r12,QWORD PTR [rsp+0x98]
   14000799e:	cmp    r14,rax
   1400079a1:	cmova  r14,rax
   1400079a5:	mov    ebp,DWORD PTR [rsp+0xa0]
   1400079ac:	test   ebp,ebp
   1400079ae:	jne    0x1400079bb
   1400079b0:	test   BYTE PTR [rsp+0x58],0x1
   1400079b5:	je     0x140007dc8
   1400079bb:	mov    rax,QWORD PTR [rsp+0x140]
   1400079c3:	inc    esi
   1400079c5:	inc    r13d
   1400079c8:	mov    QWORD PTR [rbx+0x8],0x1
   1400079d0:	mov    QWORD PTR [rbx],rax
   1400079d3:	add    rbx,0x10
   1400079d7:	cmp    esi,0x8
   1400079da:	mov    DWORD PTR [rsp+0x54],r13d
   1400079df:	mov    DWORD PTR [rsp+0x50],esi
   1400079e3:	jl     0x140007dd1
   1400079e9:	test   r13d,r13d
   1400079ec:	jne    0x140007d6a
   1400079f2:	xor    esi,esi
   1400079f4:	lea    rbx,[rsp+0x150]
   1400079fc:	lea    r15,[rip+0x4e69d]        # 0x1400560a0
   140007a03:	mov    DWORD PTR [rsp+0x50],esi
   140007a07:	jmp    0x140007dd8
   140007a0c:	mov    eax,DWORD PTR [rsp+0xe4]
   140007a13:	test   eax,eax
   140007a15:	jle    0x140007a22
   140007a17:	dec    eax
   140007a19:	mov    DWORD PTR [rsp+0xe4],eax
   140007a20:	jmp    0x140007a36
   140007a22:	dec    r15
   140007a25:	dec    ecx
   140007a27:	mov    DWORD PTR [rsp+0xf0],ecx
   140007a2e:	mov    QWORD PTR [rsp+0xf8],r15
   140007a36:	inc    esi
   140007a38:	inc    r13d
   140007a3b:	lea    rax,[rsp+0xb0]
   140007a43:	mov    QWORD PTR [rbx+0x8],0x1
   140007a4b:	mov    QWORD PTR [rbx],rax
   140007a4e:	add    rbx,0x10
   140007a52:	cmp    esi,0x8
   140007a55:	mov    DWORD PTR [rsp+0x54],r13d
   140007a5a:	mov    DWORD PTR [rsp+0x50],esi
   140007a5e:	jl     0x140007aba
   140007a60:	test   r13d,r13d
   140007a63:	jne    0x140007a6d
   140007a65:	xor    esi,esi
   140007a67:	mov    DWORD PTR [rsp+0x50],esi
   140007a6b:	jmp    0x140007ab2
   140007a6d:	lea    rdx,[rsp+0x48]
   140007a72:	lea    rcx,[rsp+0x80]
   140007a7a:	call   0x1400029e0
   140007a7f:	xor    r13d,r13d
   140007a82:	xor    esi,esi
   140007a84:	mov    DWORD PTR [rsp+0x54],r13d
   140007a89:	mov    DWORD PTR [rsp+0x50],esi
   140007a8d:	test   eax,eax
   140007a8f:	jne    0x1400083ce
   140007a95:	mov    rax,QWORD PTR [rsp+0x90]
   140007a9d:	mov    QWORD PTR [rsp+0x310],rax
   140007aa5:	mov    rax,QWORD PTR [rsp+0x88]
   140007aad:	mov    QWORD PTR [rsp+0x68],rax
   140007ab2:	lea    rbx,[rsp+0x150]
   140007aba:	movsx  eax,BYTE PTR [r15]
   140007abe:	mov    edi,DWORD PTR [rsp+0x110]
   140007ac5:	sub    edi,r14d
   140007ac8:	cmp    edi,eax
   140007aca:	cmovg  edi,eax
   140007acd:	test   edi,edi
   140007acf:	jle    0x140007b4c
   140007ad1:	inc    esi
   140007ad3:	add    r13d,edi
   140007ad6:	movsxd rax,edi
   140007ad9:	mov    QWORD PTR [rbx],r14
   140007adc:	mov    QWORD PTR [rbx+0x8],rax
   140007ae0:	add    rbx,0x10
   140007ae4:	cmp    esi,0x8
   140007ae7:	mov    DWORD PTR [rsp+0x54],r13d
   140007aec:	mov    DWORD PTR [rsp+0x50],esi
   140007af0:	jl     0x140007b4c
   140007af2:	test   r13d,r13d
   140007af5:	jne    0x140007aff
   140007af7:	xor    esi,esi
   140007af9:	mov    DWORD PTR [rsp+0x50],esi
   140007afd:	jmp    0x140007b44
   140007aff:	lea    rdx,[rsp+0x48]
   140007b04:	lea    rcx,[rsp+0x80]
   140007b0c:	call   0x1400029e0
   140007b11:	xor    r13d,r13d
   140007b14:	xor    esi,esi
   140007b16:	mov    DWORD PTR [rsp+0x54],r13d
   140007b1b:	mov    DWORD PTR [rsp+0x50],esi
   140007b1f:	test   eax,eax
   140007b21:	jne    0x1400083ce
   140007b27:	mov    rax,QWORD PTR [rsp+0x90]
   140007b2f:	mov    QWORD PTR [rsp+0x310],rax
   140007b37:	mov    rax,QWORD PTR [rsp+0x88]
   140007b3f:	mov    QWORD PTR [rsp+0x68],rax
   140007b44:	lea    rbx,[rsp+0x150]
   140007b4c:	movsx  ebp,BYTE PTR [r15]
   140007b50:	xor    eax,eax
   140007b52:	test   edi,edi
   140007b54:	cmovg  eax,edi
   140007b57:	sub    ebp,eax
   140007b59:	mov    DWORD PTR [rsp+0xc0],ebp
   140007b60:	test   ebp,ebp
   140007b62:	jle    0x140007d5e
   140007b68:	cmp    ebp,0x10
   140007b6b:	jle    0x140007cca
   140007b71:	lea    rax,[rip+0x4e528]        # 0x1400560a0
   140007b78:	nop    DWORD PTR [rax+rax*1+0x0]
   140007b80:	inc    esi
   140007b82:	mov    QWORD PTR [rbx],rax
   140007b85:	mov    QWORD PTR [rbx+0x8],0x10
   140007b8d:	add    r13d,0x10
   140007b91:	add    rbx,0x10
   140007b95:	cmp    esi,0x8
   140007b98:	jl     0x140007cb7
   140007b9e:	test   r13d,r13d
   140007ba1:	jne    0x140007baa
   140007ba3:	xor    esi,esi
   140007ba5:	jmp    0x140007caf
   140007baa:	cmp    BYTE PTR [rsp+0x80],0x0
   140007bb2:	je     0x140007c28
   140007bb4:	mov    r12,QWORD PTR [rsp+0x98]
   140007bbc:	mov    r8,QWORD PTR [rsp+0x310]
   140007bc4:	movsxd rax,r13d
   140007bc7:	lea    rcx,[rax+r12*1+0x1]
   140007bcc:	cmp    rcx,r8
   140007bcf:	jbe    0x140007c30
   140007bd1:	lea    rax,[r8+rcx*1-0x1]
   140007bd6:	mov    rcx,QWORD PTR [rsp+0x68]
   140007bdb:	xor    edx,edx
   140007bdd:	div    r8
   140007be0:	mov    rdi,rax
   140007be3:	imul   rdi,r8
   140007be7:	mov    rdx,rdi
   140007bea:	call   0x14002bf78
   140007bef:	test   rax,rax
   140007bf2:	jne    0x140007c06
   140007bf4:	mov    BYTE PTR [rsp+0x81],0x1
   140007bfc:	mov    eax,0x1
   140007c01:	jmp    0x140007c9b
   140007c06:	mov    QWORD PTR [rsp+0x68],rax
   140007c0b:	mov    QWORD PTR [rsp+0x88],rax
   140007c13:	mov    rax,rdi
   140007c16:	mov    QWORD PTR [rsp+0x310],rax
   140007c1e:	mov    QWORD PTR [rsp+0x90],rax
   140007c26:	jmp    0x140007c30
   140007c28:	mov    r12,QWORD PTR [rsp+0x98]
   140007c30:	test   esi,esi
   140007c32:	jle    0x140007c99
   140007c34:	mov    rbp,QWORD PTR [rsp+0x68]
   140007c39:	lea    rbx,[rsp+0x158]
   140007c41:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007c50:	mov    ecx,DWORD PTR [rsp+0x90]
   140007c57:	sub    ecx,DWORD PTR [rsp+0x98]
   140007c5e:	dec    ecx
   140007c60:	movsxd rax,ecx
   140007c63:	cmp    rax,QWORD PTR [rbx]
   140007c66:	jbe    0x140007c6a
   140007c68:	mov    ecx,DWORD PTR [rbx]
   140007c6a:	mov    rdx,QWORD PTR [rbx-0x8]
   140007c6e:	movsxd rdi,ecx
   140007c71:	lea    rcx,[r12+rbp*1]
   140007c75:	mov    r8,rdi
   140007c78:	call   0x14002b9a0
   140007c7d:	add    r12,rdi
   140007c80:	add    rbx,0x10
   140007c84:	sub    rsi,0x1
   140007c88:	mov    QWORD PTR [rsp+0x98],r12
   140007c90:	jne    0x140007c50
   140007c92:	mov    ebp,DWORD PTR [rsp+0xc0]
   140007c99:	xor    eax,eax
   140007c9b:	xor    r13d,r13d
   140007c9e:	xor    esi,esi
   140007ca0:	test   eax,eax
   140007ca2:	jne    0x140008536
   140007ca8:	lea    rax,[rip+0x4e3f1]        # 0x1400560a0
   140007caf:	lea    rbx,[rsp+0x150]
   140007cb7:	sub    ebp,0x10
   140007cba:	cmp    ebp,0x10
   140007cbd:	mov    DWORD PTR [rsp+0xc0],ebp
   140007cc4:	jg     0x140007b80
   140007cca:	lea    rax,[rip+0x4e3cf]        # 0x1400560a0
   140007cd1:	inc    esi
   140007cd3:	add    r13d,ebp
   140007cd6:	mov    QWORD PTR [rbx],rax
   140007cd9:	movsxd rax,ebp
   140007cdc:	add    rbx,0x10
   140007ce0:	cmp    esi,0x8
   140007ce3:	mov    QWORD PTR [rbx-0x8],rax
   140007ce7:	mov    DWORD PTR [rsp+0x54],r13d
   140007cec:	mov    DWORD PTR [rsp+0x50],esi
   140007cf0:	jl     0x140007d5e
   140007cf2:	test   r13d,r13d
   140007cf5:	jne    0x140007d11
   140007cf7:	movsx  rax,BYTE PTR [r15]
   140007cfb:	xor    esi,esi
   140007cfd:	lea    rbx,[rsp+0x150]
   140007d05:	add    r14,rax
   140007d08:	mov    DWORD PTR [rsp+0x50],esi
   140007d0c:	jmp    0x140007970
   140007d11:	lea    rdx,[rsp+0x48]
   140007d16:	lea    rcx,[rsp+0x80]
   140007d1e:	call   0x1400029e0
   140007d23:	xor    r13d,r13d
   140007d26:	xor    esi,esi
   140007d28:	mov    DWORD PTR [rsp+0x54],r13d
   140007d2d:	mov    DWORD PTR [rsp+0x50],esi
   140007d31:	test   eax,eax
   140007d33:	jne    0x1400083ce
   140007d39:	mov    rax,QWORD PTR [rsp+0x90]
   140007d41:	lea    rbx,[rsp+0x150]
   140007d49:	mov    QWORD PTR [rsp+0x310],rax
   140007d51:	mov    rax,QWORD PTR [rsp+0x88]
   140007d59:	mov    QWORD PTR [rsp+0x68],rax
   140007d5e:	movsx  rax,BYTE PTR [r15]
   140007d62:	add    r14,rax
   140007d65:	jmp    0x140007970
   140007d6a:	lea    rdx,[rsp+0x48]
   140007d6f:	lea    rcx,[rsp+0x80]
   140007d77:	call   0x1400029e0
   140007d7c:	xor    r13d,r13d
   140007d7f:	xor    esi,esi
   140007d81:	mov    DWORD PTR [rsp+0x54],r13d
   140007d86:	mov    DWORD PTR [rsp+0x50],esi
   140007d8a:	test   eax,eax
   140007d8c:	jne    0x1400083ce
   140007d92:	mov    rax,QWORD PTR [rsp+0x90]
   140007d9a:	mov    r12,QWORD PTR [rsp+0x98]
   140007da2:	lea    rbx,[rsp+0x150]
   140007daa:	mov    QWORD PTR [rsp+0x310],rax
   140007db2:	mov    rax,QWORD PTR [rsp+0x88]
   140007dba:	lea    r15,[rip+0x4e2df]        # 0x1400560a0
   140007dc1:	mov    QWORD PTR [rsp+0x68],rax
   140007dc6:	jmp    0x140007dd8
   140007dc8:	lea    r15,[rip+0x4e2d1]        # 0x1400560a0
   140007dcf:	jmp    0x140007dd8
   140007dd1:	lea    r15,[rip+0x4e2c8]        # 0x1400560a0
   140007dd8:	mov    edi,DWORD PTR [rsp+0x110]
   140007ddf:	sub    edi,r14d
   140007de2:	cmp    edi,ebp
   140007de4:	cmovg  edi,ebp
   140007de7:	test   edi,edi
   140007de9:	jle    0x140007e72
   140007def:	inc    esi
   140007df1:	add    r13d,edi
   140007df4:	movsxd rax,edi
   140007df7:	mov    QWORD PTR [rbx],r14
   140007dfa:	mov    QWORD PTR [rbx+0x8],rax
   140007dfe:	add    rbx,0x10
   140007e02:	cmp    esi,0x8
   140007e05:	mov    DWORD PTR [rsp+0x54],r13d
   140007e0a:	mov    DWORD PTR [rsp+0x50],esi
   140007e0e:	jl     0x140007e72
   140007e10:	test   r13d,r13d
   140007e13:	jne    0x140007e1d
   140007e15:	xor    esi,esi
   140007e17:	mov    DWORD PTR [rsp+0x50],esi
   140007e1b:	jmp    0x140007e6a
   140007e1d:	lea    rdx,[rsp+0x48]
   140007e22:	lea    rcx,[rsp+0x80]
   140007e2a:	call   0x1400029e0
   140007e2f:	xor    r13d,r13d
   140007e32:	xor    esi,esi
   140007e34:	mov    DWORD PTR [rsp+0x54],r13d
   140007e39:	mov    DWORD PTR [rsp+0x50],esi
   140007e3d:	test   eax,eax
   140007e3f:	jne    0x1400083ce
   140007e45:	mov    rax,QWORD PTR [rsp+0x90]
   140007e4d:	mov    r12,QWORD PTR [rsp+0x98]
   140007e55:	mov    QWORD PTR [rsp+0x310],rax
   140007e5d:	mov    rax,QWORD PTR [rsp+0x88]
   140007e65:	mov    QWORD PTR [rsp+0x68],rax
   140007e6a:	lea    rbx,[rsp+0x150]
   140007e72:	xor    eax,eax
   140007e74:	test   edi,edi
   140007e76:	cmovg  eax,edi
   140007e79:	sub    ebp,eax
   140007e7b:	test   ebp,ebp
   140007e7d:	jle    0x1400080ee
   140007e83:	cmp    ebp,0x10
   140007e86:	jle    0x140007fba
   140007e8c:	nop    DWORD PTR [rax+0x0]
   140007e90:	inc    esi
   140007e92:	mov    QWORD PTR [rbx],r15
   140007e95:	mov    QWORD PTR [rbx+0x8],0x10
   140007e9d:	add    r13d,0x10
   140007ea1:	add    rbx,0x10
   140007ea5:	cmp    esi,0x8
   140007ea8:	jl     0x140007fae
   140007eae:	test   r13d,r13d
   140007eb1:	jne    0x140007eba
   140007eb3:	xor    esi,esi
   140007eb5:	jmp    0x140007fa6
   140007eba:	cmp    BYTE PTR [rsp+0x80],0x0
   140007ec2:	je     0x140007f33
   140007ec4:	mov    r8,QWORD PTR [rsp+0x310]
   140007ecc:	movsxd rax,r13d
   140007ecf:	lea    rcx,[rax+r12*1+0x1]
   140007ed4:	cmp    rcx,r8
   140007ed7:	jbe    0x140007f3a
   140007ed9:	lea    rax,[r8+rcx*1-0x1]
   140007ede:	mov    rcx,QWORD PTR [rsp+0x68]
   140007ee3:	xor    edx,edx
   140007ee5:	div    r8
   140007ee8:	mov    rdi,rax
   140007eeb:	imul   rdi,r8
   140007eef:	mov    rdx,rdi
   140007ef2:	call   0x14002bf78
   140007ef7:	test   rax,rax
   140007efa:	jne    0x140007f0e
   140007efc:	mov    BYTE PTR [rsp+0x81],0x1
   140007f04:	mov    eax,0x1
   140007f09:	jmp    0x140007f99
   140007f0e:	mov    rdx,rax
   140007f11:	mov    QWORD PTR [rsp+0x68],rax
   140007f16:	mov    QWORD PTR [rsp+0x88],rax
   140007f1e:	mov    rax,rdi
   140007f21:	mov    QWORD PTR [rsp+0x310],rax
   140007f29:	mov    QWORD PTR [rsp+0x90],rax
   140007f31:	jmp    0x140007f3f
   140007f33:	mov    rdx,QWORD PTR [rsp+0x68]
   140007f38:	jmp    0x140007f3f
   140007f3a:	mov    rdx,QWORD PTR [rsp+0x68]
   140007f3f:	test   esi,esi
   140007f41:	jle    0x140007f97
   140007f43:	lea    rbx,[rsp+0x158]
   140007f4b:	nop    DWORD PTR [rax+rax*1+0x0]
   140007f50:	mov    ecx,DWORD PTR [rsp+0x90]
   140007f57:	sub    ecx,DWORD PTR [rsp+0x98]
   140007f5e:	dec    ecx
   140007f60:	movsxd rax,ecx
   140007f63:	cmp    rax,QWORD PTR [rbx]
   140007f66:	jbe    0x140007f6a
   140007f68:	mov    ecx,DWORD PTR [rbx]
   140007f6a:	movsxd rdi,ecx
   140007f6d:	lea    rcx,[r12+rdx*1]
   140007f71:	mov    rdx,QWORD PTR [rbx-0x8]
   140007f75:	mov    r8,rdi
   140007f78:	call   0x14002b9a0
   140007f7d:	mov    rdx,QWORD PTR [rsp+0x68]
   140007f82:	add    r12,rdi
   140007f85:	add    rbx,0x10
   140007f89:	sub    rsi,0x1
   140007f8d:	mov    QWORD PTR [rsp+0x98],r12
   140007f95:	jne    0x140007f50
   140007f97:	xor    eax,eax
   140007f99:	xor    r13d,r13d
   140007f9c:	xor    esi,esi
   140007f9e:	test   eax,eax
   140007fa0:	jne    0x140008549
   140007fa6:	lea    rbx,[rsp+0x150]
   140007fae:	sub    ebp,0x10
   140007fb1:	cmp    ebp,0x10
   140007fb4:	jg     0x140007e90
   140007fba:	inc    esi
   140007fbc:	add    r13d,ebp
   140007fbf:	movsxd rax,ebp
   140007fc2:	mov    QWORD PTR [rbx],r15
   140007fc5:	mov    QWORD PTR [rbx+0x8],rax
   140007fc9:	add    rbx,0x10
   140007fcd:	cmp    esi,0x8
   140007fd0:	mov    DWORD PTR [rsp+0x54],r13d
   140007fd5:	mov    DWORD PTR [rsp+0x50],esi
   140007fd9:	jl     0x1400080ee
   140007fdf:	test   r13d,r13d
   140007fe2:	jne    0x140007ff7
   140007fe4:	xor    esi,esi
   140007fe6:	lea    rbx,[rsp+0x150]
   140007fee:	mov    DWORD PTR [rsp+0x50],esi
   140007ff2:	jmp    0x1400080ee
   140007ff7:	lea    rdx,[rsp+0x48]
   140007ffc:	lea    rcx,[rsp+0x80]
   140008004:	call   0x1400029e0
   140008009:	xor    r13d,r13d
   14000800c:	xor    esi,esi
   14000800e:	mov    DWORD PTR [rsp+0x54],r13d
   140008013:	mov    DWORD PTR [rsp+0x50],esi
   140008017:	test   eax,eax
   140008019:	jne    0x1400083ce
   14000801f:	mov    rax,QWORD PTR [rsp+0x90]
   140008027:	mov    r12,QWORD PTR [rsp+0x98]
   14000802f:	lea    rbx,[rsp+0x150]
   140008037:	mov    QWORD PTR [rsp+0x310],rax
   14000803f:	mov    rax,QWORD PTR [rsp+0x88]
   140008047:	mov    QWORD PTR [rsp+0x68],rax
   14000804c:	jmp    0x1400080ee
   140008051:	mov    rax,QWORD PTR [rsp+0xd0]
   140008059:	inc    esi
   14000805b:	add    r13d,r15d
   14000805e:	mov    QWORD PTR [rbx],rax
   140008061:	movsxd rax,r15d
   140008064:	add    rbx,0x10
   140008068:	cmp    esi,0x8
   14000806b:	mov    QWORD PTR [rbx-0x8],rax
   14000806f:	mov    DWORD PTR [rsp+0x54],r13d
   140008074:	mov    DWORD PTR [rsp+0x50],esi
   140008078:	jl     0x1400080ee
   14000807a:	test   r13d,r13d
   14000807d:	jne    0x14000808f
   14000807f:	xor    esi,esi
   140008081:	lea    rbx,[rsp+0x150]
   140008089:	mov    DWORD PTR [rsp+0x50],esi
   14000808d:	jmp    0x1400080ee
   14000808f:	lea    rdx,[rsp+0x48]
   140008094:	lea    rcx,[rsp+0x80]
   14000809c:	call   0x1400029e0
   1400080a1:	xor    r13d,r13d
   1400080a4:	xor    esi,esi
   1400080a6:	mov    DWORD PTR [rsp+0x54],r13d
   1400080ab:	mov    DWORD PTR [rsp+0x50],esi
   1400080af:	test   eax,eax
   1400080b1:	jne    0x1400083ce
   1400080b7:	mov    rax,QWORD PTR [rsp+0x90]
   1400080bf:	mov    r12,QWORD PTR [rsp+0x98]
   1400080c7:	lea    rbx,[rsp+0x150]
   1400080cf:	mov    QWORD PTR [rsp+0x310],rax
   1400080d7:	mov    rax,QWORD PTR [rsp+0x88]
   1400080df:	mov    QWORD PTR [rsp+0x68],rax
   1400080e4:	jmp    0x1400080ee
   1400080e6:	mov    r12,QWORD PTR [rsp+0x98]
   1400080ee:	test   BYTE PTR [rsp+0x58],0x4
   1400080f3:	je     0x1400082f2
   1400080f9:	mov    ecx,DWORD PTR [rsp+0xbc]
   140008100:	sub    ecx,DWORD PTR [rsp+0xec]
   140008107:	mov    DWORD PTR [rsp+0xbc],ecx
   14000810e:	test   ecx,ecx
   140008110:	jle    0x140008301
   140008116:	cmp    ecx,0x10
   140008119:	jle    0x14000826f
   14000811f:	lea    rax,[rip+0x4df6a]        # 0x140056090
   140008126:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008130:	inc    esi
   140008132:	mov    QWORD PTR [rbx],rax
   140008135:	mov    QWORD PTR [rbx+0x8],0x10
   14000813d:	add    r13d,0x10
   140008141:	add    rbx,0x10
   140008145:	cmp    esi,0x8
   140008148:	jl     0x14000825c
   14000814e:	test   r13d,r13d
   140008151:	jne    0x14000815a
   140008153:	xor    esi,esi
   140008155:	jmp    0x140008254
   14000815a:	cmp    BYTE PTR [rsp+0x80],0x0
   140008162:	je     0x1400081d3
   140008164:	mov    r8,QWORD PTR [rsp+0x310]
   14000816c:	movsxd rax,r13d
   14000816f:	lea    rcx,[rax+r12*1+0x1]
   140008174:	cmp    rcx,r8
   140008177:	jbe    0x1400081da
   140008179:	lea    rax,[rcx+r8*1-0x1]
   14000817e:	mov    rcx,QWORD PTR [rsp+0x68]
   140008183:	xor    edx,edx
   140008185:	div    r8
   140008188:	mov    rdi,rax
   14000818b:	imul   rdi,r8
   14000818f:	mov    rdx,rdi
   140008192:	call   0x14002bf78
   140008197:	test   rax,rax
   14000819a:	jne    0x1400081ae
   14000819c:	mov    BYTE PTR [rsp+0x81],0x1
   1400081a4:	mov    eax,0x1
   1400081a9:	jmp    0x140008239
   1400081ae:	mov    rdx,rax
   1400081b1:	mov    QWORD PTR [rsp+0x68],rax
   1400081b6:	mov    QWORD PTR [rsp+0x88],rax
   1400081be:	mov    rax,rdi
   1400081c1:	mov    QWORD PTR [rsp+0x310],rax
   1400081c9:	mov    QWORD PTR [rsp+0x90],rax
   1400081d1:	jmp    0x1400081df
   1400081d3:	mov    rdx,QWORD PTR [rsp+0x68]
   1400081d8:	jmp    0x1400081df
   1400081da:	mov    rdx,QWORD PTR [rsp+0x68]
   1400081df:	test   esi,esi
   1400081e1:	jle    0x140008237
   1400081e3:	lea    rbx,[rsp+0x158]
   1400081eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400081f0:	mov    ecx,DWORD PTR [rsp+0x90]
   1400081f7:	sub    ecx,DWORD PTR [rsp+0x98]
   1400081fe:	dec    ecx
   140008200:	movsxd rax,ecx
   140008203:	cmp    rax,QWORD PTR [rbx]
   140008206:	jbe    0x14000820a
   140008208:	mov    ecx,DWORD PTR [rbx]
   14000820a:	movsxd rdi,ecx
   14000820d:	lea    rcx,[r12+rdx*1]
   140008211:	mov    rdx,QWORD PTR [rbx-0x8]
   140008215:	mov    r8,rdi
   140008218:	call   0x14002b9a0
   14000821d:	mov    rdx,QWORD PTR [rsp+0x68]
   140008222:	add    r12,rdi
   140008225:	add    rbx,0x10
   140008229:	sub    rsi,0x1
   14000822d:	mov    QWORD PTR [rsp+0x98],r12
   140008235:	jne    0x1400081f0
   140008237:	xor    eax,eax
   140008239:	xor    r13d,r13d
   14000823c:	xor    esi,esi
   14000823e:	test   eax,eax
   140008240:	jne    0x14000855c
   140008246:	mov    ecx,DWORD PTR [rsp+0xbc]
   14000824d:	lea    rax,[rip+0x4de3c]        # 0x140056090
   140008254:	lea    rbx,[rsp+0x150]
   14000825c:	sub    ecx,0x10
   14000825f:	cmp    ecx,0x10
   140008262:	mov    DWORD PTR [rsp+0xbc],ecx
   140008269:	jg     0x140008130
   14000826f:	lea    rax,[rip+0x4de1a]        # 0x140056090
   140008276:	inc    esi
   140008278:	add    r13d,ecx
   14000827b:	cmp    esi,0x8
   14000827e:	mov    QWORD PTR [rbx],rax
   140008281:	movsxd rax,ecx
   140008284:	mov    DWORD PTR [rsp+0x54],r13d
   140008289:	mov    DWORD PTR [rsp+0x50],esi
   14000828d:	mov    QWORD PTR [rbx+0x8],rax
   140008291:	jl     0x140008310
   140008293:	test   r13d,r13d
   140008296:	jne    0x1400082ac
   140008298:	mov    r15,QWORD PTR [rsp+0x68]
   14000829d:	mov    rdi,QWORD PTR [rsp+0x310]
   1400082a5:	mov    DWORD PTR [rsp+0x50],r13d
   1400082aa:	jmp    0x14000831d
   1400082ac:	lea    rdx,[rsp+0x48]
   1400082b1:	lea    rcx,[rsp+0x80]
   1400082b9:	call   0x1400029e0
   1400082be:	xor    r13d,r13d
   1400082c1:	mov    DWORD PTR [rsp+0x54],r13d
   1400082c6:	mov    DWORD PTR [rsp+0x50],r13d
   1400082cb:	test   eax,eax
   1400082cd:	jne    0x1400083ce
   1400082d3:	mov    rdi,QWORD PTR [rsp+0x90]
   1400082db:	mov    r15,QWORD PTR [rsp+0x88]
   1400082e3:	mov    QWORD PTR [rsp+0x310],rdi
   1400082eb:	mov    QWORD PTR [rsp+0x68],r15
   1400082f0:	jmp    0x14000831d
   1400082f2:	mov    r15,QWORD PTR [rsp+0x68]
   1400082f7:	mov    rdi,QWORD PTR [rsp+0x310]
   1400082ff:	jmp    0x14000831d
   140008301:	mov    r15,QWORD PTR [rsp+0x68]
   140008306:	mov    rdi,QWORD PTR [rsp+0x310]
   14000830e:	jmp    0x14000831d
   140008310:	mov    r15,QWORD PTR [rsp+0x68]
   140008315:	mov    rdi,QWORD PTR [rsp+0x310]
   14000831d:	mov    edx,DWORD PTR [rsp+0x138]
   140008324:	mov    DWORD PTR [rsp+0x70],edx
   140008328:	test   r13d,r13d
   14000832b:	je     0x140008371
   14000832d:	lea    rdx,[rsp+0x48]
   140008332:	lea    rcx,[rsp+0x80]
   14000833a:	call   0x1400029e0
   14000833f:	xor    r13d,r13d
   140008342:	mov    DWORD PTR [rsp+0x54],r13d
   140008347:	mov    DWORD PTR [rsp+0x50],r13d
   14000834c:	test   eax,eax
   14000834e:	jne    0x1400083ce
   140008350:	mov    rdi,QWORD PTR [rsp+0x90]
   140008358:	mov    r15,QWORD PTR [rsp+0x88]
   140008360:	mov    edx,DWORD PTR [rsp+0x70]
   140008364:	mov    QWORD PTR [rsp+0x310],rdi
   14000836c:	mov    QWORD PTR [rsp+0x68],r15
   140008371:	mov    r14,QWORD PTR [rsp+0x98]
   140008379:	mov    r8,QWORD PTR [rsp+0x100]
   140008381:	xor    esi,esi
   140008383:	mov    DWORD PTR [rsp+0x50],esi
   140008387:	lea    rbx,[rsp+0x150]
   14000838f:	jmp    0x140004b30
   140008394:	mov    r12,QWORD PTR [rsp+0xd8]
   14000839c:	or     edi,0xffffffff
   14000839f:	jmp    0x140008589
   1400083a4:	mov    edi,DWORD PTR [rsp+0x70]
   1400083a8:	mov    r12,QWORD PTR [rsp+0xd8]
   1400083b0:	mov    BYTE PTR [rsp+0x81],0x1
   1400083b8:	jmp    0x140008589
   1400083bd:	mov    edi,DWORD PTR [rsp+0x70]
   1400083c1:	mov    BYTE PTR [rsp+0x81],0x1
   1400083c9:	jmp    0x140008589
   1400083ce:	mov    r15,QWORD PTR [rsp+0x88]
   1400083d6:	mov    edi,DWORD PTR [rsp+0x70]
   1400083da:	mov    r12,QWORD PTR [rsp+0xd8]
   1400083e2:	jmp    0x140008589
   1400083e7:	mov    r15,QWORD PTR [rsp+0x68]
   1400083ec:	mov    r12,QWORD PTR [rsp+0xd8]
   1400083f4:	or     edi,0xffffffff
   1400083f7:	jmp    0x140008589
   1400083fc:	test   r13d,r13d
   1400083ff:	je     0x1400084c2
   140008405:	cmp    BYTE PTR [rsp+0x80],0x0
   14000840d:	je     0x140008471
   14000840f:	mov    rdi,QWORD PTR [rsp+0x310]
   140008417:	movsxd rax,r13d
   14000841a:	lea    rcx,[rax+r14*1+0x1]
   14000841f:	cmp    rcx,rdi
   140008422:	jbe    0x140008471
   140008424:	lea    rax,[rcx+rdi*1-0x1]
   140008429:	xor    edx,edx
   14000842b:	mov    rcx,r15
   14000842e:	div    rdi
   140008431:	imul   rax,rdi
   140008435:	mov    rdx,rax
   140008438:	mov    rdi,rax
   14000843b:	mov    QWORD PTR [rsp+0x310],rax
   140008443:	call   0x14002bf78
   140008448:	test   rax,rax
   14000844b:	jne    0x140008466
   14000844d:	mov    edi,DWORD PTR [rsp+0x70]
   140008451:	mov    r12,QWORD PTR [rsp+0xd8]
   140008459:	mov    BYTE PTR [rsp+0x81],0x1
   140008461:	jmp    0x140008589
   140008466:	mov    r15,rax
   140008469:	mov    QWORD PTR [rsp+0x90],rdi
   140008471:	test   esi,esi
   140008473:	jle    0x1400084c2
   140008475:	lea    rbx,[rsp+0x158]
   14000847d:	nop    DWORD PTR [rax]
   140008480:	mov    ecx,DWORD PTR [rsp+0x90]
   140008487:	sub    ecx,DWORD PTR [rsp+0x98]
   14000848e:	dec    ecx
   140008490:	movsxd rax,ecx
   140008493:	cmp    rax,QWORD PTR [rbx]
   140008496:	jbe    0x14000849a
   140008498:	mov    ecx,DWORD PTR [rbx]
   14000849a:	mov    rdx,QWORD PTR [rbx-0x8]
   14000849e:	movsxd rdi,ecx
   1400084a1:	lea    rcx,[r14+r15*1]
   1400084a5:	mov    r8,rdi
   1400084a8:	call   0x14002b9a0
   1400084ad:	add    r14,rdi
   1400084b0:	add    rbx,0x10
   1400084b4:	sub    rsi,0x1
   1400084b8:	mov    QWORD PTR [rsp+0x98],r14
   1400084c0:	jne    0x140008480
   1400084c2:	cmp    QWORD PTR [rsp+0x310],0x0
   1400084cb:	jbe    0x14000857d
   1400084d1:	mov    edi,DWORD PTR [rsp+0x70]
   1400084d5:	mov    r12,QWORD PTR [rsp+0xd8]
   1400084dd:	mov    BYTE PTR [r14+r15*1],0x0
   1400084e2:	jmp    0x140008589
   1400084e7:	mov    r15,QWORD PTR [rsp+0x68]
   1400084ec:	mov    edi,DWORD PTR [rsp+0x70]
   1400084f0:	mov    r12,QWORD PTR [rsp+0xd8]
   1400084f8:	jmp    0x140008589
   1400084fd:	mov    r15,QWORD PTR [rsp+0x68]
   140008502:	mov    edi,DWORD PTR [rsp+0x70]
   140008506:	mov    r12,QWORD PTR [rsp+0xd8]
   14000850e:	jmp    0x140008589
   140008510:	mov    r15,QWORD PTR [rsp+0x68]
   140008515:	mov    edi,DWORD PTR [rsp+0x70]
   140008519:	mov    r12,QWORD PTR [rsp+0xd8]
   140008521:	jmp    0x140008589
   140008523:	mov    r15,QWORD PTR [rsp+0x68]
   140008528:	mov    edi,DWORD PTR [rsp+0x70]
   14000852c:	mov    r12,QWORD PTR [rsp+0xd8]
   140008534:	jmp    0x140008589
   140008536:	mov    r15,QWORD PTR [rsp+0x68]
   14000853b:	mov    edi,DWORD PTR [rsp+0x70]
   14000853f:	mov    r12,QWORD PTR [rsp+0xd8]
   140008547:	jmp    0x140008589
   140008549:	mov    r15,QWORD PTR [rsp+0x68]
   14000854e:	mov    edi,DWORD PTR [rsp+0x70]
   140008552:	mov    r12,QWORD PTR [rsp+0xd8]
   14000855a:	jmp    0x140008589
   14000855c:	mov    r15,QWORD PTR [rsp+0x68]
   140008561:	mov    edi,DWORD PTR [rsp+0x70]
   140008565:	mov    r12,QWORD PTR [rsp+0xd8]
   14000856d:	jmp    0x140008589
   14000856f:	mov    edi,DWORD PTR [rsp+0x70]
   140008573:	mov    r12,QWORD PTR [rsp+0xd8]
   14000857b:	jmp    0x140008589
   14000857d:	mov    edi,DWORD PTR [rsp+0x70]
   140008581:	mov    r12,QWORD PTR [rsp+0xd8]
   140008589:	mov    rax,QWORD PTR [rsp+0x130]
   140008591:	test   rax,rax
   140008594:	je     0x14000859e
   140008596:	mov    rcx,rax
   140008599:	call   0x140008ac0
   14000859e:	test   r12,r12
   1400085a1:	je     0x1400085ab
   1400085a3:	mov    rcx,r12
   1400085a6:	call   0x14002b36c
   1400085ab:	cmp    BYTE PTR [rsp+0x81],0x0
   1400085b3:	mov    r12,QWORD PTR [rsp+0x2c0]
   1400085bb:	je     0x1400085c0
   1400085bd:	or     edi,0xffffffff
   1400085c0:	mov    rax,QWORD PTR [rsp+0xc8]
   1400085c8:	mov    r14,QWORD PTR [rsp+0x2b0]
   1400085d0:	mov    r13,QWORD PTR [rsp+0x2b8]
   1400085d8:	mov    rsi,QWORD PTR [rsp+0x2c8]
   1400085e0:	mov    rbp,QWORD PTR [rsp+0x2d0]
   1400085e8:	mov    rbx,QWORD PTR [rsp+0x308]
   1400085f0:	test   rax,rax
   1400085f3:	je     0x14000860a
   1400085f5:	lea    rcx,[rsp+0x1e0]
   1400085fd:	cmp    rax,rcx
   140008600:	je     0x14000860a
   140008602:	mov    rcx,rax
   140008605:	call   0x14002b36c
   14000860a:	cmp    BYTE PTR [rsp+0x80],0x0
   140008612:	je     0x14000862d
   140008614:	test   edi,edi
   140008616:	jns    0x140008622
   140008618:	mov    rcx,r15
   14000861b:	call   0x14002b36c
   140008620:	jmp    0x14000862d
   140008622:	mov    rax,QWORD PTR [rsp+0x1d8]
   14000862a:	mov    QWORD PTR [rax],r15
   14000862d:	mov    eax,edi
   14000862f:	mov    rcx,QWORD PTR [rsp+0x2a0]
   140008637:	xor    rcx,rsp
   14000863a:	call   0x14002b250
   14000863f:	add    rsp,0x2d8
   140008646:	pop    r15
   140008648:	pop    rdi
   140008649:	ret    
   14000864a:	xchg   ax,ax
   14000864c:	popf   
   14000864d:	rex.WRX add BYTE PTR [rax],r8b
   140008650:	mov    dl,0x4e
   140008652:	add    BYTE PTR [rax],al
   140008654:	stos   BYTE PTR es:[rdi],al
   140008655:	rex.WRXB add BYTE PTR [r8],r8b
   140008658:	ror    BYTE PTR [rsi+0x0],0x0
   14000865c:	movabs al,ds:0x3000004f9200004f
   140008665:	rex.WRB add BYTE PTR [r8],r8b
   140008668:	stc    
   140008669:	rex.WRXB add BYTE PTR [r8],r8b
   14000866c:	mov    cs,WORD PTR [rbp+0x0]
   14000866f:	add    ah,dl
   140008671:	push   rax
   140008672:	add    BYTE PTR [rax],al
   140008674:	mov    esi,0x10000051
   140008679:	push   rsp
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	mov    ss,WORD PTR [rax+rax*1+0x0]
   140008680:	xchg   ebp,eax
   140008681:	push   rsp
   140008682:	add    BYTE PTR [rax],al
   140008684:	ds push rax
   140008686:	add    BYTE PTR [rax],al
   140008688:	test   al,0x50
   14000868a:	add    BYTE PTR [rax],al
   14000868c:	sub    ebx,DWORD PTR [rbx+0x0]
   14000868f:	add    BYTE PTR [rdi],bl
   140008691:	pop    rsi
   140008692:	add    BYTE PTR [rax],al
   140008694:	xchg   esi,eax
   140008695:	pop    rdi
   140008696:	add    BYTE PTR [rax],al
   140008698:	sub    al,0x62
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	(bad)
   14000869f:	add    ch,bl
   1400086a1:	push   rax
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	(bad)  
   1400086a5:	push   rcx
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	or     BYTE PTR [rax+0x0],dl
   1400086ab:	add    BYTE PTR [rdi],ch
   1400086ad:	push   rax
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	(bad)  
   1400086b1:	push   rax
   1400086b2:	add    BYTE PTR [rax],al
   1400086b4:	jnp    0x14000870e
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	xor    al,0x5b
   1400086ba:	add    BYTE PTR [rax],al
   1400086bc:	rcr    DWORD PTR [rbp+0x0],0x0
   1400086c0:	sub    BYTE PTR [rsi+0x0],bl
   1400086c3:	add    BYTE PTR [rsi-0x60ffffb0],dh
   1400086c9:	pop    rdi
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	cmp    eax,0xa1000062
   1400086d1:	data16 add BYTE PTR [rax],al
   1400086d4:	add    BYTE PTR [rcx],ah
   1400086d6:	and    DWORD PTR [rcx],eax
   1400086d8:	and    DWORD PTR [rcx],esp
   1400086da:	and    DWORD PTR [rdx],eax
   1400086dc:	and    DWORD PTR [rcx],esp
   1400086de:	add    eax,DWORD PTR [rcx+riz*1]
   1400086e1:	add    eax,0x8072106
   1400086e6:	or     BYTE PTR [rax],cl
   1400086e8:	or     BYTE PTR [rax],cl
   1400086ea:	or     BYTE PTR [rax],cl
   1400086ec:	or     BYTE PTR [rax],cl
   1400086ee:	and    DWORD PTR [rcx],esp
   1400086f0:	and    DWORD PTR [rcx],esp
   1400086f2:	and    DWORD PTR [rcx],esp
   1400086f4:	and    DWORD PTR [rcx],esp
   1400086f6:	and    DWORD PTR [rcx],ecx
   1400086f8:	or     cl,BYTE PTR [rbx]
   1400086fa:	or     al,0xd
   1400086fc:	and    DWORD PTR [rsi],ecx
   1400086fe:	and    DWORD PTR [rcx],esp
   140008700:	mov    rcx,db4
   140008703:	adc    BYTE PTR [rcx],ah
   140008705:	and    DWORD PTR [rcx],esp
   140008707:	adc    DWORD PTR [rcx],esp
   140008709:	adc    ah,BYTE PTR [rcx]
   14000870b:	and    DWORD PTR [rbx],edx
   14000870d:	and    DWORD PTR [rcx+riz*1],edx
   140008710:	and    DWORD PTR [rcx],esp
   140008712:	and    DWORD PTR [rcx],esp
   140008714:	and    DWORD PTR [rcx],esp
   140008716:	and    DWORD PTR [rip+0xd0c0b16],edx        # 0x14d0c9232
   14000871c:	(bad)  
   14000871d:	(bad)  
   14000871e:	sbb    BYTE PTR [rcx],ah
   140008720:	sbb    DWORD PTR [rcx],esp
   140008722:	sbb    bl,BYTE PTR [rbx]
   140008724:	sbb    al,0xf
   140008726:	and    DWORD PTR [rip+0x21211f1e],ebx        # 0x16121a64a
   14000872c:	and    BYTE PTR [rcx],ah
   14000872e:	adc    al,0xcc
   140008730:	mov    QWORD PTR [rsp+0x8],rbx
   140008735:	mov    QWORD PTR [rsp+0x10],rbp
   14000873a:	mov    QWORD PTR [rsp+0x18],rsi
   14000873f:	push   rdi
   140008740:	push   r12
   140008742:	push   r13
   140008744:	sub    rsp,0x40
   140008748:	mov    rsi,r9
   14000874b:	mov    rbp,r8
   14000874e:	mov    r12,rdx
   140008751:	mov    r13,rcx
   140008754:	call   0x14002cc18
   140008759:	mov    rdi,QWORD PTR [rax+0x10]
   14000875d:	call   0x14002cc18
   140008762:	mov    r10,QWORD PTR [rax+0x8]
   140008766:	movzx  ebx,BYTE PTR [r10]
   14000876a:	call   0x14002cc18
   14000876f:	mov    QWORD PTR [rsp+0x30],rsi
   140008774:	mov    r9,QWORD PTR [rax]
   140008777:	movzx  r8d,bl
   14000877b:	mov    rdx,rdi
   14000877e:	mov    rcx,r13
   140008781:	mov    QWORD PTR [rsp+0x28],rbp
   140008786:	mov    QWORD PTR [rsp+0x20],r12
   14000878b:	call   0x140004940
   140008790:	mov    rbx,QWORD PTR [rsp+0x60]
   140008795:	mov    rbp,QWORD PTR [rsp+0x68]
   14000879a:	mov    rsi,QWORD PTR [rsp+0x70]
   14000879f:	add    rsp,0x40
   1400087a3:	pop    r13
   1400087a5:	pop    r12
   1400087a7:	pop    rdi
   1400087a8:	ret    
   1400087a9:	int3   
   1400087aa:	int3   
   1400087ab:	int3   
   1400087ac:	int3   
   1400087ad:	int3   
   1400087ae:	int3   
   1400087af:	int3   
   1400087b0:	mov    QWORD PTR [rsp+0x20],rbx
   1400087b5:	push   rbp
   1400087b6:	push   rdi
   1400087b7:	push   r12
   1400087b9:	push   r13
   1400087bb:	mov    r10,QWORD PTR [rcx]
   1400087be:	mov    r11,QWORD PTR [r8]
   1400087c1:	xor    ebx,ebx
   1400087c3:	mov    r13,r9
   1400087c6:	mov    rbp,r8
   1400087c9:	mov    rdi,rdx
   1400087cc:	mov    r12,rcx
   1400087cf:	cmp    r10,rdx
   1400087d2:	jae    0x140008958
   1400087d8:	mov    QWORD PTR [rsp+0x28],rsi
   1400087dd:	mov    esi,DWORD PTR [rsp+0x48]
   1400087e1:	mov    QWORD PTR [rsp+0x30],r14
   1400087e6:	mov    QWORD PTR [rsp+0x38],r15
   1400087eb:	lea    edx,[rbx+0x4]
   1400087ee:	lea    r14d,[rbx+0x3]
   1400087f2:	lea    r15d,[rbx+0x1]
   1400087f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008800:	movzx  ecx,WORD PTR [r10]
   140008804:	mov    r9,r10
   140008807:	add    r10,0x2
   14000880b:	lea    eax,[rcx-0xd800]
   140008811:	cmp    eax,0x3ff
   140008816:	ja     0x140008857
   140008818:	cmp    r10,rdi
   14000881b:	jae    0x140008929
   140008821:	movzx  edx,WORD PTR [r10]
   140008825:	lea    eax,[rdx-0xdc00]
   14000882b:	cmp    eax,0x3ff
   140008830:	ja     0x140008848
   140008832:	add    ecx,0xffff2809
   140008838:	shl    ecx,0xa
   14000883b:	add    ecx,edx
   14000883d:	add    r10,0x2
   140008841:	mov    edx,0x4
   140008846:	jmp    0x14000886f
   140008848:	test   esi,esi
   14000884a:	je     0x140008932
   140008850:	mov    edx,0x4
   140008855:	jmp    0x14000886f
   140008857:	test   esi,esi
   140008859:	jne    0x14000886f
   14000885b:	cmp    ecx,0xdc00
   140008861:	jb     0x14000886f
   140008863:	cmp    ecx,0xdfff
   140008869:	jbe    0x140008932
   14000886f:	cmp    ecx,0x80
   140008875:	jae    0x14000887d
   140008877:	mov    ax,r15w
   14000887b:	jmp    0x1400088b0
   14000887d:	cmp    ecx,0x800
   140008883:	jae    0x14000888c
   140008885:	mov    eax,0x2
   14000888a:	jmp    0x1400088b0
   14000888c:	cmp    ecx,0x10000
   140008892:	jae    0x14000889a
   140008894:	mov    ax,r14w
   140008898:	jmp    0x1400088b0
   14000889a:	cmp    ecx,0x110000
   1400088a0:	jae    0x1400088a7
   1400088a2:	mov    ax,dx
   1400088a5:	jmp    0x1400088b0
   1400088a7:	mov    ax,r14w
   1400088ab:	mov    ecx,0xfffd
   1400088b0:	movzx  r8d,ax
   1400088b4:	add    r11,r8
   1400088b7:	cmp    r11,r13
   1400088ba:	ja     0x14000893b
   1400088bc:	movzx  edx,ax
   1400088bf:	sub    edx,r15d
   1400088c2:	je     0x140008903
   1400088c4:	sub    edx,r15d
   1400088c7:	je     0x1400088f3
   1400088c9:	sub    edx,r15d
   1400088cc:	je     0x1400088e3
   1400088ce:	cmp    edx,r15d
   1400088d1:	jne    0x140008917
   1400088d3:	movzx  eax,cl
   1400088d6:	dec    r11
   1400088d9:	and    al,0x3f
   1400088db:	or     al,0x80
   1400088dd:	shr    ecx,0x6
   1400088e0:	mov    BYTE PTR [r11],al
   1400088e3:	movzx  eax,cl
   1400088e6:	dec    r11
   1400088e9:	and    al,0x3f
   1400088eb:	or     al,0x80
   1400088ed:	shr    ecx,0x6
   1400088f0:	mov    BYTE PTR [r11],al
   1400088f3:	movzx  eax,cl
   1400088f6:	dec    r11
   1400088f9:	and    al,0x3f
   1400088fb:	or     al,0x80
   1400088fd:	shr    ecx,0x6
   140008900:	mov    BYTE PTR [r11],al
   140008903:	dec    r11
   140008906:	lea    rax,[rip+0x35cbb]        # 0x14003e5c8
   14000890d:	movzx  eax,BYTE PTR [r8+rax*1]
   140008912:	or     al,cl
   140008914:	mov    BYTE PTR [r11],al
   140008917:	add    r11,r8
   14000891a:	cmp    r10,rdi
   14000891d:	jae    0x140008949
   14000891f:	mov    edx,0x4
   140008924:	jmp    0x140008800
   140008929:	sub    r10,0x2
   14000892d:	mov    ebx,r15d
   140008930:	jmp    0x140008949
   140008932:	sub    r10,0x2
   140008936:	mov    ebx,r14d
   140008939:	jmp    0x140008949
   14000893b:	movzx  eax,ax
   14000893e:	mov    r10,r9
   140008941:	mov    ebx,0x2
   140008946:	sub    r11,rax
   140008949:	mov    r14,QWORD PTR [rsp+0x30]
   14000894e:	mov    rsi,QWORD PTR [rsp+0x28]
   140008953:	mov    r15,QWORD PTR [rsp+0x38]
   140008958:	mov    QWORD PTR [r12],r10
   14000895c:	mov    eax,ebx
   14000895e:	mov    rbx,QWORD PTR [rsp+0x40]
   140008963:	mov    QWORD PTR [rbp+0x0],r11
   140008967:	pop    r13
   140008969:	pop    r12
   14000896b:	pop    rdi
   14000896c:	pop    rbp
   14000896d:	ret    
   14000896e:	int3   
   14000896f:	int3   
   140008970:	mov    QWORD PTR [rsp+0x8],rbx
   140008975:	mov    QWORD PTR [rsp+0x18],rsi
   14000897a:	push   rdi
   14000897b:	sub    rsp,0x40
   14000897f:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140008984:	mov    rsi,r9
   140008987:	mov    edi,r8d
   14000898a:	movapd xmm6,xmm0
   14000898e:	mov    ecx,0x15d
   140008993:	cmp    edx,0x2
   140008996:	jne    0x1400089e4
   140008998:	call   0x14002c04c
   14000899d:	mov    rbx,rax
   1400089a0:	test   rax,rax
   1400089a3:	je     0x140008a78
   1400089a9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400089ae:	lea    rax,[rsp+0x58]
   1400089b3:	movapd xmm2,xmm6
   1400089b7:	mov    QWORD PTR [rsp+0x28],rcx
   1400089bc:	mov    r9d,edi
   1400089bf:	mov    edx,0x15d
   1400089c4:	mov    rcx,rbx
   1400089c7:	mov    QWORD PTR [rsp+0x20],rax
   1400089cc:	call   0x14002cdcc
   1400089d1:	test   eax,eax
   1400089d3:	je     0x140008a3a
   1400089d5:	mov    rcx,rbx
   1400089d8:	call   0x14002b36c
   1400089dd:	xor    eax,eax
   1400089df:	jmp    0x140008a78
   1400089e4:	call   0x14002c04c
   1400089e9:	mov    rbx,rax
   1400089ec:	test   rax,rax
   1400089ef:	je     0x140008a78
   1400089f5:	mov    rax,QWORD PTR [rsp+0x70]
   1400089fa:	movapd xmm2,xmm6
   1400089fe:	mov    r9d,edi
   140008a01:	mov    QWORD PTR [rsp+0x28],rax
   140008a06:	lea    rax,[rsp+0x58]
   140008a0b:	mov    edx,0x15d
   140008a10:	mov    rcx,rbx
   140008a13:	mov    QWORD PTR [rsp+0x20],rax
   140008a18:	call   0x14002ccec
   140008a1d:	test   eax,eax
   140008a1f:	jne    0x1400089d5
   140008a21:	cmp    BYTE PTR [rbx],al
   140008a23:	jne    0x140008a3a
   140008a25:	mov    edx,DWORD PTR [rsp+0x58]
   140008a29:	test   edx,edx
   140008a2b:	jns    0x140008a3e
   140008a2d:	neg    edi
   140008a2f:	cmp    edx,edi
   140008a31:	cmovl  edx,edi
   140008a34:	mov    DWORD PTR [rsp+0x58],edx
   140008a38:	jmp    0x140008a3e
   140008a3a:	mov    edx,DWORD PTR [rsp+0x58]
   140008a3e:	xor    eax,eax
   140008a40:	or     rcx,0xffffffffffffffff
   140008a44:	mov    rdi,rbx
   140008a47:	repnz scas al,BYTE PTR es:[rdi]
   140008a49:	not    rcx
   140008a4c:	lea    rax,[rcx-0x1]
   140008a50:	mov    rcx,QWORD PTR [rsp+0x78]
   140008a55:	add    rax,rbx
   140008a58:	mov    QWORD PTR [rcx],rax
   140008a5b:	cmp    rax,rbx
   140008a5e:	jbe    0x140008a73
   140008a60:	mov    rax,QWORD PTR [rcx]
   140008a63:	dec    rax
   140008a66:	cmp    BYTE PTR [rax],0x30
   140008a69:	jne    0x140008a73
   140008a6b:	mov    QWORD PTR [rcx],rax
   140008a6e:	cmp    rax,rbx
   140008a71:	ja     0x140008a60
   140008a73:	mov    DWORD PTR [rsi],edx
   140008a75:	mov    rax,rbx
   140008a78:	mov    rbx,QWORD PTR [rsp+0x50]
   140008a7d:	mov    rsi,QWORD PTR [rsp+0x60]
   140008a82:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140008a87:	add    rsp,0x40
   140008a8b:	pop    rdi
   140008a8c:	ret    
   140008a8d:	int3   
   140008a8e:	int3   
   140008a8f:	int3   
   140008a90:	sub    rsp,0x38
   140008a94:	mov    rax,QWORD PTR [rsp+0x68]
   140008a99:	movsd  xmm0,QWORD PTR [rcx]
   140008a9d:	mov    QWORD PTR [rsp+0x28],rax
   140008aa2:	mov    rax,QWORD PTR [rsp+0x60]
   140008aa7:	mov    QWORD PTR [rsp+0x20],rax
   140008aac:	call   0x140008970
   140008ab1:	add    rsp,0x38
   140008ab5:	ret    
   140008ab6:	int3   
   140008ab7:	int3   
   140008ab8:	int3   
   140008ab9:	int3   
   140008aba:	int3   
   140008abb:	int3   
   140008abc:	int3   
   140008abd:	int3   
   140008abe:	int3   
   140008abf:	int3   
   140008ac0:	jmp    0x14002b36c
   140008ac5:	int3   
   140008ac6:	int3   
   140008ac7:	int3   
   140008ac8:	int3   
   140008ac9:	int3   
   140008aca:	int3   
   140008acb:	int3   
   140008acc:	int3   
   140008acd:	int3   
   140008ace:	int3   
   140008acf:	int3   
   140008ad0:	mov    QWORD PTR [rsp+0x10],rbp
   140008ad5:	mov    QWORD PTR [rsp+0x18],rsi
   140008ada:	push   rdi
   140008adb:	sub    rsp,0x30
   140008adf:	mov    rsi,r9
   140008ae2:	mov    rbp,r8
   140008ae5:	lea    r9,[rsp+0x20]
   140008aea:	lea    r8,[rsp+0x28]
   140008aef:	mov    edx,edx
   140008af1:	call   0x140009970
   140008af6:	movzx  edi,al
   140008af9:	test   al,al
   140008afb:	je     0x140008b54
   140008afd:	mov    ecx,DWORD PTR [rsi]
   140008aff:	mov    QWORD PTR [rsp+0x40],rbx
   140008b04:	mov    rbx,QWORD PTR [rsp+0x20]
   140008b09:	lea    rdx,[rbx+0x1]
   140008b0d:	cmp    rdx,rcx
   140008b10:	ja     0x140008b2d
   140008b12:	mov    rdx,QWORD PTR [rsp+0x28]
   140008b17:	mov    r8,rbx
   140008b1a:	mov    rcx,rbp
   140008b1d:	call   0x14002b9a0
   140008b22:	mov    BYTE PTR [rbx+rbp*1],0x0
   140008b26:	mov    rbx,QWORD PTR [rsp+0x20]
   140008b2b:	jmp    0x140008b30
   140008b2d:	xor    dil,dil
   140008b30:	mov    rcx,QWORD PTR [rsp+0x28]
   140008b35:	mov    DWORD PTR [rsi],ebx
   140008b37:	call   0x14002b36c
   140008b3c:	mov    rbx,QWORD PTR [rsp+0x40]
   140008b41:	mov    rbp,QWORD PTR [rsp+0x48]
   140008b46:	mov    rsi,QWORD PTR [rsp+0x50]
   140008b4b:	mov    al,dil
   140008b4e:	add    rsp,0x30
   140008b52:	pop    rdi
   140008b53:	ret    
   140008b54:	lea    rdx,[rip+0x35a75]        # 0x14003e5d0
   140008b5b:	lea    rcx,[rip+0x358be]        # 0x14003e420
   140008b62:	mov    r8d,0x52
   140008b68:	call   0x140001050
   140008b6d:	int3   
   140008b6e:	int3   
   140008b6f:	int3   
   140008b70:	mov    QWORD PTR [rsp+0x8],rbx
   140008b75:	mov    QWORD PTR [rsp+0x10],rsi
   140008b7a:	push   rdi
   140008b7b:	sub    rsp,0x20
   140008b7f:	mov    ebx,DWORD PTR [rsp+0x58]
   140008b83:	mov    esi,edx
   140008b85:	mov    edx,DWORD PTR [rsp+0x50]
   140008b89:	mov    rdi,r9
   140008b8c:	mov    rax,r8
   140008b8f:	test   edx,edx
   140008b91:	je     0x140008be3
   140008b93:	cmp    edx,0x2
   140008b96:	jbe    0x140008b9d
   140008b98:	cmp    edx,0x7
   140008b9b:	jne    0x140008be3
   140008b9d:	test   ebx,ebx
   140008b9f:	jne    0x140008bc6
   140008ba1:	test   rax,rax
   140008ba4:	je     0x140008bc6
   140008ba6:	mov    edx,esi
   140008ba8:	call   0x140008ad0
   140008bad:	test   al,al
   140008baf:	jne    0x140008c0d
   140008bb1:	mov    eax,0xea
   140008bb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140008bbb:	mov    rsi,QWORD PTR [rsp+0x38]
   140008bc0:	add    rsp,0x20
   140008bc4:	pop    rdi
   140008bc5:	ret    
   140008bc6:	test   r9,r9
   140008bc9:	je     0x140008c0d
   140008bcb:	lea    eax,[rsi+rsi*1]
   140008bce:	mov    DWORD PTR [r9],eax
   140008bd1:	mov    eax,ebx
   140008bd3:	mov    rbx,QWORD PTR [rsp+0x30]
   140008bd8:	mov    rsi,QWORD PTR [rsp+0x38]
   140008bdd:	add    rsp,0x20
   140008be1:	pop    rdi
   140008be2:	ret    
   140008be3:	test   ebx,ebx
   140008be5:	jne    0x140008c06
   140008be7:	test   rax,rax
   140008bea:	je     0x140008c06
   140008bec:	cmp    esi,DWORD PTR [r9]
   140008bef:	ja     0x140008c01
   140008bf1:	mov    rdx,rcx
   140008bf4:	mov    r8,rsi
   140008bf7:	mov    rcx,rax
   140008bfa:	call   0x14002b9a0
   140008bff:	jmp    0x140008c06
   140008c01:	mov    ebx,0xea
   140008c06:	test   rdi,rdi
   140008c09:	je     0x140008c0d
   140008c0b:	mov    DWORD PTR [rdi],esi
   140008c0d:	mov    rsi,QWORD PTR [rsp+0x38]
   140008c12:	mov    eax,ebx
   140008c14:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c19:	add    rsp,0x20
   140008c1d:	pop    rdi
   140008c1e:	ret    
   140008c1f:	int3   
   140008c20:	mov    QWORD PTR [rsp+0x8],rbx
   140008c25:	mov    QWORD PTR [rsp+0x10],rbp
   140008c2a:	mov    QWORD PTR [rsp+0x18],rsi
   140008c2f:	push   rdi
   140008c30:	sub    rsp,0x30
   140008c34:	mov    rax,rdx
   140008c37:	mov    rbp,rcx
   140008c3a:	mov    edx,0x1
   140008c3f:	mov    rcx,rax
   140008c42:	mov    ebx,r9d
   140008c45:	mov    esi,r8d
   140008c48:	call   0x14000bf50
   140008c4d:	mov    rdx,QWORD PTR [rsp+0x60]
   140008c52:	mov    r9d,ebx
   140008c55:	mov    QWORD PTR [rsp+0x20],rdx
   140008c5a:	mov    r8d,esi
   140008c5d:	mov    rcx,rbp
   140008c60:	mov    rdx,rax
   140008c63:	mov    rdi,rax
   140008c66:	call   QWORD PTR [rip+0x343b4]        # 0x14003d020
   140008c6c:	mov    rcx,rdi
   140008c6f:	mov    ebx,eax
   140008c71:	call   0x14002b36c
   140008c76:	mov    rbp,QWORD PTR [rsp+0x48]
   140008c7b:	mov    rsi,QWORD PTR [rsp+0x50]
   140008c80:	mov    eax,ebx
   140008c82:	mov    rbx,QWORD PTR [rsp+0x40]
   140008c87:	add    rsp,0x30
   140008c8b:	pop    rdi
   140008c8c:	ret    
   140008c8d:	int3   
   140008c8e:	int3   
   140008c8f:	int3   
   140008c90:	mov    QWORD PTR [rsp+0x8],rbx
   140008c95:	mov    QWORD PTR [rsp+0x10],rbp
   140008c9a:	mov    QWORD PTR [rsp+0x18],rsi
   140008c9f:	mov    QWORD PTR [rsp+0x20],rdi
   140008ca4:	push   r12
   140008ca6:	sub    rsp,0x50
   140008caa:	mov    rax,rdx
   140008cad:	mov    r12,rcx
   140008cb0:	mov    edx,0x1
   140008cb5:	mov    rcx,rax
   140008cb8:	mov    rbx,r9
   140008cbb:	mov    ebp,r8d
   140008cbe:	call   0x14000bf50
   140008cc3:	mov    edx,0x1
   140008cc8:	mov    rcx,rbx
   140008ccb:	mov    rsi,rax
   140008cce:	call   0x14000bf50
   140008cd3:	mov    rcx,QWORD PTR [rsp+0x90]
   140008cdb:	mov    rdx,QWORD PTR [rsp+0xa0]
   140008ce3:	mov    r8d,ebp
   140008ce6:	mov    r9,rax
   140008ce9:	mov    QWORD PTR [rsp+0x40],rdx
   140008cee:	mov    rdx,QWORD PTR [rsp+0x98]
   140008cf6:	mov    rdi,rax
   140008cf9:	mov    QWORD PTR [rsp+0x38],rdx
   140008cfe:	mov    QWORD PTR [rsp+0x30],rcx
   140008d03:	mov    ecx,DWORD PTR [rsp+0x88]
   140008d0a:	mov    DWORD PTR [rsp+0x28],ecx
   140008d0e:	mov    ecx,DWORD PTR [rsp+0x80]
   140008d15:	mov    rdx,rsi
   140008d18:	mov    DWORD PTR [rsp+0x20],ecx
   140008d1c:	mov    rcx,r12
   140008d1f:	call   QWORD PTR [rip+0x342f3]        # 0x14003d018
   140008d25:	mov    rcx,rdi
   140008d28:	mov    ebx,eax
   140008d2a:	call   0x14002b36c
   140008d2f:	mov    rcx,rsi
   140008d32:	call   0x14002b36c
   140008d37:	mov    rbp,QWORD PTR [rsp+0x68]
   140008d3c:	mov    rsi,QWORD PTR [rsp+0x70]
   140008d41:	mov    rdi,QWORD PTR [rsp+0x78]
   140008d46:	mov    eax,ebx
   140008d48:	mov    rbx,QWORD PTR [rsp+0x60]
   140008d4d:	add    rsp,0x50
   140008d51:	pop    r12
   140008d53:	ret    
   140008d54:	int3   
   140008d55:	int3   
   140008d56:	int3   
   140008d57:	int3   
   140008d58:	int3   
   140008d59:	int3   
   140008d5a:	int3   
   140008d5b:	int3   
   140008d5c:	int3   
   140008d5d:	int3   
   140008d5e:	int3   
   140008d5f:	int3   
   140008d60:	mov    QWORD PTR [rsp+0x8],rbx
   140008d65:	push   rdi
   140008d66:	sub    rsp,0x20
   140008d6a:	mov    rax,rdx
   140008d6d:	mov    rbx,rcx
   140008d70:	mov    edx,0x1
   140008d75:	mov    rcx,rax
   140008d78:	call   0x14000bf50
   140008d7d:	mov    rcx,rbx
   140008d80:	mov    rdx,rax
   140008d83:	mov    rdi,rax
   140008d86:	call   QWORD PTR [rip+0x34284]        # 0x14003d010
   140008d8c:	mov    rcx,rdi
   140008d8f:	mov    ebx,eax
   140008d91:	call   0x14002b36c
   140008d96:	mov    eax,ebx
   140008d98:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d9d:	add    rsp,0x20
   140008da1:	pop    rdi
   140008da2:	ret    
   140008da3:	int3   
   140008da4:	int3   
   140008da5:	int3   
   140008da6:	int3   
   140008da7:	int3   
   140008da8:	int3   
   140008da9:	int3   
   140008daa:	int3   
   140008dab:	int3   
   140008dac:	int3   
   140008dad:	int3   
   140008dae:	int3   
   140008daf:	int3   
   140008db0:	mov    QWORD PTR [rsp+0x8],rbx
   140008db5:	mov    QWORD PTR [rsp+0x10],rbp
   140008dba:	mov    QWORD PTR [rsp+0x18],rsi
   140008dbf:	push   rdi
   140008dc0:	sub    rsp,0x40
   140008dc4:	mov    rax,rdx
   140008dc7:	mov    rbp,rcx
   140008dca:	mov    edx,0x1
   140008dcf:	mov    rcx,rax
   140008dd2:	mov    ebx,r9d
   140008dd5:	mov    edi,r8d
   140008dd8:	call   0x14000bf50
   140008ddd:	mov    rsi,rax
   140008de0:	test   ebx,ebx
   140008de2:	je     0x140008e12
   140008de4:	cmp    ebx,0x2
   140008de7:	jbe    0x140008dee
   140008de9:	cmp    ebx,0x7
   140008dec:	jne    0x140008e12
   140008dee:	mov    edx,DWORD PTR [rsp+0x78]
   140008df2:	mov    rcx,QWORD PTR [rsp+0x70]
   140008df7:	lea    r9,[rsp+0x38]
   140008dfc:	lea    r8,[rsp+0x30]
   140008e01:	call   0x140009b90
   140008e06:	mov    r11,QWORD PTR [rsp+0x38]
   140008e0b:	mov    rax,QWORD PTR [rsp+0x30]
   140008e10:	jmp    0x140008e26
   140008e12:	mov    rax,QWORD PTR [rsp+0x70]
   140008e17:	mov    r11d,DWORD PTR [rsp+0x78]
   140008e1c:	mov    QWORD PTR [rsp+0x30],rax
   140008e21:	mov    QWORD PTR [rsp+0x38],r11
   140008e26:	mov    DWORD PTR [rsp+0x28],r11d
   140008e2b:	mov    r9d,ebx
   140008e2e:	mov    r8d,edi
   140008e31:	mov    rdx,rsi
   140008e34:	mov    rcx,rbp
   140008e37:	mov    QWORD PTR [rsp+0x20],rax
   140008e3c:	call   QWORD PTR [rip+0x341c6]        # 0x14003d008
   140008e42:	mov    edi,eax
   140008e44:	cmp    ebx,0x1
   140008e47:	je     0x140008e53
   140008e49:	cmp    ebx,0x2
   140008e4c:	je     0x140008e53
   140008e4e:	cmp    ebx,0x7
   140008e51:	jne    0x140008e5d
   140008e53:	mov    rcx,QWORD PTR [rsp+0x30]
   140008e58:	call   0x14002b36c
   140008e5d:	mov    rcx,rsi
   140008e60:	call   0x14002b36c
   140008e65:	mov    rbx,QWORD PTR [rsp+0x50]
   140008e6a:	mov    rbp,QWORD PTR [rsp+0x58]
   140008e6f:	mov    rsi,QWORD PTR [rsp+0x60]
   140008e74:	mov    eax,edi
   140008e76:	add    rsp,0x40
   140008e7a:	pop    rdi
   140008e7b:	ret    
   140008e7c:	int3   
   140008e7d:	int3   
   140008e7e:	int3   
   140008e7f:	int3   
   140008e80:	mov    QWORD PTR [rsp+0x8],rbx
   140008e85:	mov    QWORD PTR [rsp+0x10],rbp
   140008e8a:	push   rsi
   140008e8b:	push   rdi
   140008e8c:	push   r12
   140008e8e:	push   r13
   140008e90:	push   r15
   140008e92:	sub    rsp,0x40
   140008e96:	mov    rax,rdx
   140008e99:	mov    r13,rcx
   140008e9c:	mov    edx,0x1
   140008ea1:	mov    rcx,rax
   140008ea4:	mov    rsi,r9
   140008ea7:	mov    rdi,r8
   140008eaa:	call   0x14000bf50
   140008eaf:	mov    r12,QWORD PTR [rsp+0x98]
   140008eb7:	xor    r15d,r15d
   140008eba:	mov    rbx,r15
   140008ebd:	mov    DWORD PTR [rsp+0x88],r15d
   140008ec5:	mov    rbp,rax
   140008ec8:	cmp    QWORD PTR [rsp+0x90],rbx
   140008ed0:	je     0x140008eeb
   140008ed2:	mov    ecx,DWORD PTR [r12]
   140008ed6:	add    ecx,ecx
   140008ed8:	mov    DWORD PTR [rsp+0x88],ecx
   140008edf:	add    rcx,0x2
   140008ee3:	call   0x140009c70
   140008ee8:	mov    rbx,rax
   140008eeb:	lea    rax,[rsp+0x88]
   140008ef3:	lea    r9,[rsp+0x30]
   140008ef8:	mov    r8,rdi
   140008efb:	mov    QWORD PTR [rsp+0x28],rax
   140008f00:	mov    rdx,rbp
   140008f03:	mov    rcx,r13
   140008f06:	mov    QWORD PTR [rsp+0x20],rbx
   140008f0b:	call   QWORD PTR [rip+0x340ef]        # 0x14003d000
   140008f11:	mov    edi,eax
   140008f13:	test   rbx,rbx
   140008f16:	je     0x140008f41
   140008f18:	test   eax,eax
   140008f1a:	jne    0x140008f41
   140008f1c:	cmp    DWORD PTR [rsp+0x30],0x1
   140008f21:	jne    0x140008f41
   140008f23:	mov    ecx,DWORD PTR [rsp+0x88]
   140008f2a:	lea    edx,[rax+0x1]
   140008f2d:	mov    WORD PTR [rcx+rbx*1],r15w
   140008f32:	mov    rcx,rbx
   140008f35:	call   0x14000b8c0
   140008f3a:	mov    DWORD PTR [rsp+0x88],eax
   140008f41:	mov    eax,DWORD PTR [rsp+0x30]
   140008f45:	mov    r8,QWORD PTR [rsp+0x90]
   140008f4d:	mov    edx,DWORD PTR [rsp+0x88]
   140008f54:	mov    r9,r12
   140008f57:	mov    rcx,rbx
   140008f5a:	mov    DWORD PTR [rsp+0x28],edi
   140008f5e:	mov    DWORD PTR [rsp+0x20],eax
   140008f62:	call   0x140008b70
   140008f67:	mov    edi,eax
   140008f69:	test   rsi,rsi
   140008f6c:	je     0x140008f74
   140008f6e:	mov    ecx,DWORD PTR [rsp+0x30]
   140008f72:	mov    DWORD PTR [rsi],ecx
   140008f74:	mov    rcx,rbp
   140008f77:	call   0x14002b36c
   140008f7c:	mov    rcx,rbx
   140008f7f:	call   0x14002b36c
   140008f84:	mov    rbx,QWORD PTR [rsp+0x70]
   140008f89:	mov    rbp,QWORD PTR [rsp+0x78]
   140008f8e:	mov    eax,edi
   140008f90:	add    rsp,0x40
   140008f94:	pop    r15
   140008f96:	pop    r13
   140008f98:	pop    r12
   140008f9a:	pop    rdi
   140008f9b:	pop    rsi
   140008f9c:	ret    
   140008f9d:	int3   
   140008f9e:	int3   
   140008f9f:	int3   
   140008fa0:	mov    DWORD PTR [rsp+0x10],edx
   140008fa4:	mov    QWORD PTR [rsp+0x18],r8
   140008fa9:	mov    QWORD PTR [rsp+0x20],r9
   140008fae:	push   rbx
   140008faf:	push   rbp
   140008fb0:	push   rsi
   140008fb1:	sub    rsp,0x30
   140008fb5:	mov    edx,0x1
   140008fba:	call   0x14000bf50
   140008fbf:	xor    ebp,ebp
   140008fc1:	lea    rdx,[rip+0x35640]        # 0x14003e608
   140008fc8:	lea    r8d,[rbp+0x4]
   140008fcc:	mov    rcx,rax
   140008fcf:	mov    rsi,rax
   140008fd2:	call   0x14002d918
   140008fd7:	test   eax,eax
   140008fd9:	je     0x14000901b
   140008fdb:	mov    QWORD PTR [rsp+0x28],rdi
   140008fe0:	or     rbx,0xffffffffffffffff
   140008fe4:	xor    eax,eax
   140008fe6:	mov    rcx,rbx
   140008fe9:	mov    rdi,rsi
   140008fec:	repnz scas ax,WORD PTR es:[rdi]
   140008fef:	mov    rdi,QWORD PTR [rsp+0x28]
   140008ff4:	not    rcx
   140008ff7:	dec    rcx
   140008ffa:	cmp    rcx,0x104
   140009001:	jb     0x14000901b
   140009003:	call   0x14002b3f4
   140009008:	mov    ecx,0xce
   14000900d:	mov    DWORD PTR [rax],0x26
   140009013:	call   QWORD PTR [rip+0x342e7]        # 0x14003d300
   140009019:	jmp    0x140009039
   14000901b:	mov    edx,DWORD PTR [rsp+0x58]
   14000901f:	bt     edx,0x8
   140009023:	jae    0x14000902c
   140009025:	lea    rax,[rsp+0x60]
   14000902a:	mov    ebp,DWORD PTR [rax]
   14000902c:	mov    r8d,ebp
   14000902f:	mov    rcx,rsi
   140009032:	call   0x14002d828
   140009037:	mov    ebx,eax
   140009039:	mov    rcx,rsi
   14000903c:	call   0x14002b36c
   140009041:	mov    eax,ebx
   140009043:	add    rsp,0x30
   140009047:	pop    rsi
   140009048:	pop    rbp
   140009049:	pop    rbx
   14000904a:	ret    
   14000904b:	int3   
   14000904c:	int3   
   14000904d:	int3   
   14000904e:	int3   
   14000904f:	int3   
   140009050:	mov    QWORD PTR [rsp+0x10],rbx
   140009055:	mov    QWORD PTR [rsp+0x18],rbp
   14000905a:	push   rsi
   14000905b:	sub    rsp,0x20
   14000905f:	mov    ebp,edx
   140009061:	mov    edx,0x1
   140009066:	call   0x14000bf50
   14000906b:	lea    rdx,[rip+0x35596]        # 0x14003e608
   140009072:	mov    r8d,0x4
   140009078:	mov    rcx,rax
   14000907b:	mov    rsi,rax
   14000907e:	call   0x14002d918
   140009083:	test   eax,eax
   140009085:	je     0x1400090c7
   140009087:	mov    QWORD PTR [rsp+0x30],rdi
   14000908c:	or     rbx,0xffffffffffffffff
   140009090:	xor    eax,eax
   140009092:	mov    rcx,rbx
   140009095:	mov    rdi,rsi
   140009098:	repnz scas ax,WORD PTR es:[rdi]
   14000909b:	mov    rdi,QWORD PTR [rsp+0x30]
   1400090a0:	not    rcx
   1400090a3:	dec    rcx
   1400090a6:	cmp    rcx,0x104
   1400090ad:	jb     0x1400090c7
   1400090af:	call   0x14002b3f4
   1400090b4:	mov    ecx,0xce
   1400090b9:	mov    DWORD PTR [rax],0x26
   1400090bf:	call   QWORD PTR [rip+0x3423b]        # 0x14003d300
   1400090c5:	jmp    0x1400090d3
   1400090c7:	mov    edx,ebp
   1400090c9:	mov    rcx,rsi
   1400090cc:	call   0x14002d948
   1400090d1:	mov    ebx,eax
   1400090d3:	mov    rcx,rsi
   1400090d6:	call   0x14002b36c
   1400090db:	mov    rbp,QWORD PTR [rsp+0x40]
   1400090e0:	mov    eax,ebx
   1400090e2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400090e7:	add    rsp,0x20
   1400090eb:	pop    rsi
   1400090ec:	ret    
   1400090ed:	int3   
   1400090ee:	int3   
   1400090ef:	int3   
   1400090f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400090f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400090fa:	push   rsi
   1400090fb:	sub    rsp,0x20
   1400090ff:	mov    ebp,edx
   140009101:	mov    edx,0x1
   140009106:	call   0x14000bf50
   14000910b:	lea    rdx,[rip+0x354f6]        # 0x14003e608
   140009112:	mov    r8d,0x4
   140009118:	mov    rcx,rax
   14000911b:	mov    rsi,rax
   14000911e:	call   0x14002d918
   140009123:	test   eax,eax
   140009125:	je     0x140009167
   140009127:	mov    QWORD PTR [rsp+0x30],rdi
   14000912c:	or     rbx,0xffffffffffffffff
   140009130:	xor    eax,eax
   140009132:	mov    rcx,rbx
   140009135:	mov    rdi,rsi
   140009138:	repnz scas ax,WORD PTR es:[rdi]
   14000913b:	mov    rdi,QWORD PTR [rsp+0x30]
   140009140:	not    rcx
   140009143:	dec    rcx
   140009146:	cmp    rcx,0x104
   14000914d:	jb     0x140009167
   14000914f:	call   0x14002b3f4
   140009154:	mov    ecx,0xce
   140009159:	mov    DWORD PTR [rax],0x26
   14000915f:	call   QWORD PTR [rip+0x3419b]        # 0x14003d300
   140009165:	jmp    0x140009173
   140009167:	mov    edx,ebp
   140009169:	mov    rcx,rsi
   14000916c:	call   0x14002da5c
   140009171:	mov    ebx,eax
   140009173:	mov    rcx,rsi
   140009176:	call   0x14002b36c
   14000917b:	mov    rbp,QWORD PTR [rsp+0x40]
   140009180:	mov    eax,ebx
   140009182:	mov    rbx,QWORD PTR [rsp+0x38]
   140009187:	add    rsp,0x20
   14000918b:	pop    rsi
   14000918c:	ret    
   14000918d:	int3   
   14000918e:	int3   
   14000918f:	int3   
   140009190:	mov    QWORD PTR [rsp+0x8],rbx
   140009195:	push   rdi
   140009196:	sub    rsp,0x20
   14000919a:	mov    rbx,rdx
   14000919d:	mov    edx,0x1
   1400091a2:	call   0x14000bf50
   1400091a7:	mov    rdx,rbx
   1400091aa:	mov    rcx,rax
   1400091ad:	mov    rdi,rax
   1400091b0:	call   QWORD PTR [rip+0x34132]        # 0x14003d2e8
   1400091b6:	mov    rcx,rdi
   1400091b9:	mov    rbx,rax
   1400091bc:	call   0x14002b36c
   1400091c1:	mov    rax,rbx
   1400091c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400091c9:	add    rsp,0x20
   1400091cd:	pop    rdi
   1400091ce:	ret    
   1400091cf:	int3   
   1400091d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400091d5:	push   rdi
   1400091d6:	sub    rsp,0x20
   1400091da:	mov    edx,0x1
   1400091df:	call   0x14000bf50
   1400091e4:	mov    rcx,rax
   1400091e7:	mov    rdi,rax
   1400091ea:	call   QWORD PTR [rip+0x340e8]        # 0x14003d2d8
   1400091f0:	mov    rcx,rdi
   1400091f3:	mov    ebx,eax
   1400091f5:	call   0x14002b36c
   1400091fa:	mov    eax,ebx
   1400091fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140009201:	add    rsp,0x20
   140009205:	pop    rdi
   140009206:	ret    
   140009207:	int3   
   140009208:	int3   
   140009209:	int3   
   14000920a:	int3   
   14000920b:	int3   
   14000920c:	int3   
   14000920d:	int3   
   14000920e:	int3   
   14000920f:	int3   
   140009210:	rex push rbx
   140009212:	sub    rsp,0x20
   140009216:	mov    rbx,rdx
   140009219:	mov    edx,0x1
   14000921e:	call   0x14000bf50
   140009223:	mov    rdx,rbx
   140009226:	mov    rcx,rax
   140009229:	add    rsp,0x20
   14000922d:	pop    rbx
   14000922e:	rex.W jmp QWORD PTR [rip+0x33f03]        # 0x14003d138
   140009235:	int3   
   140009236:	int3   
   140009237:	int3   
   140009238:	int3   
   140009239:	int3   
   14000923a:	int3   
   14000923b:	int3   
   14000923c:	int3   
   14000923d:	int3   
   14000923e:	int3   
   14000923f:	int3   
   140009240:	mov    QWORD PTR [rsp+0x8],rbx
   140009245:	mov    QWORD PTR [rsp+0x10],rbp
   14000924a:	mov    QWORD PTR [rsp+0x18],rsi
   14000924f:	push   rdi
   140009250:	sub    rsp,0x20
   140009254:	mov    rbx,rdx
   140009257:	mov    edx,0x1
   14000925c:	mov    ebp,r8d
   14000925f:	call   0x14000bf50
   140009264:	mov    edx,0x1
   140009269:	mov    rcx,rbx
   14000926c:	mov    rsi,rax
   14000926f:	call   0x14000bf50
   140009274:	mov    r8d,ebp
   140009277:	mov    rdx,rax
   14000927a:	mov    rcx,rsi
   14000927d:	mov    rdi,rax
   140009280:	call   QWORD PTR [rip+0x33dc2]        # 0x14003d048
   140009286:	mov    rcx,rsi
   140009289:	mov    ebx,eax
   14000928b:	call   0x14002b36c
   140009290:	mov    rcx,rdi
   140009293:	call   0x14002b36c
   140009298:	mov    rbp,QWORD PTR [rsp+0x38]
   14000929d:	mov    rsi,QWORD PTR [rsp+0x40]
   1400092a2:	mov    eax,ebx
   1400092a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400092a9:	add    rsp,0x20
   1400092ad:	pop    rdi
   1400092ae:	ret    
   1400092af:	int3   
   1400092b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400092b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400092ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400092bf:	push   rdi
   1400092c0:	sub    rsp,0x20
   1400092c4:	mov    rbx,rdx
   1400092c7:	mov    edx,0x1
   1400092cc:	mov    ebp,r8d
   1400092cf:	call   0x14000bf50
   1400092d4:	mov    edx,0x1
   1400092d9:	mov    rcx,rbx
   1400092dc:	mov    rsi,rax
   1400092df:	call   0x14000bf50
   1400092e4:	mov    r8d,ebp
   1400092e7:	mov    rdx,rax
   1400092ea:	mov    rcx,rsi
   1400092ed:	mov    rdi,rax
   1400092f0:	call   QWORD PTR [rip+0x33d5a]        # 0x14003d050
   1400092f6:	mov    rcx,rsi
   1400092f9:	mov    ebx,eax
   1400092fb:	call   0x14002b36c
   140009300:	mov    rcx,rdi
   140009303:	call   0x14002b36c
   140009308:	mov    rbp,QWORD PTR [rsp+0x38]
   14000930d:	mov    rsi,QWORD PTR [rsp+0x40]
   140009312:	mov    eax,ebx
   140009314:	mov    rbx,QWORD PTR [rsp+0x30]
   140009319:	add    rsp,0x20
   14000931d:	pop    rdi
   14000931e:	ret    
   14000931f:	int3   
   140009320:	mov    QWORD PTR [rsp+0x8],rbx
   140009325:	mov    QWORD PTR [rsp+0x10],rsi
   14000932a:	push   rdi
   14000932b:	sub    rsp,0x20
   14000932f:	mov    edx,0x208
   140009334:	xor    ecx,ecx
   140009336:	xor    esi,esi
   140009338:	mov    ebx,0x104
   14000933d:	call   0x140009ca0
   140009342:	mov    ecx,ebx
   140009344:	mov    rdx,rax
   140009347:	mov    rdi,rax
   14000934a:	call   QWORD PTR [rip+0x33d18]        # 0x14003d068
   140009350:	test   eax,eax
   140009352:	je     0x140009390
   140009354:	mov    eax,eax
   140009356:	mov    rcx,rdi
   140009359:	cmp    rax,rbx
   14000935c:	jb     0x14000937e
   14000935e:	lea    rdx,[rax+rax*1]
   140009362:	mov    rbx,rax
   140009365:	call   0x140009ca0
   14000936a:	mov    ecx,ebx
   14000936c:	mov    rdx,rax
   14000936f:	mov    rdi,rax
   140009372:	call   QWORD PTR [rip+0x33cf0]        # 0x14003d068
   140009378:	test   eax,eax
   14000937a:	jne    0x140009354
   14000937c:	jmp    0x140009390
   14000937e:	mov    r8d,0x1
   140009384:	or     rdx,0xffffffffffffffff
   140009388:	call   0x14000b990
   14000938d:	mov    rsi,rax
   140009390:	mov    rcx,rdi
   140009393:	call   0x14002b36c
   140009398:	mov    rbx,QWORD PTR [rsp+0x30]
   14000939d:	mov    rax,rsi
   1400093a0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400093a5:	add    rsp,0x20
   1400093a9:	pop    rdi
   1400093aa:	ret    
   1400093ab:	int3   
   1400093ac:	int3   
   1400093ad:	int3   
   1400093ae:	int3   
   1400093af:	int3   
   1400093b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400093b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400093ba:	push   rdi
   1400093bb:	sub    rsp,0x30
   1400093bf:	mov    rdi,rdx
   1400093c2:	mov    esi,ecx
   1400093c4:	call   0x140009320
   1400093c9:	mov    rbx,rax
   1400093cc:	test   rax,rax
   1400093cf:	jne    0x1400093e1
   1400093d1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400093d6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400093db:	add    rsp,0x30
   1400093df:	pop    rdi
   1400093e0:	ret    
   1400093e1:	test   rdi,rdi
   1400093e4:	je     0x140009423
   1400093e6:	test   esi,esi
   1400093e8:	je     0x140009423
   1400093ea:	lea    r9,[rsp+0x50]
   1400093ef:	mov    r8,rsi
   1400093f2:	mov    rdx,rax
   1400093f5:	mov    rcx,rdi
   1400093f8:	mov    DWORD PTR [rsp+0x20],0x0
   140009400:	call   0x14000baf0
   140009405:	test   al,al
   140009407:	jne    0x140009436
   140009409:	lea    rdx,[rip+0x35208]        # 0x14003e618
   140009410:	lea    rcx,[rip+0x34fc1]        # 0x14003e3d8
   140009417:	mov    r8d,0x8a7
   14000941d:	call   0x140001050
   140009422:	int3   
   140009423:	or     rcx,0xffffffffffffffff
   140009427:	xor    eax,eax
   140009429:	mov    rdi,rbx
   14000942c:	repnz scas al,BYTE PTR es:[rdi]
   14000942e:	not    rcx
   140009431:	mov    QWORD PTR [rsp+0x50],rcx
   140009436:	mov    rcx,rbx
   140009439:	call   0x14002b36c
   14000943e:	mov    eax,DWORD PTR [rsp+0x50]
   140009442:	mov    rbx,QWORD PTR [rsp+0x40]
   140009447:	mov    rsi,QWORD PTR [rsp+0x48]
   14000944c:	add    rsp,0x30
   140009450:	pop    rdi
   140009451:	ret    
   140009452:	int3   
   140009453:	int3   
   140009454:	int3   
   140009455:	int3   
   140009456:	int3   
   140009457:	int3   
   140009458:	int3   
   140009459:	int3   
   14000945a:	int3   
   14000945b:	int3   
   14000945c:	int3   
   14000945d:	int3   
   14000945e:	int3   
   14000945f:	int3   
   140009460:	mov    QWORD PTR [rsp+0x8],rbx
   140009465:	mov    QWORD PTR [rsp+0x10],rbp
   14000946a:	mov    QWORD PTR [rsp+0x18],rsi
   14000946f:	push   rdi
   140009470:	sub    rsp,0x20
   140009474:	mov    edx,0x208
   140009479:	xor    ecx,ecx
   14000947b:	xor    ebp,ebp
   14000947d:	mov    edi,0x104
   140009482:	call   0x140009ca0
   140009487:	mov    edx,edi
   140009489:	mov    rcx,rax
   14000948c:	mov    rsi,rax
   14000948f:	call   QWORD PTR [rip+0x33bdb]        # 0x14003d070
   140009495:	mov    ebx,eax
   140009497:	test   eax,eax
   140009499:	je     0x1400094db
   14000949b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400094a0:	mov    rcx,rsi
   1400094a3:	cmp    ebx,edi
   1400094a5:	jb     0x1400094c9
   1400094a7:	mov    edx,ebx
   1400094a9:	mov    edi,ebx
   1400094ab:	add    rdx,rdx
   1400094ae:	call   0x140009ca0
   1400094b3:	mov    edx,ebx
   1400094b5:	mov    rcx,rax
   1400094b8:	mov    rsi,rax
   1400094bb:	call   QWORD PTR [rip+0x33baf]        # 0x14003d070
   1400094c1:	mov    ebx,eax
   1400094c3:	test   eax,eax
   1400094c5:	jne    0x1400094a0
   1400094c7:	jmp    0x1400094db
   1400094c9:	mov    r8d,0x1
   1400094cf:	or     rdx,0xffffffffffffffff
   1400094d3:	call   0x14000b990
   1400094d8:	mov    rbp,rax
   1400094db:	mov    rcx,rsi
   1400094de:	call   0x14002b36c
   1400094e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094e8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400094ed:	mov    rax,rbp
   1400094f0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400094f5:	add    rsp,0x20
   1400094f9:	pop    rdi
   1400094fa:	ret    
   1400094fb:	int3   
   1400094fc:	int3   
   1400094fd:	int3   
   1400094fe:	int3   
   1400094ff:	int3   
   140009500:	mov    QWORD PTR [rsp+0x8],rbx
   140009505:	mov    QWORD PTR [rsp+0x10],rsi
   14000950a:	push   rdi
   14000950b:	sub    rsp,0x30
   14000950f:	mov    edi,edx
   140009511:	mov    rsi,rcx
   140009514:	call   0x140009460
   140009519:	mov    rbx,rax
   14000951c:	test   rax,rax
   14000951f:	jne    0x140009531
   140009521:	mov    rbx,QWORD PTR [rsp+0x40]
   140009526:	mov    rsi,QWORD PTR [rsp+0x48]
   14000952b:	add    rsp,0x30
   14000952f:	pop    rdi
   140009530:	ret    
   140009531:	test   rsi,rsi
   140009534:	je     0x140009573
   140009536:	test   edi,edi
   140009538:	je     0x140009573
   14000953a:	lea    r9,[rsp+0x50]
   14000953f:	mov    r8,rdi
   140009542:	mov    rdx,rax
   140009545:	mov    rcx,rsi
   140009548:	mov    DWORD PTR [rsp+0x20],0x0
   140009550:	call   0x14000baf0
   140009555:	test   al,al
   140009557:	jne    0x140009586
   140009559:	lea    rdx,[rip+0x350b8]        # 0x14003e618
   140009560:	lea    rcx,[rip+0x34e71]        # 0x14003e3d8
   140009567:	mov    r8d,0x9d3
   14000956d:	call   0x140001050
   140009572:	int3   
   140009573:	or     rcx,0xffffffffffffffff
   140009577:	xor    eax,eax
   140009579:	mov    rdi,rbx
   14000957c:	repnz scas al,BYTE PTR es:[rdi]
   14000957e:	not    rcx
   140009581:	mov    QWORD PTR [rsp+0x50],rcx
   140009586:	mov    rcx,rbx
   140009589:	call   0x14002b36c
   14000958e:	mov    eax,DWORD PTR [rsp+0x50]
   140009592:	mov    rbx,QWORD PTR [rsp+0x40]
   140009597:	mov    rsi,QWORD PTR [rsp+0x48]
   14000959c:	add    rsp,0x30
   1400095a0:	pop    rdi
   1400095a1:	ret    
   1400095a2:	int3   
   1400095a3:	int3   
   1400095a4:	int3   
   1400095a5:	int3   
   1400095a6:	int3   
   1400095a7:	int3   
   1400095a8:	int3   
   1400095a9:	int3   
   1400095aa:	int3   
   1400095ab:	int3   
   1400095ac:	int3   
   1400095ad:	int3   
   1400095ae:	int3   
   1400095af:	int3   
   1400095b0:	rex push rbx
   1400095b2:	push   rbp
   1400095b3:	push   rsi
   1400095b4:	push   rdi
   1400095b5:	push   r14
   1400095b7:	sub    rsp,0x8d0
   1400095be:	mov    rax,QWORD PTR [rip+0x5d2eb]        # 0x1400668b0
   1400095c5:	xor    rax,rsp
   1400095c8:	mov    QWORD PTR [rsp+0x8a0],rax
   1400095d0:	mov    rdi,QWORD PTR [rsp+0x928]
   1400095d8:	xor    r14b,r14b
   1400095db:	mov    rbp,r9
   1400095de:	mov    rbx,r8
   1400095e1:	mov    rsi,rdx
   1400095e4:	cmp    BYTE PTR [rip+0x4cb17],r14b        # 0x140056102
   1400095eb:	je     0x140009607
   1400095ed:	mov    eax,DWORD PTR [rsp+0x920]
   1400095f4:	mov    QWORD PTR [rsp+0x28],rdi
   1400095f9:	mov    DWORD PTR [rsp+0x20],eax
   1400095fd:	call   0x14000b080
   140009602:	jmp    0x14000987a
   140009607:	mov    QWORD PTR [rsp+0x8c8],r12
   14000960f:	mov    QWORD PTR [rsp+0x8c0],r13
   140009617:	mov    QWORD PTR [rsp+0x8b8],r15
   14000961f:	test   rbx,rbx
   140009622:	je     0x14000985c
   140009628:	test   rdx,rdx
   14000962b:	je     0x14000985c
   140009631:	lea    rdx,[rsp+0x70]
   140009636:	xor    r15d,r15d
   140009639:	mov    DWORD PTR [rsp+0x70],r15d
   14000963e:	call   0x14000dbd0
   140009643:	mov    r13,rax
   140009646:	test   rax,rax
   140009649:	je     0x14000985f
   14000964f:	lea    rdx,[rsp+0x70]
   140009654:	mov    rcx,rbp
   140009657:	mov    DWORD PTR [rsp+0x70],r15d
   14000965c:	call   0x14000dbd0
   140009661:	mov    r12,rax
   140009664:	test   rax,rax
   140009667:	je     0x140009845
   14000966d:	mov    ecx,DWORD PTR [rsp+0x920]
   140009674:	test   ecx,ecx
   140009676:	je     0x1400096bc
   140009678:	sub    ecx,0x1
   14000967b:	je     0x1400096ac
   14000967d:	cmp    ecx,0x1
   140009680:	je     0x14000969c
   140009682:	lea    rdx,[rip+0x34fbf]        # 0x14003e648
   140009689:	lea    rcx,[rip+0x34d90]        # 0x14003e420
   140009690:	mov    r8d,0x3c9
   140009696:	call   0x140001050
   14000969b:	int3   
   14000969c:	lea    rdx,[rip+0x623d]        # 0x14000f8e0
   1400096a3:	lea    rbp,[rip+0x61c6]        # 0x14000f870
   1400096aa:	jmp    0x1400096ca
   1400096ac:	lea    rdx,[rip+0x625d]        # 0x14000f910
   1400096b3:	lea    rbp,[rip+0x61e6]        # 0x14000f8a0
   1400096ba:	jmp    0x1400096ca
   1400096bc:	lea    rdx,[rip+0x619d]        # 0x14000f860
   1400096c3:	lea    rbp,[rip+0x6196]        # 0x14000f860
   1400096ca:	lea    rax,[rsp+0x70]
   1400096cf:	xor    r9d,r9d
   1400096d2:	xor    r8d,r8d
   1400096d5:	mov    QWORD PTR [rsp+0x28],rax
   1400096da:	mov    rcx,r13
   1400096dd:	mov    DWORD PTR [rsp+0x70],r15d
   1400096e2:	mov    QWORD PTR [rsp+0x20],r15
   1400096e7:	call   0x14000e250
   1400096ec:	cmp    DWORD PTR [rsp+0x70],r15d
   1400096f1:	jne    0x140009845
   1400096f7:	lea    rax,[rsp+0x70]
   1400096fc:	xor    r9d,r9d
   1400096ff:	xor    r8d,r8d
   140009702:	mov    QWORD PTR [rsp+0x28],rax
   140009707:	mov    rdx,rbp
   14000970a:	mov    rcx,r12
   14000970d:	mov    QWORD PTR [rsp+0x20],r15
   140009712:	mov    DWORD PTR [rsp+0x70],r15d
   140009717:	call   0x14000e290
   14000971c:	cmp    DWORD PTR [rsp+0x70],r15d
   140009721:	jne    0x140009845
   140009727:	lea    rdx,[rbx+0x4]
   14000972b:	mov    QWORD PTR [rsp+0x88],rsi
   140009733:	lea    rbp,[rbx+rsi*1]
   140009737:	cmp    rdx,rbx
   14000973a:	jb     0x140009845
   140009740:	lea    rax,[rsp+0xa0]
   140009748:	mov    rcx,rdi
   14000974b:	mov    rbx,r15
   14000974e:	mov    QWORD PTR [rsp+0x90],rax
   140009756:	lea    rax,[rsp+0xa0]
   14000975e:	mov    QWORD PTR [rsp+0x80],rax
   140009766:	call   0x14000a310
   14000976b:	test   al,al
   14000976d:	je     0x140009845
   140009773:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009780:	mov    rsi,QWORD PTR [rdi]
   140009783:	lea    r8,[rsp+0x78]
   140009788:	mov    rdx,r13
   14000978b:	lea    rax,[rsi+rbx*1]
   14000978f:	mov    rbx,QWORD PTR [rdi+0x10]
   140009793:	mov    rcx,r12
   140009796:	mov    QWORD PTR [rsp+0x78],rax
   14000979b:	lea    rax,[rsp+0x70]
   1400097a0:	lea    r9,[rsi+rbx*1]
   1400097a4:	mov    QWORD PTR [rsp+0x60],rax
   1400097a9:	mov    BYTE PTR [rsp+0x58],0x1
   1400097ae:	mov    BYTE PTR [rsp+0x50],r15b
   1400097b3:	lea    rax,[rsp+0x8a0]
   1400097bb:	mov    DWORD PTR [rsp+0x70],r15d
   1400097c0:	mov    QWORD PTR [rsp+0x48],rax
   1400097c5:	lea    rax,[rsp+0x80]
   1400097cd:	mov    QWORD PTR [rsp+0x40],rax
   1400097d2:	lea    rax,[rsp+0x90]
   1400097da:	mov    QWORD PTR [rsp+0x38],rax
   1400097df:	lea    rax,[rsp+0xa0]
   1400097e7:	mov    QWORD PTR [rsp+0x30],rax
   1400097ec:	lea    rax,[rsp+0x88]
   1400097f4:	mov    QWORD PTR [rsp+0x28],rbp
   1400097f9:	mov    QWORD PTR [rsp+0x20],rax
   1400097fe:	call   0x14000f230
   140009803:	mov    r11d,DWORD PTR [rsp+0x70]
   140009808:	test   r11d,r11d
   14000980b:	jle    0x140009836
   14000980d:	cmp    r11d,0xf
   140009811:	jne    0x140009845
   140009813:	lea    rdx,[rbx+rbx*1]
   140009817:	cmp    rdx,rbx
   14000981a:	jb     0x140009845
   14000981c:	mov    rbx,QWORD PTR [rsp+0x78]
   140009821:	mov    rcx,rdi
   140009824:	sub    rbx,rsi
   140009827:	call   0x14000a310
   14000982c:	test   al,al
   14000982e:	jne    0x140009780
   140009834:	jmp    0x140009845
   140009836:	mov    rax,QWORD PTR [rsp+0x78]
   14000983b:	mov    r14b,0x1
   14000983e:	sub    rax,rsi
   140009841:	mov    QWORD PTR [rdi+0x8],rax
   140009845:	mov    rcx,r13
   140009848:	call   0x14000df20
   14000984d:	test   r12,r12
   140009850:	je     0x14000985f
   140009852:	mov    rcx,r12
   140009855:	call   0x14000df20
   14000985a:	jmp    0x14000985f
   14000985c:	mov    r14b,0x1
   14000985f:	mov    r13,QWORD PTR [rsp+0x8c0]
   140009867:	mov    r12,QWORD PTR [rsp+0x8c8]
   14000986f:	mov    r15,QWORD PTR [rsp+0x8b8]
   140009877:	mov    al,r14b
   14000987a:	mov    rcx,QWORD PTR [rsp+0x8a0]
   140009882:	xor    rcx,rsp
   140009885:	call   0x14002b250
   14000988a:	add    rsp,0x8d0
   140009891:	pop    r14
   140009893:	pop    rdi
   140009894:	pop    rsi
   140009895:	pop    rbp
   140009896:	pop    rbx
   140009897:	ret    
   140009898:	int3   
   140009899:	int3   
   14000989a:	int3   
   14000989b:	int3   
   14000989c:	int3   
   14000989d:	int3   
   14000989e:	int3   
   14000989f:	int3   
   1400098a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400098a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400098aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400098af:	push   rdi
   1400098b0:	sub    rsp,0x50
   1400098b4:	mov    rbp,rcx
   1400098b7:	lea    rcx,[rsp+0x30]
   1400098bc:	mov    rbx,r9
   1400098bf:	mov    rdi,r8
   1400098c2:	mov    rsi,rdx
   1400098c5:	call   0x14000a290
   1400098ca:	mov    eax,DWORD PTR [rsp+0x80]
   1400098d1:	lea    r11,[rsp+0x30]
   1400098d6:	mov    r9,rbx
   1400098d9:	mov    QWORD PTR [rsp+0x28],r11
   1400098de:	mov    r8,rdi
   1400098e1:	mov    rdx,rsi
   1400098e4:	mov    rcx,rbp
   1400098e7:	mov    DWORD PTR [rsp+0x20],eax
   1400098eb:	call   0x1400095b0
   1400098f0:	test   al,al
   1400098f2:	je     0x14000994a
   1400098f4:	lea    rdx,[rip+0x34d45]        # 0x14003e640
   1400098fb:	lea    rcx,[rsp+0x30]
   140009900:	mov    r8d,0x4
   140009906:	call   0x14000a390
   14000990b:	test   al,al
   14000990d:	je     0x14000994a
   14000990f:	lea    rcx,[rsp+0x30]
   140009914:	call   0x14000a420
   140009919:	test   al,al
   14000991b:	je     0x14000994a
   14000991d:	mov    rcx,QWORD PTR [rsp+0x88]
   140009925:	mov    rax,QWORD PTR [rsp+0x30]
   14000992a:	mov    QWORD PTR [rcx],rax
   14000992d:	mov    rcx,QWORD PTR [rsp+0x90]
   140009935:	test   rcx,rcx
   140009938:	je     0x140009946
   14000993a:	mov    rax,QWORD PTR [rsp+0x38]
   14000993f:	add    rax,0xfffffffffffffffc
   140009943:	mov    QWORD PTR [rcx],rax
   140009946:	mov    al,0x1
   140009948:	jmp    0x140009956
   14000994a:	lea    rcx,[rsp+0x30]
   14000994f:	call   0x14000a2a0
   140009954:	xor    al,al
   140009956:	mov    rbx,QWORD PTR [rsp+0x60]
   14000995b:	mov    rbp,QWORD PTR [rsp+0x68]
   140009960:	mov    rsi,QWORD PTR [rsp+0x70]
   140009965:	add    rsp,0x50
   140009969:	pop    rdi
   14000996a:	ret    
   14000996b:	int3   
   14000996c:	int3   
   14000996d:	int3   
   14000996e:	int3   
   14000996f:	int3   
   140009970:	mov    QWORD PTR [rsp+0x8],rbx
   140009975:	mov    QWORD PTR [rsp+0x10],rbp
   14000997a:	mov    QWORD PTR [rsp+0x18],rsi
   14000997f:	push   rdi
   140009980:	sub    rsp,0x50
   140009984:	cmp    BYTE PTR [rip+0x4c777],0x0        # 0x140056102
   14000998b:	mov    rbx,r9
   14000998e:	mov    rdi,r8
   140009991:	mov    rsi,rdx
   140009994:	mov    rbp,rcx
   140009997:	je     0x1400099a3
   140009999:	call   0x14000a930
   14000999e:	jmp    0x140009a49
   1400099a3:	lea    rcx,[rsp+0x30]
   1400099a8:	call   0x14000a290
   1400099ad:	cmp    BYTE PTR [rip+0x4c74e],0x0        # 0x140056102
   1400099b4:	je     0x1400099c8
   1400099b6:	lea    r8,[rsp+0x30]
   1400099bb:	mov    rdx,rsi
   1400099be:	mov    rcx,rbp
   1400099c1:	call   0x14000a750
   1400099c6:	jmp    0x1400099f3
   1400099c8:	lea    rax,[rsp+0x30]
   1400099cd:	lea    r9,[rip+0x34c8c]        # 0x14003e660
   1400099d4:	lea    rcx,[rip+0x34c8d]        # 0x14003e668
   1400099db:	mov    QWORD PTR [rsp+0x28],rax
   1400099e0:	mov    r8,rsi
   1400099e3:	mov    rdx,rbp
   1400099e6:	mov    DWORD PTR [rsp+0x20],0x0
   1400099ee:	call   0x1400095b0
   1400099f3:	test   al,al
   1400099f5:	je     0x140009a3d
   1400099f7:	lea    rdx,[rip+0x34c42]        # 0x14003e640
   1400099fe:	lea    rcx,[rsp+0x30]
   140009a03:	mov    r8d,0x4
   140009a09:	call   0x14000a390
   140009a0e:	test   al,al
   140009a10:	je     0x140009a3d
   140009a12:	lea    rcx,[rsp+0x30]
   140009a17:	call   0x14000a420
   140009a1c:	test   al,al
   140009a1e:	je     0x140009a3d
   140009a20:	mov    rax,QWORD PTR [rsp+0x30]
   140009a25:	mov    QWORD PTR [rdi],rax
   140009a28:	test   rbx,rbx
   140009a2b:	je     0x140009a39
   140009a2d:	mov    rax,QWORD PTR [rsp+0x38]
   140009a32:	add    rax,0xfffffffffffffffc
   140009a36:	mov    QWORD PTR [rbx],rax
   140009a39:	mov    al,0x1
   140009a3b:	jmp    0x140009a49
   140009a3d:	lea    rcx,[rsp+0x30]
   140009a42:	call   0x14000a2a0
   140009a47:	xor    al,al
   140009a49:	mov    rbx,QWORD PTR [rsp+0x60]
   140009a4e:	mov    rbp,QWORD PTR [rsp+0x68]
   140009a53:	mov    rsi,QWORD PTR [rsp+0x70]
   140009a58:	add    rsp,0x50
   140009a5c:	pop    rdi
   140009a5d:	ret    
   140009a5e:	int3   
   140009a5f:	int3   
   140009a60:	mov    QWORD PTR [rsp+0x20],rbx
   140009a65:	push   rbp
   140009a66:	sub    rsp,0x30
   140009a6a:	mov    rbx,rdx
   140009a6d:	mov    rbp,rcx
   140009a70:	cmp    rdx,0x7fffffff
   140009a77:	jbe    0x140009a93
   140009a79:	lea    rdx,[rip+0x34bc8]        # 0x14003e648
   140009a80:	lea    rcx,[rip+0x34951]        # 0x14003e3d8
   140009a87:	mov    r8d,0x691
   140009a8d:	call   0x140001050
   140009a92:	int3   
   140009a93:	test   rdx,rdx
   140009a96:	jne    0x140009aa5
   140009a98:	mov    al,0x1
   140009a9a:	mov    rbx,QWORD PTR [rsp+0x58]
   140009a9f:	add    rsp,0x30
   140009aa3:	pop    rbp
   140009aa4:	ret    
   140009aa5:	cmp    BYTE PTR [rip+0x4c656],0x0        # 0x140056102
   140009aac:	je     0x140009abe
   140009aae:	call   0x14000b710
   140009ab3:	mov    rbx,QWORD PTR [rsp+0x58]
   140009ab8:	add    rsp,0x30
   140009abc:	pop    rbp
   140009abd:	ret    
   140009abe:	mov    QWORD PTR [rsp+0x40],rsi
   140009ac3:	lea    rdx,[rsp+0x48]
   140009ac8:	mov    QWORD PTR [rsp+0x50],rdi
   140009acd:	xor    edi,edi
   140009acf:	mov    rcx,r8
   140009ad2:	mov    DWORD PTR [rsp+0x48],edi
   140009ad6:	call   0x14000dbd0
   140009adb:	mov    rsi,rax
   140009ade:	cmp    DWORD PTR [rsp+0x48],edi
   140009ae2:	je     0x140009afe
   140009ae4:	lea    rdx,[rip+0x34b5d]        # 0x14003e648
   140009aeb:	lea    rcx,[rip+0x348e6]        # 0x14003e3d8
   140009af2:	mov    r8d,0x6a8
   140009af8:	call   0x140001050
   140009afd:	int3   
   140009afe:	lea    rax,[rsp+0x48]
   140009b03:	lea    rdx,[rip+0x5d56]        # 0x14000f860
   140009b0a:	xor    r9d,r9d
   140009b0d:	mov    QWORD PTR [rsp+0x28],rax
   140009b12:	xor    r8d,r8d
   140009b15:	mov    rcx,rsi
   140009b18:	mov    QWORD PTR [rsp+0x20],rdi
   140009b1d:	call   0x14000e250
   140009b22:	cmp    DWORD PTR [rsp+0x48],edi
   140009b26:	je     0x140009b42
   140009b28:	lea    rdx,[rip+0x34b19]        # 0x14003e648
   140009b2f:	lea    rcx,[rip+0x348a2]        # 0x14003e3d8
   140009b36:	mov    r8d,0x6aa
   140009b3c:	call   0x140001050
   140009b41:	int3   
   140009b42:	lea    rax,[rsp+0x48]
   140009b47:	mov    r9,rbp
   140009b4a:	xor    r8d,r8d
   140009b4d:	mov    QWORD PTR [rsp+0x28],rax
   140009b52:	xor    edx,edx
   140009b54:	mov    rcx,rsi
   140009b57:	mov    DWORD PTR [rsp+0x20],ebx
   140009b5b:	call   0x14000f050
   140009b60:	mov    rcx,rsi
   140009b63:	call   0x14000df20
   140009b68:	cmp    DWORD PTR [rsp+0x48],0xf
   140009b6d:	mov    rsi,QWORD PTR [rsp+0x40]
   140009b72:	mov    rdi,QWORD PTR [rsp+0x50]
   140009b77:	mov    rbx,QWORD PTR [rsp+0x58]
   140009b7c:	sete   al
   140009b7f:	add    rsp,0x30
   140009b83:	pop    rbp
   140009b84:	ret    
   140009b85:	int3   
   140009b86:	int3   
   140009b87:	int3   
   140009b88:	int3   
   140009b89:	int3   
   140009b8a:	int3   
   140009b8b:	int3   
   140009b8c:	int3   
   140009b8d:	int3   
   140009b8e:	int3   
   140009b8f:	int3   
   140009b90:	mov    QWORD PTR [rsp+0x8],rbx
   140009b95:	mov    QWORD PTR [rsp+0x10],rbp
   140009b9a:	mov    QWORD PTR [rsp+0x18],rsi
   140009b9f:	push   rdi
   140009ba0:	sub    rsp,0x50
   140009ba4:	cmp    BYTE PTR [rip+0x4c557],0x0        # 0x140056102
   140009bab:	mov    rbx,r9
   140009bae:	mov    rdi,r8
   140009bb1:	mov    rsi,rdx
   140009bb4:	mov    rbp,rcx
   140009bb7:	je     0x140009bc3
   140009bb9:	call   0x14000a9e0
   140009bbe:	jmp    0x140009c4e
   140009bc3:	lea    rcx,[rsp+0x30]
   140009bc8:	call   0x14000a290
   140009bcd:	lea    r11,[rsp+0x30]
   140009bd2:	lea    r9,[rip+0x34a8f]        # 0x14003e668
   140009bd9:	mov    QWORD PTR [rsp+0x28],r11
   140009bde:	lea    rcx,[rip+0x34a7b]        # 0x14003e660
   140009be5:	mov    r8,rsi
   140009be8:	mov    rdx,rbp
   140009beb:	mov    DWORD PTR [rsp+0x20],0x0
   140009bf3:	call   0x1400095b0
   140009bf8:	test   al,al
   140009bfa:	je     0x140009c42
   140009bfc:	lea    rdx,[rip+0x34a3d]        # 0x14003e640
   140009c03:	lea    rcx,[rsp+0x30]
   140009c08:	mov    r8d,0x4
   140009c0e:	call   0x14000a390
   140009c13:	test   al,al
   140009c15:	je     0x140009c42
   140009c17:	lea    rcx,[rsp+0x30]
   140009c1c:	call   0x14000a420
   140009c21:	test   al,al
   140009c23:	je     0x140009c42
   140009c25:	mov    rax,QWORD PTR [rsp+0x30]
   140009c2a:	mov    QWORD PTR [rdi],rax
   140009c2d:	test   rbx,rbx
   140009c30:	je     0x140009c3e
   140009c32:	mov    rax,QWORD PTR [rsp+0x38]
   140009c37:	add    rax,0xfffffffffffffffc
   140009c3b:	mov    QWORD PTR [rbx],rax
   140009c3e:	mov    al,0x1
   140009c40:	jmp    0x140009c4e
   140009c42:	lea    rcx,[rsp+0x30]
   140009c47:	call   0x14000a2a0
   140009c4c:	xor    al,al
   140009c4e:	mov    rbx,QWORD PTR [rsp+0x60]
   140009c53:	mov    rbp,QWORD PTR [rsp+0x68]
   140009c58:	mov    rsi,QWORD PTR [rsp+0x70]
   140009c5d:	add    rsp,0x50
   140009c61:	pop    rdi
   140009c62:	ret    
   140009c63:	int3   
   140009c64:	int3   
   140009c65:	int3   
   140009c66:	int3   
   140009c67:	int3   
   140009c68:	int3   
   140009c69:	int3   
   140009c6a:	int3   
   140009c6b:	int3   
   140009c6c:	int3   
   140009c6d:	int3   
   140009c6e:	int3   
   140009c6f:	int3   
   140009c70:	rex push rbx
   140009c72:	sub    rsp,0x20
   140009c76:	mov    rbx,rcx
   140009c79:	call   0x14002c04c
   140009c7e:	test   rax,rax
   140009c81:	jne    0x140009c95
   140009c83:	test   rbx,rbx
   140009c86:	je     0x140009c95
   140009c88:	lea    rcx,[rip+0x349f9]        # 0x14003e688
   140009c8f:	call   0x140001050
   140009c94:	int3   
   140009c95:	add    rsp,0x20
   140009c99:	pop    rbx
   140009c9a:	ret    
   140009c9b:	int3   
   140009c9c:	int3   
   140009c9d:	int3   
   140009c9e:	int3   
   140009c9f:	int3   
   140009ca0:	rex push rbx
   140009ca2:	sub    rsp,0x20
   140009ca6:	mov    rbx,rdx
   140009ca9:	call   0x14002bf78
   140009cae:	test   rax,rax
   140009cb1:	jne    0x140009cc5
   140009cb3:	test   rbx,rbx
   140009cb6:	je     0x140009cc5
   140009cb8:	lea    rcx,[rip+0x349c9]        # 0x14003e688
   140009cbf:	call   0x140001050
   140009cc4:	int3   
   140009cc5:	add    rsp,0x20
   140009cc9:	pop    rbx
   140009cca:	ret    
   140009ccb:	int3   
   140009ccc:	int3   
   140009ccd:	int3   
   140009cce:	int3   
   140009ccf:	int3   
   140009cd0:	mov    QWORD PTR [rsp+0x8],rbx
   140009cd5:	push   rdi
   140009cd6:	sub    rsp,0x20
   140009cda:	mov    rbx,rdx
   140009cdd:	mov    rdi,rcx
   140009ce0:	call   0x14002df74
   140009ce5:	test   rax,rax
   140009ce8:	jne    0x140009d01
   140009cea:	test   rdi,rdi
   140009ced:	je     0x140009d01
   140009cef:	test   rbx,rbx
   140009cf2:	je     0x140009d01
   140009cf4:	lea    rcx,[rip+0x3498d]        # 0x14003e688
   140009cfb:	call   0x140001050
   140009d00:	int3   
   140009d01:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d06:	add    rsp,0x20
   140009d0a:	pop    rdi
   140009d0b:	ret    
   140009d0c:	int3   
   140009d0d:	int3   
   140009d0e:	int3   
   140009d0f:	int3   
   140009d10:	sub    rsp,0x28
   140009d14:	test   rcx,rcx
   140009d17:	jne    0x140009d20
   140009d19:	xor    eax,eax
   140009d1b:	add    rsp,0x28
   140009d1f:	ret    
   140009d20:	call   0x14002dfb8
   140009d25:	test   rax,rax
   140009d28:	jne    0x140009d1b
   140009d2a:	lea    rcx,[rip+0x34957]        # 0x14003e688
   140009d31:	call   0x140001050
   140009d36:	int3   
   140009d37:	int3   
   140009d38:	int3   
   140009d39:	int3   
   140009d3a:	int3   
   140009d3b:	int3   
   140009d3c:	int3   
   140009d3d:	int3   
   140009d3e:	int3   
   140009d3f:	int3   
   140009d40:	mov    QWORD PTR [rsp+0x10],rsi
   140009d45:	push   rdi
   140009d46:	sub    rsp,0x20
   140009d4a:	mov    rsi,rdx
   140009d4d:	mov    rdi,rcx
   140009d50:	test   rcx,rcx
   140009d53:	jne    0x140009d62
   140009d55:	xor    eax,eax
   140009d57:	mov    rsi,QWORD PTR [rsp+0x38]
   140009d5c:	add    rsp,0x20
   140009d60:	pop    rdi
   140009d61:	ret    
   140009d62:	mov    r8,rdx
   140009d65:	xor    edx,edx
   140009d67:	mov    QWORD PTR [rsp+0x30],rbx
   140009d6c:	call   0x14002bcd4
   140009d71:	mov    rbx,rax
   140009d74:	test   rax,rax
   140009d77:	je     0x140009d7e
   140009d79:	sub    rbx,rdi
   140009d7c:	jmp    0x140009d81
   140009d7e:	mov    rbx,rsi
   140009d81:	lea    rcx,[rbx+0x1]
   140009d85:	cmp    rcx,rbx
   140009d88:	jb     0x140009dbc
   140009d8a:	call   0x14002c04c
   140009d8f:	mov    rsi,rax
   140009d92:	test   rax,rax
   140009d95:	je     0x140009dbc
   140009d97:	mov    r8,rbx
   140009d9a:	mov    rdx,rdi
   140009d9d:	mov    rcx,rax
   140009da0:	mov    BYTE PTR [rax+rbx*1],0x0
   140009da4:	call   0x14002b9a0
   140009da9:	mov    rbx,QWORD PTR [rsp+0x30]
   140009dae:	mov    rax,rsi
   140009db1:	mov    rsi,QWORD PTR [rsp+0x38]
   140009db6:	add    rsp,0x20
   140009dba:	pop    rdi
   140009dbb:	ret    
   140009dbc:	lea    rcx,[rip+0x348c5]        # 0x14003e688
   140009dc3:	call   0x140001050
   140009dc8:	int3   
   140009dc9:	int3   
   140009dca:	int3   
   140009dcb:	int3   
   140009dcc:	int3   
   140009dcd:	int3   
   140009dce:	int3   
   140009dcf:	int3   
   140009dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140009dd5:	mov    QWORD PTR [rsp+0x10],rsi
   140009dda:	push   rdi
   140009ddb:	sub    rsp,0x20
   140009ddf:	mov    rdi,rdx
   140009de2:	mov    edx,DWORD PTR [rcx+0x8]
   140009de5:	xor    ebx,ebx
   140009de7:	mov    rsi,rcx
   140009dea:	test   edx,edx
   140009dec:	je     0x140009e47
   140009dee:	sub    edx,0x1
   140009df1:	je     0x140009e23
   140009df3:	cmp    edx,0x1
   140009df6:	je     0x140009e12
   140009df8:	lea    rdx,[rip+0x348b9]        # 0x14003e6b8
   140009dff:	lea    rcx,[rip+0x347ea]        # 0x14003e5f0
   140009e06:	mov    r8d,0x8e
   140009e0c:	call   0x140001050
   140009e11:	int3   
   140009e12:	mov    rbx,rdi
   140009e15:	shr    rbx,0x20
   140009e19:	xor    ebx,edi
   140009e1b:	imul   ebx,ebx,0xbc8f
   140009e21:	jmp    0x140009e5f
   140009e23:	movzx  ecx,BYTE PTR [rdi]
   140009e26:	call   0x14002e198
   140009e2b:	test   eax,eax
   140009e2d:	je     0x140009e5f
   140009e2f:	nop
   140009e30:	movzx  ecx,BYTE PTR [rdi+0x1]
   140009e34:	inc    rdi
   140009e37:	xor    ebx,eax
   140009e39:	rol    ebx,0x5
   140009e3c:	call   0x14002e198
   140009e41:	test   eax,eax
   140009e43:	jne    0x140009e30
   140009e45:	jmp    0x140009e5f
   140009e47:	movzx  eax,BYTE PTR [rdi]
   140009e4a:	test   eax,eax
   140009e4c:	je     0x140009e5f
   140009e4e:	xchg   ax,ax
   140009e50:	inc    rdi
   140009e53:	xor    ebx,eax
   140009e55:	movzx  eax,BYTE PTR [rdi]
   140009e58:	rol    ebx,0x5
   140009e5b:	test   eax,eax
   140009e5d:	jne    0x140009e50
   140009e5f:	mov    ecx,DWORD PTR [rsi+0x4]
   140009e62:	mov    r8d,0x1
   140009e68:	shl    r8d,cl
   140009e6b:	dec    r8d
   140009e6e:	cmp    ebx,r8d
   140009e71:	jbe    0x140009e85
   140009e73:	mov    edx,ebx
   140009e75:	mov    eax,r8d
   140009e78:	and    eax,ebx
   140009e7a:	shr    edx,cl
   140009e7c:	xor    edx,eax
   140009e7e:	mov    ebx,edx
   140009e80:	cmp    edx,r8d
   140009e83:	ja     0x140009e73
   140009e85:	mov    rsi,QWORD PTR [rsp+0x38]
   140009e8a:	mov    eax,ebx
   140009e8c:	mov    rbx,QWORD PTR [rsp+0x30]
   140009e91:	add    rsp,0x20
   140009e95:	pop    rdi
   140009e96:	ret    
   140009e97:	int3   
   140009e98:	int3   
   140009e99:	int3   
   140009e9a:	int3   
   140009e9b:	int3   
   140009e9c:	int3   
   140009e9d:	int3   
   140009e9e:	int3   
   140009e9f:	int3   
   140009ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140009ea5:	mov    QWORD PTR [rsp+0x18],rbp
   140009eaa:	push   rsi
   140009eab:	sub    rsp,0x20
   140009eaf:	mov    ebx,ecx
   140009eb1:	mov    rbp,r8
   140009eb4:	mov    esi,edx
   140009eb6:	lea    eax,[rbx-0x1]
   140009eb9:	test   ecx,eax
   140009ebb:	je     0x140009ed1
   140009ebd:	lea    rdx,[rip+0x34834]        # 0x14003e6f8
   140009ec4:	lea    rcx,[rip+0x3480d]        # 0x14003e6d8
   140009ecb:	call   0x140001050
   140009ed0:	int3   
   140009ed1:	mov    ecx,0x28
   140009ed6:	mov    QWORD PTR [rsp+0x30],rdi
   140009edb:	call   0x140009c70
   140009ee0:	mov    rdi,rax
   140009ee3:	test   ebx,ebx
   140009ee5:	jne    0x140009eec
   140009ee7:	or     ecx,0xffffffff
   140009eea:	jmp    0x140009eef
   140009eec:	bsf    ecx,ebx
   140009eef:	mov    DWORD PTR [rax+0x4],ecx
   140009ef2:	mov    DWORD PTR [rax],ebx
   140009ef4:	mov    eax,esi
   140009ef6:	and    eax,0x7
   140009ef9:	mov    rcx,rbx
   140009efc:	mov    edx,0x8
   140009f01:	mov    DWORD PTR [rdi+0x8],eax
   140009f04:	mov    eax,esi
   140009f06:	shr    esi,0x4
   140009f09:	shr    eax,0x3
   140009f0c:	and    sil,0x1
   140009f10:	mov    QWORD PTR [rdi+0x10],rbp
   140009f14:	and    al,0x1
   140009f16:	mov    BYTE PTR [rdi+0xd],sil
   140009f1a:	mov    BYTE PTR [rdi+0xc],al
   140009f1d:	call   0x140009cd0
   140009f22:	mov    rbx,QWORD PTR [rsp+0x38]
   140009f27:	mov    rbp,QWORD PTR [rsp+0x40]
   140009f2c:	mov    QWORD PTR [rdi+0x18],rax
   140009f30:	mov    QWORD PTR [rdi+0x20],0x0
   140009f38:	mov    rax,rdi
   140009f3b:	mov    rdi,QWORD PTR [rsp+0x30]
   140009f40:	add    rsp,0x20
   140009f44:	pop    rsi
   140009f45:	ret    
   140009f46:	int3   
   140009f47:	int3   
   140009f48:	int3   
   140009f49:	int3   
   140009f4a:	int3   
   140009f4b:	int3   
   140009f4c:	int3   
   140009f4d:	int3   
   140009f4e:	int3   
   140009f4f:	int3   
   140009f50:	mov    QWORD PTR [rsp+0x20],rbx
   140009f55:	push   rsi
   140009f56:	sub    rsp,0x20
   140009f5a:	xor    esi,esi
   140009f5c:	mov    rbx,rcx
   140009f5f:	mov    QWORD PTR [rcx+0x20],rsi
   140009f63:	cmp    DWORD PTR [rcx],esi
   140009f65:	jbe    0x140009fe6
   140009f67:	mov    QWORD PTR [rsp+0x30],rbp
   140009f6c:	mov    QWORD PTR [rsp+0x38],rdi
   140009f71:	mov    QWORD PTR [rsp+0x40],r12
   140009f76:	mov    rbp,rsi
   140009f79:	nop    DWORD PTR [rax+0x0]
   140009f80:	mov    rax,QWORD PTR [rbx+0x18]
   140009f84:	mov    rdi,QWORD PTR [rax+rbp*1]
   140009f88:	test   rdi,rdi
   140009f8b:	je     0x140009fcd
   140009f8d:	movsxd r12,esi
   140009f90:	mov    rcx,QWORD PTR [rdi]
   140009f93:	mov    rax,QWORD PTR [rbx+0x18]
   140009f97:	mov    QWORD PTR [rax+r12*8],rcx
   140009f9b:	cmp    BYTE PTR [rbx+0xd],0x0
   140009f9f:	je     0x140009faa
   140009fa1:	mov    rcx,QWORD PTR [rdi+0x8]
   140009fa5:	call   0x14002b36c
   140009faa:	cmp    QWORD PTR [rbx+0x10],0x0
   140009faf:	je     0x140009fb8
   140009fb1:	mov    rcx,QWORD PTR [rdi+0x10]
   140009fb5:	call   QWORD PTR [rbx+0x10]
   140009fb8:	mov    rcx,rdi
   140009fbb:	call   0x14002b36c
   140009fc0:	mov    r11,QWORD PTR [rbx+0x18]
   140009fc4:	mov    rdi,QWORD PTR [r11+rbp*1]
   140009fc8:	test   rdi,rdi
   140009fcb:	jne    0x140009f90
   140009fcd:	inc    esi
   140009fcf:	add    rbp,0x8
   140009fd3:	cmp    esi,DWORD PTR [rbx]
   140009fd5:	jb     0x140009f80
   140009fd7:	mov    r12,QWORD PTR [rsp+0x40]
   140009fdc:	mov    rdi,QWORD PTR [rsp+0x38]
   140009fe1:	mov    rbp,QWORD PTR [rsp+0x30]
   140009fe6:	mov    rbx,QWORD PTR [rsp+0x48]
   140009feb:	add    rsp,0x20
   140009fef:	pop    rsi
   140009ff0:	ret    
   140009ff1:	int3   
   140009ff2:	int3   
   140009ff3:	int3   
   140009ff4:	int3   
   140009ff5:	int3   
   140009ff6:	int3   
   140009ff7:	int3   
   140009ff8:	int3   
   140009ff9:	int3   
   140009ffa:	int3   
   140009ffb:	int3   
   140009ffc:	int3   
   140009ffd:	int3   
   140009ffe:	int3   
   140009fff:	int3   
   14000a000:	mov    QWORD PTR [rsp+0x8],rbx
   14000a005:	mov    QWORD PTR [rsp+0x10],rsi
   14000a00a:	push   rdi
   14000a00b:	sub    rsp,0x20
   14000a00f:	mov    rax,QWORD PTR [rcx+0x18]
   14000a013:	mov    r8d,r8d
   14000a016:	mov    rdi,rdx
   14000a019:	mov    rbx,QWORD PTR [rax+r8*8]
   14000a01d:	mov    rsi,rcx
   14000a020:	test   rbx,rbx
   14000a023:	je     0x14000a074
   14000a025:	mov    edx,DWORD PTR [rsi+0x8]
   14000a028:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a02c:	test   edx,edx
   14000a02e:	je     0x14000a046
   14000a030:	cmp    edx,0x1
   14000a033:	je     0x14000a03a
   14000a035:	cmp    rcx,rdi
   14000a038:	jmp    0x14000a065
   14000a03a:	mov    rdx,rdi
   14000a03d:	call   0x14002c9d4
   14000a042:	test   eax,eax
   14000a044:	jmp    0x14000a065
   14000a046:	mov    r8,rdi
   14000a049:	sub    r8,rcx
   14000a04c:	nop    DWORD PTR [rax+0x0]
   14000a050:	movzx  edx,BYTE PTR [rcx]
   14000a053:	movzx  eax,BYTE PTR [rcx+r8*1]
   14000a058:	sub    edx,eax
   14000a05a:	jne    0x14000a063
   14000a05c:	inc    rcx
   14000a05f:	test   eax,eax
   14000a061:	jne    0x14000a050
   14000a063:	test   edx,edx
   14000a065:	sete   al
   14000a068:	test   al,al
   14000a06a:	jne    0x14000a086
   14000a06c:	mov    rbx,QWORD PTR [rbx]
   14000a06f:	test   rbx,rbx
   14000a072:	jne    0x14000a025
   14000a074:	xor    eax,eax
   14000a076:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a07b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a080:	add    rsp,0x20
   14000a084:	pop    rdi
   14000a085:	ret    
   14000a086:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a08b:	mov    rax,rbx
   14000a08e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a093:	add    rsp,0x20
   14000a097:	pop    rdi
   14000a098:	ret    
   14000a099:	int3   
   14000a09a:	int3   
   14000a09b:	int3   
   14000a09c:	int3   
   14000a09d:	int3   
   14000a09e:	int3   
   14000a09f:	int3   
   14000a0a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a0a5:	mov    QWORD PTR [rsp+0x10],rsi
   14000a0aa:	push   rdi
   14000a0ab:	sub    rsp,0x20
   14000a0af:	mov    rsi,r8
   14000a0b2:	mov    rbx,rdx
   14000a0b5:	mov    rdi,rcx
   14000a0b8:	call   0x140009dd0
   14000a0bd:	mov    rdx,rbx
   14000a0c0:	mov    rcx,rdi
   14000a0c3:	mov    r8d,eax
   14000a0c6:	call   0x14000a000
   14000a0cb:	test   rax,rax
   14000a0ce:	jne    0x14000a0e0
   14000a0d0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a0d5:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a0da:	add    rsp,0x20
   14000a0de:	pop    rdi
   14000a0df:	ret    
   14000a0e0:	test   rsi,rsi
   14000a0e3:	je     0x14000a0ec
   14000a0e5:	mov    rax,QWORD PTR [rax+0x10]
   14000a0e9:	mov    QWORD PTR [rsi],rax
   14000a0ec:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a0f1:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a0f6:	mov    al,0x1
   14000a0f8:	add    rsp,0x20
   14000a0fc:	pop    rdi
   14000a0fd:	ret    
   14000a0fe:	int3   
   14000a0ff:	int3   
   14000a100:	mov    QWORD PTR [rsp+0x8],rbx
   14000a105:	mov    QWORD PTR [rsp+0x10],rbp
   14000a10a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a10f:	push   rdi
   14000a110:	push   r12
   14000a112:	push   r13
   14000a114:	push   r14
   14000a116:	push   r15
   14000a118:	sub    rsp,0x20
   14000a11c:	mov    r14,r8
   14000a11f:	mov    rsi,rdx
   14000a122:	mov    rdi,rcx
   14000a125:	call   0x140009dd0
   14000a12a:	xor    ebx,ebx
   14000a12c:	mov    r13d,eax
   14000a12f:	movsxd r15,eax
   14000a132:	mov    rdx,QWORD PTR [rdi+0x18]
   14000a136:	mov    r8d,r13d
   14000a139:	mov    rcx,rdi
   14000a13c:	mov    r12,QWORD PTR [rdx+r15*8]
   14000a140:	mov    rdx,rsi
   14000a143:	call   0x14000a000
   14000a148:	mov    rbp,rax
   14000a14b:	test   rax,rax
   14000a14e:	jne    0x14000a1ac
   14000a150:	test   rbx,rbx
   14000a153:	jne    0x14000a17c
   14000a155:	lea    ecx,[rax+0x18]
   14000a158:	call   0x140009c70
   14000a15d:	mov    rbx,rax
   14000a160:	cmp    BYTE PTR [rdi+0xd],bpl
   14000a164:	je     0x14000a174
   14000a166:	mov    rcx,rsi
   14000a169:	call   0x140009d10
   14000a16e:	mov    QWORD PTR [rbx+0x8],rax
   14000a172:	jmp    0x14000a178
   14000a174:	mov    QWORD PTR [rax+0x8],rsi
   14000a178:	mov    QWORD PTR [rbx+0x10],r14
   14000a17c:	mov    QWORD PTR [rbx],r12
   14000a17f:	cmp    BYTE PTR [rdi+0xc],0x0
   14000a183:	je     0x14000a19c
   14000a185:	mov    rcx,QWORD PTR [rdi+0x18]
   14000a189:	mov    rax,r12
   14000a18c:	lock cmpxchg QWORD PTR [rcx+r13*8],rbx
   14000a192:	jne    0x14000a132
   14000a194:	inc    QWORD PTR [rdi+0x20]
   14000a198:	xor    eax,eax
   14000a19a:	jmp    0x14000a1cb
   14000a19c:	mov    rax,QWORD PTR [rdi+0x18]
   14000a1a0:	mov    QWORD PTR [rax+r13*8],rbx
   14000a1a4:	inc    QWORD PTR [rdi+0x20]
   14000a1a8:	xor    eax,eax
   14000a1aa:	jmp    0x14000a1cb
   14000a1ac:	test   rbx,rbx
   14000a1af:	je     0x14000a1c8
   14000a1b1:	cmp    BYTE PTR [rdi+0xd],0x0
   14000a1b5:	je     0x14000a1c0
   14000a1b7:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a1bb:	call   0x14002b36c
   14000a1c0:	mov    rcx,rbx
   14000a1c3:	call   0x14002b36c
   14000a1c8:	mov    rax,rbp
   14000a1cb:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a1d0:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a1d5:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a1da:	add    rsp,0x20
   14000a1de:	pop    r15
   14000a1e0:	pop    r14
   14000a1e2:	pop    r13
   14000a1e4:	pop    r12
   14000a1e6:	pop    rdi
   14000a1e7:	ret    
   14000a1e8:	int3   
   14000a1e9:	int3   
   14000a1ea:	int3   
   14000a1eb:	int3   
   14000a1ec:	int3   
   14000a1ed:	int3   
   14000a1ee:	int3   
   14000a1ef:	int3   
   14000a1f0:	rex push rdi
   14000a1f2:	sub    rsp,0x20
   14000a1f6:	mov    rax,QWORD PTR [rcx]
   14000a1f9:	mov    r10d,r8d
   14000a1fc:	mov    r11d,edx
   14000a1ff:	mov    rdi,rcx
   14000a202:	test   rax,rax
   14000a205:	jne    0x14000a25d
   14000a207:	mov    r8,r9
   14000a20a:	mov    edx,r10d
   14000a20d:	mov    ecx,r11d
   14000a210:	mov    QWORD PTR [rsp+0x30],rbx
   14000a215:	call   0x140009ea0
   14000a21a:	mov    rbx,rax
   14000a21d:	xor    eax,eax
   14000a21f:	lock cmpxchg QWORD PTR [rdi],rbx
   14000a224:	mov    rdi,rax
   14000a227:	jne    0x14000a237
   14000a229:	mov    rax,rbx
   14000a22c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a231:	add    rsp,0x20
   14000a235:	pop    rdi
   14000a236:	ret    
   14000a237:	test   rbx,rbx
   14000a23a:	je     0x14000a258
   14000a23c:	mov    rcx,rbx
   14000a23f:	call   0x140009f50
   14000a244:	mov    rcx,QWORD PTR [rbx+0x18]
   14000a248:	call   0x14002b36c
   14000a24d:	mov    rcx,rbx
   14000a250:	call   0x14002b36c
   14000a255:	mov    rax,rdi
   14000a258:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a25d:	add    rsp,0x20
   14000a261:	pop    rdi
   14000a262:	ret    
   14000a263:	int3   
   14000a264:	int3   
   14000a265:	int3   
   14000a266:	int3   
   14000a267:	int3   
   14000a268:	int3   
   14000a269:	int3   
   14000a26a:	int3   
   14000a26b:	int3   
   14000a26c:	int3   
   14000a26d:	int3   
   14000a26e:	int3   
   14000a26f:	int3   
   14000a270:	sub    rsp,0x28
   14000a274:	call   0x14000a100
   14000a279:	test   rax,rax
   14000a27c:	sete   al
   14000a27f:	add    rsp,0x28
   14000a283:	ret    
   14000a284:	int3   
   14000a285:	int3   
   14000a286:	int3   
   14000a287:	int3   
   14000a288:	int3   
   14000a289:	int3   
   14000a28a:	int3   
   14000a28b:	int3   
   14000a28c:	int3   
   14000a28d:	int3   
   14000a28e:	int3   
   14000a28f:	int3   
   14000a290:	xor    eax,eax
   14000a292:	mov    QWORD PTR [rcx],rax
   14000a295:	mov    QWORD PTR [rcx+0x8],rax
   14000a299:	mov    QWORD PTR [rcx+0x10],rax
   14000a29d:	ret    
   14000a29e:	int3   
   14000a29f:	int3   
   14000a2a0:	rex push rbx
   14000a2a2:	sub    rsp,0x20
   14000a2a6:	mov    rbx,rcx
   14000a2a9:	mov    rcx,QWORD PTR [rcx]
   14000a2ac:	call   0x14002b36c
   14000a2b1:	xor    r11d,r11d
   14000a2b4:	mov    QWORD PTR [rbx],r11
   14000a2b7:	mov    QWORD PTR [rbx+0x8],r11
   14000a2bb:	mov    QWORD PTR [rbx+0x10],r11
   14000a2bf:	add    rsp,0x20
   14000a2c3:	pop    rbx
   14000a2c4:	ret    
   14000a2c5:	int3   
   14000a2c6:	int3   
   14000a2c7:	int3   
   14000a2c8:	int3   
   14000a2c9:	int3   
   14000a2ca:	int3   
   14000a2cb:	int3   
   14000a2cc:	int3   
   14000a2cd:	int3   
   14000a2ce:	int3   
   14000a2cf:	int3   
   14000a2d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a2d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000a2da:	push   rdi
   14000a2db:	sub    rsp,0x20
   14000a2df:	mov    rdi,rcx
   14000a2e2:	mov    rcx,QWORD PTR [rcx]
   14000a2e5:	mov    rbx,r8
   14000a2e8:	mov    rsi,rdx
   14000a2eb:	call   0x14002b36c
   14000a2f0:	mov    QWORD PTR [rdi],rbx
   14000a2f3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a2f8:	mov    QWORD PTR [rdi+0x10],rsi
   14000a2fc:	mov    QWORD PTR [rdi+0x8],rsi
   14000a300:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a305:	add    rsp,0x20
   14000a309:	pop    rdi
   14000a30a:	ret    
   14000a30b:	int3   
   14000a30c:	int3   
   14000a30d:	int3   
   14000a30e:	int3   
   14000a30f:	int3   
   14000a310:	mov    QWORD PTR [rsp+0x8],rbx
   14000a315:	push   rdi
   14000a316:	sub    rsp,0x20
   14000a31a:	mov    rax,QWORD PTR [rcx+0x10]
   14000a31e:	mov    rdi,rcx
   14000a321:	test   rax,rax
   14000a324:	je     0x14000a33d
   14000a326:	cmp    rax,0x40000
   14000a32c:	jae    0x14000a334
   14000a32e:	lea    rbx,[rax+rax*1]
   14000a332:	jmp    0x14000a342
   14000a334:	lea    rbx,[rax+0x40000]
   14000a33b:	jmp    0x14000a342
   14000a33d:	mov    ebx,0x400
   14000a342:	cmp    rdx,rbx
   14000a345:	cmova  rbx,rdx
   14000a349:	cmp    rbx,rax
   14000a34c:	jb     0x14000a363
   14000a34e:	mov    rcx,QWORD PTR [rcx]
   14000a351:	mov    rdx,rbx
   14000a354:	call   0x14002bf78
   14000a359:	test   rax,rax
   14000a35c:	jne    0x14000a370
   14000a35e:	test   rbx,rbx
   14000a361:	je     0x14000a370
   14000a363:	xor    al,al
   14000a365:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a36a:	add    rsp,0x20
   14000a36e:	pop    rdi
   14000a36f:	ret    
   14000a370:	mov    QWORD PTR [rdi],rax
   14000a373:	mov    QWORD PTR [rdi+0x10],rbx
   14000a377:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a37c:	mov    al,0x1
   14000a37e:	add    rsp,0x20
   14000a382:	pop    rdi
   14000a383:	ret    
   14000a384:	int3   
   14000a385:	int3   
   14000a386:	int3   
   14000a387:	int3   
   14000a388:	int3   
   14000a389:	int3   
   14000a38a:	int3   
   14000a38b:	int3   
   14000a38c:	int3   
   14000a38d:	int3   
   14000a38e:	int3   
   14000a38f:	int3   
   14000a390:	mov    QWORD PTR [rsp+0x10],rbx
   14000a395:	mov    QWORD PTR [rsp+0x18],rbp
   14000a39a:	push   rsi
   14000a39b:	sub    rsp,0x20
   14000a39f:	mov    rsi,r8
   14000a3a2:	mov    rbp,rdx
   14000a3a5:	mov    rbx,rcx
   14000a3a8:	test   r8,r8
   14000a3ab:	jne    0x14000a3bf
   14000a3ad:	mov    al,0x1
   14000a3af:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a3b4:	mov    rbp,QWORD PTR [rsp+0x40]
   14000a3b9:	add    rsp,0x20
   14000a3bd:	pop    rsi
   14000a3be:	ret    
   14000a3bf:	mov    rax,QWORD PTR [rcx+0x8]
   14000a3c3:	mov    QWORD PTR [rsp+0x30],rdi
   14000a3c8:	lea    rdi,[rax+r8*1]
   14000a3cc:	cmp    rdi,rax
   14000a3cf:	jb     0x14000a3e3
   14000a3d1:	cmp    rdi,QWORD PTR [rcx+0x10]
   14000a3d5:	jbe    0x14000a3e7
   14000a3d7:	mov    rdx,rdi
   14000a3da:	call   0x14000a310
   14000a3df:	test   al,al
   14000a3e1:	jne    0x14000a3e7
   14000a3e3:	xor    al,al
   14000a3e5:	jmp    0x14000a3ff
   14000a3e7:	mov    rcx,QWORD PTR [rbx]
   14000a3ea:	mov    r8,rsi
   14000a3ed:	mov    rdx,rbp
   14000a3f0:	add    rcx,QWORD PTR [rbx+0x8]
   14000a3f4:	call   0x14002b9a0
   14000a3f9:	mov    QWORD PTR [rbx+0x8],rdi
   14000a3fd:	mov    al,0x1
   14000a3ff:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a404:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a409:	mov    rbp,QWORD PTR [rsp+0x40]
   14000a40e:	add    rsp,0x20
   14000a412:	pop    rsi
   14000a413:	ret    
   14000a414:	int3   
   14000a415:	int3   
   14000a416:	int3   
   14000a417:	int3   
   14000a418:	int3   
   14000a419:	int3   
   14000a41a:	int3   
   14000a41b:	int3   
   14000a41c:	int3   
   14000a41d:	int3   
   14000a41e:	int3   
   14000a41f:	int3   
   14000a420:	mov    QWORD PTR [rsp+0x8],rbx
   14000a425:	push   rdi
   14000a426:	sub    rsp,0x20
   14000a42a:	mov    rbx,QWORD PTR [rcx+0x8]
   14000a42e:	mov    rdi,rcx
   14000a431:	mov    rcx,QWORD PTR [rcx]
   14000a434:	mov    rdx,rbx
   14000a437:	call   0x14002bf78
   14000a43c:	test   rax,rax
   14000a43f:	jne    0x14000a451
   14000a441:	test   rbx,rbx
   14000a444:	je     0x14000a451
   14000a446:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a44b:	add    rsp,0x20
   14000a44f:	pop    rdi
   14000a450:	ret    
   14000a451:	mov    QWORD PTR [rdi],rax
   14000a454:	mov    QWORD PTR [rdi+0x10],rbx
   14000a458:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a45d:	mov    al,0x1
   14000a45f:	add    rsp,0x20
   14000a463:	pop    rdi
   14000a464:	ret    
   14000a465:	int3   
   14000a466:	int3   
   14000a467:	int3   
   14000a468:	int3   
   14000a469:	int3   
   14000a46a:	int3   
   14000a46b:	int3   
   14000a46c:	int3   
   14000a46d:	int3   
   14000a46e:	int3   
   14000a46f:	int3   
   14000a470:	mov    QWORD PTR [rsp+0x10],rbx
   14000a475:	mov    QWORD PTR [rsp+0x18],rbp
   14000a47a:	mov    QWORD PTR [rsp+0x20],rsi
   14000a47f:	push   rdi
   14000a480:	push   r12
   14000a482:	push   r13
   14000a484:	push   r14
   14000a486:	push   r15
   14000a488:	sub    rsp,0x20
   14000a48c:	mov    rdi,QWORD PTR [r8+0x8]
   14000a490:	mov    rax,QWORD PTR [r8]
   14000a493:	mov    r13,QWORD PTR [r8+0x10]
   14000a497:	lea    r14,[rdx+rcx*1]
   14000a49b:	lea    rsi,[rdi+rax*1]
   14000a49f:	mov    r12,r8
   14000a4a2:	mov    rbp,rcx
   14000a4a5:	cmp    rcx,r14
   14000a4a8:	jae    0x14000a57c
   14000a4ae:	mov    r15d,0x2800
   14000a4b4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a4c0:	lea    r8,[rsp+0x50]
   14000a4c5:	mov    rdx,r14
   14000a4c8:	mov    rcx,rbp
   14000a4cb:	call   0x14000b7a0
   14000a4d0:	test   eax,eax
   14000a4d2:	jle    0x14000a5a0
   14000a4d8:	cdqe   
   14000a4da:	add    rbp,rax
   14000a4dd:	mov    eax,DWORD PTR [rsp+0x50]
   14000a4e1:	cmp    eax,0xd800
   14000a4e6:	jb     0x14000a4f3
   14000a4e8:	cmp    eax,0xe000
   14000a4ed:	jb     0x14000a5a0
   14000a4f3:	cmp    eax,0x10000
   14000a4f8:	jae    0x14000a500
   14000a4fa:	lea    rbx,[rdi+0x2]
   14000a4fe:	jmp    0x14000a50f
   14000a500:	cmp    eax,0x110000
   14000a505:	jae    0x14000a5a0
   14000a50b:	lea    rbx,[rdi+0x4]
   14000a50f:	cmp    r13,rbx
   14000a512:	jae    0x14000a534
   14000a514:	mov    rdx,rbx
   14000a517:	mov    rcx,r12
   14000a51a:	call   0x14000a310
   14000a51f:	test   al,al
   14000a521:	je     0x14000a5a0
   14000a523:	mov    rax,QWORD PTR [r12]
   14000a527:	mov    r13,QWORD PTR [r12+0x10]
   14000a52c:	lea    rsi,[rdi+rax*1]
   14000a530:	mov    eax,DWORD PTR [rsp+0x50]
   14000a534:	cmp    eax,0x10000
   14000a539:	jae    0x14000a544
   14000a53b:	mov    WORD PTR [rsi],ax
   14000a53e:	add    rsi,0x2
   14000a542:	jmp    0x14000a570
   14000a544:	add    eax,0xffff0000
   14000a549:	mov    ecx,0x3ff
   14000a54e:	shr    eax,0xa
   14000a551:	sub    ax,r15w
   14000a555:	mov    WORD PTR [rsi],ax
   14000a558:	movzx  eax,WORD PTR [rsp+0x50]
   14000a55d:	and    ax,cx
   14000a560:	mov    ecx,0x2400
   14000a565:	sub    ax,cx
   14000a568:	add    rsi,0x4
   14000a56c:	mov    WORD PTR [rsi-0x2],ax
   14000a570:	mov    rdi,rbx
   14000a573:	cmp    rbp,r14
   14000a576:	jb     0x14000a4c0
   14000a57c:	mov    QWORD PTR [r12+0x8],rdi
   14000a581:	mov    al,0x1
   14000a583:	mov    rbx,QWORD PTR [rsp+0x58]
   14000a588:	mov    rbp,QWORD PTR [rsp+0x60]
   14000a58d:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a592:	add    rsp,0x20
   14000a596:	pop    r15
   14000a598:	pop    r14
   14000a59a:	pop    r13
   14000a59c:	pop    r12
   14000a59e:	pop    rdi
   14000a59f:	ret    
   14000a5a0:	xor    al,al
   14000a5a2:	jmp    0x14000a583
   14000a5a4:	int3   
   14000a5a5:	int3   
   14000a5a6:	int3   
   14000a5a7:	int3   
   14000a5a8:	int3   
   14000a5a9:	int3   
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	int3   
   14000a5ad:	int3   
   14000a5ae:	int3   
   14000a5af:	int3   
   14000a5b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a5b5:	mov    QWORD PTR [rsp+0x18],rbp
   14000a5ba:	mov    QWORD PTR [rsp+0x20],rsi
   14000a5bf:	push   rdi
   14000a5c0:	push   r12
   14000a5c2:	push   r13
   14000a5c4:	sub    rsp,0x60
   14000a5c8:	mov    r12,rcx
   14000a5cb:	lea    rcx,[rsp+0x40]
   14000a5d0:	mov    rsi,r9
   14000a5d3:	mov    rbp,r8
   14000a5d6:	mov    rbx,rdx
   14000a5d9:	call   0x14000a290
   14000a5de:	test   rbx,rbx
   14000a5e1:	je     0x14000a6ae
   14000a5e7:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a5ec:	xor    r13d,r13d
   14000a5ef:	lea    rcx,[rsp+0x40]
   14000a5f4:	lea    edx,[r13+0x1]
   14000a5f8:	mov    DWORD PTR [rsp+0x88],r13d
   14000a600:	call   0x14000a310
   14000a605:	test   al,al
   14000a607:	je     0x14000a67e
   14000a609:	shr    rbx,1
   14000a60c:	nop    DWORD PTR [rax+0x0]
   14000a610:	mov    edx,DWORD PTR [rsp+0x50]
   14000a614:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a619:	lea    rax,[rsp+0x88]
   14000a621:	mov    QWORD PTR [rsp+0x38],rax
   14000a626:	sub    edx,edi
   14000a628:	add    rcx,rdi
   14000a62b:	mov    QWORD PTR [rsp+0x30],r13
   14000a630:	mov    DWORD PTR [rsp+0x28],edx
   14000a634:	mov    QWORD PTR [rsp+0x20],rcx
   14000a639:	xor    ecx,ecx
   14000a63b:	mov    r9d,ebx
   14000a63e:	mov    r8,r12
   14000a641:	mov    edx,0x400
   14000a646:	call   QWORD PTR [rip+0x32a4c]        # 0x14003d098
   14000a64c:	cmp    DWORD PTR [rsp+0x88],r13d
   14000a654:	jne    0x14000a67e
   14000a656:	test   eax,eax
   14000a658:	jg     0x14000a6a4
   14000a65a:	call   QWORD PTR [rip+0x32cd8]        # 0x14003d338
   14000a660:	cmp    eax,0x7a
   14000a663:	jne    0x14000a67e
   14000a665:	lea    edx,[rax-0x79]
   14000a668:	lea    rcx,[rsp+0x40]
   14000a66d:	mov    DWORD PTR [rsp+0x88],r13d
   14000a675:	call   0x14000a310
   14000a67a:	test   al,al
   14000a67c:	jne    0x14000a610
   14000a67e:	lea    rcx,[rsp+0x40]
   14000a683:	call   0x14000a2a0
   14000a688:	xor    al,al
   14000a68a:	lea    r11,[rsp+0x60]
   14000a68f:	mov    rbx,QWORD PTR [r11+0x20]
   14000a693:	mov    rbp,QWORD PTR [r11+0x30]
   14000a697:	mov    rsi,QWORD PTR [r11+0x38]
   14000a69b:	mov    rsp,r11
   14000a69e:	pop    r13
   14000a6a0:	pop    r12
   14000a6a2:	pop    rdi
   14000a6a3:	ret    
   14000a6a4:	cdqe   
   14000a6a6:	add    rax,rdi
   14000a6a9:	mov    QWORD PTR [rsp+0x48],rax
   14000a6ae:	lea    rdx,[rip+0x34053]        # 0x14003e708
   14000a6b5:	lea    rcx,[rsp+0x40]
   14000a6ba:	mov    r8d,0x2
   14000a6c0:	call   0x14000a390
   14000a6c5:	test   al,al
   14000a6c7:	je     0x14000a67e
   14000a6c9:	lea    rcx,[rsp+0x40]
   14000a6ce:	call   0x14000a420
   14000a6d3:	test   al,al
   14000a6d5:	je     0x14000a67e
   14000a6d7:	mov    rax,QWORD PTR [rsp+0x40]
   14000a6dc:	mov    QWORD PTR [rbp+0x0],rax
   14000a6e0:	test   rsi,rsi
   14000a6e3:	je     0x14000a6f1
   14000a6e5:	mov    rax,QWORD PTR [rsp+0x48]
   14000a6ea:	add    rax,0xfffffffffffffffe
   14000a6ee:	mov    QWORD PTR [rsi],rax
   14000a6f1:	mov    al,0x1
   14000a6f3:	jmp    0x14000a68a
   14000a6f5:	int3   
   14000a6f6:	int3   
   14000a6f7:	int3   
   14000a6f8:	int3   
   14000a6f9:	int3   
   14000a6fa:	int3   
   14000a6fb:	int3   
   14000a6fc:	int3   
   14000a6fd:	int3   
   14000a6fe:	int3   
   14000a6ff:	int3   
   14000a700:	rex push rbx
   14000a702:	sub    rsp,0x20
   14000a706:	cmp    BYTE PTR [rip+0x5dbfb],0x0        # 0x140068308
   14000a70d:	jne    0x14000a73c
   14000a70f:	call   QWORD PTR [rip+0x3298b]        # 0x14003d0a0
   14000a715:	lea    rbx,[rip+0x5dbec]        # 0x140068308
   14000a71c:	lea    r8,[rip+0x33fed]        # 0x14003e710
   14000a723:	mov    rcx,rbx
   14000a726:	mov    edx,0x14
   14000a72b:	mov    r9d,eax
   14000a72e:	call   0x140002850
   14000a733:	mov    rax,rbx
   14000a736:	add    rsp,0x20
   14000a73a:	pop    rbx
   14000a73b:	ret    
   14000a73c:	lea    rax,[rip+0x5dbc5]        # 0x140068308
   14000a743:	add    rsp,0x20
   14000a747:	pop    rbx
   14000a748:	ret    
   14000a749:	int3   
   14000a74a:	int3   
   14000a74b:	int3   
   14000a74c:	int3   
   14000a74d:	int3   
   14000a74e:	int3   
   14000a74f:	int3   
   14000a750:	push   r12
   14000a752:	push   r13
   14000a754:	push   r14
   14000a756:	sub    rsp,0x30
   14000a75a:	mov    r12,r8
   14000a75d:	mov    r13,rdx
   14000a760:	mov    r14,rcx
   14000a763:	test   dl,0x1
   14000a766:	je     0x14000a775
   14000a768:	xor    al,al
   14000a76a:	add    rsp,0x30
   14000a76e:	pop    r14
   14000a770:	pop    r13
   14000a772:	pop    r12
   14000a774:	ret    
   14000a775:	shr    r13,1
   14000a778:	mov    QWORD PTR [rsp+0x50],rbx
   14000a77d:	mov    QWORD PTR [rsp+0x58],rbp
   14000a782:	mov    QWORD PTR [rsp+0x60],rsi
   14000a787:	mov    QWORD PTR [rsp+0x28],rdi
   14000a78c:	mov    QWORD PTR [rsp+0x20],r15
   14000a791:	mov    esi,0x0
   14000a796:	je     0x14000a8fe
   14000a79c:	mov    eax,0xdfff
   14000a7a1:	mov    r15d,0xd800
   14000a7a7:	mov    r8d,0xdbff
   14000a7ad:	mov    r9d,0x2400
   14000a7b3:	mov    r10d,0x3ff
   14000a7b9:	nop    DWORD PTR [rax+0x0]
   14000a7c0:	movzx  ecx,WORD PTR [r14+rsi*2]
   14000a7c5:	cmp    cx,r15w
   14000a7c9:	jb     0x14000a80b
   14000a7cb:	cmp    cx,ax
   14000a7ce:	ja     0x14000a80b
   14000a7d0:	inc    rsi
   14000a7d3:	cmp    rsi,r13
   14000a7d6:	je     0x14000a8fa
   14000a7dc:	movzx  edx,WORD PTR [r14+rsi*2]
   14000a7e1:	cmp    cx,r8w
   14000a7e5:	ja     0x14000a8fa
   14000a7eb:	lea    eax,[r9+rdx*1]
   14000a7ef:	cmp    ax,r10w
   14000a7f3:	ja     0x14000a8fa
   14000a7f9:	movzx  ecx,cx
   14000a7fc:	movzx  eax,dx
   14000a7ff:	shl    ecx,0xa
   14000a802:	lea    ebx,[rcx+rax*1-0x35fdc00]
   14000a809:	jmp    0x14000a80e
   14000a80b:	movzx  ebx,cx
   14000a80e:	mov    rdi,QWORD PTR [r12+0x8]
   14000a813:	lea    rbp,[rdi+0x4]
   14000a817:	cmp    rbp,rdi
   14000a81a:	jb     0x14000a8fa
   14000a820:	cmp    QWORD PTR [r12+0x10],rbp
   14000a825:	jae    0x14000a84c
   14000a827:	mov    rdx,rbp
   14000a82a:	mov    rcx,r12
   14000a82d:	call   0x14000a310
   14000a832:	test   al,al
   14000a834:	je     0x14000a8fa
   14000a83a:	mov    r8d,0xdbff
   14000a840:	mov    r9d,0x2400
   14000a846:	mov    r10d,0x3ff
   14000a84c:	mov    rcx,QWORD PTR [r12]
   14000a850:	cmp    ebx,0x7f
   14000a853:	ja     0x14000a860
   14000a855:	mov    BYTE PTR [rdi+rcx*1],bl
   14000a858:	inc    rdi
   14000a85b:	jmp    0x14000a8e3
   14000a860:	cmp    ebx,0x7ff
   14000a866:	ja     0x14000a883
   14000a868:	mov    eax,ebx
   14000a86a:	and    bl,0x3f
   14000a86d:	shr    eax,0x6
   14000a870:	or     bl,0x80
   14000a873:	or     al,0xc0
   14000a875:	mov    BYTE PTR [rdi+rcx*1+0x1],bl
   14000a879:	add    rdi,0x2
   14000a87d:	mov    BYTE PTR [rdi+rcx*1-0x2],al
   14000a881:	jmp    0x14000a8e3
   14000a883:	cmp    ebx,0xffff
   14000a889:	ja     0x14000a8b2
   14000a88b:	mov    eax,ebx
   14000a88d:	shr    eax,0xc
   14000a890:	or     al,0xe0
   14000a892:	mov    BYTE PTR [rdi+rcx*1],al
   14000a895:	mov    eax,ebx
   14000a897:	and    bl,0x3f
   14000a89a:	shr    eax,0x6
   14000a89d:	or     bl,0x80
   14000a8a0:	and    al,0x3f
   14000a8a2:	mov    BYTE PTR [rdi+rcx*1+0x2],bl
   14000a8a6:	or     al,0x80
   14000a8a8:	add    rdi,0x3
   14000a8ac:	mov    BYTE PTR [rdi+rcx*1-0x2],al
   14000a8b0:	jmp    0x14000a8e3
   14000a8b2:	mov    eax,ebx
   14000a8b4:	shr    eax,0x12
   14000a8b7:	or     al,0xf0
   14000a8b9:	mov    BYTE PTR [rdi+rcx*1],al
   14000a8bc:	mov    eax,ebx
   14000a8be:	shr    eax,0xc
   14000a8c1:	and    al,0x3f
   14000a8c3:	or     al,0x80
   14000a8c5:	mov    BYTE PTR [rdi+rcx*1+0x1],al
   14000a8c9:	mov    eax,ebx
   14000a8cb:	and    bl,0x3f
   14000a8ce:	shr    eax,0x6
   14000a8d1:	and    al,0x3f
   14000a8d3:	or     al,0x80
   14000a8d5:	or     bl,0x80
   14000a8d8:	mov    BYTE PTR [rdi+rcx*1+0x3],bl
   14000a8dc:	mov    BYTE PTR [rdi+rcx*1+0x2],al
   14000a8e0:	mov    rdi,rbp
   14000a8e3:	inc    rsi
   14000a8e6:	mov    QWORD PTR [r12+0x8],rdi
   14000a8eb:	cmp    rsi,r13
   14000a8ee:	jae    0x14000a8fe
   14000a8f0:	mov    eax,0xdfff
   14000a8f5:	jmp    0x14000a7c0
   14000a8fa:	xor    al,al
   14000a8fc:	jmp    0x14000a900
   14000a8fe:	mov    al,0x1
   14000a900:	mov    rdi,QWORD PTR [rsp+0x28]
   14000a905:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a90a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a90f:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a914:	mov    r15,QWORD PTR [rsp+0x20]
   14000a919:	add    rsp,0x30
   14000a91d:	pop    r14
   14000a91f:	pop    r13
   14000a921:	pop    r12
   14000a923:	ret    
   14000a924:	int3   
   14000a925:	int3   
   14000a926:	int3   
   14000a927:	int3   
   14000a928:	int3   
   14000a929:	int3   
   14000a92a:	int3   
   14000a92b:	int3   
   14000a92c:	int3   
   14000a92d:	int3   
   14000a92e:	int3   
   14000a92f:	int3   
   14000a930:	mov    QWORD PTR [rsp+0x8],rbx
   14000a935:	mov    QWORD PTR [rsp+0x10],rbp
   14000a93a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a93f:	push   rdi
   14000a940:	sub    rsp,0x40
   14000a944:	mov    rdi,rcx
   14000a947:	lea    rcx,[rsp+0x20]
   14000a94c:	mov    rsi,r9
   14000a94f:	mov    rbp,r8
   14000a952:	mov    rbx,rdx
   14000a955:	call   0x14000a290
   14000a95a:	lea    r8,[rsp+0x20]
   14000a95f:	mov    rdx,rbx
   14000a962:	mov    rcx,rdi
   14000a965:	call   0x14000a750
   14000a96a:	test   al,al
   14000a96c:	je     0x14000a9b5
   14000a96e:	lea    rdx,[rip+0x33d93]        # 0x14003e708
   14000a975:	lea    rcx,[rsp+0x20]
   14000a97a:	mov    r8d,0x2
   14000a980:	call   0x14000a390
   14000a985:	test   al,al
   14000a987:	je     0x14000a9b5
   14000a989:	lea    rcx,[rsp+0x20]
   14000a98e:	call   0x14000a420
   14000a993:	test   al,al
   14000a995:	je     0x14000a9b5
   14000a997:	mov    rax,QWORD PTR [rsp+0x20]
   14000a99c:	mov    QWORD PTR [rbp+0x0],rax
   14000a9a0:	test   rsi,rsi
   14000a9a3:	je     0x14000a9b1
   14000a9a5:	mov    rax,QWORD PTR [rsp+0x28]
   14000a9aa:	add    rax,0xfffffffffffffffe
   14000a9ae:	mov    QWORD PTR [rsi],rax
   14000a9b1:	mov    al,0x1
   14000a9b3:	jmp    0x14000a9c1
   14000a9b5:	lea    rcx,[rsp+0x20]
   14000a9ba:	call   0x14000a2a0
   14000a9bf:	xor    al,al
   14000a9c1:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a9c6:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a9cb:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a9d0:	add    rsp,0x40
   14000a9d4:	pop    rdi
   14000a9d5:	ret    
   14000a9d6:	int3   
   14000a9d7:	int3   
   14000a9d8:	int3   
   14000a9d9:	int3   
   14000a9da:	int3   
   14000a9db:	int3   
   14000a9dc:	int3   
   14000a9dd:	int3   
   14000a9de:	int3   
   14000a9df:	int3   
   14000a9e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a9e5:	mov    QWORD PTR [rsp+0x10],rbp
   14000a9ea:	mov    QWORD PTR [rsp+0x18],rsi
   14000a9ef:	push   rdi
   14000a9f0:	sub    rsp,0x40
   14000a9f4:	mov    rdi,rcx
   14000a9f7:	lea    rcx,[rsp+0x20]
   14000a9fc:	mov    rsi,r9
   14000a9ff:	mov    rbp,r8
   14000aa02:	mov    rbx,rdx
   14000aa05:	call   0x14000a290
   14000aa0a:	lea    r8,[rsp+0x20]
   14000aa0f:	mov    rdx,rbx
   14000aa12:	mov    rcx,rdi
   14000aa15:	call   0x14000a470
   14000aa1a:	test   al,al
   14000aa1c:	je     0x14000aa65
   14000aa1e:	lea    rdx,[rip+0x33ce3]        # 0x14003e708
   14000aa25:	lea    rcx,[rsp+0x20]
   14000aa2a:	mov    r8d,0x2
   14000aa30:	call   0x14000a390
   14000aa35:	test   al,al
   14000aa37:	je     0x14000aa65
   14000aa39:	lea    rcx,[rsp+0x20]
   14000aa3e:	call   0x14000a420
   14000aa43:	test   al,al
   14000aa45:	je     0x14000aa65
   14000aa47:	mov    rax,QWORD PTR [rsp+0x20]
   14000aa4c:	mov    QWORD PTR [rbp+0x0],rax
   14000aa50:	test   rsi,rsi
   14000aa53:	je     0x14000aa61
   14000aa55:	mov    rax,QWORD PTR [rsp+0x28]
   14000aa5a:	add    rax,0xfffffffffffffffe
   14000aa5e:	mov    QWORD PTR [rsi],rax
   14000aa61:	mov    al,0x1
   14000aa63:	jmp    0x14000aa71
   14000aa65:	lea    rcx,[rsp+0x20]
   14000aa6a:	call   0x14000a2a0
   14000aa6f:	xor    al,al
   14000aa71:	mov    rbx,QWORD PTR [rsp+0x50]
   14000aa76:	mov    rbp,QWORD PTR [rsp+0x58]
   14000aa7b:	mov    rsi,QWORD PTR [rsp+0x60]
   14000aa80:	add    rsp,0x40
   14000aa84:	pop    rdi
   14000aa85:	ret    
   14000aa86:	int3   
   14000aa87:	int3   
   14000aa88:	int3   
   14000aa89:	int3   
   14000aa8a:	int3   
   14000aa8b:	int3   
   14000aa8c:	int3   
   14000aa8d:	int3   
   14000aa8e:	int3   
   14000aa8f:	int3   
   14000aa90:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa95:	mov    QWORD PTR [rsp+0x10],rbp
   14000aa9a:	mov    QWORD PTR [rsp+0x18],rsi
   14000aa9f:	push   rdi
   14000aaa0:	sub    rsp,0x20
   14000aaa4:	mov    rbx,rcx
   14000aaa7:	mov    rcx,rdx
   14000aaaa:	mov    rbp,r8
   14000aaad:	mov    rdi,rdx
   14000aab0:	call   0x14002c04c
   14000aab5:	mov    rsi,rax
   14000aab8:	test   rax,rax
   14000aabb:	je     0x14000ab0e
   14000aabd:	xor    ecx,ecx
   14000aabf:	test   rdi,rdi
   14000aac2:	je     0x14000aaf3
   14000aac4:	mov    r8,rax
   14000aac7:	lea    rdx,[rax+0x1]
   14000aacb:	sub    r8,rbx
   14000aace:	xchg   ax,ax
   14000aad0:	movzx  eax,BYTE PTR [rbx+0x1]
   14000aad4:	add    ecx,0x2
   14000aad7:	add    rbx,0x2
   14000aadb:	mov    BYTE PTR [r8+rbx*1-0x2],al
   14000aae0:	movzx  eax,BYTE PTR [rbx-0x2]
   14000aae4:	add    rdx,0x2
   14000aae8:	mov    BYTE PTR [rdx-0x2],al
   14000aaeb:	movsxd rax,ecx
   14000aaee:	cmp    rax,rdi
   14000aaf1:	jb     0x14000aad0
   14000aaf3:	mov    r8,rbp
   14000aaf6:	mov    rdx,rdi
   14000aaf9:	mov    rcx,rsi
   14000aafc:	call   0x14000a750
   14000ab01:	mov    rcx,rsi
   14000ab04:	movzx  ebx,al
   14000ab07:	call   0x14002b36c
   14000ab0c:	mov    al,bl
   14000ab0e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ab13:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ab18:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ab1d:	add    rsp,0x20
   14000ab21:	pop    rdi
   14000ab22:	ret    
   14000ab23:	int3   
   14000ab24:	int3   
   14000ab25:	int3   
   14000ab26:	int3   
   14000ab27:	int3   
   14000ab28:	int3   
   14000ab29:	int3   
   14000ab2a:	int3   
   14000ab2b:	int3   
   14000ab2c:	int3   
   14000ab2d:	int3   
   14000ab2e:	int3   
   14000ab2f:	int3   
   14000ab30:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab35:	mov    QWORD PTR [rsp+0x10],rbp
   14000ab3a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ab3f:	push   rdi
   14000ab40:	push   r12
   14000ab42:	push   r13
   14000ab44:	sub    rsp,0x20
   14000ab48:	mov    r13,QWORD PTR [r9+0x8]
   14000ab4c:	xor    eax,eax
   14000ab4e:	mov    ebp,r8d
   14000ab51:	mov    rdi,r9
   14000ab54:	mov    r12,rdx
   14000ab57:	mov    rsi,rcx
   14000ab5a:	mov    r8,rax
   14000ab5d:	test   rdx,rdx
   14000ab60:	je     0x14000aba6
   14000ab62:	cmp    BYTE PTR [rsi+r8*1],0x80
   14000ab67:	lea    rbx,[r8+0x1]
   14000ab6b:	jb     0x14000ab9e
   14000ab6d:	test   ebp,ebp
   14000ab6f:	je     0x14000abd0
   14000ab71:	lea    rdx,[rax+rsi*1]
   14000ab75:	sub    r8,rax
   14000ab78:	mov    rcx,rdi
   14000ab7b:	call   0x14000a390
   14000ab80:	test   bpl,0x1
   14000ab84:	je     0x14000ab9b
   14000ab86:	lea    rdx,[rip+0x33b8f]        # 0x14003e71c
   14000ab8d:	mov    r8d,0x3
   14000ab93:	mov    rcx,rdi
   14000ab96:	call   0x14000a390
   14000ab9b:	mov    rax,rbx
   14000ab9e:	mov    r8,rbx
   14000aba1:	cmp    rbx,r12
   14000aba4:	jb     0x14000ab62
   14000aba6:	lea    rdx,[rax+rsi*1]
   14000abaa:	sub    r8,rax
   14000abad:	mov    rcx,rdi
   14000abb0:	call   0x14000a390
   14000abb5:	mov    al,0x1
   14000abb7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000abbc:	mov    rbp,QWORD PTR [rsp+0x48]
   14000abc1:	mov    rsi,QWORD PTR [rsp+0x50]
   14000abc6:	add    rsp,0x20
   14000abca:	pop    r13
   14000abcc:	pop    r12
   14000abce:	pop    rdi
   14000abcf:	ret    
   14000abd0:	mov    QWORD PTR [rdi+0x8],r13
   14000abd4:	xor    al,al
   14000abd6:	jmp    0x14000abb7
   14000abd8:	int3   
   14000abd9:	int3   
   14000abda:	int3   
   14000abdb:	int3   
   14000abdc:	int3   
   14000abdd:	int3   
   14000abde:	int3   
   14000abdf:	int3   
   14000abe0:	mov    QWORD PTR [rsp+0x8],rbx
   14000abe5:	mov    QWORD PTR [rsp+0x10],rbp
   14000abea:	mov    QWORD PTR [rsp+0x18],rsi
   14000abef:	mov    QWORD PTR [rsp+0x20],rdi
   14000abf4:	push   r12
   14000abf6:	sub    rsp,0x20
   14000abfa:	mov    r12,QWORD PTR [r9+0x8]
   14000abfe:	lea    rsi,[rcx+rdx*1]
   14000ac02:	mov    rdi,r9
   14000ac05:	mov    ebp,r8d
   14000ac08:	mov    rbx,rcx
   14000ac0b:	mov    rdx,rcx
   14000ac0e:	cmp    rcx,rsi
   14000ac11:	jae    0x14000ac6b
   14000ac13:	cmp    BYTE PTR [rbx],0x80
   14000ac16:	jb     0x14000ac63
   14000ac18:	test   ebp,ebp
   14000ac1a:	je     0x14000ac96
   14000ac1c:	mov    r8,rbx
   14000ac1f:	mov    rcx,rdi
   14000ac22:	sub    r8,rdx
   14000ac25:	call   0x14000a390
   14000ac2a:	test   bpl,0x1
   14000ac2e:	je     0x14000ac45
   14000ac30:	lea    rdx,[rip+0x33ae9]        # 0x14003e720
   14000ac37:	mov    r8d,0x1
   14000ac3d:	mov    rcx,rdi
   14000ac40:	call   0x14000a390
   14000ac45:	xor    r8d,r8d
   14000ac48:	mov    rdx,rsi
   14000ac4b:	mov    rcx,rbx
   14000ac4e:	call   0x14000b7a0
   14000ac53:	test   eax,eax
   14000ac55:	jle    0x14000ac5f
   14000ac57:	dec    eax
   14000ac59:	movsxd rcx,eax
   14000ac5c:	add    rbx,rcx
   14000ac5f:	lea    rdx,[rbx+0x1]
   14000ac63:	inc    rbx
   14000ac66:	cmp    rbx,rsi
   14000ac69:	jb     0x14000ac13
   14000ac6b:	sub    rbx,rdx
   14000ac6e:	mov    rcx,rdi
   14000ac71:	mov    r8,rbx
   14000ac74:	call   0x14000a390
   14000ac79:	mov    al,0x1
   14000ac7b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ac80:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ac85:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ac8a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ac8f:	add    rsp,0x20
   14000ac93:	pop    r12
   14000ac95:	ret    
   14000ac96:	mov    QWORD PTR [rdi+0x8],r12
   14000ac9a:	xor    al,al
   14000ac9c:	jmp    0x14000ac7b
   14000ac9e:	int3   
   14000ac9f:	int3   
   14000aca0:	mov    QWORD PTR [rsp+0x18],rbp
   14000aca5:	mov    QWORD PTR [rsp+0x20],rsi
   14000acaa:	push   rdi
   14000acab:	sub    rsp,0x20
   14000acaf:	mov    rsi,rdx
   14000acb2:	xor    edx,edx
   14000acb4:	mov    rbp,r9
   14000acb7:	mov    r8,rdx
   14000acba:	mov    rdi,rcx
   14000acbd:	test   rsi,rsi
   14000acc0:	je     0x14000ad27
   14000acc2:	mov    QWORD PTR [rsp+0x38],rbx
   14000acc7:	nop    WORD PTR [rax+rax*1+0x0]
   14000acd0:	movzx  ecx,BYTE PTR [rdi+r8*1]
   14000acd5:	lea    rbx,[r8+0x1]
   14000acd9:	cmp    ecx,0x80
   14000acdf:	jb     0x14000ad1a
   14000ace1:	mov    eax,ecx
   14000ace3:	and    cl,0x3f
   14000ace6:	sub    r8,rdx
   14000ace9:	or     cl,0x80
   14000acec:	shr    eax,0x6
   14000acef:	add    rdx,rdi
   14000acf2:	mov    BYTE PTR [rsp+0x31],cl
   14000acf6:	or     al,0xc0
   14000acf8:	mov    rcx,rbp
   14000acfb:	mov    BYTE PTR [rsp+0x30],al
   14000acff:	call   0x14000a390
   14000ad04:	lea    rdx,[rsp+0x30]
   14000ad09:	mov    r8d,0x2
   14000ad0f:	mov    rcx,rbp
   14000ad12:	call   0x14000a390
   14000ad17:	mov    rdx,rbx
   14000ad1a:	mov    r8,rbx
   14000ad1d:	cmp    rbx,rsi
   14000ad20:	jb     0x14000acd0
   14000ad22:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ad27:	sub    r8,rdx
   14000ad2a:	mov    rcx,rbp
   14000ad2d:	add    rdx,rdi
   14000ad30:	call   0x14000a390
   14000ad35:	mov    rbp,QWORD PTR [rsp+0x40]
   14000ad3a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ad3f:	mov    al,0x1
   14000ad41:	add    rsp,0x20
   14000ad45:	pop    rdi
   14000ad46:	ret    
   14000ad47:	int3   
   14000ad48:	int3   
   14000ad49:	int3   
   14000ad4a:	int3   
   14000ad4b:	int3   
   14000ad4c:	int3   
   14000ad4d:	int3   
   14000ad4e:	int3   
   14000ad4f:	int3   
   14000ad50:	sub    rsp,0xd8
   14000ad57:	mov    rax,QWORD PTR [rip+0x5bb52]        # 0x1400668b0
   14000ad5e:	xor    rax,rsp
   14000ad61:	mov    QWORD PTR [rsp+0xc0],rax
   14000ad69:	movzx  eax,BYTE PTR [rip+0x4b393]        # 0x140056103
   14000ad70:	test   al,al
   14000ad72:	jne    0x14000ad92
   14000ad74:	mov    eax,DWORD PTR [rip+0x5d586]        # 0x140068300
   14000ad7a:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000ad82:	xor    rcx,rsp
   14000ad85:	call   0x14002b250
   14000ad8a:	add    rsp,0xd8
   14000ad91:	ret    
   14000ad92:	lea    rcx,[rsp+0x20]
   14000ad97:	xor    edx,edx
   14000ad99:	mov    r8d,0x9c
   14000ad9f:	call   0x14002b280
   14000ada4:	lea    rcx,[rsp+0x20]
   14000ada9:	mov    DWORD PTR [rsp+0x20],0x9c
   14000adb1:	call   QWORD PTR [rip+0x322f1]        # 0x14003d0a8
   14000adb7:	test   eax,eax
   14000adb9:	jne    0x14000addf
   14000adbb:	mov    DWORD PTR [rip+0x5d53f],eax        # 0x140068300
   14000adc1:	mov    BYTE PTR [rip+0x4b33c],al        # 0x140056103
   14000adc7:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000adcf:	xor    rcx,rsp
   14000add2:	call   0x14002b250
   14000add7:	add    rsp,0xd8
   14000adde:	ret    
   14000addf:	mov    eax,DWORD PTR [rsp+0x24]
   14000ade3:	cmp    eax,0x5
   14000ade6:	jbe    0x14000adef
   14000ade8:	mov    eax,0x8
   14000aded:	jmp    0x14000ae06
   14000adef:	jne    0x14000ae04
   14000adf1:	mov    eax,DWORD PTR [rsp+0x28]
   14000adf5:	test   eax,eax
   14000adf7:	jne    0x14000ade8
   14000adf9:	cmp    WORD PTR [rsp+0xb4],0x4
   14000ae02:	jae    0x14000ade8
   14000ae04:	xor    eax,eax
   14000ae06:	mov    DWORD PTR [rip+0x5d4f4],eax        # 0x140068300
   14000ae0c:	mov    BYTE PTR [rip+0x4b2f0],0x0        # 0x140056103
   14000ae13:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000ae1b:	xor    rcx,rsp
   14000ae1e:	call   0x14002b250
   14000ae23:	add    rsp,0xd8
   14000ae2a:	ret    
   14000ae2b:	int3   
   14000ae2c:	int3   
   14000ae2d:	int3   
   14000ae2e:	int3   
   14000ae2f:	int3   
   14000ae30:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae35:	mov    QWORD PTR [rsp+0x10],rdx
   14000ae3a:	push   rbp
   14000ae3b:	push   rsi
   14000ae3c:	push   rdi
   14000ae3d:	push   r12
   14000ae3f:	push   r13
   14000ae41:	push   r14
   14000ae43:	push   r15
   14000ae45:	sub    rsp,0x40
   14000ae49:	mov    rsi,r9
   14000ae4c:	mov    r13,r8
   14000ae4f:	mov    rdi,rdx
   14000ae52:	mov    r15d,ecx
   14000ae55:	test   r8,r8
   14000ae58:	je     0x14000af4e
   14000ae5e:	call   0x14000ad50
   14000ae63:	mov    r12,QWORD PTR [rsi+0x8]
   14000ae67:	xor    ebx,ebx
   14000ae69:	mov    ebp,eax
   14000ae6b:	lea    edx,[rbx+0x2]
   14000ae6e:	mov    rcx,rsi
   14000ae71:	shr    ebp,0x3
   14000ae74:	mov    DWORD PTR [rsp+0x90],eax
   14000ae7b:	and    bpl,0x1
   14000ae7f:	call   0x14000a310
   14000ae84:	test   al,al
   14000ae86:	je     0x14000af68
   14000ae8c:	mov    r14d,DWORD PTR [rsp+0x90]
   14000ae94:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000aea0:	mov    rcx,QWORD PTR [rsi+0x10]
   14000aea4:	mov    rax,QWORD PTR [rsi]
   14000aea7:	mov    edx,DWORD PTR [rsp+0x90]
   14000aeae:	sub    rcx,r12
   14000aeb1:	add    rax,r12
   14000aeb4:	mov    r9d,r13d
   14000aeb7:	shr    rcx,1
   14000aeba:	mov    r8,rdi
   14000aebd:	mov    DWORD PTR [rsp+0x28],ecx
   14000aec1:	mov    ecx,r15d
   14000aec4:	mov    QWORD PTR [rsp+0x20],rax
   14000aec9:	call   QWORD PTR [rip+0x321e1]        # 0x14003d0b0
   14000aecf:	movsxd rdi,eax
   14000aed2:	test   eax,eax
   14000aed4:	jne    0x14000aede
   14000aed6:	call   QWORD PTR [rip+0x3245c]        # 0x14003d338
   14000aedc:	mov    ebx,eax
   14000aede:	test   bpl,bpl
   14000aee1:	jne    0x14000af0f
   14000aee3:	mov    r8,QWORD PTR [rsi]
   14000aee6:	xor    eax,eax
   14000aee8:	mov    r9d,edi
   14000aeeb:	mov    QWORD PTR [rsp+0x38],rax
   14000aef0:	mov    QWORD PTR [rsp+0x30],rax
   14000aef5:	mov    DWORD PTR [rsp+0x28],eax
   14000aef9:	add    r8,r12
   14000aefc:	xor    edx,edx
   14000aefe:	mov    ecx,r15d
   14000af01:	mov    QWORD PTR [rsp+0x20],rax
   14000af06:	call   QWORD PTR [rip+0x3218c]        # 0x14003d098
   14000af0c:	mov    r14d,eax
   14000af0f:	test   edi,edi
   14000af11:	jg     0x14000af36
   14000af13:	cmp    ebx,0x7a
   14000af16:	jne    0x14000af68
   14000af18:	xor    ebx,ebx
   14000af1a:	mov    rcx,rsi
   14000af1d:	lea    edx,[rbx+0x2]
   14000af20:	call   0x14000a310
   14000af25:	test   al,al
   14000af27:	je     0x14000af68
   14000af29:	mov    rdi,QWORD PTR [rsp+0x88]
   14000af31:	jmp    0x14000aea0
   14000af36:	test   bpl,bpl
   14000af39:	jne    0x14000af43
   14000af3b:	movsxd rax,r14d
   14000af3e:	cmp    r13,rax
   14000af41:	jne    0x14000af68
   14000af43:	lea    rcx,[r12+rdi*2]
   14000af47:	mov    rax,rdi
   14000af4a:	mov    QWORD PTR [rsi+0x8],rcx
   14000af4e:	mov    al,0x1
   14000af50:	mov    rbx,QWORD PTR [rsp+0x80]
   14000af58:	add    rsp,0x40
   14000af5c:	pop    r15
   14000af5e:	pop    r14
   14000af60:	pop    r13
   14000af62:	pop    r12
   14000af64:	pop    rdi
   14000af65:	pop    rsi
   14000af66:	pop    rbp
   14000af67:	ret    
   14000af68:	xor    al,al
   14000af6a:	jmp    0x14000af50
   14000af6c:	int3   
   14000af6d:	int3   
   14000af6e:	int3   
   14000af6f:	int3   
   14000af70:	mov    QWORD PTR [rsp+0x8],rbx
   14000af75:	mov    QWORD PTR [rsp+0x10],rbp
   14000af7a:	mov    QWORD PTR [rsp+0x18],rsi
   14000af7f:	mov    QWORD PTR [rsp+0x20],rdi
   14000af84:	push   r12
   14000af86:	sub    rsp,0x40
   14000af8a:	mov    rbx,rcx
   14000af8d:	lea    rcx,[rsp+0x20]
   14000af92:	mov    rsi,r9
   14000af95:	mov    r12,r8
   14000af98:	mov    rdi,rdx
   14000af9b:	call   0x14000a290
   14000afa0:	mov    rcx,rdi
   14000afa3:	call   0x14002c04c
   14000afa8:	mov    rbp,rax
   14000afab:	test   rax,rax
   14000afae:	je     0x14000b059
   14000afb4:	xor    ecx,ecx
   14000afb6:	test   rdi,rdi
   14000afb9:	je     0x14000aff3
   14000afbb:	mov    r8,rax
   14000afbe:	lea    rdx,[rax+0x1]
   14000afc2:	sub    r8,rbx
   14000afc5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000afd0:	movzx  eax,BYTE PTR [rbx+0x1]
   14000afd4:	add    ecx,0x2
   14000afd7:	add    rbx,0x2
   14000afdb:	mov    BYTE PTR [r8+rbx*1-0x2],al
   14000afe0:	movzx  eax,BYTE PTR [rbx-0x2]
   14000afe4:	add    rdx,0x2
   14000afe8:	mov    BYTE PTR [rdx-0x2],al
   14000afeb:	movsxd rax,ecx
   14000afee:	cmp    rax,rdi
   14000aff1:	jb     0x14000afd0
   14000aff3:	lea    r8,[rsp+0x20]
   14000aff8:	mov    rdx,rdi
   14000affb:	mov    rcx,rbp
   14000affe:	call   0x14000a750
   14000b003:	mov    rcx,rbp
   14000b006:	movzx  ebx,al
   14000b009:	call   0x14002b36c
   14000b00e:	test   bl,bl
   14000b010:	je     0x14000b059
   14000b012:	lea    rdx,[rip+0x336ef]        # 0x14003e708
   14000b019:	lea    rcx,[rsp+0x20]
   14000b01e:	mov    r8d,0x2
   14000b024:	call   0x14000a390
   14000b029:	test   al,al
   14000b02b:	je     0x14000b059
   14000b02d:	lea    rcx,[rsp+0x20]
   14000b032:	call   0x14000a420
   14000b037:	test   al,al
   14000b039:	je     0x14000b059
   14000b03b:	mov    rax,QWORD PTR [rsp+0x20]
   14000b040:	mov    QWORD PTR [r12],rax
   14000b044:	test   rsi,rsi
   14000b047:	je     0x14000b055
   14000b049:	mov    rax,QWORD PTR [rsp+0x28]
   14000b04e:	add    rax,0xfffffffffffffffe
   14000b052:	mov    QWORD PTR [rsi],rax
   14000b055:	mov    al,0x1
   14000b057:	jmp    0x14000b065
   14000b059:	lea    rcx,[rsp+0x20]
   14000b05e:	call   0x14000a2a0
   14000b063:	xor    al,al
   14000b065:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b06a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b06f:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b074:	mov    rdi,QWORD PTR [rsp+0x68]
   14000b079:	add    rsp,0x40
   14000b07d:	pop    r12
   14000b07f:	ret    
   14000b080:	mov    QWORD PTR [rsp+0x8],rbx
   14000b085:	mov    QWORD PTR [rsp+0x10],rbp
   14000b08a:	mov    QWORD PTR [rsp+0x20],rsi
   14000b08f:	push   rdi
   14000b090:	push   r12
   14000b092:	push   r13
   14000b094:	sub    rsp,0x60
   14000b098:	mov    rbx,r9
   14000b09b:	mov    rdi,r8
   14000b09e:	mov    rsi,rdx
   14000b0a1:	xor    r13b,r13b
   14000b0a4:	call   0x14000fc50
   14000b0a9:	mov    rcx,rbx
   14000b0ac:	mov    r12d,eax
   14000b0af:	call   0x14000fc50
   14000b0b4:	mov    ebx,eax
   14000b0b6:	call   0x14000fc90
   14000b0bb:	xor    ebp,ebp
   14000b0bd:	mov    QWORD PTR [rsp+0x90],rbp
   14000b0c5:	test   rdi,rdi
   14000b0c8:	je     0x14000b6e3
   14000b0ce:	test   rsi,rsi
   14000b0d1:	je     0x14000b6e3
   14000b0d7:	cmp    r12d,ebx
   14000b0da:	jne    0x14000b302
   14000b0e0:	test   r12d,r12d
   14000b0e3:	jne    0x14000b139
   14000b0e5:	lea    rcx,[rsp+0x40]
   14000b0ea:	call   0x14000a290
   14000b0ef:	lea    r8,[rsp+0x40]
   14000b0f4:	mov    rdx,rdi
   14000b0f7:	mov    rcx,rsi
   14000b0fa:	call   0x14000a470
   14000b0ff:	test   al,al
   14000b101:	je     0x14000b12a
   14000b103:	lea    r8d,[rbp+0x2]
   14000b107:	lea    rdx,[rip+0x335fa]        # 0x14003e708
   14000b10e:	lea    rcx,[rsp+0x40]
   14000b113:	call   0x14000a390
   14000b118:	test   al,al
   14000b11a:	je     0x14000b12a
   14000b11c:	lea    rcx,[rsp+0x40]
   14000b121:	call   0x14000a420
   14000b126:	test   al,al
   14000b128:	jne    0x14000b186
   14000b12a:	lea    rcx,[rsp+0x40]
   14000b12f:	call   0x14000a2a0
   14000b134:	jmp    0x14000b6e6
   14000b139:	cmp    r12d,0x1
   14000b13d:	jne    0x14000b1ad
   14000b13f:	lea    rcx,[rsp+0x40]
   14000b144:	call   0x14000a290
   14000b149:	lea    r8,[rsp+0x40]
   14000b14e:	mov    rdx,rdi
   14000b151:	mov    rcx,rsi
   14000b154:	call   0x14000a750
   14000b159:	test   al,al
   14000b15b:	je     0x14000b12a
   14000b15d:	lea    rdx,[rip+0x335a4]        # 0x14003e708
   14000b164:	lea    rcx,[rsp+0x40]
   14000b169:	mov    r8d,0x2
   14000b16f:	call   0x14000a390
   14000b174:	test   al,al
   14000b176:	je     0x14000b12a
   14000b178:	lea    rcx,[rsp+0x40]
   14000b17d:	call   0x14000a420
   14000b182:	test   al,al
   14000b184:	je     0x14000b12a
   14000b186:	mov    rbp,QWORD PTR [rsp+0x40]
   14000b18b:	mov    rcx,rbp
   14000b18e:	call   0x14002b36c
   14000b193:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000b19b:	mov    r8,rdi
   14000b19e:	mov    rdx,rsi
   14000b1a1:	xor    ebp,ebp
   14000b1a3:	call   0x14000a390
   14000b1a8:	jmp    0x14000b6df
   14000b1ad:	cmp    r12d,0x2
   14000b1b1:	jne    0x14000b1dd
   14000b1b3:	lea    r9,[rsp+0x20]
   14000b1b8:	lea    r8,[rsp+0x90]
   14000b1c0:	mov    rdx,rdi
   14000b1c3:	mov    rcx,rsi
   14000b1c6:	call   0x14000af70
   14000b1cb:	test   al,al
   14000b1cd:	je     0x14000b581
   14000b1d3:	mov    rbp,QWORD PTR [rsp+0x90]
   14000b1db:	jmp    0x14000b18b
   14000b1dd:	cmp    r12d,0x7
   14000b1e1:	jne    0x14000b21a
   14000b1e3:	lea    rcx,[rsp+0x40]
   14000b1e8:	call   0x14000a290
   14000b1ed:	xor    r8d,r8d
   14000b1f0:	test   rdi,rdi
   14000b1f3:	je     0x14000b208
   14000b1f5:	cmp    BYTE PTR [r8+rsi*1],0x80
   14000b1fa:	jae    0x14000b12a
   14000b200:	inc    r8
   14000b203:	cmp    r8,rdi
   14000b206:	jb     0x14000b1f5
   14000b208:	lea    rcx,[rsp+0x40]
   14000b20d:	mov    rdx,rsi
   14000b210:	call   0x14000a390
   14000b215:	jmp    0x14000b15d
   14000b21a:	cmp    r12d,eax
   14000b21d:	jne    0x14000b18b
   14000b223:	lea    rcx,[rsp+0x28]
   14000b228:	call   0x14000a290
   14000b22d:	lea    r9,[rsp+0x28]
   14000b232:	mov    r8,rdi
   14000b235:	mov    rdx,rsi
   14000b238:	xor    ecx,ecx
   14000b23a:	call   0x14000ae30
   14000b23f:	test   al,al
   14000b241:	je     0x14000b2f3
   14000b247:	lea    rdx,[rip+0x334ba]        # 0x14003e708
   14000b24e:	lea    rcx,[rsp+0x28]
   14000b253:	mov    r8d,0x2
   14000b259:	call   0x14000a390
   14000b25e:	test   al,al
   14000b260:	je     0x14000b2f3
   14000b266:	lea    rcx,[rsp+0x28]
   14000b26b:	call   0x14000a420
   14000b270:	test   al,al
   14000b272:	je     0x14000b2f3
   14000b274:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b279:	mov    r12,QWORD PTR [rsp+0x28]
   14000b27e:	lea    rcx,[rsp+0x40]
   14000b283:	add    rbx,0xfffffffffffffffe
   14000b287:	call   0x14000a290
   14000b28c:	lea    r8,[rsp+0x40]
   14000b291:	mov    rdx,rbx
   14000b294:	mov    rcx,r12
   14000b297:	call   0x14000a750
   14000b29c:	test   al,al
   14000b29e:	je     0x14000b2d2
   14000b2a0:	lea    rdx,[rip+0x33461]        # 0x14003e708
   14000b2a7:	lea    rcx,[rsp+0x40]
   14000b2ac:	mov    r8d,0x2
   14000b2b2:	call   0x14000a390
   14000b2b7:	test   al,al
   14000b2b9:	je     0x14000b2d2
   14000b2bb:	lea    rcx,[rsp+0x40]
   14000b2c0:	call   0x14000a420
   14000b2c5:	test   al,al
   14000b2c7:	je     0x14000b2d2
   14000b2c9:	mov    rbp,QWORD PTR [rsp+0x40]
   14000b2ce:	mov    bl,0x1
   14000b2d0:	jmp    0x14000b2de
   14000b2d2:	lea    rcx,[rsp+0x40]
   14000b2d7:	call   0x14000a2a0
   14000b2dc:	xor    bl,bl
   14000b2de:	mov    rcx,r12
   14000b2e1:	call   0x14002b36c
   14000b2e6:	test   bl,bl
   14000b2e8:	je     0x14000b6e6
   14000b2ee:	jmp    0x14000b18b
   14000b2f3:	lea    rcx,[rsp+0x28]
   14000b2f8:	call   0x14000a2a0
   14000b2fd:	jmp    0x14000b6e6
   14000b302:	cmp    eax,r12d
   14000b305:	jne    0x14000b462
   14000b30b:	test   ebx,ebx
   14000b30d:	jne    0x14000b3f3
   14000b313:	lea    rcx,[rsp+0x40]
   14000b318:	call   0x14000a290
   14000b31d:	lea    r9,[rsp+0x40]
   14000b322:	mov    r8,rdi
   14000b325:	mov    rdx,rsi
   14000b328:	xor    ecx,ecx
   14000b32a:	call   0x14000ae30
   14000b32f:	test   al,al
   14000b331:	je     0x14000b12a
   14000b337:	lea    r8d,[rbx+0x2]
   14000b33b:	lea    rdx,[rip+0x333c6]        # 0x14003e708
   14000b342:	lea    rcx,[rsp+0x40]
   14000b347:	call   0x14000a390
   14000b34c:	test   al,al
   14000b34e:	je     0x14000b12a
   14000b354:	lea    rcx,[rsp+0x40]
   14000b359:	call   0x14000a420
   14000b35e:	test   al,al
   14000b360:	je     0x14000b12a
   14000b366:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b36b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b370:	lea    rcx,[rsp+0x28]
   14000b375:	call   0x14000a290
   14000b37a:	lea    r8,[rsp+0x28]
   14000b37f:	lea    rdx,[rbx-0x2]
   14000b383:	mov    rcx,rsi
   14000b386:	call   0x14000a750
   14000b38b:	test   al,al
   14000b38d:	je     0x14000b3cb
   14000b38f:	lea    rdx,[rip+0x33372]        # 0x14003e708
   14000b396:	lea    rcx,[rsp+0x28]
   14000b39b:	mov    r8d,0x2
   14000b3a1:	call   0x14000a390
   14000b3a6:	test   al,al
   14000b3a8:	je     0x14000b3cb
   14000b3aa:	lea    rcx,[rsp+0x28]
   14000b3af:	call   0x14000a420
   14000b3b4:	test   al,al
   14000b3b6:	je     0x14000b3cb
   14000b3b8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b3bd:	mov    rbp,QWORD PTR [rsp+0x28]
   14000b3c2:	mov    dil,0x1
   14000b3c5:	add    rbx,0xfffffffffffffffe
   14000b3c9:	jmp    0x14000b3dd
   14000b3cb:	lea    rcx,[rsp+0x28]
   14000b3d0:	call   0x14000a2a0
   14000b3d5:	mov    rbx,QWORD PTR [rsp+0x20]
   14000b3da:	xor    dil,dil
   14000b3dd:	mov    rcx,rsi
   14000b3e0:	call   0x14002b36c
   14000b3e5:	test   dil,dil
   14000b3e8:	je     0x14000b6e6
   14000b3ee:	jmp    0x14000b646
   14000b3f3:	cmp    ebx,0x1
   14000b3f6:	jne    0x14000b6e6
   14000b3fc:	lea    rcx,[rsp+0x40]
   14000b401:	call   0x14000a290
   14000b406:	lea    r9,[rsp+0x40]
   14000b40b:	mov    r8,rdi
   14000b40e:	mov    rdx,rsi
   14000b411:	xor    ecx,ecx
   14000b413:	call   0x14000ae30
   14000b418:	test   al,al
   14000b41a:	je     0x14000b12a
   14000b420:	lea    r8d,[rbx+0x1]
   14000b424:	lea    rdx,[rip+0x332dd]        # 0x14003e708
   14000b42b:	lea    rcx,[rsp+0x40]
   14000b430:	call   0x14000a390
   14000b435:	test   al,al
   14000b437:	je     0x14000b12a
   14000b43d:	lea    rcx,[rsp+0x40]
   14000b442:	call   0x14000a420
   14000b447:	test   al,al
   14000b449:	je     0x14000b12a
   14000b44f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b454:	mov    rbp,QWORD PTR [rsp+0x40]
   14000b459:	add    rbx,0xfffffffffffffffe
   14000b45d:	jmp    0x14000b646
   14000b462:	test   r12d,r12d
   14000b465:	jne    0x14000b54e
   14000b46b:	cmp    eax,ebx
   14000b46d:	jne    0x14000b508
   14000b473:	lea    rcx,[rsp+0x40]
   14000b478:	call   0x14000a290
   14000b47d:	lea    r8,[rsp+0x40]
   14000b482:	mov    rdx,rdi
   14000b485:	mov    rcx,rsi
   14000b488:	call   0x14000a470
   14000b48d:	test   al,al
   14000b48f:	je     0x14000b12a
   14000b495:	lea    r8d,[r12+0x2]
   14000b49a:	lea    rdx,[rip+0x33267]        # 0x14003e708
   14000b4a1:	lea    rcx,[rsp+0x40]
   14000b4a6:	call   0x14000a390
   14000b4ab:	test   al,al
   14000b4ad:	je     0x14000b12a
   14000b4b3:	lea    rcx,[rsp+0x40]
   14000b4b8:	call   0x14000a420
   14000b4bd:	test   al,al
   14000b4bf:	je     0x14000b12a
   14000b4c5:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b4ca:	mov    rdx,QWORD PTR [rsp+0x48]
   14000b4cf:	lea    r9,[rsp+0x20]
   14000b4d4:	lea    r8,[rsp+0x90]
   14000b4dc:	add    rdx,0xfffffffffffffffe
   14000b4e0:	mov    rcx,rdi
   14000b4e3:	call   0x14000a5b0
   14000b4e8:	mov    rcx,rdi
   14000b4eb:	movzx  ebx,al
   14000b4ee:	call   0x14002b36c
   14000b4f3:	test   bl,bl
   14000b4f5:	je     0x14000b581
   14000b4fb:	mov    rbp,QWORD PTR [rsp+0x90]
   14000b503:	jmp    0x14000b641
   14000b508:	cmp    ebx,0x1
   14000b50b:	jne    0x14000b525
   14000b50d:	mov    r8,QWORD PTR [rsp+0xa8]
   14000b515:	mov    rdx,rdi
   14000b518:	mov    rcx,rsi
   14000b51b:	call   0x14000a470
   14000b520:	jmp    0x14000b6df
   14000b525:	cmp    ebx,0x7
   14000b528:	jne    0x14000b6e6
   14000b52e:	mov    r9,QWORD PTR [rsp+0xa8]
   14000b536:	mov    r8d,DWORD PTR [rsp+0xa0]
   14000b53e:	mov    rdx,rdi
   14000b541:	mov    rcx,rsi
   14000b544:	call   0x14000abe0
   14000b549:	jmp    0x14000b6df
   14000b54e:	cmp    r12d,0x1
   14000b552:	jne    0x14000b5ae
   14000b554:	cmp    eax,ebx
   14000b556:	jne    0x14000b58e
   14000b558:	lea    r9,[rsp+0x20]
   14000b55d:	lea    r8,[rsp+0x90]
   14000b565:	mov    rdx,rdi
   14000b568:	mov    rcx,rsi
   14000b56b:	call   0x14000a5b0
   14000b570:	test   al,al
   14000b572:	je     0x14000b581
   14000b574:	mov    rbp,QWORD PTR [rsp+0x90]
   14000b57c:	jmp    0x14000b641
   14000b581:	mov    rbp,QWORD PTR [rsp+0x90]
   14000b589:	jmp    0x14000b6e6
   14000b58e:	test   ebx,ebx
   14000b590:	jne    0x14000b6e6
   14000b596:	mov    r8,QWORD PTR [rsp+0xa8]
   14000b59e:	mov    rdx,rdi
   14000b5a1:	mov    rcx,rsi
   14000b5a4:	call   0x14000a750
   14000b5a9:	jmp    0x14000b6df
   14000b5ae:	cmp    r12d,0x2
   14000b5b2:	jne    0x14000b693
   14000b5b8:	cmp    eax,ebx
   14000b5ba:	jne    0x14000b67a
   14000b5c0:	mov    rcx,rdi
   14000b5c3:	xor    r12b,r12b
   14000b5c6:	call   0x14002c04c
   14000b5cb:	mov    rbx,rax
   14000b5ce:	test   rax,rax
   14000b5d1:	je     0x14000b630
   14000b5d3:	mov    r8,rdi
   14000b5d6:	mov    rdx,rsi
   14000b5d9:	mov    rcx,rax
   14000b5dc:	call   0x14002b9a0
   14000b5e1:	xor    r11d,r11d
   14000b5e4:	test   rdi,rdi
   14000b5e7:	je     0x14000b60c
   14000b5e9:	lea    rdx,[rbx+0x1]
   14000b5ed:	nop    DWORD PTR [rax]
   14000b5f0:	movzx  eax,BYTE PTR [rdx]
   14000b5f3:	movzx  ecx,BYTE PTR [rdx-0x1]
   14000b5f7:	add    r11d,0x2
   14000b5fb:	mov    BYTE PTR [rdx-0x1],al
   14000b5fe:	movsxd rax,r11d
   14000b601:	mov    BYTE PTR [rdx],cl
   14000b603:	add    rdx,0x2
   14000b607:	cmp    rax,rdi
   14000b60a:	jb     0x14000b5f0
   14000b60c:	lea    r9,[rsp+0x20]
   14000b611:	lea    r8,[rsp+0x90]
   14000b619:	mov    rdx,rdi
   14000b61c:	mov    rcx,rbx
   14000b61f:	call   0x14000a5b0
   14000b624:	mov    rbp,QWORD PTR [rsp+0x90]
   14000b62c:	movzx  r12d,al
   14000b630:	mov    rcx,rbx
   14000b633:	call   0x14002b36c
   14000b638:	test   r12b,r12b
   14000b63b:	je     0x14000b6e6
   14000b641:	mov    rbx,QWORD PTR [rsp+0x20]
   14000b646:	test   rbp,rbp
   14000b649:	je     0x14000b6e3
   14000b64f:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000b657:	cmp    QWORD PTR [rcx+0x8],0x0
   14000b65c:	jne    0x14000b66d
   14000b65e:	mov    r8,rbp
   14000b661:	mov    rdx,rbx
   14000b664:	call   0x14000a2d0
   14000b669:	xor    ebp,ebp
   14000b66b:	jmp    0x14000b6e3
   14000b66d:	mov    r8,rbx
   14000b670:	mov    rdx,rbp
   14000b673:	call   0x14000a390
   14000b678:	jmp    0x14000b6df
   14000b67a:	test   ebx,ebx
   14000b67c:	jne    0x14000b6e6
   14000b67e:	mov    r8,QWORD PTR [rsp+0xa8]
   14000b686:	mov    rdx,rdi
   14000b689:	mov    rcx,rsi
   14000b68c:	call   0x14000aa90
   14000b691:	jmp    0x14000b6df
   14000b693:	cmp    r12d,0x7
   14000b697:	jne    0x14000b6ba
   14000b699:	test   ebx,ebx
   14000b69b:	jne    0x14000b6e6
   14000b69d:	mov    r9,QWORD PTR [rsp+0xa8]
   14000b6a5:	mov    r8d,DWORD PTR [rsp+0xa0]
   14000b6ad:	mov    rdx,rdi
   14000b6b0:	mov    rcx,rsi
   14000b6b3:	call   0x14000ab30
   14000b6b8:	jmp    0x14000b6df
   14000b6ba:	cmp    r12d,0x8
   14000b6be:	jne    0x14000b6e6
   14000b6c0:	test   ebx,ebx
   14000b6c2:	jne    0x14000b6e6
   14000b6c4:	mov    r9,QWORD PTR [rsp+0xa8]
   14000b6cc:	mov    r8d,DWORD PTR [rsp+0xa0]
   14000b6d4:	mov    rdx,rdi
   14000b6d7:	mov    rcx,rsi
   14000b6da:	call   0x14000aca0
   14000b6df:	test   al,al
   14000b6e1:	je     0x14000b6e6
   14000b6e3:	mov    r13b,0x1
   14000b6e6:	mov    rcx,rbp
   14000b6e9:	call   0x14002b36c
   14000b6ee:	lea    r11,[rsp+0x60]
   14000b6f3:	mov    al,r13b
   14000b6f6:	mov    rbx,QWORD PTR [r11+0x20]
   14000b6fa:	mov    rbp,QWORD PTR [r11+0x28]
   14000b6fe:	mov    rsi,QWORD PTR [r11+0x38]
   14000b702:	mov    rsp,r11
   14000b705:	pop    r13
   14000b707:	pop    r12
   14000b709:	pop    rdi
   14000b70a:	ret    
   14000b70b:	int3   
   14000b70c:	int3   
   14000b70d:	int3   
   14000b70e:	int3   
   14000b70f:	int3   
   14000b710:	mov    QWORD PTR [rsp+0x8],rbx
   14000b715:	mov    QWORD PTR [rsp+0x10],rsi
   14000b71a:	push   rdi
   14000b71b:	sub    rsp,0x50
   14000b71f:	mov    rdi,r8
   14000b722:	mov    rbx,rdx
   14000b725:	mov    rsi,rcx
   14000b728:	test   rdx,rdx
   14000b72b:	jne    0x14000b73f
   14000b72d:	mov    al,0x1
   14000b72f:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b734:	mov    rsi,QWORD PTR [rsp+0x68]
   14000b739:	add    rsp,0x50
   14000b73d:	pop    rdi
   14000b73e:	ret    
   14000b73f:	lea    rcx,[rsp+0x30]
   14000b744:	call   0x14000a290
   14000b749:	lea    r11,[rsp+0x30]
   14000b74e:	lea    r9,[rip+0x32f0b]        # 0x14003e660
   14000b755:	mov    QWORD PTR [rsp+0x28],r11
   14000b75a:	mov    r8,rbx
   14000b75d:	mov    rdx,rsi
   14000b760:	mov    rcx,rdi
   14000b763:	mov    DWORD PTR [rsp+0x20],0x0
   14000b76b:	call   0x14000b080
   14000b770:	lea    rcx,[rsp+0x30]
   14000b775:	movzx  ebx,al
   14000b778:	call   0x14000a2a0
   14000b77d:	mov    rsi,QWORD PTR [rsp+0x68]
   14000b782:	mov    al,bl
   14000b784:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b789:	add    rsp,0x50
   14000b78d:	pop    rdi
   14000b78e:	ret    
   14000b78f:	int3   
   14000b790:	jmp    0x14000a700
   14000b795:	int3   
   14000b796:	int3   
   14000b797:	int3   
   14000b798:	int3   
   14000b799:	int3   
   14000b79a:	int3   
   14000b79b:	int3   
   14000b79c:	int3   
   14000b79d:	int3   
   14000b79e:	int3   
   14000b79f:	int3   
   14000b7a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b7a5:	movzx  r9d,BYTE PTR [rcx]
   14000b7a9:	mov    rbx,r8
   14000b7ac:	mov    r11,rdx
   14000b7af:	cmp    r9d,0x80
   14000b7b6:	jae    0x14000b7c2
   14000b7b8:	mov    edx,0x1
   14000b7bd:	jmp    0x14000b853
   14000b7c2:	lea    eax,[r9-0xc2]
   14000b7c9:	cmp    eax,0x32
   14000b7cc:	ja     0x14000b863
   14000b7d2:	cmp    r9d,0xe0
   14000b7d9:	jae    0x14000b7e9
   14000b7db:	add    r9d,0xffffff40
   14000b7e2:	mov    edx,0x2
   14000b7e7:	jmp    0x14000b80c
   14000b7e9:	cmp    r9d,0xf0
   14000b7f0:	jae    0x14000b800
   14000b7f2:	add    r9d,0xffffff20
   14000b7f9:	mov    edx,0x3
   14000b7fe:	jmp    0x14000b80c
   14000b800:	add    r9d,0xffffff10
   14000b807:	mov    edx,0x4
   14000b80c:	movsxd r10,edx
   14000b80f:	add    r10,rcx
   14000b812:	cmp    r10,r11
   14000b815:	ja     0x14000b863
   14000b817:	inc    rcx
   14000b81a:	cmp    rcx,r10
   14000b81d:	jae    0x14000b843
   14000b81f:	nop
   14000b820:	movzx  r8d,BYTE PTR [rcx]
   14000b824:	movzx  eax,r8b
   14000b828:	and    al,0xc0
   14000b82a:	cmp    al,0x80
   14000b82c:	jne    0x14000b863
   14000b82e:	shl    r9d,0x6
   14000b832:	movzx  eax,r8b
   14000b836:	inc    rcx
   14000b839:	lea    r9d,[r9+rax*1-0x80]
   14000b83e:	cmp    rcx,r10
   14000b841:	jb     0x14000b820
   14000b843:	lea    ecx,[rdx+rdx*4-0x4]
   14000b847:	mov    eax,0x1
   14000b84c:	shl    eax,cl
   14000b84e:	cmp    r9d,eax
   14000b851:	jb     0x14000b863
   14000b853:	test   rbx,rbx
   14000b856:	je     0x14000b85b
   14000b858:	mov    DWORD PTR [rbx],r9d
   14000b85b:	mov    eax,edx
   14000b85d:	mov    rbx,QWORD PTR [rsp+0x8]
   14000b862:	ret    
   14000b863:	mov    rbx,QWORD PTR [rsp+0x8]
   14000b868:	xor    eax,eax
   14000b86a:	ret    
   14000b86b:	int3   
   14000b86c:	int3   
   14000b86d:	int3   
   14000b86e:	int3   
   14000b86f:	int3   
   14000b870:	cmp    r8d,0x7
   14000b874:	jne    0x14000b8ae
   14000b876:	cmp    rdx,0xffffffffffffffff
   14000b87a:	jne    0x14000b897
   14000b87c:	movzx  eax,BYTE PTR [rcx]
   14000b87f:	test   al,al
   14000b881:	je     0x14000b8ae
   14000b883:	cmp    al,0x80
   14000b885:	jae    0x14000b894
   14000b887:	mov    al,BYTE PTR [rcx+0x1]
   14000b88a:	inc    rcx
   14000b88d:	test   al,al
   14000b88f:	jne    0x14000b883
   14000b891:	mov    al,0x1
   14000b893:	ret    
   14000b894:	xor    al,al
   14000b896:	ret    
   14000b897:	xor    eax,eax
   14000b899:	test   rdx,rdx
   14000b89c:	jle    0x14000b8ae
   14000b89e:	xchg   ax,ax
   14000b8a0:	cmp    BYTE PTR [rax+rcx*1],0x80
   14000b8a4:	jae    0x14000b894
   14000b8a6:	inc    rax
   14000b8a9:	cmp    rax,rdx
   14000b8ac:	jl     0x14000b8a0
   14000b8ae:	mov    al,0x1
   14000b8b0:	ret    
   14000b8b1:	int3   
   14000b8b2:	int3   
   14000b8b3:	int3   
   14000b8b4:	int3   
   14000b8b5:	int3   
   14000b8b6:	int3   
   14000b8b7:	int3   
   14000b8b8:	int3   
   14000b8b9:	int3   
   14000b8ba:	int3   
   14000b8bb:	int3   
   14000b8bc:	int3   
   14000b8bd:	int3   
   14000b8be:	int3   
   14000b8bf:	int3   
   14000b8c0:	rex push rdi
   14000b8c2:	sub    rsp,0x20
   14000b8c6:	mov    rdi,rcx
   14000b8c9:	mov    ecx,edx
   14000b8cb:	call   0x14000fcf0
   14000b8d0:	test   eax,eax
   14000b8d2:	jle    0x14000b914
   14000b8d4:	cmp    eax,0x3
   14000b8d7:	jle    0x14000b8f8
   14000b8d9:	cmp    eax,0x6
   14000b8dc:	jg     0x14000b914
   14000b8de:	cmp    DWORD PTR [rdi],0x0
   14000b8e1:	mov    rax,rdi
   14000b8e4:	je     0x14000b8ef
   14000b8e6:	add    rax,0x4
   14000b8ea:	cmp    DWORD PTR [rax],0x0
   14000b8ed:	jne    0x14000b8e6
   14000b8ef:	sub    rax,rdi
   14000b8f2:	add    rsp,0x20
   14000b8f6:	pop    rdi
   14000b8f7:	ret    
   14000b8f8:	cmp    WORD PTR [rdi],0x0
   14000b8fc:	mov    rax,rdi
   14000b8ff:	je     0x14000b90b
   14000b901:	add    rax,0x2
   14000b905:	cmp    WORD PTR [rax],0x0
   14000b909:	jne    0x14000b901
   14000b90b:	sub    rax,rdi
   14000b90e:	add    rsp,0x20
   14000b912:	pop    rdi
   14000b913:	ret    
   14000b914:	xor    eax,eax
   14000b916:	or     rcx,0xffffffffffffffff
   14000b91a:	repnz scas al,BYTE PTR es:[rdi]
   14000b91c:	not    rcx
   14000b91f:	lea    rax,[rcx-0x1]
   14000b923:	add    rsp,0x20
   14000b927:	pop    rdi
   14000b928:	ret    
   14000b929:	int3   
   14000b92a:	int3   
   14000b92b:	int3   
   14000b92c:	int3   
   14000b92d:	int3   
   14000b92e:	int3   
   14000b92f:	int3   
   14000b930:	mov    QWORD PTR [rsp+0x8],rbx
   14000b935:	push   rdi
   14000b936:	sub    rsp,0x30
   14000b93a:	mov    rdi,rcx
   14000b93d:	mov    ecx,r8d
   14000b940:	mov    rbx,rdx
   14000b943:	call   0x14000fcf0
   14000b948:	cmp    rbx,0xffffffffffffffff
   14000b94c:	jne    0x14000b95b
   14000b94e:	mov    edx,eax
   14000b950:	mov    rcx,rdi
   14000b953:	call   0x14000b8c0
   14000b958:	mov    rbx,rax
   14000b95b:	lea    rdx,[rip+0x32dce]        # 0x14003e730
   14000b962:	lea    rcx,[rip+0x331c7]        # 0x14003eb30
   14000b969:	mov    r9,rbx
   14000b96c:	mov    r8,rdi
   14000b96f:	mov    QWORD PTR [rsp+0x20],0x0
   14000b978:	call   0x14003bd90
   14000b97d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b982:	add    rsp,0x30
   14000b986:	pop    rdi
   14000b987:	ret    
   14000b988:	int3   
   14000b989:	int3   
   14000b98a:	int3   
   14000b98b:	int3   
   14000b98c:	int3   
   14000b98d:	int3   
   14000b98e:	int3   
   14000b98f:	int3   
   14000b990:	mov    QWORD PTR [rsp+0x10],rbx
   14000b995:	push   rdi
   14000b996:	sub    rsp,0x20
   14000b99a:	mov    rbx,rdx
   14000b99d:	mov    rdi,rcx
   14000b9a0:	test   rcx,rcx
   14000b9a3:	jne    0x14000b9b2
   14000b9a5:	xor    eax,eax
   14000b9a7:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b9ac:	add    rsp,0x20
   14000b9b0:	pop    rdi
   14000b9b1:	ret    
   14000b9b2:	mov    ecx,r8d
   14000b9b5:	mov    QWORD PTR [rsp+0x30],rsi
   14000b9ba:	call   0x14000fcf0
   14000b9bf:	mov    esi,eax
   14000b9c1:	cmp    rbx,0xffffffffffffffff
   14000b9c5:	jne    0x14000b9d4
   14000b9c7:	mov    edx,eax
   14000b9c9:	mov    rcx,rdi
   14000b9cc:	call   0x14000b8c0
   14000b9d1:	mov    rbx,rax
   14000b9d4:	xor    r9d,r9d
   14000b9d7:	mov    r8d,esi
   14000b9da:	mov    rdx,rbx
   14000b9dd:	mov    rcx,rdi
   14000b9e0:	call   0x14000be80
   14000b9e5:	test   rax,rax
   14000b9e8:	jne    0x14000ba48
   14000b9ea:	mov    r8d,esi
   14000b9ed:	mov    rdx,rbx
   14000b9f0:	mov    rcx,rdi
   14000b9f3:	call   0x14000b930
   14000b9f8:	mov    ecx,esi
   14000b9fa:	mov    rbx,rax
   14000b9fd:	call   0x14000fd60
   14000ba02:	lea    r8,[rip+0x331bf]        # 0x14003ebc8
   14000ba09:	test   rbx,rbx
   14000ba0c:	lea    rdx,[rip+0x3319d]        # 0x14003ebb0
   14000ba13:	lea    rcx,[rip+0x33156]        # 0x14003eb70
   14000ba1a:	mov    r9,rax
   14000ba1d:	cmovne r8,rbx
   14000ba21:	call   0x14003bd30
   14000ba26:	mov    rcx,rbx
   14000ba29:	call   0x14002b36c
   14000ba2e:	lea    rdx,[rip+0x33113]        # 0x14003eb48
   14000ba35:	lea    rcx,[rip+0x330fc]        # 0x14003eb38
   14000ba3c:	mov    r8d,0x149
   14000ba42:	call   0x140001050
   14000ba47:	int3   
   14000ba48:	mov    rsi,QWORD PTR [rsp+0x30]
   14000ba4d:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ba52:	add    rsp,0x20
   14000ba56:	pop    rdi
   14000ba57:	ret    
   14000ba58:	int3   
   14000ba59:	int3   
   14000ba5a:	int3   
   14000ba5b:	int3   
   14000ba5c:	int3   
   14000ba5d:	int3   
   14000ba5e:	int3   
   14000ba5f:	int3   
   14000ba60:	mov    QWORD PTR [rsp+0x10],rbx
   14000ba65:	push   rdi
   14000ba66:	sub    rsp,0x20
   14000ba6a:	mov    rbx,rdx
   14000ba6d:	mov    rdi,rcx
   14000ba70:	test   rcx,rcx
   14000ba73:	jne    0x14000ba82
   14000ba75:	mov    al,0x1
   14000ba77:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ba7c:	add    rsp,0x20
   14000ba80:	pop    rdi
   14000ba81:	ret    
   14000ba82:	mov    ecx,r8d
   14000ba85:	mov    QWORD PTR [rsp+0x30],rsi
   14000ba8a:	call   0x14000fcf0
   14000ba8f:	mov    esi,eax
   14000ba91:	cmp    eax,0x7
   14000ba94:	jne    0x14000bab3
   14000ba96:	mov    r8d,eax
   14000ba99:	mov    rdx,rbx
   14000ba9c:	mov    rcx,rdi
   14000ba9f:	mov    rsi,QWORD PTR [rsp+0x30]
   14000baa4:	mov    rbx,QWORD PTR [rsp+0x38]
   14000baa9:	add    rsp,0x20
   14000baad:	pop    rdi
   14000baae:	jmp    0x14000b870
   14000bab3:	cmp    rbx,0xffffffffffffffff
   14000bab7:	jne    0x14000bac6
   14000bab9:	mov    edx,eax
   14000babb:	mov    rcx,rdi
   14000babe:	call   0x14000b8c0
   14000bac3:	mov    rbx,rax
   14000bac6:	mov    ecx,esi
   14000bac8:	call   0x14000fd60
   14000bacd:	mov    rdx,rbx
   14000bad0:	mov    rcx,rdi
   14000bad3:	mov    r8,rax
   14000bad6:	mov    rsi,QWORD PTR [rsp+0x30]
   14000badb:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bae0:	add    rsp,0x20
   14000bae4:	pop    rdi
   14000bae5:	jmp    0x140009a60
   14000baea:	int3   
   14000baeb:	int3   
   14000baec:	int3   
   14000baed:	int3   
   14000baee:	int3   
   14000baef:	int3   
   14000baf0:	mov    QWORD PTR [rsp+0x8],rbx
   14000baf5:	mov    QWORD PTR [rsp+0x18],rbp
   14000bafa:	mov    QWORD PTR [rsp+0x20],rsi
   14000baff:	push   rdi
   14000bb00:	push   r12
   14000bb02:	push   r13
   14000bb04:	push   r14
   14000bb06:	push   r15
   14000bb08:	sub    rsp,0x50
   14000bb0c:	mov    rsi,rcx
   14000bb0f:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000bb16:	xor    eax,eax
   14000bb18:	mov    r15,r9
   14000bb1b:	mov    r14,r8
   14000bb1e:	mov    r12,rdx
   14000bb21:	xor    bpl,bpl
   14000bb24:	mov    rbx,rax
   14000bb27:	call   0x14000fcf0
   14000bb2c:	mov    r13d,eax
   14000bb2f:	mov    ecx,eax
   14000bb31:	test   eax,eax
   14000bb33:	je     0x14000bbfd
   14000bb39:	sub    ecx,0x1
   14000bb3c:	je     0x14000bc3b
   14000bb42:	cmp    ecx,0x6
   14000bb45:	je     0x14000bbe3
   14000bb4b:	mov    ecx,eax
   14000bb4d:	call   0x14000fd60
   14000bb52:	or     rcx,0xffffffffffffffff
   14000bb56:	mov    rdi,r12
   14000bb59:	mov    r9,rax
   14000bb5c:	xor    eax,eax
   14000bb5e:	mov    rdx,r12
   14000bb61:	repnz scas al,BYTE PTR es:[rdi]
   14000bb63:	lea    rax,[rsp+0x88]
   14000bb6b:	not    rcx
   14000bb6e:	mov    QWORD PTR [rsp+0x30],rax
   14000bb73:	lea    rax,[rsp+0x40]
   14000bb78:	lea    r8,[rcx-0x1]
   14000bb7c:	xor    ecx,ecx
   14000bb7e:	mov    QWORD PTR [rsp+0x28],rax
   14000bb83:	mov    DWORD PTR [rsp+0x20],ecx
   14000bb87:	lea    rcx,[rip+0x32ad2]        # 0x14003e660
   14000bb8e:	call   0x1400098a0
   14000bb93:	test   al,al
   14000bb95:	je     0x14000bd2d
   14000bb9b:	mov    rax,QWORD PTR [rsp+0x88]
   14000bba3:	mov    rdi,QWORD PTR [rsp+0x40]
   14000bba8:	lea    rbx,[r14-0x1]
   14000bbac:	cmp    rax,rbx
   14000bbaf:	mov    rdx,rdi
   14000bbb2:	mov    rcx,rsi
   14000bbb5:	cmovb  rbx,rax
   14000bbb9:	mov    r8,rbx
   14000bbbc:	call   0x14002b9a0
   14000bbc1:	mov    rcx,rdi
   14000bbc4:	call   0x14002b36c
   14000bbc9:	mov    BYTE PTR [rbx+rsi*1],bpl
   14000bbcd:	cmp    rbx,QWORD PTR [rsp+0x88]
   14000bbd5:	jb     0x14000bd2d
   14000bbdb:	mov    bpl,0x1
   14000bbde:	jmp    0x14000bd2d
   14000bbe3:	mov    r8d,0x7
   14000bbe9:	or     rdx,0xffffffffffffffff
   14000bbed:	mov    rcx,r12
   14000bbf0:	call   0x14000b870
   14000bbf5:	test   al,al
   14000bbf7:	je     0x14000bd2d
   14000bbfd:	or     rcx,0xffffffffffffffff
   14000bc01:	xor    eax,eax
   14000bc03:	lea    rbx,[r14-0x1]
   14000bc07:	mov    rdi,r12
   14000bc0a:	mov    rdx,r12
   14000bc0d:	repnz scas al,BYTE PTR es:[rdi]
   14000bc0f:	not    rcx
   14000bc12:	dec    rcx
   14000bc15:	cmp    rcx,rbx
   14000bc18:	mov    rdi,rcx
   14000bc1b:	cmovb  rbx,rcx
   14000bc1f:	mov    rcx,rsi
   14000bc22:	mov    r8,rbx
   14000bc25:	call   0x14002b9a0
   14000bc2a:	cmp    rbx,rdi
   14000bc2d:	jb     0x14000bce7
   14000bc33:	mov    bpl,0x1
   14000bc36:	jmp    0x14000bd29
   14000bc3b:	or     rcx,0xffffffffffffffff
   14000bc3f:	xor    eax,eax
   14000bc41:	mov    rdi,r12
   14000bc44:	repnz scas al,BYTE PTR es:[rdi]
   14000bc46:	lea    r9,[rsp+0x88]
   14000bc4e:	lea    r8,[rsp+0x40]
   14000bc53:	not    rcx
   14000bc56:	lea    rdx,[rcx-0x1]
   14000bc5a:	mov    rcx,r12
   14000bc5d:	call   0x140009b90
   14000bc62:	test   al,al
   14000bc64:	jne    0x14000bc80
   14000bc66:	lea    rdx,[rip+0x32f7b]        # 0x14003ebe8
   14000bc6d:	lea    rcx,[rip+0x327ac]        # 0x14003e420
   14000bc74:	mov    r8d,0x209
   14000bc7a:	call   0x140001050
   14000bc7f:	int3   
   14000bc80:	mov    rax,QWORD PTR [rsp+0x88]
   14000bc88:	mov    r12,QWORD PTR [rsp+0x40]
   14000bc8d:	lea    rdi,[r14-0x2]
   14000bc91:	cmp    rax,rdi
   14000bc94:	mov    rdx,r12
   14000bc97:	mov    rcx,rsi
   14000bc9a:	cmovb  rdi,rax
   14000bc9e:	mov    r8,rdi
   14000bca1:	call   0x14002b9a0
   14000bca6:	shr    rdi,1
   14000bca9:	je     0x14000bcc0
   14000bcab:	lea    rbx,[rdi+rdi*1-0x2]
   14000bcb0:	movzx  eax,WORD PTR [rbx+rsi*1]
   14000bcb4:	and    eax,0xfffffc00
   14000bcb9:	cmp    eax,0xd800
   14000bcbe:	je     0x14000bcc4
   14000bcc0:	lea    rbx,[rdi+rdi*1]
   14000bcc4:	xor    ecx,ecx
   14000bcc6:	mov    rax,rbx
   14000bcc9:	shr    rax,1
   14000bccc:	mov    WORD PTR [rsi+rax*2],cx
   14000bcd0:	mov    rcx,r12
   14000bcd3:	call   0x14002b36c
   14000bcd8:	cmp    rbx,QWORD PTR [rsp+0x88]
   14000bce0:	jb     0x14000bd2d
   14000bce2:	mov    bpl,0x1
   14000bce5:	jmp    0x14000bd2d
   14000bce7:	test   r13d,r13d
   14000bcea:	jne    0x14000bd29
   14000bcec:	mov    rdx,rbx
   14000bcef:	test   rbx,rbx
   14000bcf2:	je     0x14000bd26
   14000bcf4:	lea    rdx,[rbx-0x1]
   14000bcf8:	test   rdx,rdx
   14000bcfb:	je     0x14000bd10
   14000bcfd:	nop    DWORD PTR [rax]
   14000bd00:	movzx  eax,BYTE PTR [rdx+rsi*1]
   14000bd04:	and    al,0xc0
   14000bd06:	cmp    al,0x80
   14000bd08:	jne    0x14000bd10
   14000bd0a:	sub    rdx,0x1
   14000bd0e:	jne    0x14000bd00
   14000bd10:	movzx  eax,BYTE PTR [rdx+rsi*1]
   14000bd14:	test   al,al
   14000bd16:	jns    0x14000bd29
   14000bd18:	movzx  ecx,dl
   14000bd1b:	sub    cl,bl
   14000bd1d:	add    cl,0x7
   14000bd20:	sar    al,cl
   14000bd22:	cmp    al,0xfe
   14000bd24:	je     0x14000bd29
   14000bd26:	mov    rbx,rdx
   14000bd29:	mov    BYTE PTR [rbx+rsi*1],0x0
   14000bd2d:	test   r15,r15
   14000bd30:	je     0x14000bd35
   14000bd32:	mov    QWORD PTR [r15],rbx
   14000bd35:	lea    r11,[rsp+0x50]
   14000bd3a:	mov    al,bpl
   14000bd3d:	mov    rbx,QWORD PTR [r11+0x30]
   14000bd41:	mov    rbp,QWORD PTR [r11+0x40]
   14000bd45:	mov    rsi,QWORD PTR [r11+0x48]
   14000bd49:	mov    rsp,r11
   14000bd4c:	pop    r15
   14000bd4e:	pop    r14
   14000bd50:	pop    r13
   14000bd52:	pop    r12
   14000bd54:	pop    rdi
   14000bd55:	ret    
   14000bd56:	int3   
   14000bd57:	int3   
   14000bd58:	int3   
   14000bd59:	int3   
   14000bd5a:	int3   
   14000bd5b:	int3   
   14000bd5c:	int3   
   14000bd5d:	int3   
   14000bd5e:	int3   
   14000bd5f:	int3   
   14000bd60:	mov    QWORD PTR [rsp+0x10],rbx
   14000bd65:	mov    QWORD PTR [rsp+0x18],rbp
   14000bd6a:	mov    QWORD PTR [rsp+0x20],rsi
   14000bd6f:	push   rdi
   14000bd70:	sub    rsp,0x40
   14000bd74:	mov    rsi,rcx
   14000bd77:	mov    ecx,edx
   14000bd79:	mov    rbp,r9
   14000bd7c:	mov    rdi,r8
   14000bd7f:	mov    QWORD PTR [rsp+0x50],0x0
   14000bd88:	call   0x14000fcf0
   14000bd8d:	mov    ebx,eax
   14000bd8f:	cmp    rdi,0xffffffffffffffff
   14000bd93:	jne    0x14000bda2
   14000bd95:	xor    edx,edx
   14000bd97:	mov    rcx,rsi
   14000bd9a:	call   0x14000b8c0
   14000bd9f:	mov    rdi,rax
   14000bda2:	mov    edx,ebx
   14000bda4:	test   ebx,ebx
   14000bda6:	je     0x14000be00
   14000bda8:	sub    edx,0x1
   14000bdab:	je     0x14000be40
   14000bdb1:	cmp    edx,0x6
   14000bdb4:	je     0x14000bdeb
   14000bdb6:	mov    ecx,ebx
   14000bdb8:	call   0x14000fd60
   14000bdbd:	mov    QWORD PTR [rsp+0x30],rbp
   14000bdc2:	lea    rcx,[rip+0x32897]        # 0x14003e660
   14000bdc9:	mov    r9,rax
   14000bdcc:	lea    rax,[rsp+0x50]
   14000bdd1:	mov    r8,rdi
   14000bdd4:	mov    QWORD PTR [rsp+0x28],rax
   14000bdd9:	mov    rdx,rsi
   14000bddc:	mov    DWORD PTR [rsp+0x20],0x0
   14000bde4:	call   0x1400098a0
   14000bde9:	jmp    0x14000be26
   14000bdeb:	mov    r8d,0x7
   14000bdf1:	mov    rdx,rdi
   14000bdf4:	mov    rcx,rsi
   14000bdf7:	call   0x14000b870
   14000bdfc:	test   al,al
   14000bdfe:	je     0x14000be26
   14000be00:	lea    rcx,[rdi+0x1]
   14000be04:	call   0x140009c70
   14000be09:	lea    r8,[rdi+0x1]
   14000be0d:	mov    rdx,rsi
   14000be10:	mov    rcx,rax
   14000be13:	mov    QWORD PTR [rsp+0x50],rax
   14000be18:	call   0x14002b9a0
   14000be1d:	test   rbp,rbp
   14000be20:	je     0x14000be26
   14000be22:	mov    QWORD PTR [rbp+0x0],rdi
   14000be26:	mov    rax,QWORD PTR [rsp+0x50]
   14000be2b:	mov    rbx,QWORD PTR [rsp+0x58]
   14000be30:	mov    rbp,QWORD PTR [rsp+0x60]
   14000be35:	mov    rsi,QWORD PTR [rsp+0x68]
   14000be3a:	add    rsp,0x40
   14000be3e:	pop    rdi
   14000be3f:	ret    
   14000be40:	lea    r8,[rsp+0x50]
   14000be45:	mov    r9,rbp
   14000be48:	mov    rdx,rdi
   14000be4b:	mov    rcx,rsi
   14000be4e:	call   0x140009b90
   14000be53:	test   al,al
   14000be55:	jne    0x14000be26
   14000be57:	lea    rdx,[rip+0x32d8a]        # 0x14003ebe8
   14000be5e:	lea    rcx,[rip+0x325bb]        # 0x14003e420
   14000be65:	mov    r8d,0x2c5
   14000be6b:	call   0x140001050
   14000be70:	int3   
   14000be71:	int3   
   14000be72:	int3   
   14000be73:	int3   
   14000be74:	int3   
   14000be75:	int3   
   14000be76:	int3   
   14000be77:	int3   
   14000be78:	int3   
   14000be79:	int3   
   14000be7a:	int3   
   14000be7b:	int3   
   14000be7c:	int3   
   14000be7d:	int3   
   14000be7e:	int3   
   14000be7f:	int3   
   14000be80:	mov    QWORD PTR [rsp+0x8],rbx
   14000be85:	mov    QWORD PTR [rsp+0x10],rsi
   14000be8a:	push   rdi
   14000be8b:	sub    rsp,0x50
   14000be8f:	xor    esi,esi
   14000be91:	mov    rdi,rcx
   14000be94:	mov    rbx,rdx
   14000be97:	mov    ecx,r8d
   14000be9a:	mov    QWORD PTR [rsp+0x40],rsi
   14000be9f:	test   r9b,r9b
   14000bea2:	jne    0x14000bec5
   14000bea4:	call   0x14000fd60
   14000bea9:	mov    QWORD PTR [rsp+0x30],rsi
   14000beae:	mov    rcx,rax
   14000beb1:	lea    rax,[rsp+0x40]
   14000beb6:	mov    QWORD PTR [rsp+0x28],rax
   14000bebb:	mov    DWORD PTR [rsp+0x20],0x1
   14000bec3:	jmp    0x14000bef2
   14000bec5:	test   r8d,r8d
   14000bec8:	je     0x14000bf18
   14000beca:	sub    ecx,0x1
   14000becd:	je     0x14000bf06
   14000becf:	cmp    ecx,0x6
   14000bed2:	je     0x14000bf18
   14000bed4:	mov    ecx,r8d
   14000bed7:	call   0x14000fd60
   14000bedc:	mov    QWORD PTR [rsp+0x30],rsi
   14000bee1:	mov    rcx,rax
   14000bee4:	lea    rax,[rsp+0x40]
   14000bee9:	mov    QWORD PTR [rsp+0x28],rax
   14000beee:	mov    DWORD PTR [rsp+0x20],esi
   14000bef2:	lea    r9,[rip+0x32767]        # 0x14003e660
   14000bef9:	mov    r8,rbx
   14000befc:	mov    rdx,rdi
   14000beff:	call   0x1400098a0
   14000bf04:	jmp    0x14000bf34
   14000bf06:	lea    r8,[rsp+0x40]
   14000bf0b:	xor    r9d,r9d
   14000bf0e:	mov    rcx,rdi
   14000bf11:	call   0x140009970
   14000bf16:	jmp    0x14000bf34
   14000bf18:	mov    rcx,rdi
   14000bf1b:	call   0x14000ba60
   14000bf20:	test   al,al
   14000bf22:	je     0x14000bf34
   14000bf24:	mov    rdx,rbx
   14000bf27:	mov    rcx,rdi
   14000bf2a:	call   0x140009d40
   14000bf2f:	mov    QWORD PTR [rsp+0x40],rax
   14000bf34:	mov    rax,QWORD PTR [rsp+0x40]
   14000bf39:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bf3e:	mov    rsi,QWORD PTR [rsp+0x68]
   14000bf43:	add    rsp,0x50
   14000bf47:	pop    rdi
   14000bf48:	ret    
   14000bf49:	int3   
   14000bf4a:	int3   
   14000bf4b:	int3   
   14000bf4c:	int3   
   14000bf4d:	int3   
   14000bf4e:	int3   
   14000bf4f:	int3   
   14000bf50:	test   rcx,rcx
   14000bf53:	jne    0x14000bf58
   14000bf55:	xor    eax,eax
   14000bf57:	ret    
   14000bf58:	xor    r9d,r9d
   14000bf5b:	or     r8,0xffffffffffffffff
   14000bf5f:	jmp    0x14000bd60
   14000bf64:	int3   
   14000bf65:	int3   
   14000bf66:	int3   
   14000bf67:	int3   
   14000bf68:	int3   
   14000bf69:	int3   
   14000bf6a:	int3   
   14000bf6b:	int3   
   14000bf6c:	int3   
   14000bf6d:	int3   
   14000bf6e:	int3   
   14000bf6f:	int3   
   14000bf70:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf75:	mov    QWORD PTR [rsp+0x10],rsi
   14000bf7a:	push   rdi
   14000bf7b:	sub    rsp,0x20
   14000bf7f:	mov    rcx,QWORD PTR [rip+0x5c402]        # 0x140068388
   14000bf86:	xor    edi,edi
   14000bf88:	test   rcx,rcx
   14000bf8b:	je     0x14000bf99
   14000bf8d:	call   0x140010850
   14000bf92:	mov    QWORD PTR [rip+0x5c3ef],rdi        # 0x140068388
   14000bf99:	lea    rbx,[rip+0x5c390]        # 0x140068330
   14000bfa0:	lea    rsi,[rip+0x5c3d9]        # 0x140068380
   14000bfa7:	mov    rcx,QWORD PTR [rbx]
   14000bfaa:	test   rcx,rcx
   14000bfad:	je     0x14000bfc0
   14000bfaf:	call   0x14000ff20
   14000bfb4:	mov    QWORD PTR [rbx],rdi
   14000bfb7:	add    rbx,0x8
   14000bfbb:	cmp    rbx,rsi
   14000bfbe:	jl     0x14000bfa7
   14000bfc0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bfc5:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bfca:	mov    al,0x1
   14000bfcc:	mov    BYTE PTR [rip+0x5c3ad],dil        # 0x140068380
   14000bfd3:	add    rsp,0x20
   14000bfd7:	pop    rdi
   14000bfd8:	ret    
   14000bfd9:	int3   
   14000bfda:	int3   
   14000bfdb:	int3   
   14000bfdc:	int3   
   14000bfdd:	int3   
   14000bfde:	int3   
   14000bfdf:	int3   
   14000bfe0:	mov    QWORD PTR [rsp+0x10],rbp
   14000bfe5:	mov    QWORD PTR [rsp+0x18],rsi
   14000bfea:	push   rdi
   14000bfeb:	push   r12
   14000bfed:	push   r13
   14000bfef:	sub    rsp,0x20
   14000bff3:	mov    rsi,rcx
   14000bff6:	mov    rcx,r8
   14000bff9:	mov    r12,r8
   14000bffc:	movzx  r13d,dl
   14000c000:	call   0x14000fea0
   14000c005:	xor    dil,dil
   14000c008:	cmp    DWORD PTR [r12],0x0
   14000c00d:	mov    rbp,rax
   14000c010:	jle    0x14000c019
   14000c012:	xor    al,al
   14000c014:	jmp    0x14000c0ab
   14000c019:	mov    rdx,rsi
   14000c01c:	mov    rcx,rax
   14000c01f:	mov    QWORD PTR [rsp+0x40],rbx
   14000c024:	call   0x14000fe60
   14000c029:	xor    ecx,ecx
   14000c02b:	call   0x140010c20
   14000c030:	lea    r9,[rip+0x5c2f9]        # 0x140068330
   14000c037:	xor    ebx,ebx
   14000c039:	mov    rcx,r9
   14000c03c:	lea    r8,[rip+0x5c33d]        # 0x140068380
   14000c043:	mov    rdx,QWORD PTR [rcx]
   14000c046:	test   rdx,rdx
   14000c049:	je     0x14000c062
   14000c04b:	mov    rax,QWORD PTR [rsi+0x8]
   14000c04f:	cmp    QWORD PTR [rdx+0x8],rax
   14000c053:	je     0x14000c07d
   14000c055:	add    rcx,0x8
   14000c059:	inc    ebx
   14000c05b:	cmp    rcx,r8
   14000c05e:	jl     0x14000c043
   14000c060:	jmp    0x14000c07d
   14000c062:	movsxd rax,ebx
   14000c065:	lea    rdx,[rip+0xffffffffffffff04]        # 0x14000bf70
   14000c06c:	mov    ecx,0x12
   14000c071:	mov    QWORD PTR [r9+rax*8],rbp
   14000c075:	call   0x140010de0
   14000c07a:	mov    dil,0x1
   14000c07d:	xor    ecx,ecx
   14000c07f:	call   0x140010a80
   14000c084:	cmp    ebx,0xa
   14000c087:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c08c:	jne    0x14000c09b
   14000c08e:	test   r13b,r13b
   14000c091:	je     0x14000c09b
   14000c093:	mov    DWORD PTR [r12],0xffffff81
   14000c09b:	test   dil,dil
   14000c09e:	jne    0x14000c0a8
   14000c0a0:	mov    rcx,rbp
   14000c0a3:	call   0x140010a40
   14000c0a8:	mov    al,dil
   14000c0ab:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c0b0:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c0b5:	add    rsp,0x20
   14000c0b9:	pop    r13
   14000c0bb:	pop    r12
   14000c0bd:	pop    rdi
   14000c0be:	ret    
   14000c0bf:	int3   
   14000c0c0:	rex push rbx
   14000c0c2:	sub    rsp,0x20
   14000c0c6:	mov    rbx,rcx
   14000c0c9:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c0cd:	call   0x14000ff20
   14000c0d2:	mov    rcx,QWORD PTR [rbx]
   14000c0d5:	call   0x140010a40
   14000c0da:	mov    rcx,rbx
   14000c0dd:	add    rsp,0x20
   14000c0e1:	pop    rbx
   14000c0e2:	jmp    0x140010a40
   14000c0e7:	int3   
   14000c0e8:	int3   
   14000c0e9:	int3   
   14000c0ea:	int3   
   14000c0eb:	int3   
   14000c0ec:	int3   
   14000c0ed:	int3   
   14000c0ee:	int3   
   14000c0ef:	int3   
   14000c0f0:	rex push rdi
   14000c0f2:	sub    rsp,0x20
   14000c0f6:	mov    rax,QWORD PTR [rip+0x5c28b]        # 0x140068388
   14000c0fd:	xor    edi,edi
   14000c0ff:	mov    DWORD PTR [rsp+0x30],edi
   14000c103:	test   rax,rax
   14000c106:	jne    0x14000c1a1
   14000c10c:	lea    r9,[rsp+0x30]
   14000c111:	lea    rdx,[rip+0x46f8]        # 0x140010810
   14000c118:	lea    rcx,[rip+0x4681]        # 0x1400107a0
   14000c11f:	xor    r8d,r8d
   14000c122:	mov    QWORD PTR [rsp+0x38],rbx
   14000c127:	call   0x140010650
   14000c12c:	mov    rbx,rax
   14000c12f:	test   rax,rax
   14000c132:	jne    0x14000c13f
   14000c134:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c139:	add    rsp,0x20
   14000c13d:	pop    rdi
   14000c13e:	ret    
   14000c13f:	lea    rdx,[rip+0xffffffffffffff7a]        # 0x14000c0c0
   14000c146:	mov    rcx,rax
   14000c149:	call   0x1400106b0
   14000c14e:	xor    ecx,ecx
   14000c150:	call   0x140010c20
   14000c155:	cmp    QWORD PTR [rip+0x5c22c],rdi        # 0x140068388
   14000c15c:	jne    0x14000c179
   14000c15e:	mov    QWORD PTR [rip+0x5c223],rbx        # 0x140068388
   14000c165:	lea    rdx,[rip+0xfffffffffffffe04]        # 0x14000bf70
   14000c16c:	mov    ecx,0x12
   14000c171:	mov    rbx,rdi
   14000c174:	call   0x140010de0
   14000c179:	xor    ecx,ecx
   14000c17b:	call   0x140010a80
   14000c180:	test   rbx,rbx
   14000c183:	je     0x14000c18d
   14000c185:	mov    rcx,rbx
   14000c188:	call   0x140010850
   14000c18d:	mov    rax,QWORD PTR [rip+0x5c1f4]        # 0x140068388
   14000c194:	cmp    DWORD PTR [rsp+0x30],edi
   14000c198:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c19d:	cmovg  rax,rdi
   14000c1a1:	add    rsp,0x20
   14000c1a5:	pop    rdi
   14000c1a6:	ret    
   14000c1a7:	int3   
   14000c1a8:	int3   
   14000c1a9:	int3   
   14000c1aa:	int3   
   14000c1ab:	int3   
   14000c1ac:	int3   
   14000c1ad:	int3   
   14000c1ae:	int3   
   14000c1af:	int3   
   14000c1b0:	mov    QWORD PTR [rsp+0x20],rbp
   14000c1b5:	push   rdi
   14000c1b6:	push   r12
   14000c1b8:	push   r13
   14000c1ba:	sub    rsp,0x20
   14000c1be:	xor    r12d,r12d
   14000c1c1:	mov    rbp,r8
   14000c1c4:	mov    rdi,rdx
   14000c1c7:	cmp    DWORD PTR [r8],r12d
   14000c1ca:	mov    r13,rcx
   14000c1cd:	mov    DWORD PTR [rsp+0x50],r12d
   14000c1d2:	jle    0x14000c1e5
   14000c1d4:	xor    eax,eax
   14000c1d6:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c1db:	add    rsp,0x20
   14000c1df:	pop    r13
   14000c1e1:	pop    r12
   14000c1e3:	pop    rdi
   14000c1e4:	ret    
   14000c1e5:	mov    ecx,0x10
   14000c1ea:	mov    QWORD PTR [rsp+0x48],rsi
   14000c1ef:	call   0x140010940
   14000c1f4:	mov    rsi,rax
   14000c1f7:	test   rax,rax
   14000c1fa:	jne    0x14000c208
   14000c1fc:	mov    DWORD PTR [rbp+0x0],0x7
   14000c203:	jmp    0x14000c336
   14000c208:	mov    rcx,rbp
   14000c20b:	call   0x14000fea0
   14000c210:	mov    QWORD PTR [rsi+0x8],rax
   14000c214:	cmp    DWORD PTR [rbp+0x0],r12d
   14000c218:	jle    0x14000c229
   14000c21a:	mov    rcx,rsi
   14000c21d:	call   0x140010a40
   14000c222:	xor    eax,eax
   14000c224:	jmp    0x14000c336
   14000c229:	mov    rdx,rdi
   14000c22c:	mov    rcx,rax
   14000c22f:	mov    QWORD PTR [rsp+0x40],rbx
   14000c234:	call   0x14000fe60
   14000c239:	mov    edx,0x5c
   14000c23e:	mov    rcx,r13
   14000c241:	call   0x14002b010
   14000c246:	test   rax,rax
   14000c249:	jne    0x14000c250
   14000c24b:	mov    rbx,r13
   14000c24e:	jmp    0x14000c254
   14000c250:	lea    rbx,[rax+0x1]
   14000c254:	or     rcx,0xffffffffffffffff
   14000c258:	xor    eax,eax
   14000c25a:	mov    rdi,rbx
   14000c25d:	repnz scas al,BYTE PTR es:[rdi]
   14000c25f:	not    rcx
   14000c262:	movsxd rcx,ecx
   14000c265:	call   0x140010940
   14000c26a:	mov    rdx,rax
   14000c26d:	mov    QWORD PTR [rsi],rax
   14000c270:	test   rax,rax
   14000c273:	jne    0x14000c2a0
   14000c275:	mov    DWORD PTR [rbp+0x0],0x7
   14000c27c:	mov    rcx,QWORD PTR [rsi+0x8]
   14000c280:	call   0x140010a40
   14000c285:	mov    rcx,rsi
   14000c288:	call   0x140010a40
   14000c28d:	xor    eax,eax
   14000c28f:	jmp    0x14000c331
   14000c294:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c2a0:	movzx  eax,BYTE PTR [rbx]
   14000c2a3:	inc    rdx
   14000c2a6:	inc    rbx
   14000c2a9:	mov    BYTE PTR [rdx-0x1],al
   14000c2ac:	test   al,al
   14000c2ae:	jne    0x14000c2a0
   14000c2b0:	call   0x14000c0f0
   14000c2b5:	xor    ecx,ecx
   14000c2b7:	mov    rbx,rax
   14000c2ba:	call   0x140010c20
   14000c2bf:	mov    rdx,r13
   14000c2c2:	mov    rcx,rbx
   14000c2c5:	call   0x1400106d0
   14000c2ca:	mov    rdi,rax
   14000c2cd:	test   rax,rax
   14000c2d0:	je     0x14000c2dc
   14000c2d2:	mov    DWORD PTR [rsp+0x50],0xffffff81
   14000c2da:	jmp    0x14000c2ef
   14000c2dc:	mov    rdx,QWORD PTR [rsi]
   14000c2df:	lea    r9,[rsp+0x50]
   14000c2e4:	mov    r8,rsi
   14000c2e7:	mov    rcx,rbx
   14000c2ea:	call   0x140010710
   14000c2ef:	xor    ecx,ecx
   14000c2f1:	call   0x140010a80
   14000c2f6:	mov    edx,DWORD PTR [rsp+0x50]
   14000c2fa:	cmp    edx,0xffffff81
   14000c2fd:	je     0x14000c309
   14000c2ff:	test   edx,edx
   14000c301:	jg     0x14000c309
   14000c303:	mov    rax,QWORD PTR [rsi+0x8]
   14000c307:	jmp    0x14000c331
   14000c309:	mov    DWORD PTR [rbp+0x0],edx
   14000c30c:	mov    rcx,QWORD PTR [rsi]
   14000c30f:	call   0x140010a40
   14000c314:	mov    rcx,QWORD PTR [rsi+0x8]
   14000c318:	call   0x140010a40
   14000c31d:	mov    rcx,rsi
   14000c320:	call   0x140010a40
   14000c325:	test   rdi,rdi
   14000c328:	je     0x14000c32e
   14000c32a:	mov    r12,QWORD PTR [rdi+0x8]
   14000c32e:	mov    rax,r12
   14000c331:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c336:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c33b:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c340:	add    rsp,0x20
   14000c344:	pop    r13
   14000c346:	pop    r12
   14000c348:	pop    rdi
   14000c349:	ret    
   14000c34a:	int3   
   14000c34b:	int3   
   14000c34c:	int3   
   14000c34d:	int3   
   14000c34e:	int3   
   14000c34f:	int3   
   14000c350:	mov    QWORD PTR [rsp+0x10],rbx
   14000c355:	mov    QWORD PTR [rsp+0x18],rbp
   14000c35a:	mov    QWORD PTR [rsp+0x20],rsi
   14000c35f:	push   rdi
   14000c360:	sub    rsp,0x20
   14000c364:	mov    rbx,rcx
   14000c367:	or     rcx,0xffffffffffffffff
   14000c36b:	xor    eax,eax
   14000c36d:	mov    rdi,rdx
   14000c370:	mov    rsi,rdx
   14000c373:	repnz scas al,BYTE PTR es:[rdi]
   14000c375:	not    rcx
   14000c378:	lea    rbp,[rcx-0x1]
   14000c37c:	add    ebp,DWORD PTR [rbx+0x8]
   14000c37f:	cmp    ebp,DWORD PTR [rbx+0x70]
   14000c382:	jl     0x14000c3dd
   14000c384:	mov    QWORD PTR [rsp+0x30],r12
   14000c389:	lea    r12d,[rbp+rbp*1+0x0]
   14000c38e:	lea    eax,[r12+0x1]
   14000c393:	movsxd rcx,eax
   14000c396:	call   0x140010940
   14000c39b:	mov    rdi,rax
   14000c39e:	test   rax,rax
   14000c3a1:	je     0x14000c3d8
   14000c3a3:	mov    rdx,QWORD PTR [rbx]
   14000c3a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c3b0:	movzx  ecx,BYTE PTR [rdx]
   14000c3b3:	inc    rax
   14000c3b6:	inc    rdx
   14000c3b9:	mov    BYTE PTR [rax-0x1],cl
   14000c3bc:	test   cl,cl
   14000c3be:	jne    0x14000c3b0
   14000c3c0:	mov    rcx,QWORD PTR [rbx]
   14000c3c3:	lea    rax,[rbx+0xc]
   14000c3c7:	cmp    rcx,rax
   14000c3ca:	je     0x14000c3d1
   14000c3cc:	call   0x140010a40
   14000c3d1:	mov    QWORD PTR [rbx],rdi
   14000c3d4:	mov    DWORD PTR [rbx+0x70],r12d
   14000c3d8:	mov    r12,QWORD PTR [rsp+0x30]
   14000c3dd:	cmp    ebp,DWORD PTR [rbx+0x70]
   14000c3e0:	jge    0x14000c412
   14000c3e2:	movsxd rdi,DWORD PTR [rbx+0x8]
   14000c3e6:	xor    eax,eax
   14000c3e8:	or     rcx,0xffffffffffffffff
   14000c3ec:	add    rdi,QWORD PTR [rbx]
   14000c3ef:	repnz scas al,BYTE PTR es:[rdi]
   14000c3f1:	xor    ecx,ecx
   14000c3f3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c400:	movzx  eax,BYTE PTR [rsi+rcx*1]
   14000c404:	inc    rcx
   14000c407:	mov    BYTE PTR [rdi+rcx*1-0x2],al
   14000c40b:	test   al,al
   14000c40d:	jne    0x14000c400
   14000c40f:	mov    DWORD PTR [rbx+0x8],ebp
   14000c412:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c417:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c41c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c421:	add    rsp,0x20
   14000c425:	pop    rdi
   14000c426:	ret    
   14000c427:	int3   
   14000c428:	int3   
   14000c429:	int3   
   14000c42a:	int3   
   14000c42b:	int3   
   14000c42c:	int3   
   14000c42d:	int3   
   14000c42e:	int3   
   14000c42f:	int3   
   14000c430:	mov    QWORD PTR [rsp+0x10],rbx
   14000c435:	mov    QWORD PTR [rsp+0x18],rbp
   14000c43a:	push   rsi
   14000c43b:	sub    rsp,0x20
   14000c43f:	mov    rbp,r9
   14000c442:	mov    rsi,r8
   14000c445:	mov    rbx,rcx
   14000c448:	test   rdx,rdx
   14000c44b:	jne    0x14000c457
   14000c44d:	call   0x14000db30
   14000c452:	mov    QWORD PTR [rbx],rax
   14000c455:	jmp    0x14000c45a
   14000c457:	mov    QWORD PTR [rcx],rdx
   14000c45a:	mov    QWORD PTR [rsp+0x30],rdi
   14000c45f:	test   rsi,rsi
   14000c462:	jne    0x14000c47d
   14000c464:	lea    rax,[rbx+0x140]
   14000c46b:	mov    DWORD PTR [rbx+0x1c0],esi
   14000c471:	mov    QWORD PTR [rbx+0x138],rax
   14000c478:	mov    BYTE PTR [rax],sil
   14000c47b:	jmp    0x14000c4fb
   14000c47d:	or     rcx,0xffffffffffffffff
   14000c481:	xor    eax,eax
   14000c483:	mov    rdi,rsi
   14000c486:	repnz scas al,BYTE PTR es:[rdi]
   14000c488:	not    rcx
   14000c48b:	inc    rcx
   14000c48e:	cmp    rcx,0x80
   14000c495:	jbe    0x14000c4ae
   14000c497:	call   0x140010940
   14000c49c:	mov    QWORD PTR [rbx+0x138],rax
   14000c4a3:	test   rax,rax
   14000c4a6:	je     0x14000c626
   14000c4ac:	jmp    0x14000c4bc
   14000c4ae:	lea    rax,[rbx+0x140]
   14000c4b5:	mov    QWORD PTR [rbx+0x138],rax
   14000c4bc:	mov    rax,QWORD PTR [rbx+0x138]
   14000c4c3:	mov    BYTE PTR [rax],0x5c
   14000c4c6:	mov    rcx,QWORD PTR [rbx+0x138]
   14000c4cd:	inc    rcx
   14000c4d0:	movzx  eax,BYTE PTR [rsi]
   14000c4d3:	inc    rcx
   14000c4d6:	inc    rsi
   14000c4d9:	mov    BYTE PTR [rcx-0x1],al
   14000c4dc:	test   al,al
   14000c4de:	jne    0x14000c4d0
   14000c4e0:	mov    rdi,QWORD PTR [rbx+0x138]
   14000c4e7:	or     rcx,0xffffffffffffffff
   14000c4eb:	xor    eax,eax
   14000c4ed:	repnz scas al,BYTE PTR es:[rdi]
   14000c4ef:	not    rcx
   14000c4f2:	dec    rcx
   14000c4f5:	mov    DWORD PTR [rbx+0x1c0],ecx
   14000c4fb:	mov    edx,0x5c
   14000c500:	mov    rcx,rbp
   14000c503:	call   0x14002b010
   14000c508:	test   rax,rax
   14000c50b:	jne    0x14000c512
   14000c50d:	mov    rdx,rbp
   14000c510:	jmp    0x14000c516
   14000c512:	lea    rdx,[rax+0x1]
   14000c516:	or     rcx,0xffffffffffffffff
   14000c51a:	xor    eax,eax
   14000c51c:	mov    rdi,rdx
   14000c51f:	mov    QWORD PTR [rbx+0x10],rdx
   14000c523:	repnz scas al,BYTE PTR es:[rdi]
   14000c525:	lea    rax,[rbx+0x30]
   14000c529:	not    rcx
   14000c52c:	mov    QWORD PTR [rbx+0x28],rax
   14000c530:	dec    rcx
   14000c533:	mov    DWORD PTR [rbx+0x20],ecx
   14000c536:	cmp    rdx,rbp
   14000c539:	jne    0x14000c547
   14000c53b:	mov    BYTE PTR [rax],0x0
   14000c53e:	mov    rax,QWORD PTR [rbx]
   14000c541:	mov    QWORD PTR [rbx+0x8],rax
   14000c545:	jmp    0x14000c58d
   14000c547:	mov    edi,edx
   14000c549:	sub    edi,ebp
   14000c54b:	cmp    edi,0x80
   14000c551:	jl     0x14000c56b
   14000c553:	lea    eax,[rdi+0x1]
   14000c556:	movsxd rcx,eax
   14000c559:	call   0x140010940
   14000c55e:	test   rax,rax
   14000c561:	je     0x14000c569
   14000c563:	mov    QWORD PTR [rbx+0x28],rax
   14000c567:	jmp    0x14000c56b
   14000c569:	xor    edi,edi
   14000c56b:	mov    rcx,QWORD PTR [rbx+0x28]
   14000c56f:	movsxd rdi,edi
   14000c572:	mov    rdx,rbp
   14000c575:	mov    r8,rdi
   14000c578:	call   0x14002b0d0
   14000c57d:	mov    rdx,QWORD PTR [rbx+0x28]
   14000c581:	mov    BYTE PTR [rdi+rdx*1],0x0
   14000c585:	mov    rax,QWORD PTR [rbx+0x28]
   14000c589:	mov    QWORD PTR [rbx+0x8],rax
   14000c58d:	mov    rax,QWORD PTR [rsp+0x50]
   14000c592:	lea    rsi,[rip+0x30ec3]        # 0x14003d45c
   14000c599:	test   rax,rax
   14000c59c:	je     0x14000c5a4
   14000c59e:	mov    QWORD PTR [rbx+0x18],rax
   14000c5a2:	jmp    0x14000c5a8
   14000c5a4:	mov    QWORD PTR [rbx+0x18],rsi
   14000c5a8:	movzx  eax,BYTE PTR [rsp+0x58]
   14000c5ad:	mov    rdi,QWORD PTR [rbx]
   14000c5b0:	or     rcx,0xffffffffffffffff
   14000c5b4:	mov    BYTE PTR [rbx+0x1c4],al
   14000c5ba:	xor    eax,eax
   14000c5bc:	repnz scas al,BYTE PTR es:[rdi]
   14000c5be:	mov    rdi,QWORD PTR [rbx+0x18]
   14000c5c2:	not    rcx
   14000c5c5:	lea    rdx,[rcx-0x1]
   14000c5c9:	or     rcx,0xffffffffffffffff
   14000c5cd:	repnz scas al,BYTE PTR es:[rdi]
   14000c5cf:	mov    rdi,rbp
   14000c5d2:	not    rcx
   14000c5d5:	dec    rcx
   14000c5d8:	add    edx,ecx
   14000c5da:	or     rcx,0xffffffffffffffff
   14000c5de:	repnz scas al,BYTE PTR es:[rdi]
   14000c5e0:	mov    eax,DWORD PTR [rbx+0x1c0]
   14000c5e6:	lea    rdi,[rbx+0xb8]
   14000c5ed:	not    rcx
   14000c5f0:	mov    QWORD PTR [rbx+0xb0],rdi
   14000c5f7:	dec    rcx
   14000c5fa:	add    edx,ecx
   14000c5fc:	lea    ecx,[rdx+rax*1+0x3]
   14000c600:	cmp    ecx,0x80
   14000c606:	jl     0x14000c626
   14000c608:	movsxd rcx,ecx
   14000c60b:	call   0x140010940
   14000c610:	mov    QWORD PTR [rbx+0xb0],rax
   14000c617:	test   rax,rax
   14000c61a:	jne    0x14000c626
   14000c61c:	mov    QWORD PTR [rbx+0xb0],rdi
   14000c623:	mov    QWORD PTR [rbx],rsi
   14000c626:	mov    rdi,QWORD PTR [rsp+0x30]
   14000c62b:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c630:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c635:	add    rsp,0x20
   14000c639:	pop    rsi
   14000c63a:	ret    
   14000c63b:	int3   
   14000c63c:	int3   
   14000c63d:	int3   
   14000c63e:	int3   
   14000c63f:	int3   
   14000c640:	mov    QWORD PTR [rsp+0x18],rbx
   14000c645:	push   rbp
   14000c646:	sub    rsp,0x20
   14000c64a:	mov    QWORD PTR [rsp+0x30],rsi
   14000c64f:	mov    rbx,rcx
   14000c652:	mov    QWORD PTR [rsp+0x38],rdi
   14000c657:	nop    WORD PTR [rax+rax*1+0x0]
   14000c660:	mov    rbp,QWORD PTR [rbx+0x8]
   14000c664:	test   rbp,rbp
   14000c667:	je     0x14000c7c2
   14000c66d:	cmp    rbp,QWORD PTR [rbx+0x28]
   14000c671:	jne    0x14000c68e
   14000c673:	mov    rax,QWORD PTR [rbx]
   14000c676:	or     rcx,0xffffffffffffffff
   14000c67a:	mov    rdi,rbp
   14000c67d:	mov    QWORD PTR [rbx+0x8],rax
   14000c681:	xor    eax,eax
   14000c683:	repnz scas al,BYTE PTR es:[rdi]
   14000c685:	not    rcx
   14000c688:	lea    rsi,[rcx-0x1]
   14000c68c:	jmp    0x14000c6c5
   14000c68e:	mov    edx,0x3b
   14000c693:	mov    rcx,rbp
   14000c696:	call   0x14002e1c0
   14000c69b:	mov    QWORD PTR [rbx+0x8],rax
   14000c69f:	test   rax,rax
   14000c6a2:	jne    0x14000c6b5
   14000c6a4:	or     rcx,0xffffffffffffffff
   14000c6a8:	mov    rdi,rbp
   14000c6ab:	repnz scas al,BYTE PTR es:[rdi]
   14000c6ad:	not    rcx
   14000c6b0:	lea    esi,[rcx-0x1]
   14000c6b3:	jmp    0x14000c6c5
   14000c6b5:	mov    esi,eax
   14000c6b7:	sub    esi,ebp
   14000c6b9:	cmp    BYTE PTR [rax],0x0
   14000c6bc:	je     0x14000c6c5
   14000c6be:	inc    rax
   14000c6c1:	mov    QWORD PTR [rbx+0x8],rax
   14000c6c5:	test   esi,esi
   14000c6c7:	je     0x14000c7b8
   14000c6cd:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000c6d4:	mov    r8d,esi
   14000c6d7:	mov    rdx,rbp
   14000c6da:	mov    edi,esi
   14000c6dc:	call   0x14002b0d0
   14000c6e1:	mov    rdx,QWORD PTR [rbx+0xb0]
   14000c6e8:	mov    BYTE PTR [rdi+rdx*1],0x0
   14000c6ec:	mov    rbp,QWORD PTR [rbx+0xb0]
   14000c6f3:	mov    edx,0x5c
   14000c6f8:	mov    rcx,rbp
   14000c6fb:	call   0x14002b010
   14000c700:	test   rax,rax
   14000c703:	je     0x14000c709
   14000c705:	lea    rbp,[rax+0x1]
   14000c709:	cmp    BYTE PTR [rbx+0x1c4],0x1
   14000c710:	jne    0x14000c783
   14000c712:	cmp    esi,0x4
   14000c715:	jb     0x14000c783
   14000c717:	mov    rdx,QWORD PTR [rbx+0x18]
   14000c71b:	lea    ecx,[rsi-0x4]
   14000c71e:	mov    r8d,0x4
   14000c724:	add    rcx,QWORD PTR [rbx+0xb0]
   14000c72b:	call   0x14002e1f0
   14000c730:	test   eax,eax
   14000c732:	jne    0x14000c783
   14000c734:	mov    rdi,QWORD PTR [rbx+0xb0]
   14000c73b:	lea    edx,[rax+0x5c]
   14000c73e:	mov    rcx,rdi
   14000c741:	call   0x14002b010
   14000c746:	test   rax,rax
   14000c749:	je     0x14000c74f
   14000c74b:	lea    rdi,[rax+0x1]
   14000c74f:	mov    r8d,DWORD PTR [rbx+0x20]
   14000c753:	mov    rdx,QWORD PTR [rbx+0x10]
   14000c757:	mov    rcx,rdi
   14000c75a:	call   0x14002e1f0
   14000c75f:	test   eax,eax
   14000c761:	jne    0x14000c783
   14000c763:	xor    eax,eax
   14000c765:	or     rcx,0xffffffffffffffff
   14000c769:	mov    rdi,rbp
   14000c76c:	repnz scas al,BYTE PTR es:[rdi]
   14000c76e:	mov    eax,DWORD PTR [rbx+0x20]
   14000c771:	not    rcx
   14000c774:	add    eax,0x4
   14000c777:	dec    rcx
   14000c77a:	cmp    rcx,rax
   14000c77d:	je     0x14000c880
   14000c783:	mov    rdx,QWORD PTR [rbx+0xb0]
   14000c78a:	lea    eax,[rsi-0x1]
   14000c78d:	cmp    BYTE PTR [rax+rdx*1],0x5c
   14000c791:	je     0x14000c82b
   14000c797:	cmp    esi,0x4
   14000c79a:	jb     0x14000c7d9
   14000c79c:	lea    ecx,[rsi-0x4]
   14000c79f:	mov    r8d,0x4
   14000c7a5:	add    rcx,rdx
   14000c7a8:	lea    rdx,[rip+0x32461]        # 0x14003ec10
   14000c7af:	call   0x14002e1f0
   14000c7b4:	test   eax,eax
   14000c7b6:	jne    0x14000c7d9
   14000c7b8:	cmp    QWORD PTR [rbx],0x0
   14000c7bc:	jne    0x14000c660
   14000c7c2:	xor    eax,eax
   14000c7c4:	mov    rdi,QWORD PTR [rsp+0x38]
   14000c7c9:	mov    rsi,QWORD PTR [rsp+0x30]
   14000c7ce:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c7d3:	add    rsp,0x20
   14000c7d7:	pop    rbp
   14000c7d8:	ret    
   14000c7d9:	mov    r8d,DWORD PTR [rbx+0x1c0]
   14000c7e0:	test   r8d,r8d
   14000c7e3:	je     0x14000c81c
   14000c7e5:	cmp    esi,r8d
   14000c7e8:	jbe    0x14000c81c
   14000c7ea:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000c7f1:	mov    rdi,QWORD PTR [rbx+0x138]
   14000c7f8:	mov    eax,esi
   14000c7fa:	sub    rcx,r8
   14000c7fd:	add    rcx,rax
   14000c800:	sub    rdi,rcx
   14000c803:	movzx  edx,BYTE PTR [rcx]
   14000c806:	movzx  eax,BYTE PTR [rcx+rdi*1]
   14000c80a:	sub    edx,eax
   14000c80c:	jne    0x14000c815
   14000c80e:	inc    rcx
   14000c811:	test   eax,eax
   14000c813:	jne    0x14000c803
   14000c815:	test   edx,edx
   14000c817:	jne    0x14000c81c
   14000c819:	sub    esi,r8d
   14000c81c:	mov    rax,QWORD PTR [rbx+0xb0]
   14000c823:	mov    ecx,esi
   14000c825:	inc    esi
   14000c827:	mov    BYTE PTR [rcx+rax*1],0x5c
   14000c82b:	mov    r8d,DWORD PTR [rbx+0x1c0]
   14000c832:	mov    rdx,QWORD PTR [rbx+0x138]
   14000c839:	mov    ecx,esi
   14000c83b:	add    rcx,QWORD PTR [rbx+0xb0]
   14000c842:	dec    r8d
   14000c845:	inc    rdx
   14000c848:	call   0x14002b0d0
   14000c84d:	mov    rdi,QWORD PTR [rbx+0x18]
   14000c851:	cmp    BYTE PTR [rdi],0x0
   14000c854:	je     0x14000c880
   14000c856:	mov    eax,DWORD PTR [rbx+0x1c0]
   14000c85c:	lea    edx,[rax+rsi*1-0x1]
   14000c860:	add    rdx,QWORD PTR [rbx+0xb0]
   14000c867:	nop    WORD PTR [rax+rax*1+0x0]
   14000c870:	movzx  eax,BYTE PTR [rdi]
   14000c873:	inc    rdx
   14000c876:	inc    rdi
   14000c879:	mov    BYTE PTR [rdx-0x1],al
   14000c87c:	test   al,al
   14000c87e:	jne    0x14000c870
   14000c880:	mov    rax,QWORD PTR [rbx+0xb0]
   14000c887:	jmp    0x14000c7c4
   14000c88c:	int3   
   14000c88d:	int3   
   14000c88e:	int3   
   14000c88f:	int3   
   14000c890:	rex push rbx
   14000c892:	push   rsi
   14000c893:	push   r12
   14000c895:	sub    rsp,0x250
   14000c89c:	mov    rax,QWORD PTR [rip+0x5a00d]        # 0x1400668b0
   14000c8a3:	xor    rax,rsp
   14000c8a6:	mov    QWORD PTR [rsp+0x240],rax
   14000c8ae:	cmp    DWORD PTR [r8],0x0
   14000c8b2:	mov    rsi,r8
   14000c8b5:	mov    ebx,edx
   14000c8b7:	mov    r12,rcx
   14000c8ba:	jle    0x14000c8c3
   14000c8bc:	xor    eax,eax
   14000c8be:	jmp    0x14000ca6f
   14000c8c3:	lea    rcx,[rsp+0x30]
   14000c8c8:	call   0x14000fe30
   14000c8cd:	test   ebx,ebx
   14000c8cf:	js     0x14000c8d6
   14000c8d1:	cmp    ebx,0xa
   14000c8d4:	jge    0x14000c8bc
   14000c8d6:	mov    edx,0x5c
   14000c8db:	mov    rcx,r12
   14000c8de:	mov    QWORD PTR [rsp+0x288],rdi
   14000c8e6:	call   0x14002b010
   14000c8eb:	test   rax,rax
   14000c8ee:	jne    0x14000c8f5
   14000c8f0:	mov    rdi,r12
   14000c8f3:	jmp    0x14000c8f9
   14000c8f5:	lea    rdi,[rax+0x1]
   14000c8f9:	cmp    BYTE PTR [rdi],0x0
   14000c8fc:	je     0x14000ca40
   14000c902:	mov    edx,0x5c
   14000c907:	mov    rcx,rdi
   14000c90a:	mov    QWORD PTR [rsp+0x278],rbp
   14000c912:	call   0x14002b010
   14000c917:	test   rax,rax
   14000c91a:	jne    0x14000c921
   14000c91c:	mov    rbp,rdi
   14000c91f:	jmp    0x14000c925
   14000c921:	lea    rbp,[rax+0x1]
   14000c925:	call   0x14000c0f0
   14000c92a:	xor    ecx,ecx
   14000c92c:	mov    rbx,rax
   14000c92f:	call   0x140010c20
   14000c934:	mov    rdx,rbp
   14000c937:	mov    rcx,rbx
   14000c93a:	call   0x1400106d0
   14000c93f:	xor    ecx,ecx
   14000c941:	mov    rbx,rax
   14000c944:	call   0x140010a80
   14000c949:	mov    rbp,QWORD PTR [rsp+0x278]
   14000c951:	test   rbx,rbx
   14000c954:	je     0x14000c963
   14000c956:	mov    rax,QWORD PTR [rbx+0x8]
   14000c95a:	test   rax,rax
   14000c95d:	jne    0x14000ca67
   14000c963:	call   0x14000db30
   14000c968:	lea    rcx,[rsp+0x70]
   14000c96d:	mov    r9,r12
   14000c970:	mov    rdx,rax
   14000c973:	lea    rax,[rip+0x32296]        # 0x14003ec10
   14000c97a:	mov    r8,rdi
   14000c97d:	mov    BYTE PTR [rsp+0x28],0x1
   14000c982:	mov    QWORD PTR [rsp+0x20],rax
   14000c987:	call   0x14000c430
   14000c98c:	lea    rcx,[rsp+0x30]
   14000c991:	call   0x14000ffb0
   14000c996:	test   al,al
   14000c998:	jne    0x14000c9ca
   14000c99a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c9a0:	lea    rcx,[rsp+0x70]
   14000c9a5:	call   0x14000c640
   14000c9aa:	test   rax,rax
   14000c9ad:	je     0x14000c9ca
   14000c9af:	lea    rcx,[rsp+0x30]
   14000c9b4:	mov    rdx,rax
   14000c9b7:	call   0x1400110e0
   14000c9bc:	lea    rcx,[rsp+0x30]
   14000c9c1:	call   0x14000ffb0
   14000c9c6:	test   al,al
   14000c9c8:	je     0x14000c9a0
   14000c9ca:	mov    rcx,QWORD PTR [rsp+0x98]
   14000c9d2:	lea    rax,[rsp+0xa0]
   14000c9da:	xor    ebx,ebx
   14000c9dc:	cmp    rcx,rax
   14000c9df:	je     0x14000c9ee
   14000c9e1:	call   0x140010a40
   14000c9e6:	mov    QWORD PTR [rsp+0x98],rbx
   14000c9ee:	mov    rcx,QWORD PTR [rsp+0x120]
   14000c9f6:	lea    rax,[rsp+0x128]
   14000c9fe:	cmp    rcx,rax
   14000ca01:	je     0x14000ca10
   14000ca03:	call   0x140010a40
   14000ca08:	mov    QWORD PTR [rsp+0x120],rbx
   14000ca10:	mov    rcx,QWORD PTR [rsp+0x1a8]
   14000ca18:	lea    rax,[rsp+0x1b0]
   14000ca20:	cmp    rcx,rax
   14000ca23:	je     0x14000ca32
   14000ca25:	call   0x140010a40
   14000ca2a:	mov    QWORD PTR [rsp+0x1a8],rbx
   14000ca32:	lea    rcx,[rsp+0x30]
   14000ca37:	call   0x14000ffb0
   14000ca3c:	test   al,al
   14000ca3e:	jne    0x14000ca4a
   14000ca40:	mov    DWORD PTR [rsi],0x4
   14000ca46:	xor    eax,eax
   14000ca48:	jmp    0x14000ca67
   14000ca4a:	lea    rcx,[rsp+0x30]
   14000ca4f:	mov    rdx,rsi
   14000ca52:	call   0x140011000
   14000ca57:	lea    rdx,[rsp+0x30]
   14000ca5c:	mov    r8,rsi
   14000ca5f:	mov    rcx,rdi
   14000ca62:	call   0x14000c1b0
   14000ca67:	mov    rdi,QWORD PTR [rsp+0x288]
   14000ca6f:	mov    rcx,QWORD PTR [rsp+0x240]
   14000ca77:	xor    rcx,rsp
   14000ca7a:	call   0x14002b250
   14000ca7f:	add    rsp,0x250
   14000ca86:	pop    r12
   14000ca88:	pop    rsi
   14000ca89:	pop    rbx
   14000ca8a:	ret    
   14000ca8b:	int3   
   14000ca8c:	int3   
   14000ca8d:	int3   
   14000ca8e:	int3   
   14000ca8f:	int3   
   14000ca90:	mov    r11,rsp
   14000ca93:	push   rdi
   14000ca94:	sub    rsp,0x290
   14000ca9b:	mov    rax,QWORD PTR [rip+0x59e0e]        # 0x1400668b0
   14000caa2:	xor    rax,rsp
   14000caa5:	mov    QWORD PTR [rsp+0x270],rax
   14000caad:	cmp    BYTE PTR [rip+0x5b8cc],0x0        # 0x140068380
   14000cab4:	mov    rdi,rcx
   14000cab7:	jne    0x14000ccfe
   14000cabd:	mov    QWORD PTR [r11+0x10],rbx
   14000cac1:	mov    QWORD PTR [r11-0x18],r12
   14000cac5:	xor    r12d,r12d
   14000cac8:	cmp    DWORD PTR [rcx],r12d
   14000cacb:	mov    BYTE PTR [rip+0x5b8ae],0x1        # 0x140068380
   14000cad2:	jle    0x14000cadc
   14000cad4:	mov    rbx,r12
   14000cad7:	jmp    0x14000cc96
   14000cadc:	lea    rcx,[rsp+0x30]
   14000cae1:	mov    QWORD PTR [rsp+0x288],rsi
   14000cae9:	call   0x14000fe30
   14000caee:	lea    rcx,[rip+0x31b3b]        # 0x14003e630
   14000caf5:	mov    edx,0x5c
   14000cafa:	call   0x14002b010
   14000caff:	test   rax,rax
   14000cb02:	jne    0x14000cb2a
   14000cb04:	lea    rsi,[rip+0x31b25]        # 0x14003e630
   14000cb0b:	mov    edx,0x5c
   14000cb10:	mov    rcx,rsi
   14000cb13:	mov    QWORD PTR [rsp+0x2b0],rbp
   14000cb1b:	call   0x14002b010
   14000cb20:	test   rax,rax
   14000cb23:	jne    0x14000cb42
   14000cb25:	mov    rbp,rsi
   14000cb28:	jmp    0x14000cb46
   14000cb2a:	cmp    BYTE PTR [rax+0x1],r12b
   14000cb2e:	lea    rsi,[rax+0x1]
   14000cb32:	jne    0x14000cb0b
   14000cb34:	mov    DWORD PTR [rdi],0x4
   14000cb3a:	mov    rbx,r12
   14000cb3d:	jmp    0x14000cc8e
   14000cb42:	lea    rbp,[rax+0x1]
   14000cb46:	call   0x14000c0f0
   14000cb4b:	xor    ecx,ecx
   14000cb4d:	mov    rbx,rax
   14000cb50:	call   0x140010c20
   14000cb55:	mov    rdx,rbp
   14000cb58:	mov    rcx,rbx
   14000cb5b:	call   0x1400106d0
   14000cb60:	xor    ecx,ecx
   14000cb62:	mov    rbx,rax
   14000cb65:	call   0x140010a80
   14000cb6a:	mov    rbp,QWORD PTR [rsp+0x2b0]
   14000cb72:	test   rbx,rbx
   14000cb75:	je     0x14000cb84
   14000cb77:	mov    rbx,QWORD PTR [rbx+0x8]
   14000cb7b:	test   rbx,rbx
   14000cb7e:	jne    0x14000cc8e
   14000cb84:	call   0x14000db30
   14000cb89:	lea    r9,[rip+0x31aa0]        # 0x14003e630
   14000cb90:	lea    rcx,[rsp+0xa0]
   14000cb98:	mov    rdx,rax
   14000cb9b:	lea    rax,[rip+0x3206e]        # 0x14003ec10
   14000cba2:	mov    r8,rsi
   14000cba5:	mov    BYTE PTR [rsp+0x28],0x1
   14000cbaa:	mov    QWORD PTR [rsp+0x20],rax
   14000cbaf:	call   0x14000c430
   14000cbb4:	lea    rcx,[rsp+0x30]
   14000cbb9:	call   0x14000ffb0
   14000cbbe:	test   al,al
   14000cbc0:	jne    0x14000cbef
   14000cbc2:	lea    rcx,[rsp+0xa0]
   14000cbca:	call   0x14000c640
   14000cbcf:	test   rax,rax
   14000cbd2:	je     0x14000cbef
   14000cbd4:	lea    rcx,[rsp+0x30]
   14000cbd9:	mov    rdx,rax
   14000cbdc:	call   0x1400110e0
   14000cbe1:	lea    rcx,[rsp+0x30]
   14000cbe6:	call   0x14000ffb0
   14000cbeb:	test   al,al
   14000cbed:	je     0x14000cbc2
   14000cbef:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000cbf7:	lea    rax,[rsp+0xd0]
   14000cbff:	cmp    rcx,rax
   14000cc02:	je     0x14000cc11
   14000cc04:	call   0x140010a40
   14000cc09:	mov    QWORD PTR [rsp+0xc8],r12
   14000cc11:	mov    rcx,QWORD PTR [rsp+0x150]
   14000cc19:	lea    rax,[rsp+0x158]
   14000cc21:	cmp    rcx,rax
   14000cc24:	je     0x14000cc33
   14000cc26:	call   0x140010a40
   14000cc2b:	mov    QWORD PTR [rsp+0x150],r12
   14000cc33:	mov    rcx,QWORD PTR [rsp+0x1d8]
   14000cc3b:	lea    rax,[rsp+0x1e0]
   14000cc43:	cmp    rcx,rax
   14000cc46:	je     0x14000cc55
   14000cc48:	call   0x140010a40
   14000cc4d:	mov    QWORD PTR [rsp+0x1d8],r12
   14000cc55:	lea    rcx,[rsp+0x30]
   14000cc5a:	call   0x14000ffb0
   14000cc5f:	test   al,al
   14000cc61:	jne    0x14000cc6e
   14000cc63:	mov    DWORD PTR [rdi],0x4
   14000cc69:	mov    rbx,r12
   14000cc6c:	jmp    0x14000cc8e
   14000cc6e:	lea    rcx,[rsp+0x30]
   14000cc73:	mov    rdx,rdi
   14000cc76:	call   0x140011000
   14000cc7b:	lea    rdx,[rsp+0x30]
   14000cc80:	mov    r8,rdi
   14000cc83:	mov    rcx,rsi
   14000cc86:	call   0x14000c1b0
   14000cc8b:	mov    rbx,rax
   14000cc8e:	mov    rsi,QWORD PTR [rsp+0x288]
   14000cc96:	lea    rcx,[rsp+0x68]
   14000cc9b:	call   0x14000fe30
   14000cca0:	test   rbx,rbx
   14000cca3:	je     0x14000ccfa
   14000cca5:	lea    rcx,[rsp+0x68]
   14000ccaa:	mov    rdx,rbx
   14000ccad:	call   0x14000fe60
   14000ccb2:	lea    rcx,[rsp+0x68]
   14000ccb7:	mov    r8,rdi
   14000ccba:	xor    edx,edx
   14000ccbc:	mov    QWORD PTR [rsp+0x90],r12
   14000ccc4:	mov    QWORD PTR [rsp+0x88],r12
   14000cccc:	call   0x14000bfe0
   14000ccd1:	mov    rbx,QWORD PTR [rsp+0x2a8]
   14000ccd9:	mov    r12,QWORD PTR [rsp+0x280]
   14000cce1:	mov    rcx,QWORD PTR [rsp+0x270]
   14000cce9:	xor    rcx,rsp
   14000ccec:	call   0x14002b250
   14000ccf1:	add    rsp,0x290
   14000ccf8:	pop    rdi
   14000ccf9:	ret    
   14000ccfa:	xor    al,al
   14000ccfc:	jmp    0x14000ccd1
   14000ccfe:	xor    al,al
   14000cd00:	jmp    0x14000cce1
   14000cd02:	int3   
   14000cd03:	int3   
   14000cd04:	int3   
   14000cd05:	int3   
   14000cd06:	int3   
   14000cd07:	int3   
   14000cd08:	int3   
   14000cd09:	int3   
   14000cd0a:	int3   
   14000cd0b:	int3   
   14000cd0c:	int3   
   14000cd0d:	int3   
   14000cd0e:	int3   
   14000cd0f:	int3   
   14000cd10:	mov    QWORD PTR [rsp+0x8],rbx
   14000cd15:	mov    QWORD PTR [rsp+0x10],rsi
   14000cd1a:	push   rdi
   14000cd1b:	sub    rsp,0x20
   14000cd1f:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cd24:	xor    ebx,ebx
   14000cd26:	mov    r10,r9
   14000cd29:	cmp    DWORD PTR [rsi],ebx
   14000cd2b:	mov    r11,r8
   14000cd2e:	mov    rax,rdx
   14000cd31:	mov    rdi,rcx
   14000cd34:	jle    0x14000cd48
   14000cd36:	xor    eax,eax
   14000cd38:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cd3d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cd42:	add    rsp,0x20
   14000cd46:	pop    rdi
   14000cd47:	ret    
   14000cd48:	cmp    BYTE PTR [rcx+0x2],0xda
   14000cd4c:	jne    0x14000cd92
   14000cd4e:	cmp    BYTE PTR [rcx+0x3],0x27
   14000cd52:	jne    0x14000cd92
   14000cd54:	test   rdx,rdx
   14000cd57:	je     0x14000cd6e
   14000cd59:	mov    r8,QWORD PTR [rsp+0x50]
   14000cd5e:	lea    r9,[rcx+0x4]
   14000cd62:	mov    rdx,r10
   14000cd65:	mov    rcx,r11
   14000cd68:	call   rax
   14000cd6a:	test   al,al
   14000cd6c:	je     0x14000cd92
   14000cd6e:	mov    rcx,rsi
   14000cd71:	call   0x14000fea0
   14000cd76:	cmp    DWORD PTR [rsi],0x0
   14000cd79:	mov    rbx,rax
   14000cd7c:	jg     0x14000cd36
   14000cd7e:	mov    QWORD PTR [rax+0x8],rdi
   14000cd82:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cd87:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cd8c:	add    rsp,0x20
   14000cd90:	pop    rdi
   14000cd91:	ret    
   14000cd92:	mov    rax,QWORD PTR [rsp+0x58]
   14000cd97:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cd9c:	mov    DWORD PTR [rax],0x3
   14000cda2:	mov    rax,rbx
   14000cda5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cdaa:	add    rsp,0x20
   14000cdae:	pop    rdi
   14000cdaf:	ret    
   14000cdb0:	mov    r11,rsp
   14000cdb3:	push   r12
   14000cdb5:	sub    rsp,0x280
   14000cdbc:	mov    rax,QWORD PTR [rip+0x59aed]        # 0x1400668b0
   14000cdc3:	xor    rax,rsp
   14000cdc6:	mov    QWORD PTR [rsp+0x240],rax
   14000cdce:	mov    QWORD PTR [r11-0x10],rbp
   14000cdd2:	mov    rbp,QWORD PTR [rsp+0x2c0]
   14000cdda:	mov    QWORD PTR [r11-0x18],rsi
   14000cdde:	mov    rsi,QWORD PTR [rsp+0x2d0]
   14000cde6:	mov    QWORD PTR [r11-0x20],rdi
   14000cdea:	mov    rdi,QWORD PTR [rsp+0x2d8]
   14000cdf2:	mov    QWORD PTR [r11-0x28],r13
   14000cdf6:	mov    r13,QWORD PTR [rsp+0x2b0]
   14000cdfe:	mov    QWORD PTR [r11-0x30],r14
   14000ce02:	mov    r14,QWORD PTR [rsp+0x2b8]
   14000ce0a:	mov    QWORD PTR [r11-0x38],r15
   14000ce0e:	mov    r15,QWORD PTR [rsp+0x2c8]
   14000ce16:	xor    r12d,r12d
   14000ce19:	mov    BYTE PTR [rsp+0x28],r12b
   14000ce1e:	mov    QWORD PTR [rsp+0x20],r8
   14000ce23:	mov    r8,rcx
   14000ce26:	lea    rcx,[rsp+0x70]
   14000ce2b:	call   0x14000c430
   14000ce30:	lea    rcx,[rsp+0x70]
   14000ce35:	call   0x14000c640
   14000ce3a:	test   rax,rax
   14000ce3d:	je     0x14000ced8
   14000ce43:	mov    QWORD PTR [rsp+0x298],rbx
   14000ce4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ce50:	lea    rcx,[rsp+0x30]
   14000ce55:	mov    rdx,rax
   14000ce58:	call   0x1400110e0
   14000ce5d:	test   al,al
   14000ce5f:	je     0x14000cfaa
   14000ce65:	cmp    DWORD PTR [rdi],r12d
   14000ce68:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ce6d:	jg     0x14000cf91
   14000ce73:	cmp    BYTE PTR [rbx+0x2],0xda
   14000ce77:	jne    0x14000cf8b
   14000ce7d:	cmp    BYTE PTR [rbx+0x3],0x27
   14000ce81:	jne    0x14000cf8b
   14000ce87:	test   rbp,rbp
   14000ce8a:	je     0x14000cea3
   14000ce8c:	lea    r9,[rbx+0x4]
   14000ce90:	mov    r8,r14
   14000ce93:	mov    rdx,r13
   14000ce96:	mov    rcx,r15
   14000ce99:	call   rbp
   14000ce9b:	test   al,al
   14000ce9d:	je     0x14000cf8b
   14000cea3:	mov    rcx,rdi
   14000cea6:	call   0x14000fea0
   14000ceab:	cmp    DWORD PTR [rdi],r12d
   14000ceae:	mov    r11,rax
   14000ceb1:	jg     0x14000cf91
   14000ceb7:	mov    QWORD PTR [rax+0x8],rbx
   14000cebb:	mov    rax,QWORD PTR [rsp+0x50]
   14000cec0:	mov    r12,r11
   14000cec3:	mov    QWORD PTR [r11+0x20],rax
   14000cec7:	mov    rax,QWORD PTR [rsp+0x58]
   14000cecc:	mov    QWORD PTR [r11+0x28],rax
   14000ced0:	mov    rbx,QWORD PTR [rsp+0x298]
   14000ced8:	mov    rcx,QWORD PTR [rsp+0x98]
   14000cee0:	mov    r15,QWORD PTR [rsp+0x250]
   14000cee8:	mov    r14,QWORD PTR [rsp+0x258]
   14000cef0:	mov    r13,QWORD PTR [rsp+0x260]
   14000cef8:	mov    rdi,QWORD PTR [rsp+0x268]
   14000cf00:	mov    rsi,QWORD PTR [rsp+0x270]
   14000cf08:	mov    rbp,QWORD PTR [rsp+0x278]
   14000cf10:	lea    rax,[rsp+0xa0]
   14000cf18:	cmp    rcx,rax
   14000cf1b:	je     0x14000cf2e
   14000cf1d:	call   0x140010a40
   14000cf22:	mov    QWORD PTR [rsp+0x98],0x0
   14000cf2e:	mov    rcx,QWORD PTR [rsp+0x120]
   14000cf36:	lea    rax,[rsp+0x128]
   14000cf3e:	cmp    rcx,rax
   14000cf41:	je     0x14000cf54
   14000cf43:	call   0x140010a40
   14000cf48:	mov    QWORD PTR [rsp+0x120],0x0
   14000cf54:	mov    rcx,QWORD PTR [rsp+0x1a8]
   14000cf5c:	lea    rax,[rsp+0x1b0]
   14000cf64:	cmp    rcx,rax
   14000cf67:	je     0x14000cf6e
   14000cf69:	call   0x140010a40
   14000cf6e:	mov    rax,r12
   14000cf71:	mov    rcx,QWORD PTR [rsp+0x240]
   14000cf79:	xor    rcx,rsp
   14000cf7c:	call   0x14002b250
   14000cf81:	add    rsp,0x280
   14000cf88:	pop    r12
   14000cf8a:	ret    
   14000cf8b:	mov    DWORD PTR [rsi],0x3
   14000cf91:	lea    rcx,[rsp+0x30]
   14000cf96:	call   0x14000ff20
   14000cf9b:	cmp    DWORD PTR [rdi],r12d
   14000cf9e:	jg     0x14000ced0
   14000cfa4:	mov    DWORD PTR [rsi],0x3
   14000cfaa:	lea    rcx,[rsp+0x70]
   14000cfaf:	call   0x14000c640
   14000cfb4:	test   rax,rax
   14000cfb7:	jne    0x14000ce50
   14000cfbd:	jmp    0x14000ced0
   14000cfc2:	int3   
   14000cfc3:	int3   
   14000cfc4:	int3   
   14000cfc5:	int3   
   14000cfc6:	int3   
   14000cfc7:	int3   
   14000cfc8:	int3   
   14000cfc9:	int3   
   14000cfca:	int3   
   14000cfcb:	int3   
   14000cfcc:	int3   
   14000cfcd:	int3   
   14000cfce:	int3   
   14000cfcf:	int3   
   14000cfd0:	mov    QWORD PTR [rsp+0x10],rbx
   14000cfd5:	mov    QWORD PTR [rsp+0x18],rbp
   14000cfda:	mov    QWORD PTR [rsp+0x20],rsi
   14000cfdf:	push   rdi
   14000cfe0:	push   r12
   14000cfe2:	push   r13
   14000cfe4:	push   r14
   14000cfe6:	push   r15
   14000cfe8:	sub    rsp,0x40
   14000cfec:	mov    r13,QWORD PTR [rsp+0xc8]
   14000cff4:	mov    rsi,QWORD PTR [rsp+0xc0]
   14000cffc:	mov    r14,QWORD PTR [rsp+0xb8]
   14000d004:	mov    r15,QWORD PTR [rsp+0xb0]
   14000d00c:	mov    r12,QWORD PTR [rsp+0x98]
   14000d014:	movzx  eax,cl
   14000d017:	neg    al
   14000d019:	movzx  ebp,cl
   14000d01c:	sbb    edi,edi
   14000d01e:	neg    edi
   14000d020:	dec    edi
   14000d022:	mov    r8,rsi
   14000d025:	mov    edx,edi
   14000d027:	mov    rcx,r12
   14000d02a:	call   0x14000c890
   14000d02f:	cmp    DWORD PTR [rsi],0x0
   14000d032:	mov    rbx,rax
   14000d035:	jg     0x14000d096
   14000d037:	test   rax,rax
   14000d03a:	je     0x14000d096
   14000d03c:	mov    r10,QWORD PTR [rax]
   14000d03f:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d047:	lea    r8,[rsp+0x70]
   14000d04c:	mov    r9,rsi
   14000d04f:	mov    rcx,rax
   14000d052:	call   QWORD PTR [r10]
   14000d055:	test   rax,rax
   14000d058:	je     0x14000d096
   14000d05a:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000d062:	mov    r9,QWORD PTR [rsp+0xa0]
   14000d06a:	mov    QWORD PTR [rsp+0x30],r13
   14000d06f:	mov    QWORD PTR [rsp+0x28],rsi
   14000d074:	mov    QWORD PTR [rsp+0x20],rcx
   14000d079:	mov    r8,r14
   14000d07c:	mov    rcx,rax
   14000d07f:	mov    rdx,r15
   14000d082:	call   0x14000cd10
   14000d087:	cmp    DWORD PTR [r13+0x0],0x0
   14000d08c:	mov    r11,rax
   14000d08f:	jg     0x14000d0b7
   14000d091:	test   rax,rax
   14000d094:	jne    0x14000d0d7
   14000d096:	test   bpl,bpl
   14000d099:	je     0x14000d0b7
   14000d09b:	test   rbx,rbx
   14000d09e:	je     0x14000d0a7
   14000d0a0:	inc    edi
   14000d0a2:	jmp    0x14000d022
   14000d0a7:	mov    rcx,rsi
   14000d0aa:	call   0x14000ca90
   14000d0af:	test   al,al
   14000d0b1:	jne    0x14000d022
   14000d0b7:	xor    eax,eax
   14000d0b9:	lea    r11,[rsp+0x40]
   14000d0be:	mov    rbx,QWORD PTR [r11+0x38]
   14000d0c2:	mov    rbp,QWORD PTR [r11+0x40]
   14000d0c6:	mov    rsi,QWORD PTR [r11+0x48]
   14000d0ca:	mov    rsp,r11
   14000d0cd:	pop    r15
   14000d0cf:	pop    r14
   14000d0d1:	pop    r13
   14000d0d3:	pop    r12
   14000d0d5:	pop    rdi
   14000d0d6:	ret    
   14000d0d7:	mov    eax,DWORD PTR [rsp+0x70]
   14000d0db:	mov    DWORD PTR [r11+0x30],eax
   14000d0df:	mov    rax,r11
   14000d0e2:	jmp    0x14000d0b9
   14000d0e4:	int3   
   14000d0e5:	int3   
   14000d0e6:	int3   
   14000d0e7:	int3   
   14000d0e8:	int3   
   14000d0e9:	int3   
   14000d0ea:	int3   
   14000d0eb:	int3   
   14000d0ec:	int3   
   14000d0ed:	int3   
   14000d0ee:	int3   
   14000d0ef:	int3   
   14000d0f0:	rex push rbx
   14000d0f2:	push   rbp
   14000d0f3:	push   rsi
   14000d0f4:	push   rdi
   14000d0f5:	push   r12
   14000d0f7:	push   r13
   14000d0f9:	push   r14
   14000d0fb:	push   r15
   14000d0fd:	sub    rsp,0x328
   14000d104:	mov    rax,QWORD PTR [rip+0x597a5]        # 0x1400668b0
   14000d10b:	xor    rax,rsp
   14000d10e:	mov    QWORD PTR [rsp+0x310],rax
   14000d116:	mov    rax,QWORD PTR [rsp+0x390]
   14000d11e:	mov    rbp,QWORD PTR [rsp+0x398]
   14000d126:	xor    r14d,r14d
   14000d129:	xor    r13b,r13b
   14000d12c:	mov    QWORD PTR [rsp+0x78],r9
   14000d131:	mov    QWORD PTR [rsp+0x88],r8
   14000d139:	mov    QWORD PTR [rsp+0x70],rax
   14000d13e:	mov    r15,rdx
   14000d141:	mov    QWORD PTR [rsp+0x68],rdx
   14000d146:	mov    rbx,rcx
   14000d149:	mov    r12,r14
   14000d14c:	mov    QWORD PTR [rsp+0x80],r14
   14000d154:	mov    DWORD PTR [rsp+0x64],r14d
   14000d159:	mov    BYTE PTR [rsp+0x60],r13b
   14000d15e:	test   rcx,rcx
   14000d161:	je     0x14000d1a4
   14000d163:	mov    rsi,rcx
   14000d166:	lea    rdi,[rip+0x31ad3]        # 0x14003ec40
   14000d16d:	mov    ecx,0x8
   14000d172:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d174:	je     0x14000d1a4
   14000d176:	lea    r8d,[r14+0x9]
   14000d17a:	lea    rdx,[rip+0x31aaf]        # 0x14003ec30
   14000d181:	mov    rcx,rbx
   14000d184:	call   0x14002e1f0
   14000d189:	test   eax,eax
   14000d18b:	je     0x14000d1a4
   14000d18d:	lea    r8d,[r14+0x8]
   14000d191:	lea    rdx,[rip+0x31a88]        # 0x14003ec20
   14000d198:	mov    rcx,rbx
   14000d19b:	call   0x14002e1f0
   14000d1a0:	test   eax,eax
   14000d1a2:	jne    0x14000d1ac
   14000d1a4:	mov    r13b,0x1
   14000d1a7:	mov    BYTE PTR [rsp+0x60],r13b
   14000d1ac:	lea    rax,[rsp+0x29c]
   14000d1b4:	mov    BYTE PTR [rsp+0x29c],r12b
   14000d1bc:	mov    DWORD PTR [rsp+0x298],r14d
   14000d1c4:	mov    DWORD PTR [rsp+0x300],0x63
   14000d1cf:	mov    QWORD PTR [rsp+0x290],rax
   14000d1d7:	test   rbx,rbx
   14000d1da:	je     0x14000d242
   14000d1dc:	mov    edx,0x2f
   14000d1e1:	mov    rcx,rbx
   14000d1e4:	call   0x14002e1c0
   14000d1e9:	test   rax,rax
   14000d1ec:	je     0x14000d242
   14000d1ee:	lea    rcx,[rsp+0x290]
   14000d1f6:	mov    rdx,rbx
   14000d1f9:	call   0x14000c350
   14000d1fe:	mov    rcx,QWORD PTR [rsp+0x290]
   14000d206:	mov    edx,0x2f
   14000d20b:	call   0x14002e1c0
   14000d210:	test   rax,rax
   14000d213:	je     0x14000d23a
   14000d215:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d220:	mov    BYTE PTR [rax],0x5c
   14000d223:	mov    rcx,QWORD PTR [rsp+0x290]
   14000d22b:	mov    edx,0x2f
   14000d230:	call   0x14002e1c0
   14000d235:	test   rax,rax
   14000d238:	jne    0x14000d220
   14000d23a:	mov    rbx,QWORD PTR [rsp+0x290]
   14000d242:	lea    rax,[rsp+0x11c]
   14000d24a:	mov    DWORD PTR [rsp+0x118],r14d
   14000d252:	mov    DWORD PTR [rsp+0x198],r14d
   14000d25a:	mov    QWORD PTR [rsp+0x110],rax
   14000d262:	lea    rax,[rsp+0x19c]
   14000d26a:	mov    DWORD PTR [rsp+0x98],r14d
   14000d272:	mov    QWORD PTR [rsp+0x190],rax
   14000d27a:	lea    rax,[rsp+0x9c]
   14000d282:	mov    DWORD PTR [rsp+0x218],r14d
   14000d28a:	mov    QWORD PTR [rsp+0x90],rax
   14000d292:	lea    rax,[rsp+0x21c]
   14000d29a:	mov    BYTE PTR [rsp+0x11c],r12b
   14000d2a2:	mov    DWORD PTR [rsp+0x180],0x63
   14000d2ad:	mov    BYTE PTR [rsp+0x19c],r12b
   14000d2b5:	mov    DWORD PTR [rsp+0x200],0x63
   14000d2c0:	mov    QWORD PTR [rsp+0x210],rax
   14000d2c8:	mov    BYTE PTR [rsp+0x9c],r12b
   14000d2d0:	mov    DWORD PTR [rsp+0x100],0x63
   14000d2db:	mov    BYTE PTR [rsp+0x21c],r12b
   14000d2e3:	mov    DWORD PTR [rsp+0x280],0x63
   14000d2ee:	lea    r14,[rip+0x3133b]        # 0x14003e630
   14000d2f5:	test   rbx,rbx
   14000d2f8:	jne    0x14000d30f
   14000d2fa:	lea    rcx,[rsp+0x90]
   14000d302:	mov    rdx,r14
   14000d305:	call   0x14000c350
   14000d30a:	jmp    0x14000d473
   14000d30f:	mov    edx,0x5c
   14000d314:	mov    rcx,rbx
   14000d317:	call   0x14002b010
   14000d31c:	mov    edx,0x5c
   14000d321:	mov    rcx,rbx
   14000d324:	mov    rdi,rax
   14000d327:	call   0x14002e1c0
   14000d32c:	mov    rcx,rbx
   14000d32f:	mov    r15,rax
   14000d332:	call   0x14000db00
   14000d337:	test   al,al
   14000d339:	jne    0x14000d455
   14000d33f:	cmp    rdi,r15
   14000d342:	jne    0x14000d455
   14000d348:	mov    edx,0x2d
   14000d34d:	mov    rcx,rbx
   14000d350:	call   0x14002e1c0
   14000d355:	mov    rdi,rax
   14000d358:	test   rax,rax
   14000d35b:	je     0x14000d443
   14000d361:	lea    rdx,[rax+0x1]
   14000d365:	lea    rcx,[rsp+0x210]
   14000d36d:	call   0x14000c350
   14000d372:	test   r13b,r13b
   14000d375:	je     0x14000d387
   14000d377:	mov    rdx,r14
   14000d37a:	lea    rcx,[rsp+0x90]
   14000d382:	jmp    0x14000d469
   14000d387:	mov    eax,DWORD PTR [rsp+0x98]
   14000d38e:	sub    edi,ebx
   14000d390:	lea    r12d,[rax+rdi*1]
   14000d394:	cmp    r12d,DWORD PTR [rsp+0x100]
   14000d39c:	jl     0x14000d40e
   14000d39e:	lea    esi,[r12+r12*1]
   14000d3a2:	lea    eax,[rsi+0x1]
   14000d3a5:	movsxd rcx,eax
   14000d3a8:	call   0x140010940
   14000d3ad:	mov    r13,rax
   14000d3b0:	test   rax,rax
   14000d3b3:	je     0x14000d3fb
   14000d3b5:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d3bd:	nop    DWORD PTR [rax]
   14000d3c0:	movzx  ecx,BYTE PTR [rdx]
   14000d3c3:	inc    rax
   14000d3c6:	inc    rdx
   14000d3c9:	mov    BYTE PTR [rax-0x1],cl
   14000d3cc:	test   cl,cl
   14000d3ce:	jne    0x14000d3c0
   14000d3d0:	mov    rcx,QWORD PTR [rsp+0x90]
   14000d3d8:	lea    rax,[rsp+0x9c]
   14000d3e0:	cmp    rcx,rax
   14000d3e3:	je     0x14000d3ea
   14000d3e5:	call   0x140010a40
   14000d3ea:	mov    QWORD PTR [rsp+0x90],r13
   14000d3f2:	mov    DWORD PTR [rsp+0x100],esi
   14000d3f9:	jmp    0x14000d402
   14000d3fb:	mov    esi,DWORD PTR [rsp+0x100]
   14000d402:	cmp    r12d,esi
   14000d405:	jge    0x14000d42c
   14000d407:	mov    eax,DWORD PTR [rsp+0x98]
   14000d40e:	movsxd rcx,eax
   14000d411:	movsxd r8,edi
   14000d414:	mov    rdx,rbx
   14000d417:	add    rcx,QWORD PTR [rsp+0x90]
   14000d41f:	call   0x14002bde0
   14000d424:	mov    DWORD PTR [rsp+0x98],r12d
   14000d42c:	mov    r12,QWORD PTR [rsp+0x80]
   14000d434:	test   r15,r15
   14000d437:	jne    0x14000d46e
   14000d439:	mov    rbx,QWORD PTR [rsp+0x90]
   14000d441:	jmp    0x14000d46e
   14000d443:	lea    rcx,[rsp+0x90]
   14000d44b:	test   r13b,r13b
   14000d44e:	je     0x14000d466
   14000d450:	mov    rdx,r14
   14000d453:	jmp    0x14000d469
   14000d455:	lea    rcx,[rsp+0x90]
   14000d45d:	lea    rdx,[rdi+0x1]
   14000d461:	test   rdi,rdi
   14000d464:	jne    0x14000d469
   14000d466:	mov    rdx,rbx
   14000d469:	call   0x14000c350
   14000d46e:	mov    r15,QWORD PTR [rsp+0x68]
   14000d473:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d47b:	lea    rcx,[rsp+0x110]
   14000d483:	call   0x14000c350
   14000d488:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d490:	lea    rcx,[rsp+0x190]
   14000d498:	call   0x14000c350
   14000d49d:	mov    rax,QWORD PTR [rsp+0x210]
   14000d4a5:	movsxd rdi,DWORD PTR [rsp+0x118]
   14000d4ad:	cmp    BYTE PTR [rax],0x0
   14000d4b0:	je     0x14000d504
   14000d4b2:	lea    rdx,[rip+0x31763]        # 0x14003ec1c
   14000d4b9:	lea    rcx,[rsp+0x110]
   14000d4c1:	call   0x14000c350
   14000d4c6:	mov    rdx,QWORD PTR [rsp+0x210]
   14000d4ce:	lea    rcx,[rsp+0x110]
   14000d4d6:	call   0x14000c350
   14000d4db:	lea    rdx,[rip+0x301a2]        # 0x14003d684
   14000d4e2:	lea    rcx,[rsp+0x190]
   14000d4ea:	call   0x14000c350
   14000d4ef:	mov    rdx,QWORD PTR [rsp+0x210]
   14000d4f7:	lea    rcx,[rsp+0x190]
   14000d4ff:	call   0x14000c350
   14000d504:	lea    rdx,[rip+0x31711]        # 0x14003ec1c
   14000d50b:	lea    rcx,[rsp+0x110]
   14000d513:	call   0x14000c350
   14000d518:	lea    rdx,[rip+0x30165]        # 0x14003d684
   14000d51f:	lea    rcx,[rsp+0x190]
   14000d527:	call   0x14000c350
   14000d52c:	mov    r13,QWORD PTR [rsp+0x88]
   14000d534:	lea    rcx,[rsp+0x110]
   14000d53c:	mov    rdx,r13
   14000d53f:	call   0x14000c350
   14000d544:	lea    rcx,[rsp+0x190]
   14000d54c:	mov    rdx,r13
   14000d54f:	call   0x14000c350
   14000d554:	test   r15,r15
   14000d557:	je     0x14000d5a7
   14000d559:	cmp    BYTE PTR [r15],0x0
   14000d55d:	je     0x14000d5a7
   14000d55f:	lea    rdx,[rip+0x316b2]        # 0x14003ec18
   14000d566:	lea    rcx,[rsp+0x110]
   14000d56e:	call   0x14000c350
   14000d573:	lea    rcx,[rsp+0x110]
   14000d57b:	mov    rdx,r15
   14000d57e:	call   0x14000c350
   14000d583:	lea    rdx,[rip+0x3168e]        # 0x14003ec18
   14000d58a:	lea    rcx,[rsp+0x190]
   14000d592:	call   0x14000c350
   14000d597:	lea    rcx,[rsp+0x190]
   14000d59f:	mov    rdx,r15
   14000d5a2:	call   0x14000c350
   14000d5a7:	mov    rsi,rdi
   14000d5aa:	add    rsi,QWORD PTR [rsp+0x190]
   14000d5b2:	test   rbx,rbx
   14000d5b5:	cmovne r14,rbx
   14000d5b9:	call   0x14000db30
   14000d5be:	mov    ecx,DWORD PTR [rip+0x5adcc]        # 0x140068390
   14000d5c4:	movzx  ebx,BYTE PTR [rsp+0x60]
   14000d5c9:	mov    rdi,rax
   14000d5cc:	cmp    ecx,0x2
   14000d5cf:	jne    0x14000d646
   14000d5d1:	mov    rcx,QWORD PTR [rsp+0x110]
   14000d5d9:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d5e1:	mov    QWORD PTR [rsp+0x58],rbp
   14000d5e6:	lea    rax,[rsp+0x64]
   14000d5eb:	mov    r9,rsi
   14000d5ee:	mov    r8,rdi
   14000d5f1:	mov    QWORD PTR [rsp+0x50],rax
   14000d5f6:	mov    rax,QWORD PTR [rsp+0x70]
   14000d5fb:	mov    QWORD PTR [rsp+0x48],rax
   14000d600:	mov    rax,QWORD PTR [rsp+0x78]
   14000d605:	mov    QWORD PTR [rsp+0x40],rax
   14000d60a:	mov    QWORD PTR [rsp+0x38],r13
   14000d60f:	mov    QWORD PTR [rsp+0x30],r15
   14000d614:	mov    QWORD PTR [rsp+0x28],r14
   14000d619:	mov    QWORD PTR [rsp+0x20],rcx
   14000d61e:	movzx  ecx,bl
   14000d621:	call   0x14000cfd0
   14000d626:	mov    r12,rax
   14000d629:	test   rax,rax
   14000d62c:	jne    0x14000d7b3
   14000d632:	cmp    DWORD PTR [rbp+0x0],eax
   14000d635:	jg     0x14000d7b3
   14000d63b:	mov    ecx,DWORD PTR [rip+0x5ad4f]        # 0x140068390
   14000d641:	cmp    ecx,0x2
   14000d644:	je     0x14000d64a
   14000d646:	test   ecx,ecx
   14000d648:	jne    0x14000d6b6
   14000d64a:	test   rdi,rdi
   14000d64d:	je     0x14000d654
   14000d64f:	cmp    BYTE PTR [rdi],0x0
   14000d652:	jne    0x14000d658
   14000d654:	test   bl,bl
   14000d656:	jne    0x14000d6b6
   14000d658:	mov    rcx,QWORD PTR [rsp+0x90]
   14000d660:	mov    QWORD PTR [rsp+0x48],rbp
   14000d665:	lea    rax,[rsp+0x64]
   14000d66a:	mov    QWORD PTR [rsp+0x40],rax
   14000d66f:	mov    rax,QWORD PTR [rsp+0x70]
   14000d674:	mov    r9,r14
   14000d677:	mov    QWORD PTR [rsp+0x38],rax
   14000d67c:	mov    rax,QWORD PTR [rsp+0x78]
   14000d681:	mov    r8,rsi
   14000d684:	mov    QWORD PTR [rsp+0x30],rax
   14000d689:	mov    rdx,rdi
   14000d68c:	mov    QWORD PTR [rsp+0x28],r13
   14000d691:	mov    QWORD PTR [rsp+0x20],r15
   14000d696:	call   0x14000cdb0
   14000d69b:	mov    r12,rax
   14000d69e:	test   rax,rax
   14000d6a1:	jne    0x14000d7b3
   14000d6a7:	cmp    DWORD PTR [rbp+0x0],eax
   14000d6aa:	jg     0x14000d7b3
   14000d6b0:	mov    ecx,DWORD PTR [rip+0x5acda]        # 0x140068390
   14000d6b6:	cmp    ecx,0x1
   14000d6b9:	je     0x14000d6bf
   14000d6bb:	test   ecx,ecx
   14000d6bd:	jne    0x14000d72f
   14000d6bf:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d6c7:	mov    QWORD PTR [rsp+0x58],rbp
   14000d6cc:	lea    rax,[rsp+0x64]
   14000d6d1:	mov    QWORD PTR [rsp+0x50],rax
   14000d6d6:	mov    rax,QWORD PTR [rsp+0x70]
   14000d6db:	mov    r9,rsi
   14000d6de:	mov    QWORD PTR [rsp+0x48],rax
   14000d6e3:	mov    rax,QWORD PTR [rsp+0x78]
   14000d6e8:	mov    r8,rdi
   14000d6eb:	mov    QWORD PTR [rsp+0x40],rax
   14000d6f0:	mov    rax,QWORD PTR [rsp+0x110]
   14000d6f8:	mov    QWORD PTR [rsp+0x38],r13
   14000d6fd:	mov    QWORD PTR [rsp+0x30],r15
   14000d702:	movzx  ecx,bl
   14000d705:	mov    QWORD PTR [rsp+0x28],r14
   14000d70a:	mov    QWORD PTR [rsp+0x20],rax
   14000d70f:	call   0x14000cfd0
   14000d714:	mov    r12,rax
   14000d717:	test   rax,rax
   14000d71a:	jne    0x14000d7b3
   14000d720:	cmp    DWORD PTR [rbp+0x0],eax
   14000d723:	jg     0x14000d7b3
   14000d729:	mov    ecx,DWORD PTR [rip+0x5ac61]        # 0x140068390
   14000d72f:	cmp    ecx,0x3
   14000d732:	jne    0x14000d79c
   14000d734:	mov    rdx,QWORD PTR [rsp+0x90]
   14000d73c:	mov    QWORD PTR [rsp+0x58],rbp
   14000d741:	lea    rax,[rsp+0x64]
   14000d746:	mov    QWORD PTR [rsp+0x50],rax
   14000d74b:	mov    rax,QWORD PTR [rsp+0x70]
   14000d750:	lea    r8,[rip+0x2fd05]        # 0x14003d45c
   14000d757:	mov    QWORD PTR [rsp+0x48],rax
   14000d75c:	mov    rax,QWORD PTR [rsp+0x78]
   14000d761:	mov    r9,rsi
   14000d764:	mov    QWORD PTR [rsp+0x40],rax
   14000d769:	mov    rax,QWORD PTR [rsp+0x110]
   14000d771:	mov    QWORD PTR [rsp+0x38],r13
   14000d776:	mov    QWORD PTR [rsp+0x30],r15
   14000d77b:	movzx  ecx,bl
   14000d77e:	mov    QWORD PTR [rsp+0x28],r14
   14000d783:	mov    QWORD PTR [rsp+0x20],rax
   14000d788:	call   0x14000cfd0
   14000d78d:	mov    r12,rax
   14000d790:	test   rax,rax
   14000d793:	jne    0x14000d7b3
   14000d795:	cmp    DWORD PTR [rbp+0x0],eax
   14000d798:	jle    0x14000d7a2
   14000d79a:	jmp    0x14000d7b3
   14000d79c:	cmp    DWORD PTR [rbp+0x0],0x0
   14000d7a0:	jg     0x14000d7b3
   14000d7a2:	mov    eax,DWORD PTR [rsp+0x64]
   14000d7a6:	mov    ecx,0x4
   14000d7ab:	test   eax,eax
   14000d7ad:	cmovle eax,ecx
   14000d7b0:	mov    DWORD PTR [rbp+0x0],eax
   14000d7b3:	mov    rcx,QWORD PTR [rsp+0x110]
   14000d7bb:	lea    rax,[rsp+0x11c]
   14000d7c3:	cmp    rcx,rax
   14000d7c6:	je     0x14000d7cd
   14000d7c8:	call   0x140010a40
   14000d7cd:	mov    rcx,QWORD PTR [rsp+0x190]
   14000d7d5:	lea    rax,[rsp+0x11c]
   14000d7dd:	xor    edi,edi
   14000d7df:	mov    QWORD PTR [rsp+0x110],rax
   14000d7e7:	lea    rax,[rsp+0x19c]
   14000d7ef:	mov    BYTE PTR [rsp+0x11c],0x0
   14000d7f7:	mov    DWORD PTR [rsp+0x118],edi
   14000d7fe:	mov    DWORD PTR [rsp+0x180],0x63
   14000d809:	cmp    rcx,rax
   14000d80c:	je     0x14000d813
   14000d80e:	call   0x140010a40
   14000d813:	mov    rcx,QWORD PTR [rsp+0x90]
   14000d81b:	lea    rax,[rsp+0x19c]
   14000d823:	mov    BYTE PTR [rsp+0x19c],dil
   14000d82b:	mov    QWORD PTR [rsp+0x190],rax
   14000d833:	lea    rax,[rsp+0x9c]
   14000d83b:	mov    DWORD PTR [rsp+0x198],edi
   14000d842:	mov    DWORD PTR [rsp+0x200],0x63
   14000d84d:	cmp    rcx,rax
   14000d850:	je     0x14000d857
   14000d852:	call   0x140010a40
   14000d857:	mov    rcx,QWORD PTR [rsp+0x210]
   14000d85f:	lea    rax,[rsp+0x9c]
   14000d867:	mov    BYTE PTR [rsp+0x9c],dil
   14000d86f:	mov    QWORD PTR [rsp+0x90],rax
   14000d877:	lea    rax,[rsp+0x21c]
   14000d87f:	mov    DWORD PTR [rsp+0x98],edi
   14000d886:	mov    DWORD PTR [rsp+0x100],0x63
   14000d891:	cmp    rcx,rax
   14000d894:	je     0x14000d89b
   14000d896:	call   0x140010a40
   14000d89b:	mov    rcx,QWORD PTR [rsp+0x290]
   14000d8a3:	lea    rax,[rsp+0x21c]
   14000d8ab:	mov    BYTE PTR [rsp+0x21c],dil
   14000d8b3:	mov    QWORD PTR [rsp+0x210],rax
   14000d8bb:	lea    rax,[rsp+0x29c]
   14000d8c3:	mov    DWORD PTR [rsp+0x218],edi
   14000d8ca:	mov    DWORD PTR [rsp+0x280],0x63
   14000d8d5:	cmp    rcx,rax
   14000d8d8:	je     0x14000d8df
   14000d8da:	call   0x140010a40
   14000d8df:	mov    rax,r12
   14000d8e2:	mov    rcx,QWORD PTR [rsp+0x310]
   14000d8ea:	xor    rcx,rsp
   14000d8ed:	call   0x14002b250
   14000d8f2:	add    rsp,0x328
   14000d8f9:	pop    r15
   14000d8fb:	pop    r14
   14000d8fd:	pop    r13
   14000d8ff:	pop    r12
   14000d901:	pop    rdi
   14000d902:	pop    rsi
   14000d903:	pop    rbp
   14000d904:	pop    rbx
   14000d905:	ret    
   14000d906:	int3   
   14000d907:	int3   
   14000d908:	int3   
   14000d909:	int3   
   14000d90a:	int3   
   14000d90b:	int3   
   14000d90c:	int3   
   14000d90d:	int3   
   14000d90e:	int3   
   14000d90f:	int3   
   14000d910:	sub    rsp,0x38
   14000d914:	mov    rax,QWORD PTR [rsp+0x68]
   14000d919:	test   rax,rax
   14000d91c:	je     0x14000d952
   14000d91e:	cmp    DWORD PTR [rax],0x0
   14000d921:	jg     0x14000d952
   14000d923:	test   r8,r8
   14000d926:	je     0x14000d94c
   14000d928:	cmp    BYTE PTR [r8],0x0
   14000d92c:	je     0x14000d94c
   14000d92e:	test   r9,r9
   14000d931:	je     0x14000d94c
   14000d933:	mov    QWORD PTR [rsp+0x28],rax
   14000d938:	mov    rax,QWORD PTR [rsp+0x60]
   14000d93d:	mov    QWORD PTR [rsp+0x20],rax
   14000d942:	call   0x14000d0f0
   14000d947:	add    rsp,0x38
   14000d94b:	ret    
   14000d94c:	mov    DWORD PTR [rax],0x1
   14000d952:	xor    eax,eax
   14000d954:	add    rsp,0x38
   14000d958:	ret    
   14000d959:	int3   
   14000d95a:	int3   
   14000d95b:	int3   
   14000d95c:	int3   
   14000d95d:	int3   
   14000d95e:	int3   
   14000d95f:	int3   
   14000d960:	test   rdx,rdx
   14000d963:	je     0x14000d9dc
   14000d965:	push   rbx
   14000d966:	sub    rsp,0x20
   14000d96a:	mov    rbx,rdx
   14000d96d:	test   rcx,rcx
   14000d970:	je     0x14000d9de
   14000d972:	mov    rax,QWORD PTR [rcx+0x8]
   14000d976:	test   rax,rax
   14000d979:	je     0x14000d9de
   14000d97b:	mov    QWORD PTR [rsp+0x30],rbp
   14000d980:	lea    rbp,[rax+0x4]
   14000d984:	mov    QWORD PTR [rsp+0x38],rsi
   14000d989:	mov    rcx,rbp
   14000d98c:	mov    QWORD PTR [rsp+0x40],rdi
   14000d991:	call   0x140010e20
   14000d996:	cmp    WORD PTR [rbx],ax
   14000d999:	jbe    0x14000d99e
   14000d99b:	mov    WORD PTR [rbx],ax
   14000d99e:	movzx  eax,WORD PTR [rbx]
   14000d9a1:	lea    rdi,[rbp+0x2]
   14000d9a5:	lea    rcx,[rbx+0x2]
   14000d9a9:	sub    eax,0x2
   14000d9ac:	mov    rdx,rdi
   14000d9af:	movsxd r8,eax
   14000d9b2:	call   0x14002b9a0
   14000d9b7:	cmp    BYTE PTR [rbp+0x4],0x0
   14000d9bb:	mov    rbp,QWORD PTR [rsp+0x30]
   14000d9c0:	je     0x14000d9cd
   14000d9c2:	movzx  eax,WORD PTR [rdi]
   14000d9c5:	rol    ax,0x8
   14000d9c9:	mov    WORD PTR [rbx+0x2],ax
   14000d9cd:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d9d2:	mov    rdi,QWORD PTR [rsp+0x40]
   14000d9d7:	add    rsp,0x20
   14000d9db:	pop    rbx
   14000d9dc:	repz ret 
   14000d9de:	xor    eax,eax
   14000d9e0:	mov    WORD PTR [rdx],ax
   14000d9e3:	add    rsp,0x20
   14000d9e7:	pop    rbx
   14000d9e8:	ret    
   14000d9e9:	int3   
   14000d9ea:	int3   
   14000d9eb:	int3   
   14000d9ec:	int3   
   14000d9ed:	int3   
   14000d9ee:	int3   
   14000d9ef:	int3   
   14000d9f0:	sub    rsp,0x28
   14000d9f4:	mov    rcx,QWORD PTR [rip+0x5a9e5]        # 0x1400683e0
   14000d9fb:	test   rcx,rcx
   14000d9fe:	je     0x14000da0a
   14000da00:	cmp    BYTE PTR [rcx],0x0
   14000da03:	je     0x14000da0a
   14000da05:	call   0x140010a40
   14000da0a:	mov    QWORD PTR [rip+0x5a9cb],0x0        # 0x1400683e0
   14000da15:	mov    al,0x1
   14000da17:	add    rsp,0x28
   14000da1b:	ret    
   14000da1c:	int3   
   14000da1d:	int3   
   14000da1e:	int3   
   14000da1f:	int3   
   14000da20:	mov    QWORD PTR [rsp+0x8],rbx
   14000da25:	push   rdi
   14000da26:	sub    rsp,0x20
   14000da2a:	mov    rbx,rcx
   14000da2d:	test   rcx,rcx
   14000da30:	je     0x14000daa7
   14000da32:	cmp    BYTE PTR [rcx],0x0
   14000da35:	je     0x14000daa7
   14000da37:	or     rcx,0xffffffffffffffff
   14000da3b:	xor    eax,eax
   14000da3d:	mov    rdi,rbx
   14000da40:	repnz scas al,BYTE PTR es:[rdi]
   14000da42:	not    rcx
   14000da45:	lea    rax,[rcx+0x1]
   14000da49:	movsxd rcx,eax
   14000da4c:	call   0x140010940
   14000da51:	mov    rdi,rax
   14000da54:	test   rax,rax
   14000da57:	je     0x14000daea
   14000da5d:	mov    rdx,rax
   14000da60:	sub    rdx,rbx
   14000da63:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000da70:	movzx  ecx,BYTE PTR [rbx]
   14000da73:	inc    rbx
   14000da76:	mov    BYTE PTR [rdx+rbx*1-0x1],cl
   14000da7a:	test   cl,cl
   14000da7c:	jne    0x14000da70
   14000da7e:	mov    edx,0x2f
   14000da83:	mov    rcx,rax
   14000da86:	call   0x14002e1c0
   14000da8b:	test   rax,rax
   14000da8e:	je     0x14000daae
   14000da90:	mov    edx,0x2f
   14000da95:	mov    rcx,rdi
   14000da98:	mov    BYTE PTR [rax],0x5c
   14000da9b:	call   0x14002e1c0
   14000daa0:	test   rax,rax
   14000daa3:	jne    0x14000da90
   14000daa5:	jmp    0x14000daae
   14000daa7:	lea    rdi,[rip+0x2f9ae]        # 0x14003d45c
   14000daae:	xor    ecx,ecx
   14000dab0:	call   0x140010c20
   14000dab5:	mov    rcx,QWORD PTR [rip+0x5a924]        # 0x1400683e0
   14000dabc:	test   rcx,rcx
   14000dabf:	je     0x14000dacb
   14000dac1:	cmp    BYTE PTR [rcx],0x0
   14000dac4:	je     0x14000dacb
   14000dac6:	call   0x140010a40
   14000dacb:	lea    rdx,[rip+0xffffffffffffff1e]        # 0x14000d9f0
   14000dad2:	mov    ecx,0x13
   14000dad7:	mov    QWORD PTR [rip+0x5a902],rdi        # 0x1400683e0
   14000dade:	call   0x140010de0
   14000dae3:	xor    ecx,ecx
   14000dae5:	call   0x140010a80
   14000daea:	mov    rbx,QWORD PTR [rsp+0x30]
   14000daef:	add    rsp,0x20
   14000daf3:	pop    rdi
   14000daf4:	ret    
   14000daf5:	int3   
   14000daf6:	int3   
   14000daf7:	int3   
   14000daf8:	int3   
   14000daf9:	int3   
   14000dafa:	int3   
   14000dafb:	int3   
   14000dafc:	int3   
   14000dafd:	int3   
   14000dafe:	int3   
   14000daff:	int3   
   14000db00:	test   rcx,rcx
   14000db03:	je     0x14000db2d
   14000db05:	movzx  eax,BYTE PTR [rcx]
   14000db08:	test   al,al
   14000db0a:	je     0x14000db2d
   14000db0c:	cmp    al,0x5c
   14000db0e:	jne    0x14000db13
   14000db10:	mov    al,0x1
   14000db12:	ret    
   14000db13:	cmp    al,0x2f
   14000db15:	je     0x14000db10
   14000db17:	cmp    al,0x41
   14000db19:	jl     0x14000db1f
   14000db1b:	cmp    al,0x5a
   14000db1d:	jle    0x14000db27
   14000db1f:	cmp    al,0x61
   14000db21:	jl     0x14000db2d
   14000db23:	cmp    al,0x7a
   14000db25:	jg     0x14000db2d
   14000db27:	cmp    BYTE PTR [rcx+0x1],0x3a
   14000db2b:	je     0x14000db10
   14000db2d:	xor    al,al
   14000db2f:	ret    
   14000db30:	sub    rsp,0x28
   14000db34:	mov    rax,QWORD PTR [rip+0x5a8a5]        # 0x1400683e0
   14000db3b:	test   rax,rax
   14000db3e:	jne    0x14000db66
   14000db40:	lea    rcx,[rip+0x31119]        # 0x14003ec60
   14000db47:	call   0x14002ee94
   14000db4c:	lea    rcx,[rip+0x2f909]        # 0x14003d45c
   14000db53:	test   rax,rax
   14000db56:	cmovne rcx,rax
   14000db5a:	call   0x14000da20
   14000db5f:	mov    rax,QWORD PTR [rip+0x5a87a]        # 0x1400683e0
   14000db66:	add    rsp,0x28
   14000db6a:	ret    
   14000db6b:	int3   
   14000db6c:	int3   
   14000db6d:	int3   
   14000db6e:	int3   
   14000db6f:	int3   
   14000db70:	sub    rsp,0x28
   14000db74:	xor    ecx,ecx
   14000db76:	call   0x140010c20
   14000db7b:	cmp    QWORD PTR [rip+0x5a865],0x0        # 0x1400683e8
   14000db83:	jne    0x14000dbb5
   14000db85:	mov    QWORD PTR [rsp+0x20],rbx
   14000db8a:	call   QWORD PTR [rip+0x2f510]        # 0x14003d0a0
   14000db90:	lea    rbx,[rip+0x5a809]        # 0x1400683a0
   14000db97:	lea    rdx,[rip+0x310da]        # 0x14003ec78
   14000db9e:	mov    rcx,rbx
   14000dba1:	mov    r8d,eax
   14000dba4:	call   0x14002ef34
   14000dba9:	mov    QWORD PTR [rip+0x5a838],rbx        # 0x1400683e8
   14000dbb0:	mov    rbx,QWORD PTR [rsp+0x20]
   14000dbb5:	xor    ecx,ecx
   14000dbb7:	call   0x140010a80
   14000dbbc:	mov    rax,QWORD PTR [rip+0x5a825]        # 0x1400683e8
   14000dbc3:	add    rsp,0x28
   14000dbc7:	ret    
   14000dbc8:	int3   
   14000dbc9:	int3   
   14000dbca:	int3   
   14000dbcb:	int3   
   14000dbcc:	int3   
   14000dbcd:	int3   
   14000dbce:	int3   
   14000dbcf:	int3   
   14000dbd0:	test   rdx,rdx
   14000dbd3:	je     0x14000dbe7
   14000dbd5:	cmp    DWORD PTR [rdx],0x0
   14000dbd8:	jg     0x14000dbe7
   14000dbda:	mov    r8,rdx
   14000dbdd:	mov    rdx,rcx
   14000dbe0:	xor    ecx,ecx
   14000dbe2:	jmp    0x1400121e0
   14000dbe7:	xor    eax,eax
   14000dbe9:	ret    
   14000dbea:	int3   
   14000dbeb:	int3   
   14000dbec:	int3   
   14000dbed:	int3   
   14000dbee:	int3   
   14000dbef:	int3   
   14000dbf0:	mov    r11,rsp
   14000dbf3:	push   rbp
   14000dbf4:	push   rsi
   14000dbf5:	push   r12
   14000dbf7:	push   r13
   14000dbf9:	push   r14
   14000dbfb:	sub    rsp,0xb0
   14000dc02:	xor    r14d,r14d
   14000dc05:	mov    BYTE PTR [rsp+0x7a],0x1
   14000dc0a:	mov    BYTE PTR [rsp+0x42],0x1
   14000dc0f:	mov    QWORD PTR [rsp+0x48],r14
   14000dc14:	mov    QWORD PTR [rsp+0x50],r14
   14000dc19:	mov    eax,0x38
   14000dc1e:	mov    WORD PTR [rsp+0x78],ax
   14000dc23:	mov    WORD PTR [rsp+0x40],ax
   14000dc28:	mov    rsi,r9
   14000dc2b:	mov    QWORD PTR [r11-0x80],r14
   14000dc2f:	mov    QWORD PTR [r11-0x78],r14
   14000dc33:	mov    QWORD PTR [r11-0x70],r14
   14000dc37:	mov    QWORD PTR [r11-0x68],r14
   14000dc3b:	mov    QWORD PTR [r11-0x58],r14
   14000dc3f:	mov    QWORD PTR [r11-0x50],r14
   14000dc43:	mov    QWORD PTR [r11-0x48],r14
   14000dc47:	mov    QWORD PTR [r11-0x40],r14
   14000dc4b:	mov    QWORD PTR [r11-0x38],r14
   14000dc4f:	mov    QWORD PTR [r11-0x30],r14
   14000dc53:	mov    r12,r8
   14000dc56:	mov    r13,rdx
   14000dc59:	mov    rbp,rcx
   14000dc5c:	test   r9,r9
   14000dc5f:	je     0x14000df08
   14000dc65:	cmp    DWORD PTR [r9],r14d
   14000dc68:	jg     0x14000df08
   14000dc6e:	test   r8,r8
   14000dc71:	je     0x14000df01
   14000dc77:	test   rcx,rcx
   14000dc7a:	je     0x14000df01
   14000dc80:	mov    rcx,QWORD PTR [rcx+0x30]
   14000dc84:	mov    rax,QWORD PTR [rcx+0x28]
   14000dc88:	cmp    QWORD PTR [rax+0x70],r14
   14000dc8c:	je     0x14000dcac
   14000dc8e:	mov    DWORD PTR [r11+0x10],r14d
   14000dc92:	mov    rax,QWORD PTR [rcx+0x28]
   14000dc96:	lea    r8,[r11+0x10]
   14000dc9a:	xor    edx,edx
   14000dc9c:	mov    rcx,rbp
   14000dc9f:	call   QWORD PTR [rax+0x70]
   14000dca2:	mov    r11d,DWORD PTR [rsp+0xe8]
   14000dcaa:	jmp    0x14000dcba
   14000dcac:	mov    r11d,0x120
   14000dcb2:	mov    DWORD PTR [rsp+0xe8],r11d
   14000dcba:	mov    ecx,DWORD PTR [r12]
   14000dcbe:	test   ecx,ecx
   14000dcc0:	jg     0x14000dcd8
   14000dcc2:	mov    DWORD PTR [r12],r11d
   14000dcc6:	xor    eax,eax
   14000dcc8:	add    rsp,0xb0
   14000dccf:	pop    r14
   14000dcd1:	pop    r13
   14000dcd3:	pop    r12
   14000dcd5:	pop    rsi
   14000dcd6:	pop    rbp
   14000dcd7:	ret    
   14000dcd8:	test   r13b,0x7
   14000dcdc:	je     0x14000dd05
   14000dcde:	mov    eax,r13d
   14000dce1:	mov    edx,0x8
   14000dce6:	and    eax,0x7
   14000dce9:	sub    edx,eax
   14000dceb:	cmp    ecx,edx
   14000dced:	jle    0x14000dcfd
   14000dcef:	sub    ecx,edx
   14000dcf1:	movsxd rax,edx
   14000dcf4:	mov    DWORD PTR [r12],ecx
   14000dcf8:	add    r13,rax
   14000dcfb:	jmp    0x14000dd05
   14000dcfd:	mov    DWORD PTR [r12],0x1
   14000dd05:	cmp    DWORD PTR [r12],r11d
   14000dd09:	mov    QWORD PTR [rsp+0xe0],rbx
   14000dd11:	mov    QWORD PTR [rsp+0xf0],rdi
   14000dd19:	jl     0x14000dd28
   14000dd1b:	test   r13,r13
   14000dd1e:	je     0x14000dd28
   14000dd20:	mov    rbx,r13
   14000dd23:	mov    rdi,r14
   14000dd26:	jmp    0x14000dd78
   14000dd28:	movsxd rcx,r11d
   14000dd2b:	call   0x140010940
   14000dd30:	mov    rdi,rax
   14000dd33:	mov    rbx,rax
   14000dd36:	test   rax,rax
   14000dd39:	jne    0x14000dd61
   14000dd3b:	mov    DWORD PTR [rsi],0x7
   14000dd41:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000dd49:	mov    rdi,QWORD PTR [rsp+0xf0]
   14000dd51:	add    rsp,0xb0
   14000dd58:	pop    r14
   14000dd5a:	pop    r13
   14000dd5c:	pop    r12
   14000dd5e:	pop    rsi
   14000dd5f:	pop    rbp
   14000dd60:	ret    
   14000dd61:	cmp    DWORD PTR [rsi],r14d
   14000dd64:	jg     0x14000dd6c
   14000dd66:	mov    DWORD PTR [rsi],0xffffff82
   14000dd6c:	mov    r11d,DWORD PTR [rsp+0xe8]
   14000dd74:	mov    DWORD PTR [r12],r11d
   14000dd78:	movsxd r8,r11d
   14000dd7b:	xor    edx,edx
   14000dd7d:	mov    rcx,rbx
   14000dd80:	call   0x14002b280
   14000dd85:	mov    rcx,rbx
   14000dd88:	mov    rdx,rbp
   14000dd8b:	mov    r8d,0x120
   14000dd91:	call   0x14002b9a0
   14000dd96:	lea    rax,[rbp+0x88]
   14000dd9d:	mov    BYTE PTR [rbx+0x3e],r14b
   14000dda1:	mov    BYTE PTR [rbx+0x3d],r14b
   14000dda5:	cmp    QWORD PTR [rbp+0x28],rax
   14000dda9:	jne    0x14000ddb8
   14000ddab:	lea    rax,[rbx+0x88]
   14000ddb2:	mov    QWORD PTR [rbx+0x28],rax
   14000ddb6:	jmp    0x14000de14
   14000ddb8:	mov    ecx,0x40
   14000ddbd:	call   0x140010940
   14000ddc2:	mov    r11,rax
   14000ddc5:	mov    QWORD PTR [rbx+0x28],rax
   14000ddc9:	test   rax,rax
   14000ddcc:	je     0x14000def2
   14000ddd2:	mov    rcx,QWORD PTR [rbp+0x28]
   14000ddd6:	mov    rax,QWORD PTR [rcx]
   14000ddd9:	mov    QWORD PTR [r11],rax
   14000dddc:	mov    rax,QWORD PTR [rcx+0x8]
   14000dde0:	mov    QWORD PTR [r11+0x8],rax
   14000dde4:	mov    rax,QWORD PTR [rcx+0x10]
   14000dde8:	mov    QWORD PTR [r11+0x10],rax
   14000ddec:	mov    rax,QWORD PTR [rcx+0x18]
   14000ddf0:	mov    QWORD PTR [r11+0x18],rax
   14000ddf4:	mov    rax,QWORD PTR [rcx+0x20]
   14000ddf8:	mov    QWORD PTR [r11+0x20],rax
   14000ddfc:	mov    rax,QWORD PTR [rcx+0x28]
   14000de00:	mov    QWORD PTR [r11+0x28],rax
   14000de04:	mov    rax,QWORD PTR [rcx+0x30]
   14000de08:	mov    QWORD PTR [r11+0x30],rax
   14000de0c:	mov    rax,QWORD PTR [rcx+0x38]
   14000de10:	mov    QWORD PTR [r11+0x38],rax
   14000de14:	mov    rax,QWORD PTR [rbp+0x30]
   14000de18:	mov    rcx,QWORD PTR [rax+0x28]
   14000de1c:	mov    rax,QWORD PTR [rcx+0x70]
   14000de20:	test   rax,rax
   14000de23:	je     0x14000de36
   14000de25:	mov    r9,rsi
   14000de28:	mov    r8,r12
   14000de2b:	mov    rdx,rbx
   14000de2e:	mov    rcx,rbp
   14000de31:	call   rax
   14000de33:	mov    rbx,rax
   14000de36:	test   rbx,rbx
   14000de39:	je     0x14000ded8
   14000de3f:	cmp    DWORD PTR [rsi],r14d
   14000de42:	jg     0x14000ded8
   14000de48:	mov    rcx,QWORD PTR [rbp+0x30]
   14000de4c:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   14000de50:	je     0x14000de57
   14000de52:	call   0x1400116f0
   14000de57:	cmp    rbx,r13
   14000de5a:	jne    0x14000de60
   14000de5c:	mov    BYTE PTR [rbx+0x3d],0x1
   14000de60:	mov    rcx,QWORD PTR [rbp+0x20]
   14000de64:	lea    rax,[rsp+0xf8]
   14000de6c:	lea    rdx,[rsp+0x40]
   14000de71:	mov    QWORD PTR [rsp+0x28],rax
   14000de76:	xor    r9d,r9d
   14000de79:	xor    r8d,r8d
   14000de7c:	mov    QWORD PTR [rsp+0x80],rbx
   14000de84:	mov    QWORD PTR [rsp+0x48],rbx
   14000de89:	mov    DWORD PTR [rsp+0xf8],r14d
   14000de91:	mov    DWORD PTR [rsp+0x20],0x5
   14000de99:	call   QWORD PTR [rbp+0x8]
   14000de9c:	mov    rcx,QWORD PTR [rbp+0x18]
   14000dea0:	lea    rax,[rsp+0xf8]
   14000dea8:	lea    rdx,[rsp+0x78]
   14000dead:	xor    r9d,r9d
   14000deb0:	mov    QWORD PTR [rsp+0x30],rax
   14000deb5:	xor    r8d,r8d
   14000deb8:	mov    DWORD PTR [rsp+0x28],0x5
   14000dec0:	mov    DWORD PTR [rsp+0x20],r14d
   14000dec5:	mov    DWORD PTR [rsp+0xf8],r14d
   14000decd:	call   QWORD PTR [rbp+0x0]
   14000ded0:	mov    rax,rbx
   14000ded3:	jmp    0x14000dd41
   14000ded8:	test   rdi,rdi
   14000dedb:	je     0x14000def2
   14000dedd:	mov    rcx,QWORD PTR [rdi+0x28]
   14000dee1:	lea    rax,[rdi+0x88]
   14000dee8:	cmp    rcx,rax
   14000deeb:	je     0x14000def2
   14000deed:	call   0x140010a40
   14000def2:	mov    rcx,rdi
   14000def5:	call   0x140010a40
   14000defa:	xor    eax,eax
   14000defc:	jmp    0x14000dd41
   14000df01:	mov    DWORD PTR [r9],0x1
   14000df08:	xor    eax,eax
   14000df0a:	add    rsp,0xb0
   14000df11:	pop    r14
   14000df13:	pop    r13
   14000df15:	pop    r12
   14000df17:	pop    rsi
   14000df18:	pop    rbp
   14000df19:	ret    
   14000df1a:	int3   
   14000df1b:	int3   
   14000df1c:	int3   
   14000df1d:	int3   
   14000df1e:	int3   
   14000df1f:	int3   
   14000df20:	test   rcx,rcx
   14000df23:	je     0x14000e066
   14000df29:	mov    r11,rsp
   14000df2c:	mov    QWORD PTR [r11+0x18],rbx
   14000df30:	push   rdi
   14000df31:	sub    rsp,0x80
   14000df38:	mov    rax,QWORD PTR [rcx+0x8]
   14000df3c:	xor    edi,edi
   14000df3e:	mov    rbx,rcx
   14000df41:	lea    rcx,[rip+0x19c8]        # 0x14000f910
   14000df48:	mov    QWORD PTR [r11+0x10],rsi
   14000df4c:	mov    DWORD PTR [r11+0x8],edi
   14000df50:	lea    esi,[rdi+0x38]
   14000df53:	cmp    rax,rcx
   14000df56:	je     0x14000df9e
   14000df58:	mov    WORD PTR [rsp+0x40],si
   14000df5d:	mov    BYTE PTR [rsp+0x42],0x1
   14000df62:	lea    rcx,[r11+0x8]
   14000df66:	mov    QWORD PTR [r11-0x60],rcx
   14000df6a:	mov    rcx,QWORD PTR [rbx+0x20]
   14000df6e:	lea    rdx,[r11-0x48]
   14000df72:	xor    r9d,r9d
   14000df75:	xor    r8d,r8d
   14000df78:	mov    QWORD PTR [r11-0x38],rdi
   14000df7c:	mov    QWORD PTR [r11-0x30],rdi
   14000df80:	mov    QWORD PTR [r11-0x28],rdi
   14000df84:	mov    QWORD PTR [r11-0x20],rdi
   14000df88:	mov    QWORD PTR [r11-0x18],rdi
   14000df8c:	mov    QWORD PTR [r11-0x40],rbx
   14000df90:	mov    DWORD PTR [r11+0x8],edi
   14000df94:	mov    DWORD PTR [rsp+0x20],0x4
   14000df9c:	call   rax
   14000df9e:	mov    rax,QWORD PTR [rbx]
   14000dfa1:	lea    rcx,[rip+0x18f8]        # 0x14000f8a0
   14000dfa8:	cmp    rax,rcx
   14000dfab:	je     0x14000e006
   14000dfad:	lea    rcx,[rsp+0x90]
   14000dfb5:	lea    rdx,[rsp+0x40]
   14000dfba:	xor    r9d,r9d
   14000dfbd:	mov    QWORD PTR [rsp+0x30],rcx
   14000dfc2:	mov    rcx,QWORD PTR [rbx+0x18]
   14000dfc6:	xor    r8d,r8d
   14000dfc9:	mov    DWORD PTR [rsp+0x28],0x4
   14000dfd1:	mov    WORD PTR [rsp+0x40],si
   14000dfd6:	mov    BYTE PTR [rsp+0x42],0x1
   14000dfdb:	mov    QWORD PTR [rsp+0x50],rdi
   14000dfe0:	mov    QWORD PTR [rsp+0x58],rdi
   14000dfe5:	mov    QWORD PTR [rsp+0x60],rdi
   14000dfea:	mov    QWORD PTR [rsp+0x68],rdi
   14000dfef:	mov    QWORD PTR [rsp+0x70],rdi
   14000dff4:	mov    QWORD PTR [rsp+0x48],rbx
   14000dff9:	mov    DWORD PTR [rsp+0x90],edi
   14000e000:	mov    DWORD PTR [rsp+0x20],edi
   14000e004:	call   rax
   14000e006:	mov    rax,QWORD PTR [rbx+0x30]
   14000e00a:	mov    rsi,QWORD PTR [rsp+0x98]
   14000e012:	mov    rcx,QWORD PTR [rax+0x28]
   14000e016:	mov    rax,QWORD PTR [rcx+0x20]
   14000e01a:	test   rax,rax
   14000e01d:	je     0x14000e024
   14000e01f:	mov    rcx,rbx
   14000e022:	call   rax
   14000e024:	mov    rcx,QWORD PTR [rbx+0x28]
   14000e028:	lea    rax,[rbx+0x88]
   14000e02f:	cmp    rcx,rax
   14000e032:	je     0x14000e039
   14000e034:	call   0x140010a40
   14000e039:	mov    rcx,QWORD PTR [rbx+0x30]
   14000e03d:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   14000e041:	je     0x14000e048
   14000e043:	call   0x140011690
   14000e048:	cmp    BYTE PTR [rbx+0x3d],dil
   14000e04c:	jne    0x14000e056
   14000e04e:	mov    rcx,rbx
   14000e051:	call   0x140010a40
   14000e056:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000e05e:	add    rsp,0x80
   14000e065:	pop    rdi
   14000e066:	repz ret 
   14000e068:	int3   
   14000e069:	int3   
   14000e06a:	int3   
   14000e06b:	int3   
   14000e06c:	int3   
   14000e06d:	int3   
   14000e06e:	int3   
   14000e06f:	int3   
   14000e070:	test   rcx,rcx
   14000e073:	je     0x14000e12a
   14000e079:	mov    r11,rsp
   14000e07c:	push   rbx
   14000e07d:	sub    rsp,0x70
   14000e081:	mov    rax,QWORD PTR [rcx+0x8]
   14000e085:	mov    rbx,rcx
   14000e088:	lea    rcx,[rip+0x1881]        # 0x14000f910
   14000e08f:	mov    QWORD PTR [r11+0x10],rdi
   14000e093:	xor    edi,edi
   14000e095:	cmp    rax,rcx
   14000e098:	je     0x14000e0e5
   14000e09a:	mov    BYTE PTR [rsp+0x32],0x1
   14000e09f:	mov    ecx,0x38
   14000e0a4:	lea    rdx,[r11-0x48]
   14000e0a8:	mov    WORD PTR [rsp+0x30],cx
   14000e0ad:	lea    rcx,[r11+0x8]
   14000e0b1:	xor    r9d,r9d
   14000e0b4:	mov    QWORD PTR [r11-0x50],rcx
   14000e0b8:	mov    rcx,QWORD PTR [rbx+0x20]
   14000e0bc:	xor    r8d,r8d
   14000e0bf:	mov    QWORD PTR [r11-0x38],rdi
   14000e0c3:	mov    QWORD PTR [r11-0x30],rdi
   14000e0c7:	mov    QWORD PTR [r11-0x28],rdi
   14000e0cb:	mov    QWORD PTR [r11-0x20],rdi
   14000e0cf:	mov    QWORD PTR [r11-0x18],rdi
   14000e0d3:	mov    QWORD PTR [r11-0x40],rbx
   14000e0d7:	mov    DWORD PTR [r11+0x8],edi
   14000e0db:	mov    DWORD PTR [rsp+0x20],0x3
   14000e0e3:	call   rax
   14000e0e5:	mov    rcx,QWORD PTR [rbx+0x30]
   14000e0e9:	mov    eax,DWORD PTR [rcx+0x30]
   14000e0ec:	mov    DWORD PTR [rbx+0x4c],edi
   14000e0ef:	mov    BYTE PTR [rbx+0x40],dil
   14000e0f3:	mov    BYTE PTR [rbx+0x5d],dil
   14000e0f7:	mov    BYTE PTR [rbx+0x5a],dil
   14000e0fb:	mov    BYTE PTR [rbx+0x11a],dil
   14000e102:	mov    rdi,QWORD PTR [rsp+0x88]
   14000e10a:	mov    DWORD PTR [rbx+0x48],eax
   14000e10d:	mov    rax,QWORD PTR [rcx+0x28]
   14000e111:	mov    r8,QWORD PTR [rax+0x28]
   14000e115:	test   r8,r8
   14000e118:	je     0x14000e125
   14000e11a:	mov    edx,0x1
   14000e11f:	mov    rcx,rbx
   14000e122:	call   r8
   14000e125:	add    rsp,0x70
   14000e129:	pop    rbx
   14000e12a:	repz ret 
   14000e12c:	int3   
   14000e12d:	int3   
   14000e12e:	int3   
   14000e12f:	int3   
   14000e130:	test   rcx,rcx
   14000e133:	je     0x14000e1f5
   14000e139:	mov    r11,rsp
   14000e13c:	push   rbx
   14000e13d:	sub    rsp,0x80
   14000e144:	mov    rax,QWORD PTR [rcx]
   14000e147:	mov    rbx,rcx
   14000e14a:	lea    rcx,[rip+0x174f]        # 0x14000f8a0
   14000e151:	mov    QWORD PTR [r11+0x10],rdi
   14000e155:	xor    edi,edi
   14000e157:	cmp    rax,rcx
   14000e15a:	je     0x14000e1ab
   14000e15c:	mov    BYTE PTR [rsp+0x42],0x1
   14000e161:	mov    ecx,0x38
   14000e166:	lea    rdx,[r11-0x48]
   14000e16a:	mov    WORD PTR [rsp+0x40],cx
   14000e16f:	lea    rcx,[r11+0x8]
   14000e173:	xor    r9d,r9d
   14000e176:	mov    QWORD PTR [r11-0x58],rcx
   14000e17a:	mov    rcx,QWORD PTR [rbx+0x18]
   14000e17e:	xor    r8d,r8d
   14000e181:	mov    DWORD PTR [rsp+0x28],0x3
   14000e189:	mov    QWORD PTR [r11-0x38],rdi
   14000e18d:	mov    QWORD PTR [r11-0x30],rdi
   14000e191:	mov    QWORD PTR [r11-0x28],rdi
   14000e195:	mov    QWORD PTR [r11-0x20],rdi
   14000e199:	mov    QWORD PTR [r11-0x18],rdi
   14000e19d:	mov    QWORD PTR [r11-0x40],rbx
   14000e1a1:	mov    DWORD PTR [r11+0x8],edi
   14000e1a5:	mov    DWORD PTR [rsp+0x20],edi
   14000e1a9:	call   rax
   14000e1ab:	mov    rax,QWORD PTR [rbx+0x30]
   14000e1af:	mov    DWORD PTR [rbx+0x50],edi
   14000e1b2:	mov    DWORD PTR [rbx+0x54],edi
   14000e1b5:	mov    BYTE PTR [rbx+0x5b],dil
   14000e1b9:	mov    BYTE PTR [rbx+0x5c],dil
   14000e1bd:	mov    BYTE PTR [rbx+0x119],dil
   14000e1c4:	mov    rdi,QWORD PTR [rsp+0x98]
   14000e1cc:	mov    DWORD PTR [rbx+0xd0],0xffffffff
   14000e1d6:	mov    rcx,QWORD PTR [rax+0x28]
   14000e1da:	mov    rax,QWORD PTR [rcx+0x28]
   14000e1de:	test   rax,rax
   14000e1e1:	je     0x14000e1ed
   14000e1e3:	mov    edx,0x2
   14000e1e8:	mov    rcx,rbx
   14000e1eb:	call   rax
   14000e1ed:	add    rsp,0x80
   14000e1f4:	pop    rbx
   14000e1f5:	repz ret 
   14000e1f7:	int3   
   14000e1f8:	int3   
   14000e1f9:	int3   
   14000e1fa:	int3   
   14000e1fb:	int3   
   14000e1fc:	int3   
   14000e1fd:	int3   
   14000e1fe:	int3   
   14000e1ff:	int3   
   14000e200:	rex push rbx
   14000e202:	sub    rsp,0x20
   14000e206:	cmp    DWORD PTR [rdx],0x0
   14000e209:	mov    rbx,rcx
   14000e20c:	jle    0x14000e216
   14000e20e:	xor    eax,eax
   14000e210:	add    rsp,0x20
   14000e214:	pop    rbx
   14000e215:	ret    
   14000e216:	mov    rax,QWORD PTR [rcx+0x30]
   14000e21a:	mov    rcx,QWORD PTR [rax+0x28]
   14000e21e:	mov    rax,QWORD PTR [rcx+0x60]
   14000e222:	test   rax,rax
   14000e225:	je     0x14000e231
   14000e227:	mov    rcx,rbx
   14000e22a:	call   rax
   14000e22c:	test   rax,rax
   14000e22f:	jne    0x14000e23d
   14000e231:	mov    rax,QWORD PTR [rbx+0x30]
   14000e235:	mov    rax,QWORD PTR [rax+0x18]
   14000e239:	add    rax,0x4
   14000e23d:	add    rsp,0x20
   14000e241:	pop    rbx
   14000e242:	ret    
   14000e243:	int3   
   14000e244:	int3   
   14000e245:	int3   
   14000e246:	int3   
   14000e247:	int3   
   14000e248:	int3   
   14000e249:	int3   
   14000e24a:	int3   
   14000e24b:	int3   
   14000e24c:	int3   
   14000e24d:	int3   
   14000e24e:	int3   
   14000e24f:	int3   
   14000e250:	mov    rax,QWORD PTR [rsp+0x30]
   14000e255:	cmp    DWORD PTR [rax],0x0
   14000e258:	jg     0x14000e27f
   14000e25a:	test   r9,r9
   14000e25d:	je     0x14000e266
   14000e25f:	mov    rax,QWORD PTR [rcx+0x8]
   14000e263:	mov    QWORD PTR [r9],rax
   14000e266:	mov    QWORD PTR [rcx+0x8],rdx
   14000e26a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000e26f:	test   rdx,rdx
   14000e272:	je     0x14000e27b
   14000e274:	mov    rax,QWORD PTR [rcx+0x20]
   14000e278:	mov    QWORD PTR [rdx],rax
   14000e27b:	mov    QWORD PTR [rcx+0x20],r8
   14000e27f:	repz ret 
   14000e281:	int3   
   14000e282:	int3   
   14000e283:	int3   
   14000e284:	int3   
   14000e285:	int3   
   14000e286:	int3   
   14000e287:	int3   
   14000e288:	int3   
   14000e289:	int3   
   14000e28a:	int3   
   14000e28b:	int3   
   14000e28c:	int3   
   14000e28d:	int3   
   14000e28e:	int3   
   14000e28f:	int3   
   14000e290:	mov    rax,QWORD PTR [rsp+0x30]
   14000e295:	cmp    DWORD PTR [rax],0x0
   14000e298:	jg     0x14000e2bd
   14000e29a:	test   r9,r9
   14000e29d:	je     0x14000e2a5
   14000e29f:	mov    rax,QWORD PTR [rcx]
   14000e2a2:	mov    QWORD PTR [r9],rax
   14000e2a5:	mov    QWORD PTR [rcx],rdx
   14000e2a8:	mov    rdx,QWORD PTR [rsp+0x28]
   14000e2ad:	test   rdx,rdx
   14000e2b0:	je     0x14000e2b9
   14000e2b2:	mov    rax,QWORD PTR [rcx+0x18]
   14000e2b6:	mov    QWORD PTR [rdx],rax
   14000e2b9:	mov    QWORD PTR [rcx+0x18],r8
   14000e2bd:	repz ret 
   14000e2bf:	int3   
   14000e2c0:	mov    QWORD PTR [rsp+0x18],rbx
   14000e2c5:	push   rbp
   14000e2c6:	push   rsi
   14000e2c7:	push   rdi
   14000e2c8:	push   r12
   14000e2ca:	push   r13
   14000e2cc:	push   r14
   14000e2ce:	push   r15
   14000e2d0:	sub    rsp,0xa0
   14000e2d7:	mov    rax,QWORD PTR [rip+0x585d2]        # 0x1400668b0
   14000e2de:	xor    rax,rsp
   14000e2e1:	mov    QWORD PTR [rsp+0x90],rax
   14000e2e9:	mov    r12,QWORD PTR [rcx+0x8]
   14000e2ed:	mov    rdi,QWORD PTR [rcx+0x30]
   14000e2f1:	mov    rbp,QWORD PTR [rcx+0x20]
   14000e2f5:	mov    rax,QWORD PTR [r12+0x30]
   14000e2fa:	mov    r13,rdx
   14000e2fd:	mov    rdx,QWORD PTR [rcx+0x10]
   14000e301:	xor    r14d,r14d
   14000e304:	or     r8,0xffffffffffffffff
   14000e308:	mov    rsi,rcx
   14000e30b:	mov    rcx,QWORD PTR [rax+0x28]
   14000e30f:	mov    QWORD PTR [rsp+0x60],rdx
   14000e314:	test   rdi,rdi
   14000e317:	je     0x14000e32a
   14000e319:	mov    r15,QWORD PTR [rcx+0x48]
   14000e31d:	mov    QWORD PTR [rsp+0x50],r15
   14000e322:	test   r15,r15
   14000e325:	jne    0x14000e333
   14000e327:	mov    r14d,r8d
   14000e32a:	mov    r15,QWORD PTR [rcx+0x40]
   14000e32e:	mov    QWORD PTR [rsp+0x50],r15
   14000e333:	movzx  eax,BYTE PTR [r12+0x119]
   14000e33c:	test   al,al
   14000e33e:	js     0x14000e358
   14000e340:	xor    edx,edx
   14000e342:	xor    ecx,ecx
   14000e344:	mov    QWORD PTR [rsp+0x58],rcx
   14000e349:	mov    DWORD PTR [rsp+0x44],ecx
   14000e34d:	mov    QWORD PTR [rsp+0x48],rdx
   14000e352:	mov    BYTE PTR [rsp+0x40],dl
   14000e356:	jmp    0x14000e3c1
   14000e358:	mov    rcx,QWORD PTR [rsi+0x18]
   14000e35c:	mov    QWORD PTR [rsp+0x48],rdx
   14000e361:	movzx  edx,BYTE PTR [rsi+0x2]
   14000e365:	movsx  eax,al
   14000e368:	mov    BYTE PTR [rsp+0x40],dl
   14000e36c:	mov    QWORD PTR [rsp+0x58],rcx
   14000e371:	neg    eax
   14000e373:	lea    rdx,[r12+0xd4]
   14000e37b:	lea    rcx,[rsp+0x68]
   14000e380:	add    eax,eax
   14000e382:	mov    DWORD PTR [rsp+0x44],r14d
   14000e387:	movsxd r8,eax
   14000e38a:	call   0x14002b9a0
   14000e38f:	lea    r11,[rsp+0x68]
   14000e394:	lea    rax,[rsp+0x68]
   14000e399:	mov    QWORD PTR [rsi+0x10],r11
   14000e39d:	movsx  rcx,BYTE PTR [r12+0x119]
   14000e3a6:	mov    BYTE PTR [rsi+0x2],0x0
   14000e3aa:	add    rcx,rcx
   14000e3ad:	sub    rax,rcx
   14000e3b0:	or     r14d,0xffffffff
   14000e3b4:	mov    QWORD PTR [rsi+0x18],rax
   14000e3b8:	mov    BYTE PTR [r12+0x119],0x0
   14000e3c1:	cmp    DWORD PTR [r13+0x0],0x0
   14000e3c6:	jg     0x14000e3f5
   14000e3c8:	mov    rdx,r13
   14000e3cb:	mov    rcx,rsi
   14000e3ce:	call   r15
   14000e3d1:	cmp    DWORD PTR [r13+0x0],0x0
   14000e3d6:	jg     0x14000e3f5
   14000e3d8:	cmp    BYTE PTR [rsi+0x2],0x0
   14000e3dc:	je     0x14000e3f5
   14000e3de:	mov    rax,QWORD PTR [rsi+0x18]
   14000e3e2:	cmp    QWORD PTR [rsi+0x10],rax
   14000e3e6:	jne    0x14000e3f5
   14000e3e8:	cmp    DWORD PTR [r12+0x54],0x0
   14000e3ee:	mov    BYTE PTR [rsp+0x41],0x1
   14000e3f3:	je     0x14000e3fa
   14000e3f5:	mov    BYTE PTR [rsp+0x41],0x0
   14000e3fa:	xor    r15b,r15b
   14000e3fd:	xor    ebx,ebx
   14000e3ff:	nop
   14000e400:	test   rdi,rdi
   14000e403:	je     0x14000e480
   14000e405:	mov    eax,DWORD PTR [rsi+0x20]
   14000e408:	sub    eax,ebp
   14000e40a:	test   eax,eax
   14000e40c:	jle    0x14000e46c
   14000e40e:	test   r14d,r14d
   14000e411:	js     0x14000e41e
   14000e413:	mov    ecx,r14d
   14000e416:	sub    ecx,ebx
   14000e418:	or     r8,0xffffffffffffffff
   14000e41c:	jmp    0x14000e425
   14000e41e:	or     r8,0xffffffffffffffff
   14000e422:	mov    ecx,r8d
   14000e425:	cdqe   
   14000e427:	lea    rdx,[rdi+rax*4]
   14000e42b:	test   ecx,ecx
   14000e42d:	je     0x14000e465
   14000e42f:	jle    0x14000e44b
   14000e431:	cmp    rdi,rdx
   14000e434:	jae    0x14000e465
   14000e436:	mov    eax,DWORD PTR [rdi]
   14000e438:	test   eax,eax
   14000e43a:	js     0x14000e440
   14000e43c:	add    eax,ecx
   14000e43e:	mov    DWORD PTR [rdi],eax
   14000e440:	add    rdi,0x4
   14000e444:	cmp    rdi,rdx
   14000e447:	jb     0x14000e436
   14000e449:	jmp    0x14000e465
   14000e44b:	cmp    rdi,rdx
   14000e44e:	jae    0x14000e465
   14000e450:	mov    rcx,rdx
   14000e453:	mov    rax,r8
   14000e456:	sub    rcx,rdi
   14000e459:	dec    rcx
   14000e45c:	shr    rcx,0x2
   14000e460:	inc    rcx
   14000e463:	rep stos DWORD PTR es:[rdi],eax
   14000e465:	mov    rdi,rdx
   14000e468:	mov    QWORD PTR [rsi+0x30],rdx
   14000e46c:	test   r14d,r14d
   14000e46f:	js     0x14000e480
   14000e471:	mov    rax,QWORD PTR [rsi+0x10]
   14000e475:	sub    rax,QWORD PTR [rsp+0x60]
   14000e47a:	sar    rax,1
   14000e47d:	add    r14d,eax
   14000e480:	movzx  eax,BYTE PTR [r12+0x119]
   14000e489:	mov    rbx,QWORD PTR [rsp+0x48]
   14000e48e:	test   al,al
   14000e490:	jns    0x14000e528
   14000e496:	test   rbx,rbx
   14000e499:	jne    0x14000e520
   14000e49f:	mov    rcx,QWORD PTR [rsi+0x18]
   14000e4a3:	mov    rbx,QWORD PTR [rsi+0x10]
   14000e4a7:	movsx  eax,al
   14000e4aa:	mov    QWORD PTR [rsp+0x58],rcx
   14000e4af:	mov    cl,BYTE PTR [rsi+0x2]
   14000e4b2:	neg    eax
   14000e4b4:	add    eax,eax
   14000e4b6:	mov    BYTE PTR [rsp+0x40],cl
   14000e4ba:	lea    rdx,[r12+0xd4]
   14000e4c2:	lea    rcx,[rsp+0x68]
   14000e4c7:	movsxd r8,eax
   14000e4ca:	mov    QWORD PTR [rsp+0x48],rbx
   14000e4cf:	mov    DWORD PTR [rsp+0x44],r14d
   14000e4d4:	call   0x14002b9a0
   14000e4d9:	lea    r11,[rsp+0x68]
   14000e4de:	mov    QWORD PTR [rsi+0x10],r11
   14000e4e2:	movsx  rcx,BYTE PTR [r12+0x119]
   14000e4eb:	mov    BYTE PTR [rsi+0x2],0x0
   14000e4ef:	add    rcx,rcx
   14000e4f2:	lea    rax,[rsp+0x68]
   14000e4f7:	mov    r8,0xffffffffffffffff
   14000e4fe:	sub    rax,rcx
   14000e501:	mov    QWORD PTR [rsi+0x18],rax
   14000e505:	movsx  eax,BYTE PTR [r12+0x119]
   14000e50e:	mov    BYTE PTR [r12+0x119],0x0
   14000e517:	add    r14d,eax
   14000e51a:	cmovs  r14d,r8d
   14000e51e:	jmp    0x14000e52c
   14000e520:	mov    DWORD PTR [r13+0x0],0x5
   14000e528:	or     r8,0xffffffffffffffff
   14000e52c:	cmp    DWORD PTR [r13+0x0],0x0
   14000e531:	mov    rdx,QWORD PTR [rsi+0x10]
   14000e535:	mov    rbp,QWORD PTR [rsi+0x20]
   14000e539:	mov    QWORD PTR [rsp+0x60],rdx
   14000e53e:	jg     0x14000e576
   14000e540:	mov    r15,QWORD PTR [rsp+0x50]
   14000e545:	cmp    rdx,QWORD PTR [rsi+0x18]
   14000e549:	jb     0x14000e3c1
   14000e54f:	test   rbx,rbx
   14000e552:	jne    0x14000e643
   14000e558:	cmp    BYTE PTR [rsi+0x2],bl
   14000e55b:	je     0x14000e6fe
   14000e561:	cmp    DWORD PTR [r12+0x54],ebx
   14000e566:	je     0x14000e62d
   14000e56c:	mov    DWORD PTR [r13+0x0],0xb
   14000e574:	jmp    0x14000e57f
   14000e576:	test   r15b,r15b
   14000e579:	jne    0x14000e6b5
   14000e57f:	mov    eax,DWORD PTR [r13+0x0]
   14000e583:	cmp    eax,0xf
   14000e586:	je     0x14000e6b5
   14000e58c:	cmp    eax,0xa
   14000e58f:	je     0x14000e59f
   14000e591:	cmp    eax,0xc
   14000e594:	je     0x14000e59f
   14000e596:	cmp    eax,0xb
   14000e599:	jne    0x14000e6b5
   14000e59f:	mov    ecx,DWORD PTR [r12+0x54]
   14000e5a4:	lea    r8,[r12+0x8c]
   14000e5ac:	cmp    ecx,0xffff
   14000e5b2:	ja     0x14000e5bf
   14000e5b4:	mov    WORD PTR [r8],cx
   14000e5b8:	mov    ebx,0x1
   14000e5bd:	jmp    0x14000e5f1
   14000e5bf:	mov    edx,0x2840
   14000e5c4:	mov    eax,ecx
   14000e5c6:	mov    ebx,0x2
   14000e5cb:	sar    eax,0xa
   14000e5ce:	sub    ax,dx
   14000e5d1:	mov    edx,0x3ff
   14000e5d6:	mov    WORD PTR [r8],ax
   14000e5da:	movzx  eax,cx
   14000e5dd:	and    ax,dx
   14000e5e0:	mov    edx,0xdc00
   14000e5e5:	or     ax,dx
   14000e5e8:	mov    WORD PTR [r12+0x8e],ax
   14000e5f1:	xor    eax,eax
   14000e5f3:	mov    BYTE PTR [r12+0x5c],bl
   14000e5f8:	mov    DWORD PTR [r12+0x54],0x0
   14000e601:	cmp    DWORD PTR [r13+0x0],0xa
   14000e606:	mov    QWORD PTR [rsp+0x30],r13
   14000e60b:	mov    r9d,ebx
   14000e60e:	setne  al
   14000e611:	mov    rdx,rsi
   14000e614:	mov    DWORD PTR [rsp+0x28],eax
   14000e618:	mov    DWORD PTR [rsp+0x20],ecx
   14000e61c:	mov    rcx,QWORD PTR [r12+0x18]
   14000e621:	call   QWORD PTR [r12]
   14000e625:	mov    r15b,0x1
   14000e628:	jmp    0x14000e400
   14000e62d:	cmp    BYTE PTR [rsi+0x2],0x0
   14000e631:	je     0x14000e6fe
   14000e637:	cmp    BYTE PTR [rsp+0x41],0x0
   14000e63c:	jne    0x14000e668
   14000e63e:	jmp    0x14000e3c1
   14000e643:	mov    dl,BYTE PTR [rsp+0x40]
   14000e647:	mov    rcx,QWORD PTR [rsp+0x58]
   14000e64c:	mov    r14d,DWORD PTR [rsp+0x44]
   14000e651:	mov    BYTE PTR [rsi+0x2],dl
   14000e654:	xor    edx,edx
   14000e656:	mov    QWORD PTR [rsi+0x10],rbx
   14000e65a:	mov    QWORD PTR [rsi+0x18],rcx
   14000e65e:	mov    QWORD PTR [rsp+0x48],rdx
   14000e663:	jmp    0x14000e3c1
   14000e668:	mov    rax,QWORD PTR [r12+0x30]
   14000e66d:	mov    DWORD PTR [r12+0x50],0x0
   14000e676:	mov    DWORD PTR [r12+0x54],0x0
   14000e67f:	mov    BYTE PTR [r12+0x5b],0x0
   14000e685:	mov    BYTE PTR [r12+0x5c],0x0
   14000e68b:	mov    DWORD PTR [r12+0xd0],r8d
   14000e693:	mov    BYTE PTR [r12+0x119],0x0
   14000e69c:	mov    rax,QWORD PTR [rax+0x28]
   14000e6a0:	mov    rax,QWORD PTR [rax+0x28]
   14000e6a4:	test   rax,rax
   14000e6a7:	je     0x14000e6fe
   14000e6a9:	mov    edx,0x2
   14000e6ae:	mov    rcx,r12
   14000e6b1:	call   rax
   14000e6b3:	jmp    0x14000e6fe
   14000e6b5:	test   rbx,rbx
   14000e6b8:	je     0x14000e6fe
   14000e6ba:	mov    rdx,QWORD PTR [rsi+0x10]
   14000e6be:	mov    rdi,QWORD PTR [rsi+0x18]
   14000e6c2:	sub    rdi,rdx
   14000e6c5:	sar    rdi,1
   14000e6c8:	test   edi,edi
   14000e6ca:	jle    0x14000e6ea
   14000e6cc:	lea    eax,[rdi+rdi*1]
   14000e6cf:	lea    rcx,[r12+0xd4]
   14000e6d7:	movsxd r8,eax
   14000e6da:	call   0x14002b9a0
   14000e6df:	neg    dil
   14000e6e2:	mov    BYTE PTR [r12+0x119],dil
   14000e6ea:	mov    rcx,QWORD PTR [rsp+0x58]
   14000e6ef:	mov    dl,BYTE PTR [rsp+0x40]
   14000e6f3:	mov    QWORD PTR [rsi+0x10],rbx
   14000e6f7:	mov    QWORD PTR [rsi+0x18],rcx
   14000e6fb:	mov    BYTE PTR [rsi+0x2],dl
   14000e6fe:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e706:	xor    rcx,rsp
   14000e709:	call   0x14002b250
   14000e70e:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000e716:	add    rsp,0xa0
   14000e71d:	pop    r15
   14000e71f:	pop    r14
   14000e721:	pop    r13
   14000e723:	pop    r12
   14000e725:	pop    rdi
   14000e726:	pop    rsi
   14000e727:	pop    rbp
   14000e728:	ret    
   14000e729:	int3   
   14000e72a:	int3   
   14000e72b:	int3   
   14000e72c:	int3   
   14000e72d:	int3   
   14000e72e:	int3   
   14000e72f:	int3   
   14000e730:	mov    QWORD PTR [rsp+0x8],rbx
   14000e735:	mov    QWORD PTR [rsp+0x10],rbp
   14000e73a:	mov    QWORD PTR [rsp+0x18],rsi
   14000e73f:	mov    QWORD PTR [rsp+0x20],rdi
   14000e744:	mov    rdi,r9
   14000e747:	mov    r9,QWORD PTR [rdx]
   14000e74a:	mov    rsi,r8
   14000e74d:	xor    r8d,r8d
   14000e750:	mov    rbp,rdx
   14000e753:	mov    r11,rcx
   14000e756:	test   rdi,rdi
   14000e759:	je     0x14000e760
   14000e75b:	mov    r10,QWORD PTR [rdi]
   14000e75e:	jmp    0x14000e763
   14000e760:	mov    r10,r8
   14000e763:	movsx  rbx,BYTE PTR [rcx+0x5b]
   14000e768:	mov    rdx,r8
   14000e76b:	test   rbx,rbx
   14000e76e:	jle    0x14000e799
   14000e770:	cmp    r9,rsi
   14000e773:	je     0x14000e7c0
   14000e775:	movzx  eax,BYTE PTR [rdx+rcx*1+0x68]
   14000e77a:	inc    r9
   14000e77d:	inc    rdx
   14000e780:	mov    BYTE PTR [r9-0x1],al
   14000e784:	test   r10,r10
   14000e787:	je     0x14000e794
   14000e789:	mov    DWORD PTR [r10],0xffffffff
   14000e790:	add    r10,0x4
   14000e794:	cmp    rdx,rbx
   14000e797:	jl     0x14000e770
   14000e799:	mov    BYTE PTR [rcx+0x5b],r8b
   14000e79d:	mov    QWORD PTR [rbp+0x0],r9
   14000e7a1:	test   r10,r10
   14000e7a4:	je     0x14000e7a9
   14000e7a6:	mov    QWORD PTR [rdi],r10
   14000e7a9:	xor    al,al
   14000e7ab:	mov    rbx,QWORD PTR [rsp+0x8]
   14000e7b0:	mov    rbp,QWORD PTR [rsp+0x10]
   14000e7b5:	mov    rsi,QWORD PTR [rsp+0x18]
   14000e7ba:	mov    rdi,QWORD PTR [rsp+0x20]
   14000e7bf:	ret    
   14000e7c0:	movzx  eax,BYTE PTR [rdx+r11*1+0x68]
   14000e7c6:	movsxd rcx,r8d
   14000e7c9:	inc    rdx
   14000e7cc:	inc    r8d
   14000e7cf:	cmp    rdx,rbx
   14000e7d2:	mov    BYTE PTR [rcx+r11*1+0x68],al
   14000e7d7:	jl     0x14000e7c0
   14000e7d9:	mov    BYTE PTR [r11+0x5b],r8b
   14000e7dd:	mov    QWORD PTR [rbp+0x0],r9
   14000e7e1:	test   r10,r10
   14000e7e4:	je     0x14000e7e9
   14000e7e6:	mov    QWORD PTR [rdi],r10
   14000e7e9:	mov    rax,QWORD PTR [rsp+0x28]
   14000e7ee:	mov    DWORD PTR [rax],0xf
   14000e7f4:	mov    al,0x1
   14000e7f6:	jmp    0x14000e7ab
   14000e7f8:	int3   
   14000e7f9:	int3   
   14000e7fa:	int3   
   14000e7fb:	int3   
   14000e7fc:	int3   
   14000e7fd:	int3   
   14000e7fe:	int3   
   14000e7ff:	int3   
   14000e800:	mov    rax,rsp
   14000e803:	mov    QWORD PTR [rax+0x18],rsi
   14000e807:	mov    QWORD PTR [rax+0x20],rdi
   14000e80b:	push   r12
   14000e80d:	push   r13
   14000e80f:	push   r14
   14000e811:	sub    rsp,0x70
   14000e815:	mov    rdi,QWORD PTR [rsp+0xc8]
   14000e81d:	mov    r14,r9
   14000e820:	mov    r12,r8
   14000e823:	mov    r13,rdx
   14000e826:	mov    rsi,rcx
   14000e829:	test   rdi,rdi
   14000e82c:	je     0x14000e976
   14000e832:	cmp    DWORD PTR [rdi],0x0
   14000e835:	jg     0x14000e976
   14000e83b:	test   rcx,rcx
   14000e83e:	je     0x14000e995
   14000e844:	test   rdx,rdx
   14000e847:	je     0x14000e995
   14000e84d:	test   r9,r9
   14000e850:	je     0x14000e995
   14000e856:	mov    rdx,QWORD PTR [rdx]
   14000e859:	mov    QWORD PTR [rax+0x8],rbx
   14000e85d:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000e865:	or     rcx,0xffffffffffffffff
   14000e869:	mov    QWORD PTR [rax+0x10],rbp
   14000e86d:	mov    rbp,QWORD PTR [r9]
   14000e870:	lea    rax,[rbx+0x7fffffff]
   14000e877:	cmp    rax,rbx
   14000e87a:	cmova  rcx,rax
   14000e87e:	cmp    rcx,rbx
   14000e881:	jne    0x14000e886
   14000e883:	dec    rbx
   14000e886:	cmp    rbx,rbp
   14000e889:	jb     0x14000e98d
   14000e88f:	cmp    r8,rdx
   14000e892:	jb     0x14000e98d
   14000e898:	mov    rcx,rbx
   14000e89b:	sub    rcx,rbp
   14000e89e:	mov    rax,rcx
   14000e8a1:	sar    rax,1
   14000e8a4:	cmp    rax,0x3fffffff
   14000e8aa:	jbe    0x14000e8b5
   14000e8ac:	cmp    rbx,rbp
   14000e8af:	ja     0x14000e98d
   14000e8b5:	mov    rax,r8
   14000e8b8:	sub    rax,rdx
   14000e8bb:	cmp    rax,0x7fffffff
   14000e8c1:	jbe    0x14000e8cc
   14000e8c3:	cmp    r8,rdx
   14000e8c6:	ja     0x14000e98d
   14000e8cc:	test   cl,0x1
   14000e8cf:	jne    0x14000e98d
   14000e8d5:	cmp    BYTE PTR [rsi+0x5b],0x0
   14000e8d9:	jle    0x14000e8f7
   14000e8db:	lea    r9,[rsp+0xb8]
   14000e8e3:	mov    rdx,r13
   14000e8e6:	mov    rcx,rsi
   14000e8e9:	mov    QWORD PTR [rsp+0x20],rdi
   14000e8ee:	call   0x14000e730
   14000e8f3:	test   al,al
   14000e8f5:	jne    0x14000e966
   14000e8f7:	movzx  eax,BYTE PTR [rsp+0xc0]
   14000e8ff:	test   al,al
   14000e901:	jne    0x14000e910
   14000e903:	cmp    rbp,rbx
   14000e906:	jne    0x14000e910
   14000e908:	cmp    BYTE PTR [rsi+0x119],al
   14000e90e:	jge    0x14000e966
   14000e910:	mov    BYTE PTR [rsp+0x32],al
   14000e914:	mov    rax,QWORD PTR [rsp+0xb8]
   14000e91c:	lea    rcx,[rsp+0x30]
   14000e921:	mov    QWORD PTR [rsp+0x60],rax
   14000e926:	mov    rax,QWORD PTR [r13+0x0]
   14000e92a:	mov    rdx,rdi
   14000e92d:	mov    QWORD PTR [rsp+0x50],rax
   14000e932:	mov    eax,0x38
   14000e937:	mov    QWORD PTR [rsp+0x38],rsi
   14000e93c:	mov    QWORD PTR [rsp+0x40],rbp
   14000e941:	mov    QWORD PTR [rsp+0x48],rbx
   14000e946:	mov    QWORD PTR [rsp+0x58],r12
   14000e94b:	mov    WORD PTR [rsp+0x30],ax
   14000e950:	call   0x14000e2c0
   14000e955:	mov    r11,QWORD PTR [rsp+0x40]
   14000e95a:	mov    rax,QWORD PTR [rsp+0x50]
   14000e95f:	mov    QWORD PTR [r14],r11
   14000e962:	mov    QWORD PTR [r13+0x0],rax
   14000e966:	mov    rbx,QWORD PTR [rsp+0x90]
   14000e96e:	mov    rbp,QWORD PTR [rsp+0x98]
   14000e976:	lea    r11,[rsp+0x70]
   14000e97b:	mov    rsi,QWORD PTR [r11+0x30]
   14000e97f:	mov    rdi,QWORD PTR [r11+0x38]
   14000e983:	mov    rsp,r11
   14000e986:	pop    r14
   14000e988:	pop    r13
   14000e98a:	pop    r12
   14000e98c:	ret    
   14000e98d:	mov    DWORD PTR [rdi],0x1
   14000e993:	jmp    0x14000e966
   14000e995:	mov    DWORD PTR [rdi],0x1
   14000e99b:	jmp    0x14000e976
   14000e99d:	int3   
   14000e99e:	int3   
   14000e99f:	int3   
   14000e9a0:	mov    QWORD PTR [rsp+0x18],rbx
   14000e9a5:	push   rbp
   14000e9a6:	push   rsi
   14000e9a7:	push   rdi
   14000e9a8:	push   r12
   14000e9aa:	push   r13
   14000e9ac:	push   r14
   14000e9ae:	push   r15
   14000e9b0:	sub    rsp,0x80
   14000e9b7:	mov    rax,QWORD PTR [rip+0x57ef2]        # 0x1400668b0
   14000e9be:	xor    rax,rsp
   14000e9c1:	mov    QWORD PTR [rsp+0x78],rax
   14000e9c6:	mov    rsi,QWORD PTR [rcx+0x8]
   14000e9ca:	mov    rdi,QWORD PTR [rcx+0x30]
   14000e9ce:	mov    r12,QWORD PTR [rcx+0x20]
   14000e9d2:	mov    rax,QWORD PTR [rsi+0x30]
   14000e9d6:	mov    r13,rdx
   14000e9d9:	mov    rdx,QWORD PTR [rcx+0x10]
   14000e9dd:	xor    r14d,r14d
   14000e9e0:	or     rbx,0xffffffffffffffff
   14000e9e4:	mov    rbp,rcx
   14000e9e7:	mov    rcx,QWORD PTR [rax+0x28]
   14000e9eb:	mov    QWORD PTR [rsp+0x50],rdx
   14000e9f0:	test   rdi,rdi
   14000e9f3:	je     0x14000ea06
   14000e9f5:	mov    r15,QWORD PTR [rcx+0x38]
   14000e9f9:	mov    QWORD PTR [rsp+0x40],r15
   14000e9fe:	test   r15,r15
   14000ea01:	jne    0x14000ea0f
   14000ea03:	mov    r14d,ebx
   14000ea06:	mov    r15,QWORD PTR [rcx+0x30]
   14000ea0a:	mov    QWORD PTR [rsp+0x40],r15
   14000ea0f:	movzx  eax,BYTE PTR [rsi+0x11a]
   14000ea16:	test   al,al
   14000ea18:	js     0x14000ea32
   14000ea1a:	xor    edx,edx
   14000ea1c:	xor    ecx,ecx
   14000ea1e:	mov    QWORD PTR [rsp+0x48],rcx
   14000ea23:	mov    DWORD PTR [rsp+0x34],ecx
   14000ea27:	mov    QWORD PTR [rsp+0x38],rdx
   14000ea2c:	mov    BYTE PTR [rsp+0x30],dl
   14000ea30:	jmp    0x14000ea91
   14000ea32:	mov    rcx,QWORD PTR [rbp+0x18]
   14000ea36:	mov    QWORD PTR [rsp+0x38],rdx
   14000ea3b:	movzx  edx,BYTE PTR [rbp+0x2]
   14000ea3f:	movsx  eax,al
   14000ea42:	mov    BYTE PTR [rsp+0x30],dl
   14000ea46:	mov    QWORD PTR [rsp+0x48],rcx
   14000ea4b:	neg    eax
   14000ea4d:	lea    rdx,[rsi+0xfa]
   14000ea54:	lea    rcx,[rsp+0x58]
   14000ea59:	movsxd r8,eax
   14000ea5c:	mov    DWORD PTR [rsp+0x34],r14d
   14000ea61:	call   0x14002b9a0
   14000ea66:	lea    r11,[rsp+0x58]
   14000ea6b:	lea    rcx,[rsp+0x58]
   14000ea70:	mov    QWORD PTR [rbp+0x10],r11
   14000ea74:	movsx  rax,BYTE PTR [rsi+0x11a]
   14000ea7c:	mov    BYTE PTR [rbp+0x2],0x0
   14000ea80:	sub    rcx,rax
   14000ea83:	mov    r14d,ebx
   14000ea86:	mov    QWORD PTR [rbp+0x18],rcx
   14000ea8a:	mov    BYTE PTR [rsi+0x11a],0x0
   14000ea91:	cmp    DWORD PTR [r13+0x0],0x0
   14000ea96:	jg     0x14000eac3
   14000ea98:	mov    rdx,r13
   14000ea9b:	mov    rcx,rbp
   14000ea9e:	call   r15
   14000eaa1:	cmp    DWORD PTR [r13+0x0],0x0
   14000eaa6:	jg     0x14000eac3
   14000eaa8:	cmp    BYTE PTR [rbp+0x2],0x0
   14000eaac:	je     0x14000eac3
   14000eaae:	mov    rax,QWORD PTR [rbp+0x18]
   14000eab2:	cmp    QWORD PTR [rbp+0x10],rax
   14000eab6:	jne    0x14000eac3
   14000eab8:	cmp    BYTE PTR [rsi+0x40],0x0
   14000eabc:	mov    BYTE PTR [rsp+0x31],0x1
   14000eac1:	je     0x14000eac8
   14000eac3:	mov    BYTE PTR [rsp+0x31],0x0
   14000eac8:	xor    r15b,r15b
   14000eacb:	xor    ebx,ebx
   14000eacd:	nop    DWORD PTR [rax]
   14000ead0:	test   rdi,rdi
   14000ead3:	je     0x14000eb55
   14000ead9:	mov    rax,QWORD PTR [rbp+0x20]
   14000eadd:	sub    rax,r12
   14000eae0:	sar    rax,1
   14000eae3:	test   eax,eax
   14000eae5:	jle    0x14000eb46
   14000eae7:	test   r14d,r14d
   14000eaea:	js     0x14000eaf7
   14000eaec:	mov    ecx,r14d
   14000eaef:	sub    ecx,ebx
   14000eaf1:	or     r8,0xffffffffffffffff
   14000eaf5:	jmp    0x14000eafe
   14000eaf7:	or     r8,0xffffffffffffffff
   14000eafb:	mov    ecx,r8d
   14000eafe:	cdqe   
   14000eb00:	lea    rdx,[rdi+rax*4]
   14000eb04:	test   ecx,ecx
   14000eb06:	je     0x14000eb3f
   14000eb08:	jle    0x14000eb25
   14000eb0a:	cmp    rdi,rdx
   14000eb0d:	jae    0x14000eb3f
   14000eb0f:	nop
   14000eb10:	mov    eax,DWORD PTR [rdi]
   14000eb12:	test   eax,eax
   14000eb14:	js     0x14000eb1a
   14000eb16:	add    eax,ecx
   14000eb18:	mov    DWORD PTR [rdi],eax
   14000eb1a:	add    rdi,0x4
   14000eb1e:	cmp    rdi,rdx
   14000eb21:	jb     0x14000eb10
   14000eb23:	jmp    0x14000eb3f
   14000eb25:	cmp    rdi,rdx
   14000eb28:	jae    0x14000eb3f
   14000eb2a:	mov    rcx,rdx
   14000eb2d:	mov    rax,r8
   14000eb30:	sub    rcx,rdi
   14000eb33:	dec    rcx
   14000eb36:	shr    rcx,0x2
   14000eb3a:	inc    rcx
   14000eb3d:	rep stos DWORD PTR es:[rdi],eax
   14000eb3f:	mov    rdi,rdx
   14000eb42:	mov    QWORD PTR [rbp+0x30],rdx
   14000eb46:	test   r14d,r14d
   14000eb49:	js     0x14000eb55
   14000eb4b:	mov    eax,DWORD PTR [rbp+0x10]
   14000eb4e:	sub    eax,DWORD PTR [rsp+0x50]
   14000eb52:	add    r14d,eax
   14000eb55:	movzx  eax,BYTE PTR [rsi+0x11a]
   14000eb5c:	mov    rbx,QWORD PTR [rsp+0x38]
   14000eb61:	test   al,al
   14000eb63:	jns    0x14000ebec
   14000eb69:	test   rbx,rbx
   14000eb6c:	jne    0x14000ebe4
   14000eb6e:	mov    rcx,QWORD PTR [rbp+0x18]
   14000eb72:	mov    rbx,QWORD PTR [rbp+0x10]
   14000eb76:	movsx  eax,al
   14000eb79:	mov    QWORD PTR [rsp+0x48],rcx
   14000eb7e:	mov    cl,BYTE PTR [rbp+0x2]
   14000eb81:	neg    eax
   14000eb83:	mov    BYTE PTR [rsp+0x30],cl
   14000eb87:	lea    rdx,[rsi+0xfa]
   14000eb8e:	lea    rcx,[rsp+0x58]
   14000eb93:	movsxd r8,eax
   14000eb96:	mov    QWORD PTR [rsp+0x38],rbx
   14000eb9b:	mov    DWORD PTR [rsp+0x34],r14d
   14000eba0:	call   0x14002b9a0
   14000eba5:	lea    r11,[rsp+0x58]
   14000ebaa:	lea    rcx,[rsp+0x58]
   14000ebaf:	mov    QWORD PTR [rbp+0x10],r11
   14000ebb3:	movsx  rax,BYTE PTR [rsi+0x11a]
   14000ebbb:	mov    BYTE PTR [rbp+0x2],0x0
   14000ebbf:	sub    rcx,rax
   14000ebc2:	mov    QWORD PTR [rbp+0x18],rcx
   14000ebc6:	movsx  eax,BYTE PTR [rsi+0x11a]
   14000ebcd:	mov    BYTE PTR [rsi+0x11a],0x0
   14000ebd4:	add    r14d,eax
   14000ebd7:	mov    rax,0xffffffffffffffff
   14000ebde:	cmovs  r14d,eax
   14000ebe2:	jmp    0x14000ebec
   14000ebe4:	mov    DWORD PTR [r13+0x0],0x5
   14000ebec:	cmp    DWORD PTR [r13+0x0],0x0
   14000ebf1:	mov    rdx,QWORD PTR [rbp+0x10]
   14000ebf5:	mov    r12,QWORD PTR [rbp+0x20]
   14000ebf9:	mov    QWORD PTR [rsp+0x50],rdx
   14000ebfe:	jg     0x14000ec34
   14000ec00:	mov    r15,QWORD PTR [rsp+0x40]
   14000ec05:	cmp    rdx,QWORD PTR [rbp+0x18]
   14000ec09:	jb     0x14000ea91
   14000ec0f:	test   rbx,rbx
   14000ec12:	jne    0x14000ecec
   14000ec18:	cmp    BYTE PTR [rbp+0x2],bl
   14000ec1b:	je     0x14000ed8e
   14000ec21:	cmp    BYTE PTR [rsi+0x40],bl
   14000ec24:	jle    0x14000ecd6
   14000ec2a:	mov    DWORD PTR [r13+0x0],0xb
   14000ec32:	jmp    0x14000ec3d
   14000ec34:	test   r15b,r15b
   14000ec37:	jne    0x14000ed4e
   14000ec3d:	mov    eax,DWORD PTR [r13+0x0]
   14000ec41:	cmp    eax,0xf
   14000ec44:	je     0x14000ed4e
   14000ec4a:	cmp    eax,0xa
   14000ec4d:	je     0x14000ec67
   14000ec4f:	cmp    eax,0xc
   14000ec52:	je     0x14000ec67
   14000ec54:	cmp    eax,0xb
   14000ec57:	je     0x14000ec67
   14000ec59:	cmp    eax,0x12
   14000ec5c:	je     0x14000ec67
   14000ec5e:	cmp    eax,0x13
   14000ec61:	jne    0x14000ed4e
   14000ec67:	movsx  rax,BYTE PTR [rsi+0x40]
   14000ec6c:	mov    BYTE PTR [rsi+0x5a],al
   14000ec6f:	mov    rbx,rax
   14000ec72:	test   al,al
   14000ec74:	jle    0x14000ec86
   14000ec76:	lea    rdx,[rsi+0x41]
   14000ec7a:	lea    rcx,[rsi+0x60]
   14000ec7e:	mov    r8,rax
   14000ec81:	call   0x14002b9a0
   14000ec86:	cmp    DWORD PTR [rsi+0x11c],0x1
   14000ec8d:	mov    BYTE PTR [rsi+0x40],0x0
   14000ec91:	jne    0x14000eca4
   14000ec93:	cmp    DWORD PTR [r13+0x0],0xa
   14000ec98:	jne    0x14000eca4
   14000ec9a:	mov    DWORD PTR [rsi+0x11c],0x0
   14000eca4:	mov    eax,DWORD PTR [rsi+0x11c]
   14000ecaa:	mov    rcx,QWORD PTR [rsi+0x20]
   14000ecae:	lea    r8,[rsi+0x60]
   14000ecb2:	mov    r9d,ebx
   14000ecb5:	mov    rdx,rbp
   14000ecb8:	mov    QWORD PTR [rsp+0x28],r13
   14000ecbd:	mov    DWORD PTR [rsp+0x20],eax
   14000ecc1:	call   QWORD PTR [rsi+0x8]
   14000ecc4:	mov    DWORD PTR [rsi+0x11c],0x1
   14000ecce:	mov    r15b,0x1
   14000ecd1:	jmp    0x14000ead0
   14000ecd6:	cmp    BYTE PTR [rbp+0x2],0x0
   14000ecda:	je     0x14000ed8e
   14000ece0:	cmp    BYTE PTR [rsp+0x31],0x0
   14000ece5:	jne    0x14000ed11
   14000ece7:	jmp    0x14000ea91
   14000ecec:	mov    dl,BYTE PTR [rsp+0x30]
   14000ecf0:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ecf5:	mov    r14d,DWORD PTR [rsp+0x34]
   14000ecfa:	mov    BYTE PTR [rbp+0x2],dl
   14000ecfd:	xor    edx,edx
   14000ecff:	mov    QWORD PTR [rbp+0x10],rbx
   14000ed03:	mov    QWORD PTR [rbp+0x18],rcx
   14000ed07:	mov    QWORD PTR [rsp+0x38],rdx
   14000ed0c:	jmp    0x14000ea91
   14000ed11:	mov    rcx,QWORD PTR [rsi+0x30]
   14000ed15:	mov    eax,DWORD PTR [rcx+0x30]
   14000ed18:	mov    DWORD PTR [rsi+0x4c],0x0
   14000ed1f:	mov    BYTE PTR [rsi+0x40],0x0
   14000ed23:	mov    BYTE PTR [rsi+0x5d],0x0
   14000ed27:	mov    BYTE PTR [rsi+0x5a],0x0
   14000ed2b:	mov    BYTE PTR [rsi+0x11a],0x0
   14000ed32:	mov    DWORD PTR [rsi+0x48],eax
   14000ed35:	mov    rax,QWORD PTR [rcx+0x28]
   14000ed39:	mov    rax,QWORD PTR [rax+0x28]
   14000ed3d:	test   rax,rax
   14000ed40:	je     0x14000ed8e
   14000ed42:	mov    edx,0x1
   14000ed47:	mov    rcx,rsi
   14000ed4a:	call   rax
   14000ed4c:	jmp    0x14000ed8e
   14000ed4e:	test   rbx,rbx
   14000ed51:	je     0x14000ed8e
   14000ed53:	mov    edi,DWORD PTR [rbp+0x18]
   14000ed56:	sub    edi,DWORD PTR [rbp+0x10]
   14000ed59:	test   edi,edi
   14000ed5b:	jle    0x14000ed7a
   14000ed5d:	mov    rdx,QWORD PTR [rbp+0x10]
   14000ed61:	lea    rcx,[rsi+0xfa]
   14000ed68:	movsxd r8,edi
   14000ed6b:	call   0x14002b9a0
   14000ed70:	neg    dil
   14000ed73:	mov    BYTE PTR [rsi+0x11a],dil
   14000ed7a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ed7f:	mov    dl,BYTE PTR [rsp+0x30]
   14000ed83:	mov    QWORD PTR [rbp+0x10],rbx
   14000ed87:	mov    QWORD PTR [rbp+0x18],rcx
   14000ed8b:	mov    BYTE PTR [rbp+0x2],dl
   14000ed8e:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ed93:	xor    rcx,rsp
   14000ed96:	call   0x14002b250
   14000ed9b:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000eda3:	add    rsp,0x80
   14000edaa:	pop    r15
   14000edac:	pop    r14
   14000edae:	pop    r13
   14000edb0:	pop    r12
   14000edb2:	pop    rdi
   14000edb3:	pop    rsi
   14000edb4:	pop    rbp
   14000edb5:	ret    
   14000edb6:	int3   
   14000edb7:	int3   
   14000edb8:	int3   
   14000edb9:	int3   
   14000edba:	int3   
   14000edbb:	int3   
   14000edbc:	int3   
   14000edbd:	int3   
   14000edbe:	int3   
   14000edbf:	int3   
   14000edc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000edc5:	mov    QWORD PTR [rsp+0x10],rbp
   14000edca:	mov    QWORD PTR [rsp+0x18],rsi
   14000edcf:	mov    QWORD PTR [rsp+0x20],rdi
   14000edd4:	mov    rdi,r9
   14000edd7:	mov    r9,QWORD PTR [rdx]
   14000edda:	mov    rsi,r8
   14000eddd:	xor    r8d,r8d
   14000ede0:	mov    rbp,rdx
   14000ede3:	mov    r11,rcx
   14000ede6:	test   rdi,rdi
   14000ede9:	je     0x14000edf0
   14000edeb:	mov    r10,QWORD PTR [rdi]
   14000edee:	jmp    0x14000edf3
   14000edf0:	mov    r10,r8
   14000edf3:	movsx  rbx,BYTE PTR [rcx+0x5d]
   14000edf8:	mov    rdx,r8
   14000edfb:	test   rbx,rbx
   14000edfe:	jle    0x14000ee2e
   14000ee00:	cmp    r9,rsi
   14000ee03:	je     0x14000ee60
   14000ee05:	movzx  eax,WORD PTR [rcx+rdx*2+0x90]
   14000ee0d:	add    r9,0x2
   14000ee11:	inc    rdx
   14000ee14:	mov    WORD PTR [r9-0x2],ax
   14000ee19:	test   r10,r10
   14000ee1c:	je     0x14000ee29
   14000ee1e:	mov    DWORD PTR [r10],0xffffffff
   14000ee25:	add    r10,0x4
   14000ee29:	cmp    rdx,rbx
   14000ee2c:	jl     0x14000ee00
   14000ee2e:	mov    BYTE PTR [rcx+0x5d],r8b
   14000ee32:	mov    QWORD PTR [rbp+0x0],r9
   14000ee36:	test   r10,r10
   14000ee39:	je     0x14000ee3e
   14000ee3b:	mov    QWORD PTR [rdi],r10
   14000ee3e:	xor    al,al
   14000ee40:	mov    rbx,QWORD PTR [rsp+0x8]
   14000ee45:	mov    rbp,QWORD PTR [rsp+0x10]
   14000ee4a:	mov    rsi,QWORD PTR [rsp+0x18]
   14000ee4f:	mov    rdi,QWORD PTR [rsp+0x20]
   14000ee54:	ret    
   14000ee55:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ee60:	movzx  eax,WORD PTR [r11+rdx*2+0x90]
   14000ee69:	movsxd rcx,r8d
   14000ee6c:	inc    rdx
   14000ee6f:	inc    r8d
   14000ee72:	cmp    rdx,rbx
   14000ee75:	mov    WORD PTR [r11+rcx*2+0x90],ax
   14000ee7e:	jl     0x14000ee60
   14000ee80:	mov    BYTE PTR [r11+0x5d],r8b
   14000ee84:	mov    QWORD PTR [rbp+0x0],r9
   14000ee88:	test   r10,r10
   14000ee8b:	je     0x14000ee90
   14000ee8d:	mov    QWORD PTR [rdi],r10
   14000ee90:	mov    rax,QWORD PTR [rsp+0x28]
   14000ee95:	mov    DWORD PTR [rax],0xf
   14000ee9b:	mov    al,0x1
   14000ee9d:	jmp    0x14000ee40
   14000ee9f:	int3   
   14000eea0:	mov    rax,rsp
   14000eea3:	mov    QWORD PTR [rax+0x18],rbx
   14000eea7:	mov    QWORD PTR [rax+0x20],rdi
   14000eeab:	push   r12
   14000eead:	push   r13
   14000eeaf:	push   r14
   14000eeb1:	sub    rsp,0x70
   14000eeb5:	mov    rdi,QWORD PTR [rsp+0xc8]
   14000eebd:	mov    r14,r9
   14000eec0:	mov    rbx,r8
   14000eec3:	mov    r13,rdx
   14000eec6:	mov    r12,rcx
   14000eec9:	test   rdi,rdi
   14000eecc:	je     0x14000f01d
   14000eed2:	cmp    DWORD PTR [rdi],0x0
   14000eed5:	jg     0x14000f01d
   14000eedb:	test   rcx,rcx
   14000eede:	je     0x14000f03c
   14000eee4:	test   rdx,rdx
   14000eee7:	je     0x14000f03c
   14000eeed:	test   r9,r9
   14000eef0:	je     0x14000f03c
   14000eef6:	mov    rdx,QWORD PTR [rdx]
   14000eef9:	mov    QWORD PTR [rax+0x8],rbp
   14000eefd:	mov    rbp,QWORD PTR [r9]
   14000ef00:	or     rcx,0xffffffffffffffff
   14000ef04:	mov    QWORD PTR [rax+0x10],rsi
   14000ef08:	lea    rax,[r8+0x7fffffff]
   14000ef0f:	cmp    rax,rbx
   14000ef12:	cmova  rcx,rax
   14000ef16:	cmp    rcx,rbx
   14000ef19:	jne    0x14000ef1e
   14000ef1b:	dec    rbx
   14000ef1e:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000ef26:	cmp    rsi,rbp
   14000ef29:	jb     0x14000f034
   14000ef2f:	cmp    rbx,rdx
   14000ef32:	jb     0x14000f034
   14000ef38:	mov    rax,rsi
   14000ef3b:	sub    rax,rbp
   14000ef3e:	cmp    rax,0x7fffffff
   14000ef44:	jbe    0x14000ef4f
   14000ef46:	cmp    rsi,rbp
   14000ef49:	ja     0x14000f034
   14000ef4f:	mov    rcx,rbx
   14000ef52:	sub    rcx,rdx
   14000ef55:	mov    rax,rcx
   14000ef58:	sar    rax,1
   14000ef5b:	cmp    rax,0x3fffffff
   14000ef61:	jbe    0x14000ef6c
   14000ef63:	cmp    rbx,rdx
   14000ef66:	ja     0x14000f034
   14000ef6c:	test   cl,0x1
   14000ef6f:	jne    0x14000f034
   14000ef75:	cmp    BYTE PTR [r12+0x5d],0x0
   14000ef7b:	jle    0x14000ef9c
   14000ef7d:	lea    r9,[rsp+0xb8]
   14000ef85:	mov    r8,rbx
   14000ef88:	mov    rdx,r13
   14000ef8b:	mov    rcx,r12
   14000ef8e:	mov    QWORD PTR [rsp+0x20],rdi
   14000ef93:	call   0x14000edc0
   14000ef98:	test   al,al
   14000ef9a:	jne    0x14000f00d
   14000ef9c:	movzx  eax,BYTE PTR [rsp+0xc0]
   14000efa4:	test   al,al
   14000efa6:	jne    0x14000efb7
   14000efa8:	cmp    rbp,rsi
   14000efab:	jne    0x14000efb7
   14000efad:	cmp    BYTE PTR [r12+0x11a],al
   14000efb5:	jge    0x14000f00d
   14000efb7:	mov    BYTE PTR [rsp+0x32],al
   14000efbb:	mov    rax,QWORD PTR [rsp+0xb8]
   14000efc3:	lea    rcx,[rsp+0x30]
   14000efc8:	mov    QWORD PTR [rsp+0x60],rax
   14000efcd:	mov    rax,QWORD PTR [r13+0x0]
   14000efd1:	mov    rdx,rdi
   14000efd4:	mov    QWORD PTR [rsp+0x50],rax
   14000efd9:	mov    eax,0x38
   14000efde:	mov    QWORD PTR [rsp+0x38],r12
   14000efe3:	mov    QWORD PTR [rsp+0x40],rbp
   14000efe8:	mov    QWORD PTR [rsp+0x48],rsi
   14000efed:	mov    QWORD PTR [rsp+0x58],rbx
   14000eff2:	mov    WORD PTR [rsp+0x30],ax
   14000eff7:	call   0x14000e9a0
   14000effc:	mov    r11,QWORD PTR [rsp+0x40]
   14000f001:	mov    rax,QWORD PTR [rsp+0x50]
   14000f006:	mov    QWORD PTR [r14],r11
   14000f009:	mov    QWORD PTR [r13+0x0],rax
   14000f00d:	mov    rbp,QWORD PTR [rsp+0x90]
   14000f015:	mov    rsi,QWORD PTR [rsp+0x98]
   14000f01d:	lea    r11,[rsp+0x70]
   14000f022:	mov    rbx,QWORD PTR [r11+0x30]
   14000f026:	mov    rdi,QWORD PTR [r11+0x38]
   14000f02a:	mov    rsp,r11
   14000f02d:	pop    r14
   14000f02f:	pop    r13
   14000f031:	pop    r12
   14000f033:	ret    
   14000f034:	mov    DWORD PTR [rdi],0x1
   14000f03a:	jmp    0x14000f00d
   14000f03c:	mov    DWORD PTR [rdi],0x1
   14000f042:	jmp    0x14000f01d
   14000f044:	int3   
   14000f045:	int3   
   14000f046:	int3   
   14000f047:	int3   
   14000f048:	int3   
   14000f049:	int3   
   14000f04a:	int3   
   14000f04b:	int3   
   14000f04c:	int3   
   14000f04d:	int3   
   14000f04e:	int3   
   14000f04f:	int3   
   14000f050:	rex push rbx
   14000f052:	push   rbp
   14000f053:	push   rsi
   14000f054:	push   r12
   14000f056:	push   r14
   14000f058:	sub    rsp,0x870
   14000f05f:	mov    rax,QWORD PTR [rip+0x5784a]        # 0x1400668b0
   14000f066:	xor    rax,rsp
   14000f069:	mov    QWORD PTR [rsp+0x850],rax
   14000f071:	mov    rbx,QWORD PTR [rsp+0x8c8]
   14000f079:	mov    rsi,r9
   14000f07c:	movsxd r14,r8d
   14000f07f:	mov    rbp,rdx
   14000f082:	mov    r12,rcx
   14000f085:	mov    QWORD PTR [rsp+0x40],rdx
   14000f08a:	mov    QWORD PTR [rsp+0x48],r9
   14000f08f:	test   rbx,rbx
   14000f092:	je     0x14000f221
   14000f098:	cmp    DWORD PTR [rbx],0x0
   14000f09b:	jg     0x14000f221
   14000f0a1:	mov    QWORD PTR [rsp+0x868],rdi
   14000f0a9:	test   rcx,rcx
   14000f0ac:	je     0x14000f217
   14000f0b2:	test   r8d,r8d
   14000f0b5:	js     0x14000f217
   14000f0bb:	test   r8d,r8d
   14000f0be:	jle    0x14000f0c9
   14000f0c0:	test   rdx,rdx
   14000f0c3:	je     0x14000f217
   14000f0c9:	mov    edi,DWORD PTR [rsp+0x8c0]
   14000f0d0:	cmp    edi,0xffffffff
   14000f0d3:	jl     0x14000f217
   14000f0d9:	test   edi,edi
   14000f0db:	je     0x14000f0e6
   14000f0dd:	test   r9,r9
   14000f0e0:	je     0x14000f217
   14000f0e6:	call   0x14000e070
   14000f0eb:	cmp    edi,0xffffffff
   14000f0ee:	jne    0x14000f102
   14000f0f0:	or     rcx,0xffffffffffffffff
   14000f0f4:	xor    eax,eax
   14000f0f6:	mov    rdi,rsi
   14000f0f9:	repnz scas al,BYTE PTR es:[rdi]
   14000f0fb:	not    rcx
   14000f0fe:	lea    rdi,[rcx-0x1]
   14000f102:	mov    QWORD PTR [rsp+0x860],r13
   14000f10a:	test   edi,edi
   14000f10c:	jle    0x14000f1d3
   14000f112:	lea    r8,[rbp+r14*2+0x0]
   14000f117:	movsxd r13,edi
   14000f11a:	add    r13,rsi
   14000f11d:	cmp    r8,rbp
   14000f120:	jb     0x14000f12c
   14000f122:	test   r8,r8
   14000f125:	jne    0x14000f13e
   14000f127:	test   rbp,rbp
   14000f12a:	je     0x14000f13e
   14000f12c:	lea    rax,[rbp+0x7fffffff]
   14000f133:	or     r8,0xffffffffffffffff
   14000f137:	cmp    rax,rbp
   14000f13a:	cmova  r8,rax
   14000f13e:	mov    QWORD PTR [rsp+0x38],rbx
   14000f143:	mov    BYTE PTR [rsp+0x30],0x1
   14000f148:	xor    edi,edi
   14000f14a:	lea    r9,[rsp+0x48]
   14000f14f:	lea    rdx,[rsp+0x40]
   14000f154:	mov    rcx,r12
   14000f157:	mov    QWORD PTR [rsp+0x28],rdi
   14000f15c:	mov    QWORD PTR [rsp+0x20],r13
   14000f161:	call   0x14000eea0
   14000f166:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f16b:	sub    rsi,rbp
   14000f16e:	sar    rsi,1
   14000f171:	cmp    DWORD PTR [rbx],0xf
   14000f174:	jne    0x14000f1d7
   14000f176:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000f180:	mov    QWORD PTR [rsp+0x38],rbx
   14000f185:	lea    rax,[rsp+0x50]
   14000f18a:	mov    BYTE PTR [rsp+0x30],0x1
   14000f18f:	lea    r9,[rsp+0x48]
   14000f194:	lea    r8,[rsp+0x850]
   14000f19c:	lea    rdx,[rsp+0x40]
   14000f1a1:	mov    rcx,r12
   14000f1a4:	mov    QWORD PTR [rsp+0x28],rdi
   14000f1a9:	mov    QWORD PTR [rsp+0x40],rax
   14000f1ae:	mov    DWORD PTR [rbx],edi
   14000f1b0:	mov    QWORD PTR [rsp+0x20],r13
   14000f1b5:	call   0x14000eea0
   14000f1ba:	mov    rax,QWORD PTR [rsp+0x40]
   14000f1bf:	lea    r11,[rsp+0x50]
   14000f1c4:	sub    rax,r11
   14000f1c7:	sar    rax,1
   14000f1ca:	add    esi,eax
   14000f1cc:	cmp    DWORD PTR [rbx],0xf
   14000f1cf:	je     0x14000f180
   14000f1d1:	jmp    0x14000f1d7
   14000f1d3:	xor    edi,edi
   14000f1d5:	mov    esi,edi
   14000f1d7:	mov    r9,rbx
   14000f1da:	mov    r8d,esi
   14000f1dd:	mov    edx,r14d
   14000f1e0:	mov    rcx,rbp
   14000f1e3:	call   0x1400112e0
   14000f1e8:	mov    r13,QWORD PTR [rsp+0x860]
   14000f1f0:	mov    rdi,QWORD PTR [rsp+0x868]
   14000f1f8:	mov    rcx,QWORD PTR [rsp+0x850]
   14000f200:	xor    rcx,rsp
   14000f203:	call   0x14002b250
   14000f208:	add    rsp,0x870
   14000f20f:	pop    r14
   14000f211:	pop    r12
   14000f213:	pop    rsi
   14000f214:	pop    rbp
   14000f215:	pop    rbx
   14000f216:	ret    
   14000f217:	mov    DWORD PTR [rbx],0x1
   14000f21d:	xor    eax,eax
   14000f21f:	jmp    0x14000f1f0
   14000f221:	xor    eax,eax
   14000f223:	jmp    0x14000f1f8
   14000f225:	int3   
   14000f226:	int3   
   14000f227:	int3   
   14000f228:	int3   
   14000f229:	int3   
   14000f22a:	int3   
   14000f22b:	int3   
   14000f22c:	int3   
   14000f22d:	int3   
   14000f22e:	int3   
   14000f22f:	int3   
   14000f230:	rex push rbx
   14000f232:	push   rbp
   14000f233:	push   rsi
   14000f234:	push   r12
   14000f236:	push   r14
   14000f238:	push   r15
   14000f23a:	sub    rsp,0x908
   14000f241:	mov    rax,QWORD PTR [rip+0x57668]        # 0x1400668b0
   14000f248:	xor    rax,rsp
   14000f24b:	mov    QWORD PTR [rsp+0x8e0],rax
   14000f253:	mov    rbx,QWORD PTR [rsp+0x9a0]
   14000f25b:	mov    rax,QWORD PTR [rsp+0x960]
   14000f263:	mov    r12,QWORD PTR [rsp+0x970]
   14000f26b:	mov    r15,QWORD PTR [rsp+0x978]
   14000f273:	mov    r14,QWORD PTR [rsp+0x980]
   14000f27b:	mov    r11,r8
   14000f27e:	mov    QWORD PTR [rsp+0x40],r8
   14000f283:	mov    r8,QWORD PTR [rsp+0x988]
   14000f28b:	mov    rsi,rdx
   14000f28e:	mov    rdx,QWORD PTR [rsp+0x968]
   14000f296:	mov    r10,r9
   14000f299:	mov    QWORD PTR [rsp+0x48],r9
   14000f29e:	mov    QWORD PTR [rsp+0x30],r8
   14000f2a3:	mov    rbp,rcx
   14000f2a6:	mov    QWORD PTR [rsp+0xd8],rax
   14000f2ae:	mov    QWORD PTR [rsp+0x50],rdx
   14000f2b3:	test   rbx,rbx
   14000f2b6:	je     0x14000f827
   14000f2bc:	cmp    DWORD PTR [rbx],0x0
   14000f2bf:	jg     0x14000f827
   14000f2c5:	mov    QWORD PTR [rsp+0x900],rdi
   14000f2cd:	test   rcx,rcx
   14000f2d0:	je     0x14000f858
   14000f2d6:	test   rsi,rsi
   14000f2d9:	je     0x14000f858
   14000f2df:	test   rax,rax
   14000f2e2:	je     0x14000f858
   14000f2e8:	mov    rdi,QWORD PTR [rax]
   14000f2eb:	test   rdi,rdi
   14000f2ee:	je     0x14000f858
   14000f2f4:	test   r11,r11
   14000f2f7:	je     0x14000f858
   14000f2fd:	mov    rcx,QWORD PTR [r11]
   14000f300:	test   rcx,rcx
   14000f303:	je     0x14000f858
   14000f309:	test   r9,r9
   14000f30c:	je     0x14000f858
   14000f312:	test   rdx,rdx
   14000f315:	je     0x14000f320
   14000f317:	cmp    rdx,rdi
   14000f31a:	jb     0x14000f858
   14000f320:	cmp    r9,rcx
   14000f323:	jb     0x14000f858
   14000f329:	test   rdx,rdx
   14000f32c:	je     0x14000f345
   14000f32e:	mov    rax,rdx
   14000f331:	sub    rax,rdi
   14000f334:	cmp    rax,0x7fffffff
   14000f33a:	jbe    0x14000f345
   14000f33c:	cmp    rdx,rdi
   14000f33f:	ja     0x14000f858
   14000f345:	mov    rax,r9
   14000f348:	sub    rax,rcx
   14000f34b:	cmp    rax,0x7fffffff
   14000f351:	jbe    0x14000f35c
   14000f353:	cmp    r9,rcx
   14000f356:	ja     0x14000f858
   14000f35c:	mov    QWORD PTR [rsp+0x8f8],r13
   14000f364:	movzx  r13d,BYTE PTR [rsp+0x998]
   14000f36d:	test   r12,r12
   14000f370:	jne    0x14000f3c2
   14000f372:	test   r13b,r13b
   14000f375:	je     0x14000f850
   14000f37b:	lea    rax,[rsp+0xe0]
   14000f383:	lea    r12,[rsp+0xe0]
   14000f38b:	lea    r15,[rsp+0x90]
   14000f393:	mov    QWORD PTR [rsp+0x98],rax
   14000f39b:	lea    rax,[rsp+0xe0]
   14000f3a3:	lea    r14,[rsp+0x98]
   14000f3ab:	mov    QWORD PTR [rsp+0x90],rax
   14000f3b3:	lea    rax,[rsp+0x8e0]
   14000f3bb:	mov    QWORD PTR [rsp+0x30],rax
   14000f3c0:	jmp    0x14000f3fa
   14000f3c2:	cmp    r12,r8
   14000f3c5:	jae    0x14000f850
   14000f3cb:	test   r15,r15
   14000f3ce:	je     0x14000f850
   14000f3d4:	cmp    QWORD PTR [r15],0x0
   14000f3d8:	je     0x14000f850
   14000f3de:	test   r14,r14
   14000f3e1:	je     0x14000f850
   14000f3e7:	cmp    QWORD PTR [r14],0x0
   14000f3eb:	je     0x14000f850
   14000f3f1:	test   r8,r8
   14000f3f4:	je     0x14000f850
   14000f3fa:	test   rdx,rdx
   14000f3fd:	jne    0x14000f416
   14000f3ff:	mov    rcx,rdi
   14000f402:	call   0x14002e1c0
   14000f407:	mov    r10,QWORD PTR [rsp+0x48]
   14000f40c:	mov    r11,QWORD PTR [rsp+0x40]
   14000f411:	mov    QWORD PTR [rsp+0x50],rax
   14000f416:	cmp    BYTE PTR [rsp+0x990],0x0
   14000f41e:	je     0x14000f438
   14000f420:	mov    rcx,rsi
   14000f423:	call   0x14000e070
   14000f428:	mov    rcx,rbp
   14000f42b:	call   0x14000e130
   14000f430:	mov    QWORD PTR [r14],r12
   14000f433:	mov    QWORD PTR [r15],r12
   14000f436:	jmp    0x14000f48c
   14000f438:	cmp    BYTE PTR [rbp+0x5b],0x0
   14000f43c:	jle    0x14000f48c
   14000f43e:	xor    r9d,r9d
   14000f441:	mov    r8,r10
   14000f444:	mov    rdx,r11
   14000f447:	mov    rcx,rbp
   14000f44a:	mov    QWORD PTR [rsp+0x20],rbx
   14000f44f:	call   0x14000e730
   14000f454:	test   al,al
   14000f456:	jne    0x14000f817
   14000f45c:	test   r13b,r13b
   14000f45f:	jne    0x14000f48c
   14000f461:	cmp    BYTE PTR [rbp+0x119],r13b
   14000f468:	jl     0x14000f48c
   14000f46a:	mov    rax,QWORD PTR [r14]
   14000f46d:	cmp    QWORD PTR [r15],rax
   14000f470:	jne    0x14000f48c
   14000f472:	cmp    BYTE PTR [rsi+0x5d],r13b
   14000f476:	jne    0x14000f48c
   14000f478:	cmp    BYTE PTR [rsi+0x11a],r13b
   14000f47f:	jl     0x14000f48c
   14000f481:	cmp    rdi,QWORD PTR [rsp+0x50]
   14000f486:	je     0x14000f817
   14000f48c:	mov    rdx,QWORD PTR [rsi+0x30]
   14000f490:	mov    rax,QWORD PTR [rdx+0x18]
   14000f494:	cmp    BYTE PTR [rax+0x45],0x4
   14000f498:	jne    0x14000f4b3
   14000f49a:	mov    rax,QWORD PTR [rbp+0x30]
   14000f49e:	mov    rcx,QWORD PTR [rax+0x28]
   14000f4a2:	mov    rcx,QWORD PTR [rcx+0x88]
   14000f4a9:	mov    QWORD PTR [rsp+0x38],rcx
   14000f4ae:	test   rcx,rcx
   14000f4b1:	jne    0x14000f4d6
   14000f4b3:	mov    rax,QWORD PTR [rbp+0x30]
   14000f4b7:	mov    rcx,QWORD PTR [rax+0x18]
   14000f4bb:	cmp    BYTE PTR [rcx+0x45],0x4
   14000f4bf:	jne    0x14000f4fc
   14000f4c1:	mov    rax,QWORD PTR [rdx+0x28]
   14000f4c5:	mov    rcx,QWORD PTR [rax+0x80]
   14000f4cc:	mov    QWORD PTR [rsp+0x38],rcx
   14000f4d1:	test   rcx,rcx
   14000f4d4:	je     0x14000f4fc
   14000f4d6:	test   rcx,rcx
   14000f4d9:	je     0x14000f50c
   14000f4db:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f4e0:	mov    rax,rdx
   14000f4e3:	sub    rax,r12
   14000f4e6:	and    rax,0xfffffffffffffffe
   14000f4ea:	cmp    rax,0x40
   14000f4ee:	jle    0x14000f511
   14000f4f0:	lea    rdx,[r12+0x40]
   14000f4f5:	mov    QWORD PTR [rsp+0x30],rdx
   14000f4fa:	jmp    0x14000f511
   14000f4fc:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f501:	mov    QWORD PTR [rsp+0x38],0x0
   14000f50a:	jmp    0x14000f511
   14000f50c:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f511:	mov    rax,QWORD PTR [rsp+0x40]
   14000f516:	mov    QWORD PTR [rsp+0xb0],rdi
   14000f51e:	mov    rdi,QWORD PTR [rsp+0x50]
   14000f523:	mov    rax,QWORD PTR [rax]
   14000f526:	mov    QWORD PTR [rsp+0x60],rbp
   14000f52b:	mov    BYTE PTR [rsp+0x5a],0x0
   14000f530:	mov    QWORD PTR [rsp+0x78],rax
   14000f535:	mov    rax,QWORD PTR [rsp+0x48]
   14000f53a:	mov    QWORD PTR [rsp+0x88],0x0
   14000f546:	mov    QWORD PTR [rsp+0x80],rax
   14000f54e:	mov    eax,0x38
   14000f553:	mov    QWORD PTR [rsp+0xa8],rsi
   14000f55b:	mov    BYTE PTR [rsp+0xa2],r13b
   14000f563:	mov    QWORD PTR [rsp+0xd0],0x0
   14000f56f:	mov    QWORD PTR [rsp+0xb8],rdi
   14000f577:	mov    WORD PTR [rsp+0x58],ax
   14000f57c:	mov    WORD PTR [rsp+0xa0],ax
   14000f584:	mov    QWORD PTR [rsp+0xc8],rdx
   14000f58c:	nop    DWORD PTR [rax+0x0]
   14000f590:	mov    rax,QWORD PTR [r15]
   14000f593:	mov    rcx,QWORD PTR [r14]
   14000f596:	cmp    rax,rcx
   14000f599:	jb     0x14000f5b0
   14000f59b:	cmp    DWORD PTR [rbx],0x0
   14000f59e:	jg     0x14000f5b0
   14000f5a0:	cmp    BYTE PTR [rbp+0x119],0x0
   14000f5a7:	jl     0x14000f5b0
   14000f5a9:	cmp    BYTE PTR [rsp+0x5a],0x0
   14000f5ae:	je     0x14000f5d5
   14000f5b0:	mov    QWORD PTR [rsp+0x70],rcx
   14000f5b5:	lea    rcx,[rsp+0x58]
   14000f5ba:	mov    rdx,rbx
   14000f5bd:	mov    QWORD PTR [rsp+0x68],rax
   14000f5c2:	call   0x14000e2c0
   14000f5c7:	cmp    DWORD PTR [rbx],0x0
   14000f5ca:	jg     0x14000f7d0
   14000f5d0:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f5d5:	mov    QWORD PTR [r14],r12
   14000f5d8:	mov    QWORD PTR [r15],r12
   14000f5db:	cmp    BYTE PTR [rsi+0x5d],0x0
   14000f5df:	jle    0x14000f60c
   14000f5e1:	mov    r8,rdx
   14000f5e4:	xor    r9d,r9d
   14000f5e7:	mov    rcx,rsi
   14000f5ea:	mov    rdx,r14
   14000f5ed:	mov    QWORD PTR [rsp+0x20],rbx
   14000f5f2:	call   0x14000edc0
   14000f5f7:	test   al,al
   14000f5f9:	je     0x14000f700
   14000f5ff:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f604:	mov    DWORD PTR [rbx],0x0
   14000f60a:	jmp    0x14000f590
   14000f60c:	cmp    QWORD PTR [rsp+0xb0],rdi
   14000f614:	jne    0x14000f639
   14000f616:	cmp    BYTE PTR [rsi+0x11a],0x0
   14000f61d:	jl     0x14000f639
   14000f61f:	cmp    BYTE PTR [rsi+0x40],0x0
   14000f623:	jne    0x14000f639
   14000f625:	test   r13b,r13b
   14000f628:	je     0x14000f7d8
   14000f62e:	cmp    BYTE PTR [rsp+0x5a],0x0
   14000f633:	jne    0x14000f7d8
   14000f639:	mov    rax,QWORD PTR [rsp+0x38]
   14000f63e:	test   rax,rax
   14000f641:	je     0x14000f6ca
   14000f647:	cmp    DWORD PTR [rbp+0xd0],0x0
   14000f64e:	jge    0x14000f6ca
   14000f650:	cmp    BYTE PTR [rsi+0x11a],0x0
   14000f657:	jne    0x14000f6ca
   14000f659:	cmp    DWORD PTR [rbx],0xffffff81
   14000f65c:	jne    0x14000f664
   14000f65e:	mov    DWORD PTR [rbx],0x0
   14000f664:	lea    rdx,[rsp+0xa0]
   14000f66c:	lea    rcx,[rsp+0x58]
   14000f671:	mov    r8,rbx
   14000f674:	call   rax
   14000f676:	mov    r11d,DWORD PTR [rbx]
   14000f679:	cmp    r11d,0xf
   14000f67d:	je     0x14000f7d8
   14000f683:	test   r11d,r11d
   14000f686:	jle    0x14000f6a3
   14000f688:	cmp    BYTE PTR [rsi+0x40],0x0
   14000f68c:	jg     0x14000f6ca
   14000f68e:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f693:	lea    rax,[r12+0x2]
   14000f698:	mov    QWORD PTR [r14],rax
   14000f69b:	mov    QWORD PTR [r15],rax
   14000f69e:	jmp    0x14000f590
   14000f6a3:	cmp    r11d,0xffffff81
   14000f6a7:	jne    0x14000f6b1
   14000f6a9:	mov    DWORD PTR [rbx],0x0
   14000f6af:	jmp    0x14000f6ca
   14000f6b1:	test   r13b,r13b
   14000f6b4:	je     0x14000f7d8
   14000f6ba:	cmp    BYTE PTR [rsi+0x40],0x0
   14000f6be:	jle    0x14000f75c
   14000f6c4:	mov    DWORD PTR [rbx],0xb
   14000f6ca:	lea    rcx,[rsp+0xa0]
   14000f6d2:	mov    rdx,rbx
   14000f6d5:	mov    QWORD PTR [rsp+0xc0],r12
   14000f6dd:	call   0x14000e9a0
   14000f6e2:	mov    r11,QWORD PTR [rsp+0xc0]
   14000f6ea:	mov    QWORD PTR [r14],r11
   14000f6ed:	mov    eax,DWORD PTR [rbx]
   14000f6ef:	cmp    eax,0xf
   14000f6f2:	jne    0x14000f70a
   14000f6f4:	mov    DWORD PTR [rbx],0x0
   14000f6fa:	test   r13b,r13b
   14000f6fd:	jne    0x14000f72a
   14000f6ff:	nop
   14000f700:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f705:	jmp    0x14000f590
   14000f70a:	test   eax,eax
   14000f70c:	jg     0x14000f7d8
   14000f712:	test   r13b,r13b
   14000f715:	jne    0x14000f72a
   14000f717:	cmp    r11,r12
   14000f71a:	je     0x14000f7d8
   14000f720:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f725:	jmp    0x14000f590
   14000f72a:	cmp    QWORD PTR [rsp+0xb0],rdi
   14000f732:	jne    0x14000f743
   14000f734:	cmp    BYTE PTR [rsi+0x11a],0x0
   14000f73b:	jl     0x14000f743
   14000f73d:	cmp    BYTE PTR [rsi+0x5d],0x0
   14000f741:	je     0x14000f74d
   14000f743:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f748:	jmp    0x14000f590
   14000f74d:	mov    rdx,QWORD PTR [rsp+0x30]
   14000f752:	mov    BYTE PTR [rsp+0x5a],0x1
   14000f757:	jmp    0x14000f590
   14000f75c:	mov    rcx,QWORD PTR [rsi+0x30]
   14000f760:	xor    edi,edi
   14000f762:	mov    eax,DWORD PTR [rcx+0x30]
   14000f765:	mov    DWORD PTR [rsi+0x4c],edi
   14000f768:	mov    BYTE PTR [rsi+0x40],dil
   14000f76c:	mov    BYTE PTR [rsi+0x5d],dil
   14000f770:	mov    BYTE PTR [rsi+0x5a],dil
   14000f774:	mov    BYTE PTR [rsi+0x11a],dil
   14000f77b:	mov    DWORD PTR [rsi+0x48],eax
   14000f77e:	mov    rax,QWORD PTR [rcx+0x28]
   14000f782:	mov    r8,QWORD PTR [rax+0x28]
   14000f786:	test   r8,r8
   14000f789:	je     0x14000f794
   14000f78b:	lea    edx,[rdi+0x1]
   14000f78e:	mov    rcx,rsi
   14000f791:	call   r8
   14000f794:	mov    rax,QWORD PTR [rbp+0x30]
   14000f798:	mov    DWORD PTR [rbp+0x50],edi
   14000f79b:	mov    DWORD PTR [rbp+0x54],edi
   14000f79e:	mov    BYTE PTR [rbp+0x5b],dil
   14000f7a2:	mov    BYTE PTR [rbp+0x5c],dil
   14000f7a6:	mov    DWORD PTR [rbp+0xd0],0xffffffff
   14000f7b0:	mov    BYTE PTR [rbp+0x119],dil
   14000f7b7:	mov    rdx,QWORD PTR [rax+0x28]
   14000f7bb:	mov    rax,QWORD PTR [rdx+0x28]
   14000f7bf:	test   rax,rax
   14000f7c2:	je     0x14000f7d8
   14000f7c4:	mov    edx,0x2
   14000f7c9:	mov    rcx,rbp
   14000f7cc:	call   rax
   14000f7ce:	jmp    0x14000f7d8
   14000f7d0:	mov    rax,QWORD PTR [rsp+0x68]
   14000f7d5:	mov    QWORD PTR [r15],rax
   14000f7d8:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000f7e0:	mov    rax,QWORD PTR [rsp+0xb0]
   14000f7e8:	mov    QWORD PTR [rcx],rax
   14000f7eb:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f7f0:	mov    rax,QWORD PTR [rsp+0x78]
   14000f7f5:	mov    QWORD PTR [rcx],rax
   14000f7f8:	test   r13b,r13b
   14000f7fb:	je     0x14000f817
   14000f7fd:	cmp    DWORD PTR [rbx],0x0
   14000f800:	jg     0x14000f817
   14000f802:	cmp    rax,QWORD PTR [rsp+0x48]
   14000f807:	je     0x14000f848
   14000f809:	mov    BYTE PTR [rax],0x0
   14000f80c:	cmp    DWORD PTR [rbx],0xffffff84
   14000f80f:	jne    0x14000f817
   14000f811:	mov    DWORD PTR [rbx],0x0
   14000f817:	mov    r13,QWORD PTR [rsp+0x8f8]
   14000f81f:	mov    rdi,QWORD PTR [rsp+0x900]
   14000f827:	mov    rcx,QWORD PTR [rsp+0x8e0]
   14000f82f:	xor    rcx,rsp
   14000f832:	call   0x14002b250
   14000f837:	add    rsp,0x908
   14000f83e:	pop    r15
   14000f840:	pop    r14
   14000f842:	pop    r12
   14000f844:	pop    rsi
   14000f845:	pop    rbp
   14000f846:	pop    rbx
   14000f847:	ret    
   14000f848:	mov    DWORD PTR [rbx],0xffffff84
   14000f84e:	jmp    0x14000f817
   14000f850:	mov    DWORD PTR [rbx],0x1
   14000f856:	jmp    0x14000f817
   14000f858:	mov    DWORD PTR [rbx],0x1
   14000f85e:	jmp    0x14000f81f
   14000f860:	ret    0x0
   14000f863:	int3   
   14000f864:	int3   
   14000f865:	int3   
   14000f866:	int3   
   14000f867:	int3   
   14000f868:	int3   
   14000f869:	int3   
   14000f86a:	int3   
   14000f86b:	int3   
   14000f86c:	int3   
   14000f86d:	int3   
   14000f86e:	int3   
   14000f86f:	int3   
   14000f870:	mov    eax,DWORD PTR [rsp+0x30]
   14000f874:	cmp    eax,0x2
   14000f877:	jg     0x14000f892
   14000f879:	test   rcx,rcx
   14000f87c:	je     0x14000f887
   14000f87e:	cmp    BYTE PTR [rcx],0x69
   14000f881:	jne    0x14000f892
   14000f883:	test   eax,eax
   14000f885:	jne    0x14000f892
   14000f887:	mov    rax,QWORD PTR [rsp+0x38]
   14000f88c:	mov    DWORD PTR [rax],0x0
   14000f892:	repz ret 
   14000f894:	int3   
   14000f895:	int3   
   14000f896:	int3   
   14000f897:	int3   
   14000f898:	int3   
   14000f899:	int3   
   14000f89a:	int3   
   14000f89b:	int3   
   14000f89c:	int3   
   14000f89d:	int3   
   14000f89e:	int3   
   14000f89f:	int3   
   14000f8a0:	sub    rsp,0x28
   14000f8a4:	mov    eax,DWORD PTR [rsp+0x58]
   14000f8a8:	mov    r9,rdx
   14000f8ab:	cmp    eax,0x2
   14000f8ae:	jg     0x14000f8d4
   14000f8b0:	test   rcx,rcx
   14000f8b3:	je     0x14000f8be
   14000f8b5:	cmp    BYTE PTR [rcx],0x69
   14000f8b8:	jne    0x14000f8d4
   14000f8ba:	test   eax,eax
   14000f8bc:	jne    0x14000f8d4
   14000f8be:	mov    r8,QWORD PTR [rsp+0x60]
   14000f8c3:	xor    edx,edx
   14000f8c5:	mov    rcx,r9
   14000f8c8:	mov    DWORD PTR [r8],0x0
   14000f8cf:	call   0x140018f40
   14000f8d4:	add    rsp,0x28
   14000f8d8:	ret    
   14000f8d9:	int3   
   14000f8da:	int3   
   14000f8db:	int3   
   14000f8dc:	int3   
   14000f8dd:	int3   
   14000f8de:	int3   
   14000f8df:	int3   
   14000f8e0:	mov    eax,DWORD PTR [rsp+0x28]
   14000f8e4:	cmp    eax,0x2
   14000f8e7:	jg     0x14000f902
   14000f8e9:	test   rcx,rcx
   14000f8ec:	je     0x14000f8f7
   14000f8ee:	cmp    BYTE PTR [rcx],0x69
   14000f8f1:	jne    0x14000f902
   14000f8f3:	test   eax,eax
   14000f8f5:	jne    0x14000f902
   14000f8f7:	mov    rax,QWORD PTR [rsp+0x30]
   14000f8fc:	mov    DWORD PTR [rax],0x0
   14000f902:	repz ret 
   14000f904:	int3   
   14000f905:	int3   
   14000f906:	int3   
   14000f907:	int3   
   14000f908:	int3   
   14000f909:	int3   
   14000f90a:	int3   
   14000f90b:	int3   
   14000f90c:	int3   
   14000f90d:	int3   
   14000f90e:	int3   
   14000f90f:	int3   
   14000f910:	sub    rsp,0x28
   14000f914:	mov    eax,DWORD PTR [rsp+0x50]
   14000f918:	mov    r9,rdx
   14000f91b:	cmp    eax,0x2
   14000f91e:	jg     0x14000f944
   14000f920:	test   rcx,rcx
   14000f923:	je     0x14000f92e
   14000f925:	cmp    BYTE PTR [rcx],0x69
   14000f928:	jne    0x14000f944
   14000f92a:	test   eax,eax
   14000f92c:	jne    0x14000f944
   14000f92e:	mov    r8,QWORD PTR [rsp+0x58]
   14000f933:	xor    edx,edx
   14000f935:	mov    rcx,r9
   14000f938:	mov    DWORD PTR [r8],0x0
   14000f93f:	call   0x140019010
   14000f944:	add    rsp,0x28
   14000f948:	ret    
   14000f949:	int3   
   14000f94a:	int3   
   14000f94b:	int3   
   14000f94c:	int3   
   14000f94d:	int3   
   14000f94e:	int3   
   14000f94f:	int3   
   14000f950:	push   r13
   14000f952:	push   r14
   14000f954:	sub    rsp,0x48
   14000f958:	mov    rax,QWORD PTR [rip+0x58a99]        # 0x1400683f8
   14000f95f:	xor    r13d,r13d
   14000f962:	mov    r14,rcx
   14000f965:	mov    QWORD PTR [rsp+0x68],r13
   14000f96a:	test   rax,rax
   14000f96d:	jne    0x14000f997
   14000f96f:	lea    r9,[rip+0x1b9f6]        # 0x14002b36c
   14000f976:	lea    r8d,[r13+0x19]
   14000f97a:	lea    rcx,[rip+0x58a6f]        # 0x1400683f0
   14000f981:	mov    edx,0x80
   14000f986:	call   0x14000a1f0
   14000f98b:	mov    QWORD PTR [rip+0x58a66],rax        # 0x1400683f8
   14000f992:	test   rax,rax
   14000f995:	je     0x14000f9b8
   14000f997:	lea    r8,[rsp+0x70]
   14000f99c:	mov    rdx,r14
   14000f99f:	mov    rcx,rax
   14000f9a2:	call   0x14000a0a0
   14000f9a7:	test   al,al
   14000f9a9:	je     0x14000f9b8
   14000f9ab:	mov    eax,DWORD PTR [rsp+0x70]
   14000f9af:	add    rsp,0x48
   14000f9b3:	pop    r14
   14000f9b5:	pop    r13
   14000f9b7:	ret    
   14000f9b8:	mov    QWORD PTR [rsp+0x60],rbx
   14000f9bd:	mov    QWORD PTR [rsp+0x40],rbp
   14000f9c2:	mov    QWORD PTR [rsp+0x38],rsi
   14000f9c7:	mov    QWORD PTR [rsp+0x30],rdi
   14000f9cc:	lea    rdx,[rip+0x3416d]        # 0x140043b40
   14000f9d3:	mov    r8d,0x8
   14000f9d9:	mov    rcx,r14
   14000f9dc:	mov    QWORD PTR [rsp+0x28],r12
   14000f9e1:	mov    QWORD PTR [rsp+0x20],r15
   14000f9e6:	call   0x14002e1f0
   14000f9eb:	test   eax,eax
   14000f9ed:	je     0x14000fa08
   14000f9ef:	lea    rdx,[rip+0x3413a]        # 0x140043b30
   14000f9f6:	mov    r8d,0x8
   14000f9fc:	mov    rcx,r14
   14000f9ff:	call   0x14002e1f0
   14000fa04:	test   eax,eax
   14000fa06:	jne    0x14000fa62
   14000fa08:	movzx  eax,BYTE PTR [r14+0x8]
   14000fa0d:	lea    rdi,[r14+0x8]
   14000fa11:	mov    ebx,r13d
   14000fa14:	test   al,al
   14000fa16:	je     0x14000fa3e
   14000fa18:	movsx  ecx,al
   14000fa1b:	call   0x14002c7b0
   14000fa20:	test   eax,eax
   14000fa22:	je     0x14000fa39
   14000fa24:	movsx  eax,BYTE PTR [rdi]
   14000fa27:	inc    rdi
   14000fa2a:	lea    ecx,[rbx+rbx*4]
   14000fa2d:	lea    ebx,[rax+rcx*2-0x30]
   14000fa31:	mov    al,BYTE PTR [rdi]
   14000fa33:	test   al,al
   14000fa35:	jne    0x14000fa18
   14000fa37:	jmp    0x14000fa3e
   14000fa39:	cmp    BYTE PTR [rdi],r13b
   14000fa3c:	jne    0x14000fa62
   14000fa3e:	mov    r12d,r13d
   14000fa41:	lea    rax,[rip+0x466cc]        # 0x140056114
   14000fa48:	cmp    DWORD PTR [rax],ebx
   14000fa4a:	je     0x14000fbee
   14000fa50:	inc    r12d
   14000fa53:	add    rax,0xc0
   14000fa59:	cmp    r12d,0x145
   14000fa60:	jb     0x14000fa48
   14000fa62:	lea    r15,[rip+0x466bf]        # 0x140056128
   14000fa69:	mov    r12d,r13d
   14000fa6c:	mov    r10,r15
   14000fa6f:	mov    r9,r15
   14000fa72:	mov    rdi,QWORD PTR [r9]
   14000fa75:	test   rdi,rdi
   14000fa78:	je     0x14000fab7
   14000fa7a:	mov    r8,r10
   14000fa7d:	nop    DWORD PTR [rax]
   14000fa80:	mov    rax,r14
   14000fa83:	sub    rdi,r14
   14000fa86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000fa90:	movzx  edx,BYTE PTR [rax]
   14000fa93:	movzx  ecx,BYTE PTR [rax+rdi*1]
   14000fa97:	sub    edx,ecx
   14000fa99:	jne    0x14000faa2
   14000fa9b:	inc    rax
   14000fa9e:	test   ecx,ecx
   14000faa0:	jne    0x14000fa90
   14000faa2:	test   edx,edx
   14000faa4:	je     0x14000fbee
   14000faaa:	mov    rdi,QWORD PTR [r8+0x8]
   14000faae:	add    r8,0x8
   14000fab2:	test   rdi,rdi
   14000fab5:	jne    0x14000fa80
   14000fab7:	inc    r12d
   14000faba:	add    r9,0xc0
   14000fac1:	add    r10,0xc0
   14000fac8:	cmp    r12d,0x145
   14000facf:	jb     0x14000fa72
   14000fad1:	or     rcx,0xffffffffffffffff
   14000fad5:	xor    eax,eax
   14000fad7:	mov    rdi,r14
   14000fada:	repnz scas al,BYTE PTR es:[rdi]
   14000fadc:	mov    rbx,r14
   14000fadf:	not    rcx
   14000fae2:	call   0x140009c70
   14000fae7:	mov    QWORD PTR [rsp+0x68],rax
   14000faec:	mov    rdi,rax
   14000faef:	cmp    BYTE PTR [r14],r13b
   14000faf2:	je     0x14000fb16
   14000faf4:	movsx  ecx,BYTE PTR [rbx]
   14000faf7:	call   0x14002c830
   14000fafc:	test   eax,eax
   14000fafe:	je     0x14000fb0e
   14000fb00:	movsx  ecx,BYTE PTR [rbx]
   14000fb03:	call   0x14002e198
   14000fb08:	inc    rdi
   14000fb0b:	mov    BYTE PTR [rdi-0x1],al
   14000fb0e:	inc    rbx
   14000fb11:	cmp    BYTE PTR [rbx],r13b
   14000fb14:	jne    0x14000faf4
   14000fb16:	mov    BYTE PTR [rdi],r13b
   14000fb19:	mov    r12d,r13d
   14000fb1c:	mov    rbp,r15
   14000fb1f:	nop
   14000fb20:	mov    rbx,QWORD PTR [rbp+0x0]
   14000fb24:	test   rbx,rbx
   14000fb27:	je     0x14000fbab
   14000fb2d:	mov    rsi,r15
   14000fb30:	or     rcx,0xffffffffffffffff
   14000fb34:	xor    eax,eax
   14000fb36:	mov    rdi,rbx
   14000fb39:	repnz scas al,BYTE PTR es:[rdi]
   14000fb3b:	not    rcx
   14000fb3e:	call   0x140009c70
   14000fb43:	cmp    BYTE PTR [rbx],0x0
   14000fb46:	mov    r13,rax
   14000fb49:	mov    rdi,rax
   14000fb4c:	je     0x14000fb72
   14000fb4e:	xchg   ax,ax
   14000fb50:	movsx  ecx,BYTE PTR [rbx]
   14000fb53:	call   0x14002c830
   14000fb58:	test   eax,eax
   14000fb5a:	je     0x14000fb6a
   14000fb5c:	movsx  ecx,BYTE PTR [rbx]
   14000fb5f:	call   0x14002e198
   14000fb64:	inc    rdi
   14000fb67:	mov    BYTE PTR [rdi-0x1],al
   14000fb6a:	inc    rbx
   14000fb6d:	cmp    BYTE PTR [rbx],0x0
   14000fb70:	jne    0x14000fb50
   14000fb72:	mov    rax,QWORD PTR [rsp+0x68]
   14000fb77:	mov    BYTE PTR [rdi],0x0
   14000fb7a:	mov    rdi,r13
   14000fb7d:	sub    rdi,rax
   14000fb80:	movzx  edx,BYTE PTR [rax]
   14000fb83:	movzx  ecx,BYTE PTR [rax+rdi*1]
   14000fb87:	sub    edx,ecx
   14000fb89:	jne    0x14000fb92
   14000fb8b:	inc    rax
   14000fb8e:	test   ecx,ecx
   14000fb90:	jne    0x14000fb80
   14000fb92:	test   edx,edx
   14000fb94:	je     0x14000fbee
   14000fb96:	mov    rcx,r13
   14000fb99:	call   0x14002b36c
   14000fb9e:	mov    rbx,QWORD PTR [rsi+0x8]
   14000fba2:	add    rsi,0x8
   14000fba6:	test   rbx,rbx
   14000fba9:	jne    0x14000fb30
   14000fbab:	inc    r12d
   14000fbae:	add    rbp,0xc0
   14000fbb5:	add    r15,0xc0
   14000fbbc:	cmp    r12d,0x145
   14000fbc3:	jb     0x14000fb20
   14000fbc9:	mov    rcx,QWORD PTR [rsp+0x68]
   14000fbce:	call   0x14002b36c
   14000fbd3:	lea    rdx,[rip+0x33f3e]        # 0x140043b18
   14000fbda:	lea    rcx,[rip+0x33eff]        # 0x140043ae0
   14000fbe1:	mov    r8,r14
   14000fbe4:	call   0x14003bd30
   14000fbe9:	or     eax,0xffffffff
   14000fbec:	jmp    0x14000fc1a
   14000fbee:	mov    rcx,QWORD PTR [rsp+0x68]
   14000fbf3:	call   0x14002b36c
   14000fbf8:	mov    rcx,r13
   14000fbfb:	call   0x14002b36c
   14000fc00:	mov    rcx,QWORD PTR [rip+0x587f1]        # 0x1400683f8
   14000fc07:	test   rcx,rcx
   14000fc0a:	je     0x14000fc17
   14000fc0c:	movsxd r8,r12d
   14000fc0f:	mov    rdx,r14
   14000fc12:	call   0x14000a270
   14000fc17:	mov    eax,r12d
   14000fc1a:	mov    r12,QWORD PTR [rsp+0x28]
   14000fc1f:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fc24:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fc29:	mov    rbp,QWORD PTR [rsp+0x40]
   14000fc2e:	mov    rbx,QWORD PTR [rsp+0x60]
   14000fc33:	mov    r15,QWORD PTR [rsp+0x20]
   14000fc38:	add    rsp,0x48
   14000fc3c:	pop    r14
   14000fc3e:	pop    r13
   14000fc40:	ret    
   14000fc41:	int3   
   14000fc42:	int3   
   14000fc43:	int3   
   14000fc44:	int3   
   14000fc45:	int3   
   14000fc46:	int3   
   14000fc47:	int3   
   14000fc48:	int3   
   14000fc49:	int3   
   14000fc4a:	int3   
   14000fc4b:	int3   
   14000fc4c:	int3   
   14000fc4d:	int3   
   14000fc4e:	int3   
   14000fc4f:	int3   
   14000fc50:	sub    rsp,0x28
   14000fc54:	call   0x14000f950
   14000fc59:	test   eax,eax
   14000fc5b:	js     0x14000fc7e
   14000fc5d:	cdqe   
   14000fc5f:	lea    rcx,[rax+rax*2]
   14000fc63:	lea    rax,[rip+0x464a6]        # 0x140056110
   14000fc6a:	shl    rcx,0x6
   14000fc6e:	cmp    BYTE PTR [rcx+rax*1+0xc],0x0
   14000fc73:	je     0x14000fc7e
   14000fc75:	mov    eax,DWORD PTR [rcx+rax*1+0x8]
   14000fc79:	add    rsp,0x28
   14000fc7d:	ret    
   14000fc7e:	mov    eax,0xfffffffe
   14000fc83:	add    rsp,0x28
   14000fc87:	ret    
   14000fc88:	int3   
   14000fc89:	int3   
   14000fc8a:	int3   
   14000fc8b:	int3   
   14000fc8c:	int3   
   14000fc8d:	int3   
   14000fc8e:	int3   
   14000fc8f:	int3   
   14000fc90:	sub    rsp,0x28
   14000fc94:	mov    eax,DWORD PTR [rip+0x55836]        # 0x1400654d0
   14000fc9a:	cmp    eax,0xfffffffe
   14000fc9d:	jne    0x14000fce2
   14000fc9f:	call   0x14000b790
   14000fca4:	mov    rcx,rax
   14000fca7:	call   0x14000f950
   14000fcac:	test   eax,eax
   14000fcae:	js     0x14000fcd7
   14000fcb0:	cdqe   
   14000fcb2:	lea    rcx,[rax+rax*2]
   14000fcb6:	lea    rax,[rip+0x46453]        # 0x140056110
   14000fcbd:	shl    rcx,0x6
   14000fcc1:	cmp    BYTE PTR [rcx+rax*1+0xc],0x0
   14000fcc6:	je     0x14000fcd7
   14000fcc8:	mov    eax,DWORD PTR [rcx+rax*1+0x8]
   14000fccc:	mov    DWORD PTR [rip+0x557fe],eax        # 0x1400654d0
   14000fcd2:	add    rsp,0x28
   14000fcd6:	ret    
   14000fcd7:	mov    eax,0xfffffffe
   14000fcdc:	mov    DWORD PTR [rip+0x557ee],eax        # 0x1400654d0
   14000fce2:	add    rsp,0x28
   14000fce6:	ret    
   14000fce7:	int3   
   14000fce8:	int3   
   14000fce9:	int3   
   14000fcea:	int3   
   14000fceb:	int3   
   14000fcec:	int3   
   14000fced:	int3   
   14000fcee:	int3   
   14000fcef:	int3   
   14000fcf0:	sub    rsp,0x28
   14000fcf4:	cmp    ecx,0xffffffff
   14000fcf7:	jne    0x14000fd4c
   14000fcf9:	mov    eax,DWORD PTR [rip+0x557d1]        # 0x1400654d0
   14000fcff:	cmp    eax,0xfffffffe
   14000fd02:	jne    0x14000fd4e
   14000fd04:	call   0x14000b790
   14000fd09:	mov    rcx,rax
   14000fd0c:	call   0x14000f950
   14000fd11:	test   eax,eax
   14000fd13:	js     0x14000fd3c
   14000fd15:	cdqe   
   14000fd17:	lea    rcx,[rax+rax*2]
   14000fd1b:	lea    rax,[rip+0x463ee]        # 0x140056110
   14000fd22:	shl    rcx,0x6
   14000fd26:	cmp    BYTE PTR [rcx+rax*1+0xc],0x0
   14000fd2b:	je     0x14000fd3c
   14000fd2d:	mov    eax,DWORD PTR [rcx+rax*1+0x8]
   14000fd31:	mov    DWORD PTR [rip+0x55799],eax        # 0x1400654d0
   14000fd37:	add    rsp,0x28
   14000fd3b:	ret    
   14000fd3c:	mov    eax,0xfffffffe
   14000fd41:	mov    DWORD PTR [rip+0x55789],eax        # 0x1400654d0
   14000fd47:	add    rsp,0x28
   14000fd4b:	ret    
   14000fd4c:	mov    eax,ecx
   14000fd4e:	add    rsp,0x28
   14000fd52:	ret    
   14000fd53:	int3   
   14000fd54:	int3   
   14000fd55:	int3   
   14000fd56:	int3   
   14000fd57:	int3   
   14000fd58:	int3   
   14000fd59:	int3   
   14000fd5a:	int3   
   14000fd5b:	int3   
   14000fd5c:	int3   
   14000fd5d:	int3   
   14000fd5e:	int3   
   14000fd5f:	int3   
   14000fd60:	rex push rbx
   14000fd62:	sub    rsp,0x20
   14000fd66:	lea    rbx,[rip+0x463a3]        # 0x140056110
   14000fd6d:	cmp    ecx,0xffffffff
   14000fd70:	jne    0x14000fdb0
   14000fd72:	mov    ecx,DWORD PTR [rip+0x55758]        # 0x1400654d0
   14000fd78:	cmp    ecx,0xfffffffe
   14000fd7b:	jne    0x14000fdb0
   14000fd7d:	call   0x14000b790
   14000fd82:	mov    rcx,rax
   14000fd85:	call   0x14000f950
   14000fd8a:	test   eax,eax
   14000fd8c:	js     0x14000fda5
   14000fd8e:	cdqe   
   14000fd90:	lea    rcx,[rax+rax*2]
   14000fd94:	shl    rcx,0x6
   14000fd98:	cmp    BYTE PTR [rcx+rbx*1+0xc],0x0
   14000fd9d:	je     0x14000fda5
   14000fd9f:	mov    ecx,DWORD PTR [rcx+rbx*1+0x8]
   14000fda3:	jmp    0x14000fdaa
   14000fda5:	mov    ecx,0xfffffffe
   14000fdaa:	mov    DWORD PTR [rip+0x55720],ecx        # 0x1400654d0
   14000fdb0:	xor    edx,edx
   14000fdb2:	lea    rax,[rip+0x4635f]        # 0x140056118
   14000fdb9:	nop    DWORD PTR [rax+0x0]
   14000fdc0:	cmp    ecx,DWORD PTR [rax]
   14000fdc2:	je     0x14000fe04
   14000fdc4:	inc    edx
   14000fdc6:	add    rax,0xc0
   14000fdcc:	cmp    edx,0x145
   14000fdd2:	jb     0x14000fdc0
   14000fdd4:	mov    r8d,ecx
   14000fdd7:	lea    rdx,[rip+0x33dba]        # 0x140043b98
   14000fdde:	lea    rcx,[rip+0x33d93]        # 0x140043b78
   14000fde5:	call   0x14003bd30
   14000fdea:	lea    rdx,[rip+0x33d5f]        # 0x140043b50
   14000fdf1:	lea    rcx,[rip+0x2e7f8]        # 0x14003e5f0
   14000fdf8:	mov    r8d,0xa19
   14000fdfe:	call   0x140001050
   14000fe03:	int3   
   14000fe04:	movsxd rdx,edx
   14000fe07:	lea    rax,[rdx+rdx*2]
   14000fe0b:	shl    rax,0x6
   14000fe0f:	movsxd rcx,DWORD PTR [rax+rbx*1+0x10]
   14000fe14:	lea    rax,[rdx+rdx*2]
   14000fe18:	lea    rax,[rcx+rax*8]
   14000fe1c:	mov    rax,QWORD PTR [rbx+rax*8+0x18]
   14000fe21:	add    rsp,0x20
   14000fe25:	pop    rbx
   14000fe26:	ret    
   14000fe27:	int3   
   14000fe28:	int3   
   14000fe29:	int3   
   14000fe2a:	int3   
   14000fe2b:	int3   
   14000fe2c:	int3   
   14000fe2d:	int3   
   14000fe2e:	int3   
   14000fe2f:	int3   
   14000fe30:	xor    eax,eax
   14000fe32:	mov    QWORD PTR [rcx],rax
   14000fe35:	mov    QWORD PTR [rcx+0x8],rax
   14000fe39:	mov    QWORD PTR [rcx+0x10],rax
   14000fe3d:	mov    QWORD PTR [rcx+0x18],rax
   14000fe41:	mov    QWORD PTR [rcx+0x20],rax
   14000fe45:	mov    QWORD PTR [rcx+0x28],rax
   14000fe49:	mov    QWORD PTR [rcx+0x30],rax
   14000fe4d:	mov    DWORD PTR [rcx+0x30],0xffffffff
   14000fe54:	ret    
   14000fe55:	int3   
   14000fe56:	int3   
   14000fe57:	int3   
   14000fe58:	int3   
   14000fe59:	int3   
   14000fe5a:	int3   
   14000fe5b:	int3   
   14000fe5c:	int3   
   14000fe5d:	int3   
   14000fe5e:	int3   
   14000fe5f:	int3   
   14000fe60:	mov    rax,QWORD PTR [rdx]
   14000fe63:	movzx  r8d,BYTE PTR [rcx+0x18]
   14000fe68:	mov    QWORD PTR [rcx],rax
   14000fe6b:	mov    rax,QWORD PTR [rdx+0x8]
   14000fe6f:	mov    QWORD PTR [rcx+0x8],rax
   14000fe73:	mov    rax,QWORD PTR [rdx+0x10]
   14000fe77:	mov    QWORD PTR [rcx+0x10],rax
   14000fe7b:	mov    rax,QWORD PTR [rdx+0x18]
   14000fe7f:	mov    QWORD PTR [rcx+0x18],rax
   14000fe83:	mov    rax,QWORD PTR [rdx+0x20]
   14000fe87:	mov    QWORD PTR [rcx+0x20],rax
   14000fe8b:	mov    rax,QWORD PTR [rdx+0x28]
   14000fe8f:	mov    QWORD PTR [rcx+0x28],rax
   14000fe93:	mov    rax,QWORD PTR [rdx+0x30]
   14000fe97:	mov    QWORD PTR [rcx+0x30],rax
   14000fe9b:	mov    BYTE PTR [rcx+0x18],r8b
   14000fe9f:	ret    
   14000fea0:	rex push rbx
   14000fea2:	sub    rsp,0x20
   14000fea6:	cmp    DWORD PTR [rcx],0x0
   14000fea9:	mov    rbx,rcx
   14000feac:	jle    0x14000feb6
   14000feae:	xor    eax,eax
   14000feb0:	add    rsp,0x20
   14000feb4:	pop    rbx
   14000feb5:	ret    
   14000feb6:	mov    ecx,0x38
   14000febb:	call   0x140010940
   14000fec0:	test   rax,rax
   14000fec3:	jne    0x14000fed1
   14000fec5:	mov    DWORD PTR [rbx],0x7
   14000fecb:	add    rsp,0x20
   14000fecf:	pop    rbx
   14000fed0:	ret    
   14000fed1:	xor    ecx,ecx
   14000fed3:	mov    QWORD PTR [rax],rcx
   14000fed6:	mov    QWORD PTR [rax+0x8],rcx
   14000feda:	mov    QWORD PTR [rax+0x10],rcx
   14000fede:	mov    QWORD PTR [rax+0x18],rcx
   14000fee2:	mov    QWORD PTR [rax+0x20],rcx
   14000fee6:	mov    QWORD PTR [rax+0x28],rcx
   14000feea:	mov    QWORD PTR [rax+0x30],rcx
   14000feee:	mov    DWORD PTR [rax+0x30],0xffffffff
   14000fef5:	mov    BYTE PTR [rax+0x18],0x1
   14000fef9:	add    rsp,0x20
   14000fefd:	pop    rbx
   14000fefe:	ret    
   14000feff:	int3   
   14000ff00:	test   rcx,rcx
   14000ff03:	je     0x14000ff16
   14000ff05:	cmp    BYTE PTR [rcx+0x2],0xda
   14000ff09:	jne    0x14000ff11
   14000ff0b:	cmp    BYTE PTR [rcx+0x3],0x27
   14000ff0f:	je     0x14000ff16
   14000ff11:	lea    rax,[rcx+0x8]
   14000ff15:	ret    
   14000ff16:	mov    rax,rcx
   14000ff19:	ret    
   14000ff1a:	int3   
   14000ff1b:	int3   
   14000ff1c:	int3   
   14000ff1d:	int3   
   14000ff1e:	int3   
   14000ff1f:	int3   
   14000ff20:	test   rcx,rcx
   14000ff23:	je     0x14000ff6e
   14000ff25:	push   rbx
   14000ff26:	sub    rsp,0x20
   14000ff2a:	mov    rbx,rcx
   14000ff2d:	call   0x140011270
   14000ff32:	cmp    BYTE PTR [rbx+0x18],0x0
   14000ff36:	je     0x14000ff45
   14000ff38:	mov    rcx,rbx
   14000ff3b:	add    rsp,0x20
   14000ff3f:	pop    rbx
   14000ff40:	jmp    0x140010a40
   14000ff45:	xor    eax,eax
   14000ff47:	mov    QWORD PTR [rbx],rax
   14000ff4a:	mov    QWORD PTR [rbx+0x8],rax
   14000ff4e:	mov    QWORD PTR [rbx+0x10],rax
   14000ff52:	mov    QWORD PTR [rbx+0x18],rax
   14000ff56:	mov    QWORD PTR [rbx+0x20],rax
   14000ff5a:	mov    QWORD PTR [rbx+0x28],rax
   14000ff5e:	mov    QWORD PTR [rbx+0x30],rax
   14000ff62:	mov    DWORD PTR [rbx+0x30],0xffffffff
   14000ff69:	add    rsp,0x20
   14000ff6d:	pop    rbx
   14000ff6e:	repz ret 
   14000ff70:	rex push rbx
   14000ff72:	sub    rsp,0x20
   14000ff76:	mov    rbx,rcx
   14000ff79:	test   rcx,rcx
   14000ff7c:	je     0x14000ff99
   14000ff7e:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ff82:	test   rcx,rcx
   14000ff85:	je     0x14000ff99
   14000ff87:	call   0x140010e00
   14000ff8c:	movzx  eax,ax
   14000ff8f:	add    rax,QWORD PTR [rbx+0x8]
   14000ff93:	add    rsp,0x20
   14000ff97:	pop    rbx
   14000ff98:	ret    
   14000ff99:	xor    eax,eax
   14000ff9b:	add    rsp,0x20
   14000ff9f:	pop    rbx
   14000ffa0:	ret    
   14000ffa1:	int3   
   14000ffa2:	int3   
   14000ffa3:	int3   
   14000ffa4:	int3   
   14000ffa5:	int3   
   14000ffa6:	int3   
   14000ffa7:	int3   
   14000ffa8:	int3   
   14000ffa9:	int3   
   14000ffaa:	int3   
   14000ffab:	int3   
   14000ffac:	int3   
   14000ffad:	int3   
   14000ffae:	int3   
   14000ffaf:	int3   
   14000ffb0:	xor    eax,eax
   14000ffb2:	cmp    QWORD PTR [rcx+0x8],rax
   14000ffb6:	setne  al
   14000ffb9:	ret    
   14000ffba:	int3   
   14000ffbb:	int3   
   14000ffbc:	int3   
   14000ffbd:	int3   
   14000ffbe:	int3   
   14000ffbf:	int3   
   14000ffc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000ffc5:	mov    QWORD PTR [rsp+0x10],rbp
   14000ffca:	mov    QWORD PTR [rsp+0x18],rsi
   14000ffcf:	mov    QWORD PTR [rsp+0x20],r9
   14000ffd4:	push   rdi
   14000ffd5:	sub    rsp,0x20
   14000ffd9:	mov    rax,QWORD PTR [rcx+0x20]
   14000ffdd:	mov    rbx,QWORD PTR [rdx+0x8]
   14000ffe1:	mov    ebp,r8d
   14000ffe4:	mov    rdi,rdx
   14000ffe7:	mov    rsi,rcx
   14000ffea:	test   rax,rax
   14000ffed:	je     0x140010004
   14000ffef:	mov    rcx,QWORD PTR [rdx+0x10]
   14000fff3:	test   rcx,rcx
   14000fff6:	je     0x140010004
   14000fff8:	cmp    rcx,r9
   14000fffb:	je     0x140010004
   14000fffd:	call   rax
   14000ffff:	mov    r9,QWORD PTR [rsp+0x48]
   140010004:	mov    rax,QWORD PTR [rsi+0x28]
   140010008:	test   rax,rax
   14001000b:	je     0x140010025
   14001000d:	test   rbx,rbx
   140010010:	je     0x140010023
   140010012:	cmp    rbx,QWORD PTR [rsp+0x50]
   140010017:	je     0x140010023
   140010019:	mov    rcx,rbx
   14001001c:	call   rax
   14001001e:	mov    r9,QWORD PTR [rsp+0x48]
   140010023:	xor    ebx,ebx
   140010025:	mov    rax,QWORD PTR [rsp+0x50]
   14001002a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001002f:	mov    DWORD PTR [rdi],ebp
   140010031:	mov    rbp,QWORD PTR [rsp+0x38]
   140010036:	mov    QWORD PTR [rdi+0x8],rax
   14001003a:	mov    rax,rbx
   14001003d:	mov    rbx,QWORD PTR [rsp+0x30]
   140010042:	mov    QWORD PTR [rdi+0x10],r9
   140010046:	add    rsp,0x20
   14001004a:	pop    rdi
   14001004b:	ret    
   14001004c:	int3   
   14001004d:	int3   
   14001004e:	int3   
   14001004f:	int3   
   140010050:	mov    QWORD PTR [rsp+0x10],rbx
   140010055:	mov    QWORD PTR [rsp+0x18],rbp
   14001005a:	mov    QWORD PTR [rsp+0x20],rsi
   14001005f:	push   rdi
   140010060:	sub    rsp,0x20
   140010064:	dec    DWORD PTR [rcx+0x30]
   140010067:	mov    rax,QWORD PTR [rcx+0x20]
   14001006b:	mov    rbx,QWORD PTR [rdx+0x8]
   14001006f:	mov    QWORD PTR [rsp+0x30],0x0
   140010078:	mov    DWORD PTR [rsp+0x30],0x0
   140010080:	mov    rdi,QWORD PTR [rsp+0x30]
   140010085:	mov    rsi,rdx
   140010088:	mov    rbp,rcx
   14001008b:	test   rax,rax
   14001008e:	je     0x1400100a0
   140010090:	mov    rcx,QWORD PTR [rdx+0x10]
   140010094:	test   rcx,rcx
   140010097:	je     0x1400100a0
   140010099:	cmp    rcx,rdi
   14001009c:	je     0x1400100a0
   14001009e:	call   rax
   1400100a0:	mov    rax,QWORD PTR [rbp+0x28]
   1400100a4:	test   rax,rax
   1400100a7:	je     0x1400100ba
   1400100a9:	test   rbx,rbx
   1400100ac:	je     0x1400100b8
   1400100ae:	cmp    rbx,rdi
   1400100b1:	je     0x1400100b8
   1400100b3:	mov    rcx,rbx
   1400100b6:	call   rax
   1400100b8:	xor    ebx,ebx
   1400100ba:	mov    rbp,QWORD PTR [rsp+0x40]
   1400100bf:	mov    QWORD PTR [rsi+0x10],rdi
   1400100c3:	mov    QWORD PTR [rsi+0x8],rdi
   1400100c7:	mov    DWORD PTR [rsi],0x80000000
   1400100cd:	mov    rsi,QWORD PTR [rsp+0x48]
   1400100d2:	mov    rax,rbx
   1400100d5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400100da:	add    rsp,0x20
   1400100de:	pop    rdi
   1400100df:	ret    
   1400100e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400100e5:	push   rdi
   1400100e6:	sub    rsp,0x20
   1400100ea:	cmp    DWORD PTR [r8],0x0
   1400100ee:	mov    rdi,r8
   1400100f1:	mov    rbx,rcx
   1400100f4:	jg     0x1400101a4
   1400100fa:	mov    BYTE PTR [rcx+0x48],dl
   1400100fd:	lea    rcx,[rip+0x359bc]        # 0x140045ac0
   140010104:	movsxd rax,edx
   140010107:	movsxd rdx,DWORD PTR [rcx+rax*4]
   14001010b:	mov    DWORD PTR [rbx+0x34],edx
   14001010e:	lea    rcx,[rdx+rdx*2]
   140010112:	shl    rcx,0x3
   140010116:	call   0x140010940
   14001011b:	mov    r11,rax
   14001011e:	mov    QWORD PTR [rbx],rax
   140010121:	test   rax,rax
   140010124:	jne    0x140010137
   140010126:	mov    DWORD PTR [rdi],0x7
   14001012c:	mov    rbx,QWORD PTR [rsp+0x30]
   140010131:	add    rsp,0x20
   140010135:	pop    rdi
   140010136:	ret    
   140010137:	movsxd rax,DWORD PTR [rbx+0x34]
   14001013b:	xor    r8d,r8d
   14001013e:	lea    rcx,[rax+rax*2]
   140010142:	mov    QWORD PTR [rsp+0x40],r8
   140010147:	mov    DWORD PTR [rsp+0x40],r8d
   14001014c:	lea    rdx,[r11+rcx*8]
   140010150:	cmp    r11,rdx
   140010153:	jae    0x140010178
   140010155:	mov    rax,QWORD PTR [rsp+0x40]
   14001015a:	nop    WORD PTR [rax+rax*1+0x0]
   140010160:	mov    QWORD PTR [r11+0x10],rax
   140010164:	mov    QWORD PTR [r11+0x8],rax
   140010168:	mov    DWORD PTR [r11],0x80000001
   14001016f:	add    r11,0x18
   140010173:	cmp    r11,rdx
   140010176:	jb     0x140010160
   140010178:	movd   xmm0,DWORD PTR [rbx+0x34]
   14001017d:	movd   xmm1,DWORD PTR [rbx+0x34]
   140010182:	mov    DWORD PTR [rbx+0x30],r8d
   140010186:	cvtdq2ps xmm0,xmm0
   140010189:	cvtdq2ps xmm1,xmm1
   14001018c:	mulss  xmm0,DWORD PTR [rbx+0x44]
   140010191:	mulss  xmm1,DWORD PTR [rbx+0x40]
   140010196:	cvttss2si eax,xmm0
   14001019a:	mov    DWORD PTR [rbx+0x3c],eax
   14001019d:	cvttss2si eax,xmm1
   1400101a1:	mov    DWORD PTR [rbx+0x38],eax
   1400101a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400101a9:	add    rsp,0x20
   1400101ad:	pop    rdi
   1400101ae:	ret    
   1400101af:	int3   
   1400101b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400101b5:	push   rdi
   1400101b6:	sub    rsp,0x20
   1400101ba:	mov    rdi,QWORD PTR [rsp+0x58]
   1400101bf:	mov    rbx,rcx
   1400101c2:	cmp    DWORD PTR [rdi],0x0
   1400101c5:	jle    0x1400101d4
   1400101c7:	xor    eax,eax
   1400101c9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400101ce:	add    rsp,0x20
   1400101d2:	pop    rdi
   1400101d3:	ret    
   1400101d4:	mov    QWORD PTR [rcx+0x8],rdx
   1400101d8:	mov    edx,DWORD PTR [rsp+0x50]
   1400101dc:	mov    QWORD PTR [rcx+0x10],r8
   1400101e0:	mov    QWORD PTR [rsp+0x30],rsi
   1400101e5:	xor    esi,esi
   1400101e7:	mov    r8,rdi
   1400101ea:	mov    QWORD PTR [rcx+0x18],r9
   1400101ee:	mov    DWORD PTR [rcx+0x40],0x3f000000
   1400101f5:	mov    QWORD PTR [rcx+0x20],rsi
   1400101f9:	mov    QWORD PTR [rcx+0x28],rsi
   1400101fd:	mov    BYTE PTR [rcx+0x49],sil
   140010201:	mov    DWORD PTR [rcx+0x44],esi
   140010204:	call   0x1400100e0
   140010209:	cmp    DWORD PTR [rdi],esi
   14001020b:	cmovg  rbx,rsi
   14001020f:	mov    rsi,QWORD PTR [rsp+0x30]
   140010214:	mov    rax,rbx
   140010217:	mov    rbx,QWORD PTR [rsp+0x38]
   14001021c:	add    rsp,0x20
   140010220:	pop    rdi
   140010221:	ret    
   140010222:	int3   
   140010223:	int3   
   140010224:	int3   
   140010225:	int3   
   140010226:	int3   
   140010227:	int3   
   140010228:	int3   
   140010229:	int3   
   14001022a:	int3   
   14001022b:	int3   
   14001022c:	int3   
   14001022d:	int3   
   14001022e:	int3   
   14001022f:	int3   
   140010230:	mov    QWORD PTR [rsp+0x10],rbp
   140010235:	mov    QWORD PTR [rsp+0x18],rsi
   14001023a:	push   rdi
   14001023b:	push   r12
   14001023d:	push   r13
   14001023f:	sub    rsp,0x30
   140010243:	mov    rdi,QWORD PTR [rsp+0x70]
   140010248:	mov    esi,r9d
   14001024b:	mov    rbp,r8
   14001024e:	cmp    DWORD PTR [rdi],0x0
   140010251:	mov    r12,rdx
   140010254:	mov    r13,rcx
   140010257:	jle    0x14001025d
   140010259:	xor    eax,eax
   14001025b:	jmp    0x1400102b3
   14001025d:	mov    ecx,0x50
   140010262:	mov    QWORD PTR [rsp+0x50],rbx
   140010267:	call   0x140010940
   14001026c:	mov    rbx,rax
   14001026f:	test   rax,rax
   140010272:	jne    0x14001027c
   140010274:	mov    DWORD PTR [rdi],0x7
   14001027a:	jmp    0x1400102ae
   14001027c:	mov    r9,rbp
   14001027f:	mov    r8,r12
   140010282:	mov    rdx,r13
   140010285:	mov    rcx,rax
   140010288:	mov    QWORD PTR [rsp+0x28],rdi
   14001028d:	mov    DWORD PTR [rsp+0x20],esi
   140010291:	call   0x1400101b0
   140010296:	mov    BYTE PTR [rbx+0x49],0x1
   14001029a:	cmp    DWORD PTR [rdi],0x0
   14001029d:	jle    0x1400102ab
   14001029f:	mov    rcx,rbx
   1400102a2:	call   0x140010a40
   1400102a7:	xor    eax,eax
   1400102a9:	jmp    0x1400102ae
   1400102ab:	mov    rax,rbx
   1400102ae:	mov    rbx,QWORD PTR [rsp+0x50]
   1400102b3:	mov    rbp,QWORD PTR [rsp+0x58]
   1400102b8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400102bd:	add    rsp,0x30
   1400102c1:	pop    r13
   1400102c3:	pop    r12
   1400102c5:	pop    rdi
   1400102c6:	ret    
   1400102c7:	int3   
   1400102c8:	int3   
   1400102c9:	int3   
   1400102ca:	int3   
   1400102cb:	int3   
   1400102cc:	int3   
   1400102cd:	int3   
   1400102ce:	int3   
   1400102cf:	int3   
   1400102d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400102d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400102da:	mov    QWORD PTR [rsp+0x20],rsi
   1400102df:	mov    QWORD PTR [rsp+0x10],rdx
   1400102e4:	push   rdi
   1400102e5:	push   r12
   1400102e7:	push   r13
   1400102e9:	push   r14
   1400102eb:	push   r15
   1400102ed:	sub    rsp,0x20
   1400102f1:	mov    r12,QWORD PTR [rcx]
   1400102f4:	mov    r9,rdx
   1400102f7:	mov    r14d,r8d
   1400102fa:	btr    r14d,0x1f
   1400102ff:	or     edi,0xffffffff
   140010302:	xor    ebp,ebp
   140010304:	mov    eax,r14d
   140010307:	mov    r13,rcx
   14001030a:	btc    eax,0x1a
   14001030e:	cdq    
   14001030f:	idiv   DWORD PTR [rcx+0x34]
   140010312:	mov    esi,edx
   140010314:	mov    r15d,edx
   140010317:	nop    WORD PTR [rax+rax*1+0x0]
   140010320:	movsxd rax,esi
   140010323:	lea    rdx,[rax+rax*2]
   140010327:	mov    ebx,DWORD PTR [r12+rdx*8]
   14001032b:	cmp    ebx,r14d
   14001032e:	jne    0x140010347
   140010330:	mov    rdx,QWORD PTR [r12+rdx*8+0x10]
   140010335:	mov    rcx,r9
   140010338:	call   QWORD PTR [r13+0x10]
   14001033c:	test   al,al
   14001033e:	jne    0x140010380
   140010340:	mov    r9,QWORD PTR [rsp+0x58]
   140010345:	jmp    0x140010358
   140010347:	test   ebx,ebx
   140010349:	jns    0x140010358
   14001034b:	cmp    ebx,0x80000001
   140010351:	je     0x14001037a
   140010353:	test   edi,edi
   140010355:	cmovs  edi,esi
   140010358:	test   ebp,ebp
   14001035a:	jne    0x14001036b
   14001035c:	mov    ecx,DWORD PTR [r13+0x34]
   140010360:	mov    eax,r14d
   140010363:	dec    ecx
   140010365:	cdq    
   140010366:	idiv   ecx
   140010368:	lea    ebp,[rdx+0x1]
   14001036b:	lea    eax,[rsi+rbp*1]
   14001036e:	cdq    
   14001036f:	idiv   DWORD PTR [r13+0x34]
   140010373:	mov    esi,edx
   140010375:	cmp    edx,r15d
   140010378:	jne    0x140010320
   14001037a:	test   edi,edi
   14001037c:	js     0x1400103a8
   14001037e:	mov    esi,edi
   140010380:	movsxd rax,esi
   140010383:	lea    rcx,[rax+rax*2]
   140010387:	lea    rax,[r12+rcx*8]
   14001038b:	mov    rbx,QWORD PTR [rsp+0x50]
   140010390:	mov    rbp,QWORD PTR [rsp+0x60]
   140010395:	mov    rsi,QWORD PTR [rsp+0x68]
   14001039a:	add    rsp,0x20
   14001039e:	pop    r15
   1400103a0:	pop    r14
   1400103a2:	pop    r13
   1400103a4:	pop    r12
   1400103a6:	pop    rdi
   1400103a7:	ret    
   1400103a8:	cmp    ebx,0x80000001
   1400103ae:	je     0x140010380
   1400103b0:	xor    eax,eax
   1400103b2:	jmp    0x14001038b
   1400103b4:	int3   
   1400103b5:	int3   
   1400103b6:	int3   
   1400103b7:	int3   
   1400103b8:	int3   
   1400103b9:	int3   
   1400103ba:	int3   
   1400103bb:	int3   
   1400103bc:	int3   
   1400103bd:	int3   
   1400103be:	int3   
   1400103bf:	int3   
   1400103c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400103c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400103ca:	mov    QWORD PTR [rsp+0x20],rdi
   1400103cf:	push   r12
   1400103d1:	sub    rsp,0x20
   1400103d5:	mov    eax,DWORD PTR [rcx+0x30]
   1400103d8:	mov    r12,QWORD PTR [rcx]
   1400103db:	mov    ebx,DWORD PTR [rcx+0x34]
   1400103de:	cmp    eax,DWORD PTR [rcx+0x38]
   1400103e1:	mov    rdi,rdx
   1400103e4:	movsx  edx,BYTE PTR [rcx+0x48]
   1400103e8:	mov    rbp,rcx
   1400103eb:	jle    0x1400103fa
   1400103ed:	inc    edx
   1400103ef:	cmp    edx,0x1c
   1400103f2:	jae    0x14001047b
   1400103f8:	jmp    0x140010404
   1400103fa:	cmp    eax,DWORD PTR [rcx+0x3c]
   1400103fd:	jge    0x14001047b
   1400103ff:	sub    edx,0x1
   140010402:	js     0x14001047b
   140010404:	mov    r8,rdi
   140010407:	call   0x1400100e0
   14001040c:	cmp    DWORD PTR [rdi],0x0
   14001040f:	jle    0x14001041a
   140010411:	mov    QWORD PTR [rbp+0x0],r12
   140010415:	mov    DWORD PTR [rbp+0x34],ebx
   140010418:	jmp    0x14001047b
   14001041a:	dec    ebx
   14001041c:	movsxd rcx,ebx
   14001041f:	js     0x140010473
   140010421:	lea    rax,[rcx+rcx*2]
   140010425:	mov    QWORD PTR [rsp+0x30],rsi
   14001042a:	lea    rdi,[r12+rax*8]
   14001042e:	lea    rax,[rcx+rcx*2]
   140010432:	lea    rsi,[r12+rax*8+0x10]
   140010437:	mov    r8d,DWORD PTR [rdi]
   14001043a:	test   r8d,r8d
   14001043d:	js     0x140010461
   14001043f:	mov    rdx,QWORD PTR [rsi]
   140010442:	mov    rcx,rbp
   140010445:	call   0x1400102d0
   14001044a:	mov    rcx,QWORD PTR [rdi+0x10]
   14001044e:	mov    QWORD PTR [rax+0x10],rcx
   140010452:	mov    rdx,QWORD PTR [rdi+0x8]
   140010456:	mov    QWORD PTR [rax+0x8],rdx
   14001045a:	mov    edx,DWORD PTR [rdi]
   14001045c:	mov    DWORD PTR [rax],edx
   14001045e:	inc    DWORD PTR [rbp+0x30]
   140010461:	sub    rsi,0x18
   140010465:	sub    rdi,0x18
   140010469:	sub    ebx,0x1
   14001046c:	jns    0x140010437
   14001046e:	mov    rsi,QWORD PTR [rsp+0x30]
   140010473:	mov    rcx,r12
   140010476:	call   0x140010a40
   14001047b:	mov    rbx,QWORD PTR [rsp+0x38]
   140010480:	mov    rbp,QWORD PTR [rsp+0x40]
   140010485:	mov    rdi,QWORD PTR [rsp+0x48]
   14001048a:	add    rsp,0x20
   14001048e:	pop    r12
   140010490:	ret    
   140010491:	int3   
   140010492:	int3   
   140010493:	int3   
   140010494:	int3   
   140010495:	int3   
   140010496:	int3   
   140010497:	int3   
   140010498:	int3   
   140010499:	int3   
   14001049a:	int3   
   14001049b:	int3   
   14001049c:	int3   
   14001049d:	int3   
   14001049e:	int3   
   14001049f:	int3   
   1400104a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400104a5:	push   rdi
   1400104a6:	sub    rsp,0x20
   1400104aa:	mov    rdi,rcx
   1400104ad:	mov    rcx,rdx
   1400104b0:	call   QWORD PTR [rdi+0x8]
   1400104b3:	mov    rdx,QWORD PTR [rsp+0x38]
   1400104b8:	mov    rcx,rdi
   1400104bb:	mov    r8d,eax
   1400104be:	call   0x1400102d0
   1400104c3:	mov    QWORD PTR [rsp+0x30],0x0
   1400104cc:	mov    DWORD PTR [rsp+0x30],0x0
   1400104d4:	cmp    DWORD PTR [rax],0x0
   1400104d7:	jl     0x140010517
   1400104d9:	mov    rdx,rax
   1400104dc:	mov    rcx,rdi
   1400104df:	mov    QWORD PTR [rsp+0x40],rbx
   1400104e4:	call   0x140010050
   1400104e9:	mov    rbx,rax
   1400104ec:	mov    eax,DWORD PTR [rdi+0x3c]
   1400104ef:	cmp    DWORD PTR [rdi+0x30],eax
   1400104f2:	jge    0x140010509
   1400104f4:	lea    rdx,[rsp+0x30]
   1400104f9:	mov    rcx,rdi
   1400104fc:	mov    DWORD PTR [rsp+0x30],0x0
   140010504:	call   0x1400103c0
   140010509:	mov    rax,rbx
   14001050c:	mov    rbx,QWORD PTR [rsp+0x40]
   140010511:	add    rsp,0x20
   140010515:	pop    rdi
   140010516:	ret    
   140010517:	mov    rax,QWORD PTR [rsp+0x30]
   14001051c:	add    rsp,0x20
   140010520:	pop    rdi
   140010521:	ret    
   140010522:	int3   
   140010523:	int3   
   140010524:	int3   
   140010525:	int3   
   140010526:	int3   
   140010527:	int3   
   140010528:	int3   
   140010529:	int3   
   14001052a:	int3   
   14001052b:	int3   
   14001052c:	int3   
   14001052d:	int3   
   14001052e:	int3   
   14001052f:	int3   
   140010530:	mov    QWORD PTR [rsp+0x8],rbx
   140010535:	mov    QWORD PTR [rsp+0x18],r8
   14001053a:	mov    QWORD PTR [rsp+0x10],rdx
   14001053f:	push   rbp
   140010540:	push   rsi
   140010541:	push   rdi
   140010542:	sub    rsp,0x30
   140010546:	mov    rdi,QWORD PTR [rsp+0x70]
   14001054b:	movzx  esi,r9b
   14001054f:	mov    rbx,rcx
   140010552:	cmp    DWORD PTR [rdi],0x0
   140010555:	jg     0x140010593
   140010557:	test   r9b,0x2
   14001055b:	je     0x140010574
   14001055d:	test   r8,r8
   140010560:	jne    0x140010574
   140010562:	call   0x1400104a0
   140010567:	mov    rbx,QWORD PTR [rsp+0x50]
   14001056c:	add    rsp,0x30
   140010570:	pop    rdi
   140010571:	pop    rsi
   140010572:	pop    rbp
   140010573:	ret    
   140010574:	mov    eax,DWORD PTR [rcx+0x38]
   140010577:	cmp    DWORD PTR [rcx+0x30],eax
   14001057a:	jle    0x1400105db
   14001057c:	mov    rdx,rdi
   14001057f:	call   0x1400103c0
   140010584:	cmp    DWORD PTR [rdi],0x0
   140010587:	mov    rdx,QWORD PTR [rsp+0x58]
   14001058c:	jle    0x1400105db
   14001058e:	mov    r8,QWORD PTR [rsp+0x60]
   140010593:	mov    rax,QWORD PTR [rbx+0x20]
   140010597:	test   rax,rax
   14001059a:	je     0x1400105ab
   14001059c:	test   rdx,rdx
   14001059f:	je     0x1400105ab
   1400105a1:	mov    rcx,rdx
   1400105a4:	call   rax
   1400105a6:	mov    r8,QWORD PTR [rsp+0x60]
   1400105ab:	mov    rax,QWORD PTR [rbx+0x28]
   1400105af:	test   rax,rax
   1400105b2:	je     0x1400105be
   1400105b4:	test   r8,r8
   1400105b7:	je     0x1400105be
   1400105b9:	mov    rcx,r8
   1400105bc:	call   rax
   1400105be:	xor    eax,eax
   1400105c0:	mov    QWORD PTR [rsp+0x70],rax
   1400105c5:	mov    DWORD PTR [rsp+0x70],eax
   1400105c9:	mov    rax,QWORD PTR [rsp+0x70]
   1400105ce:	mov    rbx,QWORD PTR [rsp+0x50]
   1400105d3:	add    rsp,0x30
   1400105d7:	pop    rdi
   1400105d8:	pop    rsi
   1400105d9:	pop    rbp
   1400105da:	ret    
   1400105db:	mov    rcx,rdx
   1400105de:	call   QWORD PTR [rbx+0x8]
   1400105e1:	mov    rdx,QWORD PTR [rsp+0x58]
   1400105e6:	mov    rcx,rbx
   1400105e9:	mov    r8d,eax
   1400105ec:	mov    ebp,eax
   1400105ee:	call   0x1400102d0
   1400105f3:	mov    rdx,rax
   1400105f6:	cmp    DWORD PTR [rax],0x0
   1400105f9:	jge    0x140010620
   1400105fb:	inc    DWORD PTR [rbx+0x30]
   1400105fe:	mov    eax,DWORD PTR [rbx+0x30]
   140010601:	cmp    eax,DWORD PTR [rbx+0x34]
   140010604:	jne    0x140010620
   140010606:	mov    r8,QWORD PTR [rsp+0x60]
   14001060b:	mov    rdx,QWORD PTR [rsp+0x58]
   140010610:	dec    eax
   140010612:	mov    DWORD PTR [rbx+0x30],eax
   140010615:	mov    DWORD PTR [rdi],0x7
   14001061b:	jmp    0x140010593
   140010620:	mov    rax,QWORD PTR [rsp+0x60]
   140010625:	mov    r9,QWORD PTR [rsp+0x58]
   14001062a:	btr    ebp,0x1f
   14001062e:	mov    r8d,ebp
   140010631:	mov    rcx,rbx
   140010634:	mov    BYTE PTR [rsp+0x28],sil
   140010639:	mov    QWORD PTR [rsp+0x20],rax
   14001063e:	call   0x14000ffc0
   140010643:	mov    rbx,QWORD PTR [rsp+0x50]
   140010648:	add    rsp,0x30
   14001064c:	pop    rdi
   14001064d:	pop    rsi
   14001064e:	pop    rbp
   14001064f:	ret    
   140010650:	sub    rsp,0x38
   140010654:	mov    QWORD PTR [rsp+0x20],r9
   140010659:	mov    r9d,0x3
   14001065f:	call   0x140010230
   140010664:	add    rsp,0x38
   140010668:	ret    
   140010669:	int3   
   14001066a:	int3   
   14001066b:	int3   
   14001066c:	int3   
   14001066d:	int3   
   14001066e:	int3   
   14001066f:	int3   
   140010670:	sub    rsp,0x38
   140010674:	mov    r10d,r9d
   140010677:	lea    rax,[rip+0x35442]        # 0x140045ac0
   14001067e:	xor    r9d,r9d
   140010681:	cmp    DWORD PTR [rax],r10d
   140010684:	jge    0x140010693
   140010686:	inc    r9d
   140010689:	add    rax,0x4
   14001068d:	cmp    r9d,0x1b
   140010691:	jb     0x140010681
   140010693:	mov    rax,QWORD PTR [rsp+0x60]
   140010698:	mov    QWORD PTR [rsp+0x20],rax
   14001069d:	call   0x140010230
   1400106a2:	add    rsp,0x38
   1400106a6:	ret    
   1400106a7:	int3   
   1400106a8:	int3   
   1400106a9:	int3   
   1400106aa:	int3   
   1400106ab:	int3   
   1400106ac:	int3   
   1400106ad:	int3   
   1400106ae:	int3   
   1400106af:	int3   
   1400106b0:	mov    rax,QWORD PTR [rcx+0x28]
   1400106b4:	mov    QWORD PTR [rcx+0x28],rdx
   1400106b8:	ret    
   1400106b9:	int3   
   1400106ba:	int3   
   1400106bb:	int3   
   1400106bc:	int3   
   1400106bd:	int3   
   1400106be:	int3   
   1400106bf:	int3   
   1400106c0:	mov    eax,DWORD PTR [rcx+0x30]
   1400106c3:	ret    
   1400106c4:	int3   
   1400106c5:	int3   
   1400106c6:	int3   
   1400106c7:	int3   
   1400106c8:	int3   
   1400106c9:	int3   
   1400106ca:	int3   
   1400106cb:	int3   
   1400106cc:	int3   
   1400106cd:	int3   
   1400106ce:	int3   
   1400106cf:	int3   
   1400106d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400106d5:	push   rdi
   1400106d6:	sub    rsp,0x20
   1400106da:	mov    rdi,rcx
   1400106dd:	mov    rcx,rdx
   1400106e0:	mov    rbx,rdx
   1400106e3:	call   QWORD PTR [rdi+0x8]
   1400106e6:	mov    rdx,rbx
   1400106e9:	mov    rcx,rdi
   1400106ec:	mov    r8d,eax
   1400106ef:	call   0x1400102d0
   1400106f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400106f9:	mov    rax,QWORD PTR [rax+0x8]
   1400106fd:	add    rsp,0x20
   140010701:	pop    rdi
   140010702:	ret    
   140010703:	int3   
   140010704:	int3   
   140010705:	int3   
   140010706:	int3   
   140010707:	int3   
   140010708:	int3   
   140010709:	int3   
   14001070a:	int3   
   14001070b:	int3   
   14001070c:	int3   
   14001070d:	int3   
   14001070e:	int3   
   14001070f:	int3   
   140010710:	sub    rsp,0x38
   140010714:	mov    QWORD PTR [rsp+0x20],r9
   140010719:	mov    r9b,0x3
   14001071c:	call   0x140010530
   140010721:	add    rsp,0x38
   140010725:	ret    
   140010726:	int3   
   140010727:	int3   
   140010728:	int3   
   140010729:	int3   
   14001072a:	int3   
   14001072b:	int3   
   14001072c:	int3   
   14001072d:	int3   
   14001072e:	int3   
   14001072f:	int3   
   140010730:	mov    QWORD PTR [rsp+0x8],rbx
   140010735:	mov    r11d,DWORD PTR [rcx+0x34]
   140010739:	mov    rbx,rdx
   14001073c:	mov    rdx,rcx
   14001073f:	mov    r9d,DWORD PTR [rbx]
   140010742:	inc    r9d
   140010745:	cmp    r9d,r11d
   140010748:	movsxd rax,r9d
   14001074b:	jge    0x14001076a
   14001074d:	lea    r8,[rax+rax*2]
   140010751:	mov    rax,QWORD PTR [rcx]
   140010754:	lea    r10,[rax+r8*8]
   140010758:	cmp    DWORD PTR [r10],0x0
   14001075c:	jge    0x140010772
   14001075e:	inc    r9d
   140010761:	add    r10,0x18
   140010765:	cmp    r9d,r11d
   140010768:	jl     0x140010758
   14001076a:	xor    eax,eax
   14001076c:	mov    rbx,QWORD PTR [rsp+0x8]
   140010771:	ret    
   140010772:	movsxd rax,r9d
   140010775:	mov    DWORD PTR [rbx],r9d
   140010778:	mov    rbx,QWORD PTR [rsp+0x8]
   14001077d:	lea    rcx,[rax+rax*2]
   140010781:	mov    rax,QWORD PTR [rdx]
   140010784:	lea    rax,[rax+rcx*8]
   140010788:	ret    
   140010789:	int3   
   14001078a:	int3   
   14001078b:	int3   
   14001078c:	int3   
   14001078d:	int3   
   14001078e:	int3   
   14001078f:	int3   
   140010790:	cmp    DWORD PTR [rdx],0x0
   140010793:	jl     0x14001079a
   140010795:	jmp    0x140010050
   14001079a:	xor    eax,eax
   14001079c:	ret    
   14001079d:	int3   
   14001079e:	int3   
   14001079f:	int3   
   1400107a0:	sub    rsp,0x8
   1400107a4:	xor    r8d,r8d
   1400107a7:	mov    r9,rcx
   1400107aa:	test   rcx,rcx
   1400107ad:	je     0x140010803
   1400107af:	xor    eax,eax
   1400107b1:	or     rcx,0xffffffffffffffff
   1400107b5:	mov    QWORD PTR [rsp],rdi
   1400107b9:	mov    rdi,r9
   1400107bc:	repnz scas al,BYTE PTR es:[rdi]
   1400107be:	mov    rdi,QWORD PTR [rsp]
   1400107c2:	not    rcx
   1400107c5:	dec    rcx
   1400107c8:	lea    eax,[rcx-0x20]
   1400107cb:	cdq    
   1400107cc:	and    edx,0x1f
   1400107cf:	add    edx,eax
   1400107d1:	movsxd rax,ecx
   1400107d4:	sar    edx,0x5
   1400107d7:	add    rax,r9
   1400107da:	inc    edx
   1400107dc:	cmp    r9,rax
   1400107df:	jae    0x140010803
   1400107e1:	movsxd rdx,edx
   1400107e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400107f0:	movzx  ecx,BYTE PTR [r9]
   1400107f4:	imul   r8d,r8d,0x25
   1400107f8:	add    r9,rdx
   1400107fb:	add    r8d,ecx
   1400107fe:	cmp    r9,rax
   140010801:	jb     0x1400107f0
   140010803:	mov    eax,r8d
   140010806:	add    rsp,0x8
   14001080a:	ret    
   14001080b:	int3   
   14001080c:	int3   
   14001080d:	int3   
   14001080e:	int3   
   14001080f:	int3   
   140010810:	cmp    rcx,rdx
   140010813:	jne    0x140010818
   140010815:	mov    al,0x1
   140010817:	ret    
   140010818:	test   rcx,rcx
   14001081b:	je     0x14001084a
   14001081d:	test   rdx,rdx
   140010820:	je     0x14001084a
   140010822:	movzx  eax,BYTE PTR [rcx]
   140010825:	test   al,al
   140010827:	je     0x140010841
   140010829:	nop    DWORD PTR [rax+0x0]
   140010830:	cmp    al,BYTE PTR [rdx]
   140010832:	jne    0x140010841
   140010834:	mov    al,BYTE PTR [rcx+0x1]
   140010837:	inc    rcx
   14001083a:	inc    rdx
   14001083d:	test   al,al
   14001083f:	jne    0x140010830
   140010841:	movzx  eax,BYTE PTR [rdx]
   140010844:	cmp    BYTE PTR [rcx],al
   140010846:	sete   al
   140010849:	ret    
   14001084a:	xor    al,al
   14001084c:	ret    
   14001084d:	int3   
   14001084e:	int3   
   14001084f:	int3   
   140010850:	test   rcx,rcx
   140010853:	je     0x1400108ea
   140010859:	push   rbx
   14001085a:	sub    rsp,0x20
   14001085e:	cmp    QWORD PTR [rcx],0x0
   140010862:	mov    rbx,rcx
   140010865:	je     0x1400108d7
   140010867:	cmp    QWORD PTR [rcx+0x20],0x0
   14001086c:	jne    0x140010875
   14001086e:	cmp    QWORD PTR [rcx+0x28],0x0
   140010873:	je     0x1400108c8
   140010875:	mov    QWORD PTR [rsp+0x30],rbp
   14001087a:	mov    QWORD PTR [rsp+0x40],rdi
   14001087f:	or     rbp,0xffffffffffffffff
   140010883:	mov    rdi,rbp
   140010886:	mov    QWORD PTR [rsp+0x38],rsi
   14001088b:	nop    DWORD PTR [rax+rax*1+0x0]
   140010890:	lea    ecx,[rbp+0x1]
   140010893:	inc    rdi
   140010896:	cmp    ecx,DWORD PTR [rbx+0x34]
   140010899:	jge    0x1400108b9
   14001089b:	mov    r8,QWORD PTR [rbx]
   14001089e:	lea    rax,[rdi+rdi*2]
   1400108a2:	lea    rdx,[r8+rax*8]
   1400108a6:	cmp    DWORD PTR [rdx],0x0
   1400108a9:	jge    0x1400108ec
   1400108ab:	inc    ecx
   1400108ad:	inc    rdi
   1400108b0:	add    rdx,0x18
   1400108b4:	cmp    ecx,DWORD PTR [rbx+0x34]
   1400108b7:	jl     0x1400108a6
   1400108b9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400108be:	mov    rbp,QWORD PTR [rsp+0x30]
   1400108c3:	mov    rdi,QWORD PTR [rsp+0x40]
   1400108c8:	mov    rcx,QWORD PTR [rbx]
   1400108cb:	call   0x140010a40
   1400108d0:	mov    QWORD PTR [rbx],0x0
   1400108d7:	cmp    BYTE PTR [rbx+0x49],0x0
   1400108db:	je     0x1400108e5
   1400108dd:	mov    rcx,rbx
   1400108e0:	call   0x140010a40
   1400108e5:	add    rsp,0x20
   1400108e9:	pop    rbx
   1400108ea:	repz ret 
   1400108ec:	movsxd rax,ecx
   1400108ef:	mov    ebp,ecx
   1400108f1:	lea    rcx,[rax+rax*2]
   1400108f5:	lea    rsi,[r8+rcx*8]
   1400108f9:	test   rsi,rsi
   1400108fc:	je     0x1400108b9
   1400108fe:	mov    rax,QWORD PTR [rbx+0x20]
   140010902:	test   rax,rax
   140010905:	je     0x140010912
   140010907:	mov    rcx,QWORD PTR [rsi+0x10]
   14001090b:	test   rcx,rcx
   14001090e:	je     0x140010912
   140010910:	call   rax
   140010912:	mov    rax,QWORD PTR [rbx+0x28]
   140010916:	test   rax,rax
   140010919:	je     0x140010890
   14001091f:	mov    rcx,QWORD PTR [rsi+0x8]
   140010923:	test   rcx,rcx
   140010926:	je     0x140010890
   14001092c:	call   rax
   14001092e:	jmp    0x140010890
   140010933:	int3   
   140010934:	int3   
   140010935:	int3   
   140010936:	int3   
   140010937:	int3   
   140010938:	int3   
   140010939:	int3   
   14001093a:	int3   
   14001093b:	int3   
   14001093c:	int3   
   14001093d:	int3   
   14001093e:	int3   
   14001093f:	int3   
   140010940:	test   rcx,rcx
   140010943:	je     0x14001096a
   140010945:	mov    rax,QWORD PTR [rip+0x57acc]        # 0x140068418
   14001094c:	mov    BYTE PTR [rip+0x57abd],0x1        # 0x140068410
   140010953:	test   rax,rax
   140010956:	je     0x140010965
   140010958:	mov    rdx,rcx
   14001095b:	mov    rcx,QWORD PTR [rip+0x57aa6]        # 0x140068408
   140010962:	rex.W jmp rax
   140010965:	jmp    0x14002c04c
   14001096a:	lea    rax,[rip+0x351d7]        # 0x140045b48
   140010971:	ret    
   140010972:	int3   
   140010973:	int3   
   140010974:	int3   
   140010975:	int3   
   140010976:	int3   
   140010977:	int3   
   140010978:	int3   
   140010979:	int3   
   14001097a:	int3   
   14001097b:	int3   
   14001097c:	int3   
   14001097d:	int3   
   14001097e:	int3   
   14001097f:	int3   
   140010980:	rex push rbx
   140010982:	sub    rsp,0x20
   140010986:	lea    rbx,[rip+0x351bb]        # 0x140045b48
   14001098d:	cmp    rcx,rbx
   140010990:	jne    0x1400109d0
   140010992:	test   rdx,rdx
   140010995:	je     0x1400109c7
   140010997:	mov    rax,QWORD PTR [rip+0x57a7a]        # 0x140068418
   14001099e:	mov    BYTE PTR [rip+0x57a6b],0x1        # 0x140068410
   1400109a5:	test   rax,rax
   1400109a8:	je     0x1400109bc
   1400109aa:	mov    rcx,QWORD PTR [rip+0x57a57]        # 0x140068408
   1400109b1:	call   rax
   1400109b3:	mov    rbx,rax
   1400109b6:	add    rsp,0x20
   1400109ba:	pop    rbx
   1400109bb:	ret    
   1400109bc:	mov    rcx,rdx
   1400109bf:	call   0x14002c04c
   1400109c4:	mov    rbx,rax
   1400109c7:	mov    rax,rbx
   1400109ca:	add    rsp,0x20
   1400109ce:	pop    rbx
   1400109cf:	ret    
   1400109d0:	test   rdx,rdx
   1400109d3:	jne    0x140010a04
   1400109d5:	mov    rax,QWORD PTR [rip+0x57a44]        # 0x140068420
   1400109dc:	test   rax,rax
   1400109df:	je     0x1400109f6
   1400109e1:	mov    rdx,rcx
   1400109e4:	mov    rcx,QWORD PTR [rip+0x57a1d]        # 0x140068408
   1400109eb:	call   rax
   1400109ed:	mov    rax,rbx
   1400109f0:	add    rsp,0x20
   1400109f4:	pop    rbx
   1400109f5:	ret    
   1400109f6:	call   0x14002b36c
   1400109fb:	mov    rax,rbx
   1400109fe:	add    rsp,0x20
   140010a02:	pop    rbx
   140010a03:	ret    
   140010a04:	mov    rax,QWORD PTR [rip+0x57a1d]        # 0x140068428
   140010a0b:	mov    BYTE PTR [rip+0x579fe],0x1        # 0x140068410
   140010a12:	test   rax,rax
   140010a15:	je     0x140010a2c
   140010a17:	mov    r8,rdx
   140010a1a:	mov    rdx,rcx
   140010a1d:	mov    rcx,QWORD PTR [rip+0x579e4]        # 0x140068408
   140010a24:	add    rsp,0x20
   140010a28:	pop    rbx
   140010a29:	rex.W jmp rax
   140010a2c:	add    rsp,0x20
   140010a30:	pop    rbx
   140010a31:	jmp    0x14002bf78
   140010a36:	int3   
   140010a37:	int3   
   140010a38:	int3   
   140010a39:	int3   
   140010a3a:	int3   
   140010a3b:	int3   
   140010a3c:	int3   
   140010a3d:	int3   
   140010a3e:	int3   
   140010a3f:	int3   
   140010a40:	sub    rsp,0x28
   140010a44:	lea    rax,[rip+0x350fd]        # 0x140045b48
   140010a4b:	cmp    rcx,rax
   140010a4e:	je     0x140010a72
   140010a50:	mov    rax,QWORD PTR [rip+0x579c9]        # 0x140068420
   140010a57:	test   rax,rax
   140010a5a:	je     0x140010a6d
   140010a5c:	mov    rdx,rcx
   140010a5f:	mov    rcx,QWORD PTR [rip+0x579a2]        # 0x140068408
   140010a66:	add    rsp,0x28
   140010a6a:	rex.W jmp rax
   140010a6d:	call   0x14002b36c
   140010a72:	add    rsp,0x28
   140010a76:	ret    
   140010a77:	int3   
   140010a78:	int3   
   140010a79:	int3   
   140010a7a:	int3   
   140010a7b:	int3   
   140010a7c:	int3   
   140010a7d:	int3   
   140010a7e:	int3   
   140010a7f:	int3   
   140010a80:	sub    rsp,0x28
   140010a84:	test   rcx,rcx
   140010a87:	lea    rax,[rip+0x579aa]        # 0x140068438
   140010a8e:	cmovne rax,rcx
   140010a92:	mov    rcx,QWORD PTR [rax]
   140010a95:	test   rcx,rcx
   140010a98:	je     0x140010ac5
   140010a9a:	mov    rax,QWORD PTR [rip+0x579b7]        # 0x140068458
   140010aa1:	dec    DWORD PTR [rcx+0x18]
   140010aa4:	test   rax,rax
   140010aa7:	je     0x140010abb
   140010aa9:	lea    rdx,[rcx+0x48]
   140010aad:	mov    rcx,QWORD PTR [rip+0x579ac]        # 0x140068460
   140010ab4:	add    rsp,0x28
   140010ab8:	rex.W jmp rax
   140010abb:	add    rcx,0x20
   140010abf:	call   QWORD PTR [rip+0x2c5fb]        # 0x14003d0c0
   140010ac5:	add    rsp,0x28
   140010ac9:	ret    
   140010aca:	int3   
   140010acb:	int3   
   140010acc:	int3   
   140010acd:	int3   
   140010ace:	int3   
   140010acf:	int3   
   140010ad0:	rex push rdi
   140010ad2:	sub    rsp,0x20
   140010ad6:	mov    rax,QWORD PTR [rip+0x5796b]        # 0x140068448
   140010add:	mov    rdi,rcx
   140010ae0:	test   rax,rax
   140010ae3:	je     0x140010b06
   140010ae5:	lea    rdx,[rcx+0x48]
   140010ae9:	mov    rcx,QWORD PTR [rip+0x57970]        # 0x140068460
   140010af0:	mov    QWORD PTR [rsp+0x30],rbx
   140010af5:	call   rax
   140010af7:	mov    rbx,QWORD PTR [rsp+0x30]
   140010afc:	mov    QWORD PTR [rdi+0x48],0x0
   140010b04:	jmp    0x140010b10
   140010b06:	add    rcx,0x20
   140010b0a:	call   QWORD PTR [rip+0x2c5c0]        # 0x14003d0d0
   140010b10:	cmp    BYTE PTR [rdi+0x8],0x0
   140010b14:	je     0x140010b1e
   140010b16:	mov    rcx,rdi
   140010b19:	call   0x140010a40
   140010b1e:	add    rsp,0x20
   140010b22:	pop    rdi
   140010b23:	ret    
   140010b24:	int3   
   140010b25:	int3   
   140010b26:	int3   
   140010b27:	int3   
   140010b28:	int3   
   140010b29:	int3   
   140010b2a:	int3   
   140010b2b:	int3   
   140010b2c:	int3   
   140010b2d:	int3   
   140010b2e:	int3   
   140010b2f:	int3   
   140010b30:	rex push rdi
   140010b32:	sub    rsp,0x20
   140010b36:	cmp    QWORD PTR [rcx],0x0
   140010b3a:	mov    rdi,rcx
   140010b3d:	jne    0x140010c0c
   140010b43:	mov    ecx,0x50
   140010b48:	mov    QWORD PTR [rsp+0x38],rbx
   140010b4d:	call   0x140010940
   140010b52:	xor    ecx,ecx
   140010b54:	mov    BYTE PTR [rax+0x8],0x1
   140010b58:	lea    rdx,[rax+0x48]
   140010b5c:	mov    QWORD PTR [rax+0x10],rcx
   140010b60:	mov    DWORD PTR [rax+0x18],ecx
   140010b63:	mov    rbx,rax
   140010b66:	mov    rax,QWORD PTR [rip+0x578d3]        # 0x140068440
   140010b6d:	mov    QWORD PTR [rdx],rcx
   140010b70:	test   rax,rax
   140010b73:	je     0x140010b89
   140010b75:	mov    DWORD PTR [rsp+0x30],ecx
   140010b79:	mov    rcx,QWORD PTR [rip+0x578e0]        # 0x140068460
   140010b80:	lea    r8,[rsp+0x30]
   140010b85:	call   rax
   140010b87:	jmp    0x140010b93
   140010b89:	lea    rcx,[rbx+0x20]
   140010b8d:	call   QWORD PTR [rip+0x2c535]        # 0x14003d0c8
   140010b93:	xor    eax,eax
   140010b95:	lock cmpxchg QWORD PTR [rdi],rbx
   140010b9a:	je     0x140010bae
   140010b9c:	mov    rcx,rbx
   140010b9f:	mov    rbx,QWORD PTR [rsp+0x38]
   140010ba4:	add    rsp,0x20
   140010ba8:	pop    rdi
   140010ba9:	jmp    0x140010ad0
   140010bae:	xor    ecx,ecx
   140010bb0:	mov    QWORD PTR [rbx],rdi
   140010bb3:	call   0x140010c20
   140010bb8:	mov    r11,QWORD PTR [rip+0x57871]        # 0x140068430
   140010bbf:	mov    QWORD PTR [rip+0x5786a],rbx        # 0x140068430
   140010bc6:	mov    QWORD PTR [rbx+0x10],r11
   140010bca:	mov    rcx,QWORD PTR [rip+0x57867]        # 0x140068438
   140010bd1:	test   rcx,rcx
   140010bd4:	je     0x140010c07
   140010bd6:	mov    rax,QWORD PTR [rip+0x5787b]        # 0x140068458
   140010bdd:	dec    DWORD PTR [rcx+0x18]
   140010be0:	test   rax,rax
   140010be3:	je     0x140010bfd
   140010be5:	lea    rdx,[rcx+0x48]
   140010be9:	mov    rcx,QWORD PTR [rip+0x57870]        # 0x140068460
   140010bf0:	mov    rbx,QWORD PTR [rsp+0x38]
   140010bf5:	add    rsp,0x20
   140010bf9:	pop    rdi
   140010bfa:	rex.W jmp rax
   140010bfd:	add    rcx,0x20
   140010c01:	call   QWORD PTR [rip+0x2c4b9]        # 0x14003d0c0
   140010c07:	mov    rbx,QWORD PTR [rsp+0x38]
   140010c0c:	add    rsp,0x20
   140010c10:	pop    rdi
   140010c11:	ret    
   140010c12:	int3   
   140010c13:	int3   
   140010c14:	int3   
   140010c15:	int3   
   140010c16:	int3   
   140010c17:	int3   
   140010c18:	int3   
   140010c19:	int3   
   140010c1a:	int3   
   140010c1b:	int3   
   140010c1c:	int3   
   140010c1d:	int3   
   140010c1e:	int3   
   140010c1f:	int3   
   140010c20:	mov    QWORD PTR [rsp+0x8],rbx
   140010c25:	push   rdi
   140010c26:	sub    rsp,0x20
   140010c2a:	test   rcx,rcx
   140010c2d:	lea    rdi,[rip+0x57804]        # 0x140068438
   140010c34:	cmovne rdi,rcx
   140010c38:	mov    rbx,QWORD PTR [rdi]
   140010c3b:	test   rbx,rbx
   140010c3e:	jne    0x140010c4b
   140010c40:	mov    rcx,rdi
   140010c43:	call   0x140010b30
   140010c48:	mov    rbx,QWORD PTR [rdi]
   140010c4b:	mov    rax,QWORD PTR [rip+0x577fe]        # 0x140068450
   140010c52:	test   rax,rax
   140010c55:	je     0x140010c72
   140010c57:	mov    rcx,QWORD PTR [rip+0x57802]        # 0x140068460
   140010c5e:	lea    rdx,[rbx+0x48]
   140010c62:	call   rax
   140010c64:	inc    DWORD PTR [rbx+0x18]
   140010c67:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c6c:	add    rsp,0x20
   140010c70:	pop    rdi
   140010c71:	ret    
   140010c72:	lea    rcx,[rbx+0x20]
   140010c76:	call   QWORD PTR [rip+0x2c45c]        # 0x14003d0d8
   140010c7c:	inc    DWORD PTR [rbx+0x18]
   140010c7f:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c84:	add    rsp,0x20
   140010c88:	pop    rdi
   140010c89:	ret    
   140010c8a:	int3   
   140010c8b:	int3   
   140010c8c:	int3   
   140010c8d:	int3   
   140010c8e:	int3   
   140010c8f:	int3   
   140010c90:	test   rcx,rcx
   140010c93:	je     0x140010dd0
   140010c99:	push   rsi
   140010c9a:	sub    rsp,0x20
   140010c9e:	mov    QWORD PTR [rsp+0x38],rdi
   140010ca3:	mov    rdi,QWORD PTR [rcx]
   140010ca6:	mov    rsi,rcx
   140010ca9:	test   rdi,rdi
   140010cac:	je     0x140010dc6
   140010cb2:	cmp    QWORD PTR [rdi],rcx
   140010cb5:	jne    0x140010dc6
   140010cbb:	mov    rcx,QWORD PTR [rip+0x57776]        # 0x140068438
   140010cc2:	mov    QWORD PTR [rsp+0x30],rbx
   140010cc7:	mov    rbx,rcx
   140010cca:	test   rcx,rcx
   140010ccd:	jne    0x140010ce5
   140010ccf:	lea    rcx,[rip+0x57762]        # 0x140068438
   140010cd6:	call   0x140010b30
   140010cdb:	mov    rcx,QWORD PTR [rip+0x57756]        # 0x140068438
   140010ce2:	mov    rbx,rcx
   140010ce5:	mov    rax,QWORD PTR [rip+0x57764]        # 0x140068450
   140010cec:	test   rax,rax
   140010cef:	je     0x140010d00
   140010cf1:	lea    rdx,[rcx+0x48]
   140010cf5:	mov    rcx,QWORD PTR [rip+0x57764]        # 0x140068460
   140010cfc:	call   rax
   140010cfe:	jmp    0x140010d0a
   140010d00:	add    rcx,0x20
   140010d04:	call   QWORD PTR [rip+0x2c3ce]        # 0x14003d0d8
   140010d0a:	mov    rcx,QWORD PTR [rip+0x5771f]        # 0x140068430
   140010d11:	inc    DWORD PTR [rbx+0x18]
   140010d14:	cmp    rcx,rdi
   140010d17:	jne    0x140010d26
   140010d19:	mov    rax,QWORD PTR [rdi+0x10]
   140010d1d:	mov    QWORD PTR [rip+0x5770c],rax        # 0x140068430
   140010d24:	jmp    0x140010d4b
   140010d26:	test   rcx,rcx
   140010d29:	je     0x140010d4b
   140010d2b:	nop    DWORD PTR [rax+rax*1+0x0]
   140010d30:	mov    rax,QWORD PTR [rcx+0x10]
   140010d34:	cmp    rax,rdi
   140010d37:	je     0x140010d43
   140010d39:	mov    rcx,rax
   140010d3c:	test   rax,rax
   140010d3f:	jne    0x140010d30
   140010d41:	jmp    0x140010d4b
   140010d43:	mov    rax,QWORD PTR [rdi+0x10]
   140010d47:	mov    QWORD PTR [rcx+0x10],rax
   140010d4b:	mov    rcx,QWORD PTR [rip+0x576e6]        # 0x140068438
   140010d52:	test   rcx,rcx
   140010d55:	je     0x140010d7f
   140010d57:	mov    rax,QWORD PTR [rip+0x576fa]        # 0x140068458
   140010d5e:	dec    DWORD PTR [rcx+0x18]
   140010d61:	test   rax,rax
   140010d64:	je     0x140010d75
   140010d66:	lea    rdx,[rcx+0x48]
   140010d6a:	mov    rcx,QWORD PTR [rip+0x576ef]        # 0x140068460
   140010d71:	call   rax
   140010d73:	jmp    0x140010d7f
   140010d75:	add    rcx,0x20
   140010d79:	call   QWORD PTR [rip+0x2c341]        # 0x14003d0c0
   140010d7f:	mov    rax,QWORD PTR [rip+0x576c2]        # 0x140068448
   140010d86:	test   rax,rax
   140010d89:	je     0x140010da2
   140010d8b:	mov    rcx,QWORD PTR [rip+0x576ce]        # 0x140068460
   140010d92:	lea    rdx,[rdi+0x48]
   140010d96:	call   rax
   140010d98:	mov    QWORD PTR [rdi+0x48],0x0
   140010da0:	jmp    0x140010dac
   140010da2:	lea    rcx,[rdi+0x20]
   140010da6:	call   QWORD PTR [rip+0x2c324]        # 0x14003d0d0
   140010dac:	cmp    BYTE PTR [rdi+0x8],0x0
   140010db0:	mov    rbx,QWORD PTR [rsp+0x30]
   140010db5:	je     0x140010dbf
   140010db7:	mov    rcx,rdi
   140010dba:	call   0x140010a40
   140010dbf:	mov    QWORD PTR [rsi],0x0
   140010dc6:	mov    rdi,QWORD PTR [rsp+0x38]
   140010dcb:	add    rsp,0x20
   140010dcf:	pop    rsi
   140010dd0:	repz ret 
   140010dd2:	int3   
   140010dd3:	int3   
   140010dd4:	int3   
   140010dd5:	int3   
   140010dd6:	int3   
   140010dd7:	int3   
   140010dd8:	int3   
   140010dd9:	int3   
   140010dda:	int3   
   140010ddb:	int3   
   140010ddc:	int3   
   140010ddd:	int3   
   140010dde:	int3   
   140010ddf:	int3   
   140010de0:	cmp    ecx,0x13
   140010de3:	ja     0x140010df3
   140010de5:	movsxd rax,ecx
   140010de8:	lea    rcx,[rip+0x576e1]        # 0x1400684d0
   140010def:	mov    QWORD PTR [rcx+rax*8],rdx
   140010df3:	repz ret 
   140010df5:	int3   
   140010df6:	int3   
   140010df7:	int3   
   140010df8:	int3   
   140010df9:	int3   
   140010dfa:	int3   
   140010dfb:	int3   
   140010dfc:	int3   
   140010dfd:	int3   
   140010dfe:	int3   
   140010dff:	int3   
   140010e00:	test   rcx,rcx
   140010e03:	jne    0x140010e08
   140010e05:	xor    eax,eax
   140010e07:	ret    
   140010e08:	cmp    BYTE PTR [rcx+0x8],0x0
   140010e0c:	jne    0x140010e12
   140010e0e:	mov    ax,WORD PTR [rcx]
   140010e11:	ret    
   140010e12:	movzx  ecx,WORD PTR [rcx]
   140010e15:	mov    eax,ecx
   140010e17:	shl    ecx,0x8
   140010e1a:	shr    eax,0x8
   140010e1d:	or     eax,ecx
   140010e1f:	ret    
   140010e20:	test   rcx,rcx
   140010e23:	jne    0x140010e28
   140010e25:	xor    eax,eax
   140010e27:	ret    
   140010e28:	cmp    BYTE PTR [rcx+0x4],0x0
   140010e2c:	jne    0x140010e32
   140010e2e:	mov    ax,WORD PTR [rcx]
   140010e31:	ret    
   140010e32:	movzx  ecx,WORD PTR [rcx]
   140010e35:	mov    eax,ecx
   140010e37:	shl    ecx,0x8
   140010e3a:	shr    eax,0x8
   140010e3d:	or     eax,ecx
   140010e3f:	ret    
   140010e40:	mov    rax,QWORD PTR [rcx+0x10]
   140010e44:	test   rax,rax
   140010e47:	je     0x140010e4c
   140010e49:	mov    eax,DWORD PTR [rax]
   140010e4b:	ret    
   140010e4c:	xor    eax,eax
   140010e4e:	ret    
   140010e4f:	int3   
   140010e50:	mov    QWORD PTR [rsp+0x10],rbp
   140010e55:	push   rdi
   140010e56:	mov    r10,QWORD PTR [rcx+0x10]
   140010e5a:	mov    rdi,r8
   140010e5d:	mov    rbp,rdx
   140010e60:	test   r10,r10
   140010e63:	je     0x140010f16
   140010e69:	mov    r11d,DWORD PTR [r10]
   140010e6c:	xor    r8d,r8d
   140010e6f:	mov    QWORD PTR [rsp+0x10],rbx
   140010e74:	mov    r9d,r11d
   140010e77:	shr    r9d,1
   140010e7a:	cmp    r11d,r9d
   140010e7d:	je     0x140010ec5
   140010e7f:	nop
   140010e80:	mov    edx,DWORD PTR [r10+r9*8+0x4]
   140010e85:	mov    ebx,r9d
   140010e88:	mov    rax,rbp
   140010e8b:	add    rdx,r10
   140010e8e:	sub    rdx,rbp
   140010e91:	movzx  ecx,BYTE PTR [rax]
   140010e94:	cmp    cl,BYTE PTR [rax+rdx*1]
   140010e97:	jne    0x140010ea4
   140010e99:	inc    rax
   140010e9c:	test   cl,cl
   140010e9e:	jne    0x140010e91
   140010ea0:	xor    eax,eax
   140010ea2:	jmp    0x140010ea9
   140010ea4:	sbb    eax,eax
   140010ea6:	sbb    eax,0xffffffff
   140010ea9:	test   eax,eax
   140010eab:	jns    0x140010eb2
   140010ead:	mov    r11d,r9d
   140010eb0:	jmp    0x140010eb9
   140010eb2:	test   eax,eax
   140010eb4:	jle    0x140010ed3
   140010eb6:	mov    r8d,r9d
   140010eb9:	lea    r9d,[r11+r8*1]
   140010ebd:	shr    r9d,1
   140010ec0:	cmp    ebx,r9d
   140010ec3:	jne    0x140010e80
   140010ec5:	xor    eax,eax
   140010ec7:	mov    rbx,QWORD PTR [rsp+0x10]
   140010ecc:	mov    rbp,QWORD PTR [rsp+0x18]
   140010ed1:	pop    rdi
   140010ed2:	ret    
   140010ed3:	lea    eax,[r9+0x1]
   140010ed7:	cmp    eax,DWORD PTR [r10]
   140010eda:	jae    0x140010efc
   140010edc:	mov    eax,DWORD PTR [r10+r9*8+0x10]
   140010ee1:	mov    rbx,QWORD PTR [rsp+0x10]
   140010ee6:	sub    eax,DWORD PTR [r10+r9*8+0x8]
   140010eeb:	mov    DWORD PTR [rdi],eax
   140010eed:	mov    eax,DWORD PTR [r10+r9*8+0x8]
   140010ef2:	add    rax,r10
   140010ef5:	mov    rbp,QWORD PTR [rsp+0x18]
   140010efa:	pop    rdi
   140010efb:	ret    
   140010efc:	mov    rbx,QWORD PTR [rsp+0x10]
   140010f01:	mov    DWORD PTR [rdi],0xffffffff
   140010f07:	mov    eax,DWORD PTR [r10+r9*8+0x8]
   140010f0c:	add    rax,r10
   140010f0f:	mov    rbp,QWORD PTR [rsp+0x18]
   140010f14:	pop    rdi
   140010f15:	ret    
   140010f16:	mov    rax,QWORD PTR [rcx+0x8]
   140010f1a:	mov    rbp,QWORD PTR [rsp+0x18]
   140010f1f:	pop    rdi
   140010f20:	ret    
   140010f21:	int3   
   140010f22:	int3   
   140010f23:	int3   
   140010f24:	int3   
   140010f25:	int3   
   140010f26:	int3   
   140010f27:	int3   
   140010f28:	int3   
   140010f29:	int3   
   140010f2a:	int3   
   140010f2b:	int3   
   140010f2c:	int3   
   140010f2d:	int3   
   140010f2e:	int3   
   140010f2f:	int3   
   140010f30:	mov    QWORD PTR [rsp+0x8],rbx
   140010f35:	mov    QWORD PTR [rsp+0x10],rsi
   140010f3a:	push   rdi
   140010f3b:	sub    rsp,0x20
   140010f3f:	mov    rbx,QWORD PTR [rcx+0x10]
   140010f43:	mov    rsi,r8
   140010f46:	mov    rdi,rdx
   140010f49:	test   rbx,rbx
   140010f4c:	je     0x140010fe3
   140010f52:	mov    r10d,DWORD PTR [rbx]
   140010f55:	xor    r11d,r11d
   140010f58:	mov    r9d,r10d
   140010f5b:	shr    r9d,1
   140010f5e:	cmp    r10d,r9d
   140010f61:	je     0x140010faa
   140010f63:	mov    eax,r9d
   140010f66:	mov    r8d,r9d
   140010f69:	mov    rcx,rdi
   140010f6c:	shl    rax,0x4
   140010f70:	mov    rdx,QWORD PTR [rax+rbx*1+0x8]
   140010f75:	sub    rdx,rdi
   140010f78:	movzx  eax,BYTE PTR [rcx]
   140010f7b:	cmp    al,BYTE PTR [rcx+rdx*1]
   140010f7e:	jne    0x140010f8b
   140010f80:	inc    rcx
   140010f83:	test   al,al
   140010f85:	jne    0x140010f78
   140010f87:	xor    eax,eax
   140010f89:	jmp    0x140010f90
   140010f8b:	sbb    eax,eax
   140010f8d:	sbb    eax,0xffffffff
   140010f90:	test   eax,eax
   140010f92:	jns    0x140010f99
   140010f94:	mov    r10d,r9d
   140010f97:	jmp    0x140010f9e
   140010f99:	jle    0x140010fbc
   140010f9b:	mov    r11d,r9d
   140010f9e:	lea    r9d,[r10+r11*1]
   140010fa2:	shr    r9d,1
   140010fa5:	cmp    r8d,r9d
   140010fa8:	jne    0x140010f63
   140010faa:	xor    eax,eax
   140010fac:	mov    rbx,QWORD PTR [rsp+0x30]
   140010fb1:	mov    rsi,QWORD PTR [rsp+0x38]
   140010fb6:	add    rsp,0x20
   140010fba:	pop    rdi
   140010fbb:	ret    
   140010fbc:	mov    ecx,r9d
   140010fbf:	mov    DWORD PTR [rsi],0xffffffff
   140010fc5:	inc    rcx
   140010fc8:	add    rcx,rcx
   140010fcb:	mov    rcx,QWORD PTR [rbx+rcx*8]
   140010fcf:	mov    rbx,QWORD PTR [rsp+0x30]
   140010fd4:	mov    rsi,QWORD PTR [rsp+0x38]
   140010fd9:	add    rsp,0x20
   140010fdd:	pop    rdi
   140010fde:	jmp    0x14000ff00
   140010fe3:	mov    rax,QWORD PTR [rcx+0x8]
   140010fe7:	mov    rbx,QWORD PTR [rsp+0x30]
   140010fec:	mov    rsi,QWORD PTR [rsp+0x38]
   140010ff1:	add    rsp,0x20
   140010ff5:	pop    rdi
   140010ff6:	ret    
   140010ff7:	int3   
   140010ff8:	int3   
   140010ff9:	int3   
   140010ffa:	int3   
   140010ffb:	int3   
   140010ffc:	int3   
   140010ffd:	int3   
   140010ffe:	int3   
   140010fff:	int3   
   140011000:	sub    rsp,0x28
   140011004:	cmp    DWORD PTR [rdx],0x0
   140011007:	jg     0x1400110d0
   14001100d:	mov    r8,QWORD PTR [rcx+0x8]
   140011011:	cmp    BYTE PTR [r8+0x2],0xda
   140011016:	jne    0x1400110c5
   14001101c:	cmp    BYTE PTR [r8+0x3],0x27
   140011021:	jne    0x1400110c5
   140011027:	cmp    BYTE PTR [r8+0x8],0x0
   14001102c:	jne    0x1400110c5
   140011032:	cmp    BYTE PTR [r8+0x9],0x0
   140011037:	jne    0x1400110c5
   14001103d:	movzx  eax,BYTE PTR [r8+0xc]
   140011042:	cmp    al,0x43
   140011044:	jne    0x14001106b
   140011046:	cmp    BYTE PTR [r8+0xd],0x6d
   14001104b:	jne    0x14001106b
   14001104d:	cmp    BYTE PTR [r8+0xe],0x6e
   140011052:	jne    0x14001106b
   140011054:	cmp    BYTE PTR [r8+0xf],0x44
   140011059:	jne    0x14001106b
   14001105b:	cmp    BYTE PTR [r8+0x10],0x1
   140011060:	jne    0x14001106b
   140011062:	lea    rax,[rip+0x34af7]        # 0x140045b60
   140011069:	jmp    0x140011092
   14001106b:	cmp    al,0x54
   14001106d:	jne    0x1400110c5
   14001106f:	cmp    BYTE PTR [r8+0xd],0x6f
   140011074:	jne    0x1400110c5
   140011076:	cmp    BYTE PTR [r8+0xe],0x43
   14001107b:	jne    0x1400110c5
   14001107d:	cmp    BYTE PTR [r8+0xf],0x50
   140011082:	jne    0x1400110c5
   140011084:	cmp    BYTE PTR [r8+0x10],0x1
   140011089:	jne    0x1400110c5
   14001108b:	lea    rax,[rip+0x34ade]        # 0x140045b70
   140011092:	mov    QWORD PTR [rcx],rax
   140011095:	test   r8,r8
   140011098:	jne    0x14001109e
   14001109a:	xor    eax,eax
   14001109c:	jmp    0x1400110ad
   14001109e:	cmp    BYTE PTR [r8+0x8],0x0
   1400110a3:	mov    ax,WORD PTR [r8]
   1400110a7:	je     0x1400110ad
   1400110a9:	rol    ax,0x8
   1400110ad:	movzx  eax,ax
   1400110b0:	add    rax,r8
   1400110b3:	mov    QWORD PTR [rcx+0x10],rax
   1400110b7:	cmp    DWORD PTR [rdx],0x0
   1400110ba:	jle    0x1400110d0
   1400110bc:	add    rsp,0x28
   1400110c0:	jmp    0x14000ff20
   1400110c5:	mov    DWORD PTR [rdx],0x3
   1400110cb:	call   0x14000ff20
   1400110d0:	add    rsp,0x28
   1400110d4:	ret    
   1400110d5:	int3   
   1400110d6:	int3   
   1400110d7:	int3   
   1400110d8:	int3   
   1400110d9:	int3   
   1400110da:	int3   
   1400110db:	int3   
   1400110dc:	int3   
   1400110dd:	int3   
   1400110de:	int3   
   1400110df:	int3   
   1400110e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400110e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400110ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400110ef:	mov    QWORD PTR [rsp+0x20],rdi
   1400110f4:	push   r12
   1400110f6:	sub    rsp,0x80
   1400110fd:	xor    r12d,r12d
   140011100:	mov    rdi,rdx
   140011103:	mov    rsi,rcx
   140011106:	mov    rbx,r12
   140011109:	call   0x14000fe30
   14001110e:	mov    QWORD PTR [rsp+0x30],r12
   140011113:	lea    r8d,[r12+0x1]
   140011118:	xor    r9d,r9d
   14001111b:	mov    edx,0x80000000
   140011120:	mov    rcx,rdi
   140011123:	mov    DWORD PTR [rsp+0x28],0x10000080
   14001112b:	mov    DWORD PTR [rsp+0x20],0x3
   140011133:	call   QWORD PTR [rip+0x2bfa7]        # 0x14003d0e0
   140011139:	mov    rbp,rax
   14001113c:	cmp    rax,0xffffffffffffffff
   140011140:	jne    0x140011161
   140011142:	call   QWORD PTR [rip+0x2c1f0]        # 0x14003d338
   140011148:	lea    rcx,[rip+0x34a99]        # 0x140045be8
   14001114f:	mov    rdx,rdi
   140011152:	mov    r8d,eax
   140011155:	call   0x14003bd30
   14001115a:	xor    al,al
   14001115c:	jmp    0x140011251
   140011161:	lea    rcx,[rsp+0x58]
   140011166:	mov    edx,0x1
   14001116b:	call   QWORD PTR [rip+0x2bec7]        # 0x14003d038
   140011171:	test   eax,eax
   140011173:	je     0x1400111bb
   140011175:	xor    r9d,r9d
   140011178:	lea    rcx,[rsp+0x58]
   14001117d:	xor    r8d,r8d
   140011180:	lea    edx,[r9+0x1]
   140011184:	call   QWORD PTR [rip+0x2bea6]        # 0x14003d030
   14001118a:	test   eax,eax
   14001118c:	je     0x1400111bb
   14001118e:	xor    eax,eax
   140011190:	lea    rbx,[rsp+0x40]
   140011195:	mov    QWORD PTR [rsp+0x40],rax
   14001119a:	mov    QWORD PTR [rsp+0x48],rax
   14001119f:	mov    QWORD PTR [rsp+0x50],rax
   1400111a4:	lea    rax,[rsp+0x58]
   1400111a9:	mov    DWORD PTR [rsp+0x40],0x18
   1400111b1:	mov    DWORD PTR [rsp+0x50],r12d
   1400111b6:	mov    QWORD PTR [rsp+0x48],rax
   1400111bb:	xor    r9d,r9d
   1400111be:	mov    rdx,rbx
   1400111c1:	mov    rcx,rbp
   1400111c4:	lea    r8d,[r9+0x2]
   1400111c8:	mov    QWORD PTR [rsp+0x28],r12
   1400111cd:	mov    DWORD PTR [rsp+0x20],r12d
   1400111d2:	call   QWORD PTR [rip+0x2beb8]        # 0x14003d090
   1400111d8:	mov    rcx,rbp
   1400111db:	mov    rbx,rax
   1400111de:	call   QWORD PTR [rip+0x2be94]        # 0x14003d078
   1400111e4:	test   rbx,rbx
   1400111e7:	jne    0x140011205
   1400111e9:	call   QWORD PTR [rip+0x2c149]        # 0x14003d338
   1400111ef:	lea    rcx,[rip+0x349ba]        # 0x140045bb0
   1400111f6:	mov    rdx,rdi
   1400111f9:	mov    r8d,eax
   1400111fc:	call   0x14003bd30
   140011201:	xor    al,al
   140011203:	jmp    0x140011251
   140011205:	xor    r9d,r9d
   140011208:	xor    r8d,r8d
   14001120b:	mov    rcx,rbx
   14001120e:	lea    edx,[r9+0x4]
   140011212:	mov    QWORD PTR [rsp+0x20],r12
   140011217:	call   QWORD PTR [rip+0x2be6b]        # 0x14003d088
   14001121d:	mov    QWORD PTR [rsi+0x8],rax
   140011221:	test   rax,rax
   140011224:	jne    0x14001124b
   140011226:	mov    rcx,rbx
   140011229:	call   QWORD PTR [rip+0x2be49]        # 0x14003d078
   14001122f:	call   QWORD PTR [rip+0x2c103]        # 0x14003d338
   140011235:	lea    rcx,[rip+0x34944]        # 0x140045b80
   14001123c:	mov    r8d,eax
   14001123f:	mov    rdx,rdi
   140011242:	call   0x14003bd30
   140011247:	xor    al,al
   140011249:	jmp    0x140011251
   14001124b:	mov    QWORD PTR [rsi+0x28],rbx
   14001124f:	mov    al,0x1
   140011251:	lea    r11,[rsp+0x80]
   140011259:	mov    rbx,QWORD PTR [r11+0x10]
   14001125d:	mov    rbp,QWORD PTR [r11+0x18]
   140011261:	mov    rsi,QWORD PTR [r11+0x20]
   140011265:	mov    rdi,QWORD PTR [r11+0x28]
   140011269:	mov    rsp,r11
   14001126c:	pop    r12
   14001126e:	ret    
   14001126f:	int3   
   140011270:	test   rcx,rcx
   140011273:	je     0x1400112a8
   140011275:	push   rbx
   140011276:	sub    rsp,0x20
   14001127a:	cmp    QWORD PTR [rcx+0x28],0x0
   14001127f:	mov    rbx,rcx
   140011282:	je     0x1400112a3
   140011284:	mov    rcx,QWORD PTR [rcx+0x8]
   140011288:	call   QWORD PTR [rip+0x2bdf2]        # 0x14003d080
   14001128e:	mov    rcx,QWORD PTR [rbx+0x28]
   140011292:	call   QWORD PTR [rip+0x2bde0]        # 0x14003d078
   140011298:	xor    r11d,r11d
   14001129b:	mov    QWORD PTR [rbx+0x8],r11
   14001129f:	mov    QWORD PTR [rbx+0x28],r11
   1400112a3:	add    rsp,0x20
   1400112a7:	pop    rbx
   1400112a8:	repz ret 
   1400112aa:	int3   
   1400112ab:	int3   
   1400112ac:	int3   
   1400112ad:	int3   
   1400112ae:	int3   
   1400112af:	int3   
   1400112b0:	test   r8d,r8d
   1400112b3:	jle    0x1400112d9
   1400112b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400112c0:	movzx  eax,BYTE PTR [rcx]
   1400112c3:	dec    r8d
   1400112c6:	add    rdx,0x2
   1400112ca:	movzx  eax,al
   1400112cd:	inc    rcx
   1400112d0:	mov    WORD PTR [rdx-0x2],ax
   1400112d4:	test   r8d,r8d
   1400112d7:	jg     0x1400112c0
   1400112d9:	repz ret 
   1400112db:	int3   
   1400112dc:	int3   
   1400112dd:	int3   
   1400112de:	int3   
   1400112df:	int3   
   1400112e0:	test   r9,r9
   1400112e3:	je     0x14001131e
   1400112e5:	cmp    DWORD PTR [r9],0x0
   1400112e9:	jg     0x14001131e
   1400112eb:	test   r8d,r8d
   1400112ee:	js     0x14001131e
   1400112f0:	cmp    r8d,edx
   1400112f3:	jge    0x14001130b
   1400112f5:	movsxd rax,r8d
   1400112f8:	xor    edx,edx
   1400112fa:	mov    WORD PTR [rcx+rax*2],dx
   1400112fe:	cmp    DWORD PTR [r9],0xffffff84
   140011302:	mov    eax,r8d
   140011305:	jne    0x140011321
   140011307:	mov    DWORD PTR [r9],edx
   14001130a:	ret    
   14001130b:	mov    eax,0xf
   140011310:	mov    ecx,0xffffff84
   140011315:	cmp    r8d,edx
   140011318:	cmove  eax,ecx
   14001131b:	mov    DWORD PTR [r9],eax
   14001131e:	mov    eax,r8d
   140011321:	repz ret 
   140011323:	int3   
   140011324:	int3   
   140011325:	int3   
   140011326:	int3   
   140011327:	int3   
   140011328:	int3   
   140011329:	int3   
   14001132a:	int3   
   14001132b:	int3   
   14001132c:	int3   
   14001132d:	int3   
   14001132e:	int3   
   14001132f:	int3   
   140011330:	cmp    WORD PTR [r9],0x14
   140011335:	jb     0x140011372
   140011337:	cmp    BYTE PTR [r9+0x4],0x0
   14001133c:	jne    0x140011372
   14001133e:	cmp    BYTE PTR [r9+0x5],0x0
   140011343:	jne    0x140011372
   140011345:	cmp    BYTE PTR [r9+0x6],0x2
   14001134a:	jne    0x140011372
   14001134c:	cmp    BYTE PTR [r9+0x8],0x63
   140011351:	jne    0x140011372
   140011353:	cmp    BYTE PTR [r9+0x9],0x6e
   140011358:	jne    0x140011372
   14001135a:	cmp    BYTE PTR [r9+0xa],0x76
   14001135f:	jne    0x140011372
   140011361:	cmp    BYTE PTR [r9+0xb],0x74
   140011366:	jne    0x140011372
   140011368:	cmp    BYTE PTR [r9+0xc],0x6
   14001136d:	jne    0x140011372
   14001136f:	mov    al,0x1
   140011371:	ret    
   140011372:	xor    al,al
   140011374:	ret    
   140011375:	int3   
   140011376:	int3   
   140011377:	int3   
   140011378:	int3   
   140011379:	int3   
   14001137a:	int3   
   14001137b:	int3   
   14001137c:	int3   
   14001137d:	int3   
   14001137e:	int3   
   14001137f:	int3   
   140011380:	mov    QWORD PTR [rsp+0x20],rsi
   140011385:	push   rdi
   140011386:	push   r12
   140011388:	push   r13
   14001138a:	sub    rsp,0x20
   14001138e:	mov    r13,rcx
   140011391:	mov    rcx,rdx
   140011394:	mov    rdi,r8
   140011397:	mov    r12,rdx
   14001139a:	call   0x14000ff70
   14001139f:	cmp    DWORD PTR [rdi],0x0
   1400113a2:	mov    rsi,rax
   1400113a5:	movsx  rax,BYTE PTR [rax+0x45]
   1400113aa:	jle    0x1400113bd
   1400113ac:	xor    eax,eax
   1400113ae:	mov    rsi,QWORD PTR [rsp+0x58]
   1400113b3:	add    rsp,0x20
   1400113b7:	pop    r13
   1400113b9:	pop    r12
   1400113bb:	pop    rdi
   1400113bc:	ret    
   1400113bd:	mov    QWORD PTR [rsp+0x48],rbp
   1400113c2:	mov    QWORD PTR [rsp+0x50],r14
   1400113c7:	cmp    ax,0x21
   1400113cb:	jae    0x140011492
   1400113d1:	lea    r14,[rip+0x37ca8]        # 0x140049080
   1400113d8:	mov    rbp,rax
   1400113db:	mov    rax,QWORD PTR [r14+rax*8]
   1400113df:	test   rax,rax
   1400113e2:	je     0x140011492
   1400113e8:	cmp    DWORD PTR [rax+0x4],0x1
   1400113ec:	jne    0x140011492
   1400113f2:	cmp    DWORD PTR [rsi],0x64
   1400113f5:	jne    0x140011492
   1400113fb:	mov    ecx,0x130
   140011400:	mov    QWORD PTR [rsp+0x40],rbx
   140011405:	call   0x140010940
   14001140a:	mov    rbx,rax
   14001140d:	test   rax,rax
   140011410:	jne    0x140011436
   140011412:	mov    DWORD PTR [rdi],0x7
   140011418:	mov    rbx,QWORD PTR [rsp+0x40]
   14001141d:	mov    rbp,QWORD PTR [rsp+0x48]
   140011422:	mov    r14,QWORD PTR [rsp+0x50]
   140011427:	mov    rsi,QWORD PTR [rsp+0x58]
   14001142c:	add    rsp,0x20
   140011430:	pop    r13
   140011432:	pop    r12
   140011434:	pop    rdi
   140011435:	ret    
   140011436:	mov    rdx,QWORD PTR [r14+rbp*8]
   14001143a:	mov    rcx,rax
   14001143d:	mov    r8d,0x130
   140011443:	call   0x14002b9a0
   140011448:	mov    rax,QWORD PTR [rbx+0x28]
   14001144c:	mov    QWORD PTR [rbx+0x18],rsi
   140011450:	mov    BYTE PTR [rbx+0x20],0x0
   140011454:	mov    QWORD PTR [rbx+0x8],r12
   140011458:	mov    r10,QWORD PTR [rax+0x8]
   14001145c:	test   r10,r10
   14001145f:	je     0x14001148d
   140011461:	mov    r8d,DWORD PTR [rsi]
   140011464:	mov    r9,rdi
   140011467:	mov    rdx,r13
   14001146a:	add    r8,rsi
   14001146d:	mov    rcx,rbx
   140011470:	call   r10
   140011473:	cmp    DWORD PTR [rdi],0x0
   140011476:	jle    0x14001148d
   140011478:	mov    rcx,QWORD PTR [rbx+0x10]
   14001147c:	call   0x140010a40
   140011481:	mov    rcx,rbx
   140011484:	call   0x140010a40
   140011489:	xor    eax,eax
   14001148b:	jmp    0x140011418
   14001148d:	mov    rax,rbx
   140011490:	jmp    0x140011418
   140011492:	mov    DWORD PTR [rdi],0xd
   140011498:	xor    eax,eax
   14001149a:	jmp    0x14001141d
   14001149c:	int3   
   14001149d:	int3   
   14001149e:	int3   
   14001149f:	int3   
   1400114a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400114a5:	push   rsi
   1400114a6:	sub    rsp,0x30
   1400114aa:	cmp    DWORD PTR [rdx],0x0
   1400114ad:	mov    rbx,rdx
   1400114b0:	mov    rsi,rcx
   1400114b3:	jle    0x1400114c2
   1400114b5:	xor    eax,eax
   1400114b7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400114bc:	add    rsp,0x30
   1400114c0:	pop    rsi
   1400114c1:	ret    
   1400114c2:	mov    r8,QWORD PTR [rcx+0x18]
   1400114c6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400114ca:	mov    QWORD PTR [rsp+0x28],rdx
   1400114cf:	lea    r9,[rip+0xfffffffffffffe5a]        # 0x140011330
   1400114d6:	lea    rdx,[rip+0x37cab]        # 0x140049188
   1400114dd:	mov    QWORD PTR [rsp+0x40],rdi
   1400114e2:	mov    QWORD PTR [rsp+0x20],0x0
   1400114eb:	call   0x14000d910
   1400114f0:	cmp    DWORD PTR [rbx],0x0
   1400114f3:	mov    rdi,rax
   1400114f6:	jg     0x140011513
   1400114f8:	mov    r8,rbx
   1400114fb:	mov    rdx,rax
   1400114fe:	mov    rcx,rsi
   140011501:	call   0x140011380
   140011506:	cmp    DWORD PTR [rbx],0x0
   140011509:	jle    0x140011515
   14001150b:	mov    rcx,rdi
   14001150e:	call   0x14000ff20
   140011513:	xor    eax,eax
   140011515:	mov    rdi,QWORD PTR [rsp+0x40]
   14001151a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001151f:	add    rsp,0x30
   140011523:	pop    rsi
   140011524:	ret    
   140011525:	int3   
   140011526:	int3   
   140011527:	int3   
   140011528:	int3   
   140011529:	int3   
   14001152a:	int3   
   14001152b:	int3   
   14001152c:	int3   
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	rex push rbx
   140011532:	sub    rsp,0x70
   140011536:	mov    rax,QWORD PTR [rip+0x55373]        # 0x1400668b0
   14001153d:	xor    rax,rsp
   140011540:	mov    QWORD PTR [rsp+0x60],rax
   140011545:	mov    rdx,rcx
   140011548:	lea    rcx,[rsp+0x20]
   14001154d:	call   0x1400126c0
   140011552:	xor    r9d,r9d
   140011555:	mov    edx,0x10
   14001155a:	lea    r10d,[r9+0x21]
   14001155e:	lea    rbx,[rip+0xfffffffffffeea9b]        # 0x140000000
   140011565:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011570:	mov    eax,edx
   140011572:	lea    rcx,[rsp+0x20]
   140011577:	mov    r11d,edx
   14001157a:	shl    rax,0x4
   14001157e:	mov    r8,QWORD PTR [rax+rbx*1+0x49190]
   140011586:	sub    r8,rcx
   140011589:	nop    DWORD PTR [rax+0x0]
   140011590:	movzx  eax,BYTE PTR [rcx]
   140011593:	cmp    al,BYTE PTR [rcx+r8*1]
   140011597:	jne    0x1400115a4
   140011599:	inc    rcx
   14001159c:	test   al,al
   14001159e:	jne    0x140011590
   1400115a0:	xor    eax,eax
   1400115a2:	jmp    0x1400115a9
   1400115a4:	sbb    eax,eax
   1400115a6:	sbb    eax,0xffffffff
   1400115a9:	test   eax,eax
   1400115ab:	jns    0x1400115b2
   1400115ad:	mov    r10d,edx
   1400115b0:	jmp    0x1400115b7
   1400115b2:	jle    0x1400115d7
   1400115b4:	mov    r9d,edx
   1400115b7:	lea    edx,[r10+r9*1]
   1400115bb:	shr    edx,1
   1400115bd:	cmp    r11d,edx
   1400115c0:	jne    0x140011570
   1400115c2:	xor    eax,eax
   1400115c4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400115c9:	xor    rcx,rsp
   1400115cc:	call   0x14002b250
   1400115d1:	add    rsp,0x70
   1400115d5:	pop    rbx
   1400115d6:	ret    
   1400115d7:	mov    eax,edx
   1400115d9:	add    rax,rax
   1400115dc:	movsxd rax,DWORD PTR [rbx+rax*8+0x49198]
   1400115e4:	mov    rax,QWORD PTR [rbx+rax*8+0x49080]
   1400115ec:	mov    rcx,QWORD PTR [rsp+0x60]
   1400115f1:	xor    rcx,rsp
   1400115f4:	call   0x14002b250
   1400115f9:	add    rsp,0x70
   1400115fd:	pop    rbx
   1400115fe:	ret    
   1400115ff:	int3   
   140011600:	rex push rbx
   140011602:	sub    rsp,0x20
   140011606:	cmp    DWORD PTR [rcx+0x4],0x0
   14001160a:	mov    rbx,rcx
   14001160d:	jbe    0x140011617
   14001160f:	xor    al,al
   140011611:	add    rsp,0x20
   140011615:	pop    rbx
   140011616:	ret    
   140011617:	mov    rax,QWORD PTR [rcx+0x28]
   14001161b:	mov    rdx,QWORD PTR [rax+0x10]
   14001161f:	test   rdx,rdx
   140011622:	je     0x140011626
   140011624:	call   rdx
   140011626:	mov    rcx,QWORD PTR [rbx+0x8]
   14001162a:	test   rcx,rcx
   14001162d:	je     0x140011634
   14001162f:	call   0x14000ff20
   140011634:	mov    rcx,QWORD PTR [rbx+0x10]
   140011638:	test   rcx,rcx
   14001163b:	je     0x140011642
   14001163d:	call   0x140010a40
   140011642:	mov    rcx,rbx
   140011645:	call   0x140010a40
   14001164a:	mov    al,0x1
   14001164c:	add    rsp,0x20
   140011650:	pop    rbx
   140011651:	ret    
   140011652:	int3   
   140011653:	int3   
   140011654:	int3   
   140011655:	int3   
   140011656:	int3   
   140011657:	int3   
   140011658:	int3   
   140011659:	int3   
   14001165a:	int3   
   14001165b:	int3   
   14001165c:	int3   
   14001165d:	int3   
   14001165e:	int3   
   14001165f:	int3   
   140011660:	sub    rsp,0x28
   140011664:	test   rcx,rcx
   140011667:	je     0x140011686
   140011669:	mov    eax,DWORD PTR [rcx+0x4]
   14001166c:	test   eax,eax
   14001166e:	je     0x140011675
   140011670:	dec    eax
   140011672:	mov    DWORD PTR [rcx+0x4],eax
   140011675:	cmp    DWORD PTR [rcx+0x4],0x0
   140011679:	ja     0x140011686
   14001167b:	cmp    BYTE PTR [rcx+0x20],0x0
   14001167f:	jne    0x140011686
   140011681:	call   0x140011600
   140011686:	add    rsp,0x28
   14001168a:	ret    
   14001168b:	int3   
   14001168c:	int3   
   14001168d:	int3   
   14001168e:	int3   
   14001168f:	int3   
   140011690:	test   rcx,rcx
   140011693:	je     0x1400116e0
   140011695:	push   rbx
   140011696:	sub    rsp,0x20
   14001169a:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   14001169e:	mov    rbx,rcx
   1400116a1:	je     0x1400116db
   1400116a3:	lea    rcx,[rip+0x56fbe]        # 0x140068668
   1400116aa:	call   0x140010c20
   1400116af:	mov    eax,DWORD PTR [rbx+0x4]
   1400116b2:	test   eax,eax
   1400116b4:	je     0x1400116bb
   1400116b6:	dec    eax
   1400116b8:	mov    DWORD PTR [rbx+0x4],eax
   1400116bb:	cmp    DWORD PTR [rbx+0x4],0x0
   1400116bf:	ja     0x1400116cf
   1400116c1:	cmp    BYTE PTR [rbx+0x20],0x0
   1400116c5:	jne    0x1400116cf
   1400116c7:	mov    rcx,rbx
   1400116ca:	call   0x140011600
   1400116cf:	lea    rcx,[rip+0x56f92]        # 0x140068668
   1400116d6:	call   0x140010a80
   1400116db:	add    rsp,0x20
   1400116df:	pop    rbx
   1400116e0:	repz ret 
   1400116e2:	int3   
   1400116e3:	int3   
   1400116e4:	int3   
   1400116e5:	int3   
   1400116e6:	int3   
   1400116e7:	int3   
   1400116e8:	int3   
   1400116e9:	int3   
   1400116ea:	int3   
   1400116eb:	int3   
   1400116ec:	int3   
   1400116ed:	int3   
   1400116ee:	int3   
   1400116ef:	int3   
   1400116f0:	test   rcx,rcx
   1400116f3:	je     0x140011723
   1400116f5:	push   rbx
   1400116f6:	sub    rsp,0x20
   1400116fa:	cmp    DWORD PTR [rcx+0x4],0xffffffff
   1400116fe:	mov    rbx,rcx
   140011701:	je     0x14001171e
   140011703:	lea    rcx,[rip+0x56f5e]        # 0x140068668
   14001170a:	call   0x140010c20
   14001170f:	inc    DWORD PTR [rbx+0x4]
   140011712:	lea    rcx,[rip+0x56f4f]        # 0x140068668
   140011719:	call   0x140010a80
   14001171e:	add    rsp,0x20
   140011722:	pop    rbx
   140011723:	repz ret 
   140011725:	int3   
   140011726:	int3   
   140011727:	int3   
   140011728:	int3   
   140011729:	int3   
   14001172a:	int3   
   14001172b:	int3   
   14001172c:	int3   
   14001172d:	int3   
   14001172e:	int3   
   14001172f:	int3   
   140011730:	mov    QWORD PTR [rsp+0x8],rbx
   140011735:	mov    QWORD PTR [rsp+0x10],rbp
   14001173a:	mov    QWORD PTR [rsp+0x18],rsi
   14001173f:	mov    QWORD PTR [rsp+0x20],rdi
   140011744:	push   r12
   140011746:	sub    rsp,0x20
   14001174a:	mov    rbx,rcx
   14001174d:	lea    rbp,[rdx+0x3c]
   140011751:	xor    ecx,ecx
   140011753:	mov    QWORD PTR [r8+0x20],rbp
   140011757:	mov    QWORD PTR [r8+0x18],rbx
   14001175b:	mov    eax,DWORD PTR [rdx+0xdc]
   140011761:	mov    DWORD PTR [r8+0xc],eax
   140011765:	movzx  eax,BYTE PTR [rbx]
   140011768:	mov    r12,r9
   14001176b:	mov    rsi,r8
   14001176e:	mov    rdi,rdx
   140011771:	mov    r10,rdx
   140011774:	test   al,al
   140011776:	je     0x140011792
   140011778:	cmp    al,0x2c
   14001177a:	je     0x140011792
   14001177c:	inc    ecx
   14001177e:	cmp    ecx,0x3c
   140011781:	jge    0x1400117fe
   140011783:	inc    rbx
   140011786:	mov    BYTE PTR [r10],al
   140011789:	inc    r10
   14001178c:	mov    al,BYTE PTR [rbx]
   14001178e:	test   al,al
   140011790:	jne    0x140011778
   140011792:	mov    BYTE PTR [r10],0x0
   140011796:	mov    QWORD PTR [r8+0x18],rdx
   14001179a:	movzx  eax,BYTE PTR [rbx]
   14001179d:	test   al,al
   14001179f:	je     0x1400118cc
   1400117a5:	cmp    al,0x2c
   1400117a7:	jne    0x1400117ac
   1400117a9:	inc    rbx
   1400117ac:	lea    rdx,[rip+0x37c0d]        # 0x1400493c0
   1400117b3:	mov    r8d,0x7
   1400117b9:	mov    rcx,rbx
   1400117bc:	call   0x14002e1f0
   1400117c1:	test   eax,eax
   1400117c3:	jne    0x14001180d
   1400117c5:	movzx  eax,BYTE PTR [rbx+0x7]
   1400117c9:	add    rbx,0x7
   1400117cd:	xor    ecx,ecx
   1400117cf:	mov    rdx,rbp
   1400117d2:	test   al,al
   1400117d4:	je     0x1400117f6
   1400117d6:	cmp    al,0x2c
   1400117d8:	je     0x1400117f6
   1400117da:	inc    ecx
   1400117dc:	inc    rbx
   1400117df:	cmp    ecx,0x9d
   1400117e5:	jge    0x1400118ae
   1400117eb:	mov    BYTE PTR [rdx],al
   1400117ed:	mov    al,BYTE PTR [rbx]
   1400117ef:	inc    rdx
   1400117f2:	test   al,al
   1400117f4:	jne    0x1400117d6
   1400117f6:	mov    BYTE PTR [rdx],0x0
   1400117f9:	jmp    0x1400118a2
   1400117fe:	mov    DWORD PTR [r9],0x1
   140011805:	mov    BYTE PTR [rdx],0x0
   140011808:	jmp    0x1400118cc
   14001180d:	lea    rdx,[rip+0x37b9c]        # 0x1400493b0
   140011814:	mov    r8d,0x8
   14001181a:	mov    rcx,rbx
   14001181d:	call   0x14002e1f0
   140011822:	test   eax,eax
   140011824:	jne    0x14001185e
   140011826:	movzx  ecx,BYTE PTR [rbx+0x8]
   14001182a:	add    rbx,0x8
   14001182e:	test   cl,cl
   140011830:	je     0x1400118bc
   140011836:	lea    eax,[rcx-0x30]
   140011839:	cmp    al,0xa
   14001183b:	jae    0x1400118a2
   14001183d:	and    DWORD PTR [rdi+0xdc],0xfffffff0
   140011844:	movsx  eax,cl
   140011847:	sub    eax,0x30
   14001184a:	or     DWORD PTR [rdi+0xdc],eax
   140011850:	mov    eax,DWORD PTR [rdi+0xdc]
   140011856:	inc    rbx
   140011859:	mov    DWORD PTR [rsi+0xc],eax
   14001185c:	jmp    0x1400118a2
   14001185e:	lea    rdx,[rip+0x37b3b]        # 0x1400493a0
   140011865:	mov    r8d,0x8
   14001186b:	mov    rcx,rbx
   14001186e:	call   0x14002e1f0
   140011873:	test   eax,eax
   140011875:	jne    0x140011890
   140011877:	add    rbx,0x8
   14001187b:	or     DWORD PTR [rdi+0xdc],0x10
   140011882:	mov    eax,DWORD PTR [rdi+0xdc]
   140011888:	mov    DWORD PTR [rsi+0xc],eax
   14001188b:	jmp    0x1400118a2
   14001188d:	nop    DWORD PTR [rax]
   140011890:	movzx  eax,BYTE PTR [rbx]
   140011893:	inc    rbx
   140011896:	test   al,al
   140011898:	je     0x1400118cc
   14001189a:	cmp    al,0x2c
   14001189c:	jne    0x140011890
   14001189e:	test   al,al
   1400118a0:	je     0x1400118cc
   1400118a2:	mov    al,BYTE PTR [rbx]
   1400118a4:	test   al,al
   1400118a6:	jne    0x1400117a5
   1400118ac:	jmp    0x1400118cc
   1400118ae:	mov    DWORD PTR [r12],0x1
   1400118b6:	mov    BYTE PTR [rbp+0x0],0x0
   1400118ba:	jmp    0x1400118cc
   1400118bc:	and    DWORD PTR [rdi+0xdc],0xfffffff0
   1400118c3:	mov    eax,DWORD PTR [rdi+0xdc]
   1400118c9:	mov    DWORD PTR [rsi+0xc],eax
   1400118cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400118d1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400118d6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400118db:	mov    rdi,QWORD PTR [rsp+0x48]
   1400118e0:	add    rsp,0x20
   1400118e4:	pop    r12
   1400118e6:	ret    
   1400118e7:	int3   
   1400118e8:	int3   
   1400118e9:	int3   
   1400118ea:	int3   
   1400118eb:	int3   
   1400118ec:	int3   
   1400118ed:	int3   
   1400118ee:	int3   
   1400118ef:	int3   
   1400118f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400118f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400118fa:	mov    QWORD PTR [rsp+0x20],rsi
   1400118ff:	push   rdi
   140011900:	sub    rsp,0x20
   140011904:	cmp    DWORD PTR [r9],0x0
   140011908:	mov    rsi,r9
   14001190b:	mov    rbp,r8
   14001190e:	mov    rbx,rdx
   140011911:	mov    rdi,rcx
   140011914:	jle    0x140011961
   140011916:	test   rdx,rdx
   140011919:	je     0x140011959
   14001191b:	cmp    DWORD PTR [rdx+0x4],0xffffffff
   14001191f:	je     0x140011959
   140011921:	lea    rcx,[rip+0x56d40]        # 0x140068668
   140011928:	call   0x140010c20
   14001192d:	mov    eax,DWORD PTR [rbx+0x4]
   140011930:	test   eax,eax
   140011932:	je     0x140011939
   140011934:	dec    eax
   140011936:	mov    DWORD PTR [rbx+0x4],eax
   140011939:	cmp    DWORD PTR [rbx+0x4],0x0
   14001193d:	ja     0x14001194d
   14001193f:	cmp    BYTE PTR [rbx+0x20],0x0
   140011943:	jne    0x14001194d
   140011945:	mov    rcx,rbx
   140011948:	call   0x140011600
   14001194d:	lea    rcx,[rip+0x56d14]        # 0x140068668
   140011954:	call   0x140010a80
   140011959:	mov    rax,rdi
   14001195c:	jmp    0x140011a62
   140011961:	mov    QWORD PTR [rsp+0x30],r12
   140011966:	test   rcx,rcx
   140011969:	jne    0x140011997
   14001196b:	mov    ecx,0x120
   140011970:	call   0x140010940
   140011975:	mov    rdi,rax
   140011978:	test   rax,rax
   14001197b:	jne    0x140011992
   14001197d:	mov    rcx,rbx
   140011980:	mov    DWORD PTR [rsi],0x7
   140011986:	call   0x140011690
   14001198b:	xor    eax,eax
   14001198d:	jmp    0x140011a5d
   140011992:	xor    r12b,r12b
   140011995:	jmp    0x14001199a
   140011997:	mov    r12b,0x1
   14001199a:	xor    edx,edx
   14001199c:	mov    r8d,0x120
   1400119a2:	mov    rcx,rdi
   1400119a5:	call   0x14002b280
   1400119aa:	mov    BYTE PTR [rdi+0x3d],r12b
   1400119ae:	mov    QWORD PTR [rdi+0x30],rbx
   1400119b2:	mov    eax,DWORD PTR [rbp+0xc]
   1400119b5:	mov    DWORD PTR [rdi+0x38],eax
   1400119b8:	cmp    BYTE PTR [rbp+0x8],0x0
   1400119bc:	jne    0x140011a2a
   1400119be:	mov    DWORD PTR [rdi+0xd0],0xffffffff
   1400119c8:	lea    rax,[rip+0xffffffffffffdf41]        # 0x14000f910
   1400119cf:	mov    QWORD PTR [rdi+0x8],rax
   1400119d3:	lea    rax,[rip+0xffffffffffffdec6]        # 0x14000f8a0
   1400119da:	mov    QWORD PTR [rdi],rax
   1400119dd:	mov    eax,DWORD PTR [rbx+0x30]
   1400119e0:	mov    DWORD PTR [rdi+0x48],eax
   1400119e3:	mov    rax,QWORD PTR [rbx+0x18]
   1400119e7:	movzx  ecx,BYTE PTR [rax+0x47]
   1400119eb:	mov    BYTE PTR [rdi+0x58],cl
   1400119ee:	mov    rax,QWORD PTR [rbx+0x18]
   1400119f2:	movzx  ecx,BYTE PTR [rax+0x50]
   1400119f6:	mov    BYTE PTR [rdi+0x5e],cl
   1400119f9:	mov    rax,QWORD PTR [rbx+0x18]
   1400119fd:	lea    rcx,[rdi+0x88]
   140011a04:	movsx  rdx,BYTE PTR [rax+0x4c]
   140011a09:	mov    QWORD PTR [rdi+0x28],rcx
   140011a0d:	mov    BYTE PTR [rdi+0x59],dl
   140011a10:	mov    r8,rdx
   140011a13:	mov    rdx,QWORD PTR [rbx+0x18]
   140011a17:	add    rdx,0x48
   140011a1b:	call   0x14002b9a0
   140011a20:	mov    DWORD PTR [rdi+0x11c],0x1
   140011a2a:	mov    rax,QWORD PTR [rbx+0x28]
   140011a2e:	mov    r9,QWORD PTR [rax+0x18]
   140011a32:	test   r9,r9
   140011a35:	je     0x140011a5a
   140011a37:	mov    r8,rsi
   140011a3a:	mov    rdx,rbp
   140011a3d:	mov    rcx,rdi
   140011a40:	call   r9
   140011a43:	cmp    DWORD PTR [rsi],0x0
   140011a46:	jle    0x140011a5a
   140011a48:	cmp    BYTE PTR [rbp+0x8],0x0
   140011a4c:	jne    0x140011a5a
   140011a4e:	mov    rcx,rdi
   140011a51:	call   0x14000df20
   140011a56:	xor    eax,eax
   140011a58:	jmp    0x140011a5d
   140011a5a:	mov    rax,rdi
   140011a5d:	mov    r12,QWORD PTR [rsp+0x30]
   140011a62:	mov    rbx,QWORD PTR [rsp+0x38]
   140011a67:	mov    rbp,QWORD PTR [rsp+0x40]
   140011a6c:	mov    rsi,QWORD PTR [rsp+0x48]
   140011a71:	add    rsp,0x20
   140011a75:	pop    rdi
   140011a76:	ret    
   140011a77:	int3   
   140011a78:	int3   
   140011a79:	int3   
   140011a7a:	int3   
   140011a7b:	int3   
   140011a7c:	int3   
   140011a7d:	int3   
   140011a7e:	int3   
   140011a7f:	int3   
   140011a80:	rex push rbp
   140011a82:	sub    rsp,0x30
   140011a86:	lea    rcx,[rsp+0x48]
   140011a8b:	xor    ebp,ebp
   140011a8d:	mov    DWORD PTR [rsp+0x48],0x1
   140011a95:	call   0x140012390
   140011a9a:	mov    rcx,rax
   140011a9d:	call   0x14000df20
   140011aa2:	cmp    QWORD PTR [rip+0x56bb7],rbp        # 0x140068660
   140011aa9:	jne    0x140011ab3
   140011aab:	xor    eax,eax
   140011aad:	add    rsp,0x30
   140011ab1:	pop    rbp
   140011ab2:	ret    
   140011ab3:	mov    QWORD PTR [rsp+0x50],rbx
   140011ab8:	lea    rcx,[rip+0x56ba9]        # 0x140068668
   140011abf:	mov    QWORD PTR [rsp+0x28],rsi
   140011ac4:	mov    QWORD PTR [rsp+0x20],rdi
   140011ac9:	call   0x140010c20
   140011ace:	xor    esi,esi
   140011ad0:	mov    rcx,QWORD PTR [rip+0x56b89]        # 0x140068660
   140011ad7:	lea    rdx,[rsp+0x40]
   140011adc:	xor    edi,edi
   140011ade:	mov    DWORD PTR [rsp+0x40],0xffffffff
   140011ae6:	call   0x140010730
   140011aeb:	test   rax,rax
   140011aee:	je     0x140011b65
   140011af0:	mov    rbx,QWORD PTR [rax+0x8]
   140011af4:	cmp    DWORD PTR [rbx+0x4],0x0
   140011af8:	jne    0x140011b4d
   140011afa:	mov    rcx,QWORD PTR [rip+0x56b5f]        # 0x140068660
   140011b01:	mov    rdx,rax
   140011b04:	inc    ebp
   140011b06:	call   0x140010790
   140011b0b:	cmp    DWORD PTR [rbx+0x4],0x0
   140011b0f:	mov    BYTE PTR [rbx+0x20],0x0
   140011b13:	ja     0x140011b4f
   140011b15:	mov    rax,QWORD PTR [rbx+0x28]
   140011b19:	mov    rdx,QWORD PTR [rax+0x10]
   140011b1d:	test   rdx,rdx
   140011b20:	je     0x140011b27
   140011b22:	mov    rcx,rbx
   140011b25:	call   rdx
   140011b27:	mov    rcx,QWORD PTR [rbx+0x8]
   140011b2b:	test   rcx,rcx
   140011b2e:	je     0x140011b35
   140011b30:	call   0x14000ff20
   140011b35:	mov    rcx,QWORD PTR [rbx+0x10]
   140011b39:	test   rcx,rcx
   140011b3c:	je     0x140011b43
   140011b3e:	call   0x140010a40
   140011b43:	mov    rcx,rbx
   140011b46:	call   0x140010a40
   140011b4b:	jmp    0x140011b4f
   140011b4d:	inc    edi
   140011b4f:	mov    rcx,QWORD PTR [rip+0x56b0a]        # 0x140068660
   140011b56:	lea    rdx,[rsp+0x40]
   140011b5b:	call   0x140010730
   140011b60:	test   rax,rax
   140011b63:	jne    0x140011af0
   140011b65:	inc    esi
   140011b67:	cmp    esi,0x1
   140011b6a:	jne    0x140011b74
   140011b6c:	test   edi,edi
   140011b6e:	jg     0x140011ad0
   140011b74:	lea    rcx,[rip+0x56aed]        # 0x140068668
   140011b7b:	call   0x140010a80
   140011b80:	mov    rdi,QWORD PTR [rsp+0x20]
   140011b85:	mov    rsi,QWORD PTR [rsp+0x28]
   140011b8a:	mov    rbx,QWORD PTR [rsp+0x50]
   140011b8f:	mov    eax,ebp
   140011b91:	add    rsp,0x30
   140011b95:	pop    rbp
   140011b96:	ret    
   140011b97:	int3   
   140011b98:	int3   
   140011b99:	int3   
   140011b9a:	int3   
   140011b9b:	int3   
   140011b9c:	int3   
   140011b9d:	int3   
   140011b9e:	int3   
   140011b9f:	int3   
   140011ba0:	rex push rbx
   140011ba2:	sub    rsp,0x20
   140011ba6:	call   0x140011a80
   140011bab:	mov    rcx,QWORD PTR [rip+0x56aae]        # 0x140068660
   140011bb2:	xor    ebx,ebx
   140011bb4:	test   rcx,rcx
   140011bb7:	je     0x140011bd5
   140011bb9:	call   0x1400106c0
   140011bbe:	test   eax,eax
   140011bc0:	jne    0x140011bd5
   140011bc2:	mov    rcx,QWORD PTR [rip+0x56a97]        # 0x140068660
   140011bc9:	call   0x140010850
   140011bce:	mov    QWORD PTR [rip+0x56a8b],rbx        # 0x140068660
   140011bd5:	cmp    QWORD PTR [rip+0x56a94],rbx        # 0x140068670
   140011bdc:	je     0x140011c10
   140011bde:	lea    rcx,[rip+0x56a83]        # 0x140068668
   140011be5:	call   0x140010c20
   140011bea:	mov    rcx,QWORD PTR [rip+0x56a7f]        # 0x140068670
   140011bf1:	mov    WORD PTR [rip+0x56a80],bx        # 0x140068678
   140011bf8:	call   0x140010a40
   140011bfd:	lea    rcx,[rip+0x56a64]        # 0x140068668
   140011c04:	mov    QWORD PTR [rip+0x56a65],rbx        # 0x140068670
   140011c0b:	call   0x140010a80
   140011c10:	lea    rcx,[rip+0x56a51]        # 0x140068668
   140011c17:	mov    QWORD PTR [rip+0x56a62],rbx        # 0x140068680
   140011c1e:	mov    BYTE PTR [rip+0x569fc],bl        # 0x140068620
   140011c24:	mov    BYTE PTR [rip+0x56a33],bl        # 0x14006865d
   140011c2a:	mov    QWORD PTR [rip+0x56a57],rbx        # 0x140068688
   140011c31:	call   0x140010c90
   140011c36:	cmp    QWORD PTR [rip+0x56a23],rbx        # 0x140068660
   140011c3d:	sete   al
   140011c40:	add    rsp,0x20
   140011c44:	pop    rbx
   140011c45:	ret    
   140011c46:	int3   
   140011c47:	int3   
   140011c48:	int3   
   140011c49:	int3   
   140011c4a:	int3   
   140011c4b:	int3   
   140011c4c:	int3   
   140011c4d:	int3   
   140011c4e:	int3   
   140011c4f:	int3   
   140011c50:	rex push rbx
   140011c52:	sub    rsp,0x30
   140011c56:	mov    rbx,rcx
   140011c59:	mov    rcx,QWORD PTR [rip+0x56a00]        # 0x140068660
   140011c60:	mov    DWORD PTR [rsp+0x48],0x0
   140011c68:	test   rcx,rcx
   140011c6b:	jne    0x140011cc4
   140011c6d:	lea    rcx,[rsp+0x48]
   140011c72:	call   0x140012c50
   140011c77:	lea    rdx,[rip+0xffffffffffffeb92]        # 0x140010810
   140011c7e:	lea    rcx,[rip+0xffffffffffffeb1b]        # 0x1400107a0
   140011c85:	movzx  r9d,ax
   140011c89:	lea    rax,[rsp+0x48]
   140011c8e:	xor    r8d,r8d
   140011c91:	add    r9d,r9d
   140011c94:	mov    QWORD PTR [rsp+0x20],rax
   140011c99:	call   0x140010670
   140011c9e:	lea    rdx,[rip+0xfffffffffffffefb]        # 0x140011ba0
   140011ca5:	mov    ecx,0x10
   140011caa:	mov    QWORD PTR [rip+0x569af],rax        # 0x140068660
   140011cb1:	call   0x140010de0
   140011cb6:	cmp    DWORD PTR [rsp+0x48],0x0
   140011cbb:	jg     0x140011cdd
   140011cbd:	mov    rcx,QWORD PTR [rip+0x5699c]        # 0x140068660
   140011cc4:	mov    rdx,QWORD PTR [rbx+0x18]
   140011cc8:	lea    r9,[rsp+0x48]
   140011ccd:	mov    r8,rbx
   140011cd0:	add    rdx,0x4
   140011cd4:	mov    BYTE PTR [rbx+0x20],0x1
   140011cd8:	call   0x140010710
   140011cdd:	add    rsp,0x30
   140011ce1:	pop    rbx
   140011ce2:	ret    
   140011ce3:	int3   
   140011ce4:	int3   
   140011ce5:	int3   
   140011ce6:	int3   
   140011ce7:	int3   
   140011ce8:	int3   
   140011ce9:	int3   
   140011cea:	int3   
   140011ceb:	int3   
   140011cec:	int3   
   140011ced:	int3   
   140011cee:	int3   
   140011cef:	int3   
   140011cf0:	mov    QWORD PTR [rsp+0x10],rsi
   140011cf5:	push   rdi
   140011cf6:	sub    rsp,0x20
   140011cfa:	mov    rsi,rdx
   140011cfd:	mov    rdi,rcx
   140011d00:	test   rdx,rdx
   140011d03:	je     0x140011daf
   140011d09:	cmp    DWORD PTR [rdx],0x0
   140011d0c:	jg     0x140011daf
   140011d12:	mov    rax,QWORD PTR [rcx+0x10]
   140011d16:	test   rax,rax
   140011d19:	je     0x140011d2f
   140011d1b:	cmp    BYTE PTR [rax],0x0
   140011d1e:	je     0x140011d2f
   140011d20:	mov    rsi,QWORD PTR [rsp+0x38]
   140011d25:	add    rsp,0x20
   140011d29:	pop    rdi
   140011d2a:	jmp    0x1400114a0
   140011d2f:	mov    rcx,QWORD PTR [rip+0x5692a]        # 0x140068660
   140011d36:	mov    QWORD PTR [rsp+0x30],rbx
   140011d3b:	test   rcx,rcx
   140011d3e:	je     0x140011d64
   140011d40:	mov    rdx,QWORD PTR [rdi+0x18]
   140011d44:	call   0x1400106d0
   140011d49:	mov    rbx,rax
   140011d4c:	test   rax,rax
   140011d4f:	je     0x140011d64
   140011d51:	inc    DWORD PTR [rax+0x4]
   140011d54:	mov    rbx,QWORD PTR [rsp+0x30]
   140011d59:	mov    rsi,QWORD PTR [rsp+0x38]
   140011d5e:	add    rsp,0x20
   140011d62:	pop    rdi
   140011d63:	ret    
   140011d64:	mov    rdx,rsi
   140011d67:	mov    rcx,rdi
   140011d6a:	call   0x1400114a0
   140011d6f:	cmp    DWORD PTR [rsi],0x0
   140011d72:	mov    rbx,rax
   140011d75:	jg     0x140011d9d
   140011d77:	test   rax,rax
   140011d7a:	je     0x140011d9d
   140011d7c:	cmp    BYTE PTR [rdi+0x8],0x0
   140011d80:	jne    0x140011d8a
   140011d82:	mov    rcx,rax
   140011d85:	call   0x140011c50
   140011d8a:	mov    rax,rbx
   140011d8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140011d92:	mov    rsi,QWORD PTR [rsp+0x38]
   140011d97:	add    rsp,0x20
   140011d9b:	pop    rdi
   140011d9c:	ret    
   140011d9d:	xor    eax,eax
   140011d9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140011da4:	mov    rsi,QWORD PTR [rsp+0x38]
   140011da9:	add    rsp,0x20
   140011dad:	pop    rdi
   140011dae:	ret    
   140011daf:	xor    eax,eax
   140011db1:	mov    rsi,QWORD PTR [rsp+0x38]
   140011db6:	add    rsp,0x20
   140011dba:	pop    rdi
   140011dbb:	ret    
   140011dbc:	int3   
   140011dbd:	int3   
   140011dbe:	int3   
   140011dbf:	int3   
   140011dc0:	mov    QWORD PTR [rsp+0x18],rbx
   140011dc5:	mov    QWORD PTR [rsp+0x20],rbp
   140011dca:	push   rsi
   140011dcb:	push   rdi
   140011dcc:	push   r12
   140011dce:	sub    rsp,0x140
   140011dd5:	mov    rax,QWORD PTR [rip+0x54ad4]        # 0x1400668b0
   140011ddc:	xor    rax,rsp
   140011ddf:	mov    QWORD PTR [rsp+0x130],rax
   140011de7:	mov    rsi,rcx
   140011dea:	or     rcx,0xffffffffffffffff
   140011dee:	xor    eax,eax
   140011df0:	mov    rbx,rdx
   140011df3:	mov    rdi,rsi
   140011df6:	lea    edx,[rax+0x2c]
   140011df9:	repnz scas al,BYTE PTR es:[rdi]
   140011dfb:	not    rcx
   140011dfe:	lea    r12,[rcx-0x1]
   140011e02:	mov    rcx,rsi
   140011e05:	call   0x14002e1c0
   140011e0a:	mov    rcx,rsi
   140011e0d:	test   rax,rax
   140011e10:	mov    QWORD PTR [rsp+0x38],rcx
   140011e15:	setne  bpl
   140011e19:	test   bpl,bpl
   140011e1c:	je     0x140011e52
   140011e1e:	lea    r8,[rsp+0x20]
   140011e23:	lea    rdx,[rsp+0x50]
   140011e28:	mov    r9,rbx
   140011e2b:	mov    BYTE PTR [rsp+0x50],0x0
   140011e30:	mov    BYTE PTR [rsp+0x8c],0x0
   140011e38:	mov    DWORD PTR [rsp+0x12c],0x0
   140011e43:	call   0x140011730
   140011e48:	cmp    DWORD PTR [rbx],0x0
   140011e4b:	jg     0x140011eb4
   140011e4d:	mov    rcx,QWORD PTR [rsp+0x38]
   140011e52:	call   0x140011530
   140011e57:	lea    rcx,[rip+0x5680a]        # 0x140068668
   140011e5e:	mov    rdi,rax
   140011e61:	call   0x140010c20
   140011e66:	lea    rbx,[rip+0x567b3]        # 0x140068620
   140011e6d:	mov    QWORD PTR [rip+0x56814],rdi        # 0x140068688
   140011e74:	movsxd rdi,r12d
   140011e77:	mov    rdx,rsi
   140011e7a:	mov    rcx,rbx
   140011e7d:	mov    r8,rdi
   140011e80:	mov    BYTE PTR [rip+0x567d6],bpl        # 0x14006865d
   140011e87:	call   0x14002b9a0
   140011e8c:	lea    rdx,[rip+0xfffffffffffffd0d]        # 0x140011ba0
   140011e93:	mov    ecx,0x10
   140011e98:	mov    BYTE PTR [rdi+rbx*1],0x0
   140011e9c:	mov    QWORD PTR [rip+0x567dd],rbx        # 0x140068680
   140011ea3:	call   0x140010de0
   140011ea8:	lea    rcx,[rip+0x567b9]        # 0x140068668
   140011eaf:	call   0x140010a80
   140011eb4:	mov    rcx,QWORD PTR [rsp+0x130]
   140011ebc:	xor    rcx,rsp
   140011ebf:	call   0x14002b250
   140011ec4:	lea    r11,[rsp+0x140]
   140011ecc:	mov    rbx,QWORD PTR [r11+0x30]
   140011ed0:	mov    rbp,QWORD PTR [r11+0x38]
   140011ed4:	mov    rsp,r11
   140011ed7:	pop    r12
   140011ed9:	pop    rdi
   140011eda:	pop    rsi
   140011edb:	ret    
   140011edc:	int3   
   140011edd:	int3   
   140011ede:	int3   
   140011edf:	int3   
   140011ee0:	sub    rsp,0x28
   140011ee4:	mov    rax,QWORD PTR [rip+0x56795]        # 0x140068680
   140011eeb:	test   rax,rax
   140011eee:	jne    0x140011f9f
   140011ef4:	mov    QWORD PTR [rsp+0x38],rbx
   140011ef9:	mov    QWORD PTR [rsp+0x40],rsi
   140011efe:	xor    esi,esi
   140011f00:	mov    DWORD PTR [rsp+0x30],esi
   140011f04:	call   0x14000db70
   140011f09:	mov    rbx,rax
   140011f0c:	test   rax,rax
   140011f0f:	je     0x140011f76
   140011f11:	lea    rdx,[rsp+0x30]
   140011f16:	mov    rcx,rax
   140011f19:	call   0x14000dbd0
   140011f1e:	mov    rsi,rax
   140011f21:	mov    eax,DWORD PTR [rsp+0x30]
   140011f25:	test   eax,eax
   140011f27:	jg     0x140011f42
   140011f29:	test   rsi,rsi
   140011f2c:	je     0x140011f42
   140011f2e:	lea    rdx,[rsp+0x30]
   140011f33:	mov    rcx,rsi
   140011f36:	call   0x14000e200
   140011f3b:	mov    rbx,rax
   140011f3e:	mov    eax,DWORD PTR [rsp+0x30]
   140011f42:	test   rbx,rbx
   140011f45:	je     0x140011f76
   140011f47:	cmp    BYTE PTR [rbx],0x0
   140011f4a:	je     0x140011f76
   140011f4c:	test   eax,eax
   140011f4e:	jg     0x140011f76
   140011f50:	test   rsi,rsi
   140011f53:	je     0x140011f76
   140011f55:	or     rcx,0xffffffffffffffff
   140011f59:	mov    QWORD PTR [rsp+0x20],rdi
   140011f5e:	xor    eax,eax
   140011f60:	mov    rdi,rbx
   140011f63:	repnz scas al,BYTE PTR es:[rdi]
   140011f65:	mov    rdi,QWORD PTR [rsp+0x20]
   140011f6a:	not    rcx
   140011f6d:	dec    rcx
   140011f70:	cmp    rcx,0x3d
   140011f74:	jb     0x140011f7d
   140011f76:	lea    rbx,[rip+0x31af3]        # 0x140043a70
   140011f7d:	lea    rdx,[rsp+0x30]
   140011f82:	mov    rcx,rbx
   140011f85:	call   0x140011dc0
   140011f8a:	mov    rcx,rsi
   140011f8d:	call   0x14000df20
   140011f92:	mov    rsi,QWORD PTR [rsp+0x40]
   140011f97:	mov    rax,rbx
   140011f9a:	mov    rbx,QWORD PTR [rsp+0x38]
   140011f9f:	add    rsp,0x28
   140011fa3:	ret    
   140011fa4:	int3   
   140011fa5:	int3   
   140011fa6:	int3   
   140011fa7:	int3   
   140011fa8:	int3   
   140011fa9:	int3   
   140011faa:	int3   
   140011fab:	int3   
   140011fac:	int3   
   140011fad:	int3   
   140011fae:	int3   
   140011faf:	int3   
   140011fb0:	rex push rbx
   140011fb2:	push   rbp
   140011fb3:	push   rsi
   140011fb4:	push   rdi
   140011fb5:	push   r12
   140011fb7:	sub    rsp,0x140
   140011fbe:	mov    rax,QWORD PTR [rip+0x548eb]        # 0x1400668b0
   140011fc5:	xor    rax,rsp
   140011fc8:	mov    QWORD PTR [rsp+0x130],rax
   140011fd0:	xor    esi,esi
   140011fd2:	mov    rbp,r9
   140011fd5:	mov    rbx,r8
   140011fd8:	cmp    DWORD PTR [r9],esi
   140011fdb:	mov    rdi,rdx
   140011fde:	mov    BYTE PTR [rsp+0x20],0x1
   140011fe3:	mov    DWORD PTR [rsp+0x24],esi
   140011fe7:	mov    r12b,0x1
   140011fea:	jg     0x140011ffd
   140011fec:	test   rdx,rdx
   140011fef:	jne    0x14001200b
   140011ff1:	test   rbx,rbx
   140011ff4:	je     0x140012004
   140011ff6:	mov    DWORD PTR [r9],0x5
   140011ffd:	xor    eax,eax
   140011fff:	jmp    0x140012160
   140012004:	lea    rdi,[rsp+0x50]
   140012009:	jmp    0x140012010
   14001200b:	test   rbx,rbx
   14001200e:	jne    0x140012038
   140012010:	xor    eax,eax
   140012012:	lea    rbx,[rsp+0x28]
   140012017:	mov    QWORD PTR [rsp+0x28],rax
   14001201c:	mov    DWORD PTR [rsp+0x28],0x28
   140012024:	mov    QWORD PTR [rsp+0x30],rax
   140012029:	mov    QWORD PTR [rsp+0x38],rax
   14001202e:	mov    QWORD PTR [rsp+0x40],rax
   140012033:	mov    QWORD PTR [rsp+0x48],rax
   140012038:	mov    BYTE PTR [rdi+0x3c],sil
   14001203c:	mov    DWORD PTR [rdi+0xdc],esi
   140012042:	lea    rax,[rdi+0x3c]
   140012046:	mov    BYTE PTR [rdi],sil
   140012049:	mov    QWORD PTR [rbx+0x18],rcx
   14001204d:	mov    QWORD PTR [rbx+0x20],rax
   140012051:	mov    eax,DWORD PTR [rdi+0xdc]
   140012057:	mov    DWORD PTR [rbx+0xc],eax
   14001205a:	test   rcx,rcx
   14001205d:	jne    0x140012090
   14001205f:	call   0x140011ee0
   140012064:	mov    QWORD PTR [rbx+0x18],rax
   140012068:	test   rax,rax
   14001206b:	jne    0x140012079
   14001206d:	mov    DWORD PTR [rbp+0x0],0x2
   140012074:	jmp    0x140012160
   140012079:	movzx  eax,BYTE PTR [rip+0x565dd]        # 0x14006865d
   140012080:	mov    rsi,QWORD PTR [rip+0x56601]        # 0x140068688
   140012087:	xor    r12b,r12b
   14001208a:	mov    BYTE PTR [rsp+0x20],al
   14001208e:	jmp    0x1400120e5
   140012090:	movzx  eax,BYTE PTR [rcx]
   140012093:	cmp    al,0x55
   140012095:	jne    0x14001217e
   14001209b:	cmp    BYTE PTR [rcx+0x1],0x54
   14001209f:	jne    0x1400120ab
   1400120a1:	cmp    BYTE PTR [rcx+0x2],0x46
   1400120a5:	je     0x14001219a
   1400120ab:	mov    r8,rbx
   1400120ae:	mov    rdx,rdi
   1400120b1:	call   0x140011730
   1400120b6:	cmp    DWORD PTR [rbp+0x0],esi
   1400120b9:	jg     0x140011ffd
   1400120bf:	mov    rcx,QWORD PTR [rbx+0x18]
   1400120c3:	lea    r8,[rsp+0x24]
   1400120c8:	lea    rdx,[rsp+0x20]
   1400120cd:	call   0x140012a60
   1400120d2:	cmp    DWORD PTR [rsp+0x24],esi
   1400120d6:	mov    QWORD PTR [rbx+0x18],rax
   1400120da:	jg     0x1400120e1
   1400120dc:	test   rax,rax
   1400120df:	jne    0x1400120e5
   1400120e1:	mov    QWORD PTR [rbx+0x18],rdi
   1400120e5:	cmp    BYTE PTR [rsp+0x20],0x0
   1400120ea:	je     0x140012103
   1400120ec:	mov    rcx,QWORD PTR [rbx+0x18]
   1400120f0:	cmp    rcx,rdi
   1400120f3:	je     0x140012103
   1400120f5:	mov    r9,rbp
   1400120f8:	mov    r8,rbx
   1400120fb:	mov    rdx,rdi
   1400120fe:	call   0x140011730
   140012103:	test   r12b,r12b
   140012106:	je     0x140012114
   140012108:	mov    rcx,QWORD PTR [rbx+0x18]
   14001210c:	call   0x140011530
   140012111:	mov    rsi,rax
   140012114:	test   rsi,rsi
   140012117:	jne    0x14001215d
   140012119:	lea    rcx,[rip+0x56548]        # 0x140068668
   140012120:	mov    DWORD PTR [rbx+0x4],0x1
   140012127:	mov    QWORD PTR [rbx+0x10],rsi
   14001212b:	call   0x140010c20
   140012130:	mov    rdx,rbp
   140012133:	mov    rcx,rbx
   140012136:	call   0x140011cf0
   14001213b:	lea    rcx,[rip+0x56526]        # 0x140068668
   140012142:	mov    rsi,rax
   140012145:	call   0x140010a80
   14001214a:	cmp    DWORD PTR [rbp+0x0],0x0
   14001214e:	jg     0x140011ffd
   140012154:	test   rsi,rsi
   140012157:	je     0x140011ffd
   14001215d:	mov    rax,rsi
   140012160:	mov    rcx,QWORD PTR [rsp+0x130]
   140012168:	xor    rcx,rsp
   14001216b:	call   0x14002b250
   140012170:	add    rsp,0x140
   140012177:	pop    r12
   140012179:	pop    rdi
   14001217a:	pop    rsi
   14001217b:	pop    rbp
   14001217c:	pop    rbx
   14001217d:	ret    
   14001217e:	cmp    al,0x75
   140012180:	jne    0x1400120ab
   140012186:	cmp    BYTE PTR [rcx+0x1],0x74
   14001218a:	jne    0x1400120ab
   140012190:	cmp    BYTE PTR [rcx+0x2],0x66
   140012194:	jne    0x1400120ab
   14001219a:	movzx  eax,BYTE PTR [rcx+0x3]
   14001219e:	cmp    al,0x2d
   1400121a0:	jne    0x1400121b7
   1400121a2:	cmp    BYTE PTR [rcx+0x4],0x38
   1400121a6:	jne    0x1400120ab
   1400121ac:	cmp    BYTE PTR [rcx+0x5],sil
   1400121b0:	je     0x1400121c9
   1400121b2:	jmp    0x1400120ab
   1400121b7:	cmp    al,0x38
   1400121b9:	jne    0x1400120ab
   1400121bf:	cmp    BYTE PTR [rcx+0x4],sil
   1400121c3:	jne    0x1400120ab
   1400121c9:	lea    rax,[rip+0x2c490]        # 0x14003e660
   1400121d0:	mov    QWORD PTR [rbx+0x18],rax
   1400121d4:	lea    rax,[rip+0x38075]        # 0x14004a250
   1400121db:	jmp    0x140012160
   1400121dd:	int3   
   1400121de:	int3   
   1400121df:	int3   
   1400121e0:	mov    QWORD PTR [rsp+0x20],rbx
   1400121e5:	push   rdi
   1400121e6:	sub    rsp,0x140
   1400121ed:	mov    rax,QWORD PTR [rip+0x546bc]        # 0x1400668b0
   1400121f4:	xor    rax,rsp
   1400121f7:	mov    QWORD PTR [rsp+0x130],rax
   1400121ff:	mov    rdi,rcx
   140012202:	xor    ecx,ecx
   140012204:	mov    rbx,r8
   140012207:	cmp    DWORD PTR [r8],ecx
   14001220a:	mov    rax,rdx
   14001220d:	mov    DWORD PTR [rsp+0x20],0x28
   140012215:	mov    DWORD PTR [rsp+0x24],ecx
   140012219:	mov    DWORD PTR [rsp+0x28],ecx
   14001221d:	mov    DWORD PTR [rsp+0x2c],ecx
   140012221:	mov    DWORD PTR [rsp+0x30],ecx
   140012225:	mov    DWORD PTR [rsp+0x34],ecx
   140012229:	mov    DWORD PTR [rsp+0x38],ecx
   14001222d:	mov    DWORD PTR [rsp+0x3c],ecx
   140012231:	mov    DWORD PTR [rsp+0x40],ecx
   140012235:	mov    DWORD PTR [rsp+0x44],ecx
   140012239:	jg     0x140012268
   14001223b:	lea    r8,[rsp+0x20]
   140012240:	lea    rdx,[rsp+0x50]
   140012245:	mov    r9,rbx
   140012248:	mov    rcx,rax
   14001224b:	call   0x140011fb0
   140012250:	lea    r8,[rsp+0x20]
   140012255:	mov    r9,rbx
   140012258:	mov    rdx,rax
   14001225b:	mov    rcx,rdi
   14001225e:	call   0x1400118f0
   140012263:	cmp    DWORD PTR [rbx],0x0
   140012266:	jle    0x14001226a
   140012268:	xor    eax,eax
   14001226a:	mov    rcx,QWORD PTR [rsp+0x130]
   140012272:	xor    rcx,rsp
   140012275:	call   0x14002b250
   14001227a:	mov    rbx,QWORD PTR [rsp+0x168]
   140012282:	add    rsp,0x140
   140012289:	pop    rdi
   14001228a:	ret    
   14001228b:	int3   
   14001228c:	int3   
   14001228d:	int3   
   14001228e:	int3   
   14001228f:	int3   
   140012290:	rex push rdi
   140012292:	sub    rsp,0x260
   140012299:	mov    rax,QWORD PTR [rip+0x54610]        # 0x1400668b0
   1400122a0:	xor    rax,rsp
   1400122a3:	mov    QWORD PTR [rsp+0x250],rax
   1400122ab:	xor    eax,eax
   1400122ad:	mov    rdi,rdx
   1400122b0:	mov    DWORD PTR [rsp+0x20],0x28
   1400122b8:	cmp    DWORD PTR [rdx],eax
   1400122ba:	mov    DWORD PTR [rsp+0x24],eax
   1400122be:	mov    DWORD PTR [rsp+0x28],eax
   1400122c2:	mov    DWORD PTR [rsp+0x2c],eax
   1400122c6:	mov    DWORD PTR [rsp+0x30],eax
   1400122ca:	mov    DWORD PTR [rsp+0x34],eax
   1400122ce:	mov    DWORD PTR [rsp+0x38],eax
   1400122d2:	mov    DWORD PTR [rsp+0x3c],eax
   1400122d6:	mov    DWORD PTR [rsp+0x40],eax
   1400122da:	mov    DWORD PTR [rsp+0x44],eax
   1400122de:	jg     0x140012369
   1400122e4:	mov    r9,rdx
   1400122e7:	lea    r8,[rsp+0x20]
   1400122ec:	lea    rdx,[rsp+0x50]
   1400122f1:	mov    QWORD PTR [rsp+0x280],rbx
   1400122f9:	mov    BYTE PTR [rsp+0x28],0x1
   1400122fe:	call   0x140011fb0
   140012303:	lea    r8,[rsp+0x20]
   140012308:	lea    rcx,[rsp+0x130]
   140012310:	mov    r9,rdi
   140012313:	mov    rdx,rax
   140012316:	mov    rbx,rax
   140012319:	call   0x1400118f0
   14001231e:	test   rbx,rbx
   140012321:	je     0x140012361
   140012323:	cmp    DWORD PTR [rbx+0x4],0xffffffff
   140012327:	je     0x140012361
   140012329:	lea    rcx,[rip+0x56338]        # 0x140068668
   140012330:	call   0x140010c20
   140012335:	mov    eax,DWORD PTR [rbx+0x4]
   140012338:	test   eax,eax
   14001233a:	je     0x140012341
   14001233c:	dec    eax
   14001233e:	mov    DWORD PTR [rbx+0x4],eax
   140012341:	cmp    DWORD PTR [rbx+0x4],0x0
   140012345:	ja     0x140012355
   140012347:	cmp    BYTE PTR [rbx+0x20],0x0
   14001234b:	jne    0x140012355
   14001234d:	mov    rcx,rbx
   140012350:	call   0x140011600
   140012355:	lea    rcx,[rip+0x5630c]        # 0x140068668
   14001235c:	call   0x140010a80
   140012361:	mov    rbx,QWORD PTR [rsp+0x280]
   140012369:	xor    eax,eax
   14001236b:	cmp    DWORD PTR [rdi],eax
   14001236d:	setle  al
   140012370:	mov    rcx,QWORD PTR [rsp+0x250]
   140012378:	xor    rcx,rsp
   14001237b:	call   0x14002b250
   140012380:	add    rsp,0x260
   140012387:	pop    rdi
   140012388:	ret    
   140012389:	int3   
   14001238a:	int3   
   14001238b:	int3   
   14001238c:	int3   
   14001238d:	int3   
   14001238e:	int3   
   14001238f:	int3   
   140012390:	mov    QWORD PTR [rsp+0x8],rbx
   140012395:	push   rdi
   140012396:	sub    rsp,0x20
   14001239a:	xor    ebx,ebx
   14001239c:	mov    rdi,rcx
   14001239f:	cmp    QWORD PTR [rip+0x562ea],rbx        # 0x140068690
   1400123a6:	je     0x1400123e3
   1400123a8:	xor    ecx,ecx
   1400123aa:	call   0x140010c20
   1400123af:	mov    r11,QWORD PTR [rip+0x562da]        # 0x140068690
   1400123b6:	test   r11,r11
   1400123b9:	je     0x1400123c9
   1400123bb:	mov    rbx,r11
   1400123be:	mov    QWORD PTR [rip+0x562c7],0x0        # 0x140068690
   1400123c9:	xor    ecx,ecx
   1400123cb:	call   0x140010a80
   1400123d0:	test   rbx,rbx
   1400123d3:	je     0x1400123e3
   1400123d5:	mov    rax,rbx
   1400123d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400123dd:	add    rsp,0x20
   1400123e1:	pop    rdi
   1400123e2:	ret    
   1400123e3:	mov    rdx,rdi
   1400123e6:	xor    ecx,ecx
   1400123e8:	call   0x14000dbd0
   1400123ed:	cmp    DWORD PTR [rdi],0x0
   1400123f0:	jle    0x1400123fc
   1400123f2:	mov    rcx,rax
   1400123f5:	call   0x14000df20
   1400123fa:	xor    eax,eax
   1400123fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140012401:	add    rsp,0x20
   140012405:	pop    rdi
   140012406:	ret    
   140012407:	int3   
   140012408:	int3   
   140012409:	int3   
   14001240a:	int3   
   14001240b:	int3   
   14001240c:	int3   
   14001240d:	int3   
   14001240e:	int3   
   14001240f:	int3   
   140012410:	cmp    WORD PTR [r9],0x14
   140012415:	jb     0x14001244b
   140012417:	cmp    BYTE PTR [r9+0x4],0x0
   14001241c:	jne    0x14001244b
   14001241e:	cmp    BYTE PTR [r9+0x5],0x0
   140012423:	jne    0x14001244b
   140012425:	cmp    BYTE PTR [r9+0x8],0x43
   14001242a:	jne    0x14001244b
   14001242c:	cmp    BYTE PTR [r9+0x9],0x76
   140012431:	jne    0x14001244b
   140012433:	cmp    BYTE PTR [r9+0xa],0x41
   140012438:	jne    0x14001244b
   14001243a:	cmp    BYTE PTR [r9+0xb],0x6c
   14001243f:	jne    0x14001244b
   140012441:	cmp    BYTE PTR [r9+0xc],0x3
   140012446:	jne    0x14001244b
   140012448:	mov    al,0x1
   14001244a:	ret    
   14001244b:	xor    al,al
   14001244d:	ret    
   14001244e:	int3   
   14001244f:	int3   
   140012450:	sub    rsp,0x28
   140012454:	mov    rcx,QWORD PTR [rip+0x562b5]        # 0x140068710
   14001245b:	test   rcx,rcx
   14001245e:	je     0x140012470
   140012460:	call   0x14000ff20
   140012465:	mov    QWORD PTR [rip+0x562a0],0x0        # 0x140068710
   140012470:	xor    edx,edx
   140012472:	lea    rcx,[rip+0x56227]        # 0x1400686a0
   140012479:	lea    r8d,[rdx+0x70]
   14001247d:	call   0x14002b280
   140012482:	mov    al,0x1
   140012484:	add    rsp,0x28
   140012488:	ret    
   140012489:	int3   
   14001248a:	int3   
   14001248b:	int3   
   14001248c:	int3   
   14001248d:	int3   
   14001248e:	int3   
   14001248f:	int3   
   140012490:	rex push rsi
   140012492:	sub    rsp,0x40
   140012496:	mov    rsi,rcx
   140012499:	test   rcx,rcx
   14001249c:	je     0x1400126a9
   1400124a2:	cmp    DWORD PTR [rcx],0x0
   1400124a5:	jg     0x1400126a9
   1400124ab:	cmp    QWORD PTR [rip+0x5625d],0x0        # 0x140068710
   1400124b3:	mov    QWORD PTR [rsp+0x50],rbx
   1400124b8:	mov    QWORD PTR [rsp+0x58],rbp
   1400124bd:	mov    QWORD PTR [rsp+0x60],rdi
   1400124c2:	jne    0x1400126a2
   1400124c8:	mov    QWORD PTR [rsp+0x28],rcx
   1400124cd:	lea    r9,[rip+0xffffffffffffff3c]        # 0x140012410
   1400124d4:	lea    r8,[rip+0x36ef5]        # 0x1400493d0
   1400124db:	lea    rdx,[rip+0x36efa]        # 0x1400493dc
   1400124e2:	xor    ecx,ecx
   1400124e4:	mov    QWORD PTR [rsp+0x20],0x0
   1400124ed:	call   0x14000d910
   1400124f2:	cmp    DWORD PTR [rsi],0x0
   1400124f5:	mov    rdi,rax
   1400124f8:	jg     0x14001251a
   1400124fa:	mov    rcx,rax
   1400124fd:	call   0x14000ff70
   140012502:	mov    rbx,rax
   140012505:	mov    ebp,DWORD PTR [rax]
   140012507:	cmp    ebp,0x8
   14001250a:	jae    0x140012531
   14001250c:	mov    rcx,rdi
   14001250f:	mov    DWORD PTR [rsi],0x3
   140012515:	call   0x14000ff20
   14001251a:	xor    al,al
   14001251c:	mov    rbp,QWORD PTR [rsp+0x58]
   140012521:	mov    rbx,QWORD PTR [rsp+0x50]
   140012526:	mov    rdi,QWORD PTR [rsp+0x60]
   14001252b:	add    rsp,0x40
   14001252f:	pop    rsi
   140012530:	ret    
   140012531:	xor    ecx,ecx
   140012533:	call   0x140010c20
   140012538:	cmp    QWORD PTR [rip+0x561d0],0x0        # 0x140068710
   140012540:	jne    0x14001268e
   140012546:	mov    r10d,DWORD PTR [rbx+0x4]
   14001254a:	mov    QWORD PTR [rsp+0x68],r12
   14001254f:	mov    QWORD PTR [rsp+0x38],r13
   140012554:	mov    DWORD PTR [rip+0x5618d],r10d        # 0x1400686e8
   14001255b:	mov    r11d,DWORD PTR [rbx+0x8]
   14001255f:	mov    QWORD PTR [rsp+0x30],r14
   140012564:	mov    DWORD PTR [rip+0x56181],r11d        # 0x1400686ec
   14001256b:	mov    esi,DWORD PTR [rbx+0xc]
   14001256e:	mov    DWORD PTR [rip+0x5617c],esi        # 0x1400686f0
   140012574:	mov    r12d,DWORD PTR [rbx+0x10]
   140012578:	mov    DWORD PTR [rip+0x56175],r12d        # 0x1400686f4
   14001257f:	mov    r13d,DWORD PTR [rbx+0x14]
   140012583:	mov    DWORD PTR [rip+0x5616e],r13d        # 0x1400686f8
   14001258a:	mov    r14d,DWORD PTR [rbx+0x18]
   14001258e:	mov    DWORD PTR [rip+0x56167],r14d        # 0x1400686fc
   140012595:	mov    r8d,DWORD PTR [rbx+0x1c]
   140012599:	mov    DWORD PTR [rip+0x56160],r8d        # 0x140068700
   1400125a0:	mov    r9d,DWORD PTR [rbx+0x20]
   1400125a4:	mov    DWORD PTR [rip+0x56159],r9d        # 0x140068704
   1400125ab:	cmp    ebp,0x8
   1400125ae:	jbe    0x1400125b9
   1400125b0:	mov    eax,DWORD PTR [rbx+0x24]
   1400125b3:	mov    DWORD PTR [rip+0x5614f],eax        # 0x140068708
   1400125b9:	lea    edx,[rbp+rbp*1+0x2]
   1400125bd:	lea    rcx,[rbx+rdx*2]
   1400125c1:	add    edx,r10d
   1400125c4:	mov    QWORD PTR [rip+0x560d5],rcx        # 0x1400686a0
   1400125cb:	lea    rcx,[rbx+rdx*2]
   1400125cf:	add    edx,r11d
   1400125d2:	mov    QWORD PTR [rip+0x560cf],rcx        # 0x1400686a8
   1400125d9:	lea    rcx,[rbx+rdx*2]
   1400125dd:	add    edx,esi
   1400125df:	mov    QWORD PTR [rip+0x560ca],rcx        # 0x1400686b0
   1400125e6:	lea    rcx,[rbx+rdx*2]
   1400125ea:	add    edx,r12d
   1400125ed:	mov    r12,QWORD PTR [rsp+0x68]
   1400125f2:	mov    QWORD PTR [rip+0x560bf],rcx        # 0x1400686b8
   1400125f9:	lea    rcx,[rbx+rdx*2]
   1400125fd:	add    edx,r13d
   140012600:	mov    r13,QWORD PTR [rsp+0x38]
   140012605:	mov    QWORD PTR [rip+0x560b4],rcx        # 0x1400686c0
   14001260c:	lea    rcx,[rbx+rdx*2]
   140012610:	add    edx,r14d
   140012613:	mov    r14,QWORD PTR [rsp+0x30]
   140012618:	mov    QWORD PTR [rip+0x560a9],rcx        # 0x1400686c8
   14001261f:	test   r8d,r8d
   140012622:	je     0x140012638
   140012624:	cmp    WORD PTR [rbx+rdx*2],0x2
   140012629:	lea    rcx,[rbx+rdx*2]
   14001262d:	jae    0x140012638
   14001262f:	mov    QWORD PTR [rip+0x5609a],rcx        # 0x1400686d0
   140012636:	jmp    0x140012646
   140012638:	lea    rcx,[rip+0x36da1]        # 0x1400493e0
   14001263f:	mov    QWORD PTR [rip+0x5608a],rcx        # 0x1400686d0
   140012646:	add    edx,r8d
   140012649:	mov    eax,edx
   14001264b:	lea    r8,[rbx+rdx*2]
   14001264f:	mov    QWORD PTR [rip+0x56082],r8        # 0x1400686d8
   140012656:	cmp    WORD PTR [rcx],0x0
   14001265a:	jne    0x140012665
   14001265c:	mov    QWORD PTR [rip+0x5607d],r8        # 0x1400686e0
   140012663:	jmp    0x140012674
   140012665:	lea    eax,[r9+rdx*1]
   140012669:	lea    rax,[rbx+rax*2]
   14001266d:	mov    QWORD PTR [rip+0x5606c],rax        # 0x1400686e0
   140012674:	lea    rdx,[rip+0xfffffffffffffdd5]        # 0x140012450
   14001267b:	mov    ecx,0x11
   140012680:	call   0x140010de0
   140012685:	mov    QWORD PTR [rip+0x56084],rdi        # 0x140068710
   14001268c:	xor    edi,edi
   14001268e:	xor    ecx,ecx
   140012690:	call   0x140010a80
   140012695:	test   rdi,rdi
   140012698:	je     0x1400126a2
   14001269a:	mov    rcx,rdi
   14001269d:	call   0x14000ff20
   1400126a2:	mov    al,0x1
   1400126a4:	jmp    0x14001251c
   1400126a9:	xor    al,al
   1400126ab:	add    rsp,0x40
   1400126af:	pop    rsi
   1400126b0:	ret    
   1400126b1:	int3   
   1400126b2:	int3   
   1400126b3:	int3   
   1400126b4:	int3   
   1400126b5:	int3   
   1400126b6:	int3   
   1400126b7:	int3   
   1400126b8:	int3   
   1400126b9:	int3   
   1400126ba:	int3   
   1400126bb:	int3   
   1400126bc:	int3   
   1400126bd:	int3   
   1400126be:	int3   
   1400126bf:	int3   
   1400126c0:	rex push rbx
   1400126c2:	movzx  r8d,BYTE PTR [rdx]
   1400126c6:	xor    r9b,r9b
   1400126c9:	mov    r10,rdx
   1400126cc:	mov    rbx,rcx
   1400126cf:	mov    r11,rcx
   1400126d2:	test   r8b,r8b
   1400126d5:	je     0x140012763
   1400126db:	mov    QWORD PTR [rsp+0x10],rdi
   1400126e0:	lea    rdi,[rip+0x36d09]        # 0x1400493f0
   1400126e7:	inc    r10
   1400126ea:	test   r8b,r8b
   1400126ed:	js     0x1400126f9
   1400126ef:	movzx  eax,r8b
   1400126f3:	movzx  edx,BYTE PTR [rax+rdi*1]
   1400126f7:	jmp    0x1400126fb
   1400126f9:	xor    dl,dl
   1400126fb:	movzx  ecx,dl
   1400126fe:	test   dl,dl
   140012700:	je     0x14001274b
   140012702:	sub    ecx,0x1
   140012705:	je     0x140012725
   140012707:	cmp    ecx,0x1
   14001270a:	je     0x14001271a
   14001270c:	xor    r9b,r9b
   14001270f:	mov    BYTE PTR [r11],dl
   140012712:	mov    r8b,dl
   140012715:	inc    r11
   140012718:	jmp    0x14001274e
   14001271a:	mov    BYTE PTR [r11],r8b
   14001271d:	inc    r11
   140012720:	mov    r9b,0x1
   140012723:	jmp    0x14001274e
   140012725:	test   r9b,r9b
   140012728:	jne    0x140012743
   14001272a:	movzx  eax,BYTE PTR [r10]
   14001272e:	test   al,al
   140012730:	js     0x140012743
   140012732:	movzx  eax,al
   140012735:	movzx  ecx,BYTE PTR [rax+rdi*1]
   140012739:	cmp    cl,0x1
   14001273c:	je     0x14001274e
   14001273e:	cmp    cl,0x2
   140012741:	je     0x14001274e
   140012743:	mov    BYTE PTR [r11],r8b
   140012746:	inc    r11
   140012749:	jmp    0x14001274e
   14001274b:	xor    r9b,r9b
   14001274e:	mov    r8b,BYTE PTR [r10]
   140012751:	test   r8b,r8b
   140012754:	jne    0x1400126e7
   140012756:	mov    rdi,QWORD PTR [rsp+0x10]
   14001275b:	mov    BYTE PTR [r11],r8b
   14001275e:	mov    rax,rbx
   140012761:	pop    rbx
   140012762:	ret    
   140012763:	mov    BYTE PTR [rcx],0x0
   140012766:	mov    rax,rbx
   140012769:	pop    rbx
   14001276a:	ret    
   14001276b:	int3   
   14001276c:	int3   
   14001276d:	int3   
   14001276e:	int3   
   14001276f:	int3   
   140012770:	mov    QWORD PTR [rsp+0x8],rbx
   140012775:	mov    QWORD PTR [rsp+0x10],rsi
   14001277a:	mov    QWORD PTR [rsp+0x18],rdi
   14001277f:	xor    dil,dil
   140012782:	mov    r10,rdx
   140012785:	mov    r11,rcx
   140012788:	xor    bl,bl
   14001278a:	lea    rsi,[rip+0x36c5f]        # 0x1400493f0
   140012791:	movzx  r8d,BYTE PTR [r11]
   140012795:	test   r8b,r8b
   140012798:	je     0x1400127c6
   14001279a:	nop    WORD PTR [rax+rax*1+0x0]
   1400127a0:	inc    r11
   1400127a3:	test   r8b,r8b
   1400127a6:	js     0x1400127b2
   1400127a8:	movzx  eax,r8b
   1400127ac:	movzx  edx,BYTE PTR [rax+rsi*1]
   1400127b0:	jmp    0x1400127b4
   1400127b2:	xor    dl,dl
   1400127b4:	movzx  ecx,dl
   1400127b7:	test   dl,dl
   1400127b9:	jne    0x1400127e6
   1400127bb:	mov    r8b,BYTE PTR [r11]
   1400127be:	xor    dil,dil
   1400127c1:	test   r8b,r8b
   1400127c4:	jne    0x1400127a0
   1400127c6:	inc    r11
   1400127c9:	movzx  edx,BYTE PTR [r10]
   1400127cd:	test   dl,dl
   1400127cf:	je     0x140012862
   1400127d5:	inc    r10
   1400127d8:	test   dl,dl
   1400127da:	js     0x140012825
   1400127dc:	movzx  eax,dl
   1400127df:	movzx  r9d,BYTE PTR [rax+rsi*1]
   1400127e4:	jmp    0x140012828
   1400127e6:	sub    ecx,0x1
   1400127e9:	je     0x1400127fd
   1400127eb:	cmp    ecx,0x1
   1400127ee:	je     0x1400127f8
   1400127f0:	mov    r8b,dl
   1400127f3:	xor    dil,dil
   1400127f6:	jmp    0x1400127c9
   1400127f8:	mov    dil,0x1
   1400127fb:	jmp    0x1400127c9
   1400127fd:	test   dil,dil
   140012800:	jne    0x1400127c9
   140012802:	movzx  eax,BYTE PTR [r11]
   140012806:	test   al,al
   140012808:	js     0x1400127c9
   14001280a:	movzx  eax,al
   14001280d:	movzx  ecx,BYTE PTR [rax+rsi*1]
   140012811:	cmp    cl,0x1
   140012814:	je     0x140012791
   14001281a:	cmp    cl,0x2
   14001281d:	je     0x140012791
   140012823:	jmp    0x1400127c9
   140012825:	xor    r9b,r9b
   140012828:	movzx  ecx,r9b
   14001282c:	test   r9b,r9b
   14001282f:	je     0x140012855
   140012831:	sub    ecx,0x1
   140012834:	jne    0x14001288c
   140012836:	test   bl,bl
   140012838:	jne    0x140012865
   14001283a:	movzx  eax,BYTE PTR [r10]
   14001283e:	test   al,al
   140012840:	js     0x140012865
   140012842:	movzx  eax,al
   140012845:	movzx  ecx,BYTE PTR [rax+rsi*1]
   140012849:	cmp    cl,0x1
   14001284c:	je     0x140012857
   14001284e:	cmp    cl,0x2
   140012851:	jne    0x140012865
   140012853:	jmp    0x140012857
   140012855:	xor    bl,bl
   140012857:	mov    dl,BYTE PTR [r10]
   14001285a:	test   dl,dl
   14001285c:	jne    0x1400127d5
   140012862:	inc    r10
   140012865:	movzx  eax,dl
   140012868:	or     al,r8b
   14001286b:	je     0x14001289c
   14001286d:	movzx  ecx,dl
   140012870:	movzx  eax,r8b
   140012874:	sub    eax,ecx
   140012876:	je     0x140012791
   14001287c:	mov    rbx,QWORD PTR [rsp+0x8]
   140012881:	mov    rsi,QWORD PTR [rsp+0x10]
   140012886:	mov    rdi,QWORD PTR [rsp+0x18]
   14001288b:	ret    
   14001288c:	cmp    ecx,0x1
   14001288f:	je     0x140012898
   140012891:	mov    dl,r9b
   140012894:	xor    bl,bl
   140012896:	jmp    0x140012865
   140012898:	mov    bl,0x1
   14001289a:	jmp    0x140012865
   14001289c:	mov    rbx,QWORD PTR [rsp+0x8]
   1400128a1:	mov    rsi,QWORD PTR [rsp+0x10]
   1400128a6:	mov    rdi,QWORD PTR [rsp+0x18]
   1400128ab:	xor    eax,eax
   1400128ad:	ret    
   1400128ae:	int3   
   1400128af:	int3   
   1400128b0:	rex push rbx
   1400128b2:	push   rdi
   1400128b3:	push   r12
   1400128b5:	push   r15
   1400128b7:	sub    rsp,0x88
   1400128be:	mov    rax,QWORD PTR [rip+0x53feb]        # 0x1400668b0
   1400128c5:	xor    rax,rsp
   1400128c8:	mov    QWORD PTR [rsp+0x68],rax
   1400128cd:	mov    rax,QWORD PTR [rip+0x55dfc]        # 0x1400686d0
   1400128d4:	xor    ebx,ebx
   1400128d6:	mov    r15,r8
   1400128d9:	cmp    WORD PTR [rax],bx
   1400128dc:	mov    QWORD PTR [rsp+0x20],rdx
   1400128e1:	mov    r12,rcx
   1400128e4:	sete   bl
   1400128e7:	test   ebx,ebx
   1400128e9:	jne    0x140012923
   1400128eb:	or     rcx,0xffffffffffffffff
   1400128ef:	xor    eax,eax
   1400128f1:	mov    rdi,r12
   1400128f4:	repnz scas al,BYTE PTR es:[rdi]
   1400128f6:	not    rcx
   1400128f9:	dec    rcx
   1400128fc:	cmp    rcx,0x3c
   140012900:	jb     0x140012911
   140012902:	mov    DWORD PTR [r8],0xf
   140012909:	or     eax,0xffffffff
   14001290c:	jmp    0x1400129dc
   140012911:	lea    rcx,[rsp+0x28]
   140012916:	mov    rdx,r12
   140012919:	call   0x1400126c0
   14001291e:	lea    r12,[rsp+0x28]
   140012923:	mov    QWORD PTR [rsp+0xc8],rbp
   14001292b:	mov    QWORD PTR [rsp+0x80],rsi
   140012933:	mov    esi,DWORD PTR [rip+0x55dbb]        # 0x1400686f4
   140012939:	mov    QWORD PTR [rsp+0x78],r13
   14001293e:	mov    edi,esi
   140012940:	xor    ebp,ebp
   140012942:	shr    edi,1
   140012944:	mov    QWORD PTR [rsp+0x70],r14
   140012949:	movsxd r13,ebx
   14001294c:	cmp    edi,0xffffffff
   14001294f:	je     0x1400129bf
   140012951:	mov    r14,QWORD PTR [rip+0x55d58]        # 0x1400686b0
   140012958:	mov    ebx,edi
   14001295a:	test   r13,r13
   14001295d:	je     0x140012979
   14001295f:	movzx  ecx,WORD PTR [r14+rdi*2]
   140012964:	mov    rax,QWORD PTR [rip+0x55d6d]        # 0x1400686d8
   14001296b:	lea    rdx,[rax+rcx*2]
   14001296f:	mov    rcx,r12
   140012972:	call   0x140012770
   140012977:	jmp    0x1400129a8
   140012979:	mov    rax,QWORD PTR [rip+0x55d60]        # 0x1400686e0
   140012980:	movzx  ecx,WORD PTR [r14+rdi*2]
   140012985:	lea    rdx,[rax+rcx*2]
   140012989:	mov    rax,r12
   14001298c:	sub    rdx,r12
   14001298f:	nop
   140012990:	movzx  ecx,BYTE PTR [rax]
   140012993:	cmp    cl,BYTE PTR [rax+rdx*1]
   140012996:	jne    0x1400129a3
   140012998:	inc    rax
   14001299b:	test   cl,cl
   14001299d:	jne    0x140012990
   14001299f:	xor    eax,eax
   1400129a1:	jmp    0x1400129a8
   1400129a3:	sbb    eax,eax
   1400129a5:	sbb    eax,0xffffffff
   1400129a8:	test   eax,eax
   1400129aa:	jns    0x1400129b0
   1400129ac:	mov    esi,edi
   1400129ae:	jmp    0x1400129b6
   1400129b0:	test   eax,eax
   1400129b2:	jle    0x1400129f7
   1400129b4:	mov    ebp,edi
   1400129b6:	lea    edi,[rsi+rbp*1]
   1400129b9:	shr    edi,1
   1400129bb:	cmp    ebx,edi
   1400129bd:	jne    0x140012958
   1400129bf:	or     eax,0xffffffff
   1400129c2:	mov    r13,QWORD PTR [rsp+0x78]
   1400129c7:	mov    rsi,QWORD PTR [rsp+0x80]
   1400129cf:	mov    rbp,QWORD PTR [rsp+0xc8]
   1400129d7:	mov    r14,QWORD PTR [rsp+0x70]
   1400129dc:	mov    rcx,QWORD PTR [rsp+0x68]
   1400129e1:	xor    rcx,rsp
   1400129e4:	call   0x14002b250
   1400129e9:	add    rsp,0x88
   1400129f0:	pop    r15
   1400129f2:	pop    r12
   1400129f4:	pop    rdi
   1400129f5:	pop    rbx
   1400129f6:	ret    
   1400129f7:	mov    rcx,QWORD PTR [rip+0x55cba]        # 0x1400686b8
   1400129fe:	mov    eax,0x8000
   140012a03:	mov    edx,edi
   140012a05:	test   WORD PTR [rcx+rdi*2],ax
   140012a09:	je     0x140012a19
   140012a0b:	mov    DWORD PTR [r15],0xffffff86
   140012a12:	mov    rcx,QWORD PTR [rip+0x55c9f]        # 0x1400686b8
   140012a19:	mov    rdi,QWORD PTR [rsp+0x20]
   140012a1e:	test   rdi,rdi
   140012a21:	je     0x140012a4a
   140012a23:	mov    rax,QWORD PTR [rip+0x55ca6]        # 0x1400686d0
   140012a2a:	cmp    BYTE PTR [rax+0x2],0x0
   140012a2e:	je     0x140012a3f
   140012a30:	mov    eax,0x4000
   140012a35:	test   WORD PTR [rcx+rdx*2],ax
   140012a39:	jne    0x140012a3f
   140012a3b:	xor    eax,eax
   140012a3d:	jmp    0x140012a41
   140012a3f:	mov    al,0x1
   140012a41:	mov    BYTE PTR [rdi],al
   140012a43:	mov    rcx,QWORD PTR [rip+0x55c6e]        # 0x1400686b8
   140012a4a:	movzx  eax,WORD PTR [rcx+rdx*2]
   140012a4e:	and    eax,0xfff
   140012a53:	jmp    0x1400129c2
   140012a58:	int3   
   140012a59:	int3   
   140012a5a:	int3   
   140012a5b:	int3   
   140012a5c:	int3   
   140012a5d:	int3   
   140012a5e:	int3   
   140012a5f:	int3   
   140012a60:	mov    QWORD PTR [rsp+0x8],rbx
   140012a65:	mov    QWORD PTR [rsp+0x10],rsi
   140012a6a:	push   rdi
   140012a6b:	sub    rsp,0x20
   140012a6f:	mov    rbx,rcx
   140012a72:	mov    rcx,r8
   140012a75:	mov    rdi,r8
   140012a78:	mov    rsi,rdx
   140012a7b:	call   0x140012490
   140012a80:	test   al,al
   140012a82:	je     0x140012a8f
   140012a84:	test   rbx,rbx
   140012a87:	jne    0x140012aa1
   140012a89:	mov    DWORD PTR [rdi],0x1
   140012a8f:	xor    eax,eax
   140012a91:	mov    rbx,QWORD PTR [rsp+0x30]
   140012a96:	mov    rsi,QWORD PTR [rsp+0x38]
   140012a9b:	add    rsp,0x20
   140012a9f:	pop    rdi
   140012aa0:	ret    
   140012aa1:	cmp    BYTE PTR [rbx],0x0
   140012aa4:	setne  al
   140012aa7:	test   al,al
   140012aa9:	je     0x140012a8f
   140012aab:	mov    r8,rdi
   140012aae:	mov    rdx,rsi
   140012ab1:	mov    rcx,rbx
   140012ab4:	call   0x1400128b0
   140012ab9:	cmp    eax,DWORD PTR [rip+0x55c29]        # 0x1400686e8
   140012abf:	jae    0x140012a8f
   140012ac1:	mov    rbx,QWORD PTR [rsp+0x30]
   140012ac6:	mov    rsi,QWORD PTR [rsp+0x38]
   140012acb:	mov    ecx,eax
   140012acd:	mov    rax,QWORD PTR [rip+0x55bcc]        # 0x1400686a0
   140012ad4:	movzx  edx,WORD PTR [rax+rcx*2]
   140012ad8:	mov    rax,QWORD PTR [rip+0x55bf9]        # 0x1400686d8
   140012adf:	lea    rax,[rax+rdx*2]
   140012ae3:	add    rsp,0x20
   140012ae7:	pop    rdi
   140012ae8:	ret    
   140012ae9:	int3   
   140012aea:	int3   
   140012aeb:	int3   
   140012aec:	int3   
   140012aed:	int3   
   140012aee:	int3   
   140012aef:	int3   
   140012af0:	mov    rax,QWORD PTR [rcx+0x8]
   140012af4:	mov    ecx,DWORD PTR [rax]
   140012af6:	test   ecx,ecx
   140012af8:	je     0x140012b06
   140012afa:	mov    rax,QWORD PTR [rip+0x55bc7]        # 0x1400686c8
   140012b01:	movzx  eax,WORD PTR [rax+rcx*2]
   140012b05:	ret    
   140012b06:	xor    eax,eax
   140012b08:	ret    
   140012b09:	int3   
   140012b0a:	int3   
   140012b0b:	int3   
   140012b0c:	int3   
   140012b0d:	int3   
   140012b0e:	int3   
   140012b0f:	int3   
   140012b10:	mov    QWORD PTR [rsp+0x8],rdi
   140012b15:	mov    rdi,QWORD PTR [rcx+0x8]
   140012b19:	mov    eax,DWORD PTR [rdi]
   140012b1b:	test   eax,eax
   140012b1d:	je     0x140012b74
   140012b1f:	mov    r8,QWORD PTR [rip+0x55ba2]        # 0x1400686c8
   140012b26:	mov    r9d,DWORD PTR [rdi+0x4]
   140012b2a:	mov    rcx,rax
   140012b2d:	movzx  eax,WORD PTR [r8+rax*2]
   140012b32:	cmp    r9d,eax
   140012b35:	jae    0x140012b74
   140012b37:	lea    rax,[rcx+r9*1]
   140012b3b:	movzx  ecx,WORD PTR [r8+rax*2+0x2]
   140012b41:	mov    rax,QWORD PTR [rip+0x55b90]        # 0x1400686d8
   140012b48:	lea    r8,[rax+rcx*2]
   140012b4c:	lea    ecx,[r9+0x1]
   140012b50:	mov    DWORD PTR [rdi+0x4],ecx
   140012b53:	test   rdx,rdx
   140012b56:	je     0x140012b6b
   140012b58:	or     rcx,0xffffffffffffffff
   140012b5c:	xor    eax,eax
   140012b5e:	mov    rdi,r8
   140012b61:	repnz scas al,BYTE PTR es:[rdi]
   140012b63:	not    rcx
   140012b66:	dec    rcx
   140012b69:	mov    DWORD PTR [rdx],ecx
   140012b6b:	mov    rax,r8
   140012b6e:	mov    rdi,QWORD PTR [rsp+0x8]
   140012b73:	ret    
   140012b74:	test   rdx,rdx
   140012b77:	je     0x140012b7f
   140012b79:	mov    DWORD PTR [rdx],0x0
   140012b7f:	mov    rdi,QWORD PTR [rsp+0x8]
   140012b84:	xor    eax,eax
   140012b86:	ret    
   140012b87:	int3   
   140012b88:	int3   
   140012b89:	int3   
   140012b8a:	int3   
   140012b8b:	int3   
   140012b8c:	int3   
   140012b8d:	int3   
   140012b8e:	int3   
   140012b8f:	int3   
   140012b90:	mov    rax,QWORD PTR [rcx+0x8]
   140012b94:	mov    DWORD PTR [rax+0x4],0x0
   140012b9b:	ret    
   140012b9c:	int3   
   140012b9d:	int3   
   140012b9e:	int3   
   140012b9f:	int3   
   140012ba0:	rex push rbx
   140012ba2:	sub    rsp,0x20
   140012ba6:	mov    rbx,rcx
   140012ba9:	mov    rcx,QWORD PTR [rcx+0x8]
   140012bad:	call   0x140010a40
   140012bb2:	mov    rcx,rbx
   140012bb5:	add    rsp,0x20
   140012bb9:	pop    rbx
   140012bba:	jmp    0x140010a40
   140012bbf:	int3   
   140012bc0:	mov    eax,DWORD PTR [rip+0x55b22]        # 0x1400686e8
   140012bc6:	ret    
   140012bc7:	int3   
   140012bc8:	int3   
   140012bc9:	int3   
   140012bca:	int3   
   140012bcb:	int3   
   140012bcc:	int3   
   140012bcd:	int3   
   140012bce:	int3   
   140012bcf:	int3   
   140012bd0:	mov    QWORD PTR [rsp+0x8],rdi
   140012bd5:	mov    r9,QWORD PTR [rcx+0x8]
   140012bd9:	movzx  edi,WORD PTR [r9]
   140012bdd:	cmp    edi,DWORD PTR [rip+0x55b05]        # 0x1400686e8
   140012be3:	jae    0x140012c23
   140012be5:	mov    rax,QWORD PTR [rip+0x55ab4]        # 0x1400686a0
   140012bec:	movzx  ecx,WORD PTR [rax+rdi*2]
   140012bf0:	mov    rax,QWORD PTR [rip+0x55ae1]        # 0x1400686d8
   140012bf7:	inc    di
   140012bfa:	mov    WORD PTR [r9],di
   140012bfe:	lea    r8,[rax+rcx*2]
   140012c02:	test   rdx,rdx
   140012c05:	je     0x140012c1a
   140012c07:	or     rcx,0xffffffffffffffff
   140012c0b:	xor    eax,eax
   140012c0d:	mov    rdi,r8
   140012c10:	repnz scas al,BYTE PTR es:[rdi]
   140012c12:	not    rcx
   140012c15:	dec    rcx
   140012c18:	mov    DWORD PTR [rdx],ecx
   140012c1a:	mov    rax,r8
   140012c1d:	mov    rdi,QWORD PTR [rsp+0x8]
   140012c22:	ret    
   140012c23:	test   rdx,rdx
   140012c26:	je     0x140012c2e
   140012c28:	mov    DWORD PTR [rdx],0x0
   140012c2e:	mov    rdi,QWORD PTR [rsp+0x8]
   140012c33:	xor    eax,eax
   140012c35:	ret    
   140012c36:	int3   
   140012c37:	int3   
   140012c38:	int3   
   140012c39:	int3   
   140012c3a:	int3   
   140012c3b:	int3   
   140012c3c:	int3   
   140012c3d:	int3   
   140012c3e:	int3   
   140012c3f:	int3   
   140012c40:	mov    rax,QWORD PTR [rcx+0x8]
   140012c44:	xor    ecx,ecx
   140012c46:	mov    WORD PTR [rax],cx
   140012c49:	ret    
   140012c4a:	int3   
   140012c4b:	int3   
   140012c4c:	int3   
   140012c4d:	int3   
   140012c4e:	int3   
   140012c4f:	int3   
   140012c50:	sub    rsp,0x28
   140012c54:	call   0x140012490
   140012c59:	test   al,al
   140012c5b:	je     0x140012c69
   140012c5d:	mov    ax,WORD PTR [rip+0x55a84]        # 0x1400686e8
   140012c64:	add    rsp,0x28
   140012c68:	ret    
   140012c69:	xor    eax,eax
   140012c6b:	add    rsp,0x28
   140012c6f:	ret    
   140012c70:	mov    DWORD PTR [rsp+0x20],r9d
   140012c75:	mov    QWORD PTR [rsp+0x10],rdx
   140012c7a:	mov    QWORD PTR [rsp+0x8],rcx
   140012c7f:	push   rbx
   140012c80:	push   rbp
   140012c81:	push   rsi
   140012c82:	push   rdi
   140012c83:	sub    rsp,0xd8
   140012c8a:	mov    r11d,DWORD PTR [rsp+0x120]
   140012c92:	mov    rbp,QWORD PTR [rcx+0x18]
   140012c96:	movsxd rax,r8d
   140012c99:	movsx  r8d,BYTE PTR [rax+rdx*1]
   140012c9e:	mov    r10d,r9d
   140012ca1:	mov    r9,rax
   140012ca4:	shl    r9,0xa
   140012ca8:	shl    r11d,0x8
   140012cac:	mov    eax,r8d
   140012caf:	add    r9,QWORD PTR [rcx+0x8]
   140012cb3:	and    eax,0x38
   140012cb6:	or     esi,0xffffffff
   140012cb9:	lea    ebx,[rax*4+0x0]
   140012cc0:	mov    DWORD PTR [rsp+0x120],r11d
   140012cc8:	mov    edx,r8d
   140012ccb:	mov    QWORD PTR [rsp+0x40],r9
   140012cd0:	test   ebx,ebx
   140012cd2:	jne    0x140012ce3
   140012cd4:	cmp    r8b,0x40
   140012cd8:	jl     0x140012ce3
   140012cda:	mov    DWORD PTR [rsp+0x50],esi
   140012cde:	mov    ebx,0x1
   140012ce3:	and    edx,0x7
   140012ce6:	movsxd rdi,ebx
   140012ce9:	lea    eax,[rdx+0x1]
   140012cec:	shl    eax,0x5
   140012cef:	cdqe   
   140012cf1:	cmp    rdi,rax
   140012cf4:	mov    QWORD PTR [rsp+0x48],rax
   140012cf9:	jge    0x140012ed4
   140012cff:	lea    ecx,[rbx-0x20]
   140012d02:	mov    DWORD PTR [rsp+0x110],ecx
   140012d09:	nop    DWORD PTR [rax+0x0]
   140012d10:	mov    edx,DWORD PTR [r9+rdi*4]
   140012d14:	test   edx,edx
   140012d16:	js     0x140012dad
   140012d1c:	mov    r9,QWORD PTR [rsp+0x108]
   140012d24:	mov    r8d,edx
   140012d27:	sar    r8d,0x18
   140012d2b:	movsxd rax,r8d
   140012d2e:	cmp    BYTE PTR [rax+r9*1],0x0
   140012d33:	jl     0x140012d9b
   140012d35:	mov    rcx,QWORD PTR [rsp+0x138]
   140012d3d:	and    edx,0xffffff
   140012d43:	mov    eax,ebx
   140012d45:	mov    QWORD PTR [rsp+0x38],rcx
   140012d4a:	mov    rcx,QWORD PTR [rsp+0x130]
   140012d52:	lea    r9d,[r10+rdx*1]
   140012d56:	mov    rdx,QWORD PTR [rsp+0x108]
   140012d5e:	mov    QWORD PTR [rsp+0x30],rcx
   140012d63:	mov    rcx,QWORD PTR [rsp+0x128]
   140012d6b:	mov    QWORD PTR [rsp+0x28],rcx
   140012d70:	mov    rcx,QWORD PTR [rsp+0x100]
   140012d78:	or     eax,r11d
   140012d7b:	mov    DWORD PTR [rsp+0x20],eax
   140012d7f:	call   0x140012c70
   140012d84:	test   al,al
   140012d86:	je     0x140012ec6
   140012d8c:	mov    ecx,DWORD PTR [rsp+0x110]
   140012d93:	mov    r11d,DWORD PTR [rsp+0x120]
   140012d9b:	mov    eax,ebx
   140012d9d:	and    eax,0x1f
   140012da0:	mov    DWORD PTR [rsp+rax*4+0x50],0xffffffff
   140012da8:	jmp    0x140012e30
   140012dad:	mov    eax,edx
   140012daf:	sar    eax,0x14
   140012db2:	and    eax,0xf
   140012db5:	jne    0x140012dbc
   140012db7:	movzx  edx,dx
   140012dba:	jmp    0x140012e25
   140012dbc:	cmp    eax,0x4
   140012dbf:	jne    0x140012ddb
   140012dc1:	movzx  eax,dx
   140012dc4:	add    eax,r10d
   140012dc7:	cdqe   
   140012dc9:	movzx  edx,WORD PTR [rbp+rax*2+0x0]
   140012dce:	cmp    edx,0xfffe
   140012dd4:	jl     0x140012e25
   140012dd6:	or     edx,0xffffffff
   140012dd9:	jmp    0x140012e25
   140012ddb:	cmp    eax,0x5
   140012dde:	jne    0x140012eac
   140012de4:	movzx  ecx,dx
   140012de7:	add    ecx,r10d
   140012dea:	movsxd rax,ecx
   140012ded:	inc    ecx
   140012def:	movzx  edx,WORD PTR [rbp+rax*2+0x0]
   140012df4:	cmp    edx,0xd800
   140012dfa:	jl     0x140012e1e
   140012dfc:	cmp    edx,0xdbff
   140012e02:	jg     0x140012e8f
   140012e08:	and    edx,0x3ff
   140012e0e:	movsxd rax,ecx
   140012e11:	movzx  ecx,WORD PTR [rbp+rax*2+0x0]
   140012e16:	add    edx,0x9
   140012e19:	shl    edx,0xa
   140012e1c:	add    edx,ecx
   140012e1e:	mov    ecx,DWORD PTR [rsp+0x110]
   140012e25:	mov    eax,ebx
   140012e27:	and    eax,0x1f
   140012e2a:	and    esi,edx
   140012e2c:	mov    DWORD PTR [rsp+rax*4+0x50],edx
   140012e30:	inc    ecx
   140012e32:	inc    ebx
   140012e34:	inc    rdi
   140012e37:	mov    DWORD PTR [rsp+0x110],ecx
   140012e3e:	test   bl,0x1f
   140012e41:	jne    0x140012e6e
   140012e43:	test   esi,esi
   140012e45:	js     0x140012e6e
   140012e47:	mov    edx,ecx
   140012e49:	mov    rcx,QWORD PTR [rsp+0x130]
   140012e51:	lea    r8,[rsp+0x50]
   140012e56:	or     edx,r11d
   140012e59:	call   QWORD PTR [rsp+0x128]
   140012e60:	test   al,al
   140012e62:	je     0x140012ec6
   140012e64:	mov    ecx,DWORD PTR [rsp+0x110]
   140012e6b:	or     esi,0xffffffff
   140012e6e:	cmp    rdi,QWORD PTR [rsp+0x48]
   140012e73:	jge    0x140012ed4
   140012e75:	mov    r9,QWORD PTR [rsp+0x40]
   140012e7a:	mov    r10d,DWORD PTR [rsp+0x118]
   140012e82:	mov    r11d,DWORD PTR [rsp+0x120]
   140012e8a:	jmp    0x140012d10
   140012e8f:	cmp    edx,0xe000
   140012e95:	jne    0x140012ea4
   140012e97:	movsxd rax,ecx
   140012e9a:	movzx  edx,WORD PTR [rbp+rax*2+0x0]
   140012e9f:	jmp    0x140012e1e
   140012ea4:	or     edx,0xffffffff
   140012ea7:	jmp    0x140012e1e
   140012eac:	cmp    eax,0x1
   140012eaf:	jne    0x140012dd6
   140012eb5:	and    edx,0xfffff
   140012ebb:	add    edx,0x10000
   140012ec1:	jmp    0x140012e25
   140012ec6:	xor    al,al
   140012ec8:	add    rsp,0xd8
   140012ecf:	pop    rdi
   140012ed0:	pop    rsi
   140012ed1:	pop    rbp
   140012ed2:	pop    rbx
   140012ed3:	ret    
   140012ed4:	mov    al,0x1
   140012ed6:	add    rsp,0xd8
   140012edd:	pop    rdi
   140012ede:	pop    rsi
   140012edf:	pop    rbp
   140012ee0:	pop    rbx
   140012ee1:	ret    
   140012ee2:	int3   
   140012ee3:	int3   
   140012ee4:	int3   
   140012ee5:	int3   
   140012ee6:	int3   
   140012ee7:	int3   
   140012ee8:	int3   
   140012ee9:	int3   
   140012eea:	int3   
   140012eeb:	int3   
   140012eec:	int3   
   140012eed:	int3   
   140012eee:	int3   
   140012eef:	int3   
   140012ef0:	mov    QWORD PTR [rsp+0x18],rbx
   140012ef5:	mov    QWORD PTR [rsp+0x8],rcx
   140012efa:	push   rbp
   140012efb:	push   rsi
   140012efc:	push   rdi
   140012efd:	sub    rsp,0x30
   140012f01:	movsxd rax,r8d
   140012f04:	mov    r10,rcx
   140012f07:	mov    rbx,rdx
   140012f0a:	mov    r9,rax
   140012f0d:	mov    QWORD PTR [rsp+0x58],rax
   140012f12:	mov    BYTE PTR [rax+rdx*1],0x0
   140012f16:	shl    r9,0xa
   140012f1a:	add    r9,rcx
   140012f1d:	xor    ebp,ebp
   140012f1f:	mov    ecx,0xff
   140012f24:	mov    rdi,rbp
   140012f27:	mov    QWORD PTR [rsp+0x20],rcx
   140012f2c:	mov    QWORD PTR [rsp+0x68],r9
   140012f31:	mov    esi,DWORD PTR [r9+rdi*4]
   140012f35:	mov    r8d,esi
   140012f38:	sar    r8d,0x18
   140012f3c:	and    r8d,0x7f
   140012f40:	movsxd rax,r8d
   140012f43:	mov    QWORD PTR [rsp+0x28],rax
   140012f48:	cmp    BYTE PTR [rax+rbx*1],0xff
   140012f4c:	jne    0x140012f6d
   140012f4e:	mov    rdx,rbx
   140012f51:	mov    rcx,r10
   140012f54:	call   0x140012ef0
   140012f59:	mov    rax,QWORD PTR [rsp+0x28]
   140012f5e:	mov    r9,QWORD PTR [rsp+0x68]
   140012f63:	mov    r10,QWORD PTR [rsp+0x50]
   140012f68:	mov    ecx,0xff
   140012f6d:	test   esi,esi
   140012f6f:	js     0x140012fe3
   140012f71:	cmp    BYTE PTR [rax+rbx*1],0x0
   140012f75:	jl     0x140012ff1
   140012f77:	mov    rdx,QWORD PTR [rsp+0x58]
   140012f7c:	sar    ebp,0x2
   140012f7f:	and    bpl,0xf8
   140012f83:	or     BYTE PTR [rdx+rbx*1],bpl
   140012f87:	cmp    rdi,rcx
   140012f8a:	mov    rbp,rcx
   140012f8d:	jge    0x140013043
   140012f93:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140012fa0:	mov    esi,DWORD PTR [r9+rbp*4]
   140012fa4:	mov    r8d,esi
   140012fa7:	sar    r8d,0x18
   140012fab:	and    r8d,0x7f
   140012faf:	movsxd rax,r8d
   140012fb2:	mov    QWORD PTR [rsp+0x28],rax
   140012fb7:	cmp    BYTE PTR [rax+rbx*1],0xff
   140012fbb:	jne    0x140012fd7
   140012fbd:	mov    rdx,rbx
   140012fc0:	mov    rcx,r10
   140012fc3:	call   0x140012ef0
   140012fc8:	mov    rcx,QWORD PTR [rsp+0x20]
   140012fcd:	mov    rax,QWORD PTR [rsp+0x28]
   140012fd2:	mov    r9,QWORD PTR [rsp+0x68]
   140012fd7:	test   esi,esi
   140012fd9:	js     0x140013018
   140012fdb:	cmp    BYTE PTR [rax+rbx*1],0x0
   140012fdf:	jge    0x14001303e
   140012fe1:	jmp    0x140013026
   140012fe3:	and    esi,0xf00000
   140012fe9:	cmp    esi,0x600000
   140012fef:	jl     0x140012f77
   140012ff1:	cmp    rdi,rcx
   140012ff4:	je     0x140013000
   140012ff6:	inc    ebp
   140012ff8:	inc    rdi
   140012ffb:	jmp    0x140012f31
   140013000:	mov    rax,QWORD PTR [rsp+0x58]
   140013005:	mov    BYTE PTR [rax+rbx*1],0xc0
   140013009:	mov    al,0xc0
   14001300b:	mov    rbx,QWORD PTR [rsp+0x60]
   140013010:	add    rsp,0x30
   140013014:	pop    rdi
   140013015:	pop    rsi
   140013016:	pop    rbp
   140013017:	ret    
   140013018:	and    esi,0xf00000
   14001301e:	cmp    esi,0x600000
   140013024:	jl     0x14001303e
   140013026:	mov    r10,QWORD PTR [rsp+0x50]
   14001302b:	dec    ecx
   14001302d:	dec    rbp
   140013030:	cmp    rdi,rbp
   140013033:	mov    QWORD PTR [rsp+0x20],rcx
   140013038:	jl     0x140012fa0
   14001303e:	mov    rdx,QWORD PTR [rsp+0x58]
   140013043:	mov    eax,ecx
   140013045:	sar    eax,0x5
   140013048:	or     BYTE PTR [rdx+rbx*1],al
   14001304b:	movsxd rax,ecx
   14001304e:	cmp    rdi,rax
   140013051:	mov    QWORD PTR [rsp+0x28],rax
   140013056:	jg     0x1400130b6
   140013058:	nop    DWORD PTR [rax+rax*1+0x0]
   140013060:	mov    esi,DWORD PTR [r9+rdi*4]
   140013064:	mov    r8d,esi
   140013067:	sar    r8d,0x18
   14001306b:	and    r8d,0x7f
   14001306f:	movsxd rbp,r8d
   140013072:	cmp    BYTE PTR [rbx+rbp*1],0xff
   140013076:	jne    0x140013094
   140013078:	mov    rcx,QWORD PTR [rsp+0x50]
   14001307d:	mov    rdx,rbx
   140013080:	call   0x140012ef0
   140013085:	mov    rax,QWORD PTR [rsp+0x28]
   14001308a:	mov    rdx,QWORD PTR [rsp+0x58]
   14001308f:	mov    r9,QWORD PTR [rsp+0x68]
   140013094:	test   esi,esi
   140013096:	jns    0x1400130ae
   140013098:	or     BYTE PTR [rbx+rbp*1],0x40
   14001309c:	and    esi,0xf00000
   1400130a2:	cmp    esi,0x300000
   1400130a8:	jg     0x1400130ae
   1400130aa:	or     BYTE PTR [rdx+rbx*1],0x40
   1400130ae:	inc    rdi
   1400130b1:	cmp    rdi,rax
   1400130b4:	jle    0x140013060
   1400130b6:	mov    al,BYTE PTR [rdx+rbx*1]
   1400130b9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400130be:	add    rsp,0x30
   1400130c2:	pop    rdi
   1400130c3:	pop    rsi
   1400130c4:	pop    rbp
   1400130c5:	ret    
   1400130c6:	int3   
   1400130c7:	int3   
   1400130c8:	int3   
   1400130c9:	int3   
   1400130ca:	int3   
   1400130cb:	int3   
   1400130cc:	int3   
   1400130cd:	int3   
   1400130ce:	int3   
   1400130cf:	int3   
   1400130d0:	rex push rbx
   1400130d2:	push   rbp
   1400130d3:	push   rsi
   1400130d4:	push   r12
   1400130d6:	push   r13
   1400130d8:	push   r14
   1400130da:	sub    rsp,0xd8
   1400130e1:	mov    rax,QWORD PTR [rip+0x537c8]        # 0x1400668b0
   1400130e8:	xor    rax,rsp
   1400130eb:	mov    QWORD PTR [rsp+0xc0],rax
   1400130f3:	mov    rsi,rcx
   1400130f6:	mov    r12,r8
   1400130f9:	mov    rbp,rdx
   1400130fc:	lea    rcx,[rsp+0x40]
   140013101:	mov    r8d,0x80
   140013107:	or     edx,0xffffffff
   14001310a:	mov    r13,r9
   14001310d:	call   0x14002b280
   140013112:	mov    rcx,QWORD PTR [rsi+0x8]
   140013116:	lea    rdx,[rsp+0x40]
   14001311b:	xor    r8d,r8d
   14001311e:	call   0x140012ef0
   140013123:	xor    r14d,r14d
   140013126:	mov    ebx,r14d
   140013129:	cmp    BYTE PTR [rsi],bl
   14001312b:	jbe    0x140013180
   14001312d:	mov    QWORD PTR [rsp+0xd0],rdi
   140013135:	lea    rdi,[rsp+0x40]
   14001313a:	nop    WORD PTR [rax+rax*1+0x0]
   140013140:	cmp    BYTE PTR [rdi],0x40
   140013143:	jl     0x14001316c
   140013145:	mov    QWORD PTR [rsp+0x38],r13
   14001314a:	mov    QWORD PTR [rsp+0x30],r12
   14001314f:	lea    rdx,[rsp+0x40]
   140013154:	xor    r9d,r9d
   140013157:	mov    r8d,ebx
   14001315a:	mov    rcx,rsi
   14001315d:	mov    QWORD PTR [rsp+0x28],rbp
   140013162:	mov    DWORD PTR [rsp+0x20],r14d
   140013167:	call   0x140012c70
   14001316c:	movzx  eax,BYTE PTR [rsi]
   14001316f:	inc    ebx
   140013171:	inc    rdi
   140013174:	cmp    ebx,eax
   140013176:	jl     0x140013140
   140013178:	mov    rdi,QWORD PTR [rsp+0xd0]
   140013180:	mov    rcx,QWORD PTR [rsp+0xc0]
   140013188:	xor    rcx,rsp
   14001318b:	call   0x14002b250
   140013190:	add    rsp,0xd8
   140013197:	pop    r14
   140013199:	pop    r13
   14001319b:	pop    r12
   14001319d:	pop    rsi
   14001319e:	pop    rbp
   14001319f:	pop    rbx
   1400131a0:	ret    
   1400131a1:	int3   
   1400131a2:	int3   
   1400131a3:	int3   
   1400131a4:	int3   
   1400131a5:	int3   
   1400131a6:	int3   
   1400131a7:	int3   
   1400131a8:	int3   
   1400131a9:	int3   
   1400131aa:	int3   
   1400131ab:	int3   
   1400131ac:	int3   
   1400131ad:	int3   
   1400131ae:	int3   
   1400131af:	int3   
   1400131b0:	mov    DWORD PTR [rsp+0x20],r9d
   1400131b5:	mov    DWORD PTR [rsp+0x18],r8d
   1400131ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400131bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400131c4:	push   rbx
   1400131c5:	push   rbp
   1400131c6:	push   rdi
   1400131c7:	sub    rsp,0x80
   1400131ce:	mov    r10,QWORD PTR [rcx+0x60]
   1400131d2:	mov    rbp,rdx
   1400131d5:	mov    rdx,rcx
   1400131d8:	test   BYTE PTR [rdx+0x105],0x1
   1400131df:	mov    r11d,r8d
   1400131e2:	mov    ecx,0x40
   1400131e7:	mov    QWORD PTR [rsp+0x48],r10
   1400131ec:	je     0x1400131fb
   1400131ee:	mov    r8d,0x440
   1400131f4:	mov    DWORD PTR [rsp+0x34],r8d
   1400131f9:	jmp    0x140013204
   1400131fb:	mov    r8w,cx
   1400131ff:	mov    DWORD PTR [rsp+0x34],r8d
   140013204:	movzx  eax,BYTE PTR [rdx+0x104]
   14001320b:	mov    QWORD PTR [rsp+0x78],rsi
   140013210:	mov    QWORD PTR [rsp+0x70],r12
   140013215:	xor    edi,edi
   140013217:	mov    QWORD PTR [rsp+0x68],r13
   14001321c:	mov    QWORD PTR [rsp+0x60],r14
   140013221:	mov    QWORD PTR [rsp+0x58],r15
   140013226:	mov    ebx,edi
   140013228:	test   al,al
   14001322a:	jne    0x140013342
   140013230:	mov    r13,QWORD PTR [rdx+0xf0]
   140013237:	mov    QWORD PTR [rsp+0x40],r13
   14001323c:	test   r11d,r11d
   14001323f:	jne    0x140013248
   140013241:	mov    esi,0xf00
   140013246:	jmp    0x14001324d
   140013248:	mov    esi,0x800
   14001324d:	cmp    di,r8w
   140013251:	jae    0x1400132f6
   140013257:	mov    r14,r10
   14001325a:	movzx  r15d,r8w
   14001325e:	xchg   ax,ax
   140013260:	movzx  eax,WORD PTR [r14]
   140013264:	cmp    ax,r8w
   140013268:	jbe    0x1400132d2
   14001326a:	movzx  eax,ax
   14001326d:	mov    r12,rcx
   140013270:	lea    rbp,[r10+rax*2]
   140013274:	movzx  eax,WORD PTR [rbp+0x0]
   140013278:	test   eax,eax
   14001327a:	je     0x1400132b4
   14001327c:	lea    rdi,[r13+rax*2+0x0]
   140013281:	mov    r13,QWORD PTR [rsp+0xa8]
   140013289:	nop    DWORD PTR [rax+0x0]
   140013290:	movzx  eax,WORD PTR [rdi]
   140013293:	add    rdi,0x2
   140013297:	cmp    ax,si
   14001329a:	jb     0x1400132a6
   14001329c:	mov    rcx,QWORD PTR [r13+0x0]
   1400132a0:	mov    edx,ebx
   1400132a2:	call   QWORD PTR [r13+0x8]
   1400132a6:	inc    ebx
   1400132a8:	test   bl,0xf
   1400132ab:	jne    0x140013290
   1400132ad:	mov    r13,QWORD PTR [rsp+0x40]
   1400132b2:	jmp    0x1400132b7
   1400132b4:	add    ebx,0x10
   1400132b7:	add    rbp,0x2
   1400132bb:	sub    r12,0x1
   1400132bf:	jne    0x140013274
   1400132c1:	mov    r8d,DWORD PTR [rsp+0x34]
   1400132c6:	mov    r10,QWORD PTR [rsp+0x48]
   1400132cb:	lea    ecx,[r12+0x40]
   1400132d0:	jmp    0x1400132d8
   1400132d2:	add    ebx,0x400
   1400132d8:	add    r14,0x2
   1400132dc:	sub    r15,0x1
   1400132e0:	jne    0x140013260
   1400132e6:	mov    rbp,QWORD PTR [rsp+0xa8]
   1400132ee:	mov    r11d,DWORD PTR [rsp+0xb0]
   1400132f6:	mov    rax,QWORD PTR [rsp+0xc0]
   1400132fe:	mov    r9d,DWORD PTR [rsp+0xb8]
   140013306:	mov    rcx,QWORD PTR [rsp+0xa0]
   14001330e:	mov    r8d,r11d
   140013311:	mov    rdx,rbp
   140013314:	mov    QWORD PTR [rsp+0x20],rax
   140013319:	call   0x14002a2b0
   14001331e:	mov    r15,QWORD PTR [rsp+0x58]
   140013323:	mov    r14,QWORD PTR [rsp+0x60]
   140013328:	mov    r13,QWORD PTR [rsp+0x68]
   14001332d:	mov    r12,QWORD PTR [rsp+0x70]
   140013332:	mov    rsi,QWORD PTR [rsp+0x78]
   140013337:	add    rsp,0x80
   14001333e:	pop    rdi
   14001333f:	pop    rbp
   140013340:	pop    rbx
   140013341:	ret    
   140013342:	mov    rdx,QWORD PTR [rdx+0xf0]
   140013349:	cmp    r11d,0x1
   14001334d:	movzx  ecx,al
   140013350:	sete   r12b
   140013354:	sub    ecx,0x2
   140013357:	mov    QWORD PTR [rsp+0x38],rdx
   14001335c:	je     0x140013378
   14001335e:	sub    ecx,0x1
   140013361:	je     0x140013370
   140013363:	sub    ecx,0x6
   140013366:	je     0x140013378
   140013368:	mov    r13d,0x2
   14001336e:	jmp    0x14001337e
   140013370:	mov    r13d,0x4
   140013376:	jmp    0x14001337e
   140013378:	mov    r13d,0x3
   14001337e:	movzx  eax,di
   140013381:	mov    WORD PTR [rsp+0x30],ax
   140013386:	cmp    di,r8w
   14001338a:	jae    0x1400132f6
   140013390:	shr    r8w,1
   140013394:	mov    r11d,0x5e5f
   14001339a:	mov    WORD PTR [rsp+0x32],r8w
   1400133a0:	movzx  eax,ax
   1400133a3:	movzx  ecx,WORD PTR [r10+rax*2]
   1400133a8:	cmp    cx,r8w
   1400133ac:	jbe    0x14001361d
   1400133b2:	movzx  eax,cx
   1400133b5:	movzx  r14d,di
   1400133b9:	lea    r15,[r10+rax*4]
   1400133bd:	mov    QWORD PTR [rsp+0x40],r15
   1400133c2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400133d0:	movzx  eax,r14w
   1400133d4:	mov    esi,DWORD PTR [r15+rax*4]
   1400133d8:	test   esi,esi
   1400133da:	je     0x1400135f6
   1400133e0:	movzx  edi,si
   1400133e3:	shr    esi,0x10
   1400133e6:	imul   edi,r13d
   1400133ea:	shl    edi,0x4
   1400133ed:	add    rdi,rdx
   1400133f0:	cmp    r9d,0x5
   1400133f4:	ja     0x140013640
   1400133fa:	lea    rdx,[rip+0xfffffffffffecbff]        # 0x140000000
   140013401:	movsxd rax,r9d
   140013404:	mov    ecx,DWORD PTR [rdx+rax*4+0x13654]
   14001340b:	add    rcx,rdx
   14001340e:	jmp    rcx
   140013410:	test   sil,0x1
   140013414:	je     0x140013427
   140013416:	mov    rcx,QWORD PTR [rbp+0x0]
   14001341a:	mov    edx,ebx
   14001341c:	call   QWORD PTR [rbp+0x8]
   14001341f:	mov    r11d,r13d
   140013422:	add    rdi,r11
   140013425:	jmp    0x140013463
   140013427:	test   r12b,r12b
   14001342a:	je     0x140013463
   14001342c:	mov    eax,r13d
   14001342f:	xor    cl,cl
   140013431:	sub    eax,0x2
   140013434:	je     0x14001344b
   140013436:	sub    eax,0x1
   140013439:	je     0x140013446
   14001343b:	sub    eax,0x1
   14001343e:	jne    0x140013463
   140013440:	movzx  ecx,BYTE PTR [rdi]
   140013443:	inc    rdi
   140013446:	or     cl,BYTE PTR [rdi]
   140013448:	inc    rdi
   14001344b:	movzx  eax,BYTE PTR [rdi+0x1]
   14001344f:	add    rdi,0x2
   140013453:	or     al,BYTE PTR [rdi-0x2]
   140013456:	or     cl,al
   140013458:	je     0x140013463
   14001345a:	mov    rcx,QWORD PTR [rbp+0x0]
   14001345e:	mov    edx,ebx
   140013460:	call   QWORD PTR [rbp+0x8]
   140013463:	inc    ebx
   140013465:	shr    esi,1
   140013467:	test   bl,0xf
   14001346a:	jne    0x140013410
   14001346c:	mov    rdx,QWORD PTR [rsp+0x38]
   140013471:	mov    r9d,DWORD PTR [rsp+0xb8]
   140013479:	jmp    0x1400135f9
   14001347e:	mov    r15d,0x100
   140013484:	test   sil,0x1
   140013488:	jne    0x14001348f
   14001348a:	test   r12b,r12b
   14001348d:	je     0x14001349e
   14001348f:	cmp    WORD PTR [rdi],r15w
   140013493:	jb     0x14001349e
   140013495:	mov    rcx,QWORD PTR [rbp+0x0]
   140013499:	mov    edx,ebx
   14001349b:	call   QWORD PTR [rbp+0x8]
   14001349e:	inc    ebx
   1400134a0:	shr    esi,1
   1400134a2:	add    rdi,0x2
   1400134a6:	test   bl,0xf
   1400134a9:	jne    0x140013484
   1400134ab:	mov    r15,QWORD PTR [rsp+0x40]
   1400134b0:	mov    rdx,QWORD PTR [rsp+0x38]
   1400134b5:	mov    r9d,DWORD PTR [rsp+0xb8]
   1400134bd:	jmp    0x1400135f9
   1400134c2:	test   sil,0x1
   1400134c6:	jne    0x1400134cd
   1400134c8:	test   r12b,r12b
   1400134cb:	je     0x1400134e7
   1400134cd:	movzx  eax,BYTE PTR [rdi]
   1400134d0:	cmp    eax,0x81
   1400134d5:	je     0x1400134de
   1400134d7:	cmp    eax,0x82
   1400134dc:	jne    0x1400134e7
   1400134de:	mov    rcx,QWORD PTR [rbp+0x0]
   1400134e2:	mov    edx,ebx
   1400134e4:	call   QWORD PTR [rbp+0x8]
   1400134e7:	inc    ebx
   1400134e9:	shr    esi,1
   1400134eb:	add    rdi,0x3
   1400134ef:	test   bl,0xf
   1400134f2:	jne    0x1400134c2
   1400134f4:	mov    rdx,QWORD PTR [rsp+0x38]
   1400134f9:	mov    r9d,DWORD PTR [rsp+0xb8]
   140013501:	jmp    0x1400135f9
   140013506:	test   sil,0x1
   14001350a:	jne    0x140013511
   14001350c:	test   r12b,r12b
   14001350f:	je     0x140013529
   140013511:	movzx  eax,WORD PTR [rdi]
   140013514:	add    eax,0xffff7ec0
   140013519:	cmp    eax,0x6ebc
   14001351e:	ja     0x140013529
   140013520:	mov    rcx,QWORD PTR [rbp+0x0]
   140013524:	mov    edx,ebx
   140013526:	call   QWORD PTR [rbp+0x8]
   140013529:	inc    ebx
   14001352b:	shr    esi,1
   14001352d:	add    rdi,0x2
   140013531:	test   bl,0xf
   140013534:	jne    0x140013506
   140013536:	mov    rdx,QWORD PTR [rsp+0x38]
   14001353b:	mov    r9d,DWORD PTR [rsp+0xb8]
   140013543:	jmp    0x1400135f9
   140013548:	mov    r15d,0x5d5d
   14001354e:	xchg   ax,ax
   140013550:	test   sil,0x1
   140013554:	jne    0x14001355b
   140013556:	test   r12b,r12b
   140013559:	je     0x14001357f
   14001355b:	movzx  ecx,WORD PTR [rdi]
   14001355e:	lea    eax,[r11+rcx*1]
   140013562:	cmp    ax,r15w
   140013566:	ja     0x14001357f
   140013568:	add    cl,0x5f
   14001356b:	cmp    cl,0x5d
   14001356e:	ja     0x14001357f
   140013570:	mov    rcx,QWORD PTR [rbp+0x0]
   140013574:	mov    edx,ebx
   140013576:	call   QWORD PTR [rbp+0x8]
   140013579:	mov    r11d,0x5e5f
   14001357f:	inc    ebx
   140013581:	shr    esi,1
   140013583:	add    rdi,0x2
   140013587:	test   bl,0xf
   14001358a:	jne    0x140013550
   14001358c:	mov    r15,QWORD PTR [rsp+0x40]
   140013591:	mov    rdx,QWORD PTR [rsp+0x38]
   140013596:	mov    r9d,DWORD PTR [rsp+0xb8]
   14001359e:	jmp    0x1400135f9
   1400135a0:	mov    r15d,0x5c5d
   1400135a6:	test   sil,0x1
   1400135aa:	jne    0x1400135b1
   1400135ac:	test   r12b,r12b
   1400135af:	je     0x1400135d5
   1400135b1:	movzx  ecx,WORD PTR [rdi]
   1400135b4:	lea    eax,[r11+rcx*1]
   1400135b8:	cmp    ax,r15w
   1400135bc:	ja     0x1400135d5
   1400135be:	add    cl,0x5f
   1400135c1:	cmp    cl,0x5d
   1400135c4:	ja     0x1400135d5
   1400135c6:	mov    rcx,QWORD PTR [rbp+0x0]
   1400135ca:	mov    edx,ebx
   1400135cc:	call   QWORD PTR [rbp+0x8]
   1400135cf:	mov    r11d,0x5e5f
   1400135d5:	inc    ebx
   1400135d7:	shr    esi,1
   1400135d9:	add    rdi,0x2
   1400135dd:	test   bl,0xf
   1400135e0:	jne    0x1400135a6
   1400135e2:	mov    r15,QWORD PTR [rsp+0x40]
   1400135e7:	mov    rdx,QWORD PTR [rsp+0x38]
   1400135ec:	mov    r9d,DWORD PTR [rsp+0xb8]
   1400135f4:	jmp    0x1400135f9
   1400135f6:	add    ebx,0x10
   1400135f9:	inc    r14w
   1400135fd:	mov    r11d,0x5e5f
   140013603:	cmp    r14w,0x40
   140013608:	jb     0x1400133d0
   14001360e:	movzx  r8d,WORD PTR [rsp+0x32]
   140013614:	mov    r10,QWORD PTR [rsp+0x48]
   140013619:	xor    edi,edi
   14001361b:	jmp    0x140013623
   14001361d:	add    ebx,0x400
   140013623:	mov    ax,WORD PTR [rsp+0x30]
   140013628:	inc    ax
   14001362b:	mov    WORD PTR [rsp+0x30],ax
   140013630:	cmp    ax,WORD PTR [rsp+0x34]
   140013635:	jb     0x1400133a0
   14001363b:	jmp    0x1400132ee
   140013640:	mov    rax,QWORD PTR [rsp+0xc0]
   140013648:	mov    DWORD PTR [rax],0x5
   14001364e:	jmp    0x14001331e
   140013653:	nop
   140013654:	adc    BYTE PTR [rcx+rax*1],dh
   140013657:	add    BYTE PTR [rsi+0x34],bh
   14001365a:	add    DWORD PTR [rax],eax
   14001365c:	ret    0x134
   14001365f:	add    BYTE PTR [rsi],al
   140013661:	xor    eax,0x35480001
   140013666:	add    DWORD PTR [rax],eax
   140013668:	movabs al,ds:0x40cccccccc000135
   140013671:	push   rbx
   140013672:	sub    rsp,0x30
   140013676:	bt     DWORD PTR [rcx+0x38],0xf
   14001367b:	mov    rax,r9
   14001367e:	mov    rbx,rdx
   140013681:	jae    0x1400136ab
   140013683:	mov    rcx,QWORD PTR [rbx]
   140013686:	xor    edx,edx
   140013688:	mov    r8d,0xd7ff
   14001368e:	call   QWORD PTR [rbx+0x10]
   140013691:	mov    rcx,QWORD PTR [rbx]
   140013694:	mov    edx,0xe000
   140013699:	mov    r8d,0x10ffff
   14001369f:	mov    rax,QWORD PTR [rbx+0x10]
   1400136a3:	add    rsp,0x30
   1400136a7:	pop    rbx
   1400136a8:	rex.W jmp rax
   1400136ab:	mov    rcx,QWORD PTR [rcx+0x30]
   1400136af:	xor    r9d,r9d
   1400136b2:	mov    QWORD PTR [rsp+0x20],rax
   1400136b7:	cmp    BYTE PTR [rcx+0x104],0xdb
   1400136be:	sete   r9b
   1400136c2:	call   0x1400131b0
   1400136c7:	add    rsp,0x30
   1400136cb:	pop    rbx
   1400136cc:	ret    
   1400136cd:	int3   
   1400136ce:	int3   
   1400136cf:	int3   
   1400136d0:	mov    r11,rsp
   1400136d3:	mov    QWORD PTR [r11+0x10],rbx
   1400136d7:	mov    QWORD PTR [r11+0x18],rbp
   1400136db:	push   rsi
   1400136dc:	push   rdi
   1400136dd:	push   r12
   1400136df:	push   r13
   1400136e1:	push   r14
   1400136e3:	sub    rsp,0x60
   1400136e7:	mov    rsi,QWORD PTR [rsp+0xe0]
   1400136ef:	mov    ebp,DWORD PTR [rsp+0xd0]
   1400136f6:	mov    r12,QWORD PTR [rsp+0xc8]
   1400136fe:	mov    r13,QWORD PTR [rsp+0xc0]
   140013706:	mov    r14,QWORD PTR [rsp+0xb8]
   14001370e:	mov    BYTE PTR [rcx+0x5f],0x0
   140013712:	mov    rdx,QWORD PTR [rdx+0x128]
   140013719:	mov    ebx,r8d
   14001371c:	mov    rdi,rcx
   14001371f:	test   rdx,rdx
   140013722:	je     0x14001375d
   140013724:	movzx  eax,BYTE PTR [rsp+0xd8]
   14001372c:	mov    QWORD PTR [r11-0x38],rsi
   140013730:	mov    BYTE PTR [rsp+0x48],al
   140013734:	mov    rax,QWORD PTR [rsp+0xb0]
   14001373c:	mov    DWORD PTR [rsp+0x40],ebp
   140013740:	mov    QWORD PTR [r11-0x50],r12
   140013744:	mov    QWORD PTR [r11-0x58],r13
   140013748:	mov    QWORD PTR [r11-0x60],r14
   14001374c:	mov    QWORD PTR [r11-0x68],rax
   140013750:	call   0x140029d30
   140013755:	test   al,al
   140013757:	jne    0x140013864
   14001375d:	bt     DWORD PTR [rdi+0x38],0xf
   140013762:	jae    0x140013784
   140013764:	lea    rcx,[rip+0x35df5]        # 0x140049560
   14001376b:	xor    eax,eax
   14001376d:	nop    DWORD PTR [rax]
   140013770:	cmp    DWORD PTR [rcx],ebx
   140013772:	ja     0x140013779
   140013774:	cmp    ebx,DWORD PTR [rcx+0x4]
   140013777:	jbe    0x1400137a5
   140013779:	inc    eax
   14001377b:	add    rcx,0x10
   14001377f:	cmp    eax,0xd
   140013782:	jb     0x140013770
   140013784:	mov    DWORD PTR [rsi],0xa
   14001378a:	mov    eax,ebx
   14001378c:	lea    r11,[rsp+0x60]
   140013791:	mov    rbx,QWORD PTR [r11+0x38]
   140013795:	mov    rbp,QWORD PTR [r11+0x40]
   140013799:	mov    rsp,r11
   14001379c:	pop    r14
   14001379e:	pop    r13
   1400137a0:	pop    r12
   1400137a2:	pop    rdi
   1400137a3:	pop    rsi
   1400137a4:	ret    
   1400137a5:	mov    eax,DWORD PTR [rcx+0x8]
   1400137a8:	mov    QWORD PTR [rsp+0x38],rsi
   1400137ad:	mov    DWORD PTR [rsp+0x30],ebp
   1400137b1:	sub    eax,DWORD PTR [rcx]
   1400137b3:	mov    QWORD PTR [rsp+0x28],r12
   1400137b8:	mov    QWORD PTR [rsp+0x20],r13
   1400137bd:	lea    r8d,[rax+rbx*1-0x19beb2]
   1400137c5:	mov    eax,0xcccccccd
   1400137ca:	mul    r8d
   1400137cd:	mov    r9d,edx
   1400137d0:	shr    r9d,0x3
   1400137d4:	movzx  eax,r9b
   1400137d8:	shl    al,0x2
   1400137db:	lea    ecx,[rax+r9*1]
   1400137df:	mov    eax,0x4104105
   1400137e4:	add    cl,cl
   1400137e6:	sub    r8b,cl
   1400137e9:	mul    r9d
   1400137ec:	mov    al,0x7e
   1400137ee:	add    r8b,0x30
   1400137f2:	mov    BYTE PTR [rsp+0x93],r8b
   1400137fa:	mov    r8d,r9d
   1400137fd:	sub    r8d,edx
   140013800:	shr    r8d,1
   140013803:	add    r8d,edx
   140013806:	shr    r8d,0x6
   14001380a:	imul   r8b
   14001380d:	sub    r9b,al
   140013810:	mov    eax,0xcccccccd
   140013815:	sub    r9b,0x7f
   140013819:	mul    r8d
   14001381c:	shr    edx,0x3
   14001381f:	mov    BYTE PTR [rsp+0x92],r9b
   140013827:	movzx  eax,dl
   14001382a:	mov    r9,r14
   14001382d:	shl    al,0x2
   140013830:	lea    ecx,[rax+rdx*1]
   140013833:	sub    dl,0x7f
   140013836:	add    cl,cl
   140013838:	mov    BYTE PTR [rsp+0x90],dl
   14001383f:	lea    rdx,[rsp+0x90]
   140013847:	sub    r8b,cl
   14001384a:	mov    rcx,rdi
   14001384d:	add    r8b,0x30
   140013851:	mov    BYTE PTR [rsp+0x91],r8b
   140013859:	mov    r8d,0x4
   14001385f:	call   0x14002a710
   140013864:	xor    eax,eax
   140013866:	jmp    0x14001378c
   14001386b:	int3   
   14001386c:	int3   
   14001386d:	int3   
   14001386e:	int3   
   14001386f:	int3   
   140013870:	rex push rbx
   140013872:	push   rbp
   140013873:	push   rdi
   140013874:	push   r12
   140013876:	sub    rsp,0x28
   14001387a:	movzx  eax,BYTE PTR [rcx+0x104]
   140013881:	mov    rdi,QWORD PTR [rcx+0x60]
   140013885:	mov    r12,QWORD PTR [rcx+0xf0]
   14001388c:	mov    rbp,rdx
   14001388f:	mov    rbx,rcx
   140013892:	test   al,al
   140013894:	je     0x14001389e
   140013896:	cmp    al,0xc
   140013898:	jne    0x140013abc
   14001389e:	mov    rcx,QWORD PTR [rcx+0x40]
   1400138a2:	cmp    DWORD PTR [rcx+0x94],0x8000000a
   1400138ac:	jne    0x140013abc
   1400138b2:	cmp    DWORD PTR [rcx+0x54],0x80000085
   1400138b9:	jne    0x140013abc
   1400138bf:	mov    QWORD PTR [rsp+0x60],r14
   1400138c4:	mov    QWORD PTR [rsp+0x20],r15
   1400138c9:	mov    edx,0x15
   1400138ce:	mov    r15d,0xf25
   1400138d4:	lea    r8d,[rdx+0x10]
   1400138d8:	lea    r14d,[r15-0x10]
   1400138dc:	test   al,al
   1400138de:	jne    0x140013900
   1400138e0:	movzx  ecx,WORD PTR [rdi]
   1400138e3:	movzx  eax,WORD PTR [rdi+rcx*2]
   1400138e7:	cmp    r15w,WORD PTR [r12+rax*2+0x14]
   1400138ed:	jne    0x1400138fc
   1400138ef:	movzx  eax,WORD PTR [rdi+rcx*2+0x10]
   1400138f4:	cmp    r14w,WORD PTR [r12+rax*2+0xa]
   1400138fa:	je     0x140013936
   1400138fc:	xor    al,al
   1400138fe:	jmp    0x14001397a
   140013900:	movzx  ecx,WORD PTR [rdi]
   140013903:	mov    eax,DWORD PTR [rdi+rcx*4]
   140013906:	bt     eax,0x1a
   14001390a:	jae    0x1400138fc
   14001390c:	movzx  eax,ax
   14001390f:	shl    eax,0x4
   140013912:	add    eax,0xa
   140013915:	cmp    r8w,WORD PTR [r12+rax*2]
   14001391a:	jne    0x1400138fc
   14001391c:	mov    eax,DWORD PTR [rdi+rcx*4+0x20]
   140013920:	bt     eax,0x15
   140013924:	jae    0x1400138fc
   140013926:	movzx  eax,ax
   140013929:	shl    eax,0x4
   14001392c:	add    eax,0x5
   14001392f:	cmp    dx,WORD PTR [r12+rax*2]
   140013934:	jne    0x1400138fc
   140013936:	mov    QWORD PTR [rsp+0x58],r13
   14001393b:	mov    r13d,DWORD PTR [rbx+0x100]
   140013942:	test   r13d,r13d
   140013945:	je     0x140013aae
   14001394b:	movzx  eax,BYTE PTR [rbx+0x38]
   14001394f:	mov    QWORD PTR [rsp+0x50],rsi
   140013954:	shl    eax,0xa
   140013957:	lea    ecx,[rax+r13*1+0x50]
   14001395c:	call   0x140010940
   140013961:	mov    rsi,rax
   140013964:	test   rax,rax
   140013967:	jne    0x14001398e
   140013969:	mov    DWORD PTR [rbp+0x0],0x7
   140013970:	mov    rsi,QWORD PTR [rsp+0x50]
   140013975:	mov    r13,QWORD PTR [rsp+0x58]
   14001397a:	mov    r14,QWORD PTR [rsp+0x60]
   14001397f:	mov    r15,QWORD PTR [rsp+0x20]
   140013984:	add    rsp,0x28
   140013988:	pop    r12
   14001398a:	pop    rdi
   14001398b:	pop    rbp
   14001398c:	pop    rbx
   14001398d:	ret    
   14001398e:	movzx  eax,BYTE PTR [rbx+0x38]
   140013992:	mov    rdx,QWORD PTR [rbx+0x40]
   140013996:	mov    rcx,rsi
   140013999:	shl    eax,0xa
   14001399c:	movsxd r8,eax
   14001399f:	call   0x14002b9a0
   1400139a4:	mov    DWORD PTR [rsi+0x94],0x80000085
   1400139ae:	mov    DWORD PTR [rsi+0x54],0x8000000a
   1400139b5:	movzx  ebp,BYTE PTR [rbx+0x38]
   1400139b9:	mov    r8,r13
   1400139bc:	mov    rdx,r12
   1400139bf:	shl    rbp,0xa
   1400139c3:	add    rbp,rsi
   1400139c6:	mov    rcx,rbp
   1400139c9:	call   0x14002b9a0
   1400139ce:	cmp    BYTE PTR [rbx+0x104],0x0
   1400139d5:	jne    0x1400139f4
   1400139d7:	movzx  eax,WORD PTR [rdi]
   1400139da:	movzx  ecx,WORD PTR [rdi+rax*2]
   1400139de:	mov    WORD PTR [rbp+rcx*2+0x14],r14w
   1400139e4:	movzx  eax,WORD PTR [rdi]
   1400139e7:	movzx  ecx,WORD PTR [rdi+rax*2+0x10]
   1400139ec:	mov    WORD PTR [rbp+rcx*2+0xa],r15w
   1400139f2:	jmp    0x140013a23
   1400139f4:	movzx  eax,WORD PTR [rdi]
   1400139f7:	mov    ecx,0x15
   1400139fc:	movzx  eax,WORD PTR [rdi+rax*4]
   140013a00:	shl    eax,0x4
   140013a03:	add    eax,0xa
   140013a06:	mov    WORD PTR [rbp+rax*2+0x0],cx
   140013a0b:	movzx  eax,WORD PTR [rdi]
   140013a0e:	mov    ecx,0x25
   140013a13:	movzx  eax,WORD PTR [rdi+rax*4+0x20]
   140013a18:	shl    eax,0x4
   140013a1b:	add    eax,0x5
   140013a1e:	mov    WORD PTR [rbp+rax*2+0x0],cx
   140013a23:	mov    rcx,QWORD PTR [rbx+0x18]
   140013a27:	lea    r12,[r13+rbp*1+0x0]
   140013a2c:	add    rcx,0x4
   140013a30:	mov    rdx,r12
   140013a33:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013a40:	movzx  eax,BYTE PTR [rcx]
   140013a43:	inc    rdx
   140013a46:	inc    rcx
   140013a49:	mov    BYTE PTR [rdx-0x1],al
   140013a4c:	test   al,al
   140013a4e:	jne    0x140013a40
   140013a50:	xor    eax,eax
   140013a52:	or     rcx,0xffffffffffffffff
   140013a56:	mov    rdi,r12
   140013a59:	repnz scas al,BYTE PTR es:[rdi]
   140013a5b:	mov    rax,QWORD PTR [rip+0x35eee]        # 0x140049950
   140013a62:	xor    ecx,ecx
   140013a64:	mov    QWORD PTR [rdi-0x1],rax
   140013a68:	movzx  eax,WORD PTR [rip+0x35ee9]        # 0x140049958
   140013a6f:	mov    WORD PTR [rdi+0x7],ax
   140013a73:	call   0x140010c20
   140013a78:	cmp    QWORD PTR [rbx+0x48],0x0
   140013a7d:	jne    0x140013a93
   140013a7f:	mov    QWORD PTR [rbx+0x48],rsi
   140013a83:	mov    QWORD PTR [rbx+0xf8],rbp
   140013a8a:	mov    QWORD PTR [rbx+0x118],r12
   140013a91:	xor    esi,esi
   140013a93:	xor    ecx,ecx
   140013a95:	call   0x140010a80
   140013a9a:	test   rsi,rsi
   140013a9d:	je     0x140013aa7
   140013a9f:	mov    rcx,rsi
   140013aa2:	call   0x140010a40
   140013aa7:	mov    al,0x1
   140013aa9:	jmp    0x140013970
   140013aae:	mov    DWORD PTR [rbp+0x0],0x3
   140013ab5:	xor    al,al
   140013ab7:	jmp    0x140013975
   140013abc:	xor    al,al
   140013abe:	add    rsp,0x28
   140013ac2:	pop    r12
   140013ac4:	pop    rdi
   140013ac5:	pop    rbp
   140013ac6:	pop    rbx
   140013ac7:	ret    
   140013ac8:	int3   
   140013ac9:	int3   
   140013aca:	int3   
   140013acb:	int3   
   140013acc:	int3   
   140013acd:	int3   
   140013ace:	int3   
   140013acf:	int3   
   140013ad0:	mov    QWORD PTR [rsp+0x10],rbp
   140013ad5:	mov    QWORD PTR [rsp+0x18],rsi
   140013ada:	push   rdi
   140013adb:	movzx  r9d,BYTE PTR [rcx+0xcc]
   140013ae3:	mov    rdi,QWORD PTR [rcx+0x28]
   140013ae7:	mov    r11,QWORD PTR [rcx+0xb8]
   140013aee:	sub    r9d,0x8
   140013af2:	mov    rsi,r8
   140013af5:	mov    rbp,rcx
   140013af8:	je     0x140013b20
   140013afa:	cmp    r9d,0x1
   140013afe:	jne    0x140013b3e
   140013b00:	cmp    edx,0xffffff
   140013b06:	jbe    0x140013b3e
   140013b08:	cmp    edx,0x8effffff
   140013b0e:	ja     0x140013b18
   140013b10:	and    edx,0x7fffff
   140013b16:	jmp    0x140013b3e
   140013b18:	and    edx,0xff7fff
   140013b1e:	jmp    0x140013b3e
   140013b20:	cmp    edx,0xffff
   140013b26:	jbe    0x140013b3e
   140013b28:	cmp    edx,0x8effff
   140013b2e:	ja     0x140013b38
   140013b30:	and    edx,0x7fff
   140013b36:	jmp    0x140013b3e
   140013b38:	and    edx,0xff7f
   140013b3e:	xor    r8d,r8d
   140013b41:	mov    QWORD PTR [rsp+0x10],rbx
   140013b46:	movsxd r10,DWORD PTR [rsi+r8*4]
   140013b4a:	test   r10d,r10d
   140013b4d:	js     0x140013bcd
   140013b4f:	mov    rax,r10
   140013b52:	mov    rcx,r10
   140013b55:	and    r10d,0xf
   140013b59:	sar    rcx,0x4
   140013b5d:	sar    rax,0xa
   140013b61:	movzx  ebx,WORD PTR [rdi+rax*2]
   140013b65:	and    ecx,0x3f
   140013b68:	add    rbx,rcx
   140013b6b:	movzx  ecx,BYTE PTR [rbp+0xcc]
   140013b72:	movzx  r9d,WORD PTR [rdi+rbx*4]
   140013b77:	shl    r9d,0x4
   140013b7b:	add    r9d,r10d
   140013b7e:	sub    ecx,0x2
   140013b81:	je     0x140013ba0
   140013b83:	sub    ecx,0x1
   140013b86:	je     0x140013b97
   140013b88:	cmp    ecx,0x6
   140013b8b:	je     0x140013ba0
   140013b8d:	movsxd rax,r9d
   140013b90:	mov    WORD PTR [r11+rax*2],dx
   140013b95:	jmp    0x140013bbf
   140013b97:	movsxd rax,r9d
   140013b9a:	mov    DWORD PTR [r11+rax*4],edx
   140013b9e:	jmp    0x140013bbf
   140013ba0:	lea    eax,[r9+r9*2]
   140013ba4:	movsxd rcx,eax
   140013ba7:	mov    eax,edx
   140013ba9:	shr    eax,0x10
   140013bac:	mov    BYTE PTR [rcx+r11*1+0x2],dl
   140013bb1:	mov    BYTE PTR [rcx+r11*1],al
   140013bb5:	mov    eax,edx
   140013bb7:	shr    eax,0x8
   140013bba:	mov    BYTE PTR [rcx+r11*1+0x1],al
   140013bbf:	lea    ecx,[r10+0x10]
   140013bc3:	mov    eax,0x1
   140013bc8:	shl    eax,cl
   140013bca:	or     DWORD PTR [rdi+rbx*4],eax
   140013bcd:	inc    r8
   140013bd0:	inc    edx
   140013bd2:	cmp    r8,0x1f
   140013bd6:	jle    0x140013b46
   140013bdc:	mov    rbx,QWORD PTR [rsp+0x10]
   140013be1:	mov    rbp,QWORD PTR [rsp+0x18]
   140013be6:	mov    rsi,QWORD PTR [rsp+0x20]
   140013beb:	mov    al,0x1
   140013bed:	pop    rdi
   140013bee:	ret    
   140013bef:	int3   
   140013bf0:	mov    QWORD PTR [rsp+0x10],rbx
   140013bf5:	mov    QWORD PTR [rsp+0x18],rbp
   140013bfa:	push   rsi
   140013bfb:	push   rdi
   140013bfc:	push   r12
   140013bfe:	sub    rsp,0x20
   140013c02:	mov    eax,DWORD PTR [rcx+0xc8]
   140013c08:	mov    ebp,r9d
   140013c0b:	mov    esi,edx
   140013c0d:	lea    r10d,[rsi+rbp*2]
   140013c11:	mov    rdi,rcx
   140013c14:	mov    r12d,r8d
   140013c17:	lea    r10d,[rax+r10*2]
   140013c1b:	mov    ecx,r10d
   140013c1e:	mov    ebx,r10d
   140013c21:	call   0x140010940
   140013c26:	mov    QWORD PTR [rdi+0xd8],rax
   140013c2d:	test   rax,rax
   140013c30:	jne    0x140013c42
   140013c32:	mov    rax,QWORD PTR [rsp+0x60]
   140013c37:	mov    DWORD PTR [rax],0x7
   140013c3d:	jmp    0x140013d2f
   140013c42:	mov    r8,rbx
   140013c45:	xor    edx,edx
   140013c47:	mov    rcx,rax
   140013c4a:	mov    QWORD PTR [rsp+0x40],r13
   140013c4f:	call   0x14002b280
   140013c54:	mov    r13,QWORD PTR [rdi+0xd8]
   140013c5b:	mov    rdx,QWORD PTR [rdi+0x28]
   140013c5f:	lea    r8d,[rsi+rsi*1]
   140013c63:	mov    rcx,r13
   140013c66:	call   0x14002b9a0
   140013c6b:	mov    rax,QWORD PTR [rdi+0x28]
   140013c6f:	lea    rbx,[r13+rsi*2+0x0]
   140013c74:	lea    rdx,[rax+rsi*2]
   140013c78:	mov    eax,ebp
   140013c7a:	lea    r8d,[r12*4+0x0]
   140013c82:	sub    eax,r12d
   140013c85:	lea    rcx,[rbx+rax*4]
   140013c89:	call   0x14002b9a0
   140013c8e:	movzx  eax,WORD PTR [rdi+0xd0]
   140013c95:	lea    rcx,[rbx+rbp*4]
   140013c99:	inc    eax
   140013c9b:	xor    edx,edx
   140013c9d:	mov    QWORD PTR [rdi+0x28],r13
   140013ca1:	sar    eax,0x6
   140013ca4:	mov    QWORD PTR [rdi+0xb8],rcx
   140013cab:	movsxd r10,eax
   140013cae:	test   eax,eax
   140013cb0:	jle    0x140013d13
   140013cb2:	shr    esi,1
   140013cb4:	mov    r9,r13
   140013cb7:	movzx  eax,WORD PTR [r9]
   140013cbb:	cmp    eax,esi
   140013cbd:	je     0x140013d06
   140013cbf:	lea    rcx,[r13+rax*4+0x0]
   140013cc4:	mov    r8d,0x10
   140013cca:	nop    WORD PTR [rax+rax*1+0x0]
   140013cd0:	mov    rax,QWORD PTR [rdi+0x30]
   140013cd4:	inc    rdx
   140013cd7:	movzx  eax,WORD PTR [rax+rdx*2-0x2]
   140013cdc:	test   eax,eax
   140013cde:	je     0x140013cfa
   140013ce0:	sar    eax,0x4
   140013ce3:	mov    DWORD PTR [rcx],eax
   140013ce5:	inc    eax
   140013ce7:	mov    DWORD PTR [rcx+0x4],eax
   140013cea:	inc    eax
   140013cec:	mov    DWORD PTR [rcx+0x8],eax
   140013cef:	inc    eax
   140013cf1:	add    rcx,0x10
   140013cf5:	mov    DWORD PTR [rcx-0x4],eax
   140013cf8:	jmp    0x140013cfe
   140013cfa:	add    rcx,0x10
   140013cfe:	sub    r8,0x1
   140013d02:	jne    0x140013cd0
   140013d04:	jmp    0x140013d0a
   140013d06:	add    rdx,0x10
   140013d0a:	add    r9,0x2
   140013d0e:	cmp    rdx,r10
   140013d11:	jl     0x140013cb7
   140013d13:	mov    r9,QWORD PTR [rsp+0x60]
   140013d18:	lea    rdx,[rip+0xfffffffffffffdb1]        # 0x140013ad0
   140013d1f:	mov    r8,rdi
   140013d22:	mov    rcx,rdi
   140013d25:	call   0x1400130d0
   140013d2a:	mov    r13,QWORD PTR [rsp+0x40]
   140013d2f:	mov    rbx,QWORD PTR [rsp+0x48]
   140013d34:	mov    rbp,QWORD PTR [rsp+0x50]
   140013d39:	add    rsp,0x20
   140013d3d:	pop    r12
   140013d3f:	pop    rdi
   140013d40:	pop    rsi
   140013d41:	ret    
   140013d42:	int3   
   140013d43:	int3   
   140013d44:	int3   
   140013d45:	int3   
   140013d46:	int3   
   140013d47:	int3   
   140013d48:	int3   
   140013d49:	int3   
   140013d4a:	int3   
   140013d4b:	int3   
   140013d4c:	int3   
   140013d4d:	int3   
   140013d4e:	int3   
   140013d4f:	int3   
   140013d50:	rex push rbx
   140013d52:	push   rbp
   140013d53:	push   rsi
   140013d54:	push   rdi
   140013d55:	push   r12
   140013d57:	push   r15
   140013d59:	sub    rsp,0x98
   140013d60:	mov    rax,QWORD PTR [rip+0x52b49]        # 0x1400668b0
   140013d67:	xor    rax,rsp
   140013d6a:	mov    QWORD PTR [rsp+0x70],rax
   140013d6f:	movzx  eax,BYTE PTR [r8]
   140013d73:	xor    sil,sil
   140013d76:	mov    r12,r9
   140013d79:	mov    rdi,r8
   140013d7c:	mov    rbp,rdx
   140013d7f:	mov    r15,rcx
   140013d82:	cmp    al,0x4
   140013d84:	jne    0x140013d8d
   140013d86:	mov    edx,0x8
   140013d8b:	jmp    0x140013db2
   140013d8d:	cmp    al,0x5
   140013d8f:	jne    0x140013dc6
   140013d91:	cmp    BYTE PTR [r8+0x1],0x3
   140013d96:	jb     0x140013dc6
   140013d98:	test   DWORD PTR [r8+0x20],0xff80
   140013da0:	jne    0x140013dc6
   140013da2:	mov    esi,DWORD PTR [r8+0x20]
   140013da6:	mov    edx,esi
   140013da8:	shr    esi,0x6
   140013dab:	and    edx,0x3f
   140013dae:	and    sil,0x1
   140013db2:	movzx  eax,BYTE PTR [r8+0x18]
   140013db7:	mov    BYTE PTR [rcx+0x104],al
   140013dbd:	test   sil,sil
   140013dc0:	je     0x140013dd2
   140013dc2:	test   al,al
   140013dc4:	jne    0x140013dd2
   140013dc6:	mov    DWORD PTR [r9],0xd
   140013dcd:	jmp    0x14001433e
   140013dd2:	mov    eax,DWORD PTR [r8+0x18]
   140013dd6:	shr    eax,0x8
   140013dd9:	test   eax,eax
   140013ddb:	je     0x140013de7
   140013ddd:	add    rax,r8
   140013de0:	mov    QWORD PTR [rcx+0x128],rax
   140013de7:	movzx  eax,BYTE PTR [rcx+0x104]
   140013dee:	mov    QWORD PTR [rsp+0x90],r13
   140013df6:	mov    QWORD PTR [rsp+0x88],r14
   140013dfe:	cmp    al,0xe
   140013e00:	jne    0x1400140ba
   140013e06:	mov    r14,QWORD PTR [rcx+0x128]
   140013e0d:	xor    eax,eax
   140013e0f:	xor    r13d,r13d
   140013e12:	mov    DWORD PTR [rsp+0x30],r13d
   140013e17:	mov    DWORD PTR [rsp+0x34],eax
   140013e1b:	mov    DWORD PTR [rsp+0x38],eax
   140013e1f:	mov    DWORD PTR [rsp+0x3c],eax
   140013e23:	mov    DWORD PTR [rsp+0x40],eax
   140013e27:	mov    DWORD PTR [rsp+0x44],eax
   140013e2b:	mov    DWORD PTR [rsp+0x48],eax
   140013e2f:	mov    DWORD PTR [rsp+0x4c],eax
   140013e33:	mov    DWORD PTR [rsp+0x50],eax
   140013e37:	mov    DWORD PTR [rsp+0x54],eax
   140013e3b:	test   r14,r14
   140013e3e:	je     0x1400140ca
   140013e44:	cmp    DWORD PTR [rbp+0x4],0x1
   140013e48:	je     0x140013e56
   140013e4a:	mov    DWORD PTR [r9],0xe
   140013e51:	jmp    0x14001432e
   140013e56:	lea    r9d,[rdx*4+0x0]
   140013e5e:	add    r9,r8
   140013e61:	mov    r8,QWORD PTR [rcx+0x18]
   140013e65:	add    r8,0x4
   140013e69:	mov    rax,r9
   140013e6c:	sub    r8,r9
   140013e6f:	nop
   140013e70:	movzx  edx,BYTE PTR [rax]
   140013e73:	movzx  ecx,BYTE PTR [rax+r8*1]
   140013e78:	sub    edx,ecx
   140013e7a:	jne    0x140013e83
   140013e7c:	inc    rax
   140013e7f:	test   ecx,ecx
   140013e81:	jne    0x140013e70
   140013e83:	test   edx,edx
   140013e85:	je     0x1400140ad
   140013e8b:	movzx  eax,BYTE PTR [rbp+0x8]
   140013e8f:	lea    rcx,[rsp+0x30]
   140013e94:	mov    rdx,r12
   140013e97:	mov    BYTE PTR [rsp+0x38],al
   140013e9b:	movzx  eax,WORD PTR [rbp+0xa]
   140013e9f:	mov    DWORD PTR [rsp+0x30],0x28
   140013ea7:	mov    WORD PTR [rsp+0x3a],ax
   140013eac:	mov    eax,DWORD PTR [rbp+0xc]
   140013eaf:	mov    DWORD PTR [rsp+0x34],0x2
   140013eb7:	mov    DWORD PTR [rsp+0x3c],eax
   140013ebb:	mov    rax,QWORD PTR [rbp+0x10]
   140013ebf:	mov    QWORD PTR [rsp+0x48],r9
   140013ec4:	mov    QWORD PTR [rsp+0x40],rax
   140013ec9:	call   0x140011cf0
   140013ece:	cmp    DWORD PTR [r12],r13d
   140013ed2:	mov    rsi,rax
   140013ed5:	jg     0x14001432e
   140013edb:	mov    rcx,QWORD PTR [rax+0x18]
   140013edf:	cmp    BYTE PTR [rcx+0x45],0x2
   140013ee3:	jne    0x1400140a5
   140013ee9:	cmp    QWORD PTR [rax+0x120],r13
   140013ef0:	jne    0x1400140a5
   140013ef6:	cmp    BYTE PTR [rbp+0x8],r13b
   140013efa:	je     0x140013f09
   140013efc:	mov    rcx,rax
   140013eff:	call   0x140011660
   140013f04:	jmp    0x14001432e
   140013f09:	lea    rcx,[r15+0x38]
   140013f0d:	lea    rdx,[rax+0x38]
   140013f11:	mov    r8d,0xf8
   140013f17:	call   0x14002b9a0
   140013f1c:	mov    QWORD PTR [r15+0x120],rsi
   140013f23:	mov    QWORD PTR [r15+0x128],r14
   140013f2a:	mov    QWORD PTR [r15+0x48],r13
   140013f2e:	mov    QWORD PTR [r15+0xf8],r13
   140013f35:	mov    QWORD PTR [r15+0x118],r13
   140013f3c:	mov    QWORD PTR [r15+0x110],r13
   140013f43:	mov    rcx,QWORD PTR [r15+0x18]
   140013f47:	movzx  eax,BYTE PTR [rcx+0x45]
   140013f4b:	cmp    al,0x1
   140013f4d:	je     0x140013f60
   140013f4f:	cmp    al,0x2
   140013f51:	jne    0x1400142e4
   140013f57:	cmp    BYTE PTR [rcx+0x46],al
   140013f5a:	jl     0x1400142e4
   140013f60:	cmp    BYTE PTR [rsi+0x104],0xc
   140013f67:	jne    0x140013faa
   140013f69:	mov    rax,QWORD PTR [r15+0x40]
   140013f6d:	mov    ecx,DWORD PTR [rax+0x38]
   140013f70:	test   ecx,ecx
   140013f72:	jns    0x1400142e4
   140013f78:	mov    eax,ecx
   140013f7a:	and    eax,0xf00000
   140013f7f:	cmp    eax,0x800000
   140013f84:	jne    0x1400142e4
   140013f8a:	sar    ecx,0x18
   140013f8d:	test   cl,0x7f
   140013f90:	je     0x1400142e4
   140013f96:	and    cl,0x7f
   140013f99:	mov    BYTE PTR [r15+0x104],0xdb
   140013fa1:	mov    BYTE PTR [r15+0x39],cl
   140013fa5:	jmp    0x1400142e4
   140013faa:	mov    rax,QWORD PTR [rsi+0x18]
   140013fae:	cmp    BYTE PTR [rax+0x45],0x2
   140013fb2:	jne    0x1400142e4
   140013fb8:	cmp    BYTE PTR [rax+0x46],0x1
   140013fbc:	jne    0x1400142e4
   140013fc2:	cmp    BYTE PTR [rax+0x47],0x2
   140013fc6:	jne    0x1400142e4
   140013fcc:	movzx  eax,BYTE PTR [r15+0x38]
   140013fd1:	cmp    al,0x7f
   140013fd3:	ja     0x1400142e4
   140013fd9:	movzx  ebp,al
   140013fdc:	mov    r14d,ebp
   140013fdf:	shl    r14d,0xa
   140013fe3:	lea    eax,[r14+0x400]
   140013fea:	movsxd rcx,eax
   140013fed:	call   0x140010940
   140013ff2:	mov    rdi,rax
   140013ff5:	test   rax,rax
   140013ff8:	jne    0x14001400f
   140013ffa:	mov    rcx,rsi
   140013ffd:	call   0x140011660
   140014002:	mov    DWORD PTR [r12],0x7
   14001400a:	jmp    0x14001432e
   14001400f:	mov    rdx,QWORD PTR [r15+0x40]
   140014013:	movsxd r8,r14d
   140014016:	mov    rcx,rax
   140014019:	call   0x14002b9a0
   14001401e:	mov    r11,r13
   140014021:	cmp    DWORD PTR [rdi+r11*4],r13d
   140014025:	jge    0x140014030
   140014027:	mov    eax,ebp
   140014029:	shl    eax,0x18
   14001402c:	mov    DWORD PTR [rdi+r11*4],eax
   140014030:	inc    r11
   140014033:	cmp    r11,0x100
   14001403a:	jl     0x140014021
   14001403c:	mov    rax,rbp
   14001403f:	movabs rdx,0x8070000080700000
   140014049:	mov    ecx,0x10
   14001404e:	shl    rax,0xa
   140014052:	add    rax,rdi
   140014055:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140014060:	mov    QWORD PTR [rax],rdx
   140014063:	mov    QWORD PTR [rax+0x8],rdx
   140014067:	mov    QWORD PTR [rax+0x10],rdx
   14001406b:	add    rax,0x40
   14001406f:	dec    rcx
   140014072:	mov    QWORD PTR [rax-0x28],rdx
   140014076:	mov    QWORD PTR [rax-0x20],rdx
   14001407a:	mov    QWORD PTR [rax-0x18],rdx
   14001407e:	mov    QWORD PTR [rax-0x10],rdx
   140014082:	mov    QWORD PTR [rax-0x8],rdx
   140014086:	jne    0x140014060
   140014088:	inc    bpl
   14001408b:	mov    QWORD PTR [r15+0x40],rdi
   14001408f:	mov    BYTE PTR [r15+0x3a],0x1
   140014094:	mov    BYTE PTR [r15+0x38],bpl
   140014098:	mov    BYTE PTR [r15+0x104],0xdb
   1400140a0:	jmp    0x1400142e4
   1400140a5:	mov    rcx,rax
   1400140a8:	call   0x140011660
   1400140ad:	mov    DWORD PTR [r12],0xd
   1400140b5:	jmp    0x14001432e
   1400140ba:	cmp    al,0x3
   1400140bc:	jbe    0x1400140d6
   1400140be:	cmp    al,0x7
   1400140c0:	jbe    0x1400140ca
   1400140c2:	cmp    al,0x9
   1400140c4:	jbe    0x1400140d6
   1400140c6:	cmp    al,0xc
   1400140c8:	je     0x1400140d6
   1400140ca:	mov    DWORD PTR [r9],0xd
   1400140d1:	jmp    0x14001432e
   1400140d6:	cmp    BYTE PTR [rbp+0x8],0x0
   1400140da:	jne    0x14001432e
   1400140e0:	movzx  eax,BYTE PTR [r8+0x4]
   1400140e5:	lea    edx,[rdx*4+0x0]
   1400140ec:	mov    BYTE PTR [rcx+0x38],al
   1400140ef:	mov    eax,DWORD PTR [r8+0x8]
   1400140f3:	add    rdx,r8
   1400140f6:	mov    DWORD PTR [rcx+0x3c],eax
   1400140f9:	mov    QWORD PTR [rcx+0x40],rdx
   1400140fd:	mov    eax,DWORD PTR [r8+0x4]
   140014101:	shl    rax,0xa
   140014105:	add    rax,rdx
   140014108:	lea    rdx,[rsp+0x58]
   14001410d:	mov    QWORD PTR [rcx+0x58],rax
   140014111:	mov    eax,DWORD PTR [r8+0xc]
   140014115:	add    rax,r8
   140014118:	mov    QWORD PTR [rcx+0x50],rax
   14001411c:	mov    eax,DWORD PTR [r8+0x10]
   140014120:	add    rax,r8
   140014123:	mov    QWORD PTR [rcx+0x60],rax
   140014127:	mov    eax,DWORD PTR [r8+0x14]
   14001412b:	add    rax,r8
   14001412e:	mov    QWORD PTR [rcx+0xf0],rax
   140014135:	mov    eax,DWORD PTR [r8+0x1c]
   140014139:	mov    DWORD PTR [rcx+0x100],eax
   14001413f:	mov    rcx,QWORD PTR [rcx+0x8]
   140014143:	mov    eax,0x14
   140014148:	mov    WORD PTR [rsp+0x58],ax
   14001414d:	call   0x14000d960
   140014152:	movzx  r11d,BYTE PTR [rsp+0x64]
   140014158:	cmp    r11b,0x6
   14001415c:	ja     0x140014175
   14001415e:	cmp    r11b,0x6
   140014162:	jne    0x14001416b
   140014164:	cmp    BYTE PTR [rsp+0x65],0x1
   140014169:	jae    0x140014175
   14001416b:	mov    BYTE PTR [r15+0x105],0x3
   140014173:	jmp    0x140014187
   140014175:	mov    rax,QWORD PTR [r15+0x18]
   140014179:	movzx  ecx,BYTE PTR [rax+0x4f]
   14001417d:	and    cl,0x3
   140014180:	mov    BYTE PTR [r15+0x105],cl
   140014187:	xor    r13d,r13d
   14001418a:	cmp    BYTE PTR [rdi+0x1],0x3
   14001418e:	jb     0x140014262
   140014194:	test   BYTE PTR [r15+0x105],0x2
   14001419c:	jne    0x140014262
   1400141a2:	movzx  ecx,BYTE PTR [r15+0x38]
   1400141a7:	cmp    cl,0x1
   1400141aa:	jne    0x1400141b8
   1400141ac:	cmp    BYTE PTR [rdi+0x2],0xf
   1400141b0:	mov    eax,r13d
   1400141b3:	setae  al
   1400141b6:	jmp    0x1400141c2
   1400141b8:	cmp    BYTE PTR [rdi+0x2],0xd7
   1400141bc:	mov    eax,r13d
   1400141bf:	setae  al
   1400141c2:	test   eax,eax
   1400141c4:	je     0x140014262
   1400141ca:	mov    BYTE PTR [r15+0x106],0x1
   1400141d2:	cmp    cl,0x1
   1400141d5:	jne    0x14001422e
   1400141d7:	mov    r8,r13
   1400141da:	lea    r9,[r15+0x70]
   1400141de:	mov    r10d,0x40
   1400141e4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400141f0:	mov    rdx,QWORD PTR [r15+0x60]
   1400141f4:	mov    rax,r8
   1400141f7:	add    r9,0x2
   1400141fb:	sar    rax,0x4
   1400141ff:	movzx  ecx,WORD PTR [rdx+rax*2]
   140014203:	mov    rax,r8
   140014206:	inc    r8
   140014209:	and    eax,0xf
   14001420c:	sub    r10,0x1
   140014210:	lea    rax,[rcx+rax*4]
   140014214:	movzx  ecx,WORD PTR [rdx+rax*2]
   140014218:	mov    WORD PTR [r9-0x2],cx
   14001421d:	jne    0x1400141f0
   14001421f:	mov    eax,0xfff
   140014224:	mov    WORD PTR [r15+0x108],ax
   14001422c:	jmp    0x140014262
   14001422e:	test   sil,sil
   140014231:	je     0x140014238
   140014233:	mov    eax,r13d
   140014236:	jmp    0x14001423f
   140014238:	mov    eax,DWORD PTR [r15+0x100]
   14001423f:	add    rax,QWORD PTR [r15+0xf0]
   140014246:	mov    ecx,0xff
   14001424b:	mov    QWORD PTR [r15+0x68],rax
   14001424f:	movzx  eax,BYTE PTR [rdi+0x2]
   140014253:	shl    ax,0x8
   140014257:	or     ax,cx
   14001425a:	mov    WORD PTR [r15+0x108],ax
   140014262:	mov    r9,QWORD PTR [r15+0x40]
   140014266:	or     r10d,0xffffffff
   14001426a:	mov    r8d,r13d
   14001426d:	nop    DWORD PTR [rax]
   140014270:	mov    eax,r8d
   140014273:	or     eax,0x80000000
   140014278:	cmp    DWORD PTR [r9],eax
   14001427b:	je     0x140014292
   14001427d:	mov    eax,r8d
   140014280:	mov    edx,0x1
   140014285:	sar    eax,0x2
   140014288:	movzx  ecx,al
   14001428b:	shl    edx,cl
   14001428d:	not    edx
   14001428f:	and    r10d,edx
   140014292:	inc    r8d
   140014295:	add    r9,0x4
   140014299:	cmp    r8d,0x80
   1400142a0:	jl     0x140014270
   1400142a2:	mov    DWORD PTR [r15+0x10c],r10d
   1400142a9:	test   sil,sil
   1400142ac:	je     0x1400142e4
   1400142ae:	movzx  edx,BYTE PTR [r15+0x105]
   1400142b6:	mov    r8d,DWORD PTR [rdi+0x14]
   1400142ba:	mov    r9d,DWORD PTR [rdi+0x24]
   1400142be:	sub    r8d,DWORD PTR [rdi+0x10]
   1400142c2:	and    edx,0x1
   1400142c5:	lea    rcx,[r15+0x38]
   1400142c9:	shl    edx,0xa
   1400142cc:	shr    r8d,0x2
   1400142d0:	mov    QWORD PTR [rsp+0x20],r12
   1400142d5:	or     edx,0x40
   1400142d8:	mov    eax,edx
   1400142da:	shr    eax,1
   1400142dc:	sub    r8d,eax
   1400142df:	call   0x140013bf0
   1400142e4:	cmp    BYTE PTR [r15+0x106],0x0
   1400142ec:	je     0x140014317
   1400142ee:	cmp    BYTE PTR [r15+0x38],0x1
   1400142f3:	jne    0x140014302
   1400142f5:	lea    rax,[rip+0x35374]        # 0x140049670
   1400142fc:	mov    QWORD PTR [r15+0x28],rax
   140014300:	jmp    0x140014317
   140014302:	cmp    BYTE PTR [r15+0x104],0x1
   14001430a:	jne    0x140014317
   14001430c:	lea    rax,[rip+0x353ed]        # 0x140049700
   140014313:	mov    QWORD PTR [r15+0x28],rax
   140014317:	movzx  eax,BYTE PTR [r15+0x104]
   14001431f:	cmp    al,0xdb
   140014321:	je     0x140014327
   140014323:	cmp    al,0xc
   140014325:	jne    0x14001432e
   140014327:	mov    DWORD PTR [r15+0x10c],r13d
   14001432e:	mov    r13,QWORD PTR [rsp+0x90]
   140014336:	mov    r14,QWORD PTR [rsp+0x88]
   14001433e:	mov    rcx,QWORD PTR [rsp+0x70]
   140014343:	xor    rcx,rsp
   140014346:	call   0x14002b250
   14001434b:	add    rsp,0x98
   140014352:	pop    r15
   140014354:	pop    r12
   140014356:	pop    rdi
   140014357:	pop    rsi
   140014358:	pop    rbp
   140014359:	pop    rbx
   14001435a:	ret    
   14001435b:	int3   
   14001435c:	int3   
   14001435d:	int3   
   14001435e:	int3   
   14001435f:	int3   
   140014360:	rex push rbx
   140014362:	sub    rsp,0x20
   140014366:	mov    rbx,rcx
   140014369:	mov    rcx,QWORD PTR [rcx+0x48]
   14001436d:	test   rcx,rcx
   140014370:	je     0x140014377
   140014372:	call   0x140010a40
   140014377:	cmp    BYTE PTR [rbx+0x3a],0x0
   14001437b:	je     0x140014386
   14001437d:	mov    rcx,QWORD PTR [rbx+0x40]
   140014381:	call   0x140010a40
   140014386:	mov    rcx,QWORD PTR [rbx+0x120]
   14001438d:	test   rcx,rcx
   140014390:	je     0x140014397
   140014392:	call   0x140011660
   140014397:	mov    rcx,QWORD PTR [rbx+0x110]
   14001439e:	test   rcx,rcx
   1400143a1:	je     0x1400143a8
   1400143a3:	call   0x140010a40
   1400143a8:	add    rsp,0x20
   1400143ac:	pop    rbx
   1400143ad:	ret    
   1400143ae:	int3   
   1400143af:	int3   
   1400143b0:	rex push rsi
   1400143b2:	push   rdi
   1400143b3:	push   r13
   1400143b5:	sub    rsp,0x20
   1400143b9:	cmp    BYTE PTR [rdx+0x8],0x0
   1400143bd:	mov    r13,r8
   1400143c0:	mov    rsi,rdx
   1400143c3:	mov    rdi,rcx
   1400143c6:	jne    0x14001455b
   1400143cc:	mov    QWORD PTR [rsp+0x48],rbp
   1400143d1:	mov    rbp,QWORD PTR [rcx+0x30]
   1400143d5:	mov    QWORD PTR [rsp+0x50],r12
   1400143da:	movzx  r12d,BYTE PTR [rbp+0x104]
   1400143e2:	cmp    r12b,0xdb
   1400143e6:	jne    0x1400143f2
   1400143e8:	and    DWORD PTR [rdx+0xc],0xffffffef
   1400143ec:	mov    eax,DWORD PTR [rdx+0xc]
   1400143ef:	mov    DWORD PTR [rcx+0x38],eax
   1400143f2:	test   BYTE PTR [rdx+0xc],0x10
   1400143f6:	je     0x140014441
   1400143f8:	xor    ecx,ecx
   1400143fa:	mov    QWORD PTR [rsp+0x40],rbx
   1400143ff:	call   0x140010c20
   140014404:	cmp    QWORD PTR [rbp+0x48],0x0
   140014409:	setne  bl
   14001440c:	xor    ecx,ecx
   14001440e:	call   0x140010a80
   140014413:	test   bl,bl
   140014415:	mov    rbx,QWORD PTR [rsp+0x40]
   14001441a:	jne    0x140014441
   14001441c:	mov    rcx,QWORD PTR [rdi+0x30]
   140014420:	mov    rdx,r13
   140014423:	call   0x140013870
   140014428:	test   al,al
   14001442a:	jne    0x140014441
   14001442c:	cmp    DWORD PTR [r13+0x0],0x0
   140014431:	jg     0x140014551
   140014437:	and    DWORD PTR [rsi+0xc],0xffffffef
   14001443b:	mov    eax,DWORD PTR [rsi+0xc]
   14001443e:	mov    DWORD PTR [rdi+0x38],eax
   140014441:	mov    rcx,QWORD PTR [rsi+0x18]
   140014445:	lea    rdx,[rip+0x35544]        # 0x140049990
   14001444c:	call   0x14002efdc
   140014451:	test   rax,rax
   140014454:	je     0x140014490
   140014456:	mov    rcx,QWORD PTR [rsi+0x18]
   14001445a:	lea    rdx,[rip+0x35527]        # 0x140049988
   140014461:	call   0x14002efdc
   140014466:	test   rax,rax
   140014469:	jne    0x140014484
   14001446b:	mov    rcx,QWORD PTR [rsi+0x18]
   14001446f:	lea    rdx,[rip+0x2d572]        # 0x1400419e8
   140014476:	call   0x14002efdc
   14001447b:	test   rax,rax
   14001447e:	je     0x140014527
   140014484:	or     DWORD PTR [rdi+0x38],0x8000
   14001448b:	jmp    0x140014527
   140014490:	mov    rcx,QWORD PTR [rsi+0x18]
   140014494:	lea    rdx,[rip+0x354e1]        # 0x14004997c
   14001449b:	call   0x14002efdc
   1400144a0:	test   rax,rax
   1400144a3:	jne    0x140014520
   1400144a5:	mov    rcx,QWORD PTR [rsi+0x18]
   1400144a9:	lea    rdx,[rip+0x354c4]        # 0x140049974
   1400144b0:	call   0x14002efdc
   1400144b5:	test   rax,rax
   1400144b8:	jne    0x140014520
   1400144ba:	mov    rcx,QWORD PTR [rsi+0x18]
   1400144be:	lea    rdx,[rip+0x354ab]        # 0x140049970
   1400144c5:	call   0x14002efdc
   1400144ca:	test   rax,rax
   1400144cd:	jne    0x140014517
   1400144cf:	mov    rcx,QWORD PTR [rsi+0x18]
   1400144d3:	lea    rdx,[rip+0x35492]        # 0x14004996c
   1400144da:	call   0x14002efdc
   1400144df:	test   rax,rax
   1400144e2:	jne    0x140014517
   1400144e4:	mov    rcx,QWORD PTR [rsi+0x18]
   1400144e8:	lea    rdx,[rip+0x35475]        # 0x140049964
   1400144ef:	call   0x14002efdc
   1400144f4:	test   rax,rax
   1400144f7:	jne    0x14001450e
   1400144f9:	mov    rcx,QWORD PTR [rsi+0x18]
   1400144fd:	lea    rdx,[rip+0x35458]        # 0x14004995c
   140014504:	call   0x14002efdc
   140014509:	test   rax,rax
   14001450c:	je     0x140014527
   14001450e:	or     DWORD PTR [rdi+0x38],0x4000
   140014515:	jmp    0x140014527
   140014517:	or     DWORD PTR [rdi+0x38],0x2000
   14001451e:	jmp    0x140014527
   140014520:	or     DWORD PTR [rdi+0x38],0x1000
   140014527:	cmp    r12b,0xc
   14001452b:	jne    0x140014531
   14001452d:	mov    BYTE PTR [rdi+0x58],0x3
   140014531:	mov    rax,QWORD PTR [rbp+0x128]
   140014538:	test   rax,rax
   14001453b:	je     0x140014551
   14001453d:	movzx  eax,BYTE PTR [rax+0x44]
   140014541:	cmp    r12b,0xc
   140014545:	jne    0x140014549
   140014547:	inc    al
   140014549:	cmp    al,BYTE PTR [rdi+0x58]
   14001454c:	jle    0x140014551
   14001454e:	mov    BYTE PTR [rdi+0x58],al
   140014551:	mov    rbp,QWORD PTR [rsp+0x48]
   140014556:	mov    r12,QWORD PTR [rsp+0x50]
   14001455b:	add    rsp,0x20
   14001455f:	pop    r13
   140014561:	pop    rdi
   140014562:	pop    rsi
   140014563:	ret    
   140014564:	int3   
   140014565:	int3   
   140014566:	int3   
   140014567:	int3   
   140014568:	int3   
   140014569:	int3   
   14001456a:	int3   
   14001456b:	int3   
   14001456c:	int3   
   14001456d:	int3   
   14001456e:	int3   
   14001456f:	int3   
   140014570:	test   BYTE PTR [rcx+0x38],0x10
   140014574:	je     0x140014586
   140014576:	mov    rax,QWORD PTR [rcx+0x30]
   14001457a:	mov    rax,QWORD PTR [rax+0x118]
   140014581:	test   rax,rax
   140014584:	jne    0x140014592
   140014586:	mov    rax,QWORD PTR [rcx+0x30]
   14001458a:	mov    rax,QWORD PTR [rax+0x18]
   14001458e:	add    rax,0x4
   140014592:	repz ret 
   140014594:	int3   
   140014595:	int3   
   140014596:	int3   
   140014597:	int3   
   140014598:	int3   
   140014599:	int3   
   14001459a:	int3   
   14001459b:	int3   
   14001459c:	int3   
   14001459d:	int3   
   14001459e:	int3   
   14001459f:	int3   
   1400145a0:	mov    r8d,DWORD PTR [rcx+0x4]
   1400145a4:	test   r8d,r8d
   1400145a7:	je     0x1400145ec
   1400145a9:	mov    r10,QWORD PTR [rcx+0x20]
   1400145ad:	lea    eax,[r8-0x1]
   1400145b1:	xor    r9d,r9d
   1400145b4:	test   eax,eax
   1400145b6:	je     0x1400145dd
   1400145b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400145c0:	lea    ecx,[r9+r8*1]
   1400145c4:	shr    ecx,1
   1400145c6:	cmp    edx,DWORD PTR [r10+rcx*8]
   1400145ca:	jae    0x1400145d1
   1400145cc:	mov    r8d,ecx
   1400145cf:	jmp    0x1400145d4
   1400145d1:	mov    r9d,ecx
   1400145d4:	lea    eax,[r8-0x1]
   1400145d8:	cmp    r9d,eax
   1400145db:	jb     0x1400145c0
   1400145dd:	mov    eax,r9d
   1400145e0:	cmp    edx,DWORD PTR [r10+rax*8]
   1400145e4:	jne    0x1400145ec
   1400145e6:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   1400145eb:	ret    
   1400145ec:	mov    eax,0xfffe
   1400145f1:	ret    
   1400145f2:	int3   
   1400145f3:	int3   
   1400145f4:	int3   
   1400145f5:	int3   
   1400145f6:	int3   
   1400145f7:	int3   
   1400145f8:	int3   
   1400145f9:	int3   
   1400145fa:	int3   
   1400145fb:	int3   
   1400145fc:	int3   
   1400145fd:	int3   
   1400145fe:	int3   
   1400145ff:	int3   
   140014600:	mov    r11,rsp
   140014603:	push   rbx
   140014604:	push   rbp
   140014605:	push   rsi
   140014606:	push   rdi
   140014607:	push   r12
   140014609:	push   r13
   14001460b:	push   r14
   14001460d:	sub    rsp,0x60
   140014611:	mov    rbp,QWORD PTR [rcx+0x8]
   140014615:	mov    r9,QWORD PTR [rcx+0x10]
   140014619:	mov    rax,QWORD PTR [rcx+0x20]
   14001461d:	mov    r8,QWORD PTR [rcx+0x30]
   140014621:	mov    r13,QWORD PTR [rcx+0x18]
   140014625:	mov    r12,QWORD PTR [rcx+0x28]
   140014629:	mov    QWORD PTR [r11+0x20],r9
   14001462d:	mov    QWORD PTR [r11+0x18],rax
   140014631:	mov    QWORD PTR [r11+0x8],r8
   140014635:	test   BYTE PTR [rbp+0x38],0x10
   140014639:	mov    rsi,rdx
   14001463c:	mov    rdi,rcx
   14001463f:	je     0x14001464b
   140014641:	mov    rax,QWORD PTR [rbp+0x30]
   140014645:	mov    r14,QWORD PTR [rax+0x48]
   140014649:	jmp    0x140014653
   14001464b:	mov    rax,QWORD PTR [rbp+0x30]
   14001464f:	mov    r14,QWORD PTR [rax+0x40]
   140014653:	xor    ebx,ebx
   140014655:	cmp    r9,r13
   140014658:	jae    0x1400148f0
   14001465e:	mov    QWORD PTR [rsp+0xa8],r15
   140014666:	mov    r10d,0x3ff
   14001466c:	mov    r11d,0xdc00
   140014672:	mov    r15d,0xd800
   140014678:	nop    DWORD PTR [rax+rax*1+0x0]
   140014680:	mov    rcx,QWORD PTR [rsp+0xb0]
   140014688:	cmp    rcx,r12
   14001468b:	jae    0x1400148e2
   140014691:	movzx  eax,BYTE PTR [r9]
   140014695:	inc    r9
   140014698:	mov    edx,DWORD PTR [r14+rax*4]
   14001469c:	mov    QWORD PTR [rsp+0xb8],r9
   1400146a4:	cmp    edx,0x80100000
   1400146aa:	jge    0x1400146eb
   1400146ac:	mov    WORD PTR [rcx],dx
   1400146af:	mov    r8,QWORD PTR [rsp+0xa0]
   1400146b7:	add    QWORD PTR [rsp+0xb0],0x2
   1400146c0:	test   r8,r8
   1400146c3:	je     0x1400146dc
   1400146c5:	mov    DWORD PTR [r8],ebx
   1400146c8:	mov    r8,QWORD PTR [rsp+0xa0]
   1400146d0:	add    r8,0x4
   1400146d4:	mov    QWORD PTR [rsp+0xa0],r8
   1400146dc:	mov    r9,QWORD PTR [rsp+0xb8]
   1400146e4:	inc    ebx
   1400146e6:	jmp    0x1400148ac
   1400146eb:	mov    eax,edx
   1400146ed:	sar    eax,0x14
   1400146f0:	and    al,0xf
   1400146f2:	cmp    al,0x1
   1400146f4:	je     0x140014817
   1400146fa:	cmp    al,0x3
   1400146fc:	je     0x140014817
   140014702:	cmp    al,0x2
   140014704:	jne    0x14001474d
   140014706:	mov    rax,QWORD PTR [rsp+0xb0]
   14001470e:	mov    WORD PTR [rax],dx
   140014711:	mov    r8,QWORD PTR [rsp+0xa0]
   140014719:	add    QWORD PTR [rsp+0xb0],0x2
   140014722:	test   r8,r8
   140014725:	je     0x14001473e
   140014727:	mov    DWORD PTR [r8],ebx
   14001472a:	mov    r8,QWORD PTR [rsp+0xa0]
   140014732:	add    r8,0x4
   140014736:	mov    QWORD PTR [rsp+0xa0],r8
   14001473e:	mov    r9,QWORD PTR [rsp+0xb8]
   140014746:	inc    ebx
   140014748:	jmp    0x1400148ac
   14001474d:	cmp    al,0x6
   14001474f:	je     0x140014760
   140014751:	cmp    al,0x7
   140014753:	je     0x1400148b7
   140014759:	inc    ebx
   14001475b:	jmp    0x1400148ac
   140014760:	cmp    DWORD PTR [rsi],0x0
   140014763:	jg     0x1400148e8
   140014769:	mov    QWORD PTR [rdi+0x10],r9
   14001476d:	movzx  eax,BYTE PTR [r9-0x1]
   140014772:	mov    BYTE PTR [rbp+0x41],al
   140014775:	mov    rax,QWORD PTR [rbp+0x30]
   140014779:	movzx  ecx,BYTE PTR [rdi+0x2]
   14001477d:	mov    rdx,QWORD PTR [rax+0x128]
   140014784:	test   rdx,rdx
   140014787:	je     0x1400147d8
   140014789:	mov    QWORD PTR [rsp+0x50],rsi
   14001478e:	mov    BYTE PTR [rsp+0x48],cl
   140014792:	mov    DWORD PTR [rsp+0x40],ebx
   140014796:	lea    rax,[rsp+0xa0]
   14001479e:	lea    r9,[rsp+0xb8]
   1400147a6:	mov    r8d,0x1
   1400147ac:	mov    QWORD PTR [rsp+0x38],rax
   1400147b1:	lea    rax,[rsp+0xb0]
   1400147b9:	mov    QWORD PTR [rsp+0x30],r12
   1400147be:	mov    QWORD PTR [rsp+0x28],rax
   1400147c3:	mov    rcx,rbp
   1400147c6:	mov    QWORD PTR [rsp+0x20],r13
   1400147cb:	call   0x140029400
   1400147d0:	test   al,al
   1400147d2:	je     0x1400147d8
   1400147d4:	xor    al,al
   1400147d6:	jmp    0x1400147e0
   1400147d8:	mov    DWORD PTR [rsi],0xa
   1400147de:	mov    al,0x1
   1400147e0:	mov    BYTE PTR [rbp+0x40],al
   1400147e3:	mov    r9,QWORD PTR [rsp+0xb8]
   1400147eb:	mov    eax,r9d
   1400147ee:	sub    eax,DWORD PTR [rdi+0x10]
   1400147f1:	cmp    DWORD PTR [rsi],0x0
   1400147f4:	lea    ebx,[rbx+rax*1+0x1]
   1400147f8:	jg     0x1400148d8
   1400147fe:	mov    r8,QWORD PTR [rsp+0xa0]
   140014806:	mov    r10d,0x3ff
   14001480c:	mov    r11d,0xdc00
   140014812:	jmp    0x1400148ac
   140014817:	mov    rax,QWORD PTR [rsp+0xb0]
   14001481f:	and    edx,0xfffff
   140014825:	mov    ecx,edx
   140014827:	sar    ecx,0xa
   14001482a:	or     cx,r15w
   14001482e:	mov    WORD PTR [rax],cx
   140014831:	mov    rax,QWORD PTR [rsp+0xb0]
   140014839:	mov    rcx,QWORD PTR [rsp+0xa0]
   140014841:	add    rax,0x2
   140014845:	mov    QWORD PTR [rsp+0xb0],rax
   14001484d:	test   rcx,rcx
   140014850:	je     0x140014865
   140014852:	mov    DWORD PTR [rcx],ebx
   140014854:	add    QWORD PTR [rsp+0xa0],0x4
   14001485d:	mov    rax,QWORD PTR [rsp+0xb0]
   140014865:	and    dx,r10w
   140014869:	or     dx,r11w
   14001486d:	cmp    rax,r12
   140014870:	jae    0x1400148bf
   140014872:	mov    WORD PTR [rax],dx
   140014875:	mov    r8,QWORD PTR [rsp+0xa0]
   14001487d:	add    QWORD PTR [rsp+0xb0],0x2
   140014886:	test   r8,r8
   140014889:	je     0x1400148a2
   14001488b:	mov    DWORD PTR [r8],ebx
   14001488e:	mov    r8,QWORD PTR [rsp+0xa0]
   140014896:	add    r8,0x4
   14001489a:	mov    QWORD PTR [rsp+0xa0],r8
   1400148a2:	mov    r9,QWORD PTR [rsp+0xb8]
   1400148aa:	inc    ebx
   1400148ac:	cmp    r9,r13
   1400148af:	jb     0x140014680
   1400148b5:	jmp    0x1400148e8
   1400148b7:	mov    DWORD PTR [rsi],0xc
   1400148bd:	jmp    0x1400148e8
   1400148bf:	mov    WORD PTR [rbp+0x90],dx
   1400148c6:	mov    BYTE PTR [rbp+0x5d],0x1
   1400148ca:	mov    r9,QWORD PTR [rsp+0xb8]
   1400148d2:	mov    DWORD PTR [rsi],0xf
   1400148d8:	mov    r8,QWORD PTR [rsp+0xa0]
   1400148e0:	jmp    0x1400148e8
   1400148e2:	mov    DWORD PTR [rsi],0xf
   1400148e8:	mov    r15,QWORD PTR [rsp+0xa8]
   1400148f0:	mov    rax,QWORD PTR [rsp+0xb0]
   1400148f8:	mov    QWORD PTR [rdi+0x10],r9
   1400148fc:	mov    QWORD PTR [rdi+0x30],r8
   140014900:	mov    QWORD PTR [rdi+0x20],rax
   140014904:	add    rsp,0x60
   140014908:	pop    r14
   14001490a:	pop    r13
   14001490c:	pop    r12
   14001490e:	pop    rdi
   14001490f:	pop    rsi
   140014910:	pop    rbp
   140014911:	pop    rbx
   140014912:	ret    
   140014913:	int3   
   140014914:	int3   
   140014915:	int3   
   140014916:	int3   
   140014917:	int3   
   140014918:	int3   
   140014919:	int3   
   14001491a:	int3   
   14001491b:	int3   
   14001491c:	int3   
   14001491d:	int3   
   14001491e:	int3   
   14001491f:	int3   
   140014920:	mov    rax,rsp
   140014923:	push   rbx
   140014924:	push   rbp
   140014925:	push   rsi
   140014926:	push   rdi
   140014927:	push   r12
   140014929:	push   r13
   14001492b:	push   r14
   14001492d:	push   r15
   14001492f:	sub    rsp,0x68
   140014933:	mov    rdi,QWORD PTR [rcx+0x8]
   140014937:	mov    r10,QWORD PTR [rcx+0x20]
   14001493b:	mov    r8,QWORD PTR [rcx+0x10]
   14001493f:	mov    r11,QWORD PTR [rcx+0x28]
   140014943:	mov    rbp,QWORD PTR [rcx+0x18]
   140014947:	mov    QWORD PTR [rax+0x8],r8
   14001494b:	mov    QWORD PTR [rax+0x10],r10
   14001494f:	mov    rax,QWORD PTR [rcx+0x30]
   140014953:	sub    r11,r10
   140014956:	mov    QWORD PTR [rsp+0xc0],rax
   14001495e:	mov    rax,QWORD PTR [rdi+0x30]
   140014962:	sar    r11,1
   140014965:	test   BYTE PTR [rdi+0x38],0x10
   140014969:	mov    r13,rdx
   14001496c:	mov    r14,rcx
   14001496f:	mov    QWORD PTR [rsp+0xc8],rdi
   140014977:	je     0x14001497f
   140014979:	mov    r12,QWORD PTR [rax+0x48]
   14001497d:	jmp    0x140014983
   14001497f:	mov    r12,QWORD PTR [rax+0x40]
   140014983:	mov    eax,ebp
   140014985:	xor    ebx,ebx
   140014987:	mov    r15,r8
   14001498a:	sub    eax,r8d
   14001498d:	cmp    eax,r11d
   140014990:	cmovl  r11d,eax
   140014994:	cmp    r11d,0x10
   140014998:	jl     0x140014f02
   14001499e:	mov    edi,r11d
   1400149a1:	sar    edi,0x4
   1400149a4:	mov    esi,edi
   1400149a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400149b0:	movzx  eax,BYTE PTR [r8]
   1400149b4:	inc    r8
   1400149b7:	mov    r9d,DWORD PTR [r12+rax*4]
   1400149bb:	mov    QWORD PTR [rsp+0xb0],r8
   1400149c3:	mov    WORD PTR [r10],r9w
   1400149c7:	mov    r8,QWORD PTR [rsp+0xb8]
   1400149cf:	mov    rdx,QWORD PTR [rsp+0xb0]
   1400149d7:	add    r8,0x2
   1400149db:	inc    rdx
   1400149de:	mov    QWORD PTR [rsp+0xb8],r8
   1400149e6:	movzx  eax,BYTE PTR [rdx-0x1]
   1400149ea:	mov    ecx,DWORD PTR [r12+rax*4]
   1400149ee:	mov    QWORD PTR [rsp+0xb0],rdx
   1400149f6:	mov    WORD PTR [r8],cx
   1400149fa:	mov    r8,QWORD PTR [rsp+0xb8]
   140014a02:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014a0a:	add    r8,0x2
   140014a0e:	or     r9d,ecx
   140014a11:	inc    rdx
   140014a14:	mov    QWORD PTR [rsp+0xb8],r8
   140014a1c:	movzx  eax,BYTE PTR [rdx-0x1]
   140014a20:	mov    ecx,DWORD PTR [r12+rax*4]
   140014a24:	mov    QWORD PTR [rsp+0xb0],rdx
   140014a2c:	mov    WORD PTR [r8],cx
   140014a30:	mov    r8,QWORD PTR [rsp+0xb8]
   140014a38:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014a40:	add    r8,0x2
   140014a44:	or     r9d,ecx
   140014a47:	inc    rdx
   140014a4a:	mov    QWORD PTR [rsp+0xb8],r8
   140014a52:	movzx  eax,BYTE PTR [rdx-0x1]
   140014a56:	mov    ecx,DWORD PTR [r12+rax*4]
   140014a5a:	mov    QWORD PTR [rsp+0xb0],rdx
   140014a62:	mov    WORD PTR [r8],cx
   140014a66:	mov    r8,QWORD PTR [rsp+0xb8]
   140014a6e:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014a76:	add    r8,0x2
   140014a7a:	or     r9d,ecx
   140014a7d:	inc    rdx
   140014a80:	mov    QWORD PTR [rsp+0xb8],r8
   140014a88:	movzx  eax,BYTE PTR [rdx-0x1]
   140014a8c:	mov    ecx,DWORD PTR [r12+rax*4]
   140014a90:	mov    QWORD PTR [rsp+0xb0],rdx
   140014a98:	mov    WORD PTR [r8],cx
   140014a9c:	mov    r8,QWORD PTR [rsp+0xb8]
   140014aa4:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014aac:	add    r8,0x2
   140014ab0:	or     r9d,ecx
   140014ab3:	inc    rdx
   140014ab6:	mov    QWORD PTR [rsp+0xb8],r8
   140014abe:	movzx  eax,BYTE PTR [rdx-0x1]
   140014ac2:	mov    ecx,DWORD PTR [r12+rax*4]
   140014ac6:	mov    QWORD PTR [rsp+0xb0],rdx
   140014ace:	mov    WORD PTR [r8],cx
   140014ad2:	mov    r8,QWORD PTR [rsp+0xb8]
   140014ada:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014ae2:	add    r8,0x2
   140014ae6:	or     r9d,ecx
   140014ae9:	inc    rdx
   140014aec:	mov    QWORD PTR [rsp+0xb8],r8
   140014af4:	movzx  eax,BYTE PTR [rdx-0x1]
   140014af8:	mov    ecx,DWORD PTR [r12+rax*4]
   140014afc:	mov    QWORD PTR [rsp+0xb0],rdx
   140014b04:	mov    WORD PTR [r8],cx
   140014b08:	mov    r8,QWORD PTR [rsp+0xb8]
   140014b10:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014b18:	add    r8,0x2
   140014b1c:	or     r9d,ecx
   140014b1f:	inc    rdx
   140014b22:	mov    QWORD PTR [rsp+0xb8],r8
   140014b2a:	movzx  eax,BYTE PTR [rdx-0x1]
   140014b2e:	mov    ecx,DWORD PTR [r12+rax*4]
   140014b32:	mov    QWORD PTR [rsp+0xb0],rdx
   140014b3a:	mov    WORD PTR [r8],cx
   140014b3e:	mov    r8,QWORD PTR [rsp+0xb8]
   140014b46:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014b4e:	or     r9d,ecx
   140014b51:	add    r8,0x2
   140014b55:	mov    QWORD PTR [rsp+0xb8],r8
   140014b5d:	movzx  eax,BYTE PTR [rdx]
   140014b60:	mov    ecx,DWORD PTR [r12+rax*4]
   140014b64:	inc    rdx
   140014b67:	or     r9d,ecx
   140014b6a:	mov    QWORD PTR [rsp+0xb0],rdx
   140014b72:	mov    WORD PTR [r8],cx
   140014b76:	mov    r8,QWORD PTR [rsp+0xb8]
   140014b7e:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014b86:	add    r8,0x2
   140014b8a:	mov    QWORD PTR [rsp+0xb8],r8
   140014b92:	movzx  eax,BYTE PTR [rdx]
   140014b95:	inc    rdx
   140014b98:	mov    ecx,DWORD PTR [r12+rax*4]
   140014b9c:	mov    QWORD PTR [rsp+0xb0],rdx
   140014ba4:	mov    WORD PTR [r8],cx
   140014ba8:	mov    r8,QWORD PTR [rsp+0xb8]
   140014bb0:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014bb8:	add    r8,0x2
   140014bbc:	or     r9d,ecx
   140014bbf:	inc    rdx
   140014bc2:	mov    QWORD PTR [rsp+0xb8],r8
   140014bca:	movzx  eax,BYTE PTR [rdx-0x1]
   140014bce:	mov    ecx,DWORD PTR [r12+rax*4]
   140014bd2:	mov    QWORD PTR [rsp+0xb0],rdx
   140014bda:	mov    WORD PTR [r8],cx
   140014bde:	mov    r8,QWORD PTR [rsp+0xb8]
   140014be6:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014bee:	add    r8,0x2
   140014bf2:	or     r9d,ecx
   140014bf5:	inc    rdx
   140014bf8:	mov    QWORD PTR [rsp+0xb8],r8
   140014c00:	movzx  eax,BYTE PTR [rdx-0x1]
   140014c04:	mov    ecx,DWORD PTR [r12+rax*4]
   140014c08:	mov    QWORD PTR [rsp+0xb0],rdx
   140014c10:	mov    WORD PTR [r8],cx
   140014c14:	mov    r8,QWORD PTR [rsp+0xb8]
   140014c1c:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014c24:	add    r8,0x2
   140014c28:	or     r9d,ecx
   140014c2b:	inc    rdx
   140014c2e:	mov    QWORD PTR [rsp+0xb8],r8
   140014c36:	movzx  eax,BYTE PTR [rdx-0x1]
   140014c3a:	mov    ecx,DWORD PTR [r12+rax*4]
   140014c3e:	mov    QWORD PTR [rsp+0xb0],rdx
   140014c46:	mov    WORD PTR [r8],cx
   140014c4a:	mov    r8,QWORD PTR [rsp+0xb8]
   140014c52:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014c5a:	add    r8,0x2
   140014c5e:	or     r9d,ecx
   140014c61:	inc    rdx
   140014c64:	mov    QWORD PTR [rsp+0xb8],r8
   140014c6c:	movzx  eax,BYTE PTR [rdx-0x1]
   140014c70:	mov    ecx,DWORD PTR [r12+rax*4]
   140014c74:	mov    QWORD PTR [rsp+0xb0],rdx
   140014c7c:	mov    WORD PTR [r8],cx
   140014c80:	mov    r8,QWORD PTR [rsp+0xb8]
   140014c88:	mov    rdx,QWORD PTR [rsp+0xb0]
   140014c90:	add    r8,0x2
   140014c94:	or     r9d,ecx
   140014c97:	inc    rdx
   140014c9a:	mov    QWORD PTR [rsp+0xb8],r8
   140014ca2:	movzx  eax,BYTE PTR [rdx-0x1]
   140014ca6:	mov    ecx,DWORD PTR [r12+rax*4]
   140014caa:	mov    QWORD PTR [rsp+0xb0],rdx
   140014cb2:	mov    WORD PTR [r8],cx
   140014cb6:	mov    rdx,QWORD PTR [rsp+0xb8]
   140014cbe:	or     r9d,ecx
   140014cc1:	mov    rcx,QWORD PTR [rsp+0xb0]
   140014cc9:	add    rdx,0x2
   140014ccd:	mov    QWORD PTR [rsp+0xb8],rdx
   140014cd5:	movzx  eax,BYTE PTR [rcx]
   140014cd8:	inc    rcx
   140014cdb:	mov    r8d,DWORD PTR [r12+rax*4]
   140014cdf:	mov    QWORD PTR [rsp+0xb0],rcx
   140014ce7:	mov    WORD PTR [rdx],r8w
   140014ceb:	mov    r10,QWORD PTR [rsp+0xb8]
   140014cf3:	or     r8d,r9d
   140014cf6:	add    r10,0x2
   140014cfa:	cmp    r8d,0x80100000
   140014d01:	mov    r8,QWORD PTR [rsp+0xb0]
   140014d09:	mov    QWORD PTR [rsp+0xb8],r10
   140014d11:	jge    0x140014d1f
   140014d13:	dec    edi
   140014d15:	test   edi,edi
   140014d17:	jg     0x1400149b0
   140014d1d:	jmp    0x140014d37
   140014d1f:	sub    r8,0x10
   140014d23:	sub    r10,0x20
   140014d27:	mov    QWORD PTR [rsp+0xb8],r10
   140014d2f:	mov    QWORD PTR [rsp+0xb0],r8
   140014d37:	mov    rcx,QWORD PTR [rsp+0xc0]
   140014d3f:	sub    esi,edi
   140014d41:	mov    eax,esi
   140014d43:	shl    eax,0x4
   140014d46:	sub    r11d,eax
   140014d49:	test   rcx,rcx
   140014d4c:	je     0x140014efa
   140014d52:	cdqe   
   140014d54:	add    r15,rax
   140014d57:	test   esi,esi
   140014d59:	jle    0x140014efa
   140014d5f:	nop
   140014d60:	mov    DWORD PTR [rcx],ebx
   140014d62:	mov    rax,QWORD PTR [rsp+0xc0]
   140014d6a:	inc    ebx
   140014d6c:	add    rax,0x4
   140014d70:	mov    QWORD PTR [rsp+0xc0],rax
   140014d78:	mov    DWORD PTR [rax],ebx
   140014d7a:	mov    rax,QWORD PTR [rsp+0xc0]
   140014d82:	inc    ebx
   140014d84:	add    rax,0x4
   140014d88:	mov    QWORD PTR [rsp+0xc0],rax
   140014d90:	mov    DWORD PTR [rax],ebx
   140014d92:	mov    rax,QWORD PTR [rsp+0xc0]
   140014d9a:	inc    ebx
   140014d9c:	add    rax,0x4
   140014da0:	mov    QWORD PTR [rsp+0xc0],rax
   140014da8:	mov    DWORD PTR [rax],ebx
   140014daa:	mov    rax,QWORD PTR [rsp+0xc0]
   140014db2:	inc    ebx
   140014db4:	add    rax,0x4
   140014db8:	mov    QWORD PTR [rsp+0xc0],rax
   140014dc0:	mov    DWORD PTR [rax],ebx
   140014dc2:	mov    rax,QWORD PTR [rsp+0xc0]
   140014dca:	inc    ebx
   140014dcc:	add    rax,0x4
   140014dd0:	mov    QWORD PTR [rsp+0xc0],rax
   140014dd8:	mov    DWORD PTR [rax],ebx
   140014dda:	mov    rax,QWORD PTR [rsp+0xc0]
   140014de2:	inc    ebx
   140014de4:	add    rax,0x4
   140014de8:	mov    QWORD PTR [rsp+0xc0],rax
   140014df0:	mov    DWORD PTR [rax],ebx
   140014df2:	mov    rax,QWORD PTR [rsp+0xc0]
   140014dfa:	inc    ebx
   140014dfc:	add    rax,0x4
   140014e00:	mov    QWORD PTR [rsp+0xc0],rax
   140014e08:	mov    DWORD PTR [rax],ebx
   140014e0a:	mov    rax,QWORD PTR [rsp+0xc0]
   140014e12:	inc    ebx
   140014e14:	add    rax,0x4
   140014e18:	mov    QWORD PTR [rsp+0xc0],rax
   140014e20:	mov    DWORD PTR [rax],ebx
   140014e22:	mov    rax,QWORD PTR [rsp+0xc0]
   140014e2a:	inc    ebx
   140014e2c:	add    rax,0x4
   140014e30:	mov    QWORD PTR [rsp+0xc0],rax
   140014e38:	mov    DWORD PTR [rax],ebx
   140014e3a:	mov    rax,QWORD PTR [rsp+0xc0]
   140014e42:	inc    ebx
   140014e44:	add    rax,0x4
   140014e48:	mov    QWORD PTR [rsp+0xc0],rax
   140014e50:	mov    DWORD PTR [rax],ebx
   140014e52:	mov    rax,QWORD PTR [rsp+0xc0]
   140014e5a:	inc    ebx
   140014e5c:	add    rax,0x4
   140014e60:	mov    QWORD PTR [rsp+0xc0],rax
   140014e68:	mov    DWORD PTR [rax],ebx
   140014e6a:	mov    rax,QWORD PTR [rsp+0xc0]
   140014e72:	inc    ebx
   140014e74:	add    rax,0x4
   140014e78:	mov    QWORD PTR [rsp+0xc0],rax
   140014e80:	mov    DWORD PTR [rax],ebx
   140014e82:	mov    rax,QWORD PTR [rsp+0xc0]
   140014e8a:	inc    ebx
   140014e8c:	add    rax,0x4
   140014e90:	mov    QWORD PTR [rsp+0xc0],rax
   140014e98:	mov    DWORD PTR [rax],ebx
   140014e9a:	mov    rax,QWORD PTR [rsp+0xc0]
   140014ea2:	inc    ebx
   140014ea4:	add    rax,0x4
   140014ea8:	mov    QWORD PTR [rsp+0xc0],rax
   140014eb0:	mov    DWORD PTR [rax],ebx
   140014eb2:	mov    rax,QWORD PTR [rsp+0xc0]
   140014eba:	inc    ebx
   140014ebc:	add    rax,0x4
   140014ec0:	mov    QWORD PTR [rsp+0xc0],rax
   140014ec8:	mov    DWORD PTR [rax],ebx
   140014eca:	mov    rcx,QWORD PTR [rsp+0xc0]
   140014ed2:	inc    ebx
   140014ed4:	add    rcx,0x4
   140014ed8:	dec    esi
   140014eda:	mov    QWORD PTR [rsp+0xc0],rcx
   140014ee2:	test   esi,esi
   140014ee4:	jg     0x140014d60
   140014eea:	mov    r8,QWORD PTR [rsp+0xb0]
   140014ef2:	mov    r10,QWORD PTR [rsp+0xb8]
   140014efa:	mov    rdi,QWORD PTR [rsp+0xc8]
   140014f02:	test   r11d,r11d
   140014f05:	jle    0x14001508a
   140014f0b:	cmp    r8,rbp
   140014f0e:	jae    0x14001508a
   140014f14:	movzx  eax,BYTE PTR [r8]
   140014f18:	inc    r8
   140014f1b:	mov    ecx,DWORD PTR [r12+rax*4]
   140014f1f:	mov    QWORD PTR [rsp+0xb0],r8
   140014f27:	cmp    ecx,0x80100000
   140014f2d:	jge    0x140014f54
   140014f2f:	mov    WORD PTR [r10],cx
   140014f33:	mov    r10,QWORD PTR [rsp+0xb8]
   140014f3b:	mov    r8,QWORD PTR [rsp+0xb0]
   140014f43:	add    r10,0x2
   140014f47:	dec    r11d
   140014f4a:	mov    QWORD PTR [rsp+0xb8],r10
   140014f52:	jmp    0x140014f02
   140014f54:	mov    eax,ecx
   140014f56:	sar    eax,0x14
   140014f59:	and    al,0xf
   140014f5b:	cmp    al,0x2
   140014f5d:	je     0x140014f2f
   140014f5f:	cmp    al,0x6
   140014f61:	je     0x140014f6f
   140014f63:	cmp    al,0x7
   140014f65:	jne    0x140014f02
   140014f67:	mov    DWORD PTR [r13+0x0],0xc
   140014f6f:	mov    rax,QWORD PTR [rsp+0xc0]
   140014f77:	test   rax,rax
   140014f7a:	je     0x140014fbe
   140014f7c:	mov    ecx,r8d
   140014f7f:	sub    ecx,r15d
   140014f82:	dec    ecx
   140014f84:	test   ecx,ecx
   140014f86:	jle    0x140014fbe
   140014f88:	nop    DWORD PTR [rax+rax*1+0x0]
   140014f90:	mov    DWORD PTR [rax],ebx
   140014f92:	mov    rax,QWORD PTR [rsp+0xc0]
   140014f9a:	dec    ecx
   140014f9c:	add    rax,0x4
   140014fa0:	inc    ebx
   140014fa2:	mov    QWORD PTR [rsp+0xc0],rax
   140014faa:	test   ecx,ecx
   140014fac:	jg     0x140014f90
   140014fae:	mov    r8,QWORD PTR [rsp+0xb0]
   140014fb6:	mov    r10,QWORD PTR [rsp+0xb8]
   140014fbe:	cmp    DWORD PTR [r13+0x0],0x0
   140014fc3:	jg     0x1400150ac
   140014fc9:	movzx  eax,BYTE PTR [r8-0x1]
   140014fce:	mov    r15,r8
   140014fd1:	mov    BYTE PTR [rdi+0x41],al
   140014fd4:	mov    rax,QWORD PTR [rdi+0x30]
   140014fd8:	movzx  ecx,BYTE PTR [r14+0x2]
   140014fdd:	mov    rdx,QWORD PTR [rax+0x128]
   140014fe4:	mov    r8,QWORD PTR [r14+0x28]
   140014fe8:	test   rdx,rdx
   140014feb:	je     0x14001503c
   140014fed:	mov    QWORD PTR [rsp+0x50],r13
   140014ff2:	mov    BYTE PTR [rsp+0x48],cl
   140014ff6:	mov    DWORD PTR [rsp+0x40],ebx
   140014ffa:	lea    rax,[rsp+0xc0]
   140015002:	lea    r9,[rsp+0xb0]
   14001500a:	mov    rcx,rdi
   14001500d:	mov    QWORD PTR [rsp+0x38],rax
   140015012:	mov    QWORD PTR [rsp+0x30],r8
   140015017:	lea    rax,[rsp+0xb8]
   14001501f:	mov    QWORD PTR [rsp+0x28],rax
   140015024:	mov    r8d,0x1
   14001502a:	mov    QWORD PTR [rsp+0x20],rbp
   14001502f:	call   0x140029400
   140015034:	test   al,al
   140015036:	je     0x14001503c
   140015038:	xor    al,al
   14001503a:	jmp    0x140015046
   14001503c:	mov    DWORD PTR [r13+0x0],0xa
   140015044:	mov    al,0x1
   140015046:	mov    BYTE PTR [rdi+0x40],al
   140015049:	mov    r8,QWORD PTR [rsp+0xb0]
   140015051:	mov    r10,QWORD PTR [rsp+0xb8]
   140015059:	mov    eax,r8d
   14001505c:	sub    eax,r15d
   14001505f:	cmp    DWORD PTR [r13+0x0],0x0
   140015064:	lea    ebx,[rbx+rax*1+0x1]
   140015068:	jg     0x1400150a4
   14001506a:	mov    r11,QWORD PTR [r14+0x28]
   14001506e:	mov    eax,ebp
   140015070:	sub    r11,r10
   140015073:	sub    eax,r8d
   140015076:	sar    r11,1
   140015079:	cmp    eax,r11d
   14001507c:	jge    0x140014994
   140015082:	mov    r11d,eax
   140015085:	jmp    0x140014994
   14001508a:	cmp    DWORD PTR [r13+0x0],0x0
   14001508f:	jg     0x1400150a4
   140015091:	cmp    r8,rbp
   140015094:	jae    0x1400150a4
   140015096:	cmp    r10,QWORD PTR [r14+0x28]
   14001509a:	jb     0x1400150a4
   14001509c:	mov    DWORD PTR [r13+0x0],0xf
   1400150a4:	mov    rax,QWORD PTR [rsp+0xc0]
   1400150ac:	test   rax,rax
   1400150af:	je     0x1400150ee
   1400150b1:	mov    rcx,r8
   1400150b4:	sub    rcx,r15
   1400150b7:	je     0x1400150ee
   1400150b9:	nop    DWORD PTR [rax+0x0]
   1400150c0:	mov    DWORD PTR [rax],ebx
   1400150c2:	mov    rax,QWORD PTR [rsp+0xc0]
   1400150ca:	inc    ebx
   1400150cc:	add    rax,0x4
   1400150d0:	sub    rcx,0x1
   1400150d4:	mov    QWORD PTR [rsp+0xc0],rax
   1400150dc:	jne    0x1400150c0
   1400150de:	mov    r8,QWORD PTR [rsp+0xb0]
   1400150e6:	mov    r10,QWORD PTR [rsp+0xb8]
   1400150ee:	mov    QWORD PTR [r14+0x10],r8
   1400150f2:	mov    QWORD PTR [r14+0x20],r10
   1400150f6:	mov    QWORD PTR [r14+0x30],rax
   1400150fa:	add    rsp,0x68
   1400150fe:	pop    r15
   140015100:	pop    r14
   140015102:	pop    r13
   140015104:	pop    r12
   140015106:	pop    rdi
   140015107:	pop    rsi
   140015108:	pop    rbp
   140015109:	pop    rbx
   14001510a:	ret    
   14001510b:	int3   
   14001510c:	int3   
   14001510d:	int3   
   14001510e:	int3   
   14001510f:	int3   
   140015110:	mov    QWORD PTR [rsp+0x10],rsi
   140015115:	push   rdi
   140015116:	sub    rsp,0x20
   14001511a:	movzx  edi,dl
   14001511d:	mov    rsi,rcx
   140015120:	shl    rdi,0xa
   140015124:	add    rdi,rcx
   140015127:	mov    eax,DWORD PTR [rdi+0x284]
   14001512d:	test   eax,eax
   14001512f:	jns    0x14001514a
   140015131:	and    eax,0xf00000
   140015136:	cmp    eax,0x700000
   14001513b:	je     0x14001514a
   14001513d:	mov    al,0x1
   14001513f:	mov    rsi,QWORD PTR [rsp+0x38]
   140015144:	add    rsp,0x20
   140015148:	pop    rdi
   140015149:	ret    
   14001514a:	mov    eax,DWORD PTR [rdi+0x104]
   140015150:	test   eax,eax
   140015152:	jns    0x140015160
   140015154:	and    eax,0xf00000
   140015159:	cmp    eax,0x700000
   14001515e:	jne    0x14001513d
   140015160:	mov    QWORD PTR [rsp+0x30],rbx
   140015165:	xor    ebx,ebx
   140015167:	mov    rax,rbx
   14001516a:	nop    WORD PTR [rax+rax*1+0x0]
   140015170:	mov    ecx,DWORD PTR [rdi+rax*4]
   140015173:	test   ecx,ecx
   140015175:	jns    0x140015185
   140015177:	and    ecx,0xf00000
   14001517d:	cmp    ecx,0x700000
   140015183:	jne    0x1400151c7
   140015185:	inc    rax
   140015188:	cmp    rax,0xff
   14001518e:	jle    0x140015170
   140015190:	mov    eax,DWORD PTR [rdi+rbx*4]
   140015193:	test   eax,eax
   140015195:	js     0x1400151a9
   140015197:	sar    eax,0x18
   14001519a:	mov    rcx,rsi
   14001519d:	movzx  edx,al
   1400151a0:	call   0x140015110
   1400151a5:	test   al,al
   1400151a7:	jne    0x1400151c7
   1400151a9:	inc    rbx
   1400151ac:	cmp    rbx,0xff
   1400151b3:	jle    0x140015190
   1400151b5:	xor    al,al
   1400151b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400151bc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400151c1:	add    rsp,0x20
   1400151c5:	pop    rdi
   1400151c6:	ret    
   1400151c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400151cc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400151d1:	mov    al,0x1
   1400151d3:	add    rsp,0x20
   1400151d7:	pop    rdi
   1400151d8:	ret    
   1400151d9:	int3   
   1400151da:	int3   
   1400151db:	int3   
   1400151dc:	int3   
   1400151dd:	int3   
   1400151de:	int3   
   1400151df:	int3   
   1400151e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400151e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400151ea:	push   r14
   1400151ec:	sub    rsp,0xc0
   1400151f3:	mov    r14,QWORD PTR [rcx+0x8]
   1400151f7:	mov    r11,rdx
   1400151fa:	mov    r10,rcx
   1400151fd:	cmp    BYTE PTR [r14+0x11a],0x0
   140015205:	jle    0x140015241
   140015207:	mov    r9,rdx
   14001520a:	mov    rdx,rcx
   14001520d:	or     r8d,0xffffffff
   140015211:	mov    rcx,r14
   140015214:	call   0x1400296e0
   140015219:	mov    r11,QWORD PTR [rsp+0xd8]
   140015221:	cmp    DWORD PTR [r11],0x0
   140015225:	jg     0x140015cb0
   14001522b:	cmp    BYTE PTR [r14+0x11a],0x0
   140015233:	jl     0x140015cb0
   140015239:	mov    r10,QWORD PTR [rsp+0xd0]
   140015241:	mov    rax,QWORD PTR [r14+0x30]
   140015245:	cmp    BYTE PTR [rax+0x38],0x1
   140015249:	jne    0x14001527e
   14001524b:	test   BYTE PTR [rax+0x105],0x1
   140015252:	jne    0x140015269
   140015254:	mov    rdx,r11
   140015257:	mov    rcx,r10
   14001525a:	call   0x140014920
   14001525f:	add    rsp,0xc0
   140015266:	pop    r14
   140015268:	ret    
   140015269:	mov    rdx,r11
   14001526c:	mov    rcx,r10
   14001526f:	call   0x140014600
   140015274:	add    rsp,0xc0
   14001527b:	pop    r14
   14001527d:	ret    
   14001527e:	mov    rax,QWORD PTR [r10+0x20]
   140015282:	mov    r8,QWORD PTR [r10+0x10]
   140015286:	mov    r9,QWORD PTR [r10+0x28]
   14001528a:	mov    QWORD PTR [rsp+0xb8],rbx
   140015292:	mov    QWORD PTR [rsp+0xb0],rbp
   14001529a:	mov    QWORD PTR [rsp+0xa8],rsi
   1400152a2:	mov    QWORD PTR [rsp+0xa0],rdi
   1400152aa:	mov    QWORD PTR [rsp+0xe0],rax
   1400152b2:	mov    rax,QWORD PTR [r10+0x30]
   1400152b6:	mov    QWORD PTR [rsp+0x98],r12
   1400152be:	mov    QWORD PTR [rsp+0x90],r13
   1400152c6:	mov    r13,QWORD PTR [r10+0x18]
   1400152ca:	mov    QWORD PTR [rsp+0xe8],rax
   1400152d2:	mov    QWORD PTR [rsp+0x60],r8
   1400152d7:	test   BYTE PTR [r14+0x38],0x10
   1400152dc:	mov    QWORD PTR [rsp+0x88],r15
   1400152e4:	mov    QWORD PTR [rsp+0x68],r9
   1400152e9:	je     0x1400152f5
   1400152eb:	mov    rax,QWORD PTR [r14+0x30]
   1400152ef:	mov    r15,QWORD PTR [rax+0x48]
   1400152f3:	jmp    0x1400152fd
   1400152f5:	mov    rax,QWORD PTR [r14+0x30]
   1400152f9:	mov    r15,QWORD PTR [rax+0x40]
   1400152fd:	mov    dil,BYTE PTR [r14+0x4c]
   140015301:	mov    r10,QWORD PTR [rax+0x50]
   140015305:	mov    ebx,DWORD PTR [r14+0x48]
   140015309:	movzx  esi,BYTE PTR [r14+0x40]
   14001530e:	mov    QWORD PTR [rsp+0x70],r10
   140015313:	lea    rdx,[r14+0x41]
   140015317:	test   dil,dil
   14001531a:	jne    0x140015320
   14001531c:	mov    dil,BYTE PTR [rax+0x39]
   140015320:	movzx  eax,sil
   140015324:	neg    al
   140015326:	sbb    r12d,r12d
   140015329:	xor    ebp,ebp
   14001532b:	cmp    r8,r13
   14001532e:	jae    0x140015c3f
   140015334:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140015340:	cmp    QWORD PTR [rsp+0xe0],r9
   140015348:	jae    0x140015c38
   14001534e:	test   sil,sil
   140015351:	jne    0x1400155fa
   140015357:	cmp    QWORD PTR [rsp+0xe8],0x0
   140015360:	jne    0x140015480
   140015366:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015370:	movzx  eax,BYTE PTR [r8]
   140015374:	movzx  ecx,dil
   140015378:	shl    rcx,0x8
   14001537c:	add    rcx,rax
   14001537f:	mov    edx,DWORD PTR [r15+rcx*4]
   140015383:	test   edx,edx
   140015385:	js     0x140015413
   14001538b:	inc    r8
   14001538e:	mov    edi,edx
   140015390:	mov    ebx,edx
   140015392:	sar    edi,0x18
   140015395:	and    ebx,0xffffff
   14001539b:	mov    QWORD PTR [rsp+0x60],r8
   1400153a0:	cmp    r8,r13
   1400153a3:	jae    0x140015465
   1400153a9:	movzx  eax,BYTE PTR [r8]
   1400153ad:	movzx  ecx,dil
   1400153b1:	shl    rcx,0x8
   1400153b5:	add    rcx,rax
   1400153b8:	mov    edx,DWORD PTR [r15+rcx*4]
   1400153bc:	test   edx,edx
   1400153be:	jns    0x140015465
   1400153c4:	mov    eax,edx
   1400153c6:	and    eax,0xf00000
   1400153cb:	cmp    eax,0x400000
   1400153d0:	jne    0x140015465
   1400153d6:	movzx  eax,dx
   1400153d9:	add    eax,ebx
   1400153db:	movzx  ecx,WORD PTR [r10+rax*2]
   1400153e0:	mov    eax,0xfffe
   1400153e5:	cmp    cx,ax
   1400153e8:	jae    0x140015465
   1400153ea:	mov    rax,QWORD PTR [rsp+0xe0]
   1400153f2:	inc    r8
   1400153f5:	mov    edi,edx
   1400153f7:	sar    edi,0x18
   1400153fa:	mov    QWORD PTR [rsp+0x60],r8
   1400153ff:	mov    WORD PTR [rax],cx
   140015402:	add    QWORD PTR [rsp+0xe0],0x2
   14001540b:	and    dil,0x7f
   14001540f:	xor    ebx,ebx
   140015411:	jmp    0x140015444
   140015413:	cmp    edx,0x80100000
   140015419:	jge    0x1400155c2
   14001541f:	mov    rax,QWORD PTR [rsp+0xe0]
   140015427:	inc    r8
   14001542a:	mov    edi,edx
   14001542c:	mov    QWORD PTR [rsp+0x60],r8
   140015431:	sar    edi,0x18
   140015434:	mov    WORD PTR [rax],dx
   140015437:	add    QWORD PTR [rsp+0xe0],0x2
   140015440:	and    dil,0x7f
   140015444:	mov    r8,QWORD PTR [rsp+0x60]
   140015449:	cmp    r8,r13
   14001544c:	jae    0x140015c3f
   140015452:	cmp    QWORD PTR [rsp+0xe0],r9
   14001545a:	jb     0x140015370
   140015460:	jmp    0x1400155c2
   140015465:	movzx  eax,BYTE PTR [r8-0x1]
   14001546a:	mov    sil,0x1
   14001546d:	mov    BYTE PTR [r14+0x41],al
   140015471:	mov    r8,QWORD PTR [rsp+0x60]
   140015476:	jmp    0x1400155c2
   14001547b:	nop    DWORD PTR [rax+rax*1+0x0]
   140015480:	movzx  eax,BYTE PTR [r8]
   140015484:	movzx  ecx,dil
   140015488:	shl    rcx,0x8
   14001548c:	add    rcx,rax
   14001548f:	mov    edx,DWORD PTR [r15+rcx*4]
   140015493:	test   edx,edx
   140015495:	js     0x140015546
   14001549b:	inc    r8
   14001549e:	mov    edi,edx
   1400154a0:	mov    ebx,edx
   1400154a2:	sar    edi,0x18
   1400154a5:	and    ebx,0xffffff
   1400154ab:	mov    QWORD PTR [rsp+0x60],r8
   1400154b0:	cmp    r8,r13
   1400154b3:	jae    0x1400155af
   1400154b9:	movzx  eax,BYTE PTR [r8]
   1400154bd:	movzx  ecx,dil
   1400154c1:	shl    rcx,0x8
   1400154c5:	add    rcx,rax
   1400154c8:	mov    edx,DWORD PTR [r15+rcx*4]
   1400154cc:	test   edx,edx
   1400154ce:	jns    0x1400155af
   1400154d4:	mov    eax,edx
   1400154d6:	and    eax,0xf00000
   1400154db:	cmp    eax,0x400000
   1400154e0:	jne    0x1400155af
   1400154e6:	movzx  eax,dx
   1400154e9:	add    eax,ebx
   1400154eb:	movzx  ecx,WORD PTR [r10+rax*2]
   1400154f0:	mov    eax,0xfffe
   1400154f5:	cmp    cx,ax
   1400154f8:	jae    0x1400155af
   1400154fe:	mov    rax,QWORD PTR [rsp+0xe0]
   140015506:	inc    r8
   140015509:	mov    QWORD PTR [rsp+0x60],r8
   14001550e:	mov    WORD PTR [rax],cx
   140015511:	mov    rax,QWORD PTR [rsp+0xe8]
   140015519:	add    QWORD PTR [rsp+0xe0],0x2
   140015522:	test   rax,rax
   140015525:	je     0x140015539
   140015527:	mov    DWORD PTR [rax],r12d
   14001552a:	add    QWORD PTR [rsp+0xe8],0x4
   140015533:	add    ebp,0x2
   140015536:	mov    r12d,ebp
   140015539:	mov    edi,edx
   14001553b:	sar    edi,0x18
   14001553e:	and    dil,0x7f
   140015542:	xor    ebx,ebx
   140015544:	jmp    0x140015591
   140015546:	cmp    edx,0x80100000
   14001554c:	jge    0x1400155c2
   14001554e:	mov    rax,QWORD PTR [rsp+0xe0]
   140015556:	inc    r8
   140015559:	mov    QWORD PTR [rsp+0x60],r8
   14001555e:	mov    WORD PTR [rax],dx
   140015561:	mov    rax,QWORD PTR [rsp+0xe8]
   140015569:	add    QWORD PTR [rsp+0xe0],0x2
   140015572:	test   rax,rax
   140015575:	je     0x140015588
   140015577:	mov    DWORD PTR [rax],r12d
   14001557a:	add    QWORD PTR [rsp+0xe8],0x4
   140015583:	inc    ebp
   140015585:	mov    r12d,ebp
   140015588:	mov    edi,edx
   14001558a:	sar    edi,0x18
   14001558d:	and    dil,0x7f
   140015591:	mov    r8,QWORD PTR [rsp+0x60]
   140015596:	cmp    r8,r13
   140015599:	jae    0x140015c3f
   14001559f:	cmp    QWORD PTR [rsp+0xe0],r9
   1400155a7:	jb     0x140015480
   1400155ad:	jmp    0x1400155c2
   1400155af:	movzx  eax,BYTE PTR [r8-0x1]
   1400155b4:	inc    ebp
   1400155b6:	mov    sil,0x1
   1400155b9:	mov    BYTE PTR [r14+0x41],al
   1400155bd:	mov    r8,QWORD PTR [rsp+0x60]
   1400155c2:	cmp    r8,r13
   1400155c5:	jae    0x140015c3f
   1400155cb:	cmp    QWORD PTR [rsp+0xe0],r9
   1400155d3:	jae    0x140015c38
   1400155d9:	movzx  eax,BYTE PTR [r8]
   1400155dd:	movsx  rcx,sil
   1400155e1:	inc    ebp
   1400155e3:	mov    BYTE PTR [rcx+r14*1+0x41],al
   1400155e8:	mov    r8,QWORD PTR [rsp+0x60]
   1400155ed:	inc    sil
   1400155f0:	inc    r8
   1400155f3:	mov    QWORD PTR [rsp+0x60],r8
   1400155f8:	jmp    0x140015626
   1400155fa:	movzx  ecx,BYTE PTR [r8]
   1400155fe:	movsx  rax,sil
   140015602:	inc    ebp
   140015604:	mov    BYTE PTR [rax+rdx*1],cl
   140015607:	mov    r8,QWORD PTR [rsp+0x60]
   14001560c:	movzx  edx,dil
   140015610:	shl    rdx,0x8
   140015614:	inc    sil
   140015617:	add    rdx,rcx
   14001561a:	inc    r8
   14001561d:	mov    edx,DWORD PTR [r15+rdx*4]
   140015621:	mov    QWORD PTR [rsp+0x60],r8
   140015626:	test   edx,edx
   140015628:	js     0x14001563c
   14001562a:	mov    edi,edx
   14001562c:	and    edx,0xffffff
   140015632:	sar    edi,0x18
   140015635:	add    ebx,edx
   140015637:	jmp    0x140015ae5
   14001563c:	movzx  eax,dil
   140015640:	mov    edi,edx
   140015642:	mov    DWORD PTR [r14+0x4c],eax
   140015646:	sar    edi,0x18
   140015649:	mov    eax,edx
   14001564b:	sar    eax,0x14
   14001564e:	and    dil,0x7f
   140015652:	and    al,0xf
   140015654:	cmp    al,0x4
   140015656:	jne    0x140015707
   14001565c:	movzx  eax,dx
   14001565f:	add    ebx,eax
   140015661:	mov    eax,0xfffe
   140015666:	movzx  ecx,WORD PTR [r10+rbx*2]
   14001566b:	cmp    cx,ax
   14001566e:	jae    0x1400156a5
   140015670:	mov    rax,QWORD PTR [rsp+0xe0]
   140015678:	mov    WORD PTR [rax],cx
   14001567b:	mov    rax,QWORD PTR [rsp+0xe8]
   140015683:	add    QWORD PTR [rsp+0xe0],0x2
   14001568c:	test   rax,rax
   14001568f:	je     0x14001569d
   140015691:	mov    DWORD PTR [rax],r12d
   140015694:	add    QWORD PTR [rsp+0xe8],0x4
   14001569d:	xor    sil,sil
   1400156a0:	jmp    0x1400159b0
   1400156a5:	cmp    cx,ax
   1400156a8:	jne    0x1400156fb
   1400156aa:	mov    rcx,QWORD PTR [r14+0x30]
   1400156ae:	mov    edx,ebx
   1400156b0:	add    rcx,0x38
   1400156b4:	call   0x1400145a0
   1400156b9:	mov    ecx,0xfffe
   1400156be:	cmp    eax,ecx
   1400156c0:	je     0x1400159b0
   1400156c6:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400156ce:	mov    WORD PTR [rcx],ax
   1400156d1:	mov    rax,QWORD PTR [rsp+0xe8]
   1400156d9:	add    QWORD PTR [rsp+0xe0],0x2
   1400156e2:	test   rax,rax
   1400156e5:	je     0x1400156f3
   1400156e7:	mov    DWORD PTR [rax],r12d
   1400156ea:	add    QWORD PTR [rsp+0xe8],0x4
   1400156f3:	xor    sil,sil
   1400156f6:	jmp    0x1400159b0
   1400156fb:	mov    DWORD PTR [r11],0xc
   140015702:	jmp    0x1400159b0
   140015707:	test   al,al
   140015709:	jne    0x140015740
   14001570b:	mov    rax,QWORD PTR [rsp+0xe0]
   140015713:	mov    WORD PTR [rax],dx
   140015716:	mov    rax,QWORD PTR [rsp+0xe8]
   14001571e:	add    QWORD PTR [rsp+0xe0],0x2
   140015727:	test   rax,rax
   14001572a:	je     0x140015738
   14001572c:	mov    DWORD PTR [rax],r12d
   14001572f:	add    QWORD PTR [rsp+0xe8],0x4
   140015738:	xor    sil,sil
   14001573b:	jmp    0x1400159b0
   140015740:	cmp    al,0x5
   140015742:	jne    0x140015891
   140015748:	movzx  eax,dx
   14001574b:	add    ebx,eax
   14001574d:	mov    eax,0xd800
   140015752:	movzx  ecx,WORD PTR [r10+rbx*2]
   140015757:	inc    ebx
   140015759:	cmp    cx,ax
   14001575c:	jae    0x140015793
   14001575e:	mov    rax,QWORD PTR [rsp+0xe0]
   140015766:	mov    WORD PTR [rax],cx
   140015769:	mov    rax,QWORD PTR [rsp+0xe8]
   140015771:	add    QWORD PTR [rsp+0xe0],0x2
   14001577a:	test   rax,rax
   14001577d:	je     0x14001578b
   14001577f:	mov    DWORD PTR [rax],r12d
   140015782:	add    QWORD PTR [rsp+0xe8],0x4
   14001578b:	xor    sil,sil
   14001578e:	jmp    0x1400159b0
   140015793:	mov    eax,0xdfff
   140015798:	cmp    cx,ax
   14001579b:	ja     0x140015828
   1400157a1:	mov    eax,0xdbff
   1400157a6:	and    cx,ax
   1400157a9:	mov    rax,QWORD PTR [rsp+0xe0]
   1400157b1:	mov    WORD PTR [rax],cx
   1400157b4:	mov    rdx,QWORD PTR [rsp+0xe0]
   1400157bc:	mov    rax,QWORD PTR [rsp+0xe8]
   1400157c4:	add    rdx,0x2
   1400157c8:	mov    QWORD PTR [rsp+0xe0],rdx
   1400157d0:	test   rax,rax
   1400157d3:	je     0x1400157e9
   1400157d5:	mov    DWORD PTR [rax],r12d
   1400157d8:	add    QWORD PTR [rsp+0xe8],0x4
   1400157e1:	mov    rdx,QWORD PTR [rsp+0xe0]
   1400157e9:	xor    sil,sil
   1400157ec:	cmp    rdx,r9
   1400157ef:	jae    0x140015b3d
   1400157f5:	movzx  ecx,WORD PTR [r10+rbx*2]
   1400157fa:	mov    WORD PTR [rdx],cx
   1400157fd:	mov    rax,QWORD PTR [rsp+0xe8]
   140015805:	add    QWORD PTR [rsp+0xe0],0x2
   14001580e:	test   rax,rax
   140015811:	je     0x1400159b0
   140015817:	mov    DWORD PTR [rax],r12d
   14001581a:	add    QWORD PTR [rsp+0xe8],0x4
   140015823:	jmp    0x1400159b0
   140015828:	mov    edx,0xfffe
   14001582d:	movzx  eax,cx
   140015830:	and    ax,dx
   140015833:	mov    edx,0xe000
   140015838:	cmp    ax,dx
   14001583b:	jne    0x140015877
   14001583d:	mov    rax,QWORD PTR [rsp+0xe0]
   140015845:	movzx  ecx,WORD PTR [r10+rbx*2]
   14001584a:	mov    WORD PTR [rax],cx
   14001584d:	mov    rax,QWORD PTR [rsp+0xe8]
   140015855:	add    QWORD PTR [rsp+0xe0],0x2
   14001585e:	test   rax,rax
   140015861:	je     0x14001586f
   140015863:	mov    DWORD PTR [rax],r12d
   140015866:	add    QWORD PTR [rsp+0xe8],0x4
   14001586f:	xor    sil,sil
   140015872:	jmp    0x1400159b0
   140015877:	mov    eax,0xffff
   14001587c:	cmp    cx,ax
   14001587f:	jne    0x1400159b0
   140015885:	mov    DWORD PTR [r11],0xc
   14001588c:	jmp    0x1400159b0
   140015891:	cmp    al,0x1
   140015893:	je     0x14001591c
   140015899:	cmp    al,0x3
   14001589b:	je     0x14001591c
   14001589d:	cmp    al,0x8
   14001589f:	jne    0x1400158c3
   1400158a1:	mov    rax,QWORD PTR [r14+0x30]
   1400158a5:	cmp    BYTE PTR [rax+0x39],0x0
   1400158a9:	jne    0x1400158b3
   1400158ab:	xor    sil,sil
   1400158ae:	jmp    0x1400159b0
   1400158b3:	mov    dil,BYTE PTR [r14+0x4c]
   1400158b7:	mov    DWORD PTR [r11],0xc
   1400158be:	jmp    0x1400159b0
   1400158c3:	cmp    al,0x2
   1400158c5:	jne    0x1400158fc
   1400158c7:	mov    rax,QWORD PTR [rsp+0xe0]
   1400158cf:	mov    WORD PTR [rax],dx
   1400158d2:	mov    rax,QWORD PTR [rsp+0xe8]
   1400158da:	add    QWORD PTR [rsp+0xe0],0x2
   1400158e3:	test   rax,rax
   1400158e6:	je     0x1400158f4
   1400158e8:	mov    DWORD PTR [rax],r12d
   1400158eb:	add    QWORD PTR [rsp+0xe8],0x4
   1400158f4:	xor    sil,sil
   1400158f7:	jmp    0x1400159b0
   1400158fc:	cmp    al,0x6
   1400158fe:	je     0x1400159b0
   140015904:	cmp    al,0x7
   140015906:	jne    0x140015914
   140015908:	mov    DWORD PTR [r11],0xc
   14001590f:	jmp    0x1400159b0
   140015914:	xor    sil,sil
   140015917:	jmp    0x1400159b0
   14001591c:	and    edx,0xfffff
   140015922:	mov    eax,0xd800
   140015927:	mov    ecx,edx
   140015929:	sar    ecx,0xa
   14001592c:	or     cx,ax
   14001592f:	mov    rax,QWORD PTR [rsp+0xe0]
   140015937:	mov    WORD PTR [rax],cx
   14001593a:	mov    rax,QWORD PTR [rsp+0xe0]
   140015942:	mov    rcx,QWORD PTR [rsp+0xe8]
   14001594a:	add    rax,0x2
   14001594e:	mov    QWORD PTR [rsp+0xe0],rax
   140015956:	test   rcx,rcx
   140015959:	je     0x14001596f
   14001595b:	mov    DWORD PTR [rcx],r12d
   14001595e:	add    QWORD PTR [rsp+0xe8],0x4
   140015967:	mov    rax,QWORD PTR [rsp+0xe0]
   14001596f:	mov    ecx,0x3ff
   140015974:	xor    sil,sil
   140015977:	and    dx,cx
   14001597a:	mov    ecx,0xdc00
   14001597f:	or     dx,cx
   140015982:	cmp    rax,r9
   140015985:	jae    0x140015c29
   14001598b:	mov    WORD PTR [rax],dx
   14001598e:	mov    rax,QWORD PTR [rsp+0xe8]
   140015996:	add    QWORD PTR [rsp+0xe0],0x2
   14001599f:	test   rax,rax
   1400159a2:	je     0x1400159b0
   1400159a4:	mov    DWORD PTR [rax],r12d
   1400159a7:	add    QWORD PTR [rsp+0xe8],0x4
   1400159b0:	xor    ebx,ebx
   1400159b2:	test   sil,sil
   1400159b5:	jne    0x1400159ce
   1400159b7:	mov    r8,QWORD PTR [rsp+0x60]
   1400159bc:	mov    r9,QWORD PTR [rsp+0x68]
   1400159c1:	mov    r10,QWORD PTR [rsp+0x70]
   1400159c6:	mov    r12d,ebp
   1400159c9:	jmp    0x140015ae5
   1400159ce:	cmp    DWORD PTR [r11],ebx
   1400159d1:	jg     0x140015b4f
   1400159d7:	mov    rax,QWORD PTR [rsp+0xd0]
   1400159df:	mov    r8,QWORD PTR [rsp+0x60]
   1400159e4:	movzx  ecx,BYTE PTR [rax+0x2]
   1400159e8:	mov    QWORD PTR [rax+0x10],r8
   1400159ec:	mov    rax,QWORD PTR [r14+0x30]
   1400159f0:	mov    rdx,QWORD PTR [rax+0x128]
   1400159f7:	test   rdx,rdx
   1400159fa:	je     0x140015a67
   1400159fc:	mov    QWORD PTR [rsp+0x50],r11
   140015a01:	mov    BYTE PTR [rsp+0x48],cl
   140015a05:	mov    DWORD PTR [rsp+0x40],r12d
   140015a0a:	lea    rax,[rsp+0xe8]
   140015a12:	lea    r9,[rsp+0x60]
   140015a17:	movsx  r8d,sil
   140015a1b:	mov    QWORD PTR [rsp+0x38],rax
   140015a20:	mov    rax,QWORD PTR [rsp+0x68]
   140015a25:	mov    rcx,r14
   140015a28:	mov    QWORD PTR [rsp+0x30],rax
   140015a2d:	lea    rax,[rsp+0xe0]
   140015a35:	mov    QWORD PTR [rsp+0x28],rax
   140015a3a:	mov    QWORD PTR [rsp+0x20],r13
   140015a3f:	call   0x140029400
   140015a44:	test   al,al
   140015a46:	je     0x140015a5a
   140015a48:	mov    r8,QWORD PTR [rsp+0x60]
   140015a4d:	mov    r11,QWORD PTR [rsp+0xd8]
   140015a55:	xor    sil,sil
   140015a58:	jmp    0x140015abf
   140015a5a:	mov    r8,QWORD PTR [rsp+0x60]
   140015a5f:	mov    r11,QWORD PTR [rsp+0xd8]
   140015a67:	cmp    sil,0x4
   140015a6b:	jne    0x140015ab8
   140015a6d:	bt     DWORD PTR [r14+0x38],0xf
   140015a73:	jae    0x140015ab8
   140015a75:	movzx  eax,BYTE PTR [r14+0x41]
   140015a7a:	lea    ecx,[rax+rax*4]
   140015a7d:	movzx  eax,BYTE PTR [r14+0x42]
   140015a82:	lea    edx,[rax+rcx*2]
   140015a85:	movzx  eax,BYTE PTR [r14+0x43]
   140015a8a:	imul   edx,edx,0x7e
   140015a8d:	add    edx,eax
   140015a8f:	movzx  eax,BYTE PTR [r14+0x44]
   140015a94:	lea    ecx,[rdx+rdx*4]
   140015a97:	lea    edx,[rax+rcx*2]
   140015a9a:	lea    rax,[rip+0x33abf]        # 0x140049560
   140015aa1:	xor    ecx,ecx
   140015aa3:	cmp    DWORD PTR [rax+0x8],edx
   140015aa6:	ja     0x140015aad
   140015aa8:	cmp    edx,DWORD PTR [rax+0xc]
   140015aab:	jbe    0x140015af7
   140015aad:	inc    ecx
   140015aaf:	add    rax,0x10
   140015ab3:	cmp    ecx,0xd
   140015ab6:	jb     0x140015aa3
   140015ab8:	mov    DWORD PTR [r11],0xa
   140015abf:	mov    rcx,QWORD PTR [rsp+0xd0]
   140015ac7:	mov    eax,r8d
   140015aca:	sub    eax,DWORD PTR [rcx+0x10]
   140015acd:	add    ebp,eax
   140015acf:	cmp    DWORD PTR [r11],ebx
   140015ad2:	mov    r12d,ebp
   140015ad5:	jg     0x140015c3f
   140015adb:	mov    r9,QWORD PTR [rsp+0x68]
   140015ae0:	mov    r10,QWORD PTR [rsp+0x70]
   140015ae5:	cmp    r8,r13
   140015ae8:	jae    0x140015c3f
   140015aee:	lea    rdx,[r14+0x41]
   140015af2:	jmp    0x140015340
   140015af7:	mov    r9,QWORD PTR [rsp+0x68]
   140015afc:	mov    DWORD PTR [r11],ebx
   140015aff:	sub    edx,DWORD PTR [rax+0x8]
   140015b02:	add    edx,DWORD PTR [rax]
   140015b04:	mov    QWORD PTR [rsp+0x30],r11
   140015b09:	lea    rax,[rsp+0xe8]
   140015b11:	lea    r8,[rsp+0xe0]
   140015b19:	mov    rcx,r14
   140015b1c:	mov    DWORD PTR [rsp+0x28],r12d
   140015b21:	mov    QWORD PTR [rsp+0x20],rax
   140015b26:	call   0x14002a8d0
   140015b2b:	mov    r8,QWORD PTR [rsp+0x60]
   140015b30:	mov    r11,QWORD PTR [rsp+0xd8]
   140015b38:	xor    sil,sil
   140015b3b:	jmp    0x140015abf
   140015b3d:	movzx  ecx,WORD PTR [r10+rbx*2]
   140015b42:	mov    WORD PTR [r14+0x90],cx
   140015b4a:	jmp    0x140015c31
   140015b4f:	cmp    sil,0x1
   140015b53:	jle    0x140015c3f
   140015b59:	mov    rax,QWORD PTR [r14+0x30]
   140015b5d:	mov    r9b,0x1
   140015b60:	cmp    BYTE PTR [rax+0x39],bl
   140015b63:	setne  r10b
   140015b67:	cmp    sil,r9b
   140015b6a:	jle    0x140015c3f
   140015b70:	movzx  r8d,dil
   140015b74:	lea    r11,[r14+0x41]
   140015b78:	shl    r8,0x8
   140015b7c:	nop    DWORD PTR [rax+0x0]
   140015b80:	movsx  rax,r9b
   140015b84:	movzx  ecx,BYTE PTR [rax+r11*1]
   140015b89:	add    rcx,r8
   140015b8c:	mov    eax,DWORD PTR [r15+rcx*4]
   140015b90:	test   eax,eax
   140015b92:	js     0x140015ba4
   140015b94:	sar    eax,0x18
   140015b97:	mov    rcx,r15
   140015b9a:	movzx  edx,al
   140015b9d:	call   0x140015110
   140015ba2:	jmp    0x140015bb7
   140015ba4:	sar    eax,0x14
   140015ba7:	and    al,0xf
   140015ba9:	cmp    al,0x8
   140015bab:	jne    0x140015bb2
   140015bad:	test   r10b,r10b
   140015bb0:	jne    0x140015bbb
   140015bb2:	cmp    al,0x7
   140015bb4:	setne  al
   140015bb7:	test   al,al
   140015bb9:	jne    0x140015bc5
   140015bbb:	inc    r9b
   140015bbe:	cmp    r9b,sil
   140015bc1:	jl     0x140015b80
   140015bc3:	jmp    0x140015c3f
   140015bc5:	cmp    r9b,sil
   140015bc8:	jge    0x140015c3f
   140015bca:	mov    rdx,QWORD PTR [rsp+0x60]
   140015bcf:	mov    rbp,QWORD PTR [rsp+0xd0]
   140015bd7:	sub    sil,r9b
   140015bda:	movsx  r8d,sil
   140015bde:	mov    ecx,edx
   140015be0:	mov    sil,r9b
   140015be3:	sub    ecx,DWORD PTR [rbp+0x10]
   140015be6:	cmp    r8d,ecx
   140015be9:	jg     0x140015bf9
   140015beb:	movsx  rax,r8b
   140015bef:	sub    rdx,rax
   140015bf2:	mov    QWORD PTR [rsp+0x60],rdx
   140015bf7:	jmp    0x140015c3f
   140015bf9:	sub    cl,r8b
   140015bfc:	movsx  rdx,r9b
   140015c00:	movsx  eax,cl
   140015c03:	mov    BYTE PTR [r14+0x11a],cl
   140015c0a:	lea    rcx,[r14+0xfa]
   140015c11:	neg    eax
   140015c13:	add    rdx,r11
   140015c16:	movsxd r8,eax
   140015c19:	call   0x14002b9a0
   140015c1e:	mov    r11,QWORD PTR [rbp+0x10]
   140015c22:	mov    QWORD PTR [rsp+0x60],r11
   140015c27:	jmp    0x140015c3f
   140015c29:	mov    WORD PTR [r14+0x90],dx
   140015c31:	xor    ebx,ebx
   140015c33:	mov    BYTE PTR [r14+0x5d],0x1
   140015c38:	mov    DWORD PTR [r11],0xf
   140015c3f:	mov    r15,QWORD PTR [rsp+0x88]
   140015c47:	mov    r13,QWORD PTR [rsp+0x90]
   140015c4f:	mov    r12,QWORD PTR [rsp+0x98]
   140015c57:	mov    rbp,QWORD PTR [rsp+0xb0]
   140015c5f:	mov    DWORD PTR [r14+0x48],ebx
   140015c63:	mov    rbx,QWORD PTR [rsp+0xd0]
   140015c6b:	mov    BYTE PTR [r14+0x40],sil
   140015c6f:	mov    rsi,QWORD PTR [rsp+0xa8]
   140015c77:	movzx  eax,dil
   140015c7b:	mov    rdi,QWORD PTR [rsp+0xa0]
   140015c83:	mov    DWORD PTR [r14+0x4c],eax
   140015c87:	mov    rax,QWORD PTR [rsp+0x60]
   140015c8c:	mov    QWORD PTR [rbx+0x10],rax
   140015c90:	mov    rax,QWORD PTR [rsp+0xe0]
   140015c98:	mov    QWORD PTR [rbx+0x20],rax
   140015c9c:	mov    rax,QWORD PTR [rsp+0xe8]
   140015ca4:	mov    QWORD PTR [rbx+0x30],rax
   140015ca8:	mov    rbx,QWORD PTR [rsp+0xb8]
   140015cb0:	add    rsp,0xc0
   140015cb7:	pop    r14
   140015cb9:	ret    
   140015cba:	int3   
   140015cbb:	int3   
   140015cbc:	int3   
   140015cbd:	int3   
   140015cbe:	int3   
   140015cbf:	int3   
   140015cc0:	mov    rax,QWORD PTR [rcx+0x8]
   140015cc4:	mov    r8,QWORD PTR [rcx+0x10]
   140015cc8:	mov    r10,QWORD PTR [rcx+0x18]
   140015ccc:	test   BYTE PTR [rax+0x38],0x10
   140015cd0:	mov    rax,QWORD PTR [rax+0x30]
   140015cd4:	mov    r9,rcx
   140015cd7:	je     0x140015cdf
   140015cd9:	mov    r11,QWORD PTR [rax+0x48]
   140015cdd:	jmp    0x140015ce3
   140015cdf:	mov    r11,QWORD PTR [rax+0x40]
   140015ce3:	cmp    r8,r10
   140015ce6:	jae    0x140015d27
   140015ce8:	nop    DWORD PTR [rax+rax*1+0x0]
   140015cf0:	movzx  eax,BYTE PTR [r8]
   140015cf4:	inc    r8
   140015cf7:	mov    ecx,DWORD PTR [r11+rax*4]
   140015cfb:	mov    QWORD PTR [r9+0x10],r8
   140015cff:	cmp    ecx,0x80100000
   140015d05:	jl     0x140015d65
   140015d07:	mov    eax,ecx
   140015d09:	sar    eax,0x14
   140015d0c:	and    al,0xf
   140015d0e:	cmp    al,0x1
   140015d10:	je     0x140015d58
   140015d12:	cmp    al,0x3
   140015d14:	je     0x140015d58
   140015d16:	cmp    al,0x2
   140015d18:	je     0x140015d65
   140015d1a:	cmp    al,0x6
   140015d1c:	je     0x140015d45
   140015d1e:	cmp    al,0x7
   140015d20:	je     0x140015d33
   140015d22:	cmp    r8,r10
   140015d25:	jb     0x140015cf0
   140015d27:	mov    DWORD PTR [rdx],0x8
   140015d2d:	mov    eax,0xffff
   140015d32:	ret    
   140015d33:	mov    DWORD PTR [rdx],0xc
   140015d39:	mov    eax,0xffff
   140015d3e:	mov    DWORD PTR [rdx],0x8
   140015d44:	ret    
   140015d45:	cmp    DWORD PTR [rdx],0x0
   140015d48:	jg     0x140015d27
   140015d4a:	lea    rax,[r8-0x1]
   140015d4e:	mov    QWORD PTR [r9+0x10],rax
   140015d52:	mov    eax,0xfffffff7
   140015d57:	ret    
   140015d58:	and    ecx,0xfffff
   140015d5e:	lea    eax,[rcx+0x10000]
   140015d64:	ret    
   140015d65:	movzx  eax,cx
   140015d68:	ret    
   140015d69:	int3   
   140015d6a:	int3   
   140015d6b:	int3   
   140015d6c:	int3   
   140015d6d:	int3   
   140015d6e:	int3   
   140015d6f:	int3   
   140015d70:	mov    QWORD PTR [rsp+0x8],rcx
   140015d75:	push   rsi
   140015d76:	push   rdi
   140015d77:	sub    rsp,0x38
   140015d7b:	mov    rsi,QWORD PTR [rcx+0x8]
   140015d7f:	mov    rdi,rdx
   140015d82:	cmp    BYTE PTR [rsi+0x11a],0x0
   140015d89:	jle    0x140015d97
   140015d8b:	mov    eax,0xfffffff7
   140015d90:	add    rsp,0x38
   140015d94:	pop    rdi
   140015d95:	pop    rsi
   140015d96:	ret    
   140015d97:	mov    r10,QWORD PTR [rsi+0x30]
   140015d9b:	test   BYTE PTR [r10+0x105],0x2
   140015da3:	jne    0x140015d8b
   140015da5:	cmp    BYTE PTR [r10+0x38],0x1
   140015daa:	mov    QWORD PTR [rsp+0x20],r15
   140015daf:	jne    0x140015dc1
   140015db1:	mov    r15,QWORD PTR [rsp+0x20]
   140015db6:	add    rsp,0x38
   140015dba:	pop    rdi
   140015dbb:	pop    rsi
   140015dbc:	jmp    0x140015cc0
   140015dc1:	test   BYTE PTR [rsi+0x38],0x10
   140015dc5:	mov    r11,QWORD PTR [rcx+0x10]
   140015dc9:	mov    QWORD PTR [rsp+0x58],rbx
   140015dce:	mov    QWORD PTR [rsp+0x60],rbp
   140015dd3:	mov    QWORD PTR [rsp+0x68],r12
   140015dd8:	mov    QWORD PTR [rsp+0x30],r13
   140015ddd:	mov    QWORD PTR [rsp+0x28],r14
   140015de2:	mov    r14,QWORD PTR [rcx+0x18]
   140015de6:	mov    rbx,r11
   140015de9:	je     0x140015df1
   140015deb:	mov    r13,QWORD PTR [r10+0x48]
   140015def:	jmp    0x140015df5
   140015df1:	mov    r13,QWORD PTR [r10+0x40]
   140015df5:	mov    r12b,BYTE PTR [rsi+0x4c]
   140015df9:	mov    rbp,QWORD PTR [r10+0x50]
   140015dfd:	mov    r9d,DWORD PTR [rsi+0x48]
   140015e01:	test   r12b,r12b
   140015e04:	jne    0x140015e0a
   140015e06:	mov    r12b,BYTE PTR [r10+0x39]
   140015e0a:	or     edx,0xffffffff
   140015e0d:	cmp    r11,r14
   140015e10:	jae    0x140016017
   140015e16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015e20:	movzx  eax,BYTE PTR [rbx]
   140015e23:	movzx  ecx,r12b
   140015e27:	inc    rbx
   140015e2a:	shl    rcx,0x8
   140015e2e:	add    rcx,rax
   140015e31:	mov    r8d,DWORD PTR [r13+rcx*4+0x0]
   140015e36:	test   r8d,r8d
   140015e39:	js     0x140015ea7
   140015e3b:	mov    r12d,r8d
   140015e3e:	and    r8d,0xffffff
   140015e45:	add    r9d,r8d
   140015e48:	sar    r12d,0x18
   140015e4c:	cmp    rbx,r14
   140015e4f:	jae    0x14001600f
   140015e55:	movzx  eax,BYTE PTR [rbx]
   140015e58:	movzx  ecx,r12b
   140015e5c:	shl    rcx,0x8
   140015e60:	add    rcx,rax
   140015e63:	mov    r8d,DWORD PTR [r13+rcx*4+0x0]
   140015e68:	test   r8d,r8d
   140015e6b:	jns    0x140015ef5
   140015e71:	mov    eax,r8d
   140015e74:	and    eax,0xf00000
   140015e79:	cmp    eax,0x400000
   140015e7e:	jne    0x140015ef5
   140015e80:	movzx  eax,r8w
   140015e84:	add    eax,r9d
   140015e87:	movzx  edx,WORD PTR [rbp+rax*2+0x0]
   140015e8c:	cmp    edx,0xfffe
   140015e92:	jge    0x140015ef5
   140015e94:	sar    r8d,0x18
   140015e98:	inc    rbx
   140015e9b:	and    r8b,0x7f
   140015e9f:	mov    r12b,r8b
   140015ea2:	jmp    0x14001600f
   140015ea7:	movzx  eax,r12b
   140015eab:	mov    r12d,r8d
   140015eae:	mov    DWORD PTR [rsi+0x4c],eax
   140015eb1:	sar    r12d,0x18
   140015eb5:	mov    eax,r8d
   140015eb8:	sar    eax,0x14
   140015ebb:	and    r12b,0x7f
   140015ebf:	and    al,0xf
   140015ec1:	je     0x14001600b
   140015ec7:	cmp    al,0x4
   140015ec9:	je     0x140015fab
   140015ecf:	cmp    al,0x5
   140015ed1:	je     0x140015f45
   140015ed3:	cmp    al,0x1
   140015ed5:	je     0x140015f31
   140015ed7:	cmp    al,0x3
   140015ed9:	je     0x140015f31
   140015edb:	cmp    al,0x8
   140015edd:	je     0x140015f17
   140015edf:	cmp    al,0x2
   140015ee1:	je     0x140015f0e
   140015ee3:	cmp    al,0x6
   140015ee5:	je     0x140015fdd
   140015eeb:	cmp    al,0x7
   140015eed:	je     0x140015f03
   140015eef:	xor    r9d,r9d
   140015ef2:	mov    r11,rbx
   140015ef5:	cmp    rbx,r14
   140015ef8:	jb     0x140015e20
   140015efe:	jmp    0x14001600f
   140015f03:	mov    DWORD PTR [rdi],0xc
   140015f09:	jmp    0x14001600f
   140015f0e:	movzx  edx,r8w
   140015f12:	jmp    0x14001600f
   140015f17:	cmp    BYTE PTR [r10+0x39],0x0
   140015f1c:	je     0x140015fdd
   140015f22:	mov    r12b,BYTE PTR [rsi+0x4c]
   140015f26:	mov    DWORD PTR [rdi],0xc
   140015f2c:	jmp    0x14001600f
   140015f31:	mov    edx,r8d
   140015f34:	and    edx,0xfffff
   140015f3a:	add    edx,0x10000
   140015f40:	jmp    0x14001600f
   140015f45:	movzx  eax,r8w
   140015f49:	add    r9d,eax
   140015f4c:	movzx  edx,WORD PTR [rbp+r9*2+0x0]
   140015f52:	inc    r9d
   140015f55:	cmp    edx,0xd800
   140015f5b:	jl     0x14001600f
   140015f61:	cmp    edx,0xdfff
   140015f67:	jg     0x140015f82
   140015f69:	movzx  ecx,WORD PTR [rbp+r9*2+0x0]
   140015f6f:	and    edx,0x3ff
   140015f75:	add    edx,0x9
   140015f78:	shl    edx,0xa
   140015f7b:	add    edx,ecx
   140015f7d:	jmp    0x14001600f
   140015f82:	mov    eax,edx
   140015f84:	and    eax,0xfffe
   140015f89:	cmp    eax,0xe000
   140015f8e:	jne    0x140015f98
   140015f90:	movzx  edx,WORD PTR [rbp+r9*2+0x0]
   140015f96:	jmp    0x14001600f
   140015f98:	cmp    edx,0xffff
   140015f9e:	jne    0x140015fdd
   140015fa0:	mov    DWORD PTR [rdi],0xc
   140015fa6:	jmp    0x1400160f8
   140015fab:	movzx  eax,r8w
   140015faf:	add    r9d,eax
   140015fb2:	movzx  edx,WORD PTR [rbp+r9*2+0x0]
   140015fb8:	cmp    edx,0xfffe
   140015fbe:	jl     0x14001600f
   140015fc0:	cmp    edx,0xfffe
   140015fc6:	jne    0x140016003
   140015fc8:	lea    rcx,[r10+0x38]
   140015fcc:	mov    edx,r9d
   140015fcf:	call   0x1400145a0
   140015fd4:	mov    edx,eax
   140015fd6:	cmp    eax,0xfffe
   140015fdb:	jne    0x14001600f
   140015fdd:	cmp    DWORD PTR [rdi],0x0
   140015fe0:	jg     0x14001600f
   140015fe2:	movzx  eax,r12b
   140015fe6:	mov    DWORD PTR [rsi+0x48],0x0
   140015fed:	mov    DWORD PTR [rsi+0x4c],eax
   140015ff0:	mov    rax,QWORD PTR [rsp+0x50]
   140015ff5:	mov    QWORD PTR [rax+0x10],r11
   140015ff9:	mov    eax,0xfffffff7
   140015ffe:	jmp    0x140016111
   140016003:	mov    DWORD PTR [rdi],0xc
   140016009:	jmp    0x14001600f
   14001600b:	movzx  edx,r8w
   14001600f:	test   edx,edx
   140016011:	jns    0x1400160f8
   140016017:	cmp    DWORD PTR [rdi],0x0
   14001601a:	jg     0x140016068
   14001601c:	cmp    rbx,r14
   14001601f:	jne    0x14001605d
   140016021:	cmp    r11,rbx
   140016024:	jae    0x14001605d
   140016026:	movzx  eax,bl
   140016029:	lea    rcx,[rsi+0x41]
   14001602d:	sub    al,r11b
   140016030:	mov    BYTE PTR [rsi+0x40],al
   140016033:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016040:	movzx  eax,BYTE PTR [r11]
   140016044:	inc    r11
   140016047:	inc    rcx
   14001604a:	mov    BYTE PTR [rcx-0x1],al
   14001604d:	cmp    r11,rbx
   140016050:	jb     0x140016040
   140016052:	mov    DWORD PTR [rdi],0xb
   140016058:	jmp    0x1400160f3
   14001605d:	mov    DWORD PTR [rdi],0x8
   140016063:	jmp    0x1400160f3
   140016068:	mov    rax,QWORD PTR [rsi+0x30]
   14001606c:	lea    r8,[rsi+0x41]
   140016070:	cmp    BYTE PTR [rax+0x39],0x0
   140016074:	movzx  eax,BYTE PTR [r11]
   140016078:	setne  bpl
   14001607c:	inc    r11
   14001607f:	mov    BYTE PTR [r8],al
   140016082:	inc    r8
   140016085:	cmp    r11,rbx
   140016088:	jne    0x140016090
   14001608a:	mov    BYTE PTR [rsi+0x40],0x1
   14001608e:	jmp    0x1400160f3
   140016090:	mov    r10b,0x1
   140016093:	cmp    r11,rbx
   140016096:	jae    0x1400160ec
   140016098:	movzx  edi,r12b
   14001609c:	shl    rdi,0x8
   1400160a0:	movzx  r9d,BYTE PTR [r11]
   1400160a4:	lea    rax,[rdi+r9*1]
   1400160a8:	mov    ecx,DWORD PTR [r13+rax*4+0x0]
   1400160ad:	test   ecx,ecx
   1400160af:	js     0x1400160c1
   1400160b1:	sar    ecx,0x18
   1400160b4:	movzx  edx,cl
   1400160b7:	mov    rcx,r13
   1400160ba:	call   0x140015110
   1400160bf:	jmp    0x1400160d7
   1400160c1:	sar    ecx,0x14
   1400160c4:	and    cl,0xf
   1400160c7:	cmp    cl,0x8
   1400160ca:	jne    0x1400160d1
   1400160cc:	test   bpl,bpl
   1400160cf:	jne    0x1400160db
   1400160d1:	cmp    cl,0x7
   1400160d4:	setne  al
   1400160d7:	test   al,al
   1400160d9:	jne    0x1400160ec
   1400160db:	inc    r11
   1400160de:	mov    BYTE PTR [r8],r9b
   1400160e1:	inc    r8
   1400160e4:	inc    r10b
   1400160e7:	cmp    r11,rbx
   1400160ea:	jb     0x1400160a0
   1400160ec:	mov    BYTE PTR [rsi+0x40],r10b
   1400160f0:	mov    rbx,r11
   1400160f3:	mov    edx,0xffff
   1400160f8:	movzx  eax,r12b
   1400160fc:	mov    DWORD PTR [rsi+0x48],0x0
   140016103:	mov    DWORD PTR [rsi+0x4c],eax
   140016106:	mov    rax,QWORD PTR [rsp+0x50]
   14001610b:	mov    QWORD PTR [rax+0x10],rbx
   14001610f:	mov    eax,edx
   140016111:	mov    r14,QWORD PTR [rsp+0x28]
   140016116:	mov    r13,QWORD PTR [rsp+0x30]
   14001611b:	mov    r12,QWORD PTR [rsp+0x68]
   140016120:	mov    rbp,QWORD PTR [rsp+0x60]
   140016125:	mov    rbx,QWORD PTR [rsp+0x58]
   14001612a:	mov    r15,QWORD PTR [rsp+0x20]
   14001612f:	add    rsp,0x38
   140016133:	pop    rdi
   140016134:	pop    rsi
   140016135:	ret    
   140016136:	int3   
   140016137:	int3   
   140016138:	int3   
   140016139:	int3   
   14001613a:	int3   
   14001613b:	int3   
   14001613c:	int3   
   14001613d:	int3   
   14001613e:	int3   
   14001613f:	int3   
   140016140:	mov    QWORD PTR [rsp+0x18],rsi
   140016145:	push   rdi
   140016146:	push   r12
   140016148:	push   r13
   14001614a:	sub    rsp,0x20
   14001614e:	movzx  r13d,r9b
   140016152:	movsxd rdi,r8d
   140016155:	mov    r12,rdx
   140016158:	mov    rsi,rcx
   14001615b:	test   r8d,r8d
   14001615e:	jg     0x140016174
   140016160:	mov    eax,0xffff
   140016165:	mov    rsi,QWORD PTR [rsp+0x50]
   14001616a:	add    rsp,0x20
   14001616e:	pop    r13
   140016170:	pop    r12
   140016172:	pop    rdi
   140016173:	ret    
   140016174:	mov    r11,QWORD PTR [rcx+0x40]
   140016178:	movzx  eax,BYTE PTR [rdx]
   14001617b:	mov    QWORD PTR [rsp+0x40],rbx
   140016180:	mov    rbx,QWORD PTR [rcx+0x50]
   140016184:	movzx  ecx,BYTE PTR [rcx+0x39]
   140016188:	mov    QWORD PTR [rsp+0x48],rbp
   14001618d:	shl    rcx,0x8
   140016191:	mov    ebp,0x1
   140016196:	xor    r8d,r8d
   140016199:	add    rcx,rax
   14001619c:	mov    r9,rbp
   14001619f:	mov    edx,DWORD PTR [r11+rcx*4]
   1400161a3:	test   edx,edx
   1400161a5:	js     0x1400161e2
   1400161a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400161b0:	mov    eax,edx
   1400161b2:	and    eax,0xffffff
   1400161b7:	add    r8d,eax
   1400161ba:	cmp    r9,rdi
   1400161bd:	je     0x1400162e1
   1400161c3:	movzx  eax,BYTE PTR [r9+r12*1]
   1400161c8:	sar    edx,0x18
   1400161cb:	inc    ebp
   1400161cd:	movzx  ecx,dl
   1400161d0:	inc    r9
   1400161d3:	shl    rcx,0x8
   1400161d7:	add    rcx,rax
   1400161da:	mov    edx,DWORD PTR [r11+rcx*4]
   1400161de:	test   edx,edx
   1400161e0:	jns    0x1400161b0
   1400161e2:	mov    eax,edx
   1400161e4:	sar    eax,0x14
   1400161e7:	and    al,0xf
   1400161e9:	cmp    al,0x4
   1400161eb:	jne    0x140016217
   1400161ed:	movzx  eax,dx
   1400161f0:	add    r8d,eax
   1400161f3:	movzx  edx,WORD PTR [rbx+r8*2]
   1400161f8:	cmp    edx,0xfffe
   1400161fe:	jne    0x1400162b4
   140016204:	lea    rcx,[rsi+0x38]
   140016208:	mov    edx,r8d
   14001620b:	call   0x1400145a0
   140016210:	mov    edx,eax
   140016212:	jmp    0x1400162b4
   140016217:	test   al,al
   140016219:	jne    0x140016223
   14001621b:	movzx  edx,dx
   14001621e:	jmp    0x1400162b4
   140016223:	cmp    al,0x5
   140016225:	jne    0x14001627e
   140016227:	movzx  eax,dx
   14001622a:	add    r8d,eax
   14001622d:	movzx  edx,WORD PTR [rbx+r8*2]
   140016232:	inc    r8d
   140016235:	cmp    edx,0xd800
   14001623b:	jl     0x1400162b4
   14001623d:	cmp    edx,0xdfff
   140016243:	jg     0x14001625a
   140016245:	movzx  ecx,WORD PTR [rbx+r8*2]
   14001624a:	and    edx,0x3ff
   140016250:	add    edx,0x9
   140016253:	shl    edx,0xa
   140016256:	add    edx,ecx
   140016258:	jmp    0x1400162b4
   14001625a:	mov    eax,edx
   14001625c:	and    eax,0xfffe
   140016261:	cmp    eax,0xe000
   140016266:	jne    0x14001626f
   140016268:	movzx  edx,WORD PTR [rbx+r8*2]
   14001626d:	jmp    0x1400162b4
   14001626f:	cmp    edx,0xffff
   140016275:	je     0x1400162e1
   140016277:	mov    edx,0xfffe
   14001627c:	jmp    0x1400162b4
   14001627e:	cmp    al,0x1
   140016280:	jne    0x140016290
   140016282:	and    edx,0xfffff
   140016288:	add    edx,0x10000
   14001628e:	jmp    0x1400162b4
   140016290:	cmp    al,0x2
   140016292:	jne    0x140016299
   140016294:	movzx  edx,dx
   140016297:	jmp    0x1400162b4
   140016299:	cmp    al,0x3
   14001629b:	jne    0x1400162ab
   14001629d:	and    edx,0xfffff
   1400162a3:	add    edx,0x10000
   1400162a9:	jmp    0x1400162b4
   1400162ab:	cmp    al,0x6
   1400162ad:	jne    0x1400162e1
   1400162af:	mov    edx,0xfffe
   1400162b4:	cmp    ebp,edi
   1400162b6:	jne    0x1400162e1
   1400162b8:	cmp    edx,0xfffe
   1400162be:	jne    0x1400162dd
   1400162c0:	mov    rcx,QWORD PTR [rsi+0x128]
   1400162c7:	test   rcx,rcx
   1400162ca:	je     0x1400162dd
   1400162cc:	movzx  r9d,r13b
   1400162d0:	mov    r8d,edi
   1400162d3:	mov    rdx,r12
   1400162d6:	call   0x140029590
   1400162db:	jmp    0x1400162e6
   1400162dd:	mov    eax,edx
   1400162df:	jmp    0x1400162e6
   1400162e1:	mov    eax,0xffff
   1400162e6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400162eb:	mov    rbp,QWORD PTR [rsp+0x48]
   1400162f0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400162f5:	add    rsp,0x20
   1400162f9:	pop    r13
   1400162fb:	pop    r12
   1400162fd:	pop    rdi
   1400162fe:	ret    
   1400162ff:	int3   
   140016300:	mov    QWORD PTR [rsp+0x10],rbx
   140016305:	push   rbp
   140016306:	push   rsi
   140016307:	push   rdi
   140016308:	push   r12
   14001630a:	push   r13
   14001630c:	push   r14
   14001630e:	push   r15
   140016310:	sub    rsp,0x80
   140016317:	mov    r12,QWORD PTR [rcx+0x8]
   14001631b:	mov    r9,QWORD PTR [rcx+0x20]
   14001631f:	mov    r10,QWORD PTR [rcx+0x10]
   140016323:	mov    rax,QWORD PTR [r12+0x30]
   140016328:	mov    r11d,DWORD PTR [rcx+0x28]
   14001632c:	mov    r13,QWORD PTR [rcx+0x18]
   140016330:	movzx  r15d,BYTE PTR [rax+0x105]
   140016338:	mov    rax,QWORD PTR [rcx+0x30]
   14001633c:	mov    QWORD PTR [rsp+0x60],r10
   140016341:	mov    QWORD PTR [rsp+0xd0],rax
   140016349:	mov    QWORD PTR [rsp+0xd8],r9
   140016351:	mov    rax,QWORD PTR [r12+0x30]
   140016356:	mov    rbp,rcx
   140016359:	mov    rcx,QWORD PTR [rax+0x60]
   14001635d:	sub    r11d,r9d
   140016360:	test   BYTE PTR [r12+0x38],0x10
   140016366:	mov    QWORD PTR [rsp+0x78],rcx
   14001636b:	mov    rcx,QWORD PTR [rax+0x68]
   14001636f:	mov    QWORD PTR [rsp+0x68],rcx
   140016374:	mov    r14,rdx
   140016377:	je     0x140016382
   140016379:	mov    rbx,QWORD PTR [rax+0xf8]
   140016380:	jmp    0x140016389
   140016382:	mov    rbx,QWORD PTR [rax+0xf0]
   140016389:	mov    edx,DWORD PTR [rax+0x10c]
   14001638f:	mov    r8d,DWORD PTR [r12+0x54]
   140016394:	mov    QWORD PTR [rsp+0x70],rbx
   140016399:	mov    eax,r8d
   14001639c:	mov    DWORD PTR [rsp+0xc0],edx
   1400163a3:	neg    eax
   1400163a5:	sbb    edi,edi
   1400163a7:	xor    esi,esi
   1400163a9:	test   r8d,r8d
   1400163ac:	je     0x1400163b7
   1400163ae:	test   r11d,r11d
   1400163b1:	jg     0x1400164ce
   1400163b7:	cmp    r10,r13
   1400163ba:	jae    0x1400166da
   1400163c0:	test   r11d,r11d
   1400163c3:	jle    0x1400166d3
   1400163c9:	movzx  r8d,WORD PTR [r10]
   1400163cd:	add    r10,0x2
   1400163d1:	inc    esi
   1400163d3:	cmp    r8d,0x7f
   1400163d7:	mov    QWORD PTR [rsp+0x60],r10
   1400163dc:	jg     0x14001643b
   1400163de:	mov    eax,r8d
   1400163e1:	sar    eax,0x2
   1400163e4:	movzx  ecx,al
   1400163e7:	bt     edx,ecx
   1400163ea:	jae    0x140016436
   1400163ec:	mov    BYTE PTR [r9],r8b
   1400163ef:	mov    r9,QWORD PTR [rsp+0xd8]
   1400163f7:	mov    rax,QWORD PTR [rsp+0xd0]
   1400163ff:	inc    r9
   140016402:	mov    QWORD PTR [rsp+0xd8],r9
   14001640a:	test   rax,rax
   14001640d:	je     0x140016424
   14001640f:	mov    DWORD PTR [rax],edi
   140016411:	add    QWORD PTR [rsp+0xd0],0x4
   14001641a:	mov    r9,QWORD PTR [rsp+0xd8]
   140016422:	mov    edi,esi
   140016424:	mov    r10,QWORD PTR [rsp+0x60]
   140016429:	mov    rcx,QWORD PTR [rsp+0x68]
   14001642e:	dec    r11d
   140016431:	xor    r8d,r8d
   140016434:	jmp    0x1400163b7
   140016436:	mov    rcx,QWORD PTR [rsp+0x68]
   14001643b:	cmp    r8d,0xd7ff
   140016442:	jg     0x1400164ae
   140016444:	mov    rdx,r8
   140016447:	mov    rax,r8
   14001644a:	sar    rax,0x6
   14001644e:	and    edx,0x3f
   140016451:	movzx  ecx,WORD PTR [rcx+rax*2]
   140016455:	add    rcx,rdx
   140016458:	movzx  ebx,WORD PTR [rbx+rcx*2]
   14001645c:	test   ebx,ebx
   14001645e:	je     0x14001657e
   140016464:	cmp    ebx,0xff
   14001646a:	ja     0x140016614
   140016470:	mov    BYTE PTR [r9],bl
   140016473:	mov    r9,QWORD PTR [rsp+0xd8]
   14001647b:	mov    rax,QWORD PTR [rsp+0xd0]
   140016483:	inc    r9
   140016486:	mov    QWORD PTR [rsp+0xd8],r9
   14001648e:	test   rax,rax
   140016491:	je     0x1400164a6
   140016493:	mov    DWORD PTR [rax],edi
   140016495:	add    QWORD PTR [rsp+0xd0],0x4
   14001649e:	mov    r9,QWORD PTR [rsp+0xd8]
   1400164a6:	dec    r11d
   1400164a9:	jmp    0x140016684
   1400164ae:	mov    eax,r8d
   1400164b1:	and    eax,0xfffff800
   1400164b6:	cmp    eax,0xd800
   1400164bb:	jne    0x14001650c
   1400164bd:	test   r15b,0x2
   1400164c1:	jne    0x14001650c
   1400164c3:	bt     r8d,0xa
   1400164c8:	jb     0x1400166a4
   1400164ce:	cmp    r10,r13
   1400164d1:	jae    0x1400166da
   1400164d7:	movzx  ecx,WORD PTR [r10]
   1400164db:	mov    eax,ecx
   1400164dd:	and    eax,0xfffffc00
   1400164e2:	cmp    eax,0xdc00
   1400164e7:	jne    0x1400166a4
   1400164ed:	add    r8d,0xffff2809
   1400164f4:	add    r10,0x2
   1400164f8:	inc    esi
   1400164fa:	shl    r8d,0xa
   1400164fe:	mov    QWORD PTR [rsp+0x60],r10
   140016503:	add    r8d,ecx
   140016506:	test   r15b,0x1
   14001650a:	je     0x14001657e
   14001650c:	mov    rcx,QWORD PTR [rsp+0x78]
   140016511:	movsxd rdx,r8d
   140016514:	mov    rax,rdx
   140016517:	sar    rdx,0x4
   14001651b:	sar    rax,0xa
   14001651f:	and    edx,0x3f
   140016522:	movzx  ecx,WORD PTR [rcx+rax*2]
   140016526:	mov    rax,QWORD PTR [rsp+0x78]
   14001652b:	add    rcx,rdx
   14001652e:	mov    edx,DWORD PTR [rax+rcx*4]
   140016531:	mov    ecx,r8d
   140016534:	and    ecx,0xf
   140016537:	movzx  eax,dx
   14001653a:	shl    eax,0x4
   14001653d:	add    eax,ecx
   14001653f:	add    ecx,0x10
   140016542:	movzx  ebx,WORD PTR [rbx+rax*2]
   140016546:	movzx  eax,cl
   140016549:	bt     edx,eax
   14001654c:	jb     0x140016464
   140016552:	cmp    BYTE PTR [r12+0x3f],0x0
   140016558:	jne    0x140016576
   14001655a:	lea    eax,[r8-0xe000]
   140016561:	cmp    eax,0x1900
   140016566:	jb     0x140016576
   140016568:	lea    eax,[r8-0xf0000]
   14001656f:	cmp    eax,0x20000
   140016574:	jae    0x14001657e
   140016576:	test   ebx,ebx
   140016578:	jne    0x140016464
   14001657e:	movzx  eax,BYTE PTR [rbp+0x2]
   140016582:	mov    QWORD PTR [rsp+0x50],r14
   140016587:	movsxd rcx,r11d
   14001658a:	mov    BYTE PTR [rsp+0x48],al
   14001658e:	mov    DWORD PTR [rsp+0x40],edi
   140016592:	add    rcx,r9
   140016595:	lea    rax,[rsp+0xd0]
   14001659d:	mov    QWORD PTR [rbp+0x10],r10
   1400165a1:	mov    rdx,QWORD PTR [r12+0x30]
   1400165a6:	mov    QWORD PTR [rsp+0x38],rax
   1400165ab:	mov    QWORD PTR [rsp+0x30],rcx
   1400165b0:	lea    rax,[rsp+0xd8]
   1400165b8:	mov    QWORD PTR [rsp+0x28],rax
   1400165bd:	lea    r9,[rsp+0x60]
   1400165c2:	mov    rcx,r12
   1400165c5:	mov    QWORD PTR [rsp+0x20],r13
   1400165ca:	call   0x1400136d0
   1400165cf:	mov    r10,QWORD PTR [rsp+0x60]
   1400165d4:	mov    r8d,eax
   1400165d7:	mov    rax,r10
   1400165da:	sub    rax,QWORD PTR [rbp+0x10]
   1400165de:	sar    rax,1
   1400165e1:	add    esi,eax
   1400165e3:	cmp    DWORD PTR [r14],0x0
   1400165e7:	jg     0x1400166da
   1400165ed:	mov    r11d,DWORD PTR [rbp+0x28]
   1400165f1:	mov    r9,QWORD PTR [rsp+0xd8]
   1400165f9:	mov    rbx,QWORD PTR [rsp+0x70]
   1400165fe:	mov    edx,DWORD PTR [rsp+0xc0]
   140016605:	mov    rcx,QWORD PTR [rsp+0x68]
   14001660a:	sub    r11d,r9d
   14001660d:	mov    edi,esi
   14001660f:	jmp    0x1400163b7
   140016614:	mov    eax,ebx
   140016616:	shr    eax,0x8
   140016619:	mov    BYTE PTR [r9],al
   14001661c:	mov    rax,QWORD PTR [rsp+0xd8]
   140016624:	inc    rax
   140016627:	cmp    r11d,0x2
   14001662b:	mov    QWORD PTR [rsp+0xd8],rax
   140016633:	jl     0x1400166ad
   140016635:	mov    BYTE PTR [rax],bl
   140016637:	mov    r9,QWORD PTR [rsp+0xd8]
   14001663f:	mov    rax,QWORD PTR [rsp+0xd0]
   140016647:	inc    r9
   14001664a:	mov    QWORD PTR [rsp+0xd8],r9
   140016652:	test   rax,rax
   140016655:	je     0x140016680
   140016657:	mov    DWORD PTR [rax],edi
   140016659:	mov    rax,QWORD PTR [rsp+0xd0]
   140016661:	add    rax,0x4
   140016665:	mov    QWORD PTR [rsp+0xd0],rax
   14001666d:	mov    DWORD PTR [rax],edi
   14001666f:	add    QWORD PTR [rsp+0xd0],0x4
   140016678:	mov    r9,QWORD PTR [rsp+0xd8]
   140016680:	sub    r11d,0x2
   140016684:	mov    r10,QWORD PTR [rsp+0x60]
   140016689:	mov    rbx,QWORD PTR [rsp+0x70]
   14001668e:	mov    edx,DWORD PTR [rsp+0xc0]
   140016695:	mov    rcx,QWORD PTR [rsp+0x68]
   14001669a:	xor    r8d,r8d
   14001669d:	mov    edi,esi
   14001669f:	jmp    0x1400163b7
   1400166a4:	mov    DWORD PTR [r14],0xc
   1400166ab:	jmp    0x1400166da
   1400166ad:	mov    rax,QWORD PTR [rsp+0xd0]
   1400166b5:	test   rax,rax
   1400166b8:	je     0x1400166c5
   1400166ba:	mov    DWORD PTR [rax],edi
   1400166bc:	add    QWORD PTR [rsp+0xd0],0x4
   1400166c5:	mov    BYTE PTR [r12+0x68],bl
   1400166ca:	mov    BYTE PTR [r12+0x5b],0x1
   1400166d0:	xor    r8d,r8d
   1400166d3:	mov    DWORD PTR [r14],0xf
   1400166da:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400166e2:	mov    DWORD PTR [r12+0x54],r8d
   1400166e7:	mov    rax,QWORD PTR [rsp+0x60]
   1400166ec:	mov    QWORD PTR [rbp+0x10],rax
   1400166f0:	mov    rax,QWORD PTR [rsp+0xd8]
   1400166f8:	mov    QWORD PTR [rbp+0x20],rax
   1400166fc:	mov    rax,QWORD PTR [rsp+0xd0]
   140016704:	mov    QWORD PTR [rbp+0x30],rax
   140016708:	add    rsp,0x80
   14001670f:	pop    r15
   140016711:	pop    r14
   140016713:	pop    r13
   140016715:	pop    r12
   140016717:	pop    rdi
   140016718:	pop    rsi
   140016719:	pop    rbp
   14001671a:	ret    
   14001671b:	int3   
   14001671c:	int3   
   14001671d:	int3   
   14001671e:	int3   
   14001671f:	int3   
   140016720:	mov    rax,rsp
   140016723:	push   rbx
   140016724:	push   rbp
   140016725:	push   rsi
   140016726:	push   rdi
   140016727:	push   r12
   140016729:	push   r13
   14001672b:	push   r14
   14001672d:	sub    rsp,0x70
   140016731:	mov    r9,QWORD PTR [rcx+0x20]
   140016735:	mov    r12,QWORD PTR [rcx+0x8]
   140016739:	mov    r8,QWORD PTR [rcx+0x10]
   14001673d:	mov    r11d,DWORD PTR [rcx+0x28]
   140016741:	mov    rbp,QWORD PTR [rcx+0x18]
   140016745:	mov    QWORD PTR [rax+0x8],r8
   140016749:	mov    QWORD PTR [rax+0x18],r9
   14001674d:	mov    rax,QWORD PTR [rcx+0x30]
   140016751:	mov    rdi,rcx
   140016754:	mov    QWORD PTR [rsp+0xc8],rax
   14001675c:	mov    rax,QWORD PTR [r12+0x30]
   140016761:	sub    r11d,r9d
   140016764:	test   BYTE PTR [r12+0x38],0x10
   14001676a:	mov    rcx,QWORD PTR [rax+0x60]
   14001676e:	mov    r13,rdx
   140016771:	mov    QWORD PTR [rsp+0x60],rcx
   140016776:	je     0x140016786
   140016778:	mov    rcx,QWORD PTR [rax+0xf8]
   14001677f:	mov    QWORD PTR [rsp+0x68],rcx
   140016784:	jmp    0x140016792
   140016786:	mov    rcx,QWORD PTR [rax+0xf0]
   14001678d:	mov    QWORD PTR [rsp+0x68],rcx
   140016792:	cmp    BYTE PTR [r12+0x3f],0x0
   140016798:	mov    QWORD PTR [rsp+0xb8],r15
   1400167a0:	je     0x1400167aa
   1400167a2:	mov    r15d,0x800
   1400167a8:	jmp    0x1400167b0
   1400167aa:	mov    r15d,0xc00
   1400167b0:	movzx  r14d,BYTE PTR [rax+0x105]
   1400167b8:	mov    r10d,DWORD PTR [r12+0x54]
   1400167bd:	and    r14b,0x1
   1400167c1:	mov    eax,r10d
   1400167c4:	neg    eax
   1400167c6:	sbb    esi,esi
   1400167c8:	xor    ebx,ebx
   1400167ca:	test   r10d,r10d
   1400167cd:	je     0x1400167d4
   1400167cf:	test   r11d,r11d
   1400167d2:	jg     0x140016812
   1400167d4:	cmp    r8,rbp
   1400167d7:	jae    0x14001697c
   1400167dd:	test   r11d,r11d
   1400167e0:	jle    0x140016974
   1400167e6:	movzx  r10d,WORD PTR [r8]
   1400167ea:	add    r8,0x2
   1400167ee:	inc    ebx
   1400167f0:	mov    eax,r10d
   1400167f3:	mov    QWORD PTR [rsp+0xb0],r8
   1400167fb:	and    eax,0xfffff800
   140016800:	cmp    eax,0xd800
   140016805:	jne    0x140016856
   140016807:	bt     r10d,0xa
   14001680c:	jb     0x14001696a
   140016812:	cmp    r8,rbp
   140016815:	jae    0x14001697c
   14001681b:	movzx  ecx,WORD PTR [r8]
   14001681f:	mov    eax,ecx
   140016821:	and    eax,0xfffffc00
   140016826:	cmp    eax,0xdc00
   14001682b:	jne    0x14001696a
   140016831:	add    r10d,0xffff2809
   140016838:	add    r8,0x2
   14001683c:	inc    ebx
   14001683e:	shl    r10d,0xa
   140016842:	mov    QWORD PTR [rsp+0xb0],r8
   14001684a:	add    r10d,ecx
   14001684d:	test   r14b,r14b
   140016850:	je     0x1400168df
   140016856:	mov    rcx,QWORD PTR [rsp+0x60]
   14001685b:	movsxd rdx,r10d
   14001685e:	mov    rax,rdx
   140016861:	sar    rax,0xa
   140016865:	movzx  ecx,WORD PTR [rcx+rax*2]
   140016869:	mov    rax,rdx
   14001686c:	and    edx,0xf
   14001686f:	sar    rax,0x4
   140016873:	and    eax,0x3f
   140016876:	add    rcx,rax
   140016879:	mov    rax,QWORD PTR [rsp+0x60]
   14001687e:	movzx  eax,WORD PTR [rax+rcx*2]
   140016882:	mov    rcx,QWORD PTR [rsp+0x68]
   140016887:	add    rax,rdx
   14001688a:	movzx  ecx,WORD PTR [rcx+rax*2]
   14001688e:	cmp    cx,r15w
   140016892:	jb     0x1400168df
   140016894:	mov    BYTE PTR [r9],cl
   140016897:	mov    r9,QWORD PTR [rsp+0xc0]
   14001689f:	mov    rax,QWORD PTR [rsp+0xc8]
   1400168a7:	inc    r9
   1400168aa:	mov    QWORD PTR [rsp+0xc0],r9
   1400168b2:	test   rax,rax
   1400168b5:	je     0x1400168ca
   1400168b7:	mov    DWORD PTR [rax],esi
   1400168b9:	add    QWORD PTR [rsp+0xc8],0x4
   1400168c2:	mov    r9,QWORD PTR [rsp+0xc0]
   1400168ca:	mov    r8,QWORD PTR [rsp+0xb0]
   1400168d2:	dec    r11d
   1400168d5:	mov    esi,ebx
   1400168d7:	xor    r10d,r10d
   1400168da:	jmp    0x1400167d4
   1400168df:	movzx  eax,BYTE PTR [rdi+0x2]
   1400168e3:	mov    QWORD PTR [rsp+0x50],r13
   1400168e8:	mov    QWORD PTR [rdi+0x10],r8
   1400168ec:	mov    rdx,QWORD PTR [r12+0x30]
   1400168f1:	mov    BYTE PTR [rsp+0x48],al
   1400168f5:	mov    DWORD PTR [rsp+0x40],esi
   1400168f9:	lea    rax,[rsp+0xc8]
   140016901:	movsxd rcx,r11d
   140016904:	mov    r8d,r10d
   140016907:	mov    QWORD PTR [rsp+0x38],rax
   14001690c:	add    rcx,r9
   14001690f:	lea    rax,[rsp+0xc0]
   140016917:	mov    QWORD PTR [rsp+0x30],rcx
   14001691c:	mov    QWORD PTR [rsp+0x28],rax
   140016921:	lea    r9,[rsp+0xb0]
   140016929:	mov    rcx,r12
   14001692c:	mov    QWORD PTR [rsp+0x20],rbp
   140016931:	call   0x1400136d0
   140016936:	mov    r8,QWORD PTR [rsp+0xb0]
   14001693e:	mov    r10d,eax
   140016941:	mov    rax,r8
   140016944:	sub    rax,QWORD PTR [rdi+0x10]
   140016948:	sar    rax,1
   14001694b:	add    ebx,eax
   14001694d:	cmp    DWORD PTR [r13+0x0],0x0
   140016952:	jg     0x14001697c
   140016954:	mov    r11d,DWORD PTR [rdi+0x28]
   140016958:	mov    r9,QWORD PTR [rsp+0xc0]
   140016960:	mov    esi,ebx
   140016962:	sub    r11d,r9d
   140016965:	jmp    0x1400167d4
   14001696a:	mov    DWORD PTR [r13+0x0],0xc
   140016972:	jmp    0x14001697c
   140016974:	mov    DWORD PTR [r13+0x0],0xf
   14001697c:	mov    r15,QWORD PTR [rsp+0xb8]
   140016984:	mov    DWORD PTR [r12+0x54],r10d
   140016989:	mov    rax,QWORD PTR [rsp+0xb0]
   140016991:	mov    QWORD PTR [rdi+0x10],rax
   140016995:	mov    rax,QWORD PTR [rsp+0xc0]
   14001699d:	mov    QWORD PTR [rdi+0x20],rax
   1400169a1:	mov    rax,QWORD PTR [rsp+0xc8]
   1400169a9:	mov    QWORD PTR [rdi+0x30],rax
   1400169ad:	add    rsp,0x70
   1400169b1:	pop    r14
   1400169b3:	pop    r13
   1400169b5:	pop    r12
   1400169b7:	pop    rdi
   1400169b8:	pop    rsi
   1400169b9:	pop    rbp
   1400169ba:	pop    rbx
   1400169bb:	ret    
   1400169bc:	int3   
   1400169bd:	int3   
   1400169be:	int3   
   1400169bf:	int3   
   1400169c0:	mov    rax,rsp
   1400169c3:	push   rbp
   1400169c4:	push   rdi
   1400169c5:	push   r13
   1400169c7:	push   r14
   1400169c9:	push   r15
   1400169cb:	sub    rsp,0xa0
   1400169d2:	mov    r15,QWORD PTR [rcx+0x8]
   1400169d6:	mov    r9,QWORD PTR [rcx+0x10]
   1400169da:	mov    r8,QWORD PTR [rcx+0x30]
   1400169de:	mov    r11d,DWORD PTR [rcx+0x28]
   1400169e2:	mov    QWORD PTR [rax-0x30],rbx
   1400169e6:	mov    rbx,QWORD PTR [rcx+0x20]
   1400169ea:	mov    QWORD PTR [rax-0x68],rbx
   1400169ee:	mov    QWORD PTR [rax+0x20],r9
   1400169f2:	mov    QWORD PTR [rax+0x18],r8
   1400169f6:	mov    QWORD PTR [rax-0x40],r12
   1400169fa:	mov    rax,QWORD PTR [r15+0x30]
   1400169fe:	mov    r12,QWORD PTR [rcx+0x18]
   140016a02:	mov    rbp,rcx
   140016a05:	mov    rcx,QWORD PTR [rax+0x60]
   140016a09:	sub    r11d,ebx
   140016a0c:	test   BYTE PTR [r15+0x38],0x10
   140016a11:	mov    r13,rdx
   140016a14:	mov    QWORD PTR [rsp+0x68],rcx
   140016a19:	je     0x140016a29
   140016a1b:	mov    rcx,QWORD PTR [rax+0xf8]
   140016a22:	mov    QWORD PTR [rsp+0x70],rcx
   140016a27:	jmp    0x140016a35
   140016a29:	mov    rcx,QWORD PTR [rax+0xf0]
   140016a30:	mov    QWORD PTR [rsp+0x70],rcx
   140016a35:	cmp    BYTE PTR [r15+0x3f],0x0
   140016a3a:	mov    edx,DWORD PTR [rax+0x10c]
   140016a40:	mov    QWORD PTR [rsp+0x90],rsi
   140016a48:	mov    DWORD PTR [rsp+0xd8],edx
   140016a4f:	je     0x140016a5f
   140016a51:	mov    esi,0x800
   140016a56:	mov    DWORD PTR [rsp+0xd0],esi
   140016a5d:	jmp    0x140016a6b
   140016a5f:	mov    esi,0xc00
   140016a64:	mov    DWORD PTR [rsp+0xd0],esi
   140016a6b:	mov    r10d,DWORD PTR [r15+0x54]
   140016a6f:	mov    r14,r9
   140016a72:	mov    eax,r10d
   140016a75:	neg    eax
   140016a77:	mov    rax,r12
   140016a7a:	sbb    edi,edi
   140016a7c:	sub    rax,r9
   140016a7f:	sar    rax,1
   140016a82:	cmp    eax,r11d
   140016a85:	cmovl  r11d,eax
   140016a89:	test   r10d,r10d
   140016a8c:	je     0x140016a97
   140016a8e:	test   r11d,r11d
   140016a91:	jg     0x140016b74
   140016a97:	test   r11d,r11d
   140016a9a:	jle    0x140016cea
   140016aa0:	movzx  r10d,WORD PTR [r9]
   140016aa4:	add    r9,0x2
   140016aa8:	cmp    r10d,0x7f
   140016aac:	mov    QWORD PTR [rsp+0xe8],r9
   140016ab4:	jg     0x140016aec
   140016ab6:	mov    eax,r10d
   140016ab9:	sar    eax,0x2
   140016abc:	movzx  ecx,al
   140016abf:	bt     edx,ecx
   140016ac2:	jae    0x140016aec
   140016ac4:	mov    BYTE PTR [rbx],r10b
   140016ac7:	mov    rbx,QWORD PTR [rsp+0x60]
   140016acc:	mov    r9,QWORD PTR [rsp+0xe8]
   140016ad4:	mov    r8,QWORD PTR [rsp+0xe0]
   140016adc:	inc    rbx
   140016adf:	dec    r11d
   140016ae2:	mov    QWORD PTR [rsp+0x60],rbx
   140016ae7:	xor    r10d,r10d
   140016aea:	jmp    0x140016a97
   140016aec:	mov    rcx,QWORD PTR [rsp+0x68]
   140016af1:	mov    rdx,r10
   140016af4:	mov    rax,r10
   140016af7:	sar    rax,0xa
   140016afb:	and    edx,0xf
   140016afe:	movzx  ecx,WORD PTR [rcx+rax*2]
   140016b02:	mov    rax,r10
   140016b05:	sar    rax,0x4
   140016b09:	and    eax,0x3f
   140016b0c:	add    rcx,rax
   140016b0f:	mov    rax,QWORD PTR [rsp+0x68]
   140016b14:	movzx  eax,WORD PTR [rax+rcx*2]
   140016b18:	mov    rcx,QWORD PTR [rsp+0x70]
   140016b1d:	add    rax,rdx
   140016b20:	movzx  ecx,WORD PTR [rcx+rax*2]
   140016b24:	cmp    cx,si
   140016b27:	jb     0x140016b5a
   140016b29:	mov    edx,DWORD PTR [rsp+0xd8]
   140016b30:	mov    BYTE PTR [rbx],cl
   140016b32:	mov    rbx,QWORD PTR [rsp+0x60]
   140016b37:	mov    r9,QWORD PTR [rsp+0xe8]
   140016b3f:	mov    r8,QWORD PTR [rsp+0xe0]
   140016b47:	inc    rbx
   140016b4a:	dec    r11d
   140016b4d:	mov    QWORD PTR [rsp+0x60],rbx
   140016b52:	xor    r10d,r10d
   140016b55:	jmp    0x140016a97
   140016b5a:	mov    eax,r10d
   140016b5d:	and    eax,0xfffff800
   140016b62:	cmp    eax,0xd800
   140016b67:	jne    0x140016bad
   140016b69:	bt     r10d,0xa
   140016b6e:	jb     0x140016cd6
   140016b74:	cmp    r9,r12
   140016b77:	jae    0x140016cc6
   140016b7d:	movzx  ecx,WORD PTR [r9]
   140016b81:	mov    eax,ecx
   140016b83:	and    eax,0xfffffc00
   140016b88:	cmp    eax,0xdc00
   140016b8d:	jne    0x140016cbc
   140016b93:	add    r10d,0xffff2809
   140016b9a:	add    r9,0x2
   140016b9e:	shl    r10d,0xa
   140016ba2:	mov    QWORD PTR [rsp+0xe8],r9
   140016baa:	add    r10d,ecx
   140016bad:	xor    esi,esi
   140016baf:	cmp    r10d,0xffff
   140016bb6:	seta   sil
   140016bba:	inc    esi
   140016bbc:	test   r8,r8
   140016bbf:	je     0x140016bf7
   140016bc1:	mov    rax,r9
   140016bc4:	sub    rax,r14
   140016bc7:	sar    rax,1
   140016bca:	sub    eax,esi
   140016bcc:	test   eax,eax
   140016bce:	jle    0x140016bf7
   140016bd0:	mov    DWORD PTR [r8],edi
   140016bd3:	mov    r8,QWORD PTR [rsp+0xe0]
   140016bdb:	dec    eax
   140016bdd:	add    r8,0x4
   140016be1:	inc    edi
   140016be3:	mov    QWORD PTR [rsp+0xe0],r8
   140016beb:	test   eax,eax
   140016bed:	jg     0x140016bd0
   140016bef:	mov    r9,QWORD PTR [rsp+0xe8]
   140016bf7:	movzx  eax,BYTE PTR [rbp+0x2]
   140016bfb:	mov    rdx,QWORD PTR [r15+0x30]
   140016bff:	mov    QWORD PTR [rsp+0x50],r13
   140016c04:	mov    BYTE PTR [rsp+0x48],al
   140016c08:	mov    DWORD PTR [rsp+0x40],edi
   140016c0c:	lea    rax,[rsp+0xe0]
   140016c14:	mov    QWORD PTR [rsp+0x38],rax
   140016c19:	mov    rax,QWORD PTR [rbp+0x28]
   140016c1d:	mov    rbx,r9
   140016c20:	mov    QWORD PTR [rsp+0x30],rax
   140016c25:	lea    rax,[rsp+0x60]
   140016c2a:	lea    r9,[rsp+0xe8]
   140016c32:	mov    QWORD PTR [rsp+0x28],rax
   140016c37:	mov    r8d,r10d
   140016c3a:	mov    rcx,r15
   140016c3d:	mov    QWORD PTR [rsp+0x20],r12
   140016c42:	call   0x1400136d0
   140016c47:	mov    r9,QWORD PTR [rsp+0xe8]
   140016c4f:	mov    r10d,eax
   140016c52:	mov    rax,r9
   140016c55:	mov    r14,r9
   140016c58:	sub    rax,rbx
   140016c5b:	sar    rax,1
   140016c5e:	add    eax,esi
   140016c60:	add    edi,eax
   140016c62:	cmp    DWORD PTR [r13+0x0],0x0
   140016c67:	jg     0x140016ce0
   140016c69:	mov    r11d,DWORD PTR [rbp+0x28]
   140016c6d:	mov    rbx,QWORD PTR [rsp+0x60]
   140016c72:	mov    rax,r12
   140016c75:	sub    rax,r9
   140016c78:	sub    r11d,ebx
   140016c7b:	sar    rax,1
   140016c7e:	cmp    eax,r11d
   140016c81:	jl     0x140016c9e
   140016c83:	mov    r8,QWORD PTR [rsp+0xe0]
   140016c8b:	mov    esi,DWORD PTR [rsp+0xd0]
   140016c92:	mov    edx,DWORD PTR [rsp+0xd8]
   140016c99:	jmp    0x140016a97
   140016c9e:	mov    r8,QWORD PTR [rsp+0xe0]
   140016ca6:	mov    esi,DWORD PTR [rsp+0xd0]
   140016cad:	mov    edx,DWORD PTR [rsp+0xd8]
   140016cb4:	mov    r11d,eax
   140016cb7:	jmp    0x140016a97
   140016cbc:	mov    DWORD PTR [r13+0x0],0xc
   140016cc4:	jmp    0x140016d04
   140016cc6:	cmp    BYTE PTR [rbp+0x2],0x0
   140016cca:	je     0x140016cea
   140016ccc:	mov    DWORD PTR [r13+0x0],0xb
   140016cd4:	jmp    0x140016d04
   140016cd6:	mov    DWORD PTR [r13+0x0],0xc
   140016cde:	jmp    0x140016d04
   140016ce0:	mov    r8,QWORD PTR [rsp+0xe0]
   140016ce8:	jmp    0x140016d04
   140016cea:	cmp    DWORD PTR [r13+0x0],0x0
   140016cef:	jg     0x140016d04
   140016cf1:	cmp    r9,r12
   140016cf4:	jae    0x140016d04
   140016cf6:	cmp    rbx,QWORD PTR [rbp+0x28]
   140016cfa:	jb     0x140016d04
   140016cfc:	mov    DWORD PTR [r13+0x0],0xf
   140016d04:	mov    r12,QWORD PTR [rsp+0x88]
   140016d0c:	mov    rsi,QWORD PTR [rsp+0x90]
   140016d14:	mov    rbx,QWORD PTR [rsp+0x98]
   140016d1c:	test   r8,r8
   140016d1f:	je     0x140016d5f
   140016d21:	sub    r9,r14
   140016d24:	sar    r9,1
   140016d27:	je     0x140016d5f
   140016d29:	cmp    DWORD PTR [r13+0x0],0xb
   140016d2e:	jne    0x140016d33
   140016d30:	dec    r9
   140016d33:	test   r9,r9
   140016d36:	je     0x140016d5f
   140016d38:	nop    DWORD PTR [rax+rax*1+0x0]
   140016d40:	mov    DWORD PTR [r8],edi
   140016d43:	mov    r8,QWORD PTR [rsp+0xe0]
   140016d4b:	inc    edi
   140016d4d:	add    r8,0x4
   140016d51:	sub    r9,0x1
   140016d55:	mov    QWORD PTR [rsp+0xe0],r8
   140016d5d:	jne    0x140016d40
   140016d5f:	mov    DWORD PTR [r15+0x54],r10d
   140016d63:	mov    rax,QWORD PTR [rsp+0xe8]
   140016d6b:	mov    QWORD PTR [rbp+0x10],rax
   140016d6f:	mov    rax,QWORD PTR [rsp+0x60]
   140016d74:	mov    QWORD PTR [rbp+0x20],rax
   140016d78:	mov    rax,QWORD PTR [rsp+0xe0]
   140016d80:	mov    QWORD PTR [rbp+0x30],rax
   140016d84:	add    rsp,0xa0
   140016d8b:	pop    r15
   140016d8d:	pop    r14
   140016d8f:	pop    r13
   140016d91:	pop    rdi
   140016d92:	pop    rbp
   140016d93:	ret    
   140016d94:	int3   
   140016d95:	int3   
   140016d96:	int3   
   140016d97:	int3   
   140016d98:	int3   
   140016d99:	int3   
   140016d9a:	int3   
   140016d9b:	int3   
   140016d9c:	int3   
   140016d9d:	int3   
   140016d9e:	int3   
   140016d9f:	int3   
   140016da0:	rex push rbx
   140016da2:	push   rbp
   140016da3:	push   rdi
   140016da4:	push   r12
   140016da6:	push   r15
   140016da8:	sub    rsp,0xd0
   140016daf:	mov    rdi,QWORD PTR [rcx+0x8]
   140016db3:	xor    ebx,ebx
   140016db5:	or     r15d,0xffffffff
   140016db9:	cmp    DWORD PTR [rdi+0xd0],ebx
   140016dbf:	mov    r12,rdx
   140016dc2:	mov    rbp,rcx
   140016dc5:	mov    BYTE PTR [rsp+0x118],0x0
   140016dcd:	mov    BYTE PTR [rsp+0x70],bl
   140016dd1:	jl     0x140016dfa
   140016dd3:	mov    r9,rdx
   140016dd6:	mov    rdx,rcx
   140016dd9:	mov    r8d,r15d
   140016ddc:	mov    rcx,rdi
   140016ddf:	call   0x140029f10
   140016de4:	cmp    DWORD PTR [r12],ebx
   140016de8:	jg     0x140017bb7
   140016dee:	cmp    BYTE PTR [rdi+0x119],bl
   140016df4:	jl     0x140017bb7
   140016dfa:	mov    rax,QWORD PTR [rdi+0x30]
   140016dfe:	movzx  r9d,BYTE PTR [rax+0x104]
   140016e06:	movzx  ecx,BYTE PTR [rax+0x105]
   140016e0d:	mov    BYTE PTR [rsp+0x60],r9b
   140016e12:	mov    BYTE PTR [rsp+0x80],cl
   140016e19:	test   r9b,r9b
   140016e1c:	jne    0x140016e5c
   140016e1e:	test   cl,0x2
   140016e21:	jne    0x140016e84
   140016e23:	test   cl,0x1
   140016e26:	jne    0x140016e42
   140016e28:	mov    rdx,r12
   140016e2b:	mov    rcx,rbp
   140016e2e:	call   0x1400169c0
   140016e33:	add    rsp,0xd0
   140016e3a:	pop    r15
   140016e3c:	pop    r12
   140016e3e:	pop    rdi
   140016e3f:	pop    rbp
   140016e40:	pop    rbx
   140016e41:	ret    
   140016e42:	mov    rdx,r12
   140016e45:	mov    rcx,rbp
   140016e48:	call   0x140016720
   140016e4d:	add    rsp,0xd0
   140016e54:	pop    r15
   140016e56:	pop    r12
   140016e58:	pop    rdi
   140016e59:	pop    rbp
   140016e5a:	pop    rbx
   140016e5b:	ret    
   140016e5c:	cmp    r9b,0x1
   140016e60:	jne    0x140016e84
   140016e62:	cmp    BYTE PTR [rax+0x106],bl
   140016e68:	je     0x140016e84
   140016e6a:	mov    rdx,r12
   140016e6d:	mov    rcx,rbp
   140016e70:	call   0x140016300
   140016e75:	add    rsp,0xd0
   140016e7c:	pop    r15
   140016e7e:	pop    r12
   140016e80:	pop    rdi
   140016e81:	pop    rbp
   140016e82:	pop    rbx
   140016e83:	ret    
   140016e84:	mov    rax,QWORD PTR [rbp+0x10]
   140016e88:	mov    r10d,DWORD PTR [rbp+0x28]
   140016e8c:	mov    QWORD PTR [rsp+0x108],rsi
   140016e94:	mov    QWORD PTR [rsp+0x90],rax
   140016e9c:	mov    rax,QWORD PTR [rbp+0x18]
   140016ea0:	mov    QWORD PTR [rsp+0xc8],r13
   140016ea8:	mov    QWORD PTR [rsp+0xa0],rax
   140016eb0:	mov    rax,QWORD PTR [rbp+0x20]
   140016eb4:	mov    QWORD PTR [rsp+0x68],rax
   140016eb9:	sub    r10d,eax
   140016ebc:	mov    rax,QWORD PTR [rbp+0x30]
   140016ec0:	mov    QWORD PTR [rsp+0x78],rax
   140016ec5:	mov    rax,QWORD PTR [rdi+0x30]
   140016ec9:	mov    rcx,QWORD PTR [rax+0x60]
   140016ecd:	mov    QWORD PTR [rsp+0xb8],rcx
   140016ed5:	cmp    BYTE PTR [rax+0x106],bl
   140016edb:	je     0x140016eeb
   140016edd:	mov    rcx,QWORD PTR [rax+0x68]
   140016ee1:	mov    QWORD PTR [rsp+0xb0],rcx
   140016ee9:	jmp    0x140016ef5
   140016eeb:	xor    ecx,ecx
   140016eed:	mov    QWORD PTR [rsp+0xb0],rcx
   140016ef5:	mov    ecx,DWORD PTR [rdi+0x38]
   140016ef8:	test   cl,0x10
   140016efb:	je     0x140016f0e
   140016efd:	mov    rdx,QWORD PTR [rax+0xf8]
   140016f04:	mov    QWORD PTR [rsp+0x88],rdx
   140016f0c:	jmp    0x140016f1d
   140016f0e:	mov    rdx,QWORD PTR [rax+0xf0]
   140016f15:	mov    QWORD PTR [rsp+0x88],rdx
   140016f1d:	mov    eax,DWORD PTR [rax+0x10c]
   140016f23:	mov    r8d,DWORD PTR [rdi+0x54]
   140016f27:	mov    DWORD PTR [rsp+0xa8],eax
   140016f2e:	cmp    r9b,0xc
   140016f32:	jne    0x140016f45
   140016f34:	mov    r11d,DWORD PTR [rdi+0x50]
   140016f38:	test   r11d,r11d
   140016f3b:	jne    0x140016f48
   140016f3d:	mov    r11d,0x1
   140016f43:	jmp    0x140016f48
   140016f45:	xor    r11d,r11d
   140016f48:	mov    eax,r8d
   140016f4b:	mov    QWORD PTR [rsp+0xc0],r14
   140016f53:	neg    eax
   140016f55:	sbb    esi,esi
   140016f57:	xor    r13d,r13d
   140016f5a:	bt     ecx,0xc
   140016f5e:	jae    0x140016f77
   140016f60:	mov    dl,0xa
   140016f62:	mov    BYTE PTR [rsp+0x118],0x41
   140016f6a:	lea    r14d,[r13+0x2]
   140016f6e:	mov    BYTE PTR [rsp+0x100],dl
   140016f75:	jmp    0x140016fbc
   140016f77:	bt     ecx,0xd
   140016f7b:	jae    0x140016f8e
   140016f7d:	mov    dl,0x29
   140016f7f:	mov    r14d,0x1
   140016f85:	mov    BYTE PTR [rsp+0x100],dl
   140016f8c:	jmp    0x140016fbc
   140016f8e:	bt     ecx,0xe
   140016f92:	jae    0x140016fad
   140016f94:	mov    dl,0x1a
   140016f96:	mov    BYTE PTR [rsp+0x118],0x71
   140016f9e:	mov    r14d,0x2
   140016fa4:	mov    BYTE PTR [rsp+0x100],dl
   140016fab:	jmp    0x140016fbc
   140016fad:	mov    dl,0xf
   140016faf:	mov    r14d,0x1
   140016fb5:	mov    BYTE PTR [rsp+0x100],dl
   140016fbc:	bt     ecx,0xc
   140016fc0:	jae    0x140016fdc
   140016fc2:	mov    BYTE PTR [rsp+0x110],0xa
   140016fca:	mov    BYTE PTR [rsp+0x70],0x42
   140016fcf:	mov    DWORD PTR [rsp+0x98],0x2
   140016fda:	jmp    0x14001702a
   140016fdc:	bt     ecx,0xd
   140016fe0:	jae    0x140016ff7
   140016fe2:	mov    BYTE PTR [rsp+0x110],0x28
   140016fea:	mov    DWORD PTR [rsp+0x98],0x1
   140016ff5:	jmp    0x14001702a
   140016ff7:	bt     ecx,0xe
   140016ffb:	jae    0x140017017
   140016ffd:	mov    BYTE PTR [rsp+0x110],0x1a
   140017005:	mov    BYTE PTR [rsp+0x70],0x70
   14001700a:	mov    DWORD PTR [rsp+0x98],0x2
   140017015:	jmp    0x14001702a
   140017017:	mov    BYTE PTR [rsp+0x110],0xe
   14001701f:	mov    DWORD PTR [rsp+0x98],0x1
   14001702a:	test   r8d,r8d
   14001702d:	je     0x140017038
   14001702f:	test   r10d,r10d
   140017032:	jg     0x14001742c
   140017038:	mov    rax,QWORD PTR [rsp+0x90]
   140017040:	mov    rcx,QWORD PTR [rsp+0xa0]
   140017048:	cmp    rax,rcx
   14001704b:	jae    0x140017aae
   140017051:	test   r10d,r10d
   140017054:	jle    0x140017aa1
   14001705a:	movzx  r8d,WORD PTR [rax]
   14001705e:	add    QWORD PTR [rsp+0x90],0x2
   140017067:	inc    r13d
   14001706a:	cmp    r8d,0x7f
   14001706e:	jg     0x1400170ba
   140017070:	mov    eax,r8d
   140017073:	sar    eax,0x2
   140017076:	movzx  ecx,al
   140017079:	mov    eax,DWORD PTR [rsp+0xa8]
   140017080:	bt     eax,ecx
   140017083:	jae    0x1400170b2
   140017085:	mov    rax,QWORD PTR [rsp+0x68]
   14001708a:	mov    BYTE PTR [rax],r8b
   14001708d:	mov    rax,QWORD PTR [rsp+0x78]
   140017092:	inc    QWORD PTR [rsp+0x68]
   140017097:	test   rax,rax
   14001709a:	je     0x1400170aa
   14001709c:	mov    DWORD PTR [rax],esi
   14001709e:	add    QWORD PTR [rsp+0x78],0x4
   1400170a4:	mov    r15d,esi
   1400170a7:	mov    esi,r13d
   1400170aa:	dec    r10d
   1400170ad:	xor    r8d,r8d
   1400170b0:	jmp    0x140017038
   1400170b2:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400170ba:	cmp    r8d,0xd7ff
   1400170c1:	jg     0x1400173fe
   1400170c7:	mov    rdx,QWORD PTR [rsp+0xb0]
   1400170cf:	test   rdx,rdx
   1400170d2:	je     0x1400173fe
   1400170d8:	mov    rax,r8
   1400170db:	sar    rax,0x6
   1400170df:	movzx  edx,WORD PTR [rdx+rax*2]
   1400170e3:	movzx  eax,r9b
   1400170e7:	dec    eax
   1400170e9:	cmp    eax,0xda
   1400170ee:	ja     0x1400173f5
   1400170f4:	lea    rcx,[rip+0xfffffffffffe8f05]        # 0x140000000
   1400170fb:	cdqe   
   1400170fd:	movzx  eax,BYTE PTR [rcx+rax*1+0x17be8]
   140017105:	mov    ecx,DWORD PTR [rcx+rax*4+0x17bc8]
   14001710c:	lea    rax,[rip+0xfffffffffffe8eed]        # 0x140000000
   140017113:	add    rcx,rax
   140017116:	jmp    rcx
   140017118:	mov    rcx,QWORD PTR [rsp+0x88]
   140017120:	mov    eax,r8d
   140017123:	and    eax,0x3f
   140017126:	add    eax,edx
   140017128:	movzx  edx,WORD PTR [rcx+rax*2]
   14001712c:	cmp    edx,0xff
   140017132:	ja     0x140017146
   140017134:	test   edx,edx
   140017136:	je     0x140017806
   14001713c:	mov    ebx,0x1
   140017141:	jmp    0x1400178ba
   140017146:	mov    ebx,0x2
   14001714b:	jmp    0x1400178ba
   140017150:	mov    rcx,QWORD PTR [rsp+0x88]
   140017158:	mov    eax,r8d
   14001715b:	mov    DWORD PTR [rdi+0x50],r11d
   14001715f:	and    eax,0x3f
   140017162:	add    eax,edx
   140017164:	movzx  edx,WORD PTR [rcx+rax*2]
   140017168:	cmp    edx,0xff
   14001716e:	ja     0x1400171d9
   140017170:	test   edx,edx
   140017172:	je     0x140017806
   140017178:	cmp    r11d,0x1
   14001717c:	jg     0x140017188
   14001717e:	mov    ebx,0x1
   140017183:	jmp    0x1400178ba
   140017188:	cmp    r14b,0x1
   14001718c:	jne    0x1400171a9
   14001718e:	movzx  eax,BYTE PTR [rsp+0x100]
   140017196:	mov    ebx,0x2
   14001719b:	shl    eax,0x8
   14001719e:	lea    r11d,[rbx-0x1]
   1400171a2:	or     edx,eax
   1400171a4:	jmp    0x1400178ba
   1400171a9:	cmp    r14b,0x2
   1400171ad:	jne    0x1400171ce
   1400171af:	movzx  ecx,BYTE PTR [rsp+0x100]
   1400171b7:	movzx  eax,BYTE PTR [rsp+0x118]
   1400171bf:	mov    ebx,0x3
   1400171c4:	shl    ecx,0x8
   1400171c7:	or     ecx,eax
   1400171c9:	shl    ecx,0x8
   1400171cc:	or     edx,ecx
   1400171ce:	mov    r11d,0x1
   1400171d4:	jmp    0x1400178ba
   1400171d9:	cmp    r11d,0x2
   1400171dd:	jne    0x1400171e7
   1400171df:	mov    ebx,r11d
   1400171e2:	jmp    0x1400178ba
   1400171e7:	mov    eax,DWORD PTR [rsp+0x98]
   1400171ee:	cmp    al,0x1
   1400171f0:	jne    0x14001720d
   1400171f2:	movzx  eax,BYTE PTR [rsp+0x110]
   1400171fa:	mov    ebx,0x3
   1400171ff:	shl    eax,0x10
   140017202:	lea    r11d,[rbx-0x1]
   140017206:	or     edx,eax
   140017208:	jmp    0x1400178ba
   14001720d:	cmp    al,0x2
   14001720f:	jne    0x14001722d
   140017211:	movzx  ecx,BYTE PTR [rsp+0x110]
   140017219:	movzx  eax,BYTE PTR [rsp+0x70]
   14001721e:	mov    ebx,0x4
   140017223:	shl    ecx,0x8
   140017226:	or     ecx,eax
   140017228:	shl    ecx,0x10
   14001722b:	or     edx,ecx
   14001722d:	mov    r11d,0x2
   140017233:	jmp    0x1400178ba
   140017238:	mov    rcx,QWORD PTR [rsp+0x88]
   140017240:	mov    eax,r8d
   140017243:	and    eax,0x3f
   140017246:	add    eax,edx
   140017248:	movzx  edx,WORD PTR [rcx+rax*2]
   14001724c:	cmp    edx,0xff
   140017252:	jbe    0x140017806
   140017258:	mov    ebx,0x2
   14001725d:	jmp    0x1400178ba
   140017262:	mov    eax,r8d
   140017265:	and    eax,0x3f
   140017268:	add    eax,edx
   14001726a:	lea    ecx,[rax+rax*2]
   14001726d:	add    rcx,QWORD PTR [rsp+0x88]
   140017275:	movzx  eax,BYTE PTR [rcx+0x1]
   140017279:	movzx  edx,BYTE PTR [rcx]
   14001727c:	shl    edx,0x8
   14001727f:	or     edx,eax
   140017281:	movzx  eax,BYTE PTR [rcx+0x2]
   140017285:	shl    edx,0x8
   140017288:	or     edx,eax
   14001728a:	cmp    edx,0xff
   140017290:	ja     0x1400172a4
   140017292:	test   edx,edx
   140017294:	je     0x140017806
   14001729a:	mov    ebx,0x1
   14001729f:	jmp    0x1400178ba
   1400172a4:	xor    ebx,ebx
   1400172a6:	cmp    edx,0xffff
   1400172ac:	seta   bl
   1400172af:	add    ebx,0x2
   1400172b2:	jmp    0x1400178ba
   1400172b7:	mov    rcx,QWORD PTR [rsp+0x88]
   1400172bf:	mov    eax,r8d
   1400172c2:	and    eax,0x3f
   1400172c5:	add    eax,edx
   1400172c7:	mov    edx,DWORD PTR [rcx+rax*4]
   1400172ca:	cmp    edx,0xff
   1400172d0:	ja     0x1400172e4
   1400172d2:	test   edx,edx
   1400172d4:	je     0x140017806
   1400172da:	mov    ebx,0x1
   1400172df:	jmp    0x1400178ba
   1400172e4:	cmp    edx,0xffff
   1400172ea:	ja     0x1400172f6
   1400172ec:	mov    ebx,0x2
   1400172f1:	jmp    0x1400178ba
   1400172f6:	xor    ebx,ebx
   1400172f8:	cmp    edx,0xffffff
   1400172fe:	seta   bl
   140017301:	add    ebx,0x3
   140017304:	jmp    0x1400178ba
   140017309:	mov    rcx,QWORD PTR [rsp+0x88]
   140017311:	mov    eax,r8d
   140017314:	and    eax,0x3f
   140017317:	add    eax,edx
   140017319:	movzx  edx,WORD PTR [rcx+rax*2]
   14001731d:	cmp    edx,0xff
   140017323:	ja     0x140017337
   140017325:	test   edx,edx
   140017327:	je     0x140017806
   14001732d:	mov    ebx,0x1
   140017332:	jmp    0x1400178ba
   140017337:	bt     edx,0xf
   14001733b:	jb     0x14001734d
   14001733d:	or     edx,0x8e8000
   140017343:	mov    ebx,0x3
   140017348:	jmp    0x1400178ba
   14001734d:	test   dl,dl
   14001734f:	js     0x140017361
   140017351:	or     edx,0x8f0080
   140017357:	mov    ebx,0x3
   14001735c:	jmp    0x1400178ba
   140017361:	mov    ebx,0x2
   140017366:	jmp    0x1400178ba
   14001736b:	mov    eax,r8d
   14001736e:	and    eax,0x3f
   140017371:	add    eax,edx
   140017373:	lea    ecx,[rax+rax*2]
   140017376:	add    rcx,QWORD PTR [rsp+0x88]
   14001737e:	movzx  eax,BYTE PTR [rcx+0x1]
   140017382:	movzx  edx,BYTE PTR [rcx]
   140017385:	shl    edx,0x8
   140017388:	or     edx,eax
   14001738a:	movzx  eax,BYTE PTR [rcx+0x2]
   14001738e:	shl    edx,0x8
   140017391:	or     edx,eax
   140017393:	cmp    edx,0xff
   140017399:	ja     0x1400173ad
   14001739b:	test   edx,edx
   14001739d:	je     0x140017806
   1400173a3:	mov    ebx,0x1
   1400173a8:	jmp    0x1400178ba
   1400173ad:	cmp    edx,0xffff
   1400173b3:	ja     0x1400173bf
   1400173b5:	mov    ebx,0x2
   1400173ba:	jmp    0x1400178ba
   1400173bf:	bt     edx,0x17
   1400173c3:	jb     0x1400173d5
   1400173c5:	or     edx,0x8e800000
   1400173cb:	mov    ebx,0x4
   1400173d0:	jmp    0x1400178ba
   1400173d5:	bt     edx,0xf
   1400173d9:	jb     0x1400173eb
   1400173db:	or     edx,0x8f008000
   1400173e1:	mov    ebx,0x4
   1400173e6:	jmp    0x1400178ba
   1400173eb:	mov    ebx,0x3
   1400173f0:	jmp    0x1400178ba
   1400173f5:	xor    edx,edx
   1400173f7:	xor    ebx,ebx
   1400173f9:	jmp    0x1400178ba
   1400173fe:	mov    eax,r8d
   140017401:	and    eax,0xfffff800
   140017406:	cmp    eax,0xd800
   14001740b:	jne    0x140017487
   14001740d:	test   BYTE PTR [rsp+0x80],0x2
   140017415:	jne    0x140017487
   140017417:	bt     r8d,0xa
   14001741c:	jb     0x1400179ce
   140017422:	movzx  edx,BYTE PTR [rsp+0x100]
   14001742a:	jmp    0x140017434
   14001742c:	mov    rcx,QWORD PTR [rsp+0xa0]
   140017434:	mov    rax,QWORD PTR [rsp+0x90]
   14001743c:	cmp    rax,rcx
   14001743f:	jae    0x140017ab5
   140017445:	movzx  ecx,WORD PTR [rax]
   140017448:	mov    eax,ecx
   14001744a:	and    eax,0xfffffc00
   14001744f:	cmp    eax,0xdc00
   140017454:	jne    0x1400179ce
   14001745a:	add    QWORD PTR [rsp+0x90],0x2
   140017463:	add    r8d,0xffff2809
   14001746a:	inc    r13d
   14001746d:	shl    r8d,0xa
   140017471:	add    r8d,ecx
   140017474:	test   BYTE PTR [rsp+0x80],0x1
   14001747c:	jne    0x140017487
   14001747e:	mov    DWORD PTR [rdi+0x50],r11d
   140017482:	jmp    0x140017806
   140017487:	mov    r9,QWORD PTR [rsp+0xb8]
   14001748f:	movsxd rdx,r8d
   140017492:	mov    rax,rdx
   140017495:	sar    rdx,0x4
   140017499:	sar    rax,0xa
   14001749d:	and    edx,0x3f
   1400174a0:	movzx  ecx,WORD PTR [r9+rax*2]
   1400174a5:	movzx  eax,BYTE PTR [rsp+0x60]
   1400174aa:	add    rcx,rdx
   1400174ad:	dec    eax
   1400174af:	mov    r9d,DWORD PTR [r9+rcx*4]
   1400174b3:	cmp    eax,0xda
   1400174b8:	ja     0x1400177bf
   1400174be:	lea    rdx,[rip+0xfffffffffffe8b3b]        # 0x140000000
   1400174c5:	cdqe   
   1400174c7:	movzx  eax,BYTE PTR [rdx+rax*1+0x17ce4]
   1400174cf:	mov    ecx,DWORD PTR [rdx+rax*4+0x17cc4]
   1400174d6:	add    rcx,rdx
   1400174d9:	jmp    rcx
   1400174db:	xor    ebx,ebx
   1400174dd:	movzx  ecx,r9w
   1400174e1:	mov    eax,r8d
   1400174e4:	shl    ecx,0x4
   1400174e7:	and    eax,0xf
   1400174ea:	add    eax,ecx
   1400174ec:	mov    rcx,QWORD PTR [rsp+0x88]
   1400174f4:	movzx  edx,WORD PTR [rcx+rax*2]
   1400174f8:	cmp    edx,0xff
   1400174fe:	seta   bl
   140017501:	inc    ebx
   140017503:	jmp    0x1400177c6
   140017508:	mov    rdx,QWORD PTR [rsp+0x88]
   140017510:	movzx  eax,r9w
   140017514:	mov    ecx,r8d
   140017517:	shl    eax,0x4
   14001751a:	and    ecx,0xf
   14001751d:	mov    DWORD PTR [rdi+0x50],r11d
   140017521:	add    eax,ecx
   140017523:	movzx  edx,WORD PTR [rdx+rax*2]
   140017527:	cmp    edx,0xff
   14001752d:	ja     0x1400175a7
   14001752f:	test   edx,edx
   140017531:	jne    0x140017546
   140017533:	add    ecx,0x10
   140017536:	movzx  eax,cl
   140017539:	bt     r9d,eax
   14001753d:	jb     0x140017546
   14001753f:	xor    ebx,ebx
   140017541:	jmp    0x1400177c6
   140017546:	cmp    r11d,0x1
   14001754a:	jg     0x140017556
   14001754c:	mov    ebx,0x1
   140017551:	jmp    0x1400177c6
   140017556:	cmp    r14b,0x1
   14001755a:	jne    0x140017577
   14001755c:	movzx  eax,BYTE PTR [rsp+0x100]
   140017564:	mov    ebx,0x2
   140017569:	shl    eax,0x8
   14001756c:	lea    r11d,[rbx-0x1]
   140017570:	or     edx,eax
   140017572:	jmp    0x1400177c6
   140017577:	cmp    r14b,0x2
   14001757b:	jne    0x14001759c
   14001757d:	movzx  ecx,BYTE PTR [rsp+0x100]
   140017585:	movzx  eax,BYTE PTR [rsp+0x118]
   14001758d:	mov    ebx,0x3
   140017592:	shl    ecx,0x8
   140017595:	or     ecx,eax
   140017597:	shl    ecx,0x8
   14001759a:	or     edx,ecx
   14001759c:	mov    r11d,0x1
   1400175a2:	jmp    0x1400177c6
   1400175a7:	cmp    r11d,0x2
   1400175ab:	jne    0x1400175b5
   1400175ad:	mov    ebx,r11d
   1400175b0:	jmp    0x1400177c6
   1400175b5:	mov    eax,DWORD PTR [rsp+0x98]
   1400175bc:	cmp    al,0x1
   1400175be:	jne    0x1400175db
   1400175c0:	movzx  eax,BYTE PTR [rsp+0x110]
   1400175c8:	mov    ebx,0x3
   1400175cd:	shl    eax,0x10
   1400175d0:	lea    r11d,[rbx-0x1]
   1400175d4:	or     edx,eax
   1400175d6:	jmp    0x1400177c6
   1400175db:	cmp    al,0x2
   1400175dd:	jne    0x1400175fb
   1400175df:	movzx  ecx,BYTE PTR [rsp+0x110]
   1400175e7:	movzx  eax,BYTE PTR [rsp+0x70]
   1400175ec:	mov    ebx,0x4
   1400175f1:	shl    ecx,0x8
   1400175f4:	or     ecx,eax
   1400175f6:	shl    ecx,0x10
   1400175f9:	or     edx,ecx
   1400175fb:	mov    r11d,0x2
   140017601:	jmp    0x1400177c6
   140017606:	movzx  ecx,r9w
   14001760a:	mov    eax,r8d
   14001760d:	shl    ecx,0x4
   140017610:	and    eax,0xf
   140017613:	add    eax,ecx
   140017615:	mov    rcx,QWORD PTR [rsp+0x88]
   14001761d:	movzx  edx,WORD PTR [rcx+rax*2]
   140017621:	cmp    edx,0xff
   140017627:	ja     0x140017635
   140017629:	xor    r9d,r9d
   14001762c:	xor    edx,edx
   14001762e:	xor    ebx,ebx
   140017630:	jmp    0x1400177c6
   140017635:	mov    ebx,0x2
   14001763a:	jmp    0x1400177c6
   14001763f:	movzx  ecx,r9w
   140017643:	mov    eax,r8d
   140017646:	shl    ecx,0x4
   140017649:	and    eax,0xf
   14001764c:	add    ecx,eax
   14001764e:	lea    ecx,[rcx+rcx*2]
   140017651:	add    rcx,QWORD PTR [rsp+0x88]
   140017659:	movzx  eax,BYTE PTR [rcx+0x1]
   14001765d:	movzx  edx,BYTE PTR [rcx]
   140017660:	shl    edx,0x8
   140017663:	or     edx,eax
   140017665:	movzx  eax,BYTE PTR [rcx+0x2]
   140017669:	shl    edx,0x8
   14001766c:	or     edx,eax
   14001766e:	cmp    edx,0xff
   140017674:	ja     0x140017680
   140017676:	mov    ebx,0x1
   14001767b:	jmp    0x1400177c6
   140017680:	xor    ebx,ebx
   140017682:	cmp    edx,0xffff
   140017688:	seta   bl
   14001768b:	add    ebx,0x2
   14001768e:	jmp    0x1400177c6
   140017693:	movzx  ecx,r9w
   140017697:	mov    eax,r8d
   14001769a:	shl    ecx,0x4
   14001769d:	and    eax,0xf
   1400176a0:	add    eax,ecx
   1400176a2:	mov    rcx,QWORD PTR [rsp+0x88]
   1400176aa:	mov    edx,DWORD PTR [rcx+rax*4]
   1400176ad:	cmp    edx,0xff
   1400176b3:	ja     0x1400176bf
   1400176b5:	mov    ebx,0x1
   1400176ba:	jmp    0x1400177c6
   1400176bf:	cmp    edx,0xffff
   1400176c5:	ja     0x1400176d1
   1400176c7:	mov    ebx,0x2
   1400176cc:	jmp    0x1400177c6
   1400176d1:	xor    ebx,ebx
   1400176d3:	cmp    edx,0xffffff
   1400176d9:	seta   bl
   1400176dc:	add    ebx,0x3
   1400176df:	jmp    0x1400177c6
   1400176e4:	movzx  ecx,r9w
   1400176e8:	mov    eax,r8d
   1400176eb:	shl    ecx,0x4
   1400176ee:	and    eax,0xf
   1400176f1:	add    eax,ecx
   1400176f3:	mov    rcx,QWORD PTR [rsp+0x88]
   1400176fb:	movzx  edx,WORD PTR [rcx+rax*2]
   1400176ff:	cmp    edx,0xff
   140017705:	ja     0x140017711
   140017707:	mov    ebx,0x1
   14001770c:	jmp    0x1400177c6
   140017711:	bt     edx,0xf
   140017715:	jb     0x140017727
   140017717:	or     edx,0x8e8000
   14001771d:	mov    ebx,0x3
   140017722:	jmp    0x1400177c6
   140017727:	test   dl,dl
   140017729:	js     0x14001773b
   14001772b:	or     edx,0x8f0080
   140017731:	mov    ebx,0x3
   140017736:	jmp    0x1400177c6
   14001773b:	mov    ebx,0x2
   140017740:	jmp    0x1400177c6
   140017745:	movzx  ecx,r9w
   140017749:	mov    eax,r8d
   14001774c:	shl    ecx,0x4
   14001774f:	and    eax,0xf
   140017752:	add    ecx,eax
   140017754:	lea    ecx,[rcx+rcx*2]
   140017757:	add    rcx,QWORD PTR [rsp+0x88]
   14001775f:	movzx  eax,BYTE PTR [rcx+0x1]
   140017763:	movzx  edx,BYTE PTR [rcx]
   140017766:	shl    edx,0x8
   140017769:	or     edx,eax
   14001776b:	movzx  eax,BYTE PTR [rcx+0x2]
   14001776f:	shl    edx,0x8
   140017772:	or     edx,eax
   140017774:	cmp    edx,0xff
   14001777a:	ja     0x140017783
   14001777c:	mov    ebx,0x1
   140017781:	jmp    0x1400177c6
   140017783:	cmp    edx,0xffff
   140017789:	ja     0x140017792
   14001778b:	mov    ebx,0x2
   140017790:	jmp    0x1400177c6
   140017792:	bt     edx,0x17
   140017796:	jb     0x1400177a5
   140017798:	or     edx,0x8e800000
   14001779e:	mov    ebx,0x4
   1400177a3:	jmp    0x1400177c6
   1400177a5:	bt     edx,0xf
   1400177a9:	jb     0x1400177b8
   1400177ab:	or     edx,0x8f008000
   1400177b1:	mov    ebx,0x4
   1400177b6:	jmp    0x1400177c6
   1400177b8:	mov    ebx,0x3
   1400177bd:	jmp    0x1400177c6
   1400177bf:	xor    r9d,r9d
   1400177c2:	xor    edx,edx
   1400177c4:	xor    ebx,ebx
   1400177c6:	mov    eax,r8d
   1400177c9:	and    eax,0xf
   1400177cc:	add    eax,0x10
   1400177cf:	movzx  eax,al
   1400177d2:	bt     r9d,eax
   1400177d6:	jb     0x1400178b5
   1400177dc:	cmp    BYTE PTR [rdi+0x3f],0x0
   1400177e0:	jne    0x1400177fe
   1400177e2:	lea    eax,[r8-0xe000]
   1400177e9:	cmp    eax,0x1900
   1400177ee:	jb     0x1400177fe
   1400177f0:	lea    eax,[r8-0xf0000]
   1400177f7:	cmp    eax,0x20000
   1400177fc:	jae    0x140017806
   1400177fe:	test   edx,edx
   140017800:	jne    0x1400178ae
   140017806:	mov    rax,QWORD PTR [rsp+0x90]
   14001780e:	mov    QWORD PTR [rsp+0x50],r12
   140017813:	movsxd rcx,r10d
   140017816:	add    rcx,QWORD PTR [rsp+0x68]
   14001781b:	mov    QWORD PTR [rbp+0x10],rax
   14001781f:	movzx  eax,BYTE PTR [rbp+0x2]
   140017823:	mov    rdx,QWORD PTR [rdi+0x30]
   140017827:	mov    BYTE PTR [rsp+0x48],al
   14001782b:	mov    DWORD PTR [rsp+0x40],esi
   14001782f:	lea    rax,[rsp+0x78]
   140017834:	lea    r9,[rsp+0x90]
   14001783c:	mov    QWORD PTR [rsp+0x38],rax
   140017841:	mov    QWORD PTR [rsp+0x30],rcx
   140017846:	lea    rax,[rsp+0x68]
   14001784b:	mov    QWORD PTR [rsp+0x28],rax
   140017850:	mov    rax,QWORD PTR [rsp+0xa0]
   140017858:	mov    rcx,rdi
   14001785b:	mov    QWORD PTR [rsp+0x20],rax
   140017860:	call   0x1400136d0
   140017865:	mov    r11d,DWORD PTR [rdi+0x50]
   140017869:	mov    r8d,eax
   14001786c:	mov    rax,QWORD PTR [rsp+0x90]
   140017874:	sub    rax,QWORD PTR [rbp+0x10]
   140017878:	sar    rax,1
   14001787b:	add    r13d,eax
   14001787e:	cmp    DWORD PTR [r12],0x0
   140017883:	jg     0x140017b79
   140017889:	mov    r10d,DWORD PTR [rbp+0x28]
   14001788d:	mov    r9b,BYTE PTR [rsp+0x60]
   140017892:	sub    r10d,DWORD PTR [rsp+0x68]
   140017897:	cmp    QWORD PTR [rsp+0x78],0x0
   14001789d:	je     0x140017038
   1400178a3:	mov    r15d,esi
   1400178a6:	mov    esi,r13d
   1400178a9:	jmp    0x140017038
   1400178ae:	mov    r9b,BYTE PTR [rsp+0x60]
   1400178b3:	jmp    0x1400178ba
   1400178b5:	mov    r9b,BYTE PTR [rsp+0x60]
   1400178ba:	cmp    ebx,r10d
   1400178bd:	jg     0x1400179db
   1400178c3:	cmp    QWORD PTR [rsp+0x78],0x0
   1400178c9:	jne    0x140017929
   1400178cb:	mov    ecx,ebx
   1400178cd:	sub    ecx,0x1
   1400178d0:	je     0x140017918
   1400178d2:	sub    ecx,0x1
   1400178d5:	je     0x140017907
   1400178d7:	sub    ecx,0x1
   1400178da:	je     0x1400178f6
   1400178dc:	cmp    ecx,0x1
   1400178df:	jne    0x1400179b2
   1400178e5:	mov    rax,QWORD PTR [rsp+0x68]
   1400178ea:	mov    ecx,edx
   1400178ec:	shr    ecx,0x18
   1400178ef:	mov    BYTE PTR [rax],cl
   1400178f1:	inc    QWORD PTR [rsp+0x68]
   1400178f6:	mov    rax,QWORD PTR [rsp+0x68]
   1400178fb:	mov    ecx,edx
   1400178fd:	shr    ecx,0x10
   140017900:	mov    BYTE PTR [rax],cl
   140017902:	inc    QWORD PTR [rsp+0x68]
   140017907:	mov    rax,QWORD PTR [rsp+0x68]
   14001790c:	mov    ecx,edx
   14001790e:	shr    ecx,0x8
   140017911:	mov    BYTE PTR [rax],cl
   140017913:	inc    QWORD PTR [rsp+0x68]
   140017918:	mov    rax,QWORD PTR [rsp+0x68]
   14001791d:	mov    BYTE PTR [rax],dl
   14001791f:	inc    QWORD PTR [rsp+0x68]
   140017924:	jmp    0x1400179b2
   140017929:	mov    ecx,ebx
   14001792b:	sub    ecx,0x1
   14001792e:	je     0x140017999
   140017930:	sub    ecx,0x1
   140017933:	je     0x14001797b
   140017935:	sub    ecx,0x1
   140017938:	je     0x14001795d
   14001793a:	cmp    ecx,0x1
   14001793d:	jne    0x1400179b2
   14001793f:	mov    rax,QWORD PTR [rsp+0x68]
   140017944:	mov    ecx,edx
   140017946:	shr    ecx,0x18
   140017949:	mov    BYTE PTR [rax],cl
   14001794b:	mov    rax,QWORD PTR [rsp+0x78]
   140017950:	inc    QWORD PTR [rsp+0x68]
   140017955:	mov    DWORD PTR [rax],esi
   140017957:	add    QWORD PTR [rsp+0x78],0x4
   14001795d:	mov    rax,QWORD PTR [rsp+0x68]
   140017962:	mov    ecx,edx
   140017964:	shr    ecx,0x10
   140017967:	mov    BYTE PTR [rax],cl
   140017969:	mov    rax,QWORD PTR [rsp+0x78]
   14001796e:	inc    QWORD PTR [rsp+0x68]
   140017973:	mov    DWORD PTR [rax],esi
   140017975:	add    QWORD PTR [rsp+0x78],0x4
   14001797b:	mov    rax,QWORD PTR [rsp+0x68]
   140017980:	mov    ecx,edx
   140017982:	shr    ecx,0x8
   140017985:	mov    BYTE PTR [rax],cl
   140017987:	mov    rax,QWORD PTR [rsp+0x78]
   14001798c:	inc    QWORD PTR [rsp+0x68]
   140017991:	mov    DWORD PTR [rax],esi
   140017993:	add    QWORD PTR [rsp+0x78],0x4
   140017999:	mov    rax,QWORD PTR [rsp+0x68]
   14001799e:	mov    BYTE PTR [rax],dl
   1400179a0:	mov    rax,QWORD PTR [rsp+0x78]
   1400179a5:	inc    QWORD PTR [rsp+0x68]
   1400179aa:	mov    DWORD PTR [rax],esi
   1400179ac:	add    QWORD PTR [rsp+0x78],0x4
   1400179b2:	xor    r8d,r8d
   1400179b5:	sub    r10d,ebx
   1400179b8:	cmp    QWORD PTR [rsp+0x78],r8
   1400179bd:	je     0x140017038
   1400179c3:	mov    r15d,esi
   1400179c6:	mov    esi,r13d
   1400179c9:	jmp    0x140017038
   1400179ce:	mov    DWORD PTR [r12],0xc
   1400179d6:	jmp    0x140017b79
   1400179db:	sub    ebx,r10d
   1400179de:	lea    rcx,[rdi+0x68]
   1400179e2:	mov    r8d,ebx
   1400179e5:	sub    r8d,0x1
   1400179e9:	je     0x140017a0d
   1400179eb:	sub    r8d,0x1
   1400179ef:	je     0x140017a02
   1400179f1:	cmp    r8d,0x1
   1400179f5:	jne    0x140017a0f
   1400179f7:	mov    eax,edx
   1400179f9:	shr    eax,0x10
   1400179fc:	inc    rcx
   1400179ff:	mov    BYTE PTR [rcx-0x1],al
   140017a02:	mov    eax,edx
   140017a04:	shr    eax,0x8
   140017a07:	inc    rcx
   140017a0a:	mov    BYTE PTR [rcx-0x1],al
   140017a0d:	mov    BYTE PTR [rcx],dl
   140017a0f:	lea    ecx,[rbx*8+0x0]
   140017a16:	mov    BYTE PTR [rdi+0x5b],bl
   140017a19:	shr    edx,cl
   140017a1b:	sub    r10d,0x1
   140017a1f:	je     0x140017a73
   140017a21:	sub    r10d,0x1
   140017a25:	je     0x140017a50
   140017a27:	cmp    r10d,0x1
   140017a2b:	jne    0x140017a91
   140017a2d:	mov    rax,QWORD PTR [rsp+0x68]
   140017a32:	mov    ecx,edx
   140017a34:	shr    ecx,0x10
   140017a37:	mov    BYTE PTR [rax],cl
   140017a39:	mov    rax,QWORD PTR [rsp+0x78]
   140017a3e:	inc    QWORD PTR [rsp+0x68]
   140017a43:	test   rax,rax
   140017a46:	je     0x140017a50
   140017a48:	mov    DWORD PTR [rax],esi
   140017a4a:	add    QWORD PTR [rsp+0x78],0x4
   140017a50:	mov    rax,QWORD PTR [rsp+0x68]
   140017a55:	mov    ecx,edx
   140017a57:	shr    ecx,0x8
   140017a5a:	mov    BYTE PTR [rax],cl
   140017a5c:	mov    rax,QWORD PTR [rsp+0x78]
   140017a61:	inc    QWORD PTR [rsp+0x68]
   140017a66:	test   rax,rax
   140017a69:	je     0x140017a73
   140017a6b:	mov    DWORD PTR [rax],esi
   140017a6d:	add    QWORD PTR [rsp+0x78],0x4
   140017a73:	mov    rax,QWORD PTR [rsp+0x68]
   140017a78:	mov    BYTE PTR [rax],dl
   140017a7a:	mov    rax,QWORD PTR [rsp+0x78]
   140017a7f:	inc    QWORD PTR [rsp+0x68]
   140017a84:	test   rax,rax
   140017a87:	je     0x140017a91
   140017a89:	mov    DWORD PTR [rax],esi
   140017a8b:	add    QWORD PTR [rsp+0x78],0x4
   140017a91:	mov    DWORD PTR [r12],0xf
   140017a99:	xor    r8d,r8d
   140017a9c:	jmp    0x140017b79
   140017aa1:	mov    DWORD PTR [r12],0xf
   140017aa9:	jmp    0x140017b79
   140017aae:	mov    dl,BYTE PTR [rsp+0x100]
   140017ab5:	cmp    DWORD PTR [r12],0x0
   140017aba:	jg     0x140017b79
   140017ac0:	cmp    r9b,0xc
   140017ac4:	jne    0x140017b79
   140017aca:	cmp    r11d,0x2
   140017ace:	jne    0x140017b79
   140017ad4:	cmp    BYTE PTR [rbp+0x2],0x0
   140017ad8:	je     0x140017b79
   140017ade:	cmp    QWORD PTR [rsp+0x90],rcx
   140017ae6:	jb     0x140017b79
   140017aec:	test   r8d,r8d
   140017aef:	jne    0x140017b79
   140017af5:	test   r10d,r10d
   140017af8:	jle    0x140017b54
   140017afa:	mov    rax,QWORD PTR [rsp+0x68]
   140017aff:	mov    BYTE PTR [rax],dl
   140017b01:	mov    rax,QWORD PTR [rsp+0x68]
   140017b06:	inc    rax
   140017b09:	mov    QWORD PTR [rsp+0x68],rax
   140017b0e:	cmp    r14b,r11b
   140017b11:	jne    0x140017b3f
   140017b13:	cmp    r10d,r11d
   140017b16:	jge    0x140017b31
   140017b18:	movzx  eax,BYTE PTR [rsp+0x118]
   140017b20:	mov    BYTE PTR [rdi+0x5b],0x1
   140017b24:	mov    BYTE PTR [rdi+0x68],al
   140017b27:	mov    DWORD PTR [r12],0xf
   140017b2f:	jmp    0x140017b3f
   140017b31:	mov    cl,BYTE PTR [rsp+0x118]
   140017b38:	mov    BYTE PTR [rax],cl
   140017b3a:	inc    QWORD PTR [rsp+0x68]
   140017b3f:	mov    rax,QWORD PTR [rsp+0x78]
   140017b44:	test   rax,rax
   140017b47:	je     0x140017b73
   140017b49:	mov    DWORD PTR [rax],r15d
   140017b4c:	add    QWORD PTR [rsp+0x78],0x4
   140017b52:	jmp    0x140017b73
   140017b54:	mov    BYTE PTR [rdi+0x68],dl
   140017b57:	cmp    r14b,0x2
   140017b5b:	jne    0x140017b67
   140017b5d:	mov    al,BYTE PTR [rsp+0x118]
   140017b64:	mov    BYTE PTR [rdi+0x69],al
   140017b67:	mov    BYTE PTR [rdi+0x5b],r14b
   140017b6b:	mov    DWORD PTR [r12],0xf
   140017b73:	mov    r11d,0x1
   140017b79:	mov    r14,QWORD PTR [rsp+0xc0]
   140017b81:	mov    r13,QWORD PTR [rsp+0xc8]
   140017b89:	mov    rsi,QWORD PTR [rsp+0x108]
   140017b91:	mov    DWORD PTR [rdi+0x54],r8d
   140017b95:	mov    DWORD PTR [rdi+0x50],r11d
   140017b99:	mov    rax,QWORD PTR [rsp+0x90]
   140017ba1:	mov    QWORD PTR [rbp+0x10],rax
   140017ba5:	mov    rax,QWORD PTR [rsp+0x68]
   140017baa:	mov    QWORD PTR [rbp+0x20],rax
   140017bae:	mov    rax,QWORD PTR [rsp+0x78]
   140017bb3:	mov    QWORD PTR [rbp+0x30],rax
   140017bb7:	add    rsp,0xd0
   140017bbe:	pop    r15
   140017bc0:	pop    r12
   140017bc2:	pop    rdi
   140017bc3:	pop    rbp
   140017bc4:	pop    rbx
   140017bc5:	ret    
   140017bc6:	xchg   ax,ax
   140017bc8:	sbb    BYTE PTR [rcx+0x1],dh
   140017bcb:	add    BYTE PTR [rdx+0x72],ah
   140017bce:	add    DWORD PTR [rax],eax
   140017bd0:	mov    bh,0x72
   140017bd2:	add    DWORD PTR [rax],eax
   140017bd4:	or     DWORD PTR [rbx+0x1],esi
   140017bd7:	add    BYTE PTR [rbx+0x73],ch
   140017bda:	add    DWORD PTR [rax],eax
   140017bdc:	push   rax
   140017bdd:	jno    0x140017be0
   140017bdf:	add    BYTE PTR [rax],bh
   140017be1:	jb     0x140017be4
   140017be3:	add    ch,dh
   140017be5:	jae    0x140017be8
   140017be7:	add    BYTE PTR [rax],al
   140017be9:	add    DWORD PTR [rdx],eax
   140017beb:	(bad)  
   140017bec:	(bad)  
   140017bed:	(bad)  
   140017bee:	(bad)  
   140017bef:	add    eax,DWORD PTR [rdi+rax*1]
   140017bf2:	(bad)  
   140017bf3:	add    eax,0x7070707
   140017bf8:	(bad)  
   140017bf9:	(bad)  
   140017bfa:	(bad)  
   140017bfb:	(bad)  
   140017bfc:	(bad)  
   140017bfd:	(bad)  
   140017bfe:	(bad)  
   140017bff:	(bad)  
   140017c00:	(bad)  
   140017c01:	(bad)  
   140017c02:	(bad)  
   140017c03:	(bad)  
   140017c04:	(bad)  
   140017c05:	(bad)  
   140017c06:	(bad)  
   140017c07:	(bad)  
   140017c08:	(bad)  
   140017c09:	(bad)  
   140017c0a:	(bad)  
   140017c0b:	(bad)  
   140017c0c:	(bad)  
   140017c0d:	(bad)  
   140017c0e:	(bad)  
   140017c0f:	(bad)  
   140017c10:	(bad)  
   140017c11:	(bad)  
   140017c12:	(bad)  
   140017c13:	(bad)  
   140017c14:	(bad)  
   140017c15:	(bad)  
   140017c16:	(bad)  
   140017c17:	(bad)  
   140017c18:	(bad)  
   140017c19:	(bad)  
   140017c1a:	(bad)  
   140017c1b:	(bad)  
   140017c1c:	(bad)  
   140017c1d:	(bad)  
   140017c1e:	(bad)  
   140017c1f:	(bad)  
   140017c20:	(bad)  
   140017c21:	(bad)  
   140017c22:	(bad)  
   140017c23:	(bad)  
   140017c24:	(bad)  
   140017c25:	(bad)  
   140017c26:	(bad)  
   140017c27:	(bad)  
   140017c28:	(bad)  
   140017c29:	(bad)  
   140017c2a:	(bad)  
   140017c2b:	(bad)  
   140017c2c:	(bad)  
   140017c2d:	(bad)  
   140017c2e:	(bad)  
   140017c2f:	(bad)  
   140017c30:	(bad)  
   140017c31:	(bad)  
   140017c32:	(bad)  
   140017c33:	(bad)  
   140017c34:	(bad)  
   140017c35:	(bad)  
   140017c36:	(bad)  
   140017c37:	(bad)  
   140017c38:	(bad)  
   140017c39:	(bad)  
   140017c3a:	(bad)  
   140017c3b:	(bad)  
   140017c3c:	(bad)  
   140017c3d:	(bad)  
   140017c3e:	(bad)  
   140017c3f:	(bad)  
   140017c40:	(bad)  
   140017c41:	(bad)  
   140017c42:	(bad)  
   140017c43:	(bad)  
   140017c44:	(bad)  
   140017c45:	(bad)  
   140017c46:	(bad)  
   140017c47:	(bad)  
   140017c48:	(bad)  
   140017c49:	(bad)  
   140017c4a:	(bad)  
   140017c4b:	(bad)  
   140017c4c:	(bad)  
   140017c4d:	(bad)  
   140017c4e:	(bad)  
   140017c4f:	(bad)  
   140017c50:	(bad)  
   140017c51:	(bad)  
   140017c52:	(bad)  
   140017c53:	(bad)  
   140017c54:	(bad)  
   140017c55:	(bad)  
   140017c56:	(bad)  
   140017c57:	(bad)  
   140017c58:	(bad)  
   140017c59:	(bad)  
   140017c5a:	(bad)  
   140017c5b:	(bad)  
   140017c5c:	(bad)  
   140017c5d:	(bad)  
   140017c5e:	(bad)  
   140017c5f:	(bad)  
   140017c60:	(bad)  
   140017c61:	(bad)  
   140017c62:	(bad)  
   140017c63:	(bad)  
   140017c64:	(bad)  
   140017c65:	(bad)  
   140017c66:	(bad)  
   140017c67:	(bad)  
   140017c68:	(bad)  
   140017c69:	(bad)  
   140017c6a:	(bad)  
   140017c6b:	(bad)  
   140017c6c:	(bad)  
   140017c6d:	(bad)  
   140017c6e:	(bad)  
   140017c6f:	(bad)  
   140017c70:	(bad)  
   140017c71:	(bad)  
   140017c72:	(bad)  
   140017c73:	(bad)  
   140017c74:	(bad)  
   140017c75:	(bad)  
   140017c76:	(bad)  
   140017c77:	(bad)  
   140017c78:	(bad)  
   140017c79:	(bad)  
   140017c7a:	(bad)  
   140017c7b:	(bad)  
   140017c7c:	(bad)  
   140017c7d:	(bad)  
   140017c7e:	(bad)  
   140017c7f:	(bad)  
   140017c80:	(bad)  
   140017c81:	(bad)  
   140017c82:	(bad)  
   140017c83:	(bad)  
   140017c84:	(bad)  
   140017c85:	(bad)  
   140017c86:	(bad)  
   140017c87:	(bad)  
   140017c88:	(bad)  
   140017c89:	(bad)  
   140017c8a:	(bad)  
   140017c8b:	(bad)  
   140017c8c:	(bad)  
   140017c8d:	(bad)  
   140017c8e:	(bad)  
   140017c8f:	(bad)  
   140017c90:	(bad)  
   140017c91:	(bad)  
   140017c92:	(bad)  
   140017c93:	(bad)  
   140017c94:	(bad)  
   140017c95:	(bad)  
   140017c96:	(bad)  
   140017c97:	(bad)  
   140017c98:	(bad)  
   140017c99:	(bad)  
   140017c9a:	(bad)  
   140017c9b:	(bad)  
   140017c9c:	(bad)  
   140017c9d:	(bad)  
   140017c9e:	(bad)  
   140017c9f:	(bad)  
   140017ca0:	(bad)  
   140017ca1:	(bad)  
   140017ca2:	(bad)  
   140017ca3:	(bad)  
   140017ca4:	(bad)  
   140017ca5:	(bad)  
   140017ca6:	(bad)  
   140017ca7:	(bad)  
   140017ca8:	(bad)  
   140017ca9:	(bad)  
   140017caa:	(bad)  
   140017cab:	(bad)  
   140017cac:	(bad)  
   140017cad:	(bad)  
   140017cae:	(bad)  
   140017caf:	(bad)  
   140017cb0:	(bad)  
   140017cb1:	(bad)  
   140017cb2:	(bad)  
   140017cb3:	(bad)  
   140017cb4:	(bad)  
   140017cb5:	(bad)  
   140017cb6:	(bad)  
   140017cb7:	(bad)  
   140017cb8:	(bad)  
   140017cb9:	(bad)  
   140017cba:	(bad)  
   140017cbb:	(bad)  
   140017cbc:	(bad)  
   140017cbd:	(bad)  
   140017cbe:	(bad)  
   140017cbf:	(bad)  
   140017cc0:	(bad)  
   140017cc1:	(bad)  
   140017cc2:	(bad)  
   140017cc3:	nop
   140017cc4:	(bad)  [rcx+rax*1+0x0]
   140017cc8:	(bad)  
   140017cc9:	jbe    0x140017ccc
   140017ccb:	add    BYTE PTR [rbx-0x1bfffe8a],dl
   140017cd1:	jbe    0x140017cd4
   140017cd3:	add    BYTE PTR [rbp+0x77],al
   140017cd6:	add    DWORD PTR [rax],eax
   140017cd8:	or     BYTE PTR [rbp+0x1],dh
   140017cdb:	add    BYTE PTR [rsi],al
   140017cdd:	jbe    0x140017ce0
   140017cdf:	add    BYTE PTR [rdi+0x177],bh
   140017ce5:	add    DWORD PTR [rdx],eax
   140017ce7:	(bad)  
   140017ce8:	(bad)  
   140017ce9:	(bad)  
   140017cea:	(bad)  
   140017ceb:	add    eax,DWORD PTR [rdi+rax*1]
   140017cee:	(bad)  
   140017cef:	add    eax,0x7070707
   140017cf4:	(bad)  
   140017cf5:	(bad)  
   140017cf6:	(bad)  
   140017cf7:	(bad)  
   140017cf8:	(bad)  
   140017cf9:	(bad)  
   140017cfa:	(bad)  
   140017cfb:	(bad)  
   140017cfc:	(bad)  
   140017cfd:	(bad)  
   140017cfe:	(bad)  
   140017cff:	(bad)  
   140017d00:	(bad)  
   140017d01:	(bad)  
   140017d02:	(bad)  
   140017d03:	(bad)  
   140017d04:	(bad)  
   140017d05:	(bad)  
   140017d06:	(bad)  
   140017d07:	(bad)  
   140017d08:	(bad)  
   140017d09:	(bad)  
   140017d0a:	(bad)  
   140017d0b:	(bad)  
   140017d0c:	(bad)  
   140017d0d:	(bad)  
   140017d0e:	(bad)  
   140017d0f:	(bad)  
   140017d10:	(bad)  
   140017d11:	(bad)  
   140017d12:	(bad)  
   140017d13:	(bad)  
   140017d14:	(bad)  
   140017d15:	(bad)  
   140017d16:	(bad)  
   140017d17:	(bad)  
   140017d18:	(bad)  
   140017d19:	(bad)  
   140017d1a:	(bad)  
   140017d1b:	(bad)  
   140017d1c:	(bad)  
   140017d1d:	(bad)  
   140017d1e:	(bad)  
   140017d1f:	(bad)  
   140017d20:	(bad)  
   140017d21:	(bad)  
   140017d22:	(bad)  
   140017d23:	(bad)  
   140017d24:	(bad)  
   140017d25:	(bad)  
   140017d26:	(bad)  
   140017d27:	(bad)  
   140017d28:	(bad)  
   140017d29:	(bad)  
   140017d2a:	(bad)  
   140017d2b:	(bad)  
   140017d2c:	(bad)  
   140017d2d:	(bad)  
   140017d2e:	(bad)  
   140017d2f:	(bad)  
   140017d30:	(bad)  
   140017d31:	(bad)  
   140017d32:	(bad)  
   140017d33:	(bad)  
   140017d34:	(bad)  
   140017d35:	(bad)  
   140017d36:	(bad)  
   140017d37:	(bad)  
   140017d38:	(bad)  
   140017d39:	(bad)  
   140017d3a:	(bad)  
   140017d3b:	(bad)  
   140017d3c:	(bad)  
   140017d3d:	(bad)  
   140017d3e:	(bad)  
   140017d3f:	(bad)  
   140017d40:	(bad)  
   140017d41:	(bad)  
   140017d42:	(bad)  
   140017d43:	(bad)  
   140017d44:	(bad)  
   140017d45:	(bad)  
   140017d46:	(bad)  
   140017d47:	(bad)  
   140017d48:	(bad)  
   140017d49:	(bad)  
   140017d4a:	(bad)  
   140017d4b:	(bad)  
   140017d4c:	(bad)  
   140017d4d:	(bad)  
   140017d4e:	(bad)  
   140017d4f:	(bad)  
   140017d50:	(bad)  
   140017d51:	(bad)  
   140017d52:	(bad)  
   140017d53:	(bad)  
   140017d54:	(bad)  
   140017d55:	(bad)  
   140017d56:	(bad)  
   140017d57:	(bad)  
   140017d58:	(bad)  
   140017d59:	(bad)  
   140017d5a:	(bad)  
   140017d5b:	(bad)  
   140017d5c:	(bad)  
   140017d5d:	(bad)  
   140017d5e:	(bad)  
   140017d5f:	(bad)  
   140017d60:	(bad)  
   140017d61:	(bad)  
   140017d62:	(bad)  
   140017d63:	(bad)  
   140017d64:	(bad)  
   140017d65:	(bad)  
   140017d66:	(bad)  
   140017d67:	(bad)  
   140017d68:	(bad)  
   140017d69:	(bad)  
   140017d6a:	(bad)  
   140017d6b:	(bad)  
   140017d6c:	(bad)  
   140017d6d:	(bad)  
   140017d6e:	(bad)  
   140017d6f:	(bad)  
   140017d70:	(bad)  
   140017d71:	(bad)  
   140017d72:	(bad)  
   140017d73:	(bad)  
   140017d74:	(bad)  
   140017d75:	(bad)  
   140017d76:	(bad)  
   140017d77:	(bad)  
   140017d78:	(bad)  
   140017d79:	(bad)  
   140017d7a:	(bad)  
   140017d7b:	(bad)  
   140017d7c:	(bad)  
   140017d7d:	(bad)  
   140017d7e:	(bad)  
   140017d7f:	(bad)  
   140017d80:	(bad)  
   140017d81:	(bad)  
   140017d82:	(bad)  
   140017d83:	(bad)  
   140017d84:	(bad)  
   140017d85:	(bad)  
   140017d86:	(bad)  
   140017d87:	(bad)  
   140017d88:	(bad)  
   140017d89:	(bad)  
   140017d8a:	(bad)  
   140017d8b:	(bad)  
   140017d8c:	(bad)  
   140017d8d:	(bad)  
   140017d8e:	(bad)  
   140017d8f:	(bad)  
   140017d90:	(bad)  
   140017d91:	(bad)  
   140017d92:	(bad)  
   140017d93:	(bad)  
   140017d94:	(bad)  
   140017d95:	(bad)  
   140017d96:	(bad)  
   140017d97:	(bad)  
   140017d98:	(bad)  
   140017d99:	(bad)  
   140017d9a:	(bad)  
   140017d9b:	(bad)  
   140017d9c:	(bad)  
   140017d9d:	(bad)  
   140017d9e:	(bad)  
   140017d9f:	(bad)  
   140017da0:	(bad)  
   140017da1:	(bad)  
   140017da2:	(bad)  
   140017da3:	(bad)  
   140017da4:	(bad)  
   140017da5:	(bad)  
   140017da6:	(bad)  
   140017da7:	(bad)  
   140017da8:	(bad)  
   140017da9:	(bad)  
   140017daa:	(bad)  
   140017dab:	(bad)  
   140017dac:	(bad)  
   140017dad:	(bad)  
   140017dae:	(bad)  
   140017daf:	(bad)  
   140017db0:	(bad)  
   140017db1:	(bad)  
   140017db2:	(bad)  
   140017db3:	(bad)  
   140017db4:	(bad)  
   140017db5:	(bad)  
   140017db6:	(bad)  
   140017db7:	(bad)  
   140017db8:	(bad)  
   140017db9:	(bad)  
   140017dba:	(bad)  
   140017dbb:	(bad)  
   140017dbc:	(bad)  
   140017dbd:	(bad)  
   140017dbe:	(bad)  
   140017dbf:	int3   
   140017dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140017dc5:	mov    QWORD PTR [rsp+0x10],rsi
   140017dca:	push   rdi
   140017dcb:	sub    rsp,0x20
   140017dcf:	movsxd r11,edx
   140017dd2:	movzx  edi,r9b
   140017dd6:	mov    rbx,r8
   140017dd9:	cmp    r11d,0xffff
   140017de0:	mov    r10,rcx
   140017de3:	jle    0x140017df2
   140017de5:	test   BYTE PTR [rcx+0x105],0x1
   140017dec:	je     0x140017ef2
   140017df2:	movzx  r9d,BYTE PTR [rcx+0x104]
   140017dfa:	mov    r8,QWORD PTR [rcx+0x60]
   140017dfe:	mov    rax,r11
   140017e01:	sar    rax,0xa
   140017e05:	mov    rdx,r11
   140017e08:	movzx  ecx,WORD PTR [r8+rax*2]
   140017e0d:	test   r9b,r9b
   140017e10:	jne    0x140017e72
   140017e12:	and    edx,0xf
   140017e15:	mov    rax,r11
   140017e18:	sar    rax,0x4
   140017e1c:	and    eax,0x3f
   140017e1f:	add    rcx,rax
   140017e22:	mov    rax,QWORD PTR [r10+0xf0]
   140017e29:	movzx  ecx,WORD PTR [r8+rcx*2]
   140017e2e:	xor    r8d,r8d
   140017e31:	add    rcx,rdx
   140017e34:	movzx  edx,WORD PTR [rax+rcx*2]
   140017e38:	test   dil,dil
   140017e3b:	je     0x140017e45
   140017e3d:	cmp    edx,0x800
   140017e43:	jmp    0x140017e4b
   140017e45:	cmp    edx,0xc00
   140017e4b:	setae  r8b
   140017e4f:	test   r8d,r8d
   140017e52:	je     0x140017ef2
   140017e58:	movzx  eax,dl
   140017e5b:	mov    DWORD PTR [rbx],eax
   140017e5d:	mov    eax,0x1
   140017e62:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e67:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e6c:	add    rsp,0x20
   140017e70:	pop    rdi
   140017e71:	ret    
   140017e72:	sar    rdx,0x4
   140017e76:	and    edx,0x3f
   140017e79:	add    rcx,rdx
   140017e7c:	mov    esi,DWORD PTR [r8+rcx*4]
   140017e80:	cmp    r9b,0x1
   140017e84:	je     0x140017e99
   140017e86:	or     eax,0xffffffff
   140017e89:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e8e:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e93:	add    rsp,0x20
   140017e97:	pop    rdi
   140017e98:	ret    
   140017e99:	mov    rax,QWORD PTR [r10+0xf0]
   140017ea0:	xor    r8d,r8d
   140017ea3:	movzx  ecx,si
   140017ea6:	shl    ecx,0x4
   140017ea9:	mov    edx,r11d
   140017eac:	and    edx,0xf
   140017eaf:	add    ecx,edx
   140017eb1:	movzx  r9d,WORD PTR [rax+rcx*2]
   140017eb6:	lea    ecx,[rdx+0x10]
   140017eb9:	cmp    r9d,0xff
   140017ec0:	movzx  eax,cl
   140017ec3:	seta   r8b
   140017ec7:	bt     esi,eax
   140017eca:	jb     0x140017f35
   140017ecc:	test   dil,dil
   140017ecf:	jne    0x140017eed
   140017ed1:	lea    eax,[r11-0xe000]
   140017ed8:	cmp    eax,0x1900
   140017edd:	jb     0x140017eed
   140017edf:	lea    eax,[r11-0xf0000]
   140017ee6:	cmp    eax,0x20000
   140017eeb:	jae    0x140017ef2
   140017eed:	test   r9d,r9d
   140017ef0:	jne    0x140017f35
   140017ef2:	mov    rcx,QWORD PTR [r10+0x128]
   140017ef9:	test   rcx,rcx
   140017efc:	je     0x140017f23
   140017efe:	movzx  r9d,dil
   140017f02:	mov    r8,rbx
   140017f05:	mov    edx,r11d
   140017f08:	call   0x140029ea0
   140017f0d:	test   eax,eax
   140017f0f:	jns    0x140017f3c
   140017f11:	neg    eax
   140017f13:	mov    rbx,QWORD PTR [rsp+0x30]
   140017f18:	mov    rsi,QWORD PTR [rsp+0x38]
   140017f1d:	add    rsp,0x20
   140017f21:	pop    rdi
   140017f22:	ret    
   140017f23:	xor    eax,eax
   140017f25:	mov    rbx,QWORD PTR [rsp+0x30]
   140017f2a:	mov    rsi,QWORD PTR [rsp+0x38]
   140017f2f:	add    rsp,0x20
   140017f33:	pop    rdi
   140017f34:	ret    
   140017f35:	mov    DWORD PTR [rbx],r9d
   140017f38:	lea    eax,[r8+0x1]
   140017f3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140017f41:	mov    rsi,QWORD PTR [rsp+0x38]
   140017f46:	add    rsp,0x20
   140017f4a:	pop    rdi
   140017f4b:	ret    
   140017f4c:	int3   
   140017f4d:	int3   
   140017f4e:	int3   
   140017f4f:	int3   
   140017f50:	mov    QWORD PTR [rsp+0x18],r8
   140017f55:	mov    QWORD PTR [rsp+0x10],rdx
   140017f5a:	mov    QWORD PTR [rsp+0x8],rcx
   140017f5f:	push   rbx
   140017f60:	push   rbp
   140017f61:	push   rsi
   140017f62:	push   rdi
   140017f63:	push   r12
   140017f65:	push   r13
   140017f67:	push   r14
   140017f69:	push   r15
   140017f6b:	sub    rsp,0x98
   140017f72:	mov    r8,QWORD PTR [rdx+0x18]
   140017f76:	mov    r14,QWORD PTR [rdx+0x8]
   140017f7a:	mov    rbx,QWORD PTR [rdx+0x10]
   140017f7e:	mov    rax,rcx
   140017f81:	mov    rcx,QWORD PTR [rcx+0x8]
   140017f85:	mov    QWORD PTR [rsp+0x70],r8
   140017f8a:	mov    r9,QWORD PTR [rax+0x20]
   140017f8e:	mov    r13d,DWORD PTR [rax+0x28]
   140017f92:	mov    QWORD PTR [rsp+0x88],rcx
   140017f9a:	mov    QWORD PTR [rsp+0x68],r9
   140017f9f:	mov    r15,QWORD PTR [rcx+0x30]
   140017fa3:	sub    r13d,r9d
   140017fa6:	test   BYTE PTR [rcx+0x38],0x10
   140017faa:	mov    rax,QWORD PTR [r15+0x60]
   140017fae:	mov    QWORD PTR [rsp+0x80],rax
   140017fb6:	je     0x140017fc1
   140017fb8:	mov    rax,QWORD PTR [r15+0xf8]
   140017fbf:	jmp    0x140017fc8
   140017fc1:	mov    rax,QWORD PTR [r15+0xf0]
   140017fc8:	cmp    BYTE PTR [rcx+0x3f],0x0
   140017fcc:	mov    QWORD PTR [rsp+0x78],rax
   140017fd1:	mov    eax,DWORD PTR [r15+0x10c]
   140017fd8:	mov    DWORD PTR [rsp+0x64],eax
   140017fdc:	mov    eax,0x800
   140017fe1:	jne    0x140017fe8
   140017fe3:	mov    eax,0xc00
   140017fe8:	mov    r8d,DWORD PTR [r14+0x48]
   140017fec:	mov    DWORD PTR [rsp+0x60],eax
   140017ff0:	movzx  eax,BYTE PTR [r15+0x105]
   140017ff8:	and    al,0x1
   140017ffa:	mov    BYTE PTR [rsp+0xf8],al
   140018001:	test   r8d,r8d
   140018004:	je     0x140018016
   140018006:	movzx  r12d,BYTE PTR [r14+0x40]
   14001800b:	movzx  ebp,BYTE PTR [r14+0x4c]
   140018010:	movzx  edx,r12b
   140018014:	jmp    0x14001801e
   140018016:	xor    bpl,bpl
   140018019:	xor    r12b,r12b
   14001801c:	xor    dl,dl
   14001801e:	movsx  eax,bpl
   140018022:	movsx  ecx,r12b
   140018026:	xor    r11d,r11d
   140018029:	sub    ecx,eax
   14001802b:	mov    rax,QWORD PTR [rsp+0x70]
   140018030:	xor    r10d,r10d
   140018033:	sub    ecx,ebx
   140018035:	add    ecx,eax
   140018037:	movsxd rsi,ecx
   14001803a:	lea    rcx,[rax-0x1]
   14001803e:	xchg   ax,ax
   140018040:	cmp    r10,rsi
   140018043:	lea    rdi,[rip+0xfffffffffffe7fb6]        # 0x140000000
   14001804a:	jge    0x14001806f
   14001804c:	movzx  edi,BYTE PTR [rcx]
   14001804f:	movzx  eax,dil
   140018053:	and    al,0xc0
   140018055:	cmp    al,0x80
   140018057:	jne    0x1400180a4
   140018059:	inc    r10
   14001805c:	inc    r11d
   14001805f:	dec    rcx
   140018062:	cmp    r10,0x3
   140018066:	jl     0x140018040
   140018068:	lea    rdi,[rip+0xfffffffffffe7f91]        # 0x140000000
   14001806f:	mov    rax,QWORD PTR [rsp+0x70]
   140018074:	mov    rsi,QWORD PTR [rsp+0xe0]
   14001807c:	lea    r11,[rip+0x315c1]        # 0x140049644
   140018083:	test   r8d,r8d
   140018086:	je     0x1400180d2
   140018088:	test   r13d,r13d
   14001808b:	jle    0x1400180d2
   14001808d:	mov    DWORD PTR [r14+0x48],0x0
   140018095:	mov    BYTE PTR [r14+0x40],0x0
   14001809a:	mov    r9,QWORD PTR [rsp+0x68]
   14001809f:	jmp    0x1400181bb
   1400180a4:	movzx  eax,dil
   1400180a8:	lea    rdi,[rip+0xfffffffffffe7f51]        # 0x140000000
   1400180af:	movzx  eax,BYTE PTR [rax+rdi*1+0x4f450]
   1400180b7:	cmp    r11d,eax
   1400180ba:	jge    0x14001806f
   1400180bc:	lea    eax,[r11+0x1]
   1400180c0:	movsxd rcx,eax
   1400180c3:	mov    rax,QWORD PTR [rsp+0x70]
   1400180c8:	sub    rax,rcx
   1400180cb:	mov    QWORD PTR [rsp+0x70],rax
   1400180d0:	jmp    0x140018074
   1400180d2:	mov    r12,QWORD PTR [rsp+0xf0]
   1400180da:	mov    rdi,QWORD PTR [rsp+0x78]
   1400180df:	mov    ebp,DWORD PTR [rsp+0x60]
   1400180e3:	cmp    rbx,rax
   1400180e6:	jae    0x14001847c
   1400180ec:	test   r13d,r13d
   1400180ef:	jle    0x140018563
   1400180f5:	movzx  r10d,BYTE PTR [rbx]
   1400180f9:	inc    rbx
   1400180fc:	test   r10b,r10b
   1400180ff:	js     0x140018142
   140018101:	movzx  r8d,r10b
   140018105:	mov    eax,r8d
   140018108:	shr    eax,0x2
   14001810b:	movzx  ecx,al
   14001810e:	mov    eax,DWORD PTR [rsp+0x64]
   140018112:	bt     eax,ecx
   140018115:	jae    0x140018131
   140018117:	mov    BYTE PTR [r9],r10b
   14001811a:	mov    r9,QWORD PTR [rsp+0x68]
   14001811f:	mov    rax,QWORD PTR [rsp+0x70]
   140018124:	inc    r9
   140018127:	dec    r13d
   14001812a:	mov    QWORD PTR [rsp+0x68],r9
   14001812f:	jmp    0x1400180e3
   140018131:	movzx  ecx,WORD PTR [r15+0x70]
   140018136:	add    rcx,r8
   140018139:	mov    dx,WORD PTR [rdi+rcx*2]
   14001813d:	jmp    0x140018283
   140018142:	cmp    r10b,0xe0
   140018146:	jae    0x14001829c
   14001814c:	cmp    r10b,0xc2
   140018150:	jb     0x14001819c
   140018152:	movzx  r11d,BYTE PTR [rbx]
   140018156:	sub    r11b,0x80
   14001815a:	cmp    r11b,0x3f
   14001815e:	ja     0x14001819c
   140018160:	movzx  r8d,r10b
   140018164:	inc    rbx
   140018167:	and    r8d,0x1f
   14001816b:	movsxd rax,r8d
   14001816e:	movzx  ecx,WORD PTR [r15+rax*2+0x70]
   140018174:	movzx  eax,r11b
   140018178:	add    rcx,rax
   14001817b:	mov    dx,WORD PTR [rdi+rcx*2]
   14001817f:	cmp    dx,bp
   140018182:	jae    0x1400182e8
   140018188:	shl    r8d,0x6
   14001818c:	movzx  eax,r11b
   140018190:	or     r8d,eax
   140018193:	test   r8d,r8d
   140018196:	jns    0x14001827c
   14001819c:	lea    rdi,[rip+0xfffffffffffe7e5d]        # 0x140000000
   1400181a3:	movzx  eax,r10b
   1400181a7:	xor    r12b,r12b
   1400181aa:	mov    bpl,BYTE PTR [rax+rdi*1+0x4f450]
   1400181b2:	mov    dl,0x1
   1400181b4:	movzx  r8d,r10b
   1400181b8:	inc    bpl
   1400181bb:	cmp    dl,bpl
   1400181be:	mov    r11,QWORD PTR [rsp+0xe8]
   1400181c6:	jge    0x1400181fc
   1400181c8:	mov    r10,QWORD PTR [r11+0x18]
   1400181cc:	nop    DWORD PTR [rax+0x0]
   1400181d0:	cmp    rbx,r10
   1400181d3:	jae    0x140018418
   1400181d9:	movzx  ecx,BYTE PTR [rbx]
   1400181dc:	movzx  eax,cl
   1400181df:	and    al,0xc0
   1400181e1:	cmp    al,0x80
   1400181e3:	jne    0x1400181f9
   1400181e5:	shl    r8d,0x6
   1400181e9:	movzx  eax,cl
   1400181ec:	inc    dl
   1400181ee:	add    r8d,eax
   1400181f1:	inc    rbx
   1400181f4:	cmp    dl,bpl
   1400181f7:	jl     0x1400181d0
   1400181f9:	cmp    dl,bpl
   1400181fc:	jne    0x140018503
   140018202:	cmp    dl,0x3
   140018205:	je     0x140018210
   140018207:	cmp    dl,0x2
   14001820a:	jne    0x14001830c
   140018210:	movsx  rax,dl
   140018214:	sub    r8d,DWORD PTR [rdi+rax*4+0x49648]
   14001821c:	cmp    r8d,DWORD PTR [rdi+rax*4+0x49630]
   140018224:	jl     0x14001830c
   14001822a:	cmp    r8d,0xd7ff
   140018231:	jle    0x140018240
   140018233:	cmp    r8d,0xe000
   14001823a:	jl     0x14001830c
   140018240:	mov    r10,QWORD PTR [rsp+0x80]
   140018248:	mov    rdi,QWORD PTR [rsp+0x78]
   14001824d:	mov    ebp,DWORD PTR [rsp+0x60]
   140018251:	movsxd rdx,r8d
   140018254:	mov    rax,rdx
   140018257:	sar    rax,0xa
   14001825b:	movzx  ecx,WORD PTR [r10+rax*2]
   140018260:	mov    rax,rdx
   140018263:	and    edx,0xf
   140018266:	sar    rax,0x4
   14001826a:	and    eax,0x3f
   14001826d:	add    rcx,rax
   140018270:	movzx  eax,WORD PTR [r10+rcx*2]
   140018275:	add    rax,rdx
   140018278:	mov    dx,WORD PTR [rdi+rax*2]
   14001827c:	lea    r11,[rip+0x313c1]        # 0x140049644
   140018283:	mov    r12,QWORD PTR [rsp+0xf0]
   14001828b:	cmp    dx,bp
   14001828e:	jb     0x140018387
   140018294:	mov    BYTE PTR [r9],dl
   140018297:	jmp    0x14001811a
   14001829c:	jne    0x14001819c
   1400182a2:	movzx  ecx,BYTE PTR [rbx]
   1400182a5:	sub    cl,0x80
   1400182a8:	lea    eax,[rcx-0x20]
   1400182ab:	cmp    al,0x1f
   1400182ad:	ja     0x14001819c
   1400182b3:	movzx  r11d,BYTE PTR [rbx+0x1]
   1400182b8:	sub    r11b,0x80
   1400182bc:	cmp    r11b,0x3f
   1400182c0:	ja     0x14001819c
   1400182c6:	movzx  r8d,cl
   1400182ca:	movzx  eax,r11b
   1400182ce:	add    rbx,0x2
   1400182d2:	movzx  ecx,WORD PTR [r15+r8*2+0x70]
   1400182d8:	add    rcx,rax
   1400182db:	mov    dx,WORD PTR [rdi+rcx*2]
   1400182df:	cmp    dx,bp
   1400182e2:	jb     0x140018188
   1400182e8:	mov    rax,QWORD PTR [rsp+0x70]
   1400182ed:	mov    BYTE PTR [r9],dl
   1400182f0:	mov    r9,QWORD PTR [rsp+0x68]
   1400182f5:	inc    r9
   1400182f8:	lea    r11,[rip+0x31345]        # 0x140049644
   1400182ff:	dec    r13d
   140018302:	mov    QWORD PTR [rsp+0x68],r9
   140018307:	jmp    0x1400180e3
   14001830c:	cmp    dl,0x4
   14001830f:	jne    0x140018503
   140018315:	sub    r8d,0x3c82080
   14001831c:	lea    eax,[r8-0x10000]
   140018323:	cmp    eax,0xfffff
   140018328:	ja     0x140018503
   14001832e:	cmp    BYTE PTR [rsp+0xf8],0x0
   140018336:	mov    rdi,QWORD PTR [rsp+0x78]
   14001833b:	mov    ebp,DWORD PTR [rsp+0x60]
   14001833f:	lea    r11,[rip+0x312fe]        # 0x140049644
   140018346:	jne    0x14001834f
   140018348:	xor    edx,edx
   14001834a:	jmp    0x140018283
   14001834f:	mov    r10,QWORD PTR [rsp+0x80]
   140018357:	movsxd rdx,r8d
   14001835a:	mov    rax,rdx
   14001835d:	sar    rax,0xa
   140018361:	movzx  ecx,WORD PTR [r10+rax*2]
   140018366:	mov    rax,rdx
   140018369:	and    edx,0xf
   14001836c:	sar    rax,0x4
   140018370:	and    eax,0x3f
   140018373:	add    rcx,rax
   140018376:	movzx  eax,WORD PTR [r10+rcx*2]
   14001837b:	add    rax,rdx
   14001837e:	mov    dx,WORD PTR [rdi+rax*2]
   140018382:	jmp    0x140018283
   140018387:	movzx  eax,BYTE PTR [rsi+0x2]
   14001838b:	mov    rbp,QWORD PTR [rsp+0x88]
   140018393:	mov    QWORD PTR [rsp+0x50],r12
   140018398:	mov    rdx,QWORD PTR [rbp+0x30]
   14001839c:	mov    BYTE PTR [rsp+0x48],al
   1400183a0:	mov    DWORD PTR [rsp+0x40],0xffffffff
   1400183a8:	mov    QWORD PTR [rsp+0x38],0x0
   1400183b1:	lea    rax,[rsp+0x68]
   1400183b6:	movsxd rcx,r13d
   1400183b9:	add    rcx,r9
   1400183bc:	lea    r9,[rsp+0xe0]
   1400183c4:	mov    QWORD PTR [rsp+0xe0],r11
   1400183cc:	mov    QWORD PTR [rsp+0x30],rcx
   1400183d1:	mov    QWORD PTR [rsp+0x28],rax
   1400183d6:	mov    rcx,rbp
   1400183d9:	mov    QWORD PTR [rsp+0x20],r11
   1400183de:	call   0x1400136d0
   1400183e3:	cmp    DWORD PTR [r12],0x0
   1400183e8:	jg     0x140018474
   1400183ee:	cmp    DWORD PTR [rbp+0xd0],0x0
   1400183f5:	mov    r9,QWORD PTR [rsp+0x68]
   1400183fa:	jge    0x14001847c
   140018400:	mov    r13d,DWORD PTR [rsi+0x28]
   140018404:	mov    rax,QWORD PTR [rsp+0x70]
   140018409:	lea    r11,[rip+0x31234]        # 0x140049644
   140018410:	sub    r13d,r9d
   140018413:	jmp    0x1400180df
   140018418:	movsx  eax,r12b
   14001841c:	movsx  ecx,dl
   14001841f:	sub    ecx,eax
   140018421:	movsxd rax,ecx
   140018424:	sub    rbx,rax
   140018427:	cmp    r12b,dl
   14001842a:	jge    0x140018452
   14001842c:	movsx  rax,r12b
   140018430:	lea    rcx,[rax+r14*1+0x41]
   140018435:	movzx  eax,dl
   140018438:	sub    al,r12b
   14001843b:	movzx  r9d,al
   14001843f:	nop
   140018440:	movzx  eax,BYTE PTR [rbx]
   140018443:	inc    rcx
   140018446:	inc    rbx
   140018449:	sub    r9,0x1
   14001844d:	mov    BYTE PTR [rcx-0x1],al
   140018450:	jne    0x140018440
   140018452:	mov    DWORD PTR [r14+0x48],r8d
   140018456:	mov    BYTE PTR [r14+0x40],dl
   14001845a:	movsx  eax,bpl
   14001845e:	mov    DWORD PTR [r14+0x4c],eax
   140018462:	mov    rax,QWORD PTR [rsp+0x68]
   140018467:	mov    QWORD PTR [r11+0x10],rbx
   14001846b:	mov    QWORD PTR [rsi+0x20],rax
   14001846f:	jmp    0x14001857b
   140018474:	mov    DWORD PTR [rbp+0x54],eax
   140018477:	mov    r9,QWORD PTR [rsp+0x68]
   14001847c:	cmp    DWORD PTR [r12],0x0
   140018481:	jg     0x14001856b
   140018487:	mov    r11,QWORD PTR [rsp+0xe8]
   14001848f:	mov    r10,QWORD PTR [r11+0x18]
   140018493:	cmp    rbx,r10
   140018496:	jae    0x140018573
   14001849c:	movzx  eax,BYTE PTR [rbx]
   14001849f:	lea    rcx,[rip+0xfffffffffffe7b5a]        # 0x140000000
   1400184a6:	inc    rbx
   1400184a9:	mov    BYTE PTR [r14+0x41],al
   1400184ad:	movzx  r9d,BYTE PTR [rax+rcx*1+0x4f450]
   1400184b6:	mov    edx,eax
   1400184b8:	inc    r9b
   1400184bb:	mov    r8b,0x1
   1400184be:	cmp    rbx,r10
   1400184c1:	jae    0x1400184ec
   1400184c3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400184d0:	movzx  ecx,BYTE PTR [rbx]
   1400184d3:	shl    edx,0x6
   1400184d6:	movsx  rax,r8b
   1400184da:	inc    rbx
   1400184dd:	inc    r8b
   1400184e0:	add    edx,ecx
   1400184e2:	mov    BYTE PTR [rax+r14*1+0x41],cl
   1400184e7:	cmp    rbx,r10
   1400184ea:	jb     0x1400184d0
   1400184ec:	movsx  eax,r9b
   1400184f0:	mov    DWORD PTR [r14+0x48],edx
   1400184f4:	mov    BYTE PTR [r14+0x40],r8b
   1400184f8:	mov    DWORD PTR [r14+0x4c],eax
   1400184fc:	mov    r9,QWORD PTR [rsp+0x68]
   140018501:	jmp    0x140018573
   140018503:	movsx  eax,r12b
   140018507:	movsx  ecx,dl
   14001850a:	sub    ecx,eax
   14001850c:	movsxd rax,ecx
   14001850f:	sub    rbx,rax
   140018512:	cmp    r12b,dl
   140018515:	jge    0x140018542
   140018517:	movsx  rax,r12b
   14001851b:	lea    rcx,[rax+r14*1+0x41]
   140018520:	movzx  eax,dl
   140018523:	sub    al,r12b
   140018526:	movzx  r8d,al
   14001852a:	nop    WORD PTR [rax+rax*1+0x0]
   140018530:	movzx  eax,BYTE PTR [rbx]
   140018533:	inc    rcx
   140018536:	inc    rbx
   140018539:	sub    r8,0x1
   14001853d:	mov    BYTE PTR [rcx-0x1],al
   140018540:	jne    0x140018530
   140018542:	mov    BYTE PTR [r14+0x40],dl
   140018546:	mov    rax,QWORD PTR [rsp+0x68]
   14001854b:	mov    QWORD PTR [r11+0x10],rbx
   14001854f:	mov    QWORD PTR [rsi+0x20],rax
   140018553:	mov    rax,QWORD PTR [rsp+0xf0]
   14001855b:	mov    DWORD PTR [rax],0xc
   140018561:	jmp    0x14001857b
   140018563:	mov    DWORD PTR [r12],0xf
   14001856b:	mov    r11,QWORD PTR [rsp+0xe8]
   140018573:	mov    QWORD PTR [r11+0x10],rbx
   140018577:	mov    QWORD PTR [rsi+0x20],r9
   14001857b:	add    rsp,0x98
   140018582:	pop    r15
   140018584:	pop    r14
   140018586:	pop    r13
   140018588:	pop    r12
   14001858a:	pop    rdi
   14001858b:	pop    rsi
   14001858c:	pop    rbp
   14001858d:	pop    rbx
   14001858e:	ret    
   14001858f:	int3   
   140018590:	mov    QWORD PTR [rsp+0x18],r8
   140018595:	mov    QWORD PTR [rsp+0x10],rdx
   14001859a:	mov    QWORD PTR [rsp+0x8],rcx
   14001859f:	push   rbx
   1400185a0:	push   rbp
   1400185a1:	push   rsi
   1400185a2:	push   rdi
   1400185a3:	push   r12
   1400185a5:	push   r13
   1400185a7:	push   r14
   1400185a9:	push   r15
   1400185ab:	sub    rsp,0x98
   1400185b2:	mov    r15,QWORD PTR [rcx+0x8]
   1400185b6:	mov    r14,QWORD PTR [rdx+0x8]
   1400185ba:	mov    rbx,QWORD PTR [rdx+0x10]
   1400185be:	mov    r11,rcx
   1400185c1:	mov    rcx,QWORD PTR [rdx+0x18]
   1400185c5:	mov    rdi,QWORD PTR [r11+0x20]
   1400185c9:	mov    r13d,DWORD PTR [r11+0x28]
   1400185cd:	mov    QWORD PTR [rsp+0x70],rcx
   1400185d2:	mov    QWORD PTR [rsp+0x68],rdi
   1400185d7:	mov    rax,QWORD PTR [r15+0x30]
   1400185db:	sub    r13d,edi
   1400185de:	test   BYTE PTR [r15+0x38],0x10
   1400185e3:	mov    rcx,QWORD PTR [rax+0x60]
   1400185e7:	mov    QWORD PTR [rsp+0x88],rcx
   1400185ef:	mov    rcx,QWORD PTR [rax+0x68]
   1400185f3:	mov    QWORD PTR [rsp+0x80],rcx
   1400185fb:	je     0x140018606
   1400185fd:	mov    rcx,QWORD PTR [rax+0xf8]
   140018604:	jmp    0x14001860d
   140018606:	mov    rcx,QWORD PTR [rax+0xf0]
   14001860d:	mov    r8d,DWORD PTR [r14+0x48]
   140018611:	mov    QWORD PTR [rsp+0x78],rcx
   140018616:	mov    ecx,DWORD PTR [rax+0x10c]
   14001861c:	movzx  eax,BYTE PTR [rax+0x105]
   140018623:	mov    DWORD PTR [rsp+0x60],ecx
   140018627:	and    al,0x1
   140018629:	mov    BYTE PTR [rsp+0xf8],al
   140018630:	test   r8d,r8d
   140018633:	je     0x140018645
   140018635:	movzx  r12d,BYTE PTR [r14+0x40]
   14001863a:	movzx  ebp,BYTE PTR [r14+0x4c]
   14001863f:	movzx  r9d,r12b
   140018643:	jmp    0x14001864e
   140018645:	xor    bpl,bpl
   140018648:	xor    r12b,r12b
   14001864b:	xor    r9b,r9b
   14001864e:	movsx  eax,bpl
   140018652:	movsx  ecx,r12b
   140018656:	xor    r10d,r10d
   140018659:	sub    ecx,eax
   14001865b:	mov    rax,QWORD PTR [rsp+0x70]
   140018660:	xor    edx,edx
   140018662:	sub    ecx,ebx
   140018664:	add    ecx,eax
   140018666:	movsxd rsi,ecx
   140018669:	lea    rcx,[rax-0x1]
   14001866d:	nop    DWORD PTR [rax]
   140018670:	cmp    rdx,rsi
   140018673:	jge    0x140018692
   140018675:	movzx  r11d,BYTE PTR [rcx]
   140018679:	movzx  eax,r11b
   14001867d:	and    al,0xc0
   14001867f:	cmp    al,0x80
   140018681:	jne    0x1400186cf
   140018683:	inc    rdx
   140018686:	inc    r10d
   140018689:	dec    rcx
   14001868c:	cmp    rdx,0x3
   140018690:	jl     0x140018670
   140018692:	lea    rcx,[rip+0xfffffffffffe7967]        # 0x140000000
   140018699:	mov    rax,QWORD PTR [rsp+0x70]
   14001869e:	mov    r11,QWORD PTR [rsp+0xe0]
   1400186a6:	mov    rsi,QWORD PTR [rsp+0xe8]
   1400186ae:	test   r8d,r8d
   1400186b1:	je     0x140018710
   1400186b3:	test   r13d,r13d
   1400186b6:	jle    0x140018710
   1400186b8:	mov    DWORD PTR [r14+0x48],0x0
   1400186c0:	mov    BYTE PTR [r14+0x40],0x0
   1400186c5:	mov    rdi,QWORD PTR [rsp+0x68]
   1400186ca:	jmp    0x140018883
   1400186cf:	lea    rcx,[rip+0xfffffffffffe792a]        # 0x140000000
   1400186d6:	movzx  eax,r11b
   1400186da:	movzx  eax,BYTE PTR [rax+rcx*1+0x4f450]
   1400186e2:	cmp    r10d,eax
   1400186e5:	jge    0x140018699
   1400186e7:	lea    eax,[r10+0x1]
   1400186eb:	movsxd rcx,eax
   1400186ee:	mov    rax,QWORD PTR [rsp+0x70]
   1400186f3:	sub    rax,rcx
   1400186f6:	lea    rcx,[rip+0xfffffffffffe7903]        # 0x140000000
   1400186fd:	mov    QWORD PTR [rsp+0x70],rax
   140018702:	jmp    0x14001869e
   140018704:	mov    rax,QWORD PTR [rsp+0x70]
   140018709:	lea    rcx,[rip+0xfffffffffffe78f0]        # 0x140000000
   140018710:	mov    rbp,QWORD PTR [rsp+0xf0]
   140018718:	cmp    rbx,rax
   14001871b:	jae    0x140018b1d
   140018721:	test   r13d,r13d
   140018724:	jle    0x140018c36
   14001872a:	movzx  edx,BYTE PTR [rbx]
   14001872d:	inc    rbx
   140018730:	test   dl,dl
   140018732:	js     0x1400187ba
   140018738:	movzx  r8d,dl
   14001873c:	mov    eax,r8d
   14001873f:	shr    eax,0x2
   140018742:	movzx  ecx,al
   140018745:	mov    eax,DWORD PTR [rsp+0x60]
   140018749:	bt     eax,ecx
   14001874c:	jae    0x14001876e
   14001874e:	mov    rax,QWORD PTR [rsp+0x70]
   140018753:	mov    BYTE PTR [rdi],dl
   140018755:	mov    rdi,QWORD PTR [rsp+0x68]
   14001875a:	inc    rdi
   14001875d:	lea    rcx,[rip+0xfffffffffffe789c]        # 0x140000000
   140018764:	dec    r13d
   140018767:	mov    QWORD PTR [rsp+0x68],rdi
   14001876c:	jmp    0x140018718
   14001876e:	mov    rax,QWORD PTR [rsp+0x80]
   140018776:	movzx  ecx,WORD PTR [rax]
   140018779:	movzx  eax,dl
   14001877c:	add    rcx,rax
   14001877f:	mov    rax,QWORD PTR [rsp+0x78]
   140018784:	movzx  r9d,WORD PTR [rax+rcx*2]
   140018789:	test   r9w,r9w
   14001878d:	je     0x1400189d7
   140018793:	mov    edx,0xff
   140018798:	cmp    r9w,dx
   14001879c:	ja     0x140018a70
   1400187a2:	mov    BYTE PTR [rdi],r9b
   1400187a5:	mov    rdi,QWORD PTR [rsp+0x68]
   1400187aa:	inc    rdi
   1400187ad:	dec    r13d
   1400187b0:	mov    QWORD PTR [rsp+0x68],rdi
   1400187b5:	jmp    0x140018704
   1400187ba:	cmp    dl,0xe0
   1400187bd:	jbe    0x140018839
   1400187bf:	movzx  eax,BYTE PTR [rbx]
   1400187c2:	sub    al,0x80
   1400187c4:	cmp    dl,0xed
   1400187c7:	jae    0x1400187d0
   1400187c9:	cmp    al,0x3f
   1400187cb:	jbe    0x1400187de
   1400187cd:	cmp    dl,0xed
   1400187d0:	jne    0x14001886b
   1400187d6:	cmp    al,0x1f
   1400187d8:	ja     0x14001886b
   1400187de:	movzx  r10d,BYTE PTR [rbx+0x1]
   1400187e3:	sub    r10b,0x80
   1400187e7:	cmp    r10b,0x3f
   1400187eb:	ja     0x14001886b
   1400187ed:	movzx  r8d,dl
   1400187f1:	movzx  eax,al
   1400187f4:	and    r8d,0xf
   1400187f8:	shl    r8d,0x6
   1400187fc:	or     r8d,eax
   1400187ff:	add    rbx,0x2
   140018803:	mov    rcx,QWORD PTR [rsp+0x80]
   14001880b:	movsxd rax,r8d
   14001880e:	movzx  ecx,WORD PTR [rcx+rax*2]
   140018812:	movzx  eax,r10b
   140018816:	add    rcx,rax
   140018819:	mov    rax,QWORD PTR [rsp+0x78]
   14001881e:	mov    r9w,WORD PTR [rax+rcx*2]
   140018823:	test   r9w,r9w
   140018827:	jne    0x14001885b
   140018829:	shl    r8d,0x6
   14001882d:	movzx  eax,r10b
   140018831:	or     r8d,eax
   140018834:	jmp    0x1400189d7
   140018839:	jae    0x14001886b
   14001883b:	cmp    dl,0xc2
   14001883e:	jb     0x14001886b
   140018840:	movzx  r10d,BYTE PTR [rbx]
   140018844:	sub    r10b,0x80
   140018848:	cmp    r10b,0x3f
   14001884c:	ja     0x14001886b
   14001884e:	movzx  r8d,dl
   140018852:	and    r8d,0x1f
   140018856:	inc    rbx
   140018859:	jmp    0x140018803
   14001885b:	test   r8d,r8d
   14001885e:	jns    0x140018793
   140018864:	lea    rcx,[rip+0xfffffffffffe7795]        # 0x140000000
   14001886b:	movzx  eax,dl
   14001886e:	xor    r12b,r12b
   140018871:	mov    r9b,0x1
   140018874:	mov    bpl,BYTE PTR [rax+rcx*1+0x4f450]
   14001887c:	movzx  r8d,dl
   140018880:	inc    bpl
   140018883:	cmp    r9b,bpl
   140018886:	jge    0x1400188c4
   140018888:	mov    rdx,QWORD PTR [rsi+0x18]
   14001888c:	nop    DWORD PTR [rax+0x0]
   140018890:	cmp    rbx,rdx
   140018893:	jae    0x140018aaa
   140018899:	movzx  ecx,BYTE PTR [rbx]
   14001889c:	movzx  eax,cl
   14001889f:	and    al,0xc0
   1400188a1:	cmp    al,0x80
   1400188a3:	jne    0x1400188ba
   1400188a5:	shl    r8d,0x6
   1400188a9:	movzx  eax,cl
   1400188ac:	inc    r9b
   1400188af:	add    r8d,eax
   1400188b2:	inc    rbx
   1400188b5:	cmp    r9b,bpl
   1400188b8:	jl     0x140018890
   1400188ba:	lea    rcx,[rip+0xfffffffffffe773f]        # 0x140000000
   1400188c1:	cmp    r9b,bpl
   1400188c4:	jne    0x140018bce
   1400188ca:	cmp    r9b,0x3
   1400188ce:	je     0x1400188d6
   1400188d0:	cmp    r9b,0x2
   1400188d4:	jne    0x140018925
   1400188d6:	movsx  rax,r9b
   1400188da:	sub    r8d,DWORD PTR [rcx+rax*4+0x49648]
   1400188e2:	cmp    r8d,DWORD PTR [rcx+rax*4+0x49630]
   1400188ea:	jl     0x140018925
   1400188ec:	cmp    r8d,0xd7ff
   1400188f3:	jle    0x1400188fe
   1400188f5:	cmp    r8d,0xe000
   1400188fc:	jl     0x140018925
   1400188fe:	mov    r10,QWORD PTR [rsp+0x88]
   140018906:	movsxd rdx,r8d
   140018909:	mov    rax,rdx
   14001890c:	sar    rdx,0x4
   140018910:	sar    rax,0xa
   140018914:	and    edx,0x3f
   140018917:	movzx  ecx,WORD PTR [r10+rax*2]
   14001891c:	add    rcx,rdx
   14001891f:	mov    edx,DWORD PTR [r10+rcx*4]
   140018923:	jmp    0x14001897b
   140018925:	cmp    r9b,0x4
   140018929:	jne    0x140018bce
   14001892f:	sub    r8d,0x3c82080
   140018936:	lea    eax,[r8-0x10000]
   14001893d:	cmp    eax,0xfffff
   140018942:	ja     0x140018bce
   140018948:	cmp    BYTE PTR [rsp+0xf8],0x0
   140018950:	jne    0x140018956
   140018952:	xor    edx,edx
   140018954:	jmp    0x14001897b
   140018956:	mov    r9,QWORD PTR [rsp+0x88]
   14001895e:	movsxd rdx,r8d
   140018961:	mov    rax,rdx
   140018964:	sar    rdx,0x4
   140018968:	sar    rax,0xa
   14001896c:	and    edx,0x3f
   14001896f:	movzx  ecx,WORD PTR [r9+rax*2]
   140018974:	add    rcx,rdx
   140018977:	mov    edx,DWORD PTR [r9+rcx*4]
   14001897b:	mov    r9,QWORD PTR [rsp+0x78]
   140018980:	movzx  eax,dx
   140018983:	mov    ecx,r8d
   140018986:	shl    eax,0x4
   140018989:	and    ecx,0xf
   14001898c:	add    eax,ecx
   14001898e:	add    ecx,0x10
   140018991:	mov    r9w,WORD PTR [r9+rax*2]
   140018996:	movzx  eax,cl
   140018999:	bt     edx,eax
   14001899c:	jb     0x140018793
   1400189a2:	cmp    BYTE PTR [r15+0x3f],0x0
   1400189a7:	jne    0x1400189c5
   1400189a9:	lea    eax,[r8-0xe000]
   1400189b0:	cmp    eax,0x1900
   1400189b5:	jb     0x1400189c5
   1400189b7:	lea    eax,[r8-0xf0000]
   1400189be:	cmp    eax,0x20000
   1400189c3:	jae    0x1400189cf
   1400189c5:	test   r9w,r9w
   1400189c9:	jne    0x140018793
   1400189cf:	mov    rbp,QWORD PTR [rsp+0xf0]
   1400189d7:	movzx  eax,BYTE PTR [r11+0x2]
   1400189dc:	mov    QWORD PTR [rsp+0x50],rbp
   1400189e1:	lea    rdx,[rip+0x30c7c]        # 0x140049664
   1400189e8:	mov    BYTE PTR [rsp+0x48],al
   1400189ec:	mov    DWORD PTR [rsp+0x40],0xffffffff
   1400189f4:	mov    QWORD PTR [rsp+0x38],0x0
   1400189fd:	lea    rax,[rsp+0x68]
   140018a02:	mov    QWORD PTR [rsp+0xe8],rdx
   140018a0a:	movsxd rcx,r13d
   140018a0d:	add    rcx,rdi
   140018a10:	lea    r9,[rsp+0xe8]
   140018a18:	mov    QWORD PTR [rsp+0x30],rcx
   140018a1d:	mov    QWORD PTR [rsp+0x28],rax
   140018a22:	mov    QWORD PTR [rsp+0x20],rdx
   140018a27:	mov    rdx,QWORD PTR [r15+0x30]
   140018a2b:	mov    rcx,r15
   140018a2e:	call   0x1400136d0
   140018a33:	cmp    DWORD PTR [rbp+0x0],0x0
   140018a37:	jg     0x140018b14
   140018a3d:	cmp    DWORD PTR [r15+0xd0],0x0
   140018a45:	mov    rdi,QWORD PTR [rsp+0x68]
   140018a4a:	jge    0x140018b1d
   140018a50:	mov    r11,QWORD PTR [rsp+0xe0]
   140018a58:	mov    rax,QWORD PTR [rsp+0x70]
   140018a5d:	lea    rcx,[rip+0xfffffffffffe759c]        # 0x140000000
   140018a64:	mov    r13d,DWORD PTR [r11+0x28]
   140018a68:	sub    r13d,edi
   140018a6b:	jmp    0x140018718
   140018a70:	movzx  eax,r9w
   140018a74:	shr    ax,0x8
   140018a78:	mov    BYTE PTR [rdi],al
   140018a7a:	mov    rax,QWORD PTR [rsp+0x68]
   140018a7f:	inc    rax
   140018a82:	cmp    r13d,0x2
   140018a86:	mov    QWORD PTR [rsp+0x68],rax
   140018a8b:	jl     0x140018bb5
   140018a91:	mov    BYTE PTR [rax],r9b
   140018a94:	mov    rdi,QWORD PTR [rsp+0x68]
   140018a99:	inc    rdi
   140018a9c:	sub    r13d,0x2
   140018aa0:	mov    QWORD PTR [rsp+0x68],rdi
   140018aa5:	jmp    0x140018704
   140018aaa:	movsx  eax,r12b
   140018aae:	movsx  ecx,r9b
   140018ab2:	sub    ecx,eax
   140018ab4:	movsxd rax,ecx
   140018ab7:	sub    rbx,rax
   140018aba:	cmp    r12b,r9b
   140018abd:	jge    0x140018af2
   140018abf:	movsx  rax,r12b
   140018ac3:	lea    rcx,[rax+r14*1+0x41]
   140018ac8:	movzx  eax,r9b
   140018acc:	sub    al,r12b
   140018acf:	movzx  edx,al
   140018ad2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018ae0:	movzx  eax,BYTE PTR [rbx]
   140018ae3:	inc    rcx
   140018ae6:	inc    rbx
   140018ae9:	sub    rdx,0x1
   140018aed:	mov    BYTE PTR [rcx-0x1],al
   140018af0:	jne    0x140018ae0
   140018af2:	mov    DWORD PTR [r14+0x48],r8d
   140018af6:	mov    BYTE PTR [r14+0x40],r9b
   140018afa:	movsx  eax,bpl
   140018afe:	mov    DWORD PTR [r14+0x4c],eax
   140018b02:	mov    rax,QWORD PTR [rsp+0x68]
   140018b07:	mov    QWORD PTR [rsi+0x10],rbx
   140018b0b:	mov    QWORD PTR [r11+0x20],rax
   140018b0f:	jmp    0x140018ba1
   140018b14:	mov    DWORD PTR [r15+0x54],eax
   140018b18:	mov    rdi,QWORD PTR [rsp+0x68]
   140018b1d:	cmp    DWORD PTR [rbp+0x0],0x0
   140018b21:	jg     0x140018b91
   140018b23:	mov    r9,QWORD PTR [rsi+0x18]
   140018b27:	cmp    rbx,r9
   140018b2a:	jae    0x140018b91
   140018b2c:	movzx  eax,BYTE PTR [rbx]
   140018b2f:	lea    r11,[rip+0xfffffffffffe74ca]        # 0x140000000
   140018b36:	inc    rbx
   140018b39:	mov    BYTE PTR [r14+0x41],al
   140018b3d:	movzx  r10d,BYTE PTR [rax+r11*1+0x4f450]
   140018b46:	mov    edx,eax
   140018b48:	inc    r10b
   140018b4b:	mov    r8b,0x1
   140018b4e:	cmp    rbx,r9
   140018b51:	jae    0x140018b7c
   140018b53:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018b60:	movzx  ecx,BYTE PTR [rbx]
   140018b63:	shl    edx,0x6
   140018b66:	movsx  rax,r8b
   140018b6a:	inc    rbx
   140018b6d:	inc    r8b
   140018b70:	add    edx,ecx
   140018b72:	mov    BYTE PTR [rax+r14*1+0x41],cl
   140018b77:	cmp    rbx,r9
   140018b7a:	jb     0x140018b60
   140018b7c:	movsx  eax,r10b
   140018b80:	mov    DWORD PTR [r14+0x48],edx
   140018b84:	mov    BYTE PTR [r14+0x40],r8b
   140018b88:	mov    DWORD PTR [r14+0x4c],eax
   140018b8c:	mov    rdi,QWORD PTR [rsp+0x68]
   140018b91:	mov    rax,QWORD PTR [rsp+0xe0]
   140018b99:	mov    QWORD PTR [rsi+0x10],rbx
   140018b9d:	mov    QWORD PTR [rax+0x20],rdi
   140018ba1:	add    rsp,0x98
   140018ba8:	pop    r15
   140018baa:	pop    r14
   140018bac:	pop    r13
   140018bae:	pop    r12
   140018bb0:	pop    rdi
   140018bb1:	pop    rsi
   140018bb2:	pop    rbp
   140018bb3:	pop    rbx
   140018bb4:	ret    
   140018bb5:	mov    rax,QWORD PTR [rsp+0xf0]
   140018bbd:	mov    BYTE PTR [r15+0x68],r9b
   140018bc1:	mov    BYTE PTR [r15+0x5b],0x1
   140018bc6:	mov    DWORD PTR [rax],0xf
   140018bcc:	jmp    0x140018b8c
   140018bce:	movsx  eax,r12b
   140018bd2:	movsx  ecx,r9b
   140018bd6:	sub    ecx,eax
   140018bd8:	movsxd rax,ecx
   140018bdb:	sub    rbx,rax
   140018bde:	cmp    r12b,r9b
   140018be1:	jge    0x140018c12
   140018be3:	movsx  rax,r12b
   140018be7:	lea    rcx,[rax+r14*1+0x41]
   140018bec:	movzx  eax,r9b
   140018bf0:	sub    al,r12b
   140018bf3:	movzx  edx,al
   140018bf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140018c00:	movzx  eax,BYTE PTR [rbx]
   140018c03:	inc    rcx
   140018c06:	inc    rbx
   140018c09:	sub    rdx,0x1
   140018c0d:	mov    BYTE PTR [rcx-0x1],al
   140018c10:	jne    0x140018c00
   140018c12:	mov    BYTE PTR [r14+0x40],r9b
   140018c16:	mov    rax,QWORD PTR [rsp+0x68]
   140018c1b:	mov    QWORD PTR [rsi+0x10],rbx
   140018c1f:	mov    QWORD PTR [r11+0x20],rax
   140018c23:	mov    rax,QWORD PTR [rsp+0xf0]
   140018c2b:	mov    DWORD PTR [rax],0xc
   140018c31:	jmp    0x140018ba1
   140018c36:	mov    DWORD PTR [rbp+0x0],0xf
   140018c3d:	jmp    0x140018b91
   140018c42:	int3   
   140018c43:	int3   
   140018c44:	int3   
   140018c45:	int3   
   140018c46:	int3   
   140018c47:	int3   
   140018c48:	int3   
   140018c49:	int3   
   140018c4a:	int3   
   140018c4b:	int3   
   140018c4c:	int3   
   140018c4d:	int3   
   140018c4e:	int3   
   140018c4f:	int3   
   140018c50:	mov    rax,QWORD PTR [rcx+0x30]
   140018c54:	mov    r8d,0x80
   140018c5a:	movzx  ecx,BYTE PTR [rax+0x39]
   140018c5e:	shl    rcx,0xa
   140018c62:	add    rcx,QWORD PTR [rax+0x40]
   140018c66:	inc    rdx
   140018c69:	nop    DWORD PTR [rax+0x0]
   140018c70:	cmp    DWORD PTR [rcx],0x0
   140018c73:	setge  al
   140018c76:	mov    BYTE PTR [rdx-0x1],al
   140018c79:	cmp    DWORD PTR [rcx+0x4],0x0
   140018c7d:	setge  al
   140018c80:	add    rdx,0x2
   140018c84:	add    rcx,0x8
   140018c88:	sub    r8,0x1
   140018c8c:	mov    BYTE PTR [rdx-0x2],al
   140018c8f:	jne    0x140018c70
   140018c91:	repz ret 
   140018c93:	int3   
   140018c94:	int3   
   140018c95:	int3   
   140018c96:	int3   
   140018c97:	int3   
   140018c98:	int3   
   140018c99:	int3   
   140018c9a:	int3   
   140018c9b:	int3   
   140018c9c:	int3   
   140018c9d:	int3   
   140018c9e:	int3   
   140018c9f:	int3   
   140018ca0:	mov    rax,QWORD PTR [rcx+0x40]
   140018ca4:	movzx  edx,dl
   140018ca7:	cmp    DWORD PTR [rax+rdx*4],0x0
   140018cab:	setge  al
   140018cae:	ret    
   140018caf:	int3   
   140018cb0:	rex push rbx
   140018cb2:	sub    rsp,0x30
   140018cb6:	mov    r9,QWORD PTR [rcx+0x8]
   140018cba:	mov    ebx,edx
   140018cbc:	mov    r10,r8
   140018cbf:	cmp    BYTE PTR [r9+0x5e],0x0
   140018cc4:	lea    rdx,[r9+0x5e]
   140018cc8:	mov    r11,rcx
   140018ccb:	je     0x140018d00
   140018ccd:	mov    rax,QWORD PTR [r9+0x30]
   140018cd1:	cmp    QWORD PTR [rax+0x128],0x0
   140018cd9:	je     0x140018ce2
   140018cdb:	movsx  eax,BYTE PTR [r9+0x5f]
   140018ce0:	jmp    0x140018cf4
   140018ce2:	xor    eax,eax
   140018ce4:	mov    ecx,0xff
   140018ce9:	cmp    WORD PTR [r9+0x8c],cx
   140018cf1:	setbe  al
   140018cf4:	test   eax,eax
   140018cf6:	je     0x140018d00
   140018cf8:	mov    r8d,0x1
   140018cfe:	jmp    0x140018d09
   140018d00:	mov    rdx,QWORD PTR [r9+0x28]
   140018d04:	movsx  r8d,BYTE PTR [r9+0x59]
   140018d09:	mov    rax,QWORD PTR [r9+0x30]
   140018d0d:	mov    BYTE PTR [r9+0x5f],0x0
   140018d12:	cmp    BYTE PTR [rax+0x104],0xc
   140018d19:	jne    0x140018d97
   140018d1b:	sub    r8d,0x1
   140018d1f:	lea    rcx,[rsp+0x40]
   140018d24:	je     0x140018d65
   140018d26:	cmp    r8d,0x1
   140018d2a:	je     0x140018d39
   140018d2c:	mov    DWORD PTR [r10],0x1
   140018d33:	add    rsp,0x30
   140018d37:	pop    rbx
   140018d38:	ret    
   140018d39:	cmp    DWORD PTR [r9+0x50],0x1
   140018d3e:	ja     0x140018d52
   140018d40:	mov    DWORD PTR [r9+0x50],0x2
   140018d48:	lea    rcx,[rsp+0x41]
   140018d4d:	mov    BYTE PTR [rsp+0x40],0xe
   140018d52:	movzx  eax,BYTE PTR [rdx]
   140018d55:	add    rcx,0x2
   140018d59:	mov    BYTE PTR [rcx-0x2],al
   140018d5c:	movzx  eax,BYTE PTR [rdx+0x1]
   140018d60:	mov    BYTE PTR [rcx-0x1],al
   140018d63:	jmp    0x140018d87
   140018d65:	cmp    DWORD PTR [r9+0x50],0x2
   140018d6a:	jne    0x140018d7e
   140018d6c:	mov    DWORD PTR [r9+0x50],0x1
   140018d74:	lea    rcx,[rsp+0x41]
   140018d79:	mov    BYTE PTR [rsp+0x40],0xf
   140018d7e:	movzx  eax,BYTE PTR [rdx]
   140018d81:	inc    rcx
   140018d84:	mov    BYTE PTR [rcx-0x1],al
   140018d87:	lea    rax,[rsp+0x40]
   140018d8c:	mov    r8d,ecx
   140018d8f:	lea    rdx,[rsp+0x40]
   140018d94:	sub    r8d,eax
   140018d97:	mov    r9d,ebx
   140018d9a:	mov    rcx,r11
   140018d9d:	mov    QWORD PTR [rsp+0x20],r10
   140018da2:	call   0x140018db0
   140018da7:	add    rsp,0x30
   140018dab:	pop    rbx
   140018dac:	ret    
   140018dad:	int3   
   140018dae:	int3   
   140018daf:	int3   
   140018db0:	sub    rsp,0x48
   140018db4:	mov    r10,QWORD PTR [rsp+0x70]
   140018db9:	mov    r11d,r9d
   140018dbc:	cmp    DWORD PTR [r10],0x0
   140018dc0:	jg     0x140018deb
   140018dc2:	lea    rax,[rcx+0x30]
   140018dc6:	mov    QWORD PTR [rsp+0x38],r10
   140018dcb:	mov    DWORD PTR [rsp+0x30],r11d
   140018dd0:	mov    QWORD PTR [rsp+0x28],rax
   140018dd5:	mov    rax,QWORD PTR [rcx+0x28]
   140018dd9:	lea    r9,[rcx+0x20]
   140018ddd:	mov    rcx,QWORD PTR [rcx+0x8]
   140018de1:	mov    QWORD PTR [rsp+0x20],rax
   140018de6:	call   0x14002a710
   140018deb:	add    rsp,0x48
   140018def:	ret    
   140018df0:	mov    rax,rsp
   140018df3:	mov    QWORD PTR [rax+0x18],rbx
   140018df7:	mov    QWORD PTR [rax+0x20],rsi
   140018dfb:	push   r12
   140018dfd:	push   r13
   140018dff:	push   r14
   140018e01:	sub    rsp,0x50
   140018e05:	mov    rsi,QWORD PTR [rsp+0x90]
   140018e0d:	mov    r12d,r9d
   140018e10:	mov    r13,r8
   140018e13:	cmp    DWORD PTR [rsi],0x0
   140018e16:	mov    r14,rdx
   140018e19:	mov    rbx,rcx
   140018e1c:	jg     0x140018f27
   140018e22:	mov    QWORD PTR [rax-0x30],rsi
   140018e26:	mov    BYTE PTR [rax-0x38],0x0
   140018e2a:	mov    QWORD PTR [rax+0x8],rbp
   140018e2e:	mov    QWORD PTR [rax-0x40],0x0
   140018e36:	mov    QWORD PTR [rax+0x10],rdi
   140018e3a:	mov    rdi,QWORD PTR [rcx+0x20]
   140018e3e:	mov    QWORD PTR [rax-0x48],r8
   140018e42:	mov    r8,QWORD PTR [rcx+0x28]
   140018e46:	mov    r9,rdx
   140018e49:	lea    rdx,[rcx+0x20]
   140018e4d:	mov    rcx,QWORD PTR [rcx+0x8]
   140018e51:	call   0x14000e800
   140018e56:	cmp    QWORD PTR [rbx+0x30],0x0
   140018e5b:	je     0x140018e85
   140018e5d:	cmp    QWORD PTR [rbx+0x20],rdi
   140018e61:	je     0x140018e85
   140018e63:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018e70:	mov    rax,QWORD PTR [rbx+0x30]
   140018e74:	inc    rdi
   140018e77:	mov    DWORD PTR [rax],r12d
   140018e7a:	add    QWORD PTR [rbx+0x30],0x4
   140018e7f:	cmp    QWORD PTR [rbx+0x20],rdi
   140018e83:	jne    0x140018e70
   140018e85:	cmp    DWORD PTR [rsi],0xf
   140018e88:	mov    rbp,QWORD PTR [rsp+0x70]
   140018e8d:	jne    0x140018f22
   140018e93:	mov    rdx,QWORD PTR [rbx+0x8]
   140018e97:	mov    DWORD PTR [rsp+0x90],0x0
   140018ea2:	movsx  rax,BYTE PTR [rdx+0x5b]
   140018ea7:	lea    rdi,[rdx+0x88]
   140018eae:	lea    rcx,[rax+rdx*1+0x68]
   140018eb3:	mov    QWORD PTR [rsp+0x40],rcx
   140018eb8:	cmp    rcx,rdi
   140018ebb:	jae    0x140018f1c
   140018ebd:	mov    BYTE PTR [rdx+0x5b],0x0
   140018ec1:	mov    rcx,QWORD PTR [rbx+0x8]
   140018ec5:	lea    rax,[rsp+0x90]
   140018ecd:	mov    QWORD PTR [rsp+0x38],rax
   140018ed2:	mov    BYTE PTR [rsp+0x30],0x0
   140018ed7:	lea    rdx,[rsp+0x40]
   140018edc:	mov    r9,r14
   140018edf:	mov    r8,rdi
   140018ee2:	mov    QWORD PTR [rsp+0x28],0x0
   140018eeb:	mov    QWORD PTR [rsp+0x20],r13
   140018ef0:	call   0x14000e800
   140018ef5:	movzx  r11d,BYTE PTR [rsp+0x40]
   140018efb:	sub    r11b,BYTE PTR [rbx+0x8]
   140018eff:	mov    rax,QWORD PTR [rbx+0x8]
   140018f03:	sub    r11b,0x68
   140018f07:	mov    BYTE PTR [rax+0x5b],r11b
   140018f0b:	cmp    QWORD PTR [rsp+0x40],rdi
   140018f10:	jae    0x140018f1c
   140018f12:	cmp    DWORD PTR [rsp+0x90],0xf
   140018f1a:	jne    0x140018f22
   140018f1c:	mov    DWORD PTR [rsi],0x5
   140018f22:	mov    rdi,QWORD PTR [rsp+0x78]
   140018f27:	lea    r11,[rsp+0x50]
   140018f2c:	mov    rbx,QWORD PTR [r11+0x30]
   140018f30:	mov    rsi,QWORD PTR [r11+0x38]
   140018f34:	mov    rsp,r11
   140018f37:	pop    r14
   140018f39:	pop    r13
   140018f3b:	pop    r12
   140018f3d:	ret    
   140018f3e:	int3   
   140018f3f:	int3   
   140018f40:	rex push rbx
   140018f42:	sub    rsp,0x30
   140018f46:	cmp    DWORD PTR [r8],0x0
   140018f4a:	mov    r9,r8
   140018f4d:	mov    ebx,edx
   140018f4f:	mov    r10,rcx
   140018f52:	jg     0x140018fff
   140018f58:	mov    rdx,QWORD PTR [rcx+0x8]
   140018f5c:	movsx  r11,BYTE PTR [rdx+0x59]
   140018f61:	test   r11d,r11d
   140018f64:	je     0x140018fff
   140018f6a:	jns    0x140018f96
   140018f6c:	mov    r8,QWORD PTR [rdx+0x28]
   140018f70:	mov    rax,r11
   140018f73:	mov    QWORD PTR [rsp+0x20],r9
   140018f78:	add    rax,rax
   140018f7b:	mov    QWORD PTR [rsp+0x50],r8
   140018f80:	lea    rdx,[rsp+0x50]
   140018f85:	sub    r8,rax
   140018f88:	mov    r9d,ebx
   140018f8b:	call   0x140018df0
   140018f90:	add    rsp,0x30
   140018f94:	pop    rbx
   140018f95:	ret    
   140018f96:	mov    rax,QWORD PTR [rdx+0x30]
   140018f9a:	mov    rcx,QWORD PTR [rax+0x28]
   140018f9e:	mov    rax,QWORD PTR [rcx+0x68]
   140018fa2:	test   rax,rax
   140018fa5:	je     0x140018fb4
   140018fa7:	mov    edx,ebx
   140018fa9:	mov    rcx,r10
   140018fac:	add    rsp,0x30
   140018fb0:	pop    rbx
   140018fb1:	rex.W jmp rax
   140018fb4:	cmp    BYTE PTR [rdx+0x5e],0x0
   140018fb8:	je     0x140018fe8
   140018fba:	mov    ecx,0xff
   140018fbf:	cmp    WORD PTR [rdx+0x8c],cx
   140018fc6:	ja     0x140018fe8
   140018fc8:	mov    QWORD PTR [rsp+0x20],r8
   140018fcd:	add    rdx,0x5e
   140018fd1:	mov    r9d,ebx
   140018fd4:	mov    r8d,0x1
   140018fda:	mov    rcx,r10
   140018fdd:	call   0x140018db0
   140018fe2:	add    rsp,0x30
   140018fe6:	pop    rbx
   140018fe7:	ret    
   140018fe8:	mov    rdx,QWORD PTR [rdx+0x28]
   140018fec:	mov    QWORD PTR [rsp+0x20],r8
   140018ff1:	mov    r9d,ebx
   140018ff4:	mov    r8d,r11d
   140018ff7:	mov    rcx,r10
   140018ffa:	call   0x140018db0
   140018fff:	add    rsp,0x30
   140019003:	pop    rbx
   140019004:	ret    
   140019005:	int3   
   140019006:	int3   
   140019007:	int3   
   140019008:	int3   
   140019009:	int3   
   14001900a:	int3   
   14001900b:	int3   
   14001900c:	int3   
   14001900d:	int3   
   14001900e:	int3   
   14001900f:	int3   
   140019010:	sub    rsp,0x48
   140019014:	mov    r10,rcx
   140019017:	mov    rcx,QWORD PTR [rcx+0x8]
   14001901b:	cmp    BYTE PTR [rcx+0x5a],0x1
   14001901f:	jne    0x14001903f
   140019021:	cmp    BYTE PTR [rcx+0x5e],0x0
   140019025:	je     0x14001903f
   140019027:	cmp    DWORD PTR [r8],0x0
   14001902b:	jg     0x140019076
   14001902d:	mov    QWORD PTR [rsp+0x38],r8
   140019032:	mov    DWORD PTR [rsp+0x30],edx
   140019036:	lea    rdx,[rip+0x3095b]        # 0x140049998
   14001903d:	jmp    0x140019055
   14001903f:	cmp    DWORD PTR [r8],0x0
   140019043:	jg     0x140019076
   140019045:	mov    QWORD PTR [rsp+0x38],r8
   14001904a:	mov    DWORD PTR [rsp+0x30],edx
   14001904e:	lea    rdx,[rip+0x30947]        # 0x14004999c
   140019055:	lea    rax,[r10+0x30]
   140019059:	lea    r9,[r10+0x20]
   14001905d:	mov    r8d,0x1
   140019063:	mov    QWORD PTR [rsp+0x28],rax
   140019068:	mov    rax,QWORD PTR [r10+0x28]
   14001906c:	mov    QWORD PTR [rsp+0x20],rax
   140019071:	call   0x14002a7e0
   140019076:	add    rsp,0x48
   14001907a:	ret    
   14001907b:	int3   
   14001907c:	int3   
   14001907d:	int3   
   14001907e:	int3   
   14001907f:	int3   
   140019080:	cmp    edx,0x1
   140019083:	jg     0x140019092
   140019085:	mov    DWORD PTR [rcx+0x48],0x1000000
   14001908c:	mov    BYTE PTR [rcx+0x40],0x0
   140019090:	je     0x1400190a0
   140019092:	and    DWORD PTR [rcx+0x50],0xf1000000
   140019099:	or     DWORD PTR [rcx+0x50],0x1000000
   1400190a0:	repz ret 
   1400190a2:	int3   
   1400190a3:	int3   
   1400190a4:	int3   
   1400190a5:	int3   
   1400190a6:	int3   
   1400190a7:	int3   
   1400190a8:	int3   
   1400190a9:	int3   
   1400190aa:	int3   
   1400190ab:	int3   
   1400190ac:	int3   
   1400190ad:	int3   
   1400190ae:	int3   
   1400190af:	int3   
   1400190b0:	mov    edx,DWORD PTR [rcx+0x38]
   1400190b3:	mov    eax,edx
   1400190b5:	and    al,0xf
   1400190b7:	cmp    al,0x1
   1400190b9:	ja     0x1400190d1
   1400190bb:	shl    edx,0x1c
   1400190be:	mov    DWORD PTR [rcx+0x48],0x1000000
   1400190c5:	mov    BYTE PTR [rcx+0x40],0x0
   1400190c9:	bts    edx,0x18
   1400190cd:	mov    DWORD PTR [rcx+0x50],edx
   1400190d0:	ret    
   1400190d1:	mov    DWORD PTR [r8],0x1
   1400190d8:	ret    
   1400190d9:	int3   
   1400190da:	int3   
   1400190db:	int3   
   1400190dc:	int3   
   1400190dd:	int3   
   1400190de:	int3   
   1400190df:	int3   
   1400190e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400190e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400190ea:	push   rbx
   1400190eb:	push   rbp
   1400190ec:	push   rsi
   1400190ed:	push   rdi
   1400190ee:	push   r12
   1400190f0:	push   r13
   1400190f2:	push   r14
   1400190f4:	push   r15
   1400190f6:	mov    r14,QWORD PTR [rcx+0x8]
   1400190fa:	mov    r9,QWORD PTR [rcx+0x28]
   1400190fe:	mov    r10,QWORD PTR [rcx+0x10]
   140019102:	mov    r15,QWORD PTR [rcx+0x18]
   140019106:	mov    rsi,QWORD PTR [rcx+0x20]
   14001910a:	mov    r8,QWORD PTR [rcx+0x30]
   14001910e:	mov    r12d,DWORD PTR [r14+0x48]
   140019112:	mov    bpl,BYTE PTR [r14+0x40]
   140019116:	mov    QWORD PTR [rsp+0x60],r9
   14001911b:	movzx  eax,bpl
   14001911f:	mov    ecx,r12d
   140019122:	mov    r13d,r12d
   140019125:	shr    ecx,0x18
   140019128:	shr    r13d,0x10
   14001912c:	and    cl,0x1
   14001912f:	neg    al
   140019131:	sbb    r11d,r11d
   140019134:	xor    eax,eax
   140019136:	mov    DWORD PTR [rsp+0x58],ecx
   14001913a:	mov    ebx,eax
   14001913c:	test   cl,cl
   14001913e:	je     0x1400191c5
   140019144:	mov    edi,DWORD PTR [rsp+0x58]
   140019148:	mov    rax,r9
   14001914b:	mov    edx,r15d
   14001914e:	xor    bpl,bpl
   140019151:	sub    rax,rsi
   140019154:	sub    edx,r10d
   140019157:	sar    rax,1
   14001915a:	cmp    edx,eax
   14001915c:	cmovg  edx,eax
   14001915f:	nop
   140019160:	test   edx,edx
   140019162:	jle    0x140019425
   140019168:	movzx  ecx,BYTE PTR [r10]
   14001916c:	inc    r10
   14001916f:	lea    eax,[rcx-0x20]
   140019172:	cmp    al,0x5e
   140019174:	jae    0x14001917b
   140019176:	cmp    cl,0x5c
   140019179:	jne    0x14001918e
   14001917b:	cmp    cl,0xd
   14001917e:	je     0x14001918e
   140019180:	cmp    cl,0xa
   140019183:	je     0x14001918e
   140019185:	cmp    cl,0x9
   140019188:	jne    0x14001938d
   14001918e:	cmp    cl,0x2b
   140019191:	je     0x1400191b1
   140019193:	movzx  eax,cl
   140019196:	add    rsi,0x2
   14001919a:	mov    WORD PTR [rsi-0x2],ax
   14001919e:	test   r8,r8
   1400191a1:	je     0x1400191ad
   1400191a3:	mov    DWORD PTR [r8],r11d
   1400191a6:	add    r8,0x4
   1400191aa:	inc    r11d
   1400191ad:	dec    edx
   1400191af:	jmp    0x140019160
   1400191b1:	inc    r11d
   1400191b4:	xor    bpl,bpl
   1400191b7:	mov    BYTE PTR [rsp+0x58],0x0
   1400191bc:	xor    r12d,r12d
   1400191bf:	mov    r13b,0xff
   1400191c2:	mov    ebx,r11d
   1400191c5:	lea    edi,[rbx-0x1]
   1400191c8:	lea    rcx,[rip+0xfffffffffffe6e31]        # 0x140000000
   1400191cf:	jmp    0x1400191e0
   1400191d1:	lea    rcx,[rip+0xfffffffffffe6e28]        # 0x140000000
   1400191d8:	mov    r9,QWORD PTR [rsp+0x60]
   1400191dd:	nop    DWORD PTR [rax]
   1400191e0:	cmp    r10,r15
   1400191e3:	jae    0x14001943f
   1400191e9:	cmp    rsi,r9
   1400191ec:	jae    0x140019418
   1400191f2:	movzx  r9d,BYTE PTR [r10]
   1400191f6:	movzx  eax,bpl
   1400191fa:	inc    r10
   1400191fd:	inc    bpl
   140019200:	inc    ebx
   140019202:	inc    edi
   140019204:	mov    BYTE PTR [rax+r14*1+0x41],r9b
   140019209:	cmp    r9b,0x7e
   14001920d:	jae    0x140019408
   140019213:	movzx  eax,r9b
   140019217:	movzx  edx,BYTE PTR [rax+rcx*1+0x49ae0]
   14001921f:	test   dl,dl
   140019221:	js     0x140019317
   140019227:	movsx  eax,r13b
   14001922b:	inc    eax
   14001922d:	cmp    eax,0x8
   140019230:	ja     0x1400191d8
   140019232:	cdqe   
   140019234:	mov    ecx,DWORD PTR [rcx+rax*4+0x19480]
   14001923b:	lea    rax,[rip+0xfffffffffffe6dbe]        # 0x140000000
   140019242:	add    rcx,rax
   140019245:	jmp    rcx
   140019247:	movsx  r12d,dl
   14001924b:	mov    r13b,0x1
   14001924e:	jmp    0x1400191d1
   140019250:	shl    r12w,0x6
   140019255:	movsx  eax,dl
   140019258:	or     r12w,ax
   14001925c:	inc    r13b
   14001925f:	jmp    0x1400191d1
   140019264:	shl    r12w,0x4
   140019269:	movzx  eax,dl
   14001926c:	add    rsi,0x2
   140019270:	sar    al,0x2
   140019273:	movsx  ecx,al
   140019276:	or     cx,r12w
   14001927a:	mov    WORD PTR [rsi-0x2],cx
   14001927e:	test   r8,r8
   140019281:	je     0x14001928d
   140019283:	mov    DWORD PTR [r8],r11d
   140019286:	add    r8,0x4
   14001928a:	mov    r11d,edi
   14001928d:	and    dl,0x3
   140019290:	mov    BYTE PTR [r14+0x41],r9b
   140019294:	mov    bpl,0x1
   140019297:	movsx  r12d,dl
   14001929b:	mov    r13b,0x3
   14001929e:	jmp    0x1400191d1
   1400192a3:	shl    r12w,0x2
   1400192a8:	movzx  eax,dl
   1400192ab:	add    rsi,0x2
   1400192af:	sar    al,0x4
   1400192b2:	movsx  ecx,al
   1400192b5:	or     cx,r12w
   1400192b9:	mov    WORD PTR [rsi-0x2],cx
   1400192bd:	test   r8,r8
   1400192c0:	je     0x1400192cc
   1400192c2:	mov    DWORD PTR [r8],r11d
   1400192c5:	add    r8,0x4
   1400192c9:	mov    r11d,edi
   1400192cc:	and    dl,0xf
   1400192cf:	mov    BYTE PTR [r14+0x41],r9b
   1400192d3:	mov    bpl,0x1
   1400192d6:	movsx  r12d,dl
   1400192da:	mov    r13b,0x6
   1400192dd:	jmp    0x1400191d1
   1400192e2:	shl    r12w,0x6
   1400192e7:	movsx  eax,dl
   1400192ea:	add    rsi,0x2
   1400192ee:	or     r12w,ax
   1400192f2:	mov    WORD PTR [rsi-0x2],r12w
   1400192f7:	test   r8,r8
   1400192fa:	je     0x140019306
   1400192fc:	mov    DWORD PTR [r8],r11d
   1400192ff:	add    r8,0x4
   140019303:	mov    r11d,ebx
   140019306:	xor    eax,eax
   140019308:	xor    bpl,bpl
   14001930b:	xor    r13b,r13b
   14001930e:	mov    r12w,ax
   140019312:	jmp    0x1400191d1
   140019317:	cmp    dl,0xfe
   14001931a:	jne    0x140019365
   14001931c:	mov    BYTE PTR [rsp+0x58],0x1
   140019321:	cmp    r13b,0xff
   140019325:	jne    0x140019352
   140019327:	mov    eax,0x2b
   14001932c:	add    rsi,0x2
   140019330:	mov    WORD PTR [rsi-0x2],ax
   140019334:	test   r8,r8
   140019337:	je     0x140019358
   140019339:	mov    r9,QWORD PTR [rsp+0x60]
   14001933e:	lea    eax,[r11-0x1]
   140019342:	add    r8,0x4
   140019346:	mov    DWORD PTR [r8-0x4],eax
   14001934a:	mov    r11d,ebx
   14001934d:	jmp    0x140019144
   140019352:	test   r12w,r12w
   140019356:	jne    0x1400193a4
   140019358:	mov    r9,QWORD PTR [rsp+0x60]
   14001935d:	mov    r11d,ebx
   140019360:	jmp    0x140019144
   140019365:	mov    dil,0x1
   140019368:	cmp    dl,0xff
   14001936b:	jne    0x1400193fb
   140019371:	cmp    r13b,dl
   140019374:	je     0x1400193ef
   140019376:	test   r12w,r12w
   14001937a:	jne    0x1400193fb
   14001937c:	mov    r9,QWORD PTR [rsp+0x60]
   140019381:	dec    r10
   140019384:	lea    r11d,[rbx-0x1]
   140019388:	jmp    0x140019148
   14001938d:	mov    rax,QWORD PTR [rsp+0x50]
   140019392:	mov    BYTE PTR [r14+0x41],cl
   140019396:	mov    bpl,0x1
   140019399:	mov    DWORD PTR [rax],0xc
   14001939f:	jmp    0x14001942a
   1400193a4:	mov    rax,QWORD PTR [rsp+0x50]
   1400193a9:	mov    DWORD PTR [rax],0xc
   1400193af:	mov    edi,DWORD PTR [rsp+0x58]
   1400193b3:	mov    rdx,QWORD PTR [rsp+0x48]
   1400193b8:	mov    BYTE PTR [r14+0x40],bpl
   1400193bc:	movzx  eax,r13b
   1400193c0:	movsx  ecx,dil
   1400193c4:	shl    ecx,0x8
   1400193c7:	or     ecx,eax
   1400193c9:	movzx  eax,r12w
   1400193cd:	shl    ecx,0x10
   1400193d0:	or     ecx,eax
   1400193d2:	mov    DWORD PTR [r14+0x48],ecx
   1400193d6:	mov    QWORD PTR [rdx+0x10],r10
   1400193da:	mov    QWORD PTR [rdx+0x20],rsi
   1400193de:	mov    QWORD PTR [rdx+0x30],r8
   1400193e2:	pop    r15
   1400193e4:	pop    r14
   1400193e6:	pop    r13
   1400193e8:	pop    r12
   1400193ea:	pop    rdi
   1400193eb:	pop    rsi
   1400193ec:	pop    rbp
   1400193ed:	pop    rbx
   1400193ee:	ret    
   1400193ef:	mov    BYTE PTR [r14+0x41],0x2b
   1400193f4:	mov    BYTE PTR [r14+0x42],r9b
   1400193f8:	mov    bpl,0x2
   1400193fb:	mov    rax,QWORD PTR [rsp+0x50]
   140019400:	mov    DWORD PTR [rax],0xc
   140019406:	jmp    0x1400193b3
   140019408:	mov    rax,QWORD PTR [rsp+0x50]
   14001940d:	mov    dil,0x1
   140019410:	mov    DWORD PTR [rax],0xc
   140019416:	jmp    0x1400193b3
   140019418:	mov    rax,QWORD PTR [rsp+0x50]
   14001941d:	mov    DWORD PTR [rax],0xf
   140019423:	jmp    0x1400193af
   140019425:	mov    rax,QWORD PTR [rsp+0x50]
   14001942a:	cmp    r10,r15
   14001942d:	jae    0x140019443
   14001942f:	cmp    rsi,r9
   140019432:	jb     0x140019443
   140019434:	mov    DWORD PTR [rax],0xf
   14001943a:	jmp    0x1400193b3
   14001943f:	mov    edi,DWORD PTR [rsp+0x58]
   140019443:	mov    rax,QWORD PTR [rsp+0x50]
   140019448:	cmp    DWORD PTR [rax],0x0
   14001944b:	jg     0x1400193b3
   140019451:	mov    rdx,QWORD PTR [rsp+0x48]
   140019456:	cmp    BYTE PTR [rdx+0x2],0x0
   14001945a:	je     0x1400193b8
   140019460:	cmp    r10,r15
   140019463:	jne    0x1400193b8
   140019469:	movzx  ebp,bpl
   14001946d:	test   r12w,r12w
   140019471:	mov    eax,0x0
   140019476:	cmove  ebp,eax
   140019479:	jmp    0x1400193b8
   14001947e:	xchg   ax,ax
   140019480:	rex.RXB xchg r10d,eax
   140019482:	add    DWORD PTR [rax],eax
   140019484:	rex.RXB xchg r10d,eax
   140019486:	add    DWORD PTR [rax],eax
   140019488:	push   rax
   140019489:	xchg   edx,eax
   14001948a:	add    DWORD PTR [rax],eax
   14001948c:	fs xchg edx,eax
   14001948e:	add    DWORD PTR [rax],eax
   140019490:	push   rax
   140019491:	xchg   edx,eax
   140019492:	add    DWORD PTR [rax],eax
   140019494:	push   rax
   140019495:	xchg   edx,eax
   140019496:	add    DWORD PTR [rax],eax
   140019498:	movabs ds:0xe200019250000192,eax
   1400194a1:	xchg   edx,eax
   1400194a2:	add    DWORD PTR [rax],eax
   1400194a4:	int3   
   1400194a5:	int3   
   1400194a6:	int3   
   1400194a7:	int3   
   1400194a8:	int3   
   1400194a9:	int3   
   1400194aa:	int3   
   1400194ab:	int3   
   1400194ac:	int3   
   1400194ad:	int3   
   1400194ae:	int3   
   1400194af:	int3   
   1400194b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400194b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400194ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400194bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400194c4:	push   rdi
   1400194c5:	push   r12
   1400194c7:	push   r13
   1400194c9:	push   r14
   1400194cb:	push   r15
   1400194cd:	mov    rsi,QWORD PTR [rcx+0x8]
   1400194d1:	mov    rdi,QWORD PTR [rcx+0x10]
   1400194d5:	mov    r14,QWORD PTR [rcx+0x18]
   1400194d9:	mov    ebx,DWORD PTR [rsi+0x50]
   1400194dc:	mov    r9,QWORD PTR [rcx+0x20]
   1400194e0:	mov    rbp,QWORD PTR [rcx+0x28]
   1400194e4:	mov    r8,QWORD PTR [rcx+0x30]
   1400194e8:	cmp    ebx,0x10000000
   1400194ee:	lea    rax,[rip+0x304ab]        # 0x1400499a0
   1400194f5:	lea    r13,[rip+0x30524]        # 0x140049a20
   1400194fc:	mov    r15d,ebx
   1400194ff:	mov    r11d,ebx
   140019502:	cmovb  r13,rax
   140019506:	shr    r15d,0x18
   14001950a:	mov    r12,rdx
   14001950d:	shr    r11d,0x10
   140019511:	xor    edx,edx
   140019513:	and    r15b,0x1
   140019517:	lea    rcx,[rip+0xfffffffffffe6ae2]        # 0x140000000
   14001951e:	je     0x1400195d0
   140019524:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019530:	mov    r10,r14
   140019533:	mov    eax,ebp
   140019535:	sub    r10,rdi
   140019538:	sub    eax,r9d
   14001953b:	sar    r10,1
   14001953e:	cmp    r10d,eax
   140019541:	cmovg  r10d,eax
   140019545:	test   r10d,r10d
   140019548:	jle    0x14001996e
   14001954e:	movzx  ecx,WORD PTR [rdi]
   140019551:	add    rdi,0x2
   140019555:	cmp    cx,0x7f
   140019559:	ja     0x14001957e
   14001955b:	movzx  eax,cx
   14001955e:	cmp    BYTE PTR [rax+r13*1],0x0
   140019563:	je     0x14001957e
   140019565:	mov    BYTE PTR [r9],cl
   140019568:	inc    r9
   14001956b:	test   r8,r8
   14001956e:	je     0x140019579
   140019570:	mov    DWORD PTR [r8],edx
   140019573:	add    r8,0x4
   140019577:	inc    edx
   140019579:	dec    r10d
   14001957c:	jmp    0x140019545
   14001957e:	mov    BYTE PTR [r9],0x2b
   140019582:	inc    r9
   140019585:	cmp    cx,0x2b
   140019589:	jne    0x1400195af
   14001958b:	cmp    r9,rbp
   14001958e:	jae    0x140019950
   140019594:	mov    BYTE PTR [r9],0x2d
   140019598:	inc    r9
   14001959b:	test   r8,r8
   14001959e:	je     0x140019530
   1400195a0:	mov    DWORD PTR [r8],edx
   1400195a3:	mov    DWORD PTR [r8+0x4],edx
   1400195a7:	add    r8,0x8
   1400195ab:	inc    edx
   1400195ad:	jmp    0x140019530
   1400195af:	sub    rdi,0x2
   1400195b3:	test   r8,r8
   1400195b6:	je     0x1400195bf
   1400195b8:	mov    DWORD PTR [r8],edx
   1400195bb:	add    r8,0x4
   1400195bf:	xor    r15b,r15b
   1400195c2:	lea    rcx,[rip+0xfffffffffffe6a37]        # 0x140000000
   1400195c9:	xor    r11b,r11b
   1400195cc:	nop    DWORD PTR [rax+0x0]
   1400195d0:	cmp    rdi,r14
   1400195d3:	jae    0x140019987
   1400195d9:	cmp    r9,rbp
   1400195dc:	jae    0x14001997f
   1400195e2:	movzx  r10d,WORD PTR [rdi]
   1400195e6:	add    rdi,0x2
   1400195ea:	cmp    r10w,0x7f
   1400195ef:	ja     0x140019600
   1400195f1:	movzx  eax,r10w
   1400195f5:	cmp    BYTE PTR [rax+r13*1],0x0
   1400195fa:	jne    0x1400198e7
   140019600:	movsx  ecx,r11b
   140019604:	test   r11b,r11b
   140019607:	je     0x140019851
   14001960d:	sub    ecx,0x1
   140019610:	je     0x14001972e
   140019616:	cmp    ecx,0x1
   140019619:	lea    rcx,[rip+0xfffffffffffe69e0]        # 0x140000000
   140019620:	jne    0x1400195d0
   140019622:	movzx  eax,bl
   140019625:	movzx  r11d,r10w
   140019629:	lea    rbx,[rip+0xfffffffffffe69d0]        # 0x140000000
   140019630:	mov    rcx,r11
   140019633:	inc    r9
   140019636:	shr    rcx,0xc
   14001963a:	or     rcx,rax
   14001963d:	movzx  eax,BYTE PTR [rcx+rbx*1+0x49aa0]
   140019645:	mov    BYTE PTR [r9-0x1],al
   140019649:	cmp    r9,rbp
   14001964c:	jae    0x1400196e1
   140019652:	mov    rax,r11
   140019655:	lea    rcx,[rip+0xfffffffffffe69a4]        # 0x140000000
   14001965c:	inc    r9
   14001965f:	shr    rax,0x6
   140019663:	and    eax,0x3f
   140019666:	movzx  eax,BYTE PTR [rax+rcx*1+0x49aa0]
   14001966e:	mov    BYTE PTR [r9-0x1],al
   140019672:	cmp    r9,rbp
   140019675:	jae    0x1400196ac
   140019677:	and    r11d,0x3f
   14001967b:	inc    r9
   14001967e:	movzx  eax,BYTE PTR [r11+rcx*1+0x49aa0]
   140019687:	mov    BYTE PTR [r9-0x1],al
   14001968b:	test   r8,r8
   14001968e:	je     0x140019727
   140019694:	mov    DWORD PTR [r8],edx
   140019697:	mov    DWORD PTR [r8+0x4],edx
   14001969b:	mov    DWORD PTR [r8+0x8],edx
   14001969f:	add    r8,0xc
   1400196a3:	inc    edx
   1400196a5:	xor    bl,bl
   1400196a7:	jmp    0x1400195c9
   1400196ac:	test   r8,r8
   1400196af:	je     0x1400196be
   1400196b1:	mov    DWORD PTR [r8],edx
   1400196b4:	mov    DWORD PTR [r8+0x4],edx
   1400196b8:	add    r8,0x8
   1400196bc:	inc    edx
   1400196be:	and    r11d,0x3f
   1400196c2:	xor    bl,bl
   1400196c4:	movzx  eax,BYTE PTR [r11+rcx*1+0x49aa0]
   1400196cd:	mov    BYTE PTR [rsi+0x5b],0x1
   1400196d1:	mov    BYTE PTR [rsi+0x68],al
   1400196d4:	mov    DWORD PTR [r12],0xf
   1400196dc:	jmp    0x1400195c9
   1400196e1:	test   r8,r8
   1400196e4:	je     0x1400196ef
   1400196e6:	mov    DWORD PTR [r8],edx
   1400196e9:	add    r8,0x4
   1400196ed:	inc    edx
   1400196ef:	mov    rax,r11
   1400196f2:	lea    rcx,[rip+0xfffffffffffe6907]        # 0x140000000
   1400196f9:	shr    rax,0x6
   1400196fd:	and    eax,0x3f
   140019700:	and    r11d,0x3f
   140019704:	movzx  eax,BYTE PTR [rax+rcx*1+0x49aa0]
   14001970c:	mov    BYTE PTR [rsi+0x68],al
   14001970f:	movzx  eax,BYTE PTR [r11+rcx*1+0x49aa0]
   140019718:	mov    BYTE PTR [rsi+0x5b],0x2
   14001971c:	mov    BYTE PTR [rsi+0x69],al
   14001971f:	mov    DWORD PTR [r12],0xf
   140019727:	xor    bl,bl
   140019729:	jmp    0x1400195c9
   14001972e:	movzx  eax,bl
   140019731:	movzx  r11d,r10w
   140019735:	lea    rbx,[rip+0xfffffffffffe68c4]        # 0x140000000
   14001973c:	mov    rcx,r11
   14001973f:	inc    r9
   140019742:	shr    rcx,0xe
   140019746:	or     rcx,rax
   140019749:	movzx  eax,BYTE PTR [rcx+rbx*1+0x49aa0]
   140019751:	mov    BYTE PTR [r9-0x1],al
   140019755:	cmp    r9,rbp
   140019758:	jae    0x1400197f4
   14001975e:	mov    rax,r11
   140019761:	lea    rcx,[rip+0xfffffffffffe6898]        # 0x140000000
   140019768:	inc    r9
   14001976b:	shr    rax,0x8
   14001976f:	and    eax,0x3f
   140019772:	movzx  eax,BYTE PTR [rax+rcx*1+0x49aa0]
   14001977a:	mov    BYTE PTR [r9-0x1],al
   14001977e:	cmp    r9,rbp
   140019781:	jae    0x1400197c8
   140019783:	shr    r11,0x2
   140019787:	inc    r9
   14001978a:	and    r11d,0x3f
   14001978e:	movzx  eax,BYTE PTR [r11+rcx*1+0x49aa0]
   140019797:	mov    BYTE PTR [r9-0x1],al
   14001979b:	test   r8,r8
   14001979e:	je     0x14001983e
   1400197a4:	mov    DWORD PTR [r8],edx
   1400197a7:	mov    DWORD PTR [r8+0x4],edx
   1400197ab:	mov    DWORD PTR [r8+0x8],edx
   1400197af:	and    r10b,0x3
   1400197b3:	add    r8,0xc
   1400197b7:	inc    edx
   1400197b9:	shl    r10b,0x4
   1400197bd:	mov    r11b,0x2
   1400197c0:	mov    bl,r10b
   1400197c3:	jmp    0x1400195d0
   1400197c8:	test   r8,r8
   1400197cb:	je     0x1400197da
   1400197cd:	mov    DWORD PTR [r8],edx
   1400197d0:	mov    DWORD PTR [r8+0x4],edx
   1400197d4:	add    r8,0x8
   1400197d8:	inc    edx
   1400197da:	shr    r11,0x2
   1400197de:	and    r11d,0x3f
   1400197e2:	movzx  eax,BYTE PTR [r11+rcx*1+0x49aa0]
   1400197eb:	mov    BYTE PTR [rsi+0x5b],0x1
   1400197ef:	mov    BYTE PTR [rsi+0x68],al
   1400197f2:	jmp    0x140019836
   1400197f4:	test   r8,r8
   1400197f7:	je     0x140019802
   1400197f9:	mov    DWORD PTR [r8],edx
   1400197fc:	add    r8,0x4
   140019800:	inc    edx
   140019802:	mov    rax,r11
   140019805:	lea    rcx,[rip+0xfffffffffffe67f4]        # 0x140000000
   14001980c:	shr    r11,0x2
   140019810:	shr    rax,0x8
   140019814:	and    eax,0x3f
   140019817:	and    r11d,0x3f
   14001981b:	movzx  eax,BYTE PTR [rax+rcx*1+0x49aa0]
   140019823:	mov    BYTE PTR [rsi+0x68],al
   140019826:	movzx  eax,BYTE PTR [r11+rcx*1+0x49aa0]
   14001982f:	mov    BYTE PTR [rsi+0x5b],0x2
   140019833:	mov    BYTE PTR [rsi+0x69],al
   140019836:	mov    DWORD PTR [r12],0xf
   14001983e:	and    r10b,0x3
   140019842:	mov    r11b,0x2
   140019845:	shl    r10b,0x4
   140019849:	mov    bl,r10b
   14001984c:	jmp    0x1400195d0
   140019851:	movzx  ecx,r10w
   140019855:	lea    rbx,[rip+0xfffffffffffe67a4]        # 0x140000000
   14001985c:	inc    r9
   14001985f:	mov    rax,rcx
   140019862:	shr    rax,0xa
   140019866:	movzx  eax,BYTE PTR [rax+rbx*1+0x49aa0]
   14001986e:	mov    BYTE PTR [r9-0x1],al
   140019872:	cmp    r9,rbp
   140019875:	jae    0x1400198a1
   140019877:	shr    rcx,0x4
   14001987b:	inc    r9
   14001987e:	and    ecx,0x3f
   140019881:	movzx  eax,BYTE PTR [rcx+rbx*1+0x49aa0]
   140019889:	mov    BYTE PTR [r9-0x1],al
   14001988d:	test   r8,r8
   140019890:	je     0x1400198cd
   140019892:	mov    DWORD PTR [r8],edx
   140019895:	mov    DWORD PTR [r8+0x4],edx
   140019899:	add    r8,0x8
   14001989d:	inc    edx
   14001989f:	jmp    0x1400198cd
   1400198a1:	test   r8,r8
   1400198a4:	je     0x1400198af
   1400198a6:	mov    DWORD PTR [r8],edx
   1400198a9:	add    r8,0x4
   1400198ad:	inc    edx
   1400198af:	shr    rcx,0x4
   1400198b3:	and    ecx,0x3f
   1400198b6:	movzx  eax,BYTE PTR [rcx+rbx*1+0x49aa0]
   1400198be:	mov    BYTE PTR [rsi+0x5b],0x1
   1400198c2:	mov    BYTE PTR [rsi+0x68],al
   1400198c5:	mov    DWORD PTR [r12],0xf
   1400198cd:	and    r10b,0xf
   1400198d1:	mov    r11b,0x1
   1400198d4:	lea    rcx,[rip+0xfffffffffffe6725]        # 0x140000000
   1400198db:	shl    r10b,0x2
   1400198df:	mov    bl,r10b
   1400198e2:	jmp    0x1400195d0
   1400198e7:	sub    rdi,0x2
   1400198eb:	mov    r15b,0x1
   1400198ee:	test   r11b,r11b
   1400198f1:	je     0x140019915
   1400198f3:	movzx  eax,bl
   1400198f6:	inc    r9
   1400198f9:	movzx  eax,BYTE PTR [rax+rcx*1+0x49aa0]
   140019901:	mov    BYTE PTR [r9-0x1],al
   140019905:	test   r8,r8
   140019908:	je     0x140019915
   14001990a:	lea    eax,[rdx-0x1]
   14001990d:	add    r8,0x4
   140019911:	mov    DWORD PTR [r8-0x4],eax
   140019915:	movzx  eax,r10w
   140019919:	cmp    BYTE PTR [rax+rcx*1+0x49ae0],0xff
   140019921:	je     0x140019530
   140019927:	cmp    r9,rbp
   14001992a:	jae    0x1400199dd
   140019930:	mov    BYTE PTR [r9],0x2d
   140019934:	inc    r9
   140019937:	test   r8,r8
   14001993a:	je     0x140019530
   140019940:	lea    eax,[rdx-0x1]
   140019943:	add    r8,0x4
   140019947:	mov    DWORD PTR [r8-0x4],eax
   14001994b:	jmp    0x140019530
   140019950:	test   r8,r8
   140019953:	je     0x14001995e
   140019955:	mov    DWORD PTR [r8],edx
   140019958:	add    r8,0x4
   14001995c:	inc    edx
   14001995e:	mov    BYTE PTR [rsi+0x68],0x2d
   140019962:	mov    BYTE PTR [rsi+0x5b],0x1
   140019966:	mov    DWORD PTR [r12],0xf
   14001996e:	lea    rcx,[rip+0xfffffffffffe668b]        # 0x140000000
   140019975:	cmp    rdi,r14
   140019978:	jae    0x140019987
   14001997a:	cmp    r9,rbp
   14001997d:	jb     0x140019987
   14001997f:	mov    DWORD PTR [r12],0xf
   140019987:	mov    r10,QWORD PTR [rsp+0x30]
   14001998c:	cmp    BYTE PTR [r10+0x2],0x0
   140019991:	je     0x140019a1a
   140019997:	cmp    rdi,r14
   14001999a:	jb     0x140019a1a
   14001999c:	test   r15b,r15b
   14001999f:	jne    0x140019a0a
   1400199a1:	test   r11b,r11b
   1400199a4:	je     0x140019a0a
   1400199a6:	movzx  eax,bl
   1400199a9:	cmp    r9,rbp
   1400199ac:	jae    0x1400199e7
   1400199ae:	movzx  eax,BYTE PTR [rax+rcx*1+0x49aa0]
   1400199b6:	inc    r9
   1400199b9:	mov    BYTE PTR [r9-0x1],al
   1400199bd:	test   r8,r8
   1400199c0:	je     0x140019a0a
   1400199c2:	lea    eax,[rdx-0x1]
   1400199c5:	add    r8,0x4
   1400199c9:	mov    DWORD PTR [r8-0x4],eax
   1400199cd:	and    DWORD PTR [rsi+0x50],0xf1000000
   1400199d4:	or     DWORD PTR [rsi+0x50],0x1000000
   1400199db:	jmp    0x140019a39
   1400199dd:	mov    BYTE PTR [rsi+0x68],0x2d
   1400199e1:	mov    BYTE PTR [rsi+0x5b],0x1
   1400199e5:	jmp    0x14001997f
   1400199e7:	movsx  rcx,BYTE PTR [rsi+0x5b]
   1400199ec:	lea    rbx,[rip+0xfffffffffffe660d]        # 0x140000000
   1400199f3:	movzx  eax,BYTE PTR [rax+rbx*1+0x49aa0]
   1400199fb:	mov    BYTE PTR [rcx+rsi*1+0x68],al
   1400199ff:	inc    BYTE PTR [rsi+0x5b]
   140019a02:	mov    DWORD PTR [r12],0xf
   140019a0a:	and    DWORD PTR [rsi+0x50],0xf1000000
   140019a11:	or     DWORD PTR [rsi+0x50],0x1000000
   140019a18:	jmp    0x140019a39
   140019a1a:	and    DWORD PTR [rsi+0x50],0xf0000000
   140019a21:	movsx  eax,r11b
   140019a25:	movsx  ecx,r15b
   140019a29:	shl    ecx,0x8
   140019a2c:	or     ecx,eax
   140019a2e:	movzx  eax,bl
   140019a31:	shl    ecx,0x10
   140019a34:	or     ecx,eax
   140019a36:	or     DWORD PTR [rsi+0x50],ecx
   140019a39:	mov    rbx,QWORD PTR [rsp+0x38]
   140019a3e:	mov    rbp,QWORD PTR [rsp+0x40]
   140019a43:	mov    rsi,QWORD PTR [rsp+0x48]
   140019a48:	mov    QWORD PTR [r10+0x10],rdi
   140019a4c:	mov    QWORD PTR [r10+0x20],r9
   140019a50:	mov    QWORD PTR [r10+0x30],r8
   140019a54:	pop    r15
   140019a56:	pop    r14
   140019a58:	pop    r13
   140019a5a:	pop    r12
   140019a5c:	pop    rdi
   140019a5d:	ret    
   140019a5e:	int3   
   140019a5f:	int3   
   140019a60:	mov    eax,DWORD PTR [rcx+0x50]
   140019a63:	shr    eax,0x1c
   140019a66:	cmp    eax,0x1
   140019a69:	lea    rax,[rip+0x25390]        # 0x14003ee00
   140019a70:	jne    0x140019a79
   140019a72:	lea    rax,[rip+0x30547]        # 0x140049fc0
   140019a79:	repz ret 
   140019a7b:	int3   
   140019a7c:	int3   
   140019a7d:	int3   
   140019a7e:	int3   
   140019a7f:	int3   
   140019a80:	mov    QWORD PTR [rsp+0x10],rdx
   140019a85:	mov    QWORD PTR [rsp+0x8],rcx
   140019a8a:	push   rbx
   140019a8b:	push   rbp
   140019a8c:	push   rsi
   140019a8d:	push   rdi
   140019a8e:	push   r12
   140019a90:	push   r13
   140019a92:	push   r14
   140019a94:	push   r15
   140019a96:	mov    r14,QWORD PTR [rcx+0x8]
   140019a9a:	mov    rdi,QWORD PTR [rcx+0x18]
   140019a9e:	mov    r9,QWORD PTR [rcx+0x28]
   140019aa2:	mov    r13d,DWORD PTR [r14+0x48]
   140019aa6:	movzx  ebp,BYTE PTR [r14+0x40]
   140019aab:	mov    r11,QWORD PTR [rcx+0x10]
   140019aaf:	mov    r10,QWORD PTR [rcx+0x20]
   140019ab3:	mov    r8,QWORD PTR [rcx+0x30]
   140019ab7:	movzx  eax,bpl
   140019abb:	mov    r15d,r13d
   140019abe:	mov    r12d,r13d
   140019ac1:	mov    QWORD PTR [rsp+0x60],rdi
   140019ac6:	shr    r15d,0x18
   140019aca:	shr    r12d,0x10
   140019ace:	neg    al
   140019ad0:	sbb    ebx,ebx
   140019ad2:	xor    eax,eax
   140019ad4:	and    r15b,0x1
   140019ad8:	mov    esi,eax
   140019ada:	mov    QWORD PTR [rsp+0x58],r9
   140019adf:	je     0x140019b44
   140019ae1:	mov    rax,r9
   140019ae4:	mov    edx,edi
   140019ae6:	xor    bpl,bpl
   140019ae9:	sub    rax,r10
   140019aec:	sub    edx,r11d
   140019aef:	sar    rax,1
   140019af2:	cmp    edx,eax
   140019af4:	cmovg  edx,eax
   140019af7:	test   edx,edx
   140019af9:	jle    0x140019dd3
   140019aff:	movzx  ecx,BYTE PTR [r11]
   140019b03:	inc    r11
   140019b06:	lea    eax,[rcx-0x20]
   140019b09:	cmp    al,0x5e
   140019b0b:	ja     0x140019dbf
   140019b11:	cmp    cl,0x26
   140019b14:	je     0x140019b34
   140019b16:	movzx  eax,cl
   140019b19:	add    r10,0x2
   140019b1d:	mov    WORD PTR [r10-0x2],ax
   140019b22:	test   r8,r8
   140019b25:	je     0x140019b30
   140019b27:	mov    DWORD PTR [r8],ebx
   140019b2a:	add    r8,0x4
   140019b2e:	inc    ebx
   140019b30:	dec    edx
   140019b32:	jmp    0x140019af7
   140019b34:	inc    ebx
   140019b36:	xor    r15b,r15b
   140019b39:	xor    bpl,bpl
   140019b3c:	xor    r13d,r13d
   140019b3f:	mov    r12b,0xff
   140019b42:	mov    esi,ebx
   140019b44:	lea    edi,[rsi-0x1]
   140019b47:	jmp    0x140019b50
   140019b49:	mov    r9,QWORD PTR [rsp+0x58]
   140019b4e:	xchg   ax,ax
   140019b50:	cmp    r11,QWORD PTR [rsp+0x60]
   140019b55:	jae    0x140019de4
   140019b5b:	cmp    r10,r9
   140019b5e:	jae    0x140019d78
   140019b64:	movzx  edx,BYTE PTR [r11]
   140019b68:	movzx  eax,bpl
   140019b6c:	inc    r11
   140019b6f:	inc    bpl
   140019b72:	inc    esi
   140019b74:	inc    edi
   140019b76:	mov    BYTE PTR [rax+r14*1+0x41],dl
   140019b7b:	cmp    dl,0x7e
   140019b7e:	ja     0x140019d68
   140019b84:	cmp    dl,0x2c
   140019b87:	jne    0x140019b95
   140019b89:	mov    r9b,0x3f
   140019b8c:	lea    rcx,[rip+0xfffffffffffe646d]        # 0x140000000
   140019b93:	jmp    0x140019bba
   140019b95:	cmp    dl,0x2f
   140019b98:	je     0x140019d56
   140019b9e:	lea    rcx,[rip+0xfffffffffffe645b]        # 0x140000000
   140019ba5:	movzx  eax,dl
   140019ba8:	movzx  r9d,BYTE PTR [rax+rcx*1+0x49ae0]
   140019bb1:	test   r9b,r9b
   140019bb4:	js     0x140019cf1
   140019bba:	movsx  eax,r12b
   140019bbe:	inc    eax
   140019bc0:	cmp    eax,0x8
   140019bc3:	ja     0x140019b49
   140019bc5:	cdqe   
   140019bc7:	mov    ecx,DWORD PTR [rcx+rax*4+0x19e30]
   140019bce:	lea    rax,[rip+0xfffffffffffe642b]        # 0x140000000
   140019bd5:	add    rcx,rax
   140019bd8:	jmp    rcx
   140019bda:	movsx  r13d,r9b
   140019bde:	mov    r12b,0x1
   140019be1:	jmp    0x140019b49
   140019be6:	shl    r13w,0x6
   140019beb:	movsx  eax,r9b
   140019bef:	or     r13w,ax
   140019bf3:	inc    r12b
   140019bf6:	jmp    0x140019b49
   140019bfb:	movzx  eax,r9b
   140019bff:	sar    al,0x2
   140019c02:	movsx  ecx,al
   140019c05:	movzx  eax,r13w
   140019c09:	shl    ax,0x4
   140019c0d:	or     cx,ax
   140019c10:	mov    eax,0x20
   140019c15:	cmp    ax,cx
   140019c18:	ja     0x140019c24
   140019c1a:	cmp    cx,0x7e
   140019c1e:	jbe    0x140019d68
   140019c24:	mov    WORD PTR [r10],cx
   140019c28:	add    r10,0x2
   140019c2c:	test   r8,r8
   140019c2f:	je     0x140019c3a
   140019c31:	mov    DWORD PTR [r8],ebx
   140019c34:	add    r8,0x4
   140019c38:	mov    ebx,edi
   140019c3a:	and    r9b,0x3
   140019c3e:	mov    BYTE PTR [r14+0x41],dl
   140019c42:	mov    bpl,0x1
   140019c45:	movsx  r13d,r9b
   140019c49:	mov    r12b,0x3
   140019c4c:	jmp    0x140019b49
   140019c51:	movzx  eax,r9b
   140019c55:	sar    al,0x4
   140019c58:	movsx  ecx,al
   140019c5b:	movzx  eax,r13w
   140019c5f:	shl    ax,0x2
   140019c63:	or     cx,ax
   140019c66:	mov    eax,0x20
   140019c6b:	cmp    ax,cx
   140019c6e:	ja     0x140019c7a
   140019c70:	cmp    cx,0x7e
   140019c74:	jbe    0x140019d68
   140019c7a:	mov    WORD PTR [r10],cx
   140019c7e:	add    r10,0x2
   140019c82:	test   r8,r8
   140019c85:	je     0x140019c90
   140019c87:	mov    DWORD PTR [r8],ebx
   140019c8a:	add    r8,0x4
   140019c8e:	mov    ebx,edi
   140019c90:	and    r9b,0xf
   140019c94:	mov    BYTE PTR [r14+0x41],dl
   140019c98:	mov    bpl,0x1
   140019c9b:	movsx  r13d,r9b
   140019c9f:	mov    r12b,0x6
   140019ca2:	jmp    0x140019b49
   140019ca7:	movsx  eax,r9b
   140019cab:	movzx  ecx,r13w
   140019caf:	shl    cx,0x6
   140019cb3:	or     cx,ax
   140019cb6:	mov    eax,0x20
   140019cbb:	cmp    ax,cx
   140019cbe:	ja     0x140019cca
   140019cc0:	cmp    cx,0x7e
   140019cc4:	jbe    0x140019d68
   140019cca:	mov    WORD PTR [r10],cx
   140019cce:	add    r10,0x2
   140019cd2:	test   r8,r8
   140019cd5:	je     0x140019ce0
   140019cd7:	mov    DWORD PTR [r8],ebx
   140019cda:	add    r8,0x4
   140019cde:	mov    ebx,esi
   140019ce0:	xor    eax,eax
   140019ce2:	xor    bpl,bpl
   140019ce5:	xor    r12b,r12b
   140019ce8:	mov    r13w,ax
   140019cec:	jmp    0x140019b49
   140019cf1:	cmp    r9b,0xfe
   140019cf5:	jne    0x140019d56
   140019cf7:	mov    r15b,0x1
   140019cfa:	cmp    r12b,0xff
   140019cfe:	jne    0x140019d2e
   140019d00:	mov    eax,0x26
   140019d05:	add    r10,0x2
   140019d09:	mov    WORD PTR [r10-0x2],ax
   140019d0e:	test   r8,r8
   140019d11:	je     0x140019d45
   140019d13:	mov    rdi,QWORD PTR [rsp+0x60]
   140019d18:	mov    r9,QWORD PTR [rsp+0x58]
   140019d1d:	lea    eax,[rbx-0x1]
   140019d20:	mov    DWORD PTR [r8],eax
   140019d23:	add    r8,0x4
   140019d27:	mov    ebx,esi
   140019d29:	jmp    0x140019ae1
   140019d2e:	test   r13w,r13w
   140019d32:	jne    0x140019d6b
   140019d34:	test   r12b,r12b
   140019d37:	je     0x140019d45
   140019d39:	cmp    r12b,0x3
   140019d3d:	je     0x140019d45
   140019d3f:	cmp    r12b,0x6
   140019d43:	jne    0x140019d6b
   140019d45:	mov    rdi,QWORD PTR [rsp+0x60]
   140019d4a:	mov    r9,QWORD PTR [rsp+0x58]
   140019d4f:	mov    ebx,esi
   140019d51:	jmp    0x140019ae1
   140019d56:	cmp    r12b,0xff
   140019d5a:	jne    0x140019d68
   140019d5c:	mov    BYTE PTR [r14+0x41],0x26
   140019d61:	mov    BYTE PTR [r14+0x42],dl
   140019d65:	mov    bpl,0x2
   140019d68:	mov    r15b,0x1
   140019d6b:	mov    rax,QWORD PTR [rsp+0x50]
   140019d70:	mov    DWORD PTR [rax],0xc
   140019d76:	jmp    0x140019d83
   140019d78:	mov    rax,QWORD PTR [rsp+0x50]
   140019d7d:	mov    DWORD PTR [rax],0xf
   140019d83:	mov    rdx,QWORD PTR [rsp+0x48]
   140019d88:	mov    BYTE PTR [r14+0x40],bpl
   140019d8c:	movzx  eax,r12b
   140019d90:	movsx  ecx,r15b
   140019d94:	shl    ecx,0x8
   140019d97:	or     ecx,eax
   140019d99:	movzx  eax,r13w
   140019d9d:	shl    ecx,0x10
   140019da0:	or     ecx,eax
   140019da2:	mov    DWORD PTR [r14+0x48],ecx
   140019da6:	mov    QWORD PTR [rdx+0x10],r11
   140019daa:	mov    QWORD PTR [rdx+0x20],r10
   140019dae:	mov    QWORD PTR [rdx+0x30],r8
   140019db2:	pop    r15
   140019db4:	pop    r14
   140019db6:	pop    r13
   140019db8:	pop    r12
   140019dba:	pop    rdi
   140019dbb:	pop    rsi
   140019dbc:	pop    rbp
   140019dbd:	pop    rbx
   140019dbe:	ret    
   140019dbf:	mov    rax,QWORD PTR [rsp+0x50]
   140019dc4:	mov    BYTE PTR [r14+0x41],cl
   140019dc8:	mov    bpl,0x1
   140019dcb:	mov    DWORD PTR [rax],0xc
   140019dd1:	jmp    0x140019dd8
   140019dd3:	mov    rax,QWORD PTR [rsp+0x50]
   140019dd8:	cmp    r11,rdi
   140019ddb:	jae    0x140019de9
   140019ddd:	cmp    r10,r9
   140019de0:	jb     0x140019de9
   140019de2:	jmp    0x140019d7d
   140019de4:	mov    rdi,QWORD PTR [rsp+0x60]
   140019de9:	mov    rax,QWORD PTR [rsp+0x50]
   140019dee:	cmp    DWORD PTR [rax],0x0
   140019df1:	jg     0x140019d83
   140019df3:	mov    rdx,QWORD PTR [rsp+0x48]
   140019df8:	test   r15b,r15b
   140019dfb:	jne    0x140019d88
   140019dfd:	test   bpl,bpl
   140019e00:	jne    0x140019d88
   140019e02:	cmp    BYTE PTR [rdx+0x2],bpl
   140019e06:	je     0x140019d88
   140019e08:	cmp    r11,rdi
   140019e0b:	jb     0x140019d88
   140019e11:	cmp    r12b,0xff
   140019e15:	jne    0x140019e1f
   140019e17:	mov    BYTE PTR [r14+0x41],0x26
   140019e1c:	mov    bpl,0x1
   140019e1f:	mov    r15b,0x1
   140019e22:	mov    DWORD PTR [rax],0xb
   140019e28:	jmp    0x140019d88
   140019e2d:	nop    DWORD PTR [rax]
   140019e30:	ficomp DWORD PTR [rbx-0x6425ffff]
   140019e36:	add    DWORD PTR [rax],eax
   140019e38:	out    0x9b,al
   140019e3a:	add    DWORD PTR [rax],eax
   140019e3c:	sti    
   140019e3d:	fwait
   140019e3e:	add    DWORD PTR [rax],eax
   140019e40:	out    0x9b,al
   140019e42:	add    DWORD PTR [rax],eax
   140019e44:	out    0x9b,al
   140019e46:	add    DWORD PTR [rax],eax
   140019e48:	push   rcx
   140019e49:	pushf  
   140019e4a:	add    DWORD PTR [rax],eax
   140019e4c:	out    0x9b,al
   140019e4e:	add    DWORD PTR [rax],eax
   140019e50:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019e51:	pushf  
   140019e52:	add    DWORD PTR [rax],eax
   140019e54:	int3   
   140019e55:	int3   
   140019e56:	int3   
   140019e57:	int3   
   140019e58:	int3   
   140019e59:	int3   
   140019e5a:	int3   
   140019e5b:	int3   
   140019e5c:	int3   
   140019e5d:	int3   
   140019e5e:	int3   
   140019e5f:	int3   
   140019e60:	mov    QWORD PTR [rsp+0x10],rbx
   140019e65:	mov    QWORD PTR [rsp+0x18],rbp
   140019e6a:	mov    QWORD PTR [rsp+0x20],rsi
   140019e6f:	mov    QWORD PTR [rsp+0x8],rcx
   140019e74:	push   rdi
   140019e75:	push   r12
   140019e77:	push   r13
   140019e79:	push   r14
   140019e7b:	push   r15
   140019e7d:	mov    rsi,QWORD PTR [rcx+0x8]
   140019e81:	mov    r12,QWORD PTR [rcx+0x10]
   140019e85:	mov    r14,QWORD PTR [rcx+0x18]
   140019e89:	mov    r11d,DWORD PTR [rsi+0x50]
   140019e8d:	mov    r9,QWORD PTR [rcx+0x20]
   140019e91:	mov    rbp,QWORD PTR [rcx+0x28]
   140019e95:	mov    r8,QWORD PTR [rcx+0x30]
   140019e99:	mov    r15d,r11d
   140019e9c:	mov    rax,rcx
   140019e9f:	xor    ecx,ecx
   140019ea1:	mov    ebx,r11d
   140019ea4:	shr    r15d,0x18
   140019ea8:	shr    ebx,0x10
   140019eab:	and    r15b,0x1
   140019eaf:	mov    r13,rdx
   140019eb2:	lea    edi,[rcx+0x2c]
   140019eb5:	lea    r10d,[rcx+0x20]
   140019eb9:	je     0x140019f62
   140019ebf:	nop
   140019ec0:	mov    r10,r14
   140019ec3:	mov    eax,ebp
   140019ec5:	sub    r10,r12
   140019ec8:	sub    eax,r9d
   140019ecb:	sar    r10,1
   140019ece:	cmp    r10d,eax
   140019ed1:	cmovg  r10d,eax
   140019ed5:	test   r10d,r10d
   140019ed8:	jle    0x14001a35d
   140019ede:	movzx  edx,WORD PTR [r12]
   140019ee3:	add    r12,0x2
   140019ee7:	lea    eax,[rdx-0x20]
   140019eea:	cmp    ax,0x5e
   140019eee:	ja     0x140019f0f
   140019ef0:	cmp    dx,0x26
   140019ef4:	je     0x140019f15
   140019ef6:	mov    BYTE PTR [r9],dl
   140019ef9:	inc    r9
   140019efc:	test   r8,r8
   140019eff:	je     0x140019f0a
   140019f01:	mov    DWORD PTR [r8],ecx
   140019f04:	add    r8,0x4
   140019f08:	inc    ecx
   140019f0a:	dec    r10d
   140019f0d:	jmp    0x140019ed5
   140019f0f:	cmp    dx,0x26
   140019f13:	jne    0x140019f40
   140019f15:	mov    BYTE PTR [r9],0x26
   140019f19:	inc    r9
   140019f1c:	cmp    r9,rbp
   140019f1f:	jae    0x14001a33f
   140019f25:	mov    BYTE PTR [r9],0x2d
   140019f29:	inc    r9
   140019f2c:	test   r8,r8
   140019f2f:	je     0x140019ec0
   140019f31:	mov    DWORD PTR [r8],ecx
   140019f34:	mov    DWORD PTR [r8+0x4],ecx
   140019f38:	add    r8,0x8
   140019f3c:	inc    ecx
   140019f3e:	jmp    0x140019ec0
   140019f40:	mov    BYTE PTR [r9],0x26
   140019f44:	inc    r9
   140019f47:	sub    r12,0x2
   140019f4b:	test   r8,r8
   140019f4e:	je     0x140019f57
   140019f50:	mov    DWORD PTR [r8],ecx
   140019f53:	add    r8,0x4
   140019f57:	xor    r15b,r15b
   140019f5a:	xor    bl,bl
   140019f5c:	mov    r10d,0x20
   140019f62:	cmp    r12,r14
   140019f65:	jae    0x14001a392
   140019f6b:	cmp    r9,rbp
   140019f6e:	jae    0x14001a38a
   140019f74:	movzx  edx,WORD PTR [r12]
   140019f79:	add    r12,0x2
   140019f7d:	cmp    r10w,dx
   140019f81:	ja     0x140019f8d
   140019f83:	cmp    dx,0x7e
   140019f87:	jbe    0x14001a2df
   140019f8d:	movsx  r10d,bl
   140019f91:	test   bl,bl
   140019f93:	je     0x14001a22b
   140019f99:	sub    r10d,0x1
   140019f9d:	je     0x14001a0ea
   140019fa3:	cmp    r10d,0x1
   140019fa7:	mov    r10d,0x20
   140019fad:	jne    0x140019f62
   140019faf:	movzx  eax,dx
   140019fb2:	shr    ax,0xc
   140019fb6:	or     al,r11b
   140019fb9:	lea    r11,[rip+0x2fae0]        # 0x140049aa0
   140019fc0:	cmp    al,0x3f
   140019fc2:	jae    0x140019fce
   140019fc4:	movzx  eax,al
   140019fc7:	movzx  r10d,BYTE PTR [rax+r11*1]
   140019fcc:	jmp    0x140019fd1
   140019fce:	mov    r10d,edi
   140019fd1:	mov    BYTE PTR [r9],r10b
   140019fd4:	inc    r9
   140019fd7:	cmp    r9,rbp
   140019fda:	jae    0x14001a093
   140019fe0:	movzx  eax,dx
   140019fe3:	shr    ax,0x6
   140019fe7:	and    al,0x3f
   140019fe9:	cmp    al,0x3f
   140019feb:	jae    0x140019ff7
   140019fed:	movzx  eax,al
   140019ff0:	movzx  r10d,BYTE PTR [rax+r11*1]
   140019ff5:	jmp    0x140019ffa
   140019ff7:	mov    r10d,edi
   140019ffa:	mov    BYTE PTR [r9],r10b
   140019ffd:	inc    r9
   14001a000:	cmp    r9,rbp
   14001a003:	jae    0x14001a041
   14001a005:	and    dl,0x3f
   14001a008:	cmp    dl,0x3f
   14001a00b:	jae    0x14001a017
   14001a00d:	movzx  eax,dl
   14001a010:	movzx  edx,BYTE PTR [rax+r11*1]
   14001a015:	jmp    0x14001a019
   14001a017:	mov    edx,edi
   14001a019:	mov    BYTE PTR [r9],dl
   14001a01c:	inc    r9
   14001a01f:	test   r8,r8
   14001a022:	je     0x14001a0e2
   14001a028:	mov    DWORD PTR [r8],ecx
   14001a02b:	mov    DWORD PTR [r8+0x4],ecx
   14001a02f:	mov    DWORD PTR [r8+0x8],ecx
   14001a033:	add    r8,0xc
   14001a037:	inc    ecx
   14001a039:	xor    r11b,r11b
   14001a03c:	jmp    0x140019f5a
   14001a041:	test   r8,r8
   14001a044:	je     0x14001a053
   14001a046:	mov    DWORD PTR [r8],ecx
   14001a049:	mov    DWORD PTR [r8+0x4],ecx
   14001a04d:	add    r8,0x8
   14001a051:	inc    ecx
   14001a053:	and    dl,0x3f
   14001a056:	cmp    dl,0x3f
   14001a059:	jae    0x14001a07a
   14001a05b:	movzx  eax,dl
   14001a05e:	movzx  edx,BYTE PTR [rax+r11*1]
   14001a063:	mov    BYTE PTR [rsi+0x5b],0x1
   14001a067:	xor    r11b,r11b
   14001a06a:	mov    BYTE PTR [rsi+0x68],dl
   14001a06d:	mov    DWORD PTR [r13+0x0],0xf
   14001a075:	jmp    0x140019f5a
   14001a07a:	mov    edx,edi
   14001a07c:	mov    BYTE PTR [rsi+0x5b],0x1
   14001a080:	xor    r11b,r11b
   14001a083:	mov    BYTE PTR [rsi+0x68],dl
   14001a086:	mov    DWORD PTR [r13+0x0],0xf
   14001a08e:	jmp    0x140019f5a
   14001a093:	test   r8,r8
   14001a096:	je     0x14001a0a1
   14001a098:	mov    DWORD PTR [r8],ecx
   14001a09b:	add    r8,0x4
   14001a09f:	inc    ecx
   14001a0a1:	movzx  eax,dx
   14001a0a4:	shr    ax,0x6
   14001a0a8:	and    al,0x3f
   14001a0aa:	cmp    al,0x3f
   14001a0ac:	jae    0x14001a0b8
   14001a0ae:	movzx  eax,al
   14001a0b1:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a0b6:	jmp    0x14001a0bb
   14001a0b8:	mov    r10d,edi
   14001a0bb:	and    dl,0x3f
   14001a0be:	mov    BYTE PTR [rsi+0x68],r10b
   14001a0c2:	cmp    dl,0x3f
   14001a0c5:	jae    0x14001a0d1
   14001a0c7:	movzx  eax,dl
   14001a0ca:	movzx  edx,BYTE PTR [rax+r11*1]
   14001a0cf:	jmp    0x14001a0d3
   14001a0d1:	mov    edx,edi
   14001a0d3:	mov    BYTE PTR [rsi+0x69],dl
   14001a0d6:	mov    BYTE PTR [rsi+0x5b],0x2
   14001a0da:	mov    DWORD PTR [r13+0x0],0xf
   14001a0e2:	xor    r11b,r11b
   14001a0e5:	jmp    0x140019f5a
   14001a0ea:	movzx  eax,dx
   14001a0ed:	shr    ax,0xe
   14001a0f1:	or     al,r11b
   14001a0f4:	lea    r11,[rip+0x2f9a5]        # 0x140049aa0
   14001a0fb:	cmp    al,0x3f
   14001a0fd:	jae    0x14001a109
   14001a0ff:	movzx  eax,al
   14001a102:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a107:	jmp    0x14001a10c
   14001a109:	mov    r10d,edi
   14001a10c:	mov    BYTE PTR [r9],r10b
   14001a10f:	inc    r9
   14001a112:	cmp    r9,rbp
   14001a115:	jae    0x14001a1c6
   14001a11b:	movzx  eax,dx
   14001a11e:	shr    ax,0x8
   14001a122:	and    al,0x3f
   14001a124:	cmp    al,0x3f
   14001a126:	jae    0x14001a132
   14001a128:	movzx  eax,al
   14001a12b:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a130:	jmp    0x14001a135
   14001a132:	mov    r10d,edi
   14001a135:	mov    BYTE PTR [r9],r10b
   14001a138:	inc    r9
   14001a13b:	cmp    r9,rbp
   14001a13e:	jae    0x14001a189
   14001a140:	movzx  eax,dl
   14001a143:	shr    al,0x2
   14001a146:	and    al,0x3f
   14001a148:	cmp    al,0x3f
   14001a14a:	jae    0x14001a156
   14001a14c:	movzx  eax,al
   14001a14f:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a154:	jmp    0x14001a159
   14001a156:	mov    r10d,edi
   14001a159:	mov    BYTE PTR [r9],r10b
   14001a15c:	inc    r9
   14001a15f:	test   r8,r8
   14001a162:	je     0x14001a21b
   14001a168:	mov    DWORD PTR [r8],ecx
   14001a16b:	mov    DWORD PTR [r8+0x4],ecx
   14001a16f:	mov    DWORD PTR [r8+0x8],ecx
   14001a173:	and    dl,0x3
   14001a176:	add    r8,0xc
   14001a17a:	inc    ecx
   14001a17c:	shl    dl,0x4
   14001a17f:	mov    bl,0x2
   14001a181:	mov    r11b,dl
   14001a184:	jmp    0x140019f5c
   14001a189:	test   r8,r8
   14001a18c:	je     0x14001a19b
   14001a18e:	mov    DWORD PTR [r8],ecx
   14001a191:	mov    DWORD PTR [r8+0x4],ecx
   14001a195:	add    r8,0x8
   14001a199:	inc    ecx
   14001a19b:	movzx  eax,dl
   14001a19e:	shr    al,0x2
   14001a1a1:	and    al,0x3f
   14001a1a3:	cmp    al,0x3f
   14001a1a5:	jae    0x14001a1b9
   14001a1a7:	movzx  eax,al
   14001a1aa:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a1af:	mov    BYTE PTR [rsi+0x5b],0x1
   14001a1b3:	mov    BYTE PTR [rsi+0x68],r10b
   14001a1b7:	jmp    0x14001a213
   14001a1b9:	mov    r10d,edi
   14001a1bc:	mov    BYTE PTR [rsi+0x5b],0x1
   14001a1c0:	mov    BYTE PTR [rsi+0x68],r10b
   14001a1c4:	jmp    0x14001a213
   14001a1c6:	test   r8,r8
   14001a1c9:	je     0x14001a1d4
   14001a1cb:	mov    DWORD PTR [r8],ecx
   14001a1ce:	add    r8,0x4
   14001a1d2:	inc    ecx
   14001a1d4:	movzx  eax,dx
   14001a1d7:	shr    ax,0x8
   14001a1db:	and    al,0x3f
   14001a1dd:	cmp    al,0x3f
   14001a1df:	jae    0x14001a1eb
   14001a1e1:	movzx  eax,al
   14001a1e4:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a1e9:	jmp    0x14001a1ee
   14001a1eb:	mov    r10d,edi
   14001a1ee:	movzx  eax,dl
   14001a1f1:	mov    BYTE PTR [rsi+0x68],r10b
   14001a1f5:	shr    al,0x2
   14001a1f8:	and    al,0x3f
   14001a1fa:	cmp    al,0x3f
   14001a1fc:	jae    0x14001a208
   14001a1fe:	movzx  eax,al
   14001a201:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a206:	jmp    0x14001a20b
   14001a208:	mov    r10d,edi
   14001a20b:	mov    BYTE PTR [rsi+0x69],r10b
   14001a20f:	mov    BYTE PTR [rsi+0x5b],0x2
   14001a213:	mov    DWORD PTR [r13+0x0],0xf
   14001a21b:	and    dl,0x3
   14001a21e:	mov    bl,0x2
   14001a220:	shl    dl,0x4
   14001a223:	mov    r11b,dl
   14001a226:	jmp    0x140019f5c
   14001a22b:	movzx  eax,dx
   14001a22e:	lea    r11,[rip+0x2f86b]        # 0x140049aa0
   14001a235:	shr    ax,0xa
   14001a239:	cmp    al,0x3f
   14001a23b:	jae    0x14001a247
   14001a23d:	movzx  eax,al
   14001a240:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a245:	jmp    0x14001a24a
   14001a247:	mov    r10d,edi
   14001a24a:	mov    BYTE PTR [r9],r10b
   14001a24d:	inc    r9
   14001a250:	cmp    r9,rbp
   14001a253:	jae    0x14001a297
   14001a255:	movzx  eax,dx
   14001a258:	shr    ax,0x4
   14001a25c:	and    al,0x3f
   14001a25e:	cmp    al,0x3f
   14001a260:	jae    0x14001a26c
   14001a262:	movzx  eax,al
   14001a265:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a26a:	jmp    0x14001a26f
   14001a26c:	mov    r10d,edi
   14001a26f:	mov    BYTE PTR [r9],r10b
   14001a272:	inc    r9
   14001a275:	test   r8,r8
   14001a278:	je     0x14001a2cf
   14001a27a:	mov    DWORD PTR [r8],ecx
   14001a27d:	mov    DWORD PTR [r8+0x4],ecx
   14001a281:	and    dl,0xf
   14001a284:	add    r8,0x8
   14001a288:	inc    ecx
   14001a28a:	shl    dl,0x2
   14001a28d:	mov    r11b,dl
   14001a290:	mov    bl,0x1
   14001a292:	jmp    0x140019f5c
   14001a297:	test   r8,r8
   14001a29a:	je     0x14001a2a5
   14001a29c:	mov    DWORD PTR [r8],ecx
   14001a29f:	add    r8,0x4
   14001a2a3:	inc    ecx
   14001a2a5:	movzx  eax,dx
   14001a2a8:	shr    ax,0x4
   14001a2ac:	and    al,0x3f
   14001a2ae:	cmp    al,0x3f
   14001a2b0:	jae    0x14001a2bc
   14001a2b2:	movzx  eax,al
   14001a2b5:	movzx  r10d,BYTE PTR [rax+r11*1]
   14001a2ba:	jmp    0x14001a2bf
   14001a2bc:	mov    r10d,edi
   14001a2bf:	mov    BYTE PTR [rsi+0x68],r10b
   14001a2c3:	mov    BYTE PTR [rsi+0x5b],0x1
   14001a2c7:	mov    DWORD PTR [r13+0x0],0xf
   14001a2cf:	and    dl,0xf
   14001a2d2:	mov    bl,0x1
   14001a2d4:	shl    dl,0x2
   14001a2d7:	mov    r11b,dl
   14001a2da:	jmp    0x140019f5c
   14001a2df:	sub    r12,0x2
   14001a2e3:	mov    r15b,0x1
   14001a2e6:	lea    r10,[rip+0x2f7b3]        # 0x140049aa0
   14001a2ed:	test   bl,bl
   14001a2ef:	je     0x14001a31a
   14001a2f1:	cmp    r11b,0x3f
   14001a2f5:	jae    0x14001a302
   14001a2f7:	movzx  eax,r11b
   14001a2fb:	movzx  edx,BYTE PTR [rax+r10*1]
   14001a300:	jmp    0x14001a304
   14001a302:	mov    edx,edi
   14001a304:	mov    BYTE PTR [r9],dl
   14001a307:	inc    r9
   14001a30a:	test   r8,r8
   14001a30d:	je     0x14001a31a
   14001a30f:	lea    eax,[rcx-0x1]
   14001a312:	add    r8,0x4
   14001a316:	mov    DWORD PTR [r8-0x4],eax
   14001a31a:	cmp    r9,rbp
   14001a31d:	jae    0x14001a378
   14001a31f:	mov    BYTE PTR [r9],0x2d
   14001a323:	inc    r9
   14001a326:	test   r8,r8
   14001a329:	je     0x140019ec0
   14001a32f:	lea    eax,[rcx-0x1]
   14001a332:	add    r8,0x4
   14001a336:	mov    DWORD PTR [r8-0x4],eax
   14001a33a:	jmp    0x140019ec0
   14001a33f:	test   r8,r8
   14001a342:	je     0x14001a34d
   14001a344:	mov    DWORD PTR [r8],ecx
   14001a347:	add    r8,0x4
   14001a34b:	inc    ecx
   14001a34d:	mov    BYTE PTR [rsi+0x68],0x2d
   14001a351:	mov    BYTE PTR [rsi+0x5b],0x1
   14001a355:	mov    DWORD PTR [r13+0x0],0xf
   14001a35d:	cmp    r12,r14
   14001a360:	jae    0x14001a392
   14001a362:	lea    r10,[rip+0x2f737]        # 0x140049aa0
   14001a369:	cmp    r9,rbp
   14001a36c:	jb     0x14001a399
   14001a36e:	mov    DWORD PTR [r13+0x0],0xf
   14001a376:	jmp    0x14001a399
   14001a378:	mov    BYTE PTR [rsi+0x68],0x2d
   14001a37c:	mov    BYTE PTR [rsi+0x5b],0x1
   14001a380:	mov    DWORD PTR [r13+0x0],0xf
   14001a388:	jmp    0x14001a399
   14001a38a:	mov    DWORD PTR [r13+0x0],0xf
   14001a392:	lea    r10,[rip+0x2f707]        # 0x140049aa0
   14001a399:	mov    rdx,QWORD PTR [rsp+0x30]
   14001a39e:	cmp    BYTE PTR [rdx+0x2],0x0
   14001a3a2:	je     0x14001a45f
   14001a3a8:	cmp    r12,r14
   14001a3ab:	jb     0x14001a45f
   14001a3b1:	test   r15b,r15b
   14001a3b4:	jne    0x14001a44f
   14001a3ba:	test   bl,bl
   14001a3bc:	je     0x14001a40e
   14001a3be:	cmp    r9,rbp
   14001a3c1:	jae    0x14001a3ea
   14001a3c3:	cmp    r11b,0x3f
   14001a3c7:	jae    0x14001a3d2
   14001a3c9:	movzx  eax,r11b
   14001a3cd:	movzx  edi,BYTE PTR [rax+r10*1]
   14001a3d2:	mov    BYTE PTR [r9],dil
   14001a3d5:	inc    r9
   14001a3d8:	test   r8,r8
   14001a3db:	je     0x14001a40e
   14001a3dd:	lea    eax,[rcx-0x1]
   14001a3e0:	add    r8,0x4
   14001a3e4:	mov    DWORD PTR [r8-0x4],eax
   14001a3e8:	jmp    0x14001a40e
   14001a3ea:	cmp    r11b,0x3f
   14001a3ee:	jae    0x14001a3f9
   14001a3f0:	movzx  eax,r11b
   14001a3f4:	movzx  edi,BYTE PTR [rax+r10*1]
   14001a3f9:	movsx  rax,BYTE PTR [rsi+0x5b]
   14001a3fe:	mov    BYTE PTR [rax+rsi*1+0x68],dil
   14001a403:	inc    BYTE PTR [rsi+0x5b]
   14001a406:	mov    DWORD PTR [r13+0x0],0xf
   14001a40e:	cmp    r9,rbp
   14001a411:	jae    0x14001a43a
   14001a413:	mov    BYTE PTR [r9],0x2d
   14001a417:	inc    r9
   14001a41a:	test   r8,r8
   14001a41d:	je     0x14001a44f
   14001a41f:	lea    eax,[rcx-0x1]
   14001a422:	add    r8,0x4
   14001a426:	mov    DWORD PTR [r8-0x4],eax
   14001a42a:	and    DWORD PTR [rsi+0x50],0xf1000000
   14001a431:	or     DWORD PTR [rsi+0x50],0x1000000
   14001a438:	jmp    0x14001a47e
   14001a43a:	movsx  rax,BYTE PTR [rsi+0x5b]
   14001a43f:	mov    BYTE PTR [rax+rsi*1+0x68],0x2d
   14001a444:	inc    BYTE PTR [rsi+0x5b]
   14001a447:	mov    DWORD PTR [r13+0x0],0xf
   14001a44f:	and    DWORD PTR [rsi+0x50],0xf1000000
   14001a456:	or     DWORD PTR [rsi+0x50],0x1000000
   14001a45d:	jmp    0x14001a47e
   14001a45f:	and    DWORD PTR [rsi+0x50],0xf0000000
   14001a466:	movsx  eax,bl
   14001a469:	movsx  ecx,r15b
   14001a46d:	shl    ecx,0x8
   14001a470:	or     ecx,eax
   14001a472:	movzx  eax,r11b
   14001a476:	shl    ecx,0x10
   14001a479:	or     ecx,eax
   14001a47b:	or     DWORD PTR [rsi+0x50],ecx
   14001a47e:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a483:	mov    rbp,QWORD PTR [rsp+0x40]
   14001a488:	mov    rsi,QWORD PTR [rsp+0x48]
   14001a48d:	mov    QWORD PTR [rdx+0x10],r12
   14001a491:	mov    QWORD PTR [rdx+0x20],r9
   14001a495:	mov    QWORD PTR [rdx+0x30],r8
   14001a499:	pop    r15
   14001a49b:	pop    r14
   14001a49d:	pop    r13
   14001a49f:	pop    r12
   14001a4a1:	pop    rdi
   14001a4a2:	ret    
   14001a4a3:	int3   
   14001a4a4:	int3   
   14001a4a5:	int3   
   14001a4a6:	int3   
   14001a4a7:	int3   
   14001a4a8:	int3   
   14001a4a9:	int3   
   14001a4aa:	int3   
   14001a4ab:	int3   
   14001a4ac:	int3   
   14001a4ad:	int3   
   14001a4ae:	int3   
   14001a4af:	int3   
   14001a4b0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a4b5:	mov    QWORD PTR [rsp+0x10],rbp
   14001a4ba:	mov    QWORD PTR [rsp+0x18],rsi
   14001a4bf:	mov    QWORD PTR [rsp+0x20],rdi
   14001a4c4:	push   r12
   14001a4c6:	push   r13
   14001a4c8:	push   r14
   14001a4ca:	push   r15
   14001a4cc:	mov    rbx,QWORD PTR [rcx+0x8]
   14001a4d0:	mov    r9,QWORD PTR [rcx+0x10]
   14001a4d4:	mov    r10,QWORD PTR [rcx+0x20]
   14001a4d8:	mov    r8d,DWORD PTR [rbx+0x48]
   14001a4dc:	mov    rdi,QWORD PTR [rcx+0x18]
   14001a4e0:	mov    rsi,QWORD PTR [rcx+0x28]
   14001a4e4:	lea    rax,[rip+0x2ff95]        # 0x14004a480
   14001a4eb:	mov    rbp,rdx
   14001a4ee:	mov    r12,rcx
   14001a4f1:	cmp    QWORD PTR [rbx+0x30],rax
   14001a4f5:	lea    r14,[rip+0xfffffffffffe5b04]        # 0x140000000
   14001a4fc:	mov    r15d,0x2800
   14001a502:	sete   r13b
   14001a506:	test   r8d,r8d
   14001a509:	je     0x14001a52d
   14001a50b:	cmp    r10,rsi
   14001a50e:	jae    0x14001a52d
   14001a510:	movsx  edx,BYTE PTR [rbx+0x40]
   14001a514:	mov    r11d,DWORD PTR [rbx+0x4c]
   14001a518:	mov    DWORD PTR [rbx+0x48],0x0
   14001a51f:	mov    BYTE PTR [rbx+0x40],0x0
   14001a523:	jmp    0x14001a561
   14001a525:	mov    WORD PTR [r10],r8w
   14001a529:	add    r10,0x2
   14001a52d:	cmp    r9,rdi
   14001a530:	jae    0x14001a669
   14001a536:	cmp    r10,rsi
   14001a539:	jae    0x14001a652
   14001a53f:	movzx  r8d,BYTE PTR [r9]
   14001a543:	inc    r9
   14001a546:	cmp    r8d,0x80
   14001a54d:	jb     0x14001a525
   14001a54f:	mov    BYTE PTR [rbx+0x41],r8b
   14001a553:	movsx  r11d,BYTE PTR [r8+r14*1+0x49ff0]
   14001a55c:	mov    edx,0x1
   14001a561:	cmp    edx,r11d
   14001a564:	jge    0x14001a593
   14001a566:	cmp    r9,rdi
   14001a569:	jae    0x14001a63b
   14001a56f:	movzx  ecx,BYTE PTR [r9]
   14001a573:	movsxd rax,edx
   14001a576:	mov    BYTE PTR [rax+rbx*1+0x41],cl
   14001a57a:	mov    eax,ecx
   14001a57c:	and    al,0xc0
   14001a57e:	cmp    al,0x80
   14001a580:	jne    0x14001a593
   14001a582:	shl    r8d,0x6
   14001a586:	inc    edx
   14001a588:	inc    r9
   14001a58b:	add    r8d,ecx
   14001a58e:	cmp    edx,r11d
   14001a591:	jl     0x14001a566
   14001a593:	movsxd rax,r11d
   14001a596:	sub    r8d,DWORD PTR [r14+rax*4+0x49fd0]
   14001a59e:	cmp    edx,r11d
   14001a5a1:	jne    0x14001a648
   14001a5a7:	cmp    r8d,0x10ffff
   14001a5ae:	ja     0x14001a648
   14001a5b4:	movsxd rax,edx
   14001a5b7:	cmp    r8d,DWORD PTR [r14+rax*4+0x4a0f0]
   14001a5bf:	jb     0x14001a648
   14001a5c5:	xor    ecx,ecx
   14001a5c7:	test   r13b,r13b
   14001a5ca:	je     0x14001a5d4
   14001a5cc:	cmp    edx,0x3
   14001a5cf:	setle  cl
   14001a5d2:	jmp    0x14001a5e4
   14001a5d4:	mov    eax,r8d
   14001a5d7:	and    eax,0xfffff800
   14001a5dc:	cmp    eax,0xd800
   14001a5e1:	setne  cl
   14001a5e4:	test   ecx,ecx
   14001a5e6:	je     0x14001a648
   14001a5e8:	cmp    r8d,0xffff
   14001a5ef:	jbe    0x14001a525
   14001a5f5:	add    r8d,0xffff0000
   14001a5fc:	add    r10,0x2
   14001a600:	mov    eax,r8d
   14001a603:	and    r8d,0x3ff
   14001a60a:	shr    eax,0xa
   14001a60d:	add    r8d,0xdc00
   14001a614:	sub    ax,r15w
   14001a618:	mov    WORD PTR [r10-0x2],ax
   14001a61d:	cmp    r10,rsi
   14001a620:	jb     0x14001a525
   14001a626:	mov    WORD PTR [rbx+0x90],r8w
   14001a62e:	mov    BYTE PTR [rbx+0x5d],0x1
   14001a632:	mov    DWORD PTR [rbp+0x0],0xf
   14001a639:	jmp    0x14001a652
   14001a63b:	mov    DWORD PTR [rbx+0x48],r8d
   14001a63f:	mov    DWORD PTR [rbx+0x4c],r11d
   14001a643:	mov    BYTE PTR [rbx+0x40],dl
   14001a646:	jmp    0x14001a652
   14001a648:	mov    BYTE PTR [rbx+0x40],dl
   14001a64b:	mov    DWORD PTR [rbp+0x0],0xc
   14001a652:	cmp    r9,rdi
   14001a655:	jae    0x14001a669
   14001a657:	cmp    r10,rsi
   14001a65a:	jb     0x14001a669
   14001a65c:	cmp    DWORD PTR [rbp+0x0],0x0
   14001a660:	jg     0x14001a669
   14001a662:	mov    DWORD PTR [rbp+0x0],0xf
   14001a669:	mov    rbx,QWORD PTR [rsp+0x28]
   14001a66e:	mov    rbp,QWORD PTR [rsp+0x30]
   14001a673:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a678:	mov    rdi,QWORD PTR [rsp+0x40]
   14001a67d:	mov    QWORD PTR [r12+0x20],r10
   14001a682:	mov    QWORD PTR [r12+0x10],r9
   14001a687:	pop    r15
   14001a689:	pop    r14
   14001a68b:	pop    r13
   14001a68d:	pop    r12
   14001a68f:	ret    
   14001a690:	mov    QWORD PTR [rsp+0x8],rbx
   14001a695:	mov    QWORD PTR [rsp+0x10],rbp
   14001a69a:	mov    QWORD PTR [rsp+0x18],rsi
   14001a69f:	mov    QWORD PTR [rsp+0x20],rdi
   14001a6a4:	push   r12
   14001a6a6:	push   r13
   14001a6a8:	push   r14
   14001a6aa:	push   r15
   14001a6ac:	mov    rdi,QWORD PTR [rcx+0x8]
   14001a6b0:	mov    r8,QWORD PTR [rcx+0x10]
   14001a6b4:	mov    r10,QWORD PTR [rcx+0x20]
   14001a6b8:	mov    rbx,QWORD PTR [rcx+0x30]
   14001a6bc:	mov    rbp,QWORD PTR [rcx+0x18]
   14001a6c0:	mov    r14,QWORD PTR [rcx+0x28]
   14001a6c4:	xor    esi,esi
   14001a6c6:	lea    rax,[rip+0x2fdb3]        # 0x14004a480
   14001a6cd:	mov    r13,rcx
   14001a6d0:	cmp    QWORD PTR [rdi+0x30],rax
   14001a6d4:	mov    ecx,DWORD PTR [rdi+0x48]
   14001a6d7:	mov    r12,rdx
   14001a6da:	sete   r15b
   14001a6de:	lea    rdx,[rip+0xfffffffffffe591b]        # 0x140000000
   14001a6e5:	test   ecx,ecx
   14001a6e7:	je     0x14001a700
   14001a6e9:	cmp    r10,r14
   14001a6ec:	jae    0x14001a700
   14001a6ee:	movsx  r9d,BYTE PTR [rdi+0x40]
   14001a6f3:	mov    r11d,DWORD PTR [rdi+0x4c]
   14001a6f7:	mov    DWORD PTR [rdi+0x48],esi
   14001a6fa:	mov    BYTE PTR [rdi+0x40],sil
   14001a6fe:	jmp    0x14001a745
   14001a700:	cmp    r8,rbp
   14001a703:	jae    0x14001a8a3
   14001a709:	cmp    r10,r14
   14001a70c:	jae    0x14001a88a
   14001a712:	movzx  ecx,BYTE PTR [r8]
   14001a716:	inc    r8
   14001a719:	cmp    ecx,0x80
   14001a71f:	jae    0x14001a733
   14001a721:	mov    WORD PTR [r10],cx
   14001a725:	mov    DWORD PTR [rbx],esi
   14001a727:	add    rbx,0x4
   14001a72b:	add    r10,0x2
   14001a72f:	inc    esi
   14001a731:	jmp    0x14001a700
   14001a733:	mov    BYTE PTR [rdi+0x41],cl
   14001a736:	movsx  r11d,BYTE PTR [rcx+rdx*1+0x49ff0]
   14001a73f:	mov    r9d,0x1
   14001a745:	cmp    r9d,r11d
   14001a748:	jge    0x14001a783
   14001a74a:	nop    WORD PTR [rax+rax*1+0x0]
   14001a750:	cmp    r8,rbp
   14001a753:	jae    0x14001a871
   14001a759:	movzx  edx,BYTE PTR [r8]
   14001a75d:	movsxd rax,r9d
   14001a760:	mov    BYTE PTR [rax+rdi*1+0x41],dl
   14001a764:	mov    eax,edx
   14001a766:	and    al,0xc0
   14001a768:	cmp    al,0x80
   14001a76a:	jne    0x14001a77c
   14001a76c:	shl    ecx,0x6
   14001a76f:	inc    r9d
   14001a772:	inc    r8
   14001a775:	add    ecx,edx
   14001a777:	cmp    r9d,r11d
   14001a77a:	jl     0x14001a750
   14001a77c:	lea    rdx,[rip+0xfffffffffffe587d]        # 0x140000000
   14001a783:	movsxd rax,r11d
   14001a786:	sub    ecx,DWORD PTR [rdx+rax*4+0x49fd0]
   14001a78d:	cmp    r9d,r11d
   14001a790:	jne    0x14001a87e
   14001a796:	cmp    ecx,0x10ffff
   14001a79c:	ja     0x14001a87e
   14001a7a2:	movsxd rax,r9d
   14001a7a5:	cmp    ecx,DWORD PTR [rdx+rax*4+0x4a0f0]
   14001a7ac:	jb     0x14001a87e
   14001a7b2:	xor    edx,edx
   14001a7b4:	test   r15b,r15b
   14001a7b7:	je     0x14001a7c2
   14001a7b9:	cmp    r9d,0x3
   14001a7bd:	setle  dl
   14001a7c0:	jmp    0x14001a7d1
   14001a7c2:	mov    eax,ecx
   14001a7c4:	and    eax,0xfffff800
   14001a7c9:	cmp    eax,0xd800
   14001a7ce:	setne  dl
   14001a7d1:	test   edx,edx
   14001a7d3:	je     0x14001a87e
   14001a7d9:	cmp    ecx,0xffff
   14001a7df:	ja     0x14001a7fe
   14001a7e1:	mov    WORD PTR [r10],cx
   14001a7e5:	mov    DWORD PTR [rbx],esi
   14001a7e7:	add    rbx,0x4
   14001a7eb:	add    r10,0x2
   14001a7ef:	lea    rdx,[rip+0xfffffffffffe580a]        # 0x140000000
   14001a7f6:	add    esi,r9d
   14001a7f9:	jmp    0x14001a700
   14001a7fe:	add    ecx,0xffff0000
   14001a804:	mov    edx,0x2800
   14001a809:	add    r10,0x2
   14001a80d:	mov    eax,ecx
   14001a80f:	and    ecx,0x3ff
   14001a815:	add    rbx,0x4
   14001a819:	shr    eax,0xa
   14001a81c:	add    ecx,0xdc00
   14001a822:	sub    ax,dx
   14001a825:	mov    WORD PTR [r10-0x2],ax
   14001a82a:	mov    DWORD PTR [rbx-0x4],esi
   14001a82d:	cmp    r10,r14
   14001a830:	jae    0x14001a84f
   14001a832:	mov    WORD PTR [r10],cx
   14001a836:	mov    DWORD PTR [rbx],esi
   14001a838:	add    rbx,0x4
   14001a83c:	add    r10,0x2
   14001a840:	lea    rdx,[rip+0xfffffffffffe57b9]        # 0x140000000
   14001a847:	add    esi,r9d
   14001a84a:	jmp    0x14001a700
   14001a84f:	mov    WORD PTR [rdi+0x90],cx
   14001a856:	mov    BYTE PTR [rdi+0x5d],0x1
   14001a85a:	add    esi,r9d
   14001a85d:	mov    DWORD PTR [r12],0xf
   14001a865:	lea    rdx,[rip+0xfffffffffffe5794]        # 0x140000000
   14001a86c:	jmp    0x14001a700
   14001a871:	mov    DWORD PTR [rdi+0x48],ecx
   14001a874:	mov    DWORD PTR [rdi+0x4c],r11d
   14001a878:	mov    BYTE PTR [rdi+0x40],r9b
   14001a87c:	jmp    0x14001a88a
   14001a87e:	mov    BYTE PTR [rdi+0x40],r9b
   14001a882:	mov    DWORD PTR [r12],0xc
   14001a88a:	cmp    r8,rbp
   14001a88d:	jae    0x14001a8a3
   14001a88f:	cmp    r10,r14
   14001a892:	jb     0x14001a8a3
   14001a894:	cmp    DWORD PTR [r12],0x0
   14001a899:	jg     0x14001a8a3
   14001a89b:	mov    DWORD PTR [r12],0xf
   14001a8a3:	mov    rbp,QWORD PTR [rsp+0x30]
   14001a8a8:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a8ad:	mov    rdi,QWORD PTR [rsp+0x40]
   14001a8b2:	mov    QWORD PTR [r13+0x30],rbx
   14001a8b6:	mov    rbx,QWORD PTR [rsp+0x28]
   14001a8bb:	mov    QWORD PTR [r13+0x20],r10
   14001a8bf:	mov    QWORD PTR [r13+0x10],r8
   14001a8c3:	pop    r15
   14001a8c5:	pop    r14
   14001a8c7:	pop    r13
   14001a8c9:	pop    r12
   14001a8cb:	ret    
   14001a8cc:	int3   
   14001a8cd:	int3   
   14001a8ce:	int3   
   14001a8cf:	int3   
   14001a8d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a8d5:	mov    QWORD PTR [rsp+0x18],rbp
   14001a8da:	mov    QWORD PTR [rsp+0x20],rsi
   14001a8df:	push   rdi
   14001a8e0:	push   r12
   14001a8e2:	push   r13
   14001a8e4:	mov    r10,QWORD PTR [rcx+0x8]
   14001a8e8:	mov    rbx,QWORD PTR [rcx+0x10]
   14001a8ec:	mov    rbp,QWORD PTR [rcx+0x18]
   14001a8f0:	mov    r8d,DWORD PTR [r10+0x54]
   14001a8f4:	mov    r9,QWORD PTR [rcx+0x20]
   14001a8f8:	mov    rdi,QWORD PTR [rcx+0x28]
   14001a8fc:	lea    rax,[rip+0x2fb7d]        # 0x14004a480
   14001a903:	mov    rsi,rdx
   14001a906:	mov    r12,rcx
   14001a909:	cmp    QWORD PTR [r10+0x30],rax
   14001a90d:	setne  r13b
   14001a911:	test   r8d,r8d
   14001a914:	je     0x14001a92b
   14001a916:	cmp    r9,rdi
   14001a919:	jae    0x14001a92b
   14001a91b:	mov    DWORD PTR [r10+0x54],0x0
   14001a923:	jmp    0x14001a995
   14001a925:	mov    BYTE PTR [r9],r8b
   14001a928:	inc    r9
   14001a92b:	cmp    rbx,rbp
   14001a92e:	jae    0x14001aaab
   14001a934:	cmp    r9,rdi
   14001a937:	jae    0x14001aa96
   14001a93d:	movzx  r8d,WORD PTR [rbx]
   14001a941:	add    rbx,0x2
   14001a945:	cmp    r8d,0x80
   14001a94c:	jl     0x14001a925
   14001a94e:	cmp    r8d,0x800
   14001a955:	mov    eax,r8d
   14001a958:	jge    0x14001a984
   14001a95a:	sar    eax,0x6
   14001a95d:	and    r8b,0x3f
   14001a961:	inc    r9
   14001a964:	or     al,0xc0
   14001a966:	or     r8b,0x80
   14001a96a:	mov    BYTE PTR [r9-0x1],al
   14001a96e:	cmp    r9,rdi
   14001a971:	jb     0x14001a925
   14001a973:	mov    BYTE PTR [r10+0x68],r8b
   14001a977:	mov    BYTE PTR [r10+0x5b],0x1
   14001a97c:	mov    DWORD PTR [rsi],0xf
   14001a982:	jmp    0x14001a92b
   14001a984:	and    eax,0xfffff800
   14001a989:	cmp    eax,0xd800
   14001a98e:	jne    0x14001a9d0
   14001a990:	test   r13b,r13b
   14001a993:	je     0x14001a9d0
   14001a995:	cmp    rbx,rbp
   14001a998:	jae    0x14001aa92
   14001a99e:	bt     r8d,0xa
   14001a9a3:	jb     0x14001aa86
   14001a9a9:	movzx  ecx,WORD PTR [rbx]
   14001a9ac:	mov    eax,ecx
   14001a9ae:	and    eax,0xfffffc00
   14001a9b3:	cmp    eax,0xdc00
   14001a9b8:	jne    0x14001aa86
   14001a9be:	add    r8d,0xffff2809
   14001a9c5:	shl    r8d,0xa
   14001a9c9:	add    r8d,ecx
   14001a9cc:	add    rbx,0x2
   14001a9d0:	mov    rax,rdi
   14001a9d3:	lea    rdx,[rsp+0x20]
   14001a9d8:	sub    rax,r9
   14001a9db:	cmp    rax,0x4
   14001a9df:	mov    eax,r8d
   14001a9e2:	cmovge rdx,r9
   14001a9e6:	cmp    r8d,0xffff
   14001a9ed:	jg     0x14001a9fd
   14001a9ef:	sar    eax,0xc
   14001a9f2:	mov    ecx,0x2
   14001a9f7:	or     al,0xe0
   14001a9f9:	mov    BYTE PTR [rdx],al
   14001a9fb:	jmp    0x14001aa16
   14001a9fd:	sar    eax,0x12
   14001aa00:	mov    ecx,0x3
   14001aa05:	or     al,0xf0
   14001aa07:	mov    BYTE PTR [rdx],al
   14001aa09:	mov    eax,r8d
   14001aa0c:	sar    eax,0xc
   14001aa0f:	and    al,0x3f
   14001aa11:	or     al,0x80
   14001aa13:	mov    BYTE PTR [rdx+0x1],al
   14001aa16:	mov    eax,r8d
   14001aa19:	and    r8b,0x3f
   14001aa1d:	movsxd r11,ecx
   14001aa20:	sar    eax,0x6
   14001aa23:	or     r8b,0x80
   14001aa27:	and    al,0x3f
   14001aa29:	mov    BYTE PTR [r11+rdx*1],r8b
   14001aa2d:	or     al,0x80
   14001aa2f:	mov    BYTE PTR [r11+rdx*1-0x1],al
   14001aa34:	cmp    rdx,r9
   14001aa37:	jne    0x14001aa47
   14001aa39:	lea    eax,[rcx+0x1]
   14001aa3c:	movsxd rcx,eax
   14001aa3f:	add    r9,rcx
   14001aa42:	jmp    0x14001a92b
   14001aa47:	lea    r8,[rsp+r11*1+0x20]
   14001aa4c:	cmp    rdx,r8
   14001aa4f:	ja     0x14001a92b
   14001aa55:	movzx  eax,BYTE PTR [rdx]
   14001aa58:	cmp    r9,rdi
   14001aa5b:	jae    0x14001aa65
   14001aa5d:	mov    BYTE PTR [r9],al
   14001aa60:	inc    r9
   14001aa63:	jmp    0x14001aa79
   14001aa65:	movsx  rcx,BYTE PTR [r10+0x5b]
   14001aa6a:	mov    BYTE PTR [rcx+r10*1+0x68],al
   14001aa6f:	inc    BYTE PTR [r10+0x5b]
   14001aa73:	mov    DWORD PTR [rsi],0xf
   14001aa79:	inc    rdx
   14001aa7c:	cmp    rdx,r8
   14001aa7f:	jbe    0x14001aa55
   14001aa81:	jmp    0x14001a92b
   14001aa86:	mov    DWORD PTR [r10+0x54],r8d
   14001aa8a:	mov    DWORD PTR [rsi],0xc
   14001aa90:	jmp    0x14001aa96
   14001aa92:	mov    DWORD PTR [r10+0x54],r8d
   14001aa96:	cmp    rbx,rbp
   14001aa99:	jae    0x14001aaab
   14001aa9b:	cmp    r9,rdi
   14001aa9e:	jb     0x14001aaab
   14001aaa0:	cmp    DWORD PTR [rsi],0x0
   14001aaa3:	jg     0x14001aaab
   14001aaa5:	mov    DWORD PTR [rsi],0xf
   14001aaab:	mov    rbp,QWORD PTR [rsp+0x30]
   14001aab0:	mov    rsi,QWORD PTR [rsp+0x38]
   14001aab5:	mov    QWORD PTR [r12+0x10],rbx
   14001aaba:	mov    rbx,QWORD PTR [rsp+0x28]
   14001aabf:	mov    QWORD PTR [r12+0x20],r9
   14001aac4:	pop    r13
   14001aac6:	pop    r12
   14001aac8:	pop    rdi
   14001aac9:	ret    
   14001aaca:	int3   
   14001aacb:	int3   
   14001aacc:	int3   
   14001aacd:	int3   
   14001aace:	int3   
   14001aacf:	int3   
   14001aad0:	mov    QWORD PTR [rsp+0x10],rbx
   14001aad5:	mov    QWORD PTR [rsp+0x20],rbp
   14001aada:	push   rsi
   14001aadb:	push   rdi
   14001aadc:	push   r12
   14001aade:	push   r13
   14001aae0:	push   r14
   14001aae2:	push   r15
   14001aae4:	mov    rbx,QWORD PTR [rcx+0x8]
   14001aae8:	mov    rsi,QWORD PTR [rcx+0x10]
   14001aaec:	mov    r10,QWORD PTR [rcx+0x30]
   14001aaf0:	mov    r8d,DWORD PTR [rbx+0x54]
   14001aaf4:	mov    r14,QWORD PTR [rcx+0x18]
   14001aaf8:	mov    r9,QWORD PTR [rcx+0x20]
   14001aafc:	mov    rbp,QWORD PTR [rcx+0x28]
   14001ab00:	lea    rax,[rip+0x2f979]        # 0x14004a480
   14001ab07:	mov    r15,rcx
   14001ab0a:	cmp    QWORD PTR [rbx+0x30],rax
   14001ab0e:	mov    r13,rdx
   14001ab11:	setne  cl
   14001ab14:	mov    BYTE PTR [rsp+0x38],cl
   14001ab18:	test   r8d,r8d
   14001ab1b:	je     0x14001ab32
   14001ab1d:	cmp    r9,rbp
   14001ab20:	jae    0x14001ab32
   14001ab22:	xor    r12d,r12d
   14001ab25:	or     r11d,0xffffffff
   14001ab29:	mov    DWORD PTR [rbx+0x54],r12d
   14001ab2d:	jmp    0x14001abbf
   14001ab32:	xor    r12d,r12d
   14001ab35:	mov    r11d,r12d
   14001ab38:	cmp    rsi,r14
   14001ab3b:	jae    0x14001ad0a
   14001ab41:	cmp    r9,rbp
   14001ab44:	jae    0x14001acf1
   14001ab4a:	movzx  r8d,WORD PTR [rsi]
   14001ab4e:	add    rsi,0x2
   14001ab52:	cmp    r8d,0x80
   14001ab59:	jge    0x14001ab6d
   14001ab5b:	mov    DWORD PTR [r10],r11d
   14001ab5e:	add    r10,0x4
   14001ab62:	inc    r11d
   14001ab65:	mov    BYTE PTR [r9],r8b
   14001ab68:	inc    r9
   14001ab6b:	jmp    0x14001ab38
   14001ab6d:	cmp    r8d,0x800
   14001ab74:	mov    eax,r8d
   14001ab77:	jge    0x14001abab
   14001ab79:	sar    eax,0x6
   14001ab7c:	mov    DWORD PTR [r10],r11d
   14001ab7f:	and    r8b,0x3f
   14001ab83:	or     al,0xc0
   14001ab85:	inc    r9
   14001ab88:	add    r10,0x4
   14001ab8c:	mov    BYTE PTR [r9-0x1],al
   14001ab90:	or     r8b,0x80
   14001ab94:	cmp    r9,rbp
   14001ab97:	jb     0x14001ab5b
   14001ab99:	mov    BYTE PTR [rbx+0x68],r8b
   14001ab9d:	mov    BYTE PTR [rbx+0x5b],0x1
   14001aba1:	mov    DWORD PTR [r13+0x0],0xf
   14001aba9:	jmp    0x14001ab38
   14001abab:	and    eax,0xfffff800
   14001abb0:	lea    r12d,[r11+0x1]
   14001abb4:	cmp    eax,0xd800
   14001abb9:	jne    0x14001abfd
   14001abbb:	test   cl,cl
   14001abbd:	je     0x14001abfd
   14001abbf:	cmp    rsi,r14
   14001abc2:	jae    0x14001aced
   14001abc8:	bt     r8d,0xa
   14001abcd:	jb     0x14001acdf
   14001abd3:	movzx  ecx,WORD PTR [rsi]
   14001abd6:	mov    eax,ecx
   14001abd8:	and    eax,0xfffffc00
   14001abdd:	cmp    eax,0xdc00
   14001abe2:	jne    0x14001acdf
   14001abe8:	add    r8d,0xffff2809
   14001abef:	add    rsi,0x2
   14001abf3:	shl    r8d,0xa
   14001abf7:	add    r8d,ecx
   14001abfa:	inc    r12d
   14001abfd:	mov    rax,rbp
   14001ac00:	lea    rdx,[rsp+0x48]
   14001ac05:	sub    rax,r9
   14001ac08:	cmp    rax,0x4
   14001ac0c:	mov    eax,r8d
   14001ac0f:	cmovge rdx,r9
   14001ac13:	cmp    r8d,0xffff
   14001ac1a:	jg     0x14001ac2a
   14001ac1c:	sar    eax,0xc
   14001ac1f:	mov    ecx,0x2
   14001ac24:	or     al,0xe0
   14001ac26:	mov    BYTE PTR [rdx],al
   14001ac28:	jmp    0x14001ac43
   14001ac2a:	sar    eax,0x12
   14001ac2d:	mov    ecx,0x3
   14001ac32:	or     al,0xf0
   14001ac34:	mov    BYTE PTR [rdx],al
   14001ac36:	mov    eax,r8d
   14001ac39:	sar    eax,0xc
   14001ac3c:	and    al,0x3f
   14001ac3e:	or     al,0x80
   14001ac40:	mov    BYTE PTR [rdx+0x1],al
   14001ac43:	mov    eax,r8d
   14001ac46:	and    r8b,0x3f
   14001ac4a:	movsxd rdi,ecx
   14001ac4d:	sar    eax,0x6
   14001ac50:	or     r8b,0x80
   14001ac54:	and    al,0x3f
   14001ac56:	mov    BYTE PTR [rdi+rdx*1],r8b
   14001ac5a:	or     al,0x80
   14001ac5c:	mov    BYTE PTR [rdi+rdx*1-0x1],al
   14001ac60:	cmp    rdx,r9
   14001ac63:	jne    0x14001ac90
   14001ac65:	lea    eax,[rcx+0x1]
   14001ac68:	mov    DWORD PTR [r10],r11d
   14001ac6b:	mov    DWORD PTR [r10+0x4],r11d
   14001ac6f:	movsxd rdx,eax
   14001ac72:	mov    DWORD PTR [r10+0x8],r11d
   14001ac76:	add    r9,rdx
   14001ac79:	cmp    ecx,0x3
   14001ac7c:	jl     0x14001ac82
   14001ac7e:	mov    DWORD PTR [r10+0xc],r11d
   14001ac82:	movzx  ecx,BYTE PTR [rsp+0x38]
   14001ac87:	lea    r10,[r10+rdx*4]
   14001ac8b:	jmp    0x14001ab35
   14001ac90:	lea    r8,[rsp+rdi*1+0x48]
   14001ac95:	cmp    rdx,r8
   14001ac98:	ja     0x14001acd6
   14001ac9a:	nop    WORD PTR [rax+rax*1+0x0]
   14001aca0:	cmp    r9,rbp
   14001aca3:	jae    0x14001acb7
   14001aca5:	mov    DWORD PTR [r10],r11d
   14001aca8:	movzx  eax,BYTE PTR [rdx]
   14001acab:	add    r10,0x4
   14001acaf:	mov    BYTE PTR [r9],al
   14001acb2:	inc    r9
   14001acb5:	jmp    0x14001acce
   14001acb7:	movsx  rcx,BYTE PTR [rbx+0x5b]
   14001acbc:	movzx  eax,BYTE PTR [rdx]
   14001acbf:	mov    BYTE PTR [rcx+rbx*1+0x68],al
   14001acc3:	inc    BYTE PTR [rbx+0x5b]
   14001acc6:	mov    DWORD PTR [r13+0x0],0xf
   14001acce:	inc    rdx
   14001acd1:	cmp    rdx,r8
   14001acd4:	jbe    0x14001aca0
   14001acd6:	mov    cl,BYTE PTR [rsp+0x38]
   14001acda:	jmp    0x14001ab35
   14001acdf:	mov    DWORD PTR [rbx+0x54],r8d
   14001ace3:	mov    DWORD PTR [r13+0x0],0xc
   14001aceb:	jmp    0x14001acf1
   14001aced:	mov    DWORD PTR [rbx+0x54],r8d
   14001acf1:	cmp    rsi,r14
   14001acf4:	jae    0x14001ad0a
   14001acf6:	cmp    r9,rbp
   14001acf9:	jb     0x14001ad0a
   14001acfb:	cmp    DWORD PTR [r13+0x0],0x0
   14001ad00:	jg     0x14001ad0a
   14001ad02:	mov    DWORD PTR [r13+0x0],0xf
   14001ad0a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ad0f:	mov    rbp,QWORD PTR [rsp+0x50]
   14001ad14:	mov    QWORD PTR [r15+0x20],r9
   14001ad18:	mov    QWORD PTR [r15+0x10],rsi
   14001ad1c:	mov    QWORD PTR [r15+0x30],r10
   14001ad20:	pop    r15
   14001ad22:	pop    r14
   14001ad24:	pop    r13
   14001ad26:	pop    r12
   14001ad28:	pop    rdi
   14001ad29:	pop    rsi
   14001ad2a:	ret    
   14001ad2b:	int3   
   14001ad2c:	int3   
   14001ad2d:	int3   
   14001ad2e:	int3   
   14001ad2f:	int3   
   14001ad30:	rex push rsi
   14001ad32:	mov    r8,QWORD PTR [rcx+0x10]
   14001ad36:	mov    r10,QWORD PTR [rcx+0x8]
   14001ad3a:	mov    rsi,rdx
   14001ad3d:	mov    rdx,QWORD PTR [rcx+0x18]
   14001ad41:	mov    r11,rcx
   14001ad44:	mov    r9,r8
   14001ad47:	cmp    r8,rdx
   14001ad4a:	jb     0x14001ad59
   14001ad4c:	mov    DWORD PTR [rsi],0x8
   14001ad52:	mov    eax,0xffff
   14001ad57:	pop    rsi
   14001ad58:	ret    
   14001ad59:	movzx  ecx,BYTE PTR [r8]
   14001ad5d:	inc    r8
   14001ad60:	cmp    cl,0x80
   14001ad63:	jae    0x14001ad6e
   14001ad65:	mov    QWORD PTR [r11+0x10],r8
   14001ad69:	movzx  eax,cl
   14001ad6c:	pop    rsi
   14001ad6d:	ret    
   14001ad6e:	mov    QWORD PTR [rsp+0x20],rdi
   14001ad73:	mov    QWORD PTR [rsp+0x28],r12
   14001ad78:	lea    r12,[rip+0xfffffffffffe5281]        # 0x140000000
   14001ad7f:	movzx  eax,cl
   14001ad82:	movsx  edi,BYTE PTR [rax+r12*1+0x49ff0]
   14001ad8b:	test   di,di
   14001ad8e:	jne    0x14001adb4
   14001ad90:	mov    rdi,QWORD PTR [rsp+0x20]
   14001ad95:	mov    r12,QWORD PTR [rsp+0x28]
   14001ad9a:	mov    BYTE PTR [r10+0x41],cl
   14001ad9e:	mov    BYTE PTR [r10+0x40],0x1
   14001ada3:	mov    DWORD PTR [rsi],0xc
   14001ada9:	mov    eax,0xffff
   14001adae:	mov    QWORD PTR [r11+0x10],r8
   14001adb2:	pop    rsi
   14001adb3:	ret    
   14001adb4:	mov    QWORD PTR [rsp+0x18],rbp
   14001adb9:	movzx  ebp,di
   14001adbc:	lea    rax,[r8+rbp*1-0x1]
   14001adc1:	cmp    rax,rdx
   14001adc4:	jbe    0x14001ae21
   14001adc6:	mov    BYTE PTR [r10+0x41],cl
   14001adca:	mov    DWORD PTR [rsi],0xb
   14001add0:	mov    cl,0x1
   14001add2:	cmp    r8,QWORD PTR [r11+0x18]
   14001add6:	jae    0x14001ae14
   14001add8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001ade0:	movzx  edx,BYTE PTR [r8]
   14001ade4:	movzx  eax,dl
   14001ade7:	and    al,0xc0
   14001ade9:	cmp    al,0x80
   14001adeb:	jne    0x14001ae0e
   14001aded:	movsx  rax,cl
   14001adf1:	inc    r8
   14001adf4:	inc    cl
   14001adf6:	mov    BYTE PTR [rax+r10*1+0x41],dl
   14001adfb:	cmp    r8,QWORD PTR [r11+0x18]
   14001adff:	jb     0x14001ade0
   14001ae01:	mov    BYTE PTR [r10+0x40],cl
   14001ae05:	mov    QWORD PTR [r11+0x10],r8
   14001ae09:	jmp    0x14001af31
   14001ae0e:	mov    DWORD PTR [rsi],0xc
   14001ae14:	mov    BYTE PTR [r10+0x40],cl
   14001ae18:	mov    QWORD PTR [r11+0x10],r8
   14001ae1c:	jmp    0x14001af31
   14001ae21:	movzx  edx,cl
   14001ae24:	movzx  ecx,di
   14001ae27:	mov    QWORD PTR [rsp+0x10],rbx
   14001ae2c:	shl    edx,0x6
   14001ae2f:	sub    ecx,0x2
   14001ae32:	mov    bl,0x1
   14001ae34:	je     0x14001aeaa
   14001ae36:	sub    ecx,0x1
   14001ae39:	je     0x14001ae92
   14001ae3b:	sub    ecx,0x1
   14001ae3e:	je     0x14001ae7a
   14001ae40:	sub    ecx,0x1
   14001ae43:	je     0x14001ae62
   14001ae45:	cmp    ecx,0x1
   14001ae48:	jne    0x14001aebf
   14001ae4a:	movzx  ecx,BYTE PTR [r8]
   14001ae4e:	add    edx,ecx
   14001ae50:	and    cl,0xc0
   14001ae53:	shl    edx,0x6
   14001ae56:	cmp    cl,0x80
   14001ae59:	je     0x14001ae5f
   14001ae5b:	xor    bl,bl
   14001ae5d:	jmp    0x14001aebf
   14001ae5f:	inc    r8
   14001ae62:	movzx  ecx,BYTE PTR [r8]
   14001ae66:	add    edx,ecx
   14001ae68:	and    cl,0xc0
   14001ae6b:	shl    edx,0x6
   14001ae6e:	cmp    cl,0x80
   14001ae71:	je     0x14001ae77
   14001ae73:	xor    bl,bl
   14001ae75:	jmp    0x14001aebf
   14001ae77:	inc    r8
   14001ae7a:	movzx  ecx,BYTE PTR [r8]
   14001ae7e:	add    edx,ecx
   14001ae80:	and    cl,0xc0
   14001ae83:	shl    edx,0x6
   14001ae86:	cmp    cl,0x80
   14001ae89:	je     0x14001ae8f
   14001ae8b:	xor    bl,bl
   14001ae8d:	jmp    0x14001aebf
   14001ae8f:	inc    r8
   14001ae92:	movzx  ecx,BYTE PTR [r8]
   14001ae96:	add    edx,ecx
   14001ae98:	and    cl,0xc0
   14001ae9b:	shl    edx,0x6
   14001ae9e:	cmp    cl,0x80
   14001aea1:	je     0x14001aea7
   14001aea3:	xor    bl,bl
   14001aea5:	jmp    0x14001aebf
   14001aea7:	inc    r8
   14001aeaa:	movzx  ecx,BYTE PTR [r8]
   14001aeae:	add    edx,ecx
   14001aeb0:	and    cl,0xc0
   14001aeb3:	cmp    cl,0x80
   14001aeb6:	je     0x14001aebc
   14001aeb8:	xor    bl,bl
   14001aeba:	jmp    0x14001aebf
   14001aebc:	inc    r8
   14001aebf:	sub    edx,DWORD PTR [r12+rbp*4+0x49fd0]
   14001aec7:	test   bl,bl
   14001aec9:	mov    rbx,QWORD PTR [rsp+0x10]
   14001aece:	mov    QWORD PTR [r11+0x10],r8
   14001aed2:	je     0x14001af09
   14001aed4:	cmp    edx,0x10ffff
   14001aeda:	ja     0x14001af09
   14001aedc:	cmp    edx,DWORD PTR [r12+rbp*4+0x4a0f0]
   14001aee4:	jb     0x14001af09
   14001aee6:	mov    ecx,edx
   14001aee8:	and    ecx,0xfffff800
   14001aeee:	cmp    ecx,0xd800
   14001aef4:	je     0x14001af09
   14001aef6:	mov    rbp,QWORD PTR [rsp+0x18]
   14001aefb:	mov    rdi,QWORD PTR [rsp+0x20]
   14001af00:	mov    r12,QWORD PTR [rsp+0x28]
   14001af05:	mov    eax,edx
   14001af07:	pop    rsi
   14001af08:	ret    
   14001af09:	xor    dl,dl
   14001af0b:	cmp    r9,r8
   14001af0e:	jae    0x14001af27
   14001af10:	movzx  eax,BYTE PTR [r9]
   14001af14:	movsx  rcx,dl
   14001af18:	inc    r9
   14001af1b:	inc    dl
   14001af1d:	mov    BYTE PTR [rcx+r10*1+0x41],al
   14001af22:	cmp    r9,r8
   14001af25:	jb     0x14001af10
   14001af27:	mov    BYTE PTR [r10+0x40],dl
   14001af2b:	mov    DWORD PTR [rsi],0xc
   14001af31:	mov    rbp,QWORD PTR [rsp+0x18]
   14001af36:	mov    rdi,QWORD PTR [rsp+0x20]
   14001af3b:	mov    r12,QWORD PTR [rsp+0x28]
   14001af40:	mov    eax,0xffff
   14001af45:	pop    rsi
   14001af46:	ret    
   14001af47:	int3   
   14001af48:	int3   
   14001af49:	int3   
   14001af4a:	int3   
   14001af4b:	int3   
   14001af4c:	int3   
   14001af4d:	int3   
   14001af4e:	int3   
   14001af4f:	int3   
   14001af50:	mov    QWORD PTR [rsp+0x20],rbx
   14001af55:	mov    QWORD PTR [rsp+0x18],r8
   14001af5a:	mov    QWORD PTR [rsp+0x10],rdx
   14001af5f:	mov    QWORD PTR [rsp+0x8],rcx
   14001af64:	push   rbp
   14001af65:	push   rsi
   14001af66:	push   rdi
   14001af67:	push   r12
   14001af69:	push   r13
   14001af6b:	push   r14
   14001af6d:	push   r15
   14001af6f:	mov    r14,QWORD PTR [rdx+0x8]
   14001af73:	mov    r10,QWORD PTR [rcx+0x20]
   14001af77:	mov    eax,DWORD PTR [rcx+0x28]
   14001af7a:	mov    r11d,DWORD PTR [r14+0x48]
   14001af7e:	mov    r9,QWORD PTR [rdx+0x10]
   14001af82:	mov    r15,QWORD PTR [rdx+0x18]
   14001af86:	sub    eax,r10d
   14001af89:	mov    rdi,r8
   14001af8c:	mov    r12,rdx
   14001af8f:	mov    rbp,rcx
   14001af92:	test   r11d,r11d
   14001af95:	je     0x14001afa7
   14001af97:	movzx  r13d,BYTE PTR [r14+0x40]
   14001af9c:	movzx  ebx,BYTE PTR [r14+0x4c]
   14001afa1:	movzx  edx,r13b
   14001afa5:	jmp    0x14001afae
   14001afa7:	xor    bl,bl
   14001afa9:	xor    r13b,r13b
   14001afac:	xor    dl,dl
   14001afae:	movsx  esi,r13b
   14001afb2:	movsx  ecx,bl
   14001afb5:	lea    r8,[rip+0xfffffffffffe5044]        # 0x140000000
   14001afbc:	sub    esi,r9d
   14001afbf:	add    esi,r15d
   14001afc2:	cmp    esi,ecx
   14001afc4:	jl     0x14001b05a
   14001afca:	cmp    eax,ecx
   14001afcc:	jge    0x14001afe5
   14001afce:	mov    DWORD PTR [rdi],0xffffff81
   14001afd4:	mov    rbx,QWORD PTR [rsp+0x58]
   14001afd9:	pop    r15
   14001afdb:	pop    r14
   14001afdd:	pop    r13
   14001afdf:	pop    r12
   14001afe1:	pop    rdi
   14001afe2:	pop    rsi
   14001afe3:	pop    rbp
   14001afe4:	ret    
   14001afe5:	cmp    esi,eax
   14001afe7:	cmovg  esi,eax
   14001afea:	xor    r8d,r8d
   14001afed:	xor    edi,edi
   14001afef:	mov    ebp,esi
   14001aff1:	movsxd r12,esi
   14001aff4:	sub    ebp,ecx
   14001aff6:	cmp    r8d,ebp
   14001aff9:	jge    0x14001b044
   14001affb:	movsx  rax,r13b
   14001afff:	mov    rcx,r12
   14001b002:	sub    rcx,rax
   14001b005:	sub    rcx,rdi
   14001b008:	movzx  ecx,BYTE PTR [rcx+r9*1-0x1]
   14001b00e:	movzx  eax,cl
   14001b011:	and    al,0xc0
   14001b013:	cmp    al,0x80
   14001b015:	jne    0x14001b025
   14001b017:	inc    rdi
   14001b01a:	inc    r8d
   14001b01d:	cmp    rdi,0x3
   14001b021:	jl     0x14001aff6
   14001b023:	jmp    0x14001b044
   14001b025:	movzx  eax,cl
   14001b028:	lea    rcx,[rip+0xfffffffffffe4fd1]        # 0x140000000
   14001b02f:	movzx  eax,BYTE PTR [rax+rcx*1+0x4f450]
   14001b037:	cmp    r8d,eax
   14001b03a:	jge    0x14001b044
   14001b03c:	or     eax,0xffffffff
   14001b03f:	sub    eax,r8d
   14001b042:	add    esi,eax
   14001b044:	mov    r12,QWORD PTR [rsp+0x48]
   14001b049:	mov    rbp,QWORD PTR [rsp+0x40]
   14001b04e:	mov    rdi,QWORD PTR [rsp+0x50]
   14001b053:	lea    r8,[rip+0xfffffffffffe4fa6]        # 0x140000000
   14001b05a:	test   r11d,r11d
   14001b05d:	je     0x14001b07f
   14001b05f:	mov    DWORD PTR [r14+0x48],0x0
   14001b067:	mov    BYTE PTR [r14+0x40],0x0
   14001b06c:	jmp    0x14001b167
   14001b071:	add    r10,0x3
   14001b075:	sub    esi,0x3
   14001b078:	lea    r8,[rip+0xfffffffffffe4f81]        # 0x140000000
   14001b07f:	test   esi,esi
   14001b081:	jle    0x14001b317
   14001b087:	movzx  ecx,BYTE PTR [r9]
   14001b08b:	inc    r9
   14001b08e:	test   cl,cl
   14001b090:	js     0x14001b09c
   14001b092:	mov    BYTE PTR [r10],cl
   14001b095:	inc    r10
   14001b098:	dec    esi
   14001b09a:	jmp    0x14001b07f
   14001b09c:	cmp    cl,0xe0
   14001b09f:	jbe    0x14001b0eb
   14001b0a1:	movzx  edx,BYTE PTR [r9]
   14001b0a5:	cmp    dl,0x80
   14001b0a8:	jb     0x14001b151
   14001b0ae:	cmp    cl,0xed
   14001b0b1:	jae    0x14001b0bb
   14001b0b3:	cmp    dl,0xbf
   14001b0b6:	jbe    0x14001b0ca
   14001b0b8:	cmp    cl,0xed
   14001b0bb:	jne    0x14001b151
   14001b0c1:	cmp    dl,0x9f
   14001b0c4:	ja     0x14001b151
   14001b0ca:	movzx  r8d,BYTE PTR [r9+0x1]
   14001b0cf:	lea    eax,[r8+0x80]
   14001b0d6:	cmp    al,0x3f
   14001b0d8:	ja     0x14001b14a
   14001b0da:	mov    BYTE PTR [r10],cl
   14001b0dd:	mov    BYTE PTR [r10+0x1],dl
   14001b0e1:	add    r9,0x2
   14001b0e5:	mov    BYTE PTR [r10+0x2],r8b
   14001b0e9:	jmp    0x14001b071
   14001b0eb:	jae    0x14001b116
   14001b0ed:	cmp    cl,0xc2
   14001b0f0:	jb     0x14001b151
   14001b0f2:	movzx  edx,BYTE PTR [r9]
   14001b0f6:	lea    eax,[rdx+0x80]
   14001b0fc:	cmp    al,0x3f
   14001b0fe:	ja     0x14001b151
   14001b100:	mov    BYTE PTR [r10],cl
   14001b103:	mov    BYTE PTR [r10+0x1],dl
   14001b107:	add    r10,0x2
   14001b10b:	inc    r9
   14001b10e:	sub    esi,0x2
   14001b111:	jmp    0x14001b07f
   14001b116:	cmp    cl,0xe0
   14001b119:	jne    0x14001b151
   14001b11b:	movzx  r8d,BYTE PTR [r9]
   14001b11f:	lea    eax,[r8+0x60]
   14001b123:	cmp    al,0x1f
   14001b125:	ja     0x14001b14a
   14001b127:	movzx  edx,BYTE PTR [r9+0x1]
   14001b12c:	lea    eax,[rdx+0x80]
   14001b132:	cmp    al,0x3f
   14001b134:	ja     0x14001b14a
   14001b136:	mov    BYTE PTR [r10],cl
   14001b139:	mov    BYTE PTR [r10+0x1],r8b
   14001b13d:	add    r9,0x2
   14001b141:	mov    BYTE PTR [r10+0x2],dl
   14001b145:	jmp    0x14001b071
   14001b14a:	lea    r8,[rip+0xfffffffffffe4eaf]        # 0x140000000
   14001b151:	movzx  eax,cl
   14001b154:	xor    r13b,r13b
   14001b157:	mov    dl,0x1
   14001b159:	mov    bl,BYTE PTR [rax+r8*1+0x4f450]
   14001b161:	movzx  r11d,cl
   14001b165:	inc    bl
   14001b167:	cmp    dl,bl
   14001b169:	jge    0x14001b19b
   14001b16b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b170:	cmp    r9,r15
   14001b173:	jae    0x14001b25d
   14001b179:	movzx  ecx,BYTE PTR [r9]
   14001b17d:	movzx  eax,cl
   14001b180:	and    al,0xc0
   14001b182:	cmp    al,0x80
   14001b184:	jne    0x14001b199
   14001b186:	shl    r11d,0x6
   14001b18a:	movzx  eax,cl
   14001b18d:	inc    dl
   14001b18f:	add    r11d,eax
   14001b192:	inc    r9
   14001b195:	cmp    dl,bl
   14001b197:	jl     0x14001b170
   14001b199:	cmp    dl,bl
   14001b19b:	jne    0x14001b2b7
   14001b1a1:	cmp    dl,0x3
   14001b1a4:	je     0x14001b1ab
   14001b1a6:	cmp    dl,0x2
   14001b1a9:	jne    0x14001b1d3
   14001b1ab:	movsx  rax,dl
   14001b1af:	sub    r11d,DWORD PTR [r8+rax*4+0x4a128]
   14001b1b7:	cmp    r11d,DWORD PTR [r8+rax*4+0x4a110]
   14001b1bf:	jl     0x14001b1d3
   14001b1c1:	cmp    r11d,0xd7ff
   14001b1c8:	jle    0x14001b1f5
   14001b1ca:	cmp    r11d,0xe000
   14001b1d1:	jge    0x14001b1f5
   14001b1d3:	cmp    dl,0x4
   14001b1d6:	jne    0x14001b2b7
   14001b1dc:	sub    r11d,0x3c82080
   14001b1e3:	lea    eax,[r11-0x10000]
   14001b1ea:	cmp    eax,0xfffff
   14001b1ef:	ja     0x14001b2b7
   14001b1f5:	xor    r11b,r11b
   14001b1f8:	test   r13b,r13b
   14001b1fb:	jle    0x14001b223
   14001b1fd:	movzx  r11d,r13b
   14001b201:	lea    rcx,[r14+0x41]
   14001b205:	mov    r8,r11
   14001b208:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b210:	movzx  eax,BYTE PTR [rcx]
   14001b213:	inc    r10
   14001b216:	inc    rcx
   14001b219:	sub    r8,0x1
   14001b21d:	mov    BYTE PTR [r10-0x1],al
   14001b221:	jne    0x14001b210
   14001b223:	movsx  eax,r13b
   14001b227:	movsx  r8d,dl
   14001b22b:	mov    ecx,r8d
   14001b22e:	sub    ecx,eax
   14001b230:	movsxd rax,ecx
   14001b233:	sub    r9,rax
   14001b236:	cmp    r11b,dl
   14001b239:	jge    0x14001b255
   14001b23b:	sub    dl,r11b
   14001b23e:	movzx  ecx,dl
   14001b241:	movzx  eax,BYTE PTR [r9]
   14001b245:	inc    r10
   14001b248:	inc    r9
   14001b24b:	sub    rcx,0x1
   14001b24f:	mov    BYTE PTR [r10-0x1],al
   14001b253:	jne    0x14001b241
   14001b255:	sub    esi,r8d
   14001b258:	jmp    0x14001b078
   14001b25d:	movsx  eax,r13b
   14001b261:	movsx  ecx,dl
   14001b264:	sub    ecx,eax
   14001b266:	movsxd rax,ecx
   14001b269:	sub    r9,rax
   14001b26c:	cmp    r13b,dl
   14001b26f:	jge    0x14001b2a3
   14001b271:	movsx  rax,r13b
   14001b275:	lea    rcx,[rax+r14*1+0x41]
   14001b27a:	movzx  eax,dl
   14001b27d:	sub    al,r13b
   14001b280:	movzx  r8d,al
   14001b284:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001b290:	movzx  eax,BYTE PTR [r9]
   14001b294:	inc    rcx
   14001b297:	inc    r9
   14001b29a:	sub    r8,0x1
   14001b29e:	mov    BYTE PTR [rcx-0x1],al
   14001b2a1:	jne    0x14001b290
   14001b2a3:	movsx  eax,bl
   14001b2a6:	mov    DWORD PTR [r14+0x48],r11d
   14001b2aa:	mov    BYTE PTR [r14+0x40],dl
   14001b2ae:	mov    DWORD PTR [r14+0x4c],eax
   14001b2b2:	jmp    0x14001b3bd
   14001b2b7:	movsx  eax,r13b
   14001b2bb:	movsx  ecx,dl
   14001b2be:	sub    ecx,eax
   14001b2c0:	movsxd rax,ecx
   14001b2c3:	sub    r9,rax
   14001b2c6:	cmp    r13b,dl
   14001b2c9:	jge    0x14001b2f3
   14001b2cb:	movsx  rax,r13b
   14001b2cf:	lea    rcx,[rax+r14*1+0x41]
   14001b2d4:	movzx  eax,dl
   14001b2d7:	sub    al,r13b
   14001b2da:	movzx  r8d,al
   14001b2de:	xchg   ax,ax
   14001b2e0:	movzx  eax,BYTE PTR [r9]
   14001b2e4:	inc    rcx
   14001b2e7:	inc    r9
   14001b2ea:	sub    r8,0x1
   14001b2ee:	mov    BYTE PTR [rcx-0x1],al
   14001b2f1:	jne    0x14001b2e0
   14001b2f3:	mov    BYTE PTR [r14+0x40],dl
   14001b2f7:	mov    QWORD PTR [r12+0x10],r9
   14001b2fc:	mov    QWORD PTR [rbp+0x20],r10
   14001b300:	mov    DWORD PTR [rdi],0xc
   14001b306:	mov    rbx,QWORD PTR [rsp+0x58]
   14001b30b:	pop    r15
   14001b30d:	pop    r14
   14001b30f:	pop    r13
   14001b311:	pop    r12
   14001b313:	pop    rdi
   14001b314:	pop    rsi
   14001b315:	pop    rbp
   14001b316:	ret    
   14001b317:	cmp    DWORD PTR [rdi],0x0
   14001b31a:	jg     0x14001b3bd
   14001b320:	cmp    r9,r15
   14001b323:	jae    0x14001b3bd
   14001b329:	cmp    r10,QWORD PTR [rbp+0x28]
   14001b32d:	jne    0x14001b33a
   14001b32f:	mov    DWORD PTR [rdi],0xf
   14001b335:	jmp    0x14001b3bd
   14001b33a:	movzx  edx,BYTE PTR [r9]
   14001b33e:	mov    rcx,r15
   14001b341:	movzx  r11d,BYTE PTR [rdx+r8*1+0x4f450]
   14001b34a:	sub    rcx,r9
   14001b34d:	inc    r11b
   14001b350:	movsx  rax,r11b
   14001b354:	cmp    rax,rcx
   14001b357:	jle    0x14001b3b7
   14001b359:	inc    r9
   14001b35c:	movzx  ecx,dl
   14001b35f:	mov    BYTE PTR [r14+0x41],dl
   14001b363:	mov    r8b,0x1
   14001b366:	cmp    r9,r15
   14001b369:	je     0x14001b399
   14001b36b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b370:	movzx  edx,BYTE PTR [r9]
   14001b374:	movzx  eax,dl
   14001b377:	and    al,0xc0
   14001b379:	cmp    al,0x80
   14001b37b:	jne    0x14001b3ab
   14001b37d:	shl    ecx,0x6
   14001b380:	movzx  eax,dl
   14001b383:	inc    r9
   14001b386:	add    ecx,eax
   14001b388:	movsx  rax,r8b
   14001b38c:	inc    r8b
   14001b38f:	mov    BYTE PTR [rax+r14*1+0x41],dl
   14001b394:	cmp    r9,r15
   14001b397:	jne    0x14001b370
   14001b399:	movsx  eax,r11b
   14001b39d:	mov    DWORD PTR [r14+0x48],ecx
   14001b3a1:	mov    BYTE PTR [r14+0x40],r8b
   14001b3a5:	mov    DWORD PTR [r14+0x4c],eax
   14001b3a9:	jmp    0x14001b3bd
   14001b3ab:	mov    BYTE PTR [r14+0x40],r8b
   14001b3af:	mov    DWORD PTR [rdi],0xc
   14001b3b5:	jmp    0x14001b3bd
   14001b3b7:	mov    DWORD PTR [rdi],0xffffff81
   14001b3bd:	mov    rbx,QWORD PTR [rsp+0x58]
   14001b3c2:	mov    QWORD PTR [r12+0x10],r9
   14001b3c7:	mov    QWORD PTR [rbp+0x20],r10
   14001b3cb:	pop    r15
   14001b3cd:	pop    r14
   14001b3cf:	pop    r13
   14001b3d1:	pop    r12
   14001b3d3:	pop    rdi
   14001b3d4:	pop    rsi
   14001b3d5:	pop    rbp
   14001b3d6:	ret    
   14001b3d7:	int3   
   14001b3d8:	int3   
   14001b3d9:	int3   
   14001b3da:	int3   
   14001b3db:	int3   
   14001b3dc:	int3   
   14001b3dd:	int3   
   14001b3de:	int3   
   14001b3df:	int3   
   14001b3e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b3e5:	mov    QWORD PTR [rsp+0x10],rbp
   14001b3ea:	mov    QWORD PTR [rsp+0x18],rsi
   14001b3ef:	mov    QWORD PTR [rsp+0x20],rdi
   14001b3f4:	push   r12
   14001b3f6:	mov    rsi,QWORD PTR [rcx+0x8]
   14001b3fa:	mov    r9,QWORD PTR [rcx+0x10]
   14001b3fe:	mov    r8,QWORD PTR [rcx+0x20]
   14001b402:	cmp    DWORD PTR [rsi+0x48],0x0
   14001b406:	mov    r11,QWORD PTR [rcx+0x18]
   14001b40a:	mov    rdi,QWORD PTR [rcx+0x28]
   14001b40e:	mov    rbp,rdx
   14001b411:	mov    rbx,rcx
   14001b414:	mov    r12d,0x2840
   14001b41a:	je     0x14001b44a
   14001b41c:	cmp    r8,rdi
   14001b41f:	jae    0x14001b44a
   14001b421:	movsx  r10d,BYTE PTR [rsi+0x40]
   14001b426:	mov    BYTE PTR [rsi+0x40],0x0
   14001b42a:	mov    rax,QWORD PTR [rcx+0x8]
   14001b42e:	mov    edx,DWORD PTR [rax+0x48]
   14001b431:	mov    DWORD PTR [rax+0x48],0x0
   14001b438:	dec    edx
   14001b43a:	cmp    r10d,0x4
   14001b43e:	jae    0x14001b484
   14001b440:	jmp    0x14001b461
   14001b442:	mov    WORD PTR [r8],dx
   14001b446:	add    r8,0x2
   14001b44a:	cmp    r9,r11
   14001b44d:	jae    0x14001b51f
   14001b453:	cmp    r8,rdi
   14001b456:	jae    0x14001b508
   14001b45c:	xor    r10d,r10d
   14001b45f:	xor    edx,edx
   14001b461:	cmp    r9,r11
   14001b464:	jae    0x14001b4f6
   14001b46a:	movzx  ecx,BYTE PTR [r9]
   14001b46e:	shl    edx,0x8
   14001b471:	inc    r9
   14001b474:	mov    BYTE PTR [r10+rsi*1+0x41],cl
   14001b479:	inc    r10d
   14001b47c:	or     edx,ecx
   14001b47e:	cmp    r10d,0x4
   14001b482:	jb     0x14001b461
   14001b484:	cmp    edx,0x10ffff
   14001b48a:	ja     0x14001b4e5
   14001b48c:	mov    eax,edx
   14001b48e:	and    eax,0xfffff800
   14001b493:	cmp    eax,0xd800
   14001b498:	je     0x14001b4e5
   14001b49a:	cmp    edx,0xffff
   14001b4a0:	jbe    0x14001b442
   14001b4a2:	mov    eax,edx
   14001b4a4:	and    edx,0x3ff
   14001b4aa:	add    r8,0x2
   14001b4ae:	shr    eax,0xa
   14001b4b1:	or     edx,0xdc00
   14001b4b7:	sub    ax,r12w
   14001b4bb:	mov    WORD PTR [r8-0x2],ax
   14001b4c0:	cmp    r8,rdi
   14001b4c3:	jb     0x14001b442
   14001b4c9:	mov    rax,QWORD PTR [rbx+0x8]
   14001b4cd:	mov    WORD PTR [rax+0x90],dx
   14001b4d4:	mov    rax,QWORD PTR [rbx+0x8]
   14001b4d8:	mov    BYTE PTR [rax+0x5d],0x1
   14001b4dc:	mov    DWORD PTR [rbp+0x0],0xf
   14001b4e3:	jmp    0x14001b508
   14001b4e5:	mov    rax,QWORD PTR [rbx+0x8]
   14001b4e9:	mov    BYTE PTR [rax+0x40],r10b
   14001b4ed:	mov    DWORD PTR [rbp+0x0],0xc
   14001b4f4:	jmp    0x14001b508
   14001b4f6:	mov    rax,QWORD PTR [rbx+0x8]
   14001b4fa:	lea    ecx,[rdx+0x1]
   14001b4fd:	mov    DWORD PTR [rax+0x48],ecx
   14001b500:	mov    rax,QWORD PTR [rbx+0x8]
   14001b504:	mov    BYTE PTR [rax+0x40],r10b
   14001b508:	cmp    r9,r11
   14001b50b:	jae    0x14001b51f
   14001b50d:	cmp    r8,rdi
   14001b510:	jb     0x14001b51f
   14001b512:	cmp    DWORD PTR [rbp+0x0],0x0
   14001b516:	jg     0x14001b51f
   14001b518:	mov    DWORD PTR [rbp+0x0],0xf
   14001b51f:	mov    rbp,QWORD PTR [rsp+0x18]
   14001b524:	mov    rsi,QWORD PTR [rsp+0x20]
   14001b529:	mov    rdi,QWORD PTR [rsp+0x28]
   14001b52e:	mov    QWORD PTR [rbx+0x20],r8
   14001b532:	mov    QWORD PTR [rbx+0x10],r9
   14001b536:	mov    rbx,QWORD PTR [rsp+0x10]
   14001b53b:	pop    r12
   14001b53d:	ret    
   14001b53e:	int3   
   14001b53f:	int3   
   14001b540:	mov    QWORD PTR [rsp+0x8],rbx
   14001b545:	mov    QWORD PTR [rsp+0x10],rbp
   14001b54a:	mov    QWORD PTR [rsp+0x18],rsi
   14001b54f:	mov    QWORD PTR [rsp+0x20],rdi
   14001b554:	push   r12
   14001b556:	push   r13
   14001b558:	push   r14
   14001b55a:	mov    r12,QWORD PTR [rcx+0x8]
   14001b55e:	mov    r8,QWORD PTR [rcx+0x10]
   14001b562:	mov    r9,QWORD PTR [rcx+0x20]
   14001b566:	mov    r11,QWORD PTR [rcx+0x30]
   14001b56a:	mov    rbx,QWORD PTR [rcx+0x18]
   14001b56e:	mov    rbp,QWORD PTR [rcx+0x28]
   14001b572:	xor    esi,esi
   14001b574:	mov    r13,rdx
   14001b577:	mov    rdi,rcx
   14001b57a:	mov    r14d,0x2840
   14001b580:	cmp    DWORD PTR [r12+0x48],esi
   14001b585:	je     0x14001b5ab
   14001b587:	cmp    r9,rbp
   14001b58a:	jae    0x14001b5ab
   14001b58c:	movsx  r10d,BYTE PTR [r12+0x40]
   14001b592:	mov    BYTE PTR [r12+0x40],sil
   14001b597:	mov    rax,QWORD PTR [rcx+0x8]
   14001b59b:	mov    edx,DWORD PTR [rax+0x48]
   14001b59e:	mov    DWORD PTR [rax+0x48],esi
   14001b5a1:	dec    edx
   14001b5a3:	cmp    r10d,0x4
   14001b5a7:	jae    0x14001b5e5
   14001b5a9:	jmp    0x14001b5c2
   14001b5ab:	cmp    r8,rbx
   14001b5ae:	jae    0x14001b69f
   14001b5b4:	cmp    r9,rbp
   14001b5b7:	jae    0x14001b686
   14001b5bd:	xor    r10d,r10d
   14001b5c0:	xor    edx,edx
   14001b5c2:	cmp    r8,rbx
   14001b5c5:	jae    0x14001b674
   14001b5cb:	movzx  ecx,BYTE PTR [r8]
   14001b5cf:	shl    edx,0x8
   14001b5d2:	inc    r8
   14001b5d5:	mov    BYTE PTR [r10+r12*1+0x41],cl
   14001b5da:	inc    r10d
   14001b5dd:	or     edx,ecx
   14001b5df:	cmp    r10d,0x4
   14001b5e3:	jb     0x14001b5c2
   14001b5e5:	cmp    edx,0x10ffff
   14001b5eb:	ja     0x14001b662
   14001b5ed:	mov    eax,edx
   14001b5ef:	and    eax,0xfffff800
   14001b5f4:	cmp    eax,0xd800
   14001b5f9:	je     0x14001b662
   14001b5fb:	cmp    edx,0xffff
   14001b601:	jbe    0x14001b62e
   14001b603:	mov    eax,edx
   14001b605:	and    edx,0x3ff
   14001b60b:	add    r9,0x2
   14001b60f:	shr    eax,0xa
   14001b612:	add    r11,0x4
   14001b616:	or     edx,0xdc00
   14001b61c:	sub    ax,r14w
   14001b620:	mov    WORD PTR [r9-0x2],ax
   14001b625:	mov    DWORD PTR [r11-0x4],esi
   14001b629:	cmp    r9,rbp
   14001b62c:	jae    0x14001b645
   14001b62e:	mov    WORD PTR [r9],dx
   14001b632:	mov    DWORD PTR [r11],esi
   14001b635:	add    r11,0x4
   14001b639:	add    r9,0x2
   14001b63d:	add    esi,r10d
   14001b640:	jmp    0x14001b5ab
   14001b645:	mov    rax,QWORD PTR [rdi+0x8]
   14001b649:	mov    WORD PTR [rax+0x90],dx
   14001b650:	mov    rax,QWORD PTR [rdi+0x8]
   14001b654:	mov    BYTE PTR [rax+0x5d],0x1
   14001b658:	mov    DWORD PTR [r13+0x0],0xf
   14001b660:	jmp    0x14001b686
   14001b662:	mov    rax,QWORD PTR [rdi+0x8]
   14001b666:	mov    BYTE PTR [rax+0x40],r10b
   14001b66a:	mov    DWORD PTR [r13+0x0],0xc
   14001b672:	jmp    0x14001b686
   14001b674:	mov    rax,QWORD PTR [rdi+0x8]
   14001b678:	lea    ecx,[rdx+0x1]
   14001b67b:	mov    DWORD PTR [rax+0x48],ecx
   14001b67e:	mov    rax,QWORD PTR [rdi+0x8]
   14001b682:	mov    BYTE PTR [rax+0x40],r10b
   14001b686:	cmp    r8,rbx
   14001b689:	jae    0x14001b69f
   14001b68b:	cmp    r9,rbp
   14001b68e:	jb     0x14001b69f
   14001b690:	cmp    DWORD PTR [r13+0x0],0x0
   14001b695:	jg     0x14001b69f
   14001b697:	mov    DWORD PTR [r13+0x0],0xf
   14001b69f:	mov    rbx,QWORD PTR [rsp+0x20]
   14001b6a4:	mov    rbp,QWORD PTR [rsp+0x28]
   14001b6a9:	mov    rsi,QWORD PTR [rsp+0x30]
   14001b6ae:	mov    QWORD PTR [rdi+0x20],r9
   14001b6b2:	mov    QWORD PTR [rdi+0x10],r8
   14001b6b6:	mov    QWORD PTR [rdi+0x30],r11
   14001b6ba:	mov    rdi,QWORD PTR [rsp+0x38]
   14001b6bf:	pop    r14
   14001b6c1:	pop    r13
   14001b6c3:	pop    r12
   14001b6c5:	ret    
   14001b6c6:	int3   
   14001b6c7:	int3   
   14001b6c8:	int3   
   14001b6c9:	int3   
   14001b6ca:	int3   
   14001b6cb:	int3   
   14001b6cc:	int3   
   14001b6cd:	int3   
   14001b6ce:	int3   
   14001b6cf:	int3   
   14001b6d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001b6d5:	mov    QWORD PTR [rsp+0x18],rbp
   14001b6da:	push   rsi
   14001b6db:	push   rdi
   14001b6dc:	push   r12
   14001b6de:	sub    rsp,0x40
   14001b6e2:	mov    rbx,QWORD PTR [rcx+0x10]
   14001b6e6:	mov    r12,QWORD PTR [rcx+0x18]
   14001b6ea:	mov    rsi,QWORD PTR [rcx+0x28]
   14001b6ee:	mov    rbp,rdx
   14001b6f1:	mov    rdi,rcx
   14001b6f4:	cmp    rbx,r12
   14001b6f7:	jae    0x14001b85a
   14001b6fd:	mov    rcx,QWORD PTR [rcx+0x8]
   14001b701:	cmp    DWORD PTR [rcx+0x50],0x1
   14001b705:	jne    0x14001b744
   14001b707:	mov    QWORD PTR [rsp+0x38],rdx
   14001b70c:	lea    rax,[rdi+0x30]
   14001b710:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001b718:	mov    QWORD PTR [rsp+0x28],rax
   14001b71d:	lea    r9,[rdi+0x20]
   14001b721:	lea    rdx,[rip+0x2ee88]        # 0x14004a5b0
   14001b728:	mov    r8d,0x4
   14001b72e:	mov    QWORD PTR [rsp+0x20],rsi
   14001b733:	call   0x14002a710
   14001b738:	mov    r11,QWORD PTR [rdi+0x8]
   14001b73c:	mov    DWORD PTR [r11+0x50],0x0
   14001b744:	mov    rax,QWORD PTR [rdi+0x8]
   14001b748:	mov    r8,QWORD PTR [rdi+0x20]
   14001b74c:	mov    BYTE PTR [rsp+0x60],0x0
   14001b751:	cmp    DWORD PTR [rax+0x54],0x0
   14001b755:	je     0x14001b763
   14001b757:	mov    ecx,DWORD PTR [rax+0x54]
   14001b75a:	mov    DWORD PTR [rax+0x54],0x0
   14001b761:	jmp    0x14001b79c
   14001b763:	cmp    rbx,r12
   14001b766:	jae    0x14001b852
   14001b76c:	cmp    r8,rsi
   14001b76f:	jae    0x14001b83b
   14001b775:	movzx  ecx,WORD PTR [rbx]
   14001b778:	add    rbx,0x2
   14001b77c:	mov    eax,ecx
   14001b77e:	and    eax,0xfffff800
   14001b783:	cmp    eax,0xd800
   14001b788:	jne    0x14001b7c1
   14001b78a:	mov    eax,ecx
   14001b78c:	and    eax,0xfffffc00
   14001b791:	cmp    eax,0xd800
   14001b796:	jne    0x14001b82d
   14001b79c:	cmp    rbx,r12
   14001b79f:	jae    0x14001b81e
   14001b7a1:	movzx  edx,WORD PTR [rbx]
   14001b7a4:	mov    eax,edx
   14001b7a6:	and    eax,0xfffffc00
   14001b7ab:	cmp    eax,0xdc00
   14001b7b0:	jne    0x14001b82d
   14001b7b2:	add    ecx,0xffff2809
   14001b7b8:	shl    ecx,0xa
   14001b7bb:	add    ecx,edx
   14001b7bd:	add    rbx,0x2
   14001b7c1:	mov    eax,ecx
   14001b7c3:	mov    BYTE PTR [rsp+0x63],cl
   14001b7c7:	lea    r9,[rsp+0x60]
   14001b7cc:	sar    eax,0x10
   14001b7cf:	mov    r10d,0x4
   14001b7d5:	and    al,0x1f
   14001b7d7:	mov    BYTE PTR [rsp+0x61],al
   14001b7db:	mov    eax,ecx
   14001b7dd:	sar    eax,0x8
   14001b7e0:	mov    BYTE PTR [rsp+0x62],al
   14001b7e4:	movzx  eax,BYTE PTR [r9]
   14001b7e8:	cmp    r8,rsi
   14001b7eb:	jae    0x14001b7f5
   14001b7ed:	mov    BYTE PTR [r8],al
   14001b7f0:	inc    r8
   14001b7f3:	jmp    0x14001b810
   14001b7f5:	mov    rdx,QWORD PTR [rdi+0x8]
   14001b7f9:	movsx  rcx,BYTE PTR [rdx+0x5b]
   14001b7fe:	mov    BYTE PTR [rcx+rdx*1+0x68],al
   14001b802:	mov    rax,QWORD PTR [rdi+0x8]
   14001b806:	inc    BYTE PTR [rax+0x5b]
   14001b809:	mov    DWORD PTR [rbp+0x0],0xf
   14001b810:	inc    r9
   14001b813:	sub    r10,0x1
   14001b817:	jne    0x14001b7e4
   14001b819:	jmp    0x14001b763
   14001b81e:	mov    rax,QWORD PTR [rdi+0x8]
   14001b822:	mov    DWORD PTR [rax+0x54],ecx
   14001b825:	cmp    BYTE PTR [rdi+0x2],0x0
   14001b829:	je     0x14001b83b
   14001b82b:	jmp    0x14001b834
   14001b82d:	mov    rax,QWORD PTR [rdi+0x8]
   14001b831:	mov    DWORD PTR [rax+0x54],ecx
   14001b834:	mov    DWORD PTR [rbp+0x0],0xc
   14001b83b:	cmp    rbx,r12
   14001b83e:	jae    0x14001b852
   14001b840:	cmp    r8,rsi
   14001b843:	jb     0x14001b852
   14001b845:	cmp    DWORD PTR [rbp+0x0],0x0
   14001b849:	jg     0x14001b852
   14001b84b:	mov    DWORD PTR [rbp+0x0],0xf
   14001b852:	mov    QWORD PTR [rdi+0x20],r8
   14001b856:	mov    QWORD PTR [rdi+0x10],rbx
   14001b85a:	mov    rbx,QWORD PTR [rsp+0x68]
   14001b85f:	mov    rbp,QWORD PTR [rsp+0x70]
   14001b864:	add    rsp,0x40
   14001b868:	pop    r12
   14001b86a:	pop    rdi
   14001b86b:	pop    rsi
   14001b86c:	ret    
   14001b86d:	int3   
   14001b86e:	int3   
   14001b86f:	int3   
   14001b870:	mov    QWORD PTR [rsp+0x18],rbx
   14001b875:	push   rbp
   14001b876:	push   rsi
   14001b877:	push   rdi
   14001b878:	push   r13
   14001b87a:	push   r14
   14001b87c:	sub    rsp,0x40
   14001b880:	mov    rbx,QWORD PTR [rcx+0x10]
   14001b884:	mov    r14,QWORD PTR [rcx+0x18]
   14001b888:	mov    rsi,QWORD PTR [rcx+0x28]
   14001b88c:	xor    ebp,ebp
   14001b88e:	mov    r13,rdx
   14001b891:	mov    rdi,rcx
   14001b894:	cmp    rbx,r14
   14001b897:	jae    0x14001ba45
   14001b89d:	mov    rcx,QWORD PTR [rcx+0x8]
   14001b8a1:	cmp    DWORD PTR [rcx+0x50],0x1
   14001b8a5:	jne    0x14001b8de
   14001b8a7:	mov    QWORD PTR [rsp+0x38],rdx
   14001b8ac:	lea    rax,[rdi+0x30]
   14001b8b0:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001b8b8:	mov    QWORD PTR [rsp+0x28],rax
   14001b8bd:	lea    r9,[rdi+0x20]
   14001b8c1:	lea    r8d,[rbp+0x4]
   14001b8c5:	lea    rdx,[rip+0x2ece8]        # 0x14004a5b4
   14001b8cc:	mov    QWORD PTR [rsp+0x20],rsi
   14001b8d1:	call   0x14002a710
   14001b8d6:	mov    r11,QWORD PTR [rdi+0x8]
   14001b8da:	mov    DWORD PTR [r11+0x50],ebp
   14001b8de:	mov    rax,QWORD PTR [rdi+0x8]
   14001b8e2:	mov    r8,QWORD PTR [rdi+0x20]
   14001b8e6:	mov    r11,QWORD PTR [rdi+0x30]
   14001b8ea:	mov    QWORD PTR [rsp+0x78],r12
   14001b8ef:	mov    BYTE PTR [rsp+0x70],bpl
   14001b8f4:	cmp    DWORD PTR [rax+0x54],ebp
   14001b8f7:	je     0x14001b901
   14001b8f9:	mov    ecx,DWORD PTR [rax+0x54]
   14001b8fc:	mov    DWORD PTR [rax+0x54],ebp
   14001b8ff:	jmp    0x14001b93a
   14001b901:	cmp    rbx,r14
   14001b904:	jae    0x14001ba34
   14001b90a:	cmp    r8,rsi
   14001b90d:	jae    0x14001ba1b
   14001b913:	movzx  ecx,WORD PTR [rbx]
   14001b916:	add    rbx,0x2
   14001b91a:	mov    eax,ecx
   14001b91c:	and    eax,0xfffff800
   14001b921:	cmp    eax,0xd800
   14001b926:	jne    0x14001b967
   14001b928:	mov    eax,ecx
   14001b92a:	and    eax,0xfffffc00
   14001b92f:	cmp    eax,0xd800
   14001b934:	jne    0x14001ba0c
   14001b93a:	cmp    rbx,r14
   14001b93d:	jae    0x14001b9f5
   14001b943:	movzx  edx,WORD PTR [rbx]
   14001b946:	mov    eax,edx
   14001b948:	and    eax,0xfffffc00
   14001b94d:	cmp    eax,0xdc00
   14001b952:	jne    0x14001b9e4
   14001b958:	add    ecx,0xffff2809
   14001b95e:	shl    ecx,0xa
   14001b961:	add    ecx,edx
   14001b963:	add    rbx,0x2
   14001b967:	mov    r12d,ecx
   14001b96a:	mov    eax,ecx
   14001b96c:	mov    BYTE PTR [rsp+0x73],cl
   14001b970:	sar    r12d,0x10
   14001b974:	lea    r9,[rsp+0x70]
   14001b979:	mov    r10d,0x4
   14001b97f:	and    r12b,0x1f
   14001b983:	sar    eax,0x8
   14001b986:	mov    BYTE PTR [rsp+0x72],al
   14001b98a:	mov    BYTE PTR [rsp+0x71],r12b
   14001b98f:	nop
   14001b990:	cmp    r8,rsi
   14001b993:	jae    0x14001b9aa
   14001b995:	movzx  eax,BYTE PTR [r9]
   14001b999:	inc    r8
   14001b99c:	add    r11,0x4
   14001b9a0:	mov    BYTE PTR [r8-0x1],al
   14001b9a4:	mov    DWORD PTR [r11-0x4],ebp
   14001b9a8:	jmp    0x14001b9ca
   14001b9aa:	mov    rdx,QWORD PTR [rdi+0x8]
   14001b9ae:	movzx  eax,BYTE PTR [r9]
   14001b9b2:	movsx  rcx,BYTE PTR [rdx+0x5b]
   14001b9b7:	mov    BYTE PTR [rcx+rdx*1+0x68],al
   14001b9bb:	mov    rax,QWORD PTR [rdi+0x8]
   14001b9bf:	inc    BYTE PTR [rax+0x5b]
   14001b9c2:	mov    DWORD PTR [r13+0x0],0xf
   14001b9ca:	inc    r9
   14001b9cd:	sub    r10,0x1
   14001b9d1:	jne    0x14001b990
   14001b9d3:	xor    eax,eax
   14001b9d5:	test   r12b,r12b
   14001b9d8:	setne  al
   14001b9db:	lea    ebp,[rbp+rax*1+0x1]
   14001b9df:	jmp    0x14001b901
   14001b9e4:	mov    rax,QWORD PTR [rdi+0x8]
   14001b9e8:	mov    DWORD PTR [rax+0x54],ecx
   14001b9eb:	mov    DWORD PTR [r13+0x0],0xc
   14001b9f3:	jmp    0x14001ba1b
   14001b9f5:	mov    rax,QWORD PTR [rdi+0x8]
   14001b9f9:	mov    DWORD PTR [rax+0x54],ecx
   14001b9fc:	cmp    BYTE PTR [rdi+0x2],0x0
   14001ba00:	je     0x14001ba1b
   14001ba02:	mov    DWORD PTR [r13+0x0],0xc
   14001ba0a:	jmp    0x14001ba1b
   14001ba0c:	mov    rax,QWORD PTR [rdi+0x8]
   14001ba10:	mov    DWORD PTR [rax+0x54],ecx
   14001ba13:	mov    DWORD PTR [r13+0x0],0xc
   14001ba1b:	cmp    rbx,r14
   14001ba1e:	jae    0x14001ba34
   14001ba20:	cmp    r8,rsi
   14001ba23:	jb     0x14001ba34
   14001ba25:	cmp    DWORD PTR [r13+0x0],0x0
   14001ba2a:	jg     0x14001ba34
   14001ba2c:	mov    DWORD PTR [r13+0x0],0xf
   14001ba34:	mov    r12,QWORD PTR [rsp+0x78]
   14001ba39:	mov    QWORD PTR [rdi+0x20],r8
   14001ba3d:	mov    QWORD PTR [rdi+0x10],rbx
   14001ba41:	mov    QWORD PTR [rdi+0x30],r11
   14001ba45:	mov    rbx,QWORD PTR [rsp+0x80]
   14001ba4d:	add    rsp,0x40
   14001ba51:	pop    r14
   14001ba53:	pop    r13
   14001ba55:	pop    rdi
   14001ba56:	pop    rsi
   14001ba57:	pop    rbp
   14001ba58:	ret    
   14001ba59:	int3   
   14001ba5a:	int3   
   14001ba5b:	int3   
   14001ba5c:	int3   
   14001ba5d:	int3   
   14001ba5e:	int3   
   14001ba5f:	int3   
   14001ba60:	mov    QWORD PTR [rsp+0x18],rsi
   14001ba65:	mov    QWORD PTR [rsp+0x20],rdi
   14001ba6a:	push   r12
   14001ba6c:	sub    rsp,0x20
   14001ba70:	mov    rsi,QWORD PTR [rcx+0x10]
   14001ba74:	mov    r12,rdx
   14001ba77:	mov    rdi,rcx
   14001ba7a:	cmp    rsi,QWORD PTR [rcx+0x18]
   14001ba7e:	jb     0x14001ba9c
   14001ba80:	mov    DWORD PTR [rdx],0x8
   14001ba86:	mov    eax,0xffff
   14001ba8b:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ba90:	mov    rdi,QWORD PTR [rsp+0x48]
   14001ba95:	add    rsp,0x20
   14001ba99:	pop    r12
   14001ba9b:	ret    
   14001ba9c:	mov    QWORD PTR [rsp+0x38],rbp
   14001baa1:	mov    ebp,DWORD PTR [rcx+0x18]
   14001baa4:	sub    ebp,esi
   14001baa6:	cmp    ebp,0x4
   14001baa9:	jge    0x14001bae5
   14001baab:	mov    rcx,QWORD PTR [rcx+0x8]
   14001baaf:	mov    QWORD PTR [rsp+0x30],rbx
   14001bab4:	movsxd rbx,ebp
   14001bab7:	mov    r8,rbx
   14001baba:	mov    rdx,rsi
   14001babd:	add    rcx,0x41
   14001bac1:	call   0x14002b9a0
   14001bac6:	mov    r11,QWORD PTR [rdi+0x8]
   14001baca:	lea    rax,[rbx+rsi*1]
   14001bace:	mov    rbx,QWORD PTR [rsp+0x30]
   14001bad3:	mov    BYTE PTR [r11+0x40],bpl
   14001bad7:	mov    QWORD PTR [rdi+0x10],rax
   14001badb:	mov    DWORD PTR [r12],0xb
   14001bae3:	jmp    0x14001bb40
   14001bae5:	movzx  eax,BYTE PTR [rsi+0x1]
   14001bae9:	movzx  ecx,BYTE PTR [rsi+0x3]
   14001baed:	movzx  edx,BYTE PTR [rsi]
   14001baf0:	shl    edx,0x8
   14001baf3:	or     edx,eax
   14001baf5:	movzx  eax,BYTE PTR [rsi+0x2]
   14001baf9:	shl    edx,0x8
   14001bafc:	or     edx,eax
   14001bafe:	shl    edx,0x8
   14001bb01:	or     edx,ecx
   14001bb03:	lea    rcx,[rsi+0x4]
   14001bb07:	mov    QWORD PTR [rdi+0x10],rcx
   14001bb0b:	cmp    edx,0x10ffff
   14001bb11:	ja     0x14001bb27
   14001bb13:	mov    ecx,edx
   14001bb15:	and    ecx,0xfffff800
   14001bb1b:	cmp    ecx,0xd800
   14001bb21:	je     0x14001bb27
   14001bb23:	mov    eax,edx
   14001bb25:	jmp    0x14001bb45
   14001bb27:	mov    eax,DWORD PTR [rsi]
   14001bb29:	mov    rcx,QWORD PTR [rdi+0x8]
   14001bb2d:	mov    DWORD PTR [rcx+0x41],eax
   14001bb30:	mov    rax,QWORD PTR [rdi+0x8]
   14001bb34:	mov    BYTE PTR [rax+0x40],0x4
   14001bb38:	mov    DWORD PTR [r12],0xc
   14001bb40:	mov    eax,0xffff
   14001bb45:	mov    rbp,QWORD PTR [rsp+0x38]
   14001bb4a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001bb4f:	mov    rdi,QWORD PTR [rsp+0x48]
   14001bb54:	add    rsp,0x20
   14001bb58:	pop    r12
   14001bb5a:	ret    
   14001bb5b:	int3   
   14001bb5c:	int3   
   14001bb5d:	int3   
   14001bb5e:	int3   
   14001bb5f:	int3   
   14001bb60:	mov    QWORD PTR [rsp+0x8],rbx
   14001bb65:	mov    QWORD PTR [rsp+0x10],rbp
   14001bb6a:	mov    QWORD PTR [rsp+0x18],rsi
   14001bb6f:	mov    QWORD PTR [rsp+0x20],rdi
   14001bb74:	push   r12
   14001bb76:	push   r13
   14001bb78:	mov    rsi,QWORD PTR [rcx+0x8]
   14001bb7c:	mov    r9,QWORD PTR [rcx+0x10]
   14001bb80:	mov    r10,QWORD PTR [rcx+0x20]
   14001bb84:	cmp    DWORD PTR [rsi+0x48],0x0
   14001bb88:	mov    rbx,QWORD PTR [rcx+0x18]
   14001bb8c:	mov    rbp,QWORD PTR [rcx+0x28]
   14001bb90:	mov    r12,rdx
   14001bb93:	mov    rdi,rcx
   14001bb96:	mov    r13d,0x2840
   14001bb9c:	je     0x14001bbce
   14001bb9e:	cmp    r10,rbp
   14001bba1:	jae    0x14001bbce
   14001bba3:	movsx  r11d,BYTE PTR [rsi+0x40]
   14001bba8:	mov    BYTE PTR [rsi+0x40],0x0
   14001bbac:	mov    rax,QWORD PTR [rcx+0x8]
   14001bbb0:	mov    r8d,DWORD PTR [rax+0x48]
   14001bbb4:	mov    DWORD PTR [rax+0x48],0x0
   14001bbbb:	dec    r8d
   14001bbbe:	cmp    r11d,0x4
   14001bbc2:	jae    0x14001bc17
   14001bbc4:	jmp    0x14001bbe6
   14001bbc6:	mov    WORD PTR [r10],r8w
   14001bbca:	add    r10,0x2
   14001bbce:	cmp    r9,rbx
   14001bbd1:	jae    0x14001bcbe
   14001bbd7:	cmp    r10,rbp
   14001bbda:	jae    0x14001bca5
   14001bbe0:	xor    r11d,r11d
   14001bbe3:	xor    r8d,r8d
   14001bbe6:	lea    ecx,[r11*8+0x0]
   14001bbee:	xchg   ax,ax
   14001bbf0:	cmp    r9,rbx
   14001bbf3:	jae    0x14001bc92
   14001bbf9:	movzx  edx,BYTE PTR [r9]
   14001bbfd:	inc    r9
   14001bc00:	mov    eax,edx
   14001bc02:	mov    BYTE PTR [r11+rsi*1+0x41],dl
   14001bc07:	inc    r11d
   14001bc0a:	shl    eax,cl
   14001bc0c:	add    ecx,0x8
   14001bc0f:	or     r8d,eax
   14001bc12:	cmp    ecx,0x20
   14001bc15:	jb     0x14001bbf0
   14001bc17:	cmp    r8d,0x10ffff
   14001bc1e:	ja     0x14001bc80
   14001bc20:	mov    eax,r8d
   14001bc23:	and    eax,0xfffff800
   14001bc28:	cmp    eax,0xd800
   14001bc2d:	je     0x14001bc80
   14001bc2f:	cmp    r8d,0xffff
   14001bc36:	jbe    0x14001bbc6
   14001bc38:	mov    eax,r8d
   14001bc3b:	and    r8d,0x3ff
   14001bc42:	add    r10,0x2
   14001bc46:	shr    eax,0xa
   14001bc49:	or     r8d,0xdc00
   14001bc50:	sub    ax,r13w
   14001bc54:	mov    WORD PTR [r10-0x2],ax
   14001bc59:	cmp    r10,rbp
   14001bc5c:	jb     0x14001bbc6
   14001bc62:	mov    rax,QWORD PTR [rdi+0x8]
   14001bc66:	mov    WORD PTR [rax+0x90],r8w
   14001bc6e:	mov    rax,QWORD PTR [rdi+0x8]
   14001bc72:	mov    BYTE PTR [rax+0x5d],0x1
   14001bc76:	mov    DWORD PTR [r12],0xf
   14001bc7e:	jmp    0x14001bca5
   14001bc80:	mov    rax,QWORD PTR [rdi+0x8]
   14001bc84:	mov    BYTE PTR [rax+0x40],r11b
   14001bc88:	mov    DWORD PTR [r12],0xc
   14001bc90:	jmp    0x14001bca5
   14001bc92:	mov    rax,QWORD PTR [rdi+0x8]
   14001bc96:	lea    ecx,[r8+0x1]
   14001bc9a:	mov    DWORD PTR [rax+0x48],ecx
   14001bc9d:	mov    rax,QWORD PTR [rdi+0x8]
   14001bca1:	mov    BYTE PTR [rax+0x40],r11b
   14001bca5:	cmp    r9,rbx
   14001bca8:	jae    0x14001bcbe
   14001bcaa:	cmp    r10,rbp
   14001bcad:	jb     0x14001bcbe
   14001bcaf:	cmp    DWORD PTR [r12],0x0
   14001bcb4:	jg     0x14001bcbe
   14001bcb6:	mov    DWORD PTR [r12],0xf
   14001bcbe:	mov    rbx,QWORD PTR [rsp+0x18]
   14001bcc3:	mov    rbp,QWORD PTR [rsp+0x20]
   14001bcc8:	mov    rsi,QWORD PTR [rsp+0x28]
   14001bccd:	mov    QWORD PTR [rdi+0x20],r10
   14001bcd1:	mov    QWORD PTR [rdi+0x10],r9
   14001bcd5:	mov    rdi,QWORD PTR [rsp+0x30]
   14001bcda:	pop    r13
   14001bcdc:	pop    r12
   14001bcde:	ret    
   14001bcdf:	int3   
   14001bce0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bce5:	mov    QWORD PTR [rsp+0x10],rbp
   14001bcea:	mov    QWORD PTR [rsp+0x18],rsi
   14001bcef:	mov    QWORD PTR [rsp+0x20],rdi
   14001bcf4:	push   r12
   14001bcf6:	push   r13
   14001bcf8:	push   r14
   14001bcfa:	push   r15
   14001bcfc:	mov    r12,QWORD PTR [rcx+0x8]
   14001bd00:	mov    r9,QWORD PTR [rcx+0x10]
   14001bd04:	mov    r11,QWORD PTR [rcx+0x20]
   14001bd08:	mov    rbx,QWORD PTR [rcx+0x30]
   14001bd0c:	mov    rdi,QWORD PTR [rcx+0x18]
   14001bd10:	mov    r13,QWORD PTR [rcx+0x28]
   14001bd14:	xor    ebp,ebp
   14001bd16:	mov    r14,rdx
   14001bd19:	mov    rsi,rcx
   14001bd1c:	mov    r15d,0x2840
   14001bd22:	cmp    DWORD PTR [r12+0x48],ebp
   14001bd27:	je     0x14001bd4f
   14001bd29:	cmp    r11,r13
   14001bd2c:	jae    0x14001bd4f
   14001bd2e:	movsx  r10d,BYTE PTR [r12+0x40]
   14001bd34:	mov    BYTE PTR [r12+0x40],bpl
   14001bd39:	mov    rax,QWORD PTR [rcx+0x8]
   14001bd3d:	mov    r8d,DWORD PTR [rax+0x48]
   14001bd41:	mov    DWORD PTR [rax+0x48],ebp
   14001bd44:	dec    r8d
   14001bd47:	cmp    r10d,0x4
   14001bd4b:	jae    0x14001bd97
   14001bd4d:	jmp    0x14001bd67
   14001bd4f:	cmp    r9,rdi
   14001bd52:	jae    0x14001be53
   14001bd58:	cmp    r11,r13
   14001bd5b:	jae    0x14001be3c
   14001bd61:	xor    r10d,r10d
   14001bd64:	xor    r8d,r8d
   14001bd67:	lea    ecx,[r10*8+0x0]
   14001bd6f:	nop
   14001bd70:	cmp    r9,rdi
   14001bd73:	jae    0x14001be29
   14001bd79:	movzx  edx,BYTE PTR [r9]
   14001bd7d:	inc    r9
   14001bd80:	mov    eax,edx
   14001bd82:	mov    BYTE PTR [r10+r12*1+0x41],dl
   14001bd87:	inc    r10d
   14001bd8a:	shl    eax,cl
   14001bd8c:	add    ecx,0x8
   14001bd8f:	or     r8d,eax
   14001bd92:	cmp    ecx,0x20
   14001bd95:	jb     0x14001bd70
   14001bd97:	cmp    r8d,0x10ffff
   14001bd9e:	ja     0x14001be18
   14001bda0:	mov    eax,r8d
   14001bda3:	and    eax,0xfffff800
   14001bda8:	cmp    eax,0xd800
   14001bdad:	je     0x14001be18
   14001bdaf:	cmp    r8d,0xffff
   14001bdb6:	jbe    0x14001bde5
   14001bdb8:	mov    eax,r8d
   14001bdbb:	and    r8d,0x3ff
   14001bdc2:	add    r11,0x2
   14001bdc6:	shr    eax,0xa
   14001bdc9:	add    rbx,0x4
   14001bdcd:	or     r8d,0xdc00
   14001bdd4:	sub    ax,r15w
   14001bdd8:	mov    WORD PTR [r11-0x2],ax
   14001bddd:	mov    DWORD PTR [rbx-0x4],ebp
   14001bde0:	cmp    r11,r13
   14001bde3:	jae    0x14001bdfb
   14001bde5:	mov    WORD PTR [r11],r8w
   14001bde9:	mov    DWORD PTR [rbx],ebp
   14001bdeb:	add    rbx,0x4
   14001bdef:	add    r11,0x2
   14001bdf3:	add    ebp,r10d
   14001bdf6:	jmp    0x14001bd4f
   14001bdfb:	mov    rax,QWORD PTR [rsi+0x8]
   14001bdff:	mov    WORD PTR [rax+0x90],r8w
   14001be07:	mov    rax,QWORD PTR [rsi+0x8]
   14001be0b:	mov    BYTE PTR [rax+0x5d],0x1
   14001be0f:	mov    DWORD PTR [r14],0xf
   14001be16:	jmp    0x14001be3c
   14001be18:	mov    rax,QWORD PTR [rsi+0x8]
   14001be1c:	mov    BYTE PTR [rax+0x40],r10b
   14001be20:	mov    DWORD PTR [r14],0xc
   14001be27:	jmp    0x14001be3c
   14001be29:	mov    rax,QWORD PTR [rsi+0x8]
   14001be2d:	lea    ecx,[r8+0x1]
   14001be31:	mov    DWORD PTR [rax+0x48],ecx
   14001be34:	mov    rax,QWORD PTR [rsi+0x8]
   14001be38:	mov    BYTE PTR [rax+0x40],r10b
   14001be3c:	cmp    r9,rdi
   14001be3f:	jae    0x14001be53
   14001be41:	cmp    r11,r13
   14001be44:	jb     0x14001be53
   14001be46:	cmp    DWORD PTR [r14],0x0
   14001be4a:	jg     0x14001be53
   14001be4c:	mov    DWORD PTR [r14],0xf
   14001be53:	mov    rbp,QWORD PTR [rsp+0x30]
   14001be58:	mov    rdi,QWORD PTR [rsp+0x40]
   14001be5d:	mov    QWORD PTR [rsi+0x30],rbx
   14001be61:	mov    rbx,QWORD PTR [rsp+0x28]
   14001be66:	mov    QWORD PTR [rsi+0x20],r11
   14001be6a:	mov    QWORD PTR [rsi+0x10],r9
   14001be6e:	mov    rsi,QWORD PTR [rsp+0x38]
   14001be73:	pop    r15
   14001be75:	pop    r14
   14001be77:	pop    r13
   14001be79:	pop    r12
   14001be7b:	ret    
   14001be7c:	int3   
   14001be7d:	int3   
   14001be7e:	int3   
   14001be7f:	int3   
   14001be80:	mov    QWORD PTR [rsp+0x10],rbx
   14001be85:	mov    QWORD PTR [rsp+0x18],rbp
   14001be8a:	push   rsi
   14001be8b:	push   rdi
   14001be8c:	push   r12
   14001be8e:	sub    rsp,0x40
   14001be92:	mov    rbx,QWORD PTR [rcx+0x10]
   14001be96:	mov    r12,QWORD PTR [rcx+0x18]
   14001be9a:	mov    rsi,QWORD PTR [rcx+0x28]
   14001be9e:	mov    rbp,rdx
   14001bea1:	mov    rdi,rcx
   14001bea4:	cmp    rbx,r12
   14001bea7:	jae    0x14001c00a
   14001bead:	mov    rcx,QWORD PTR [rcx+0x8]
   14001beb1:	cmp    DWORD PTR [rcx+0x50],0x1
   14001beb5:	jne    0x14001bef4
   14001beb7:	mov    QWORD PTR [rsp+0x38],rdx
   14001bebc:	lea    rax,[rdi+0x30]
   14001bec0:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001bec8:	mov    QWORD PTR [rsp+0x28],rax
   14001becd:	lea    r9,[rdi+0x20]
   14001bed1:	lea    rdx,[rip+0x2e6e0]        # 0x14004a5b8
   14001bed8:	mov    r8d,0x4
   14001bede:	mov    QWORD PTR [rsp+0x20],rsi
   14001bee3:	call   0x14002a710
   14001bee8:	mov    r11,QWORD PTR [rdi+0x8]
   14001beec:	mov    DWORD PTR [r11+0x50],0x0
   14001bef4:	mov    rax,QWORD PTR [rdi+0x8]
   14001bef8:	mov    r8,QWORD PTR [rdi+0x20]
   14001befc:	mov    BYTE PTR [rsp+0x63],0x0
   14001bf01:	cmp    DWORD PTR [rax+0x54],0x0
   14001bf05:	je     0x14001bf13
   14001bf07:	mov    ecx,DWORD PTR [rax+0x54]
   14001bf0a:	mov    DWORD PTR [rax+0x54],0x0
   14001bf11:	jmp    0x14001bf4c
   14001bf13:	cmp    rbx,r12
   14001bf16:	jae    0x14001c002
   14001bf1c:	cmp    r8,rsi
   14001bf1f:	jae    0x14001bfeb
   14001bf25:	movzx  ecx,WORD PTR [rbx]
   14001bf28:	add    rbx,0x2
   14001bf2c:	mov    eax,ecx
   14001bf2e:	and    eax,0xfffff800
   14001bf33:	cmp    eax,0xd800
   14001bf38:	jne    0x14001bf71
   14001bf3a:	mov    eax,ecx
   14001bf3c:	and    eax,0xfffffc00
   14001bf41:	cmp    eax,0xd800
   14001bf46:	jne    0x14001bfdd
   14001bf4c:	cmp    rbx,r12
   14001bf4f:	jae    0x14001bfce
   14001bf51:	movzx  edx,WORD PTR [rbx]
   14001bf54:	mov    eax,edx
   14001bf56:	and    eax,0xfffffc00
   14001bf5b:	cmp    eax,0xdc00
   14001bf60:	jne    0x14001bfdd
   14001bf62:	add    ecx,0xffff2809
   14001bf68:	shl    ecx,0xa
   14001bf6b:	add    ecx,edx
   14001bf6d:	add    rbx,0x2
   14001bf71:	mov    eax,ecx
   14001bf73:	mov    BYTE PTR [rsp+0x60],cl
   14001bf77:	lea    r9,[rsp+0x60]
   14001bf7c:	sar    eax,0x10
   14001bf7f:	mov    r10d,0x4
   14001bf85:	and    al,0x1f
   14001bf87:	mov    BYTE PTR [rsp+0x62],al
   14001bf8b:	mov    eax,ecx
   14001bf8d:	sar    eax,0x8
   14001bf90:	mov    BYTE PTR [rsp+0x61],al
   14001bf94:	movzx  eax,BYTE PTR [r9]
   14001bf98:	cmp    r8,rsi
   14001bf9b:	jae    0x14001bfa5
   14001bf9d:	mov    BYTE PTR [r8],al
   14001bfa0:	inc    r8
   14001bfa3:	jmp    0x14001bfc0
   14001bfa5:	mov    rdx,QWORD PTR [rdi+0x8]
   14001bfa9:	movsx  rcx,BYTE PTR [rdx+0x5b]
   14001bfae:	mov    BYTE PTR [rcx+rdx*1+0x68],al
   14001bfb2:	mov    rax,QWORD PTR [rdi+0x8]
   14001bfb6:	inc    BYTE PTR [rax+0x5b]
   14001bfb9:	mov    DWORD PTR [rbp+0x0],0xf
   14001bfc0:	inc    r9
   14001bfc3:	sub    r10,0x1
   14001bfc7:	jne    0x14001bf94
   14001bfc9:	jmp    0x14001bf13
   14001bfce:	mov    rax,QWORD PTR [rdi+0x8]
   14001bfd2:	mov    DWORD PTR [rax+0x54],ecx
   14001bfd5:	cmp    BYTE PTR [rdi+0x2],0x0
   14001bfd9:	je     0x14001bfeb
   14001bfdb:	jmp    0x14001bfe4
   14001bfdd:	mov    rax,QWORD PTR [rdi+0x8]
   14001bfe1:	mov    DWORD PTR [rax+0x54],ecx
   14001bfe4:	mov    DWORD PTR [rbp+0x0],0xc
   14001bfeb:	cmp    rbx,r12
   14001bfee:	jae    0x14001c002
   14001bff0:	cmp    r8,rsi
   14001bff3:	jb     0x14001c002
   14001bff5:	cmp    DWORD PTR [rbp+0x0],0x0
   14001bff9:	jg     0x14001c002
   14001bffb:	mov    DWORD PTR [rbp+0x0],0xf
   14001c002:	mov    QWORD PTR [rdi+0x20],r8
   14001c006:	mov    QWORD PTR [rdi+0x10],rbx
   14001c00a:	mov    rbx,QWORD PTR [rsp+0x68]
   14001c00f:	mov    rbp,QWORD PTR [rsp+0x70]
   14001c014:	add    rsp,0x40
   14001c018:	pop    r12
   14001c01a:	pop    rdi
   14001c01b:	pop    rsi
   14001c01c:	ret    
   14001c01d:	int3   
   14001c01e:	int3   
   14001c01f:	int3   
   14001c020:	mov    QWORD PTR [rsp+0x18],rbx
   14001c025:	push   rbp
   14001c026:	push   rsi
   14001c027:	push   rdi
   14001c028:	push   r13
   14001c02a:	push   r14
   14001c02c:	sub    rsp,0x40
   14001c030:	mov    rbx,QWORD PTR [rcx+0x10]
   14001c034:	mov    r14,QWORD PTR [rcx+0x18]
   14001c038:	mov    rsi,QWORD PTR [rcx+0x28]
   14001c03c:	xor    ebp,ebp
   14001c03e:	mov    r13,rdx
   14001c041:	mov    rdi,rcx
   14001c044:	cmp    rbx,r14
   14001c047:	jae    0x14001c1f5
   14001c04d:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c051:	cmp    DWORD PTR [rcx+0x50],0x1
   14001c055:	jne    0x14001c08e
   14001c057:	mov    QWORD PTR [rsp+0x38],rdx
   14001c05c:	lea    rax,[rdi+0x30]
   14001c060:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001c068:	mov    QWORD PTR [rsp+0x28],rax
   14001c06d:	lea    r9,[rdi+0x20]
   14001c071:	lea    r8d,[rbp+0x4]
   14001c075:	lea    rdx,[rip+0x2e540]        # 0x14004a5bc
   14001c07c:	mov    QWORD PTR [rsp+0x20],rsi
   14001c081:	call   0x14002a710
   14001c086:	mov    r11,QWORD PTR [rdi+0x8]
   14001c08a:	mov    DWORD PTR [r11+0x50],ebp
   14001c08e:	mov    rax,QWORD PTR [rdi+0x8]
   14001c092:	mov    r8,QWORD PTR [rdi+0x20]
   14001c096:	mov    r11,QWORD PTR [rdi+0x30]
   14001c09a:	mov    QWORD PTR [rsp+0x78],r12
   14001c09f:	mov    BYTE PTR [rsp+0x73],bpl
   14001c0a4:	cmp    DWORD PTR [rax+0x54],ebp
   14001c0a7:	je     0x14001c0b1
   14001c0a9:	mov    ecx,DWORD PTR [rax+0x54]
   14001c0ac:	mov    DWORD PTR [rax+0x54],ebp
   14001c0af:	jmp    0x14001c0ea
   14001c0b1:	cmp    rbx,r14
   14001c0b4:	jae    0x14001c1e4
   14001c0ba:	cmp    r8,rsi
   14001c0bd:	jae    0x14001c1cb
   14001c0c3:	movzx  ecx,WORD PTR [rbx]
   14001c0c6:	add    rbx,0x2
   14001c0ca:	mov    eax,ecx
   14001c0cc:	and    eax,0xfffff800
   14001c0d1:	cmp    eax,0xd800
   14001c0d6:	jne    0x14001c117
   14001c0d8:	mov    eax,ecx
   14001c0da:	and    eax,0xfffffc00
   14001c0df:	cmp    eax,0xd800
   14001c0e4:	jne    0x14001c1bc
   14001c0ea:	cmp    rbx,r14
   14001c0ed:	jae    0x14001c1a5
   14001c0f3:	movzx  edx,WORD PTR [rbx]
   14001c0f6:	mov    eax,edx
   14001c0f8:	and    eax,0xfffffc00
   14001c0fd:	cmp    eax,0xdc00
   14001c102:	jne    0x14001c194
   14001c108:	add    ecx,0xffff2809
   14001c10e:	shl    ecx,0xa
   14001c111:	add    ecx,edx
   14001c113:	add    rbx,0x2
   14001c117:	mov    r12d,ecx
   14001c11a:	mov    eax,ecx
   14001c11c:	mov    BYTE PTR [rsp+0x70],cl
   14001c120:	sar    r12d,0x10
   14001c124:	lea    r9,[rsp+0x70]
   14001c129:	mov    r10d,0x4
   14001c12f:	and    r12b,0x1f
   14001c133:	sar    eax,0x8
   14001c136:	mov    BYTE PTR [rsp+0x71],al
   14001c13a:	mov    BYTE PTR [rsp+0x72],r12b
   14001c13f:	nop
   14001c140:	cmp    r8,rsi
   14001c143:	jae    0x14001c15a
   14001c145:	movzx  eax,BYTE PTR [r9]
   14001c149:	inc    r8
   14001c14c:	add    r11,0x4
   14001c150:	mov    BYTE PTR [r8-0x1],al
   14001c154:	mov    DWORD PTR [r11-0x4],ebp
   14001c158:	jmp    0x14001c17a
   14001c15a:	mov    rdx,QWORD PTR [rdi+0x8]
   14001c15e:	movzx  eax,BYTE PTR [r9]
   14001c162:	movsx  rcx,BYTE PTR [rdx+0x5b]
   14001c167:	mov    BYTE PTR [rcx+rdx*1+0x68],al
   14001c16b:	mov    rax,QWORD PTR [rdi+0x8]
   14001c16f:	inc    BYTE PTR [rax+0x5b]
   14001c172:	mov    DWORD PTR [r13+0x0],0xf
   14001c17a:	inc    r9
   14001c17d:	sub    r10,0x1
   14001c181:	jne    0x14001c140
   14001c183:	xor    eax,eax
   14001c185:	test   r12b,r12b
   14001c188:	setne  al
   14001c18b:	lea    ebp,[rbp+rax*1+0x1]
   14001c18f:	jmp    0x14001c0b1
   14001c194:	mov    rax,QWORD PTR [rdi+0x8]
   14001c198:	mov    DWORD PTR [rax+0x54],ecx
   14001c19b:	mov    DWORD PTR [r13+0x0],0xc
   14001c1a3:	jmp    0x14001c1cb
   14001c1a5:	mov    rax,QWORD PTR [rdi+0x8]
   14001c1a9:	mov    DWORD PTR [rax+0x54],ecx
   14001c1ac:	cmp    BYTE PTR [rdi+0x2],0x0
   14001c1b0:	je     0x14001c1cb
   14001c1b2:	mov    DWORD PTR [r13+0x0],0xc
   14001c1ba:	jmp    0x14001c1cb
   14001c1bc:	mov    rax,QWORD PTR [rdi+0x8]
   14001c1c0:	mov    DWORD PTR [rax+0x54],ecx
   14001c1c3:	mov    DWORD PTR [r13+0x0],0xc
   14001c1cb:	cmp    rbx,r14
   14001c1ce:	jae    0x14001c1e4
   14001c1d0:	cmp    r8,rsi
   14001c1d3:	jb     0x14001c1e4
   14001c1d5:	cmp    DWORD PTR [r13+0x0],0x0
   14001c1da:	jg     0x14001c1e4
   14001c1dc:	mov    DWORD PTR [r13+0x0],0xf
   14001c1e4:	mov    r12,QWORD PTR [rsp+0x78]
   14001c1e9:	mov    QWORD PTR [rdi+0x20],r8
   14001c1ed:	mov    QWORD PTR [rdi+0x10],rbx
   14001c1f1:	mov    QWORD PTR [rdi+0x30],r11
   14001c1f5:	mov    rbx,QWORD PTR [rsp+0x80]
   14001c1fd:	add    rsp,0x40
   14001c201:	pop    r14
   14001c203:	pop    r13
   14001c205:	pop    rdi
   14001c206:	pop    rsi
   14001c207:	pop    rbp
   14001c208:	ret    
   14001c209:	int3   
   14001c20a:	int3   
   14001c20b:	int3   
   14001c20c:	int3   
   14001c20d:	int3   
   14001c20e:	int3   
   14001c20f:	int3   
   14001c210:	mov    QWORD PTR [rsp+0x18],rsi
   14001c215:	mov    QWORD PTR [rsp+0x20],rdi
   14001c21a:	push   r12
   14001c21c:	sub    rsp,0x20
   14001c220:	mov    rsi,QWORD PTR [rcx+0x10]
   14001c224:	mov    r12,rdx
   14001c227:	mov    rdi,rcx
   14001c22a:	cmp    rsi,QWORD PTR [rcx+0x18]
   14001c22e:	jb     0x14001c24c
   14001c230:	mov    DWORD PTR [rdx],0x8
   14001c236:	mov    eax,0xffff
   14001c23b:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c240:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c245:	add    rsp,0x20
   14001c249:	pop    r12
   14001c24b:	ret    
   14001c24c:	mov    QWORD PTR [rsp+0x38],rbp
   14001c251:	mov    ebp,DWORD PTR [rcx+0x18]
   14001c254:	sub    ebp,esi
   14001c256:	cmp    ebp,0x4
   14001c259:	jge    0x14001c295
   14001c25b:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c25f:	mov    QWORD PTR [rsp+0x30],rbx
   14001c264:	movsxd rbx,ebp
   14001c267:	mov    r8,rbx
   14001c26a:	mov    rdx,rsi
   14001c26d:	add    rcx,0x41
   14001c271:	call   0x14002b9a0
   14001c276:	mov    r11,QWORD PTR [rdi+0x8]
   14001c27a:	lea    rax,[rbx+rsi*1]
   14001c27e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c283:	mov    BYTE PTR [r11+0x40],bpl
   14001c287:	mov    QWORD PTR [rdi+0x10],rax
   14001c28b:	mov    DWORD PTR [r12],0xb
   14001c293:	jmp    0x14001c2f0
   14001c295:	movzx  eax,BYTE PTR [rsi+0x2]
   14001c299:	movzx  ecx,BYTE PTR [rsi]
   14001c29c:	movzx  edx,BYTE PTR [rsi+0x3]
   14001c2a0:	shl    edx,0x8
   14001c2a3:	or     edx,eax
   14001c2a5:	movzx  eax,BYTE PTR [rsi+0x1]
   14001c2a9:	shl    edx,0x8
   14001c2ac:	or     edx,eax
   14001c2ae:	shl    edx,0x8
   14001c2b1:	or     edx,ecx
   14001c2b3:	lea    rcx,[rsi+0x4]
   14001c2b7:	mov    QWORD PTR [rdi+0x10],rcx
   14001c2bb:	cmp    edx,0x10ffff
   14001c2c1:	ja     0x14001c2d7
   14001c2c3:	mov    ecx,edx
   14001c2c5:	and    ecx,0xfffff800
   14001c2cb:	cmp    ecx,0xd800
   14001c2d1:	je     0x14001c2d7
   14001c2d3:	mov    eax,edx
   14001c2d5:	jmp    0x14001c2f5
   14001c2d7:	mov    eax,DWORD PTR [rsi]
   14001c2d9:	mov    rcx,QWORD PTR [rdi+0x8]
   14001c2dd:	mov    DWORD PTR [rcx+0x41],eax
   14001c2e0:	mov    rax,QWORD PTR [rdi+0x8]
   14001c2e4:	mov    BYTE PTR [rax+0x40],0x4
   14001c2e8:	mov    DWORD PTR [r12],0xc
   14001c2f0:	mov    eax,0xffff
   14001c2f5:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c2fa:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c2ff:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c304:	add    rsp,0x20
   14001c308:	pop    r12
   14001c30a:	ret    
   14001c30b:	int3   
   14001c30c:	int3   
   14001c30d:	int3   
   14001c30e:	int3   
   14001c30f:	int3   
   14001c310:	mov    DWORD PTR [rcx+0x4c],0x0
   14001c317:	mov    DWORD PTR [rcx+0x50],0x1
   14001c31e:	ret    
   14001c31f:	int3   
   14001c320:	mov    QWORD PTR [rsp+0x10],rbx
   14001c325:	push   rbp
   14001c326:	push   rsi
   14001c327:	push   rdi
   14001c328:	push   r12
   14001c32a:	push   r13
   14001c32c:	push   r14
   14001c32e:	push   r15
   14001c330:	sub    rsp,0x20
   14001c334:	mov    r15,QWORD PTR [rcx+0x8]
   14001c338:	mov    r9,QWORD PTR [rcx+0x18]
   14001c33c:	mov    r12,QWORD PTR [rcx+0x10]
   14001c340:	movsxd rdi,DWORD PTR [r15+0x4c]
   14001c344:	mov    rsi,QWORD PTR [rcx+0x30]
   14001c348:	xor    r14d,r14d
   14001c34b:	mov    r13,rdx
   14001c34e:	mov    rbp,rcx
   14001c351:	mov    QWORD PTR [rsp+0x70],r15
   14001c356:	mov    rbx,rdi
   14001c359:	mov    QWORD PTR [rsp+0x60],r9
   14001c35e:	lea    r8,[rip+0xfffffffffffe3c9b]        # 0x140000000
   14001c365:	cmp    r12,r9
   14001c368:	jae    0x14001c4c9
   14001c36e:	lea    r15,[rip+0xfffffffffffe3c8b]        # 0x140000000
   14001c375:	cmp    DWORD PTR [r13+0x0],0x0
   14001c37a:	jg     0x14001c4bd
   14001c380:	cmp    edi,0x9
   14001c383:	ja     0x14001c4b4
   14001c389:	movsxd rax,edi
   14001c38c:	mov    ecx,DWORD PTR [r15+rax*4+0x1c580]
   14001c394:	add    rcx,r15
   14001c397:	jmp    rcx
   14001c399:	movzx  eax,BYTE PTR [r12]
   14001c39e:	test   al,al
   14001c3a0:	jne    0x14001c3b2
   14001c3a2:	mov    edi,0x1
   14001c3a7:	inc    r12
   14001c3aa:	mov    rbx,rdi
   14001c3ad:	jmp    0x14001c4b4
   14001c3b2:	cmp    al,0xff
   14001c3b4:	jne    0x14001c469
   14001c3ba:	mov    edi,0x5
   14001c3bf:	inc    r12
   14001c3c2:	mov    rbx,rdi
   14001c3c5:	jmp    0x14001c4b4
   14001c3ca:	movzx  eax,BYTE PTR [rbx+r15*1+0x4aa20]
   14001c3d3:	cmp    BYTE PTR [r12],al
   14001c3d7:	jne    0x14001c417
   14001c3d9:	inc    edi
   14001c3db:	inc    rbx
   14001c3de:	inc    r12
   14001c3e1:	cmp    edi,0x4
   14001c3e4:	jne    0x14001c3fa
   14001c3e6:	mov    edi,0x8
   14001c3eb:	mov    r14d,r12d
   14001c3ee:	sub    r14d,DWORD PTR [rbp+0x10]
   14001c3f2:	mov    rbx,rdi
   14001c3f5:	jmp    0x14001c4b4
   14001c3fa:	cmp    edi,0x8
   14001c3fd:	jne    0x14001c4b4
   14001c403:	mov    edi,0x9
   14001c408:	mov    r14d,r12d
   14001c40b:	sub    r14d,DWORD PTR [rbp+0x10]
   14001c40f:	mov    rbx,rdi
   14001c412:	jmp    0x14001c4b4
   14001c417:	sub    r12d,DWORD PTR [rbp+0x10]
   14001c41b:	mov    edx,edi
   14001c41d:	mov    r8d,r12d
   14001c420:	mov    r12,QWORD PTR [rbp+0x10]
   14001c424:	and    edx,0x3
   14001c427:	cmp    r8d,edx
   14001c42a:	je     0x14001c469
   14001c42c:	movzx  ebx,BYTE PTR [rbp+0x2]
   14001c430:	mov    eax,edi
   14001c432:	sub    edx,r8d
   14001c435:	and    eax,0x4
   14001c438:	mov    BYTE PTR [rbp+0x2],0x0
   14001c43c:	lea    rcx,[rax+r15*1+0x4aa20]
   14001c444:	movsxd rax,edx
   14001c447:	mov    rdx,r13
   14001c44a:	add    rax,rcx
   14001c44d:	mov    QWORD PTR [rbp+0x10],rcx
   14001c451:	mov    rcx,rbp
   14001c454:	mov    QWORD PTR [rbp+0x18],rax
   14001c458:	call   0x14001b3e0
   14001c45d:	mov    r9,QWORD PTR [rsp+0x60]
   14001c462:	mov    QWORD PTR [rbp+0x18],r9
   14001c466:	mov    BYTE PTR [rbp+0x2],bl
   14001c469:	mov    edi,0x8
   14001c46e:	mov    rbx,rdi
   14001c471:	jmp    0x14001c4b4
   14001c473:	mov    QWORD PTR [rbp+0x10],r12
   14001c477:	mov    rdx,r13
   14001c47a:	mov    rcx,rbp
   14001c47d:	test   rsi,rsi
   14001c480:	jne    0x14001c489
   14001c482:	call   0x14001b3e0
   14001c487:	jmp    0x14001c4ab
   14001c489:	call   0x14001b540
   14001c48e:	jmp    0x14001c4ab
   14001c490:	mov    QWORD PTR [rbp+0x10],r12
   14001c494:	mov    rdx,r13
   14001c497:	mov    rcx,rbp
   14001c49a:	test   rsi,rsi
   14001c49d:	jne    0x14001c4a6
   14001c49f:	call   0x14001bb60
   14001c4a4:	jmp    0x14001c4ab
   14001c4a6:	call   0x14001bce0
   14001c4ab:	mov    r9,QWORD PTR [rsp+0x60]
   14001c4b0:	mov    r12,QWORD PTR [rbp+0x10]
   14001c4b4:	cmp    r12,r9
   14001c4b7:	jb     0x14001c375
   14001c4bd:	mov    r15,QWORD PTR [rsp+0x70]
   14001c4c2:	lea    r8,[rip+0xfffffffffffe3b37]        # 0x140000000
   14001c4c9:	test   rsi,rsi
   14001c4cc:	je     0x14001c4ec
   14001c4ce:	test   r14d,r14d
   14001c4d1:	je     0x14001c4ec
   14001c4d3:	mov    rax,QWORD PTR [rbp+0x30]
   14001c4d7:	cmp    rsi,rax
   14001c4da:	jae    0x14001c4ec
   14001c4dc:	nop    DWORD PTR [rax+0x0]
   14001c4e0:	add    DWORD PTR [rsi],r14d
   14001c4e3:	add    rsi,0x4
   14001c4e7:	cmp    rsi,rax
   14001c4ea:	jb     0x14001c4e0
   14001c4ec:	mov    QWORD PTR [rbp+0x10],r12
   14001c4f0:	cmp    r12,r9
   14001c4f3:	jne    0x14001c564
   14001c4f5:	cmp    BYTE PTR [rbp+0x2],0x0
   14001c4f9:	je     0x14001c564
   14001c4fb:	mov    ecx,edi
   14001c4fd:	test   edi,edi
   14001c4ff:	je     0x14001c564
   14001c501:	sub    ecx,0x8
   14001c504:	je     0x14001c559
   14001c506:	cmp    ecx,0x1
   14001c509:	je     0x14001c54c
   14001c50b:	movsxd rdx,edi
   14001c50e:	mov    rax,rdx
   14001c511:	and    edx,0x3
   14001c514:	and    eax,0x4
   14001c517:	lea    rcx,[rax+r8*1+0x4aa20]
   14001c51f:	add    rdx,rcx
   14001c522:	mov    QWORD PTR [rbp+0x10],rcx
   14001c526:	mov    rcx,rbp
   14001c529:	mov    QWORD PTR [rbp+0x18],rdx
   14001c52d:	mov    rdx,r13
   14001c530:	call   0x14001b3e0
   14001c535:	mov    rax,QWORD PTR [rsp+0x60]
   14001c53a:	mov    QWORD PTR [rbp+0x10],r12
   14001c53e:	mov    QWORD PTR [rbp+0x18],rax
   14001c542:	mov    DWORD PTR [r15+0x4c],0x8
   14001c54a:	jmp    0x14001c568
   14001c54c:	mov    rdx,r13
   14001c54f:	mov    rcx,rbp
   14001c552:	call   0x14001bb60
   14001c557:	jmp    0x14001c564
   14001c559:	mov    rdx,r13
   14001c55c:	mov    rcx,rbp
   14001c55f:	call   0x14001b3e0
   14001c564:	mov    DWORD PTR [r15+0x4c],edi
   14001c568:	mov    rbx,QWORD PTR [rsp+0x68]
   14001c56d:	add    rsp,0x20
   14001c571:	pop    r15
   14001c573:	pop    r14
   14001c575:	pop    r13
   14001c577:	pop    r12
   14001c579:	pop    rdi
   14001c57a:	pop    rsi
   14001c57b:	pop    rbp
   14001c57c:	ret    
   14001c57d:	nop    DWORD PTR [rax]
   14001c580:	cdq    
   14001c581:	ret    
   14001c582:	add    DWORD PTR [rax],eax
   14001c584:	retf   0x1c3
   14001c587:	add    dl,cl
   14001c589:	ret    
   14001c58a:	add    DWORD PTR [rax],eax
   14001c58c:	retf   0x1c3
   14001c58f:	add    BYTE PTR [rsp+rax*8-0x3c35ffff],dh
   14001c596:	add    DWORD PTR [rax],eax
   14001c598:	retf   0x1c3
   14001c59b:	add    dl,cl
   14001c59d:	ret    
   14001c59e:	add    DWORD PTR [rax],eax
   14001c5a0:	jae    0x14001c566
   14001c5a2:	add    DWORD PTR [rax],eax
   14001c5a4:	nop
   14001c5a5:	(bad)
   14001c5a9:	int3   
   14001c5aa:	int3   
   14001c5ab:	int3   
   14001c5ac:	int3   
   14001c5ad:	int3   
   14001c5ae:	int3   
   14001c5af:	int3   
   14001c5b0:	mov    r8,QWORD PTR [rcx+0x8]
   14001c5b4:	mov    r9d,DWORD PTR [r8+0x4c]
   14001c5b8:	sub    r9d,0x8
   14001c5bc:	je     0x14001c5cf
   14001c5be:	cmp    r9d,0x1
   14001c5c2:	je     0x14001c5ca
   14001c5c4:	mov    eax,0xfffffff7
   14001c5c9:	ret    
   14001c5ca:	jmp    0x14001c210
   14001c5cf:	jmp    0x14001ba60
   14001c5d4:	int3   
   14001c5d5:	int3   
   14001c5d6:	int3   
   14001c5d7:	int3   
   14001c5d8:	int3   
   14001c5d9:	int3   
   14001c5da:	int3   
   14001c5db:	int3   
   14001c5dc:	int3   
   14001c5dd:	int3   
   14001c5de:	int3   
   14001c5df:	int3   
   14001c5e0:	rex push rbx
   14001c5e2:	push   rbp
   14001c5e3:	push   rsi
   14001c5e4:	push   rdi
   14001c5e5:	sub    rsp,0x58
   14001c5e9:	mov    rbx,QWORD PTR [rcx+0x10]
   14001c5ed:	mov    rsi,QWORD PTR [rcx+0x18]
   14001c5f1:	mov    rbp,rdx
   14001c5f4:	sub    rsi,rbx
   14001c5f7:	mov    rdi,rcx
   14001c5fa:	sar    rsi,1
   14001c5fd:	test   esi,esi
   14001c5ff:	je     0x14001cb3f
   14001c605:	mov    QWORD PTR [rsp+0x50],r12
   14001c60a:	mov    r12,QWORD PTR [rcx+0x8]
   14001c60e:	mov    QWORD PTR [rsp+0x40],r14
   14001c613:	xor    r14d,r14d
   14001c616:	cmp    DWORD PTR [r12+0x50],0x1
   14001c61c:	jne    0x14001c659
   14001c61e:	mov    QWORD PTR [rsp+0x38],rdx
   14001c623:	lea    rax,[rcx+0x30]
   14001c627:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001c62f:	mov    QWORD PTR [rsp+0x28],rax
   14001c634:	mov    rax,QWORD PTR [rcx+0x28]
   14001c638:	lea    r9,[rcx+0x20]
   14001c63c:	lea    r8d,[r14+0x2]
   14001c640:	lea    rdx,[rip+0x2e619]        # 0x14004ac60
   14001c647:	mov    rcx,r12
   14001c64a:	mov    QWORD PTR [rsp+0x20],rax
   14001c64f:	call   0x14002a710
   14001c654:	mov    DWORD PTR [r12+0x50],r14d
   14001c659:	mov    rcx,QWORD PTR [rdi+0x20]
   14001c65d:	mov    QWORD PTR [rsp+0x90],rcx
   14001c665:	cmp    rcx,QWORD PTR [rdi+0x28]
   14001c669:	jb     0x14001c677
   14001c66b:	mov    DWORD PTR [rbp+0x0],0xf
   14001c672:	jmp    0x14001cb35
   14001c677:	mov    rax,QWORD PTR [rdi+0x30]
   14001c67b:	mov    r10d,DWORD PTR [rdi+0x28]
   14001c67f:	mov    QWORD PTR [rsp+0x48],r13
   14001c684:	mov    QWORD PTR [rsp+0x98],rax
   14001c68c:	mov    dx,WORD PTR [r12+0x54]
   14001c692:	sub    r10d,ecx
   14001c695:	mov    r11d,r14d
   14001c698:	mov    r13d,0x400
   14001c69e:	test   dx,dx
   14001c6a1:	je     0x14001c78e
   14001c6a7:	movzx  r8d,WORD PTR [rbx]
   14001c6ab:	mov    eax,r8d
   14001c6ae:	and    eax,0xfffffc00
   14001c6b3:	cmp    eax,0xdc00
   14001c6b8:	jne    0x14001c802
   14001c6be:	cmp    r10d,0x4
   14001c6c2:	jb     0x14001c802
   14001c6c8:	movzx  eax,dx
   14001c6cb:	add    rbx,0x2
   14001c6cf:	dec    esi
   14001c6d1:	shr    ax,0x8
   14001c6d5:	add    r10d,0xfffffffc
   14001c6d9:	mov    BYTE PTR [rcx],al
   14001c6db:	mov    rax,QWORD PTR [rsp+0x90]
   14001c6e3:	movzx  ecx,r8w
   14001c6e7:	mov    BYTE PTR [rax+0x1],dl
   14001c6ea:	mov    rax,QWORD PTR [rsp+0x90]
   14001c6f2:	shr    cx,0x8
   14001c6f6:	mov    BYTE PTR [rax+0x2],cl
   14001c6f9:	mov    rax,QWORD PTR [rsp+0x90]
   14001c701:	mov    BYTE PTR [rax+0x3],r8b
   14001c705:	mov    rax,QWORD PTR [rsp+0x98]
   14001c70d:	add    QWORD PTR [rsp+0x90],0x4
   14001c716:	test   rax,rax
   14001c719:	je     0x14001c778
   14001c71b:	mov    DWORD PTR [rax],0xffffffff
   14001c721:	mov    rax,QWORD PTR [rsp+0x98]
   14001c729:	add    rax,0x4
   14001c72d:	mov    QWORD PTR [rsp+0x98],rax
   14001c735:	mov    DWORD PTR [rax],0xffffffff
   14001c73b:	mov    rax,QWORD PTR [rsp+0x98]
   14001c743:	add    rax,0x4
   14001c747:	mov    QWORD PTR [rsp+0x98],rax
   14001c74f:	mov    DWORD PTR [rax],0xffffffff
   14001c755:	mov    rax,QWORD PTR [rsp+0x98]
   14001c75d:	add    rax,0x4
   14001c761:	mov    QWORD PTR [rsp+0x98],rax
   14001c769:	mov    DWORD PTR [rax],0xffffffff
   14001c76f:	add    QWORD PTR [rsp+0x98],0x4
   14001c778:	mov    DWORD PTR [r12+0x54],r14d
   14001c77d:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c785:	mov    r11d,0x1
   14001c78b:	mov    edx,r14d
   14001c78e:	lea    r8d,[rsi+rsi*1]
   14001c792:	cmp    r8d,r10d
   14001c795:	jbe    0x14001c79e
   14001c797:	mov    r8d,r10d
   14001c79a:	and    r8d,0xfffffffe
   14001c79e:	sub    r10d,r8d
   14001c7a1:	shr    r8d,1
   14001c7a4:	sub    esi,r8d
   14001c7a7:	cmp    QWORD PTR [rsp+0x98],r14
   14001c7af:	jne    0x14001c892
   14001c7b5:	test   r8d,r8d
   14001c7b8:	je     0x14001c9eb
   14001c7be:	xchg   ax,ax
   14001c7c0:	movzx  edx,WORD PTR [rbx]
   14001c7c3:	add    rbx,0x2
   14001c7c7:	mov    eax,edx
   14001c7c9:	and    eax,0xfffff800
   14001c7ce:	cmp    eax,0xd800
   14001c7d3:	je     0x14001c80a
   14001c7d5:	movzx  eax,dx
   14001c7d8:	shr    ax,0x8
   14001c7dc:	mov    BYTE PTR [rcx],al
   14001c7de:	mov    rax,QWORD PTR [rsp+0x90]
   14001c7e6:	mov    BYTE PTR [rax+0x1],dl
   14001c7e9:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c7f1:	add    rcx,0x2
   14001c7f5:	mov    QWORD PTR [rsp+0x90],rcx
   14001c7fd:	jmp    0x14001c883
   14001c802:	mov    esi,r14d
   14001c805:	jmp    0x14001ca38
   14001c80a:	test   r13w,dx
   14001c80e:	jne    0x14001c9eb
   14001c814:	cmp    r8d,0x2
   14001c818:	jb     0x14001c9eb
   14001c81e:	movzx  r9d,WORD PTR [rbx]
   14001c822:	mov    eax,r9d
   14001c825:	and    eax,0xfffffc00
   14001c82a:	cmp    eax,0xdc00
   14001c82f:	jne    0x14001c9eb
   14001c835:	movzx  eax,dx
   14001c838:	add    rbx,0x2
   14001c83c:	dec    r8d
   14001c83f:	shr    ax,0x8
   14001c843:	mov    BYTE PTR [rcx],al
   14001c845:	mov    rax,QWORD PTR [rsp+0x90]
   14001c84d:	movzx  ecx,r9w
   14001c851:	mov    BYTE PTR [rax+0x1],dl
   14001c854:	mov    rax,QWORD PTR [rsp+0x90]
   14001c85c:	shr    cx,0x8
   14001c860:	mov    BYTE PTR [rax+0x2],cl
   14001c863:	mov    rax,QWORD PTR [rsp+0x90]
   14001c86b:	mov    BYTE PTR [rax+0x3],r9b
   14001c86f:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c877:	add    rcx,0x4
   14001c87b:	mov    QWORD PTR [rsp+0x90],rcx
   14001c883:	add    r8d,0xffffffff
   14001c887:	jne    0x14001c7c0
   14001c88d:	jmp    0x14001c9eb
   14001c892:	test   r8d,r8d
   14001c895:	je     0x14001c9eb
   14001c89b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001c8a0:	movzx  edx,WORD PTR [rbx]
   14001c8a3:	add    rbx,0x2
   14001c8a7:	mov    eax,edx
   14001c8a9:	and    eax,0xfffff800
   14001c8ae:	cmp    eax,0xd800
   14001c8b3:	je     0x14001c905
   14001c8b5:	movzx  eax,dx
   14001c8b8:	shr    ax,0x8
   14001c8bc:	mov    BYTE PTR [rcx],al
   14001c8be:	mov    rax,QWORD PTR [rsp+0x90]
   14001c8c6:	mov    BYTE PTR [rax+0x1],dl
   14001c8c9:	mov    rax,QWORD PTR [rsp+0x98]
   14001c8d1:	add    QWORD PTR [rsp+0x90],0x2
   14001c8da:	mov    DWORD PTR [rax],r11d
   14001c8dd:	mov    rax,QWORD PTR [rsp+0x98]
   14001c8e5:	add    rax,0x4
   14001c8e9:	mov    QWORD PTR [rsp+0x98],rax
   14001c8f1:	mov    DWORD PTR [rax],r11d
   14001c8f4:	add    QWORD PTR [rsp+0x98],0x4
   14001c8fd:	inc    r11d
   14001c900:	jmp    0x14001c9d0
   14001c905:	test   r13w,dx
   14001c909:	jne    0x14001c9eb
   14001c90f:	cmp    r8d,0x2
   14001c913:	jb     0x14001c9eb
   14001c919:	movzx  r9d,WORD PTR [rbx]
   14001c91d:	mov    eax,r9d
   14001c920:	and    eax,0xfffffc00
   14001c925:	cmp    eax,0xdc00
   14001c92a:	jne    0x14001c9eb
   14001c930:	movzx  eax,dx
   14001c933:	add    rbx,0x2
   14001c937:	dec    r8d
   14001c93a:	shr    ax,0x8
   14001c93e:	mov    BYTE PTR [rcx],al
   14001c940:	mov    rax,QWORD PTR [rsp+0x90]
   14001c948:	movzx  ecx,r9w
   14001c94c:	mov    BYTE PTR [rax+0x1],dl
   14001c94f:	mov    rax,QWORD PTR [rsp+0x90]
   14001c957:	shr    cx,0x8
   14001c95b:	mov    BYTE PTR [rax+0x2],cl
   14001c95e:	mov    rax,QWORD PTR [rsp+0x90]
   14001c966:	mov    BYTE PTR [rax+0x3],r9b
   14001c96a:	mov    rax,QWORD PTR [rsp+0x98]
   14001c972:	add    QWORD PTR [rsp+0x90],0x4
   14001c97b:	mov    DWORD PTR [rax],r11d
   14001c97e:	mov    rax,QWORD PTR [rsp+0x98]
   14001c986:	add    rax,0x4
   14001c98a:	mov    QWORD PTR [rsp+0x98],rax
   14001c992:	mov    DWORD PTR [rax],r11d
   14001c995:	mov    rax,QWORD PTR [rsp+0x98]
   14001c99d:	add    rax,0x4
   14001c9a1:	mov    QWORD PTR [rsp+0x98],rax
   14001c9a9:	mov    DWORD PTR [rax],r11d
   14001c9ac:	mov    rax,QWORD PTR [rsp+0x98]
   14001c9b4:	add    rax,0x4
   14001c9b8:	mov    QWORD PTR [rsp+0x98],rax
   14001c9c0:	mov    DWORD PTR [rax],r11d
   14001c9c3:	add    QWORD PTR [rsp+0x98],0x4
   14001c9cc:	add    r11d,0x2
   14001c9d0:	add    r8d,0xffffffff
   14001c9d4:	je     0x14001c9e3
   14001c9d6:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c9de:	jmp    0x14001c8a0
   14001c9e3:	mov    rcx,QWORD PTR [rsp+0x90]
   14001c9eb:	test   r8d,r8d
   14001c9ee:	jne    0x14001ca34
   14001c9f0:	test   esi,esi
   14001c9f2:	je     0x14001cb04
   14001c9f8:	test   r10d,r10d
   14001c9fb:	je     0x14001cb04
   14001ca01:	movzx  edx,WORD PTR [rbx]
   14001ca04:	add    rbx,0x2
   14001ca08:	mov    eax,edx
   14001ca0a:	and    eax,0xfffff800
   14001ca0f:	cmp    eax,0xd800
   14001ca14:	je     0x14001ca38
   14001ca16:	movzx  eax,dx
   14001ca19:	mov    BYTE PTR [rsp+0x81],dl
   14001ca20:	lea    esi,[r8+0x2]
   14001ca24:	shr    ax,0x8
   14001ca28:	mov    BYTE PTR [rsp+0x80],al
   14001ca2f:	jmp    0x14001caba
   14001ca34:	lea    r10d,[r10+r8*2]
   14001ca38:	test   dx,dx
   14001ca3b:	je     0x14001cab6
   14001ca3d:	mov    esi,r14d
   14001ca40:	test   r13w,dx
   14001ca44:	jne    0x14001ca9f
   14001ca46:	cmp    rbx,QWORD PTR [rdi+0x18]
   14001ca4a:	jae    0x14001caa6
   14001ca4c:	movzx  ecx,WORD PTR [rbx]
   14001ca4f:	mov    eax,ecx
   14001ca51:	and    eax,0xfffffc00
   14001ca56:	cmp    eax,0xdc00
   14001ca5b:	jne    0x14001ca96
   14001ca5d:	movzx  eax,dx
   14001ca60:	add    rbx,0x2
   14001ca64:	mov    BYTE PTR [rsp+0x81],dl
   14001ca6b:	shr    ax,0x8
   14001ca6f:	mov    BYTE PTR [rsp+0x83],cl
   14001ca76:	mov    esi,0x4
   14001ca7b:	mov    BYTE PTR [rsp+0x80],al
   14001ca82:	movzx  eax,cx
   14001ca85:	mov    dx,r14w
   14001ca89:	shr    ax,0x8
   14001ca8d:	mov    BYTE PTR [rsp+0x82],al
   14001ca94:	jmp    0x14001caa6
   14001ca96:	mov    DWORD PTR [rbp+0x0],0xc
   14001ca9d:	jmp    0x14001caa6
   14001ca9f:	mov    DWORD PTR [rbp+0x0],0xc
   14001caa6:	movzx  eax,dx
   14001caa9:	mov    DWORD PTR [r12+0x54],eax
   14001caae:	mov    rcx,QWORD PTR [rsp+0x90]
   14001cab6:	test   esi,esi
   14001cab8:	je     0x14001cb04
   14001caba:	mov    QWORD PTR [rsp+0x38],rbp
   14001cabf:	mov    DWORD PTR [rsp+0x30],r11d
   14001cac4:	lea    rax,[rsp+0x98]
   14001cacc:	mov    QWORD PTR [rsp+0x28],rax
   14001cad1:	mov    rax,QWORD PTR [rdi+0x28]
   14001cad5:	lea    r9,[rsp+0x90]
   14001cadd:	lea    rdx,[rsp+0x80]
   14001cae5:	mov    r8d,esi
   14001cae8:	mov    rcx,r12
   14001caeb:	mov    QWORD PTR [rsp+0x20],rax
   14001caf0:	call   0x14002a710
   14001caf5:	mov    r10d,DWORD PTR [rdi+0x28]
   14001caf9:	mov    rcx,QWORD PTR [rsp+0x90]
   14001cb01:	sub    r10d,ecx
   14001cb04:	cmp    DWORD PTR [rbp+0x0],r14d
   14001cb08:	mov    r13,QWORD PTR [rsp+0x48]
   14001cb0d:	jg     0x14001cb21
   14001cb0f:	cmp    rbx,QWORD PTR [rdi+0x18]
   14001cb13:	jae    0x14001cb21
   14001cb15:	test   r10d,r10d
   14001cb18:	jne    0x14001cb21
   14001cb1a:	mov    DWORD PTR [rbp+0x0],0xf
   14001cb21:	mov    rax,QWORD PTR [rsp+0x98]
   14001cb29:	mov    QWORD PTR [rdi+0x10],rbx
   14001cb2d:	mov    QWORD PTR [rdi+0x20],rcx
   14001cb31:	mov    QWORD PTR [rdi+0x30],rax
   14001cb35:	mov    r12,QWORD PTR [rsp+0x50]
   14001cb3a:	mov    r14,QWORD PTR [rsp+0x40]
   14001cb3f:	add    rsp,0x58
   14001cb43:	pop    rdi
   14001cb44:	pop    rsi
   14001cb45:	pop    rbp
   14001cb46:	pop    rbx
   14001cb47:	ret    
   14001cb48:	int3   
   14001cb49:	int3   
   14001cb4a:	int3   
   14001cb4b:	int3   
   14001cb4c:	int3   
   14001cb4d:	int3   
   14001cb4e:	int3   
   14001cb4f:	int3   
   14001cb50:	rex push rbx
   14001cb52:	push   rsi
   14001cb53:	push   r13
   14001cb55:	sub    rsp,0x30
   14001cb59:	mov    rbx,QWORD PTR [rcx+0x8]
   14001cb5d:	mov    r13,rdx
   14001cb60:	mov    rsi,rcx
   14001cb63:	cmp    DWORD PTR [rbx+0x4c],0x8
   14001cb67:	jge    0x14001cb76
   14001cb69:	add    rsp,0x30
   14001cb6d:	pop    r13
   14001cb6f:	pop    rsi
   14001cb70:	pop    rbx
   14001cb71:	jmp    0x14001dca0
   14001cb76:	mov    r8,QWORD PTR [rcx+0x10]
   14001cb7a:	mov    QWORD PTR [rsp+0x50],rbp
   14001cb7f:	mov    ebp,DWORD PTR [rcx+0x18]
   14001cb82:	sub    ebp,r8d
   14001cb85:	jne    0x14001cb90
   14001cb87:	cmp    DWORD PTR [rbx+0x48],ebp
   14001cb8a:	je     0x14001cf76
   14001cb90:	mov    rdx,QWORD PTR [rcx+0x20]
   14001cb94:	mov    QWORD PTR [rsp+0x60],r12
   14001cb99:	mov    r12,QWORD PTR [rcx+0x28]
   14001cb9d:	cmp    rdx,r12
   14001cba0:	jb     0x14001cbaf
   14001cba2:	mov    DWORD PTR [r13+0x0],0xf
   14001cbaa:	jmp    0x14001cf71
   14001cbaf:	mov    r11,QWORD PTR [rcx+0x30]
   14001cbb3:	mov    QWORD PTR [rsp+0x58],rdi
   14001cbb8:	sub    r12,rdx
   14001cbbb:	mov    QWORD PTR [rsp+0x28],r14
   14001cbc0:	xor    r14d,r14d
   14001cbc3:	sar    r12,1
   14001cbc6:	mov    QWORD PTR [rsp+0x20],r15
   14001cbcb:	mov    edi,r14d
   14001cbce:	mov    r10w,r14w
   14001cbd2:	cmp    DWORD PTR [rbx+0x48],r14d
   14001cbd6:	je     0x14001cbe7
   14001cbd8:	movzx  eax,BYTE PTR [rbx+0x48]
   14001cbdc:	mov    BYTE PTR [rbx+0x40],0x1
   14001cbe0:	mov    DWORD PTR [rbx+0x48],r14d
   14001cbe4:	mov    BYTE PTR [rbx+0x41],al
   14001cbe7:	movsx  r9d,BYTE PTR [rbx+0x40]
   14001cbec:	mov    r15d,0x400
   14001cbf2:	test   r9d,r9d
   14001cbf5:	je     0x14001cd0e
   14001cbfb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cc00:	movzx  eax,BYTE PTR [r8]
   14001cc04:	mov    ecx,r9d
   14001cc07:	inc    r8
   14001cc0a:	mov    BYTE PTR [r9+rbx*1+0x41],al
   14001cc0f:	inc    r9d
   14001cc12:	inc    edi
   14001cc14:	dec    ebp
   14001cc16:	cmp    r9d,0x2
   14001cc1a:	jne    0x14001cc4d
   14001cc1c:	movzx  eax,BYTE PTR [rbx+0x42]
   14001cc20:	movzx  r10d,BYTE PTR [rbx+0x41]
   14001cc25:	shl    r10w,0x8
   14001cc2a:	or     r10w,ax
   14001cc2e:	movzx  eax,r10w
   14001cc32:	and    eax,0xfffff800
   14001cc37:	cmp    eax,0xd800
   14001cc3c:	jne    0x14001cc5c
   14001cc3e:	test   r15w,r10w
   14001cc42:	jne    0x14001cd0a
   14001cc48:	mov    r10d,r14d
   14001cc4b:	jmp    0x14001cc53
   14001cc4d:	cmp    r9d,0x4
   14001cc51:	je     0x14001cc83
   14001cc53:	test   ebp,ebp
   14001cc55:	jne    0x14001cc00
   14001cc57:	jmp    0x14001cd0a
   14001cc5c:	mov    WORD PTR [rdx],r10w
   14001cc60:	add    rdx,0x2
   14001cc64:	test   r11,r11
   14001cc67:	je     0x14001cc74
   14001cc69:	mov    DWORD PTR [r11],0xffffffff
   14001cc70:	add    r11,0x4
   14001cc74:	dec    r12d
   14001cc77:	mov    r9d,r14d
   14001cc7a:	mov    r10w,r14w
   14001cc7e:	jmp    0x14001cd0a
   14001cc83:	movzx  eax,BYTE PTR [rbx+0x44]
   14001cc87:	movzx  r9d,BYTE PTR [rbx+0x43]
   14001cc8c:	shl    r9w,0x8
   14001cc91:	or     r9w,ax
   14001cc95:	movzx  eax,r9w
   14001cc99:	and    eax,0xfffffc00
   14001cc9e:	cmp    eax,0xdc00
   14001cca3:	jne    0x14001cd77
   14001cca9:	movzx  ecx,BYTE PTR [rbx+0x41]
   14001ccad:	movzx  eax,BYTE PTR [rbx+0x42]
   14001ccb1:	add    rdx,0x2
   14001ccb5:	shl    cx,0x8
   14001ccb9:	or     cx,ax
   14001ccbc:	mov    WORD PTR [rdx-0x2],cx
   14001ccc0:	cmp    r12d,0x2
   14001ccc4:	jb     0x14001ccec
   14001ccc6:	mov    WORD PTR [rdx],r9w
   14001ccca:	add    rdx,0x2
   14001ccce:	test   r11,r11
   14001ccd1:	je     0x14001cce6
   14001ccd3:	mov    DWORD PTR [r11],0xffffffff
   14001ccda:	mov    DWORD PTR [r11+0x4],0xffffffff
   14001cce2:	add    r11,0x8
   14001cce6:	add    r12d,0xfffffffe
   14001ccea:	jmp    0x14001cd03
   14001ccec:	mov    WORD PTR [rbx+0x90],r9w
   14001ccf4:	mov    BYTE PTR [rbx+0x5d],0x1
   14001ccf8:	mov    r12d,r14d
   14001ccfb:	mov    DWORD PTR [r13+0x0],0xf
   14001cd03:	mov    r9d,r14d
   14001cd06:	mov    r10w,r14w
   14001cd0a:	mov    BYTE PTR [rbx+0x40],r9b
   14001cd0e:	lea    r9d,[r12+r12*1]
   14001cd12:	cmp    r9d,ebp
   14001cd15:	jbe    0x14001cd1e
   14001cd17:	mov    r9d,ebp
   14001cd1a:	and    r9d,0xfffffffe
   14001cd1e:	test   r10w,r10w
   14001cd22:	jne    0x14001ceb8
   14001cd28:	test   r9d,r9d
   14001cd2b:	je     0x14001cf2a
   14001cd31:	sub    ebp,r9d
   14001cd34:	shr    r9d,1
   14001cd37:	sub    r12d,r9d
   14001cd3a:	test   r11,r11
   14001cd3d:	jne    0x14001ce10
   14001cd43:	movzx  eax,BYTE PTR [r8+0x1]
   14001cd48:	movzx  ecx,BYTE PTR [r8]
   14001cd4c:	add    r8,0x2
   14001cd50:	shl    cx,0x8
   14001cd54:	or     cx,ax
   14001cd57:	movzx  r10d,cx
   14001cd5b:	mov    eax,r10d
   14001cd5e:	and    eax,0xfffff800
   14001cd63:	cmp    eax,0xd800
   14001cd68:	je     0x14001cdb0
   14001cd6a:	mov    WORD PTR [rdx],r10w
   14001cd6e:	add    rdx,0x2
   14001cd72:	jmp    0x14001cdfa
   14001cd77:	mov    DWORD PTR [r13+0x0],0xc
   14001cd7f:	mov    rax,QWORD PTR [rsi+0x10]
   14001cd83:	sub    rax,r8
   14001cd86:	cmp    rax,0x2
   14001cd8a:	jl     0x14001cd99
   14001cd8c:	sub    r8,0x2
   14001cd90:	mov    BYTE PTR [rbx+0x40],0x2
   14001cd94:	jmp    0x14001cf56
   14001cd99:	movzx  eax,BYTE PTR [rbx+0x43]
   14001cd9d:	mov    BYTE PTR [rbx+0x40],0x2
   14001cda1:	bts    eax,0x8
   14001cda5:	dec    r8
   14001cda8:	mov    DWORD PTR [rbx+0x48],eax
   14001cdab:	jmp    0x14001cf56
   14001cdb0:	test   r15w,r10w
   14001cdb4:	jne    0x14001cea1
   14001cdba:	cmp    r9d,0x2
   14001cdbe:	jb     0x14001cea1
   14001cdc4:	movzx  eax,BYTE PTR [r8+0x1]
   14001cdc9:	movzx  ecx,BYTE PTR [r8]
   14001cdcd:	shl    cx,0x8
   14001cdd1:	or     cx,ax
   14001cdd4:	movzx  eax,cx
   14001cdd7:	and    eax,0xfffffc00
   14001cddc:	cmp    eax,0xdc00
   14001cde1:	jne    0x14001cea1
   14001cde7:	mov    WORD PTR [rdx],r10w
   14001cdeb:	add    r8,0x2
   14001cdef:	dec    r9d
   14001cdf2:	mov    WORD PTR [rdx+0x2],cx
   14001cdf6:	add    rdx,0x4
   14001cdfa:	add    r9d,0xffffffff
   14001cdfe:	jne    0x14001cd43
   14001ce04:	jmp    0x14001cea1
   14001ce09:	nop    DWORD PTR [rax+0x0]
   14001ce10:	movzx  eax,BYTE PTR [r8+0x1]
   14001ce15:	movzx  ecx,BYTE PTR [r8]
   14001ce19:	add    r8,0x2
   14001ce1d:	shl    cx,0x8
   14001ce21:	or     cx,ax
   14001ce24:	movzx  r10d,cx
   14001ce28:	mov    eax,r10d
   14001ce2b:	and    eax,0xfffff800
   14001ce30:	cmp    eax,0xd800
   14001ce35:	je     0x14001ce4b
   14001ce37:	mov    WORD PTR [rdx],r10w
   14001ce3b:	mov    DWORD PTR [r11],edi
   14001ce3e:	add    r11,0x4
   14001ce42:	add    rdx,0x2
   14001ce46:	add    edi,0x2
   14001ce49:	jmp    0x14001ce97
   14001ce4b:	test   r15w,r10w
   14001ce4f:	jne    0x14001cea1
   14001ce51:	cmp    r9d,0x2
   14001ce55:	jb     0x14001cea1
   14001ce57:	movzx  eax,BYTE PTR [r8+0x1]
   14001ce5c:	movzx  ecx,BYTE PTR [r8]
   14001ce60:	shl    cx,0x8
   14001ce64:	or     cx,ax
   14001ce67:	movzx  eax,cx
   14001ce6a:	and    eax,0xfffffc00
   14001ce6f:	cmp    eax,0xdc00
   14001ce74:	jne    0x14001cea1
   14001ce76:	mov    WORD PTR [rdx],r10w
   14001ce7a:	mov    WORD PTR [rdx+0x2],cx
   14001ce7e:	mov    DWORD PTR [r11],edi
   14001ce81:	mov    DWORD PTR [r11+0x4],edi
   14001ce85:	add    r11,0x8
   14001ce89:	add    r8,0x2
   14001ce8d:	dec    r9d
   14001ce90:	add    rdx,0x4
   14001ce94:	add    edi,0x4
   14001ce97:	add    r9d,0xffffffff
   14001ce9b:	jne    0x14001ce10
   14001cea1:	test   r9d,r9d
   14001cea4:	je     0x14001cf2a
   14001ceaa:	add    r12d,r9d
   14001cead:	lea    ebp,[rbp+r9*2-0x2]
   14001ceb2:	test   r10w,r10w
   14001ceb6:	je     0x14001cf2a
   14001ceb8:	movzx  eax,r10w
   14001cebc:	mov    BYTE PTR [rbx+0x42],r10b
   14001cec0:	mov    BYTE PTR [rbx+0x40],0x2
   14001cec4:	shr    ax,0x8
   14001cec8:	mov    BYTE PTR [rbx+0x41],al
   14001cecb:	test   r15w,r10w
   14001cecf:	jne    0x14001cf4e
   14001ced5:	cmp    ebp,0x2
   14001ced8:	jb     0x14001cf2a
   14001ceda:	movzx  eax,BYTE PTR [r8+0x1]
   14001cedf:	movzx  ecx,BYTE PTR [r8]
   14001cee3:	shl    cx,0x8
   14001cee7:	or     cx,ax
   14001ceea:	movzx  eax,cx
   14001ceed:	and    eax,0xfffffc00
   14001cef2:	cmp    eax,0xdc00
   14001cef7:	jne    0x14001cf4e
   14001cef9:	mov    WORD PTR [rdx],r10w
   14001cefd:	add    rdx,0x2
   14001cf01:	add    r8,0x2
   14001cf05:	test   r11,r11
   14001cf08:	je     0x14001cf11
   14001cf0a:	mov    DWORD PTR [r11],edi
   14001cf0d:	add    r11,0x4
   14001cf11:	mov    WORD PTR [rbx+0x90],cx
   14001cf18:	mov    BYTE PTR [rbx+0x5d],0x1
   14001cf1c:	mov    BYTE PTR [rbx+0x40],r14b
   14001cf20:	mov    DWORD PTR [r13+0x0],0xf
   14001cf28:	jmp    0x14001cf56
   14001cf2a:	cmp    DWORD PTR [r13+0x0],r14d
   14001cf2e:	jg     0x14001cf56
   14001cf30:	test   ebp,ebp
   14001cf32:	je     0x14001cf56
   14001cf34:	test   r12d,r12d
   14001cf37:	je     0x14001cf20
   14001cf39:	movzx  eax,BYTE PTR [r8]
   14001cf3d:	movsx  rcx,BYTE PTR [rbx+0x40]
   14001cf42:	mov    BYTE PTR [rcx+rbx*1+0x41],al
   14001cf46:	inc    BYTE PTR [rbx+0x40]
   14001cf49:	inc    r8
   14001cf4c:	jmp    0x14001cf56
   14001cf4e:	mov    DWORD PTR [r13+0x0],0xc
   14001cf56:	mov    r14,QWORD PTR [rsp+0x28]
   14001cf5b:	mov    rdi,QWORD PTR [rsp+0x58]
   14001cf60:	mov    r15,QWORD PTR [rsp+0x20]
   14001cf65:	mov    QWORD PTR [rsi+0x30],r11
   14001cf69:	mov    QWORD PTR [rsi+0x20],rdx
   14001cf6d:	mov    QWORD PTR [rsi+0x10],r8
   14001cf71:	mov    r12,QWORD PTR [rsp+0x60]
   14001cf76:	mov    rbp,QWORD PTR [rsp+0x50]
   14001cf7b:	add    rsp,0x30
   14001cf7f:	pop    r13
   14001cf81:	pop    rsi
   14001cf82:	pop    rbx
   14001cf83:	ret    
   14001cf84:	int3   
   14001cf85:	int3   
   14001cf86:	int3   
   14001cf87:	int3   
   14001cf88:	int3   
   14001cf89:	int3   
   14001cf8a:	int3   
   14001cf8b:	int3   
   14001cf8c:	int3   
   14001cf8d:	int3   
   14001cf8e:	int3   
   14001cf8f:	int3   
   14001cf90:	rex push rbx
   14001cf92:	mov    r10,QWORD PTR [rcx+0x8]
   14001cf96:	mov    rbx,rdx
   14001cf99:	mov    r11,rcx
   14001cf9c:	cmp    DWORD PTR [r10+0x4c],0x8
   14001cfa1:	jge    0x14001cfaa
   14001cfa3:	mov    eax,0xfffffff7
   14001cfa8:	pop    rbx
   14001cfa9:	ret    
   14001cfaa:	mov    rcx,QWORD PTR [rcx+0x10]
   14001cfae:	mov    r9,QWORD PTR [r11+0x18]
   14001cfb2:	cmp    rcx,r9
   14001cfb5:	jb     0x14001cfc4
   14001cfb7:	mov    DWORD PTR [rdx],0x8
   14001cfbd:	mov    eax,0xffff
   14001cfc2:	pop    rbx
   14001cfc3:	ret    
   14001cfc4:	lea    rdx,[rcx+0x2]
   14001cfc8:	cmp    rdx,r9
   14001cfcb:	jbe    0x14001cff1
   14001cfcd:	movzx  eax,BYTE PTR [rcx]
   14001cfd0:	mov    BYTE PTR [r10+0x41],al
   14001cfd4:	mov    rax,QWORD PTR [r11+0x8]
   14001cfd8:	mov    BYTE PTR [rax+0x40],0x1
   14001cfdc:	lea    rax,[rcx+0x1]
   14001cfe0:	mov    QWORD PTR [r11+0x10],rax
   14001cfe4:	mov    DWORD PTR [rbx],0xb
   14001cfea:	mov    eax,0xffff
   14001cfef:	pop    rbx
   14001cff0:	ret    
   14001cff1:	movzx  eax,BYTE PTR [rcx+0x1]
   14001cff5:	movzx  r8d,BYTE PTR [rcx]
   14001cff9:	shl    r8d,0x8
   14001cffd:	or     r8d,eax
   14001d000:	mov    eax,r8d
   14001d003:	and    eax,0xfffff800
   14001d008:	cmp    eax,0xd800
   14001d00d:	jne    0x14001d07e
   14001d00f:	bt     r8d,0xa
   14001d014:	mov    QWORD PTR [rsp+0x10],rdi
   14001d019:	jb     0x14001d058
   14001d01b:	lea    rdi,[rdx+0x2]
   14001d01f:	cmp    rdi,r9
   14001d022:	ja     0x14001d087
   14001d024:	movzx  eax,BYTE PTR [rdx+0x1]
   14001d028:	movzx  ecx,BYTE PTR [rdx]
   14001d02b:	shl    cx,0x8
   14001d02f:	or     cx,ax
   14001d032:	movzx  r9d,cx
   14001d036:	mov    eax,r9d
   14001d039:	and    eax,0xfffffc00
   14001d03e:	cmp    eax,0xdc00
   14001d043:	jne    0x14001d058
   14001d045:	add    r8d,0xffff2809
   14001d04c:	mov    rdx,rdi
   14001d04f:	shl    r8d,0xa
   14001d053:	add    r8d,r9d
   14001d056:	jns    0x14001d079
   14001d058:	mov    BYTE PTR [r10+0x40],0x2
   14001d05d:	movzx  eax,BYTE PTR [rdx-0x2]
   14001d061:	mov    BYTE PTR [r10+0x41],al
   14001d065:	movzx  eax,BYTE PTR [rdx-0x1]
   14001d069:	mov    BYTE PTR [r10+0x42],al
   14001d06d:	mov    DWORD PTR [rbx],0xc
   14001d073:	mov    r8d,0xffff
   14001d079:	mov    rdi,QWORD PTR [rsp+0x10]
   14001d07e:	mov    QWORD PTR [r11+0x10],rdx
   14001d082:	mov    eax,r8d
   14001d085:	pop    rbx
   14001d086:	ret    
   14001d087:	sub    rdx,0x2
   14001d08b:	movzx  eax,r9b
   14001d08f:	lea    rcx,[r10+0x41]
   14001d093:	sub    al,dl
   14001d095:	mov    BYTE PTR [r10+0x40],al
   14001d099:	nop    DWORD PTR [rax+0x0]
   14001d0a0:	movzx  eax,BYTE PTR [rdx]
   14001d0a3:	inc    rdx
   14001d0a6:	inc    rcx
   14001d0a9:	mov    BYTE PTR [rcx-0x1],al
   14001d0ac:	cmp    rdx,r9
   14001d0af:	jb     0x14001d0a0
   14001d0b1:	mov    DWORD PTR [rbx],0xb
   14001d0b7:	jmp    0x14001d073
   14001d0b9:	int3   
   14001d0ba:	int3   
   14001d0bb:	int3   
   14001d0bc:	int3   
   14001d0bd:	int3   
   14001d0be:	int3   
   14001d0bf:	int3   
   14001d0c0:	cmp    edx,0x1
   14001d0c3:	jg     0x14001d0e0
   14001d0c5:	test   BYTE PTR [rcx+0x38],0xf
   14001d0c9:	mov    eax,0x0
   14001d0ce:	mov    r8d,0x8
   14001d0d4:	cmove  eax,r8d
   14001d0d8:	mov    DWORD PTR [rcx+0x4c],eax
   14001d0db:	cmp    edx,0x1
   14001d0de:	je     0x14001d0f0
   14001d0e0:	mov    eax,DWORD PTR [rcx+0x38]
   14001d0e3:	and    al,0xf
   14001d0e5:	cmp    al,0x1
   14001d0e7:	jne    0x14001d0f0
   14001d0e9:	mov    DWORD PTR [rcx+0x50],0x1
   14001d0f0:	repz ret 
   14001d0f2:	int3   
   14001d0f3:	int3   
   14001d0f4:	int3   
   14001d0f5:	int3   
   14001d0f6:	int3   
   14001d0f7:	int3   
   14001d0f8:	int3   
   14001d0f9:	int3   
   14001d0fa:	int3   
   14001d0fb:	int3   
   14001d0fc:	int3   
   14001d0fd:	int3   
   14001d0fe:	int3   
   14001d0ff:	int3   
   14001d100:	test   BYTE PTR [rcx+0x38],0xf
   14001d104:	lea    rax,[rip+0x2156d]        # 0x14003e678
   14001d10b:	je     0x14001d114
   14001d10d:	lea    rax,[rip+0x2e1ec]        # 0x14004b300
   14001d114:	repz ret 
   14001d116:	int3   
   14001d117:	int3   
   14001d118:	int3   
   14001d119:	int3   
   14001d11a:	int3   
   14001d11b:	int3   
   14001d11c:	int3   
   14001d11d:	int3   
   14001d11e:	int3   
   14001d11f:	int3   
   14001d120:	rex push rbx
   14001d122:	push   rbp
   14001d123:	push   rsi
   14001d124:	push   rdi
   14001d125:	sub    rsp,0x58
   14001d129:	mov    rbx,QWORD PTR [rcx+0x10]
   14001d12d:	mov    rsi,QWORD PTR [rcx+0x18]
   14001d131:	mov    rbp,rdx
   14001d134:	sub    rsi,rbx
   14001d137:	mov    rdi,rcx
   14001d13a:	sar    rsi,1
   14001d13d:	test   esi,esi
   14001d13f:	je     0x14001d674
   14001d145:	mov    QWORD PTR [rsp+0x50],r12
   14001d14a:	mov    r12,QWORD PTR [rcx+0x8]
   14001d14e:	mov    QWORD PTR [rsp+0x40],r14
   14001d153:	xor    r14d,r14d
   14001d156:	cmp    DWORD PTR [r12+0x50],0x1
   14001d15c:	jne    0x14001d199
   14001d15e:	mov    QWORD PTR [rsp+0x38],rdx
   14001d163:	lea    rax,[rcx+0x30]
   14001d167:	mov    DWORD PTR [rsp+0x30],0xffffffff
   14001d16f:	mov    QWORD PTR [rsp+0x28],rax
   14001d174:	mov    rax,QWORD PTR [rcx+0x28]
   14001d178:	lea    r9,[rcx+0x20]
   14001d17c:	lea    r8d,[r14+0x2]
   14001d180:	lea    rdx,[rip+0x2dbdd]        # 0x14004ad64
   14001d187:	mov    rcx,r12
   14001d18a:	mov    QWORD PTR [rsp+0x20],rax
   14001d18f:	call   0x14002a710
   14001d194:	mov    DWORD PTR [r12+0x50],r14d
   14001d199:	mov    rcx,QWORD PTR [rdi+0x20]
   14001d19d:	mov    QWORD PTR [rsp+0x90],rcx
   14001d1a5:	cmp    rcx,QWORD PTR [rdi+0x28]
   14001d1a9:	jb     0x14001d1b7
   14001d1ab:	mov    DWORD PTR [rbp+0x0],0xf
   14001d1b2:	jmp    0x14001d66a
   14001d1b7:	mov    rax,QWORD PTR [rdi+0x30]
   14001d1bb:	mov    r10d,DWORD PTR [rdi+0x28]
   14001d1bf:	mov    QWORD PTR [rsp+0x48],r13
   14001d1c4:	mov    QWORD PTR [rsp+0x98],rax
   14001d1cc:	mov    dx,WORD PTR [r12+0x54]
   14001d1d2:	sub    r10d,ecx
   14001d1d5:	mov    r11d,r14d
   14001d1d8:	mov    r13d,0x400
   14001d1de:	test   dx,dx
   14001d1e1:	je     0x14001d2c9
   14001d1e7:	movzx  r8d,WORD PTR [rbx]
   14001d1eb:	mov    eax,r8d
   14001d1ee:	and    eax,0xfffffc00
   14001d1f3:	cmp    eax,0xdc00
   14001d1f8:	jne    0x14001d33f
   14001d1fe:	cmp    r10d,0x4
   14001d202:	jb     0x14001d33f
   14001d208:	mov    BYTE PTR [rcx],dl
   14001d20a:	mov    rax,QWORD PTR [rsp+0x90]
   14001d212:	shr    dx,0x8
   14001d216:	mov    BYTE PTR [rax+0x1],dl
   14001d219:	mov    rax,QWORD PTR [rsp+0x90]
   14001d221:	add    rbx,0x2
   14001d225:	mov    BYTE PTR [rax+0x2],r8b
   14001d229:	mov    rax,QWORD PTR [rsp+0x90]
   14001d231:	shr    r8w,0x8
   14001d236:	mov    BYTE PTR [rax+0x3],r8b
   14001d23a:	mov    rax,QWORD PTR [rsp+0x98]
   14001d242:	add    QWORD PTR [rsp+0x90],0x4
   14001d24b:	dec    esi
   14001d24d:	add    r10d,0xfffffffc
   14001d251:	test   rax,rax
   14001d254:	je     0x14001d2b3
   14001d256:	mov    DWORD PTR [rax],0xffffffff
   14001d25c:	mov    rax,QWORD PTR [rsp+0x98]
   14001d264:	add    rax,0x4
   14001d268:	mov    QWORD PTR [rsp+0x98],rax
   14001d270:	mov    DWORD PTR [rax],0xffffffff
   14001d276:	mov    rax,QWORD PTR [rsp+0x98]
   14001d27e:	add    rax,0x4
   14001d282:	mov    QWORD PTR [rsp+0x98],rax
   14001d28a:	mov    DWORD PTR [rax],0xffffffff
   14001d290:	mov    rax,QWORD PTR [rsp+0x98]
   14001d298:	add    rax,0x4
   14001d29c:	mov    QWORD PTR [rsp+0x98],rax
   14001d2a4:	mov    DWORD PTR [rax],0xffffffff
   14001d2aa:	add    QWORD PTR [rsp+0x98],0x4
   14001d2b3:	mov    DWORD PTR [r12+0x54],r14d
   14001d2b8:	mov    rcx,QWORD PTR [rsp+0x90]
   14001d2c0:	mov    r11d,0x1
   14001d2c6:	mov    edx,r14d
   14001d2c9:	lea    r8d,[rsi+rsi*1]
   14001d2cd:	cmp    r8d,r10d
   14001d2d0:	jbe    0x14001d2d9
   14001d2d2:	mov    r8d,r10d
   14001d2d5:	and    r8d,0xfffffffe
   14001d2d9:	sub    r10d,r8d
   14001d2dc:	shr    r8d,1
   14001d2df:	sub    esi,r8d
   14001d2e2:	cmp    QWORD PTR [rsp+0x98],r14
   14001d2ea:	jne    0x14001d3cd
   14001d2f0:	test   r8d,r8d
   14001d2f3:	je     0x14001d529
   14001d2f9:	nop    DWORD PTR [rax+0x0]
   14001d300:	movzx  edx,WORD PTR [rbx]
   14001d303:	add    rbx,0x2
   14001d307:	mov    eax,edx
   14001d309:	and    eax,0xfffff800
   14001d30e:	cmp    eax,0xd800
   14001d313:	je     0x14001d347
   14001d315:	mov    BYTE PTR [rcx],dl
   14001d317:	mov    rax,QWORD PTR [rsp+0x90]
   14001d31f:	movzx  ecx,dx
   14001d322:	shr    cx,0x8
   14001d326:	mov    BYTE PTR [rax+0x1],cl
   14001d329:	mov    rcx,QWORD PTR [rsp+0x90]
   14001d331:	add    rcx,0x2
   14001d335:	mov    QWORD PTR [rsp+0x90],rcx
   14001d33d:	jmp    0x14001d3be
   14001d33f:	mov    esi,r14d
   14001d342:	jmp    0x14001d573
   14001d347:	test   r13w,dx
   14001d34b:	jne    0x14001d529
   14001d351:	cmp    r8d,0x2
   14001d355:	jb     0x14001d529
   14001d35b:	movzx  r9d,WORD PTR [rbx]
   14001d35f:	mov    eax,r9d
   14001d362:	and    eax,0xfffffc00
   14001d367:	cmp    eax,0xdc00
   14001d36c:	jne    0x14001d529
   14001d372:	mov    BYTE PTR [rcx],dl
   14001d374:	mov    rax,QWORD PTR [rsp+0x90]
   14001d37c:	movzx  ecx,dx
   14001d37f:	shr    cx,0x8
   14001d383:	add    rbx,0x2
   14001d387:	dec    r8d
   14001d38a:	mov    BYTE PTR [rax+0x1],cl
   14001d38d:	mov    rax,QWORD PTR [rsp+0x90]
   14001d395:	mov    BYTE PTR [rax+0x2],r9b
   14001d399:	mov    rax,QWORD PTR [rsp+0x90]
   14001d3a1:	shr    r9w,0x8
   14001d3a6:	mov    BYTE PTR [rax+0x3],r9b
   14001d3aa:	mov    rcx,QWORD PTR [rsp+0x90]
   14001d3b2:	add    rcx,0x4
   14001d3b6:	mov    QWORD PTR [rsp+0x90],rcx
   14001d3be:	add    r8d,0xffffffff
   14001d3c2:	jne    0x14001d300
   14001d3c8:	jmp    0x14001d529
   14001d3cd:	test   r8d,r8d
   14001d3d0:	je     0x14001d529
   14001d3d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001d3e0:	movzx  edx,WORD PTR [rbx]
   14001d3e3:	add    rbx,0x2
   14001d3e7:	mov    eax,edx
   14001d3e9:	and    eax,0xfffff800
   14001d3ee:	cmp    eax,0xd800
   14001d3f3:	je     0x14001d445
   14001d3f5:	mov    BYTE PTR [rcx],dl
   14001d3f7:	mov    rax,QWORD PTR [rsp+0x90]
   14001d3ff:	movzx  ecx,dx
   14001d402:	shr    cx,0x8
   14001d406:	mov    BYTE PTR [rax+0x1],cl
   14001d409:	mov    rax,QWORD PTR [rsp+0x98]
   14001d411:	add    QWORD PTR [rsp+0x90],0x2
   14001d41a:	mov    DWORD PTR [rax],r11d
   14001d41d:	mov    rax,QWORD PTR [rsp+0x98]
   14001d425:	add    rax,0x4
   14001d429:	mov    QWORD PTR [rsp+0x98],rax
   14001d431:	mov    DWORD PTR [rax],r11d
   14001d434:	add    QWORD PTR [rsp+0x98],0x4
   14001d43d:	inc    r11d
   14001d440:	jmp    0x14001d50e
   14001d445:	test   r13w,dx
   14001d449:	jne    0x14001d529
   14001d44f:	cmp    r8d,0x2
   14001d453:	jb     0x14001d529
   14001d459:	movzx  r9d,WORD PTR [rbx]
   14001d45d:	mov    eax,r9d
   14001d460:	and    eax,0xfffffc00
   14001d465:	cmp    eax,0xdc00
   14001d46a:	jne    0x14001d529
   14001d470:	mov    BYTE PTR [rcx],dl
   14001d472:	mov    rax,QWORD PTR [rsp+0x90]
   14001d47a:	movzx  ecx,dx
   14001d47d:	shr    cx,0x8
   14001d481:	add    rbx,0x2
   14001d485:	dec    r8d
   14001d488:	mov    BYTE PTR [rax+0x1],cl
   14001d48b:	mov    rax,QWORD PTR [rsp+0x90]
   14001d493:	mov    BYTE PTR [rax+0x2],r9b
   14001d497:	mov    rax,QWORD PTR [rsp+0x90]
   14001d49f:	shr    r9w,0x8
   14001d4a4:	mov    BYTE PTR [rax+0x3],r9b
   14001d4a8:	mov    rax,QWORD PTR [rsp+0x98]
   14001d4b0:	add    QWORD PTR [rsp+0x90],0x4
   14001d4b9:	mov    DWORD PTR [rax],r11d
   14001d4bc:	mov    rax,QWORD PTR [rsp+0x98]
   14001d4c4:	add    rax,0x4
   14001d4c8:	mov    QWORD PTR [rsp+0x98],rax
   14001d4d0:	mov    DWORD PTR [rax],r11d
   14001d4d3:	mov    rax,QWORD PTR [rsp+0x98]
   14001d4db:	add    rax,0x4
   14001d4df:	mov    QWORD PTR [rsp+0x98],rax
   14001d4e7:	mov    DWORD PTR [rax],r11d
   14001d4ea:	mov    rax,QWORD PTR [rsp+0x98]
   14001d4f2:	add    rax,0x4
   14001d4f6:	mov    QWORD PTR [rsp+0x98],rax
   14001d4fe:	mov    DWORD PTR [rax],r11d
   14001d501:	add    QWORD PTR [rsp+0x98],0x4
   14001d50a:	add    r11d,0x2
   14001d50e:	add    r8d,0xffffffff
   14001d512:	je     0x14001d521
   14001d514:	mov    rcx,QWORD PTR [rsp+0x90]
   14001d51c:	jmp    0x14001d3e0
   14001d521:	mov    rcx,QWORD PTR [rsp+0x90]
   14001d529:	test   r8d,r8d
   14001d52c:	jne    0x14001d56f
   14001d52e:	test   esi,esi
   14001d530:	je     0x14001d639
   14001d536:	test   r10d,r10d
   14001d539:	je     0x14001d639
   14001d53f:	movzx  edx,WORD PTR [rbx]
   14001d542:	add    rbx,0x2
   14001d546:	mov    eax,edx
   14001d548:	and    eax,0xfffff800
   14001d54d:	cmp    eax,0xd800
   14001d552:	je     0x14001d573
   14001d554:	mov    BYTE PTR [rsp+0x80],dl
   14001d55b:	shr    dx,0x8
   14001d55f:	lea    esi,[r8+0x2]
   14001d563:	mov    BYTE PTR [rsp+0x81],dl
   14001d56a:	jmp    0x14001d5ef
   14001d56f:	lea    r10d,[r10+r8*2]
   14001d573:	test   dx,dx
   14001d576:	je     0x14001d5eb
   14001d578:	mov    esi,r14d
   14001d57b:	test   r13w,dx
   14001d57f:	jne    0x14001d5d4
   14001d581:	cmp    rbx,QWORD PTR [rdi+0x18]
   14001d585:	jae    0x14001d5db
   14001d587:	movzx  ecx,WORD PTR [rbx]
   14001d58a:	mov    eax,ecx
   14001d58c:	and    eax,0xfffffc00
   14001d591:	cmp    eax,0xdc00
   14001d596:	jne    0x14001d5cb
   14001d598:	mov    BYTE PTR [rsp+0x80],dl
   14001d59f:	shr    dx,0x8
   14001d5a3:	add    rbx,0x2
   14001d5a7:	mov    BYTE PTR [rsp+0x82],cl
   14001d5ae:	shr    cx,0x8
   14001d5b2:	mov    BYTE PTR [rsp+0x81],dl
   14001d5b9:	mov    dx,r14w
   14001d5bd:	mov    esi,0x4
   14001d5c2:	mov    BYTE PTR [rsp+0x83],cl
   14001d5c9:	jmp    0x14001d5db
   14001d5cb:	mov    DWORD PTR [rbp+0x0],0xc
   14001d5d2:	jmp    0x14001d5db
   14001d5d4:	mov    DWORD PTR [rbp+0x0],0xc
   14001d5db:	movzx  eax,dx
   14001d5de:	mov    DWORD PTR [r12+0x54],eax
   14001d5e3:	mov    rcx,QWORD PTR [rsp+0x90]
   14001d5eb:	test   esi,esi
   14001d5ed:	je     0x14001d639
   14001d5ef:	mov    QWORD PTR [rsp+0x38],rbp
   14001d5f4:	mov    DWORD PTR [rsp+0x30],r11d
   14001d5f9:	lea    rax,[rsp+0x98]
   14001d601:	mov    QWORD PTR [rsp+0x28],rax
   14001d606:	mov    rax,QWORD PTR [rdi+0x28]
   14001d60a:	lea    r9,[rsp+0x90]
   14001d612:	lea    rdx,[rsp+0x80]
   14001d61a:	mov    r8d,esi
   14001d61d:	mov    rcx,r12
   14001d620:	mov    QWORD PTR [rsp+0x20],rax
   14001d625:	call   0x14002a710
   14001d62a:	mov    r10d,DWORD PTR [rdi+0x28]
   14001d62e:	mov    rcx,QWORD PTR [rsp+0x90]
   14001d636:	sub    r10d,ecx
   14001d639:	cmp    DWORD PTR [rbp+0x0],r14d
   14001d63d:	mov    r13,QWORD PTR [rsp+0x48]
   14001d642:	jg     0x14001d656
   14001d644:	cmp    rbx,QWORD PTR [rdi+0x18]
   14001d648:	jae    0x14001d656
   14001d64a:	test   r10d,r10d
   14001d64d:	jne    0x14001d656
   14001d64f:	mov    DWORD PTR [rbp+0x0],0xf
   14001d656:	mov    rax,QWORD PTR [rsp+0x98]
   14001d65e:	mov    QWORD PTR [rdi+0x10],rbx
   14001d662:	mov    QWORD PTR [rdi+0x20],rcx
   14001d666:	mov    QWORD PTR [rdi+0x30],rax
   14001d66a:	mov    r12,QWORD PTR [rsp+0x50]
   14001d66f:	mov    r14,QWORD PTR [rsp+0x40]
   14001d674:	add    rsp,0x58
   14001d678:	pop    rdi
   14001d679:	pop    rsi
   14001d67a:	pop    rbp
   14001d67b:	pop    rbx
   14001d67c:	ret    
   14001d67d:	int3   
   14001d67e:	int3   
   14001d67f:	int3   
   14001d680:	rex push rbx
   14001d682:	push   rsi
   14001d683:	push   r13
   14001d685:	sub    rsp,0x30
   14001d689:	mov    rbx,QWORD PTR [rcx+0x8]
   14001d68d:	mov    r13,rdx
   14001d690:	mov    rsi,rcx
   14001d693:	cmp    DWORD PTR [rbx+0x4c],0x8
   14001d697:	jge    0x14001d6a6
   14001d699:	add    rsp,0x30
   14001d69d:	pop    r13
   14001d69f:	pop    rsi
   14001d6a0:	pop    rbx
   14001d6a1:	jmp    0x14001dca0
   14001d6a6:	mov    r8,QWORD PTR [rcx+0x10]
   14001d6aa:	mov    QWORD PTR [rsp+0x50],rbp
   14001d6af:	mov    ebp,DWORD PTR [rcx+0x18]
   14001d6b2:	sub    ebp,r8d
   14001d6b5:	jne    0x14001d6c0
   14001d6b7:	cmp    DWORD PTR [rbx+0x48],ebp
   14001d6ba:	je     0x14001daa6
   14001d6c0:	mov    rdx,QWORD PTR [rcx+0x20]
   14001d6c4:	mov    QWORD PTR [rsp+0x60],r12
   14001d6c9:	mov    r12,QWORD PTR [rcx+0x28]
   14001d6cd:	cmp    rdx,r12
   14001d6d0:	jb     0x14001d6df
   14001d6d2:	mov    DWORD PTR [r13+0x0],0xf
   14001d6da:	jmp    0x14001daa1
   14001d6df:	mov    r11,QWORD PTR [rcx+0x30]
   14001d6e3:	mov    QWORD PTR [rsp+0x58],rdi
   14001d6e8:	sub    r12,rdx
   14001d6eb:	mov    QWORD PTR [rsp+0x28],r14
   14001d6f0:	xor    r14d,r14d
   14001d6f3:	sar    r12,1
   14001d6f6:	mov    QWORD PTR [rsp+0x20],r15
   14001d6fb:	mov    edi,r14d
   14001d6fe:	mov    r10w,r14w
   14001d702:	cmp    DWORD PTR [rbx+0x48],r14d
   14001d706:	je     0x14001d717
   14001d708:	movzx  eax,BYTE PTR [rbx+0x48]
   14001d70c:	mov    BYTE PTR [rbx+0x40],0x1
   14001d710:	mov    DWORD PTR [rbx+0x48],r14d
   14001d714:	mov    BYTE PTR [rbx+0x41],al
   14001d717:	movsx  r9d,BYTE PTR [rbx+0x40]
   14001d71c:	mov    r15d,0x400
   14001d722:	test   r9d,r9d
   14001d725:	je     0x14001d83e
   14001d72b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d730:	movzx  eax,BYTE PTR [r8]
   14001d734:	mov    ecx,r9d
   14001d737:	inc    r8
   14001d73a:	mov    BYTE PTR [r9+rbx*1+0x41],al
   14001d73f:	inc    r9d
   14001d742:	inc    edi
   14001d744:	dec    ebp
   14001d746:	cmp    r9d,0x2
   14001d74a:	jne    0x14001d77d
   14001d74c:	movzx  eax,BYTE PTR [rbx+0x41]
   14001d750:	movzx  r10d,BYTE PTR [rbx+0x42]
   14001d755:	shl    r10w,0x8
   14001d75a:	or     r10w,ax
   14001d75e:	movzx  eax,r10w
   14001d762:	and    eax,0xfffff800
   14001d767:	cmp    eax,0xd800
   14001d76c:	jne    0x14001d78c
   14001d76e:	test   r15w,r10w
   14001d772:	jne    0x14001d83a
   14001d778:	mov    r10d,r14d
   14001d77b:	jmp    0x14001d783
   14001d77d:	cmp    r9d,0x4
   14001d781:	je     0x14001d7b3
   14001d783:	test   ebp,ebp
   14001d785:	jne    0x14001d730
   14001d787:	jmp    0x14001d83a
   14001d78c:	mov    WORD PTR [rdx],r10w
   14001d790:	add    rdx,0x2
   14001d794:	test   r11,r11
   14001d797:	je     0x14001d7a4
   14001d799:	mov    DWORD PTR [r11],0xffffffff
   14001d7a0:	add    r11,0x4
   14001d7a4:	dec    r12d
   14001d7a7:	mov    r9d,r14d
   14001d7aa:	mov    r10w,r14w
   14001d7ae:	jmp    0x14001d83a
   14001d7b3:	movzx  eax,BYTE PTR [rbx+0x43]
   14001d7b7:	movzx  r9d,BYTE PTR [rbx+0x44]
   14001d7bc:	shl    r9w,0x8
   14001d7c1:	or     r9w,ax
   14001d7c5:	movzx  eax,r9w
   14001d7c9:	and    eax,0xfffffc00
   14001d7ce:	cmp    eax,0xdc00
   14001d7d3:	jne    0x14001d8a7
   14001d7d9:	movzx  ecx,BYTE PTR [rbx+0x42]
   14001d7dd:	movzx  eax,BYTE PTR [rbx+0x41]
   14001d7e1:	add    rdx,0x2
   14001d7e5:	shl    cx,0x8
   14001d7e9:	or     cx,ax
   14001d7ec:	mov    WORD PTR [rdx-0x2],cx
   14001d7f0:	cmp    r12d,0x2
   14001d7f4:	jb     0x14001d81c
   14001d7f6:	mov    WORD PTR [rdx],r9w
   14001d7fa:	add    rdx,0x2
   14001d7fe:	test   r11,r11
   14001d801:	je     0x14001d816
   14001d803:	mov    DWORD PTR [r11],0xffffffff
   14001d80a:	mov    DWORD PTR [r11+0x4],0xffffffff
   14001d812:	add    r11,0x8
   14001d816:	add    r12d,0xfffffffe
   14001d81a:	jmp    0x14001d833
   14001d81c:	mov    WORD PTR [rbx+0x90],r9w
   14001d824:	mov    BYTE PTR [rbx+0x5d],0x1
   14001d828:	mov    r12d,r14d
   14001d82b:	mov    DWORD PTR [r13+0x0],0xf
   14001d833:	mov    r9d,r14d
   14001d836:	mov    r10w,r14w
   14001d83a:	mov    BYTE PTR [rbx+0x40],r9b
   14001d83e:	lea    r9d,[r12+r12*1]
   14001d842:	cmp    r9d,ebp
   14001d845:	jbe    0x14001d84e
   14001d847:	mov    r9d,ebp
   14001d84a:	and    r9d,0xfffffffe
   14001d84e:	test   r10w,r10w
   14001d852:	jne    0x14001d9e8
   14001d858:	test   r9d,r9d
   14001d85b:	je     0x14001da5a
   14001d861:	sub    ebp,r9d
   14001d864:	shr    r9d,1
   14001d867:	sub    r12d,r9d
   14001d86a:	test   r11,r11
   14001d86d:	jne    0x14001d940
   14001d873:	movzx  eax,BYTE PTR [r8]
   14001d877:	movzx  ecx,BYTE PTR [r8+0x1]
   14001d87c:	add    r8,0x2
   14001d880:	shl    cx,0x8
   14001d884:	or     cx,ax
   14001d887:	movzx  r10d,cx
   14001d88b:	mov    eax,r10d
   14001d88e:	and    eax,0xfffff800
   14001d893:	cmp    eax,0xd800
   14001d898:	je     0x14001d8e0
   14001d89a:	mov    WORD PTR [rdx],r10w
   14001d89e:	add    rdx,0x2
   14001d8a2:	jmp    0x14001d92a
   14001d8a7:	mov    DWORD PTR [r13+0x0],0xc
   14001d8af:	mov    rax,QWORD PTR [rsi+0x10]
   14001d8b3:	sub    rax,r8
   14001d8b6:	cmp    rax,0x2
   14001d8ba:	jl     0x14001d8c9
   14001d8bc:	sub    r8,0x2
   14001d8c0:	mov    BYTE PTR [rbx+0x40],0x2
   14001d8c4:	jmp    0x14001da86
   14001d8c9:	movzx  eax,BYTE PTR [rbx+0x43]
   14001d8cd:	mov    BYTE PTR [rbx+0x40],0x2
   14001d8d1:	bts    eax,0x8
   14001d8d5:	dec    r8
   14001d8d8:	mov    DWORD PTR [rbx+0x48],eax
   14001d8db:	jmp    0x14001da86
   14001d8e0:	test   r15w,r10w
   14001d8e4:	jne    0x14001d9d1
   14001d8ea:	cmp    r9d,0x2
   14001d8ee:	jb     0x14001d9d1
   14001d8f4:	movzx  eax,BYTE PTR [r8]
   14001d8f8:	movzx  ecx,BYTE PTR [r8+0x1]
   14001d8fd:	shl    cx,0x8
   14001d901:	or     cx,ax
   14001d904:	movzx  eax,cx
   14001d907:	and    eax,0xfffffc00
   14001d90c:	cmp    eax,0xdc00
   14001d911:	jne    0x14001d9d1
   14001d917:	mov    WORD PTR [rdx],r10w
   14001d91b:	add    r8,0x2
   14001d91f:	dec    r9d
   14001d922:	mov    WORD PTR [rdx+0x2],cx
   14001d926:	add    rdx,0x4
   14001d92a:	add    r9d,0xffffffff
   14001d92e:	jne    0x14001d873
   14001d934:	jmp    0x14001d9d1
   14001d939:	nop    DWORD PTR [rax+0x0]
   14001d940:	movzx  eax,BYTE PTR [r8]
   14001d944:	movzx  ecx,BYTE PTR [r8+0x1]
   14001d949:	add    r8,0x2
   14001d94d:	shl    cx,0x8
   14001d951:	or     cx,ax
   14001d954:	movzx  r10d,cx
   14001d958:	mov    eax,r10d
   14001d95b:	and    eax,0xfffff800
   14001d960:	cmp    eax,0xd800
   14001d965:	je     0x14001d97b
   14001d967:	mov    WORD PTR [rdx],r10w
   14001d96b:	mov    DWORD PTR [r11],edi
   14001d96e:	add    r11,0x4
   14001d972:	add    rdx,0x2
   14001d976:	add    edi,0x2
   14001d979:	jmp    0x14001d9c7
   14001d97b:	test   r15w,r10w
   14001d97f:	jne    0x14001d9d1
   14001d981:	cmp    r9d,0x2
   14001d985:	jb     0x14001d9d1
   14001d987:	movzx  eax,BYTE PTR [r8]
   14001d98b:	movzx  ecx,BYTE PTR [r8+0x1]
   14001d990:	shl    cx,0x8
   14001d994:	or     cx,ax
   14001d997:	movzx  eax,cx
   14001d99a:	and    eax,0xfffffc00
   14001d99f:	cmp    eax,0xdc00
   14001d9a4:	jne    0x14001d9d1
   14001d9a6:	mov    WORD PTR [rdx],r10w
   14001d9aa:	mov    WORD PTR [rdx+0x2],cx
   14001d9ae:	mov    DWORD PTR [r11],edi
   14001d9b1:	mov    DWORD PTR [r11+0x4],edi
   14001d9b5:	add    r11,0x8
   14001d9b9:	add    r8,0x2
   14001d9bd:	dec    r9d
   14001d9c0:	add    rdx,0x4
   14001d9c4:	add    edi,0x4
   14001d9c7:	add    r9d,0xffffffff
   14001d9cb:	jne    0x14001d940
   14001d9d1:	test   r9d,r9d
   14001d9d4:	je     0x14001da5a
   14001d9da:	add    r12d,r9d
   14001d9dd:	lea    ebp,[rbp+r9*2-0x2]
   14001d9e2:	test   r10w,r10w
   14001d9e6:	je     0x14001da5a
   14001d9e8:	movzx  eax,r10w
   14001d9ec:	mov    BYTE PTR [rbx+0x41],r10b
   14001d9f0:	mov    BYTE PTR [rbx+0x40],0x2
   14001d9f4:	shr    ax,0x8
   14001d9f8:	mov    BYTE PTR [rbx+0x42],al
   14001d9fb:	test   r15w,r10w
   14001d9ff:	jne    0x14001da7e
   14001da05:	cmp    ebp,0x2
   14001da08:	jb     0x14001da5a
   14001da0a:	movzx  eax,BYTE PTR [r8]
   14001da0e:	movzx  ecx,BYTE PTR [r8+0x1]
   14001da13:	shl    cx,0x8
   14001da17:	or     cx,ax
   14001da1a:	movzx  eax,cx
   14001da1d:	and    eax,0xfffffc00
   14001da22:	cmp    eax,0xdc00
   14001da27:	jne    0x14001da7e
   14001da29:	mov    WORD PTR [rdx],r10w
   14001da2d:	add    rdx,0x2
   14001da31:	add    r8,0x2
   14001da35:	test   r11,r11
   14001da38:	je     0x14001da41
   14001da3a:	mov    DWORD PTR [r11],edi
   14001da3d:	add    r11,0x4
   14001da41:	mov    WORD PTR [rbx+0x90],cx
   14001da48:	mov    BYTE PTR [rbx+0x5d],0x1
   14001da4c:	mov    BYTE PTR [rbx+0x40],r14b
   14001da50:	mov    DWORD PTR [r13+0x0],0xf
   14001da58:	jmp    0x14001da86
   14001da5a:	cmp    DWORD PTR [r13+0x0],r14d
   14001da5e:	jg     0x14001da86
   14001da60:	test   ebp,ebp
   14001da62:	je     0x14001da86
   14001da64:	test   r12d,r12d
   14001da67:	je     0x14001da50
   14001da69:	movzx  eax,BYTE PTR [r8]
   14001da6d:	movsx  rcx,BYTE PTR [rbx+0x40]
   14001da72:	mov    BYTE PTR [rcx+rbx*1+0x41],al
   14001da76:	inc    BYTE PTR [rbx+0x40]
   14001da79:	inc    r8
   14001da7c:	jmp    0x14001da86
   14001da7e:	mov    DWORD PTR [r13+0x0],0xc
   14001da86:	mov    r14,QWORD PTR [rsp+0x28]
   14001da8b:	mov    rdi,QWORD PTR [rsp+0x58]
   14001da90:	mov    r15,QWORD PTR [rsp+0x20]
   14001da95:	mov    QWORD PTR [rsi+0x30],r11
   14001da99:	mov    QWORD PTR [rsi+0x20],rdx
   14001da9d:	mov    QWORD PTR [rsi+0x10],r8
   14001daa1:	mov    r12,QWORD PTR [rsp+0x60]
   14001daa6:	mov    rbp,QWORD PTR [rsp+0x50]
   14001daab:	add    rsp,0x30
   14001daaf:	pop    r13
   14001dab1:	pop    rsi
   14001dab2:	pop    rbx
   14001dab3:	ret    
   14001dab4:	int3   
   14001dab5:	int3   
   14001dab6:	int3   
   14001dab7:	int3   
   14001dab8:	int3   
   14001dab9:	int3   
   14001daba:	int3   
   14001dabb:	int3   
   14001dabc:	int3   
   14001dabd:	int3   
   14001dabe:	int3   
   14001dabf:	int3   
   14001dac0:	rex push rbx
   14001dac2:	mov    r10,QWORD PTR [rcx+0x8]
   14001dac6:	mov    rbx,rdx
   14001dac9:	mov    r11,rcx
   14001dacc:	cmp    DWORD PTR [r10+0x4c],0x8
   14001dad1:	jge    0x14001dada
   14001dad3:	mov    eax,0xfffffff7
   14001dad8:	pop    rbx
   14001dad9:	ret    
   14001dada:	mov    rcx,QWORD PTR [rcx+0x10]
   14001dade:	mov    r9,QWORD PTR [r11+0x18]
   14001dae2:	cmp    rcx,r9
   14001dae5:	jb     0x14001daf4
   14001dae7:	mov    DWORD PTR [rdx],0x8
   14001daed:	mov    eax,0xffff
   14001daf2:	pop    rbx
   14001daf3:	ret    
   14001daf4:	lea    rdx,[rcx+0x2]
   14001daf8:	cmp    rdx,r9
   14001dafb:	jbe    0x14001db21
   14001dafd:	movzx  eax,BYTE PTR [rcx]
   14001db00:	mov    BYTE PTR [r10+0x41],al
   14001db04:	mov    rax,QWORD PTR [r11+0x8]
   14001db08:	mov    BYTE PTR [rax+0x40],0x1
   14001db0c:	lea    rax,[rcx+0x1]
   14001db10:	mov    QWORD PTR [r11+0x10],rax
   14001db14:	mov    DWORD PTR [rbx],0xb
   14001db1a:	mov    eax,0xffff
   14001db1f:	pop    rbx
   14001db20:	ret    
   14001db21:	movzx  eax,BYTE PTR [rcx]
   14001db24:	movzx  r8d,BYTE PTR [rcx+0x1]
   14001db29:	shl    r8d,0x8
   14001db2d:	or     r8d,eax
   14001db30:	mov    eax,r8d
   14001db33:	and    eax,0xfffff800
   14001db38:	cmp    eax,0xd800
   14001db3d:	jne    0x14001dbae
   14001db3f:	bt     r8d,0xa
   14001db44:	mov    QWORD PTR [rsp+0x10],rdi
   14001db49:	jb     0x14001db88
   14001db4b:	lea    rdi,[rdx+0x2]
   14001db4f:	cmp    rdi,r9
   14001db52:	ja     0x14001dbb7
   14001db54:	movzx  eax,BYTE PTR [rdx]
   14001db57:	movzx  ecx,BYTE PTR [rdx+0x1]
   14001db5b:	shl    cx,0x8
   14001db5f:	or     cx,ax
   14001db62:	movzx  r9d,cx
   14001db66:	mov    eax,r9d
   14001db69:	and    eax,0xfffffc00
   14001db6e:	cmp    eax,0xdc00
   14001db73:	jne    0x14001db88
   14001db75:	add    r8d,0xffff2809
   14001db7c:	mov    rdx,rdi
   14001db7f:	shl    r8d,0xa
   14001db83:	add    r8d,r9d
   14001db86:	jns    0x14001dba9
   14001db88:	mov    BYTE PTR [r10+0x40],0x2
   14001db8d:	movzx  eax,BYTE PTR [rdx-0x2]
   14001db91:	mov    BYTE PTR [r10+0x41],al
   14001db95:	movzx  eax,BYTE PTR [rdx-0x1]
   14001db99:	mov    BYTE PTR [r10+0x42],al
   14001db9d:	mov    DWORD PTR [rbx],0xc
   14001dba3:	mov    r8d,0xffff
   14001dba9:	mov    rdi,QWORD PTR [rsp+0x10]
   14001dbae:	mov    QWORD PTR [r11+0x10],rdx
   14001dbb2:	mov    eax,r8d
   14001dbb5:	pop    rbx
   14001dbb6:	ret    
   14001dbb7:	sub    rdx,0x2
   14001dbbb:	movzx  eax,r9b
   14001dbbf:	lea    rcx,[r10+0x41]
   14001dbc3:	sub    al,dl
   14001dbc5:	mov    BYTE PTR [r10+0x40],al
   14001dbc9:	nop    DWORD PTR [rax+0x0]
   14001dbd0:	movzx  eax,BYTE PTR [rdx]
   14001dbd3:	inc    rdx
   14001dbd6:	inc    rcx
   14001dbd9:	mov    BYTE PTR [rcx-0x1],al
   14001dbdc:	cmp    rdx,r9
   14001dbdf:	jb     0x14001dbd0
   14001dbe1:	mov    DWORD PTR [rbx],0xb
   14001dbe7:	jmp    0x14001dba3
   14001dbe9:	int3   
   14001dbea:	int3   
   14001dbeb:	int3   
   14001dbec:	int3   
   14001dbed:	int3   
   14001dbee:	int3   
   14001dbef:	int3   
   14001dbf0:	mov    edx,DWORD PTR [rcx+0x38]
   14001dbf3:	and    edx,0xf
   14001dbf6:	cmp    edx,0x1
   14001dbf9:	ja     0x14001dc15
   14001dbfb:	xor    eax,eax
   14001dbfd:	test   edx,edx
   14001dbff:	mov    r8d,0x8
   14001dc05:	cmove  eax,r8d
   14001dc09:	mov    DWORD PTR [rcx+0x4c],eax
   14001dc0c:	cmp    edx,0x1
   14001dc0f:	jne    0x14001dc1c
   14001dc11:	mov    DWORD PTR [rcx+0x50],edx
   14001dc14:	ret    
   14001dc15:	mov    DWORD PTR [r8],0x1
   14001dc1c:	repz ret 
   14001dc1e:	int3   
   14001dc1f:	int3   
   14001dc20:	test   BYTE PTR [rcx+0x38],0xf
   14001dc24:	lea    rax,[rip+0x20a3d]        # 0x14003e668
   14001dc2b:	je     0x14001dc34
   14001dc2d:	lea    rax,[rip+0x2d6e4]        # 0x14004b318
   14001dc34:	repz ret 
   14001dc36:	int3   
   14001dc37:	int3   
   14001dc38:	int3   
   14001dc39:	int3   
   14001dc3a:	int3   
   14001dc3b:	int3   
   14001dc3c:	int3   
   14001dc3d:	int3   
   14001dc3e:	int3   
   14001dc3f:	int3   
   14001dc40:	cmp    edx,0x1
   14001dc43:	jg     0x14001dc4e
   14001dc45:	mov    DWORD PTR [rcx+0x4c],0x0
   14001dc4c:	je     0x14001dc55
   14001dc4e:	mov    DWORD PTR [rcx+0x50],0x1
   14001dc55:	repz ret 
   14001dc57:	int3   
   14001dc58:	int3   
   14001dc59:	int3   
   14001dc5a:	int3   
   14001dc5b:	int3   
   14001dc5c:	int3   
   14001dc5d:	int3   
   14001dc5e:	int3   
   14001dc5f:	int3   
   14001dc60:	mov    eax,DWORD PTR [rcx+0x38]
   14001dc63:	and    al,0xf
   14001dc65:	cmp    al,0x1
   14001dc67:	ja     0x14001dc78
   14001dc69:	mov    DWORD PTR [rcx+0x4c],0x0
   14001dc70:	mov    DWORD PTR [rcx+0x50],0x1
   14001dc77:	ret    
   14001dc78:	mov    DWORD PTR [r8],0x1
   14001dc7f:	ret    
   14001dc80:	test   BYTE PTR [rcx+0x38],0xf
   14001dc84:	lea    rax,[rip+0x23829]        # 0x1400414b4
   14001dc8b:	je     0x14001dc94
   14001dc8d:	lea    rax,[rip+0x2d69c]        # 0x14004b330
   14001dc94:	repz ret 
   14001dc96:	int3   
   14001dc97:	int3   
   14001dc98:	int3   
   14001dc99:	int3   
   14001dc9a:	int3   
   14001dc9b:	int3   
   14001dc9c:	int3   
   14001dc9d:	int3   
   14001dc9e:	int3   
   14001dc9f:	int3   
   14001dca0:	mov    QWORD PTR [rsp+0x8],rbx
   14001dca5:	mov    QWORD PTR [rsp+0x10],rbp
   14001dcaa:	mov    QWORD PTR [rsp+0x18],rsi
   14001dcaf:	push   rdi
   14001dcb0:	push   r12
   14001dcb2:	push   r13
   14001dcb4:	push   r14
   14001dcb6:	push   r15
   14001dcb8:	sub    rsp,0x20
   14001dcbc:	mov    rsi,QWORD PTR [rcx+0x8]
   14001dcc0:	mov    r8,QWORD PTR [rcx+0x10]
   14001dcc4:	mov    r14,QWORD PTR [rcx+0x18]
   14001dcc8:	mov    ebx,DWORD PTR [rsi+0x4c]
   14001dccb:	mov    rdi,QWORD PTR [rcx+0x30]
   14001dccf:	xor    r12d,r12d
   14001dcd2:	mov    r13,rdx
   14001dcd5:	mov    rbp,rcx
   14001dcd8:	cmp    r8,r14
   14001dcdb:	jae    0x14001de0f
   14001dce1:	lea    r15,[rip+0x2d2b8]        # 0x14004afa0
   14001dce8:	lea    r9,[rip+0x2d081]        # 0x14004ad70
   14001dcef:	lea    r10,[rip+0x2d4da]        # 0x14004b1d0
   14001dcf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001dd00:	cmp    DWORD PTR [r13+0x0],0x0
   14001dd05:	jg     0x14001de0f
   14001dd0b:	mov    ecx,ebx
   14001dd0d:	test   ebx,ebx
   14001dd0f:	je     0x14001ddf3
   14001dd15:	sub    ecx,0x1
   14001dd18:	je     0x14001dd5f
   14001dd1a:	sub    ecx,0x7
   14001dd1d:	je     0x14001dd39
   14001dd1f:	cmp    ecx,0x1
   14001dd22:	jne    0x14001de06
   14001dd28:	mov    rdx,r13
   14001dd2b:	mov    rcx,rbp
   14001dd2e:	mov    QWORD PTR [rbp+0x10],r8
   14001dd32:	call   0x14001d680
   14001dd37:	jmp    0x14001dd48
   14001dd39:	mov    rdx,r13
   14001dd3c:	mov    rcx,rbp
   14001dd3f:	mov    QWORD PTR [rbp+0x10],r8
   14001dd43:	call   0x14001cb50
   14001dd48:	mov    r8,QWORD PTR [rbp+0x10]
   14001dd4c:	lea    r9,[rip+0x2d01d]        # 0x14004ad70
   14001dd53:	lea    r10,[rip+0x2d476]        # 0x14004b1d0
   14001dd5a:	jmp    0x14001de06
   14001dd5f:	movzx  eax,BYTE PTR [rsi+0x41]
   14001dd63:	movzx  edx,BYTE PTR [r8]
   14001dd67:	cmp    al,0xfe
   14001dd69:	jne    0x14001dd92
   14001dd6b:	cmp    dl,0xff
   14001dd6e:	jne    0x14001dd92
   14001dd70:	cmp    QWORD PTR [rsi+0x30],r15
   14001dd74:	je     0x14001de56
   14001dd7a:	inc    r8
   14001dd7d:	mov    ebx,0x8
   14001dd82:	mov    BYTE PTR [rsi+0x40],0x0
   14001dd86:	mov    r12d,r8d
   14001dd89:	sub    r12d,DWORD PTR [rbp+0x10]
   14001dd8d:	mov    DWORD PTR [rsi+0x4c],ebx
   14001dd90:	jmp    0x14001de06
   14001dd92:	cmp    al,0xff
   14001dd94:	jne    0x14001ddbd
   14001dd96:	cmp    dl,0xfe
   14001dd99:	jne    0x14001ddbd
   14001dd9b:	cmp    QWORD PTR [rsi+0x30],r9
   14001dd9f:	je     0x14001de5d
   14001dda5:	inc    r8
   14001dda8:	mov    ebx,0x9
   14001ddad:	mov    BYTE PTR [rsi+0x40],0x0
   14001ddb1:	mov    r12d,r8d
   14001ddb4:	sub    r12d,DWORD PTR [rbp+0x10]
   14001ddb8:	mov    DWORD PTR [rsi+0x4c],ebx
   14001ddbb:	jmp    0x14001de06
   14001ddbd:	mov    rcx,QWORD PTR [rsi+0x30]
   14001ddc1:	cmp    rcx,r10
   14001ddc4:	jne    0x14001ddd3
   14001ddc6:	mov    eax,DWORD PTR [rsi+0x38]
   14001ddc9:	and    al,0xf
   14001ddcb:	cmp    al,0x1
   14001ddcd:	je     0x14001de5d
   14001ddd3:	mov    rax,QWORD PTR [rbp+0x10]
   14001ddd7:	cmp    r8,rax
   14001ddda:	je     0x14001dde3
   14001dddc:	mov    r8,rax
   14001dddf:	mov    BYTE PTR [rsi+0x40],0x0
   14001dde3:	xor    ebx,ebx
   14001dde5:	cmp    rcx,r15
   14001dde8:	sete   bl
   14001ddeb:	add    ebx,0x8
   14001ddee:	mov    DWORD PTR [rsi+0x4c],ebx
   14001ddf1:	jmp    0x14001de06
   14001ddf3:	movzx  eax,BYTE PTR [r8]
   14001ddf7:	inc    r8
   14001ddfa:	mov    ebx,0x1
   14001ddff:	mov    BYTE PTR [rsi+0x41],al
   14001de02:	mov    BYTE PTR [rsi+0x40],0x1
   14001de06:	cmp    r8,r14
   14001de09:	jb     0x14001dd00
   14001de0f:	test   rdi,rdi
   14001de12:	je     0x14001de2e
   14001de14:	test   r12d,r12d
   14001de17:	je     0x14001de2e
   14001de19:	mov    rax,QWORD PTR [rbp+0x30]
   14001de1d:	cmp    rdi,rax
   14001de20:	jae    0x14001de2e
   14001de22:	add    DWORD PTR [rdi],r12d
   14001de25:	add    rdi,0x4
   14001de29:	cmp    rdi,rax
   14001de2c:	jb     0x14001de22
   14001de2e:	mov    QWORD PTR [rbp+0x10],r8
   14001de32:	cmp    r8,r14
   14001de35:	jne    0x14001de8c
   14001de37:	cmp    BYTE PTR [rbp+0x2],0x0
   14001de3b:	je     0x14001de8c
   14001de3d:	mov    ecx,ebx
   14001de3f:	sub    ecx,0x8
   14001de42:	je     0x14001de81
   14001de44:	cmp    ecx,0x1
   14001de47:	jne    0x14001de8c
   14001de49:	mov    rdx,r13
   14001de4c:	mov    rcx,rbp
   14001de4f:	call   0x14001d680
   14001de54:	jmp    0x14001de8c
   14001de56:	mov    ecx,0x7
   14001de5b:	jmp    0x14001de62
   14001de5d:	mov    ecx,0x6
   14001de62:	lea    rax,[r8+0x1]
   14001de66:	mov    BYTE PTR [rsi+0x42],dl
   14001de69:	mov    BYTE PTR [rsi+0x40],0x2
   14001de6d:	mov    QWORD PTR [rbp+0x10],rax
   14001de71:	lea    eax,[rcx+0x2]
   14001de74:	mov    DWORD PTR [rsi+0x4c],eax
   14001de77:	mov    DWORD PTR [r13+0x0],0x12
   14001de7f:	jmp    0x14001de8f
   14001de81:	mov    rdx,r13
   14001de84:	mov    rcx,rbp
   14001de87:	call   0x14001cb50
   14001de8c:	mov    DWORD PTR [rsi+0x4c],ebx
   14001de8f:	mov    rbx,QWORD PTR [rsp+0x50]
   14001de94:	mov    rbp,QWORD PTR [rsp+0x58]
   14001de99:	mov    rsi,QWORD PTR [rsp+0x60]
   14001de9e:	add    rsp,0x20
   14001dea2:	pop    r15
   14001dea4:	pop    r14
   14001dea6:	pop    r13
   14001dea8:	pop    r12
   14001deaa:	pop    rdi
   14001deab:	ret    
   14001deac:	int3   
   14001dead:	int3   
   14001deae:	int3   
   14001deaf:	int3   
   14001deb0:	mov    r8,QWORD PTR [rcx+0x8]
   14001deb4:	mov    r9d,DWORD PTR [r8+0x4c]
   14001deb8:	sub    r9d,0x8
   14001debc:	je     0x14001decf
   14001debe:	cmp    r9d,0x1
   14001dec2:	je     0x14001deca
   14001dec4:	mov    eax,0xfffffff7
   14001dec9:	ret    
   14001deca:	jmp    0x14001dac0
   14001decf:	jmp    0x14001cf90
   14001ded4:	int3   
   14001ded5:	int3   
   14001ded6:	int3   
   14001ded7:	int3   
   14001ded8:	int3   
   14001ded9:	int3   
   14001deda:	int3   
   14001dedb:	int3   
   14001dedc:	int3   
   14001dedd:	int3   
   14001dede:	int3   
   14001dedf:	int3   
   14001dee0:	cmp    ecx,0xffffffc0
   14001dee3:	mov    eax,0x86d90545
   14001dee8:	jl     0x14001e07b
   14001deee:	cmp    ecx,0x2910
   14001def4:	jg     0x14001df48
   14001def6:	sub    ecx,0x40
   14001def9:	imul   ecx
   14001defb:	add    edx,ecx
   14001defd:	sar    edx,0x7
   14001df00:	mov    eax,edx
   14001df02:	shr    eax,0x1f
   14001df05:	add    edx,eax
   14001df07:	mov    eax,edx
   14001df09:	imul   eax,eax,0xf3
   14001df0f:	sub    ecx,eax
   14001df11:	cmp    ecx,0x14
   14001df14:	jl     0x14001df29
   14001df16:	add    ecx,0xd
   14001df19:	lea    eax,[rdx+0xd0]
   14001df1f:	shl    eax,0x8
   14001df22:	or     eax,ecx
   14001df24:	bts    eax,0x19
   14001df28:	ret    
   14001df29:	movsxd rax,ecx
   14001df2c:	lea    r8,[rip+0x2d445]        # 0x14004b378
   14001df33:	movsx  ecx,BYTE PTR [rax+r8*1]
   14001df38:	lea    eax,[rdx+0xd0]
   14001df3e:	shl    eax,0x8
   14001df41:	or     eax,ecx
   14001df43:	bts    eax,0x19
   14001df47:	ret    
   14001df48:	cmp    ecx,0x2dd0b
   14001df4e:	lea    r8,[rip+0x2d423]        # 0x14004b378
   14001df55:	jg     0x14001dfe1
   14001df5b:	sub    ecx,0x2911
   14001df61:	imul   ecx
   14001df63:	lea    r9d,[rcx+rdx*1]
   14001df67:	sar    r9d,0x7
   14001df6b:	mov    eax,r9d
   14001df6e:	shr    eax,0x1f
   14001df71:	add    r9d,eax
   14001df74:	mov    eax,r9d
   14001df77:	imul   eax,eax,0xf3
   14001df7d:	sub    ecx,eax
   14001df7f:	cmp    ecx,0x14
   14001df82:	jl     0x14001df8a
   14001df84:	lea    r10d,[rcx+0xd]
   14001df88:	jmp    0x14001df92
   14001df8a:	movsxd rax,ecx
   14001df8d:	movsx  r10d,BYTE PTR [rax+r8*1]
   14001df92:	mov    eax,0x86d90545
   14001df97:	or     r10d,0x3000000
   14001df9e:	imul   r9d
   14001dfa1:	add    edx,r9d
   14001dfa4:	sar    edx,0x7
   14001dfa7:	mov    eax,edx
   14001dfa9:	shr    eax,0x1f
   14001dfac:	add    edx,eax
   14001dfae:	mov    eax,edx
   14001dfb0:	imul   eax,eax,0xf3
   14001dfb6:	sub    r9d,eax
   14001dfb9:	cmp    r9d,0x14
   14001dfbd:	jl     0x14001dfc5
   14001dfbf:	add    r9d,0xd
   14001dfc3:	jmp    0x14001dfcd
   14001dfc5:	movsxd rcx,r9d
   14001dfc8:	movsx  r9d,BYTE PTR [rcx+r8*1]
   14001dfcd:	shl    r9d,0x8
   14001dfd1:	lea    eax,[rdx+0xfb]
   14001dfd7:	shl    eax,0x10
   14001dfda:	or     eax,r9d
   14001dfdd:	or     eax,r10d
   14001dfe0:	ret    
   14001dfe1:	sub    ecx,0x2dd0c
   14001dfe7:	imul   ecx
   14001dfe9:	lea    r10d,[rcx+rdx*1]
   14001dfed:	sar    r10d,0x7
   14001dff1:	mov    eax,r10d
   14001dff4:	shr    eax,0x1f
   14001dff7:	add    r10d,eax
   14001dffa:	mov    eax,r10d
   14001dffd:	imul   eax,eax,0xf3
   14001e003:	sub    ecx,eax
   14001e005:	cmp    ecx,0x14
   14001e008:	jl     0x14001e010
   14001e00a:	lea    r9d,[rcx+0xd]
   14001e00e:	jmp    0x14001e018
   14001e010:	movsxd rax,ecx
   14001e013:	movsx  r9d,BYTE PTR [rax+r8*1]
   14001e018:	mov    eax,0x86d90545
   14001e01d:	imul   r10d
   14001e020:	add    edx,r10d
   14001e023:	sar    edx,0x7
   14001e026:	mov    eax,edx
   14001e028:	shr    eax,0x1f
   14001e02b:	add    edx,eax
   14001e02d:	mov    eax,edx
   14001e02f:	imul   eax,eax,0xf3
   14001e035:	sub    r10d,eax
   14001e038:	cmp    r10d,0x14
   14001e03c:	jl     0x14001e044
   14001e03e:	add    r10d,0xd
   14001e042:	jmp    0x14001e04c
   14001e044:	movsxd rax,r10d
   14001e047:	movsx  r10d,BYTE PTR [rax+r8*1]
   14001e04c:	shl    r10d,0x8
   14001e050:	or     r9d,r10d
   14001e053:	cmp    edx,0x14
   14001e056:	jl     0x14001e067
   14001e058:	lea    eax,[rdx+0xd]
   14001e05b:	or     eax,0xfffffe00
   14001e060:	shl    eax,0x10
   14001e063:	or     eax,r9d
   14001e066:	ret    
   14001e067:	movsxd rcx,edx
   14001e06a:	movsx  eax,BYTE PTR [rcx+r8*1]
   14001e06f:	or     eax,0xfffffe00
   14001e074:	shl    eax,0x10
   14001e077:	or     eax,r9d
   14001e07a:	ret    
   14001e07b:	cmp    ecx,0xffffd6ef
   14001e081:	jl     0x14001e0d9
   14001e083:	add    ecx,0x40
   14001e086:	imul   ecx
   14001e088:	add    edx,ecx
   14001e08a:	sar    edx,0x7
   14001e08d:	mov    eax,edx
   14001e08f:	shr    eax,0x1f
   14001e092:	add    edx,eax
   14001e094:	mov    eax,edx
   14001e096:	imul   eax,eax,0xf3
   14001e09c:	sub    ecx,eax
   14001e09e:	jns    0x14001e0a8
   14001e0a0:	dec    edx
   14001e0a2:	add    ecx,0xf3
   14001e0a8:	cmp    ecx,0x14
   14001e0ab:	jl     0x14001e0bd
   14001e0ad:	add    ecx,0xd
   14001e0b0:	lea    eax,[rdx+0x50]
   14001e0b3:	shl    eax,0x8
   14001e0b6:	or     eax,ecx
   14001e0b8:	bts    eax,0x19
   14001e0bc:	ret    
   14001e0bd:	movsxd rax,ecx
   14001e0c0:	lea    r8,[rip+0x2d2b1]        # 0x14004b378
   14001e0c7:	movsx  ecx,BYTE PTR [rax+r8*1]
   14001e0cc:	lea    eax,[rdx+0x50]
   14001e0cf:	shl    eax,0x8
   14001e0d2:	or     eax,ecx
   14001e0d4:	bts    eax,0x19
   14001e0d8:	ret    
   14001e0d9:	cmp    ecx,0xfffd22f4
   14001e0df:	jl     0x14001e194
   14001e0e5:	add    ecx,0x2911
   14001e0eb:	imul   ecx
   14001e0ed:	lea    r9d,[rcx+rdx*1]
   14001e0f1:	sar    r9d,0x7
   14001e0f5:	mov    eax,r9d
   14001e0f8:	shr    eax,0x1f
   14001e0fb:	add    r9d,eax
   14001e0fe:	mov    eax,r9d
   14001e101:	imul   eax,eax,0xf3
   14001e107:	sub    ecx,eax
   14001e109:	jns    0x14001e114
   14001e10b:	dec    r9d
   14001e10e:	add    ecx,0xf3
   14001e114:	cmp    ecx,0x14
   14001e117:	lea    r8,[rip+0x2d25a]        # 0x14004b378
   14001e11e:	jl     0x14001e126
   14001e120:	lea    r10d,[rcx+0xd]
   14001e124:	jmp    0x14001e12e
   14001e126:	movsxd rax,ecx
   14001e129:	movsx  r10d,BYTE PTR [rax+r8*1]
   14001e12e:	mov    eax,0x86d90545
   14001e133:	or     r10d,0x3000000
   14001e13a:	imul   r9d
   14001e13d:	add    edx,r9d
   14001e140:	sar    edx,0x7
   14001e143:	mov    eax,edx
   14001e145:	shr    eax,0x1f
   14001e148:	add    edx,eax
   14001e14a:	mov    eax,edx
   14001e14c:	imul   eax,eax,0xf3
   14001e152:	sub    r9d,eax
   14001e155:	jns    0x14001e160
   14001e157:	dec    edx
   14001e159:	add    r9d,0xf3
   14001e160:	cmp    r9d,0x14
   14001e164:	jl     0x14001e17b
   14001e166:	add    r9d,0xd
   14001e16a:	lea    eax,[rdx+0x25]
   14001e16d:	shl    eax,0x10
   14001e170:	shl    r9d,0x8
   14001e174:	or     eax,r9d
   14001e177:	or     eax,r10d
   14001e17a:	ret    
   14001e17b:	movsxd rcx,r9d
   14001e17e:	lea    eax,[rdx+0x25]
   14001e181:	movsx  r9d,BYTE PTR [rcx+r8*1]
   14001e186:	shl    eax,0x10
   14001e189:	shl    r9d,0x8
   14001e18d:	or     eax,r9d
   14001e190:	or     eax,r10d
   14001e193:	ret    
   14001e194:	add    ecx,0x2dd0c
   14001e19a:	imul   ecx
   14001e19c:	lea    r9d,[rcx+rdx*1]
   14001e1a0:	sar    r9d,0x7
   14001e1a4:	mov    eax,r9d
   14001e1a7:	shr    eax,0x1f
   14001e1aa:	add    r9d,eax
   14001e1ad:	mov    eax,r9d
   14001e1b0:	imul   eax,eax,0xf3
   14001e1b6:	sub    ecx,eax
   14001e1b8:	jns    0x14001e1c3
   14001e1ba:	dec    r9d
   14001e1bd:	add    ecx,0xf3
   14001e1c3:	cmp    ecx,0x14
   14001e1c6:	lea    r8,[rip+0x2d1ab]        # 0x14004b378
   14001e1cd:	jl     0x14001e1d5
   14001e1cf:	lea    r10d,[rcx+0xd]
   14001e1d3:	jmp    0x14001e1dd
   14001e1d5:	movsxd rax,ecx
   14001e1d8:	movsx  r10d,BYTE PTR [rax+r8*1]
   14001e1dd:	mov    eax,0x86d90545
   14001e1e2:	imul   r9d
   14001e1e5:	add    edx,r9d
   14001e1e8:	sar    edx,0x7
   14001e1eb:	mov    eax,edx
   14001e1ed:	shr    eax,0x1f
   14001e1f0:	add    edx,eax
   14001e1f2:	mov    eax,edx
   14001e1f4:	imul   eax,eax,0xf3
   14001e1fa:	sub    r9d,eax
   14001e1fd:	jns    0x14001e208
   14001e1ff:	dec    edx
   14001e201:	add    r9d,0xf3
   14001e208:	cmp    r9d,0x14
   14001e20c:	jl     0x14001e214
   14001e20e:	add    r9d,0xd
   14001e212:	jmp    0x14001e21c
   14001e214:	movsxd rax,r9d
   14001e217:	movsx  r9d,BYTE PTR [rax+r8*1]
   14001e21c:	shl    r9d,0x8
   14001e220:	add    edx,0xf3
   14001e226:	or     r10d,r9d
   14001e229:	cmp    edx,0x14
   14001e22c:	jl     0x14001e23d
   14001e22e:	lea    eax,[rdx+0xd]
   14001e231:	or     eax,0x2100
   14001e236:	shl    eax,0x10
   14001e239:	or     eax,r10d
   14001e23c:	ret    
   14001e23d:	movsxd rcx,edx
   14001e240:	movsx  eax,BYTE PTR [rcx+r8*1]
   14001e245:	or     eax,0x2100
   14001e24a:	shl    eax,0x10
   14001e24d:	or     eax,r10d
   14001e250:	ret    
   14001e251:	int3   
   14001e252:	int3   
   14001e253:	int3   
   14001e254:	int3   
   14001e255:	int3   
   14001e256:	int3   
   14001e257:	int3   
   14001e258:	int3   
   14001e259:	int3   
   14001e25a:	int3   
   14001e25b:	int3   
   14001e25c:	int3   
   14001e25d:	int3   
   14001e25e:	int3   
   14001e25f:	int3   
   14001e260:	mov    QWORD PTR [rsp+0x20],rbx
   14001e265:	mov    QWORD PTR [rsp+0x10],rdx
   14001e26a:	mov    QWORD PTR [rsp+0x8],rcx
   14001e26f:	push   rbp
   14001e270:	push   rsi
   14001e271:	push   rdi
   14001e272:	push   r12
   14001e274:	push   r13
   14001e276:	push   r14
   14001e278:	push   r15
   14001e27a:	sub    rsp,0x20
   14001e27e:	mov    r9,QWORD PTR [rcx+0x8]
   14001e282:	mov    r11,QWORD PTR [rcx+0x20]
   14001e286:	mov    ebp,DWORD PTR [rcx+0x28]
   14001e289:	mov    esi,DWORD PTR [r9+0x50]
   14001e28d:	mov    edi,DWORD PTR [r9+0x54]
   14001e291:	mov    r13,QWORD PTR [rcx+0x10]
   14001e295:	mov    r15,QWORD PTR [rcx+0x18]
   14001e299:	mov    rbx,QWORD PTR [rcx+0x30]
   14001e29d:	sub    ebp,r11d
   14001e2a0:	test   esi,esi
   14001e2a2:	mov    edx,0x40
   14001e2a7:	mov    eax,edi
   14001e2a9:	cmove  esi,edx
   14001e2ac:	neg    eax
   14001e2ae:	mov    QWORD PTR [rsp+0x70],r9
   14001e2b3:	sbb    r14d,r14d
   14001e2b6:	xor    r12d,r12d
   14001e2b9:	lea    r8,[rip+0x2d0b8]        # 0x14004b378
   14001e2c0:	test   edi,edi
   14001e2c2:	je     0x14001e2cc
   14001e2c4:	test   ebp,ebp
   14001e2c6:	jg     0x14001e37d
   14001e2cc:	mov    rax,r15
   14001e2cf:	sub    rax,r13
   14001e2d2:	sar    rax,1
   14001e2d5:	cmp    ebp,eax
   14001e2d7:	cmovg  ebp,eax
   14001e2da:	test   ebp,ebp
   14001e2dc:	jle    0x14001e330
   14001e2de:	xchg   ax,ax
   14001e2e0:	movzx  edi,WORD PTR [r13+0x0]
   14001e2e5:	cmp    edi,0x3000
   14001e2eb:	jge    0x14001e32b
   14001e2ed:	cmp    edi,0x20
   14001e2f0:	jg     0x14001e2fa
   14001e2f2:	cmovne esi,edx
   14001e2f5:	mov    BYTE PTR [r11],dil
   14001e2f8:	jmp    0x14001e314
   14001e2fa:	mov    ecx,edi
   14001e2fc:	sub    ecx,esi
   14001e2fe:	lea    eax,[rcx+0x40]
   14001e301:	cmp    eax,0x7f
   14001e304:	ja     0x14001e32b
   14001e306:	mov    esi,edi
   14001e308:	and    esi,0xffffff80
   14001e30b:	add    esi,0x40
   14001e30e:	sub    cl,0x70
   14001e311:	mov    BYTE PTR [r11],cl
   14001e314:	mov    DWORD PTR [rbx],r12d
   14001e317:	dec    ebp
   14001e319:	inc    r11
   14001e31c:	add    rbx,0x4
   14001e320:	inc    r12d
   14001e323:	add    r13,0x2
   14001e327:	test   ebp,ebp
   14001e329:	jg     0x14001e2e0
   14001e32b:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e330:	mov    ebp,DWORD PTR [rcx+0x28]
   14001e333:	sub    ebp,r11d
   14001e336:	mov    r14d,r12d
   14001e339:	cmp    r13,r15
   14001e33c:	jae    0x14001e601
   14001e342:	test   ebp,ebp
   14001e344:	jle    0x14001e5f6
   14001e34a:	movzx  edi,WORD PTR [r13+0x0]
   14001e34f:	add    r13,0x2
   14001e353:	inc    r12d
   14001e356:	cmp    edi,0x20
   14001e359:	jg     0x14001e36f
   14001e35b:	cmovne esi,edx
   14001e35e:	mov    BYTE PTR [r11],dil
   14001e361:	mov    DWORD PTR [rbx],r14d
   14001e364:	add    rbx,0x4
   14001e368:	inc    r11
   14001e36b:	dec    ebp
   14001e36d:	jmp    0x14001e336
   14001e36f:	mov    eax,edi
   14001e371:	and    eax,0xfffffc00
   14001e376:	cmp    eax,0xd800
   14001e37b:	jne    0x14001e3ab
   14001e37d:	cmp    r13,r15
   14001e380:	jae    0x14001e55a
   14001e386:	movzx  ecx,WORD PTR [r13+0x0]
   14001e38b:	mov    eax,ecx
   14001e38d:	and    eax,0xfffffc00
   14001e392:	cmp    eax,0xdc00
   14001e397:	jne    0x14001e3ab
   14001e399:	add    edi,0xffff2809
   14001e39f:	add    r13,0x2
   14001e3a3:	inc    r12d
   14001e3a6:	shl    edi,0xa
   14001e3a9:	add    edi,ecx
   14001e3ab:	lea    eax,[rdi-0x3040]
   14001e3b1:	mov    ecx,edi
   14001e3b3:	sub    ecx,esi
   14001e3b5:	cmp    eax,0xa763
   14001e3ba:	ja     0x14001e3ee
   14001e3bc:	cmp    edi,0x309f
   14001e3c2:	jg     0x14001e3cb
   14001e3c4:	mov    esi,0x3070
   14001e3c9:	jmp    0x14001e3f6
   14001e3cb:	lea    eax,[rdi-0x4e00]
   14001e3d1:	cmp    eax,0x51a5
   14001e3d6:	ja     0x14001e3df
   14001e3d8:	mov    esi,0x7711
   14001e3dd:	jmp    0x14001e3f6
   14001e3df:	cmp    edi,0xac00
   14001e3e5:	jl     0x14001e3ee
   14001e3e7:	mov    esi,0xc1d1
   14001e3ec:	jmp    0x14001e3f6
   14001e3ee:	mov    esi,edi
   14001e3f0:	and    esi,0xffffff80
   14001e3f3:	add    esi,0x40
   14001e3f6:	lea    edx,[rcx+0x40]
   14001e3f9:	cmp    edx,0x7f
   14001e3fc:	ja     0x14001e430
   14001e3fe:	sub    cl,0x70
   14001e401:	add    rbx,0x4
   14001e405:	inc    r11
   14001e408:	mov    BYTE PTR [r11-0x1],cl
   14001e40c:	mov    DWORD PTR [rbx-0x4],r14d
   14001e410:	dec    ebp
   14001e412:	cmp    edi,0x3000
   14001e418:	mov    r14d,r12d
   14001e41b:	mov    edx,0x40
   14001e420:	jge    0x14001e339
   14001e426:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e42b:	jmp    0x14001e2cc
   14001e430:	lea    eax,[rcx+0x2911]
   14001e436:	cmp    eax,0x5221
   14001e43b:	ja     0x14001e4d2
   14001e441:	cmp    ebp,0x2
   14001e444:	jl     0x14001e4d2
   14001e44a:	mov    eax,0x86d90545
   14001e44f:	test   ecx,ecx
   14001e451:	js     0x14001e476
   14001e453:	sub    ecx,0x40
   14001e456:	imul   ecx
   14001e458:	add    edx,ecx
   14001e45a:	sar    edx,0x7
   14001e45d:	mov    eax,edx
   14001e45f:	shr    eax,0x1f
   14001e462:	add    edx,eax
   14001e464:	mov    eax,edx
   14001e466:	imul   eax,eax,0xf3
   14001e46c:	sub    ecx,eax
   14001e46e:	add    edx,0xd0
   14001e474:	jmp    0x14001e49d
   14001e476:	mov    ecx,edx
   14001e478:	imul   edx
   14001e47a:	add    edx,ecx
   14001e47c:	sar    edx,0x7
   14001e47f:	mov    eax,edx
   14001e481:	shr    eax,0x1f
   14001e484:	add    edx,eax
   14001e486:	mov    eax,edx
   14001e488:	imul   eax,eax,0xf3
   14001e48e:	sub    ecx,eax
   14001e490:	jns    0x14001e49a
   14001e492:	dec    edx
   14001e494:	add    ecx,0xf3
   14001e49a:	add    edx,0x50
   14001e49d:	cmp    ecx,0x14
   14001e4a0:	mov    BYTE PTR [r11],dl
   14001e4a3:	jl     0x14001e4aa
   14001e4a5:	add    ecx,0xd
   14001e4a8:	jmp    0x14001e4b2
   14001e4aa:	movsxd rax,ecx
   14001e4ad:	movsx  ecx,BYTE PTR [rax+r8*1]
   14001e4b2:	mov    BYTE PTR [r11+0x1],cl
   14001e4b6:	mov    DWORD PTR [rbx],r14d
   14001e4b9:	mov    DWORD PTR [rbx+0x4],r14d
   14001e4bd:	add    rbx,0x8
   14001e4c1:	add    r11,0x2
   14001e4c5:	mov    edx,0x40
   14001e4ca:	sub    ebp,0x2
   14001e4cd:	jmp    0x14001e336
   14001e4d2:	call   0x14001dee0
   14001e4d7:	mov    r10d,eax
   14001e4da:	cmp    eax,0x4000000
   14001e4df:	jae    0x14001e4e8
   14001e4e1:	mov    ecx,eax
   14001e4e3:	sar    ecx,0x18
   14001e4e6:	jmp    0x14001e4ed
   14001e4e8:	mov    ecx,0x4
   14001e4ed:	cmp    ecx,ebp
   14001e4ef:	jg     0x14001e561
   14001e4f1:	mov    edx,ecx
   14001e4f3:	sub    edx,0x2
   14001e4f6:	je     0x14001e529
   14001e4f8:	sub    edx,0x1
   14001e4fb:	je     0x14001e514
   14001e4fd:	cmp    edx,0x1
   14001e500:	jne    0x14001e547
   14001e502:	sar    eax,0x18
   14001e505:	inc    r11
   14001e508:	add    rbx,0x4
   14001e50c:	mov    BYTE PTR [r11-0x1],al
   14001e510:	mov    DWORD PTR [rbx-0x4],r14d
   14001e514:	mov    eax,r10d
   14001e517:	inc    r11
   14001e51a:	sar    eax,0x10
   14001e51d:	add    rbx,0x4
   14001e521:	mov    BYTE PTR [r11-0x1],al
   14001e525:	mov    DWORD PTR [rbx-0x4],r14d
   14001e529:	mov    eax,r10d
   14001e52c:	add    r11,0x2
   14001e530:	sar    eax,0x8
   14001e533:	add    rbx,0x8
   14001e537:	mov    BYTE PTR [r11-0x2],al
   14001e53b:	mov    DWORD PTR [rbx-0x8],r14d
   14001e53f:	mov    BYTE PTR [r11-0x1],r10b
   14001e543:	mov    DWORD PTR [rbx-0x4],r14d
   14001e547:	sub    ebp,ecx
   14001e549:	mov    edx,0x40
   14001e54e:	lea    r8,[rip+0x2ce23]        # 0x14004b378
   14001e555:	jmp    0x14001e336
   14001e55a:	neg    edi
   14001e55c:	jmp    0x14001e601
   14001e561:	mov    r9,QWORD PTR [rsp+0x70]
   14001e566:	sub    ecx,ebp
   14001e568:	mov    r8d,ecx
   14001e56b:	lea    rdx,[r9+0x68]
   14001e56f:	sub    r8d,0x1
   14001e573:	je     0x14001e596
   14001e575:	sub    r8d,0x1
   14001e579:	je     0x14001e58a
   14001e57b:	cmp    r8d,0x1
   14001e57f:	jne    0x14001e599
   14001e581:	sar    eax,0x10
   14001e584:	inc    rdx
   14001e587:	mov    BYTE PTR [rdx-0x1],al
   14001e58a:	mov    eax,r10d
   14001e58d:	sar    eax,0x8
   14001e590:	inc    rdx
   14001e593:	mov    BYTE PTR [rdx-0x1],al
   14001e596:	mov    BYTE PTR [rdx],r10b
   14001e599:	mov    BYTE PTR [r9+0x5b],cl
   14001e59d:	shl    ecx,0x3
   14001e5a0:	sar    r10d,cl
   14001e5a3:	sub    ebp,0x1
   14001e5a6:	je     0x14001e5dc
   14001e5a8:	sub    ebp,0x1
   14001e5ab:	je     0x14001e5c7
   14001e5ad:	cmp    ebp,0x1
   14001e5b0:	jne    0x14001e5e9
   14001e5b2:	mov    eax,r10d
   14001e5b5:	inc    r11
   14001e5b8:	sar    eax,0x10
   14001e5bb:	add    rbx,0x4
   14001e5bf:	mov    BYTE PTR [r11-0x1],al
   14001e5c3:	mov    DWORD PTR [rbx-0x4],r14d
   14001e5c7:	mov    eax,r10d
   14001e5ca:	inc    r11
   14001e5cd:	sar    eax,0x8
   14001e5d0:	add    rbx,0x4
   14001e5d4:	mov    BYTE PTR [r11-0x1],al
   14001e5d8:	mov    DWORD PTR [rbx-0x4],r14d
   14001e5dc:	mov    BYTE PTR [r11],r10b
   14001e5df:	inc    r11
   14001e5e2:	mov    DWORD PTR [rbx],r14d
   14001e5e5:	add    rbx,0x4
   14001e5e9:	mov    rax,QWORD PTR [rsp+0x68]
   14001e5ee:	mov    DWORD PTR [rax],0xf
   14001e5f4:	jmp    0x14001e606
   14001e5f6:	mov    rax,QWORD PTR [rsp+0x68]
   14001e5fb:	mov    DWORD PTR [rax],0xf
   14001e601:	mov    r9,QWORD PTR [rsp+0x70]
   14001e606:	test   edi,edi
   14001e608:	jns    0x14001e60e
   14001e60a:	neg    edi
   14001e60c:	jmp    0x14001e610
   14001e60e:	xor    edi,edi
   14001e610:	mov    rax,QWORD PTR [rsp+0x60]
   14001e615:	mov    DWORD PTR [r9+0x54],edi
   14001e619:	mov    DWORD PTR [r9+0x50],esi
   14001e61d:	mov    QWORD PTR [rax+0x30],rbx
   14001e621:	mov    rbx,QWORD PTR [rsp+0x78]
   14001e626:	mov    QWORD PTR [rax+0x10],r13
   14001e62a:	mov    QWORD PTR [rax+0x20],r11
   14001e62e:	add    rsp,0x20
   14001e632:	pop    r15
   14001e634:	pop    r14
   14001e636:	pop    r13
   14001e638:	pop    r12
   14001e63a:	pop    rdi
   14001e63b:	pop    rsi
   14001e63c:	pop    rbp
   14001e63d:	ret    
   14001e63e:	int3   
   14001e63f:	int3   
   14001e640:	mov    QWORD PTR [rsp+0x8],rbx
   14001e645:	mov    QWORD PTR [rsp+0x10],rbp
   14001e64a:	mov    QWORD PTR [rsp+0x18],rsi
   14001e64f:	push   rdi
   14001e650:	push   r12
   14001e652:	push   r13
   14001e654:	push   r14
   14001e656:	push   r15
   14001e658:	sub    rsp,0x20
   14001e65c:	mov    r14,QWORD PTR [rcx+0x8]
   14001e660:	mov    r11,QWORD PTR [rcx+0x20]
   14001e664:	mov    esi,DWORD PTR [rcx+0x28]
   14001e667:	mov    edi,DWORD PTR [r14+0x50]
   14001e66b:	mov    ebx,DWORD PTR [r14+0x54]
   14001e66f:	mov    rbp,QWORD PTR [rcx+0x10]
   14001e673:	mov    r12,QWORD PTR [rcx+0x18]
   14001e677:	sub    esi,r11d
   14001e67a:	test   edi,edi
   14001e67c:	mov    r13,rcx
   14001e67f:	mov    ecx,0x40
   14001e684:	mov    r15,rdx
   14001e687:	cmove  edi,ecx
   14001e68a:	lea    r8,[rip+0x2cce7]        # 0x14004b378
   14001e691:	test   ebx,ebx
   14001e693:	je     0x14001e69d
   14001e695:	test   esi,esi
   14001e697:	jg     0x14001e73a
   14001e69d:	mov    rax,r12
   14001e6a0:	sub    rax,rbp
   14001e6a3:	sar    rax,1
   14001e6a6:	cmp    esi,eax
   14001e6a8:	cmovg  esi,eax
   14001e6ab:	test   esi,esi
   14001e6ad:	jle    0x14001e6fa
   14001e6af:	nop
   14001e6b0:	movzx  ebx,WORD PTR [rbp+0x0]
   14001e6b4:	cmp    ebx,0x3000
   14001e6ba:	jge    0x14001e6f5
   14001e6bc:	cmp    ebx,0x20
   14001e6bf:	jg     0x14001e6c9
   14001e6c1:	cmovne edi,ecx
   14001e6c4:	mov    BYTE PTR [r11],bl
   14001e6c7:	jmp    0x14001e6e8
   14001e6c9:	mov    ecx,ebx
   14001e6cb:	sub    ecx,edi
   14001e6cd:	lea    eax,[rcx+0x40]
   14001e6d0:	cmp    eax,0x7f
   14001e6d3:	ja     0x14001e6f5
   14001e6d5:	mov    edi,ebx
   14001e6d7:	and    edi,0xffffff80
   14001e6da:	add    edi,0x40
   14001e6dd:	sub    cl,0x70
   14001e6e0:	mov    BYTE PTR [r11],cl
   14001e6e3:	mov    ecx,0x40
   14001e6e8:	dec    esi
   14001e6ea:	inc    r11
   14001e6ed:	add    rbp,0x2
   14001e6f1:	test   esi,esi
   14001e6f3:	jg     0x14001e6b0
   14001e6f5:	mov    ecx,0x40
   14001e6fa:	mov    esi,DWORD PTR [r13+0x28]
   14001e6fe:	sub    esi,r11d
   14001e701:	cmp    rbp,r12
   14001e704:	jae    0x14001e946
   14001e70a:	test   esi,esi
   14001e70c:	jle    0x14001e93f
   14001e712:	movzx  ebx,WORD PTR [rbp+0x0]
   14001e716:	add    rbp,0x2
   14001e71a:	cmp    ebx,0x20
   14001e71d:	jg     0x14001e72c
   14001e71f:	cmovne edi,ecx
   14001e722:	mov    BYTE PTR [r11],bl
   14001e725:	inc    r11
   14001e728:	dec    esi
   14001e72a:	jmp    0x14001e701
   14001e72c:	mov    eax,ebx
   14001e72e:	and    eax,0xfffffc00
   14001e733:	cmp    eax,0xd800
   14001e738:	jne    0x14001e764
   14001e73a:	cmp    rbp,r12
   14001e73d:	jae    0x14001e8cf
   14001e743:	movzx  ecx,WORD PTR [rbp+0x0]
   14001e747:	mov    eax,ecx
   14001e749:	and    eax,0xfffffc00
   14001e74e:	cmp    eax,0xdc00
   14001e753:	jne    0x14001e764
   14001e755:	add    ebx,0xffff2809
   14001e75b:	add    rbp,0x2
   14001e75f:	shl    ebx,0xa
   14001e762:	add    ebx,ecx
   14001e764:	lea    eax,[rbx-0x3040]
   14001e76a:	mov    ecx,ebx
   14001e76c:	sub    ecx,edi
   14001e76e:	cmp    eax,0xa763
   14001e773:	ja     0x14001e7a7
   14001e775:	cmp    ebx,0x309f
   14001e77b:	jg     0x14001e784
   14001e77d:	mov    edi,0x3070
   14001e782:	jmp    0x14001e7af
   14001e784:	lea    eax,[rbx-0x4e00]
   14001e78a:	cmp    eax,0x51a5
   14001e78f:	ja     0x14001e798
   14001e791:	mov    edi,0x7711
   14001e796:	jmp    0x14001e7af
   14001e798:	cmp    ebx,0xac00
   14001e79e:	jl     0x14001e7a7
   14001e7a0:	mov    edi,0xc1d1
   14001e7a5:	jmp    0x14001e7af
   14001e7a7:	mov    edi,ebx
   14001e7a9:	and    edi,0xffffff80
   14001e7ac:	add    edi,0x40
   14001e7af:	lea    edx,[rcx+0x40]
   14001e7b2:	cmp    edx,0x7f
   14001e7b5:	ja     0x14001e7d9
   14001e7b7:	sub    cl,0x70
   14001e7ba:	inc    r11
   14001e7bd:	dec    esi
   14001e7bf:	cmp    ebx,0x3000
   14001e7c5:	mov    BYTE PTR [r11-0x1],cl
   14001e7c9:	mov    ecx,0x40
   14001e7ce:	jl     0x14001e69d
   14001e7d4:	jmp    0x14001e701
   14001e7d9:	lea    eax,[rcx+0x2911]
   14001e7df:	cmp    eax,0x5221
   14001e7e4:	ja     0x14001e86c
   14001e7ea:	cmp    esi,0x2
   14001e7ed:	jl     0x14001e86c
   14001e7ef:	mov    eax,0x86d90545
   14001e7f4:	test   ecx,ecx
   14001e7f6:	js     0x14001e81b
   14001e7f8:	sub    ecx,0x40
   14001e7fb:	imul   ecx
   14001e7fd:	add    edx,ecx
   14001e7ff:	sar    edx,0x7
   14001e802:	mov    eax,edx
   14001e804:	shr    eax,0x1f
   14001e807:	add    edx,eax
   14001e809:	mov    eax,edx
   14001e80b:	imul   eax,eax,0xf3
   14001e811:	sub    ecx,eax
   14001e813:	add    edx,0xd0
   14001e819:	jmp    0x14001e842
   14001e81b:	mov    ecx,edx
   14001e81d:	imul   edx
   14001e81f:	add    edx,ecx
   14001e821:	sar    edx,0x7
   14001e824:	mov    eax,edx
   14001e826:	shr    eax,0x1f
   14001e829:	add    edx,eax
   14001e82b:	mov    eax,edx
   14001e82d:	imul   eax,eax,0xf3
   14001e833:	sub    ecx,eax
   14001e835:	jns    0x14001e83f
   14001e837:	dec    edx
   14001e839:	add    ecx,0xf3
   14001e83f:	add    edx,0x50
   14001e842:	cmp    ecx,0x14
   14001e845:	mov    BYTE PTR [r11],dl
   14001e848:	jl     0x14001e84f
   14001e84a:	add    ecx,0xd
   14001e84d:	jmp    0x14001e857
   14001e84f:	movsxd rax,ecx
   14001e852:	movsx  ecx,BYTE PTR [rax+r8*1]
   14001e857:	mov    BYTE PTR [r11+0x1],cl
   14001e85b:	add    r11,0x2
   14001e85f:	sub    esi,0x2
   14001e862:	mov    ecx,0x40
   14001e867:	jmp    0x14001e701
   14001e86c:	call   0x14001dee0
   14001e871:	mov    r10d,eax
   14001e874:	cmp    eax,0x4000000
   14001e879:	jae    0x14001e882
   14001e87b:	mov    ecx,eax
   14001e87d:	sar    ecx,0x18
   14001e880:	jmp    0x14001e887
   14001e882:	mov    ecx,0x4
   14001e887:	cmp    ecx,esi
   14001e889:	jg     0x14001e8d3
   14001e88b:	mov    edx,ecx
   14001e88d:	sub    edx,0x3
   14001e890:	je     0x14001e8a1
   14001e892:	cmp    edx,0x1
   14001e895:	jne    0x14001e8bc
   14001e897:	sar    eax,0x18
   14001e89a:	inc    r11
   14001e89d:	mov    BYTE PTR [r11-0x1],al
   14001e8a1:	mov    eax,r10d
   14001e8a4:	sar    eax,0x10
   14001e8a7:	mov    BYTE PTR [r11],al
   14001e8aa:	mov    eax,r10d
   14001e8ad:	sar    eax,0x8
   14001e8b0:	add    r11,0x3
   14001e8b4:	mov    BYTE PTR [r11-0x2],al
   14001e8b8:	mov    BYTE PTR [r11-0x1],r10b
   14001e8bc:	sub    esi,ecx
   14001e8be:	lea    r8,[rip+0x2cab3]        # 0x14004b378
   14001e8c5:	mov    ecx,0x40
   14001e8ca:	jmp    0x14001e701
   14001e8cf:	neg    ebx
   14001e8d1:	jmp    0x14001e946
   14001e8d3:	sub    ecx,esi
   14001e8d5:	lea    rdx,[r14+0x68]
   14001e8d9:	mov    r8d,ecx
   14001e8dc:	sub    r8d,0x1
   14001e8e0:	je     0x14001e903
   14001e8e2:	sub    r8d,0x1
   14001e8e6:	je     0x14001e8f7
   14001e8e8:	cmp    r8d,0x1
   14001e8ec:	jne    0x14001e906
   14001e8ee:	sar    eax,0x10
   14001e8f1:	inc    rdx
   14001e8f4:	mov    BYTE PTR [rdx-0x1],al
   14001e8f7:	mov    eax,r10d
   14001e8fa:	sar    eax,0x8
   14001e8fd:	inc    rdx
   14001e900:	mov    BYTE PTR [rdx-0x1],al
   14001e903:	mov    BYTE PTR [rdx],r10b
   14001e906:	mov    BYTE PTR [r14+0x5b],cl
   14001e90a:	shl    ecx,0x3
   14001e90d:	sar    r10d,cl
   14001e910:	sub    esi,0x1
   14001e913:	je     0x14001e939
   14001e915:	sub    esi,0x1
   14001e918:	je     0x14001e92c
   14001e91a:	cmp    esi,0x1
   14001e91d:	jne    0x14001e93f
   14001e91f:	mov    eax,r10d
   14001e922:	sar    eax,0x10
   14001e925:	inc    r11
   14001e928:	mov    BYTE PTR [r11-0x1],al
   14001e92c:	mov    eax,r10d
   14001e92f:	sar    eax,0x8
   14001e932:	inc    r11
   14001e935:	mov    BYTE PTR [r11-0x1],al
   14001e939:	mov    BYTE PTR [r11],r10b
   14001e93c:	inc    r11
   14001e93f:	mov    DWORD PTR [r15],0xf
   14001e946:	test   ebx,ebx
   14001e948:	jns    0x14001e94e
   14001e94a:	neg    ebx
   14001e94c:	jmp    0x14001e950
   14001e94e:	xor    ebx,ebx
   14001e950:	mov    rsi,QWORD PTR [rsp+0x60]
   14001e955:	mov    DWORD PTR [r14+0x54],ebx
   14001e959:	mov    rbx,QWORD PTR [rsp+0x50]
   14001e95e:	mov    DWORD PTR [r14+0x50],edi
   14001e962:	mov    QWORD PTR [r13+0x10],rbp
   14001e966:	mov    rbp,QWORD PTR [rsp+0x58]
   14001e96b:	mov    QWORD PTR [r13+0x20],r11
   14001e96f:	add    rsp,0x20
   14001e973:	pop    r15
   14001e975:	pop    r14
   14001e977:	pop    r13
   14001e979:	pop    r12
   14001e97b:	pop    rdi
   14001e97c:	ret    
   14001e97d:	int3   
   14001e97e:	int3   
   14001e97f:	int3   
   14001e980:	cmp    ecx,0x50
   14001e983:	jl     0x14001e9df
   14001e985:	cmp    ecx,0xfb
   14001e98b:	jge    0x14001e9a8
   14001e98d:	imul   ecx,ecx,0xf3
   14001e993:	mov    edx,0x1
   14001e998:	sub    ecx,0xc530
   14001e99e:	lea    eax,[rcx*4+0x0]
   14001e9a5:	or     eax,edx
   14001e9a7:	ret    
   14001e9a8:	cmp    ecx,0xfe
   14001e9ae:	jge    0x14001e9cb
   14001e9b0:	imul   ecx,ecx,0xe6a9
   14001e9b6:	mov    edx,0x2
   14001e9bb:	sub    ecx,0xe1fea2
   14001e9c1:	lea    eax,[rcx*4+0x0]
   14001e9c8:	or     eax,edx
   14001e9ca:	ret    
   14001e9cb:	mov    ecx,0x2dd0c
   14001e9d0:	mov    edx,0x3
   14001e9d5:	lea    eax,[rcx*4+0x0]
   14001e9dc:	or     eax,edx
   14001e9de:	ret    
   14001e9df:	cmp    ecx,0x25
   14001e9e2:	jl     0x14001e9ff
   14001e9e4:	imul   ecx,ecx,0xf3
   14001e9ea:	mov    edx,0x1
   14001e9ef:	sub    ecx,0x4c30
   14001e9f5:	lea    eax,[rcx*4+0x0]
   14001e9fc:	or     eax,edx
   14001e9fe:	ret    
   14001e9ff:	cmp    ecx,0x21
   14001ea02:	jle    0x14001ea1f
   14001ea04:	imul   ecx,ecx,0xe6a9
   14001ea0a:	mov    edx,0x2
   14001ea0f:	sub    ecx,0x217f7e
   14001ea15:	lea    eax,[rcx*4+0x0]
   14001ea1c:	or     eax,edx
   14001ea1e:	ret    
   14001ea1f:	mov    ecx,0xff223089
   14001ea24:	mov    edx,0x3
   14001ea29:	lea    eax,[rcx*4+0x0]
   14001ea30:	or     eax,edx
   14001ea32:	ret    
   14001ea33:	int3   
   14001ea34:	int3   
   14001ea35:	int3   
   14001ea36:	int3   
   14001ea37:	int3   
   14001ea38:	int3   
   14001ea39:	int3   
   14001ea3a:	int3   
   14001ea3b:	int3   
   14001ea3c:	int3   
   14001ea3d:	int3   
   14001ea3e:	int3   
   14001ea3f:	int3   
   14001ea40:	mov    QWORD PTR [rsp+0x18],rbx
   14001ea45:	mov    QWORD PTR [rsp+0x8],rcx
   14001ea4a:	push   rbp
   14001ea4b:	push   rsi
   14001ea4c:	push   rdi
   14001ea4d:	push   r12
   14001ea4f:	push   r13
   14001ea51:	push   r14
   14001ea53:	push   r15
   14001ea55:	sub    rsp,0x20
   14001ea59:	mov    r13,QWORD PTR [rcx+0x8]
   14001ea5d:	mov    r9,QWORD PTR [rcx+0x10]
   14001ea61:	mov    r12,QWORD PTR [rcx+0x18]
   14001ea65:	mov    r8d,DWORD PTR [r13+0x48]
   14001ea69:	mov    r10d,DWORD PTR [r13+0x4c]
   14001ea6d:	movzx  esi,BYTE PTR [r13+0x40]
   14001ea72:	mov    rbx,QWORD PTR [rcx+0x20]
   14001ea76:	mov    r14,QWORD PTR [rcx+0x28]
   14001ea7a:	mov    rdi,QWORD PTR [rcx+0x30]
   14001ea7e:	test   r8d,r8d
   14001ea81:	mov    eax,0x40
   14001ea86:	mov    r15,rdx
   14001ea89:	cmove  r8d,eax
   14001ea8d:	mov    edx,r10d
   14001ea90:	sar    r10d,0x2
   14001ea94:	and    edx,0x3
   14001ea97:	movzx  eax,sil
   14001ea9b:	mov    DWORD PTR [rsp+0x68],0x2840
   14001eaa3:	neg    al
   14001eaa5:	sbb    ebp,ebp
   14001eaa7:	xor    r11d,r11d
   14001eaaa:	test   edx,edx
   14001eaac:	jle    0x14001eabc
   14001eaae:	test   sil,sil
   14001eab1:	jle    0x14001eabc
   14001eab3:	cmp    rbx,r14
   14001eab6:	jb     0x14001ec70
   14001eabc:	mov    rdx,QWORD PTR [rcx+0x28]
   14001eac0:	mov    r10d,r12d
   14001eac3:	sub    rdx,rbx
   14001eac6:	sub    r10d,r9d
   14001eac9:	sar    rdx,1
   14001eacc:	cmp    edx,r10d
   14001eacf:	cmovg  edx,r10d
   14001ead3:	test   edx,edx
   14001ead5:	jle    0x14001eb3b
   14001ead7:	mov    ebp,0x40
   14001eadc:	nop    DWORD PTR [rax+0x0]
   14001eae0:	movzx  ecx,BYTE PTR [r9]
   14001eae4:	lea    eax,[rcx-0x50]
   14001eae7:	cmp    eax,0x7f
   14001eaea:	ja     0x14001eb18
   14001eaec:	lea    eax,[rcx+r8*1-0x90]
   14001eaf4:	cmp    eax,0x3000
   14001eaf9:	jge    0x14001eb3b
   14001eafb:	mov    WORD PTR [rbx],ax
   14001eafe:	mov    DWORD PTR [rdi],r11d
   14001eb01:	mov    r8d,eax
   14001eb04:	and    r8d,0xffffff80
   14001eb08:	add    rbx,0x2
   14001eb0c:	add    rdi,0x4
   14001eb10:	inc    r11d
   14001eb13:	add    r8d,ebp
   14001eb16:	jmp    0x14001eb32
   14001eb18:	cmp    ecx,0x20
   14001eb1b:	jg     0x14001eb3b
   14001eb1d:	cmovne r8d,ebp
   14001eb21:	mov    WORD PTR [rbx],cx
   14001eb24:	mov    DWORD PTR [rdi],r11d
   14001eb27:	add    rdi,0x4
   14001eb2b:	add    rbx,0x2
   14001eb2f:	inc    r11d
   14001eb32:	dec    edx
   14001eb34:	inc    r9
   14001eb37:	test   edx,edx
   14001eb39:	jg     0x14001eae0
   14001eb3b:	mov    ebp,r11d
   14001eb3e:	cmp    r9,r12
   14001eb41:	jae    0x14001ede0
   14001eb47:	cmp    rbx,r14
   14001eb4a:	jae    0x14001ed9d
   14001eb50:	movzx  ecx,BYTE PTR [r9]
   14001eb54:	inc    r11d
   14001eb57:	inc    r9
   14001eb5a:	lea    eax,[rcx-0x50]
   14001eb5d:	cmp    eax,0x7f
   14001eb60:	ja     0x14001eb98
   14001eb62:	lea    ecx,[rcx+r8*1-0x90]
   14001eb6a:	cmp    ecx,0x3000
   14001eb70:	jge    0x14001ece2
   14001eb76:	mov    WORD PTR [rbx],cx
   14001eb79:	mov    r8d,ecx
   14001eb7c:	mov    rcx,QWORD PTR [rsp+0x60]
   14001eb81:	and    r8d,0xffffff80
   14001eb85:	mov    DWORD PTR [rdi],ebp
   14001eb87:	add    rbx,0x2
   14001eb8b:	add    rdi,0x4
   14001eb8f:	add    r8d,0x40
   14001eb93:	jmp    0x14001eabc
   14001eb98:	cmp    ecx,0x20
   14001eb9b:	jg     0x14001ebb5
   14001eb9d:	mov    WORD PTR [rbx],cx
   14001eba0:	mov    eax,0x40
   14001eba5:	mov    DWORD PTR [rdi],ebp
   14001eba7:	cmovne r8d,eax
   14001ebab:	add    rbx,0x2
   14001ebaf:	add    rdi,0x4
   14001ebb3:	jmp    0x14001eb3b
   14001ebb5:	lea    eax,[rcx-0x25]
   14001ebb8:	cmp    eax,0xd5
   14001ebbd:	ja     0x14001ec3d
   14001ebbf:	cmp    r9,r12
   14001ebc2:	jae    0x14001ec3d
   14001ebc4:	mov    r10d,ecx
   14001ebc7:	imul   r10d,r10d,0xf3
   14001ebce:	cmp    ecx,0x90
   14001ebd4:	jl     0x14001ebdf
   14001ebd6:	sub    r10d,0xc530
   14001ebdd:	jmp    0x14001ebe6
   14001ebdf:	sub    r10d,0x4c30
   14001ebe6:	movzx  eax,BYTE PTR [r9]
   14001ebea:	inc    r11d
   14001ebed:	cmp    eax,0x20
   14001ebf0:	jg     0x14001ebff
   14001ebf2:	lea    rcx,[rip+0x2c757]        # 0x14004b350
   14001ebf9:	movsx  eax,BYTE PTR [rax+rcx*1]
   14001ebfd:	jmp    0x14001ec02
   14001ebff:	sub    eax,0xd
   14001ec02:	inc    r9
   14001ec05:	test   eax,eax
   14001ec07:	js     0x14001ec1c
   14001ec09:	lea    ecx,[rax+r10*1]
   14001ec0d:	add    ecx,r8d
   14001ec10:	cmp    ecx,0x10ffff
   14001ec16:	jbe    0x14001ece2
   14001ec1c:	movzx  eax,BYTE PTR [r9-0x2]
   14001ec21:	mov    sil,0x2
   14001ec24:	mov    BYTE PTR [r13+0x41],al
   14001ec28:	movzx  eax,BYTE PTR [r9-0x1]
   14001ec2d:	mov    BYTE PTR [r13+0x42],al
   14001ec31:	mov    DWORD PTR [r15],0xc
   14001ec38:	jmp    0x14001ede6
   14001ec3d:	cmp    ecx,0xff
   14001ec43:	jne    0x14001ec50
   14001ec45:	mov    r8d,0x40
   14001ec4b:	jmp    0x14001eb3b
   14001ec50:	mov    BYTE PTR [r13+0x41],cl
   14001ec54:	mov    sil,0x1
   14001ec57:	call   0x14001e980
   14001ec5c:	mov    edx,eax
   14001ec5e:	mov    r10d,eax
   14001ec61:	and    edx,0x3
   14001ec64:	sar    r10d,0x2
   14001ec68:	nop    DWORD PTR [rax+rax*1+0x0]
   14001ec70:	cmp    r9,r12
   14001ec73:	jae    0x14001ede0
   14001ec79:	movzx  ecx,BYTE PTR [r9]
   14001ec7d:	movsx  rax,sil
   14001ec81:	inc    r11d
   14001ec84:	inc    sil
   14001ec87:	inc    r9
   14001ec8a:	cmp    ecx,0x20
   14001ec8d:	mov    BYTE PTR [rax+r13*1+0x41],cl
   14001ec92:	jg     0x14001eca4
   14001ec94:	mov    rax,rcx
   14001ec97:	lea    rcx,[rip+0x2c6b2]        # 0x14004b350
   14001ec9e:	movsx  ecx,BYTE PTR [rax+rcx*1]
   14001eca2:	jmp    0x14001eca7
   14001eca4:	add    ecx,0xfffffff3
   14001eca7:	cmp    edx,0x1
   14001ecaa:	je     0x14001ecbf
   14001ecac:	cmp    edx,0x2
   14001ecaf:	jne    0x14001ecb9
   14001ecb1:	imul   ecx,ecx,0xf3
   14001ecb7:	jmp    0x14001ecbf
   14001ecb9:	imul   ecx,ecx,0xe6a9
   14001ecbf:	test   ecx,ecx
   14001ecc1:	js     0x14001ec31
   14001ecc7:	add    r10d,ecx
   14001ecca:	sub    edx,0x1
   14001eccd:	jne    0x14001ec70
   14001eccf:	lea    ecx,[r10+r8*1]
   14001ecd3:	xor    sil,sil
   14001ecd6:	cmp    ecx,0x10ffff
   14001ecdc:	ja     0x14001ec31
   14001ece2:	lea    eax,[rcx-0x3040]
   14001ece8:	cmp    eax,0xa763
   14001eced:	ja     0x14001ed24
   14001ecef:	cmp    ecx,0x309f
   14001ecf5:	jg     0x14001ecff
   14001ecf7:	mov    r8d,0x3070
   14001ecfd:	jmp    0x14001ed2f
   14001ecff:	lea    eax,[rcx-0x4e00]
   14001ed05:	cmp    eax,0x51a5
   14001ed0a:	ja     0x14001ed14
   14001ed0c:	mov    r8d,0x7711
   14001ed12:	jmp    0x14001ed2f
   14001ed14:	cmp    ecx,0xac00
   14001ed1a:	jl     0x14001ed24
   14001ed1c:	mov    r8d,0xc1d1
   14001ed22:	jmp    0x14001ed2f
   14001ed24:	mov    r8d,ecx
   14001ed27:	and    r8d,0xffffff80
   14001ed2b:	add    r8d,0x40
   14001ed2f:	cmp    ecx,0xffff
   14001ed35:	jg     0x14001ed49
   14001ed37:	mov    WORD PTR [rbx],cx
   14001ed3a:	add    rbx,0x2
   14001ed3e:	mov    DWORD PTR [rdi],ebp
   14001ed40:	add    rdi,0x4
   14001ed44:	jmp    0x14001eb3b
   14001ed49:	mov    eax,ecx
   14001ed4b:	add    rbx,0x2
   14001ed4f:	sar    eax,0xa
   14001ed52:	sub    ax,WORD PTR [rsp+0x68]
   14001ed57:	mov    WORD PTR [rbx-0x2],ax
   14001ed5b:	mov    eax,0x3ff
   14001ed60:	and    cx,ax
   14001ed63:	mov    eax,0xdc00
   14001ed68:	cmp    rbx,r14
   14001ed6b:	jae    0x14001ed87
   14001ed6d:	or     cx,ax
   14001ed70:	add    rbx,0x2
   14001ed74:	add    rdi,0x8
   14001ed78:	mov    WORD PTR [rbx-0x2],cx
   14001ed7c:	mov    DWORD PTR [rdi-0x8],ebp
   14001ed7f:	mov    DWORD PTR [rdi-0x4],ebp
   14001ed82:	jmp    0x14001eb3b
   14001ed87:	mov    DWORD PTR [rdi],ebp
   14001ed89:	add    rdi,0x4
   14001ed8d:	or     cx,ax
   14001ed90:	mov    WORD PTR [r13+0x90],cx
   14001ed98:	mov    BYTE PTR [r13+0x5d],0x1
   14001ed9d:	mov    DWORD PTR [r15],0xf
   14001eda4:	lea    eax,[r10*4+0x0]
   14001edac:	mov    DWORD PTR [r13+0x48],r8d
   14001edb0:	or     eax,edx
   14001edb2:	mov    DWORD PTR [r13+0x4c],eax
   14001edb6:	mov    rax,QWORD PTR [rsp+0x60]
   14001edbb:	mov    BYTE PTR [r13+0x40],sil
   14001edbf:	mov    QWORD PTR [rax+0x20],rbx
   14001edc3:	mov    rbx,QWORD PTR [rsp+0x70]
   14001edc8:	mov    QWORD PTR [rax+0x10],r9
   14001edcc:	mov    QWORD PTR [rax+0x30],rdi
   14001edd0:	add    rsp,0x20
   14001edd4:	pop    r15
   14001edd6:	pop    r14
   14001edd8:	pop    r13
   14001edda:	pop    r12
   14001eddc:	pop    rdi
   14001eddd:	pop    rsi
   14001edde:	pop    rbp
   14001eddf:	ret    
   14001ede0:	cmp    DWORD PTR [r15],0xc
   14001ede4:	jne    0x14001eda4
   14001ede6:	mov    eax,0x40
   14001edeb:	mov    DWORD PTR [r13+0x4c],0x0
   14001edf3:	mov    DWORD PTR [r13+0x48],eax
   14001edf7:	jmp    0x14001edb6
   14001edf9:	int3   
   14001edfa:	int3   
   14001edfb:	int3   
   14001edfc:	int3   
   14001edfd:	int3   
   14001edfe:	int3   
   14001edff:	int3   
   14001ee00:	mov    QWORD PTR [rsp+0x10],rbx
   14001ee05:	mov    QWORD PTR [rsp+0x18],rbp
   14001ee0a:	mov    QWORD PTR [rsp+0x20],rsi
   14001ee0f:	push   rdi
   14001ee10:	push   r12
   14001ee12:	push   r13
   14001ee14:	push   r14
   14001ee16:	push   r15
   14001ee18:	sub    rsp,0x20
   14001ee1c:	mov    rbp,QWORD PTR [rcx+0x8]
   14001ee20:	mov    r9,QWORD PTR [rcx+0x10]
   14001ee24:	mov    rsi,QWORD PTR [rcx+0x18]
   14001ee28:	mov    r8d,DWORD PTR [rbp+0x48]
   14001ee2c:	mov    r11d,DWORD PTR [rbp+0x4c]
   14001ee30:	mov    rbx,QWORD PTR [rcx+0x20]
   14001ee34:	mov    r12,QWORD PTR [rcx+0x28]
   14001ee38:	movzx  edi,BYTE PTR [rbp+0x40]
   14001ee3c:	test   r8d,r8d
   14001ee3f:	mov    r10d,r11d
   14001ee42:	mov    r13,rdx
   14001ee45:	mov    edx,0x40
   14001ee4a:	cmove  r8d,edx
   14001ee4e:	and    r10d,0x3
   14001ee52:	sar    r11d,0x2
   14001ee56:	mov    r14,rcx
   14001ee59:	lea    r15,[rip+0x2c4f0]        # 0x14004b350
   14001ee60:	mov    DWORD PTR [rsp+0x50],0x2840
   14001ee68:	test   r10d,r10d
   14001ee6b:	jle    0x14001ee7b
   14001ee6d:	test   dil,dil
   14001ee70:	jle    0x14001ee7b
   14001ee72:	cmp    rbx,r12
   14001ee75:	jb     0x14001f000
   14001ee7b:	mov    r10,QWORD PTR [r14+0x28]
   14001ee7f:	mov    r11d,esi
   14001ee82:	sub    r10,rbx
   14001ee85:	sub    r11d,r9d
   14001ee88:	sar    r10,1
   14001ee8b:	cmp    r10d,r11d
   14001ee8e:	cmovg  r10d,r11d
   14001ee92:	test   r10d,r10d
   14001ee95:	jle    0x14001eeeb
   14001ee97:	movzx  ecx,BYTE PTR [r9]
   14001ee9b:	lea    eax,[rcx-0x50]
   14001ee9e:	cmp    eax,0x7f
   14001eea1:	ja     0x14001eecc
   14001eea3:	lea    eax,[rcx+r8*1-0x90]
   14001eeab:	cmp    eax,0x3000
   14001eeb0:	jge    0x14001eeeb
   14001eeb2:	mov    r8d,eax
   14001eeb5:	mov    WORD PTR [rbx],ax
   14001eeb8:	add    rbx,0x2
   14001eebc:	and    r8d,0xffffff80
   14001eec0:	inc    r9
   14001eec3:	add    r8d,0x40
   14001eec7:	dec    r10d
   14001eeca:	jmp    0x14001ee92
   14001eecc:	cmp    ecx,0x20
   14001eecf:	jg     0x14001eeeb
   14001eed1:	cmovne r8d,edx
   14001eed5:	mov    WORD PTR [rbx],cx
   14001eed8:	add    rbx,0x2
   14001eedc:	inc    r9
   14001eedf:	dec    r10d
   14001eee2:	jmp    0x14001ee92
   14001eee4:	mov    WORD PTR [rbx],cx
   14001eee7:	add    rbx,0x2
   14001eeeb:	cmp    r9,rsi
   14001eeee:	jae    0x14001f141
   14001eef4:	cmp    rbx,r12
   14001eef7:	jae    0x14001f0fe
   14001eefd:	movzx  ecx,BYTE PTR [r9]
   14001ef01:	inc    r9
   14001ef04:	lea    eax,[rcx-0x50]
   14001ef07:	cmp    eax,0x7f
   14001ef0a:	ja     0x14001ef37
   14001ef0c:	lea    ecx,[rcx+r8*1-0x90]
   14001ef14:	cmp    ecx,0x3000
   14001ef1a:	jge    0x14001f06f
   14001ef20:	mov    r8d,ecx
   14001ef23:	mov    WORD PTR [rbx],cx
   14001ef26:	add    rbx,0x2
   14001ef2a:	and    r8d,0xffffff80
   14001ef2e:	add    r8d,0x40
   14001ef32:	jmp    0x14001ee7b
   14001ef37:	cmp    ecx,0x20
   14001ef3a:	jg     0x14001ef42
   14001ef3c:	cmovne r8d,edx
   14001ef40:	jmp    0x14001eee4
   14001ef42:	lea    eax,[rcx-0x25]
   14001ef45:	cmp    eax,0xd5
   14001ef4a:	ja     0x14001efd2
   14001ef50:	cmp    r9,rsi
   14001ef53:	jae    0x14001efd2
   14001ef55:	mov    r11d,ecx
   14001ef58:	imul   r11d,r11d,0xf3
   14001ef5f:	cmp    ecx,0x90
   14001ef65:	jl     0x14001ef70
   14001ef67:	sub    r11d,0xc530
   14001ef6e:	jmp    0x14001ef77
   14001ef70:	sub    r11d,0x4c30
   14001ef77:	movzx  eax,BYTE PTR [r9]
   14001ef7b:	cmp    eax,0x20
   14001ef7e:	jg     0x14001ef87
   14001ef80:	movsx  eax,BYTE PTR [rax+r15*1]
   14001ef85:	jmp    0x14001ef8a
   14001ef87:	sub    eax,0xd
   14001ef8a:	inc    r9
   14001ef8d:	test   eax,eax
   14001ef8f:	js     0x14001efa4
   14001ef91:	lea    ecx,[rax+r11*1]
   14001ef95:	add    ecx,r8d
   14001ef98:	cmp    ecx,0x10ffff
   14001ef9e:	jbe    0x14001f06f
   14001efa4:	movzx  eax,BYTE PTR [r9-0x2]
   14001efa9:	mov    dil,0x2
   14001efac:	mov    BYTE PTR [rbp+0x41],al
   14001efaf:	movzx  eax,BYTE PTR [r9-0x1]
   14001efb4:	mov    BYTE PTR [rbp+0x42],al
   14001efb7:	mov    DWORD PTR [r13+0x0],0xc
   14001efbf:	mov    DWORD PTR [rbp+0x48],0x40
   14001efc6:	mov    DWORD PTR [rbp+0x4c],0x0
   14001efcd:	jmp    0x14001f118
   14001efd2:	cmp    ecx,0xff
   14001efd8:	jne    0x14001efe2
   14001efda:	mov    r8d,edx
   14001efdd:	jmp    0x14001eeeb
   14001efe2:	mov    BYTE PTR [rbp+0x41],cl
   14001efe5:	mov    dil,0x1
   14001efe8:	call   0x14001e980
   14001efed:	mov    r10d,eax
   14001eff0:	mov    r11d,eax
   14001eff3:	and    r10d,0x3
   14001eff7:	sar    r11d,0x2
   14001effb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f000:	cmp    r9,rsi
   14001f003:	jae    0x14001f141
   14001f009:	movzx  edx,BYTE PTR [r9]
   14001f00d:	movsx  rcx,dil
   14001f011:	inc    r9
   14001f014:	inc    dil
   14001f017:	cmp    edx,0x20
   14001f01a:	mov    BYTE PTR [rcx+rbp*1+0x41],dl
   14001f01e:	mov    rcx,rdx
   14001f021:	jg     0x14001f02a
   14001f023:	movsx  ecx,BYTE PTR [rdx+r15*1]
   14001f028:	jmp    0x14001f02d
   14001f02a:	add    ecx,0xfffffff3
   14001f02d:	cmp    r10d,0x1
   14001f031:	je     0x14001f047
   14001f033:	cmp    r10d,0x2
   14001f037:	jne    0x14001f041
   14001f039:	imul   ecx,ecx,0xf3
   14001f03f:	jmp    0x14001f047
   14001f041:	imul   ecx,ecx,0xe6a9
   14001f047:	test   ecx,ecx
   14001f049:	js     0x14001efb7
   14001f04f:	add    r11d,ecx
   14001f052:	sub    r10d,0x1
   14001f056:	jne    0x14001f000
   14001f058:	lea    ecx,[r11+r8*1]
   14001f05c:	xor    dil,dil
   14001f05f:	cmp    ecx,0x10ffff
   14001f065:	ja     0x14001efb7
   14001f06b:	lea    edx,[r10+0x40]
   14001f06f:	lea    eax,[rcx-0x3040]
   14001f075:	cmp    eax,0xa763
   14001f07a:	ja     0x14001f0b1
   14001f07c:	cmp    ecx,0x309f
   14001f082:	jg     0x14001f08c
   14001f084:	mov    r8d,0x3070
   14001f08a:	jmp    0x14001f0bc
   14001f08c:	lea    eax,[rcx-0x4e00]
   14001f092:	cmp    eax,0x51a5
   14001f097:	ja     0x14001f0a1
   14001f099:	mov    r8d,0x7711
   14001f09f:	jmp    0x14001f0bc
   14001f0a1:	cmp    ecx,0xac00
   14001f0a7:	jl     0x14001f0b1
   14001f0a9:	mov    r8d,0xc1d1
   14001f0af:	jmp    0x14001f0bc
   14001f0b1:	mov    r8d,ecx
   14001f0b4:	and    r8d,0xffffff80
   14001f0b8:	add    r8d,0x40
   14001f0bc:	cmp    ecx,0xffff
   14001f0c2:	jle    0x14001eee4
   14001f0c8:	mov    eax,ecx
   14001f0ca:	add    rbx,0x2
   14001f0ce:	sar    eax,0xa
   14001f0d1:	sub    ax,WORD PTR [rsp+0x50]
   14001f0d6:	mov    WORD PTR [rbx-0x2],ax
   14001f0da:	mov    eax,0x3ff
   14001f0df:	and    cx,ax
   14001f0e2:	mov    eax,0xdc00
   14001f0e7:	or     cx,ax
   14001f0ea:	cmp    rbx,r12
   14001f0ed:	jb     0x14001eee4
   14001f0f3:	mov    WORD PTR [rbp+0x90],cx
   14001f0fa:	mov    BYTE PTR [rbp+0x5d],0x1
   14001f0fe:	mov    DWORD PTR [r13+0x0],0xf
   14001f106:	lea    eax,[r11*4+0x0]
   14001f10e:	mov    DWORD PTR [rbp+0x48],r8d
   14001f112:	or     eax,r10d
   14001f115:	mov    DWORD PTR [rbp+0x4c],eax
   14001f118:	mov    rsi,QWORD PTR [rsp+0x68]
   14001f11d:	mov    BYTE PTR [rbp+0x40],dil
   14001f121:	mov    rbp,QWORD PTR [rsp+0x60]
   14001f126:	mov    QWORD PTR [r14+0x20],rbx
   14001f12a:	mov    rbx,QWORD PTR [rsp+0x58]
   14001f12f:	mov    QWORD PTR [r14+0x10],r9
   14001f133:	add    rsp,0x20
   14001f137:	pop    r15
   14001f139:	pop    r14
   14001f13b:	pop    r13
   14001f13d:	pop    r12
   14001f13f:	pop    rdi
   14001f140:	ret    
   14001f141:	cmp    DWORD PTR [r13+0x0],0xc
   14001f146:	jne    0x14001f106
   14001f148:	mov    DWORD PTR [rbp+0x48],0x40
   14001f14f:	mov    DWORD PTR [rbp+0x4c],0x0
   14001f156:	jmp    0x14001f118
   14001f158:	int3   
   14001f159:	int3   
   14001f15a:	int3   
   14001f15b:	int3   
   14001f15c:	int3   
   14001f15d:	int3   
   14001f15e:	int3   
   14001f15f:	int3   
   14001f160:	rex push rsi
   14001f162:	mov    r11,QWORD PTR [rcx+0x20]
   14001f166:	mov    r9,QWORD PTR [rcx+0x28]
   14001f16a:	mov    r10,QWORD PTR [rcx+0x10]
   14001f16e:	mov    r8,QWORD PTR [rcx+0x30]
   14001f172:	mov    rsi,rcx
   14001f175:	mov    ecx,DWORD PTR [rcx+0x18]
   14001f178:	sub    r9,r11
   14001f17b:	sub    ecx,r10d
   14001f17e:	mov    rax,rdx
   14001f181:	sar    r9,1
   14001f184:	xor    edx,edx
   14001f186:	cmp    ecx,r9d
   14001f189:	jg     0x14001f190
   14001f18b:	mov    r9d,ecx
   14001f18e:	jmp    0x14001f199
   14001f190:	mov    DWORD PTR [rax],0xf
   14001f196:	mov    ecx,r9d
   14001f199:	cmp    r9d,0x8
   14001f19d:	jl     0x14001f26e
   14001f1a3:	mov    QWORD PTR [rsp+0x10],rbx
   14001f1a8:	mov    QWORD PTR [rsp+0x18],rdi
   14001f1ad:	mov    edi,r9d
   14001f1b0:	sar    edi,0x3
   14001f1b3:	and    r9d,0x7
   14001f1b7:	mov    ecx,r9d
   14001f1ba:	mov    ebx,edi
   14001f1bc:	nop    DWORD PTR [rax+0x0]
   14001f1c0:	movzx  eax,BYTE PTR [r10]
   14001f1c4:	dec    edi
   14001f1c6:	add    r11,0x10
   14001f1ca:	mov    WORD PTR [r11-0x10],ax
   14001f1cf:	movzx  eax,BYTE PTR [r10+0x1]
   14001f1d4:	add    r10,0x8
   14001f1d8:	mov    WORD PTR [r11-0xe],ax
   14001f1dd:	movzx  eax,BYTE PTR [r10-0x6]
   14001f1e2:	mov    WORD PTR [r11-0xc],ax
   14001f1e7:	movzx  eax,BYTE PTR [r10-0x5]
   14001f1ec:	mov    WORD PTR [r11-0xa],ax
   14001f1f1:	movzx  eax,BYTE PTR [r10-0x4]
   14001f1f6:	mov    WORD PTR [r11-0x8],ax
   14001f1fb:	movzx  eax,BYTE PTR [r10-0x3]
   14001f200:	mov    WORD PTR [r11-0x6],ax
   14001f205:	movzx  eax,BYTE PTR [r10-0x2]
   14001f20a:	mov    WORD PTR [r11-0x4],ax
   14001f20f:	movzx  eax,BYTE PTR [r10-0x1]
   14001f214:	mov    WORD PTR [r11-0x2],ax
   14001f219:	test   edi,edi
   14001f21b:	jg     0x14001f1c0
   14001f21d:	mov    rdi,QWORD PTR [rsp+0x18]
   14001f222:	test   r8,r8
   14001f225:	je     0x14001f269
   14001f227:	nop    WORD PTR [rax+rax*1+0x0]
   14001f230:	mov    DWORD PTR [r8],edx
   14001f233:	inc    edx
   14001f235:	dec    ebx
   14001f237:	mov    DWORD PTR [r8+0x4],edx
   14001f23b:	inc    edx
   14001f23d:	add    r8,0x20
   14001f241:	mov    DWORD PTR [r8-0x18],edx
   14001f245:	inc    edx
   14001f247:	mov    DWORD PTR [r8-0x14],edx
   14001f24b:	inc    edx
   14001f24d:	mov    DWORD PTR [r8-0x10],edx
   14001f251:	inc    edx
   14001f253:	mov    DWORD PTR [r8-0xc],edx
   14001f257:	inc    edx
   14001f259:	mov    DWORD PTR [r8-0x8],edx
   14001f25d:	inc    edx
   14001f25f:	mov    DWORD PTR [r8-0x4],edx
   14001f263:	inc    edx
   14001f265:	test   ebx,ebx
   14001f267:	jg     0x14001f230
   14001f269:	mov    rbx,QWORD PTR [rsp+0x10]
   14001f26e:	test   r9d,r9d
   14001f271:	jle    0x14001f298
   14001f273:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001f280:	movzx  eax,BYTE PTR [r10]
   14001f284:	dec    r9d
   14001f287:	add    r11,0x2
   14001f28b:	mov    WORD PTR [r11-0x2],ax
   14001f290:	inc    r10
   14001f293:	test   r9d,r9d
   14001f296:	jg     0x14001f280
   14001f298:	mov    QWORD PTR [rsi+0x10],r10
   14001f29c:	mov    QWORD PTR [rsi+0x20],r11
   14001f2a0:	test   r8,r8
   14001f2a3:	je     0x14001f2c3
   14001f2a5:	test   ecx,ecx
   14001f2a7:	jle    0x14001f2bf
   14001f2a9:	nop    DWORD PTR [rax+0x0]
   14001f2b0:	mov    DWORD PTR [r8],edx
   14001f2b3:	dec    ecx
   14001f2b5:	add    r8,0x4
   14001f2b9:	inc    edx
   14001f2bb:	test   ecx,ecx
   14001f2bd:	jg     0x14001f2b0
   14001f2bf:	mov    QWORD PTR [rsi+0x30],r8
   14001f2c3:	pop    rsi
   14001f2c4:	ret    
   14001f2c5:	int3   
   14001f2c6:	int3   
   14001f2c7:	int3   
   14001f2c8:	int3   
   14001f2c9:	int3   
   14001f2ca:	int3   
   14001f2cb:	int3   
   14001f2cc:	int3   
   14001f2cd:	int3   
   14001f2ce:	int3   
   14001f2cf:	int3   
   14001f2d0:	mov    r8,QWORD PTR [rcx+0x10]
   14001f2d4:	cmp    r8,QWORD PTR [rcx+0x18]
   14001f2d8:	jae    0x14001f2e7
   14001f2da:	lea    rax,[r8+0x1]
   14001f2de:	mov    QWORD PTR [rcx+0x10],rax
   14001f2e2:	movzx  eax,BYTE PTR [r8]
   14001f2e6:	ret    
   14001f2e7:	mov    DWORD PTR [rdx],0x8
   14001f2ed:	mov    eax,0xffff
   14001f2f2:	ret    
   14001f2f3:	int3   
   14001f2f4:	int3   
   14001f2f5:	int3   
   14001f2f6:	int3   
   14001f2f7:	int3   
   14001f2f8:	int3   
   14001f2f9:	int3   
   14001f2fa:	int3   
   14001f2fb:	int3   
   14001f2fc:	int3   
   14001f2fd:	int3   
   14001f2fe:	int3   
   14001f2ff:	int3   
   14001f300:	rex push rsi
   14001f302:	push   r14
   14001f304:	push   r15
   14001f306:	sub    rsp,0x10
   14001f30a:	mov    r11d,DWORD PTR [rcx+0x28]
   14001f30e:	mov    r9,QWORD PTR [rcx+0x10]
   14001f312:	mov    r15,QWORD PTR [rcx+0x18]
   14001f316:	mov    QWORD PTR [rsp+0x30],rbx
   14001f31b:	mov    QWORD PTR [rsp+0x38],rbp
   14001f320:	mov    QWORD PTR [rsp+0x8],r12
   14001f325:	mov    r12,QWORD PTR [rcx+0x8]
   14001f329:	mov    QWORD PTR [rsp],r13
   14001f32d:	mov    r13,QWORD PTR [rcx+0x20]
   14001f331:	lea    rax,[rip+0x2c388]        # 0x14004b6c0
   14001f338:	sub    r11d,r13d
   14001f33b:	mov    r14,rdx
   14001f33e:	mov    rdx,QWORD PTR [rcx+0x30]
   14001f342:	mov    rsi,rcx
   14001f345:	mov    r10,r13
   14001f348:	cmp    QWORD PTR [r12+0x30],rax
   14001f34d:	jne    0x14001f356
   14001f34f:	mov    ebp,0xff
   14001f354:	jmp    0x14001f35b
   14001f356:	mov    ebp,0x7f
   14001f35b:	mov    ebx,DWORD PTR [r12+0x54]
   14001f360:	mov    eax,ebx
   14001f362:	neg    eax
   14001f364:	mov    rax,r15
   14001f367:	sbb    r8d,r8d
   14001f36a:	sub    rax,r9
   14001f36d:	sar    rax,1
   14001f370:	cmp    eax,r11d
   14001f373:	cmovl  r11d,eax
   14001f377:	test   ebx,ebx
   14001f379:	je     0x14001f384
   14001f37b:	test   r11d,r11d
   14001f37e:	jg     0x14001f567
   14001f384:	cmp    r11d,0x10
   14001f388:	jl     0x14001f51e
   14001f38e:	mov    ebx,r11d
   14001f391:	mov    QWORD PTR [rsp+0x40],rdi
   14001f396:	sar    ebx,0x4
   14001f399:	mov    edi,ebx
   14001f39b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f3a0:	movzx  ecx,WORD PTR [r9]
   14001f3a4:	add    r9,0x20
   14001f3a8:	add    r10,0x10
   14001f3ac:	mov    BYTE PTR [r10-0x10],cl
   14001f3b0:	movzx  eax,WORD PTR [r9-0x1e]
   14001f3b5:	mov    BYTE PTR [r10-0xf],al
   14001f3b9:	or     cx,ax
   14001f3bc:	movzx  eax,WORD PTR [r9-0x1c]
   14001f3c1:	mov    BYTE PTR [r10-0xe],al
   14001f3c5:	or     cx,ax
   14001f3c8:	movzx  eax,WORD PTR [r9-0x1a]
   14001f3cd:	mov    BYTE PTR [r10-0xd],al
   14001f3d1:	or     cx,ax
   14001f3d4:	movzx  eax,WORD PTR [r9-0x18]
   14001f3d9:	mov    BYTE PTR [r10-0xc],al
   14001f3dd:	or     cx,ax
   14001f3e0:	movzx  eax,WORD PTR [r9-0x16]
   14001f3e5:	mov    BYTE PTR [r10-0xb],al
   14001f3e9:	or     cx,ax
   14001f3ec:	movzx  eax,WORD PTR [r9-0x14]
   14001f3f1:	mov    BYTE PTR [r10-0xa],al
   14001f3f5:	or     cx,ax
   14001f3f8:	movzx  eax,WORD PTR [r9-0x12]
   14001f3fd:	mov    BYTE PTR [r10-0x9],al
   14001f401:	or     cx,ax
   14001f404:	movzx  eax,WORD PTR [r9-0x10]
   14001f409:	mov    BYTE PTR [r10-0x8],al
   14001f40d:	or     cx,ax
   14001f410:	movzx  eax,WORD PTR [r9-0xe]
   14001f415:	mov    BYTE PTR [r10-0x7],al
   14001f419:	or     cx,ax
   14001f41c:	movzx  eax,WORD PTR [r9-0xc]
   14001f421:	mov    BYTE PTR [r10-0x6],al
   14001f425:	or     cx,ax
   14001f428:	movzx  eax,WORD PTR [r9-0xa]
   14001f42d:	mov    BYTE PTR [r10-0x5],al
   14001f431:	or     cx,ax
   14001f434:	movzx  eax,WORD PTR [r9-0x8]
   14001f439:	mov    BYTE PTR [r10-0x4],al
   14001f43d:	or     cx,ax
   14001f440:	movzx  eax,WORD PTR [r9-0x6]
   14001f445:	mov    BYTE PTR [r10-0x3],al
   14001f449:	or     cx,ax
   14001f44c:	movzx  eax,WORD PTR [r9-0x4]
   14001f451:	mov    BYTE PTR [r10-0x2],al
   14001f455:	or     cx,ax
   14001f458:	movzx  eax,WORD PTR [r9-0x2]
   14001f45d:	mov    BYTE PTR [r10-0x1],al
   14001f461:	or     ax,cx
   14001f464:	cmp    ax,bp
   14001f467:	ja     0x14001f475
   14001f469:	dec    ebx
   14001f46b:	test   ebx,ebx
   14001f46d:	jg     0x14001f3a0
   14001f473:	jmp    0x14001f47d
   14001f475:	sub    r9,0x20
   14001f479:	sub    r10,0x10
   14001f47d:	sub    edi,ebx
   14001f47f:	mov    eax,edi
   14001f481:	shl    eax,0x4
   14001f484:	sub    r11d,eax
   14001f487:	test   rdx,rdx
   14001f48a:	je     0x14001f519
   14001f490:	cdqe   
   14001f492:	add    r13,rax
   14001f495:	test   edi,edi
   14001f497:	jle    0x14001f519
   14001f49d:	nop    DWORD PTR [rax]
   14001f4a0:	mov    DWORD PTR [rdx],r8d
   14001f4a3:	inc    r8d
   14001f4a6:	dec    edi
   14001f4a8:	mov    DWORD PTR [rdx+0x4],r8d
   14001f4ac:	inc    r8d
   14001f4af:	add    rdx,0x40
   14001f4b3:	mov    DWORD PTR [rdx-0x38],r8d
   14001f4b7:	inc    r8d
   14001f4ba:	mov    DWORD PTR [rdx-0x34],r8d
   14001f4be:	inc    r8d
   14001f4c1:	mov    DWORD PTR [rdx-0x30],r8d
   14001f4c5:	inc    r8d
   14001f4c8:	mov    DWORD PTR [rdx-0x2c],r8d
   14001f4cc:	inc    r8d
   14001f4cf:	mov    DWORD PTR [rdx-0x28],r8d
   14001f4d3:	inc    r8d
   14001f4d6:	mov    DWORD PTR [rdx-0x24],r8d
   14001f4da:	inc    r8d
   14001f4dd:	mov    DWORD PTR [rdx-0x20],r8d
   14001f4e1:	inc    r8d
   14001f4e4:	mov    DWORD PTR [rdx-0x1c],r8d
   14001f4e8:	inc    r8d
   14001f4eb:	mov    DWORD PTR [rdx-0x18],r8d
   14001f4ef:	inc    r8d
   14001f4f2:	mov    DWORD PTR [rdx-0x14],r8d
   14001f4f6:	inc    r8d
   14001f4f9:	mov    DWORD PTR [rdx-0x10],r8d
   14001f4fd:	inc    r8d
   14001f500:	mov    DWORD PTR [rdx-0xc],r8d
   14001f504:	inc    r8d
   14001f507:	mov    DWORD PTR [rdx-0x8],r8d
   14001f50b:	inc    r8d
   14001f50e:	mov    DWORD PTR [rdx-0x4],r8d
   14001f512:	inc    r8d
   14001f515:	test   edi,edi
   14001f517:	jg     0x14001f4a0
   14001f519:	mov    rdi,QWORD PTR [rsp+0x40]
   14001f51e:	test   r11d,r11d
   14001f521:	jle    0x14001f5b4
   14001f527:	nop    WORD PTR [rax+rax*1+0x0]
   14001f530:	movzx  eax,WORD PTR [r9]
   14001f534:	add    r9,0x2
   14001f538:	cmp    ax,bp
   14001f53b:	ja     0x14001f54b
   14001f53d:	dec    r11d
   14001f540:	mov    BYTE PTR [r10],al
   14001f543:	inc    r10
   14001f546:	test   r11d,r11d
   14001f549:	jg     0x14001f530
   14001f54b:	cmp    ax,bp
   14001f54e:	jbe    0x14001f5b4
   14001f550:	movzx  ebx,ax
   14001f553:	mov    eax,ebx
   14001f555:	and    eax,0xfffff800
   14001f55a:	cmp    eax,0xd800
   14001f55f:	jne    0x14001f591
   14001f561:	bt     ebx,0xa
   14001f565:	jb     0x14001f591
   14001f567:	cmp    r9,r15
   14001f56a:	jae    0x14001f612
   14001f570:	movzx  ecx,WORD PTR [r9]
   14001f574:	mov    eax,ecx
   14001f576:	and    eax,0xfffffc00
   14001f57b:	cmp    eax,0xdc00
   14001f580:	jne    0x14001f591
   14001f582:	add    ebx,0xffff2809
   14001f588:	add    r9,0x2
   14001f58c:	shl    ebx,0xa
   14001f58f:	add    ebx,ecx
   14001f591:	mov    eax,ebx
   14001f593:	mov    ecx,0xa
   14001f598:	mov    r11d,0xc
   14001f59e:	and    eax,0xfffff800
   14001f5a3:	cmp    eax,0xd800
   14001f5a8:	cmove  ecx,r11d
   14001f5ac:	mov    DWORD PTR [r14],ecx
   14001f5af:	mov    DWORD PTR [r12+0x54],ebx
   14001f5b4:	mov    r12,QWORD PTR [rsp+0x8]
   14001f5b9:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f5be:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f5c3:	test   rdx,rdx
   14001f5c6:	je     0x14001f5e0
   14001f5c8:	mov    rax,r10
   14001f5cb:	sub    rax,r13
   14001f5ce:	je     0x14001f5e0
   14001f5d0:	mov    DWORD PTR [rdx],r8d
   14001f5d3:	add    rdx,0x4
   14001f5d7:	inc    r8d
   14001f5da:	sub    rax,0x1
   14001f5de:	jne    0x14001f5d0
   14001f5e0:	cmp    DWORD PTR [r14],0x0
   14001f5e4:	mov    r13,QWORD PTR [rsp]
   14001f5e8:	jg     0x14001f5fc
   14001f5ea:	cmp    r9,r15
   14001f5ed:	jae    0x14001f5fc
   14001f5ef:	cmp    r10,QWORD PTR [rsi+0x28]
   14001f5f3:	jb     0x14001f5fc
   14001f5f5:	mov    DWORD PTR [r14],0xf
   14001f5fc:	mov    QWORD PTR [rsi+0x10],r9
   14001f600:	mov    QWORD PTR [rsi+0x20],r10
   14001f604:	mov    QWORD PTR [rsi+0x30],rdx
   14001f608:	add    rsp,0x10
   14001f60c:	pop    r15
   14001f60e:	pop    r14
   14001f610:	pop    rsi
   14001f611:	ret    
   14001f612:	mov    DWORD PTR [r12+0x54],ebx
   14001f617:	jmp    0x14001f5b4
   14001f619:	int3   
   14001f61a:	int3   
   14001f61b:	int3   
   14001f61c:	int3   
   14001f61d:	int3   
   14001f61e:	int3   
   14001f61f:	int3   
   14001f620:	mov    QWORD PTR [rsp+0x8],rbx
   14001f625:	mov    QWORD PTR [rsp+0x10],rbp
   14001f62a:	mov    QWORD PTR [rsp+0x18],rsi
   14001f62f:	mov    QWORD PTR [rsp+0x20],rdi
   14001f634:	mov    rdi,QWORD PTR [rdx+0x8]
   14001f638:	mov    r9,QWORD PTR [rdx+0x10]
   14001f63c:	mov    r10,QWORD PTR [rcx+0x20]
   14001f640:	mov    r11d,DWORD PTR [rcx+0x28]
   14001f644:	mov    rbx,r8
   14001f647:	mov    r8,QWORD PTR [rdx+0x18]
   14001f64b:	mov    rsi,rdx
   14001f64e:	mov    edx,DWORD PTR [rdi+0x48]
   14001f651:	sub    r11d,r10d
   14001f654:	mov    rbp,rcx
   14001f657:	test   edx,edx
   14001f659:	je     0x14001f6ae
   14001f65b:	cmp    r9,r8
   14001f65e:	jae    0x14001f70b
   14001f664:	test   r11d,r11d
   14001f667:	jne    0x14001f674
   14001f669:	mov    DWORD PTR [rbx],0xf
   14001f66f:	jmp    0x14001f742
   14001f674:	lea    eax,[rdx-0xc2]
   14001f67a:	cmp    eax,0x1
   14001f67d:	ja     0x14001f763
   14001f683:	movzx  eax,BYTE PTR [r9]
   14001f687:	sub    al,0x80
   14001f689:	cmp    al,0x3f
   14001f68b:	ja     0x14001f763
   14001f691:	shl    dl,0x6
   14001f694:	inc    r10
   14001f697:	inc    r9
   14001f69a:	or     dl,al
   14001f69c:	dec    r11d
   14001f69f:	mov    BYTE PTR [r10-0x1],dl
   14001f6a3:	mov    DWORD PTR [rdi+0x48],0x0
   14001f6aa:	mov    BYTE PTR [rdi+0x40],0x0
   14001f6ae:	cmp    r9,r8
   14001f6b1:	jae    0x14001f70b
   14001f6b3:	movzx  eax,BYTE PTR [r8-0x1]
   14001f6b8:	lea    rcx,[r8-0x1]
   14001f6bc:	add    al,0x40
   14001f6be:	cmp    al,0x3e
   14001f6c0:	cmovb  r8,rcx
   14001f6c4:	cmp    r9,r8
   14001f6c7:	jae    0x14001f70b
   14001f6c9:	nop    DWORD PTR [rax+0x0]
   14001f6d0:	test   r11d,r11d
   14001f6d3:	jle    0x14001f76b
   14001f6d9:	movzx  ecx,BYTE PTR [r9]
   14001f6dd:	inc    r9
   14001f6e0:	test   cl,cl
   14001f6e2:	jns    0x14001f6fd
   14001f6e4:	lea    eax,[rcx+0x3e]
   14001f6e7:	cmp    al,0x1
   14001f6e9:	ja     0x14001f757
   14001f6eb:	movzx  eax,BYTE PTR [r9]
   14001f6ef:	sub    al,0x80
   14001f6f1:	cmp    al,0x3f
   14001f6f3:	ja     0x14001f757
   14001f6f5:	shl    cl,0x6
   14001f6f8:	inc    r9
   14001f6fb:	or     cl,al
   14001f6fd:	mov    BYTE PTR [r10],cl
   14001f700:	inc    r10
   14001f703:	dec    r11d
   14001f706:	cmp    r9,r8
   14001f709:	jb     0x14001f6d0
   14001f70b:	cmp    DWORD PTR [rbx],0x0
   14001f70e:	jg     0x14001f73a
   14001f710:	cmp    r9,QWORD PTR [rsi+0x18]
   14001f714:	jae    0x14001f73a
   14001f716:	movzx  ecx,BYTE PTR [r9]
   14001f71a:	mov    BYTE PTR [rdi+0x40],0x1
   14001f71e:	inc    r9
   14001f721:	mov    BYTE PTR [rdi+0x41],cl
   14001f724:	mov    DWORD PTR [rdi+0x48],ecx
   14001f727:	mov    rax,rcx
   14001f72a:	lea    rcx,[rip+0x2fd1f]        # 0x14004f450
   14001f731:	movzx  ecx,BYTE PTR [rax+rcx*1]
   14001f735:	inc    ecx
   14001f737:	mov    DWORD PTR [rdi+0x4c],ecx
   14001f73a:	mov    QWORD PTR [rsi+0x10],r9
   14001f73e:	mov    QWORD PTR [rbp+0x20],r10
   14001f742:	mov    rbx,QWORD PTR [rsp+0x8]
   14001f747:	mov    rbp,QWORD PTR [rsp+0x10]
   14001f74c:	mov    rsi,QWORD PTR [rsp+0x18]
   14001f751:	mov    rdi,QWORD PTR [rsp+0x20]
   14001f756:	ret    
   14001f757:	lea    rax,[r9-0x1]
   14001f75b:	mov    QWORD PTR [rsi+0x10],rax
   14001f75f:	mov    QWORD PTR [rbp+0x20],r10
   14001f763:	mov    DWORD PTR [rbx],0xffffff81
   14001f769:	jmp    0x14001f742
   14001f76b:	mov    DWORD PTR [rbx],0xf
   14001f771:	jmp    0x14001f73a
   14001f773:	int3   
   14001f774:	int3   
   14001f775:	int3   
   14001f776:	int3   
   14001f777:	int3   
   14001f778:	int3   
   14001f779:	int3   
   14001f77a:	int3   
   14001f77b:	int3   
   14001f77c:	int3   
   14001f77d:	int3   
   14001f77e:	int3   
   14001f77f:	int3   
   14001f780:	mov    rax,rdx
   14001f783:	mov    r8d,0xff
   14001f789:	xor    edx,edx
   14001f78b:	mov    rcx,QWORD PTR [rax]
   14001f78e:	rex.W jmp QWORD PTR [rax+0x10]
   14001f792:	int3   
   14001f793:	int3   
   14001f794:	int3   
   14001f795:	int3   
   14001f796:	int3   
   14001f797:	int3   
   14001f798:	int3   
   14001f799:	int3   
   14001f79a:	int3   
   14001f79b:	int3   
   14001f79c:	int3   
   14001f79d:	int3   
   14001f79e:	int3   
   14001f79f:	int3   
   14001f7a0:	mov    QWORD PTR [rsp+0x10],rdx
   14001f7a5:	mov    QWORD PTR [rsp+0x8],rcx
   14001f7aa:	push   rbp
   14001f7ab:	push   rsi
   14001f7ac:	push   rdi
   14001f7ad:	push   r12
   14001f7af:	sub    rsp,0x28
   14001f7b3:	mov    r8,QWORD PTR [rcx+0x20]
   14001f7b7:	mov    r10,QWORD PTR [rcx+0x18]
   14001f7bb:	mov    r12,QWORD PTR [rcx+0x10]
   14001f7bf:	mov    rsi,QWORD PTR [rcx+0x30]
   14001f7c3:	mov    QWORD PTR [rsp+0x18],r13
   14001f7c8:	mov    r13,QWORD PTR [rcx+0x28]
   14001f7cc:	sub    r13,r8
   14001f7cf:	xor    edi,edi
   14001f7d1:	mov    eax,r10d
   14001f7d4:	sar    r13,1
   14001f7d7:	sub    eax,r12d
   14001f7da:	mov    r9,rdx
   14001f7dd:	cmp    eax,r13d
   14001f7e0:	mov    QWORD PTR [rsp+0x60],r10
   14001f7e5:	mov    QWORD PTR [rsp+0x68],r8
   14001f7ea:	cmovl  r13d,eax
   14001f7ee:	mov    rdx,rcx
   14001f7f1:	mov    rbp,r8
   14001f7f4:	cmp    r13d,0x8
   14001f7f8:	jl     0x14001f94e
   14001f7fe:	mov    QWORD PTR [rsp+0x20],rbx
   14001f803:	mov    QWORD PTR [rsp+0x10],r14
   14001f808:	mov    r14d,r13d
   14001f80b:	sar    r14d,0x3
   14001f80f:	mov    QWORD PTR [rsp+0x8],r15
   14001f814:	mov    r15d,r14d
   14001f817:	nop    WORD PTR [rax+rax*1+0x0]
   14001f820:	movzx  r11d,BYTE PTR [r12]
   14001f825:	mov    WORD PTR [rbp+0x0],r11w
   14001f82a:	movzx  ebx,BYTE PTR [r12+0x1]
   14001f830:	mov    WORD PTR [rbp+0x2],bx
   14001f834:	movzx  r9d,BYTE PTR [r12+0x2]
   14001f83a:	mov    WORD PTR [rbp+0x4],r9w
   14001f83f:	movzx  r10d,BYTE PTR [r12+0x3]
   14001f845:	mov    WORD PTR [rbp+0x6],r10w
   14001f84a:	movzx  ecx,BYTE PTR [r12+0x4]
   14001f850:	mov    WORD PTR [rbp+0x8],cx
   14001f854:	movzx  edx,BYTE PTR [r12+0x5]
   14001f85a:	mov    WORD PTR [rbp+0xa],dx
   14001f85e:	movzx  r8d,BYTE PTR [r12+0x6]
   14001f864:	mov    WORD PTR [rbp+0xc],r8w
   14001f869:	movzx  eax,BYTE PTR [r12+0x7]
   14001f86f:	or     r8w,cx
   14001f873:	or     r8w,r9w
   14001f877:	mov    WORD PTR [rbp+0xe],ax
   14001f87b:	or     r8w,r11w
   14001f87f:	or     r8w,ax
   14001f883:	or     r8w,dx
   14001f887:	or     r8w,r10w
   14001f88b:	or     r8w,bx
   14001f88f:	cmp    r8w,0x7f
   14001f894:	ja     0x14001f8aa
   14001f896:	dec    r14d
   14001f899:	add    r12,0x8
   14001f89d:	add    rbp,0x10
   14001f8a1:	test   r14d,r14d
   14001f8a4:	jg     0x14001f820
   14001f8aa:	mov    rbx,QWORD PTR [rsp+0x20]
   14001f8af:	sub    r15d,r14d
   14001f8b2:	mov    r14,QWORD PTR [rsp+0x10]
   14001f8b7:	lea    eax,[r15*8+0x0]
   14001f8bf:	sub    r13d,eax
   14001f8c2:	test   rsi,rsi
   14001f8c5:	je     0x14001f924
   14001f8c7:	mov    r8,QWORD PTR [rsp+0x68]
   14001f8cc:	cdqe   
   14001f8ce:	lea    r8,[r8+rax*2]
   14001f8d2:	test   r15d,r15d
   14001f8d5:	jle    0x14001f93a
   14001f8d7:	nop    WORD PTR [rax+rax*1+0x0]
   14001f8e0:	mov    DWORD PTR [rsi],edi
   14001f8e2:	inc    edi
   14001f8e4:	dec    r15d
   14001f8e7:	mov    DWORD PTR [rsi+0x4],edi
   14001f8ea:	inc    edi
   14001f8ec:	add    rsi,0x20
   14001f8f0:	mov    DWORD PTR [rsi-0x18],edi
   14001f8f3:	inc    edi
   14001f8f5:	mov    DWORD PTR [rsi-0x14],edi
   14001f8f8:	inc    edi
   14001f8fa:	mov    DWORD PTR [rsi-0x10],edi
   14001f8fd:	inc    edi
   14001f8ff:	mov    DWORD PTR [rsi-0xc],edi
   14001f902:	inc    edi
   14001f904:	mov    DWORD PTR [rsi-0x8],edi
   14001f907:	inc    edi
   14001f909:	mov    DWORD PTR [rsi-0x4],edi
   14001f90c:	inc    edi
   14001f90e:	test   r15d,r15d
   14001f911:	jg     0x14001f8e0
   14001f913:	mov    rdx,QWORD PTR [rsp+0x50]
   14001f918:	mov    r9,QWORD PTR [rsp+0x58]
   14001f91d:	mov    r10,QWORD PTR [rsp+0x60]
   14001f922:	jmp    0x14001f949
   14001f924:	mov    rdx,QWORD PTR [rsp+0x50]
   14001f929:	mov    r8,QWORD PTR [rsp+0x68]
   14001f92e:	mov    r9,QWORD PTR [rsp+0x58]
   14001f933:	mov    r10,QWORD PTR [rsp+0x60]
   14001f938:	jmp    0x14001f949
   14001f93a:	mov    rdx,QWORD PTR [rsp+0x50]
   14001f93f:	mov    r9,QWORD PTR [rsp+0x58]
   14001f944:	mov    r10,QWORD PTR [rsp+0x60]
   14001f949:	mov    r15,QWORD PTR [rsp+0x8]
   14001f94e:	test   r13d,r13d
   14001f951:	jle    0x14001f98c
   14001f953:	movzx  ecx,BYTE PTR [r12]
   14001f958:	inc    r12
   14001f95b:	cmp    cl,0x7f
   14001f95e:	ja     0x14001f973
   14001f960:	movzx  eax,cl
   14001f963:	dec    r13d
   14001f966:	add    rbp,0x2
   14001f96a:	mov    WORD PTR [rbp-0x2],ax
   14001f96e:	test   r13d,r13d
   14001f971:	jg     0x14001f953
   14001f973:	cmp    cl,0x7f
   14001f976:	jbe    0x14001f98c
   14001f978:	mov    rax,QWORD PTR [rdx+0x8]
   14001f97c:	mov    BYTE PTR [rax+0x41],cl
   14001f97f:	mov    BYTE PTR [rax+0x40],0x1
   14001f983:	mov    DWORD PTR [r9],0xc
   14001f98a:	jmp    0x14001f99e
   14001f98c:	cmp    r12,r10
   14001f98f:	jae    0x14001f99e
   14001f991:	cmp    rbp,QWORD PTR [rdx+0x28]
   14001f995:	jb     0x14001f99e
   14001f997:	mov    DWORD PTR [r9],0xf
   14001f99e:	mov    r13,QWORD PTR [rsp+0x18]
   14001f9a3:	test   rsi,rsi
   14001f9a6:	je     0x14001f9ce
   14001f9a8:	mov    rax,rbp
   14001f9ab:	sub    rax,r8
   14001f9ae:	sar    rax,1
   14001f9b1:	je     0x14001f9ce
   14001f9b3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001f9c0:	mov    DWORD PTR [rsi],edi
   14001f9c2:	add    rsi,0x4
   14001f9c6:	inc    edi
   14001f9c8:	sub    rax,0x1
   14001f9cc:	jne    0x14001f9c0
   14001f9ce:	mov    QWORD PTR [rdx+0x10],r12
   14001f9d2:	mov    QWORD PTR [rdx+0x20],rbp
   14001f9d6:	mov    QWORD PTR [rdx+0x30],rsi
   14001f9da:	add    rsp,0x28
   14001f9de:	pop    r12
   14001f9e0:	pop    rdi
   14001f9e1:	pop    rsi
   14001f9e2:	pop    rbp
   14001f9e3:	ret    
   14001f9e4:	int3   
   14001f9e5:	int3   
   14001f9e6:	int3   
   14001f9e7:	int3   
   14001f9e8:	int3   
   14001f9e9:	int3   
   14001f9ea:	int3   
   14001f9eb:	int3   
   14001f9ec:	int3   
   14001f9ed:	int3   
   14001f9ee:	int3   
   14001f9ef:	int3   
   14001f9f0:	mov    rax,QWORD PTR [rcx+0x10]
   14001f9f4:	cmp    rax,QWORD PTR [rcx+0x18]
   14001f9f8:	jae    0x14001fa28
   14001f9fa:	movzx  r8d,BYTE PTR [rax]
   14001f9fe:	inc    rax
   14001fa01:	mov    QWORD PTR [rcx+0x10],rax
   14001fa05:	cmp    r8b,0x7f
   14001fa09:	ja     0x14001fa10
   14001fa0b:	movzx  eax,r8b
   14001fa0f:	ret    
   14001fa10:	mov    rax,QWORD PTR [rcx+0x8]
   14001fa14:	mov    BYTE PTR [rax+0x41],r8b
   14001fa18:	mov    BYTE PTR [rax+0x40],0x1
   14001fa1c:	mov    DWORD PTR [rdx],0xc
   14001fa22:	mov    eax,0xffff
   14001fa27:	ret    
   14001fa28:	mov    DWORD PTR [rdx],0x8
   14001fa2e:	mov    eax,0xffff
   14001fa33:	ret    
   14001fa34:	int3   
   14001fa35:	int3   
   14001fa36:	int3   
   14001fa37:	int3   
   14001fa38:	int3   
   14001fa39:	int3   
   14001fa3a:	int3   
   14001fa3b:	int3   
   14001fa3c:	int3   
   14001fa3d:	int3   
   14001fa3e:	int3   
   14001fa3f:	int3   
   14001fa40:	mov    QWORD PTR [rsp+0x18],rbx
   14001fa45:	push   rdi
   14001fa46:	mov    rax,QWORD PTR [rdx+0x8]
   14001fa4a:	mov    rbx,r8
   14001fa4d:	mov    rdi,rdx
   14001fa50:	cmp    DWORD PTR [rax+0x48],0x0
   14001fa54:	mov    r11,rcx
   14001fa57:	je     0x14001fa67
   14001fa59:	mov    DWORD PTR [r8],0xffffff81
   14001fa60:	mov    rbx,QWORD PTR [rsp+0x20]
   14001fa65:	pop    rdi
   14001fa66:	ret    
   14001fa67:	mov    rdx,QWORD PTR [rdx+0x10]
   14001fa6b:	mov    r8,QWORD PTR [rcx+0x20]
   14001fa6f:	mov    r10d,DWORD PTR [rcx+0x28]
   14001fa73:	sub    r10d,r8d
   14001fa76:	mov    QWORD PTR [rsp+0x10],rbp
   14001fa7b:	mov    rbp,QWORD PTR [rdi+0x18]
   14001fa7f:	mov    eax,ebp
   14001fa81:	sub    eax,edx
   14001fa83:	cmp    eax,r10d
   14001fa86:	cmovl  r10d,eax
   14001fa8a:	cmp    r10d,0x10
   14001fa8e:	jl     0x14001fb7f
   14001fa94:	mov    r9d,r10d
   14001fa97:	mov    QWORD PTR [rsp+0x18],rsi
   14001fa9c:	sar    r9d,0x4
   14001faa0:	mov    esi,r9d
   14001faa3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001fab0:	movzx  ecx,BYTE PTR [rdx]
   14001fab3:	add    r8,0x10
   14001fab7:	add    rdx,0x10
   14001fabb:	mov    BYTE PTR [r8-0x10],cl
   14001fabf:	movzx  eax,BYTE PTR [rdx-0xf]
   14001fac3:	mov    BYTE PTR [r8-0xf],al
   14001fac7:	or     cl,al
   14001fac9:	movzx  eax,BYTE PTR [rdx-0xe]
   14001facd:	mov    BYTE PTR [r8-0xe],al
   14001fad1:	or     cl,al
   14001fad3:	movzx  eax,BYTE PTR [rdx-0xd]
   14001fad7:	mov    BYTE PTR [r8-0xd],al
   14001fadb:	or     cl,al
   14001fadd:	movzx  eax,BYTE PTR [rdx-0xc]
   14001fae1:	mov    BYTE PTR [r8-0xc],al
   14001fae5:	or     cl,al
   14001fae7:	movzx  eax,BYTE PTR [rdx-0xb]
   14001faeb:	mov    BYTE PTR [r8-0xb],al
   14001faef:	or     cl,al
   14001faf1:	movzx  eax,BYTE PTR [rdx-0xa]
   14001faf5:	mov    BYTE PTR [r8-0xa],al
   14001faf9:	or     cl,al
   14001fafb:	movzx  eax,BYTE PTR [rdx-0x9]
   14001faff:	mov    BYTE PTR [r8-0x9],al
   14001fb03:	or     cl,al
   14001fb05:	movzx  eax,BYTE PTR [rdx-0x8]
   14001fb09:	mov    BYTE PTR [r8-0x8],al
   14001fb0d:	or     cl,al
   14001fb0f:	movzx  eax,BYTE PTR [rdx-0x7]
   14001fb13:	mov    BYTE PTR [r8-0x7],al
   14001fb17:	or     cl,al
   14001fb19:	movzx  eax,BYTE PTR [rdx-0x6]
   14001fb1d:	mov    BYTE PTR [r8-0x6],al
   14001fb21:	or     cl,al
   14001fb23:	movzx  eax,BYTE PTR [rdx-0x5]
   14001fb27:	mov    BYTE PTR [r8-0x5],al
   14001fb2b:	or     cl,al
   14001fb2d:	movzx  eax,BYTE PTR [rdx-0x4]
   14001fb31:	mov    BYTE PTR [r8-0x4],al
   14001fb35:	or     cl,al
   14001fb37:	movzx  eax,BYTE PTR [rdx-0x3]
   14001fb3b:	mov    BYTE PTR [r8-0x3],al
   14001fb3f:	or     cl,al
   14001fb41:	movzx  eax,BYTE PTR [rdx-0x2]
   14001fb45:	mov    BYTE PTR [r8-0x2],al
   14001fb49:	or     cl,al
   14001fb4b:	movzx  eax,BYTE PTR [rdx-0x1]
   14001fb4f:	or     cl,al
   14001fb51:	mov    BYTE PTR [r8-0x1],al
   14001fb55:	cmp    cl,0x7f
   14001fb58:	ja     0x14001fb68
   14001fb5a:	dec    r9d
   14001fb5d:	test   r9d,r9d
   14001fb60:	jg     0x14001fab0
   14001fb66:	jmp    0x14001fb70
   14001fb68:	sub    rdx,0x10
   14001fb6c:	sub    r8,0x10
   14001fb70:	sub    r9d,esi
   14001fb73:	mov    rsi,QWORD PTR [rsp+0x18]
   14001fb78:	shl    r9d,0x4
   14001fb7c:	add    r10d,r9d
   14001fb7f:	test   r10d,r10d
   14001fb82:	jle    0x14001fb9c
   14001fb84:	movzx  eax,BYTE PTR [rdx]
   14001fb87:	cmp    al,0x7f
   14001fb89:	ja     0x14001fbc1
   14001fb8b:	dec    r10d
   14001fb8e:	mov    BYTE PTR [r8],al
   14001fb91:	inc    rdx
   14001fb94:	inc    r8
   14001fb97:	test   r10d,r10d
   14001fb9a:	jg     0x14001fb84
   14001fb9c:	cmp    rdx,rbp
   14001fb9f:	jae    0x14001fbad
   14001fba1:	cmp    r8,QWORD PTR [r11+0x28]
   14001fba5:	jb     0x14001fbad
   14001fba7:	mov    DWORD PTR [rbx],0xf
   14001fbad:	mov    rbp,QWORD PTR [rsp+0x10]
   14001fbb2:	mov    rbx,QWORD PTR [rsp+0x20]
   14001fbb7:	mov    QWORD PTR [rdi+0x10],rdx
   14001fbbb:	mov    QWORD PTR [r11+0x20],r8
   14001fbbf:	pop    rdi
   14001fbc0:	ret    
   14001fbc1:	mov    DWORD PTR [rbx],0xffffff81
   14001fbc7:	jmp    0x14001fbad
   14001fbc9:	int3   
   14001fbca:	int3   
   14001fbcb:	int3   
   14001fbcc:	int3   
   14001fbcd:	int3   
   14001fbce:	int3   
   14001fbcf:	int3   
   14001fbd0:	mov    rax,rdx
   14001fbd3:	xor    edx,edx
   14001fbd5:	mov    rcx,QWORD PTR [rax]
   14001fbd8:	lea    r8d,[rdx+0x7f]
   14001fbdc:	rex.W jmp QWORD PTR [rax+0x10]
   14001fbe0:	mov    QWORD PTR [rsp+0x10],rbx
   14001fbe5:	mov    QWORD PTR [rsp+0x18],rsi
   14001fbea:	push   rdi
   14001fbeb:	sub    rsp,0x20
   14001fbef:	cmp    BYTE PTR [rdx+0x8],0x0
   14001fbf3:	mov    rbx,r8
   14001fbf6:	mov    rsi,rdx
   14001fbf9:	mov    rdi,rcx
   14001fbfc:	jne    0x14001fcfa
   14001fc02:	mov    ecx,0x30
   14001fc07:	call   0x140010940
   14001fc0c:	mov    r11,rax
   14001fc0f:	mov    QWORD PTR [rdi+0x10],rax
   14001fc13:	test   rax,rax
   14001fc16:	je     0x14001fd1f
   14001fc1c:	mov    eax,0xfffe
   14001fc21:	mov    QWORD PTR [rsp+0x30],rbp
   14001fc26:	xor    ebp,ebp
   14001fc28:	mov    WORD PTR [r11],ax
   14001fc2c:	mov    DWORD PTR [rdi+0x48],0xffff
   14001fc33:	mov    WORD PTR [r11+0x2],bp
   14001fc38:	mov    BYTE PTR [r11+0x19],bpl
   14001fc3c:	mov    eax,DWORD PTR [rsi+0xc]
   14001fc3f:	and    eax,0xf
   14001fc42:	cmp    al,0x9
   14001fc44:	jae    0x14001fd0a
   14001fc4a:	mov    eax,DWORD PTR [rsi+0xc]
   14001fc4d:	lea    r8,[rip+0xfffffffffffe03ac]        # 0x140000000
   14001fc54:	lea    rdi,[r11+0x1a]
   14001fc58:	and    eax,0xf
   14001fc5b:	mov    edx,0x80
   14001fc60:	lea    rcx,[rax+rax*2]
   14001fc64:	movzx  eax,WORD PTR [r8+rcx*4+0x4ba20]
   14001fc6d:	imul   ax,dx
   14001fc71:	mov    WORD PTR [r11+0x4],ax
   14001fc76:	mov    WORD PTR [r11+0x8],ax
   14001fc7b:	mov    WORD PTR [r11+0x6],ax
   14001fc80:	mov    eax,DWORD PTR [rsi+0xc]
   14001fc83:	and    eax,0xf
   14001fc86:	lea    rcx,[rax+rax*2]
   14001fc8a:	mov    eax,DWORD PTR [r8+rcx*4+0x4ba24]
   14001fc92:	mov    BYTE PTR [r11+0x18],0x1
   14001fc97:	or     rcx,0xffffffffffffffff
   14001fc9b:	mov    DWORD PTR [r11+0x14],eax
   14001fc9f:	mov    DWORD PTR [r11+0x10],eax
   14001fca3:	mov    DWORD PTR [r11+0xc],eax
   14001fca7:	mov    rax,QWORD PTR [r8+0x4c0c0]
   14001fcae:	mov    QWORD PTR [rdi],rax
   14001fcb1:	mov    eax,DWORD PTR [r8+0x4c0c8]
   14001fcb8:	mov    DWORD PTR [rdi+0x8],eax
   14001fcbb:	movzx  eax,WORD PTR [r8+0x4c0cc]
   14001fcc3:	mov    WORD PTR [rdi+0xc],ax
   14001fcc7:	movzx  eax,BYTE PTR [r8+0x4c0ce]
   14001fccf:	mov    BYTE PTR [rdi+0xe],al
   14001fcd2:	xor    eax,eax
   14001fcd4:	repnz scas al,BYTE PTR es:[rdi]
   14001fcd6:	movzx  eax,BYTE PTR [rsi+0xc]
   14001fcda:	not    rcx
   14001fcdd:	and    al,0xf
   14001fcdf:	dec    rcx
   14001fce2:	add    al,0x30
   14001fce4:	movsxd rdx,ecx
   14001fce7:	mov    BYTE PTR [rdx+r11*1+0x1a],al
   14001fcec:	mov    BYTE PTR [rdx+r11*1+0x1b],bpl
   14001fcf1:	mov    DWORD PTR [r11+0x2c],ebp
   14001fcf5:	mov    rbp,QWORD PTR [rsp+0x30]
   14001fcfa:	mov    rbx,QWORD PTR [rsp+0x38]
   14001fcff:	mov    rsi,QWORD PTR [rsp+0x40]
   14001fd04:	add    rsp,0x20
   14001fd08:	pop    rdi
   14001fd09:	ret    
   14001fd0a:	mov    rcx,QWORD PTR [rdi+0x10]
   14001fd0e:	call   0x140010a40
   14001fd13:	mov    QWORD PTR [rdi+0x10],rbp
   14001fd17:	mov    DWORD PTR [rbx],0x1
   14001fd1d:	jmp    0x14001fcf5
   14001fd1f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001fd24:	mov    DWORD PTR [rbx],0x7
   14001fd2a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001fd2f:	add    rsp,0x20
   14001fd33:	pop    rdi
   14001fd34:	ret    
   14001fd35:	int3   
   14001fd36:	int3   
   14001fd37:	int3   
   14001fd38:	int3   
   14001fd39:	int3   
   14001fd3a:	int3   
   14001fd3b:	int3   
   14001fd3c:	int3   
   14001fd3d:	int3   
   14001fd3e:	int3   
   14001fd3f:	int3   
   14001fd40:	rex push rbx
   14001fd42:	sub    rsp,0x20
   14001fd46:	mov    rbx,rcx
   14001fd49:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fd4d:	test   rcx,rcx
   14001fd50:	je     0x14001fd65
   14001fd52:	cmp    BYTE PTR [rbx+0x3e],0x0
   14001fd56:	jne    0x14001fd5d
   14001fd58:	call   0x140010a40
   14001fd5d:	xor    eax,eax
   14001fd5f:	mov    QWORD PTR [rbx+0x10],rax
   14001fd63:	jmp    0x14001fd67
   14001fd65:	xor    eax,eax
   14001fd67:	mov    QWORD PTR [rip+0x489ba],rax        # 0x140068728
   14001fd6e:	mov    QWORD PTR [rip+0x489bb],rax        # 0x140068730
   14001fd75:	add    rsp,0x20
   14001fd79:	pop    rbx
   14001fd7a:	ret    
   14001fd7b:	int3   
   14001fd7c:	int3   
   14001fd7d:	int3   
   14001fd7e:	int3   
   14001fd7f:	int3   
   14001fd80:	mov    rax,QWORD PTR [rcx+0x10]
   14001fd84:	test   rax,rax
   14001fd87:	je     0x14001fd8e
   14001fd89:	add    rax,0x1a
   14001fd8d:	ret    
   14001fd8e:	xor    eax,eax
   14001fd90:	ret    
   14001fd91:	int3   
   14001fd92:	int3   
   14001fd93:	int3   
   14001fd94:	int3   
   14001fd95:	int3   
   14001fd96:	int3   
   14001fd97:	int3   
   14001fd98:	int3   
   14001fd99:	int3   
   14001fd9a:	int3   
   14001fd9b:	int3   
   14001fd9c:	int3   
   14001fd9d:	int3   
   14001fd9e:	int3   
   14001fd9f:	int3   
   14001fda0:	mov    r8,QWORD PTR [rcx+0x10]
   14001fda4:	xor    r9d,r9d
   14001fda7:	cmp    edx,0x1
   14001fdaa:	jg     0x14001fdd8
   14001fdac:	mov    DWORD PTR [rcx+0x48],0xffff
   14001fdb3:	mov    DWORD PTR [rcx+0x4c],r9d
   14001fdb7:	movzx  eax,WORD PTR [r8+0x4]
   14001fdbc:	mov    WORD PTR [r8+0x8],ax
   14001fdc1:	mov    eax,DWORD PTR [r8+0x14]
   14001fdc5:	mov    DWORD PTR [r8+0x2c],r9d
   14001fdc9:	mov    DWORD PTR [r8+0x10],eax
   14001fdcd:	mov    eax,0xfffe
   14001fdd2:	mov    WORD PTR [r8],ax
   14001fdd6:	je     0x14001fdfc
   14001fdd8:	mov    DWORD PTR [rcx+0x54],r9d
   14001fddc:	mov    eax,DWORD PTR [r8+0x14]
   14001fde0:	mov    WORD PTR [r8+0x2],r9w
   14001fde5:	mov    DWORD PTR [r8+0xc],eax
   14001fde9:	movzx  eax,WORD PTR [r8+0x4]
   14001fdee:	mov    BYTE PTR [r8+0x18],0x1
   14001fdf3:	mov    WORD PTR [r8+0x6],ax
   14001fdf8:	mov    BYTE PTR [r8+0x19],r9b
   14001fdfc:	repz ret 
   14001fdfe:	int3   
   14001fdff:	int3   
   14001fe00:	rex push rbx
   14001fe02:	push   rsi
   14001fe03:	push   r12
   14001fe05:	push   r13
   14001fe07:	push   r15
   14001fe09:	mov    rax,QWORD PTR [rcx+0x8]
   14001fe0d:	mov    r13,QWORD PTR [rcx+0x10]
   14001fe11:	mov    r15,QWORD PTR [rcx+0x18]
   14001fe15:	mov    r9,QWORD PTR [rcx+0x20]
   14001fe19:	mov    r12,QWORD PTR [rcx+0x28]
   14001fe1d:	mov    r8,QWORD PTR [rcx+0x30]
   14001fe21:	xor    r11b,r11b
   14001fe24:	mov    rsi,rdx
   14001fe27:	mov    rbx,rcx
   14001fe2a:	mov    BYTE PTR [rsp+0x30],r11b
   14001fe2f:	test   rax,rax
   14001fe32:	je     0x1400206a3
   14001fe38:	cmp    r12,r9
   14001fe3b:	jb     0x1400206a3
   14001fe41:	cmp    r15,r13
   14001fe44:	jb     0x1400206a3
   14001fe4a:	mov    r10d,DWORD PTR [rax+0x54]
   14001fe4e:	mov    QWORD PTR [rsp+0x38],rbp
   14001fe53:	mov    rbp,QWORD PTR [rax+0x10]
   14001fe57:	mov    QWORD PTR [rsp+0x40],rdi
   14001fe5c:	mov    QWORD PTR [rsp+0x48],r14
   14001fe61:	mov    r14w,WORD PTR [rbp+0x6]
   14001fe66:	shr    r14w,0x7
   14001fe6b:	xor    edi,edi
   14001fe6d:	test   r10d,r10d
   14001fe70:	jne    0x14002063f
   14001fe76:	cmp    r13,r15
   14001fe79:	jae    0x140020683
   14001fe7f:	lea    r10,[rip+0xfffffffffffe017a]        # 0x140000000
   14001fe86:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001fe90:	mov    rdx,QWORD PTR [rbx+0x8]
   14001fe94:	cmp    DWORD PTR [rdx+0x50],0xa
   14001fe98:	jne    0x14001ff56
   14001fe9e:	movzx  eax,r14w
   14001fea2:	lea    rcx,[rax+rax*2]
   14001fea6:	movzx  r10d,BYTE PTR [r10+rcx*4+0x4ba28]
   14001feaf:	mov    rcx,r13
   14001feb2:	mov    DWORD PTR [rdx+0x50],edi
   14001feb5:	sub    rcx,QWORD PTR [rbx+0x10]
   14001feb9:	add    r10d,0xef00
   14001fec0:	sar    rcx,1
   14001fec3:	dec    ecx
   14001fec5:	cmp    r9,r12
   14001fec8:	jae    0x14002042f
   14001fece:	cmp    r10d,0xff
   14001fed5:	ja     0x14001feeb
   14001fed7:	mov    BYTE PTR [r9],r10b
   14001feda:	inc    r9
   14001fedd:	test   r8,r8
   14001fee0:	je     0x14001ff4d
   14001fee2:	mov    DWORD PTR [r8],ecx
   14001fee5:	add    r8,0x4
   14001fee9:	jmp    0x14001ff4d
   14001feeb:	cmp    r10d,0xffff
   14001fef2:	jbe    0x14001ff10
   14001fef4:	mov    eax,r10d
   14001fef7:	inc    r9
   14001fefa:	shr    eax,0x10
   14001fefd:	mov    BYTE PTR [r9-0x1],al
   14001ff01:	test   r8,r8
   14001ff04:	je     0x14001ff10
   14001ff06:	dec    ecx
   14001ff08:	add    r8,0x4
   14001ff0c:	mov    DWORD PTR [r8-0x4],ecx
   14001ff10:	cmp    r9,r12
   14001ff13:	jae    0x1400203f5
   14001ff19:	mov    eax,r10d
   14001ff1c:	inc    r9
   14001ff1f:	shr    eax,0x8
   14001ff22:	mov    BYTE PTR [r9-0x1],al
   14001ff26:	test   r8,r8
   14001ff29:	je     0x14001ff32
   14001ff2b:	mov    DWORD PTR [r8],ecx
   14001ff2e:	add    r8,0x4
   14001ff32:	cmp    r9,r12
   14001ff35:	jae    0x1400203d5
   14001ff3b:	mov    BYTE PTR [r9],r10b
   14001ff3e:	inc    r9
   14001ff41:	test   r8,r8
   14001ff44:	je     0x14001ff4d
   14001ff46:	mov    DWORD PTR [r8],ecx
   14001ff49:	add    r8,0x4
   14001ff4d:	cmp    DWORD PTR [rsi],0x0
   14001ff50:	jg     0x140020683
   14001ff56:	movzx  r10d,WORD PTR [r13+0x0]
   14001ff5b:	add    r13,0x2
   14001ff5f:	mov    edi,0xffff
   14001ff64:	cmp    r10d,0xa0
   14001ff6b:	jg     0x140020019
   14001ff71:	mov    rax,QWORD PTR [rbx+0x8]
   14001ff75:	mov    rcx,r13
   14001ff78:	mov    DWORD PTR [rax+0x50],r10d
   14001ff7c:	sub    rcx,QWORD PTR [rbx+0x10]
   14001ff80:	sar    rcx,1
   14001ff83:	dec    ecx
   14001ff85:	cmp    r9,r12
   14001ff88:	jae    0x1400204ef
   14001ff8e:	cmp    r10d,0xff
   14001ff95:	jg     0x14001ffab
   14001ff97:	mov    BYTE PTR [r9],r10b
   14001ff9a:	inc    r9
   14001ff9d:	test   r8,r8
   14001ffa0:	je     0x140020009
   14001ffa2:	mov    DWORD PTR [r8],ecx
   14001ffa5:	add    r8,0x4
   14001ffa9:	jmp    0x140020009
   14001ffab:	cmp    r10d,edi
   14001ffae:	jle    0x14001ffcc
   14001ffb0:	mov    eax,r10d
   14001ffb3:	inc    r9
   14001ffb6:	sar    eax,0x10
   14001ffb9:	mov    BYTE PTR [r9-0x1],al
   14001ffbd:	test   r8,r8
   14001ffc0:	je     0x14001ffcc
   14001ffc2:	dec    ecx
   14001ffc4:	add    r8,0x4
   14001ffc8:	mov    DWORD PTR [r8-0x4],ecx
   14001ffcc:	cmp    r9,r12
   14001ffcf:	jae    0x1400204b5
   14001ffd5:	mov    eax,r10d
   14001ffd8:	inc    r9
   14001ffdb:	sar    eax,0x8
   14001ffde:	mov    BYTE PTR [r9-0x1],al
   14001ffe2:	test   r8,r8
   14001ffe5:	je     0x14001ffee
   14001ffe7:	mov    DWORD PTR [r8],ecx
   14001ffea:	add    r8,0x4
   14001ffee:	cmp    r9,r12
   14001fff1:	jae    0x140020495
   14001fff7:	mov    BYTE PTR [r9],r10b
   14001fffa:	inc    r9
   14001fffd:	test   r8,r8
   140020000:	je     0x140020009
   140020002:	mov    DWORD PTR [r8],ecx
   140020005:	add    r8,0x4
   140020009:	cmp    DWORD PTR [rsi],0x0
   14002000c:	jg     0x140020683
   140020012:	xor    edi,edi
   140020014:	jmp    0x1400203ba
   140020019:	mov    ecx,r10d
   14002001c:	sub    ecx,0x200c
   140020022:	je     0x1400202f7
   140020028:	cmp    ecx,0x1
   14002002b:	je     0x1400202c8
   140020031:	mov    eax,0xd7f
   140020036:	mov    ecx,0x47f
   14002003b:	sub    ax,r10w
   14002003f:	cmp    ax,cx
   140020042:	ja     0x14002023d
   140020048:	cmp    r10d,0x964
   14002004f:	je     0x1400200e9
   140020055:	cmp    r10d,0x965
   14002005c:	je     0x1400200e9
   140020062:	lea    eax,[r10-0x900]
   140020069:	cdq    
   14002006a:	and    edx,0x7f
   14002006d:	add    eax,edx
   14002006f:	sar    eax,0x7
   140020072:	movzx  ecx,ax
   140020075:	mov    r14d,eax
   140020078:	mov    eax,0x80
   14002007d:	imul   cx,ax
   140020081:	cmp    cx,WORD PTR [rbp+0x6]
   140020085:	jne    0x14002008d
   140020087:	cmp    BYTE PTR [rbp+0x18],0x0
   14002008b:	je     0x1400200b6
   14002008d:	mov    WORD PTR [rbp+0x6],cx
   140020091:	movzx  ecx,r14w
   140020095:	mov    r11b,0x1
   140020098:	lea    rax,[rcx+rcx*2]
   14002009c:	lea    rcx,[rip+0xfffffffffffdff5d]        # 0x140000000
   1400200a3:	mov    BYTE PTR [rsp+0x30],r11b
   1400200a8:	mov    eax,DWORD PTR [rcx+rax*4+0x4ba24]
   1400200af:	mov    BYTE PTR [rbp+0x18],0x0
   1400200b3:	mov    DWORD PTR [rbp+0xc],eax
   1400200b6:	movzx  eax,WORD PTR [rbp+0x6]
   1400200ba:	mov    ecx,0x100
   1400200bf:	cmp    ax,cx
   1400200c2:	jne    0x1400200e3
   1400200c4:	cmp    r10d,0xa70
   1400200cb:	jne    0x1400200d5
   1400200cd:	mov    r10d,0xa02
   1400200d3:	jmp    0x1400200e3
   1400200d5:	mov    ecx,0xa71
   1400200da:	cmp    r10d,ecx
   1400200dd:	jne    0x1400200e3
   1400200df:	mov    WORD PTR [rbp+0x2],cx
   1400200e3:	movzx  eax,ax
   1400200e6:	sub    r10d,eax
   1400200e9:	lea    rdx,[rip+0xfffffffffffdff10]        # 0x140000000
   1400200f0:	movzx  eax,r10b
   1400200f4:	movzx  edi,WORD PTR [rdx+rax*2+0x4bb10]
   1400200fc:	movzx  eax,BYTE PTR [rax+rdx*1+0x4ba90]
   140020104:	test   BYTE PTR [rbp+0xc],al
   140020107:	jne    0x140020122
   140020109:	mov    eax,0x300
   14002010e:	cmp    WORD PTR [rbp+0x6],ax
   140020112:	jne    0x14002011d
   140020114:	cmp    r10d,0x931
   14002011b:	je     0x140020122
   14002011d:	mov    edi,0xffff
   140020122:	test   r11b,r11b
   140020125:	je     0x14002021e
   14002012b:	movzx  eax,r14w
   14002012f:	mov    BYTE PTR [rsp+0x30],0x0
   140020134:	lea    rcx,[rax+rax*2]
   140020138:	movzx  r11d,BYTE PTR [rdx+rcx*4+0x4ba28]
   140020141:	mov    rcx,r13
   140020144:	sub    rcx,QWORD PTR [rbx+0x10]
   140020148:	add    r11d,0xef00
   14002014f:	sar    rcx,1
   140020152:	dec    ecx
   140020154:	cmp    r9,r12
   140020157:	jae    0x140020265
   14002015d:	cmp    r11d,0xff
   140020164:	ja     0x140020181
   140020166:	mov    BYTE PTR [r9],r11b
   140020169:	inc    r9
   14002016c:	test   r8,r8
   14002016f:	je     0x140020215
   140020175:	mov    DWORD PTR [r8],ecx
   140020178:	add    r8,0x4
   14002017c:	jmp    0x140020215
   140020181:	cmp    r11d,0xffff
   140020188:	jbe    0x1400201a6
   14002018a:	mov    eax,r11d
   14002018d:	inc    r9
   140020190:	shr    eax,0x10
   140020193:	mov    BYTE PTR [r9-0x1],al
   140020197:	test   r8,r8
   14002019a:	je     0x1400201a6
   14002019c:	dec    ecx
   14002019e:	add    r8,0x4
   1400201a2:	mov    DWORD PTR [r8-0x4],ecx
   1400201a6:	cmp    r9,r12
   1400201a9:	jb     0x1400201e5
   1400201ab:	mov    rdx,QWORD PTR [rbx+0x8]
   1400201af:	mov    ecx,r11d
   1400201b2:	movsx  rax,BYTE PTR [rdx+0x5b]
   1400201b7:	shr    ecx,0x8
   1400201ba:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   1400201be:	mov    rax,QWORD PTR [rbx+0x8]
   1400201c2:	inc    BYTE PTR [rax+0x5b]
   1400201c5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400201c9:	movsx  rax,BYTE PTR [rcx+0x5b]
   1400201ce:	mov    BYTE PTR [rax+rcx*1+0x68],r11b
   1400201d3:	mov    rax,QWORD PTR [rbx+0x8]
   1400201d7:	inc    BYTE PTR [rax+0x5b]
   1400201da:	mov    DWORD PTR [rsi],0xf
   1400201e0:	jmp    0x1400202e0
   1400201e5:	mov    eax,r11d
   1400201e8:	inc    r9
   1400201eb:	shr    eax,0x8
   1400201ee:	mov    BYTE PTR [r9-0x1],al
   1400201f2:	test   r8,r8
   1400201f5:	je     0x1400201fe
   1400201f7:	mov    DWORD PTR [r8],ecx
   1400201fa:	add    r8,0x4
   1400201fe:	cmp    r9,r12
   140020201:	jae    0x140020248
   140020203:	mov    BYTE PTR [r9],r11b
   140020206:	inc    r9
   140020209:	test   r8,r8
   14002020c:	je     0x140020215
   14002020e:	mov    DWORD PTR [r8],ecx
   140020211:	add    r8,0x4
   140020215:	cmp    DWORD PTR [rsi],0x0
   140020218:	jg     0x1400202e0
   14002021e:	mov    eax,0x100
   140020223:	cmp    WORD PTR [rbp+0x6],ax
   140020227:	jne    0x14002023d
   140020229:	lea    eax,[r10+0x100]
   140020230:	mov    ecx,0xa71
   140020235:	cmp    eax,ecx
   140020237:	je     0x1400203b8
   14002023d:	xor    eax,eax
   14002023f:	mov    WORD PTR [rbp+0x2],ax
   140020243:	jmp    0x1400202e0
   140020248:	mov    rcx,QWORD PTR [rbx+0x8]
   14002024c:	movsx  rax,BYTE PTR [rcx+0x5b]
   140020251:	mov    BYTE PTR [rax+rcx*1+0x68],r11b
   140020256:	mov    rax,QWORD PTR [rbx+0x8]
   14002025a:	inc    BYTE PTR [rax+0x5b]
   14002025d:	mov    DWORD PTR [rsi],0xf
   140020263:	jmp    0x1400202e0
   140020265:	test   r11d,0xff0000
   14002026c:	je     0x140020288
   14002026e:	mov    rdx,QWORD PTR [rbx+0x8]
   140020272:	mov    ecx,r11d
   140020275:	movsx  rax,BYTE PTR [rdx+0x5b]
   14002027a:	shr    ecx,0x10
   14002027d:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   140020281:	mov    rax,QWORD PTR [rbx+0x8]
   140020285:	inc    BYTE PTR [rax+0x5b]
   140020288:	test   r11d,0xff00
   14002028f:	je     0x1400202ab
   140020291:	mov    rdx,QWORD PTR [rbx+0x8]
   140020295:	mov    ecx,r11d
   140020298:	movsx  rax,BYTE PTR [rdx+0x5b]
   14002029d:	shr    ecx,0x8
   1400202a0:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   1400202a4:	mov    rax,QWORD PTR [rbx+0x8]
   1400202a8:	inc    BYTE PTR [rax+0x5b]
   1400202ab:	mov    rcx,QWORD PTR [rbx+0x8]
   1400202af:	movsx  rax,BYTE PTR [rcx+0x5b]
   1400202b4:	mov    BYTE PTR [rax+rcx*1+0x68],r11b
   1400202b9:	mov    rax,QWORD PTR [rbx+0x8]
   1400202bd:	inc    BYTE PTR [rax+0x5b]
   1400202c0:	mov    DWORD PTR [rsi],0xf
   1400202c6:	jmp    0x1400202e0
   1400202c8:	cmp    WORD PTR [rbp+0x2],0x0
   1400202cd:	mov    eax,0xe9
   1400202d2:	mov    edi,0xd9
   1400202d7:	cmovne edi,eax
   1400202da:	xor    eax,eax
   1400202dc:	mov    WORD PTR [rbp+0x2],ax
   1400202e0:	cmp    edi,0xffff
   1400202e6:	je     0x140020555
   1400202ec:	mov    eax,0xe8
   1400202f1:	cmp    edi,eax
   1400202f3:	jne    0x140020313
   1400202f5:	jmp    0x14002030f
   1400202f7:	cmp    WORD PTR [rbp+0x2],0x0
   1400202fc:	je     0x1400203b0
   140020302:	xor    eax,eax
   140020304:	mov    WORD PTR [rbp+0x2],ax
   140020308:	mov    eax,0xe8
   14002030d:	mov    edi,eax
   14002030f:	mov    WORD PTR [rbp+0x2],ax
   140020313:	mov    rcx,r13
   140020316:	sub    rcx,QWORD PTR [rbx+0x10]
   14002031a:	sar    rcx,1
   14002031d:	dec    ecx
   14002031f:	cmp    r9,r12
   140020322:	jae    0x1400205de
   140020328:	cmp    edi,0xff
   14002032e:	ja     0x140020344
   140020330:	mov    BYTE PTR [r9],dil
   140020333:	inc    r9
   140020336:	test   r8,r8
   140020339:	je     0x1400203a3
   14002033b:	mov    DWORD PTR [r8],ecx
   14002033e:	add    r8,0x4
   140020342:	jmp    0x1400203a3
   140020344:	cmp    edi,0xffff
   14002034a:	jbe    0x140020367
   14002034c:	mov    eax,edi
   14002034e:	inc    r9
   140020351:	shr    eax,0x10
   140020354:	mov    BYTE PTR [r9-0x1],al
   140020358:	test   r8,r8
   14002035b:	je     0x140020367
   14002035d:	dec    ecx
   14002035f:	add    r8,0x4
   140020363:	mov    DWORD PTR [r8-0x4],ecx
   140020367:	cmp    r9,r12
   14002036a:	jae    0x1400205a5
   140020370:	mov    eax,edi
   140020372:	inc    r9
   140020375:	shr    eax,0x8
   140020378:	mov    BYTE PTR [r9-0x1],al
   14002037c:	test   r8,r8
   14002037f:	je     0x140020388
   140020381:	mov    DWORD PTR [r8],ecx
   140020384:	add    r8,0x4
   140020388:	cmp    r9,r12
   14002038b:	jae    0x140020585
   140020391:	mov    BYTE PTR [r9],dil
   140020394:	inc    r9
   140020397:	test   r8,r8
   14002039a:	je     0x1400203a3
   14002039c:	mov    DWORD PTR [r8],ecx
   14002039f:	add    r8,0x4
   1400203a3:	cmp    DWORD PTR [rsi],0x0
   1400203a6:	jg     0x140020683
   1400203ac:	xor    edi,edi
   1400203ae:	jmp    0x1400203ba
   1400203b0:	xor    edi,edi
   1400203b2:	mov    WORD PTR [rbp+0x2],di
   1400203b6:	jmp    0x1400203ba
   1400203b8:	xor    edi,edi
   1400203ba:	cmp    r13,r15
   1400203bd:	jae    0x140020683
   1400203c3:	movzx  r11d,BYTE PTR [rsp+0x30]
   1400203c9:	lea    r10,[rip+0xfffffffffffdfc30]        # 0x140000000
   1400203d0:	jmp    0x14001fe90
   1400203d5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400203d9:	movsx  rax,BYTE PTR [rcx+0x5b]
   1400203de:	mov    BYTE PTR [rax+rcx*1+0x68],r10b
   1400203e3:	mov    rax,QWORD PTR [rbx+0x8]
   1400203e7:	inc    BYTE PTR [rax+0x5b]
   1400203ea:	mov    DWORD PTR [rsi],0xf
   1400203f0:	jmp    0x140020683
   1400203f5:	mov    rdx,QWORD PTR [rbx+0x8]
   1400203f9:	mov    ecx,r10d
   1400203fc:	movsx  rax,BYTE PTR [rdx+0x5b]
   140020401:	shr    ecx,0x8
   140020404:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   140020408:	mov    rax,QWORD PTR [rbx+0x8]
   14002040c:	inc    BYTE PTR [rax+0x5b]
   14002040f:	mov    rcx,QWORD PTR [rbx+0x8]
   140020413:	movsx  rax,BYTE PTR [rcx+0x5b]
   140020418:	mov    BYTE PTR [rax+rcx*1+0x68],r10b
   14002041d:	mov    rax,QWORD PTR [rbx+0x8]
   140020421:	inc    BYTE PTR [rax+0x5b]
   140020424:	mov    DWORD PTR [rsi],0xf
   14002042a:	jmp    0x140020683
   14002042f:	test   r10d,0xff0000
   140020436:	je     0x140020452
   140020438:	mov    rdx,QWORD PTR [rbx+0x8]
   14002043c:	mov    ecx,r10d
   14002043f:	movsx  rax,BYTE PTR [rdx+0x5b]
   140020444:	shr    ecx,0x10
   140020447:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   14002044b:	mov    rax,QWORD PTR [rbx+0x8]
   14002044f:	inc    BYTE PTR [rax+0x5b]
   140020452:	test   r10d,0xff00
   140020459:	je     0x140020475
   14002045b:	mov    rdx,QWORD PTR [rbx+0x8]
   14002045f:	mov    ecx,r10d
   140020462:	movsx  rax,BYTE PTR [rdx+0x5b]
   140020467:	shr    ecx,0x8
   14002046a:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   14002046e:	mov    rax,QWORD PTR [rbx+0x8]
   140020472:	inc    BYTE PTR [rax+0x5b]
   140020475:	mov    rcx,QWORD PTR [rbx+0x8]
   140020479:	movsx  rax,BYTE PTR [rcx+0x5b]
   14002047e:	mov    BYTE PTR [rax+rcx*1+0x68],r10b
   140020483:	mov    rax,QWORD PTR [rbx+0x8]
   140020487:	inc    BYTE PTR [rax+0x5b]
   14002048a:	mov    DWORD PTR [rsi],0xf
   140020490:	jmp    0x140020683
   140020495:	mov    rcx,QWORD PTR [rbx+0x8]
   140020499:	movsx  rax,BYTE PTR [rcx+0x5b]
   14002049e:	mov    BYTE PTR [rax+rcx*1+0x68],r10b
   1400204a3:	mov    rax,QWORD PTR [rbx+0x8]
   1400204a7:	inc    BYTE PTR [rax+0x5b]
   1400204aa:	mov    DWORD PTR [rsi],0xf
   1400204b0:	jmp    0x140020683
   1400204b5:	mov    rdx,QWORD PTR [rbx+0x8]
   1400204b9:	mov    ecx,r10d
   1400204bc:	movsx  rax,BYTE PTR [rdx+0x5b]
   1400204c1:	sar    ecx,0x8
   1400204c4:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   1400204c8:	mov    rax,QWORD PTR [rbx+0x8]
   1400204cc:	inc    BYTE PTR [rax+0x5b]
   1400204cf:	mov    rcx,QWORD PTR [rbx+0x8]
   1400204d3:	movsx  rax,BYTE PTR [rcx+0x5b]
   1400204d8:	mov    BYTE PTR [rax+rcx*1+0x68],r10b
   1400204dd:	mov    rax,QWORD PTR [rbx+0x8]
   1400204e1:	inc    BYTE PTR [rax+0x5b]
   1400204e4:	mov    DWORD PTR [rsi],0xf
   1400204ea:	jmp    0x140020683
   1400204ef:	test   r10d,0xff0000
   1400204f6:	je     0x140020512
   1400204f8:	mov    rdx,QWORD PTR [rbx+0x8]
   1400204fc:	mov    ecx,r10d
   1400204ff:	movsx  rax,BYTE PTR [rdx+0x5b]
   140020504:	sar    ecx,0x10
   140020507:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   14002050b:	mov    rax,QWORD PTR [rbx+0x8]
   14002050f:	inc    BYTE PTR [rax+0x5b]
   140020512:	test   r10d,0xff00
   140020519:	je     0x140020535
   14002051b:	mov    rdx,QWORD PTR [rbx+0x8]
   14002051f:	mov    ecx,r10d
   140020522:	movsx  rax,BYTE PTR [rdx+0x5b]
   140020527:	sar    ecx,0x8
   14002052a:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   14002052e:	mov    rax,QWORD PTR [rbx+0x8]
   140020532:	inc    BYTE PTR [rax+0x5b]
   140020535:	mov    rcx,QWORD PTR [rbx+0x8]
   140020539:	movsx  rax,BYTE PTR [rcx+0x5b]
   14002053e:	mov    BYTE PTR [rax+rcx*1+0x68],r10b
   140020543:	mov    rax,QWORD PTR [rbx+0x8]
   140020547:	inc    BYTE PTR [rax+0x5b]
   14002054a:	mov    DWORD PTR [rsi],0xf
   140020550:	jmp    0x140020683
   140020555:	mov    eax,r10d
   140020558:	and    eax,0xfffff800
   14002055d:	cmp    eax,0xd800
   140020562:	jne    0x14002057a
   140020564:	bt     r10d,0xa
   140020569:	jae    0x14002063d
   14002056f:	mov    DWORD PTR [rsi],0xc
   140020575:	jmp    0x14002067b
   14002057a:	mov    DWORD PTR [rsi],0xa
   140020580:	jmp    0x14002067b
   140020585:	mov    rcx,QWORD PTR [rbx+0x8]
   140020589:	movsx  rax,BYTE PTR [rcx+0x5b]
   14002058e:	mov    BYTE PTR [rax+rcx*1+0x68],dil
   140020593:	mov    rax,QWORD PTR [rbx+0x8]
   140020597:	inc    BYTE PTR [rax+0x5b]
   14002059a:	mov    DWORD PTR [rsi],0xf
   1400205a0:	jmp    0x140020683
   1400205a5:	mov    rdx,QWORD PTR [rbx+0x8]
   1400205a9:	mov    ecx,edi
   1400205ab:	movsx  rax,BYTE PTR [rdx+0x5b]
   1400205b0:	shr    ecx,0x8
   1400205b3:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   1400205b7:	mov    rax,QWORD PTR [rbx+0x8]
   1400205bb:	inc    BYTE PTR [rax+0x5b]
   1400205be:	mov    rcx,QWORD PTR [rbx+0x8]
   1400205c2:	movsx  rax,BYTE PTR [rcx+0x5b]
   1400205c7:	mov    BYTE PTR [rax+rcx*1+0x68],dil
   1400205cc:	mov    rax,QWORD PTR [rbx+0x8]
   1400205d0:	inc    BYTE PTR [rax+0x5b]
   1400205d3:	mov    DWORD PTR [rsi],0xf
   1400205d9:	jmp    0x140020683
   1400205de:	test   edi,0xff0000
   1400205e4:	je     0x1400205ff
   1400205e6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400205ea:	mov    ecx,edi
   1400205ec:	movsx  rax,BYTE PTR [rdx+0x5b]
   1400205f1:	shr    ecx,0x10
   1400205f4:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   1400205f8:	mov    rax,QWORD PTR [rbx+0x8]
   1400205fc:	inc    BYTE PTR [rax+0x5b]
   1400205ff:	test   edi,0xff00
   140020605:	je     0x140020620
   140020607:	mov    rdx,QWORD PTR [rbx+0x8]
   14002060b:	mov    ecx,edi
   14002060d:	movsx  rax,BYTE PTR [rdx+0x5b]
   140020612:	shr    ecx,0x8
   140020615:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   140020619:	mov    rax,QWORD PTR [rbx+0x8]
   14002061d:	inc    BYTE PTR [rax+0x5b]
   140020620:	mov    rcx,QWORD PTR [rbx+0x8]
   140020624:	movsx  rax,BYTE PTR [rcx+0x5b]
   140020629:	mov    BYTE PTR [rax+rcx*1+0x68],dil
   14002062e:	mov    rax,QWORD PTR [rbx+0x8]
   140020632:	inc    BYTE PTR [rax+0x5b]
   140020635:	mov    DWORD PTR [rsi],0xf
   14002063b:	jmp    0x140020683
   14002063d:	xor    edi,edi
   14002063f:	cmp    r13,r15
   140020642:	jae    0x140020679
   140020644:	movzx  ecx,WORD PTR [r13+0x0]
   140020649:	mov    eax,ecx
   14002064b:	and    eax,0xfffffc00
   140020650:	cmp    eax,0xdc00
   140020655:	jne    0x140020671
   140020657:	add    r10d,0xffff2809
   14002065e:	add    r13,0x2
   140020662:	mov    DWORD PTR [rsi],0xa
   140020668:	shl    r10d,0xa
   14002066c:	add    r10d,ecx
   14002066f:	jmp    0x14002067b
   140020671:	mov    DWORD PTR [rsi],0xc
   140020677:	jmp    0x14002067b
   140020679:	mov    DWORD PTR [rsi],edi
   14002067b:	mov    rax,QWORD PTR [rbx+0x8]
   14002067f:	mov    DWORD PTR [rax+0x54],r10d
   140020683:	mov    r14,QWORD PTR [rsp+0x48]
   140020688:	mov    rdi,QWORD PTR [rsp+0x40]
   14002068d:	mov    rbp,QWORD PTR [rsp+0x38]
   140020692:	mov    QWORD PTR [rbx+0x10],r13
   140020696:	mov    QWORD PTR [rbx+0x20],r9
   14002069a:	pop    r15
   14002069c:	pop    r13
   14002069e:	pop    r12
   1400206a0:	pop    rsi
   1400206a1:	pop    rbx
   1400206a2:	ret    
   1400206a3:	mov    DWORD PTR [rdx],0x1
   1400206a9:	pop    r15
   1400206ab:	pop    r13
   1400206ad:	pop    r12
   1400206af:	pop    rsi
   1400206b0:	pop    rbx
   1400206b1:	ret    
   1400206b2:	int3   
   1400206b3:	int3   
   1400206b4:	int3   
   1400206b5:	int3   
   1400206b6:	int3   
   1400206b7:	int3   
   1400206b8:	int3   
   1400206b9:	int3   
   1400206ba:	int3   
   1400206bb:	int3   
   1400206bc:	int3   
   1400206bd:	int3   
   1400206be:	int3   
   1400206bf:	int3   
   1400206c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400206c5:	mov    QWORD PTR [rsp+0x20],rbp
   1400206ca:	push   rsi
   1400206cb:	push   rdi
   1400206cc:	push   r12
   1400206ce:	push   r13
   1400206d0:	mov    rdi,QWORD PTR [rcx+0x8]
   1400206d4:	mov    rbp,QWORD PTR [rcx+0x10]
   1400206d8:	mov    rbx,QWORD PTR [rcx+0x20]
   1400206dc:	mov    r12,QWORD PTR [rcx+0x18]
   1400206e0:	mov    r13,QWORD PTR [rcx+0x28]
   1400206e4:	mov    rsi,rdx
   1400206e7:	mov    r8,rcx
   1400206ea:	test   rdi,rdi
   1400206ed:	je     0x14002135b
   1400206f3:	cmp    DWORD PTR [rdx],0x0
   1400206f6:	mov    r10,QWORD PTR [rdi+0x10]
   1400206fa:	jg     0x140021342
   140020700:	mov    QWORD PTR [rsp+0x28],r14
   140020705:	mov    r9d,0xef
   14002070b:	mov    QWORD PTR [rsp+0x30],r15
   140020710:	lea    r14,[rip+0xfffffffffffdf8e9]        # 0x140000000
   140020717:	mov    edx,0x300
   14002071c:	mov    r15d,0xfffe
   140020722:	lea    ecx,[r9+0x1]
   140020726:	cmp    rbp,r12
   140020729:	jae    0x140021225
   14002072f:	cmp    rbx,r13
   140020732:	jae    0x140021288
   140020738:	movzx  eax,WORD PTR [r10]
   14002073c:	movzx  r11d,BYTE PTR [rbp+0x0]
   140020741:	inc    rbp
   140020744:	cmp    ax,r9w
   140020748:	jne    0x1400207c0
   14002074a:	mov    eax,0x4b
   14002074f:	sub    al,r11b
   140020752:	cmp    al,0x9
   140020754:	ja     0x14002078a
   140020756:	movzx  ecx,r11b
   14002075a:	mov    edx,0x80
   14002075f:	and    ecx,0xf
   140020762:	movzx  eax,WORD PTR [r14+rcx*4+0x4be60]
   14002076b:	imul   ax,dx
   14002076f:	mov    WORD PTR [r10+0x8],ax
   140020774:	movzx  eax,WORD PTR [r14+rcx*4+0x4be62]
   14002077d:	mov    WORD PTR [r10],r15w
   140020781:	mov    DWORD PTR [r10+0x10],eax
   140020785:	jmp    0x1400211e7
   14002078a:	cmp    r11b,0x40
   14002078e:	jne    0x1400207ab
   140020790:	movzx  eax,WORD PTR [r10+0x4]
   140020795:	mov    WORD PTR [r10],r15w
   140020799:	mov    WORD PTR [r10+0x8],ax
   14002079e:	mov    eax,DWORD PTR [r10+0x14]
   1400207a2:	mov    DWORD PTR [r10+0x10],eax
   1400207a6:	jmp    0x1400211e7
   1400207ab:	lea    eax,[r11-0x21]
   1400207af:	cmp    al,0x1e
   1400207b1:	ja     0x1400211ff
   1400207b7:	mov    WORD PTR [r10],r15w
   1400207bb:	jmp    0x1400211e7
   1400207c0:	cmp    ax,cx
   1400207c3:	jne    0x1400208ff
   1400207c9:	mov    eax,0xee
   1400207ce:	sub    al,r11b
   1400207d1:	cmp    al,0x4d
   1400207d3:	ja     0x140021213
   1400207d9:	cmp    r11b,0xbf
   1400207dd:	je     0x1400207e9
   1400207df:	cmp    r11b,0xb8
   1400207e3:	jne    0x14002120b
   1400207e9:	cmp    r11b,0xbf
   1400207ed:	mov    eax,0x970
   1400207f2:	mov    r9d,0x952
   1400207f8:	cmove  r9d,eax
   1400207fc:	movzx  eax,r9b
   140020800:	movzx  eax,BYTE PTR [rax+r14*1+0x4ba90]
   140020809:	test   BYTE PTR [r10+0x10],al
   14002080d:	je     0x14002120b
   140020813:	cmp    DWORD PTR [r10+0x2c],0x0
   140020818:	mov    WORD PTR [r10],r15w
   14002081c:	je     0x140020876
   14002081e:	cmp    rbx,QWORD PTR [r8+0x28]
   140020822:	jae    0x14002084b
   140020824:	movzx  eax,WORD PTR [r10+0x2c]
   140020829:	add    rbx,0x2
   14002082d:	mov    WORD PTR [rbx-0x2],ax
   140020831:	mov    rcx,QWORD PTR [r8+0x30]
   140020835:	test   rcx,rcx
   140020838:	je     0x14002086e
   14002083a:	mov    eax,ebp
   14002083c:	sub    eax,DWORD PTR [r8+0x10]
   140020840:	dec    eax
   140020842:	mov    DWORD PTR [rcx],eax
   140020844:	add    QWORD PTR [r8+0x30],0x4
   140020849:	jmp    0x14002086e
   14002084b:	mov    rdx,QWORD PTR [r8+0x8]
   14002084f:	movzx  eax,WORD PTR [r10+0x2c]
   140020854:	movsx  rcx,BYTE PTR [rdx+0x5d]
   140020859:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   140020861:	mov    rax,QWORD PTR [r8+0x8]
   140020865:	inc    BYTE PTR [rax+0x5d]
   140020868:	mov    DWORD PTR [rsi],0xf
   14002086e:	mov    DWORD PTR [r10+0x2c],0x0
   140020876:	cmp    r9d,0xa0
   14002087d:	jbe    0x1400208ab
   14002087f:	cmp    r9d,0x200d
   140020886:	je     0x1400208ab
   140020888:	cmp    r9d,0x200c
   14002088f:	je     0x1400208ab
   140020891:	cmp    r9d,0x964
   140020898:	je     0x1400208ab
   14002089a:	cmp    r9d,0x965
   1400208a1:	je     0x1400208ab
   1400208a3:	movzx  eax,WORD PTR [r10+0x8]
   1400208a8:	add    r9d,eax
   1400208ab:	cmp    rbx,QWORD PTR [r8+0x28]
   1400208af:	jae    0x1400208db
   1400208b1:	mov    WORD PTR [rbx],r9w
   1400208b5:	mov    rcx,QWORD PTR [r8+0x30]
   1400208b9:	add    rbx,0x2
   1400208bd:	test   rcx,rcx
   1400208c0:	je     0x1400211e7
   1400208c6:	mov    eax,ebp
   1400208c8:	sub    eax,DWORD PTR [r8+0x10]
   1400208cc:	sub    eax,0x2
   1400208cf:	mov    DWORD PTR [rcx],eax
   1400208d1:	add    QWORD PTR [r8+0x30],0x4
   1400208d6:	jmp    0x1400211e7
   1400208db:	mov    rcx,QWORD PTR [r8+0x8]
   1400208df:	movsx  rax,BYTE PTR [rcx+0x5d]
   1400208e4:	mov    WORD PTR [rcx+rax*2+0x90],r9w
   1400208ed:	mov    rax,QWORD PTR [r8+0x8]
   1400208f1:	inc    BYTE PTR [rax+0x5d]
   1400208f4:	mov    DWORD PTR [rsi],0xf
   1400208fa:	jmp    0x1400211e7
   1400208ff:	mov    ecx,0xd9
   140020904:	cmp    ax,cx
   140020907:	jne    0x140020a05
   14002090d:	cmp    r11b,0xe8
   140020911:	mov    r9d,0x200d
   140020917:	mov    eax,0x20
   14002091c:	cmove  r9d,eax
   140020920:	cmp    DWORD PTR [r10+0x2c],0x0
   140020925:	je     0x140020984
   140020927:	cmp    rbx,QWORD PTR [r8+0x28]
   14002092b:	jae    0x140020954
   14002092d:	movzx  eax,WORD PTR [r10+0x2c]
   140020932:	add    rbx,0x2
   140020936:	mov    WORD PTR [rbx-0x2],ax
   14002093a:	mov    rcx,QWORD PTR [r8+0x30]
   14002093e:	test   rcx,rcx
   140020941:	je     0x14002097c
   140020943:	mov    eax,ebp
   140020945:	sub    eax,DWORD PTR [r8+0x10]
   140020949:	dec    eax
   14002094b:	mov    DWORD PTR [rcx],eax
   14002094d:	add    QWORD PTR [r8+0x30],0x4
   140020952:	jmp    0x14002097c
   140020954:	mov    rdx,QWORD PTR [r8+0x8]
   140020958:	movzx  eax,WORD PTR [r10+0x2c]
   14002095d:	movsx  rcx,BYTE PTR [rdx+0x5d]
   140020962:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   14002096a:	mov    rax,QWORD PTR [r8+0x8]
   14002096e:	mov    edx,0x300
   140020973:	inc    BYTE PTR [rax+0x5d]
   140020976:	mov    DWORD PTR [rsi],0xf
   14002097c:	mov    DWORD PTR [r10+0x2c],0x0
   140020984:	cmp    r9d,0xa0
   14002098b:	jbe    0x1400209b9
   14002098d:	cmp    r9d,0x200d
   140020994:	je     0x1400209b9
   140020996:	cmp    r9d,0x200c
   14002099d:	je     0x1400209b9
   14002099f:	cmp    r9d,0x964
   1400209a6:	je     0x1400209b9
   1400209a8:	cmp    r9d,0x965
   1400209af:	je     0x1400209b9
   1400209b1:	movzx  eax,WORD PTR [r10+0x8]
   1400209b6:	add    r9d,eax
   1400209b9:	cmp    rbx,QWORD PTR [r8+0x28]
   1400209bd:	jae    0x1400209e2
   1400209bf:	mov    WORD PTR [rbx],r9w
   1400209c3:	mov    rcx,QWORD PTR [r8+0x30]
   1400209c7:	add    rbx,0x2
   1400209cb:	test   rcx,rcx
   1400209ce:	je     0x140020a01
   1400209d0:	mov    eax,ebp
   1400209d2:	sub    eax,DWORD PTR [r8+0x10]
   1400209d6:	sub    eax,0x2
   1400209d9:	mov    DWORD PTR [rcx],eax
   1400209db:	add    QWORD PTR [r8+0x30],0x4
   1400209e0:	jmp    0x140020a01
   1400209e2:	mov    rcx,QWORD PTR [r8+0x8]
   1400209e6:	movsx  rax,BYTE PTR [rcx+0x5d]
   1400209eb:	mov    WORD PTR [rcx+rax*2+0x90],r9w
   1400209f4:	mov    rax,QWORD PTR [r8+0x8]
   1400209f8:	inc    BYTE PTR [rax+0x5d]
   1400209fb:	mov    DWORD PTR [rsi],0xf
   140020a01:	mov    WORD PTR [r10],r15w
   140020a05:	movzx  eax,r11b
   140020a09:	add    eax,0xfffffff6
   140020a0c:	cmp    eax,0xe6
   140020a11:	ja     0x140020f48
   140020a17:	cdqe   
   140020a19:	movzx  eax,BYTE PTR [r14+rax*1+0x21390]
   140020a22:	mov    ecx,DWORD PTR [r14+rax*4+0x21374]
   140020a2a:	add    rcx,r14
   140020a2d:	jmp    rcx
   140020a2f:	movzx  eax,r11b
   140020a33:	mov    WORD PTR [r10],ax
   140020a37:	cmp    DWORD PTR [rdi+0x48],0xffff
   140020a3e:	je     0x1400211e7
   140020a44:	cmp    DWORD PTR [r10+0x2c],0x0
   140020a49:	je     0x140020aa3
   140020a4b:	cmp    rbx,QWORD PTR [r8+0x28]
   140020a4f:	jae    0x140020a78
   140020a51:	movzx  eax,WORD PTR [r10+0x2c]
   140020a56:	add    rbx,0x2
   140020a5a:	mov    WORD PTR [rbx-0x2],ax
   140020a5e:	mov    rcx,QWORD PTR [r8+0x30]
   140020a62:	test   rcx,rcx
   140020a65:	je     0x140020a9b
   140020a67:	mov    eax,ebp
   140020a69:	sub    eax,DWORD PTR [r8+0x10]
   140020a6d:	dec    eax
   140020a6f:	mov    DWORD PTR [rcx],eax
   140020a71:	add    QWORD PTR [r8+0x30],0x4
   140020a76:	jmp    0x140020a9b
   140020a78:	mov    rdx,QWORD PTR [r8+0x8]
   140020a7c:	movzx  eax,WORD PTR [r10+0x2c]
   140020a81:	movsx  rcx,BYTE PTR [rdx+0x5d]
   140020a86:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   140020a8e:	mov    rax,QWORD PTR [r8+0x8]
   140020a92:	inc    BYTE PTR [rax+0x5d]
   140020a95:	mov    DWORD PTR [rsi],0xf
   140020a9b:	mov    DWORD PTR [r10+0x2c],0x0
   140020aa3:	mov    ecx,DWORD PTR [rdi+0x48]
   140020aa6:	cmp    ecx,0xa0
   140020aac:	jle    0x140020ad8
   140020aae:	cmp    ecx,0x200d
   140020ab4:	je     0x140020ad8
   140020ab6:	cmp    ecx,0x200c
   140020abc:	je     0x140020ad8
   140020abe:	cmp    ecx,0x964
   140020ac4:	je     0x140020ad8
   140020ac6:	cmp    ecx,0x965
   140020acc:	je     0x140020ad8
   140020ace:	movzx  eax,WORD PTR [r10+0x8]
   140020ad3:	add    eax,ecx
   140020ad5:	mov    DWORD PTR [rdi+0x48],eax
   140020ad8:	cmp    rbx,QWORD PTR [r8+0x28]
   140020adc:	jae    0x140020b0f
   140020ade:	movzx  eax,WORD PTR [rdi+0x48]
   140020ae2:	add    rbx,0x2
   140020ae6:	mov    WORD PTR [rbx-0x2],ax
   140020aea:	mov    rcx,QWORD PTR [r8+0x30]
   140020aee:	test   rcx,rcx
   140020af1:	je     0x140020b31
   140020af3:	mov    eax,ebp
   140020af5:	sub    eax,DWORD PTR [r8+0x10]
   140020af9:	sub    eax,0x2
   140020afc:	mov    DWORD PTR [rcx],eax
   140020afe:	add    QWORD PTR [r8+0x30],0x4
   140020b03:	mov    DWORD PTR [rdi+0x48],0xffff
   140020b0a:	jmp    0x1400211e7
   140020b0f:	mov    rdx,QWORD PTR [r8+0x8]
   140020b13:	movzx  eax,WORD PTR [rdi+0x48]
   140020b17:	movsx  rcx,BYTE PTR [rdx+0x5d]
   140020b1c:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   140020b24:	mov    rax,QWORD PTR [r8+0x8]
   140020b28:	inc    BYTE PTR [rax+0x5d]
   140020b2b:	mov    DWORD PTR [rsi],0xf
   140020b31:	mov    DWORD PTR [rdi+0x48],0xffff
   140020b38:	jmp    0x1400211e7
   140020b3d:	mov    eax,0xea
   140020b42:	cmp    WORD PTR [r10],ax
   140020b46:	jne    0x140020b5e
   140020b48:	mov    WORD PTR [r10],r15w
   140020b4c:	mov    r9d,0x965
   140020b52:	mov    DWORD PTR [rdi+0x48],0xffff
   140020b59:	jmp    0x1400211c2
   140020b5e:	movzx  eax,r11b
   140020b62:	movzx  r9d,WORD PTR [r14+rax*2+0x4bc10]
   140020b6b:	cmp    r11b,0xa0
   140020b6f:	jbe    0x140020b9a
   140020b71:	movzx  eax,r9b
   140020b75:	movzx  eax,BYTE PTR [rax+r14*1+0x4ba90]
   140020b7e:	test   BYTE PTR [r10+0x10],al
   140020b82:	jne    0x140020b9a
   140020b84:	cmp    WORD PTR [r10+0x8],dx
   140020b89:	jne    0x140020b94
   140020b8b:	cmp    r9d,0x931
   140020b92:	je     0x140020b9a
   140020b94:	mov    r9d,0xffff
   140020b9a:	movzx  eax,r11b
   140020b9e:	mov    WORD PTR [r10],ax
   140020ba2:	jmp    0x140020f8c
   140020ba7:	mov    eax,0xe8
   140020bac:	cmp    WORD PTR [r10],ax
   140020bb0:	jne    0x140020bc1
   140020bb2:	mov    r9d,0x200c
   140020bb8:	mov    WORD PTR [r10],r15w
   140020bbc:	jmp    0x140020f8c
   140020bc1:	movzx  eax,r11b
   140020bc5:	movzx  r9d,WORD PTR [r14+rax*2+0x4bc10]
   140020bce:	cmp    r11b,0xa0
   140020bd2:	jbe    0x140020bfd
   140020bd4:	movzx  eax,r9b
   140020bd8:	movzx  eax,BYTE PTR [rax+r14*1+0x4ba90]
   140020be1:	test   BYTE PTR [r10+0x10],al
   140020be5:	jne    0x140020bfd
   140020be7:	cmp    WORD PTR [r10+0x8],dx
   140020bec:	jne    0x140020bf7
   140020bee:	cmp    r9d,0x931
   140020bf5:	je     0x140020bfd
   140020bf7:	mov    r9d,0xffff
   140020bfd:	movzx  eax,r11b
   140020c01:	mov    WORD PTR [r10],ax
   140020c05:	jmp    0x140020f8c
   140020c0a:	movzx  eax,r11b
   140020c0e:	mov    BYTE PTR [r10+0x19],0x1
   140020c13:	movzx  r9d,WORD PTR [r14+rax*2+0x4bc10]
   140020c1c:	cmp    r11b,0xa0
   140020c20:	jbe    0x140020c4b
   140020c22:	movzx  eax,r9b
   140020c26:	movzx  eax,BYTE PTR [rax+r14*1+0x4ba90]
   140020c2f:	test   BYTE PTR [r10+0x10],al
   140020c33:	jne    0x140020c4b
   140020c35:	cmp    WORD PTR [r10+0x8],dx
   140020c3a:	jne    0x140020c45
   140020c3c:	cmp    r9d,0x931
   140020c43:	je     0x140020c4b
   140020c45:	mov    r9d,0xffff
   140020c4b:	movzx  eax,r11b
   140020c4f:	mov    WORD PTR [r10],ax
   140020c53:	jmp    0x140020f8c
   140020c58:	movzx  ecx,BYTE PTR [r10]
   140020c5c:	mov    eax,0x1
   140020c61:	cmp    WORD PTR [r14+rax*4+0x4be10],cx
   140020c6a:	je     0x140020cbe
   140020c6c:	inc    rax
   140020c6f:	cmp    rax,0x2
   140020c73:	jl     0x140020c61
   140020c75:	movzx  eax,r11b
   140020c79:	movzx  r9d,WORD PTR [r14+rax*2+0x4bc10]
   140020c82:	cmp    r11b,0xa0
   140020c86:	jbe    0x140020cb1
   140020c88:	movzx  eax,r9b
   140020c8c:	movzx  eax,BYTE PTR [rax+r14*1+0x4ba90]
   140020c95:	test   BYTE PTR [r10+0x10],al
   140020c99:	jne    0x140020cb1
   140020c9b:	cmp    WORD PTR [r10+0x8],dx
   140020ca0:	jne    0x140020cab
   140020ca2:	cmp    r9d,0x931
   140020ca9:	je     0x140020cb1
   140020cab:	mov    r9d,0xffff
   140020cb1:	movzx  eax,r11b
   140020cb5:	mov    WORD PTR [r10],ax
   140020cb9:	jmp    0x140020f8c
   140020cbe:	movzx  r9d,WORD PTR [r14+rax*4+0x4be12]
   140020cc7:	movzx  eax,r9b
   140020ccb:	movzx  eax,BYTE PTR [rax+r14*1+0x4ba90]
   140020cd4:	test   BYTE PTR [r10+0x10],al
   140020cd8:	je     0x140020c75
   140020cda:	mov    WORD PTR [r10],r15w
   140020cde:	mov    DWORD PTR [rdi+0x48],0xffff
   140020ce5:	jmp    0x1400211b5
   140020cea:	movzx  eax,WORD PTR [r10]
   140020cee:	mov    ecx,0xe8
   140020cf3:	cmp    ax,cx
   140020cf6:	jne    0x140020d07
   140020cf8:	mov    r9d,0x200d
   140020cfe:	mov    WORD PTR [r10],r15w
   140020d02:	jmp    0x140020f8c
   140020d07:	mov    ecx,0x100
   140020d0c:	cmp    WORD PTR [r10+0x8],cx
   140020d11:	jne    0x140020f26
   140020d17:	mov    ecx,0xc0
   140020d1c:	cmp    ax,cx
   140020d1f:	jne    0x140020f26
   140020d25:	cmp    DWORD PTR [r10+0x2c],0x0
   140020d2a:	je     0x140020d84
   140020d2c:	cmp    rbx,QWORD PTR [r8+0x28]
   140020d30:	jae    0x140020d59
   140020d32:	movzx  eax,WORD PTR [r10+0x2c]
   140020d37:	add    rbx,0x2
   140020d3b:	mov    WORD PTR [rbx-0x2],ax
   140020d3f:	mov    rcx,QWORD PTR [r8+0x30]
   140020d43:	test   rcx,rcx
   140020d46:	je     0x140020d7c
   140020d48:	mov    eax,ebp
   140020d4a:	sub    eax,DWORD PTR [r8+0x10]
   140020d4e:	dec    eax
   140020d50:	mov    DWORD PTR [rcx],eax
   140020d52:	add    QWORD PTR [r8+0x30],0x4
   140020d57:	jmp    0x140020d7c
   140020d59:	mov    rdx,QWORD PTR [r8+0x8]
   140020d5d:	movzx  eax,WORD PTR [r10+0x2c]
   140020d62:	movsx  rcx,BYTE PTR [rdx+0x5d]
   140020d67:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   140020d6f:	mov    rax,QWORD PTR [r8+0x8]
   140020d73:	inc    BYTE PTR [rax+0x5d]
   140020d76:	mov    DWORD PTR [rsi],0xf
   140020d7c:	mov    DWORD PTR [r10+0x2c],0x0
   140020d84:	cmp    rbx,QWORD PTR [r8+0x28]
   140020d88:	jae    0x140020eb9
   140020d8e:	mov    eax,0xa5c
   140020d93:	add    rbx,0x2
   140020d97:	mov    WORD PTR [rbx-0x2],ax
   140020d9b:	mov    rcx,QWORD PTR [r8+0x30]
   140020d9f:	test   rcx,rcx
   140020da2:	je     0x140020db4
   140020da4:	mov    eax,ebp
   140020da6:	sub    eax,DWORD PTR [r8+0x10]
   140020daa:	sub    eax,0x2
   140020dad:	mov    DWORD PTR [rcx],eax
   140020daf:	add    QWORD PTR [r8+0x30],0x4
   140020db4:	cmp    DWORD PTR [rsi],0x0
   140020db7:	jg     0x140020edc
   140020dbd:	cmp    rbx,QWORD PTR [r8+0x28]
   140020dc1:	jae    0x140020e69
   140020dc7:	mov    eax,0xa4d
   140020dcc:	add    rbx,0x2
   140020dd0:	mov    WORD PTR [rbx-0x2],ax
   140020dd4:	mov    rcx,QWORD PTR [r8+0x30]
   140020dd8:	test   rcx,rcx
   140020ddb:	je     0x140020ded
   140020ddd:	mov    eax,ebp
   140020ddf:	sub    eax,DWORD PTR [r8+0x10]
   140020de3:	sub    eax,0x2
   140020de6:	mov    DWORD PTR [rcx],eax
   140020de8:	add    QWORD PTR [r8+0x30],0x4
   140020ded:	cmp    DWORD PTR [rsi],0x0
   140020df0:	jg     0x140020e8c
   140020df6:	cmp    rbx,QWORD PTR [r8+0x28]
   140020dfa:	jae    0x140020e36
   140020dfc:	mov    eax,0xa39
   140020e01:	add    rbx,0x2
   140020e05:	mov    WORD PTR [rbx-0x2],ax
   140020e09:	mov    rcx,QWORD PTR [r8+0x30]
   140020e0d:	test   rcx,rcx
   140020e10:	je     0x140020f16
   140020e16:	mov    eax,ebp
   140020e18:	sub    eax,DWORD PTR [r8+0x10]
   140020e1c:	sub    eax,0x2
   140020e1f:	mov    DWORD PTR [rcx],eax
   140020e21:	add    QWORD PTR [r8+0x30],0x4
   140020e26:	mov    DWORD PTR [rdi+0x48],0xffff
   140020e2d:	mov    WORD PTR [r10],r15w
   140020e31:	jmp    0x1400211e7
   140020e36:	mov    rcx,QWORD PTR [r8+0x8]
   140020e3a:	mov    edx,0xa39
   140020e3f:	movsx  rax,BYTE PTR [rcx+0x5d]
   140020e44:	mov    WORD PTR [rcx+rax*2+0x90],dx
   140020e4c:	mov    rax,QWORD PTR [r8+0x8]
   140020e50:	inc    BYTE PTR [rax+0x5d]
   140020e53:	mov    DWORD PTR [rsi],0xf
   140020e59:	mov    DWORD PTR [rdi+0x48],0xffff
   140020e60:	mov    WORD PTR [r10],r15w
   140020e64:	jmp    0x1400211e7
   140020e69:	mov    rcx,QWORD PTR [r8+0x8]
   140020e6d:	mov    edx,0xa4d
   140020e72:	movsx  rax,BYTE PTR [rcx+0x5d]
   140020e77:	mov    WORD PTR [rcx+rax*2+0x90],dx
   140020e7f:	mov    rax,QWORD PTR [r8+0x8]
   140020e83:	inc    BYTE PTR [rax+0x5d]
   140020e86:	mov    DWORD PTR [rsi],0xf
   140020e8c:	mov    rcx,QWORD PTR [r8+0x8]
   140020e90:	mov    edx,0xa39
   140020e95:	movsx  rax,BYTE PTR [rcx+0x5d]
   140020e9a:	mov    WORD PTR [rcx+rax*2+0x90],dx
   140020ea2:	mov    rax,QWORD PTR [r8+0x8]
   140020ea6:	inc    BYTE PTR [rax+0x5d]
   140020ea9:	mov    DWORD PTR [rdi+0x48],0xffff
   140020eb0:	mov    WORD PTR [r10],r15w
   140020eb4:	jmp    0x1400211e7
   140020eb9:	mov    rcx,QWORD PTR [r8+0x8]
   140020ebd:	mov    edx,0xa5c
   140020ec2:	movsx  rax,BYTE PTR [rcx+0x5d]
   140020ec7:	mov    WORD PTR [rcx+rax*2+0x90],dx
   140020ecf:	mov    rax,QWORD PTR [r8+0x8]
   140020ed3:	inc    BYTE PTR [rax+0x5d]
   140020ed6:	mov    DWORD PTR [rsi],0xf
   140020edc:	mov    rcx,QWORD PTR [r8+0x8]
   140020ee0:	mov    edx,0xa4d
   140020ee5:	movsx  rax,BYTE PTR [rcx+0x5d]
   140020eea:	mov    WORD PTR [rcx+rax*2+0x90],dx
   140020ef2:	mov    rax,QWORD PTR [r8+0x8]
   140020ef6:	mov    edx,0xa39
   140020efb:	inc    BYTE PTR [rax+0x5d]
   140020efe:	mov    rcx,QWORD PTR [r8+0x8]
   140020f02:	movsx  rax,BYTE PTR [rcx+0x5d]
   140020f07:	mov    WORD PTR [rcx+rax*2+0x90],dx
   140020f0f:	mov    rax,QWORD PTR [r8+0x8]
   140020f13:	inc    BYTE PTR [rax+0x5d]
   140020f16:	mov    DWORD PTR [rdi+0x48],0xffff
   140020f1d:	mov    WORD PTR [r10],r15w
   140020f21:	jmp    0x1400211e7
   140020f26:	movzx  ecx,BYTE PTR [r10]
   140020f2a:	mov    eax,0x1
   140020f2f:	nop
   140020f30:	cmp    WORD PTR [r14+rax*4+0x4be20],cx
   140020f39:	je     0x140020fdc
   140020f3f:	inc    rax
   140020f42:	cmp    rax,0x10
   140020f46:	jl     0x140020f30
   140020f48:	movzx  eax,r11b
   140020f4c:	movzx  r9d,WORD PTR [r14+rax*2+0x4bc10]
   140020f55:	cmp    r11b,0xa0
   140020f59:	jbe    0x140020f84
   140020f5b:	movzx  eax,r9b
   140020f5f:	movzx  eax,BYTE PTR [rax+r14*1+0x4ba90]
   140020f68:	test   BYTE PTR [r10+0x10],al
   140020f6c:	jne    0x140020f84
   140020f6e:	cmp    WORD PTR [r10+0x8],dx
   140020f73:	jne    0x140020f7e
   140020f75:	cmp    r9d,0x931
   140020f7c:	je     0x140020f84
   140020f7e:	mov    r9d,0xffff
   140020f84:	movzx  eax,r11b
   140020f88:	mov    WORD PTR [r10],ax
   140020f8c:	cmp    DWORD PTR [rdi+0x48],0xffff
   140020f93:	je     0x1400211b5
   140020f99:	cmp    DWORD PTR [r10+0x2c],0x0
   140020f9e:	je     0x14002112a
   140020fa4:	cmp    rbx,QWORD PTR [r8+0x28]
   140020fa8:	jae    0x1400210ff
   140020fae:	movzx  eax,WORD PTR [r10+0x2c]
   140020fb3:	add    rbx,0x2
   140020fb7:	mov    WORD PTR [rbx-0x2],ax
   140020fbb:	mov    rcx,QWORD PTR [r8+0x30]
   140020fbf:	test   rcx,rcx
   140020fc2:	je     0x140021122
   140020fc8:	mov    eax,ebp
   140020fca:	sub    eax,DWORD PTR [r8+0x10]
   140020fce:	dec    eax
   140020fd0:	mov    DWORD PTR [rcx],eax
   140020fd2:	add    QWORD PTR [r8+0x30],0x4
   140020fd7:	jmp    0x140021122
   140020fdc:	movzx  r9d,WORD PTR [r14+rax*4+0x4be22]
   140020fe5:	movzx  eax,r9b
   140020fe9:	movzx  eax,BYTE PTR [rax+r14*1+0x4ba90]
   140020ff2:	test   BYTE PTR [r10+0x10],al
   140020ff6:	je     0x140020f48
   140020ffc:	mov    eax,0x100
   140021001:	mov    WORD PTR [r10],r15w
   140021005:	mov    DWORD PTR [rdi+0x48],0xffff
   14002100c:	cmp    WORD PTR [r10+0x8],ax
   140021011:	jne    0x1400211b5
   140021017:	cmp    DWORD PTR [r10+0x2c],0x0
   14002101c:	je     0x140021076
   14002101e:	cmp    rbx,QWORD PTR [r8+0x28]
   140021022:	jae    0x14002104b
   140021024:	movzx  eax,WORD PTR [r10+0x2c]
   140021029:	add    rbx,0x2
   14002102d:	mov    WORD PTR [rbx-0x2],ax
   140021031:	mov    rcx,QWORD PTR [r8+0x30]
   140021035:	test   rcx,rcx
   140021038:	je     0x14002106e
   14002103a:	mov    eax,ebp
   14002103c:	sub    eax,DWORD PTR [r8+0x10]
   140021040:	dec    eax
   140021042:	mov    DWORD PTR [rcx],eax
   140021044:	add    QWORD PTR [r8+0x30],0x4
   140021049:	jmp    0x14002106e
   14002104b:	mov    rdx,QWORD PTR [r8+0x8]
   14002104f:	movzx  eax,WORD PTR [r10+0x2c]
   140021054:	movsx  rcx,BYTE PTR [rdx+0x5d]
   140021059:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   140021061:	mov    rax,QWORD PTR [r8+0x8]
   140021065:	inc    BYTE PTR [rax+0x5d]
   140021068:	mov    DWORD PTR [rsi],0xf
   14002106e:	mov    DWORD PTR [r10+0x2c],0x0
   140021076:	cmp    r9d,0xa0
   14002107d:	jbe    0x1400210ab
   14002107f:	cmp    r9d,0x200d
   140021086:	je     0x1400210ab
   140021088:	cmp    r9d,0x200c
   14002108f:	je     0x1400210ab
   140021091:	cmp    r9d,0x964
   140021098:	je     0x1400210ab
   14002109a:	cmp    r9d,0x965
   1400210a1:	je     0x1400210ab
   1400210a3:	movzx  eax,WORD PTR [r10+0x8]
   1400210a8:	add    r9d,eax
   1400210ab:	cmp    rbx,QWORD PTR [r8+0x28]
   1400210af:	jae    0x1400210db
   1400210b1:	mov    WORD PTR [rbx],r9w
   1400210b5:	mov    rcx,QWORD PTR [r8+0x30]
   1400210b9:	add    rbx,0x2
   1400210bd:	test   rcx,rcx
   1400210c0:	je     0x1400211e7
   1400210c6:	mov    eax,ebp
   1400210c8:	sub    eax,DWORD PTR [r8+0x10]
   1400210cc:	sub    eax,0x2
   1400210cf:	mov    DWORD PTR [rcx],eax
   1400210d1:	add    QWORD PTR [r8+0x30],0x4
   1400210d6:	jmp    0x1400211e7
   1400210db:	mov    rcx,QWORD PTR [r8+0x8]
   1400210df:	movsx  rax,BYTE PTR [rcx+0x5d]
   1400210e4:	mov    WORD PTR [rcx+rax*2+0x90],r9w
   1400210ed:	mov    rax,QWORD PTR [r8+0x8]
   1400210f1:	inc    BYTE PTR [rax+0x5d]
   1400210f4:	mov    DWORD PTR [rsi],0xf
   1400210fa:	jmp    0x1400211e7
   1400210ff:	mov    rdx,QWORD PTR [r8+0x8]
   140021103:	movzx  eax,WORD PTR [r10+0x2c]
   140021108:	movsx  rcx,BYTE PTR [rdx+0x5d]
   14002110d:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   140021115:	mov    rax,QWORD PTR [r8+0x8]
   140021119:	inc    BYTE PTR [rax+0x5d]
   14002111c:	mov    DWORD PTR [rsi],0xf
   140021122:	mov    DWORD PTR [r10+0x2c],0x0
   14002112a:	mov    ecx,DWORD PTR [rdi+0x48]
   14002112d:	cmp    ecx,0xa0
   140021133:	jle    0x14002115f
   140021135:	cmp    ecx,0x200d
   14002113b:	je     0x14002115f
   14002113d:	cmp    ecx,0x200c
   140021143:	je     0x14002115f
   140021145:	cmp    ecx,0x964
   14002114b:	je     0x14002115f
   14002114d:	cmp    ecx,0x965
   140021153:	je     0x14002115f
   140021155:	movzx  eax,WORD PTR [r10+0x8]
   14002115a:	add    eax,ecx
   14002115c:	mov    DWORD PTR [rdi+0x48],eax
   14002115f:	cmp    rbx,QWORD PTR [r8+0x28]
   140021163:	jae    0x14002118c
   140021165:	movzx  eax,WORD PTR [rdi+0x48]
   140021169:	add    rbx,0x2
   14002116d:	mov    WORD PTR [rbx-0x2],ax
   140021171:	mov    rcx,QWORD PTR [r8+0x30]
   140021175:	test   rcx,rcx
   140021178:	je     0x1400211ae
   14002117a:	mov    eax,ebp
   14002117c:	sub    eax,DWORD PTR [r8+0x10]
   140021180:	sub    eax,0x2
   140021183:	mov    DWORD PTR [rcx],eax
   140021185:	add    QWORD PTR [r8+0x30],0x4
   14002118a:	jmp    0x1400211ae
   14002118c:	mov    rdx,QWORD PTR [r8+0x8]
   140021190:	movzx  eax,WORD PTR [rdi+0x48]
   140021194:	movsx  rcx,BYTE PTR [rdx+0x5d]
   140021199:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   1400211a1:	mov    rax,QWORD PTR [r8+0x8]
   1400211a5:	inc    BYTE PTR [rax+0x5d]
   1400211a8:	mov    DWORD PTR [rsi],0xf
   1400211ae:	mov    DWORD PTR [rdi+0x48],0xffff
   1400211b5:	cmp    r9d,0xffff
   1400211bc:	je     0x14002126a
   1400211c2:	movzx  eax,r9w
   1400211c6:	mov    DWORD PTR [rdi+0x48],eax
   1400211c9:	cmp    BYTE PTR [r10+0x19],0x1
   1400211ce:	jne    0x1400211e7
   1400211d0:	movzx  eax,WORD PTR [r10+0x4]
   1400211d5:	mov    BYTE PTR [r10+0x19],0x0
   1400211da:	mov    WORD PTR [r10+0x8],ax
   1400211df:	mov    eax,DWORD PTR [r10+0x14]
   1400211e3:	mov    DWORD PTR [r10+0x10],eax
   1400211e7:	cmp    DWORD PTR [rsi],0x0
   1400211ea:	jg     0x14002121f
   1400211ec:	mov    ecx,0xf0
   1400211f1:	mov    edx,0x300
   1400211f6:	lea    r9d,[rcx-0x1]
   1400211fa:	jmp    0x140020726
   1400211ff:	mov    DWORD PTR [rsi],0xc
   140021205:	mov    WORD PTR [r10],r15w
   140021209:	jmp    0x140021270
   14002120b:	mov    DWORD PTR [rsi],0xa
   140021211:	jmp    0x140021270
   140021213:	mov    WORD PTR [r10],r15w
   140021217:	mov    DWORD PTR [rsi],0xc
   14002121d:	jmp    0x140021270
   14002121f:	mov    r9d,0xef
   140021225:	cmp    DWORD PTR [rsi],0x0
   140021228:	jg     0x140021338
   14002122e:	cmp    BYTE PTR [r8+0x2],0x0
   140021233:	je     0x140021338
   140021239:	cmp    rbp,r12
   14002123c:	jne    0x140021338
   140021242:	movzx  eax,WORD PTR [r10]
   140021246:	mov    rcx,QWORD PTR [r8+0x8]
   14002124a:	cmp    ax,r9w
   14002124e:	je     0x140021293
   140021250:	mov    edx,0xf0
   140021255:	cmp    ax,dx
   140021258:	je     0x140021293
   14002125a:	mov    edx,0xd9
   14002125f:	cmp    ax,dx
   140021262:	je     0x140021293
   140021264:	mov    BYTE PTR [rcx+0x40],0x0
   140021268:	jmp    0x1400212a2
   14002126a:	mov    DWORD PTR [rsi],0xa
   140021270:	mov    rax,QWORD PTR [r8+0x8]
   140021274:	mov    r9d,0xef
   14002127a:	mov    BYTE PTR [rax+0x41],r11b
   14002127e:	mov    rax,QWORD PTR [r8+0x8]
   140021282:	mov    BYTE PTR [rax+0x40],0x1
   140021286:	jmp    0x140021225
   140021288:	mov    DWORD PTR [rsi],0xf
   14002128e:	jmp    0x140021338
   140021293:	movzx  eax,BYTE PTR [r10]
   140021297:	mov    BYTE PTR [rcx+0x40],0x1
   14002129b:	mov    BYTE PTR [rcx+0x41],al
   14002129e:	mov    WORD PTR [r10],r15w
   1400212a2:	mov    ecx,DWORD PTR [rdi+0x48]
   1400212a5:	cmp    ecx,0xffff
   1400212ab:	je     0x140021338
   1400212b1:	cmp    ecx,0xa0
   1400212b7:	jle    0x1400212e3
   1400212b9:	cmp    ecx,0x200d
   1400212bf:	je     0x1400212e3
   1400212c1:	cmp    ecx,0x200c
   1400212c7:	je     0x1400212e3
   1400212c9:	cmp    ecx,0x964
   1400212cf:	je     0x1400212e3
   1400212d1:	cmp    ecx,0x965
   1400212d7:	je     0x1400212e3
   1400212d9:	movzx  eax,WORD PTR [r10+0x8]
   1400212de:	add    eax,ecx
   1400212e0:	mov    DWORD PTR [rdi+0x48],eax
   1400212e3:	cmp    rbx,QWORD PTR [r8+0x28]
   1400212e7:	jae    0x14002130f
   1400212e9:	movzx  eax,WORD PTR [rdi+0x48]
   1400212ed:	add    rbx,0x2
   1400212f1:	mov    WORD PTR [rbx-0x2],ax
   1400212f5:	mov    rcx,QWORD PTR [r8+0x30]
   1400212f9:	test   rcx,rcx
   1400212fc:	je     0x140021331
   1400212fe:	mov    eax,ebp
   140021300:	sub    eax,DWORD PTR [r8+0x10]
   140021304:	dec    eax
   140021306:	mov    DWORD PTR [rcx],eax
   140021308:	add    QWORD PTR [r8+0x30],0x4
   14002130d:	jmp    0x140021331
   14002130f:	mov    rdx,QWORD PTR [r8+0x8]
   140021313:	movzx  eax,WORD PTR [rdi+0x48]
   140021317:	movsx  rcx,BYTE PTR [rdx+0x5d]
   14002131c:	mov    WORD PTR [rdx+rcx*2+0x90],ax
   140021324:	mov    rax,QWORD PTR [r8+0x8]
   140021328:	inc    BYTE PTR [rax+0x5d]
   14002132b:	mov    DWORD PTR [rsi],0xf
   140021331:	mov    DWORD PTR [rdi+0x48],0xffff
   140021338:	mov    r14,QWORD PTR [rsp+0x28]
   14002133d:	mov    r15,QWORD PTR [rsp+0x30]
   140021342:	mov    QWORD PTR [r8+0x20],rbx
   140021346:	mov    QWORD PTR [r8+0x10],rbp
   14002134a:	mov    rbx,QWORD PTR [rsp+0x38]
   14002134f:	mov    rbp,QWORD PTR [rsp+0x40]
   140021354:	pop    r13
   140021356:	pop    r12
   140021358:	pop    rdi
   140021359:	pop    rsi
   14002135a:	ret    
   14002135b:	mov    rbx,QWORD PTR [rsp+0x38]
   140021360:	mov    rbp,QWORD PTR [rsp+0x40]
   140021365:	mov    DWORD PTR [rdx],0x1
   14002136b:	pop    r13
   14002136d:	pop    r12
   14002136f:	pop    rdi
   140021370:	pop    rsi
   140021371:	ret    
   140021372:	xchg   ax,ax
   140021374:	or     cl,BYTE PTR [rdx+rax*1]
   140021377:	add    BYTE PTR [rdi],ch
   140021379:	or     al,BYTE PTR [rdx]
   14002137b:	add    BYTE PTR [rax+0xc],bl
   14002137e:	add    al,BYTE PTR [rax]
   140021380:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021381:	or     eax,DWORD PTR [rdx]
   140021383:	add    dl,ch
   140021385:	or     al,0x2
   140021387:	add    BYTE PTR [rip+0x4800020b],bh        # 0x188021598
   14002138d:	lar    eax,WORD PTR [rax]
   140021390:	add    BYTE PTR [rsi],al
   140021392:	(bad)  
   140021393:	add    BYTE PTR [rsi],al
   140021395:	(bad)  
   140021396:	(bad)  
   140021397:	(bad)  
   140021398:	(bad)  
   140021399:	(bad)  
   14002139a:	(bad)  
   14002139b:	(bad)  
   14002139c:	(bad)  
   14002139d:	(bad)  
   14002139e:	(bad)  
   14002139f:	(bad)  
   1400213a0:	(bad)  
   1400213a1:	(bad)  
   1400213a2:	(bad)  
   1400213a3:	(bad)  
   1400213a4:	(bad)  
   1400213a5:	(bad)  
   1400213a6:	(bad)  
   1400213a7:	(bad)  
   1400213a8:	(bad)  
   1400213a9:	(bad)  
   1400213aa:	(bad)  
   1400213ab:	(bad)  
   1400213ac:	(bad)  
   1400213ad:	(bad)  
   1400213ae:	(bad)  
   1400213af:	(bad)  
   1400213b0:	(bad)  
   1400213b1:	(bad)  
   1400213b2:	(bad)  
   1400213b3:	(bad)  
   1400213b4:	(bad)  
   1400213b5:	(bad)  
   1400213b6:	(bad)  
   1400213b7:	(bad)  
   1400213b8:	(bad)  
   1400213b9:	(bad)  
   1400213ba:	(bad)  
   1400213bb:	(bad)  
   1400213bc:	(bad)  
   1400213bd:	(bad)  
   1400213be:	(bad)  
   1400213bf:	(bad)  
   1400213c0:	(bad)  
   1400213c1:	(bad)  
   1400213c2:	(bad)  
   1400213c3:	(bad)  
   1400213c4:	(bad)  
   1400213c5:	(bad)  
   1400213c6:	(bad)  
   1400213c7:	(bad)  
   1400213c8:	(bad)  
   1400213c9:	(bad)  
   1400213ca:	(bad)  
   1400213cb:	(bad)  
   1400213cc:	(bad)  
   1400213cd:	(bad)  
   1400213ce:	(bad)  
   1400213cf:	(bad)  
   1400213d0:	(bad)  
   1400213d1:	(bad)  
   1400213d2:	(bad)  
   1400213d3:	(bad)  
   1400213d4:	(bad)  
   1400213d5:	(bad)  
   1400213d6:	(bad)  
   1400213d7:	(bad)  
   1400213d8:	(bad)  
   1400213d9:	(bad)  
   1400213da:	(bad)  
   1400213db:	(bad)  
   1400213dc:	(bad)  
   1400213dd:	(bad)  
   1400213de:	(bad)  
   1400213df:	(bad)  
   1400213e0:	(bad)  
   1400213e1:	(bad)  
   1400213e2:	(bad)  
   1400213e3:	(bad)  
   1400213e4:	(bad)  
   1400213e5:	(bad)  
   1400213e6:	(bad)  
   1400213e7:	(bad)  
   1400213e8:	(bad)  
   1400213e9:	(bad)  
   1400213ea:	(bad)  
   1400213eb:	(bad)  
   1400213ec:	(bad)  
   1400213ed:	(bad)  
   1400213ee:	(bad)  
   1400213ef:	(bad)  
   1400213f0:	(bad)  
   1400213f1:	(bad)  
   1400213f2:	(bad)  
   1400213f3:	(bad)  
   1400213f4:	(bad)  
   1400213f5:	(bad)  
   1400213f6:	(bad)  
   1400213f7:	(bad)  
   1400213f8:	(bad)  
   1400213f9:	(bad)  
   1400213fa:	(bad)  
   1400213fb:	(bad)  
   1400213fc:	(bad)  
   1400213fd:	(bad)  
   1400213fe:	(bad)  
   1400213ff:	(bad)  
   140021400:	(bad)  
   140021401:	(bad)  
   140021402:	(bad)  
   140021403:	(bad)  
   140021404:	(bad)  
   140021405:	(bad)  
   140021406:	(bad)  
   140021407:	(bad)  
   140021408:	(bad)  
   140021409:	(bad)  
   14002140a:	(bad)  
   14002140b:	(bad)  
   14002140c:	(bad)  
   14002140d:	(bad)  
   14002140e:	(bad)  
   14002140f:	(bad)  
   140021410:	(bad)  
   140021411:	(bad)  
   140021412:	(bad)  
   140021413:	(bad)  
   140021414:	(bad)  
   140021415:	(bad)  
   140021416:	(bad)  
   140021417:	(bad)  
   140021418:	(bad)  
   140021419:	(bad)  
   14002141a:	(bad)  
   14002141b:	(bad)  
   14002141c:	(bad)  
   14002141d:	(bad)  
   14002141e:	(bad)  
   14002141f:	(bad)  
   140021420:	(bad)  
   140021421:	(bad)  
   140021422:	(bad)  
   140021423:	(bad)  
   140021424:	(bad)  
   140021425:	(bad)  
   140021426:	(bad)  
   140021427:	(bad)  
   140021428:	(bad)  
   140021429:	(bad)  
   14002142a:	(bad)  
   14002142b:	(bad)  
   14002142c:	(bad)  
   14002142d:	(bad)  
   14002142e:	(bad)  
   14002142f:	(bad)  
   140021430:	(bad)  
   140021431:	(bad)  
   140021432:	(bad)  
   140021433:	(bad)  
   140021434:	(bad)  
   140021435:	(bad)  
   140021436:	(bad)  
   140021437:	(bad)  
   140021438:	(bad)  
   140021439:	(bad)  
   14002143a:	(bad)  
   14002143b:	(bad)  
   14002143c:	(bad)  
   14002143d:	(bad)  
   14002143e:	(bad)  
   14002143f:	(bad)  
   140021440:	(bad)  
   140021441:	(bad)  
   140021442:	(bad)  
   140021443:	(bad)  
   140021444:	(bad)  
   140021445:	(bad)  
   140021446:	(bad)  
   140021447:	(bad)  
   140021448:	(bad)  
   140021449:	(bad)  
   14002144a:	(bad)  
   14002144b:	(bad)  
   14002144c:	(bad)  
   14002144d:	(bad)  
   14002144e:	(bad)  
   14002144f:	(bad)  
   140021450:	(bad)  
   140021451:	(bad)  
   140021452:	(bad)  
   140021453:	(bad)  
   140021454:	(bad)  
   140021455:	(bad)  
   140021456:	(bad)  
   140021457:	(bad)  
   140021458:	(bad)  
   140021459:	(bad)  
   14002145a:	(bad)  
   14002145b:	(bad)  
   14002145c:	(bad)  
   14002145d:	(bad)  
   14002145e:	(bad)  
   14002145f:	add    DWORD PTR [rsi],eax
   140021461:	(bad)  
   140021462:	(bad)  
   140021463:	(bad)  
   140021464:	(bad)  
   140021465:	(bad)  
   140021466:	add    al,BYTE PTR [rsi]
   140021468:	(bad)  
   140021469:	(bad)  
   14002146a:	(bad)  
   14002146b:	(bad)  
   14002146c:	(bad)  
   14002146d:	(bad)  
   14002146e:	add    eax,DWORD PTR [rax*1+0x6060606]
   140021475:	add    DWORD PTR [rcx],eax
   140021477:	int3   
   140021478:	int3   
   140021479:	int3   
   14002147a:	int3   
   14002147b:	int3   
   14002147c:	int3   
   14002147d:	int3   
   14002147e:	int3   
   14002147f:	int3   
   140021480:	cmp    DWORD PTR [r9],0x0
   140021484:	mov    r10,rdx
   140021487:	jg     0x140021496
   140021489:	cmp    DWORD PTR [r8],0x0
   14002148d:	jne    0x140021499
   14002148f:	mov    DWORD PTR [r8],0x150
   140021496:	xor    eax,eax
   140021498:	ret    
   140021499:	mov    rcx,QWORD PTR [rcx+0x10]
   14002149d:	add    rdx,0x120
   1400214a4:	mov    rax,QWORD PTR [rcx]
   1400214a7:	mov    QWORD PTR [rdx],rax
   1400214aa:	mov    rax,QWORD PTR [rcx+0x8]
   1400214ae:	mov    QWORD PTR [rdx+0x8],rax
   1400214b2:	mov    rax,QWORD PTR [rcx+0x10]
   1400214b6:	mov    QWORD PTR [rdx+0x10],rax
   1400214ba:	mov    rax,QWORD PTR [rcx+0x18]
   1400214be:	mov    QWORD PTR [rdx+0x18],rax
   1400214c2:	mov    rax,QWORD PTR [rcx+0x20]
   1400214c6:	mov    QWORD PTR [rdx+0x20],rax
   1400214ca:	mov    rax,QWORD PTR [rcx+0x28]
   1400214ce:	mov    QWORD PTR [r10+0x10],rdx
   1400214d2:	mov    QWORD PTR [rdx+0x28],rax
   1400214d6:	mov    rax,r10
   1400214d9:	mov    BYTE PTR [r10+0x3e],0x1
   1400214de:	ret    
   1400214df:	int3   
   1400214e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400214e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400214ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400214ef:	mov    QWORD PTR [rsp+0x20],rdi
   1400214f4:	push   r12
   1400214f6:	push   r13
   1400214f8:	push   r14
   1400214fa:	sub    rsp,0x20
   1400214fe:	mov    rbp,rdx
   140021501:	mov    r8d,0xa0
   140021507:	xor    edx,edx
   140021509:	mov    rcx,QWORD PTR [rbp+0x0]
   14002150d:	call   QWORD PTR [rbp+0x10]
   140021510:	xor    esi,esi
   140021512:	mov    r12d,0x900
   140021518:	lea    r14,[rip+0xfffffffffffdeae1]        # 0x140000000
   14002151f:	nop
   140021520:	lea    rax,[rsi+rsi*2]
   140021524:	xor    edi,edi
   140021526:	xor    ebx,ebx
   140021528:	movzx  r13d,BYTE PTR [r14+rax*4+0x4ba24]
   140021531:	test   BYTE PTR [rbx+r14*1+0x4ba90],r13b
   140021539:	jne    0x140021547
   14002153b:	cmp    rsi,0x6
   14002153f:	jne    0x140021552
   140021541:	cmp    rbx,0x31
   140021545:	jne    0x140021552
   140021547:	mov    rcx,QWORD PTR [rbp+0x0]
   14002154b:	lea    edx,[r12+rdi*1]
   14002154f:	call   QWORD PTR [rbp+0x8]
   140021552:	inc    rbx
   140021555:	inc    edi
   140021557:	cmp    rbx,0x80
   14002155e:	jl     0x140021531
   140021560:	inc    rsi
   140021563:	sub    r12d,0xffffff80
   140021567:	cmp    rsi,0x8
   14002156b:	jle    0x140021520
   14002156d:	mov    rcx,QWORD PTR [rbp+0x0]
   140021571:	mov    edx,0x964
   140021576:	call   QWORD PTR [rbp+0x8]
   140021579:	mov    rcx,QWORD PTR [rbp+0x0]
   14002157d:	mov    edx,0x965
   140021582:	call   QWORD PTR [rbp+0x8]
   140021585:	mov    rcx,QWORD PTR [rbp+0x0]
   140021589:	mov    edx,0x200c
   14002158e:	call   QWORD PTR [rbp+0x8]
   140021591:	mov    rcx,QWORD PTR [rbp+0x0]
   140021595:	mov    edx,0x200d
   14002159a:	mov    rax,QWORD PTR [rbp+0x8]
   14002159e:	mov    rbx,QWORD PTR [rsp+0x40]
   1400215a3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400215a8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400215ad:	mov    rdi,QWORD PTR [rsp+0x58]
   1400215b2:	add    rsp,0x20
   1400215b6:	pop    r14
   1400215b8:	pop    r13
   1400215ba:	pop    r12
   1400215bc:	rex.W jmp rax
   1400215bf:	int3   
   1400215c0:	cmp    edx,0x1
   1400215c3:	mov    r8,QWORD PTR [rcx+0x10]
   1400215c7:	jg     0x140021637
   1400215c9:	mov    eax,DWORD PTR [rip+0x2ab21]        # 0x14004c0f0
   1400215cf:	mov    DWORD PTR [r8],eax
   1400215d2:	mov    eax,DWORD PTR [rip+0x2ab1c]        # 0x14004c0f4
   1400215d8:	mov    DWORD PTR [r8+0x4],eax
   1400215dc:	mov    eax,DWORD PTR [rip+0x2ab16]        # 0x14004c0f8
   1400215e2:	mov    DWORD PTR [r8+0x8],eax
   1400215e6:	mov    eax,DWORD PTR [rip+0x2ab10]        # 0x14004c0fc
   1400215ec:	mov    DWORD PTR [r8+0xc],eax
   1400215f0:	mov    eax,DWORD PTR [rip+0x2ab0a]        # 0x14004c100
   1400215f6:	mov    DWORD PTR [r8+0x10],eax
   1400215fa:	mov    eax,DWORD PTR [rip+0x2ab04]        # 0x14004c104
   140021600:	mov    DWORD PTR [r8+0x14],eax
   140021604:	mov    eax,DWORD PTR [rip+0x2aafe]        # 0x14004c108
   14002160a:	mov    DWORD PTR [r8+0x18],eax
   14002160e:	mov    eax,DWORD PTR [rip+0x2aaf8]        # 0x14004c10c
   140021614:	mov    BYTE PTR [r8+0x40],0x1
   140021619:	mov    BYTE PTR [r8+0x41],0x0
   14002161e:	mov    BYTE PTR [r8+0x43],0x0
   140021623:	mov    BYTE PTR [r8+0x42],0x0
   140021628:	mov    DWORD PTR [r8+0x1c],eax
   14002162c:	mov    BYTE PTR [r8+0x44],0x0
   140021631:	mov    BYTE PTR [rcx+0x40],0x0
   140021635:	je     0x1400216b6
   140021637:	cmp    BYTE PTR [r8+0x4a],0x1
   14002163c:	mov    eax,DWORD PTR [rip+0x2aaae]        # 0x14004c0f0
   140021642:	mov    DWORD PTR [r8+0x20],eax
   140021646:	mov    eax,DWORD PTR [rip+0x2aaa8]        # 0x14004c0f4
   14002164c:	mov    DWORD PTR [r8+0x24],eax
   140021650:	mov    eax,DWORD PTR [rip+0x2aaa2]        # 0x14004c0f8
   140021656:	mov    DWORD PTR [r8+0x28],eax
   14002165a:	mov    eax,DWORD PTR [rip+0x2aa9c]        # 0x14004c0fc
   140021660:	mov    DWORD PTR [r8+0x2c],eax
   140021664:	mov    eax,DWORD PTR [rip+0x2aa96]        # 0x14004c100
   14002166a:	mov    DWORD PTR [r8+0x30],eax
   14002166e:	mov    eax,DWORD PTR [rip+0x2aa90]        # 0x14004c104
   140021674:	mov    DWORD PTR [r8+0x34],eax
   140021678:	mov    eax,DWORD PTR [rip+0x2aa8a]        # 0x14004c108
   14002167e:	mov    DWORD PTR [r8+0x38],eax
   140021682:	mov    eax,DWORD PTR [rip+0x2aa84]        # 0x14004c10c
   140021688:	mov    BYTE PTR [r8+0x48],0x1
   14002168d:	mov    BYTE PTR [r8+0x49],0x0
   140021692:	mov    BYTE PTR [r8+0x4b],0x0
   140021697:	mov    DWORD PTR [r8+0x3c],eax
   14002169b:	mov    rax,QWORD PTR [rip+0x2aa8e]        # 0x14004c130
   1400216a2:	jne    0x1400216ab
   1400216a4:	mov    rax,QWORD PTR [rip+0x2aa8d]        # 0x14004c138
   1400216ab:	mov    QWORD PTR [r8+0x4c],rax
   1400216af:	mov    DWORD PTR [rcx+0x54],0x0
   1400216b6:	repz ret 
   1400216b8:	int3   
   1400216b9:	int3   
   1400216ba:	int3   
   1400216bb:	int3   
   1400216bc:	int3   
   1400216bd:	int3   
   1400216be:	int3   
   1400216bf:	int3   
   1400216c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400216c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400216ca:	push   rdi
   1400216cb:	sub    rsp,0x20
   1400216cf:	cmp    BYTE PTR [rdx+0x8],0x0
   1400216d3:	mov    rbx,QWORD PTR [rdx+0x20]
   1400216d7:	mov    rsi,r8
   1400216da:	mov    rdi,rcx
   1400216dd:	jne    0x140021745
   1400216df:	mov    ecx,0x54
   1400216e4:	call   0x140010940
   1400216e9:	mov    QWORD PTR [rdi+0x10],rax
   1400216ed:	test   rax,rax
   1400216f0:	je     0x14002172f
   1400216f2:	test   rbx,rbx
   1400216f5:	je     0x14002171f
   1400216f7:	cmp    BYTE PTR [rbx],0x6a
   1400216fa:	jne    0x14002171f
   1400216fc:	cmp    BYTE PTR [rbx+0x1],0x61
   140021700:	jne    0x14002171f
   140021702:	movzx  ecx,BYTE PTR [rbx+0x2]
   140021706:	test   cl,cl
   140021708:	je     0x14002170f
   14002170a:	cmp    cl,0x5f
   14002170d:	jne    0x14002171f
   14002170f:	xor    edx,edx
   140021711:	mov    rcx,rdi
   140021714:	mov    BYTE PTR [rax+0x4a],0x1
   140021718:	call   0x1400215c0
   14002171d:	jmp    0x140021735
   14002171f:	xor    edx,edx
   140021721:	mov    rcx,rdi
   140021724:	mov    BYTE PTR [rax+0x4a],0x0
   140021728:	call   0x1400215c0
   14002172d:	jmp    0x140021735
   14002172f:	mov    DWORD PTR [rsi],0x7
   140021735:	mov    eax,0xfffd
   14002173a:	mov    BYTE PTR [rdi+0x59],0xff
   14002173e:	mov    WORD PTR [rdi+0x88],ax
   140021745:	mov    rbx,QWORD PTR [rsp+0x30]
   14002174a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002174f:	add    rsp,0x20
   140021753:	pop    rdi
   140021754:	ret    
   140021755:	int3   
   140021756:	int3   
   140021757:	int3   
   140021758:	int3   
   140021759:	int3   
   14002175a:	int3   
   14002175b:	int3   
   14002175c:	int3   
   14002175d:	int3   
   14002175e:	int3   
   14002175f:	int3   
   140021760:	rex push rbx
   140021762:	sub    rsp,0x20
   140021766:	mov    rbx,rcx
   140021769:	mov    rcx,QWORD PTR [rcx+0x10]
   14002176d:	test   rcx,rcx
   140021770:	je     0x140021785
   140021772:	cmp    BYTE PTR [rbx+0x3e],0x0
   140021776:	jne    0x14002177d
   140021778:	call   0x140010a40
   14002177d:	mov    QWORD PTR [rbx+0x10],0x0
   140021785:	add    rsp,0x20
   140021789:	pop    rbx
   14002178a:	ret    
   14002178b:	int3   
   14002178c:	int3   
   14002178d:	int3   
   14002178e:	int3   
   14002178f:	int3   
   140021790:	mov    QWORD PTR [rsp+0x10],rdx
   140021795:	mov    QWORD PTR [rsp+0x8],rcx
   14002179a:	push   rbx
   14002179b:	push   rbp
   14002179c:	push   rsi
   14002179d:	push   rdi
   14002179e:	push   r12
   1400217a0:	push   r13
   1400217a2:	push   r14
   1400217a4:	push   r15
   1400217a6:	mov    rbp,QWORD PTR [rcx+0x8]
   1400217aa:	mov    r10,QWORD PTR [rcx+0x10]
   1400217ae:	mov    r12,QWORD PTR [rcx+0x18]
   1400217b2:	mov    r15,QWORD PTR [rbp+0x10]
   1400217b6:	mov    r9,QWORD PTR [rcx+0x20]
   1400217ba:	mov    rsi,QWORD PTR [rcx+0x28]
   1400217be:	movzx  eax,BYTE PTR [r15+0x42]
   1400217c3:	movzx  edi,BYTE PTR [r15+0x41]
   1400217c8:	mov    r8,QWORD PTR [rcx+0x30]
   1400217cc:	movzx  ecx,BYTE PTR [r15+0x40]
   1400217d1:	movzx  r13d,BYTE PTR [r15+0x43]
   1400217d6:	movzx  r14d,BYTE PTR [r15+0x44]
   1400217db:	mov    BYTE PTR [rsp+0x60],al
   1400217df:	movzx  eax,dil
   1400217e3:	mov    BYTE PTR [rsp+0x58],cl
   1400217e7:	neg    al
   1400217e9:	mov    edx,0x2840
   1400217ee:	sbb    r11d,r11d
   1400217f1:	xor    ebx,ebx
   1400217f3:	test   cl,cl
   1400217f5:	je     0x140021805
   1400217f7:	test   dil,dil
   1400217fa:	jne    0x140021a07
   140021800:	jmp    0x140021949
   140021805:	test   dil,dil
   140021808:	jne    0x140021860
   14002180a:	lea    rdx,[r10+0x1]
   14002180e:	cmp    rdx,r12
   140021811:	jae    0x140021860
   140021813:	cmp    r9,rsi
   140021816:	jae    0x140021860
   140021818:	movzx  ecx,BYTE PTR [r10]
   14002181c:	lea    eax,[rcx+0x20]
   14002181f:	cmp    al,0x12
   140021821:	jbe    0x140021860
   140021823:	movzx  eax,BYTE PTR [rdx]
   140021826:	movzx  ecx,cl
   140021829:	add    r9,0x2
   14002182d:	shl    cx,0x8
   140021831:	or     cx,ax
   140021834:	mov    WORD PTR [r9-0x2],cx
   140021839:	test   r8,r8
   14002183c:	je     0x140021845
   14002183e:	mov    DWORD PTR [r8],r11d
   140021841:	add    r8,0x4
   140021845:	add    rdx,0x2
   140021849:	mov    r11d,ebx
   14002184c:	add    r10,0x2
   140021850:	add    ebx,0x2
   140021853:	cmp    rdx,r12
   140021856:	jb     0x140021813
   140021858:	nop    DWORD PTR [rax+rax*1+0x0]
   140021860:	cmp    r10,r12
   140021863:	jae    0x140021d2e
   140021869:	cmp    r9,rsi
   14002186c:	jae    0x140021cd3
   140021872:	movzx  edx,BYTE PTR [r10]
   140021876:	inc    r10
   140021879:	inc    ebx
   14002187b:	movzx  ecx,dil
   14002187f:	test   dil,dil
   140021882:	je     0x1400218cb
   140021884:	sub    ecx,0x1
   140021887:	je     0x1400218bc
   140021889:	sub    ecx,0x1
   14002188c:	jne    0x140021860
   14002188e:	movzx  ecx,r14b
   140021892:	movzx  eax,dl
   140021895:	add    r9,0x2
   140021899:	shl    cx,0x8
   14002189d:	or     cx,ax
   1400218a0:	mov    WORD PTR [r9-0x2],cx
   1400218a5:	test   r8,r8
   1400218a8:	je     0x1400218b1
   1400218aa:	mov    DWORD PTR [r8],r11d
   1400218ad:	add    r8,0x4
   1400218b1:	mov    r11d,ebx
   1400218b4:	xor    dil,dil
   1400218b7:	jmp    0x14002180a
   1400218bc:	mov    r14b,dl
   1400218bf:	mov    BYTE PTR [rbp+0x42],dl
   1400218c2:	mov    BYTE PTR [rbp+0x40],0x2
   1400218c6:	mov    dil,0x2
   1400218c9:	jmp    0x140021860
   1400218cb:	lea    eax,[rdx+0x20]
   1400218ce:	cmp    al,0x12
   1400218d0:	ja     0x1400218f9
   1400218d2:	cmp    dl,0xe7
   1400218d5:	jbe    0x140021938
   1400218d7:	cmp    dl,0xef
   1400218da:	jbe    0x14002190b
   1400218dc:	cmp    dl,0xf1
   1400218df:	je     0x140021923
   1400218e1:	cmp    dl,0xf0
   1400218e4:	jne    0x140021c95
   1400218ea:	mov    BYTE PTR [rbp+0x41],dl
   1400218ed:	mov    BYTE PTR [rbp+0x40],0x1
   1400218f1:	mov    dil,0x1
   1400218f4:	jmp    0x140021860
   1400218f9:	mov    r14b,dl
   1400218fc:	mov    BYTE PTR [rbp+0x41],dl
   1400218ff:	mov    BYTE PTR [rbp+0x40],0x1
   140021903:	mov    dil,0x2
   140021906:	jmp    0x140021860
   14002190b:	lea    r13d,[rdx+0x18]
   14002190f:	mov    BYTE PTR [rsp+0x58],0x1
   140021914:	mov    BYTE PTR [rbp+0x41],dl
   140021917:	mov    BYTE PTR [rbp+0x40],0x1
   14002191b:	mov    dil,0x6
   14002191e:	jmp    0x140021a07
   140021923:	mov    BYTE PTR [rsp+0x58],0x1
   140021928:	mov    BYTE PTR [rbp+0x41],0xf1
   14002192c:	mov    BYTE PTR [rbp+0x40],0x1
   140021930:	mov    dil,0x4
   140021933:	jmp    0x140021a07
   140021938:	lea    r13d,[rdx+0x20]
   14002193c:	mov    BYTE PTR [rsp+0x58],0x1
   140021941:	mov    edx,0x2840
   140021946:	mov    r11d,ebx
   140021949:	cmp    r10,r12
   14002194c:	jae    0x140021d2e
   140021952:	cmp    r9,rsi
   140021955:	jae    0x140021a07
   14002195b:	movzx  ecx,BYTE PTR [r10]
   14002195f:	cmp    cl,0x20
   140021962:	jb     0x140021a07
   140021968:	inc    r10
   14002196b:	inc    ebx
   14002196d:	cmp    cl,0x7f
   140021970:	ja     0x14002198c
   140021972:	movzx  eax,cl
   140021975:	add    r9,0x2
   140021979:	mov    WORD PTR [r9-0x2],ax
   14002197e:	test   r8,r8
   140021981:	je     0x1400219fb
   140021983:	mov    DWORD PTR [r8],r11d
   140021986:	add    r8,0x4
   14002198a:	jmp    0x1400219fb
   14002198c:	movzx  ecx,cl
   14002198f:	movsx  rax,r13b
   140021993:	and    ecx,0x7f
   140021996:	add    ecx,DWORD PTR [r15+rax*4]
   14002199a:	cmp    ecx,0xffff
   1400219a0:	ja     0x1400219b8
   1400219a2:	mov    WORD PTR [r9],cx
   1400219a6:	add    r9,0x2
   1400219aa:	test   r8,r8
   1400219ad:	je     0x1400219fb
   1400219af:	mov    DWORD PTR [r8],r11d
   1400219b2:	add    r8,0x4
   1400219b6:	jmp    0x1400219fb
   1400219b8:	mov    eax,ecx
   1400219ba:	add    r9,0x2
   1400219be:	shr    eax,0xa
   1400219c1:	sub    ax,dx
   1400219c4:	mov    WORD PTR [r9-0x2],ax
   1400219c9:	cmp    r9,rsi
   1400219cc:	jae    0x140021cac
   1400219d2:	mov    eax,0x3ff
   1400219d7:	add    r9,0x2
   1400219db:	and    cx,ax
   1400219de:	mov    eax,0xdc00
   1400219e3:	or     cx,ax
   1400219e6:	mov    WORD PTR [r9-0x2],cx
   1400219eb:	test   r8,r8
   1400219ee:	je     0x1400219fb
   1400219f0:	mov    DWORD PTR [r8],r11d
   1400219f3:	mov    DWORD PTR [r8+0x4],r11d
   1400219f7:	add    r8,0x8
   1400219fb:	mov    r11d,ebx
   1400219fe:	cmp    r10,r12
   140021a01:	jb     0x140021952
   140021a07:	cmp    r10,r12
   140021a0a:	jae    0x140021d2e
   140021a10:	cmp    r9,rsi
   140021a13:	jae    0x140021cd3
   140021a19:	movzx  edx,BYTE PTR [r10]
   140021a1d:	movzx  eax,dil
   140021a21:	inc    r10
   140021a24:	inc    ebx
   140021a26:	cmp    eax,0x6
   140021a29:	ja     0x140021a07
   140021a2b:	lea    rcx,[rip+0xfffffffffffde5ce]        # 0x140000000
   140021a32:	mov    ecx,DWORD PTR [rcx+rax*4+0x21d44]
   140021a39:	lea    rax,[rip+0xfffffffffffde5c0]        # 0x140000000
   140021a40:	add    rcx,rax
   140021a43:	jmp    rcx
   140021a45:	movzx  ecx,dl
   140021a48:	mov    eax,0x1
   140021a4d:	shl    eax,cl
   140021a4f:	test   eax,0x2601
   140021a54:	jne    0x140021af7
   140021a5a:	cmp    dl,0x10
   140021a5d:	jb     0x140021a78
   140021a5f:	cmp    dl,0x17
   140021a62:	jbe    0x140021aee
   140021a68:	lea    r13d,[rdx-0x18]
   140021a6c:	mov    dil,0x6
   140021a6f:	mov    BYTE PTR [rbp+0x41],dl
   140021a72:	mov    BYTE PTR [rbp+0x40],0x1
   140021a76:	jmp    0x140021a07
   140021a78:	cmp    dl,0x8
   140021a7b:	ja     0x140021a93
   140021a7d:	lea    eax,[rdx-0x1]
   140021a80:	mov    dil,0x3
   140021a83:	mov    BYTE PTR [rbp+0x41],dl
   140021a86:	mov    BYTE PTR [rsp+0x60],al
   140021a8a:	mov    BYTE PTR [rbp+0x40],0x1
   140021a8e:	jmp    0x140021a07
   140021a93:	cmp    dl,0xb
   140021a96:	jne    0x140021aa7
   140021a98:	mov    dil,0x4
   140021a9b:	mov    BYTE PTR [rbp+0x41],dl
   140021a9e:	mov    BYTE PTR [rbp+0x40],0x1
   140021aa2:	jmp    0x140021a07
   140021aa7:	cmp    dl,0xe
   140021aaa:	jne    0x140021c83
   140021ab0:	mov    dil,0x1
   140021ab3:	mov    BYTE PTR [rbp+0x41],dl
   140021ab6:	mov    BYTE PTR [rbp+0x40],dil
   140021aba:	jmp    0x140021a07
   140021abf:	mov    r14b,dl
   140021ac2:	mov    BYTE PTR [rbp+0x42],dl
   140021ac5:	mov    BYTE PTR [rbp+0x40],0x2
   140021ac9:	mov    dil,0x2
   140021acc:	jmp    0x140021a07
   140021ad1:	mov    r13b,dl
   140021ad4:	mov    r14b,dl
   140021ad7:	mov    BYTE PTR [rbp+0x42],dl
   140021ada:	shr    r13b,0x5
   140021ade:	mov    BYTE PTR [rbp+0x40],0x2
   140021ae2:	mov    dil,0x5
   140021ae5:	and    r14b,0x1f
   140021ae9:	jmp    0x140021a07
   140021aee:	lea    r13d,[rdx-0x10]
   140021af2:	jmp    0x140021941
   140021af7:	movzx  eax,dl
   140021afa:	add    r9,0x2
   140021afe:	mov    WORD PTR [r9-0x2],ax
   140021b03:	test   r8,r8
   140021b06:	je     0x140021941
   140021b0c:	mov    DWORD PTR [r8],r11d
   140021b0f:	add    r8,0x4
   140021b13:	jmp    0x140021941
   140021b18:	movzx  ecx,r14b
   140021b1c:	movzx  eax,dl
   140021b1f:	add    r9,0x2
   140021b23:	shl    cx,0x8
   140021b27:	or     cx,ax
   140021b2a:	mov    WORD PTR [r9-0x2],cx
   140021b2f:	test   r8,r8
   140021b32:	je     0x140021b3b
   140021b34:	mov    DWORD PTR [r8],r11d
   140021b37:	add    r8,0x4
   140021b3b:	xor    dil,dil
   140021b3e:	jmp    0x140021941
   140021b43:	cmp    dl,0x80
   140021b46:	jae    0x140021b65
   140021b48:	movsx  rcx,BYTE PTR [rsp+0x60]
   140021b4e:	movzx  eax,dl
   140021b51:	lea    rdx,[rip+0xfffffffffffde4a8]        # 0x140000000
   140021b58:	movzx  ecx,WORD PTR [rdx+rcx*4+0x4c0d0]
   140021b60:	add    cx,ax
   140021b63:	jmp    0x140021b7d
   140021b65:	movsx  rax,BYTE PTR [rsp+0x60]
   140021b6b:	movzx  ecx,dl
   140021b6e:	and    ecx,0x7f
   140021b71:	add    ecx,DWORD PTR [r15+rax*4]
   140021b75:	cmp    ecx,0xffff
   140021b7b:	ja     0x140021b9e
   140021b7d:	mov    WORD PTR [r9],cx
   140021b81:	add    r9,0x2
   140021b85:	mov    edx,0x2840
   140021b8a:	test   r8,r8
   140021b8d:	je     0x140021be6
   140021b8f:	mov    DWORD PTR [r8],r11d
   140021b92:	add    r8,0x4
   140021b96:	xor    dil,dil
   140021b99:	jmp    0x140021946
   140021b9e:	mov    eax,ecx
   140021ba0:	mov    edx,0x2840
   140021ba5:	add    r9,0x2
   140021ba9:	shr    eax,0xa
   140021bac:	sub    ax,dx
   140021baf:	mov    WORD PTR [r9-0x2],ax
   140021bb4:	cmp    r9,rsi
   140021bb7:	jae    0x140021cac
   140021bbd:	mov    eax,0x3ff
   140021bc2:	add    r9,0x2
   140021bc6:	and    cx,ax
   140021bc9:	mov    eax,0xdc00
   140021bce:	or     cx,ax
   140021bd1:	mov    WORD PTR [r9-0x2],cx
   140021bd6:	test   r8,r8
   140021bd9:	je     0x140021be6
   140021bdb:	mov    DWORD PTR [r8],r11d
   140021bde:	mov    DWORD PTR [r8+0x4],r11d
   140021be2:	add    r8,0x8
   140021be6:	xor    dil,dil
   140021be9:	jmp    0x140021946
   140021bee:	movzx  eax,dl
   140021bf1:	movzx  ecx,r14b
   140021bf5:	shl    ecx,0x8
   140021bf8:	or     ecx,eax
   140021bfa:	movsx  rax,r13b
   140021bfe:	shl    ecx,0x7
   140021c01:	add    ecx,0x10000
   140021c07:	xor    dil,dil
   140021c0a:	mov    DWORD PTR [r15+rax*4],ecx
   140021c0e:	jmp    0x140021941
   140021c13:	test   dl,dl
   140021c15:	je     0x140021d26
   140021c1b:	cmp    dl,0x68
   140021c1e:	jae    0x140021c36
   140021c20:	movzx  ecx,dl
   140021c23:	movsx  rax,r13b
   140021c27:	shl    ecx,0x7
   140021c2a:	xor    dil,dil
   140021c2d:	mov    DWORD PTR [r15+rax*4],ecx
   140021c31:	jmp    0x140021941
   140021c36:	lea    eax,[rdx-0x68]
   140021c39:	cmp    al,0x40
   140021c3b:	jae    0x140021c59
   140021c3d:	movzx  ecx,dl
   140021c40:	movsx  rax,r13b
   140021c44:	shl    ecx,0x7
   140021c47:	add    ecx,0xac00
   140021c4d:	xor    dil,dil
   140021c50:	mov    DWORD PTR [r15+rax*4],ecx
   140021c54:	jmp    0x140021941
   140021c59:	cmp    dl,0xf9
   140021c5c:	jb     0x140021d21
   140021c62:	movzx  eax,dl
   140021c65:	lea    rdx,[rip+0xfffffffffffde394]        # 0x140000000
   140021c6c:	movsx  rcx,r13b
   140021c70:	mov    eax,DWORD PTR [rdx+rax*4+0x4bd2c]
   140021c77:	xor    dil,dil
   140021c7a:	mov    DWORD PTR [r15+rcx*4],eax
   140021c7e:	jmp    0x140021941
   140021c83:	cmp    dl,0xf
   140021c86:	jne    0x140021c95
   140021c88:	mov    r11d,ebx
   140021c8b:	mov    BYTE PTR [rsp+0x58],0x0
   140021c90:	jmp    0x14002180a
   140021c95:	mov    rax,QWORD PTR [rsp+0x50]
   140021c9a:	mov    DWORD PTR [rax],0xc
   140021ca0:	mov    BYTE PTR [rbp+0x41],dl
   140021ca3:	mov    BYTE PTR [rbp+0x40],0x1
   140021ca7:	jmp    0x140021d33
   140021cac:	test   r8,r8
   140021caf:	je     0x140021cb8
   140021cb1:	mov    DWORD PTR [r8],r11d
   140021cb4:	add    r8,0x4
   140021cb8:	mov    eax,0x3ff
   140021cbd:	mov    BYTE PTR [rbp+0x5d],0x1
   140021cc1:	and    cx,ax
   140021cc4:	mov    eax,0xdc00
   140021cc9:	or     cx,ax
   140021ccc:	mov    WORD PTR [rbp+0x90],cx
   140021cd3:	mov    rax,QWORD PTR [rsp+0x50]
   140021cd8:	mov    DWORD PTR [rax],0xf
   140021cde:	test   dil,dil
   140021ce1:	jne    0x140021ce7
   140021ce3:	mov    BYTE PTR [rbp+0x40],dil
   140021ce7:	mov    al,BYTE PTR [rsp+0x58]
   140021ceb:	mov    BYTE PTR [r15+0x41],dil
   140021cef:	mov    BYTE PTR [r15+0x43],r13b
   140021cf3:	mov    BYTE PTR [r15+0x40],al
   140021cf7:	mov    al,BYTE PTR [rsp+0x60]
   140021cfb:	mov    BYTE PTR [r15+0x44],r14b
   140021cff:	mov    BYTE PTR [r15+0x42],al
   140021d03:	mov    rax,QWORD PTR [rsp+0x48]
   140021d08:	mov    QWORD PTR [rax+0x10],r10
   140021d0c:	mov    QWORD PTR [rax+0x20],r9
   140021d10:	mov    QWORD PTR [rax+0x30],r8
   140021d14:	pop    r15
   140021d16:	pop    r14
   140021d18:	pop    r13
   140021d1a:	pop    r12
   140021d1c:	pop    rdi
   140021d1d:	pop    rsi
   140021d1e:	pop    rbp
   140021d1f:	pop    rbx
   140021d20:	ret    
   140021d21:	mov    BYTE PTR [rbp+0x42],dl
   140021d24:	jmp    0x140021d2a
   140021d26:	mov    BYTE PTR [rbp+0x42],0x0
   140021d2a:	mov    BYTE PTR [rbp+0x40],0x2
   140021d2e:	mov    rax,QWORD PTR [rsp+0x50]
   140021d33:	mov    eax,DWORD PTR [rax]
   140021d35:	test   eax,eax
   140021d37:	jle    0x140021cde
   140021d39:	cmp    eax,0xf
   140021d3c:	je     0x140021cde
   140021d3e:	xor    dil,dil
   140021d41:	jmp    0x140021ce7
   140021d43:	nop
   140021d44:	sbb    r8b,BYTE PTR [r10]
   140021d47:	add    BYTE PTR [rdi+0x1800021a],bh
   140021d4d:	sbb    eax,DWORD PTR [rdx]
   140021d4f:	add    BYTE PTR [rbx+0x1b],al
   140021d52:	add    al,BYTE PTR [rax]
   140021d54:	rcr    DWORD PTR [rdx],1
   140021d56:	add    al,BYTE PTR [rax]
   140021d58:	out    dx,al
   140021d59:	sbb    eax,DWORD PTR [rdx]
   140021d5b:	add    BYTE PTR [rbx],dl
   140021d5d:	sbb    al,0x2
   140021d5f:	add    BYTE PTR [rax-0x77],cl
   140021d62:	pop    rsp
   140021d63:	and    al,0x10
   140021d65:	mov    QWORD PTR [rsp+0x18],rbp
   140021d6a:	mov    QWORD PTR [rsp+0x20],rsi
   140021d6f:	mov    QWORD PTR [rsp+0x8],rcx
   140021d74:	push   rdi
   140021d75:	push   r12
   140021d77:	push   r13
   140021d79:	push   r14
   140021d7b:	push   r15
   140021d7d:	mov    rbx,QWORD PTR [rcx+0x8]
   140021d81:	mov    r9,QWORD PTR [rcx+0x10]
   140021d85:	mov    rdi,QWORD PTR [rcx+0x18]
   140021d89:	mov    r12,QWORD PTR [rbx+0x10]
   140021d8d:	mov    r8,QWORD PTR [rcx+0x20]
   140021d91:	mov    r11,QWORD PTR [rcx+0x28]
   140021d95:	movzx  r14d,BYTE PTR [r12+0x40]
   140021d9b:	movzx  r10d,BYTE PTR [r12+0x41]
   140021da1:	movzx  r13d,BYTE PTR [r12+0x42]
   140021da7:	movzx  esi,BYTE PTR [r12+0x43]
   140021dad:	movzx  ebp,BYTE PTR [r12+0x44]
   140021db3:	mov    r15,rdx
   140021db6:	mov    edx,0x2840
   140021dbb:	test   r14b,r14b
   140021dbe:	je     0x140021dce
   140021dc0:	test   r10b,r10b
   140021dc3:	jne    0x140021f60
   140021dc9:	jmp    0x140021ee0
   140021dce:	test   r10b,r10b
   140021dd1:	jne    0x140021e13
   140021dd3:	lea    rdx,[r9+0x1]
   140021dd7:	cmp    rdx,rdi
   140021dda:	jae    0x140021e13
   140021ddc:	nop    DWORD PTR [rax+0x0]
   140021de0:	cmp    r8,r11
   140021de3:	jae    0x140021e13
   140021de5:	movzx  ecx,BYTE PTR [r9]
   140021de9:	lea    eax,[rcx+0x20]
   140021dec:	cmp    al,0x12
   140021dee:	jbe    0x140021e13
   140021df0:	movzx  eax,BYTE PTR [rdx]
   140021df3:	movzx  ecx,cl
   140021df6:	add    rdx,0x2
   140021dfa:	shl    cx,0x8
   140021dfe:	add    r8,0x2
   140021e02:	add    r9,0x2
   140021e06:	or     cx,ax
   140021e09:	mov    WORD PTR [r8-0x2],cx
   140021e0e:	cmp    rdx,rdi
   140021e11:	jb     0x140021de0
   140021e13:	cmp    r9,rdi
   140021e16:	jae    0x140022214
   140021e1c:	cmp    r8,r11
   140021e1f:	jae    0x1400221b8
   140021e25:	movzx  edx,BYTE PTR [r9]
   140021e29:	inc    r9
   140021e2c:	movzx  ecx,r10b
   140021e30:	test   r10b,r10b
   140021e33:	je     0x140021e6d
   140021e35:	sub    ecx,0x1
   140021e38:	je     0x140021e5e
   140021e3a:	sub    ecx,0x1
   140021e3d:	jne    0x140021e13
   140021e3f:	movzx  ecx,bpl
   140021e43:	movzx  eax,dl
   140021e46:	add    r8,0x2
   140021e4a:	shl    cx,0x8
   140021e4e:	or     cx,ax
   140021e51:	xor    r10b,r10b
   140021e54:	mov    WORD PTR [r8-0x2],cx
   140021e59:	jmp    0x140021dd3
   140021e5e:	mov    bpl,dl
   140021e61:	mov    BYTE PTR [rbx+0x42],dl
   140021e64:	mov    BYTE PTR [rbx+0x40],0x2
   140021e68:	mov    r10b,0x2
   140021e6b:	jmp    0x140021e13
   140021e6d:	lea    eax,[rdx+0x20]
   140021e70:	cmp    al,0x12
   140021e72:	ja     0x140021e9b
   140021e74:	cmp    dl,0xe7
   140021e77:	jbe    0x140021ed5
   140021e79:	cmp    dl,0xef
   140021e7c:	jbe    0x140021ead
   140021e7e:	cmp    dl,0xf1
   140021e81:	je     0x140021ec2
   140021e83:	cmp    dl,0xf0
   140021e86:	jne    0x14002219d
   140021e8c:	mov    BYTE PTR [rbx+0x41],dl
   140021e8f:	mov    BYTE PTR [rbx+0x40],0x1
   140021e93:	mov    r10b,0x1
   140021e96:	jmp    0x140021e13
   140021e9b:	mov    bpl,dl
   140021e9e:	mov    BYTE PTR [rbx+0x41],dl
   140021ea1:	mov    BYTE PTR [rbx+0x40],0x1
   140021ea5:	mov    r10b,0x2
   140021ea8:	jmp    0x140021e13
   140021ead:	mov    r14b,0x1
   140021eb0:	lea    esi,[rdx+0x18]
   140021eb3:	mov    BYTE PTR [rbx+0x41],dl
   140021eb6:	mov    BYTE PTR [rbx+0x40],r14b
   140021eba:	mov    r10b,0x6
   140021ebd:	jmp    0x140021f60
   140021ec2:	mov    r14b,0x1
   140021ec5:	mov    BYTE PTR [rbx+0x41],0xf1
   140021ec9:	mov    r10b,0x4
   140021ecc:	mov    BYTE PTR [rbx+0x40],r14b
   140021ed0:	jmp    0x140021f60
   140021ed5:	lea    esi,[rdx+0x20]
   140021ed8:	mov    r14b,0x1
   140021edb:	mov    edx,0x2840
   140021ee0:	cmp    r9,rdi
   140021ee3:	jae    0x140022214
   140021ee9:	nop    DWORD PTR [rax+0x0]
   140021ef0:	cmp    r8,r11
   140021ef3:	jae    0x140021f60
   140021ef5:	movzx  ecx,BYTE PTR [r9]
   140021ef9:	cmp    cl,0x20
   140021efc:	jb     0x140021f60
   140021efe:	inc    r9
   140021f01:	cmp    cl,0x7f
   140021f04:	ja     0x140021f0f
   140021f06:	movzx  eax,cl
   140021f09:	mov    WORD PTR [r8],ax
   140021f0d:	jmp    0x140021f53
   140021f0f:	movzx  ecx,cl
   140021f12:	movsx  rax,sil
   140021f16:	and    ecx,0x7f
   140021f19:	add    ecx,DWORD PTR [r12+rax*4]
   140021f1d:	cmp    ecx,0xffff
   140021f23:	jbe    0x140021f4f
   140021f25:	mov    eax,ecx
   140021f27:	add    r8,0x2
   140021f2b:	shr    eax,0xa
   140021f2e:	sub    ax,dx
   140021f31:	mov    WORD PTR [r8-0x2],ax
   140021f36:	mov    eax,0x3ff
   140021f3b:	and    cx,ax
   140021f3e:	mov    eax,0xdc00
   140021f43:	or     cx,ax
   140021f46:	cmp    r8,r11
   140021f49:	jae    0x1400221ad
   140021f4f:	mov    WORD PTR [r8],cx
   140021f53:	add    r8,0x2
   140021f57:	cmp    r9,rdi
   140021f5a:	jb     0x140021ef0
   140021f5c:	nop    DWORD PTR [rax+0x0]
   140021f60:	cmp    r9,rdi
   140021f63:	jae    0x140022214
   140021f69:	cmp    r8,r11
   140021f6c:	jae    0x1400221b8
   140021f72:	movzx  edx,BYTE PTR [r9]
   140021f76:	movzx  eax,r10b
   140021f7a:	inc    r9
   140021f7d:	cmp    eax,0x6
   140021f80:	ja     0x140021f60
   140021f82:	lea    rcx,[rip+0xfffffffffffde077]        # 0x140000000
   140021f89:	mov    ecx,DWORD PTR [rcx+rax*4+0x22228]
   140021f90:	lea    rax,[rip+0xfffffffffffde069]        # 0x140000000
   140021f97:	add    rcx,rax
   140021f9a:	jmp    rcx
   140021f9c:	movzx  ecx,dl
   140021f9f:	mov    eax,0x1
   140021fa4:	shl    eax,cl
   140021fa6:	test   eax,0x2601
   140021fab:	jne    0x140022042
   140021fb1:	cmp    dl,0x10
   140021fb4:	jb     0x140021fca
   140021fb6:	cmp    dl,0x17
   140021fb9:	jbe    0x14002203a
   140021fbb:	lea    esi,[rdx-0x18]
   140021fbe:	mov    r10b,0x6
   140021fc1:	mov    BYTE PTR [rbx+0x41],dl
   140021fc4:	mov    BYTE PTR [rbx+0x40],0x1
   140021fc8:	jmp    0x140021f60
   140021fca:	cmp    dl,0x8
   140021fcd:	ja     0x140021fdf
   140021fcf:	lea    r13d,[rdx-0x1]
   140021fd3:	mov    r10b,0x3
   140021fd6:	mov    BYTE PTR [rbx+0x41],dl
   140021fd9:	mov    BYTE PTR [rbx+0x40],0x1
   140021fdd:	jmp    0x140021f60
   140021fdf:	cmp    dl,0xb
   140021fe2:	jne    0x140021ff3
   140021fe4:	mov    r10b,0x4
   140021fe7:	mov    BYTE PTR [rbx+0x41],dl
   140021fea:	mov    BYTE PTR [rbx+0x40],0x1
   140021fee:	jmp    0x140021f60
   140021ff3:	cmp    dl,0xe
   140021ff6:	jne    0x140022190
   140021ffc:	mov    r10b,0x1
   140021fff:	mov    BYTE PTR [rbx+0x41],dl
   140022002:	mov    BYTE PTR [rbx+0x40],r10b
   140022006:	jmp    0x140021f60
   14002200b:	mov    bpl,dl
   14002200e:	mov    BYTE PTR [rbx+0x42],dl
   140022011:	mov    BYTE PTR [rbx+0x40],0x2
   140022015:	mov    r10b,0x2
   140022018:	jmp    0x140021f60
   14002201d:	mov    sil,dl
   140022020:	mov    bpl,dl
   140022023:	mov    BYTE PTR [rbx+0x42],dl
   140022026:	shr    sil,0x5
   14002202a:	mov    BYTE PTR [rbx+0x40],0x2
   14002202e:	mov    r10b,0x5
   140022031:	and    bpl,0x1f
   140022035:	jmp    0x140021f60
   14002203a:	lea    esi,[rdx-0x10]
   14002203d:	jmp    0x140021edb
   140022042:	movzx  eax,dl
   140022045:	add    r8,0x2
   140022049:	mov    WORD PTR [r8-0x2],ax
   14002204e:	jmp    0x140021edb
   140022053:	movzx  ecx,bpl
   140022057:	movzx  eax,dl
   14002205a:	add    r8,0x2
   14002205e:	shl    cx,0x8
   140022062:	or     cx,ax
   140022065:	xor    r10b,r10b
   140022068:	mov    WORD PTR [r8-0x2],cx
   14002206d:	jmp    0x140021edb
   140022072:	cmp    dl,0x80
   140022075:	jae    0x1400220a6
   140022077:	movzx  eax,dl
   14002207a:	lea    rdx,[rip+0xfffffffffffddf7f]        # 0x140000000
   140022081:	movsx  rcx,r13b
   140022085:	movzx  ecx,WORD PTR [rdx+rcx*4+0x4c0d0]
   14002208d:	add    r8,0x2
   140022091:	mov    edx,0x2840
   140022096:	add    cx,ax
   140022099:	xor    r10b,r10b
   14002209c:	mov    WORD PTR [r8-0x2],cx
   1400220a1:	jmp    0x140021ee0
   1400220a6:	movzx  ecx,dl
   1400220a9:	movsx  rax,r13b
   1400220ad:	mov    edx,0x2840
   1400220b2:	and    ecx,0x7f
   1400220b5:	add    ecx,DWORD PTR [r12+rax*4]
   1400220b9:	cmp    ecx,0xffff
   1400220bf:	jbe    0x1400220eb
   1400220c1:	mov    eax,ecx
   1400220c3:	add    r8,0x2
   1400220c7:	shr    eax,0xa
   1400220ca:	sub    ax,dx
   1400220cd:	mov    WORD PTR [r8-0x2],ax
   1400220d2:	mov    eax,0x3ff
   1400220d7:	and    cx,ax
   1400220da:	mov    eax,0xdc00
   1400220df:	or     cx,ax
   1400220e2:	cmp    r8,r11
   1400220e5:	jae    0x1400221ad
   1400220eb:	mov    WORD PTR [r8],cx
   1400220ef:	add    r8,0x2
   1400220f3:	xor    r10b,r10b
   1400220f6:	jmp    0x140021ee0
   1400220fb:	movzx  eax,dl
   1400220fe:	movzx  ecx,bpl
   140022102:	shl    ecx,0x8
   140022105:	or     ecx,eax
   140022107:	movsx  rax,sil
   14002210b:	shl    ecx,0x7
   14002210e:	add    ecx,0x10000
   140022114:	xor    r10b,r10b
   140022117:	mov    DWORD PTR [r12+rax*4],ecx
   14002211b:	jmp    0x140021edb
   140022120:	test   dl,dl
   140022122:	je     0x14002220c
   140022128:	cmp    dl,0x68
   14002212b:	jae    0x140022143
   14002212d:	movzx  ecx,dl
   140022130:	movsx  rax,sil
   140022134:	shl    ecx,0x7
   140022137:	xor    r10b,r10b
   14002213a:	mov    DWORD PTR [r12+rax*4],ecx
   14002213e:	jmp    0x140021edb
   140022143:	lea    eax,[rdx-0x68]
   140022146:	cmp    al,0x40
   140022148:	jae    0x140022166
   14002214a:	movzx  ecx,dl
   14002214d:	movsx  rax,sil
   140022151:	shl    ecx,0x7
   140022154:	add    ecx,0xac00
   14002215a:	xor    r10b,r10b
   14002215d:	mov    DWORD PTR [r12+rax*4],ecx
   140022161:	jmp    0x140021edb
   140022166:	cmp    dl,0xf9
   140022169:	jb     0x140022207
   14002216f:	movzx  eax,dl
   140022172:	lea    rdx,[rip+0xfffffffffffdde87]        # 0x140000000
   140022179:	movsx  rcx,sil
   14002217d:	mov    eax,DWORD PTR [rdx+rax*4+0x4bd2c]
   140022184:	xor    r10b,r10b
   140022187:	mov    DWORD PTR [r12+rcx*4],eax
   14002218b:	jmp    0x140021edb
   140022190:	cmp    dl,0xf
   140022193:	jne    0x14002219d
   140022195:	xor    r14b,r14b
   140022198:	jmp    0x140021dd3
   14002219d:	mov    DWORD PTR [r15],0xc
   1400221a4:	mov    BYTE PTR [rbx+0x41],dl
   1400221a7:	mov    BYTE PTR [rbx+0x40],0x1
   1400221ab:	jmp    0x140022214
   1400221ad:	mov    WORD PTR [rbx+0x90],cx
   1400221b4:	mov    BYTE PTR [rbx+0x5d],0x1
   1400221b8:	mov    DWORD PTR [r15],0xf
   1400221bf:	test   r10b,r10b
   1400221c2:	jne    0x1400221c8
   1400221c4:	mov    BYTE PTR [rbx+0x40],r10b
   1400221c8:	mov    rax,QWORD PTR [rsp+0x30]
   1400221cd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400221d2:	mov    BYTE PTR [r12+0x43],sil
   1400221d7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400221dc:	mov    BYTE PTR [r12+0x44],bpl
   1400221e1:	mov    rbp,QWORD PTR [rsp+0x40]
   1400221e6:	mov    BYTE PTR [r12+0x40],r14b
   1400221eb:	mov    BYTE PTR [r12+0x41],r10b
   1400221f0:	mov    BYTE PTR [r12+0x42],r13b
   1400221f5:	mov    QWORD PTR [rax+0x10],r9
   1400221f9:	mov    QWORD PTR [rax+0x20],r8
   1400221fd:	pop    r15
   1400221ff:	pop    r14
   140022201:	pop    r13
   140022203:	pop    r12
   140022205:	pop    rdi
   140022206:	ret    
   140022207:	mov    BYTE PTR [rbx+0x42],dl
   14002220a:	jmp    0x140022210
   14002220c:	mov    BYTE PTR [rbx+0x42],0x0
   140022210:	mov    BYTE PTR [rbx+0x40],0x2
   140022214:	mov    eax,DWORD PTR [r15]
   140022217:	test   eax,eax
   140022219:	jle    0x1400221bf
   14002221b:	cmp    eax,0xf
   14002221e:	je     0x1400221bf
   140022220:	xor    r10b,r10b
   140022223:	jmp    0x1400221c8
   140022225:	nop    DWORD PTR [rax]
   140022228:	pushf  
   140022229:	(bad)  
   14002222a:	add    al,BYTE PTR [rax]
   14002222c:	or     esp,DWORD PTR [rax]
   14002222e:	add    al,BYTE PTR [rax]
   140022230:	push   rbx
   140022231:	and    BYTE PTR [rdx],al
   140022233:	add    BYTE PTR [rdx+0x20],dh
   140022236:	add    al,BYTE PTR [rax]
   140022238:	sbb    eax,0xfb000220
   14002223d:	and    BYTE PTR [rdx],al
   14002223f:	add    BYTE PTR [rax],ah
   140022241:	and    DWORD PTR [rdx],eax
   140022243:	add    ah,cl
   140022245:	int3   
   140022246:	int3   
   140022247:	int3   
   140022248:	int3   
   140022249:	int3   
   14002224a:	int3   
   14002224b:	int3   
   14002224c:	int3   
   14002224d:	int3   
   14002224e:	int3   
   14002224f:	int3   
   140022250:	xor    r9d,r9d
   140022253:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140022260:	movsxd rax,r9d
   140022263:	mov    r8d,edx
   140022266:	sub    r8d,DWORD PTR [rcx+rax*4]
   14002226a:	cmp    r8d,0x7f
   14002226e:	jbe    0x14002227c
   140022270:	inc    r9d
   140022273:	cmp    r9d,0x8
   140022277:	jl     0x140022260
   140022279:	mov    al,0xff
   14002227b:	ret    
   14002227c:	mov    al,r9b
   14002227f:	ret    
   140022280:	mov    QWORD PTR [rsp+0x8],rbx
   140022285:	movsx  r11,BYTE PTR [rcx+0x4b]
   14002228a:	movzx  r10d,dl
   14002228e:	mov    r9,rcx
   140022291:	mov    rax,r11
   140022294:	mov    r8,r11
   140022297:	dec    eax
   140022299:	sub    r8,0x1
   14002229d:	jns    0x1400222a7
   14002229f:	mov    eax,0x7
   1400222a4:	mov    r8,rax
   1400222a7:	cmp    BYTE PTR [rcx+r8*1+0x4c],r10b
   1400222ac:	jne    0x140022297
   1400222ae:	xor    ebx,ebx
   1400222b0:	lea    ecx,[rax+0x1]
   1400222b3:	cmp    ecx,0x8
   1400222b6:	cmove  ecx,ebx
   1400222b9:	movsxd rdx,ecx
   1400222bc:	cmp    ecx,r11d
   1400222bf:	je     0x140022304
   1400222c1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400222d0:	movzx  eax,BYTE PTR [r9+rdx*1+0x4c]
   1400222d6:	movsxd r11,ecx
   1400222d9:	inc    ecx
   1400222db:	mov    BYTE PTR [r9+r8*1+0x4c],al
   1400222e0:	mov    r8,rdx
   1400222e3:	inc    rdx
   1400222e6:	cmp    ecx,0x8
   1400222e9:	jne    0x1400222f0
   1400222eb:	mov    ecx,ebx
   1400222ed:	mov    rdx,rbx
   1400222f0:	movsx  eax,BYTE PTR [r9+0x4b]
   1400222f5:	cmp    ecx,eax
   1400222f7:	jne    0x1400222d0
   1400222f9:	mov    BYTE PTR [r11+r9*1+0x4c],r10b
   1400222fe:	mov    rbx,QWORD PTR [rsp+0x8]
   140022303:	ret    
   140022304:	mov    rbx,QWORD PTR [rsp+0x8]
   140022309:	cdqe   
   14002230b:	mov    BYTE PTR [rax+r9*1+0x4c],r10b
   140022310:	ret    
   140022311:	int3   
   140022312:	int3   
   140022313:	int3   
   140022314:	int3   
   140022315:	int3   
   140022316:	int3   
   140022317:	int3   
   140022318:	int3   
   140022319:	int3   
   14002231a:	int3   
   14002231b:	int3   
   14002231c:	int3   
   14002231d:	int3   
   14002231e:	int3   
   14002231f:	int3   
   140022320:	lea    r11,[rip+0x29de9]        # 0x14004c110
   140022327:	xor    r9d,r9d
   14002232a:	lea    r10,[rip+0x29dfb]        # 0x14004c12c
   140022331:	mov    r8,r11
   140022334:	mov    eax,ecx
   140022336:	sub    eax,DWORD PTR [r8]
   140022339:	cmp    eax,0x7f
   14002233c:	jbe    0x1400223b2
   14002233e:	add    r8,0x4
   140022342:	inc    r9d
   140022345:	cmp    r8,r10
   140022348:	jl     0x140022334
   14002234a:	cmp    ecx,0x80
   140022350:	jae    0x140022356
   140022352:	or     eax,0xffffffff
   140022355:	ret    
   140022356:	cmp    ecx,0x3400
   14002235c:	jb     0x1400223a3
   14002235e:	lea    eax,[rcx-0x10000]
   140022364:	cmp    eax,0x4000
   140022369:	jb     0x1400223a3
   14002236b:	lea    eax,[rcx-0x1d000]
   140022371:	cmp    eax,0x2fff
   140022376:	jbe    0x1400223a3
   140022378:	cmp    ecx,0xe000
   14002237e:	jb     0x140022352
   140022380:	cmp    ecx,0xfeff
   140022386:	je     0x140022352
   140022388:	cmp    ecx,0xfff0
   14002238e:	jae    0x140022352
   140022390:	mov    eax,ecx
   140022392:	and    eax,0x7fffff80
   140022397:	mov    DWORD PTR [rdx],eax
   140022399:	lea    eax,[rcx-0xac00]
   14002239f:	shr    eax,0x7
   1400223a2:	ret    
   1400223a3:	mov    eax,ecx
   1400223a5:	and    eax,0x7fffff80
   1400223aa:	shr    ecx,0x7
   1400223ad:	mov    DWORD PTR [rdx],eax
   1400223af:	mov    eax,ecx
   1400223b1:	ret    
   1400223b2:	movsxd rax,r9d
   1400223b5:	mov    eax,DWORD PTR [r11+rax*4]
   1400223b9:	mov    DWORD PTR [rdx],eax
   1400223bb:	lea    eax,[r9+0xf9]
   1400223c2:	ret    
   1400223c3:	int3   
   1400223c4:	int3   
   1400223c5:	int3   
   1400223c6:	int3   
   1400223c7:	int3   
   1400223c8:	int3   
   1400223c9:	int3   
   1400223ca:	int3   
   1400223cb:	int3   
   1400223cc:	int3   
   1400223cd:	int3   
   1400223ce:	int3   
   1400223cf:	int3   
   1400223d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400223d5:	mov    QWORD PTR [rsp+0x8],rcx
   1400223da:	push   rbx
   1400223db:	push   rbp
   1400223dc:	push   rsi
   1400223dd:	push   rdi
   1400223de:	push   r12
   1400223e0:	push   r13
   1400223e2:	push   r14
   1400223e4:	push   r15
   1400223e6:	sub    rsp,0x58
   1400223ea:	mov    rdx,QWORD PTR [rcx+0x8]
   1400223ee:	mov    rsi,QWORD PTR [rcx+0x20]
   1400223f2:	mov    r14d,DWORD PTR [rcx+0x28]
   1400223f6:	mov    r13,QWORD PTR [rdx+0x10]
   1400223fa:	mov    ebx,DWORD PTR [rdx+0x54]
   1400223fd:	mov    r8,QWORD PTR [rcx+0x18]
   140022401:	movzx  r10d,BYTE PTR [r13+0x49]
   140022406:	movzx  r11d,BYTE PTR [r13+0x48]
   14002240b:	mov    r15,QWORD PTR [rcx+0x10]
   14002240f:	mov    r9d,DWORD PTR [r13+r10*4+0x20]
   140022414:	mov    rdi,QWORD PTR [rcx+0x30]
   140022418:	sub    r14d,esi
   14002241b:	mov    eax,ebx
   14002241d:	mov    QWORD PTR [rsp+0x38],rdx
   140022422:	mov    rbp,rcx
   140022425:	neg    eax
   140022427:	mov    DWORD PTR [rsp+0x20],r9d
   14002242c:	mov    QWORD PTR [rsp+0x30],r13
   140022431:	sbb    r12d,r12d
   140022434:	mov    QWORD PTR [rsp+0x40],r8
   140022439:	mov    BYTE PTR [rsp+0xb8],r11b
   140022441:	mov    BYTE PTR [rsp+0xb0],r10b
   140022449:	xor    edx,edx
   14002244b:	mov    DWORD PTR [rsp+0x24],r12d
   140022450:	test   r11b,r11b
   140022453:	je     0x140022934
   140022459:	test   ebx,ebx
   14002245b:	je     0x140022466
   14002245d:	test   r14d,r14d
   140022460:	jg     0x140022505
   140022466:	cmp    r15,r8
   140022469:	jae    0x140022e65
   14002246f:	test   r14d,r14d
   140022472:	jle    0x140022e57
   140022478:	movzx  ebx,WORD PTR [r15]
   14002247c:	inc    edx
   14002247e:	add    r15,0x2
   140022482:	lea    eax,[rbx-0x20]
   140022485:	mov    DWORD PTR [rsp+0x2c],edx
   140022489:	cmp    eax,0x5f
   14002248c:	ja     0x1400224b1
   14002248e:	mov    BYTE PTR [rsi],bl
   140022490:	inc    rsi
   140022493:	test   rdi,rdi
   140022496:	je     0x140022562
   14002249c:	mov    DWORD PTR [rdi],r12d
   14002249f:	add    rdi,0x4
   1400224a3:	dec    r14d
   1400224a6:	xor    ebx,ebx
   1400224a8:	mov    r12d,edx
   1400224ab:	mov    DWORD PTR [rsp+0x24],edx
   1400224af:	jmp    0x140022466
   1400224b1:	cmp    ebx,0x20
   1400224b4:	jae    0x1400224d9
   1400224b6:	mov    ecx,ebx
   1400224b8:	mov    eax,0x1
   1400224bd:	shl    eax,cl
   1400224bf:	test   eax,0x2601
   1400224c4:	jne    0x14002248e
   1400224c6:	mov    r13,QWORD PTR [rsp+0x30]
   1400224cb:	bts    ebx,0x8
   1400224cf:	mov    ecx,0x2
   1400224d4:	jmp    0x140022ccb
   1400224d9:	mov    eax,ebx
   1400224db:	sub    eax,r9d
   1400224de:	cmp    eax,0x7f
   1400224e1:	ja     0x1400224e9
   1400224e3:	or     al,0x80
   1400224e5:	mov    BYTE PTR [rsi],al
   1400224e7:	jmp    0x140022490
   1400224e9:	mov    eax,ebx
   1400224eb:	and    eax,0xfffff800
   1400224f0:	cmp    eax,0xd800
   1400224f5:	jne    0x1400226df
   1400224fb:	bt     ebx,0xa
   1400224ff:	jb     0x140022d8e
   140022505:	cmp    r15,r8
   140022508:	jae    0x140022e65
   14002250e:	movzx  r13d,WORD PTR [r15]
   140022512:	mov    eax,r13d
   140022515:	mov    ecx,r13d
   140022518:	and    eax,0xfffffc00
   14002251d:	cmp    eax,0xdc00
   140022522:	jne    0x140022d8e
   140022528:	inc    edx
   14002252a:	mov    eax,ebx
   14002252c:	add    r15,0x2
   140022530:	shl    eax,0xa
   140022533:	mov    DWORD PTR [rsp+0x2c],edx
   140022537:	lea    r12d,[rax+rcx*1-0x35fdc00]
   14002253f:	mov    eax,r12d
   140022542:	sub    eax,r9d
   140022545:	cmp    eax,0x7f
   140022548:	ja     0x140022573
   14002254a:	or     al,0x80
   14002254c:	inc    rsi
   14002254f:	mov    BYTE PTR [rsi-0x1],al
   140022552:	test   rdi,rdi
   140022555:	je     0x140022562
   140022557:	mov    eax,DWORD PTR [rsp+0x24]
   14002255b:	add    rdi,0x4
   14002255f:	mov    DWORD PTR [rdi-0x4],eax
   140022562:	dec    r14d
   140022565:	mov    r12d,edx
   140022568:	mov    DWORD PTR [rsp+0x24],edx
   14002256c:	xor    ebx,ebx
   14002256e:	jmp    0x140022466
   140022573:	mov    rdx,QWORD PTR [rsp+0x30]
   140022578:	xor    ebp,ebp
   14002257a:	nop    WORD PTR [rax+rax*1+0x0]
   140022580:	movsxd rax,ebp
   140022583:	mov    ecx,r12d
   140022586:	sub    ecx,DWORD PTR [rdx+rax*4+0x20]
   14002258a:	cmp    ecx,0x7f
   14002258d:	jbe    0x140022633
   140022593:	inc    ebp
   140022595:	cmp    ebp,0x8
   140022598:	jl     0x140022580
   14002259a:	lea    rdx,[rsp+0x28]
   14002259f:	mov    ecx,r12d
   1400225a2:	call   0x140022320
   1400225a7:	mov    ebp,eax
   1400225a9:	test   eax,eax
   1400225ab:	js     0x140022692
   1400225b1:	mov    r13,QWORD PTR [rsp+0x30]
   1400225b6:	sub    ebp,0x200
   1400225bc:	movsx  rdx,BYTE PTR [r13+0x4b]
   1400225c1:	mov    bl,BYTE PTR [rdx+r13*1+0x4c]
   1400225c6:	inc    dl
   1400225c8:	mov    BYTE PTR [rsp+0xb0],bl
   1400225cf:	mov    BYTE PTR [r13+0x4b],dl
   1400225d3:	cmp    dl,0x8
   1400225d6:	jne    0x1400225dd
   1400225d8:	mov    BYTE PTR [r13+0x4b],0x0
   1400225dd:	mov    ecx,DWORD PTR [rsp+0x28]
   1400225e1:	movzx  eax,bl
   1400225e4:	movzx  edx,bl
   1400225e7:	mov    DWORD PTR [rsp+0x20],ecx
   1400225eb:	mov    DWORD PTR [r13+rax*4+0x20],ecx
   1400225f0:	mov    rcx,r13
   1400225f3:	call   0x140022280
   1400225f8:	mov    r9d,DWORD PTR [rsp+0x20]
   1400225fd:	movzx  ebx,bl
   140022600:	shl    ebx,0xd
   140022603:	sub    r12d,r9d
   140022606:	or     ebx,ebp
   140022608:	shl    ebx,0x8
   14002260b:	or     ebx,r12d
   14002260e:	or     ebx,0xb000080
   140022614:	mov    r12d,DWORD PTR [rsp+0x24]
   140022619:	mov    r10b,BYTE PTR [rsp+0xb0]
   140022621:	mov    r11b,BYTE PTR [rsp+0xb8]
   140022629:	mov    ecx,0x4
   14002262e:	jmp    0x140022ccb
   140022633:	test   bpl,bpl
   140022636:	js     0x14002259a
   14002263c:	mov    r13,rdx
   14002263f:	movzx  eax,bpl
   140022643:	mov    BYTE PTR [rsp+0xb0],bpl
   14002264b:	mov    ecx,DWORD PTR [rdx+rax*4+0x20]
   14002264f:	movzx  edx,bpl
   140022653:	mov    DWORD PTR [rsp+0x20],ecx
   140022657:	mov    rcx,r13
   14002265a:	call   0x140022280
   14002265f:	mov    r9d,DWORD PTR [rsp+0x20]
   140022664:	mov    r11b,BYTE PTR [rsp+0xb8]
   14002266c:	sub    r12d,r9d
   14002266f:	movzx  ebx,bpl
   140022673:	mov    ecx,0x2
   140022678:	add    ebx,0x10
   14002267b:	mov    r10b,bpl
   14002267e:	shl    ebx,0x8
   140022681:	or     ebx,r12d
   140022684:	mov    r12d,DWORD PTR [rsp+0x24]
   140022689:	bts    ebx,0x7
   14002268d:	jmp    0x140022ccb
   140022692:	mov    r12d,DWORD PTR [rsp+0x24]
   140022697:	xor    r11b,r11b
   14002269a:	mov    BYTE PTR [rsi],0xf
   14002269d:	inc    rsi
   1400226a0:	mov    BYTE PTR [rsp+0xb8],r11b
   1400226a8:	test   rdi,rdi
   1400226ab:	je     0x1400226b4
   1400226ad:	mov    DWORD PTR [rdi],r12d
   1400226b0:	add    rdi,0x4
   1400226b4:	mov    r9d,DWORD PTR [rsp+0x20]
   1400226b9:	mov    r10b,BYTE PTR [rsp+0xb0]
   1400226c1:	movzx  ebx,bx
   1400226c4:	movzx  eax,r13w
   1400226c8:	mov    r13,QWORD PTR [rsp+0x30]
   1400226cd:	shl    ebx,0x10
   1400226d0:	dec    r14d
   1400226d3:	mov    ecx,0x4
   1400226d8:	or     ebx,eax
   1400226da:	jmp    0x140022ccb
   1400226df:	cmp    ebx,0xa0
   1400226e5:	jae    0x1400226fd
   1400226e7:	mov    r13,QWORD PTR [rsp+0x30]
   1400226ec:	and    ebx,0x7f
   1400226ef:	mov    ecx,0x2
   1400226f4:	bts    ebx,0x9
   1400226f8:	jmp    0x140022ccb
   1400226fd:	cmp    ebx,0xfeff
   140022703:	je     0x140022924
   140022709:	cmp    ebx,0xfff0
   14002270f:	jae    0x140022924
   140022715:	mov    r13,QWORD PTR [rsp+0x30]
   14002271a:	xor    ebp,ebp
   14002271c:	nop    DWORD PTR [rax+0x0]
   140022720:	movsxd rax,ebp
   140022723:	mov    ecx,ebx
   140022725:	sub    ecx,DWORD PTR [r13+rax*4+0x20]
   14002272a:	cmp    ecx,0x7f
   14002272d:	jbe    0x1400227e7
   140022733:	inc    ebp
   140022735:	cmp    ebp,0x8
   140022738:	jl     0x140022720
   14002273a:	xor    edx,edx
   14002273c:	lea    rbp,[rip+0x2998d]        # 0x14004c0d0
   140022743:	movsxd rcx,edx
   140022746:	mov    eax,ebx
   140022748:	sub    eax,DWORD PTR [rbp+rcx*4+0x0]
   14002274c:	cmp    eax,0x7f
   14002274f:	jbe    0x140022899
   140022755:	inc    edx
   140022757:	cmp    edx,0x8
   14002275a:	jl     0x140022743
   14002275c:	lea    rdx,[rsp+0x28]
   140022761:	mov    ecx,ebx
   140022763:	call   0x140022320
   140022768:	mov    ebp,eax
   14002276a:	test   eax,eax
   14002276c:	js     0x1400228bd
   140022772:	movsx  rdx,BYTE PTR [r13+0x4b]
   140022777:	mov    r8b,BYTE PTR [rdx+r13*1+0x4c]
   14002277c:	inc    dl
   14002277e:	mov    BYTE PTR [rsp+0xb0],r8b
   140022786:	mov    BYTE PTR [r13+0x4b],dl
   14002278a:	cmp    dl,0x8
   14002278d:	jne    0x140022794
   14002278f:	mov    BYTE PTR [r13+0x4b],0x0
   140022794:	mov    ecx,DWORD PTR [rsp+0x28]
   140022798:	movzx  eax,r8b
   14002279c:	movzx  edx,r8b
   1400227a0:	mov    DWORD PTR [rsp+0x20],ecx
   1400227a4:	mov    DWORD PTR [r13+rax*4+0x20],ecx
   1400227a9:	mov    rcx,r13
   1400227ac:	call   0x140022280
   1400227b1:	movzx  r10d,BYTE PTR [rsp+0xb0]
   1400227ba:	lea    r11d,[r10+0x18]
   1400227be:	mov    r9d,DWORD PTR [rsp+0x20]
   1400227c3:	mov    eax,ebx
   1400227c5:	shl    r11d,0x10
   1400227c9:	sub    eax,r9d
   1400227cc:	mov    ebx,r11d
   1400227cf:	mov    r11b,BYTE PTR [rsp+0xb8]
   1400227d7:	or     ebx,eax
   1400227d9:	shl    ebp,0x8
   1400227dc:	or     ebx,ebp
   1400227de:	bts    ebx,0x7
   1400227e2:	jmp    0x140022cc6
   1400227e7:	test   bpl,bpl
   1400227ea:	js     0x14002273a
   1400227f0:	cmp    r15,r8
   1400227f3:	jae    0x140022844
   1400227f5:	movzx  ecx,WORD PTR [r15]
   1400227f9:	movsx  rax,bpl
   1400227fd:	mov    edx,DWORD PTR [r13+rax*4+0x20]
   140022802:	lea    eax,[rdx+0x7f]
   140022805:	cmp    ecx,eax
   140022807:	ja     0x140022825
   140022809:	cmp    ecx,edx
   14002280b:	jae    0x140022844
   14002280d:	cmp    ecx,0x7f
   140022810:	ja     0x140022825
   140022812:	cmp    ecx,0x20
   140022815:	jae    0x140022844
   140022817:	mov    eax,0x1
   14002281c:	shl    eax,cl
   14002281e:	test   eax,0x2601
   140022823:	jne    0x140022844
   140022825:	mov    eax,ebx
   140022827:	movsx  ecx,bpl
   14002282b:	inc    ecx
   14002282d:	sub    eax,edx
   14002282f:	shl    ecx,0x8
   140022832:	mov    ebx,ecx
   140022834:	or     ebx,eax
   140022836:	bts    ebx,0x7
   14002283a:	mov    ecx,0x2
   14002283f:	jmp    0x140022ccb
   140022844:	movzx  eax,bpl
   140022848:	movzx  edx,bpl
   14002284c:	mov    BYTE PTR [rsp+0xb0],bpl
   140022854:	mov    ecx,DWORD PTR [r13+rax*4+0x20]
   140022859:	mov    DWORD PTR [rsp+0x20],ecx
   14002285d:	mov    rcx,r13
   140022860:	call   0x140022280
   140022865:	mov    r9d,DWORD PTR [rsp+0x20]
   14002286a:	mov    eax,ebx
   14002286c:	sub    eax,r9d
   14002286f:	movzx  r11d,bpl
   140022873:	mov    ecx,0x2
   140022878:	add    r11d,0x10
   14002287c:	mov    r10b,bpl
   14002287f:	shl    r11d,0x8
   140022883:	mov    ebx,r11d
   140022886:	mov    r11b,BYTE PTR [rsp+0xb8]
   14002288e:	or     ebx,eax
   140022890:	bts    ebx,0x7
   140022894:	jmp    0x140022ccb
   140022899:	test   dl,dl
   14002289b:	js     0x14002275c
   1400228a1:	movsx  rax,dl
   1400228a5:	mov    ecx,0x2
   1400228aa:	sub    ebx,DWORD PTR [rbp+rax*4+0x0]
   1400228ae:	movsx  eax,dl
   1400228b1:	inc    eax
   1400228b3:	shl    eax,0x8
   1400228b6:	or     ebx,eax
   1400228b8:	jmp    0x140022ccb
   1400228bd:	lea    eax,[rbx-0x3400]
   1400228c3:	cmp    eax,0xa400
   1400228c8:	jae    0x140022904
   1400228ca:	cmp    r15,QWORD PTR [rsp+0x40]
   1400228cf:	jae    0x1400228e1
   1400228d1:	movzx  eax,WORD PTR [r15]
   1400228d5:	sub    eax,0x3400
   1400228da:	cmp    eax,0xa400
   1400228df:	jae    0x140022904
   1400228e1:	mov    r9d,DWORD PTR [rsp+0x20]
   1400228e6:	mov    r10b,BYTE PTR [rsp+0xb0]
   1400228ee:	xor    r11b,r11b
   1400228f1:	mov    BYTE PTR [rsp+0xb8],r11b
   1400228f9:	or     ebx,0xf0000
   1400228ff:	jmp    0x140022cc6
   140022904:	mov    r9d,DWORD PTR [rsp+0x20]
   140022909:	mov    r10b,BYTE PTR [rsp+0xb0]
   140022911:	mov    r11b,BYTE PTR [rsp+0xb8]
   140022919:	or     ebx,0xe0000
   14002291f:	jmp    0x140022cc6
   140022924:	mov    r13,QWORD PTR [rsp+0x30]
   140022929:	or     ebx,0xe0000
   14002292f:	jmp    0x140022cc6
   140022934:	test   ebx,ebx
   140022936:	je     0x140022941
   140022938:	test   r14d,r14d
   14002293b:	jg     0x140022b24
   140022941:	cmp    r15,r8
   140022944:	jae    0x140022e65
   14002294a:	test   r14d,r14d
   14002294d:	jle    0x140022e57
   140022953:	movzx  ebx,WORD PTR [r15]
   140022957:	inc    edx
   140022959:	add    r15,0x2
   14002295d:	lea    eax,[rbx-0x3400]
   140022963:	mov    DWORD PTR [rsp+0x2c],edx
   140022967:	cmp    eax,0xa400
   14002296c:	jae    0x1400229a6
   14002296e:	cmp    r14d,0x2
   140022972:	jl     0x14002283a
   140022978:	mov    eax,ebx
   14002297a:	add    rsi,0x2
   14002297e:	shr    eax,0x8
   140022981:	mov    BYTE PTR [rsi-0x2],al
   140022984:	mov    BYTE PTR [rsi-0x1],bl
   140022987:	test   rdi,rdi
   14002298a:	je     0x140022997
   14002298c:	mov    DWORD PTR [rdi],r12d
   14002298f:	mov    DWORD PTR [rdi+0x4],r12d
   140022993:	add    rdi,0x8
   140022997:	sub    r14d,0x2
   14002299b:	mov    r12d,edx
   14002299e:	mov    DWORD PTR [rsp+0x24],edx
   1400229a2:	xor    ebx,ebx
   1400229a4:	jmp    0x140022941
   1400229a6:	lea    eax,[rbx-0x3400]
   1400229ac:	cmp    eax,0xbf00
   1400229b1:	jb     0x140022b0e
   1400229b7:	cmp    r15,r8
   1400229ba:	jae    0x1400229d0
   1400229bc:	movzx  eax,WORD PTR [r15]
   1400229c0:	sub    eax,0x3400
   1400229c5:	cmp    eax,0xa400
   1400229ca:	jb     0x140022ae1
   1400229d0:	lea    eax,[rbx-0x30]
   1400229d3:	cmp    eax,0xa
   1400229d6:	jb     0x140022aeb
   1400229dc:	lea    eax,[rbx-0x61]
   1400229df:	cmp    eax,0x1a
   1400229e2:	jb     0x140022aeb
   1400229e8:	lea    eax,[rbx-0x41]
   1400229eb:	cmp    eax,0x1a
   1400229ee:	jb     0x140022aeb
   1400229f4:	lea    rcx,[r13+0x20]
   1400229f8:	mov    edx,ebx
   1400229fa:	call   0x140022250
   1400229ff:	movzx  ebp,al
   140022a02:	test   al,al
   140022a04:	js     0x140022a5e
   140022a06:	movzx  ecx,al
   140022a09:	movzx  edx,al
   140022a0c:	mov    BYTE PTR [rsp+0xb8],0x1
   140022a14:	mov    ecx,DWORD PTR [r13+rcx*4+0x20]
   140022a19:	mov    BYTE PTR [rsp+0xb0],al
   140022a20:	mov    DWORD PTR [rsp+0x20],ecx
   140022a24:	mov    rcx,r13
   140022a27:	call   0x140022280
   140022a2c:	mov    r9d,DWORD PTR [rsp+0x20]
   140022a31:	mov    eax,ebx
   140022a33:	sub    eax,r9d
   140022a36:	movzx  r11d,bpl
   140022a3a:	mov    ecx,0x2
   140022a3f:	add    r11d,0xe0
   140022a46:	mov    r10b,bpl
   140022a49:	shl    r11d,0x8
   140022a4d:	mov    ebx,r11d
   140022a50:	mov    r11b,0x1
   140022a53:	or     ebx,eax
   140022a55:	bts    ebx,0x7
   140022a59:	jmp    0x140022ccb
   140022a5e:	lea    rdx,[rsp+0x28]
   140022a63:	mov    ecx,ebx
   140022a65:	call   0x140022320
   140022a6a:	mov    ebp,eax
   140022a6c:	test   eax,eax
   140022a6e:	js     0x140022acc
   140022a70:	movsx  rdx,BYTE PTR [r13+0x4b]
   140022a75:	mov    BYTE PTR [rsp+0xb8],0x1
   140022a7d:	mov    r8b,BYTE PTR [rdx+r13*1+0x4c]
   140022a82:	inc    dl
   140022a84:	mov    BYTE PTR [rsp+0xb0],r8b
   140022a8c:	mov    BYTE PTR [r13+0x4b],dl
   140022a90:	cmp    dl,0x8
   140022a93:	jne    0x140022a9a
   140022a95:	mov    BYTE PTR [r13+0x4b],0x0
   140022a9a:	mov    ecx,DWORD PTR [rsp+0x28]
   140022a9e:	movzx  eax,r8b
   140022aa2:	movzx  edx,r8b
   140022aa6:	mov    DWORD PTR [rsp+0x20],ecx
   140022aaa:	mov    DWORD PTR [r13+rax*4+0x20],ecx
   140022aaf:	mov    rcx,r13
   140022ab2:	call   0x140022280
   140022ab7:	movzx  r10d,BYTE PTR [rsp+0xb0]
   140022ac0:	lea    r11d,[r10+0xe8]
   140022ac7:	jmp    0x1400227be
   140022acc:	mov    r9d,DWORD PTR [rsp+0x20]
   140022ad1:	mov    r10b,BYTE PTR [rsp+0xb0]
   140022ad9:	mov    r11b,BYTE PTR [rsp+0xb8]
   140022ae1:	mov    ecx,0x2
   140022ae6:	jmp    0x140022ccb
   140022aeb:	movzx  eax,r10b
   140022aef:	mov    r11b,0x1
   140022af2:	mov    ecx,0x2
   140022af7:	add    eax,0xe0
   140022afc:	mov    BYTE PTR [rsp+0xb8],r11b
   140022b04:	shl    eax,0x8
   140022b07:	or     ebx,eax
   140022b09:	jmp    0x140022ccb
   140022b0e:	cmp    ebx,0xe000
   140022b14:	jae    0x140022cc0
   140022b1a:	bt     ebx,0xa
   140022b1e:	jb     0x140022d8e
   140022b24:	cmp    r15,r8
   140022b27:	jae    0x140022e65
   140022b2d:	movzx  r13d,WORD PTR [r15]
   140022b31:	mov    eax,r13d
   140022b34:	and    eax,0xfffffc00
   140022b39:	cmp    eax,0xdc00
   140022b3e:	jne    0x140022d8e
   140022b44:	inc    edx
   140022b46:	mov    eax,ebx
   140022b48:	add    r15,0x2
   140022b4c:	shl    eax,0xa
   140022b4f:	mov    DWORD PTR [rsp+0x2c],edx
   140022b53:	mov    rdx,QWORD PTR [rsp+0x30]
   140022b58:	lea    r12d,[rax+r13*1-0x35fdc00]
   140022b60:	xor    ebp,ebp
   140022b62:	movsxd rax,ebp
   140022b65:	mov    ecx,r12d
   140022b68:	sub    ecx,DWORD PTR [rdx+rax*4+0x20]
   140022b6c:	cmp    ecx,0x7f
   140022b6f:	jbe    0x140022c16
   140022b75:	inc    ebp
   140022b77:	cmp    ebp,0x8
   140022b7a:	jl     0x140022b62
   140022b7c:	cmp    r15,r8
   140022b7f:	jae    0x140022ca6
   140022b85:	cmp    bx,WORD PTR [r15]
   140022b89:	jne    0x140022ca6
   140022b8f:	lea    rdx,[rsp+0x28]
   140022b94:	mov    ecx,r12d
   140022b97:	call   0x140022320
   140022b9c:	mov    ebp,eax
   140022b9e:	test   eax,eax
   140022ba0:	js     0x140022c91
   140022ba6:	mov    r13,QWORD PTR [rsp+0x30]
   140022bab:	sub    ebp,0x200
   140022bb1:	mov    BYTE PTR [rsp+0xb8],0x1
   140022bb9:	movsx  rdx,BYTE PTR [r13+0x4b]
   140022bbe:	mov    bl,BYTE PTR [rdx+r13*1+0x4c]
   140022bc3:	inc    dl
   140022bc5:	mov    BYTE PTR [rsp+0xb0],bl
   140022bcc:	mov    BYTE PTR [r13+0x4b],dl
   140022bd0:	cmp    dl,0x8
   140022bd3:	jne    0x140022bda
   140022bd5:	mov    BYTE PTR [r13+0x4b],0x0
   140022bda:	mov    ecx,DWORD PTR [rsp+0x28]
   140022bde:	movzx  eax,bl
   140022be1:	movzx  edx,bl
   140022be4:	mov    DWORD PTR [rsp+0x20],ecx
   140022be8:	mov    DWORD PTR [r13+rax*4+0x20],ecx
   140022bed:	mov    rcx,r13
   140022bf0:	call   0x140022280
   140022bf5:	mov    r9d,DWORD PTR [rsp+0x20]
   140022bfa:	movzx  ebx,bl
   140022bfd:	shl    ebx,0xd
   140022c00:	sub    r12d,r9d
   140022c03:	or     ebx,ebp
   140022c05:	shl    ebx,0x8
   140022c08:	or     ebx,r12d
   140022c0b:	or     ebx,0xf1000080
   140022c11:	jmp    0x140022614
   140022c16:	test   bpl,bpl
   140022c19:	js     0x140022b7c
   140022c1f:	cmp    r15,r8
   140022c22:	jae    0x140022c38
   140022c24:	movzx  eax,WORD PTR [r15]
   140022c28:	sub    eax,0x3400
   140022c2d:	cmp    eax,0xa400
   140022c32:	jb     0x140022b7c
   140022c38:	mov    r13,rdx
   140022c3b:	movzx  eax,bpl
   140022c3f:	mov    BYTE PTR [rsp+0xb8],0x1
   140022c47:	mov    ecx,DWORD PTR [rdx+rax*4+0x20]
   140022c4b:	movzx  edx,bpl
   140022c4f:	mov    BYTE PTR [rsp+0xb0],bpl
   140022c57:	mov    DWORD PTR [rsp+0x20],ecx
   140022c5b:	mov    rcx,r13
   140022c5e:	call   0x140022280
   140022c63:	mov    r9d,DWORD PTR [rsp+0x20]
   140022c68:	movzx  ebx,bpl
   140022c6c:	add    ebx,0xe0
   140022c72:	sub    r12d,r9d
   140022c75:	mov    ecx,0x2
   140022c7a:	shl    ebx,0x8
   140022c7d:	mov    r10b,bpl
   140022c80:	mov    r11b,0x1
   140022c83:	or     ebx,r12d
   140022c86:	mov    r12d,DWORD PTR [rsp+0x24]
   140022c8b:	bts    ebx,0x7
   140022c8f:	jmp    0x140022ccb
   140022c91:	mov    r9d,DWORD PTR [rsp+0x20]
   140022c96:	mov    r10b,BYTE PTR [rsp+0xb0]
   140022c9e:	mov    r11b,BYTE PTR [rsp+0xb8]
   140022ca6:	mov    r12d,DWORD PTR [rsp+0x24]
   140022cab:	movzx  ebx,bx
   140022cae:	mov    ecx,0x4
   140022cb3:	shl    ebx,0x10
   140022cb6:	or     ebx,r13d
   140022cb9:	mov    r13,QWORD PTR [rsp+0x30]
   140022cbe:	jmp    0x140022ccb
   140022cc0:	or     ebx,0xf00000
   140022cc6:	mov    ecx,0x3
   140022ccb:	cmp    ecx,r14d
   140022cce:	jg     0x140022da1
   140022cd4:	mov    edx,ecx
   140022cd6:	test   rdi,rdi
   140022cd9:	jne    0x140022d1b
   140022cdb:	sub    edx,0x1
   140022cde:	je     0x140022d14
   140022ce0:	sub    edx,0x1
   140022ce3:	je     0x140022d09
   140022ce5:	sub    edx,0x1
   140022ce8:	je     0x140022cfe
   140022cea:	cmp    edx,0x1
   140022ced:	jne    0x140022d74
   140022cf3:	mov    eax,ebx
   140022cf5:	shr    eax,0x18
   140022cf8:	inc    rsi
   140022cfb:	mov    BYTE PTR [rsi-0x1],al
   140022cfe:	mov    eax,ebx
   140022d00:	shr    eax,0x10
   140022d03:	inc    rsi
   140022d06:	mov    BYTE PTR [rsi-0x1],al
   140022d09:	mov    eax,ebx
   140022d0b:	shr    eax,0x8
   140022d0e:	inc    rsi
   140022d11:	mov    BYTE PTR [rsi-0x1],al
   140022d14:	mov    BYTE PTR [rsi],bl
   140022d16:	inc    rsi
   140022d19:	jmp    0x140022d74
   140022d1b:	sub    edx,0x1
   140022d1e:	je     0x140022d68
   140022d20:	sub    edx,0x1
   140022d23:	je     0x140022d55
   140022d25:	sub    edx,0x1
   140022d28:	je     0x140022d42
   140022d2a:	cmp    edx,0x1
   140022d2d:	jne    0x140022d74
   140022d2f:	mov    eax,ebx
   140022d31:	inc    rsi
   140022d34:	shr    eax,0x18
   140022d37:	add    rdi,0x4
   140022d3b:	mov    BYTE PTR [rsi-0x1],al
   140022d3e:	mov    DWORD PTR [rdi-0x4],r12d
   140022d42:	mov    eax,ebx
   140022d44:	inc    rsi
   140022d47:	shr    eax,0x10
   140022d4a:	add    rdi,0x4
   140022d4e:	mov    BYTE PTR [rsi-0x1],al
   140022d51:	mov    DWORD PTR [rdi-0x4],r12d
   140022d55:	mov    eax,ebx
   140022d57:	inc    rsi
   140022d5a:	shr    eax,0x8
   140022d5d:	add    rdi,0x4
   140022d61:	mov    BYTE PTR [rsi-0x1],al
   140022d64:	mov    DWORD PTR [rdi-0x4],r12d
   140022d68:	mov    BYTE PTR [rsi],bl
   140022d6a:	inc    rsi
   140022d6d:	mov    DWORD PTR [rdi],r12d
   140022d70:	add    rdi,0x4
   140022d74:	mov    edx,DWORD PTR [rsp+0x2c]
   140022d78:	mov    r8,QWORD PTR [rsp+0x40]
   140022d7d:	sub    r14d,ecx
   140022d80:	mov    r12d,edx
   140022d83:	mov    DWORD PTR [rsp+0x24],edx
   140022d87:	xor    ebx,ebx
   140022d89:	jmp    0x140022450
   140022d8e:	mov    rax,QWORD PTR [rsp+0xa8]
   140022d96:	mov    DWORD PTR [rax],0xc
   140022d9c:	jmp    0x140022e65
   140022da1:	mov    r9,QWORD PTR [rsp+0x38]
   140022da6:	sub    ecx,r14d
   140022da9:	mov    r8d,ecx
   140022dac:	lea    rdx,[r9+0x68]
   140022db0:	sub    r8d,0x1
   140022db4:	je     0x140022de9
   140022db6:	sub    r8d,0x1
   140022dba:	je     0x140022dde
   140022dbc:	sub    r8d,0x1
   140022dc0:	je     0x140022dd3
   140022dc2:	cmp    r8d,0x1
   140022dc6:	jne    0x140022deb
   140022dc8:	mov    eax,ebx
   140022dca:	shr    eax,0x18
   140022dcd:	inc    rdx
   140022dd0:	mov    BYTE PTR [rdx-0x1],al
   140022dd3:	mov    eax,ebx
   140022dd5:	shr    eax,0x10
   140022dd8:	inc    rdx
   140022ddb:	mov    BYTE PTR [rdx-0x1],al
   140022dde:	mov    eax,ebx
   140022de0:	shr    eax,0x8
   140022de3:	inc    rdx
   140022de6:	mov    BYTE PTR [rdx-0x1],al
   140022de9:	mov    BYTE PTR [rdx],bl
   140022deb:	mov    BYTE PTR [r9+0x5b],cl
   140022def:	shl    ecx,0x3
   140022df2:	shr    ebx,cl
   140022df4:	sub    r14d,0x1
   140022df8:	je     0x140022e34
   140022dfa:	sub    r14d,0x1
   140022dfe:	je     0x140022e1d
   140022e00:	cmp    r14d,0x1
   140022e04:	jne    0x140022e45
   140022e06:	mov    eax,ebx
   140022e08:	inc    rsi
   140022e0b:	shr    eax,0x10
   140022e0e:	mov    BYTE PTR [rsi-0x1],al
   140022e11:	test   rdi,rdi
   140022e14:	je     0x140022e1d
   140022e16:	mov    DWORD PTR [rdi],r12d
   140022e19:	add    rdi,0x4
   140022e1d:	mov    eax,ebx
   140022e1f:	inc    rsi
   140022e22:	shr    eax,0x8
   140022e25:	mov    BYTE PTR [rsi-0x1],al
   140022e28:	test   rdi,rdi
   140022e2b:	je     0x140022e34
   140022e2d:	mov    DWORD PTR [rdi],r12d
   140022e30:	add    rdi,0x4
   140022e34:	mov    BYTE PTR [rsi],bl
   140022e36:	inc    rsi
   140022e39:	test   rdi,rdi
   140022e3c:	je     0x140022e45
   140022e3e:	mov    DWORD PTR [rdi],r12d
   140022e41:	add    rdi,0x4
   140022e45:	mov    rax,QWORD PTR [rsp+0xa8]
   140022e4d:	xor    ebx,ebx
   140022e4f:	mov    DWORD PTR [rax],0xf
   140022e55:	jmp    0x140022e6a
   140022e57:	mov    rax,QWORD PTR [rsp+0xa8]
   140022e5f:	mov    DWORD PTR [rax],0xf
   140022e65:	mov    r9,QWORD PTR [rsp+0x38]
   140022e6a:	mov    rax,QWORD PTR [rsp+0xa0]
   140022e72:	mov    rdx,QWORD PTR [rsp+0x30]
   140022e77:	mov    BYTE PTR [rdx+0x48],r11b
   140022e7b:	mov    BYTE PTR [rdx+0x49],r10b
   140022e7f:	mov    DWORD PTR [r9+0x54],ebx
   140022e83:	mov    QWORD PTR [rax+0x10],r15
   140022e87:	mov    QWORD PTR [rax+0x20],rsi
   140022e8b:	mov    QWORD PTR [rax+0x30],rdi
   140022e8f:	add    rsp,0x58
   140022e93:	pop    r15
   140022e95:	pop    r14
   140022e97:	pop    r13
   140022e99:	pop    r12
   140022e9b:	pop    rdi
   140022e9c:	pop    rsi
   140022e9d:	pop    rbp
   140022e9e:	pop    rbx
   140022e9f:	ret    
   140022ea0:	mov    QWORD PTR [rsp+0x10],rdx
   140022ea5:	mov    QWORD PTR [rsp+0x8],rcx
   140022eaa:	push   rbx
   140022eab:	push   rbp
   140022eac:	push   rsi
   140022ead:	push   rdi
   140022eae:	push   r12
   140022eb0:	push   r13
   140022eb2:	push   r14
   140022eb4:	push   r15
   140022eb6:	sub    rsp,0x48
   140022eba:	mov    r10,QWORD PTR [rcx+0x8]
   140022ebe:	mov    rdx,QWORD PTR [rcx+0x18]
   140022ec2:	mov    rdi,QWORD PTR [rcx+0x20]
   140022ec6:	mov    r15,QWORD PTR [r10+0x10]
   140022eca:	mov    ebp,DWORD PTR [rcx+0x28]
   140022ecd:	mov    r14,QWORD PTR [rcx+0x10]
   140022ed1:	movzx  r12d,BYTE PTR [r15+0x49]
   140022ed6:	movzx  r8d,BYTE PTR [r15+0x48]
   140022edb:	mov    ebx,DWORD PTR [r10+0x54]
   140022edf:	mov    r13d,DWORD PTR [r15+r12*4+0x20]
   140022ee4:	mov    QWORD PTR [rsp+0x28],r10
   140022ee9:	mov    QWORD PTR [rsp+0x30],rdx
   140022eee:	sub    ebp,edi
   140022ef0:	mov    BYTE PTR [rsp+0xa8],r8b
   140022ef8:	mov    BYTE PTR [rsp+0xa0],r12b
   140022f00:	mov    DWORD PTR [rsp+0x20],r13d
   140022f05:	lea    r9,[rip+0x291c4]        # 0x14004c0d0
   140022f0c:	nop    DWORD PTR [rax+0x0]
   140022f10:	test   r8b,r8b
   140022f13:	je     0x14002338e
   140022f19:	test   ebx,ebx
   140022f1b:	je     0x140022f21
   140022f1d:	test   ebp,ebp
   140022f1f:	jg     0x140022f97
   140022f21:	cmp    r14,rdx
   140022f24:	jae    0x140023744
   140022f2a:	test   ebp,ebp
   140022f2c:	jle    0x14002377e
   140022f32:	movzx  ebx,WORD PTR [r14]
   140022f36:	add    r14,0x2
   140022f3a:	lea    eax,[rbx-0x20]
   140022f3d:	cmp    eax,0x5f
   140022f40:	ja     0x140022f4d
   140022f42:	mov    BYTE PTR [rdi],bl
   140022f44:	inc    rdi
   140022f47:	dec    ebp
   140022f49:	xor    ebx,ebx
   140022f4b:	jmp    0x140022f21
   140022f4d:	cmp    ebx,0x20
   140022f50:	jae    0x140022f71
   140022f52:	mov    ecx,ebx
   140022f54:	mov    eax,0x1
   140022f59:	shl    eax,cl
   140022f5b:	test   eax,0x2601
   140022f60:	je     0x140022fed
   140022f66:	mov    BYTE PTR [rdi],bl
   140022f68:	inc    rdi
   140022f6b:	dec    ebp
   140022f6d:	xor    ebx,ebx
   140022f6f:	jmp    0x140022f21
   140022f71:	mov    eax,ebx
   140022f73:	sub    eax,r13d
   140022f76:	cmp    eax,0x7f
   140022f79:	jbe    0x140022fdc
   140022f7b:	mov    eax,ebx
   140022f7d:	and    eax,0xfffff800
   140022f82:	cmp    eax,0xd800
   140022f87:	jne    0x140023141
   140022f8d:	bt     ebx,0xa
   140022f91:	jb     0x140023736
   140022f97:	cmp    r14,rdx
   140022f9a:	jae    0x140023744
   140022fa0:	movzx  r13d,WORD PTR [r14]
   140022fa4:	mov    eax,r13d
   140022fa7:	mov    ecx,r13d
   140022faa:	and    eax,0xfffffc00
   140022faf:	cmp    eax,0xdc00
   140022fb4:	jne    0x140023736
   140022fba:	mov    eax,ebx
   140022fbc:	add    r14,0x2
   140022fc0:	shl    eax,0xa
   140022fc3:	lea    r12d,[rax+rcx*1-0x35fdc00]
   140022fcb:	mov    eax,r12d
   140022fce:	sub    eax,DWORD PTR [rsp+0x20]
   140022fd2:	cmp    eax,0x7f
   140022fd5:	ja     0x140023003
   140022fd7:	mov    r13d,DWORD PTR [rsp+0x20]
   140022fdc:	or     al,0x80
   140022fde:	inc    rdi
   140022fe1:	dec    ebp
   140022fe3:	mov    BYTE PTR [rdi-0x1],al
   140022fe6:	xor    ebx,ebx
   140022fe8:	jmp    0x140022f21
   140022fed:	mov    r12b,BYTE PTR [rsp+0xa0]
   140022ff5:	bts    ebx,0x8
   140022ff9:	mov    ecx,0x2
   140022ffe:	jmp    0x1400236e4
   140023003:	xor    esi,esi
   140023005:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140023010:	movsxd rax,esi
   140023013:	mov    ecx,r12d
   140023016:	sub    ecx,DWORD PTR [r15+rax*4+0x20]
   14002301b:	cmp    ecx,0x7f
   14002301e:	jbe    0x1400230b7
   140023024:	inc    esi
   140023026:	cmp    esi,0x8
   140023029:	jl     0x140023010
   14002302b:	lea    rdx,[rsp+0x24]
   140023030:	mov    ecx,r12d
   140023033:	call   0x140022320
   140023038:	mov    esi,eax
   14002303a:	test   eax,eax
   14002303c:	js     0x14002310b
   140023042:	movsx  rdx,BYTE PTR [r15+0x4b]
   140023047:	sub    esi,0x200
   14002304d:	mov    bl,BYTE PTR [rdx+r15*1+0x4c]
   140023052:	inc    dl
   140023054:	mov    BYTE PTR [rsp+0xa0],bl
   14002305b:	mov    BYTE PTR [r15+0x4b],dl
   14002305f:	cmp    dl,0x8
   140023062:	jne    0x140023069
   140023064:	mov    BYTE PTR [r15+0x4b],0x0
   140023069:	mov    r13d,DWORD PTR [rsp+0x24]
   14002306e:	movzx  eax,bl
   140023071:	movzx  edx,bl
   140023074:	mov    rcx,r15
   140023077:	mov    DWORD PTR [rsp+0x20],r13d
   14002307c:	mov    DWORD PTR [r15+rax*4+0x20],r13d
   140023081:	call   0x140022280
   140023086:	mov    r8b,BYTE PTR [rsp+0xa8]
   14002308e:	movzx  ebx,bl
   140023091:	shl    ebx,0xd
   140023094:	sub    r12d,r13d
   140023097:	mov    ecx,0x4
   14002309c:	or     ebx,esi
   14002309e:	shl    ebx,0x8
   1400230a1:	or     ebx,r12d
   1400230a4:	mov    r12b,BYTE PTR [rsp+0xa0]
   1400230ac:	or     ebx,0xb000080
   1400230b2:	jmp    0x1400236e4
   1400230b7:	test   sil,sil
   1400230ba:	js     0x14002302b
   1400230c0:	movzx  eax,sil
   1400230c4:	movzx  edx,sil
   1400230c8:	mov    rcx,r15
   1400230cb:	mov    r13d,DWORD PTR [r15+rax*4+0x20]
   1400230d0:	mov    BYTE PTR [rsp+0xa0],sil
   1400230d8:	mov    DWORD PTR [rsp+0x20],r13d
   1400230dd:	call   0x140022280
   1400230e2:	mov    r8b,BYTE PTR [rsp+0xa8]
   1400230ea:	sub    r12d,r13d
   1400230ed:	movzx  ebx,sil
   1400230f1:	mov    ecx,0x2
   1400230f6:	add    ebx,0x10
   1400230f9:	shl    ebx,0x8
   1400230fc:	or     ebx,r12d
   1400230ff:	mov    r12b,sil
   140023102:	bts    ebx,0x7
   140023106:	jmp    0x1400236e4
   14002310b:	mov    r12b,BYTE PTR [rsp+0xa0]
   140023113:	movzx  ebx,bx
   140023116:	xor    r8b,r8b
   140023119:	movzx  eax,r13w
   14002311d:	mov    r13d,DWORD PTR [rsp+0x20]
   140023122:	shl    ebx,0x10
   140023125:	mov    BYTE PTR [rdi],0xf
   140023128:	inc    rdi
   14002312b:	dec    ebp
   14002312d:	mov    BYTE PTR [rsp+0xa8],r8b
   140023135:	mov    ecx,0x4
   14002313a:	or     ebx,eax
   14002313c:	jmp    0x1400236e4
   140023141:	cmp    ebx,0xa0
   140023147:	jae    0x140023162
   140023149:	mov    r12b,BYTE PTR [rsp+0xa0]
   140023151:	and    ebx,0x7f
   140023154:	mov    ecx,0x2
   140023159:	bts    ebx,0x9
   14002315d:	jmp    0x1400236e4
   140023162:	cmp    ebx,0xfeff
   140023168:	je     0x14002337b
   14002316e:	cmp    ebx,0xfff0
   140023174:	jae    0x14002337b
   14002317a:	xor    esi,esi
   14002317c:	nop    DWORD PTR [rax+0x0]
   140023180:	movsxd rax,esi
   140023183:	mov    ecx,ebx
   140023185:	sub    ecx,DWORD PTR [r15+rax*4+0x20]
   14002318a:	cmp    ecx,0x7f
   14002318d:	jbe    0x14002323c
   140023193:	inc    esi
   140023195:	cmp    esi,0x8
   140023198:	jl     0x140023180
   14002319a:	xor    edx,edx
   14002319c:	nop    DWORD PTR [rax+0x0]
   1400231a0:	movsxd rcx,edx
   1400231a3:	mov    eax,ebx
   1400231a5:	sub    eax,DWORD PTR [r9+rcx*4]
   1400231a9:	cmp    eax,0x7f
   1400231ac:	jbe    0x1400232f2
   1400231b2:	inc    edx
   1400231b4:	cmp    edx,0x8
   1400231b7:	jl     0x1400231a0
   1400231b9:	lea    rdx,[rsp+0x24]
   1400231be:	mov    ecx,ebx
   1400231c0:	call   0x140022320
   1400231c5:	mov    esi,eax
   1400231c7:	test   eax,eax
   1400231c9:	js     0x14002331e
   1400231cf:	movsx  rdx,BYTE PTR [r15+0x4b]
   1400231d4:	mov    r12b,BYTE PTR [rdx+r15*1+0x4c]
   1400231d9:	inc    dl
   1400231db:	mov    BYTE PTR [rsp+0xa0],r12b
   1400231e3:	mov    BYTE PTR [r15+0x4b],dl
   1400231e7:	cmp    dl,0x8
   1400231ea:	jne    0x1400231f1
   1400231ec:	mov    BYTE PTR [r15+0x4b],0x0
   1400231f1:	mov    r13d,DWORD PTR [rsp+0x24]
   1400231f6:	movzx  eax,r12b
   1400231fa:	movzx  edx,r12b
   1400231fe:	mov    rcx,r15
   140023201:	mov    DWORD PTR [rsp+0x20],r13d
   140023206:	mov    DWORD PTR [r15+rax*4+0x20],r13d
   14002320b:	call   0x140022280
   140023210:	movzx  r11d,r12b
   140023214:	add    r11d,0x18
   140023218:	mov    r8b,BYTE PTR [rsp+0xa8]
   140023220:	mov    eax,ebx
   140023222:	shl    r11d,0x10
   140023226:	sub    eax,r13d
   140023229:	shl    esi,0x8
   14002322c:	mov    ebx,r11d
   14002322f:	or     ebx,eax
   140023231:	or     ebx,esi
   140023233:	bts    ebx,0x7
   140023237:	jmp    0x1400236df
   14002323c:	test   sil,sil
   14002323f:	js     0x14002319a
   140023245:	cmp    r14,rdx
   140023248:	jae    0x1400232a1
   14002324a:	movzx  ecx,WORD PTR [r14]
   14002324e:	movsx  rax,sil
   140023252:	mov    edx,DWORD PTR [r15+rax*4+0x20]
   140023257:	lea    eax,[rdx+0x7f]
   14002325a:	cmp    ecx,eax
   14002325c:	ja     0x14002327a
   14002325e:	cmp    ecx,edx
   140023260:	jae    0x1400232a1
   140023262:	cmp    ecx,0x7f
   140023265:	ja     0x14002327a
   140023267:	cmp    ecx,0x20
   14002326a:	jae    0x1400232a1
   14002326c:	mov    eax,0x1
   140023271:	shl    eax,cl
   140023273:	test   eax,0x2601
   140023278:	jne    0x1400232a1
   14002327a:	mov    r12b,BYTE PTR [rsp+0xa0]
   140023282:	mov    eax,ebx
   140023284:	movsx  ecx,sil
   140023288:	inc    ecx
   14002328a:	sub    eax,edx
   14002328c:	shl    ecx,0x8
   14002328f:	mov    ebx,ecx
   140023291:	mov    ecx,0x2
   140023296:	or     ebx,eax
   140023298:	bts    ebx,0x7
   14002329c:	jmp    0x1400236e4
   1400232a1:	movzx  eax,sil
   1400232a5:	movzx  edx,sil
   1400232a9:	mov    rcx,r15
   1400232ac:	mov    r13d,DWORD PTR [r15+rax*4+0x20]
   1400232b1:	mov    r12b,sil
   1400232b4:	mov    BYTE PTR [rsp+0xa0],sil
   1400232bc:	mov    DWORD PTR [rsp+0x20],r13d
   1400232c1:	call   0x140022280
   1400232c6:	mov    r8b,BYTE PTR [rsp+0xa8]
   1400232ce:	mov    eax,ebx
   1400232d0:	movzx  r11d,sil
   1400232d4:	mov    ecx,0x2
   1400232d9:	add    r11d,0x10
   1400232dd:	sub    eax,r13d
   1400232e0:	shl    r11d,0x8
   1400232e4:	mov    ebx,r11d
   1400232e7:	or     ebx,eax
   1400232e9:	bts    ebx,0x7
   1400232ed:	jmp    0x1400236e4
   1400232f2:	test   dl,dl
   1400232f4:	js     0x1400231b9
   1400232fa:	mov    r12b,BYTE PTR [rsp+0xa0]
   140023302:	movsx  rax,dl
   140023306:	mov    ecx,0x2
   14002330b:	sub    ebx,DWORD PTR [r9+rax*4]
   14002330f:	movsx  eax,dl
   140023312:	inc    eax
   140023314:	shl    eax,0x8
   140023317:	or     ebx,eax
   140023319:	jmp    0x1400236e4
   14002331e:	lea    eax,[rbx-0x3400]
   140023324:	cmp    eax,0xa400
   140023329:	jae    0x140023360
   14002332b:	cmp    r14,QWORD PTR [rsp+0x30]
   140023330:	jae    0x140023342
   140023332:	movzx  eax,WORD PTR [r14]
   140023336:	sub    eax,0x3400
   14002333b:	cmp    eax,0xa400
   140023340:	jae    0x140023360
   140023342:	mov    r12b,BYTE PTR [rsp+0xa0]
   14002334a:	xor    r8b,r8b
   14002334d:	or     ebx,0xf0000
   140023353:	mov    BYTE PTR [rsp+0xa8],r8b
   14002335b:	jmp    0x1400236df
   140023360:	mov    r12b,BYTE PTR [rsp+0xa0]
   140023368:	mov    r8b,BYTE PTR [rsp+0xa8]
   140023370:	or     ebx,0xe0000
   140023376:	jmp    0x1400236df
   14002337b:	mov    r12b,BYTE PTR [rsp+0xa0]
   140023383:	or     ebx,0xe0000
   140023389:	jmp    0x1400236df
   14002338e:	test   ebx,ebx
   140023390:	je     0x1400233a0
   140023392:	test   ebp,ebp
   140023394:	jg     0x14002354f
   14002339a:	nop    WORD PTR [rax+rax*1+0x0]
   1400233a0:	cmp    r14,rdx
   1400233a3:	jae    0x14002374c
   1400233a9:	test   ebp,ebp
   1400233ab:	jle    0x140023837
   1400233b1:	movzx  ebx,WORD PTR [r14]
   1400233b5:	add    r14,0x2
   1400233b9:	lea    eax,[rbx-0x3400]
   1400233bf:	cmp    eax,0xa400
   1400233c4:	jae    0x1400233e5
   1400233c6:	cmp    ebp,0x2
   1400233c9:	jl     0x14002352f
   1400233cf:	mov    eax,ebx
   1400233d1:	add    rdi,0x2
   1400233d5:	sub    ebp,0x2
   1400233d8:	shr    eax,0x8
   1400233db:	mov    BYTE PTR [rdi-0x2],al
   1400233de:	mov    BYTE PTR [rdi-0x1],bl
   1400233e1:	xor    ebx,ebx
   1400233e3:	jmp    0x1400233a0
   1400233e5:	lea    eax,[rbx-0x3400]
   1400233eb:	cmp    eax,0xbf00
   1400233f0:	jb     0x140023539
   1400233f6:	cmp    r14,rdx
   1400233f9:	jae    0x14002340f
   1400233fb:	movzx  eax,WORD PTR [r14]
   1400233ff:	sub    eax,0x3400
   140023404:	cmp    eax,0xa400
   140023409:	jb     0x14002350c
   14002340f:	lea    eax,[rbx-0x30]
   140023412:	cmp    eax,0xa
   140023415:	jb     0x140023516
   14002341b:	lea    eax,[rbx-0x61]
   14002341e:	cmp    eax,0x1a
   140023421:	jb     0x140023516
   140023427:	lea    eax,[rbx-0x41]
   14002342a:	cmp    eax,0x1a
   14002342d:	jb     0x140023516
   140023433:	lea    rcx,[r15+0x20]
   140023437:	mov    edx,ebx
   140023439:	call   0x140022250
   14002343e:	movzx  esi,al
   140023441:	test   al,al
   140023443:	js     0x140023499
   140023445:	movzx  ecx,al
   140023448:	movzx  edx,al
   14002344b:	mov    BYTE PTR [rsp+0xa8],0x1
   140023453:	mov    r13d,DWORD PTR [r15+rcx*4+0x20]
   140023458:	mov    rcx,r15
   14002345b:	mov    r12b,al
   14002345e:	mov    DWORD PTR [rsp+0x20],r13d
   140023463:	mov    BYTE PTR [rsp+0xa0],al
   14002346a:	call   0x140022280
   14002346f:	mov    eax,ebx
   140023471:	movzx  r11d,r12b
   140023475:	mov    ecx,0x2
   14002347a:	add    r11d,0xe0
   140023481:	sub    eax,r13d
   140023484:	mov    r8b,0x1
   140023487:	shl    r11d,0x8
   14002348b:	mov    ebx,r11d
   14002348e:	or     ebx,eax
   140023490:	bts    ebx,0x7
   140023494:	jmp    0x1400236e4
   140023499:	lea    rdx,[rsp+0x24]
   14002349e:	mov    ecx,ebx
   1400234a0:	call   0x140022320
   1400234a5:	mov    esi,eax
   1400234a7:	test   eax,eax
   1400234a9:	js     0x140023504
   1400234ab:	movsx  rdx,BYTE PTR [r15+0x4b]
   1400234b0:	mov    BYTE PTR [rsp+0xa8],0x1
   1400234b8:	mov    r12b,BYTE PTR [rdx+r15*1+0x4c]
   1400234bd:	inc    dl
   1400234bf:	mov    BYTE PTR [rsp+0xa0],r12b
   1400234c7:	mov    BYTE PTR [r15+0x4b],dl
   1400234cb:	cmp    dl,0x8
   1400234ce:	jne    0x1400234d5
   1400234d0:	mov    BYTE PTR [r15+0x4b],0x0
   1400234d5:	mov    r13d,DWORD PTR [rsp+0x24]
   1400234da:	movzx  eax,r12b
   1400234de:	movzx  edx,r12b
   1400234e2:	mov    rcx,r15
   1400234e5:	mov    DWORD PTR [rsp+0x20],r13d
   1400234ea:	mov    DWORD PTR [r15+rax*4+0x20],r13d
   1400234ef:	call   0x140022280
   1400234f4:	movzx  r11d,r12b
   1400234f8:	add    r11d,0xe8
   1400234ff:	jmp    0x140023218
   140023504:	mov    r8b,BYTE PTR [rsp+0xa8]
   14002350c:	mov    ecx,0x2
   140023511:	jmp    0x1400236e4
   140023516:	movzx  eax,r12b
   14002351a:	mov    r8b,0x1
   14002351d:	add    eax,0xe0
   140023522:	mov    BYTE PTR [rsp+0xa8],r8b
   14002352a:	shl    eax,0x8
   14002352d:	or     ebx,eax
   14002352f:	mov    ecx,0x2
   140023534:	jmp    0x1400236e4
   140023539:	cmp    ebx,0xe000
   14002353f:	jae    0x1400236d9
   140023545:	bt     ebx,0xa
   140023549:	jb     0x14002378e
   14002354f:	cmp    r14,rdx
   140023552:	jae    0x14002374c
   140023558:	movzx  r13d,WORD PTR [r14]
   14002355c:	mov    eax,r13d
   14002355f:	and    eax,0xfffffc00
   140023564:	cmp    eax,0xdc00
   140023569:	jne    0x14002378e
   14002356f:	mov    eax,ebx
   140023571:	add    r14,0x2
   140023575:	shl    eax,0xa
   140023578:	xor    esi,esi
   14002357a:	lea    r12d,[rax+r13*1-0x35fdc00]
   140023582:	movsxd rax,esi
   140023585:	mov    ecx,r12d
   140023588:	sub    ecx,DWORD PTR [r15+rax*4+0x20]
   14002358d:	cmp    ecx,0x7f
   140023590:	jbe    0x140023644
   140023596:	inc    esi
   140023598:	cmp    esi,0x8
   14002359b:	jl     0x140023582
   14002359d:	cmp    r14,rdx
   1400235a0:	jae    0x1400236bc
   1400235a6:	cmp    bx,WORD PTR [r14]
   1400235aa:	jne    0x1400236bc
   1400235b0:	lea    rdx,[rsp+0x24]
   1400235b5:	mov    ecx,r12d
   1400235b8:	call   0x140022320
   1400235bd:	mov    esi,eax
   1400235bf:	test   eax,eax
   1400235c1:	js     0x1400236b4
   1400235c7:	movsx  rdx,BYTE PTR [r15+0x4b]
   1400235cc:	sub    esi,0x200
   1400235d2:	mov    BYTE PTR [rsp+0xa8],0x1
   1400235da:	mov    bl,BYTE PTR [rdx+r15*1+0x4c]
   1400235df:	inc    dl
   1400235e1:	mov    BYTE PTR [rsp+0xa0],bl
   1400235e8:	mov    BYTE PTR [r15+0x4b],dl
   1400235ec:	cmp    dl,0x8
   1400235ef:	jne    0x1400235f6
   1400235f1:	mov    BYTE PTR [r15+0x4b],0x0
   1400235f6:	mov    r13d,DWORD PTR [rsp+0x24]
   1400235fb:	movzx  eax,bl
   1400235fe:	movzx  edx,bl
   140023601:	mov    rcx,r15
   140023604:	mov    DWORD PTR [rsp+0x20],r13d
   140023609:	mov    DWORD PTR [r15+rax*4+0x20],r13d
   14002360e:	call   0x140022280
   140023613:	mov    r8b,BYTE PTR [rsp+0xa8]
   14002361b:	movzx  ebx,bl
   14002361e:	shl    ebx,0xd
   140023621:	sub    r12d,r13d
   140023624:	mov    ecx,0x4
   140023629:	or     ebx,esi
   14002362b:	shl    ebx,0x8
   14002362e:	or     ebx,r12d
   140023631:	mov    r12b,BYTE PTR [rsp+0xa0]
   140023639:	or     ebx,0xf1000080
   14002363f:	jmp    0x1400236e4
   140023644:	test   sil,sil
   140023647:	js     0x14002359d
   14002364d:	cmp    r14,rdx
   140023650:	jae    0x140023666
   140023652:	movzx  eax,WORD PTR [r14]
   140023656:	sub    eax,0x3400
   14002365b:	cmp    eax,0xa400
   140023660:	jb     0x14002359d
   140023666:	movzx  eax,sil
   14002366a:	movzx  edx,sil
   14002366e:	mov    rcx,r15
   140023671:	mov    r13d,DWORD PTR [r15+rax*4+0x20]
   140023676:	mov    BYTE PTR [rsp+0xa8],0x1
   14002367e:	mov    BYTE PTR [rsp+0xa0],sil
   140023686:	mov    DWORD PTR [rsp+0x20],r13d
   14002368b:	call   0x140022280
   140023690:	sub    r12d,r13d
   140023693:	movzx  ebx,sil
   140023697:	mov    ecx,0x2
   14002369c:	mov    r8b,0x1
   14002369f:	add    ebx,0xe0
   1400236a5:	shl    ebx,0x8
   1400236a8:	or     ebx,r12d
   1400236ab:	mov    r12b,sil
   1400236ae:	bts    ebx,0x7
   1400236b2:	jmp    0x1400236e4
   1400236b4:	mov    r8b,BYTE PTR [rsp+0xa8]
   1400236bc:	mov    r12b,BYTE PTR [rsp+0xa0]
   1400236c4:	movzx  ebx,bx
   1400236c7:	mov    ecx,0x4
   1400236cc:	shl    ebx,0x10
   1400236cf:	or     ebx,r13d
   1400236d2:	mov    r13d,DWORD PTR [rsp+0x20]
   1400236d7:	jmp    0x1400236e4
   1400236d9:	or     ebx,0xf00000
   1400236df:	mov    ecx,0x3
   1400236e4:	cmp    ecx,ebp
   1400236e6:	jg     0x14002379e
   1400236ec:	mov    edx,ecx
   1400236ee:	sub    edx,0x1
   1400236f1:	je     0x140023723
   1400236f3:	sub    edx,0x1
   1400236f6:	je     0x140023718
   1400236f8:	sub    edx,0x1
   1400236fb:	je     0x14002370d
   1400236fd:	cmp    edx,0x1
   140023700:	jne    0x140023728
   140023702:	mov    eax,ebx
   140023704:	shr    eax,0x18
   140023707:	inc    rdi
   14002370a:	mov    BYTE PTR [rdi-0x1],al
   14002370d:	mov    eax,ebx
   14002370f:	shr    eax,0x10
   140023712:	inc    rdi
   140023715:	mov    BYTE PTR [rdi-0x1],al
   140023718:	mov    eax,ebx
   14002371a:	shr    eax,0x8
   14002371d:	inc    rdi
   140023720:	mov    BYTE PTR [rdi-0x1],al
   140023723:	mov    BYTE PTR [rdi],bl
   140023725:	inc    rdi
   140023728:	mov    rdx,QWORD PTR [rsp+0x30]
   14002372d:	sub    ebp,ecx
   14002372f:	xor    ebx,ebx
   140023731:	jmp    0x140022f05
   140023736:	mov    rax,QWORD PTR [rsp+0x98]
   14002373e:	mov    DWORD PTR [rax],0xc
   140023744:	mov    r12b,BYTE PTR [rsp+0xa0]
   14002374c:	mov    r10,QWORD PTR [rsp+0x28]
   140023751:	mov    rax,QWORD PTR [rsp+0x90]
   140023759:	mov    BYTE PTR [r15+0x48],r8b
   14002375d:	mov    BYTE PTR [r15+0x49],r12b
   140023761:	mov    DWORD PTR [r10+0x54],ebx
   140023765:	mov    QWORD PTR [rax+0x10],r14
   140023769:	mov    QWORD PTR [rax+0x20],rdi
   14002376d:	add    rsp,0x48
   140023771:	pop    r15
   140023773:	pop    r14
   140023775:	pop    r13
   140023777:	pop    r12
   140023779:	pop    rdi
   14002377a:	pop    rsi
   14002377b:	pop    rbp
   14002377c:	pop    rbx
   14002377d:	ret    
   14002377e:	mov    rax,QWORD PTR [rsp+0x98]
   140023786:	mov    DWORD PTR [rax],0xf
   14002378c:	jmp    0x140023744
   14002378e:	mov    rax,QWORD PTR [rsp+0x98]
   140023796:	mov    DWORD PTR [rax],0xc
   14002379c:	jmp    0x14002374c
   14002379e:	mov    r10,QWORD PTR [rsp+0x28]
   1400237a3:	sub    ecx,ebp
   1400237a5:	mov    r8d,ecx
   1400237a8:	lea    rdx,[r10+0x68]
   1400237ac:	sub    r8d,0x1
   1400237b0:	je     0x1400237e5
   1400237b2:	sub    r8d,0x1
   1400237b6:	je     0x1400237da
   1400237b8:	sub    r8d,0x1
   1400237bc:	je     0x1400237cf
   1400237be:	sub    r8d,0x1
   1400237c2:	jne    0x1400237e7
   1400237c4:	mov    eax,ebx
   1400237c6:	shr    eax,0x18
   1400237c9:	inc    rdx
   1400237cc:	mov    BYTE PTR [rdx-0x1],al
   1400237cf:	mov    eax,ebx
   1400237d1:	shr    eax,0x10
   1400237d4:	inc    rdx
   1400237d7:	mov    BYTE PTR [rdx-0x1],al
   1400237da:	mov    eax,ebx
   1400237dc:	shr    eax,0x8
   1400237df:	inc    rdx
   1400237e2:	mov    BYTE PTR [rdx-0x1],al
   1400237e5:	mov    BYTE PTR [rdx],bl
   1400237e7:	mov    BYTE PTR [r10+0x5b],cl
   1400237eb:	shl    ecx,0x3
   1400237ee:	shr    ebx,cl
   1400237f0:	sub    ebp,0x1
   1400237f3:	je     0x140023815
   1400237f5:	sub    ebp,0x1
   1400237f8:	je     0x14002380a
   1400237fa:	cmp    ebp,0x1
   1400237fd:	jne    0x14002381a
   1400237ff:	mov    eax,ebx
   140023801:	shr    eax,0x10
   140023804:	inc    rdi
   140023807:	mov    BYTE PTR [rdi-0x1],al
   14002380a:	mov    eax,ebx
   14002380c:	shr    eax,0x8
   14002380f:	inc    rdi
   140023812:	mov    BYTE PTR [rdi-0x1],al
   140023815:	mov    BYTE PTR [rdi],bl
   140023817:	inc    rdi
   14002381a:	mov    rax,QWORD PTR [rsp+0x98]
   140023822:	mov    r8b,BYTE PTR [rsp+0xa8]
   14002382a:	xor    ebx,ebx
   14002382c:	mov    DWORD PTR [rax],0xf
   140023832:	jmp    0x140023751
   140023837:	mov    rax,QWORD PTR [rsp+0x98]
   14002383f:	mov    DWORD PTR [rax],0xf
   140023845:	jmp    0x14002374c
   14002384a:	int3   
   14002384b:	int3   
   14002384c:	int3   
   14002384d:	int3   
   14002384e:	int3   
   14002384f:	int3   
   140023850:	mov    rax,QWORD PTR [rcx+0x10]
   140023854:	cmp    BYTE PTR [rax+0x4a],0x1
   140023858:	lea    rax,[rip+0x1b5b1]        # 0x14003ee10
   14002385f:	jne    0x140023868
   140023861:	lea    rax,[rip+0x28b08]        # 0x14004c370
   140023868:	repz ret 
   14002386a:	int3   
   14002386b:	int3   
   14002386c:	int3   
   14002386d:	int3   
   14002386e:	int3   
   14002386f:	int3   
   140023870:	rex push rdi
   140023872:	sub    rsp,0x20
   140023876:	cmp    DWORD PTR [r9],0x0
   14002387a:	mov    rdi,rdx
   14002387d:	jg     0x14002388c
   14002387f:	cmp    DWORD PTR [r8],0x0
   140023883:	jne    0x140023894
   140023885:	mov    DWORD PTR [r8],0x178
   14002388c:	xor    eax,eax
   14002388e:	add    rsp,0x20
   140023892:	pop    rdi
   140023893:	ret    
   140023894:	mov    QWORD PTR [rsp+0x30],rbx
   140023899:	lea    rbx,[rdx+0x120]
   1400238a0:	mov    rdx,QWORD PTR [rcx+0x10]
   1400238a4:	mov    rcx,rbx
   1400238a7:	mov    r8d,0x54
   1400238ad:	call   0x14002b9a0
   1400238b2:	mov    QWORD PTR [rdi+0x10],rbx
   1400238b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400238bb:	mov    BYTE PTR [rdi+0x3e],0x1
   1400238bf:	mov    rax,rdi
   1400238c2:	add    rsp,0x20
   1400238c6:	pop    rdi
   1400238c7:	ret    
   1400238c8:	int3   
   1400238c9:	int3   
   1400238ca:	int3   
   1400238cb:	int3   
   1400238cc:	int3   
   1400238cd:	int3   
   1400238ce:	int3   
   1400238cf:	int3   
   1400238d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400238d5:	push   rdi
   1400238d6:	sub    rsp,0x20
   1400238da:	cmp    BYTE PTR [rdx+0x8],0x0
   1400238de:	mov    rbx,r8
   1400238e1:	mov    rdi,rcx
   1400238e4:	je     0x1400238ff
   1400238e6:	lea    rcx,[rip+0x1e17f]        # 0x140041a6c
   1400238ed:	mov    rdx,rbx
   1400238f0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400238f5:	add    rsp,0x20
   1400238f9:	pop    rdi
   1400238fa:	jmp    0x140012290
   1400238ff:	lea    rcx,[rip+0x1e166]        # 0x140041a6c
   140023906:	mov    rdx,rbx
   140023909:	mov    QWORD PTR [rsp+0x30],rsi
   14002390e:	call   0x14000dbd0
   140023913:	cmp    DWORD PTR [rbx],0x0
   140023916:	mov    rsi,rax
   140023919:	jg     0x14002396c
   14002391b:	xor    eax,eax
   14002391d:	mov    DWORD PTR [rdi+0x48],eax
   140023920:	mov    DWORD PTR [rdi+0x50],eax
   140023923:	mov    DWORD PTR [rdi+0x4c],eax
   140023926:	lea    ecx,[rax+0x18]
   140023929:	mov    DWORD PTR [rdi+0x54],eax
   14002392c:	call   0x140010940
   140023931:	mov    QWORD PTR [rdi+0x10],rax
   140023935:	test   rax,rax
   140023938:	je     0x14002395e
   14002393a:	xor    ecx,ecx
   14002393c:	mov    QWORD PTR [rax],rcx
   14002393f:	mov    QWORD PTR [rax+0x8],rcx
   140023943:	mov    QWORD PTR [rax+0x10],rcx
   140023947:	mov    rax,QWORD PTR [rdi+0x10]
   14002394b:	mov    QWORD PTR [rax],rsi
   14002394e:	mov    rsi,QWORD PTR [rsp+0x30]
   140023953:	mov    rbx,QWORD PTR [rsp+0x38]
   140023958:	add    rsp,0x20
   14002395c:	pop    rdi
   14002395d:	ret    
   14002395e:	mov    rcx,rsi
   140023961:	call   0x14000df20
   140023966:	mov    DWORD PTR [rbx],0x7
   14002396c:	mov    rsi,QWORD PTR [rsp+0x30]
   140023971:	mov    rbx,QWORD PTR [rsp+0x38]
   140023976:	add    rsp,0x20
   14002397a:	pop    rdi
   14002397b:	ret    
   14002397c:	int3   
   14002397d:	int3   
   14002397e:	int3   
   14002397f:	int3   
   140023980:	rex push rbx
   140023982:	sub    rsp,0x20
   140023986:	mov    rbx,rcx
   140023989:	mov    rcx,QWORD PTR [rcx+0x10]
   14002398d:	test   rcx,rcx
   140023990:	je     0x1400239b1
   140023992:	mov    rcx,QWORD PTR [rcx]
   140023995:	call   0x14000df20
   14002399a:	cmp    BYTE PTR [rbx+0x3e],0x0
   14002399e:	jne    0x1400239a9
   1400239a0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400239a4:	call   0x140010a40
   1400239a9:	mov    QWORD PTR [rbx+0x10],0x0
   1400239b1:	add    rsp,0x20
   1400239b5:	pop    rbx
   1400239b6:	ret    
   1400239b7:	int3   
   1400239b8:	int3   
   1400239b9:	int3   
   1400239ba:	int3   
   1400239bb:	int3   
   1400239bc:	int3   
   1400239bd:	int3   
   1400239be:	int3   
   1400239bf:	int3   
   1400239c0:	xor    r8d,r8d
   1400239c3:	cmp    edx,0x1
   1400239c6:	jg     0x1400239ea
   1400239c8:	mov    rax,QWORD PTR [rcx+0x10]
   1400239cc:	mov    DWORD PTR [rcx+0x48],r8d
   1400239d0:	mov    DWORD PTR [rcx+0x4c],r8d
   1400239d4:	test   rax,rax
   1400239d7:	je     0x1400239e5
   1400239d9:	mov    BYTE PTR [rax+0x11],r8b
   1400239dd:	mov    rax,QWORD PTR [rcx+0x10]
   1400239e1:	mov    BYTE PTR [rax+0x13],r8b
   1400239e5:	cmp    edx,0x1
   1400239e8:	je     0x140023a17
   1400239ea:	mov    rax,QWORD PTR [rcx+0x10]
   1400239ee:	mov    DWORD PTR [rcx+0x50],r8d
   1400239f2:	mov    DWORD PTR [rcx+0x54],r8d
   1400239f6:	test   rax,rax
   1400239f9:	je     0x140023a17
   1400239fb:	mov    BYTE PTR [rax+0x10],r8b
   1400239ff:	mov    rax,QWORD PTR [rcx+0x10]
   140023a03:	mov    DWORD PTR [rax+0x8],r8d
   140023a07:	mov    rax,QWORD PTR [rcx+0x10]
   140023a0b:	mov    DWORD PTR [rax+0xc],r8d
   140023a0f:	mov    rax,QWORD PTR [rcx+0x10]
   140023a13:	mov    BYTE PTR [rax+0x12],r8b
   140023a17:	repz ret 
   140023a19:	int3   
   140023a1a:	int3   
   140023a1b:	int3   
   140023a1c:	int3   
   140023a1d:	int3   
   140023a1e:	int3   
   140023a1f:	int3   
   140023a20:	mov    QWORD PTR [rsp+0x10],rbx
   140023a25:	push   rbp
   140023a26:	push   rsi
   140023a27:	push   rdi
   140023a28:	push   r12
   140023a2a:	push   r13
   140023a2c:	push   r14
   140023a2e:	push   r15
   140023a30:	sub    rsp,0x20
   140023a34:	mov    r9,QWORD PTR [rcx+0x18]
   140023a38:	mov    rax,QWORD PTR [rcx+0x8]
   140023a3c:	mov    r13,QWORD PTR [rcx+0x10]
   140023a40:	mov    r12,QWORD PTR [rax+0x10]
   140023a44:	mov    rsi,QWORD PTR [rcx+0x20]
   140023a48:	mov    r15,rdx
   140023a4b:	mov    BYTE PTR [rsp+0x60],0x0
   140023a50:	mov    BYTE PTR [rsp+0x61],0x0
   140023a55:	mov    rdi,rcx
   140023a58:	mov    QWORD PTR [rsp+0x70],r9
   140023a5d:	cmp    r13,r9
   140023a60:	jae    0x140023ced
   140023a66:	xor    r14d,r14d
   140023a69:	lea    r8d,[r14+0x7e]
   140023a6d:	nop    DWORD PTR [rax]
   140023a70:	cmp    rsi,QWORD PTR [rdi+0x28]
   140023a74:	jae    0x140023ce6
   140023a7a:	mov    rdx,QWORD PTR [rdi+0x8]
   140023a7e:	movzx  ebx,BYTE PTR [r13+0x0]
   140023a83:	inc    r13
   140023a86:	cmp    DWORD PTR [rdx+0x4c],0x7e
   140023a8a:	jne    0x140023afc
   140023a8c:	mov    ecx,ebx
   140023a8e:	mov    DWORD PTR [rdx+0x4c],r14d
   140023a92:	sub    ecx,0xa
   140023a95:	je     0x140023c11
   140023a9b:	sub    ecx,0x71
   140023a9e:	je     0x140023adb
   140023aa0:	sub    ecx,0x2
   140023aa3:	je     0x140023adb
   140023aa5:	cmp    ecx,0x1
   140023aa8:	jne    0x140023c1f
   140023aae:	mov    rdx,QWORD PTR [rdi+0x30]
   140023ab2:	test   rdx,rdx
   140023ab5:	je     0x140023acd
   140023ab7:	mov    ecx,r13d
   140023aba:	mov    rax,rsi
   140023abd:	sub    ecx,DWORD PTR [rdi+0x10]
   140023ac0:	sub    rax,QWORD PTR [rdi+0x20]
   140023ac4:	sub    ecx,0x2
   140023ac7:	sar    rax,1
   140023aca:	mov    DWORD PTR [rdx+rax*4],ecx
   140023acd:	mov    WORD PTR [rsi],r8w
   140023ad1:	mov    BYTE PTR [r12+0x13],r14b
   140023ad6:	jmp    0x140023c0d
   140023adb:	cmp    ebx,0x7b
   140023ade:	sete   al
   140023ae1:	mov    BYTE PTR [r12+0x11],al
   140023ae6:	cmp    BYTE PTR [r12+0x13],r14b
   140023aeb:	jne    0x140023c6f
   140023af1:	mov    BYTE PTR [r12+0x13],0x1
   140023af7:	jmp    0x140023c11
   140023afc:	cmp    BYTE PTR [r12+0x11],r14b
   140023b01:	je     0x140023bb4
   140023b07:	mov    eax,DWORD PTR [rdx+0x48]
   140023b0a:	test   eax,eax
   140023b0c:	jne    0x140023b2d
   140023b0e:	cmp    ebx,0x7e
   140023b11:	jne    0x140023b1c
   140023b13:	mov    DWORD PTR [rdx+0x4c],r8d
   140023b17:	jmp    0x140023c11
   140023b1c:	bts    ebx,0x8
   140023b20:	mov    DWORD PTR [rdx+0x48],ebx
   140023b23:	mov    BYTE PTR [r12+0x13],r14b
   140023b28:	jmp    0x140023c11
   140023b2d:	movzx  ebp,al
   140023b30:	lea    eax,[rbx-0x21]
   140023b33:	mov    ecx,r14d
   140023b36:	cmp    al,0x5d
   140023b38:	lea    eax,[rbp-0x21]
   140023b3b:	mov    r8d,0xffff
   140023b41:	setbe  cl
   140023b44:	cmp    al,0x5c
   140023b46:	ja     0x140023b8e
   140023b48:	test   ecx,ecx
   140023b4a:	je     0x140023ba1
   140023b4c:	lea    eax,[rbp-0x80]
   140023b4f:	mov    r8d,0x2
   140023b55:	mov    BYTE PTR [rsp+0x60],al
   140023b59:	lea    eax,[rbx-0x80]
   140023b5c:	mov    BYTE PTR [rsp+0x61],al
   140023b60:	mov    rcx,QWORD PTR [r12]
   140023b64:	movzx  r9d,BYTE PTR [rdx+0x3f]
   140023b69:	mov    rcx,QWORD PTR [rcx+0x30]
   140023b6d:	lea    rdx,[rsp+0x60]
   140023b72:	call   0x140016140
   140023b77:	mov    r9,QWORD PTR [rsp+0x70]
   140023b7c:	shl    ebp,0x8
   140023b7f:	mov    r8d,eax
   140023b82:	mov    rax,QWORD PTR [rdi+0x8]
   140023b86:	or     ebx,ebp
   140023b88:	mov    DWORD PTR [rax+0x48],r14d
   140023b8c:	jmp    0x140023bd0
   140023b8e:	test   ecx,ecx
   140023b90:	je     0x140023ba1
   140023b92:	mov    rax,QWORD PTR [rdi+0x8]
   140023b96:	dec    r13
   140023b99:	mov    ebx,ebp
   140023b9b:	mov    DWORD PTR [rax+0x48],r14d
   140023b9f:	jmp    0x140023bd0
   140023ba1:	mov    rax,QWORD PTR [rdi+0x8]
   140023ba5:	bts    ebp,0x8
   140023ba9:	shl    ebp,0x8
   140023bac:	mov    DWORD PTR [rax+0x48],r14d
   140023bb0:	or     ebx,ebp
   140023bb2:	jmp    0x140023bd0
   140023bb4:	cmp    ebx,0x7e
   140023bb7:	jne    0x140023bbf
   140023bb9:	mov    DWORD PTR [rdx+0x4c],r8d
   140023bbd:	jmp    0x140023c11
   140023bbf:	cmp    ebx,0x7f
   140023bc2:	mov    BYTE PTR [r12+0x13],r14b
   140023bc7:	jg     0x140023cad
   140023bcd:	mov    r8d,ebx
   140023bd0:	cmp    r8d,0xfffe
   140023bd7:	jge    0x140023ca2
   140023bdd:	mov    rdx,QWORD PTR [rdi+0x30]
   140023be1:	test   rdx,rdx
   140023be4:	je     0x140023c03
   140023be6:	movsx  eax,BYTE PTR [r12+0x11]
   140023bec:	mov    ecx,r13d
   140023bef:	sub    ecx,eax
   140023bf1:	mov    rax,rsi
   140023bf4:	sub    ecx,DWORD PTR [rdi+0x10]
   140023bf7:	sub    rax,QWORD PTR [rdi+0x20]
   140023bfb:	dec    ecx
   140023bfd:	sar    rax,1
   140023c00:	mov    DWORD PTR [rdx+rax*4],ecx
   140023c03:	mov    WORD PTR [rsi],r8w
   140023c07:	mov    r8d,0x7e
   140023c0d:	add    rsi,0x2
   140023c11:	cmp    r13,r9
   140023c14:	jb     0x140023a70
   140023c1a:	jmp    0x140023ced
   140023c1f:	mov    BYTE PTR [r12+0x13],r14b
   140023c24:	mov    DWORD PTR [r15],0x12
   140023c2b:	mov    rax,QWORD PTR [rdi+0x8]
   140023c2f:	mov    BYTE PTR [rax+0x41],0x7e
   140023c33:	cmp    BYTE PTR [r12+0x11],r14b
   140023c38:	je     0x140023c56
   140023c3a:	lea    eax,[rbx-0x21]
   140023c3d:	cmp    eax,0x5d
   140023c40:	jbe    0x140023c62
   140023c42:	mov    rax,QWORD PTR [rdi+0x8]
   140023c46:	mov    BYTE PTR [rax+0x42],bl
   140023c49:	mov    rax,QWORD PTR [rdi+0x8]
   140023c4d:	mov    BYTE PTR [rax+0x40],0x2
   140023c51:	jmp    0x140023ced
   140023c56:	cmp    ebx,0x7f
   140023c59:	setle  r14b
   140023c5d:	test   r14d,r14d
   140023c60:	je     0x140023cc8
   140023c62:	mov    rax,QWORD PTR [rdi+0x8]
   140023c66:	dec    r13
   140023c69:	mov    BYTE PTR [rax+0x40],0x1
   140023c6d:	jmp    0x140023ced
   140023c6f:	mov    BYTE PTR [r12+0x13],r14b
   140023c74:	mov    DWORD PTR [r15],0x12
   140023c7b:	mov    rax,QWORD PTR [rdi+0x8]
   140023c7f:	mov    DWORD PTR [rax+0x11c],0x2
   140023c89:	mov    rax,QWORD PTR [rdi+0x8]
   140023c8d:	mov    BYTE PTR [rax+0x41],0x7e
   140023c91:	mov    rax,QWORD PTR [rdi+0x8]
   140023c95:	mov    BYTE PTR [rax+0x42],bl
   140023c98:	mov    rax,QWORD PTR [rdi+0x8]
   140023c9c:	mov    BYTE PTR [rax+0x40],0x2
   140023ca0:	jmp    0x140023ced
   140023ca2:	jne    0x140023cad
   140023ca4:	mov    DWORD PTR [r15],0xa
   140023cab:	jmp    0x140023cb4
   140023cad:	mov    DWORD PTR [r15],0xc
   140023cb4:	cmp    ebx,0xff
   140023cba:	mov    rax,QWORD PTR [rdi+0x8]
   140023cbe:	jle    0x140023cd9
   140023cc0:	mov    ecx,ebx
   140023cc2:	sar    ecx,0x8
   140023cc5:	mov    BYTE PTR [rax+0x41],cl
   140023cc8:	mov    rax,QWORD PTR [rdi+0x8]
   140023ccc:	mov    BYTE PTR [rax+0x42],bl
   140023ccf:	mov    rax,QWORD PTR [rdi+0x8]
   140023cd3:	mov    BYTE PTR [rax+0x40],0x2
   140023cd7:	jmp    0x140023ced
   140023cd9:	mov    BYTE PTR [rax+0x41],bl
   140023cdc:	mov    rax,QWORD PTR [rdi+0x8]
   140023ce0:	mov    BYTE PTR [rax+0x40],0x1
   140023ce4:	jmp    0x140023ced
   140023ce6:	mov    DWORD PTR [r15],0xf
   140023ced:	mov    rbx,QWORD PTR [rsp+0x68]
   140023cf2:	mov    QWORD PTR [rdi+0x20],rsi
   140023cf6:	mov    QWORD PTR [rdi+0x10],r13
   140023cfa:	add    rsp,0x20
   140023cfe:	pop    r15
   140023d00:	pop    r14
   140023d02:	pop    r13
   140023d04:	pop    r12
   140023d06:	pop    rdi
   140023d07:	pop    rsi
   140023d08:	pop    rbp
   140023d09:	ret    
   140023d0a:	int3   
   140023d0b:	int3   
   140023d0c:	int3   
   140023d0d:	int3   
   140023d0e:	int3   
   140023d0f:	int3   
   140023d10:	mov    QWORD PTR [rsp+0x10],rdx
   140023d15:	push   rbx
   140023d16:	push   rbp
   140023d17:	push   rsi
   140023d18:	push   rdi
   140023d19:	push   r12
   140023d1b:	push   r13
   140023d1d:	push   r14
   140023d1f:	push   r15
   140023d21:	sub    rsp,0x68
   140023d25:	mov    r9,QWORD PTR [rcx+0x20]
   140023d29:	mov    rax,QWORD PTR [rcx+0x8]
   140023d2d:	mov    rbx,QWORD PTR [rcx+0x10]
   140023d31:	mov    r11d,DWORD PTR [rcx+0x28]
   140023d35:	mov    rsi,QWORD PTR [rcx+0x30]
   140023d39:	xor    r13d,r13d
   140023d3c:	sub    r11d,r9d
   140023d3f:	mov    DWORD PTR [rsp+0xc0],r13d
   140023d47:	mov    QWORD PTR [rsp+0x30],r9
   140023d4c:	mov    r9,QWORD PTR [rcx+0x18]
   140023d50:	mov    r10,rdx
   140023d53:	mov    rdx,QWORD PTR [rax+0x10]
   140023d57:	sub    r9,rbx
   140023d5a:	mov    rbp,rcx
   140023d5d:	movzx  ecx,BYTE PTR [rdx+0x12]
   140023d61:	sar    r9,1
   140023d64:	mov    QWORD PTR [rsp+0x48],rbx
   140023d69:	mov    r8d,r13d
   140023d6c:	mov    BYTE PTR [rsp+0xb0],cl
   140023d73:	mov    DWORD PTR [rsp+0xc8],r13d
   140023d7b:	mov    r12d,r13d
   140023d7e:	mov    DWORD PTR [rsp+0x20],r11d
   140023d83:	mov    QWORD PTR [rsp+0x50],r9
   140023d88:	mov    edi,r13d
   140023d8b:	mov    QWORD PTR [rsp+0x28],rdx
   140023d90:	cmp    DWORD PTR [rax+0x54],r13d
   140023d94:	je     0x140023d9f
   140023d96:	test   r11d,r11d
   140023d99:	jg     0x1400240fd
   140023d9f:	movsxd r9,r9d
   140023da2:	mov    rax,r13
   140023da5:	mov    QWORD PTR [rsp+0x40],r9
   140023daa:	test   r9,r9
   140023dad:	jle    0x1400241e0
   140023db3:	or     r15d,0xffffffff
   140023db7:	nop    WORD PTR [rax+rax*1+0x0]
   140023dc0:	cmp    r12d,r11d
   140023dc3:	mov    DWORD PTR [rsp+0xc0],0xffff
   140023dce:	jge    0x1400241d9
   140023dd4:	movzx  edi,WORD PTR [rbx+rax*2]
   140023dd8:	inc    r8d
   140023ddb:	inc    rax
   140023dde:	inc    r15d
   140023de1:	movzx  r13d,cl
   140023de5:	movsxd rbx,r12d
   140023de8:	mov    DWORD PTR [rsp+0xc8],r8d
   140023df0:	mov    QWORD PTR [rsp+0x38],rax
   140023df5:	movsxd r14,r11d
   140023df8:	cmp    edi,0x7e
   140023dfb:	jne    0x140023e61
   140023dfd:	mov    r9d,0x2
   140023e03:	lea    r8,[rip+0x287ae]        # 0x14004c5b8
   140023e0a:	nop    WORD PTR [rax+rax*1+0x0]
   140023e10:	movzx  eax,BYTE PTR [r8]
   140023e14:	dec    r9d
   140023e17:	cmp    rbx,r14
   140023e1a:	jge    0x140023e39
   140023e1c:	mov    rcx,QWORD PTR [rbp+0x20]
   140023e20:	mov    BYTE PTR [rbx+rcx*1],al
   140023e23:	cmp    QWORD PTR [rbp+0x30],0x0
   140023e28:	je     0x140023e31
   140023e2a:	mov    DWORD PTR [rsi],r15d
   140023e2d:	add    rsi,0x4
   140023e31:	inc    r12d
   140023e34:	inc    rbx
   140023e37:	jmp    0x140023e54
   140023e39:	mov    rdx,QWORD PTR [rbp+0x8]
   140023e3d:	movsx  rcx,BYTE PTR [rdx+0x5b]
   140023e42:	mov    BYTE PTR [rcx+rdx*1+0x68],al
   140023e46:	mov    rax,QWORD PTR [rbp+0x8]
   140023e4a:	inc    BYTE PTR [rax+0x5b]
   140023e4d:	mov    DWORD PTR [r10],0xf
   140023e54:	inc    r8
   140023e57:	test   r9d,r9d
   140023e5a:	jg     0x140023e10
   140023e5c:	jmp    0x140024089
   140023e61:	cmp    edi,0x7f
   140023e64:	jg     0x140023e6a
   140023e66:	mov    ecx,edi
   140023e68:	jmp    0x140023ed3
   140023e6a:	mov    rcx,QWORD PTR [rdx]
   140023e6d:	mov    rax,QWORD PTR [rbp+0x8]
   140023e71:	lea    r8,[rsp+0xc0]
   140023e79:	movzx  r9d,BYTE PTR [rax+0x3f]
   140023e7e:	mov    rcx,QWORD PTR [rcx+0x30]
   140023e82:	mov    edx,edi
   140023e84:	call   0x140017dc0
   140023e89:	cmp    eax,0x2
   140023e8c:	jne    0x1400240b7
   140023e92:	mov    ecx,DWORD PTR [rsp+0xc0]
   140023e99:	mov    eax,0x5e5f
   140023e9e:	mov    r9d,0x5c5d
   140023ea4:	add    eax,ecx
   140023ea6:	cmp    ax,r9w
   140023eaa:	ja     0x1400240b7
   140023eb0:	lea    eax,[rcx+0x5f]
   140023eb3:	cmp    al,0x5d
   140023eb5:	ja     0x1400240b7
   140023ebb:	mov    r10,QWORD PTR [rsp+0xb8]
   140023ec3:	mov    r11d,DWORD PTR [rsp+0x20]
   140023ec8:	mov    rdx,QWORD PTR [rsp+0x28]
   140023ecd:	add    ecx,0xffff7f80
   140023ed3:	mov    DWORD PTR [rsp+0xc0],ecx
   140023eda:	cmp    ecx,0xffff
   140023ee0:	je     0x1400240c2
   140023ee6:	cmp    ecx,0xff
   140023eec:	seta   dil
   140023ef0:	mov    BYTE PTR [rsp+0xb0],dil
   140023ef8:	mov    BYTE PTR [rdx+0x12],dil
   140023efc:	cmp    r13b,dil
   140023eff:	jne    0x140023f0b
   140023f01:	cmp    BYTE PTR [rdx+0x10],0x0
   140023f05:	jne    0x140024006
   140023f0b:	mov    r9d,0x2
   140023f11:	test   dil,dil
   140023f14:	jne    0x140023faa
   140023f1a:	lea    r8,[rip+0x28693]        # 0x14004c5b4
   140023f21:	movzx  eax,BYTE PTR [r8]
   140023f25:	dec    r9d
   140023f28:	cmp    rbx,r14
   140023f2b:	jge    0x140023f4a
   140023f2d:	mov    rcx,QWORD PTR [rbp+0x20]
   140023f31:	mov    BYTE PTR [rbx+rcx*1],al
   140023f34:	cmp    QWORD PTR [rbp+0x30],0x0
   140023f39:	je     0x140023f42
   140023f3b:	mov    DWORD PTR [rsi],r15d
   140023f3e:	add    rsi,0x4
   140023f42:	inc    r12d
   140023f45:	inc    rbx
   140023f48:	jmp    0x140023f65
   140023f4a:	mov    rdx,QWORD PTR [rbp+0x8]
   140023f4e:	movsx  rcx,BYTE PTR [rdx+0x5b]
   140023f53:	mov    BYTE PTR [rcx+rdx*1+0x68],al
   140023f57:	mov    rax,QWORD PTR [rbp+0x8]
   140023f5b:	inc    BYTE PTR [rax+0x5b]
   140023f5e:	mov    DWORD PTR [r10],0xf
   140023f65:	inc    r8
   140023f68:	test   r9d,r9d
   140023f6b:	jg     0x140023f21
   140023f6d:	mov    rax,QWORD PTR [rsp+0x28]
   140023f72:	mov    BYTE PTR [rax+0x10],0x1
   140023f76:	cmp    r12d,r11d
   140023f79:	jge    0x140024066
   140023f7f:	mov    rdx,QWORD PTR [rsp+0x30]
   140023f84:	movzx  eax,BYTE PTR [rsp+0xc0]
   140023f8c:	movsxd rcx,r12d
   140023f8f:	mov    BYTE PTR [rcx+rdx*1],al
   140023f92:	inc    r12d
   140023f95:	test   rsi,rsi
   140023f98:	je     0x140024089
   140023f9e:	mov    DWORD PTR [rsi],r15d
   140023fa1:	add    rsi,0x4
   140023fa5:	jmp    0x140024089
   140023faa:	lea    r8,[rip+0x285ff]        # 0x14004c5b0
   140023fb1:	movzx  eax,BYTE PTR [r8]
   140023fb5:	dec    r9d
   140023fb8:	cmp    rbx,r14
   140023fbb:	jge    0x140023fda
   140023fbd:	mov    rcx,QWORD PTR [rbp+0x20]
   140023fc1:	mov    BYTE PTR [rbx+rcx*1],al
   140023fc4:	cmp    QWORD PTR [rbp+0x30],0x0
   140023fc9:	je     0x140023fd2
   140023fcb:	mov    DWORD PTR [rsi],r15d
   140023fce:	add    rsi,0x4
   140023fd2:	inc    r12d
   140023fd5:	inc    rbx
   140023fd8:	jmp    0x140023ff5
   140023fda:	mov    rdx,QWORD PTR [rbp+0x8]
   140023fde:	movsx  rcx,BYTE PTR [rdx+0x5b]
   140023fe3:	mov    BYTE PTR [rcx+rdx*1+0x68],al
   140023fe7:	mov    rax,QWORD PTR [rbp+0x8]
   140023feb:	inc    BYTE PTR [rax+0x5b]
   140023fee:	mov    DWORD PTR [r10],0xf
   140023ff5:	inc    r8
   140023ff8:	test   r9d,r9d
   140023ffb:	jg     0x140023fb1
   140023ffd:	mov    rax,QWORD PTR [rsp+0x28]
   140024002:	mov    BYTE PTR [rax+0x10],0x1
   140024006:	test   dil,dil
   140024009:	je     0x140023f76
   14002400f:	mov    ecx,DWORD PTR [rsp+0xc0]
   140024016:	shr    ecx,0x8
   140024019:	cmp    r12d,r11d
   14002401c:	jge    0x140024052
   14002401e:	mov    r9,QWORD PTR [rsp+0x30]
   140024023:	movsxd rax,r12d
   140024026:	inc    r12d
   140024029:	mov    BYTE PTR [rax+r9*1],cl
   14002402d:	test   rsi,rsi
   140024030:	je     0x140024039
   140024032:	mov    DWORD PTR [rsi],r15d
   140024035:	add    rsi,0x4
   140024039:	cmp    r12d,r11d
   14002403c:	movzx  eax,BYTE PTR [rsp+0xc0]
   140024044:	jge    0x14002406e
   140024046:	movsxd rcx,r12d
   140024049:	mov    BYTE PTR [rcx+r9*1],al
   14002404d:	jmp    0x140023f92
   140024052:	mov    rdx,QWORD PTR [rbp+0x8]
   140024056:	movsx  rax,BYTE PTR [rdx+0x5b]
   14002405b:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   14002405f:	mov    rax,QWORD PTR [rbp+0x8]
   140024063:	inc    BYTE PTR [rax+0x5b]
   140024066:	movzx  eax,BYTE PTR [rsp+0xc0]
   14002406e:	mov    rdx,QWORD PTR [rbp+0x8]
   140024072:	movsx  rcx,BYTE PTR [rdx+0x5b]
   140024077:	mov    BYTE PTR [rcx+rdx*1+0x68],al
   14002407b:	mov    rax,QWORD PTR [rbp+0x8]
   14002407f:	inc    BYTE PTR [rax+0x5b]
   140024082:	mov    DWORD PTR [r10],0xf
   140024089:	mov    rax,QWORD PTR [rsp+0x38]
   14002408e:	mov    cl,BYTE PTR [rsp+0xb0]
   140024095:	mov    rdx,QWORD PTR [rsp+0x28]
   14002409a:	cmp    rax,QWORD PTR [rsp+0x40]
   14002409f:	jge    0x1400241e0
   1400240a5:	mov    r8d,DWORD PTR [rsp+0xc8]
   1400240ad:	mov    rbx,QWORD PTR [rsp+0x48]
   1400240b2:	jmp    0x140023dc0
   1400240b7:	mov    DWORD PTR [rsp+0xc0],0xffff
   1400240c2:	mov    eax,edi
   1400240c4:	and    eax,0xfffff800
   1400240c9:	cmp    eax,0xd800
   1400240ce:	jne    0x1400241b6
   1400240d4:	bt     edi,0xa
   1400240d8:	jb     0x140024193
   1400240de:	mov    rax,QWORD PTR [rbp+0x8]
   1400240e2:	mov    r10,QWORD PTR [rsp+0xb8]
   1400240ea:	mov    r8d,DWORD PTR [rsp+0xc8]
   1400240f2:	mov    r9,QWORD PTR [rsp+0x50]
   1400240f7:	mov    DWORD PTR [rax+0x54],edi
   1400240fa:	xor    r13d,r13d
   1400240fd:	cmp    r8d,r9d
   140024100:	jge    0x14002417b
   140024106:	mov    rax,QWORD PTR [rbp+0x10]
   14002410a:	movsxd rcx,r8d
   14002410d:	movzx  edx,WORD PTR [rax+rcx*2]
   140024111:	mov    eax,edx
   140024113:	and    eax,0xfffffc00
   140024118:	cmp    eax,0xdc00
   14002411d:	jne    0x14002415f
   14002411f:	mov    rax,QWORD PTR [rbp+0x8]
   140024123:	mov    cl,BYTE PTR [rsp+0xb0]
   14002412a:	inc    r8d
   14002412d:	mov    edi,DWORD PTR [rax+0x54]
   140024130:	mov    DWORD PTR [rax+0x54],r13d
   140024134:	mov    DWORD PTR [r10],0xa
   14002413b:	mov    rax,QWORD PTR [rbp+0x8]
   14002413f:	sub    edi,0xd7f7
   140024145:	mov    DWORD PTR [rsp+0xc8],r8d
   14002414d:	shl    edi,0xa
   140024150:	add    edi,edx
   140024152:	mov    rdx,QWORD PTR [rsp+0x28]
   140024157:	mov    DWORD PTR [rax+0x54],edi
   14002415a:	jmp    0x1400241e0
   14002415f:	mov    cl,BYTE PTR [rsp+0xb0]
   140024166:	mov    rdx,QWORD PTR [rsp+0x28]
   14002416b:	mov    DWORD PTR [r10],0xc
   140024172:	mov    rax,QWORD PTR [rbp+0x8]
   140024176:	mov    DWORD PTR [rax+0x54],edi
   140024179:	jmp    0x1400241e0
   14002417b:	mov    cl,BYTE PTR [rsp+0xb0]
   140024182:	mov    rdx,QWORD PTR [rsp+0x28]
   140024187:	mov    DWORD PTR [r10],r13d
   14002418a:	mov    rax,QWORD PTR [rbp+0x8]
   14002418e:	mov    DWORD PTR [rax+0x54],edi
   140024191:	jmp    0x1400241e0
   140024193:	mov    rax,QWORD PTR [rsp+0xb8]
   14002419b:	mov    cl,BYTE PTR [rsp+0xb0]
   1400241a2:	mov    rdx,QWORD PTR [rsp+0x28]
   1400241a7:	mov    DWORD PTR [rax],0xc
   1400241ad:	mov    rax,QWORD PTR [rbp+0x8]
   1400241b1:	mov    DWORD PTR [rax+0x54],edi
   1400241b4:	jmp    0x1400241e0
   1400241b6:	mov    rax,QWORD PTR [rsp+0xb8]
   1400241be:	mov    cl,BYTE PTR [rsp+0xb0]
   1400241c5:	mov    rdx,QWORD PTR [rsp+0x28]
   1400241ca:	mov    DWORD PTR [rax],0xa
   1400241d0:	mov    rax,QWORD PTR [rbp+0x8]
   1400241d4:	mov    DWORD PTR [rax+0x54],edi
   1400241d7:	jmp    0x1400241e0
   1400241d9:	mov    DWORD PTR [r10],0xf
   1400241e0:	movsxd rax,r12d
   1400241e3:	add    QWORD PTR [rbp+0x20],rax
   1400241e7:	movsxd rax,DWORD PTR [rsp+0xc8]
   1400241ef:	add    rax,rax
   1400241f2:	add    QWORD PTR [rbp+0x10],rax
   1400241f6:	mov    BYTE PTR [rdx+0x12],cl
   1400241f9:	add    rsp,0x68
   1400241fd:	pop    r15
   1400241ff:	pop    r14
   140024201:	pop    r13
   140024203:	pop    r12
   140024205:	pop    rdi
   140024206:	pop    rsi
   140024207:	pop    rbp
   140024208:	pop    rbx
   140024209:	ret    
   14002420a:	int3   
   14002420b:	int3   
   14002420c:	int3   
   14002420d:	int3   
   14002420e:	int3   
   14002420f:	int3   
   140024210:	sub    rsp,0x38
   140024214:	mov    r10,rcx
   140024217:	mov    rcx,QWORD PTR [rcx+0x8]
   14002421b:	mov    r9,r8
   14002421e:	mov    rax,QWORD PTR [rcx+0x10]
   140024222:	lea    r8,[rsp+0x40]
   140024227:	cmp    BYTE PTR [rax+0x12],0x0
   14002422b:	je     0x140024240
   14002422d:	mov    BYTE PTR [rsp+0x40],0x7e
   140024232:	mov    BYTE PTR [rsp+0x41],0x7d
   140024237:	lea    r8,[rsp+0x42]
   14002423c:	mov    BYTE PTR [rax+0x12],0x0
   140024240:	mov    rax,QWORD PTR [rcx+0x28]
   140024244:	mov    QWORD PTR [rsp+0x20],r9
   140024249:	mov    r9d,edx
   14002424c:	movzx  ecx,BYTE PTR [rax]
   14002424f:	lea    rax,[rsp+0x40]
   140024254:	lea    rdx,[rsp+0x40]
   140024259:	mov    BYTE PTR [r8],cl
   14002425c:	sub    r8d,eax
   14002425f:	mov    rcx,r10
   140024262:	inc    r8d
   140024265:	call   0x140018db0
   14002426a:	add    rsp,0x38
   14002426e:	ret    
   14002426f:	int3   
   140024270:	rex push rbx
   140024272:	sub    rsp,0x20
   140024276:	cmp    DWORD PTR [r9],0x0
   14002427a:	mov    rbx,rdx
   14002427d:	mov    r10,rcx
   140024280:	jg     0x14002428f
   140024282:	cmp    DWORD PTR [r8],0x0
   140024286:	jne    0x140024297
   140024288:	mov    DWORD PTR [r8],0x260
   14002428f:	xor    eax,eax
   140024291:	add    rsp,0x20
   140024295:	pop    rbx
   140024296:	ret    
   140024297:	mov    rcx,QWORD PTR [rcx+0x10]
   14002429b:	add    rdx,0x248
   1400242a2:	lea    r8,[rsp+0x48]
   1400242a7:	mov    rax,QWORD PTR [rcx]
   1400242aa:	mov    QWORD PTR [rdx],rax
   1400242ad:	mov    rax,QWORD PTR [rcx+0x8]
   1400242b1:	mov    QWORD PTR [rdx+0x8],rax
   1400242b5:	mov    rax,QWORD PTR [rcx+0x10]
   1400242b9:	mov    QWORD PTR [rbx+0x10],rdx
   1400242bd:	mov    QWORD PTR [rdx+0x10],rax
   1400242c1:	mov    BYTE PTR [rbx+0x3e],0x1
   1400242c5:	mov    rcx,QWORD PTR [r10+0x10]
   1400242c9:	mov    DWORD PTR [rsp+0x48],0x128
   1400242d1:	mov    rcx,QWORD PTR [rcx]
   1400242d4:	lea    rdx,[rbx+0x120]
   1400242db:	call   0x14000dbf0
   1400242e0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400242e4:	mov    QWORD PTR [rcx],rax
   1400242e7:	mov    rax,rbx
   1400242ea:	add    rsp,0x20
   1400242ee:	pop    rbx
   1400242ef:	ret    
   1400242f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400242f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400242fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400242ff:	push   rdi
   140024300:	sub    rsp,0x30
   140024304:	mov    rbp,rdx
   140024307:	xor    edx,edx
   140024309:	mov    rbx,rcx
   14002430c:	mov    rcx,QWORD PTR [rbp+0x0]
   140024310:	mov    esi,r8d
   140024313:	lea    r8d,[rdx+0x7f]
   140024317:	mov    rdi,r9
   14002431a:	call   QWORD PTR [rbp+0x10]
   14002431d:	mov    r11,QWORD PTR [rbx+0x10]
   140024321:	mov    rcx,QWORD PTR [r11]
   140024324:	mov    r9d,0x5
   14002432a:	mov    r8d,esi
   14002432d:	mov    rcx,QWORD PTR [rcx+0x30]
   140024331:	mov    rdx,rbp
   140024334:	mov    QWORD PTR [rsp+0x20],rdi
   140024339:	call   0x1400131b0
   14002433e:	mov    rbx,QWORD PTR [rsp+0x40]
   140024343:	mov    rbp,QWORD PTR [rsp+0x48]
   140024348:	mov    rsi,QWORD PTR [rsp+0x50]
   14002434d:	add    rsp,0x30
   140024351:	pop    rdi
   140024352:	ret    
   140024353:	int3   
   140024354:	int3   
   140024355:	int3   
   140024356:	int3   
   140024357:	int3   
   140024358:	int3   
   140024359:	int3   
   14002435a:	int3   
   14002435b:	int3   
   14002435c:	int3   
   14002435d:	int3   
   14002435e:	int3   
   14002435f:	int3   
   140024360:	mov    QWORD PTR [rsp+0x10],rbx
   140024365:	push   rsi
   140024366:	sub    rsp,0x20
   14002436a:	mov    rsi,rcx
   14002436d:	lea    rbx,[rip+0x2867c]        # 0x14004c9f0
   140024374:	test   rcx,rcx
   140024377:	je     0x1400243f2
   140024379:	cmp    BYTE PTR [rcx],0x0
   14002437c:	je     0x1400243f2
   14002437e:	cmp    QWORD PTR [rip+0x2866a],0x0        # 0x14004c9f0
   140024386:	mov    QWORD PTR [rsp+0x30],rdi
   14002438b:	je     0x1400243e0
   14002438d:	nop    DWORD PTR [rax]
   140024390:	mov    r9,QWORD PTR [rbx]
   140024393:	movzx  edx,BYTE PTR [rsi]
   140024396:	movzx  eax,BYTE PTR [r9]
   14002439a:	cmp    al,dl
   14002439c:	jne    0x1400243d2
   14002439e:	or     rcx,0xffffffffffffffff
   1400243a2:	xor    eax,eax
   1400243a4:	mov    rdi,r9
   1400243a7:	repnz scas al,BYTE PTR es:[rdi]
   1400243a9:	mov    rdx,rsi
   1400243ac:	not    rcx
   1400243af:	lea    r8,[rcx-0x1]
   1400243b3:	mov    rcx,r9
   1400243b6:	call   0x14002e1f0
   1400243bb:	test   eax,eax
   1400243bd:	jne    0x1400243d6
   1400243bf:	mov    al,BYTE PTR [rbx+0x8]
   1400243c2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400243c7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400243cc:	add    rsp,0x20
   1400243d0:	pop    rsi
   1400243d1:	ret    
   1400243d2:	cmp    al,dl
   1400243d4:	jg     0x1400243e0
   1400243d6:	add    rbx,0x10
   1400243da:	cmp    QWORD PTR [rbx],0x0
   1400243de:	jne    0x140024390
   1400243e0:	mov    al,0x1
   1400243e2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400243e7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400243ec:	add    rsp,0x20
   1400243f0:	pop    rsi
   1400243f1:	ret    
   1400243f2:	xor    al,al
   1400243f4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400243f9:	add    rsp,0x20
   1400243fd:	pop    rsi
   1400243fe:	ret    
   1400243ff:	int3   
   140024400:	mov    QWORD PTR [rsp+0x10],rbx
   140024405:	push   rsi
   140024406:	sub    rsp,0x20
   14002440a:	mov    rbx,QWORD PTR [rcx+0x10]
   14002440e:	mov    rsi,rcx
   140024411:	test   rbx,rbx
   140024414:	je     0x140024453
   140024416:	mov    QWORD PTR [rsp+0x30],rdi
   14002441b:	mov    edi,0x14
   140024420:	mov    rcx,QWORD PTR [rbx]
   140024423:	test   rcx,rcx
   140024426:	je     0x14002442d
   140024428:	call   0x140011690
   14002442d:	add    rbx,0x8
   140024431:	sub    rdi,0x1
   140024435:	jne    0x140024420
   140024437:	cmp    BYTE PTR [rsi+0x3e],0x0
   14002443b:	mov    rdi,QWORD PTR [rsp+0x30]
   140024440:	jne    0x140024453
   140024442:	mov    rcx,QWORD PTR [rsi+0x10]
   140024446:	call   0x140010a40
   14002444b:	mov    QWORD PTR [rsi+0x10],0x0
   140024453:	mov    rbx,QWORD PTR [rsp+0x38]
   140024458:	add    rsp,0x20
   14002445c:	pop    rsi
   14002445d:	ret    
   14002445e:	int3   
   14002445f:	int3   
   140024460:	rex push rdi
   140024462:	sub    rsp,0x20
   140024466:	cmp    DWORD PTR [r8],0x0
   14002446a:	mov    rdi,rdx
   14002446d:	jg     0x14002447e
   14002446f:	mov    DWORD PTR [r8],0x1c8
   140024476:	xor    eax,eax
   140024478:	add    rsp,0x20
   14002447c:	pop    rdi
   14002447d:	ret    
   14002447e:	mov    QWORD PTR [rsp+0x30],rbx
   140024483:	mov    QWORD PTR [rsp+0x38],rbp
   140024488:	lea    rbp,[rdx+0x120]
   14002448f:	mov    QWORD PTR [rsp+0x40],rsi
   140024494:	mov    rsi,QWORD PTR [rcx+0x10]
   140024498:	mov    r8d,0xa8
   14002449e:	mov    rdx,rsi
   1400244a1:	mov    rcx,rbp
   1400244a4:	call   0x14002b9a0
   1400244a9:	xor    ebx,ebx
   1400244ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400244b0:	mov    rcx,QWORD PTR [rsi+rbx*8]
   1400244b4:	test   rcx,rcx
   1400244b7:	je     0x1400244be
   1400244b9:	call   0x1400116f0
   1400244be:	inc    rbx
   1400244c1:	cmp    rbx,0x13
   1400244c5:	jle    0x1400244b0
   1400244c7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400244cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400244d1:	mov    QWORD PTR [rdi+0x10],rbp
   1400244d5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400244da:	mov    BYTE PTR [rdi+0x3e],0x1
   1400244de:	mov    rax,rdi
   1400244e1:	add    rsp,0x20
   1400244e5:	pop    rdi
   1400244e6:	ret    
   1400244e7:	int3   
   1400244e8:	int3   
   1400244e9:	int3   
   1400244ea:	int3   
   1400244eb:	int3   
   1400244ec:	int3   
   1400244ed:	int3   
   1400244ee:	int3   
   1400244ef:	int3   
   1400244f0:	mov    r11,rsp
   1400244f3:	push   rbp
   1400244f4:	push   rsi
   1400244f5:	push   r12
   1400244f7:	push   r13
   1400244f9:	sub    rsp,0xa8
   140024500:	mov    rax,QWORD PTR [rip+0x423a9]        # 0x1400668b0
   140024507:	xor    rax,rsp
   14002450a:	mov    QWORD PTR [rsp+0x88],rax
   140024512:	mov    rax,QWORD PTR [rcx+0x8]
   140024516:	xor    bpl,bpl
   140024519:	xor    esi,esi
   14002451b:	mov    r12,QWORD PTR [rax+0x10]
   14002451f:	mov    rax,QWORD PTR [rcx+0x18]
   140024523:	mov    r13,rdx
   140024526:	mov    QWORD PTR [rsp+0x38],rdx
   14002452b:	mov    r8,rcx
   14002452e:	mov    QWORD PTR [rsp+0x30],rcx
   140024533:	mov    BYTE PTR [rsp+0x20],bpl
   140024538:	mov    QWORD PTR [rsp+0x40],r12
   14002453d:	mov    DWORD PTR [rsp+0x28],esi
   140024541:	cmp    QWORD PTR [rcx+0x10],rax
   140024545:	jae    0x14002509e
   14002454b:	mov    QWORD PTR [r11+0x18],rbx
   14002454f:	mov    edx,0x80
   140024554:	mov    QWORD PTR [r11-0x28],rdi
   140024558:	mov    QWORD PTR [r11-0x30],r14
   14002455c:	mov    QWORD PTR [r11-0x38],r15
   140024560:	lea    edi,[rdx+0x30]
   140024563:	lea    r9d,[rdx+0x31]
   140024567:	lea    r10d,[rdx+0x57]
   14002456b:	lea    r11d,[rdx+0x77]
   14002456f:	nop
   140024570:	cmp    DWORD PTR [r13+0x0],0x0
   140024575:	jg     0x14002507e
   14002457b:	movzx  eax,BYTE PTR [r12+0xa1]
   140024584:	mov    BYTE PTR [rsp+0x2c],al
   140024588:	mov    rax,QWORD PTR [r8+0x28]
   14002458c:	cmp    QWORD PTR [r8+0x20],rax
   140024590:	jae    0x140025076
   140024596:	mov    rax,QWORD PTR [r8+0x10]
   14002459a:	xor    ebx,ebx
   14002459c:	lea    r14,[rsp+0x24]
   1400245a1:	movzx  r15d,WORD PTR [rax]
   1400245a5:	movzx  ecx,r15w
   1400245a9:	sub    cx,dx
   1400245ac:	cmp    cx,0x7f
   1400245b0:	ja     0x1400245ff
   1400245b2:	cmp    r15w,r9w
   1400245b6:	je     0x1400245ff
   1400245b8:	cmp    r15w,r10w
   1400245bc:	je     0x1400245ff
   1400245be:	cmp    r15w,r11w
   1400245c2:	je     0x1400245ff
   1400245c4:	cmp    r15w,di
   1400245c8:	je     0x1400245ff
   1400245ca:	mov    eax,0xb4
   1400245cf:	cmp    r15w,ax
   1400245d3:	je     0x1400245ff
   1400245d5:	mov    eax,0xb6
   1400245da:	cmp    r15w,ax
   1400245de:	je     0x1400245ff
   1400245e0:	mov    eax,0xa7
   1400245e5:	cmp    r15w,ax
   1400245e9:	je     0x1400245ff
   1400245eb:	mov    eax,0xa8
   1400245f0:	cmp    r15w,ax
   1400245f4:	je     0x1400245ff
   1400245f6:	mov    BYTE PTR [r12+0xa1],0x1
   1400245ff:	cmp    r15w,0x1f
   140024604:	jbe    0x140024610
   140024606:	cmp    r15w,dx
   14002460a:	jb     0x140024f41
   140024610:	test   r15w,r15w
   140024614:	je     0x140024f41
   14002461a:	cmp    r15w,0x9
   14002461f:	je     0x140024f41
   140024625:	cmp    r15w,0xd
   14002462a:	je     0x140024f41
   140024630:	cmp    r15w,0xa
   140024635:	je     0x140024f41
   14002463b:	cmp    r15w,0x19
   140024640:	je     0x140024f41
   140024646:	lea    rax,[rip+0x28073]        # 0x14004c6c0
   14002464d:	cmp    r15w,0x1f
   140024652:	jbe    0x14002465f
   140024654:	add    rax,0x6
   140024658:	cmp    r15w,WORD PTR [rax+0x2]
   14002465d:	ja     0x140024654
   14002465f:	cmp    r15w,WORD PTR [rax]
   140024663:	jb     0x1400247b7
   140024669:	movzx  r13d,BYTE PTR [rax+0x4]
   14002466e:	cmp    r13b,0x14
   140024672:	je     0x1400247ba
   140024678:	cmp    r13b,0xf
   14002467c:	jne    0x1400246ca
   14002467e:	cmp    r15w,0x1f
   140024683:	ja     0x1400246a6
   140024685:	lea    eax,[r15+0x20]
   140024689:	lea    r14,[rsp+0x26]
   14002468e:	mov    BYTE PTR [rsp+0x24],r13b
   140024693:	mov    BYTE PTR [rsp+0x25],al
   140024697:	lea    rax,[rsp+0x24]
   14002469c:	mov    ebx,r14d
   14002469f:	sub    ebx,eax
   1400246a1:	jmp    0x1400247ef
   1400246a6:	cmp    cx,0x20
   1400246aa:	ja     0x1400246bb
   1400246ac:	mov    BYTE PTR [rsp+0x24],0xf
   1400246b1:	mov    BYTE PTR [rsp+0x25],r15b
   1400246b6:	lea    r14,[rsp+0x26]
   1400246bb:	lea    rax,[rsp+0x24]
   1400246c0:	mov    ebx,r14d
   1400246c3:	sub    ebx,eax
   1400246c5:	jmp    0x1400247ef
   1400246ca:	cmp    r13b,0x14
   1400246ce:	jae    0x1400247f7
   1400246d4:	movzx  edi,r13b
   1400246d8:	lea    r8,[rsp+0x50]
   1400246dd:	movzx  edx,r15w
   1400246e1:	mov    rcx,QWORD PTR [r12+rdi*8]
   1400246e5:	xor    r9d,r9d
   1400246e8:	lea    rbx,[rsp+0x24]
   1400246ed:	call   0x140017dc0
   1400246f2:	mov    r11d,eax
   1400246f5:	test   eax,eax
   1400246f7:	jle    0x1400247a9
   1400246fd:	mov    edx,DWORD PTR [rsp+0x50]
   140024701:	lea    ecx,[rax*8-0x8]
   140024708:	movzx  ebp,r13b
   14002470c:	mov    eax,edx
   14002470e:	mov    BYTE PTR [rsp+0x20],r13b
   140024713:	shr    eax,cl
   140024715:	test   r13b,r13b
   140024718:	je     0x140024746
   14002471a:	cmp    BYTE PTR [r12+0xa0],r13b
   140024722:	je     0x140024746
   140024724:	mov    BYTE PTR [rsp+0x24],r13b
   140024729:	lea    rbx,[rsp+0x25]
   14002472e:	cmp    r11d,0x1
   140024732:	jne    0x14002475c
   140024734:	cmp    r13b,0x10
   140024738:	jb     0x14002474c
   14002473a:	mov    BYTE PTR [rsp+0x25],r13b
   14002473f:	lea    rbx,[rsp+0x26]
   140024744:	jmp    0x14002474c
   140024746:	cmp    r11d,0x1
   14002474a:	jne    0x14002475c
   14002474c:	cmp    al,0x20
   14002474e:	jae    0x14002475c
   140024750:	mov    r8,QWORD PTR [rsp+0x30]
   140024755:	xor    ebx,ebx
   140024757:	jmp    0x1400247ef
   14002475c:	sub    r11d,0x1
   140024760:	je     0x140024795
   140024762:	sub    r11d,0x1
   140024766:	je     0x14002478a
   140024768:	sub    r11d,0x1
   14002476c:	je     0x14002477f
   14002476e:	cmp    r11d,0x1
   140024772:	jne    0x14002479a
   140024774:	mov    eax,edx
   140024776:	shr    eax,0x18
   140024779:	inc    rbx
   14002477c:	mov    BYTE PTR [rbx-0x1],al
   14002477f:	mov    eax,edx
   140024781:	shr    eax,0x10
   140024784:	inc    rbx
   140024787:	mov    BYTE PTR [rbx-0x1],al
   14002478a:	mov    eax,edx
   14002478c:	shr    eax,0x8
   14002478f:	inc    rbx
   140024792:	mov    BYTE PTR [rbx-0x1],al
   140024795:	mov    BYTE PTR [rbx],dl
   140024797:	inc    rbx
   14002479a:	mov    r8,QWORD PTR [rsp+0x30]
   14002479f:	lea    rax,[rsp+0x24]
   1400247a4:	sub    rbx,rax
   1400247a7:	jmp    0x1400247ef
   1400247a9:	mov    r8,QWORD PTR [rsp+0x30]
   1400247ae:	mov    BYTE PTR [rsp+rdi*1+0x70],0x1
   1400247b3:	xor    ebx,ebx
   1400247b5:	jmp    0x1400247ef
   1400247b7:	mov    r13b,0x14
   1400247ba:	movzx  eax,r15w
   1400247be:	mov    BYTE PTR [rsp+0x24],0x14
   1400247c3:	shr    ax,0x8
   1400247c7:	test   r15b,r15b
   1400247ca:	jne    0x1400247d7
   1400247cc:	mov    BYTE PTR [rsp+0x25],0xf6
   1400247d1:	mov    BYTE PTR [rsp+0x26],al
   1400247d5:	jmp    0x1400247e0
   1400247d7:	mov    BYTE PTR [rsp+0x25],al
   1400247db:	mov    BYTE PTR [rsp+0x26],r15b
   1400247e0:	lea    r14,[rsp+0x27]
   1400247e5:	lea    rcx,[rsp+0x24]
   1400247ea:	mov    ebx,r14d
   1400247ed:	sub    ebx,ecx
   1400247ef:	test   ebx,ebx
   1400247f1:	jne    0x140024fbb
   1400247f7:	xor    eax,eax
   1400247f9:	mov    QWORD PTR [rsp+0x70],rax
   1400247fe:	mov    QWORD PTR [rsp+0x78],rax
   140024803:	mov    DWORD PTR [rsp+0x80],eax
   14002480a:	movzx  eax,BYTE PTR [r12+0xa0]
   140024813:	cmp    al,0x1
   140024815:	je     0x140024b28
   14002481b:	cmp    r13b,0x80
   14002481f:	jne    0x14002482a
   140024821:	cmp    al,0x10
   140024823:	jb     0x140024843
   140024825:	jmp    0x140024b28
   14002482a:	cmp    r13b,0x81
   14002482e:	jne    0x140024839
   140024830:	cmp    al,0x10
   140024832:	jae    0x140024843
   140024834:	jmp    0x140024b28
   140024839:	cmp    r13b,0x82
   14002483d:	jne    0x140024b28
   140024843:	movzx  edi,BYTE PTR [r12+0xa1]
   14002484c:	cmp    dil,0x10
   140024850:	jae    0x140024a60
   140024856:	mov    rcx,QWORD PTR [r12+0x8]
   14002485b:	movzx  ebp,r15w
   14002485f:	lea    r8,[rsp+0x54]
   140024864:	mov    edx,ebp
   140024866:	xor    r9d,r9d
   140024869:	mov    rdi,r14
   14002486c:	call   0x140017dc0
   140024871:	mov    r11d,eax
   140024874:	test   eax,eax
   140024876:	jle    0x1400248ef
   140024878:	mov    edx,DWORD PTR [rsp+0x54]
   14002487c:	lea    ecx,[rax*8-0x8]
   140024883:	mov    eax,edx
   140024885:	shr    eax,cl
   140024887:	mov    cl,0x1
   140024889:	mov    BYTE PTR [rsp+0x20],cl
   14002488d:	cmp    BYTE PTR [r12+0xa0],cl
   140024895:	je     0x14002489e
   140024897:	mov    BYTE PTR [r14],cl
   14002489a:	lea    rdi,[r14+0x1]
   14002489e:	cmp    r11d,0x1
   1400248a2:	jne    0x1400248ac
   1400248a4:	cmp    al,0x20
   1400248a6:	jae    0x1400248ac
   1400248a8:	xor    edi,edi
   1400248aa:	jmp    0x1400248f6
   1400248ac:	sub    r11d,0x1
   1400248b0:	je     0x1400248e5
   1400248b2:	sub    r11d,0x1
   1400248b6:	je     0x1400248da
   1400248b8:	sub    r11d,0x1
   1400248bc:	je     0x1400248cf
   1400248be:	cmp    r11d,0x1
   1400248c2:	jne    0x1400248ea
   1400248c4:	mov    eax,edx
   1400248c6:	shr    eax,0x18
   1400248c9:	inc    rdi
   1400248cc:	mov    BYTE PTR [rdi-0x1],al
   1400248cf:	mov    eax,edx
   1400248d1:	shr    eax,0x10
   1400248d4:	inc    rdi
   1400248d7:	mov    BYTE PTR [rdi-0x1],al
   1400248da:	mov    eax,edx
   1400248dc:	shr    eax,0x8
   1400248df:	inc    rdi
   1400248e2:	mov    BYTE PTR [rdi-0x1],al
   1400248e5:	mov    BYTE PTR [rdi],dl
   1400248e7:	inc    rdi
   1400248ea:	sub    rdi,r14
   1400248ed:	jmp    0x1400248f6
   1400248ef:	mov    BYTE PTR [rsp+0x71],0x1
   1400248f4:	xor    edi,edi
   1400248f6:	mov    ebx,edi
   1400248f8:	test   edi,edi
   1400248fa:	jne    0x140024f4d
   140024900:	mov    rcx,QWORD PTR [r12]
   140024904:	lea    r8,[rsp+0x5c]
   140024909:	xor    r9d,r9d
   14002490c:	mov    edx,ebp
   14002490e:	mov    rdi,r14
   140024911:	call   0x140017dc0
   140024916:	mov    r11d,eax
   140024919:	test   eax,eax
   14002491b:	jle    0x140024979
   14002491d:	xor    cl,cl
   14002491f:	mov    BYTE PTR [rsp+0x20],cl
   140024923:	mov    ecx,DWORD PTR [rsp+0x5c]
   140024927:	cmp    eax,0x1
   14002492a:	jne    0x140024935
   14002492c:	cmp    cl,0x20
   14002492f:	jae    0x140024935
   140024931:	xor    edi,edi
   140024933:	jmp    0x140024980
   140024935:	sub    r11d,0x1
   140024939:	je     0x14002496f
   14002493b:	sub    r11d,0x1
   14002493f:	je     0x140024964
   140024941:	sub    r11d,0x1
   140024945:	je     0x140024959
   140024947:	cmp    r11d,0x1
   14002494b:	jne    0x140024974
   14002494d:	mov    eax,ecx
   14002494f:	lea    rdi,[r14+0x1]
   140024953:	shr    eax,0x18
   140024956:	mov    BYTE PTR [r14],al
   140024959:	mov    eax,ecx
   14002495b:	shr    eax,0x10
   14002495e:	inc    rdi
   140024961:	mov    BYTE PTR [rdi-0x1],al
   140024964:	mov    eax,ecx
   140024966:	shr    eax,0x8
   140024969:	inc    rdi
   14002496c:	mov    BYTE PTR [rdi-0x1],al
   14002496f:	mov    BYTE PTR [rdi],cl
   140024971:	inc    rdi
   140024974:	sub    rdi,r14
   140024977:	jmp    0x140024980
   140024979:	mov    BYTE PTR [rsp+0x70],0x1
   14002497e:	xor    edi,edi
   140024980:	mov    ebx,edi
   140024982:	test   edi,edi
   140024984:	jne    0x140024f59
   14002498a:	movzx  edi,BYTE PTR [r12+0xa1]
   140024993:	lea    r8,[rsp+0x64]
   140024998:	xor    r9d,r9d
   14002499b:	mov    rcx,QWORD PTR [r12+rdi*8]
   14002499f:	mov    edx,ebp
   1400249a1:	mov    rbx,r14
   1400249a4:	mov    rsi,rdi
   1400249a7:	call   0x140017dc0
   1400249ac:	mov    r11d,eax
   1400249af:	test   eax,eax
   1400249b1:	jle    0x140024a4f
   1400249b7:	mov    edx,DWORD PTR [rsp+0x64]
   1400249bb:	lea    ecx,[rax*8-0x8]
   1400249c2:	mov    bpl,dil
   1400249c5:	mov    eax,edx
   1400249c7:	mov    BYTE PTR [rsp+0x20],dil
   1400249cc:	shr    eax,cl
   1400249ce:	test   dil,dil
   1400249d1:	je     0x1400249f8
   1400249d3:	cmp    BYTE PTR [r12+0xa0],dil
   1400249db:	je     0x1400249f8
   1400249dd:	mov    BYTE PTR [r14],dil
   1400249e0:	lea    rbx,[r14+0x1]
   1400249e4:	cmp    r11d,0x1
   1400249e8:	jne    0x140024a09
   1400249ea:	cmp    dil,0x10
   1400249ee:	jb     0x1400249fe
   1400249f0:	mov    BYTE PTR [rbx],dil
   1400249f3:	inc    rbx
   1400249f6:	jmp    0x1400249fe
   1400249f8:	cmp    r11d,0x1
   1400249fc:	jne    0x140024a09
   1400249fe:	cmp    al,0x20
   140024a00:	jae    0x140024a09
   140024a02:	xor    ebx,ebx
   140024a04:	jmp    0x140024b20
   140024a09:	sub    r11d,0x1
   140024a0d:	je     0x140024a42
   140024a0f:	sub    r11d,0x1
   140024a13:	je     0x140024a37
   140024a15:	sub    r11d,0x1
   140024a19:	je     0x140024a2c
   140024a1b:	cmp    r11d,0x1
   140024a1f:	jne    0x140024a47
   140024a21:	mov    eax,edx
   140024a23:	shr    eax,0x18
   140024a26:	inc    rbx
   140024a29:	mov    BYTE PTR [rbx-0x1],al
   140024a2c:	mov    eax,edx
   140024a2e:	shr    eax,0x10
   140024a31:	inc    rbx
   140024a34:	mov    BYTE PTR [rbx-0x1],al
   140024a37:	mov    eax,edx
   140024a39:	shr    eax,0x8
   140024a3c:	inc    rbx
   140024a3f:	mov    BYTE PTR [rbx-0x1],al
   140024a42:	mov    BYTE PTR [rbx],dl
   140024a44:	inc    rbx
   140024a47:	sub    rbx,r14
   140024a4a:	jmp    0x140024b20
   140024a4f:	mov    bpl,BYTE PTR [rsp+0x20]
   140024a54:	mov    BYTE PTR [rsp+rsi*1+0x70],0x1
   140024a59:	xor    ebx,ebx
   140024a5b:	jmp    0x140024b20
   140024a60:	movzx  esi,dil
   140024a64:	lea    r8,[rsp+0x48]
   140024a69:	movzx  edx,r15w
   140024a6d:	mov    rcx,QWORD PTR [r12+rsi*8]
   140024a71:	xor    r9d,r9d
   140024a74:	mov    rbx,r14
   140024a77:	call   0x140017dc0
   140024a7c:	mov    r11d,eax
   140024a7f:	test   eax,eax
   140024a81:	jle    0x140024b19
   140024a87:	mov    edx,DWORD PTR [rsp+0x48]
   140024a8b:	lea    ecx,[rax*8-0x8]
   140024a92:	mov    bpl,dil
   140024a95:	mov    eax,edx
   140024a97:	mov    BYTE PTR [rsp+0x20],dil
   140024a9c:	shr    eax,cl
   140024a9e:	test   dil,dil
   140024aa1:	je     0x140024ac8
   140024aa3:	cmp    BYTE PTR [r12+0xa0],dil
   140024aab:	je     0x140024ac8
   140024aad:	mov    BYTE PTR [r14],dil
   140024ab0:	lea    rbx,[r14+0x1]
   140024ab4:	cmp    r11d,0x1
   140024ab8:	jne    0x140024ad6
   140024aba:	cmp    dil,0x10
   140024abe:	jb     0x140024ace
   140024ac0:	mov    BYTE PTR [rbx],dil
   140024ac3:	inc    rbx
   140024ac6:	jmp    0x140024ace
   140024ac8:	cmp    r11d,0x1
   140024acc:	jne    0x140024ad6
   140024ace:	cmp    al,0x20
   140024ad0:	jae    0x140024ad6
   140024ad2:	xor    ebx,ebx
   140024ad4:	jmp    0x140024b20
   140024ad6:	sub    r11d,0x1
   140024ada:	je     0x140024b0f
   140024adc:	sub    r11d,0x1
   140024ae0:	je     0x140024b04
   140024ae2:	sub    r11d,0x1
   140024ae6:	je     0x140024af9
   140024ae8:	cmp    r11d,0x1
   140024aec:	jne    0x140024b14
   140024aee:	mov    eax,edx
   140024af0:	shr    eax,0x18
   140024af3:	inc    rbx
   140024af6:	mov    BYTE PTR [rbx-0x1],al
   140024af9:	mov    eax,edx
   140024afb:	shr    eax,0x10
   140024afe:	inc    rbx
   140024b01:	mov    BYTE PTR [rbx-0x1],al
   140024b04:	mov    eax,edx
   140024b06:	shr    eax,0x8
   140024b09:	inc    rbx
   140024b0c:	mov    BYTE PTR [rbx-0x1],al
   140024b0f:	mov    BYTE PTR [rbx],dl
   140024b11:	inc    rbx
   140024b14:	sub    rbx,r14
   140024b17:	jmp    0x140024b20
   140024b19:	mov    BYTE PTR [rsp+rsi*1+0x70],0x1
   140024b1e:	xor    ebx,ebx
   140024b20:	test   ebx,ebx
   140024b22:	jne    0x140024f65
   140024b28:	movzx  esi,BYTE PTR [r12+0xa1]
   140024b31:	test   sil,sil
   140024b34:	je     0x140024c30
   140024b3a:	cmp    r13b,0x80
   140024b3e:	jne    0x140024b4b
   140024b40:	cmp    sil,0x10
   140024b44:	jb     0x140024b66
   140024b46:	jmp    0x140024c30
   140024b4b:	cmp    r13b,0x81
   140024b4f:	jne    0x140024b5c
   140024b51:	cmp    sil,0x10
   140024b55:	jae    0x140024b66
   140024b57:	jmp    0x140024c30
   140024b5c:	cmp    r13b,0x82
   140024b60:	jne    0x140024c30
   140024b66:	movzx  ebx,sil
   140024b6a:	lea    r8,[rsp+0x60]
   140024b6f:	movzx  edx,r15w
   140024b73:	mov    rcx,QWORD PTR [r12+rbx*8]
   140024b77:	xor    r9d,r9d
   140024b7a:	mov    rdi,r14
   140024b7d:	call   0x140017dc0
   140024b82:	mov    r11d,eax
   140024b85:	test   eax,eax
   140024b87:	jle    0x140024c1f
   140024b8d:	mov    edx,DWORD PTR [rsp+0x60]
   140024b91:	lea    ecx,[rax*8-0x8]
   140024b98:	mov    bpl,sil
   140024b9b:	mov    eax,edx
   140024b9d:	mov    BYTE PTR [rsp+0x20],sil
   140024ba2:	shr    eax,cl
   140024ba4:	test   sil,sil
   140024ba7:	je     0x140024bce
   140024ba9:	cmp    BYTE PTR [r12+0xa0],sil
   140024bb1:	je     0x140024bce
   140024bb3:	mov    BYTE PTR [r14],sil
   140024bb6:	lea    rdi,[r14+0x1]
   140024bba:	cmp    r11d,0x1
   140024bbe:	jne    0x140024bdc
   140024bc0:	cmp    sil,0x10
   140024bc4:	jb     0x140024bd4
   140024bc6:	mov    BYTE PTR [rdi],sil
   140024bc9:	inc    rdi
   140024bcc:	jmp    0x140024bd4
   140024bce:	cmp    r11d,0x1
   140024bd2:	jne    0x140024bdc
   140024bd4:	cmp    al,0x20
   140024bd6:	jae    0x140024bdc
   140024bd8:	xor    edi,edi
   140024bda:	jmp    0x140024c26
   140024bdc:	sub    r11d,0x1
   140024be0:	je     0x140024c15
   140024be2:	sub    r11d,0x1
   140024be6:	je     0x140024c0a
   140024be8:	sub    r11d,0x1
   140024bec:	je     0x140024bff
   140024bee:	cmp    r11d,0x1
   140024bf2:	jne    0x140024c1a
   140024bf4:	mov    eax,edx
   140024bf6:	shr    eax,0x18
   140024bf9:	inc    rdi
   140024bfc:	mov    BYTE PTR [rdi-0x1],al
   140024bff:	mov    eax,edx
   140024c01:	shr    eax,0x10
   140024c04:	inc    rdi
   140024c07:	mov    BYTE PTR [rdi-0x1],al
   140024c0a:	mov    eax,edx
   140024c0c:	shr    eax,0x8
   140024c0f:	inc    rdi
   140024c12:	mov    BYTE PTR [rdi-0x1],al
   140024c15:	mov    BYTE PTR [rdi],dl
   140024c17:	inc    rdi
   140024c1a:	sub    rdi,r14
   140024c1d:	jmp    0x140024c26
   140024c1f:	mov    BYTE PTR [rsp+rbx*1+0x70],0x1
   140024c24:	xor    edi,edi
   140024c26:	mov    ebx,edi
   140024c28:	test   edi,edi
   140024c2a:	jne    0x140024f75
   140024c30:	test   bpl,bpl
   140024c33:	je     0x140024d22
   140024c39:	cmp    r13b,0x80
   140024c3d:	jne    0x140024c4a
   140024c3f:	cmp    bpl,0x10
   140024c43:	jb     0x140024c65
   140024c45:	jmp    0x140024d22
   140024c4a:	cmp    r13b,0x81
   140024c4e:	jne    0x140024c5b
   140024c50:	cmp    bpl,0x10
   140024c54:	jae    0x140024c65
   140024c56:	jmp    0x140024d22
   140024c5b:	cmp    r13b,0x82
   140024c5f:	jne    0x140024d22
   140024c65:	movzx  ebx,bpl
   140024c69:	lea    r8,[rsp+0x58]
   140024c6e:	movzx  edx,r15w
   140024c72:	mov    rcx,QWORD PTR [r12+rbx*8]
   140024c76:	xor    r9d,r9d
   140024c79:	mov    rdi,r14
   140024c7c:	call   0x140017dc0
   140024c81:	mov    r11d,eax
   140024c84:	test   eax,eax
   140024c86:	jle    0x140024d11
   140024c8c:	mov    edx,DWORD PTR [rsp+0x58]
   140024c90:	lea    ecx,[rax*8-0x8]
   140024c97:	mov    eax,edx
   140024c99:	shr    eax,cl
   140024c9b:	cmp    BYTE PTR [r12+0xa0],bpl
   140024ca3:	je     0x140024cc0
   140024ca5:	mov    BYTE PTR [r14],bpl
   140024ca8:	lea    rdi,[r14+0x1]
   140024cac:	cmp    r11d,0x1
   140024cb0:	jne    0x140024cce
   140024cb2:	cmp    bpl,0x10
   140024cb6:	jb     0x140024cc6
   140024cb8:	mov    BYTE PTR [rdi],bpl
   140024cbb:	inc    rdi
   140024cbe:	jmp    0x140024cc6
   140024cc0:	cmp    r11d,0x1
   140024cc4:	jne    0x140024cce
   140024cc6:	cmp    al,0x20
   140024cc8:	jae    0x140024cce
   140024cca:	xor    edi,edi
   140024ccc:	jmp    0x140024d18
   140024cce:	sub    r11d,0x1
   140024cd2:	je     0x140024d07
   140024cd4:	sub    r11d,0x1
   140024cd8:	je     0x140024cfc
   140024cda:	sub    r11d,0x1
   140024cde:	je     0x140024cf1
   140024ce0:	cmp    r11d,0x1
   140024ce4:	jne    0x140024d0c
   140024ce6:	mov    eax,edx
   140024ce8:	shr    eax,0x18
   140024ceb:	inc    rdi
   140024cee:	mov    BYTE PTR [rdi-0x1],al
   140024cf1:	mov    eax,edx
   140024cf3:	shr    eax,0x10
   140024cf6:	inc    rdi
   140024cf9:	mov    BYTE PTR [rdi-0x1],al
   140024cfc:	mov    eax,edx
   140024cfe:	shr    eax,0x8
   140024d01:	inc    rdi
   140024d04:	mov    BYTE PTR [rdi-0x1],al
   140024d07:	mov    BYTE PTR [rdi],dl
   140024d09:	inc    rdi
   140024d0c:	sub    rdi,r14
   140024d0f:	jmp    0x140024d18
   140024d11:	mov    BYTE PTR [rsp+rbx*1+0x70],0x1
   140024d16:	xor    edi,edi
   140024d18:	mov    ebx,edi
   140024d1a:	test   edi,edi
   140024d1c:	jne    0x140024f85
   140024d22:	cmp    r13b,0x81
   140024d26:	mov    eax,0x10
   140024d2b:	mov    r12d,0x1
   140024d31:	cmove  r12d,eax
   140024d35:	cmp    r13b,0x81
   140024d39:	mov    eax,0x13
   140024d3e:	mov    ebp,0xb
   140024d43:	cmove  ebp,eax
   140024d46:	cmp    r13b,0x82
   140024d4a:	jne    0x140024d52
   140024d4c:	mov    r12b,0x1
   140024d4f:	mov    bpl,al
   140024d52:	movzx  esi,r12b
   140024d56:	cmp    r12b,bpl
   140024d59:	ja     0x140024e52
   140024d5f:	mov    r13,QWORD PTR [rsp+0x40]
   140024d64:	test   ebx,ebx
   140024d66:	jne    0x140024f95
   140024d6c:	movzx  edi,sil
   140024d70:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   140024d75:	test   rcx,rcx
   140024d78:	je     0x140024e3e
   140024d7e:	cmp    BYTE PTR [rsp+rdi*1+0x70],bl
   140024d82:	jne    0x140024e3e
   140024d88:	lea    r8,[rsp+0x68]
   140024d8d:	movzx  edx,r15w
   140024d91:	xor    r9d,r9d
   140024d94:	mov    rbx,r14
   140024d97:	call   0x140017dc0
   140024d9c:	mov    r11d,eax
   140024d9f:	test   eax,eax
   140024da1:	jle    0x140024e37
   140024da7:	mov    edx,DWORD PTR [rsp+0x68]
   140024dab:	lea    ecx,[rax*8-0x8]
   140024db2:	mov    eax,edx
   140024db4:	shr    eax,cl
   140024db6:	mov    cl,sil
   140024db9:	mov    BYTE PTR [rsp+0x20],cl
   140024dbd:	test   sil,sil
   140024dc0:	je     0x140024de6
   140024dc2:	cmp    BYTE PTR [r13+0xa0],sil
   140024dc9:	je     0x140024de6
   140024dcb:	mov    BYTE PTR [r14],sil
   140024dce:	lea    rbx,[r14+0x1]
   140024dd2:	cmp    r11d,0x1
   140024dd6:	jne    0x140024df4
   140024dd8:	cmp    sil,0x10
   140024ddc:	jb     0x140024dec
   140024dde:	mov    BYTE PTR [rbx],sil
   140024de1:	inc    rbx
   140024de4:	jmp    0x140024dec
   140024de6:	cmp    r11d,0x1
   140024dea:	jne    0x140024df4
   140024dec:	cmp    al,0x20
   140024dee:	jae    0x140024df4
   140024df0:	xor    ebx,ebx
   140024df2:	jmp    0x140024e3e
   140024df4:	sub    r11d,0x1
   140024df8:	je     0x140024e2d
   140024dfa:	sub    r11d,0x1
   140024dfe:	je     0x140024e22
   140024e00:	sub    r11d,0x1
   140024e04:	je     0x140024e17
   140024e06:	cmp    r11d,0x1
   140024e0a:	jne    0x140024e32
   140024e0c:	mov    eax,edx
   140024e0e:	shr    eax,0x18
   140024e11:	inc    rbx
   140024e14:	mov    BYTE PTR [rbx-0x1],al
   140024e17:	mov    eax,edx
   140024e19:	shr    eax,0x10
   140024e1c:	inc    rbx
   140024e1f:	mov    BYTE PTR [rbx-0x1],al
   140024e22:	mov    eax,edx
   140024e24:	shr    eax,0x8
   140024e27:	inc    rbx
   140024e2a:	mov    BYTE PTR [rbx-0x1],al
   140024e2d:	mov    BYTE PTR [rbx],dl
   140024e2f:	inc    rbx
   140024e32:	sub    rbx,r14
   140024e35:	jmp    0x140024e3e
   140024e37:	mov    BYTE PTR [rsp+rdi*1+0x70],0x1
   140024e3c:	xor    ebx,ebx
   140024e3e:	inc    sil
   140024e41:	cmp    sil,bpl
   140024e44:	jbe    0x140024d64
   140024e4a:	test   ebx,ebx
   140024e4c:	jne    0x140024fa8
   140024e52:	cmp    r12b,0x1
   140024e56:	jne    0x140024efc
   140024e5c:	mov    r12,QWORD PTR [rsp+0x40]
   140024e61:	lea    r8,[rsp+0x4c]
   140024e66:	movzx  edx,r15w
   140024e6a:	mov    rcx,QWORD PTR [r12]
   140024e6e:	xor    r9d,r9d
   140024e71:	mov    rdi,r14
   140024e74:	call   0x140017dc0
   140024e79:	mov    r11d,eax
   140024e7c:	test   eax,eax
   140024e7e:	jle    0x140024edc
   140024e80:	xor    cl,cl
   140024e82:	mov    BYTE PTR [rsp+0x20],cl
   140024e86:	mov    ecx,DWORD PTR [rsp+0x4c]
   140024e8a:	cmp    eax,0x1
   140024e8d:	jne    0x140024e98
   140024e8f:	cmp    cl,0x20
   140024e92:	jae    0x140024e98
   140024e94:	xor    edi,edi
   140024e96:	jmp    0x140024ee3
   140024e98:	sub    r11d,0x1
   140024e9c:	je     0x140024ed2
   140024e9e:	sub    r11d,0x1
   140024ea2:	je     0x140024ec7
   140024ea4:	sub    r11d,0x1
   140024ea8:	je     0x140024ebc
   140024eaa:	cmp    r11d,0x1
   140024eae:	jne    0x140024ed7
   140024eb0:	mov    eax,ecx
   140024eb2:	lea    rdi,[r14+0x1]
   140024eb6:	shr    eax,0x18
   140024eb9:	mov    BYTE PTR [r14],al
   140024ebc:	mov    eax,ecx
   140024ebe:	shr    eax,0x10
   140024ec1:	inc    rdi
   140024ec4:	mov    BYTE PTR [rdi-0x1],al
   140024ec7:	mov    eax,ecx
   140024ec9:	shr    eax,0x8
   140024ecc:	inc    rdi
   140024ecf:	mov    BYTE PTR [rdi-0x1],al
   140024ed2:	mov    BYTE PTR [rdi],cl
   140024ed4:	inc    rdi
   140024ed7:	sub    rdi,r14
   140024eda:	jmp    0x140024ee3
   140024edc:	mov    BYTE PTR [rsp+0x70],0x1
   140024ee1:	xor    edi,edi
   140024ee3:	mov    ebx,edi
   140024ee5:	test   edi,edi
   140024ee7:	je     0x140024f01
   140024ee9:	mov    r8,QWORD PTR [rsp+0x30]
   140024eee:	mov    esi,DWORD PTR [rsp+0x28]
   140024ef2:	mov    r13,QWORD PTR [rsp+0x38]
   140024ef7:	jmp    0x140024fc0
   140024efc:	mov    r12,QWORD PTR [rsp+0x40]
   140024f01:	movzx  eax,r15w
   140024f05:	mov    BYTE PTR [r14],0x14
   140024f09:	shr    ax,0x8
   140024f0d:	test   r15b,r15b
   140024f10:	jne    0x140024f1d
   140024f12:	mov    BYTE PTR [r14+0x1],0xf6
   140024f17:	mov    BYTE PTR [r14+0x2],al
   140024f1b:	jmp    0x140024f25
   140024f1d:	mov    BYTE PTR [r14+0x1],al
   140024f21:	mov    BYTE PTR [r14+0x2],r15b
   140024f25:	mov    r8,QWORD PTR [rsp+0x30]
   140024f2a:	mov    esi,DWORD PTR [rsp+0x28]
   140024f2e:	mov    r13,QWORD PTR [rsp+0x38]
   140024f33:	lea    rax,[rsp+0x24]
   140024f38:	sub    r14d,eax
   140024f3b:	lea    ebx,[r14+0x3]
   140024f3f:	jmp    0x140024fc0
   140024f41:	mov    BYTE PTR [rsp+0x24],r15b
   140024f46:	mov    ebx,0x1
   140024f4b:	jmp    0x140024fc0
   140024f4d:	mov    r8,QWORD PTR [rsp+0x30]
   140024f52:	mov    r13,QWORD PTR [rsp+0x38]
   140024f57:	jmp    0x140024fc0
   140024f59:	mov    r8,QWORD PTR [rsp+0x30]
   140024f5e:	mov    r13,QWORD PTR [rsp+0x38]
   140024f63:	jmp    0x140024fc0
   140024f65:	mov    r8,QWORD PTR [rsp+0x30]
   140024f6a:	mov    esi,DWORD PTR [rsp+0x28]
   140024f6e:	mov    r13,QWORD PTR [rsp+0x38]
   140024f73:	jmp    0x140024fc0
   140024f75:	mov    r8,QWORD PTR [rsp+0x30]
   140024f7a:	mov    esi,DWORD PTR [rsp+0x28]
   140024f7e:	mov    r13,QWORD PTR [rsp+0x38]
   140024f83:	jmp    0x140024fc0
   140024f85:	mov    r8,QWORD PTR [rsp+0x30]
   140024f8a:	mov    esi,DWORD PTR [rsp+0x28]
   140024f8e:	mov    r13,QWORD PTR [rsp+0x38]
   140024f93:	jmp    0x140024fc0
   140024f95:	mov    r8,QWORD PTR [rsp+0x30]
   140024f9a:	mov    esi,DWORD PTR [rsp+0x28]
   140024f9e:	mov    r12,r13
   140024fa1:	mov    r13,QWORD PTR [rsp+0x38]
   140024fa6:	jmp    0x140024fc0
   140024fa8:	mov    r8,QWORD PTR [rsp+0x30]
   140024fad:	mov    esi,DWORD PTR [rsp+0x28]
   140024fb1:	mov    r12,r13
   140024fb4:	mov    r13,QWORD PTR [rsp+0x38]
   140024fb9:	jmp    0x140024fc0
   140024fbb:	mov    r13,QWORD PTR [rsp+0x38]
   140024fc0:	mov    rax,QWORD PTR [r8+0x28]
   140024fc4:	add    QWORD PTR [r8+0x10],0x2
   140024fc9:	lea    rdx,[rsp+0x24]
   140024fce:	cmp    QWORD PTR [r8+0x20],rax
   140024fd2:	jae    0x140025006
   140024fd4:	mov    eax,ebx
   140024fd6:	dec    ebx
   140024fd8:	test   eax,eax
   140024fda:	je     0x140025006
   140024fdc:	movzx  eax,BYTE PTR [rdx]
   140024fdf:	mov    rcx,QWORD PTR [r8+0x20]
   140024fe3:	inc    rdx
   140024fe6:	mov    BYTE PTR [rcx],al
   140024fe8:	mov    rax,QWORD PTR [r8+0x30]
   140024fec:	inc    QWORD PTR [r8+0x20]
   140024ff0:	test   rax,rax
   140024ff3:	je     0x140024ffc
   140024ff5:	mov    DWORD PTR [rax],esi
   140024ff7:	add    QWORD PTR [r8+0x30],0x4
   140024ffc:	mov    rax,QWORD PTR [r8+0x28]
   140025000:	cmp    QWORD PTR [r8+0x20],rax
   140025004:	jb     0x140024fd4
   140025006:	inc    esi
   140025008:	mov    DWORD PTR [rsp+0x28],esi
   14002500c:	test   ebx,ebx
   14002500e:	jle    0x140025041
   140025010:	mov    rcx,QWORD PTR [r8+0x8]
   140025014:	mov    DWORD PTR [r13+0x0],0xf
   14002501c:	mov    rax,QWORD PTR [r8+0x8]
   140025020:	mov    BYTE PTR [rax+0x5b],bl
   140025023:	add    rcx,0x68
   140025027:	nop    WORD PTR [rax+rax*1+0x0]
   140025030:	movzx  eax,BYTE PTR [rdx]
   140025033:	inc    rcx
   140025036:	inc    rdx
   140025039:	sub    ebx,0x1
   14002503c:	mov    BYTE PTR [rcx-0x1],al
   14002503f:	jne    0x140025030
   140025041:	mov    al,BYTE PTR [rsp+0x2c]
   140025045:	mov    bpl,BYTE PTR [rsp+0x20]
   14002504a:	mov    edx,0x80
   14002504f:	mov    BYTE PTR [r12+0xa1],al
   140025057:	mov    rax,QWORD PTR [r8+0x18]
   14002505b:	lea    edi,[rdx+0x30]
   14002505e:	lea    r9d,[rdx+0x31]
   140025062:	lea    r10d,[rdx+0x57]
   140025066:	lea    r11d,[rdx+0x77]
   14002506a:	cmp    QWORD PTR [r8+0x10],rax
   14002506e:	jb     0x140024570
   140025074:	jmp    0x14002507e
   140025076:	mov    DWORD PTR [r13+0x0],0xf
   14002507e:	mov    r14,QWORD PTR [rsp+0x98]
   140025086:	mov    rdi,QWORD PTR [rsp+0xa0]
   14002508e:	mov    rbx,QWORD PTR [rsp+0xe0]
   140025096:	mov    r15,QWORD PTR [rsp+0x90]
   14002509e:	mov    rcx,QWORD PTR [rsp+0x88]
   1400250a6:	xor    rcx,rsp
   1400250a9:	call   0x14002b250
   1400250ae:	add    rsp,0xa8
   1400250b5:	pop    r13
   1400250b7:	pop    r12
   1400250b9:	pop    rsi
   1400250ba:	pop    rbp
   1400250bb:	ret    
   1400250bc:	int3   
   1400250bd:	int3   
   1400250be:	int3   
   1400250bf:	int3   
   1400250c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400250c5:	push   rdi
   1400250c6:	sub    rsp,0x20
   1400250ca:	mov    r10,QWORD PTR [rcx+0x10]
   1400250ce:	mov    rdi,rdx
   1400250d1:	mov    rdx,QWORD PTR [rcx+0x18]
   1400250d5:	xor    r8d,r8d
   1400250d8:	mov    rbx,rcx
   1400250db:	cmp    r10,rdx
   1400250de:	jb     0x1400250f6
   1400250e0:	mov    DWORD PTR [rdi],0x1
   1400250e6:	mov    eax,0xffff
   1400250eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400250f0:	add    rsp,0x20
   1400250f4:	pop    rdi
   1400250f5:	ret    
   1400250f6:	movzx  r9d,BYTE PTR [r10]
   1400250fa:	inc    r10
   1400250fd:	mov    QWORD PTR [rsp+0x38],rsi
   140025102:	mov    QWORD PTR [rcx+0x10],r10
   140025106:	cmp    r9b,0x1f
   14002510a:	jbe    0x140025116
   14002510c:	cmp    r9b,0x80
   140025110:	jb     0x140025418
   140025116:	test   r9b,r9b
   140025119:	je     0x140025418
   14002511f:	cmp    r9b,0x9
   140025123:	je     0x140025418
   140025129:	cmp    r9b,0xd
   14002512d:	je     0x140025418
   140025133:	cmp    r9b,0xa
   140025137:	je     0x140025418
   14002513d:	cmp    r9b,0x19
   140025141:	je     0x140025418
   140025147:	cmp    r9b,0xf
   14002514b:	jne    0x140025199
   14002514d:	lea    rax,[r10+0x1]
   140025151:	cmp    rax,rdx
   140025154:	ja     0x1400251a8
   140025156:	movzx  ecx,BYTE PTR [r10]
   14002515a:	lea    rax,[r10+0x1]
   14002515e:	mov    QWORD PTR [rbx+0x10],rax
   140025162:	cmp    cl,0x80
   140025165:	jae    0x140025182
   140025167:	mov    rsi,QWORD PTR [rsp+0x38]
   14002516c:	movzx  r8d,cl
   140025170:	sub    r8d,0x20
   140025174:	mov    eax,r8d
   140025177:	mov    rbx,QWORD PTR [rsp+0x40]
   14002517c:	add    rsp,0x20
   140025180:	pop    rdi
   140025181:	ret    
   140025182:	mov    rsi,QWORD PTR [rsp+0x38]
   140025187:	movzx  r8d,cl
   14002518b:	mov    eax,r8d
   14002518e:	mov    rbx,QWORD PTR [rsp+0x40]
   140025193:	add    rsp,0x20
   140025197:	pop    rdi
   140025198:	ret    
   140025199:	cmp    r9b,0x14
   14002519d:	jne    0x140025209
   14002519f:	lea    rax,[r10+0x2]
   1400251a3:	cmp    rax,rdx
   1400251a6:	jbe    0x1400251cb
   1400251a8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400251ad:	mov    DWORD PTR [rdi],0xb
   1400251b3:	mov    rax,QWORD PTR [rcx+0x18]
   1400251b7:	mov    QWORD PTR [rcx+0x10],rax
   1400251bb:	mov    eax,0xffff
   1400251c0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400251c5:	add    rsp,0x20
   1400251c9:	pop    rdi
   1400251ca:	ret    
   1400251cb:	movzx  ecx,BYTE PTR [r10]
   1400251cf:	lea    rax,[r10+0x1]
   1400251d3:	mov    QWORD PTR [rbx+0x10],rax
   1400251d7:	movzx  edx,BYTE PTR [rax]
   1400251da:	inc    rax
   1400251dd:	mov    QWORD PTR [rbx+0x10],rax
   1400251e1:	cmp    cl,0xf6
   1400251e4:	jne    0x1400251ea
   1400251e6:	mov    cl,dl
   1400251e8:	xor    dl,dl
   1400251ea:	mov    rsi,QWORD PTR [rsp+0x38]
   1400251ef:	movzx  eax,cl
   1400251f2:	shl    ax,0x8
   1400251f6:	movzx  ecx,ax
   1400251f9:	movzx  eax,dl
   1400251fc:	or     eax,ecx
   1400251fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140025203:	add    rsp,0x20
   140025207:	pop    rdi
   140025208:	ret    
   140025209:	cmp    r9b,0x20
   14002520d:	ja     0x140025337
   140025213:	cmp    r9b,0x13
   140025217:	ja     0x14002531e
   14002521d:	mov    rsi,QWORD PTR [rcx+0x8]
   140025221:	movzx  ecx,r9b
   140025225:	mov    rax,QWORD PTR [rsi+0x10]
   140025229:	mov    r11,QWORD PTR [rax+rcx*8]
   14002522d:	test   r11,r11
   140025230:	je     0x14002531e
   140025236:	cmp    r9b,0x10
   14002523a:	jb     0x1400252ad
   14002523c:	lea    rax,[r10+0x2]
   140025240:	cmp    rax,rdx
   140025243:	ja     0x1400253ac
   140025249:	movsx  edx,BYTE PTR [r10]
   14002524d:	movzx  eax,r9b
   140025251:	cmp    edx,eax
   140025253:	jne    0x140025283
   140025255:	xor    r9d,r9d
   140025258:	lea    rdx,[r10+0x1]
   14002525c:	mov    rcx,r11
   14002525f:	lea    r8d,[r9+0x1]
   140025263:	mov    QWORD PTR [rbx+0x10],rdx
   140025267:	call   0x140016140
   14002526c:	inc    QWORD PTR [rbx+0x10]
   140025270:	mov    rsi,QWORD PTR [rsp+0x38]
   140025275:	mov    r8d,eax
   140025278:	mov    rbx,QWORD PTR [rsp+0x40]
   14002527d:	add    rsp,0x20
   140025281:	pop    rdi
   140025282:	ret    
   140025283:	xor    r9d,r9d
   140025286:	mov    rdx,r10
   140025289:	mov    rcx,r11
   14002528c:	lea    r8d,[r9+0x2]
   140025290:	call   0x140016140
   140025295:	add    QWORD PTR [rbx+0x10],0x2
   14002529a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002529f:	mov    r8d,eax
   1400252a2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400252a7:	add    rsp,0x20
   1400252ab:	pop    rdi
   1400252ac:	ret    
   1400252ad:	lea    rax,[r10+0x1]
   1400252b1:	cmp    rax,rdx
   1400252b4:	ja     0x1400253ac
   1400252ba:	movzx  edx,BYTE PTR [r10]
   1400252be:	lea    rax,[r10+0x1]
   1400252c2:	mov    QWORD PTR [rbx+0x10],rax
   1400252c6:	cmp    dl,0x80
   1400252c9:	jb     0x1400252ea
   1400252cb:	mov    rax,QWORD PTR [r11+0x40]
   1400252cf:	mov    rsi,QWORD PTR [rsp+0x38]
   1400252d4:	movzx  ecx,dl
   1400252d7:	movzx  r8d,WORD PTR [rax+rcx*4]
   1400252dc:	mov    eax,r8d
   1400252df:	mov    rbx,QWORD PTR [rsp+0x40]
   1400252e4:	add    rsp,0x20
   1400252e8:	pop    rdi
   1400252e9:	ret    
   1400252ea:	mov    rax,QWORD PTR [rsi+0x10]
   1400252ee:	mov    rcx,QWORD PTR [rax]
   1400252f1:	mov    BYTE PTR [rsp+0x30],r9b
   1400252f6:	xor    r9d,r9d
   1400252f9:	mov    BYTE PTR [rsp+0x31],dl
   1400252fd:	lea    rdx,[rsp+0x30]
   140025302:	lea    r8d,[r9+0x2]
   140025306:	call   0x140016140
   14002530b:	mov    rsi,QWORD PTR [rsp+0x38]
   140025310:	mov    r8d,eax
   140025313:	mov    rbx,QWORD PTR [rsp+0x40]
   140025318:	add    rsp,0x20
   14002531c:	pop    rdi
   14002531d:	ret    
   14002531e:	mov    rsi,QWORD PTR [rsp+0x38]
   140025323:	mov    DWORD PTR [rdi],0xa
   140025329:	mov    eax,r8d
   14002532c:	mov    rbx,QWORD PTR [rsp+0x40]
   140025331:	add    rsp,0x20
   140025335:	pop    rdi
   140025336:	ret    
   140025337:	cmp    r9b,0x80
   14002533b:	jb     0x14002541c
   140025341:	mov    rax,QWORD PTR [rcx+0x8]
   140025345:	mov    rcx,QWORD PTR [rax+0x10]
   140025349:	movzx  r8d,BYTE PTR [rcx+0xa0]
   140025351:	mov    rsi,QWORD PTR [rcx+r8*8]
   140025355:	cmp    r8b,0x10
   140025359:	jb     0x1400253f8
   14002535f:	movzx  edx,r9b
   140025363:	mov    rcx,rsi
   140025366:	call   0x140018ca0
   14002536b:	test   al,al
   14002536d:	jne    0x14002539e
   14002536f:	mov    rdx,QWORD PTR [rbx+0x10]
   140025373:	cmp    rdx,QWORD PTR [rbx+0x18]
   140025377:	ja     0x1400253ac
   140025379:	xor    r9d,r9d
   14002537c:	dec    rdx
   14002537f:	mov    rcx,rsi
   140025382:	lea    r8d,[r9+0x1]
   140025386:	call   0x140016140
   14002538b:	mov    rsi,QWORD PTR [rsp+0x38]
   140025390:	mov    r8d,eax
   140025393:	mov    rbx,QWORD PTR [rsp+0x40]
   140025398:	add    rsp,0x20
   14002539c:	pop    rdi
   14002539d:	ret    
   14002539e:	mov    rdx,QWORD PTR [rbx+0x10]
   1400253a2:	lea    rax,[rdx+0x1]
   1400253a6:	cmp    rax,QWORD PTR [rbx+0x18]
   1400253aa:	jbe    0x1400253cf
   1400253ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400253b1:	mov    DWORD PTR [rdi],0xb
   1400253b7:	mov    rax,QWORD PTR [rbx+0x18]
   1400253bb:	mov    QWORD PTR [rbx+0x10],rax
   1400253bf:	mov    eax,0xffff
   1400253c4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400253c9:	add    rsp,0x20
   1400253cd:	pop    rdi
   1400253ce:	ret    
   1400253cf:	xor    r9d,r9d
   1400253d2:	dec    rdx
   1400253d5:	mov    rcx,rsi
   1400253d8:	lea    r8d,[r9+0x2]
   1400253dc:	call   0x140016140
   1400253e1:	inc    QWORD PTR [rbx+0x10]
   1400253e5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400253ea:	mov    r8d,eax
   1400253ed:	mov    rbx,QWORD PTR [rsp+0x40]
   1400253f2:	add    rsp,0x20
   1400253f6:	pop    rdi
   1400253f7:	ret    
   1400253f8:	mov    rax,QWORD PTR [rsi+0x40]
   1400253fc:	mov    rsi,QWORD PTR [rsp+0x38]
   140025401:	movzx  ecx,r9b
   140025405:	movzx  r8d,WORD PTR [rax+rcx*4]
   14002540a:	mov    eax,r8d
   14002540d:	mov    rbx,QWORD PTR [rsp+0x40]
   140025412:	add    rsp,0x20
   140025416:	pop    rdi
   140025417:	ret    
   140025418:	movzx  r8d,r9b
   14002541c:	mov    rsi,QWORD PTR [rsp+0x38]
   140025421:	mov    rbx,QWORD PTR [rsp+0x40]
   140025426:	mov    eax,r8d
   140025429:	add    rsp,0x20
   14002542d:	pop    rdi
   14002542e:	ret    
   14002542f:	int3   
   140025430:	mov    QWORD PTR [rsp+0x18],rbx
   140025435:	push   rbp
   140025436:	push   rsi
   140025437:	push   rdi
   140025438:	push   r12
   14002543a:	push   r13
   14002543c:	push   r14
   14002543e:	push   r15
   140025440:	sub    rsp,0x20
   140025444:	mov    rbx,QWORD PTR [rcx+0x10]
   140025448:	xor    r15d,r15d
   14002544b:	xor    r13b,r13b
   14002544e:	cmp    DWORD PTR [rdx],r15d
   140025451:	mov    r12,rdx
   140025454:	mov    rsi,rcx
   140025457:	mov    QWORD PTR [rsp+0x68],rbx
   14002545c:	jg     0x1400255f4
   140025462:	mov    edi,0xfffe
   140025467:	nop    WORD PTR [rax+rax*1+0x0]
   140025470:	mov    r14,QWORD PTR [rsi+0x18]
   140025474:	mov    rbp,QWORD PTR [rsi+0x10]
   140025478:	cmp    r14,rbp
   14002547b:	jbe    0x1400255a7
   140025481:	mov    rax,QWORD PTR [rsi+0x20]
   140025485:	cmp    QWORD PTR [rsi+0x28],rax
   140025489:	jbe    0x1400255a7
   14002548f:	mov    rdx,QWORD PTR [rsi+0x8]
   140025493:	movzx  eax,BYTE PTR [rdx+0x40]
   140025497:	test   al,al
   140025499:	je     0x14002553b
   14002549f:	movsx  rdi,al
   1400254a3:	mov    rbx,r14
   1400254a6:	mov    eax,0x3
   1400254ab:	sub    rax,rdi
   1400254ae:	sub    rbx,rbp
   1400254b1:	lea    rcx,[rsp+0x60]
   1400254b6:	cmp    rax,rbx
   1400254b9:	mov    r8,rdi
   1400254bc:	cmovb  rbx,rax
   1400254c0:	add    rdx,0x41
   1400254c4:	call   0x14002b9a0
   1400254c9:	lea    rcx,[rsp+rdi*1+0x60]
   1400254ce:	mov    r8,rbx
   1400254d1:	mov    rdx,rbp
   1400254d4:	call   0x14002b9a0
   1400254d9:	lea    rax,[rsp+0x60]
   1400254de:	mov    rdx,r12
   1400254e1:	mov    QWORD PTR [rsi+0x10],rax
   1400254e5:	lea    rax,[rbx+rdi*1]
   1400254e9:	lea    r15,[rsp+0x60]
   1400254ee:	lea    rcx,[rsp+rax*1+0x60]
   1400254f3:	lea    r13d,[rbx+rdi*1]
   1400254f7:	mov    QWORD PTR [rsi+0x18],rcx
   1400254fb:	mov    rcx,rsi
   1400254fe:	call   0x1400250c0
   140025503:	mov    rcx,rbp
   140025506:	mov    QWORD PTR [rsi+0x18],r14
   14002550a:	sub    rcx,rdi
   14002550d:	mov    r11d,eax
   140025510:	lea    rax,[rsp+0x60]
   140025515:	sub    rcx,rax
   140025518:	add    QWORD PTR [rsi+0x10],rcx
   14002551c:	cmp    DWORD PTR [r12],0xb
   140025521:	je     0x1400255cc
   140025527:	mov    rcx,QWORD PTR [rsi+0x8]
   14002552b:	mov    rbx,QWORD PTR [rsp+0x68]
   140025530:	mov    edi,0xfffe
   140025535:	mov    BYTE PTR [rcx+0x40],0x0
   140025539:	jmp    0x140025555
   14002553b:	mov    rdx,r12
   14002553e:	mov    rcx,rsi
   140025541:	mov    r15,rbp
   140025544:	call   0x1400250c0
   140025549:	movzx  r13d,BYTE PTR [rsi+0x10]
   14002554e:	sub    r13b,bpl
   140025551:	mov    r11w,ax
   140025555:	cmp    DWORD PTR [r12],0x0
   14002555a:	jg     0x1400255f4
   140025560:	cmp    r11w,di
   140025564:	jae    0x140025587
   140025566:	mov    rax,QWORD PTR [rsi+0x20]
   14002556a:	mov    WORD PTR [rax],r11w
   14002556e:	mov    rax,QWORD PTR [rsi+0x30]
   140025572:	add    QWORD PTR [rsi+0x20],0x2
   140025577:	test   rax,rax
   14002557a:	je     0x14002559c
   14002557c:	sub    ebp,ebx
   14002557e:	mov    DWORD PTR [rax],ebp
   140025580:	add    QWORD PTR [rsi+0x30],0x4
   140025585:	jmp    0x14002559c
   140025587:	mov    eax,0xc
   14002558c:	cmp    r11w,di
   140025590:	mov    ecx,0xa
   140025595:	cmove  eax,ecx
   140025598:	mov    DWORD PTR [r12],eax
   14002559c:	cmp    DWORD PTR [r12],0x0
   1400255a1:	jle    0x140025470
   1400255a7:	cmp    DWORD PTR [r12],0x0
   1400255ac:	jg     0x1400255f4
   1400255ae:	mov    rax,QWORD PTR [rsi+0x10]
   1400255b2:	cmp    QWORD PTR [rsi+0x18],rax
   1400255b6:	jbe    0x140025624
   1400255b8:	mov    rax,QWORD PTR [rsi+0x20]
   1400255bc:	cmp    QWORD PTR [rsi+0x28],rax
   1400255c0:	ja     0x140025624
   1400255c2:	mov    DWORD PTR [r12],0xf
   1400255ca:	jmp    0x140025624
   1400255cc:	mov    rax,QWORD PTR [rsi+0x8]
   1400255d0:	lea    rdx,[rsp+0x60]
   1400255d5:	movsx  r8,r13b
   1400255d9:	mov    BYTE PTR [rax+0x40],r13b
   1400255dd:	mov    rcx,QWORD PTR [rsi+0x8]
   1400255e1:	add    rcx,0x41
   1400255e5:	call   0x14002b9a0
   1400255ea:	mov    r11,QWORD PTR [rsi+0x18]
   1400255ee:	mov    QWORD PTR [rsi+0x10],r11
   1400255f2:	jmp    0x14002561c
   1400255f4:	mov    rax,QWORD PTR [rsi+0x8]
   1400255f8:	mov    BYTE PTR [rax+0x40],r13b
   1400255fc:	test   r13b,r13b
   1400255ff:	jle    0x140025615
   140025601:	mov    rcx,QWORD PTR [rsi+0x8]
   140025605:	movsx  r8,r13b
   140025609:	mov    rdx,r15
   14002560c:	add    rcx,0x41
   140025610:	call   0x14002b9a0
   140025615:	cmp    DWORD PTR [r12],0xb
   14002561a:	jne    0x140025624
   14002561c:	mov    DWORD PTR [r12],0x0
   140025624:	mov    rbx,QWORD PTR [rsp+0x70]
   140025629:	add    rsp,0x20
   14002562d:	pop    r15
   14002562f:	pop    r14
   140025631:	pop    r13
   140025633:	pop    r12
   140025635:	pop    rdi
   140025636:	pop    rsi
   140025637:	pop    rbp
   140025638:	ret    
   140025639:	int3   
   14002563a:	int3   
   14002563b:	int3   
   14002563c:	int3   
   14002563d:	int3   
   14002563e:	int3   
   14002563f:	int3   
   140025640:	rex push rbp
   140025642:	push   rdi
   140025643:	push   r12
   140025645:	push   r13
   140025647:	push   r14
   140025649:	sub    rsp,0x150
   140025650:	mov    rax,QWORD PTR [rip+0x41259]        # 0x1400668b0
   140025657:	xor    rax,rsp
   14002565a:	mov    QWORD PTR [rsp+0x130],rax
   140025662:	mov    rbp,rcx
   140025665:	mov    ecx,0xa8
   14002566a:	movzx  r14d,r9b
   14002566e:	mov    rdi,r8
   140025671:	mov    r13,rdx
   140025674:	call   0x140010940
   140025679:	mov    r12,rax
   14002567c:	mov    QWORD PTR [rbp+0x10],rax
   140025680:	test   rax,rax
   140025683:	je     0x1400257bc
   140025689:	xor    eax,eax
   14002568b:	xor    edx,edx
   14002568d:	mov    r8d,0xa8
   140025693:	mov    rcx,r12
   140025696:	mov    QWORD PTR [rsp+0x198],rbx
   14002569e:	mov    DWORD PTR [rsp+0x20],0x28
   1400256a6:	mov    DWORD PTR [rsp+0x24],eax
   1400256aa:	mov    DWORD PTR [rsp+0x28],eax
   1400256ae:	mov    DWORD PTR [rsp+0x2c],eax
   1400256b2:	mov    DWORD PTR [rsp+0x30],eax
   1400256b6:	mov    DWORD PTR [rsp+0x34],eax
   1400256ba:	mov    DWORD PTR [rsp+0x38],eax
   1400256be:	mov    DWORD PTR [rsp+0x3c],eax
   1400256c2:	mov    DWORD PTR [rsp+0x40],eax
   1400256c6:	mov    DWORD PTR [rsp+0x44],eax
   1400256ca:	mov    QWORD PTR [rsp+0x140],r15
   1400256d2:	call   0x14002b280
   1400256d7:	movzx  eax,BYTE PTR [r13+0x8]
   1400256dc:	mov    BYTE PTR [rsp+0x28],al
   1400256e0:	xor    bl,bl
   1400256e2:	lea    r15,[rip+0x26f37]        # 0x14004c620
   1400256e9:	mov    QWORD PTR [rsp+0x148],rsi
   1400256f1:	cmp    DWORD PTR [rdi],0x0
   1400256f4:	jg     0x140025780
   1400256fa:	movzx  esi,bl
   1400256fd:	mov    rcx,QWORD PTR [r15+rsi*8]
   140025701:	test   rcx,rcx
   140025704:	je     0x14002571c
   140025706:	lea    r8,[rsp+0x20]
   14002570b:	lea    rdx,[rsp+0x50]
   140025710:	mov    r9,rdi
   140025713:	call   0x140011fb0
   140025718:	mov    QWORD PTR [r12+rsi*8],rax
   14002571c:	inc    bl
   14002571e:	cmp    bl,0x13
   140025721:	jbe    0x1400256f1
   140025723:	cmp    DWORD PTR [rdi],0x0
   140025726:	jg     0x140025780
   140025728:	cmp    BYTE PTR [r13+0x8],0x0
   14002572d:	jne    0x140025780
   14002572f:	mov    BYTE PTR [r12+0xa0],r14b
   140025737:	mov    rcx,QWORD PTR [r13+0x20]
   14002573b:	call   0x140024360
   140025740:	mov    BYTE PTR [r12+0xa1],al
   140025748:	mov    rsi,QWORD PTR [rsp+0x148]
   140025750:	mov    rbx,QWORD PTR [rsp+0x198]
   140025758:	mov    r15,QWORD PTR [rsp+0x140]
   140025760:	mov    rcx,QWORD PTR [rsp+0x130]
   140025768:	xor    rcx,rsp
   14002576b:	call   0x14002b250
   140025770:	add    rsp,0x150
   140025777:	pop    r14
   140025779:	pop    r13
   14002577b:	pop    r12
   14002577d:	pop    rdi
   14002577e:	pop    rbp
   14002577f:	ret    
   140025780:	mov    rbx,QWORD PTR [rbp+0x10]
   140025784:	test   rbx,rbx
   140025787:	je     0x140025748
   140025789:	mov    edi,0x14
   14002578e:	xchg   ax,ax
   140025790:	mov    rcx,QWORD PTR [rbx]
   140025793:	test   rcx,rcx
   140025796:	je     0x14002579d
   140025798:	call   0x140011690
   14002579d:	add    rbx,0x8
   1400257a1:	sub    rdi,0x1
   1400257a5:	jne    0x140025790
   1400257a7:	cmp    BYTE PTR [rbp+0x3e],dil
   1400257ab:	jne    0x140025748
   1400257ad:	mov    rcx,QWORD PTR [rbp+0x10]
   1400257b1:	call   0x140010a40
   1400257b6:	mov    QWORD PTR [rbp+0x10],rdi
   1400257ba:	jmp    0x140025748
   1400257bc:	mov    DWORD PTR [rdi],0x7
   1400257c2:	jmp    0x140025760
   1400257c4:	int3   
   1400257c5:	int3   
   1400257c6:	int3   
   1400257c7:	int3   
   1400257c8:	int3   
   1400257c9:	int3   
   1400257ca:	int3   
   1400257cb:	int3   
   1400257cc:	int3   
   1400257cd:	int3   
   1400257ce:	int3   
   1400257cf:	int3   
   1400257d0:	mov    r9b,0x1
   1400257d3:	jmp    0x140025640
   1400257d8:	int3   
   1400257d9:	int3   
   1400257da:	int3   
   1400257db:	int3   
   1400257dc:	int3   
   1400257dd:	int3   
   1400257de:	int3   
   1400257df:	int3   
   1400257e0:	mov    r9b,0x2
   1400257e3:	jmp    0x140025640
   1400257e8:	int3   
   1400257e9:	int3   
   1400257ea:	int3   
   1400257eb:	int3   
   1400257ec:	int3   
   1400257ed:	int3   
   1400257ee:	int3   
   1400257ef:	int3   
   1400257f0:	mov    r9b,0x3
   1400257f3:	jmp    0x140025640
   1400257f8:	int3   
   1400257f9:	int3   
   1400257fa:	int3   
   1400257fb:	int3   
   1400257fc:	int3   
   1400257fd:	int3   
   1400257fe:	int3   
   1400257ff:	int3   
   140025800:	mov    r9b,0x4
   140025803:	jmp    0x140025640
   140025808:	int3   
   140025809:	int3   
   14002580a:	int3   
   14002580b:	int3   
   14002580c:	int3   
   14002580d:	int3   
   14002580e:	int3   
   14002580f:	int3   
   140025810:	mov    r9b,0x5
   140025813:	jmp    0x140025640
   140025818:	int3   
   140025819:	int3   
   14002581a:	int3   
   14002581b:	int3   
   14002581c:	int3   
   14002581d:	int3   
   14002581e:	int3   
   14002581f:	int3   
   140025820:	mov    r9b,0x6
   140025823:	jmp    0x140025640
   140025828:	int3   
   140025829:	int3   
   14002582a:	int3   
   14002582b:	int3   
   14002582c:	int3   
   14002582d:	int3   
   14002582e:	int3   
   14002582f:	int3   
   140025830:	mov    r9b,0x8
   140025833:	jmp    0x140025640
   140025838:	int3   
   140025839:	int3   
   14002583a:	int3   
   14002583b:	int3   
   14002583c:	int3   
   14002583d:	int3   
   14002583e:	int3   
   14002583f:	int3   
   140025840:	mov    r9b,0xb
   140025843:	jmp    0x140025640
   140025848:	int3   
   140025849:	int3   
   14002584a:	int3   
   14002584b:	int3   
   14002584c:	int3   
   14002584d:	int3   
   14002584e:	int3   
   14002584f:	int3   
   140025850:	mov    r9b,0x10
   140025853:	jmp    0x140025640
   140025858:	int3   
   140025859:	int3   
   14002585a:	int3   
   14002585b:	int3   
   14002585c:	int3   
   14002585d:	int3   
   14002585e:	int3   
   14002585f:	int3   
   140025860:	mov    r9b,0x11
   140025863:	jmp    0x140025640
   140025868:	int3   
   140025869:	int3   
   14002586a:	int3   
   14002586b:	int3   
   14002586c:	int3   
   14002586d:	int3   
   14002586e:	int3   
   14002586f:	int3   
   140025870:	mov    r9b,0x12
   140025873:	jmp    0x140025640
   140025878:	int3   
   140025879:	int3   
   14002587a:	int3   
   14002587b:	int3   
   14002587c:	int3   
   14002587d:	int3   
   14002587e:	int3   
   14002587f:	int3   
   140025880:	mov    r9b,0x13
   140025883:	jmp    0x140025640
   140025888:	int3   
   140025889:	int3   
   14002588a:	int3   
   14002588b:	int3   
   14002588c:	int3   
   14002588d:	int3   
   14002588e:	int3   
   14002588f:	int3   
   140025890:	mov    QWORD PTR [rsp+0x10],rsi
   140025895:	push   rdi
   140025896:	sub    rsp,0x20
   14002589a:	mov    rdi,QWORD PTR [rcx+0x10]
   14002589e:	mov    rsi,rcx
   1400258a1:	test   rdi,rdi
   1400258a4:	je     0x1400258ec
   1400258a6:	mov    QWORD PTR [rsp+0x30],rbx
   1400258ab:	xor    ebx,ebx
   1400258ad:	nop    DWORD PTR [rax]
   1400258b0:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400258b4:	test   rcx,rcx
   1400258b7:	je     0x1400258be
   1400258b9:	call   0x140011690
   1400258be:	inc    rbx
   1400258c1:	cmp    rbx,0xa
   1400258c5:	jl     0x1400258b0
   1400258c7:	mov    rcx,QWORD PTR [rdi+0x50]
   1400258cb:	call   0x14000df20
   1400258d0:	cmp    BYTE PTR [rsi+0x3e],0x0
   1400258d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400258d9:	jne    0x1400258ec
   1400258db:	mov    rcx,QWORD PTR [rsi+0x10]
   1400258df:	call   0x140010a40
   1400258e4:	mov    QWORD PTR [rsi+0x10],0x0
   1400258ec:	mov    rsi,QWORD PTR [rsp+0x38]
   1400258f1:	add    rsp,0x20
   1400258f5:	pop    rdi
   1400258f6:	ret    
   1400258f7:	int3   
   1400258f8:	int3   
   1400258f9:	int3   
   1400258fa:	int3   
   1400258fb:	int3   
   1400258fc:	int3   
   1400258fd:	int3   
   1400258fe:	int3   
   1400258ff:	int3   
   140025900:	mov    r8,QWORD PTR [rcx+0x10]
   140025904:	xor    r9d,r9d
   140025907:	cmp    edx,0x1
   14002590a:	jg     0x140025924
   14002590c:	xor    eax,eax
   14002590e:	mov    DWORD PTR [r8+0x5c],eax
   140025912:	mov    WORD PTR [r8+0x60],ax
   140025917:	mov    DWORD PTR [r8+0x68],r9d
   14002591b:	mov    BYTE PTR [r8+0x70],al
   14002591f:	cmp    edx,0x1
   140025922:	je     0x14002592f
   140025924:	xor    eax,eax
   140025926:	mov    DWORD PTR [r8+0x62],eax
   14002592a:	mov    WORD PTR [r8+0x66],ax
   14002592f:	cmp    BYTE PTR [r8+0x8f],0x6b
   140025937:	jne    0x14002598a
   140025939:	cmp    edx,0x1
   14002593c:	jg     0x14002595a
   14002593e:	cmp    DWORD PTR [r8+0x6c],0x1
   140025943:	jne    0x140025955
   140025945:	mov    rax,QWORD PTR [r8+0x50]
   140025949:	mov    DWORD PTR [rax+0x48],r9d
   14002594d:	mov    DWORD PTR [rax+0x4c],r9d
   140025951:	mov    BYTE PTR [rax+0x40],r9b
   140025955:	cmp    edx,0x1
   140025958:	je     0x14002598a
   14002595a:	cmp    BYTE PTR [rcx+0x5b],r9b
   14002595e:	jne    0x140025974
   140025960:	mov    BYTE PTR [rcx+0x5b],0x4
   140025964:	mov    BYTE PTR [rcx+0x68],0x1b
   140025968:	mov    BYTE PTR [rcx+0x69],0x24
   14002596c:	mov    BYTE PTR [rcx+0x6a],0x29
   140025970:	mov    BYTE PTR [rcx+0x6b],0x43
   140025974:	cmp    DWORD PTR [r8+0x6c],0x1
   140025979:	jne    0x14002598a
   14002597b:	mov    rax,QWORD PTR [r8+0x50]
   14002597f:	mov    DWORD PTR [rax+0x54],r9d
   140025983:	mov    DWORD PTR [rax+0x50],0x1
   14002598a:	repz ret 
   14002598c:	int3   
   14002598d:	int3   
   14002598e:	int3   
   14002598f:	int3   
   140025990:	mov    rax,QWORD PTR [rcx+0x10]
   140025994:	test   rax,rax
   140025997:	je     0x14002599e
   140025999:	add    rax,0x71
   14002599d:	ret    
   14002599e:	xor    eax,eax
   1400259a0:	ret    
   1400259a1:	int3   
   1400259a2:	int3   
   1400259a3:	int3   
   1400259a4:	int3   
   1400259a5:	int3   
   1400259a6:	int3   
   1400259a7:	int3   
   1400259a8:	int3   
   1400259a9:	int3   
   1400259aa:	int3   
   1400259ab:	int3   
   1400259ac:	int3   
   1400259ad:	int3   
   1400259ae:	int3   
   1400259af:	int3   
   1400259b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400259b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400259ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400259bf:	push   rdi
   1400259c0:	push   r12
   1400259c2:	push   r13
   1400259c4:	push   r14
   1400259c6:	push   r15
   1400259c8:	sub    rsp,0x20
   1400259cc:	mov    rdi,QWORD PTR [rcx+0x10]
   1400259d0:	movzx  r14d,BYTE PTR [rcx+0x40]
   1400259d5:	xor    r10d,r10d
   1400259d8:	mov    ebx,DWORD PTR [rdi+0x68]
   1400259db:	xor    eax,eax
   1400259dd:	mov    ebp,r9d
   1400259e0:	mov    r13,r8
   1400259e3:	mov    r12,rdx
   1400259e6:	mov    rsi,rcx
   1400259e9:	lea    r15,[rip+0xfffffffffffda610]        # 0x140000000
   1400259f0:	cmp    QWORD PTR [rdx],r8
   1400259f3:	jae    0x140025a76
   1400259f9:	nop    DWORD PTR [rax+0x0]
   140025a00:	mov    rax,QWORD PTR [r12]
   140025a04:	xor    edx,edx
   140025a06:	xor    r9d,r9d
   140025a09:	movzx  ecx,BYTE PTR [rax]
   140025a0c:	inc    rax
   140025a0f:	lea    r8d,[rdx+0x4a]
   140025a13:	mov    QWORD PTR [r12],rax
   140025a17:	movsx  rax,BYTE PTR [rsi+0x40]
   140025a1c:	mov    BYTE PTR [rax+rsi*1+0x41],cl
   140025a20:	inc    BYTE PTR [rsi+0x40]
   140025a23:	movsx  r11d,BYTE PTR [rcx+r15*1+0x4e5e0]
   140025a2c:	test   r11d,r11d
   140025a2f:	je     0x140025a6e
   140025a31:	shl    ebx,0x5
   140025a34:	add    r11d,ebx
   140025a37:	nop    WORD PTR [rax+rax*1+0x0]
   140025a40:	lea    r10d,[r8+rdx*1]
   140025a44:	sar    r10d,1
   140025a47:	cmp    r10d,r9d
   140025a4a:	je     0x140025a6e
   140025a4c:	movsxd rax,r10d
   140025a4f:	mov    ecx,DWORD PTR [r15+rax*4+0x4e6e0]
   140025a57:	cmp    ecx,r11d
   140025a5a:	jle    0x140025a61
   140025a5c:	mov    r8d,r10d
   140025a5f:	jmp    0x140025a66
   140025a61:	jge    0x140025a96
   140025a63:	mov    edx,r10d
   140025a66:	mov    r9d,r10d
   140025a69:	cmp    r8d,edx
   140025a6c:	jne    0x140025a40
   140025a6e:	xor    ebx,ebx
   140025a70:	xor    r10d,r10d
   140025a73:	or     eax,0xffffffff
   140025a76:	mov    DWORD PTR [rdi+0x68],ebx
   140025a79:	test   eax,eax
   140025a7b:	je     0x140025b8e
   140025a81:	cmp    eax,0xffffffff
   140025a84:	jne    0x140025ac9
   140025a86:	mov    rax,QWORD PTR [rsp+0x70]
   140025a8b:	mov    DWORD PTR [rax],0x12
   140025a91:	jmp    0x140025c12
   140025a96:	movsxd rax,r10d
   140025a99:	mov    ebx,r11d
   140025a9c:	movsx  eax,BYTE PTR [rax+r15*1+0x4e830]
   140025aa5:	cmp    eax,0xffffffff
   140025aa8:	je     0x140025a76
   140025aaa:	cmp    eax,0x1
   140025aad:	je     0x140025ac5
   140025aaf:	cmp    eax,0x2
   140025ab2:	je     0x140025ac0
   140025ab4:	cmp    QWORD PTR [r12],r13
   140025ab8:	jb     0x140025a00
   140025abe:	jmp    0x140025a76
   140025ac0:	mov    eax,0x1
   140025ac5:	xor    ebx,ebx
   140025ac7:	jmp    0x140025a76
   140025ac9:	sub    ebp,0x1
   140025acc:	je     0x140025bab
   140025ad2:	sub    ebp,0x1
   140025ad5:	je     0x140025b73
   140025adb:	cmp    ebp,0x1
   140025ade:	je     0x140025af0
   140025ae0:	mov    rax,QWORD PTR [rsp+0x70]
   140025ae5:	mov    DWORD PTR [rax],0x12
   140025aeb:	jmp    0x140025c12
   140025af0:	movsxd rax,r10d
   140025af3:	movsx  edx,BYTE PTR [rax+r15*1+0x4e8d0]
   140025afc:	lea    eax,[rdx+0x1]
   140025aff:	cmp    eax,0x23
   140025b02:	ja     0x140025b68
   140025b04:	cdqe   
   140025b06:	movzx  eax,BYTE PTR [r15+rax*1+0x25c98]
   140025b0f:	mov    ecx,DWORD PTR [r15+rax*4+0x25c7c]
   140025b17:	add    rcx,r15
   140025b1a:	jmp    rcx
   140025b1c:	cmp    BYTE PTR [rdi+0x5e],0x0
   140025b20:	je     0x140025a86
   140025b26:	movzx  eax,BYTE PTR [rdi+0x60]
   140025b2a:	cmp    al,0x2
   140025b2c:	jge    0x140025b31
   140025b2e:	mov    BYTE PTR [rdi+0x61],al
   140025b31:	mov    BYTE PTR [rdi+0x60],0x2
   140025b35:	jmp    0x140025be2
   140025b3a:	cmp    BYTE PTR [rdi+0x5f],0x0
   140025b3e:	je     0x140025a86
   140025b44:	movzx  eax,BYTE PTR [rdi+0x60]
   140025b48:	cmp    al,0x2
   140025b4a:	jge    0x140025b4f
   140025b4c:	mov    BYTE PTR [rdi+0x61],al
   140025b4f:	mov    BYTE PTR [rdi+0x60],0x3
   140025b53:	jmp    0x140025be2
   140025b58:	cmp    DWORD PTR [rdi+0x6c],0x0
   140025b5c:	je     0x140025b79
   140025b5e:	mov    BYTE PTR [rdi+0x5d],dl
   140025b61:	jmp    0x140025be2
   140025b63:	mov    BYTE PTR [rdi+0x5e],dl
   140025b66:	jmp    0x140025be2
   140025b68:	cmp    DWORD PTR [rdi+0x6c],0x0
   140025b6c:	je     0x140025b79
   140025b6e:	mov    BYTE PTR [rdi+0x5f],dl
   140025b71:	jmp    0x140025be2
   140025b73:	cmp    r10d,0x30
   140025b77:	je     0x140025be2
   140025b79:	mov    rax,QWORD PTR [rsp+0x70]
   140025b7e:	mov    DWORD PTR [rax],0x13
   140025b84:	mov    DWORD PTR [rsi+0x11c],0x0
   140025b8e:	mov    rbx,QWORD PTR [rsp+0x50]
   140025b93:	mov    rbp,QWORD PTR [rsp+0x58]
   140025b98:	mov    rsi,QWORD PTR [rsp+0x60]
   140025b9d:	add    rsp,0x20
   140025ba1:	pop    r15
   140025ba3:	pop    r14
   140025ba5:	pop    r13
   140025ba7:	pop    r12
   140025ba9:	pop    rdi
   140025baa:	ret    
   140025bab:	movsxd rax,r10d
   140025bae:	movsx  ecx,BYTE PTR [rax+r15*1+0x4e880]
   140025bb7:	cmp    ecx,0xffffffff
   140025bba:	je     0x140025b79
   140025bbc:	test   ecx,ecx
   140025bbe:	jle    0x140025bce
   140025bc0:	cmp    ecx,0x2
   140025bc3:	jle    0x140025bf3
   140025bc5:	cmp    ecx,0x10
   140025bc8:	je     0x140025b1c
   140025bce:	mov    eax,DWORD PTR [rdi+0x6c]
   140025bd1:	movzx  eax,WORD PTR [r15+rax*2+0x4e5c8]
   140025bda:	bt     eax,ecx
   140025bdd:	jae    0x140025b79
   140025bdf:	mov    BYTE PTR [rdi+0x5c],cl
   140025be2:	mov    rax,QWORD PTR [rsp+0x70]
   140025be7:	mov    ecx,DWORD PTR [rax]
   140025be9:	test   ecx,ecx
   140025beb:	jg     0x140025c0d
   140025bed:	mov    BYTE PTR [rsi+0x40],0x0
   140025bf1:	jmp    0x140025b8e
   140025bf3:	mov    eax,DWORD PTR [rdi+0x6c]
   140025bf6:	movzx  eax,WORD PTR [r15+rax*2+0x4e5c8]
   140025bff:	bt     eax,ecx
   140025c02:	jae    0x140025b79
   140025c08:	mov    BYTE PTR [rdi+0x5e],cl
   140025c0b:	jmp    0x140025be2
   140025c0d:	cmp    ecx,0x12
   140025c10:	jne    0x140025c6e
   140025c12:	movzx  ebx,BYTE PTR [rsi+0x40]
   140025c16:	cmp    bl,0x1
   140025c19:	jle    0x140025b8e
   140025c1f:	lea    ecx,[rbx-0x1]
   140025c22:	sub    bl,r14b
   140025c25:	cmp    cl,bl
   140025c27:	jg     0x140025c3a
   140025c29:	movsx  rax,cl
   140025c2d:	sub    QWORD PTR [r12],rax
   140025c31:	mov    BYTE PTR [rsi+0x40],0x1
   140025c35:	jmp    0x140025b8e
   140025c3a:	movzx  eax,bl
   140025c3d:	lea    rdx,[rsi+0x42]
   140025c41:	sub    al,cl
   140025c43:	lea    rcx,[rsi+0xfa]
   140025c4a:	mov    BYTE PTR [rsi+0x11a],al
   140025c50:	movsx  eax,al
   140025c53:	neg    eax
   140025c55:	movsxd r8,eax
   140025c58:	call   0x14002b9a0
   140025c5d:	movsx  r11,bl
   140025c61:	sub    QWORD PTR [r12],r11
   140025c65:	mov    BYTE PTR [rsi+0x40],0x1
   140025c69:	jmp    0x140025b8e
   140025c6e:	cmp    ecx,0x13
   140025c71:	jne    0x140025b8e
   140025c77:	jmp    0x140025b84
   140025c7c:	jns    0x140025cd9
   140025c7e:	add    al,BYTE PTR [rax]
   140025c80:	pop    rsi
   140025c81:	pop    rbx
   140025c82:	add    al,BYTE PTR [rax]
   140025c84:	pop    rax
   140025c85:	pop    rbx
   140025c86:	add    al,BYTE PTR [rax]
   140025c88:	sbb    al,0x5b
   140025c8a:	add    al,BYTE PTR [rax]
   140025c8c:	cmp    bl,BYTE PTR [rbx+0x2]
   140025c8f:	add    BYTE PTR [rbx+0x5b],ah
   140025c92:	add    al,BYTE PTR [rax]
   140025c94:	push   0x25b
   140025c99:	(bad)  
   140025c9a:	add    DWORD PTR [rdx],eax
   140025c9c:	(bad)  
   140025c9d:	(bad)  
   140025c9e:	(bad)  
   140025c9f:	(bad)  
   140025ca0:	(bad)  
   140025ca1:	(bad)  
   140025ca2:	(bad)  
   140025ca3:	(bad)  
   140025ca4:	(bad)  
   140025ca5:	(bad)  
   140025ca6:	(bad)  
   140025ca7:	(bad)  
   140025ca8:	(bad)  
   140025ca9:	add    eax,DWORD PTR [rsi+rax*1]
   140025cac:	(bad)  
   140025cad:	(bad)  
   140025cae:	(bad)  
   140025caf:	(bad)  
   140025cb0:	(bad)  
   140025cb1:	(bad)  
   140025cb2:	(bad)  
   140025cb3:	(bad)  
   140025cb4:	(bad)  
   140025cb5:	(bad)  
   140025cb6:	(bad)  
   140025cb7:	(bad)  
   140025cb8:	(bad)  
   140025cb9:	(bad)  
   140025cba:	add    DWORD PTR [rip+0xffffffffcccccccc],eax        # 0x10ccf298c
   140025cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140025cc5:	mov    QWORD PTR [rsp+0x10],rbp
   140025cca:	mov    QWORD PTR [rsp+0x18],rsi
   140025ccf:	push   rdi
   140025cd0:	sub    rsp,0x20
   140025cd4:	movsxd rbx,edx
   140025cd7:	movzx  ebp,r9b
   140025cdb:	mov    rsi,r8
   140025cde:	cmp    ebx,0x10000
   140025ce4:	mov    rdi,rcx
   140025ce7:	jl     0x140025cf6
   140025ce9:	test   BYTE PTR [rcx+0x105],0x1
   140025cf0:	je     0x140025ddf
   140025cf6:	mov    r11,QWORD PTR [rcx+0x60]
   140025cfa:	mov    rax,rbx
   140025cfd:	mov    r10,rbx
   140025d00:	sar    r10,0x4
   140025d04:	sar    rax,0xa
   140025d08:	movzx  edx,WORD PTR [r11+rax*2]
   140025d0d:	and    r10d,0x3f
   140025d11:	add    rdx,r10
   140025d14:	mov    r10d,DWORD PTR [r11+rdx*4]
   140025d18:	mov    edx,ebx
   140025d1a:	and    edx,0xf
   140025d1d:	cmp    DWORD PTR [rsp+0x50],0x1
   140025d22:	jne    0x140025d4c
   140025d24:	mov    rax,QWORD PTR [rdi+0xf0]
   140025d2b:	xor    r8d,r8d
   140025d2e:	movzx  ecx,r10w
   140025d32:	shl    ecx,0x4
   140025d35:	add    ecx,edx
   140025d37:	movzx  r9d,WORD PTR [rax+rcx*2]
   140025d3c:	cmp    r9d,0xff
   140025d43:	seta   r8b
   140025d47:	inc    r8d
   140025d4a:	jmp    0x140025d9c
   140025d4c:	movzx  eax,r10w
   140025d50:	shl    eax,0x4
   140025d53:	add    eax,edx
   140025d55:	lea    ecx,[rax+rax*2]
   140025d58:	add    rcx,QWORD PTR [rdi+0xf0]
   140025d5f:	movzx  eax,BYTE PTR [rcx+0x1]
   140025d63:	movzx  r9d,BYTE PTR [rcx]
   140025d67:	shl    r9d,0x8
   140025d6b:	or     r9d,eax
   140025d6e:	movzx  eax,BYTE PTR [rcx+0x2]
   140025d72:	shl    r9d,0x8
   140025d76:	or     r9d,eax
   140025d79:	cmp    r9d,0xff
   140025d80:	ja     0x140025d8a
   140025d82:	mov    r8d,0x1
   140025d88:	jmp    0x140025d9c
   140025d8a:	xor    r8d,r8d
   140025d8d:	cmp    r9d,0xffff
   140025d94:	seta   r8b
   140025d98:	add    r8d,0x2
   140025d9c:	lea    ecx,[rdx+0x10]
   140025d9f:	movzx  edx,cl
   140025da2:	bt     r10d,edx
   140025da6:	jae    0x140025db0
   140025da8:	mov    DWORD PTR [rsi],r9d
   140025dab:	mov    eax,r8d
   140025dae:	jmp    0x140025dfd
   140025db0:	test   bpl,bpl
   140025db3:	jne    0x140025dcf
   140025db5:	lea    eax,[rbx-0xe000]
   140025dbb:	cmp    eax,0x1900
   140025dc0:	jb     0x140025dcf
   140025dc2:	lea    eax,[rbx-0xf0000]
   140025dc8:	cmp    eax,0x20000
   140025dcd:	jae    0x140025ddf
   140025dcf:	test   r9d,r9d
   140025dd2:	je     0x140025ddf
   140025dd4:	neg    r8d
   140025dd7:	mov    DWORD PTR [rsi],r9d
   140025dda:	mov    eax,r8d
   140025ddd:	jmp    0x140025dfd
   140025ddf:	mov    rcx,QWORD PTR [rdi+0x128]
   140025de6:	test   rcx,rcx
   140025de9:	je     0x140025dfb
   140025deb:	movzx  r9d,bpl
   140025def:	mov    r8,rsi
   140025df2:	mov    edx,ebx
   140025df4:	call   0x140029ea0
   140025df9:	jmp    0x140025dfd
   140025dfb:	xor    eax,eax
   140025dfd:	mov    rbx,QWORD PTR [rsp+0x30]
   140025e02:	mov    rbp,QWORD PTR [rsp+0x38]
   140025e07:	mov    rsi,QWORD PTR [rsp+0x40]
   140025e0c:	add    rsp,0x20
   140025e10:	pop    rdi
   140025e11:	ret    
   140025e12:	int3   
   140025e13:	int3   
   140025e14:	int3   
   140025e15:	int3   
   140025e16:	int3   
   140025e17:	int3   
   140025e18:	int3   
   140025e19:	int3   
   140025e1a:	int3   
   140025e1b:	int3   
   140025e1c:	int3   
   140025e1d:	int3   
   140025e1e:	int3   
   140025e1f:	int3   
   140025e20:	cmp    ecx,0x7f
   140025e23:	ja     0x140025e32
   140025e25:	cmp    ecx,0x5c
   140025e28:	je     0x140025e4b
   140025e2a:	cmp    ecx,0x7e
   140025e2d:	je     0x140025e4b
   140025e2f:	mov    eax,ecx
   140025e31:	ret    
   140025e32:	cmp    ecx,0xa5
   140025e38:	jne    0x140025e3e
   140025e3a:	lea    eax,[rcx-0x49]
   140025e3d:	ret    
   140025e3e:	mov    eax,0x7e
   140025e43:	cmp    ecx,0x203e
   140025e49:	je     0x140025e50
   140025e4b:	mov    eax,0xfffe
   140025e50:	repz ret 
   140025e52:	int3   
   140025e53:	int3   
   140025e54:	int3   
   140025e55:	int3   
   140025e56:	int3   
   140025e57:	int3   
   140025e58:	int3   
   140025e59:	int3   
   140025e5a:	int3   
   140025e5b:	int3   
   140025e5c:	int3   
   140025e5d:	int3   
   140025e5e:	int3   
   140025e5f:	int3   
   140025e60:	mov    QWORD PTR [rsp+0x18],rbx
   140025e65:	push   rbp
   140025e66:	push   rsi
   140025e67:	push   rdi
   140025e68:	push   r12
   140025e6a:	push   r13
   140025e6c:	push   r14
   140025e6e:	push   r15
   140025e70:	sub    rsp,0xc0
   140025e77:	mov    rax,QWORD PTR [rip+0x40a32]        # 0x1400668b0
   140025e7e:	xor    rax,rsp
   140025e81:	mov    QWORD PTR [rsp+0xb0],rax
   140025e89:	mov    rdi,QWORD PTR [rcx+0x8]
   140025e8d:	mov    rax,QWORD PTR [rcx+0x30]
   140025e91:	mov    r9,QWORD PTR [rcx+0x20]
   140025e95:	mov    r13,QWORD PTR [rcx+0x28]
   140025e99:	mov    r14,QWORD PTR [rcx+0x18]
   140025e9d:	mov    rbx,QWORD PTR [rcx+0x10]
   140025ea1:	xor    r10d,r10d
   140025ea4:	mov    QWORD PTR [rsp+0x58],rax
   140025ea9:	mov    ebp,DWORD PTR [rdi+0x54]
   140025eac:	mov    r15,QWORD PTR [rdi+0x10]
   140025eb0:	mov    r12,rdx
   140025eb3:	mov    QWORD PTR [rsp+0x80],rdx
   140025ebb:	mov    rsi,rcx
   140025ebe:	mov    QWORD PTR [rsp+0x88],rcx
   140025ec6:	mov    QWORD PTR [rsp+0x68],rdi
   140025ecb:	mov    QWORD PTR [rsp+0x50],r9
   140025ed0:	mov    QWORD PTR [rsp+0x60],r13
   140025ed5:	mov    QWORD PTR [rsp+0x78],r14
   140025eda:	mov    DWORD PTR [rsp+0x44],r10d
   140025edf:	mov    r11d,r10d
   140025ee2:	mov    DWORD PTR [rsp+0x48],r10d
   140025ee7:	lea    r8,[rip+0xfffffffffffda112]        # 0x140000000
   140025eee:	mov    edx,0xfeff
   140025ef3:	test   ebp,ebp
   140025ef5:	je     0x140025f0a
   140025ef7:	cmp    r9,r13
   140025efa:	jb     0x140025f40
   140025efc:	jmp    0x140025f0a
   140025efe:	lea    r8,[rip+0xfffffffffffda0fb]        # 0x140000000
   140025f05:	mov    edx,0xfeff
   140025f0a:	cmp    rbx,r14
   140025f0d:	jae    0x14002681d
   140025f13:	cmp    r9,r13
   140025f16:	jae    0x140026919
   140025f1c:	movzx  ebp,WORD PTR [rbx]
   140025f1f:	add    rbx,0x2
   140025f23:	mov    eax,ebp
   140025f25:	mov    QWORD PTR [rsp+0x70],rbx
   140025f2a:	and    eax,0xfffff800
   140025f2f:	cmp    eax,0xd800
   140025f34:	jne    0x140025f76
   140025f36:	bt     ebp,0xa
   140025f3a:	jb     0x140026812
   140025f40:	cmp    rbx,r14
   140025f43:	jae    0x14002681a
   140025f49:	movzx  ecx,WORD PTR [rbx]
   140025f4c:	mov    eax,ecx
   140025f4e:	and    eax,0xfffffc00
   140025f53:	cmp    eax,0xdc00
   140025f58:	jne    0x140026812
   140025f5e:	add    ebp,0xffff2809
   140025f64:	add    rbx,0x2
   140025f68:	mov    DWORD PTR [rdi+0x54],r10d
   140025f6c:	shl    ebp,0xa
   140025f6f:	mov    QWORD PTR [rsp+0x70],rbx
   140025f74:	add    ebp,ecx
   140025f76:	cmp    ebp,0x20
   140025f79:	jge    0x140025f8f
   140025f7b:	mov    ecx,ebp
   140025f7d:	mov    eax,0x1
   140025f82:	shl    eax,cl
   140025f84:	test   eax,0x800c000
   140025f89:	jne    0x140026812
   140025f8f:	test   r11d,r11d
   140025f92:	jne    0x140026075
   140025f98:	mov    eax,DWORD PTR [r15+0x6c]
   140025f9c:	mov    r11d,r10d
   140025f9f:	movzx  r8d,WORD PTR [r8+rax*2+0x4e5c8]
   140025fa8:	cmp    eax,0x3
   140025fab:	je     0x140025fb4
   140025fad:	cmp    DWORD PTR [r15+0x6c],0x4
   140025fb2:	jne    0x140025fc2
   140025fb4:	mov    BYTE PTR [rsp+0xa0],0x8
   140025fbc:	mov    r11d,0x1
   140025fc2:	movzx  ecx,BYTE PTR [r15+0x62]
   140025fc7:	movsxd rax,r11d
   140025fca:	inc    r11d
   140025fcd:	mov    BYTE PTR [rsp+rax*1+0xa0],cl
   140025fd4:	mov    eax,0x1
   140025fd9:	shl    ax,cl
   140025fdc:	movzx  ecx,BYTE PTR [r15+0x64]
   140025fe1:	not    ax
   140025fe4:	and    ax,dx
   140025fe7:	and    r8w,ax
   140025feb:	test   cl,cl
   140025fed:	je     0x14002600b
   140025fef:	movsxd rax,r11d
   140025ff2:	inc    r11d
   140025ff5:	mov    BYTE PTR [rsp+rax*1+0xa0],cl
   140025ffc:	mov    eax,0x1
   140026001:	shl    ax,cl
   140026004:	not    ax
   140026007:	and    r8w,ax
   14002600b:	movsxd rax,r11d
   14002600e:	lea    rdx,[rip+0x287f3]        # 0x14004e808
   140026015:	lea    rdi,[rip+0x28810]        # 0x14004e82c
   14002601c:	lea    r10,[rsp+rax*1+0xa0]
   140026024:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140026030:	movsx  r9d,BYTE PTR [rdx]
   140026034:	movzx  eax,r8w
   140026038:	mov    ecx,r9d
   14002603b:	bt     eax,ecx
   14002603e:	jae    0x140026058
   140026040:	mov    eax,0x1
   140026045:	mov    BYTE PTR [r10],r9b
   140026048:	inc    r11d
   14002604b:	shl    ax,cl
   14002604e:	inc    r10
   140026051:	not    ax
   140026054:	and    r8w,ax
   140026058:	add    rdx,0x4
   14002605c:	cmp    rdx,rdi
   14002605f:	jl     0x140026030
   140026061:	mov    rdi,QWORD PTR [rsp+0x68]
   140026066:	mov    DWORD PTR [rsp+0x48],r11d
   14002606b:	xor    r10d,r10d
   14002606e:	lea    r8,[rip+0xfffffffffffd9f8b]        # 0x140000000
   140026075:	movzx  edi,BYTE PTR [rdi+0x3f]
   140026079:	movsxd rax,r11d
   14002607c:	xor    r13b,r13b
   14002607f:	xor    r14b,r14b
   140026082:	mov    r12d,r10d
   140026085:	mov    rsi,r10
   140026088:	mov    QWORD PTR [rsp+0x90],rax
   140026090:	movsxd r9,ebp
   140026093:	test   r11d,r11d
   140026096:	jle    0x1400268e5
   14002609c:	nop    DWORD PTR [rax+0x0]
   1400260a0:	test   r12d,r12d
   1400260a3:	jg     0x140026571
   1400260a9:	movsx  rbx,BYTE PTR [rsp+rsi*1+0xa0]
   1400260b2:	mov    rax,rbx
   1400260b5:	cmp    ebx,0x8
   1400260b8:	ja     0x140026422
   1400260be:	mov    ecx,DWORD PTR [r8+rbx*4+0x26994]
   1400260c6:	add    rcx,r8
   1400260c9:	jmp    rcx
   1400260cb:	cmp    ebp,0x7f
   1400260ce:	jg     0x140026557
   1400260d4:	mov    DWORD PTR [rsp+0x44],ebp
   1400260d8:	mov    r12d,0x1
   1400260de:	mov    r14b,bl
   1400260e1:	xor    r13b,r13b
   1400260e4:	jmp    0x140026557
   1400260e9:	lea    eax,[rbp-0xa0]
   1400260ef:	cmp    eax,0x5f
   1400260f2:	ja     0x140026557
   1400260f8:	lea    edx,[rbp-0x80]
   1400260fb:	mov    r12d,0x1
   140026101:	mov    r14b,bl
   140026104:	mov    DWORD PTR [rsp+0x44],edx
   140026108:	mov    r13b,0x2
   14002610b:	jmp    0x140026557
   140026110:	lea    eax,[rbp-0xff61]
   140026116:	cmp    eax,0x3e
   140026119:	ja     0x140026557
   14002611f:	mov    eax,DWORD PTR [r15+0x6c]
   140026123:	cmp    eax,0x3
   140026126:	jne    0x140026148
   140026128:	lea    edx,[rbp-0xff40]
   14002612e:	mov    r12d,0x1
   140026134:	mov    r14b,bl
   140026137:	mov    DWORD PTR [rsp+0x44],edx
   14002613b:	mov    BYTE PTR [r15+0x63],bl
   14002613f:	movzx  r13d,r12b
   140026143:	jmp    0x140026557
   140026148:	cmp    eax,0x4
   14002614b:	jne    0x140026557
   140026151:	lea    r12d,[rax-0x3]
   140026155:	movzx  eax,BYTE PTR [r15+0x62]
   14002615a:	lea    edx,[rbp-0xfec0]
   140026160:	lea    ecx,[rax-0x4]
   140026163:	mov    r14d,eax
   140026166:	mov    eax,0x3
   14002616b:	cmp    cl,0x3
   14002616e:	mov    DWORD PTR [rsp+0x44],edx
   140026172:	cmovbe r14d,eax
   140026176:	xor    r13b,r13b
   140026179:	jmp    0x140026557
   14002617e:	mov    ecx,ebp
   140026180:	call   0x140025e20
   140026185:	mov    DWORD PTR [rsp+0x40],eax
   140026189:	cmp    eax,0x7f
   14002618c:	ja     0x140026557
   140026192:	xor    r13b,r13b
   140026195:	mov    DWORD PTR [rsp+0x44],eax
   140026199:	mov    r12d,0x1
   14002619f:	xor    dil,dil
   1400261a2:	mov    r14b,bl
   1400261a5:	jmp    0x140026557
   1400261aa:	cmp    ebp,0x10000
   1400261b0:	movsx  rax,bl
   1400261b4:	mov    r10,QWORD PTR [r15+rax*8]
   1400261b8:	jl     0x1400261c8
   1400261ba:	test   BYTE PTR [r10+0x105],0x1
   1400261c2:	je     0x140026254
   1400261c8:	mov    rdx,QWORD PTR [r10+0x60]
   1400261cc:	xor    r11d,r11d
   1400261cf:	mov    rax,r9
   1400261d2:	sar    rax,0xa
   1400261d6:	movzx  ecx,WORD PTR [rdx+rax*2]
   1400261da:	mov    rax,r9
   1400261dd:	sar    rax,0x4
   1400261e1:	and    eax,0x3f
   1400261e4:	add    rcx,rax
   1400261e7:	mov    rax,QWORD PTR [r10+0xf0]
   1400261ee:	mov    r8d,DWORD PTR [rdx+rcx*4]
   1400261f2:	mov    edx,ebp
   1400261f4:	and    edx,0xf
   1400261f7:	movzx  ecx,r8w
   1400261fb:	shl    ecx,0x4
   1400261fe:	add    ecx,edx
   140026200:	movzx  r9d,WORD PTR [rax+rcx*2]
   140026205:	lea    ecx,[rdx+0x10]
   140026208:	cmp    r9d,0xff
   14002620f:	movzx  eax,cl
   140026212:	seta   r11b
   140026216:	inc    r11d
   140026219:	bt     r8d,eax
   14002621d:	jae    0x140026226
   14002621f:	mov    DWORD PTR [rsp+0x40],r9d
   140026224:	jmp    0x14002627c
   140026226:	test   dil,dil
   140026229:	jne    0x140026245
   14002622b:	lea    eax,[rbp-0xe000]
   140026231:	cmp    eax,0x1900
   140026236:	jb     0x140026245
   140026238:	lea    eax,[rbp-0xf0000]
   14002623e:	cmp    eax,0x20000
   140026243:	jae    0x140026254
   140026245:	test   r9d,r9d
   140026248:	je     0x140026254
   14002624a:	mov    DWORD PTR [rsp+0x40],r9d
   14002624f:	neg    r11d
   140026252:	jmp    0x14002627c
   140026254:	mov    rcx,QWORD PTR [r10+0x128]
   14002625b:	test   rcx,rcx
   14002625e:	je     0x14002631b
   140026264:	lea    r8,[rsp+0x40]
   140026269:	movzx  r9d,dil
   14002626d:	mov    edx,ebp
   14002626f:	call   0x140029ea0
   140026274:	mov    r9d,DWORD PTR [rsp+0x40]
   140026279:	mov    r11d,eax
   14002627c:	cmp    r11d,0x2
   140026280:	je     0x140026295
   140026282:	cmp    r11d,0xfffffffe
   140026286:	jne    0x14002631b
   14002628c:	test   r12d,r12d
   14002628f:	jne    0x14002654a
   140026295:	cmp    r9d,0xeffc
   14002629c:	jbe    0x1400262ab
   14002629e:	xor    r10d,r10d
   1400262a1:	mov    DWORD PTR [rsp+0x40],r10d
   1400262a6:	jmp    0x14002654d
   1400262ab:	mov    ecx,r9d
   1400262ae:	and    ecx,0xff00
   1400262b4:	cmp    ecx,0x9f00
   1400262ba:	ja     0x1400262c4
   1400262bc:	add    ecx,0xffff9000
   1400262c2:	jmp    0x1400262ca
   1400262c4:	add    ecx,0xffff5000
   1400262ca:	add    ecx,ecx
   1400262cc:	movzx  eax,r9b
   1400262d0:	cmp    r9b,0x9e
   1400262d4:	ja     0x1400262ec
   1400262d6:	add    ecx,0xffffff00
   1400262dc:	cmp    r9b,0x7e
   1400262e0:	ja     0x1400262e7
   1400262e2:	sub    eax,0x1f
   1400262e5:	jmp    0x1400262ef
   1400262e7:	sub    eax,0x20
   1400262ea:	jmp    0x1400262ef
   1400262ec:	sub    eax,0x7e
   1400262ef:	or     ecx,eax
   1400262f1:	movsxd r9,ebp
   1400262f4:	lea    r8,[rip+0xfffffffffffd9d05]        # 0x140000000
   1400262fb:	mov    DWORD PTR [rsp+0x40],ecx
   1400262ff:	test   ecx,ecx
   140026301:	je     0x140026313
   140026303:	xor    r13b,r13b
   140026306:	mov    DWORD PTR [rsp+0x44],ecx
   14002630a:	mov    r12d,r11d
   14002630d:	xor    dil,dil
   140026310:	mov    r14b,bl
   140026313:	xor    r10d,r10d
   140026316:	jmp    0x140026557
   14002631b:	test   r12d,r12d
   14002631e:	jne    0x14002654a
   140026324:	movsxd r9,ebp
   140026327:	lea    r8,[rip+0xfffffffffffd9cd2]        # 0x140000000
   14002632e:	test   dil,dil
   140026331:	je     0x140026313
   140026333:	lea    eax,[rbp-0xff61]
   140026339:	cmp    eax,0x3e
   14002633c:	ja     0x140026313
   14002633e:	movzx  eax,WORD PTR [r8+r9*2+0x2eaae]
   140026347:	xor    r13b,r13b
   14002634a:	xor    dil,dil
   14002634d:	mov    r12d,0xfffffffe
   140026353:	mov    r14b,bl
   140026356:	xor    r10d,r10d
   140026359:	mov    DWORD PTR [rsp+0x44],eax
   14002635d:	jmp    0x140026557
   140026362:	cmp    ebp,0x10000
   140026368:	movsx  rax,bl
   14002636c:	mov    r8,QWORD PTR [r15+rax*8]
   140026370:	jl     0x140026380
   140026372:	test   BYTE PTR [r8+0x105],0x1
   14002637a:	je     0x140026550
   140026380:	mov    rdx,QWORD PTR [r8+0x60]
   140026384:	mov    rax,r9
   140026387:	sar    rax,0xa
   14002638b:	movzx  ecx,WORD PTR [rdx+rax*2]
   14002638f:	mov    rax,r9
   140026392:	sar    rax,0x4
   140026396:	and    eax,0x3f
   140026399:	add    rcx,rax
   14002639c:	mov    rax,r9
   14002639f:	movzx  ecx,WORD PTR [rdx+rcx*2]
   1400263a3:	and    eax,0xf
   1400263a6:	add    rcx,rax
   1400263a9:	mov    rax,QWORD PTR [r8+0xf0]
   1400263b0:	movzx  edx,WORD PTR [rax+rcx*2]
   1400263b4:	cmp    edx,0xf00
   1400263ba:	movzx  r8d,dl
   1400263be:	mov    DWORD PTR [rsp+0x40],r8d
   1400263c3:	jl     0x1400263cc
   1400263c5:	mov    ecx,0x1
   1400263ca:	jmp    0x1400263f9
   1400263cc:	mov    eax,r10d
   1400263cf:	test   dil,dil
   1400263d2:	je     0x1400263dc
   1400263d4:	cmp    edx,0x800
   1400263da:	jmp    0x1400263e2
   1400263dc:	cmp    edx,0xc00
   1400263e2:	setge  al
   1400263e5:	test   eax,eax
   1400263e7:	je     0x140026550
   1400263ed:	or     ecx,0xffffffff
   1400263f0:	test   r12d,r12d
   1400263f3:	jne    0x140026550
   1400263f9:	lea    eax,[r8-0xa0]
   140026400:	cmp    eax,0x5f
   140026403:	ja     0x140026550
   140026409:	lea    eax,[r8-0x80]
   14002640d:	mov    r12d,ecx
   140026410:	mov    r14b,bl
   140026413:	mov    r13b,0x2
   140026416:	xor    dil,dil
   140026419:	mov    DWORD PTR [rsp+0x44],eax
   14002641d:	jmp    0x140026550
   140026422:	cmp    ebp,0x10000
   140026428:	movsx  rax,bl
   14002642c:	mov    r11,QWORD PTR [r15+rax*8]
   140026430:	jl     0x140026440
   140026432:	test   BYTE PTR [r11+0x105],0x1
   14002643a:	je     0x1400264cf
   140026440:	mov    rdx,QWORD PTR [r11+0x60]
   140026444:	mov    rax,r9
   140026447:	sar    rax,0xa
   14002644b:	movzx  ecx,WORD PTR [rdx+rax*2]
   14002644f:	mov    rax,r9
   140026452:	sar    rax,0x4
   140026456:	and    eax,0x3f
   140026459:	add    rcx,rax
   14002645c:	mov    rax,QWORD PTR [r11+0xf0]
   140026463:	mov    r8d,DWORD PTR [rdx+rcx*4]
   140026467:	mov    edx,ebp
   140026469:	and    edx,0xf
   14002646c:	movzx  ecx,r8w
   140026470:	shl    ecx,0x4
   140026473:	add    ecx,edx
   140026475:	movzx  r9d,WORD PTR [rax+rcx*2]
   14002647a:	lea    ecx,[rdx+0x10]
   14002647d:	cmp    r9d,0xff
   140026484:	movzx  eax,cl
   140026487:	seta   r10b
   14002648b:	inc    r10d
   14002648e:	bt     r8d,eax
   140026492:	jae    0x14002649b
   140026494:	mov    DWORD PTR [rsp+0x40],r9d
   140026499:	jmp    0x1400264f3
   14002649b:	test   dil,dil
   14002649e:	jne    0x1400264ba
   1400264a0:	lea    eax,[rbp-0xe000]
   1400264a6:	cmp    eax,0x1900
   1400264ab:	jb     0x1400264ba
   1400264ad:	lea    eax,[rbp-0xf0000]
   1400264b3:	cmp    eax,0x20000
   1400264b8:	jae    0x1400264c9
   1400264ba:	test   r9d,r9d
   1400264bd:	je     0x1400264c9
   1400264bf:	mov    DWORD PTR [rsp+0x40],r9d
   1400264c4:	neg    r10d
   1400264c7:	jmp    0x1400264f3
   1400264c9:	movsxd r9,ebp
   1400264cc:	xor    r10d,r10d
   1400264cf:	mov    rcx,QWORD PTR [r11+0x128]
   1400264d6:	test   rcx,rcx
   1400264d9:	je     0x140026550
   1400264db:	lea    r8,[rsp+0x40]
   1400264e0:	movzx  r9d,dil
   1400264e4:	mov    edx,ebp
   1400264e6:	call   0x140029ea0
   1400264eb:	mov    r9d,DWORD PTR [rsp+0x40]
   1400264f0:	mov    r10d,eax
   1400264f3:	cmp    r10d,0x2
   1400264f7:	je     0x140026504
   1400264f9:	cmp    r10d,0xfffffffe
   1400264fd:	jne    0x14002654a
   1400264ff:	test   r12d,r12d
   140026502:	jne    0x14002654a
   140026504:	cmp    bl,0x7
   140026507:	jne    0x140026539
   140026509:	mov    eax,0x5e5f
   14002650e:	mov    ecx,0x5d5d
   140026513:	add    eax,r9d
   140026516:	cmp    ax,cx
   140026519:	ja     0x14002652c
   14002651b:	lea    eax,[r9+0x5f]
   14002651f:	cmp    al,0x5d
   140026521:	ja     0x14002652c
   140026523:	add    r9d,0xffff7f80
   14002652a:	jmp    0x14002652f
   14002652c:	xor    r9d,r9d
   14002652f:	mov    DWORD PTR [rsp+0x40],r9d
   140026534:	test   r9d,r9d
   140026537:	je     0x14002654a
   140026539:	xor    r13b,r13b
   14002653c:	mov    DWORD PTR [rsp+0x44],r9d
   140026541:	mov    r12d,r10d
   140026544:	xor    dil,dil
   140026547:	mov    r14b,bl
   14002654a:	xor    r10d,r10d
   14002654d:	movsxd r9,ebp
   140026550:	lea    r8,[rip+0xfffffffffffd9aa9]        # 0x140000000
   140026557:	inc    rsi
   14002655a:	cmp    rsi,QWORD PTR [rsp+0x90]
   140026562:	jl     0x1400260a0
   140026568:	test   r12d,r12d
   14002656b:	je     0x1400268e0
   140026571:	jns    0x140026576
   140026573:	neg    r12d
   140026576:	cmp    BYTE PTR [r15+0x66],0x1
   14002657b:	mov    edi,r10d
   14002657e:	jne    0x140026596
   140026580:	test   r13b,r13b
   140026583:	jne    0x140026596
   140026585:	mov    BYTE PTR [rsp+0x98],0xf
   14002658d:	mov    edi,0x1
   140026592:	mov    BYTE PTR [r15+0x66],r13b
   140026596:	movsx  rsi,r13b
   14002659a:	cmp    r14b,BYTE PTR [rsi+r15*1+0x62]
   14002659f:	je     0x1400265e8
   1400265a1:	movsx  rax,r14b
   1400265a5:	lea    rcx,[rip+0xfffffffffffd9a54]        # 0x140000000
   1400265ac:	movsx  rbx,BYTE PTR [rax+r8*1+0x4e958]
   1400265b5:	lea    rax,[rax+rax*2]
   1400265b9:	lea    rdx,[rcx+rax*2+0x4e920]
   1400265c1:	movsxd rax,edi
   1400265c4:	mov    r8,rbx
   1400265c7:	lea    rcx,[rsp+rax*1+0x98]
   1400265cf:	call   0x14002b9a0
   1400265d4:	add    edi,ebx
   1400265d6:	xor    r10d,r10d
   1400265d9:	mov    r11d,r10d
   1400265dc:	mov    DWORD PTR [rsp+0x48],r10d
   1400265e1:	mov    BYTE PTR [rsi+r15*1+0x62],r14b
   1400265e6:	jmp    0x1400265ed
   1400265e8:	mov    r11d,DWORD PTR [rsp+0x48]
   1400265ed:	cmp    r13b,BYTE PTR [r15+0x66]
   1400265f1:	je     0x140026625
   1400265f3:	movsx  ecx,r13b
   1400265f7:	movsxd rax,edi
   1400265fa:	inc    edi
   1400265fc:	sub    ecx,0x1
   1400265ff:	je     0x140026618
   140026601:	mov    BYTE PTR [rsp+rax*1+0x98],0x1b
   140026609:	movsxd rax,edi
   14002660c:	inc    edi
   14002660e:	mov    BYTE PTR [rsp+rax*1+0x98],0x4e
   140026616:	jmp    0x140026625
   140026618:	mov    BYTE PTR [rsp+rax*1+0x98],0xe
   140026620:	mov    BYTE PTR [r15+0x66],0x1
   140026625:	mov    r8d,DWORD PTR [rsp+0x44]
   14002662a:	movsxd rax,edi
   14002662d:	inc    edi
   14002662f:	cmp    r12d,0x1
   140026633:	je     0x140026647
   140026635:	mov    ecx,r8d
   140026638:	shr    ecx,0x8
   14002663b:	mov    BYTE PTR [rsp+rax*1+0x98],cl
   140026642:	movsxd rax,edi
   140026645:	inc    edi
   140026647:	mov    BYTE PTR [rsp+rax*1+0x98],r8b
   14002664f:	cmp    ebp,0xd
   140026652:	je     0x140026659
   140026654:	cmp    ebp,0xa
   140026657:	jne    0x140026666
   140026659:	mov    BYTE PTR [r15+0x64],0x0
   14002665e:	mov    r11d,r10d
   140026661:	mov    DWORD PTR [rsp+0x48],r10d
   140026666:	mov    r9,QWORD PTR [rsp+0x50]
   14002666b:	mov    r13,QWORD PTR [rsp+0x60]
   140026670:	cmp    edi,0x1
   140026673:	jne    0x1400266e1
   140026675:	movzx  eax,BYTE PTR [rsp+0x98]
   14002667d:	mov    rbx,QWORD PTR [rsp+0x70]
   140026682:	mov    rdi,QWORD PTR [rsp+0x68]
   140026687:	mov    rsi,QWORD PTR [rsp+0x88]
   14002668f:	mov    r12,QWORD PTR [rsp+0x80]
   140026697:	mov    r14,QWORD PTR [rsp+0x78]
   14002669c:	mov    BYTE PTR [r9],al
   14002669f:	mov    rcx,QWORD PTR [rsp+0x58]
   1400266a4:	inc    r9
   1400266a7:	mov    QWORD PTR [rsp+0x50],r9
   1400266ac:	lea    r8,[rip+0xfffffffffffd994d]        # 0x140000000
   1400266b3:	mov    edx,0xfeff
   1400266b8:	test   rcx,rcx
   1400266bb:	je     0x140025f0a
   1400266c1:	mov    rax,rbx
   1400266c4:	lea    r8,[rip+0xfffffffffffd9935]        # 0x140000000
   1400266cb:	sub    rax,QWORD PTR [rsi+0x10]
   1400266cf:	sar    rax,1
   1400266d2:	dec    eax
   1400266d4:	mov    DWORD PTR [rcx],eax
   1400266d6:	add    QWORD PTR [rsp+0x58],0x4
   1400266dc:	jmp    0x140025f0a
   1400266e1:	cmp    edi,0x2
   1400266e4:	jne    0x140026782
   1400266ea:	lea    rax,[r9+0x2]
   1400266ee:	cmp    rax,r13
   1400266f1:	ja     0x140026782
   1400266f7:	movzx  eax,BYTE PTR [rsp+0x98]
   1400266ff:	mov    rbx,QWORD PTR [rsp+0x70]
   140026704:	mov    rdi,QWORD PTR [rsp+0x68]
   140026709:	mov    rsi,QWORD PTR [rsp+0x88]
   140026711:	mov    r12,QWORD PTR [rsp+0x80]
   140026719:	mov    r14,QWORD PTR [rsp+0x78]
   14002671e:	mov    BYTE PTR [r9],al
   140026721:	movzx  eax,BYTE PTR [rsp+0x99]
   140026729:	add    r9,0x2
   14002672d:	mov    BYTE PTR [r9-0x1],al
   140026731:	mov    rdx,QWORD PTR [rsp+0x58]
   140026736:	mov    QWORD PTR [rsp+0x50],r9
   14002673b:	lea    r8,[rip+0xfffffffffffd98be]        # 0x140000000
   140026742:	test   rdx,rdx
   140026745:	je     0x140025f05
   14002674b:	mov    eax,r10d
   14002674e:	mov    rcx,rbx
   140026751:	sub    rcx,QWORD PTR [rsi+0x10]
   140026755:	sar    rcx,1
   140026758:	cmp    ebp,0xffff
   14002675e:	seta   al
   140026761:	inc    eax
   140026763:	sub    ecx,eax
   140026765:	mov    DWORD PTR [rdx],ecx
   140026767:	mov    rax,QWORD PTR [rsp+0x58]
   14002676c:	add    rax,0x4
   140026770:	mov    QWORD PTR [rsp+0x58],rax
   140026775:	mov    DWORD PTR [rax],ecx
   140026777:	add    QWORD PTR [rsp+0x58],0x4
   14002677d:	jmp    0x140025efe
   140026782:	mov    rbx,QWORD PTR [rsp+0x70]
   140026787:	mov    rsi,QWORD PTR [rsp+0x88]
   14002678f:	mov    r12,QWORD PTR [rsp+0x80]
   140026797:	mov    eax,r10d
   14002679a:	mov    QWORD PTR [rsp+0x38],r12
   14002679f:	mov    r8d,edi
   1400267a2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400267a7:	mov    QWORD PTR [rsp+0x50],r9
   1400267ac:	mov    rcx,rbx
   1400267af:	sub    rcx,QWORD PTR [rsi+0x10]
   1400267b3:	lea    r9,[rsp+0x50]
   1400267b8:	lea    rdx,[rsp+0x98]
   1400267c0:	sar    rcx,1
   1400267c3:	cmp    ebp,0xffff
   1400267c9:	seta   al
   1400267cc:	inc    eax
   1400267ce:	sub    ecx,eax
   1400267d0:	lea    rax,[rsp+0x58]
   1400267d5:	mov    DWORD PTR [rsp+0x30],ecx
   1400267d9:	mov    QWORD PTR [rsp+0x28],rax
   1400267de:	mov    rcx,rdi
   1400267e1:	mov    QWORD PTR [rsp+0x20],r13
   1400267e6:	call   0x14002a710
   1400267eb:	cmp    DWORD PTR [r12],0x0
   1400267f0:	mov    r9,QWORD PTR [rsp+0x50]
   1400267f5:	mov    QWORD PTR [rsp+0x50],r9
   1400267fa:	jg     0x140026960
   140026800:	mov    r11d,DWORD PTR [rsp+0x48]
   140026805:	mov    r14,QWORD PTR [rsp+0x78]
   14002680a:	xor    r10d,r10d
   14002680d:	jmp    0x140025efe
   140026812:	mov    DWORD PTR [r12],0xc
   14002681a:	mov    DWORD PTR [rdi+0x54],ebp
   14002681d:	cmp    DWORD PTR [r12],0x0
   140026822:	jg     0x140026960
   140026828:	movzx  eax,BYTE PTR [r15+0x66]
   14002682d:	test   al,al
   14002682f:	jne    0x14002683b
   140026831:	cmp    BYTE PTR [r15+0x62],al
   140026835:	je     0x140026960
   14002683b:	cmp    BYTE PTR [rsi+0x2],0x0
   14002683f:	je     0x140026960
   140026845:	cmp    rbx,r14
   140026848:	jb     0x140026960
   14002684e:	cmp    DWORD PTR [rdi+0x54],0x0
   140026852:	jne    0x140026960
   140026858:	test   al,al
   14002685a:	je     0x14002686f
   14002685c:	mov    BYTE PTR [rsp+0x98],0xf
   140026864:	mov    r10d,0x1
   14002686a:	mov    BYTE PTR [r15+0x66],0x0
   14002686f:	cmp    BYTE PTR [r15+0x62],0x0
   140026874:	je     0x14002689f
   140026876:	movzx  eax,WORD PTR [rip+0x280a3]        # 0x14004e920
   14002687d:	movsxd rcx,r10d
   140026880:	add    r10d,0x3
   140026884:	mov    WORD PTR [rsp+rcx*1+0x98],ax
   14002688c:	movzx  eax,BYTE PTR [rip+0x2808f]        # 0x14004e922
   140026893:	mov    BYTE PTR [rsp+rcx*1+0x9a],al
   14002689a:	mov    BYTE PTR [r15+0x62],0x0
   14002689f:	mov    rdx,QWORD PTR [rsi+0x10]
   1400268a3:	mov    rcx,rbx
   1400268a6:	sub    rcx,rdx
   1400268a9:	sar    rcx,1
   1400268ac:	test   ecx,ecx
   1400268ae:	jle    0x140026923
   1400268b0:	dec    ecx
   1400268b2:	movsxd r8,ecx
   1400268b5:	movzx  eax,WORD PTR [rdx+r8*2]
   1400268ba:	and    eax,0xfffffc00
   1400268bf:	cmp    eax,0xdc00
   1400268c4:	jne    0x140026926
   1400268c6:	test   ecx,ecx
   1400268c8:	je     0x1400268dc
   1400268ca:	movzx  eax,WORD PTR [rdx+r8*2-0x2]
   1400268d0:	and    eax,0xfffffc00
   1400268d5:	cmp    eax,0xd800
   1400268da:	jne    0x140026926
   1400268dc:	dec    ecx
   1400268de:	jmp    0x140026926
   1400268e0:	mov    rbx,QWORD PTR [rsp+0x70]
   1400268e5:	mov    r12,QWORD PTR [rsp+0x80]
   1400268ed:	mov    rdi,QWORD PTR [rsp+0x68]
   1400268f2:	mov    r9,QWORD PTR [rsp+0x50]
   1400268f7:	mov    rsi,QWORD PTR [rsp+0x88]
   1400268ff:	mov    r13,QWORD PTR [rsp+0x60]
   140026904:	mov    r14,QWORD PTR [rsp+0x78]
   140026909:	mov    DWORD PTR [r12],0xa
   140026911:	mov    DWORD PTR [rdi+0x54],ebp
   140026914:	jmp    0x14002681d
   140026919:	mov    DWORD PTR [r12],0xf
   140026921:	jmp    0x140026960
   140026923:	or     ecx,0xffffffff
   140026926:	mov    QWORD PTR [rsp+0x38],r12
   14002692b:	mov    DWORD PTR [rsp+0x30],ecx
   14002692f:	lea    rax,[rsp+0x58]
   140026934:	mov    QWORD PTR [rsp+0x60],r9
   140026939:	mov    QWORD PTR [rsp+0x28],rax
   14002693e:	lea    rdx,[rsp+0x98]
   140026946:	lea    r9,[rsp+0x60]
   14002694b:	mov    r8d,r10d
   14002694e:	mov    rcx,rdi
   140026951:	mov    QWORD PTR [rsp+0x20],r13
   140026956:	call   0x14002a710
   14002695b:	mov    r9,QWORD PTR [rsp+0x60]
   140026960:	mov    QWORD PTR [rsi+0x10],rbx
   140026964:	mov    QWORD PTR [rsi+0x20],r9
   140026968:	mov    rcx,QWORD PTR [rsp+0xb0]
   140026970:	xor    rcx,rsp
   140026973:	call   0x14002b250
   140026978:	mov    rbx,QWORD PTR [rsp+0x110]
   140026980:	add    rsp,0xc0
   140026987:	pop    r15
   140026989:	pop    r14
   14002698b:	pop    r13
   14002698d:	pop    r12
   14002698f:	pop    rdi
   140026990:	pop    rsi
   140026991:	pop    rbp
   140026992:	ret    
   140026993:	nop
   140026994:	retf   
   140026995:	(bad)  
   140026996:	add    al,BYTE PTR [rax]
   140026998:	jmp    0x1a2026bfd
   14002699d:	movsxd eax,DWORD PTR [rdx]
   14002699f:	add    BYTE PTR [rsi+0x61],bh
   1400269a2:	add    al,BYTE PTR [rax]
   1400269a4:	stos   BYTE PTR es:[rdi],al
   1400269a5:	(bad)  
   1400269a6:	add    al,BYTE PTR [rax]
   1400269a8:	and    ah,BYTE PTR [rdx+rax*1+0x0]
   1400269ac:	and    ah,BYTE PTR [rdx+rax*1+0x0]
   1400269b0:	and    ah,BYTE PTR [rdx+rax*1+0x0]
   1400269b4:	adc    BYTE PTR [rcx+0x2],ah
   1400269b7:	add    ah,cl
   1400269b9:	int3   
   1400269ba:	int3   
   1400269bb:	int3   
   1400269bc:	int3   
   1400269bd:	int3   
   1400269be:	int3   
   1400269bf:	int3   
   1400269c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400269c5:	push   rbp
   1400269c6:	push   rsi
   1400269c7:	push   rdi
   1400269c8:	push   r12
   1400269ca:	push   r13
   1400269cc:	push   r14
   1400269ce:	push   r15
   1400269d0:	sub    rsp,0x30
   1400269d4:	mov    rax,QWORD PTR [rcx+0x8]
   1400269d8:	mov    r12,QWORD PTR [rcx+0x10]
   1400269dc:	mov    rbp,QWORD PTR [rcx+0x20]
   1400269e0:	mov    rsi,QWORD PTR [rax+0x10]
   1400269e4:	mov    r14,QWORD PTR [rcx+0x18]
   1400269e8:	mov    r15,rdx
   1400269eb:	cmp    DWORD PTR [rsi+0x68],0x0
   1400269ef:	mov    r13,rcx
   1400269f2:	mov    QWORD PTR [rsp+0x80],r12
   1400269fa:	mov    edx,0x1
   1400269ff:	mov    edi,0x3ff
   140026a04:	jne    0x140026a40
   140026a06:	cmp    BYTE PTR [rax+0x40],dl
   140026a09:	jne    0x140026ac5
   140026a0f:	cmp    r12,r14
   140026a12:	jae    0x140026eb9
   140026a18:	cmp    rbp,QWORD PTR [rcx+0x28]
   140026a1c:	jae    0x140026ac5
   140026a22:	movzx  ebx,BYTE PTR [rax+0x41]
   140026a26:	mov    BYTE PTR [rax+0x40],0x0
   140026a2a:	movsx  rax,BYTE PTR [rsi+0x60]
   140026a2f:	movsx  r10d,BYTE PTR [rax+rsi*1+0x5c]
   140026a35:	mov    r8d,0xffff
   140026a3b:	jmp    0x140026bcd
   140026a40:	mov    rcx,QWORD PTR [r13+0x8]
   140026a44:	mov    r9d,edx
   140026a47:	lea    rdx,[rsp+0x80]
   140026a4f:	movzx  edi,BYTE PTR [rcx+0x40]
   140026a53:	mov    r8,r14
   140026a56:	mov    rbx,r12
   140026a59:	mov    QWORD PTR [rsp+0x20],r15
   140026a5e:	call   0x1400259b0
   140026a63:	cmp    DWORD PTR [rsi+0x6c],0x0
   140026a67:	mov    r12,QWORD PTR [rsp+0x80]
   140026a6f:	jne    0x140026aac
   140026a71:	cmp    DWORD PTR [rsi+0x68],0x0
   140026a75:	jne    0x140026aac
   140026a77:	cmp    DWORD PTR [r15],0x0
   140026a7b:	jg     0x140026ec3
   140026a81:	cmp    BYTE PTR [rsi+0x70],0x0
   140026a85:	je     0x140026aac
   140026a87:	mov    DWORD PTR [r15],0x12
   140026a8e:	mov    rax,QWORD PTR [r13+0x8]
   140026a92:	movzx  ecx,r12b
   140026a96:	mov    DWORD PTR [rax+0x11c],0x2
   140026aa0:	mov    rax,QWORD PTR [r13+0x8]
   140026aa4:	sub    cl,bl
   140026aa6:	add    cl,dil
   140026aa9:	mov    BYTE PTR [rax+0x40],cl
   140026aac:	cmp    DWORD PTR [r15],0x0
   140026ab0:	jg     0x140026ec3
   140026ab6:	cmp    DWORD PTR [rsi+0x68],0x0
   140026aba:	mov    edi,0x3ff
   140026abf:	jne    0x140026ac5
   140026ac1:	mov    BYTE PTR [rsi+0x70],0x1
   140026ac5:	cmp    r12,r14
   140026ac8:	jae    0x140026eb9
   140026ace:	mov    r8d,0xffff
   140026ad4:	cmp    rbp,QWORD PTR [r13+0x28]
   140026ad8:	jae    0x140026eb2
   140026ade:	movzx  ebx,BYTE PTR [r12]
   140026ae3:	inc    r12
   140026ae6:	mov    eax,ebx
   140026ae8:	sub    eax,0xa
   140026aeb:	je     0x140026b38
   140026aed:	sub    eax,0x3
   140026af0:	je     0x140026b38
   140026af2:	sub    eax,0x1
   140026af5:	je     0x140026b24
   140026af7:	sub    eax,0x1
   140026afa:	je     0x140026b14
   140026afc:	cmp    eax,0xc
   140026aff:	jne    0x140026b50
   140026b01:	dec    r12
   140026b04:	lea    edx,[rax-0xb]
   140026b07:	mov    QWORD PTR [rsp+0x80],r12
   140026b0f:	jmp    0x140026a40
   140026b14:	cmp    DWORD PTR [rsi+0x6c],0x3
   140026b18:	jne    0x140026e28
   140026b1e:	mov    BYTE PTR [rsi+0x60],0x0
   140026b22:	jmp    0x140026ac5
   140026b24:	cmp    DWORD PTR [rsi+0x6c],0x3
   140026b28:	jne    0x140026e28
   140026b2e:	mov    BYTE PTR [rsi+0x5d],0x8
   140026b32:	mov    BYTE PTR [rsi+0x60],0x1
   140026b36:	jmp    0x140026ac5
   140026b38:	movzx  eax,BYTE PTR [rsi+0x5c]
   140026b3c:	test   al,al
   140026b3e:	je     0x140026b48
   140026b40:	cmp    al,0x3
   140026b42:	je     0x140026b48
   140026b44:	mov    BYTE PTR [rsi+0x5c],0x0
   140026b48:	mov    BYTE PTR [rsi+0x5e],0x0
   140026b4c:	mov    BYTE PTR [rsi+0x60],0x0
   140026b50:	mov    BYTE PTR [rsi+0x70],0x0
   140026b54:	movsx  rcx,BYTE PTR [rsi+0x60]
   140026b59:	lea    eax,[rbx+0x5f]
   140026b5c:	movsx  r10d,BYTE PTR [rcx+rsi*1+0x5c]
   140026b62:	cmp    al,0x3e
   140026b64:	ja     0x140026b94
   140026b66:	cmp    DWORD PTR [rsi+0x6c],0x4
   140026b6a:	jne    0x140026b94
   140026b6c:	cmp    r10d,0x4
   140026b70:	jl     0x140026b78
   140026b72:	cmp    r10d,0x7
   140026b76:	jle    0x140026b94
   140026b78:	cmp    cl,0x2
   140026b7b:	lea    r8d,[rbx+0xfec0]
   140026b82:	jl     0x140026d1b
   140026b88:	movzx  eax,BYTE PTR [rsi+0x61]
   140026b8c:	mov    BYTE PTR [rsi+0x60],al
   140026b8f:	jmp    0x140026d1b
   140026b94:	mov    ecx,r10d
   140026b97:	test   r10d,r10d
   140026b9a:	je     0x140026d0f
   140026ba0:	sub    ecx,0x1
   140026ba3:	je     0x140026cfa
   140026ba9:	sub    ecx,0x1
   140026bac:	je     0x140026cd6
   140026bb2:	sub    ecx,0x1
   140026bb5:	je     0x140026cb1
   140026bbb:	sub    ecx,0x5
   140026bbe:	je     0x140026c9d
   140026bc4:	cmp    r12,r14
   140026bc7:	jae    0x140026e71
   140026bcd:	movzx  ecx,BYTE PTR [r12]
   140026bd2:	xor    edx,edx
   140026bd4:	lea    eax,[rbx-0x21]
   140026bd7:	lea    r9d,[rcx-0x21]
   140026bdb:	cmp    r9b,0x5d
   140026bdf:	setbe  dl
   140026be2:	cmp    al,0x5d
   140026be4:	ja     0x140026e49
   140026bea:	test   edx,edx
   140026bec:	je     0x140026e4d
   140026bf2:	mov    edx,ebx
   140026bf4:	movzx  eax,cl
   140026bf7:	inc    r12
   140026bfa:	shl    edx,0x8
   140026bfd:	or     edx,eax
   140026bff:	cmp    r10d,0x4
   140026c03:	jne    0x140026c65
   140026c05:	test   bl,0x1
   140026c08:	je     0x140026c20
   140026c0a:	inc    bl
   140026c0c:	cmp    cl,0x5f
   140026c0f:	ja     0x140026c16
   140026c11:	add    cl,0x1f
   140026c14:	jmp    0x140026c2d
   140026c16:	cmp    cl,0x7e
   140026c19:	ja     0x140026c2b
   140026c1b:	add    cl,0x20
   140026c1e:	jmp    0x140026c2d
   140026c20:	cmp    r9b,0x5d
   140026c24:	ja     0x140026c2b
   140026c26:	add    cl,0x7e
   140026c29:	jmp    0x140026c2d
   140026c2b:	xor    cl,cl
   140026c2d:	shr    bl,1
   140026c2f:	cmp    bl,0x2f
   140026c32:	ja     0x140026c43
   140026c34:	add    bl,0x70
   140026c37:	mov    BYTE PTR [rsp+0x71],cl
   140026c3b:	mov    BYTE PTR [rsp+0x70],bl
   140026c3f:	mov    ebx,edx
   140026c41:	jmp    0x140026c80
   140026c43:	cmp    bl,0x3f
   140026c46:	ja     0x140026c57
   140026c48:	add    bl,0xb0
   140026c4b:	mov    BYTE PTR [rsp+0x71],cl
   140026c4f:	mov    BYTE PTR [rsp+0x70],bl
   140026c53:	mov    ebx,edx
   140026c55:	jmp    0x140026c80
   140026c57:	xor    bl,bl
   140026c59:	mov    BYTE PTR [rsp+0x71],cl
   140026c5d:	mov    BYTE PTR [rsp+0x70],bl
   140026c61:	mov    ebx,edx
   140026c63:	jmp    0x140026c80
   140026c65:	mov    ebx,edx
   140026c67:	cmp    r10d,0x7
   140026c6b:	jne    0x140026c73
   140026c6d:	add    edx,0x8080
   140026c73:	mov    eax,edx
   140026c75:	mov    BYTE PTR [rsp+0x71],dl
   140026c79:	shr    eax,0x8
   140026c7c:	mov    BYTE PTR [rsp+0x70],al
   140026c80:	movsxd rcx,r10d
   140026c83:	xor    r9d,r9d
   140026c86:	lea    rdx,[rsp+0x70]
   140026c8b:	mov    rcx,QWORD PTR [rsi+rcx*8]
   140026c8f:	lea    r8d,[r9+0x2]
   140026c93:	call   0x140016140
   140026c98:	mov    r8d,eax
   140026c9b:	jmp    0x140026d1b
   140026c9d:	lea    eax,[rbx-0x21]
   140026ca0:	cmp    al,0x3e
   140026ca2:	ja     0x140026e2c
   140026ca8:	lea    r8d,[rbx+0xff40]
   140026caf:	jmp    0x140026d1b
   140026cb1:	cmp    ebx,0x7f
   140026cb4:	ja     0x140026e2c
   140026cba:	cmp    ebx,0x5c
   140026cbd:	jb     0x140026d18
   140026cbf:	jne    0x140026cc9
   140026cc1:	mov    r8d,0xa5
   140026cc7:	jmp    0x140026d24
   140026cc9:	cmp    ebx,0x7e
   140026ccc:	jne    0x140026d18
   140026cce:	mov    r8d,0x203e
   140026cd4:	jmp    0x140026d24
   140026cd6:	cmp    ebx,0x7f
   140026cd9:	ja     0x140026cf1
   140026cdb:	lea    eax,[rbx+0x80]
   140026ce1:	movzx  edx,al
   140026ce4:	mov    rax,QWORD PTR [rsi+0x10]
   140026ce8:	mov    rcx,QWORD PTR [rax+0x40]
   140026cec:	movzx  r8d,WORD PTR [rcx+rdx*4]
   140026cf1:	movzx  eax,BYTE PTR [rsi+0x61]
   140026cf5:	mov    BYTE PTR [rsi+0x60],al
   140026cf8:	jmp    0x140026d1b
   140026cfa:	cmp    ebx,0x7f
   140026cfd:	ja     0x140026d06
   140026cff:	lea    r8d,[rbx+0x80]
   140026d06:	movzx  eax,BYTE PTR [rsi+0x61]
   140026d0a:	mov    BYTE PTR [rsi+0x60],al
   140026d0d:	jmp    0x140026d1b
   140026d0f:	cmp    ebx,0x7f
   140026d12:	ja     0x140026e2c
   140026d18:	mov    r8d,ebx
   140026d1b:	cmp    r8d,0xfffe
   140026d22:	jae    0x140026d5e
   140026d24:	mov    rdx,QWORD PTR [r13+0x30]
   140026d28:	test   rdx,rdx
   140026d2b:	je     0x140026d50
   140026d2d:	xor    eax,eax
   140026d2f:	cmp    ebx,0xff
   140026d35:	mov    ecx,r12d
   140026d38:	seta   al
   140026d3b:	inc    eax
   140026d3d:	sub    ecx,eax
   140026d3f:	mov    rax,rbp
   140026d42:	sub    rax,QWORD PTR [r13+0x20]
   140026d46:	sub    ecx,DWORD PTR [r13+0x10]
   140026d4a:	sar    rax,1
   140026d4d:	mov    DWORD PTR [rdx+rax*4],ecx
   140026d50:	mov    WORD PTR [rbp+0x0],r8w
   140026d55:	add    rbp,0x2
   140026d59:	jmp    0x140026ac5
   140026d5e:	cmp    r8d,0xffff
   140026d65:	jbe    0x140026e2c
   140026d6b:	add    r8d,0xffff0000
   140026d72:	mov    ecx,0x2800
   140026d77:	mov    eax,r8d
   140026d7a:	shr    eax,0xa
   140026d7d:	sub    ax,cx
   140026d80:	mov    WORD PTR [rbp+0x0],ax
   140026d84:	mov    rdx,QWORD PTR [r13+0x30]
   140026d88:	test   rdx,rdx
   140026d8b:	je     0x140026db0
   140026d8d:	xor    eax,eax
   140026d8f:	cmp    ebx,0xff
   140026d95:	mov    ecx,r12d
   140026d98:	seta   al
   140026d9b:	inc    eax
   140026d9d:	sub    ecx,eax
   140026d9f:	mov    rax,rbp
   140026da2:	sub    rax,QWORD PTR [r13+0x20]
   140026da6:	sub    ecx,DWORD PTR [r13+0x10]
   140026daa:	sar    rax,1
   140026dad:	mov    DWORD PTR [rdx+rax*4],ecx
   140026db0:	add    rbp,0x2
   140026db4:	and    r8w,di
   140026db8:	cmp    rbp,QWORD PTR [r13+0x28]
   140026dbc:	jae    0x140026e01
   140026dbe:	mov    ecx,0x2400
   140026dc3:	sub    r8w,cx
   140026dc7:	mov    WORD PTR [rbp+0x0],r8w
   140026dcc:	mov    rdx,QWORD PTR [r13+0x30]
   140026dd0:	test   rdx,rdx
   140026dd3:	je     0x140026df8
   140026dd5:	xor    eax,eax
   140026dd7:	cmp    ebx,0xff
   140026ddd:	mov    ecx,r12d
   140026de0:	seta   al
   140026de3:	inc    eax
   140026de5:	sub    ecx,eax
   140026de7:	mov    rax,rbp
   140026dea:	sub    rax,QWORD PTR [r13+0x20]
   140026dee:	sub    ecx,DWORD PTR [r13+0x10]
   140026df2:	sar    rax,1
   140026df5:	mov    DWORD PTR [rdx+rax*4],ecx
   140026df8:	add    rbp,0x2
   140026dfc:	jmp    0x140026ac5
   140026e01:	mov    rcx,QWORD PTR [r13+0x8]
   140026e05:	mov    eax,0x2400
   140026e0a:	sub    r8w,ax
   140026e0e:	movsx  rax,BYTE PTR [rcx+0x5d]
   140026e13:	mov    WORD PTR [rcx+rax*2+0x90],r8w
   140026e1c:	mov    rax,QWORD PTR [r13+0x8]
   140026e20:	inc    BYTE PTR [rax+0x5d]
   140026e23:	jmp    0x140026ac5
   140026e28:	mov    BYTE PTR [rsi+0x70],0x0
   140026e2c:	mov    rcx,QWORD PTR [r13+0x8]
   140026e30:	cmp    ebx,0xff
   140026e36:	jbe    0x140026e8a
   140026e38:	mov    eax,ebx
   140026e3a:	mov    BYTE PTR [rcx+0x42],bl
   140026e3d:	mov    BYTE PTR [rcx+0x40],0x2
   140026e41:	shr    eax,0x8
   140026e44:	mov    BYTE PTR [rcx+0x41],al
   140026e47:	jmp    0x140026e91
   140026e49:	test   edx,edx
   140026e4b:	jne    0x140026e2c
   140026e4d:	cmp    cl,0x20
   140026e50:	jae    0x140026e60
   140026e52:	mov    eax,0x1
   140026e57:	shl    eax,cl
   140026e59:	test   eax,0x800c000
   140026e5e:	jne    0x140026e2c
   140026e60:	bts    ebx,0x8
   140026e64:	movzx  eax,cl
   140026e67:	inc    r12
   140026e6a:	shl    ebx,0x8
   140026e6d:	or     ebx,eax
   140026e6f:	jmp    0x140026e2c
   140026e71:	mov    rax,QWORD PTR [r13+0x8]
   140026e75:	mov    BYTE PTR [rax+0x41],bl
   140026e78:	mov    rax,QWORD PTR [r13+0x8]
   140026e7c:	mov    BYTE PTR [rax+0x40],0x1
   140026e80:	mov    QWORD PTR [r13+0x20],rbp
   140026e84:	mov    QWORD PTR [r13+0x10],r12
   140026e88:	jmp    0x140026ecf
   140026e8a:	mov    BYTE PTR [rcx+0x41],bl
   140026e8d:	mov    BYTE PTR [rcx+0x40],0x1
   140026e91:	mov    eax,0xc
   140026e96:	mov    ecx,0xa
   140026e9b:	cmp    r8d,0xfffe
   140026ea2:	cmove  eax,ecx
   140026ea5:	mov    DWORD PTR [r15],eax
   140026ea8:	mov    QWORD PTR [r13+0x20],rbp
   140026eac:	mov    QWORD PTR [r13+0x10],r12
   140026eb0:	jmp    0x140026ecf
   140026eb2:	mov    DWORD PTR [r15],0xf
   140026eb9:	mov    QWORD PTR [r13+0x20],rbp
   140026ebd:	mov    QWORD PTR [r13+0x10],r12
   140026ec1:	jmp    0x140026ecf
   140026ec3:	mov    QWORD PTR [r13+0x20],rbp
   140026ec7:	mov    QWORD PTR [r13+0x10],r12
   140026ecb:	mov    BYTE PTR [rsi+0x70],0x0
   140026ecf:	mov    rbx,QWORD PTR [rsp+0x78]
   140026ed4:	add    rsp,0x30
   140026ed8:	pop    r15
   140026eda:	pop    r14
   140026edc:	pop    r13
   140026ede:	pop    r12
   140026ee0:	pop    rdi
   140026ee1:	pop    rsi
   140026ee2:	pop    rbp
   140026ee3:	ret    
   140026ee4:	int3   
   140026ee5:	int3   
   140026ee6:	int3   
   140026ee7:	int3   
   140026ee8:	int3   
   140026ee9:	int3   
   140026eea:	int3   
   140026eeb:	int3   
   140026eec:	int3   
   140026eed:	int3   
   140026eee:	int3   
   140026eef:	int3   
   140026ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140026ef5:	mov    QWORD PTR [rsp+0x10],rbp
   140026efa:	mov    QWORD PTR [rsp+0x18],rsi
   140026eff:	push   rdi
   140026f00:	sub    rsp,0x20
   140026f04:	mov    rdi,QWORD PTR [rcx+0x8]
   140026f08:	mov    rbx,rdx
   140026f0b:	mov    rbp,rcx
   140026f0e:	mov    rsi,QWORD PTR [rdi+0x10]
   140026f12:	mov    rax,QWORD PTR [rsi+0x50]
   140026f16:	mov    QWORD PTR [rcx+0x8],rax
   140026f1a:	mov    r8,QWORD PTR [rsi+0x50]
   140026f1e:	mov    eax,DWORD PTR [rdi+0x54]
   140026f21:	mov    DWORD PTR [r8+0x54],eax
   140026f25:	call   0x140016da0
   140026f2a:	mov    r11,QWORD PTR [rsi+0x50]
   140026f2e:	mov    eax,DWORD PTR [r11+0x54]
   140026f32:	mov    DWORD PTR [rdi+0x54],eax
   140026f35:	cmp    DWORD PTR [rbx],0xf
   140026f38:	jne    0x140026f69
   140026f3a:	mov    rax,QWORD PTR [rsi+0x50]
   140026f3e:	cmp    BYTE PTR [rax+0x5b],0x0
   140026f42:	jle    0x140026f56
   140026f44:	movsx  r8,BYTE PTR [rax+0x5b]
   140026f49:	lea    rdx,[rax+0x68]
   140026f4d:	lea    rcx,[rdi+0x68]
   140026f51:	call   0x14002b9a0
   140026f56:	mov    rax,QWORD PTR [rsi+0x50]
   140026f5a:	movzx  ecx,BYTE PTR [rax+0x5b]
   140026f5e:	mov    BYTE PTR [rdi+0x5b],cl
   140026f61:	mov    rax,QWORD PTR [rsi+0x50]
   140026f65:	mov    BYTE PTR [rax+0x5b],0x0
   140026f69:	mov    rbx,QWORD PTR [rsp+0x30]
   140026f6e:	mov    rsi,QWORD PTR [rsp+0x40]
   140026f73:	mov    QWORD PTR [rbp+0x8],rdi
   140026f77:	mov    rbp,QWORD PTR [rsp+0x38]
   140026f7c:	add    rsp,0x20
   140026f80:	pop    rdi
   140026f81:	ret    
   140026f82:	int3   
   140026f83:	int3   
   140026f84:	int3   
   140026f85:	int3   
   140026f86:	int3   
   140026f87:	int3   
   140026f88:	int3   
   140026f89:	int3   
   140026f8a:	int3   
   140026f8b:	int3   
   140026f8c:	int3   
   140026f8d:	int3   
   140026f8e:	int3   
   140026f8f:	int3   
   140026f90:	rex push rbx
   140026f92:	push   rbp
   140026f93:	push   rdi
   140026f94:	push   r12
   140026f96:	push   r14
   140026f98:	sub    rsp,0x60
   140026f9c:	mov    rax,QWORD PTR [rcx+0x30]
   140026fa0:	mov    r11,QWORD PTR [rcx+0x18]
   140026fa4:	mov    rbp,QWORD PTR [rcx+0x10]
   140026fa8:	mov    rbx,QWORD PTR [rcx+0x20]
   140026fac:	mov    r14,QWORD PTR [rcx+0x28]
   140026fb0:	mov    QWORD PTR [rsp+0xa8],rax
   140026fb8:	mov    DWORD PTR [rsp+0xa0],0x0
   140026fc3:	mov    rdi,rcx
   140026fc6:	mov    rcx,QWORD PTR [rcx+0x8]
   140026fca:	mov    rax,QWORD PTR [rcx+0x10]
   140026fce:	mov    r12,rdx
   140026fd1:	mov    QWORD PTR [rsp+0x40],r11
   140026fd6:	cmp    DWORD PTR [rax+0x6c],0x1
   140026fda:	jne    0x140026ff0
   140026fdc:	mov    rcx,rdi
   140026fdf:	call   0x140026ef0
   140026fe4:	add    rsp,0x60
   140026fe8:	pop    r14
   140026fea:	pop    r12
   140026fec:	pop    rdi
   140026fed:	pop    rbp
   140026fee:	pop    rbx
   140026fef:	ret    
   140026ff0:	mov    rax,QWORD PTR [rax+0x50]
   140026ff4:	movzx  edx,BYTE PTR [rcx+0x3f]
   140026ff8:	mov    QWORD PTR [rsp+0x98],rsi
   140027000:	mov    esi,DWORD PTR [rcx+0x54]
   140027003:	mov    QWORD PTR [rsp+0x58],r13
   140027008:	movzx  r13d,BYTE PTR [rcx+0x50]
   14002700d:	mov    QWORD PTR [rsp+0x50],r15
   140027012:	mov    r15,QWORD PTR [rax+0x30]
   140027016:	mov    BYTE PTR [rsp+0x90],dl
   14002701d:	test   esi,esi
   14002701f:	je     0x14002702a
   140027021:	cmp    rbx,r14
   140027024:	jb     0x14002719e
   14002702a:	cmp    rbp,r11
   14002702d:	jae    0x1400273dd
   140027033:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140027040:	mov    DWORD PTR [rsp+0xa0],0xffff
   14002704b:	cmp    rbx,QWORD PTR [rdi+0x28]
   14002704f:	jae    0x1400274ab
   140027055:	movzx  esi,WORD PTR [rbp+0x0]
   140027059:	add    rbp,0x2
   14002705d:	cmp    esi,0x20
   140027060:	jge    0x140027076
   140027062:	mov    ecx,esi
   140027064:	mov    eax,0x1
   140027069:	shl    eax,cl
   14002706b:	test   eax,0x800c000
   140027070:	jne    0x1400273ce
   140027076:	cmp    esi,0x10000
   14002707c:	jl     0x14002708c
   14002707e:	test   BYTE PTR [r15+0x105],0x1
   140027086:	je     0x140027125
   14002708c:	mov    r8,QWORD PTR [r15+0x60]
   140027090:	xor    r10d,r10d
   140027093:	mov    rax,rsi
   140027096:	sar    rax,0xa
   14002709a:	mov    rdx,rsi
   14002709d:	movzx  ecx,WORD PTR [r8+rax*2]
   1400270a2:	mov    rax,QWORD PTR [r15+0xf0]
   1400270a9:	sar    rdx,0x4
   1400270ad:	and    edx,0x3f
   1400270b0:	add    rcx,rdx
   1400270b3:	mov    edx,esi
   1400270b5:	mov    r9d,DWORD PTR [r8+rcx*4]
   1400270b9:	and    edx,0xf
   1400270bc:	movzx  ecx,r9w
   1400270c0:	shl    ecx,0x4
   1400270c3:	add    ecx,edx
   1400270c5:	movzx  r8d,WORD PTR [rax+rcx*2]
   1400270ca:	lea    ecx,[rdx+0x10]
   1400270cd:	cmp    r8d,0xff
   1400270d4:	movzx  eax,cl
   1400270d7:	seta   r10b
   1400270db:	inc    r10d
   1400270de:	bt     r9d,eax
   1400270e2:	jae    0x1400270ee
   1400270e4:	mov    DWORD PTR [rsp+0xa0],r8d
   1400270ec:	jmp    0x140027154
   1400270ee:	mov    dl,BYTE PTR [rsp+0x90]
   1400270f5:	test   dl,dl
   1400270f7:	jne    0x140027113
   1400270f9:	lea    eax,[rsi-0xe000]
   1400270ff:	cmp    eax,0x1900
   140027104:	jb     0x140027113
   140027106:	lea    eax,[rsi-0xf0000]
   14002710c:	cmp    eax,0x20000
   140027111:	jae    0x140027125
   140027113:	test   r8d,r8d
   140027116:	je     0x140027125
   140027118:	mov    DWORD PTR [rsp+0xa0],r8d
   140027120:	neg    r10d
   140027123:	jmp    0x140027154
   140027125:	mov    rcx,QWORD PTR [r15+0x128]
   14002712c:	test   rcx,rcx
   14002712f:	je     0x140027177
   140027131:	movzx  r9d,dl
   140027135:	lea    r8,[rsp+0xa0]
   14002713d:	mov    edx,esi
   14002713f:	call   0x140029ea0
   140027144:	mov    r8d,DWORD PTR [rsp+0xa0]
   14002714c:	mov    r11,QWORD PTR [rsp+0x40]
   140027151:	mov    r10d,eax
   140027154:	test   r10d,r10d
   140027157:	jns    0x14002715c
   140027159:	neg    r10d
   14002715c:	cmp    r10d,0x2
   140027160:	jg     0x140027177
   140027162:	test   r10d,r10d
   140027165:	je     0x140027177
   140027167:	cmp    r10d,0x1
   14002716b:	jne    0x1400271e0
   14002716d:	cmp    r8d,0x7f
   140027171:	jbe    0x140027208
   140027177:	mov    DWORD PTR [rsp+0xa0],0xffff
   140027182:	mov    eax,esi
   140027184:	and    eax,0xfffff800
   140027189:	cmp    eax,0xd800
   14002718e:	jne    0x140027497
   140027194:	bt     esi,0xa
   140027198:	jb     0x140027483
   14002719e:	cmp    rbp,r11
   1400271a1:	jae    0x14002746f
   1400271a7:	movzx  ecx,WORD PTR [rbp+0x0]
   1400271ab:	mov    eax,ecx
   1400271ad:	and    eax,0xfffffc00
   1400271b2:	cmp    eax,0xdc00
   1400271b7:	jne    0x14002745b
   1400271bd:	add    esi,0xffff2809
   1400271c3:	mov    DWORD PTR [r12],0xa
   1400271cb:	mov    rax,QWORD PTR [rdi+0x8]
   1400271cf:	shl    esi,0xa
   1400271d2:	add    rbp,0x2
   1400271d6:	add    esi,ecx
   1400271d8:	mov    DWORD PTR [rax+0x54],esi
   1400271db:	jmp    0x1400273dd
   1400271e0:	cmp    r10d,0x2
   1400271e4:	jne    0x140027208
   1400271e6:	mov    eax,0x5e5f
   1400271eb:	mov    ecx,0x5d5d
   1400271f0:	add    eax,r8d
   1400271f3:	cmp    ax,cx
   1400271f6:	ja     0x140027177
   1400271fc:	lea    eax,[r8+0x5f]
   140027200:	cmp    al,0x5d
   140027202:	ja     0x140027177
   140027208:	cmp    r8d,0xffff
   14002720f:	je     0x140027182
   140027215:	cmp    r8d,0xff
   14002721c:	movzx  eax,r13b
   140027220:	seta   r13b
   140027224:	cmp    al,r13b
   140027227:	je     0x140027272
   140027229:	test   r13b,r13b
   14002722c:	je     0x140027236
   14002722e:	mov    BYTE PTR [rbx],0xe
   140027231:	inc    rbx
   140027234:	jmp    0x14002723c
   140027236:	mov    BYTE PTR [rbx],0xf
   140027239:	inc    rbx
   14002723c:	mov    rcx,QWORD PTR [rsp+0xa8]
   140027244:	test   rcx,rcx
   140027247:	je     0x14002726a
   140027249:	mov    rax,rbp
   14002724c:	sub    rax,QWORD PTR [rdi+0x10]
   140027250:	sar    rax,1
   140027253:	dec    eax
   140027255:	mov    DWORD PTR [rcx],eax
   140027257:	add    QWORD PTR [rsp+0xa8],0x4
   140027260:	mov    r8d,DWORD PTR [rsp+0xa0]
   140027268:	jmp    0x140027272
   14002726a:	mov    r8d,DWORD PTR [rsp+0xa0]
   140027272:	cmp    r8d,0xff
   140027279:	ja     0x1400272d5
   14002727b:	cmp    rbx,r14
   14002727e:	jae    0x1400272b3
   140027280:	mov    BYTE PTR [rbx],r8b
   140027283:	mov    rcx,QWORD PTR [rsp+0xa8]
   14002728b:	inc    rbx
   14002728e:	test   rcx,rcx
   140027291:	je     0x1400273bd
   140027297:	mov    rax,rbp
   14002729a:	sub    rax,QWORD PTR [rdi+0x10]
   14002729e:	sar    rax,1
   1400272a1:	dec    eax
   1400272a3:	mov    DWORD PTR [rcx],eax
   1400272a5:	add    QWORD PTR [rsp+0xa8],0x4
   1400272ae:	jmp    0x1400273bd
   1400272b3:	mov    rcx,QWORD PTR [rdi+0x8]
   1400272b7:	movsx  rax,BYTE PTR [rcx+0x5b]
   1400272bc:	mov    BYTE PTR [rax+rcx*1+0x68],r8b
   1400272c1:	mov    rax,QWORD PTR [rdi+0x8]
   1400272c5:	inc    BYTE PTR [rax+0x5b]
   1400272c8:	mov    DWORD PTR [r12],0xf
   1400272d0:	jmp    0x1400273bd
   1400272d5:	cmp    rbx,r14
   1400272d8:	jae    0x140027379
   1400272de:	shr    r8d,0x8
   1400272e2:	inc    rbx
   1400272e5:	sub    r8b,0x80
   1400272e9:	mov    BYTE PTR [rbx-0x1],r8b
   1400272ed:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400272f5:	test   rcx,rcx
   1400272f8:	je     0x140027311
   1400272fa:	mov    rax,rbp
   1400272fd:	sub    rax,QWORD PTR [rdi+0x10]
   140027301:	sar    rax,1
   140027304:	dec    eax
   140027306:	mov    DWORD PTR [rcx],eax
   140027308:	add    QWORD PTR [rsp+0xa8],0x4
   140027311:	cmp    rbx,r14
   140027314:	jae    0x140027350
   140027316:	movzx  eax,BYTE PTR [rsp+0xa0]
   14002731e:	inc    rbx
   140027321:	sub    al,0x80
   140027323:	mov    BYTE PTR [rbx-0x1],al
   140027326:	mov    rcx,QWORD PTR [rsp+0xa8]
   14002732e:	test   rcx,rcx
   140027331:	je     0x1400273bd
   140027337:	mov    rax,rbp
   14002733a:	sub    rax,QWORD PTR [rdi+0x10]
   14002733e:	sar    rax,1
   140027341:	dec    eax
   140027343:	mov    DWORD PTR [rcx],eax
   140027345:	add    QWORD PTR [rsp+0xa8],0x4
   14002734e:	jmp    0x1400273bd
   140027350:	mov    rdx,QWORD PTR [rdi+0x8]
   140027354:	movzx  ecx,BYTE PTR [rsp+0xa0]
   14002735c:	movsx  rax,BYTE PTR [rdx+0x5b]
   140027361:	sub    cl,0x80
   140027364:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   140027368:	mov    rax,QWORD PTR [rdi+0x8]
   14002736c:	inc    BYTE PTR [rax+0x5b]
   14002736f:	mov    DWORD PTR [r12],0xf
   140027377:	jmp    0x1400273bd
   140027379:	mov    rcx,QWORD PTR [rdi+0x8]
   14002737d:	shr    r8d,0x8
   140027381:	movsx  rax,BYTE PTR [rcx+0x5b]
   140027386:	sub    r8b,0x80
   14002738a:	mov    BYTE PTR [rax+rcx*1+0x68],r8b
   14002738f:	mov    rax,QWORD PTR [rdi+0x8]
   140027393:	inc    BYTE PTR [rax+0x5b]
   140027396:	mov    rdx,QWORD PTR [rdi+0x8]
   14002739a:	movzx  ecx,BYTE PTR [rsp+0xa0]
   1400273a2:	movsx  rax,BYTE PTR [rdx+0x5b]
   1400273a7:	sub    cl,0x80
   1400273aa:	mov    BYTE PTR [rax+rdx*1+0x68],cl
   1400273ae:	mov    rax,QWORD PTR [rdi+0x8]
   1400273b2:	inc    BYTE PTR [rax+0x5b]
   1400273b5:	mov    DWORD PTR [r12],0xf
   1400273bd:	cmp    rbp,r11
   1400273c0:	jae    0x1400273dd
   1400273c2:	mov    dl,BYTE PTR [rsp+0x90]
   1400273c9:	jmp    0x140027040
   1400273ce:	mov    DWORD PTR [r12],0xc
   1400273d6:	mov    rax,QWORD PTR [rdi+0x8]
   1400273da:	mov    DWORD PTR [rax+0x54],esi
   1400273dd:	cmp    DWORD PTR [r12],0x0
   1400273e2:	jg     0x140027500
   1400273e8:	test   r13b,r13b
   1400273eb:	je     0x140027500
   1400273f1:	cmp    BYTE PTR [rdi+0x2],0x0
   1400273f5:	je     0x140027500
   1400273fb:	cmp    rbp,r11
   1400273fe:	jb     0x140027500
   140027404:	mov    r10,QWORD PTR [rdi+0x8]
   140027408:	cmp    DWORD PTR [r10+0x54],0x0
   14002740d:	jne    0x140027500
   140027413:	mov    rdx,QWORD PTR [rdi+0x10]
   140027417:	mov    rcx,rbp
   14002741a:	xor    r13b,r13b
   14002741d:	sub    rcx,rdx
   140027420:	sar    rcx,1
   140027423:	test   ecx,ecx
   140027425:	jle    0x1400274b5
   14002742b:	dec    ecx
   14002742d:	movsxd r8,ecx
   140027430:	movzx  eax,WORD PTR [rdx+r8*2]
   140027435:	and    eax,0xfffffc00
   14002743a:	cmp    eax,0xdc00
   14002743f:	jne    0x1400274b8
   140027441:	test   ecx,ecx
   140027443:	je     0x140027457
   140027445:	movzx  eax,WORD PTR [rdx+r8*2-0x2]
   14002744b:	and    eax,0xfffffc00
   140027450:	cmp    eax,0xd800
   140027455:	jne    0x1400274b8
   140027457:	dec    ecx
   140027459:	jmp    0x1400274b8
   14002745b:	mov    DWORD PTR [r12],0xc
   140027463:	mov    rax,QWORD PTR [rdi+0x8]
   140027467:	mov    DWORD PTR [rax+0x54],esi
   14002746a:	jmp    0x1400273dd
   14002746f:	mov    DWORD PTR [r12],0x0
   140027477:	mov    rax,QWORD PTR [rdi+0x8]
   14002747b:	mov    DWORD PTR [rax+0x54],esi
   14002747e:	jmp    0x1400273dd
   140027483:	mov    DWORD PTR [r12],0xc
   14002748b:	mov    rax,QWORD PTR [rdi+0x8]
   14002748f:	mov    DWORD PTR [rax+0x54],esi
   140027492:	jmp    0x1400273dd
   140027497:	mov    DWORD PTR [r12],0xa
   14002749f:	mov    rax,QWORD PTR [rdi+0x8]
   1400274a3:	mov    DWORD PTR [rax+0x54],esi
   1400274a6:	jmp    0x1400273dd
   1400274ab:	mov    DWORD PTR [r12],0xf
   1400274b3:	jmp    0x140027500
   1400274b5:	or     ecx,0xffffffff
   1400274b8:	mov    QWORD PTR [rsp+0x38],r12
   1400274bd:	mov    DWORD PTR [rsp+0x30],ecx
   1400274c1:	lea    rax,[rsp+0xa8]
   1400274c9:	mov    QWORD PTR [rsp+0x28],rax
   1400274ce:	lea    r9,[rsp+0x90]
   1400274d6:	lea    rdx,[rip+0x270e3]        # 0x14004e5c0
   1400274dd:	mov    r8d,0x1
   1400274e3:	mov    rcx,r10
   1400274e6:	mov    QWORD PTR [rsp+0x20],r14
   1400274eb:	mov    QWORD PTR [rsp+0x90],rbx
   1400274f3:	call   0x14002a710
   1400274f8:	mov    rbx,QWORD PTR [rsp+0x90]
   140027500:	mov    rax,QWORD PTR [rdi+0x8]
   140027504:	mov    r15,QWORD PTR [rsp+0x50]
   140027509:	mov    rsi,QWORD PTR [rsp+0x98]
   140027511:	movsx  ecx,r13b
   140027515:	mov    r13,QWORD PTR [rsp+0x58]
   14002751a:	mov    QWORD PTR [rdi+0x10],rbp
   14002751e:	mov    QWORD PTR [rdi+0x20],rbx
   140027522:	mov    DWORD PTR [rax+0x50],ecx
   140027525:	add    rsp,0x60
   140027529:	pop    r14
   14002752b:	pop    r12
   14002752d:	pop    rdi
   14002752e:	pop    rbp
   14002752f:	pop    rbx
   140027530:	ret    
   140027531:	int3   
   140027532:	int3   
   140027533:	int3   
   140027534:	int3   
   140027535:	int3   
   140027536:	int3   
   140027537:	int3   
   140027538:	int3   
   140027539:	int3   
   14002753a:	int3   
   14002753b:	int3   
   14002753c:	int3   
   14002753d:	int3   
   14002753e:	int3   
   14002753f:	int3   
   140027540:	mov    QWORD PTR [rsp+0x8],rbx
   140027545:	mov    QWORD PTR [rsp+0x10],rbp
   14002754a:	mov    QWORD PTR [rsp+0x18],rsi
   14002754f:	mov    QWORD PTR [rsp+0x20],rdi
   140027554:	push   r12
   140027556:	sub    rsp,0x70
   14002755a:	mov    rax,QWORD PTR [rcx+0x8]
   14002755e:	mov    rbp,rdx
   140027561:	mov    rbx,rcx
   140027564:	mov    rsi,QWORD PTR [rax+0x10]
   140027568:	movzx  eax,WORD PTR [rcx]
   14002756b:	movzx  edi,ax
   14002756e:	cmp    ax,0x38
   140027572:	jb     0x140027579
   140027574:	mov    edi,0x38
   140027579:	mov    rdx,rcx
   14002757c:	lea    rcx,[rsp+0x30]
   140027581:	movsxd r8,edi
   140027584:	call   0x14002b9a0
   140027589:	mov    r12,QWORD PTR [rbx+0x10]
   14002758d:	mov    WORD PTR [rsp+0x30],di
   140027592:	mov    r9,QWORD PTR [rsi+0x50]
   140027596:	mov    QWORD PTR [rsp+0x38],r9
   14002759b:	cmp    DWORD PTR [rsi+0x68],0x0
   14002759f:	je     0x1400275c2
   1400275a1:	mov    r8,QWORD PTR [rbx+0x18]
   1400275a5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400275a9:	lea    rdx,[rbx+0x10]
   1400275ad:	mov    r9d,0x2
   1400275b3:	mov    QWORD PTR [rsp+0x20],rbp
   1400275b8:	call   0x1400259b0
   1400275bd:	mov    r9,QWORD PTR [rsp+0x38]
   1400275c2:	cmp    DWORD PTR [rbp+0x0],0x0
   1400275c6:	jg     0x140027727
   1400275cc:	mov    rcx,QWORD PTR [rbx+0x10]
   1400275d0:	cmp    rcx,QWORD PTR [rbx+0x18]
   1400275d4:	jae    0x140027727
   1400275da:	mov    QWORD PTR [rsp+0x40],rcx
   1400275df:	mov    rax,rcx
   1400275e2:	cmp    BYTE PTR [rax],0x1b
   1400275e5:	je     0x1400275f0
   1400275e7:	inc    rax
   1400275ea:	cmp    rax,QWORD PTR [rbx+0x18]
   1400275ee:	jb     0x1400275e2
   1400275f0:	mov    QWORD PTR [rsp+0x48],rax
   1400275f5:	cmp    rcx,rax
   1400275f8:	je     0x140027713
   1400275fe:	mov    rdx,QWORD PTR [rbx+0x8]
   140027602:	movzx  eax,BYTE PTR [rdx+0x40]
   140027606:	test   al,al
   140027608:	jle    0x140027620
   14002760a:	lea    rcx,[r9+0x41]
   14002760e:	movsx  r8,al
   140027612:	add    rdx,0x41
   140027616:	call   0x14002b9a0
   14002761b:	mov    r9,QWORD PTR [rsp+0x38]
   140027620:	mov    rax,QWORD PTR [rbx+0x8]
   140027624:	mov    rdx,rbp
   140027627:	movzx  ecx,BYTE PTR [rax+0x40]
   14002762b:	mov    BYTE PTR [r9+0x40],cl
   14002762f:	lea    rcx,[rsp+0x30]
   140027634:	call   0x1400151e0
   140027639:	mov    rcx,QWORD PTR [rbx+0x30]
   14002763d:	test   rcx,rcx
   140027640:	je     0x14002767f
   140027642:	cmp    r12,QWORD PTR [rbx+0x10]
   140027646:	je     0x14002767f
   140027648:	mov    r9d,DWORD PTR [rbx+0x10]
   14002764c:	mov    rdx,QWORD PTR [rbx+0x20]
   140027650:	mov    r8,QWORD PTR [rsp+0x50]
   140027655:	sub    r9d,r12d
   140027658:	cmp    rdx,r8
   14002765b:	jae    0x140027684
   14002765d:	nop    DWORD PTR [rax]
   140027660:	mov    eax,DWORD PTR [rcx]
   140027662:	test   eax,eax
   140027664:	js     0x140027670
   140027666:	add    eax,r9d
   140027669:	mov    DWORD PTR [rcx],eax
   14002766b:	mov    r8,QWORD PTR [rsp+0x50]
   140027670:	add    rdx,0x2
   140027674:	add    rcx,0x4
   140027678:	cmp    rdx,r8
   14002767b:	jb     0x140027660
   14002767d:	jmp    0x140027684
   14002767f:	mov    r8,QWORD PTR [rsp+0x50]
   140027684:	mov    rax,QWORD PTR [rsp+0x40]
   140027689:	mov    QWORD PTR [rbx+0x20],r8
   14002768d:	mov    QWORD PTR [rbx+0x10],rax
   140027691:	mov    rax,QWORD PTR [rsp+0x60]
   140027696:	mov    QWORD PTR [rbx+0x30],rax
   14002769a:	mov    rax,QWORD PTR [rsp+0x38]
   14002769f:	movzx  ecx,BYTE PTR [rax+0x40]
   1400276a3:	test   cl,cl
   1400276a5:	jle    0x1400276c1
   1400276a7:	movsx  r8,cl
   1400276ab:	mov    rcx,QWORD PTR [rbx+0x8]
   1400276af:	lea    rdx,[rax+0x41]
   1400276b3:	add    rcx,0x41
   1400276b7:	call   0x14002b9a0
   1400276bc:	mov    rax,QWORD PTR [rsp+0x38]
   1400276c1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400276c5:	movzx  eax,BYTE PTR [rax+0x40]
   1400276c9:	mov    BYTE PTR [rcx+0x40],al
   1400276cc:	cmp    DWORD PTR [rbp+0x0],0xf
   1400276d0:	jne    0x140027713
   1400276d2:	mov    rax,QWORD PTR [rsp+0x38]
   1400276d7:	movzx  ecx,BYTE PTR [rax+0x5d]
   1400276db:	test   cl,cl
   1400276dd:	jle    0x1400276ff
   1400276df:	movsx  r8,cl
   1400276e3:	mov    rcx,QWORD PTR [rbx+0x8]
   1400276e7:	lea    rdx,[rax+0x90]
   1400276ee:	add    rcx,0x90
   1400276f5:	call   0x14002b9a0
   1400276fa:	mov    rax,QWORD PTR [rsp+0x38]
   1400276ff:	movzx  eax,BYTE PTR [rax+0x5d]
   140027703:	mov    rcx,QWORD PTR [rbx+0x8]
   140027707:	mov    BYTE PTR [rcx+0x5d],al
   14002770a:	mov    rax,QWORD PTR [rsp+0x38]
   14002770f:	mov    BYTE PTR [rax+0x5d],0x0
   140027713:	cmp    DWORD PTR [rbp+0x0],0x0
   140027717:	jg     0x140027727
   140027719:	mov    rax,QWORD PTR [rbx+0x18]
   14002771d:	cmp    QWORD PTR [rbx+0x10],rax
   140027721:	jne    0x1400275a1
   140027727:	lea    r11,[rsp+0x70]
   14002772c:	mov    rbx,QWORD PTR [r11+0x10]
   140027730:	mov    rbp,QWORD PTR [r11+0x18]
   140027734:	mov    rsi,QWORD PTR [r11+0x20]
   140027738:	mov    rdi,QWORD PTR [r11+0x28]
   14002773c:	mov    rsp,r11
   14002773f:	pop    r12
   140027741:	ret    
   140027742:	int3   
   140027743:	int3   
   140027744:	int3   
   140027745:	int3   
   140027746:	int3   
   140027747:	int3   
   140027748:	int3   
   140027749:	int3   
   14002774a:	int3   
   14002774b:	int3   
   14002774c:	int3   
   14002774d:	int3   
   14002774e:	int3   
   14002774f:	int3   
   140027750:	mov    QWORD PTR [rsp+0x10],rdx
   140027755:	push   rbx
   140027756:	push   rbp
   140027757:	push   rsi
   140027758:	push   r12
   14002775a:	push   r13
   14002775c:	push   r14
   14002775e:	sub    rsp,0x48
   140027762:	mov    rbx,QWORD PTR [rcx+0x10]
   140027766:	mov    rbp,QWORD PTR [rcx+0x20]
   14002776a:	mov    r14,QWORD PTR [rcx+0x18]
   14002776e:	mov    r12,rcx
   140027771:	mov    rcx,QWORD PTR [rcx+0x8]
   140027775:	mov    r13,rdx
   140027778:	mov    rsi,QWORD PTR [rcx+0x10]
   14002777c:	mov    QWORD PTR [rsp+0x98],rbx
   140027784:	cmp    DWORD PTR [rsi+0x6c],0x1
   140027788:	jne    0x1400277a0
   14002778a:	mov    rcx,r12
   14002778d:	call   0x140027540
   140027792:	add    rsp,0x48
   140027796:	pop    r14
   140027798:	pop    r13
   14002779a:	pop    r12
   14002779c:	pop    rsi
   14002779d:	pop    rbp
   14002779e:	pop    rbx
   14002779f:	ret    
   1400277a0:	cmp    DWORD PTR [rsi+0x68],0x0
   1400277a4:	mov    rax,QWORD PTR [rsi+0x50]
   1400277a8:	movzx  r8d,BYTE PTR [rcx+0x3f]
   1400277ad:	mov    QWORD PTR [rsp+0x40],rdi
   1400277b2:	mov    QWORD PTR [rsp+0x38],r15
   1400277b7:	mov    r15,QWORD PTR [rax+0x30]
   1400277bb:	mov    BYTE PTR [rsp+0x80],r8b
   1400277c3:	mov    r10d,0x1
   1400277c9:	jne    0x1400277ea
   1400277cb:	cmp    BYTE PTR [rcx+0x40],r10b
   1400277cf:	jne    0x14002782f
   1400277d1:	cmp    rbx,r14
   1400277d4:	jae    0x14002782f
   1400277d6:	cmp    rbp,QWORD PTR [r12+0x28]
   1400277db:	jae    0x14002782f
   1400277dd:	movzx  edi,BYTE PTR [rcx+0x41]
   1400277e1:	mov    BYTE PTR [rcx+0x40],0x0
   1400277e5:	jmp    0x1400278c0
   1400277ea:	mov    BYTE PTR [rsi+0x70],0x0
   1400277ee:	mov    rcx,QWORD PTR [r12+0x8]
   1400277f3:	lea    rdx,[rsp+0x98]
   1400277fb:	mov    r9d,0x2
   140027801:	mov    r8,r14
   140027804:	mov    QWORD PTR [rsp+0x20],r13
   140027809:	call   0x1400259b0
   14002780e:	cmp    DWORD PTR [r13+0x0],0x0
   140027813:	jg     0x140027a65
   140027819:	mov    rbx,QWORD PTR [rsp+0x98]
   140027821:	mov    r8b,BYTE PTR [rsp+0x80]
   140027829:	mov    r10d,0x1
   14002782f:	cmp    rbx,r14
   140027832:	jae    0x140027a5e
   140027838:	cmp    rbp,QWORD PTR [r12+0x28]
   14002783d:	jae    0x140027a50
   140027843:	movzx  edi,BYTE PTR [rbx]
   140027846:	inc    rbx
   140027849:	cmp    edi,0xf
   14002784c:	jne    0x140027895
   14002784e:	cmp    BYTE PTR [rsi+0x70],0x0
   140027852:	mov    BYTE PTR [rsi+0x60],0x0
   140027856:	je     0x14002782f
   140027858:	mov    rcx,QWORD PTR [rsp+0x88]
   140027860:	mov    BYTE PTR [rsi+0x70],0x0
   140027864:	mov    DWORD PTR [rcx],0x12
   14002786a:	mov    rax,QWORD PTR [r12+0x8]
   14002786f:	mov    DWORD PTR [rax+0x11c],0x2
   140027879:	mov    rax,QWORD PTR [r12+0x8]
   14002787e:	mov    BYTE PTR [rax+0x41],dil
   140027882:	mov    rax,QWORD PTR [r12+0x8]
   140027887:	mov    BYTE PTR [rax+0x40],0x1
   14002788b:	mov    QWORD PTR [r12+0x10],rbx
   140027890:	jmp    0x140027a72
   140027895:	cmp    edi,0xe
   140027898:	jne    0x1400278a4
   14002789a:	mov    BYTE PTR [rsi+0x60],0x1
   14002789e:	mov    BYTE PTR [rsi+0x70],0x1
   1400278a2:	jmp    0x14002782f
   1400278a4:	cmp    edi,0x1b
   1400278a7:	je     0x14002799e
   1400278ad:	cmp    BYTE PTR [rsi+0x60],0x1
   1400278b1:	mov    BYTE PTR [rsi+0x70],0x0
   1400278b5:	jne    0x140027928
   1400278b7:	cmp    rbx,r14
   1400278ba:	jae    0x1400279e0
   1400278c0:	movzx  r13d,BYTE PTR [rbx]
   1400278c4:	xor    ecx,ecx
   1400278c6:	mov    edx,0xffff
   1400278cb:	lea    eax,[r13-0x21]
   1400278cf:	cmp    al,0x5d
   1400278d1:	lea    eax,[rdi-0x21]
   1400278d4:	setbe  cl
   1400278d7:	cmp    al,0x5d
   1400278d9:	ja     0x1400279b6
   1400278df:	test   ecx,ecx
   1400278e1:	je     0x1400279ba
   1400278e7:	lea    eax,[rdi-0x80]
   1400278ea:	movzx  r9d,r8b
   1400278ee:	lea    rdx,[rsp+0x90]
   1400278f6:	mov    BYTE PTR [rsp+0x90],al
   1400278fd:	lea    eax,[r13-0x80]
   140027901:	mov    r8d,0x2
   140027907:	mov    rcx,r15
   14002790a:	inc    rbx
   14002790d:	mov    BYTE PTR [rsp+0x91],al
   140027914:	call   0x140016140
   140027919:	shl    di,0x8
   14002791d:	movzx  ecx,r13b
   140027921:	mov    edx,eax
   140027923:	or     di,cx
   140027926:	jmp    0x140027946
   140027928:	cmp    edi,0x7f
   14002792b:	ja     0x1400279f9
   140027931:	movzx  r9d,r8b
   140027935:	lea    rdx,[rbx-0x1]
   140027939:	mov    rcx,r15
   14002793c:	mov    r8d,r10d
   14002793f:	call   0x140016140
   140027944:	mov    edx,eax
   140027946:	cmp    edx,0xfffe
   14002794c:	jge    0x1400279fe
   140027952:	mov    r8,QWORD PTR [r12+0x30]
   140027957:	test   r8,r8
   14002795a:	je     0x140027983
   14002795c:	xor    eax,eax
   14002795e:	mov    ecx,0xff
   140027963:	cmp    di,cx
   140027966:	mov    ecx,ebx
   140027968:	seta   al
   14002796b:	inc    eax
   14002796d:	sub    ecx,eax
   14002796f:	mov    rax,rbp
   140027972:	sub    rax,QWORD PTR [r12+0x20]
   140027977:	sub    ecx,DWORD PTR [r12+0x10]
   14002797c:	sar    rax,1
   14002797f:	mov    DWORD PTR [r8+rax*4],ecx
   140027983:	mov    r8b,BYTE PTR [rsp+0x80]
   14002798b:	mov    WORD PTR [rbp+0x0],dx
   14002798f:	add    rbp,0x2
   140027993:	mov    r10d,0x1
   140027999:	jmp    0x14002782f
   14002799e:	mov    r13,QWORD PTR [rsp+0x88]
   1400279a6:	dec    rbx
   1400279a9:	mov    QWORD PTR [rsp+0x98],rbx
   1400279b1:	jmp    0x1400277ea
   1400279b6:	test   ecx,ecx
   1400279b8:	jne    0x1400279fe
   1400279ba:	cmp    r13b,0x20
   1400279be:	jae    0x1400279d0
   1400279c0:	movzx  ecx,r13b
   1400279c4:	shl    r10d,cl
   1400279c7:	test   r10d,0x800c000
   1400279ce:	jne    0x1400279fe
   1400279d0:	shl    di,0x8
   1400279d4:	movzx  eax,r13b
   1400279d8:	inc    rbx
   1400279db:	or     di,ax
   1400279de:	jmp    0x1400279fe
   1400279e0:	mov    rax,QWORD PTR [r12+0x8]
   1400279e5:	mov    BYTE PTR [rax+0x41],dil
   1400279e9:	mov    rax,QWORD PTR [r12+0x8]
   1400279ee:	mov    BYTE PTR [rax+0x40],0x1
   1400279f2:	mov    QWORD PTR [r12+0x10],rbx
   1400279f7:	jmp    0x140027a72
   1400279f9:	mov    edx,0xffff
   1400279fe:	mov    rcx,QWORD PTR [r12+0x8]
   140027a03:	movzx  r8d,di
   140027a07:	mov    eax,0xff
   140027a0c:	cmp    r8d,eax
   140027a0f:	jbe    0x140027a24
   140027a11:	mov    eax,r8d
   140027a14:	mov    BYTE PTR [rcx+0x42],r8b
   140027a18:	mov    BYTE PTR [rcx+0x40],0x2
   140027a1c:	shr    eax,0x8
   140027a1f:	mov    BYTE PTR [rcx+0x41],al
   140027a22:	jmp    0x140027a2c
   140027a24:	mov    BYTE PTR [rcx+0x41],r8b
   140027a28:	mov    BYTE PTR [rcx+0x40],0x1
   140027a2c:	mov    ecx,0xa
   140027a31:	mov    eax,0xc
   140027a36:	cmp    edx,0xfffe
   140027a3c:	cmove  eax,ecx
   140027a3f:	mov    rcx,QWORD PTR [rsp+0x88]
   140027a47:	mov    DWORD PTR [rcx],eax
   140027a49:	mov    QWORD PTR [r12+0x10],rbx
   140027a4e:	jmp    0x140027a72
   140027a50:	mov    rcx,QWORD PTR [rsp+0x88]
   140027a58:	mov    DWORD PTR [rcx],0xf
   140027a5e:	mov    QWORD PTR [r12+0x10],rbx
   140027a63:	jmp    0x140027a72
   140027a65:	mov    rax,QWORD PTR [rsp+0x98]
   140027a6d:	mov    QWORD PTR [r12+0x10],rax
   140027a72:	mov    rdi,QWORD PTR [rsp+0x40]
   140027a77:	mov    r15,QWORD PTR [rsp+0x38]
   140027a7c:	mov    QWORD PTR [r12+0x20],rbp
   140027a81:	add    rsp,0x48
   140027a85:	pop    r14
   140027a87:	pop    r13
   140027a89:	pop    r12
   140027a8b:	pop    rsi
   140027a8c:	pop    rbp
   140027a8d:	pop    rbx
   140027a8e:	ret    
   140027a8f:	int3   
   140027a90:	mov    QWORD PTR [rsp+0x18],rbx
   140027a95:	push   rbp
   140027a96:	push   rsi
   140027a97:	push   rdi
   140027a98:	push   r12
   140027a9a:	push   r13
   140027a9c:	push   r14
   140027a9e:	push   r15
   140027aa0:	sub    rsp,0xb0
   140027aa7:	mov    rax,QWORD PTR [rip+0x3ee02]        # 0x1400668b0
   140027aae:	xor    rax,rsp
   140027ab1:	mov    QWORD PTR [rsp+0xa8],rax
   140027ab9:	mov    r13,QWORD PTR [rcx+0x8]
   140027abd:	mov    rax,QWORD PTR [rcx+0x30]
   140027ac1:	mov    r9,QWORD PTR [rcx+0x20]
   140027ac5:	mov    rbp,QWORD PTR [rcx+0x28]
   140027ac9:	mov    r8,QWORD PTR [rcx+0x18]
   140027acd:	mov    rbx,QWORD PTR [rcx+0x10]
   140027ad1:	xor    r14d,r14d
   140027ad4:	mov    QWORD PTR [rsp+0x50],rax
   140027ad9:	mov    r12d,DWORD PTR [r13+0x54]
   140027add:	mov    r15,QWORD PTR [r13+0x10]
   140027ae1:	mov    rsi,rdx
   140027ae4:	mov    QWORD PTR [rsp+0x98],rdx
   140027aec:	mov    rdi,rcx
   140027aef:	mov    QWORD PTR [rsp+0x90],rcx
   140027af7:	mov    QWORD PTR [rsp+0x88],r13
   140027aff:	mov    QWORD PTR [rsp+0x78],r9
   140027b04:	mov    QWORD PTR [rsp+0x80],rbp
   140027b0c:	mov    QWORD PTR [rsp+0x70],r8
   140027b11:	mov    r11d,r14d
   140027b14:	mov    DWORD PTR [rsp+0x48],r14d
   140027b19:	mov    r10d,r14d
   140027b1c:	mov    DWORD PTR [rsp+0x44],r14d
   140027b21:	lea    edx,[r14+0x1]
   140027b25:	test   r12d,r12d
   140027b28:	je     0x140027b36
   140027b2a:	cmp    r9,rbp
   140027b2d:	jb     0x140027b6f
   140027b2f:	jmp    0x140027b36
   140027b31:	mov    edx,0x1
   140027b36:	cmp    rbx,r8
   140027b39:	jae    0x140027fe1
   140027b3f:	cmp    r9,rbp
   140027b42:	jae    0x140028097
   140027b48:	movzx  r12d,WORD PTR [rbx]
   140027b4c:	add    rbx,0x2
   140027b50:	mov    eax,r12d
   140027b53:	mov    QWORD PTR [rsp+0x68],rbx
   140027b58:	and    eax,0xfffff800
   140027b5d:	cmp    eax,0xd800
   140027b62:	jne    0x140027ba8
   140027b64:	bt     r12d,0xa
   140027b69:	jb     0x140027fd7
   140027b6f:	cmp    rbx,r8
   140027b72:	jae    0x140027fdd
   140027b78:	movzx  ecx,WORD PTR [rbx]
   140027b7b:	mov    eax,ecx
   140027b7d:	and    eax,0xfffffc00
   140027b82:	cmp    eax,0xdc00
   140027b87:	jne    0x140027fd7
   140027b8d:	add    r12d,0xffff2809
   140027b94:	add    rbx,0x2
   140027b98:	mov    DWORD PTR [r13+0x54],r14d
   140027b9c:	shl    r12d,0xa
   140027ba0:	mov    QWORD PTR [rsp+0x68],rbx
   140027ba5:	add    r12d,ecx
   140027ba8:	cmp    r12d,0x7f
   140027bac:	jg     0x140027c25
   140027bae:	cmp    r12d,0x20
   140027bb2:	jge    0x140027bc6
   140027bb4:	mov    ecx,r12d
   140027bb7:	mov    eax,edx
   140027bb9:	shl    eax,cl
   140027bbb:	test   eax,0x800c000
   140027bc0:	jne    0x140027fd7
   140027bc6:	cmp    BYTE PTR [r15+0x66],0x0
   140027bcb:	jne    0x140027bda
   140027bcd:	mov    BYTE PTR [rsp+0xa0],r12b
   140027bd5:	mov    r8d,edx
   140027bd8:	jmp    0x140027bfd
   140027bda:	mov    BYTE PTR [rsp+0xa0],0xf
   140027be2:	mov    BYTE PTR [rsp+0xa1],r12b
   140027bea:	mov    r8d,0x2
   140027bf0:	mov    BYTE PTR [r15+0x66],0x0
   140027bf5:	mov    r10d,r14d
   140027bf8:	mov    DWORD PTR [rsp+0x44],r14d
   140027bfd:	cmp    r12d,0xd
   140027c01:	je     0x140027c0d
   140027c03:	cmp    r12d,0xa
   140027c07:	jne    0x140027e9d
   140027c0d:	xor    eax,eax
   140027c0f:	mov    r10d,r14d
   140027c12:	mov    DWORD PTR [rsp+0x44],r14d
   140027c17:	mov    DWORD PTR [r15+0x62],eax
   140027c1b:	mov    WORD PTR [r15+0x66],ax
   140027c20:	jmp    0x140027e9d
   140027c25:	test   r10d,r10d
   140027c28:	jne    0x140027c85
   140027c2a:	movzx  eax,BYTE PTR [r15+0x63]
   140027c2f:	test   al,al
   140027c31:	mov    ecx,eax
   140027c33:	cmove  ecx,edx
   140027c36:	mov    BYTE PTR [rsp+0x40],cl
   140027c3a:	cmp    DWORD PTR [r15+0x6c],r10d
   140027c3e:	jne    0x140027c57
   140027c40:	cmp    cl,0x1
   140027c43:	mov    ecx,0x21
   140027c48:	mov    eax,edx
   140027c4a:	cmove  eax,ecx
   140027c4d:	lea    r10d,[rcx-0x1f]
   140027c51:	mov    BYTE PTR [rsp+0x41],al
   140027c55:	jmp    0x140027c80
   140027c57:	movsx  ecx,cl
   140027c5a:	sub    ecx,0x1
   140027c5d:	je     0x140027c70
   140027c5f:	mov    BYTE PTR [rsp+0x41],0x1
   140027c64:	cmp    ecx,0x1
   140027c67:	jne    0x140027c75
   140027c69:	mov    BYTE PTR [rsp+0x42],0x21
   140027c6e:	jmp    0x140027c7a
   140027c70:	mov    BYTE PTR [rsp+0x41],0x21
   140027c75:	mov    BYTE PTR [rsp+0x42],0x2
   140027c7a:	mov    r10d,0x3
   140027c80:	mov    DWORD PTR [rsp+0x44],r10d
   140027c85:	mov    edi,r14d
   140027c88:	movzx  r14d,BYTE PTR [r13+0x3f]
   140027c8d:	movsxd rbx,r10d
   140027c90:	xor    r13d,r13d
   140027c93:	xor    bpl,bpl
   140027c96:	xor    sil,sil
   140027c99:	mov    QWORD PTR [rsp+0x58],rbx
   140027c9e:	test   r10d,r10d
   140027ca1:	jle    0x140028063
   140027ca7:	mov    rax,rbx
   140027caa:	nop    WORD PTR [rax+rax*1+0x0]
   140027cb0:	test   edi,edi
   140027cb2:	jg     0x140027dac
   140027cb8:	movzx  ebx,BYTE PTR [rsp+r13*1+0x40]
   140027cbe:	test   bl,bl
   140027cc0:	jle    0x140027d93
   140027cc6:	cmp    bl,0x20
   140027cc9:	movzx  r9d,r14b
   140027ccd:	lea    r8,[rsp+0x60]
   140027cd2:	jl     0x140027d50
   140027cd4:	mov    rcx,QWORD PTR [r15+0x18]
   140027cd8:	mov    edx,r12d
   140027cdb:	mov    DWORD PTR [rsp+0x20],0x2
   140027ce3:	call   0x140025cc0
   140027ce8:	cmp    eax,0x3
   140027ceb:	je     0x140027cfe
   140027ced:	cmp    eax,0xfffffffd
   140027cf0:	jne    0x140027d89
   140027cf6:	test   edi,edi
   140027cf8:	jne    0x140027d89
   140027cfe:	mov    r11d,DWORD PTR [rsp+0x60]
   140027d03:	mov    esi,r11d
   140027d06:	mov    DWORD PTR [rsp+0x48],r11d
   140027d0b:	shr    esi,0x10
   140027d0e:	sub    sil,0x60
   140027d12:	test   eax,eax
   140027d14:	js     0x140027d1d
   140027d16:	mov    edi,0x2
   140027d1b:	jmp    0x140027d25
   140027d1d:	mov    edi,0xfffffffe
   140027d22:	xor    r14b,r14b
   140027d25:	cmp    sil,0x21
   140027d29:	jne    0x140027d30
   140027d2b:	mov    bpl,0x1
   140027d2e:	jmp    0x140027d8e
   140027d30:	cmp    sil,0x22
   140027d34:	jne    0x140027d3b
   140027d36:	mov    bpl,0x2
   140027d39:	jmp    0x140027d8e
   140027d3b:	cmp    DWORD PTR [r15+0x6c],0x1
   140027d40:	mov    rax,QWORD PTR [rsp+0x58]
   140027d45:	jne    0x140027d4c
   140027d47:	mov    bpl,0x3
   140027d4a:	jmp    0x140027d93
   140027d4c:	xor    edi,edi
   140027d4e:	jmp    0x140027d93
   140027d50:	mov    DWORD PTR [rsp+0x20],edx
   140027d54:	movsx  rcx,bl
   140027d58:	mov    edx,r12d
   140027d5b:	mov    rcx,QWORD PTR [r15+rcx*8]
   140027d5f:	call   0x140025cc0
   140027d64:	cmp    eax,0x2
   140027d67:	je     0x140027d72
   140027d69:	cmp    eax,0xfffffffe
   140027d6c:	jne    0x140027d89
   140027d6e:	test   edi,edi
   140027d70:	jne    0x140027d89
   140027d72:	mov    r11d,DWORD PTR [rsp+0x60]
   140027d77:	mov    edi,eax
   140027d79:	mov    sil,bl
   140027d7c:	mov    bpl,0x1
   140027d7f:	xor    r14b,r14b
   140027d82:	mov    DWORD PTR [rsp+0x48],r11d
   140027d87:	jmp    0x140027d8e
   140027d89:	mov    r11d,DWORD PTR [rsp+0x48]
   140027d8e:	mov    rax,QWORD PTR [rsp+0x58]
   140027d93:	inc    r13
   140027d96:	mov    edx,0x1
   140027d9b:	cmp    r13,rax
   140027d9e:	jl     0x140027cb0
   140027da4:	test   edi,edi
   140027da6:	je     0x140028059
   140027dac:	xor    r14d,r14d
   140027daf:	movsx  rdx,bpl
   140027db3:	mov    r8d,r14d
   140027db6:	cmp    sil,BYTE PTR [rdx+r15*1+0x62]
   140027dbb:	je     0x140027e04
   140027dbd:	cmp    sil,0x3
   140027dc1:	movsx  rax,sil
   140027dc5:	lea    rcx,[rip+0x26c74]        # 0x14004ea40
   140027dcc:	jge    0x140027dd4
   140027dce:	mov    rax,QWORD PTR [rcx+rax*8]
   140027dd2:	jmp    0x140027ddc
   140027dd4:	mov    rax,QWORD PTR [rcx+rax*8-0xf0]
   140027ddc:	mov    r10d,DWORD PTR [rsp+0x44]
   140027de1:	mov    ecx,DWORD PTR [rax]
   140027de3:	cmp    bpl,0x1
   140027de7:	cmove  r10d,r14d
   140027deb:	mov    DWORD PTR [rsp+0xa0],ecx
   140027df2:	mov    r8d,0x4
   140027df8:	mov    DWORD PTR [rsp+0x44],r10d
   140027dfd:	mov    BYTE PTR [rdx+r15*1+0x62],sil
   140027e02:	jmp    0x140027e09
   140027e04:	mov    r10d,DWORD PTR [rsp+0x44]
   140027e09:	cmp    bpl,BYTE PTR [r15+0x66]
   140027e0d:	je     0x140027e52
   140027e0f:	movsx  ecx,bpl
   140027e13:	movsxd rax,r8d
   140027e16:	inc    r8d
   140027e19:	sub    ecx,0x1
   140027e1c:	je     0x140027e45
   140027e1e:	mov    BYTE PTR [rsp+rax*1+0xa0],0x1b
   140027e26:	movsxd rax,r8d
   140027e29:	inc    r8d
   140027e2c:	cmp    ecx,0x1
   140027e2f:	je     0x140027e3b
   140027e31:	mov    BYTE PTR [rsp+rax*1+0xa0],0x4f
   140027e39:	jmp    0x140027e52
   140027e3b:	mov    BYTE PTR [rsp+rax*1+0xa0],0x4e
   140027e43:	jmp    0x140027e52
   140027e45:	mov    BYTE PTR [rsp+rax*1+0xa0],0xe
   140027e4d:	mov    BYTE PTR [r15+0x66],0x1
   140027e52:	mov    r9,QWORD PTR [rsp+0x78]
   140027e57:	mov    rbx,QWORD PTR [rsp+0x68]
   140027e5c:	mov    r13,QWORD PTR [rsp+0x88]
   140027e64:	mov    rdi,QWORD PTR [rsp+0x90]
   140027e6c:	mov    rsi,QWORD PTR [rsp+0x98]
   140027e74:	mov    rbp,QWORD PTR [rsp+0x80]
   140027e7c:	movsxd rax,r8d
   140027e7f:	inc    r8d
   140027e82:	mov    ecx,r11d
   140027e85:	shr    ecx,0x8
   140027e88:	mov    BYTE PTR [rsp+rax*1+0xa0],cl
   140027e8f:	movsxd rax,r8d
   140027e92:	inc    r8d
   140027e95:	mov    BYTE PTR [rsp+rax*1+0xa0],r11b
   140027e9d:	cmp    r8d,0x1
   140027ea1:	jne    0x140027ee8
   140027ea3:	movzx  eax,BYTE PTR [rsp+0xa0]
   140027eab:	mov    r8,QWORD PTR [rsp+0x70]
   140027eb0:	inc    r9
   140027eb3:	mov    BYTE PTR [r9-0x1],al
   140027eb7:	mov    rcx,QWORD PTR [rsp+0x50]
   140027ebc:	mov    QWORD PTR [rsp+0x78],r9
   140027ec1:	mov    edx,0x1
   140027ec6:	test   rcx,rcx
   140027ec9:	je     0x140027b36
   140027ecf:	mov    rax,rbx
   140027ed2:	sub    rax,QWORD PTR [rdi+0x10]
   140027ed6:	sar    rax,1
   140027ed9:	dec    eax
   140027edb:	mov    DWORD PTR [rcx],eax
   140027edd:	add    QWORD PTR [rsp+0x50],0x4
   140027ee3:	jmp    0x140027b36
   140027ee8:	cmp    r8d,0x2
   140027eec:	jne    0x140027f63
   140027eee:	lea    rax,[r9+0x2]
   140027ef2:	cmp    rax,rbp
   140027ef5:	ja     0x140027f63
   140027ef7:	movzx  eax,BYTE PTR [rsp+0xa0]
   140027eff:	mov    r8,QWORD PTR [rsp+0x70]
   140027f04:	add    r9,0x2
   140027f08:	mov    BYTE PTR [r9-0x2],al
   140027f0c:	movzx  eax,BYTE PTR [rsp+0xa1]
   140027f14:	mov    QWORD PTR [rsp+0x78],r9
   140027f19:	mov    BYTE PTR [r9-0x1],al
   140027f1d:	mov    rdx,QWORD PTR [rsp+0x50]
   140027f22:	test   rdx,rdx
   140027f25:	je     0x140027b31
   140027f2b:	mov    eax,r14d
   140027f2e:	mov    rcx,rbx
   140027f31:	sub    rcx,QWORD PTR [rdi+0x10]
   140027f35:	sar    rcx,1
   140027f38:	cmp    r12d,0xffff
   140027f3f:	seta   al
   140027f42:	inc    eax
   140027f44:	sub    ecx,eax
   140027f46:	mov    DWORD PTR [rdx],ecx
   140027f48:	mov    rax,QWORD PTR [rsp+0x50]
   140027f4d:	add    rax,0x4
   140027f51:	mov    QWORD PTR [rsp+0x50],rax
   140027f56:	mov    DWORD PTR [rax],ecx
   140027f58:	add    QWORD PTR [rsp+0x50],0x4
   140027f5e:	jmp    0x140027b31
   140027f63:	mov    eax,r14d
   140027f66:	mov    QWORD PTR [rsp+0x38],rsi
   140027f6b:	mov    QWORD PTR [rsp+0x68],r9
   140027f70:	mov    rcx,rbx
   140027f73:	lea    r9,[rsp+0x68]
   140027f78:	lea    rdx,[rsp+0xa0]
   140027f80:	sub    rcx,QWORD PTR [rdi+0x10]
   140027f84:	sar    rcx,1
   140027f87:	cmp    r12d,0xffff
   140027f8e:	seta   al
   140027f91:	inc    eax
   140027f93:	sub    ecx,eax
   140027f95:	lea    rax,[rsp+0x50]
   140027f9a:	mov    DWORD PTR [rsp+0x30],ecx
   140027f9e:	mov    QWORD PTR [rsp+0x28],rax
   140027fa3:	mov    rcx,r13
   140027fa6:	mov    QWORD PTR [rsp+0x20],rbp
   140027fab:	call   0x14002a710
   140027fb0:	cmp    DWORD PTR [rsi],0x0
   140027fb3:	mov    r9,QWORD PTR [rsp+0x68]
   140027fb8:	mov    QWORD PTR [rsp+0x78],r9
   140027fbd:	jg     0x1400280e7
   140027fc3:	mov    r10d,DWORD PTR [rsp+0x44]
   140027fc8:	mov    r11d,DWORD PTR [rsp+0x48]
   140027fcd:	mov    r8,QWORD PTR [rsp+0x70]
   140027fd2:	jmp    0x140027b31
   140027fd7:	mov    DWORD PTR [rsi],0xc
   140027fdd:	mov    DWORD PTR [r13+0x54],r12d
   140027fe1:	cmp    DWORD PTR [rsi],0x0
   140027fe4:	jg     0x1400280e7
   140027fea:	cmp    BYTE PTR [r15+0x66],0x0
   140027fef:	je     0x1400280e7
   140027ff5:	cmp    BYTE PTR [rdi+0x2],0x0
   140027ff9:	je     0x1400280e7
   140027fff:	cmp    rbx,r8
   140028002:	jb     0x1400280e7
   140028008:	cmp    DWORD PTR [r13+0x54],0x0
   14002800d:	jne    0x1400280e7
   140028013:	mov    BYTE PTR [r15+0x66],0x0
   140028018:	mov    rdx,QWORD PTR [rdi+0x10]
   14002801c:	mov    rcx,rbx
   14002801f:	sub    rcx,rdx
   140028022:	sar    rcx,1
   140028025:	test   ecx,ecx
   140028027:	jle    0x14002809f
   140028029:	dec    ecx
   14002802b:	movsxd r8,ecx
   14002802e:	movzx  eax,WORD PTR [rdx+r8*2]
   140028033:	and    eax,0xfffffc00
   140028038:	cmp    eax,0xdc00
   14002803d:	jne    0x1400280a2
   14002803f:	test   ecx,ecx
   140028041:	je     0x140028055
   140028043:	movzx  eax,WORD PTR [rdx+r8*2-0x2]
   140028049:	and    eax,0xfffffc00
   14002804e:	cmp    eax,0xd800
   140028053:	jne    0x1400280a2
   140028055:	dec    ecx
   140028057:	jmp    0x1400280a2
   140028059:	mov    r9,QWORD PTR [rsp+0x78]
   14002805e:	mov    r8,QWORD PTR [rsp+0x70]
   140028063:	mov    rsi,QWORD PTR [rsp+0x98]
   14002806b:	mov    r13,QWORD PTR [rsp+0x88]
   140028073:	mov    rbx,QWORD PTR [rsp+0x68]
   140028078:	mov    rdi,QWORD PTR [rsp+0x90]
   140028080:	mov    rbp,QWORD PTR [rsp+0x80]
   140028088:	mov    DWORD PTR [rsi],0xa
   14002808e:	mov    DWORD PTR [r13+0x54],r12d
   140028092:	jmp    0x140027fe1
   140028097:	mov    DWORD PTR [rsi],0xf
   14002809d:	jmp    0x1400280e7
   14002809f:	or     ecx,0xffffffff
   1400280a2:	mov    QWORD PTR [rsp+0x38],rsi
   1400280a7:	mov    DWORD PTR [rsp+0x30],ecx
   1400280ab:	lea    rax,[rsp+0x50]
   1400280b0:	mov    QWORD PTR [rsp+0x80],r9
   1400280b8:	mov    QWORD PTR [rsp+0x28],rax
   1400280bd:	lea    rdx,[rip+0x264fc]        # 0x14004e5c0
   1400280c4:	lea    r9,[rsp+0x80]
   1400280cc:	mov    r8d,0x1
   1400280d2:	mov    rcx,r13
   1400280d5:	mov    QWORD PTR [rsp+0x20],rbp
   1400280da:	call   0x14002a710
   1400280df:	mov    r9,QWORD PTR [rsp+0x80]
   1400280e7:	mov    QWORD PTR [rdi+0x10],rbx
   1400280eb:	mov    QWORD PTR [rdi+0x20],r9
   1400280ef:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400280f7:	xor    rcx,rsp
   1400280fa:	call   0x14002b250
   1400280ff:	mov    rbx,QWORD PTR [rsp+0x100]
   140028107:	add    rsp,0xb0
   14002810e:	pop    r15
   140028110:	pop    r14
   140028112:	pop    r13
   140028114:	pop    r12
   140028116:	pop    rdi
   140028117:	pop    rsi
   140028118:	pop    rbp
   140028119:	ret    
   14002811a:	int3   
   14002811b:	int3   
   14002811c:	int3   
   14002811d:	int3   
   14002811e:	int3   
   14002811f:	int3   
   140028120:	mov    QWORD PTR [rsp+0x10],rbx
   140028125:	push   rbp
   140028126:	push   rsi
   140028127:	push   rdi
   140028128:	push   r12
   14002812a:	push   r13
   14002812c:	push   r14
   14002812e:	push   r15
   140028130:	sub    rsp,0x30
   140028134:	mov    rax,QWORD PTR [rcx+0x8]
   140028138:	mov    rbp,QWORD PTR [rcx+0x10]
   14002813c:	mov    rsi,QWORD PTR [rcx+0x20]
   140028140:	mov    rbx,QWORD PTR [rax+0x10]
   140028144:	mov    r14,QWORD PTR [rcx+0x18]
   140028148:	mov    r15,rdx
   14002814b:	cmp    DWORD PTR [rbx+0x68],0x0
   14002814f:	mov    r13,rcx
   140028152:	mov    QWORD PTR [rsp+0x80],rbp
   14002815a:	jne    0x14002818b
   14002815c:	cmp    BYTE PTR [rax+0x40],0x1
   140028160:	jne    0x140028200
   140028166:	cmp    rbp,r14
   140028169:	jae    0x1400284fb
   14002816f:	cmp    rsi,QWORD PTR [rcx+0x28]
   140028173:	jae    0x140028200
   140028179:	movzx  edi,BYTE PTR [rax+0x41]
   14002817d:	mov    edx,0xffff
   140028182:	mov    BYTE PTR [rax+0x40],0x0
   140028186:	jmp    0x1400282c1
   14002818b:	mov    rcx,QWORD PTR [r13+0x8]
   14002818f:	lea    rdx,[rsp+0x80]
   140028197:	mov    r9d,0x3
   14002819d:	movzx  r12d,BYTE PTR [rcx+0x40]
   1400281a2:	mov    r8,r14
   1400281a5:	mov    rdi,rbp
   1400281a8:	mov    QWORD PTR [rsp+0x20],r15
   1400281ad:	call   0x1400259b0
   1400281b2:	cmp    DWORD PTR [rbx+0x68],0x0
   1400281b6:	mov    rbp,QWORD PTR [rsp+0x80]
   1400281be:	jne    0x1400281f6
   1400281c0:	cmp    DWORD PTR [r15],0x0
   1400281c4:	jg     0x140028505
   1400281ca:	cmp    BYTE PTR [rbx+0x70],0x0
   1400281ce:	je     0x1400281f6
   1400281d0:	mov    DWORD PTR [r15],0x12
   1400281d7:	mov    rax,QWORD PTR [r13+0x8]
   1400281db:	movzx  ecx,bpl
   1400281df:	mov    DWORD PTR [rax+0x11c],0x2
   1400281e9:	mov    rax,QWORD PTR [r13+0x8]
   1400281ed:	sub    cl,dil
   1400281f0:	add    cl,r12b
   1400281f3:	mov    BYTE PTR [rax+0x40],cl
   1400281f6:	cmp    DWORD PTR [r15],0x0
   1400281fa:	jg     0x140028505
   140028200:	cmp    rbp,r14
   140028203:	jae    0x1400284fb
   140028209:	mov    edx,0xffff
   14002820e:	cmp    rsi,QWORD PTR [r13+0x28]
   140028212:	jae    0x1400284f4
   140028218:	movzx  edi,BYTE PTR [rbp+0x0]
   14002821c:	inc    rbp
   14002821f:	mov    eax,edi
   140028221:	sub    eax,0xa
   140028224:	je     0x1400282a1
   140028226:	sub    eax,0x3
   140028229:	je     0x1400282a1
   14002822b:	sub    eax,0x1
   14002822e:	je     0x14002828a
   140028230:	sub    eax,0x1
   140028233:	je     0x14002824a
   140028235:	cmp    eax,0xc
   140028238:	jne    0x1400282aa
   14002823a:	dec    rbp
   14002823d:	mov    QWORD PTR [rsp+0x80],rbp
   140028245:	jmp    0x14002818b
   14002824a:	mov    BYTE PTR [rbx+0x60],0x0
   14002824e:	cmp    BYTE PTR [rbx+0x70],0x0
   140028252:	je     0x140028200
   140028254:	mov    BYTE PTR [rbx+0x70],0x0
   140028258:	mov    DWORD PTR [r15],0x12
   14002825f:	mov    rax,QWORD PTR [r13+0x8]
   140028263:	mov    DWORD PTR [rax+0x11c],0x2
   14002826d:	mov    rax,QWORD PTR [r13+0x8]
   140028271:	mov    BYTE PTR [rax+0x41],0xf
   140028275:	mov    rax,QWORD PTR [r13+0x8]
   140028279:	mov    BYTE PTR [rax+0x40],0x1
   14002827d:	mov    QWORD PTR [r13+0x20],rsi
   140028281:	mov    QWORD PTR [r13+0x10],rbp
   140028285:	jmp    0x140028511
   14002828a:	cmp    BYTE PTR [rbx+0x5d],0x0
   14002828e:	je     0x140028490
   140028294:	mov    BYTE PTR [rbx+0x60],0x1
   140028298:	mov    BYTE PTR [rbx+0x70],0x1
   14002829c:	jmp    0x140028200
   1400282a1:	xor    eax,eax
   1400282a3:	mov    DWORD PTR [rbx+0x5c],eax
   1400282a6:	mov    WORD PTR [rbx+0x60],ax
   1400282aa:	mov    BYTE PTR [rbx+0x70],0x0
   1400282ae:	cmp    BYTE PTR [rbx+0x60],0x0
   1400282b2:	je     0x140028379
   1400282b8:	cmp    rbp,r14
   1400282bb:	jae    0x1400284b2
   1400282c1:	movzx  r12d,BYTE PTR [rbp+0x0]
   1400282c6:	xor    ecx,ecx
   1400282c8:	lea    eax,[r12-0x21]
   1400282cd:	cmp    al,0x5d
   1400282cf:	lea    eax,[rdi-0x21]
   1400282d2:	setbe  cl
   1400282d5:	cmp    al,0x5d
   1400282d7:	ja     0x14002833e
   1400282d9:	test   ecx,ecx
   1400282db:	je     0x140028342
   1400282dd:	movsx  rax,BYTE PTR [rbx+0x60]
   1400282e2:	inc    rbp
   1400282e5:	movsx  rcx,BYTE PTR [rax+rbx*1+0x5c]
   1400282eb:	cmp    ecx,0x20
   1400282ee:	jl     0x14002830d
   1400282f0:	mov    rax,QWORD PTR [rbx+0x18]
   1400282f4:	add    cl,0x60
   1400282f7:	mov    r8d,0x3
   1400282fd:	mov    BYTE PTR [rsp+0x71],dil
   140028302:	mov    BYTE PTR [rsp+0x72],r12b
   140028307:	mov    BYTE PTR [rsp+0x70],cl
   14002830b:	jmp    0x140028321
   14002830d:	mov    rax,QWORD PTR [rbx+rcx*8]
   140028311:	mov    r8d,0x2
   140028317:	mov    BYTE PTR [rsp+0x70],dil
   14002831c:	mov    BYTE PTR [rsp+0x71],r12b
   140028321:	lea    rdx,[rsp+0x70]
   140028326:	xor    r9d,r9d
   140028329:	mov    rcx,rax
   14002832c:	call   0x140016140
   140028331:	shl    edi,0x8
   140028334:	movzx  ecx,r12b
   140028338:	mov    edx,eax
   14002833a:	or     edi,ecx
   14002833c:	jmp    0x14002836a
   14002833e:	test   ecx,ecx
   140028340:	jne    0x14002836a
   140028342:	cmp    r12b,0x20
   140028346:	jae    0x14002835a
   140028348:	movzx  ecx,r12b
   14002834c:	mov    eax,0x1
   140028351:	shl    eax,cl
   140028353:	test   eax,0x800c000
   140028358:	jne    0x14002836a
   14002835a:	bts    edi,0x8
   14002835e:	movzx  eax,r12b
   140028362:	inc    rbp
   140028365:	shl    edi,0x8
   140028368:	or     edi,eax
   14002836a:	cmp    BYTE PTR [rbx+0x60],0x2
   14002836e:	jl     0x140028384
   140028370:	movzx  eax,BYTE PTR [rbx+0x61]
   140028374:	mov    BYTE PTR [rbx+0x60],al
   140028377:	jmp    0x140028384
   140028379:	cmp    edi,0x7f
   14002837c:	ja     0x140028494
   140028382:	mov    edx,edi
   140028384:	cmp    edx,0xfffe
   14002838a:	jae    0x1400283c4
   14002838c:	mov    r8,QWORD PTR [r13+0x30]
   140028390:	test   r8,r8
   140028393:	je     0x1400283b8
   140028395:	xor    eax,eax
   140028397:	cmp    edi,0xff
   14002839d:	mov    ecx,ebp
   14002839f:	seta   al
   1400283a2:	inc    eax
   1400283a4:	sub    ecx,eax
   1400283a6:	mov    rax,rsi
   1400283a9:	sub    rax,QWORD PTR [r13+0x20]
   1400283ad:	sub    ecx,DWORD PTR [r13+0x10]
   1400283b1:	sar    rax,1
   1400283b4:	mov    DWORD PTR [r8+rax*4],ecx
   1400283b8:	mov    WORD PTR [rsi],dx
   1400283bb:	add    rsi,0x2
   1400283bf:	jmp    0x140028200
   1400283c4:	cmp    edx,0xffff
   1400283ca:	jbe    0x140028494
   1400283d0:	add    edx,0xffff0000
   1400283d6:	mov    ecx,0x2800
   1400283db:	mov    eax,edx
   1400283dd:	shr    eax,0xa
   1400283e0:	sub    ax,cx
   1400283e3:	mov    WORD PTR [rsi],ax
   1400283e6:	mov    r8,QWORD PTR [r13+0x30]
   1400283ea:	test   r8,r8
   1400283ed:	je     0x140028412
   1400283ef:	xor    eax,eax
   1400283f1:	cmp    edi,0xff
   1400283f7:	mov    ecx,ebp
   1400283f9:	seta   al
   1400283fc:	inc    eax
   1400283fe:	sub    ecx,eax
   140028400:	mov    rax,rsi
   140028403:	sub    rax,QWORD PTR [r13+0x20]
   140028407:	sub    ecx,DWORD PTR [r13+0x10]
   14002840b:	sar    rax,1
   14002840e:	mov    DWORD PTR [r8+rax*4],ecx
   140028412:	add    rsi,0x2
   140028416:	cmp    rsi,QWORD PTR [r13+0x28]
   14002841a:	jae    0x140028463
   14002841c:	mov    ecx,0x3ff
   140028421:	and    dx,cx
   140028424:	mov    ecx,0x2400
   140028429:	sub    dx,cx
   14002842c:	mov    WORD PTR [rsi],dx
   14002842f:	mov    rdx,QWORD PTR [r13+0x30]
   140028433:	test   rdx,rdx
   140028436:	je     0x14002845a
   140028438:	xor    eax,eax
   14002843a:	cmp    edi,0xff
   140028440:	mov    ecx,ebp
   140028442:	seta   al
   140028445:	inc    eax
   140028447:	sub    ecx,eax
   140028449:	mov    rax,rsi
   14002844c:	sub    rax,QWORD PTR [r13+0x20]
   140028450:	sub    ecx,DWORD PTR [r13+0x10]
   140028454:	sar    rax,1
   140028457:	mov    DWORD PTR [rdx+rax*4],ecx
   14002845a:	add    rsi,0x2
   14002845e:	jmp    0x140028200
   140028463:	mov    rcx,QWORD PTR [r13+0x8]
   140028467:	mov    eax,0x3ff
   14002846c:	and    dx,ax
   14002846f:	mov    eax,0x2400
   140028474:	sub    dx,ax
   140028477:	movsx  rax,BYTE PTR [rcx+0x5d]
   14002847c:	mov    WORD PTR [rcx+rax*2+0x90],dx
   140028484:	mov    rax,QWORD PTR [r13+0x8]
   140028488:	inc    BYTE PTR [rax+0x5d]
   14002848b:	jmp    0x140028200
   140028490:	mov    BYTE PTR [rbx+0x70],0x0
   140028494:	mov    rcx,QWORD PTR [r13+0x8]
   140028498:	cmp    edi,0xff
   14002849e:	jbe    0x1400284cc
   1400284a0:	mov    eax,edi
   1400284a2:	mov    BYTE PTR [rcx+0x42],dil
   1400284a6:	mov    BYTE PTR [rcx+0x40],0x2
   1400284aa:	shr    eax,0x8
   1400284ad:	mov    BYTE PTR [rcx+0x41],al
   1400284b0:	jmp    0x1400284d4
   1400284b2:	mov    rax,QWORD PTR [r13+0x8]
   1400284b6:	mov    BYTE PTR [rax+0x41],dil
   1400284ba:	mov    rax,QWORD PTR [r13+0x8]
   1400284be:	mov    BYTE PTR [rax+0x40],0x1
   1400284c2:	mov    QWORD PTR [r13+0x20],rsi
   1400284c6:	mov    QWORD PTR [r13+0x10],rbp
   1400284ca:	jmp    0x140028511
   1400284cc:	mov    BYTE PTR [rcx+0x41],dil
   1400284d0:	mov    BYTE PTR [rcx+0x40],0x1
   1400284d4:	mov    eax,0xc
   1400284d9:	mov    ecx,0xa
   1400284de:	cmp    edx,0xfffe
   1400284e4:	cmove  eax,ecx
   1400284e7:	mov    DWORD PTR [r15],eax
   1400284ea:	mov    QWORD PTR [r13+0x20],rsi
   1400284ee:	mov    QWORD PTR [r13+0x10],rbp
   1400284f2:	jmp    0x140028511
   1400284f4:	mov    DWORD PTR [r15],0xf
   1400284fb:	mov    QWORD PTR [r13+0x20],rsi
   1400284ff:	mov    QWORD PTR [r13+0x10],rbp
   140028503:	jmp    0x140028511
   140028505:	mov    QWORD PTR [r13+0x20],rsi
   140028509:	mov    QWORD PTR [r13+0x10],rbp
   14002850d:	mov    BYTE PTR [rbx+0x70],0x0
   140028511:	mov    rbx,QWORD PTR [rsp+0x78]
   140028516:	add    rsp,0x30
   14002851a:	pop    r15
   14002851c:	pop    r14
   14002851e:	pop    r13
   140028520:	pop    r12
   140028522:	pop    rdi
   140028523:	pop    rsi
   140028524:	pop    rbp
   140028525:	ret    
   140028526:	int3   
   140028527:	int3   
   140028528:	int3   
   140028529:	int3   
   14002852a:	int3   
   14002852b:	int3   
   14002852c:	int3   
   14002852d:	int3   
   14002852e:	int3   
   14002852f:	int3   
   140028530:	rex push rbp
   140028532:	push   rsi
   140028533:	push   r12
   140028535:	push   r13
   140028537:	sub    rsp,0x48
   14002853b:	mov    rax,QWORD PTR [rip+0x3e36e]        # 0x1400668b0
   140028542:	xor    rax,rsp
   140028545:	mov    QWORD PTR [rsp+0x38],rax
   14002854a:	mov    rbp,QWORD PTR [rcx+0x8]
   14002854e:	mov    r13,r8
   140028551:	mov    r10d,edx
   140028554:	mov    rsi,QWORD PTR [rbp+0x10]
   140028558:	mov    rdx,QWORD PTR [rbp+0x28]
   14002855c:	movsx  r9d,BYTE PTR [rbp+0x59]
   140028561:	movsx  r8d,BYTE PTR [rsi+0x8f]
   140028569:	mov    r12,rcx
   14002856c:	lea    rcx,[rsp+0x30]
   140028571:	sub    r8d,0x63
   140028575:	je     0x1400286c0
   14002857b:	sub    r8d,0x7
   14002857f:	je     0x14002868b
   140028585:	cmp    r8d,0x1
   140028589:	jne    0x1400286dd
   14002858f:	cmp    DWORD PTR [rsi+0x6c],0x0
   140028593:	jne    0x1400285dd
   140028595:	cmp    r9d,r8d
   140028598:	jne    0x1400285b0
   14002859a:	cmp    BYTE PTR [rbp+0x50],0x0
   14002859e:	je     0x1400286d4
   1400285a4:	mov    DWORD PTR [rbp+0x50],0x0
   1400285ab:	jmp    0x1400286ca
   1400285b0:	cmp    BYTE PTR [rbp+0x50],0x0
   1400285b4:	jne    0x1400285c7
   1400285b6:	mov    DWORD PTR [rbp+0x50],0x1
   1400285bd:	lea    rcx,[rsp+0x31]
   1400285c2:	mov    BYTE PTR [rsp+0x30],0xe
   1400285c7:	movzx  eax,BYTE PTR [rdx]
   1400285ca:	add    rcx,0x2
   1400285ce:	mov    BYTE PTR [rcx-0x2],al
   1400285d1:	movzx  eax,BYTE PTR [rdx+0x1]
   1400285d5:	mov    BYTE PTR [rcx-0x1],al
   1400285d8:	jmp    0x1400286dd
   1400285dd:	mov    rax,QWORD PTR [rsi+0x50]
   1400285e1:	mov    QWORD PTR [rsp+0x88],rbx
   1400285e9:	mov    QWORD PTR [rsp+0x40],rdi
   1400285ee:	mov    rbx,QWORD PTR [rax+0x28]
   1400285f2:	movzx  edi,BYTE PTR [rax+0x59]
   1400285f6:	mov    QWORD PTR [rax+0x28],rdx
   1400285fa:	mov    rax,QWORD PTR [rsi+0x50]
   1400285fe:	mov    r8,r13
   140028601:	xor    edx,edx
   140028603:	mov    BYTE PTR [rax+0x59],r9b
   140028607:	mov    rax,QWORD PTR [rsi+0x50]
   14002860b:	mov    QWORD PTR [r12+0x8],rax
   140028610:	mov    rcx,QWORD PTR [rsi+0x50]
   140028614:	mov    eax,DWORD PTR [rbp+0x54]
   140028617:	mov    DWORD PTR [rcx+0x54],eax
   14002861a:	mov    rcx,r12
   14002861d:	call   0x140018f40
   140028622:	mov    r11,QWORD PTR [rsi+0x50]
   140028626:	mov    eax,DWORD PTR [r11+0x54]
   14002862a:	mov    DWORD PTR [rbp+0x54],eax
   14002862d:	mov    QWORD PTR [r12+0x8],rbp
   140028632:	mov    rax,QWORD PTR [rsi+0x50]
   140028636:	mov    QWORD PTR [rax+0x28],rbx
   14002863a:	mov    rax,QWORD PTR [rsi+0x50]
   14002863e:	mov    rbx,QWORD PTR [rsp+0x88]
   140028646:	mov    BYTE PTR [rax+0x59],dil
   14002864a:	cmp    DWORD PTR [r13+0x0],0xf
   14002864f:	mov    rdi,QWORD PTR [rsp+0x40]
   140028654:	jne    0x1400286fc
   14002865a:	mov    rax,QWORD PTR [rsi+0x50]
   14002865e:	cmp    BYTE PTR [rax+0x5b],0x0
   140028662:	jle    0x140028676
   140028664:	movsx  r8,BYTE PTR [rax+0x5b]
   140028669:	lea    rdx,[rax+0x68]
   14002866d:	lea    rcx,[rbp+0x68]
   140028671:	call   0x14002b9a0
   140028676:	mov    rax,QWORD PTR [rsi+0x50]
   14002867a:	movzx  ecx,BYTE PTR [rax+0x5b]
   14002867e:	mov    BYTE PTR [rbp+0x5b],cl
   140028681:	mov    rax,QWORD PTR [rsi+0x50]
   140028685:	mov    BYTE PTR [rax+0x5b],0x0
   140028689:	jmp    0x1400286fc
   14002868b:	cmp    BYTE PTR [rsi+0x66],0x1
   14002868f:	jne    0x14002869f
   140028691:	mov    BYTE PTR [rsi+0x66],0x0
   140028695:	lea    rcx,[rsp+0x31]
   14002869a:	mov    BYTE PTR [rsp+0x30],0xf
   14002869f:	movzx  eax,BYTE PTR [rsi+0x62]
   1400286a3:	test   al,al
   1400286a5:	je     0x1400286d4
   1400286a7:	cmp    al,0x3
   1400286a9:	je     0x1400286d4
   1400286ab:	mov    BYTE PTR [rsi+0x62],0x0
   1400286af:	mov    BYTE PTR [rcx],0x1b
   1400286b2:	mov    BYTE PTR [rcx+0x1],0x28
   1400286b6:	mov    BYTE PTR [rcx+0x2],0x42
   1400286ba:	add    rcx,0x3
   1400286be:	jmp    0x1400286d4
   1400286c0:	cmp    BYTE PTR [rsi+0x66],0x0
   1400286c4:	je     0x1400286d4
   1400286c6:	mov    BYTE PTR [rsi+0x66],0x0
   1400286ca:	mov    BYTE PTR [rsp+0x30],0xf
   1400286cf:	lea    rcx,[rsp+0x31]
   1400286d4:	movzx  eax,BYTE PTR [rdx]
   1400286d7:	inc    rcx
   1400286da:	mov    BYTE PTR [rcx-0x1],al
   1400286dd:	lea    rax,[rsp+0x30]
   1400286e2:	lea    rdx,[rsp+0x30]
   1400286e7:	mov    r9d,r10d
   1400286ea:	sub    ecx,eax
   1400286ec:	mov    QWORD PTR [rsp+0x20],r13
   1400286f1:	mov    r8d,ecx
   1400286f4:	mov    rcx,r12
   1400286f7:	call   0x140018db0
   1400286fc:	mov    rcx,QWORD PTR [rsp+0x38]
   140028701:	xor    rcx,rsp
   140028704:	call   0x14002b250
   140028709:	add    rsp,0x48
   14002870d:	pop    r13
   14002870f:	pop    r12
   140028711:	pop    rsi
   140028712:	pop    rbp
   140028713:	ret    
   140028714:	int3   
   140028715:	int3   
   140028716:	int3   
   140028717:	int3   
   140028718:	int3   
   140028719:	int3   
   14002871a:	int3   
   14002871b:	int3   
   14002871c:	int3   
   14002871d:	int3   
   14002871e:	int3   
   14002871f:	int3   
   140028720:	mov    QWORD PTR [rsp+0x20],rbp
   140028725:	push   rsi
   140028726:	sub    rsp,0x20
   14002872a:	cmp    DWORD PTR [r8],0x0
   14002872e:	mov    rbp,r9
   140028731:	mov    rsi,rdx
   140028734:	jne    0x14002874a
   140028736:	mov    DWORD PTR [r8],0x2e0
   14002873d:	xor    eax,eax
   14002873f:	mov    rbp,QWORD PTR [rsp+0x48]
   140028744:	add    rsp,0x20
   140028748:	pop    rsi
   140028749:	ret    
   14002874a:	mov    QWORD PTR [rsp+0x30],rbx
   14002874f:	lea    rbx,[rdx+0x248]
   140028756:	mov    QWORD PTR [rsp+0x38],rdi
   14002875b:	mov    rdi,QWORD PTR [rcx+0x10]
   14002875f:	mov    r8d,0x98
   140028765:	mov    rcx,rbx
   140028768:	mov    rdx,rdi
   14002876b:	call   0x14002b9a0
   140028770:	mov    QWORD PTR [rsi+0x10],rbx
   140028774:	mov    BYTE PTR [rsi+0x3e],0x1
   140028778:	cmp    QWORD PTR [rdi+0x50],0x0
   14002877d:	je     0x1400287b0
   14002877f:	mov    DWORD PTR [rsp+0x40],0x128
   140028787:	mov    rcx,QWORD PTR [rdi+0x50]
   14002878b:	lea    rdx,[rsi+0x120]
   140028792:	lea    r8,[rsp+0x40]
   140028797:	mov    r9,rbp
   14002879a:	call   0x14000dbf0
   14002879f:	mov    QWORD PTR [rsi+0x298],rax
   1400287a6:	cmp    DWORD PTR [rbp+0x0],0x0
   1400287aa:	jle    0x1400287b0
   1400287ac:	xor    eax,eax
   1400287ae:	jmp    0x1400287cc
   1400287b0:	xor    ebx,ebx
   1400287b2:	mov    rcx,QWORD PTR [rdi+rbx*8]
   1400287b6:	test   rcx,rcx
   1400287b9:	je     0x1400287c0
   1400287bb:	call   0x1400116f0
   1400287c0:	inc    rbx
   1400287c3:	cmp    rbx,0xa
   1400287c7:	jl     0x1400287b2
   1400287c9:	mov    rax,rsi
   1400287cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400287d1:	mov    rdi,QWORD PTR [rsp+0x38]
   1400287d6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400287db:	add    rsp,0x20
   1400287df:	pop    rsi
   1400287e0:	ret    
   1400287e1:	int3   
   1400287e2:	int3   
   1400287e3:	int3   
   1400287e4:	int3   
   1400287e5:	int3   
   1400287e6:	int3   
   1400287e7:	int3   
   1400287e8:	int3   
   1400287e9:	int3   
   1400287ea:	int3   
   1400287eb:	int3   
   1400287ec:	int3   
   1400287ed:	int3   
   1400287ee:	int3   
   1400287ef:	int3   
   1400287f0:	rex push rbp
   1400287f2:	push   rdi
   1400287f3:	push   r12
   1400287f5:	sub    rsp,0x30
   1400287f9:	cmp    DWORD PTR [r9],0x0
   1400287fd:	mov    r12,r9
   140028800:	mov    ebp,r8d
   140028803:	mov    rdi,rdx
   140028806:	jg     0x140028983
   14002880c:	mov    QWORD PTR [rsp+0x50],rbx
   140028811:	mov    QWORD PTR [rsp+0x58],rsi
   140028816:	mov    rsi,QWORD PTR [rcx+0x10]
   14002881a:	movsx  ecx,BYTE PTR [rsi+0x8f]
   140028821:	mov    QWORD PTR [rsp+0x60],r13
   140028826:	sub    ecx,0x63
   140028829:	je     0x14002883a
   14002882b:	sub    ecx,0x7
   14002882e:	je     0x14002889f
   140028830:	sub    ecx,0x1
   140028833:	je     0x14002888d
   140028835:	cmp    ecx,0xf
   140028838:	jne    0x140028846
   14002883a:	mov    rcx,QWORD PTR [rdi]
   14002883d:	xor    edx,edx
   14002883f:	lea    r8d,[rdx+0x7f]
   140028843:	call   QWORD PTR [rdi+0x10]
   140028846:	xor    ebx,ebx
   140028848:	lea    r13d,[rbx+0x4]
   14002884c:	nop    DWORD PTR [rax+0x0]
   140028850:	mov    rcx,QWORD PTR [rsi+rbx*8]
   140028854:	test   rcx,rcx
   140028857:	je     0x140028937
   14002885d:	movzx  eax,BYTE PTR [rsi+0x8f]
   140028864:	cmp    al,0x63
   140028866:	je     0x140028870
   140028868:	cmp    al,0x7a
   14002886a:	jne    0x14002890b
   140028870:	cmp    DWORD PTR [rsi+0x6c],0x0
   140028874:	jne    0x14002890b
   14002887a:	cmp    rbx,0x3
   14002887e:	jne    0x14002890b
   140028884:	lea    r9d,[rbx-0x1]
   140028888:	jmp    0x140028927
   14002888d:	mov    rcx,QWORD PTR [rsi+0x50]
   140028891:	mov    rax,QWORD PTR [rcx+0x30]
   140028895:	mov    r10,QWORD PTR [rax+0x28]
   140028899:	call   QWORD PTR [r10+0x78]
   14002889d:	jmp    0x140028846
   14002889f:	mov    rcx,QWORD PTR [rdi]
   1400288a2:	mov    edx,0xa5
   1400288a7:	call   QWORD PTR [rdi+0x8]
   1400288aa:	mov    rcx,QWORD PTR [rdi]
   1400288ad:	mov    edx,0x203e
   1400288b2:	call   QWORD PTR [rdi+0x8]
   1400288b5:	mov    eax,DWORD PTR [rsi+0x6c]
   1400288b8:	lea    rcx,[rip+0x25d09]        # 0x14004e5c8
   1400288bf:	test   BYTE PTR [rcx+rax*2],0x2
   1400288c3:	je     0x1400288d5
   1400288c5:	mov    rcx,QWORD PTR [rdi]
   1400288c8:	xor    edx,edx
   1400288ca:	mov    r8d,0xff
   1400288d0:	call   QWORD PTR [rdi+0x10]
   1400288d3:	jmp    0x1400288e1
   1400288d5:	mov    rcx,QWORD PTR [rdi]
   1400288d8:	xor    edx,edx
   1400288da:	lea    r8d,[rdx+0x7f]
   1400288de:	call   QWORD PTR [rdi+0x10]
   1400288e1:	mov    eax,DWORD PTR [rsi+0x6c]
   1400288e4:	cmp    eax,0x3
   1400288e7:	je     0x1400288f7
   1400288e9:	cmp    eax,0x4
   1400288ec:	je     0x1400288f7
   1400288ee:	cmp    ebp,0x1
   1400288f1:	jne    0x140028846
   1400288f7:	mov    rcx,QWORD PTR [rdi]
   1400288fa:	mov    edx,0xff61
   1400288ff:	lea    r8d,[rdx+0x3e]
   140028903:	call   QWORD PTR [rdi+0x10]
   140028906:	jmp    0x140028846
   14002890b:	cmp    al,0x6a
   14002890d:	jne    0x14002891c
   14002890f:	cmp    rbx,r13
   140028912:	jne    0x14002891c
   140028914:	mov    r9d,0x3
   14002891a:	jmp    0x140028927
   14002891c:	xor    r9d,r9d
   14002891f:	cmp    rbx,0x7
   140028923:	cmove  r9d,r13d
   140028927:	mov    r8d,ebp
   14002892a:	mov    rdx,rdi
   14002892d:	mov    QWORD PTR [rsp+0x20],r12
   140028932:	call   0x1400131b0
   140028937:	inc    rbx
   14002893a:	cmp    rbx,0xa
   14002893e:	jl     0x140028850
   140028944:	mov    rcx,QWORD PTR [rdi]
   140028947:	mov    edx,0xe
   14002894c:	call   QWORD PTR [rdi+0x20]
   14002894f:	mov    rcx,QWORD PTR [rdi]
   140028952:	mov    edx,0xf
   140028957:	call   QWORD PTR [rdi+0x20]
   14002895a:	mov    rcx,QWORD PTR [rdi]
   14002895d:	mov    edx,0x1b
   140028962:	call   QWORD PTR [rdi+0x20]
   140028965:	mov    rcx,QWORD PTR [rdi]
   140028968:	mov    edx,0x80
   14002896d:	lea    r8d,[rdx+0x1f]
   140028971:	call   QWORD PTR [rdi+0x28]
   140028974:	mov    r13,QWORD PTR [rsp+0x60]
   140028979:	mov    rsi,QWORD PTR [rsp+0x58]
   14002897e:	mov    rbx,QWORD PTR [rsp+0x50]
   140028983:	add    rsp,0x30
   140028987:	pop    r12
   140028989:	pop    rdi
   14002898a:	pop    rbp
   14002898b:	ret    
   14002898c:	int3   
   14002898d:	int3   
   14002898e:	int3   
   14002898f:	int3   
   140028990:	mov    r11,rsp
   140028993:	push   rbx
   140028994:	push   rbp
   140028995:	push   r12
   140028997:	push   r13
   140028999:	sub    rsp,0x158
   1400289a0:	mov    rax,QWORD PTR [rip+0x3df09]        # 0x1400668b0
   1400289a7:	xor    rax,rsp
   1400289aa:	mov    QWORD PTR [rsp+0x138],rax
   1400289b2:	mov    rbp,rcx
   1400289b5:	mov    ecx,0x98
   1400289ba:	mov    r12,r8
   1400289bd:	mov    r13,rdx
   1400289c0:	mov    BYTE PTR [r11-0x48],0x20
   1400289c5:	mov    BYTE PTR [r11-0x47],0x20
   1400289ca:	mov    BYTE PTR [r11-0x46],0x20
   1400289cf:	mov    BYTE PTR [r11-0x45],0x20
   1400289d4:	mov    BYTE PTR [r11-0x44],0x20
   1400289d9:	mov    BYTE PTR [r11-0x43],0x20
   1400289de:	call   0x140010940
   1400289e3:	mov    rbx,rax
   1400289e6:	mov    QWORD PTR [rbp+0x10],rax
   1400289ea:	test   rax,rax
   1400289ed:	je     0x140028f36
   1400289f3:	xor    eax,eax
   1400289f5:	xor    edx,edx
   1400289f7:	mov    r8d,0x98
   1400289fd:	mov    DWORD PTR [rsp+0x28],eax
   140028a01:	mov    DWORD PTR [rsp+0x24],eax
   140028a05:	mov    DWORD PTR [rsp+0x2c],eax
   140028a09:	mov    DWORD PTR [rsp+0x30],eax
   140028a0d:	mov    DWORD PTR [rsp+0x34],eax
   140028a11:	mov    DWORD PTR [rsp+0x38],eax
   140028a15:	mov    DWORD PTR [rsp+0x3c],eax
   140028a19:	mov    DWORD PTR [rsp+0x40],eax
   140028a1d:	mov    DWORD PTR [rsp+0x44],eax
   140028a21:	movzx  eax,BYTE PTR [r13+0x8]
   140028a26:	mov    rcx,rbx
   140028a29:	mov    QWORD PTR [rsp+0x148],rdi
   140028a31:	mov    QWORD PTR [rsp+0x140],r14
   140028a39:	mov    DWORD PTR [rsp+0x20],0x28
   140028a41:	mov    BYTE PTR [rsp+0x28],al
   140028a45:	call   0x14002b280
   140028a4a:	xor    r14d,r14d
   140028a4d:	mov    DWORD PTR [rbx+0x58],r14d
   140028a51:	mov    DWORD PTR [rbp+0x50],r14d
   140028a55:	mov    rdx,QWORD PTR [r13+0x20]
   140028a59:	test   rdx,rdx
   140028a5c:	je     0x140028a6f
   140028a5e:	lea    r8d,[r14+0x6]
   140028a62:	lea    rcx,[rsp+0x130]
   140028a6a:	call   0x14002b0d0
   140028a6f:	mov    edi,DWORD PTR [r13+0xc]
   140028a73:	mov    QWORD PTR [rsp+0x150],rsi
   140028a7b:	and    edi,0xf
   140028a7e:	mov    DWORD PTR [rbx+0x6c],edi
   140028a81:	movzx  eax,BYTE PTR [rsp+0x130]
   140028a89:	cmp    al,0x6a
   140028a8b:	jne    0x140028bf7
   140028a91:	movzx  eax,BYTE PTR [rsp+0x131]
   140028a99:	cmp    al,0x61
   140028a9b:	je     0x140028aa5
   140028a9d:	cmp    al,0x70
   140028a9f:	jne    0x140028dd1
   140028aa5:	movzx  eax,BYTE PTR [rsp+0x132]
   140028aad:	cmp    al,0x5f
   140028aaf:	je     0x140028ab9
   140028ab1:	test   al,al
   140028ab3:	jne    0x140028dd1
   140028ab9:	cmp    edi,0x4
   140028abc:	jbe    0x140028ac5
   140028abe:	mov    edi,r14d
   140028ac1:	mov    DWORD PTR [rbx+0x6c],r14d
   140028ac5:	lea    rsi,[rip+0xfffffffffffd7534]        # 0x140000000
   140028acc:	test   BYTE PTR [rsi+rdi*2+0x4e5c8],0x4
   140028ad4:	je     0x140028af3
   140028ad6:	lea    r8,[rsp+0x20]
   140028adb:	lea    rdx,[rsp+0x50]
   140028ae0:	lea    rcx,[rip+0x26959]        # 0x14004f440
   140028ae7:	mov    r9,r12
   140028aea:	call   0x140011fb0
   140028aef:	mov    QWORD PTR [rbx+0x10],rax
   140028af3:	lea    r8,[rsp+0x20]
   140028af8:	lea    rdx,[rsp+0x50]
   140028afd:	lea    rcx,[rip+0x2692c]        # 0x14004f430
   140028b04:	mov    r9,r12
   140028b07:	call   0x140011fb0
   140028b0c:	mov    QWORD PTR [rbx+0x20],rax
   140028b10:	test   BYTE PTR [rsi+rdi*2+0x4e5c8],0x20
   140028b18:	je     0x140028b37
   140028b1a:	lea    r8,[rsp+0x20]
   140028b1f:	lea    rdx,[rsp+0x50]
   140028b24:	lea    rcx,[rip+0x268f5]        # 0x14004f420
   140028b2b:	mov    r9,r12
   140028b2e:	call   0x140011fb0
   140028b33:	mov    QWORD PTR [rbx+0x28],rax
   140028b37:	test   BYTE PTR [rsi+rdi*2+0x4e5c8],0x40
   140028b3f:	je     0x140028b5e
   140028b41:	lea    r8,[rsp+0x20]
   140028b46:	lea    rdx,[rsp+0x50]
   140028b4b:	lea    rcx,[rip+0x19cb6]        # 0x140042808
   140028b52:	mov    r9,r12
   140028b55:	call   0x140011fb0
   140028b5a:	mov    QWORD PTR [rbx+0x30],rax
   140028b5e:	test   BYTE PTR [rsi+rdi*2+0x4e5c8],0x80
   140028b66:	je     0x140028b85
   140028b68:	lea    r8,[rsp+0x20]
   140028b6d:	lea    rdx,[rsp+0x50]
   140028b72:	lea    rcx,[rip+0x26897]        # 0x14004f410
   140028b79:	mov    r9,r12
   140028b7c:	call   0x140011fb0
   140028b81:	mov    QWORD PTR [rbx+0x38],rax
   140028b85:	lea    rdi,[rbx+0x71]
   140028b89:	lea    rax,[rip+0x26230]        # 0x14004edc0
   140028b90:	or     rcx,0xffffffffffffffff
   140028b94:	mov    QWORD PTR [rbp+0x30],rax
   140028b98:	movzx  eax,WORD PTR [rsi+0x46380]
   140028b9f:	mov    WORD PTR [rbx+0x8f],ax
   140028ba6:	movzx  eax,BYTE PTR [rsi+0x46382]
   140028bad:	mov    BYTE PTR [rbx+0x91],al
   140028bb3:	mov    rax,QWORD PTR [rsi+0x4f3f0]
   140028bba:	mov    QWORD PTR [rdi],rax
   140028bbd:	mov    rax,QWORD PTR [rsi+0x4f3f8]
   140028bc4:	mov    QWORD PTR [rdi+0x8],rax
   140028bc8:	mov    rax,QWORD PTR [rsi+0x4f400]
   140028bcf:	mov    QWORD PTR [rdi+0x10],rax
   140028bd3:	mov    eax,DWORD PTR [rsi+0x4f408]
   140028bd9:	mov    DWORD PTR [rdi+0x18],eax
   140028bdc:	xor    eax,eax
   140028bde:	repnz scas al,BYTE PTR es:[rdi]
   140028be0:	movzx  eax,BYTE PTR [rbx+0x6c]
   140028be4:	not    rcx
   140028be7:	add    al,0x30
   140028be9:	mov    BYTE PTR [rcx+rbx*1+0x70],al
   140028bed:	mov    BYTE PTR [rcx+rbx*1+0x71],r14b
   140028bf2:	jmp    0x140028f0a
   140028bf7:	cmp    al,0x6b
   140028bf9:	jne    0x140028dc3
   140028bff:	movzx  eax,BYTE PTR [rsp+0x131]
   140028c07:	cmp    al,0x6f
   140028c09:	je     0x140028c13
   140028c0b:	cmp    al,0x72
   140028c0d:	jne    0x140028dd1
   140028c13:	movzx  eax,BYTE PTR [rsp+0x132]
   140028c1b:	cmp    al,0x5f
   140028c1d:	je     0x140028c27
   140028c1f:	test   al,al
   140028c21:	jne    0x140028dd1
   140028c27:	cmp    edi,0x1
   140028c2a:	jne    0x140028c35
   140028c2c:	lea    rcx,[rip+0x267a5]        # 0x14004f3d8
   140028c33:	jmp    0x140028c43
   140028c35:	lea    rcx,[rip+0x26794]        # 0x14004f3d0
   140028c3c:	mov    edi,r14d
   140028c3f:	mov    DWORD PTR [rbx+0x6c],r14d
   140028c43:	cmp    BYTE PTR [r13+0x8],r14b
   140028c47:	je     0x140028c94
   140028c49:	mov    rdx,r12
   140028c4c:	call   0x140012290
   140028c51:	mov    rcx,QWORD PTR [rbp+0x10]
   140028c55:	call   0x140010a40
   140028c5a:	mov    QWORD PTR [rbp+0x10],r14
   140028c5e:	mov    rsi,QWORD PTR [rsp+0x150]
   140028c66:	mov    rdi,QWORD PTR [rsp+0x148]
   140028c6e:	mov    r14,QWORD PTR [rsp+0x140]
   140028c76:	mov    rcx,QWORD PTR [rsp+0x138]
   140028c7e:	xor    rcx,rsp
   140028c81:	call   0x14002b250
   140028c86:	add    rsp,0x158
   140028c8d:	pop    r13
   140028c8f:	pop    r12
   140028c91:	pop    rbp
   140028c92:	pop    rbx
   140028c93:	ret    
   140028c94:	mov    rdx,r12
   140028c97:	call   0x14000dbd0
   140028c9c:	mov    QWORD PTR [rbx+0x50],rax
   140028ca0:	cmp    DWORD PTR [r12],r14d
   140028ca4:	mov    r11,rax
   140028ca7:	jg     0x140028f29
   140028cad:	cmp    edi,0x1
   140028cb0:	jne    0x140028d0f
   140028cb2:	lea    rsi,[rip+0xfffffffffffd7347]        # 0x140000000
   140028cb9:	mov    rax,QWORD PTR [rsi+0x4f3b0]
   140028cc0:	mov    QWORD PTR [rbx+0x71],rax
   140028cc4:	mov    rax,QWORD PTR [rsi+0x4f3b8]
   140028ccb:	mov    QWORD PTR [rbx+0x79],rax
   140028ccf:	mov    rax,QWORD PTR [rsi+0x4f3c0]
   140028cd6:	mov    QWORD PTR [rbx+0x81],rax
   140028cdd:	mov    eax,DWORD PTR [rsi+0x4f3c8]
   140028ce3:	mov    DWORD PTR [rbx+0x89],eax
   140028ce9:	movzx  eax,BYTE PTR [rsi+0x4f3cc]
   140028cf0:	mov    BYTE PTR [rbx+0x8d],al
   140028cf6:	mov    rax,QWORD PTR [r11+0x28]
   140028cfa:	mov    rcx,QWORD PTR [rbp+0x28]
   140028cfe:	mov    eax,DWORD PTR [rax]
   140028d00:	mov    DWORD PTR [rcx],eax
   140028d02:	mov    rax,QWORD PTR [rbx+0x50]
   140028d06:	movzx  ecx,BYTE PTR [rax+0x59]
   140028d0a:	mov    BYTE PTR [rbp+0x59],cl
   140028d0d:	jmp    0x140028d53
   140028d0f:	lea    rsi,[rip+0xfffffffffffd72ea]        # 0x140000000
   140028d16:	mov    rax,QWORD PTR [rsi+0x3ec88]
   140028d1d:	mov    QWORD PTR [rbx+0x71],rax
   140028d21:	mov    rax,QWORD PTR [rsi+0x3ec90]
   140028d28:	mov    QWORD PTR [rbx+0x79],rax
   140028d2c:	mov    rax,QWORD PTR [rsi+0x3ec98]
   140028d33:	mov    QWORD PTR [rbx+0x81],rax
   140028d3a:	mov    eax,DWORD PTR [rsi+0x3eca0]
   140028d40:	mov    DWORD PTR [rbx+0x89],eax
   140028d46:	movzx  eax,BYTE PTR [rsi+0x3eca4]
   140028d4d:	mov    BYTE PTR [rbx+0x8d],al
   140028d53:	cmp    DWORD PTR [rbx+0x6c],0x1
   140028d57:	jne    0x140028d69
   140028d59:	mov    rax,QWORD PTR [rbx+0x50]
   140028d5d:	mov    DWORD PTR [rax+0x48],r14d
   140028d61:	mov    DWORD PTR [rax+0x4c],r14d
   140028d65:	mov    BYTE PTR [rax+0x40],r14b
   140028d69:	cmp    BYTE PTR [rbp+0x5b],r14b
   140028d6d:	jne    0x140028d83
   140028d6f:	mov    BYTE PTR [rbp+0x5b],0x4
   140028d73:	mov    BYTE PTR [rbp+0x68],0x1b
   140028d77:	mov    BYTE PTR [rbp+0x69],0x24
   140028d7b:	mov    BYTE PTR [rbp+0x6a],0x29
   140028d7f:	mov    BYTE PTR [rbp+0x6b],0x43
   140028d83:	cmp    DWORD PTR [rbx+0x6c],0x1
   140028d87:	jne    0x140028d98
   140028d89:	mov    rax,QWORD PTR [rbx+0x50]
   140028d8d:	mov    DWORD PTR [rax+0x54],r14d
   140028d91:	mov    DWORD PTR [rax+0x50],0x1
   140028d98:	lea    rax,[rip+0x26251]        # 0x14004eff0
   140028d9f:	mov    QWORD PTR [rbp+0x30],rax
   140028da3:	movzx  eax,WORD PTR [rsi+0x46338]
   140028daa:	mov    WORD PTR [rbx+0x8f],ax
   140028db1:	movzx  eax,BYTE PTR [rsi+0x4633a]
   140028db8:	mov    BYTE PTR [rbx+0x91],al
   140028dbe:	jmp    0x140028f0a
   140028dc3:	cmp    al,0x7a
   140028dc5:	jne    0x140028dde
   140028dc7:	cmp    BYTE PTR [rsp+0x131],0x68
   140028dcf:	je     0x140028dec
   140028dd1:	mov    DWORD PTR [r12],0x10
   140028dd9:	jmp    0x140028c5e
   140028dde:	cmp    al,0x63
   140028de0:	jne    0x140028dd1
   140028de2:	cmp    BYTE PTR [rsp+0x131],0x6e
   140028dea:	jne    0x140028dd1
   140028dec:	movzx  eax,BYTE PTR [rsp+0x132]
   140028df4:	cmp    al,0x5f
   140028df6:	je     0x140028dfc
   140028df8:	test   al,al
   140028dfa:	jne    0x140028dd1
   140028dfc:	lea    r8,[rsp+0x20]
   140028e01:	lea    rdx,[rsp+0x50]
   140028e06:	lea    rcx,[rip+0x199fb]        # 0x140042808
   140028e0d:	mov    r9,r12
   140028e10:	call   0x140011fb0
   140028e15:	mov    QWORD PTR [rbx+0x8],rax
   140028e19:	cmp    edi,0x1
   140028e1c:	jne    0x140028e3b
   140028e1e:	lea    r8,[rsp+0x20]
   140028e23:	lea    rdx,[rsp+0x50]
   140028e28:	lea    rcx,[rip+0x26571]        # 0x14004f3a0
   140028e2f:	mov    r9,r12
   140028e32:	call   0x140011fb0
   140028e37:	mov    QWORD PTR [rbx+0x10],rax
   140028e3b:	lea    r8,[rsp+0x20]
   140028e40:	lea    rdx,[rsp+0x50]
   140028e45:	lea    rcx,[rip+0x26544]        # 0x14004f390
   140028e4c:	mov    r9,r12
   140028e4f:	call   0x140011fb0
   140028e54:	lea    rsi,[rip+0xfffffffffffd71a5]        # 0x140000000
   140028e5b:	mov    QWORD PTR [rbx+0x18],rax
   140028e5f:	lea    rax,[rip+0x263ba]        # 0x14004f220
   140028e66:	mov    QWORD PTR [rbp+0x30],rax
   140028e6a:	movzx  eax,WORD PTR [rsi+0x42884]
   140028e71:	mov    WORD PTR [rbx+0x8f],ax
   140028e78:	movzx  eax,BYTE PTR [rsi+0x42886]
   140028e7f:	mov    BYTE PTR [rbx+0x91],al
   140028e85:	cmp    edi,0x1
   140028e88:	jne    0x140028ec9
   140028e8a:	mov    rax,QWORD PTR [rsi+0x4f370]
   140028e91:	mov    QWORD PTR [rbx+0x71],rax
   140028e95:	mov    rax,QWORD PTR [rsi+0x4f378]
   140028e9c:	mov    QWORD PTR [rbx+0x79],rax
   140028ea0:	mov    rax,QWORD PTR [rsi+0x4f380]
   140028ea7:	mov    QWORD PTR [rbx+0x81],rax
   140028eae:	mov    eax,DWORD PTR [rsi+0x4f388]
   140028eb4:	mov    DWORD PTR [rbx+0x89],eax
   140028eba:	movzx  eax,BYTE PTR [rsi+0x4f38c]
   140028ec1:	mov    BYTE PTR [rbx+0x8d],al
   140028ec7:	jmp    0x140028f0a
   140028ec9:	mov    DWORD PTR [rbx+0x6c],r14d
   140028ecd:	mov    rax,QWORD PTR [rsi+0x4f350]
   140028ed4:	mov    QWORD PTR [rbx+0x71],rax
   140028ed8:	mov    rax,QWORD PTR [rsi+0x4f358]
   140028edf:	mov    QWORD PTR [rbx+0x79],rax
   140028ee3:	mov    rax,QWORD PTR [rsi+0x4f360]
   140028eea:	mov    QWORD PTR [rbx+0x81],rax
   140028ef1:	mov    eax,DWORD PTR [rsi+0x4f368]
   140028ef7:	mov    DWORD PTR [rbx+0x89],eax
   140028efd:	movzx  eax,BYTE PTR [rsi+0x4f36c]
   140028f04:	mov    BYTE PTR [rbx+0x8d],al
   140028f0a:	mov    rax,QWORD PTR [rbp+0x30]
   140028f0e:	mov    rcx,QWORD PTR [rax+0x18]
   140028f12:	movzx  eax,BYTE PTR [rcx+0x47]
   140028f16:	mov    BYTE PTR [rbp+0x58],al
   140028f19:	cmp    DWORD PTR [r12],r14d
   140028f1d:	jg     0x140028f29
   140028f1f:	cmp    BYTE PTR [r13+0x8],r14b
   140028f23:	je     0x140028c5e
   140028f29:	mov    rcx,rbp
   140028f2c:	call   0x140025890
   140028f31:	jmp    0x140028c5e
   140028f36:	mov    DWORD PTR [r12],0x7
   140028f3e:	jmp    0x140028c76
   140028f43:	int3   
   140028f44:	int3   
   140028f45:	int3   
   140028f46:	int3   
   140028f47:	int3   
   140028f48:	int3   
   140028f49:	int3   
   140028f4a:	int3   
   140028f4b:	int3   
   140028f4c:	int3   
   140028f4d:	int3   
   140028f4e:	int3   
   140028f4f:	int3   
   140028f50:	mov    QWORD PTR [rsp+0x8],rbx
   140028f55:	push   rdi
   140028f56:	sub    rsp,0x20
   140028f5a:	mov    rdi,rcx
   140028f5d:	mov    rcx,QWORD PTR [rcx]
   140028f60:	mov    ebx,edx
   140028f62:	test   rcx,rcx
   140028f65:	je     0x140028f7c
   140028f67:	cmp    DWORD PTR [rcx],edx
   140028f69:	jge    0x140028fa2
   140028f6b:	add    ebx,0x8
   140028f6e:	movsxd rdx,ebx
   140028f71:	add    rdx,0x4
   140028f75:	call   0x140010980
   140028f7a:	jmp    0x140028f8b
   140028f7c:	add    ebx,0x8
   140028f7f:	movsxd rcx,ebx
   140028f82:	add    rcx,0x4
   140028f86:	call   0x140010940
   140028f8b:	mov    QWORD PTR [rdi],rax
   140028f8e:	test   rax,rax
   140028f91:	jne    0x140028fa0
   140028f93:	xor    eax,eax
   140028f95:	mov    rbx,QWORD PTR [rsp+0x30]
   140028f9a:	add    rsp,0x20
   140028f9e:	pop    rdi
   140028f9f:	ret    
   140028fa0:	mov    DWORD PTR [rax],ebx
   140028fa2:	mov    rax,QWORD PTR [rdi]
   140028fa5:	mov    rbx,QWORD PTR [rsp+0x30]
   140028faa:	add    rax,0x4
   140028fae:	add    rsp,0x20
   140028fb2:	pop    rdi
   140028fb3:	ret    
   140028fb4:	int3   
   140028fb5:	int3   
   140028fb6:	int3   
   140028fb7:	int3   
   140028fb8:	int3   
   140028fb9:	int3   
   140028fba:	int3   
   140028fbb:	int3   
   140028fbc:	int3   
   140028fbd:	int3   
   140028fbe:	int3   
   140028fbf:	int3   
   140028fc0:	rex push rbx
   140028fc2:	push   rsi
   140028fc3:	sub    rsp,0x28
   140028fc7:	mov    rax,QWORD PTR [rcx+0x28]
   140028fcb:	mov    QWORD PTR [rsp+0x48],rbp
   140028fd0:	xor    ebx,ebx
   140028fd2:	mov    QWORD PTR [rsp+0x50],rdi
   140028fd7:	mov    rsi,rdx
   140028fda:	mov    rbp,rcx
   140028fdd:	mov    DWORD PTR [rsp+0x40],ebx
   140028fe1:	mov    QWORD PTR [rsp+0x20],r12
   140028fe6:	mov    rdi,r8
   140028fe9:	test   rax,rax
   140028fec:	je     0x140029032
   140028fee:	lea    rdx,[rsp+0x40]
   140028ff3:	call   rax
   140028ff5:	mov    r12,rax
   140028ff8:	test   rax,rax
   140028ffb:	je     0x140029039
   140028ffd:	mov    edx,DWORD PTR [rsp+0x40]
   140029001:	mov    rcx,rbp
   140029004:	lea    edx,[rdx+rdx*1+0x2]
   140029008:	call   0x140028f50
   14002900d:	mov    rbx,rax
   140029010:	test   rax,rax
   140029013:	jne    0x14002901d
   140029015:	mov    DWORD PTR [rdi],0x7
   14002901b:	jmp    0x140029039
   14002901d:	mov    r8d,DWORD PTR [rsp+0x40]
   140029022:	mov    rdx,rax
   140029025:	mov    rcx,r12
   140029028:	inc    r8d
   14002902b:	call   0x1400112b0
   140029030:	jmp    0x140029039
   140029032:	mov    DWORD PTR [r8],0x10
   140029039:	mov    r12,QWORD PTR [rsp+0x20]
   14002903e:	mov    rdi,QWORD PTR [rsp+0x50]
   140029043:	mov    rbp,QWORD PTR [rsp+0x48]
   140029048:	test   rsi,rsi
   14002904b:	je     0x140029053
   14002904d:	mov    eax,DWORD PTR [rsp+0x40]
   140029051:	mov    DWORD PTR [rsi],eax
   140029053:	mov    rax,rbx
   140029056:	add    rsp,0x28
   14002905a:	pop    rsi
   14002905b:	pop    rbx
   14002905c:	ret    
   14002905d:	int3   
   14002905e:	int3   
   14002905f:	int3   
   140029060:	rex push rdi
   140029062:	mov    r10,rcx
   140029065:	movzx  ecx,BYTE PTR [rcx+0x3]
   140029069:	movsxd r9,edx
   14002906c:	movzx  edx,BYTE PTR [r10+r9*4-0x1]
   140029072:	movzx  edi,r8b
   140029076:	cmp    edi,ecx
   140029078:	jl     0x14002913d
   14002907e:	cmp    edx,edi
   140029080:	jl     0x14002913d
   140029086:	sub    edx,ecx
   140029088:	inc    edx
   14002908a:	cmp    r9d,edx
   14002908d:	jne    0x1400290a4
   14002908f:	mov    rax,rcx
   140029092:	movzx  ecx,r8b
   140029096:	sub    rcx,rax
   140029099:	mov    eax,DWORD PTR [r10+rcx*4]
   14002909d:	and    eax,0xffffff
   1400290a2:	pop    rdi
   1400290a3:	ret    
   1400290a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400290a9:	mov    r11d,edi
   1400290ac:	xor    r8d,r8d
   1400290af:	shl    r11d,0x18
   1400290b3:	mov    eax,r9d
   1400290b6:	mov    ebx,r11d
   1400290b9:	or     ebx,0xffffff
   1400290bf:	cmp    r9d,0x1
   1400290c3:	jle    0x14002911f
   1400290c5:	cmp    eax,0x4
   1400290c8:	jle    0x1400290f1
   1400290ca:	lea    eax,[r9+r8*1]
   1400290ce:	cdq    
   1400290cf:	sub    eax,edx
   1400290d1:	sar    eax,1
   1400290d3:	movsxd rcx,eax
   1400290d6:	cmp    ebx,DWORD PTR [r10+rcx*4]
   1400290da:	jae    0x1400290e1
   1400290dc:	mov    r9d,eax
   1400290df:	jmp    0x1400290e4
   1400290e1:	mov    r8d,eax
   1400290e4:	mov    eax,r9d
   1400290e7:	sub    eax,r8d
   1400290ea:	cmp    eax,0x1
   1400290ed:	jg     0x1400290c5
   1400290ef:	jmp    0x14002911f
   1400290f1:	movsxd rax,r8d
   1400290f4:	cmp    r11d,DWORD PTR [r10+rax*4]
   1400290f8:	jbe    0x14002911f
   1400290fa:	inc    r8d
   1400290fd:	cmp    r8d,r9d
   140029100:	jge    0x14002910b
   140029102:	movsxd rax,r8d
   140029105:	cmp    r11d,DWORD PTR [r10+rax*4]
   140029109:	jbe    0x14002911f
   14002910b:	inc    r8d
   14002910e:	cmp    r8d,r9d
   140029111:	jge    0x14002911c
   140029113:	movsxd rax,r8d
   140029116:	cmp    r11d,DWORD PTR [r10+rax*4]
   14002911a:	jbe    0x14002911f
   14002911c:	inc    r8d
   14002911f:	cmp    r8d,r9d
   140029122:	mov    rbx,QWORD PTR [rsp+0x10]
   140029127:	jge    0x14002913d
   140029129:	movsxd rax,r8d
   14002912c:	mov    eax,DWORD PTR [r10+rax*4]
   140029130:	mov    ecx,eax
   140029132:	shr    ecx,0x18
   140029135:	cmp    edi,ecx
   140029137:	je     0x14002909d
   14002913d:	xor    eax,eax
   14002913f:	pop    rdi
   140029140:	ret    
   140029141:	int3   
   140029142:	int3   
   140029143:	int3   
   140029144:	int3   
   140029145:	int3   
   140029146:	int3   
   140029147:	int3   
   140029148:	int3   
   140029149:	int3   
   14002914a:	int3   
   14002914b:	int3   
   14002914c:	int3   
   14002914d:	int3   
   14002914e:	int3   
   14002914f:	int3   
   140029150:	mov    rax,rsp
   140029153:	mov    QWORD PTR [rax+0x18],r8
   140029157:	push   r14
   140029159:	sub    rsp,0x70
   14002915d:	movsxd r10,r9d
   140029160:	movzx  r14d,dl
   140029164:	test   rcx,rcx
   140029167:	je     0x14002933e
   14002916d:	cmp    DWORD PTR [rcx+0x8],0x0
   140029171:	jle    0x14002933e
   140029177:	movsxd rdx,DWORD PTR [rcx+0x4]
   14002917b:	mov    QWORD PTR [rax+0x10],rbx
   14002917f:	xor    ebx,ebx
   140029181:	mov    QWORD PTR [rax-0x18],rsi
   140029185:	mov    QWORD PTR [rax-0x20],rdi
   140029189:	add    rdx,rcx
   14002918c:	mov    QWORD PTR [rax-0x30],r13
   140029190:	mov    QWORD PTR [rax-0x38],r15
   140029194:	mov    r9d,ebx
   140029197:	mov    QWORD PTR [rsp+0x20],rdx
   14002919c:	mov    r13d,ebx
   14002919f:	mov    r15d,ebx
   1400291a2:	mov    edi,ebx
   1400291a4:	mov    esi,ebx
   1400291a6:	test   r14b,r14b
   1400291a9:	jne    0x1400291e4
   1400291ab:	cmp    r10d,0x1
   1400291af:	jle    0x1400291b8
   1400291b1:	xor    eax,eax
   1400291b3:	jmp    0x1400292f1
   1400291b8:	cmp    r10d,0x1
   1400291bc:	jne    0x1400291ca
   1400291be:	mov    eax,ebx
   1400291c0:	mov    BYTE PTR [rsp+0x80],r10b
   1400291c8:	jmp    0x1400291fc
   1400291ca:	mov    eax,DWORD PTR [rsp+0xa8]
   1400291d1:	mov    ecx,0x1
   1400291d6:	cmp    eax,ecx
   1400291d8:	mov    BYTE PTR [rsp+0x80],cl
   1400291df:	cmovg  eax,ecx
   1400291e2:	jmp    0x1400291fc
   1400291e4:	movzx  r8d,BYTE PTR [rsp+0xc0]
   1400291ed:	mov    eax,DWORD PTR [rsp+0xa8]
   1400291f4:	mov    BYTE PTR [rsp+0x80],r8b
   1400291fc:	mov    QWORD PTR [rsp+0x68],rbp
   140029201:	movsxd r11,eax
   140029204:	mov    QWORD PTR [rsp+0x50],r12
   140029209:	mov    rbp,rbx
   14002920c:	mov    r12,rbx
   14002920f:	mov    r8,r10
   140029212:	mov    QWORD PTR [rsp+0x30],r11
   140029217:	mov    QWORD PTR [rsp+0x28],r10
   14002921c:	nop    DWORD PTR [rax+0x0]
   140029220:	movsxd rax,r9d
   140029223:	lea    r9,[rdx+rax*4]
   140029227:	mov    edx,DWORD PTR [rdx+rax*4]
   14002922a:	mov    r10d,edx
   14002922d:	shr    r10d,0x18
   140029231:	and    edx,0xffffff
   140029237:	je     0x14002925c
   140029239:	test   r14b,r14b
   14002923c:	js     0x140029255
   14002923e:	lea    eax,[rdi+rsi*1]
   140029241:	mov    ecx,ebx
   140029243:	cmp    eax,0x1
   140029246:	mov    eax,ebx
   140029248:	sete   cl
   14002924b:	test   r14b,r14b
   14002924e:	sete   al
   140029251:	cmp    eax,ecx
   140029253:	jne    0x14002925c
   140029255:	mov    r13d,edx
   140029258:	lea    r15d,[rdi+rsi*1]
   14002925c:	cmp    rbp,r8
   14002925f:	jge    0x140029276
   140029261:	mov    rax,QWORD PTR [rsp+0x90]
   140029269:	inc    esi
   14002926b:	inc    rbp
   14002926e:	movzx  r8d,BYTE PTR [rax+rbp*1-0x1]
   140029274:	jmp    0x140029291
   140029276:	cmp    r12,r11
   140029279:	jge    0x140029314
   14002927f:	mov    rax,QWORD PTR [rsp+0xa0]
   140029287:	inc    edi
   140029289:	inc    r12
   14002928c:	mov    r8b,BYTE PTR [r12+rax*1-0x1]
   140029291:	lea    rcx,[r9+0x4]
   140029295:	mov    edx,r10d
   140029298:	call   0x140029060
   14002929d:	mov    r9d,eax
   1400292a0:	test   eax,eax
   1400292a2:	je     0x1400292e0
   1400292a4:	cmp    eax,0x1f0000
   1400292a9:	jae    0x1400292bf
   1400292ab:	mov    rdx,QWORD PTR [rsp+0x20]
   1400292b0:	mov    r8,QWORD PTR [rsp+0x28]
   1400292b5:	mov    r11,QWORD PTR [rsp+0x30]
   1400292ba:	jmp    0x140029220
   1400292bf:	test   r14b,r14b
   1400292c2:	js     0x1400292d9
   1400292c4:	mov    ecx,ebx
   1400292c6:	lea    eax,[rdi+rsi*1]
   1400292c9:	cmp    eax,0x1
   1400292cc:	sete   cl
   1400292cf:	test   r14b,r14b
   1400292d2:	sete   bl
   1400292d5:	cmp    ebx,ecx
   1400292d7:	jne    0x1400292e0
   1400292d9:	mov    r13d,r9d
   1400292dc:	lea    r15d,[rdi+rsi*1]
   1400292e0:	test   r15d,r15d
   1400292e3:	jne    0x140029329
   1400292e5:	xor    eax,eax
   1400292e7:	mov    r12,QWORD PTR [rsp+0x50]
   1400292ec:	mov    rbp,QWORD PTR [rsp+0x68]
   1400292f1:	mov    rdi,QWORD PTR [rsp+0x58]
   1400292f6:	mov    rsi,QWORD PTR [rsp+0x60]
   1400292fb:	mov    r13,QWORD PTR [rsp+0x48]
   140029300:	mov    rbx,QWORD PTR [rsp+0x88]
   140029308:	mov    r15,QWORD PTR [rsp+0x40]
   14002930d:	add    rsp,0x70
   140029311:	pop    r14
   140029313:	ret    
   140029314:	cmp    BYTE PTR [rsp+0x80],bl
   14002931b:	jne    0x1400292e0
   14002931d:	lea    eax,[rdi+rsi*1]
   140029320:	cmp    eax,0x1f
   140029323:	jg     0x1400292e0
   140029325:	neg    eax
   140029327:	jmp    0x1400292e7
   140029329:	mov    rcx,QWORD PTR [rsp+0xb0]
   140029331:	btr    r13d,0x17
   140029336:	mov    eax,r15d
   140029339:	mov    DWORD PTR [rcx],r13d
   14002933c:	jmp    0x1400292e7
   14002933e:	xor    eax,eax
   140029340:	add    rsp,0x70
   140029344:	pop    r14
   140029346:	ret    
   140029347:	int3   
   140029348:	int3   
   140029349:	int3   
   14002934a:	int3   
   14002934b:	int3   
   14002934c:	int3   
   14002934d:	int3   
   14002934e:	int3   
   14002934f:	int3   
   140029350:	sub    rsp,0x48
   140029354:	mov    r10,r9
   140029357:	mov    eax,r8d
   14002935a:	mov    r11,rcx
   14002935d:	mov    r9,rdx
   140029360:	cmp    r8d,0x2fffff
   140029367:	ja     0x1400293a4
   140029369:	mov    rax,QWORD PTR [rsp+0x88]
   140029371:	mov    r9,QWORD PTR [rsp+0x70]
   140029376:	lea    edx,[r8-0x1f0000]
   14002937d:	mov    QWORD PTR [rsp+0x30],rax
   140029382:	mov    eax,DWORD PTR [rsp+0x80]
   140029389:	mov    r8,r10
   14002938c:	mov    DWORD PTR [rsp+0x28],eax
   140029390:	mov    rax,QWORD PTR [rsp+0x78]
   140029395:	mov    QWORD PTR [rsp+0x20],rax
   14002939a:	call   0x14002a8d0
   14002939f:	add    rsp,0x48
   1400293a3:	ret    
   1400293a4:	mov    edx,eax
   1400293a6:	movsxd rax,DWORD PTR [r9+0xc]
   1400293aa:	shr    r8d,0x12
   1400293ae:	lea    rcx,[r9+rax*1]
   1400293b2:	mov    rax,QWORD PTR [rsp+0x88]
   1400293ba:	and    edx,0x3ffff
   1400293c0:	mov    QWORD PTR [rsp+0x38],rax
   1400293c5:	mov    eax,DWORD PTR [rsp+0x80]
   1400293cc:	lea    rdx,[rcx+rdx*2]
   1400293d0:	mov    DWORD PTR [rsp+0x30],eax
   1400293d4:	mov    rax,QWORD PTR [rsp+0x78]
   1400293d9:	sub    r8d,0xc
   1400293dd:	mov    QWORD PTR [rsp+0x28],rax
   1400293e2:	mov    rax,QWORD PTR [rsp+0x70]
   1400293e7:	mov    r9,r10
   1400293ea:	mov    rcx,r11
   1400293ed:	mov    QWORD PTR [rsp+0x20],rax
   1400293f2:	call   0x14002a7e0
   1400293f7:	add    rsp,0x48
   1400293fb:	ret    
   1400293fc:	int3   
   1400293fd:	int3   
   1400293fe:	int3   
   1400293ff:	int3   
   140029400:	mov    QWORD PTR [rsp+0x10],rbx
   140029405:	mov    QWORD PTR [rsp+0x18],rbp
   14002940a:	mov    QWORD PTR [rsp+0x20],rsi
   14002940f:	push   rdi
   140029410:	push   r12
   140029412:	push   r13
   140029414:	sub    rsp,0x50
   140029418:	mov    rax,QWORD PTR [rcx+0x30]
   14002941c:	xor    esi,esi
   14002941e:	mov    rdi,rcx
   140029421:	movzx  ecx,BYTE PTR [rax+0x104]
   140029428:	mov    r12,r9
   14002942b:	mov    ebp,r8d
   14002942e:	mov    r13,rdx
   140029431:	mov    DWORD PTR [rsp+0x70],esi
   140029435:	cmp    cl,0xc
   140029438:	jne    0x140029440
   14002943a:	movsx  edx,BYTE PTR [rdi+0x4c]
   14002943e:	jmp    0x14002944e
   140029440:	or     edx,0xffffffff
   140029443:	mov    eax,0x1
   140029448:	cmp    cl,0xdb
   14002944b:	cmove  edx,eax
   14002944e:	movzx  eax,BYTE PTR [rsp+0xb8]
   140029456:	mov    ecx,DWORD PTR [rsp+0x90]
   14002945d:	lea    rbx,[rdi+0x41]
   140029461:	sub    ecx,DWORD PTR [r9]
   140029464:	mov    BYTE PTR [rsp+0x40],al
   140029468:	movzx  eax,BYTE PTR [rdi+0x3f]
   14002946c:	mov    BYTE PTR [rsp+0x38],al
   140029470:	lea    rax,[rsp+0x70]
   140029475:	mov    r8,rbx
   140029478:	mov    QWORD PTR [rsp+0x30],rax
   14002947d:	mov    rax,QWORD PTR [r9]
   140029480:	mov    DWORD PTR [rsp+0x28],ecx
   140029484:	mov    r9d,ebp
   140029487:	mov    rcx,r13
   14002948a:	mov    QWORD PTR [rsp+0x20],rax
   14002948f:	call   0x140029150
   140029494:	mov    r11d,eax
   140029497:	test   eax,eax
   140029499:	jle    0x1400294f6
   14002949b:	mov    r9,QWORD PTR [rsp+0x98]
   1400294a3:	mov    r8d,DWORD PTR [rsp+0x70]
   1400294a8:	sub    r11d,ebp
   1400294ab:	movsxd rax,r11d
   1400294ae:	mov    rdx,r13
   1400294b1:	mov    rcx,rdi
   1400294b4:	add    QWORD PTR [r12],rax
   1400294b8:	mov    rax,QWORD PTR [rsp+0xc0]
   1400294c0:	mov    QWORD PTR [rsp+0x38],rax
   1400294c5:	mov    eax,DWORD PTR [rsp+0xb0]
   1400294cc:	mov    DWORD PTR [rsp+0x30],eax
   1400294d0:	mov    rax,QWORD PTR [rsp+0xa8]
   1400294d8:	mov    QWORD PTR [rsp+0x28],rax
   1400294dd:	mov    rax,QWORD PTR [rsp+0xa0]
   1400294e5:	mov    QWORD PTR [rsp+0x20],rax
   1400294ea:	call   0x140029350
   1400294ef:	mov    al,0x1
   1400294f1:	jmp    0x140029573
   1400294f6:	jns    0x140029571
   1400294f8:	mov    BYTE PTR [rdi+0x11b],bpl
   1400294ff:	test   ebp,ebp
   140029501:	jle    0x140029522
   140029503:	lea    rcx,[rdi+0xfa]
   14002950a:	mov    rsi,rbp
   14002950d:	mov    rdx,rbp
   140029510:	movzx  eax,BYTE PTR [rbx]
   140029513:	inc    rcx
   140029516:	inc    rbx
   140029519:	sub    rdx,0x1
   14002951d:	mov    BYTE PTR [rcx-0x1],al
   140029520:	jne    0x140029510
   140029522:	mov    rcx,QWORD PTR [r12]
   140029526:	neg    r11d
   140029529:	movsxd rax,esi
   14002952c:	cmp    esi,r11d
   14002952f:	jge    0x140029562
   140029531:	lea    rdx,[rax+rdi*1+0xfa]
   140029539:	mov    eax,r11d
   14002953c:	sub    eax,esi
   14002953e:	mov    r8d,eax
   140029541:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140029550:	movzx  eax,BYTE PTR [rcx]
   140029553:	inc    rdx
   140029556:	inc    rcx
   140029559:	sub    r8,0x1
   14002955d:	mov    BYTE PTR [rdx-0x1],al
   140029560:	jne    0x140029550
   140029562:	mov    QWORD PTR [r12],rcx
   140029566:	mov    al,0x1
   140029568:	mov    BYTE PTR [rdi+0x11a],r11b
   14002956f:	jmp    0x140029573
   140029571:	xor    al,al
   140029573:	lea    r11,[rsp+0x50]
   140029578:	mov    rbx,QWORD PTR [r11+0x28]
   14002957c:	mov    rbp,QWORD PTR [r11+0x30]
   140029580:	mov    rsi,QWORD PTR [r11+0x38]
   140029584:	mov    rsp,r11
   140029587:	pop    r13
   140029589:	pop    r12
   14002958b:	pop    rdi
   14002958c:	ret    
   14002958d:	int3   
   14002958e:	int3   
   14002958f:	int3   
   140029590:	mov    QWORD PTR [rsp+0x10],rdx
   140029595:	push   rbx
   140029596:	push   r15
   140029598:	sub    rsp,0x48
   14002959c:	movsxd r15,r8d
   14002959f:	xor    ebx,ebx
   1400295a1:	mov    r8,rdx
   1400295a4:	test   r15d,r15d
   1400295a7:	jg     0x1400295b6
   1400295a9:	mov    eax,0xffff
   1400295ae:	add    rsp,0x48
   1400295b2:	pop    r15
   1400295b4:	pop    rbx
   1400295b5:	ret    
   1400295b6:	mov    QWORD PTR [rsp+0x78],rdi
   1400295bb:	mov    QWORD PTR [rsp+0x30],r14
   1400295c0:	test   rcx,rcx
   1400295c3:	je     0x14002969d
   1400295c9:	cmp    DWORD PTR [rcx+0x8],ebx
   1400295cc:	jle    0x14002969d
   1400295d2:	movsxd rdx,DWORD PTR [rcx+0x4]
   1400295d6:	mov    QWORD PTR [rsp+0x60],rbp
   1400295db:	mov    QWORD PTR [rsp+0x70],rsi
   1400295e0:	mov    QWORD PTR [rsp+0x40],r12
   1400295e5:	add    rdx,rcx
   1400295e8:	mov    QWORD PTR [rsp+0x38],r13
   1400295ed:	mov    eax,ebx
   1400295ef:	mov    r14d,ebx
   1400295f2:	mov    edi,ebx
   1400295f4:	mov    QWORD PTR [rsp+0x20],rdx
   1400295f9:	mov    r12d,ebx
   1400295fc:	mov    r13d,ebx
   1400295ff:	mov    rsi,rbx
   140029602:	mov    rbp,rbx
   140029605:	mov    r9,r15
   140029608:	nop    DWORD PTR [rax+rax*1+0x0]
   140029610:	cdqe   
   140029612:	lea    rcx,[rdx+rax*4]
   140029616:	add    rcx,0x4
   14002961a:	mov    eax,DWORD PTR [rcx-0x4]
   14002961d:	mov    edx,eax
   14002961f:	shr    edx,0x18
   140029622:	and    eax,0xffffff
   140029627:	je     0x140029630
   140029629:	mov    r14d,eax
   14002962c:	lea    edi,[r12+r13*1]
   140029630:	cmp    rsi,r9
   140029633:	jge    0x140029642
   140029635:	movzx  r8d,BYTE PTR [rsi+r8*1]
   14002963a:	inc    r13d
   14002963d:	inc    rsi
   140029640:	jmp    0x140029651
   140029642:	test   rbp,rbp
   140029645:	jns    0x140029677
   140029647:	mov    r8b,BYTE PTR [rbp+0x0]
   14002964b:	inc    r12d
   14002964e:	inc    rbp
   140029651:	call   0x140029060
   140029656:	test   eax,eax
   140029658:	je     0x140029677
   14002965a:	cmp    eax,0x1f0000
   14002965f:	jae    0x140029670
   140029661:	mov    r8,QWORD PTR [rsp+0x68]
   140029666:	mov    rdx,QWORD PTR [rsp+0x20]
   14002966b:	mov    r9,r15
   14002966e:	jmp    0x140029610
   140029670:	mov    r14d,eax
   140029673:	lea    edi,[r12+r13*1]
   140029677:	mov    r13,QWORD PTR [rsp+0x38]
   14002967c:	mov    r12,QWORD PTR [rsp+0x40]
   140029681:	mov    rsi,QWORD PTR [rsp+0x70]
   140029686:	mov    rbp,QWORD PTR [rsp+0x60]
   14002968b:	test   edi,edi
   14002968d:	jne    0x140029693
   14002968f:	mov    edi,ebx
   140029691:	jmp    0x14002969f
   140029693:	btr    r14d,0x17
   140029698:	mov    ebx,r14d
   14002969b:	jmp    0x14002969f
   14002969d:	mov    edi,ebx
   14002969f:	mov    r14,QWORD PTR [rsp+0x30]
   1400296a4:	cmp    edi,r15d
   1400296a7:	mov    rdi,QWORD PTR [rsp+0x78]
   1400296ac:	jne    0x1400296c4
   1400296ae:	cmp    ebx,0x2fffff
   1400296b4:	ja     0x1400296c4
   1400296b6:	lea    eax,[rbx-0x1f0000]
   1400296bc:	add    rsp,0x48
   1400296c0:	pop    r15
   1400296c2:	pop    rbx
   1400296c3:	ret    
   1400296c4:	mov    eax,0xfffe
   1400296c9:	add    rsp,0x48
   1400296cd:	pop    r15
   1400296cf:	pop    rbx
   1400296d0:	ret    
   1400296d1:	int3   
   1400296d2:	int3   
   1400296d3:	int3   
   1400296d4:	int3   
   1400296d5:	int3   
   1400296d6:	int3   
   1400296d7:	int3   
   1400296d8:	int3   
   1400296d9:	int3   
   1400296da:	int3   
   1400296db:	int3   
   1400296dc:	int3   
   1400296dd:	int3   
   1400296de:	int3   
   1400296df:	int3   
   1400296e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400296e5:	mov    QWORD PTR [rsp+0x20],rbp
   1400296ea:	push   rdi
   1400296eb:	push   r12
   1400296ed:	push   r13
   1400296ef:	sub    rsp,0x50
   1400296f3:	mov    r10,QWORD PTR [rcx+0x30]
   1400296f7:	mov    r12,r9
   1400296fa:	mov    r13d,r8d
   1400296fd:	movzx  eax,BYTE PTR [r10+0x104]
   140029705:	mov    rdi,rdx
   140029708:	mov    rbx,rcx
   14002970b:	mov    DWORD PTR [rsp+0x70],0x0
   140029713:	cmp    al,0xc
   140029715:	jne    0x14002971d
   140029717:	movsx  ecx,BYTE PTR [rcx+0x4c]
   14002971b:	jmp    0x14002972a
   14002971d:	or     ecx,0xffffffff
   140029720:	mov    edx,0x1
   140029725:	cmp    al,0xdb
   140029727:	cmove  ecx,edx
   14002972a:	movzx  eax,BYTE PTR [rdi+0x2]
   14002972e:	mov    r8d,DWORD PTR [rdi+0x18]
   140029732:	movsx  r9d,BYTE PTR [rbx+0x11a]
   14002973a:	sub    r8d,DWORD PTR [rdi+0x10]
   14002973e:	mov    BYTE PTR [rsp+0x40],al
   140029742:	movzx  eax,BYTE PTR [rbx+0x3f]
   140029746:	mov    BYTE PTR [rsp+0x38],al
   14002974a:	lea    rax,[rsp+0x70]
   14002974f:	movzx  edx,cl
   140029752:	mov    rcx,QWORD PTR [r10+0x128]
   140029759:	mov    QWORD PTR [rsp+0x30],rax
   14002975e:	mov    rax,QWORD PTR [rdi+0x10]
   140029762:	mov    DWORD PTR [rsp+0x28],r8d
   140029767:	lea    r8,[rbx+0xfa]
   14002976e:	mov    QWORD PTR [rsp+0x20],rax
   140029773:	call   0x140029150
   140029778:	movsxd r11,eax
   14002977b:	test   eax,eax
   14002977d:	jle    0x14002980d
   140029783:	mov    QWORD PTR [rsp+0x78],rsi
   140029788:	movsx  esi,BYTE PTR [rbx+0x11a]
   14002978f:	cmp    r11d,esi
   140029792:	jl     0x1400297a7
   140029794:	sub    r11d,esi
   140029797:	movsxd rax,r11d
   14002979a:	add    QWORD PTR [rdi+0x10],rax
   14002979e:	mov    BYTE PTR [rbx+0x11a],0x0
   1400297a5:	jmp    0x1400297cb
   1400297a7:	sub    esi,r11d
   1400297aa:	lea    rdx,[r11+rbx*1+0xfa]
   1400297b2:	lea    rcx,[rbx+0xfa]
   1400297b9:	movsxd r8,esi
   1400297bc:	call   0x14002b9a0
   1400297c1:	neg    sil
   1400297c4:	mov    BYTE PTR [rbx+0x11a],sil
   1400297cb:	mov    rdx,QWORD PTR [rbx+0x30]
   1400297cf:	mov    r8d,DWORD PTR [rsp+0x70]
   1400297d4:	mov    QWORD PTR [rsp+0x38],r12
   1400297d9:	mov    rdx,QWORD PTR [rdx+0x128]
   1400297e0:	lea    rax,[rdi+0x30]
   1400297e4:	mov    DWORD PTR [rsp+0x30],r13d
   1400297e9:	mov    QWORD PTR [rsp+0x28],rax
   1400297ee:	mov    rax,QWORD PTR [rdi+0x28]
   1400297f2:	lea    r9,[rdi+0x20]
   1400297f6:	mov    rcx,rbx
   1400297f9:	mov    QWORD PTR [rsp+0x20],rax
   1400297fe:	call   0x140029350
   140029803:	mov    rsi,QWORD PTR [rsp+0x78]
   140029808:	jmp    0x1400298be
   14002980d:	test   eax,eax
   14002980f:	jns    0x14002985f
   140029811:	movsx  r8,BYTE PTR [rbx+0x11a]
   140029819:	mov    rcx,QWORD PTR [rdi+0x10]
   14002981d:	neg    r11d
   140029820:	cmp    r8d,r11d
   140029823:	jge    0x140029852
   140029825:	mov    eax,r11d
   140029828:	lea    rdx,[r8+rbx*1+0xfa]
   140029830:	sub    eax,r8d
   140029833:	mov    r8d,eax
   140029836:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029840:	movzx  eax,BYTE PTR [rcx]
   140029843:	inc    rdx
   140029846:	inc    rcx
   140029849:	sub    r8,0x1
   14002984d:	mov    BYTE PTR [rdx-0x1],al
   140029850:	jne    0x140029840
   140029852:	mov    QWORD PTR [rdi+0x10],rcx
   140029856:	mov    BYTE PTR [rbx+0x11a],r11b
   14002985d:	jmp    0x1400298be
   14002985f:	movsx  r8,BYTE PTR [rbx+0x11b]
   140029867:	lea    rcx,[rbx+0x41]
   14002986b:	lea    rdx,[rbx+0xfa]
   140029872:	call   0x14002b9a0
   140029877:	movsx  r11d,BYTE PTR [rbx+0x11b]
   14002987f:	movsx  edi,BYTE PTR [rbx+0x11a]
   140029886:	sub    edi,r11d
   140029889:	mov    BYTE PTR [rbx+0x40],r11b
   14002988d:	test   edi,edi
   14002988f:	jle    0x1400298ac
   140029891:	movsx  rax,r11b
   140029895:	lea    rcx,[rbx+0xfa]
   14002989c:	movsxd r8,edi
   14002989f:	lea    rdx,[rax+rbx*1+0xfa]
   1400298a7:	call   0x14002b9a0
   1400298ac:	neg    dil
   1400298af:	mov    BYTE PTR [rbx+0x11a],dil
   1400298b6:	mov    DWORD PTR [r12],0xa
   1400298be:	lea    r11,[rsp+0x50]
   1400298c3:	mov    rbx,QWORD PTR [r11+0x30]
   1400298c7:	mov    rbp,QWORD PTR [r11+0x38]
   1400298cb:	mov    rsp,r11
   1400298ce:	pop    r13
   1400298d0:	pop    r12
   1400298d2:	pop    rdi
   1400298d3:	ret    
   1400298d4:	int3   
   1400298d5:	int3   
   1400298d6:	int3   
   1400298d7:	int3   
   1400298d8:	int3   
   1400298d9:	int3   
   1400298da:	int3   
   1400298db:	int3   
   1400298dc:	int3   
   1400298dd:	int3   
   1400298de:	int3   
   1400298df:	int3   
   1400298e0:	xor    r9d,r9d
   1400298e3:	cmp    edx,0x1
   1400298e6:	mov    r10d,edx
   1400298e9:	mov    r11,rcx
   1400298ec:	mov    eax,edx
   1400298ee:	jle    0x14002994e
   1400298f0:	cmp    eax,0x4
   1400298f3:	jle    0x14002991d
   1400298f5:	lea    eax,[r10+r9*1]
   1400298f9:	cdq    
   1400298fa:	sub    eax,edx
   1400298fc:	sar    eax,1
   1400298fe:	movsxd rcx,eax
   140029901:	cmp    r8w,WORD PTR [r11+rcx*2]
   140029906:	jae    0x14002990d
   140029908:	mov    r10d,ecx
   14002990b:	jmp    0x140029910
   14002990d:	mov    r9d,ecx
   140029910:	mov    eax,r10d
   140029913:	sub    eax,r9d
   140029916:	cmp    eax,0x1
   140029919:	jg     0x1400298f0
   14002991b:	jmp    0x14002994e
   14002991d:	movsxd rax,r9d
   140029920:	cmp    r8w,WORD PTR [r11+rax*2]
   140029925:	jbe    0x14002994e
   140029927:	inc    r9d
   14002992a:	cmp    r9d,r10d
   14002992d:	jge    0x140029939
   14002992f:	movsxd rax,r9d
   140029932:	cmp    r8w,WORD PTR [r11+rax*2]
   140029937:	jbe    0x14002994e
   140029939:	inc    r9d
   14002993c:	cmp    r9d,r10d
   14002993f:	jge    0x14002994b
   140029941:	movsxd rcx,r9d
   140029944:	cmp    r8w,WORD PTR [r11+rcx*2]
   140029949:	jbe    0x14002994e
   14002994b:	inc    r9d
   14002994e:	cmp    r9d,r10d
   140029951:	jge    0x140029961
   140029953:	movsxd rcx,r9d
   140029956:	cmp    r8w,WORD PTR [r11+rcx*2]
   14002995b:	jne    0x140029961
   14002995d:	mov    eax,r9d
   140029960:	ret    
   140029961:	or     eax,0xffffffff
   140029964:	ret    
   140029965:	int3   
   140029966:	int3   
   140029967:	int3   
   140029968:	int3   
   140029969:	int3   
   14002996a:	int3   
   14002996b:	int3   
   14002996c:	int3   
   14002996d:	int3   
   14002996e:	int3   
   14002996f:	int3   
   140029970:	mov    QWORD PTR [rsp+0x18],r8
   140029975:	push   rbx
   140029976:	sub    rsp,0x60
   14002997a:	mov    r11,r8
   14002997d:	movsxd rbx,edx
   140029980:	mov    r10,rcx
   140029983:	test   rcx,rcx
   140029986:	jne    0x140029990
   140029988:	xor    eax,eax
   14002998a:	add    rsp,0x60
   14002998e:	pop    rbx
   14002998f:	ret    
   140029990:	mov    eax,ebx
   140029992:	sar    eax,0xa
   140029995:	cmp    eax,DWORD PTR [rcx+0x2c]
   140029998:	jge    0x140029988
   14002999a:	movsxd rdx,DWORD PTR [rcx+0x28]
   14002999e:	cdqe   
   1400299a0:	mov    r8,rbx
   1400299a3:	add    rdx,rcx
   1400299a6:	and    r8d,0xf
   1400299aa:	movzx  ecx,WORD PTR [rdx+rax*2]
   1400299ae:	mov    rax,rbx
   1400299b1:	sar    rax,0x4
   1400299b5:	and    eax,0x3f
   1400299b8:	add    rcx,rax
   1400299bb:	movzx  eax,WORD PTR [rdx+rcx*2]
   1400299bf:	lea    rdx,[r8+rax*4]
   1400299c3:	movsxd rax,DWORD PTR [r10+0x34]
   1400299c7:	lea    rcx,[r10+rax*1]
   1400299cb:	movsxd rax,DWORD PTR [r10+0x3c]
   1400299cf:	movzx  r8d,WORD PTR [rcx+rdx*2]
   1400299d4:	lea    rcx,[r10+rax*1]
   1400299d8:	mov    edx,DWORD PTR [rcx+r8*4]
   1400299dc:	test   edx,edx
   1400299de:	je     0x140029988
   1400299e0:	mov    QWORD PTR [rsp+0x78],rbp
   1400299e5:	mov    QWORD PTR [rsp+0x58],rsi
   1400299ea:	mov    QWORD PTR [rsp+0x50],rdi
   1400299ef:	mov    QWORD PTR [rsp+0x48],r12
   1400299f4:	mov    QWORD PTR [rsp+0x40],r13
   1400299f9:	mov    QWORD PTR [rsp+0x38],r14
   1400299fe:	mov    QWORD PTR [rsp+0x30],r15
   140029a03:	cmp    edx,0x1f0000
   140029a09:	jae    0x140029b94
   140029a0f:	movsxd rcx,DWORD PTR [r10+0x14]
   140029a13:	movsxd r15,DWORD PTR [r10+0x18]
   140029a17:	movsxd r8,r9d
   140029a1a:	add    rcx,r10
   140029a1d:	add    r15,r10
   140029a20:	movsxd r10,DWORD PTR [rsp+0x98]
   140029a28:	xor    edi,edi
   140029a2a:	mov    QWORD PTR [rsp+0x70],r8
   140029a2f:	mov    QWORD PTR [rsp+0x20],rcx
   140029a34:	mov    r12d,edi
   140029a37:	mov    esi,edi
   140029a39:	mov    ebp,edi
   140029a3b:	mov    r13,rdi
   140029a3e:	mov    r14,rdi
   140029a41:	mov    QWORD PTR [rsp+0x28],r15
   140029a46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029a50:	movsxd rax,edx
   140029a53:	movzx  edx,WORD PTR [rcx+rax*2]
   140029a57:	lea    r9,[rcx+rax*2]
   140029a5b:	mov    ecx,DWORD PTR [r15+rax*4]
   140029a5f:	lea    r15,[r15+rax*4]
   140029a63:	test   ecx,ecx
   140029a65:	je     0x140029aa0
   140029a67:	bt     ecx,0x1f
   140029a6b:	jb     0x140029a91
   140029a6d:	cmp    BYTE PTR [rsp+0xa8],0x0
   140029a75:	jne    0x140029a91
   140029a77:	lea    eax,[rbx-0xe000]
   140029a7d:	cmp    eax,0x1900
   140029a82:	jb     0x140029a91
   140029a84:	lea    eax,[rbx-0xf0000]
   140029a8a:	cmp    eax,0x20000
   140029a8f:	jae    0x140029aa0
   140029a91:	test   ecx,0x60000000
   140029a97:	jne    0x140029aa0
   140029a99:	mov    edi,ecx
   140029a9b:	lea    r12d,[rsi+rbp*1+0x2]
   140029aa0:	cmp    r13,r8
   140029aa3:	jge    0x140029ab1
   140029aa5:	movzx  r8d,WORD PTR [r11+r13*2]
   140029aaa:	inc    ebp
   140029aac:	inc    r13
   140029aaf:	jmp    0x140029acd
   140029ab1:	cmp    r14,r10
   140029ab4:	jge    0x140029b79
   140029aba:	mov    rax,QWORD PTR [rsp+0x90]
   140029ac2:	inc    esi
   140029ac4:	inc    r14
   140029ac7:	mov    r8w,WORD PTR [rax+r14*2-0x2]
   140029acd:	lea    rcx,[r9+0x2]
   140029ad1:	call   0x1400298e0
   140029ad6:	test   eax,eax
   140029ad8:	js     0x140029b45
   140029ada:	mov    r11,QWORD PTR [rsp+0x80]
   140029ae2:	mov    r8,QWORD PTR [rsp+0x70]
   140029ae7:	movsxd r10,DWORD PTR [rsp+0x98]
   140029aef:	mov    rcx,QWORD PTR [rsp+0x20]
   140029af4:	cdqe   
   140029af6:	mov    edx,DWORD PTR [r15+rax*4+0x4]
   140029afb:	mov    r15,QWORD PTR [rsp+0x28]
   140029b00:	test   edx,0xff000000
   140029b06:	je     0x140029a50
   140029b0c:	bt     edx,0x1f
   140029b10:	jb     0x140029b36
   140029b12:	cmp    BYTE PTR [rsp+0xa8],0x0
   140029b1a:	jne    0x140029b36
   140029b1c:	lea    eax,[rbx-0xe000]
   140029b22:	cmp    eax,0x1900
   140029b27:	jb     0x140029b36
   140029b29:	lea    eax,[rbx-0xf0000]
   140029b2f:	cmp    eax,0x20000
   140029b34:	jae    0x140029b45
   140029b36:	test   edx,0x60000000
   140029b3c:	jne    0x140029b45
   140029b3e:	mov    edi,edx
   140029b40:	lea    r12d,[rsi+rbp*1+0x2]
   140029b45:	test   r12d,r12d
   140029b48:	jne    0x140029bce
   140029b4e:	xor    eax,eax
   140029b50:	mov    r14,QWORD PTR [rsp+0x38]
   140029b55:	mov    r13,QWORD PTR [rsp+0x40]
   140029b5a:	mov    r12,QWORD PTR [rsp+0x48]
   140029b5f:	mov    rdi,QWORD PTR [rsp+0x50]
   140029b64:	mov    rsi,QWORD PTR [rsp+0x58]
   140029b69:	mov    rbp,QWORD PTR [rsp+0x78]
   140029b6e:	mov    r15,QWORD PTR [rsp+0x30]
   140029b73:	add    rsp,0x60
   140029b77:	pop    rbx
   140029b78:	ret    
   140029b79:	cmp    BYTE PTR [rsp+0xb0],0x0
   140029b81:	jne    0x140029b45
   140029b83:	lea    ecx,[rsi+rbp*1]
   140029b86:	cmp    ecx,0x13
   140029b89:	jg     0x140029b45
   140029b8b:	mov    eax,0xfffffffe
   140029b90:	sub    eax,ecx
   140029b92:	jmp    0x140029b50
   140029b94:	bt     edx,0x1f
   140029b98:	jb     0x140029bbe
   140029b9a:	cmp    BYTE PTR [rsp+0xa8],0x0
   140029ba2:	jne    0x140029bbe
   140029ba4:	lea    eax,[rbx-0xe000]
   140029baa:	cmp    eax,0x1900
   140029baf:	jb     0x140029bbe
   140029bb1:	lea    eax,[rbx-0xf0000]
   140029bb7:	cmp    eax,0x20000
   140029bbc:	jae    0x140029b4e
   140029bbe:	test   edx,0x60000000
   140029bc4:	jne    0x140029b4e
   140029bc6:	mov    edi,edx
   140029bc8:	mov    r12d,0x2
   140029bce:	cmp    edi,0x80000001
   140029bd4:	jne    0x140029be0
   140029bd6:	mov    eax,0x1
   140029bdb:	jmp    0x140029b50
   140029be0:	mov    rcx,QWORD PTR [rsp+0xa0]
   140029be8:	mov    eax,r12d
   140029beb:	mov    DWORD PTR [rcx],edi
   140029bed:	jmp    0x140029b50
   140029bf2:	int3   
   140029bf3:	int3   
   140029bf4:	int3   
   140029bf5:	int3   
   140029bf6:	int3   
   140029bf7:	int3   
   140029bf8:	int3   
   140029bf9:	int3   
   140029bfa:	int3   
   140029bfb:	int3   
   140029bfc:	int3   
   140029bfd:	int3   
   140029bfe:	int3   
   140029bff:	int3   
   140029c00:	rex push rbx
   140029c02:	push   rbp
   140029c03:	push   rsi
   140029c04:	push   rdi
   140029c05:	push   r12
   140029c07:	push   r13
   140029c09:	sub    rsp,0x78
   140029c0d:	mov    rax,QWORD PTR [rip+0x3cc9c]        # 0x1400668b0
   140029c14:	xor    rax,rsp
   140029c17:	mov    QWORD PTR [rsp+0x60],rax
   140029c1c:	mov    rbp,QWORD PTR [rsp+0xd0]
   140029c24:	mov    r12,QWORD PTR [rsp+0xd8]
   140029c2c:	mov    r13,QWORD PTR [rsp+0xe8]
   140029c34:	mov    ebx,r8d
   140029c37:	and    r8d,0xffffff
   140029c3e:	mov    rsi,r9
   140029c41:	shr    ebx,0x18
   140029c44:	mov    r9,rdx
   140029c47:	mov    rdi,rcx
   140029c4a:	and    ebx,0x1f
   140029c4d:	cmp    ebx,0x3
   140029c50:	jg     0x140029c8d
   140029c52:	mov    ecx,ebx
   140029c54:	lea    rdx,[rsp+0x41]
   140029c59:	sub    ecx,0x1
   140029c5c:	je     0x140029c83
   140029c5e:	sub    ecx,0x1
   140029c61:	je     0x140029c77
   140029c63:	cmp    ecx,0x1
   140029c66:	jne    0x140029c86
   140029c68:	mov    eax,r8d
   140029c6b:	lea    rdx,[rsp+0x42]
   140029c70:	shr    eax,0x10
   140029c73:	mov    BYTE PTR [rsp+0x41],al
   140029c77:	mov    eax,r8d
   140029c7a:	shr    eax,0x8
   140029c7d:	inc    rdx
   140029c80:	mov    BYTE PTR [rdx-0x1],al
   140029c83:	mov    BYTE PTR [rdx],r8b
   140029c86:	lea    rdx,[rsp+0x41]
   140029c8b:	jmp    0x140029c9a
   140029c8d:	movsxd rax,DWORD PTR [rdx+0x20]
   140029c91:	mov    edx,r8d
   140029c94:	add    rax,r9
   140029c97:	add    rdx,rax
   140029c9a:	mov    eax,DWORD PTR [rdi+0x50]
   140029c9d:	test   eax,eax
   140029c9f:	je     0x140029ce7
   140029ca1:	cmp    eax,0x1
   140029ca4:	jle    0x140029cb5
   140029ca6:	cmp    ebx,0x1
   140029ca9:	jne    0x140029cb2
   140029cab:	mov    al,0xf
   140029cad:	mov    DWORD PTR [rdi+0x50],ebx
   140029cb0:	jmp    0x140029cc5
   140029cb2:	cmp    eax,0x1
   140029cb5:	jne    0x140029ce7
   140029cb7:	cmp    ebx,0x1
   140029cba:	jle    0x140029ce7
   140029cbc:	mov    al,0xe
   140029cbe:	mov    DWORD PTR [rdi+0x50],0x2
   140029cc5:	mov    BYTE PTR [rsp+0x40],al
   140029cc9:	lea    rax,[rsp+0x41]
   140029cce:	cmp    rdx,rax
   140029cd1:	je     0x140029ce0
   140029cd3:	lea    rcx,[rsp+0x41]
   140029cd8:	movsxd r8,ebx
   140029cdb:	call   0x14002b9a0
   140029ce0:	lea    rdx,[rsp+0x40]
   140029ce5:	inc    ebx
   140029ce7:	mov    eax,DWORD PTR [rsp+0xe0]
   140029cee:	mov    QWORD PTR [rsp+0x38],r13
   140029cf3:	mov    r9,rsi
   140029cf6:	mov    DWORD PTR [rsp+0x30],eax
   140029cfa:	mov    r8d,ebx
   140029cfd:	mov    rcx,rdi
   140029d00:	mov    QWORD PTR [rsp+0x28],r12
   140029d05:	mov    QWORD PTR [rsp+0x20],rbp
   140029d0a:	call   0x14002a710
   140029d0f:	mov    rcx,QWORD PTR [rsp+0x60]
   140029d14:	xor    rcx,rsp
   140029d17:	call   0x14002b250
   140029d1c:	add    rsp,0x78
   140029d20:	pop    r13
   140029d22:	pop    r12
   140029d24:	pop    rdi
   140029d25:	pop    rsi
   140029d26:	pop    rbp
   140029d27:	pop    rbx
   140029d28:	ret    
   140029d29:	int3   
   140029d2a:	int3   
   140029d2b:	int3   
   140029d2c:	int3   
   140029d2d:	int3   
   140029d2e:	int3   
   140029d2f:	int3   
   140029d30:	mov    QWORD PTR [rsp+0x10],rbx
   140029d35:	mov    QWORD PTR [rsp+0x18],rbp
   140029d3a:	mov    QWORD PTR [rsp+0x20],rsi
   140029d3f:	push   rdi
   140029d40:	sub    rsp,0x50
   140029d44:	mov    r11,QWORD PTR [r9]
   140029d47:	movzx  eax,BYTE PTR [rsp+0xa8]
   140029d4f:	mov    r10,QWORD PTR [rsp+0x80]
   140029d57:	mov    BYTE PTR [rsp+0x40],al
   140029d5b:	movzx  eax,BYTE PTR [rcx+0x3f]
   140029d5f:	mov    esi,r8d
   140029d62:	mov    BYTE PTR [rsp+0x38],al
   140029d66:	mov    rbp,rdx
   140029d69:	sub    r10,r11
   140029d6c:	lea    rax,[rsp+0x60]
   140029d71:	sar    r10,1
   140029d74:	mov    rdi,r9
   140029d77:	mov    QWORD PTR [rsp+0x30],rax
   140029d7c:	mov    rbx,rcx
   140029d7f:	mov    DWORD PTR [rsp+0x28],r10d
   140029d84:	xor    r9d,r9d
   140029d87:	xor    r8d,r8d
   140029d8a:	mov    edx,esi
   140029d8c:	mov    rcx,rbp
   140029d8f:	mov    QWORD PTR [rsp+0x20],r11
   140029d94:	mov    DWORD PTR [rsp+0x60],0x0
   140029d9c:	call   0x140029970
   140029da1:	cmp    eax,0x2
   140029da4:	jl     0x140029e1e
   140029da6:	mov    r8d,DWORD PTR [rsp+0x60]
   140029dab:	mov    ecx,r8d
   140029dae:	and    ecx,0x1f000000
   140029db4:	cmp    ecx,0x1000000
   140029dba:	jne    0x140029dc9
   140029dbc:	mov    rcx,QWORD PTR [rbx+0x30]
   140029dc0:	cmp    BYTE PTR [rcx+0x104],0xdb
   140029dc7:	je     0x140029e1e
   140029dc9:	mov    r9,QWORD PTR [rsp+0x88]
   140029dd1:	add    eax,0xfffffffe
   140029dd4:	mov    rdx,rbp
   140029dd7:	movsxd rcx,eax
   140029dda:	mov    rax,QWORD PTR [rsp+0xb0]
   140029de2:	mov    QWORD PTR [rsp+0x38],rax
   140029de7:	mov    eax,DWORD PTR [rsp+0xa0]
   140029dee:	add    rcx,rcx
   140029df1:	add    QWORD PTR [rdi],rcx
   140029df4:	mov    DWORD PTR [rsp+0x30],eax
   140029df8:	mov    rax,QWORD PTR [rsp+0x98]
   140029e00:	mov    QWORD PTR [rsp+0x28],rax
   140029e05:	mov    rax,QWORD PTR [rsp+0x90]
   140029e0d:	mov    rcx,rbx
   140029e10:	mov    QWORD PTR [rsp+0x20],rax
   140029e15:	call   0x140029c00
   140029e1a:	mov    al,0x1
   140029e1c:	jmp    0x140029e7d
   140029e1e:	test   eax,eax
   140029e20:	jns    0x140029e73
   140029e22:	mov    r9d,0xfffffffe
   140029e28:	mov    DWORD PTR [rbx+0xd0],esi
   140029e2e:	mov    rcx,QWORD PTR [rdi]
   140029e31:	sub    r9d,eax
   140029e34:	test   r9d,r9d
   140029e37:	jle    0x140029e65
   140029e39:	lea    rdx,[rbx+0xd4]
   140029e40:	mov    r8d,r9d
   140029e43:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140029e50:	movzx  eax,WORD PTR [rcx]
   140029e53:	add    rdx,0x2
   140029e57:	add    rcx,0x2
   140029e5b:	sub    r8,0x1
   140029e5f:	mov    WORD PTR [rdx-0x2],ax
   140029e63:	jne    0x140029e50
   140029e65:	mov    QWORD PTR [rdi],rcx
   140029e68:	mov    al,0x1
   140029e6a:	mov    BYTE PTR [rbx+0x119],r9b
   140029e71:	jmp    0x140029e7d
   140029e73:	cmp    eax,0x1
   140029e76:	jne    0x140029e7b
   140029e78:	mov    BYTE PTR [rbx+0x5f],al
   140029e7b:	xor    al,al
   140029e7d:	mov    rbx,QWORD PTR [rsp+0x68]
   140029e82:	mov    rbp,QWORD PTR [rsp+0x70]
   140029e87:	mov    rsi,QWORD PTR [rsp+0x78]
   140029e8c:	add    rsp,0x50
   140029e90:	pop    rdi
   140029e91:	ret    
   140029e92:	int3   
   140029e93:	int3   
   140029e94:	int3   
   140029e95:	int3   
   140029e96:	int3   
   140029e97:	int3   
   140029e98:	int3   
   140029e99:	int3   
   140029e9a:	int3   
   140029e9b:	int3   
   140029e9c:	int3   
   140029e9d:	int3   
   140029e9e:	int3   
   140029e9f:	int3   
   140029ea0:	rex push rbx
   140029ea2:	sub    rsp,0x60
   140029ea6:	mov    BYTE PTR [rsp+0x40],0x1
   140029eab:	mov    BYTE PTR [rsp+0x38],r9b
   140029eb0:	lea    rax,[rsp+0x50]
   140029eb5:	mov    QWORD PTR [rsp+0x30],rax
   140029eba:	xor    eax,eax
   140029ebc:	mov    rbx,r8
   140029ebf:	mov    DWORD PTR [rsp+0x28],eax
   140029ec3:	xor    r9d,r9d
   140029ec6:	xor    r8d,r8d
   140029ec9:	mov    QWORD PTR [rsp+0x20],rax
   140029ece:	call   0x140029970
   140029ed3:	cmp    eax,0x2
   140029ed6:	jl     0x140029f02
   140029ed8:	mov    ecx,DWORD PTR [rsp+0x50]
   140029edc:	mov    eax,ecx
   140029ede:	mov    edx,ecx
   140029ee0:	and    ecx,0xffffff
   140029ee6:	shr    eax,0x18
   140029ee9:	shr    edx,0x1f
   140029eec:	and    eax,0x1f
   140029eef:	cmp    eax,0x3
   140029ef2:	jg     0x140029f02
   140029ef4:	mov    DWORD PTR [rbx],ecx
   140029ef6:	test   edx,edx
   140029ef8:	jne    0x140029f04
   140029efa:	neg    eax
   140029efc:	add    rsp,0x60
   140029f00:	pop    rbx
   140029f01:	ret    
   140029f02:	xor    eax,eax
   140029f04:	add    rsp,0x60
   140029f08:	pop    rbx
   140029f09:	ret    
   140029f0a:	int3   
   140029f0b:	int3   
   140029f0c:	int3   
   140029f0d:	int3   
   140029f0e:	int3   
   140029f0f:	int3   
   140029f10:	mov    QWORD PTR [rsp+0x18],rbx
   140029f15:	mov    QWORD PTR [rsp+0x20],rbp
   140029f1a:	push   rdi
   140029f1b:	push   r12
   140029f1d:	push   r13
   140029f1f:	sub    rsp,0x50
   140029f23:	movzx  eax,BYTE PTR [rdx+0x2]
   140029f27:	mov    r11,QWORD PTR [rdx+0x10]
   140029f2b:	mov    r10,QWORD PTR [rdx+0x18]
   140029f2f:	mov    BYTE PTR [rsp+0x40],al
   140029f33:	mov    rbx,rcx
   140029f36:	mov    rbp,r9
   140029f39:	movzx  eax,BYTE PTR [rbx+0x3f]
   140029f3d:	movsx  r9d,BYTE PTR [rcx+0x119]
   140029f45:	mov    rcx,QWORD PTR [rcx+0x30]
   140029f49:	mov    rcx,QWORD PTR [rcx+0x128]
   140029f50:	mov    BYTE PTR [rsp+0x38],al
   140029f54:	sub    r10,r11
   140029f57:	lea    rax,[rsp+0x70]
   140029f5c:	mov    rdi,rdx
   140029f5f:	mov    edx,DWORD PTR [rbx+0xd0]
   140029f65:	mov    QWORD PTR [rsp+0x30],rax
   140029f6a:	mov    r13d,r8d
   140029f6d:	sar    r10,1
   140029f70:	mov    DWORD PTR [rsp+0x28],r10d
   140029f75:	lea    r8,[rbx+0xd4]
   140029f7c:	mov    QWORD PTR [rsp+0x20],r11
   140029f81:	mov    DWORD PTR [rsp+0x70],0x0
   140029f89:	call   0x140029970
   140029f8e:	cmp    eax,0x2
   140029f91:	mov    r11d,eax
   140029f94:	jl     0x14002a03b
   140029f9a:	mov    QWORD PTR [rsp+0x78],rsi
   140029f9f:	movsx  esi,BYTE PTR [rbx+0x119]
   140029fa6:	sub    r11d,0x2
   140029faa:	cmp    r11d,esi
   140029fad:	jl     0x140029fc5
   140029faf:	sub    r11d,esi
   140029fb2:	movsxd rax,r11d
   140029fb5:	add    rax,rax
   140029fb8:	add    QWORD PTR [rdi+0x10],rax
   140029fbc:	mov    BYTE PTR [rbx+0x119],0x0
   140029fc3:	jmp    0x140029fef
   140029fc5:	sub    esi,r11d
   140029fc8:	lea    rcx,[rbx+0xd4]
   140029fcf:	lea    eax,[rsi+rsi*1]
   140029fd2:	movsxd r8,eax
   140029fd5:	movsxd rax,r11d
   140029fd8:	lea    rdx,[rbx+rax*2+0xd4]
   140029fe0:	call   0x14002b9a0
   140029fe5:	neg    sil
   140029fe8:	mov    BYTE PTR [rbx+0x119],sil
   140029fef:	mov    rdx,QWORD PTR [rbx+0x30]
   140029ff3:	mov    r8d,DWORD PTR [rsp+0x70]
   140029ff8:	mov    QWORD PTR [rsp+0x38],rbp
   140029ffd:	mov    DWORD PTR [rbx+0xd0],0xffffffff
   14002a007:	mov    rdx,QWORD PTR [rdx+0x128]
   14002a00e:	lea    rax,[rdi+0x30]
   14002a012:	mov    DWORD PTR [rsp+0x30],r13d
   14002a017:	mov    QWORD PTR [rsp+0x28],rax
   14002a01c:	mov    rax,QWORD PTR [rdi+0x28]
   14002a020:	lea    r9,[rdi+0x20]
   14002a024:	mov    rcx,rbx
   14002a027:	mov    QWORD PTR [rsp+0x20],rax
   14002a02c:	call   0x140029c00
   14002a031:	mov    rsi,QWORD PTR [rsp+0x78]
   14002a036:	jmp    0x14002a0c3
   14002a03b:	test   eax,eax
   14002a03d:	jns    0x14002a092
   14002a03f:	movsx  r8,BYTE PTR [rbx+0x119]
   14002a047:	mov    rcx,QWORD PTR [rdi+0x10]
   14002a04b:	mov    r9d,0xfffffffe
   14002a051:	sub    r9d,eax
   14002a054:	cmp    r8d,r9d
   14002a057:	jge    0x14002a085
   14002a059:	mov    eax,r9d
   14002a05c:	lea    rdx,[rbx+r8*2+0xd4]
   14002a064:	sub    eax,r8d
   14002a067:	mov    r8d,eax
   14002a06a:	nop    WORD PTR [rax+rax*1+0x0]
   14002a070:	movzx  eax,WORD PTR [rcx]
   14002a073:	add    rdx,0x2
   14002a077:	add    rcx,0x2
   14002a07b:	sub    r8,0x1
   14002a07f:	mov    WORD PTR [rdx-0x2],ax
   14002a083:	jne    0x14002a070
   14002a085:	mov    QWORD PTR [rdi+0x10],rcx
   14002a089:	mov    BYTE PTR [rbx+0x119],r9b
   14002a090:	jmp    0x14002a0c3
   14002a092:	cmp    eax,0x1
   14002a095:	jne    0x14002a09a
   14002a097:	mov    BYTE PTR [rbx+0x5f],al
   14002a09a:	mov    eax,DWORD PTR [rbx+0xd0]
   14002a0a0:	mov    DWORD PTR [rbx+0xd0],0xffffffff
   14002a0aa:	mov    DWORD PTR [rbx+0x54],eax
   14002a0ad:	movzx  eax,BYTE PTR [rbx+0x119]
   14002a0b4:	neg    al
   14002a0b6:	mov    BYTE PTR [rbx+0x119],al
   14002a0bc:	mov    DWORD PTR [rbp+0x0],0xa
   14002a0c3:	lea    r11,[rsp+0x50]
   14002a0c8:	mov    rbx,QWORD PTR [r11+0x30]
   14002a0cc:	mov    rbp,QWORD PTR [r11+0x38]
   14002a0d0:	mov    rsp,r11
   14002a0d3:	pop    r13
   14002a0d5:	pop    r12
   14002a0d7:	pop    rdi
   14002a0d8:	ret    
   14002a0d9:	int3   
   14002a0da:	int3   
   14002a0db:	int3   
   14002a0dc:	int3   
   14002a0dd:	int3   
   14002a0de:	int3   
   14002a0df:	int3   
   14002a0e0:	mov    QWORD PTR [rsp+0x18],rbx
   14002a0e5:	mov    BYTE PTR [rsp+0x20],r9b
   14002a0ea:	mov    QWORD PTR [rsp+0x10],rdx
   14002a0ef:	mov    QWORD PTR [rsp+0x8],rcx
   14002a0f4:	push   rbp
   14002a0f5:	push   rsi
   14002a0f6:	push   rdi
   14002a0f7:	sub    rsp,0x70
   14002a0fb:	movsxd rax,DWORD PTR [rdx+0x14]
   14002a0ff:	movsxd r11,DWORD PTR [rsp+0xd0]
   14002a107:	mov    rbp,QWORD PTR [rsp+0xc0]
   14002a10f:	lea    r10,[rdx+rax*1]
   14002a113:	movsxd rax,DWORD PTR [rdx+0x18]
   14002a117:	mov    rsi,r8
   14002a11a:	movzx  edi,WORD PTR [r10+r11*2]
   14002a11f:	lea    rcx,[r10+r11*2]
   14002a123:	lea    r10,[rdx+rax*1]
   14002a127:	mov    eax,DWORD PTR [r10+r11*4]
   14002a12b:	lea    rdx,[r10+r11*4]
   14002a12f:	add    rcx,0x2
   14002a133:	add    rdx,0x4
   14002a137:	mov    QWORD PTR [rsp+0x58],rcx
   14002a13c:	mov    QWORD PTR [rsp+0x50],rdx
   14002a141:	test   eax,eax
   14002a143:	je     0x14002a19b
   14002a145:	bt     eax,0x1f
   14002a149:	jb     0x14002a150
   14002a14b:	test   r9b,r9b
   14002a14e:	je     0x14002a19b
   14002a150:	mov    r10d,DWORD PTR [rsp+0xb0]
   14002a158:	shr    eax,0x18
   14002a15b:	and    eax,0x1f
   14002a15e:	cmp    eax,r10d
   14002a161:	jl     0x14002a1a3
   14002a163:	mov    edx,DWORD PTR [rsp+0xb8]
   14002a16a:	test   edx,edx
   14002a16c:	js     0x14002a177
   14002a16e:	mov    rcx,QWORD PTR [r8]
   14002a171:	call   QWORD PTR [r8+0x8]
   14002a175:	jmp    0x14002a188
   14002a177:	mov    r8d,DWORD PTR [rsp+0xc8]
   14002a17f:	mov    rcx,QWORD PTR [rsi]
   14002a182:	mov    rdx,rbp
   14002a185:	call   QWORD PTR [rsi+0x18]
   14002a188:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a18d:	mov    rcx,QWORD PTR [rsp+0x58]
   14002a192:	movzx  r9d,BYTE PTR [rsp+0xa8]
   14002a19b:	mov    r10d,DWORD PTR [rsp+0xb0]
   14002a1a3:	xor    ebx,ebx
   14002a1a5:	test   rdi,rdi
   14002a1a8:	jle    0x14002a291
   14002a1ae:	movsxd r8,DWORD PTR [rsp+0xc8]
   14002a1b6:	mov    r11,r8
   14002a1b9:	mov    QWORD PTR [rsp+0x60],r8
   14002a1be:	xchg   ax,ax
   14002a1c0:	movzx  eax,WORD PTR [rcx+rbx*2]
   14002a1c4:	mov    WORD PTR [rbp+r11*2+0x0],ax
   14002a1ca:	mov    ecx,DWORD PTR [rdx+rbx*4]
   14002a1cd:	test   ecx,ecx
   14002a1cf:	je     0x14002a270
   14002a1d5:	mov    eax,ecx
   14002a1d7:	shr    eax,0x18
   14002a1da:	test   eax,eax
   14002a1dc:	jne    0x14002a223
   14002a1de:	mov    rdx,QWORD PTR [rsp+0xd8]
   14002a1e6:	lea    eax,[r8+0x1]
   14002a1ea:	mov    r8,rsi
   14002a1ed:	mov    QWORD PTR [rsp+0x48],rdx
   14002a1f2:	mov    rdx,QWORD PTR [rsp+0x98]
   14002a1fa:	mov    DWORD PTR [rsp+0x40],ecx
   14002a1fe:	mov    rcx,QWORD PTR [rsp+0x90]
   14002a206:	mov    DWORD PTR [rsp+0x38],eax
   14002a20a:	mov    QWORD PTR [rsp+0x30],rbp
   14002a20f:	mov    DWORD PTR [rsp+0x28],0xffffffff
   14002a217:	mov    DWORD PTR [rsp+0x20],r10d
   14002a21c:	call   0x14002a0e0
   14002a221:	jmp    0x14002a25e
   14002a223:	test   r9b,r9b
   14002a226:	je     0x14002a235
   14002a228:	test   ecx,0x60000000
   14002a22e:	mov    edx,0x0
   14002a233:	jmp    0x14002a243
   14002a235:	and    ecx,0xe0000000
   14002a23b:	xor    edx,edx
   14002a23d:	cmp    ecx,0x80000000
   14002a243:	sete   dl
   14002a246:	test   edx,edx
   14002a248:	je     0x14002a26b
   14002a24a:	and    eax,0x1f
   14002a24d:	cmp    eax,r10d
   14002a250:	jl     0x14002a26b
   14002a252:	mov    rcx,QWORD PTR [rsi]
   14002a255:	inc    r8d
   14002a258:	mov    rdx,rbp
   14002a25b:	call   QWORD PTR [rsi+0x18]
   14002a25e:	mov    r11,QWORD PTR [rsp+0x60]
   14002a263:	mov    r8d,DWORD PTR [rsp+0xc8]
   14002a26b:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a270:	mov    r9b,BYTE PTR [rsp+0xa8]
   14002a278:	mov    r10d,DWORD PTR [rsp+0xb0]
   14002a280:	mov    rcx,QWORD PTR [rsp+0x58]
   14002a285:	inc    rbx
   14002a288:	cmp    rbx,rdi
   14002a28b:	jl     0x14002a1c0
   14002a291:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002a299:	add    rsp,0x70
   14002a29d:	pop    rdi
   14002a29e:	pop    rsi
   14002a29f:	pop    rbp
   14002a2a0:	ret    
   14002a2a1:	int3   
   14002a2a2:	int3   
   14002a2a3:	int3   
   14002a2a4:	int3   
   14002a2a5:	int3   
   14002a2a6:	int3   
   14002a2a7:	int3   
   14002a2a8:	int3   
   14002a2a9:	int3   
   14002a2aa:	int3   
   14002a2ab:	int3   
   14002a2ac:	int3   
   14002a2ad:	int3   
   14002a2ae:	int3   
   14002a2af:	int3   
   14002a2b0:	mov    r11,rsp
   14002a2b3:	push   rsi
   14002a2b4:	push   r13
   14002a2b6:	sub    rsp,0xf8
   14002a2bd:	mov    rax,QWORD PTR [rip+0x3c5ec]        # 0x1400668b0
   14002a2c4:	xor    rax,rsp
   14002a2c7:	mov    QWORD PTR [rsp+0xc8],rax
   14002a2cf:	mov    rax,QWORD PTR [rcx+0x128]
   14002a2d6:	mov    rsi,rdx
   14002a2d9:	mov    rdx,QWORD PTR [rsp+0x130]
   14002a2e1:	mov    r13d,r9d
   14002a2e4:	mov    r10,rcx
   14002a2e7:	mov    QWORD PTR [rsp+0x60],rcx
   14002a2ec:	mov    QWORD PTR [rsp+0x50],rdx
   14002a2f1:	mov    QWORD PTR [rsp+0x78],rax
   14002a2f6:	test   rax,rax
   14002a2f9:	je     0x14002a693
   14002a2ff:	movsxd r9,DWORD PTR [rax+0x28]
   14002a303:	movsxd rcx,DWORD PTR [rax+0x34]
   14002a307:	mov    QWORD PTR [r11+0x20],rbx
   14002a30b:	mov    QWORD PTR [r11-0x18],rbp
   14002a30f:	add    r9,rax
   14002a312:	add    rcx,rax
   14002a315:	mov    QWORD PTR [r11-0x28],r12
   14002a319:	mov    QWORD PTR [r11-0x38],r15
   14002a31d:	movsxd r15,DWORD PTR [rax+0x3c]
   14002a321:	movsxd r11,DWORD PTR [rax+0x2c]
   14002a325:	add    r15,rax
   14002a328:	cmp    r8d,0x1
   14002a32c:	sete   bpl
   14002a330:	xor    ebx,ebx
   14002a332:	mov    QWORD PTR [rsp+0x80],r9
   14002a33a:	mov    QWORD PTR [rsp+0x88],rcx
   14002a342:	cmp    r13d,0x2
   14002a346:	jne    0x14002a34e
   14002a348:	lea    r12d,[rbx+0x3]
   14002a34c:	jmp    0x14002a369
   14002a34e:	cmp    BYTE PTR [r10+0x104],0xdb
   14002a356:	je     0x14002a363
   14002a358:	test   r13d,r13d
   14002a35b:	jne    0x14002a363
   14002a35d:	lea    r12d,[r13+0x1]
   14002a361:	jmp    0x14002a369
   14002a363:	mov    r12d,0x2
   14002a369:	xor    eax,eax
   14002a36b:	mov    r8,r11
   14002a36e:	mov    QWORD PTR [rsp+0x90],r11
   14002a376:	mov    QWORD PTR [rsp+0x70],rax
   14002a37b:	test   r11d,r11d
   14002a37e:	jle    0x14002a673
   14002a384:	mov    QWORD PTR [rsp+0xe8],rdi
   14002a38c:	mov    QWORD PTR [rsp+0xd8],r14
   14002a394:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002a3a0:	movzx  eax,WORD PTR [r9+rax*2]
   14002a3a5:	cmp    eax,r11d
   14002a3a8:	jle    0x14002a647
   14002a3ae:	lea    rax,[r9+rax*2]
   14002a3b2:	xor    r14d,r14d
   14002a3b5:	mov    QWORD PTR [rsp+0x98],rax
   14002a3bd:	mov    QWORD PTR [rsp+0x68],r14
   14002a3c2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002a3d0:	movzx  eax,WORD PTR [rax+r14*2]
   14002a3d5:	shl    eax,0x2
   14002a3d8:	test   eax,eax
   14002a3da:	je     0x14002a615
   14002a3e0:	mov    r14,QWORD PTR [rsp+0x78]
   14002a3e5:	cdqe   
   14002a3e7:	lea    rdi,[rcx+rax*2]
   14002a3eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14002a3f0:	movzx  eax,WORD PTR [rdi]
   14002a3f3:	add    rdi,0x2
   14002a3f7:	mov    ecx,DWORD PTR [r15+rax*4]
   14002a3fb:	test   ecx,ecx
   14002a3fd:	je     0x14002a5fb
   14002a403:	mov    r8d,ecx
   14002a406:	shr    r8d,0x18
   14002a40a:	test   r8d,r8d
   14002a40d:	jne    0x14002a4a8
   14002a413:	cmp    ebx,0xffff
   14002a419:	ja     0x14002a429
   14002a41b:	mov    WORD PTR [rsp+0xa0],bx
   14002a423:	lea    eax,[r8+0x1]
   14002a427:	jmp    0x14002a464
   14002a429:	mov    r8d,0x2840
   14002a42f:	mov    eax,ebx
   14002a431:	sar    eax,0xa
   14002a434:	sub    ax,r8w
   14002a438:	mov    r8d,0x3ff
   14002a43e:	mov    WORD PTR [rsp+0xa0],ax
   14002a446:	movzx  eax,bx
   14002a449:	and    ax,r8w
   14002a44d:	mov    r8d,0xdc00
   14002a453:	or     ax,r8w
   14002a457:	mov    WORD PTR [rsp+0xa2],ax
   14002a45f:	mov    eax,0x2
   14002a464:	mov    QWORD PTR [rsp+0x48],rdx
   14002a469:	mov    DWORD PTR [rsp+0x40],ecx
   14002a46d:	mov    DWORD PTR [rsp+0x38],eax
   14002a471:	lea    rax,[rsp+0xa0]
   14002a479:	movzx  r9d,bpl
   14002a47d:	mov    r8,rsi
   14002a480:	mov    QWORD PTR [rsp+0x30],rax
   14002a485:	mov    rdx,r14
   14002a488:	mov    rcx,r10
   14002a48b:	mov    DWORD PTR [rsp+0x28],ebx
   14002a48f:	mov    DWORD PTR [rsp+0x20],r12d
   14002a494:	call   0x14002a0e0
   14002a499:	mov    r10,QWORD PTR [rsp+0x60]
   14002a49e:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a4a3:	jmp    0x14002a5fb
   14002a4a8:	test   bpl,bpl
   14002a4ab:	je     0x14002a4bd
   14002a4ad:	test   ecx,0x60000000
   14002a4b3:	mov    edx,0x0
   14002a4b8:	sete   dl
   14002a4bb:	jmp    0x14002a4ce
   14002a4bd:	xor    edx,edx
   14002a4bf:	mov    eax,ecx
   14002a4c1:	and    eax,0xe0000000
   14002a4c6:	cmp    eax,0x80000000
   14002a4cb:	sete   dl
   14002a4ce:	test   edx,edx
   14002a4d0:	je     0x14002a5f6
   14002a4d6:	and    r8d,0x1f
   14002a4da:	cmp    r8d,r12d
   14002a4dd:	jl     0x14002a5ef
   14002a4e3:	mov    edx,r13d
   14002a4e6:	sub    edx,0x2
   14002a4e9:	je     0x14002a58f
   14002a4ef:	sub    edx,0x1
   14002a4f2:	je     0x14002a56c
   14002a4f4:	sub    edx,0x1
   14002a4f7:	je     0x14002a539
   14002a4f9:	cmp    edx,0x1
   14002a4fc:	jne    0x14002a5a3
   14002a502:	cmp    r8d,0x2
   14002a506:	jne    0x14002a5da
   14002a50c:	and    ecx,0xffffff
   14002a512:	mov    eax,0x5e5f
   14002a517:	mov    edx,0x5c5d
   14002a51c:	add    eax,ecx
   14002a51e:	cmp    ax,dx
   14002a521:	ja     0x14002a5d3
   14002a527:	add    cl,0x5f
   14002a52a:	cmp    cl,0x5d
   14002a52d:	jbe    0x14002a5a3
   14002a52f:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a534:	jmp    0x14002a5fb
   14002a539:	cmp    r8d,0x2
   14002a53d:	jne    0x14002a5cc
   14002a543:	and    ecx,0xffffff
   14002a549:	mov    eax,0x5e5f
   14002a54e:	mov    edx,0x5d5d
   14002a553:	add    eax,ecx
   14002a555:	cmp    ax,dx
   14002a558:	ja     0x14002a5c5
   14002a55a:	add    cl,0x5f
   14002a55d:	cmp    cl,0x5d
   14002a560:	jbe    0x14002a5a3
   14002a562:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a567:	jmp    0x14002a5fb
   14002a56c:	cmp    r8d,0x2
   14002a570:	jne    0x14002a5be
   14002a572:	and    ecx,0xffffff
   14002a578:	cmp    ecx,0x8140
   14002a57e:	jb     0x14002a5b7
   14002a580:	cmp    ecx,0xeffc
   14002a586:	jbe    0x14002a5a3
   14002a588:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a58d:	jmp    0x14002a5fb
   14002a58f:	cmp    r8d,0x3
   14002a593:	jne    0x14002a5e1
   14002a595:	and    ecx,0xffffff
   14002a59b:	cmp    ecx,0x82ffff
   14002a5a1:	ja     0x14002a5e8
   14002a5a3:	mov    rcx,QWORD PTR [rsi]
   14002a5a6:	mov    edx,ebx
   14002a5a8:	call   QWORD PTR [rsi+0x8]
   14002a5ab:	mov    r10,QWORD PTR [rsp+0x60]
   14002a5b0:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5b5:	jmp    0x14002a5fb
   14002a5b7:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5bc:	jmp    0x14002a5fb
   14002a5be:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5c3:	jmp    0x14002a5fb
   14002a5c5:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5ca:	jmp    0x14002a5fb
   14002a5cc:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5d1:	jmp    0x14002a5fb
   14002a5d3:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5d8:	jmp    0x14002a5fb
   14002a5da:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5df:	jmp    0x14002a5fb
   14002a5e1:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5e6:	jmp    0x14002a5fb
   14002a5e8:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5ed:	jmp    0x14002a5fb
   14002a5ef:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5f4:	jmp    0x14002a5fb
   14002a5f6:	mov    rdx,QWORD PTR [rsp+0x50]
   14002a5fb:	inc    ebx
   14002a5fd:	test   bl,0xf
   14002a600:	jne    0x14002a3f0
   14002a606:	mov    r14,QWORD PTR [rsp+0x68]
   14002a60b:	mov    rcx,QWORD PTR [rsp+0x88]
   14002a613:	jmp    0x14002a618
   14002a615:	add    ebx,0x10
   14002a618:	mov    rax,QWORD PTR [rsp+0x98]
   14002a620:	inc    r14
   14002a623:	cmp    r14,0x40
   14002a627:	mov    QWORD PTR [rsp+0x68],r14
   14002a62c:	jl     0x14002a3d0
   14002a632:	mov    r8,QWORD PTR [rsp+0x90]
   14002a63a:	mov    r9,QWORD PTR [rsp+0x80]
   14002a642:	mov    r11d,r8d
   14002a645:	jmp    0x14002a64d
   14002a647:	add    ebx,0x400
   14002a64d:	mov    rax,QWORD PTR [rsp+0x70]
   14002a652:	inc    rax
   14002a655:	cmp    rax,r8
   14002a658:	mov    QWORD PTR [rsp+0x70],rax
   14002a65d:	jl     0x14002a3a0
   14002a663:	mov    r14,QWORD PTR [rsp+0xd8]
   14002a66b:	mov    rdi,QWORD PTR [rsp+0xe8]
   14002a673:	mov    r12,QWORD PTR [rsp+0xe0]
   14002a67b:	mov    rbp,QWORD PTR [rsp+0xf0]
   14002a683:	mov    rbx,QWORD PTR [rsp+0x128]
   14002a68b:	mov    r15,QWORD PTR [rsp+0xd0]
   14002a693:	mov    rcx,QWORD PTR [rsp+0xc8]
   14002a69b:	xor    rcx,rsp
   14002a69e:	call   0x14002b250
   14002a6a3:	add    rsp,0xf8
   14002a6aa:	pop    r13
   14002a6ac:	pop    rsi
   14002a6ad:	ret    
   14002a6ae:	int3   
   14002a6af:	int3   
   14002a6b0:	mov    rax,rdx
   14002a6b3:	mov    r8d,0x10ffff
   14002a6b9:	xor    edx,edx
   14002a6bb:	mov    rcx,QWORD PTR [rax]
   14002a6be:	rex.W jmp QWORD PTR [rax+0x10]
   14002a6c2:	int3   
   14002a6c3:	int3   
   14002a6c4:	int3   
   14002a6c5:	int3   
   14002a6c6:	int3   
   14002a6c7:	int3   
   14002a6c8:	int3   
   14002a6c9:	int3   
   14002a6ca:	int3   
   14002a6cb:	int3   
   14002a6cc:	int3   
   14002a6cd:	int3   
   14002a6ce:	int3   
   14002a6cf:	int3   
   14002a6d0:	rex push rbx
   14002a6d2:	sub    rsp,0x20
   14002a6d6:	mov    rbx,rdx
   14002a6d9:	mov    r8d,0xd7ff
   14002a6df:	xor    edx,edx
   14002a6e1:	mov    rcx,QWORD PTR [rbx]
   14002a6e4:	call   QWORD PTR [rbx+0x10]
   14002a6e7:	mov    rcx,QWORD PTR [rbx]
   14002a6ea:	mov    edx,0xe000
   14002a6ef:	mov    r8d,0x10ffff
   14002a6f5:	mov    rax,QWORD PTR [rbx+0x10]
   14002a6f9:	add    rsp,0x20
   14002a6fd:	pop    rbx
   14002a6fe:	rex.W jmp rax
   14002a701:	int3   
   14002a702:	int3   
   14002a703:	int3   
   14002a704:	int3   
   14002a705:	int3   
   14002a706:	int3   
   14002a707:	int3   
   14002a708:	int3   
   14002a709:	int3   
   14002a70a:	int3   
   14002a70b:	int3   
   14002a70c:	int3   
   14002a70d:	int3   
   14002a70e:	int3   
   14002a70f:	int3   
   14002a710:	mov    QWORD PTR [rsp+0x8],rbx
   14002a715:	mov    QWORD PTR [rsp+0x10],rsi
   14002a71a:	mov    QWORD PTR [rsp+0x18],rdi
   14002a71f:	mov    rdi,QWORD PTR [rsp+0x30]
   14002a724:	mov    r10,QWORD PTR [r9]
   14002a727:	mov    rsi,r9
   14002a72a:	mov    rbx,rcx
   14002a72d:	test   rdi,rdi
   14002a730:	je     0x14002a776
   14002a732:	mov    r11,QWORD PTR [rdi]
   14002a735:	test   r11,r11
   14002a738:	je     0x14002a776
   14002a73a:	test   r8d,r8d
   14002a73d:	jle    0x14002a771
   14002a73f:	mov    r9d,DWORD PTR [rsp+0x38]
   14002a744:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a749:	nop    DWORD PTR [rax+0x0]
   14002a750:	cmp    r10,rcx
   14002a753:	jae    0x14002a771
   14002a755:	movzx  eax,BYTE PTR [rdx]
   14002a758:	dec    r8d
   14002a75b:	add    r11,0x4
   14002a75f:	mov    BYTE PTR [r10],al
   14002a762:	mov    DWORD PTR [r11-0x4],r9d
   14002a766:	inc    r10
   14002a769:	inc    rdx
   14002a76c:	test   r8d,r8d
   14002a76f:	jg     0x14002a750
   14002a771:	mov    QWORD PTR [rdi],r11
   14002a774:	jmp    0x14002a79a
   14002a776:	test   r8d,r8d
   14002a779:	jle    0x14002a79a
   14002a77b:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a780:	cmp    r10,rcx
   14002a783:	jae    0x14002a79a
   14002a785:	movzx  eax,BYTE PTR [rdx]
   14002a788:	dec    r8d
   14002a78b:	inc    r10
   14002a78e:	mov    BYTE PTR [r10-0x1],al
   14002a792:	inc    rdx
   14002a795:	test   r8d,r8d
   14002a798:	jg     0x14002a780
   14002a79a:	mov    QWORD PTR [rsi],r10
   14002a79d:	test   r8d,r8d
   14002a7a0:	jle    0x14002a7cf
   14002a7a2:	test   rbx,rbx
   14002a7a5:	je     0x14002a7c4
   14002a7a7:	lea    rcx,[rbx+0x68]
   14002a7ab:	mov    BYTE PTR [rbx+0x5b],r8b
   14002a7af:	nop
   14002a7b0:	movzx  eax,BYTE PTR [rdx]
   14002a7b3:	dec    r8d
   14002a7b6:	inc    rcx
   14002a7b9:	mov    BYTE PTR [rcx-0x1],al
   14002a7bc:	inc    rdx
   14002a7bf:	test   r8d,r8d
   14002a7c2:	jg     0x14002a7b0
   14002a7c4:	mov    rax,QWORD PTR [rsp+0x40]
   14002a7c9:	mov    DWORD PTR [rax],0xf
   14002a7cf:	mov    rbx,QWORD PTR [rsp+0x8]
   14002a7d4:	mov    rsi,QWORD PTR [rsp+0x10]
   14002a7d9:	mov    rdi,QWORD PTR [rsp+0x18]
   14002a7de:	ret    
   14002a7df:	int3   
   14002a7e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a7e5:	mov    QWORD PTR [rsp+0x10],rsi
   14002a7ea:	mov    QWORD PTR [rsp+0x18],rdi
   14002a7ef:	mov    rdi,QWORD PTR [rsp+0x30]
   14002a7f4:	mov    r10,QWORD PTR [r9]
   14002a7f7:	mov    rsi,r9
   14002a7fa:	mov    rbx,rcx
   14002a7fd:	test   rdi,rdi
   14002a800:	je     0x14002a849
   14002a802:	mov    r11,QWORD PTR [rdi]
   14002a805:	test   r11,r11
   14002a808:	je     0x14002a849
   14002a80a:	test   r8d,r8d
   14002a80d:	jle    0x14002a844
   14002a80f:	mov    r9d,DWORD PTR [rsp+0x38]
   14002a814:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a819:	nop    DWORD PTR [rax+0x0]
   14002a820:	cmp    r10,rcx
   14002a823:	jae    0x14002a844
   14002a825:	movzx  eax,WORD PTR [rdx]
   14002a828:	dec    r8d
   14002a82b:	add    r11,0x4
   14002a82f:	mov    WORD PTR [r10],ax
   14002a833:	mov    DWORD PTR [r11-0x4],r9d
   14002a837:	add    r10,0x2
   14002a83b:	add    rdx,0x2
   14002a83f:	test   r8d,r8d
   14002a842:	jg     0x14002a820
   14002a844:	mov    QWORD PTR [rdi],r11
   14002a847:	jmp    0x14002a870
   14002a849:	test   r8d,r8d
   14002a84c:	jle    0x14002a870
   14002a84e:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a853:	cmp    r10,rcx
   14002a856:	jae    0x14002a870
   14002a858:	movzx  eax,WORD PTR [rdx]
   14002a85b:	dec    r8d
   14002a85e:	add    r10,0x2
   14002a862:	mov    WORD PTR [r10-0x2],ax
   14002a867:	add    rdx,0x2
   14002a86b:	test   r8d,r8d
   14002a86e:	jg     0x14002a853
   14002a870:	mov    QWORD PTR [rsi],r10
   14002a873:	test   r8d,r8d
   14002a876:	jle    0x14002a8b2
   14002a878:	test   rbx,rbx
   14002a87b:	je     0x14002a8a7
   14002a87d:	lea    rcx,[rbx+0x90]
   14002a884:	mov    BYTE PTR [rbx+0x5d],r8b
   14002a888:	nop    DWORD PTR [rax+rax*1+0x0]
   14002a890:	movzx  eax,WORD PTR [rdx]
   14002a893:	dec    r8d
   14002a896:	add    rcx,0x2
   14002a89a:	mov    WORD PTR [rcx-0x2],ax
   14002a89e:	add    rdx,0x2
   14002a8a2:	test   r8d,r8d
   14002a8a5:	jg     0x14002a890
   14002a8a7:	mov    rax,QWORD PTR [rsp+0x40]
   14002a8ac:	mov    DWORD PTR [rax],0xf
   14002a8b2:	mov    rbx,QWORD PTR [rsp+0x8]
   14002a8b7:	mov    rsi,QWORD PTR [rsp+0x10]
   14002a8bc:	mov    rdi,QWORD PTR [rsp+0x18]
   14002a8c1:	ret    
   14002a8c2:	int3   
   14002a8c3:	int3   
   14002a8c4:	int3   
   14002a8c5:	int3   
   14002a8c6:	int3   
   14002a8c7:	int3   
   14002a8c8:	int3   
   14002a8c9:	int3   
   14002a8ca:	int3   
   14002a8cb:	int3   
   14002a8cc:	int3   
   14002a8cd:	int3   
   14002a8ce:	int3   
   14002a8cf:	int3   
   14002a8d0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a8d5:	mov    QWORD PTR [rsp+0x10],rbp
   14002a8da:	mov    QWORD PTR [rsp+0x18],rsi
   14002a8df:	mov    QWORD PTR [rsp+0x20],rdi
   14002a8e4:	mov    r10,QWORD PTR [r8]
   14002a8e7:	mov    rbx,r8
   14002a8ea:	mov    r11,rcx
   14002a8ed:	mov    edi,0x2840
   14002a8f2:	mov    esi,0x3ff
   14002a8f7:	mov    ebp,0xdc00
   14002a8fc:	cmp    r10,r9
   14002a8ff:	jae    0x14002a963
   14002a901:	cmp    edx,0xffff
   14002a907:	jle    0x14002a923
   14002a909:	mov    eax,edx
   14002a90b:	and    edx,esi
   14002a90d:	add    r10,0x2
   14002a911:	sar    eax,0xa
   14002a914:	or     edx,ebp
   14002a916:	sub    ax,di
   14002a919:	mov    WORD PTR [r10-0x2],ax
   14002a91e:	cmp    r10,r9
   14002a921:	jae    0x14002a92e
   14002a923:	mov    WORD PTR [r10],dx
   14002a927:	add    r10,0x2
   14002a92b:	or     edx,0xffffffff
   14002a92e:	mov    r8,QWORD PTR [rsp+0x28]
   14002a933:	test   r8,r8
   14002a936:	je     0x14002a963
   14002a938:	mov    rcx,QWORD PTR [r8]
   14002a93b:	test   rcx,rcx
   14002a93e:	je     0x14002a963
   14002a940:	mov    r9d,DWORD PTR [rsp+0x30]
   14002a945:	add    rcx,0x4
   14002a949:	mov    DWORD PTR [rcx-0x4],r9d
   14002a94d:	mov    rax,QWORD PTR [rbx]
   14002a950:	add    rax,0x2
   14002a954:	cmp    rax,r10
   14002a957:	jae    0x14002a960
   14002a959:	mov    DWORD PTR [rcx],r9d
   14002a95c:	add    rcx,0x4
   14002a960:	mov    QWORD PTR [r8],rcx
   14002a963:	mov    QWORD PTR [rbx],r10
   14002a966:	test   edx,edx
   14002a968:	js     0x14002a9b2
   14002a96a:	test   r11,r11
   14002a96d:	je     0x14002a9a7
   14002a96f:	cmp    edx,0xffff
   14002a975:	ja     0x14002a983
   14002a977:	mov    WORD PTR [r11+0x90],dx
   14002a97f:	mov    al,0x1
   14002a981:	jmp    0x14002a9a3
   14002a983:	mov    eax,edx
   14002a985:	and    dx,si
   14002a988:	sar    eax,0xa
   14002a98b:	sub    ax,di
   14002a98e:	or     dx,bp
   14002a991:	mov    WORD PTR [r11+0x90],ax
   14002a999:	mov    WORD PTR [r11+0x92],dx
   14002a9a1:	mov    al,0x2
   14002a9a3:	mov    BYTE PTR [r11+0x5d],al
   14002a9a7:	mov    rax,QWORD PTR [rsp+0x38]
   14002a9ac:	mov    DWORD PTR [rax],0xf
   14002a9b2:	mov    rbx,QWORD PTR [rsp+0x8]
   14002a9b7:	mov    rbp,QWORD PTR [rsp+0x10]
   14002a9bc:	mov    rsi,QWORD PTR [rsp+0x18]
   14002a9c1:	mov    rdi,QWORD PTR [rsp+0x20]
   14002a9c6:	ret    
   14002a9c7:	int3   
   14002a9c8:	mov    QWORD PTR [rsp+0x8],rbx
   14002a9cd:	mov    QWORD PTR [rsp+0x10],rsi
   14002a9d2:	push   rdi
   14002a9d3:	sub    rsp,0x20
   14002a9d7:	mov    eax,DWORD PTR [rcx+0x18]
   14002a9da:	xor    esi,esi
   14002a9dc:	mov    rbx,rcx
   14002a9df:	and    al,0x3
   14002a9e1:	cmp    al,0x2
   14002a9e3:	jne    0x14002aa24
   14002a9e5:	test   DWORD PTR [rcx+0x18],0x108
   14002a9ec:	je     0x14002aa24
   14002a9ee:	mov    edi,DWORD PTR [rcx]
   14002a9f0:	sub    edi,DWORD PTR [rcx+0x10]
   14002a9f3:	test   edi,edi
   14002a9f5:	jle    0x14002aa24
   14002a9f7:	call   0x14002df3c
   14002a9fc:	mov    rdx,QWORD PTR [rbx+0x10]
   14002aa00:	mov    r8d,edi
   14002aa03:	mov    ecx,eax
   14002aa05:	call   0x14002f798
   14002aa0a:	cmp    eax,edi
   14002aa0c:	jne    0x14002aa1d
   14002aa0e:	mov    eax,DWORD PTR [rbx+0x18]
   14002aa11:	test   al,al
   14002aa13:	jns    0x14002aa24
   14002aa15:	and    eax,0xfffffffd
   14002aa18:	mov    DWORD PTR [rbx+0x18],eax
   14002aa1b:	jmp    0x14002aa24
   14002aa1d:	or     DWORD PTR [rbx+0x18],0x20
   14002aa21:	or     esi,0xffffffff
   14002aa24:	mov    rcx,QWORD PTR [rbx+0x10]
   14002aa28:	and    DWORD PTR [rbx+0x8],0x0
   14002aa2c:	mov    eax,esi
   14002aa2e:	mov    rsi,QWORD PTR [rsp+0x38]
   14002aa33:	mov    QWORD PTR [rbx],rcx
   14002aa36:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aa3b:	add    rsp,0x20
   14002aa3f:	pop    rdi
   14002aa40:	ret    
   14002aa41:	int3   
   14002aa42:	int3   
   14002aa43:	int3   
   14002aa44:	rex push rbx
   14002aa46:	sub    rsp,0x20
   14002aa4a:	mov    rbx,rcx
   14002aa4d:	test   rcx,rcx
   14002aa50:	jne    0x14002aa59
   14002aa52:	call   0x14002aa8c
   14002aa57:	jmp    0x14002aa85
   14002aa59:	call   0x14002a9c8
   14002aa5e:	test   eax,eax
   14002aa60:	je     0x14002aa67
   14002aa62:	or     eax,0xffffffff
   14002aa65:	jmp    0x14002aa85
   14002aa67:	bt     DWORD PTR [rbx+0x18],0xe
   14002aa6c:	jae    0x14002aa83
   14002aa6e:	mov    rcx,rbx
   14002aa71:	call   0x14002df3c
   14002aa76:	mov    ecx,eax
   14002aa78:	call   0x14002f8cc
   14002aa7d:	neg    eax
   14002aa7f:	sbb    eax,eax
   14002aa81:	jmp    0x14002aa85
   14002aa83:	xor    eax,eax
   14002aa85:	add    rsp,0x20
   14002aa89:	pop    rbx
   14002aa8a:	ret    
   14002aa8b:	int3   
   14002aa8c:	mov    QWORD PTR [rsp+0x8],rsi
   14002aa91:	mov    QWORD PTR [rsp+0x10],rdi
   14002aa96:	mov    QWORD PTR [rsp+0x18],r12
   14002aa9b:	push   r13
   14002aa9d:	push   r14
   14002aa9f:	push   r15
   14002aaa1:	sub    rsp,0x30
   14002aaa5:	mov    r14d,ecx
   14002aaa8:	xor    r12d,r12d
   14002aaab:	xor    esi,esi
   14002aaad:	lea    ecx,[rsi+0x1]
   14002aab0:	call   0x14002fd94
   14002aab5:	nop
   14002aab6:	xor    edi,edi
   14002aab8:	mov    DWORD PTR [rsp+0x20],edi
   14002aabc:	or     r15d,0xffffffff
   14002aac0:	cmp    edi,DWORD PTR [rip+0x4125a]        # 0x14006bd20
   14002aac6:	jge    0x14002ab52
   14002aacc:	movsxd r13,edi
   14002aacf:	mov    rax,QWORD PTR [rip+0x4023a]        # 0x14006ad10
   14002aad6:	cmp    QWORD PTR [rax+r13*8],0x0
   14002aadb:	je     0x14002ab47
   14002aadd:	mov    rdx,QWORD PTR [rax+r13*8]
   14002aae1:	test   BYTE PTR [rdx+0x18],0x83
   14002aae5:	je     0x14002ab47
   14002aae7:	mov    ecx,edi
   14002aae9:	call   0x14002ad44
   14002aaee:	nop
   14002aaef:	mov    rax,QWORD PTR [rip+0x4021a]        # 0x14006ad10
   14002aaf6:	mov    rcx,QWORD PTR [rax+r13*8]
   14002aafa:	test   BYTE PTR [rcx+0x18],0x83
   14002aafe:	je     0x14002ab35
   14002ab00:	cmp    r14d,0x1
   14002ab04:	jne    0x14002ab1a
   14002ab06:	call   0x14002aa44
   14002ab0b:	cmp    eax,r15d
   14002ab0e:	je     0x14002ab35
   14002ab10:	inc    r12d
   14002ab13:	mov    DWORD PTR [rsp+0x24],r12d
   14002ab18:	jmp    0x14002ab35
   14002ab1a:	test   r14d,r14d
   14002ab1d:	jne    0x14002ab35
   14002ab1f:	test   BYTE PTR [rcx+0x18],0x2
   14002ab23:	je     0x14002ab35
   14002ab25:	call   0x14002aa44
   14002ab2a:	cmp    eax,r15d
   14002ab2d:	cmove  esi,r15d
   14002ab31:	mov    DWORD PTR [rsp+0x28],esi
   14002ab35:	mov    rdx,QWORD PTR [rip+0x401d4]        # 0x14006ad10
   14002ab3c:	mov    rdx,QWORD PTR [rdx+r13*8]
   14002ab40:	mov    ecx,edi
   14002ab42:	call   0x14002adcc
   14002ab47:	inc    edi
   14002ab49:	mov    DWORD PTR [rsp+0x20],edi
   14002ab4d:	jmp    0x14002aac0
   14002ab52:	mov    ecx,0x1
   14002ab57:	call   0x14002fc94
   14002ab5c:	cmp    r14d,0x1
   14002ab60:	cmove  esi,r12d
   14002ab64:	mov    eax,esi
   14002ab66:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ab6b:	mov    rdi,QWORD PTR [rsp+0x58]
   14002ab70:	mov    r12,QWORD PTR [rsp+0x60]
   14002ab75:	add    rsp,0x30
   14002ab79:	pop    r15
   14002ab7b:	pop    r14
   14002ab7d:	pop    r13
   14002ab7f:	ret    
   14002ab80:	mov    QWORD PTR [rsp+0x10],rbx
   14002ab85:	mov    QWORD PTR [rsp+0x8],rcx
   14002ab8a:	push   rdi
   14002ab8b:	sub    rsp,0x20
   14002ab8f:	mov    rbx,rcx
   14002ab92:	test   rcx,rcx
   14002ab95:	jne    0x14002ab9e
   14002ab97:	call   0x14002aa8c
   14002ab9c:	jmp    0x14002abb8
   14002ab9e:	call   0x14002ace4
   14002aba3:	nop
   14002aba4:	mov    rcx,rbx
   14002aba7:	call   0x14002aa44
   14002abac:	mov    edi,eax
   14002abae:	mov    rcx,rbx
   14002abb1:	call   0x14002ad74
   14002abb6:	mov    eax,edi
   14002abb8:	mov    rbx,QWORD PTR [rsp+0x38]
   14002abbd:	add    rsp,0x20
   14002abc1:	pop    rdi
   14002abc2:	ret    
   14002abc3:	int3   
   14002abc4:	mov    ecx,0x1
   14002abc9:	jmp    0x14002aa8c
   14002abce:	int3   
   14002abcf:	int3   
   14002abd0:	lea    rax,[rip+0x3b909]        # 0x1400664e0
   14002abd7:	ret    
   14002abd8:	rex push rbx
   14002abda:	sub    rsp,0x20
   14002abde:	mov    eax,DWORD PTR [rip+0x4113c]        # 0x14006bd20
   14002abe4:	mov    ebx,0x14
   14002abe9:	test   eax,eax
   14002abeb:	jne    0x14002abf4
   14002abed:	mov    eax,0x200
   14002abf2:	jmp    0x14002abf9
   14002abf4:	cmp    eax,ebx
   14002abf6:	cmovl  eax,ebx
   14002abf9:	movsxd rcx,eax
   14002abfc:	mov    edx,0x8
   14002ac01:	mov    DWORD PTR [rip+0x41119],eax        # 0x14006bd20
   14002ac07:	call   0x140030134
   14002ac0c:	mov    QWORD PTR [rip+0x400fd],rax        # 0x14006ad10
   14002ac13:	test   rax,rax
   14002ac16:	jne    0x14002ac3c
   14002ac18:	lea    edx,[rax+0x8]
   14002ac1b:	mov    rcx,rbx
   14002ac1e:	mov    DWORD PTR [rip+0x410fc],ebx        # 0x14006bd20
   14002ac24:	call   0x140030134
   14002ac29:	mov    QWORD PTR [rip+0x400e0],rax        # 0x14006ad10
   14002ac30:	test   rax,rax
   14002ac33:	jne    0x14002ac3c
   14002ac35:	mov    eax,0x1a
   14002ac3a:	jmp    0x14002acb4
   14002ac3c:	xor    ecx,ecx
   14002ac3e:	lea    rdx,[rip+0x3b89b]        # 0x1400664e0
   14002ac45:	mov    QWORD PTR [rcx+rax*1],rdx
   14002ac49:	add    rdx,0x30
   14002ac4d:	add    rcx,0x8
   14002ac51:	sub    rbx,0x1
   14002ac55:	je     0x14002ac60
   14002ac57:	mov    rax,QWORD PTR [rip+0x400b2]        # 0x14006ad10
   14002ac5e:	jmp    0x14002ac45
   14002ac60:	xor    r8d,r8d
   14002ac63:	lea    rdx,[rip+0x3b892]        # 0x1400664fc
   14002ac6a:	lea    r9d,[r8+0x3]
   14002ac6e:	mov    rcx,r8
   14002ac71:	lea    r10,[rip+0x3fe88]        # 0x14006ab00
   14002ac78:	mov    rax,r8
   14002ac7b:	sar    rax,0x5
   14002ac7f:	and    ecx,0x1f
   14002ac82:	mov    rax,QWORD PTR [r10+rax*8]
   14002ac86:	imul   rcx,rcx,0x58
   14002ac8a:	mov    r10,QWORD PTR [rcx+rax*1]
   14002ac8e:	cmp    r10,0xffffffffffffffff
   14002ac92:	je     0x14002ac9f
   14002ac94:	cmp    r10,0xfffffffffffffffe
   14002ac98:	je     0x14002ac9f
   14002ac9a:	test   r10,r10
   14002ac9d:	jne    0x14002aca5
   14002ac9f:	mov    DWORD PTR [rdx],0xfffffffe
   14002aca5:	inc    r8
   14002aca8:	add    rdx,0x30
   14002acac:	sub    r9,0x1
   14002acb0:	jne    0x14002ac6e
   14002acb2:	xor    eax,eax
   14002acb4:	add    rsp,0x20
   14002acb8:	pop    rbx
   14002acb9:	ret    
   14002acba:	int3   
   14002acbb:	int3   
   14002acbc:	sub    rsp,0x28
   14002acc0:	call   0x14002abc4
   14002acc5:	cmp    BYTE PTR [rip+0x3f304],0x0        # 0x140069fd0
   14002accc:	je     0x14002acd3
   14002acce:	call   0x1400302c8
   14002acd3:	mov    rcx,QWORD PTR [rip+0x40036]        # 0x14006ad10
   14002acda:	add    rsp,0x28
   14002acde:	jmp    0x14002b36c
   14002ace3:	int3   
   14002ace4:	rex push rbx
   14002ace6:	sub    rsp,0x20
   14002acea:	mov    rbx,rcx
   14002aced:	lea    rcx,[rip+0x3b7ec]        # 0x1400664e0
   14002acf4:	cmp    rbx,rcx
   14002acf7:	jb     0x14002ad33
   14002acf9:	lea    rax,[rip+0x3bb70]        # 0x140066870
   14002ad00:	cmp    rbx,rax
   14002ad03:	ja     0x14002ad33
   14002ad05:	mov    rdx,rbx
   14002ad08:	movabs rax,0x2aaaaaaaaaaaaaab
   14002ad12:	sub    rdx,rcx
   14002ad15:	imul   rdx
   14002ad18:	sar    rdx,0x3
   14002ad1c:	mov    rcx,rdx
   14002ad1f:	shr    rcx,0x3f
   14002ad23:	lea    ecx,[rcx+rdx*1+0x10]
   14002ad27:	call   0x14002fd94
   14002ad2c:	bts    DWORD PTR [rbx+0x18],0xf
   14002ad31:	jmp    0x14002ad3d
   14002ad33:	lea    rcx,[rbx+0x30]
   14002ad37:	call   QWORD PTR [rip+0x1239b]        # 0x14003d0d8
   14002ad3d:	add    rsp,0x20
   14002ad41:	pop    rbx
   14002ad42:	ret    
   14002ad43:	int3   
   14002ad44:	rex push rbx
   14002ad46:	sub    rsp,0x20
   14002ad4a:	cmp    ecx,0x14
   14002ad4d:	mov    rbx,rdx
   14002ad50:	jge    0x14002ad61
   14002ad52:	add    ecx,0x10
   14002ad55:	call   0x14002fd94
   14002ad5a:	bts    DWORD PTR [rbx+0x18],0xf
   14002ad5f:	jmp    0x14002ad6b
   14002ad61:	lea    rcx,[rdx+0x30]
   14002ad65:	call   QWORD PTR [rip+0x1236d]        # 0x14003d0d8
   14002ad6b:	add    rsp,0x20
   14002ad6f:	pop    rbx
   14002ad70:	ret    
   14002ad71:	int3   
   14002ad72:	int3   
   14002ad73:	int3   
   14002ad74:	sub    rsp,0x28
   14002ad78:	lea    rdx,[rip+0x3b761]        # 0x1400664e0
   14002ad7f:	cmp    rcx,rdx
   14002ad82:	jb     0x14002adbb
   14002ad84:	lea    rax,[rip+0x3bae5]        # 0x140066870
   14002ad8b:	cmp    rcx,rax
   14002ad8e:	ja     0x14002adbb
   14002ad90:	btr    DWORD PTR [rcx+0x18],0xf
   14002ad95:	sub    rcx,rdx
   14002ad98:	movabs rax,0x2aaaaaaaaaaaaaab
   14002ada2:	imul   rcx
   14002ada5:	sar    rdx,0x3
   14002ada9:	mov    rcx,rdx
   14002adac:	shr    rcx,0x3f
   14002adb0:	lea    ecx,[rcx+rdx*1+0x10]
   14002adb4:	call   0x14002fc94
   14002adb9:	jmp    0x14002adc5
   14002adbb:	add    rcx,0x30
   14002adbf:	call   QWORD PTR [rip+0x122fb]        # 0x14003d0c0
   14002adc5:	add    rsp,0x28
   14002adc9:	ret    
   14002adca:	int3   
   14002adcb:	int3   
   14002adcc:	sub    rsp,0x28
   14002add0:	cmp    ecx,0x14
   14002add3:	jge    0x14002ade4
   14002add5:	btr    DWORD PTR [rdx+0x18],0xf
   14002adda:	add    ecx,0x10
   14002addd:	call   0x14002fc94
   14002ade2:	jmp    0x14002adee
   14002ade4:	lea    rcx,[rdx+0x30]
   14002ade8:	call   QWORD PTR [rip+0x122d2]        # 0x14003d0c0
   14002adee:	add    rsp,0x28
   14002adf2:	ret    
   14002adf3:	int3   
   14002adf4:	sub    rsp,0x5a8
   14002adfb:	test   BYTE PTR [rip+0x3ba9e],0x1        # 0x1400668a0
   14002ae02:	je     0x14002ae0e
   14002ae04:	mov    ecx,0xa
   14002ae09:	call   0x140030a00
   14002ae0e:	call   0x140030780
   14002ae13:	test   rax,rax
   14002ae16:	je     0x14002ae22
   14002ae18:	mov    ecx,0x16
   14002ae1d:	call   0x14003078c
   14002ae22:	test   BYTE PTR [rip+0x3ba77],0x2        # 0x1400668a0
   14002ae29:	je     0x14002ae8a
   14002ae2b:	lea    rcx,[rsp+0xd0]
   14002ae33:	call   QWORD PTR [rip+0x122c7]        # 0x14003d100
   14002ae39:	lea    rcx,[rsp+0x30]
   14002ae3e:	xor    edx,edx
   14002ae40:	mov    r8d,0x98
   14002ae46:	call   0x14002b280
   14002ae4b:	mov    rax,QWORD PTR [rsp+0x5a8]
   14002ae53:	xor    ecx,ecx
   14002ae55:	mov    QWORD PTR [rsp+0x40],rax
   14002ae5a:	lea    rax,[rsp+0x30]
   14002ae5f:	mov    DWORD PTR [rsp+0x30],0x40000015
   14002ae67:	mov    QWORD PTR [rsp+0x20],rax
   14002ae6c:	lea    rax,[rsp+0xd0]
   14002ae74:	mov    QWORD PTR [rsp+0x28],rax
   14002ae79:	call   QWORD PTR [rip+0x12279]        # 0x14003d0f8
   14002ae7f:	lea    rcx,[rsp+0x20]
   14002ae84:	call   QWORD PTR [rip+0x12266]        # 0x14003d0f0
   14002ae8a:	mov    ecx,0x3
   14002ae8f:	call   0x1400306cc
   14002ae94:	int3   
   14002ae95:	int3   
   14002ae96:	int3   
   14002ae97:	int3   
   14002ae98:	mov    rax,rsp
   14002ae9b:	mov    QWORD PTR [rax+0x10],rdx
   14002ae9f:	mov    QWORD PTR [rax+0x8],rcx
   14002aea3:	mov    QWORD PTR [rax+0x18],r8
   14002aea7:	mov    QWORD PTR [rax+0x20],r9
   14002aeab:	push   rbx
   14002aeac:	push   rsi
   14002aead:	push   rdi
   14002aeae:	push   r12
   14002aeb0:	sub    rsp,0x38
   14002aeb4:	mov    rdi,rcx
   14002aeb7:	xor    ebx,ebx
   14002aeb9:	mov    esi,ebx
   14002aebb:	mov    eax,ebx
   14002aebd:	cmp    rcx,rbx
   14002aec0:	setne  al
   14002aec3:	cmp    eax,ebx
   14002aec5:	jne    0x14002aeee
   14002aec7:	call   0x14002b3f4
   14002aecc:	mov    DWORD PTR [rax],0x16
   14002aed2:	mov    QWORD PTR [rsp+0x20],rbx
   14002aed7:	xor    r9d,r9d
   14002aeda:	xor    r8d,r8d
   14002aedd:	xor    edx,edx
   14002aedf:	xor    ecx,ecx
   14002aee1:	call   0x140031aac
   14002aee6:	or     eax,0xffffffff
   14002aee9:	jmp    0x14002b003
   14002aeee:	mov    eax,ebx
   14002aef0:	cmp    rdx,rbx
   14002aef3:	setne  al
   14002aef6:	cmp    eax,ebx
   14002aef8:	jne    0x14002af21
   14002aefa:	call   0x14002b3f4
   14002aeff:	mov    DWORD PTR [rax],0x16
   14002af05:	mov    QWORD PTR [rsp+0x20],rbx
   14002af0a:	xor    r9d,r9d
   14002af0d:	xor    r8d,r8d
   14002af10:	xor    edx,edx
   14002af12:	xor    ecx,ecx
   14002af14:	call   0x140031aac
   14002af19:	or     eax,0xffffffff
   14002af1c:	jmp    0x14002b003
   14002af21:	lea    r12,[rsp+0x70]
   14002af26:	call   0x14002ace4
   14002af2b:	nop
   14002af2c:	test   BYTE PTR [rdi+0x18],0x40
   14002af30:	jne    0x14002afcb
   14002af36:	mov    rcx,rdi
   14002af39:	call   0x14002df3c
   14002af3e:	cmp    eax,0xffffffff
   14002af41:	je     0x14002af6d
   14002af43:	cmp    eax,0xfffffffe
   14002af46:	je     0x14002af6d
   14002af48:	movsxd rdx,eax
   14002af4b:	mov    rcx,rdx
   14002af4e:	sar    rcx,0x5
   14002af52:	lea    r8,[rip+0x3fba7]        # 0x14006ab00
   14002af59:	and    edx,0x1f
   14002af5c:	imul   rdx,rdx,0x58
   14002af60:	add    rdx,QWORD PTR [r8+rcx*8]
   14002af64:	lea    rcx,[rip+0x3be55]        # 0x140066dc0
   14002af6b:	jmp    0x14002af7e
   14002af6d:	lea    rcx,[rip+0x3be4c]        # 0x140066dc0
   14002af74:	mov    rdx,rcx
   14002af77:	lea    r8,[rip+0x3fb82]        # 0x14006ab00
   14002af7e:	test   BYTE PTR [rdx+0x38],0x7f
   14002af82:	jne    0x14002afa9
   14002af84:	cmp    eax,0xffffffff
   14002af87:	je     0x14002afa3
   14002af89:	cmp    eax,0xfffffffe
   14002af8c:	je     0x14002afa3
   14002af8e:	movsxd rcx,eax
   14002af91:	mov    rax,rcx
   14002af94:	sar    rax,0x5
   14002af98:	and    ecx,0x1f
   14002af9b:	imul   rcx,rcx,0x58
   14002af9f:	add    rcx,QWORD PTR [r8+rax*8]
   14002afa3:	test   BYTE PTR [rcx+0x38],0x80
   14002afa7:	je     0x14002afcb
   14002afa9:	call   0x14002b3f4
   14002afae:	mov    DWORD PTR [rax],0x16
   14002afb4:	mov    QWORD PTR [rsp+0x20],rbx
   14002afb9:	xor    r9d,r9d
   14002afbc:	xor    r8d,r8d
   14002afbf:	xor    edx,edx
   14002afc1:	xor    ecx,ecx
   14002afc3:	call   0x140031aac
   14002afc8:	or     esi,0xffffffff
   14002afcb:	cmp    esi,ebx
   14002afcd:	jne    0x14002aff9
   14002afcf:	mov    rcx,rdi
   14002afd2:	call   0x140030c6c
   14002afd7:	mov    ebx,eax
   14002afd9:	mov    r9,r12
   14002afdc:	xor    r8d,r8d
   14002afdf:	mov    rdx,QWORD PTR [rsp+0x68]
   14002afe4:	mov    rcx,rdi
   14002afe7:	call   0x140030e94
   14002afec:	mov    esi,eax
   14002afee:	mov    rdx,rdi
   14002aff1:	mov    ecx,ebx
   14002aff3:	call   0x140030d40
   14002aff8:	nop
   14002aff9:	mov    rcx,rdi
   14002affc:	call   0x14002ad74
   14002b001:	mov    eax,esi
   14002b003:	add    rsp,0x38
   14002b007:	pop    r12
   14002b009:	pop    rdi
   14002b00a:	pop    rsi
   14002b00b:	pop    rbx
   14002b00c:	ret    
   14002b00d:	int3   
   14002b00e:	int3   
   14002b00f:	int3   
   14002b010:	mov    r9,rcx
   14002b013:	xor    r8d,r8d
   14002b016:	mov    al,BYTE PTR [rcx]
   14002b018:	inc    rcx
   14002b01b:	cmp    al,r8b
   14002b01e:	jne    0x14002b016
   14002b020:	dec    rcx
   14002b023:	cmp    rcx,r9
   14002b026:	je     0x14002b02c
   14002b028:	cmp    BYTE PTR [rcx],dl
   14002b02a:	jne    0x14002b020
   14002b02c:	cmp    BYTE PTR [rcx],dl
   14002b02e:	cmove  r8,rcx
   14002b032:	mov    rax,r8
   14002b035:	ret    
   14002b036:	int3   
   14002b037:	int3   
   14002b038:	rex push rbx
   14002b03a:	sub    rsp,0x20
   14002b03e:	mov    r11d,DWORD PTR [r8]
   14002b041:	mov    rbx,rdx
   14002b044:	mov    r9,rcx
   14002b047:	and    r11d,0xfffffff8
   14002b04b:	test   BYTE PTR [r8],0x4
   14002b04f:	mov    r10,rcx
   14002b052:	je     0x14002b067
   14002b054:	mov    eax,DWORD PTR [r8+0x8]
   14002b058:	movsxd r10,DWORD PTR [r8+0x4]
   14002b05c:	neg    eax
   14002b05e:	add    r10,rcx
   14002b061:	movsxd rcx,eax
   14002b064:	and    r10,rcx
   14002b067:	movsxd rax,r11d
   14002b06a:	mov    rdx,QWORD PTR [rax+r10*1]
   14002b06e:	mov    rax,QWORD PTR [rbx+0x10]
   14002b072:	mov    ecx,DWORD PTR [rax+0x8]
   14002b075:	add    rcx,QWORD PTR [rbx+0x8]
   14002b079:	test   BYTE PTR [rcx+0x3],0xf
   14002b07d:	je     0x14002b08b
   14002b07f:	movzx  eax,BYTE PTR [rcx+0x3]
   14002b083:	and    eax,0xfffffff0
   14002b086:	cdqe   
   14002b088:	add    r9,rax
   14002b08b:	xor    r9,rdx
   14002b08e:	mov    rcx,r9
   14002b091:	add    rsp,0x20
   14002b095:	pop    rbx
   14002b096:	jmp    0x14002b250
   14002b09b:	int3   
   14002b09c:	sub    rsp,0x28
   14002b0a0:	mov    r8,QWORD PTR [r9+0x38]
   14002b0a4:	mov    rcx,rdx
   14002b0a7:	mov    rdx,r9
   14002b0aa:	call   0x14002b038
   14002b0af:	mov    eax,0x1
   14002b0b4:	add    rsp,0x28
   14002b0b8:	ret    
   14002b0b9:	int3   
   14002b0ba:	int3   
   14002b0bb:	int3   
   14002b0bc:	int3   
   14002b0bd:	int3   
   14002b0be:	int3   
   14002b0bf:	int3   
   14002b0c0:	int3   
   14002b0c1:	int3   
   14002b0c2:	int3   
   14002b0c3:	int3   
   14002b0c4:	int3   
   14002b0c5:	int3   
   14002b0c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b0d0:	mov    r11,rcx
   14002b0d3:	or     r8,r8
   14002b0d6:	je     0x14002b0fc
   14002b0d8:	sub    rcx,rdx
   14002b0db:	test   dl,0x7
   14002b0de:	je     0x14002b108
   14002b0e0:	mov    al,BYTE PTR [rdx]
   14002b0e2:	test   al,al
   14002b0e4:	mov    BYTE PTR [rcx+rdx*1],al
   14002b0e7:	je     0x14002b1d0
   14002b0ed:	inc    rdx
   14002b0f0:	dec    r8
   14002b0f3:	je     0x14002b0fc
   14002b0f5:	test   dl,0x7
   14002b0f8:	jne    0x14002b0e0
   14002b0fa:	jmp    0x14002b108
   14002b0fc:	mov    rax,r11
   14002b0ff:	ret    
   14002b100:	mov    QWORD PTR [rcx+rdx*1],rax
   14002b104:	add    rdx,0x8
   14002b108:	mov    rax,QWORD PTR [rdx]
   14002b10b:	sub    r8,0x8
   14002b10f:	jbe    0x14002b137
   14002b111:	movabs r9,0x7efefefefefefeff
   14002b11b:	add    r9,rax
   14002b11e:	mov    r10,rax
   14002b121:	xor    r10,0xffffffffffffffff
   14002b125:	xor    r10,r9
   14002b128:	movabs r9,0x8101010101010100
   14002b132:	test   r9,r10
   14002b135:	je     0x14002b100
   14002b137:	add    r8,0x8
   14002b13b:	je     0x14002b1cc
   14002b141:	test   al,al
   14002b143:	mov    BYTE PTR [rcx+rdx*1],al
   14002b146:	je     0x14002b1d0
   14002b14c:	inc    rdx
   14002b14f:	dec    r8
   14002b152:	je     0x14002b1cc
   14002b154:	test   ah,ah
   14002b156:	mov    BYTE PTR [rcx+rdx*1],ah
   14002b159:	je     0x14002b1d0
   14002b15b:	inc    rdx
   14002b15e:	dec    r8
   14002b161:	je     0x14002b1cc
   14002b163:	shr    rax,0x10
   14002b167:	test   al,al
   14002b169:	mov    BYTE PTR [rcx+rdx*1],al
   14002b16c:	je     0x14002b1d0
   14002b16e:	inc    rdx
   14002b171:	dec    r8
   14002b174:	je     0x14002b1cc
   14002b176:	test   ah,ah
   14002b178:	mov    BYTE PTR [rcx+rdx*1],ah
   14002b17b:	je     0x14002b1d0
   14002b17d:	inc    rdx
   14002b180:	dec    r8
   14002b183:	je     0x14002b1cc
   14002b185:	shr    rax,0x10
   14002b189:	test   al,al
   14002b18b:	mov    BYTE PTR [rcx+rdx*1],al
   14002b18e:	je     0x14002b1d0
   14002b190:	inc    rdx
   14002b193:	dec    r8
   14002b196:	je     0x14002b1cc
   14002b198:	test   ah,ah
   14002b19a:	mov    BYTE PTR [rcx+rdx*1],ah
   14002b19d:	je     0x14002b1d0
   14002b19f:	inc    rdx
   14002b1a2:	dec    r8
   14002b1a5:	je     0x14002b1cc
   14002b1a7:	shr    eax,0x10
   14002b1aa:	test   al,al
   14002b1ac:	mov    BYTE PTR [rcx+rdx*1],al
   14002b1af:	je     0x14002b1d0
   14002b1b1:	inc    rdx
   14002b1b4:	dec    r8
   14002b1b7:	je     0x14002b1cc
   14002b1b9:	test   ah,ah
   14002b1bb:	mov    BYTE PTR [rcx+rdx*1],ah
   14002b1be:	je     0x14002b1d0
   14002b1c0:	inc    rdx
   14002b1c3:	dec    r8
   14002b1c6:	jne    0x14002b108
   14002b1cc:	mov    rax,r11
   14002b1cf:	ret    
   14002b1d0:	add    rcx,rdx
   14002b1d3:	xor    rdx,rdx
   14002b1d6:	cmp    r8,0x10
   14002b1da:	jb     0x14002b221
   14002b1dc:	test   cl,0x7
   14002b1df:	je     0x14002b1eb
   14002b1e1:	inc    rcx
   14002b1e4:	mov    BYTE PTR [rcx],dl
   14002b1e6:	dec    r8
   14002b1e9:	jmp    0x14002b1dc
   14002b1eb:	sub    r8,0x20
   14002b1ef:	jb     0x14002b20a
   14002b1f1:	mov    QWORD PTR [rcx],rdx
   14002b1f4:	mov    QWORD PTR [rcx+0x8],rdx
   14002b1f8:	mov    QWORD PTR [rcx+0x10],rdx
   14002b1fc:	mov    QWORD PTR [rcx+0x18],rdx
   14002b200:	add    rcx,0x20
   14002b204:	sub    r8,0x20
   14002b208:	jae    0x14002b1f1
   14002b20a:	add    r8,0x20
   14002b20e:	sub    r8,0x8
   14002b212:	jb     0x14002b21d
   14002b214:	mov    QWORD PTR [rcx],rdx
   14002b217:	add    rcx,0x8
   14002b21b:	jmp    0x14002b20e
   14002b21d:	add    r8,0x8
   14002b221:	sub    r8,0x1
   14002b225:	jb     0x14002b22e
   14002b227:	mov    BYTE PTR [rcx],dl
   14002b229:	inc    rcx
   14002b22c:	jmp    0x14002b221
   14002b22e:	mov    rax,r11
   14002b231:	ret    
   14002b232:	int3   
   14002b233:	int3   
   14002b234:	int3   
   14002b235:	int3   
   14002b236:	int3   
   14002b237:	int3   
   14002b238:	int3   
   14002b239:	int3   
   14002b23a:	int3   
   14002b23b:	int3   
   14002b23c:	int3   
   14002b23d:	int3   
   14002b23e:	int3   
   14002b23f:	int3   
   14002b240:	int3   
   14002b241:	int3   
   14002b242:	int3   
   14002b243:	int3   
   14002b244:	int3   
   14002b245:	int3   
   14002b246:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b250:	cmp    rcx,QWORD PTR [rip+0x3b659]        # 0x1400668b0
   14002b257:	jne    0x14002b26a
   14002b259:	rol    rcx,0x10
   14002b25d:	test   cx,0xffff
   14002b262:	jne    0x14002b266
   14002b264:	repz ret 
   14002b266:	ror    rcx,0x10
   14002b26a:	jmp    0x140031b34
   14002b26f:	int3   
   14002b270:	int3   
   14002b271:	int3   
   14002b272:	int3   
   14002b273:	int3   
   14002b274:	int3   
   14002b275:	int3   
   14002b276:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b280:	mov    rax,rcx
   14002b283:	cmp    r8,0x8
   14002b287:	jb     0x14002b2dc
   14002b289:	movzx  edx,dl
   14002b28c:	movabs r9,0x101010101010101
   14002b296:	imul   rdx,r9
   14002b29a:	cmp    r8,0x40
   14002b29e:	jb     0x14002b2be
   14002b2a0:	neg    rcx
   14002b2a3:	and    ecx,0x7
   14002b2a6:	je     0x14002b2ae
   14002b2a8:	sub    r8,rcx
   14002b2ab:	mov    QWORD PTR [rax],rdx
   14002b2ae:	add    rcx,rax
   14002b2b1:	mov    r9,r8
   14002b2b4:	and    r8,0x3f
   14002b2b8:	shr    r9,0x6
   14002b2bc:	jne    0x14002b2f7
   14002b2be:	mov    r9,r8
   14002b2c1:	and    r8,0x7
   14002b2c5:	shr    r9,0x3
   14002b2c9:	je     0x14002b2dc
   14002b2cb:	data16 data16 xchg ax,ax
   14002b2cf:	nop
   14002b2d0:	mov    QWORD PTR [rcx],rdx
   14002b2d3:	add    rcx,0x8
   14002b2d7:	dec    r9
   14002b2da:	jne    0x14002b2d0
   14002b2dc:	test   r8,r8
   14002b2df:	je     0x14002b2eb
   14002b2e1:	mov    BYTE PTR [rcx],dl
   14002b2e3:	inc    rcx
   14002b2e6:	dec    r8
   14002b2e9:	jne    0x14002b2e1
   14002b2eb:	ret    
   14002b2ec:	nop    DWORD PTR [rax+0x0]
   14002b2f0:	data16 data16 xchg ax,ax
   14002b2f4:	data16 xchg ax,ax
   14002b2f7:	cmp    r9,0x1c00
   14002b2fe:	jae    0x14002b330
   14002b300:	mov    QWORD PTR [rcx],rdx
   14002b303:	mov    QWORD PTR [rcx+0x8],rdx
   14002b307:	mov    QWORD PTR [rcx+0x10],rdx
   14002b30b:	add    rcx,0x40
   14002b30f:	mov    QWORD PTR [rcx-0x28],rdx
   14002b313:	mov    QWORD PTR [rcx-0x20],rdx
   14002b317:	dec    r9
   14002b31a:	mov    QWORD PTR [rcx-0x18],rdx
   14002b31e:	mov    QWORD PTR [rcx-0x10],rdx
   14002b322:	mov    QWORD PTR [rcx-0x8],rdx
   14002b326:	jne    0x14002b300
   14002b328:	jmp    0x14002b2be
   14002b32a:	nop    WORD PTR [rax+rax*1+0x0]
   14002b330:	movnti QWORD PTR [rcx],rdx
   14002b334:	movnti QWORD PTR [rcx+0x8],rdx
   14002b339:	movnti QWORD PTR [rcx+0x10],rdx
   14002b33e:	add    rcx,0x40
   14002b342:	movnti QWORD PTR [rcx-0x28],rdx
   14002b347:	movnti QWORD PTR [rcx-0x20],rdx
   14002b34c:	dec    r9
   14002b34f:	movnti QWORD PTR [rcx-0x18],rdx
   14002b354:	movnti QWORD PTR [rcx-0x10],rdx
   14002b359:	movnti QWORD PTR [rcx-0x8],rdx
   14002b35e:	jne    0x14002b330
   14002b360:	lock or BYTE PTR [rsp],0x0
   14002b365:	jmp    0x14002b2be
   14002b36a:	int3   
   14002b36b:	int3   
   14002b36c:	test   rcx,rcx
   14002b36f:	je     0x14002b3a8
   14002b371:	push   rbx
   14002b372:	sub    rsp,0x20
   14002b376:	mov    r8,rcx
   14002b379:	mov    rcx,QWORD PTR [rip+0x3f530]        # 0x14006a8b0
   14002b380:	xor    edx,edx
   14002b382:	call   QWORD PTR [rip+0x11d80]        # 0x14003d108
   14002b388:	test   eax,eax
   14002b38a:	jne    0x14002b3a3
   14002b38c:	call   0x14002b3f4
   14002b391:	mov    rbx,rax
   14002b394:	call   QWORD PTR [rip+0x11f9e]        # 0x14003d338
   14002b39a:	mov    ecx,eax
   14002b39c:	call   0x14002b3ac
   14002b3a1:	mov    DWORD PTR [rbx],eax
   14002b3a3:	add    rsp,0x20
   14002b3a7:	pop    rbx
   14002b3a8:	ret    
   14002b3a9:	int3   
   14002b3aa:	int3   
   14002b3ab:	int3   
   14002b3ac:	lea    r9,[rip+0x3b50d]        # 0x1400668c0
   14002b3b3:	xor    eax,eax
   14002b3b5:	mov    rdx,r9
   14002b3b8:	lea    r8d,[rax+0x8]
   14002b3bc:	cmp    ecx,DWORD PTR [rdx]
   14002b3be:	je     0x14002b3eb
   14002b3c0:	inc    eax
   14002b3c2:	add    rdx,r8
   14002b3c5:	cmp    eax,0x2d
   14002b3c8:	jb     0x14002b3bc
   14002b3ca:	lea    eax,[rcx-0x13]
   14002b3cd:	cmp    eax,0x11
   14002b3d0:	ja     0x14002b3d8
   14002b3d2:	mov    eax,0xd
   14002b3d7:	ret    
   14002b3d8:	add    ecx,0xffffff44
   14002b3de:	mov    eax,0x16
   14002b3e3:	cmp    ecx,0xe
   14002b3e6:	cmovbe eax,r8d
   14002b3ea:	ret    
   14002b3eb:	cdqe   
   14002b3ed:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14002b3f2:	ret    
   14002b3f3:	int3   
   14002b3f4:	sub    rsp,0x28
   14002b3f8:	call   0x140031dc4
   14002b3fd:	test   rax,rax
   14002b400:	jne    0x14002b40b
   14002b402:	lea    rax,[rip+0x3b61f]        # 0x140066a28
   14002b409:	jmp    0x14002b40f
   14002b40b:	add    rax,0x10
   14002b40f:	add    rsp,0x28
   14002b413:	ret    
   14002b414:	sub    rsp,0x28
   14002b418:	call   0x140031dc4
   14002b41d:	test   rax,rax
   14002b420:	jne    0x14002b42b
   14002b422:	lea    rax,[rip+0x3b603]        # 0x140066a2c
   14002b429:	jmp    0x14002b42f
   14002b42b:	add    rax,0x14
   14002b42f:	add    rsp,0x28
   14002b433:	ret    
   14002b434:	rex push rbx
   14002b436:	sub    rsp,0x20
   14002b43a:	mov    ebx,ecx
   14002b43c:	call   0x140031dc4
   14002b441:	test   rax,rax
   14002b444:	jne    0x14002b44f
   14002b446:	lea    rax,[rip+0x3b5df]        # 0x140066a2c
   14002b44d:	jmp    0x14002b453
   14002b44f:	add    rax,0x14
   14002b453:	mov    DWORD PTR [rax],ebx
   14002b455:	call   0x140031dc4
   14002b45a:	lea    r10,[rip+0x3b5c7]        # 0x140066a28
   14002b461:	test   rax,rax
   14002b464:	je     0x14002b46a
   14002b466:	lea    r10,[rax+0x10]
   14002b46a:	mov    ecx,ebx
   14002b46c:	call   0x14002b3ac
   14002b471:	mov    DWORD PTR [r10],eax
   14002b474:	add    rsp,0x20
   14002b478:	pop    rbx
   14002b479:	ret    
   14002b47a:	int3   
   14002b47b:	int3   
   14002b47c:	rex push rbx
   14002b47e:	sub    rsp,0x20
   14002b482:	mov    rbx,rcx
   14002b485:	mov    BYTE PTR [rcx+0x18],0x0
   14002b489:	test   rdx,rdx
   14002b48c:	jne    0x14002b514
   14002b492:	call   0x140031e48
   14002b497:	mov    QWORD PTR [rbx+0x10],rax
   14002b49b:	mov    rdx,QWORD PTR [rax+0xc0]
   14002b4a2:	mov    QWORD PTR [rbx],rdx
   14002b4a5:	mov    rcx,QWORD PTR [rax+0xb8]
   14002b4ac:	mov    QWORD PTR [rbx+0x8],rcx
   14002b4b0:	mov    rcx,QWORD PTR [rip+0x3c1a9]        # 0x140067660
   14002b4b7:	cmp    rdx,rcx
   14002b4ba:	je     0x14002b4d2
   14002b4bc:	mov    eax,DWORD PTR [rax+0xc8]
   14002b4c2:	test   DWORD PTR [rip+0x3c020],eax        # 0x1400674e8
   14002b4c8:	jne    0x14002b4d2
   14002b4ca:	call   0x140032b98
   14002b4cf:	mov    QWORD PTR [rbx],rax
   14002b4d2:	mov    rax,QWORD PTR [rip+0x3bf07]        # 0x1400673e0
   14002b4d9:	cmp    QWORD PTR [rbx+0x8],rax
   14002b4dd:	je     0x14002b4fa
   14002b4df:	mov    rax,QWORD PTR [rbx+0x10]
   14002b4e3:	mov    ecx,DWORD PTR [rax+0xc8]
   14002b4e9:	test   DWORD PTR [rip+0x3bff9],ecx        # 0x1400674e8
   14002b4ef:	jne    0x14002b4fa
   14002b4f1:	call   0x1400322a0
   14002b4f6:	mov    QWORD PTR [rbx+0x8],rax
   14002b4fa:	mov    rax,QWORD PTR [rbx+0x10]
   14002b4fe:	test   BYTE PTR [rax+0xc8],0x2
   14002b505:	jne    0x14002b51c
   14002b507:	or     DWORD PTR [rax+0xc8],0x2
   14002b50e:	mov    BYTE PTR [rbx+0x18],0x1
   14002b512:	jmp    0x14002b51c
   14002b514:	movdqu xmm0,XMMWORD PTR [rdx]
   14002b518:	movdqu XMMWORD PTR [rcx],xmm0
   14002b51c:	mov    rax,rbx
   14002b51f:	add    rsp,0x20
   14002b523:	pop    rbx
   14002b524:	ret    
   14002b525:	int3   
   14002b526:	int3   
   14002b527:	int3   
   14002b528:	mov    rax,rsp
   14002b52b:	mov    QWORD PTR [rax+0x8],rbx
   14002b52f:	mov    QWORD PTR [rax+0x10],rbp
   14002b533:	mov    QWORD PTR [rax+0x18],rsi
   14002b537:	mov    QWORD PTR [rax+0x20],rdi
   14002b53b:	push   r12
   14002b53d:	push   r13
   14002b53f:	push   r14
   14002b541:	sub    rsp,0x50
   14002b545:	mov    r14,rdx
   14002b548:	mov    rdx,rcx
   14002b54b:	lea    rcx,[rax-0x38]
   14002b54f:	mov    r12d,r9d
   14002b552:	mov    r13,r8
   14002b555:	call   0x14002b47c
   14002b55a:	test   r13,r13
   14002b55d:	je     0x14002b563
   14002b55f:	mov    QWORD PTR [r13+0x0],r14
   14002b563:	test   r14,r14
   14002b566:	jne    0x14002b592
   14002b568:	call   0x14002b3f4
   14002b56d:	and    QWORD PTR [rsp+0x20],0x0
   14002b573:	xor    r9d,r9d
   14002b576:	xor    r8d,r8d
   14002b579:	xor    edx,edx
   14002b57b:	xor    ecx,ecx
   14002b57d:	mov    DWORD PTR [rax],0x16
   14002b583:	call   0x140031aac
   14002b588:	cmp    BYTE PTR [rsp+0x48],0x0
   14002b58d:	jmp    0x14002b77b
   14002b592:	test   r12d,r12d
   14002b595:	je     0x14002b5a3
   14002b597:	cmp    r12d,0x2
   14002b59b:	jl     0x14002b568
   14002b59d:	cmp    r12d,0x24
   14002b5a1:	jg     0x14002b568
   14002b5a3:	mov    bpl,BYTE PTR [r14]
   14002b5a6:	mov    r8,QWORD PTR [rsp+0x30]
   14002b5ab:	xor    edi,edi
   14002b5ad:	lea    rbx,[r14+0x1]
   14002b5b1:	cmp    DWORD PTR [r8+0x10c],0x1
   14002b5b9:	jle    0x14002b5d5
   14002b5bb:	lea    r8,[rsp+0x30]
   14002b5c0:	movzx  ecx,bpl
   14002b5c4:	mov    edx,0x8
   14002b5c9:	call   0x140032c10
   14002b5ce:	mov    r8,QWORD PTR [rsp+0x30]
   14002b5d3:	jmp    0x14002b5e7
   14002b5d5:	mov    rax,QWORD PTR [r8+0x140]
   14002b5dc:	movzx  ecx,bpl
   14002b5e0:	movzx  eax,WORD PTR [rax+rcx*2]
   14002b5e4:	and    eax,0x8
   14002b5e7:	test   eax,eax
   14002b5e9:	je     0x14002b5f3
   14002b5eb:	mov    bpl,BYTE PTR [rbx]
   14002b5ee:	inc    rbx
   14002b5f1:	jmp    0x14002b5b1
   14002b5f3:	mov    esi,DWORD PTR [rsp+0x90]
   14002b5fa:	cmp    bpl,0x2d
   14002b5fe:	jne    0x14002b605
   14002b600:	or     esi,0x2
   14002b603:	jmp    0x14002b60b
   14002b605:	cmp    bpl,0x2b
   14002b609:	jne    0x14002b611
   14002b60b:	mov    bpl,BYTE PTR [rbx]
   14002b60e:	inc    rbx
   14002b611:	test   r12d,r12d
   14002b614:	js     0x14002b76d
   14002b61a:	cmp    r12d,0x1
   14002b61e:	je     0x14002b76d
   14002b624:	cmp    r12d,0x24
   14002b628:	jg     0x14002b76d
   14002b62e:	test   r12d,r12d
   14002b631:	jne    0x14002b65b
   14002b633:	cmp    bpl,0x30
   14002b637:	je     0x14002b641
   14002b639:	mov    r12d,0xa
   14002b63f:	jmp    0x14002b679
   14002b641:	cmp    BYTE PTR [rbx],0x78
   14002b644:	je     0x14002b653
   14002b646:	cmp    BYTE PTR [rbx],0x58
   14002b649:	je     0x14002b653
   14002b64b:	mov    r12d,0x8
   14002b651:	jmp    0x14002b679
   14002b653:	mov    r12d,0x10
   14002b659:	jmp    0x14002b667
   14002b65b:	cmp    r12d,0x10
   14002b65f:	jne    0x14002b679
   14002b661:	cmp    bpl,0x30
   14002b665:	jne    0x14002b679
   14002b667:	cmp    BYTE PTR [rbx],0x78
   14002b66a:	je     0x14002b671
   14002b66c:	cmp    BYTE PTR [rbx],0x58
   14002b66f:	jne    0x14002b679
   14002b671:	mov    bpl,BYTE PTR [rbx+0x1]
   14002b675:	add    rbx,0x2
   14002b679:	mov    r10,QWORD PTR [r8+0x140]
   14002b680:	xor    edx,edx
   14002b682:	or     eax,0xffffffff
   14002b685:	div    r12d
   14002b688:	mov    r9d,eax
   14002b68b:	movzx  ecx,bpl
   14002b68f:	movzx  r8d,WORD PTR [r10+rcx*2]
   14002b694:	test   r8b,0x4
   14002b698:	je     0x14002b6a3
   14002b69a:	movsx  ecx,bpl
   14002b69e:	sub    ecx,0x30
   14002b6a1:	jmp    0x14002b6bd
   14002b6a3:	test   r8d,0x103
   14002b6aa:	je     0x14002b6d8
   14002b6ac:	lea    eax,[rbp-0x61]
   14002b6af:	movsx  ecx,bpl
   14002b6b3:	cmp    al,0x19
   14002b6b5:	ja     0x14002b6ba
   14002b6b7:	sub    ecx,0x20
   14002b6ba:	add    ecx,0xffffffc9
   14002b6bd:	cmp    ecx,r12d
   14002b6c0:	jae    0x14002b6d8
   14002b6c2:	or     esi,0x8
   14002b6c5:	cmp    edi,r9d
   14002b6c8:	jb     0x14002b6ec
   14002b6ca:	jne    0x14002b6d0
   14002b6cc:	cmp    ecx,edx
   14002b6ce:	jbe    0x14002b6ec
   14002b6d0:	or     esi,0x4
   14002b6d3:	test   r13,r13
   14002b6d6:	jne    0x14002b6f2
   14002b6d8:	dec    rbx
   14002b6db:	test   sil,0x8
   14002b6df:	jne    0x14002b6fa
   14002b6e1:	test   r13,r13
   14002b6e4:	cmovne rbx,r14
   14002b6e8:	xor    edi,edi
   14002b6ea:	jmp    0x14002b745
   14002b6ec:	imul   edi,r12d
   14002b6f0:	add    edi,ecx
   14002b6f2:	mov    bpl,BYTE PTR [rbx]
   14002b6f5:	inc    rbx
   14002b6f8:	jmp    0x14002b68b
   14002b6fa:	mov    ebp,0x7fffffff
   14002b6ff:	test   sil,0x4
   14002b703:	jne    0x14002b722
   14002b705:	test   sil,0x1
   14002b709:	jne    0x14002b745
   14002b70b:	mov    eax,esi
   14002b70d:	and    eax,0x2
   14002b710:	je     0x14002b71a
   14002b712:	cmp    edi,0x80000000
   14002b718:	ja     0x14002b722
   14002b71a:	test   eax,eax
   14002b71c:	jne    0x14002b745
   14002b71e:	cmp    edi,ebp
   14002b720:	jbe    0x14002b745
   14002b722:	call   0x14002b3f4
   14002b727:	mov    DWORD PTR [rax],0x22
   14002b72d:	test   sil,0x1
   14002b731:	je     0x14002b738
   14002b733:	or     edi,0xffffffff
   14002b736:	jmp    0x14002b745
   14002b738:	mov    al,sil
   14002b73b:	and    al,0x2
   14002b73d:	neg    al
   14002b73f:	sbb    edi,edi
   14002b741:	neg    edi
   14002b743:	add    edi,ebp
   14002b745:	test   r13,r13
   14002b748:	je     0x14002b74e
   14002b74a:	mov    QWORD PTR [r13+0x0],rbx
   14002b74e:	test   sil,0x2
   14002b752:	je     0x14002b756
   14002b754:	neg    edi
   14002b756:	cmp    BYTE PTR [rsp+0x48],0x0
   14002b75b:	je     0x14002b769
   14002b75d:	mov    rcx,QWORD PTR [rsp+0x40]
   14002b762:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b769:	mov    eax,edi
   14002b76b:	jmp    0x14002b78b
   14002b76d:	test   r13,r13
   14002b770:	je     0x14002b776
   14002b772:	mov    QWORD PTR [r13+0x0],r14
   14002b776:	cmp    BYTE PTR [rsp+0x48],dil
   14002b77b:	je     0x14002b789
   14002b77d:	mov    rax,QWORD PTR [rsp+0x40]
   14002b782:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b789:	xor    eax,eax
   14002b78b:	lea    r11,[rsp+0x50]
   14002b790:	mov    rbx,QWORD PTR [r11+0x20]
   14002b794:	mov    rbp,QWORD PTR [r11+0x28]
   14002b798:	mov    rsi,QWORD PTR [r11+0x30]
   14002b79c:	mov    rdi,QWORD PTR [r11+0x38]
   14002b7a0:	mov    rsp,r11
   14002b7a3:	pop    r14
   14002b7a5:	pop    r13
   14002b7a7:	pop    r12
   14002b7a9:	ret    
   14002b7aa:	int3   
   14002b7ab:	int3   
   14002b7ac:	sub    rsp,0x38
   14002b7b0:	xor    eax,eax
   14002b7b2:	mov    r9d,r8d
   14002b7b5:	mov    r8,rdx
   14002b7b8:	mov    DWORD PTR [rsp+0x20],eax
   14002b7bc:	mov    rdx,rcx
   14002b7bf:	cmp    DWORD PTR [rip+0x3f113],eax        # 0x14006a8d8
   14002b7c5:	jne    0x14002b7d0
   14002b7c7:	lea    rcx,[rip+0x3bea2]        # 0x140067670
   14002b7ce:	jmp    0x14002b7d2
   14002b7d0:	xor    ecx,ecx
   14002b7d2:	call   0x14002b528
   14002b7d7:	add    rsp,0x38
   14002b7db:	ret    
   14002b7dc:	mov    QWORD PTR [rsp+0x10],rbx
   14002b7e1:	push   rdi
   14002b7e2:	sub    rsp,0x30
   14002b7e6:	mov    eax,0x5a4d
   14002b7eb:	cmp    WORD PTR [rip+0xfffffffffffd480e],ax        # 0x140000000
   14002b7f2:	jne    0x14002b84a
   14002b7f4:	movsxd rax,DWORD PTR [rip+0xfffffffffffd4841]        # 0x14000003c
   14002b7fb:	lea    rcx,[rip+0xfffffffffffd47fe]        # 0x140000000
   14002b802:	add    rax,rcx
   14002b805:	cmp    DWORD PTR [rax],0x4550
   14002b80b:	je     0x14002b815
   14002b80d:	xor    ebx,ebx
   14002b80f:	mov    DWORD PTR [rsp+0x40],ebx
   14002b813:	jmp    0x14002b850
   14002b815:	mov    ecx,0x20b
   14002b81a:	cmp    WORD PTR [rax+0x18],cx
   14002b81e:	je     0x14002b828
   14002b820:	xor    ebx,ebx
   14002b822:	mov    DWORD PTR [rsp+0x40],ebx
   14002b826:	jmp    0x14002b850
   14002b828:	cmp    DWORD PTR [rax+0x84],0xe
   14002b82f:	ja     0x14002b839
   14002b831:	xor    ebx,ebx
   14002b833:	mov    DWORD PTR [rsp+0x40],ebx
   14002b837:	jmp    0x14002b850
   14002b839:	xor    ebx,ebx
   14002b83b:	cmp    DWORD PTR [rax+0xf8],ebx
   14002b841:	setne  bl
   14002b844:	mov    DWORD PTR [rsp+0x40],ebx
   14002b848:	jmp    0x14002b850
   14002b84a:	xor    ebx,ebx
   14002b84c:	mov    DWORD PTR [rsp+0x40],ebx
   14002b850:	mov    edi,0x1
   14002b855:	mov    ecx,edi
   14002b857:	call   0x140031c80
   14002b85c:	test   eax,eax
   14002b85e:	jne    0x14002b882
   14002b860:	cmp    DWORD PTR [rip+0x3e411],0x2        # 0x140069c78
   14002b867:	je     0x14002b86e
   14002b869:	call   0x140030c28
   14002b86e:	mov    ecx,0x1c
   14002b873:	call   0x140030a00
   14002b878:	mov    ecx,0xff
   14002b87d:	call   0x1400303e4
   14002b882:	call   0x140031fa4
   14002b887:	test   eax,eax
   14002b889:	jne    0x14002b8ad
   14002b88b:	cmp    DWORD PTR [rip+0x3e3e6],0x2        # 0x140069c78
   14002b892:	je     0x14002b899
   14002b894:	call   0x140030c28
   14002b899:	mov    ecx,0x10
   14002b89e:	call   0x140030a00
   14002b8a3:	mov    ecx,0xff
   14002b8a8:	call   0x1400303e4
   14002b8ad:	call   0x1400334f4
   14002b8b2:	nop
   14002b8b3:	call   0x14002fdd8
   14002b8b8:	test   eax,eax
   14002b8ba:	jns    0x14002b8c6
   14002b8bc:	mov    ecx,0x1b
   14002b8c1:	call   0x140030378
   14002b8c6:	call   QWORD PTR [rip+0x11844]        # 0x14003d110
   14002b8cc:	mov    QWORD PTR [rip+0x3f435],rax        # 0x14006ad08
   14002b8d3:	call   0x140033340
   14002b8d8:	mov    QWORD PTR [rip+0x3e389],rax        # 0x140069c68
   14002b8df:	call   0x140033248
   14002b8e4:	test   eax,eax
   14002b8e6:	jns    0x14002b8f2
   14002b8e8:	mov    ecx,0x8
   14002b8ed:	call   0x140030378
   14002b8f2:	call   0x140032f48
   14002b8f7:	test   eax,eax
   14002b8f9:	jns    0x14002b905
   14002b8fb:	mov    ecx,0x9
   14002b900:	call   0x140030378
   14002b905:	mov    ecx,edi
   14002b907:	call   0x140030484
   14002b90c:	test   eax,eax
   14002b90e:	je     0x14002b917
   14002b910:	mov    ecx,eax
   14002b912:	call   0x140030378
   14002b917:	mov    r8,QWORD PTR [rip+0x3e682]        # 0x140069fa0
   14002b91e:	mov    QWORD PTR [rip+0x3e683],r8        # 0x140069fa8
   14002b925:	mov    rdx,QWORD PTR [rip+0x3e664]        # 0x140069f90
   14002b92c:	mov    ecx,DWORD PTR [rip+0x3e65a]        # 0x140069f8c
   14002b932:	call   0x140001fc0
   14002b937:	mov    edi,eax
   14002b939:	mov    DWORD PTR [rsp+0x20],eax
   14002b93d:	test   ebx,ebx
   14002b93f:	jne    0x14002b948
   14002b941:	mov    ecx,eax
   14002b943:	call   0x1400306c0
   14002b948:	call   0x1400306d8
   14002b94d:	jmp    0x14002b966
   14002b94f:	mov    edi,eax
   14002b951:	cmp    DWORD PTR [rsp+0x40],0x0
   14002b956:	jne    0x14002b960
   14002b958:	mov    ecx,eax
   14002b95a:	call   0x1400306cc
   14002b95f:	int3   
   14002b960:	call   0x1400306e8
   14002b965:	nop
   14002b966:	mov    eax,edi
   14002b968:	mov    rbx,QWORD PTR [rsp+0x48]
   14002b96d:	add    rsp,0x30
   14002b971:	pop    rdi
   14002b972:	ret    
   14002b973:	int3   
   14002b974:	sub    rsp,0x28
   14002b978:	call   0x140033564
   14002b97d:	add    rsp,0x28
   14002b981:	jmp    0x14002b7dc
   14002b986:	int3   
   14002b987:	int3   
   14002b988:	int3   
   14002b989:	int3   
   14002b98a:	int3   
   14002b98b:	int3   
   14002b98c:	int3   
   14002b98d:	int3   
   14002b98e:	int3   
   14002b98f:	int3   
   14002b990:	int3   
   14002b991:	int3   
   14002b992:	int3   
   14002b993:	int3   
   14002b994:	int3   
   14002b995:	int3   
   14002b996:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002b9a0:	mov    r11,rcx
   14002b9a3:	sub    rdx,rcx
   14002b9a6:	jb     0x14002bb4a
   14002b9ac:	cmp    r8,0x8
   14002b9b0:	jb     0x14002ba13
   14002b9b2:	test   cl,0x7
   14002b9b5:	je     0x14002b9ed
   14002b9b7:	test   cl,0x1
   14002b9ba:	je     0x14002b9c7
   14002b9bc:	mov    al,BYTE PTR [rdx+rcx*1]
   14002b9bf:	dec    r8
   14002b9c2:	mov    BYTE PTR [rcx],al
   14002b9c4:	inc    rcx
   14002b9c7:	test   cl,0x2
   14002b9ca:	je     0x14002b9db
   14002b9cc:	mov    ax,WORD PTR [rdx+rcx*1]
   14002b9d0:	sub    r8,0x2
   14002b9d4:	mov    WORD PTR [rcx],ax
   14002b9d7:	add    rcx,0x2
   14002b9db:	test   cl,0x4
   14002b9de:	je     0x14002b9ed
   14002b9e0:	mov    eax,DWORD PTR [rdx+rcx*1]
   14002b9e3:	sub    r8,0x4
   14002b9e7:	mov    DWORD PTR [rcx],eax
   14002b9e9:	add    rcx,0x4
   14002b9ed:	mov    r9,r8
   14002b9f0:	shr    r9,0x5
   14002b9f4:	jne    0x14002ba47
   14002b9f6:	mov    r9,r8
   14002b9f9:	shr    r9,0x3
   14002b9fd:	je     0x14002ba13
   14002b9ff:	mov    rax,QWORD PTR [rdx+rcx*1]
   14002ba03:	mov    QWORD PTR [rcx],rax
   14002ba06:	add    rcx,0x8
   14002ba0a:	dec    r9
   14002ba0d:	jne    0x14002b9ff
   14002ba0f:	and    r8,0x7
   14002ba13:	test   r8,r8
   14002ba16:	jne    0x14002ba20
   14002ba18:	mov    rax,r11
   14002ba1b:	ret    
   14002ba1c:	nop    DWORD PTR [rax+0x0]
   14002ba20:	mov    al,BYTE PTR [rdx+rcx*1]
   14002ba23:	mov    BYTE PTR [rcx],al
   14002ba25:	inc    rcx
   14002ba28:	dec    r8
   14002ba2b:	jne    0x14002ba20
   14002ba2d:	mov    rax,r11
   14002ba30:	ret    
   14002ba31:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002ba40:	data16 data16 xchg ax,ax
   14002ba44:	data16 xchg ax,ax
   14002ba47:	cmp    r9,0x2000
   14002ba4e:	jae    0x14002ba92
   14002ba50:	mov    rax,QWORD PTR [rdx+rcx*1]
   14002ba54:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14002ba59:	add    rcx,0x20
   14002ba5d:	mov    QWORD PTR [rcx-0x20],rax
   14002ba61:	mov    QWORD PTR [rcx-0x18],r10
   14002ba65:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14002ba6a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14002ba6f:	dec    r9
   14002ba72:	mov    QWORD PTR [rcx-0x10],rax
   14002ba76:	mov    QWORD PTR [rcx-0x8],r10
   14002ba7a:	jne    0x14002ba50
   14002ba7c:	and    r8,0x1f
   14002ba80:	jmp    0x14002b9f6
   14002ba85:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002ba90:	xchg   ax,ax
   14002ba92:	cmp    rdx,0x1000
   14002ba99:	jb     0x14002ba50
   14002ba9b:	mov    eax,0x20
   14002baa0:	prefetchnta BYTE PTR [rdx+rcx*1]
   14002baa4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14002baa9:	add    rcx,0x80
   14002bab0:	dec    eax
   14002bab2:	jne    0x14002baa0
   14002bab4:	sub    rcx,0x1000
   14002babb:	mov    eax,0x40
   14002bac0:	mov    r9,QWORD PTR [rdx+rcx*1]
   14002bac4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14002bac9:	movnti QWORD PTR [rcx],r9
   14002bacd:	movnti QWORD PTR [rcx+0x8],r10
   14002bad2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14002bad7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14002badc:	movnti QWORD PTR [rcx+0x10],r9
   14002bae1:	movnti QWORD PTR [rcx+0x18],r10
   14002bae6:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14002baeb:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14002baf0:	add    rcx,0x40
   14002baf4:	movnti QWORD PTR [rcx-0x20],r9
   14002baf9:	movnti QWORD PTR [rcx-0x18],r10
   14002bafe:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14002bb03:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14002bb08:	dec    eax
   14002bb0a:	movnti QWORD PTR [rcx-0x10],r9
   14002bb0f:	movnti QWORD PTR [rcx-0x8],r10
   14002bb14:	jne    0x14002bac0
   14002bb16:	sub    r8,0x1000
   14002bb1d:	cmp    r8,0x1000
   14002bb24:	jae    0x14002ba9b
   14002bb2a:	lock or BYTE PTR [rsp],0x0
   14002bb2f:	jmp    0x14002b9ed
   14002bb34:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002bb40:	data16 data16 xchg ax,ax
   14002bb44:	data16 data16 xchg ax,ax
   14002bb48:	xchg   ax,ax
   14002bb4a:	add    rcx,r8
   14002bb4d:	cmp    r8,0x8
   14002bb51:	jb     0x14002bbb4
   14002bb53:	test   cl,0x7
   14002bb56:	je     0x14002bb8e
   14002bb58:	test   cl,0x1
   14002bb5b:	je     0x14002bb68
   14002bb5d:	dec    rcx
   14002bb60:	mov    al,BYTE PTR [rdx+rcx*1]
   14002bb63:	dec    r8
   14002bb66:	mov    BYTE PTR [rcx],al
   14002bb68:	test   cl,0x2
   14002bb6b:	je     0x14002bb7c
   14002bb6d:	sub    rcx,0x2
   14002bb71:	mov    ax,WORD PTR [rdx+rcx*1]
   14002bb75:	sub    r8,0x2
   14002bb79:	mov    WORD PTR [rcx],ax
   14002bb7c:	test   cl,0x4
   14002bb7f:	je     0x14002bb8e
   14002bb81:	sub    rcx,0x4
   14002bb85:	mov    eax,DWORD PTR [rdx+rcx*1]
   14002bb88:	sub    r8,0x4
   14002bb8c:	mov    DWORD PTR [rcx],eax
   14002bb8e:	mov    r9,r8
   14002bb91:	shr    r9,0x5
   14002bb95:	jne    0x14002bbe7
   14002bb97:	mov    r9,r8
   14002bb9a:	shr    r9,0x3
   14002bb9e:	je     0x14002bbb4
   14002bba0:	sub    rcx,0x8
   14002bba4:	mov    rax,QWORD PTR [rdx+rcx*1]
   14002bba8:	dec    r9
   14002bbab:	mov    QWORD PTR [rcx],rax
   14002bbae:	jne    0x14002bba0
   14002bbb0:	and    r8,0x7
   14002bbb4:	test   r8,r8
   14002bbb7:	jne    0x14002bbc0
   14002bbb9:	mov    rax,r11
   14002bbbc:	ret    
   14002bbbd:	nop    DWORD PTR [rax]
   14002bbc0:	dec    rcx
   14002bbc3:	mov    al,BYTE PTR [rdx+rcx*1]
   14002bbc6:	dec    r8
   14002bbc9:	mov    BYTE PTR [rcx],al
   14002bbcb:	jne    0x14002bbc0
   14002bbcd:	mov    rax,r11
   14002bbd0:	ret    
   14002bbd1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002bbe0:	data16 data16 xchg ax,ax
   14002bbe4:	data16 xchg ax,ax
   14002bbe7:	cmp    r9,0x2000
   14002bbee:	jae    0x14002bc32
   14002bbf0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14002bbf5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14002bbfa:	sub    rcx,0x20
   14002bbfe:	mov    QWORD PTR [rcx+0x18],rax
   14002bc02:	mov    QWORD PTR [rcx+0x10],r10
   14002bc06:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14002bc0b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14002bc0f:	dec    r9
   14002bc12:	mov    QWORD PTR [rcx+0x8],rax
   14002bc16:	mov    QWORD PTR [rcx],r10
   14002bc19:	jne    0x14002bbf0
   14002bc1b:	and    r8,0x1f
   14002bc1f:	jmp    0x14002bb97
   14002bc24:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002bc30:	xchg   ax,ax
   14002bc32:	cmp    rdx,0xfffffffffffff000
   14002bc39:	ja     0x14002bbf0
   14002bc3b:	mov    eax,0x20
   14002bc40:	sub    rcx,0x80
   14002bc47:	prefetchnta BYTE PTR [rdx+rcx*1]
   14002bc4b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14002bc50:	dec    eax
   14002bc52:	jne    0x14002bc40
   14002bc54:	add    rcx,0x1000
   14002bc5b:	mov    eax,0x40
   14002bc60:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14002bc65:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14002bc6a:	movnti QWORD PTR [rcx-0x8],r9
   14002bc6f:	movnti QWORD PTR [rcx-0x10],r10
   14002bc74:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14002bc79:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14002bc7e:	movnti QWORD PTR [rcx-0x18],r9
   14002bc83:	movnti QWORD PTR [rcx-0x20],r10
   14002bc88:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14002bc8d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14002bc92:	sub    rcx,0x40
   14002bc96:	movnti QWORD PTR [rcx+0x18],r9
   14002bc9b:	movnti QWORD PTR [rcx+0x10],r10
   14002bca0:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14002bca5:	mov    r10,QWORD PTR [rdx+rcx*1]
   14002bca9:	dec    eax
   14002bcab:	movnti QWORD PTR [rcx+0x8],r9
   14002bcb0:	movnti QWORD PTR [rcx],r10
   14002bcb4:	jne    0x14002bc60
   14002bcb6:	sub    r8,0x1000
   14002bcbd:	cmp    r8,0x1000
   14002bcc4:	jae    0x14002bc3b
   14002bcca:	lock or BYTE PTR [rsp],0x0
   14002bccf:	jmp    0x14002bb8e
   14002bcd4:	test   r8,r8
   14002bcd7:	je     0x14002bce6
   14002bcd9:	cmp    BYTE PTR [rcx],dl
   14002bcdb:	je     0x14002bce6
   14002bcdd:	inc    rcx
   14002bce0:	sub    r8,0x1
   14002bce4:	jne    0x14002bcd9
   14002bce6:	neg    r8
   14002bce9:	sbb    rax,rax
   14002bcec:	and    rax,rcx
   14002bcef:	ret    
   14002bcf0:	int3   
   14002bcf1:	int3   
   14002bcf2:	int3   
   14002bcf3:	int3   
   14002bcf4:	int3   
   14002bcf5:	int3   
   14002bcf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002bd00:	sub    rdx,rcx
   14002bd03:	cmp    r8,0x8
   14002bd07:	jb     0x14002bd2b
   14002bd09:	test   cl,0x7
   14002bd0c:	je     0x14002bd22
   14002bd0e:	xchg   ax,ax
   14002bd10:	mov    al,BYTE PTR [rcx]
   14002bd12:	cmp    al,BYTE PTR [rdx+rcx*1]
   14002bd15:	jne    0x14002bd43
   14002bd17:	inc    rcx
   14002bd1a:	dec    r8
   14002bd1d:	test   cl,0x7
   14002bd20:	jne    0x14002bd10
   14002bd22:	mov    r9,r8
   14002bd25:	shr    r9,0x3
   14002bd29:	jne    0x14002bd4a
   14002bd2b:	test   r8,r8
   14002bd2e:	je     0x14002bd3f
   14002bd30:	mov    al,BYTE PTR [rcx]
   14002bd32:	cmp    al,BYTE PTR [rdx+rcx*1]
   14002bd35:	jne    0x14002bd43
   14002bd37:	inc    rcx
   14002bd3a:	dec    r8
   14002bd3d:	jne    0x14002bd30
   14002bd3f:	xor    rax,rax
   14002bd42:	ret    
   14002bd43:	sbb    eax,eax
   14002bd45:	sbb    eax,0xffffffff
   14002bd48:	ret    
   14002bd49:	nop
   14002bd4a:	shr    r9,0x2
   14002bd4e:	je     0x14002bd87
   14002bd50:	mov    rax,QWORD PTR [rcx]
   14002bd53:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14002bd57:	jne    0x14002bdb4
   14002bd59:	mov    rax,QWORD PTR [rcx+0x8]
   14002bd5d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14002bd62:	jne    0x14002bdb0
   14002bd64:	mov    rax,QWORD PTR [rcx+0x10]
   14002bd68:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14002bd6d:	jne    0x14002bdac
   14002bd6f:	mov    rax,QWORD PTR [rcx+0x18]
   14002bd73:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14002bd78:	jne    0x14002bda8
   14002bd7a:	add    rcx,0x20
   14002bd7e:	dec    r9
   14002bd81:	jne    0x14002bd50
   14002bd83:	and    r8,0x1f
   14002bd87:	mov    r9,r8
   14002bd8a:	shr    r9,0x3
   14002bd8e:	je     0x14002bd2b
   14002bd90:	mov    rax,QWORD PTR [rcx]
   14002bd93:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14002bd97:	jne    0x14002bdb4
   14002bd99:	add    rcx,0x8
   14002bd9d:	dec    r9
   14002bda0:	jne    0x14002bd90
   14002bda2:	and    r8,0x7
   14002bda6:	jmp    0x14002bd2b
   14002bda8:	add    rcx,0x8
   14002bdac:	add    rcx,0x8
   14002bdb0:	add    rcx,0x8
   14002bdb4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14002bdb8:	bswap  rax
   14002bdbb:	bswap  rcx
   14002bdbe:	cmp    rax,rcx
   14002bdc1:	sbb    eax,eax
   14002bdc3:	sbb    eax,0xffffffff
   14002bdc6:	ret    
   14002bdc7:	int3   
   14002bdc8:	int3   
   14002bdc9:	int3   
   14002bdca:	int3   
   14002bdcb:	int3   
   14002bdcc:	int3   
   14002bdcd:	int3   
   14002bdce:	int3   
   14002bdcf:	int3   
   14002bdd0:	int3   
   14002bdd1:	int3   
   14002bdd2:	int3   
   14002bdd3:	int3   
   14002bdd4:	int3   
   14002bdd5:	int3   
   14002bdd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002bde0:	mov    r11,rcx
   14002bde3:	or     r8,r8
   14002bde6:	je     0x14002be9b
   14002bdec:	test   cl,0x7
   14002bdef:	je     0x14002be00
   14002bdf1:	mov    al,BYTE PTR [rcx]
   14002bdf3:	test   al,al
   14002bdf5:	je     0x14002be76
   14002bdf7:	inc    rcx
   14002bdfa:	test   cl,0x7
   14002bdfd:	jne    0x14002bdf1
   14002bdff:	nop
   14002be00:	mov    rax,QWORD PTR [rcx]
   14002be03:	mov    r10,rax
   14002be06:	movabs r9,0x7efefefefefefeff
   14002be10:	add    r9,r10
   14002be13:	xor    r10,0xffffffffffffffff
   14002be17:	xor    r10,r9
   14002be1a:	add    rcx,0x8
   14002be1e:	movabs r9,0x8101010101010100
   14002be28:	test   r9,r10
   14002be2b:	je     0x14002be00
   14002be2d:	sub    rcx,0x8
   14002be31:	test   al,al
   14002be33:	je     0x14002be76
   14002be35:	inc    rcx
   14002be38:	test   ah,ah
   14002be3a:	je     0x14002be76
   14002be3c:	inc    rcx
   14002be3f:	shr    rax,0x10
   14002be43:	test   al,al
   14002be45:	je     0x14002be76
   14002be47:	inc    rcx
   14002be4a:	test   ah,ah
   14002be4c:	je     0x14002be76
   14002be4e:	inc    rcx
   14002be51:	shr    rax,0x10
   14002be55:	test   al,al
   14002be57:	je     0x14002be76
   14002be59:	inc    rcx
   14002be5c:	test   ah,ah
   14002be5e:	je     0x14002be76
   14002be60:	inc    rcx
   14002be63:	shr    eax,0x10
   14002be66:	test   al,al
   14002be68:	je     0x14002be76
   14002be6a:	inc    rcx
   14002be6d:	test   ah,ah
   14002be6f:	je     0x14002be76
   14002be71:	inc    rcx
   14002be74:	jmp    0x14002be00
   14002be76:	sub    rcx,rdx
   14002be79:	test   dl,0x7
   14002be7c:	je     0x14002bea8
   14002be7e:	mov    al,BYTE PTR [rdx]
   14002be80:	mov    BYTE PTR [rcx+rdx*1],al
   14002be83:	test   al,al
   14002be85:	je     0x14002be9b
   14002be87:	inc    rdx
   14002be8a:	dec    r8
   14002be8d:	je     0x14002be96
   14002be8f:	test   dl,0x7
   14002be92:	jne    0x14002be7e
   14002be94:	jmp    0x14002bea8
   14002be96:	xor    al,al
   14002be98:	mov    BYTE PTR [rcx+rdx*1],al
   14002be9b:	mov    rax,r11
   14002be9e:	ret    
   14002be9f:	nop
   14002bea0:	mov    QWORD PTR [rcx+rdx*1],rax
   14002bea4:	add    rdx,0x8
   14002bea8:	mov    rax,QWORD PTR [rdx]
   14002beab:	sub    r8,0x8
   14002beaf:	jb     0x14002bed7
   14002beb1:	movabs r9,0x7efefefefefefeff
   14002bebb:	add    r9,rax
   14002bebe:	mov    r10,rax
   14002bec1:	xor    r10,0xffffffffffffffff
   14002bec5:	xor    r10,r9
   14002bec8:	movabs r9,0x8101010101010100
   14002bed2:	test   r9,r10
   14002bed5:	je     0x14002bea0
   14002bed7:	add    r8,0x8
   14002bedb:	je     0x14002bf6c
   14002bee1:	test   al,al
   14002bee3:	mov    BYTE PTR [rcx+rdx*1],al
   14002bee6:	je     0x14002bf71
   14002beec:	inc    rdx
   14002beef:	dec    r8
   14002bef2:	je     0x14002bf6c
   14002bef4:	test   ah,ah
   14002bef6:	mov    BYTE PTR [rcx+rdx*1],ah
   14002bef9:	je     0x14002bf71
   14002befb:	inc    rdx
   14002befe:	dec    r8
   14002bf01:	je     0x14002bf6c
   14002bf03:	shr    rax,0x10
   14002bf07:	test   al,al
   14002bf09:	mov    BYTE PTR [rcx+rdx*1],al
   14002bf0c:	je     0x14002bf71
   14002bf0e:	inc    rdx
   14002bf11:	dec    r8
   14002bf14:	je     0x14002bf6c
   14002bf16:	test   ah,ah
   14002bf18:	mov    BYTE PTR [rcx+rdx*1],ah
   14002bf1b:	je     0x14002bf71
   14002bf1d:	inc    rdx
   14002bf20:	dec    r8
   14002bf23:	je     0x14002bf6c
   14002bf25:	shr    rax,0x10
   14002bf29:	test   al,al
   14002bf2b:	mov    BYTE PTR [rcx+rdx*1],al
   14002bf2e:	je     0x14002bf71
   14002bf30:	inc    rdx
   14002bf33:	dec    r8
   14002bf36:	je     0x14002bf6c
   14002bf38:	test   ah,ah
   14002bf3a:	mov    BYTE PTR [rcx+rdx*1],ah
   14002bf3d:	je     0x14002bf71
   14002bf3f:	inc    rdx
   14002bf42:	dec    r8
   14002bf45:	je     0x14002bf6c
   14002bf47:	shr    eax,0x10
   14002bf4a:	test   al,al
   14002bf4c:	mov    BYTE PTR [rcx+rdx*1],al
   14002bf4f:	je     0x14002bf71
   14002bf51:	inc    rdx
   14002bf54:	dec    r8
   14002bf57:	je     0x14002bf6c
   14002bf59:	test   ah,ah
   14002bf5b:	mov    BYTE PTR [rcx+rdx*1],ah
   14002bf5e:	je     0x14002bf71
   14002bf60:	inc    rdx
   14002bf63:	dec    r8
   14002bf66:	jne    0x14002bea8
   14002bf6c:	xor    al,al
   14002bf6e:	mov    BYTE PTR [rcx+rdx*1],al
   14002bf71:	mov    rax,r11
   14002bf74:	ret    
   14002bf75:	int3   
   14002bf76:	int3   
   14002bf77:	int3   
   14002bf78:	mov    QWORD PTR [rsp+0x8],rbx
   14002bf7d:	mov    QWORD PTR [rsp+0x10],rsi
   14002bf82:	push   rdi
   14002bf83:	sub    rsp,0x20
   14002bf87:	mov    rbx,rdx
   14002bf8a:	mov    rdi,rcx
   14002bf8d:	test   rcx,rcx
   14002bf90:	jne    0x14002bf9c
   14002bf92:	mov    rcx,rdx
   14002bf95:	call   0x14002c04c
   14002bf9a:	jmp    0x14002c006
   14002bf9c:	test   rdx,rdx
   14002bf9f:	jne    0x14002bfa8
   14002bfa1:	call   0x14002b36c
   14002bfa6:	jmp    0x14002c004
   14002bfa8:	cmp    rdx,0xffffffffffffffe0
   14002bfac:	ja     0x14002bff1
   14002bfae:	mov    rcx,QWORD PTR [rip+0x3e8fb]        # 0x14006a8b0
   14002bfb5:	mov    eax,0x1
   14002bfba:	test   rbx,rbx
   14002bfbd:	cmove  rbx,rax
   14002bfc1:	mov    r8,rdi
   14002bfc4:	xor    edx,edx
   14002bfc6:	mov    r9,rbx
   14002bfc9:	call   QWORD PTR [rip+0x11149]        # 0x14003d118
   14002bfcf:	mov    rsi,rax
   14002bfd2:	test   rax,rax
   14002bfd5:	jne    0x14002c046
   14002bfd7:	cmp    DWORD PTR [rip+0x3ea3b],eax        # 0x14006aa18
   14002bfdd:	je     0x14002c02f
   14002bfdf:	mov    rcx,rbx
   14002bfe2:	call   0x140033620
   14002bfe7:	test   eax,eax
   14002bfe9:	je     0x14002c016
   14002bfeb:	cmp    rbx,0xffffffffffffffe0
   14002bfef:	jbe    0x14002bfae
   14002bff1:	mov    rcx,rbx
   14002bff4:	call   0x140033620
   14002bff9:	call   0x14002b3f4
   14002bffe:	mov    DWORD PTR [rax],0xc
   14002c004:	xor    eax,eax
   14002c006:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c00b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c010:	add    rsp,0x20
   14002c014:	pop    rdi
   14002c015:	ret    
   14002c016:	call   0x14002b3f4
   14002c01b:	mov    rbx,rax
   14002c01e:	call   QWORD PTR [rip+0x11314]        # 0x14003d338
   14002c024:	mov    ecx,eax
   14002c026:	call   0x14002b3ac
   14002c02b:	mov    DWORD PTR [rbx],eax
   14002c02d:	jmp    0x14002c004
   14002c02f:	call   0x14002b3f4
   14002c034:	mov    rbx,rax
   14002c037:	call   QWORD PTR [rip+0x112fb]        # 0x14003d338
   14002c03d:	mov    ecx,eax
   14002c03f:	call   0x14002b3ac
   14002c044:	mov    DWORD PTR [rbx],eax
   14002c046:	mov    rax,rsi
   14002c049:	jmp    0x14002c006
   14002c04b:	int3   
   14002c04c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c051:	mov    QWORD PTR [rsp+0x10],rsi
   14002c056:	push   rdi
   14002c057:	sub    rsp,0x20
   14002c05b:	mov    rbx,rcx
   14002c05e:	cmp    rcx,0xffffffffffffffe0
   14002c062:	ja     0x14002c0e0
   14002c064:	mov    edi,0x1
   14002c069:	test   rcx,rcx
   14002c06c:	cmovne rdi,rcx
   14002c070:	mov    rcx,QWORD PTR [rip+0x3e839]        # 0x14006a8b0
   14002c077:	test   rcx,rcx
   14002c07a:	jne    0x14002c09c
   14002c07c:	call   0x140030c28
   14002c081:	mov    ecx,0x1e
   14002c086:	call   0x140030a00
   14002c08b:	mov    ecx,0xff
   14002c090:	call   0x1400303e4
   14002c095:	mov    rcx,QWORD PTR [rip+0x3e814]        # 0x14006a8b0
   14002c09c:	mov    r8,rdi
   14002c09f:	xor    edx,edx
   14002c0a1:	call   QWORD PTR [rip+0x11079]        # 0x14003d120
   14002c0a7:	mov    rsi,rax
   14002c0aa:	test   rax,rax
   14002c0ad:	jne    0x14002c0db
   14002c0af:	cmp    DWORD PTR [rip+0x3e963],eax        # 0x14006aa18
   14002c0b5:	je     0x14002c0c5
   14002c0b7:	mov    rcx,rbx
   14002c0ba:	call   0x140033620
   14002c0bf:	test   eax,eax
   14002c0c1:	je     0x14002c0d0
   14002c0c3:	jmp    0x14002c070
   14002c0c5:	call   0x14002b3f4
   14002c0ca:	mov    DWORD PTR [rax],0xc
   14002c0d0:	call   0x14002b3f4
   14002c0d5:	mov    DWORD PTR [rax],0xc
   14002c0db:	mov    rax,rsi
   14002c0de:	jmp    0x14002c0f2
   14002c0e0:	call   0x140033620
   14002c0e5:	call   0x14002b3f4
   14002c0ea:	mov    DWORD PTR [rax],0xc
   14002c0f0:	xor    eax,eax
   14002c0f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c0f7:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c0fc:	add    rsp,0x20
   14002c100:	pop    rdi
   14002c101:	ret    
   14002c102:	int3   
   14002c103:	int3   
   14002c104:	ret    0x0
   14002c107:	int3   
   14002c108:	lea    rax,[rip+0x76d1]        # 0x1400337e0
   14002c10f:	lea    rcx,[rip+0x82ea]        # 0x140034400
   14002c116:	mov    QWORD PTR [rip+0x3b57b],rax        # 0x140067698
   14002c11d:	lea    rax,[rip+0x76ac]        # 0x1400337d0
   14002c124:	mov    QWORD PTR [rip+0x3b565],rcx        # 0x140067690
   14002c12b:	mov    QWORD PTR [rip+0x3b56e],rax        # 0x1400676a0
   14002c132:	lea    rax,[rip+0x769f]        # 0x1400337d8
   14002c139:	mov    QWORD PTR [rip+0x3b578],rcx        # 0x1400676b8
   14002c140:	mov    QWORD PTR [rip+0x3b561],rax        # 0x1400676a8
   14002c147:	lea    rax,[rip+0x7626]        # 0x140033774
   14002c14e:	mov    QWORD PTR [rip+0x3b55b],rax        # 0x1400676b0
   14002c155:	lea    rax,[rip+0x820c]        # 0x140034368
   14002c15c:	mov    QWORD PTR [rip+0x3b55d],rax        # 0x1400676c0
   14002c163:	lea    rax,[rip+0x7622]        # 0x14003378c
   14002c16a:	mov    QWORD PTR [rip+0x3b557],rax        # 0x1400676c8
   14002c171:	lea    rax,[rip+0x755c]        # 0x1400336d4
   14002c178:	mov    QWORD PTR [rip+0x3b551],rax        # 0x1400676d0
   14002c17f:	lea    rax,[rip+0x74ce]        # 0x140033654
   14002c186:	mov    QWORD PTR [rip+0x3b54b],rax        # 0x1400676d8
   14002c18d:	ret    
   14002c18e:	int3   
   14002c18f:	int3   
   14002c190:	jmp    0x14002c108
   14002c195:	int3   
   14002c196:	int3   
   14002c197:	int3   
   14002c198:	rex push rbp
   14002c19a:	push   r12
   14002c19c:	push   r13
   14002c19e:	sub    rsp,0x60
   14002c1a2:	lea    rbp,[rsp+0x50]
   14002c1a7:	mov    QWORD PTR [rbp+0x30],rbx
   14002c1ab:	mov    QWORD PTR [rbp+0x38],rsi
   14002c1af:	mov    QWORD PTR [rbp+0x40],rdi
   14002c1b3:	mov    rax,QWORD PTR [rip+0x3a6f6]        # 0x1400668b0
   14002c1ba:	xor    rax,rbp
   14002c1bd:	mov    QWORD PTR [rbp+0x0],rax
   14002c1c1:	mov    r12,r8
   14002c1c4:	mov    rsi,rdx
   14002c1c7:	mov    rbx,rcx
   14002c1ca:	test   rcx,rcx
   14002c1cd:	jne    0x14002c1f5
   14002c1cf:	call   0x14002b3f4
   14002c1d4:	mov    ebx,0x16
   14002c1d9:	and    QWORD PTR [rsp+0x20],0x0
   14002c1df:	xor    r9d,r9d
   14002c1e2:	xor    r8d,r8d
   14002c1e5:	xor    edx,edx
   14002c1e7:	xor    ecx,ecx
   14002c1e9:	mov    DWORD PTR [rax],ebx
   14002c1eb:	call   0x140031aac
   14002c1f0:	jmp    0x14002c37f
   14002c1f5:	call   0x140034aa8
   14002c1fa:	cmp    rax,rsi
   14002c1fd:	jb     0x14002c204
   14002c1ff:	mov    BYTE PTR [rbx],0x0
   14002c202:	jmp    0x14002c1cf
   14002c204:	mov    rax,QWORD PTR [r12]
   14002c208:	mov    edx,DWORD PTR [rax+0x14]
   14002c20b:	test   edx,edx
   14002c20d:	je     0x14002c26f
   14002c20f:	mov    eax,DWORD PTR [rax+0x4]
   14002c212:	mov    DWORD PTR [rsp+0x40],0x1
   14002c21a:	mov    r9,rbx
   14002c21d:	mov    DWORD PTR [rsp+0x38],eax
   14002c221:	and    DWORD PTR [rsp+0x30],0x0
   14002c226:	and    QWORD PTR [rsp+0x28],0x0
   14002c22c:	or     DWORD PTR [rsp+0x20],0xffffffff
   14002c231:	mov    r8d,0x200
   14002c237:	mov    rcx,r12
   14002c23a:	call   0x140034a10
   14002c23f:	movsxd r13,eax
   14002c242:	test   eax,eax
   14002c244:	jne    0x14002c27b
   14002c246:	call   0x14002b3f4
   14002c24b:	mov    ebx,0x2a
   14002c250:	mov    DWORD PTR [rax],ebx
   14002c252:	call   0x14002b3f4
   14002c257:	mov    eax,DWORD PTR [rax]
   14002c259:	jmp    0x14002c381
   14002c25e:	mov    al,BYTE PTR [rbx]
   14002c260:	cmp    al,0x61
   14002c262:	jl     0x14002c26c
   14002c264:	cmp    al,0x7a
   14002c266:	jg     0x14002c26c
   14002c268:	sub    al,0x20
   14002c26a:	mov    BYTE PTR [rbx],al
   14002c26c:	inc    rbx
   14002c26f:	cmp    BYTE PTR [rbx],0x0
   14002c272:	jne    0x14002c25e
   14002c274:	xor    eax,eax
   14002c276:	jmp    0x14002c381
   14002c27b:	mov    rcx,r13
   14002c27e:	cmp    rsi,r13
   14002c281:	jae    0x14002c295
   14002c283:	mov    BYTE PTR [rbx],0x0
   14002c286:	call   0x14002b3f4
   14002c28b:	mov    ebx,0x22
   14002c290:	jmp    0x14002c1d9
   14002c295:	test   eax,eax
   14002c297:	jle    0x14002c2ff
   14002c299:	xor    edx,edx
   14002c29b:	lea    rax,[rdx-0x20]
   14002c29f:	div    rcx
   14002c2a2:	cmp    rax,0x1
   14002c2a6:	jb     0x14002c2ff
   14002c2a8:	add    rcx,0x10
   14002c2ac:	cmp    rcx,0x400
   14002c2b3:	ja     0x14002c2e6
   14002c2b5:	lea    rax,[rcx+0xf]
   14002c2b9:	cmp    rax,rcx
   14002c2bc:	ja     0x14002c2c8
   14002c2be:	movabs rax,0xffffffffffffff0
   14002c2c8:	and    rax,0xfffffffffffffff0
   14002c2cc:	call   0x14003c600
   14002c2d1:	sub    rsp,rax
   14002c2d4:	lea    rdi,[rsp+0x50]
   14002c2d9:	test   rdi,rdi
   14002c2dc:	je     0x14002c306
   14002c2de:	mov    DWORD PTR [rdi],0xcccc
   14002c2e4:	jmp    0x14002c2f9
   14002c2e6:	call   0x14002c04c
   14002c2eb:	mov    rdi,rax
   14002c2ee:	test   rax,rax
   14002c2f1:	je     0x14002c301
   14002c2f3:	mov    DWORD PTR [rax],0xdddd
   14002c2f9:	add    rdi,0x10
   14002c2fd:	jmp    0x14002c301
   14002c2ff:	xor    edi,edi
   14002c301:	test   rdi,rdi
   14002c304:	jne    0x14002c316
   14002c306:	call   0x14002b3f4
   14002c30b:	mov    DWORD PTR [rax],0xc
   14002c311:	jmp    0x14002c252
   14002c316:	mov    rcx,QWORD PTR [r12]
   14002c31a:	mov    DWORD PTR [rsp+0x40],0x1
   14002c322:	mov    r9,rbx
   14002c325:	mov    eax,DWORD PTR [rcx+0x4]
   14002c328:	mov    edx,DWORD PTR [rcx+0x14]
   14002c32b:	mov    r8d,0x200
   14002c331:	mov    DWORD PTR [rsp+0x38],eax
   14002c335:	mov    DWORD PTR [rsp+0x30],r13d
   14002c33a:	mov    rcx,r12
   14002c33d:	mov    QWORD PTR [rsp+0x28],rdi
   14002c342:	or     DWORD PTR [rsp+0x20],0xffffffff
   14002c347:	call   0x140034a10
   14002c34c:	test   eax,eax
   14002c34e:	je     0x14002c362
   14002c350:	mov    r8,rdi
   14002c353:	mov    rdx,rsi
   14002c356:	mov    rcx,rbx
   14002c359:	call   0x14003445c
   14002c35e:	mov    ebx,eax
   14002c360:	jmp    0x14002c36e
   14002c362:	call   0x14002b3f4
   14002c367:	mov    ebx,0x2a
   14002c36c:	mov    DWORD PTR [rax],ebx
   14002c36e:	lea    rcx,[rdi-0x10]
   14002c372:	cmp    DWORD PTR [rcx],0xdddd
   14002c378:	jne    0x14002c37f
   14002c37a:	call   0x14002b36c
   14002c37f:	mov    eax,ebx
   14002c381:	mov    rcx,QWORD PTR [rbp+0x0]
   14002c385:	xor    rcx,rbp
   14002c388:	call   0x14002b250
   14002c38d:	mov    rbx,QWORD PTR [rbp+0x30]
   14002c391:	mov    rsi,QWORD PTR [rbp+0x38]
   14002c395:	mov    rdi,QWORD PTR [rbp+0x40]
   14002c399:	lea    rsp,[rbp+0x10]
   14002c39d:	pop    r13
   14002c39f:	pop    r12
   14002c3a1:	pop    rbp
   14002c3a2:	ret    
   14002c3a3:	int3   
   14002c3a4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c3a9:	push   rdi
   14002c3aa:	sub    rsp,0x40
   14002c3ae:	mov    rdi,rcx
   14002c3b1:	mov    rbx,rdx
   14002c3b4:	lea    rcx,[rsp+0x20]
   14002c3b9:	mov    rdx,r8
   14002c3bc:	call   0x14002b47c
   14002c3c1:	lea    r8,[rsp+0x20]
   14002c3c6:	mov    rdx,rbx
   14002c3c9:	mov    rcx,rdi
   14002c3cc:	call   0x14002c198
   14002c3d1:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c3d6:	je     0x14002c3e4
   14002c3d8:	mov    rcx,QWORD PTR [rsp+0x30]
   14002c3dd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c3e4:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c3e9:	add    rsp,0x40
   14002c3ed:	pop    rdi
   14002c3ee:	ret    
   14002c3ef:	int3   
   14002c3f0:	rex push rbx
   14002c3f2:	sub    rsp,0x30
   14002c3f6:	cmp    DWORD PTR [rip+0x3e4db],0x0        # 0x14006a8d8
   14002c3fd:	mov    rbx,rcx
   14002c400:	jne    0x14002c44d
   14002c402:	test   rcx,rcx
   14002c405:	jne    0x14002c42a
   14002c407:	call   0x14002b3f4
   14002c40c:	and    QWORD PTR [rsp+0x20],rbx
   14002c411:	xor    r9d,r9d
   14002c414:	xor    r8d,r8d
   14002c417:	xor    edx,edx
   14002c419:	xor    ecx,ecx
   14002c41b:	mov    DWORD PTR [rax],0x16
   14002c421:	call   0x140031aac
   14002c426:	xor    eax,eax
   14002c428:	jmp    0x14002c45c
   14002c42a:	cmp    BYTE PTR [rcx],0x0
   14002c42d:	mov    rax,rcx
   14002c430:	je     0x14002c459
   14002c432:	mov    cl,BYTE PTR [rax]
   14002c434:	cmp    cl,0x61
   14002c437:	jl     0x14002c443
   14002c439:	cmp    cl,0x7a
   14002c43c:	jg     0x14002c443
   14002c43e:	sub    cl,0x20
   14002c441:	mov    BYTE PTR [rax],cl
   14002c443:	inc    rax
   14002c446:	cmp    BYTE PTR [rax],0x0
   14002c449:	jne    0x14002c432
   14002c44b:	jmp    0x14002c459
   14002c44d:	xor    r8d,r8d
   14002c450:	or     rdx,0xffffffffffffffff
   14002c454:	call   0x14002c3a4
   14002c459:	mov    rax,rbx
   14002c45c:	add    rsp,0x30
   14002c460:	pop    rbx
   14002c461:	ret    
   14002c462:	int3   
   14002c463:	int3   
   14002c464:	rex push rbp
   14002c466:	push   r12
   14002c468:	push   r13
   14002c46a:	sub    rsp,0x60
   14002c46e:	lea    rbp,[rsp+0x50]
   14002c473:	mov    QWORD PTR [rbp+0x30],rbx
   14002c477:	mov    QWORD PTR [rbp+0x38],rsi
   14002c47b:	mov    QWORD PTR [rbp+0x40],rdi
   14002c47f:	mov    rax,QWORD PTR [rip+0x3a42a]        # 0x1400668b0
   14002c486:	xor    rax,rbp
   14002c489:	mov    QWORD PTR [rbp+0x0],rax
   14002c48d:	mov    r12,r8
   14002c490:	mov    rsi,rdx
   14002c493:	mov    rbx,rcx
   14002c496:	test   rcx,rcx
   14002c499:	jne    0x14002c4c1
   14002c49b:	call   0x14002b3f4
   14002c4a0:	mov    ebx,0x16
   14002c4a5:	and    QWORD PTR [rsp+0x20],0x0
   14002c4ab:	xor    r9d,r9d
   14002c4ae:	xor    r8d,r8d
   14002c4b1:	xor    edx,edx
   14002c4b3:	xor    ecx,ecx
   14002c4b5:	mov    DWORD PTR [rax],ebx
   14002c4b7:	call   0x140031aac
   14002c4bc:	jmp    0x14002c64b
   14002c4c1:	call   0x140034aa8
   14002c4c6:	cmp    rax,rsi
   14002c4c9:	jb     0x14002c4d0
   14002c4cb:	mov    BYTE PTR [rbx],0x0
   14002c4ce:	jmp    0x14002c49b
   14002c4d0:	mov    rax,QWORD PTR [r12]
   14002c4d4:	mov    edx,DWORD PTR [rax+0x14]
   14002c4d7:	test   edx,edx
   14002c4d9:	je     0x14002c53b
   14002c4db:	mov    eax,DWORD PTR [rax+0x4]
   14002c4de:	mov    DWORD PTR [rsp+0x40],0x1
   14002c4e6:	mov    r9,rbx
   14002c4e9:	mov    DWORD PTR [rsp+0x38],eax
   14002c4ed:	and    DWORD PTR [rsp+0x30],0x0
   14002c4f2:	and    QWORD PTR [rsp+0x28],0x0
   14002c4f8:	or     DWORD PTR [rsp+0x20],0xffffffff
   14002c4fd:	mov    r8d,0x100
   14002c503:	mov    rcx,r12
   14002c506:	call   0x140034a10
   14002c50b:	movsxd r13,eax
   14002c50e:	test   eax,eax
   14002c510:	jne    0x14002c547
   14002c512:	call   0x14002b3f4
   14002c517:	mov    ebx,0x2a
   14002c51c:	mov    DWORD PTR [rax],ebx
   14002c51e:	call   0x14002b3f4
   14002c523:	mov    eax,DWORD PTR [rax]
   14002c525:	jmp    0x14002c64d
   14002c52a:	mov    al,BYTE PTR [rbx]
   14002c52c:	cmp    al,0x41
   14002c52e:	jl     0x14002c538
   14002c530:	cmp    al,0x5a
   14002c532:	jg     0x14002c538
   14002c534:	add    al,0x20
   14002c536:	mov    BYTE PTR [rbx],al
   14002c538:	inc    rbx
   14002c53b:	cmp    BYTE PTR [rbx],0x0
   14002c53e:	jne    0x14002c52a
   14002c540:	xor    eax,eax
   14002c542:	jmp    0x14002c64d
   14002c547:	mov    rcx,r13
   14002c54a:	cmp    rsi,r13
   14002c54d:	jae    0x14002c561
   14002c54f:	mov    BYTE PTR [rbx],0x0
   14002c552:	call   0x14002b3f4
   14002c557:	mov    ebx,0x22
   14002c55c:	jmp    0x14002c4a5
   14002c561:	test   eax,eax
   14002c563:	jle    0x14002c5cb
   14002c565:	xor    edx,edx
   14002c567:	lea    rax,[rdx-0x20]
   14002c56b:	div    rcx
   14002c56e:	cmp    rax,0x1
   14002c572:	jb     0x14002c5cb
   14002c574:	add    rcx,0x10
   14002c578:	cmp    rcx,0x400
   14002c57f:	ja     0x14002c5b2
   14002c581:	lea    rax,[rcx+0xf]
   14002c585:	cmp    rax,rcx
   14002c588:	ja     0x14002c594
   14002c58a:	movabs rax,0xffffffffffffff0
   14002c594:	and    rax,0xfffffffffffffff0
   14002c598:	call   0x14003c600
   14002c59d:	sub    rsp,rax
   14002c5a0:	lea    rdi,[rsp+0x50]
   14002c5a5:	test   rdi,rdi
   14002c5a8:	je     0x14002c5d2
   14002c5aa:	mov    DWORD PTR [rdi],0xcccc
   14002c5b0:	jmp    0x14002c5c5
   14002c5b2:	call   0x14002c04c
   14002c5b7:	mov    rdi,rax
   14002c5ba:	test   rax,rax
   14002c5bd:	je     0x14002c5cd
   14002c5bf:	mov    DWORD PTR [rax],0xdddd
   14002c5c5:	add    rdi,0x10
   14002c5c9:	jmp    0x14002c5cd
   14002c5cb:	xor    edi,edi
   14002c5cd:	test   rdi,rdi
   14002c5d0:	jne    0x14002c5e2
   14002c5d2:	call   0x14002b3f4
   14002c5d7:	mov    DWORD PTR [rax],0xc
   14002c5dd:	jmp    0x14002c51e
   14002c5e2:	mov    rcx,QWORD PTR [r12]
   14002c5e6:	mov    DWORD PTR [rsp+0x40],0x1
   14002c5ee:	mov    r9,rbx
   14002c5f1:	mov    eax,DWORD PTR [rcx+0x4]
   14002c5f4:	mov    edx,DWORD PTR [rcx+0x14]
   14002c5f7:	mov    r8d,0x100
   14002c5fd:	mov    DWORD PTR [rsp+0x38],eax
   14002c601:	mov    DWORD PTR [rsp+0x30],r13d
   14002c606:	mov    rcx,r12
   14002c609:	mov    QWORD PTR [rsp+0x28],rdi
   14002c60e:	or     DWORD PTR [rsp+0x20],0xffffffff
   14002c613:	call   0x140034a10
   14002c618:	test   eax,eax
   14002c61a:	je     0x14002c62e
   14002c61c:	mov    r8,rdi
   14002c61f:	mov    rdx,rsi
   14002c622:	mov    rcx,rbx
   14002c625:	call   0x14003445c
   14002c62a:	mov    ebx,eax
   14002c62c:	jmp    0x14002c63a
   14002c62e:	call   0x14002b3f4
   14002c633:	mov    ebx,0x2a
   14002c638:	mov    DWORD PTR [rax],ebx
   14002c63a:	lea    rcx,[rdi-0x10]
   14002c63e:	cmp    DWORD PTR [rcx],0xdddd
   14002c644:	jne    0x14002c64b
   14002c646:	call   0x14002b36c
   14002c64b:	mov    eax,ebx
   14002c64d:	mov    rcx,QWORD PTR [rbp+0x0]
   14002c651:	xor    rcx,rbp
   14002c654:	call   0x14002b250
   14002c659:	mov    rbx,QWORD PTR [rbp+0x30]
   14002c65d:	mov    rsi,QWORD PTR [rbp+0x38]
   14002c661:	mov    rdi,QWORD PTR [rbp+0x40]
   14002c665:	lea    rsp,[rbp+0x10]
   14002c669:	pop    r13
   14002c66b:	pop    r12
   14002c66d:	pop    rbp
   14002c66e:	ret    
   14002c66f:	int3   
   14002c670:	mov    QWORD PTR [rsp+0x8],rbx
   14002c675:	push   rdi
   14002c676:	sub    rsp,0x40
   14002c67a:	mov    rdi,rcx
   14002c67d:	mov    rbx,rdx
   14002c680:	lea    rcx,[rsp+0x20]
   14002c685:	mov    rdx,r8
   14002c688:	call   0x14002b47c
   14002c68d:	lea    r8,[rsp+0x20]
   14002c692:	mov    rdx,rbx
   14002c695:	mov    rcx,rdi
   14002c698:	call   0x14002c464
   14002c69d:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c6a2:	je     0x14002c6b0
   14002c6a4:	mov    rcx,QWORD PTR [rsp+0x30]
   14002c6a9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c6b0:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c6b5:	add    rsp,0x40
   14002c6b9:	pop    rdi
   14002c6ba:	ret    
   14002c6bb:	int3   
   14002c6bc:	rex push rbx
   14002c6be:	sub    rsp,0x30
   14002c6c2:	cmp    DWORD PTR [rip+0x3e20f],0x0        # 0x14006a8d8
   14002c6c9:	mov    rbx,rcx
   14002c6cc:	jne    0x14002c719
   14002c6ce:	test   rcx,rcx
   14002c6d1:	jne    0x14002c6f6
   14002c6d3:	call   0x14002b3f4
   14002c6d8:	and    QWORD PTR [rsp+0x20],rbx
   14002c6dd:	xor    r9d,r9d
   14002c6e0:	xor    r8d,r8d
   14002c6e3:	xor    edx,edx
   14002c6e5:	xor    ecx,ecx
   14002c6e7:	mov    DWORD PTR [rax],0x16
   14002c6ed:	call   0x140031aac
   14002c6f2:	xor    eax,eax
   14002c6f4:	jmp    0x14002c728
   14002c6f6:	cmp    BYTE PTR [rcx],0x0
   14002c6f9:	mov    rax,rcx
   14002c6fc:	je     0x14002c725
   14002c6fe:	mov    cl,BYTE PTR [rax]
   14002c700:	cmp    cl,0x41
   14002c703:	jl     0x14002c70f
   14002c705:	cmp    cl,0x5a
   14002c708:	jg     0x14002c70f
   14002c70a:	add    cl,0x20
   14002c70d:	mov    BYTE PTR [rax],cl
   14002c70f:	inc    rax
   14002c712:	cmp    BYTE PTR [rax],0x0
   14002c715:	jne    0x14002c6fe
   14002c717:	jmp    0x14002c725
   14002c719:	xor    r8d,r8d
   14002c71c:	or     rdx,0xffffffffffffffff
   14002c720:	call   0x14002c670
   14002c725:	mov    rax,rbx
   14002c728:	add    rsp,0x30
   14002c72c:	pop    rbx
   14002c72d:	ret    
   14002c72e:	int3   
   14002c72f:	int3   
   14002c730:	rex push rbx
   14002c732:	sub    rsp,0x40
   14002c736:	cmp    DWORD PTR [rip+0x3e19b],0x0        # 0x14006a8d8
   14002c73d:	movsxd rbx,ecx
   14002c740:	jne    0x14002c752
   14002c742:	mov    rax,QWORD PTR [rip+0x3aef7]        # 0x140067640
   14002c749:	movzx  eax,WORD PTR [rax+rbx*2]
   14002c74d:	and    eax,0x2
   14002c750:	jmp    0x14002c7a8
   14002c752:	lea    rcx,[rsp+0x20]
   14002c757:	xor    edx,edx
   14002c759:	call   0x14002b47c
   14002c75e:	mov    rax,QWORD PTR [rsp+0x20]
   14002c763:	cmp    DWORD PTR [rax+0x10c],0x1
   14002c76a:	jle    0x14002c782
   14002c76c:	lea    r8,[rsp+0x20]
   14002c771:	mov    edx,0x2
   14002c776:	mov    ecx,ebx
   14002c778:	call   0x140032c10
   14002c77d:	mov    r11d,eax
   14002c780:	jmp    0x14002c792
   14002c782:	mov    rax,QWORD PTR [rax+0x140]
   14002c789:	movzx  r11d,WORD PTR [rax+rbx*2]
   14002c78e:	and    r11d,0x2
   14002c792:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c797:	je     0x14002c7a5
   14002c799:	mov    rax,QWORD PTR [rsp+0x30]
   14002c79e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002c7a5:	mov    eax,r11d
   14002c7a8:	add    rsp,0x40
   14002c7ac:	pop    rbx
   14002c7ad:	ret    
   14002c7ae:	int3   
   14002c7af:	int3   
   14002c7b0:	rex push rbx
   14002c7b2:	sub    rsp,0x40
   14002c7b6:	cmp    DWORD PTR [rip+0x3e11b],0x0        # 0x14006a8d8
   14002c7bd:	movsxd rbx,ecx
   14002c7c0:	jne    0x14002c7d2
   14002c7c2:	mov    rax,QWORD PTR [rip+0x3ae77]        # 0x140067640
   14002c7c9:	movzx  eax,WORD PTR [rax+rbx*2]
   14002c7cd:	and    eax,0x4
   14002c7d0:	jmp    0x14002c828
   14002c7d2:	lea    rcx,[rsp+0x20]
   14002c7d7:	xor    edx,edx
   14002c7d9:	call   0x14002b47c
   14002c7de:	mov    rax,QWORD PTR [rsp+0x20]
   14002c7e3:	cmp    DWORD PTR [rax+0x10c],0x1
   14002c7ea:	jle    0x14002c802
   14002c7ec:	lea    r8,[rsp+0x20]
   14002c7f1:	mov    edx,0x4
   14002c7f6:	mov    ecx,ebx
   14002c7f8:	call   0x140032c10
   14002c7fd:	mov    r11d,eax
   14002c800:	jmp    0x14002c812
   14002c802:	mov    rax,QWORD PTR [rax+0x140]
   14002c809:	movzx  r11d,WORD PTR [rax+rbx*2]
   14002c80e:	and    r11d,0x4
   14002c812:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c817:	je     0x14002c825
   14002c819:	mov    rax,QWORD PTR [rsp+0x30]
   14002c81e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002c825:	mov    eax,r11d
   14002c828:	add    rsp,0x40
   14002c82c:	pop    rbx
   14002c82d:	ret    
   14002c82e:	int3   
   14002c82f:	int3   
   14002c830:	rex push rbx
   14002c832:	sub    rsp,0x40
   14002c836:	cmp    DWORD PTR [rip+0x3e09b],0x0        # 0x14006a8d8
   14002c83d:	movsxd rbx,ecx
   14002c840:	jne    0x14002c854
   14002c842:	mov    rax,QWORD PTR [rip+0x3adf7]        # 0x140067640
   14002c849:	movzx  eax,WORD PTR [rax+rbx*2]
   14002c84d:	and    eax,0x107
   14002c852:	jmp    0x14002c8ad
   14002c854:	lea    rcx,[rsp+0x20]
   14002c859:	xor    edx,edx
   14002c85b:	call   0x14002b47c
   14002c860:	mov    rax,QWORD PTR [rsp+0x20]
   14002c865:	cmp    DWORD PTR [rax+0x10c],0x1
   14002c86c:	jle    0x14002c884
   14002c86e:	lea    r8,[rsp+0x20]
   14002c873:	mov    edx,0x107
   14002c878:	mov    ecx,ebx
   14002c87a:	call   0x140032c10
   14002c87f:	mov    r11d,eax
   14002c882:	jmp    0x14002c897
   14002c884:	mov    rax,QWORD PTR [rax+0x140]
   14002c88b:	movzx  r11d,WORD PTR [rax+rbx*2]
   14002c890:	and    r11d,0x107
   14002c897:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c89c:	je     0x14002c8aa
   14002c89e:	mov    rax,QWORD PTR [rsp+0x30]
   14002c8a3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002c8aa:	mov    eax,r11d
   14002c8ad:	add    rsp,0x40
   14002c8b1:	pop    rbx
   14002c8b2:	ret    
   14002c8b3:	int3   
   14002c8b4:	mov    r9,rcx
   14002c8b7:	movzx  r8d,BYTE PTR [r9]
   14002c8bb:	inc    r9
   14002c8be:	lea    eax,[r8-0x41]
   14002c8c2:	cmp    eax,0x19
   14002c8c5:	ja     0x14002c8cb
   14002c8c7:	add    r8d,0x20
   14002c8cb:	movzx  ecx,BYTE PTR [rdx]
   14002c8ce:	inc    rdx
   14002c8d1:	lea    eax,[rcx-0x41]
   14002c8d4:	cmp    eax,0x19
   14002c8d7:	ja     0x14002c8dc
   14002c8d9:	add    ecx,0x20
   14002c8dc:	test   r8d,r8d
   14002c8df:	je     0x14002c8e6
   14002c8e1:	cmp    r8d,ecx
   14002c8e4:	je     0x14002c8b7
   14002c8e6:	sub    r8d,ecx
   14002c8e9:	mov    eax,r8d
   14002c8ec:	ret    
   14002c8ed:	int3   
   14002c8ee:	int3   
   14002c8ef:	int3   
   14002c8f0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c8f5:	mov    QWORD PTR [rsp+0x10],rsi
   14002c8fa:	push   rdi
   14002c8fb:	sub    rsp,0x50
   14002c8ff:	mov    rsi,rcx
   14002c902:	mov    rdi,rdx
   14002c905:	lea    rcx,[rsp+0x30]
   14002c90a:	mov    rdx,r8
   14002c90d:	call   0x14002b47c
   14002c912:	test   rsi,rsi
   14002c915:	jne    0x14002c951
   14002c917:	call   0x14002b3f4
   14002c91c:	and    QWORD PTR [rsp+0x20],0x0
   14002c922:	xor    r9d,r9d
   14002c925:	xor    r8d,r8d
   14002c928:	xor    edx,edx
   14002c92a:	xor    ecx,ecx
   14002c92c:	mov    DWORD PTR [rax],0x16
   14002c932:	call   0x140031aac
   14002c937:	cmp    BYTE PTR [rsp+0x48],0x0
   14002c93c:	je     0x14002c94a
   14002c93e:	mov    rax,QWORD PTR [rsp+0x40]
   14002c943:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002c94a:	mov    eax,0x7fffffff
   14002c94f:	jmp    0x14002c9c2
   14002c951:	test   rdi,rdi
   14002c954:	je     0x14002c917
   14002c956:	mov    rax,QWORD PTR [rsp+0x30]
   14002c95b:	cmp    DWORD PTR [rax+0x14],0x0
   14002c95f:	jne    0x14002c981
   14002c961:	mov    rdx,rdi
   14002c964:	mov    rcx,rsi
   14002c967:	call   0x14002c8b4
   14002c96c:	cmp    BYTE PTR [rsp+0x48],0x0
   14002c971:	je     0x14002c9c2
   14002c973:	mov    rcx,QWORD PTR [rsp+0x40]
   14002c978:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c97f:	jmp    0x14002c9c2
   14002c981:	movzx  ecx,BYTE PTR [rsi]
   14002c984:	lea    rdx,[rsp+0x30]
   14002c989:	call   0x14002e028
   14002c98e:	movzx  ecx,BYTE PTR [rdi]
   14002c991:	lea    rdx,[rsp+0x30]
   14002c996:	mov    ebx,eax
   14002c998:	inc    rsi
   14002c99b:	call   0x14002e028
   14002c9a0:	inc    rdi
   14002c9a3:	test   ebx,ebx
   14002c9a5:	je     0x14002c9ab
   14002c9a7:	cmp    ebx,eax
   14002c9a9:	je     0x14002c981
   14002c9ab:	sub    ebx,eax
   14002c9ad:	cmp    BYTE PTR [rsp+0x48],0x0
   14002c9b2:	je     0x14002c9c0
   14002c9b4:	mov    rcx,QWORD PTR [rsp+0x40]
   14002c9b9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c9c0:	mov    eax,ebx
   14002c9c2:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c9c7:	mov    rsi,QWORD PTR [rsp+0x68]
   14002c9cc:	add    rsp,0x50
   14002c9d0:	pop    rdi
   14002c9d1:	ret    
   14002c9d2:	int3   
   14002c9d3:	int3   
   14002c9d4:	sub    rsp,0x38
   14002c9d8:	cmp    DWORD PTR [rip+0x3def9],0x0        # 0x14006a8d8
   14002c9df:	jne    0x14002ca19
   14002c9e1:	test   rcx,rcx
   14002c9e4:	jne    0x14002ca0d
   14002c9e6:	call   0x14002b3f4
   14002c9eb:	and    QWORD PTR [rsp+0x20],0x0
   14002c9f1:	xor    r9d,r9d
   14002c9f4:	xor    r8d,r8d
   14002c9f7:	xor    edx,edx
   14002c9f9:	xor    ecx,ecx
   14002c9fb:	mov    DWORD PTR [rax],0x16
   14002ca01:	call   0x140031aac
   14002ca06:	mov    eax,0x7fffffff
   14002ca0b:	jmp    0x14002ca21
   14002ca0d:	test   rdx,rdx
   14002ca10:	je     0x14002c9e6
   14002ca12:	call   0x14002c8b4
   14002ca17:	jmp    0x14002ca21
   14002ca19:	xor    r8d,r8d
   14002ca1c:	call   0x14002c8f0
   14002ca21:	add    rsp,0x38
   14002ca25:	ret    
   14002ca26:	int3   
   14002ca27:	int3   
   14002ca28:	mov    rax,rsp
   14002ca2b:	mov    QWORD PTR [rax+0x8],rbx
   14002ca2f:	mov    QWORD PTR [rax+0x10],rsi
   14002ca33:	mov    WORD PTR [rax+0x20],r9w
   14002ca38:	push   rdi
   14002ca39:	sub    rsp,0x60
   14002ca3d:	mov    rdi,rdx
   14002ca40:	mov    rdx,QWORD PTR [rsp+0x98]
   14002ca48:	mov    rbx,rcx
   14002ca4b:	lea    rcx,[rax-0x28]
   14002ca4f:	mov    rsi,r8
   14002ca52:	call   0x14002b47c
   14002ca57:	mov    r11,QWORD PTR [rsp+0x90]
   14002ca5f:	test   r11,r11
   14002ca62:	je     0x14002ca68
   14002ca64:	and    DWORD PTR [r11],0x0
   14002ca68:	mov    rax,QWORD PTR [rsp+0x40]
   14002ca6d:	cmp    DWORD PTR [rax+0x14],0x0
   14002ca71:	jne    0x14002caac
   14002ca73:	movzx  eax,WORD PTR [rsp+0x88]
   14002ca7b:	mov    ecx,0xff
   14002ca80:	cmp    ax,cx
   14002ca83:	ja     0x14002cb00
   14002ca85:	mov    BYTE PTR [rdi],al
   14002ca87:	test   rbx,rbx
   14002ca8a:	je     0x14002ca92
   14002ca8c:	mov    DWORD PTR [rbx],0x1
   14002ca92:	cmp    BYTE PTR [rsp+0x58],0x0
   14002ca97:	je     0x14002caa5
   14002ca99:	mov    rax,QWORD PTR [rsp+0x50]
   14002ca9e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002caa5:	xor    eax,eax
   14002caa7:	jmp    0x14002cb2d
   14002caac:	and    DWORD PTR [rsp+0x90],0x0
   14002cab4:	lea    rcx,[rsp+0x90]
   14002cabc:	lea    r8,[rsp+0x88]
   14002cac4:	mov    QWORD PTR [rsp+0x38],rcx
   14002cac9:	and    QWORD PTR [rsp+0x30],0x0
   14002cacf:	mov    ecx,DWORD PTR [rax+0x4]
   14002cad2:	mov    r9d,0x1
   14002cad8:	xor    edx,edx
   14002cada:	mov    DWORD PTR [rsp+0x28],esi
   14002cade:	mov    QWORD PTR [rsp+0x20],rdi
   14002cae3:	call   QWORD PTR [rip+0x105af]        # 0x14003d098
   14002cae9:	test   eax,eax
   14002caeb:	je     0x14002cb00
   14002caed:	cmp    DWORD PTR [rsp+0x90],0x0
   14002caf5:	jne    0x14002cb00
   14002caf7:	test   rbx,rbx
   14002cafa:	je     0x14002ca92
   14002cafc:	mov    DWORD PTR [rbx],eax
   14002cafe:	jmp    0x14002ca92
   14002cb00:	call   0x14002b3f4
   14002cb05:	mov    DWORD PTR [rax],0x2a
   14002cb0b:	test   rbx,rbx
   14002cb0e:	je     0x14002cb13
   14002cb10:	or     DWORD PTR [rbx],0xffffffff
   14002cb13:	call   0x14002b3f4
   14002cb18:	cmp    BYTE PTR [rsp+0x58],0x0
   14002cb1d:	mov    eax,DWORD PTR [rax]
   14002cb1f:	je     0x14002cb2d
   14002cb21:	mov    rcx,QWORD PTR [rsp+0x50]
   14002cb26:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002cb2d:	mov    rbx,QWORD PTR [rsp+0x70]
   14002cb32:	mov    rsi,QWORD PTR [rsp+0x78]
   14002cb37:	add    rsp,0x60
   14002cb3b:	pop    rdi
   14002cb3c:	ret    
   14002cb3d:	int3   
   14002cb3e:	int3   
   14002cb3f:	int3   
   14002cb40:	rex push rbx
   14002cb42:	sub    rsp,0x50
   14002cb46:	mov    rax,QWORD PTR [rip+0x39d63]        # 0x1400668b0
   14002cb4d:	xor    rax,rsp
   14002cb50:	mov    QWORD PTR [rsp+0x40],rax
   14002cb55:	or     DWORD PTR [rsp+0x30],0xffffffff
   14002cb5a:	mov    rax,QWORD PTR [rsp+0x80]
   14002cb62:	mov    rbx,rcx
   14002cb65:	test   rdx,rdx
   14002cb68:	jne    0x14002cb9f
   14002cb6a:	test   r8,r8
   14002cb6d:	je     0x14002cb94
   14002cb6f:	call   0x14002b3f4
   14002cb74:	and    QWORD PTR [rsp+0x20],0x0
   14002cb7a:	mov    ebx,0x16
   14002cb7f:	xor    r9d,r9d
   14002cb82:	xor    r8d,r8d
   14002cb85:	xor    edx,edx
   14002cb87:	xor    ecx,ecx
   14002cb89:	mov    DWORD PTR [rax],ebx
   14002cb8b:	call   0x140031aac
   14002cb90:	mov    eax,ebx
   14002cb92:	jmp    0x14002cbc7
   14002cb94:	mov    r8d,0x5
   14002cb9a:	lea    rdx,[rsp+0x34]
   14002cb9f:	and    QWORD PTR [rsp+0x28],0x0
   14002cba5:	lea    rcx,[rsp+0x30]
   14002cbaa:	mov    QWORD PTR [rsp+0x20],rax
   14002cbaf:	call   0x14002ca28
   14002cbb4:	mov    r11d,eax
   14002cbb7:	test   rbx,rbx
   14002cbba:	je     0x14002cbc4
   14002cbbc:	movsxd rax,DWORD PTR [rsp+0x30]
   14002cbc1:	mov    QWORD PTR [rbx],rax
   14002cbc4:	mov    eax,r11d
   14002cbc7:	mov    rcx,QWORD PTR [rsp+0x40]
   14002cbcc:	xor    rcx,rsp
   14002cbcf:	call   0x14002b250
   14002cbd4:	add    rsp,0x50
   14002cbd8:	pop    rbx
   14002cbd9:	ret    
   14002cbda:	int3   
   14002cbdb:	int3   
   14002cbdc:	sub    rsp,0x38
   14002cbe0:	or     QWORD PTR [rsp+0x40],0xffffffffffffffff
   14002cbe6:	mov    r9,r8
   14002cbe9:	mov    rax,rcx
   14002cbec:	neg    rax
   14002cbef:	mov    QWORD PTR [rsp+0x20],r9
   14002cbf4:	movzx  r9d,dx
   14002cbf8:	sbb    r8,r8
   14002cbfb:	mov    rdx,rcx
   14002cbfe:	lea    rcx,[rsp+0x40]
   14002cc03:	and    r8d,0x5
   14002cc07:	call   0x14002cb40
   14002cc0c:	mov    rax,QWORD PTR [rsp+0x40]
   14002cc11:	add    rsp,0x38
   14002cc15:	ret    
   14002cc16:	int3   
   14002cc17:	int3   
   14002cc18:	sub    rsp,0x28
   14002cc1c:	call   0x140031e48
   14002cc21:	mov    rcx,QWORD PTR [rip+0x3aa38]        # 0x140067660
   14002cc28:	cmp    QWORD PTR [rax+0xc0],rcx
   14002cc2f:	je     0x14002cc44
   14002cc31:	mov    eax,DWORD PTR [rax+0xc8]
   14002cc37:	test   DWORD PTR [rip+0x3a8ab],eax        # 0x1400674e8
   14002cc3d:	jne    0x14002cc44
   14002cc3f:	call   0x140032b98
   14002cc44:	mov    rax,QWORD PTR [rip+0x39e6d]        # 0x140066ab8
   14002cc4b:	add    rsp,0x28
   14002cc4f:	ret    
   14002cc50:	mov    QWORD PTR [rsp+0x8],rbx
   14002cc55:	mov    QWORD PTR [rsp+0x10],rsi
   14002cc5a:	push   rdi
   14002cc5b:	sub    rsp,0x30
   14002cc5f:	xor    ebx,ebx
   14002cc61:	mov    r10d,r9d
   14002cc64:	mov    rsi,r8
   14002cc67:	mov    eax,ebx
   14002cc69:	cmp    r9d,ebx
   14002cc6c:	cmovg  eax,r9d
   14002cc70:	add    eax,0x2
   14002cc73:	cdqe   
   14002cc75:	cmp    rdx,rax
   14002cc78:	jae    0x14002cc9c
   14002cc7a:	call   0x14002b3f4
   14002cc7f:	lea    edi,[rbx+0x22]
   14002cc82:	xor    r9d,r9d
   14002cc85:	xor    r8d,r8d
   14002cc88:	xor    edx,edx
   14002cc8a:	xor    ecx,ecx
   14002cc8c:	mov    DWORD PTR [rax],edi
   14002cc8e:	mov    QWORD PTR [rsp+0x20],rbx
   14002cc93:	call   0x140031aac
   14002cc98:	mov    eax,edi
   14002cc9a:	jmp    0x14002ccd9
   14002cc9c:	lea    eax,[rdx-0x2]
   14002cc9f:	cmp    r9d,eax
   14002cca2:	mov    r9,r8
   14002cca5:	cmovg  r10d,eax
   14002cca9:	mov    r8d,r10d
   14002ccac:	call   0x140034ad0
   14002ccb1:	mov    edi,eax
   14002ccb3:	cmp    eax,ebx
   14002ccb5:	je     0x14002ccc0
   14002ccb7:	call   0x14002b3f4
   14002ccbc:	mov    DWORD PTR [rax],edi
   14002ccbe:	jmp    0x14002cc98
   14002ccc0:	cmp    DWORD PTR [rsi],0x2d
   14002ccc3:	mov    rax,QWORD PTR [rsp+0x68]
   14002ccc8:	sete   bl
   14002cccb:	mov    DWORD PTR [rax],ebx
   14002cccd:	mov    rax,QWORD PTR [rsp+0x60]
   14002ccd2:	mov    ecx,DWORD PTR [rsi+0x4]
   14002ccd5:	mov    DWORD PTR [rax],ecx
   14002ccd7:	xor    eax,eax
   14002ccd9:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ccde:	mov    rsi,QWORD PTR [rsp+0x48]
   14002cce3:	add    rsp,0x30
   14002cce7:	pop    rdi
   14002cce8:	ret    
   14002cce9:	int3   
   14002ccea:	int3   
   14002cceb:	int3   
   14002ccec:	rex push rbx
   14002ccee:	push   rbp
   14002ccef:	push   rsi
   14002ccf0:	push   rdi
   14002ccf1:	push   r12
   14002ccf3:	sub    rsp,0x70
   14002ccf7:	mov    rax,QWORD PTR [rip+0x39bb2]        # 0x1400668b0
   14002ccfe:	xor    rax,rsp
   14002cd01:	mov    QWORD PTR [rsp+0x68],rax
   14002cd06:	mov    rsi,QWORD PTR [rsp+0xc0]
   14002cd0e:	mov    rbp,QWORD PTR [rsp+0xc8]
   14002cd16:	movsd  QWORD PTR [rsp+0x30],xmm2
   14002cd1c:	mov    r12d,r9d
   14002cd1f:	mov    rdi,rdx
   14002cd22:	mov    rbx,rcx
   14002cd25:	test   rcx,rcx
   14002cd28:	jne    0x14002cd51
   14002cd2a:	call   0x14002b3f4
   14002cd2f:	and    QWORD PTR [rsp+0x20],0x0
   14002cd35:	xor    r9d,r9d
   14002cd38:	xor    r8d,r8d
   14002cd3b:	xor    edx,edx
   14002cd3d:	xor    ecx,ecx
   14002cd3f:	mov    DWORD PTR [rax],0x16
   14002cd45:	call   0x140031aac
   14002cd4a:	mov    eax,0x16
   14002cd4f:	jmp    0x14002cdb1
   14002cd51:	test   rdx,rdx
   14002cd54:	je     0x14002cd2a
   14002cd56:	mov    BYTE PTR [rcx],0x0
   14002cd59:	test   rsi,rsi
   14002cd5c:	je     0x14002cd2a
   14002cd5e:	test   rbp,rbp
   14002cd61:	je     0x14002cd2a
   14002cd63:	mov    rcx,QWORD PTR [rsp+0x30]
   14002cd68:	lea    r8,[rsp+0x50]
   14002cd6d:	lea    rdx,[rsp+0x38]
   14002cd72:	mov    r9d,0x16
   14002cd78:	call   0x140034c84
   14002cd7d:	mov    ecx,DWORD PTR [rax+0x4]
   14002cd80:	lea    r9d,[rcx+r12*1]
   14002cd84:	test   r12d,r12d
   14002cd87:	jle    0x14002cd99
   14002cd89:	test   ecx,ecx
   14002cd8b:	jle    0x14002cd99
   14002cd8d:	mov    ecx,0x7fffffff
   14002cd92:	cmp    r9d,r12d
   14002cd95:	cmovl  r9d,ecx
   14002cd99:	mov    r8,rax
   14002cd9c:	mov    rdx,rdi
   14002cd9f:	mov    rcx,rbx
   14002cda2:	mov    QWORD PTR [rsp+0x28],rbp
   14002cda7:	mov    QWORD PTR [rsp+0x20],rsi
   14002cdac:	call   0x14002cc50
   14002cdb1:	mov    rcx,QWORD PTR [rsp+0x68]
   14002cdb6:	xor    rcx,rsp
   14002cdb9:	call   0x14002b250
   14002cdbe:	add    rsp,0x70
   14002cdc2:	pop    r12
   14002cdc4:	pop    rdi
   14002cdc5:	pop    rsi
   14002cdc6:	pop    rbp
   14002cdc7:	pop    rbx
   14002cdc8:	ret    
   14002cdc9:	int3   
   14002cdca:	int3   
   14002cdcb:	int3   
   14002cdcc:	rex push rbx
   14002cdce:	push   rbp
   14002cdcf:	push   rsi
   14002cdd0:	push   rdi
   14002cdd1:	push   r12
   14002cdd3:	sub    rsp,0x70
   14002cdd7:	mov    rax,QWORD PTR [rip+0x39ad2]        # 0x1400668b0
   14002cdde:	xor    rax,rsp
   14002cde1:	mov    QWORD PTR [rsp+0x68],rax
   14002cde6:	mov    rbp,QWORD PTR [rsp+0xc0]
   14002cdee:	mov    r12,QWORD PTR [rsp+0xc8]
   14002cdf6:	movsd  QWORD PTR [rsp+0x30],xmm2
   14002cdfc:	mov    edi,r9d
   14002cdff:	mov    rsi,rdx
   14002ce02:	mov    rbx,rcx
   14002ce05:	test   rcx,rcx
   14002ce08:	jne    0x14002ce31
   14002ce0a:	call   0x14002b3f4
   14002ce0f:	and    QWORD PTR [rsp+0x20],0x0
   14002ce15:	xor    r9d,r9d
   14002ce18:	xor    r8d,r8d
   14002ce1b:	xor    edx,edx
   14002ce1d:	xor    ecx,ecx
   14002ce1f:	mov    DWORD PTR [rax],0x16
   14002ce25:	call   0x140031aac
   14002ce2a:	mov    eax,0x16
   14002ce2f:	jmp    0x14002ce91
   14002ce31:	test   rdx,rdx
   14002ce34:	je     0x14002ce0a
   14002ce36:	mov    BYTE PTR [rcx],0x0
   14002ce39:	test   rbp,rbp
   14002ce3c:	je     0x14002ce0a
   14002ce3e:	test   r12,r12
   14002ce41:	je     0x14002ce0a
   14002ce43:	mov    rcx,QWORD PTR [rsp+0x30]
   14002ce48:	lea    r8,[rsp+0x50]
   14002ce4d:	lea    rdx,[rsp+0x38]
   14002ce52:	mov    r9d,0x16
   14002ce58:	call   0x140034c84
   14002ce5d:	mov    r9d,edi
   14002ce60:	mov    rdx,rsi
   14002ce63:	mov    rcx,rbx
   14002ce66:	mov    r8,rax
   14002ce69:	mov    QWORD PTR [rsp+0x28],r12
   14002ce6e:	mov    QWORD PTR [rsp+0x20],rbp
   14002ce73:	call   0x14002cc50
   14002ce78:	lea    ecx,[rsi-0x2]
   14002ce7b:	cmp    edi,ecx
   14002ce7d:	cmovg  edi,ecx
   14002ce80:	test   edi,edi
   14002ce82:	js     0x14002ce91
   14002ce84:	movsxd rcx,edi
   14002ce87:	cmp    BYTE PTR [rcx+rbx*1],0x0
   14002ce8b:	je     0x14002ce91
   14002ce8d:	mov    BYTE PTR [rcx+rbx*1],0x0
   14002ce91:	mov    rcx,QWORD PTR [rsp+0x68]
   14002ce96:	xor    rcx,rsp
   14002ce99:	call   0x14002b250
   14002ce9e:	add    rsp,0x70
   14002cea2:	pop    r12
   14002cea4:	pop    rdi
   14002cea5:	pop    rsi
   14002cea6:	pop    rbp
   14002cea7:	pop    rbx
   14002cea8:	ret    
   14002cea9:	int3   
   14002ceaa:	int3   
   14002ceab:	int3   
   14002ceac:	mov    QWORD PTR [rsp+0x8],rbx
   14002ceb1:	mov    QWORD PTR [rsp+0x10],rbp
   14002ceb6:	mov    QWORD PTR [rsp+0x18],rsi
   14002cebb:	push   rdi
   14002cebc:	sub    rsp,0x50
   14002cec0:	xor    ebp,ebp
   14002cec2:	mov    rsi,r8
   14002cec5:	mov    rdi,rdx
   14002cec8:	mov    rbx,rcx
   14002cecb:	cmp    rdx,rbp
   14002cece:	je     0x14002cee2
   14002ced0:	cmp    r8,rbp
   14002ced3:	je     0x14002cee2
   14002ced5:	cmp    BYTE PTR [rdx],bpl
   14002ced8:	jne    0x14002cef9
   14002ceda:	cmp    rcx,rbp
   14002cedd:	je     0x14002cee2
   14002cedf:	mov    WORD PTR [rcx],bp
   14002cee2:	xor    eax,eax
   14002cee4:	mov    rbx,QWORD PTR [rsp+0x60]
   14002cee9:	mov    rbp,QWORD PTR [rsp+0x68]
   14002ceee:	mov    rsi,QWORD PTR [rsp+0x70]
   14002cef3:	add    rsp,0x50
   14002cef7:	pop    rdi
   14002cef8:	ret    
   14002cef9:	lea    rcx,[rsp+0x30]
   14002cefe:	mov    rdx,r9
   14002cf01:	call   0x14002b47c
   14002cf06:	mov    r11,QWORD PTR [rsp+0x30]
   14002cf0b:	cmp    DWORD PTR [r11+0x14],ebp
   14002cf0f:	jne    0x14002cf36
   14002cf11:	cmp    rbx,rbp
   14002cf14:	je     0x14002cf1c
   14002cf16:	movzx  eax,BYTE PTR [rdi]
   14002cf19:	mov    WORD PTR [rbx],ax
   14002cf1c:	cmp    BYTE PTR [rsp+0x48],bpl
   14002cf21:	je     0x14002cf2f
   14002cf23:	mov    rax,QWORD PTR [rsp+0x40]
   14002cf28:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002cf2f:	mov    eax,0x1
   14002cf34:	jmp    0x14002cee4
   14002cf36:	movzx  ecx,BYTE PTR [rdi]
   14002cf39:	lea    rdx,[rsp+0x30]
   14002cf3e:	call   0x140034d44
   14002cf43:	cmp    eax,ebp
   14002cf45:	je     0x14002cfe7
   14002cf4b:	mov    rcx,QWORD PTR [rsp+0x30]
   14002cf50:	mov    r9d,DWORD PTR [rcx+0x10c]
   14002cf57:	cmp    r9d,0x1
   14002cf5b:	jle    0x14002cf8d
   14002cf5d:	cmp    esi,r9d
   14002cf60:	jl     0x14002cf8d
   14002cf62:	mov    ecx,DWORD PTR [rcx+0x4]
   14002cf65:	mov    eax,ebp
   14002cf67:	cmp    rbx,rbp
   14002cf6a:	setne  al
   14002cf6d:	mov    r8,rdi
   14002cf70:	mov    edx,0x9
   14002cf75:	mov    DWORD PTR [rsp+0x28],eax
   14002cf79:	mov    QWORD PTR [rsp+0x20],rbx
   14002cf7e:	call   QWORD PTR [rip+0x1012c]        # 0x14003d0b0
   14002cf84:	mov    rcx,QWORD PTR [rsp+0x30]
   14002cf89:	cmp    eax,ebp
   14002cf8b:	jne    0x14002cf9f
   14002cf8d:	movsxd rax,DWORD PTR [rcx+0x10c]
   14002cf94:	cmp    rsi,rax
   14002cf97:	jb     0x14002cfc1
   14002cf99:	cmp    BYTE PTR [rdi+0x1],bpl
   14002cf9d:	je     0x14002cfc1
   14002cf9f:	mov    eax,DWORD PTR [rcx+0x10c]
   14002cfa5:	cmp    BYTE PTR [rsp+0x48],bpl
   14002cfaa:	je     0x14002cee4
   14002cfb0:	mov    rcx,QWORD PTR [rsp+0x40]
   14002cfb5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002cfbc:	jmp    0x14002cee4
   14002cfc1:	call   0x14002b3f4
   14002cfc6:	mov    DWORD PTR [rax],0x2a
   14002cfcc:	cmp    BYTE PTR [rsp+0x48],bpl
   14002cfd1:	je     0x14002cfdf
   14002cfd3:	mov    rax,QWORD PTR [rsp+0x40]
   14002cfd8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002cfdf:	or     eax,0xffffffff
   14002cfe2:	jmp    0x14002cee4
   14002cfe7:	mov    eax,ebp
   14002cfe9:	mov    r9d,0x1
   14002cfef:	cmp    rbx,rbp
   14002cff2:	setne  al
   14002cff5:	lea    edx,[r9+0x8]
   14002cff9:	mov    r8,rdi
   14002cffc:	mov    DWORD PTR [rsp+0x28],eax
   14002d000:	mov    rax,QWORD PTR [rsp+0x30]
   14002d005:	mov    QWORD PTR [rsp+0x20],rbx
   14002d00a:	mov    ecx,DWORD PTR [rax+0x4]
   14002d00d:	call   QWORD PTR [rip+0x1009d]        # 0x14003d0b0
   14002d013:	cmp    eax,ebp
   14002d015:	jne    0x14002cf1c
   14002d01b:	jmp    0x14002cfc1
   14002d01d:	int3   
   14002d01e:	int3   
   14002d01f:	int3   
   14002d020:	xor    r9d,r9d
   14002d023:	jmp    0x14002ceac
   14002d028:	mov    rax,rsp
   14002d02b:	mov    QWORD PTR [rax+0x10],rbx
   14002d02f:	mov    QWORD PTR [rax+0x18],r8
   14002d033:	mov    QWORD PTR [rax+0x8],rcx
   14002d037:	push   rbp
   14002d038:	push   rsi
   14002d039:	push   rdi
   14002d03a:	push   r12
   14002d03c:	push   r13
   14002d03e:	push   r14
   14002d040:	push   r15
   14002d042:	sub    rsp,0x80
   14002d049:	xor    edi,edi
   14002d04b:	mov    r12b,0x80
   14002d04e:	mov    esi,r9d
   14002d051:	mov    rbx,rdx
   14002d054:	mov    DWORD PTR [rax-0x58],0x18
   14002d05b:	lea    ebp,[rdi+0x1]
   14002d05e:	mov    DWORD PTR [rax-0x64],edi
   14002d061:	mov    BYTE PTR [rsp+0xd8],dil
   14002d069:	mov    QWORD PTR [rax-0x50],rdi
   14002d06d:	test   r12b,r9b
   14002d070:	je     0x14002d07a
   14002d072:	mov    DWORD PTR [rax-0x48],edi
   14002d075:	mov    r14b,0x10
   14002d078:	jmp    0x14002d081
   14002d07a:	mov    DWORD PTR [rsp+0x70],ebp
   14002d07e:	mov    r14b,dil
   14002d081:	lea    rcx,[rsp+0x54]
   14002d086:	call   0x140035bf8
   14002d08b:	cmp    eax,edi
   14002d08d:	je     0x14002d0a3
   14002d08f:	xor    r9d,r9d
   14002d092:	xor    r8d,r8d
   14002d095:	xor    edx,edx
   14002d097:	xor    ecx,ecx
   14002d099:	mov    QWORD PTR [rsp+0x20],rdi
   14002d09e:	call   0x140031984
   14002d0a3:	bt     esi,0xf
   14002d0a7:	jb     0x14002d0be
   14002d0a9:	test   esi,0x74000
   14002d0af:	jne    0x14002d0bb
   14002d0b1:	cmp    DWORD PTR [rsp+0x54],0x8000
   14002d0b9:	je     0x14002d0be
   14002d0bb:	or     r14b,r12b
   14002d0be:	mov    ecx,esi
   14002d0c0:	mov    r8d,0x3
   14002d0c6:	mov    eax,0xc0000000
   14002d0cb:	and    ecx,r8d
   14002d0ce:	mov    edx,0x80000000
   14002d0d3:	cmp    ecx,edi
   14002d0d5:	je     0x14002d12b
   14002d0d7:	sub    ecx,ebp
   14002d0d9:	je     0x14002d115
   14002d0db:	cmp    ecx,ebp
   14002d0dd:	je     0x14002d110
   14002d0df:	call   0x14002b414
   14002d0e4:	mov    DWORD PTR [rax],edi
   14002d0e6:	or     DWORD PTR [rbx],0xffffffff
   14002d0e9:	call   0x14002b3f4
   14002d0ee:	mov    ebx,0x16
   14002d0f3:	xor    r9d,r9d
   14002d0f6:	xor    r8d,r8d
   14002d0f9:	xor    edx,edx
   14002d0fb:	xor    ecx,ecx
   14002d0fd:	mov    QWORD PTR [rsp+0x20],rdi
   14002d102:	mov    DWORD PTR [rax],ebx
   14002d104:	call   0x140031aac
   14002d109:	mov    eax,ebx
   14002d10b:	jmp    0x14002d80c
   14002d110:	mov    r15d,eax
   14002d113:	jmp    0x14002d12e
   14002d115:	test   sil,0x8
   14002d119:	je     0x14002d123
   14002d11b:	test   esi,0x70000
   14002d121:	jne    0x14002d110
   14002d123:	mov    r15d,0x40000000
   14002d129:	jmp    0x14002d12e
   14002d12b:	mov    r15d,edx
   14002d12e:	mov    ecx,DWORD PTR [rsp+0xe0]
   14002d135:	mov    r12d,0x2
   14002d13b:	sub    ecx,0x10
   14002d13e:	je     0x14002d16c
   14002d140:	sub    ecx,0x10
   14002d143:	je     0x14002d168
   14002d145:	sub    ecx,0x10
   14002d148:	je     0x14002d163
   14002d14a:	sub    ecx,0x10
   14002d14d:	je     0x14002d15e
   14002d14f:	cmp    ecx,0x40
   14002d152:	jne    0x14002d0df
   14002d154:	cmp    r15d,edx
   14002d157:	mov    ecx,edi
   14002d159:	sete   cl
   14002d15c:	jmp    0x14002d16e
   14002d15e:	mov    ecx,r8d
   14002d161:	jmp    0x14002d16e
   14002d163:	mov    ecx,r12d
   14002d166:	jmp    0x14002d16e
   14002d168:	mov    ecx,ebp
   14002d16a:	jmp    0x14002d16e
   14002d16c:	mov    ecx,edi
   14002d16e:	mov    eax,esi
   14002d170:	mov    edx,0x700
   14002d175:	mov    DWORD PTR [rsp+0x44],ecx
   14002d179:	and    eax,edx
   14002d17b:	je     0x14002d1c3
   14002d17d:	cmp    eax,0x100
   14002d182:	je     0x14002d1bc
   14002d184:	cmp    eax,0x200
   14002d189:	je     0x14002d1b5
   14002d18b:	cmp    eax,0x300
   14002d190:	je     0x14002d1b0
   14002d192:	cmp    eax,0x400
   14002d197:	je     0x14002d1c3
   14002d199:	cmp    eax,0x500
   14002d19e:	je     0x14002d1c6
   14002d1a0:	cmp    eax,0x600
   14002d1a5:	je     0x14002d1b5
   14002d1a7:	cmp    eax,edx
   14002d1a9:	je     0x14002d1c6
   14002d1ab:	jmp    0x14002d0df
   14002d1b0:	mov    ebp,r12d
   14002d1b3:	jmp    0x14002d1c6
   14002d1b5:	mov    ebp,0x5
   14002d1ba:	jmp    0x14002d1c6
   14002d1bc:	mov    ebp,0x4
   14002d1c1:	jmp    0x14002d1c6
   14002d1c3:	mov    ebp,r8d
   14002d1c6:	bt     esi,0x8
   14002d1ca:	mov    r13d,0x80
   14002d1d0:	mov    DWORD PTR [rsp+0x4c],r13d
   14002d1d5:	jae    0x14002d1f5
   14002d1d7:	mov    al,BYTE PTR [rip+0x3cdab]        # 0x140069f88
   14002d1dd:	not    al
   14002d1df:	and    al,BYTE PTR [rsp+0xe8]
   14002d1e6:	test   al,0x80
   14002d1e8:	lea    eax,[r13-0x7f]
   14002d1ec:	cmove  r13d,eax
   14002d1f0:	mov    DWORD PTR [rsp+0x4c],r13d
   14002d1f5:	test   sil,0x40
   14002d1f9:	je     0x14002d211
   14002d1fb:	bts    r13d,0x1a
   14002d200:	bts    r15d,0x10
   14002d205:	or     ecx,0x4
   14002d208:	mov    DWORD PTR [rsp+0x4c],r13d
   14002d20d:	mov    DWORD PTR [rsp+0x44],ecx
   14002d211:	bt     esi,0xc
   14002d215:	jae    0x14002d221
   14002d217:	bts    r13d,0x8
   14002d21c:	mov    DWORD PTR [rsp+0x4c],r13d
   14002d221:	test   sil,0x20
   14002d225:	je     0x14002d22e
   14002d227:	bts    r13d,0x1b
   14002d22c:	jmp    0x14002d239
   14002d22e:	test   sil,0x10
   14002d232:	je     0x14002d23e
   14002d234:	bts    r13d,0x1c
   14002d239:	mov    DWORD PTR [rsp+0x4c],r13d
   14002d23e:	call   0x14002dd20
   14002d243:	mov    DWORD PTR [rbx],eax
   14002d245:	cmp    eax,0xffffffff
   14002d248:	jne    0x14002d26b
   14002d24a:	call   0x14002b414
   14002d24f:	mov    DWORD PTR [rax],edi
   14002d251:	or     DWORD PTR [rbx],0xffffffff
   14002d254:	call   0x14002b3f4
   14002d259:	mov    DWORD PTR [rax],0x18
   14002d25f:	call   0x14002b3f4
   14002d264:	mov    eax,DWORD PTR [rax]
   14002d266:	jmp    0x14002d80c
   14002d26b:	mov    rax,QWORD PTR [rsp+0xc0]
   14002d273:	mov    r8d,DWORD PTR [rsp+0x44]
   14002d278:	mov    rcx,QWORD PTR [rsp+0xd0]
   14002d280:	mov    QWORD PTR [rsp+0x30],rdi
   14002d285:	lea    r9,[rsp+0x60]
   14002d28a:	mov    edx,r15d
   14002d28d:	mov    DWORD PTR [rsp+0x28],r13d
   14002d292:	mov    DWORD PTR [rax],0x1
   14002d298:	mov    DWORD PTR [rsp+0x20],ebp
   14002d29c:	call   QWORD PTR [rip+0x1003e]        # 0x14003d2e0
   14002d2a2:	mov    QWORD PTR [rsp+0x58],rax
   14002d2a7:	cmp    rax,0xffffffffffffffff
   14002d2ab:	jne    0x14002d33d
   14002d2b1:	mov    ecx,0xc0000000
   14002d2b6:	mov    eax,r15d
   14002d2b9:	and    eax,ecx
   14002d2bb:	cmp    eax,ecx
   14002d2bd:	jne    0x14002d302
   14002d2bf:	mov    eax,0x1
   14002d2c4:	test   al,sil
   14002d2c7:	je     0x14002d302
   14002d2c9:	mov    r8d,DWORD PTR [rsp+0x44]
   14002d2ce:	mov    rcx,QWORD PTR [rsp+0xd0]
   14002d2d6:	mov    QWORD PTR [rsp+0x30],rdi
   14002d2db:	btr    r15d,0x1f
   14002d2e0:	lea    r9,[rsp+0x60]
   14002d2e5:	mov    DWORD PTR [rsp+0x28],r13d
   14002d2ea:	mov    edx,r15d
   14002d2ed:	mov    DWORD PTR [rsp+0x20],ebp
   14002d2f1:	call   QWORD PTR [rip+0xffe9]        # 0x14003d2e0
   14002d2f7:	mov    QWORD PTR [rsp+0x58],rax
   14002d2fc:	cmp    rax,0xffffffffffffffff
   14002d300:	jne    0x14002d33d
   14002d302:	movsxd rcx,DWORD PTR [rbx]
   14002d305:	lea    r13,[rip+0x3d7f4]        # 0x14006ab00
   14002d30c:	mov    rax,rcx
   14002d30f:	and    ecx,0x1f
   14002d312:	sar    rax,0x5
   14002d316:	imul   rcx,rcx,0x58
   14002d31a:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002d31f:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002d324:	call   QWORD PTR [rip+0x1000e]        # 0x14003d338
   14002d32a:	mov    ecx,eax
   14002d32c:	call   0x14002b434
   14002d331:	call   0x14002b3f4
   14002d336:	mov    edi,DWORD PTR [rax]
   14002d338:	jmp    0x14002d80a
   14002d33d:	mov    rcx,rax
   14002d340:	call   QWORD PTR [rip+0xfde2]        # 0x14003d128
   14002d346:	cmp    eax,edi
   14002d348:	jne    0x14002d397
   14002d34a:	movsxd rcx,DWORD PTR [rbx]
   14002d34d:	lea    r13,[rip+0x3d7ac]        # 0x14006ab00
   14002d354:	mov    rax,rcx
   14002d357:	and    ecx,0x1f
   14002d35a:	sar    rax,0x5
   14002d35e:	imul   rcx,rcx,0x58
   14002d362:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002d367:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002d36c:	call   QWORD PTR [rip+0xffc6]        # 0x14003d338
   14002d372:	mov    ecx,eax
   14002d374:	mov    ebx,eax
   14002d376:	call   0x14002b434
   14002d37b:	mov    rcx,QWORD PTR [rsp+0x58]
   14002d380:	call   QWORD PTR [rip+0xfcf2]        # 0x14003d078
   14002d386:	cmp    ebx,edi
   14002d388:	jne    0x14002d331
   14002d38a:	call   0x14002b3f4
   14002d38f:	mov    DWORD PTR [rax],0xd
   14002d395:	jmp    0x14002d331
   14002d397:	cmp    eax,r12d
   14002d39a:	jne    0x14002d3a2
   14002d39c:	or     r14b,0x40
   14002d3a0:	jmp    0x14002d3ab
   14002d3a2:	cmp    eax,0x3
   14002d3a5:	jne    0x14002d3ab
   14002d3a7:	or     r14b,0x8
   14002d3ab:	mov    rdx,QWORD PTR [rsp+0x58]
   14002d3b0:	mov    ecx,DWORD PTR [rbx]
   14002d3b2:	call   0x14002da70
   14002d3b7:	movsxd rcx,DWORD PTR [rbx]
   14002d3ba:	lea    r13,[rip+0x3d73f]        # 0x14006ab00
   14002d3c1:	mov    rax,rcx
   14002d3c4:	and    ecx,0x1f
   14002d3c7:	mov    edx,0x1
   14002d3cc:	sar    rax,0x5
   14002d3d0:	or     r14b,dl
   14002d3d3:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002d3d8:	imul   rcx,rcx,0x58
   14002d3dc:	mov    BYTE PTR [rax+rcx*1+0x8],r14b
   14002d3e1:	movsxd rcx,DWORD PTR [rbx]
   14002d3e4:	mov    rax,rcx
   14002d3e7:	and    ecx,0x1f
   14002d3ea:	sar    rax,0x5
   14002d3ee:	imul   rcx,rcx,0x58
   14002d3f2:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002d3f7:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   14002d3fc:	mov    al,r14b
   14002d3ff:	and    al,0x48
   14002d401:	mov    BYTE PTR [rsp+0x48],al
   14002d405:	jne    0x14002d492
   14002d40b:	test   r14b,r14b
   14002d40e:	jns    0x14002d6d7
   14002d414:	test   r12b,sil
   14002d417:	je     0x14002d492
   14002d419:	mov    ecx,DWORD PTR [rbx]
   14002d41b:	mov    r8d,r12d
   14002d41e:	or     edx,0xffffffff
   14002d421:	call   0x140035a90
   14002d426:	mov    DWORD PTR [rsp+0x40],eax
   14002d42a:	cmp    eax,0xffffffff
   14002d42d:	jne    0x14002d448
   14002d42f:	call   0x14002b414
   14002d434:	cmp    DWORD PTR [rax],0x83
   14002d43a:	je     0x14002d48d
   14002d43c:	mov    ecx,DWORD PTR [rbx]
   14002d43e:	call   0x1400358bc
   14002d443:	jmp    0x14002d331
   14002d448:	mov    ecx,DWORD PTR [rbx]
   14002d44a:	lea    rdx,[rsp+0x50]
   14002d44f:	mov    r8d,0x1
   14002d455:	mov    WORD PTR [rsp+0x50],di
   14002d45a:	call   0x14003513c
   14002d45f:	cmp    eax,edi
   14002d461:	jne    0x14002d47c
   14002d463:	cmp    WORD PTR [rsp+0x50],0x1a
   14002d469:	jne    0x14002d47c
   14002d46b:	movsxd rdx,DWORD PTR [rsp+0x40]
   14002d470:	mov    ecx,DWORD PTR [rbx]
   14002d472:	call   0x140034fa4
   14002d477:	cmp    eax,0xffffffff
   14002d47a:	je     0x14002d43c
   14002d47c:	mov    ecx,DWORD PTR [rbx]
   14002d47e:	xor    r8d,r8d
   14002d481:	xor    edx,edx
   14002d483:	call   0x140035a90
   14002d488:	cmp    eax,0xffffffff
   14002d48b:	je     0x14002d43c
   14002d48d:	mov    edx,0x1
   14002d492:	test   r14b,r14b
   14002d495:	jns    0x14002d6d7
   14002d49b:	mov    ecx,0x74000
   14002d4a0:	test   ecx,esi
   14002d4a2:	jne    0x14002d4b4
   14002d4a4:	mov    eax,DWORD PTR [rsp+0x54]
   14002d4a8:	and    eax,ecx
   14002d4aa:	jne    0x14002d4b2
   14002d4ac:	bts    esi,0xe
   14002d4b0:	jmp    0x14002d4b4
   14002d4b2:	or     esi,eax
   14002d4b4:	mov    eax,esi
   14002d4b6:	and    eax,ecx
   14002d4b8:	cmp    eax,0x4000
   14002d4bd:	je     0x14002d509
   14002d4bf:	cmp    eax,0x10000
   14002d4c4:	je     0x14002d4f2
   14002d4c6:	cmp    eax,0x14000
   14002d4cb:	je     0x14002d4f2
   14002d4cd:	cmp    eax,0x20000
   14002d4d2:	je     0x14002d4ff
   14002d4d4:	cmp    eax,0x24000
   14002d4d9:	je     0x14002d4ff
   14002d4db:	cmp    eax,0x40000
   14002d4e0:	je     0x14002d4e9
   14002d4e2:	cmp    eax,0x44000
   14002d4e7:	jne    0x14002d511
   14002d4e9:	mov    BYTE PTR [rsp+0xd8],dl
   14002d4f0:	jmp    0x14002d511
   14002d4f2:	mov    ecx,0x301
   14002d4f7:	mov    eax,esi
   14002d4f9:	and    eax,ecx
   14002d4fb:	cmp    eax,ecx
   14002d4fd:	jne    0x14002d511
   14002d4ff:	mov    BYTE PTR [rsp+0xd8],r12b
   14002d507:	jmp    0x14002d511
   14002d509:	mov    BYTE PTR [rsp+0xd8],dil
   14002d511:	test   esi,0x70000
   14002d517:	je     0x14002d6d7
   14002d51d:	mov    DWORD PTR [rsp+0x40],edi
   14002d521:	test   r14b,0x40
   14002d525:	jne    0x14002d6d7
   14002d52b:	mov    eax,r15d
   14002d52e:	and    eax,0xc0000000
   14002d533:	cmp    eax,0x40000000
   14002d538:	je     0x14002d662
   14002d53e:	cmp    eax,0x80000000
   14002d543:	je     0x14002d5c1
   14002d545:	cmp    eax,0xc0000000
   14002d54a:	jne    0x14002d6d7
   14002d550:	cmp    ebp,edi
   14002d552:	jbe    0x14002d6d7
   14002d558:	cmp    ebp,r12d
   14002d55b:	jbe    0x14002d56b
   14002d55d:	cmp    ebp,0x4
   14002d560:	jbe    0x14002d59a
   14002d562:	cmp    ebp,0x5
   14002d565:	jne    0x14002d6d7
   14002d56b:	movsx  ecx,BYTE PTR [rsp+0xd8]
   14002d573:	mov    r8d,0x1
   14002d579:	mov    ebp,edi
   14002d57b:	sub    ecx,r8d
   14002d57e:	je     0x14002d6a4
   14002d584:	cmp    ecx,r8d
   14002d587:	jne    0x14002d6dd
   14002d58d:	mov    DWORD PTR [rsp+0x40],0xfeff
   14002d595:	jmp    0x14002d6b2
   14002d59a:	mov    ecx,DWORD PTR [rbx]
   14002d59c:	mov    r8d,r12d
   14002d59f:	xor    edx,edx
   14002d5a1:	call   0x140034dd4
   14002d5a6:	cmp    rax,rdi
   14002d5a9:	je     0x14002d56b
   14002d5ab:	mov    ecx,DWORD PTR [rbx]
   14002d5ad:	xor    r8d,r8d
   14002d5b0:	xor    edx,edx
   14002d5b2:	call   0x140034dd4
   14002d5b7:	cmp    rax,0xffffffffffffffff
   14002d5bb:	je     0x14002d43c
   14002d5c1:	mov    ecx,DWORD PTR [rbx]
   14002d5c3:	lea    rdx,[rsp+0x40]
   14002d5c8:	mov    r8d,0x3
   14002d5ce:	call   0x14003513c
   14002d5d3:	cmp    eax,0xffffffff
   14002d5d6:	je     0x14002d43c
   14002d5dc:	cmp    eax,r12d
   14002d5df:	je     0x14002d601
   14002d5e1:	cmp    eax,0x3
   14002d5e4:	jne    0x14002d651
   14002d5e6:	cmp    DWORD PTR [rsp+0x40],0xbfbbef
   14002d5ee:	jne    0x14002d601
   14002d5f0:	lea    r8d,[rax-0x2]
   14002d5f4:	mov    BYTE PTR [rsp+0xd8],r8b
   14002d5fc:	jmp    0x14002d6dd
   14002d601:	movzx  eax,WORD PTR [rsp+0x40]
   14002d606:	cmp    eax,0xfffe
   14002d60b:	jne    0x14002d627
   14002d60d:	mov    ecx,DWORD PTR [rbx]
   14002d60f:	call   0x1400358bc
   14002d614:	call   0x14002b3f4
   14002d619:	mov    ebx,0x16
   14002d61e:	mov    DWORD PTR [rax],ebx
   14002d620:	mov    edi,ebx
   14002d622:	jmp    0x14002d80a
   14002d627:	cmp    eax,0xfeff
   14002d62c:	jne    0x14002d651
   14002d62e:	mov    ecx,DWORD PTR [rbx]
   14002d630:	xor    r8d,r8d
   14002d633:	mov    edx,r12d
   14002d636:	call   0x140035a90
   14002d63b:	cmp    eax,0xffffffff
   14002d63e:	je     0x14002d43c
   14002d644:	mov    BYTE PTR [rsp+0xd8],r12b
   14002d64c:	jmp    0x14002d6d7
   14002d651:	mov    ecx,DWORD PTR [rbx]
   14002d653:	xor    r8d,r8d
   14002d656:	xor    edx,edx
   14002d658:	call   0x140035a90
   14002d65d:	cmp    eax,0xffffffff
   14002d660:	jmp    0x14002d69d
   14002d662:	cmp    ebp,edi
   14002d664:	jbe    0x14002d6d7
   14002d666:	cmp    ebp,r12d
   14002d669:	jbe    0x14002d56b
   14002d66f:	cmp    ebp,0x4
   14002d672:	ja     0x14002d562
   14002d678:	mov    ecx,DWORD PTR [rbx]
   14002d67a:	mov    r8d,r12d
   14002d67d:	xor    edx,edx
   14002d67f:	call   0x140034dd4
   14002d684:	cmp    rax,rdi
   14002d687:	je     0x14002d56b
   14002d68d:	mov    ecx,DWORD PTR [rbx]
   14002d68f:	xor    r8d,r8d
   14002d692:	xor    edx,edx
   14002d694:	call   0x140034dd4
   14002d699:	cmp    rax,0xffffffffffffffff
   14002d69d:	jne    0x14002d6d7
   14002d69f:	jmp    0x14002d43c
   14002d6a4:	mov    DWORD PTR [rsp+0x40],0xbfbbef
   14002d6ac:	mov    r12d,0x3
   14002d6b2:	mov    ecx,DWORD PTR [rbx]
   14002d6b4:	movsxd rax,ebp
   14002d6b7:	mov    r8d,r12d
   14002d6ba:	lea    rdx,[rsp+rax*1+0x40]
   14002d6bf:	sub    r8d,ebp
   14002d6c2:	call   0x14002f798
   14002d6c7:	cmp    eax,0xffffffff
   14002d6ca:	je     0x14002d43c
   14002d6d0:	add    ebp,eax
   14002d6d2:	cmp    r12d,ebp
   14002d6d5:	jg     0x14002d6b2
   14002d6d7:	mov    r8d,0x1
   14002d6dd:	movsxd rcx,DWORD PTR [rbx]
   14002d6e0:	mov    bpl,BYTE PTR [rsp+0xd8]
   14002d6e8:	mov    rax,rcx
   14002d6eb:	and    ecx,0x1f
   14002d6ee:	and    bpl,0x7f
   14002d6f2:	sar    rax,0x5
   14002d6f6:	imul   rcx,rcx,0x58
   14002d6fa:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002d6ff:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   14002d704:	or     BYTE PTR [rax+rcx*1+0x38],bpl
   14002d709:	movsxd rdx,DWORD PTR [rbx]
   14002d70c:	mov    rax,rdx
   14002d70f:	and    edx,0x1f
   14002d712:	sar    rax,0x5
   14002d716:	imul   rdx,rdx,0x58
   14002d71a:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
   14002d71f:	mov    eax,esi
   14002d721:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   14002d726:	shr    eax,0x10
   14002d729:	shl    al,0x7
   14002d72c:	or     BYTE PTR [rcx+rdx*1+0x38],al
   14002d730:	cmp    BYTE PTR [rsp+0x48],dil
   14002d735:	jne    0x14002d758
   14002d737:	test   sil,0x8
   14002d73b:	je     0x14002d758
   14002d73d:	movsxd rcx,DWORD PTR [rbx]
   14002d740:	mov    rax,rcx
   14002d743:	and    ecx,0x1f
   14002d746:	sar    rax,0x5
   14002d74a:	imul   rcx,rcx,0x58
   14002d74e:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002d753:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   14002d758:	mov    eax,r15d
   14002d75b:	and    eax,0xc0000000
   14002d760:	cmp    eax,0xc0000000
   14002d765:	jne    0x14002d80a
   14002d76b:	test   r8b,sil
   14002d76e:	je     0x14002d80a
   14002d774:	mov    rcx,QWORD PTR [rsp+0x58]
   14002d779:	call   QWORD PTR [rip+0xf8f9]        # 0x14003d078
   14002d77f:	mov    eax,DWORD PTR [rsp+0x4c]
   14002d783:	mov    r8d,DWORD PTR [rsp+0x44]
   14002d788:	mov    rcx,QWORD PTR [rsp+0xd0]
   14002d790:	mov    QWORD PTR [rsp+0x30],rdi
   14002d795:	mov    DWORD PTR [rsp+0x28],eax
   14002d799:	btr    r15d,0x1f
   14002d79e:	lea    r9,[rsp+0x60]
   14002d7a3:	mov    DWORD PTR [rsp+0x20],0x3
   14002d7ab:	mov    edx,r15d
   14002d7ae:	call   QWORD PTR [rip+0xfb2c]        # 0x14003d2e0
   14002d7b4:	cmp    rax,0xffffffffffffffff
   14002d7b8:	jne    0x14002d7f0
   14002d7ba:	call   QWORD PTR [rip+0xfb78]        # 0x14003d338
   14002d7c0:	mov    ecx,eax
   14002d7c2:	call   0x14002b434
   14002d7c7:	movsxd r11,DWORD PTR [rbx]
   14002d7ca:	mov    rax,r11
   14002d7cd:	and    r11d,0x1f
   14002d7d1:	sar    rax,0x5
   14002d7d5:	imul   r11,r11,0x58
   14002d7d9:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14002d7de:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   14002d7e4:	mov    ecx,DWORD PTR [rbx]
   14002d7e6:	call   0x14002db20
   14002d7eb:	jmp    0x14002d331
   14002d7f0:	movsxd rdx,DWORD PTR [rbx]
   14002d7f3:	mov    rcx,rdx
   14002d7f6:	and    edx,0x1f
   14002d7f9:	sar    rcx,0x5
   14002d7fd:	imul   rdx,rdx,0x58
   14002d801:	mov    rcx,QWORD PTR [r13+rcx*8+0x0]
   14002d806:	mov    QWORD PTR [rdx+rcx*1],rax
   14002d80a:	mov    eax,edi
   14002d80c:	mov    rbx,QWORD PTR [rsp+0xc8]
   14002d814:	add    rsp,0x80
   14002d81b:	pop    r15
   14002d81d:	pop    r14
   14002d81f:	pop    r13
   14002d821:	pop    r12
   14002d823:	pop    rdi
   14002d824:	pop    rsi
   14002d825:	pop    rbp
   14002d826:	ret    
   14002d827:	int3   
   14002d828:	mov    rax,rsp
   14002d82b:	mov    DWORD PTR [rax+0x10],edx
   14002d82e:	mov    QWORD PTR [rax+0x18],r8
   14002d832:	mov    QWORD PTR [rax+0x20],r9
   14002d836:	push   rsi
   14002d837:	push   rdi
   14002d838:	sub    rsp,0x58
   14002d83c:	or     DWORD PTR [rax-0x28],0xffffffff
   14002d840:	and    DWORD PTR [rax-0x24],0x0
   14002d844:	xor    r8d,r8d
   14002d847:	test   rcx,rcx
   14002d84a:	setne  r8b
   14002d84e:	test   r8d,r8d
   14002d851:	jne    0x14002d87b
   14002d853:	call   0x14002b3f4
   14002d858:	mov    DWORD PTR [rax],0x16
   14002d85e:	and    QWORD PTR [rsp+0x20],0x0
   14002d864:	xor    r9d,r9d
   14002d867:	xor    r8d,r8d
   14002d86a:	xor    edx,edx
   14002d86c:	xor    ecx,ecx
   14002d86e:	call   0x140031aac
   14002d873:	or     eax,0xffffffff
   14002d876:	jmp    0x14002d90e
   14002d87b:	lea    rax,[rsp+0x80]
   14002d883:	add    rax,0x8
   14002d887:	mov    r8d,DWORD PTR [rax-0x8]
   14002d88b:	and    DWORD PTR [rsp+0x30],0x0
   14002d890:	mov    DWORD PTR [rsp+0x28],r8d
   14002d895:	mov    DWORD PTR [rsp+0x20],0x40
   14002d89d:	mov    r9d,edx
   14002d8a0:	mov    r8,rcx
   14002d8a3:	lea    rdx,[rsp+0x40]
   14002d8a8:	lea    rcx,[rsp+0x44]
   14002d8ad:	call   0x14002d028
   14002d8b2:	mov    esi,eax
   14002d8b4:	mov    DWORD PTR [rsp+0x48],eax
   14002d8b8:	cmp    DWORD PTR [rsp+0x44],0x0
   14002d8bd:	je     0x14002d8f8
   14002d8bf:	test   eax,eax
   14002d8c1:	je     0x14002d8eb
   14002d8c3:	movsxd rdi,DWORD PTR [rsp+0x40]
   14002d8c8:	mov    rcx,rdi
   14002d8cb:	mov    rax,rdi
   14002d8ce:	sar    rax,0x5
   14002d8d2:	lea    r8,[rip+0x3d227]        # 0x14006ab00
   14002d8d9:	and    ecx,0x1f
   14002d8dc:	imul   rcx,rcx,0x58
   14002d8e0:	mov    rax,QWORD PTR [r8+rax*8]
   14002d8e4:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002d8e9:	jmp    0x14002d8ef
   14002d8eb:	mov    edi,DWORD PTR [rsp+0x40]
   14002d8ef:	mov    ecx,edi
   14002d8f1:	call   0x14002dcf8
   14002d8f6:	jmp    0x14002d8fc
   14002d8f8:	mov    edi,DWORD PTR [rsp+0x40]
   14002d8fc:	test   esi,esi
   14002d8fe:	je     0x14002d90c
   14002d900:	call   0x14002b3f4
   14002d905:	mov    DWORD PTR [rax],esi
   14002d907:	or     eax,0xffffffff
   14002d90a:	jmp    0x14002d90e
   14002d90c:	mov    eax,edi
   14002d90e:	add    rsp,0x58
   14002d912:	pop    rdi
   14002d913:	pop    rsi
   14002d914:	ret    
   14002d915:	int3   
   14002d916:	int3   
   14002d917:	int3   
   14002d918:	xor    r9d,r9d
   14002d91b:	cmp    r8,r9
   14002d91e:	jne    0x14002d939
   14002d920:	xor    eax,eax
   14002d922:	ret    
   14002d923:	movzx  eax,WORD PTR [rcx]
   14002d926:	cmp    ax,r9w
   14002d92a:	je     0x14002d93f
   14002d92c:	cmp    ax,WORD PTR [rdx]
   14002d92f:	jne    0x14002d93f
   14002d931:	add    rcx,0x2
   14002d935:	add    rdx,0x2
   14002d939:	sub    r8,0x1
   14002d93d:	jne    0x14002d923
   14002d93f:	movzx  eax,WORD PTR [rcx]
   14002d942:	movzx  ecx,WORD PTR [rdx]
   14002d945:	sub    eax,ecx
   14002d947:	ret    
   14002d948:	mov    QWORD PTR [rsp+0x8],rbx
   14002d94d:	push   rdi
   14002d94e:	sub    rsp,0x30
   14002d952:	mov    edi,edx
   14002d954:	mov    rbx,rcx
   14002d957:	test   rcx,rcx
   14002d95a:	jne    0x14002d987
   14002d95c:	call   0x14002b414
   14002d961:	and    DWORD PTR [rax],ebx
   14002d963:	call   0x14002b3f4
   14002d968:	and    QWORD PTR [rsp+0x20],rbx
   14002d96d:	xor    r9d,r9d
   14002d970:	xor    r8d,r8d
   14002d973:	xor    edx,edx
   14002d975:	xor    ecx,ecx
   14002d977:	mov    DWORD PTR [rax],0x16
   14002d97d:	call   0x140031aac
   14002d982:	or     eax,0xffffffff
   14002d985:	jmp    0x14002d9bf
   14002d987:	call   QWORD PTR [rip+0xf6cb]        # 0x14003d058
   14002d98d:	cmp    eax,0xffffffff
   14002d990:	jne    0x14002d9a1
   14002d992:	call   QWORD PTR [rip+0xf9a0]        # 0x14003d338
   14002d998:	mov    ecx,eax
   14002d99a:	call   0x14002b434
   14002d99f:	jmp    0x14002d982
   14002d9a1:	test   dil,dil
   14002d9a4:	jns    0x14002d9ab
   14002d9a6:	and    eax,0xfffffffe
   14002d9a9:	jmp    0x14002d9ae
   14002d9ab:	or     eax,0x1
   14002d9ae:	mov    edx,eax
   14002d9b0:	mov    rcx,rbx
   14002d9b3:	call   QWORD PTR [rip+0xf6a7]        # 0x14003d060
   14002d9b9:	test   eax,eax
   14002d9bb:	je     0x14002d992
   14002d9bd:	xor    eax,eax
   14002d9bf:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d9c4:	add    rsp,0x30
   14002d9c8:	pop    rdi
   14002d9c9:	ret    
   14002d9ca:	int3   
   14002d9cb:	int3   
   14002d9cc:	rex push rbx
   14002d9ce:	sub    rsp,0x30
   14002d9d2:	mov    ebx,edx
   14002d9d4:	test   rcx,rcx
   14002d9d7:	jne    0x14002da06
   14002d9d9:	call   0x14002b414
   14002d9de:	and    DWORD PTR [rax],0x0
   14002d9e1:	call   0x14002b3f4
   14002d9e6:	and    QWORD PTR [rsp+0x20],0x0
   14002d9ec:	mov    ebx,0x16
   14002d9f1:	xor    r9d,r9d
   14002d9f4:	xor    r8d,r8d
   14002d9f7:	xor    edx,edx
   14002d9f9:	xor    ecx,ecx
   14002d9fb:	mov    DWORD PTR [rax],ebx
   14002d9fd:	call   0x140031aac
   14002da02:	mov    eax,ebx
   14002da04:	jmp    0x14002da56
   14002da06:	test   edx,0xfffffff9
   14002da0c:	jne    0x14002d9d9
   14002da0e:	call   QWORD PTR [rip+0xf644]        # 0x14003d058
   14002da14:	cmp    eax,0xffffffff
   14002da17:	jne    0x14002da2f
   14002da19:	call   QWORD PTR [rip+0xf919]        # 0x14003d338
   14002da1f:	mov    ecx,eax
   14002da21:	call   0x14002b434
   14002da26:	call   0x14002b3f4
   14002da2b:	mov    eax,DWORD PTR [rax]
   14002da2d:	jmp    0x14002da56
   14002da2f:	test   al,0x10
   14002da31:	jne    0x14002da54
   14002da33:	test   al,0x1
   14002da35:	je     0x14002da54
   14002da37:	test   bl,0x2
   14002da3a:	je     0x14002da54
   14002da3c:	call   0x14002b414
   14002da41:	mov    DWORD PTR [rax],0x5
   14002da47:	call   0x14002b3f4
   14002da4c:	mov    DWORD PTR [rax],0xd
   14002da52:	jmp    0x14002da26
   14002da54:	xor    eax,eax
   14002da56:	add    rsp,0x30
   14002da5a:	pop    rbx
   14002da5b:	ret    
   14002da5c:	sub    rsp,0x28
   14002da60:	call   0x14002d9cc
   14002da65:	neg    eax
   14002da67:	sbb    eax,eax
   14002da69:	add    rsp,0x28
   14002da6d:	ret    
   14002da6e:	int3   
   14002da6f:	int3   
   14002da70:	mov    QWORD PTR [rsp+0x8],rbx
   14002da75:	mov    QWORD PTR [rsp+0x10],rbp
   14002da7a:	mov    QWORD PTR [rsp+0x18],rsi
   14002da7f:	push   rdi
   14002da80:	sub    rsp,0x20
   14002da84:	mov    rbx,rdx
   14002da87:	test   ecx,ecx
   14002da89:	js     0x14002daf4
   14002da8b:	cmp    ecx,DWORD PTR [rip+0x3d04f]        # 0x14006aae0
   14002da91:	jae    0x14002daf4
   14002da93:	movsxd rdi,ecx
   14002da96:	lea    rbp,[rip+0x3d063]        # 0x14006ab00
   14002da9d:	mov    rsi,rdi
   14002daa0:	and    edi,0x1f
   14002daa3:	sar    rsi,0x5
   14002daa7:	imul   rdi,rdi,0x58
   14002daab:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14002dab0:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   14002dab5:	jne    0x14002daf4
   14002dab7:	cmp    DWORD PTR [rip+0x38f72],0x1        # 0x140066a30
   14002dabe:	jne    0x14002dae7
   14002dac0:	test   ecx,ecx
   14002dac2:	je     0x14002dadc
   14002dac4:	sub    ecx,0x1
   14002dac7:	je     0x14002dad5
   14002dac9:	cmp    ecx,0x1
   14002dacc:	jne    0x14002dae7
   14002dace:	mov    ecx,0xfffffff4
   14002dad3:	jmp    0x14002dae1
   14002dad5:	mov    ecx,0xfffffff5
   14002dada:	jmp    0x14002dae1
   14002dadc:	mov    ecx,0xfffffff6
   14002dae1:	call   QWORD PTR [rip+0xf859]        # 0x14003d340
   14002dae7:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14002daec:	mov    QWORD PTR [rdi+rax*1],rbx
   14002daf0:	xor    eax,eax
   14002daf2:	jmp    0x14002db0a
   14002daf4:	call   0x14002b3f4
   14002daf9:	mov    DWORD PTR [rax],0x9
   14002daff:	call   0x14002b414
   14002db04:	and    DWORD PTR [rax],0x0
   14002db07:	or     eax,0xffffffff
   14002db0a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002db0f:	mov    rbp,QWORD PTR [rsp+0x38]
   14002db14:	mov    rsi,QWORD PTR [rsp+0x40]
   14002db19:	add    rsp,0x20
   14002db1d:	pop    rdi
   14002db1e:	ret    
   14002db1f:	int3   
   14002db20:	mov    QWORD PTR [rsp+0x8],rbx
   14002db25:	mov    QWORD PTR [rsp+0x10],rbp
   14002db2a:	push   rdi
   14002db2b:	sub    rsp,0x20
   14002db2f:	test   ecx,ecx
   14002db31:	js     0x14002dba6
   14002db33:	cmp    ecx,DWORD PTR [rip+0x3cfa7]        # 0x14006aae0
   14002db39:	jae    0x14002dba6
   14002db3b:	movsxd rbx,ecx
   14002db3e:	lea    rbp,[rip+0x3cfbb]        # 0x14006ab00
   14002db45:	mov    rdi,rbx
   14002db48:	and    ebx,0x1f
   14002db4b:	sar    rdi,0x5
   14002db4f:	imul   rbx,rbx,0x58
   14002db53:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14002db58:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002db5d:	je     0x14002dba6
   14002db5f:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14002db64:	je     0x14002dba6
   14002db66:	cmp    DWORD PTR [rip+0x38ec3],0x1        # 0x140066a30
   14002db6d:	jne    0x14002db98
   14002db6f:	test   ecx,ecx
   14002db71:	je     0x14002db8b
   14002db73:	sub    ecx,0x1
   14002db76:	je     0x14002db84
   14002db78:	cmp    ecx,0x1
   14002db7b:	jne    0x14002db98
   14002db7d:	mov    ecx,0xfffffff4
   14002db82:	jmp    0x14002db90
   14002db84:	mov    ecx,0xfffffff5
   14002db89:	jmp    0x14002db90
   14002db8b:	mov    ecx,0xfffffff6
   14002db90:	xor    edx,edx
   14002db92:	call   QWORD PTR [rip+0xf7a8]        # 0x14003d340
   14002db98:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14002db9d:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14002dba2:	xor    eax,eax
   14002dba4:	jmp    0x14002dbbc
   14002dba6:	call   0x14002b3f4
   14002dbab:	mov    DWORD PTR [rax],0x9
   14002dbb1:	call   0x14002b414
   14002dbb6:	and    DWORD PTR [rax],0x0
   14002dbb9:	or     eax,0xffffffff
   14002dbbc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dbc1:	mov    rbp,QWORD PTR [rsp+0x38]
   14002dbc6:	add    rsp,0x20
   14002dbca:	pop    rdi
   14002dbcb:	ret    
   14002dbcc:	sub    rsp,0x38
   14002dbd0:	cmp    ecx,0xfffffffe
   14002dbd3:	jne    0x14002dbea
   14002dbd5:	call   0x14002b414
   14002dbda:	and    DWORD PTR [rax],0x0
   14002dbdd:	call   0x14002b3f4
   14002dbe2:	mov    DWORD PTR [rax],0x9
   14002dbe8:	jmp    0x14002dc47
   14002dbea:	test   ecx,ecx
   14002dbec:	js     0x14002dc1f
   14002dbee:	cmp    ecx,DWORD PTR [rip+0x3ceec]        # 0x14006aae0
   14002dbf4:	jae    0x14002dc1f
   14002dbf6:	movsxd rdx,ecx
   14002dbf9:	lea    rcx,[rip+0x3cf00]        # 0x14006ab00
   14002dc00:	mov    rax,rdx
   14002dc03:	and    edx,0x1f
   14002dc06:	sar    rax,0x5
   14002dc0a:	imul   rdx,rdx,0x58
   14002dc0e:	mov    rax,QWORD PTR [rcx+rax*8]
   14002dc12:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14002dc17:	je     0x14002dc1f
   14002dc19:	mov    rax,QWORD PTR [rax+rdx*1]
   14002dc1d:	jmp    0x14002dc4b
   14002dc1f:	call   0x14002b414
   14002dc24:	and    DWORD PTR [rax],0x0
   14002dc27:	call   0x14002b3f4
   14002dc2c:	and    QWORD PTR [rsp+0x20],0x0
   14002dc32:	xor    r9d,r9d
   14002dc35:	xor    r8d,r8d
   14002dc38:	xor    edx,edx
   14002dc3a:	xor    ecx,ecx
   14002dc3c:	mov    DWORD PTR [rax],0x9
   14002dc42:	call   0x140031aac
   14002dc47:	or     rax,0xffffffffffffffff
   14002dc4b:	add    rsp,0x38
   14002dc4f:	ret    
   14002dc50:	mov    rax,rsp
   14002dc53:	mov    QWORD PTR [rax+0x8],rbx
   14002dc57:	mov    QWORD PTR [rax+0x10],rsi
   14002dc5b:	mov    QWORD PTR [rax+0x18],rdi
   14002dc5f:	mov    QWORD PTR [rax+0x20],r12
   14002dc63:	push   r13
   14002dc65:	sub    rsp,0x20
   14002dc69:	movsxd rbx,ecx
   14002dc6c:	mov    r12,rbx
   14002dc6f:	sar    r12,0x5
   14002dc73:	lea    r13,[rip+0x3ce86]        # 0x14006ab00
   14002dc7a:	and    ebx,0x1f
   14002dc7d:	imul   rbx,rbx,0x58
   14002dc81:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   14002dc86:	mov    edi,0x1
   14002dc8b:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14002dc90:	jne    0x14002dcc5
   14002dc92:	lea    ecx,[rdi+0x9]
   14002dc95:	call   0x14002fd94
   14002dc9a:	nop
   14002dc9b:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14002dca0:	jne    0x14002dcbb
   14002dca2:	lea    rcx,[rbx+rsi*1+0x10]
   14002dca7:	mov    edx,0xfa0
   14002dcac:	call   0x140035e80
   14002dcb1:	neg    eax
   14002dcb3:	sbb    edx,edx
   14002dcb5:	and    edi,edx
   14002dcb7:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14002dcbb:	mov    ecx,0xa
   14002dcc0:	call   0x14002fc94
   14002dcc5:	test   edi,edi
   14002dcc7:	je     0x14002dcd9
   14002dcc9:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14002dcce:	lea    rcx,[rcx+rbx*1+0x10]
   14002dcd3:	call   QWORD PTR [rip+0xf3ff]        # 0x14003d0d8
   14002dcd9:	mov    eax,edi
   14002dcdb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dce0:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dce5:	mov    rdi,QWORD PTR [rsp+0x40]
   14002dcea:	mov    r12,QWORD PTR [rsp+0x48]
   14002dcef:	add    rsp,0x20
   14002dcf3:	pop    r13
   14002dcf5:	ret    
   14002dcf6:	int3   
   14002dcf7:	int3   
   14002dcf8:	movsxd rdx,ecx
   14002dcfb:	lea    rcx,[rip+0x3cdfe]        # 0x14006ab00
   14002dd02:	mov    rax,rdx
   14002dd05:	and    edx,0x1f
   14002dd08:	sar    rax,0x5
   14002dd0c:	imul   rdx,rdx,0x58
   14002dd10:	mov    rax,QWORD PTR [rcx+rax*8]
   14002dd14:	lea    rcx,[rax+rdx*1+0x10]
   14002dd19:	rex.W jmp QWORD PTR [rip+0xf3a0]        # 0x14003d0c0
   14002dd20:	mov    QWORD PTR [rsp+0x8],rbx
   14002dd25:	mov    QWORD PTR [rsp+0x10],rdi
   14002dd2a:	mov    QWORD PTR [rsp+0x18],r12
   14002dd2f:	push   r13
   14002dd31:	push   r14
   14002dd33:	push   r15
   14002dd35:	sub    rsp,0x40
   14002dd39:	or     r12,0xffffffffffffffff
   14002dd3d:	mov    r13d,r12d
   14002dd40:	xor    r14d,r14d
   14002dd43:	lea    ecx,[r12+0xc]
   14002dd48:	call   0x14002fcac
   14002dd4d:	test   eax,eax
   14002dd4f:	jne    0x14002dd59
   14002dd51:	mov    eax,r12d
   14002dd54:	jmp    0x14002df22
   14002dd59:	mov    ecx,0xb
   14002dd5e:	call   0x14002fd94
   14002dd63:	nop
   14002dd64:	xor    edi,edi
   14002dd66:	mov    DWORD PTR [rsp+0x24],edi
   14002dd6a:	lea    rax,[rip+0x3cd8f]        # 0x14006ab00
   14002dd71:	cmp    edi,0x40
   14002dd74:	jge    0x14002df15
   14002dd7a:	movsxd r15,edi
   14002dd7d:	mov    rbx,QWORD PTR [rax+r15*8]
   14002dd81:	test   rbx,rbx
   14002dd84:	je     0x14002de8a
   14002dd8a:	mov    QWORD PTR [rsp+0x30],rbx
   14002dd8f:	mov    rax,QWORD PTR [rax+r15*8]
   14002dd93:	add    rax,0xb00
   14002dd99:	cmp    rbx,rax
   14002dd9c:	jae    0x14002de6f
   14002dda2:	test   BYTE PTR [rbx+0x8],0x1
   14002dda6:	jne    0x14002de56
   14002ddac:	cmp    DWORD PTR [rbx+0xc],0x0
   14002ddb0:	jne    0x14002dded
   14002ddb2:	mov    ecx,0xa
   14002ddb7:	call   0x14002fd94
   14002ddbc:	nop
   14002ddbd:	cmp    DWORD PTR [rbx+0xc],0x0
   14002ddc1:	jne    0x14002dde3
   14002ddc3:	lea    rcx,[rbx+0x10]
   14002ddc7:	mov    edx,0xfa0
   14002ddcc:	call   0x140035e80
   14002ddd1:	test   eax,eax
   14002ddd3:	jne    0x14002dde0
   14002ddd5:	lea    r14d,[rax+0x1]
   14002ddd9:	mov    DWORD PTR [rsp+0x28],r14d
   14002ddde:	jmp    0x14002dde3
   14002dde0:	inc    DWORD PTR [rbx+0xc]
   14002dde3:	mov    ecx,0xa
   14002dde8:	call   0x14002fc94
   14002dded:	test   r14d,r14d
   14002ddf0:	jne    0x14002de12
   14002ddf2:	lea    rcx,[rbx+0x10]
   14002ddf6:	call   QWORD PTR [rip+0xf2dc]        # 0x14003d0d8
   14002ddfc:	test   BYTE PTR [rbx+0x8],0x1
   14002de00:	je     0x14002de0e
   14002de02:	lea    rcx,[rbx+0x10]
   14002de06:	call   QWORD PTR [rip+0xf2b4]        # 0x14003d0c0
   14002de0c:	jmp    0x14002de56
   14002de0e:	or     r12,0xffffffffffffffff
   14002de12:	test   r14d,r14d
   14002de15:	jne    0x14002de56
   14002de17:	mov    BYTE PTR [rbx+0x8],0x1
   14002de1b:	mov    QWORD PTR [rbx],r12
   14002de1e:	lea    r8,[rip+0x3ccdb]        # 0x14006ab00
   14002de25:	sub    rbx,QWORD PTR [r8+r15*8]
   14002de29:	movabs rax,0x2e8ba2e8ba2e8ba3
   14002de33:	imul   rbx
   14002de36:	mov    r13,rdx
   14002de39:	sar    r13,0x4
   14002de3d:	mov    rax,r13
   14002de40:	shr    rax,0x3f
   14002de44:	add    r13,rax
   14002de47:	mov    eax,edi
   14002de49:	shl    eax,0x5
   14002de4c:	add    r13d,eax
   14002de4f:	mov    DWORD PTR [rsp+0x20],r13d
   14002de54:	jmp    0x14002de6f
   14002de56:	add    rbx,0x58
   14002de5a:	mov    QWORD PTR [rsp+0x30],rbx
   14002de5f:	or     r12,0xffffffffffffffff
   14002de63:	lea    rax,[rip+0x3cc96]        # 0x14006ab00
   14002de6a:	jmp    0x14002dd8f
   14002de6f:	cmp    r13d,r12d
   14002de72:	jne    0x14002df15
   14002de78:	inc    edi
   14002de7a:	mov    DWORD PTR [rsp+0x24],edi
   14002de7e:	lea    rax,[rip+0x3cc7b]        # 0x14006ab00
   14002de85:	jmp    0x14002dd71
   14002de8a:	mov    edx,0x58
   14002de8f:	lea    ecx,[rdx-0x38]
   14002de92:	call   0x140030134
   14002de97:	mov    QWORD PTR [rsp+0x30],rax
   14002de9c:	test   rax,rax
   14002de9f:	je     0x14002df15
   14002dea1:	movsxd rdx,edi
   14002dea4:	lea    r8,[rip+0x3cc55]        # 0x14006ab00
   14002deab:	mov    QWORD PTR [r8+rdx*8],rax
   14002deaf:	add    DWORD PTR [rip+0x3cc2a],0x20        # 0x14006aae0
   14002deb6:	mov    rcx,QWORD PTR [r8+rdx*8]
   14002deba:	add    rcx,0xb00
   14002dec1:	cmp    rax,rcx
   14002dec4:	jae    0x14002dee0
   14002dec6:	mov    BYTE PTR [rax+0x8],0x0
   14002deca:	mov    QWORD PTR [rax],r12
   14002decd:	mov    BYTE PTR [rax+0x9],0xa
   14002ded1:	and    DWORD PTR [rax+0xc],0x0
   14002ded5:	add    rax,0x58
   14002ded9:	mov    QWORD PTR [rsp+0x30],rax
   14002dede:	jmp    0x14002deb6
   14002dee0:	shl    edi,0x5
   14002dee3:	mov    DWORD PTR [rsp+0x20],edi
   14002dee7:	movsxd rcx,edi
   14002deea:	mov    rax,rcx
   14002deed:	sar    rax,0x5
   14002def1:	and    ecx,0x1f
   14002def4:	imul   rcx,rcx,0x58
   14002def8:	mov    rax,QWORD PTR [r8+rax*8]
   14002defc:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14002df01:	mov    ecx,edi
   14002df03:	call   0x14002dc50
   14002df08:	test   eax,eax
   14002df0a:	cmove  edi,r12d
   14002df0e:	mov    r13d,edi
   14002df11:	mov    DWORD PTR [rsp+0x20],edi
   14002df15:	mov    ecx,0xb
   14002df1a:	call   0x14002fc94
   14002df1f:	mov    eax,r13d
   14002df22:	mov    rbx,QWORD PTR [rsp+0x60]
   14002df27:	mov    rdi,QWORD PTR [rsp+0x68]
   14002df2c:	mov    r12,QWORD PTR [rsp+0x70]
   14002df31:	add    rsp,0x40
   14002df35:	pop    r15
   14002df37:	pop    r14
   14002df39:	pop    r13
   14002df3b:	ret    
   14002df3c:	sub    rsp,0x38
   14002df40:	test   rcx,rcx
   14002df43:	jne    0x14002df6a
   14002df45:	call   0x14002b3f4
   14002df4a:	and    QWORD PTR [rsp+0x20],0x0
   14002df50:	xor    r9d,r9d
   14002df53:	xor    r8d,r8d
   14002df56:	xor    edx,edx
   14002df58:	xor    ecx,ecx
   14002df5a:	mov    DWORD PTR [rax],0x16
   14002df60:	call   0x140031aac
   14002df65:	or     eax,0xffffffff
   14002df68:	jmp    0x14002df6d
   14002df6a:	mov    eax,DWORD PTR [rcx+0x1c]
   14002df6d:	add    rsp,0x38
   14002df71:	ret    
   14002df72:	int3   
   14002df73:	int3   
   14002df74:	rex push rbx
   14002df76:	sub    rsp,0x20
   14002df7a:	and    DWORD PTR [rsp+0x40],0x0
   14002df7f:	lea    r8,[rsp+0x40]
   14002df84:	call   0x140035eb0
   14002df89:	mov    rbx,rax
   14002df8c:	test   rax,rax
   14002df8f:	jne    0x14002dfac
   14002df91:	cmp    DWORD PTR [rsp+0x40],eax
   14002df95:	je     0x14002dfac
   14002df97:	call   0x14002b3f4
   14002df9c:	test   rax,rax
   14002df9f:	je     0x14002dfac
   14002dfa1:	call   0x14002b3f4
   14002dfa6:	mov    ecx,DWORD PTR [rsp+0x40]
   14002dfaa:	mov    DWORD PTR [rax],ecx
   14002dfac:	mov    rax,rbx
   14002dfaf:	add    rsp,0x20
   14002dfb3:	pop    rbx
   14002dfb4:	ret    
   14002dfb5:	int3   
   14002dfb6:	int3   
   14002dfb7:	int3   
   14002dfb8:	mov    QWORD PTR [rsp+0x8],rbx
   14002dfbd:	mov    QWORD PTR [rsp+0x10],rsi
   14002dfc2:	push   rdi
   14002dfc3:	sub    rsp,0x30
   14002dfc7:	mov    rbx,rcx
   14002dfca:	test   rcx,rcx
   14002dfcd:	je     0x14002e015
   14002dfcf:	call   0x140035dd0
   14002dfd4:	mov    rsi,rax
   14002dfd7:	lea    rcx,[rax+0x1]
   14002dfdb:	call   0x14002c04c
   14002dfe0:	mov    rdi,rax
   14002dfe3:	test   rax,rax
   14002dfe6:	je     0x14002e015
   14002dfe8:	lea    rdx,[rsi+0x1]
   14002dfec:	mov    r8,rbx
   14002dfef:	mov    rcx,rax
   14002dff2:	call   0x14003445c
   14002dff7:	test   eax,eax
   14002dff9:	je     0x14002e010
   14002dffb:	and    QWORD PTR [rsp+0x20],0x0
   14002e001:	xor    r9d,r9d
   14002e004:	xor    r8d,r8d
   14002e007:	xor    edx,edx
   14002e009:	xor    ecx,ecx
   14002e00b:	call   0x140031984
   14002e010:	mov    rax,rdi
   14002e013:	jmp    0x14002e017
   14002e015:	xor    eax,eax
   14002e017:	mov    rbx,QWORD PTR [rsp+0x40]
   14002e01c:	mov    rsi,QWORD PTR [rsp+0x48]
   14002e021:	add    rsp,0x30
   14002e025:	pop    rdi
   14002e026:	ret    
   14002e027:	int3   
   14002e028:	mov    QWORD PTR [rsp+0x10],rbp
   14002e02d:	push   rdi
   14002e02e:	sub    rsp,0x70
   14002e032:	movsxd rdi,ecx
   14002e035:	lea    rcx,[rsp+0x50]
   14002e03a:	call   0x14002b47c
   14002e03f:	cmp    edi,0x100
   14002e045:	jae    0x14002e0a9
   14002e047:	mov    rdx,QWORD PTR [rsp+0x50]
   14002e04c:	cmp    DWORD PTR [rdx+0x10c],0x1
   14002e053:	jle    0x14002e06d
   14002e055:	lea    r8,[rsp+0x50]
   14002e05a:	mov    edx,0x1
   14002e05f:	mov    ecx,edi
   14002e061:	call   0x140032c10
   14002e066:	mov    rdx,QWORD PTR [rsp+0x50]
   14002e06b:	jmp    0x14002e07b
   14002e06d:	mov    rax,QWORD PTR [rdx+0x140]
   14002e074:	movzx  eax,WORD PTR [rax+rdi*2]
   14002e078:	and    eax,0x1
   14002e07b:	test   eax,eax
   14002e07d:	je     0x14002e08f
   14002e07f:	mov    rax,QWORD PTR [rdx+0x148]
   14002e086:	movzx  eax,BYTE PTR [rax+rdi*1]
   14002e08a:	jmp    0x14002e177
   14002e08f:	cmp    BYTE PTR [rsp+0x68],0x0
   14002e094:	je     0x14002e0a2
   14002e096:	mov    rax,QWORD PTR [rsp+0x60]
   14002e09b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002e0a2:	mov    eax,edi
   14002e0a4:	jmp    0x14002e18a
   14002e0a9:	mov    rax,QWORD PTR [rsp+0x50]
   14002e0ae:	cmp    DWORD PTR [rax+0x10c],0x1
   14002e0b5:	jle    0x14002e0ed
   14002e0b7:	mov    ebp,edi
   14002e0b9:	lea    rdx,[rsp+0x50]
   14002e0be:	sar    ebp,0x8
   14002e0c1:	movzx  ecx,bpl
   14002e0c5:	call   0x140034d44
   14002e0ca:	test   eax,eax
   14002e0cc:	je     0x14002e0ed
   14002e0ce:	mov    BYTE PTR [rsp+0x80],bpl
   14002e0d6:	mov    BYTE PTR [rsp+0x81],dil
   14002e0de:	mov    BYTE PTR [rsp+0x82],0x0
   14002e0e6:	mov    edx,0x2
   14002e0eb:	jmp    0x14002e10d
   14002e0ed:	call   0x14002b3f4
   14002e0f2:	mov    edx,0x1
   14002e0f7:	mov    DWORD PTR [rax],0x2a
   14002e0fd:	mov    BYTE PTR [rsp+0x80],dil
   14002e105:	mov    BYTE PTR [rsp+0x81],0x0
   14002e10d:	mov    rcx,QWORD PTR [rsp+0x50]
   14002e112:	mov    DWORD PTR [rsp+0x40],0x1
   14002e11a:	lea    r9,[rsp+0x80]
   14002e122:	mov    eax,DWORD PTR [rcx+0x4]
   14002e125:	mov    r8d,0x100
   14002e12b:	mov    DWORD PTR [rsp+0x38],eax
   14002e12f:	lea    rax,[rsp+0x90]
   14002e137:	mov    DWORD PTR [rsp+0x30],0x3
   14002e13f:	mov    QWORD PTR [rsp+0x28],rax
   14002e144:	mov    DWORD PTR [rsp+0x20],edx
   14002e148:	mov    edx,DWORD PTR [rcx+0x14]
   14002e14b:	lea    rcx,[rsp+0x50]
   14002e150:	call   0x140034a10
   14002e155:	test   eax,eax
   14002e157:	je     0x14002e08f
   14002e15d:	cmp    eax,0x1
   14002e160:	movzx  eax,BYTE PTR [rsp+0x90]
   14002e168:	je     0x14002e177
   14002e16a:	movzx  ecx,BYTE PTR [rsp+0x91]
   14002e172:	shl    eax,0x8
   14002e175:	or     eax,ecx
   14002e177:	cmp    BYTE PTR [rsp+0x68],0x0
   14002e17c:	je     0x14002e18a
   14002e17e:	mov    rcx,QWORD PTR [rsp+0x60]
   14002e183:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002e18a:	mov    rbp,QWORD PTR [rsp+0x88]
   14002e192:	add    rsp,0x70
   14002e196:	pop    rdi
   14002e197:	ret    
   14002e198:	sub    rsp,0x28
   14002e19c:	cmp    DWORD PTR [rip+0x3c735],0x0        # 0x14006a8d8
   14002e1a3:	jne    0x14002e1b4
   14002e1a5:	lea    eax,[rcx-0x41]
   14002e1a8:	cmp    eax,0x19
   14002e1ab:	ja     0x14002e1b0
   14002e1ad:	add    ecx,0x20
   14002e1b0:	mov    eax,ecx
   14002e1b2:	jmp    0x14002e1bb
   14002e1b4:	xor    edx,edx
   14002e1b6:	call   0x14002e028
   14002e1bb:	add    rsp,0x28
   14002e1bf:	ret    
   14002e1c0:	jmp    0x14002e1c9
   14002e1c2:	cmp    al,dl
   14002e1c4:	je     0x14002e1d3
   14002e1c6:	inc    rcx
   14002e1c9:	mov    al,BYTE PTR [rcx]
   14002e1cb:	test   al,al
   14002e1cd:	jne    0x14002e1c2
   14002e1cf:	cmp    al,dl
   14002e1d1:	jne    0x14002e1d7
   14002e1d3:	mov    rax,rcx
   14002e1d6:	ret    
   14002e1d7:	xor    eax,eax
   14002e1d9:	ret    
   14002e1da:	int3   
   14002e1db:	int3   
   14002e1dc:	int3   
   14002e1dd:	int3   
   14002e1de:	int3   
   14002e1df:	int3   
   14002e1e0:	int3   
   14002e1e1:	int3   
   14002e1e2:	int3   
   14002e1e3:	int3   
   14002e1e4:	int3   
   14002e1e5:	int3   
   14002e1e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002e1f0:	test   r8,r8
   14002e1f3:	je     0x14002e26a
   14002e1f5:	sub    rdx,rcx
   14002e1f8:	mov    r9,rdx
   14002e1fb:	movabs r11,0x8101010101010100
   14002e205:	test   cl,0x7
   14002e208:	je     0x14002e229
   14002e20a:	mov    al,BYTE PTR [rcx]
   14002e20c:	mov    dl,BYTE PTR [rcx+r9*1]
   14002e210:	inc    rcx
   14002e213:	cmp    al,dl
   14002e215:	jne    0x14002e26e
   14002e217:	dec    r8
   14002e21a:	je     0x14002e26a
   14002e21c:	test   al,al
   14002e21e:	je     0x14002e26a
   14002e220:	test   rcx,0x7
   14002e227:	jne    0x14002e20a
   14002e229:	lea    rdx,[rcx+r9*1]
   14002e22d:	and    dx,0xfff
   14002e232:	cmp    dx,0xff8
   14002e237:	ja     0x14002e20a
   14002e239:	mov    rax,QWORD PTR [rcx]
   14002e23c:	mov    rdx,QWORD PTR [rcx+r9*1]
   14002e240:	cmp    rax,rdx
   14002e243:	jne    0x14002e20a
   14002e245:	add    rcx,0x8
   14002e249:	sub    r8,0x8
   14002e24d:	movabs r10,0x7efefefefefefeff
   14002e257:	jbe    0x14002e26a
   14002e259:	xor    rax,0xffffffffffffffff
   14002e25d:	add    r10,rdx
   14002e260:	xor    rax,r10
   14002e263:	test   r11,rax
   14002e266:	je     0x14002e229
   14002e268:	jmp    0x14002e276
   14002e26a:	xor    rax,rax
   14002e26d:	ret    
   14002e26e:	sbb    rax,rax
   14002e271:	sbb    rax,0xffffffffffffffff
   14002e275:	ret    
   14002e276:	test   dl,dl
   14002e278:	je     0x14002e2a1
   14002e27a:	test   dh,dh
   14002e27c:	je     0x14002e2a1
   14002e27e:	shr    rdx,0x10
   14002e282:	test   dl,dl
   14002e284:	je     0x14002e2a1
   14002e286:	test   dh,dh
   14002e288:	je     0x14002e2a1
   14002e28a:	shr    rdx,0x10
   14002e28e:	test   dl,dl
   14002e290:	je     0x14002e2a1
   14002e292:	test   dh,dh
   14002e294:	je     0x14002e2a1
   14002e296:	shr    edx,0x10
   14002e299:	test   dl,dl
   14002e29b:	je     0x14002e2a1
   14002e29d:	test   dh,dh
   14002e29f:	jne    0x14002e229
   14002e2a1:	xor    rax,rax
   14002e2a4:	ret    
   14002e2a5:	int3   
   14002e2a6:	int3   
   14002e2a7:	int3   
   14002e2a8:	mov    rax,rsp
   14002e2ab:	push   rbx
   14002e2ac:	push   rsi
   14002e2ad:	push   rdi
   14002e2ae:	push   r12
   14002e2b0:	push   r13
   14002e2b2:	push   r14
   14002e2b4:	push   r15
   14002e2b6:	sub    rsp,0x50
   14002e2ba:	xor    r14d,r14d
   14002e2bd:	mov    r13d,r14d
   14002e2c0:	mov    esi,r14d
   14002e2c3:	mov    DWORD PTR [rax+0x8],r14d
   14002e2c7:	mov    DWORD PTR [rax+0x10],r14d
   14002e2cb:	mov    DWORD PTR [rax+0x18],r14d
   14002e2cf:	lea    ecx,[r14+0x7]
   14002e2d3:	call   0x14002fd94
   14002e2d8:	nop
   14002e2d9:	call   0x14002ede8
   14002e2de:	mov    r12,rax
   14002e2e1:	lea    rcx,[rsp+0x90]
   14002e2e9:	call   0x14002ed90
   14002e2ee:	cmp    eax,r14d
   14002e2f1:	je     0x14002e307
   14002e2f3:	mov    QWORD PTR [rsp+0x20],r14
   14002e2f8:	xor    r9d,r9d
   14002e2fb:	xor    r8d,r8d
   14002e2fe:	xor    edx,edx
   14002e300:	xor    ecx,ecx
   14002e302:	call   0x140031984
   14002e307:	lea    rcx,[rsp+0x98]
   14002e30f:	call   0x14002ed10
   14002e314:	cmp    eax,r14d
   14002e317:	je     0x14002e32d
   14002e319:	mov    QWORD PTR [rsp+0x20],r14
   14002e31e:	xor    r9d,r9d
   14002e321:	xor    r8d,r8d
   14002e324:	xor    edx,edx
   14002e326:	xor    ecx,ecx
   14002e328:	call   0x140031984
   14002e32d:	lea    rcx,[rsp+0xa0]
   14002e335:	call   0x14002ed50
   14002e33a:	cmp    eax,r14d
   14002e33d:	je     0x14002e353
   14002e33f:	mov    QWORD PTR [rsp+0x20],r14
   14002e344:	xor    r9d,r9d
   14002e347:	xor    r8d,r8d
   14002e34a:	xor    edx,edx
   14002e34c:	xor    ecx,ecx
   14002e34e:	call   0x140031984
   14002e353:	call   0x140036100
   14002e358:	mov    ebx,eax
   14002e35a:	mov    DWORD PTR [rip+0x3b9db],r14d        # 0x140069d3c
   14002e361:	or     r15d,0xffffffff
   14002e365:	mov    DWORD PTR [rip+0x38764],r15d        # 0x140066ad0
   14002e36c:	mov    DWORD PTR [rip+0x3874d],r15d        # 0x140066ac0
   14002e373:	lea    rcx,[rip+0x2147e]        # 0x14004f7f8
   14002e37a:	call   0x14002edf0
   14002e37f:	mov    rdi,rax
   14002e382:	mov    QWORD PTR [rsp+0x40],rax
   14002e387:	cmp    rax,r14
   14002e38a:	je     0x14002e433
   14002e390:	cmp    BYTE PTR [rax],r14b
   14002e393:	je     0x14002e433
   14002e399:	mov    rcx,QWORD PTR [rip+0x3b9a0]        # 0x140069d40
   14002e3a0:	cmp    rcx,r14
   14002e3a3:	je     0x14002e3c5
   14002e3a5:	mov    rdx,rcx
   14002e3a8:	mov    rcx,rax
   14002e3ab:	call   0x140036050
   14002e3b0:	cmp    eax,r14d
   14002e3b3:	jne    0x14002e3be
   14002e3b5:	lea    esi,[r15+0x2]
   14002e3b9:	jmp    0x14002e592
   14002e3be:	mov    rcx,QWORD PTR [rip+0x3b97b]        # 0x140069d40
   14002e3c5:	cmp    rcx,r14
   14002e3c8:	je     0x14002e3cf
   14002e3ca:	call   0x14002b36c
   14002e3cf:	mov    rcx,rdi
   14002e3d2:	call   0x140035dd0
   14002e3d7:	lea    rcx,[rax+0x1]
   14002e3db:	call   0x1400300c8
   14002e3e0:	mov    QWORD PTR [rip+0x3b959],rax        # 0x140069d40
   14002e3e7:	cmp    rax,r14
   14002e3ea:	jne    0x14002e3f6
   14002e3ec:	mov    esi,0x1
   14002e3f1:	jmp    0x14002e592
   14002e3f6:	mov    rcx,rdi
   14002e3f9:	call   0x140035dd0
   14002e3fe:	mov    r8,rdi
   14002e401:	lea    rdx,[rax+0x1]
   14002e405:	mov    rcx,QWORD PTR [rip+0x3b934]        # 0x140069d40
   14002e40c:	call   0x14003445c
   14002e411:	cmp    eax,r14d
   14002e414:	je     0x14002e592
   14002e41a:	mov    QWORD PTR [rsp+0x20],r14
   14002e41f:	xor    r9d,r9d
   14002e422:	xor    r8d,r8d
   14002e425:	xor    edx,edx
   14002e427:	xor    ecx,ecx
   14002e429:	call   0x140031984
   14002e42e:	jmp    0x14002e592
   14002e433:	mov    rcx,QWORD PTR [rip+0x3b906]        # 0x140069d40
   14002e43a:	cmp    rcx,r14
   14002e43d:	je     0x14002e44b
   14002e43f:	call   0x14002b36c
   14002e444:	mov    QWORD PTR [rip+0x3b8f5],r14        # 0x140069d40
   14002e44b:	lea    rcx,[rip+0x3b83e]        # 0x140069c90
   14002e452:	call   QWORD PTR [rip+0xecf0]        # 0x14003d148
   14002e458:	cmp    eax,0xffffffff
   14002e45b:	je     0x14002e58d
   14002e461:	mov    DWORD PTR [rip+0x3b8d1],0x1        # 0x140069d3c
   14002e46b:	mov    ecx,DWORD PTR [rip+0x3b81f]        # 0x140069c90
   14002e471:	imul   ecx,ecx,0x3c
   14002e474:	mov    DWORD PTR [rsp+0x90],ecx
   14002e47b:	cmp    WORD PTR [rip+0x3b853],r14w        # 0x140069cd6
   14002e483:	je     0x14002e49b
   14002e485:	mov    edx,DWORD PTR [rip+0x3b859]        # 0x140069ce4
   14002e48b:	mov    eax,edx
   14002e48d:	imul   eax,eax,0x3c
   14002e490:	add    ecx,eax
   14002e492:	mov    DWORD PTR [rsp+0x90],ecx
   14002e499:	jmp    0x14002e4a1
   14002e49b:	mov    edx,DWORD PTR [rip+0x3b843]        # 0x140069ce4
   14002e4a1:	cmp    WORD PTR [rip+0x3b881],r14w        # 0x140069d2a
   14002e4a9:	je     0x14002e4cf
   14002e4ab:	mov    eax,DWORD PTR [rip+0x3b887]        # 0x140069d38
   14002e4b1:	cmp    eax,r14d
   14002e4b4:	je     0x14002e4cf
   14002e4b6:	mov    DWORD PTR [rsp+0x98],0x1
   14002e4c1:	sub    eax,edx
   14002e4c3:	imul   eax,eax,0x3c
   14002e4c6:	mov    DWORD PTR [rsp+0xa0],eax
   14002e4cd:	jmp    0x14002e4df
   14002e4cf:	mov    DWORD PTR [rsp+0x98],r14d
   14002e4d7:	mov    DWORD PTR [rsp+0xa0],r14d
   14002e4df:	lea    rax,[rsp+0xa8]
   14002e4e7:	mov    QWORD PTR [rsp+0x38],rax
   14002e4ec:	mov    QWORD PTR [rsp+0x30],r14
   14002e4f1:	mov    esi,0x3f
   14002e4f6:	mov    DWORD PTR [rsp+0x28],esi
   14002e4fa:	mov    rax,QWORD PTR [r12]
   14002e4fe:	mov    QWORD PTR [rsp+0x20],rax
   14002e503:	mov    r9d,r15d
   14002e506:	lea    r8,[rip+0x3b787]        # 0x140069c94
   14002e50d:	xor    edx,edx
   14002e50f:	mov    ecx,ebx
   14002e511:	call   QWORD PTR [rip+0xeb81]        # 0x14003d098
   14002e517:	cmp    eax,r14d
   14002e51a:	je     0x14002e530
   14002e51c:	cmp    DWORD PTR [rsp+0xa8],r14d
   14002e524:	jne    0x14002e530
   14002e526:	mov    rax,QWORD PTR [r12]
   14002e52a:	mov    BYTE PTR [rax+0x3f],r14b
   14002e52e:	jmp    0x14002e537
   14002e530:	mov    rax,QWORD PTR [r12]
   14002e534:	mov    BYTE PTR [rax],r14b
   14002e537:	lea    rax,[rsp+0xa8]
   14002e53f:	mov    QWORD PTR [rsp+0x38],rax
   14002e544:	mov    QWORD PTR [rsp+0x30],r14
   14002e549:	mov    DWORD PTR [rsp+0x28],esi
   14002e54d:	mov    rax,QWORD PTR [r12+0x8]
   14002e552:	mov    QWORD PTR [rsp+0x20],rax
   14002e557:	mov    r9d,r15d
   14002e55a:	lea    r8,[rip+0x3b787]        # 0x140069ce8
   14002e561:	xor    edx,edx
   14002e563:	mov    ecx,ebx
   14002e565:	call   QWORD PTR [rip+0xeb2d]        # 0x14003d098
   14002e56b:	cmp    eax,r14d
   14002e56e:	je     0x14002e585
   14002e570:	cmp    DWORD PTR [rsp+0xa8],r14d
   14002e578:	jne    0x14002e585
   14002e57a:	mov    rax,QWORD PTR [r12+0x8]
   14002e57f:	mov    BYTE PTR [rax+0x3f],r14b
   14002e583:	jmp    0x14002e58d
   14002e585:	mov    rax,QWORD PTR [r12+0x8]
   14002e58a:	mov    BYTE PTR [rax],r14b
   14002e58d:	mov    esi,0x1
   14002e592:	mov    ebx,DWORD PTR [rsp+0x90]
   14002e599:	call   0x14002ede0
   14002e59e:	mov    DWORD PTR [rax],ebx
   14002e5a0:	mov    ebx,DWORD PTR [rsp+0x98]
   14002e5a7:	call   0x14002edd0
   14002e5ac:	mov    DWORD PTR [rax],ebx
   14002e5ae:	mov    ebx,DWORD PTR [rsp+0xa0]
   14002e5b5:	call   0x14002edd8
   14002e5ba:	mov    DWORD PTR [rax],ebx
   14002e5bc:	mov    ecx,0x7
   14002e5c1:	call   0x14002fc94
   14002e5c6:	cmp    esi,r14d
   14002e5c9:	jne    0x14002e736
   14002e5cf:	mov    r15d,0x3
   14002e5d5:	mov    r9,r15
   14002e5d8:	mov    r8,rdi
   14002e5db:	lea    edx,[r15+0x3d]
   14002e5df:	mov    rcx,QWORD PTR [r12]
   14002e5e3:	call   0x140035f60
   14002e5e8:	cmp    eax,r14d
   14002e5eb:	je     0x14002e601
   14002e5ed:	mov    QWORD PTR [rsp+0x20],r14
   14002e5f2:	xor    r9d,r9d
   14002e5f5:	xor    r8d,r8d
   14002e5f8:	xor    edx,edx
   14002e5fa:	xor    ecx,ecx
   14002e5fc:	call   0x140031984
   14002e601:	add    rdi,r15
   14002e604:	cmp    BYTE PTR [rdi],0x2d
   14002e607:	jne    0x14002e612
   14002e609:	mov    r13d,0x1
   14002e60f:	inc    rdi
   14002e612:	mov    rcx,rdi
   14002e615:	call   0x14002efd0
   14002e61a:	mov    r11d,eax
   14002e61d:	imul   r11d,r11d,0xe10
   14002e624:	mov    DWORD PTR [rsp+0x90],r11d
   14002e62c:	mov    bl,0x30
   14002e62e:	mov    sil,0x39
   14002e631:	mov    al,BYTE PTR [rdi]
   14002e633:	cmp    al,0x2b
   14002e635:	je     0x14002e72e
   14002e63b:	cmp    al,bl
   14002e63d:	jl     0x14002e648
   14002e63f:	cmp    al,sil
   14002e642:	jle    0x14002e72e
   14002e648:	cmp    BYTE PTR [rdi],0x3a
   14002e64b:	jne    0x14002e6b9
   14002e64d:	inc    rdi
   14002e650:	mov    rcx,rdi
   14002e653:	call   0x14002efd0
   14002e658:	imul   eax,eax,0x3c
   14002e65b:	mov    r11d,DWORD PTR [rsp+0x90]
   14002e663:	add    r11d,eax
   14002e666:	mov    DWORD PTR [rsp+0x90],r11d
   14002e66e:	mov    al,BYTE PTR [rdi]
   14002e670:	cmp    al,bl
   14002e672:	jl     0x14002e682
   14002e674:	cmp    al,sil
   14002e677:	jg     0x14002e682
   14002e679:	inc    rdi
   14002e67c:	mov    al,BYTE PTR [rdi]
   14002e67e:	cmp    al,bl
   14002e680:	jge    0x14002e674
   14002e682:	cmp    BYTE PTR [rdi],0x3a
   14002e685:	jne    0x14002e6b9
   14002e687:	inc    rdi
   14002e68a:	mov    rcx,rdi
   14002e68d:	call   0x14002efd0
   14002e692:	mov    r11d,DWORD PTR [rsp+0x90]
   14002e69a:	add    r11d,eax
   14002e69d:	mov    DWORD PTR [rsp+0x90],r11d
   14002e6a5:	mov    al,BYTE PTR [rdi]
   14002e6a7:	cmp    al,bl
   14002e6a9:	jl     0x14002e6b9
   14002e6ab:	cmp    al,sil
   14002e6ae:	jg     0x14002e6b9
   14002e6b0:	inc    rdi
   14002e6b3:	mov    al,BYTE PTR [rdi]
   14002e6b5:	cmp    al,bl
   14002e6b7:	jge    0x14002e6ab
   14002e6b9:	cmp    r13d,r14d
   14002e6bc:	je     0x14002e6c9
   14002e6be:	neg    r11d
   14002e6c1:	mov    DWORD PTR [rsp+0x90],r11d
   14002e6c9:	movsx  eax,BYTE PTR [rdi]
   14002e6cc:	mov    DWORD PTR [rsp+0x98],eax
   14002e6d3:	cmp    eax,r14d
   14002e6d6:	je     0x14002e708
   14002e6d8:	mov    r9,r15
   14002e6db:	mov    r8,rdi
   14002e6de:	mov    edx,0x40
   14002e6e3:	mov    rcx,QWORD PTR [r12+0x8]
   14002e6e8:	call   0x140035f60
   14002e6ed:	cmp    eax,r14d
   14002e6f0:	je     0x14002e710
   14002e6f2:	mov    QWORD PTR [rsp+0x20],r14
   14002e6f7:	xor    r9d,r9d
   14002e6fa:	xor    r8d,r8d
   14002e6fd:	xor    edx,edx
   14002e6ff:	xor    ecx,ecx
   14002e701:	call   0x140031984
   14002e706:	jmp    0x14002e710
   14002e708:	mov    rax,QWORD PTR [r12+0x8]
   14002e70d:	mov    BYTE PTR [rax],r14b
   14002e710:	mov    ebx,DWORD PTR [rsp+0x90]
   14002e717:	call   0x14002ede0
   14002e71c:	mov    DWORD PTR [rax],ebx
   14002e71e:	mov    ebx,DWORD PTR [rsp+0x98]
   14002e725:	call   0x14002edd0
   14002e72a:	mov    DWORD PTR [rax],ebx
   14002e72c:	jmp    0x14002e736
   14002e72e:	inc    rdi
   14002e731:	jmp    0x14002e631
   14002e736:	add    rsp,0x50
   14002e73a:	pop    r15
   14002e73c:	pop    r14
   14002e73e:	pop    r13
   14002e740:	pop    r12
   14002e742:	pop    rdi
   14002e743:	pop    rsi
   14002e744:	pop    rbx
   14002e745:	ret    
   14002e746:	int3   
   14002e747:	int3   
   14002e748:	mov    QWORD PTR [rsp+0x10],rbx
   14002e74d:	mov    QWORD PTR [rsp+0x18],rbp
   14002e752:	push   rsi
   14002e753:	push   rdi
   14002e754:	push   r12
   14002e756:	sub    rsp,0x30
   14002e75a:	and    DWORD PTR [rsp+0x50],0x0
   14002e75f:	mov    ebx,r8d
   14002e762:	cmp    edx,0x1
   14002e765:	mov    eax,ebx
   14002e767:	mov    r12d,ecx
   14002e76a:	mov    edi,0x51eb851f
   14002e76f:	cdq    
   14002e770:	jne    0x14002e8cb
   14002e776:	and    edx,0x3
   14002e779:	lea    ebp,[rdx+rax*1]
   14002e77c:	and    ebp,0x3
   14002e77f:	sub    ebp,edx
   14002e781:	jne    0x14002e798
   14002e783:	mov    eax,edi
   14002e785:	imul   ebx
   14002e787:	sar    edx,0x5
   14002e78a:	mov    eax,edx
   14002e78c:	shr    eax,0x1f
   14002e78f:	add    edx,eax
   14002e791:	imul   edx,edx,0x64
   14002e794:	cmp    ebx,edx
   14002e796:	jne    0x14002e7cb
   14002e798:	lea    ecx,[r8+0x76c]
   14002e79f:	mov    eax,edi
   14002e7a1:	imul   ecx
   14002e7a3:	sar    edx,0x7
   14002e7a6:	mov    eax,edx
   14002e7a8:	shr    eax,0x1f
   14002e7ab:	add    edx,eax
   14002e7ad:	imul   edx,edx,0x190
   14002e7b3:	cmp    ecx,edx
   14002e7b5:	je     0x14002e7cb
   14002e7b7:	lea    r11,[rip+0xfffffffffffd1842]        # 0x140000000
   14002e7be:	movsxd rsi,r9d
   14002e7c1:	mov    r10d,DWORD PTR [r11+rsi*4+0x679b4]
   14002e7c9:	jmp    0x14002e7dd
   14002e7cb:	lea    r11,[rip+0xfffffffffffd182e]        # 0x140000000
   14002e7d2:	movsxd rsi,r9d
   14002e7d5:	mov    r10d,DWORD PTR [r11+rsi*4+0x6797c]
   14002e7dd:	dec    r8d
   14002e7e0:	lea    ecx,[rbx+0x12b]
   14002e7e6:	mov    eax,edi
   14002e7e8:	inc    r10d
   14002e7eb:	imul   ecx
   14002e7ed:	mov    r9d,edx
   14002e7f0:	sar    r9d,0x7
   14002e7f4:	mov    eax,r9d
   14002e7f7:	shr    eax,0x1f
   14002e7fa:	add    r9d,eax
   14002e7fd:	mov    eax,edi
   14002e7ff:	imul   r8d
   14002e802:	sar    edx,0x5
   14002e805:	mov    eax,edx
   14002e807:	shr    eax,0x1f
   14002e80a:	add    edx,eax
   14002e80c:	mov    eax,r8d
   14002e80f:	sub    r9d,edx
   14002e812:	cdq    
   14002e813:	and    edx,0x3
   14002e816:	add    eax,edx
   14002e818:	sar    eax,0x2
   14002e81b:	lea    ecx,[r10+rax*1]
   14002e81f:	mov    eax,ebx
   14002e821:	add    ecx,r9d
   14002e824:	imul   eax,eax,0x16d
   14002e82a:	lea    r8d,[rax+rcx*1-0x63db]
   14002e832:	mov    ecx,DWORD PTR [rsp+0x70]
   14002e836:	mov    eax,0x92492493
   14002e83b:	imul   r8d
   14002e83e:	add    edx,r8d
   14002e841:	sar    edx,0x2
   14002e844:	mov    eax,edx
   14002e846:	shr    eax,0x1f
   14002e849:	add    edx,eax
   14002e84b:	mov    eax,ecx
   14002e84d:	imul   edx,edx,0x7
   14002e850:	imul   eax,eax,0x7
   14002e853:	sub    r8d,edx
   14002e856:	mov    edx,DWORD PTR [rsp+0x78]
   14002e85a:	sub    eax,r8d
   14002e85d:	add    eax,edx
   14002e85f:	cmp    r8d,edx
   14002e862:	jg     0x14002e86b
   14002e864:	lea    r10d,[r10+rax*1-0x7]
   14002e869:	jmp    0x14002e86e
   14002e86b:	add    r10d,eax
   14002e86e:	cmp    ecx,0x5
   14002e871:	jne    0x14002e939
   14002e877:	test   ebp,ebp
   14002e879:	jne    0x14002e890
   14002e87b:	mov    eax,edi
   14002e87d:	imul   ebx
   14002e87f:	sar    edx,0x5
   14002e882:	mov    ecx,edx
   14002e884:	shr    ecx,0x1f
   14002e887:	add    edx,ecx
   14002e889:	imul   edx,edx,0x64
   14002e88c:	cmp    ebx,edx
   14002e88e:	jne    0x14002e8b8
   14002e890:	lea    ecx,[rbx+0x76c]
   14002e896:	mov    eax,edi
   14002e898:	imul   ecx
   14002e89a:	sar    edx,0x7
   14002e89d:	mov    eax,edx
   14002e89f:	shr    eax,0x1f
   14002e8a2:	add    edx,eax
   14002e8a4:	imul   edx,edx,0x190
   14002e8aa:	cmp    ecx,edx
   14002e8ac:	je     0x14002e8b8
   14002e8ae:	mov    eax,DWORD PTR [r11+rsi*4+0x679b8]
   14002e8b6:	jmp    0x14002e8c0
   14002e8b8:	mov    eax,DWORD PTR [r11+rsi*4+0x67980]
   14002e8c0:	cmp    r10d,eax
   14002e8c3:	jle    0x14002e939
   14002e8c5:	sub    r10d,0x7
   14002e8c9:	jmp    0x14002e939
   14002e8cb:	and    edx,0x3
   14002e8ce:	add    eax,edx
   14002e8d0:	and    eax,0x3
   14002e8d3:	cmp    eax,edx
   14002e8d5:	jne    0x14002e8ec
   14002e8d7:	mov    eax,edi
   14002e8d9:	imul   ebx
   14002e8db:	sar    edx,0x5
   14002e8de:	mov    eax,edx
   14002e8e0:	shr    eax,0x1f
   14002e8e3:	add    edx,eax
   14002e8e5:	imul   edx,edx,0x64
   14002e8e8:	cmp    ebx,edx
   14002e8ea:	jne    0x14002e91f
   14002e8ec:	lea    ecx,[r8+0x76c]
   14002e8f3:	mov    eax,edi
   14002e8f5:	imul   ecx
   14002e8f7:	sar    edx,0x7
   14002e8fa:	mov    eax,edx
   14002e8fc:	shr    eax,0x1f
   14002e8ff:	add    edx,eax
   14002e901:	imul   edx,edx,0x190
   14002e907:	cmp    ecx,edx
   14002e909:	je     0x14002e91f
   14002e90b:	lea    r11,[rip+0xfffffffffffd16ee]        # 0x140000000
   14002e912:	movsxd rax,r9d
   14002e915:	mov    r10d,DWORD PTR [r11+rax*4+0x679b4]
   14002e91d:	jmp    0x14002e931
   14002e91f:	lea    r11,[rip+0xfffffffffffd16da]        # 0x140000000
   14002e926:	movsxd rax,r9d
   14002e929:	mov    r10d,DWORD PTR [r11+rax*4+0x6797c]
   14002e931:	add    r10d,DWORD PTR [rsp+0x80]
   14002e939:	mov    eax,DWORD PTR [rsp+0x88]
   14002e940:	imul   eax,eax,0x3c
   14002e943:	add    eax,DWORD PTR [rsp+0x90]
   14002e94a:	imul   eax,eax,0x3c
   14002e94d:	add    eax,DWORD PTR [rsp+0x98]
   14002e954:	imul   eax,eax,0x3e8
   14002e95a:	add    eax,DWORD PTR [rsp+0xa0]
   14002e961:	cmp    r12d,0x1
   14002e965:	jne    0x14002e97c
   14002e967:	mov    DWORD PTR [rip+0x38156],r10d        # 0x140066ac4
   14002e96e:	mov    DWORD PTR [rip+0x38154],eax        # 0x140066ac8
   14002e974:	mov    DWORD PTR [rip+0x38146],ebx        # 0x140066ac0
   14002e97a:	jmp    0x14002e9ed
   14002e97c:	lea    rcx,[rsp+0x50]
   14002e981:	mov    DWORD PTR [rip+0x3814c],r10d        # 0x140066ad4
   14002e988:	mov    DWORD PTR [rip+0x3814a],eax        # 0x140066ad8
   14002e98e:	call   0x14002ed50
   14002e993:	test   eax,eax
   14002e995:	je     0x14002e9ac
   14002e997:	and    QWORD PTR [rsp+0x20],0x0
   14002e99d:	xor    r9d,r9d
   14002e9a0:	xor    r8d,r8d
   14002e9a3:	xor    edx,edx
   14002e9a5:	xor    ecx,ecx
   14002e9a7:	call   0x140031984
   14002e9ac:	mov    ecx,DWORD PTR [rip+0x38126]        # 0x140066ad8
   14002e9b2:	mov    eax,DWORD PTR [rsp+0x50]
   14002e9b6:	imul   eax,eax,0x3e8
   14002e9bc:	add    ecx,eax
   14002e9be:	mov    eax,0x5265c00
   14002e9c3:	mov    DWORD PTR [rip+0x3810f],ecx        # 0x140066ad8
   14002e9c9:	jns    0x14002e9d5
   14002e9cb:	add    ecx,eax
   14002e9cd:	dec    DWORD PTR [rip+0x38101]        # 0x140066ad4
   14002e9d3:	jmp    0x14002e9e1
   14002e9d5:	cmp    ecx,eax
   14002e9d7:	jl     0x14002e9e7
   14002e9d9:	sub    ecx,eax
   14002e9db:	inc    DWORD PTR [rip+0x380f3]        # 0x140066ad4
   14002e9e1:	mov    DWORD PTR [rip+0x380f1],ecx        # 0x140066ad8
   14002e9e7:	mov    DWORD PTR [rip+0x380e3],ebx        # 0x140066ad0
   14002e9ed:	mov    rbx,QWORD PTR [rsp+0x58]
   14002e9f2:	mov    rbp,QWORD PTR [rsp+0x60]
   14002e9f7:	add    rsp,0x30
   14002e9fb:	pop    r12
   14002e9fd:	pop    rdi
   14002e9fe:	pop    rsi
   14002e9ff:	ret    
   14002ea00:	mov    rax,rsp
   14002ea03:	mov    QWORD PTR [rax+0x8],rbx
   14002ea07:	mov    QWORD PTR [rax+0x18],rbp
   14002ea0b:	mov    QWORD PTR [rax+0x20],rsi
   14002ea0f:	push   rdi
   14002ea10:	push   r12
   14002ea12:	push   r13
   14002ea14:	sub    rsp,0x60
   14002ea18:	mov    rdi,rcx
   14002ea1b:	lea    rcx,[rax+0x10]
   14002ea1f:	xor    ebx,ebx
   14002ea21:	mov    DWORD PTR [rax+0x10],ebx
   14002ea24:	call   0x14002ed10
   14002ea29:	cmp    eax,ebx
   14002ea2b:	je     0x14002ea41
   14002ea2d:	xor    r9d,r9d
   14002ea30:	xor    r8d,r8d
   14002ea33:	xor    edx,edx
   14002ea35:	xor    ecx,ecx
   14002ea37:	mov    QWORD PTR [rsp+0x20],rbx
   14002ea3c:	call   0x140031984
   14002ea41:	cmp    DWORD PTR [rsp+0x88],ebx
   14002ea48:	jne    0x14002ea51
   14002ea4a:	xor    eax,eax
   14002ea4c:	jmp    0x14002ec41
   14002ea51:	mov    esi,DWORD PTR [rdi+0x14]
   14002ea54:	mov    r13d,0x1
   14002ea5a:	cmp    esi,DWORD PTR [rip+0x38060]        # 0x140066ac0
   14002ea60:	jne    0x14002ea6e
   14002ea62:	cmp    esi,DWORD PTR [rip+0x38068]        # 0x140066ad0
   14002ea68:	je     0x14002ec0f
   14002ea6e:	cmp    DWORD PTR [rip+0x3b2c8],ebx        # 0x140069d3c
   14002ea74:	je     0x14002eb8c
   14002ea7a:	movzx  ecx,WORD PTR [rip+0x3b2b3]        # 0x140069d34
   14002ea81:	movzx  eax,WORD PTR [rip+0x3b2ae]        # 0x140069d36
   14002ea88:	movzx  edx,WORD PTR [rip+0x3b2a3]        # 0x140069d32
   14002ea8f:	movzx  r9d,WORD PTR [rip+0x3b293]        # 0x140069d2a
   14002ea97:	mov    DWORD PTR [rsp+0x50],eax
   14002ea9b:	mov    DWORD PTR [rsp+0x48],ecx
   14002ea9f:	mov    DWORD PTR [rsp+0x40],edx
   14002eaa3:	mov    ecx,r13d
   14002eaa6:	cmp    WORD PTR [rip+0x3b27b],bx        # 0x140069d28
   14002eaad:	jne    0x14002eadf
   14002eaaf:	movzx  r10d,WORD PTR [rip+0x3b279]        # 0x140069d30
   14002eab7:	movzx  r11d,WORD PTR [rip+0x3b26d]        # 0x140069d2c
   14002eabf:	movzx  r8d,WORD PTR [rip+0x3b267]        # 0x140069d2e
   14002eac7:	mov    DWORD PTR [rsp+0x38],r10d
   14002eacc:	mov    DWORD PTR [rsp+0x30],ebx
   14002ead0:	mov    DWORD PTR [rsp+0x28],r11d
   14002ead5:	mov    DWORD PTR [rsp+0x20],r8d
   14002eada:	mov    edx,r13d
   14002eadd:	jmp    0x14002eb03
   14002eadf:	movzx  r8d,WORD PTR [rip+0x3b249]        # 0x140069d30
   14002eae7:	movzx  r10d,WORD PTR [rip+0x3b23f]        # 0x140069d2e
   14002eaef:	xor    edx,edx
   14002eaf1:	mov    DWORD PTR [rsp+0x38],r8d
   14002eaf6:	mov    DWORD PTR [rsp+0x30],r10d
   14002eafb:	mov    DWORD PTR [rsp+0x28],ebx
   14002eaff:	mov    DWORD PTR [rsp+0x20],ebx
   14002eb03:	mov    r8d,esi
   14002eb06:	call   0x14002e748
   14002eb0b:	movzx  ecx,WORD PTR [rip+0x3b1ce]        # 0x140069ce0
   14002eb12:	movzx  r8d,WORD PTR [rip+0x3b1c2]        # 0x140069cdc
   14002eb1a:	movzx  eax,WORD PTR [rip+0x3b1c1]        # 0x140069ce2
   14002eb21:	movzx  edx,WORD PTR [rip+0x3b1b6]        # 0x140069cde
   14002eb28:	movzx  r9d,WORD PTR [rip+0x3b1a6]        # 0x140069cd6
   14002eb30:	mov    DWORD PTR [rsp+0x50],eax
   14002eb34:	mov    DWORD PTR [rsp+0x48],ecx
   14002eb38:	mov    DWORD PTR [rsp+0x40],edx
   14002eb3c:	xor    ecx,ecx
   14002eb3e:	mov    DWORD PTR [rsp+0x38],r8d
   14002eb43:	mov    r8d,DWORD PTR [rdi+0x14]
   14002eb47:	cmp    WORD PTR [rip+0x3b186],bx        # 0x140069cd4
   14002eb4e:	jne    0x14002eb73
   14002eb50:	movzx  r10d,WORD PTR [rip+0x3b180]        # 0x140069cd8
   14002eb58:	movzx  r11d,WORD PTR [rip+0x3b17a]        # 0x140069cda
   14002eb60:	mov    DWORD PTR [rsp+0x30],ebx
   14002eb64:	mov    DWORD PTR [rsp+0x28],r10d
   14002eb69:	mov    DWORD PTR [rsp+0x20],r11d
   14002eb6e:	jmp    0x14002ec07
   14002eb73:	movzx  r10d,WORD PTR [rip+0x3b15f]        # 0x140069cda
   14002eb7b:	xor    edx,edx
   14002eb7d:	mov    DWORD PTR [rsp+0x30],r10d
   14002eb82:	mov    DWORD PTR [rsp+0x28],ebx
   14002eb86:	mov    DWORD PTR [rsp+0x20],ebx
   14002eb8a:	jmp    0x14002ec0a
   14002eb8c:	cmp    esi,0x6b
   14002eb8f:	mov    eax,0x2
   14002eb94:	mov    r12d,r13d
   14002eb97:	lea    r9d,[rax+0x1]
   14002eb9b:	lea    ebp,[rax+0x9]
   14002eb9e:	jge    0x14002ebaf
   14002eba0:	lea    r9d,[rax+0x2]
   14002eba4:	mov    eax,r13d
   14002eba7:	lea    ebp,[r9+0x6]
   14002ebab:	lea    r12d,[r9+0x1]
   14002ebaf:	mov    DWORD PTR [rsp+0x50],ebx
   14002ebb3:	mov    DWORD PTR [rsp+0x48],ebx
   14002ebb7:	mov    DWORD PTR [rsp+0x40],ebx
   14002ebbb:	mov    DWORD PTR [rsp+0x38],0x2
   14002ebc3:	mov    DWORD PTR [rsp+0x30],ebx
   14002ebc7:	mov    r8d,esi
   14002ebca:	mov    edx,r13d
   14002ebcd:	mov    ecx,r13d
   14002ebd0:	mov    DWORD PTR [rsp+0x28],ebx
   14002ebd4:	mov    DWORD PTR [rsp+0x20],eax
   14002ebd8:	call   0x14002e748
   14002ebdd:	mov    r8d,DWORD PTR [rdi+0x14]
   14002ebe1:	mov    DWORD PTR [rsp+0x50],ebx
   14002ebe5:	mov    DWORD PTR [rsp+0x48],ebx
   14002ebe9:	mov    DWORD PTR [rsp+0x40],ebx
   14002ebed:	mov    DWORD PTR [rsp+0x38],0x2
   14002ebf5:	mov    DWORD PTR [rsp+0x30],ebx
   14002ebf9:	mov    DWORD PTR [rsp+0x28],ebx
   14002ebfd:	mov    DWORD PTR [rsp+0x20],r12d
   14002ec02:	mov    r9d,ebp
   14002ec05:	xor    ecx,ecx
   14002ec07:	mov    edx,r13d
   14002ec0a:	call   0x14002e748
   14002ec0f:	mov    edx,DWORD PTR [rip+0x37eaf]        # 0x140066ac4
   14002ec15:	mov    r8d,DWORD PTR [rip+0x37eb8]        # 0x140066ad4
   14002ec1c:	mov    ecx,DWORD PTR [rdi+0x1c]
   14002ec1f:	cmp    edx,r8d
   14002ec22:	jge    0x14002ec5b
   14002ec24:	cmp    ecx,edx
   14002ec26:	jl     0x14002ea4a
   14002ec2c:	cmp    ecx,r8d
   14002ec2f:	jg     0x14002ea4a
   14002ec35:	cmp    ecx,edx
   14002ec37:	jle    0x14002ec71
   14002ec39:	cmp    ecx,r8d
   14002ec3c:	jge    0x14002ec71
   14002ec3e:	mov    eax,r13d
   14002ec41:	lea    r11,[rsp+0x60]
   14002ec46:	mov    rbx,QWORD PTR [r11+0x20]
   14002ec4a:	mov    rbp,QWORD PTR [r11+0x30]
   14002ec4e:	mov    rsi,QWORD PTR [r11+0x38]
   14002ec52:	mov    rsp,r11
   14002ec55:	pop    r13
   14002ec57:	pop    r12
   14002ec59:	pop    rdi
   14002ec5a:	ret    
   14002ec5b:	cmp    ecx,r8d
   14002ec5e:	jl     0x14002ec3e
   14002ec60:	cmp    ecx,edx
   14002ec62:	jg     0x14002ec3e
   14002ec64:	cmp    ecx,r8d
   14002ec67:	jle    0x14002ec71
   14002ec69:	cmp    ecx,edx
   14002ec6b:	jl     0x14002ea4a
   14002ec71:	mov    eax,DWORD PTR [rdi+0x8]
   14002ec74:	imul   eax,eax,0x3c
   14002ec77:	add    eax,DWORD PTR [rdi+0x4]
   14002ec7a:	imul   eax,eax,0x3c
   14002ec7d:	add    eax,DWORD PTR [rdi]
   14002ec7f:	imul   eax,eax,0x3e8
   14002ec85:	cmp    ecx,edx
   14002ec87:	jne    0x14002ec96
   14002ec89:	cmp    eax,DWORD PTR [rip+0x37e39]        # 0x140066ac8
   14002ec8f:	setge  bl
   14002ec92:	mov    eax,ebx
   14002ec94:	jmp    0x14002ec41
   14002ec96:	cmp    eax,DWORD PTR [rip+0x37e3c]        # 0x140066ad8
   14002ec9c:	setl   bl
   14002ec9f:	jmp    0x14002ec92
   14002eca1:	int3   
   14002eca2:	int3   
   14002eca3:	int3   
   14002eca4:	sub    rsp,0x28
   14002eca8:	cmp    DWORD PTR [rip+0x3b099],0x0        # 0x140069d48
   14002ecaf:	jne    0x14002ecda
   14002ecb1:	mov    ecx,0x6
   14002ecb6:	call   0x14002fd94
   14002ecbb:	nop
   14002ecbc:	cmp    DWORD PTR [rip+0x3b085],0x0        # 0x140069d48
   14002ecc3:	jne    0x14002ecd0
   14002ecc5:	call   0x14002e2a8
   14002ecca:	inc    DWORD PTR [rip+0x3b078]        # 0x140069d48
   14002ecd0:	mov    ecx,0x6
   14002ecd5:	call   0x14002fc94
   14002ecda:	add    rsp,0x28
   14002ecde:	ret    
   14002ecdf:	int3   
   14002ece0:	rex push rbx
   14002ece2:	sub    rsp,0x20
   14002ece6:	mov    rbx,rcx
   14002ece9:	mov    ecx,0x6
   14002ecee:	call   0x14002fd94
   14002ecf3:	nop
   14002ecf4:	mov    rcx,rbx
   14002ecf7:	call   0x14002ea00
   14002ecfc:	mov    ebx,eax
   14002ecfe:	mov    ecx,0x6
   14002ed03:	call   0x14002fc94
   14002ed08:	mov    eax,ebx
   14002ed0a:	add    rsp,0x20
   14002ed0e:	pop    rbx
   14002ed0f:	ret    
   14002ed10:	sub    rsp,0x38
   14002ed14:	test   rcx,rcx
   14002ed17:	jne    0x14002ed40
   14002ed19:	call   0x14002b3f4
   14002ed1e:	and    QWORD PTR [rsp+0x20],0x0
   14002ed24:	xor    r9d,r9d
   14002ed27:	xor    r8d,r8d
   14002ed2a:	xor    edx,edx
   14002ed2c:	xor    ecx,ecx
   14002ed2e:	mov    DWORD PTR [rax],0x16
   14002ed34:	call   0x140031aac
   14002ed39:	mov    eax,0x16
   14002ed3e:	jmp    0x14002ed4a
   14002ed40:	mov    eax,DWORD PTR [rip+0x37d9e]        # 0x140066ae4
   14002ed46:	mov    DWORD PTR [rcx],eax
   14002ed48:	xor    eax,eax
   14002ed4a:	add    rsp,0x38
   14002ed4e:	ret    
   14002ed4f:	int3   
   14002ed50:	sub    rsp,0x38
   14002ed54:	test   rcx,rcx
   14002ed57:	jne    0x14002ed80
   14002ed59:	call   0x14002b3f4
   14002ed5e:	and    QWORD PTR [rsp+0x20],0x0
   14002ed64:	xor    r9d,r9d
   14002ed67:	xor    r8d,r8d
   14002ed6a:	xor    edx,edx
   14002ed6c:	xor    ecx,ecx
   14002ed6e:	mov    DWORD PTR [rax],0x16
   14002ed74:	call   0x140031aac
   14002ed79:	mov    eax,0x16
   14002ed7e:	jmp    0x14002ed8a
   14002ed80:	mov    eax,DWORD PTR [rip+0x37d62]        # 0x140066ae8
   14002ed86:	mov    DWORD PTR [rcx],eax
   14002ed88:	xor    eax,eax
   14002ed8a:	add    rsp,0x38
   14002ed8e:	ret    
   14002ed8f:	int3   
   14002ed90:	sub    rsp,0x38
   14002ed94:	test   rcx,rcx
   14002ed97:	jne    0x14002edc0
   14002ed99:	call   0x14002b3f4
   14002ed9e:	and    QWORD PTR [rsp+0x20],0x0
   14002eda4:	xor    r9d,r9d
   14002eda7:	xor    r8d,r8d
   14002edaa:	xor    edx,edx
   14002edac:	xor    ecx,ecx
   14002edae:	mov    DWORD PTR [rax],0x16
   14002edb4:	call   0x140031aac
   14002edb9:	mov    eax,0x16
   14002edbe:	jmp    0x14002edca
   14002edc0:	mov    eax,DWORD PTR [rip+0x37d1a]        # 0x140066ae0
   14002edc6:	mov    DWORD PTR [rcx],eax
   14002edc8:	xor    eax,eax
   14002edca:	add    rsp,0x38
   14002edce:	ret    
   14002edcf:	int3   
   14002edd0:	lea    rax,[rip+0x37d0d]        # 0x140066ae4
   14002edd7:	ret    
   14002edd8:	lea    rax,[rip+0x37d09]        # 0x140066ae8
   14002eddf:	ret    
   14002ede0:	lea    rax,[rip+0x37cf9]        # 0x140066ae0
   14002ede7:	ret    
   14002ede8:	lea    rax,[rip+0x37d81]        # 0x140066b70
   14002edef:	ret    
   14002edf0:	mov    QWORD PTR [rsp+0x8],rbx
   14002edf5:	mov    QWORD PTR [rsp+0x10],rsi
   14002edfa:	push   rdi
   14002edfb:	sub    rsp,0x20
   14002edff:	cmp    DWORD PTR [rip+0x3bcb6],0x0        # 0x14006aabc
   14002ee06:	mov    rbx,QWORD PTR [rip+0x3b193]        # 0x140069fa0
   14002ee0d:	mov    rsi,rcx
   14002ee10:	je     0x14002ee7f
   14002ee12:	test   rbx,rbx
   14002ee15:	jne    0x14002ee35
   14002ee17:	cmp    QWORD PTR [rip+0x3b192],rbx        # 0x140069fb0
   14002ee1e:	je     0x14002ee7f
   14002ee20:	call   0x140036250
   14002ee25:	test   eax,eax
   14002ee27:	jne    0x14002ee7f
   14002ee29:	mov    rbx,QWORD PTR [rip+0x3b170]        # 0x140069fa0
   14002ee30:	test   rbx,rbx
   14002ee33:	je     0x14002ee7f
   14002ee35:	test   rsi,rsi
   14002ee38:	je     0x14002ee7f
   14002ee3a:	mov    rcx,rsi
   14002ee3d:	call   0x140035dd0
   14002ee42:	mov    rdi,rax
   14002ee45:	mov    rcx,QWORD PTR [rbx]
   14002ee48:	test   rcx,rcx
   14002ee4b:	je     0x14002ee7f
   14002ee4d:	call   0x140035dd0
   14002ee52:	cmp    rax,rdi
   14002ee55:	jbe    0x14002ee6f
   14002ee57:	mov    rcx,QWORD PTR [rbx]
   14002ee5a:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   14002ee5e:	jne    0x14002ee6f
   14002ee60:	mov    r8,rdi
   14002ee63:	mov    rdx,rsi
   14002ee66:	call   0x140036248
   14002ee6b:	test   eax,eax
   14002ee6d:	je     0x14002ee75
   14002ee6f:	add    rbx,0x8
   14002ee73:	jmp    0x14002ee45
   14002ee75:	mov    rax,QWORD PTR [rbx]
   14002ee78:	lea    rax,[rax+rdi*1+0x1]
   14002ee7d:	jmp    0x14002ee81
   14002ee7f:	xor    eax,eax
   14002ee81:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ee86:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ee8b:	add    rsp,0x20
   14002ee8f:	pop    rdi
   14002ee90:	ret    
   14002ee91:	int3   
   14002ee92:	int3   
   14002ee93:	int3   
   14002ee94:	rex push rbx
   14002ee96:	sub    rsp,0x30
   14002ee9a:	mov    rbx,rcx
   14002ee9d:	xor    eax,eax
   14002ee9f:	test   rcx,rcx
   14002eea2:	setne  al
   14002eea5:	test   eax,eax
   14002eea7:	jne    0x14002eecd
   14002eea9:	call   0x14002b3f4
   14002eeae:	mov    DWORD PTR [rax],0x16
   14002eeb4:	and    QWORD PTR [rsp+0x20],0x0
   14002eeba:	xor    r9d,r9d
   14002eebd:	xor    r8d,r8d
   14002eec0:	xor    edx,edx
   14002eec2:	xor    ecx,ecx
   14002eec4:	call   0x140031aac
   14002eec9:	xor    eax,eax
   14002eecb:	jmp    0x14002ef2d
   14002eecd:	mov    edx,0x7fff
   14002eed2:	call   0x140034aa8
   14002eed7:	xor    ecx,ecx
   14002eed9:	cmp    rax,0x7fff
   14002eedf:	setb   cl
   14002eee2:	test   ecx,ecx
   14002eee4:	jne    0x14002ef0a
   14002eee6:	call   0x14002b3f4
   14002eeeb:	mov    DWORD PTR [rax],0x16
   14002eef1:	and    QWORD PTR [rsp+0x20],0x0
   14002eef7:	xor    r9d,r9d
   14002eefa:	xor    r8d,r8d
   14002eefd:	xor    edx,edx
   14002eeff:	xor    ecx,ecx
   14002ef01:	call   0x140031aac
   14002ef06:	xor    eax,eax
   14002ef08:	jmp    0x14002ef2d
   14002ef0a:	mov    ecx,0x7
   14002ef0f:	call   0x14002fd94
   14002ef14:	nop
   14002ef15:	mov    rcx,rbx
   14002ef18:	call   0x14002edf0
   14002ef1d:	mov    rbx,rax
   14002ef20:	mov    ecx,0x7
   14002ef25:	call   0x14002fc94
   14002ef2a:	mov    rax,rbx
   14002ef2d:	add    rsp,0x30
   14002ef31:	pop    rbx
   14002ef32:	ret    
   14002ef33:	int3   
   14002ef34:	mov    QWORD PTR [rsp+0x10],rdx
   14002ef39:	mov    QWORD PTR [rsp+0x18],r8
   14002ef3e:	mov    QWORD PTR [rsp+0x20],r9
   14002ef43:	push   rbx
   14002ef44:	sub    rsp,0x60
   14002ef48:	test   rdx,rdx
   14002ef4b:	jne    0x14002ef72
   14002ef4d:	call   0x14002b3f4
   14002ef52:	and    QWORD PTR [rsp+0x20],0x0
   14002ef58:	xor    r9d,r9d
   14002ef5b:	xor    r8d,r8d
   14002ef5e:	xor    edx,edx
   14002ef60:	xor    ecx,ecx
   14002ef62:	mov    DWORD PTR [rax],0x16
   14002ef68:	call   0x140031aac
   14002ef6d:	or     eax,0xffffffff
   14002ef70:	jmp    0x14002efc7
   14002ef72:	test   rcx,rcx
   14002ef75:	je     0x14002ef4d
   14002ef77:	mov    QWORD PTR [rsp+0x40],rcx
   14002ef7c:	mov    QWORD PTR [rsp+0x30],rcx
   14002ef81:	lea    r9,[rsp+0x80]
   14002ef89:	lea    rcx,[rsp+0x30]
   14002ef8e:	xor    r8d,r8d
   14002ef91:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   14002ef99:	mov    DWORD PTR [rsp+0x48],0x42
   14002efa1:	call   0x140030e94
   14002efa6:	sub    DWORD PTR [rsp+0x38],0x1
   14002efab:	mov    ebx,eax
   14002efad:	js     0x14002efb9
   14002efaf:	mov    rcx,QWORD PTR [rsp+0x30]
   14002efb4:	mov    BYTE PTR [rcx],0x0
   14002efb7:	jmp    0x14002efc5
   14002efb9:	lea    rdx,[rsp+0x30]
   14002efbe:	xor    ecx,ecx
   14002efc0:	call   0x140036344
   14002efc5:	mov    eax,ebx
   14002efc7:	add    rsp,0x60
   14002efcb:	pop    rbx
   14002efcc:	ret    
   14002efcd:	int3   
   14002efce:	int3   
   14002efcf:	int3   
   14002efd0:	xor    edx,edx
   14002efd2:	lea    r8d,[rdx+0xa]
   14002efd6:	jmp    0x14002b7ac
   14002efdb:	int3   
   14002efdc:	xor    r11d,r11d
   14002efdf:	mov    r10,rdx
   14002efe2:	mov    r8,rcx
   14002efe5:	cmp    BYTE PTR [rdx],r11b
   14002efe8:	jne    0x14002efee
   14002efea:	mov    rax,rcx
   14002efed:	ret    
   14002efee:	mov    al,BYTE PTR [rcx]
   14002eff0:	cmp    al,r11b
   14002eff3:	je     0x14002f030
   14002eff5:	mov    r9,rcx
   14002eff8:	sub    r9,rdx
   14002effb:	mov    rdx,r10
   14002effe:	cmp    al,r11b
   14002f001:	je     0x14002f01d
   14002f003:	cmp    BYTE PTR [rdx],r11b
   14002f006:	je     0x14002f033
   14002f008:	movsx  ecx,BYTE PTR [r9+rdx*1]
   14002f00d:	movsx  eax,BYTE PTR [rdx]
   14002f010:	cmp    ecx,eax
   14002f012:	jne    0x14002f01d
   14002f014:	inc    rdx
   14002f017:	cmp    BYTE PTR [r9+rdx*1],r11b
   14002f01b:	jne    0x14002f003
   14002f01d:	cmp    BYTE PTR [rdx],r11b
   14002f020:	je     0x14002f033
   14002f022:	inc    r8
   14002f025:	inc    r9
   14002f028:	mov    al,BYTE PTR [r8]
   14002f02b:	cmp    al,r11b
   14002f02e:	jne    0x14002effb
   14002f030:	xor    eax,eax
   14002f032:	ret    
   14002f033:	mov    rax,r8
   14002f036:	ret    
   14002f037:	int3   
   14002f038:	mov    QWORD PTR [rsp+0x20],rbx
   14002f03d:	push   rbp
   14002f03e:	push   rsi
   14002f03f:	push   rdi
   14002f040:	push   r12
   14002f042:	push   r13
   14002f044:	push   r14
   14002f046:	push   r15
   14002f048:	mov    eax,0x1b30
   14002f04d:	call   0x14003c600
   14002f052:	sub    rsp,rax
   14002f055:	mov    rax,QWORD PTR [rip+0x37854]        # 0x1400668b0
   14002f05c:	xor    rax,rsp
   14002f05f:	mov    QWORD PTR [rsp+0x1b20],rax
   14002f067:	xor    ebp,ebp
   14002f069:	xor    edi,edi
   14002f06b:	mov    r13d,r8d
   14002f06e:	mov    r12,rdx
   14002f071:	movsxd rbx,ecx
   14002f074:	mov    DWORD PTR [rsp+0x40],ebp
   14002f078:	test   r8d,r8d
   14002f07b:	jne    0x14002f084
   14002f07d:	xor    eax,eax
   14002f07f:	jmp    0x14002f76b
   14002f084:	test   rdx,rdx
   14002f087:	jne    0x14002f0b7
   14002f089:	call   0x14002b414
   14002f08e:	and    DWORD PTR [rax],edi
   14002f090:	call   0x14002b3f4
   14002f095:	and    QWORD PTR [rsp+0x20],rdi
   14002f09a:	xor    r9d,r9d
   14002f09d:	xor    r8d,r8d
   14002f0a0:	xor    edx,edx
   14002f0a2:	xor    ecx,ecx
   14002f0a4:	mov    DWORD PTR [rax],0x16
   14002f0aa:	call   0x140031aac
   14002f0af:	or     eax,0xffffffff
   14002f0b2:	jmp    0x14002f76b
   14002f0b7:	mov    r15,rbx
   14002f0ba:	mov    r14,rbx
   14002f0bd:	lea    rax,[rip+0x3ba3c]        # 0x14006ab00
   14002f0c4:	sar    r14,0x5
   14002f0c8:	and    r15d,0x1f
   14002f0cc:	mov    rcx,QWORD PTR [rax+r14*8]
   14002f0d0:	mov    QWORD PTR [rsp+0x50],r14
   14002f0d5:	imul   r15,r15,0x58
   14002f0d9:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   14002f0de:	add    sil,sil
   14002f0e1:	sar    sil,1
   14002f0e4:	cmp    sil,0x2
   14002f0e8:	je     0x14002f0f0
   14002f0ea:	cmp    sil,0x1
   14002f0ee:	jne    0x14002f0f9
   14002f0f0:	mov    eax,r13d
   14002f0f3:	not    eax
   14002f0f5:	test   al,0x1
   14002f0f7:	je     0x14002f089
   14002f0f9:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   14002f0ff:	je     0x14002f10e
   14002f101:	xor    edx,edx
   14002f103:	mov    ecx,ebx
   14002f105:	lea    r8d,[rdx+0x2]
   14002f109:	call   0x140034dd4
   14002f10e:	mov    ecx,ebx
   14002f110:	call   0x1400365e8
   14002f115:	test   eax,eax
   14002f117:	je     0x14002f40e
   14002f11d:	lea    rax,[rip+0x3b9dc]        # 0x14006ab00
   14002f124:	mov    rax,QWORD PTR [rax+r14*8]
   14002f128:	test   BYTE PTR [r15+rax*1+0x8],0x80
   14002f12e:	je     0x14002f40e
   14002f134:	call   0x140031e48
   14002f139:	xor    ebx,ebx
   14002f13b:	lea    rdx,[rsp+0x58]
   14002f140:	mov    rcx,QWORD PTR [rax+0xc0]
   14002f147:	lea    rax,[rip+0x3b9b2]        # 0x14006ab00
   14002f14e:	cmp    DWORD PTR [rcx+0x14],ebx
   14002f151:	mov    rcx,QWORD PTR [rax+r14*8]
   14002f155:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002f159:	sete   bl
   14002f15c:	call   QWORD PTR [rip+0xdffe]        # 0x14003d160
   14002f162:	test   eax,eax
   14002f164:	je     0x14002f40e
   14002f16a:	test   ebx,ebx
   14002f16c:	je     0x14002f177
   14002f16e:	test   sil,sil
   14002f171:	je     0x14002f40e
   14002f177:	call   QWORD PTR [rip+0xdfdb]        # 0x14003d158
   14002f17d:	and    DWORD PTR [rsp+0x4c],edi
   14002f181:	mov    rbx,r12
   14002f184:	mov    DWORD PTR [rsp+0x58],eax
   14002f188:	test   r13d,r13d
   14002f18b:	je     0x14002f408
   14002f191:	mov    r14d,DWORD PTR [rsp+0x58]
   14002f196:	mov    ebp,0xd
   14002f19b:	test   sil,sil
   14002f19e:	jne    0x14002f327
   14002f1a4:	mov    rdx,QWORD PTR [rsp+0x50]
   14002f1a9:	mov    cl,BYTE PTR [rbx]
   14002f1ab:	xor    r14d,r14d
   14002f1ae:	cmp    cl,0xa
   14002f1b1:	lea    rbp,[rip+0x3b948]        # 0x14006ab00
   14002f1b8:	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
   14002f1bd:	sete   r14b
   14002f1c1:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   14002f1c7:	je     0x14002f1e9
   14002f1c9:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   14002f1ce:	mov    BYTE PTR [rsp+0x5d],cl
   14002f1d2:	mov    r8d,0x2
   14002f1d8:	mov    BYTE PTR [rsp+0x5c],al
   14002f1dc:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   14002f1e2:	lea    rdx,[rsp+0x5c]
   14002f1e7:	jmp    0x14002f232
   14002f1e9:	movsx  ecx,cl
   14002f1ec:	call   0x140034d8c
   14002f1f1:	test   eax,eax
   14002f1f3:	je     0x14002f229
   14002f1f5:	mov    rax,r13
   14002f1f8:	sub    rax,rbx
   14002f1fb:	add    rax,r12
   14002f1fe:	cmp    rax,0x1
   14002f202:	jle    0x14002f3d7
   14002f208:	lea    rcx,[rsp+0x44]
   14002f20d:	mov    r8d,0x2
   14002f213:	mov    rdx,rbx
   14002f216:	call   0x14002d020
   14002f21b:	cmp    eax,0xffffffff
   14002f21e:	je     0x14002f39a
   14002f224:	inc    rbx
   14002f227:	jmp    0x14002f245
   14002f229:	mov    r8d,0x1
   14002f22f:	mov    rdx,rbx
   14002f232:	lea    rcx,[rsp+0x44]
   14002f237:	call   0x14002d020
   14002f23c:	cmp    eax,0xffffffff
   14002f23f:	je     0x14002f39a
   14002f245:	and    QWORD PTR [rsp+0x38],0x0
   14002f24b:	and    QWORD PTR [rsp+0x30],0x0
   14002f251:	mov    ecx,DWORD PTR [rsp+0x58]
   14002f255:	lea    rax,[rsp+0x5c]
   14002f25a:	lea    r8,[rsp+0x44]
   14002f25f:	mov    r9d,0x1
   14002f265:	xor    edx,edx
   14002f267:	mov    DWORD PTR [rsp+0x28],0x5
   14002f26f:	inc    rbx
   14002f272:	mov    QWORD PTR [rsp+0x20],rax
   14002f277:	call   QWORD PTR [rip+0xde1b]        # 0x14003d098
   14002f27d:	mov    ebp,eax
   14002f27f:	test   eax,eax
   14002f281:	je     0x14002f39a
   14002f287:	mov    rax,QWORD PTR [rsp+0x50]
   14002f28c:	and    QWORD PTR [rsp+0x20],0x0
   14002f292:	lea    rcx,[rip+0x3b867]        # 0x14006ab00
   14002f299:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002f29d:	lea    r9,[rsp+0x4c]
   14002f2a2:	lea    rdx,[rsp+0x5c]
   14002f2a7:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002f2ab:	mov    r8d,ebp
   14002f2ae:	call   QWORD PTR [rip+0xde9c]        # 0x14003d150
   14002f2b4:	test   eax,eax
   14002f2b6:	je     0x14002f3fe
   14002f2bc:	mov    edi,ebx
   14002f2be:	sub    edi,r12d
   14002f2c1:	add    edi,DWORD PTR [rsp+0x40]
   14002f2c5:	cmp    DWORD PTR [rsp+0x4c],ebp
   14002f2c9:	jl     0x14002f39a
   14002f2cf:	mov    ebp,0xd
   14002f2d4:	test   r14d,r14d
   14002f2d7:	je     0x14002f38c
   14002f2dd:	mov    rax,QWORD PTR [rsp+0x50]
   14002f2e2:	and    QWORD PTR [rsp+0x20],0x0
   14002f2e8:	mov    BYTE PTR [rsp+0x5c],bpl
   14002f2ed:	lea    rcx,[rip+0x3b80c]        # 0x14006ab00
   14002f2f4:	lea    r9,[rsp+0x4c]
   14002f2f9:	lea    r8d,[rbp-0xc]
   14002f2fd:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002f301:	lea    rdx,[rsp+0x5c]
   14002f306:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002f30a:	call   QWORD PTR [rip+0xde40]        # 0x14003d150
   14002f310:	test   eax,eax
   14002f312:	je     0x14002f3fe
   14002f318:	cmp    DWORD PTR [rsp+0x4c],0x1
   14002f31d:	jl     0x14002f39a
   14002f31f:	inc    DWORD PTR [rsp+0x40]
   14002f323:	inc    edi
   14002f325:	jmp    0x14002f38c
   14002f327:	cmp    sil,0x1
   14002f32b:	je     0x14002f333
   14002f32d:	cmp    sil,0x2
   14002f331:	jne    0x14002f34a
   14002f333:	movzx  eax,WORD PTR [rbx]
   14002f336:	xor    r14d,r14d
   14002f339:	cmp    ax,0xa
   14002f33d:	mov    WORD PTR [rsp+0x44],ax
   14002f342:	sete   r14b
   14002f346:	add    rbx,0x2
   14002f34a:	cmp    sil,0x1
   14002f34e:	je     0x14002f356
   14002f350:	cmp    sil,0x2
   14002f354:	jne    0x14002f38c
   14002f356:	movzx  ecx,WORD PTR [rsp+0x44]
   14002f35b:	call   0x1400364d4
   14002f360:	cmp    ax,WORD PTR [rsp+0x44]
   14002f365:	jne    0x14002f3fe
   14002f36b:	add    edi,0x2
   14002f36e:	test   r14d,r14d
   14002f371:	je     0x14002f38c
   14002f373:	mov    ecx,ebp
   14002f375:	mov    WORD PTR [rsp+0x44],bp
   14002f37a:	call   0x1400364d4
   14002f37f:	cmp    ax,WORD PTR [rsp+0x44]
   14002f384:	jne    0x14002f3fe
   14002f386:	inc    edi
   14002f388:	inc    DWORD PTR [rsp+0x40]
   14002f38c:	mov    eax,ebx
   14002f38e:	sub    eax,r12d
   14002f391:	cmp    eax,r13d
   14002f394:	jb     0x14002f19b
   14002f39a:	mov    ebx,DWORD PTR [rsp+0x4c]
   14002f39e:	mov    r14,QWORD PTR [rsp+0x50]
   14002f3a3:	mov    ebp,DWORD PTR [rsp+0x40]
   14002f3a7:	test   edi,edi
   14002f3a9:	jne    0x14002f767
   14002f3af:	test   ebx,ebx
   14002f3b1:	je     0x14002f731
   14002f3b7:	cmp    ebx,0x5
   14002f3ba:	jne    0x14002f725
   14002f3c0:	call   0x14002b3f4
   14002f3c5:	mov    DWORD PTR [rax],0x9
   14002f3cb:	call   0x14002b414
   14002f3d0:	mov    DWORD PTR [rax],ebx
   14002f3d2:	jmp    0x14002f0af
   14002f3d7:	mov    al,BYTE PTR [rbx]
   14002f3d9:	mov    r14,QWORD PTR [rsp+0x50]
   14002f3de:	inc    edi
   14002f3e0:	mov    rcx,QWORD PTR [rbp+r14*8+0x0]
   14002f3e5:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   14002f3ea:	mov    rax,QWORD PTR [rbp+r14*8+0x0]
   14002f3ef:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   14002f3f8:	mov    ebx,DWORD PTR [rsp+0x4c]
   14002f3fc:	jmp    0x14002f3a3
   14002f3fe:	call   QWORD PTR [rip+0xdf34]        # 0x14003d338
   14002f404:	mov    ebx,eax
   14002f406:	jmp    0x14002f39e
   14002f408:	mov    ebx,DWORD PTR [rsp+0x4c]
   14002f40c:	jmp    0x14002f3af
   14002f40e:	lea    rax,[rip+0x3b6eb]        # 0x14006ab00
   14002f415:	mov    rcx,QWORD PTR [rax+r14*8]
   14002f419:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   14002f41f:	je     0x14002f6ef
   14002f425:	xor    ebx,ebx
   14002f427:	mov    rbp,r12
   14002f42a:	test   sil,sil
   14002f42d:	jne    0x14002f503
   14002f433:	test   r13d,r13d
   14002f436:	je     0x14002f738
   14002f43c:	lea    edx,[rbx+0xd]
   14002f43f:	mov    r14d,DWORD PTR [rsp+0x40]
   14002f444:	lea    rsi,[rsp+0x720]
   14002f44c:	xor    ecx,ecx
   14002f44e:	mov    eax,ebp
   14002f450:	sub    eax,r12d
   14002f453:	cmp    eax,r13d
   14002f456:	jae    0x14002f47e
   14002f458:	mov    al,BYTE PTR [rbp+0x0]
   14002f45b:	inc    rbp
   14002f45e:	cmp    al,0xa
   14002f460:	jne    0x14002f46d
   14002f462:	mov    BYTE PTR [rsi],dl
   14002f464:	inc    r14d
   14002f467:	inc    rsi
   14002f46a:	inc    rcx
   14002f46d:	inc    rcx
   14002f470:	mov    BYTE PTR [rsi],al
   14002f472:	inc    rsi
   14002f475:	cmp    rcx,0x13ff
   14002f47c:	jb     0x14002f44e
   14002f47e:	and    QWORD PTR [rsp+0x20],rbx
   14002f483:	lea    rax,[rsp+0x720]
   14002f48b:	mov    r8d,esi
   14002f48e:	sub    r8d,eax
   14002f491:	lea    rax,[rip+0x3b668]        # 0x14006ab00
   14002f498:	mov    DWORD PTR [rsp+0x40],r14d
   14002f49d:	mov    r14,QWORD PTR [rsp+0x50]
   14002f4a2:	lea    r9,[rsp+0x48]
   14002f4a7:	lea    rdx,[rsp+0x720]
   14002f4af:	mov    rcx,QWORD PTR [rax+r14*8]
   14002f4b3:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002f4b7:	call   QWORD PTR [rip+0xdc93]        # 0x14003d150
   14002f4bd:	test   eax,eax
   14002f4bf:	je     0x14002f4f6
   14002f4c1:	add    edi,DWORD PTR [rsp+0x48]
   14002f4c5:	lea    rax,[rsp+0x720]
   14002f4cd:	sub    rsi,rax
   14002f4d0:	movsxd rax,DWORD PTR [rsp+0x48]
   14002f4d5:	cmp    rax,rsi
   14002f4d8:	jl     0x14002f3a3
   14002f4de:	mov    eax,ebp
   14002f4e0:	mov    edx,0xd
   14002f4e5:	sub    eax,r12d
   14002f4e8:	cmp    eax,r13d
   14002f4eb:	jb     0x14002f43f
   14002f4f1:	jmp    0x14002f3a3
   14002f4f6:	call   QWORD PTR [rip+0xde3c]        # 0x14003d338
   14002f4fc:	mov    ebx,eax
   14002f4fe:	jmp    0x14002f3a3
   14002f503:	cmp    sil,0x2
   14002f507:	jne    0x14002f5e1
   14002f50d:	test   r13d,r13d
   14002f510:	je     0x14002f738
   14002f516:	mov    edx,0xd
   14002f51b:	mov    r14d,DWORD PTR [rsp+0x40]
   14002f520:	lea    rsi,[rsp+0x720]
   14002f528:	xor    ecx,ecx
   14002f52a:	mov    eax,ebp
   14002f52c:	sub    eax,r12d
   14002f52f:	cmp    eax,r13d
   14002f532:	jae    0x14002f565
   14002f534:	movzx  eax,WORD PTR [rbp+0x0]
   14002f538:	add    rbp,0x2
   14002f53c:	cmp    ax,0xa
   14002f540:	jne    0x14002f551
   14002f542:	mov    WORD PTR [rsi],dx
   14002f545:	add    r14d,0x2
   14002f549:	add    rsi,0x2
   14002f54d:	add    rcx,0x2
   14002f551:	add    rcx,0x2
   14002f555:	mov    WORD PTR [rsi],ax
   14002f558:	add    rsi,0x2
   14002f55c:	cmp    rcx,0x13fe
   14002f563:	jb     0x14002f52a
   14002f565:	and    QWORD PTR [rsp+0x20],rbx
   14002f56a:	lea    rax,[rsp+0x720]
   14002f572:	mov    r8d,esi
   14002f575:	sub    r8d,eax
   14002f578:	lea    rax,[rip+0x3b581]        # 0x14006ab00
   14002f57f:	mov    DWORD PTR [rsp+0x40],r14d
   14002f584:	mov    r14,QWORD PTR [rsp+0x50]
   14002f589:	lea    r9,[rsp+0x48]
   14002f58e:	lea    rdx,[rsp+0x720]
   14002f596:	mov    rcx,QWORD PTR [rax+r14*8]
   14002f59a:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002f59e:	call   QWORD PTR [rip+0xdbac]        # 0x14003d150
   14002f5a4:	test   eax,eax
   14002f5a6:	je     0x14002f4f6
   14002f5ac:	add    edi,DWORD PTR [rsp+0x48]
   14002f5b0:	lea    rax,[rsp+0x720]
   14002f5b8:	sub    rsi,rax
   14002f5bb:	movsxd rax,DWORD PTR [rsp+0x48]
   14002f5c0:	cmp    rax,rsi
   14002f5c3:	jl     0x14002f3a3
   14002f5c9:	mov    eax,ebp
   14002f5cb:	mov    edx,0xd
   14002f5d0:	sub    eax,r12d
   14002f5d3:	cmp    eax,r13d
   14002f5d6:	jb     0x14002f51b
   14002f5dc:	jmp    0x14002f3a3
   14002f5e1:	test   r13d,r13d
   14002f5e4:	je     0x14002f738
   14002f5ea:	mov    r8d,0xd
   14002f5f0:	lea    rcx,[rsp+0x70]
   14002f5f5:	xor    edx,edx
   14002f5f7:	mov    eax,ebp
   14002f5f9:	sub    eax,r12d
   14002f5fc:	cmp    eax,r13d
   14002f5ff:	jae    0x14002f62f
   14002f601:	movzx  eax,WORD PTR [rbp+0x0]
   14002f605:	add    rbp,0x2
   14002f609:	cmp    ax,0xa
   14002f60d:	jne    0x14002f61b
   14002f60f:	mov    WORD PTR [rcx],r8w
   14002f613:	add    rcx,0x2
   14002f617:	add    rdx,0x2
   14002f61b:	add    rdx,0x2
   14002f61f:	mov    WORD PTR [rcx],ax
   14002f622:	add    rcx,0x2
   14002f626:	cmp    rdx,0x6a8
   14002f62d:	jb     0x14002f5f7
   14002f62f:	and    QWORD PTR [rsp+0x38],0x0
   14002f635:	and    QWORD PTR [rsp+0x30],0x0
   14002f63b:	lea    rax,[rsp+0x70]
   14002f640:	sub    ecx,eax
   14002f642:	lea    r8,[rsp+0x70]
   14002f647:	mov    DWORD PTR [rsp+0x28],0xd55
   14002f64f:	mov    eax,ecx
   14002f651:	mov    ecx,0xfde9
   14002f656:	cdq    
   14002f657:	sub    eax,edx
   14002f659:	xor    edx,edx
   14002f65b:	sar    eax,1
   14002f65d:	mov    r9d,eax
   14002f660:	lea    rax,[rsp+0x720]
   14002f668:	mov    QWORD PTR [rsp+0x20],rax
   14002f66d:	call   QWORD PTR [rip+0xda25]        # 0x14003d098
   14002f673:	mov    r14d,eax
   14002f676:	test   eax,eax
   14002f678:	je     0x14002f3fe
   14002f67e:	xor    esi,esi
   14002f680:	mov    rax,QWORD PTR [rsp+0x50]
   14002f685:	and    QWORD PTR [rsp+0x20],0x0
   14002f68b:	movsxd rcx,esi
   14002f68e:	lea    rdx,[rsp+rcx*1+0x720]
   14002f696:	mov    r8d,r14d
   14002f699:	lea    rcx,[rip+0x3b460]        # 0x14006ab00
   14002f6a0:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002f6a4:	lea    r9,[rsp+0x48]
   14002f6a9:	sub    r8d,esi
   14002f6ac:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002f6b0:	call   QWORD PTR [rip+0xda9a]        # 0x14003d150
   14002f6b6:	test   eax,eax
   14002f6b8:	je     0x14002f6c5
   14002f6ba:	add    esi,DWORD PTR [rsp+0x48]
   14002f6be:	cmp    r14d,esi
   14002f6c1:	jg     0x14002f680
   14002f6c3:	jmp    0x14002f6cd
   14002f6c5:	call   QWORD PTR [rip+0xdc6d]        # 0x14003d338
   14002f6cb:	mov    ebx,eax
   14002f6cd:	cmp    r14d,esi
   14002f6d0:	jg     0x14002f39e
   14002f6d6:	mov    edi,ebp
   14002f6d8:	mov    r8d,0xd
   14002f6de:	sub    edi,r12d
   14002f6e1:	cmp    edi,r13d
   14002f6e4:	jb     0x14002f5f0
   14002f6ea:	jmp    0x14002f39e
   14002f6ef:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002f6f3:	and    QWORD PTR [rsp+0x20],rdi
   14002f6f8:	lea    r9,[rsp+0x48]
   14002f6fd:	mov    r8d,r13d
   14002f700:	mov    rdx,r12
   14002f703:	call   QWORD PTR [rip+0xda47]        # 0x14003d150
   14002f709:	test   eax,eax
   14002f70b:	je     0x14002f718
   14002f70d:	mov    edi,DWORD PTR [rsp+0x48]
   14002f711:	xor    ebx,ebx
   14002f713:	jmp    0x14002f3a7
   14002f718:	call   QWORD PTR [rip+0xdc1a]        # 0x14003d338
   14002f71e:	mov    ebx,eax
   14002f720:	jmp    0x14002f3a7
   14002f725:	mov    ecx,ebx
   14002f727:	call   0x14002b434
   14002f72c:	jmp    0x14002f0af
   14002f731:	lea    rax,[rip+0x3b3c8]        # 0x14006ab00
   14002f738:	mov    rax,QWORD PTR [rax+r14*8]
   14002f73c:	test   BYTE PTR [r15+rax*1+0x8],0x40
   14002f742:	je     0x14002f74f
   14002f744:	cmp    BYTE PTR [r12],0x1a
   14002f749:	je     0x14002f07d
   14002f74f:	call   0x14002b3f4
   14002f754:	mov    DWORD PTR [rax],0x1c
   14002f75a:	call   0x14002b414
   14002f75f:	and    DWORD PTR [rax],0x0
   14002f762:	jmp    0x14002f0af
   14002f767:	sub    edi,ebp
   14002f769:	mov    eax,edi
   14002f76b:	mov    rcx,QWORD PTR [rsp+0x1b20]
   14002f773:	xor    rcx,rsp
   14002f776:	call   0x14002b250
   14002f77b:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14002f783:	add    rsp,0x1b30
   14002f78a:	pop    r15
   14002f78c:	pop    r14
   14002f78e:	pop    r13
   14002f790:	pop    r12
   14002f792:	pop    rdi
   14002f793:	pop    rsi
   14002f794:	pop    rbp
   14002f795:	ret    
   14002f796:	int3   
   14002f797:	int3   
   14002f798:	mov    QWORD PTR [rsp+0x10],rbx
   14002f79d:	mov    QWORD PTR [rsp+0x18],rsi
   14002f7a2:	mov    DWORD PTR [rsp+0x8],ecx
   14002f7a6:	push   rdi
   14002f7a7:	push   r12
   14002f7a9:	push   r13
   14002f7ab:	push   r14
   14002f7ad:	push   r15
   14002f7af:	sub    rsp,0x30
   14002f7b3:	mov    r12d,r8d
   14002f7b6:	mov    r13,rdx
   14002f7b9:	movsxd rbx,ecx
   14002f7bc:	cmp    ebx,0xfffffffe
   14002f7bf:	jne    0x14002f7dd
   14002f7c1:	call   0x14002b414
   14002f7c6:	xor    edi,edi
   14002f7c8:	mov    DWORD PTR [rax],edi
   14002f7ca:	call   0x14002b3f4
   14002f7cf:	mov    DWORD PTR [rax],0x9
   14002f7d5:	or     eax,0xffffffff
   14002f7d8:	jmp    0x14002f8b1
   14002f7dd:	xor    edi,edi
   14002f7df:	cmp    ebx,edi
   14002f7e1:	jl     0x14002f888
   14002f7e7:	cmp    ebx,DWORD PTR [rip+0x3b2f3]        # 0x14006aae0
   14002f7ed:	jae    0x14002f888
   14002f7f3:	mov    rsi,rbx
   14002f7f6:	mov    r14,rbx
   14002f7f9:	sar    r14,0x5
   14002f7fd:	lea    r15,[rip+0x3b2fc]        # 0x14006ab00
   14002f804:	and    esi,0x1f
   14002f807:	imul   rsi,rsi,0x58
   14002f80b:	mov    rax,QWORD PTR [r15+r14*8]
   14002f80f:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002f814:	and    ecx,0x1
   14002f817:	jne    0x14002f844
   14002f819:	call   0x14002b414
   14002f81e:	mov    DWORD PTR [rax],edi
   14002f820:	call   0x14002b3f4
   14002f825:	mov    DWORD PTR [rax],0x9
   14002f82b:	mov    QWORD PTR [rsp+0x20],rdi
   14002f830:	xor    r9d,r9d
   14002f833:	xor    r8d,r8d
   14002f836:	xor    edx,edx
   14002f838:	xor    ecx,ecx
   14002f83a:	call   0x140031aac
   14002f83f:	or     eax,0xffffffff
   14002f842:	jmp    0x14002f8b1
   14002f844:	mov    ecx,ebx
   14002f846:	call   0x14002dc50
   14002f84b:	nop
   14002f84c:	mov    rax,QWORD PTR [r15+r14*8]
   14002f850:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14002f855:	je     0x14002f868
   14002f857:	mov    r8d,r12d
   14002f85a:	mov    rdx,r13
   14002f85d:	mov    ecx,ebx
   14002f85f:	call   0x14002f038
   14002f864:	mov    edi,eax
   14002f866:	jmp    0x14002f87d
   14002f868:	call   0x14002b3f4
   14002f86d:	mov    DWORD PTR [rax],0x9
   14002f873:	call   0x14002b414
   14002f878:	mov    DWORD PTR [rax],edi
   14002f87a:	or     edi,0xffffffff
   14002f87d:	mov    ecx,ebx
   14002f87f:	call   0x14002dcf8
   14002f884:	mov    eax,edi
   14002f886:	jmp    0x14002f8b1
   14002f888:	call   0x14002b414
   14002f88d:	mov    DWORD PTR [rax],edi
   14002f88f:	call   0x14002b3f4
   14002f894:	mov    DWORD PTR [rax],0x9
   14002f89a:	mov    QWORD PTR [rsp+0x20],rdi
   14002f89f:	xor    r9d,r9d
   14002f8a2:	xor    r8d,r8d
   14002f8a5:	xor    edx,edx
   14002f8a7:	xor    ecx,ecx
   14002f8a9:	call   0x140031aac
   14002f8ae:	or     eax,0xffffffff
   14002f8b1:	mov    rbx,QWORD PTR [rsp+0x68]
   14002f8b6:	mov    rsi,QWORD PTR [rsp+0x70]
   14002f8bb:	add    rsp,0x30
   14002f8bf:	pop    r15
   14002f8c1:	pop    r14
   14002f8c3:	pop    r13
   14002f8c5:	pop    r12
   14002f8c7:	pop    rdi
   14002f8c8:	ret    
   14002f8c9:	int3   
   14002f8ca:	int3   
   14002f8cb:	int3   
   14002f8cc:	mov    QWORD PTR [rsp+0x18],rbx
   14002f8d1:	mov    DWORD PTR [rsp+0x8],ecx
   14002f8d5:	push   rsi
   14002f8d6:	push   rdi
   14002f8d7:	push   r12
   14002f8d9:	sub    rsp,0x30
   14002f8dd:	movsxd rdi,ecx
   14002f8e0:	cmp    edi,0xfffffffe
   14002f8e3:	jne    0x14002f8f8
   14002f8e5:	call   0x14002b3f4
   14002f8ea:	mov    DWORD PTR [rax],0x9
   14002f8f0:	or     eax,0xffffffff
   14002f8f3:	jmp    0x14002f9d1
   14002f8f8:	test   ecx,ecx
   14002f8fa:	js     0x14002f9ae
   14002f900:	cmp    edi,DWORD PTR [rip+0x3b1da]        # 0x14006aae0
   14002f906:	jae    0x14002f9ae
   14002f90c:	mov    rbx,rdi
   14002f90f:	mov    rsi,rdi
   14002f912:	sar    rsi,0x5
   14002f916:	lea    r12,[rip+0x3b1e3]        # 0x14006ab00
   14002f91d:	and    ebx,0x1f
   14002f920:	imul   rbx,rbx,0x58
   14002f924:	mov    rax,QWORD PTR [r12+rsi*8]
   14002f928:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14002f92d:	and    ecx,0x1
   14002f930:	jne    0x14002f957
   14002f932:	call   0x14002b3f4
   14002f937:	mov    DWORD PTR [rax],0x9
   14002f93d:	and    QWORD PTR [rsp+0x20],0x0
   14002f943:	xor    r9d,r9d
   14002f946:	xor    r8d,r8d
   14002f949:	xor    edx,edx
   14002f94b:	xor    ecx,ecx
   14002f94d:	call   0x140031aac
   14002f952:	or     eax,0xffffffff
   14002f955:	jmp    0x14002f9d1
   14002f957:	mov    ecx,edi
   14002f959:	call   0x14002dc50
   14002f95e:	nop
   14002f95f:	mov    rax,QWORD PTR [r12+rsi*8]
   14002f963:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002f968:	je     0x14002f995
   14002f96a:	mov    ecx,edi
   14002f96c:	call   0x14002dbcc
   14002f971:	mov    rcx,rax
   14002f974:	call   QWORD PTR [rip+0xd7ee]        # 0x14003d168
   14002f97a:	test   eax,eax
   14002f97c:	jne    0x14002f988
   14002f97e:	call   QWORD PTR [rip+0xd9b4]        # 0x14003d338
   14002f984:	mov    ebx,eax
   14002f986:	jmp    0x14002f98a
   14002f988:	xor    ebx,ebx
   14002f98a:	test   ebx,ebx
   14002f98c:	je     0x14002f9a3
   14002f98e:	call   0x14002b414
   14002f993:	mov    DWORD PTR [rax],ebx
   14002f995:	call   0x14002b3f4
   14002f99a:	mov    DWORD PTR [rax],0x9
   14002f9a0:	or     ebx,0xffffffff
   14002f9a3:	mov    ecx,edi
   14002f9a5:	call   0x14002dcf8
   14002f9aa:	mov    eax,ebx
   14002f9ac:	jmp    0x14002f9d1
   14002f9ae:	call   0x14002b3f4
   14002f9b3:	mov    DWORD PTR [rax],0x9
   14002f9b9:	and    QWORD PTR [rsp+0x20],0x0
   14002f9bf:	xor    r9d,r9d
   14002f9c2:	xor    r8d,r8d
   14002f9c5:	xor    edx,edx
   14002f9c7:	xor    ecx,ecx
   14002f9c9:	call   0x140031aac
   14002f9ce:	or     eax,0xffffffff
   14002f9d1:	mov    rbx,QWORD PTR [rsp+0x60]
   14002f9d6:	add    rsp,0x30
   14002f9da:	pop    r12
   14002f9dc:	pop    rdi
   14002f9dd:	pop    rsi
   14002f9de:	ret    
   14002f9df:	int3   
   14002f9e0:	mov    rax,rsp
   14002f9e3:	mov    QWORD PTR [rax+0x8],rbx
   14002f9e7:	mov    QWORD PTR [rax+0x18],rbp
   14002f9eb:	mov    QWORD PTR [rax+0x20],rsi
   14002f9ef:	mov    QWORD PTR [rax+0x10],rdx
   14002f9f3:	push   rdi
   14002f9f4:	push   r12
   14002f9f6:	push   r13
   14002f9f8:	push   r14
   14002f9fa:	push   r15
   14002f9fc:	sub    rsp,0x40
   14002fa00:	mov    r15,QWORD PTR [r9+0x8]
   14002fa04:	mov    r12,QWORD PTR [r9]
   14002fa07:	mov    rsi,QWORD PTR [r9+0x38]
   14002fa0b:	sub    r12,r15
   14002fa0e:	test   BYTE PTR [rcx+0x4],0x66
   14002fa12:	mov    r14,r9
   14002fa15:	mov    rbp,rdx
   14002fa18:	mov    r13,rcx
   14002fa1b:	jne    0x14002fafd
   14002fa21:	xor    edi,edi
   14002fa23:	mov    QWORD PTR [rax-0x38],rcx
   14002fa27:	mov    QWORD PTR [rax-0x30],r8
   14002fa2b:	cmp    DWORD PTR [rsi],edi
   14002fa2d:	jbe    0x14002fb5e
   14002fa33:	lea    rbx,[rsi+0xc]
   14002fa37:	mov    eax,DWORD PTR [rbx-0x8]
   14002fa3a:	cmp    r12,rax
   14002fa3d:	jb     0x14002faea
   14002fa43:	mov    eax,DWORD PTR [rbx-0x4]
   14002fa46:	cmp    r12,rax
   14002fa49:	jae    0x14002faea
   14002fa4f:	cmp    DWORD PTR [rbx+0x4],0x0
   14002fa53:	je     0x14002faea
   14002fa59:	cmp    DWORD PTR [rbx],0x1
   14002fa5c:	je     0x14002fa77
   14002fa5e:	mov    eax,DWORD PTR [rbx]
   14002fa60:	lea    rcx,[rsp+0x30]
   14002fa65:	mov    rdx,rbp
   14002fa68:	add    rax,r15
   14002fa6b:	call   rax
   14002fa6d:	test   eax,eax
   14002fa6f:	js     0x14002faf9
   14002fa75:	jle    0x14002faea
   14002fa77:	cmp    DWORD PTR [r13+0x0],0xe06d7363
   14002fa7f:	jne    0x14002faa9
   14002fa81:	cmp    QWORD PTR [rip+0x3b277],0x0        # 0x14006ad00
   14002fa89:	je     0x14002faa9
   14002fa8b:	lea    rcx,[rip+0x3b26e]        # 0x14006ad00
   14002fa92:	call   0x1400366e0
   14002fa97:	test   eax,eax
   14002fa99:	je     0x14002faa9
   14002fa9b:	mov    edx,0x1
   14002faa0:	mov    rcx,r13
   14002faa3:	call   QWORD PTR [rip+0x3b257]        # 0x14006ad00
   14002faa9:	mov    ecx,DWORD PTR [rbx+0x4]
   14002faac:	mov    r8d,0x1
   14002fab2:	mov    rdx,rbp
   14002fab5:	add    rcx,r15
   14002fab8:	call   0x140035c80
   14002fabd:	mov    rax,QWORD PTR [r14+0x40]
   14002fac1:	mov    edx,DWORD PTR [rbx+0x4]
   14002fac4:	movsxd r9,DWORD PTR [r13+0x0]
   14002fac8:	mov    QWORD PTR [rsp+0x28],rax
   14002facd:	mov    rax,QWORD PTR [r14+0x28]
   14002fad1:	add    rdx,r15
   14002fad4:	mov    r8,r13
   14002fad7:	mov    rcx,rbp
   14002fada:	mov    QWORD PTR [rsp+0x20],rax
   14002fadf:	call   QWORD PTR [rip+0xd68b]        # 0x14003d170
   14002fae5:	call   0x140035cb0
   14002faea:	inc    edi
   14002faec:	add    rbx,0x10
   14002faf0:	cmp    edi,DWORD PTR [rsi]
   14002faf2:	jae    0x14002fb5e
   14002faf4:	jmp    0x14002fa37
   14002faf9:	xor    eax,eax
   14002fafb:	jmp    0x14002fb63
   14002fafd:	mov    rdi,QWORD PTR [r9+0x20]
   14002fb01:	xor    ebp,ebp
   14002fb03:	sub    rdi,r15
   14002fb06:	cmp    DWORD PTR [rsi],ebp
   14002fb08:	jbe    0x14002fb5e
   14002fb0a:	lea    rbx,[rsi+0x10]
   14002fb0e:	mov    ecx,DWORD PTR [rbx-0xc]
   14002fb11:	cmp    r12,rcx
   14002fb14:	jb     0x14002fb54
   14002fb16:	mov    eax,DWORD PTR [rbx-0x8]
   14002fb19:	cmp    r12,rax
   14002fb1c:	jae    0x14002fb54
   14002fb1e:	cmp    rdi,rcx
   14002fb21:	jb     0x14002fb2f
   14002fb23:	cmp    rdi,rax
   14002fb26:	jae    0x14002fb2f
   14002fb28:	test   BYTE PTR [r13+0x4],0x20
   14002fb2d:	jne    0x14002fb5e
   14002fb2f:	cmp    DWORD PTR [rbx],0x0
   14002fb32:	je     0x14002fb3d
   14002fb34:	mov    eax,DWORD PTR [rbx]
   14002fb36:	cmp    rdi,rax
   14002fb39:	je     0x14002fb5e
   14002fb3b:	jmp    0x14002fb54
   14002fb3d:	mov    rdx,QWORD PTR [rsp+0x78]
   14002fb42:	add    rax,r15
   14002fb45:	mov    cl,0x1
   14002fb47:	mov    QWORD PTR [r14],rax
   14002fb4a:	mov    r8d,DWORD PTR [rbx-0x4]
   14002fb4e:	add    r8,r15
   14002fb51:	call   r8
   14002fb54:	inc    ebp
   14002fb56:	add    rbx,0x10
   14002fb5a:	cmp    ebp,DWORD PTR [rsi]
   14002fb5c:	jb     0x14002fb0e
   14002fb5e:	mov    eax,0x1
   14002fb63:	lea    r11,[rsp+0x40]
   14002fb68:	mov    rbx,QWORD PTR [r11+0x30]
   14002fb6c:	mov    rbp,QWORD PTR [r11+0x40]
   14002fb70:	mov    rsi,QWORD PTR [r11+0x48]
   14002fb74:	mov    rsp,r11
   14002fb77:	pop    r15
   14002fb79:	pop    r14
   14002fb7b:	pop    r13
   14002fb7d:	pop    r12
   14002fb7f:	pop    rdi
   14002fb80:	ret    
   14002fb81:	int3   
   14002fb82:	int3   
   14002fb83:	int3   
   14002fb84:	mov    QWORD PTR [rsp+0x8],rbx
   14002fb89:	mov    QWORD PTR [rsp+0x10],rsi
   14002fb8e:	mov    QWORD PTR [rsp+0x18],rdi
   14002fb93:	push   r12
   14002fb95:	sub    rsp,0x20
   14002fb99:	lea    r12,[rip+0x36fe0]        # 0x140066b80
   14002fba0:	xor    esi,esi
   14002fba2:	xor    edi,edi
   14002fba4:	mov    rbx,r12
   14002fba7:	cmp    DWORD PTR [rbx+0x8],0x1
   14002fbab:	jne    0x14002fbd2
   14002fbad:	movsxd rax,esi
   14002fbb0:	mov    edx,0xfa0
   14002fbb5:	inc    esi
   14002fbb7:	lea    rcx,[rax+rax*4]
   14002fbbb:	lea    rax,[rip+0x3a18e]        # 0x140069d50
   14002fbc2:	lea    rcx,[rax+rcx*8]
   14002fbc6:	mov    QWORD PTR [rbx],rcx
   14002fbc9:	call   0x140035e80
   14002fbce:	test   eax,eax
   14002fbd0:	je     0x14002fbff
   14002fbd2:	lea    rax,[rip+0x371e7]        # 0x140066dc0
   14002fbd9:	add    rbx,0x10
   14002fbdd:	inc    edi
   14002fbdf:	cmp    rbx,rax
   14002fbe2:	jl     0x14002fba7
   14002fbe4:	mov    eax,0x1
   14002fbe9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fbee:	mov    rsi,QWORD PTR [rsp+0x38]
   14002fbf3:	mov    rdi,QWORD PTR [rsp+0x40]
   14002fbf8:	add    rsp,0x20
   14002fbfc:	pop    r12
   14002fbfe:	ret    
   14002fbff:	movsxd rax,edi
   14002fc02:	add    rax,rax
   14002fc05:	and    QWORD PTR [r12+rax*8],0x0
   14002fc0a:	xor    eax,eax
   14002fc0c:	jmp    0x14002fbe9
   14002fc0e:	int3   
   14002fc0f:	int3   
   14002fc10:	mov    QWORD PTR [rsp+0x8],rbx
   14002fc15:	mov    QWORD PTR [rsp+0x10],rbp
   14002fc1a:	mov    QWORD PTR [rsp+0x18],rsi
   14002fc1f:	push   rdi
   14002fc20:	sub    rsp,0x20
   14002fc24:	lea    rbx,[rip+0x36f55]        # 0x140066b80
   14002fc2b:	lea    rbp,[rip+0x3718e]        # 0x140066dc0
   14002fc32:	mov    rdi,rbx
   14002fc35:	mov    rsi,QWORD PTR [rdi]
   14002fc38:	test   rsi,rsi
   14002fc3b:	je     0x14002fc58
   14002fc3d:	cmp    DWORD PTR [rdi+0x8],0x1
   14002fc41:	je     0x14002fc58
   14002fc43:	mov    rcx,rsi
   14002fc46:	call   QWORD PTR [rip+0xd484]        # 0x14003d0d0
   14002fc4c:	mov    rcx,rsi
   14002fc4f:	call   0x14002b36c
   14002fc54:	and    QWORD PTR [rdi],0x0
   14002fc58:	add    rdi,0x10
   14002fc5c:	cmp    rdi,rbp
   14002fc5f:	jl     0x14002fc35
   14002fc61:	mov    rcx,QWORD PTR [rbx]
   14002fc64:	test   rcx,rcx
   14002fc67:	je     0x14002fc75
   14002fc69:	cmp    DWORD PTR [rbx+0x8],0x1
   14002fc6d:	jne    0x14002fc75
   14002fc6f:	call   QWORD PTR [rip+0xd45b]        # 0x14003d0d0
   14002fc75:	add    rbx,0x10
   14002fc79:	cmp    rbx,rbp
   14002fc7c:	jl     0x14002fc61
   14002fc7e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fc83:	mov    rbp,QWORD PTR [rsp+0x38]
   14002fc88:	mov    rsi,QWORD PTR [rsp+0x40]
   14002fc8d:	add    rsp,0x20
   14002fc91:	pop    rdi
   14002fc92:	ret    
   14002fc93:	int3   
   14002fc94:	movsxd rcx,ecx
   14002fc97:	lea    rax,[rip+0x36ee2]        # 0x140066b80
   14002fc9e:	add    rcx,rcx
   14002fca1:	mov    rcx,QWORD PTR [rax+rcx*8]
   14002fca5:	rex.W jmp QWORD PTR [rip+0xd414]        # 0x14003d0c0
   14002fcac:	mov    QWORD PTR [rsp+0x8],rbx
   14002fcb1:	mov    QWORD PTR [rsp+0x10],rsi
   14002fcb6:	mov    QWORD PTR [rsp+0x18],rdi
   14002fcbb:	push   r13
   14002fcbd:	sub    rsp,0x20
   14002fcc1:	movsxd rbx,ecx
   14002fcc4:	mov    esi,0x1
   14002fcc9:	cmp    QWORD PTR [rip+0x3abdf],0x0        # 0x14006a8b0
   14002fcd1:	jne    0x14002fcea
   14002fcd3:	call   0x140030c28
   14002fcd8:	lea    ecx,[rsi+0x1d]
   14002fcdb:	call   0x140030a00
   14002fce0:	mov    ecx,0xff
   14002fce5:	call   0x1400303e4
   14002fcea:	mov    rdi,rbx
   14002fced:	add    rdi,rdi
   14002fcf0:	lea    r13,[rip+0x36e89]        # 0x140066b80
   14002fcf7:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14002fcfd:	je     0x14002fd03
   14002fcff:	mov    eax,esi
   14002fd01:	jmp    0x14002fd7e
   14002fd03:	mov    ecx,0x28
   14002fd08:	call   0x1400300c8
   14002fd0d:	mov    rbx,rax
   14002fd10:	test   rax,rax
   14002fd13:	jne    0x14002fd24
   14002fd15:	call   0x14002b3f4
   14002fd1a:	mov    DWORD PTR [rax],0xc
   14002fd20:	xor    eax,eax
   14002fd22:	jmp    0x14002fd7e
   14002fd24:	mov    ecx,0xa
   14002fd29:	call   0x14002fd94
   14002fd2e:	nop
   14002fd2f:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14002fd35:	jne    0x14002fd66
   14002fd37:	mov    edx,0xfa0
   14002fd3c:	mov    rcx,rbx
   14002fd3f:	call   0x140035e80
   14002fd44:	test   eax,eax
   14002fd46:	jne    0x14002fd5f
   14002fd48:	mov    rcx,rbx
   14002fd4b:	call   0x14002b36c
   14002fd50:	call   0x14002b3f4
   14002fd55:	mov    DWORD PTR [rax],0xc
   14002fd5b:	xor    esi,esi
   14002fd5d:	jmp    0x14002fd6f
   14002fd5f:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   14002fd64:	jmp    0x14002fd6f
   14002fd66:	mov    rcx,rbx
   14002fd69:	call   0x14002b36c
   14002fd6e:	nop
   14002fd6f:	mov    rcx,QWORD PTR [rip+0x36eaa]        # 0x140066c20
   14002fd76:	call   QWORD PTR [rip+0xd344]        # 0x14003d0c0
   14002fd7c:	mov    eax,esi
   14002fd7e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fd83:	mov    rsi,QWORD PTR [rsp+0x38]
   14002fd88:	mov    rdi,QWORD PTR [rsp+0x40]
   14002fd8d:	add    rsp,0x20
   14002fd91:	pop    r13
   14002fd93:	ret    
   14002fd94:	mov    QWORD PTR [rsp+0x8],rbx
   14002fd99:	push   rdi
   14002fd9a:	sub    rsp,0x20
   14002fd9e:	movsxd rbx,ecx
   14002fda1:	lea    rdi,[rip+0x36dd8]        # 0x140066b80
   14002fda8:	add    rbx,rbx
   14002fdab:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14002fdb0:	jne    0x14002fdc3
   14002fdb2:	call   0x14002fcac
   14002fdb7:	test   eax,eax
   14002fdb9:	jne    0x14002fdc3
   14002fdbb:	lea    ecx,[rax+0x11]
   14002fdbe:	call   0x140030378
   14002fdc3:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14002fdc7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002fdcc:	add    rsp,0x20
   14002fdd0:	pop    rdi
   14002fdd1:	rex.W jmp QWORD PTR [rip+0xd300]        # 0x14003d0d8
   14002fdd8:	mov    rax,rsp
   14002fddb:	mov    QWORD PTR [rax+0x8],rbx
   14002fddf:	mov    QWORD PTR [rax+0x10],rsi
   14002fde3:	mov    QWORD PTR [rax+0x18],rdi
   14002fde7:	mov    QWORD PTR [rax+0x20],r12
   14002fdeb:	push   r13
   14002fded:	push   r14
   14002fdef:	push   r15
   14002fdf1:	sub    rsp,0x90
   14002fdf8:	lea    rcx,[rsp+0x20]
   14002fdfd:	call   QWORD PTR [rip+0xd385]        # 0x14003d188
   14002fe03:	nop
   14002fe04:	mov    edx,0x58
   14002fe09:	lea    r12d,[rdx-0x38]
   14002fe0d:	mov    rcx,r12
   14002fe10:	call   0x140030134
   14002fe15:	mov    r11,rax
   14002fe18:	xor    r15d,r15d
   14002fe1b:	cmp    rax,r15
   14002fe1e:	jne    0x14002fe28
   14002fe20:	or     eax,0xffffffff
   14002fe23:	jmp    0x1400300a3
   14002fe28:	mov    QWORD PTR [rip+0x3acd1],rax        # 0x14006ab00
   14002fe2f:	mov    ecx,r12d
   14002fe32:	mov    DWORD PTR [rip+0x3aca8],ecx        # 0x14006aae0
   14002fe38:	add    rax,0xb00
   14002fe3e:	cmp    r11,rax
   14002fe41:	jae    0x14002fe86
   14002fe43:	mov    BYTE PTR [r11+0x8],r15b
   14002fe47:	or     QWORD PTR [r11],0xffffffffffffffff
   14002fe4b:	mov    BYTE PTR [r11+0x9],0xa
   14002fe50:	mov    DWORD PTR [r11+0xc],r15d
   14002fe54:	mov    BYTE PTR [r11+0x38],r15b
   14002fe58:	mov    BYTE PTR [r11+0x39],0xa
   14002fe5d:	mov    BYTE PTR [r11+0x3a],0xa
   14002fe62:	mov    DWORD PTR [r11+0x50],r15d
   14002fe66:	mov    BYTE PTR [r11+0x4c],r15b
   14002fe6a:	add    r11,0x58
   14002fe6e:	mov    rax,QWORD PTR [rip+0x3ac8b]        # 0x14006ab00
   14002fe75:	add    rax,0xb00
   14002fe7b:	cmp    r11,rax
   14002fe7e:	jb     0x14002fe43
   14002fe80:	mov    ecx,DWORD PTR [rip+0x3ac5a]        # 0x14006aae0
   14002fe86:	cmp    WORD PTR [rsp+0x62],r15w
   14002fe8c:	je     0x14002ffdb
   14002fe92:	mov    rax,QWORD PTR [rsp+0x68]
   14002fe97:	cmp    rax,r15
   14002fe9a:	je     0x14002ffdb
   14002fea0:	lea    r13,[rax+0x4]
   14002fea4:	movsxd rsi,DWORD PTR [rax]
   14002fea7:	add    rsi,r13
   14002feaa:	mov    ebx,0x800
   14002feaf:	cmp    DWORD PTR [rax],ebx
   14002feb1:	cmovl  ebx,DWORD PTR [rax]
   14002feb4:	mov    edi,0x1
   14002feb9:	cmp    ecx,ebx
   14002febb:	jge    0x14002ff4e
   14002fec1:	lea    r14,[rip+0x3ac38]        # 0x14006ab00
   14002fec8:	mov    edx,0x58
   14002fecd:	mov    rcx,r12
   14002fed0:	call   0x140030134
   14002fed5:	mov    r11,rax
   14002fed8:	cmp    rax,r15
   14002fedb:	je     0x14002ff46
   14002fedd:	mov    QWORD PTR [r14+rdi*8],rax
   14002fee1:	mov    eax,DWORD PTR [rip+0x3abf9]        # 0x14006aae0
   14002fee7:	add    eax,r12d
   14002feea:	mov    DWORD PTR [rip+0x3abf0],eax        # 0x14006aae0
   14002fef0:	lea    rcx,[r11+0xb00]
   14002fef7:	cmp    r11,rcx
   14002fefa:	jae    0x14002ff3d
   14002fefc:	mov    BYTE PTR [r11+0x8],r15b
   14002ff00:	or     QWORD PTR [r11],0xffffffffffffffff
   14002ff04:	mov    BYTE PTR [r11+0x9],0xa
   14002ff09:	mov    DWORD PTR [r11+0xc],r15d
   14002ff0d:	and    BYTE PTR [r11+0x38],0x80
   14002ff12:	mov    BYTE PTR [r11+0x39],0xa
   14002ff17:	mov    BYTE PTR [r11+0x3a],0xa
   14002ff1c:	mov    DWORD PTR [r11+0x50],r15d
   14002ff20:	mov    BYTE PTR [r11+0x4c],r15b
   14002ff24:	add    r11,0x58
   14002ff28:	mov    rax,QWORD PTR [r14+rdi*8]
   14002ff2c:	add    rax,0xb00
   14002ff32:	cmp    r11,rax
   14002ff35:	jb     0x14002fefc
   14002ff37:	mov    eax,DWORD PTR [rip+0x3aba3]        # 0x14006aae0
   14002ff3d:	inc    rdi
   14002ff40:	cmp    eax,ebx
   14002ff42:	jl     0x14002fec8
   14002ff44:	jmp    0x14002ff55
   14002ff46:	mov    ebx,DWORD PTR [rip+0x3ab94]        # 0x14006aae0
   14002ff4c:	jmp    0x14002ff55
   14002ff4e:	lea    r14,[rip+0x3abab]        # 0x14006ab00
   14002ff55:	mov    edi,r15d
   14002ff58:	cmp    ebx,r15d
   14002ff5b:	jle    0x14002ffdb
   14002ff5d:	cmp    QWORD PTR [rsi],0xffffffffffffffff
   14002ff61:	je     0x14002ffce
   14002ff63:	cmp    QWORD PTR [rsi],0xfffffffffffffffe
   14002ff67:	je     0x14002ffce
   14002ff69:	test   BYTE PTR [r13+0x0],0x1
   14002ff6e:	je     0x14002ffce
   14002ff70:	test   BYTE PTR [r13+0x0],0x8
   14002ff75:	jne    0x14002ff85
   14002ff77:	mov    rcx,QWORD PTR [rsi]
   14002ff7a:	call   QWORD PTR [rip+0xd1a8]        # 0x14003d128
   14002ff80:	cmp    eax,r15d
   14002ff83:	je     0x14002ffce
   14002ff85:	movsxd r12,edi
   14002ff88:	mov    rax,r12
   14002ff8b:	sar    rax,0x5
   14002ff8f:	and    r12d,0x1f
   14002ff93:	imul   r12,r12,0x58
   14002ff97:	add    r12,QWORD PTR [r14+rax*8]
   14002ff9b:	mov    rax,QWORD PTR [rsi]
   14002ff9e:	mov    QWORD PTR [r12],rax
   14002ffa2:	mov    al,BYTE PTR [r13+0x0]
   14002ffa6:	mov    BYTE PTR [r12+0x8],al
   14002ffab:	lea    rcx,[r12+0x10]
   14002ffb0:	mov    edx,0xfa0
   14002ffb5:	call   0x140035e80
   14002ffba:	cmp    eax,r15d
   14002ffbd:	je     0x14002ffc6
   14002ffbf:	inc    DWORD PTR [r12+0xc]
   14002ffc4:	jmp    0x14002ffce
   14002ffc6:	or     eax,0xffffffff
   14002ffc9:	jmp    0x1400300a3
   14002ffce:	inc    edi
   14002ffd0:	inc    r13
   14002ffd3:	add    rsi,0x8
   14002ffd7:	cmp    edi,ebx
   14002ffd9:	jl     0x14002ff5d
   14002ffdb:	mov    r12d,r15d
   14002ffde:	mov    rdi,r15
   14002ffe1:	mov    rbx,rdi
   14002ffe4:	imul   rbx,rbx,0x58
   14002ffe8:	add    rbx,QWORD PTR [rip+0x3ab11]        # 0x14006ab00
   14002ffef:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14002fff3:	je     0x140030001
   14002fff5:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   14002fff9:	je     0x140030001
   14002fffb:	or     BYTE PTR [rbx+0x8],0x80
   14002ffff:	jmp    0x140030080
   140030001:	mov    BYTE PTR [rbx+0x8],0x81
   140030005:	lea    eax,[r12-0x1]
   14003000a:	neg    eax
   14003000c:	sbb    ecx,ecx
   14003000e:	add    ecx,0xfffffff5
   140030011:	mov    eax,0xfffffff6
   140030016:	cmp    r12d,r15d
   140030019:	cmove  ecx,eax
   14003001c:	call   QWORD PTR [rip+0xd15e]        # 0x14003d180
   140030022:	mov    rsi,rax
   140030025:	cmp    rax,0xffffffffffffffff
   140030029:	je     0x140030075
   14003002b:	cmp    rax,r15
   14003002e:	je     0x140030075
   140030030:	mov    rcx,rax
   140030033:	call   QWORD PTR [rip+0xd0ef]        # 0x14003d128
   140030039:	cmp    eax,r15d
   14003003c:	je     0x140030075
   14003003e:	mov    QWORD PTR [rbx],rsi
   140030041:	movzx  eax,al
   140030044:	cmp    eax,0x2
   140030047:	jne    0x14003004f
   140030049:	or     BYTE PTR [rbx+0x8],0x40
   14003004d:	jmp    0x140030058
   14003004f:	cmp    eax,0x3
   140030052:	jne    0x140030058
   140030054:	or     BYTE PTR [rbx+0x8],0x8
   140030058:	lea    rcx,[rbx+0x10]
   14003005c:	mov    edx,0xfa0
   140030061:	call   0x140035e80
   140030066:	cmp    eax,r15d
   140030069:	je     0x140030070
   14003006b:	inc    DWORD PTR [rbx+0xc]
   14003006e:	jmp    0x140030080
   140030070:	or     eax,0xffffffff
   140030073:	jmp    0x1400300a3
   140030075:	or     BYTE PTR [rbx+0x8],0x40
   140030079:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   140030080:	inc    r12d
   140030083:	inc    rdi
   140030086:	cmp    rdi,0x3
   14003008a:	jl     0x14002ffe1
   140030090:	mov    ecx,DWORD PTR [rip+0x3aa4a]        # 0x14006aae0
   140030096:	call   QWORD PTR [rip+0xd0dc]        # 0x14003d178
   14003009c:	xor    eax,eax
   14003009e:	jmp    0x1400300a3
   1400300a0:	or     eax,0xffffffff
   1400300a3:	lea    r11,[rsp+0x90]
   1400300ab:	mov    rbx,QWORD PTR [r11+0x20]
   1400300af:	mov    rsi,QWORD PTR [r11+0x28]
   1400300b3:	mov    rdi,QWORD PTR [r11+0x30]
   1400300b7:	mov    r12,QWORD PTR [r11+0x38]
   1400300bb:	mov    rsp,r11
   1400300be:	pop    r15
   1400300c0:	pop    r14
   1400300c2:	pop    r13
   1400300c4:	ret    
   1400300c5:	int3   
   1400300c6:	int3   
   1400300c7:	int3   
   1400300c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400300cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400300d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400300d7:	push   rdi
   1400300d8:	sub    rsp,0x20
   1400300dc:	xor    edi,edi
   1400300de:	mov    rsi,rcx
   1400300e1:	or     ebp,0xffffffff
   1400300e4:	mov    rcx,rsi
   1400300e7:	call   0x14002c04c
   1400300ec:	mov    rbx,rax
   1400300ef:	test   rax,rax
   1400300f2:	jne    0x14003011c
   1400300f4:	cmp    DWORD PTR [rip+0x39e86],eax        # 0x140069f80
   1400300fa:	jbe    0x14003011c
   1400300fc:	mov    ecx,edi
   1400300fe:	call   QWORD PTR [rip+0xd224]        # 0x14003d328
   140030104:	lea    r11d,[rdi+0x3e8]
   14003010b:	cmp    r11d,DWORD PTR [rip+0x39e6e]        # 0x140069f80
   140030112:	mov    edi,r11d
   140030115:	cmova  edi,ebp
   140030118:	cmp    edi,ebp
   14003011a:	jne    0x1400300e4
   14003011c:	mov    rbp,QWORD PTR [rsp+0x38]
   140030121:	mov    rsi,QWORD PTR [rsp+0x40]
   140030126:	mov    rax,rbx
   140030129:	mov    rbx,QWORD PTR [rsp+0x30]
   14003012e:	add    rsp,0x20
   140030132:	pop    rdi
   140030133:	ret    
   140030134:	mov    rax,rsp
   140030137:	mov    QWORD PTR [rax+0x8],rbx
   14003013b:	mov    QWORD PTR [rax+0x10],rbp
   14003013f:	mov    QWORD PTR [rax+0x18],rsi
   140030143:	mov    QWORD PTR [rax+0x20],rdi
   140030147:	push   r12
   140030149:	sub    rsp,0x20
   14003014d:	xor    edi,edi
   14003014f:	mov    rsi,rdx
   140030152:	mov    rbp,rcx
   140030155:	or     r12d,0xffffffff
   140030159:	xor    r8d,r8d
   14003015c:	mov    rdx,rsi
   14003015f:	mov    rcx,rbp
   140030162:	call   0x140035eb0
   140030167:	mov    rbx,rax
   14003016a:	test   rax,rax
   14003016d:	jne    0x140030199
   14003016f:	cmp    DWORD PTR [rip+0x39e0b],eax        # 0x140069f80
   140030175:	jbe    0x140030199
   140030177:	mov    ecx,edi
   140030179:	call   QWORD PTR [rip+0xd1a9]        # 0x14003d328
   14003017f:	lea    r11d,[rdi+0x3e8]
   140030186:	cmp    r11d,DWORD PTR [rip+0x39df3]        # 0x140069f80
   14003018d:	mov    edi,r11d
   140030190:	cmova  edi,r12d
   140030194:	cmp    edi,r12d
   140030197:	jne    0x140030159
   140030199:	mov    rbp,QWORD PTR [rsp+0x38]
   14003019e:	mov    rsi,QWORD PTR [rsp+0x40]
   1400301a3:	mov    rdi,QWORD PTR [rsp+0x48]
   1400301a8:	mov    rax,rbx
   1400301ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400301b0:	add    rsp,0x20
   1400301b4:	pop    r12
   1400301b6:	ret    
   1400301b7:	int3   
   1400301b8:	mov    rax,rsp
   1400301bb:	mov    QWORD PTR [rax+0x8],rbx
   1400301bf:	mov    QWORD PTR [rax+0x10],rbp
   1400301c3:	mov    QWORD PTR [rax+0x18],rsi
   1400301c7:	mov    QWORD PTR [rax+0x20],rdi
   1400301cb:	push   r12
   1400301cd:	sub    rsp,0x20
   1400301d1:	xor    esi,esi
   1400301d3:	mov    rdi,rdx
   1400301d6:	mov    rbp,rcx
   1400301d9:	or     r12d,0xffffffff
   1400301dd:	mov    rdx,rdi
   1400301e0:	mov    rcx,rbp
   1400301e3:	call   0x14002bf78
   1400301e8:	mov    rbx,rax
   1400301eb:	test   rax,rax
   1400301ee:	jne    0x14003021f
   1400301f0:	test   rdi,rdi
   1400301f3:	je     0x14003021f
   1400301f5:	cmp    DWORD PTR [rip+0x39d85],eax        # 0x140069f80
   1400301fb:	jbe    0x14003021f
   1400301fd:	mov    ecx,esi
   1400301ff:	call   QWORD PTR [rip+0xd123]        # 0x14003d328
   140030205:	lea    r11d,[rsi+0x3e8]
   14003020c:	cmp    r11d,DWORD PTR [rip+0x39d6d]        # 0x140069f80
   140030213:	mov    esi,r11d
   140030216:	cmova  esi,r12d
   14003021a:	cmp    esi,r12d
   14003021d:	jne    0x1400301dd
   14003021f:	mov    rbp,QWORD PTR [rsp+0x38]
   140030224:	mov    rsi,QWORD PTR [rsp+0x40]
   140030229:	mov    rdi,QWORD PTR [rsp+0x48]
   14003022e:	mov    rax,rbx
   140030231:	mov    rbx,QWORD PTR [rsp+0x30]
   140030236:	add    rsp,0x20
   14003023a:	pop    r12
   14003023c:	ret    
   14003023d:	int3   
   14003023e:	int3   
   14003023f:	int3   
   140030240:	mov    QWORD PTR [rsp+0x8],rbx
   140030245:	mov    QWORD PTR [rsp+0x10],rbp
   14003024a:	mov    QWORD PTR [rsp+0x18],rsi
   14003024f:	push   rdi
   140030250:	push   r12
   140030252:	push   r13
   140030254:	sub    rsp,0x20
   140030258:	xor    esi,esi
   14003025a:	mov    rdi,r8
   14003025d:	mov    rbp,rdx
   140030260:	or     r13d,0xffffffff
   140030264:	mov    r12,rcx
   140030267:	mov    r8,rdi
   14003026a:	mov    rdx,rbp
   14003026d:	mov    rcx,r12
   140030270:	call   0x140036724
   140030275:	mov    rbx,rax
   140030278:	test   rax,rax
   14003027b:	jne    0x1400302ac
   14003027d:	test   rdi,rdi
   140030280:	je     0x1400302ac
   140030282:	cmp    DWORD PTR [rip+0x39cf8],eax        # 0x140069f80
   140030288:	jbe    0x1400302ac
   14003028a:	mov    ecx,esi
   14003028c:	call   QWORD PTR [rip+0xd096]        # 0x14003d328
   140030292:	lea    r11d,[rsi+0x3e8]
   140030299:	cmp    r11d,DWORD PTR [rip+0x39ce0]        # 0x140069f80
   1400302a0:	mov    esi,r11d
   1400302a3:	cmova  esi,r13d
   1400302a7:	cmp    esi,r13d
   1400302aa:	jne    0x140030267
   1400302ac:	mov    rbp,QWORD PTR [rsp+0x48]
   1400302b1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400302b6:	mov    rax,rbx
   1400302b9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400302be:	add    rsp,0x20
   1400302c2:	pop    r13
   1400302c4:	pop    r12
   1400302c6:	pop    rdi
   1400302c7:	ret    
   1400302c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400302cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400302d2:	push   r12
   1400302d4:	sub    rsp,0x30
   1400302d8:	xor    esi,esi
   1400302da:	lea    ecx,[rsi+0x1]
   1400302dd:	call   0x14002fd94
   1400302e2:	nop
   1400302e3:	lea    ebx,[rsi+0x3]
   1400302e6:	mov    DWORD PTR [rsp+0x20],ebx
   1400302ea:	cmp    ebx,DWORD PTR [rip+0x3ba30]        # 0x14006bd20
   1400302f0:	jge    0x14003035b
   1400302f2:	movsxd r12,ebx
   1400302f5:	mov    rax,QWORD PTR [rip+0x3aa14]        # 0x14006ad10
   1400302fc:	cmp    QWORD PTR [rax+r12*8],0x0
   140030301:	je     0x140030353
   140030303:	mov    rcx,QWORD PTR [rax+r12*8]
   140030307:	test   BYTE PTR [rcx+0x18],0x83
   14003030b:	je     0x14003031d
   14003030d:	call   0x140035d40
   140030312:	cmp    eax,0xffffffff
   140030315:	je     0x14003031d
   140030317:	inc    esi
   140030319:	mov    DWORD PTR [rsp+0x24],esi
   14003031d:	cmp    ebx,0x14
   140030320:	jl     0x140030353
   140030322:	mov    rax,QWORD PTR [rip+0x3a9e7]        # 0x14006ad10
   140030329:	mov    rcx,QWORD PTR [rax+r12*8]
   14003032d:	add    rcx,0x30
   140030331:	call   QWORD PTR [rip+0xcd99]        # 0x14003d0d0
   140030337:	mov    rcx,QWORD PTR [rip+0x3a9d2]        # 0x14006ad10
   14003033e:	mov    rcx,QWORD PTR [rcx+r12*8]
   140030342:	call   0x14002b36c
   140030347:	mov    r11,QWORD PTR [rip+0x3a9c2]        # 0x14006ad10
   14003034e:	and    QWORD PTR [r11+r12*8],0x0
   140030353:	inc    ebx
   140030355:	mov    DWORD PTR [rsp+0x20],ebx
   140030359:	jmp    0x1400302ea
   14003035b:	mov    ecx,0x1
   140030360:	call   0x14002fc94
   140030365:	mov    eax,esi
   140030367:	mov    rbx,QWORD PTR [rsp+0x40]
   14003036c:	mov    rsi,QWORD PTR [rsp+0x48]
   140030371:	add    rsp,0x30
   140030375:	pop    r12
   140030377:	ret    
   140030378:	rex push rbx
   14003037a:	sub    rsp,0x20
   14003037e:	mov    ebx,ecx
   140030380:	call   0x140030c28
   140030385:	mov    ecx,ebx
   140030387:	call   0x140030a00
   14003038c:	mov    rcx,QWORD PTR [rip+0x36a85]        # 0x140066e18
   140030393:	call   0x140031ce0
   140030398:	mov    ecx,0xff
   14003039d:	add    rsp,0x20
   1400303a1:	pop    rbx
   1400303a2:	rex.W jmp rax
   1400303a5:	int3   
   1400303a6:	int3   
   1400303a7:	int3   
   1400303a8:	rex push rbx
   1400303aa:	sub    rsp,0x20
   1400303ae:	mov    ebx,ecx
   1400303b0:	lea    rcx,[rip+0x1f499]        # 0x14004f850
   1400303b7:	call   QWORD PTR [rip+0xcf4b]        # 0x14003d308
   1400303bd:	test   rax,rax
   1400303c0:	je     0x1400303db
   1400303c2:	lea    rdx,[rip+0x1f477]        # 0x14004f840
   1400303c9:	mov    rcx,rax
   1400303cc:	call   QWORD PTR [rip+0xcf3e]        # 0x14003d310
   1400303d2:	test   rax,rax
   1400303d5:	je     0x1400303db
   1400303d7:	mov    ecx,ebx
   1400303d9:	call   rax
   1400303db:	add    rsp,0x20
   1400303df:	pop    rbx
   1400303e0:	ret    
   1400303e1:	int3   
   1400303e2:	int3   
   1400303e3:	int3   
   1400303e4:	rex push rbx
   1400303e6:	sub    rsp,0x20
   1400303ea:	mov    ebx,ecx
   1400303ec:	call   0x1400303a8
   1400303f1:	mov    ecx,ebx
   1400303f3:	call   QWORD PTR [rip+0xcd97]        # 0x14003d190
   1400303f9:	int3   
   1400303fa:	int3   
   1400303fb:	int3   
   1400303fc:	mov    ecx,0x8
   140030401:	jmp    0x14002fd94
   140030406:	int3   
   140030407:	int3   
   140030408:	mov    ecx,0x8
   14003040d:	jmp    0x14002fc94
   140030412:	int3   
   140030413:	int3   
   140030414:	cmp    rcx,rdx
   140030417:	jae    0x140030446
   140030419:	mov    QWORD PTR [rsp+0x8],rbx
   14003041e:	push   rdi
   14003041f:	sub    rsp,0x20
   140030423:	mov    rdi,rdx
   140030426:	mov    rbx,rcx
   140030429:	mov    rax,QWORD PTR [rbx]
   14003042c:	test   rax,rax
   14003042f:	je     0x140030433
   140030431:	call   rax
   140030433:	add    rbx,0x8
   140030437:	cmp    rbx,rdi
   14003043a:	jb     0x140030429
   14003043c:	mov    rbx,QWORD PTR [rsp+0x30]
   140030441:	add    rsp,0x20
   140030445:	pop    rdi
   140030446:	ret    
   140030447:	int3   
   140030448:	mov    QWORD PTR [rsp+0x8],rbx
   14003044d:	push   rdi
   14003044e:	sub    rsp,0x20
   140030452:	xor    eax,eax
   140030454:	mov    rdi,rdx
   140030457:	mov    rbx,rcx
   14003045a:	cmp    rcx,rdx
   14003045d:	jae    0x140030476
   14003045f:	test   eax,eax
   140030461:	jne    0x140030476
   140030463:	mov    rcx,QWORD PTR [rbx]
   140030466:	test   rcx,rcx
   140030469:	je     0x14003046d
   14003046b:	call   rcx
   14003046d:	add    rbx,0x8
   140030471:	cmp    rbx,rdi
   140030474:	jb     0x14003045f
   140030476:	mov    rbx,QWORD PTR [rsp+0x30]
   14003047b:	add    rsp,0x20
   14003047f:	pop    rdi
   140030480:	ret    
   140030481:	int3   
   140030482:	int3   
   140030483:	int3   
   140030484:	mov    QWORD PTR [rsp+0x8],rbx
   140030489:	push   rdi
   14003048a:	sub    rsp,0x20
   14003048e:	cmp    QWORD PTR [rip+0x1f34a],0x0        # 0x14004f7e0
   140030496:	mov    ebx,ecx
   140030498:	je     0x1400304b2
   14003049a:	lea    rcx,[rip+0x1f33f]        # 0x14004f7e0
   1400304a1:	call   0x1400366e0
   1400304a6:	test   eax,eax
   1400304a8:	je     0x1400304b2
   1400304aa:	mov    ecx,ebx
   1400304ac:	call   QWORD PTR [rip+0x1f32e]        # 0x14004f7e0
   1400304b2:	call   0x140034424
   1400304b7:	lea    rdx,[rip+0xcf4a]        # 0x14003d408
   1400304be:	lea    rcx,[rip+0xcf1b]        # 0x14003d3e0
   1400304c5:	call   0x140030448
   1400304ca:	test   eax,eax
   1400304cc:	jne    0x140030528
   1400304ce:	lea    rcx,[rip+0x3057]        # 0x14003352c
   1400304d5:	call   0x14003690c
   1400304da:	lea    rbx,[rip+0xceef]        # 0x14003d3d0
   1400304e1:	lea    rdi,[rip+0xcef0]        # 0x14003d3d8
   1400304e8:	jmp    0x1400304f8
   1400304ea:	mov    rax,QWORD PTR [rbx]
   1400304ed:	test   rax,rax
   1400304f0:	je     0x1400304f4
   1400304f2:	call   rax
   1400304f4:	add    rbx,0x8
   1400304f8:	cmp    rbx,rdi
   1400304fb:	jb     0x1400304ea
   1400304fd:	cmp    QWORD PTR [rip+0x3a5d3],0x0        # 0x14006aad8
   140030505:	je     0x140030526
   140030507:	lea    rcx,[rip+0x3a5ca]        # 0x14006aad8
   14003050e:	call   0x1400366e0
   140030513:	test   eax,eax
   140030515:	je     0x140030526
   140030517:	xor    r8d,r8d
   14003051a:	xor    ecx,ecx
   14003051c:	lea    edx,[r8+0x2]
   140030520:	call   QWORD PTR [rip+0x3a5b2]        # 0x14006aad8
   140030526:	xor    eax,eax
   140030528:	mov    rbx,QWORD PTR [rsp+0x30]
   14003052d:	add    rsp,0x20
   140030531:	pop    rdi
   140030532:	ret    
   140030533:	int3   
   140030534:	mov    QWORD PTR [rsp+0x8],rbx
   140030539:	mov    QWORD PTR [rsp+0x10],rsi
   14003053e:	mov    DWORD PTR [rsp+0x18],r8d
   140030543:	push   rdi
   140030544:	push   r12
   140030546:	push   r13
   140030548:	push   r14
   14003054a:	push   r15
   14003054c:	sub    rsp,0x40
   140030550:	mov    r12d,r8d
   140030553:	mov    ebx,edx
   140030555:	mov    r15d,ecx
   140030558:	mov    ecx,0x8
   14003055d:	call   0x14002fd94
   140030562:	nop
   140030563:	cmp    DWORD PTR [rip+0x39a6e],0x1        # 0x140069fd8
   14003056a:	je     0x14003066c
   140030570:	mov    DWORD PTR [rip+0x39a5a],0x1        # 0x140069fd4
   14003057a:	mov    BYTE PTR [rip+0x39a4f],r12b        # 0x140069fd0
   140030581:	test   ebx,ebx
   140030583:	jne    0x140030658
   140030589:	mov    rcx,QWORD PTR [rip+0x3a538]        # 0x14006aac8
   140030590:	call   0x140031ce0
   140030595:	mov    rsi,rax
   140030598:	mov    QWORD PTR [rsp+0x30],rax
   14003059d:	test   rax,rax
   1400305a0:	je     0x140030645
   1400305a6:	mov    rcx,QWORD PTR [rip+0x3a513]        # 0x14006aac0
   1400305ad:	call   0x140031ce0
   1400305b2:	mov    rdi,rax
   1400305b5:	mov    QWORD PTR [rsp+0x20],rax
   1400305ba:	mov    r14,rsi
   1400305bd:	mov    QWORD PTR [rsp+0x28],rsi
   1400305c2:	mov    r13,rax
   1400305c5:	mov    QWORD PTR [rsp+0x38],rax
   1400305ca:	sub    rdi,0x8
   1400305ce:	mov    QWORD PTR [rsp+0x20],rdi
   1400305d3:	cmp    rdi,rsi
   1400305d6:	jb     0x1400305e4
   1400305d8:	call   0x140031cd4
   1400305dd:	cmp    QWORD PTR [rdi],rax
   1400305e0:	jne    0x1400305e4
   1400305e2:	jmp    0x1400305ca
   1400305e4:	cmp    rdi,rsi
   1400305e7:	jb     0x140030645
   1400305e9:	mov    rcx,QWORD PTR [rdi]
   1400305ec:	call   0x140031ce0
   1400305f1:	mov    rbx,rax
   1400305f4:	call   0x140031cd4
   1400305f9:	mov    QWORD PTR [rdi],rax
   1400305fc:	call   rbx
   1400305fe:	mov    rcx,QWORD PTR [rip+0x3a4c3]        # 0x14006aac8
   140030605:	call   0x140031ce0
   14003060a:	mov    rbx,rax
   14003060d:	mov    rcx,QWORD PTR [rip+0x3a4ac]        # 0x14006aac0
   140030614:	call   0x140031ce0
   140030619:	cmp    r14,rbx
   14003061c:	jne    0x140030623
   14003061e:	cmp    r13,rax
   140030621:	je     0x140030643
   140030623:	mov    r14,rbx
   140030626:	mov    QWORD PTR [rsp+0x28],rbx
   14003062b:	mov    rsi,rbx
   14003062e:	mov    QWORD PTR [rsp+0x30],rbx
   140030633:	mov    r13,rax
   140030636:	mov    QWORD PTR [rsp+0x38],rax
   14003063b:	mov    rdi,rax
   14003063e:	mov    QWORD PTR [rsp+0x20],rax
   140030643:	jmp    0x1400305ca
   140030645:	lea    rdx,[rip+0xcddc]        # 0x14003d428
   14003064c:	lea    rcx,[rip+0xcdbd]        # 0x14003d410
   140030653:	call   0x140030414
   140030658:	lea    rdx,[rip+0xcdd9]        # 0x14003d438
   14003065f:	lea    rcx,[rip+0xcdca]        # 0x14003d430
   140030666:	call   0x140030414
   14003066b:	nop
   14003066c:	test   r12d,r12d
   14003066f:	je     0x14003067b
   140030671:	mov    ecx,0x8
   140030676:	call   0x14002fc94
   14003067b:	test   r12d,r12d
   14003067e:	jne    0x1400306a6
   140030680:	mov    DWORD PTR [rip+0x3994e],0x1        # 0x140069fd8
   14003068a:	lea    ecx,[r12+0x8]
   14003068f:	call   0x14002fc94
   140030694:	mov    ecx,r15d
   140030697:	call   0x1400303a8
   14003069c:	mov    ecx,r15d
   14003069f:	call   QWORD PTR [rip+0xcaeb]        # 0x14003d190
   1400306a5:	int3   
   1400306a6:	mov    rbx,QWORD PTR [rsp+0x70]
   1400306ab:	mov    rsi,QWORD PTR [rsp+0x78]
   1400306b0:	add    rsp,0x40
   1400306b4:	pop    r15
   1400306b6:	pop    r14
   1400306b8:	pop    r13
   1400306ba:	pop    r12
   1400306bc:	pop    rdi
   1400306bd:	ret    
   1400306be:	int3   
   1400306bf:	int3   
   1400306c0:	xor    r8d,r8d
   1400306c3:	xor    edx,edx
   1400306c5:	jmp    0x140030534
   1400306ca:	int3   
   1400306cb:	int3   
   1400306cc:	xor    r8d,r8d
   1400306cf:	lea    edx,[r8+0x1]
   1400306d3:	jmp    0x140030534
   1400306d8:	xor    edx,edx
   1400306da:	xor    ecx,ecx
   1400306dc:	lea    r8d,[rdx+0x1]
   1400306e0:	jmp    0x140030534
   1400306e5:	int3   
   1400306e6:	int3   
   1400306e7:	int3   
   1400306e8:	mov    edx,0x1
   1400306ed:	xor    ecx,ecx
   1400306ef:	mov    r8d,edx
   1400306f2:	jmp    0x140030534
   1400306f7:	int3   
   1400306f8:	rex push rbx
   1400306fa:	sub    rsp,0x20
   1400306fe:	call   0x140031cd4
   140030703:	mov    rcx,rax
   140030706:	mov    rbx,rax
   140030709:	call   0x140033618
   14003070e:	mov    rcx,rbx
   140030711:	call   0x140035e78
   140030716:	mov    rcx,rbx
   140030719:	call   0x14003197c
   14003071e:	mov    rcx,rbx
   140030721:	call   0x14003696c
   140030726:	mov    rcx,rbx
   140030729:	call   0x140036964
   14003072e:	mov    rcx,rbx
   140030731:	call   0x140030760
   140030736:	mov    rcx,rbx
   140030739:	call   0x14002c104
   14003073e:	mov    rcx,rbx
   140030741:	call   0x140036948
   140030746:	lea    rcx,[rip+0xffffffffffffff7f]        # 0x1400306cc
   14003074d:	call   0x140031ccc
   140030752:	mov    QWORD PTR [rip+0x366bf],rax        # 0x140066e18
   140030759:	add    rsp,0x20
   14003075d:	pop    rbx
   14003075e:	ret    
   14003075f:	int3   
   140030760:	mov    QWORD PTR [rip+0x39879],rcx        # 0x140069fe0
   140030767:	mov    QWORD PTR [rip+0x3987a],rcx        # 0x140069fe8
   14003076e:	mov    QWORD PTR [rip+0x3987b],rcx        # 0x140069ff0
   140030775:	mov    QWORD PTR [rip+0x3987c],rcx        # 0x140069ff8
   14003077c:	ret    
   14003077d:	int3   
   14003077e:	int3   
   14003077f:	int3   
   140030780:	mov    rcx,QWORD PTR [rip+0x39869]        # 0x140069ff0
   140030787:	jmp    0x140031ce0
   14003078c:	mov    QWORD PTR [rsp+0x10],rbx
   140030791:	mov    QWORD PTR [rsp+0x18],rsi
   140030796:	push   rdi
   140030797:	push   r12
   140030799:	push   r13
   14003079b:	push   r14
   14003079d:	push   r15
   14003079f:	sub    rsp,0x40
   1400307a3:	mov    ebx,ecx
   1400307a5:	xor    edi,edi
   1400307a7:	mov    DWORD PTR [rsp+0x70],edi
   1400307ab:	xor    esi,esi
   1400307ad:	mov    edx,ecx
   1400307af:	sub    edx,0x2
   1400307b2:	je     0x1400308c1
   1400307b8:	sub    edx,0x2
   1400307bb:	je     0x140030863
   1400307c1:	sub    edx,0x2
   1400307c4:	je     0x14003084a
   1400307ca:	sub    edx,0x2
   1400307cd:	je     0x140030863
   1400307d3:	sub    edx,0x3
   1400307d6:	je     0x140030863
   1400307dc:	sub    edx,0x4
   1400307df:	je     0x14003082e
   1400307e1:	sub    edx,0x6
   1400307e4:	je     0x140030812
   1400307e6:	cmp    edx,0x1
   1400307e9:	je     0x14003084a
   1400307eb:	call   0x14002b3f4
   1400307f0:	mov    DWORD PTR [rax],0x16
   1400307f6:	and    QWORD PTR [rsp+0x20],rsi
   1400307fb:	xor    r9d,r9d
   1400307fe:	xor    r8d,r8d
   140030801:	xor    edx,edx
   140030803:	xor    ecx,ecx
   140030805:	call   0x140031aac
   14003080a:	or     eax,0xffffffff
   14003080d:	jmp    0x1400309e3
   140030812:	lea    r12,[rip+0x397cf]        # 0x140069fe8
   140030819:	mov    rcx,QWORD PTR [rip+0x397c8]        # 0x140069fe8
   140030820:	mov    edi,0x1
   140030825:	mov    DWORD PTR [rsp+0x70],edi
   140030829:	jmp    0x1400308d8
   14003082e:	lea    r12,[rip+0x397c3]        # 0x140069ff8
   140030835:	mov    rcx,QWORD PTR [rip+0x397bc]        # 0x140069ff8
   14003083c:	mov    edi,0x1
   140030841:	mov    DWORD PTR [rsp+0x70],edi
   140030845:	jmp    0x1400308d8
   14003084a:	lea    r12,[rip+0x3979f]        # 0x140069ff0
   140030851:	mov    rcx,QWORD PTR [rip+0x39798]        # 0x140069ff0
   140030858:	mov    edi,0x1
   14003085d:	mov    DWORD PTR [rsp+0x70],edi
   140030861:	jmp    0x1400308d8
   140030863:	call   0x140031dc4
   140030868:	mov    rsi,rax
   14003086b:	test   rax,rax
   14003086e:	jne    0x140030878
   140030870:	or     eax,0xffffffff
   140030873:	jmp    0x1400309e3
   140030878:	mov    rdx,QWORD PTR [rax+0xa0]
   14003087f:	mov    rcx,rdx
   140030882:	movsxd r8,DWORD PTR [rip+0x36e03]        # 0x14006768c
   140030889:	cmp    DWORD PTR [rcx+0x4],ebx
   14003088c:	je     0x1400308a1
   14003088e:	add    rcx,0x10
   140030892:	mov    rax,r8
   140030895:	shl    rax,0x4
   140030899:	add    rax,rdx
   14003089c:	cmp    rcx,rax
   14003089f:	jb     0x140030889
   1400308a1:	mov    rax,r8
   1400308a4:	shl    rax,0x4
   1400308a8:	add    rax,rdx
   1400308ab:	cmp    rcx,rax
   1400308ae:	jae    0x1400308b5
   1400308b0:	cmp    DWORD PTR [rcx+0x4],ebx
   1400308b3:	je     0x1400308b7
   1400308b5:	xor    ecx,ecx
   1400308b7:	lea    r12,[rcx+0x8]
   1400308bb:	mov    r13,QWORD PTR [r12]
   1400308bf:	jmp    0x1400308e0
   1400308c1:	lea    r12,[rip+0x39718]        # 0x140069fe0
   1400308c8:	mov    rcx,QWORD PTR [rip+0x39711]        # 0x140069fe0
   1400308cf:	mov    edi,0x1
   1400308d4:	mov    DWORD PTR [rsp+0x70],edi
   1400308d8:	call   0x140031ce0
   1400308dd:	mov    r13,rax
   1400308e0:	cmp    r13,0x1
   1400308e4:	jne    0x1400308ed
   1400308e6:	xor    eax,eax
   1400308e8:	jmp    0x1400309e3
   1400308ed:	test   r13,r13
   1400308f0:	jne    0x1400308fc
   1400308f2:	lea    ecx,[r13+0x3]
   1400308f6:	call   0x1400306cc
   1400308fb:	int3   
   1400308fc:	test   edi,edi
   1400308fe:	je     0x140030908
   140030900:	xor    ecx,ecx
   140030902:	call   0x14002fd94
   140030907:	nop
   140030908:	cmp    ebx,0x8
   14003090b:	je     0x140030923
   14003090d:	cmp    ebx,0xb
   140030910:	je     0x140030923
   140030912:	cmp    ebx,0x4
   140030915:	je     0x140030923
   140030917:	mov    r15,QWORD PTR [rsp+0x38]
   14003091c:	mov    r14d,DWORD PTR [rsp+0x70]
   140030921:	jmp    0x140030954
   140030923:	mov    r15,QWORD PTR [rsi+0xa8]
   14003092a:	mov    QWORD PTR [rsp+0x38],r15
   14003092f:	and    QWORD PTR [rsi+0xa8],0x0
   140030937:	cmp    ebx,0x8
   14003093a:	jne    0x14003094f
   14003093c:	mov    r14d,DWORD PTR [rsi+0xb0]
   140030943:	mov    DWORD PTR [rsi+0xb0],0x8c
   14003094d:	jmp    0x140030954
   14003094f:	mov    r14d,DWORD PTR [rsp+0x70]
   140030954:	cmp    ebx,0x8
   140030957:	jne    0x140030992
   140030959:	mov    ecx,DWORD PTR [rip+0x36d21]        # 0x140067680
   14003095f:	mov    edx,ecx
   140030961:	mov    DWORD PTR [rsp+0x30],ecx
   140030965:	mov    eax,DWORD PTR [rip+0x36d19]        # 0x140067684
   14003096b:	add    ecx,eax
   14003096d:	cmp    edx,ecx
   14003096f:	jge    0x14003099b
   140030971:	movsxd rcx,edx
   140030974:	add    rcx,rcx
   140030977:	mov    rax,QWORD PTR [rsi+0xa0]
   14003097e:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140030984:	inc    edx
   140030986:	mov    DWORD PTR [rsp+0x30],edx
   14003098a:	mov    ecx,DWORD PTR [rip+0x36cf0]        # 0x140067680
   140030990:	jmp    0x140030965
   140030992:	call   0x140031cd4
   140030997:	mov    QWORD PTR [r12],rax
   14003099b:	test   edi,edi
   14003099d:	je     0x1400309a6
   14003099f:	xor    ecx,ecx
   1400309a1:	call   0x14002fc94
   1400309a6:	mov    edi,0x8
   1400309ab:	cmp    ebx,edi
   1400309ad:	jne    0x1400309bc
   1400309af:	mov    edx,DWORD PTR [rsi+0xb0]
   1400309b5:	mov    ecx,edi
   1400309b7:	call   r13
   1400309ba:	jmp    0x1400309c1
   1400309bc:	mov    ecx,ebx
   1400309be:	call   r13
   1400309c1:	cmp    ebx,edi
   1400309c3:	je     0x1400309cf
   1400309c5:	cmp    ebx,0xb
   1400309c8:	je     0x1400309cf
   1400309ca:	cmp    ebx,0x4
   1400309cd:	jne    0x1400309e1
   1400309cf:	mov    QWORD PTR [rsi+0xa8],r15
   1400309d6:	cmp    ebx,edi
   1400309d8:	jne    0x1400309e1
   1400309da:	mov    DWORD PTR [rsi+0xb0],r14d
   1400309e1:	xor    eax,eax
   1400309e3:	lea    r11,[rsp+0x40]
   1400309e8:	mov    rbx,QWORD PTR [r11+0x38]
   1400309ec:	mov    rsi,QWORD PTR [r11+0x40]
   1400309f0:	mov    rsp,r11
   1400309f3:	pop    r15
   1400309f5:	pop    r14
   1400309f7:	pop    r13
   1400309f9:	pop    r12
   1400309fb:	pop    rdi
   1400309fc:	ret    
   1400309fd:	int3   
   1400309fe:	int3   
   1400309ff:	int3   
   140030a00:	mov    QWORD PTR [rsp+0x8],rbx
   140030a05:	mov    QWORD PTR [rsp+0x18],rdi
   140030a0a:	mov    QWORD PTR [rsp+0x20],r13
   140030a0f:	push   r14
   140030a11:	sub    rsp,0x30
   140030a15:	lea    r14,[rip+0x36404]        # 0x140066e20
   140030a1c:	mov    edi,ecx
   140030a1e:	xor    ebx,ebx
   140030a20:	mov    rax,r14
   140030a23:	cmp    ecx,DWORD PTR [rax]
   140030a25:	je     0x140030a32
   140030a27:	inc    ebx
   140030a29:	add    rax,0x10
   140030a2d:	cmp    ebx,0x17
   140030a30:	jb     0x140030a23
   140030a32:	cmp    ebx,0x17
   140030a35:	jae    0x140030c0f
   140030a3b:	mov    ecx,0x3
   140030a40:	call   0x140036bf4
   140030a45:	cmp    eax,0x1
   140030a48:	je     0x140030bca
   140030a4e:	mov    ecx,0x3
   140030a53:	call   0x140036bf4
   140030a58:	test   eax,eax
   140030a5a:	jne    0x140030a69
   140030a5c:	cmp    DWORD PTR [rip+0x35fcd],0x1        # 0x140066a30
   140030a63:	je     0x140030bca
   140030a69:	cmp    edi,0xfc
   140030a6f:	je     0x140030c0f
   140030a75:	lea    rdi,[rip+0x39594]        # 0x14006a010
   140030a7c:	mov    r13d,0x314
   140030a82:	lea    r8,[rip+0x1f3a7]        # 0x14004fe30
   140030a89:	mov    rcx,rdi
   140030a8c:	mov    rdx,r13
   140030a8f:	call   0x14003445c
   140030a94:	test   eax,eax
   140030a96:	je     0x140030aad
   140030a98:	and    QWORD PTR [rsp+0x20],0x0
   140030a9e:	xor    r9d,r9d
   140030aa1:	xor    r8d,r8d
   140030aa4:	xor    edx,edx
   140030aa6:	xor    ecx,ecx
   140030aa8:	call   0x140031984
   140030aad:	lea    rdx,[rip+0x39575]        # 0x14006a029
   140030ab4:	mov    r8d,0x104
   140030aba:	xor    ecx,ecx
   140030abc:	mov    BYTE PTR [rip+0x3966a],0x0        # 0x14006a12d
   140030ac3:	call   QWORD PTR [rip+0xc6cf]        # 0x14003d198
   140030ac9:	test   eax,eax
   140030acb:	jne    0x140030afe
   140030acd:	lea    r8,[rip+0x1f344]        # 0x14004fe18
   140030ad4:	lea    rcx,[rip+0x3954e]        # 0x14006a029
   140030adb:	mov    edx,0x2fb
   140030ae0:	call   0x14003445c
   140030ae5:	test   eax,eax
   140030ae7:	je     0x140030afe
   140030ae9:	and    QWORD PTR [rsp+0x20],0x0
   140030aef:	xor    r9d,r9d
   140030af2:	xor    r8d,r8d
   140030af5:	xor    edx,edx
   140030af7:	xor    ecx,ecx
   140030af9:	call   0x140031984
   140030afe:	lea    rcx,[rip+0x39524]        # 0x14006a029
   140030b05:	call   0x140035dd0
   140030b0a:	inc    rax
   140030b0d:	cmp    rax,0x3c
   140030b11:	jbe    0x140030b59
   140030b13:	lea    rcx,[rip+0x3950f]        # 0x14006a029
   140030b1a:	call   0x140035dd0
   140030b1f:	lea    rdx,[rip+0x397fe]        # 0x14006a324
   140030b26:	lea    r8,[rip+0x1f2e7]        # 0x14004fe14
   140030b2d:	lea    rcx,[rax+rdi*1-0x22]
   140030b32:	mov    r9d,0x3
   140030b38:	sub    rdx,rcx
   140030b3b:	call   0x140035f60
   140030b40:	test   eax,eax
   140030b42:	je     0x140030b59
   140030b44:	and    QWORD PTR [rsp+0x20],0x0
   140030b4a:	xor    r9d,r9d
   140030b4d:	xor    r8d,r8d
   140030b50:	xor    edx,edx
   140030b52:	xor    ecx,ecx
   140030b54:	call   0x140031984
   140030b59:	lea    r8,[rip+0x1f2b0]        # 0x14004fe10
   140030b60:	mov    rdx,r13
   140030b63:	mov    rcx,rdi
   140030b66:	call   0x140036b68
   140030b6b:	test   eax,eax
   140030b6d:	je     0x140030b84
   140030b6f:	and    QWORD PTR [rsp+0x20],0x0
   140030b75:	xor    r9d,r9d
   140030b78:	xor    r8d,r8d
   140030b7b:	xor    edx,edx
   140030b7d:	xor    ecx,ecx
   140030b7f:	call   0x140031984
   140030b84:	movsxd r8,ebx
   140030b87:	mov    rdx,r13
   140030b8a:	mov    rcx,rdi
   140030b8d:	add    r8,r8
   140030b90:	mov    r8,QWORD PTR [r14+r8*8+0x8]
   140030b95:	call   0x140036b68
   140030b9a:	test   eax,eax
   140030b9c:	je     0x140030bb3
   140030b9e:	and    QWORD PTR [rsp+0x20],0x0
   140030ba4:	xor    r9d,r9d
   140030ba7:	xor    r8d,r8d
   140030baa:	xor    edx,edx
   140030bac:	xor    ecx,ecx
   140030bae:	call   0x140031984
   140030bb3:	lea    rdx,[rip+0x1f22e]        # 0x14004fde8
   140030bba:	mov    r8d,0x12010
   140030bc0:	mov    rcx,rdi
   140030bc3:	call   0x140036974
   140030bc8:	jmp    0x140030c0f
   140030bca:	mov    ecx,0xfffffff4
   140030bcf:	call   QWORD PTR [rip+0xc5ab]        # 0x14003d180
   140030bd5:	mov    rdi,rax
   140030bd8:	test   rax,rax
   140030bdb:	je     0x140030c0f
   140030bdd:	cmp    rax,0xffffffffffffffff
   140030be1:	je     0x140030c0f
   140030be3:	movsxd rbx,ebx
   140030be6:	add    rbx,rbx
   140030be9:	mov    rcx,QWORD PTR [r14+rbx*8+0x8]
   140030bee:	call   0x140035dd0
   140030bf3:	mov    rdx,QWORD PTR [r14+rbx*8+0x8]
   140030bf8:	and    QWORD PTR [rsp+0x20],0x0
   140030bfe:	lea    r9,[rsp+0x48]
   140030c03:	mov    r8,rax
   140030c06:	mov    rcx,rdi
   140030c09:	call   QWORD PTR [rip+0xc541]        # 0x14003d150
   140030c0f:	mov    rbx,QWORD PTR [rsp+0x40]
   140030c14:	mov    rdi,QWORD PTR [rsp+0x50]
   140030c19:	mov    r13,QWORD PTR [rsp+0x58]
   140030c1e:	add    rsp,0x30
   140030c22:	pop    r14
   140030c24:	ret    
   140030c25:	int3   
   140030c26:	int3   
   140030c27:	int3   
   140030c28:	sub    rsp,0x28
   140030c2c:	mov    ecx,0x3
   140030c31:	call   0x140036bf4
   140030c36:	cmp    eax,0x1
   140030c39:	je     0x140030c52
   140030c3b:	mov    ecx,0x3
   140030c40:	call   0x140036bf4
   140030c45:	test   eax,eax
   140030c47:	jne    0x140030c66
   140030c49:	cmp    DWORD PTR [rip+0x35de0],0x1        # 0x140066a30
   140030c50:	jne    0x140030c66
   140030c52:	mov    ecx,0xfc
   140030c57:	call   0x140030a00
   140030c5c:	mov    ecx,0xff
   140030c61:	call   0x140030a00
   140030c66:	add    rsp,0x28
   140030c6a:	ret    
   140030c6b:	int3   
   140030c6c:	mov    QWORD PTR [rsp+0x8],rbx
   140030c71:	mov    QWORD PTR [rsp+0x10],rdi
   140030c76:	push   r12
   140030c78:	sub    rsp,0x20
   140030c7c:	mov    rbx,rcx
   140030c7f:	call   0x14002df3c
   140030c84:	mov    ecx,eax
   140030c86:	call   0x1400365e8
   140030c8b:	test   eax,eax
   140030c8d:	je     0x140030d2a
   140030c93:	call   0x14002abd0
   140030c98:	add    rax,0x30
   140030c9c:	cmp    rbx,rax
   140030c9f:	jne    0x140030ca5
   140030ca1:	xor    eax,eax
   140030ca3:	jmp    0x140030cb8
   140030ca5:	call   0x14002abd0
   140030caa:	add    rax,0x60
   140030cae:	cmp    rbx,rax
   140030cb1:	jne    0x140030d2a
   140030cb3:	mov    eax,0x1
   140030cb8:	inc    DWORD PTR [rip+0x38fa6]        # 0x140069c64
   140030cbe:	test   DWORD PTR [rbx+0x18],0x10c
   140030cc5:	jne    0x140030d2a
   140030cc7:	lea    r12,[rip+0x3965a]        # 0x14006a328
   140030cce:	movsxd rdi,eax
   140030cd1:	cmp    QWORD PTR [r12+rdi*8],0x0
   140030cd6:	jne    0x140030d03
   140030cd8:	mov    ecx,0x1000
   140030cdd:	call   0x1400300c8
   140030ce2:	mov    QWORD PTR [r12+rdi*8],rax
   140030ce6:	test   rax,rax
   140030ce9:	jne    0x140030d03
   140030ceb:	lea    rax,[rbx+0x20]
   140030cef:	mov    QWORD PTR [rbx+0x10],rax
   140030cf3:	mov    QWORD PTR [rbx],rax
   140030cf6:	mov    eax,0x2
   140030cfb:	mov    DWORD PTR [rbx+0x24],eax
   140030cfe:	mov    DWORD PTR [rbx+0x8],eax
   140030d01:	jmp    0x140030d1c
   140030d03:	mov    rcx,QWORD PTR [r12+rdi*8]
   140030d07:	mov    DWORD PTR [rbx+0x24],0x1000
   140030d0e:	mov    DWORD PTR [rbx+0x8],0x1000
   140030d15:	mov    QWORD PTR [rbx+0x10],rcx
   140030d19:	mov    QWORD PTR [rbx],rcx
   140030d1c:	or     DWORD PTR [rbx+0x18],0x1102
   140030d23:	mov    eax,0x1
   140030d28:	jmp    0x140030d2c
   140030d2a:	xor    eax,eax
   140030d2c:	mov    rbx,QWORD PTR [rsp+0x30]
   140030d31:	mov    rdi,QWORD PTR [rsp+0x38]
   140030d36:	add    rsp,0x20
   140030d3a:	pop    r12
   140030d3c:	ret    
   140030d3d:	int3   
   140030d3e:	int3   
   140030d3f:	int3   
   140030d40:	test   ecx,ecx
   140030d42:	je     0x140030d74
   140030d44:	push   rbx
   140030d45:	sub    rsp,0x20
   140030d49:	bt     DWORD PTR [rdx+0x18],0xc
   140030d4e:	mov    rbx,rdx
   140030d51:	jae    0x140030d6f
   140030d53:	mov    rcx,rdx
   140030d56:	call   0x14002a9c8
   140030d5b:	and    DWORD PTR [rbx+0x18],0xffffeeff
   140030d62:	and    DWORD PTR [rbx+0x24],0x0
   140030d66:	and    QWORD PTR [rbx],0x0
   140030d6a:	and    QWORD PTR [rbx+0x10],0x0
   140030d6f:	add    rsp,0x20
   140030d73:	pop    rbx
   140030d74:	ret    
   140030d75:	int3   
   140030d76:	int3   
   140030d77:	int3   
   140030d78:	rex push rbx
   140030d7a:	sub    rsp,0x20
   140030d7e:	test   BYTE PTR [rdx+0x18],0x40
   140030d82:	mov    rbx,r8
   140030d85:	je     0x140030d93
   140030d87:	cmp    QWORD PTR [rdx+0x10],0x0
   140030d8c:	jne    0x140030d93
   140030d8e:	inc    DWORD PTR [r8]
   140030d91:	jmp    0x140030db9
   140030d93:	add    DWORD PTR [rdx+0x8],0xffffffff
   140030d97:	js     0x140030da6
   140030d99:	mov    rax,QWORD PTR [rdx]
   140030d9c:	mov    BYTE PTR [rax],cl
   140030d9e:	inc    QWORD PTR [rdx]
   140030da1:	movzx  eax,cl
   140030da4:	jmp    0x140030dae
   140030da6:	movsx  ecx,cl
   140030da9:	call   0x140036344
   140030dae:	cmp    eax,0xffffffff
   140030db1:	jne    0x140030db7
   140030db3:	or     DWORD PTR [rbx],eax
   140030db5:	jmp    0x140030db9
   140030db7:	inc    DWORD PTR [rbx]
   140030db9:	add    rsp,0x20
   140030dbd:	pop    rbx
   140030dbe:	ret    
   140030dbf:	int3   
   140030dc0:	test   edx,edx
   140030dc2:	jle    0x140030e10
   140030dc4:	mov    QWORD PTR [rsp+0x8],rbx
   140030dc9:	mov    QWORD PTR [rsp+0x10],rbp
   140030dce:	mov    QWORD PTR [rsp+0x18],rsi
   140030dd3:	push   rdi
   140030dd4:	sub    rsp,0x20
   140030dd8:	mov    rdi,r9
   140030ddb:	mov    rsi,r8
   140030dde:	mov    ebx,edx
   140030de0:	mov    bpl,cl
   140030de3:	mov    r8,rdi
   140030de6:	mov    rdx,rsi
   140030de9:	mov    cl,bpl
   140030dec:	dec    ebx
   140030dee:	call   0x140030d78
   140030df3:	cmp    DWORD PTR [rdi],0xffffffff
   140030df6:	je     0x140030dfc
   140030df8:	test   ebx,ebx
   140030dfa:	jg     0x140030de3
   140030dfc:	mov    rbx,QWORD PTR [rsp+0x30]
   140030e01:	mov    rbp,QWORD PTR [rsp+0x38]
   140030e06:	mov    rsi,QWORD PTR [rsp+0x40]
   140030e0b:	add    rsp,0x20
   140030e0f:	pop    rdi
   140030e10:	ret    
   140030e11:	int3   
   140030e12:	int3   
   140030e13:	int3   
   140030e14:	mov    QWORD PTR [rsp+0x8],rbx
   140030e19:	mov    QWORD PTR [rsp+0x10],rbp
   140030e1e:	mov    QWORD PTR [rsp+0x18],rsi
   140030e23:	push   rdi
   140030e24:	sub    rsp,0x20
   140030e28:	test   BYTE PTR [r8+0x18],0x40
   140030e2d:	mov    rdi,r9
   140030e30:	mov    rsi,r8
   140030e33:	mov    ebx,edx
   140030e35:	mov    rbp,rcx
   140030e38:	je     0x140030e46
   140030e3a:	cmp    QWORD PTR [r8+0x10],0x0
   140030e3f:	jne    0x140030e46
   140030e41:	add    DWORD PTR [r9],edx
   140030e44:	jmp    0x140030e7d
   140030e46:	test   edx,edx
   140030e48:	jle    0x140030e7d
   140030e4a:	mov    cl,BYTE PTR [rbp+0x0]
   140030e4d:	mov    r8,rdi
   140030e50:	mov    rdx,rsi
   140030e53:	dec    ebx
   140030e55:	call   0x140030d78
   140030e5a:	inc    rbp
   140030e5d:	cmp    DWORD PTR [rdi],0xffffffff
   140030e60:	jne    0x140030e79
   140030e62:	call   0x14002b3f4
   140030e67:	cmp    DWORD PTR [rax],0x2a
   140030e6a:	jne    0x140030e7d
   140030e6c:	mov    r8,rdi
   140030e6f:	mov    rdx,rsi
   140030e72:	mov    cl,0x3f
   140030e74:	call   0x140030d78
   140030e79:	test   ebx,ebx
   140030e7b:	jg     0x140030e4a
   140030e7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140030e82:	mov    rbp,QWORD PTR [rsp+0x38]
   140030e87:	mov    rsi,QWORD PTR [rsp+0x40]
   140030e8c:	add    rsp,0x20
   140030e90:	pop    rdi
   140030e91:	ret    
   140030e92:	int3   
   140030e93:	int3   
   140030e94:	mov    QWORD PTR [rsp+0x18],rbx
   140030e99:	push   rbp
   140030e9a:	push   rsi
   140030e9b:	push   rdi
   140030e9c:	push   r12
   140030e9e:	push   r13
   140030ea0:	push   r14
   140030ea2:	push   r15
   140030ea4:	sub    rsp,0x2d0
   140030eab:	mov    rax,QWORD PTR [rip+0x359fe]        # 0x1400668b0
   140030eb2:	xor    rax,rsp
   140030eb5:	mov    QWORD PTR [rsp+0x2c8],rax
   140030ebd:	xor    eax,eax
   140030ebf:	mov    rbx,rcx
   140030ec2:	mov    QWORD PTR [rsp+0x68],rcx
   140030ec7:	mov    rdi,rdx
   140030eca:	lea    rcx,[rsp+0x78]
   140030ecf:	mov    rdx,r8
   140030ed2:	mov    r13,r9
   140030ed5:	mov    DWORD PTR [rsp+0x60],eax
   140030ed9:	mov    r12d,eax
   140030edc:	mov    DWORD PTR [rsp+0x54],eax
   140030ee0:	mov    r14d,eax
   140030ee3:	mov    DWORD PTR [rsp+0x48],eax
   140030ee7:	mov    DWORD PTR [rsp+0x58],eax
   140030eeb:	mov    DWORD PTR [rsp+0x50],eax
   140030eef:	call   0x14002b47c
   140030ef4:	xor    r10d,r10d
   140030ef7:	cmp    rbx,r10
   140030efa:	jne    0x140030f3d
   140030efc:	call   0x14002b3f4
   140030f01:	xor    ebx,ebx
   140030f03:	xor    r9d,r9d
   140030f06:	xor    r8d,r8d
   140030f09:	xor    edx,edx
   140030f0b:	xor    ecx,ecx
   140030f0d:	mov    DWORD PTR [rax],0x16
   140030f13:	mov    QWORD PTR [rsp+0x20],rbx
   140030f18:	call   0x140031aac
   140030f1d:	cmp    BYTE PTR [rsp+0x90],bl
   140030f24:	je     0x140030f35
   140030f26:	mov    rax,QWORD PTR [rsp+0x88]
   140030f2e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140030f35:	or     eax,0xffffffff
   140030f38:	jmp    0x14003173a
   140030f3d:	or     r15d,0xffffffff
   140030f41:	test   BYTE PTR [rbx+0x18],0x40
   140030f45:	lea    r9,[rip+0xfffffffffffcf0b4]        # 0x140000000
   140030f4c:	jne    0x14003100c
   140030f52:	mov    rcx,rbx
   140030f55:	call   0x14002df3c
   140030f5a:	lea    rdx,[rip+0x35e5f]        # 0x140066dc0
   140030f61:	cmp    eax,r15d
   140030f64:	je     0x140030f8e
   140030f66:	cmp    eax,0xfffffffe
   140030f69:	je     0x140030f8e
   140030f6b:	movsxd r8,eax
   140030f6e:	lea    r9,[rip+0xfffffffffffcf08b]        # 0x140000000
   140030f75:	mov    rcx,r8
   140030f78:	and    r8d,0x1f
   140030f7c:	sar    rcx,0x5
   140030f80:	imul   r8,r8,0x58
   140030f84:	add    r8,QWORD PTR [r9+rcx*8+0x6ab00]
   140030f8c:	jmp    0x140030f98
   140030f8e:	mov    r8,rdx
   140030f91:	lea    r9,[rip+0xfffffffffffcf068]        # 0x140000000
   140030f98:	test   BYTE PTR [r8+0x38],0x7f
   140030f9d:	jne    0x140030fc8
   140030f9f:	cmp    eax,r15d
   140030fa2:	je     0x140030fc2
   140030fa4:	cmp    eax,0xfffffffe
   140030fa7:	je     0x140030fc2
   140030fa9:	movsxd rdx,eax
   140030fac:	mov    rax,rdx
   140030faf:	and    edx,0x1f
   140030fb2:	sar    rax,0x5
   140030fb6:	imul   rdx,rdx,0x58
   140030fba:	add    rdx,QWORD PTR [r9+rax*8+0x6ab00]
   140030fc2:	test   BYTE PTR [rdx+0x38],0x80
   140030fc6:	je     0x140031009
   140030fc8:	call   0x14002b3f4
   140030fcd:	xor    ebx,ebx
   140030fcf:	xor    r9d,r9d
   140030fd2:	xor    r8d,r8d
   140030fd5:	xor    edx,edx
   140030fd7:	xor    ecx,ecx
   140030fd9:	mov    DWORD PTR [rax],0x16
   140030fdf:	mov    QWORD PTR [rsp+0x20],rbx
   140030fe4:	call   0x140031aac
   140030fe9:	cmp    BYTE PTR [rsp+0x90],bl
   140030ff0:	je     0x140031001
   140030ff2:	mov    rax,QWORD PTR [rsp+0x88]
   140030ffa:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140031001:	mov    eax,r15d
   140031004:	jmp    0x14003173a
   140031009:	xor    r10d,r10d
   14003100c:	cmp    rdi,r10
   14003100f:	je     0x140030fc8
   140031011:	mov    bpl,BYTE PTR [rdi]
   140031014:	mov    esi,r10d
   140031017:	mov    DWORD PTR [rsp+0x40],r10d
   14003101c:	mov    DWORD PTR [rsp+0x44],r10d
   140031021:	mov    edx,r10d
   140031024:	mov    QWORD PTR [rsp+0x98],r10
   14003102c:	cmp    bpl,r10b
   14003102f:	je     0x14003171f
   140031035:	mov    rbx,QWORD PTR [rsp+0xa8]
   14003103d:	mov    r11d,0x200
   140031043:	inc    rdi
   140031046:	cmp    esi,r10d
   140031049:	mov    QWORD PTR [rsp+0xb0],rdi
   140031051:	jl     0x14003171f
   140031057:	lea    eax,[rbp-0x20]
   14003105a:	cmp    al,0x58
   14003105c:	ja     0x140031070
   14003105e:	movsx  rax,bpl
   140031062:	movsx  ecx,BYTE PTR [rax+r9*1+0x4fe30]
   14003106b:	and    ecx,0xf
   14003106e:	jmp    0x140031073
   140031070:	mov    ecx,r10d
   140031073:	movsxd rax,edx
   140031076:	movsxd rcx,ecx
   140031079:	lea    rdx,[rax+rcx*8]
   14003107d:	movsx  edx,BYTE PTR [rdx+r9*1+0x4fe50]
   140031086:	sar    edx,0x4
   140031089:	mov    DWORD PTR [rsp+0x5c],edx
   14003108d:	mov    ecx,edx
   14003108f:	cmp    edx,r10d
   140031092:	je     0x140031811
   140031098:	sub    ecx,0x1
   14003109b:	je     0x140031929
   1400310a1:	sub    ecx,0x1
   1400310a4:	je     0x1400318d9
   1400310aa:	sub    ecx,0x1
   1400310ad:	je     0x14003189e
   1400310b3:	sub    ecx,0x1
   1400310b6:	je     0x140031896
   1400310bc:	sub    ecx,0x1
   1400310bf:	je     0x140031865
   1400310c5:	sub    ecx,0x1
   1400310c8:	je     0x140031765
   1400310ce:	cmp    ecx,0x1
   1400310d1:	jne    0x140031713
   1400310d7:	movsx  eax,bpl
   1400310db:	cmp    eax,0x64
   1400310de:	jg     0x140031262
   1400310e4:	je     0x14003136a
   1400310ea:	cmp    eax,0x41
   1400310ed:	je     0x140031233
   1400310f3:	cmp    eax,0x43
   1400310f6:	je     0x1400311cc
   1400310fc:	cmp    eax,0x45
   1400310ff:	je     0x140031233
   140031105:	cmp    eax,0x47
   140031108:	je     0x140031233
   14003110e:	cmp    eax,0x53
   140031111:	je     0x140031180
   140031113:	cmp    eax,0x58
   140031116:	je     0x140031300
   14003111c:	cmp    eax,0x5a
   14003111f:	je     0x140031138
   140031121:	cmp    eax,0x61
   140031124:	je     0x14003123f
   14003112a:	cmp    eax,0x63
   14003112d:	je     0x1400311da
   140031133:	jmp    0x140031580
   140031138:	mov    rax,QWORD PTR [r13+0x0]
   14003113c:	add    r13,0x8
   140031140:	cmp    rax,r10
   140031143:	je     0x140031174
   140031145:	mov    rbx,QWORD PTR [rax+0x8]
   140031149:	cmp    rbx,r10
   14003114c:	je     0x140031174
   14003114e:	bt     r12d,0xb
   140031153:	movsx  eax,WORD PTR [rax]
   140031156:	jae    0x14003116a
   140031158:	cdq    
   140031159:	mov    DWORD PTR [rsp+0x50],0x1
   140031161:	sub    eax,edx
   140031163:	sar    eax,1
   140031165:	jmp    0x14003157c
   14003116a:	mov    DWORD PTR [rsp+0x50],r10d
   14003116f:	jmp    0x14003157c
   140031174:	mov    rbx,QWORD PTR [rip+0x35e15]        # 0x140066f90
   14003117b:	jmp    0x140031571
   140031180:	test   r12d,0x830
   140031187:	jne    0x14003118e
   140031189:	bts    r12d,0xb
   14003118e:	mov    rbx,QWORD PTR [r13+0x0]
   140031192:	cmp    r14d,r15d
   140031195:	mov    eax,r14d
   140031198:	mov    ecx,0x7fffffff
   14003119d:	cmove  eax,ecx
   1400311a0:	add    r13,0x8
   1400311a4:	test   r12d,0x810
   1400311ab:	je     0x1400312cb
   1400311b1:	cmp    rbx,r10
   1400311b4:	mov    DWORD PTR [rsp+0x50],0x1
   1400311bc:	cmove  rbx,QWORD PTR [rip+0x35dd4]        # 0x140066f98
   1400311c4:	mov    rcx,rbx
   1400311c7:	jmp    0x1400312be
   1400311cc:	test   r12d,0x830
   1400311d3:	jne    0x1400311da
   1400311d5:	bts    r12d,0xb
   1400311da:	add    r13,0x8
   1400311de:	test   r12d,0x810
   1400311e5:	je     0x140031213
   1400311e7:	movzx  r9d,WORD PTR [r13-0x8]
   1400311ec:	lea    rdx,[rsp+0xc0]
   1400311f4:	lea    rcx,[rsp+0x44]
   1400311f9:	mov    r8,r11
   1400311fc:	call   0x140036e6c
   140031201:	xor    r10d,r10d
   140031204:	cmp    eax,r10d
   140031207:	je     0x140031226
   140031209:	mov    DWORD PTR [rsp+0x58],0x1
   140031211:	jmp    0x140031226
   140031213:	mov    al,BYTE PTR [r13-0x8]
   140031217:	mov    DWORD PTR [rsp+0x44],0x1
   14003121f:	mov    BYTE PTR [rsp+0xc0],al
   140031226:	lea    rbx,[rsp+0xc0]
   14003122e:	jmp    0x140031580
   140031233:	mov    DWORD PTR [rsp+0x70],0x1
   14003123b:	add    bpl,0x20
   14003123f:	or     r12d,0x40
   140031243:	cmp    r14d,r10d
   140031246:	lea    rbx,[rsp+0xc0]
   14003124e:	mov    esi,r11d
   140031251:	jge    0x140031484
   140031257:	mov    r14d,0x6
   14003125d:	jmp    0x1400314cd
   140031262:	cmp    eax,0x65
   140031265:	jl     0x140031580
   14003126b:	cmp    eax,0x67
   14003126e:	jle    0x14003123f
   140031270:	cmp    eax,0x69
   140031273:	je     0x14003136a
   140031279:	cmp    eax,0x6e
   14003127c:	je     0x140031337
   140031282:	cmp    eax,0x6f
   140031285:	je     0x140031325
   14003128b:	cmp    eax,0x70
   14003128e:	je     0x1400312f5
   140031290:	cmp    eax,0x73
   140031293:	je     0x14003118e
   140031299:	cmp    eax,0x75
   14003129c:	je     0x14003136e
   1400312a2:	cmp    eax,0x78
   1400312a5:	jne    0x140031580
   1400312ab:	mov    eax,0x27
   1400312b0:	jmp    0x140031305
   1400312b2:	dec    eax
   1400312b4:	cmp    WORD PTR [rcx],r10w
   1400312b8:	je     0x1400312c3
   1400312ba:	add    rcx,0x2
   1400312be:	cmp    eax,r10d
   1400312c1:	jne    0x1400312b2
   1400312c3:	sub    rcx,rbx
   1400312c6:	sar    rcx,1
   1400312c9:	jmp    0x1400312ec
   1400312cb:	cmp    rbx,r10
   1400312ce:	cmove  rbx,QWORD PTR [rip+0x35cba]        # 0x140066f90
   1400312d6:	mov    rcx,rbx
   1400312d9:	jmp    0x1400312e5
   1400312db:	dec    eax
   1400312dd:	cmp    BYTE PTR [rcx],r10b
   1400312e0:	je     0x1400312ea
   1400312e2:	inc    rcx
   1400312e5:	cmp    eax,r10d
   1400312e8:	jne    0x1400312db
   1400312ea:	sub    ecx,ebx
   1400312ec:	mov    DWORD PTR [rsp+0x44],ecx
   1400312f0:	jmp    0x140031580
   1400312f5:	mov    r14d,0x10
   1400312fb:	bts    r12d,0xf
   140031300:	mov    eax,0x7
   140031305:	mov    DWORD PTR [rsp+0x60],eax
   140031309:	mov    r9d,0x10
   14003130f:	test   r12b,r12b
   140031312:	jns    0x140031374
   140031314:	add    al,0x51
   140031316:	mov    BYTE PTR [rsp+0x4c],0x30
   14003131b:	lea    edx,[r9-0xe]
   14003131f:	mov    BYTE PTR [rsp+0x4d],al
   140031323:	jmp    0x140031378
   140031325:	mov    r9d,0x8
   14003132b:	test   r12b,r12b
   14003132e:	jns    0x140031374
   140031330:	bts    r12d,0x9
   140031335:	jmp    0x140031374
   140031337:	mov    rdi,QWORD PTR [r13+0x0]
   14003133b:	add    r13,0x8
   14003133f:	call   0x140036c44
   140031344:	xor    r10d,r10d
   140031347:	cmp    eax,r10d
   14003134a:	je     0x140030fc8
   140031350:	test   r12b,0x20
   140031354:	je     0x14003135b
   140031356:	mov    WORD PTR [rdi],si
   140031359:	jmp    0x14003135d
   14003135b:	mov    DWORD PTR [rdi],esi
   14003135d:	mov    DWORD PTR [rsp+0x58],0x1
   140031365:	jmp    0x1400316d6
   14003136a:	or     r12d,0x40
   14003136e:	mov    r9d,0xa
   140031374:	mov    edx,DWORD PTR [rsp+0x48]
   140031378:	bt     r12d,0xf
   14003137d:	jb     0x140031386
   14003137f:	bt     r12d,0xc
   140031384:	jae    0x140031390
   140031386:	mov    r8,QWORD PTR [r13+0x0]
   14003138a:	add    r13,0x8
   14003138e:	jmp    0x1400313be
   140031390:	add    r13,0x8
   140031394:	test   r12b,0x20
   140031398:	je     0x1400313ae
   14003139a:	test   r12b,0x40
   14003139e:	je     0x1400313a7
   1400313a0:	movsx  r8,WORD PTR [r13-0x8]
   1400313a5:	jmp    0x1400313be
   1400313a7:	movzx  r8d,WORD PTR [r13-0x8]
   1400313ac:	jmp    0x1400313be
   1400313ae:	test   r12b,0x40
   1400313b2:	je     0x1400313ba
   1400313b4:	movsxd r8,DWORD PTR [r13-0x8]
   1400313b8:	jmp    0x1400313be
   1400313ba:	mov    r8d,DWORD PTR [r13-0x8]
   1400313be:	test   r12b,0x40
   1400313c2:	je     0x1400313d1
   1400313c4:	cmp    r8,r10
   1400313c7:	jge    0x1400313d1
   1400313c9:	neg    r8
   1400313cc:	bts    r12d,0x8
   1400313d1:	bt     r12d,0xf
   1400313d6:	jb     0x1400313e2
   1400313d8:	bt     r12d,0xc
   1400313dd:	jb     0x1400313e2
   1400313df:	mov    r8d,r8d
   1400313e2:	cmp    r14d,r10d
   1400313e5:	jge    0x1400313ef
   1400313e7:	mov    r14d,0x1
   1400313ed:	jmp    0x1400313fa
   1400313ef:	and    r12d,0xfffffff7
   1400313f3:	cmp    r14d,r11d
   1400313f6:	cmovg  r14d,r11d
   1400313fa:	mov    r15d,DWORD PTR [rsp+0x60]
   1400313ff:	mov    rax,r8
   140031402:	lea    rbx,[rsp+0x2bf]
   14003140a:	neg    rax
   14003140d:	sbb    ecx,ecx
   14003140f:	and    ecx,edx
   140031411:	mov    DWORD PTR [rsp+0x48],ecx
   140031415:	mov    ecx,r14d
   140031418:	dec    r14d
   14003141b:	cmp    ecx,r10d
   14003141e:	jg     0x140031425
   140031420:	cmp    r8,r10
   140031423:	je     0x140031445
   140031425:	xor    edx,edx
   140031427:	mov    rax,r8
   14003142a:	movsxd rcx,r9d
   14003142d:	div    rcx
   140031430:	mov    r8,rax
   140031433:	lea    eax,[rdx+0x30]
   140031436:	cmp    eax,0x39
   140031439:	jle    0x14003143e
   14003143b:	add    eax,r15d
   14003143e:	mov    BYTE PTR [rbx],al
   140031440:	dec    rbx
   140031443:	jmp    0x140031415
   140031445:	lea    rax,[rsp+0x2bf]
   14003144d:	mov    r15d,0xffffffff
   140031453:	sub    eax,ebx
   140031455:	inc    rbx
   140031458:	bt     r12d,0x9
   14003145d:	mov    DWORD PTR [rsp+0x44],eax
   140031461:	jae    0x140031580
   140031467:	cmp    eax,r10d
   14003146a:	je     0x140031475
   14003146c:	cmp    BYTE PTR [rbx],0x30
   14003146f:	je     0x140031580
   140031475:	dec    rbx
   140031478:	inc    DWORD PTR [rsp+0x44]
   14003147c:	mov    BYTE PTR [rbx],0x30
   14003147f:	jmp    0x140031580
   140031484:	jne    0x140031494
   140031486:	cmp    bpl,0x67
   14003148a:	jne    0x1400314cd
   14003148c:	mov    r14d,0x1
   140031492:	jmp    0x1400314cd
   140031494:	cmp    r14d,r11d
   140031497:	cmovg  r14d,r11d
   14003149b:	cmp    r14d,0xa3
   1400314a2:	jle    0x1400314cd
   1400314a4:	lea    edi,[r14+0x15d]
   1400314ab:	movsxd rcx,edi
   1400314ae:	call   0x1400300c8
   1400314b3:	mov    QWORD PTR [rsp+0x98],rax
   1400314bb:	test   rax,rax
   1400314be:	je     0x1400314c7
   1400314c0:	mov    rbx,rax
   1400314c3:	mov    esi,edi
   1400314c5:	jmp    0x1400314cd
   1400314c7:	mov    r14d,0xa3
   1400314cd:	mov    rax,QWORD PTR [r13+0x0]
   1400314d1:	mov    rcx,QWORD PTR [rip+0x361e8]        # 0x1400676c0
   1400314d8:	add    r13,0x8
   1400314dc:	movsx  edi,bpl
   1400314e0:	movsxd rsi,esi
   1400314e3:	mov    QWORD PTR [rsp+0xa8],rax
   1400314eb:	call   0x140031ce0
   1400314f0:	lea    rcx,[rsp+0x78]
   1400314f5:	mov    r9d,edi
   1400314f8:	mov    QWORD PTR [rsp+0x30],rcx
   1400314fd:	mov    ecx,DWORD PTR [rsp+0x70]
   140031501:	mov    r8,rsi
   140031504:	mov    DWORD PTR [rsp+0x28],ecx
   140031508:	lea    rcx,[rsp+0xa8]
   140031510:	mov    rdx,rbx
   140031513:	mov    DWORD PTR [rsp+0x20],r14d
   140031518:	call   rax
   14003151a:	mov    edi,r12d
   14003151d:	xor    eax,eax
   14003151f:	and    edi,0x80
   140031525:	je     0x140031544
   140031527:	cmp    r14d,eax
   14003152a:	jne    0x140031544
   14003152c:	mov    rcx,QWORD PTR [rip+0x361a5]        # 0x1400676d8
   140031533:	call   0x140031ce0
   140031538:	lea    rdx,[rsp+0x78]
   14003153d:	mov    rcx,rbx
   140031540:	call   rax
   140031542:	xor    eax,eax
   140031544:	cmp    bpl,0x67
   140031548:	jne    0x140031564
   14003154a:	cmp    edi,eax
   14003154c:	jne    0x140031564
   14003154e:	mov    rcx,QWORD PTR [rip+0x3617b]        # 0x1400676d0
   140031555:	call   0x140031ce0
   14003155a:	lea    rdx,[rsp+0x78]
   14003155f:	mov    rcx,rbx
   140031562:	call   rax
   140031564:	cmp    BYTE PTR [rbx],0x2d
   140031567:	jne    0x140031571
   140031569:	bts    r12d,0x8
   14003156e:	inc    rbx
   140031571:	mov    rcx,rbx
   140031574:	call   0x140035dd0
   140031579:	xor    r10d,r10d
   14003157c:	mov    DWORD PTR [rsp+0x44],eax
   140031580:	cmp    DWORD PTR [rsp+0x58],r10d
   140031585:	jne    0x1400316d6
   14003158b:	test   r12b,0x40
   14003158f:	je     0x1400315c2
   140031591:	bt     r12d,0x8
   140031596:	jae    0x14003159f
   140031598:	mov    BYTE PTR [rsp+0x4c],0x2d
   14003159d:	jmp    0x1400315aa
   14003159f:	test   r12b,0x1
   1400315a3:	je     0x1400315b5
   1400315a5:	mov    BYTE PTR [rsp+0x4c],0x2b
   1400315aa:	mov    edi,0x1
   1400315af:	mov    DWORD PTR [rsp+0x48],edi
   1400315b3:	jmp    0x1400315c6
   1400315b5:	test   r12b,0x2
   1400315b9:	je     0x1400315c2
   1400315bb:	mov    BYTE PTR [rsp+0x4c],0x20
   1400315c0:	jmp    0x1400315aa
   1400315c2:	mov    edi,DWORD PTR [rsp+0x48]
   1400315c6:	mov    esi,DWORD PTR [rsp+0x54]
   1400315ca:	mov    rbp,QWORD PTR [rsp+0x68]
   1400315cf:	sub    esi,DWORD PTR [rsp+0x44]
   1400315d3:	sub    esi,edi
   1400315d5:	test   r12b,0xc
   1400315d9:	jne    0x1400315ec
   1400315db:	lea    r9,[rsp+0x40]
   1400315e0:	mov    r8,rbp
   1400315e3:	mov    edx,esi
   1400315e5:	mov    cl,0x20
   1400315e7:	call   0x140030dc0
   1400315ec:	lea    r9,[rsp+0x40]
   1400315f1:	lea    rcx,[rsp+0x4c]
   1400315f6:	mov    r8,rbp
   1400315f9:	mov    edx,edi
   1400315fb:	call   0x140030e14
   140031600:	test   r12b,0x8
   140031604:	je     0x14003161d
   140031606:	test   r12b,0x4
   14003160a:	jne    0x14003161d
   14003160c:	lea    r9,[rsp+0x40]
   140031611:	mov    r8,rbp
   140031614:	mov    edx,esi
   140031616:	mov    cl,0x30
   140031618:	call   0x140030dc0
   14003161d:	mov    edi,DWORD PTR [rsp+0x44]
   140031621:	xor    eax,eax
   140031623:	cmp    DWORD PTR [rsp+0x50],eax
   140031627:	je     0x14003169e
   140031629:	cmp    edi,eax
   14003162b:	jle    0x14003169e
   14003162d:	mov    rbp,rbx
   140031630:	movzx  r9d,WORD PTR [rbp+0x0]
   140031635:	lea    rdx,[rsp+0x2c0]
   14003163d:	lea    rcx,[rsp+0xa0]
   140031645:	mov    r8d,0x6
   14003164b:	dec    edi
   14003164d:	add    rbp,0x2
   140031651:	call   0x140036e6c
   140031656:	xor    r10d,r10d
   140031659:	cmp    eax,r10d
   14003165c:	jne    0x140031690
   14003165e:	mov    edx,DWORD PTR [rsp+0xa0]
   140031665:	cmp    edx,r10d
   140031668:	je     0x140031690
   14003166a:	mov    r8,QWORD PTR [rsp+0x68]
   14003166f:	lea    r9,[rsp+0x40]
   140031674:	lea    rcx,[rsp+0x2c0]
   14003167c:	call   0x140030e14
   140031681:	xor    r10d,r10d
   140031684:	cmp    edi,r10d
   140031687:	jne    0x140031630
   140031689:	mov    rbp,QWORD PTR [rsp+0x68]
   14003168e:	jmp    0x1400316b3
   140031690:	mov    rbp,QWORD PTR [rsp+0x68]
   140031695:	mov    eax,r15d
   140031698:	mov    DWORD PTR [rsp+0x40],eax
   14003169c:	jmp    0x1400316b7
   14003169e:	lea    r9,[rsp+0x40]
   1400316a3:	mov    r8,rbp
   1400316a6:	mov    edx,edi
   1400316a8:	mov    rcx,rbx
   1400316ab:	call   0x140030e14
   1400316b0:	xor    r10d,r10d
   1400316b3:	mov    eax,DWORD PTR [rsp+0x40]
   1400316b7:	cmp    eax,r10d
   1400316ba:	jl     0x1400316d6
   1400316bc:	test   r12b,0x4
   1400316c0:	je     0x1400316d6
   1400316c2:	lea    r9,[rsp+0x40]
   1400316c7:	mov    r8,rbp
   1400316ca:	mov    edx,esi
   1400316cc:	mov    cl,0x20
   1400316ce:	call   0x140030dc0
   1400316d3:	xor    r10d,r10d
   1400316d6:	mov    rax,QWORD PTR [rsp+0x98]
   1400316de:	cmp    rax,r10
   1400316e1:	je     0x1400316f6
   1400316e3:	mov    rcx,rax
   1400316e6:	call   0x14002b36c
   1400316eb:	xor    r10d,r10d
   1400316ee:	mov    QWORD PTR [rsp+0x98],r10
   1400316f6:	mov    rdi,QWORD PTR [rsp+0xb0]
   1400316fe:	mov    esi,DWORD PTR [rsp+0x40]
   140031702:	mov    edx,DWORD PTR [rsp+0x5c]
   140031706:	lea    r9,[rip+0xfffffffffffce8f3]        # 0x140000000
   14003170d:	mov    r11d,0x200
   140031713:	mov    bpl,BYTE PTR [rdi]
   140031716:	cmp    bpl,r10b
   140031719:	jne    0x140031043
   14003171f:	cmp    BYTE PTR [rsp+0x90],r10b
   140031727:	je     0x140031738
   140031729:	mov    rcx,QWORD PTR [rsp+0x88]
   140031731:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140031738:	mov    eax,esi
   14003173a:	mov    rcx,QWORD PTR [rsp+0x2c8]
   140031742:	xor    rcx,rsp
   140031745:	call   0x14002b250
   14003174a:	mov    rbx,QWORD PTR [rsp+0x320]
   140031752:	add    rsp,0x2d0
   140031759:	pop    r15
   14003175b:	pop    r14
   14003175d:	pop    r13
   14003175f:	pop    r12
   140031761:	pop    rdi
   140031762:	pop    rsi
   140031763:	pop    rbp
   140031764:	ret    
   140031765:	cmp    bpl,0x49
   140031769:	je     0x1400317a5
   14003176b:	cmp    bpl,0x68
   14003176f:	je     0x14003179c
   140031771:	cmp    bpl,0x6c
   140031775:	je     0x140031784
   140031777:	cmp    bpl,0x77
   14003177b:	jne    0x140031713
   14003177d:	bts    r12d,0xb
   140031782:	jmp    0x140031713
   140031784:	cmp    BYTE PTR [rdi],0x6c
   140031787:	jne    0x140031793
   140031789:	inc    rdi
   14003178c:	bts    r12d,0xc
   140031791:	jmp    0x140031713
   140031793:	or     r12d,0x10
   140031797:	jmp    0x140031713
   14003179c:	or     r12d,0x20
   1400317a0:	jmp    0x140031713
   1400317a5:	mov    al,BYTE PTR [rdi]
   1400317a7:	bts    r12d,0xf
   1400317ac:	cmp    al,0x36
   1400317ae:	jne    0x1400317c4
   1400317b0:	cmp    BYTE PTR [rdi+0x1],0x34
   1400317b4:	jne    0x1400317c4
   1400317b6:	add    rdi,0x2
   1400317ba:	bts    r12d,0xf
   1400317bf:	jmp    0x140031713
   1400317c4:	cmp    al,0x33
   1400317c6:	jne    0x1400317dc
   1400317c8:	cmp    BYTE PTR [rdi+0x1],0x32
   1400317cc:	jne    0x1400317dc
   1400317ce:	add    rdi,0x2
   1400317d2:	btr    r12d,0xf
   1400317d7:	jmp    0x140031713
   1400317dc:	cmp    al,0x64
   1400317de:	je     0x140031713
   1400317e4:	cmp    al,0x69
   1400317e6:	je     0x140031713
   1400317ec:	cmp    al,0x6f
   1400317ee:	je     0x140031713
   1400317f4:	cmp    al,0x75
   1400317f6:	je     0x140031713
   1400317fc:	cmp    al,0x78
   1400317fe:	je     0x140031713
   140031804:	cmp    al,0x58
   140031806:	je     0x140031713
   14003180c:	mov    DWORD PTR [rsp+0x5c],r10d
   140031811:	lea    rdx,[rsp+0x78]
   140031816:	movzx  ecx,bpl
   14003181a:	mov    DWORD PTR [rsp+0x50],r10d
   14003181f:	call   0x140034d44
   140031824:	xor    esi,esi
   140031826:	cmp    eax,esi
   140031828:	je     0x14003184b
   14003182a:	mov    rdx,QWORD PTR [rsp+0x68]
   14003182f:	lea    r8,[rsp+0x40]
   140031834:	mov    cl,bpl
   140031837:	call   0x140030d78
   14003183c:	mov    bpl,BYTE PTR [rdi]
   14003183f:	inc    rdi
   140031842:	cmp    bpl,sil
   140031845:	je     0x14003194d
   14003184b:	mov    rdx,QWORD PTR [rsp+0x68]
   140031850:	lea    r8,[rsp+0x40]
   140031855:	mov    cl,bpl
   140031858:	call   0x140030d78
   14003185d:	xor    r10d,r10d
   140031860:	jmp    0x1400316fe
   140031865:	cmp    bpl,0x2a
   140031869:	jne    0x140031884
   14003186b:	mov    r14d,DWORD PTR [r13+0x0]
   14003186f:	add    r13,0x8
   140031873:	cmp    r14d,r10d
   140031876:	jge    0x140031713
   14003187c:	mov    r14d,r15d
   14003187f:	jmp    0x140031713
   140031884:	lea    ecx,[r14+r14*4]
   140031888:	movsx  eax,bpl
   14003188c:	lea    r14d,[rax+rcx*2-0x30]
   140031891:	jmp    0x140031713
   140031896:	mov    r14d,r10d
   140031899:	jmp    0x140031713
   14003189e:	cmp    bpl,0x2a
   1400318a2:	jne    0x1400318c1
   1400318a4:	mov    eax,DWORD PTR [r13+0x0]
   1400318a8:	add    r13,0x8
   1400318ac:	cmp    eax,r10d
   1400318af:	mov    DWORD PTR [rsp+0x54],eax
   1400318b3:	jge    0x140031713
   1400318b9:	or     r12d,0x4
   1400318bd:	neg    eax
   1400318bf:	jmp    0x1400318d0
   1400318c1:	mov    eax,DWORD PTR [rsp+0x54]
   1400318c5:	lea    ecx,[rax+rax*4]
   1400318c8:	movsx  eax,bpl
   1400318cc:	lea    eax,[rax+rcx*2-0x30]
   1400318d0:	mov    DWORD PTR [rsp+0x54],eax
   1400318d4:	jmp    0x140031713
   1400318d9:	cmp    bpl,0x20
   1400318dd:	je     0x140031920
   1400318df:	cmp    bpl,0x23
   1400318e3:	je     0x140031916
   1400318e5:	cmp    bpl,0x2b
   1400318e9:	je     0x14003190d
   1400318eb:	cmp    bpl,0x2d
   1400318ef:	je     0x140031904
   1400318f1:	cmp    bpl,0x30
   1400318f5:	jne    0x140031713
   1400318fb:	or     r12d,0x8
   1400318ff:	jmp    0x140031713
   140031904:	or     r12d,0x4
   140031908:	jmp    0x140031713
   14003190d:	or     r12d,0x1
   140031911:	jmp    0x140031713
   140031916:	bts    r12d,0x7
   14003191b:	jmp    0x140031713
   140031920:	or     r12d,0x2
   140031924:	jmp    0x140031713
   140031929:	mov    DWORD PTR [rsp+0x70],r10d
   14003192e:	mov    DWORD PTR [rsp+0x58],r10d
   140031933:	mov    DWORD PTR [rsp+0x54],r10d
   140031938:	mov    DWORD PTR [rsp+0x48],r10d
   14003193d:	mov    r12d,r10d
   140031940:	mov    r14d,r15d
   140031943:	mov    DWORD PTR [rsp+0x50],r10d
   140031948:	jmp    0x140031713
   14003194d:	call   0x14002b3f4
   140031952:	xor    r9d,r9d
   140031955:	xor    r8d,r8d
   140031958:	xor    edx,edx
   14003195a:	xor    ecx,ecx
   14003195c:	mov    QWORD PTR [rsp+0x20],rsi
   140031961:	mov    DWORD PTR [rax],0x16
   140031967:	call   0x140031aac
   14003196c:	cmp    BYTE PTR [rsp+0x90],sil
   140031974:	jmp    0x140030ff0
   140031979:	int3   
   14003197a:	int3   
   14003197b:	int3   
   14003197c:	mov    QWORD PTR [rip+0x389b5],rcx        # 0x14006a338
   140031983:	ret    
   140031984:	rex push rbx
   140031986:	sub    rsp,0x5e0
   14003198d:	and    DWORD PTR [rsp+0x70],0x0
   140031992:	lea    rcx,[rsp+0x74]
   140031997:	xor    edx,edx
   140031999:	mov    r8d,0x94
   14003199f:	call   0x14002b280
   1400319a4:	lea    r11,[rsp+0x70]
   1400319a9:	lea    rax,[rsp+0x110]
   1400319b1:	lea    rcx,[rsp+0x110]
   1400319b9:	mov    QWORD PTR [rsp+0x48],r11
   1400319be:	mov    QWORD PTR [rsp+0x50],rax
   1400319c3:	call   QWORD PTR [rip+0xb737]        # 0x14003d100
   1400319c9:	mov    rbx,QWORD PTR [rsp+0x208]
   1400319d1:	lea    rdx,[rsp+0x40]
   1400319d6:	mov    rcx,rbx
   1400319d9:	xor    r8d,r8d
   1400319dc:	call   0x14003b924
   1400319e1:	test   rax,rax
   1400319e4:	je     0x140031a21
   1400319e6:	and    QWORD PTR [rsp+0x38],0x0
   1400319ec:	mov    rdx,QWORD PTR [rsp+0x40]
   1400319f1:	lea    rcx,[rsp+0x60]
   1400319f6:	mov    QWORD PTR [rsp+0x30],rcx
   1400319fb:	lea    rcx,[rsp+0x58]
   140031a00:	mov    r9,rax
   140031a03:	mov    QWORD PTR [rsp+0x28],rcx
   140031a08:	lea    rcx,[rsp+0x110]
   140031a10:	mov    r8,rbx
   140031a13:	mov    QWORD PTR [rsp+0x20],rcx
   140031a18:	xor    ecx,ecx
   140031a1a:	call   0x14003b91e
   140031a1f:	jmp    0x140031a41
   140031a21:	mov    rax,QWORD PTR [rsp+0x5e8]
   140031a29:	mov    QWORD PTR [rsp+0x208],rax
   140031a31:	lea    rax,[rsp+0x5e8]
   140031a39:	mov    QWORD PTR [rsp+0x1a8],rax
   140031a41:	mov    rax,QWORD PTR [rsp+0x5e8]
   140031a49:	mov    DWORD PTR [rsp+0x70],0xc0000417
   140031a51:	mov    DWORD PTR [rsp+0x74],0x1
   140031a59:	mov    QWORD PTR [rsp+0x80],rax
   140031a61:	call   QWORD PTR [rip+0xb741]        # 0x14003d1a8
   140031a67:	xor    ecx,ecx
   140031a69:	mov    ebx,eax
   140031a6b:	call   QWORD PTR [rip+0xb687]        # 0x14003d0f8
   140031a71:	lea    rcx,[rsp+0x48]
   140031a76:	call   QWORD PTR [rip+0xb674]        # 0x14003d0f0
   140031a7c:	test   eax,eax
   140031a7e:	jne    0x140031a8c
   140031a80:	test   ebx,ebx
   140031a82:	jne    0x140031a8c
   140031a84:	lea    ecx,[rax+0x2]
   140031a87:	call   0x140036e80
   140031a8c:	call   QWORD PTR [rip+0xb69e]        # 0x14003d130
   140031a92:	mov    edx,0xc0000417
   140031a97:	mov    rcx,rax
   140031a9a:	call   QWORD PTR [rip+0xb700]        # 0x14003d1a0
   140031aa0:	add    rsp,0x5e0
   140031aa7:	pop    rbx
   140031aa8:	ret    
   140031aa9:	int3   
   140031aaa:	int3   
   140031aab:	int3   
   140031aac:	mov    QWORD PTR [rsp+0x8],rbx
   140031ab1:	mov    QWORD PTR [rsp+0x10],rbp
   140031ab6:	mov    QWORD PTR [rsp+0x18],rsi
   140031abb:	push   rdi
   140031abc:	sub    rsp,0x30
   140031ac0:	mov    rbp,rcx
   140031ac3:	mov    rcx,QWORD PTR [rip+0x3886e]        # 0x14006a338
   140031aca:	mov    ebx,r9d
   140031acd:	mov    rdi,r8
   140031ad0:	mov    rsi,rdx
   140031ad3:	call   0x140031ce0
   140031ad8:	test   rax,rax
   140031adb:	je     0x140031af7
   140031add:	mov    r10,QWORD PTR [rsp+0x60]
   140031ae2:	mov    r9d,ebx
   140031ae5:	mov    r8,rdi
   140031ae8:	mov    rdx,rsi
   140031aeb:	mov    rcx,rbp
   140031aee:	mov    QWORD PTR [rsp+0x20],r10
   140031af3:	call   rax
   140031af5:	jmp    0x140031b1c
   140031af7:	mov    ecx,0x2
   140031afc:	call   0x140036e80
   140031b01:	mov    r11,QWORD PTR [rsp+0x60]
   140031b06:	mov    r9d,ebx
   140031b09:	mov    r8,rdi
   140031b0c:	mov    rdx,rsi
   140031b0f:	mov    rcx,rbp
   140031b12:	mov    QWORD PTR [rsp+0x20],r11
   140031b17:	call   0x140031984
   140031b1c:	mov    rbx,QWORD PTR [rsp+0x40]
   140031b21:	mov    rbp,QWORD PTR [rsp+0x48]
   140031b26:	mov    rsi,QWORD PTR [rsp+0x50]
   140031b2b:	add    rsp,0x30
   140031b2f:	pop    rdi
   140031b30:	ret    
   140031b31:	int3   
   140031b32:	int3   
   140031b33:	int3   
   140031b34:	mov    QWORD PTR [rsp+0x8],rcx
   140031b39:	sub    rsp,0x88
   140031b40:	lea    rcx,[rip+0x38899]        # 0x14006a3e0
   140031b47:	call   QWORD PTR [rip+0xb5b3]        # 0x14003d100
   140031b4d:	mov    r11,QWORD PTR [rip+0x38984]        # 0x14006a4d8
   140031b54:	mov    QWORD PTR [rsp+0x58],r11
   140031b59:	xor    r8d,r8d
   140031b5c:	lea    rdx,[rsp+0x60]
   140031b61:	mov    rcx,QWORD PTR [rsp+0x58]
   140031b66:	call   0x14003b924
   140031b6b:	mov    QWORD PTR [rsp+0x50],rax
   140031b70:	cmp    QWORD PTR [rsp+0x50],0x0
   140031b76:	je     0x140031bb9
   140031b78:	mov    QWORD PTR [rsp+0x38],0x0
   140031b81:	lea    rax,[rsp+0x48]
   140031b86:	mov    QWORD PTR [rsp+0x30],rax
   140031b8b:	lea    rax,[rsp+0x40]
   140031b90:	mov    QWORD PTR [rsp+0x28],rax
   140031b95:	lea    rax,[rip+0x38844]        # 0x14006a3e0
   140031b9c:	mov    QWORD PTR [rsp+0x20],rax
   140031ba1:	mov    r9,QWORD PTR [rsp+0x50]
   140031ba6:	mov    r8,QWORD PTR [rsp+0x58]
   140031bab:	mov    rdx,QWORD PTR [rsp+0x60]
   140031bb0:	xor    ecx,ecx
   140031bb2:	call   0x14003b91e
   140031bb7:	jmp    0x140031bdb
   140031bb9:	mov    rax,QWORD PTR [rsp+0x88]
   140031bc1:	mov    QWORD PTR [rip+0x38910],rax        # 0x14006a4d8
   140031bc8:	lea    rax,[rsp+0x88]
   140031bd0:	add    rax,0x8
   140031bd4:	mov    QWORD PTR [rip+0x3889d],rax        # 0x14006a478
   140031bdb:	mov    rax,QWORD PTR [rip+0x388f6]        # 0x14006a4d8
   140031be2:	mov    QWORD PTR [rip+0x38767],rax        # 0x14006a350
   140031be9:	mov    rax,QWORD PTR [rsp+0x90]
   140031bf1:	mov    QWORD PTR [rip+0x38868],rax        # 0x14006a460
   140031bf8:	mov    DWORD PTR [rip+0x3873e],0xc0000409        # 0x14006a340
   140031c02:	mov    DWORD PTR [rip+0x38738],0x1        # 0x14006a344
   140031c0c:	mov    rax,QWORD PTR [rip+0x34c9d]        # 0x1400668b0
   140031c13:	mov    QWORD PTR [rsp+0x68],rax
   140031c18:	mov    rax,QWORD PTR [rip+0x34c99]        # 0x1400668b8
   140031c1f:	mov    QWORD PTR [rsp+0x70],rax
   140031c24:	call   QWORD PTR [rip+0xb57e]        # 0x14003d1a8
   140031c2a:	mov    DWORD PTR [rip+0x387a8],eax        # 0x14006a3d8
   140031c30:	mov    ecx,0x1
   140031c35:	call   0x140036e80
   140031c3a:	xor    ecx,ecx
   140031c3c:	call   QWORD PTR [rip+0xb4b6]        # 0x14003d0f8
   140031c42:	lea    rcx,[rip+0x1e267]        # 0x14004feb0
   140031c49:	call   QWORD PTR [rip+0xb4a1]        # 0x14003d0f0
   140031c4f:	cmp    DWORD PTR [rip+0x38782],0x0        # 0x14006a3d8
   140031c56:	jne    0x140031c62
   140031c58:	mov    ecx,0x1
   140031c5d:	call   0x140036e80
   140031c62:	call   QWORD PTR [rip+0xb4c8]        # 0x14003d130
   140031c68:	mov    edx,0xc0000409
   140031c6d:	mov    rcx,rax
   140031c70:	call   QWORD PTR [rip+0xb52a]        # 0x14003d1a0
   140031c76:	add    rsp,0x88
   140031c7d:	ret    
   140031c7e:	int3   
   140031c7f:	int3   
   140031c80:	mov    DWORD PTR [rsp+0x8],ecx
   140031c84:	sub    rsp,0x28
   140031c88:	xor    r8d,r8d
   140031c8b:	mov    edx,0x1000
   140031c90:	xor    ecx,ecx
   140031c92:	call   QWORD PTR [rip+0xb530]        # 0x14003d1c8
   140031c98:	mov    QWORD PTR [rip+0x38c11],rax        # 0x14006a8b0
   140031c9f:	test   rax,rax
   140031ca2:	je     0x140031cc7
   140031ca4:	lea    r8,[rsp+0x30]
   140031ca9:	mov    r9d,0x4
   140031caf:	xor    edx,edx
   140031cb1:	mov    rcx,rax
   140031cb4:	mov    DWORD PTR [rsp+0x30],0x2
   140031cbc:	call   QWORD PTR [rip+0xb4fe]        # 0x14003d1c0
   140031cc2:	mov    eax,0x1
   140031cc7:	add    rsp,0x28
   140031ccb:	ret    
   140031ccc:	rex.W jmp QWORD PTR [rip+0xb4fd]        # 0x14003d1d0
   140031cd3:	int3   
   140031cd4:	xor    ecx,ecx
   140031cd6:	rex.W jmp QWORD PTR [rip+0xb4f3]        # 0x14003d1d0
   140031cdd:	int3   
   140031cde:	int3   
   140031cdf:	int3   
   140031ce0:	rex.W jmp QWORD PTR [rip+0xb4f1]        # 0x14003d1d8
   140031ce7:	int3   
   140031ce8:	sub    rsp,0x28
   140031cec:	mov    ecx,DWORD PTR [rip+0x352b2]        # 0x140066fa4
   140031cf2:	cmp    ecx,0xffffffff
   140031cf5:	je     0x140031d04
   140031cf7:	call   QWORD PTR [rip+0xb4f3]        # 0x14003d1f0
   140031cfd:	or     DWORD PTR [rip+0x352a0],0xffffffff        # 0x140066fa4
   140031d04:	add    rsp,0x28
   140031d08:	jmp    0x14002fc10
   140031d0d:	int3   
   140031d0e:	int3   
   140031d0f:	int3   
   140031d10:	mov    QWORD PTR [rsp+0x8],rbx
   140031d15:	push   rdi
   140031d16:	sub    rsp,0x20
   140031d1a:	mov    rdi,rdx
   140031d1d:	mov    rbx,rcx
   140031d20:	lea    rax,[rip+0x1e219]        # 0x14004ff40
   140031d27:	mov    QWORD PTR [rcx+0xa0],rax
   140031d2e:	mov    DWORD PTR [rcx+0x1c],0x1
   140031d35:	mov    DWORD PTR [rcx+0xc8],0x1
   140031d3f:	mov    BYTE PTR [rcx+0x174],0x43
   140031d46:	mov    BYTE PTR [rcx+0x1f7],0x43
   140031d4d:	lea    rax,[rip+0x3525c]        # 0x140066fb0
   140031d54:	mov    QWORD PTR [rcx+0xb8],rax
   140031d5b:	mov    ecx,0xd
   140031d60:	call   0x14002fd94
   140031d65:	nop
   140031d66:	mov    rax,QWORD PTR [rbx+0xb8]
   140031d6d:	lock add DWORD PTR [rax],0x1
   140031d71:	mov    ecx,0xd
   140031d76:	call   0x14002fc94
   140031d7b:	mov    ecx,0xc
   140031d80:	call   0x14002fd94
   140031d85:	nop
   140031d86:	mov    QWORD PTR [rbx+0xc0],rdi
   140031d8d:	test   rdi,rdi
   140031d90:	jne    0x140031da0
   140031d92:	mov    rax,QWORD PTR [rip+0x358c7]        # 0x140067660
   140031d99:	mov    QWORD PTR [rbx+0xc0],rax
   140031da0:	mov    rcx,QWORD PTR [rbx+0xc0]
   140031da7:	call   0x140032a00
   140031dac:	nop
   140031dad:	mov    ecx,0xc
   140031db2:	call   0x14002fc94
   140031db7:	mov    rbx,QWORD PTR [rsp+0x30]
   140031dbc:	add    rsp,0x20
   140031dc0:	pop    rdi
   140031dc1:	ret    
   140031dc2:	int3   
   140031dc3:	int3   
   140031dc4:	mov    QWORD PTR [rsp+0x8],rbx
   140031dc9:	push   rdi
   140031dca:	sub    rsp,0x20
   140031dce:	call   QWORD PTR [rip+0xb564]        # 0x14003d338
   140031dd4:	mov    ecx,DWORD PTR [rip+0x351ca]        # 0x140066fa4
   140031dda:	mov    edi,eax
   140031ddc:	call   QWORD PTR [rip+0xb3fe]        # 0x14003d1e0
   140031de2:	mov    rbx,rax
   140031de5:	test   rax,rax
   140031de8:	jne    0x140031e32
   140031dea:	lea    ecx,[rax+0x1]
   140031ded:	mov    edx,0x2c8
   140031df2:	call   0x140030134
   140031df7:	mov    rbx,rax
   140031dfa:	test   rax,rax
   140031dfd:	je     0x140031e32
   140031dff:	mov    ecx,DWORD PTR [rip+0x3519f]        # 0x140066fa4
   140031e05:	mov    rdx,rax
   140031e08:	call   QWORD PTR [rip+0xb3da]        # 0x14003d1e8
   140031e0e:	mov    rcx,rbx
   140031e11:	test   eax,eax
   140031e13:	je     0x140031e2b
   140031e15:	xor    edx,edx
   140031e17:	call   0x140031d10
   140031e1c:	call   QWORD PTR [rip+0xb296]        # 0x14003d0b8
   140031e22:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140031e27:	mov    DWORD PTR [rbx],eax
   140031e29:	jmp    0x140031e32
   140031e2b:	call   0x14002b36c
   140031e30:	xor    ebx,ebx
   140031e32:	mov    ecx,edi
   140031e34:	call   QWORD PTR [rip+0xb4c6]        # 0x14003d300
   140031e3a:	mov    rax,rbx
   140031e3d:	mov    rbx,QWORD PTR [rsp+0x30]
   140031e42:	add    rsp,0x20
   140031e46:	pop    rdi
   140031e47:	ret    
   140031e48:	rex push rbx
   140031e4a:	sub    rsp,0x20
   140031e4e:	call   0x140031dc4
   140031e53:	mov    rbx,rax
   140031e56:	test   rax,rax
   140031e59:	jne    0x140031e63
   140031e5b:	lea    ecx,[rax+0x10]
   140031e5e:	call   0x140030378
   140031e63:	mov    rax,rbx
   140031e66:	add    rsp,0x20
   140031e6a:	pop    rbx
   140031e6b:	ret    
   140031e6c:	test   rcx,rcx
   140031e6f:	je     0x140031fa0
   140031e75:	mov    QWORD PTR [rsp+0x10],rbx
   140031e7a:	push   rdi
   140031e7b:	sub    rsp,0x20
   140031e7f:	mov    rbx,rcx
   140031e82:	mov    rcx,QWORD PTR [rcx+0x38]
   140031e86:	test   rcx,rcx
   140031e89:	je     0x140031e90
   140031e8b:	call   0x14002b36c
   140031e90:	mov    rcx,QWORD PTR [rbx+0x48]
   140031e94:	test   rcx,rcx
   140031e97:	je     0x140031e9e
   140031e99:	call   0x14002b36c
   140031e9e:	mov    rcx,QWORD PTR [rbx+0x58]
   140031ea2:	test   rcx,rcx
   140031ea5:	je     0x140031eac
   140031ea7:	call   0x14002b36c
   140031eac:	mov    rcx,QWORD PTR [rbx+0x68]
   140031eb0:	test   rcx,rcx
   140031eb3:	je     0x140031eba
   140031eb5:	call   0x14002b36c
   140031eba:	mov    rcx,QWORD PTR [rbx+0x70]
   140031ebe:	test   rcx,rcx
   140031ec1:	je     0x140031ec8
   140031ec3:	call   0x14002b36c
   140031ec8:	mov    rcx,QWORD PTR [rbx+0x78]
   140031ecc:	test   rcx,rcx
   140031ecf:	je     0x140031ed6
   140031ed1:	call   0x14002b36c
   140031ed6:	mov    rcx,QWORD PTR [rbx+0x80]
   140031edd:	test   rcx,rcx
   140031ee0:	je     0x140031ee7
   140031ee2:	call   0x14002b36c
   140031ee7:	mov    rcx,QWORD PTR [rbx+0xa0]
   140031eee:	lea    rax,[rip+0x1e04b]        # 0x14004ff40
   140031ef5:	cmp    rcx,rax
   140031ef8:	je     0x140031eff
   140031efa:	call   0x14002b36c
   140031eff:	mov    ecx,0xd
   140031f04:	call   0x14002fd94
   140031f09:	nop
   140031f0a:	mov    rcx,QWORD PTR [rbx+0xb8]
   140031f11:	mov    QWORD PTR [rsp+0x30],rcx
   140031f16:	test   rcx,rcx
   140031f19:	je     0x140031f38
   140031f1b:	lock add DWORD PTR [rcx],0xffffffff
   140031f1f:	jne    0x140031f38
   140031f21:	lea    rax,[rip+0x35088]        # 0x140066fb0
   140031f28:	mov    rcx,QWORD PTR [rsp+0x30]
   140031f2d:	cmp    rcx,rax
   140031f30:	je     0x140031f38
   140031f32:	call   0x14002b36c
   140031f37:	nop
   140031f38:	mov    ecx,0xd
   140031f3d:	call   0x14002fc94
   140031f42:	mov    ecx,0xc
   140031f47:	call   0x14002fd94
   140031f4c:	nop
   140031f4d:	mov    rdi,QWORD PTR [rbx+0xc0]
   140031f54:	test   rdi,rdi
   140031f57:	je     0x140031f84
   140031f59:	mov    rcx,rdi
   140031f5c:	call   0x140032a98
   140031f61:	cmp    rdi,QWORD PTR [rip+0x356f8]        # 0x140067660
   140031f68:	je     0x140031f84
   140031f6a:	lea    rax,[rip+0x3558f]        # 0x140067500
   140031f71:	cmp    rdi,rax
   140031f74:	je     0x140031f84
   140031f76:	cmp    DWORD PTR [rdi],0x0
   140031f79:	jne    0x140031f84
   140031f7b:	mov    rcx,rdi
   140031f7e:	call   0x140032884
   140031f83:	nop
   140031f84:	mov    ecx,0xc
   140031f89:	call   0x14002fc94
   140031f8e:	mov    rcx,rbx
   140031f91:	call   0x14002b36c
   140031f96:	mov    rbx,QWORD PTR [rsp+0x38]
   140031f9b:	add    rsp,0x20
   140031f9f:	pop    rdi
   140031fa0:	ret    
   140031fa1:	int3   
   140031fa2:	int3   
   140031fa3:	int3   
   140031fa4:	rex push rbx
   140031fa6:	sub    rsp,0x20
   140031faa:	call   0x1400306f8
   140031faf:	call   0x14002fb84
   140031fb4:	test   eax,eax
   140031fb6:	je     0x140032018
   140031fb8:	lea    rcx,[rip+0xfffffffffffffead]        # 0x140031e6c
   140031fbf:	call   QWORD PTR [rip+0xb233]        # 0x14003d1f8
   140031fc5:	mov    DWORD PTR [rip+0x34fd9],eax        # 0x140066fa4
   140031fcb:	cmp    eax,0xffffffff
   140031fce:	je     0x140032018
   140031fd0:	mov    edx,0x2c8
   140031fd5:	mov    ecx,0x1
   140031fda:	call   0x140030134
   140031fdf:	mov    rbx,rax
   140031fe2:	test   rax,rax
   140031fe5:	je     0x140032018
   140031fe7:	mov    ecx,DWORD PTR [rip+0x34fb7]        # 0x140066fa4
   140031fed:	mov    rdx,rax
   140031ff0:	call   QWORD PTR [rip+0xb1f2]        # 0x14003d1e8
   140031ff6:	test   eax,eax
   140031ff8:	je     0x140032018
   140031ffa:	xor    edx,edx
   140031ffc:	mov    rcx,rbx
   140031fff:	call   0x140031d10
   140032004:	call   QWORD PTR [rip+0xb0ae]        # 0x14003d0b8
   14003200a:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14003200f:	mov    DWORD PTR [rbx],eax
   140032011:	mov    eax,0x1
   140032016:	jmp    0x14003201f
   140032018:	call   0x140031ce8
   14003201d:	xor    eax,eax
   14003201f:	add    rsp,0x20
   140032023:	pop    rbx
   140032024:	ret    
   140032025:	int3   
   140032026:	int3   
   140032027:	int3   
   140032028:	mov    QWORD PTR [rsp+0x8],rbx
   14003202d:	mov    QWORD PTR [rsp+0x10],rbp
   140032032:	mov    QWORD PTR [rsp+0x18],rsi
   140032037:	push   rdi
   140032038:	sub    rsp,0x20
   14003203c:	lea    rbx,[rcx+0x1c]
   140032040:	mov    rbp,rcx
   140032043:	mov    esi,0x101
   140032048:	mov    rcx,rbx
   14003204b:	mov    r8,rsi
   14003204e:	xor    edx,edx
   140032050:	call   0x14002b280
   140032055:	xor    r11d,r11d
   140032058:	lea    rdi,[rbp+0x10]
   14003205c:	lea    ecx,[r11+0x6]
   140032060:	movzx  eax,r11w
   140032064:	mov    DWORD PTR [rbp+0x4],r11d
   140032068:	mov    DWORD PTR [rbp+0x8],r11d
   14003206c:	mov    DWORD PTR [rbp+0xc],r11d
   140032070:	rep stos WORD PTR es:[rdi],ax
   140032073:	lea    rdi,[rip+0x34f36]        # 0x140066fb0
   14003207a:	sub    rdi,rbp
   14003207d:	mov    al,BYTE PTR [rdi+rbx*1]
   140032080:	mov    BYTE PTR [rbx],al
   140032082:	inc    rbx
   140032085:	sub    rsi,0x1
   140032089:	jne    0x14003207d
   14003208b:	lea    rcx,[rbp+0x11d]
   140032092:	mov    edx,0x100
   140032097:	mov    al,BYTE PTR [rcx+rdi*1]
   14003209a:	mov    BYTE PTR [rcx],al
   14003209c:	inc    rcx
   14003209f:	sub    rdx,0x1
   1400320a3:	jne    0x140032097
   1400320a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400320aa:	mov    rbp,QWORD PTR [rsp+0x38]
   1400320af:	mov    rsi,QWORD PTR [rsp+0x40]
   1400320b4:	add    rsp,0x20
   1400320b8:	pop    rdi
   1400320b9:	ret    
   1400320ba:	int3   
   1400320bb:	int3   
   1400320bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400320c1:	mov    QWORD PTR [rsp+0x18],rsi
   1400320c6:	push   rdi
   1400320c7:	sub    rsp,0x580
   1400320ce:	mov    rax,QWORD PTR [rip+0x347db]        # 0x1400668b0
   1400320d5:	xor    rax,rsp
   1400320d8:	mov    QWORD PTR [rsp+0x570],rax
   1400320e0:	mov    rsi,rcx
   1400320e3:	mov    ecx,DWORD PTR [rcx+0x4]
   1400320e6:	lea    rdx,[rsp+0x50]
   1400320eb:	call   QWORD PTR [rip+0xb10f]        # 0x14003d200
   1400320f1:	mov    ebx,0x100
   1400320f6:	test   eax,eax
   1400320f8:	je     0x14003223b
   1400320fe:	xor    eax,eax
   140032100:	lea    rdx,[rsp+0x70]
   140032105:	mov    BYTE PTR [rdx],al
   140032107:	inc    eax
   140032109:	inc    rdx
   14003210c:	cmp    eax,ebx
   14003210e:	jb     0x140032105
   140032110:	mov    al,BYTE PTR [rsp+0x56]
   140032114:	mov    BYTE PTR [rsp+0x70],0x20
   140032119:	lea    rdi,[rsp+0x56]
   14003211e:	jmp    0x140032149
   140032120:	movzx  edx,BYTE PTR [rdi+0x1]
   140032124:	movzx  r8d,al
   140032128:	cmp    r8d,edx
   14003212b:	ja     0x140032143
   14003212d:	sub    edx,r8d
   140032130:	mov    rax,r8
   140032133:	lea    rcx,[rsp+r8*1+0x70]
   140032138:	lea    r8d,[rdx+0x1]
   14003213c:	mov    dl,0x20
   14003213e:	call   0x14002b280
   140032143:	add    rdi,0x2
   140032147:	mov    al,BYTE PTR [rdi]
   140032149:	test   al,al
   14003214b:	jne    0x140032120
   14003214d:	mov    eax,DWORD PTR [rsi+0xc]
   140032150:	and    DWORD PTR [rsp+0x38],0x0
   140032155:	lea    r8,[rsp+0x70]
   14003215a:	mov    DWORD PTR [rsp+0x30],eax
   14003215e:	mov    eax,DWORD PTR [rsi+0x4]
   140032161:	mov    r9d,ebx
   140032164:	mov    DWORD PTR [rsp+0x28],eax
   140032168:	lea    rax,[rsp+0x370]
   140032170:	mov    edx,0x1
   140032175:	xor    ecx,ecx
   140032177:	mov    QWORD PTR [rsp+0x20],rax
   14003217c:	call   0x1400370f4
   140032181:	and    DWORD PTR [rsp+0x40],0x0
   140032186:	mov    eax,DWORD PTR [rsi+0x4]
   140032189:	mov    edx,DWORD PTR [rsi+0xc]
   14003218c:	mov    DWORD PTR [rsp+0x38],eax
   140032190:	lea    rax,[rsp+0x170]
   140032198:	mov    DWORD PTR [rsp+0x30],ebx
   14003219c:	mov    QWORD PTR [rsp+0x28],rax
   1400321a1:	lea    r9,[rsp+0x70]
   1400321a6:	mov    r8d,ebx
   1400321a9:	xor    ecx,ecx
   1400321ab:	mov    DWORD PTR [rsp+0x20],ebx
   1400321af:	call   0x140034a10
   1400321b4:	and    DWORD PTR [rsp+0x40],0x0
   1400321b9:	mov    eax,DWORD PTR [rsi+0x4]
   1400321bc:	mov    edx,DWORD PTR [rsi+0xc]
   1400321bf:	mov    DWORD PTR [rsp+0x38],eax
   1400321c3:	lea    rax,[rsp+0x270]
   1400321cb:	mov    DWORD PTR [rsp+0x30],ebx
   1400321cf:	mov    QWORD PTR [rsp+0x28],rax
   1400321d4:	lea    r9,[rsp+0x70]
   1400321d9:	mov    r8d,0x200
   1400321df:	xor    ecx,ecx
   1400321e1:	mov    DWORD PTR [rsp+0x20],ebx
   1400321e5:	call   0x140034a10
   1400321ea:	lea    r11,[rsp+0x370]
   1400321f2:	lea    rcx,[rsi+0x1d]
   1400321f6:	xor    edx,edx
   1400321f8:	test   BYTE PTR [r11],0x1
   1400321fc:	je     0x14003220a
   1400321fe:	or     BYTE PTR [rcx],0x10
   140032201:	mov    al,BYTE PTR [rsp+rdx*1+0x170]
   140032208:	jmp    0x14003221a
   14003220a:	test   BYTE PTR [r11],0x2
   14003220e:	je     0x140032222
   140032210:	or     BYTE PTR [rcx],0x20
   140032213:	mov    al,BYTE PTR [rsp+rdx*1+0x270]
   14003221a:	mov    BYTE PTR [rcx+0x100],al
   140032220:	jmp    0x140032229
   140032222:	mov    BYTE PTR [rcx+0x100],0x0
   140032229:	inc    rcx
   14003222c:	inc    rdx
   14003222f:	add    r11,0x2
   140032233:	sub    rbx,0x1
   140032237:	jne    0x1400321f8
   140032239:	jmp    0x14003227a
   14003223b:	xor    edx,edx
   14003223d:	lea    rcx,[rsi+0x1d]
   140032241:	lea    r8d,[rdx-0x61]
   140032245:	lea    eax,[r8+0x20]
   140032249:	cmp    eax,0x19
   14003224c:	ja     0x140032256
   14003224e:	or     BYTE PTR [rcx],0x10
   140032251:	lea    eax,[rdx+0x20]
   140032254:	jmp    0x140032262
   140032256:	cmp    r8d,0x19
   14003225a:	ja     0x14003226a
   14003225c:	or     BYTE PTR [rcx],0x20
   14003225f:	lea    eax,[rdx-0x20]
   140032262:	mov    BYTE PTR [rcx+0x100],al
   140032268:	jmp    0x140032271
   14003226a:	mov    BYTE PTR [rcx+0x100],0x0
   140032271:	inc    edx
   140032273:	inc    rcx
   140032276:	cmp    edx,ebx
   140032278:	jb     0x140032241
   14003227a:	mov    rcx,QWORD PTR [rsp+0x570]
   140032282:	xor    rcx,rsp
   140032285:	call   0x14002b250
   14003228a:	lea    r11,[rsp+0x580]
   140032292:	mov    rbx,QWORD PTR [r11+0x18]
   140032296:	mov    rsi,QWORD PTR [r11+0x20]
   14003229a:	mov    rsp,r11
   14003229d:	pop    rdi
   14003229e:	ret    
   14003229f:	int3   
   1400322a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400322a5:	push   rdi
   1400322a6:	sub    rsp,0x20
   1400322aa:	call   0x140031e48
   1400322af:	mov    rdi,rax
   1400322b2:	mov    ecx,DWORD PTR [rax+0xc8]
   1400322b8:	test   DWORD PTR [rip+0x3522a],ecx        # 0x1400674e8
   1400322be:	je     0x1400322d3
   1400322c0:	cmp    QWORD PTR [rax+0xc0],0x0
   1400322c8:	je     0x1400322d3
   1400322ca:	mov    rbx,QWORD PTR [rax+0xb8]
   1400322d1:	jmp    0x140032341
   1400322d3:	mov    ecx,0xd
   1400322d8:	call   0x14002fd94
   1400322dd:	nop
   1400322de:	mov    rbx,QWORD PTR [rdi+0xb8]
   1400322e5:	mov    QWORD PTR [rsp+0x30],rbx
   1400322ea:	cmp    rbx,QWORD PTR [rip+0x350ef]        # 0x1400673e0
   1400322f1:	je     0x140032337
   1400322f3:	test   rbx,rbx
   1400322f6:	je     0x140032314
   1400322f8:	lock add DWORD PTR [rbx],0xffffffff
   1400322fc:	jne    0x140032314
   1400322fe:	lea    rax,[rip+0x34cab]        # 0x140066fb0
   140032305:	mov    rcx,QWORD PTR [rsp+0x30]
   14003230a:	cmp    rcx,rax
   14003230d:	je     0x140032314
   14003230f:	call   0x14002b36c
   140032314:	mov    rax,QWORD PTR [rip+0x350c5]        # 0x1400673e0
   14003231b:	mov    QWORD PTR [rdi+0xb8],rax
   140032322:	mov    rax,QWORD PTR [rip+0x350b7]        # 0x1400673e0
   140032329:	mov    QWORD PTR [rsp+0x30],rax
   14003232e:	lock add DWORD PTR [rax],0x1
   140032332:	mov    rbx,QWORD PTR [rsp+0x30]
   140032337:	mov    ecx,0xd
   14003233c:	call   0x14002fc94
   140032341:	test   rbx,rbx
   140032344:	jne    0x14003234e
   140032346:	lea    ecx,[rbx+0x20]
   140032349:	call   0x140030378
   14003234e:	mov    rax,rbx
   140032351:	mov    rbx,QWORD PTR [rsp+0x38]
   140032356:	add    rsp,0x20
   14003235a:	pop    rdi
   14003235b:	ret    
   14003235c:	rex push rbx
   14003235e:	sub    rsp,0x40
   140032362:	mov    ebx,ecx
   140032364:	lea    rcx,[rsp+0x20]
   140032369:	xor    edx,edx
   14003236b:	call   0x14002b47c
   140032370:	and    DWORD PTR [rip+0x38541],0x0        # 0x14006a8b8
   140032377:	cmp    ebx,0xfffffffe
   14003237a:	jne    0x1400323a1
   14003237c:	mov    DWORD PTR [rip+0x38532],0x1        # 0x14006a8b8
   140032386:	call   QWORD PTR [rip+0xae7c]        # 0x14003d208
   14003238c:	cmp    BYTE PTR [rsp+0x38],0x0
   140032391:	je     0x1400323e6
   140032393:	mov    rcx,QWORD PTR [rsp+0x30]
   140032398:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003239f:	jmp    0x1400323e6
   1400323a1:	cmp    ebx,0xfffffffd
   1400323a4:	jne    0x1400323b8
   1400323a6:	mov    DWORD PTR [rip+0x38508],0x1        # 0x14006a8b8
   1400323b0:	call   QWORD PTR [rip+0xacea]        # 0x14003d0a0
   1400323b6:	jmp    0x14003238c
   1400323b8:	cmp    ebx,0xfffffffc
   1400323bb:	jne    0x1400323d1
   1400323bd:	mov    rax,QWORD PTR [rsp+0x20]
   1400323c2:	mov    DWORD PTR [rip+0x384ec],0x1        # 0x14006a8b8
   1400323cc:	mov    eax,DWORD PTR [rax+0x4]
   1400323cf:	jmp    0x14003238c
   1400323d1:	cmp    BYTE PTR [rsp+0x38],0x0
   1400323d6:	je     0x1400323e4
   1400323d8:	mov    rax,QWORD PTR [rsp+0x30]
   1400323dd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400323e4:	mov    eax,ebx
   1400323e6:	add    rsp,0x40
   1400323ea:	pop    rbx
   1400323eb:	ret    
   1400323ec:	mov    QWORD PTR [rsp+0x18],rbx
   1400323f1:	push   rbp
   1400323f2:	push   rsi
   1400323f3:	push   rdi
   1400323f4:	push   r12
   1400323f6:	push   r13
   1400323f8:	sub    rsp,0x40
   1400323fc:	mov    rax,QWORD PTR [rip+0x344ad]        # 0x1400668b0
   140032403:	xor    rax,rsp
   140032406:	mov    QWORD PTR [rsp+0x38],rax
   14003240b:	mov    rsi,rdx
   14003240e:	call   0x14003235c
   140032413:	xor    ebx,ebx
   140032415:	mov    edi,eax
   140032417:	cmp    eax,ebx
   140032419:	jne    0x140032428
   14003241b:	mov    rcx,rsi
   14003241e:	call   0x140032028
   140032423:	jmp    0x140032640
   140032428:	lea    r13,[rip+0x34fc1]        # 0x1400673f0
   14003242f:	mov    ecx,ebx
   140032431:	mov    rbp,rbx
   140032434:	mov    rax,r13
   140032437:	mov    r12d,0x1
   14003243d:	cmp    DWORD PTR [rax],edi
   14003243f:	je     0x14003256c
   140032445:	add    ecx,r12d
   140032448:	add    rbp,r12
   14003244b:	add    rax,0x30
   14003244f:	cmp    ecx,0x5
   140032452:	jb     0x14003243d
   140032454:	cmp    edi,0xfde8
   14003245a:	je     0x140032564
   140032460:	cmp    edi,0xfde9
   140032466:	je     0x140032564
   14003246c:	movzx  ecx,di
   14003246f:	call   QWORD PTR [rip+0xad9b]        # 0x14003d210
   140032475:	cmp    eax,ebx
   140032477:	je     0x140032564
   14003247d:	lea    rdx,[rsp+0x20]
   140032482:	mov    ecx,edi
   140032484:	call   QWORD PTR [rip+0xad76]        # 0x14003d200
   14003248a:	cmp    eax,ebx
   14003248c:	je     0x140032558
   140032492:	lea    rcx,[rsi+0x1c]
   140032496:	xor    edx,edx
   140032498:	mov    r8d,0x101
   14003249e:	call   0x14002b280
   1400324a3:	mov    DWORD PTR [rsi+0x4],edi
   1400324a6:	mov    DWORD PTR [rsi+0xc],ebx
   1400324a9:	cmp    DWORD PTR [rsp+0x20],r12d
   1400324ae:	jbe    0x140032541
   1400324b4:	lea    rax,[rsp+0x26]
   1400324b9:	cmp    BYTE PTR [rsp+0x26],bl
   1400324bd:	je     0x1400324ec
   1400324bf:	cmp    BYTE PTR [rax+0x1],bl
   1400324c2:	je     0x1400324ec
   1400324c4:	movzx  edi,BYTE PTR [rax]
   1400324c7:	movzx  ecx,BYTE PTR [rax+0x1]
   1400324cb:	cmp    edi,ecx
   1400324cd:	ja     0x1400324e4
   1400324cf:	sub    ecx,edi
   1400324d1:	lea    rdx,[rdi+rsi*1+0x1d]
   1400324d6:	add    ecx,r12d
   1400324d9:	or     BYTE PTR [rdx],0x4
   1400324dc:	add    rdx,r12
   1400324df:	sub    rcx,r12
   1400324e2:	jne    0x1400324d9
   1400324e4:	add    rax,0x2
   1400324e8:	cmp    BYTE PTR [rax],bl
   1400324ea:	jne    0x1400324bf
   1400324ec:	lea    rax,[rsi+0x1e]
   1400324f0:	mov    ecx,0xfe
   1400324f5:	or     BYTE PTR [rax],0x8
   1400324f8:	add    rax,r12
   1400324fb:	sub    rcx,r12
   1400324fe:	jne    0x1400324f5
   140032500:	mov    ecx,DWORD PTR [rsi+0x4]
   140032503:	sub    ecx,0x3a4
   140032509:	je     0x140032533
   14003250b:	sub    ecx,0x4
   14003250e:	je     0x14003252c
   140032510:	sub    ecx,0xd
   140032513:	je     0x140032525
   140032515:	cmp    ecx,r12d
   140032518:	je     0x14003251e
   14003251a:	mov    eax,ebx
   14003251c:	jmp    0x140032538
   14003251e:	mov    eax,0x404
   140032523:	jmp    0x140032538
   140032525:	mov    eax,0x412
   14003252a:	jmp    0x140032538
   14003252c:	mov    eax,0x804
   140032531:	jmp    0x140032538
   140032533:	mov    eax,0x411
   140032538:	mov    DWORD PTR [rsi+0xc],eax
   14003253b:	mov    DWORD PTR [rsi+0x8],r12d
   14003253f:	jmp    0x140032544
   140032541:	mov    DWORD PTR [rsi+0x8],ebx
   140032544:	lea    rdi,[rsi+0x10]
   140032548:	movzx  eax,bx
   14003254b:	mov    ecx,0x6
   140032550:	rep stos WORD PTR es:[rdi],ax
   140032553:	jmp    0x140032638
   140032558:	cmp    DWORD PTR [rip+0x3835a],ebx        # 0x14006a8b8
   14003255e:	jne    0x14003241b
   140032564:	or     eax,0xffffffff
   140032567:	jmp    0x140032642
   14003256c:	lea    rcx,[rsi+0x1c]
   140032570:	xor    edx,edx
   140032572:	mov    r8d,0x101
   140032578:	call   0x14002b280
   14003257d:	lea    rbp,[rbp+rbp*2+0x0]
   140032582:	lea    r11,[rip+0x34e5f]        # 0x1400673e8
   140032589:	add    rbp,rbp
   14003258c:	mov    r10d,0x4
   140032592:	lea    r8,[r13+rbp*8+0x10]
   140032597:	mov    rcx,r8
   14003259a:	cmp    BYTE PTR [r8],bl
   14003259d:	je     0x1400325d0
   14003259f:	cmp    BYTE PTR [rcx+0x1],bl
   1400325a2:	je     0x1400325d0
   1400325a4:	movzx  edx,BYTE PTR [rcx]
   1400325a7:	movzx  eax,BYTE PTR [rcx+0x1]
   1400325ab:	cmp    edx,eax
   1400325ad:	ja     0x1400325c8
   1400325af:	lea    r9,[rdx+rsi*1+0x1d]
   1400325b4:	mov    al,BYTE PTR [r11]
   1400325b7:	add    edx,r12d
   1400325ba:	or     BYTE PTR [r9],al
   1400325bd:	movzx  eax,BYTE PTR [rcx+0x1]
   1400325c1:	add    r9,r12
   1400325c4:	cmp    edx,eax
   1400325c6:	jbe    0x1400325b4
   1400325c8:	add    rcx,0x2
   1400325cc:	cmp    BYTE PTR [rcx],bl
   1400325ce:	jne    0x14003259f
   1400325d0:	add    r8,0x8
   1400325d4:	add    r11,r12
   1400325d7:	sub    r10,r12
   1400325da:	jne    0x140032597
   1400325dc:	mov    DWORD PTR [rsi+0x4],edi
   1400325df:	sub    edi,0x3a4
   1400325e5:	mov    DWORD PTR [rsi+0x8],r12d
   1400325e9:	je     0x14003260f
   1400325eb:	sub    edi,0x4
   1400325ee:	je     0x140032608
   1400325f0:	sub    edi,0xd
   1400325f3:	je     0x140032601
   1400325f5:	cmp    edi,r12d
   1400325f8:	jne    0x140032614
   1400325fa:	mov    ebx,0x404
   1400325ff:	jmp    0x140032614
   140032601:	mov    ebx,0x412
   140032606:	jmp    0x140032614
   140032608:	mov    ebx,0x804
   14003260d:	jmp    0x140032614
   14003260f:	mov    ebx,0x411
   140032614:	mov    DWORD PTR [rsi+0xc],ebx
   140032617:	lea    rdx,[rsi+0x10]
   14003261b:	lea    rdi,[r13+rbp*8+0x4]
   140032620:	mov    ecx,0x6
   140032625:	movzx  eax,WORD PTR [rdi]
   140032628:	add    rdi,0x2
   14003262c:	mov    WORD PTR [rdx],ax
   14003262f:	add    rdx,0x2
   140032633:	sub    rcx,r12
   140032636:	jne    0x140032625
   140032638:	mov    rcx,rsi
   14003263b:	call   0x1400320bc
   140032640:	xor    eax,eax
   140032642:	mov    rcx,QWORD PTR [rsp+0x38]
   140032647:	xor    rcx,rsp
   14003264a:	call   0x14002b250
   14003264f:	mov    rbx,QWORD PTR [rsp+0x80]
   140032657:	add    rsp,0x40
   14003265b:	pop    r13
   14003265d:	pop    r12
   14003265f:	pop    rdi
   140032660:	pop    rsi
   140032661:	pop    rbp
   140032662:	ret    
   140032663:	int3   
   140032664:	mov    rax,rsp
   140032667:	mov    QWORD PTR [rax+0x8],rbx
   14003266b:	mov    QWORD PTR [rax+0x10],rsi
   14003266f:	mov    QWORD PTR [rax+0x18],rdi
   140032673:	mov    QWORD PTR [rax+0x20],r12
   140032677:	push   r13
   140032679:	sub    rsp,0x30
   14003267d:	mov    edi,ecx
   14003267f:	or     r13d,0xffffffff
   140032683:	call   0x140031e48
   140032688:	mov    rsi,rax
   14003268b:	call   0x1400322a0
   140032690:	mov    rbx,QWORD PTR [rsi+0xb8]
   140032697:	mov    ecx,edi
   140032699:	call   0x14003235c
   14003269e:	mov    r12d,eax
   1400326a1:	cmp    eax,DWORD PTR [rbx+0x4]
   1400326a4:	je     0x140032839
   1400326aa:	mov    ecx,0x220
   1400326af:	call   0x1400300c8
   1400326b4:	mov    rbx,rax
   1400326b7:	xor    edi,edi
   1400326b9:	cmp    rax,rdi
   1400326bc:	je     0x14003283e
   1400326c2:	mov    rdx,QWORD PTR [rsi+0xb8]
   1400326c9:	mov    rcx,rax
   1400326cc:	mov    r8d,0x220
   1400326d2:	call   0x14002b9a0
   1400326d7:	mov    DWORD PTR [rbx],edi
   1400326d9:	mov    rdx,rbx
   1400326dc:	mov    ecx,r12d
   1400326df:	call   0x1400323ec
   1400326e4:	mov    r13d,eax
   1400326e7:	cmp    eax,edi
   1400326e9:	jne    0x140032813
   1400326ef:	mov    rcx,QWORD PTR [rsi+0xb8]
   1400326f6:	lock add DWORD PTR [rcx],0xffffffff
   1400326fa:	jne    0x140032716
   1400326fc:	mov    rcx,QWORD PTR [rsi+0xb8]
   140032703:	lea    r12,[rip+0x348a6]        # 0x140066fb0
   14003270a:	cmp    rcx,r12
   14003270d:	je     0x14003271d
   14003270f:	call   0x14002b36c
   140032714:	jmp    0x14003271d
   140032716:	lea    r12,[rip+0x34893]        # 0x140066fb0
   14003271d:	mov    QWORD PTR [rsi+0xb8],rbx
   140032724:	lock add DWORD PTR [rbx],0x1
   140032728:	test   BYTE PTR [rsi+0xc8],0x2
   14003272f:	jne    0x14003283e
   140032735:	test   BYTE PTR [rip+0x34dac],0x1        # 0x1400674e8
   14003273c:	jne    0x14003283e
   140032742:	mov    ecx,0xd
   140032747:	call   0x14002fd94
   14003274c:	nop
   14003274d:	mov    eax,DWORD PTR [rbx+0x4]
   140032750:	mov    DWORD PTR [rip+0x38176],eax        # 0x14006a8cc
   140032756:	mov    eax,DWORD PTR [rbx+0x8]
   140032759:	mov    DWORD PTR [rip+0x38171],eax        # 0x14006a8d0
   14003275f:	mov    eax,DWORD PTR [rbx+0xc]
   140032762:	mov    DWORD PTR [rip+0x3816c],eax        # 0x14006a8d4
   140032768:	mov    edx,edi
   14003276a:	mov    DWORD PTR [rsp+0x20],edx
   14003276e:	lea    r8,[rip+0xfffffffffffcd88b]        # 0x140000000
   140032775:	cmp    edx,0x5
   140032778:	jge    0x140032793
   14003277a:	movsxd rcx,edx
   14003277d:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140032782:	mov    WORD PTR [r8+rcx*2+0x6a8c0],ax
   14003278b:	inc    edx
   14003278d:	mov    DWORD PTR [rsp+0x20],edx
   140032791:	jmp    0x140032775
   140032793:	mov    edx,edi
   140032795:	mov    DWORD PTR [rsp+0x20],edx
   140032799:	cmp    edx,0x101
   14003279f:	jge    0x1400327b8
   1400327a1:	movsxd rcx,edx
   1400327a4:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   1400327a8:	mov    BYTE PTR [rcx+r8*1+0x671d0],al
   1400327b0:	inc    edx
   1400327b2:	mov    DWORD PTR [rsp+0x20],edx
   1400327b6:	jmp    0x140032799
   1400327b8:	mov    DWORD PTR [rsp+0x20],edi
   1400327bc:	cmp    edi,0x100
   1400327c2:	jge    0x1400327de
   1400327c4:	movsxd rcx,edi
   1400327c7:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   1400327ce:	mov    BYTE PTR [rcx+r8*1+0x672e0],al
   1400327d6:	inc    edi
   1400327d8:	mov    DWORD PTR [rsp+0x20],edi
   1400327dc:	jmp    0x1400327bc
   1400327de:	mov    rax,QWORD PTR [rip+0x34bfb]        # 0x1400673e0
   1400327e5:	lock add DWORD PTR [rax],0xffffffff
   1400327e9:	jne    0x1400327fc
   1400327eb:	mov    rcx,QWORD PTR [rip+0x34bee]        # 0x1400673e0
   1400327f2:	cmp    rcx,r12
   1400327f5:	je     0x1400327fc
   1400327f7:	call   0x14002b36c
   1400327fc:	mov    QWORD PTR [rip+0x34bdd],rbx        # 0x1400673e0
   140032803:	lock add DWORD PTR [rbx],0x1
   140032807:	mov    ecx,0xd
   14003280c:	call   0x14002fc94
   140032811:	jmp    0x14003283e
   140032813:	cmp    eax,0xffffffff
   140032816:	jne    0x14003283e
   140032818:	lea    r12,[rip+0x34791]        # 0x140066fb0
   14003281f:	cmp    rbx,r12
   140032822:	je     0x14003282c
   140032824:	mov    rcx,rbx
   140032827:	call   0x14002b36c
   14003282c:	call   0x14002b3f4
   140032831:	mov    DWORD PTR [rax],0x16
   140032837:	jmp    0x14003283e
   140032839:	xor    edi,edi
   14003283b:	mov    r13d,edi
   14003283e:	mov    eax,r13d
   140032841:	mov    rbx,QWORD PTR [rsp+0x40]
   140032846:	mov    rsi,QWORD PTR [rsp+0x48]
   14003284b:	mov    rdi,QWORD PTR [rsp+0x50]
   140032850:	mov    r12,QWORD PTR [rsp+0x58]
   140032855:	add    rsp,0x30
   140032859:	pop    r13
   14003285b:	ret    
   14003285c:	sub    rsp,0x28
   140032860:	cmp    DWORD PTR [rip+0x38269],0x0        # 0x14006aad0
   140032867:	jne    0x14003287d
   140032869:	mov    ecx,0xfffffffd
   14003286e:	call   0x140032664
   140032873:	mov    DWORD PTR [rip+0x38253],0x1        # 0x14006aad0
   14003287d:	xor    eax,eax
   14003287f:	add    rsp,0x28
   140032883:	ret    
   140032884:	mov    QWORD PTR [rsp+0x8],rbx
   140032889:	mov    QWORD PTR [rsp+0x10],rsi
   14003288e:	push   rdi
   14003288f:	sub    rsp,0x20
   140032893:	mov    rax,QWORD PTR [rcx+0x128]
   14003289a:	mov    rbx,rcx
   14003289d:	test   rax,rax
   1400328a0:	je     0x14003291b
   1400328a2:	lea    rcx,[rip+0x341b7]        # 0x140066a60
   1400328a9:	cmp    rax,rcx
   1400328ac:	je     0x14003291b
   1400328ae:	mov    rax,QWORD PTR [rbx+0x110]
   1400328b5:	test   rax,rax
   1400328b8:	je     0x14003291b
   1400328ba:	cmp    DWORD PTR [rax],0x0
   1400328bd:	jne    0x14003291b
   1400328bf:	mov    rcx,QWORD PTR [rbx+0x120]
   1400328c6:	test   rcx,rcx
   1400328c9:	je     0x1400328e1
   1400328cb:	cmp    DWORD PTR [rcx],0x0
   1400328ce:	jne    0x1400328e1
   1400328d0:	call   0x14002b36c
   1400328d5:	mov    rcx,QWORD PTR [rbx+0x128]
   1400328dc:	call   0x1400373b4
   1400328e1:	mov    rcx,QWORD PTR [rbx+0x118]
   1400328e8:	test   rcx,rcx
   1400328eb:	je     0x140032903
   1400328ed:	cmp    DWORD PTR [rcx],0x0
   1400328f0:	jne    0x140032903
   1400328f2:	call   0x14002b36c
   1400328f7:	mov    rcx,QWORD PTR [rbx+0x128]
   1400328fe:	call   0x14003736c
   140032903:	mov    rcx,QWORD PTR [rbx+0x110]
   14003290a:	call   0x14002b36c
   14003290f:	mov    rcx,QWORD PTR [rbx+0x128]
   140032916:	call   0x14002b36c
   14003291b:	mov    rax,QWORD PTR [rbx+0x130]
   140032922:	test   rax,rax
   140032925:	je     0x14003296e
   140032927:	cmp    DWORD PTR [rax],0x0
   14003292a:	jne    0x14003296e
   14003292c:	mov    rcx,QWORD PTR [rbx+0x138]
   140032933:	sub    rcx,0xfe
   14003293a:	call   0x14002b36c
   14003293f:	mov    rcx,QWORD PTR [rbx+0x148]
   140032946:	mov    edi,0x80
   14003294b:	sub    rcx,rdi
   14003294e:	call   0x14002b36c
   140032953:	mov    rcx,QWORD PTR [rbx+0x150]
   14003295a:	sub    rcx,rdi
   14003295d:	call   0x14002b36c
   140032962:	mov    rcx,QWORD PTR [rbx+0x130]
   140032969:	call   0x14002b36c
   14003296e:	mov    rcx,QWORD PTR [rbx+0x158]
   140032975:	lea    rax,[rip+0x35084]        # 0x140067a00
   14003297c:	cmp    rcx,rax
   14003297f:	je     0x14003299b
   140032981:	cmp    DWORD PTR [rcx+0x160],0x0
   140032988:	jne    0x14003299b
   14003298a:	call   0x140037180
   14003298f:	mov    rcx,QWORD PTR [rbx+0x158]
   140032996:	call   0x14002b36c
   14003299b:	lea    rdi,[rbx+0x58]
   14003299f:	mov    esi,0x6
   1400329a4:	lea    rax,[rip+0x34b45]        # 0x1400674f0
   1400329ab:	cmp    QWORD PTR [rdi-0x10],rax
   1400329af:	je     0x1400329c3
   1400329b1:	mov    rcx,QWORD PTR [rdi]
   1400329b4:	test   rcx,rcx
   1400329b7:	je     0x1400329c3
   1400329b9:	cmp    DWORD PTR [rcx],0x0
   1400329bc:	jne    0x1400329c3
   1400329be:	call   0x14002b36c
   1400329c3:	cmp    QWORD PTR [rdi-0x8],0x0
   1400329c8:	je     0x1400329dd
   1400329ca:	mov    rcx,QWORD PTR [rdi+0x8]
   1400329ce:	test   rcx,rcx
   1400329d1:	je     0x1400329dd
   1400329d3:	cmp    DWORD PTR [rcx],0x0
   1400329d6:	jne    0x1400329dd
   1400329d8:	call   0x14002b36c
   1400329dd:	add    rdi,0x20
   1400329e1:	sub    rsi,0x1
   1400329e5:	jne    0x1400329a4
   1400329e7:	mov    rcx,rbx
   1400329ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400329ef:	mov    rsi,QWORD PTR [rsp+0x38]
   1400329f4:	add    rsp,0x20
   1400329f8:	pop    rdi
   1400329f9:	jmp    0x14002b36c
   1400329fe:	int3   
   1400329ff:	int3   
   140032a00:	lock add DWORD PTR [rcx],0x1
   140032a04:	mov    rax,QWORD PTR [rcx+0x110]
   140032a0b:	test   rax,rax
   140032a0e:	je     0x140032a14
   140032a10:	lock add DWORD PTR [rax],0x1
   140032a14:	mov    rax,QWORD PTR [rcx+0x120]
   140032a1b:	test   rax,rax
   140032a1e:	je     0x140032a24
   140032a20:	lock add DWORD PTR [rax],0x1
   140032a24:	mov    rax,QWORD PTR [rcx+0x118]
   140032a2b:	test   rax,rax
   140032a2e:	je     0x140032a34
   140032a30:	lock add DWORD PTR [rax],0x1
   140032a34:	mov    rax,QWORD PTR [rcx+0x130]
   140032a3b:	test   rax,rax
   140032a3e:	je     0x140032a44
   140032a40:	lock add DWORD PTR [rax],0x1
   140032a44:	lea    rax,[rcx+0x58]
   140032a48:	mov    r8d,0x6
   140032a4e:	lea    rdx,[rip+0x34a9b]        # 0x1400674f0
   140032a55:	cmp    QWORD PTR [rax-0x10],rdx
   140032a59:	je     0x140032a67
   140032a5b:	mov    rdx,QWORD PTR [rax]
   140032a5e:	test   rdx,rdx
   140032a61:	je     0x140032a67
   140032a63:	lock add DWORD PTR [rdx],0x1
   140032a67:	cmp    QWORD PTR [rax-0x8],0x0
   140032a6c:	je     0x140032a7b
   140032a6e:	mov    rdx,QWORD PTR [rax+0x8]
   140032a72:	test   rdx,rdx
   140032a75:	je     0x140032a7b
   140032a77:	lock add DWORD PTR [rdx],0x1
   140032a7b:	add    rax,0x20
   140032a7f:	sub    r8,0x1
   140032a83:	jne    0x140032a4e
   140032a85:	mov    rax,QWORD PTR [rcx+0x158]
   140032a8c:	lock add DWORD PTR [rax+0x160],0x1
   140032a94:	ret    
   140032a95:	int3   
   140032a96:	int3   
   140032a97:	int3   
   140032a98:	test   rcx,rcx
   140032a9b:	je     0x140032b39
   140032aa1:	or     r9d,0xffffffff
   140032aa5:	lock add DWORD PTR [rcx],r9d
   140032aa9:	mov    rax,QWORD PTR [rcx+0x110]
   140032ab0:	test   rax,rax
   140032ab3:	je     0x140032ab9
   140032ab5:	lock add DWORD PTR [rax],r9d
   140032ab9:	mov    rax,QWORD PTR [rcx+0x120]
   140032ac0:	test   rax,rax
   140032ac3:	je     0x140032ac9
   140032ac5:	lock add DWORD PTR [rax],r9d
   140032ac9:	mov    rax,QWORD PTR [rcx+0x118]
   140032ad0:	test   rax,rax
   140032ad3:	je     0x140032ad9
   140032ad5:	lock add DWORD PTR [rax],r9d
   140032ad9:	mov    rax,QWORD PTR [rcx+0x130]
   140032ae0:	test   rax,rax
   140032ae3:	je     0x140032ae9
   140032ae5:	lock add DWORD PTR [rax],r9d
   140032ae9:	lea    rax,[rcx+0x58]
   140032aed:	mov    r8d,0x6
   140032af3:	lea    rdx,[rip+0x349f6]        # 0x1400674f0
   140032afa:	cmp    QWORD PTR [rax-0x10],rdx
   140032afe:	je     0x140032b0c
   140032b00:	mov    rdx,QWORD PTR [rax]
   140032b03:	test   rdx,rdx
   140032b06:	je     0x140032b0c
   140032b08:	lock add DWORD PTR [rdx],r9d
   140032b0c:	cmp    QWORD PTR [rax-0x8],0x0
   140032b11:	je     0x140032b20
   140032b13:	mov    rdx,QWORD PTR [rax+0x8]
   140032b17:	test   rdx,rdx
   140032b1a:	je     0x140032b20
   140032b1c:	lock add DWORD PTR [rdx],r9d
   140032b20:	add    rax,0x20
   140032b24:	sub    r8,0x1
   140032b28:	jne    0x140032af3
   140032b2a:	mov    rax,QWORD PTR [rcx+0x158]
   140032b31:	lock add DWORD PTR [rax+0x160],r9d
   140032b39:	mov    rax,rcx
   140032b3c:	ret    
   140032b3d:	int3   
   140032b3e:	int3   
   140032b3f:	int3   
   140032b40:	rex push rbx
   140032b42:	sub    rsp,0x20
   140032b46:	mov    rbx,rdx
   140032b49:	test   rdx,rdx
   140032b4c:	je     0x140032b8f
   140032b4e:	test   rcx,rcx
   140032b51:	je     0x140032b8f
   140032b53:	mov    r10,QWORD PTR [rcx]
   140032b56:	cmp    r10,rdx
   140032b59:	je     0x140032b8a
   140032b5b:	mov    QWORD PTR [rcx],rdx
   140032b5e:	mov    rcx,rdx
   140032b61:	call   0x140032a00
   140032b66:	test   r10,r10
   140032b69:	je     0x140032b8a
   140032b6b:	mov    rcx,r10
   140032b6e:	call   0x140032a98
   140032b73:	cmp    DWORD PTR [r10],0x0
   140032b77:	jne    0x140032b8a
   140032b79:	lea    rax,[rip+0x34980]        # 0x140067500
   140032b80:	cmp    r10,rax
   140032b83:	je     0x140032b8a
   140032b85:	call   0x140032884
   140032b8a:	mov    rax,rbx
   140032b8d:	jmp    0x140032b91
   140032b8f:	xor    eax,eax
   140032b91:	add    rsp,0x20
   140032b95:	pop    rbx
   140032b96:	ret    
   140032b97:	int3   
   140032b98:	rex push rbx
   140032b9a:	sub    rsp,0x20
   140032b9e:	call   0x140031e48
   140032ba3:	mov    rbx,rax
   140032ba6:	mov    ecx,DWORD PTR [rax+0xc8]
   140032bac:	test   DWORD PTR [rip+0x34936],ecx        # 0x1400674e8
   140032bb2:	je     0x140032bcc
   140032bb4:	cmp    QWORD PTR [rax+0xc0],0x0
   140032bbc:	je     0x140032bcc
   140032bbe:	call   0x140031e48
   140032bc3:	mov    rbx,QWORD PTR [rax+0xc0]
   140032bca:	jmp    0x140032bf7
   140032bcc:	mov    ecx,0xc
   140032bd1:	call   0x14002fd94
   140032bd6:	nop
   140032bd7:	lea    rcx,[rbx+0xc0]
   140032bde:	mov    rdx,QWORD PTR [rip+0x34a7b]        # 0x140067660
   140032be5:	call   0x140032b40
   140032bea:	mov    rbx,rax
   140032bed:	mov    ecx,0xc
   140032bf2:	call   0x14002fc94
   140032bf7:	test   rbx,rbx
   140032bfa:	jne    0x140032c04
   140032bfc:	lea    ecx,[rbx+0x20]
   140032bff:	call   0x140030378
   140032c04:	mov    rax,rbx
   140032c07:	add    rsp,0x20
   140032c0b:	pop    rbx
   140032c0c:	ret    
   140032c0d:	int3   
   140032c0e:	int3   
   140032c0f:	int3   
   140032c10:	mov    QWORD PTR [rsp+0x10],rbp
   140032c15:	mov    QWORD PTR [rsp+0x18],rsi
   140032c1a:	push   rdi
   140032c1b:	sub    rsp,0x60
   140032c1f:	movsxd rdi,ecx
   140032c22:	mov    ebp,edx
   140032c24:	lea    rcx,[rsp+0x40]
   140032c29:	mov    rdx,r8
   140032c2c:	call   0x14002b47c
   140032c31:	lea    r11d,[rdi+0x1]
   140032c35:	cmp    r11d,0x100
   140032c3c:	ja     0x140032c53
   140032c3e:	mov    rax,QWORD PTR [rsp+0x40]
   140032c43:	mov    rcx,QWORD PTR [rax+0x140]
   140032c4a:	movzx  eax,WORD PTR [rcx+rdi*2]
   140032c4e:	jmp    0x140032cf2
   140032c53:	mov    esi,edi
   140032c55:	lea    rdx,[rsp+0x40]
   140032c5a:	sar    esi,0x8
   140032c5d:	movzx  ecx,sil
   140032c61:	call   0x140034d44
   140032c66:	mov    edx,0x1
   140032c6b:	test   eax,eax
   140032c6d:	je     0x140032c8d
   140032c6f:	mov    BYTE PTR [rsp+0x88],sil
   140032c77:	mov    BYTE PTR [rsp+0x89],dil
   140032c7f:	mov    BYTE PTR [rsp+0x8a],0x0
   140032c87:	lea    r9d,[rdx+0x1]
   140032c8b:	jmp    0x140032ca0
   140032c8d:	mov    BYTE PTR [rsp+0x88],dil
   140032c95:	mov    BYTE PTR [rsp+0x89],0x0
   140032c9d:	mov    r9d,edx
   140032ca0:	mov    rcx,QWORD PTR [rsp+0x40]
   140032ca5:	mov    DWORD PTR [rsp+0x38],edx
   140032ca9:	lea    r8,[rsp+0x88]
   140032cb1:	mov    eax,DWORD PTR [rcx+0x14]
   140032cb4:	mov    DWORD PTR [rsp+0x30],eax
   140032cb8:	mov    eax,DWORD PTR [rcx+0x4]
   140032cbb:	lea    rcx,[rsp+0x40]
   140032cc0:	mov    DWORD PTR [rsp+0x28],eax
   140032cc4:	lea    rax,[rsp+0x70]
   140032cc9:	mov    QWORD PTR [rsp+0x20],rax
   140032cce:	call   0x1400370f4
   140032cd3:	test   eax,eax
   140032cd5:	jne    0x140032ced
   140032cd7:	cmp    BYTE PTR [rsp+0x58],al
   140032cdb:	je     0x140032ce9
   140032cdd:	mov    rax,QWORD PTR [rsp+0x50]
   140032ce2:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140032ce9:	xor    eax,eax
   140032ceb:	jmp    0x140032d07
   140032ced:	movzx  eax,WORD PTR [rsp+0x70]
   140032cf2:	and    eax,ebp
   140032cf4:	cmp    BYTE PTR [rsp+0x58],0x0
   140032cf9:	je     0x140032d07
   140032cfb:	mov    rcx,QWORD PTR [rsp+0x50]
   140032d00:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140032d07:	lea    r11,[rsp+0x60]
   140032d0c:	mov    rbp,QWORD PTR [r11+0x18]
   140032d10:	mov    rsi,QWORD PTR [r11+0x20]
   140032d14:	mov    rsp,r11
   140032d17:	pop    rdi
   140032d18:	ret    
   140032d19:	int3   
   140032d1a:	int3   
   140032d1b:	int3   
   140032d1c:	sub    rsp,0x28
   140032d20:	mov    rax,QWORD PTR [rcx]
   140032d23:	cmp    DWORD PTR [rax],0xe06d7363
   140032d29:	jne    0x140032d56
   140032d2b:	cmp    DWORD PTR [rax+0x18],0x4
   140032d2f:	jne    0x140032d56
   140032d31:	mov    eax,DWORD PTR [rax+0x20]
   140032d34:	cmp    eax,0x19930520
   140032d39:	je     0x140032d50
   140032d3b:	cmp    eax,0x19930521
   140032d40:	je     0x140032d50
   140032d42:	cmp    eax,0x19930522
   140032d47:	je     0x140032d50
   140032d49:	cmp    eax,0x1994000
   140032d4e:	jne    0x140032d56
   140032d50:	call   0x140036924
   140032d55:	int3   
   140032d56:	xor    eax,eax
   140032d58:	add    rsp,0x28
   140032d5c:	ret    
   140032d5d:	int3   
   140032d5e:	int3   
   140032d5f:	int3   
   140032d60:	sub    rsp,0x28
   140032d64:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140032d1c
   140032d6b:	call   QWORD PTR [rip+0xa387]        # 0x14003d0f8
   140032d71:	xor    eax,eax
   140032d73:	add    rsp,0x28
   140032d77:	ret    
   140032d78:	mov    QWORD PTR [rsp+0x8],rbx
   140032d7d:	mov    QWORD PTR [rsp+0x10],rbp
   140032d82:	mov    QWORD PTR [rsp+0x18],rsi
   140032d87:	push   rdi
   140032d88:	sub    rsp,0x20
   140032d8c:	mov    rsi,rdx
   140032d8f:	mov    edi,ecx
   140032d91:	call   0x140031dc4
   140032d96:	xor    r11d,r11d
   140032d99:	mov    rbx,rax
   140032d9c:	cmp    rax,r11
   140032d9f:	je     0x140032f2f
   140032da5:	mov    rcx,QWORD PTR [rax+0xa0]
   140032dac:	movsxd r8,DWORD PTR [rip+0x348d9]        # 0x14006768c
   140032db3:	mov    rdx,rcx
   140032db6:	cmp    DWORD PTR [rdx],edi
   140032db8:	je     0x140032dcd
   140032dba:	mov    rax,r8
   140032dbd:	add    rdx,0x10
   140032dc1:	shl    rax,0x4
   140032dc5:	add    rax,rcx
   140032dc8:	cmp    rdx,rax
   140032dcb:	jb     0x140032db6
   140032dcd:	mov    rax,r8
   140032dd0:	shl    rax,0x4
   140032dd4:	add    rax,rcx
   140032dd7:	cmp    rdx,rax
   140032dda:	jae    0x140032de0
   140032ddc:	cmp    DWORD PTR [rdx],edi
   140032dde:	je     0x140032de3
   140032de0:	mov    rdx,r11
   140032de3:	cmp    rdx,r11
   140032de6:	je     0x140032f2f
   140032dec:	mov    r8,QWORD PTR [rdx+0x8]
   140032df0:	cmp    r8,r11
   140032df3:	je     0x140032f2f
   140032df9:	cmp    r8,0x5
   140032dfd:	jne    0x140032e0c
   140032dff:	mov    QWORD PTR [rdx+0x8],r11
   140032e03:	lea    eax,[r8-0x4]
   140032e07:	jmp    0x140032f31
   140032e0c:	cmp    r8,0x1
   140032e10:	jne    0x140032e1a
   140032e12:	or     eax,0xffffffff
   140032e15:	jmp    0x140032f31
   140032e1a:	mov    rbp,QWORD PTR [rbx+0xa8]
   140032e21:	mov    QWORD PTR [rbx+0xa8],rsi
   140032e28:	mov    ecx,DWORD PTR [rdx+0x4]
   140032e2b:	cmp    ecx,0x8
   140032e2e:	jne    0x140032f1c
   140032e34:	movsxd r10,DWORD PTR [rip+0x34845]        # 0x140067680
   140032e3b:	mov    ecx,DWORD PTR [rip+0x34843]        # 0x140067684
   140032e41:	add    ecx,r10d
   140032e44:	mov    r9,r10
   140032e47:	cmp    r10d,ecx
   140032e4a:	jge    0x140032e76
   140032e4c:	shl    r9,0x4
   140032e50:	mov    rax,QWORD PTR [rbx+0xa0]
   140032e57:	inc    r10d
   140032e5a:	add    r9,0x10
   140032e5e:	mov    QWORD PTR [r9+rax*1-0x8],r11
   140032e63:	mov    ecx,DWORD PTR [rip+0x34817]        # 0x140067680
   140032e69:	mov    eax,DWORD PTR [rip+0x34815]        # 0x140067684
   140032e6f:	add    ecx,eax
   140032e71:	cmp    r10d,ecx
   140032e74:	jl     0x140032e50
   140032e76:	cmp    DWORD PTR [rdx],0xc000008e
   140032e7c:	mov    edi,DWORD PTR [rbx+0xb0]
   140032e82:	jne    0x140032e90
   140032e84:	mov    DWORD PTR [rbx+0xb0],0x83
   140032e8e:	jmp    0x140032f06
   140032e90:	cmp    DWORD PTR [rdx],0xc0000090
   140032e96:	jne    0x140032ea4
   140032e98:	mov    DWORD PTR [rbx+0xb0],0x81
   140032ea2:	jmp    0x140032f06
   140032ea4:	cmp    DWORD PTR [rdx],0xc0000091
   140032eaa:	jne    0x140032eb8
   140032eac:	mov    DWORD PTR [rbx+0xb0],0x84
   140032eb6:	jmp    0x140032f06
   140032eb8:	cmp    DWORD PTR [rdx],0xc0000093
   140032ebe:	jne    0x140032ecc
   140032ec0:	mov    DWORD PTR [rbx+0xb0],0x85
   140032eca:	jmp    0x140032f06
   140032ecc:	cmp    DWORD PTR [rdx],0xc000008d
   140032ed2:	jne    0x140032ee0
   140032ed4:	mov    DWORD PTR [rbx+0xb0],0x82
   140032ede:	jmp    0x140032f06
   140032ee0:	cmp    DWORD PTR [rdx],0xc000008f
   140032ee6:	jne    0x140032ef4
   140032ee8:	mov    DWORD PTR [rbx+0xb0],0x86
   140032ef2:	jmp    0x140032f06
   140032ef4:	cmp    DWORD PTR [rdx],0xc0000092
   140032efa:	jne    0x140032f06
   140032efc:	mov    DWORD PTR [rbx+0xb0],0x8a
   140032f06:	mov    edx,DWORD PTR [rbx+0xb0]
   140032f0c:	mov    ecx,0x8
   140032f11:	call   r8
   140032f14:	mov    DWORD PTR [rbx+0xb0],edi
   140032f1a:	jmp    0x140032f23
   140032f1c:	mov    QWORD PTR [rdx+0x8],r11
   140032f20:	call   r8
   140032f23:	mov    QWORD PTR [rbx+0xa8],rbp
   140032f2a:	jmp    0x140032e12
   140032f2f:	xor    eax,eax
   140032f31:	mov    rbx,QWORD PTR [rsp+0x30]
   140032f36:	mov    rbp,QWORD PTR [rsp+0x38]
   140032f3b:	mov    rsi,QWORD PTR [rsp+0x40]
   140032f40:	add    rsp,0x20
   140032f44:	pop    rdi
   140032f45:	ret    
   140032f46:	int3   
   140032f47:	int3   
   140032f48:	mov    QWORD PTR [rsp+0x8],rbx
   140032f4d:	mov    QWORD PTR [rsp+0x10],rbp
   140032f52:	mov    QWORD PTR [rsp+0x18],rsi
   140032f57:	push   rdi
   140032f58:	sub    rsp,0x30
   140032f5c:	cmp    DWORD PTR [rip+0x37b6d],0x0        # 0x14006aad0
   140032f63:	jne    0x140032f6a
   140032f65:	call   0x14003285c
   140032f6a:	mov    rbx,QWORD PTR [rip+0x36cf7]        # 0x140069c68
   140032f71:	xor    edi,edi
   140032f73:	test   rbx,rbx
   140032f76:	jne    0x140032f93
   140032f78:	or     eax,0xffffffff
   140032f7b:	jmp    0x140033049
   140032f80:	cmp    al,0x3d
   140032f82:	je     0x140032f86
   140032f84:	inc    edi
   140032f86:	mov    rcx,rbx
   140032f89:	call   0x140035dd0
   140032f8e:	lea    rbx,[rbx+rax*1+0x1]
   140032f93:	mov    al,BYTE PTR [rbx]
   140032f95:	test   al,al
   140032f97:	jne    0x140032f80
   140032f99:	lea    eax,[rdi+0x1]
   140032f9c:	mov    edx,0x8
   140032fa1:	movsxd rcx,eax
   140032fa4:	call   0x140030134
   140032fa9:	mov    rdi,rax
   140032fac:	mov    QWORD PTR [rip+0x36fed],rax        # 0x140069fa0
   140032fb3:	test   rax,rax
   140032fb6:	je     0x140032f78
   140032fb8:	mov    rbx,QWORD PTR [rip+0x36ca9]        # 0x140069c68
   140032fbf:	cmp    BYTE PTR [rbx],0x0
   140032fc2:	je     0x140033029
   140032fc4:	mov    rcx,rbx
   140032fc7:	call   0x140035dd0
   140032fcc:	cmp    BYTE PTR [rbx],0x3d
   140032fcf:	lea    esi,[rax+0x1]
   140032fd2:	je     0x140033017
   140032fd4:	movsxd rbp,esi
   140032fd7:	mov    edx,0x1
   140032fdc:	mov    rcx,rbp
   140032fdf:	call   0x140030134
   140032fe4:	mov    QWORD PTR [rdi],rax
   140032fe7:	test   rax,rax
   140032fea:	je     0x14003305e
   140032fec:	mov    r8,rbx
   140032fef:	mov    rdx,rbp
   140032ff2:	mov    rcx,rax
   140032ff5:	call   0x14003445c
   140032ffa:	test   eax,eax
   140032ffc:	je     0x140033013
   140032ffe:	and    QWORD PTR [rsp+0x20],0x0
   140033004:	xor    r9d,r9d
   140033007:	xor    r8d,r8d
   14003300a:	xor    edx,edx
   14003300c:	xor    ecx,ecx
   14003300e:	call   0x140031984
   140033013:	add    rdi,0x8
   140033017:	movsxd rax,esi
   14003301a:	add    rbx,rax
   14003301d:	cmp    BYTE PTR [rbx],0x0
   140033020:	jne    0x140032fc4
   140033022:	mov    rbx,QWORD PTR [rip+0x36c3f]        # 0x140069c68
   140033029:	mov    rcx,rbx
   14003302c:	call   0x14002b36c
   140033031:	and    QWORD PTR [rip+0x36c2f],0x0        # 0x140069c68
   140033039:	and    QWORD PTR [rdi],0x0
   14003303d:	mov    DWORD PTR [rip+0x37a75],0x1        # 0x14006aabc
   140033047:	xor    eax,eax
   140033049:	mov    rbx,QWORD PTR [rsp+0x40]
   14003304e:	mov    rbp,QWORD PTR [rsp+0x48]
   140033053:	mov    rsi,QWORD PTR [rsp+0x50]
   140033058:	add    rsp,0x30
   14003305c:	pop    rdi
   14003305d:	ret    
   14003305e:	mov    rcx,QWORD PTR [rip+0x36f3b]        # 0x140069fa0
   140033065:	call   0x14002b36c
   14003306a:	and    QWORD PTR [rip+0x36f2e],0x0        # 0x140069fa0
   140033072:	jmp    0x140032f78
   140033077:	int3   
   140033078:	mov    rax,rsp
   14003307b:	mov    QWORD PTR [rax+0x8],rbx
   14003307f:	mov    QWORD PTR [rax+0x10],rbp
   140033083:	mov    QWORD PTR [rax+0x18],rsi
   140033087:	mov    QWORD PTR [rax+0x20],rdi
   14003308b:	push   r12
   14003308d:	push   r13
   14003308f:	push   r14
   140033091:	sub    rsp,0x20
   140033095:	mov    r13,QWORD PTR [rsp+0x60]
   14003309a:	mov    r14,r9
   14003309d:	mov    rdi,r8
   1400330a0:	and    DWORD PTR [r13+0x0],0x0
   1400330a5:	mov    r12,rdx
   1400330a8:	mov    rbx,rcx
   1400330ab:	mov    DWORD PTR [r9],0x1
   1400330b2:	test   rdx,rdx
   1400330b5:	je     0x1400330be
   1400330b7:	mov    QWORD PTR [rdx],r8
   1400330ba:	add    r12,0x8
   1400330be:	xor    ebp,ebp
   1400330c0:	cmp    BYTE PTR [rbx],0x22
   1400330c3:	jne    0x1400330d6
   1400330c5:	xor    eax,eax
   1400330c7:	test   ebp,ebp
   1400330c9:	mov    sil,0x22
   1400330cc:	sete   al
   1400330cf:	inc    rbx
   1400330d2:	mov    ebp,eax
   1400330d4:	jmp    0x14003310f
   1400330d6:	inc    DWORD PTR [r13+0x0]
   1400330da:	test   rdi,rdi
   1400330dd:	je     0x1400330e6
   1400330df:	mov    al,BYTE PTR [rbx]
   1400330e1:	mov    BYTE PTR [rdi],al
   1400330e3:	inc    rdi
   1400330e6:	movzx  esi,BYTE PTR [rbx]
   1400330e9:	inc    rbx
   1400330ec:	mov    ecx,esi
   1400330ee:	call   0x1400383b0
   1400330f3:	test   eax,eax
   1400330f5:	je     0x14003310a
   1400330f7:	inc    DWORD PTR [r13+0x0]
   1400330fb:	test   rdi,rdi
   1400330fe:	je     0x140033107
   140033100:	mov    al,BYTE PTR [rbx]
   140033102:	mov    BYTE PTR [rdi],al
   140033104:	inc    rdi
   140033107:	inc    rbx
   14003310a:	test   sil,sil
   14003310d:	je     0x14003312a
   14003310f:	test   ebp,ebp
   140033111:	jne    0x1400330c0
   140033113:	cmp    sil,0x20
   140033117:	je     0x14003311f
   140033119:	cmp    sil,0x9
   14003311d:	jne    0x1400330c0
   14003311f:	test   rdi,rdi
   140033122:	je     0x14003312d
   140033124:	mov    BYTE PTR [rdi-0x1],0x0
   140033128:	jmp    0x14003312d
   14003312a:	dec    rbx
   14003312d:	xor    esi,esi
   14003312f:	cmp    BYTE PTR [rbx],0x0
   140033132:	je     0x14003321b
   140033138:	cmp    BYTE PTR [rbx],0x20
   14003313b:	je     0x140033142
   14003313d:	cmp    BYTE PTR [rbx],0x9
   140033140:	jne    0x140033147
   140033142:	inc    rbx
   140033145:	jmp    0x140033138
   140033147:	cmp    BYTE PTR [rbx],0x0
   14003314a:	je     0x14003321b
   140033150:	test   r12,r12
   140033153:	je     0x14003315d
   140033155:	mov    QWORD PTR [r12],rdi
   140033159:	add    r12,0x8
   14003315d:	inc    DWORD PTR [r14]
   140033160:	mov    edx,0x1
   140033165:	xor    ecx,ecx
   140033167:	jmp    0x14003316e
   140033169:	inc    rbx
   14003316c:	inc    ecx
   14003316e:	cmp    BYTE PTR [rbx],0x5c
   140033171:	je     0x140033169
   140033173:	cmp    BYTE PTR [rbx],0x22
   140033176:	jne    0x1400331ae
   140033178:	test   dl,cl
   14003317a:	jne    0x140033199
   14003317c:	test   esi,esi
   14003317e:	je     0x14003318e
   140033180:	lea    rax,[rbx+0x1]
   140033184:	cmp    BYTE PTR [rax],0x22
   140033187:	jne    0x14003318e
   140033189:	mov    rbx,rax
   14003318c:	jmp    0x140033199
   14003318e:	xor    eax,eax
   140033190:	xor    edx,edx
   140033192:	test   esi,esi
   140033194:	sete   al
   140033197:	mov    esi,eax
   140033199:	shr    ecx,1
   14003319b:	jmp    0x1400331ae
   14003319d:	dec    ecx
   14003319f:	test   rdi,rdi
   1400331a2:	je     0x1400331aa
   1400331a4:	mov    BYTE PTR [rdi],0x5c
   1400331a7:	inc    rdi
   1400331aa:	inc    DWORD PTR [r13+0x0]
   1400331ae:	test   ecx,ecx
   1400331b0:	jne    0x14003319d
   1400331b2:	mov    al,BYTE PTR [rbx]
   1400331b4:	test   al,al
   1400331b6:	je     0x140033207
   1400331b8:	test   esi,esi
   1400331ba:	jne    0x1400331c4
   1400331bc:	cmp    al,0x20
   1400331be:	je     0x140033207
   1400331c0:	cmp    al,0x9
   1400331c2:	je     0x140033207
   1400331c4:	test   edx,edx
   1400331c6:	je     0x1400331ff
   1400331c8:	movsx  ecx,al
   1400331cb:	call   0x1400383b0
   1400331d0:	test   rdi,rdi
   1400331d3:	je     0x1400331f0
   1400331d5:	test   eax,eax
   1400331d7:	je     0x1400331e7
   1400331d9:	mov    al,BYTE PTR [rbx]
   1400331db:	inc    rbx
   1400331de:	mov    BYTE PTR [rdi],al
   1400331e0:	inc    rdi
   1400331e3:	inc    DWORD PTR [r13+0x0]
   1400331e7:	mov    al,BYTE PTR [rbx]
   1400331e9:	mov    BYTE PTR [rdi],al
   1400331eb:	inc    rdi
   1400331ee:	jmp    0x1400331fb
   1400331f0:	test   eax,eax
   1400331f2:	je     0x1400331fb
   1400331f4:	inc    rbx
   1400331f7:	inc    DWORD PTR [r13+0x0]
   1400331fb:	inc    DWORD PTR [r13+0x0]
   1400331ff:	inc    rbx
   140033202:	jmp    0x140033160
   140033207:	test   rdi,rdi
   14003320a:	je     0x140033212
   14003320c:	mov    BYTE PTR [rdi],0x0
   14003320f:	inc    rdi
   140033212:	inc    DWORD PTR [r13+0x0]
   140033216:	jmp    0x14003312f
   14003321b:	test   r12,r12
   14003321e:	je     0x140033225
   140033220:	and    QWORD PTR [r12],0x0
   140033225:	inc    DWORD PTR [r14]
   140033228:	mov    rbx,QWORD PTR [rsp+0x40]
   14003322d:	mov    rbp,QWORD PTR [rsp+0x48]
   140033232:	mov    rsi,QWORD PTR [rsp+0x50]
   140033237:	mov    rdi,QWORD PTR [rsp+0x58]
   14003323c:	add    rsp,0x20
   140033240:	pop    r14
   140033242:	pop    r13
   140033244:	pop    r12
   140033246:	ret    
   140033247:	int3   
   140033248:	mov    QWORD PTR [rsp+0x18],rbx
   14003324d:	mov    QWORD PTR [rsp+0x20],rsi
   140033252:	push   rdi
   140033253:	sub    rsp,0x30
   140033257:	cmp    DWORD PTR [rip+0x37872],0x0        # 0x14006aad0
   14003325e:	jne    0x140033265
   140033260:	call   0x14003285c
   140033265:	lea    rdi,[rip+0x37694]        # 0x14006a900
   14003326c:	mov    r8d,0x104
   140033272:	xor    ecx,ecx
   140033274:	mov    rdx,rdi
   140033277:	mov    BYTE PTR [rip+0x37786],0x0        # 0x14006aa04
   14003327e:	call   QWORD PTR [rip+0x9f14]        # 0x14003d198
   140033284:	mov    rbx,QWORD PTR [rip+0x37a7d]        # 0x14006ad08
   14003328b:	mov    QWORD PTR [rip+0x36d2e],rdi        # 0x140069fc0
   140033292:	test   rbx,rbx
   140033295:	je     0x14003329c
   140033297:	cmp    BYTE PTR [rbx],0x0
   14003329a:	jne    0x14003329f
   14003329c:	mov    rbx,rdi
   14003329f:	lea    rax,[rsp+0x48]
   1400332a4:	lea    r9,[rsp+0x40]
   1400332a9:	xor    r8d,r8d
   1400332ac:	xor    edx,edx
   1400332ae:	mov    rcx,rbx
   1400332b1:	mov    QWORD PTR [rsp+0x20],rax
   1400332b6:	call   0x140033078
   1400332bb:	movsxd rsi,DWORD PTR [rsp+0x40]
   1400332c0:	movabs rcx,0x1fffffffffffffff
   1400332ca:	cmp    rsi,rcx
   1400332cd:	jae    0x14003332b
   1400332cf:	movsxd rcx,DWORD PTR [rsp+0x48]
   1400332d4:	cmp    rcx,0xffffffffffffffff
   1400332d8:	jae    0x14003332b
   1400332da:	lea    rdx,[rcx+rsi*8]
   1400332de:	cmp    rdx,rcx
   1400332e1:	jb     0x14003332b
   1400332e3:	mov    rcx,rdx
   1400332e6:	call   0x1400300c8
   1400332eb:	mov    rdi,rax
   1400332ee:	test   rax,rax
   1400332f1:	je     0x14003332b
   1400332f3:	lea    r8,[rax+rsi*8]
   1400332f7:	lea    rax,[rsp+0x48]
   1400332fc:	lea    r9,[rsp+0x40]
   140033301:	mov    rdx,rdi
   140033304:	mov    rcx,rbx
   140033307:	mov    QWORD PTR [rsp+0x20],rax
   14003330c:	call   0x140033078
   140033311:	mov    r11d,DWORD PTR [rsp+0x40]
   140033316:	mov    QWORD PTR [rip+0x36c73],rdi        # 0x140069f90
   14003331d:	dec    r11d
   140033320:	xor    eax,eax
   140033322:	mov    DWORD PTR [rip+0x36c63],r11d        # 0x140069f8c
   140033329:	jmp    0x14003332e
   14003332b:	or     eax,0xffffffff
   14003332e:	mov    rbx,QWORD PTR [rsp+0x50]
   140033333:	mov    rsi,QWORD PTR [rsp+0x58]
   140033338:	add    rsp,0x30
   14003333c:	pop    rdi
   14003333d:	ret    
   14003333e:	int3   
   14003333f:	int3   
   140033340:	mov    rax,rsp
   140033343:	mov    QWORD PTR [rax+0x8],rbx
   140033347:	mov    QWORD PTR [rax+0x10],rbp
   14003334b:	mov    QWORD PTR [rax+0x18],rsi
   14003334f:	mov    QWORD PTR [rax+0x20],rdi
   140033353:	push   r12
   140033355:	sub    rsp,0x40
   140033359:	mov    ecx,DWORD PTR [rip+0x376a9]        # 0x14006aa08
   14003335f:	xor    r12d,r12d
   140033362:	mov    rbx,r12
   140033365:	lea    esi,[r12+0x2]
   14003336a:	cmp    ecx,r12d
   14003336d:	jne    0x1400333a1
   14003336f:	call   QWORD PTR [rip+0x9ebb]        # 0x14003d230
   140033375:	mov    rbx,rax
   140033378:	cmp    rax,r12
   14003337b:	je     0x140033389
   14003337d:	mov    DWORD PTR [rip+0x37681],0x1        # 0x14006aa08
   140033387:	jmp    0x1400333aa
   140033389:	call   QWORD PTR [rip+0x9fa9]        # 0x14003d338
   14003338f:	mov    ecx,DWORD PTR [rip+0x37673]        # 0x14006aa08
   140033395:	cmp    eax,0x78
   140033398:	cmove  ecx,esi
   14003339b:	mov    DWORD PTR [rip+0x37667],ecx        # 0x14006aa08
   1400333a1:	cmp    ecx,0x1
   1400333a4:	jne    0x140033464
   1400333aa:	cmp    rbx,r12
   1400333ad:	jne    0x1400333c4
   1400333af:	call   QWORD PTR [rip+0x9e7b]        # 0x14003d230
   1400333b5:	mov    rbx,rax
   1400333b8:	cmp    rax,r12
   1400333bb:	jne    0x1400333c4
   1400333bd:	xor    eax,eax
   1400333bf:	jmp    0x1400334d7
   1400333c4:	mov    rdi,rbx
   1400333c7:	cmp    WORD PTR [rbx],r12w
   1400333cb:	je     0x1400333df
   1400333cd:	add    rdi,rsi
   1400333d0:	cmp    WORD PTR [rdi],r12w
   1400333d4:	jne    0x1400333cd
   1400333d6:	add    rdi,rsi
   1400333d9:	cmp    WORD PTR [rdi],r12w
   1400333dd:	jne    0x1400333cd
   1400333df:	mov    QWORD PTR [rsp+0x38],r12
   1400333e4:	mov    QWORD PTR [rsp+0x30],r12
   1400333e9:	sub    rdi,rbx
   1400333ec:	sar    rdi,1
   1400333ef:	mov    r8,rbx
   1400333f2:	xor    edx,edx
   1400333f4:	lea    r9d,[rdi+0x1]
   1400333f8:	xor    ecx,ecx
   1400333fa:	mov    DWORD PTR [rsp+0x28],r12d
   1400333ff:	mov    QWORD PTR [rsp+0x20],r12
   140033404:	call   QWORD PTR [rip+0x9c8e]        # 0x14003d098
   14003340a:	movsxd rbp,eax
   14003340d:	cmp    ebp,r12d
   140033410:	je     0x140033453
   140033412:	mov    rcx,rbp
   140033415:	call   0x1400300c8
   14003341a:	mov    rsi,rax
   14003341d:	cmp    rax,r12
   140033420:	je     0x140033453
   140033422:	mov    QWORD PTR [rsp+0x38],r12
   140033427:	mov    QWORD PTR [rsp+0x30],r12
   14003342c:	lea    r9d,[rdi+0x1]
   140033430:	mov    r8,rbx
   140033433:	xor    edx,edx
   140033435:	xor    ecx,ecx
   140033437:	mov    DWORD PTR [rsp+0x28],ebp
   14003343b:	mov    QWORD PTR [rsp+0x20],rax
   140033440:	call   QWORD PTR [rip+0x9c52]        # 0x14003d098
   140033446:	cmp    eax,r12d
   140033449:	jne    0x140033456
   14003344b:	mov    rcx,rsi
   14003344e:	call   0x14002b36c
   140033453:	mov    rsi,r12
   140033456:	mov    rcx,rbx
   140033459:	call   QWORD PTR [rip+0x9dc9]        # 0x14003d228
   14003345f:	mov    rax,rsi
   140033462:	jmp    0x1400334d7
   140033464:	cmp    ecx,esi
   140033466:	je     0x140033471
   140033468:	cmp    ecx,r12d
   14003346b:	jne    0x1400333bd
   140033471:	call   QWORD PTR [rip+0x9da9]        # 0x14003d220
   140033477:	mov    rbx,rax
   14003347a:	cmp    rax,r12
   14003347d:	je     0x1400333bd
   140033483:	cmp    BYTE PTR [rax],r12b
   140033486:	je     0x140033498
   140033488:	inc    rax
   14003348b:	cmp    BYTE PTR [rax],r12b
   14003348e:	jne    0x140033488
   140033490:	inc    rax
   140033493:	cmp    BYTE PTR [rax],r12b
   140033496:	jne    0x140033488
   140033498:	sub    eax,ebx
   14003349a:	inc    eax
   14003349c:	movsxd rsi,eax
   14003349f:	mov    rcx,rsi
   1400334a2:	call   0x1400300c8
   1400334a7:	mov    rdi,rax
   1400334aa:	cmp    rax,r12
   1400334ad:	jne    0x1400334bd
   1400334af:	mov    rcx,rbx
   1400334b2:	call   QWORD PTR [rip+0x9d60]        # 0x14003d218
   1400334b8:	jmp    0x1400333bd
   1400334bd:	mov    r8,rsi
   1400334c0:	mov    rdx,rbx
   1400334c3:	mov    rcx,rax
   1400334c6:	call   0x14002b9a0
   1400334cb:	mov    rcx,rbx
   1400334ce:	call   QWORD PTR [rip+0x9d44]        # 0x14003d218
   1400334d4:	mov    rax,rdi
   1400334d7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400334dc:	mov    rbp,QWORD PTR [rsp+0x58]
   1400334e1:	mov    rsi,QWORD PTR [rsp+0x60]
   1400334e6:	mov    rdi,QWORD PTR [rsp+0x68]
   1400334eb:	add    rsp,0x40
   1400334ef:	pop    r12
   1400334f1:	ret    
   1400334f2:	int3   
   1400334f3:	int3   
   1400334f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400334f9:	push   rdi
   1400334fa:	sub    rsp,0x20
   1400334fe:	lea    rbx,[rip+0x1e2eb]        # 0x1400517f0
   140033505:	lea    rdi,[rip+0x1e2e4]        # 0x1400517f0
   14003350c:	jmp    0x14003351c
   14003350e:	mov    rax,QWORD PTR [rbx]
   140033511:	test   rax,rax
   140033514:	je     0x140033518
   140033516:	call   rax
   140033518:	add    rbx,0x8
   14003351c:	cmp    rbx,rdi
   14003351f:	jb     0x14003350e
   140033521:	mov    rbx,QWORD PTR [rsp+0x30]
   140033526:	add    rsp,0x20
   14003352a:	pop    rdi
   14003352b:	ret    
   14003352c:	mov    QWORD PTR [rsp+0x8],rbx
   140033531:	push   rdi
   140033532:	sub    rsp,0x20
   140033536:	lea    rbx,[rip+0x1e2c3]        # 0x140051800
   14003353d:	lea    rdi,[rip+0x1e2bc]        # 0x140051800
   140033544:	jmp    0x140033554
   140033546:	mov    rax,QWORD PTR [rbx]
   140033549:	test   rax,rax
   14003354c:	je     0x140033550
   14003354e:	call   rax
   140033550:	add    rbx,0x8
   140033554:	cmp    rbx,rdi
   140033557:	jb     0x140033546
   140033559:	mov    rbx,QWORD PTR [rsp+0x30]
   14003355e:	add    rsp,0x20
   140033562:	pop    rdi
   140033563:	ret    
   140033564:	mov    QWORD PTR [rsp+0x18],rbx
   140033569:	push   rdi
   14003356a:	sub    rsp,0x20
   14003356e:	mov    rax,QWORD PTR [rip+0x3333b]        # 0x1400668b0
   140033575:	and    QWORD PTR [rsp+0x30],0x0
   14003357b:	movabs rdi,0x2b992ddfa232
   140033585:	cmp    rax,rdi
   140033588:	je     0x140033596
   14003358a:	not    rax
   14003358d:	mov    QWORD PTR [rip+0x33324],rax        # 0x1400668b8
   140033594:	jmp    0x14003360c
   140033596:	lea    rcx,[rsp+0x30]
   14003359b:	call   QWORD PTR [rip+0x9ca7]        # 0x14003d248
   1400335a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400335a6:	call   QWORD PTR [rip+0x9b94]        # 0x14003d140
   1400335ac:	mov    r11d,eax
   1400335af:	xor    rbx,r11
   1400335b2:	call   QWORD PTR [rip+0x9b00]        # 0x14003d0b8
   1400335b8:	mov    r11d,eax
   1400335bb:	xor    rbx,r11
   1400335be:	call   QWORD PTR [rip+0x9c7c]        # 0x14003d240
   1400335c4:	lea    rcx,[rsp+0x38]
   1400335c9:	mov    r11d,eax
   1400335cc:	xor    rbx,r11
   1400335cf:	call   QWORD PTR [rip+0x9c63]        # 0x14003d238
   1400335d5:	mov    r11,QWORD PTR [rsp+0x38]
   1400335da:	xor    r11,rbx
   1400335dd:	movabs rax,0xffffffffffff
   1400335e7:	and    r11,rax
   1400335ea:	movabs rax,0x2b992ddfa233
   1400335f4:	cmp    r11,rdi
   1400335f7:	cmove  r11,rax
   1400335fb:	mov    QWORD PTR [rip+0x332ae],r11        # 0x1400668b0
   140033602:	not    r11
   140033605:	mov    QWORD PTR [rip+0x332ac],r11        # 0x1400668b8
   14003360c:	mov    rbx,QWORD PTR [rsp+0x40]
   140033611:	add    rsp,0x20
   140033615:	pop    rdi
   140033616:	ret    
   140033617:	int3   
   140033618:	mov    QWORD PTR [rip+0x373f1],rcx        # 0x14006aa10
   14003361f:	ret    
   140033620:	rex push rbx
   140033622:	sub    rsp,0x20
   140033626:	mov    rbx,rcx
   140033629:	mov    rcx,QWORD PTR [rip+0x373e0]        # 0x14006aa10
   140033630:	call   0x140031ce0
   140033635:	test   rax,rax
   140033638:	je     0x14003364a
   14003363a:	mov    rcx,rbx
   14003363d:	call   rax
   14003363f:	test   eax,eax
   140033641:	je     0x14003364a
   140033643:	mov    eax,0x1
   140033648:	jmp    0x14003364c
   14003364a:	xor    eax,eax
   14003364c:	add    rsp,0x20
   140033650:	pop    rbx
   140033651:	ret    
   140033652:	int3   
   140033653:	int3   
   140033654:	rex push rbx
   140033656:	sub    rsp,0x40
   14003365a:	mov    rbx,rcx
   14003365d:	lea    rcx,[rsp+0x20]
   140033662:	call   0x14002b47c
   140033667:	movsx  ecx,BYTE PTR [rbx]
   14003366a:	call   0x14002e198
   14003366f:	cmp    eax,0x65
   140033672:	je     0x140033683
   140033674:	inc    rbx
   140033677:	movzx  ecx,BYTE PTR [rbx]
   14003367a:	call   0x14002c7b0
   14003367f:	test   eax,eax
   140033681:	jne    0x140033674
   140033683:	movsx  ecx,BYTE PTR [rbx]
   140033686:	call   0x14002e198
   14003368b:	cmp    eax,0x78
   14003368e:	jne    0x140033694
   140033690:	add    rbx,0x2
   140033694:	mov    rax,QWORD PTR [rsp+0x20]
   140033699:	mov    dl,BYTE PTR [rbx]
   14003369b:	mov    rcx,QWORD PTR [rax+0x128]
   1400336a2:	mov    rax,QWORD PTR [rcx]
   1400336a5:	mov    cl,BYTE PTR [rax]
   1400336a7:	mov    BYTE PTR [rbx],cl
   1400336a9:	inc    rbx
   1400336ac:	mov    al,BYTE PTR [rbx]
   1400336ae:	mov    BYTE PTR [rbx],dl
   1400336b0:	mov    dl,al
   1400336b2:	mov    al,BYTE PTR [rbx]
   1400336b4:	inc    rbx
   1400336b7:	test   al,al
   1400336b9:	jne    0x1400336ac
   1400336bb:	cmp    BYTE PTR [rsp+0x38],al
   1400336bf:	je     0x1400336cd
   1400336c1:	mov    rax,QWORD PTR [rsp+0x30]
   1400336c6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400336cd:	add    rsp,0x40
   1400336d1:	pop    rbx
   1400336d2:	ret    
   1400336d3:	int3   
   1400336d4:	rex push rbx
   1400336d6:	sub    rsp,0x40
   1400336da:	mov    rbx,rcx
   1400336dd:	lea    rcx,[rsp+0x20]
   1400336e2:	call   0x14002b47c
   1400336e7:	mov    r11b,BYTE PTR [rbx]
   1400336ea:	mov    rcx,QWORD PTR [rsp+0x20]
   1400336ef:	test   r11b,r11b
   1400336f2:	je     0x140033710
   1400336f4:	mov    rax,QWORD PTR [rcx+0x128]
   1400336fb:	mov    rdx,QWORD PTR [rax]
   1400336fe:	mov    al,BYTE PTR [rdx]
   140033700:	cmp    r11b,al
   140033703:	je     0x140033710
   140033705:	inc    rbx
   140033708:	mov    r11b,BYTE PTR [rbx]
   14003370b:	test   r11b,r11b
   14003370e:	jne    0x140033700
   140033710:	mov    al,BYTE PTR [rbx]
   140033712:	inc    rbx
   140033715:	test   al,al
   140033717:	je     0x140033758
   140033719:	jmp    0x140033726
   14003371b:	cmp    al,0x65
   14003371d:	je     0x14003372c
   14003371f:	cmp    al,0x45
   140033721:	je     0x14003372c
   140033723:	inc    rbx
   140033726:	mov    al,BYTE PTR [rbx]
   140033728:	test   al,al
   14003372a:	jne    0x14003371b
   14003372c:	mov    rdx,rbx
   14003372f:	dec    rbx
   140033732:	cmp    BYTE PTR [rbx],0x30
   140033735:	je     0x14003372f
   140033737:	mov    rax,QWORD PTR [rcx+0x128]
   14003373e:	mov    rcx,QWORD PTR [rax]
   140033741:	mov    al,BYTE PTR [rcx]
   140033743:	cmp    BYTE PTR [rbx],al
   140033745:	jne    0x14003374a
   140033747:	dec    rbx
   14003374a:	mov    al,BYTE PTR [rdx]
   14003374c:	inc    rbx
   14003374f:	inc    rdx
   140033752:	mov    BYTE PTR [rbx],al
   140033754:	test   al,al
   140033756:	jne    0x14003374a
   140033758:	cmp    BYTE PTR [rsp+0x38],0x0
   14003375d:	je     0x14003376b
   14003375f:	mov    rax,QWORD PTR [rsp+0x30]
   140033764:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003376b:	add    rsp,0x40
   14003376f:	pop    rbx
   140033770:	ret    
   140033771:	int3   
   140033772:	int3   
   140033773:	int3   
   140033774:	movsd  xmm0,QWORD PTR [rcx]
   140033778:	comisd xmm0,QWORD PTR [rip+0xb4d8]        # 0x14003ec58
   140033780:	jb     0x140033788
   140033782:	mov    eax,0x1
   140033787:	ret    
   140033788:	xor    eax,eax
   14003378a:	ret    
   14003378b:	int3   
   14003378c:	rex push rbx
   14003378e:	sub    rsp,0x30
   140033792:	mov    rax,r8
   140033795:	mov    rbx,rdx
   140033798:	mov    r8,r9
   14003379b:	mov    rdx,rax
   14003379e:	test   ecx,ecx
   1400337a0:	je     0x1400337b6
   1400337a2:	lea    rcx,[rsp+0x20]
   1400337a7:	call   0x1400383c4
   1400337ac:	mov    r11,QWORD PTR [rsp+0x20]
   1400337b1:	mov    QWORD PTR [rbx],r11
   1400337b4:	jmp    0x1400337c8
   1400337b6:	lea    rcx,[rsp+0x40]
   1400337bb:	call   0x1400384c8
   1400337c0:	mov    r11d,DWORD PTR [rsp+0x40]
   1400337c5:	mov    DWORD PTR [rbx],r11d
   1400337c8:	add    rsp,0x30
   1400337cc:	pop    rbx
   1400337cd:	ret    
   1400337ce:	int3   
   1400337cf:	int3   
   1400337d0:	xor    r9d,r9d
   1400337d3:	jmp    0x14003378c
   1400337d8:	xor    edx,edx
   1400337da:	jmp    0x140033654
   1400337df:	int3   
   1400337e0:	xor    edx,edx
   1400337e2:	jmp    0x1400336d4
   1400337e7:	int3   
   1400337e8:	mov    rax,rsp
   1400337eb:	mov    QWORD PTR [rax+0x8],rbx
   1400337ef:	mov    QWORD PTR [rax+0x10],rbp
   1400337f3:	mov    QWORD PTR [rax+0x18],rsi
   1400337f7:	mov    QWORD PTR [rax+0x20],rdi
   1400337fb:	push   r12
   1400337fd:	push   r13
   1400337ff:	push   r15
   140033801:	sub    rsp,0x50
   140033805:	mov    r12,rdx
   140033808:	mov    rdx,QWORD PTR [rsp+0xa0]
   140033810:	mov    rdi,rcx
   140033813:	lea    rcx,[rax-0x38]
   140033817:	mov    r15d,r9d
   14003381a:	movsxd rbx,r8d
   14003381d:	call   0x14002b47c
   140033822:	xor    r13d,r13d
   140033825:	cmp    rdi,r13
   140033828:	jne    0x140033863
   14003382a:	call   0x14002b3f4
   14003382f:	lea    ebx,[r13+0x16]
   140033833:	xor    r9d,r9d
   140033836:	xor    r8d,r8d
   140033839:	xor    edx,edx
   14003383b:	xor    ecx,ecx
   14003383d:	mov    DWORD PTR [rax],ebx
   14003383f:	mov    QWORD PTR [rsp+0x20],r13
   140033844:	call   0x140031aac
   140033849:	cmp    BYTE PTR [rsp+0x48],r13b
   14003384e:	je     0x14003385c
   140033850:	mov    rcx,QWORD PTR [rsp+0x40]
   140033855:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003385c:	mov    eax,ebx
   14003385e:	jmp    0x140033a20
   140033863:	cmp    r12,r13
   140033866:	ja     0x14003389d
   140033868:	call   0x14002b3f4
   14003386d:	mov    ebx,0x16
   140033872:	xor    r9d,r9d
   140033875:	xor    r8d,r8d
   140033878:	xor    edx,edx
   14003387a:	xor    ecx,ecx
   14003387c:	mov    DWORD PTR [rax],ebx
   14003387e:	mov    QWORD PTR [rsp+0x20],r13
   140033883:	call   0x140031aac
   140033888:	cmp    BYTE PTR [rsp+0x48],r13b
   14003388d:	je     0x14003385c
   14003388f:	mov    rax,QWORD PTR [rsp+0x40]
   140033894:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003389b:	jmp    0x14003385c
   14003389d:	mov    eax,r13d
   1400338a0:	cmp    ebx,r13d
   1400338a3:	cmovg  eax,ebx
   1400338a6:	add    eax,0x9
   1400338a9:	cdqe   
   1400338ab:	cmp    r12,rax
   1400338ae:	ja     0x1400338bf
   1400338b0:	call   0x14002b3f4
   1400338b5:	mov    ebx,0x22
   1400338ba:	jmp    0x140033833
   1400338bf:	mov    rbp,QWORD PTR [rsp+0x90]
   1400338c7:	cmp    BYTE PTR [rsp+0x98],r13b
   1400338cf:	je     0x140033907
   1400338d1:	cmp    DWORD PTR [rbp+0x0],0x2d
   1400338d5:	mov    rsi,r13
   1400338d8:	sete   sil
   1400338dc:	add    rsi,rdi
   1400338df:	test   ebx,ebx
   1400338e1:	setg   r13b
   1400338e5:	test   r13d,r13d
   1400338e8:	je     0x140033904
   1400338ea:	mov    rcx,rsi
   1400338ed:	call   0x140035dd0
   1400338f2:	movsxd rcx,r13d
   1400338f5:	mov    rdx,rsi
   1400338f8:	lea    r8,[rax+0x1]
   1400338fc:	add    rcx,rsi
   1400338ff:	call   0x14002b9a0
   140033904:	xor    r13d,r13d
   140033907:	cmp    DWORD PTR [rbp+0x0],0x2d
   14003390b:	mov    rdx,rdi
   14003390e:	jne    0x140033917
   140033910:	mov    BYTE PTR [rdi],0x2d
   140033913:	lea    rdx,[rdi+0x1]
   140033917:	cmp    ebx,r13d
   14003391a:	jle    0x140033937
   14003391c:	mov    al,BYTE PTR [rdx+0x1]
   14003391f:	mov    BYTE PTR [rdx],al
   140033921:	mov    rax,QWORD PTR [rsp+0x30]
   140033926:	inc    rdx
   140033929:	mov    rcx,QWORD PTR [rax+0x128]
   140033930:	mov    rax,QWORD PTR [rcx]
   140033933:	mov    cl,BYTE PTR [rax]
   140033935:	mov    BYTE PTR [rdx],cl
   140033937:	cmp    BYTE PTR [rsp+0x98],r13b
   14003393f:	mov    rcx,r13
   140033942:	lea    r8,[rip+0x1c697]        # 0x14004ffe0
   140033949:	sete   cl
   14003394c:	add    rbx,rdx
   14003394f:	add    rbx,rcx
   140033952:	sub    rdi,rbx
   140033955:	cmp    r12,0xffffffffffffffff
   140033959:	mov    rcx,rbx
   14003395c:	lea    rdx,[r12+rdi*1]
   140033960:	cmove  rdx,r12
   140033964:	call   0x14003445c
   140033969:	cmp    eax,r13d
   14003396c:	je     0x140033982
   14003396e:	xor    r9d,r9d
   140033971:	xor    r8d,r8d
   140033974:	xor    edx,edx
   140033976:	xor    ecx,ecx
   140033978:	mov    QWORD PTR [rsp+0x20],r13
   14003397d:	call   0x140031984
   140033982:	lea    rcx,[rbx+0x2]
   140033986:	cmp    r15d,r13d
   140033989:	je     0x14003398e
   14003398b:	mov    BYTE PTR [rbx],0x45
   14003398e:	mov    rax,QWORD PTR [rbp+0x10]
   140033992:	cmp    BYTE PTR [rax],0x30
   140033995:	je     0x1400339ee
   140033997:	mov    r8d,DWORD PTR [rbp+0x4]
   14003399b:	sub    r8d,0x1
   14003399f:	jns    0x1400339a8
   1400339a1:	neg    r8d
   1400339a4:	mov    BYTE PTR [rbx+0x1],0x2d
   1400339a8:	cmp    r8d,0x64
   1400339ac:	jl     0x1400339c9
   1400339ae:	mov    eax,0x51eb851f
   1400339b3:	imul   r8d
   1400339b6:	sar    edx,0x5
   1400339b9:	mov    eax,edx
   1400339bb:	shr    eax,0x1f
   1400339be:	add    edx,eax
   1400339c0:	add    BYTE PTR [rbx+0x2],dl
   1400339c3:	imul   edx,edx,0xffffff9c
   1400339c6:	add    r8d,edx
   1400339c9:	cmp    r8d,0xa
   1400339cd:	jl     0x1400339ea
   1400339cf:	mov    eax,0x66666667
   1400339d4:	imul   r8d
   1400339d7:	sar    edx,0x2
   1400339da:	mov    eax,edx
   1400339dc:	shr    eax,0x1f
   1400339df:	add    edx,eax
   1400339e1:	add    BYTE PTR [rbx+0x3],dl
   1400339e4:	imul   edx,edx,0xfffffff6
   1400339e7:	add    r8d,edx
   1400339ea:	add    BYTE PTR [rbx+0x4],r8b
   1400339ee:	test   BYTE PTR [rip+0x370af],0x1        # 0x14006aaa4
   1400339f5:	je     0x140033a0b
   1400339f7:	cmp    BYTE PTR [rcx],0x30
   1400339fa:	jne    0x140033a0b
   1400339fc:	lea    rdx,[rcx+0x1]
   140033a00:	mov    r8d,0x3
   140033a06:	call   0x14002b9a0
   140033a0b:	cmp    BYTE PTR [rsp+0x48],r13b
   140033a10:	je     0x140033a1e
   140033a12:	mov    rax,QWORD PTR [rsp+0x40]
   140033a17:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140033a1e:	xor    eax,eax
   140033a20:	lea    r11,[rsp+0x50]
   140033a25:	mov    rbx,QWORD PTR [r11+0x20]
   140033a29:	mov    rbp,QWORD PTR [r11+0x28]
   140033a2d:	mov    rsi,QWORD PTR [r11+0x30]
   140033a31:	mov    rdi,QWORD PTR [r11+0x38]
   140033a35:	mov    rsp,r11
   140033a38:	pop    r15
   140033a3a:	pop    r13
   140033a3c:	pop    r12
   140033a3e:	ret    
   140033a3f:	int3   
   140033a40:	rex push rbx
   140033a42:	push   rsi
   140033a43:	push   rdi
   140033a44:	push   r12
   140033a46:	sub    rsp,0x88
   140033a4d:	mov    rax,QWORD PTR [rip+0x32e5c]        # 0x1400668b0
   140033a54:	xor    rax,rsp
   140033a57:	mov    QWORD PTR [rsp+0x70],rax
   140033a5c:	mov    rcx,QWORD PTR [rcx]
   140033a5f:	mov    rbx,r8
   140033a62:	mov    rdi,rdx
   140033a65:	mov    esi,r9d
   140033a68:	mov    r12d,0x16
   140033a6e:	lea    r8,[rsp+0x58]
   140033a73:	lea    rdx,[rsp+0x40]
   140033a78:	mov    r9,r12
   140033a7b:	call   0x140034c84
   140033a80:	test   rdi,rdi
   140033a83:	jne    0x140033aaa
   140033a85:	call   0x14002b3f4
   140033a8a:	and    QWORD PTR [rsp+0x20],0x0
   140033a90:	xor    r9d,r9d
   140033a93:	xor    r8d,r8d
   140033a96:	xor    edx,edx
   140033a98:	xor    ecx,ecx
   140033a9a:	mov    DWORD PTR [rax],r12d
   140033a9d:	call   0x140031aac
   140033aa2:	mov    eax,r12d
   140033aa5:	jmp    0x140033b32
   140033aaa:	test   rbx,rbx
   140033aad:	je     0x140033a85
   140033aaf:	or     rdx,0xffffffffffffffff
   140033ab3:	cmp    rbx,rdx
   140033ab6:	je     0x140033ad2
   140033ab8:	xor    eax,eax
   140033aba:	cmp    DWORD PTR [rsp+0x40],0x2d
   140033abf:	mov    rdx,rbx
   140033ac2:	sete   al
   140033ac5:	sub    rdx,rax
   140033ac8:	xor    eax,eax
   140033aca:	test   esi,esi
   140033acc:	setg   al
   140033acf:	sub    rdx,rax
   140033ad2:	xor    eax,eax
   140033ad4:	cmp    DWORD PTR [rsp+0x40],0x2d
   140033ad9:	lea    r8d,[rsi+0x1]
   140033add:	sete   al
   140033ae0:	xor    ecx,ecx
   140033ae2:	test   esi,esi
   140033ae4:	setg   cl
   140033ae7:	add    rax,rdi
   140033aea:	lea    r9,[rsp+0x40]
   140033aef:	add    rcx,rax
   140033af2:	call   0x140034ad0
   140033af7:	test   eax,eax
   140033af9:	je     0x140033b00
   140033afb:	mov    BYTE PTR [rdi],0x0
   140033afe:	jmp    0x140033b32
   140033b00:	mov    rax,QWORD PTR [rsp+0xd8]
   140033b08:	mov    r9d,DWORD PTR [rsp+0xd0]
   140033b10:	mov    r8d,esi
   140033b13:	mov    QWORD PTR [rsp+0x30],rax
   140033b18:	lea    rax,[rsp+0x40]
   140033b1d:	mov    rdx,rbx
   140033b20:	mov    rcx,rdi
   140033b23:	mov    BYTE PTR [rsp+0x28],0x0
   140033b28:	mov    QWORD PTR [rsp+0x20],rax
   140033b2d:	call   0x1400337e8
   140033b32:	mov    rcx,QWORD PTR [rsp+0x70]
   140033b37:	xor    rcx,rsp
   140033b3a:	call   0x14002b250
   140033b3f:	add    rsp,0x88
   140033b46:	pop    r12
   140033b48:	pop    rdi
   140033b49:	pop    rsi
   140033b4a:	pop    rbx
   140033b4b:	ret    
   140033b4c:	mov    rax,rsp
   140033b4f:	mov    QWORD PTR [rax+0x8],rbx
   140033b53:	mov    QWORD PTR [rax+0x10],rbp
   140033b57:	mov    QWORD PTR [rax+0x18],rdi
   140033b5b:	mov    QWORD PTR [rax+0x20],r12
   140033b5f:	push   r13
   140033b61:	push   r14
   140033b63:	push   r15
   140033b65:	sub    rsp,0x50
   140033b69:	mov    rdi,rdx
   140033b6c:	mov    rdx,QWORD PTR [rsp+0x98]
   140033b74:	mov    r13,rcx
   140033b77:	lea    rcx,[rax-0x38]
   140033b7b:	mov    ebp,r9d
   140033b7e:	mov    rbx,r8
   140033b81:	mov    r15d,0x3ff
   140033b87:	mov    r12d,0x30
   140033b8d:	call   0x14002b47c
   140033b92:	xor    r14d,r14d
   140033b95:	cmp    ebp,r14d
   140033b98:	cmovl  ebp,r14d
   140033b9c:	cmp    rdi,r14
   140033b9f:	jne    0x140033bdb
   140033ba1:	call   0x14002b3f4
   140033ba6:	lea    ebx,[r12-0x1a]
   140033bab:	xor    r9d,r9d
   140033bae:	xor    r8d,r8d
   140033bb1:	xor    edx,edx
   140033bb3:	xor    ecx,ecx
   140033bb5:	mov    DWORD PTR [rax],ebx
   140033bb7:	mov    QWORD PTR [rsp+0x20],r14
   140033bbc:	call   0x140031aac
   140033bc1:	cmp    BYTE PTR [rsp+0x48],r14b
   140033bc6:	je     0x140033bd4
   140033bc8:	mov    rcx,QWORD PTR [rsp+0x40]
   140033bcd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140033bd4:	mov    eax,ebx
   140033bd6:	jmp    0x140033f56
   140033bdb:	cmp    rbx,r14
   140033bde:	ja     0x140033c15
   140033be0:	call   0x14002b3f4
   140033be5:	mov    ebx,0x16
   140033bea:	xor    r9d,r9d
   140033bed:	xor    r8d,r8d
   140033bf0:	xor    edx,edx
   140033bf2:	xor    ecx,ecx
   140033bf4:	mov    DWORD PTR [rax],ebx
   140033bf6:	mov    QWORD PTR [rsp+0x20],r14
   140033bfb:	call   0x140031aac
   140033c00:	cmp    BYTE PTR [rsp+0x48],r14b
   140033c05:	je     0x140033bd4
   140033c07:	mov    rax,QWORD PTR [rsp+0x40]
   140033c0c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140033c13:	jmp    0x140033bd4
   140033c15:	lea    eax,[rbp+0xb]
   140033c18:	mov    BYTE PTR [rdi],r14b
   140033c1b:	movsxd rcx,eax
   140033c1e:	cmp    rbx,rcx
   140033c21:	ja     0x140033c32
   140033c23:	call   0x14002b3f4
   140033c28:	mov    ebx,0x22
   140033c2d:	jmp    0x140033bab
   140033c32:	mov    rax,QWORD PTR [r13+0x0]
   140033c36:	mov    ecx,0x7ff
   140033c3b:	shr    rax,0x34
   140033c3f:	and    rax,rcx
   140033c42:	cmp    rax,rcx
   140033c45:	jne    0x140033ce6
   140033c4b:	lea    r8,[rbx-0x2]
   140033c4f:	cmp    rbx,0xffffffffffffffff
   140033c53:	lea    rdx,[rdi+0x2]
   140033c57:	mov    r9d,ebp
   140033c5a:	mov    rcx,r13
   140033c5d:	cmove  r8,rbx
   140033c61:	mov    QWORD PTR [rsp+0x28],r14
   140033c66:	mov    DWORD PTR [rsp+0x20],r14d
   140033c6b:	call   0x140033a40
   140033c70:	cmp    eax,r14d
   140033c73:	je     0x140033c94
   140033c75:	mov    BYTE PTR [rdi],r14b
   140033c78:	cmp    BYTE PTR [rsp+0x48],r14b
   140033c7d:	je     0x140033f56
   140033c83:	mov    rcx,QWORD PTR [rsp+0x40]
   140033c88:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140033c8f:	jmp    0x140033f56
   140033c94:	cmp    BYTE PTR [rdi+0x2],0x2d
   140033c98:	jne    0x140033ca0
   140033c9a:	mov    BYTE PTR [rdi],0x2d
   140033c9d:	inc    rdi
   140033ca0:	mov    ebx,DWORD PTR [rsp+0x90]
   140033ca7:	mov    BYTE PTR [rdi],0x30
   140033caa:	mov    edx,0x65
   140033caf:	mov    eax,ebx
   140033cb1:	neg    eax
   140033cb3:	sbb    cl,cl
   140033cb5:	and    cl,0xe0
   140033cb8:	add    cl,0x78
   140033cbb:	mov    BYTE PTR [rdi+0x1],cl
   140033cbe:	lea    rcx,[rdi+0x2]
   140033cc2:	call   0x14002b010
   140033cc7:	cmp    rax,r14
   140033cca:	je     0x140033cdc
   140033ccc:	neg    ebx
   140033cce:	sbb    cl,cl
   140033cd0:	and    cl,0xe0
   140033cd3:	add    cl,0x70
   140033cd6:	mov    BYTE PTR [rax],cl
   140033cd8:	mov    BYTE PTR [rax+0x3],r14b
   140033cdc:	cmp    BYTE PTR [rsp+0x48],r14b
   140033ce1:	jmp    0x140033f46
   140033ce6:	movabs rax,0x8000000000000000
   140033cf0:	test   QWORD PTR [r13+0x0],rax
   140033cf4:	je     0x140033cfc
   140033cf6:	mov    BYTE PTR [rdi],0x2d
   140033cf9:	inc    rdi
   140033cfc:	mov    r9d,DWORD PTR [rsp+0x90]
   140033d04:	mov    r11d,0x30
   140033d0a:	movabs rbx,0xfffffffffffff
   140033d14:	mov    eax,r9d
   140033d17:	mov    BYTE PTR [rdi],r11b
   140033d1a:	neg    eax
   140033d1c:	mov    eax,r9d
   140033d1f:	sbb    cl,cl
   140033d21:	and    cl,0xe0
   140033d24:	add    cl,0x78
   140033d27:	neg    eax
   140033d29:	movabs rax,0x7ff0000000000000
   140033d33:	sbb    edx,edx
   140033d35:	mov    BYTE PTR [rdi+0x1],cl
   140033d38:	and    edx,0xffffffe0
   140033d3b:	sub    edx,0xffffffd9
   140033d3e:	test   QWORD PTR [r13+0x0],rax
   140033d42:	jne    0x140033d62
   140033d44:	mov    BYTE PTR [rdi+0x2],r11b
   140033d48:	mov    rax,QWORD PTR [r13+0x0]
   140033d4c:	add    rdi,0x3
   140033d50:	and    rax,rbx
   140033d53:	neg    rax
   140033d56:	sbb    r15,r15
   140033d59:	and    r15d,0x3fe
   140033d60:	jmp    0x140033d6a
   140033d62:	mov    BYTE PTR [rdi+0x2],0x31
   140033d66:	add    rdi,0x3
   140033d6a:	xor    r10d,r10d
   140033d6d:	mov    r14,rdi
   140033d70:	inc    rdi
   140033d73:	cmp    ebp,r10d
   140033d76:	jne    0x140033d7d
   140033d78:	mov    BYTE PTR [r14],r10b
   140033d7b:	jmp    0x140033d91
   140033d7d:	mov    rax,QWORD PTR [rsp+0x30]
   140033d82:	mov    rcx,QWORD PTR [rax+0x128]
   140033d89:	mov    rax,QWORD PTR [rcx]
   140033d8c:	mov    cl,BYTE PTR [rax]
   140033d8e:	mov    BYTE PTR [r14],cl
   140033d91:	test   QWORD PTR [r13+0x0],rbx
   140033d95:	jbe    0x140033e2b
   140033d9b:	movabs r8,0xf000000000000
   140033da5:	cmp    ebp,r10d
   140033da8:	jle    0x140033ddd
   140033daa:	mov    rax,QWORD PTR [r13+0x0]
   140033dae:	mov    cl,r12b
   140033db1:	and    rax,r8
   140033db4:	and    rax,rbx
   140033db7:	shr    rax,cl
   140033dba:	add    ax,r11w
   140033dbe:	cmp    ax,0x39
   140033dc2:	jbe    0x140033dc7
   140033dc4:	add    ax,dx
   140033dc7:	add    r12w,0xfffc
   140033dcc:	mov    BYTE PTR [rdi],al
   140033dce:	shr    r8,0x4
   140033dd2:	inc    rdi
   140033dd5:	dec    ebp
   140033dd7:	cmp    r12w,r10w
   140033ddb:	jge    0x140033da5
   140033ddd:	cmp    r12w,r10w
   140033de1:	jl     0x140033e2b
   140033de3:	mov    rax,QWORD PTR [r13+0x0]
   140033de7:	mov    cl,r12b
   140033dea:	and    rax,r8
   140033ded:	and    rax,rbx
   140033df0:	shr    rax,cl
   140033df3:	cmp    ax,0x8
   140033df7:	jbe    0x140033e2b
   140033df9:	lea    rax,[rdi-0x1]
   140033dfd:	cmp    BYTE PTR [rax],0x66
   140033e00:	je     0x140033e07
   140033e02:	cmp    BYTE PTR [rax],0x46
   140033e05:	jne    0x140033e0f
   140033e07:	mov    BYTE PTR [rax],r11b
   140033e0a:	dec    rax
   140033e0d:	jmp    0x140033dfd
   140033e0f:	cmp    rax,r14
   140033e12:	je     0x140033e28
   140033e14:	mov    cl,BYTE PTR [rax]
   140033e16:	cmp    cl,0x39
   140033e19:	jne    0x140033e22
   140033e1b:	add    dl,0x3a
   140033e1e:	mov    BYTE PTR [rax],dl
   140033e20:	jmp    0x140033e2b
   140033e22:	inc    cl
   140033e24:	mov    BYTE PTR [rax],cl
   140033e26:	jmp    0x140033e2b
   140033e28:	inc    BYTE PTR [rax-0x1]
   140033e2b:	cmp    ebp,r10d
   140033e2e:	jle    0x140033e52
   140033e30:	mov    r8d,ebp
   140033e33:	mov    dl,r11b
   140033e36:	mov    rcx,rdi
   140033e39:	mov    ebx,ebp
   140033e3b:	call   0x14002b280
   140033e40:	mov    r9d,DWORD PTR [rsp+0x90]
   140033e48:	add    rdi,rbx
   140033e4b:	xor    r10d,r10d
   140033e4e:	lea    r11d,[r10+0x30]
   140033e52:	cmp    BYTE PTR [r14],r10b
   140033e55:	cmove  rdi,r14
   140033e59:	neg    r9d
   140033e5c:	sbb    al,al
   140033e5e:	and    al,0xe0
   140033e60:	add    al,0x70
   140033e62:	mov    BYTE PTR [rdi],al
   140033e64:	mov    rcx,QWORD PTR [r13+0x0]
   140033e68:	shr    rcx,0x34
   140033e6c:	and    ecx,0x7ff
   140033e72:	sub    rcx,r15
   140033e75:	js     0x140033e81
   140033e77:	mov    BYTE PTR [rdi+0x1],0x2b
   140033e7b:	add    rdi,0x2
   140033e7f:	jmp    0x140033e8c
   140033e81:	mov    BYTE PTR [rdi+0x1],0x2d
   140033e85:	add    rdi,0x2
   140033e89:	neg    rcx
   140033e8c:	cmp    rcx,0x3e8
   140033e93:	mov    r8,rdi
   140033e96:	mov    BYTE PTR [rdi],r11b
   140033e99:	jl     0x140033ece
   140033e9b:	movabs rax,0x20c49ba5e353f7cf
   140033ea5:	imul   rcx
   140033ea8:	sar    rdx,0x7
   140033eac:	mov    rax,rdx
   140033eaf:	shr    rax,0x3f
   140033eb3:	add    rdx,rax
   140033eb6:	lea    eax,[r11+rdx*1]
   140033eba:	imul   rdx,rdx,0xfffffffffffffc18
   140033ec1:	mov    BYTE PTR [rdi],al
   140033ec3:	inc    rdi
   140033ec6:	add    rcx,rdx
   140033ec9:	cmp    rdi,r8
   140033ecc:	jne    0x140033ed4
   140033ece:	cmp    rcx,0x64
   140033ed2:	jl     0x140033f02
   140033ed4:	movabs rax,0xa3d70a3d70a3d70b
   140033ede:	imul   rcx
   140033ee1:	add    rdx,rcx
   140033ee4:	sar    rdx,0x6
   140033ee8:	mov    rax,rdx
   140033eeb:	shr    rax,0x3f
   140033eef:	add    rdx,rax
   140033ef2:	lea    eax,[r11+rdx*1]
   140033ef6:	imul   rdx,rdx,0xffffffffffffff9c
   140033efa:	mov    BYTE PTR [rdi],al
   140033efc:	inc    rdi
   140033eff:	add    rcx,rdx
   140033f02:	cmp    rdi,r8
   140033f05:	jne    0x140033f0d
   140033f07:	cmp    rcx,0xa
   140033f0b:	jl     0x140033f38
   140033f0d:	movabs rax,0x6666666666666667
   140033f17:	imul   rcx
   140033f1a:	sar    rdx,0x2
   140033f1e:	mov    rax,rdx
   140033f21:	shr    rax,0x3f
   140033f25:	add    rdx,rax
   140033f28:	lea    eax,[r11+rdx*1]
   140033f2c:	imul   rdx,rdx,0xfffffffffffffff6
   140033f30:	mov    BYTE PTR [rdi],al
   140033f32:	inc    rdi
   140033f35:	add    rcx,rdx
   140033f38:	add    cl,r11b
   140033f3b:	cmp    BYTE PTR [rsp+0x48],r10b
   140033f40:	mov    BYTE PTR [rdi],cl
   140033f42:	mov    BYTE PTR [rdi+0x1],r10b
   140033f46:	je     0x140033f54
   140033f48:	mov    rax,QWORD PTR [rsp+0x40]
   140033f4d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140033f54:	xor    eax,eax
   140033f56:	lea    r11,[rsp+0x50]
   140033f5b:	mov    rbx,QWORD PTR [r11+0x20]
   140033f5f:	mov    rbp,QWORD PTR [r11+0x28]
   140033f63:	mov    rdi,QWORD PTR [r11+0x30]
   140033f67:	mov    r12,QWORD PTR [r11+0x38]
   140033f6b:	mov    rsp,r11
   140033f6e:	pop    r15
   140033f70:	pop    r14
   140033f72:	pop    r13
   140033f74:	ret    
   140033f75:	int3   
   140033f76:	int3   
   140033f77:	int3   
   140033f78:	mov    rax,rsp
   140033f7b:	mov    QWORD PTR [rax+0x8],rbx
   140033f7f:	mov    QWORD PTR [rax+0x10],rbp
   140033f83:	mov    QWORD PTR [rax+0x18],rsi
   140033f87:	mov    QWORD PTR [rax+0x20],rdi
   140033f8b:	push   r12
   140033f8d:	sub    rsp,0x50
   140033f91:	mov    ebx,DWORD PTR [r9+0x4]
   140033f95:	mov    rsi,rdx
   140033f98:	mov    rdx,QWORD PTR [rsp+0x88]
   140033fa0:	mov    rdi,rcx
   140033fa3:	lea    rcx,[rax-0x28]
   140033fa7:	mov    r12,r9
   140033faa:	dec    ebx
   140033fac:	mov    ebp,r8d
   140033faf:	call   0x14002b47c
   140033fb4:	test   rdi,rdi
   140033fb7:	jne    0x140033ff1
   140033fb9:	call   0x14002b3f4
   140033fbe:	and    QWORD PTR [rsp+0x20],rdi
   140033fc3:	lea    ebx,[rdi+0x16]
   140033fc6:	xor    r9d,r9d
   140033fc9:	xor    r8d,r8d
   140033fcc:	xor    edx,edx
   140033fce:	xor    ecx,ecx
   140033fd0:	mov    DWORD PTR [rax],ebx
   140033fd2:	call   0x140031aac
   140033fd7:	cmp    BYTE PTR [rsp+0x48],dil
   140033fdc:	je     0x140033fea
   140033fde:	mov    rcx,QWORD PTR [rsp+0x40]
   140033fe3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140033fea:	mov    eax,ebx
   140033fec:	jmp    0x140034120
   140033ff1:	test   rsi,rsi
   140033ff4:	jne    0x140034029
   140033ff6:	call   0x14002b3f4
   140033ffb:	and    QWORD PTR [rsp+0x20],rsi
   140034000:	lea    ebx,[rsi+0x16]
   140034003:	xor    r9d,r9d
   140034006:	xor    r8d,r8d
   140034009:	xor    edx,edx
   14003400b:	xor    ecx,ecx
   14003400d:	mov    DWORD PTR [rax],ebx
   14003400f:	call   0x140031aac
   140034014:	cmp    BYTE PTR [rsp+0x48],sil
   140034019:	je     0x140033fea
   14003401b:	mov    rax,QWORD PTR [rsp+0x40]
   140034020:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140034027:	jmp    0x140033fea
   140034029:	cmp    BYTE PTR [rsp+0x80],0x0
   140034031:	je     0x140034050
   140034033:	cmp    ebx,ebp
   140034035:	jne    0x140034050
   140034037:	xor    eax,eax
   140034039:	cmp    DWORD PTR [r12],0x2d
   14003403e:	movsxd rcx,ebx
   140034041:	sete   al
   140034044:	add    rax,rdi
   140034047:	mov    BYTE PTR [rcx+rax*1],0x30
   14003404b:	mov    BYTE PTR [rcx+rax*1+0x1],0x0
   140034050:	cmp    DWORD PTR [r12],0x2d
   140034055:	jne    0x14003405d
   140034057:	mov    BYTE PTR [rdi],0x2d
   14003405a:	inc    rdi
   14003405d:	cmp    DWORD PTR [r12+0x4],0x0
   140034063:	jg     0x140034085
   140034065:	mov    rcx,rdi
   140034068:	call   0x140035dd0
   14003406d:	lea    rcx,[rdi+0x1]
   140034071:	mov    rdx,rdi
   140034074:	lea    r8,[rax+0x1]
   140034078:	call   0x14002b9a0
   14003407d:	mov    BYTE PTR [rdi],0x30
   140034080:	inc    rdi
   140034083:	jmp    0x14003408d
   140034085:	movsxd rax,DWORD PTR [r12+0x4]
   14003408a:	add    rdi,rax
   14003408d:	test   ebp,ebp
   14003408f:	jle    0x14003410b
   140034091:	mov    rcx,rdi
   140034094:	lea    rsi,[rdi+0x1]
   140034098:	call   0x140035dd0
   14003409d:	mov    rdx,rdi
   1400340a0:	mov    rcx,rsi
   1400340a3:	lea    r8,[rax+0x1]
   1400340a7:	call   0x14002b9a0
   1400340ac:	mov    r11,QWORD PTR [rsp+0x30]
   1400340b1:	mov    rax,QWORD PTR [r11+0x128]
   1400340b8:	mov    rcx,QWORD PTR [rax]
   1400340bb:	mov    al,BYTE PTR [rcx]
   1400340bd:	mov    BYTE PTR [rdi],al
   1400340bf:	mov    ebx,DWORD PTR [r12+0x4]
   1400340c4:	test   ebx,ebx
   1400340c6:	jns    0x14003410b
   1400340c8:	neg    ebx
   1400340ca:	cmp    BYTE PTR [rsp+0x80],0x0
   1400340d2:	jne    0x1400340dd
   1400340d4:	mov    eax,ebx
   1400340d6:	mov    ebx,ebp
   1400340d8:	cmp    ebp,eax
   1400340da:	cmovge ebx,eax
   1400340dd:	test   ebx,ebx
   1400340df:	je     0x1400340fb
   1400340e1:	mov    rcx,rsi
   1400340e4:	call   0x140035dd0
   1400340e9:	movsxd rcx,ebx
   1400340ec:	mov    rdx,rsi
   1400340ef:	lea    r8,[rax+0x1]
   1400340f3:	add    rcx,rsi
   1400340f6:	call   0x14002b9a0
   1400340fb:	movsxd r8,ebx
   1400340fe:	mov    edx,0x30
   140034103:	mov    rcx,rsi
   140034106:	call   0x14002b280
   14003410b:	cmp    BYTE PTR [rsp+0x48],0x0
   140034110:	je     0x14003411e
   140034112:	mov    rax,QWORD PTR [rsp+0x40]
   140034117:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003411e:	xor    eax,eax
   140034120:	mov    rbx,QWORD PTR [rsp+0x60]
   140034125:	mov    rbp,QWORD PTR [rsp+0x68]
   14003412a:	mov    rsi,QWORD PTR [rsp+0x70]
   14003412f:	mov    rdi,QWORD PTR [rsp+0x78]
   140034134:	add    rsp,0x50
   140034138:	pop    r12
   14003413a:	ret    
   14003413b:	int3   
   14003413c:	rex push rbx
   14003413e:	push   rsi
   14003413f:	push   rdi
   140034140:	push   r12
   140034142:	sub    rsp,0x78
   140034146:	mov    rax,QWORD PTR [rip+0x32763]        # 0x1400668b0
   14003414d:	xor    rax,rsp
   140034150:	mov    QWORD PTR [rsp+0x60],rax
   140034155:	mov    rcx,QWORD PTR [rcx]
   140034158:	mov    rbx,r8
   14003415b:	mov    rdi,rdx
   14003415e:	mov    esi,r9d
   140034161:	mov    r12d,0x16
   140034167:	lea    r8,[rsp+0x48]
   14003416c:	lea    rdx,[rsp+0x30]
   140034171:	mov    r9,r12
   140034174:	call   0x140034c84
   140034179:	test   rdi,rdi
   14003417c:	jne    0x1400341a0
   14003417e:	call   0x14002b3f4
   140034183:	and    QWORD PTR [rsp+0x20],0x0
   140034189:	xor    r9d,r9d
   14003418c:	xor    r8d,r8d
   14003418f:	xor    edx,edx
   140034191:	xor    ecx,ecx
   140034193:	mov    DWORD PTR [rax],r12d
   140034196:	call   0x140031aac
   14003419b:	mov    eax,r12d
   14003419e:	jmp    0x14003420b
   1400341a0:	test   rbx,rbx
   1400341a3:	je     0x14003417e
   1400341a5:	or     rdx,0xffffffffffffffff
   1400341a9:	cmp    rbx,rdx
   1400341ac:	je     0x1400341be
   1400341ae:	xor    eax,eax
   1400341b0:	cmp    DWORD PTR [rsp+0x30],0x2d
   1400341b5:	mov    rdx,rbx
   1400341b8:	sete   al
   1400341bb:	sub    rdx,rax
   1400341be:	mov    r8d,DWORD PTR [rsp+0x34]
   1400341c3:	xor    ecx,ecx
   1400341c5:	lea    r9,[rsp+0x30]
   1400341ca:	add    r8d,esi
   1400341cd:	cmp    DWORD PTR [rsp+0x30],0x2d
   1400341d2:	sete   cl
   1400341d5:	add    rcx,rdi
   1400341d8:	call   0x140034ad0
   1400341dd:	test   eax,eax
   1400341df:	je     0x1400341e6
   1400341e1:	mov    BYTE PTR [rdi],0x0
   1400341e4:	jmp    0x14003420b
   1400341e6:	mov    rax,QWORD PTR [rsp+0xc0]
   1400341ee:	lea    r9,[rsp+0x30]
   1400341f3:	mov    r8d,esi
   1400341f6:	mov    QWORD PTR [rsp+0x28],rax
   1400341fb:	mov    rdx,rbx
   1400341fe:	mov    rcx,rdi
   140034201:	mov    BYTE PTR [rsp+0x20],0x0
   140034206:	call   0x140033f78
   14003420b:	mov    rcx,QWORD PTR [rsp+0x60]
   140034210:	xor    rcx,rsp
   140034213:	call   0x14002b250
   140034218:	add    rsp,0x78
   14003421c:	pop    r12
   14003421e:	pop    rdi
   14003421f:	pop    rsi
   140034220:	pop    rbx
   140034221:	ret    
   140034222:	int3   
   140034223:	int3   
   140034224:	rex push rbx
   140034226:	push   rbp
   140034227:	push   rsi
   140034228:	push   rdi
   140034229:	push   r12
   14003422b:	sub    rsp,0x80
   140034232:	mov    rax,QWORD PTR [rip+0x32677]        # 0x1400668b0
   140034239:	xor    rax,rsp
   14003423c:	mov    QWORD PTR [rsp+0x70],rax
   140034241:	mov    rcx,QWORD PTR [rcx]
   140034244:	mov    rdi,r8
   140034247:	mov    rsi,rdx
   14003424a:	mov    ebp,r9d
   14003424d:	mov    ebx,0x16
   140034252:	lea    r8,[rsp+0x58]
   140034257:	lea    rdx,[rsp+0x40]
   14003425c:	mov    r9,rbx
   14003425f:	call   0x140034c84
   140034264:	test   rsi,rsi
   140034267:	jne    0x14003428c
   140034269:	call   0x14002b3f4
   14003426e:	and    QWORD PTR [rsp+0x20],0x0
   140034274:	xor    r9d,r9d
   140034277:	xor    r8d,r8d
   14003427a:	xor    edx,edx
   14003427c:	xor    ecx,ecx
   14003427e:	mov    DWORD PTR [rax],ebx
   140034280:	call   0x140031aac
   140034285:	mov    eax,ebx
   140034287:	jmp    0x14003434d
   14003428c:	test   rdi,rdi
   14003428f:	je     0x140034269
   140034291:	mov    r12d,DWORD PTR [rsp+0x44]
   140034296:	xor    eax,eax
   140034298:	dec    r12d
   14003429b:	cmp    DWORD PTR [rsp+0x40],0x2d
   1400342a0:	sete   al
   1400342a3:	or     rdx,0xffffffffffffffff
   1400342a7:	lea    rbx,[rax+rsi*1]
   1400342ab:	cmp    rdi,rdx
   1400342ae:	je     0x1400342b6
   1400342b0:	mov    rdx,rdi
   1400342b3:	sub    rdx,rax
   1400342b6:	lea    r9,[rsp+0x40]
   1400342bb:	mov    r8d,ebp
   1400342be:	mov    rcx,rbx
   1400342c1:	call   0x140034ad0
   1400342c6:	test   eax,eax
   1400342c8:	je     0x1400342cf
   1400342ca:	mov    BYTE PTR [rsi],0x0
   1400342cd:	jmp    0x14003434d
   1400342cf:	mov    eax,DWORD PTR [rsp+0x44]
   1400342d3:	dec    eax
   1400342d5:	cmp    r12d,eax
   1400342d8:	setl   cl
   1400342db:	cmp    eax,0xfffffffc
   1400342de:	jl     0x14003431b
   1400342e0:	cmp    eax,ebp
   1400342e2:	jge    0x14003431b
   1400342e4:	test   cl,cl
   1400342e6:	je     0x1400342f4
   1400342e8:	mov    al,BYTE PTR [rbx]
   1400342ea:	inc    rbx
   1400342ed:	test   al,al
   1400342ef:	jne    0x1400342e8
   1400342f1:	mov    BYTE PTR [rbx-0x2],al
   1400342f4:	mov    rax,QWORD PTR [rsp+0xd8]
   1400342fc:	lea    r9,[rsp+0x40]
   140034301:	mov    r8d,ebp
   140034304:	mov    QWORD PTR [rsp+0x28],rax
   140034309:	mov    rdx,rdi
   14003430c:	mov    rcx,rsi
   14003430f:	mov    BYTE PTR [rsp+0x20],0x1
   140034314:	call   0x140033f78
   140034319:	jmp    0x14003434d
   14003431b:	mov    rax,QWORD PTR [rsp+0xd8]
   140034323:	mov    r9d,DWORD PTR [rsp+0xd0]
   14003432b:	mov    r8d,ebp
   14003432e:	mov    QWORD PTR [rsp+0x30],rax
   140034333:	lea    rax,[rsp+0x40]
   140034338:	mov    rdx,rdi
   14003433b:	mov    rcx,rsi
   14003433e:	mov    BYTE PTR [rsp+0x28],0x1
   140034343:	mov    QWORD PTR [rsp+0x20],rax
   140034348:	call   0x1400337e8
   14003434d:	mov    rcx,QWORD PTR [rsp+0x70]
   140034352:	xor    rcx,rsp
   140034355:	call   0x14002b250
   14003435a:	add    rsp,0x80
   140034361:	pop    r12
   140034363:	pop    rdi
   140034364:	pop    rsi
   140034365:	pop    rbp
   140034366:	pop    rbx
   140034367:	ret    
   140034368:	sub    rsp,0x38
   14003436c:	cmp    r9d,0x65
   140034370:	je     0x1400343dc
   140034372:	cmp    r9d,0x45
   140034376:	je     0x1400343dc
   140034378:	cmp    r9d,0x66
   14003437c:	jne    0x140034394
   14003437e:	mov    rax,QWORD PTR [rsp+0x70]
   140034383:	mov    r9d,DWORD PTR [rsp+0x60]
   140034388:	mov    QWORD PTR [rsp+0x20],rax
   14003438d:	call   0x14003413c
   140034392:	jmp    0x1400343f8
   140034394:	cmp    r9d,0x61
   140034398:	je     0x1400343be
   14003439a:	cmp    r9d,0x41
   14003439e:	je     0x1400343be
   1400343a0:	mov    rax,QWORD PTR [rsp+0x70]
   1400343a5:	mov    r9d,DWORD PTR [rsp+0x60]
   1400343aa:	mov    QWORD PTR [rsp+0x28],rax
   1400343af:	mov    eax,DWORD PTR [rsp+0x68]
   1400343b3:	mov    DWORD PTR [rsp+0x20],eax
   1400343b7:	call   0x140034224
   1400343bc:	jmp    0x1400343f8
   1400343be:	mov    rax,QWORD PTR [rsp+0x70]
   1400343c3:	mov    r9d,DWORD PTR [rsp+0x60]
   1400343c8:	mov    QWORD PTR [rsp+0x28],rax
   1400343cd:	mov    eax,DWORD PTR [rsp+0x68]
   1400343d1:	mov    DWORD PTR [rsp+0x20],eax
   1400343d5:	call   0x140033b4c
   1400343da:	jmp    0x1400343f8
   1400343dc:	mov    rax,QWORD PTR [rsp+0x70]
   1400343e1:	mov    r9d,DWORD PTR [rsp+0x60]
   1400343e6:	mov    QWORD PTR [rsp+0x28],rax
   1400343eb:	mov    eax,DWORD PTR [rsp+0x68]
   1400343ef:	mov    DWORD PTR [rsp+0x20],eax
   1400343f3:	call   0x140033a40
   1400343f8:	add    rsp,0x38
   1400343fc:	ret    
   1400343fd:	int3   
   1400343fe:	int3   
   1400343ff:	int3   
   140034400:	sub    rsp,0x48
   140034404:	mov    eax,DWORD PTR [rsp+0x78]
   140034408:	and    QWORD PTR [rsp+0x30],0x0
   14003440e:	mov    DWORD PTR [rsp+0x28],eax
   140034412:	mov    eax,DWORD PTR [rsp+0x70]
   140034416:	mov    DWORD PTR [rsp+0x20],eax
   14003441a:	call   0x140034368
   14003441f:	add    rsp,0x48
   140034423:	ret    
   140034424:	mov    QWORD PTR [rsp+0x8],rbx
   140034429:	push   rdi
   14003442a:	sub    rsp,0x20
   14003442e:	lea    rbx,[rip+0x3325b]        # 0x140067690
   140034435:	mov    edi,0xa
   14003443a:	mov    rcx,QWORD PTR [rbx]
   14003443d:	call   0x140031ccc
   140034442:	mov    QWORD PTR [rbx],rax
   140034445:	add    rbx,0x8
   140034449:	sub    rdi,0x1
   14003444d:	jne    0x14003443a
   14003444f:	mov    rbx,QWORD PTR [rsp+0x30]
   140034454:	add    rsp,0x20
   140034458:	pop    rdi
   140034459:	ret    
   14003445a:	int3   
   14003445b:	int3   
   14003445c:	rex push rbx
   14003445e:	sub    rsp,0x30
   140034462:	test   rcx,rcx
   140034465:	je     0x140034474
   140034467:	test   rdx,rdx
   14003446a:	je     0x140034474
   14003446c:	test   r8,r8
   14003446f:	jne    0x14003449d
   140034471:	mov    BYTE PTR [rcx],r8b
   140034474:	call   0x14002b3f4
   140034479:	mov    ebx,0x16
   14003447e:	and    QWORD PTR [rsp+0x20],0x0
   140034484:	xor    r9d,r9d
   140034487:	xor    r8d,r8d
   14003448a:	xor    edx,edx
   14003448c:	xor    ecx,ecx
   14003448e:	mov    DWORD PTR [rax],ebx
   140034490:	call   0x140031aac
   140034495:	mov    eax,ebx
   140034497:	add    rsp,0x30
   14003449b:	pop    rbx
   14003449c:	ret    
   14003449d:	mov    r9,rcx
   1400344a0:	mov    al,BYTE PTR [r8]
   1400344a3:	inc    r8
   1400344a6:	mov    BYTE PTR [r9],al
   1400344a9:	inc    r9
   1400344ac:	test   al,al
   1400344ae:	je     0x1400344b6
   1400344b0:	sub    rdx,0x1
   1400344b4:	jne    0x1400344a0
   1400344b6:	test   rdx,rdx
   1400344b9:	jne    0x1400344c9
   1400344bb:	mov    BYTE PTR [rcx],dl
   1400344bd:	call   0x14002b3f4
   1400344c2:	mov    ebx,0x22
   1400344c7:	jmp    0x14003447e
   1400344c9:	xor    eax,eax
   1400344cb:	jmp    0x140034497
   1400344cd:	int3   
   1400344ce:	int3   
   1400344cf:	int3   
   1400344d0:	rex push rbp
   1400344d2:	push   r12
   1400344d4:	push   r13
   1400344d6:	push   r14
   1400344d8:	push   r15
   1400344da:	sub    rsp,0x60
   1400344de:	lea    rbp,[rsp+0x40]
   1400344e3:	mov    QWORD PTR [rbp+0x50],rbx
   1400344e7:	mov    QWORD PTR [rbp+0x58],rsi
   1400344eb:	mov    QWORD PTR [rbp+0x60],rdi
   1400344ef:	mov    rax,QWORD PTR [rip+0x323ba]        # 0x1400668b0
   1400344f6:	xor    rax,rbp
   1400344f9:	mov    QWORD PTR [rbp+0x18],rax
   1400344fd:	mov    r10d,DWORD PTR [rip+0x36518]        # 0x14006aa1c
   140034504:	mov    esi,0x2
   140034509:	xor    edi,edi
   14003450b:	mov    r11,r9
   14003450e:	mov    QWORD PTR [rbp+0x10],r9
   140034512:	mov    DWORD PTR [rbp+0x0],r8d
   140034516:	mov    r14d,edx
   140034519:	mov    DWORD PTR [rbp+0x8],edx
   14003451c:	mov    rbx,rcx
   14003451f:	lea    r13d,[rsi-0x1]
   140034523:	cmp    r10d,edi
   140034526:	jne    0x140034577
   140034528:	lea    r8,[rip+0xa10d]        # 0x14003e63c
   14003452f:	mov    r9d,r13d
   140034532:	mov    edx,0x100
   140034537:	xor    ecx,ecx
   140034539:	mov    DWORD PTR [rsp+0x28],edi
   14003453d:	mov    QWORD PTR [rsp+0x20],rdi
   140034542:	call   QWORD PTR [rip+0x8d10]        # 0x14003d258
   140034548:	cmp    eax,edi
   14003454a:	je     0x140034558
   14003454c:	mov    r10d,r13d
   14003454f:	mov    DWORD PTR [rip+0x364c6],r13d        # 0x14006aa1c
   140034556:	jmp    0x140034573
   140034558:	call   QWORD PTR [rip+0x8dda]        # 0x14003d338
   14003455e:	mov    r10d,DWORD PTR [rip+0x364b7]        # 0x14006aa1c
   140034565:	cmp    eax,0x78
   140034568:	cmove  r10d,esi
   14003456c:	mov    DWORD PTR [rip+0x364a9],r10d        # 0x14006aa1c
   140034573:	mov    r11,QWORD PTR [rbp+0x10]
   140034577:	mov    r9d,DWORD PTR [rbp+0x70]
   14003457b:	cmp    r9d,edi
   14003457e:	jle    0x1400345b5
   140034580:	mov    ecx,r9d
   140034583:	mov    rax,r11
   140034586:	sub    ecx,r13d
   140034589:	cmp    BYTE PTR [rax],dil
   14003458c:	je     0x140034598
   14003458e:	add    rax,r13
   140034591:	cmp    ecx,edi
   140034593:	jne    0x140034586
   140034595:	or     ecx,0xffffffff
   140034598:	mov    eax,r9d
   14003459b:	sub    eax,ecx
   14003459d:	sub    eax,r13d
   1400345a0:	cmp    eax,r9d
   1400345a3:	jge    0x1400345af
   1400345a5:	lea    r9d,[rax+0x1]
   1400345a9:	mov    DWORD PTR [rbp+0x70],r9d
   1400345ad:	jmp    0x1400345b5
   1400345af:	mov    r9d,eax
   1400345b2:	mov    DWORD PTR [rbp+0x70],eax
   1400345b5:	cmp    r10d,esi
   1400345b8:	je     0x14003481a
   1400345be:	cmp    r10d,edi
   1400345c1:	je     0x14003481a
   1400345c7:	cmp    r10d,r13d
   1400345ca:	jne    0x140034850
   1400345d0:	mov    r12d,DWORD PTR [rbp+0x88]
   1400345d7:	mov    esi,edi
   1400345d9:	cmp    r12d,edi
   1400345dc:	jne    0x1400345e5
   1400345de:	mov    rax,QWORD PTR [rbx]
   1400345e1:	mov    r12d,DWORD PTR [rax+0x4]
   1400345e5:	neg    DWORD PTR [rbp+0x90]
   1400345eb:	mov    r8,r11
   1400345ee:	mov    ecx,r12d
   1400345f1:	sbb    edx,edx
   1400345f3:	mov    DWORD PTR [rsp+0x28],edi
   1400345f7:	mov    QWORD PTR [rsp+0x20],rdi
   1400345fc:	and    edx,0x8
   1400345ff:	add    edx,r13d
   140034602:	call   QWORD PTR [rip+0x8aa8]        # 0x14003d0b0
   140034608:	movsxd r15,eax
   14003460b:	cmp    r15d,edi
   14003460e:	je     0x140034850
   140034614:	movabs rbx,0xffffffffffffff0
   14003461e:	mov    r14d,0xdddd
   140034624:	mov    r13d,0x400
   14003462a:	jle    0x140034687
   14003462c:	xor    edx,edx
   14003462e:	lea    rax,[rdx-0x20]
   140034632:	div    r15
   140034635:	cmp    rax,0x2
   140034639:	jb     0x140034687
   14003463b:	lea    rcx,[r15+r15*1+0x10]
   140034640:	cmp    rcx,r13
   140034643:	ja     0x140034673
   140034645:	lea    rax,[rcx+0xf]
   140034649:	cmp    rax,rcx
   14003464c:	ja     0x140034651
   14003464e:	mov    rax,rbx
   140034651:	and    rax,0xfffffffffffffff0
   140034655:	call   0x14003c600
   14003465a:	sub    rsp,rax
   14003465d:	lea    rdi,[rsp+0x40]
   140034662:	test   rdi,rdi
   140034665:	je     0x140034850
   14003466b:	mov    DWORD PTR [rdi],0xcccc
   140034671:	jmp    0x140034683
   140034673:	call   0x14002c04c
   140034678:	mov    rdi,rax
   14003467b:	test   rax,rax
   14003467e:	je     0x140034687
   140034680:	mov    DWORD PTR [rax],r14d
   140034683:	add    rdi,0x10
   140034687:	test   rdi,rdi
   14003468a:	je     0x140034850
   140034690:	mov    r9d,DWORD PTR [rbp+0x70]
   140034694:	mov    r8,QWORD PTR [rbp+0x10]
   140034698:	mov    edx,0x1
   14003469d:	mov    ecx,r12d
   1400346a0:	mov    DWORD PTR [rsp+0x28],r15d
   1400346a5:	mov    QWORD PTR [rsp+0x20],rdi
   1400346aa:	call   QWORD PTR [rip+0x8a00]        # 0x14003d0b0
   1400346b0:	xor    ecx,ecx
   1400346b2:	cmp    eax,ecx
   1400346b4:	je     0x140034805
   1400346ba:	mov    edx,DWORD PTR [rbp+0x0]
   1400346bd:	mov    DWORD PTR [rsp+0x28],ecx
   1400346c1:	mov    QWORD PTR [rsp+0x20],rcx
   1400346c6:	mov    ecx,DWORD PTR [rbp+0x8]
   1400346c9:	mov    r9d,r15d
   1400346cc:	mov    r8,rdi
   1400346cf:	call   QWORD PTR [rip+0x8b83]        # 0x14003d258
   1400346d5:	xor    r8d,r8d
   1400346d8:	movsxd rsi,eax
   1400346db:	cmp    esi,r8d
   1400346de:	je     0x140034805
   1400346e4:	mov    r10d,DWORD PTR [rbp+0x0]
   1400346e8:	bt     r10d,0xa
   1400346ed:	jae    0x14003472a
   1400346ef:	mov    eax,DWORD PTR [rbp+0x80]
   1400346f5:	cmp    eax,r8d
   1400346f8:	je     0x140034805
   1400346fe:	cmp    esi,eax
   140034700:	jg     0x140034805
   140034706:	mov    ecx,DWORD PTR [rbp+0x8]
   140034709:	mov    DWORD PTR [rsp+0x28],eax
   14003470d:	mov    rax,QWORD PTR [rbp+0x78]
   140034711:	mov    r9d,r15d
   140034714:	mov    r8,rdi
   140034717:	mov    edx,r10d
   14003471a:	mov    QWORD PTR [rsp+0x20],rax
   14003471f:	call   QWORD PTR [rip+0x8b33]        # 0x14003d258
   140034725:	jmp    0x140034805
   14003472a:	cmp    esi,r8d
   14003472d:	jle    0x14003478f
   14003472f:	xor    edx,edx
   140034731:	lea    rax,[rdx-0x20]
   140034735:	div    rsi
   140034738:	cmp    rax,0x2
   14003473c:	jb     0x14003478f
   14003473e:	lea    rcx,[rsi+rsi*1+0x10]
   140034743:	cmp    rcx,r13
   140034746:	ja     0x140034772
   140034748:	lea    rax,[rcx+0xf]
   14003474c:	cmp    rax,rcx
   14003474f:	ja     0x140034754
   140034751:	mov    rax,rbx
   140034754:	and    rax,0xfffffffffffffff0
   140034758:	call   0x14003c600
   14003475d:	sub    rsp,rax
   140034760:	lea    rbx,[rsp+0x40]
   140034765:	cmp    rbx,r8
   140034768:	je     0x140034789
   14003476a:	mov    DWORD PTR [rbx],0xcccc
   140034770:	jmp    0x140034785
   140034772:	call   0x14002c04c
   140034777:	xor    r8d,r8d
   14003477a:	mov    rbx,rax
   14003477d:	cmp    rax,r8
   140034780:	je     0x140034789
   140034782:	mov    DWORD PTR [rax],r14d
   140034785:	add    rbx,0x10
   140034789:	mov    r10d,DWORD PTR [rbp+0x0]
   14003478d:	jmp    0x140034792
   14003478f:	mov    rbx,r8
   140034792:	cmp    rbx,r8
   140034795:	je     0x140034805
   140034797:	mov    ecx,DWORD PTR [rbp+0x8]
   14003479a:	mov    r9d,r15d
   14003479d:	mov    r8,rdi
   1400347a0:	mov    edx,r10d
   1400347a3:	mov    DWORD PTR [rsp+0x28],esi
   1400347a7:	mov    QWORD PTR [rsp+0x20],rbx
   1400347ac:	call   QWORD PTR [rip+0x8aa6]        # 0x14003d258
   1400347b2:	xor    ecx,ecx
   1400347b4:	cmp    eax,ecx
   1400347b6:	je     0x1400347f7
   1400347b8:	mov    eax,DWORD PTR [rbp+0x80]
   1400347be:	xor    edx,edx
   1400347c0:	mov    QWORD PTR [rsp+0x38],rcx
   1400347c5:	mov    r9d,esi
   1400347c8:	mov    r8,rbx
   1400347cb:	mov    QWORD PTR [rsp+0x30],rcx
   1400347d0:	cmp    eax,ecx
   1400347d2:	jne    0x1400347df
   1400347d4:	mov    DWORD PTR [rsp+0x28],ecx
   1400347d8:	mov    QWORD PTR [rsp+0x20],rcx
   1400347dd:	jmp    0x1400347ec
   1400347df:	mov    DWORD PTR [rsp+0x28],eax
   1400347e3:	mov    rax,QWORD PTR [rbp+0x78]
   1400347e7:	mov    QWORD PTR [rsp+0x20],rax
   1400347ec:	mov    ecx,r12d
   1400347ef:	call   QWORD PTR [rip+0x88a3]        # 0x14003d098
   1400347f5:	mov    esi,eax
   1400347f7:	lea    rcx,[rbx-0x10]
   1400347fb:	cmp    DWORD PTR [rcx],r14d
   1400347fe:	jne    0x140034805
   140034800:	call   0x14002b36c
   140034805:	lea    rcx,[rdi-0x10]
   140034809:	cmp    DWORD PTR [rcx],r14d
   14003480c:	jne    0x140034813
   14003480e:	call   0x14002b36c
   140034813:	mov    eax,esi
   140034815:	jmp    0x1400349e7
   14003481a:	mov    rsi,rdi
   14003481d:	mov    r12,rdi
   140034820:	cmp    r14d,edi
   140034823:	jne    0x140034830
   140034825:	mov    rax,QWORD PTR [rbx]
   140034828:	mov    r14d,DWORD PTR [rax+0x14]
   14003482c:	mov    DWORD PTR [rbp+0x8],r14d
   140034830:	mov    edi,DWORD PTR [rbp+0x88]
   140034836:	test   edi,edi
   140034838:	jne    0x140034840
   14003483a:	mov    rax,QWORD PTR [rbx]
   14003483d:	mov    edi,DWORD PTR [rax+0x4]
   140034840:	mov    ecx,r14d
   140034843:	call   0x1400385d8
   140034848:	mov    r13d,eax
   14003484b:	cmp    eax,0xffffffff
   14003484e:	jne    0x140034857
   140034850:	xor    eax,eax
   140034852:	jmp    0x1400349e7
   140034857:	mov    r15,QWORD PTR [rbp+0x78]
   14003485b:	mov    r8,QWORD PTR [rbp+0x10]
   14003485f:	cmp    eax,edi
   140034861:	je     0x1400349a3
   140034867:	xor    ebx,ebx
   140034869:	lea    r9,[rbp+0x70]
   14003486d:	mov    edx,eax
   14003486f:	mov    ecx,edi
   140034871:	mov    DWORD PTR [rsp+0x28],ebx
   140034875:	mov    QWORD PTR [rsp+0x20],rbx
   14003487a:	call   0x14003862c
   14003487f:	mov    rsi,rax
   140034882:	cmp    rax,rbx
   140034885:	je     0x140034850
   140034887:	mov    r9d,DWORD PTR [rbp+0x70]
   14003488b:	mov    edx,DWORD PTR [rbp+0x0]
   14003488e:	mov    r8,rax
   140034891:	mov    ecx,r14d
   140034894:	mov    DWORD PTR [rsp+0x28],ebx
   140034898:	mov    QWORD PTR [rsp+0x20],rbx
   14003489d:	call   QWORD PTR [rip+0x89ad]        # 0x14003d250
   1400348a3:	movsxd r9,eax
   1400348a6:	mov    DWORD PTR [rbp+0x4],r9d
   1400348aa:	cmp    r9d,ebx
   1400348ad:	jne    0x1400348b6
   1400348af:	mov    edi,ebx
   1400348b1:	jmp    0x1400349c6
   1400348b6:	cmp    r9d,ebx
   1400348b9:	mov    r14d,0xdddd
   1400348bf:	jle    0x140034923
   1400348c1:	mov    rcx,r9
   1400348c4:	cmp    r9,0xffffffffffffffe0
   1400348c8:	ja     0x140034923
   1400348ca:	add    rcx,0x10
   1400348ce:	cmp    rcx,0x400
   1400348d5:	ja     0x14003490b
   1400348d7:	lea    rbx,[rcx+0xf]
   1400348db:	cmp    rbx,rcx
   1400348de:	ja     0x1400348ea
   1400348e0:	movabs rbx,0xffffffffffffff0
   1400348ea:	and    rbx,0xfffffffffffffff0
   1400348ee:	mov    rax,rbx
   1400348f1:	call   0x14003c600
   1400348f6:	sub    rsp,rbx
   1400348f9:	lea    rbx,[rsp+0x40]
   1400348fe:	test   rbx,rbx
   140034901:	je     0x140034928
   140034903:	mov    DWORD PTR [rbx],0xcccc
   140034909:	jmp    0x14003491b
   14003490b:	call   0x14002c04c
   140034910:	mov    rbx,rax
   140034913:	test   rax,rax
   140034916:	je     0x14003491f
   140034918:	mov    DWORD PTR [rax],r14d
   14003491b:	add    rbx,0x10
   14003491f:	mov    r9d,DWORD PTR [rbp+0x4]
   140034923:	test   rbx,rbx
   140034926:	jne    0x14003492c
   140034928:	xor    ebx,ebx
   14003492a:	jmp    0x1400348af
   14003492c:	movsxd r8,r9d
   14003492f:	xor    edx,edx
   140034931:	mov    rcx,rbx
   140034934:	call   0x14002b280
   140034939:	mov    r11d,DWORD PTR [rbp+0x4]
   14003493d:	mov    r9d,DWORD PTR [rbp+0x70]
   140034941:	mov    edx,DWORD PTR [rbp+0x0]
   140034944:	mov    ecx,DWORD PTR [rbp+0x8]
   140034947:	mov    DWORD PTR [rsp+0x28],r11d
   14003494c:	mov    r8,rsi
   14003494f:	mov    QWORD PTR [rsp+0x20],rbx
   140034954:	call   QWORD PTR [rip+0x88f6]        # 0x14003d250
   14003495a:	mov    DWORD PTR [rbp+0x4],eax
   14003495d:	test   eax,eax
   14003495f:	jne    0x140034965
   140034961:	xor    edi,edi
   140034963:	jmp    0x140034993
   140034965:	mov    eax,DWORD PTR [rbp+0x80]
   14003496b:	lea    r9,[rbp+0x4]
   14003496f:	mov    r8,rbx
   140034972:	mov    DWORD PTR [rsp+0x28],eax
   140034976:	mov    edx,edi
   140034978:	mov    ecx,r13d
   14003497b:	mov    QWORD PTR [rsp+0x20],r15
   140034980:	call   0x14003862c
   140034985:	mov    edi,DWORD PTR [rbp+0x4]
   140034988:	mov    r12,rax
   14003498b:	xor    eax,eax
   14003498d:	cmp    r12,rax
   140034990:	cmove  edi,eax
   140034993:	lea    rcx,[rbx-0x10]
   140034997:	cmp    DWORD PTR [rcx],r14d
   14003499a:	jne    0x1400349c4
   14003499c:	call   0x14002b36c
   1400349a1:	jmp    0x1400349c4
   1400349a3:	mov    eax,DWORD PTR [rbp+0x80]
   1400349a9:	mov    r9d,DWORD PTR [rbp+0x70]
   1400349ad:	mov    edx,DWORD PTR [rbp+0x0]
   1400349b0:	mov    DWORD PTR [rsp+0x28],eax
   1400349b4:	mov    ecx,r14d
   1400349b7:	mov    QWORD PTR [rsp+0x20],r15
   1400349bc:	call   QWORD PTR [rip+0x888e]        # 0x14003d250
   1400349c2:	mov    edi,eax
   1400349c4:	xor    ebx,ebx
   1400349c6:	cmp    rsi,rbx
   1400349c9:	je     0x1400349d3
   1400349cb:	mov    rcx,rsi
   1400349ce:	call   0x14002b36c
   1400349d3:	cmp    r12,rbx
   1400349d6:	je     0x1400349e5
   1400349d8:	cmp    r15,r12
   1400349db:	je     0x1400349e5
   1400349dd:	mov    rcx,r12
   1400349e0:	call   0x14002b36c
   1400349e5:	mov    eax,edi
   1400349e7:	mov    rcx,QWORD PTR [rbp+0x18]
   1400349eb:	xor    rcx,rbp
   1400349ee:	call   0x14002b250
   1400349f3:	mov    rbx,QWORD PTR [rbp+0x50]
   1400349f7:	mov    rsi,QWORD PTR [rbp+0x58]
   1400349fb:	mov    rdi,QWORD PTR [rbp+0x60]
   1400349ff:	lea    rsp,[rbp+0x20]
   140034a03:	pop    r15
   140034a05:	pop    r14
   140034a07:	pop    r13
   140034a09:	pop    r12
   140034a0b:	pop    rbp
   140034a0c:	ret    
   140034a0d:	int3   
   140034a0e:	int3   
   140034a0f:	int3   
   140034a10:	mov    QWORD PTR [rsp+0x8],rbx
   140034a15:	mov    QWORD PTR [rsp+0x10],rsi
   140034a1a:	push   rdi
   140034a1b:	sub    rsp,0x70
   140034a1f:	mov    esi,edx
   140034a21:	mov    rdx,rcx
   140034a24:	lea    rcx,[rsp+0x50]
   140034a29:	mov    rbx,r9
   140034a2c:	mov    edi,r8d
   140034a2f:	call   0x14002b47c
   140034a34:	mov    eax,DWORD PTR [rsp+0xb8]
   140034a3b:	mov    r11d,DWORD PTR [rsp+0xc0]
   140034a43:	lea    rcx,[rsp+0x50]
   140034a48:	mov    DWORD PTR [rsp+0x40],r11d
   140034a4d:	mov    DWORD PTR [rsp+0x38],eax
   140034a51:	mov    eax,DWORD PTR [rsp+0xb0]
   140034a58:	mov    DWORD PTR [rsp+0x30],eax
   140034a5c:	mov    rax,QWORD PTR [rsp+0xa8]
   140034a64:	mov    r9,rbx
   140034a67:	mov    QWORD PTR [rsp+0x28],rax
   140034a6c:	mov    eax,DWORD PTR [rsp+0xa0]
   140034a73:	mov    r8d,edi
   140034a76:	mov    edx,esi
   140034a78:	mov    DWORD PTR [rsp+0x20],eax
   140034a7c:	call   0x1400344d0
   140034a81:	cmp    BYTE PTR [rsp+0x68],0x0
   140034a86:	je     0x140034a94
   140034a88:	mov    rcx,QWORD PTR [rsp+0x60]
   140034a8d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140034a94:	lea    r11,[rsp+0x70]
   140034a99:	mov    rbx,QWORD PTR [r11+0x10]
   140034a9d:	mov    rsi,QWORD PTR [r11+0x18]
   140034aa1:	mov    rsp,r11
   140034aa4:	pop    rdi
   140034aa5:	ret    
   140034aa6:	int3   
   140034aa7:	int3   
   140034aa8:	xor    eax,eax
   140034aaa:	test   rdx,rdx
   140034aad:	je     0x140034abf
   140034aaf:	cmp    BYTE PTR [rcx],0x0
   140034ab2:	je     0x140034abf
   140034ab4:	inc    rax
   140034ab7:	inc    rcx
   140034aba:	cmp    rax,rdx
   140034abd:	jb     0x140034aaf
   140034abf:	repz ret 
   140034ac1:	int3   
   140034ac2:	int3   
   140034ac3:	int3   
   140034ac4:	int3   
   140034ac5:	int3   
   140034ac6:	int3   
   140034ac7:	int3   
   140034ac8:	int3   
   140034ac9:	int3   
   140034aca:	int3   
   140034acb:	int3   
   140034acc:	int3   
   140034acd:	int3   
   140034ace:	int3   
   140034acf:	int3   
   140034ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140034ad5:	push   rdi
   140034ad6:	sub    rsp,0x30
   140034ada:	mov    r10,QWORD PTR [r9+0x10]
   140034ade:	mov    rbx,rcx
   140034ae1:	test   rcx,rcx
   140034ae4:	jne    0x140034b0e
   140034ae6:	call   0x14002b3f4
   140034aeb:	mov    ebx,0x16
   140034af0:	and    QWORD PTR [rsp+0x20],0x0
   140034af6:	xor    r9d,r9d
   140034af9:	xor    r8d,r8d
   140034afc:	xor    edx,edx
   140034afe:	xor    ecx,ecx
   140034b00:	mov    DWORD PTR [rax],ebx
   140034b02:	call   0x140031aac
   140034b07:	mov    eax,ebx
   140034b09:	jmp    0x140034b9e
   140034b0e:	test   rdx,rdx
   140034b11:	je     0x140034ae6
   140034b13:	xor    eax,eax
   140034b15:	test   r8d,r8d
   140034b18:	mov    BYTE PTR [rcx],0x0
   140034b1b:	cmovg  eax,r8d
   140034b1f:	inc    eax
   140034b21:	cdqe   
   140034b23:	cmp    rdx,rax
   140034b26:	ja     0x140034b34
   140034b28:	call   0x14002b3f4
   140034b2d:	mov    ebx,0x22
   140034b32:	jmp    0x140034af0
   140034b34:	mov    BYTE PTR [rcx],0x30
   140034b37:	lea    rax,[rcx+0x1]
   140034b3b:	jmp    0x140034b59
   140034b3d:	cmp    BYTE PTR [r10],0x0
   140034b41:	je     0x140034b4c
   140034b43:	movsx  ecx,BYTE PTR [r10]
   140034b47:	inc    r10
   140034b4a:	jmp    0x140034b51
   140034b4c:	mov    ecx,0x30
   140034b51:	mov    BYTE PTR [rax],cl
   140034b53:	inc    rax
   140034b56:	dec    r8d
   140034b59:	test   r8d,r8d
   140034b5c:	jg     0x140034b3d
   140034b5e:	mov    BYTE PTR [rax],0x0
   140034b61:	js     0x140034b78
   140034b63:	cmp    BYTE PTR [r10],0x35
   140034b67:	jl     0x140034b78
   140034b69:	jmp    0x140034b6e
   140034b6b:	mov    BYTE PTR [rax],0x30
   140034b6e:	dec    rax
   140034b71:	cmp    BYTE PTR [rax],0x39
   140034b74:	je     0x140034b6b
   140034b76:	inc    BYTE PTR [rax]
   140034b78:	cmp    BYTE PTR [rbx],0x31
   140034b7b:	jne    0x140034b83
   140034b7d:	inc    DWORD PTR [r9+0x4]
   140034b81:	jmp    0x140034b9c
   140034b83:	lea    rcx,[rbx+0x1]
   140034b87:	call   0x140035dd0
   140034b8c:	lea    rdx,[rbx+0x1]
   140034b90:	mov    rcx,rbx
   140034b93:	lea    r8,[rax+0x1]
   140034b97:	call   0x14002b9a0
   140034b9c:	xor    eax,eax
   140034b9e:	mov    rbx,QWORD PTR [rsp+0x40]
   140034ba3:	add    rsp,0x30
   140034ba7:	pop    rdi
   140034ba8:	ret    
   140034ba9:	int3   
   140034baa:	int3   
   140034bab:	int3   
   140034bac:	mov    QWORD PTR [rsp+0x8],rbx
   140034bb1:	mov    QWORD PTR [rsp+0x10],rdi
   140034bb6:	movzx  r10d,WORD PTR [rdx+0x6]
   140034bbb:	mov    r11d,DWORD PTR [rdx+0x4]
   140034bbf:	mov    eax,0x8000
   140034bc4:	mov    r8w,r10w
   140034bc8:	and    r10w,ax
   140034bcc:	mov    edi,0x7ff
   140034bd1:	shr    r8w,0x4
   140034bd6:	and    r11d,0xfffff
   140034bdd:	mov    r9,rcx
   140034be0:	mov    ecx,DWORD PTR [rdx]
   140034be2:	and    r8w,di
   140034be6:	mov    ebx,0x80000000
   140034beb:	movzx  eax,r8w
   140034bef:	test   eax,eax
   140034bf1:	je     0x140034c0a
   140034bf3:	cmp    eax,edi
   140034bf5:	je     0x140034c02
   140034bf7:	mov    eax,0x3c00
   140034bfc:	add    r8w,ax
   140034c00:	jmp    0x140034c27
   140034c02:	mov    r8d,0x7fff
   140034c08:	jmp    0x140034c27
   140034c0a:	test   r11d,r11d
   140034c0d:	jne    0x140034c1c
   140034c0f:	test   ecx,ecx
   140034c11:	jne    0x140034c1c
   140034c13:	and    DWORD PTR [r9+0x4],ecx
   140034c17:	and    DWORD PTR [r9],ecx
   140034c1a:	jmp    0x140034c72
   140034c1c:	mov    eax,0x3c01
   140034c21:	add    r8w,ax
   140034c25:	xor    ebx,ebx
   140034c27:	mov    eax,ecx
   140034c29:	shl    r11d,0xb
   140034c2d:	shl    ecx,0xb
   140034c30:	shr    eax,0x15
   140034c33:	mov    DWORD PTR [r9],ecx
   140034c36:	or     eax,r11d
   140034c39:	or     eax,ebx
   140034c3b:	bt     eax,0x1f
   140034c3f:	mov    DWORD PTR [r9+0x4],eax
   140034c43:	jb     0x140034c6e
   140034c45:	mov    ecx,DWORD PTR [r9]
   140034c48:	mov    edx,DWORD PTR [r9+0x4]
   140034c4c:	add    edx,edx
   140034c4e:	mov    eax,ecx
   140034c50:	shr    eax,0x1f
   140034c53:	or     edx,eax
   140034c55:	lea    eax,[rcx+rcx*1]
   140034c58:	mov    DWORD PTR [r9],eax
   140034c5b:	mov    eax,0xffff
   140034c60:	mov    DWORD PTR [r9+0x4],edx
   140034c64:	add    r8w,ax
   140034c68:	bt     edx,0x1f
   140034c6c:	jae    0x140034c45
   140034c6e:	or     r10w,r8w
   140034c72:	mov    rbx,QWORD PTR [rsp+0x8]
   140034c77:	mov    rdi,QWORD PTR [rsp+0x10]
   140034c7c:	mov    WORD PTR [r9+0x8],r10w
   140034c81:	ret    
   140034c82:	int3   
   140034c83:	int3   
   140034c84:	rex push rbx
   140034c86:	push   rsi
   140034c87:	push   rdi
   140034c88:	sub    rsp,0x80
   140034c8f:	mov    rax,QWORD PTR [rip+0x31c1a]        # 0x1400668b0
   140034c96:	xor    rax,rsp
   140034c99:	mov    QWORD PTR [rsp+0x70],rax
   140034c9e:	mov    rdi,rdx
   140034ca1:	mov    QWORD PTR [rsp+0x30],rcx
   140034ca6:	lea    rdx,[rsp+0x30]
   140034cab:	lea    rcx,[rsp+0x40]
   140034cb0:	mov    rbx,r9
   140034cb3:	mov    rsi,r8
   140034cb6:	call   0x140034bac
   140034cbb:	lea    rcx,[rsp+0x40]
   140034cc0:	lea    r11,[rsp+0x30]
   140034cc5:	mov    rax,QWORD PTR [rcx]
   140034cc8:	xor    r8d,r8d
   140034ccb:	lea    r9,[rsp+0x50]
   140034cd0:	mov    QWORD PTR [r11],rax
   140034cd3:	movzx  eax,WORD PTR [rcx+0x8]
   140034cd7:	lea    edx,[r8+0x11]
   140034cdb:	lea    rcx,[rsp+0x30]
   140034ce0:	mov    WORD PTR [r11+0x8],ax
   140034ce5:	call   0x140039db8
   140034cea:	lea    r8,[rsp+0x54]
   140034cef:	mov    rdx,rbx
   140034cf2:	mov    DWORD PTR [rdi+0x8],eax
   140034cf5:	movsx  eax,BYTE PTR [rsp+0x52]
   140034cfa:	mov    rcx,rsi
   140034cfd:	mov    DWORD PTR [rdi],eax
   140034cff:	movsx  eax,WORD PTR [rsp+0x50]
   140034d04:	mov    DWORD PTR [rdi+0x4],eax
   140034d07:	call   0x14003445c
   140034d0c:	test   eax,eax
   140034d0e:	je     0x140034d25
   140034d10:	and    QWORD PTR [rsp+0x20],0x0
   140034d16:	xor    r9d,r9d
   140034d19:	xor    r8d,r8d
   140034d1c:	xor    edx,edx
   140034d1e:	xor    ecx,ecx
   140034d20:	call   0x140031984
   140034d25:	mov    QWORD PTR [rdi+0x10],rsi
   140034d29:	mov    rax,rdi
   140034d2c:	mov    rcx,QWORD PTR [rsp+0x70]
   140034d31:	xor    rcx,rsp
   140034d34:	call   0x14002b250
   140034d39:	add    rsp,0x80
   140034d40:	pop    rdi
   140034d41:	pop    rsi
   140034d42:	pop    rbx
   140034d43:	ret    
   140034d44:	rex push rbx
   140034d46:	sub    rsp,0x40
   140034d4a:	mov    ebx,ecx
   140034d4c:	lea    rcx,[rsp+0x20]
   140034d51:	call   0x14002b47c
   140034d56:	mov    rax,QWORD PTR [rsp+0x20]
   140034d5b:	movzx  r11d,bl
   140034d5f:	mov    rcx,QWORD PTR [rax+0x140]
   140034d66:	movzx  eax,WORD PTR [rcx+r11*2]
   140034d6b:	and    eax,0x8000
   140034d70:	cmp    BYTE PTR [rsp+0x38],0x0
   140034d75:	je     0x140034d83
   140034d77:	mov    rcx,QWORD PTR [rsp+0x30]
   140034d7c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140034d83:	add    rsp,0x40
   140034d87:	pop    rbx
   140034d88:	ret    
   140034d89:	int3   
   140034d8a:	int3   
   140034d8b:	int3   
   140034d8c:	rex push rbx
   140034d8e:	sub    rsp,0x40
   140034d92:	mov    ebx,ecx
   140034d94:	lea    rcx,[rsp+0x20]
   140034d99:	xor    edx,edx
   140034d9b:	call   0x14002b47c
   140034da0:	mov    rax,QWORD PTR [rsp+0x20]
   140034da5:	movzx  r11d,bl
   140034da9:	mov    rcx,QWORD PTR [rax+0x140]
   140034db0:	movzx  eax,WORD PTR [rcx+r11*2]
   140034db5:	and    eax,0x8000
   140034dba:	cmp    BYTE PTR [rsp+0x38],0x0
   140034dbf:	je     0x140034dcd
   140034dc1:	mov    rcx,QWORD PTR [rsp+0x30]
   140034dc6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140034dcd:	add    rsp,0x40
   140034dd1:	pop    rbx
   140034dd2:	ret    
   140034dd3:	int3   
   140034dd4:	mov    QWORD PTR [rsp+0x8],rbx
   140034dd9:	push   rdi
   140034dda:	sub    rsp,0x20
   140034dde:	movsxd rbx,ecx
   140034de1:	mov    edi,r8d
   140034de4:	mov    QWORD PTR [rsp+0x38],rdx
   140034de9:	mov    ecx,ebx
   140034deb:	call   0x14002dbcc
   140034df0:	cmp    rax,0xffffffffffffffff
   140034df4:	jne    0x140034e07
   140034df6:	call   0x14002b3f4
   140034dfb:	mov    DWORD PTR [rax],0x9
   140034e01:	or     rax,0xffffffffffffffff
   140034e05:	jmp    0x140034e5e
   140034e07:	mov    edx,DWORD PTR [rsp+0x38]
   140034e0b:	lea    r8,[rsp+0x3c]
   140034e10:	mov    r9d,edi
   140034e13:	mov    rcx,rax
   140034e16:	call   QWORD PTR [rip+0x8444]        # 0x14003d260
   140034e1c:	mov    DWORD PTR [rsp+0x38],eax
   140034e20:	cmp    eax,0xffffffff
   140034e23:	jne    0x140034e38
   140034e25:	call   QWORD PTR [rip+0x850d]        # 0x14003d338
   140034e2b:	test   eax,eax
   140034e2d:	je     0x140034e38
   140034e2f:	mov    ecx,eax
   140034e31:	call   0x14002b434
   140034e36:	jmp    0x140034e01
   140034e38:	mov    rcx,rbx
   140034e3b:	mov    rax,rbx
   140034e3e:	lea    rdx,[rip+0x35cbb]        # 0x14006ab00
   140034e45:	sar    rax,0x5
   140034e49:	and    ecx,0x1f
   140034e4c:	mov    rax,QWORD PTR [rdx+rax*8]
   140034e50:	imul   rcx,rcx,0x58
   140034e54:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140034e59:	mov    rax,QWORD PTR [rsp+0x38]
   140034e5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140034e63:	add    rsp,0x20
   140034e67:	pop    rdi
   140034e68:	ret    
   140034e69:	int3   
   140034e6a:	int3   
   140034e6b:	int3   
   140034e6c:	mov    QWORD PTR [rsp+0x10],rbx
   140034e71:	mov    QWORD PTR [rsp+0x18],rsi
   140034e76:	mov    DWORD PTR [rsp+0x8],ecx
   140034e7a:	push   rdi
   140034e7b:	push   r12
   140034e7d:	push   r13
   140034e7f:	push   r14
   140034e81:	push   r15
   140034e83:	sub    rsp,0x30
   140034e87:	mov    r12d,r8d
   140034e8a:	mov    r13,rdx
   140034e8d:	movsxd rbx,ecx
   140034e90:	cmp    ebx,0xfffffffe
   140034e93:	jne    0x140034eb2
   140034e95:	call   0x14002b414
   140034e9a:	xor    edi,edi
   140034e9c:	mov    DWORD PTR [rax],edi
   140034e9e:	call   0x14002b3f4
   140034ea3:	mov    DWORD PTR [rax],0x9
   140034ea9:	or     rax,0xffffffffffffffff
   140034ead:	jmp    0x140034f8b
   140034eb2:	xor    edi,edi
   140034eb4:	cmp    ebx,edi
   140034eb6:	jl     0x140034f61
   140034ebc:	cmp    ebx,DWORD PTR [rip+0x35c1e]        # 0x14006aae0
   140034ec2:	jae    0x140034f61
   140034ec8:	mov    rsi,rbx
   140034ecb:	mov    r14,rbx
   140034ece:	sar    r14,0x5
   140034ed2:	lea    r15,[rip+0x35c27]        # 0x14006ab00
   140034ed9:	and    esi,0x1f
   140034edc:	imul   rsi,rsi,0x58
   140034ee0:	mov    rax,QWORD PTR [r15+r14*8]
   140034ee4:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140034ee9:	and    ecx,0x1
   140034eec:	jne    0x140034f1a
   140034eee:	call   0x14002b414
   140034ef3:	mov    DWORD PTR [rax],edi
   140034ef5:	call   0x14002b3f4
   140034efa:	mov    DWORD PTR [rax],0x9
   140034f00:	mov    QWORD PTR [rsp+0x20],rdi
   140034f05:	xor    r9d,r9d
   140034f08:	xor    r8d,r8d
   140034f0b:	xor    edx,edx
   140034f0d:	xor    ecx,ecx
   140034f0f:	call   0x140031aac
   140034f14:	or     rax,0xffffffffffffffff
   140034f18:	jmp    0x140034f8b
   140034f1a:	mov    ecx,ebx
   140034f1c:	call   0x14002dc50
   140034f21:	nop
   140034f22:	mov    rax,QWORD PTR [r15+r14*8]
   140034f26:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140034f2b:	je     0x140034f3f
   140034f2d:	mov    r8d,r12d
   140034f30:	mov    rdx,r13
   140034f33:	mov    ecx,ebx
   140034f35:	call   0x140034dd4
   140034f3a:	mov    rdi,rax
   140034f3d:	jmp    0x140034f55
   140034f3f:	call   0x14002b3f4
   140034f44:	mov    DWORD PTR [rax],0x9
   140034f4a:	call   0x14002b414
   140034f4f:	mov    DWORD PTR [rax],edi
   140034f51:	or     rdi,0xffffffffffffffff
   140034f55:	mov    ecx,ebx
   140034f57:	call   0x14002dcf8
   140034f5c:	mov    rax,rdi
   140034f5f:	jmp    0x140034f8b
   140034f61:	call   0x14002b414
   140034f66:	mov    DWORD PTR [rax],edi
   140034f68:	call   0x14002b3f4
   140034f6d:	mov    DWORD PTR [rax],0x9
   140034f73:	mov    QWORD PTR [rsp+0x20],rdi
   140034f78:	xor    r9d,r9d
   140034f7b:	xor    r8d,r8d
   140034f7e:	xor    edx,edx
   140034f80:	xor    ecx,ecx
   140034f82:	call   0x140031aac
   140034f87:	or     rax,0xffffffffffffffff
   140034f8b:	mov    rbx,QWORD PTR [rsp+0x68]
   140034f90:	mov    rsi,QWORD PTR [rsp+0x70]
   140034f95:	add    rsp,0x30
   140034f99:	pop    r15
   140034f9b:	pop    r14
   140034f9d:	pop    r13
   140034f9f:	pop    r12
   140034fa1:	pop    rdi
   140034fa2:	ret    
   140034fa3:	int3   
   140034fa4:	mov    rax,rsp
   140034fa7:	mov    QWORD PTR [rax+0x8],rbx
   140034fab:	mov    QWORD PTR [rax+0x10],rbp
   140034faf:	mov    QWORD PTR [rax+0x18],rsi
   140034fb3:	mov    QWORD PTR [rax+0x20],rdi
   140034fb7:	push   r12
   140034fb9:	push   r13
   140034fbb:	push   r15
   140034fbd:	sub    rsp,0x20
   140034fc1:	mov    rbp,rdx
   140034fc4:	xor    edi,edi
   140034fc6:	xor    edx,edx
   140034fc8:	lea    r8d,[rdi+0x1]
   140034fcc:	mov    esi,ecx
   140034fce:	call   0x140034dd4
   140034fd3:	mov    r13,rax
   140034fd6:	cmp    rax,0xffffffffffffffff
   140034fda:	je     0x14003502c
   140034fdc:	lea    r8d,[rdi+0x2]
   140034fe0:	xor    edx,edx
   140034fe2:	mov    ecx,esi
   140034fe4:	call   0x140034dd4
   140034fe9:	cmp    rax,0xffffffffffffffff
   140034fed:	je     0x14003502c
   140034fef:	mov    rbx,rbp
   140034ff2:	sub    rbx,rax
   140034ff5:	cmp    rbx,rdi
   140034ff8:	jle    0x1400350bf
   140034ffe:	call   QWORD PTR [rip+0x826c]        # 0x14003d270
   140035004:	mov    r15d,0x1000
   14003500a:	lea    edx,[rdi+0x8]
   14003500d:	mov    rcx,rax
   140035010:	mov    r8,r15
   140035013:	call   QWORD PTR [rip+0x8107]        # 0x14003d120
   140035019:	mov    rbp,rax
   14003501c:	cmp    rax,rdi
   14003501f:	jne    0x140035052
   140035021:	call   0x14002b3f4
   140035026:	mov    DWORD PTR [rax],0xc
   14003502c:	call   0x14002b3f4
   140035031:	mov    eax,DWORD PTR [rax]
   140035033:	mov    rbx,QWORD PTR [rsp+0x40]
   140035038:	mov    rbp,QWORD PTR [rsp+0x48]
   14003503d:	mov    rsi,QWORD PTR [rsp+0x50]
   140035042:	mov    rdi,QWORD PTR [rsp+0x58]
   140035047:	add    rsp,0x20
   14003504b:	pop    r15
   14003504d:	pop    r13
   14003504f:	pop    r12
   140035051:	ret    
   140035052:	mov    edx,0x8000
   140035057:	mov    ecx,esi
   140035059:	call   0x140035b28
   14003505e:	mov    r12d,eax
   140035061:	mov    r8d,ebx
   140035064:	cmp    rbx,r15
   140035067:	mov    rdx,rbp
   14003506a:	cmovge r8d,r15d
   14003506e:	mov    ecx,esi
   140035070:	call   0x14002f038
   140035075:	cmp    eax,0xffffffff
   140035078:	je     0x140035086
   14003507a:	cdqe   
   14003507c:	sub    rbx,rax
   14003507f:	cmp    rbx,rdi
   140035082:	jle    0x14003509f
   140035084:	jmp    0x140035061
   140035086:	call   0x14002b414
   14003508b:	cmp    DWORD PTR [rax],0x5
   14003508e:	jne    0x14003509b
   140035090:	call   0x14002b3f4
   140035095:	mov    DWORD PTR [rax],0xd
   14003509b:	or     rdi,0xffffffffffffffff
   14003509f:	mov    edx,r12d
   1400350a2:	mov    ecx,esi
   1400350a4:	call   0x140035b28
   1400350a9:	call   QWORD PTR [rip+0x81c1]        # 0x14003d270
   1400350af:	mov    r8,rbp
   1400350b2:	mov    rcx,rax
   1400350b5:	xor    edx,edx
   1400350b7:	call   QWORD PTR [rip+0x804b]        # 0x14003d108
   1400350bd:	jmp    0x140035114
   1400350bf:	jge    0x14003511e
   1400350c1:	xor    r8d,r8d
   1400350c4:	mov    rdx,rbp
   1400350c7:	mov    ecx,esi
   1400350c9:	call   0x140034dd4
   1400350ce:	cmp    rax,0xffffffffffffffff
   1400350d2:	je     0x14003502c
   1400350d8:	mov    ecx,esi
   1400350da:	call   0x14002dbcc
   1400350df:	mov    rcx,rax
   1400350e2:	call   QWORD PTR [rip+0x8180]        # 0x14003d268
   1400350e8:	neg    eax
   1400350ea:	sbb    rdi,rdi
   1400350ed:	neg    rdi
   1400350f0:	dec    rdi
   1400350f3:	cmp    rdi,0xffffffffffffffff
   1400350f7:	jne    0x14003511e
   1400350f9:	call   0x14002b3f4
   1400350fe:	mov    DWORD PTR [rax],0xd
   140035104:	call   0x14002b414
   140035109:	mov    rbx,rax
   14003510c:	call   QWORD PTR [rip+0x8226]        # 0x14003d338
   140035112:	mov    DWORD PTR [rbx],eax
   140035114:	cmp    rdi,0xffffffffffffffff
   140035118:	je     0x14003502c
   14003511e:	xor    r8d,r8d
   140035121:	mov    rdx,r13
   140035124:	mov    ecx,esi
   140035126:	call   0x140034dd4
   14003512b:	cmp    rax,0xffffffffffffffff
   14003512f:	je     0x14003502c
   140035135:	xor    eax,eax
   140035137:	jmp    0x140035033
   14003513c:	mov    QWORD PTR [rsp+0x10],rdx
   140035141:	mov    DWORD PTR [rsp+0x8],ecx
   140035145:	push   rbx
   140035146:	push   rbp
   140035147:	push   rsi
   140035148:	push   rdi
   140035149:	push   r12
   14003514b:	push   r13
   14003514d:	push   r14
   14003514f:	push   r15
   140035151:	sub    rsp,0x58
   140035155:	mov    r12d,0xfffffffe
   14003515b:	movsxd rax,ecx
   14003515e:	mov    ebx,r8d
   140035161:	mov    DWORD PTR [rsp+0x34],r12d
   140035166:	mov    DWORD PTR [rsp+0x38],ebx
   14003516a:	cmp    eax,r12d
   14003516d:	jne    0x140035188
   14003516f:	call   0x14002b414
   140035174:	xor    edi,edi
   140035176:	mov    DWORD PTR [rax],edi
   140035178:	call   0x14002b3f4
   14003517d:	mov    DWORD PTR [rax],0x9
   140035183:	jmp    0x1400358a7
   140035188:	xor    edi,edi
   14003518a:	cmp    eax,edi
   14003518c:	jl     0x140035881
   140035192:	cmp    eax,DWORD PTR [rip+0x35948]        # 0x14006aae0
   140035198:	jae    0x140035881
   14003519e:	mov    rsi,rax
   1400351a1:	mov    r14,rax
   1400351a4:	lea    r9,[rip+0xfffffffffffcae55]        # 0x140000000
   1400351ab:	sar    r14,0x5
   1400351af:	and    esi,0x1f
   1400351b2:	mov    rcx,QWORD PTR [r9+r14*8+0x6ab00]
   1400351ba:	imul   rsi,rsi,0x58
   1400351be:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   1400351c2:	test   al,0x1
   1400351c4:	je     0x140035881
   1400351ca:	cmp    ebx,0x7fffffff
   1400351d0:	jbe    0x1400351e9
   1400351d2:	call   0x14002b414
   1400351d7:	mov    DWORD PTR [rax],edi
   1400351d9:	call   0x14002b3f4
   1400351de:	mov    DWORD PTR [rax],0x16
   1400351e4:	jmp    0x140035893
   1400351e9:	mov    ebp,edi
   1400351eb:	cmp    ebx,edi
   1400351ed:	je     0x14003587d
   1400351f3:	test   al,0x2
   1400351f5:	jne    0x14003587d
   1400351fb:	cmp    rdx,rdi
   1400351fe:	je     0x1400351d2
   140035200:	mov    r15b,BYTE PTR [rcx+rsi*1+0x38]
   140035205:	mov    r8d,0x4
   14003520b:	add    r15b,r15b
   14003520e:	sar    r15b,1
   140035211:	movsx  ecx,r15b
   140035215:	sub    ecx,0x1
   140035218:	je     0x14003522f
   14003521a:	sub    ecx,0x1
   14003521d:	jne    0x14003522a
   14003521f:	mov    eax,ebx
   140035221:	not    eax
   140035223:	test   al,0x1
   140035225:	je     0x1400351d2
   140035227:	and    ebx,0xfffffffe
   14003522a:	mov    r13,rdx
   14003522d:	jmp    0x140035293
   14003522f:	mov    eax,ebx
   140035231:	not    eax
   140035233:	test   al,0x1
   140035235:	je     0x1400351d2
   140035237:	shr    ebx,1
   140035239:	cmp    ebx,r8d
   14003523c:	cmovb  ebx,r8d
   140035240:	mov    ecx,ebx
   140035242:	call   0x1400300c8
   140035247:	mov    r13,rax
   14003524a:	cmp    rax,rdi
   14003524d:	jne    0x14003526a
   14003524f:	call   0x14002b3f4
   140035254:	mov    DWORD PTR [rax],0xc
   14003525a:	call   0x14002b414
   14003525f:	mov    DWORD PTR [rax],0x8
   140035265:	jmp    0x1400358a7
   14003526a:	mov    ecx,DWORD PTR [rsp+0xa0]
   140035271:	xor    edx,edx
   140035273:	lea    r8d,[rdx+0x1]
   140035277:	call   0x140034dd4
   14003527c:	lea    r9,[rip+0xfffffffffffcad7d]        # 0x140000000
   140035283:	mov    r11,rax
   140035286:	mov    rax,QWORD PTR [r9+r14*8+0x6ab00]
   14003528e:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   140035293:	mov    rax,QWORD PTR [r9+r14*8+0x6ab00]
   14003529b:	mov    rdx,r13
   14003529e:	mov    r8d,0xa
   1400352a4:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400352a9:	je     0x14003534b
   1400352af:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   1400352b3:	cmp    cl,r8b
   1400352b6:	je     0x14003534b
   1400352bc:	cmp    ebx,edi
   1400352be:	je     0x14003534b
   1400352c4:	mov    BYTE PTR [r13+0x0],cl
   1400352c8:	mov    rax,QWORD PTR [r9+r14*8+0x6ab00]
   1400352d0:	or     r10d,0xffffffff
   1400352d4:	add    ebx,r10d
   1400352d7:	lea    rdx,[r13+0x1]
   1400352db:	lea    ebp,[r8-0x9]
   1400352df:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   1400352e4:	cmp    r15b,dil
   1400352e7:	je     0x14003534b
   1400352e9:	mov    rax,QWORD PTR [r9+r14*8+0x6ab00]
   1400352f1:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   1400352f5:	cmp    cl,r8b
   1400352f8:	je     0x14003534b
   1400352fa:	cmp    ebx,edi
   1400352fc:	je     0x14003534b
   1400352fe:	mov    BYTE PTR [rdx],cl
   140035300:	mov    rax,QWORD PTR [r9+r14*8+0x6ab00]
   140035308:	add    ebx,r10d
   14003530b:	inc    rdx
   14003530e:	lea    ebp,[r8-0x8]
   140035312:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   140035317:	cmp    r15b,0x1
   14003531b:	jne    0x14003534b
   14003531d:	mov    rax,QWORD PTR [r9+r14*8+0x6ab00]
   140035325:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   140035329:	cmp    cl,r8b
   14003532c:	je     0x14003534b
   14003532e:	cmp    ebx,edi
   140035330:	je     0x14003534b
   140035332:	mov    BYTE PTR [rdx],cl
   140035334:	mov    rax,QWORD PTR [r9+r14*8+0x6ab00]
   14003533c:	inc    rdx
   14003533f:	lea    ebp,[r8-0x7]
   140035343:	add    ebx,r10d
   140035346:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14003534b:	mov    rcx,QWORD PTR [r9+r14*8+0x6ab00]
   140035353:	lea    r9,[rsp+0x30]
   140035358:	mov    r8d,ebx
   14003535b:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14003535f:	mov    QWORD PTR [rsp+0x20],rdi
   140035364:	call   QWORD PTR [rip+0x7f0e]        # 0x14003d278
   14003536a:	cmp    eax,edi
   14003536c:	je     0x140035841
   140035372:	movsxd rdx,DWORD PTR [rsp+0x30]
   140035377:	cmp    edx,edi
   140035379:	jl     0x140035841
   14003537f:	mov    eax,ebx
   140035381:	cmp    rdx,rax
   140035384:	ja     0x140035841
   14003538a:	lea    r8,[rip+0xfffffffffffcac6f]        # 0x140000000
   140035391:	add    ebp,edx
   140035393:	mov    rax,QWORD PTR [r8+r14*8+0x6ab00]
   14003539b:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   1400353a0:	je     0x14003581f
   1400353a6:	cmp    r15b,0x2
   1400353aa:	je     0x140035668
   1400353b0:	cmp    edx,edi
   1400353b2:	je     0x1400353c2
   1400353b4:	cmp    BYTE PTR [r13+0x0],0xa
   1400353b9:	jne    0x1400353c2
   1400353bb:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   1400353c0:	jmp    0x1400353c7
   1400353c2:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400353c7:	movsxd rax,ebp
   1400353ca:	mov    rbx,r13
   1400353cd:	mov    r12,r13
   1400353d0:	add    rax,r13
   1400353d3:	mov    QWORD PTR [rsp+0x40],rax
   1400353d8:	cmp    r13,rax
   1400353db:	jae    0x14003551b
   1400353e1:	mov    ebp,0xd
   1400353e6:	mov    al,BYTE PTR [r12]
   1400353ea:	cmp    al,0x1a
   1400353ec:	je     0x1400354fc
   1400353f2:	cmp    al,bpl
   1400353f5:	je     0x140035404
   1400353f7:	mov    BYTE PTR [rbx],al
   1400353f9:	inc    rbx
   1400353fc:	inc    r12
   1400353ff:	jmp    0x1400354ef
   140035404:	mov    rax,QWORD PTR [rsp+0x40]
   140035409:	dec    rax
   14003540c:	cmp    r12,rax
   14003540f:	jae    0x14003542c
   140035411:	lea    rax,[r12+0x1]
   140035416:	cmp    BYTE PTR [rax],0xa
   140035419:	jne    0x140035424
   14003541b:	add    r12,0x2
   14003541f:	jmp    0x1400354b4
   140035424:	mov    r12,rax
   140035427:	jmp    0x1400354e9
   14003542c:	mov    rcx,QWORD PTR [r8+r14*8+0x6ab00]
   140035434:	lea    r9,[rsp+0x30]
   140035439:	lea    rdx,[rsp+0xb0]
   140035441:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140035445:	mov    r8d,0x1
   14003544b:	inc    r12
   14003544e:	mov    QWORD PTR [rsp+0x20],rdi
   140035453:	call   QWORD PTR [rip+0x7e1f]        # 0x14003d278
   140035459:	cmp    eax,edi
   14003545b:	jne    0x140035467
   14003545d:	call   QWORD PTR [rip+0x7ed5]        # 0x14003d338
   140035463:	cmp    eax,edi
   140035465:	jne    0x1400354e2
   140035467:	cmp    DWORD PTR [rsp+0x30],edi
   14003546b:	je     0x1400354e2
   14003546d:	lea    r8,[rip+0xfffffffffffcab8c]        # 0x140000000
   140035474:	mov    rax,QWORD PTR [r8+r14*8+0x6ab00]
   14003547c:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140035481:	je     0x1400354a5
   140035483:	cmp    BYTE PTR [rsp+0xb0],0xa
   14003548b:	je     0x1400354b4
   14003548d:	mov    BYTE PTR [rbx],bpl
   140035490:	mov    rcx,QWORD PTR [r8+r14*8+0x6ab00]
   140035498:	mov    al,BYTE PTR [rsp+0xb0]
   14003549f:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   1400354a3:	jmp    0x1400354ec
   1400354a5:	cmp    rbx,r13
   1400354a8:	jne    0x1400354b9
   1400354aa:	cmp    BYTE PTR [rsp+0xb0],0xa
   1400354b2:	jne    0x1400354b9
   1400354b4:	mov    BYTE PTR [rbx],0xa
   1400354b7:	jmp    0x1400354ec
   1400354b9:	mov    ecx,DWORD PTR [rsp+0xa0]
   1400354c0:	mov    r8d,0x1
   1400354c6:	or     rdx,0xffffffffffffffff
   1400354ca:	call   0x140034dd4
   1400354cf:	cmp    BYTE PTR [rsp+0xb0],0xa
   1400354d7:	lea    r8,[rip+0xfffffffffffcab22]        # 0x140000000
   1400354de:	je     0x1400354ef
   1400354e0:	jmp    0x1400354e9
   1400354e2:	lea    r8,[rip+0xfffffffffffcab17]        # 0x140000000
   1400354e9:	mov    BYTE PTR [rbx],bpl
   1400354ec:	inc    rbx
   1400354ef:	cmp    r12,QWORD PTR [rsp+0x40]
   1400354f4:	jb     0x1400353e6
   1400354fa:	jmp    0x14003551b
   1400354fc:	mov    rax,QWORD PTR [r8+r14*8+0x6ab00]
   140035504:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140035509:	jne    0x140035512
   14003550b:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   140035510:	jmp    0x14003551b
   140035512:	mov    al,BYTE PTR [r12]
   140035516:	mov    BYTE PTR [rbx],al
   140035518:	inc    rbx
   14003551b:	mov    ebp,ebx
   14003551d:	sub    ebp,r13d
   140035520:	cmp    r15b,0x1
   140035524:	jne    0x14003581a
   14003552a:	cmp    ebp,edi
   14003552c:	je     0x14003581a
   140035532:	mov    r15d,0x1
   140035538:	sub    rbx,r15
   14003553b:	test   BYTE PTR [rbx],0x80
   14003553e:	jne    0x140035548
   140035540:	add    rbx,r15
   140035543:	jmp    0x1400355fa
   140035548:	mov    edx,r15d
   14003554b:	jmp    0x14003555d
   14003554d:	cmp    edx,0x4
   140035550:	jg     0x14003556a
   140035552:	cmp    rbx,r13
   140035555:	jb     0x14003556a
   140035557:	sub    rbx,r15
   14003555a:	add    edx,r15d
   14003555d:	movzx  eax,BYTE PTR [rbx]
   140035560:	cmp    BYTE PTR [rax+r8*1+0x676f0],dil
   140035568:	je     0x14003554d
   14003556a:	movzx  ecx,BYTE PTR [rbx]
   14003556d:	movsx  eax,BYTE PTR [rcx+r8*1+0x676f0]
   140035576:	cmp    eax,edi
   140035578:	jne    0x14003558e
   14003557a:	call   0x14002b3f4
   14003557f:	mov    DWORD PTR [rax],0x2a
   140035585:	or     r12d,0xffffffff
   140035589:	jmp    0x14003581f
   14003558e:	inc    eax
   140035590:	cmp    eax,edx
   140035592:	jne    0x14003559c
   140035594:	movsxd rax,edx
   140035597:	add    rbx,rax
   14003559a:	jmp    0x1400355fa
   14003559c:	mov    rax,QWORD PTR [r8+r14*8+0x6ab00]
   1400355a4:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400355a9:	je     0x1400355e6
   1400355ab:	add    rbx,r15
   1400355ae:	cmp    edx,0x2
   1400355b1:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   1400355b5:	jl     0x1400355c8
   1400355b7:	mov    al,BYTE PTR [rbx]
   1400355b9:	mov    rcx,QWORD PTR [r8+r14*8+0x6ab00]
   1400355c1:	add    rbx,r15
   1400355c4:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   1400355c8:	cmp    edx,0x3
   1400355cb:	jne    0x1400355de
   1400355cd:	mov    al,BYTE PTR [rbx]
   1400355cf:	mov    rcx,QWORD PTR [r8+r14*8+0x6ab00]
   1400355d7:	add    rbx,r15
   1400355da:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   1400355de:	movsxd rax,edx
   1400355e1:	sub    rbx,rax
   1400355e4:	jmp    0x1400355fa
   1400355e6:	mov    ecx,DWORD PTR [rsp+0xa0]
   1400355ed:	neg    edx
   1400355ef:	mov    r8d,r15d
   1400355f2:	movsxd rdx,edx
   1400355f5:	call   0x140034dd4
   1400355fa:	mov    eax,DWORD PTR [rsp+0x38]
   1400355fe:	mov    r15,QWORD PTR [rsp+0xa8]
   140035606:	sub    ebx,r13d
   140035609:	shr    eax,1
   14003560b:	mov    r9d,ebx
   14003560e:	mov    r8,r13
   140035611:	mov    DWORD PTR [rsp+0x28],eax
   140035615:	xor    edx,edx
   140035617:	mov    ecx,0xfde9
   14003561c:	mov    QWORD PTR [rsp+0x20],r15
   140035621:	call   QWORD PTR [rip+0x7a89]        # 0x14003d0b0
   140035627:	mov    ebp,eax
   140035629:	cmp    eax,edi
   14003562b:	jne    0x140035643
   14003562d:	call   QWORD PTR [rip+0x7d05]        # 0x14003d338
   140035633:	mov    ecx,eax
   140035635:	call   0x14002b434
   14003563a:	or     r12d,0xffffffff
   14003563e:	jmp    0x140035827
   140035643:	mov    r12d,DWORD PTR [rsp+0x34]
   140035648:	cmp    eax,ebx
   14003564a:	lea    rax,[rip+0xfffffffffffca9af]        # 0x140000000
   140035651:	mov    rax,QWORD PTR [rax+r14*8+0x6ab00]
   140035659:	setne  dil
   14003565d:	add    ebp,ebp
   14003565f:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   140035663:	jmp    0x140035827
   140035668:	cmp    edx,edi
   14003566a:	mov    edx,0xa
   14003566f:	je     0x14003567f
   140035671:	cmp    WORD PTR [r13+0x0],dx
   140035676:	jne    0x14003567f
   140035678:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14003567d:	jmp    0x140035684
   14003567f:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140035684:	movsxd rax,ebp
   140035687:	mov    rbx,r13
   14003568a:	mov    r12,r13
   14003568d:	lea    r15,[rax+r13*1]
   140035691:	cmp    r13,r15
   140035694:	jae    0x140035815
   14003569a:	mov    ebp,0xd
   14003569f:	movzx  eax,WORD PTR [r12]
   1400356a4:	cmp    ax,0x1a
   1400356a8:	je     0x1400357f3
   1400356ae:	cmp    ax,bp
   1400356b1:	je     0x1400356c3
   1400356b3:	mov    WORD PTR [rbx],ax
   1400356b6:	add    rbx,0x2
   1400356ba:	add    r12,0x2
   1400356be:	jmp    0x1400357e8
   1400356c3:	lea    rax,[r15-0x2]
   1400356c7:	cmp    r12,rax
   1400356ca:	jae    0x1400356e7
   1400356cc:	lea    rax,[r12+0x2]
   1400356d1:	cmp    WORD PTR [rax],dx
   1400356d4:	jne    0x1400356df
   1400356d6:	add    r12,0x4
   1400356da:	jmp    0x1400357a1
   1400356df:	mov    r12,rax
   1400356e2:	jmp    0x1400357e1
   1400356e7:	mov    rcx,QWORD PTR [r8+r14*8+0x6ab00]
   1400356ef:	lea    r9,[rsp+0x30]
   1400356f4:	lea    rdx,[rsp+0xb8]
   1400356fc:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140035700:	mov    r8d,0x2
   140035706:	add    r12,0x2
   14003570a:	mov    QWORD PTR [rsp+0x20],rdi
   14003570f:	call   QWORD PTR [rip+0x7b63]        # 0x14003d278
   140035715:	cmp    eax,edi
   140035717:	jne    0x140035727
   140035719:	call   QWORD PTR [rip+0x7c19]        # 0x14003d338
   14003571f:	cmp    eax,edi
   140035721:	jne    0x1400357d5
   140035727:	cmp    DWORD PTR [rsp+0x30],edi
   14003572b:	je     0x1400357d5
   140035731:	lea    r8,[rip+0xfffffffffffca8c8]        # 0x140000000
   140035738:	mov    rax,QWORD PTR [r8+r14*8+0x6ab00]
   140035740:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140035745:	je     0x14003578d
   140035747:	mov    edx,0xa
   14003574c:	cmp    WORD PTR [rsp+0xb8],dx
   140035754:	je     0x1400357a1
   140035756:	mov    WORD PTR [rbx],bp
   140035759:	mov    al,BYTE PTR [rsp+0xb8]
   140035760:	mov    rcx,QWORD PTR [r8+r14*8+0x6ab00]
   140035768:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14003576c:	mov    al,BYTE PTR [rsp+0xb9]
   140035773:	mov    rcx,QWORD PTR [r8+r14*8+0x6ab00]
   14003577b:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14003577f:	mov    rax,QWORD PTR [r8+r14*8+0x6ab00]
   140035787:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   14003578b:	jmp    0x1400357e4
   14003578d:	cmp    rbx,r13
   140035790:	jne    0x1400357a6
   140035792:	mov    edx,0xa
   140035797:	cmp    WORD PTR [rsp+0xb8],dx
   14003579f:	jne    0x1400357a6
   1400357a1:	mov    WORD PTR [rbx],dx
   1400357a4:	jmp    0x1400357e4
   1400357a6:	mov    ecx,DWORD PTR [rsp+0xa0]
   1400357ad:	mov    rdx,0xfffffffffffffffe
   1400357b4:	lea    r8d,[rdx+0x3]
   1400357b8:	call   0x140034dd4
   1400357bd:	mov    edx,0xa
   1400357c2:	lea    r8,[rip+0xfffffffffffca837]        # 0x140000000
   1400357c9:	cmp    WORD PTR [rsp+0xb8],dx
   1400357d1:	je     0x1400357e8
   1400357d3:	jmp    0x1400357e1
   1400357d5:	mov    edx,0xa
   1400357da:	lea    r8,[rip+0xfffffffffffca81f]        # 0x140000000
   1400357e1:	mov    WORD PTR [rbx],bp
   1400357e4:	add    rbx,0x2
   1400357e8:	cmp    r12,r15
   1400357eb:	jb     0x14003569f
   1400357f1:	jmp    0x140035815
   1400357f3:	mov    rax,QWORD PTR [r8+r14*8+0x6ab00]
   1400357fb:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140035800:	jne    0x140035809
   140035802:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   140035807:	jmp    0x140035815
   140035809:	movzx  eax,WORD PTR [r12]
   14003580e:	mov    WORD PTR [rbx],ax
   140035811:	add    rbx,0x2
   140035815:	mov    ebp,ebx
   140035817:	sub    ebp,r13d
   14003581a:	mov    r12d,DWORD PTR [rsp+0x34]
   14003581f:	mov    r15,QWORD PTR [rsp+0xa8]
   140035827:	cmp    r13,r15
   14003582a:	je     0x140035834
   14003582c:	mov    rcx,r13
   14003582f:	call   0x14002b36c
   140035834:	cmp    r12d,0xfffffffe
   140035838:	cmove  r12d,ebp
   14003583c:	mov    eax,r12d
   14003583f:	jmp    0x1400358aa
   140035841:	call   QWORD PTR [rip+0x7af1]        # 0x14003d338
   140035847:	cmp    eax,0x5
   14003584a:	jne    0x140035867
   14003584c:	call   0x14002b3f4
   140035851:	mov    DWORD PTR [rax],0x9
   140035857:	call   0x14002b414
   14003585c:	mov    DWORD PTR [rax],0x5
   140035862:	jmp    0x140035585
   140035867:	cmp    eax,0x6d
   14003586a:	jne    0x140035871
   14003586c:	mov    r12d,edi
   14003586f:	jmp    0x14003581f
   140035871:	mov    ecx,eax
   140035873:	call   0x14002b434
   140035878:	jmp    0x140035585
   14003587d:	xor    eax,eax
   14003587f:	jmp    0x1400358aa
   140035881:	call   0x14002b414
   140035886:	mov    DWORD PTR [rax],edi
   140035888:	call   0x14002b3f4
   14003588d:	mov    DWORD PTR [rax],0x9
   140035893:	xor    r9d,r9d
   140035896:	xor    r8d,r8d
   140035899:	xor    edx,edx
   14003589b:	xor    ecx,ecx
   14003589d:	mov    QWORD PTR [rsp+0x20],rdi
   1400358a2:	call   0x140031aac
   1400358a7:	or     eax,0xffffffff
   1400358aa:	add    rsp,0x58
   1400358ae:	pop    r15
   1400358b0:	pop    r14
   1400358b2:	pop    r13
   1400358b4:	pop    r12
   1400358b6:	pop    rdi
   1400358b7:	pop    rsi
   1400358b8:	pop    rbp
   1400358b9:	pop    rbx
   1400358ba:	ret    
   1400358bb:	int3   
   1400358bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400358c1:	push   rdi
   1400358c2:	sub    rsp,0x20
   1400358c6:	movsxd rdi,ecx
   1400358c9:	mov    ecx,edi
   1400358cb:	call   0x14002dbcc
   1400358d0:	cmp    rax,0xffffffffffffffff
   1400358d4:	je     0x14003592f
   1400358d6:	mov    rax,QWORD PTR [rip+0x35223]        # 0x14006ab00
   1400358dd:	mov    ecx,0x2
   1400358e2:	cmp    edi,0x1
   1400358e5:	jne    0x1400358f0
   1400358e7:	test   BYTE PTR [rax+0xb8],dil
   1400358ee:	jne    0x1400358fa
   1400358f0:	cmp    edi,ecx
   1400358f2:	jne    0x140035911
   1400358f4:	test   BYTE PTR [rax+0x60],0x1
   1400358f8:	je     0x140035911
   1400358fa:	call   0x14002dbcc
   1400358ff:	mov    ecx,0x1
   140035904:	mov    rbx,rax
   140035907:	call   0x14002dbcc
   14003590c:	cmp    rax,rbx
   14003590f:	je     0x14003592f
   140035911:	mov    ecx,edi
   140035913:	call   0x14002dbcc
   140035918:	mov    rcx,rax
   14003591b:	call   QWORD PTR [rip+0x7757]        # 0x14003d078
   140035921:	test   eax,eax
   140035923:	jne    0x14003592f
   140035925:	call   QWORD PTR [rip+0x7a0d]        # 0x14003d338
   14003592b:	mov    ebx,eax
   14003592d:	jmp    0x140035931
   14003592f:	xor    ebx,ebx
   140035931:	mov    ecx,edi
   140035933:	call   0x14002db20
   140035938:	mov    r11,rdi
   14003593b:	mov    rcx,rdi
   14003593e:	sar    rcx,0x5
   140035942:	and    r11d,0x1f
   140035946:	lea    rdx,[rip+0x351b3]        # 0x14006ab00
   14003594d:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140035951:	imul   r11,r11,0x58
   140035955:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   14003595b:	test   ebx,ebx
   14003595d:	je     0x14003596b
   14003595f:	mov    ecx,ebx
   140035961:	call   0x14002b434
   140035966:	or     eax,0xffffffff
   140035969:	jmp    0x14003596d
   14003596b:	xor    eax,eax
   14003596d:	mov    rbx,QWORD PTR [rsp+0x30]
   140035972:	add    rsp,0x20
   140035976:	pop    rdi
   140035977:	ret    
   140035978:	mov    QWORD PTR [rsp+0x18],rbx
   14003597d:	mov    QWORD PTR [rsp+0x20],rsi
   140035982:	mov    DWORD PTR [rsp+0x8],ecx
   140035986:	push   rdi
   140035987:	push   r12
   140035989:	push   r13
   14003598b:	sub    rsp,0x30
   14003598f:	movsxd rbx,ecx
   140035992:	cmp    ebx,0xfffffffe
   140035995:	jne    0x1400359b3
   140035997:	call   0x14002b414
   14003599c:	xor    edi,edi
   14003599e:	mov    DWORD PTR [rax],edi
   1400359a0:	call   0x14002b3f4
   1400359a5:	mov    DWORD PTR [rax],0x9
   1400359ab:	or     eax,0xffffffff
   1400359ae:	jmp    0x140035a7c
   1400359b3:	xor    edi,edi
   1400359b5:	cmp    ebx,edi
   1400359b7:	jl     0x140035a53
   1400359bd:	cmp    ebx,DWORD PTR [rip+0x3511d]        # 0x14006aae0
   1400359c3:	jae    0x140035a53
   1400359c9:	mov    rsi,rbx
   1400359cc:	mov    r12,rbx
   1400359cf:	sar    r12,0x5
   1400359d3:	lea    r13,[rip+0x35126]        # 0x14006ab00
   1400359da:	and    esi,0x1f
   1400359dd:	imul   rsi,rsi,0x58
   1400359e1:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   1400359e6:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400359eb:	and    ecx,0x1
   1400359ee:	jne    0x140035a1b
   1400359f0:	call   0x14002b414
   1400359f5:	mov    DWORD PTR [rax],edi
   1400359f7:	call   0x14002b3f4
   1400359fc:	mov    DWORD PTR [rax],0x9
   140035a02:	mov    QWORD PTR [rsp+0x20],rdi
   140035a07:	xor    r9d,r9d
   140035a0a:	xor    r8d,r8d
   140035a0d:	xor    edx,edx
   140035a0f:	xor    ecx,ecx
   140035a11:	call   0x140031aac
   140035a16:	or     eax,0xffffffff
   140035a19:	jmp    0x140035a7c
   140035a1b:	mov    ecx,ebx
   140035a1d:	call   0x14002dc50
   140035a22:	nop
   140035a23:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   140035a28:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140035a2d:	je     0x140035a3a
   140035a2f:	mov    ecx,ebx
   140035a31:	call   0x1400358bc
   140035a36:	mov    edi,eax
   140035a38:	jmp    0x140035a48
   140035a3a:	call   0x14002b3f4
   140035a3f:	mov    DWORD PTR [rax],0x9
   140035a45:	or     edi,0xffffffff
   140035a48:	mov    ecx,ebx
   140035a4a:	call   0x14002dcf8
   140035a4f:	mov    eax,edi
   140035a51:	jmp    0x140035a7c
   140035a53:	call   0x14002b414
   140035a58:	mov    DWORD PTR [rax],edi
   140035a5a:	call   0x14002b3f4
   140035a5f:	mov    DWORD PTR [rax],0x9
   140035a65:	mov    QWORD PTR [rsp+0x20],rdi
   140035a6a:	xor    r9d,r9d
   140035a6d:	xor    r8d,r8d
   140035a70:	xor    edx,edx
   140035a72:	xor    ecx,ecx
   140035a74:	call   0x140031aac
   140035a79:	or     eax,0xffffffff
   140035a7c:	mov    rbx,QWORD PTR [rsp+0x60]
   140035a81:	mov    rsi,QWORD PTR [rsp+0x68]
   140035a86:	add    rsp,0x30
   140035a8a:	pop    r13
   140035a8c:	pop    r12
   140035a8e:	pop    rdi
   140035a8f:	ret    
   140035a90:	mov    QWORD PTR [rsp+0x8],rbx
   140035a95:	mov    QWORD PTR [rsp+0x10],rsi
   140035a9a:	push   rdi
   140035a9b:	sub    rsp,0x20
   140035a9f:	movsxd rbx,ecx
   140035aa2:	mov    edi,r8d
   140035aa5:	mov    esi,edx
   140035aa7:	mov    ecx,ebx
   140035aa9:	call   0x14002dbcc
   140035aae:	cmp    rax,0xffffffffffffffff
   140035ab2:	jne    0x140035ac4
   140035ab4:	call   0x14002b3f4
   140035ab9:	mov    DWORD PTR [rax],0x9
   140035abf:	or     eax,0xffffffff
   140035ac2:	jmp    0x140035b16
   140035ac4:	mov    r9d,edi
   140035ac7:	xor    r8d,r8d
   140035aca:	mov    edx,esi
   140035acc:	mov    rcx,rax
   140035acf:	call   QWORD PTR [rip+0x778b]        # 0x14003d260
   140035ad5:	mov    edi,eax
   140035ad7:	cmp    eax,0xffffffff
   140035ada:	jne    0x140035ae4
   140035adc:	call   QWORD PTR [rip+0x7856]        # 0x14003d338
   140035ae2:	jmp    0x140035ae6
   140035ae4:	xor    eax,eax
   140035ae6:	test   eax,eax
   140035ae8:	je     0x140035af3
   140035aea:	mov    ecx,eax
   140035aec:	call   0x14002b434
   140035af1:	jmp    0x140035abf
   140035af3:	mov    rcx,rbx
   140035af6:	mov    rax,rbx
   140035af9:	lea    rdx,[rip+0x35000]        # 0x14006ab00
   140035b00:	sar    rax,0x5
   140035b04:	and    ecx,0x1f
   140035b07:	mov    rax,QWORD PTR [rdx+rax*8]
   140035b0b:	imul   rcx,rcx,0x58
   140035b0f:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140035b14:	mov    eax,edi
   140035b16:	mov    rbx,QWORD PTR [rsp+0x30]
   140035b1b:	mov    rsi,QWORD PTR [rsp+0x38]
   140035b20:	add    rsp,0x20
   140035b24:	pop    rdi
   140035b25:	ret    
   140035b26:	int3   
   140035b27:	int3   
   140035b28:	mov    QWORD PTR [rsp+0x8],rbx
   140035b2d:	movsxd r8,ecx
   140035b30:	lea    rbx,[rip+0x34fc9]        # 0x14006ab00
   140035b37:	mov    r9,r8
   140035b3a:	and    r8d,0x1f
   140035b3e:	sar    r9,0x5
   140035b42:	imul   r8,r8,0x58
   140035b46:	mov    rcx,QWORD PTR [rbx+r9*8]
   140035b4a:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   140035b4f:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   140035b55:	add    al,al
   140035b57:	and    r11d,0x80
   140035b5e:	movsx  r10d,al
   140035b62:	sar    r10d,1
   140035b65:	cmp    edx,0x4000
   140035b6b:	je     0x140035bc5
   140035b6d:	cmp    edx,0x8000
   140035b73:	je     0x140035bbd
   140035b75:	cmp    edx,0x10000
   140035b7b:	je     0x140035ba5
   140035b7d:	cmp    edx,0x20000
   140035b83:	je     0x140035ba5
   140035b85:	cmp    edx,0x40000
   140035b8b:	jne    0x140035bd5
   140035b8d:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140035b93:	mov    rax,QWORD PTR [rbx+r9*8]
   140035b97:	and    BYTE PTR [rax+r8*1+0x38],0x81
   140035b9d:	or     BYTE PTR [rax+r8*1+0x38],0x1
   140035ba3:	jmp    0x140035bd5
   140035ba5:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140035bab:	mov    rax,QWORD PTR [rbx+r9*8]
   140035baf:	and    BYTE PTR [rax+r8*1+0x38],0x82
   140035bb5:	or     BYTE PTR [rax+r8*1+0x38],0x2
   140035bbb:	jmp    0x140035bd5
   140035bbd:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   140035bc3:	jmp    0x140035bd5
   140035bc5:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140035bcb:	mov    rcx,QWORD PTR [rbx+r9*8]
   140035bcf:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   140035bd5:	test   r11d,r11d
   140035bd8:	jne    0x140035be1
   140035bda:	mov    eax,0x8000
   140035bdf:	jmp    0x140035bf0
   140035be1:	neg    r10d
   140035be4:	sbb    eax,eax
   140035be6:	and    eax,0xc000
   140035beb:	add    eax,0x4000
   140035bf0:	mov    rbx,QWORD PTR [rsp+0x8]
   140035bf5:	ret    
   140035bf6:	int3   
   140035bf7:	int3   
   140035bf8:	sub    rsp,0x38
   140035bfc:	test   rcx,rcx
   140035bff:	jne    0x140035c28
   140035c01:	call   0x14002b3f4
   140035c06:	and    QWORD PTR [rsp+0x20],0x0
   140035c0c:	xor    r9d,r9d
   140035c0f:	xor    r8d,r8d
   140035c12:	xor    edx,edx
   140035c14:	xor    ecx,ecx
   140035c16:	mov    DWORD PTR [rax],0x16
   140035c1c:	call   0x140031aac
   140035c21:	mov    eax,0x16
   140035c26:	jmp    0x140035c32
   140035c28:	mov    eax,DWORD PTR [rip+0x34e7a]        # 0x14006aaa8
   140035c2e:	mov    DWORD PTR [rcx],eax
   140035c30:	xor    eax,eax
   140035c32:	add    rsp,0x38
   140035c36:	ret    
   140035c37:	int3   
   140035c38:	int3   
   140035c39:	int3   
   140035c3a:	int3   
   140035c3b:	int3   
   140035c3c:	int3   
   140035c3d:	int3   
   140035c3e:	int3   
   140035c3f:	int3   
   140035c40:	int3   
   140035c41:	int3   
   140035c42:	int3   
   140035c43:	int3   
   140035c44:	int3   
   140035c45:	int3   
   140035c46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140035c50:	sub    rsp,0x4d8
   140035c57:	xor    r8,r8
   140035c5a:	xor    r9,r9
   140035c5d:	mov    QWORD PTR [rsp+0x20],rsp
   140035c62:	mov    QWORD PTR [rsp+0x28],r8
   140035c67:	call   0x14003b918
   140035c6c:	add    rsp,0x4d8
   140035c73:	ret    
   140035c74:	int3   
   140035c75:	int3   
   140035c76:	int3   
   140035c77:	int3   
   140035c78:	int3   
   140035c79:	int3   
   140035c7a:	nop    WORD PTR [rax+rax*1+0x0]
   140035c80:	mov    QWORD PTR [rsp+0x8],rcx
   140035c85:	mov    QWORD PTR [rsp+0x18],rdx
   140035c8a:	mov    DWORD PTR [rsp+0x10],r8d
   140035c8f:	mov    r9,0x19930520
   140035c96:	jmp    0x140035ca0
   140035c98:	int3   
   140035c99:	int3   
   140035c9a:	int3   
   140035c9b:	int3   
   140035c9c:	int3   
   140035c9d:	int3   
   140035c9e:	xchg   ax,ax
   140035ca0:	ret    
   140035ca1:	int3   
   140035ca2:	int3   
   140035ca3:	int3   
   140035ca4:	int3   
   140035ca5:	int3   
   140035ca6:	int3   
   140035ca7:	nop    WORD PTR [rax+rax*1+0x0]
   140035cb0:	ret    
   140035cb1:	int3   
   140035cb2:	int3   
   140035cb3:	int3   
   140035cb4:	mov    QWORD PTR [rsp+0x8],rbx
   140035cb9:	push   rdi
   140035cba:	sub    rsp,0x30
   140035cbe:	or     edi,0xffffffff
   140035cc1:	mov    rbx,rcx
   140035cc4:	test   rcx,rcx
   140035cc7:	jne    0x140035cec
   140035cc9:	call   0x14002b3f4
   140035cce:	and    QWORD PTR [rsp+0x20],rbx
   140035cd3:	xor    r9d,r9d
   140035cd6:	xor    r8d,r8d
   140035cd9:	xor    edx,edx
   140035cdb:	xor    ecx,ecx
   140035cdd:	mov    DWORD PTR [rax],0x16
   140035ce3:	call   0x140031aac
   140035ce8:	or     eax,edi
   140035cea:	jmp    0x140035d32
   140035cec:	test   BYTE PTR [rcx+0x18],0x83
   140035cf0:	je     0x140035d2c
   140035cf2:	call   0x14002a9c8
   140035cf7:	mov    rcx,rbx
   140035cfa:	mov    edi,eax
   140035cfc:	call   0x14003a920
   140035d01:	mov    rcx,rbx
   140035d04:	call   0x14002df3c
   140035d09:	mov    ecx,eax
   140035d0b:	call   0x140035978
   140035d10:	test   eax,eax
   140035d12:	jns    0x140035d19
   140035d14:	or     edi,0xffffffff
   140035d17:	jmp    0x140035d2c
   140035d19:	mov    rcx,QWORD PTR [rbx+0x28]
   140035d1d:	test   rcx,rcx
   140035d20:	je     0x140035d2c
   140035d22:	call   0x14002b36c
   140035d27:	and    QWORD PTR [rbx+0x28],0x0
   140035d2c:	and    DWORD PTR [rbx+0x18],0x0
   140035d30:	mov    eax,edi
   140035d32:	mov    rbx,QWORD PTR [rsp+0x40]
   140035d37:	add    rsp,0x30
   140035d3b:	pop    rdi
   140035d3c:	ret    
   140035d3d:	int3   
   140035d3e:	int3   
   140035d3f:	int3   
   140035d40:	mov    QWORD PTR [rsp+0x10],rbx
   140035d45:	mov    QWORD PTR [rsp+0x8],rcx
   140035d4a:	push   rdi
   140035d4b:	sub    rsp,0x30
   140035d4f:	mov    rbx,rcx
   140035d52:	or     edi,0xffffffff
   140035d55:	xor    eax,eax
   140035d57:	test   rcx,rcx
   140035d5a:	setne  al
   140035d5d:	test   eax,eax
   140035d5f:	jne    0x140035d85
   140035d61:	call   0x14002b3f4
   140035d66:	mov    DWORD PTR [rax],0x16
   140035d6c:	and    QWORD PTR [rsp+0x20],0x0
   140035d72:	xor    r9d,r9d
   140035d75:	xor    r8d,r8d
   140035d78:	xor    edx,edx
   140035d7a:	xor    ecx,ecx
   140035d7c:	call   0x140031aac
   140035d81:	mov    eax,edi
   140035d83:	jmp    0x140035dab
   140035d85:	test   BYTE PTR [rcx+0x18],0x40
   140035d89:	je     0x140035d91
   140035d8b:	and    DWORD PTR [rcx+0x18],0x0
   140035d8f:	jmp    0x140035da9
   140035d91:	call   0x14002ace4
   140035d96:	nop
   140035d97:	mov    rcx,rbx
   140035d9a:	call   0x140035cb4
   140035d9f:	mov    edi,eax
   140035da1:	mov    rcx,rbx
   140035da4:	call   0x14002ad74
   140035da9:	mov    eax,edi
   140035dab:	mov    rbx,QWORD PTR [rsp+0x48]
   140035db0:	add    rsp,0x30
   140035db4:	pop    rdi
   140035db5:	ret    
   140035db6:	int3   
   140035db7:	int3   
   140035db8:	int3   
   140035db9:	int3   
   140035dba:	int3   
   140035dbb:	int3   
   140035dbc:	int3   
   140035dbd:	int3   
   140035dbe:	int3   
   140035dbf:	int3   
   140035dc0:	int3   
   140035dc1:	int3   
   140035dc2:	int3   
   140035dc3:	int3   
   140035dc4:	int3   
   140035dc5:	int3   
   140035dc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140035dd0:	mov    rax,rcx
   140035dd3:	neg    rcx
   140035dd6:	test   rax,0x7
   140035ddc:	je     0x140035ded
   140035dde:	xchg   ax,ax
   140035de0:	mov    dl,BYTE PTR [rax]
   140035de2:	inc    rax
   140035de5:	test   dl,dl
   140035de7:	je     0x140035e48
   140035de9:	test   al,0x7
   140035deb:	jne    0x140035de0
   140035ded:	movabs r8,0x7efefefefefefeff
   140035df7:	movabs r11,0x8101010101010100
   140035e01:	mov    rdx,QWORD PTR [rax]
   140035e04:	mov    r9,r8
   140035e07:	add    rax,0x8
   140035e0b:	add    r9,rdx
   140035e0e:	not    rdx
   140035e11:	xor    rdx,r9
   140035e14:	and    rdx,r11
   140035e17:	je     0x140035e01
   140035e19:	mov    rdx,QWORD PTR [rax-0x8]
   140035e1d:	test   dl,dl
   140035e1f:	je     0x140035e72
   140035e21:	test   dh,dh
   140035e23:	je     0x140035e6c
   140035e25:	shr    rdx,0x10
   140035e29:	test   dl,dl
   140035e2b:	je     0x140035e66
   140035e2d:	test   dh,dh
   140035e2f:	je     0x140035e60
   140035e31:	shr    rdx,0x10
   140035e35:	test   dl,dl
   140035e37:	je     0x140035e5a
   140035e39:	test   dh,dh
   140035e3b:	je     0x140035e54
   140035e3d:	shr    edx,0x10
   140035e40:	test   dl,dl
   140035e42:	je     0x140035e4e
   140035e44:	test   dh,dh
   140035e46:	jne    0x140035e01
   140035e48:	lea    rax,[rcx+rax*1-0x1]
   140035e4d:	ret    
   140035e4e:	lea    rax,[rcx+rax*1-0x2]
   140035e53:	ret    
   140035e54:	lea    rax,[rcx+rax*1-0x3]
   140035e59:	ret    
   140035e5a:	lea    rax,[rcx+rax*1-0x4]
   140035e5f:	ret    
   140035e60:	lea    rax,[rcx+rax*1-0x5]
   140035e65:	ret    
   140035e66:	lea    rax,[rcx+rax*1-0x6]
   140035e6b:	ret    
   140035e6c:	lea    rax,[rcx+rax*1-0x7]
   140035e71:	ret    
   140035e72:	lea    rax,[rcx+rax*1-0x8]
   140035e77:	ret    
   140035e78:	mov    QWORD PTR [rip+0x34bc9],rcx        # 0x14006aa48
   140035e7f:	ret    
   140035e80:	sub    rsp,0x38
   140035e84:	call   QWORD PTR [rip+0x73f6]        # 0x14003d280
   140035e8a:	mov    DWORD PTR [rsp+0x20],eax
   140035e8e:	jmp    0x140035ea8
   140035e90:	cmp    eax,0xc0000017
   140035e95:	jne    0x140035ea2
   140035e97:	mov    ecx,0x8
   140035e9c:	call   QWORD PTR [rip+0x745e]        # 0x14003d300
   140035ea2:	xor    eax,eax
   140035ea4:	mov    DWORD PTR [rsp+0x20],eax
   140035ea8:	add    rsp,0x38
   140035eac:	ret    
   140035ead:	int3   
   140035eae:	int3   
   140035eaf:	int3   
   140035eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140035eb5:	push   rdi
   140035eb6:	sub    rsp,0x30
   140035eba:	mov    rbx,r8
   140035ebd:	mov    rdi,rdx
   140035ec0:	test   rcx,rcx
   140035ec3:	je     0x140035ef7
   140035ec5:	xor    edx,edx
   140035ec7:	lea    rax,[rdx-0x20]
   140035ecb:	div    rcx
   140035ece:	cmp    rax,rdi
   140035ed1:	jae    0x140035ef7
   140035ed3:	call   0x14002b3f4
   140035ed8:	and    QWORD PTR [rsp+0x20],0x0
   140035ede:	xor    r9d,r9d
   140035ee1:	xor    r8d,r8d
   140035ee4:	xor    edx,edx
   140035ee6:	xor    ecx,ecx
   140035ee8:	mov    DWORD PTR [rax],0xc
   140035eee:	call   0x140031aac
   140035ef3:	xor    eax,eax
   140035ef5:	jmp    0x140035f54
   140035ef7:	imul   rdi,rcx
   140035efb:	mov    eax,0x1
   140035f00:	test   rdi,rdi
   140035f03:	cmove  rdi,rax
   140035f07:	xor    eax,eax
   140035f09:	cmp    rdi,0xffffffffffffffe0
   140035f0d:	ja     0x140035f27
   140035f0f:	mov    rcx,QWORD PTR [rip+0x3499a]        # 0x14006a8b0
   140035f16:	lea    edx,[rax+0x8]
   140035f19:	mov    r8,rdi
   140035f1c:	call   QWORD PTR [rip+0x71fe]        # 0x14003d120
   140035f22:	test   rax,rax
   140035f25:	jne    0x140035f54
   140035f27:	cmp    DWORD PTR [rip+0x34aea],0x0        # 0x14006aa18
   140035f2e:	je     0x140035f49
   140035f30:	mov    rcx,rdi
   140035f33:	call   0x140033620
   140035f38:	test   eax,eax
   140035f3a:	jne    0x140035f07
   140035f3c:	test   rbx,rbx
   140035f3f:	je     0x140035ef3
   140035f41:	mov    DWORD PTR [rbx],0xc
   140035f47:	jmp    0x140035ef3
   140035f49:	test   rbx,rbx
   140035f4c:	je     0x140035f54
   140035f4e:	mov    DWORD PTR [rbx],0xc
   140035f54:	mov    rbx,QWORD PTR [rsp+0x40]
   140035f59:	add    rsp,0x30
   140035f5d:	pop    rdi
   140035f5e:	ret    
   140035f5f:	int3   
   140035f60:	rex push rbx
   140035f62:	sub    rsp,0x30
   140035f66:	mov    r11,r8
   140035f69:	test   r9,r9
   140035f6c:	jne    0x140035f7c
   140035f6e:	test   rcx,rcx
   140035f71:	jne    0x140035f81
   140035f73:	test   rdx,rdx
   140035f76:	jne    0x140035f98
   140035f78:	xor    eax,eax
   140035f7a:	jmp    0x140035fbb
   140035f7c:	test   rcx,rcx
   140035f7f:	je     0x140035f98
   140035f81:	test   rdx,rdx
   140035f84:	je     0x140035f98
   140035f86:	test   r9,r9
   140035f89:	jne    0x140035f90
   140035f8b:	mov    BYTE PTR [rcx],r9b
   140035f8e:	jmp    0x140035f78
   140035f90:	test   r8,r8
   140035f93:	jne    0x140035fc1
   140035f95:	mov    BYTE PTR [rcx],r8b
   140035f98:	call   0x14002b3f4
   140035f9d:	mov    ebx,0x16
   140035fa2:	and    QWORD PTR [rsp+0x20],0x0
   140035fa8:	xor    r9d,r9d
   140035fab:	xor    r8d,r8d
   140035fae:	xor    edx,edx
   140035fb0:	xor    ecx,ecx
   140035fb2:	mov    DWORD PTR [rax],ebx
   140035fb4:	call   0x140031aac
   140035fb9:	mov    eax,ebx
   140035fbb:	add    rsp,0x30
   140035fbf:	pop    rbx
   140035fc0:	ret    
   140035fc1:	mov    r10,rcx
   140035fc4:	mov    r8,rdx
   140035fc7:	cmp    r9,0xffffffffffffffff
   140035fcb:	jne    0x140035fe5
   140035fcd:	mov    al,BYTE PTR [r11]
   140035fd0:	inc    r11
   140035fd3:	mov    BYTE PTR [r10],al
   140035fd6:	inc    r10
   140035fd9:	test   al,al
   140035fdb:	je     0x140036009
   140035fdd:	sub    r8,0x1
   140035fe1:	jne    0x140035fcd
   140035fe3:	jmp    0x140036009
   140035fe5:	mov    al,BYTE PTR [r11]
   140035fe8:	inc    r11
   140035feb:	mov    BYTE PTR [r10],al
   140035fee:	inc    r10
   140035ff1:	test   al,al
   140035ff3:	je     0x140036001
   140035ff5:	sub    r8,0x1
   140035ff9:	je     0x140036001
   140035ffb:	sub    r9,0x1
   140035fff:	jne    0x140035fe5
   140036001:	test   r9,r9
   140036004:	jne    0x140036009
   140036006:	mov    BYTE PTR [r10],r9b
   140036009:	test   r8,r8
   14003600c:	jne    0x140035f78
   140036012:	cmp    r9,0xffffffffffffffff
   140036016:	jne    0x140036023
   140036018:	mov    BYTE PTR [rcx+rdx*1-0x1],r8b
   14003601d:	lea    eax,[r8+0x50]
   140036021:	jmp    0x140035fbb
   140036023:	mov    BYTE PTR [rcx],0x0
   140036026:	call   0x14002b3f4
   14003602b:	mov    ebx,0x22
   140036030:	jmp    0x140035fa2
   140036035:	int3   
   140036036:	int3   
   140036037:	int3   
   140036038:	int3   
   140036039:	int3   
   14003603a:	int3   
   14003603b:	int3   
   14003603c:	int3   
   14003603d:	int3   
   14003603e:	int3   
   14003603f:	int3   
   140036040:	int3   
   140036041:	int3   
   140036042:	int3   
   140036043:	int3   
   140036044:	int3   
   140036045:	int3   
   140036046:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036050:	sub    rdx,rcx
   140036053:	mov    r9,rdx
   140036056:	test   cl,0x7
   140036059:	je     0x140036076
   14003605b:	mov    al,BYTE PTR [rcx]
   14003605d:	mov    dl,BYTE PTR [rcx+r9*1]
   140036061:	cmp    al,dl
   140036063:	jne    0x1400360bb
   140036065:	inc    rcx
   140036068:	test   al,al
   14003606a:	je     0x1400360c3
   14003606c:	test   rcx,0x7
   140036073:	jne    0x14003605b
   140036075:	nop
   140036076:	movabs r11,0x8101010101010100
   140036080:	lea    rdx,[rcx+r9*1]
   140036084:	and    dx,0xfff
   140036089:	cmp    dx,0xff8
   14003608e:	ja     0x14003605b
   140036090:	mov    rax,QWORD PTR [rcx]
   140036093:	mov    rdx,QWORD PTR [rcx+r9*1]
   140036097:	cmp    rax,rdx
   14003609a:	jne    0x14003605b
   14003609c:	movabs r10,0x7efefefefefefeff
   1400360a6:	add    r10,rdx
   1400360a9:	xor    rax,0xffffffffffffffff
   1400360ad:	add    rcx,0x8
   1400360b1:	xor    rax,r10
   1400360b4:	test   r11,rax
   1400360b7:	je     0x140036080
   1400360b9:	jmp    0x1400360ca
   1400360bb:	sbb    rax,rax
   1400360be:	sbb    rax,0xffffffffffffffff
   1400360c2:	ret    
   1400360c3:	xor    eax,eax
   1400360c5:	ret    
   1400360c6:	data16 data16 xchg ax,ax
   1400360ca:	test   dl,dl
   1400360cc:	je     0x1400360f5
   1400360ce:	test   dh,dh
   1400360d0:	je     0x1400360f5
   1400360d2:	shr    rdx,0x10
   1400360d6:	test   dl,dl
   1400360d8:	je     0x1400360f5
   1400360da:	test   dh,dh
   1400360dc:	je     0x1400360f5
   1400360de:	shr    rdx,0x10
   1400360e2:	test   dl,dl
   1400360e4:	je     0x1400360f5
   1400360e6:	test   dh,dh
   1400360e8:	je     0x1400360f5
   1400360ea:	shr    edx,0x10
   1400360ed:	test   dl,dl
   1400360ef:	je     0x1400360f5
   1400360f1:	test   dh,dh
   1400360f3:	jne    0x140036080
   1400360f5:	xor    eax,eax
   1400360f7:	ret    
   1400360f8:	sbb    rax,rax
   1400360fb:	sbb    rax,0xffffffffffffffff
   1400360ff:	ret    
   140036100:	sub    rsp,0x28
   140036104:	call   0x140031e48
   140036109:	mov    rcx,QWORD PTR [rax+0xc0]
   140036110:	cmp    rcx,QWORD PTR [rip+0x31549]        # 0x140067660
   140036117:	je     0x14003612f
   140036119:	mov    eax,DWORD PTR [rax+0xc8]
   14003611f:	test   DWORD PTR [rip+0x313c3],eax        # 0x1400674e8
   140036125:	jne    0x14003612f
   140036127:	call   0x140032b98
   14003612c:	mov    rcx,rax
   14003612f:	mov    eax,DWORD PTR [rcx+0x4]
   140036132:	add    rsp,0x28
   140036136:	ret    
   140036137:	int3   
   140036138:	mov    rax,rsp
   14003613b:	mov    QWORD PTR [rax+0x8],rbx
   14003613f:	mov    QWORD PTR [rax+0x10],rbp
   140036143:	mov    QWORD PTR [rax+0x18],rsi
   140036147:	push   rdi
   140036148:	sub    rsp,0x60
   14003614c:	mov    rsi,rcx
   14003614f:	mov    rdi,rdx
   140036152:	lea    rcx,[rax-0x28]
   140036156:	mov    rdx,r9
   140036159:	mov    rbp,r9
   14003615c:	mov    rbx,r8
   14003615f:	call   0x14002b47c
   140036164:	test   rbx,rbx
   140036167:	jne    0x140036182
   140036169:	cmp    BYTE PTR [rsp+0x58],bl
   14003616d:	je     0x14003617b
   14003616f:	mov    rax,QWORD PTR [rsp+0x50]
   140036174:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003617b:	xor    eax,eax
   14003617d:	jmp    0x140036231
   140036182:	test   rsi,rsi
   140036185:	jne    0x1400361c1
   140036187:	call   0x14002b3f4
   14003618c:	and    QWORD PTR [rsp+0x20],0x0
   140036192:	xor    r9d,r9d
   140036195:	xor    r8d,r8d
   140036198:	xor    edx,edx
   14003619a:	xor    ecx,ecx
   14003619c:	mov    DWORD PTR [rax],0x16
   1400361a2:	call   0x140031aac
   1400361a7:	cmp    BYTE PTR [rsp+0x58],0x0
   1400361ac:	je     0x1400361ba
   1400361ae:	mov    rax,QWORD PTR [rsp+0x50]
   1400361b3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400361ba:	mov    eax,0x7fffffff
   1400361bf:	jmp    0x140036231
   1400361c1:	test   rdi,rdi
   1400361c4:	je     0x140036187
   1400361c6:	cmp    rbx,0x7fffffff
   1400361cd:	ja     0x140036187
   1400361cf:	mov    rcx,QWORD PTR [rsp+0x48]
   1400361d4:	cmp    DWORD PTR [rcx+0x8],0x0
   1400361d8:	jne    0x1400361ed
   1400361da:	mov    r9,rbp
   1400361dd:	mov    r8,rbx
   1400361e0:	mov    rdx,rdi
   1400361e3:	mov    rcx,rsi
   1400361e6:	call   0x14003aec0
   1400361eb:	jmp    0x14003621e
   1400361ed:	mov    eax,DWORD PTR [rcx+0x4]
   1400361f0:	mov    edx,DWORD PTR [rcx+0xc]
   1400361f3:	lea    rcx,[rsp+0x40]
   1400361f8:	mov    DWORD PTR [rsp+0x38],eax
   1400361fc:	mov    DWORD PTR [rsp+0x30],ebx
   140036200:	mov    r9,rsi
   140036203:	mov    r8d,0x1001
   140036209:	mov    QWORD PTR [rsp+0x28],rdi
   14003620e:	mov    DWORD PTR [rsp+0x20],ebx
   140036212:	call   0x14003ae34
   140036217:	test   eax,eax
   140036219:	je     0x1400361a7
   14003621b:	add    eax,0xfffffffe
   14003621e:	cmp    BYTE PTR [rsp+0x58],0x0
   140036223:	je     0x140036231
   140036225:	mov    rcx,QWORD PTR [rsp+0x50]
   14003622a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140036231:	lea    r11,[rsp+0x60]
   140036236:	mov    rbx,QWORD PTR [r11+0x10]
   14003623a:	mov    rbp,QWORD PTR [r11+0x18]
   14003623e:	mov    rsi,QWORD PTR [r11+0x20]
   140036242:	mov    rsp,r11
   140036245:	pop    rdi
   140036246:	ret    
   140036247:	int3   
   140036248:	xor    r9d,r9d
   14003624b:	jmp    0x140036138
   140036250:	mov    QWORD PTR [rsp+0x10],rbx
   140036255:	mov    QWORD PTR [rsp+0x18],rbp
   14003625a:	push   rdi
   14003625b:	sub    rsp,0x40
   14003625f:	and    QWORD PTR [rsp+0x50],0x0
   140036265:	mov    rbx,QWORD PTR [rip+0x33d44]        # 0x140069fb0
   14003626c:	mov    rax,QWORD PTR [rbx]
   14003626f:	test   rax,rax
   140036272:	je     0x140036322
   140036278:	or     ebp,0xffffffff
   14003627b:	and    QWORD PTR [rsp+0x38],0x0
   140036281:	and    QWORD PTR [rsp+0x30],0x0
   140036287:	and    DWORD PTR [rsp+0x28],0x0
   14003628c:	and    QWORD PTR [rsp+0x20],0x0
   140036292:	mov    r9d,ebp
   140036295:	mov    r8,rax
   140036298:	xor    edx,edx
   14003629a:	xor    ecx,ecx
   14003629c:	call   QWORD PTR [rip+0x6df6]        # 0x14003d098
   1400362a2:	movsxd rdi,eax
   1400362a5:	test   eax,eax
   1400362a7:	je     0x14003633e
   1400362ad:	mov    rcx,rdi
   1400362b0:	mov    edx,0x1
   1400362b5:	call   0x140030134
   1400362ba:	mov    QWORD PTR [rsp+0x50],rax
   1400362bf:	test   rax,rax
   1400362c2:	je     0x14003633e
   1400362c4:	and    QWORD PTR [rsp+0x38],0x0
   1400362ca:	and    QWORD PTR [rsp+0x30],0x0
   1400362d0:	mov    r8,QWORD PTR [rbx]
   1400362d3:	mov    r9d,ebp
   1400362d6:	xor    edx,edx
   1400362d8:	xor    ecx,ecx
   1400362da:	mov    DWORD PTR [rsp+0x28],edi
   1400362de:	mov    QWORD PTR [rsp+0x20],rax
   1400362e3:	call   QWORD PTR [rip+0x6daf]        # 0x14003d098
   1400362e9:	test   eax,eax
   1400362eb:	je     0x140036334
   1400362ed:	lea    rcx,[rsp+0x50]
   1400362f2:	xor    edx,edx
   1400362f4:	call   0x14003afd8
   1400362f9:	test   eax,eax
   1400362fb:	jns    0x140036312
   1400362fd:	mov    rcx,QWORD PTR [rsp+0x50]
   140036302:	test   rcx,rcx
   140036305:	je     0x140036312
   140036307:	call   0x14002b36c
   14003630c:	and    QWORD PTR [rsp+0x50],0x0
   140036312:	add    rbx,0x8
   140036316:	mov    rax,QWORD PTR [rbx]
   140036319:	test   rax,rax
   14003631c:	jne    0x14003627b
   140036322:	xor    eax,eax
   140036324:	mov    rbx,QWORD PTR [rsp+0x58]
   140036329:	mov    rbp,QWORD PTR [rsp+0x60]
   14003632e:	add    rsp,0x40
   140036332:	pop    rdi
   140036333:	ret    
   140036334:	mov    rcx,QWORD PTR [rsp+0x50]
   140036339:	call   0x14002b36c
   14003633e:	mov    eax,ebp
   140036340:	jmp    0x140036324
   140036342:	int3   
   140036343:	int3   
   140036344:	mov    rax,rsp
   140036347:	mov    QWORD PTR [rax+0x10],rbx
   14003634b:	mov    QWORD PTR [rax+0x18],rbp
   14003634f:	mov    QWORD PTR [rax+0x20],rsi
   140036353:	mov    DWORD PTR [rax+0x8],ecx
   140036356:	push   rdi
   140036357:	sub    rsp,0x20
   14003635b:	mov    rcx,rdx
   14003635e:	mov    rbx,rdx
   140036361:	call   0x14002df3c
   140036366:	mov    ecx,DWORD PTR [rbx+0x18]
   140036369:	movsxd rsi,eax
   14003636c:	test   cl,0x82
   14003636f:	jne    0x140036388
   140036371:	call   0x14002b3f4
   140036376:	mov    DWORD PTR [rax],0x9
   14003637c:	or     DWORD PTR [rbx+0x18],0x20
   140036380:	or     eax,0xffffffff
   140036383:	jmp    0x1400364bc
   140036388:	test   cl,0x40
   14003638b:	je     0x14003639a
   14003638d:	call   0x14002b3f4
   140036392:	mov    DWORD PTR [rax],0x22
   140036398:	jmp    0x14003637c
   14003639a:	xor    edi,edi
   14003639c:	test   cl,0x1
   14003639f:	je     0x1400363ba
   1400363a1:	mov    DWORD PTR [rbx+0x8],edi
   1400363a4:	test   cl,0x10
   1400363a7:	je     0x140036436
   1400363ad:	mov    rax,QWORD PTR [rbx+0x10]
   1400363b1:	and    ecx,0xfffffffe
   1400363b4:	mov    QWORD PTR [rbx],rax
   1400363b7:	mov    DWORD PTR [rbx+0x18],ecx
   1400363ba:	mov    eax,DWORD PTR [rbx+0x18]
   1400363bd:	mov    DWORD PTR [rbx+0x8],edi
   1400363c0:	and    eax,0xffffffef
   1400363c3:	or     eax,0x2
   1400363c6:	mov    DWORD PTR [rbx+0x18],eax
   1400363c9:	test   eax,0x10c
   1400363ce:	jne    0x1400363ff
   1400363d0:	call   0x14002abd0
   1400363d5:	add    rax,0x30
   1400363d9:	cmp    rbx,rax
   1400363dc:	je     0x1400363ec
   1400363de:	call   0x14002abd0
   1400363e3:	add    rax,0x60
   1400363e7:	cmp    rbx,rax
   1400363ea:	jne    0x1400363f7
   1400363ec:	mov    ecx,esi
   1400363ee:	call   0x1400365e8
   1400363f3:	cmp    eax,edi
   1400363f5:	jne    0x1400363ff
   1400363f7:	mov    rcx,rbx
   1400363fa:	call   0x14003b388
   1400363ff:	test   DWORD PTR [rbx+0x18],0x108
   140036406:	je     0x140036499
   14003640c:	mov    ebp,DWORD PTR [rbx]
   14003640e:	mov    rdx,QWORD PTR [rbx+0x10]
   140036412:	sub    ebp,DWORD PTR [rbx+0x10]
   140036415:	lea    rax,[rdx+0x1]
   140036419:	mov    QWORD PTR [rbx],rax
   14003641c:	mov    eax,DWORD PTR [rbx+0x24]
   14003641f:	dec    eax
   140036421:	cmp    ebp,edi
   140036423:	mov    DWORD PTR [rbx+0x8],eax
   140036426:	jle    0x140036441
   140036428:	mov    r8d,ebp
   14003642b:	mov    ecx,esi
   14003642d:	call   0x14002f798
   140036432:	mov    edi,eax
   140036434:	jmp    0x14003648d
   140036436:	or     ecx,0x20
   140036439:	mov    DWORD PTR [rbx+0x18],ecx
   14003643c:	jmp    0x140036380
   140036441:	cmp    esi,0xffffffff
   140036444:	je     0x140036469
   140036446:	cmp    esi,0xfffffffe
   140036449:	je     0x140036469
   14003644b:	mov    rcx,rsi
   14003644e:	mov    rax,rsi
   140036451:	lea    rdx,[rip+0x346a8]        # 0x14006ab00
   140036458:	and    ecx,0x1f
   14003645b:	sar    rax,0x5
   14003645f:	imul   rcx,rcx,0x58
   140036463:	add    rcx,QWORD PTR [rdx+rax*8]
   140036467:	jmp    0x140036470
   140036469:	lea    rcx,[rip+0x30950]        # 0x140066dc0
   140036470:	test   BYTE PTR [rcx+0x8],0x20
   140036474:	je     0x14003648d
   140036476:	xor    edx,edx
   140036478:	mov    ecx,esi
   14003647a:	lea    r8d,[rdx+0x2]
   14003647e:	call   0x140034e6c
   140036483:	cmp    rax,0xffffffffffffffff
   140036487:	je     0x14003637c
   14003648d:	mov    rcx,QWORD PTR [rbx+0x10]
   140036491:	mov    al,BYTE PTR [rsp+0x30]
   140036495:	mov    BYTE PTR [rcx],al
   140036497:	jmp    0x1400364af
   140036499:	mov    ebp,0x1
   14003649e:	lea    rdx,[rsp+0x30]
   1400364a3:	mov    ecx,esi
   1400364a5:	mov    r8d,ebp
   1400364a8:	call   0x14002f798
   1400364ad:	mov    edi,eax
   1400364af:	cmp    edi,ebp
   1400364b1:	jne    0x14003637c
   1400364b7:	movzx  eax,BYTE PTR [rsp+0x30]
   1400364bc:	mov    rbx,QWORD PTR [rsp+0x38]
   1400364c1:	mov    rbp,QWORD PTR [rsp+0x40]
   1400364c6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400364cb:	add    rsp,0x20
   1400364cf:	pop    rdi
   1400364d0:	ret    
   1400364d1:	int3   
   1400364d2:	int3   
   1400364d3:	int3   
   1400364d4:	sub    rsp,0x68
   1400364d8:	mov    rax,QWORD PTR [rip+0x303d1]        # 0x1400668b0
   1400364df:	xor    rax,rsp
   1400364e2:	mov    QWORD PTR [rsp+0x50],rax
   1400364e7:	cmp    DWORD PTR [rip+0x314fe],0x0        # 0x1400679ec
   1400364ee:	mov    WORD PTR [rsp+0x40],cx
   1400364f3:	je     0x14003655b
   1400364f5:	mov    rcx,QWORD PTR [rip+0x316c4]        # 0x140067bc0
   1400364fc:	cmp    rcx,0xfffffffffffffffe
   140036500:	jne    0x14003650e
   140036502:	call   0x14003b3dc
   140036507:	mov    rcx,QWORD PTR [rip+0x316b2]        # 0x140067bc0
   14003650e:	cmp    rcx,0xffffffffffffffff
   140036512:	je     0x1400365d1
   140036518:	and    QWORD PTR [rsp+0x20],0x0
   14003651e:	lea    r9,[rsp+0x44]
   140036523:	lea    rdx,[rsp+0x40]
   140036528:	mov    r8d,0x1
   14003652e:	call   QWORD PTR [rip+0x6dc4]        # 0x14003d2f8
   140036534:	test   eax,eax
   140036536:	jne    0x1400365c5
   14003653c:	cmp    DWORD PTR [rip+0x314a9],0x2        # 0x1400679ec
   140036543:	jne    0x1400365d1
   140036549:	call   QWORD PTR [rip+0x6de9]        # 0x14003d338
   14003654f:	cmp    eax,0x78
   140036552:	jne    0x1400365d1
   140036554:	and    DWORD PTR [rip+0x31491],0x0        # 0x1400679ec
   14003655b:	call   QWORD PTR [rip+0x6d2f]        # 0x14003d290
   140036561:	and    QWORD PTR [rsp+0x38],0x0
   140036567:	and    QWORD PTR [rsp+0x30],0x0
   14003656d:	mov    ecx,eax
   14003656f:	lea    rax,[rsp+0x48]
   140036574:	lea    r8,[rsp+0x40]
   140036579:	mov    r9d,0x1
   14003657f:	xor    edx,edx
   140036581:	mov    DWORD PTR [rsp+0x28],0x5
   140036589:	mov    QWORD PTR [rsp+0x20],rax
   14003658e:	call   QWORD PTR [rip+0x6b04]        # 0x14003d098
   140036594:	mov    rcx,QWORD PTR [rip+0x31625]        # 0x140067bc0
   14003659b:	cmp    rcx,0xffffffffffffffff
   14003659f:	je     0x1400365d1
   1400365a1:	and    QWORD PTR [rsp+0x20],0x0
   1400365a7:	lea    r9,[rsp+0x44]
   1400365ac:	lea    rdx,[rsp+0x48]
   1400365b1:	mov    r8d,eax
   1400365b4:	call   QWORD PTR [rip+0x6cce]        # 0x14003d288
   1400365ba:	test   eax,eax
   1400365bc:	je     0x1400365d1
   1400365be:	mov    ax,WORD PTR [rsp+0x40]
   1400365c3:	jmp    0x1400365d6
   1400365c5:	mov    DWORD PTR [rip+0x3141d],0x1        # 0x1400679ec
   1400365cf:	jmp    0x1400365be
   1400365d1:	mov    eax,0xffff
   1400365d6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400365db:	xor    rcx,rsp
   1400365de:	call   0x14002b250
   1400365e3:	add    rsp,0x68
   1400365e7:	ret    
   1400365e8:	sub    rsp,0x38
   1400365ec:	cmp    ecx,0xfffffffe
   1400365ef:	jne    0x1400365fe
   1400365f1:	call   0x14002b3f4
   1400365f6:	mov    DWORD PTR [rax],0x9
   1400365fc:	jmp    0x140036650
   1400365fe:	test   ecx,ecx
   140036600:	js     0x140036630
   140036602:	cmp    ecx,DWORD PTR [rip+0x344d8]        # 0x14006aae0
   140036608:	jae    0x140036630
   14003660a:	movsxd rcx,ecx
   14003660d:	lea    rdx,[rip+0x344ec]        # 0x14006ab00
   140036614:	mov    rax,rcx
   140036617:	and    ecx,0x1f
   14003661a:	sar    rax,0x5
   14003661e:	imul   rcx,rcx,0x58
   140036622:	mov    rax,QWORD PTR [rdx+rax*8]
   140036626:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14003662b:	and    eax,0x40
   14003662e:	jmp    0x140036652
   140036630:	call   0x14002b3f4
   140036635:	and    QWORD PTR [rsp+0x20],0x0
   14003663b:	xor    r9d,r9d
   14003663e:	xor    r8d,r8d
   140036641:	xor    edx,edx
   140036643:	xor    ecx,ecx
   140036645:	mov    DWORD PTR [rax],0x9
   14003664b:	call   0x140031aac
   140036650:	xor    eax,eax
   140036652:	add    rsp,0x38
   140036656:	ret    
   140036657:	int3   
   140036658:	int3   
   140036659:	int3   
   14003665a:	int3   
   14003665b:	int3   
   14003665c:	int3   
   14003665d:	int3   
   14003665e:	int3   
   14003665f:	int3   
   140036660:	mov    rax,rcx
   140036663:	mov    ecx,0x5a4d
   140036668:	cmp    WORD PTR [rax],cx
   14003666b:	je     0x140036670
   14003666d:	xor    eax,eax
   14003666f:	ret    
   140036670:	movsxd rcx,DWORD PTR [rax+0x3c]
   140036674:	add    rcx,rax
   140036677:	xor    eax,eax
   140036679:	cmp    DWORD PTR [rcx],0x4550
   14003667f:	jne    0x14003668d
   140036681:	mov    edx,0x20b
   140036686:	cmp    WORD PTR [rcx+0x18],dx
   14003668a:	sete   al
   14003668d:	repz ret 
   14003668f:	int3   
   140036690:	movsxd r8,DWORD PTR [rcx+0x3c]
   140036694:	xor    r9d,r9d
   140036697:	mov    r10,rdx
   14003669a:	add    r8,rcx
   14003669d:	movzx  eax,WORD PTR [r8+0x14]
   1400366a2:	movzx  r11d,WORD PTR [r8+0x6]
   1400366a7:	lea    rcx,[rax+r8*1+0x18]
   1400366ac:	test   r11d,r11d
   1400366af:	je     0x1400366cf
   1400366b1:	mov    edx,DWORD PTR [rcx+0xc]
   1400366b4:	cmp    r10,rdx
   1400366b7:	jb     0x1400366c3
   1400366b9:	mov    eax,DWORD PTR [rcx+0x8]
   1400366bc:	add    eax,edx
   1400366be:	cmp    r10,rax
   1400366c1:	jb     0x1400366d2
   1400366c3:	inc    r9d
   1400366c6:	add    rcx,0x28
   1400366ca:	cmp    r9d,r11d
   1400366cd:	jb     0x1400366b1
   1400366cf:	xor    eax,eax
   1400366d1:	ret    
   1400366d2:	mov    rax,rcx
   1400366d5:	ret    
   1400366d6:	int3   
   1400366d7:	int3   
   1400366d8:	int3   
   1400366d9:	int3   
   1400366da:	int3   
   1400366db:	int3   
   1400366dc:	int3   
   1400366dd:	int3   
   1400366de:	int3   
   1400366df:	int3   
   1400366e0:	sub    rsp,0x28
   1400366e4:	mov    r8,rcx
   1400366e7:	lea    r9,[rip+0xfffffffffffc9912]        # 0x140000000
   1400366ee:	mov    rcx,r9
   1400366f1:	call   0x140036660
   1400366f6:	test   eax,eax
   1400366f8:	je     0x14003671c
   1400366fa:	sub    r8,r9
   1400366fd:	mov    rdx,r8
   140036700:	mov    rcx,r9
   140036703:	call   0x140036690
   140036708:	test   rax,rax
   14003670b:	je     0x14003671c
   14003670d:	mov    eax,DWORD PTR [rax+0x24]
   140036710:	shr    eax,0x1f
   140036713:	not    eax
   140036715:	and    eax,0x1
   140036718:	jmp    0x14003671c
   14003671a:	xor    eax,eax
   14003671c:	add    rsp,0x28
   140036720:	ret    
   140036721:	int3   
   140036722:	int3   
   140036723:	int3   
   140036724:	mov    QWORD PTR [rsp+0x8],rbx
   140036729:	mov    QWORD PTR [rsp+0x10],rsi
   14003672e:	push   rdi
   14003672f:	sub    rsp,0x30
   140036733:	xor    edi,edi
   140036735:	mov    rbx,rdx
   140036738:	mov    rsi,rcx
   14003673b:	test   rdx,rdx
   14003673e:	je     0x140036771
   140036740:	xor    edx,edx
   140036742:	lea    rax,[rdi-0x20]
   140036746:	div    rbx
   140036749:	cmp    rax,r8
   14003674c:	jae    0x140036771
   14003674e:	call   0x14002b3f4
   140036753:	and    QWORD PTR [rsp+0x20],rdi
   140036758:	xor    r9d,r9d
   14003675b:	xor    r8d,r8d
   14003675e:	xor    edx,edx
   140036760:	xor    ecx,ecx
   140036762:	mov    DWORD PTR [rax],0xc
   140036768:	call   0x140031aac
   14003676d:	xor    eax,eax
   14003676f:	jmp    0x1400367ae
   140036771:	imul   rbx,r8
   140036775:	test   rcx,rcx
   140036778:	je     0x140036782
   14003677a:	call   0x14003b454
   14003677f:	mov    rdi,rax
   140036782:	mov    rdx,rbx
   140036785:	mov    rcx,rsi
   140036788:	call   0x14002bf78
   14003678d:	mov    rsi,rax
   140036790:	test   rax,rax
   140036793:	je     0x1400367ab
   140036795:	cmp    rdi,rbx
   140036798:	jae    0x1400367ab
   14003679a:	sub    rbx,rdi
   14003679d:	lea    rcx,[rdi+rax*1]
   1400367a1:	xor    edx,edx
   1400367a3:	mov    r8,rbx
   1400367a6:	call   0x14002b280
   1400367ab:	mov    rax,rsi
   1400367ae:	mov    rbx,QWORD PTR [rsp+0x40]
   1400367b3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400367b8:	add    rsp,0x30
   1400367bc:	pop    rdi
   1400367bd:	ret    
   1400367be:	int3   
   1400367bf:	int3   
   1400367c0:	rex push rbx
   1400367c2:	sub    rsp,0x20
   1400367c6:	mov    edx,0x8
   1400367cb:	lea    ecx,[rdx+0x18]
   1400367ce:	call   0x140030134
   1400367d3:	mov    rcx,rax
   1400367d6:	mov    rbx,rax
   1400367d9:	call   0x140031ccc
   1400367de:	mov    QWORD PTR [rip+0x342e3],rax        # 0x14006aac8
   1400367e5:	mov    QWORD PTR [rip+0x342d4],rax        # 0x14006aac0
   1400367ec:	test   rbx,rbx
   1400367ef:	jne    0x1400367f6
   1400367f1:	lea    eax,[rbx+0x18]
   1400367f4:	jmp    0x1400367fc
   1400367f6:	and    QWORD PTR [rbx],0x0
   1400367fa:	xor    eax,eax
   1400367fc:	add    rsp,0x20
   140036800:	pop    rbx
   140036801:	ret    
   140036802:	int3   
   140036803:	int3   
   140036804:	mov    QWORD PTR [rsp+0x8],rbx
   140036809:	mov    QWORD PTR [rsp+0x10],rsi
   14003680e:	mov    QWORD PTR [rsp+0x18],rdi
   140036813:	push   r12
   140036815:	push   r13
   140036817:	push   r14
   140036819:	sub    rsp,0x20
   14003681d:	mov    r14,rcx
   140036820:	call   0x1400303fc
   140036825:	nop
   140036826:	mov    rcx,QWORD PTR [rip+0x3429b]        # 0x14006aac8
   14003682d:	call   0x140031ce0
   140036832:	mov    r12,rax
   140036835:	mov    rcx,QWORD PTR [rip+0x34284]        # 0x14006aac0
   14003683c:	call   0x140031ce0
   140036841:	mov    rbx,rax
   140036844:	cmp    rax,r12
   140036847:	jb     0x1400368e5
   14003684d:	mov    rdi,rax
   140036850:	sub    rdi,r12
   140036853:	lea    r13,[rdi+0x8]
   140036857:	cmp    r13,0x8
   14003685b:	jb     0x1400368e5
   140036861:	mov    rcx,r12
   140036864:	call   0x14003b454
   140036869:	mov    rsi,rax
   14003686c:	cmp    rax,r13
   14003686f:	jae    0x1400368c5
   140036871:	mov    edx,0x1000
   140036876:	cmp    rax,rdx
   140036879:	cmovb  rdx,rax
   14003687d:	add    rdx,rax
   140036880:	cmp    rdx,rax
   140036883:	jb     0x140036896
   140036885:	mov    rcx,r12
   140036888:	call   0x1400301b8
   14003688d:	xor    ebx,ebx
   14003688f:	cmp    rax,rbx
   140036892:	jne    0x1400368ae
   140036894:	jmp    0x140036898
   140036896:	xor    ebx,ebx
   140036898:	lea    rdx,[rsi+0x20]
   14003689c:	cmp    rdx,rsi
   14003689f:	jb     0x1400368e7
   1400368a1:	mov    rcx,r12
   1400368a4:	call   0x1400301b8
   1400368a9:	cmp    rax,rbx
   1400368ac:	je     0x1400368e7
   1400368ae:	sar    rdi,0x3
   1400368b2:	lea    rbx,[rax+rdi*8]
   1400368b6:	mov    rcx,rax
   1400368b9:	call   0x140031ccc
   1400368be:	mov    QWORD PTR [rip+0x34203],rax        # 0x14006aac8
   1400368c5:	mov    rcx,r14
   1400368c8:	call   0x140031ccc
   1400368cd:	mov    QWORD PTR [rbx],rax
   1400368d0:	lea    rcx,[rbx+0x8]
   1400368d4:	call   0x140031ccc
   1400368d9:	mov    QWORD PTR [rip+0x341e0],rax        # 0x14006aac0
   1400368e0:	mov    rbx,r14
   1400368e3:	jmp    0x1400368e7
   1400368e5:	xor    ebx,ebx
   1400368e7:	call   0x140030408
   1400368ec:	mov    rax,rbx
   1400368ef:	mov    rbx,QWORD PTR [rsp+0x40]
   1400368f4:	mov    rsi,QWORD PTR [rsp+0x48]
   1400368f9:	mov    rdi,QWORD PTR [rsp+0x50]
   1400368fe:	add    rsp,0x20
   140036902:	pop    r14
   140036904:	pop    r13
   140036906:	pop    r12
   140036908:	ret    
   140036909:	int3   
   14003690a:	int3   
   14003690b:	int3   
   14003690c:	sub    rsp,0x28
   140036910:	call   0x140036804
   140036915:	neg    rax
   140036918:	sbb    eax,eax
   14003691a:	neg    eax
   14003691c:	dec    eax
   14003691e:	add    rsp,0x28
   140036922:	ret    
   140036923:	int3   
   140036924:	sub    rsp,0x28
   140036928:	call   0x140031e48
   14003692d:	mov    rcx,QWORD PTR [rax+0xd0]
   140036934:	test   rcx,rcx
   140036937:	je     0x14003693d
   140036939:	call   rcx
   14003693b:	jmp    0x14003693d
   14003693d:	call   0x14002adf4
   140036942:	add    rsp,0x28
   140036946:	ret    
   140036947:	int3   
   140036948:	sub    rsp,0x28
   14003694c:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x140036924
   140036953:	call   0x140031ccc
   140036958:	mov    QWORD PTR [rip+0x340f1],rax        # 0x14006aa50
   14003695f:	add    rsp,0x28
   140036963:	ret    
   140036964:	mov    QWORD PTR [rip+0x340ed],rcx        # 0x14006aa58
   14003696b:	ret    
   14003696c:	mov    QWORD PTR [rip+0x340f5],rcx        # 0x14006aa68
   140036973:	ret    
   140036974:	mov    QWORD PTR [rsp+0x8],rbx
   140036979:	mov    QWORD PTR [rsp+0x10],rbp
   14003697e:	push   rsi
   14003697f:	push   rdi
   140036980:	push   r12
   140036982:	push   r13
   140036984:	push   r14
   140036986:	sub    rsp,0x40
   14003698a:	mov    ebp,r8d
   14003698d:	mov    r13,rdx
   140036990:	mov    r14,rcx
   140036993:	call   0x140031cd4
   140036998:	xor    ebx,ebx
   14003699a:	mov    rdi,rax
   14003699d:	cmp    QWORD PTR [rip+0x340cc],rbx        # 0x14006aa70
   1400369a4:	jne    0x140036a7a
   1400369aa:	lea    rcx,[rip+0x19abf]        # 0x140050470
   1400369b1:	call   QWORD PTR [rip+0x6939]        # 0x14003d2f0
   1400369b7:	mov    rsi,rax
   1400369ba:	test   rax,rax
   1400369bd:	je     0x140036b4f
   1400369c3:	lea    rdx,[rip+0x19a96]        # 0x140050460
   1400369ca:	mov    rcx,rax
   1400369cd:	call   QWORD PTR [rip+0x693d]        # 0x14003d310
   1400369d3:	test   rax,rax
   1400369d6:	je     0x140036b4f
   1400369dc:	mov    rcx,rax
   1400369df:	call   0x140031ccc
   1400369e4:	lea    rdx,[rip+0x19a65]        # 0x140050450
   1400369eb:	mov    rcx,rsi
   1400369ee:	mov    QWORD PTR [rip+0x3407b],rax        # 0x14006aa70
   1400369f5:	call   QWORD PTR [rip+0x6915]        # 0x14003d310
   1400369fb:	mov    rcx,rax
   1400369fe:	call   0x140031ccc
   140036a03:	lea    rdx,[rip+0x19a2e]        # 0x140050438
   140036a0a:	mov    rcx,rsi
   140036a0d:	mov    QWORD PTR [rip+0x34064],rax        # 0x14006aa78
   140036a14:	call   QWORD PTR [rip+0x68f6]        # 0x14003d310
   140036a1a:	mov    rcx,rax
   140036a1d:	call   0x140031ccc
   140036a22:	lea    rdx,[rip+0x199ef]        # 0x140050418
   140036a29:	mov    rcx,rsi
   140036a2c:	mov    QWORD PTR [rip+0x3404d],rax        # 0x14006aa80
   140036a33:	call   QWORD PTR [rip+0x68d7]        # 0x14003d310
   140036a39:	mov    rcx,rax
   140036a3c:	call   0x140031ccc
   140036a41:	mov    r11,rax
   140036a44:	mov    QWORD PTR [rip+0x34045],rax        # 0x14006aa90
   140036a4b:	test   rax,rax
   140036a4e:	je     0x140036a71
   140036a50:	lea    rdx,[rip+0x199a9]        # 0x140050400
   140036a57:	mov    rcx,rsi
   140036a5a:	call   QWORD PTR [rip+0x68b0]        # 0x14003d310
   140036a60:	mov    rcx,rax
   140036a63:	call   0x140031ccc
   140036a68:	mov    QWORD PTR [rip+0x34019],rax        # 0x14006aa88
   140036a6f:	jmp    0x140036a81
   140036a71:	mov    rax,QWORD PTR [rip+0x34010]        # 0x14006aa88
   140036a78:	jmp    0x140036a88
   140036a7a:	mov    rax,QWORD PTR [rip+0x34007]        # 0x14006aa88
   140036a81:	mov    r11,QWORD PTR [rip+0x34008]        # 0x14006aa90
   140036a88:	cmp    rax,rdi
   140036a8b:	je     0x140036af0
   140036a8d:	cmp    r11,rdi
   140036a90:	je     0x140036af0
   140036a92:	mov    rcx,rax
   140036a95:	call   0x140031ce0
   140036a9a:	mov    rcx,QWORD PTR [rip+0x33fef]        # 0x14006aa90
   140036aa1:	mov    rsi,rax
   140036aa4:	call   0x140031ce0
   140036aa9:	mov    r12,rax
   140036aac:	test   rsi,rsi
   140036aaf:	je     0x140036af0
   140036ab1:	test   rax,rax
   140036ab4:	je     0x140036af0
   140036ab6:	call   rsi
   140036ab8:	test   rax,rax
   140036abb:	je     0x140036aea
   140036abd:	lea    rcx,[rsp+0x88]
   140036ac5:	mov    r9d,0xc
   140036acb:	lea    r8,[rsp+0x30]
   140036ad0:	mov    QWORD PTR [rsp+0x20],rcx
   140036ad5:	lea    edx,[r9-0xb]
   140036ad9:	mov    rcx,rax
   140036adc:	call   r12
   140036adf:	test   eax,eax
   140036ae1:	je     0x140036aea
   140036ae3:	test   BYTE PTR [rsp+0x38],0x1
   140036ae8:	jne    0x140036af0
   140036aea:	bts    ebp,0x15
   140036aee:	jmp    0x140036b2e
   140036af0:	mov    rcx,QWORD PTR [rip+0x33f81]        # 0x14006aa78
   140036af7:	cmp    rcx,rdi
   140036afa:	je     0x140036b2e
   140036afc:	call   0x140031ce0
   140036b01:	test   rax,rax
   140036b04:	je     0x140036b2e
   140036b06:	call   rax
   140036b08:	mov    rbx,rax
   140036b0b:	test   rax,rax
   140036b0e:	je     0x140036b2e
   140036b10:	mov    rcx,QWORD PTR [rip+0x33f69]        # 0x14006aa80
   140036b17:	cmp    rcx,rdi
   140036b1a:	je     0x140036b2e
   140036b1c:	call   0x140031ce0
   140036b21:	test   rax,rax
   140036b24:	je     0x140036b2e
   140036b26:	mov    rcx,rbx
   140036b29:	call   rax
   140036b2b:	mov    rbx,rax
   140036b2e:	mov    rcx,QWORD PTR [rip+0x33f3b]        # 0x14006aa70
   140036b35:	call   0x140031ce0
   140036b3a:	test   rax,rax
   140036b3d:	je     0x140036b4f
   140036b3f:	mov    r9d,ebp
   140036b42:	mov    r8,r13
   140036b45:	mov    rdx,r14
   140036b48:	mov    rcx,rbx
   140036b4b:	call   rax
   140036b4d:	jmp    0x140036b51
   140036b4f:	xor    eax,eax
   140036b51:	mov    rbx,QWORD PTR [rsp+0x70]
   140036b56:	mov    rbp,QWORD PTR [rsp+0x78]
   140036b5b:	add    rsp,0x40
   140036b5f:	pop    r14
   140036b61:	pop    r13
   140036b63:	pop    r12
   140036b65:	pop    rdi
   140036b66:	pop    rsi
   140036b67:	ret    
   140036b68:	rex push rbx
   140036b6a:	sub    rsp,0x30
   140036b6e:	mov    r9,rcx
   140036b71:	test   rcx,rcx
   140036b74:	je     0x140036b83
   140036b76:	test   rdx,rdx
   140036b79:	je     0x140036b83
   140036b7b:	test   r8,r8
   140036b7e:	jne    0x140036bac
   140036b80:	mov    BYTE PTR [rcx],r8b
   140036b83:	call   0x14002b3f4
   140036b88:	mov    ebx,0x16
   140036b8d:	and    QWORD PTR [rsp+0x20],0x0
   140036b93:	xor    r9d,r9d
   140036b96:	xor    r8d,r8d
   140036b99:	xor    edx,edx
   140036b9b:	xor    ecx,ecx
   140036b9d:	mov    DWORD PTR [rax],ebx
   140036b9f:	call   0x140031aac
   140036ba4:	mov    eax,ebx
   140036ba6:	add    rsp,0x30
   140036baa:	pop    rbx
   140036bab:	ret    
   140036bac:	cmp    BYTE PTR [rcx],0x0
   140036baf:	je     0x140036bba
   140036bb1:	inc    rcx
   140036bb4:	sub    rdx,0x1
   140036bb8:	jne    0x140036bac
   140036bba:	test   rdx,rdx
   140036bbd:	jne    0x140036bc4
   140036bbf:	mov    BYTE PTR [r9],dl
   140036bc2:	jmp    0x140036b83
   140036bc4:	mov    al,BYTE PTR [r8]
   140036bc7:	inc    r8
   140036bca:	mov    BYTE PTR [rcx],al
   140036bcc:	inc    rcx
   140036bcf:	test   al,al
   140036bd1:	je     0x140036bd9
   140036bd3:	sub    rdx,0x1
   140036bd7:	jne    0x140036bc4
   140036bd9:	test   rdx,rdx
   140036bdc:	jne    0x140036bed
   140036bde:	mov    BYTE PTR [r9],dl
   140036be1:	call   0x14002b3f4
   140036be6:	mov    ebx,0x22
   140036beb:	jmp    0x140036b8d
   140036bed:	xor    eax,eax
   140036bef:	jmp    0x140036ba6
   140036bf1:	int3   
   140036bf2:	int3   
   140036bf3:	int3   
   140036bf4:	sub    rsp,0x38
   140036bf8:	test   ecx,ecx
   140036bfa:	js     0x140036c1c
   140036bfc:	cmp    ecx,0x2
   140036bff:	jle    0x140036c0e
   140036c01:	cmp    ecx,0x3
   140036c04:	jne    0x140036c1c
   140036c06:	mov    eax,DWORD PTR [rip+0x3306c]        # 0x140069c78
   140036c0c:	jmp    0x140036c3f
   140036c0e:	mov    eax,DWORD PTR [rip+0x33064]        # 0x140069c78
   140036c14:	mov    DWORD PTR [rip+0x3305e],ecx        # 0x140069c78
   140036c1a:	jmp    0x140036c3f
   140036c1c:	call   0x14002b3f4
   140036c21:	and    QWORD PTR [rsp+0x20],0x0
   140036c27:	xor    r9d,r9d
   140036c2a:	xor    r8d,r8d
   140036c2d:	xor    edx,edx
   140036c2f:	xor    ecx,ecx
   140036c31:	mov    DWORD PTR [rax],0x16
   140036c37:	call   0x140031aac
   140036c3c:	or     eax,0xffffffff
   140036c3f:	add    rsp,0x38
   140036c43:	ret    
   140036c44:	mov    rcx,QWORD PTR [rip+0x2fc65]        # 0x1400668b0
   140036c4b:	xor    eax,eax
   140036c4d:	or     rcx,0x1
   140036c51:	cmp    QWORD PTR [rip+0x33e40],rcx        # 0x14006aa98
   140036c58:	sete   al
   140036c5b:	ret    
   140036c5c:	mov    QWORD PTR [rsp+0x8],rbx
   140036c61:	mov    WORD PTR [rsp+0x20],r9w
   140036c67:	push   rbp
   140036c68:	push   rsi
   140036c69:	push   rdi
   140036c6a:	sub    rsp,0x60
   140036c6e:	xor    ebp,ebp
   140036c70:	mov    rdi,r8
   140036c73:	mov    rsi,rdx
   140036c76:	mov    rbx,rcx
   140036c79:	cmp    rdx,rbp
   140036c7c:	jne    0x140036c91
   140036c7e:	cmp    r8,rbp
   140036c81:	jbe    0x140036c91
   140036c83:	cmp    rcx,rbp
   140036c86:	je     0x140036c8a
   140036c88:	mov    DWORD PTR [rcx],ebp
   140036c8a:	xor    eax,eax
   140036c8c:	jmp    0x140036d35
   140036c91:	cmp    rcx,rbp
   140036c94:	je     0x140036c99
   140036c96:	or     DWORD PTR [rcx],0xffffffff
   140036c99:	cmp    r8,0x7fffffff
   140036ca0:	jbe    0x140036cc6
   140036ca2:	call   0x14002b3f4
   140036ca7:	mov    ebx,0x16
   140036cac:	xor    r9d,r9d
   140036caf:	xor    r8d,r8d
   140036cb2:	xor    edx,edx
   140036cb4:	xor    ecx,ecx
   140036cb6:	mov    DWORD PTR [rax],ebx
   140036cb8:	mov    QWORD PTR [rsp+0x20],rbp
   140036cbd:	call   0x140031aac
   140036cc2:	mov    eax,ebx
   140036cc4:	jmp    0x140036d35
   140036cc6:	mov    rdx,QWORD PTR [rsp+0xa0]
   140036cce:	lea    rcx,[rsp+0x40]
   140036cd3:	call   0x14002b47c
   140036cd8:	mov    r11,QWORD PTR [rsp+0x40]
   140036cdd:	cmp    DWORD PTR [r11+0x14],ebp
   140036ce1:	jne    0x140036db4
   140036ce7:	movzx  eax,WORD PTR [rsp+0x98]
   140036cef:	mov    ecx,0xff
   140036cf4:	cmp    ax,cx
   140036cf7:	jbe    0x140036d45
   140036cf9:	cmp    rsi,rbp
   140036cfc:	je     0x140036d10
   140036cfe:	cmp    rdi,rbp
   140036d01:	jbe    0x140036d10
   140036d03:	mov    r8,rdi
   140036d06:	xor    edx,edx
   140036d08:	mov    rcx,rsi
   140036d0b:	call   0x14002b280
   140036d10:	call   0x14002b3f4
   140036d15:	mov    DWORD PTR [rax],0x2a
   140036d1b:	call   0x14002b3f4
   140036d20:	mov    eax,DWORD PTR [rax]
   140036d22:	cmp    BYTE PTR [rsp+0x58],bpl
   140036d27:	je     0x140036d35
   140036d29:	mov    rcx,QWORD PTR [rsp+0x50]
   140036d2e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140036d35:	mov    rbx,QWORD PTR [rsp+0x80]
   140036d3d:	add    rsp,0x60
   140036d41:	pop    rdi
   140036d42:	pop    rsi
   140036d43:	pop    rbp
   140036d44:	ret    
   140036d45:	cmp    rsi,rbp
   140036d48:	je     0x140036d8d
   140036d4a:	cmp    rdi,rbp
   140036d4d:	ja     0x140036d8b
   140036d4f:	call   0x14002b3f4
   140036d54:	mov    ebx,0x22
   140036d59:	xor    r9d,r9d
   140036d5c:	xor    r8d,r8d
   140036d5f:	xor    edx,edx
   140036d61:	xor    ecx,ecx
   140036d63:	mov    DWORD PTR [rax],ebx
   140036d65:	mov    QWORD PTR [rsp+0x20],rbp
   140036d6a:	call   0x140031aac
   140036d6f:	cmp    BYTE PTR [rsp+0x58],bpl
   140036d74:	je     0x140036cc2
   140036d7a:	mov    rcx,QWORD PTR [rsp+0x50]
   140036d7f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140036d86:	jmp    0x140036cc2
   140036d8b:	mov    BYTE PTR [rsi],al
   140036d8d:	cmp    rbx,rbp
   140036d90:	je     0x140036d98
   140036d92:	mov    DWORD PTR [rbx],0x1
   140036d98:	cmp    BYTE PTR [rsp+0x58],bpl
   140036d9d:	je     0x140036c8a
   140036da3:	mov    rax,QWORD PTR [rsp+0x50]
   140036da8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140036daf:	jmp    0x140036c8a
   140036db4:	lea    rax,[rsp+0x88]
   140036dbc:	mov    DWORD PTR [rsp+0x88],ebp
   140036dc3:	mov    ecx,DWORD PTR [r11+0x4]
   140036dc7:	mov    QWORD PTR [rsp+0x38],rax
   140036dcc:	mov    QWORD PTR [rsp+0x30],rbp
   140036dd1:	lea    r8,[rsp+0x98]
   140036dd9:	mov    r9d,0x1
   140036ddf:	xor    edx,edx
   140036de1:	mov    DWORD PTR [rsp+0x28],edi
   140036de5:	mov    QWORD PTR [rsp+0x20],rsi
   140036dea:	call   QWORD PTR [rip+0x62a8]        # 0x14003d098
   140036df0:	cmp    eax,ebp
   140036df2:	je     0x140036e0a
   140036df4:	cmp    DWORD PTR [rsp+0x88],ebp
   140036dfb:	jne    0x140036d10
   140036e01:	cmp    rbx,rbp
   140036e04:	je     0x140036d98
   140036e06:	mov    DWORD PTR [rbx],eax
   140036e08:	jmp    0x140036d98
   140036e0a:	call   QWORD PTR [rip+0x6528]        # 0x14003d338
   140036e10:	cmp    eax,0x7a
   140036e13:	jne    0x140036d10
   140036e19:	cmp    rsi,rbp
   140036e1c:	je     0x140036e30
   140036e1e:	cmp    rdi,rbp
   140036e21:	jbe    0x140036e30
   140036e23:	mov    r8,rdi
   140036e26:	xor    edx,edx
   140036e28:	mov    rcx,rsi
   140036e2b:	call   0x14002b280
   140036e30:	call   0x14002b3f4
   140036e35:	mov    ebx,0x22
   140036e3a:	xor    r9d,r9d
   140036e3d:	xor    r8d,r8d
   140036e40:	xor    edx,edx
   140036e42:	xor    ecx,ecx
   140036e44:	mov    DWORD PTR [rax],ebx
   140036e46:	mov    QWORD PTR [rsp+0x20],rbp
   140036e4b:	call   0x140031aac
   140036e50:	cmp    BYTE PTR [rsp+0x58],bpl
   140036e55:	je     0x140036cc2
   140036e5b:	mov    rax,QWORD PTR [rsp+0x50]
   140036e60:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140036e67:	jmp    0x140036cc2
   140036e6c:	sub    rsp,0x38
   140036e70:	and    QWORD PTR [rsp+0x20],0x0
   140036e76:	call   0x140036c5c
   140036e7b:	add    rsp,0x38
   140036e7f:	ret    
   140036e80:	and    DWORD PTR [rip+0x33c31],0x0        # 0x14006aab8
   140036e87:	ret    
   140036e88:	mov    DWORD PTR [rsp+0x20],r9d
   140036e8d:	push   rbp
   140036e8e:	push   r12
   140036e90:	push   r13
   140036e92:	push   r14
   140036e94:	push   r15
   140036e96:	sub    rsp,0x40
   140036e9a:	lea    rbp,[rsp+0x30]
   140036e9f:	mov    QWORD PTR [rbp+0x40],rbx
   140036ea3:	mov    QWORD PTR [rbp+0x48],rsi
   140036ea7:	mov    QWORD PTR [rbp+0x50],rdi
   140036eab:	mov    rax,QWORD PTR [rip+0x2f9fe]        # 0x1400668b0
   140036eb2:	xor    rax,rbp
   140036eb5:	mov    QWORD PTR [rbp+0x8],rax
   140036eb9:	mov    r9d,DWORD PTR [rip+0x33be0]        # 0x14006aaa0
   140036ec0:	mov    edi,0x1
   140036ec5:	xor    ebx,ebx
   140036ec7:	mov    r14,r8
   140036eca:	mov    r15d,edx
   140036ecd:	mov    r13,rcx
   140036ed0:	lea    esi,[rdi+0x1]
   140036ed3:	cmp    r9d,ebx
   140036ed6:	jne    0x140036f15
   140036ed8:	lea    r9,[rbp+0x0]
   140036edc:	lea    rdx,[rip+0x7759]        # 0x14003e63c
   140036ee3:	mov    r8d,edi
   140036ee6:	mov    ecx,edi
   140036ee8:	call   QWORD PTR [rip+0x63b2]        # 0x14003d2a0
   140036eee:	cmp    eax,ebx
   140036ef0:	je     0x140036efa
   140036ef2:	mov    DWORD PTR [rip+0x33ba8],edi        # 0x14006aaa0
   140036ef8:	jmp    0x140036f30
   140036efa:	call   QWORD PTR [rip+0x6438]        # 0x14003d338
   140036f00:	mov    r9d,DWORD PTR [rip+0x33b99]        # 0x14006aaa0
   140036f07:	cmp    eax,0x78
   140036f0a:	cmove  r9d,esi
   140036f0e:	mov    DWORD PTR [rip+0x33b8b],r9d        # 0x14006aaa0
   140036f15:	cmp    r9d,esi
   140036f18:	je     0x140037044
   140036f1e:	cmp    r9d,ebx
   140036f21:	je     0x140037044
   140036f27:	cmp    r9d,edi
   140036f2a:	jne    0x140037073
   140036f30:	mov    esi,DWORD PTR [rbp+0x68]
   140036f33:	cmp    esi,ebx
   140036f35:	jne    0x140036f3e
   140036f37:	mov    rax,QWORD PTR [r13+0x0]
   140036f3b:	mov    esi,DWORD PTR [rax+0x4]
   140036f3e:	neg    DWORD PTR [rbp+0x78]
   140036f41:	mov    r9d,DWORD PTR [rbp+0x58]
   140036f45:	mov    r8,r14
   140036f48:	sbb    edx,edx
   140036f4a:	mov    ecx,esi
   140036f4c:	mov    DWORD PTR [rsp+0x28],ebx
   140036f50:	and    edx,0x8
   140036f53:	mov    QWORD PTR [rsp+0x20],rbx
   140036f58:	add    edx,edi
   140036f5a:	call   QWORD PTR [rip+0x6150]        # 0x14003d0b0
   140036f60:	movsxd r12,eax
   140036f63:	cmp    r12d,ebx
   140036f66:	je     0x140037073
   140036f6c:	mov    r13d,0xdddd
   140036f72:	jle    0x140036fdc
   140036f74:	movabs rax,0x7ffffffffffffff0
   140036f7e:	cmp    r12,rax
   140036f81:	ja     0x140036fdc
   140036f83:	lea    rcx,[r12+r12*1+0x10]
   140036f88:	cmp    rcx,0x400
   140036f8f:	ja     0x140036fc6
   140036f91:	lea    rax,[rcx+0xf]
   140036f95:	cmp    rax,rcx
   140036f98:	ja     0x140036fa4
   140036f9a:	movabs rax,0xffffffffffffff0
   140036fa4:	and    rax,0xfffffffffffffff0
   140036fa8:	call   0x14003c600
   140036fad:	sub    rsp,rax
   140036fb0:	lea    rdi,[rsp+0x30]
   140036fb5:	cmp    rdi,rbx
   140036fb8:	je     0x140037073
   140036fbe:	mov    DWORD PTR [rdi],0xcccc
   140036fc4:	jmp    0x140036fd6
   140036fc6:	call   0x14002c04c
   140036fcb:	mov    rdi,rax
   140036fce:	cmp    rax,rbx
   140036fd1:	je     0x140036fdf
   140036fd3:	mov    DWORD PTR [rax],r13d
   140036fd6:	add    rdi,0x10
   140036fda:	jmp    0x140036fdf
   140036fdc:	mov    rdi,rbx
   140036fdf:	cmp    rdi,rbx
   140036fe2:	je     0x140037073
   140036fe8:	mov    r8,r12
   140036feb:	xor    edx,edx
   140036fed:	mov    rcx,rdi
   140036ff0:	add    r8,r8
   140036ff3:	call   0x14002b280
   140036ff8:	mov    r9d,DWORD PTR [rbp+0x58]
   140036ffc:	mov    r8,r14
   140036fff:	mov    edx,0x1
   140037004:	mov    ecx,esi
   140037006:	mov    DWORD PTR [rsp+0x28],r12d
   14003700b:	mov    QWORD PTR [rsp+0x20],rdi
   140037010:	call   QWORD PTR [rip+0x609a]        # 0x14003d0b0
   140037016:	cmp    eax,ebx
   140037018:	je     0x14003702f
   14003701a:	mov    r9,QWORD PTR [rbp+0x60]
   14003701e:	mov    r8d,eax
   140037021:	mov    rdx,rdi
   140037024:	mov    ecx,r15d
   140037027:	call   QWORD PTR [rip+0x6273]        # 0x14003d2a0
   14003702d:	mov    ebx,eax
   14003702f:	lea    rcx,[rdi-0x10]
   140037033:	cmp    DWORD PTR [rcx],r13d
   140037036:	jne    0x14003703d
   140037038:	call   0x14002b36c
   14003703d:	mov    eax,ebx
   14003703f:	jmp    0x1400370cc
   140037044:	mov    r12d,DWORD PTR [rbp+0x70]
   140037048:	mov    rdi,rbx
   14003704b:	cmp    r12d,ebx
   14003704e:	jne    0x140037058
   140037050:	mov    rax,QWORD PTR [r13+0x0]
   140037054:	mov    r12d,DWORD PTR [rax+0x14]
   140037058:	mov    esi,DWORD PTR [rbp+0x68]
   14003705b:	cmp    esi,ebx
   14003705d:	jne    0x140037066
   14003705f:	mov    rax,QWORD PTR [r13+0x0]
   140037063:	mov    esi,DWORD PTR [rax+0x4]
   140037066:	mov    ecx,r12d
   140037069:	call   0x1400385d8
   14003706e:	cmp    eax,0xffffffff
   140037071:	jne    0x140037077
   140037073:	xor    eax,eax
   140037075:	jmp    0x1400370cc
   140037077:	cmp    eax,esi
   140037079:	je     0x14003709f
   14003707b:	lea    r9,[rbp+0x58]
   14003707f:	mov    r8,r14
   140037082:	mov    edx,eax
   140037084:	mov    ecx,esi
   140037086:	mov    DWORD PTR [rsp+0x28],ebx
   14003708a:	mov    QWORD PTR [rsp+0x20],rbx
   14003708f:	call   0x14003862c
   140037094:	mov    rdi,rax
   140037097:	cmp    rax,rbx
   14003709a:	je     0x140037073
   14003709c:	mov    r14,rax
   14003709f:	mov    rax,QWORD PTR [rbp+0x60]
   1400370a3:	mov    r9d,DWORD PTR [rbp+0x58]
   1400370a7:	mov    r8,r14
   1400370aa:	mov    edx,r15d
   1400370ad:	mov    ecx,r12d
   1400370b0:	mov    QWORD PTR [rsp+0x20],rax
   1400370b5:	call   QWORD PTR [rip+0x61dd]        # 0x14003d298
   1400370bb:	mov    esi,eax
   1400370bd:	cmp    rdi,rbx
   1400370c0:	je     0x1400370ca
   1400370c2:	mov    rcx,rdi
   1400370c5:	call   0x14002b36c
   1400370ca:	mov    eax,esi
   1400370cc:	mov    rcx,QWORD PTR [rbp+0x8]
   1400370d0:	xor    rcx,rbp
   1400370d3:	call   0x14002b250
   1400370d8:	mov    rbx,QWORD PTR [rbp+0x40]
   1400370dc:	mov    rsi,QWORD PTR [rbp+0x48]
   1400370e0:	mov    rdi,QWORD PTR [rbp+0x50]
   1400370e4:	lea    rsp,[rbp+0x10]
   1400370e8:	pop    r15
   1400370ea:	pop    r14
   1400370ec:	pop    r13
   1400370ee:	pop    r12
   1400370f0:	pop    rbp
   1400370f1:	ret    
   1400370f2:	int3   
   1400370f3:	int3   
   1400370f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400370f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400370fe:	push   rdi
   1400370ff:	sub    rsp,0x60
   140037103:	mov    esi,edx
   140037105:	mov    rdx,rcx
   140037108:	lea    rcx,[rsp+0x40]
   14003710d:	mov    ebx,r9d
   140037110:	mov    rdi,r8
   140037113:	call   0x14002b47c
   140037118:	mov    eax,DWORD PTR [rsp+0xa0]
   14003711f:	mov    r11d,DWORD PTR [rsp+0xa8]
   140037127:	lea    rcx,[rsp+0x40]
   14003712c:	mov    DWORD PTR [rsp+0x38],r11d
   140037131:	mov    DWORD PTR [rsp+0x30],eax
   140037135:	mov    eax,DWORD PTR [rsp+0x98]
   14003713c:	mov    DWORD PTR [rsp+0x28],eax
   140037140:	mov    rax,QWORD PTR [rsp+0x90]
   140037148:	mov    r9d,ebx
   14003714b:	mov    r8,rdi
   14003714e:	mov    edx,esi
   140037150:	mov    QWORD PTR [rsp+0x20],rax
   140037155:	call   0x140036e88
   14003715a:	cmp    BYTE PTR [rsp+0x58],0x0
   14003715f:	je     0x14003716d
   140037161:	mov    rcx,QWORD PTR [rsp+0x50]
   140037166:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003716d:	mov    rbx,QWORD PTR [rsp+0x70]
   140037172:	mov    rsi,QWORD PTR [rsp+0x78]
   140037177:	add    rsp,0x60
   14003717b:	pop    rdi
   14003717c:	ret    
   14003717d:	int3   
   14003717e:	int3   
   14003717f:	int3   
   140037180:	test   rcx,rcx
   140037183:	je     0x140037369
   140037189:	push   rbx
   14003718a:	sub    rsp,0x20
   14003718e:	mov    rbx,rcx
   140037191:	mov    rcx,QWORD PTR [rcx+0x8]
   140037195:	call   0x14002b36c
   14003719a:	mov    rcx,QWORD PTR [rbx+0x10]
   14003719e:	call   0x14002b36c
   1400371a3:	mov    rcx,QWORD PTR [rbx+0x18]
   1400371a7:	call   0x14002b36c
   1400371ac:	mov    rcx,QWORD PTR [rbx+0x20]
   1400371b0:	call   0x14002b36c
   1400371b5:	mov    rcx,QWORD PTR [rbx+0x28]
   1400371b9:	call   0x14002b36c
   1400371be:	mov    rcx,QWORD PTR [rbx+0x30]
   1400371c2:	call   0x14002b36c
   1400371c7:	mov    rcx,QWORD PTR [rbx]
   1400371ca:	call   0x14002b36c
   1400371cf:	mov    rcx,QWORD PTR [rbx+0x40]
   1400371d3:	call   0x14002b36c
   1400371d8:	mov    rcx,QWORD PTR [rbx+0x48]
   1400371dc:	call   0x14002b36c
   1400371e1:	mov    rcx,QWORD PTR [rbx+0x50]
   1400371e5:	call   0x14002b36c
   1400371ea:	mov    rcx,QWORD PTR [rbx+0x58]
   1400371ee:	call   0x14002b36c
   1400371f3:	mov    rcx,QWORD PTR [rbx+0x60]
   1400371f7:	call   0x14002b36c
   1400371fc:	mov    rcx,QWORD PTR [rbx+0x68]
   140037200:	call   0x14002b36c
   140037205:	mov    rcx,QWORD PTR [rbx+0x38]
   140037209:	call   0x14002b36c
   14003720e:	mov    rcx,QWORD PTR [rbx+0x70]
   140037212:	call   0x14002b36c
   140037217:	mov    rcx,QWORD PTR [rbx+0x78]
   14003721b:	call   0x14002b36c
   140037220:	mov    rcx,QWORD PTR [rbx+0x80]
   140037227:	call   0x14002b36c
   14003722c:	mov    rcx,QWORD PTR [rbx+0x88]
   140037233:	call   0x14002b36c
   140037238:	mov    rcx,QWORD PTR [rbx+0x90]
   14003723f:	call   0x14002b36c
   140037244:	mov    rcx,QWORD PTR [rbx+0x98]
   14003724b:	call   0x14002b36c
   140037250:	mov    rcx,QWORD PTR [rbx+0xa0]
   140037257:	call   0x14002b36c
   14003725c:	mov    rcx,QWORD PTR [rbx+0xa8]
   140037263:	call   0x14002b36c
   140037268:	mov    rcx,QWORD PTR [rbx+0xb0]
   14003726f:	call   0x14002b36c
   140037274:	mov    rcx,QWORD PTR [rbx+0xb8]
   14003727b:	call   0x14002b36c
   140037280:	mov    rcx,QWORD PTR [rbx+0xc0]
   140037287:	call   0x14002b36c
   14003728c:	mov    rcx,QWORD PTR [rbx+0xc8]
   140037293:	call   0x14002b36c
   140037298:	mov    rcx,QWORD PTR [rbx+0xd0]
   14003729f:	call   0x14002b36c
   1400372a4:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400372ab:	call   0x14002b36c
   1400372b0:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400372b7:	call   0x14002b36c
   1400372bc:	mov    rcx,QWORD PTR [rbx+0xe8]
   1400372c3:	call   0x14002b36c
   1400372c8:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400372cf:	call   0x14002b36c
   1400372d4:	mov    rcx,QWORD PTR [rbx+0xf8]
   1400372db:	call   0x14002b36c
   1400372e0:	mov    rcx,QWORD PTR [rbx+0x100]
   1400372e7:	call   0x14002b36c
   1400372ec:	mov    rcx,QWORD PTR [rbx+0x108]
   1400372f3:	call   0x14002b36c
   1400372f8:	mov    rcx,QWORD PTR [rbx+0x110]
   1400372ff:	call   0x14002b36c
   140037304:	mov    rcx,QWORD PTR [rbx+0x118]
   14003730b:	call   0x14002b36c
   140037310:	mov    rcx,QWORD PTR [rbx+0x120]
   140037317:	call   0x14002b36c
   14003731c:	mov    rcx,QWORD PTR [rbx+0x128]
   140037323:	call   0x14002b36c
   140037328:	mov    rcx,QWORD PTR [rbx+0x130]
   14003732f:	call   0x14002b36c
   140037334:	mov    rcx,QWORD PTR [rbx+0x138]
   14003733b:	call   0x14002b36c
   140037340:	mov    rcx,QWORD PTR [rbx+0x140]
   140037347:	call   0x14002b36c
   14003734c:	mov    rcx,QWORD PTR [rbx+0x148]
   140037353:	call   0x14002b36c
   140037358:	mov    rcx,QWORD PTR [rbx+0x150]
   14003735f:	call   0x14002b36c
   140037364:	add    rsp,0x20
   140037368:	pop    rbx
   140037369:	ret    
   14003736a:	int3   
   14003736b:	int3   
   14003736c:	test   rcx,rcx
   14003736f:	je     0x1400373b3
   140037371:	push   rbx
   140037372:	sub    rsp,0x20
   140037376:	mov    rbx,rcx
   140037379:	mov    rcx,QWORD PTR [rcx]
   14003737c:	cmp    rcx,QWORD PTR [rip+0x2f6dd]        # 0x140066a60
   140037383:	je     0x14003738a
   140037385:	call   0x14002b36c
   14003738a:	mov    rcx,QWORD PTR [rbx+0x8]
   14003738e:	cmp    rcx,QWORD PTR [rip+0x2f6d3]        # 0x140066a68
   140037395:	je     0x14003739c
   140037397:	call   0x14002b36c
   14003739c:	mov    rcx,QWORD PTR [rbx+0x10]
   1400373a0:	cmp    rcx,QWORD PTR [rip+0x2f6c9]        # 0x140066a70
   1400373a7:	je     0x1400373ae
   1400373a9:	call   0x14002b36c
   1400373ae:	add    rsp,0x20
   1400373b2:	pop    rbx
   1400373b3:	ret    
   1400373b4:	test   rcx,rcx
   1400373b7:	je     0x140037448
   1400373bd:	push   rbx
   1400373be:	sub    rsp,0x20
   1400373c2:	mov    rbx,rcx
   1400373c5:	mov    rcx,QWORD PTR [rcx+0x18]
   1400373c9:	cmp    rcx,QWORD PTR [rip+0x2f6a8]        # 0x140066a78
   1400373d0:	je     0x1400373d7
   1400373d2:	call   0x14002b36c
   1400373d7:	mov    rcx,QWORD PTR [rbx+0x20]
   1400373db:	cmp    rcx,QWORD PTR [rip+0x2f69e]        # 0x140066a80
   1400373e2:	je     0x1400373e9
   1400373e4:	call   0x14002b36c
   1400373e9:	mov    rcx,QWORD PTR [rbx+0x28]
   1400373ed:	cmp    rcx,QWORD PTR [rip+0x2f694]        # 0x140066a88
   1400373f4:	je     0x1400373fb
   1400373f6:	call   0x14002b36c
   1400373fb:	mov    rcx,QWORD PTR [rbx+0x30]
   1400373ff:	cmp    rcx,QWORD PTR [rip+0x2f68a]        # 0x140066a90
   140037406:	je     0x14003740d
   140037408:	call   0x14002b36c
   14003740d:	mov    rcx,QWORD PTR [rbx+0x38]
   140037411:	cmp    rcx,QWORD PTR [rip+0x2f680]        # 0x140066a98
   140037418:	je     0x14003741f
   14003741a:	call   0x14002b36c
   14003741f:	mov    rcx,QWORD PTR [rbx+0x40]
   140037423:	cmp    rcx,QWORD PTR [rip+0x2f676]        # 0x140066aa0
   14003742a:	je     0x140037431
   14003742c:	call   0x14002b36c
   140037431:	mov    rcx,QWORD PTR [rbx+0x48]
   140037435:	cmp    rcx,QWORD PTR [rip+0x2f66c]        # 0x140066aa8
   14003743c:	je     0x140037443
   14003743e:	call   0x14002b36c
   140037443:	add    rsp,0x20
   140037447:	pop    rbx
   140037448:	ret    
   140037449:	int3   
   14003744a:	int3   
   14003744b:	int3   
   14003744c:	mov    QWORD PTR [rsp+0x8],rbx
   140037451:	mov    QWORD PTR [rsp+0x10],rdi
   140037456:	xor    r10d,r10d
   140037459:	mov    r11d,ecx
   14003745c:	cmp    DWORD PTR [rsp+0x28],r10d
   140037461:	je     0x1400374c1
   140037463:	mov    r10,QWORD PTR [r8]
   140037466:	jmp    0x14003749b
   140037468:	mov    eax,0x66666667
   14003746d:	imul   r11d
   140037470:	sar    edx,0x2
   140037473:	mov    eax,edx
   140037475:	shr    eax,0x1f
   140037478:	add    edx,eax
   14003747a:	mov    al,dl
   14003747c:	shl    al,0x2
   14003747f:	lea    ecx,[rax+rdx*1]
   140037482:	add    cl,cl
   140037484:	sub    r11b,cl
   140037487:	add    r11b,0x30
   14003748b:	mov    BYTE PTR [r10],r11b
   14003748e:	dec    QWORD PTR [r9]
   140037491:	inc    r10
   140037494:	mov    r11d,edx
   140037497:	test   edx,edx
   140037499:	jle    0x1400374a1
   14003749b:	cmp    QWORD PTR [r9],0x1
   14003749f:	ja     0x140037468
   1400374a1:	mov    rdx,QWORD PTR [r8]
   1400374a4:	mov    QWORD PTR [r8],r10
   1400374a7:	dec    r10
   1400374aa:	mov    al,BYTE PTR [rdx]
   1400374ac:	mov    cl,BYTE PTR [r10]
   1400374af:	mov    BYTE PTR [r10],al
   1400374b2:	mov    BYTE PTR [rdx],cl
   1400374b4:	inc    rdx
   1400374b7:	dec    r10
   1400374ba:	cmp    rdx,r10
   1400374bd:	jb     0x1400374aa
   1400374bf:	jmp    0x14003751b
   1400374c1:	movsxd rax,edx
   1400374c4:	cmp    rax,QWORD PTR [r9]
   1400374c7:	jae    0x140037518
   1400374c9:	dec    edx
   1400374cb:	movsxd rdi,edx
   1400374ce:	lea    ebx,[rdx+0x1]
   1400374d1:	test   ebx,ebx
   1400374d3:	je     0x14003750d
   1400374d5:	mov    eax,0x66666667
   1400374da:	inc    r10d
   1400374dd:	imul   r11d
   1400374e0:	sar    edx,0x2
   1400374e3:	mov    eax,edx
   1400374e5:	shr    eax,0x1f
   1400374e8:	add    edx,eax
   1400374ea:	mov    al,dl
   1400374ec:	shl    al,0x2
   1400374ef:	lea    ecx,[rax+rdx*1]
   1400374f2:	mov    rax,QWORD PTR [r8]
   1400374f5:	add    cl,cl
   1400374f7:	sub    r11b,cl
   1400374fa:	add    r11b,0x30
   1400374fe:	mov    BYTE PTR [rdi+rax*1],r11b
   140037502:	dec    rdi
   140037505:	sub    ebx,0x1
   140037508:	mov    r11d,edx
   14003750b:	jne    0x1400374d5
   14003750d:	movsxd rax,r10d
   140037510:	add    QWORD PTR [r8],rax
   140037513:	sub    QWORD PTR [r9],rax
   140037516:	jmp    0x14003751b
   140037518:	and    QWORD PTR [r9],r10
   14003751b:	mov    rbx,QWORD PTR [rsp+0x8]
   140037520:	mov    rdi,QWORD PTR [rsp+0x10]
   140037525:	ret    
   140037526:	int3   
   140037527:	int3   
   140037528:	mov    rax,rsp
   14003752b:	mov    QWORD PTR [rax+0x8],rbx
   14003752f:	mov    QWORD PTR [rax+0x10],rbp
   140037533:	mov    QWORD PTR [rax+0x18],rsi
   140037537:	mov    QWORD PTR [rax+0x20],rdi
   14003753b:	push   r12
   14003753d:	push   r13
   14003753f:	push   r14
   140037541:	sub    rsp,0x30
   140037545:	movsx  r10d,dl
   140037549:	mov    rdi,r9
   14003754c:	mov    rsi,r8
   14003754f:	cmp    r10d,0x59
   140037553:	mov    rbp,rcx
   140037556:	mov    r14d,0x1
   14003755c:	jg     0x140037857
   140037562:	je     0x140037806
   140037568:	cmp    r10d,0x49
   14003756c:	jg     0x1400376f0
   140037572:	je     0x1400376b6
   140037578:	sub    r10d,0x4
   14003757c:	je     0x140037b7a
   140037582:	sub    r10d,0x9
   140037586:	je     0x140037b7a
   14003758c:	sub    r10d,0x18
   140037590:	je     0x1400376a0
   140037596:	sub    r10d,0x1c
   14003759a:	je     0x14003764d
   1400375a0:	sub    r10d,r14d
   1400375a3:	je     0x140037601
   1400375a5:	lea    ecx,[r14+0x5]
   1400375a9:	cmp    r10d,ecx
   1400375ac:	jne    0x1400375e0
   1400375ae:	mov    ecx,DWORD PTR [r8+0x8]
   1400375b2:	xor    ebx,ebx
   1400375b4:	cmp    ecx,ebx
   1400375b6:	jl     0x1400375c1
   1400375b8:	cmp    ecx,0x17
   1400375bb:	jle    0x1400378cb
   1400375c1:	call   0x14002b3f4
   1400375c6:	xor    r9d,r9d
   1400375c9:	xor    r8d,r8d
   1400375cc:	xor    edx,edx
   1400375ce:	xor    ecx,ecx
   1400375d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400375d5:	mov    DWORD PTR [rax],0x16
   1400375db:	call   0x140031aac
   1400375e0:	xor    eax,eax
   1400375e2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400375e7:	mov    rbp,QWORD PTR [rsp+0x58]
   1400375ec:	mov    rsi,QWORD PTR [rsp+0x60]
   1400375f1:	mov    rdi,QWORD PTR [rsp+0x68]
   1400375f6:	add    rsp,0x30
   1400375fa:	pop    r14
   1400375fc:	pop    r13
   1400375fe:	pop    r12
   140037600:	ret    
   140037601:	xor    ebx,ebx
   140037603:	cmp    DWORD PTR [r8+0x10],ebx
   140037607:	jl     0x1400375c1
   140037609:	cmp    DWORD PTR [r8+0x10],0xb
   14003760e:	jg     0x1400375c1
   140037610:	movsxd rcx,DWORD PTR [r8+0x10]
   140037614:	mov    rax,QWORD PTR [rsp+0x78]
   140037619:	mov    rdx,QWORD PTR [rax+rcx*8+0xd0]
   140037621:	mov    rcx,QWORD PTR [rsp+0x70]
   140037626:	jmp    0x140037643
   140037628:	mov    r8b,BYTE PTR [rdx]
   14003762b:	cmp    r8b,bl
   14003762e:	je     0x140037b7a
   140037634:	mov    rax,QWORD PTR [r9]
   140037637:	add    rdx,r14
   14003763a:	mov    BYTE PTR [rax],r8b
   14003763d:	add    QWORD PTR [r9],r14
   140037640:	dec    QWORD PTR [rcx]
   140037643:	cmp    QWORD PTR [rcx],rbx
   140037646:	jne    0x140037628
   140037648:	jmp    0x140037b7a
   14003764d:	xor    ebx,ebx
   14003764f:	cmp    DWORD PTR [r8+0x18],ebx
   140037653:	jl     0x1400375c1
   140037659:	lea    ecx,[rbx+0x6]
   14003765c:	cmp    DWORD PTR [r8+0x18],ecx
   140037660:	jg     0x1400375c1
   140037666:	movsxd rcx,DWORD PTR [r8+0x18]
   14003766a:	mov    rax,QWORD PTR [rsp+0x78]
   14003766f:	mov    rdx,QWORD PTR [rax+rcx*8+0x38]
   140037674:	mov    rcx,QWORD PTR [rsp+0x70]
   140037679:	jmp    0x140037696
   14003767b:	mov    r8b,BYTE PTR [rdx]
   14003767e:	cmp    r8b,bl
   140037681:	je     0x140037b7a
   140037687:	mov    rax,QWORD PTR [r9]
   14003768a:	add    rdx,r14
   14003768d:	mov    BYTE PTR [rax],r8b
   140037690:	add    QWORD PTR [r9],r14
   140037693:	dec    QWORD PTR [rcx]
   140037696:	cmp    QWORD PTR [rcx],rbx
   140037699:	jne    0x14003767b
   14003769b:	jmp    0x140037b7a
   1400376a0:	mov    rax,QWORD PTR [r9]
   1400376a3:	mov    BYTE PTR [rax],0x25
   1400376a6:	mov    rax,QWORD PTR [rsp+0x70]
   1400376ab:	add    QWORD PTR [r9],r14
   1400376ae:	dec    QWORD PTR [rax]
   1400376b1:	jmp    0x140037b7a
   1400376b6:	mov    ecx,DWORD PTR [r8+0x8]
   1400376ba:	xor    ebx,ebx
   1400376bc:	cmp    ecx,ebx
   1400376be:	jl     0x1400375c1
   1400376c4:	cmp    ecx,0x17
   1400376c7:	jg     0x1400375c1
   1400376cd:	mov    eax,0x2aaaaaab
   1400376d2:	imul   ecx
   1400376d4:	sar    edx,1
   1400376d6:	mov    eax,edx
   1400376d8:	shr    eax,0x1f
   1400376db:	add    edx,eax
   1400376dd:	lea    eax,[rdx+rdx*2]
   1400376e0:	shl    eax,0x2
   1400376e3:	sub    ecx,eax
   1400376e5:	lea    eax,[rbx+0xc]
   1400376e8:	cmove  ecx,eax
   1400376eb:	jmp    0x1400378cb
   1400376f0:	sub    r10d,0x4d
   1400376f4:	je     0x1400377f0
   1400376fa:	mov    ecx,0x6
   1400376ff:	sub    r10d,ecx
   140037702:	je     0x1400377d4
   140037708:	sub    r10d,0x2
   14003770c:	je     0x14003776a
   14003770e:	sub    r10d,0x2
   140037712:	je     0x14003774b
   140037714:	cmp    r10d,r14d
   140037717:	jne    0x1400375e0
   14003771d:	mov    rax,QWORD PTR [rsp+0x78]
   140037722:	lea    edx,[rcx-0x4]
   140037725:	mov    rcx,rbp
   140037728:	mov    QWORD PTR [rsp+0x28],rax
   14003772d:	mov    rax,QWORD PTR [rsp+0x70]
   140037732:	mov    QWORD PTR [rsp+0x20],rax
   140037737:	call   0x140037b84
   14003773c:	xor    ebx,ebx
   14003773e:	cmp    eax,ebx
   140037740:	jne    0x140037b7a
   140037746:	jmp    0x1400375e0
   14003774b:	mov    eax,DWORD PTR [r8+0x18]
   14003774f:	xor    ebx,ebx
   140037751:	cmp    eax,ebx
   140037753:	jl     0x1400375c1
   140037759:	cmp    eax,ecx
   14003775b:	jg     0x1400375c1
   140037761:	cmp    eax,ebx
   140037763:	je     0x140037784
   140037765:	lea    ecx,[rax-0x1]
   140037768:	jmp    0x140037784
   14003776a:	xor    ebx,ebx
   14003776c:	cmp    DWORD PTR [r8+0x18],ebx
   140037770:	jl     0x1400375c1
   140037776:	cmp    DWORD PTR [r8+0x18],ecx
   14003777a:	jg     0x1400375c1
   140037780:	mov    ecx,DWORD PTR [r8+0x18]
   140037784:	cmp    DWORD PTR [r8+0x1c],ebx
   140037788:	jl     0x1400375c1
   14003778e:	cmp    DWORD PTR [r8+0x1c],0x16d
   140037796:	jg     0x1400375c1
   14003779c:	cmp    DWORD PTR [r8+0x1c],ecx
   1400377a0:	jl     0x1400377cd
   1400377a2:	mov    r8d,DWORD PTR [r8+0x1c]
   1400377a6:	mov    eax,0x92492493
   1400377ab:	imul   r8d
   1400377ae:	add    edx,r8d
   1400377b1:	sar    edx,0x2
   1400377b4:	mov    eax,edx
   1400377b6:	shr    eax,0x1f
   1400377b9:	add    edx,eax
   1400377bb:	mov    eax,edx
   1400377bd:	mov    ebx,edx
   1400377bf:	imul   eax,eax,0x7
   1400377c2:	sub    r8d,eax
   1400377c5:	cmp    r8d,ecx
   1400377c8:	jl     0x1400377cd
   1400377ca:	add    ebx,r14d
   1400377cd:	mov    ecx,ebx
   1400377cf:	jmp    0x1400378cb
   1400377d4:	xor    ebx,ebx
   1400377d6:	cmp    DWORD PTR [r8],ebx
   1400377d9:	jl     0x1400375c1
   1400377df:	cmp    DWORD PTR [r8],0x3b
   1400377e3:	jg     0x1400375c1
   1400377e9:	mov    ecx,DWORD PTR [rsi]
   1400377eb:	jmp    0x1400378cb
   1400377f0:	mov    ecx,DWORD PTR [r8+0x4]
   1400377f4:	xor    ebx,ebx
   1400377f6:	cmp    ecx,ebx
   1400377f8:	jl     0x1400375c1
   1400377fe:	cmp    ecx,0x3b
   140037801:	jmp    0x1400375bb
   140037806:	cmp    DWORD PTR [r8+0x14],0xfffff894
   14003780e:	jl     0x14003784b
   140037810:	cmp    DWORD PTR [r8+0x14],0x1fa3
   140037818:	jg     0x14003784b
   14003781a:	mov    r8d,DWORD PTR [r8+0x14]
   14003781e:	mov    eax,0x51eb851f
   140037823:	imul   r8d
   140037826:	sar    edx,0x5
   140037829:	mov    eax,edx
   14003782b:	shr    eax,0x1f
   14003782e:	add    edx,eax
   140037830:	mov    eax,edx
   140037832:	lea    ecx,[rdx+0x13]
   140037835:	mov    edx,0x4
   14003783a:	imul   eax,eax,0x64
   14003783d:	sub    r8d,eax
   140037840:	imul   ecx,ecx,0x64
   140037843:	add    ecx,r8d
   140037846:	jmp    0x1400378d0
   14003784b:	call   0x14002b3f4
   140037850:	xor    ebx,ebx
   140037852:	jmp    0x1400375c6
   140037857:	cmp    r10d,0x6d
   14003785b:	jg     0x140037a1a
   140037861:	je     0x1400379fc
   140037867:	sub    r10d,0x5a
   14003786b:	je     0x140037a41
   140037871:	sub    r10d,0x7
   140037875:	je     0x1400379aa
   14003787b:	sub    r10d,r14d
   14003787e:	je     0x140037959
   140037884:	sub    r10d,r14d
   140037887:	je     0x1400378ed
   140037889:	sub    r10d,r14d
   14003788c:	je     0x1400378bd
   14003788e:	mov    ecx,0x6
   140037893:	cmp    r10d,ecx
   140037896:	jne    0x1400375e0
   14003789c:	mov    ecx,DWORD PTR [r8+0x1c]
   1400378a0:	xor    ebx,ebx
   1400378a2:	cmp    ecx,ebx
   1400378a4:	jl     0x1400375c1
   1400378aa:	cmp    ecx,0x16d
   1400378b0:	jg     0x1400375c1
   1400378b6:	inc    ecx
   1400378b8:	lea    edx,[rbx+0x3]
   1400378bb:	jmp    0x1400378d0
   1400378bd:	mov    ecx,DWORD PTR [r8+0xc]
   1400378c1:	cmp    ecx,r14d
   1400378c4:	jl     0x14003784b
   1400378c6:	cmp    ecx,0x1f
   1400378c9:	jg     0x14003784b
   1400378cb:	mov    edx,0x2
   1400378d0:	mov    eax,DWORD PTR [rsp+0x80]
   1400378d7:	mov    r9,QWORD PTR [rsp+0x70]
   1400378dc:	mov    r8,rdi
   1400378df:	mov    DWORD PTR [rsp+0x20],eax
   1400378e3:	call   0x14003744c
   1400378e8:	jmp    0x140037b7a
   1400378ed:	mov    r13,QWORD PTR [rsp+0x78]
   1400378f2:	mov    r12,QWORD PTR [rsp+0x70]
   1400378f7:	xor    ebx,ebx
   1400378f9:	mov    QWORD PTR [rsp+0x28],r13
   1400378fe:	mov    QWORD PTR [rsp+0x20],r12
   140037903:	cmp    DWORD PTR [rsp+0x80],ebx
   14003790a:	je     0x140037955
   14003790c:	mov    edx,r14d
   14003790f:	call   0x140037b84
   140037914:	cmp    eax,ebx
   140037916:	je     0x1400375e0
   14003791c:	cmp    QWORD PTR [r12],rbx
   140037920:	je     0x1400375e0
   140037926:	mov    rax,QWORD PTR [rdi]
   140037929:	mov    QWORD PTR [rsp+0x28],r13
   14003792e:	mov    r9,rdi
   140037931:	mov    BYTE PTR [rax],0x20
   140037934:	add    QWORD PTR [rdi],r14
   140037937:	dec    QWORD PTR [r12]
   14003793b:	mov    QWORD PTR [rsp+0x20],r12
   140037940:	mov    r8,rsi
   140037943:	mov    edx,0x2
   140037948:	mov    rcx,rbp
   14003794b:	call   0x140037b84
   140037950:	jmp    0x14003773e
   140037955:	xor    edx,edx
   140037957:	jmp    0x14003790f
   140037959:	xor    ebx,ebx
   14003795b:	cmp    DWORD PTR [r8+0x10],ebx
   14003795f:	jl     0x1400375c1
   140037965:	cmp    DWORD PTR [r8+0x10],0xb
   14003796a:	jg     0x1400375c1
   140037970:	movsxd rcx,DWORD PTR [r8+0x10]
   140037974:	mov    rax,QWORD PTR [rsp+0x78]
   140037979:	mov    rdx,QWORD PTR [rax+rcx*8+0x70]
   14003797e:	mov    rcx,QWORD PTR [rsp+0x70]
   140037983:	jmp    0x1400379a0
   140037985:	mov    r8b,BYTE PTR [rdx]
   140037988:	cmp    r8b,bl
   14003798b:	je     0x140037b7a
   140037991:	mov    rax,QWORD PTR [r9]
   140037994:	add    rdx,r14
   140037997:	mov    BYTE PTR [rax],r8b
   14003799a:	add    QWORD PTR [r9],r14
   14003799d:	dec    QWORD PTR [rcx]
   1400379a0:	cmp    QWORD PTR [rcx],rbx
   1400379a3:	jne    0x140037985
   1400379a5:	jmp    0x140037b7a
   1400379aa:	xor    ebx,ebx
   1400379ac:	cmp    DWORD PTR [r8+0x18],ebx
   1400379b0:	jl     0x1400375c1
   1400379b6:	lea    ecx,[rbx+0x6]
   1400379b9:	cmp    DWORD PTR [r8+0x18],ecx
   1400379bd:	jg     0x1400375c1
   1400379c3:	movsxd rcx,DWORD PTR [r8+0x18]
   1400379c7:	mov    rax,QWORD PTR [rsp+0x78]
   1400379cc:	mov    rdx,QWORD PTR [rax+rcx*8]
   1400379d0:	mov    rcx,QWORD PTR [rsp+0x70]
   1400379d5:	jmp    0x1400379f2
   1400379d7:	mov    r8b,BYTE PTR [rdx]
   1400379da:	cmp    r8b,bl
   1400379dd:	je     0x140037b7a
   1400379e3:	mov    rax,QWORD PTR [r9]
   1400379e6:	add    rdx,r14
   1400379e9:	mov    BYTE PTR [rax],r8b
   1400379ec:	add    QWORD PTR [r9],r14
   1400379ef:	dec    QWORD PTR [rcx]
   1400379f2:	cmp    QWORD PTR [rcx],rbx
   1400379f5:	jne    0x1400379d7
   1400379f7:	jmp    0x140037b7a
   1400379fc:	mov    ecx,DWORD PTR [r8+0x10]
   140037a00:	xor    ebx,ebx
   140037a02:	cmp    ecx,ebx
   140037a04:	jl     0x1400375c1
   140037a0a:	cmp    ecx,0xb
   140037a0d:	jg     0x1400375c1
   140037a13:	inc    ecx
   140037a15:	jmp    0x1400378cb
   140037a1a:	sub    r10d,0x70
   140037a1e:	je     0x140037b01
   140037a24:	sub    r10d,0x7
   140037a28:	je     0x140037add
   140037a2e:	sub    r10d,r14d
   140037a31:	je     0x140037aaf
   140037a33:	sub    r10d,r14d
   140037a36:	je     0x140037a86
   140037a38:	cmp    r10d,r14d
   140037a3b:	jne    0x1400375e0
   140037a41:	call   0x14002eca4
   140037a46:	call   0x14002ede8
   140037a4b:	xor    ebx,ebx
   140037a4d:	cmp    DWORD PTR [rsi+0x20],ebx
   140037a50:	mov    rcx,rbx
   140037a53:	setne  cl
   140037a56:	mov    rdx,QWORD PTR [rax+rcx*8]
   140037a5a:	mov    rcx,QWORD PTR [rsp+0x70]
   140037a5f:	jmp    0x140037a7c
   140037a61:	mov    r8b,BYTE PTR [rdx]
   140037a64:	cmp    r8b,bl
   140037a67:	je     0x140037b7a
   140037a6d:	mov    rax,QWORD PTR [rdi]
   140037a70:	add    rdx,r14
   140037a73:	mov    BYTE PTR [rax],r8b
   140037a76:	add    QWORD PTR [rdi],r14
   140037a79:	dec    QWORD PTR [rcx]
   140037a7c:	cmp    QWORD PTR [rcx],rbx
   140037a7f:	jne    0x140037a61
   140037a81:	jmp    0x140037b7a
   140037a86:	mov    ecx,DWORD PTR [r8+0x14]
   140037a8a:	xor    ebx,ebx
   140037a8c:	cmp    ecx,ebx
   140037a8e:	jl     0x1400375c1
   140037a94:	mov    eax,0x51eb851f
   140037a99:	imul   ecx
   140037a9b:	sar    edx,0x5
   140037a9e:	mov    eax,edx
   140037aa0:	shr    eax,0x1f
   140037aa3:	add    edx,eax
   140037aa5:	imul   edx,edx,0x64
   140037aa8:	sub    ecx,edx
   140037aaa:	jmp    0x1400378cb
   140037aaf:	mov    rax,QWORD PTR [rsp+0x78]
   140037ab4:	xor    ebx,ebx
   140037ab6:	mov    QWORD PTR [rsp+0x28],rax
   140037abb:	mov    rax,QWORD PTR [rsp+0x70]
   140037ac0:	mov    QWORD PTR [rsp+0x20],rax
   140037ac5:	cmp    DWORD PTR [rsp+0x80],ebx
   140037acc:	je     0x140037ad6
   140037ace:	mov    edx,r14d
   140037ad1:	jmp    0x14003794b
   140037ad6:	xor    edx,edx
   140037ad8:	jmp    0x14003794b
   140037add:	xor    ebx,ebx
   140037adf:	cmp    DWORD PTR [r8+0x18],ebx
   140037ae3:	jl     0x1400375c1
   140037ae9:	lea    ecx,[rbx+0x6]
   140037aec:	cmp    DWORD PTR [r8+0x18],ecx
   140037af0:	jg     0x1400375c1
   140037af6:	mov    ecx,DWORD PTR [rsi+0x18]
   140037af9:	mov    edx,r14d
   140037afc:	jmp    0x1400378d0
   140037b01:	xor    ebx,ebx
   140037b03:	cmp    DWORD PTR [r8+0x8],ebx
   140037b07:	jl     0x1400375c1
   140037b0d:	cmp    DWORD PTR [r8+0x8],0x17
   140037b12:	jg     0x1400375c1
   140037b18:	cmp    DWORD PTR [r8+0x8],0xb
   140037b1d:	mov    rax,QWORD PTR [rsp+0x78]
   140037b22:	jg     0x140037b50
   140037b24:	mov    rdx,QWORD PTR [rax+0x130]
   140037b2b:	mov    rcx,QWORD PTR [rsp+0x70]
   140037b30:	jmp    0x140037b49
   140037b32:	mov    r8b,BYTE PTR [rdx]
   140037b35:	cmp    r8b,bl
   140037b38:	je     0x140037b7a
   140037b3a:	mov    rax,QWORD PTR [r9]
   140037b3d:	add    rdx,r14
   140037b40:	mov    BYTE PTR [rax],r8b
   140037b43:	add    QWORD PTR [r9],r14
   140037b46:	dec    QWORD PTR [rcx]
   140037b49:	cmp    QWORD PTR [rcx],rbx
   140037b4c:	jne    0x140037b32
   140037b4e:	jmp    0x140037b7a
   140037b50:	mov    r8,QWORD PTR [rax+0x138]
   140037b57:	mov    rdx,QWORD PTR [rsp+0x70]
   140037b5c:	jmp    0x140037b75
   140037b5e:	mov    r9b,BYTE PTR [r8]
   140037b61:	cmp    r9b,bl
   140037b64:	je     0x140037b7a
   140037b66:	mov    rcx,QWORD PTR [rdi]
   140037b69:	add    r8,r14
   140037b6c:	mov    BYTE PTR [rcx],r9b
   140037b6f:	add    QWORD PTR [rdi],r14
   140037b72:	dec    QWORD PTR [rdx]
   140037b75:	cmp    QWORD PTR [rdx],rbx
   140037b78:	jne    0x140037b5e
   140037b7a:	mov    eax,r14d
   140037b7d:	jmp    0x1400375e2
   140037b82:	int3   
   140037b83:	int3   
   140037b84:	rex push rbp
   140037b86:	push   r12
   140037b88:	push   r13
   140037b8a:	push   r14
   140037b8c:	push   r15
   140037b8e:	sub    rsp,0x70
   140037b92:	lea    rbp,[rsp+0x40]
   140037b97:	mov    QWORD PTR [rbp+0x60],rbx
   140037b9b:	mov    QWORD PTR [rbp+0x68],rsi
   140037b9f:	mov    QWORD PTR [rbp+0x70],rdi
   140037ba3:	mov    rax,QWORD PTR [rip+0x2ed06]        # 0x1400668b0
   140037baa:	xor    rax,rbp
   140037bad:	mov    QWORD PTR [rbp+0x20],rax
   140037bb1:	mov    r15,QWORD PTR [rbp+0x88]
   140037bb8:	mov    r14,r9
   140037bbb:	mov    QWORD PTR [rbp+0x0],r8
   140037bbf:	mov    r9,r8
   140037bc2:	xor    r8d,r8d
   140037bc5:	mov    r13,rcx
   140037bc8:	mov    QWORD PTR [rbp+0x18],rcx
   140037bcc:	mov    r11d,0x1
   140037bd2:	cmp    edx,r8d
   140037bd5:	je     0x140037bee
   140037bd7:	cmp    edx,r11d
   140037bda:	je     0x140037be5
   140037bdc:	mov    rdi,QWORD PTR [r15+0x150]
   140037be3:	jmp    0x140037bf5
   140037be5:	mov    rdi,QWORD PTR [r15+0x148]
   140037bec:	jmp    0x140037bf5
   140037bee:	mov    rdi,QWORD PTR [r15+0x140]
   140037bf5:	cmp    DWORD PTR [r15+0x15c],r11d
   140037bfc:	je     0x140037d63
   140037c02:	movzx  eax,WORD PTR [r9+0x14]
   140037c07:	mov    r13,QWORD PTR [rip+0x56a2]        # 0x14003d2b0
   140037c0e:	cmp    edx,0x2
   140037c11:	cmovne r13,QWORD PTR [rip+0x568f]        # 0x14003d2a8
   140037c19:	mov    ecx,0x76c
   140037c1e:	mov    DWORD PTR [rsp+0x28],r8d
   140037c23:	add    ax,cx
   140037c26:	mov    ecx,DWORD PTR [r15+0x158]
   140037c2d:	mov    WORD PTR [rbp+0x16],r8w
   140037c32:	mov    WORD PTR [rbp+0x8],ax
   140037c36:	movzx  eax,WORD PTR [r9+0x10]
   140037c3b:	mov    QWORD PTR [rsp+0x20],r8
   140037c40:	add    ax,r11w
   140037c44:	lea    r8,[rbp+0x8]
   140037c48:	xor    edx,edx
   140037c4a:	mov    WORD PTR [rbp+0xa],ax
   140037c4e:	movzx  eax,WORD PTR [r9+0xc]
   140037c53:	mov    WORD PTR [rbp+0xe],ax
   140037c57:	movzx  eax,WORD PTR [r9+0x8]
   140037c5c:	mov    WORD PTR [rbp+0x10],ax
   140037c60:	movzx  eax,WORD PTR [r9+0x4]
   140037c65:	mov    WORD PTR [rbp+0x12],ax
   140037c69:	movzx  eax,WORD PTR [r9]
   140037c6d:	mov    r9,rdi
   140037c70:	mov    WORD PTR [rbp+0x14],ax
   140037c74:	call   r13
   140037c77:	xor    r8d,r8d
   140037c7a:	mov    r12d,eax
   140037c7d:	cmp    eax,r8d
   140037c80:	je     0x140037d55
   140037c86:	add    eax,0x10
   140037c89:	cmp    eax,0x400
   140037c8e:	jg     0x140037cca
   140037c90:	cdqe   
   140037c92:	lea    rcx,[rax+0xf]
   140037c96:	cmp    rcx,rax
   140037c99:	ja     0x140037ca5
   140037c9b:	movabs rcx,0xffffffffffffff0
   140037ca5:	and    rcx,0xfffffffffffffff0
   140037ca9:	mov    rax,rcx
   140037cac:	call   0x14003c600
   140037cb1:	sub    rsp,rcx
   140037cb4:	lea    rbx,[rsp+0x40]
   140037cb9:	cmp    rbx,r8
   140037cbc:	je     0x140037d55
   140037cc2:	mov    DWORD PTR [rbx],0xcccc
   140037cc8:	jmp    0x140037ce3
   140037cca:	movsxd rcx,eax
   140037ccd:	call   0x14002c04c
   140037cd2:	xor    r8d,r8d
   140037cd5:	mov    rbx,rax
   140037cd8:	cmp    rax,r8
   140037cdb:	je     0x140037ce7
   140037cdd:	mov    DWORD PTR [rax],0xdddd
   140037ce3:	add    rbx,0x10
   140037ce7:	cmp    rbx,r8
   140037cea:	je     0x140037d55
   140037cec:	mov    ecx,DWORD PTR [r15+0x158]
   140037cf3:	lea    r8,[rbp+0x8]
   140037cf7:	mov    r9,rdi
   140037cfa:	xor    edx,edx
   140037cfc:	mov    DWORD PTR [rsp+0x28],r12d
   140037d01:	mov    rsi,rbx
   140037d04:	mov    QWORD PTR [rsp+0x20],rbx
   140037d09:	call   r13
   140037d0c:	lea    r11d,[rax-0x1]
   140037d10:	test   r11d,r11d
   140037d13:	jle    0x140037d3a
   140037d15:	mov    rdx,QWORD PTR [rbp+0x80]
   140037d1c:	cmp    QWORD PTR [rdx],0x0
   140037d20:	jbe    0x140037d3a
   140037d22:	mov    al,BYTE PTR [rsi]
   140037d24:	mov    rcx,QWORD PTR [r14]
   140037d27:	dec    r11d
   140037d2a:	mov    BYTE PTR [rcx],al
   140037d2c:	inc    QWORD PTR [r14]
   140037d2f:	dec    QWORD PTR [rdx]
   140037d32:	inc    rsi
   140037d35:	test   r11d,r11d
   140037d38:	jg     0x140037d1c
   140037d3a:	lea    rcx,[rbx-0x10]
   140037d3e:	cmp    DWORD PTR [rcx],0xdddd
   140037d44:	jne    0x140037d4b
   140037d46:	call   0x14002b36c
   140037d4b:	mov    eax,0x1
   140037d50:	jmp    0x1400380e1
   140037d55:	mov    r9,QWORD PTR [rbp+0x0]
   140037d59:	mov    r13,QWORD PTR [rbp+0x18]
   140037d5d:	mov    r11d,0x1
   140037d63:	mov    al,BYTE PTR [rdi]
   140037d65:	cmp    al,r8b
   140037d68:	je     0x1400380de
   140037d6e:	mov    rsi,QWORD PTR [rbp+0x80]
   140037d75:	cmp    QWORD PTR [rsi],r8
   140037d78:	je     0x1400380de
   140037d7e:	mov    ebx,r8d
   140037d81:	mov    ecx,r8d
   140037d84:	mov    rdx,r8
   140037d87:	mov    r12,rdi
   140037d8a:	add    r12,r11
   140037d8d:	add    ecx,r11d
   140037d90:	add    rdx,r11
   140037d93:	cmp    BYTE PTR [r12],al
   140037d97:	je     0x140037d8a
   140037d99:	movsx  r8d,al
   140037d9d:	cmp    r8d,0x64
   140037da1:	jg     0x140037f0e
   140037da7:	je     0x140037ede
   140037dad:	cmp    r8d,0x27
   140037db1:	je     0x140037e53
   140037db7:	cmp    r8d,0x41
   140037dbb:	je     0x140037dd3
   140037dbd:	cmp    r8d,0x48
   140037dc1:	je     0x140037e1c
   140037dc3:	cmp    r8d,0x4d
   140037dc7:	je     0x140037dec
   140037dc9:	cmp    r8d,0x61
   140037dcd:	jne    0x140038055
   140037dd3:	lea    rdx,[rip+0x1906e]        # 0x140050e48
   140037dda:	mov    rcx,rdi
   140037ddd:	call   0x14002c8b4
   140037de2:	test   eax,eax
   140037de4:	jne    0x140037e35
   140037de6:	lea    r12,[rdi+0x5]
   140037dea:	jmp    0x140037e4c
   140037dec:	sub    ecx,r11d
   140037def:	je     0x140037e12
   140037df1:	sub    ecx,r11d
   140037df4:	je     0x140037e15
   140037df6:	sub    ecx,r11d
   140037df9:	je     0x140037e0b
   140037dfb:	cmp    ecx,r11d
   140037dfe:	jne    0x140038055
   140037e04:	mov    dl,0x42
   140037e06:	jmp    0x14003809e
   140037e0b:	mov    dl,0x62
   140037e0d:	jmp    0x14003809e
   140037e12:	mov    ebx,r11d
   140037e15:	mov    dl,0x6d
   140037e17:	jmp    0x14003809e
   140037e1c:	sub    ecx,r11d
   140037e1f:	je     0x140037e2b
   140037e21:	cmp    ecx,r11d
   140037e24:	je     0x140037e2e
   140037e26:	jmp    0x140038055
   140037e2b:	mov    ebx,r11d
   140037e2e:	mov    dl,0x48
   140037e30:	jmp    0x14003809e
   140037e35:	lea    rdx,[rip+0x19008]        # 0x140050e44
   140037e3c:	mov    rcx,rdi
   140037e3f:	call   0x14002c8b4
   140037e44:	test   eax,eax
   140037e46:	jne    0x140037e4c
   140037e48:	lea    r12,[rdi+0x3]
   140037e4c:	mov    dl,0x70
   140037e4e:	jmp    0x14003809e
   140037e53:	test   r11b,cl
   140037e56:	je     0x140037ed0
   140037e58:	add    rdi,rdx
   140037e5b:	xor    r8d,r8d
   140037e5e:	mov    al,BYTE PTR [rdi]
   140037e60:	cmp    al,r8b
   140037e63:	je     0x1400380de
   140037e69:	cmp    QWORD PTR [rsi],r8
   140037e6c:	je     0x1400380ca
   140037e72:	cmp    al,0x27
   140037e74:	je     0x140037ec8
   140037e76:	movsx  ecx,al
   140037e79:	mov    rdx,r13
   140037e7c:	call   0x140034d44
   140037e81:	xor    r8d,r8d
   140037e84:	lea    r11d,[r8+0x1]
   140037e88:	cmp    eax,r8d
   140037e8b:	je     0x140037eac
   140037e8d:	cmp    QWORD PTR [rsi],r11
   140037e90:	jbe    0x140037eac
   140037e92:	cmp    BYTE PTR [rdi+0x1],r8b
   140037e96:	je     0x1400380da
   140037e9c:	mov    al,BYTE PTR [rdi]
   140037e9e:	mov    rcx,QWORD PTR [r14]
   140037ea1:	inc    rdi
   140037ea4:	mov    BYTE PTR [rcx],al
   140037ea6:	add    QWORD PTR [r14],r11
   140037ea9:	dec    QWORD PTR [rsi]
   140037eac:	mov    al,BYTE PTR [rdi]
   140037eae:	mov    rcx,QWORD PTR [r14]
   140037eb1:	add    rdi,r11
   140037eb4:	mov    BYTE PTR [rcx],al
   140037eb6:	add    QWORD PTR [r14],r11
   140037eb9:	dec    QWORD PTR [rsi]
   140037ebc:	mov    al,BYTE PTR [rdi]
   140037ebe:	cmp    al,r8b
   140037ec1:	jne    0x140037e69
   140037ec3:	jmp    0x1400380ca
   140037ec8:	add    rdi,r11
   140037ecb:	jmp    0x1400380ca
   140037ed0:	movsxd rax,ecx
   140037ed3:	add    rdi,rax
   140037ed6:	xor    r8d,r8d
   140037ed9:	jmp    0x1400380ca
   140037ede:	sub    ecx,r11d
   140037ee1:	je     0x140037f04
   140037ee3:	sub    ecx,r11d
   140037ee6:	je     0x140037f07
   140037ee8:	sub    ecx,r11d
   140037eeb:	je     0x140037efd
   140037eed:	cmp    ecx,r11d
   140037ef0:	jne    0x140038055
   140037ef6:	mov    dl,0x41
   140037ef8:	jmp    0x14003809e
   140037efd:	mov    dl,0x61
   140037eff:	jmp    0x14003809e
   140037f04:	mov    ebx,r11d
   140037f07:	mov    dl,0x64
   140037f09:	jmp    0x14003809e
   140037f0e:	mov    edx,r8d
   140037f11:	sub    edx,0x68
   140037f14:	je     0x14003804b
   140037f1a:	sub    edx,0x5
   140037f1d:	je     0x140038038
   140037f23:	sub    edx,0x6
   140037f26:	je     0x140038025
   140037f2c:	sub    edx,r11d
   140037f2f:	je     0x140037f56
   140037f31:	sub    edx,0x5
   140037f34:	jne    0x140038055
   140037f3a:	cmp    ecx,0x2
   140037f3d:	je     0x140037f4f
   140037f3f:	cmp    ecx,0x4
   140037f42:	jne    0x140038055
   140037f48:	mov    dl,0x59
   140037f4a:	jmp    0x14003809e
   140037f4f:	mov    dl,0x79
   140037f51:	jmp    0x14003809e
   140037f56:	cmp    DWORD PTR [r9+0x8],0xb
   140037f5b:	jg     0x140037f66
   140037f5d:	mov    rbx,QWORD PTR [r15+0x130]
   140037f64:	jmp    0x140037f6d
   140037f66:	mov    rbx,QWORD PTR [r15+0x138]
   140037f6d:	xor    r8d,r8d
   140037f70:	cmp    ecx,r11d
   140037f73:	jne    0x140038019
   140037f79:	cmp    QWORD PTR [rsi],r8
   140037f7c:	jbe    0x140038019
   140037f82:	movsx  ecx,BYTE PTR [rbx]
   140037f85:	mov    rdx,r13
   140037f88:	call   0x140034d44
   140037f8d:	xor    r8d,r8d
   140037f90:	lea    r11d,[r8+0x1]
   140037f94:	cmp    eax,r8d
   140037f97:	je     0x140037fb8
   140037f99:	cmp    QWORD PTR [rsi],r11
   140037f9c:	jbe    0x140037fb8
   140037f9e:	cmp    BYTE PTR [rbx+0x1],r8b
   140037fa2:	je     0x1400380da
   140037fa8:	mov    al,BYTE PTR [rbx]
   140037faa:	mov    rcx,QWORD PTR [r14]
   140037fad:	inc    rbx
   140037fb0:	mov    BYTE PTR [rcx],al
   140037fb2:	add    QWORD PTR [r14],r11
   140037fb5:	dec    QWORD PTR [rsi]
   140037fb8:	mov    rcx,QWORD PTR [r14]
   140037fbb:	mov    al,BYTE PTR [rbx]
   140037fbd:	mov    BYTE PTR [rcx],al
   140037fbf:	add    QWORD PTR [r14],r11
   140037fc2:	dec    QWORD PTR [rsi]
   140037fc5:	jmp    0x1400380c7
   140037fca:	cmp    QWORD PTR [rsi],r8
   140037fcd:	jbe    0x1400380c7
   140037fd3:	movsx  ecx,al
   140037fd6:	mov    rdx,r13
   140037fd9:	call   0x140034d44
   140037fde:	xor    r8d,r8d
   140037fe1:	lea    r11d,[r8+0x1]
   140037fe5:	cmp    eax,r8d
   140037fe8:	je     0x140038009
   140037fea:	cmp    QWORD PTR [rsi],r11
   140037fed:	jbe    0x140038009
   140037fef:	cmp    BYTE PTR [rbx+0x1],r8b
   140037ff3:	je     0x1400380da
   140037ff9:	mov    al,BYTE PTR [rbx]
   140037ffb:	mov    rcx,QWORD PTR [r14]
   140037ffe:	inc    rbx
   140038001:	mov    BYTE PTR [rcx],al
   140038003:	add    QWORD PTR [r14],r11
   140038006:	dec    QWORD PTR [rsi]
   140038009:	mov    al,BYTE PTR [rbx]
   14003800b:	mov    rcx,QWORD PTR [r14]
   14003800e:	add    rbx,r11
   140038011:	mov    BYTE PTR [rcx],al
   140038013:	add    QWORD PTR [r14],r11
   140038016:	dec    QWORD PTR [rsi]
   140038019:	mov    al,BYTE PTR [rbx]
   14003801b:	cmp    al,r8b
   14003801e:	jne    0x140037fca
   140038020:	jmp    0x1400380c7
   140038025:	sub    ecx,r11d
   140038028:	je     0x140038031
   14003802a:	cmp    ecx,r11d
   14003802d:	je     0x140038034
   14003802f:	jmp    0x140038055
   140038031:	mov    ebx,r11d
   140038034:	mov    dl,0x53
   140038036:	jmp    0x14003809e
   140038038:	sub    ecx,r11d
   14003803b:	je     0x140038044
   14003803d:	cmp    ecx,r11d
   140038040:	je     0x140038047
   140038042:	jmp    0x140038055
   140038044:	mov    ebx,r11d
   140038047:	mov    dl,0x4d
   140038049:	jmp    0x14003809e
   14003804b:	sub    ecx,r11d
   14003804e:	je     0x140038099
   140038050:	cmp    ecx,r11d
   140038053:	je     0x14003809c
   140038055:	mov    rdx,r13
   140038058:	mov    ecx,r8d
   14003805b:	call   0x140034d44
   140038060:	xor    r8d,r8d
   140038063:	lea    r11d,[r8+0x1]
   140038067:	cmp    eax,r8d
   14003806a:	je     0x140038087
   14003806c:	cmp    QWORD PTR [rsi],r11
   14003806f:	jbe    0x140038087
   140038071:	cmp    BYTE PTR [rdi+0x1],r8b
   140038075:	je     0x1400380da
   140038077:	mov    al,BYTE PTR [rdi]
   140038079:	mov    rcx,QWORD PTR [r14]
   14003807c:	inc    rdi
   14003807f:	mov    BYTE PTR [rcx],al
   140038081:	add    QWORD PTR [r14],r11
   140038084:	dec    QWORD PTR [rsi]
   140038087:	mov    al,BYTE PTR [rdi]
   140038089:	mov    rcx,QWORD PTR [r14]
   14003808c:	add    rdi,r11
   14003808f:	mov    BYTE PTR [rcx],al
   140038091:	add    QWORD PTR [r14],r11
   140038094:	dec    QWORD PTR [rsi]
   140038097:	jmp    0x1400380ca
   140038099:	mov    ebx,r11d
   14003809c:	mov    dl,0x49
   14003809e:	mov    r8,QWORD PTR [rbp+0x0]
   1400380a2:	mov    DWORD PTR [rsp+0x30],ebx
   1400380a6:	mov    r9,r14
   1400380a9:	mov    rcx,r13
   1400380ac:	mov    QWORD PTR [rsp+0x28],r15
   1400380b1:	mov    QWORD PTR [rsp+0x20],rsi
   1400380b6:	call   0x140037528
   1400380bb:	xor    r8d,r8d
   1400380be:	cmp    eax,r8d
   1400380c1:	je     0x1400380da
   1400380c3:	lea    r11d,[r8+0x1]
   1400380c7:	mov    rdi,r12
   1400380ca:	mov    al,BYTE PTR [rdi]
   1400380cc:	cmp    al,r8b
   1400380cf:	je     0x1400380de
   1400380d1:	mov    r9,QWORD PTR [rbp+0x0]
   1400380d5:	jmp    0x140037d75
   1400380da:	xor    eax,eax
   1400380dc:	jmp    0x1400380e1
   1400380de:	mov    eax,r11d
   1400380e1:	mov    rcx,QWORD PTR [rbp+0x20]
   1400380e5:	xor    rcx,rbp
   1400380e8:	call   0x14002b250
   1400380ed:	mov    rbx,QWORD PTR [rbp+0x60]
   1400380f1:	mov    rsi,QWORD PTR [rbp+0x68]
   1400380f5:	mov    rdi,QWORD PTR [rbp+0x70]
   1400380f9:	lea    rsp,[rbp+0x30]
   1400380fd:	pop    r15
   1400380ff:	pop    r14
   140038101:	pop    r13
   140038103:	pop    r12
   140038105:	pop    rbp
   140038106:	ret    
   140038107:	int3   
   140038108:	mov    rax,rsp
   14003810b:	mov    QWORD PTR [rax+0x10],rbx
   14003810f:	mov    QWORD PTR [rax+0x18],rbp
   140038113:	mov    QWORD PTR [rax+0x8],rcx
   140038117:	push   rsi
   140038118:	push   rdi
   140038119:	push   r12
   14003811b:	push   r13
   14003811d:	push   r14
   14003811f:	sub    rsp,0x70
   140038123:	mov    rdi,rdx
   140038126:	mov    rdx,QWORD PTR [rsp+0xc8]
   14003812e:	mov    r12,rcx
   140038131:	lea    rcx,[rax-0x50]
   140038135:	xor    r14d,r14d
   140038138:	mov    r13,r9
   14003813b:	mov    rbx,r8
   14003813e:	mov    esi,r14d
   140038141:	call   0x14002b47c
   140038146:	mov    r11,QWORD PTR [rsp+0xa0]
   14003814e:	cmp    r11,r14
   140038151:	je     0x1400382ca
   140038157:	cmp    rdi,r14
   14003815a:	je     0x1400382ca
   140038160:	mov    BYTE PTR [r11],r14b
   140038163:	cmp    rbx,r14
   140038166:	je     0x1400382ca
   14003816c:	mov    rbp,QWORD PTR [rsp+0xc0]
   140038174:	cmp    rbp,r14
   140038177:	jne    0x140038185
   140038179:	mov    rax,QWORD PTR [rsp+0x48]
   14003817e:	mov    rbp,QWORD PTR [rax+0x158]
   140038185:	mov    rax,rdi
   140038188:	cmp    rdi,r14
   14003818b:	mov    QWORD PTR [rsp+0x40],rax
   140038190:	jbe    0x140038280
   140038196:	mov    cl,BYTE PTR [rbx]
   140038198:	cmp    cl,r14b
   14003819b:	je     0x14003829d
   1400381a1:	cmp    cl,0x25
   1400381a4:	je     0x140038219
   1400381a6:	lea    rdx,[rsp+0x48]
   1400381ab:	movsx  ecx,cl
   1400381ae:	call   0x140034d44
   1400381b3:	cmp    eax,r14d
   1400381b6:	je     0x1400381f3
   1400381b8:	cmp    QWORD PTR [rsp+0x40],0x1
   1400381be:	jbe    0x1400381f3
   1400381c0:	cmp    BYTE PTR [rbx+0x1],r14b
   1400381c4:	je     0x14003827b
   1400381ca:	mov    cl,BYTE PTR [rbx]
   1400381cc:	mov    rax,QWORD PTR [rsp+0xa0]
   1400381d4:	inc    rbx
   1400381d7:	mov    BYTE PTR [rax],cl
   1400381d9:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400381e1:	inc    rcx
   1400381e4:	dec    QWORD PTR [rsp+0x40]
   1400381e9:	mov    QWORD PTR [rsp+0xa0],rcx
   1400381f1:	jmp    0x1400381fb
   1400381f3:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400381fb:	mov    al,BYTE PTR [rbx]
   1400381fd:	inc    rbx
   140038200:	mov    BYTE PTR [rcx],al
   140038202:	mov    rax,QWORD PTR [rsp+0x40]
   140038207:	inc    QWORD PTR [rsp+0xa0]
   14003820f:	dec    rax
   140038212:	mov    QWORD PTR [rsp+0x40],rax
   140038217:	jmp    0x14003826c
   140038219:	cmp    r13,r14
   14003821c:	je     0x1400382ca
   140038222:	inc    rbx
   140038225:	mov    eax,r14d
   140038228:	cmp    BYTE PTR [rbx],0x23
   14003822b:	jne    0x140038235
   14003822d:	mov    eax,0x1
   140038232:	inc    rbx
   140038235:	mov    dl,BYTE PTR [rbx]
   140038237:	mov    DWORD PTR [rsp+0x30],eax
   14003823b:	lea    rax,[rsp+0x40]
   140038240:	lea    r9,[rsp+0xa0]
   140038248:	lea    rcx,[rsp+0x48]
   14003824d:	mov    r8,r13
   140038250:	mov    QWORD PTR [rsp+0x28],rbp
   140038255:	mov    QWORD PTR [rsp+0x20],rax
   14003825a:	call   0x140037528
   14003825f:	cmp    eax,r14d
   140038262:	je     0x140038274
   140038264:	mov    rax,QWORD PTR [rsp+0x40]
   140038269:	inc    rbx
   14003826c:	cmp    rax,r14
   14003826f:	jmp    0x140038190
   140038274:	cmp    QWORD PTR [rsp+0x40],r14
   140038279:	jbe    0x140038280
   14003827b:	mov    esi,0x1
   140038280:	mov    BYTE PTR [r12],r14b
   140038284:	cmp    esi,r14d
   140038287:	jne    0x1400382ca
   140038289:	cmp    QWORD PTR [rsp+0x40],r14
   14003828e:	ja     0x1400382ca
   140038290:	call   0x14002b3f4
   140038295:	mov    DWORD PTR [rax],0x22
   14003829b:	jmp    0x1400382e9
   14003829d:	cmp    rax,r14
   1400382a0:	jbe    0x140038280
   1400382a2:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400382aa:	mov    BYTE PTR [rcx],r14b
   1400382ad:	sub    rdi,QWORD PTR [rsp+0x40]
   1400382b2:	cmp    BYTE PTR [rsp+0x60],r14b
   1400382b7:	je     0x1400382c5
   1400382b9:	mov    rcx,QWORD PTR [rsp+0x58]
   1400382be:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400382c5:	mov    rax,rdi
   1400382c8:	jmp    0x1400382fe
   1400382ca:	call   0x14002b3f4
   1400382cf:	xor    r9d,r9d
   1400382d2:	xor    r8d,r8d
   1400382d5:	xor    edx,edx
   1400382d7:	xor    ecx,ecx
   1400382d9:	mov    QWORD PTR [rsp+0x20],r14
   1400382de:	mov    DWORD PTR [rax],0x16
   1400382e4:	call   0x140031aac
   1400382e9:	cmp    BYTE PTR [rsp+0x60],r14b
   1400382ee:	je     0x1400382fc
   1400382f0:	mov    rax,QWORD PTR [rsp+0x58]
   1400382f5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400382fc:	xor    eax,eax
   1400382fe:	lea    r11,[rsp+0x70]
   140038303:	mov    rbx,QWORD PTR [r11+0x38]
   140038307:	mov    rbp,QWORD PTR [r11+0x40]
   14003830b:	mov    rsp,r11
   14003830e:	pop    r14
   140038310:	pop    r13
   140038312:	pop    r12
   140038314:	pop    rdi
   140038315:	pop    rsi
   140038316:	ret    
   140038317:	int3   
   140038318:	sub    rsp,0x38
   14003831c:	and    QWORD PTR [rsp+0x28],0x0
   140038322:	and    QWORD PTR [rsp+0x20],0x0
   140038328:	call   0x140038108
   14003832d:	add    rsp,0x38
   140038331:	ret    
   140038332:	int3   
   140038333:	int3   
   140038334:	mov    QWORD PTR [rsp+0x8],rbx
   140038339:	mov    QWORD PTR [rsp+0x10],rsi
   14003833e:	push   rdi
   14003833f:	sub    rsp,0x40
   140038343:	mov    ebx,edx
   140038345:	mov    rdx,rcx
   140038348:	lea    rcx,[rsp+0x20]
   14003834d:	mov    edi,r9d
   140038350:	mov    esi,r8d
   140038353:	call   0x14002b47c
   140038358:	mov    rax,QWORD PTR [rsp+0x28]
   14003835d:	movzx  r11d,bl
   140038361:	test   BYTE PTR [r11+rax*1+0x1d],dil
   140038366:	jne    0x140038387
   140038368:	test   esi,esi
   14003836a:	je     0x140038381
   14003836c:	mov    rax,QWORD PTR [rsp+0x20]
   140038371:	mov    rcx,QWORD PTR [rax+0x140]
   140038378:	movzx  eax,WORD PTR [rcx+r11*2]
   14003837d:	and    eax,esi
   14003837f:	jmp    0x140038383
   140038381:	xor    eax,eax
   140038383:	test   eax,eax
   140038385:	je     0x14003838c
   140038387:	mov    eax,0x1
   14003838c:	cmp    BYTE PTR [rsp+0x38],0x0
   140038391:	je     0x14003839f
   140038393:	mov    rcx,QWORD PTR [rsp+0x30]
   140038398:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003839f:	mov    rbx,QWORD PTR [rsp+0x50]
   1400383a4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400383a9:	add    rsp,0x40
   1400383ad:	pop    rdi
   1400383ae:	ret    
   1400383af:	int3   
   1400383b0:	mov    edx,ecx
   1400383b2:	mov    r9d,0x4
   1400383b8:	xor    r8d,r8d
   1400383bb:	xor    ecx,ecx
   1400383bd:	jmp    0x140038334
   1400383c2:	int3   
   1400383c3:	int3   
   1400383c4:	mov    QWORD PTR [rsp+0x18],rbx
   1400383c9:	push   rdi
   1400383ca:	sub    rsp,0x80
   1400383d1:	mov    rax,QWORD PTR [rip+0x2e4d8]        # 0x1400668b0
   1400383d8:	xor    rax,rsp
   1400383db:	mov    QWORD PTR [rsp+0x78],rax
   1400383e0:	mov    rdi,rcx
   1400383e3:	mov    rbx,rdx
   1400383e6:	lea    rcx,[rsp+0x40]
   1400383eb:	mov    rdx,r8
   1400383ee:	call   0x14002b47c
   1400383f3:	lea    r11,[rsp+0x40]
   1400383f8:	lea    rdx,[rsp+0x60]
   1400383fd:	mov    QWORD PTR [rsp+0x38],r11
   140038402:	and    DWORD PTR [rsp+0x30],0x0
   140038407:	and    DWORD PTR [rsp+0x28],0x0
   14003840c:	and    DWORD PTR [rsp+0x20],0x0
   140038411:	lea    rcx,[rsp+0x68]
   140038416:	xor    r9d,r9d
   140038419:	mov    r8,rbx
   14003841c:	call   0x1400394bc
   140038421:	lea    rcx,[rsp+0x68]
   140038426:	mov    rdx,rdi
   140038429:	mov    ebx,eax
   14003842b:	call   0x1400388b4
   140038430:	mov    edx,0x3
   140038435:	test   dl,bl
   140038437:	jne    0x140038474
   140038439:	cmp    eax,0x1
   14003843c:	jne    0x140038455
   14003843e:	cmp    BYTE PTR [rsp+0x58],0x0
   140038443:	je     0x140038451
   140038445:	mov    rcx,QWORD PTR [rsp+0x50]
   14003844a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140038451:	mov    eax,edx
   140038453:	jmp    0x1400384a8
   140038455:	cmp    eax,0x2
   140038458:	jne    0x140038493
   14003845a:	cmp    BYTE PTR [rsp+0x58],0x0
   14003845f:	je     0x14003846d
   140038461:	mov    rax,QWORD PTR [rsp+0x50]
   140038466:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003846d:	mov    eax,0x4
   140038472:	jmp    0x1400384a8
   140038474:	test   bl,0x1
   140038477:	jne    0x14003845a
   140038479:	test   bl,0x2
   14003847c:	je     0x140038493
   14003847e:	cmp    BYTE PTR [rsp+0x58],0x0
   140038483:	je     0x140038451
   140038485:	mov    rax,QWORD PTR [rsp+0x50]
   14003848a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038491:	jmp    0x140038451
   140038493:	cmp    BYTE PTR [rsp+0x58],0x0
   140038498:	je     0x1400384a6
   14003849a:	mov    rax,QWORD PTR [rsp+0x50]
   14003849f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400384a6:	xor    eax,eax
   1400384a8:	mov    rcx,QWORD PTR [rsp+0x78]
   1400384ad:	xor    rcx,rsp
   1400384b0:	call   0x14002b250
   1400384b5:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400384bd:	add    rsp,0x80
   1400384c4:	pop    rdi
   1400384c5:	ret    
   1400384c6:	int3   
   1400384c7:	int3   
   1400384c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400384cd:	push   rdi
   1400384ce:	sub    rsp,0x80
   1400384d5:	mov    rax,QWORD PTR [rip+0x2e3d4]        # 0x1400668b0
   1400384dc:	xor    rax,rsp
   1400384df:	mov    QWORD PTR [rsp+0x78],rax
   1400384e4:	mov    rdi,rcx
   1400384e7:	mov    rbx,rdx
   1400384ea:	lea    rcx,[rsp+0x40]
   1400384ef:	mov    rdx,r8
   1400384f2:	call   0x14002b47c
   1400384f7:	lea    r11,[rsp+0x40]
   1400384fc:	lea    rdx,[rsp+0x60]
   140038501:	mov    QWORD PTR [rsp+0x38],r11
   140038506:	and    DWORD PTR [rsp+0x30],0x0
   14003850b:	and    DWORD PTR [rsp+0x28],0x0
   140038510:	and    DWORD PTR [rsp+0x20],0x0
   140038515:	lea    rcx,[rsp+0x68]
   14003851a:	xor    r9d,r9d
   14003851d:	mov    r8,rbx
   140038520:	call   0x1400394bc
   140038525:	lea    rcx,[rsp+0x68]
   14003852a:	mov    rdx,rdi
   14003852d:	mov    ebx,eax
   14003852f:	call   0x140038eb8
   140038534:	mov    edx,0x3
   140038539:	test   dl,bl
   14003853b:	jne    0x140038578
   14003853d:	cmp    eax,0x1
   140038540:	jne    0x140038559
   140038542:	cmp    BYTE PTR [rsp+0x58],0x0
   140038547:	je     0x140038555
   140038549:	mov    rcx,QWORD PTR [rsp+0x50]
   14003854e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140038555:	mov    eax,edx
   140038557:	jmp    0x1400385ac
   140038559:	cmp    eax,0x2
   14003855c:	jne    0x140038597
   14003855e:	cmp    BYTE PTR [rsp+0x58],0x0
   140038563:	je     0x140038571
   140038565:	mov    rax,QWORD PTR [rsp+0x50]
   14003856a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038571:	mov    eax,0x4
   140038576:	jmp    0x1400385ac
   140038578:	test   bl,0x1
   14003857b:	jne    0x14003855e
   14003857d:	test   bl,0x2
   140038580:	je     0x140038597
   140038582:	cmp    BYTE PTR [rsp+0x58],0x0
   140038587:	je     0x140038555
   140038589:	mov    rax,QWORD PTR [rsp+0x50]
   14003858e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140038595:	jmp    0x140038555
   140038597:	cmp    BYTE PTR [rsp+0x58],0x0
   14003859c:	je     0x1400385aa
   14003859e:	mov    rax,QWORD PTR [rsp+0x50]
   1400385a3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400385aa:	xor    eax,eax
   1400385ac:	mov    rcx,QWORD PTR [rsp+0x78]
   1400385b1:	xor    rcx,rsp
   1400385b4:	call   0x14002b250
   1400385b9:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400385c1:	add    rsp,0x80
   1400385c8:	pop    rdi
   1400385c9:	ret    
   1400385ca:	int3   
   1400385cb:	int3   
   1400385cc:	mov    ecx,0x2
   1400385d1:	jmp    0x140030378
   1400385d6:	int3   
   1400385d7:	int3   
   1400385d8:	sub    rsp,0x38
   1400385dc:	mov    rax,QWORD PTR [rip+0x2e2cd]        # 0x1400668b0
   1400385e3:	xor    rax,rsp
   1400385e6:	mov    QWORD PTR [rsp+0x28],rax
   1400385eb:	lea    r8,[rsp+0x20]
   1400385f0:	mov    r9d,0x6
   1400385f6:	mov    edx,0x1004
   1400385fb:	mov    BYTE PTR [rsp+0x26],0x0
   140038600:	call   QWORD PTR [rip+0x4ae2]        # 0x14003d0e8
   140038606:	test   eax,eax
   140038608:	jne    0x14003860f
   14003860a:	or     eax,0xffffffff
   14003860d:	jmp    0x140038619
   14003860f:	lea    rcx,[rsp+0x20]
   140038614:	call   0x14002efd0
   140038619:	mov    rcx,QWORD PTR [rsp+0x28]
   14003861e:	xor    rcx,rsp
   140038621:	call   0x14002b250
   140038626:	add    rsp,0x38
   14003862a:	ret    
   14003862b:	int3   
   14003862c:	rex push rbp
   14003862e:	push   rbx
   14003862f:	push   rsi
   140038630:	push   rdi
   140038631:	push   r12
   140038633:	push   r13
   140038635:	push   r14
   140038637:	push   r15
   140038639:	sub    rsp,0x88
   140038640:	lea    rbp,[rsp+0x40]
   140038645:	mov    rax,QWORD PTR [rip+0x2e264]        # 0x1400668b0
   14003864c:	xor    rax,rbp
   14003864f:	mov    QWORD PTR [rbp+0x30],rax
   140038653:	mov    r14,QWORD PTR [rbp+0xb0]
   14003865a:	mov    r12d,DWORD PTR [r9]
   14003865d:	xor    edi,edi
   14003865f:	mov    rbx,r8
   140038662:	mov    rsi,rdi
   140038665:	mov    DWORD PTR [rbp+0x0],edi
   140038668:	mov    QWORD PTR [rbp+0x10],r9
   14003866c:	mov    r13d,edx
   14003866f:	mov    r15d,ecx
   140038672:	mov    QWORD PTR [rbp+0x8],rbx
   140038676:	cmp    ecx,edx
   140038678:	je     0x140038891
   14003867e:	lea    rdx,[rbp+0x18]
   140038682:	call   QWORD PTR [rip+0x4b78]        # 0x14003d200
   140038688:	cmp    eax,edi
   14003868a:	je     0x14003872f
   140038690:	cmp    DWORD PTR [rbp+0x18],0x1
   140038694:	jne    0x14003872f
   14003869a:	lea    rdx,[rbp+0x18]
   14003869e:	mov    ecx,r13d
   1400386a1:	call   QWORD PTR [rip+0x4b59]        # 0x14003d200
   1400386a7:	cmp    eax,edi
   1400386a9:	je     0x14003872f
   1400386af:	cmp    DWORD PTR [rbp+0x18],0x1
   1400386b3:	jne    0x14003872f
   1400386b5:	mov    DWORD PTR [rbp+0x0],0x1
   1400386bc:	cmp    r12d,0xffffffff
   1400386c0:	je     0x140038722
   1400386c2:	mov    edi,r12d
   1400386c5:	test   edi,edi
   1400386c7:	jle    0x140038776
   1400386cd:	movsxd rcx,edi
   1400386d0:	movabs rax,0x7ffffffffffffff0
   1400386da:	cmp    rcx,rax
   1400386dd:	ja     0x140038776
   1400386e3:	lea    rcx,[rcx+rcx*1+0x10]
   1400386e8:	cmp    rcx,0x400
   1400386ef:	ja     0x14003875d
   1400386f1:	lea    rax,[rcx+0xf]
   1400386f5:	cmp    rax,rcx
   1400386f8:	ja     0x140038704
   1400386fa:	movabs rax,0xffffffffffffff0
   140038704:	and    rax,0xfffffffffffffff0
   140038708:	call   0x14003c600
   14003870d:	sub    rsp,rax
   140038710:	lea    rbx,[rsp+0x40]
   140038715:	test   rbx,rbx
   140038718:	je     0x140038756
   14003871a:	mov    DWORD PTR [rbx],0xcccc
   140038720:	jmp    0x140038770
   140038722:	mov    rcx,rbx
   140038725:	call   0x140035dd0
   14003872a:	lea    edi,[rax+0x1]
   14003872d:	jmp    0x1400386c5
   14003872f:	mov    r9d,r12d
   140038732:	mov    r8,rbx
   140038735:	mov    edx,0x1
   14003873a:	mov    ecx,r15d
   14003873d:	mov    DWORD PTR [rsp+0x28],edi
   140038741:	mov    QWORD PTR [rsp+0x20],rdi
   140038746:	call   QWORD PTR [rip+0x4964]        # 0x14003d0b0
   14003874c:	mov    edi,eax
   14003874e:	test   eax,eax
   140038750:	jne    0x1400386c5
   140038756:	xor    eax,eax
   140038758:	jmp    0x140038894
   14003875d:	call   0x14002c04c
   140038762:	mov    rbx,rax
   140038765:	test   rax,rax
   140038768:	je     0x140038778
   14003876a:	mov    DWORD PTR [rax],0xdddd
   140038770:	add    rbx,0x10
   140038774:	jmp    0x140038778
   140038776:	xor    ebx,ebx
   140038778:	test   rbx,rbx
   14003877b:	je     0x140038756
   14003877d:	movsxd r8,edi
   140038780:	xor    edx,edx
   140038782:	mov    rcx,rbx
   140038785:	add    r8,r8
   140038788:	call   0x14002b280
   14003878d:	mov    r8,QWORD PTR [rbp+0x8]
   140038791:	mov    r9d,r12d
   140038794:	mov    edx,0x1
   140038799:	mov    ecx,r15d
   14003879c:	mov    DWORD PTR [rsp+0x28],edi
   1400387a0:	mov    QWORD PTR [rsp+0x20],rbx
   1400387a5:	call   QWORD PTR [rip+0x4905]        # 0x14003d0b0
   1400387ab:	xor    r15d,r15d
   1400387ae:	cmp    eax,r15d
   1400387b1:	je     0x140038880
   1400387b7:	cmp    r14,r15
   1400387ba:	je     0x1400387f7
   1400387bc:	mov    eax,DWORD PTR [rbp+0xb8]
   1400387c2:	mov    QWORD PTR [rsp+0x38],r15
   1400387c7:	mov    QWORD PTR [rsp+0x30],r15
   1400387cc:	mov    DWORD PTR [rsp+0x28],eax
   1400387d0:	mov    r9d,edi
   1400387d3:	mov    r8,rbx
   1400387d6:	xor    edx,edx
   1400387d8:	mov    ecx,r13d
   1400387db:	mov    QWORD PTR [rsp+0x20],r14
   1400387e0:	call   QWORD PTR [rip+0x48b2]        # 0x14003d098
   1400387e6:	cmp    eax,r15d
   1400387e9:	je     0x140038880
   1400387ef:	mov    rsi,r14
   1400387f2:	jmp    0x140038880
   1400387f7:	cmp    DWORD PTR [rbp+0x0],r15d
   1400387fb:	jne    0x140038829
   1400387fd:	mov    QWORD PTR [rsp+0x38],r15
   140038802:	mov    QWORD PTR [rsp+0x30],r15
   140038807:	mov    r9d,edi
   14003880a:	mov    r8,rbx
   14003880d:	xor    edx,edx
   14003880f:	mov    ecx,r13d
   140038812:	mov    DWORD PTR [rsp+0x28],r15d
   140038817:	mov    QWORD PTR [rsp+0x20],r15
   14003881c:	call   QWORD PTR [rip+0x4876]        # 0x14003d098
   140038822:	mov    edi,eax
   140038824:	cmp    eax,r15d
   140038827:	je     0x140038880
   140038829:	movsxd rdx,edi
   14003882c:	mov    ecx,0x1
   140038831:	call   0x140030134
   140038836:	mov    rsi,rax
   140038839:	cmp    rax,r15
   14003883c:	je     0x140038880
   14003883e:	mov    QWORD PTR [rsp+0x38],r15
   140038843:	mov    QWORD PTR [rsp+0x30],r15
   140038848:	mov    r9d,edi
   14003884b:	mov    r8,rbx
   14003884e:	xor    edx,edx
   140038850:	mov    ecx,r13d
   140038853:	mov    DWORD PTR [rsp+0x28],edi
   140038857:	mov    QWORD PTR [rsp+0x20],rax
   14003885c:	call   QWORD PTR [rip+0x4836]        # 0x14003d098
   140038862:	cmp    eax,r15d
   140038865:	jne    0x140038874
   140038867:	mov    rcx,rsi
   14003886a:	call   0x14002b36c
   14003886f:	mov    rsi,r15
   140038872:	jmp    0x140038880
   140038874:	cmp    r12d,0xffffffff
   140038878:	je     0x140038880
   14003887a:	mov    rcx,QWORD PTR [rbp+0x10]
   14003887e:	mov    DWORD PTR [rcx],eax
   140038880:	lea    rcx,[rbx-0x10]
   140038884:	cmp    DWORD PTR [rcx],0xdddd
   14003888a:	jne    0x140038891
   14003888c:	call   0x14002b36c
   140038891:	mov    rax,rsi
   140038894:	mov    rcx,QWORD PTR [rbp+0x30]
   140038898:	xor    rcx,rbp
   14003889b:	call   0x14002b250
   1400388a0:	lea    rsp,[rbp+0x48]
   1400388a4:	pop    r15
   1400388a6:	pop    r14
   1400388a8:	pop    r13
   1400388aa:	pop    r12
   1400388ac:	pop    rdi
   1400388ad:	pop    rsi
   1400388ae:	pop    rbx
   1400388af:	pop    rbp
   1400388b0:	ret    
   1400388b1:	int3   
   1400388b2:	int3   
   1400388b3:	int3   
   1400388b4:	mov    QWORD PTR [rsp+0x10],rdx
   1400388b9:	push   rbx
   1400388ba:	push   rsi
   1400388bb:	push   rdi
   1400388bc:	push   r12
   1400388be:	push   r13
   1400388c0:	push   r14
   1400388c2:	push   r15
   1400388c4:	sub    rsp,0x40
   1400388c8:	movzx  eax,WORD PTR [rcx+0xa]
   1400388cc:	xor    ebx,ebx
   1400388ce:	mov    r15d,0x1f
   1400388d4:	mov    edi,eax
   1400388d6:	and    eax,0x8000
   1400388db:	lea    esi,[rbx+0x1]
   1400388de:	mov    DWORD PTR [rsp+0x80],eax
   1400388e5:	mov    eax,DWORD PTR [rcx+0x6]
   1400388e8:	and    edi,0x7fff
   1400388ee:	mov    DWORD PTR [rsp+0x20],eax
   1400388f2:	mov    eax,DWORD PTR [rcx+0x2]
   1400388f5:	sub    edi,0x3fff
   1400388fb:	mov    DWORD PTR [rsp+0x24],eax
   1400388ff:	movzx  eax,WORD PTR [rcx]
   140038902:	shl    eax,0x10
   140038905:	mov    DWORD PTR [rsp+0x28],eax
   140038909:	cmp    edi,0xffffc001
   14003890f:	jne    0x14003893e
   140038911:	mov    r8d,ebx
   140038914:	mov    rax,rbx
   140038917:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   14003891b:	jne    0x14003892b
   14003891d:	add    rax,rsi
   140038920:	cmp    rax,0x3
   140038924:	jl     0x140038917
   140038926:	jmp    0x140038e63
   14003892b:	mov    QWORD PTR [rsp+0x20],rbx
   140038930:	mov    DWORD PTR [rsp+0x28],ebx
   140038934:	mov    ebx,0x2
   140038939:	jmp    0x140038e63
   14003893e:	mov    r9d,DWORD PTR [rip+0x2f243]        # 0x140067b88
   140038945:	lea    rcx,[rsp+0x20]
   14003894a:	mov    r11d,r15d
   14003894d:	mov    rax,QWORD PTR [rcx]
   140038950:	or     r13d,0xffffffff
   140038954:	mov    DWORD PTR [rsp+0x90],edi
   14003895b:	mov    QWORD PTR [rsp+0x30],rax
   140038960:	mov    eax,DWORD PTR [rcx+0x8]
   140038963:	mov    r12d,ebx
   140038966:	mov    DWORD PTR [rsp+0x38],eax
   14003896a:	mov    eax,r9d
   14003896d:	cdq    
   14003896e:	and    edx,r15d
   140038971:	add    eax,edx
   140038973:	mov    r10d,eax
   140038976:	and    eax,r15d
   140038979:	sar    r10d,0x5
   14003897d:	sub    eax,edx
   14003897f:	movsxd r14,r10d
   140038982:	sub    r11d,eax
   140038985:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14003898a:	bt     ecx,r11d
   14003898e:	jae    0x140038a2d
   140038994:	mov    ecx,r11d
   140038997:	mov    eax,r13d
   14003899a:	movsxd r8,r10d
   14003899d:	shl    eax,cl
   14003899f:	not    eax
   1400389a1:	test   DWORD PTR [rsp+r8*4+0x20],eax
   1400389a6:	jne    0x1400389c1
   1400389a8:	lea    eax,[rsi+r8*1]
   1400389ac:	cdqe   
   1400389ae:	jmp    0x1400389b9
   1400389b0:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   1400389b4:	jne    0x1400389c1
   1400389b6:	add    rax,rsi
   1400389b9:	cmp    rax,0x3
   1400389bd:	jl     0x1400389b0
   1400389bf:	jmp    0x140038a2d
   1400389c1:	lea    eax,[r9-0x1]
   1400389c5:	mov    ecx,r15d
   1400389c8:	cdq    
   1400389c9:	and    edx,r15d
   1400389cc:	add    eax,edx
   1400389ce:	mov    r8d,eax
   1400389d1:	and    eax,r15d
   1400389d4:	sub    eax,edx
   1400389d6:	sar    r8d,0x5
   1400389da:	mov    edx,esi
   1400389dc:	sub    ecx,eax
   1400389de:	movsxd r9,r8d
   1400389e1:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   1400389e6:	shl    edx,cl
   1400389e8:	lea    ecx,[rax+rdx*1]
   1400389eb:	cmp    ecx,eax
   1400389ed:	jb     0x1400389f3
   1400389ef:	cmp    ecx,edx
   1400389f1:	jae    0x1400389f6
   1400389f3:	mov    r12d,esi
   1400389f6:	sub    r8d,esi
   1400389f9:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   1400389fe:	movsxd rdx,r8d
   140038a01:	cmp    rdx,rbx
   140038a04:	jl     0x140038a2d
   140038a06:	cmp    r12d,ebx
   140038a09:	je     0x140038a2d
   140038a0b:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   140038a0f:	mov    r12d,ebx
   140038a12:	lea    r8d,[rax+0x1]
   140038a16:	cmp    r8d,eax
   140038a19:	jb     0x140038a20
   140038a1b:	cmp    r8d,esi
   140038a1e:	jae    0x140038a23
   140038a20:	mov    r12d,esi
   140038a23:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   140038a28:	sub    rdx,rsi
   140038a2b:	jns    0x140038a06
   140038a2d:	mov    ecx,r11d
   140038a30:	mov    eax,r13d
   140038a33:	shl    eax,cl
   140038a35:	and    DWORD PTR [rsp+r14*4+0x20],eax
   140038a3a:	lea    eax,[r10+0x1]
   140038a3e:	movsxd rdx,eax
   140038a41:	cmp    rdx,0x3
   140038a45:	jge    0x140038a60
   140038a47:	lea    rcx,[rsp+rdx*4+0x20]
   140038a4c:	mov    r8d,0x3
   140038a52:	sub    r8,rdx
   140038a55:	xor    edx,edx
   140038a57:	shl    r8,0x2
   140038a5b:	call   0x14002b280
   140038a60:	cmp    r12d,ebx
   140038a63:	je     0x140038a67
   140038a65:	add    edi,esi
   140038a67:	mov    edx,DWORD PTR [rip+0x2f117]        # 0x140067b84
   140038a6d:	mov    eax,edx
   140038a6f:	sub    eax,DWORD PTR [rip+0x2f113]        # 0x140067b88
   140038a75:	cmp    edi,eax
   140038a77:	jge    0x140038a8f
   140038a79:	mov    QWORD PTR [rsp+0x20],rbx
   140038a7e:	mov    DWORD PTR [rsp+0x28],ebx
   140038a82:	mov    r8d,ebx
   140038a85:	mov    ebx,0x2
   140038a8a:	jmp    0x140038e5b
   140038a8f:	cmp    edi,edx
   140038a91:	jg     0x140038cf4
   140038a97:	sub    edx,DWORD PTR [rsp+0x90]
   140038a9e:	lea    rax,[rsp+0x30]
   140038aa3:	mov    r11d,r13d
   140038aa6:	mov    rcx,QWORD PTR [rax]
   140038aa9:	mov    r12d,0x20
   140038aaf:	mov    r9d,ebx
   140038ab2:	mov    QWORD PTR [rsp+0x20],rcx
   140038ab7:	mov    ecx,DWORD PTR [rax+0x8]
   140038aba:	mov    eax,edx
   140038abc:	cdq    
   140038abd:	mov    DWORD PTR [rsp+0x28],ecx
   140038ac1:	mov    r8,rbx
   140038ac4:	and    edx,r15d
   140038ac7:	add    eax,edx
   140038ac9:	mov    r10d,eax
   140038acc:	and    eax,r15d
   140038acf:	sub    eax,edx
   140038ad1:	sar    r10d,0x5
   140038ad5:	mov    ecx,eax
   140038ad7:	mov    edi,eax
   140038ad9:	shl    r11d,cl
   140038adc:	sub    r12d,eax
   140038adf:	not    r11d
   140038ae2:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140038ae7:	mov    ecx,edi
   140038ae9:	mov    eax,edx
   140038aeb:	shr    edx,cl
   140038aed:	mov    ecx,r12d
   140038af0:	or     edx,r9d
   140038af3:	and    eax,r11d
   140038af6:	mov    DWORD PTR [rsp+0x90],eax
   140038afd:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   140038b02:	add    r8,rsi
   140038b05:	mov    r9d,DWORD PTR [rsp+0x90]
   140038b0d:	shl    r9d,cl
   140038b10:	cmp    r8,0x3
   140038b14:	jl     0x140038ae2
   140038b16:	movsxd r8,r10d
   140038b19:	lea    rdx,[rsp+0x28]
   140038b1e:	mov    edi,0x2
   140038b23:	mov    rax,r8
   140038b26:	mov    rcx,rdi
   140038b29:	shl    rax,0x2
   140038b2d:	sub    rdx,rax
   140038b30:	cmp    rcx,r8
   140038b33:	jl     0x140038b3d
   140038b35:	mov    eax,DWORD PTR [rdx]
   140038b37:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   140038b3b:	jmp    0x140038b41
   140038b3d:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   140038b41:	sub    rcx,rsi
   140038b44:	sub    rdx,0x4
   140038b48:	cmp    rcx,rbx
   140038b4b:	jge    0x140038b30
   140038b4d:	mov    r9d,DWORD PTR [rip+0x2f034]        # 0x140067b88
   140038b54:	mov    r12d,r15d
   140038b57:	mov    eax,r9d
   140038b5a:	cdq    
   140038b5b:	and    edx,r15d
   140038b5e:	add    eax,edx
   140038b60:	mov    r11d,eax
   140038b63:	and    eax,r15d
   140038b66:	sar    r11d,0x5
   140038b6a:	sub    eax,edx
   140038b6c:	movsxd r14,r11d
   140038b6f:	sub    r12d,eax
   140038b72:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   140038b77:	bt     ecx,r12d
   140038b7b:	jae    0x140038c1c
   140038b81:	mov    ecx,r12d
   140038b84:	mov    eax,r13d
   140038b87:	movsxd r8,r11d
   140038b8a:	shl    eax,cl
   140038b8c:	not    eax
   140038b8e:	test   DWORD PTR [rsp+r8*4+0x20],eax
   140038b93:	jne    0x140038bae
   140038b95:	lea    eax,[rsi+r8*1]
   140038b99:	cdqe   
   140038b9b:	jmp    0x140038ba6
   140038b9d:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   140038ba1:	jne    0x140038bae
   140038ba3:	add    rax,rsi
   140038ba6:	cmp    rax,0x3
   140038baa:	jl     0x140038b9d
   140038bac:	jmp    0x140038c1c
   140038bae:	lea    eax,[r9-0x1]
   140038bb2:	mov    ecx,r15d
   140038bb5:	mov    r9d,esi
   140038bb8:	cdq    
   140038bb9:	and    edx,r15d
   140038bbc:	add    eax,edx
   140038bbe:	mov    r8d,eax
   140038bc1:	and    eax,r15d
   140038bc4:	sub    eax,edx
   140038bc6:	sar    r8d,0x5
   140038bca:	sub    ecx,eax
   140038bcc:	movsxd r10,r8d
   140038bcf:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   140038bd4:	shl    r9d,cl
   140038bd7:	mov    ecx,ebx
   140038bd9:	lea    edx,[rax+r9*1]
   140038bdd:	cmp    edx,eax
   140038bdf:	jb     0x140038be6
   140038be1:	cmp    edx,r9d
   140038be4:	jae    0x140038be8
   140038be6:	mov    ecx,esi
   140038be8:	sub    r8d,esi
   140038beb:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   140038bf0:	movsxd rdx,r8d
   140038bf3:	cmp    rdx,rbx
   140038bf6:	jl     0x140038c1c
   140038bf8:	cmp    ecx,ebx
   140038bfa:	je     0x140038c1c
   140038bfc:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   140038c00:	mov    ecx,ebx
   140038c02:	lea    r8d,[rax+0x1]
   140038c06:	cmp    r8d,eax
   140038c09:	jb     0x140038c10
   140038c0b:	cmp    r8d,esi
   140038c0e:	jae    0x140038c12
   140038c10:	mov    ecx,esi
   140038c12:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   140038c17:	sub    rdx,rsi
   140038c1a:	jns    0x140038bf8
   140038c1c:	mov    ecx,r12d
   140038c1f:	mov    eax,r13d
   140038c22:	shl    eax,cl
   140038c24:	and    DWORD PTR [rsp+r14*4+0x20],eax
   140038c29:	lea    eax,[r11+0x1]
   140038c2d:	movsxd rdx,eax
   140038c30:	cmp    rdx,0x3
   140038c34:	jge    0x140038c4f
   140038c36:	lea    rcx,[rsp+rdx*4+0x20]
   140038c3b:	mov    r8d,0x3
   140038c41:	sub    r8,rdx
   140038c44:	xor    edx,edx
   140038c46:	shl    r8,0x2
   140038c4a:	call   0x14002b280
   140038c4f:	mov    eax,DWORD PTR [rip+0x2ef37]        # 0x140067b8c
   140038c55:	mov    r12d,0x20
   140038c5b:	mov    r9d,ebx
   140038c5e:	inc    eax
   140038c60:	mov    r8,rbx
   140038c63:	cdq    
   140038c64:	and    edx,r15d
   140038c67:	add    eax,edx
   140038c69:	mov    r10d,eax
   140038c6c:	and    eax,r15d
   140038c6f:	sub    eax,edx
   140038c71:	sar    r10d,0x5
   140038c75:	mov    ecx,eax
   140038c77:	mov    r11d,eax
   140038c7a:	shl    r13d,cl
   140038c7d:	sub    r12d,eax
   140038c80:	not    r13d
   140038c83:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140038c88:	mov    ecx,r11d
   140038c8b:	mov    eax,edx
   140038c8d:	shr    edx,cl
   140038c8f:	mov    ecx,r12d
   140038c92:	or     edx,r9d
   140038c95:	and    eax,r13d
   140038c98:	mov    DWORD PTR [rsp+0x90],eax
   140038c9f:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   140038ca4:	add    r8,rsi
   140038ca7:	mov    r9d,DWORD PTR [rsp+0x90]
   140038caf:	shl    r9d,cl
   140038cb2:	cmp    r8,0x3
   140038cb6:	jl     0x140038c83
   140038cb8:	movsxd r8,r10d
   140038cbb:	lea    rdx,[rsp+0x28]
   140038cc0:	mov    rcx,rdi
   140038cc3:	mov    rax,r8
   140038cc6:	shl    rax,0x2
   140038cca:	sub    rdx,rax
   140038ccd:	cmp    rcx,r8
   140038cd0:	jl     0x140038cda
   140038cd2:	mov    eax,DWORD PTR [rdx]
   140038cd4:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   140038cd8:	jmp    0x140038cde
   140038cda:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   140038cde:	sub    rcx,rsi
   140038ce1:	sub    rdx,0x4
   140038ce5:	cmp    rcx,rbx
   140038ce8:	jge    0x140038ccd
   140038cea:	mov    r8d,ebx
   140038ced:	mov    ebx,edi
   140038cef:	jmp    0x140038e5b
   140038cf4:	mov    eax,DWORD PTR [rip+0x2ee92]        # 0x140067b8c
   140038cfa:	cdq    
   140038cfb:	and    edx,r15d
   140038cfe:	add    eax,edx
   140038d00:	cmp    edi,DWORD PTR [rip+0x2ee7a]        # 0x140067b80
   140038d06:	jl     0x140038dbe
   140038d0c:	mov    r10d,eax
   140038d0f:	and    eax,r15d
   140038d12:	mov    edi,0x20
   140038d17:	sub    eax,edx
   140038d19:	mov    QWORD PTR [rsp+0x20],rbx
   140038d1e:	bts    DWORD PTR [rsp+0x20],0x1f
   140038d24:	mov    ecx,eax
   140038d26:	sar    r10d,0x5
   140038d2a:	mov    DWORD PTR [rsp+0x28],ebx
   140038d2e:	shl    r13d,cl
   140038d31:	mov    r11d,eax
   140038d34:	mov    r9d,ebx
   140038d37:	not    r13d
   140038d3a:	mov    r8,rbx
   140038d3d:	sub    edi,eax
   140038d3f:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140038d44:	mov    ecx,r11d
   140038d47:	mov    eax,r13d
   140038d4a:	and    eax,edx
   140038d4c:	shr    edx,cl
   140038d4e:	mov    ecx,edi
   140038d50:	or     edx,r9d
   140038d53:	mov    DWORD PTR [rsp+0x90],eax
   140038d5a:	mov    r9d,DWORD PTR [rsp+0x90]
   140038d62:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   140038d67:	add    r8,rsi
   140038d6a:	shl    r9d,cl
   140038d6d:	cmp    r8,0x3
   140038d71:	jl     0x140038d3f
   140038d73:	movsxd rdx,r10d
   140038d76:	lea    rcx,[rsp+0x28]
   140038d7b:	mov    edi,0x2
   140038d80:	mov    rax,rdx
   140038d83:	shl    rax,0x2
   140038d87:	sub    rcx,rax
   140038d8a:	cmp    rdi,rdx
   140038d8d:	jl     0x140038d97
   140038d8f:	mov    eax,DWORD PTR [rcx]
   140038d91:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   140038d95:	jmp    0x140038d9b
   140038d97:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   140038d9b:	sub    rdi,rsi
   140038d9e:	sub    rcx,0x4
   140038da2:	cmp    rdi,rbx
   140038da5:	jge    0x140038d8a
   140038da7:	mov    ecx,DWORD PTR [rip+0x2edd3]        # 0x140067b80
   140038dad:	mov    r8d,DWORD PTR [rip+0x2ede0]        # 0x140067b94
   140038db4:	mov    ebx,esi
   140038db6:	add    r8d,ecx
   140038db9:	jmp    0x140038e5b
   140038dbe:	mov    r8d,DWORD PTR [rip+0x2edcf]        # 0x140067b94
   140038dc5:	btr    DWORD PTR [rsp+0x20],0x1f
   140038dcb:	mov    r11d,eax
   140038dce:	and    eax,r15d
   140038dd1:	add    r8d,edi
   140038dd4:	mov    r12d,0x20
   140038dda:	sub    eax,edx
   140038ddc:	sar    r11d,0x5
   140038de0:	mov    r10d,ebx
   140038de3:	mov    ecx,eax
   140038de5:	mov    edi,eax
   140038de7:	mov    r9,rbx
   140038dea:	shl    r13d,cl
   140038ded:	sub    r12d,eax
   140038df0:	not    r13d
   140038df3:	mov    edx,DWORD PTR [rsp+r9*4+0x20]
   140038df8:	mov    ecx,edi
   140038dfa:	mov    eax,r13d
   140038dfd:	and    eax,edx
   140038dff:	shr    edx,cl
   140038e01:	mov    ecx,r12d
   140038e04:	or     edx,r10d
   140038e07:	mov    DWORD PTR [rsp+0x90],eax
   140038e0e:	mov    r10d,DWORD PTR [rsp+0x90]
   140038e16:	mov    DWORD PTR [rsp+r9*4+0x20],edx
   140038e1b:	add    r9,rsi
   140038e1e:	shl    r10d,cl
   140038e21:	cmp    r9,0x3
   140038e25:	jl     0x140038df3
   140038e27:	movsxd rdx,r11d
   140038e2a:	lea    rcx,[rsp+0x28]
   140038e2f:	mov    edi,0x2
   140038e34:	mov    rax,rdx
   140038e37:	shl    rax,0x2
   140038e3b:	sub    rcx,rax
   140038e3e:	cmp    rdi,rdx
   140038e41:	jl     0x140038e4b
   140038e43:	mov    eax,DWORD PTR [rcx]
   140038e45:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   140038e49:	jmp    0x140038e4f
   140038e4b:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   140038e4f:	sub    rdi,rsi
   140038e52:	sub    rcx,0x4
   140038e56:	cmp    rdi,rbx
   140038e59:	jge    0x140038e3e
   140038e5b:	mov    rdx,QWORD PTR [rsp+0x88]
   140038e63:	sub    r15d,DWORD PTR [rip+0x2ed22]        # 0x140067b8c
   140038e6a:	mov    cl,r15b
   140038e6d:	shl    r8d,cl
   140038e70:	neg    DWORD PTR [rsp+0x80]
   140038e77:	sbb    eax,eax
   140038e79:	and    eax,0x80000000
   140038e7e:	or     r8d,eax
   140038e81:	mov    eax,DWORD PTR [rip+0x2ed09]        # 0x140067b90
   140038e87:	or     r8d,DWORD PTR [rsp+0x20]
   140038e8c:	cmp    eax,0x40
   140038e8f:	jne    0x140038e9d
   140038e91:	mov    eax,DWORD PTR [rsp+0x24]
   140038e95:	mov    DWORD PTR [rdx+0x4],r8d
   140038e99:	mov    DWORD PTR [rdx],eax
   140038e9b:	jmp    0x140038ea5
   140038e9d:	cmp    eax,0x20
   140038ea0:	jne    0x140038ea5
   140038ea2:	mov    DWORD PTR [rdx],r8d
   140038ea5:	mov    eax,ebx
   140038ea7:	add    rsp,0x40
   140038eab:	pop    r15
   140038ead:	pop    r14
   140038eaf:	pop    r13
   140038eb1:	pop    r12
   140038eb3:	pop    rdi
   140038eb4:	pop    rsi
   140038eb5:	pop    rbx
   140038eb6:	ret    
   140038eb7:	int3   
   140038eb8:	mov    QWORD PTR [rsp+0x10],rdx
   140038ebd:	push   rbx
   140038ebe:	push   rsi
   140038ebf:	push   rdi
   140038ec0:	push   r12
   140038ec2:	push   r13
   140038ec4:	push   r14
   140038ec6:	push   r15
   140038ec8:	sub    rsp,0x40
   140038ecc:	movzx  eax,WORD PTR [rcx+0xa]
   140038ed0:	xor    ebx,ebx
   140038ed2:	mov    r15d,0x1f
   140038ed8:	mov    edi,eax
   140038eda:	and    eax,0x8000
   140038edf:	lea    esi,[rbx+0x1]
   140038ee2:	mov    DWORD PTR [rsp+0x80],eax
   140038ee9:	mov    eax,DWORD PTR [rcx+0x6]
   140038eec:	and    edi,0x7fff
   140038ef2:	mov    DWORD PTR [rsp+0x20],eax
   140038ef6:	mov    eax,DWORD PTR [rcx+0x2]
   140038ef9:	sub    edi,0x3fff
   140038eff:	mov    DWORD PTR [rsp+0x24],eax
   140038f03:	movzx  eax,WORD PTR [rcx]
   140038f06:	shl    eax,0x10
   140038f09:	mov    DWORD PTR [rsp+0x28],eax
   140038f0d:	cmp    edi,0xffffc001
   140038f13:	jne    0x140038f42
   140038f15:	mov    r8d,ebx
   140038f18:	mov    rax,rbx
   140038f1b:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   140038f1f:	jne    0x140038f2f
   140038f21:	add    rax,rsi
   140038f24:	cmp    rax,0x3
   140038f28:	jl     0x140038f1b
   140038f2a:	jmp    0x140039467
   140038f2f:	mov    QWORD PTR [rsp+0x20],rbx
   140038f34:	mov    DWORD PTR [rsp+0x28],ebx
   140038f38:	mov    ebx,0x2
   140038f3d:	jmp    0x140039467
   140038f42:	mov    r9d,DWORD PTR [rip+0x2ec57]        # 0x140067ba0
   140038f49:	lea    rcx,[rsp+0x20]
   140038f4e:	mov    r11d,r15d
   140038f51:	mov    rax,QWORD PTR [rcx]
   140038f54:	or     r13d,0xffffffff
   140038f58:	mov    DWORD PTR [rsp+0x90],edi
   140038f5f:	mov    QWORD PTR [rsp+0x30],rax
   140038f64:	mov    eax,DWORD PTR [rcx+0x8]
   140038f67:	mov    r12d,ebx
   140038f6a:	mov    DWORD PTR [rsp+0x38],eax
   140038f6e:	mov    eax,r9d
   140038f71:	cdq    
   140038f72:	and    edx,r15d
   140038f75:	add    eax,edx
   140038f77:	mov    r10d,eax
   140038f7a:	and    eax,r15d
   140038f7d:	sar    r10d,0x5
   140038f81:	sub    eax,edx
   140038f83:	movsxd r14,r10d
   140038f86:	sub    r11d,eax
   140038f89:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   140038f8e:	bt     ecx,r11d
   140038f92:	jae    0x140039031
   140038f98:	mov    ecx,r11d
   140038f9b:	mov    eax,r13d
   140038f9e:	movsxd r8,r10d
   140038fa1:	shl    eax,cl
   140038fa3:	not    eax
   140038fa5:	test   DWORD PTR [rsp+r8*4+0x20],eax
   140038faa:	jne    0x140038fc5
   140038fac:	lea    eax,[rsi+r8*1]
   140038fb0:	cdqe   
   140038fb2:	jmp    0x140038fbd
   140038fb4:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   140038fb8:	jne    0x140038fc5
   140038fba:	add    rax,rsi
   140038fbd:	cmp    rax,0x3
   140038fc1:	jl     0x140038fb4
   140038fc3:	jmp    0x140039031
   140038fc5:	lea    eax,[r9-0x1]
   140038fc9:	mov    ecx,r15d
   140038fcc:	cdq    
   140038fcd:	and    edx,r15d
   140038fd0:	add    eax,edx
   140038fd2:	mov    r8d,eax
   140038fd5:	and    eax,r15d
   140038fd8:	sub    eax,edx
   140038fda:	sar    r8d,0x5
   140038fde:	mov    edx,esi
   140038fe0:	sub    ecx,eax
   140038fe2:	movsxd r9,r8d
   140038fe5:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   140038fea:	shl    edx,cl
   140038fec:	lea    ecx,[rax+rdx*1]
   140038fef:	cmp    ecx,eax
   140038ff1:	jb     0x140038ff7
   140038ff3:	cmp    ecx,edx
   140038ff5:	jae    0x140038ffa
   140038ff7:	mov    r12d,esi
   140038ffa:	sub    r8d,esi
   140038ffd:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   140039002:	movsxd rdx,r8d
   140039005:	cmp    rdx,rbx
   140039008:	jl     0x140039031
   14003900a:	cmp    r12d,ebx
   14003900d:	je     0x140039031
   14003900f:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   140039013:	mov    r12d,ebx
   140039016:	lea    r8d,[rax+0x1]
   14003901a:	cmp    r8d,eax
   14003901d:	jb     0x140039024
   14003901f:	cmp    r8d,esi
   140039022:	jae    0x140039027
   140039024:	mov    r12d,esi
   140039027:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14003902c:	sub    rdx,rsi
   14003902f:	jns    0x14003900a
   140039031:	mov    ecx,r11d
   140039034:	mov    eax,r13d
   140039037:	shl    eax,cl
   140039039:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14003903e:	lea    eax,[r10+0x1]
   140039042:	movsxd rdx,eax
   140039045:	cmp    rdx,0x3
   140039049:	jge    0x140039064
   14003904b:	lea    rcx,[rsp+rdx*4+0x20]
   140039050:	mov    r8d,0x3
   140039056:	sub    r8,rdx
   140039059:	xor    edx,edx
   14003905b:	shl    r8,0x2
   14003905f:	call   0x14002b280
   140039064:	cmp    r12d,ebx
   140039067:	je     0x14003906b
   140039069:	add    edi,esi
   14003906b:	mov    edx,DWORD PTR [rip+0x2eb2b]        # 0x140067b9c
   140039071:	mov    eax,edx
   140039073:	sub    eax,DWORD PTR [rip+0x2eb27]        # 0x140067ba0
   140039079:	cmp    edi,eax
   14003907b:	jge    0x140039093
   14003907d:	mov    QWORD PTR [rsp+0x20],rbx
   140039082:	mov    DWORD PTR [rsp+0x28],ebx
   140039086:	mov    r8d,ebx
   140039089:	mov    ebx,0x2
   14003908e:	jmp    0x14003945f
   140039093:	cmp    edi,edx
   140039095:	jg     0x1400392f8
   14003909b:	sub    edx,DWORD PTR [rsp+0x90]
   1400390a2:	lea    rax,[rsp+0x30]
   1400390a7:	mov    r11d,r13d
   1400390aa:	mov    rcx,QWORD PTR [rax]
   1400390ad:	mov    r12d,0x20
   1400390b3:	mov    r9d,ebx
   1400390b6:	mov    QWORD PTR [rsp+0x20],rcx
   1400390bb:	mov    ecx,DWORD PTR [rax+0x8]
   1400390be:	mov    eax,edx
   1400390c0:	cdq    
   1400390c1:	mov    DWORD PTR [rsp+0x28],ecx
   1400390c5:	mov    r8,rbx
   1400390c8:	and    edx,r15d
   1400390cb:	add    eax,edx
   1400390cd:	mov    r10d,eax
   1400390d0:	and    eax,r15d
   1400390d3:	sub    eax,edx
   1400390d5:	sar    r10d,0x5
   1400390d9:	mov    ecx,eax
   1400390db:	mov    edi,eax
   1400390dd:	shl    r11d,cl
   1400390e0:	sub    r12d,eax
   1400390e3:	not    r11d
   1400390e6:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   1400390eb:	mov    ecx,edi
   1400390ed:	mov    eax,edx
   1400390ef:	shr    edx,cl
   1400390f1:	mov    ecx,r12d
   1400390f4:	or     edx,r9d
   1400390f7:	and    eax,r11d
   1400390fa:	mov    DWORD PTR [rsp+0x90],eax
   140039101:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   140039106:	add    r8,rsi
   140039109:	mov    r9d,DWORD PTR [rsp+0x90]
   140039111:	shl    r9d,cl
   140039114:	cmp    r8,0x3
   140039118:	jl     0x1400390e6
   14003911a:	movsxd r8,r10d
   14003911d:	lea    rdx,[rsp+0x28]
   140039122:	mov    edi,0x2
   140039127:	mov    rax,r8
   14003912a:	mov    rcx,rdi
   14003912d:	shl    rax,0x2
   140039131:	sub    rdx,rax
   140039134:	cmp    rcx,r8
   140039137:	jl     0x140039141
   140039139:	mov    eax,DWORD PTR [rdx]
   14003913b:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14003913f:	jmp    0x140039145
   140039141:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   140039145:	sub    rcx,rsi
   140039148:	sub    rdx,0x4
   14003914c:	cmp    rcx,rbx
   14003914f:	jge    0x140039134
   140039151:	mov    r9d,DWORD PTR [rip+0x2ea48]        # 0x140067ba0
   140039158:	mov    r12d,r15d
   14003915b:	mov    eax,r9d
   14003915e:	cdq    
   14003915f:	and    edx,r15d
   140039162:	add    eax,edx
   140039164:	mov    r11d,eax
   140039167:	and    eax,r15d
   14003916a:	sar    r11d,0x5
   14003916e:	sub    eax,edx
   140039170:	movsxd r14,r11d
   140039173:	sub    r12d,eax
   140039176:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14003917b:	bt     ecx,r12d
   14003917f:	jae    0x140039220
   140039185:	mov    ecx,r12d
   140039188:	mov    eax,r13d
   14003918b:	movsxd r8,r11d
   14003918e:	shl    eax,cl
   140039190:	not    eax
   140039192:	test   DWORD PTR [rsp+r8*4+0x20],eax
   140039197:	jne    0x1400391b2
   140039199:	lea    eax,[rsi+r8*1]
   14003919d:	cdqe   
   14003919f:	jmp    0x1400391aa
   1400391a1:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   1400391a5:	jne    0x1400391b2
   1400391a7:	add    rax,rsi
   1400391aa:	cmp    rax,0x3
   1400391ae:	jl     0x1400391a1
   1400391b0:	jmp    0x140039220
   1400391b2:	lea    eax,[r9-0x1]
   1400391b6:	mov    ecx,r15d
   1400391b9:	mov    r9d,esi
   1400391bc:	cdq    
   1400391bd:	and    edx,r15d
   1400391c0:	add    eax,edx
   1400391c2:	mov    r8d,eax
   1400391c5:	and    eax,r15d
   1400391c8:	sub    eax,edx
   1400391ca:	sar    r8d,0x5
   1400391ce:	sub    ecx,eax
   1400391d0:	movsxd r10,r8d
   1400391d3:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   1400391d8:	shl    r9d,cl
   1400391db:	mov    ecx,ebx
   1400391dd:	lea    edx,[rax+r9*1]
   1400391e1:	cmp    edx,eax
   1400391e3:	jb     0x1400391ea
   1400391e5:	cmp    edx,r9d
   1400391e8:	jae    0x1400391ec
   1400391ea:	mov    ecx,esi
   1400391ec:	sub    r8d,esi
   1400391ef:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   1400391f4:	movsxd rdx,r8d
   1400391f7:	cmp    rdx,rbx
   1400391fa:	jl     0x140039220
   1400391fc:	cmp    ecx,ebx
   1400391fe:	je     0x140039220
   140039200:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   140039204:	mov    ecx,ebx
   140039206:	lea    r8d,[rax+0x1]
   14003920a:	cmp    r8d,eax
   14003920d:	jb     0x140039214
   14003920f:	cmp    r8d,esi
   140039212:	jae    0x140039216
   140039214:	mov    ecx,esi
   140039216:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14003921b:	sub    rdx,rsi
   14003921e:	jns    0x1400391fc
   140039220:	mov    ecx,r12d
   140039223:	mov    eax,r13d
   140039226:	shl    eax,cl
   140039228:	and    DWORD PTR [rsp+r14*4+0x20],eax
   14003922d:	lea    eax,[r11+0x1]
   140039231:	movsxd rdx,eax
   140039234:	cmp    rdx,0x3
   140039238:	jge    0x140039253
   14003923a:	lea    rcx,[rsp+rdx*4+0x20]
   14003923f:	mov    r8d,0x3
   140039245:	sub    r8,rdx
   140039248:	xor    edx,edx
   14003924a:	shl    r8,0x2
   14003924e:	call   0x14002b280
   140039253:	mov    eax,DWORD PTR [rip+0x2e94b]        # 0x140067ba4
   140039259:	mov    r12d,0x20
   14003925f:	mov    r9d,ebx
   140039262:	inc    eax
   140039264:	mov    r8,rbx
   140039267:	cdq    
   140039268:	and    edx,r15d
   14003926b:	add    eax,edx
   14003926d:	mov    r10d,eax
   140039270:	and    eax,r15d
   140039273:	sub    eax,edx
   140039275:	sar    r10d,0x5
   140039279:	mov    ecx,eax
   14003927b:	mov    r11d,eax
   14003927e:	shl    r13d,cl
   140039281:	sub    r12d,eax
   140039284:	not    r13d
   140039287:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14003928c:	mov    ecx,r11d
   14003928f:	mov    eax,edx
   140039291:	shr    edx,cl
   140039293:	mov    ecx,r12d
   140039296:	or     edx,r9d
   140039299:	and    eax,r13d
   14003929c:	mov    DWORD PTR [rsp+0x90],eax
   1400392a3:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   1400392a8:	add    r8,rsi
   1400392ab:	mov    r9d,DWORD PTR [rsp+0x90]
   1400392b3:	shl    r9d,cl
   1400392b6:	cmp    r8,0x3
   1400392ba:	jl     0x140039287
   1400392bc:	movsxd r8,r10d
   1400392bf:	lea    rdx,[rsp+0x28]
   1400392c4:	mov    rcx,rdi
   1400392c7:	mov    rax,r8
   1400392ca:	shl    rax,0x2
   1400392ce:	sub    rdx,rax
   1400392d1:	cmp    rcx,r8
   1400392d4:	jl     0x1400392de
   1400392d6:	mov    eax,DWORD PTR [rdx]
   1400392d8:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   1400392dc:	jmp    0x1400392e2
   1400392de:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   1400392e2:	sub    rcx,rsi
   1400392e5:	sub    rdx,0x4
   1400392e9:	cmp    rcx,rbx
   1400392ec:	jge    0x1400392d1
   1400392ee:	mov    r8d,ebx
   1400392f1:	mov    ebx,edi
   1400392f3:	jmp    0x14003945f
   1400392f8:	mov    eax,DWORD PTR [rip+0x2e8a6]        # 0x140067ba4
   1400392fe:	cdq    
   1400392ff:	and    edx,r15d
   140039302:	add    eax,edx
   140039304:	cmp    edi,DWORD PTR [rip+0x2e88e]        # 0x140067b98
   14003930a:	jl     0x1400393c2
   140039310:	mov    r10d,eax
   140039313:	and    eax,r15d
   140039316:	mov    edi,0x20
   14003931b:	sub    eax,edx
   14003931d:	mov    QWORD PTR [rsp+0x20],rbx
   140039322:	bts    DWORD PTR [rsp+0x20],0x1f
   140039328:	mov    ecx,eax
   14003932a:	sar    r10d,0x5
   14003932e:	mov    DWORD PTR [rsp+0x28],ebx
   140039332:	shl    r13d,cl
   140039335:	mov    r11d,eax
   140039338:	mov    r9d,ebx
   14003933b:	not    r13d
   14003933e:	mov    r8,rbx
   140039341:	sub    edi,eax
   140039343:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140039348:	mov    ecx,r11d
   14003934b:	mov    eax,r13d
   14003934e:	and    eax,edx
   140039350:	shr    edx,cl
   140039352:	mov    ecx,edi
   140039354:	or     edx,r9d
   140039357:	mov    DWORD PTR [rsp+0x90],eax
   14003935e:	mov    r9d,DWORD PTR [rsp+0x90]
   140039366:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   14003936b:	add    r8,rsi
   14003936e:	shl    r9d,cl
   140039371:	cmp    r8,0x3
   140039375:	jl     0x140039343
   140039377:	movsxd rdx,r10d
   14003937a:	lea    rcx,[rsp+0x28]
   14003937f:	mov    edi,0x2
   140039384:	mov    rax,rdx
   140039387:	shl    rax,0x2
   14003938b:	sub    rcx,rax
   14003938e:	cmp    rdi,rdx
   140039391:	jl     0x14003939b
   140039393:	mov    eax,DWORD PTR [rcx]
   140039395:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   140039399:	jmp    0x14003939f
   14003939b:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   14003939f:	sub    rdi,rsi
   1400393a2:	sub    rcx,0x4
   1400393a6:	cmp    rdi,rbx
   1400393a9:	jge    0x14003938e
   1400393ab:	mov    ecx,DWORD PTR [rip+0x2e7e7]        # 0x140067b98
   1400393b1:	mov    r8d,DWORD PTR [rip+0x2e7f4]        # 0x140067bac
   1400393b8:	mov    ebx,esi
   1400393ba:	add    r8d,ecx
   1400393bd:	jmp    0x14003945f
   1400393c2:	mov    r8d,DWORD PTR [rip+0x2e7e3]        # 0x140067bac
   1400393c9:	btr    DWORD PTR [rsp+0x20],0x1f
   1400393cf:	mov    r11d,eax
   1400393d2:	and    eax,r15d
   1400393d5:	add    r8d,edi
   1400393d8:	mov    r12d,0x20
   1400393de:	sub    eax,edx
   1400393e0:	sar    r11d,0x5
   1400393e4:	mov    r10d,ebx
   1400393e7:	mov    ecx,eax
   1400393e9:	mov    edi,eax
   1400393eb:	mov    r9,rbx
   1400393ee:	shl    r13d,cl
   1400393f1:	sub    r12d,eax
   1400393f4:	not    r13d
   1400393f7:	mov    edx,DWORD PTR [rsp+r9*4+0x20]
   1400393fc:	mov    ecx,edi
   1400393fe:	mov    eax,r13d
   140039401:	and    eax,edx
   140039403:	shr    edx,cl
   140039405:	mov    ecx,r12d
   140039408:	or     edx,r10d
   14003940b:	mov    DWORD PTR [rsp+0x90],eax
   140039412:	mov    r10d,DWORD PTR [rsp+0x90]
   14003941a:	mov    DWORD PTR [rsp+r9*4+0x20],edx
   14003941f:	add    r9,rsi
   140039422:	shl    r10d,cl
   140039425:	cmp    r9,0x3
   140039429:	jl     0x1400393f7
   14003942b:	movsxd rdx,r11d
   14003942e:	lea    rcx,[rsp+0x28]
   140039433:	mov    edi,0x2
   140039438:	mov    rax,rdx
   14003943b:	shl    rax,0x2
   14003943f:	sub    rcx,rax
   140039442:	cmp    rdi,rdx
   140039445:	jl     0x14003944f
   140039447:	mov    eax,DWORD PTR [rcx]
   140039449:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   14003944d:	jmp    0x140039453
   14003944f:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   140039453:	sub    rdi,rsi
   140039456:	sub    rcx,0x4
   14003945a:	cmp    rdi,rbx
   14003945d:	jge    0x140039442
   14003945f:	mov    rdx,QWORD PTR [rsp+0x88]
   140039467:	sub    r15d,DWORD PTR [rip+0x2e736]        # 0x140067ba4
   14003946e:	mov    cl,r15b
   140039471:	shl    r8d,cl
   140039474:	neg    DWORD PTR [rsp+0x80]
   14003947b:	sbb    eax,eax
   14003947d:	and    eax,0x80000000
   140039482:	or     r8d,eax
   140039485:	mov    eax,DWORD PTR [rip+0x2e71d]        # 0x140067ba8
   14003948b:	or     r8d,DWORD PTR [rsp+0x20]
   140039490:	cmp    eax,0x40
   140039493:	jne    0x1400394a1
   140039495:	mov    eax,DWORD PTR [rsp+0x24]
   140039499:	mov    DWORD PTR [rdx+0x4],r8d
   14003949d:	mov    DWORD PTR [rdx],eax
   14003949f:	jmp    0x1400394a9
   1400394a1:	cmp    eax,0x20
   1400394a4:	jne    0x1400394a9
   1400394a6:	mov    DWORD PTR [rdx],r8d
   1400394a9:	mov    eax,ebx
   1400394ab:	add    rsp,0x40
   1400394af:	pop    r15
   1400394b1:	pop    r14
   1400394b3:	pop    r13
   1400394b5:	pop    r12
   1400394b7:	pop    rdi
   1400394b8:	pop    rsi
   1400394b9:	pop    rbx
   1400394ba:	ret    
   1400394bb:	int3   
   1400394bc:	mov    r11,rsp
   1400394bf:	mov    QWORD PTR [r11+0x18],rbx
   1400394c3:	push   rbp
   1400394c4:	push   rsi
   1400394c5:	push   rdi
   1400394c6:	push   r12
   1400394c8:	push   r13
   1400394ca:	push   r14
   1400394cc:	push   r15
   1400394ce:	sub    rsp,0xb0
   1400394d5:	mov    rax,QWORD PTR [rip+0x2d3d4]        # 0x1400668b0
   1400394dc:	xor    rax,rsp
   1400394df:	mov    QWORD PTR [rsp+0xa0],rax
   1400394e7:	mov    r12,QWORD PTR [rsp+0x128]
   1400394ef:	xor    ebx,ebx
   1400394f1:	mov    DWORD PTR [rsp+0x38],r9d
   1400394f6:	lea    r9d,[rbx+0x1]
   1400394fa:	mov    QWORD PTR [rsp+0x48],rcx
   1400394ff:	mov    r15,rdx
   140039502:	lea    r10,[r11-0x68]
   140039506:	mov    WORD PTR [rsp+0x3c],bx
   14003950b:	mov    edi,ebx
   14003950d:	mov    DWORD PTR [rsp+0x34],r9d
   140039512:	mov    r13d,ebx
   140039515:	mov    DWORD PTR [rsp+0x30],ebx
   140039519:	mov    r14d,ebx
   14003951c:	mov    ebp,ebx
   14003951e:	mov    esi,ebx
   140039520:	mov    ecx,ebx
   140039522:	cmp    r12,rbx
   140039525:	jne    0x14003954d
   140039527:	call   0x14002b3f4
   14003952c:	xor    r9d,r9d
   14003952f:	xor    r8d,r8d
   140039532:	xor    edx,edx
   140039534:	xor    ecx,ecx
   140039536:	mov    QWORD PTR [rsp+0x20],rbx
   14003953b:	mov    DWORD PTR [rax],0x16
   140039541:	call   0x140031aac
   140039546:	xor    eax,eax
   140039548:	jmp    0x140039d8a
   14003954d:	mov    r11,r8
   140039550:	mov    al,BYTE PTR [r8]
   140039553:	cmp    al,0x20
   140039555:	je     0x140039563
   140039557:	cmp    al,0x9
   140039559:	je     0x140039563
   14003955b:	cmp    al,0xa
   14003955d:	je     0x140039563
   14003955f:	cmp    al,0xd
   140039561:	jne    0x140039568
   140039563:	add    r8,r9
   140039566:	jmp    0x140039550
   140039568:	mov    dl,BYTE PTR [r8]
   14003956b:	add    r8,r9
   14003956e:	cmp    ecx,0x5
   140039571:	jg     0x14003979c
   140039577:	je     0x140039781
   14003957d:	mov    r9d,ecx
   140039580:	cmp    ecx,ebx
   140039582:	je     0x14003971e
   140039588:	mov    eax,0x1
   14003958d:	sub    r9d,eax
   140039590:	je     0x1400396d8
   140039596:	sub    r9d,eax
   140039599:	je     0x140039685
   14003959f:	sub    r9d,eax
   1400395a2:	je     0x140039637
   1400395a8:	cmp    r9d,eax
   1400395ab:	jne    0x140039872
   1400395b1:	mov    r9,rax
   1400395b4:	mov    r13d,r9d
   1400395b7:	mov    DWORD PTR [rsp+0x30],r9d
   1400395bc:	cmp    edi,ebx
   1400395be:	jne    0x1400395f1
   1400395c0:	jmp    0x1400395cb
   1400395c2:	mov    dl,BYTE PTR [r8]
   1400395c5:	sub    esi,r9d
   1400395c8:	add    r8,r9
   1400395cb:	cmp    dl,0x30
   1400395ce:	je     0x1400395c2
   1400395d0:	jmp    0x1400395f1
   1400395d2:	cmp    dl,0x39
   1400395d5:	jg     0x1400395f6
   1400395d7:	cmp    edi,0x19
   1400395da:	jae    0x1400395eb
   1400395dc:	sub    dl,0x30
   1400395df:	add    edi,r9d
   1400395e2:	mov    BYTE PTR [r10],dl
   1400395e5:	add    r10,r9
   1400395e8:	sub    esi,r9d
   1400395eb:	mov    dl,BYTE PTR [r8]
   1400395ee:	add    r8,r9
   1400395f1:	cmp    dl,0x30
   1400395f4:	jge    0x1400395d2
   1400395f6:	cmp    dl,0x2b
   1400395f9:	je     0x14003962a
   1400395fb:	cmp    dl,0x2d
   1400395fe:	je     0x14003962a
   140039600:	cmp    dl,0x43
   140039603:	jle    0x140039758
   140039609:	cmp    dl,0x45
   14003960c:	jle    0x140039620
   14003960e:	cmp    dl,0x63
   140039611:	jle    0x140039758
   140039617:	cmp    dl,0x65
   14003961a:	jg     0x140039758
   140039620:	mov    ecx,0x6
   140039625:	jmp    0x140039568
   14003962a:	sub    r8,r9
   14003962d:	mov    ecx,0xb
   140039632:	jmp    0x140039568
   140039637:	mov    r9,rax
   14003963a:	mov    al,0x30
   14003963c:	mov    r13d,r9d
   14003963f:	jmp    0x140039661
   140039641:	cmp    dl,0x39
   140039644:	jg     0x140039665
   140039646:	cmp    edi,0x19
   140039649:	jae    0x140039658
   14003964b:	sub    dl,al
   14003964d:	add    edi,r9d
   140039650:	mov    BYTE PTR [r10],dl
   140039653:	add    r10,r9
   140039656:	jmp    0x14003965b
   140039658:	add    esi,r9d
   14003965b:	mov    dl,BYTE PTR [r8]
   14003965e:	add    r8,r9
   140039661:	cmp    dl,al
   140039663:	jge    0x140039641
   140039665:	mov    rax,QWORD PTR [r12]
   140039669:	mov    rcx,QWORD PTR [rax+0x128]
   140039670:	mov    rax,QWORD PTR [rcx]
   140039673:	cmp    dl,BYTE PTR [rax]
   140039675:	jne    0x1400395f6
   14003967b:	mov    ecx,0x4
   140039680:	jmp    0x140039568
   140039685:	lea    eax,[rdx-0x31]
   140039688:	cmp    al,0x8
   14003968a:	ja     0x14003969f
   14003968c:	mov    ecx,0x3
   140039691:	mov    r9d,0x1
   140039697:	sub    r8,r9
   14003969a:	jmp    0x140039568
   14003969f:	mov    rax,QWORD PTR [r12]
   1400396a3:	mov    rcx,QWORD PTR [rax+0x128]
   1400396aa:	mov    rax,QWORD PTR [rcx]
   1400396ad:	cmp    dl,BYTE PTR [rax]
   1400396af:	jne    0x1400396c1
   1400396b1:	mov    ecx,0x5
   1400396b6:	mov    r9d,0x1
   1400396bc:	jmp    0x140039568
   1400396c1:	cmp    dl,0x30
   1400396c4:	jne    0x1400398e1
   1400396ca:	mov    r9d,0x1
   1400396d0:	mov    ecx,r9d
   1400396d3:	jmp    0x140039568
   1400396d8:	mov    r9,rax
   1400396db:	lea    eax,[rdx-0x31]
   1400396de:	mov    r13d,r9d
   1400396e1:	cmp    al,0x8
   1400396e3:	ja     0x1400396ec
   1400396e5:	mov    ecx,0x3
   1400396ea:	jmp    0x140039697
   1400396ec:	mov    rax,QWORD PTR [r12]
   1400396f0:	mov    rcx,QWORD PTR [rax+0x128]
   1400396f7:	mov    rax,QWORD PTR [rcx]
   1400396fa:	cmp    dl,BYTE PTR [rax]
   1400396fc:	je     0x14003967b
   140039702:	cmp    dl,0x2b
   140039705:	je     0x14003962a
   14003970b:	cmp    dl,0x2d
   14003970e:	je     0x14003962a
   140039714:	cmp    dl,0x30
   140039717:	je     0x1400396d0
   140039719:	jmp    0x140039600
   14003971e:	lea    eax,[rdx-0x31]
   140039721:	cmp    al,0x8
   140039723:	jbe    0x14003968c
   140039729:	mov    rax,QWORD PTR [r12]
   14003972d:	mov    rcx,QWORD PTR [rax+0x128]
   140039734:	mov    rax,QWORD PTR [rcx]
   140039737:	cmp    dl,BYTE PTR [rax]
   140039739:	je     0x1400396b1
   14003973f:	cmp    dl,0x2b
   140039742:	je     0x140039772
   140039744:	cmp    dl,0x2d
   140039747:	je     0x140039760
   140039749:	cmp    dl,0x30
   14003974c:	je     0x1400396ca
   140039752:	mov    r9d,0x1
   140039758:	sub    r8,r9
   14003975b:	jmp    0x1400398ea
   140039760:	mov    ecx,0x2
   140039765:	mov    DWORD PTR [rsp+0x3c],0x8000
   14003976d:	jmp    0x1400396b6
   140039772:	mov    ecx,0x2
   140039777:	mov    WORD PTR [rsp+0x3c],bx
   14003977c:	jmp    0x1400396b6
   140039781:	sub    dl,0x30
   140039784:	mov    DWORD PTR [rsp+0x30],r9d
   140039789:	cmp    dl,0x9
   14003978c:	ja     0x14003987c
   140039792:	mov    ecx,0x4
   140039797:	jmp    0x140039697
   14003979c:	mov    r9d,ecx
   14003979f:	sub    r9d,0x6
   1400397a3:	je     0x140039849
   1400397a9:	mov    eax,0x1
   1400397ae:	sub    r9d,eax
   1400397b1:	je     0x140039825
   1400397b3:	sub    r9d,eax
   1400397b6:	je     0x1400397fc
   1400397b8:	sub    r9d,eax
   1400397bb:	je     0x140039891
   1400397c1:	cmp    r9d,0x2
   1400397c5:	jne    0x140039872
   1400397cb:	cmp    DWORD PTR [rsp+0x120],ebx
   1400397d2:	je     0x140039889
   1400397d8:	lea    r11,[r8-0x1]
   1400397dc:	cmp    dl,0x2b
   1400397df:	je     0x1400397ef
   1400397e1:	cmp    dl,0x2d
   1400397e4:	jne    0x140039881
   1400397ea:	or     DWORD PTR [rsp+0x34],0xffffffff
   1400397ef:	mov    ecx,0x7
   1400397f4:	mov    r9,rax
   1400397f7:	jmp    0x140039568
   1400397fc:	mov    r9,rax
   1400397ff:	mov    r14d,r9d
   140039802:	jmp    0x14003980a
   140039804:	mov    dl,BYTE PTR [r8]
   140039807:	add    r8,r9
   14003980a:	cmp    dl,0x30
   14003980d:	je     0x140039804
   14003980f:	sub    dl,0x31
   140039812:	cmp    dl,0x8
   140039815:	ja     0x140039758
   14003981b:	mov    ecx,0x9
   140039820:	jmp    0x140039697
   140039825:	lea    eax,[rdx-0x31]
   140039828:	cmp    al,0x8
   14003982a:	ja     0x140039836
   14003982c:	mov    ecx,0x9
   140039831:	jmp    0x140039691
   140039836:	cmp    dl,0x30
   140039839:	jne    0x1400398e1
   14003983f:	mov    ecx,0x8
   140039844:	jmp    0x1400396b6
   140039849:	lea    eax,[rdx-0x31]
   14003984c:	lea    r11,[r8-0x2]
   140039850:	cmp    al,0x8
   140039852:	jbe    0x14003982c
   140039854:	cmp    dl,0x2b
   140039857:	je     0x14003986d
   140039859:	cmp    dl,0x2d
   14003985c:	jne    0x140039836
   14003985e:	or     DWORD PTR [rsp+0x34],0xffffffff
   140039863:	mov    ecx,0x7
   140039868:	jmp    0x1400396b6
   14003986d:	mov    ecx,0x7
   140039872:	cmp    ecx,0xa
   140039875:	je     0x1400398e4
   140039877:	jmp    0x1400396b6
   14003987c:	mov    r8,r11
   14003987f:	jmp    0x1400398ea
   140039881:	mov    r8,r11
   140039884:	mov    r9,rax
   140039887:	jmp    0x1400398ea
   140039889:	mov    r9,rax
   14003988c:	jmp    0x140039758
   140039891:	mov    r9,rax
   140039894:	mov    r11b,0x30
   140039897:	mov    r14d,r9d
   14003989a:	jmp    0x1400398ba
   14003989c:	cmp    dl,0x39
   14003989f:	jg     0x1400398d7
   1400398a1:	lea    ecx,[rbp+rbp*4+0x0]
   1400398a5:	movsx  eax,dl
   1400398a8:	lea    ebp,[rax+rcx*2-0x30]
   1400398ac:	cmp    ebp,0x1450
   1400398b2:	jg     0x1400398c1
   1400398b4:	mov    dl,BYTE PTR [r8]
   1400398b7:	add    r8,r9
   1400398ba:	cmp    dl,r11b
   1400398bd:	jge    0x14003989c
   1400398bf:	jmp    0x1400398d7
   1400398c1:	mov    ebp,0x1451
   1400398c6:	jmp    0x1400398d7
   1400398c8:	cmp    dl,0x39
   1400398cb:	jg     0x140039758
   1400398d1:	mov    dl,BYTE PTR [r8]
   1400398d4:	add    r8,r9
   1400398d7:	cmp    dl,r11b
   1400398da:	jge    0x1400398c8
   1400398dc:	jmp    0x140039758
   1400398e1:	mov    r8,r11
   1400398e4:	mov    r9d,0x1
   1400398ea:	mov    QWORD PTR [r15],r8
   1400398ed:	cmp    r13d,ebx
   1400398f0:	je     0x140039d5e
   1400398f6:	cmp    edi,0x18
   1400398f9:	jbe    0x14003991b
   1400398fb:	mov    al,BYTE PTR [rsp+0x97]
   140039902:	cmp    al,0x5
   140039904:	jl     0x140039910
   140039906:	add    al,r9b
   140039909:	mov    BYTE PTR [rsp+0x97],al
   140039910:	sub    r10,r9
   140039913:	mov    edi,0x18
   140039918:	add    esi,r9d
   14003991b:	cmp    edi,ebx
   14003991d:	jbe    0x140039d52
   140039923:	sub    r10,r9
   140039926:	or     r15d,0xffffffff
   14003992a:	jmp    0x140039935
   14003992c:	add    edi,r15d
   14003992f:	add    esi,r9d
   140039932:	sub    r10,r9
   140039935:	cmp    BYTE PTR [r10],bl
   140039938:	je     0x14003992c
   14003993a:	lea    r8,[rsp+0x60]
   14003993f:	lea    rcx,[rsp+0x80]
   140039947:	mov    edx,edi
   140039949:	call   0x14003b5f8
   14003994e:	cmp    DWORD PTR [rsp+0x34],ebx
   140039952:	jge    0x140039956
   140039954:	neg    ebp
   140039956:	add    ebp,esi
   140039958:	cmp    r14d,ebx
   14003995b:	jne    0x140039964
   14003995d:	add    ebp,DWORD PTR [rsp+0x110]
   140039964:	cmp    DWORD PTR [rsp+0x30],ebx
   140039968:	jne    0x140039971
   14003996a:	sub    ebp,DWORD PTR [rsp+0x118]
   140039971:	cmp    ebp,0x1450
   140039977:	jg     0x140039d3c
   14003997d:	cmp    ebp,0xffffebb0
   140039983:	jl     0x140039d2c
   140039989:	lea    rsi,[rip+0x2e240]        # 0x140067bd0
   140039990:	sub    rsi,0x60
   140039994:	cmp    ebp,ebx
   140039996:	je     0x140039d16
   14003999c:	jge    0x1400399ab
   14003999e:	lea    rsi,[rip+0x2e38b]        # 0x140067d30
   1400399a5:	neg    ebp
   1400399a7:	sub    rsi,0x60
   1400399ab:	cmp    DWORD PTR [rsp+0x38],ebx
   1400399af:	jne    0x1400399b6
   1400399b1:	mov    WORD PTR [rsp+0x60],bx
   1400399b6:	cmp    ebp,ebx
   1400399b8:	je     0x140039d16
   1400399be:	mov    edi,0x80000000
   1400399c3:	mov    r9d,0x7fff
   1400399c9:	mov    r11d,0x1
   1400399cf:	mov    eax,ebp
   1400399d1:	add    rsi,0x54
   1400399d5:	sar    ebp,0x3
   1400399d8:	and    eax,0x7
   1400399db:	mov    QWORD PTR [rsp+0x40],rsi
   1400399e0:	mov    DWORD PTR [rsp+0x38],ebp
   1400399e4:	cmp    eax,ebx
   1400399e6:	je     0x140039d0e
   1400399ec:	cdqe   
   1400399ee:	mov    r14d,0x8000
   1400399f4:	lea    rcx,[rax+rax*2]
   1400399f8:	lea    rdx,[rsi+rcx*4]
   1400399fc:	cmp    WORD PTR [rdx],r14w
   140039a00:	jb     0x140039a28
   140039a02:	mov    rax,QWORD PTR [rdx]
   140039a05:	lea    rcx,[rsp+0x70]
   140039a0a:	mov    QWORD PTR [rcx],rax
   140039a0d:	mov    eax,DWORD PTR [rdx+0x8]
   140039a10:	lea    rdx,[rsp+0x70]
   140039a15:	mov    DWORD PTR [rcx+0x8],eax
   140039a18:	mov    rax,QWORD PTR [rsp+0x70]
   140039a1d:	shr    rax,0x10
   140039a21:	sub    eax,r11d
   140039a24:	mov    DWORD PTR [rsp+0x72],eax
   140039a28:	movzx  ecx,WORD PTR [rdx+0xa]
   140039a2c:	mov    eax,ebx
   140039a2e:	movzx  eax,WORD PTR [rsp+0x6a]
   140039a33:	movzx  r13d,cx
   140039a37:	and    cx,r9w
   140039a3b:	mov    DWORD PTR [rsp+0x50],ebx
   140039a3f:	xor    r13w,ax
   140039a43:	and    ax,r9w
   140039a47:	mov    DWORD PTR [rsp+0x54],ebx
   140039a4b:	and    r13w,r14w
   140039a4f:	lea    r8d,[rax+rcx*1]
   140039a53:	mov    DWORD PTR [rsp+0x58],ebx
   140039a57:	cmp    ax,r9w
   140039a5b:	jae    0x140039cf5
   140039a61:	cmp    cx,r9w
   140039a65:	jae    0x140039cf5
   140039a6b:	mov    r10d,0xbffd
   140039a71:	cmp    r8w,r10w
   140039a75:	ja     0x140039cf5
   140039a7b:	mov    r10d,0x3fbf
   140039a81:	cmp    r8w,r10w
   140039a85:	ja     0x140039a90
   140039a87:	mov    DWORD PTR [rsp+0x68],ebx
   140039a8b:	jmp    0x140039d06
   140039a90:	cmp    ax,bx
   140039a93:	jne    0x140039abb
   140039a95:	mov    eax,DWORD PTR [rsp+0x68]
   140039a99:	add    r8w,r11w
   140039a9d:	btr    eax,0x1f
   140039aa1:	cmp    eax,ebx
   140039aa3:	jne    0x140039abb
   140039aa5:	cmp    DWORD PTR [rsp+0x64],ebx
   140039aa9:	jne    0x140039abb
   140039aab:	cmp    DWORD PTR [rsp+0x60],ebx
   140039aaf:	jne    0x140039abb
   140039ab1:	mov    WORD PTR [rsp+0x6a],bx
   140039ab6:	jmp    0x140039d0e
   140039abb:	cmp    cx,bx
   140039abe:	jne    0x140039ad8
   140039ac0:	mov    eax,DWORD PTR [rdx+0x8]
   140039ac3:	add    r8w,r11w
   140039ac7:	btr    eax,0x1f
   140039acb:	cmp    eax,ebx
   140039acd:	jne    0x140039ad8
   140039acf:	cmp    DWORD PTR [rdx+0x4],ebx
   140039ad2:	jne    0x140039ad8
   140039ad4:	cmp    DWORD PTR [rdx],ebx
   140039ad6:	je     0x140039a87
   140039ad8:	mov    esi,0x1
   140039add:	mov    r12d,ebx
   140039ae0:	lea    rcx,[rsp+0x54]
   140039ae5:	lea    r10d,[rsi+0x4]
   140039ae9:	cmp    r10d,ebx
   140039aec:	lea    eax,[r12+r12*1]
   140039af0:	mov    DWORD PTR [rsp+0x34],r10d
   140039af5:	movsxd r9,eax
   140039af8:	jle    0x140039b4f
   140039afa:	mov    edi,r12d
   140039afd:	lea    r14,[rsp+r9*1+0x60]
   140039b02:	lea    r15,[rdx+0x8]
   140039b06:	and    edi,esi
   140039b08:	movzx  eax,WORD PTR [r14]
   140039b0c:	movzx  r9d,WORD PTR [r15]
   140039b10:	mov    r11d,ebx
   140039b13:	imul   r9d,eax
   140039b17:	mov    eax,DWORD PTR [rcx-0x4]
   140039b1a:	lea    ebp,[rax+r9*1]
   140039b1e:	cmp    ebp,eax
   140039b20:	jb     0x140039b27
   140039b22:	cmp    ebp,r9d
   140039b25:	jae    0x140039b2a
   140039b27:	mov    r11d,esi
   140039b2a:	mov    DWORD PTR [rcx-0x4],ebp
   140039b2d:	cmp    r11d,ebx
   140039b30:	je     0x140039b35
   140039b32:	add    WORD PTR [rcx],si
   140039b35:	mov    r11d,DWORD PTR [rsp+0x34]
   140039b3a:	add    r14,0x2
   140039b3e:	sub    r15,0x2
   140039b42:	sub    r11d,esi
   140039b45:	cmp    r11d,ebx
   140039b48:	mov    DWORD PTR [rsp+0x34],r11d
   140039b4d:	jg     0x140039b08
   140039b4f:	sub    r10d,esi
   140039b52:	add    rcx,0x2
   140039b56:	add    r12d,esi
   140039b59:	cmp    r10d,ebx
   140039b5c:	jg     0x140039ae9
   140039b5e:	mov    r10d,DWORD PTR [rsp+0x58]
   140039b63:	mov    r9d,DWORD PTR [rsp+0x50]
   140039b68:	mov    eax,0xc002
   140039b6d:	add    r8w,ax
   140039b71:	mov    r12d,0xffff
   140039b77:	cmp    r8w,bx
   140039b7b:	jle    0x140039bc2
   140039b7d:	bt     r10d,0x1f
   140039b82:	jb     0x140039bbc
   140039b84:	mov    r11d,DWORD PTR [rsp+0x54]
   140039b89:	mov    edx,r9d
   140039b8c:	add    r10d,r10d
   140039b8f:	shr    edx,0x1f
   140039b92:	add    r9d,r9d
   140039b95:	mov    ecx,r11d
   140039b98:	shr    ecx,0x1f
   140039b9b:	lea    eax,[r11+r11*1]
   140039b9f:	add    r8w,r12w
   140039ba3:	or     eax,edx
   140039ba5:	or     r10d,ecx
   140039ba8:	cmp    r8w,bx
   140039bac:	mov    DWORD PTR [rsp+0x54],eax
   140039bb0:	mov    DWORD PTR [rsp+0x58],r10d
   140039bb5:	mov    DWORD PTR [rsp+0x50],r9d
   140039bba:	jg     0x140039b7d
   140039bbc:	cmp    r8w,bx
   140039bc0:	jg     0x140039c34
   140039bc2:	add    r8w,r12w
   140039bc6:	jns    0x140039c34
   140039bc8:	movzx  eax,r8w
   140039bcc:	neg    ax
   140039bcf:	movzx  edx,ax
   140039bd2:	add    r8w,dx
   140039bd6:	test   BYTE PTR [rsp+0x50],sil
   140039bdb:	je     0x140039bdf
   140039bdd:	add    ebx,esi
   140039bdf:	mov    r11d,DWORD PTR [rsp+0x54]
   140039be4:	mov    eax,r10d
   140039be7:	shr    r9d,1
   140039bea:	mov    ecx,r11d
   140039bed:	shl    eax,0x1f
   140039bf0:	shr    r11d,1
   140039bf3:	shl    ecx,0x1f
   140039bf6:	or     r11d,eax
   140039bf9:	shr    r10d,1
   140039bfc:	or     r9d,ecx
   140039bff:	sub    rdx,rsi
   140039c02:	mov    DWORD PTR [rsp+0x54],r11d
   140039c07:	mov    DWORD PTR [rsp+0x50],r9d
   140039c0c:	jne    0x140039bd6
   140039c0e:	mov    DWORD PTR [rsp+0x30],ebx
   140039c12:	xor    ebx,ebx
   140039c14:	mov    DWORD PTR [rsp+0x58],r10d
   140039c19:	mov    eax,DWORD PTR [rsp+0x30]
   140039c1d:	cmp    eax,ebx
   140039c1f:	je     0x140039c34
   140039c21:	movzx  eax,r9w
   140039c25:	or     ax,si
   140039c28:	mov    WORD PTR [rsp+0x50],ax
   140039c2d:	mov    r9d,DWORD PTR [rsp+0x50]
   140039c32:	jmp    0x140039c39
   140039c34:	mov    ax,WORD PTR [rsp+0x50]
   140039c39:	mov    rsi,QWORD PTR [rsp+0x40]
   140039c3e:	mov    r14d,0x8000
   140039c44:	mov    edi,0x80000000
   140039c49:	cmp    ax,r14w
   140039c4d:	ja     0x140039c5f
   140039c4f:	and    r9d,0x1ffff
   140039c56:	cmp    r9d,0x18000
   140039c5d:	jne    0x140039cbc
   140039c5f:	mov    eax,DWORD PTR [rsp+0x52]
   140039c63:	or     r15d,0xffffffff
   140039c67:	mov    r11d,0x1
   140039c6d:	cmp    eax,r15d
   140039c70:	jne    0x140039cb3
   140039c72:	mov    eax,DWORD PTR [rsp+0x56]
   140039c76:	mov    DWORD PTR [rsp+0x52],ebx
   140039c7a:	cmp    eax,r15d
   140039c7d:	jne    0x140039ca5
   140039c7f:	movzx  eax,WORD PTR [rsp+0x5a]
   140039c84:	mov    DWORD PTR [rsp+0x56],ebx
   140039c88:	cmp    ax,r12w
   140039c8c:	jne    0x140039c9a
   140039c8e:	mov    WORD PTR [rsp+0x5a],r14w
   140039c94:	add    r8w,r11w
   140039c98:	jmp    0x140039cac
   140039c9a:	add    ax,r11w
   140039c9e:	mov    WORD PTR [rsp+0x5a],ax
   140039ca3:	jmp    0x140039cac
   140039ca5:	add    eax,r11d
   140039ca8:	mov    DWORD PTR [rsp+0x56],eax
   140039cac:	mov    r10d,DWORD PTR [rsp+0x58]
   140039cb1:	jmp    0x140039cc2
   140039cb3:	add    eax,r11d
   140039cb6:	mov    DWORD PTR [rsp+0x52],eax
   140039cba:	jmp    0x140039cc2
   140039cbc:	mov    r11d,0x1
   140039cc2:	mov    ebp,DWORD PTR [rsp+0x38]
   140039cc6:	mov    r9d,0x7fff
   140039ccc:	cmp    r8w,r9w
   140039cd0:	jae    0x140039cf5
   140039cd2:	movzx  eax,WORD PTR [rsp+0x52]
   140039cd7:	or     r8w,r13w
   140039cdb:	mov    DWORD PTR [rsp+0x66],r10d
   140039ce0:	mov    WORD PTR [rsp+0x60],ax
   140039ce5:	mov    eax,DWORD PTR [rsp+0x54]
   140039ce9:	mov    WORD PTR [rsp+0x6a],r8w
   140039cef:	mov    DWORD PTR [rsp+0x62],eax
   140039cf3:	jmp    0x140039d0e
   140039cf5:	neg    r13w
   140039cf9:	sbb    eax,eax
   140039cfb:	and    eax,edi
   140039cfd:	add    eax,0x7fff8000
   140039d02:	mov    DWORD PTR [rsp+0x68],eax
   140039d06:	mov    DWORD PTR [rsp+0x60],ebx
   140039d0a:	mov    DWORD PTR [rsp+0x64],ebx
   140039d0e:	cmp    ebp,ebx
   140039d10:	jne    0x1400399cf
   140039d16:	mov    eax,DWORD PTR [rsp+0x68]
   140039d1a:	mov    dx,WORD PTR [rsp+0x60]
   140039d1f:	mov    ecx,DWORD PTR [rsp+0x62]
   140039d23:	mov    edi,DWORD PTR [rsp+0x66]
   140039d27:	shr    eax,0x10
   140039d2a:	jmp    0x140039d6d
   140039d2c:	mov    edx,ebx
   140039d2e:	mov    ax,bx
   140039d31:	mov    edi,ebx
   140039d33:	mov    ecx,ebx
   140039d35:	mov    ebx,0x1
   140039d3a:	jmp    0x140039d6d
   140039d3c:	mov    ecx,ebx
   140039d3e:	mov    dx,bx
   140039d41:	mov    eax,0x7fff
   140039d46:	mov    ebx,0x2
   140039d4b:	mov    edi,0x80000000
   140039d50:	jmp    0x140039d6d
   140039d52:	mov    dx,bx
   140039d55:	mov    ax,bx
   140039d58:	mov    edi,ebx
   140039d5a:	mov    ecx,ebx
   140039d5c:	jmp    0x140039d6d
   140039d5e:	mov    dx,bx
   140039d61:	mov    ax,bx
   140039d64:	mov    edi,ebx
   140039d66:	mov    ecx,ebx
   140039d68:	mov    ebx,0x4
   140039d6d:	mov    r8,QWORD PTR [rsp+0x48]
   140039d72:	or     ax,WORD PTR [rsp+0x3c]
   140039d77:	mov    WORD PTR [r8+0xa],ax
   140039d7c:	mov    eax,ebx
   140039d7e:	mov    WORD PTR [r8],dx
   140039d82:	mov    DWORD PTR [r8+0x2],ecx
   140039d86:	mov    DWORD PTR [r8+0x6],edi
   140039d8a:	mov    rcx,QWORD PTR [rsp+0xa0]
   140039d92:	xor    rcx,rsp
   140039d95:	call   0x14002b250
   140039d9a:	mov    rbx,QWORD PTR [rsp+0x100]
   140039da2:	add    rsp,0xb0
   140039da9:	pop    r15
   140039dab:	pop    r14
   140039dad:	pop    r13
   140039daf:	pop    r12
   140039db1:	pop    rdi
   140039db2:	pop    rsi
   140039db3:	pop    rbp
   140039db4:	ret    
   140039db5:	int3   
   140039db6:	int3   
   140039db7:	int3   
   140039db8:	mov    r11,rsp
   140039dbb:	mov    QWORD PTR [r11+0x10],rbx
   140039dbf:	push   rbp
   140039dc0:	push   rsi
   140039dc1:	push   rdi
   140039dc2:	push   r12
   140039dc4:	push   r13
   140039dc6:	push   r14
   140039dc8:	push   r15
   140039dca:	sub    rsp,0xb0
   140039dd1:	mov    rax,QWORD PTR [rip+0x2cad8]        # 0x1400668b0
   140039dd8:	xor    rax,rsp
   140039ddb:	mov    QWORD PTR [rsp+0xa0],rax
   140039de3:	movzx  edi,WORD PTR [rcx+0x8]
   140039de7:	mov    r10d,DWORD PTR [rcx]
   140039dea:	mov    r14d,0x8000
   140039df0:	mov    rbx,r9
   140039df3:	mov    r9d,DWORD PTR [rcx+0x4]
   140039df7:	movzx  ecx,di
   140039dfa:	and    cx,r14w
   140039dfe:	mov    BYTE PTR [r11-0x68],0xcc
   140039e03:	mov    BYTE PTR [r11-0x67],0xcc
   140039e08:	mov    BYTE PTR [r11-0x66],0xcc
   140039e0d:	mov    BYTE PTR [r11-0x65],0xcc
   140039e12:	mov    BYTE PTR [r11-0x64],0xcc
   140039e17:	mov    BYTE PTR [r11-0x63],0xcc
   140039e1c:	mov    BYTE PTR [r11-0x62],0xcc
   140039e21:	mov    BYTE PTR [r11-0x61],0xcc
   140039e26:	mov    BYTE PTR [r11-0x60],0xcc
   140039e2b:	mov    BYTE PTR [r11-0x5f],0xcc
   140039e30:	mov    BYTE PTR [r11-0x5e],0xfb
   140039e35:	mov    BYTE PTR [r11-0x5d],0x3f
   140039e3a:	mov    r11d,0x1
   140039e40:	lea    ebp,[r14-0x1]
   140039e44:	lea    eax,[r11+0x1f]
   140039e48:	xor    r12d,r12d
   140039e4b:	and    di,bp
   140039e4e:	mov    DWORD PTR [rsp+0x44],edx
   140039e52:	mov    QWORD PTR [rsp+0x50],rbx
   140039e57:	mov    DWORD PTR [rsp+0x4c],r8d
   140039e5c:	mov    WORD PTR [rsp+0x30],cx
   140039e61:	lea    edx,[rax+0xd]
   140039e64:	cmp    cx,r12w
   140039e68:	je     0x140039e6f
   140039e6a:	mov    BYTE PTR [rbx+0x2],dl
   140039e6d:	jmp    0x140039e72
   140039e6f:	mov    BYTE PTR [rbx+0x2],al
   140039e72:	cmp    di,r12w
   140039e76:	jne    0x140039ea9
   140039e78:	cmp    r9d,r12d
   140039e7b:	jne    0x140039f6e
   140039e81:	cmp    r10d,r12d
   140039e84:	jne    0x140039f6e
   140039e8a:	cmp    cx,r14w
   140039e8e:	cmove  eax,edx
   140039e91:	mov    BYTE PTR [rbx+0x4],0x30
   140039e95:	mov    WORD PTR [rbx],r12w
   140039e99:	mov    BYTE PTR [rbx+0x3],r11b
   140039e9d:	mov    BYTE PTR [rbx+0x2],al
   140039ea0:	mov    BYTE PTR [rbx+0x5],r12b
   140039ea4:	jmp    0x14003a8c5
   140039ea9:	cmp    di,bp
   140039eac:	jne    0x140039f6e
   140039eb2:	mov    eax,0x80000000
   140039eb7:	mov    WORD PTR [rbx],r11w
   140039ebb:	cmp    r9d,eax
   140039ebe:	jne    0x140039ec5
   140039ec0:	cmp    r10d,r12d
   140039ec3:	je     0x140039ed5
   140039ec5:	bt     r9d,0x1e
   140039eca:	jb     0x140039ed5
   140039ecc:	lea    r8,[rip+0x16f95]        # 0x140050e68
   140039ed3:	jmp    0x140039f3b
   140039ed5:	cmp    cx,r12w
   140039ed9:	je     0x140039ef2
   140039edb:	cmp    r9d,0xc0000000
   140039ee2:	jne    0x140039ef2
   140039ee4:	cmp    r10d,r12d
   140039ee7:	jne    0x140039f34
   140039ee9:	lea    r8,[rip+0x16f70]        # 0x140050e60
   140039ef0:	jmp    0x140039f03
   140039ef2:	cmp    r9d,eax
   140039ef5:	jne    0x140039f34
   140039ef7:	cmp    r10d,r12d
   140039efa:	jne    0x140039f34
   140039efc:	lea    r8,[rip+0x16f55]        # 0x140050e58
   140039f03:	lea    rcx,[rbx+0x4]
   140039f07:	mov    edx,0x16
   140039f0c:	call   0x14003445c
   140039f11:	cmp    eax,r12d
   140039f14:	je     0x140039f2a
   140039f16:	xor    r9d,r9d
   140039f19:	xor    r8d,r8d
   140039f1c:	xor    edx,edx
   140039f1e:	xor    ecx,ecx
   140039f20:	mov    QWORD PTR [rsp+0x20],r12
   140039f25:	call   0x140031984
   140039f2a:	mov    eax,0x5
   140039f2f:	mov    BYTE PTR [rbx+0x3],al
   140039f32:	jmp    0x140039f66
   140039f34:	lea    r8,[rip+0x16f15]        # 0x140050e50
   140039f3b:	lea    rcx,[rbx+0x4]
   140039f3f:	mov    edx,0x16
   140039f44:	call   0x14003445c
   140039f49:	cmp    eax,r12d
   140039f4c:	je     0x140039f62
   140039f4e:	xor    r9d,r9d
   140039f51:	xor    r8d,r8d
   140039f54:	xor    edx,edx
   140039f56:	xor    ecx,ecx
   140039f58:	mov    QWORD PTR [rsp+0x20],r12
   140039f5d:	call   0x140031984
   140039f62:	mov    BYTE PTR [rbx+0x3],0x6
   140039f66:	mov    r11d,r12d
   140039f69:	jmp    0x14003a8c5
   140039f6e:	movzx  r8d,di
   140039f72:	mov    ecx,r9d
   140039f75:	mov    DWORD PTR [rsp+0x76],r9d
   140039f7a:	shr    ecx,0x18
   140039f7d:	mov    eax,r8d
   140039f80:	mov    DWORD PTR [rsp+0x72],r10d
   140039f85:	shr    eax,0x8
   140039f88:	lea    r9,[rip+0x2dc41]        # 0x140067bd0
   140039f8f:	mov    r13d,0x5
   140039f95:	imul   r8d,r8d,0x4d10
   140039f9c:	lea    edx,[rax+rcx*2]
   140039f9f:	sub    r9,0x60
   140039fa3:	mov    WORD PTR [rsp+0x7a],di
   140039fa8:	mov    WORD PTR [rsp+0x70],r12w
   140039fae:	mov    DWORD PTR [rsp+0x48],r13d
   140039fb3:	mov    esi,0xbffd
   140039fb8:	imul   edx,edx,0x4d
   140039fbb:	lea    ecx,[rdx+r8*1-0x134312f4]
   140039fc3:	mov    edi,0x3fbf
   140039fc8:	sar    ecx,0x10
   140039fcb:	movsx  r10d,cx
   140039fcf:	mov    DWORD PTR [rsp+0x34],ecx
   140039fd3:	neg    r10d
   140039fd6:	cmp    r10d,r12d
   140039fd9:	je     0x14003a3a6
   140039fdf:	jge    0x140039fef
   140039fe1:	lea    r9,[rip+0x2dd48]        # 0x140067d30
   140039fe8:	neg    r10d
   140039feb:	sub    r9,0x60
   140039fef:	cmp    r10d,r12d
   140039ff2:	je     0x14003a3a6
   140039ff8:	mov    r8d,DWORD PTR [rsp+0x74]
   140039ffd:	mov    edx,DWORD PTR [rsp+0x70]
   14003a001:	mov    eax,r10d
   14003a004:	add    r9,0x54
   14003a008:	sar    r10d,0x3
   14003a00c:	and    eax,0x7
   14003a00f:	mov    QWORD PTR [rsp+0x38],r9
   14003a014:	mov    DWORD PTR [rsp+0x40],r10d
   14003a019:	cmp    eax,r12d
   14003a01c:	je     0x14003a392
   14003a022:	cdqe   
   14003a024:	lea    rcx,[rax+rax*2]
   14003a028:	lea    rbp,[r9+rcx*4]
   14003a02c:	mov    QWORD PTR [rsp+0x58],rbp
   14003a031:	cmp    WORD PTR [rbp+0x0],r14w
   14003a036:	jb     0x14003a070
   14003a038:	mov    rax,QWORD PTR [rbp+0x0]
   14003a03c:	lea    rcx,[rsp+0x90]
   14003a044:	mov    QWORD PTR [rcx],rax
   14003a047:	mov    eax,DWORD PTR [rbp+0x8]
   14003a04a:	lea    rbp,[rsp+0x90]
   14003a052:	mov    DWORD PTR [rcx+0x8],eax
   14003a055:	mov    rax,QWORD PTR [rsp+0x90]
   14003a05d:	mov    QWORD PTR [rsp+0x58],rbp
   14003a062:	shr    rax,0x10
   14003a066:	sub    eax,r11d
   14003a069:	mov    DWORD PTR [rsp+0x92],eax
   14003a070:	movzx  ecx,WORD PTR [rbp+0xa]
   14003a074:	movzx  eax,WORD PTR [rsp+0x7a]
   14003a079:	mov    r15d,0x7fff
   14003a07f:	movzx  edi,cx
   14003a082:	and    cx,r15w
   14003a086:	mov    ebx,r12d
   14003a089:	xor    di,ax
   14003a08c:	and    ax,r15w
   14003a090:	mov    DWORD PTR [rsp+0x60],r12d
   14003a095:	and    di,r14w
   14003a099:	mov    DWORD PTR [rsp+0x64],r12d
   14003a09e:	mov    DWORD PTR [rsp+0x68],r12d
   14003a0a3:	lea    r9d,[rax+rcx*1]
   14003a0a7:	mov    WORD PTR [rsp+0x32],di
   14003a0ac:	cmp    ax,r15w
   14003a0b0:	jae    0x14003a363
   14003a0b6:	cmp    cx,r15w
   14003a0ba:	jae    0x14003a363
   14003a0c0:	cmp    r9w,si
   14003a0c4:	ja     0x14003a363
   14003a0ca:	mov    edi,0x3fbf
   14003a0cf:	cmp    r9w,di
   14003a0d3:	ja     0x14003a0df
   14003a0d5:	mov    DWORD PTR [rsp+0x78],r12d
   14003a0da:	jmp    0x14003a37b
   14003a0df:	cmp    ax,r12w
   14003a0e3:	jne    0x14003a10b
   14003a0e5:	mov    eax,DWORD PTR [rsp+0x78]
   14003a0e9:	add    r9w,r11w
   14003a0ed:	btr    eax,0x1f
   14003a0f1:	cmp    eax,r12d
   14003a0f4:	jne    0x14003a10b
   14003a0f6:	cmp    r8d,r12d
   14003a0f9:	jne    0x14003a10b
   14003a0fb:	cmp    edx,r12d
   14003a0fe:	jne    0x14003a10b
   14003a100:	mov    WORD PTR [rsp+0x7a],r12w
   14003a106:	jmp    0x14003a38a
   14003a10b:	cmp    cx,r12w
   14003a10f:	jne    0x14003a12d
   14003a111:	mov    eax,DWORD PTR [rbp+0x8]
   14003a114:	add    r9w,r11w
   14003a118:	btr    eax,0x1f
   14003a11c:	cmp    eax,r12d
   14003a11f:	jne    0x14003a12d
   14003a121:	cmp    DWORD PTR [rbp+0x4],r12d
   14003a125:	jne    0x14003a12d
   14003a127:	cmp    DWORD PTR [rbp+0x0],r12d
   14003a12b:	je     0x14003a0d5
   14003a12d:	mov    esi,r12d
   14003a130:	lea    r8,[rsp+0x64]
   14003a135:	mov    edi,r13d
   14003a138:	cmp    edi,r12d
   14003a13b:	lea    eax,[rsi+rsi*1]
   14003a13e:	mov    r14d,edi
   14003a141:	movsxd rcx,eax
   14003a144:	jle    0x14003a19e
   14003a146:	mov    r15d,esi
   14003a149:	lea    r13,[rbp+0x8]
   14003a14d:	lea    r12,[rsp+rcx*1+0x70]
   14003a152:	and    r15d,r11d
   14003a155:	xor    ebp,ebp
   14003a157:	movzx  eax,WORD PTR [r13+0x0]
   14003a15c:	movzx  ecx,WORD PTR [r12]
   14003a161:	mov    r10d,ebp
   14003a164:	imul   ecx,eax
   14003a167:	mov    eax,DWORD PTR [r8-0x4]
   14003a16b:	lea    edx,[rax+rcx*1]
   14003a16e:	cmp    edx,eax
   14003a170:	jb     0x14003a176
   14003a172:	cmp    edx,ecx
   14003a174:	jae    0x14003a179
   14003a176:	mov    r10d,r11d
   14003a179:	mov    DWORD PTR [r8-0x4],edx
   14003a17d:	cmp    r10d,ebp
   14003a180:	je     0x14003a186
   14003a182:	add    WORD PTR [r8],r11w
   14003a186:	sub    r14d,r11d
   14003a189:	add    r12,0x2
   14003a18d:	sub    r13,0x2
   14003a191:	cmp    r14d,ebp
   14003a194:	jg     0x14003a157
   14003a196:	mov    rbp,QWORD PTR [rsp+0x58]
   14003a19b:	xor    r12d,r12d
   14003a19e:	sub    edi,r11d
   14003a1a1:	add    r8,0x2
   14003a1a5:	add    esi,r11d
   14003a1a8:	cmp    edi,r12d
   14003a1ab:	jg     0x14003a138
   14003a1ad:	mov    r10d,DWORD PTR [rsp+0x68]
   14003a1b2:	mov    r8d,DWORD PTR [rsp+0x60]
   14003a1b7:	mov    eax,0xc002
   14003a1bc:	add    r9w,ax
   14003a1c0:	mov    r15d,0xffff
   14003a1c6:	cmp    r9w,r12w
   14003a1ca:	jle    0x14003a20e
   14003a1cc:	bt     r10d,0x1f
   14003a1d1:	jb     0x14003a208
   14003a1d3:	mov    edi,DWORD PTR [rsp+0x64]
   14003a1d7:	mov    edx,r8d
   14003a1da:	add    r10d,r10d
   14003a1dd:	shr    edx,0x1f
   14003a1e0:	add    r8d,r8d
   14003a1e3:	mov    ecx,edi
   14003a1e5:	shr    ecx,0x1f
   14003a1e8:	lea    eax,[rdi+rdi*1]
   14003a1eb:	add    r9w,r15w
   14003a1ef:	or     eax,edx
   14003a1f1:	or     r10d,ecx
   14003a1f4:	cmp    r9w,r12w
   14003a1f8:	mov    DWORD PTR [rsp+0x64],eax
   14003a1fc:	mov    DWORD PTR [rsp+0x68],r10d
   14003a201:	mov    DWORD PTR [rsp+0x60],r8d
   14003a206:	jg     0x14003a1cc
   14003a208:	cmp    r9w,r12w
   14003a20c:	jg     0x14003a274
   14003a20e:	add    r9w,r15w
   14003a212:	jns    0x14003a274
   14003a214:	movzx  eax,r9w
   14003a218:	neg    ax
   14003a21b:	movzx  edx,ax
   14003a21e:	add    r9w,dx
   14003a222:	test   BYTE PTR [rsp+0x60],r11b
   14003a227:	je     0x14003a22c
   14003a229:	add    ebx,r11d
   14003a22c:	mov    edi,DWORD PTR [rsp+0x64]
   14003a230:	mov    eax,r10d
   14003a233:	shr    r8d,1
   14003a236:	mov    ecx,edi
   14003a238:	shl    eax,0x1f
   14003a23b:	shr    edi,1
   14003a23d:	shl    ecx,0x1f
   14003a240:	or     edi,eax
   14003a242:	shr    r10d,1
   14003a245:	or     r8d,ecx
   14003a248:	sub    rdx,r11
   14003a24b:	mov    DWORD PTR [rsp+0x64],edi
   14003a24f:	mov    DWORD PTR [rsp+0x60],r8d
   14003a254:	jne    0x14003a222
   14003a256:	mov    DWORD PTR [rsp+0x68],r10d
   14003a25b:	cmp    ebx,r12d
   14003a25e:	je     0x14003a274
   14003a260:	movzx  eax,r8w
   14003a264:	or     ax,r11w
   14003a268:	mov    WORD PTR [rsp+0x60],ax
   14003a26d:	mov    r8d,DWORD PTR [rsp+0x60]
   14003a272:	jmp    0x14003a279
   14003a274:	mov    ax,WORD PTR [rsp+0x60]
   14003a279:	mov    r14d,0x8000
   14003a27f:	cmp    ax,r14w
   14003a283:	ja     0x14003a295
   14003a285:	and    r8d,0x1ffff
   14003a28c:	cmp    r8d,0x18000
   14003a293:	jne    0x14003a2e9
   14003a295:	mov    eax,DWORD PTR [rsp+0x62]
   14003a299:	or     ecx,0xffffffff
   14003a29c:	cmp    eax,ecx
   14003a29e:	jne    0x14003a2e2
   14003a2a0:	mov    eax,DWORD PTR [rsp+0x66]
   14003a2a4:	mov    DWORD PTR [rsp+0x62],r12d
   14003a2a9:	cmp    eax,ecx
   14003a2ab:	jne    0x14003a2d4
   14003a2ad:	movzx  eax,WORD PTR [rsp+0x6a]
   14003a2b2:	mov    DWORD PTR [rsp+0x66],r12d
   14003a2b7:	cmp    ax,r15w
   14003a2bb:	jne    0x14003a2c9
   14003a2bd:	mov    WORD PTR [rsp+0x6a],r14w
   14003a2c3:	add    r9w,r11w
   14003a2c7:	jmp    0x14003a2db
   14003a2c9:	add    ax,r11w
   14003a2cd:	mov    WORD PTR [rsp+0x6a],ax
   14003a2d2:	jmp    0x14003a2db
   14003a2d4:	add    eax,r11d
   14003a2d7:	mov    DWORD PTR [rsp+0x66],eax
   14003a2db:	mov    r10d,DWORD PTR [rsp+0x68]
   14003a2e0:	jmp    0x14003a2e9
   14003a2e2:	add    eax,r11d
   14003a2e5:	mov    DWORD PTR [rsp+0x62],eax
   14003a2e9:	mov    ebp,0x7fff
   14003a2ee:	mov    r13d,0x5
   14003a2f4:	mov    esi,0xbffd
   14003a2f9:	mov    edi,0x3fbf
   14003a2fe:	cmp    r9w,bp
   14003a302:	jb     0x14003a332
   14003a304:	mov    ax,WORD PTR [rsp+0x32]
   14003a309:	mov    edx,r12d
   14003a30c:	mov    r8d,r12d
   14003a30f:	neg    ax
   14003a312:	mov    DWORD PTR [rsp+0x74],r12d
   14003a317:	mov    DWORD PTR [rsp+0x70],edx
   14003a31b:	sbb    eax,eax
   14003a31d:	and    eax,0x80000000
   14003a322:	add    eax,0x7fff8000
   14003a327:	mov    DWORD PTR [rsp+0x78],eax
   14003a32b:	mov    r10d,DWORD PTR [rsp+0x40]
   14003a330:	jmp    0x14003a38d
   14003a332:	movzx  eax,WORD PTR [rsp+0x62]
   14003a337:	mov    DWORD PTR [rsp+0x76],r10d
   14003a33c:	mov    WORD PTR [rsp+0x70],ax
   14003a341:	mov    eax,DWORD PTR [rsp+0x64]
   14003a345:	mov    DWORD PTR [rsp+0x72],eax
   14003a349:	mov    ax,WORD PTR [rsp+0x32]
   14003a34e:	mov    r8d,DWORD PTR [rsp+0x74]
   14003a353:	mov    edx,DWORD PTR [rsp+0x70]
   14003a357:	or     r9w,ax
   14003a35b:	mov    WORD PTR [rsp+0x7a],r9w
   14003a361:	jmp    0x14003a32b
   14003a363:	neg    di
   14003a366:	mov    edi,0x3fbf
   14003a36b:	sbb    eax,eax
   14003a36d:	and    eax,0x80000000
   14003a372:	add    eax,0x7fff8000
   14003a377:	mov    DWORD PTR [rsp+0x78],eax
   14003a37b:	mov    edx,r12d
   14003a37e:	mov    r8d,r12d
   14003a381:	mov    DWORD PTR [rsp+0x74],r12d
   14003a386:	mov    DWORD PTR [rsp+0x70],edx
   14003a38a:	mov    ebp,r15d
   14003a38d:	mov    r9,QWORD PTR [rsp+0x38]
   14003a392:	cmp    r10d,r12d
   14003a395:	jne    0x14003a001
   14003a39b:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a3a0:	mov    ecx,DWORD PTR [rsp+0x34]
   14003a3a4:	jmp    0x14003a3af
   14003a3a6:	mov    r8d,DWORD PTR [rsp+0x74]
   14003a3ab:	mov    edx,DWORD PTR [rsp+0x70]
   14003a3af:	mov    eax,DWORD PTR [rsp+0x78]
   14003a3b3:	mov    r9d,0x3fff
   14003a3b9:	shr    eax,0x10
   14003a3bc:	cmp    ax,r9w
   14003a3c0:	jb     0x14003a6bc
   14003a3c6:	add    cx,r11w
   14003a3ca:	mov    r9d,0x8000
   14003a3d0:	mov    r15d,r12d
   14003a3d3:	mov    DWORD PTR [rsp+0x34],ecx
   14003a3d7:	movzx  ecx,WORD PTR [rsp+0x8a]
   14003a3df:	mov    DWORD PTR [rsp+0x60],r12d
   14003a3e4:	movzx  r14d,cx
   14003a3e8:	and    cx,bp
   14003a3eb:	mov    DWORD PTR [rsp+0x64],r12d
   14003a3f0:	xor    r14w,ax
   14003a3f4:	and    ax,bp
   14003a3f7:	mov    DWORD PTR [rsp+0x68],r12d
   14003a3fc:	and    r14w,r9w
   14003a400:	lea    r9d,[rax+rcx*1]
   14003a404:	cmp    ax,bp
   14003a407:	jae    0x14003a6a2
   14003a40d:	cmp    cx,bp
   14003a410:	jae    0x14003a6a2
   14003a416:	cmp    r9w,si
   14003a41a:	ja     0x14003a6a2
   14003a420:	cmp    r9w,di
   14003a424:	ja     0x14003a430
   14003a426:	mov    DWORD PTR [rsp+0x78],r12d
   14003a42b:	jmp    0x14003a6b6
   14003a430:	cmp    ax,r12w
   14003a434:	jne    0x14003a45c
   14003a436:	mov    eax,DWORD PTR [rsp+0x78]
   14003a43a:	add    r9w,r11w
   14003a43e:	btr    eax,0x1f
   14003a442:	cmp    eax,r12d
   14003a445:	jne    0x14003a45c
   14003a447:	cmp    r8d,r12d
   14003a44a:	jne    0x14003a45c
   14003a44c:	cmp    edx,r12d
   14003a44f:	jne    0x14003a45c
   14003a451:	mov    WORD PTR [rsp+0x7a],r12w
   14003a457:	jmp    0x14003a6bc
   14003a45c:	cmp    cx,r12w
   14003a460:	jne    0x14003a48a
   14003a462:	mov    eax,DWORD PTR [rsp+0x88]
   14003a469:	add    r9w,r11w
   14003a46d:	btr    eax,0x1f
   14003a471:	cmp    eax,r12d
   14003a474:	jne    0x14003a48a
   14003a476:	cmp    DWORD PTR [rsp+0x84],r12d
   14003a47e:	jne    0x14003a48a
   14003a480:	cmp    DWORD PTR [rsp+0x80],r12d
   14003a488:	je     0x14003a426
   14003a48a:	mov    edi,r12d
   14003a48d:	lea    rdx,[rsp+0x64]
   14003a492:	lea    eax,[rdi+rdi*1]
   14003a495:	xor    ebx,ebx
   14003a497:	mov    r12d,r13d
   14003a49a:	cmp    r13d,ebx
   14003a49d:	movsxd rcx,eax
   14003a4a0:	jle    0x14003a4f8
   14003a4a2:	mov    r13d,edi
   14003a4a5:	lea    rsi,[rsp+0x88]
   14003a4ad:	lea    rbp,[rsp+rcx*1+0x70]
   14003a4b2:	and    r13d,r11d
   14003a4b5:	movzx  eax,WORD PTR [rbp+0x0]
   14003a4b9:	movzx  ecx,WORD PTR [rsi]
   14003a4bc:	mov    r10d,ebx
   14003a4bf:	imul   ecx,eax
   14003a4c2:	mov    eax,DWORD PTR [rdx-0x4]
   14003a4c5:	lea    r8d,[rax+rcx*1]
   14003a4c9:	cmp    r8d,eax
   14003a4cc:	jb     0x14003a4d3
   14003a4ce:	cmp    r8d,ecx
   14003a4d1:	jae    0x14003a4d6
   14003a4d3:	mov    r10d,r11d
   14003a4d6:	mov    DWORD PTR [rdx-0x4],r8d
   14003a4da:	cmp    r10d,ebx
   14003a4dd:	je     0x14003a4e3
   14003a4df:	add    WORD PTR [rdx],r11w
   14003a4e3:	sub    r12d,r11d
   14003a4e6:	add    rbp,0x2
   14003a4ea:	sub    rsi,0x2
   14003a4ee:	cmp    r12d,ebx
   14003a4f1:	jg     0x14003a4b5
   14003a4f3:	mov    r13d,DWORD PTR [rsp+0x48]
   14003a4f8:	sub    r13d,r11d
   14003a4fb:	xor    r12d,r12d
   14003a4fe:	add    rdx,0x2
   14003a502:	add    edi,r11d
   14003a505:	cmp    r13d,r12d
   14003a508:	mov    DWORD PTR [rsp+0x48],r13d
   14003a50d:	jg     0x14003a492
   14003a50f:	mov    r8d,DWORD PTR [rsp+0x68]
   14003a514:	mov    r10d,DWORD PTR [rsp+0x60]
   14003a519:	mov    eax,0xc002
   14003a51e:	add    r9w,ax
   14003a522:	mov    esi,0xffff
   14003a527:	cmp    r9w,r12w
   14003a52b:	jle    0x14003a56f
   14003a52d:	bt     r8d,0x1f
   14003a532:	jb     0x14003a569
   14003a534:	mov    edi,DWORD PTR [rsp+0x64]
   14003a538:	mov    edx,r10d
   14003a53b:	add    r8d,r8d
   14003a53e:	shr    edx,0x1f
   14003a541:	add    r10d,r10d
   14003a544:	mov    ecx,edi
   14003a546:	shr    ecx,0x1f
   14003a549:	lea    eax,[rdi+rdi*1]
   14003a54c:	add    r9w,si
   14003a550:	or     eax,edx
   14003a552:	or     r8d,ecx
   14003a555:	cmp    r9w,r12w
   14003a559:	mov    DWORD PTR [rsp+0x64],eax
   14003a55d:	mov    DWORD PTR [rsp+0x68],r8d
   14003a562:	mov    DWORD PTR [rsp+0x60],r10d
   14003a567:	jg     0x14003a52d
   14003a569:	cmp    r9w,r12w
   14003a56d:	jg     0x14003a5d5
   14003a56f:	add    r9w,si
   14003a573:	jns    0x14003a5d5
   14003a575:	movzx  eax,r9w
   14003a579:	neg    ax
   14003a57c:	movzx  edx,ax
   14003a57f:	add    r9w,dx
   14003a583:	test   BYTE PTR [rsp+0x60],r11b
   14003a588:	je     0x14003a58d
   14003a58a:	add    r15d,r11d
   14003a58d:	mov    edi,DWORD PTR [rsp+0x64]
   14003a591:	mov    eax,r8d
   14003a594:	shr    r10d,1
   14003a597:	mov    ecx,edi
   14003a599:	shl    eax,0x1f
   14003a59c:	shr    edi,1
   14003a59e:	shl    ecx,0x1f
   14003a5a1:	or     edi,eax
   14003a5a3:	shr    r8d,1
   14003a5a6:	or     r10d,ecx
   14003a5a9:	sub    rdx,r11
   14003a5ac:	mov    DWORD PTR [rsp+0x64],edi
   14003a5b0:	mov    DWORD PTR [rsp+0x60],r10d
   14003a5b5:	jne    0x14003a583
   14003a5b7:	mov    DWORD PTR [rsp+0x68],r8d
   14003a5bc:	cmp    r15d,r12d
   14003a5bf:	je     0x14003a5d5
   14003a5c1:	movzx  eax,r10w
   14003a5c5:	or     ax,r11w
   14003a5c9:	mov    WORD PTR [rsp+0x60],ax
   14003a5ce:	mov    r10d,DWORD PTR [rsp+0x60]
   14003a5d3:	jmp    0x14003a5da
   14003a5d5:	mov    ax,WORD PTR [rsp+0x60]
   14003a5da:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a5df:	mov    r13d,0x8000
   14003a5e5:	cmp    ax,r13w
   14003a5e9:	ja     0x14003a5fb
   14003a5eb:	and    r10d,0x1ffff
   14003a5f2:	cmp    r10d,0x18000
   14003a5f9:	jne    0x14003a64e
   14003a5fb:	mov    eax,DWORD PTR [rsp+0x62]
   14003a5ff:	or     ecx,0xffffffff
   14003a602:	cmp    eax,ecx
   14003a604:	jne    0x14003a647
   14003a606:	mov    eax,DWORD PTR [rsp+0x66]
   14003a60a:	mov    DWORD PTR [rsp+0x62],r12d
   14003a60f:	cmp    eax,ecx
   14003a611:	jne    0x14003a639
   14003a613:	movzx  eax,WORD PTR [rsp+0x6a]
   14003a618:	mov    DWORD PTR [rsp+0x66],r12d
   14003a61d:	cmp    ax,si
   14003a620:	jne    0x14003a62e
   14003a622:	mov    WORD PTR [rsp+0x6a],r13w
   14003a628:	add    r9w,r11w
   14003a62c:	jmp    0x14003a640
   14003a62e:	add    ax,r11w
   14003a632:	mov    WORD PTR [rsp+0x6a],ax
   14003a637:	jmp    0x14003a640
   14003a639:	add    eax,r11d
   14003a63c:	mov    DWORD PTR [rsp+0x66],eax
   14003a640:	mov    r8d,DWORD PTR [rsp+0x68]
   14003a645:	jmp    0x14003a64e
   14003a647:	add    eax,r11d
   14003a64a:	mov    DWORD PTR [rsp+0x62],eax
   14003a64e:	mov    r15d,0x7fff
   14003a654:	cmp    r9w,r15w
   14003a658:	jb     0x14003a676
   14003a65a:	neg    r14w
   14003a65e:	mov    r8d,r12d
   14003a661:	mov    edx,r12d
   14003a664:	sbb    eax,eax
   14003a666:	and    eax,0x80000000
   14003a66b:	add    eax,0x7fff8000
   14003a670:	mov    DWORD PTR [rsp+0x78],eax
   14003a674:	jmp    0x14003a6c2
   14003a676:	movzx  eax,WORD PTR [rsp+0x62]
   14003a67b:	or     r9w,r14w
   14003a67f:	mov    DWORD PTR [rsp+0x76],r8d
   14003a684:	mov    WORD PTR [rsp+0x70],ax
   14003a689:	mov    eax,DWORD PTR [rsp+0x64]
   14003a68d:	mov    WORD PTR [rsp+0x7a],r9w
   14003a693:	mov    DWORD PTR [rsp+0x72],eax
   14003a697:	mov    r8d,DWORD PTR [rsp+0x74]
   14003a69c:	mov    edx,DWORD PTR [rsp+0x70]
   14003a6a0:	jmp    0x14003a6c2
   14003a6a2:	neg    r14w
   14003a6a6:	sbb    eax,eax
   14003a6a8:	and    eax,0x80000000
   14003a6ad:	add    eax,0x7fff8000
   14003a6b2:	mov    DWORD PTR [rsp+0x78],eax
   14003a6b6:	mov    edx,r12d
   14003a6b9:	mov    r8d,r12d
   14003a6bc:	mov    r13d,0x8000
   14003a6c2:	mov    eax,DWORD PTR [rsp+0x34]
   14003a6c6:	mov    esi,DWORD PTR [rsp+0x44]
   14003a6ca:	mov    WORD PTR [rbx],ax
   14003a6cd:	test   BYTE PTR [rsp+0x4c],r11b
   14003a6d2:	je     0x14003a6f2
   14003a6d4:	cwde   
   14003a6d5:	add    esi,eax
   14003a6d7:	cmp    esi,r12d
   14003a6da:	jg     0x14003a6f2
   14003a6dc:	cmp    WORD PTR [rsp+0x30],r13w
   14003a6e2:	mov    eax,0x20
   14003a6e7:	lea    ecx,[rax+0xd]
   14003a6ea:	cmove  eax,ecx
   14003a6ed:	jmp    0x140039e91
   14003a6f2:	mov    r10d,DWORD PTR [rsp+0x78]
   14003a6f7:	mov    eax,0x15
   14003a6fc:	mov    WORD PTR [rsp+0x7a],r12w
   14003a702:	mov    r9d,DWORD PTR [rsp+0x78]
   14003a707:	cmp    esi,eax
   14003a709:	lea    edi,[rax-0xd]
   14003a70c:	cmovg  esi,eax
   14003a70f:	shr    r10d,0x10
   14003a713:	sub    r10d,0x3ffe
   14003a71a:	mov    ecx,r8d
   14003a71d:	mov    eax,edx
   14003a71f:	add    r9d,r9d
   14003a722:	add    r8d,r8d
   14003a725:	shr    eax,0x1f
   14003a728:	shr    ecx,0x1f
   14003a72b:	or     r8d,eax
   14003a72e:	or     r9d,ecx
   14003a731:	add    edx,edx
   14003a733:	sub    rdi,r11
   14003a736:	jne    0x14003a71a
   14003a738:	cmp    r10d,r12d
   14003a73b:	mov    DWORD PTR [rsp+0x74],r8d
   14003a740:	mov    DWORD PTR [rsp+0x70],edx
   14003a744:	mov    DWORD PTR [rsp+0x78],r9d
   14003a749:	jge    0x14003a786
   14003a74b:	neg    r10d
   14003a74e:	movzx  r10d,r10b
   14003a752:	cmp    r10d,r12d
   14003a755:	jle    0x14003a786
   14003a757:	mov    ecx,r8d
   14003a75a:	mov    eax,r9d
   14003a75d:	shr    edx,1
   14003a75f:	shr    r8d,1
   14003a762:	shl    eax,0x1f
   14003a765:	shl    ecx,0x1f
   14003a768:	sub    r10d,r11d
   14003a76b:	shr    r9d,1
   14003a76e:	or     r8d,eax
   14003a771:	or     edx,ecx
   14003a773:	cmp    r10d,r12d
   14003a776:	jg     0x14003a757
   14003a778:	mov    DWORD PTR [rsp+0x74],r8d
   14003a77d:	mov    DWORD PTR [rsp+0x70],edx
   14003a781:	mov    DWORD PTR [rsp+0x78],r9d
   14003a786:	lea    ebp,[rsi+0x1]
   14003a789:	lea    rdi,[rbx+0x4]
   14003a78d:	cmp    ebp,r12d
   14003a790:	mov    r10,rdi
   14003a793:	jle    0x14003a881
   14003a799:	add    r9d,r9d
   14003a79c:	lea    rcx,[rsp+0x70]
   14003a7a1:	lea    rsi,[rsp+0x90]
   14003a7a9:	mov    rax,QWORD PTR [rcx]
   14003a7ac:	mov    QWORD PTR [rsi],rax
   14003a7af:	mov    eax,DWORD PTR [rcx+0x8]
   14003a7b2:	mov    ecx,r8d
   14003a7b5:	mov    DWORD PTR [rsi+0x8],eax
   14003a7b8:	mov    eax,edx
   14003a7ba:	add    r8d,r8d
   14003a7bd:	shr    eax,0x1f
   14003a7c0:	shr    ecx,0x1f
   14003a7c3:	add    edx,edx
   14003a7c5:	or     r8d,eax
   14003a7c8:	or     r9d,ecx
   14003a7cb:	mov    eax,edx
   14003a7cd:	mov    ecx,r8d
   14003a7d0:	shr    eax,0x1f
   14003a7d3:	add    r8d,r8d
   14003a7d6:	or     r8d,eax
   14003a7d9:	mov    rax,QWORD PTR [rsp+0x90]
   14003a7e1:	add    edx,edx
   14003a7e3:	shr    ecx,0x1f
   14003a7e6:	add    r9d,r9d
   14003a7e9:	lea    r12d,[rax+rdx*1]
   14003a7ed:	or     r9d,ecx
   14003a7f0:	cmp    r12d,edx
   14003a7f3:	jb     0x14003a7fa
   14003a7f5:	cmp    r12d,eax
   14003a7f8:	jae    0x14003a817
   14003a7fa:	lea    ecx,[r8+0x1]
   14003a7fe:	xor    edx,edx
   14003a800:	cmp    ecx,r8d
   14003a803:	jb     0x14003a80a
   14003a805:	cmp    ecx,r11d
   14003a808:	jae    0x14003a80d
   14003a80a:	mov    edx,r11d
   14003a80d:	mov    r8d,ecx
   14003a810:	test   edx,edx
   14003a812:	je     0x14003a817
   14003a814:	add    r9d,r11d
   14003a817:	shr    rax,0x20
   14003a81b:	lea    esi,[r8+rax*1]
   14003a81f:	cmp    esi,r8d
   14003a822:	jb     0x14003a828
   14003a824:	cmp    esi,eax
   14003a826:	jae    0x14003a82b
   14003a828:	add    r9d,r11d
   14003a82b:	add    r9d,DWORD PTR [rsp+0x98]
   14003a833:	mov    eax,r12d
   14003a836:	lea    edx,[r12+r12*1]
   14003a83a:	shr    eax,0x1f
   14003a83d:	xor    r12d,r12d
   14003a840:	lea    r8d,[rsi+rsi*1]
   14003a844:	or     r8d,eax
   14003a847:	mov    ecx,esi
   14003a849:	lea    eax,[r9+r9*1]
   14003a84d:	shr    ecx,0x1f
   14003a850:	sub    ebp,r11d
   14003a853:	mov    DWORD PTR [rsp+0x70],edx
   14003a857:	or     eax,ecx
   14003a859:	mov    DWORD PTR [rsp+0x74],r8d
   14003a85e:	mov    DWORD PTR [rsp+0x78],eax
   14003a862:	shr    eax,0x18
   14003a865:	mov    BYTE PTR [rsp+0x7b],r12b
   14003a86a:	add    al,0x30
   14003a86c:	mov    BYTE PTR [r10],al
   14003a86f:	add    r10,r11
   14003a872:	cmp    ebp,r12d
   14003a875:	jle    0x14003a881
   14003a877:	mov    r9d,DWORD PTR [rsp+0x78]
   14003a87c:	jmp    0x14003a799
   14003a881:	sub    r10,r11
   14003a884:	mov    al,BYTE PTR [r10]
   14003a887:	sub    r10,r11
   14003a88a:	cmp    al,0x35
   14003a88c:	jl     0x14003a8fc
   14003a88e:	jmp    0x14003a89d
   14003a890:	cmp    BYTE PTR [r10],0x39
   14003a894:	jne    0x14003a8a2
   14003a896:	mov    BYTE PTR [r10],0x30
   14003a89a:	sub    r10,r11
   14003a89d:	cmp    r10,rdi
   14003a8a0:	jae    0x14003a890
   14003a8a2:	cmp    r10,rdi
   14003a8a5:	jae    0x14003a8ae
   14003a8a7:	add    r10,r11
   14003a8aa:	add    WORD PTR [rbx],r11w
   14003a8ae:	add    BYTE PTR [r10],r11b
   14003a8b1:	sub    r10b,bl
   14003a8b4:	sub    r10b,0x3
   14003a8b8:	movsx  rax,r10b
   14003a8bc:	mov    BYTE PTR [rbx+0x3],r10b
   14003a8c0:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   14003a8c5:	mov    eax,r11d
   14003a8c8:	mov    rcx,QWORD PTR [rsp+0xa0]
   14003a8d0:	xor    rcx,rsp
   14003a8d3:	call   0x14002b250
   14003a8d8:	mov    rbx,QWORD PTR [rsp+0xf8]
   14003a8e0:	add    rsp,0xb0
   14003a8e7:	pop    r15
   14003a8e9:	pop    r14
   14003a8eb:	pop    r13
   14003a8ed:	pop    r12
   14003a8ef:	pop    rdi
   14003a8f0:	pop    rsi
   14003a8f1:	pop    rbp
   14003a8f2:	ret    
   14003a8f3:	cmp    BYTE PTR [r10],0x30
   14003a8f7:	jne    0x14003a901
   14003a8f9:	sub    r10,r11
   14003a8fc:	cmp    r10,rdi
   14003a8ff:	jae    0x14003a8f3
   14003a901:	cmp    r10,rdi
   14003a904:	jae    0x14003a8b1
   14003a906:	cmp    WORD PTR [rsp+0x30],r13w
   14003a90c:	mov    eax,0x20
   14003a911:	mov    BYTE PTR [rdi],0x30
   14003a914:	lea    ecx,[rax+0xd]
   14003a917:	cmove  eax,ecx
   14003a91a:	jmp    0x140039e95
   14003a91f:	int3   
   14003a920:	rex push rbx
   14003a922:	sub    rsp,0x20
   14003a926:	test   BYTE PTR [rcx+0x18],0x83
   14003a92a:	mov    rbx,rcx
   14003a92d:	je     0x14003a951
   14003a92f:	test   BYTE PTR [rcx+0x18],0x8
   14003a933:	je     0x14003a951
   14003a935:	mov    rcx,QWORD PTR [rcx+0x10]
   14003a939:	call   0x14002b36c
   14003a93e:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14003a945:	xor    eax,eax
   14003a947:	mov    QWORD PTR [rbx],rax
   14003a94a:	mov    QWORD PTR [rbx+0x10],rax
   14003a94e:	mov    DWORD PTR [rbx+0x8],eax
   14003a951:	add    rsp,0x20
   14003a955:	pop    rbx
   14003a956:	ret    
   14003a957:	int3   
   14003a958:	rex push rbp
   14003a95a:	push   rbx
   14003a95b:	push   rsi
   14003a95c:	push   rdi
   14003a95d:	push   r12
   14003a95f:	push   r13
   14003a961:	push   r14
   14003a963:	push   r15
   14003a965:	sub    rsp,0x68
   14003a969:	lea    rbp,[rsp+0x30]
   14003a96e:	mov    rax,QWORD PTR [rip+0x2bf3b]        # 0x1400668b0
   14003a975:	xor    rax,rbp
   14003a978:	mov    QWORD PTR [rbp+0x28],rax
   14003a97c:	mov    rdi,QWORD PTR [rbp+0xa8]
   14003a983:	mov    r10d,edx
   14003a986:	mov    DWORD PTR [rbp+0x0],edx
   14003a989:	mov    edx,DWORD PTR [rip+0x30121]        # 0x14006aab0
   14003a98f:	mov    r11d,0x2
   14003a995:	xor    ebx,ebx
   14003a997:	mov    r15,r9
   14003a99a:	mov    DWORD PTR [rbp+0x4],r8d
   14003a99e:	mov    r14,rcx
   14003a9a1:	mov    QWORD PTR [rbp+0x8],rdi
   14003a9a5:	lea    r12d,[r11-0x1]
   14003a9a9:	cmp    edx,ebx
   14003a9ab:	jne    0x14003a9fc
   14003a9ad:	lea    r8,[rip+0x3c88]        # 0x14003e63c
   14003a9b4:	mov    r9d,r12d
   14003a9b7:	xor    edx,edx
   14003a9b9:	xor    ecx,ecx
   14003a9bb:	mov    DWORD PTR [rsp+0x28],r12d
   14003a9c0:	mov    QWORD PTR [rsp+0x20],r8
   14003a9c5:	call   QWORD PTR [rip+0x28ed]        # 0x14003d2b8
   14003a9cb:	cmp    eax,ebx
   14003a9cd:	je     0x14003a9d9
   14003a9cf:	mov    edx,r12d
   14003a9d2:	lea    r11d,[r12+0x1]
   14003a9d7:	jmp    0x14003a9f2
   14003a9d9:	call   QWORD PTR [rip+0x2959]        # 0x14003d338
   14003a9df:	mov    edx,DWORD PTR [rip+0x300cb]        # 0x14006aab0
   14003a9e5:	mov    r11d,0x2
   14003a9eb:	cmp    eax,0x78
   14003a9ee:	cmove  edx,r11d
   14003a9f2:	mov    r10d,DWORD PTR [rbp+0x0]
   14003a9f6:	mov    DWORD PTR [rip+0x300b4],edx        # 0x14006aab0
   14003a9fc:	mov    r9d,DWORD PTR [rbp+0xa0]
   14003aa03:	cmp    r9d,ebx
   14003aa06:	jle    0x14003aa61
   14003aa08:	mov    ecx,r9d
   14003aa0b:	mov    rax,r15
   14003aa0e:	sub    ecx,r12d
   14003aa11:	or     esi,0xffffffff
   14003aa14:	cmp    BYTE PTR [rax],bl
   14003aa16:	je     0x14003aa21
   14003aa18:	add    rax,r12
   14003aa1b:	cmp    ecx,ebx
   14003aa1d:	jne    0x14003aa0e
   14003aa1f:	mov    ecx,esi
   14003aa21:	mov    eax,esi
   14003aa23:	sub    eax,ecx
   14003aa25:	add    r9d,eax
   14003aa28:	mov    DWORD PTR [rbp+0xa0],r9d
   14003aa2f:	mov    r8d,DWORD PTR [rbp+0xb0]
   14003aa36:	cmp    r8d,ebx
   14003aa39:	jle    0x14003aa70
   14003aa3b:	mov    ecx,r8d
   14003aa3e:	mov    rax,rdi
   14003aa41:	sub    ecx,r12d
   14003aa44:	cmp    BYTE PTR [rax],bl
   14003aa46:	je     0x14003aa51
   14003aa48:	add    rax,r12
   14003aa4b:	cmp    ecx,ebx
   14003aa4d:	jne    0x14003aa41
   14003aa4f:	mov    ecx,esi
   14003aa51:	mov    eax,esi
   14003aa53:	sub    eax,ecx
   14003aa55:	add    r8d,eax
   14003aa58:	mov    DWORD PTR [rbp+0xb0],r8d
   14003aa5f:	jmp    0x14003aa75
   14003aa61:	or     esi,0xffffffff
   14003aa64:	cmp    r9d,esi
   14003aa67:	jge    0x14003aa2f
   14003aa69:	xor    eax,eax
   14003aa6b:	jmp    0x14003ae15
   14003aa70:	cmp    r8d,esi
   14003aa73:	jl     0x14003aa69
   14003aa75:	cmp    edx,r11d
   14003aa78:	je     0x14003ad2d
   14003aa7e:	cmp    edx,ebx
   14003aa80:	je     0x14003ad2d
   14003aa86:	cmp    edx,r12d
   14003aa89:	jne    0x14003aa69
   14003aa8b:	mov    r13d,DWORD PTR [rbp+0xb8]
   14003aa92:	cmp    r13d,ebx
   14003aa95:	jne    0x14003aa9e
   14003aa97:	mov    rcx,QWORD PTR [r14]
   14003aa9a:	mov    r13d,DWORD PTR [rcx+0x4]
   14003aa9e:	cmp    r9d,ebx
   14003aaa1:	je     0x14003aaac
   14003aaa3:	cmp    r8d,ebx
   14003aaa6:	jne    0x14003ab57
   14003aaac:	cmp    r9d,r8d
   14003aaaf:	jne    0x14003aab9
   14003aab1:	mov    eax,r11d
   14003aab4:	jmp    0x14003ae15
   14003aab9:	cmp    r8d,r12d
   14003aabc:	jle    0x14003aac6
   14003aabe:	mov    eax,r12d
   14003aac1:	jmp    0x14003ae15
   14003aac6:	cmp    r9d,r12d
   14003aac9:	jle    0x14003aad5
   14003aacb:	mov    eax,0x3
   14003aad0:	jmp    0x14003ae15
   14003aad5:	lea    rdx,[rbp+0x10]
   14003aad9:	mov    ecx,r13d
   14003aadc:	call   QWORD PTR [rip+0x271e]        # 0x14003d200
   14003aae2:	cmp    eax,ebx
   14003aae4:	je     0x14003aa69
   14003aae6:	mov    r9d,DWORD PTR [rbp+0xa0]
   14003aaed:	cmp    r9d,ebx
   14003aaf0:	jle    0x14003ab24
   14003aaf2:	cmp    DWORD PTR [rbp+0x10],0x2
   14003aaf6:	jb     0x14003aacb
   14003aaf8:	cmp    BYTE PTR [rbp+0x16],bl
   14003aafb:	lea    rax,[rbp+0x16]
   14003aaff:	je     0x14003aacb
   14003ab01:	cmp    BYTE PTR [rax+0x1],bl
   14003ab04:	je     0x14003aacb
   14003ab06:	mov    cl,BYTE PTR [r15]
   14003ab09:	cmp    cl,BYTE PTR [rax]
   14003ab0b:	jb     0x14003ab12
   14003ab0d:	cmp    cl,BYTE PTR [rax+0x1]
   14003ab10:	jbe    0x14003ab1a
   14003ab12:	add    rax,0x2
   14003ab16:	cmp    BYTE PTR [rax],bl
   14003ab18:	jmp    0x14003aaff
   14003ab1a:	mov    eax,0x2
   14003ab1f:	jmp    0x14003ae15
   14003ab24:	cmp    DWORD PTR [rbp+0xb0],ebx
   14003ab2a:	jle    0x14003ab57
   14003ab2c:	cmp    DWORD PTR [rbp+0x10],0x2
   14003ab30:	jb     0x14003aabe
   14003ab32:	cmp    BYTE PTR [rbp+0x16],bl
   14003ab35:	lea    rax,[rbp+0x16]
   14003ab39:	je     0x14003aabe
   14003ab3b:	cmp    BYTE PTR [rax+0x1],bl
   14003ab3e:	je     0x14003aabe
   14003ab44:	mov    cl,BYTE PTR [rdi]
   14003ab46:	cmp    cl,BYTE PTR [rax]
   14003ab48:	jb     0x14003ab4f
   14003ab4a:	cmp    cl,BYTE PTR [rax+0x1]
   14003ab4d:	jbe    0x14003ab1a
   14003ab4f:	add    rax,0x2
   14003ab53:	cmp    BYTE PTR [rax],bl
   14003ab55:	jmp    0x14003ab39
   14003ab57:	mov    r8,r15
   14003ab5a:	mov    edx,0x9
   14003ab5f:	mov    ecx,r13d
   14003ab62:	mov    DWORD PTR [rsp+0x28],ebx
   14003ab66:	mov    QWORD PTR [rsp+0x20],rbx
   14003ab6b:	call   QWORD PTR [rip+0x253f]        # 0x14003d0b0
   14003ab71:	movsxd r14,eax
   14003ab74:	cmp    r14d,ebx
   14003ab77:	je     0x14003aa69
   14003ab7d:	movabs r8,0xffffffffffffff0
   14003ab87:	jle    0x14003abed
   14003ab89:	xor    edx,edx
   14003ab8b:	lea    rax,[rdx-0x20]
   14003ab8f:	div    r14
   14003ab92:	cmp    rax,0x2
   14003ab96:	jb     0x14003abed
   14003ab98:	lea    rcx,[r14+r14*1+0x10]
   14003ab9d:	cmp    rcx,0x400
   14003aba4:	ja     0x14003abd4
   14003aba6:	lea    rax,[rcx+0xf]
   14003abaa:	cmp    rax,rcx
   14003abad:	ja     0x14003abb2
   14003abaf:	mov    rax,r8
   14003abb2:	and    rax,0xfffffffffffffff0
   14003abb6:	call   0x14003c600
   14003abbb:	sub    rsp,rax
   14003abbe:	lea    rsi,[rsp+0x30]
   14003abc3:	cmp    rsi,rbx
   14003abc6:	je     0x14003aa69
   14003abcc:	mov    DWORD PTR [rsi],0xcccc
   14003abd2:	jmp    0x14003abe7
   14003abd4:	call   0x14002c04c
   14003abd9:	mov    rsi,rax
   14003abdc:	cmp    rax,rbx
   14003abdf:	je     0x14003abf0
   14003abe1:	mov    DWORD PTR [rax],0xdddd
   14003abe7:	add    rsi,0x10
   14003abeb:	jmp    0x14003abf0
   14003abed:	mov    rsi,rbx
   14003abf0:	cmp    rsi,rbx
   14003abf3:	je     0x14003aa69
   14003abf9:	mov    r9d,DWORD PTR [rbp+0xa0]
   14003ac00:	mov    r8,r15
   14003ac03:	mov    edx,r12d
   14003ac06:	mov    ecx,r13d
   14003ac09:	mov    DWORD PTR [rsp+0x28],r14d
   14003ac0e:	mov    QWORD PTR [rsp+0x20],rsi
   14003ac13:	call   QWORD PTR [rip+0x2497]        # 0x14003d0b0
   14003ac19:	cmp    eax,ebx
   14003ac1b:	je     0x14003ad15
   14003ac21:	mov    r9d,DWORD PTR [rbp+0xb0]
   14003ac28:	mov    r8,rdi
   14003ac2b:	mov    edx,0x9
   14003ac30:	mov    ecx,r13d
   14003ac33:	mov    DWORD PTR [rsp+0x28],ebx
   14003ac37:	mov    QWORD PTR [rsp+0x20],rbx
   14003ac3c:	call   QWORD PTR [rip+0x246e]        # 0x14003d0b0
   14003ac42:	movsxd r12,eax
   14003ac45:	cmp    r12d,ebx
   14003ac48:	je     0x14003ad15
   14003ac4e:	jle    0x14003acb7
   14003ac50:	xor    edx,edx
   14003ac52:	lea    rax,[rdx-0x20]
   14003ac56:	div    r12
   14003ac59:	cmp    rax,0x2
   14003ac5d:	jb     0x14003acb7
   14003ac5f:	lea    rcx,[r12+r12*1+0x10]
   14003ac64:	cmp    rcx,0x400
   14003ac6b:	ja     0x14003ac9e
   14003ac6d:	lea    rax,[rcx+0xf]
   14003ac71:	cmp    rax,rcx
   14003ac74:	ja     0x14003ac80
   14003ac76:	movabs rax,0xffffffffffffff0
   14003ac80:	and    rax,0xfffffffffffffff0
   14003ac84:	call   0x14003c600
   14003ac89:	sub    rsp,rax
   14003ac8c:	lea    rdi,[rsp+0x30]
   14003ac91:	cmp    rdi,rbx
   14003ac94:	je     0x14003ad15
   14003ac96:	mov    DWORD PTR [rdi],0xcccc
   14003ac9c:	jmp    0x14003acb1
   14003ac9e:	call   0x14002c04c
   14003aca3:	mov    rdi,rax
   14003aca6:	cmp    rax,rbx
   14003aca9:	je     0x14003acba
   14003acab:	mov    DWORD PTR [rax],0xdddd
   14003acb1:	add    rdi,0x10
   14003acb5:	jmp    0x14003acba
   14003acb7:	mov    rdi,rbx
   14003acba:	cmp    rdi,rbx
   14003acbd:	je     0x14003ad15
   14003acbf:	mov    r9d,DWORD PTR [rbp+0xb0]
   14003acc6:	mov    r8,QWORD PTR [rbp+0x8]
   14003acca:	mov    edx,0x1
   14003accf:	mov    ecx,r13d
   14003acd2:	mov    DWORD PTR [rsp+0x28],r12d
   14003acd7:	mov    QWORD PTR [rsp+0x20],rdi
   14003acdc:	call   QWORD PTR [rip+0x23ce]        # 0x14003d0b0
   14003ace2:	cmp    eax,ebx
   14003ace4:	je     0x14003ad04
   14003ace6:	mov    edx,DWORD PTR [rbp+0x4]
   14003ace9:	mov    ecx,DWORD PTR [rbp+0x0]
   14003acec:	mov    r9d,r14d
   14003acef:	mov    r8,rsi
   14003acf2:	mov    DWORD PTR [rsp+0x28],r12d
   14003acf7:	mov    QWORD PTR [rsp+0x20],rdi
   14003acfc:	call   QWORD PTR [rip+0x25b6]        # 0x14003d2b8
   14003ad02:	mov    ebx,eax
   14003ad04:	lea    rcx,[rdi-0x10]
   14003ad08:	cmp    DWORD PTR [rcx],0xdddd
   14003ad0e:	jne    0x14003ad15
   14003ad10:	call   0x14002b36c
   14003ad15:	lea    rcx,[rsi-0x10]
   14003ad19:	cmp    DWORD PTR [rcx],0xdddd
   14003ad1f:	jne    0x14003ad26
   14003ad21:	call   0x14002b36c
   14003ad26:	mov    eax,ebx
   14003ad28:	jmp    0x14003ae15
   14003ad2d:	mov    rdi,rbx
   14003ad30:	mov    r13,rbx
   14003ad33:	cmp    r10d,ebx
   14003ad36:	jne    0x14003ad43
   14003ad38:	mov    rax,QWORD PTR [r14]
   14003ad3b:	mov    r10d,DWORD PTR [rax+0x14]
   14003ad3f:	mov    DWORD PTR [rbp+0x0],r10d
   14003ad43:	mov    r12d,DWORD PTR [rbp+0xb8]
   14003ad4a:	cmp    r12d,ebx
   14003ad4d:	jne    0x14003ad56
   14003ad4f:	mov    rax,QWORD PTR [r14]
   14003ad52:	mov    r12d,DWORD PTR [rax+0x4]
   14003ad56:	mov    ecx,r10d
   14003ad59:	call   0x1400385d8
   14003ad5e:	mov    r14d,eax
   14003ad61:	cmp    eax,esi
   14003ad63:	je     0x14003aa69
   14003ad69:	cmp    eax,r12d
   14003ad6c:	je     0x14003add3
   14003ad6e:	lea    r9,[rbp+0xa0]
   14003ad75:	mov    r8,r15
   14003ad78:	mov    edx,eax
   14003ad7a:	mov    ecx,r12d
   14003ad7d:	mov    DWORD PTR [rsp+0x28],ebx
   14003ad81:	mov    QWORD PTR [rsp+0x20],rbx
   14003ad86:	call   0x14003862c
   14003ad8b:	mov    rdi,rax
   14003ad8e:	cmp    rax,rbx
   14003ad91:	je     0x14003aa69
   14003ad97:	mov    r8,QWORD PTR [rbp+0x8]
   14003ad9b:	lea    r9,[rbp+0xb0]
   14003ada2:	mov    edx,r14d
   14003ada5:	mov    ecx,r12d
   14003ada8:	mov    DWORD PTR [rsp+0x28],ebx
   14003adac:	mov    QWORD PTR [rsp+0x20],rbx
   14003adb1:	call   0x14003862c
   14003adb6:	mov    r13,rax
   14003adb9:	cmp    rax,rbx
   14003adbc:	jne    0x14003adcb
   14003adbe:	mov    rcx,rdi
   14003adc1:	call   0x14002b36c
   14003adc6:	jmp    0x14003aa69
   14003adcb:	mov    r15,rdi
   14003adce:	mov    r8,rax
   14003add1:	jmp    0x14003add7
   14003add3:	mov    r8,QWORD PTR [rbp+0x8]
   14003add7:	mov    eax,DWORD PTR [rbp+0xb0]
   14003addd:	mov    r9d,DWORD PTR [rbp+0xa0]
   14003ade4:	mov    edx,DWORD PTR [rbp+0x4]
   14003ade7:	mov    ecx,DWORD PTR [rbp+0x0]
   14003adea:	mov    DWORD PTR [rsp+0x28],eax
   14003adee:	mov    QWORD PTR [rsp+0x20],r8
   14003adf3:	mov    r8,r15
   14003adf6:	call   QWORD PTR [rip+0x24cc]        # 0x14003d2c8
   14003adfc:	mov    esi,eax
   14003adfe:	cmp    rdi,rbx
   14003ae01:	je     0x14003ae13
   14003ae03:	mov    rcx,rdi
   14003ae06:	call   0x14002b36c
   14003ae0b:	mov    rcx,r13
   14003ae0e:	call   0x14002b36c
   14003ae13:	mov    eax,esi
   14003ae15:	mov    rcx,QWORD PTR [rbp+0x28]
   14003ae19:	xor    rcx,rbp
   14003ae1c:	call   0x14002b250
   14003ae21:	lea    rsp,[rbp+0x38]
   14003ae25:	pop    r15
   14003ae27:	pop    r14
   14003ae29:	pop    r13
   14003ae2b:	pop    r12
   14003ae2d:	pop    rdi
   14003ae2e:	pop    rsi
   14003ae2f:	pop    rbx
   14003ae30:	pop    rbp
   14003ae31:	ret    
   14003ae32:	int3   
   14003ae33:	int3   
   14003ae34:	mov    QWORD PTR [rsp+0x8],rbx
   14003ae39:	mov    QWORD PTR [rsp+0x10],rsi
   14003ae3e:	push   rdi
   14003ae3f:	sub    rsp,0x60
   14003ae43:	mov    esi,edx
   14003ae45:	mov    rdx,rcx
   14003ae48:	lea    rcx,[rsp+0x40]
   14003ae4d:	mov    rbx,r9
   14003ae50:	mov    edi,r8d
   14003ae53:	call   0x14002b47c
   14003ae58:	mov    r11d,DWORD PTR [rsp+0xa8]
   14003ae60:	mov    eax,DWORD PTR [rsp+0xa0]
   14003ae67:	lea    rcx,[rsp+0x40]
   14003ae6c:	mov    DWORD PTR [rsp+0x38],r11d
   14003ae71:	mov    DWORD PTR [rsp+0x30],eax
   14003ae75:	mov    rax,QWORD PTR [rsp+0x98]
   14003ae7d:	mov    QWORD PTR [rsp+0x28],rax
   14003ae82:	mov    eax,DWORD PTR [rsp+0x90]
   14003ae89:	mov    r9,rbx
   14003ae8c:	mov    r8d,edi
   14003ae8f:	mov    edx,esi
   14003ae91:	mov    DWORD PTR [rsp+0x20],eax
   14003ae95:	call   0x14003a958
   14003ae9a:	cmp    BYTE PTR [rsp+0x58],0x0
   14003ae9f:	je     0x14003aead
   14003aea1:	mov    rcx,QWORD PTR [rsp+0x50]
   14003aea6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003aead:	mov    rbx,QWORD PTR [rsp+0x70]
   14003aeb2:	mov    rsi,QWORD PTR [rsp+0x78]
   14003aeb7:	add    rsp,0x60
   14003aebb:	pop    rdi
   14003aebc:	ret    
   14003aebd:	int3   
   14003aebe:	int3   
   14003aebf:	int3   
   14003aec0:	mov    QWORD PTR [rsp+0x8],rbx
   14003aec5:	mov    QWORD PTR [rsp+0x10],rsi
   14003aeca:	push   rdi
   14003aecb:	sub    rsp,0x60
   14003aecf:	mov    rsi,rcx
   14003aed2:	mov    rdi,rdx
   14003aed5:	lea    rcx,[rsp+0x40]
   14003aeda:	mov    rdx,r9
   14003aedd:	mov    rbx,r8
   14003aee0:	call   0x14002b47c
   14003aee5:	test   rbx,rbx
   14003aee8:	jne    0x14003af03
   14003aeea:	cmp    BYTE PTR [rsp+0x58],bl
   14003aeee:	je     0x14003aefc
   14003aef0:	mov    rax,QWORD PTR [rsp+0x50]
   14003aef5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003aefc:	xor    eax,eax
   14003aefe:	jmp    0x14003afc5
   14003af03:	test   rsi,rsi
   14003af06:	jne    0x14003af45
   14003af08:	call   0x14002b3f4
   14003af0d:	and    QWORD PTR [rsp+0x20],0x0
   14003af13:	xor    r9d,r9d
   14003af16:	xor    r8d,r8d
   14003af19:	xor    edx,edx
   14003af1b:	xor    ecx,ecx
   14003af1d:	mov    DWORD PTR [rax],0x16
   14003af23:	call   0x140031aac
   14003af28:	cmp    BYTE PTR [rsp+0x58],0x0
   14003af2d:	je     0x14003af3b
   14003af2f:	mov    rax,QWORD PTR [rsp+0x50]
   14003af34:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003af3b:	mov    eax,0x7fffffff
   14003af40:	jmp    0x14003afc5
   14003af45:	test   rdi,rdi
   14003af48:	je     0x14003af08
   14003af4a:	cmp    rbx,0x7fffffff
   14003af51:	ja     0x14003af08
   14003af53:	mov    rax,QWORD PTR [rsp+0x40]
   14003af58:	mov    edx,DWORD PTR [rax+0x10]
   14003af5b:	test   edx,edx
   14003af5d:	jne    0x14003af74
   14003af5f:	lea    r9,[rsp+0x40]
   14003af64:	mov    r8,rbx
   14003af67:	mov    rdx,rdi
   14003af6a:	mov    rcx,rsi
   14003af6d:	call   0x14003b4e4
   14003af72:	jmp    0x14003afb2
   14003af74:	mov    eax,DWORD PTR [rax+0x8]
   14003af77:	lea    rcx,[rsp+0x40]
   14003af7c:	mov    r9,rsi
   14003af7f:	mov    DWORD PTR [rsp+0x38],eax
   14003af83:	mov    DWORD PTR [rsp+0x30],ebx
   14003af87:	mov    r8d,0x1001
   14003af8d:	mov    QWORD PTR [rsp+0x28],rdi
   14003af92:	mov    DWORD PTR [rsp+0x20],ebx
   14003af96:	call   0x14003ae34
   14003af9b:	test   eax,eax
   14003af9d:	jne    0x14003afaf
   14003af9f:	call   0x14002b3f4
   14003afa4:	mov    DWORD PTR [rax],0x16
   14003afaa:	jmp    0x14003af28
   14003afaf:	add    eax,0xfffffffe
   14003afb2:	cmp    BYTE PTR [rsp+0x58],0x0
   14003afb7:	je     0x14003afc5
   14003afb9:	mov    rcx,QWORD PTR [rsp+0x50]
   14003afbe:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003afc5:	mov    rbx,QWORD PTR [rsp+0x70]
   14003afca:	mov    rsi,QWORD PTR [rsp+0x78]
   14003afcf:	add    rsp,0x60
   14003afd3:	pop    rdi
   14003afd4:	ret    
   14003afd5:	int3   
   14003afd6:	int3   
   14003afd7:	int3   
   14003afd8:	mov    QWORD PTR [rsp+0x18],rbx
   14003afdd:	mov    DWORD PTR [rsp+0x10],edx
   14003afe1:	push   rbp
   14003afe2:	push   rsi
   14003afe3:	push   rdi
   14003afe4:	push   r12
   14003afe6:	push   r13
   14003afe8:	push   r14
   14003afea:	push   r15
   14003afec:	sub    rsp,0x30
   14003aff0:	xor    r13d,r13d
   14003aff3:	mov    ebp,edx
   14003aff5:	mov    r14,rcx
   14003aff8:	mov    ebx,r13d
   14003affb:	cmp    rcx,r13
   14003affe:	jne    0x14003b024
   14003b000:	call   0x14002b3f4
   14003b005:	xor    r9d,r9d
   14003b008:	xor    r8d,r8d
   14003b00b:	xor    edx,edx
   14003b00d:	xor    ecx,ecx
   14003b00f:	mov    QWORD PTR [rsp+0x20],r13
   14003b014:	mov    DWORD PTR [rax],0x16
   14003b01a:	call   0x140031aac
   14003b01f:	jmp    0x14003b10e
   14003b024:	mov    r12,QWORD PTR [rcx]
   14003b027:	cmp    r12,r13
   14003b02a:	je     0x14003b103
   14003b030:	mov    edx,0x3d
   14003b035:	mov    rcx,r12
   14003b038:	call   0x14003b910
   14003b03d:	mov    rdi,rax
   14003b040:	mov    QWORD PTR [rsp+0x70],rax
   14003b045:	cmp    rax,r13
   14003b048:	je     0x14003b103
   14003b04e:	cmp    r12,rax
   14003b051:	je     0x14003b103
   14003b057:	cmp    BYTE PTR [rax+0x1],r13b
   14003b05b:	mov    rsi,QWORD PTR [rip+0x2ef3e]        # 0x140069fa0
   14003b062:	mov    r15d,r13d
   14003b065:	sete   r15b
   14003b069:	cmp    rsi,QWORD PTR [rip+0x2ef38]        # 0x140069fa8
   14003b070:	jne    0x14003b0e2
   14003b072:	mov    rbp,rsi
   14003b075:	mov    eax,r13d
   14003b078:	cmp    rsi,r13
   14003b07b:	jne    0x14003b088
   14003b07d:	mov    rsi,r13
   14003b080:	jmp    0x14003b0d7
   14003b082:	add    rsi,0x8
   14003b086:	inc    eax
   14003b088:	cmp    QWORD PTR [rsi],r13
   14003b08b:	jne    0x14003b082
   14003b08d:	inc    eax
   14003b08f:	mov    edx,0x8
   14003b094:	movsxd rcx,eax
   14003b097:	call   0x140030134
   14003b09c:	mov    rdi,rax
   14003b09f:	mov    rsi,rax
   14003b0a2:	cmp    rax,r13
   14003b0a5:	jne    0x14003b0c6
   14003b0a7:	mov    ecx,0x9
   14003b0ac:	call   0x140030378
   14003b0b1:	jmp    0x14003b0c6
   14003b0b3:	mov    rcx,rax
   14003b0b6:	call   0x14002dfb8
   14003b0bb:	mov    QWORD PTR [rdi],rax
   14003b0be:	add    rdi,0x8
   14003b0c2:	add    rbp,0x8
   14003b0c6:	mov    rax,QWORD PTR [rbp+0x0]
   14003b0ca:	cmp    rax,r13
   14003b0cd:	jne    0x14003b0b3
   14003b0cf:	mov    QWORD PTR [rdi],r13
   14003b0d2:	mov    rdi,QWORD PTR [rsp+0x70]
   14003b0d7:	mov    ebp,DWORD PTR [rsp+0x78]
   14003b0db:	mov    QWORD PTR [rip+0x2eebe],rsi        # 0x140069fa0
   14003b0e2:	cmp    rsi,r13
   14003b0e5:	jne    0x14003b174
   14003b0eb:	cmp    ebp,r13d
   14003b0ee:	je     0x14003b129
   14003b0f0:	cmp    QWORD PTR [rip+0x2eeb9],r13        # 0x140069fb0
   14003b0f7:	je     0x14003b129
   14003b0f9:	call   0x140036250
   14003b0fe:	cmp    eax,r13d
   14003b101:	je     0x14003b16d
   14003b103:	call   0x14002b3f4
   14003b108:	mov    DWORD PTR [rax],0x16
   14003b10e:	or     eax,0xffffffff
   14003b111:	mov    rbx,QWORD PTR [rsp+0x80]
   14003b119:	add    rsp,0x30
   14003b11d:	pop    r15
   14003b11f:	pop    r14
   14003b121:	pop    r13
   14003b123:	pop    r12
   14003b125:	pop    rdi
   14003b126:	pop    rsi
   14003b127:	pop    rbp
   14003b128:	ret    
   14003b129:	cmp    r15d,r13d
   14003b12c:	je     0x14003b132
   14003b12e:	xor    eax,eax
   14003b130:	jmp    0x14003b111
   14003b132:	mov    ecx,0x8
   14003b137:	call   0x1400300c8
   14003b13c:	mov    QWORD PTR [rip+0x2ee5d],rax        # 0x140069fa0
   14003b143:	cmp    rax,r13
   14003b146:	je     0x14003b10e
   14003b148:	mov    QWORD PTR [rax],r13
   14003b14b:	cmp    QWORD PTR [rip+0x2ee5e],r13        # 0x140069fb0
   14003b152:	jne    0x14003b16d
   14003b154:	mov    ecx,0x8
   14003b159:	call   0x1400300c8
   14003b15e:	mov    QWORD PTR [rip+0x2ee4b],rax        # 0x140069fb0
   14003b165:	cmp    rax,r13
   14003b168:	je     0x14003b10e
   14003b16a:	mov    QWORD PTR [rax],r13
   14003b16d:	mov    rsi,QWORD PTR [rip+0x2ee2c]        # 0x140069fa0
   14003b174:	mov    rbp,rsi
   14003b177:	cmp    rsi,r13
   14003b17a:	je     0x14003b10e
   14003b17c:	mov    rcx,QWORD PTR [rsi]
   14003b17f:	mov    eax,edi
   14003b181:	mov    rdi,rsi
   14003b184:	sub    eax,r12d
   14003b187:	movsxd r13,eax
   14003b18a:	test   rcx,rcx
   14003b18d:	je     0x14003b1ce
   14003b18f:	mov    rdx,rcx
   14003b192:	mov    r8,r13
   14003b195:	mov    rcx,r12
   14003b198:	call   0x140036248
   14003b19d:	test   eax,eax
   14003b19f:	jne    0x14003b1bb
   14003b1a1:	mov    rax,QWORD PTR [rdi]
   14003b1a4:	cmp    BYTE PTR [r13+rax*1+0x0],0x3d
   14003b1aa:	je     0x14003b252
   14003b1b0:	cmp    BYTE PTR [r13+rax*1+0x0],bl
   14003b1b5:	je     0x14003b252
   14003b1bb:	add    rdi,0x8
   14003b1bf:	mov    rcx,QWORD PTR [rdi]
   14003b1c2:	test   rcx,rcx
   14003b1c5:	jne    0x14003b18f
   14003b1c7:	mov    rsi,QWORD PTR [rip+0x2edd2]        # 0x140069fa0
   14003b1ce:	sub    rdi,rsi
   14003b1d1:	sar    rdi,0x3
   14003b1d5:	neg    edi
   14003b1d7:	xor    r13d,r13d
   14003b1da:	cmp    edi,r13d
   14003b1dd:	jl     0x14003b26f
   14003b1e3:	cmp    QWORD PTR [rbp+0x0],r13
   14003b1e7:	je     0x14003b26f
   14003b1ed:	movsxd rsi,edi
   14003b1f0:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   14003b1f5:	call   0x14002b36c
   14003b1fa:	cmp    r15d,r13d
   14003b1fd:	je     0x14003b265
   14003b1ff:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   14003b204:	je     0x14003b223
   14003b206:	lea    rcx,[rbp+rsi*8+0x8]
   14003b20b:	mov    rax,QWORD PTR [rcx]
   14003b20e:	inc    edi
   14003b210:	add    rcx,0x8
   14003b214:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   14003b219:	inc    rsi
   14003b21c:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   14003b221:	jne    0x14003b20b
   14003b223:	movsxd rdx,edi
   14003b226:	movabs rax,0x1fffffffffffffff
   14003b230:	cmp    rdx,rax
   14003b233:	jae    0x14003b2cc
   14003b239:	mov    rcx,QWORD PTR [rip+0x2ed60]        # 0x140069fa0
   14003b240:	mov    r8d,0x8
   14003b246:	call   0x140030240
   14003b24b:	cmp    rax,r13
   14003b24e:	je     0x14003b2cc
   14003b250:	jmp    0x14003b2c5
   14003b252:	mov    rsi,QWORD PTR [rip+0x2ed47]        # 0x140069fa0
   14003b259:	sub    rdi,rsi
   14003b25c:	sar    rdi,0x3
   14003b260:	jmp    0x14003b1d7
   14003b265:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   14003b26a:	mov    QWORD PTR [r14],r13
   14003b26d:	jmp    0x14003b2cc
   14003b26f:	cmp    r15d,r13d
   14003b272:	jne    0x14003b378
   14003b278:	cmp    edi,r13d
   14003b27b:	jge    0x14003b27f
   14003b27d:	neg    edi
   14003b27f:	lea    eax,[rdi+0x2]
   14003b282:	cmp    eax,edi
   14003b284:	jl     0x14003b10e
   14003b28a:	movsxd r8,eax
   14003b28d:	movabs rax,0x1fffffffffffffff
   14003b297:	cmp    r8,rax
   14003b29a:	jae    0x14003b10e
   14003b2a0:	mov    edx,0x8
   14003b2a5:	mov    rcx,rsi
   14003b2a8:	call   0x140030240
   14003b2ad:	cmp    rax,r13
   14003b2b0:	je     0x14003b10e
   14003b2b6:	movsxd rcx,edi
   14003b2b9:	mov    QWORD PTR [rax+rcx*8],r12
   14003b2bd:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   14003b2c2:	mov    QWORD PTR [r14],r13
   14003b2c5:	mov    QWORD PTR [rip+0x2ecd4],rax        # 0x140069fa0
   14003b2cc:	cmp    DWORD PTR [rsp+0x78],r13d
   14003b2d1:	je     0x14003b361
   14003b2d7:	mov    rcx,r12
   14003b2da:	call   0x140035dd0
   14003b2df:	mov    edx,0x1
   14003b2e4:	lea    rcx,[rax+0x2]
   14003b2e8:	call   0x140030134
   14003b2ed:	mov    rdi,rax
   14003b2f0:	cmp    rax,r13
   14003b2f3:	je     0x14003b361
   14003b2f5:	mov    rcx,r12
   14003b2f8:	call   0x140035dd0
   14003b2fd:	mov    r8,r12
   14003b300:	mov    rcx,rdi
   14003b303:	lea    rdx,[rax+0x2]
   14003b307:	call   0x14003445c
   14003b30c:	cmp    eax,r13d
   14003b30f:	je     0x14003b325
   14003b311:	xor    r9d,r9d
   14003b314:	xor    r8d,r8d
   14003b317:	xor    edx,edx
   14003b319:	xor    ecx,ecx
   14003b31b:	mov    QWORD PTR [rsp+0x20],r13
   14003b320:	call   0x140031984
   14003b325:	mov    rdx,rdi
   14003b328:	mov    rcx,rdi
   14003b32b:	sub    rdx,r12
   14003b32e:	add    rdx,QWORD PTR [rsp+0x70]
   14003b333:	mov    BYTE PTR [rdx],r13b
   14003b336:	inc    rdx
   14003b339:	cmp    r15d,r13d
   14003b33c:	cmovne rdx,r13
   14003b340:	call   QWORD PTR [rip+0x1f7a]        # 0x14003d2c0
   14003b346:	cmp    eax,r13d
   14003b349:	jne    0x14003b359
   14003b34b:	or     ebx,0xffffffff
   14003b34e:	call   0x14002b3f4
   14003b353:	mov    DWORD PTR [rax],0x2a
   14003b359:	mov    rcx,rdi
   14003b35c:	call   0x14002b36c
   14003b361:	cmp    r15d,r13d
   14003b364:	je     0x14003b371
   14003b366:	mov    rcx,r12
   14003b369:	call   0x14002b36c
   14003b36e:	mov    QWORD PTR [r14],r13
   14003b371:	mov    eax,ebx
   14003b373:	jmp    0x14003b111
   14003b378:	mov    rcx,r12
   14003b37b:	call   0x14002b36c
   14003b380:	mov    QWORD PTR [r14],r13
   14003b383:	jmp    0x14003b12e
   14003b388:	rex push rbx
   14003b38a:	sub    rsp,0x20
   14003b38e:	inc    DWORD PTR [rip+0x2e8d0]        # 0x140069c64
   14003b394:	mov    rbx,rcx
   14003b397:	mov    ecx,0x1000
   14003b39c:	call   0x1400300c8
   14003b3a1:	mov    QWORD PTR [rbx+0x10],rax
   14003b3a5:	test   rax,rax
   14003b3a8:	je     0x14003b3b7
   14003b3aa:	or     DWORD PTR [rbx+0x18],0x8
   14003b3ae:	mov    DWORD PTR [rbx+0x24],0x1000
   14003b3b5:	jmp    0x14003b3ca
   14003b3b7:	or     DWORD PTR [rbx+0x18],0x4
   14003b3bb:	lea    rax,[rbx+0x20]
   14003b3bf:	mov    DWORD PTR [rbx+0x24],0x2
   14003b3c6:	mov    QWORD PTR [rbx+0x10],rax
   14003b3ca:	mov    rax,QWORD PTR [rbx+0x10]
   14003b3ce:	and    DWORD PTR [rbx+0x8],0x0
   14003b3d2:	mov    QWORD PTR [rbx],rax
   14003b3d5:	add    rsp,0x20
   14003b3d9:	pop    rbx
   14003b3da:	ret    
   14003b3db:	int3   
   14003b3dc:	sub    rsp,0x48
   14003b3e0:	and    QWORD PTR [rsp+0x30],0x0
   14003b3e6:	and    DWORD PTR [rsp+0x28],0x0
   14003b3eb:	mov    r8d,0x3
   14003b3f1:	lea    rcx,[rip+0x15a78]        # 0x140050e70
   14003b3f8:	xor    r9d,r9d
   14003b3fb:	mov    edx,0x40000000
   14003b400:	mov    DWORD PTR [rsp+0x20],r8d
   14003b405:	call   QWORD PTR [rip+0x1cd5]        # 0x14003d0e0
   14003b40b:	mov    QWORD PTR [rip+0x2c7ae],rax        # 0x140067bc0
   14003b412:	add    rsp,0x48
   14003b416:	ret    
   14003b417:	int3   
   14003b418:	sub    rsp,0x28
   14003b41c:	mov    rcx,QWORD PTR [rip+0x2c79d]        # 0x140067bc0
   14003b423:	cmp    rcx,0xffffffffffffffff
   14003b427:	je     0x14003b435
   14003b429:	cmp    rcx,0xfffffffffffffffe
   14003b42d:	je     0x14003b435
   14003b42f:	call   QWORD PTR [rip+0x1c43]        # 0x14003d078
   14003b435:	mov    rcx,QWORD PTR [rip+0x2c77c]        # 0x140067bb8
   14003b43c:	cmp    rcx,0xffffffffffffffff
   14003b440:	je     0x14003b44e
   14003b442:	cmp    rcx,0xfffffffffffffffe
   14003b446:	je     0x14003b44e
   14003b448:	call   QWORD PTR [rip+0x1c2a]        # 0x14003d078
   14003b44e:	add    rsp,0x28
   14003b452:	ret    
   14003b453:	int3   
   14003b454:	sub    rsp,0x38
   14003b458:	test   rcx,rcx
   14003b45b:	jne    0x14003b483
   14003b45d:	call   0x14002b3f4
   14003b462:	and    QWORD PTR [rsp+0x20],0x0
   14003b468:	xor    r9d,r9d
   14003b46b:	xor    r8d,r8d
   14003b46e:	xor    edx,edx
   14003b470:	xor    ecx,ecx
   14003b472:	mov    DWORD PTR [rax],0x16
   14003b478:	call   0x140031aac
   14003b47d:	or     rax,0xffffffffffffffff
   14003b481:	jmp    0x14003b495
   14003b483:	mov    r8,rcx
   14003b486:	mov    rcx,QWORD PTR [rip+0x2f423]        # 0x14006a8b0
   14003b48d:	xor    edx,edx
   14003b48f:	call   QWORD PTR [rip+0x1e3b]        # 0x14003d2d0
   14003b495:	add    rsp,0x38
   14003b499:	ret    
   14003b49a:	int3   
   14003b49b:	int3   
   14003b49c:	mov    r10,rcx
   14003b49f:	test   r8,r8
   14003b4a2:	je     0x14003b4e0
   14003b4a4:	movzx  r9d,BYTE PTR [r10]
   14003b4a8:	inc    r10
   14003b4ab:	lea    eax,[r9-0x41]
   14003b4af:	cmp    eax,0x19
   14003b4b2:	ja     0x14003b4b8
   14003b4b4:	add    r9d,0x20
   14003b4b8:	movzx  ecx,BYTE PTR [rdx]
   14003b4bb:	inc    rdx
   14003b4be:	lea    eax,[rcx-0x41]
   14003b4c1:	cmp    eax,0x19
   14003b4c4:	ja     0x14003b4c9
   14003b4c6:	add    ecx,0x20
   14003b4c9:	sub    r8,0x1
   14003b4cd:	je     0x14003b4d9
   14003b4cf:	test   r9d,r9d
   14003b4d2:	je     0x14003b4d9
   14003b4d4:	cmp    r9d,ecx
   14003b4d7:	je     0x14003b4a4
   14003b4d9:	sub    r9d,ecx
   14003b4dc:	mov    eax,r9d
   14003b4df:	ret    
   14003b4e0:	xor    eax,eax
   14003b4e2:	ret    
   14003b4e3:	int3   
   14003b4e4:	mov    rax,rsp
   14003b4e7:	mov    QWORD PTR [rax+0x8],rbx
   14003b4eb:	mov    QWORD PTR [rax+0x10],rbp
   14003b4ef:	mov    QWORD PTR [rax+0x18],rsi
   14003b4f3:	push   rdi
   14003b4f4:	sub    rsp,0x50
   14003b4f8:	mov    rdi,r8
   14003b4fb:	mov    rsi,rdx
   14003b4fe:	mov    rbp,rcx
   14003b501:	test   r8,r8
   14003b504:	je     0x14003b5de
   14003b50a:	lea    rcx,[rax-0x28]
   14003b50e:	mov    rdx,r9
   14003b511:	call   0x14002b47c
   14003b516:	test   rbp,rbp
   14003b519:	jne    0x14003b558
   14003b51b:	call   0x14002b3f4
   14003b520:	and    QWORD PTR [rsp+0x20],0x0
   14003b526:	xor    r9d,r9d
   14003b529:	xor    r8d,r8d
   14003b52c:	xor    edx,edx
   14003b52e:	xor    ecx,ecx
   14003b530:	mov    DWORD PTR [rax],0x16
   14003b536:	call   0x140031aac
   14003b53b:	cmp    BYTE PTR [rsp+0x48],0x0
   14003b540:	je     0x14003b54e
   14003b542:	mov    rax,QWORD PTR [rsp+0x40]
   14003b547:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b54e:	mov    eax,0x7fffffff
   14003b553:	jmp    0x14003b5e0
   14003b558:	test   rsi,rsi
   14003b55b:	je     0x14003b51b
   14003b55d:	cmp    rdi,0x7fffffff
   14003b564:	ja     0x14003b51b
   14003b566:	mov    rax,QWORD PTR [rsp+0x30]
   14003b56b:	cmp    DWORD PTR [rax+0x14],0x0
   14003b56f:	jne    0x14003b594
   14003b571:	mov    r8,rdi
   14003b574:	mov    rdx,rsi
   14003b577:	mov    rcx,rbp
   14003b57a:	call   0x14003b49c
   14003b57f:	cmp    BYTE PTR [rsp+0x48],0x0
   14003b584:	je     0x14003b5e0
   14003b586:	mov    rcx,QWORD PTR [rsp+0x40]
   14003b58b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003b592:	jmp    0x14003b5e0
   14003b594:	movzx  ecx,BYTE PTR [rbp+0x0]
   14003b598:	lea    rdx,[rsp+0x30]
   14003b59d:	call   0x14002e028
   14003b5a2:	movzx  ecx,BYTE PTR [rsi]
   14003b5a5:	lea    rdx,[rsp+0x30]
   14003b5aa:	mov    ebx,eax
   14003b5ac:	inc    rbp
   14003b5af:	call   0x14002e028
   14003b5b4:	inc    rsi
   14003b5b7:	sub    rdi,0x1
   14003b5bb:	je     0x14003b5c5
   14003b5bd:	test   ebx,ebx
   14003b5bf:	je     0x14003b5c5
   14003b5c1:	cmp    ebx,eax
   14003b5c3:	je     0x14003b594
   14003b5c5:	sub    ebx,eax
   14003b5c7:	cmp    BYTE PTR [rsp+0x48],0x0
   14003b5cc:	je     0x14003b5da
   14003b5ce:	mov    rcx,QWORD PTR [rsp+0x40]
   14003b5d3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003b5da:	mov    eax,ebx
   14003b5dc:	jmp    0x14003b5e0
   14003b5de:	xor    eax,eax
   14003b5e0:	mov    rbx,QWORD PTR [rsp+0x60]
   14003b5e5:	mov    rbp,QWORD PTR [rsp+0x68]
   14003b5ea:	mov    rsi,QWORD PTR [rsp+0x70]
   14003b5ef:	add    rsp,0x50
   14003b5f3:	pop    rdi
   14003b5f4:	ret    
   14003b5f5:	int3   
   14003b5f6:	int3   
   14003b5f7:	int3   
   14003b5f8:	mov    QWORD PTR [rsp+0x8],rbx
   14003b5fd:	mov    QWORD PTR [rsp+0x10],rbp
   14003b602:	push   rsi
   14003b603:	push   rdi
   14003b604:	push   r13
   14003b606:	sub    rsp,0x20
   14003b60a:	mov    rax,QWORD PTR [rip+0x2b29f]        # 0x1400668b0
   14003b611:	xor    rax,rsp
   14003b614:	mov    QWORD PTR [rsp+0x10],rax
   14003b619:	and    DWORD PTR [r8],0x0
   14003b61d:	and    DWORD PTR [r8+0x4],0x0
   14003b622:	and    DWORD PTR [r8+0x8],0x0
   14003b627:	mov    rbx,r8
   14003b62a:	mov    esi,edx
   14003b62c:	mov    rbp,rcx
   14003b62f:	mov    edi,0x404e
   14003b634:	test   edx,edx
   14003b636:	je     0x14003b780
   14003b63c:	mov    r13d,0x1
   14003b642:	mov    rax,QWORD PTR [rbx]
   14003b645:	mov    r11d,DWORD PTR [rbx+0x8]
   14003b649:	lea    rcx,[rsp]
   14003b64d:	mov    QWORD PTR [rcx],rax
   14003b650:	mov    eax,DWORD PTR [rbx+0x8]
   14003b653:	add    r11d,r11d
   14003b656:	mov    DWORD PTR [rcx+0x8],eax
   14003b659:	mov    ecx,DWORD PTR [rbx]
   14003b65b:	mov    eax,DWORD PTR [rbx+0x4]
   14003b65e:	lea    r9d,[rcx+rcx*1]
   14003b662:	mov    edx,ecx
   14003b664:	lea    r10d,[rax+rax*1]
   14003b668:	mov    r8d,eax
   14003b66b:	shr    edx,0x1f
   14003b66e:	mov    eax,r9d
   14003b671:	or     r10d,edx
   14003b674:	shr    r8d,0x1f
   14003b678:	lea    edx,[r9+r9*1]
   14003b67c:	or     r11d,r8d
   14003b67f:	mov    ecx,r10d
   14003b682:	shr    eax,0x1f
   14003b685:	shr    ecx,0x1f
   14003b688:	add    r11d,r11d
   14003b68b:	add    r10d,r10d
   14003b68e:	or     r11d,ecx
   14003b691:	mov    ecx,DWORD PTR [rsp]
   14003b694:	or     r10d,eax
   14003b697:	lea    r8d,[rdx+rcx*1]
   14003b69b:	xor    eax,eax
   14003b69d:	mov    DWORD PTR [rbx],edx
   14003b69f:	mov    DWORD PTR [rbx+0x4],r10d
   14003b6a3:	mov    DWORD PTR [rbx+0x8],r11d
   14003b6a7:	cmp    r8d,edx
   14003b6aa:	jb     0x14003b6b1
   14003b6ac:	cmp    r8d,ecx
   14003b6af:	jae    0x14003b6b4
   14003b6b1:	mov    eax,r13d
   14003b6b4:	mov    DWORD PTR [rbx],r8d
   14003b6b7:	test   eax,eax
   14003b6b9:	je     0x14003b6dc
   14003b6bb:	lea    eax,[r10+0x1]
   14003b6bf:	xor    ecx,ecx
   14003b6c1:	cmp    eax,r10d
   14003b6c4:	jb     0x14003b6cb
   14003b6c6:	cmp    eax,r13d
   14003b6c9:	jae    0x14003b6ce
   14003b6cb:	mov    ecx,r13d
   14003b6ce:	mov    DWORD PTR [rbx+0x4],eax
   14003b6d1:	test   ecx,ecx
   14003b6d3:	je     0x14003b6dc
   14003b6d5:	lea    eax,[r11+0x1]
   14003b6d9:	mov    DWORD PTR [rbx+0x8],eax
   14003b6dc:	mov    eax,DWORD PTR [rbx+0x4]
   14003b6df:	mov    rcx,QWORD PTR [rsp]
   14003b6e3:	xor    edx,edx
   14003b6e5:	shr    rcx,0x20
   14003b6e9:	lea    r9d,[rax+rcx*1]
   14003b6ed:	cmp    r9d,eax
   14003b6f0:	jb     0x14003b6f7
   14003b6f2:	cmp    r9d,ecx
   14003b6f5:	jae    0x14003b6fa
   14003b6f7:	mov    edx,r13d
   14003b6fa:	mov    DWORD PTR [rbx+0x4],r9d
   14003b6fe:	test   edx,edx
   14003b700:	je     0x14003b706
   14003b702:	add    DWORD PTR [rbx+0x8],r13d
   14003b706:	mov    eax,DWORD PTR [rsp+0x8]
   14003b70a:	mov    ecx,r9d
   14003b70d:	add    r9d,r9d
   14003b710:	add    DWORD PTR [rbx+0x8],eax
   14003b713:	mov    edx,DWORD PTR [rbx+0x8]
   14003b716:	shr    ecx,0x1f
   14003b719:	mov    eax,r8d
   14003b71c:	add    r8d,r8d
   14003b71f:	add    edx,edx
   14003b721:	shr    eax,0x1f
   14003b724:	or     edx,ecx
   14003b726:	mov    DWORD PTR [rbx],r8d
   14003b729:	or     r9d,eax
   14003b72c:	mov    DWORD PTR [rbx+0x8],edx
   14003b72f:	xor    r10d,r10d
   14003b732:	mov    DWORD PTR [rbx+0x4],r9d
   14003b736:	movsx  ecx,BYTE PTR [rbp+0x0]
   14003b73a:	lea    eax,[r8+rcx*1]
   14003b73e:	mov    DWORD PTR [rsp],ecx
   14003b741:	cmp    eax,r8d
   14003b744:	jb     0x14003b74a
   14003b746:	cmp    eax,ecx
   14003b748:	jae    0x14003b74d
   14003b74a:	mov    r10d,r13d
   14003b74d:	mov    DWORD PTR [rbx],eax
   14003b74f:	test   r10d,r10d
   14003b752:	je     0x14003b774
   14003b754:	lea    eax,[r9+0x1]
   14003b758:	xor    ecx,ecx
   14003b75a:	cmp    eax,r9d
   14003b75d:	jb     0x14003b764
   14003b75f:	cmp    eax,r13d
   14003b762:	jae    0x14003b767
   14003b764:	mov    ecx,r13d
   14003b767:	mov    DWORD PTR [rbx+0x4],eax
   14003b76a:	test   ecx,ecx
   14003b76c:	je     0x14003b774
   14003b76e:	lea    eax,[rdx+0x1]
   14003b771:	mov    DWORD PTR [rbx+0x8],eax
   14003b774:	add    rbp,r13
   14003b777:	add    esi,0xffffffff
   14003b77a:	jne    0x14003b642
   14003b780:	cmp    DWORD PTR [rbx+0x8],0x0
   14003b784:	jne    0x14003b7b5
   14003b786:	mov    ecx,DWORD PTR [rbx]
   14003b788:	mov    edx,DWORD PTR [rbx+0x4]
   14003b78b:	mov    r8d,edx
   14003b78e:	mov    eax,ecx
   14003b790:	shl    edx,0x10
   14003b793:	shr    eax,0x10
   14003b796:	shr    r8d,0x10
   14003b79a:	shl    ecx,0x10
   14003b79d:	or     edx,eax
   14003b79f:	mov    eax,0xfff0
   14003b7a4:	mov    DWORD PTR [rbx+0x8],r8d
   14003b7a8:	add    di,ax
   14003b7ab:	mov    DWORD PTR [rbx+0x4],edx
   14003b7ae:	mov    DWORD PTR [rbx],ecx
   14003b7b0:	test   r8d,r8d
   14003b7b3:	je     0x14003b786
   14003b7b5:	bt     DWORD PTR [rbx+0x8],0xf
   14003b7ba:	jb     0x14003b7f2
   14003b7bc:	mov    ecx,DWORD PTR [rbx+0x4]
   14003b7bf:	mov    eax,DWORD PTR [rbx]
   14003b7c1:	mov    edx,eax
   14003b7c3:	add    eax,eax
   14003b7c5:	mov    r8d,ecx
   14003b7c8:	mov    DWORD PTR [rbx],eax
   14003b7ca:	lea    eax,[rcx+rcx*1]
   14003b7cd:	shr    edx,0x1f
   14003b7d0:	or     eax,edx
   14003b7d2:	shr    r8d,0x1f
   14003b7d6:	mov    ecx,0xffff
   14003b7db:	mov    DWORD PTR [rbx+0x4],eax
   14003b7de:	mov    eax,DWORD PTR [rbx+0x8]
   14003b7e1:	add    di,cx
   14003b7e4:	add    eax,eax
   14003b7e6:	or     eax,r8d
   14003b7e9:	bt     eax,0xf
   14003b7ed:	mov    DWORD PTR [rbx+0x8],eax
   14003b7f0:	jae    0x14003b7bc
   14003b7f2:	mov    WORD PTR [rbx+0xa],di
   14003b7f6:	mov    rcx,QWORD PTR [rsp+0x10]
   14003b7fb:	xor    rcx,rsp
   14003b7fe:	call   0x14002b250
   14003b803:	mov    rbx,QWORD PTR [rsp+0x40]
   14003b808:	mov    rbp,QWORD PTR [rsp+0x48]
   14003b80d:	add    rsp,0x20
   14003b811:	pop    r13
   14003b813:	pop    rdi
   14003b814:	pop    rsi
   14003b815:	ret    
   14003b816:	int3   
   14003b817:	int3   
   14003b818:	mov    QWORD PTR [rsp+0x8],rbx
   14003b81d:	mov    QWORD PTR [rsp+0x10],rsi
   14003b822:	push   rdi
   14003b823:	sub    rsp,0x50
   14003b827:	mov    rbx,rcx
   14003b82a:	mov    edi,edx
   14003b82c:	lea    rcx,[rsp+0x30]
   14003b831:	mov    rdx,r8
   14003b834:	call   0x14002b47c
   14003b839:	xor    esi,esi
   14003b83b:	cmp    rbx,rsi
   14003b83e:	jne    0x14003b884
   14003b840:	call   0x14002b3f4
   14003b845:	xor    r9d,r9d
   14003b848:	xor    r8d,r8d
   14003b84b:	xor    edx,edx
   14003b84d:	xor    ecx,ecx
   14003b84f:	mov    QWORD PTR [rsp+0x20],rsi
   14003b854:	mov    DWORD PTR [rax],0x16
   14003b85a:	call   0x140031aac
   14003b85f:	cmp    BYTE PTR [rsp+0x48],sil
   14003b864:	je     0x14003b872
   14003b866:	mov    rax,QWORD PTR [rsp+0x40]
   14003b86b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b872:	xor    eax,eax
   14003b874:	mov    rbx,QWORD PTR [rsp+0x60]
   14003b879:	mov    rsi,QWORD PTR [rsp+0x68]
   14003b87e:	add    rsp,0x50
   14003b882:	pop    rdi
   14003b883:	ret    
   14003b884:	mov    rdx,QWORD PTR [rsp+0x38]
   14003b889:	cmp    DWORD PTR [rdx+0x8],esi
   14003b88c:	jne    0x14003b8ad
   14003b88e:	mov    edx,edi
   14003b890:	mov    rcx,rbx
   14003b893:	call   0x14002e1c0
   14003b898:	cmp    BYTE PTR [rsp+0x48],sil
   14003b89d:	je     0x14003b874
   14003b89f:	mov    rcx,QWORD PTR [rsp+0x40]
   14003b8a4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14003b8ab:	jmp    0x14003b874
   14003b8ad:	movzx  ecx,BYTE PTR [rbx]
   14003b8b0:	cmp    cx,si
   14003b8b3:	je     0x14003b8e8
   14003b8b5:	movzx  eax,cl
   14003b8b8:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   14003b8bd:	je     0x14003b8dc
   14003b8bf:	inc    rbx
   14003b8c2:	cmp    BYTE PTR [rbx],sil
   14003b8c5:	je     0x14003b85f
   14003b8c7:	movzx  eax,BYTE PTR [rbx]
   14003b8ca:	movzx  ecx,cx
   14003b8cd:	shl    ecx,0x8
   14003b8d0:	or     ecx,eax
   14003b8d2:	cmp    edi,ecx
   14003b8d4:	jne    0x14003b8e3
   14003b8d6:	lea    rax,[rbx-0x1]
   14003b8da:	jmp    0x14003b898
   14003b8dc:	movzx  eax,cx
   14003b8df:	cmp    edi,eax
   14003b8e1:	je     0x14003b8e8
   14003b8e3:	inc    rbx
   14003b8e6:	jmp    0x14003b8ad
   14003b8e8:	movzx  eax,cx
   14003b8eb:	cmp    edi,eax
   14003b8ed:	jne    0x14003b85f
   14003b8f3:	cmp    BYTE PTR [rsp+0x48],sil
   14003b8f8:	je     0x14003b906
   14003b8fa:	mov    rax,QWORD PTR [rsp+0x40]
   14003b8ff:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14003b906:	mov    rax,rbx
   14003b909:	jmp    0x14003b874
   14003b90e:	int3   
   14003b90f:	int3   
   14003b910:	xor    r8d,r8d
   14003b913:	jmp    0x14003b818
   14003b918:	jmp    QWORD PTR [rip+0x1852]        # 0x14003d170
   14003b91e:	jmp    QWORD PTR [rip+0x188c]        # 0x14003d1b0
   14003b924:	jmp    QWORD PTR [rip+0x188e]        # 0x14003d1b8
   14003b92a:	jmp    QWORD PTR [rip+0x1a90]        # 0x14003d3c0
   14003b930:	jmp    QWORD PTR [rip+0x1a7a]        # 0x14003d3b0
   14003b936:	jmp    QWORD PTR [rip+0x1a6c]        # 0x14003d3a8
   14003b93c:	int3   
   14003b93d:	int3   
   14003b93e:	int3   
   14003b93f:	int3   
   14003b940:	sub    rsp,0x838
   14003b947:	mov    rax,QWORD PTR [rip+0x2af62]        # 0x1400668b0
   14003b94e:	xor    rax,rsp
   14003b951:	mov    QWORD PTR [rsp+0x820],rax
   14003b959:	cmp    DWORD PTR [rip+0x2c538],0xffffffff        # 0x140067e98
   14003b960:	jne    0x14003ba1f
   14003b966:	cmp    DWORD PTR [rip+0x2c52f],0x0        # 0x140067e9c
   14003b96d:	je     0x14003ba1f
   14003b973:	lea    rdx,[rsp+0x20]
   14003b978:	mov    ecx,0x800
   14003b97d:	call   0x1400093b0
   14003b982:	test   eax,eax
   14003b984:	je     0x14003ba1f
   14003b98a:	cmp    eax,0x800
   14003b98f:	ja     0x14003ba1f
   14003b995:	lea    rdx,[rip+0x1552c]        # 0x140050ec8
   14003b99c:	lea    rcx,[rsp+0x20]
   14003b9a1:	mov    r8d,0x800
   14003b9a7:	call   0x140002910
   14003b9ac:	lea    rcx,[rsp+0x20]
   14003b9b1:	mov    edx,0x109
   14003b9b6:	mov    r8d,0x1a4
   14003b9bc:	call   0x140008fa0
   14003b9c1:	mov    DWORD PTR [rip+0x2c4d1],eax        # 0x140067e98
   14003b9c7:	cmp    eax,0xffffffff
   14003b9ca:	jne    0x14003ba1f
   14003b9cc:	mov    QWORD PTR [rsp+0x830],rbx
   14003b9d4:	call   QWORD PTR [rip+0x195e]        # 0x14003d338
   14003b9da:	lea    rcx,[rip+0x154d7]        # 0x140050eb8
   14003b9e1:	mov    edx,0x109
   14003b9e6:	mov    r8d,0x1a4
   14003b9ec:	mov    ebx,eax
   14003b9ee:	call   0x140008fa0
   14003b9f3:	mov    DWORD PTR [rip+0x2c49f],eax        # 0x140067e98
   14003b9f9:	cmp    eax,0xffffffff
   14003b9fc:	je     0x14003ba17
   14003b9fe:	lea    r8,[rsp+0x20]
   14003ba03:	lea    rdx,[rip+0x1547e]        # 0x140050e88
   14003ba0a:	mov    r9d,ebx
   14003ba0d:	mov    ecx,0x1
   14003ba12:	call   0x14003bd60
   14003ba17:	mov    rbx,QWORD PTR [rsp+0x830]
   14003ba1f:	mov    rcx,QWORD PTR [rsp+0x820]
   14003ba27:	xor    rcx,rsp
   14003ba2a:	call   0x14002b250
   14003ba2f:	add    rsp,0x838
   14003ba36:	ret    
   14003ba37:	int3   
   14003ba38:	int3   
   14003ba39:	int3   
   14003ba3a:	int3   
   14003ba3b:	int3   
   14003ba3c:	int3   
   14003ba3d:	int3   
   14003ba3e:	int3   
   14003ba3f:	int3   
   14003ba40:	rex push rbx
   14003ba42:	push   rdi
   14003ba43:	push   r12
   14003ba45:	push   r13
   14003ba47:	push   r14
   14003ba49:	sub    rsp,0x870
   14003ba50:	mov    rax,QWORD PTR [rip+0x2ae59]        # 0x1400668b0
   14003ba57:	xor    rax,rsp
   14003ba5a:	mov    QWORD PTR [rsp+0x860],rax
   14003ba62:	dec    ecx
   14003ba64:	mov    r13,r8
   14003ba67:	mov    r12,rdx
   14003ba6a:	lea    r14,[rip+0xfffffffffffc458f]        # 0x140000000
   14003ba71:	cmp    ecx,0x7f
   14003ba74:	ja     0x14003babd
   14003ba76:	movzx  eax,BYTE PTR [r14+rcx*1+0x3bcac]
   14003ba7f:	mov    ecx,DWORD PTR [r14+rax*4+0x3bc8c]
   14003ba87:	add    rcx,r14
   14003ba8a:	jmp    rcx
   14003ba8c:	mov    dil,0x45
   14003ba8f:	mov    bl,0x31
   14003ba91:	jmp    0x14003bac4
   14003ba93:	mov    dil,0x45
   14003ba96:	mov    bl,0x32
   14003ba98:	jmp    0x14003bac4
   14003ba9a:	mov    dil,0x57
   14003ba9d:	mov    bl,0x31
   14003ba9f:	jmp    0x14003bac4
   14003baa1:	mov    dil,0x47
   14003baa4:	mov    bl,0x32
   14003baa6:	jmp    0x14003bac4
   14003baa8:	mov    dil,0x49
   14003baab:	mov    bl,0x31
   14003baad:	jmp    0x14003bac4
   14003baaf:	mov    dil,0x49
   14003bab2:	mov    bl,0x32
   14003bab4:	jmp    0x14003bac4
   14003bab6:	mov    dil,0x50
   14003bab9:	mov    bl,0x31
   14003babb:	jmp    0x14003bac4
   14003babd:	mov    dil,0x58
   14003bac0:	movzx  ebx,dil
   14003bac4:	call   0x14003b940
   14003bac9:	cmp    DWORD PTR [rip+0x2c3c8],0x0        # 0x140067e98
   14003bad0:	jl     0x14003bc69
   14003bad6:	xor    ecx,ecx
   14003bad8:	mov    QWORD PTR [rsp+0x8b8],rsi
   14003bae0:	call   0x14003c27c
   14003bae5:	lea    rcx,[rsp+0x30]
   14003baea:	mov    QWORD PTR [rsp+0x30],rax
   14003baef:	call   0x14003c230
   14003baf4:	lea    r8,[rip+0x15435]        # 0x140050f30
   14003bafb:	lea    rcx,[rsp+0x60]
   14003bb00:	mov    edx,0x800
   14003bb05:	mov    r9,rax
   14003bb08:	call   0x140038318
   14003bb0d:	movsx  r9d,dil
   14003bb11:	mov    edi,0x7fe
   14003bb16:	mov    rsi,rax
   14003bb19:	movsx  eax,bl
   14003bb1c:	mov    rdx,rdi
   14003bb1f:	lea    rcx,[rsp+rsi*1+0x60]
   14003bb24:	lea    r8,[rip+0x153fd]        # 0x140050f28
   14003bb2b:	sub    rdx,rsi
   14003bb2e:	mov    DWORD PTR [rsp+0x20],eax
   14003bb32:	call   0x140002890
   14003bb37:	test   eax,eax
   14003bb39:	jg     0x14003bb91
   14003bb3b:	mov    rax,QWORD PTR [r14+0x50f00]
   14003bb42:	lea    rcx,[rsp+0x38]
   14003bb47:	mov    r8d,0x25
   14003bb4d:	mov    QWORD PTR [rcx],rax
   14003bb50:	mov    rax,QWORD PTR [r14+0x50f08]
   14003bb57:	lea    rdx,[rsp+0x38]
   14003bb5c:	mov    QWORD PTR [rcx+0x8],rax
   14003bb60:	mov    rax,QWORD PTR [r14+0x50f10]
   14003bb67:	mov    QWORD PTR [rcx+0x10],rax
   14003bb6b:	mov    rax,QWORD PTR [r14+0x50f18]
   14003bb72:	mov    QWORD PTR [rcx+0x18],rax
   14003bb76:	mov    eax,DWORD PTR [r14+0x50f20]
   14003bb7d:	mov    DWORD PTR [rcx+0x20],eax
   14003bb80:	movzx  eax,WORD PTR [r14+0x50f24]
   14003bb88:	mov    WORD PTR [rcx+0x24],ax
   14003bb8c:	jmp    0x14003bc56
   14003bb91:	movsxd rbx,eax
   14003bb94:	mov    QWORD PTR [rsp+0x8a0],rbp
   14003bb9c:	mov    r9,r13
   14003bb9f:	lea    rax,[rbx+rsi*1]
   14003bba3:	sub    rdi,rbx
   14003bba6:	mov    r8,r12
   14003bba9:	lea    rbp,[rsp+rax*1+0x60]
   14003bbae:	sub    rdi,rsi
   14003bbb1:	mov    rcx,rbp
   14003bbb4:	mov    rdx,rdi
   14003bbb7:	call   0x1400027c0
   14003bbbc:	mov    ecx,eax
   14003bbbe:	test   eax,eax
   14003bbc0:	jns    0x14003bc2e
   14003bbc2:	mov    rax,QWORD PTR [r14+0x50ed8]
   14003bbc9:	lea    rcx,[rsp+0x38]
   14003bbce:	lea    rdx,[rsp+0x38]
   14003bbd3:	mov    QWORD PTR [rcx],rax
   14003bbd6:	mov    rax,QWORD PTR [r14+0x50ee0]
   14003bbdd:	mov    r8d,0x24
   14003bbe3:	mov    QWORD PTR [rcx+0x8],rax
   14003bbe7:	mov    rax,QWORD PTR [r14+0x50ee8]
   14003bbee:	mov    QWORD PTR [rcx+0x10],rax
   14003bbf2:	mov    rax,QWORD PTR [r14+0x50ef0]
   14003bbf9:	mov    QWORD PTR [rcx+0x18],rax
   14003bbfd:	mov    eax,DWORD PTR [r14+0x50ef8]
   14003bc04:	mov    DWORD PTR [rcx+0x20],eax
   14003bc07:	movzx  eax,BYTE PTR [r14+0x50efc]
   14003bc0f:	mov    BYTE PTR [rcx+0x24],al
   14003bc12:	mov    ecx,DWORD PTR [rip+0x2c280]        # 0x140067e98
   14003bc18:	call   0x14002f798
   14003bc1d:	or     rcx,0xffffffffffffffff
   14003bc21:	xor    eax,eax
   14003bc23:	mov    rdi,rbp
   14003bc26:	repnz scas al,BYTE PTR es:[rdi]
   14003bc28:	not    rcx
   14003bc2b:	dec    rcx
   14003bc2e:	mov    rbp,QWORD PTR [rsp+0x8a0]
   14003bc36:	movsxd rax,ecx
   14003bc39:	add    rax,rbx
   14003bc3c:	add    rax,rsi
   14003bc3f:	cmp    BYTE PTR [rsp+rax*1+0x5f],0xa
   14003bc44:	je     0x14003bc4e
   14003bc46:	mov    BYTE PTR [rsp+rax*1+0x60],0xa
   14003bc4b:	inc    rax
   14003bc4e:	mov    r8d,eax
   14003bc51:	lea    rdx,[rsp+0x60]
   14003bc56:	mov    ecx,DWORD PTR [rip+0x2c23c]        # 0x140067e98
   14003bc5c:	call   0x14002f798
   14003bc61:	mov    rsi,QWORD PTR [rsp+0x8b8]
   14003bc69:	mov    rcx,QWORD PTR [rsp+0x860]
   14003bc71:	xor    rcx,rsp
   14003bc74:	call   0x14002b250
   14003bc79:	add    rsp,0x870
   14003bc80:	pop    r14
   14003bc82:	pop    r13
   14003bc84:	pop    r12
   14003bc86:	pop    rdi
   14003bc87:	pop    rbx
   14003bc88:	ret    
   14003bc89:	nop    DWORD PTR [rax]
   14003bc8c:	mov    WORD PTR [rdx-0x4557fffd],?
   14003bc92:	add    eax,DWORD PTR [rax]
   14003bc94:	xchg   ebx,eax
   14003bc95:	mov    edx,0xba9a0003
   14003bc9a:	add    eax,DWORD PTR [rax]
   14003bc9c:	movabs eax,ds:0xb60003baaf0003ba
   14003bca5:	mov    edx,0xbabd0003
   14003bcaa:	add    eax,DWORD PTR [rax]
   14003bcac:	add    BYTE PTR [rcx],al
   14003bcae:	(bad)  
   14003bcaf:	add    al,BYTE PTR [rdi]
   14003bcb1:	(bad)  
   14003bcb2:	(bad)  
   14003bcb3:	add    eax,DWORD PTR [rdi]
   14003bcb5:	(bad)  
   14003bcb6:	(bad)  
   14003bcb7:	(bad)  
   14003bcb8:	(bad)  
   14003bcb9:	(bad)  
   14003bcba:	(bad)  
   14003bcbb:	add    al,0x7
   14003bcbd:	(bad)  
   14003bcbe:	(bad)  
   14003bcbf:	(bad)  
   14003bcc0:	(bad)  
   14003bcc1:	(bad)  
   14003bcc2:	(bad)  
   14003bcc3:	(bad)  
   14003bcc4:	(bad)  
   14003bcc5:	(bad)  
   14003bcc6:	(bad)  
   14003bcc7:	(bad)  
   14003bcc8:	(bad)  
   14003bcc9:	(bad)  
   14003bcca:	(bad)  
   14003bccb:	add    eax,0x7070707
   14003bcd0:	(bad)  
   14003bcd1:	(bad)  
   14003bcd2:	(bad)  
   14003bcd3:	(bad)  
   14003bcd4:	(bad)  
   14003bcd5:	(bad)  
   14003bcd6:	(bad)  
   14003bcd7:	(bad)  
   14003bcd8:	(bad)  
   14003bcd9:	(bad)  
   14003bcda:	(bad)  
   14003bcdb:	(bad)  
   14003bcdc:	(bad)  
   14003bcdd:	(bad)  
   14003bcde:	(bad)  
   14003bcdf:	(bad)  
   14003bce0:	(bad)  
   14003bce1:	(bad)  
   14003bce2:	(bad)  
   14003bce3:	(bad)  
   14003bce4:	(bad)  
   14003bce5:	(bad)  
   14003bce6:	(bad)  
   14003bce7:	(bad)  
   14003bce8:	(bad)  
   14003bce9:	(bad)  
   14003bcea:	(bad)  
   14003bceb:	(bad)  
   14003bcec:	(bad)  
   14003bced:	(bad)  
   14003bcee:	(bad)  
   14003bcef:	(bad)  
   14003bcf0:	(bad)  
   14003bcf1:	(bad)  
   14003bcf2:	(bad)  
   14003bcf3:	(bad)  
   14003bcf4:	(bad)  
   14003bcf5:	(bad)  
   14003bcf6:	(bad)  
   14003bcf7:	(bad)  
   14003bcf8:	(bad)  
   14003bcf9:	(bad)  
   14003bcfa:	(bad)  
   14003bcfb:	(bad)  
   14003bcfc:	(bad)  
   14003bcfd:	(bad)  
   14003bcfe:	(bad)  
   14003bcff:	(bad)  
   14003bd00:	(bad)  
   14003bd01:	(bad)  
   14003bd02:	(bad)  
   14003bd03:	(bad)  
   14003bd04:	(bad)  
   14003bd05:	(bad)  
   14003bd06:	(bad)  
   14003bd07:	(bad)  
   14003bd08:	(bad)  
   14003bd09:	(bad)  
   14003bd0a:	(bad)  
   14003bd0b:	(bad)  
   14003bd0c:	(bad)  
   14003bd0d:	(bad)  
   14003bd0e:	(bad)  
   14003bd0f:	(bad)  
   14003bd10:	(bad)  
   14003bd11:	(bad)  
   14003bd12:	(bad)  
   14003bd13:	(bad)  
   14003bd14:	(bad)  
   14003bd15:	(bad)  
   14003bd16:	(bad)  
   14003bd17:	(bad)  
   14003bd18:	(bad)  
   14003bd19:	(bad)  
   14003bd1a:	(bad)  
   14003bd1b:	(bad)  
   14003bd1c:	(bad)  
   14003bd1d:	(bad)  
   14003bd1e:	(bad)  
   14003bd1f:	(bad)  
   14003bd20:	(bad)  
   14003bd21:	(bad)  
   14003bd22:	(bad)  
   14003bd23:	(bad)  
   14003bd24:	(bad)  
   14003bd25:	(bad)  
   14003bd26:	(bad)  
   14003bd27:	(bad)  
   14003bd28:	(bad)  
   14003bd29:	(bad)  
   14003bd2a:	(bad)  
   14003bd2b:	(bad)  
   14003bd2c:	int3   
   14003bd2d:	int3   
   14003bd2e:	int3   
   14003bd2f:	int3   
   14003bd30:	mov    QWORD PTR [rsp+0x8],rcx
   14003bd35:	mov    QWORD PTR [rsp+0x10],rdx
   14003bd3a:	mov    QWORD PTR [rsp+0x18],r8
   14003bd3f:	mov    QWORD PTR [rsp+0x20],r9
   14003bd44:	sub    rsp,0x28
   14003bd48:	mov    rdx,rcx
   14003bd4b:	lea    r8,[rsp+0x38]
   14003bd50:	mov    ecx,0x1
   14003bd55:	call   0x14003ba40
   14003bd5a:	add    rsp,0x28
   14003bd5e:	ret    
   14003bd5f:	int3   
   14003bd60:	mov    QWORD PTR [rsp+0x10],rdx
   14003bd65:	mov    QWORD PTR [rsp+0x18],r8
   14003bd6a:	mov    QWORD PTR [rsp+0x20],r9
   14003bd6f:	sub    rsp,0x28
   14003bd73:	test   DWORD PTR [rip+0x2c123],ecx        # 0x140067e9c
   14003bd79:	je     0x14003bd85
   14003bd7b:	lea    r8,[rsp+0x40]
   14003bd80:	call   0x14003ba40
   14003bd85:	add    rsp,0x28
   14003bd89:	ret    
   14003bd8a:	int3   
   14003bd8b:	int3   
   14003bd8c:	int3   
   14003bd8d:	int3   
   14003bd8e:	int3   
   14003bd8f:	int3   
   14003bd90:	mov    QWORD PTR [rsp+0x8],rbx
   14003bd95:	mov    QWORD PTR [rsp+0x10],rbp
   14003bd9a:	push   rsi
   14003bd9b:	push   rdi
   14003bd9c:	push   r12
   14003bd9e:	push   r13
   14003bda0:	push   r14
   14003bda2:	sub    rsp,0x40
   14003bda6:	mov    rbp,rcx
   14003bda9:	or     rcx,0xffffffffffffffff
   14003bdad:	xor    eax,eax
   14003bdaf:	mov    rdi,rbp
   14003bdb2:	mov    rsi,r9
   14003bdb5:	mov    rbx,r8
   14003bdb8:	repnz scas al,BYTE PTR es:[rdi]
   14003bdba:	mov    r12,rdx
   14003bdbd:	not    rcx
   14003bdc0:	lea    r13,[rcx-0x1]
   14003bdc4:	lea    rcx,[rsp+0x20]
   14003bdc9:	call   0x14000a290
   14003bdce:	xor    r11d,r11d
   14003bdd1:	mov    r8,r11
   14003bdd4:	test   rsi,rsi
   14003bdd7:	je     0x14003be7e
   14003bddd:	lea    r14,[rip+0x1557c]        # 0x140051360
   14003bde4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14003bdf0:	movzx  ecx,BYTE PTR [rbx+r8*1]
   14003bdf5:	lea    rdi,[r8+0x1]
   14003bdf9:	cmp    DWORD PTR [r12+rcx*4],0x0
   14003bdfe:	je     0x14003be72
   14003be00:	mov    rax,rcx
   14003be03:	and    ecx,0xf
   14003be06:	lea    rdx,[r11+rbx*1]
   14003be0a:	shr    rax,0x4
   14003be0e:	sub    r8,r11
   14003be11:	movzx  eax,BYTE PTR [rax+r14*1]
   14003be16:	mov    BYTE PTR [rsp+0x80],al
   14003be1d:	movzx  eax,BYTE PTR [rcx+r14*1]
   14003be22:	lea    rcx,[rsp+0x20]
   14003be27:	mov    BYTE PTR [rsp+0x81],al
   14003be2e:	call   0x14000a390
   14003be33:	test   al,al
   14003be35:	je     0x14003bedb
   14003be3b:	lea    rcx,[rsp+0x20]
   14003be40:	mov    r8,r13
   14003be43:	mov    rdx,rbp
   14003be46:	call   0x14000a390
   14003be4b:	test   al,al
   14003be4d:	je     0x14003bedb
   14003be53:	lea    rdx,[rsp+0x80]
   14003be5b:	lea    rcx,[rsp+0x20]
   14003be60:	mov    r8d,0x2
   14003be66:	call   0x14000a390
   14003be6b:	test   al,al
   14003be6d:	je     0x14003bedb
   14003be6f:	mov    r11,rdi
   14003be72:	mov    r8,rdi
   14003be75:	cmp    rdi,rsi
   14003be78:	jb     0x14003bdf0
   14003be7e:	lea    rdx,[r11+rbx*1]
   14003be82:	lea    rcx,[rsp+0x20]
   14003be87:	sub    r8,r11
   14003be8a:	call   0x14000a390
   14003be8f:	test   al,al
   14003be91:	je     0x14003bedb
   14003be93:	lea    rdx,[rip+0x15c2]        # 0x14003d45c
   14003be9a:	lea    rcx,[rsp+0x20]
   14003be9f:	mov    r8d,0x1
   14003bea5:	call   0x14000a390
   14003beaa:	test   al,al
   14003beac:	je     0x14003bedb
   14003beae:	lea    rcx,[rsp+0x20]
   14003beb3:	call   0x14000a420
   14003beb8:	test   al,al
   14003beba:	je     0x14003bedb
   14003bebc:	mov    rcx,QWORD PTR [rsp+0x90]
   14003bec4:	test   rcx,rcx
   14003bec7:	je     0x14003bed4
   14003bec9:	mov    rax,QWORD PTR [rsp+0x28]
   14003bece:	dec    rax
   14003bed1:	mov    QWORD PTR [rcx],rax
   14003bed4:	mov    rax,QWORD PTR [rsp+0x20]
   14003bed9:	jmp    0x14003bee7
   14003bedb:	lea    rcx,[rsp+0x20]
   14003bee0:	call   0x14000a2a0
   14003bee5:	xor    eax,eax
   14003bee7:	mov    rbx,QWORD PTR [rsp+0x70]
   14003beec:	mov    rbp,QWORD PTR [rsp+0x78]
   14003bef1:	add    rsp,0x40
   14003bef5:	pop    r14
   14003bef7:	pop    r13
   14003bef9:	pop    r12
   14003befb:	pop    rdi
   14003befc:	pop    rsi
   14003befd:	ret    
   14003befe:	int3   
   14003beff:	int3   
   14003bf00:	mov    rax,rsp
   14003bf03:	mov    QWORD PTR [rax+0x10],rbx
   14003bf07:	push   rdi
   14003bf08:	sub    rsp,0x40
   14003bf0c:	and    DWORD PTR [rax+0x18],0x0
   14003bf10:	and    DWORD PTR [rax+0x20],0x0
   14003bf14:	and    DWORD PTR [rax+0x8],0x0
   14003bf18:	mov    rdi,rdx
   14003bf1b:	mov    rbx,rcx
   14003bf1e:	test   rcx,rcx
   14003bf21:	jne    0x14003bf4b
   14003bf23:	call   0x14002b3f4
   14003bf28:	and    QWORD PTR [rsp+0x20],0x0
   14003bf2e:	mov    ebx,0x16
   14003bf33:	xor    r9d,r9d
   14003bf36:	xor    r8d,r8d
   14003bf39:	xor    edx,edx
   14003bf3b:	xor    ecx,ecx
   14003bf3d:	mov    DWORD PTR [rax],ebx
   14003bf3f:	call   0x140031aac
   14003bf44:	mov    eax,ebx
   14003bf46:	jmp    0x14003c1d8
   14003bf4b:	mov    edx,0xff
   14003bf50:	mov    r8d,0x24
   14003bf56:	call   0x14002b280
   14003bf5b:	test   rdi,rdi
   14003bf5e:	je     0x14003bf23
   14003bf60:	cmp    QWORD PTR [rdi],0x0
   14003bf64:	jge    0x14003bf74
   14003bf66:	call   0x14002b3f4
   14003bf6b:	mov    ebx,0x16
   14003bf70:	mov    DWORD PTR [rax],ebx
   14003bf72:	jmp    0x14003bf44
   14003bf74:	movabs rax,0x793406fff
   14003bf7e:	cmp    QWORD PTR [rdi],rax
   14003bf81:	jg     0x14003bf66
   14003bf83:	call   0x14002eca4
   14003bf88:	lea    rcx,[rsp+0x60]
   14003bf8d:	call   0x14002ed10
   14003bf92:	test   eax,eax
   14003bf94:	je     0x14003bfab
   14003bf96:	and    QWORD PTR [rsp+0x20],0x0
   14003bf9c:	xor    r9d,r9d
   14003bf9f:	xor    r8d,r8d
   14003bfa2:	xor    edx,edx
   14003bfa4:	xor    ecx,ecx
   14003bfa6:	call   0x140031984
   14003bfab:	lea    rcx,[rsp+0x68]
   14003bfb0:	call   0x14002ed50
   14003bfb5:	test   eax,eax
   14003bfb7:	je     0x14003bfce
   14003bfb9:	and    QWORD PTR [rsp+0x20],0x0
   14003bfbf:	xor    r9d,r9d
   14003bfc2:	xor    r8d,r8d
   14003bfc5:	xor    edx,edx
   14003bfc7:	xor    ecx,ecx
   14003bfc9:	call   0x140031984
   14003bfce:	lea    rcx,[rsp+0x50]
   14003bfd3:	call   0x14002ed90
   14003bfd8:	test   eax,eax
   14003bfda:	je     0x14003bff1
   14003bfdc:	and    QWORD PTR [rsp+0x20],0x0
   14003bfe2:	xor    r9d,r9d
   14003bfe5:	xor    r8d,r8d
   14003bfe8:	xor    edx,edx
   14003bfea:	xor    ecx,ecx
   14003bfec:	call   0x140031984
   14003bff1:	mov    rcx,QWORD PTR [rdi]
   14003bff4:	cmp    rcx,0x3f480
   14003bffb:	jle    0x14003c064
   14003bffd:	movsxd rax,DWORD PTR [rsp+0x50]
   14003c002:	lea    rdx,[rsp+0x30]
   14003c007:	sub    rcx,rax
   14003c00a:	mov    QWORD PTR [rsp+0x30],rcx
   14003c00f:	mov    rcx,rbx
   14003c012:	call   0x14003c2dc
   14003c017:	test   eax,eax
   14003c019:	jne    0x14003c1d8
   14003c01f:	cmp    DWORD PTR [rsp+0x60],eax
   14003c023:	je     0x14003c1d6
   14003c029:	mov    rcx,rbx
   14003c02c:	call   0x14002ece0
   14003c031:	test   eax,eax
   14003c033:	je     0x14003c1d6
   14003c039:	movsxd rax,DWORD PTR [rsp+0x68]
   14003c03e:	lea    rdx,[rsp+0x30]
   14003c043:	mov    rcx,rbx
   14003c046:	sub    QWORD PTR [rsp+0x30],rax
   14003c04b:	call   0x14003c2dc
   14003c050:	test   eax,eax
   14003c052:	jne    0x14003c1d8
   14003c058:	mov    DWORD PTR [rbx+0x20],0x1
   14003c05f:	jmp    0x14003c1d6
   14003c064:	mov    rdx,rdi
   14003c067:	mov    rcx,rbx
   14003c06a:	call   0x14003c2dc
   14003c06f:	test   eax,eax
   14003c071:	jne    0x14003c1d8
   14003c077:	cmp    DWORD PTR [rsp+0x60],eax
   14003c07b:	je     0x14003c09e
   14003c07d:	mov    rcx,rbx
   14003c080:	call   0x14002ece0
   14003c085:	test   eax,eax
   14003c087:	je     0x14003c09e
   14003c089:	mov    eax,DWORD PTR [rsp+0x50]
   14003c08d:	mov    ecx,DWORD PTR [rsp+0x68]
   14003c091:	mov    DWORD PTR [rbx+0x20],0x1
   14003c098:	add    eax,ecx
   14003c09a:	cdqe   
   14003c09c:	jmp    0x14003c0a3
   14003c09e:	movsxd rax,DWORD PTR [rsp+0x50]
   14003c0a3:	movsxd rcx,DWORD PTR [rbx]
   14003c0a6:	movabs r8,0x8888888888888889
   14003c0b0:	sub    rcx,rax
   14003c0b3:	mov    rax,r8
   14003c0b6:	imul   rcx
   14003c0b9:	add    rdx,rcx
   14003c0bc:	sar    rdx,0x5
   14003c0c0:	mov    rax,rdx
   14003c0c3:	shr    rax,0x3f
   14003c0c7:	add    rdx,rax
   14003c0ca:	mov    rax,rcx
   14003c0cd:	imul   rdx,rdx,0x3c
   14003c0d1:	sub    rax,rdx
   14003c0d4:	mov    DWORD PTR [rbx],eax
   14003c0d6:	test   eax,eax
   14003c0d8:	jns    0x14003c0e3
   14003c0da:	add    eax,0x3c
   14003c0dd:	sub    rcx,0x3c
   14003c0e1:	mov    DWORD PTR [rbx],eax
   14003c0e3:	mov    rax,r8
   14003c0e6:	imul   rcx
   14003c0e9:	lea    r9,[rcx+rdx*1]
   14003c0ed:	sar    r9,0x5
   14003c0f1:	mov    rax,r9
   14003c0f4:	shr    rax,0x3f
   14003c0f8:	add    r9,rax
   14003c0fb:	movsxd rax,DWORD PTR [rbx+0x4]
   14003c0ff:	add    r9,rax
   14003c102:	mov    rax,r8
   14003c105:	mov    rcx,r9
   14003c108:	imul   r9
   14003c10b:	add    rdx,r9
   14003c10e:	sar    rdx,0x5
   14003c112:	mov    rax,rdx
   14003c115:	shr    rax,0x3f
   14003c119:	add    rdx,rax
   14003c11c:	imul   rdx,rdx,0x3c
   14003c120:	sub    rcx,rdx
   14003c123:	mov    DWORD PTR [rbx+0x4],ecx
   14003c126:	test   ecx,ecx
   14003c128:	jns    0x14003c134
   14003c12a:	add    ecx,0x3c
   14003c12d:	sub    r9,0x3c
   14003c131:	mov    DWORD PTR [rbx+0x4],ecx
   14003c134:	mov    rax,r8
   14003c137:	imul   r9
   14003c13a:	lea    r8,[r9+rdx*1]
   14003c13e:	movabs r9,0x2aaaaaaaaaaaaaab
   14003c148:	sar    r8,0x5
   14003c14c:	mov    rax,r8
   14003c14f:	shr    rax,0x3f
   14003c153:	add    r8,rax
   14003c156:	movsxd rax,DWORD PTR [rbx+0x8]
   14003c15a:	add    r8,rax
   14003c15d:	mov    rax,r9
   14003c160:	imul   r8
   14003c163:	sar    rdx,0x2
   14003c167:	mov    rax,rdx
   14003c16a:	shr    rax,0x3f
   14003c16e:	add    rdx,rax
   14003c171:	lea    rcx,[rdx+rdx*2]
   14003c175:	mov    rdx,r8
   14003c178:	shl    rcx,0x3
   14003c17c:	sub    rdx,rcx
   14003c17f:	mov    DWORD PTR [rbx+0x8],edx
   14003c182:	test   edx,edx
   14003c184:	jns    0x14003c190
   14003c186:	lea    ecx,[rdx+0x18]
   14003c189:	sub    r8,0x18
   14003c18d:	mov    DWORD PTR [rbx+0x8],ecx
   14003c190:	mov    rax,r9
   14003c193:	imul   r8
   14003c196:	mov    r8,rdx
   14003c199:	sar    r8,0x2
   14003c19d:	mov    rax,r8
   14003c1a0:	shr    rax,0x3f
   14003c1a4:	add    r8,rax
   14003c1a7:	test   r8,r8
   14003c1aa:	jle    0x14003c1e3
   14003c1ac:	mov    eax,DWORD PTR [rbx+0x18]
   14003c1af:	lea    ecx,[r8+rax*1]
   14003c1b3:	mov    eax,0x92492493
   14003c1b8:	imul   ecx
   14003c1ba:	add    edx,ecx
   14003c1bc:	sar    edx,0x2
   14003c1bf:	mov    eax,edx
   14003c1c1:	shr    eax,0x1f
   14003c1c4:	add    edx,eax
   14003c1c6:	imul   edx,edx,0x7
   14003c1c9:	sub    ecx,edx
   14003c1cb:	add    DWORD PTR [rbx+0xc],r8d
   14003c1cf:	mov    DWORD PTR [rbx+0x18],ecx
   14003c1d2:	add    DWORD PTR [rbx+0x1c],r8d
   14003c1d6:	xor    eax,eax
   14003c1d8:	mov    rbx,QWORD PTR [rsp+0x58]
   14003c1dd:	add    rsp,0x40
   14003c1e1:	pop    rdi
   14003c1e2:	ret    
   14003c1e3:	jns    0x14003c1d6
   14003c1e5:	mov    eax,DWORD PTR [rbx+0x18]
   14003c1e8:	add    DWORD PTR [rbx+0xc],r8d
   14003c1ec:	lea    ecx,[r8+rax*1+0x7]
   14003c1f1:	mov    eax,0x92492493
   14003c1f6:	imul   ecx
   14003c1f8:	add    edx,ecx
   14003c1fa:	sar    edx,0x2
   14003c1fd:	mov    eax,edx
   14003c1ff:	shr    eax,0x1f
   14003c202:	add    edx,eax
   14003c204:	mov    eax,DWORD PTR [rbx+0xc]
   14003c207:	imul   edx,edx,0x7
   14003c20a:	sub    ecx,edx
   14003c20c:	mov    DWORD PTR [rbx+0x18],ecx
   14003c20f:	test   eax,eax
   14003c211:	jg     0x14003c1d2
   14003c213:	add    eax,0x1f
   14003c216:	mov    DWORD PTR [rbx+0x10],0xb
   14003c21d:	mov    DWORD PTR [rbx+0xc],eax
   14003c220:	lea    eax,[r8+0x16d]
   14003c227:	add    DWORD PTR [rbx+0x1c],eax
   14003c22a:	dec    DWORD PTR [rbx+0x14]
   14003c22d:	jmp    0x14003c1d6
   14003c22f:	int3   
   14003c230:	mov    QWORD PTR [rsp+0x8],rbx
   14003c235:	mov    QWORD PTR [rsp+0x10],rsi
   14003c23a:	push   rdi
   14003c23b:	sub    rsp,0x20
   14003c23f:	mov    rdi,rcx
   14003c242:	call   0x14003c5a8
   14003c247:	xor    esi,esi
   14003c249:	mov    rbx,rax
   14003c24c:	cmp    rax,rsi
   14003c24f:	jne    0x14003c255
   14003c251:	xor    eax,eax
   14003c253:	jmp    0x14003c269
   14003c255:	mov    rdx,rdi
   14003c258:	mov    rcx,rax
   14003c25b:	call   0x14003bf00
   14003c260:	cmp    eax,esi
   14003c262:	cmovne rbx,rsi
   14003c266:	mov    rax,rbx
   14003c269:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c26e:	mov    rsi,QWORD PTR [rsp+0x38]
   14003c273:	add    rsp,0x20
   14003c277:	pop    rdi
   14003c278:	ret    
   14003c279:	int3   
   14003c27a:	int3   
   14003c27b:	int3   
   14003c27c:	rex push rbx
   14003c27e:	sub    rsp,0x20
   14003c282:	mov    rbx,rcx
   14003c285:	lea    rcx,[rsp+0x30]
   14003c28a:	call   QWORD PTR [rip+0xfb8]        # 0x14003d248
   14003c290:	mov    rdx,QWORD PTR [rsp+0x30]
   14003c295:	or     rcx,0xffffffffffffffff
   14003c299:	movabs r11,0xfe624e212ac18000
   14003c2a3:	movabs rax,0xd6bf94d5e57a42bd
   14003c2ad:	add    rdx,r11
   14003c2b0:	mul    rdx
   14003c2b3:	movabs rax,0x793406fff
   14003c2bd:	shr    rdx,0x17
   14003c2c1:	cmp    rdx,rax
   14003c2c4:	cmovg  rdx,rcx
   14003c2c8:	test   rbx,rbx
   14003c2cb:	je     0x14003c2d0
   14003c2cd:	mov    QWORD PTR [rbx],rdx
   14003c2d0:	mov    rax,rdx
   14003c2d3:	add    rsp,0x20
   14003c2d7:	pop    rbx
   14003c2d8:	ret    
   14003c2d9:	int3   
   14003c2da:	int3   
   14003c2db:	int3   
   14003c2dc:	mov    QWORD PTR [rsp+0x8],rbx
   14003c2e1:	mov    QWORD PTR [rsp+0x10],rsi
   14003c2e6:	mov    QWORD PTR [rsp+0x18],rdi
   14003c2eb:	push   r13
   14003c2ed:	sub    rsp,0x30
   14003c2f1:	xor    edi,edi
   14003c2f3:	mov    rsi,rdx
   14003c2f6:	mov    rbx,rcx
   14003c2f9:	test   rcx,rcx
   14003c2fc:	jne    0x14003c325
   14003c2fe:	call   0x14002b3f4
   14003c303:	and    QWORD PTR [rsp+0x20],rdi
   14003c308:	mov    ebx,0x16
   14003c30d:	xor    r9d,r9d
   14003c310:	xor    r8d,r8d
   14003c313:	xor    edx,edx
   14003c315:	xor    ecx,ecx
   14003c317:	mov    DWORD PTR [rax],ebx
   14003c319:	call   0x140031aac
   14003c31e:	mov    eax,ebx
   14003c320:	jmp    0x14003c592
   14003c325:	mov    edx,0xff
   14003c32a:	mov    r8d,0x24
   14003c330:	call   0x14002b280
   14003c335:	test   rsi,rsi
   14003c338:	je     0x14003c2fe
   14003c33a:	mov    r9,QWORD PTR [rsi]
   14003c33d:	cmp    r9,0xffffffffffff5740
   14003c344:	jge    0x14003c354
   14003c346:	call   0x14002b3f4
   14003c34b:	mov    ebx,0x16
   14003c350:	mov    DWORD PTR [rax],ebx
   14003c352:	jmp    0x14003c31e
   14003c354:	movabs rax,0x7934126cf
   14003c35e:	cmp    r9,rax
   14003c361:	jg     0x14003c346
   14003c363:	mov    r11d,0x51eb851f
   14003c369:	movabs rax,0x883148f5cb1270b9
   14003c373:	imul   r9
   14003c376:	lea    r8,[r9+rdx*1]
   14003c37a:	sar    r8,0x18
   14003c37e:	mov    rax,r8
   14003c381:	shr    rax,0x3f
   14003c385:	add    r8,rax
   14003c388:	mov    eax,r11d
   14003c38b:	add    r8d,0x46
   14003c38f:	lea    ecx,[r8+0x12b]
   14003c396:	lea    r10d,[r8-0x1]
   14003c39a:	imul   ecx
   14003c39c:	mov    ecx,edx
   14003c39e:	sar    ecx,0x7
   14003c3a1:	mov    eax,ecx
   14003c3a3:	shr    eax,0x1f
   14003c3a6:	add    ecx,eax
   14003c3a8:	mov    eax,r11d
   14003c3ab:	imul   r10d
   14003c3ae:	sar    edx,0x5
   14003c3b1:	mov    eax,edx
   14003c3b3:	shr    eax,0x1f
   14003c3b6:	add    edx,eax
   14003c3b8:	mov    eax,r10d
   14003c3bb:	sub    ecx,edx
   14003c3bd:	cdq    
   14003c3be:	and    edx,0x3
   14003c3c1:	add    eax,edx
   14003c3c3:	sar    eax,0x2
   14003c3c6:	lea    ecx,[rcx+rax*1-0x11]
   14003c3ca:	lea    eax,[r8-0x46]
   14003c3ce:	movsxd rdx,ecx
   14003c3d1:	movsxd rcx,eax
   14003c3d4:	imul   rcx,rcx,0xfffffffffffffe93
   14003c3db:	sub    rcx,rdx
   14003c3de:	imul   rcx,rcx,0x15180
   14003c3e5:	add    r9,rcx
   14003c3e8:	jns    0x14003c445
   14003c3ea:	mov    eax,r10d
   14003c3ed:	add    r9,0x1e13380
   14003c3f4:	mov    r8d,r10d
   14003c3f7:	cdq    
   14003c3f8:	and    edx,0x3
   14003c3fb:	add    eax,edx
   14003c3fd:	and    eax,0x3
   14003c400:	cmp    eax,edx
   14003c402:	jne    0x14003c41c
   14003c404:	mov    eax,r11d
   14003c407:	imul   r8d
   14003c40a:	sar    edx,0x5
   14003c40d:	mov    ecx,edx
   14003c40f:	shr    ecx,0x1f
   14003c412:	add    edx,ecx
   14003c414:	imul   edx,edx,0x64
   14003c417:	cmp    r10d,edx
   14003c41a:	jne    0x14003c43c
   14003c41c:	lea    ecx,[r10+0x76c]
   14003c423:	mov    eax,r11d
   14003c426:	imul   ecx
   14003c428:	sar    edx,0x7
   14003c42b:	mov    eax,edx
   14003c42d:	shr    eax,0x1f
   14003c430:	add    edx,eax
   14003c432:	imul   edx,edx,0x190
   14003c438:	cmp    ecx,edx
   14003c43a:	jne    0x14003c492
   14003c43c:	add    r9,0x15180
   14003c443:	jmp    0x14003c48d
   14003c445:	mov    eax,r8d
   14003c448:	cdq    
   14003c449:	and    edx,0x3
   14003c44c:	add    eax,edx
   14003c44e:	and    eax,0x3
   14003c451:	cmp    eax,edx
   14003c453:	jne    0x14003c46d
   14003c455:	mov    eax,r11d
   14003c458:	imul   r8d
   14003c45b:	sar    edx,0x5
   14003c45e:	mov    eax,edx
   14003c460:	shr    eax,0x1f
   14003c463:	add    edx,eax
   14003c465:	imul   edx,edx,0x64
   14003c468:	cmp    r8d,edx
   14003c46b:	jne    0x14003c48d
   14003c46d:	lea    ecx,[r8+0x76c]
   14003c474:	mov    eax,r11d
   14003c477:	imul   ecx
   14003c479:	sar    edx,0x7
   14003c47c:	mov    eax,edx
   14003c47e:	shr    eax,0x1f
   14003c481:	add    edx,eax
   14003c483:	imul   edx,edx,0x190
   14003c489:	cmp    ecx,edx
   14003c48b:	jne    0x14003c492
   14003c48d:	mov    edi,0x1
   14003c492:	movabs r13,0x1845c8a0ce512957
   14003c49c:	mov    DWORD PTR [rbx+0x14],r8d
   14003c4a0:	lea    r8,[rip+0x2b4d9]        # 0x140067980
   14003c4a7:	mov    rax,r13
   14003c4aa:	imul   r9
   14003c4ad:	sar    rdx,0xd
   14003c4b1:	mov    rax,rdx
   14003c4b4:	shr    rax,0x3f
   14003c4b8:	add    rdx,rax
   14003c4bb:	movsxd rax,edx
   14003c4be:	mov    DWORD PTR [rbx+0x1c],edx
   14003c4c1:	mov    r11d,DWORD PTR [rbx+0x1c]
   14003c4c5:	imul   rax,rax,0xfffffffffffeae80
   14003c4cc:	add    r9,rax
   14003c4cf:	lea    rax,[rip+0x2b4e2]        # 0x1400679b8
   14003c4d6:	test   edi,edi
   14003c4d8:	mov    edx,0x1
   14003c4dd:	cmove  r8,rax
   14003c4e1:	lea    rcx,[r8+0x4]
   14003c4e5:	jmp    0x14003c4ed
   14003c4e7:	inc    edx
   14003c4e9:	add    rcx,0x4
   14003c4ed:	cmp    DWORD PTR [rcx],r11d
   14003c4f0:	jl     0x14003c4e7
   14003c4f2:	dec    edx
   14003c4f4:	mov    rax,r13
   14003c4f7:	movsxd rcx,edx
   14003c4fa:	mov    DWORD PTR [rbx+0x10],edx
   14003c4fd:	sub    r11d,DWORD PTR [r8+rcx*4]
   14003c501:	mov    DWORD PTR [rbx+0xc],r11d
   14003c505:	imul   QWORD PTR [rsi]
   14003c508:	and    DWORD PTR [rbx+0x20],0x0
   14003c50c:	mov    rcx,rdx
   14003c50f:	sar    rcx,0xd
   14003c513:	mov    rax,rcx
   14003c516:	shr    rax,0x3f
   14003c51a:	add    rcx,rax
   14003c51d:	mov    eax,0x92492493
   14003c522:	add    ecx,0x4
   14003c525:	imul   ecx
   14003c527:	add    edx,ecx
   14003c529:	sar    edx,0x2
   14003c52c:	mov    eax,edx
   14003c52e:	shr    eax,0x1f
   14003c531:	add    edx,eax
   14003c533:	movabs rax,0x48d159e26af37c05
   14003c53d:	imul   edx,edx,0x7
   14003c540:	sub    ecx,edx
   14003c542:	imul   r9
   14003c545:	mov    DWORD PTR [rbx+0x18],ecx
   14003c548:	sar    rdx,0xa
   14003c54c:	mov    rax,rdx
   14003c54f:	shr    rax,0x3f
   14003c553:	add    rdx,rax
   14003c556:	movsxd rax,edx
   14003c559:	mov    DWORD PTR [rbx+0x8],edx
   14003c55c:	imul   rax,rax,0xfffffffffffff1f0
   14003c563:	add    r9,rax
   14003c566:	movabs rax,0x8888888888888889
   14003c570:	imul   r9
   14003c573:	add    rdx,r9
   14003c576:	sar    rdx,0x5
   14003c57a:	mov    rax,rdx
   14003c57d:	shr    rax,0x3f
   14003c581:	add    rdx,rax
   14003c584:	mov    DWORD PTR [rbx+0x4],edx
   14003c587:	imul   edx,edx,0x3c
   14003c58a:	sub    r9d,edx
   14003c58d:	xor    eax,eax
   14003c58f:	mov    DWORD PTR [rbx],r9d
   14003c592:	mov    rbx,QWORD PTR [rsp+0x40]
   14003c597:	mov    rsi,QWORD PTR [rsp+0x48]
   14003c59c:	mov    rdi,QWORD PTR [rsp+0x50]
   14003c5a1:	add    rsp,0x30
   14003c5a5:	pop    r13
   14003c5a7:	ret    
   14003c5a8:	rex push rbx
   14003c5aa:	sub    rsp,0x20
   14003c5ae:	call   0x140031dc4
   14003c5b3:	mov    rbx,rax
   14003c5b6:	test   rax,rax
   14003c5b9:	jne    0x14003c5ca
   14003c5bb:	call   0x14002b3f4
   14003c5c0:	mov    DWORD PTR [rax],0xc
   14003c5c6:	xor    eax,eax
   14003c5c8:	jmp    0x14003c5e8
   14003c5ca:	cmp    QWORD PTR [rax+0x78],0x0
   14003c5cf:	jne    0x14003c5e4
   14003c5d1:	mov    ecx,0x24
   14003c5d6:	call   0x1400300c8
   14003c5db:	mov    QWORD PTR [rbx+0x78],rax
   14003c5df:	test   rax,rax
   14003c5e2:	je     0x14003c5bb
   14003c5e4:	mov    rax,QWORD PTR [rbx+0x78]
   14003c5e8:	add    rsp,0x20
   14003c5ec:	pop    rbx
   14003c5ed:	ret    
   14003c5ee:	int3   
   14003c5ef:	int3   
   14003c5f0:	int3   
   14003c5f1:	int3   
   14003c5f2:	int3   
   14003c5f3:	int3   
   14003c5f4:	int3   
   14003c5f5:	int3   
   14003c5f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14003c600:	sub    rsp,0x10
   14003c604:	mov    QWORD PTR [rsp],r10
   14003c608:	mov    QWORD PTR [rsp+0x8],r11
   14003c60d:	xor    r11,r11
   14003c610:	lea    r10,[rsp+0x18]
   14003c615:	sub    r10,rax
   14003c618:	cmovb  r10,r11
   14003c61c:	mov    r11,QWORD PTR gs:0x10
   14003c625:	cmp    r10,r11
   14003c628:	jae    0x14003c640
   14003c62a:	and    r10w,0xf000
   14003c630:	lea    r11,[r11-0x1000]
   14003c637:	mov    BYTE PTR [r11],0x0
   14003c63b:	cmp    r10,r11
   14003c63e:	jne    0x14003c630
   14003c640:	mov    r10,QWORD PTR [rsp]
   14003c644:	mov    r11,QWORD PTR [rsp+0x8]
   14003c649:	add    rsp,0x10
   14003c64d:	ret    
   14003c64e:	int3   
   14003c64f:	int3   
   14003c650:	rex push rbp
   14003c652:	sub    rsp,0x20
   14003c656:	mov    rbp,rdx
   14003c659:	movsxd rcx,DWORD PTR [rbp+0x20]
   14003c65d:	mov    rax,rcx
   14003c660:	mov    rdx,QWORD PTR [rip+0x2e6a9]        # 0x14006ad10
   14003c667:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14003c66b:	call   0x14002adcc
   14003c670:	add    rsp,0x20
   14003c674:	pop    rbp
   14003c675:	ret    
   14003c676:	int3   
   14003c677:	int3   
   14003c678:	int3   
   14003c679:	int3   
   14003c67a:	int3   
   14003c67b:	int3   
   14003c67c:	int3   
   14003c67d:	int3   
   14003c67e:	int3   
   14003c67f:	int3   
   14003c680:	rex push rbp
   14003c682:	sub    rsp,0x20
   14003c686:	mov    rbp,rdx
   14003c689:	mov    ecx,0x1
   14003c68e:	call   0x14002fc94
   14003c693:	add    rsp,0x20
   14003c697:	pop    rbp
   14003c698:	ret    
   14003c699:	rex push rbp
   14003c69b:	sub    rsp,0x20
   14003c69f:	mov    rbp,rdx
   14003c6a2:	mov    rcx,QWORD PTR [rbp+0x30]
   14003c6a6:	call   0x14002ad74
   14003c6ab:	add    rsp,0x20
   14003c6af:	pop    rbp
   14003c6b0:	ret    
   14003c6b1:	rex push rbp
   14003c6b3:	sub    rsp,0x30
   14003c6b7:	mov    rbp,rdx
   14003c6ba:	mov    rcx,QWORD PTR [rbp+0x60]
   14003c6be:	call   0x14002ad74
   14003c6c3:	add    rsp,0x30
   14003c6c7:	pop    rbp
   14003c6c8:	ret    
   14003c6c9:	rex push rbp
   14003c6cb:	sub    rsp,0x20
   14003c6cf:	mov    rbp,rdx
   14003c6d2:	mov    rax,QWORD PTR [rcx]
   14003c6d5:	mov    rdx,rcx
   14003c6d8:	mov    ecx,DWORD PTR [rax]
   14003c6da:	call   0x140032d78
   14003c6df:	add    rsp,0x20
   14003c6e3:	pop    rbp
   14003c6e4:	ret    
   14003c6e5:	rex push rbp
   14003c6e7:	sub    rsp,0x40
   14003c6eb:	mov    rbp,rdx
   14003c6ee:	cmp    DWORD PTR [rbp+0x44],0x0
   14003c6f2:	je     0x14003c72b
   14003c6f4:	cmp    DWORD PTR [rbp+0x48],0x0
   14003c6f8:	je     0x14003c721
   14003c6fa:	movsxd rdx,DWORD PTR [rbp+0x40]
   14003c6fe:	mov    rcx,rdx
   14003c701:	mov    rax,rdx
   14003c704:	sar    rax,0x5
   14003c708:	lea    r8,[rip+0x2e3f1]        # 0x14006ab00
   14003c70f:	and    ecx,0x1f
   14003c712:	imul   rcx,rcx,0x58
   14003c716:	mov    rax,QWORD PTR [r8+rax*8]
   14003c71a:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14003c71f:	jmp    0x14003c724
   14003c721:	mov    edx,DWORD PTR [rbp+0x40]
   14003c724:	mov    ecx,edx
   14003c726:	call   0x14002dcf8
   14003c72b:	add    rsp,0x40
   14003c72f:	pop    rbp
   14003c730:	ret    
   14003c731:	rex push rbp
   14003c733:	sub    rsp,0x20
   14003c737:	mov    rbp,rdx
   14003c73a:	mov    ecx,0xa
   14003c73f:	call   0x14002fc94
   14003c744:	add    rsp,0x20
   14003c748:	pop    rbp
   14003c749:	ret    
   14003c74a:	rex push rbp
   14003c74c:	sub    rsp,0x20
   14003c750:	mov    rbp,rdx
   14003c753:	mov    ecx,0xa
   14003c758:	call   0x14002fc94
   14003c75d:	add    rsp,0x20
   14003c761:	pop    rbp
   14003c762:	ret    
   14003c763:	int3   
   14003c764:	int3   
   14003c765:	int3   
   14003c766:	int3   
   14003c767:	int3   
   14003c768:	int3   
   14003c769:	int3   
   14003c76a:	rex push rbp
   14003c76c:	sub    rsp,0x20
   14003c770:	mov    rbp,rdx
   14003c773:	mov    ecx,0xb
   14003c778:	call   0x14002fc94
   14003c77d:	add    rsp,0x20
   14003c781:	pop    rbp
   14003c782:	ret    
   14003c783:	rex push rbp
   14003c785:	sub    rsp,0x40
   14003c789:	mov    rbp,rdx
   14003c78c:	mov    ecx,0x7
   14003c791:	call   0x14002fc94
   14003c796:	add    rsp,0x40
   14003c79a:	pop    rbp
   14003c79b:	ret    
   14003c79c:	rex push rbp
   14003c79e:	sub    rsp,0x20
   14003c7a2:	mov    rbp,rdx
   14003c7a5:	mov    ecx,0x6
   14003c7aa:	call   0x14002fc94
   14003c7af:	add    rsp,0x20
   14003c7b3:	pop    rbp
   14003c7b4:	ret    
   14003c7b5:	rex push rbp
   14003c7b7:	sub    rsp,0x30
   14003c7bb:	mov    rbp,rdx
   14003c7be:	mov    ecx,0x7
   14003c7c3:	call   0x14002fc94
   14003c7c8:	add    rsp,0x30
   14003c7cc:	pop    rbp
   14003c7cd:	ret    
   14003c7ce:	rex push rbp
   14003c7d0:	sub    rsp,0x20
   14003c7d4:	mov    rbp,rdx
   14003c7d7:	mov    rcx,QWORD PTR [rip+0x2a442]        # 0x140066c20
   14003c7de:	call   QWORD PTR [rip+0x8dc]        # 0x14003d0c0
   14003c7e4:	add    rsp,0x20
   14003c7e8:	pop    rbp
   14003c7e9:	ret    
   14003c7ea:	rex push rbp
   14003c7ec:	sub    rsp,0x20
   14003c7f0:	mov    rbp,rdx
   14003c7f3:	mov    ecx,0x1
   14003c7f8:	call   0x14002fc94
   14003c7fd:	add    rsp,0x20
   14003c801:	pop    rbp
   14003c802:	ret    
   14003c803:	rex push rbp
   14003c805:	sub    rsp,0x20
   14003c809:	mov    rbp,rdx
   14003c80c:	cmp    DWORD PTR [rbp+0x80],0x0
   14003c813:	je     0x14003c81f
   14003c815:	mov    ecx,0x8
   14003c81a:	call   0x14002fc94
   14003c81f:	add    rsp,0x20
   14003c823:	pop    rbp
   14003c824:	ret    
   14003c825:	rex push rbp
   14003c827:	sub    rsp,0x30
   14003c82b:	mov    rbp,rdx
   14003c82e:	cmp    DWORD PTR [rbp+0x70],0x0
   14003c832:	je     0x14003c83b
   14003c834:	xor    ecx,ecx
   14003c836:	call   0x14002fc94
   14003c83b:	add    rsp,0x30
   14003c83f:	pop    rbp
   14003c840:	ret    
   14003c841:	rex push rbp
   14003c843:	sub    rsp,0x20
   14003c847:	mov    rbp,rdx
   14003c84a:	mov    ecx,0xd
   14003c84f:	call   0x14002fc94
   14003c854:	add    rsp,0x20
   14003c858:	pop    rbp
   14003c859:	ret    
   14003c85a:	int3   
   14003c85b:	int3   
   14003c85c:	int3   
   14003c85d:	int3   
   14003c85e:	int3   
   14003c85f:	int3   
   14003c860:	int3   
   14003c861:	rex push rbp
   14003c863:	sub    rsp,0x20
   14003c867:	mov    rbp,rdx
   14003c86a:	mov    ecx,0xc
   14003c86f:	call   0x14002fc94
   14003c874:	add    rsp,0x20
   14003c878:	pop    rbp
   14003c879:	ret    
   14003c87a:	rex push rbp
   14003c87c:	sub    rsp,0x20
   14003c880:	mov    rbp,rdx
   14003c883:	mov    ecx,0xd
   14003c888:	call   0x14002fc94
   14003c88d:	add    rsp,0x20
   14003c891:	pop    rbp
   14003c892:	ret    
   14003c893:	rex push rbp
   14003c895:	sub    rsp,0x20
   14003c899:	mov    rbp,rdx
   14003c89c:	mov    ecx,0xc
   14003c8a1:	call   0x14002fc94
   14003c8a6:	add    rsp,0x20
   14003c8aa:	pop    rbp
   14003c8ab:	ret    
   14003c8ac:	rex push rbp
   14003c8ae:	sub    rsp,0x30
   14003c8b2:	mov    rbp,rdx
   14003c8b5:	mov    ecx,DWORD PTR [rbp+0x60]
   14003c8b8:	call   0x14002dcf8
   14003c8bd:	add    rsp,0x30
   14003c8c1:	pop    rbp
   14003c8c2:	ret    
   14003c8c3:	rex push rbp
   14003c8c5:	sub    rsp,0x30
   14003c8c9:	mov    rbp,rdx
   14003c8cc:	mov    ecx,DWORD PTR [rbp+0x50]
   14003c8cf:	call   0x14002dcf8
   14003c8d4:	add    rsp,0x30
   14003c8d8:	pop    rbp
   14003c8d9:	ret    
   14003c8da:	rex push rbp
   14003c8dc:	sub    rsp,0x30
   14003c8e0:	mov    rbp,rdx
   14003c8e3:	mov    rcx,QWORD PTR [rbp+0x40]
   14003c8e7:	call   0x14002ad74
   14003c8ec:	add    rsp,0x30
   14003c8f0:	pop    rbp
   14003c8f1:	ret    
   14003c8f2:	rex push rbp
   14003c8f4:	sub    rsp,0x20
   14003c8f8:	mov    rbp,rdx
   14003c8fb:	mov    rax,QWORD PTR [rcx]
   14003c8fe:	xor    ecx,ecx
   14003c900:	cmp    DWORD PTR [rax],0xc0000017
   14003c906:	sete   cl
   14003c909:	mov    eax,ecx
   14003c90b:	mov    eax,ecx
   14003c90d:	add    rsp,0x20
   14003c911:	pop    rbp
   14003c912:	ret    
   14003c913:	int3   
   14003c914:	int3   
   14003c915:	int3   
   14003c916:	int3   
   14003c917:	int3   
   14003c918:	int3   
   14003c919:	int3   
   14003c91a:	int3   
   14003c91b:	int3   
   14003c91c:	int3   
   14003c91d:	int3   
   14003c91e:	int3   
   14003c91f:	int3   
   14003c920:	rex push rbp
   14003c922:	sub    rsp,0x20
   14003c926:	mov    rbp,rdx
   14003c929:	mov    rax,QWORD PTR [rcx]
   14003c92c:	xor    ecx,ecx
   14003c92e:	cmp    DWORD PTR [rax],0xc0000005
   14003c934:	sete   cl
   14003c937:	mov    eax,ecx
   14003c939:	mov    eax,ecx
   14003c93b:	add    rsp,0x20
   14003c93f:	pop    rbp
   14003c940:	ret    
   14003c941:	rex push rbp
   14003c943:	sub    rsp,0x20
   14003c947:	mov    rbp,rdx
   14003c94a:	call   0x140030408
   14003c94f:	add    rsp,0x20
   14003c953:	pop    rbp
   14003c954:	ret    

Disassembly of section .rdata:

000000014003d000 <.rdata>:
   14003d000:	adc    dl,BYTE PTR [rsi+0x5]
   14003d003:	add    BYTE PTR [rax],al
   14003d005:	add    BYTE PTR [rax],al
   14003d007:	add    BYTE PTR [rax],al
   14003d009:	push   rsi
   14003d00a:	add    eax,0x0
   14003d00f:	add    dh,ch
   14003d011:	push   rbp
   14003d012:	add    eax,0x0
   14003d017:	add    ah,bl
   14003d019:	push   rbp
   14003d01a:	add    eax,0x0
   14003d01f:	add    ah,cl
   14003d021:	push   rbp
   14003d022:	add    eax,0x0
   14003d027:	add    BYTE PTR [rsi+0x555],bh
   14003d02d:	add    BYTE PTR [rax],al
   14003d02f:	add    BYTE PTR [rsi],ah
   14003d031:	push   rsi
   14003d032:	add    eax,0x0
   14003d037:	add    BYTE PTR [rdx+0x56],al
   14003d03a:	add    eax,0x0
	...
   14003d047:	add    BYTE PTR [rdi+rcx*2+0x5],bh
   14003d04b:	add    BYTE PTR [rax],al
   14003d04d:	add    BYTE PTR [rax],al
   14003d04f:	add    BYTE PTR [rax+0x54f],cl
   14003d055:	add    BYTE PTR [rax],al
   14003d057:	add    BYTE PTR [rsi+0x54f],dl
   14003d05d:	add    BYTE PTR [rax],al
   14003d05f:	add    BYTE PTR [rdi+rcx*2+0x5],ch
   14003d066:	add    BYTE PTR [rax],al
   14003d068:	ret    0x54f
   14003d06b:	add    BYTE PTR [rax],al
   14003d06d:	add    BYTE PTR [rax],al
   14003d06f:	add    dl,dl
   14003d071:	rex.WRXB add rax,0x0
   14003d077:	add    al,ch
   14003d079:	rex.WRXB add rax,0x0
   14003d07f:	add    dh,dh
   14003d081:	rex.WRXB add rax,0x0
   14003d087:	add    BYTE PTR [rax],cl
   14003d089:	push   rax
   14003d08a:	add    eax,0x0
   14003d08f:	add    BYTE PTR [rax],bl
   14003d091:	push   rax
   14003d092:	add    eax,0x0
   14003d097:	add    BYTE PTR [rsi],ch
   14003d099:	push   rax
   14003d09a:	add    eax,0x0
   14003d09f:	add    BYTE PTR [rax+rdx*2+0x5],al
   14003d0a3:	add    BYTE PTR [rax],al
   14003d0a5:	add    BYTE PTR [rax],al
   14003d0a7:	add    BYTE PTR [rsi+0x50],cl
   14003d0aa:	add    eax,0x0
   14003d0af:	add    BYTE PTR [rsi+0x50],bl
   14003d0b2:	add    eax,0x0
   14003d0b7:	add    BYTE PTR [rax+rdx*2+0x5],dh
   14003d0bb:	add    BYTE PTR [rax],al
   14003d0bd:	add    BYTE PTR [rax],al
   14003d0bf:	add    BYTE PTR [rdx+0x550],cl
   14003d0c5:	add    BYTE PTR [rax],al
   14003d0c7:	add    BYTE PTR [rdx+0x550],ah
   14003d0cd:	add    BYTE PTR [rax],al
   14003d0cf:	add    BYTE PTR [rsi+0x550],bh
   14003d0d5:	add    BYTE PTR [rax],al
   14003d0d7:	add    dh,dl
   14003d0d9:	push   rax
   14003d0da:	add    eax,0x0
   14003d0df:	add    dh,ch
   14003d0e1:	push   rax
   14003d0e2:	add    eax,0x0
   14003d0e7:	add    ah,bh
   14003d0e9:	push   rax
   14003d0ea:	add    eax,0x0
   14003d0ef:	add    BYTE PTR [rsi],cl
   14003d0f1:	push   rcx
   14003d0f2:	add    eax,0x0
   14003d0f7:	add    BYTE PTR [rdx],ch
   14003d0f9:	push   rcx
   14003d0fa:	add    eax,0x0
   14003d0ff:	add    BYTE PTR [rax+0x51],cl
   14003d102:	add    eax,0x0
   14003d107:	add    BYTE PTR [rcx+rdx*2+0x5],bl
   14003d10b:	add    BYTE PTR [rax],al
   14003d10d:	add    BYTE PTR [rax],al
   14003d10f:	add    BYTE PTR [rax+0x51],ch
   14003d112:	add    eax,0x0
   14003d117:	add    BYTE PTR [rdx+0x51],bh
   14003d11a:	add    eax,0x0
   14003d11f:	add    BYTE PTR [rax+0x551],cl
   14003d125:	add    BYTE PTR [rax],al
   14003d127:	add    BYTE PTR [rcx+rdx*2+0x5],dl
   14003d12e:	add    BYTE PTR [rax],al
   14003d130:	movabs ds:0x6800000000000551,al
   14003d139:	rex.WRXB add rax,0x0
   14003d13f:	add    dh,al
   14003d141:	push   rcx
   14003d142:	add    eax,0x0
   14003d147:	add    ah,bl
   14003d149:	push   rcx
   14003d14a:	add    eax,0x0
   14003d14f:	add    dh,dh
   14003d151:	push   rcx
   14003d152:	add    eax,0x0
   14003d157:	add    BYTE PTR [rdx],al
   14003d159:	push   rdx
   14003d15a:	add    eax,0x0
   14003d15f:	add    BYTE PTR [rdx],dl
   14003d161:	push   rdx
   14003d162:	add    eax,0x0
   14003d167:	add    BYTE PTR [rdx+rdx*2],ah
   14003d16a:	add    eax,0x0
   14003d16f:	add    BYTE PTR [rax],bh
   14003d171:	push   rdx
   14003d172:	add    eax,0x0
   14003d177:	add    BYTE PTR [rsi+0x52],al
   14003d17a:	add    eax,0x0
   14003d17f:	add    BYTE PTR [rax+0x52],bl
   14003d182:	add    eax,0x0
   14003d187:	add    BYTE PTR [rax+0x52],ch
   14003d18a:	add    eax,0x0
   14003d18f:	add    BYTE PTR [rdx+0x52],bh
   14003d192:	add    eax,0x0
   14003d197:	add    BYTE PTR [rax+0x552],cl
   14003d19d:	add    BYTE PTR [rax],al
   14003d19f:	add    BYTE PTR [rsi+0x552],bl
   14003d1a5:	add    BYTE PTR [rax],al
   14003d1a7:	add    BYTE PTR [rdx+0x552],dh
   14003d1ad:	add    BYTE PTR [rax],al
   14003d1af:	add    dh,al
   14003d1b1:	push   rdx
   14003d1b2:	add    eax,0x0
   14003d1b7:	add    dl,bl
   14003d1b9:	push   rdx
   14003d1ba:	add    eax,0x0
   14003d1bf:	add    ah,dh
   14003d1c1:	push   rdx
   14003d1c2:	add    eax,0x0
   14003d1c7:	add    BYTE PTR [rdx],cl
   14003d1c9:	push   rbx
   14003d1ca:	add    eax,0x0
   14003d1cf:	add    BYTE PTR [rax],bl
   14003d1d1:	push   rbx
   14003d1d2:	add    eax,0x0
   14003d1d7:	add    BYTE PTR [rax],ch
   14003d1d9:	push   rbx
   14003d1da:	add    eax,0x0
   14003d1df:	add    BYTE PTR [rax],bh
   14003d1e1:	push   rbx
   14003d1e2:	add    eax,0x0
   14003d1e7:	add    BYTE PTR [rsi+0x53],al
   14003d1ea:	add    eax,0x0
   14003d1ef:	add    BYTE PTR [rbx+rdx*2+0x5],dl
   14003d1f3:	add    BYTE PTR [rax],al
   14003d1f5:	add    BYTE PTR [rax],al
   14003d1f7:	add    BYTE PTR [rsi+0x53],bl
   14003d1fa:	add    eax,0x0
   14003d1ff:	add    BYTE PTR [rdx+0x53],ch
   14003d202:	add    eax,0x0
   14003d207:	add    BYTE PTR [rsi+0x53],dh
   14003d20a:	add    eax,0x0
   14003d20f:	add    BYTE PTR [rdx+0x553],al
   14003d215:	add    BYTE PTR [rax],al
   14003d217:	add    BYTE PTR [rbx+rdx*2+0x5],dl
   14003d21e:	add    BYTE PTR [rax],al
   14003d220:	scas   al,BYTE PTR es:[rdi]
   14003d221:	push   rbx
   14003d222:	add    eax,0x0
   14003d227:	add    dh,al
   14003d229:	push   rbx
   14003d22a:	add    eax,0x0
   14003d22f:	add    al,ah
   14003d231:	push   rbx
   14003d232:	add    eax,0x0
   14003d237:	add    dl,bh
   14003d239:	push   rbx
   14003d23a:	add    eax,0x0
   14003d23f:	add    BYTE PTR [rsp+rdx*2],dl
   14003d242:	add    eax,0x0
   14003d247:	add    BYTE PTR [rsp+rdx*2],ah
   14003d24a:	add    eax,0x0
   14003d24f:	add    BYTE PTR [rsi],bh
   14003d251:	push   rsp
   14003d252:	add    eax,0x0
   14003d257:	add    BYTE PTR [rsi+0x54],cl
   14003d25a:	add    eax,0x0
   14003d25f:	add    BYTE PTR [rsi+0x54],bl
   14003d262:	add    eax,0x0
   14003d267:	add    BYTE PTR [rax+0x54],dh
   14003d26a:	add    eax,0x0
   14003d26f:	add    BYTE PTR [rax+0x554],al
   14003d275:	add    BYTE PTR [rax],al
   14003d277:	add    BYTE PTR [rdx+0x554],dl
   14003d27d:	add    BYTE PTR [rax],al
   14003d27f:	add    BYTE PTR [rsi+0x554],bl
   14003d285:	add    BYTE PTR [rax],al
   14003d287:	add    dh,al
   14003d289:	push   rsp
   14003d28a:	add    eax,0x0
   14003d28f:	add    dh,dl
   14003d291:	push   rsp
   14003d292:	add    eax,0x0
   14003d297:	add    ah,ch
   14003d299:	push   rsp
   14003d29a:	add    eax,0x0
   14003d29f:	add    dh,bh
   14003d2a1:	push   rsp
   14003d2a2:	add    eax,0x0
   14003d2a7:	add    BYTE PTR [rax],dl
   14003d2a9:	push   rbp
   14003d2aa:	add    eax,0x0
   14003d2af:	add    BYTE PTR [rdx],ah
   14003d2b1:	push   rbp
   14003d2b2:	add    eax,0x0
   14003d2b7:	add    BYTE PTR [rdx*2+0x5],dh
   14003d2be:	add    BYTE PTR [rax],al
   14003d2c0:	rex.RX push rbp
   14003d2c2:	add    eax,0x0
   14003d2c7:	add    BYTE PTR [rax+0x55],ah
   14003d2ca:	add    eax,0x0
   14003d2cf:	add    BYTE PTR [rdx+0x55],dh
   14003d2d2:	add    eax,0x0
   14003d2d7:	add    BYTE PTR [rdx+0x4f],bl
   14003d2da:	add    eax,0x0
   14003d2df:	add    BYTE PTR [rdi+rcx*2+0x5],cl
   14003d2e3:	add    BYTE PTR [rax],al
   14003d2e5:	add    BYTE PTR [rax],al
   14003d2e7:	add    BYTE PTR [rdx],bh
   14003d2e9:	rex.WRXB add rax,0x0
   14003d2ef:	add    BYTE PTR [rdx],ch
   14003d2f1:	rex.WRXB add rax,0x0
   14003d2f7:	add    BYTE PTR [rdx],bl
   14003d2f9:	rex.WRXB add rax,0x0
   14003d2ff:	add    BYTE PTR [rdx],cl
   14003d301:	rex.WRXB add rax,0x0
   14003d307:	add    dh,dh
   14003d309:	rex.WRX add rax,0x0
   14003d30f:	add    ah,ah
   14003d311:	rex.WRX add rax,0x0
   14003d317:	add    al,bl
   14003d319:	rex.WRX add rax,0x0
   14003d31f:	add    dl,cl
   14003d321:	rex.WRX add rax,0x0
   14003d327:	add    dl,al
   14003d329:	rex.WRX add rax,0x0
   14003d32f:	add    BYTE PTR [rsi+0x54e],dh
   14003d335:	add    BYTE PTR [rax],al
   14003d337:	add    BYTE PTR [rsi+0x54e],ah
   14003d33d:	add    BYTE PTR [rax],al
   14003d33f:	add    BYTE PTR [rsi+0x551],dh
   14003d345:	add    BYTE PTR [rax],al
   14003d347:	add    BYTE PTR [rax+0x54e],dl
	...
   14003d355:	add    BYTE PTR [rax],al
   14003d357:	add    ah,cl
   14003d359:	push   rsi
   14003d35a:	add    eax,0x0
   14003d35f:	add    BYTE PTR [rsi+0x57],bl
   14003d362:	add    eax,0x0
   14003d367:	add    BYTE PTR [rax+0x57],al
   14003d36a:	add    eax,0x0
   14003d36f:	add    BYTE PTR [rdi+rdx*2],ah
   14003d372:	add    eax,0x0
   14003d377:	add    BYTE PTR [rax],al
   14003d379:	push   rdi
   14003d37a:	add    eax,0x0
   14003d37f:	add    ah,ah
   14003d381:	push   rsi
   14003d382:	add    eax,0x0
   14003d387:	add    BYTE PTR [rsi+rdx*2+0x5],dh
   14003d38e:	add    BYTE PTR [rax],al
   14003d390:	nop
   14003d391:	push   rsi
   14003d392:	add    eax,0x0
   14003d397:	add    BYTE PTR [rax+0x56],dh
   14003d39a:	add    eax,0x0
	...
   14003d3a7:	add    BYTE PTR [rax+0x557],bl
   14003d3ad:	add    BYTE PTR [rax],al
   14003d3af:	add    BYTE PTR [rdx+0x557],al
	...
   14003d3bd:	add    BYTE PTR [rax],al
   14003d3bf:	add    BYTE PTR [rbp+rdx*2+0x5],cl
	...
   14003d3e6:	add    BYTE PTR [rax],al
   14003d3e8:	fsubr  DWORD PTR [rbx+0x14002]
   14003d3ee:	add    BYTE PTR [rax],al
   14003d3f0:	pop    rsp
   14003d3f1:	sub    BYTE PTR [rbx],al
   14003d3f3:	rex add DWORD PTR [rax],eax
   14003d3f6:	add    BYTE PTR [rax],al
   14003d3f8:	shl    BYTE PTR [rdi+0x3],0x40
   14003d3fc:	add    DWORD PTR [rax],eax
   14003d3fe:	add    BYTE PTR [rax],al
   14003d400:	(bad)  
   14003d401:	sub    eax,0x14003
	...
   14003d416:	add    BYTE PTR [rax],al
   14003d418:	sbb    BYTE PTR [rbx+rax*1+0x140],dh
   14003d41f:	add    BYTE PTR [rsp+rbp*4+0x14002],bh
	...
   14003d442:	add    BYTE PTR [rax],al
   14003d444:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003d445:	push   rsp
   14003d446:	(bad)  
   14003d447:	push   rbp
   14003d448:	add    BYTE PTR [rax],al
   14003d44a:	add    BYTE PTR [rax],al
   14003d44c:	add    al,BYTE PTR [rax]
   14003d44e:	add    BYTE PTR [rax],al
   14003d450:	push   0xffffffff80000000
   14003d455:	(bad)  
   14003d456:	add    eax,0x5058000
   14003d45b:	add    BYTE PTR [rax],al
   14003d45d:	add    BYTE PTR [rax],al
   14003d45f:	add    BYTE PTR [rax+0x4b],cl
   14003d462:	rex.RB pop r9
   14003d464:	pop    rdi
   14003d465:	push   rbp
   14003d466:	push   rbx
   14003d467:	rex.RB push r10
   14003d469:	push   rbx
   14003d46a:	add    BYTE PTR [rax],al
   14003d46c:	add    BYTE PTR [rax],al
   14003d46e:	add    BYTE PTR [rax],al
   14003d470:	rex.W
   14003d471:	rex.WXB
   14003d472:	rex.RB pop r9
   14003d474:	pop    rdi
   14003d475:	rex.WR
   14003d476:	rex.WRXB
   14003d477:	rex.XB
   14003d478:	rex.B
   14003d479:	rex.WR pop rdi
   14003d47b:	rex.WRB
   14003d47c:	rex.B
   14003d47d:	rex.XB
   14003d47e:	rex.W
   14003d47f:	rex.WB
   14003d480:	rex.WRX
   14003d481:	add    BYTE PTR [r8],r8b
   14003d484:	add    BYTE PTR [rax],al
   14003d486:	add    BYTE PTR [rax],al
   14003d488:	rex.W
   14003d489:	rex.WXB
   14003d48a:	rex.RB pop r9
   14003d48c:	pop    rdi
   14003d48d:	rex.XB push r13
   14003d48f:	push   rdx
   14003d490:	push   rdx
   14003d491:	rex.RB
   14003d492:	rex.WRX push rsp
   14003d494:	pop    rdi
   14003d495:	push   rbp
   14003d496:	push   rbx
   14003d497:	rex.RB push r10
   14003d499:	add    BYTE PTR [rax],al
   14003d49b:	add    BYTE PTR [rax],al
   14003d49d:	add    BYTE PTR [rax],al
   14003d49f:	add    BYTE PTR [rax+0x4b],cl
   14003d4a2:	rex.RB pop r9
   14003d4a4:	pop    rdi
   14003d4a5:	rex.XB push r13
   14003d4a7:	push   rdx
   14003d4a8:	push   rdx
   14003d4a9:	rex.RB
   14003d4aa:	rex.WRX push rsp
   14003d4ac:	pop    rdi
   14003d4ad:	rex.XB
   14003d4ae:	rex.WRXB
   14003d4af:	rex.WRX
   14003d4b0:	rex.RX
   14003d4b1:	rex.WB
   14003d4b2:	rex.RXB add BYTE PTR [r8],r8b
   14003d4b5:	add    BYTE PTR [rax],al
   14003d4b7:	add    BYTE PTR [rax+0x4b],cl
   14003d4ba:	rex.RB pop r9
   14003d4bc:	pop    rdi
   14003d4bd:	rex.XB
   14003d4be:	rex.WR
   14003d4bf:	push   r11
   14003d4c1:	push   rbx
   14003d4c2:	rex.RB push r11
   14003d4c4:	pop    rdi
   14003d4c5:	push   rdx
   14003d4c6:	rex.WRXB
   14003d4c7:	rex.WRXB push r12
   14003d4c9:	add    BYTE PTR [rax],al
   14003d4cb:	add    BYTE PTR [rax],al
   14003d4cd:	add    BYTE PTR [rax],al
   14003d4cf:	add    BYTE PTR [rbx+0x61],al
   14003d4d2:	outs   dx,BYTE PTR ds:[rsi]
   14003d4d3:	outs   dx,BYTE PTR ds:[rsi]
   14003d4d4:	outs   dx,DWORD PTR ds:[rsi]
   14003d4d5:	je     0x14003d4f7
   14003d4d7:	jno    0x14003d54e
   14003d4d9:	gs jb  0x14003d555
   14003d4dc:	and    BYTE PTR [rbx+0x65],ch
   14003d4df:	jns    0x14003d501
   14003d4e1:	jbe    0x14003d544
   14003d4e3:	ins    BYTE PTR es:[rdi],dx
   14003d4e4:	jne    0x14003d54b
   14003d4e6:	and    BYTE PTR [rip+0x73255c73],ah        # 0x1b329315f
   14003d4ec:	pop    rsp
   14003d4ed:	and    eax,0x25203a73
   14003d4f2:	ins    BYTE PTR es:[rdi],dx
   14003d4f3:	add    BYTE PTR fs:[rax],al
   14003d4f6:	add    BYTE PTR [rax],al
   14003d4f8:	rex.XB (bad) 
   14003d4fa:	outs   dx,BYTE PTR ds:[rsi]
   14003d4fb:	outs   dx,BYTE PTR ds:[rsi]
   14003d4fc:	outs   dx,DWORD PTR ds:[rsi]
   14003d4fd:	je     0x14003d51f
   14003d4ff:	outs   dx,DWORD PTR ds:[rsi]
   14003d500:	jo     0x14003d567
   14003d502:	outs   dx,BYTE PTR ds:[rsi]
   14003d503:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14003d507:	and    BYTE PTR [rdx+0x65],dh
   14003d50a:	imul   esi,DWORD PTR [ebx+0x74],0x25207972
   14003d512:	jae    0x14003d570
   14003d514:	and    eax,0x25203a73
   14003d519:	ins    BYTE PTR es:[rdi],dx
   14003d51a:	add    BYTE PTR fs:[rax],al
   14003d51d:	add    BYTE PTR [rax],al
   14003d51f:	add    BYTE PTR [rcx+0x6e],cl
   14003d522:	jbe    0x14003d585
   14003d524:	ins    BYTE PTR es:[rdi],dx
   14003d525:	imul   esp,DWORD PTR [rax+riz*1+0x6b],0x614e7965
   14003d52d:	ins    DWORD PTR es:[rdi],dx
   14003d52e:	and    BYTE PTR gs:[rcx+0x6e],ch
   14003d532:	and    BYTE PTR [rbp+riz*2+0x6c],al
   14003d536:	gs je  0x14003d59e
   14003d539:	push   rsi
   14003d53a:	(bad)  
   14003d53b:	ins    BYTE PTR es:[rdi],dx
   14003d53c:	jne    0x14003d5a3
   14003d53e:	or     al,BYTE PTR [rax]
   14003d540:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003d542:	jbe    0x14003d5a5
   14003d544:	ins    BYTE PTR es:[rdi],dx
   14003d545:	imul   esp,DWORD PTR [rax+riz*1+0x6b],0x61567965
   14003d54d:	ins    BYTE PTR es:[rdi],dx
   14003d54e:	jne    0x14003d5b5
   14003d550:	and    BYTE PTR [rcx+0x6e],ch
   14003d553:	and    BYTE PTR [rbp+riz*2+0x6c],al
   14003d557:	gs je  0x14003d5bf
   14003d55a:	push   rsi
   14003d55b:	(bad)  
   14003d55c:	ins    BYTE PTR es:[rdi],dx
   14003d55d:	jne    0x14003d5c4
   14003d55f:	or     al,BYTE PTR [rax]
   14003d561:	add    BYTE PTR [rax],al
   14003d563:	add    BYTE PTR [rax],al
   14003d565:	add    BYTE PTR [rax],al
   14003d567:	add    BYTE PTR [rsi+0x61],al
   14003d56a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003d572:	fs gs ins BYTE PTR es:[rdi],dx
   14003d575:	gs je  0x14003d5dd
   14003d578:	and    BYTE PTR [rsi+0x61],dh
   14003d57b:	ins    BYTE PTR es:[rdi],dx
   14003d57c:	jne    0x14003d5e3
   14003d57e:	and    BYTE PTR [rip+0x73255c73],ah        # 0x1b32931f7
   14003d584:	cmp    ah,BYTE PTR [rax]
   14003d586:	and    eax,0x64
   14003d58b:	add    BYTE PTR [rax],al
   14003d58d:	add    BYTE PTR [rax],al
   14003d58f:	add    BYTE PTR [rsi+0x61],al
   14003d592:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003d59a:	movsxd esi,DWORD PTR [rdx+0x65]
   14003d59d:	(bad)  
   14003d59e:	je     0x14003d605
   14003d5a0:	and    BYTE PTR [rbx+0x65],ch
   14003d5a3:	jns    0x14003d5c5
   14003d5a5:	and    eax,0x25203a73
   14003d5aa:	add    BYTE PTR fs:[rax],al
   14003d5ad:	add    BYTE PTR [rax],al
   14003d5af:	add    BYTE PTR [rsi+0x61],al
   14003d5b2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003d5ba:	jae    0x14003d621
   14003d5bc:	je     0x14003d5de
   14003d5be:	jbe    0x14003d621
   14003d5c0:	ins    BYTE PTR es:[rdi],dx
   14003d5c1:	jne    0x14003d628
   14003d5c3:	cmp    ah,BYTE PTR [rax]
   14003d5c5:	and    eax,0x73255c73
   14003d5ca:	pop    rsp
   14003d5cb:	and    eax,0x25203a73
   14003d5d0:	add    BYTE PTR fs:[rax],al
   14003d5d3:	add    BYTE PTR [rax],al
   14003d5d5:	add    BYTE PTR [rax],al
   14003d5d7:	add    BYTE PTR [rcx+rbp*2+0x64],al
   14003d5db:	and    BYTE PTR [rsi+0x6f],ch
   14003d5de:	je     0x14003d600
   14003d5e0:	imul   bp,WORD PTR [rsi+0x64],0x6620
   14003d5e6:	imul   ebp,DWORD PTR [rbp+riz*2+0x2f],0x65726964
   14003d5ee:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003d5f2:	jns    0x14003d62e
   14003d5f4:	and    BYTE PTR [rdx],ah
   14003d5f6:	and    eax,0x2273
   14003d5fb:	add    BYTE PTR [rax],al
   14003d5fd:	add    BYTE PTR [rax],al
   14003d5ff:	add    BYTE PTR [rsi+0x6f],al
   14003d602:	jne    0x14003d672
   14003d604:	and    BYTE PTR fs:[rdx],ah
   14003d607:	and    eax,0x2273
   14003d60c:	add    BYTE PTR [rax],al
   14003d60e:	add    BYTE PTR [rax],al
   14003d610:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003d612:	jne    0x14003d680
   14003d614:	and    BYTE PTR fs:[rsi+0x6f],ch
   14003d618:	je     0x14003d63a
   14003d61a:	movsxd esi,DWORD PTR [rdx+0x65]
   14003d61d:	(bad)  
   14003d61e:	je     0x14003d685
   14003d620:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14003d624:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003d629:	jns    0x14003d64b
   14003d62b:	and    eax,0x25282073
   14003d630:	sub    DWORD PTR fs:[rsi],ebp
   14003d633:	add    BYTE PTR [rax],al
   14003d635:	add    BYTE PTR [rax],al
   14003d637:	add    BYTE PTR [rcx+0x6c],al
   14003d63a:	jb     0x14003d6a1
   14003d63c:	(bad)  
   14003d63d:	fs jns 0x14003d660
   14003d640:	jb     0x14003d6a7
   14003d642:	ins    DWORD PTR es:[rdi],dx
   14003d643:	outs   dx,DWORD PTR ds:[rsi]
   14003d644:	jbe    0x14003d6ab
   14003d646:	cmp    ah,BYTE PTR fs:[rax]
   14003d649:	and    eax,0x73
   14003d64e:	add    BYTE PTR [rax],al
   14003d650:	rex.R
   14003d651:	gs ins BYTE PTR es:[rdi],dx
   14003d653:	gs je  0x14003d6bb
   14003d656:	and    BYTE PTR fs:[rsi+0x69],ah
   14003d65a:	ins    BYTE PTR es:[rdi],dx
   14003d65b:	and    BYTE PTR gs:[rip+0x61460073],ah        # 0x1a149d6d5
   14003d662:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003d66a:	fs gs ins BYTE PTR es:[rdi],dx
   14003d66d:	gs je  0x14003d6d5
   14003d670:	and    BYTE PTR [rip+0x25203a73],ah        # 0x1652410e9
   14003d676:	add    BYTE PTR fs:[rbp+riz*2+0x6c],al
   14003d67b:	gs je  0x14003d6e7
   14003d67e:	outs   dx,BYTE PTR ds:[rsi]
   14003d67f:	and    BYTE PTR [eip+0x5c0073],ah        # 0x1405fd6f9
   14003d686:	add    BYTE PTR [rax],al
   14003d688:	rex.R
   14003d689:	gs ins BYTE PTR es:[rdi],dx
   14003d68b:	gs je  0x14003d6f7
   14003d68e:	outs   dx,BYTE PTR ds:[rsi]
   14003d68f:	and    BYTE PTR [ebx+0x25],bl
   14003d693:	jae    0x14003d6f2
   14003d695:	and    BYTE PTR [rcx+0x6e],ch
   14003d698:	and    BYTE PTR [rbx+0x25],bl
   14003d69b:	jae    0x14003d6fa
   14003d69d:	or     al,BYTE PTR [rax]
   14003d69f:	add    BYTE PTR [rbx+0x61],al
   14003d6a2:	outs   dx,BYTE PTR ds:[rsi]
   14003d6a3:	outs   dx,BYTE PTR ds:[rsi]
   14003d6a4:	outs   dx,DWORD PTR ds:[rsi]
   14003d6a5:	je     0x14003d6c7
   14003d6a7:	movsxd ebp,DWORD PTR [rdi+0x70]
   14003d6aa:	jns    0x14003d6cc
   14003d6ac:	outs   dx,BYTE PTR ds:[rsi]
   14003d6ad:	outs   dx,DWORD PTR ds:[rsi]
   14003d6ae:	outs   dx,BYTE PTR ds:[rsi]
   14003d6af:	sub    eax,0x73697865
   14003d6b4:	je     0x14003d71b
   14003d6b6:	outs   dx,BYTE PTR ds:[rsi]
   14003d6b7:	je     0x14003d6d9
   14003d6b9:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x2520
   14003d6c0:	jae    0x14003d6c2
   14003d6c2:	add    BYTE PTR [rax],al
   14003d6c4:	add    BYTE PTR [rax],al
   14003d6c6:	add    BYTE PTR [rax],al
   14003d6c8:	rex.RB push r10
   14003d6ca:	push   rdx
   14003d6cb:	rex.WRXB push r10
   14003d6cd:	cmp    ah,BYTE PTR [rax]
   14003d6cf:	push   rsp
   14003d6d0:	push   0x69662065
   14003d6d5:	ins    BYTE PTR es:[rdi],dx
   14003d6d6:	and    BYTE PTR gs:[rbx+0x6f],ah
   14003d6da:	jo     0x14003d755
   14003d6dc:	and    BYTE PTR [rdi+0x70],ch
   14003d6df:	gs jb  0x14003d743
   14003d6e2:	je     0x14003d74d
   14003d6e4:	outs   dx,DWORD PTR ds:[rsi]
   14003d6e5:	outs   dx,BYTE PTR ds:[rsi]
   14003d6e6:	and    BYTE PTR [rsi+0x61],ah
   14003d6e9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7525203a
   14003d6f1:	add    BYTE PTR [rax],al
   14003d6f3:	add    BYTE PTR [rax],al
   14003d6f5:	add    BYTE PTR [rax],al
   14003d6f7:	add    BYTE PTR [rbx+0x6f],al
   14003d6fa:	jo     0x14003d775
   14003d6fc:	and    BYTE PTR [rdi],ah
   14003d6fe:	and    eax,0x74202773
   14003d703:	outs   dx,DWORD PTR ds:[rsi]
   14003d704:	and    BYTE PTR [rdi],ah
   14003d706:	and    eax,0x2773
   14003d70b:	add    BYTE PTR [rax],al
   14003d70d:	add    BYTE PTR [rax],al
   14003d70f:	add    BYTE PTR [rsi+rbp*2],bh
   14003d712:	outs   dx,DWORD PTR ds:[rsi]
   14003d713:	and    BYTE PTR [rax+0x61],dh
   14003d716:	jb     0x14003d779
   14003d718:	ins    DWORD PTR es:[rdi],dx
   14003d719:	gs je  0x14003d781
   14003d71c:	jb     0x14003d75c
   14003d71e:	add    BYTE PTR [rax],al
   14003d720:	jne    0x14003d790
   14003d722:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003d729:	push   rsi
   14003d72a:	push   rbx
   14003d72b:	outs   dx,DWORD PTR ds:[rsi]
   14003d72c:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003d72f:	add    BYTE PTR [rax+rsi*2],bh
   14003d732:	(bad)  
   14003d733:	je     0x14003d79d
   14003d735:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14003d739:	jo     0x14003d7ad
   14003d73b:	outs   dx,DWORD PTR ds:[rsi]
   14003d73c:	jbe    0x14003d7a7
   14003d73e:	fs gs jb 0x14003d780
   14003d742:	add    BYTE PTR [rax],al
   14003d744:	add    BYTE PTR [rax],al
   14003d746:	add    BYTE PTR [rax],al
   14003d748:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003d74f:	push   rsi
   14003d750:	push   rbx
   14003d751:	outs   dx,DWORD PTR ds:[rsi]
   14003d752:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003d755:	add    BYTE PTR [rax],al
   14003d757:	add    BYTE PTR [rax+rcx*2],bh
   14003d75a:	push   rdi
   14003d75b:	rex.WRX
   14003d75c:	rex.R
   14003d75d:	and    BYTE PTR ds:[rax+rsi*2],bh
   14003d761:	jb     0x14003d7c8
   14003d763:	jbe    0x14003d7ac
   14003d765:	imul   ebp,DWORD PTR [rsi+0x61],0x3e79654b
   14003d76c:	and    BYTE PTR [rbx+rax*2],bh
   14003d76f:	jne    0x14003d7e4
   14003d771:	je     0x14003d7e2
   14003d773:	ins    DWORD PTR es:[rdi],dx
   14003d774:	imul   edi,DWORD PTR [rdx+0x65],0x6e694764
   14003d77b:	(bad)  
   14003d77c:	rex.R
   14003d77d:	rex.WR
   14003d77e:	rex.WR
   14003d77f:	rex.WRX (bad) 
   14003d781:	ins    DWORD PTR es:[rdi],dx
   14003d782:	gs add BYTE PTR ds:[rax],al
   14003d786:	add    BYTE PTR [rax],al
   14003d788:	jne    0x14003d7f8
   14003d78a:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003d791:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x4c4c44
   14003d799:	add    BYTE PTR [rax],al
   14003d79b:	add    BYTE PTR [rax],al
   14003d79d:	add    BYTE PTR [rax],al
   14003d79f:	add    BYTE PTR [rax+rcx*2],bh
   14003d7a2:	push   rdi
   14003d7a3:	rex.WRX
   14003d7a4:	rex.R
   14003d7a5:	and    BYTE PTR ds:[rax+rsi*2],bh
   14003d7a9:	jb     0x14003d810
   14003d7ab:	jbe    0x14003d7f4
   14003d7ad:	imul   ebp,DWORD PTR [rsi+0x61],0x3e79654b
   14003d7b4:	and    BYTE PTR [rbx+rax*2],bh
   14003d7b7:	jne    0x14003d82c
   14003d7b9:	je     0x14003d82a
   14003d7bb:	ins    DWORD PTR es:[rdi],dx
   14003d7bc:	imul   edi,DWORD PTR [rdx+0x65],0x6e694764
   14003d7c3:	(bad)  
   14003d7c4:	rex.R
   14003d7c5:	rex.WR
   14003d7c6:	rex.WR
   14003d7c7:	rex.WRX (bad) 
   14003d7c9:	ins    DWORD PTR es:[rdi],dx
   14003d7ca:	gs and BYTE PTR ds:[rcx+rbp*2],bh
   14003d7cf:	outs   dx,BYTE PTR ds:[rsi]
   14003d7d0:	jae    0x14003d846
   14003d7d2:	(bad)  
   14003d7d3:	ins    BYTE PTR es:[rdi],dx
   14003d7d4:	ins    BYTE PTR es:[rdi],dx
   14003d7d5:	push   rax
   14003d7d6:	(bad)  
   14003d7d7:	je     0x14003d841
   14003d7d9:	add    BYTE PTR ds:[rax],al
   14003d7dc:	add    BYTE PTR [rax],al
   14003d7de:	add    BYTE PTR [rax],al
   14003d7e0:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003d7e7:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x4c4c44
   14003d7ef:	add    BYTE PTR [rax+rcx*2],bh
   14003d7f2:	push   rdi
   14003d7f3:	rex.WRX
   14003d7f4:	rex.R
   14003d7f5:	and    BYTE PTR ds:[rax+rbp*2],bh
   14003d7f9:	(bad)  
   14003d7fa:	jb     0x14003d860
   14003d7fc:	ja     0x14003d85f
   14003d7fe:	jb     0x14003d865
   14003d800:	rex.WB
   14003d801:	rex.R
   14003d802:	and    BYTE PTR ds:[rcx+rbp*2],bh
   14003d806:	outs   dx,BYTE PTR ds:[rsi]
   14003d807:	push   ax
   14003d809:	(bad)  
   14003d80a:	je     0x14003d874
   14003d80c:	and    BYTE PTR ds:[rsi+riz*2],bh
   14003d810:	ins    BYTE PTR es:[rdi],dx
   14003d811:	(bad)  
   14003d812:	addr32 jae 0x14003d853
   14003d815:	add    BYTE PTR [rax],al
   14003d817:	add    BYTE PTR [rcx+0x6e],ch
   14003d81a:	jae    0x14003d890
   14003d81c:	(bad)  
   14003d81d:	ins    BYTE PTR es:[rdi],dx
   14003d81e:	ins    BYTE PTR es:[rdi],dx
   14003d81f:	push   rdx
   14003d820:	outs   dx,DWORD PTR ds:[rsi]
   14003d821:	outs   dx,DWORD PTR ds:[rsi]
   14003d822:	je     0x14003d868
   14003d824:	jb     0x14003d88f
   14003d826:	jbe    0x14003d88d
   14003d828:	jb     0x14003d82a
   14003d82a:	add    BYTE PTR [rax],al
   14003d82c:	add    BYTE PTR [rax],al
   14003d82e:	add    BYTE PTR [rax],al
   14003d830:	or     DWORD PTR [rax],eax
	...
   14003d83e:	add    BYTE PTR [rax],al
   14003d840:	or     BYTE PTR [rax],al
	...
   14003d856:	add    BYTE PTR [rax],al
   14003d858:	add    DWORD PTR [rax],eax
	...
   14003d87a:	add    BYTE PTR [rax],al
   14003d87c:	sbb    al,0x0
   14003d87e:	add    BYTE PTR [rax],al
   14003d880:	adc    BYTE PTR [rax],al
   14003d882:	add    BYTE PTR [rax],al
   14003d884:	adc    BYTE PTR [rax],al
   14003d886:	add    BYTE PTR [rax],al
   14003d888:	add    al,BYTE PTR [rax]
	...
   14003d8a2:	add    BYTE PTR [rax],al
   14003d8a4:	jbe    0x14003d8a6
   14003d8a6:	push   rbx
   14003d8a7:	add    BYTE PTR [rdi+0x0],ch
   14003d8aa:	movsxd eax,DWORD PTR [rax]
   14003d8ac:	imul   eax,DWORD PTR [rax],0x65
   14003d8af:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003d8b3:	add    BYTE PTR [rax],ah
   14003d8b5:	add    BYTE PTR [rax+rax*1+0x47],al
   14003d8b9:	add    BYTE PTR [rdx+0x0],dl
   14003d8bc:	add    BYTE PTR [r13+0x0],cl
	...
   14003daa4:	add    BYTE PTR es:[rax],al
	...
   14003dab3:	add    BYTE PTR [rax],cl
	...
   14003dac9:	add    BYTE PTR [rax],al
   14003dacb:	add    BYTE PTR [rcx],al
	...
   14003daed:	add    BYTE PTR [rax],al
   14003daef:	add    BYTE PTR [rax+rax*1],bl
   14003daf2:	add    BYTE PTR [rax],al
   14003daf4:	adc    BYTE PTR [rax],al
   14003daf6:	add    BYTE PTR [rax],al
   14003daf8:	adc    BYTE PTR [rax],al
   14003dafa:	add    BYTE PTR [rax],al
   14003dafc:	add    DWORD PTR [rax],eax
	...
   14003db16:	add    BYTE PTR [rax],al
   14003db18:	jbe    0x14003db1a
   14003db1a:	push   rbx
   14003db1b:	add    BYTE PTR [rdi+0x0],ch
   14003db1e:	movsxd eax,DWORD PTR [rax]
   14003db20:	imul   eax,DWORD PTR [rax],0x65
   14003db23:	add    BYTE PTR [rax+rax*1+0x73],dh
   14003db27:	add    BYTE PTR [rax],ah
   14003db29:	add    BYTE PTR [rbx+0x0],dl
   14003db2c:	push   rsp
   14003db2d:	add    BYTE PTR [rdx+0x0],dl
   14003db30:	add    BYTE PTR [r9+0x0],r8b
   14003db34:	rex.WRB add BYTE PTR [r8],r8b
	...
   14003dd17:	add    BYTE PTR [rbx-0x24],cl
   14003dd1a:	or     dl,BYTE PTR [rdi-0x4e]
   14003dd1d:	addr32 (bad) 
   14003dd1f:	rex.X xchg edx,eax
   14003dd21:	mov    dl,0xac
   14003dd23:	sar    DWORD PTR [rip+0xa42d888],cl        # 0x14a46b5b1
   14003dd29:	add    BYTE PTR [rax],al
   14003dd2b:	add    BYTE PTR [rax],al
   14003dd2d:	add    BYTE PTR [rax],al
   14003dd2f:	add    BYTE PTR [rax],ah
   14003dd31:	and    BYTE PTR [rax],ah
   14003dd33:	fs jb  0x14003ddac
   14003dd36:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003dd38:	jae    0x14003ddae
   14003dd3a:	ss xor al,0x20
   14003dd3d:	and    eax,0x73252073
   14003dd42:	or     al,BYTE PTR [rax]
   14003dd44:	add    BYTE PTR [rax],al
   14003dd46:	add    BYTE PTR [rax],al
   14003dd48:	fs jb  0x14003ddc1
   14003dd4b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003dd4d:	jae    0x14003ddc3
   14003dd4f:	ss xor al,0x20
   14003dd52:	jae    0x14003ddcd
   14003dd54:	outs   dx,BYTE PTR ds:[rsi]
   14003dd55:	je     0x14003ddb8
   14003dd57:	js     0x14003dd93
   14003dd59:	or     cl,BYTE PTR [rdx]
   14003dd5b:	add    BYTE PTR [rax],al
   14003dd5d:	add    BYTE PTR [rax],al
   14003dd5f:	add    BYTE PTR [rsi+0x61],al
   14003dd62:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003dd6a:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003dd71:	and    BYTE PTR [rsi],dh
   14003dd73:	xor    al,0x62
   14003dd75:	imul   esi,DWORD PTR [rax+riz*1+0x76],0x6b636f73
   14003dd7d:	and    BYTE PTR [rax+0x72],dh
   14003dd80:	outs   dx,DWORD PTR ds:[rsi]
   14003dd81:	jbe    0x14003ddec
   14003dd83:	fs gs jb 0x14003dda7
   14003dd87:	and    eax,0x64
   14003dd8c:	add    BYTE PTR [rax],al
   14003dd8e:	add    BYTE PTR [rax],al
   14003dd90:	push   rbx
   14003dd91:	jne    0x14003ddf6
   14003dd93:	movsxd esp,DWORD PTR [rbp+0x73]
   14003dd96:	data16 jne 0x14003de05
   14003dd99:	ins    BYTE PTR es:[rdi],dx
   14003dd9a:	jns    0x14003ddbc
   14003dd9c:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003dda3:	gs and BYTE PTR fs:[rsi],dh
   14003dda7:	xor    al,0x62
   14003dda9:	imul   esi,DWORD PTR [rax+riz*1+0x76],0x6b636f73
   14003ddb1:	and    BYTE PTR [rax+0x72],dh
   14003ddb4:	outs   dx,DWORD PTR ds:[rsi]
   14003ddb5:	jbe    0x14003de20
   14003ddb7:	fs gs jb 0x14003ddbb
   14003ddbb:	add    BYTE PTR [rax],al
   14003ddbd:	add    BYTE PTR [rax],al
   14003ddbf:	add    BYTE PTR [rsi+0x53],dl
   14003ddc2:	outs   dx,DWORD PTR ds:[rsi]
   14003ddc3:	movsxd ebp,DWORD PTR [rbx+0x20]
   14003ddc6:	jo     0x14003de3a
   14003ddc8:	outs   dx,DWORD PTR ds:[rsi]
   14003ddc9:	jbe    0x14003de34
   14003ddcb:	fs gs jb 0x14003de3f
   14003ddcf:	(bad)  
   14003ddd0:	je     0x14003de3a
   14003ddd2:	and    BYTE PTR [rip+0x73],ah        # 0x14003de4b
   14003ddd8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003ddda:	jbe    0x14003de3d
   14003dddc:	ins    BYTE PTR es:[rdi],dx
   14003dddd:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x65626d75
   14003dde5:	jb     0x14003de07
   14003dde7:	outs   dx,DWORD PTR ds:[rsi]
   14003dde8:	data16 and BYTE PTR [rcx+0x72],ah
   14003ddec:	addr32 jne 0x14003de5c
   14003ddef:	outs   dx,BYTE PTR gs:[rsi]
   14003ddf1:	je     0x14003de66
   14003ddf3:	add    BYTE PTR [rax],al
   14003ddf5:	add    BYTE PTR [rax],al
   14003ddf7:	add    BYTE PTR [rbx+0x75],dl
   14003ddfa:	movsxd esp,DWORD PTR [rbx+0x65]
   14003ddfd:	jae    0x14003de72
   14003ddff:	data16 jne 0x14003de6e
   14003de02:	ins    BYTE PTR es:[rdi],dx
   14003de03:	jns    0x14003de25
   14003de05:	jne    0x14003de75
   14003de07:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003de0e:	gs and BYTE PTR fs:[rbx],dh
   14003de12:	xor    ah,BYTE PTR [rax]
   14003de14:	(bad)  
   14003de15:	imul   esi,DWORD PTR [rax+riz*1+0x76],0x6b636f73
   14003de1d:	and    BYTE PTR [rax+0x72],dh
   14003de20:	outs   dx,DWORD PTR ds:[rsi]
   14003de21:	jbe    0x14003de8c
   14003de23:	fs gs jb 0x14003de47
   14003de27:	outs   dx,DWORD PTR ds:[rsi]
   14003de28:	outs   dx,BYTE PTR ds:[rsi]
   14003de29:	and    BYTE PTR [rsi],dh
   14003de2b:	xor    al,0x20
   14003de2d:	(bad)  
   14003de2e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x0
   14003de36:	add    BYTE PTR [rax],al
   14003de38:	rex.RX (bad) 
   14003de3a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003de42:	jne    0x14003deb2
   14003de44:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003de4b:	and    BYTE PTR [rbx],dh
   14003de4d:	xor    ah,BYTE PTR [rax]
   14003de4f:	(bad)  
   14003de50:	imul   esi,DWORD PTR [rax+riz*1+0x76],0x6b636f73
   14003de58:	and    BYTE PTR [rax+0x72],dh
   14003de5b:	outs   dx,DWORD PTR ds:[rsi]
   14003de5c:	jbe    0x14003dec7
   14003de5e:	fs gs jb 0x14003de82
   14003de62:	outs   dx,DWORD PTR ds:[rsi]
   14003de63:	outs   dx,BYTE PTR ds:[rsi]
   14003de64:	and    BYTE PTR [rsi],dh
   14003de66:	xor    al,0x20
   14003de68:	(bad)  
   14003de69:	imul   esi,DWORD PTR [rax+riz*1+0x25],0x49000064
   14003de71:	outs   dx,BYTE PTR ds:[rsi]
   14003de72:	jbe    0x14003ded5
   14003de74:	ins    BYTE PTR es:[rdi],dx
   14003de75:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x6d756772
   14003de7d:	outs   dx,BYTE PTR gs:[rsi]
   14003de7f:	je     0x14003def4
   14003de81:	or     al,BYTE PTR [rax]
   14003de83:	add    BYTE PTR [rax],al
   14003de85:	add    BYTE PTR [rax],al
   14003de87:	add    BYTE PTR [rbx+0x74],dl
   14003de8a:	(bad)  
   14003de8b:	jb     0x14003df01
   14003de8d:	imul   ebp,DWORD PTR [rsi+0x67],0x76726420
   14003de94:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003de96:	jae    0x14003df0c
   14003de98:	ss xor al,0x2e
   14003de9b:	gs js  0x14003df03
   14003de9e:	or     al,BYTE PTR [rax]
   14003dea0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003dea2:	jae    0x14003df18
   14003dea4:	(bad)  
   14003dea5:	ins    BYTE PTR es:[rdi],dx
   14003dea6:	ins    BYTE PTR es:[rdi],dx
   14003dea7:	and    BYTE PTR [rsi+0x73],dh
   14003deaa:	je     0x14003df1b
   14003deac:	jb     0x14003dee1
   14003deae:	(bad)  
   14003deaf:	jne    0x14003df24
   14003deb1:	and    BYTE PTR [rdx+rsi*2+0x69],ah
   14003deb5:	jbe    0x14003df1c
   14003deb7:	jb     0x14003ded9
   14003deb9:	ins    BYTE PTR es:[rdi],dx
   14003deba:	(bad)  
   14003debb:	jae    0x14003df31
   14003debd:	and    BYTE PTR [rdx+0x65],dh
   14003dec0:	je     0x14003df37
   14003dec2:	jb     0x14003df32
   14003dec4:	and    BYTE PTR [rbx+0x6f],ah
   14003dec7:	fs and BYTE PTR gs:[rip+0x64],ah        # 0x14003df33
   14003decf:	add    BYTE PTR [rbp+riz*2+0x76],al
   14003ded3:	imul   esp,DWORD PTR [rbx+0x65],0x726c6120
   14003deda:	gs (bad) 
   14003dedc:	fs jns 0x14003deff
   14003dedf:	gs js  0x14003df4b
   14003dee2:	jae    0x14003df58
   14003dee4:	add    BYTE PTR [rax],al
   14003dee6:	add    BYTE PTR [rax],al
   14003dee8:	rex.B je 0x14003df5f
   14003deeb:	gs ins DWORD PTR es:[rdi],dx
   14003deed:	jo     0x14003df63
   14003deef:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   14003def6:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003defd:	and    BYTE PTR [rax+0x6e],dl
   14003df00:	push   rax
   14003df01:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14003df05:	imul   esp,DWORD PTR [rbx+0x65],0x4948203a
   14003df0c:	rex.R cmp eax,0x69207325
   14003df12:	outs   dx,BYTE PTR ds:[rsi]
   14003df13:	cmp    ax,0x7325
   14003df17:	and    BYTE PTR [rsi+0x6c],ah
   14003df1a:	(bad)  
   14003df1b:	addr32 jae 0x14003df5b
   14003df1e:	and    eax,0xa64
   14003df23:	add    BYTE PTR [rax],al
   14003df25:	add    BYTE PTR [rax],al
   14003df27:	add    BYTE PTR [rcx+0x6e],cl
   14003df2a:	jbe    0x14003df8d
   14003df2c:	ins    BYTE PTR es:[rdi],dx
   14003df2d:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x65626d75
   14003df35:	jb     0x14003df57
   14003df37:	outs   dx,DWORD PTR ds:[rsi]
   14003df38:	data16 and BYTE PTR [rcx+0x72],ah
   14003df3c:	addr32 jne 0x14003dfac
   14003df3f:	outs   dx,BYTE PTR gs:[rsi]
   14003df41:	je     0x14003dfb6
   14003df43:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14003df47:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003df4e:	and    BYTE PTR [rax+0x6e],dl
   14003df51:	push   rax
   14003df52:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14003df56:	imul   esp,DWORD PTR [rbx+0x65],0x6925203a
   14003df5d:	add    BYTE PTR [rax],al
   14003df5f:	add    BYTE PTR [rsi+0x69],al
   14003df62:	outs   dx,BYTE PTR ds:[rsi]
   14003df63:	imul   esi,DWORD PTR [rbx+0x68],0x69206465
   14003df6a:	outs   dx,BYTE PTR ds:[rsi]
   14003df6b:	jae    0x14003dfe1
   14003df6d:	(bad)  
   14003df6e:	ins    BYTE PTR es:[rdi],dx
   14003df6f:	ins    BYTE PTR es:[rdi],dx
   14003df70:	imul   ebp,DWORD PTR [rsi+0x67],0x6e694720
   14003df77:	(bad)  
   14003df78:	rex.R
   14003df79:	rex.WR
   14003df7a:	rex.WR sub al,0x20
   14003df7d:	jb     0x14003dfe4
   14003df7f:	je     0x14003dff6
   14003df81:	jb     0x14003dff1
   14003df83:	imul   ebp,DWORD PTR [rsi+0x67],0x642520
   14003df8a:	add    BYTE PTR [rax],al
   14003df8c:	add    BYTE PTR [rax],al
   14003df8e:	add    BYTE PTR [rax],al
   14003df90:	rex.RB push r10
   14003df92:	push   rdx
   14003df93:	rex.WRXB push r10
   14003df95:	cmp    ah,BYTE PTR [rax]
   14003df97:	push   rbp
   14003df98:	outs   dx,BYTE PTR ds:[rsi]
   14003df99:	(bad)  
   14003df9a:	(bad)  
   14003df9b:	ins    BYTE PTR es:[rdi],dx
   14003df9c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14003dfa1:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003dfa8:	and    BYTE PTR [rbx+0x25],bl
   14003dfab:	jae    0x14003e00a
   14003dfad:	and    BYTE PTR [rcx+0x6e],ch
   14003dfb0:	je     0x14003e021
   14003dfb2:	and    BYTE PTR [rdi+0x69],ah
   14003dfb5:	outs   dx,BYTE PTR ds:[rsi]
   14003dfb6:	(bad)  
   14003dfb7:	and    BYTE PTR [rsp+rbp*2+0x6c],ah
   14003dfbb:	and    BYTE PTR [rdx+0x65],dh
   14003dfbe:	imul   esi,DWORD PTR [ebx+0x74],0x7972
	...
   14003dfce:	add    BYTE PTR [rax],al
   14003dfd0:	rex.RB push r10
   14003dfd2:	push   rdx
   14003dfd3:	rex.WRXB push r10
   14003dfd5:	cmp    ah,BYTE PTR [rax]
   14003dfd7:	push   rbp
   14003dfd8:	outs   dx,BYTE PTR ds:[rsi]
   14003dfd9:	(bad)  
   14003dfda:	(bad)  
   14003dfdb:	ins    BYTE PTR es:[rdi],dx
   14003dfdc:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14003dfe1:	jae    0x14003e044
   14003dfe3:	jbe    0x14003e04a
   14003dfe5:	and    BYTE PTR [rbx+0x75],ah
   14003dfe8:	jb     0x14003e05c
   14003dfea:	outs   dx,BYTE PTR gs:[rsi]
   14003dfec:	je     0x14003e00e
   14003dfee:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x204c4c44
   14003dff6:	jb     0x14003e05d
   14003dff8:	imul   esi,DWORD PTR [ebx+0x74],0x73207972
   14003e000:	gs je  0x14003e077
   14003e003:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   14003e00a:	jb     0x14003e071
   14003e00c:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
   14003e014:	gs jns 0x14003e037
   14003e017:	pop    rbx
   14003e018:	and    eax,0x5d73
   14003e01d:	add    BYTE PTR [rax],al
   14003e01f:	add    BYTE PTR [rbx+0x75],dl
   14003e022:	movsxd esp,DWORD PTR [rbx+0x65]
   14003e025:	jae    0x14003e09a
   14003e027:	data16 jne 0x14003e096
   14003e02a:	ins    BYTE PTR es:[rdi],dx
   14003e02b:	jns    0x14003e04d
   14003e02d:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003e034:	gs and BYTE PTR fs:[rbx+0x25],bl
   14003e039:	jae    0x14003e098
   14003e03b:	and    BYTE PTR [rcx+0x6e],ch
   14003e03e:	je     0x14003e0af
   14003e040:	and    BYTE PTR [rdi+0x69],ah
   14003e043:	outs   dx,BYTE PTR ds:[rsi]
   14003e044:	(bad)  
   14003e045:	and    BYTE PTR [rsp+rbp*2+0x6c],ah
   14003e049:	and    BYTE PTR [rdx+0x65],dh
   14003e04c:	imul   esi,DWORD PTR [ebx+0x74],0x7972
   14003e054:	add    BYTE PTR [rax],al
   14003e056:	add    BYTE PTR [rax],al
   14003e058:	push   rbx
   14003e059:	je     0x14003e0ca
   14003e05b:	jb     0x14003e0c2
   14003e05d:	and    BYTE PTR fs:[rbx+0x75],ah
   14003e061:	jb     0x14003e0d5
   14003e063:	outs   dx,BYTE PTR gs:[rsi]
   14003e065:	je     0x14003e087
   14003e067:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x4c4c442e
   14003e06f:	and    BYTE PTR [rcx+0x6e],ch
   14003e072:	je     0x14003e0e3
   14003e074:	and    BYTE PTR [rbx+0x25],bl
   14003e077:	jae    0x14003e0d6
   14003e079:	add    BYTE PTR [rax],al
   14003e07b:	add    BYTE PTR [rax],al
   14003e07d:	add    BYTE PTR [rax],al
   14003e07f:	add    BYTE PTR [rbx+0x4f],dl
   14003e082:	rex.RX push rsp
   14003e084:	push   rdi
   14003e085:	push   r10
   14003e087:	rex.RB pop r12
   14003e089:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14003e091:	je     0x14003e0ef
   14003e093:	push   rdi
   14003e094:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   14003e09b:	rex.WRX push rsp
   14003e09d:	pop    rsp
   14003e09e:	rex.XB jne 0x14003e113
   14003e0a1:	jb     0x14003e108
   14003e0a3:	outs   dx,BYTE PTR ds:[rsi]
   14003e0a4:	je     0x14003e0fc
   14003e0a6:	gs jb  0x14003e11c
   14003e0a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69575c
   14003e0b0:	ins    BYTE PTR es:[rdi],dx
   14003e0b1:	outs   dx,DWORD PTR ds:[rsi]
   14003e0b2:	outs   dx,DWORD PTR ds:[esi]
   14003e0b4:	outs   dx,BYTE PTR ds:[rsi]
   14003e0b5:	add    BYTE PTR [rax],al
   14003e0b7:	add    BYTE PTR [rdi+0x69],al
   14003e0ba:	outs   dx,BYTE PTR ds:[rsi]
   14003e0bb:	(bad)  
   14003e0bc:	rex.R
   14003e0bd:	rex.WR
   14003e0be:	rex.WR add BYTE PTR [rbp+0x52],r8b
   14003e0c2:	push   rdx
   14003e0c3:	rex.WRXB push r10
   14003e0c5:	cmp    ah,BYTE PTR [rax]
   14003e0c7:	rex.RX (bad) 
   14003e0c9:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003e0d1:	movsxd ebp,DWORD PTR [rdi+0x70]
   14003e0d4:	jns    0x14003e0f6
   14003e0d6:	rex.RXB
   14003e0d7:	rex.WB
   14003e0d8:	rex.WRX
   14003e0d9:	and    BYTE PTR [r12+rcx*2+0x4c],al
   14003e0de:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14003e0e2:	jae    0x14003e15d
   14003e0e4:	jae    0x14003e15a
   14003e0e6:	gs ins DWORD PTR es:[rdi],dx
   14003e0e8:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   14003e0ec:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003e0f1:	jns    0x14003e113
   14003e0f3:	pop    rbx
   14003e0f4:	and    eax,0x49005d73
   14003e0f9:	outs   dx,BYTE PTR ds:[rsi]
   14003e0fa:	jbe    0x14003e15d
   14003e0fc:	ins    BYTE PTR es:[rdi],dx
   14003e0fd:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x65626d75
   14003e105:	jb     0x14003e127
   14003e107:	outs   dx,DWORD PTR ds:[rsi]
   14003e108:	data16 and BYTE PTR [rcx+0x72],ah
   14003e10c:	addr32 jne 0x14003e17c
   14003e10f:	outs   dx,BYTE PTR gs:[rsi]
   14003e111:	je     0x14003e186
   14003e113:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14003e117:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003e11e:	and    BYTE PTR [rbx+0x75],ah
   14003e121:	jae    0x14003e197
   14003e123:	outs   dx,DWORD PTR ds:[rsi]
   14003e124:	ins    DWORD PTR es:[rdi],dx
   14003e125:	imul   edi,DWORD PTR [rdx+0x65],0x49472064
   14003e12c:	rex.WRX
   14003e12d:	and    BYTE PTR [r12+rcx*2+0x4c],al
   14003e132:	cmp    ah,BYTE PTR [rax]
   14003e134:	and    eax,0x49000069
   14003e139:	outs   dx,BYTE PTR ds:[rsi]
   14003e13a:	jae    0x14003e1b0
   14003e13c:	(bad)  
   14003e13d:	ins    BYTE PTR es:[rdi],dx
   14003e13e:	ins    BYTE PTR es:[rdi],dx
   14003e13f:	imul   ebp,DWORD PTR [rsi+0x67],0x6e694720
   14003e146:	(bad)  
   14003e147:	rex.R
   14003e148:	rex.WR
   14003e149:	rex.WR add BYTE PTR [rax],r8b
   14003e14c:	add    BYTE PTR [rax],al
   14003e14e:	add    BYTE PTR [rax],al
   14003e150:	rex.RX imul r13d,DWORD PTR [rsi+0x69],0x64656873
   14003e158:	and    BYTE PTR [rbp+0x6e],dh
   14003e15b:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003e162:	imul   ebp,DWORD PTR [rsi+0x67],0x6e694720
   14003e169:	(bad)  
   14003e16a:	rex.R
   14003e16b:	rex.WR
   14003e16c:	rex.WR sub al,0x20
   14003e16f:	jb     0x14003e1d6
   14003e171:	je     0x14003e1e8
   14003e173:	jb     0x14003e1e3
   14003e175:	imul   ebp,DWORD PTR [rsi+0x67],0x642520
   14003e17c:	add    BYTE PTR [rax],al
   14003e17e:	add    BYTE PTR [rax],al
   14003e180:	push   rdi
   14003e181:	push   r10
   14003e183:	rex.WRX
   14003e184:	rex.WB
   14003e185:	rex.WRX
   14003e186:	rex.RXB cmp r12b,BYTE PTR [r8]
   14003e189:	outs   dx,DWORD PTR fs:[rsi]
   14003e18b:	and    BYTE PTR [rsi+0x6f],ch
   14003e18e:	je     0x14003e1b0
   14003e190:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14003e194:	and    BYTE PTR [rax+0x6f],ch
   14003e197:	ja     0x14003e1b9
   14003e199:	je     0x14003e20a
   14003e19b:	and    BYTE PTR [rbp+0x69],dh
   14003e19e:	outs   dx,BYTE PTR ds:[rsi]
   14003e19f:	jae    0x14003e215
   14003e1a1:	(bad)  
   14003e1a2:	ins    BYTE PTR es:[rdi],dx
   14003e1a3:	ins    BYTE PTR es:[rdi],dx
   14003e1a4:	and    BYTE PTR [rbx+0x75],ah
   14003e1a7:	jb     0x14003e21b
   14003e1a9:	outs   dx,BYTE PTR gs:[rsi]
   14003e1ab:	je     0x14003e1cd
   14003e1ad:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x6c6c642e
   14003e1b5:	and    BYTE PTR [rbx+0x25],bl
   14003e1b8:	jae    0x14003e217
   14003e1ba:	add    BYTE PTR [rax],al
   14003e1bc:	add    BYTE PTR [rax],al
   14003e1be:	add    BYTE PTR [rax],al
   14003e1c0:	push   rdi
   14003e1c1:	push   r10
   14003e1c3:	rex.WRX
   14003e1c4:	rex.WB
   14003e1c5:	rex.WRX
   14003e1c6:	rex.RXB cmp r12b,BYTE PTR [r8]
   14003e1c9:	push   rbp
   14003e1ca:	outs   dx,BYTE PTR ds:[rsi]
   14003e1cb:	(bad)  
   14003e1cc:	(bad)  
   14003e1cd:	ins    BYTE PTR es:[rdi],dx
   14003e1ce:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14003e1d3:	jb     0x14003e23a
   14003e1d5:	ins    DWORD PTR es:[rdi],dx
   14003e1d6:	outs   dx,DWORD PTR ds:[rsi]
   14003e1d7:	jbe    0x14003e23e
   14003e1d9:	and    BYTE PTR [rbx+0x75],ah
   14003e1dc:	jb     0x14003e250
   14003e1de:	outs   dx,BYTE PTR gs:[rsi]
   14003e1e0:	je     0x14003e202
   14003e1e2:	push   rsi
   14003e1e3:	rex.WRB
   14003e1e4:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x4c4c442e
   14003e1ec:	and    BYTE PTR [rbx+0x65],dh
   14003e1ef:	je     0x14003e265
   14003e1f1:	imul   ebp,DWORD PTR [rsi+0x67],0x74657320
   14003e1f8:	je     0x14003e263
   14003e1fa:	outs   dx,BYTE PTR ds:[rsi]
   14003e1fb:	add    BYTE PTR [eax],al
   14003e1fe:	add    BYTE PTR [rax],al
   14003e200:	jae    0x14003e277
   14003e202:	movsxd esp,DWORD PTR [rbx+0x65]
   14003e205:	jae    0x14003e27a
   14003e207:	data16 jne 0x14003e276
   14003e20a:	ins    BYTE PTR es:[rdi],dx
   14003e20b:	jns    0x14003e22d
   14003e20d:	jb     0x14003e274
   14003e20f:	ins    DWORD PTR es:[rdi],dx
   14003e210:	outs   dx,DWORD PTR ds:[rsi]
   14003e211:	jbe    0x14003e278
   14003e213:	and    BYTE PTR fs:[rbx+0x75],ah
   14003e217:	jb     0x14003e28b
   14003e219:	outs   dx,BYTE PTR gs:[rsi]
   14003e21b:	je     0x14003e23d
   14003e21d:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x4c4c442e
   14003e225:	and    BYTE PTR [rbx+0x65],dh
   14003e228:	je     0x14003e29e
   14003e22a:	imul   ebp,DWORD PTR [rsi+0x67],0x4e000000
   14003e231:	outs   dx,DWORD PTR ds:[rsi]
   14003e232:	and    BYTE PTR [rax+0x72],dh
   14003e235:	gs jbe 0x14003e2a1
   14003e238:	outs   dx,DWORD PTR ds:[rsi]
   14003e239:	jne    0x14003e2ae
   14003e23b:	and    BYTE PTR [rdi+0x69],al
   14003e23e:	outs   dx,BYTE PTR ds:[rsi]
   14003e23f:	(bad)  
   14003e240:	rex.R
   14003e241:	rex.WR
   14003e242:	rex.WR and BYTE PTR [rbx+0x65],r14b
   14003e246:	je     0x14003e2bc
   14003e248:	imul   ebp,DWORD PTR [rsi+0x67],0x2e2e2e
   14003e24f:	add    BYTE PTR [rbp+0x52],al
   14003e252:	push   rdx
   14003e253:	rex.WRXB push r10
   14003e255:	cmp    ah,BYTE PTR [rax]
   14003e257:	push   rbp
   14003e258:	outs   dx,BYTE PTR ds:[rsi]
   14003e259:	(bad)  
   14003e25a:	(bad)  
   14003e25b:	ins    BYTE PTR es:[rdi],dx
   14003e25c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14003e261:	jb     0x14003e2c8
   14003e263:	jae    0x14003e2d9
   14003e265:	outs   dx,DWORD PTR ds:[rsi]
   14003e266:	jb     0x14003e2cd
   14003e268:	and    BYTE PTR [rax+0x72],dh
   14003e26b:	gs jbe 0x14003e2d7
   14003e26e:	outs   dx,DWORD PTR ds:[rsi]
   14003e26f:	jne    0x14003e2e4
   14003e271:	and    BYTE PTR [rdi+0x69],al
   14003e274:	outs   dx,BYTE PTR ds:[rsi]
   14003e275:	(bad)  
   14003e276:	rex.R
   14003e277:	rex.WR
   14003e278:	rex.WR and BYTE PTR [rdx+0x65],r14b
   14003e27c:	imul   esi,DWORD PTR [ebx+0x74],0x73207972
   14003e284:	gs je  0x14003e2fb
   14003e287:	imul   ebp,DWORD PTR [rsi+0x67],0x73255b20
   14003e28e:	pop    rbp
   14003e28f:	add    BYTE PTR [rdi+0x41],dl
   14003e292:	push   rdx
   14003e293:	rex.WRX
   14003e294:	rex.WB
   14003e295:	rex.WRX
   14003e296:	rex.RXB cmp r12b,BYTE PTR [r8]
   14003e299:	push   rbp
   14003e29a:	outs   dx,BYTE PTR ds:[rsi]
   14003e29b:	(bad)  
   14003e29c:	(bad)  
   14003e29d:	ins    BYTE PTR es:[rdi],dx
   14003e29e:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14003e2a3:	jb     0x14003e30a
   14003e2a5:	ins    DWORD PTR es:[rdi],dx
   14003e2a6:	outs   dx,DWORD PTR ds:[rsi]
   14003e2a7:	jbe    0x14003e30e
   14003e2a9:	and    BYTE PTR [rax+0x72],dh
   14003e2ac:	gs jbe 0x14003e318
   14003e2af:	outs   dx,DWORD PTR ds:[rsi]
   14003e2b0:	jne    0x14003e325
   14003e2b2:	and    BYTE PTR [rsi+0x4d],dl
   14003e2b5:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x4c4c442e
   14003e2bd:	and    BYTE PTR [rbx+0x65],dh
   14003e2c0:	je     0x14003e336
   14003e2c2:	imul   ebp,DWORD PTR [rsi+0x67],0x20746120
   14003e2c9:	pop    rbx
   14003e2ca:	and    eax,0x5d73
   14003e2cf:	add    BYTE PTR [rbx+0x75],dl
   14003e2d2:	movsxd esp,DWORD PTR [rbx+0x65]
   14003e2d5:	jae    0x14003e34a
   14003e2d7:	data16 jne 0x14003e346
   14003e2da:	ins    BYTE PTR es:[rdi],dx
   14003e2db:	jns    0x14003e2fd
   14003e2dd:	jb     0x14003e344
   14003e2df:	ins    DWORD PTR es:[rdi],dx
   14003e2e0:	outs   dx,DWORD PTR ds:[rsi]
   14003e2e1:	jbe    0x14003e348
   14003e2e3:	and    BYTE PTR fs:[rax+0x72],dh
   14003e2e7:	gs jbe 0x14003e353
   14003e2ea:	outs   dx,DWORD PTR ds:[rsi]
   14003e2eb:	jne    0x14003e360
   14003e2ed:	and    BYTE PTR [rsi+0x4d],dl
   14003e2f0:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x4c4c442e
   14003e2f8:	and    BYTE PTR [rbx+0x65],dh
   14003e2fb:	je     0x14003e371
   14003e2fd:	imul   ebp,DWORD PTR [rsi+0x67],0x20746120
   14003e304:	pop    rbx
   14003e305:	and    eax,0x5d73
   14003e30a:	add    BYTE PTR [rax],al
   14003e30c:	add    BYTE PTR [rax],al
   14003e30e:	add    BYTE PTR [rax],al
   14003e310:	push   rdx
   14003e311:	gs jae 0x14003e388
   14003e314:	outs   dx,DWORD PTR ds:[rsi]
   14003e315:	jb     0x14003e37c
   14003e317:	and    BYTE PTR fs:[rax+0x72],dh
   14003e31b:	gs jbe 0x14003e387
   14003e31e:	outs   dx,DWORD PTR ds:[rsi]
   14003e31f:	jne    0x14003e394
   14003e321:	and    BYTE PTR [rdi+0x69],al
   14003e324:	outs   dx,BYTE PTR ds:[rsi]
   14003e325:	(bad)  
   14003e326:	cs rex.R
   14003e328:	rex.WR
   14003e329:	rex.WR sub BYTE PTR [rip+0x2973],r12b        # 0x140040ca3
   14003e330:	rex.XB jne 0x14003e3a5
   14003e333:	jb     0x14003e39a
   14003e335:	outs   dx,BYTE PTR ds:[rsi]
   14003e336:	je     0x14003e358
   14003e338:	rex.RXB imul r13d,DWORD PTR [r14+0x61],0x74657320
   14003e340:	je     0x14003e3ab
   14003e342:	outs   dx,BYTE PTR ds:[rsi]
   14003e343:	and    BYTE PTR [ebx+0x25],bl
   14003e347:	jae    0x14003e3a6
   14003e349:	add    BYTE PTR [rax],al
   14003e34b:	add    BYTE PTR [rax],al
   14003e34d:	add    BYTE PTR [rax],al
   14003e34f:	add    BYTE PTR [rcx+0x6e],cl
   14003e352:	jbe    0x14003e3b5
   14003e354:	ins    BYTE PTR es:[rdi],dx
   14003e355:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x65626d75
   14003e35d:	jb     0x14003e37f
   14003e35f:	outs   dx,DWORD PTR ds:[rsi]
   14003e360:	data16 and BYTE PTR [rcx+0x72],ah
   14003e364:	addr32 jne 0x14003e3d4
   14003e367:	outs   dx,BYTE PTR gs:[rsi]
   14003e369:	je     0x14003e3de
   14003e36b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14003e36f:	jb     0x14003e3d6
   14003e371:	ins    DWORD PTR es:[rdi],dx
   14003e372:	outs   dx,DWORD PTR ds:[rsi]
   14003e373:	jbe    0x14003e3da
   14003e375:	and    BYTE PTR [rbx+0x75],ah
   14003e378:	jae    0x14003e3ee
   14003e37a:	outs   dx,DWORD PTR ds:[rsi]
   14003e37b:	ins    DWORD PTR es:[rdi],dx
   14003e37c:	imul   edi,DWORD PTR [rdx+0x65],0x49472064
   14003e383:	rex.WRX
   14003e384:	and    BYTE PTR [r12+rcx*2+0x4c],al
   14003e389:	cmp    ah,BYTE PTR [rax]
   14003e38b:	and    eax,0x69
   14003e390:	push   rbp
   14003e391:	outs   dx,BYTE PTR ds:[rsi]
   14003e392:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003e399:	imul   ebp,DWORD PTR [rsi+0x67],0x6e694720
   14003e3a0:	(bad)  
   14003e3a1:	rex.R
   14003e3a2:	rex.WR
   14003e3a3:	rex.WR add BYTE PTR [rax],r8b
   14003e3a6:	add    BYTE PTR [rax],al
   14003e3a8:	and    eax,0x64253a73
   14003e3ad:	and    BYTE PTR [rdx+0x75],al
   14003e3b0:	data16 data16 gs jb 0x14003e3d5
   14003e3b5:	je     0x14003e426
   14003e3b7:	outs   dx,DWORD PTR ds:[rsi]
   14003e3b8:	and    BYTE PTR [rbx+0x6d],dh
   14003e3bb:	(bad)  
   14003e3bc:	ins    BYTE PTR es:[rdi],dx
   14003e3bd:	ins    BYTE PTR es:[rdi],dx
   14003e3be:	or     al,BYTE PTR [rax]
   14003e3c0:	(bad)  
   14003e3c1:	outs   dx,DWORD PTR ds:[rsi]
   14003e3c2:	jb     0x14003e425
   14003e3c4:	pop    rsp
   14003e3c5:	ins    BYTE PTR es:[rdi],dx
   14003e3c6:	imul   esp,DWORD PTR [rdx+0x5c],0x69727473
   14003e3cd:	outs   dx,BYTE PTR ds:[rsi]
   14003e3ce:	addr32 pop rsp
   14003e3d0:	jae    0x14003e446
   14003e3d2:	jb     0x14003e402
   14003e3d4:	movsxd eax,DWORD PTR [rax]
   14003e3d6:	add    BYTE PTR [rax],al
   14003e3d8:	push   rsi
   14003e3d9:	rex.RB push r10
   14003e3db:	rex.WB
   14003e3dc:	rex.RX pop rcx
   14003e3de:	and    BYTE PTR [rip+0x64253a73],ah        # 0x1a4291e57
   14003e3e4:	or     al,BYTE PTR [rax]
	...
   14003e3ee:	add    BYTE PTR [rax],al
   14003e3f0:	xor    BYTE PTR [rcx],dh
   14003e3f2:	xor    dh,BYTE PTR [rbx]
   14003e3f4:	xor    al,0x35
   14003e3f6:	ss (bad) 
   14003e3f8:	cmp    BYTE PTR [rcx],bh
   14003e3fa:	(bad)  
   14003e3fb:	(bad)
   14003e400:	(bad)  
   14003e401:	add    BYTE PTR [rax],al
   14003e403:	add    BYTE PTR [rax],al
   14003e405:	add    BYTE PTR [rax],al
   14003e407:	add    BYTE PTR [rax],dh
   14003e409:	xor    DWORD PTR [rdx],esi
   14003e40b:	xor    esi,DWORD PTR [rsi*1+0x39383736]
   14003e412:	rex.B
   14003e413:	rex.X
   14003e414:	rex.XB
   14003e415:	rex.R
   14003e416:	rex.RB
   14003e417:	rex.RX (bad) 
   14003e419:	add    BYTE PTR [rax],al
   14003e41b:	add    BYTE PTR [rax],al
   14003e41d:	add    BYTE PTR [rax],al
   14003e41f:	add    BYTE PTR [rsi+0x4f],cl
   14003e422:	push   rsp
   14003e423:	pop    rdi
   14003e424:	rex.WB
   14003e425:	rex.WRB push r8
   14003e427:	rex.WR
   14003e428:	rex.RB
   14003e429:	rex.WRB
   14003e42a:	rex.RB
   14003e42b:	rex.WRX push rsp
   14003e42d:	rex.RB
   14003e42e:	and    BYTE PTR [rip+0x64253a73],r12b        # 0x1a4291ea8
   14003e435:	or     al,BYTE PTR [rax]
   14003e437:	add    BYTE PTR [rdx+0x6f],ah
   14003e43a:	jb     0x14003e49d
   14003e43c:	pop    rsp
   14003e43d:	ins    BYTE PTR es:[rdi],dx
   14003e43e:	imul   esp,DWORD PTR [rdx+0x5c],0x69727473
   14003e445:	outs   dx,BYTE PTR ds:[rsi]
   14003e446:	addr32 pop rsp
   14003e448:	(bad)
   14003e44d:	jae    0x14003e4bd
   14003e44f:	jo     0x14003e4c3
   14003e451:	imul   ebp,DWORD PTR [rsi+0x74],0x632e66
   14003e458:	sub    BYTE PTR [rsi+0x75],ch
   14003e45b:	ins    BYTE PTR es:[rdi],dx
   14003e45c:	ins    BYTE PTR es:[rdi],dx
   14003e45d:	sub    DWORD PTR [rax],eax
   14003e45f:	add    BYTE PTR [rsi+0x61],ch
   14003e462:	outs   dx,BYTE PTR ds:[rsi]
   14003e463:	add    BYTE PTR [rcx+0x6e],ch
   14003e466:	data16 add BYTE PTR [rip+0x666e69],ch        # 0x1406a52d6
   14003e46d:	add    BYTE PTR [rax],al
   14003e46f:	add    BYTE PTR [rax],dh
   14003e471:	xor    DWORD PTR [rdx],esi
   14003e473:	xor    esi,DWORD PTR [rsi*1+0x39383736]
   14003e47a:	(bad)  
   14003e47b:	(bad)
   14003e480:	xor    BYTE PTR [rcx],dh
   14003e482:	xor    dh,BYTE PTR [rbx]
   14003e484:	xor    al,0x35
   14003e486:	ss (bad) 
   14003e488:	cmp    BYTE PTR [rcx],bh
   14003e48a:	rex.B
   14003e48b:	rex.X
   14003e48c:	rex.XB
   14003e48d:	rex.R
   14003e48e:	rex.RB
   14003e48f:	rex.RX sub BYTE PTR [rax],r8b
   14003e492:	outs   dx,BYTE PTR ds:[rsi]
   14003e493:	add    BYTE PTR [rbp+0x0],dh
   14003e496:	ins    BYTE PTR es:[rdi],dx
   14003e497:	add    BYTE PTR [rax+rax*1+0x29],ch
   14003e49b:	add    BYTE PTR [rax],al
   14003e49d:	add    BYTE PTR [rax],al
   14003e49f:	add    BYTE PTR [rdx],cl
   14003e4a1:	add    BYTE PTR [rax],al
   14003e4a3:	add    BYTE PTR [rax],al
   14003e4a5:	add    BYTE PTR [rcx],al
   14003e4a7:	add    bh,bh
   14003e4a9:	add    eax,DWORD PTR [rax]
	...
   14003e56f:	add    BYTE PTR [rcx],al
   14003e571:	add    DWORD PTR [rcx],eax
   14003e573:	add    DWORD PTR [rcx],eax
   14003e575:	add    DWORD PTR [rcx],eax
   14003e577:	add    DWORD PTR [rcx],eax
   14003e579:	add    DWORD PTR [rcx],eax
   14003e57b:	add    DWORD PTR [rcx],eax
   14003e57d:	add    DWORD PTR [rcx],eax
   14003e57f:	add    DWORD PTR [rcx],eax
   14003e581:	add    DWORD PTR [rcx],eax
   14003e583:	add    DWORD PTR [rcx],eax
   14003e585:	add    DWORD PTR [rcx],eax
   14003e587:	add    DWORD PTR [rcx],eax
   14003e589:	add    DWORD PTR [rcx],eax
   14003e58b:	add    DWORD PTR [rcx],eax
   14003e58d:	add    DWORD PTR [rcx],eax
   14003e58f:	add    DWORD PTR [rdx],eax
   14003e591:	add    al,BYTE PTR [rdx]
   14003e593:	add    al,BYTE PTR [rdx]
   14003e595:	add    al,BYTE PTR [rdx]
   14003e597:	add    al,BYTE PTR [rdx]
   14003e599:	add    al,BYTE PTR [rdx]
   14003e59b:	add    al,BYTE PTR [rdx]
   14003e59d:	add    al,BYTE PTR [rdx]
   14003e59f:	add    al,BYTE PTR [rbx]
   14003e5a1:	add    eax,DWORD PTR [rbx]
   14003e5a3:	add    eax,DWORD PTR [rbx]
   14003e5a5:	add    eax,DWORD PTR [rbx]
   14003e5a7:	add    eax,DWORD PTR [rsp+rax*1]
   14003e5aa:	add    al,0x4
   14003e5ac:	add    eax,0x50505
   14003e5b1:	add    BYTE PTR [rax],al
   14003e5b3:	add    BYTE PTR [rax-0x7fffffd0],al
   14003e5b9:	and    BYTE PTR [rsi],cl
   14003e5bb:	add    BYTE PTR [rax-0x7ffc37e0],al
   14003e5c1:	and    BYTE PTR [rax],cl
   14003e5c3:	cli    
   14003e5c4:	and    BYTE PTR [rax],0x8
   14003e5c7:	(bad)  
   14003e5c8:	add    BYTE PTR [rax],al
   14003e5ca:	shl    al,0xf0
   14003e5cd:	clc    
   14003e5ce:	cld    
   14003e5cf:	add    BYTE PTR [rdx+0x6f],ah
   14003e5d2:	jb     0x14003e635
   14003e5d4:	pop    rsp
   14003e5d5:	ins    BYTE PTR es:[rdi],dx
   14003e5d6:	imul   esp,DWORD PTR [rdx+0x5c],0x6373696d
   14003e5dd:	pop    rsp
   14003e5de:	ja     0x14003e649
   14003e5e0:	outs   dx,BYTE PTR ds:[rsi]
   14003e5e1:	xor    esi,DWORD PTR [rdx]
   14003e5e3:	jne    0x14003e637
   14003e5e5:	imul   esi,DWORD PTR gs:[ebx+0x74],0x632e7972
   14003e5ee:	add    BYTE PTR [rax],al
   14003e5f0:	rex.WRX
   14003e5f1:	rex.WRXB push r12
   14003e5f3:	pop    rdi
   14003e5f4:	push   rdx
   14003e5f5:	rex.RB
   14003e5f6:	rex.B
   14003e5f7:	rex.XB
   14003e5f8:	rex.W
   14003e5f9:	rex.RB
   14003e5fa:	and    BYTE PTR [rip+0x64253a73],r12b        # 0x1a4292074
   14003e601:	or     al,BYTE PTR [rax]
   14003e603:	add    BYTE PTR [rax],al
   14003e605:	add    BYTE PTR [rax],al
   14003e607:	add    BYTE PTR [rax+rax*1+0x5c],bl
   14003e60b:	add    BYTE PTR [rdi],bh
   14003e60d:	add    BYTE PTR [rax+rax*1+0x0],bl
   14003e611:	add    BYTE PTR [rax],al
   14003e613:	add    BYTE PTR [rax],al
   14003e615:	add    BYTE PTR [rax],al
   14003e617:	add    BYTE PTR [rdx+0x6f],ah
   14003e61a:	jb     0x14003e67d
   14003e61c:	pop    rsp
   14003e61d:	ins    BYTE PTR es:[rdi],dx
   14003e61e:	imul   esp,DWORD PTR [rdx+0x5c],0x6373696d
   14003e625:	pop    rsp
   14003e626:	ja     0x14003e691
   14003e628:	outs   dx,BYTE PTR ds:[rsi]
   14003e629:	xor    esi,DWORD PTR [rdx]
   14003e62b:	jne    0x14003e65b
   14003e62d:	movsxd eax,DWORD PTR [rax]
   14003e62f:	add    BYTE PTR [rcx+0x63],ch
   14003e632:	jne    0x14003e698
   14003e634:	je     0x14003e66a
   14003e636:	xor    al,0x6c
	...
   14003e648:	(bad)  
   14003e649:	outs   dx,DWORD PTR ds:[rsi]
   14003e64a:	jb     0x14003e6ad
   14003e64c:	pop    rsp
   14003e64d:	ins    BYTE PTR es:[rdi],dx
   14003e64e:	imul   esp,DWORD PTR [rdx+0x5c],0x6373696d
   14003e655:	pop    rsp
   14003e656:	movsxd ebp,DWORD PTR [rdi+0x64]
   14003e659:	gs jae 0x14003e6c1
   14003e65c:	je     0x14003e68c
   14003e65e:	movsxd eax,DWORD PTR [rax]
   14003e660:	push   rbp
   14003e661:	push   rsp
   14003e662:	rex.RX sub eax,0x38
   14003e668:	push   rbp
   14003e669:	push   rsp
   14003e66a:	rex.RX sub eax,0x454c3631
	...
   14003e678:	push   rbp
   14003e679:	push   rsp
   14003e67a:	rex.RX sub eax,0x45423631
	...
   14003e688:	push   rbp
   14003e689:	outs   dx,BYTE PTR ds:[rsi]
   14003e68a:	jb     0x14003e6f1
   14003e68c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14003e68f:	gs jb  0x14003e6f3
   14003e692:	(bad)  
   14003e693:	ins    BYTE PTR es:[rdi],dx
   14003e694:	and    BYTE PTR gs:[rbp+0x65],ch
   14003e698:	ins    DWORD PTR es:[rdi],dx
   14003e699:	outs   dx,DWORD PTR ds:[rsi]
   14003e69a:	jb     0x14003e715
   14003e69c:	and    BYTE PTR [rcx+0x6c],ah
   14003e69f:	ins    BYTE PTR es:[rdi],dx
   14003e6a0:	outs   dx,DWORD PTR ds:[rsi]
   14003e6a1:	movsxd esp,DWORD PTR [rcx+0x74]
   14003e6a4:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   14003e6ab:	ins    BYTE PTR es:[rdi],dx
   14003e6ac:	jne    0x14003e720
   14003e6ae:	or     al,BYTE PTR gs:[rax]
   14003e6b1:	add    BYTE PTR [rax],al
   14003e6b3:	add    BYTE PTR [rax],al
   14003e6b5:	add    BYTE PTR [rax],al
   14003e6b7:	add    BYTE PTR [rdx+0x6f],ah
   14003e6ba:	jb     0x14003e71d
   14003e6bc:	pop    rsp
   14003e6bd:	ins    BYTE PTR es:[rdi],dx
   14003e6be:	imul   esp,DWORD PTR [rdx+0x5c],0x6373696d
   14003e6c5:	pop    rsp
   14003e6c6:	push   0x54687361
   14003e6cb:	(bad)  
   14003e6cc:	(bad)  
   14003e6cd:	ins    BYTE PTR es:[rdi],dx
   14003e6ce:	gs movsxd eax,DWORD PTR cs:[rax]
   14003e6d2:	add    BYTE PTR [rax],al
   14003e6d4:	add    BYTE PTR [rax],al
   14003e6d6:	add    BYTE PTR [rax],al
   14003e6d8:	and    eax,0x6e6f2073
   14003e6dd:	ins    BYTE PTR es:[rdi],dx
   14003e6de:	jns    0x14003e700
   14003e6e0:	je     0x14003e743
   14003e6e2:	imul   esp,DWORD PTR [rbp+0x73],0x20
   14003e6e6:	jo     0x14003e757
   14003e6e8:	ja     0x14003e74f
   14003e6ea:	jb     0x14003e75f
   14003e6ec:	and    BYTE PTR [rdi+0x66],ch
   14003e6ef:	and    BYTE PTR [rdx],dh
   14003e6f1:	and    BYTE PTR [rdx],cl
   14003e6f3:	add    BYTE PTR [rax],al
   14003e6f5:	add    BYTE PTR [rax],al
   14003e6f7:	add    BYTE PTR [rax+0x61],cl
   14003e6fa:	jae    0x14003e764
   14003e6fc:	push   rsp
   14003e6fd:	(bad)  
   14003e6fe:	(bad)  
   14003e6ff:	ins    BYTE PTR es:[rdi],dx
   14003e700:	gs pop rdi
   14003e702:	rex.B ins BYTE PTR es:[rdi],dx
   14003e704:	ins    BYTE PTR es:[rdi],dx
   14003e705:	outs   dx,DWORD PTR ds:[rsi]
   14003e706:	movsxd eax,DWORD PTR [rax]
   14003e708:	add    BYTE PTR [rax],al
   14003e70a:	add    BYTE PTR [rax],al
   14003e70c:	add    ah,bl
   14003e70e:	pop    rdi
   14003e70f:	add    esi,DWORD PTR [rdi+0x69]
   14003e712:	outs   dx,BYTE PTR ds:[rsi]
   14003e713:	outs   dx,DWORD PTR fs:[rsi]
   14003e715:	ja     0x14003e78a
   14003e717:	sub    eax,0x7525
   14003e71c:	out    dx,eax
   14003e71d:	mov    edi,0x1a00bd
	...
   14003e72e:	add    BYTE PTR [rax],al
   14003e730:	add    DWORD PTR [rax],eax
   14003e732:	add    BYTE PTR [rax],al
   14003e734:	add    DWORD PTR [rax],eax
   14003e736:	add    BYTE PTR [rax],al
   14003e738:	add    DWORD PTR [rax],eax
   14003e73a:	add    BYTE PTR [rax],al
   14003e73c:	add    DWORD PTR [rax],eax
   14003e73e:	add    BYTE PTR [rax],al
   14003e740:	add    DWORD PTR [rax],eax
   14003e742:	add    BYTE PTR [rax],al
   14003e744:	add    DWORD PTR [rax],eax
   14003e746:	add    BYTE PTR [rax],al
   14003e748:	add    DWORD PTR [rax],eax
   14003e74a:	add    BYTE PTR [rax],al
   14003e74c:	add    DWORD PTR [rax],eax
   14003e74e:	add    BYTE PTR [rax],al
   14003e750:	add    DWORD PTR [rax],eax
   14003e752:	add    BYTE PTR [rax],al
   14003e754:	add    DWORD PTR [rax],eax
   14003e756:	add    BYTE PTR [rax],al
   14003e758:	add    DWORD PTR [rax],eax
   14003e75a:	add    BYTE PTR [rax],al
   14003e75c:	add    DWORD PTR [rax],eax
   14003e75e:	add    BYTE PTR [rax],al
   14003e760:	add    DWORD PTR [rax],eax
   14003e762:	add    BYTE PTR [rax],al
   14003e764:	add    DWORD PTR [rax],eax
   14003e766:	add    BYTE PTR [rax],al
   14003e768:	add    DWORD PTR [rax],eax
   14003e76a:	add    BYTE PTR [rax],al
   14003e76c:	add    DWORD PTR [rax],eax
   14003e76e:	add    BYTE PTR [rax],al
   14003e770:	add    DWORD PTR [rax],eax
   14003e772:	add    BYTE PTR [rax],al
   14003e774:	add    DWORD PTR [rax],eax
   14003e776:	add    BYTE PTR [rax],al
   14003e778:	add    DWORD PTR [rax],eax
   14003e77a:	add    BYTE PTR [rax],al
   14003e77c:	add    DWORD PTR [rax],eax
   14003e77e:	add    BYTE PTR [rax],al
   14003e780:	add    DWORD PTR [rax],eax
   14003e782:	add    BYTE PTR [rax],al
   14003e784:	add    DWORD PTR [rax],eax
   14003e786:	add    BYTE PTR [rax],al
   14003e788:	add    DWORD PTR [rax],eax
   14003e78a:	add    BYTE PTR [rax],al
   14003e78c:	add    DWORD PTR [rax],eax
   14003e78e:	add    BYTE PTR [rax],al
   14003e790:	add    DWORD PTR [rax],eax
   14003e792:	add    BYTE PTR [rax],al
   14003e794:	add    DWORD PTR [rax],eax
   14003e796:	add    BYTE PTR [rax],al
   14003e798:	add    DWORD PTR [rax],eax
   14003e79a:	add    BYTE PTR [rax],al
   14003e79c:	add    DWORD PTR [rax],eax
   14003e79e:	add    BYTE PTR [rax],al
   14003e7a0:	add    DWORD PTR [rax],eax
   14003e7a2:	add    BYTE PTR [rax],al
   14003e7a4:	add    DWORD PTR [rax],eax
   14003e7a6:	add    BYTE PTR [rax],al
   14003e7a8:	add    DWORD PTR [rax],eax
   14003e7aa:	add    BYTE PTR [rax],al
   14003e7ac:	add    DWORD PTR [rax],eax
	...
   14003e89e:	add    BYTE PTR [rax],al
   14003e8a0:	add    DWORD PTR [rax],eax
	...
   14003e92a:	add    BYTE PTR [rax],al
   14003e92c:	add    DWORD PTR [rax],eax
   14003e92e:	add    BYTE PTR [rax],al
   14003e930:	add    DWORD PTR [rax],eax
   14003e932:	add    BYTE PTR [rax],al
   14003e934:	add    DWORD PTR [rax],eax
   14003e936:	add    BYTE PTR [rax],al
   14003e938:	add    DWORD PTR [rax],eax
   14003e93a:	add    BYTE PTR [rax],al
   14003e93c:	add    DWORD PTR [rax],eax
   14003e93e:	add    BYTE PTR [rax],al
   14003e940:	add    DWORD PTR [rax],eax
   14003e942:	add    BYTE PTR [rax],al
   14003e944:	add    DWORD PTR [rax],eax
   14003e946:	add    BYTE PTR [rax],al
   14003e948:	add    DWORD PTR [rax],eax
   14003e94a:	add    BYTE PTR [rax],al
   14003e94c:	add    DWORD PTR [rax],eax
   14003e94e:	add    BYTE PTR [rax],al
   14003e950:	add    DWORD PTR [rax],eax
   14003e952:	add    BYTE PTR [rax],al
   14003e954:	add    DWORD PTR [rax],eax
   14003e956:	add    BYTE PTR [rax],al
   14003e958:	add    DWORD PTR [rax],eax
   14003e95a:	add    BYTE PTR [rax],al
   14003e95c:	add    DWORD PTR [rax],eax
   14003e95e:	add    BYTE PTR [rax],al
   14003e960:	add    DWORD PTR [rax],eax
   14003e962:	add    BYTE PTR [rax],al
   14003e964:	add    DWORD PTR [rax],eax
   14003e966:	add    BYTE PTR [rax],al
   14003e968:	add    DWORD PTR [rax],eax
   14003e96a:	add    BYTE PTR [rax],al
   14003e96c:	add    DWORD PTR [rax],eax
   14003e96e:	add    BYTE PTR [rax],al
   14003e970:	add    DWORD PTR [rax],eax
   14003e972:	add    BYTE PTR [rax],al
   14003e974:	add    DWORD PTR [rax],eax
   14003e976:	add    BYTE PTR [rax],al
   14003e978:	add    DWORD PTR [rax],eax
   14003e97a:	add    BYTE PTR [rax],al
   14003e97c:	add    DWORD PTR [rax],eax
   14003e97e:	add    BYTE PTR [rax],al
   14003e980:	add    DWORD PTR [rax],eax
   14003e982:	add    BYTE PTR [rax],al
   14003e984:	add    DWORD PTR [rax],eax
   14003e986:	add    BYTE PTR [rax],al
   14003e988:	add    DWORD PTR [rax],eax
   14003e98a:	add    BYTE PTR [rax],al
   14003e98c:	add    DWORD PTR [rax],eax
   14003e98e:	add    BYTE PTR [rax],al
   14003e990:	add    DWORD PTR [rax],eax
   14003e992:	add    BYTE PTR [rax],al
   14003e994:	add    DWORD PTR [rax],eax
   14003e996:	add    BYTE PTR [rax],al
   14003e998:	add    DWORD PTR [rax],eax
   14003e99a:	add    BYTE PTR [rax],al
   14003e99c:	add    DWORD PTR [rax],eax
   14003e99e:	add    BYTE PTR [rax],al
   14003e9a0:	add    DWORD PTR [rax],eax
   14003e9a2:	add    BYTE PTR [rax],al
   14003e9a4:	add    DWORD PTR [rax],eax
   14003e9a6:	add    BYTE PTR [rax],al
   14003e9a8:	add    DWORD PTR [rax],eax
   14003e9aa:	add    BYTE PTR [rax],al
   14003e9ac:	add    DWORD PTR [rax],eax
   14003e9ae:	add    BYTE PTR [rax],al
   14003e9b0:	add    DWORD PTR [rax],eax
   14003e9b2:	add    BYTE PTR [rax],al
   14003e9b4:	add    DWORD PTR [rax],eax
   14003e9b6:	add    BYTE PTR [rax],al
   14003e9b8:	add    DWORD PTR [rax],eax
   14003e9ba:	add    BYTE PTR [rax],al
   14003e9bc:	add    DWORD PTR [rax],eax
   14003e9be:	add    BYTE PTR [rax],al
   14003e9c0:	add    DWORD PTR [rax],eax
   14003e9c2:	add    BYTE PTR [rax],al
   14003e9c4:	add    DWORD PTR [rax],eax
   14003e9c6:	add    BYTE PTR [rax],al
   14003e9c8:	add    DWORD PTR [rax],eax
   14003e9ca:	add    BYTE PTR [rax],al
   14003e9cc:	add    DWORD PTR [rax],eax
   14003e9ce:	add    BYTE PTR [rax],al
   14003e9d0:	add    DWORD PTR [rax],eax
   14003e9d2:	add    BYTE PTR [rax],al
   14003e9d4:	add    DWORD PTR [rax],eax
   14003e9d6:	add    BYTE PTR [rax],al
   14003e9d8:	add    DWORD PTR [rax],eax
   14003e9da:	add    BYTE PTR [rax],al
   14003e9dc:	add    DWORD PTR [rax],eax
   14003e9de:	add    BYTE PTR [rax],al
   14003e9e0:	add    DWORD PTR [rax],eax
   14003e9e2:	add    BYTE PTR [rax],al
   14003e9e4:	add    DWORD PTR [rax],eax
   14003e9e6:	add    BYTE PTR [rax],al
   14003e9e8:	add    DWORD PTR [rax],eax
   14003e9ea:	add    BYTE PTR [rax],al
   14003e9ec:	add    DWORD PTR [rax],eax
   14003e9ee:	add    BYTE PTR [rax],al
   14003e9f0:	add    DWORD PTR [rax],eax
   14003e9f2:	add    BYTE PTR [rax],al
   14003e9f4:	add    DWORD PTR [rax],eax
   14003e9f6:	add    BYTE PTR [rax],al
   14003e9f8:	add    DWORD PTR [rax],eax
   14003e9fa:	add    BYTE PTR [rax],al
   14003e9fc:	add    DWORD PTR [rax],eax
   14003e9fe:	add    BYTE PTR [rax],al
   14003ea00:	add    DWORD PTR [rax],eax
   14003ea02:	add    BYTE PTR [rax],al
   14003ea04:	add    DWORD PTR [rax],eax
   14003ea06:	add    BYTE PTR [rax],al
   14003ea08:	add    DWORD PTR [rax],eax
   14003ea0a:	add    BYTE PTR [rax],al
   14003ea0c:	add    DWORD PTR [rax],eax
   14003ea0e:	add    BYTE PTR [rax],al
   14003ea10:	add    DWORD PTR [rax],eax
   14003ea12:	add    BYTE PTR [rax],al
   14003ea14:	add    DWORD PTR [rax],eax
   14003ea16:	add    BYTE PTR [rax],al
   14003ea18:	add    DWORD PTR [rax],eax
   14003ea1a:	add    BYTE PTR [rax],al
   14003ea1c:	add    DWORD PTR [rax],eax
   14003ea1e:	add    BYTE PTR [rax],al
   14003ea20:	add    DWORD PTR [rax],eax
   14003ea22:	add    BYTE PTR [rax],al
   14003ea24:	add    DWORD PTR [rax],eax
   14003ea26:	add    BYTE PTR [rax],al
   14003ea28:	add    DWORD PTR [rax],eax
   14003ea2a:	add    BYTE PTR [rax],al
   14003ea2c:	add    DWORD PTR [rax],eax
   14003ea2e:	add    BYTE PTR [rax],al
   14003ea30:	add    DWORD PTR [rax],eax
   14003ea32:	add    BYTE PTR [rax],al
   14003ea34:	add    DWORD PTR [rax],eax
   14003ea36:	add    BYTE PTR [rax],al
   14003ea38:	add    DWORD PTR [rax],eax
   14003ea3a:	add    BYTE PTR [rax],al
   14003ea3c:	add    DWORD PTR [rax],eax
   14003ea3e:	add    BYTE PTR [rax],al
   14003ea40:	add    DWORD PTR [rax],eax
   14003ea42:	add    BYTE PTR [rax],al
   14003ea44:	add    DWORD PTR [rax],eax
   14003ea46:	add    BYTE PTR [rax],al
   14003ea48:	add    DWORD PTR [rax],eax
   14003ea4a:	add    BYTE PTR [rax],al
   14003ea4c:	add    DWORD PTR [rax],eax
   14003ea4e:	add    BYTE PTR [rax],al
   14003ea50:	add    DWORD PTR [rax],eax
   14003ea52:	add    BYTE PTR [rax],al
   14003ea54:	add    DWORD PTR [rax],eax
   14003ea56:	add    BYTE PTR [rax],al
   14003ea58:	add    DWORD PTR [rax],eax
   14003ea5a:	add    BYTE PTR [rax],al
   14003ea5c:	add    DWORD PTR [rax],eax
   14003ea5e:	add    BYTE PTR [rax],al
   14003ea60:	add    DWORD PTR [rax],eax
   14003ea62:	add    BYTE PTR [rax],al
   14003ea64:	add    DWORD PTR [rax],eax
   14003ea66:	add    BYTE PTR [rax],al
   14003ea68:	add    DWORD PTR [rax],eax
   14003ea6a:	add    BYTE PTR [rax],al
   14003ea6c:	add    DWORD PTR [rax],eax
   14003ea6e:	add    BYTE PTR [rax],al
   14003ea70:	add    DWORD PTR [rax],eax
   14003ea72:	add    BYTE PTR [rax],al
   14003ea74:	add    DWORD PTR [rax],eax
   14003ea76:	add    BYTE PTR [rax],al
   14003ea78:	add    DWORD PTR [rax],eax
   14003ea7a:	add    BYTE PTR [rax],al
   14003ea7c:	add    DWORD PTR [rax],eax
   14003ea7e:	add    BYTE PTR [rax],al
   14003ea80:	add    DWORD PTR [rax],eax
   14003ea82:	add    BYTE PTR [rax],al
   14003ea84:	add    DWORD PTR [rax],eax
   14003ea86:	add    BYTE PTR [rax],al
   14003ea88:	add    DWORD PTR [rax],eax
   14003ea8a:	add    BYTE PTR [rax],al
   14003ea8c:	add    DWORD PTR [rax],eax
   14003ea8e:	add    BYTE PTR [rax],al
   14003ea90:	add    DWORD PTR [rax],eax
   14003ea92:	add    BYTE PTR [rax],al
   14003ea94:	add    DWORD PTR [rax],eax
   14003ea96:	add    BYTE PTR [rax],al
   14003ea98:	add    DWORD PTR [rax],eax
   14003ea9a:	add    BYTE PTR [rax],al
   14003ea9c:	add    DWORD PTR [rax],eax
   14003ea9e:	add    BYTE PTR [rax],al
   14003eaa0:	add    DWORD PTR [rax],eax
   14003eaa2:	add    BYTE PTR [rax],al
   14003eaa4:	add    DWORD PTR [rax],eax
   14003eaa6:	add    BYTE PTR [rax],al
   14003eaa8:	add    DWORD PTR [rax],eax
   14003eaaa:	add    BYTE PTR [rax],al
   14003eaac:	add    DWORD PTR [rax],eax
   14003eaae:	add    BYTE PTR [rax],al
   14003eab0:	add    DWORD PTR [rax],eax
   14003eab2:	add    BYTE PTR [rax],al
   14003eab4:	add    DWORD PTR [rax],eax
   14003eab6:	add    BYTE PTR [rax],al
   14003eab8:	add    DWORD PTR [rax],eax
   14003eaba:	add    BYTE PTR [rax],al
   14003eabc:	add    DWORD PTR [rax],eax
   14003eabe:	add    BYTE PTR [rax],al
   14003eac0:	add    DWORD PTR [rax],eax
   14003eac2:	add    BYTE PTR [rax],al
   14003eac4:	add    DWORD PTR [rax],eax
   14003eac6:	add    BYTE PTR [rax],al
   14003eac8:	add    DWORD PTR [rax],eax
   14003eaca:	add    BYTE PTR [rax],al
   14003eacc:	add    DWORD PTR [rax],eax
   14003eace:	add    BYTE PTR [rax],al
   14003ead0:	add    DWORD PTR [rax],eax
   14003ead2:	add    BYTE PTR [rax],al
   14003ead4:	add    DWORD PTR [rax],eax
   14003ead6:	add    BYTE PTR [rax],al
   14003ead8:	add    DWORD PTR [rax],eax
   14003eada:	add    BYTE PTR [rax],al
   14003eadc:	add    DWORD PTR [rax],eax
   14003eade:	add    BYTE PTR [rax],al
   14003eae0:	add    DWORD PTR [rax],eax
   14003eae2:	add    BYTE PTR [rax],al
   14003eae4:	add    DWORD PTR [rax],eax
   14003eae6:	add    BYTE PTR [rax],al
   14003eae8:	add    DWORD PTR [rax],eax
   14003eaea:	add    BYTE PTR [rax],al
   14003eaec:	add    DWORD PTR [rax],eax
   14003eaee:	add    BYTE PTR [rax],al
   14003eaf0:	add    DWORD PTR [rax],eax
   14003eaf2:	add    BYTE PTR [rax],al
   14003eaf4:	add    DWORD PTR [rax],eax
   14003eaf6:	add    BYTE PTR [rax],al
   14003eaf8:	add    DWORD PTR [rax],eax
   14003eafa:	add    BYTE PTR [rax],al
   14003eafc:	add    DWORD PTR [rax],eax
   14003eafe:	add    BYTE PTR [rax],al
   14003eb00:	add    DWORD PTR [rax],eax
   14003eb02:	add    BYTE PTR [rax],al
   14003eb04:	add    DWORD PTR [rax],eax
   14003eb06:	add    BYTE PTR [rax],al
   14003eb08:	add    DWORD PTR [rax],eax
   14003eb0a:	add    BYTE PTR [rax],al
   14003eb0c:	add    DWORD PTR [rax],eax
   14003eb0e:	add    BYTE PTR [rax],al
   14003eb10:	add    DWORD PTR [rax],eax
   14003eb12:	add    BYTE PTR [rax],al
   14003eb14:	add    DWORD PTR [rax],eax
   14003eb16:	add    BYTE PTR [rax],al
   14003eb18:	add    DWORD PTR [rax],eax
   14003eb1a:	add    BYTE PTR [rax],al
   14003eb1c:	add    DWORD PTR [rax],eax
   14003eb1e:	add    BYTE PTR [rax],al
   14003eb20:	add    DWORD PTR [rax],eax
   14003eb22:	add    BYTE PTR [rax],al
   14003eb24:	add    DWORD PTR [rax],eax
   14003eb26:	add    BYTE PTR [rax],al
   14003eb28:	add    DWORD PTR [rax],eax
   14003eb2a:	add    BYTE PTR [rax],al
   14003eb2c:	add    DWORD PTR [rax],eax
   14003eb2e:	add    BYTE PTR [rax],al
   14003eb30:	pop    rsp
   14003eb31:	js     0x14003eb33
   14003eb33:	add    BYTE PTR [rax],al
   14003eb35:	add    BYTE PTR [rax],al
   14003eb37:	add    BYTE PTR [rax+0x41],dl
   14003eb3a:	rex.WRX
   14003eb3b:	rex.WB
   14003eb3c:	rex.XB and BYTE PTR [rip+0x64253a73],spl        # 0x1a42925b6
   14003eb43:	or     al,BYTE PTR [rax]
   14003eb45:	add    BYTE PTR [rax],al
   14003eb47:	add    BYTE PTR [rdx+0x6f],ah
   14003eb4a:	jb     0x14003ebad
   14003eb4c:	pop    rsp
   14003eb4d:	ins    BYTE PTR es:[rdi],dx
   14003eb4e:	imul   esp,DWORD PTR [rdx+0x5c],0x63696e75
   14003eb55:	outs   dx,DWORD PTR ds:[rsi]
   14003eb56:	fs gs pop rsp
   14003eb59:	jne    0x14003ebc9
   14003eb5b:	imul   esp,DWORD PTR [rbx+0x6f],0x6f436564
   14003eb62:	ins    DWORD PTR es:[rdi],dx
   14003eb63:	ins    DWORD PTR es:[rdi],dx
   14003eb64:	outs   dx,DWORD PTR ds:[rsi]
   14003eb65:	outs   dx,BYTE PTR ds:[rsi]
   14003eb66:	movsxd eax,DWORD PTR cs:[rax]
   14003eb69:	add    BYTE PTR [rax],al
   14003eb6b:	add    BYTE PTR [rax],al
   14003eb6d:	add    BYTE PTR [rax],al
   14003eb6f:	add    BYTE PTR [rip+0x43203a73],ah        # 0x1832425e8
   14003eb75:	outs   dx,DWORD PTR ds:[rsi]
   14003eb76:	jne    0x14003ebe4
   14003eb78:	outs   dx,BYTE PTR fs:[rsi]
   14003eb7a:	(bad)  
   14003eb7b:	je     0x14003eb9d
   14003eb7d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003eb80:	jbe    0x14003ebe7
   14003eb82:	jb     0x14003ebf8
   14003eb84:	and    BYTE PTR [rcx+0x6e],ch
   14003eb87:	jbe    0x14003ebea
   14003eb89:	ins    BYTE PTR es:[rdi],dx
   14003eb8a:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x65666675
   14003eb92:	jb     0x14003ebb4
   14003eb94:	pop    rbx
   14003eb95:	and    eax,0x66205d73
   14003eb9a:	jb     0x14003ec0b
   14003eb9c:	ins    DWORD PTR es:[rdi],dx
   14003eb9d:	and    BYTE PTR [rip+0x6f742073],ah        # 0x1af780c16
   14003eba3:	and    BYTE PTR [rbp+0x6e],dl
   14003eba6:	imul   esp,DWORD PTR [rbx+0x6f],0xa2e6564
   14003ebad:	add    BYTE PTR [rax],al
   14003ebaf:	add    BYTE PTR [rbp+0x6e],dl
   14003ebb2:	imul   esp,DWORD PTR [rbx+0x6f],0x415f6564
   14003ebb9:	ins    BYTE PTR es:[rdi],dx
   14003ebba:	ins    BYTE PTR es:[rdi],dx
   14003ebbb:	outs   dx,DWORD PTR ds:[rsi]
   14003ebbc:	movsxd edx,DWORD PTR [rdi+0x69]
   14003ebbf:	je     0x14003ec29
   14003ebc1:	rex.WR
   14003ebc2:	outs   dx,BYTE PTR gs:[rsi]
   14003ebc4:	addr32 je 0x14003ec2f
   14003ebc7:	add    BYTE PTR [rax],ch
   14003ebc9:	movsxd ebp,DWORD PTR [rdi+0x75]
   14003ebcc:	ins    BYTE PTR es:[rdi],dx
   14003ebcd:	outs   dx,BYTE PTR fs:[rsi]
   14003ebcf:	(bad)  
   14003ebd0:	je     0x14003ebf2
   14003ebd2:	gs jae 0x14003ec38
   14003ebd5:	(bad)  
   14003ebd6:	jo     0x14003ec3d
   14003ebd8:	and    BYTE PTR [rdx+0x79],ah
   14003ebdb:	je     0x14003ec42
   14003ebdd:	jae    0x14003ec08
   14003ebdf:	add    BYTE PTR [rdx],cl
   14003ebe1:	add    BYTE PTR [rax],al
   14003ebe3:	add    BYTE PTR [rax],al
   14003ebe5:	add    BYTE PTR [rax],al
   14003ebe7:	add    BYTE PTR [rdx+0x6f],ah
   14003ebea:	jb     0x14003ec4d
   14003ebec:	pop    rsp
   14003ebed:	ins    BYTE PTR es:[rdi],dx
   14003ebee:	imul   esp,DWORD PTR [rdx+0x5c],0x63696e75
   14003ebf5:	outs   dx,DWORD PTR ds:[rsi]
   14003ebf6:	fs gs pop rsp
   14003ebf9:	jne    0x14003ec69
   14003ebfb:	imul   esp,DWORD PTR [rbx+0x6f],0x69536564
   14003ec02:	ins    DWORD PTR es:[rdi],dx
   14003ec03:	jo     0x14003ec71
   14003ec05:	gs rex.X (bad) 
   14003ec08:	jae    0x14003ec6f
   14003ec0a:	movsxd eax,DWORD PTR cs:[rax]
   14003ec0d:	add    BYTE PTR [rax],al
   14003ec0f:	add    BYTE PTR [rsi],ch
   14003ec11:	fs (bad) 
   14003ec13:	je     0x14003ec15
   14003ec15:	add    BYTE PTR [rax],al
   14003ec17:	add    BYTE PTR [rsi],ch
   14003ec19:	add    BYTE PTR [rax],al
   14003ec1b:	add    BYTE PTR [rdi],ch
   14003ec1d:	add    BYTE PTR [rax],al
   14003ec1f:	add    BYTE PTR [rcx+0x43],cl
   14003ec22:	push   rbp
   14003ec23:	rex.R
   14003ec24:	push   r12
   14003ec26:	rex.B sub eax,0x0
   14003ec2c:	add    BYTE PTR [rax],al
   14003ec2e:	add    BYTE PTR [rax],al
   14003ec30:	imul   esp,DWORD PTR [rbx+0x75],0x34347464
   14003ec37:	ins    BYTE PTR es:[rdi],dx
   14003ec38:	sub    eax,0x0
   14003ec3d:	add    BYTE PTR [rax],al
   14003ec3f:	add    BYTE PTR [rcx+0x43],cl
   14003ec42:	push   rbp
   14003ec43:	rex.R
   14003ec44:	push   r12
   14003ec46:	add    BYTE PTR [r8],al
   14003ec49:	add    BYTE PTR [rax],al
   14003ec4b:	add    BYTE PTR [rax],al
   14003ec4d:	add    al,bh
   14003ec4f:	jg     0x14003ec51
   14003ec51:	add    BYTE PTR [rax],al
   14003ec53:	add    BYTE PTR [rax],al
   14003ec55:	add    al,dh
   14003ec57:	jg     0x14003ec59
   14003ec59:	add    BYTE PTR [rax],al
   14003ec5b:	add    BYTE PTR [rax],al
   14003ec5d:	add    BYTE PTR [rax],al
   14003ec5f:	add    BYTE PTR [rcx+0x43],cl
   14003ec62:	push   rbp
   14003ec63:	pop    rdi
   14003ec64:	rex.R
   14003ec65:	push   r12
   14003ec67:	add    BYTE PTR [r8],al
   14003ec6a:	add    BYTE PTR [rax],al
   14003ec6c:	outs   dx,BYTE PTR gs:[rsi]
   14003ec6e:	pop    rdi
   14003ec6f:	push   rbp
   14003ec70:	push   rbx
   14003ec71:	add    BYTE PTR [rax],al
   14003ec73:	add    BYTE PTR [rax],al
   14003ec75:	add    BYTE PTR [rax],al
   14003ec77:	add    BYTE PTR [rdi+0x69],dh
   14003ec7a:	outs   dx,BYTE PTR ds:[rsi]
   14003ec7b:	outs   dx,DWORD PTR fs:[rsi]
   14003ec7d:	ja     0x14003ecf2
   14003ec7f:	sub    eax,0x6425
   14003ec84:	add    BYTE PTR [rax],al
   14003ec86:	add    BYTE PTR [rax],al
   14003ec88:	rex.WB push r11
   14003ec8a:	rex.WRXB pop r15
   14003ec8c:	xor    dh,BYTE PTR [rax]
   14003ec8e:	xor    dh,BYTE PTR [rdx]
   14003ec90:	sub    al,0x6c
   14003ec92:	outs   dx,DWORD PTR ds:[rsi]
   14003ec93:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003ec96:	gs cmp eax,0x762c6f6b
   14003ec9c:	gs jb  0x14003ed12
   14003ec9f:	imul   ebp,DWORD PTR [rdi+0x6e],0x303d
   14003eca6:	add    BYTE PTR [rax],al
   14003eca8:	imul   esp,DWORD PTR [rdx+0x6d],0x3633312d
   14003ecaf:	xor    ebx,DWORD PTR [rdi+0x50]
   14003ecb2:	xor    DWORD PTR [rcx],esi
   14003ecb4:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d25eb
   14003ecba:	add    BYTE PTR [rax],al
   14003ecbc:	add    BYTE PTR [rax],al
   14003ecbe:	add    BYTE PTR [rax],al
   14003ecc0:	imul   esp,DWORD PTR [rdx+0x6d],0x3934392d
   14003ecc7:	pop    rdi
   14003ecc8:	push   rax
   14003ecc9:	xor    DWORD PTR [rcx],esi
   14003eccb:	xor    BYTE PTR [rip+0x39393931],ch        # 0x1793d2602
   14003ecd1:	add    BYTE PTR [rax],al
   14003ecd3:	add    BYTE PTR [rax],al
   14003ecd5:	add    BYTE PTR [rax],al
   14003ecd7:	add    BYTE PTR [rcx+0x62],ch
   14003ecda:	ins    DWORD PTR es:[rdi],dx
   14003ecdb:	sub    eax,0x5f343439
   14003ece0:	push   rax
   14003ece1:	xor    DWORD PTR [rax],esi
   14003ece3:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d261a
   14003ece9:	add    BYTE PTR [rax],al
   14003eceb:	add    BYTE PTR [rax],al
   14003eced:	add    BYTE PTR [rax],al
   14003ecef:	add    BYTE PTR [rcx+0x62],ch
   14003ecf2:	ins    DWORD PTR es:[rdi],dx
   14003ecf3:	sub    eax,0x32373333
   14003ecf8:	xor    bl,BYTE PTR [rdi+0x50]
   14003ecfb:	xor    DWORD PTR [rdx],esi
   14003ecfd:	xor    BYTE PTR [rip+0x39393931],ch        # 0x1793d2634
   14003ed03:	add    BYTE PTR [rax],al
   14003ed05:	add    BYTE PTR [rax],al
   14003ed07:	add    BYTE PTR [rcx+0x62],ch
   14003ed0a:	ins    DWORD PTR es:[rdi],dx
   14003ed0b:	sub    eax,0x5f363439
   14003ed10:	push   rax
   14003ed11:	xor    DWORD PTR [rax],esi
   14003ed13:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d264a
   14003ed19:	add    BYTE PTR [rax],al
   14003ed1b:	add    BYTE PTR [rax],al
   14003ed1d:	add    BYTE PTR [rax],al
   14003ed1f:	add    BYTE PTR [rcx+0x62],ch
   14003ed22:	ins    DWORD PTR es:[rdi],dx
   14003ed23:	sub    eax,0x5f333439
   14003ed28:	push   rax
   14003ed29:	xor    DWORD PTR [rbx],esi
   14003ed2b:	xor    BYTE PTR [rip+0x39393931],ch        # 0x1793d2662
   14003ed31:	add    BYTE PTR [rax],al
   14003ed33:	add    BYTE PTR [rax],al
   14003ed35:	add    BYTE PTR [rax],al
   14003ed37:	add    BYTE PTR [rcx+0x62],ch
   14003ed3a:	ins    DWORD PTR es:[rdi],dx
   14003ed3b:	sub    eax,0x5f323439
   14003ed40:	push   rax
   14003ed41:	xor    DWORD PTR [rdx],esi
   14003ed43:	xor    BYTE PTR [rip+0x39393931],ch        # 0x1793d267a
   14003ed49:	add    BYTE PTR [rax],al
   14003ed4b:	add    BYTE PTR [rax],al
   14003ed4d:	add    BYTE PTR [rax],al
   14003ed4f:	add    BYTE PTR [rcx+0x62],ch
   14003ed52:	ins    DWORD PTR es:[rdi],dx
   14003ed53:	sub    eax,0x5f373938
   14003ed58:	push   rax
   14003ed59:	xor    DWORD PTR [rax],esi
   14003ed5b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d2692
	...
   14003ed6d:	add    BYTE PTR [rax],al
   14003ed6f:	add    BYTE PTR [rax-0x13],dl
   14003ed72:	add    eax,DWORD PTR [rax+0x1]
   14003ed75:	add    BYTE PTR [rax],al
   14003ed77:	add    BYTE PTR [rbp+0x0],ah
   14003ed7d:	add    BYTE PTR [rax],al
   14003ed7f:	add    BYTE PTR [rax],bh
   14003ed81:	in     eax,dx
   14003ed82:	add    eax,DWORD PTR [rax+0x1]
   14003ed85:	add    BYTE PTR [rax],al
   14003ed87:	add    BYTE PTR [rbp+0x0],ah
   14003ed8d:	add    BYTE PTR [rax],al
   14003ed8f:	add    BYTE PTR [rax],ah
   14003ed91:	in     eax,dx
   14003ed92:	add    eax,DWORD PTR [rax+0x1]
   14003ed95:	add    BYTE PTR [rax],al
   14003ed97:	add    BYTE PTR [rbp+0x0],ah
   14003ed9d:	add    BYTE PTR [rax],al
   14003ed9f:	add    BYTE PTR [rax],cl
   14003eda1:	in     eax,dx
   14003eda2:	add    eax,DWORD PTR [rax+0x1]
   14003eda5:	add    BYTE PTR [rax],al
   14003eda7:	add    BYTE PTR [rbp+0x0],ah
   14003edad:	add    BYTE PTR [rax],al
   14003edaf:	add    al,dh
   14003edb1:	in     al,dx
   14003edb2:	add    eax,DWORD PTR [rax+0x1]
   14003edb5:	add    BYTE PTR [rax],al
   14003edb7:	add    BYTE PTR [rbp+0x0],ah
   14003edbd:	add    BYTE PTR [rax],al
   14003edbf:	add    al,bl
   14003edc1:	in     al,dx
   14003edc2:	add    eax,DWORD PTR [rax+0x1]
   14003edc5:	add    BYTE PTR [rax],al
   14003edc7:	add    BYTE PTR [rcx+0x20],ch
   14003edcd:	add    BYTE PTR [rax],al
   14003edcf:	add    al,al
   14003edd1:	in     al,dx
   14003edd2:	add    eax,DWORD PTR [rax+0x1]
   14003edd5:	add    BYTE PTR [rax],al
   14003edd7:	add    BYTE PTR [rcx+0x20],ch
   14003eddd:	add    BYTE PTR [rax],al
   14003eddf:	add    BYTE PTR [rax+0x14003ec],ch
   14003ede5:	add    BYTE PTR [rax],al
   14003ede7:	add    BYTE PTR [rcx+0x20],ch
   14003eded:	add    BYTE PTR [rax],al
   14003edef:	add    BYTE PTR [rax+0x14003ec],cl
   14003edf5:	add    BYTE PTR [rax],al
   14003edf7:	add    BYTE PTR [rcx+0x20],ch
   14003edfd:	add    BYTE PTR [rax],al
   14003edff:	add    BYTE PTR [rbp+0x54],dl
   14003ee02:	rex.RX sub eax,0x37
   14003ee08:	rex.X
   14003ee09:	rex.WRXB
   14003ee0a:	rex.XB push r13
   14003ee0c:	sub    eax,0x53000031
   14003ee11:	rex.XB push r11
   14003ee13:	push   rbp
   14003ee14:	add    BYTE PTR [rax],al
   14003ee16:	add    BYTE PTR [rax],al
   14003ee18:	push   rbp
   14003ee19:	push   rsp
   14003ee1a:	rex.RX sub eax,0x45423233
	...
   14003ee28:	push   rbp
   14003ee29:	push   rsp
   14003ee2a:	rex.RX sub eax,0x454c3233
	...
   14003ee38:	imul   esi,DWORD PTR [rbx+0x63],0x672d6969
   14003ee3f:	jne    0x14003eeb3
   14003ee41:	add    BYTE PTR [rax],al
   14003ee43:	add    BYTE PTR [rax],al
   14003ee45:	add    BYTE PTR [rax],al
   14003ee47:	add    BYTE PTR [rax+0x2d],bh
   14003ee4a:	imul   esi,DWORD PTR [rbx+0x63],0x702d6969
   14003ee51:	(bad)  
   14003ee52:	add    BYTE PTR [rax],al
   14003ee54:	add    BYTE PTR [rax],al
   14003ee56:	add    BYTE PTR [rax],al
   14003ee58:	push   rdi
   14003ee59:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003ee60:	xor    eax,0x31313037
   14003ee65:	add    BYTE PTR [rax],al
   14003ee67:	add    BYTE PTR [rax+0x2d],bh
   14003ee6a:	imul   esi,DWORD PTR [rbx+0x63],0x672d6969
   14003ee71:	jne    0x14003eedd
   14003ee73:	add    BYTE PTR [rax],al
   14003ee75:	add    BYTE PTR [rax],al
   14003ee77:	add    BYTE PTR [rax+0x2d],bh
   14003ee7a:	imul   esi,DWORD PTR [rbx+0x63],0x672d6969
   14003ee81:	jne    0x14003ee83
   14003ee83:	add    BYTE PTR [rax],al
   14003ee85:	add    BYTE PTR [rax],al
   14003ee87:	add    BYTE PTR [rdi+0x69],dl
   14003ee8a:	outs   dx,BYTE PTR ds:[rsi]
   14003ee8b:	outs   dx,DWORD PTR fs:[rsi]
   14003ee8d:	ja     0x14003ef02
   14003ee8f:	sub    eax,0x31303735
   14003ee94:	xor    BYTE PTR [rax],al
   14003ee96:	add    BYTE PTR [rax],al
   14003ee98:	imul   esi,DWORD PTR [rbx+0x63],0x6d2d6969
   14003ee9f:	ins    BYTE PTR es:[rdi],dx
   14003eea0:	ins    DWORD PTR es:[rdi],dx
   14003eea1:	add    BYTE PTR [rax],al
   14003eea3:	add    BYTE PTR [rax],al
   14003eea5:	add    BYTE PTR [rax],al
   14003eea7:	add    BYTE PTR [rax+0x2d],bh
   14003eeaa:	imul   esi,DWORD PTR [rbx+0x63],0x6d2d6969
   14003eeb1:	(bad)  
   14003eeb2:	add    BYTE PTR [rax],al
   14003eeb4:	add    BYTE PTR [rax],al
   14003eeb6:	add    BYTE PTR [rax],al
   14003eeb8:	push   rdi
   14003eeb9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003eec0:	xor    eax,0x39303037
   14003eec5:	add    BYTE PTR [rax],al
   14003eec7:	add    BYTE PTR [rcx+0x73],ch
   14003eeca:	movsxd ebp,DWORD PTR [rcx+0x69]
   14003eecd:	sub    eax,0x646e6b
   14003eed2:	add    BYTE PTR [rax],al
   14003eed4:	add    BYTE PTR [rax],al
   14003eed6:	add    BYTE PTR [rax],al
   14003eed8:	js     0x14003ef07
   14003eeda:	imul   esi,DWORD PTR [rbx+0x63],0x6b2d6969
   14003eee1:	(bad)  
   14003eee2:	add    BYTE PTR [rax],al
   14003eee4:	add    BYTE PTR [rax],al
   14003eee6:	add    BYTE PTR [rax],al
   14003eee8:	push   rdi
   14003eee9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003eef0:	xor    eax,0x38303037
   14003eef5:	add    BYTE PTR [rax],al
   14003eef7:	add    BYTE PTR [rcx+0x73],ch
   14003eefa:	movsxd ebp,DWORD PTR [rcx+0x69]
   14003eefd:	sub    eax,0x69726f
   14003ef02:	add    BYTE PTR [rax],al
   14003ef04:	add    BYTE PTR [rax],al
   14003ef06:	add    BYTE PTR [rax],al
   14003ef08:	js     0x14003ef37
   14003ef0a:	imul   esi,DWORD PTR [rbx+0x63],0x6f2d6969
   14003ef11:	jb     0x14003ef13
   14003ef13:	add    BYTE PTR [rax],al
   14003ef15:	add    BYTE PTR [rax],al
   14003ef17:	add    BYTE PTR [rdi+0x69],dl
   14003ef1a:	outs   dx,BYTE PTR ds:[rsi]
   14003ef1b:	outs   dx,DWORD PTR fs:[rsi]
   14003ef1d:	ja     0x14003ef92
   14003ef1f:	sub    eax,0x30303735
   14003ef24:	(bad)  
   14003ef25:	add    BYTE PTR [rax],al
   14003ef27:	add    BYTE PTR [rax+0x2d],bh
   14003ef2a:	imul   esi,DWORD PTR [rbx+0x63],0x612d6969
   14003ef31:	jae    0x14003ef33
   14003ef33:	add    BYTE PTR [rax],al
   14003ef35:	add    BYTE PTR [rax],al
   14003ef37:	add    BYTE PTR [rdi+0x69],dl
   14003ef3a:	outs   dx,BYTE PTR ds:[rsi]
   14003ef3b:	outs   dx,DWORD PTR fs:[rsi]
   14003ef3d:	ja     0x14003efb2
   14003ef3f:	sub    eax,0x30303735
   14003ef44:	add    BYTE PTR ss:[rax],al
   14003ef47:	add    BYTE PTR [rcx+0x73],ch
   14003ef4a:	movsxd ebp,DWORD PTR [rcx+0x69]
   14003ef4d:	sub    eax,0x676c74
   14003ef52:	add    BYTE PTR [rax],al
   14003ef54:	add    BYTE PTR [rax],al
   14003ef56:	add    BYTE PTR [rax],al
   14003ef58:	js     0x14003ef87
   14003ef5a:	imul   esi,DWORD PTR [rbx+0x63],0x742d6969
   14003ef61:	add    BYTE PTR gs:[rax],al
   14003ef64:	add    BYTE PTR [rax],al
   14003ef66:	add    BYTE PTR [rax],al
   14003ef68:	push   rdi
   14003ef69:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003ef70:	xor    eax,0x35303037
   14003ef75:	add    BYTE PTR [rax],al
   14003ef77:	add    BYTE PTR [rcx+0x73],ch
   14003ef7a:	movsxd ebp,DWORD PTR [rcx+0x69]
   14003ef7d:	sub    eax,0x6c6d74
   14003ef82:	add    BYTE PTR [rax],al
   14003ef84:	add    BYTE PTR [rax],al
   14003ef86:	add    BYTE PTR [rax],al
   14003ef88:	js     0x14003efb7
   14003ef8a:	imul   esi,DWORD PTR [rbx+0x63],0x742d6969
   14003ef91:	(bad)  
   14003ef92:	add    BYTE PTR [rax],al
   14003ef94:	add    BYTE PTR [rax],al
   14003ef96:	add    BYTE PTR [rax],al
   14003ef98:	push   rdi
   14003ef99:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003efa0:	xor    eax,0x34303037
   14003efa5:	add    BYTE PTR [rax],al
   14003efa7:	add    BYTE PTR [rcx+0x73],ch
   14003efaa:	movsxd ebp,DWORD PTR [rcx+0x69]
   14003efad:	sub    eax,0x676e62
   14003efb2:	add    BYTE PTR [rax],al
   14003efb4:	add    BYTE PTR [rax],al
   14003efb6:	add    BYTE PTR [rax],al
   14003efb8:	js     0x14003efe7
   14003efba:	imul   esi,DWORD PTR [rbx+0x63],0x622d6969
   14003efc1:	add    BYTE PTR gs:[rax],al
   14003efc4:	add    BYTE PTR [rax],al
   14003efc6:	add    BYTE PTR [rax],al
   14003efc8:	push   rdi
   14003efc9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003efd0:	xor    eax,0x33303037
   14003efd5:	add    BYTE PTR [rax],al
   14003efd7:	add    BYTE PTR [rcx+0x62],ch
   14003efda:	ins    DWORD PTR es:[rdi],dx
   14003efdb:	sub    eax,0x32303934
	...
   14003efe8:	imul   esi,DWORD PTR [rbx+0x63],0x642d6969
   14003efef:	gs jbe 0x14003eff2
   14003eff2:	add    BYTE PTR [rax],al
   14003eff4:	add    BYTE PTR [rax],al
   14003eff6:	add    BYTE PTR [rax],al
   14003eff8:	js     0x14003f027
   14003effa:	imul   esi,DWORD PTR [rbx+0x63],0x642d6969
   14003f001:	add    BYTE PTR gs:[rax],al
   14003f004:	add    BYTE PTR [rax],al
   14003f006:	add    BYTE PTR [rax],al
   14003f008:	push   rdi
   14003f009:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f010:	xor    eax,0x32303037
   14003f015:	add    BYTE PTR [rax],al
   14003f017:	add    BYTE PTR [rdi+0x69],dl
   14003f01a:	outs   dx,BYTE PTR ds:[rsi]
   14003f01b:	outs   dx,DWORD PTR fs:[rsi]
   14003f01d:	ja     0x14003f092
   14003f01f:	sub    eax,0x35393135
   14003f024:	xor    BYTE PTR [rax],al
   14003f026:	add    BYTE PTR [rax],al
   14003f028:	push   rdi
   14003f029:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f030:	xor    eax,0x39333930
   14003f035:	add    BYTE PTR [rax],al
   14003f037:	add    BYTE PTR [rdi+0x69],dl
   14003f03a:	outs   dx,BYTE PTR ds:[rsi]
   14003f03b:	outs   dx,DWORD PTR fs:[rsi]
   14003f03d:	ja     0x14003f0b2
   14003f03f:	sub    eax,0x33393035
   14003f044:	(bad)  
   14003f045:	add    BYTE PTR [rax],al
   14003f047:	add    BYTE PTR [rdi+0x69],dl
   14003f04a:	outs   dx,BYTE PTR ds:[rsi]
   14003f04b:	outs   dx,DWORD PTR fs:[rsi]
   14003f04d:	ja     0x14003f0c2
   14003f04f:	sub    eax,0x33393035
   14003f054:	add    BYTE PTR ss:[rax],al
   14003f057:	add    BYTE PTR [rdi+0x69],dl
   14003f05a:	outs   dx,BYTE PTR ds:[rsi]
   14003f05b:	outs   dx,DWORD PTR fs:[rsi]
   14003f05d:	ja     0x14003f0d2
   14003f05f:	sub    eax,0x33393035
   14003f064:	xor    eax,0x57000000
   14003f069:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f070:	xor    eax,0x33333930
   14003f075:	add    BYTE PTR [rax],al
   14003f077:	add    BYTE PTR [rdi+0x69],dl
   14003f07a:	outs   dx,BYTE PTR ds:[rsi]
   14003f07b:	outs   dx,DWORD PTR fs:[rsi]
   14003f07d:	ja     0x14003f0f2
   14003f07f:	sub    eax,0x33393035
   14003f084:	xor    DWORD PTR [rax],eax
   14003f086:	add    BYTE PTR [rax],al
   14003f088:	push   rdi
   14003f089:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f090:	xor    eax,0x30333930
   14003f095:	add    BYTE PTR [rax],al
   14003f097:	add    BYTE PTR [rdi+0x69],dl
   14003f09a:	outs   dx,BYTE PTR ds:[rsi]
   14003f09b:	outs   dx,DWORD PTR fs:[rsi]
   14003f09d:	ja     0x14003f112
   14003f09f:	sub    eax,0x32323035
   14003f0a4:	cmp    DWORD PTR [rax],eax
   14003f0a6:	add    BYTE PTR [rax],al
   14003f0a8:	imul   esi,DWORD PTR [rbx+0x6f],0x3538382d
   14003f0af:	cmp    DWORD PTR [rip+0x692d38],ebp        # 0x1406d1ded
   14003f0b5:	add    BYTE PTR [rax],al
   14003f0b7:	add    BYTE PTR [rax+0x2d],bh
   14003f0ba:	rex.RB jne 0x14003f12f
   14003f0bd:	outs   dx,DWORD PTR ds:[rsi]
   14003f0be:	jo     0x14003f121
	...
   14003f0c8:	push   rdi
   14003f0c9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f0d0:	xor    bh,BYTE PTR [rcx]
   14003f0d2:	xor    BYTE PTR [rax],dh
   14003f0d4:	xor    DWORD PTR [rax],eax
   14003f0d6:	add    BYTE PTR [rax],al
   14003f0d8:	push   rdi
   14003f0d9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f0e0:	xor    dh,BYTE PTR [rcx]
   14003f0e2:	xor    BYTE PTR [rdx],dh
   14003f0e4:	(bad)  
   14003f0e5:	add    BYTE PTR [rax],al
   14003f0e7:	add    BYTE PTR [rcx+0x62],ch
   14003f0ea:	ins    DWORD PTR es:[rdi],dx
   14003f0eb:	sub    eax,0x35323031
   14003f0f0:	pop    rdi
   14003f0f1:	push   rax
   14003f0f2:	xor    DWORD PTR [rax],esi
   14003f0f4:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d2a2b
   14003f0fa:	add    BYTE PTR [rax],al
   14003f0fc:	xor    DWORD PTR [rax],esi
   14003f0fe:	xor    dh,BYTE PTR [rip+0x0]        # 0x14003f104
   14003f104:	add    BYTE PTR [rax],al
   14003f106:	add    BYTE PTR [rax],al
   14003f108:	imul   esp,DWORD PTR [rdx+0x6d],0x3230312d
   14003f10f:	xor    eax,0x0
   14003f114:	movsxd esi,DWORD PTR [rax+0x31]
   14003f117:	xor    BYTE PTR [rdx],dh
   14003f119:	xor    eax,0x0
   14003f11e:	add    BYTE PTR [rax],al
   14003f120:	js     0x14003f14f
   14003f122:	movsxd esi,DWORD PTR [rax+0x32]
   14003f125:	xor    BYTE PTR [rcx],bh
   14003f127:	xor    al,0x39
   14003f129:	add    BYTE PTR [rax],al
   14003f12b:	add    BYTE PTR [rax],al
   14003f12d:	add    BYTE PTR [rax],al
   14003f12f:	add    BYTE PTR [rdi+0x69],dl
   14003f132:	outs   dx,BYTE PTR ds:[rsi]
   14003f133:	outs   dx,DWORD PTR fs:[rsi]
   14003f135:	ja     0x14003f1aa
   14003f137:	sub    eax,0x34393032
   14003f13c:	cmp    DWORD PTR [rax],eax
   14003f13e:	add    BYTE PTR [rax],al
   14003f140:	js     0x14003f16f
   14003f142:	rex.RB
   14003f143:	rex.X
   14003f144:	rex.XB
   14003f145:	rex.R
   14003f146:	rex.WB
   14003f147:	rex.XB sub eax,0x65726f4b
   14003f14d:	(bad)  
   14003f14e:	outs   dx,BYTE PTR ds:[rsi]
   14003f14f:	rex.RB js 0x14003f1c6
   14003f152:	outs   dx,BYTE PTR gs:[rsi]
   14003f154:	fs gs add BYTE PTR fs:[rdi+0x69],dl
   14003f15a:	outs   dx,BYTE PTR ds:[rsi]
   14003f15b:	outs   dx,DWORD PTR fs:[rsi]
   14003f15d:	ja     0x14003f1d2
   14003f15f:	sub    eax,0x33383032
   14003f164:	xor    eax,DWORD PTR [rax]
   14003f166:	add    BYTE PTR [rax],al
   14003f168:	js     0x14003f197
   14003f16a:	movsxd esi,DWORD PTR [rax+0x32]
   14003f16d:	xor    BYTE PTR [rdx],dh
   14003f16f:	cmp    DWORD PTR ss:[rax],eax
   14003f172:	add    BYTE PTR [rax],al
   14003f174:	add    BYTE PTR [rax],al
   14003f176:	add    BYTE PTR [rax],al
   14003f178:	push   rdi
   14003f179:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f180:	xor    dh,BYTE PTR [rax]
   14003f182:	xor    dh,BYTE PTR [rsi]
   14003f184:	cmp    DWORD PTR [rax],eax
   14003f186:	add    BYTE PTR [rax],al
   14003f188:	js     0x14003f1b7
   14003f18a:	rex.WB
   14003f18b:	rex.B xor eax,0x726f4e2d
   14003f191:	ja     0x14003f1f8
   14003f193:	imul   esp,DWORD PTR [ecx+0x6e],0x6e695700
   14003f19b:	outs   dx,DWORD PTR fs:[rsi]
   14003f19d:	ja     0x14003f212
   14003f19f:	sub    eax,0x30313032
   14003f1a4:	cmp    BYTE PTR [rax],al
   14003f1a6:	add    BYTE PTR [rax],al
   14003f1a8:	js     0x14003f1d7
   14003f1aa:	rex.WB
   14003f1ab:	rex.B xor eax,0x6577532d
   14003f1b1:	imul   esi,DWORD PTR fs:[rbx+0x68],0x57000000
   14003f1b9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f1c0:	xor    dh,BYTE PTR [rax]
   14003f1c2:	xor    DWORD PTR [rax],esi
   14003f1c4:	(bad)  
   14003f1c5:	add    BYTE PTR [rax],al
   14003f1c7:	add    BYTE PTR [rax+0x2d],bh
   14003f1ca:	rex.WB
   14003f1cb:	rex.B xor eax,0x7265472d
   14003f1d1:	ins    DWORD PTR es:[rdi],dx
   14003f1d2:	(bad)  
   14003f1d3:	outs   dx,BYTE PTR ds:[rsi]
   14003f1d4:	add    BYTE PTR [rax],al
   14003f1d6:	add    BYTE PTR [rax],al
   14003f1d8:	push   rdi
   14003f1d9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f1e0:	xor    dh,BYTE PTR [rax]
   14003f1e2:	xor    DWORD PTR [rax],esi
   14003f1e4:	add    BYTE PTR ss:[rax],al
   14003f1e7:	add    BYTE PTR [rax+0x2d],bh
   14003f1ea:	rex.WB
   14003f1eb:	rex.B xor eax,0x57000000
   14003f1f1:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f1f8:	xor    dh,BYTE PTR [rax]
   14003f1fa:	xor    DWORD PTR [rax],esi
   14003f1fc:	xor    eax,0x78000000
   14003f201:	sub    eax,0x30327063
   14003f206:	xor    BYTE PTR [rax],dh
   14003f208:	xor    eax,0x0
   14003f20d:	add    BYTE PTR [rax],al
   14003f20f:	add    BYTE PTR [rdi+0x69],dl
   14003f212:	outs   dx,BYTE PTR ds:[rsi]
   14003f213:	outs   dx,DWORD PTR fs:[rsi]
   14003f215:	ja     0x14003f28a
   14003f217:	sub    eax,0x30303032
   14003f21c:	xor    eax,0x78000000
   14003f221:	sub    eax,0x30327063
   14003f226:	xor    BYTE PTR [rax],dh
   14003f228:	xor    al,0x0
   14003f22a:	add    BYTE PTR [rax],al
   14003f22c:	add    BYTE PTR [rax],al
   14003f22e:	add    BYTE PTR [rax],al
   14003f230:	push   rdi
   14003f231:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f238:	xor    dh,BYTE PTR [rax]
   14003f23a:	xor    BYTE PTR [rax],dh
   14003f23c:	xor    al,0x0
   14003f23e:	add    BYTE PTR [rax],al
   14003f240:	js     0x14003f26f
   14003f242:	movsxd esi,DWORD PTR [rax+0x32]
   14003f245:	xor    BYTE PTR [rax],dh
   14003f247:	xor    BYTE PTR [rbx],dh
   14003f249:	add    BYTE PTR [rax],al
   14003f24b:	add    BYTE PTR [rax],al
   14003f24d:	add    BYTE PTR [rax],al
   14003f24f:	add    BYTE PTR [rdi+0x69],dl
   14003f252:	outs   dx,BYTE PTR ds:[rsi]
   14003f253:	outs   dx,DWORD PTR fs:[rsi]
   14003f255:	ja     0x14003f2ca
   14003f257:	sub    eax,0x30303032
   14003f25c:	xor    eax,DWORD PTR [rax]
   14003f25e:	add    BYTE PTR [rax],al
   14003f260:	js     0x14003f2c1
   14003f262:	rex.XB push 0x73656e69
   14003f268:	gs sub eax,0x6e657445
   14003f26e:	add    BYTE PTR [rax],al
   14003f270:	push   rdi
   14003f271:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f278:	xor    dh,BYTE PTR [rax]
   14003f27a:	xor    BYTE PTR [rax],dh
   14003f27c:	xor    al,BYTE PTR [rax]
   14003f27e:	add    BYTE PTR [rax],al
   14003f280:	js     0x14003f2af
   14003f282:	movsxd esi,DWORD PTR [rax+0x32]
   14003f285:	xor    BYTE PTR [rax],dh
   14003f287:	xor    BYTE PTR [rcx],dh
   14003f289:	add    BYTE PTR [rax],al
   14003f28b:	add    BYTE PTR [rax],al
   14003f28d:	add    BYTE PTR [rax],al
   14003f28f:	add    BYTE PTR [rdi+0x69],dl
   14003f292:	outs   dx,BYTE PTR ds:[rsi]
   14003f293:	outs   dx,DWORD PTR fs:[rsi]
   14003f295:	ja     0x14003f30a
   14003f297:	sub    eax,0x30303032
   14003f29c:	xor    DWORD PTR [rax],eax
   14003f29e:	add    BYTE PTR [rax],al
   14003f2a0:	js     0x14003f2cf
   14003f2a2:	rex.XB push 0x73656e69
   14003f2a8:	gs pop rdi
   14003f2aa:	rex.XB
   14003f2ab:	rex.WRX push rbx
   14003f2ad:	add    BYTE PTR [rax],al
   14003f2af:	add    BYTE PTR [rdi+0x69],dl
   14003f2b2:	outs   dx,BYTE PTR ds:[rsi]
   14003f2b3:	outs   dx,DWORD PTR fs:[rsi]
   14003f2b5:	ja     0x14003f32a
   14003f2b7:	sub    eax,0x30303032
   14003f2bc:	xor    BYTE PTR [rax],al
   14003f2be:	add    BYTE PTR [rax],al
   14003f2c0:	js     0x14003f2ef
   14003f2c2:	ins    DWORD PTR es:[rdi],dx
   14003f2c3:	(bad)  
   14003f2c4:	movsxd ebp,DWORD PTR [rip+0x616f7263]        # 0x1a173652d
   14003f2ca:	je     0x14003f335
   14003f2cc:	(bad)  
   14003f2cd:	outs   dx,BYTE PTR ds:[rsi]
   14003f2ce:	add    BYTE PTR [rax],al
   14003f2d0:	push   rdi
   14003f2d1:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f2d8:	xor    DWORD PTR [rax],esi
   14003f2da:	xor    BYTE PTR [rax],bh
   14003f2dc:	xor    al,BYTE PTR [rax]
   14003f2de:	add    BYTE PTR [rax],al
   14003f2e0:	ins    DWORD PTR es:[rdi],dx
   14003f2e1:	(bad)  
   14003f2e2:	movsxd ebp,DWORD PTR [rdi+0x73]
   14003f2e5:	sub    eax,0x312d3533
   14003f2ea:	xor    BYTE PTR [rsi],ch
   14003f2ec:	xor    al,BYTE PTR [rax]
   14003f2ee:	add    BYTE PTR [rax],al
   14003f2f0:	ins    DWORD PTR es:[rdi],dx
   14003f2f1:	(bad)  
   14003f2f2:	movsxd esi,DWORD PTR [rdx+rsi*2+0x0]
   14003f2f6:	add    BYTE PTR [rax],al
   14003f2f8:	js     0x14003f327
   14003f2fa:	ins    DWORD PTR es:[rdi],dx
   14003f2fb:	(bad)  
   14003f2fc:	movsxd ebp,DWORD PTR [rip+0x6b727574]        # 0x1ab766876
   14003f302:	imul   esi,DWORD PTR [rbx+0x68],0x57000000
   14003f309:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f310:	xor    DWORD PTR [rax],esi
   14003f312:	xor    BYTE PTR [rax],bh
   14003f314:	xor    DWORD PTR [rax],eax
   14003f316:	add    BYTE PTR [rax],al
   14003f318:	js     0x14003f347
   14003f31a:	ins    DWORD PTR es:[rdi],dx
   14003f31b:	(bad)  
   14003f31c:	movsxd ebp,DWORD PTR [rip+0x6c656369]        # 0x1ac69568b
   14003f322:	(bad)  
   14003f323:	outs   dx,BYTE PTR ds:[rsi]
   14003f324:	imul   esp,DWORD PTR fs:[rbx+0x0],0x646e6957
   14003f32c:	outs   dx,DWORD PTR ds:[rsi]
   14003f32d:	ja     0x14003f3a2
   14003f32f:	sub    eax,0x37303031
   14003f334:	cmp    DWORD PTR [rax],eax
   14003f336:	add    BYTE PTR [rax],al
   14003f338:	ins    DWORD PTR es:[rdi],dx
   14003f339:	(bad)  
   14003f33a:	movsxd ebp,DWORD PTR [rdi+0x73]
   14003f33d:	sub    eax,0x312d3932
   14003f342:	xor    BYTE PTR [rsi],ch
   14003f344:	xor    al,BYTE PTR [rax]
   14003f346:	add    BYTE PTR [rax],al
   14003f348:	js     0x14003f377
   14003f34a:	ins    DWORD PTR es:[rdi],dx
   14003f34b:	(bad)  
   14003f34c:	movsxd ebp,DWORD PTR [rip+0x746e6563]        # 0x1b47258b5
   14003f352:	jb     0x14003f3b5
   14003f354:	ins    BYTE PTR es:[rdi],dx
   14003f355:	gs jne 0x14003f3ca
   14003f358:	jb     0x14003f3c9
   14003f35a:	ins    DWORD PTR es:[rdi],dx
   14003f35b:	(bad)  
   14003f35c:	outs   dx,BYTE PTR ds:[rsi]
   14003f35d:	add    BYTE PTR [rax],al
   14003f35f:	add    BYTE PTR [rbp+0x61],ch
   14003f362:	movsxd esp,DWORD PTR [rbx+0x65]
   14003f365:	outs   dx,BYTE PTR ds:[rsi]
   14003f366:	je     0x14003f3da
   14003f368:	(bad)  
   14003f369:	ins    BYTE PTR es:[rdi],dx
   14003f36a:	gs jne 0x14003f3df
   14003f36d:	outs   dx,DWORD PTR ds:[rsi]
   14003f36e:	jo     0x14003f3d5
   14003f370:	add    BYTE PTR [rax],al
   14003f372:	add    BYTE PTR [rax],al
   14003f374:	ins    DWORD PTR es:[rdi],dx
   14003f375:	(bad)  
   14003f376:	movsxd esp,DWORD PTR [rbx+0x65]
   14003f379:	add    BYTE PTR [rax],al
   14003f37b:	add    BYTE PTR [rax],al
   14003f37d:	add    BYTE PTR [rax],al
   14003f37f:	add    BYTE PTR [rax+0x2d],bh
   14003f382:	ins    DWORD PTR es:[rdi],dx
   14003f383:	(bad)  
   14003f384:	movsxd ebp,DWORD PTR [rip+0x6563]        # 0x1400458ed
   14003f38a:	add    BYTE PTR [rax],al
   14003f38c:	add    BYTE PTR [rax],al
   14003f38e:	add    BYTE PTR [rax],al
   14003f390:	push   rdi
   14003f391:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f398:	xor    DWORD PTR [rax],esi
   14003f39a:	xor    BYTE PTR [rdx],dh
   14003f39c:	cmp    DWORD PTR [rax],eax
   14003f39e:	add    BYTE PTR [rax],al
   14003f3a0:	js     0x14003f3cf
   14003f3a2:	ins    DWORD PTR es:[rdi],dx
   14003f3a3:	(bad)  
   14003f3a4:	movsxd ebp,DWORD PTR [rip+0x69616874]        # 0x1a9655c1e
   14003f3aa:	add    BYTE PTR [rax],al
   14003f3ac:	add    BYTE PTR [rax],al
   14003f3ae:	add    BYTE PTR [rax],al
   14003f3b0:	push   rdi
   14003f3b1:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f3b8:	xor    DWORD PTR [rax],esi
   14003f3ba:	xor    BYTE PTR [rdx],dh
   14003f3bc:	xor    DWORD PTR [rax],eax
   14003f3be:	add    BYTE PTR [rax],al
   14003f3c0:	js     0x14003f3ef
   14003f3c2:	ins    DWORD PTR es:[rdi],dx
   14003f3c3:	(bad)  
   14003f3c4:	movsxd ebp,DWORD PTR [rip+0x61726b75]        # 0x1a1765f3f
   14003f3ca:	imul   ebp,DWORD PTR [rsi+0x69],0x57006e61
   14003f3d1:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f3d8:	xor    DWORD PTR [rax],esi
   14003f3da:	xor    BYTE PTR [rcx],dh
   14003f3dc:	(bad)  
   14003f3dd:	add    BYTE PTR [rax],al
   14003f3df:	add    BYTE PTR [rax+0x2d],bh
   14003f3e2:	ins    DWORD PTR es:[rdi],dx
   14003f3e3:	(bad)  
   14003f3e4:	movsxd ebp,DWORD PTR [rip+0x616d6f72]        # 0x1a171635c
   14003f3ea:	outs   dx,BYTE PTR ds:[rsi]
   14003f3eb:	imul   esp,DWORD PTR [rcx+0x6e],0x69570000
   14003f3f2:	outs   dx,BYTE PTR ds:[rsi]
   14003f3f3:	outs   dx,DWORD PTR fs:[rsi]
   14003f3f5:	ja     0x14003f46a
   14003f3f7:	sub    eax,0x31303031
   14003f3fc:	xor    BYTE PTR [rax],al
   14003f3fe:	add    BYTE PTR [rax],al
   14003f400:	js     0x14003f42f
   14003f402:	ins    DWORD PTR es:[rdi],dx
   14003f403:	(bad)  
   14003f404:	movsxd ebp,DWORD PTR [rip+0x6e696863]        # 0x1ae6d5c6d
   14003f40a:	gs jae 0x14003f472
   14003f40d:	jae    0x14003f478
   14003f40f:	ins    DWORD PTR es:[rdi],dx
   14003f410:	jo     0x14003f412
   14003f412:	add    BYTE PTR [rax],al
   14003f414:	add    BYTE PTR [rax],al
   14003f416:	add    BYTE PTR [rax],al
   14003f418:	push   rdi
   14003f419:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f420:	xor    DWORD PTR [rax],esi
   14003f422:	xor    BYTE PTR [rax],dh
   14003f424:	cmp    BYTE PTR [rax],al
   14003f426:	add    BYTE PTR [rax],al
   14003f428:	ins    DWORD PTR es:[rdi],dx
   14003f429:	(bad)  
   14003f42a:	movsxd ebp,DWORD PTR [rdi+0x73]
   14003f42d:	sub    eax,0x2d335f37
   14003f432:	xor    DWORD PTR [rax],esi
   14003f434:	xor    al,BYTE PTR cs:[rax]
   14003f437:	add    BYTE PTR [rbp+0x61],ch
   14003f43a:	movsxd ebp,DWORD PTR [rip+0x69727963]        # 0x1a9766da3
   14003f440:	ins    BYTE PTR es:[rdi],dx
   14003f441:	ins    BYTE PTR es:[rdi],dx
   14003f442:	imul   esp,DWORD PTR [rbx+0x0],0x6d000000
   14003f449:	(bad)  
   14003f44a:	movsxd esp,DWORD PTR [rbx+0x79]
   14003f44d:	add    BYTE PTR [rax],al
   14003f44f:	add    BYTE PTR [rax+0x2d],bh
   14003f452:	ins    DWORD PTR es:[rdi],dx
   14003f453:	(bad)  
   14003f454:	movsxd ebp,DWORD PTR [rip+0x69727963]        # 0x1a9766dbd
   14003f45a:	ins    BYTE PTR es:[rdi],dx
   14003f45b:	ins    BYTE PTR es:[rdi],dx
   14003f45c:	imul   esp,DWORD PTR [rbx+0x0],0x6e695700
   14003f463:	outs   dx,DWORD PTR fs:[rsi]
   14003f465:	ja     0x14003f4da
   14003f467:	sub    eax,0x30303031
   14003f46c:	(bad)  
   14003f46d:	add    BYTE PTR [rax],al
   14003f46f:	add    BYTE PTR [rbp+0x61],ch
   14003f472:	movsxd ebp,DWORD PTR [rdi+0x73]
   14003f475:	sub    eax,0x2d325f36
   14003f47a:	xor    DWORD PTR [rax],esi
   14003f47c:	cs xor al,0x0
   14003f47f:	add    BYTE PTR [rbp+0x61],ch
   14003f482:	movsxd esp,DWORD PTR [rdi+0x72]
   14003f485:	add    BYTE PTR [rax],al
   14003f487:	add    BYTE PTR [rax+0x2d],bh
   14003f48a:	ins    DWORD PTR es:[rdi],dx
   14003f48b:	(bad)  
   14003f48c:	movsxd ebp,DWORD PTR [rip+0x65657267]        # 0x1a56966f9
   14003f492:	imul   eax,DWORD PTR [rax],0x0
   14003f495:	add    BYTE PTR [rax],al
   14003f497:	add    BYTE PTR [rdi+0x69],dl
   14003f49a:	outs   dx,BYTE PTR ds:[rsi]
   14003f49b:	outs   dx,DWORD PTR fs:[rsi]
   14003f49d:	ja     0x14003f512
   14003f49f:	sub    eax,0x30303031
   14003f4a4:	add    BYTE PTR ss:[rax],al
   14003f4a7:	add    BYTE PTR [rax+0x2d],bh
   14003f4aa:	ins    DWORD PTR es:[rdi],dx
   14003f4ab:	(bad)  
   14003f4ac:	movsxd ebp,DWORD PTR [rip+0x72626568]        # 0x1b2665a1a
   14003f4b2:	gs ja  0x14003f4b5
   14003f4b5:	add    BYTE PTR [rax],al
   14003f4b7:	add    BYTE PTR [rdi+0x69],dl
   14003f4ba:	outs   dx,BYTE PTR ds:[rsi]
   14003f4bb:	outs   dx,DWORD PTR fs:[rsi]
   14003f4bd:	ja     0x14003f532
   14003f4bf:	sub    eax,0x30303031
   14003f4c4:	xor    eax,0x78000000
   14003f4c9:	sub    eax,0x2d63616d
   14003f4ce:	(bad)  
   14003f4cf:	jb     0x14003f532
   14003f4d1:	(bad)  
   14003f4d2:	imul   esp,DWORD PTR [rbx+0x0],0x57000000
   14003f4d9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f4e0:	xor    DWORD PTR [rax],esi
   14003f4e2:	xor    BYTE PTR [rax],dh
   14003f4e4:	xor    al,0x0
   14003f4e6:	add    BYTE PTR [rax],al
   14003f4e8:	js     0x14003f517
   14003f4ea:	ins    DWORD PTR es:[rdi],dx
   14003f4eb:	(bad)  
   14003f4ec:	movsxd ebp,DWORD PTR [rip+0x65726f6b]        # 0x1a576645d
   14003f4f2:	(bad)  
   14003f4f3:	outs   dx,BYTE PTR ds:[rsi]
   14003f4f4:	add    BYTE PTR [rax],al
   14003f4f6:	add    BYTE PTR [rax],al
   14003f4f8:	push   rdi
   14003f4f9:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f500:	xor    DWORD PTR [rax],esi
   14003f502:	xor    BYTE PTR [rax],dh
   14003f504:	xor    eax,DWORD PTR [rax]
   14003f506:	add    BYTE PTR [rax],al
   14003f508:	js     0x14003f537
   14003f50a:	ins    DWORD PTR es:[rdi],dx
   14003f50b:	(bad)  
   14003f50c:	movsxd ebp,DWORD PTR [rip+0x6e696863]        # 0x1ae6d5d75
   14003f512:	gs jae 0x14003f57a
   14003f515:	je     0x14003f589
   14003f517:	(bad)  
   14003f518:	add    BYTE PTR fs:[rax],al
   14003f51b:	add    BYTE PTR [rax],al
   14003f51d:	add    BYTE PTR [rax],al
   14003f51f:	add    BYTE PTR [rdi+0x69],dl
   14003f522:	outs   dx,BYTE PTR ds:[rsi]
   14003f523:	outs   dx,DWORD PTR fs:[rsi]
   14003f525:	ja     0x14003f59a
   14003f527:	sub    eax,0x30303031
   14003f52c:	xor    al,BYTE PTR [rax]
   14003f52e:	add    BYTE PTR [rax],al
   14003f530:	js     0x14003f55f
   14003f532:	ins    DWORD PTR es:[rdi],dx
   14003f533:	(bad)  
   14003f534:	movsxd ebp,DWORD PTR [rip+0x6170616a]        # 0x1a17456a4
   14003f53a:	outs   dx,BYTE PTR ds:[rsi]
   14003f53b:	gs jae 0x14003f5a3
   14003f53e:	add    BYTE PTR [rax],al
   14003f540:	push   rdi
   14003f541:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f548:	xor    DWORD PTR [rax],esi
   14003f54a:	xor    BYTE PTR [rax],dh
   14003f54c:	xor    DWORD PTR [rax],eax
   14003f54e:	add    BYTE PTR [rax],al
   14003f550:	push   rdi
   14003f551:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f558:	xor    DWORD PTR [rax],esi
   14003f55a:	xor    BYTE PTR [rax],dh
   14003f55c:	xor    BYTE PTR [rax],al
   14003f55e:	add    BYTE PTR [rax],al
   14003f560:	rex.WX outs dx,DWORD PTR ds:[rsi]
   14003f562:	push   0x6261
   14003f567:	add    BYTE PTR [rdi+0x69],dl
   14003f56a:	outs   dx,BYTE PTR ds:[rsi]
   14003f56b:	outs   dx,DWORD PTR fs:[rsi]
   14003f56d:	ja     0x14003f5e2
   14003f56f:	sub    eax,0x31363331
   14003f574:	add    BYTE PTR [rax],al
   14003f576:	add    BYTE PTR [rax],al
   14003f578:	imul   esp,DWORD PTR [rdx+0x6d],0x3537382d
   14003f57f:	pop    rdi
   14003f580:	push   rax
   14003f581:	xor    DWORD PTR [rax],esi
   14003f583:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d2eba
   14003f589:	add    BYTE PTR [rax],al
   14003f58b:	add    BYTE PTR [rax],bh
   14003f58d:	(bad)  
   14003f58e:	xor    eax,0x4d424900
   14003f593:	cmp    BYTE PTR [rdi],dh
   14003f595:	xor    eax,0x62690000
   14003f59a:	ins    DWORD PTR es:[rdi],dx
   14003f59b:	sub    eax,0x353738
   14003f5a0:	movsxd esi,DWORD PTR [rax+0x38]
   14003f5a3:	(bad)  
   14003f5a4:	xor    eax,0x69000000
   14003f5a9:	(bad)  
   14003f5aa:	ins    DWORD PTR es:[rdi],dx
   14003f5ab:	sub    eax,0x5f373337
   14003f5b0:	push   rax
   14003f5b1:	xor    DWORD PTR [rax],esi
   14003f5b3:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d2eea
   14003f5b9:	add    BYTE PTR [rax],al
   14003f5bb:	add    BYTE PTR [rdi],dh
   14003f5bd:	xor    esi,DWORD PTR [rdi]
   14003f5bf:	add    BYTE PTR [rbx+0x70],ah
   14003f5c2:	(bad)  
   14003f5c3:	xor    esi,DWORD PTR [rdi]
   14003f5c5:	add    BYTE PTR [rax],al
   14003f5c7:	add    BYTE PTR [rcx+0x42],cl
   14003f5ca:	rex.WRB (bad) 
   14003f5cc:	xor    esi,DWORD PTR [rdi]
   14003f5ce:	add    BYTE PTR [rax],al
   14003f5d0:	push   rdi
   14003f5d1:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f5d8:	(bad)  
   14003f5d9:	xor    esi,DWORD PTR [rdi]
   14003f5db:	add    BYTE PTR [rax],al
   14003f5dd:	add    BYTE PTR [rax],al
   14003f5df:	add    BYTE PTR [rcx+0x62],ch
   14003f5e2:	ins    DWORD PTR es:[rdi],dx
   14003f5e3:	sub    eax,0x5f303237
   14003f5e8:	push   rax
   14003f5e9:	xor    DWORD PTR [rax],esi
   14003f5eb:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d2f22
   14003f5f1:	add    BYTE PTR [rax],al
   14003f5f3:	add    BYTE PTR [rax],al
   14003f5f5:	add    BYTE PTR [rax],al
   14003f5f7:	add    BYTE PTR [rcx+0x62],ch
   14003f5fa:	ins    DWORD PTR es:[rdi],dx
   14003f5fb:	sub    eax,0x303237
   14003f600:	rex.R
   14003f601:	rex.WRXB push r11
   14003f603:	pop    rdi
   14003f604:	(bad)  
   14003f605:	xor    dh,BYTE PTR [rax]
   14003f607:	add    BYTE PTR [rdi+rcx*2+0x53],al
   14003f60b:	sub    eax,0x303237
   14003f610:	push   rdi
   14003f611:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
   14003f618:	(bad)  
   14003f619:	xor    dh,BYTE PTR [rax]
   14003f61b:	add    BYTE PTR [rax],al
   14003f61d:	add    BYTE PTR [rax],al
   14003f61f:	add    BYTE PTR [rdi+0x69],dl
   14003f622:	outs   dx,BYTE PTR ds:[rsi]
   14003f623:	outs   dx,DWORD PTR fs:[rsi]
   14003f625:	ja     0x14003f69a
   14003f627:	sub    eax,0x303137
   14003f62c:	add    BYTE PTR [rax],al
   14003f62e:	add    BYTE PTR [rax],al
   14003f630:	rex.X
   14003f631:	rex.XB
   14003f632:	rex.WRXB
   14003f633:	rex.WRX pop rdi
   14003f635:	push   rsi
   14003f636:	xor    al,0x0
   14003f638:	push   r11
   14003f63a:	rex.WRB
   14003f63b:	rex.WRXB sub rax,0x2b393434
   14003f641:	add    BYTE PTR [rax],al
   14003f643:	add    BYTE PTR [rax],al
   14003f645:	add    BYTE PTR [rax],al
   14003f647:	add    BYTE PTR [rdi+0x69],dl
   14003f64a:	outs   dx,BYTE PTR ds:[rsi]
   14003f64b:	outs   dx,DWORD PTR fs:[rsi]
   14003f64d:	ja     0x14003f6c2
   14003f64f:	sub    eax,0x393037
   14003f654:	rex.WRB push r11
   14003f656:	cmp    BYTE PTR [rdi],dh
   14003f658:	xor    al,0x0
   14003f65a:	add    BYTE PTR [rax],al
   14003f65c:	add    BYTE PTR [rax],al
   14003f65e:	add    BYTE PTR [rax],al
   14003f660:	ja     0x14003f6cb
   14003f662:	outs   dx,BYTE PTR ds:[rsi]
   14003f663:	outs   dx,DWORD PTR fs:[rsi]
   14003f665:	ja     0x14003f6da
   14003f667:	sub    eax,0x2d343738
   14003f66c:	xor    dh,BYTE PTR [rax]
   14003f66e:	xor    BYTE PTR [rax],dh
	...
   14003f678:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f67f:	cmp    BYTE PTR [rdi+0x50],bl
   14003f682:	xor    DWORD PTR [rax],esi
   14003f684:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d2fbb
   14003f68a:	add    BYTE PTR [rax],al
   14003f68c:	add    BYTE PTR [rax],al
   14003f68e:	add    BYTE PTR [rax],al
   14003f690:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f697:	cmp    BYTE PTR [rax],al
   14003f699:	add    BYTE PTR [rax],al
   14003f69b:	add    BYTE PTR [rbx+0x70],ah
   14003f69e:	xor    DWORD PTR [rdx],esi
   14003f6a0:	xor    eax,0x38
   14003f6a5:	add    BYTE PTR [rax],al
   14003f6a7:	add    BYTE PTR [rcx+0x62],ch
   14003f6aa:	ins    DWORD PTR es:[rdi],dx
   14003f6ab:	sub    eax,0x34353335
	...
   14003f6b8:	imul   esp,DWORD PTR [rdx+0x6d],0x3533352d
   14003f6bf:	xor    al,0x5f
   14003f6c1:	push   rax
   14003f6c2:	xor    DWORD PTR [rax],esi
   14003f6c4:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d2ffb
   14003f6ca:	add    BYTE PTR [rax],al
   14003f6cc:	add    BYTE PTR [rax],al
   14003f6ce:	add    BYTE PTR [rax],al
   14003f6d0:	ja     0x14003f73b
   14003f6d2:	outs   dx,BYTE PTR ds:[rsi]
   14003f6d3:	outs   dx,DWORD PTR fs:[rsi]
   14003f6d5:	ja     0x14003f74a
   14003f6d7:	sub    eax,0x38353231
   14003f6dc:	add    BYTE PTR [rax],al
   14003f6de:	add    BYTE PTR [rax],al
   14003f6e0:	imul   esp,DWORD PTR [rdx+0x6d],0x3533352d
   14003f6e7:	xor    ebx,DWORD PTR [rdi+0x50]
   14003f6ea:	xor    DWORD PTR [rax],esi
   14003f6ec:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d3023
   14003f6f2:	add    BYTE PTR [rax],al
   14003f6f4:	add    BYTE PTR [rax],al
   14003f6f6:	add    BYTE PTR [rax],al
   14003f6f8:	imul   esp,DWORD PTR [rdx+0x6d],0x3533352d
   14003f6ff:	xor    eax,DWORD PTR [rax]
   14003f701:	add    BYTE PTR [rax],al
   14003f703:	add    BYTE PTR [rbx+0x70],ah
   14003f706:	xor    DWORD PTR [rdx],esi
   14003f708:	xor    eax,0x37
   14003f70d:	add    BYTE PTR [rax],al
   14003f70f:	add    BYTE PTR [rcx+0x62],ch
   14003f712:	ins    DWORD PTR es:[rdi],dx
   14003f713:	sub    eax,0x39343439
	...
   14003f720:	imul   esp,DWORD PTR [rdx+0x6d],0x3434392d
   14003f727:	cmp    DWORD PTR [rdi+0x50],ebx
   14003f72a:	xor    DWORD PTR [rax],esi
   14003f72c:	xor    BYTE PTR [rip+0x32303032],ch        # 0x172342764
   14003f732:	add    BYTE PTR [rax],al
   14003f734:	add    BYTE PTR [rax],al
   14003f736:	add    BYTE PTR [rax],al
   14003f738:	ja     0x14003f7a3
   14003f73a:	outs   dx,BYTE PTR ds:[rsi]
   14003f73b:	outs   dx,DWORD PTR fs:[rsi]
   14003f73d:	ja     0x14003f7b2
   14003f73f:	sub    eax,0x37353231
   14003f744:	add    BYTE PTR [rax],al
   14003f746:	add    BYTE PTR [rax],al
   14003f748:	imul   esp,DWORD PTR [rdx+0x6d],0x3533352d
   14003f74f:	xor    bl,BYTE PTR [rdi+0x50]
   14003f752:	xor    DWORD PTR [rax],esi
   14003f754:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d308b
   14003f75a:	add    BYTE PTR [rax],al
   14003f75c:	add    BYTE PTR [rax],al
   14003f75e:	add    BYTE PTR [rax],al
   14003f760:	imul   esp,DWORD PTR [rdx+0x6d],0x3533352d
   14003f767:	xor    al,BYTE PTR [rax]
   14003f769:	add    BYTE PTR [rax],al
   14003f76b:	add    BYTE PTR [rbx+0x70],ah
   14003f76e:	xor    DWORD PTR [rdx],esi
   14003f770:	xor    eax,0x36
   14003f775:	add    BYTE PTR [rax],al
   14003f777:	add    BYTE PTR [rcx+0x62],ch
   14003f77a:	ins    DWORD PTR es:[rdi],dx
   14003f77b:	sub    eax,0x38343439
	...
   14003f788:	imul   esp,DWORD PTR [rdx+0x6d],0x3434392d
   14003f78f:	cmp    BYTE PTR [rdi+0x58],bl
   14003f792:	xor    DWORD PTR [rax],esi
   14003f794:	xor    BYTE PTR [rip+0x35303032],ch        # 0x1753427cc
   14003f79a:	add    BYTE PTR [rax],al
   14003f79c:	add    BYTE PTR [rax],al
   14003f79e:	add    BYTE PTR [rax],al
   14003f7a0:	ja     0x14003f80b
   14003f7a2:	outs   dx,BYTE PTR ds:[rsi]
   14003f7a3:	outs   dx,DWORD PTR fs:[rsi]
   14003f7a5:	ja     0x14003f81a
   14003f7a7:	sub    eax,0x36353231
   14003f7ac:	add    BYTE PTR [rax],al
   14003f7ae:	add    BYTE PTR [rax],al
   14003f7b0:	imul   esp,DWORD PTR [rdx+0x6d],0x3533352d
   14003f7b7:	xor    DWORD PTR [rdi+0x50],ebx
   14003f7ba:	xor    DWORD PTR [rax],esi
   14003f7bc:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d30f3
   14003f7c2:	add    BYTE PTR [rax],al
   14003f7c4:	add    BYTE PTR [rax],al
   14003f7c6:	add    BYTE PTR [rax],al
   14003f7c8:	imul   esp,DWORD PTR [rdx+0x6d],0x3533352d
   14003f7cf:	xor    DWORD PTR [rax],eax
   14003f7d1:	add    BYTE PTR [rax],al
   14003f7d3:	add    BYTE PTR [rbx+0x70],ah
   14003f7d6:	xor    DWORD PTR [rdx],esi
   14003f7d8:	xor    eax,0x35
   14003f7dd:	add    BYTE PTR [rax],al
   14003f7df:	add    BYTE PTR [rcx+0x62],ch
   14003f7e2:	ins    DWORD PTR es:[rdi],dx
   14003f7e3:	sub    eax,0x37343439
	...
   14003f7f0:	imul   esp,DWORD PTR [rdx+0x6d],0x3434392d
   14003f7f7:	(bad)  
   14003f7f8:	pop    rdi
   14003f7f9:	push   rax
   14003f7fa:	xor    DWORD PTR [rax],esi
   14003f7fc:	xor    BYTE PTR [rip+0x32303032],ch        # 0x172342834
   14003f802:	add    BYTE PTR [rax],al
   14003f804:	add    BYTE PTR [rax],al
   14003f806:	add    BYTE PTR [rax],al
   14003f808:	ja     0x14003f873
   14003f80a:	outs   dx,BYTE PTR ds:[rsi]
   14003f80b:	outs   dx,DWORD PTR fs:[rsi]
   14003f80d:	ja     0x14003f882
   14003f80f:	sub    eax,0x35353231
   14003f814:	add    BYTE PTR [rax],al
   14003f816:	add    BYTE PTR [rax],al
   14003f818:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f81f:	xor    al,0x5f
   14003f821:	push   rax
   14003f822:	xor    DWORD PTR [rax],esi
   14003f824:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d315b
   14003f82a:	add    BYTE PTR [rax],al
   14003f82c:	add    BYTE PTR [rax],al
   14003f82e:	add    BYTE PTR [rax],al
   14003f830:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f837:	xor    al,0x0
   14003f839:	add    BYTE PTR [rax],al
   14003f83b:	add    BYTE PTR [rbx+0x70],ah
   14003f83e:	xor    DWORD PTR [rdx],esi
   14003f840:	xor    eax,0x34
   14003f845:	add    BYTE PTR [rax],al
   14003f847:	add    BYTE PTR [rcx+0x62],ch
   14003f84a:	ins    DWORD PTR es:[rdi],dx
   14003f84b:	sub    eax,0x30353335
	...
   14003f858:	imul   esp,DWORD PTR [rdx+0x6d],0x3533352d
   14003f85f:	xor    BYTE PTR [rdi+0x50],bl
   14003f862:	xor    DWORD PTR [rax],esi
   14003f864:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d319b
   14003f86a:	add    BYTE PTR [rax],al
   14003f86c:	add    BYTE PTR [rax],al
   14003f86e:	add    BYTE PTR [rax],al
   14003f870:	ja     0x14003f8db
   14003f872:	outs   dx,BYTE PTR ds:[rsi]
   14003f873:	outs   dx,DWORD PTR fs:[rsi]
   14003f875:	ja     0x14003f8ea
   14003f877:	sub    eax,0x34353231
   14003f87c:	add    BYTE PTR [rax],al
   14003f87e:	add    BYTE PTR [rax],al
   14003f880:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f887:	xor    ebx,DWORD PTR [rdi+0x50]
   14003f88a:	xor    DWORD PTR [rax],esi
   14003f88c:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d31c3
   14003f892:	add    BYTE PTR [rax],al
   14003f894:	add    BYTE PTR [rax],al
   14003f896:	add    BYTE PTR [rax],al
   14003f898:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f89f:	xor    eax,DWORD PTR [rax]
   14003f8a1:	add    BYTE PTR [rax],al
   14003f8a3:	add    BYTE PTR [rbx+0x70],ah
   14003f8a6:	xor    DWORD PTR [rdx],esi
   14003f8a8:	xor    eax,0x33
   14003f8ad:	add    BYTE PTR [rax],al
   14003f8af:	add    BYTE PTR [rcx+0x62],ch
   14003f8b2:	ins    DWORD PTR es:[rdi],dx
   14003f8b3:	sub    eax,0x39343335
	...
   14003f8c0:	imul   esp,DWORD PTR [rdx+0x6d],0x3433352d
   14003f8c7:	cmp    DWORD PTR [rdi+0x50],ebx
   14003f8ca:	xor    DWORD PTR [rax],esi
   14003f8cc:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d3203
   14003f8d2:	add    BYTE PTR [rax],al
   14003f8d4:	add    BYTE PTR [rax],al
   14003f8d6:	add    BYTE PTR [rax],al
   14003f8d8:	ja     0x14003f943
   14003f8da:	outs   dx,BYTE PTR ds:[rsi]
   14003f8db:	outs   dx,DWORD PTR fs:[rsi]
   14003f8dd:	ja     0x14003f952
   14003f8df:	sub    eax,0x33353231
   14003f8e4:	add    BYTE PTR [rax],al
   14003f8e6:	add    BYTE PTR [rax],al
   14003f8e8:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f8ef:	xor    al,BYTE PTR [rax]
   14003f8f1:	add    BYTE PTR [rax],al
   14003f8f3:	add    BYTE PTR [rax],al
   14003f8f5:	add    BYTE PTR [rax],al
   14003f8f7:	add    BYTE PTR [rcx+0x62],ch
   14003f8fa:	ins    DWORD PTR es:[rdi],dx
   14003f8fb:	sub    eax,0x32353231
   14003f900:	pop    rdi
   14003f901:	push   rax
   14003f902:	xor    DWORD PTR [rax],esi
   14003f904:	xor    BYTE PTR [rip+0x30303032],ch        # 0x17034293c
   14003f90a:	add    BYTE PTR [rax],al
   14003f90c:	movsxd esi,DWORD PTR [rax+0x31]
   14003f90f:	xor    dh,BYTE PTR [rip+0x32]        # 0x14003f947
   14003f915:	add    BYTE PTR [rax],al
   14003f917:	add    BYTE PTR [rcx+0x62],ch
   14003f91a:	ins    DWORD PTR es:[rdi],dx
   14003f91b:	sub    eax,0x38343335
	...
   14003f928:	imul   esp,DWORD PTR [rdx+0x6d],0x3433352d
   14003f92f:	cmp    BYTE PTR [rdi+0x50],bl
   14003f932:	xor    DWORD PTR [rax],esi
   14003f934:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d326b
   14003f93a:	add    BYTE PTR [rax],al
   14003f93c:	add    BYTE PTR [rax],al
   14003f93e:	add    BYTE PTR [rax],al
   14003f940:	ja     0x14003f9ab
   14003f942:	outs   dx,BYTE PTR ds:[rsi]
   14003f943:	outs   dx,DWORD PTR fs:[rsi]
   14003f945:	ja     0x14003f9ba
   14003f947:	sub    eax,0x32353231
   14003f94c:	add    BYTE PTR [rax],al
   14003f94e:	add    BYTE PTR [rax],al
   14003f950:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f957:	xor    DWORD PTR [rax],eax
   14003f959:	add    BYTE PTR [rax],al
   14003f95b:	add    BYTE PTR [rax],al
   14003f95d:	add    BYTE PTR [rax],al
   14003f95f:	add    BYTE PTR [rcx+0x62],ch
   14003f962:	ins    DWORD PTR es:[rdi],dx
   14003f963:	sub    eax,0x31353231
   14003f968:	pop    rdi
   14003f969:	push   rax
   14003f96a:	xor    DWORD PTR [rax],esi
   14003f96c:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d32a3
   14003f972:	add    BYTE PTR [rax],al
   14003f974:	add    BYTE PTR [rax],al
   14003f976:	add    BYTE PTR [rax],al
   14003f978:	rex.B
   14003f979:	rex.WRX push rbx
   14003f97b:	xor    QWORD PTR [r10],rsi
   14003f97e:	xor    eax,0x31
   14003f983:	add    BYTE PTR [rbx+0x70],ah
   14003f986:	xor    DWORD PTR [rdx],esi
   14003f988:	xor    eax,0x31
   14003f98d:	add    BYTE PTR [rax],al
   14003f98f:	add    BYTE PTR [rcx+0x62],ch
   14003f992:	ins    DWORD PTR es:[rdi],dx
   14003f993:	sub    eax,0x37343335
	...
   14003f9a0:	imul   esp,DWORD PTR [rdx+0x6d],0x3433352d
   14003f9a7:	(bad)  
   14003f9a8:	pop    rdi
   14003f9a9:	push   rax
   14003f9aa:	xor    DWORD PTR [rax],esi
   14003f9ac:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d32e3
   14003f9b2:	add    BYTE PTR [rax],al
   14003f9b4:	add    BYTE PTR [rax],al
   14003f9b6:	add    BYTE PTR [rax],al
   14003f9b8:	ja     0x14003fa23
   14003f9ba:	outs   dx,BYTE PTR ds:[rsi]
   14003f9bb:	outs   dx,DWORD PTR fs:[rsi]
   14003f9bd:	ja     0x14003fa32
   14003f9bf:	sub    eax,0x31353231
   14003f9c4:	add    BYTE PTR [rax],al
   14003f9c6:	add    BYTE PTR [rax],al
   14003f9c8:	imul   esp,DWORD PTR [rdx+0x6d],0x3532312d
   14003f9cf:	xor    BYTE PTR [rax],al
   14003f9d1:	add    BYTE PTR [rax],al
   14003f9d3:	add    BYTE PTR [rax],al
   14003f9d5:	add    BYTE PTR [rax],al
   14003f9d7:	add    BYTE PTR [rcx+0x62],ch
   14003f9da:	ins    DWORD PTR es:[rdi],dx
   14003f9db:	sub    eax,0x30353231
   14003f9e0:	pop    rdi
   14003f9e1:	push   rax
   14003f9e2:	xor    DWORD PTR [rax],esi
   14003f9e4:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d331b
   14003f9ea:	add    BYTE PTR [rax],al
   14003f9ec:	movsxd esi,DWORD PTR [rax+0x31]
   14003f9ef:	xor    dh,BYTE PTR [rip+0x30]        # 0x14003fa25
   14003f9f5:	add    BYTE PTR [rax],al
   14003f9f7:	add    BYTE PTR [rcx+0x62],ch
   14003f9fa:	ins    DWORD PTR es:[rdi],dx
   14003f9fb:	sub    eax,0x36343335
	...
   14003fa08:	imul   esp,DWORD PTR [rdx+0x6d],0x3433352d
   14003fa0f:	ss pop rdi
   14003fa11:	push   rax
   14003fa12:	xor    DWORD PTR [rax],esi
   14003fa14:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d334b
   14003fa1a:	add    BYTE PTR [rax],al
   14003fa1c:	add    BYTE PTR [rax],al
   14003fa1e:	add    BYTE PTR [rax],al
   14003fa20:	ja     0x14003fa8b
   14003fa22:	outs   dx,BYTE PTR ds:[rsi]
   14003fa23:	outs   dx,DWORD PTR fs:[rsi]
   14003fa25:	ja     0x14003fa9a
   14003fa27:	sub    eax,0x30353231
   14003fa2c:	add    BYTE PTR [rax],al
   14003fa2e:	add    BYTE PTR [rax],al
   14003fa30:	movsxd esi,DWORD PTR [rbx+0x54]
   14003fa33:	push   rbx
   14003fa34:	rex.XB
   14003fa35:	rex.WB
   14003fa36:	rex.WB add BYTE PTR [r11+rdx*2+0x43],dl
   14003fa3b:	rex.WB
   14003fa3c:	rex.WB add BYTE PTR [r8],al
   14003fa3f:	add    BYTE PTR [rbx+0x73],ah
   14003fa42:	rex.X push rdx
   14003fa44:	rex.RX add BYTE PTR [rax],r8b
   14003fa47:	add    BYTE PTR [rdx+0x52],al
   14003fa4a:	rex.RX add BYTE PTR [rax],r8b
   14003fa4d:	add    BYTE PTR [rax],al
   14003fa4f:	add    BYTE PTR [rbx+0x4f],cl
   14003fa52:	rex.WB (bad) 
   14003fa54:	sub    eax,0x74697773
   14003fa59:	movsxd ebp,DWORD PTR [rax+0x65]
   14003fa5c:	add    BYTE PTR fs:[rax],al
   14003fa5f:	add    BYTE PTR [rcx+0x6d],al
   14003fa62:	imul   ebp,DWORD PTR [rip+0x31353231],0x0        # 0x171392c9d
   14003fa6c:	add    BYTE PTR [rax],al
   14003fa6e:	add    BYTE PTR [rax],al
   14003fa70:	rex.B ins DWORD PTR es:[rdi],dx
   14003fa72:	imul   esp,DWORD PTR [rdi+0x61],0x31353231
   14003fa79:	add    BYTE PTR [rax],al
   14003fa7b:	add    BYTE PTR [rax],al
   14003fa7d:	add    BYTE PTR [rax],al
   14003fa7f:	add    BYTE PTR [rcx+0x6d],al
   14003fa82:	imul   esi,DWORD PTR [rcx],0x313532
   14003fa88:	rex.B ins DWORD PTR es:[rdi],dx
   14003fa8a:	imul   esp,DWORD PTR [rdi+0x61],0x3532312d
   14003fa91:	xor    DWORD PTR [rax],eax
   14003fa93:	add    BYTE PTR [rax],al
   14003fa95:	add    BYTE PTR [rax],al
   14003fa97:	add    BYTE PTR [rbx+0x79],al
   14003fa9a:	jb     0x14003fb05
   14003fa9c:	ins    BYTE PTR es:[rdi],dx
   14003fa9d:	ins    BYTE PTR es:[rdi],dx
   14003fa9e:	imul   esp,DWORD PTR [rbx+0x2d],0x61697341
   14003faa5:	outs   dx,BYTE PTR ds:[rsi]
   14003faa6:	add    BYTE PTR [rax],al
   14003faa8:	rex.XB push r8
   14003faaa:	xor    DWORD PTR [rip+0x34],esi        # 0x14003fae4
   14003fab0:	push   rax
   14003fab1:	push   rsp
   14003fab2:	xor    DWORD PTR [rip+0x34],esi        # 0x14003faec
   14003fab8:	movsxd esi,DWORD PTR [rbx+0x50]
   14003fabb:	push   rsp
   14003fabc:	rex.XB push r8
   14003fabe:	xor    DWORD PTR [rip+0x34],esi        # 0x14003faf8
   14003fac4:	add    BYTE PTR [rax],al
   14003fac6:	add    BYTE PTR [rax],al
   14003fac8:	push   rax
   14003fac9:	push   rsp
   14003faca:	rex.XB push r8
   14003facc:	xor    DWORD PTR [rip+0x62690034],esi        # 0x1a26cfb06
   14003fad2:	ins    DWORD PTR es:[rdi],dx
   14003fad3:	sub    eax,0x37343031
   14003fad8:	pop    rdi
   14003fad9:	push   rax
   14003fada:	xor    DWORD PTR [rax],esi
   14003fadc:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d3413
   14003fae2:	add    BYTE PTR [rax],al
   14003fae4:	xor    DWORD PTR [rax],esi
   14003fae6:	xor    al,0x37
   14003fae8:	add    BYTE PTR [rax],al
   14003faea:	add    BYTE PTR [rax],al
   14003faec:	movsxd esi,DWORD PTR [rax+0x31]
   14003faef:	xor    BYTE PTR [rdi+rsi*1],dh
   14003faf2:	add    BYTE PTR [rax],al
   14003faf4:	add    BYTE PTR [rax],al
   14003faf6:	add    BYTE PTR [rax],al
   14003faf8:	rex.WB
   14003faf9:	rex.X
   14003fafa:	rex.WRB sub rax,0x37343031
	...
   14003fb08:	rex.WB
   14003fb09:	rex.X
   14003fb0a:	xor    QWORD PTR [r8],r14
   14003fb0d:	xor    al,0x37
   14003fb0f:	add    BYTE PTR [rax+0x6b],ch
   14003fb12:	(bad)  
   14003fb13:	imul   esp,DWORD PTR [rdi+0x35],0x534d0000
   14003fb1a:	cmp    DWORD PTR [rip+0x4b485f30],esi        # 0x18b4c5a50
   14003fb20:	push   rbx
   14003fb21:	rex.XB push r11
   14003fb23:	add    BYTE PTR [rax],al
   14003fb25:	add    BYTE PTR [rax],al
   14003fb27:	add    BYTE PTR [rcx+0x62],ch
   14003fb2a:	ins    DWORD PTR es:[rdi],dx
   14003fb2b:	sub    eax,0x31373435
	...
   14003fb38:	imul   esp,DWORD PTR [rdx+0x6d],0x3734352d
   14003fb3f:	xor    DWORD PTR [rdi+0x50],ebx
   14003fb42:	xor    DWORD PTR [rax],esi
   14003fb44:	xor    BYTE PTR [rip+0x36303032],ch        # 0x176342b7c
   14003fb4a:	add    BYTE PTR [rax],al
   14003fb4c:	add    BYTE PTR [rax],al
   14003fb4e:	add    BYTE PTR [rax],al
   14003fb50:	rex.W
   14003fb51:	rex.WXB push r11
   14003fb53:	rex.XB push r11
   14003fb55:	sub    eax,0x35474942
   14003fb5a:	add    BYTE PTR [rax],al
   14003fb5c:	(bad)  
   14003fb5d:	imul   esp,DWORD PTR [rdi+0x35],0x6b68
   14003fb64:	add    BYTE PTR [rax],al
   14003fb66:	add    BYTE PTR [rax],al
   14003fb68:	imul   esp,DWORD PTR [rdx+0x6d],0x3733312d
   14003fb6f:	xor    eax,0x0
   14003fb74:	add    BYTE PTR [rax],al
   14003fb76:	add    BYTE PTR [rax],al
   14003fb78:	imul   esp,DWORD PTR [rdx+0x6d],0x3733312d
   14003fb7f:	xor    eax,0x3031505f
   14003fb84:	xor    BYTE PTR [rip+0x37303032],ch        # 0x177342bbc
   14003fb8a:	add    BYTE PTR [rax],al
   14003fb8c:	add    BYTE PTR [rax],al
   14003fb8e:	add    BYTE PTR [rax],al
   14003fb90:	rex.X imul esp,DWORD PTR [rdi+0x35],0x534b482d
   14003fb98:	rex.XB push r11
   14003fb9a:	add    BYTE PTR [rax],al
   14003fb9c:	add    BYTE PTR [rax],al
   14003fb9e:	add    BYTE PTR [rax],al
   14003fba0:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fba7:	cmp    DWORD PTR [rdi+0x50],ebx
   14003fbaa:	xor    DWORD PTR [rax],esi
   14003fbac:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d34e3
   14003fbb2:	add    BYTE PTR [rax],al
   14003fbb4:	movsxd esi,DWORD PTR [rax+0x31]
   14003fbb7:	xor    DWORD PTR [rcx+rdi*1],esi
   14003fbba:	add    BYTE PTR [rax],al
   14003fbbc:	add    BYTE PTR [rax],al
   14003fbbe:	add    BYTE PTR [rax],al
   14003fbc0:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fbc7:	cmp    DWORD PTR [rax],eax
   14003fbc9:	add    BYTE PTR [rax],al
   14003fbcb:	add    BYTE PTR [rax],al
   14003fbcd:	add    BYTE PTR [rax],al
   14003fbcf:	add    BYTE PTR [rbp+0x62],ah
   14003fbd2:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14003fbd6:	sub    eax,0x382d7369
   14003fbdb:	(bad)  
   14003fbdc:	xor    DWORD PTR [rbx],ebp
   14003fbde:	gs jne 0x14003fc53
   14003fbe1:	outs   dx,DWORD PTR ds:[rsi]
   14003fbe2:	add    BYTE PTR [rax],al
   14003fbe4:	add    BYTE PTR [rax],al
   14003fbe6:	add    BYTE PTR [rax],al
   14003fbe8:	rex.XB push r8
   14003fbea:	xor    BYTE PTR [rcx],dh
   14003fbec:	xor    DWORD PTR [rcx+rdi*1],esi
   14003fbef:	add    BYTE PTR [rbx+0x43],al
   14003fbf2:	push   rbx
   14003fbf3:	rex.WB
   14003fbf4:	xor    BYTE PTR [rcx],r14b
   14003fbf7:	xor    DWORD PTR [rcx+rdi*1],esi
   14003fbfa:	add    BYTE PTR [rax],al
   14003fbfc:	add    BYTE PTR [rax],al
   14003fbfe:	add    BYTE PTR [rax],al
   14003fc00:	rex.WB
   14003fc01:	rex.X
   14003fc02:	rex.WRB xor BYTE PTR [r9],r14b
   14003fc05:	xor    DWORD PTR [rcx+rdi*1],esi
	...
   14003fc10:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fc17:	cmp    BYTE PTR [rdi+0x50],bl
   14003fc1a:	xor    DWORD PTR [rax],esi
   14003fc1c:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d3553
   14003fc22:	add    BYTE PTR [rax],al
   14003fc24:	movsxd esi,DWORD PTR [rax+0x31]
   14003fc27:	xor    DWORD PTR [rax+rdi*1],esi
   14003fc2a:	add    BYTE PTR [rax],al
   14003fc2c:	add    BYTE PTR [rax],al
   14003fc2e:	add    BYTE PTR [rax],al
   14003fc30:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fc37:	cmp    BYTE PTR [rax],al
   14003fc39:	add    BYTE PTR [rax],al
   14003fc3b:	add    BYTE PTR [rax],al
   14003fc3d:	add    BYTE PTR [rax],al
   14003fc3f:	add    BYTE PTR [rbp+0x62],ah
   14003fc42:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14003fc46:	sub    eax,0x65746e69
   14003fc4b:	jb     0x14003fcbb
   14003fc4d:	(bad)  
   14003fc4e:	je     0x14003fcb9
   14003fc50:	outs   dx,DWORD PTR ds:[rsi]
   14003fc51:	outs   dx,BYTE PTR ds:[rsi]
   14003fc52:	(bad)  
   14003fc53:	ins    BYTE PTR es:[rdi],dx
   14003fc54:	sub    eax,0x2b303035
   14003fc59:	gs jne 0x14003fcce
   14003fc5c:	outs   dx,DWORD PTR ds:[rsi]
   14003fc5d:	add    BYTE PTR [rax],al
   14003fc5f:	add    BYTE PTR [rbx+0x50],al
   14003fc62:	xor    BYTE PTR [rcx],dh
   14003fc64:	xor    DWORD PTR [rax+rdi*1],esi
   14003fc67:	add    BYTE PTR [rbx+0x43],al
   14003fc6a:	push   rbx
   14003fc6b:	rex.WB
   14003fc6c:	xor    BYTE PTR [rcx],r14b
   14003fc6f:	xor    DWORD PTR [rax+rdi*1],esi
   14003fc72:	add    BYTE PTR [rax],al
   14003fc74:	add    BYTE PTR [rax],al
   14003fc76:	add    BYTE PTR [rax],al
   14003fc78:	rex.WB
   14003fc79:	rex.X
   14003fc7a:	rex.WRB xor BYTE PTR [r9],r14b
   14003fc7d:	xor    DWORD PTR [rax+rdi*1],esi
	...
   14003fc88:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fc8f:	(bad)  
   14003fc90:	pop    rdi
   14003fc91:	push   rax
   14003fc92:	xor    DWORD PTR [rax],esi
   14003fc94:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d35cb
   14003fc9a:	add    BYTE PTR [rax],al
   14003fc9c:	movsxd esi,DWORD PTR [rax+0x31]
   14003fc9f:	xor    DWORD PTR [rdi+rsi*1],esi
   14003fca2:	add    BYTE PTR [rax],al
   14003fca4:	add    BYTE PTR [rax],al
   14003fca6:	add    BYTE PTR [rax],al
   14003fca8:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fcaf:	(bad)  
	...
   14003fcb8:	(bad)
   14003fcbe:	sub    eax,0x322d7266
   14003fcc3:	cmp    DWORD PTR [rdi],esi
   14003fcc5:	sub    esp,DWORD PTR [rbp+0x75]
   14003fcc8:	jb     0x14003fd39
   14003fcca:	add    BYTE PTR [rax],al
   14003fccc:	add    BYTE PTR [rax],al
   14003fcce:	add    BYTE PTR [rax],al
   14003fcd0:	rex.XB push r8
   14003fcd2:	xor    BYTE PTR [rcx],dh
   14003fcd4:	xor    DWORD PTR [rdi+rsi*1],esi
   14003fcd7:	add    BYTE PTR [rbx+0x43],al
   14003fcda:	push   rbx
   14003fcdb:	rex.WB
   14003fcdc:	xor    BYTE PTR [rcx],r14b
   14003fcdf:	xor    DWORD PTR [rdi+rsi*1],esi
   14003fce2:	add    BYTE PTR [rax],al
   14003fce4:	add    BYTE PTR [rax],al
   14003fce6:	add    BYTE PTR [rax],al
   14003fce8:	rex.WB
   14003fce9:	rex.X
   14003fcea:	rex.WRB xor BYTE PTR [r9],r14b
   14003fced:	xor    DWORD PTR [rdi+rsi*1],esi
	...
   14003fcf8:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fcff:	ss pop rdi
   14003fd01:	push   rax
   14003fd02:	xor    DWORD PTR [rax],esi
   14003fd04:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d363b
   14003fd0a:	add    BYTE PTR [rax],al
   14003fd0c:	movsxd esi,DWORD PTR [rax+0x31]
   14003fd0f:	xor    DWORD PTR [rsi+rsi*1],esi
   14003fd12:	add    BYTE PTR [rax],al
   14003fd14:	add    BYTE PTR [rax],al
   14003fd16:	add    BYTE PTR [rax],al
   14003fd18:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fd1f:	add    BYTE PTR ss:[rax],al
   14003fd22:	add    BYTE PTR [rax],al
   14003fd24:	add    BYTE PTR [rax],al
   14003fd26:	add    BYTE PTR [rax],al
   14003fd28:	(bad)
   14003fd2e:	sub    eax,0x322d6267
   14003fd33:	cmp    BYTE PTR [rip+0x7275652b],dh        # 0x1b2796264
   14003fd39:	outs   dx,DWORD PTR ds:[rsi]
   14003fd3a:	add    BYTE PTR [rax],al
   14003fd3c:	add    BYTE PTR [rax],al
   14003fd3e:	add    BYTE PTR [rax],al
   14003fd40:	rex.XB push r8
   14003fd42:	xor    BYTE PTR [rcx],dh
   14003fd44:	xor    DWORD PTR [rsi+rsi*1],esi
   14003fd47:	add    BYTE PTR [rbx+0x43],al
   14003fd4a:	push   rbx
   14003fd4b:	rex.WB
   14003fd4c:	xor    BYTE PTR [rcx],r14b
   14003fd4f:	xor    DWORD PTR [rsi+rsi*1],esi
   14003fd52:	add    BYTE PTR [rax],al
   14003fd54:	add    BYTE PTR [rax],al
   14003fd56:	add    BYTE PTR [rax],al
   14003fd58:	rex.WB
   14003fd59:	rex.X
   14003fd5a:	rex.WRB xor BYTE PTR [r9],r14b
   14003fd5d:	xor    DWORD PTR [rsi+rsi*1],esi
	...
   14003fd68:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fd6f:	xor    eax,0x3031505f
   14003fd74:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d36ab
   14003fd7a:	add    BYTE PTR [rax],al
   14003fd7c:	movsxd esi,DWORD PTR [rax+0x31]
   14003fd7f:	xor    DWORD PTR [rsi*1+0x0],esi
   14003fd86:	add    BYTE PTR [rax],al
   14003fd88:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fd8f:	xor    eax,0x0
   14003fd94:	add    BYTE PTR [rax],al
   14003fd96:	add    BYTE PTR [rax],al
   14003fd98:	(bad)
   14003fd9e:	sub    eax,0x322d7365
   14003fda3:	cmp    BYTE PTR [rbx+rbp*1],dh
   14003fda6:	gs jne 0x14003fe1b
   14003fda9:	outs   dx,DWORD PTR ds:[rsi]
   14003fdaa:	add    BYTE PTR [rax],al
   14003fdac:	add    BYTE PTR [rax],al
   14003fdae:	add    BYTE PTR [rax],al
   14003fdb0:	rex.XB push r8
   14003fdb2:	xor    BYTE PTR [rcx],dh
   14003fdb4:	xor    DWORD PTR [rsi*1+0x53434300],esi
   14003fdbb:	rex.WB
   14003fdbc:	xor    BYTE PTR [rcx],r14b
   14003fdbf:	xor    DWORD PTR [rsi*1+0x0],esi
   14003fdc6:	add    BYTE PTR [rax],al
   14003fdc8:	rex.WB
   14003fdc9:	rex.X
   14003fdca:	rex.WRB xor BYTE PTR [r9],r14b
   14003fdcd:	xor    DWORD PTR [rsi*1+0x0],esi
   14003fdd4:	add    BYTE PTR [rax],al
   14003fdd6:	add    BYTE PTR [rax],al
   14003fdd8:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fddf:	xor    al,0x5f
   14003fde1:	push   rax
   14003fde2:	xor    DWORD PTR [rax],esi
   14003fde4:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d371b
   14003fdea:	add    BYTE PTR [rax],al
   14003fdec:	movsxd esi,DWORD PTR [rax+0x31]
   14003fdef:	xor    DWORD PTR [rsp+rsi*1],esi
   14003fdf2:	add    BYTE PTR [rax],al
   14003fdf4:	add    BYTE PTR [rax],al
   14003fdf6:	add    BYTE PTR [rax],al
   14003fdf8:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fdff:	xor    al,0x0
   14003fe01:	add    BYTE PTR [rax],al
   14003fe03:	add    BYTE PTR [rax],al
   14003fe05:	add    BYTE PTR [rax],al
   14003fe07:	add    BYTE PTR [rbp+0x62],ah
   14003fe0a:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14003fe0e:	sub    eax,0x322d7469
   14003fe13:	cmp    BYTE PTR [rax],dh
   14003fe15:	sub    esp,DWORD PTR [rbp+0x75]
   14003fe18:	jb     0x14003fe89
   14003fe1a:	add    BYTE PTR [rax],al
   14003fe1c:	add    BYTE PTR [rax],al
   14003fe1e:	add    BYTE PTR [rax],al
   14003fe20:	rex.XB push r8
   14003fe22:	xor    BYTE PTR [rcx],dh
   14003fe24:	xor    DWORD PTR [rsp+rsi*1],esi
   14003fe27:	add    BYTE PTR [rbx+0x43],al
   14003fe2a:	push   rbx
   14003fe2b:	rex.WB
   14003fe2c:	xor    BYTE PTR [rcx],r14b
   14003fe2f:	xor    DWORD PTR [rsp+rsi*1],esi
   14003fe32:	add    BYTE PTR [rax],al
   14003fe34:	add    BYTE PTR [rax],al
   14003fe36:	add    BYTE PTR [rax],al
   14003fe38:	rex.WB
   14003fe39:	rex.X
   14003fe3a:	rex.WRB xor BYTE PTR [r9],r14b
   14003fe3d:	xor    DWORD PTR [rsp+rsi*1],esi
	...
   14003fe48:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fe4f:	xor    ebx,DWORD PTR [rdi+0x50]
   14003fe52:	xor    DWORD PTR [rax],esi
   14003fe54:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d378b
   14003fe5a:	add    BYTE PTR [rax],al
   14003fe5c:	movsxd esi,DWORD PTR [rax+0x31]
   14003fe5f:	xor    DWORD PTR [rbx+rsi*1],esi
   14003fe62:	add    BYTE PTR [rax],al
   14003fe64:	add    BYTE PTR [rax],al
   14003fe66:	add    BYTE PTR [rax],al
   14003fe68:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fe6f:	xor    eax,DWORD PTR [rax]
   14003fe71:	add    BYTE PTR [rax],al
   14003fe73:	add    BYTE PTR [rax],al
   14003fe75:	add    BYTE PTR [rax],al
   14003fe77:	add    BYTE PTR [rbp+0x62],ah
   14003fe7a:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14003fe7e:	sub    eax,0x322d6573
   14003fe83:	(bad)  
   14003fe84:	cmp    BYTE PTR [rbx],ch
   14003fe86:	gs jne 0x14003fefb
   14003fe89:	outs   dx,DWORD PTR ds:[rsi]
   14003fe8a:	add    BYTE PTR [rax],al
   14003fe8c:	add    BYTE PTR [rax],al
   14003fe8e:	add    BYTE PTR [rax],al
   14003fe90:	(bad)
   14003fe96:	sub    eax,0x322d6966
   14003fe9b:	(bad)  
   14003fe9c:	cmp    BYTE PTR [rbx],ch
   14003fe9e:	gs jne 0x14003ff13
   14003fea1:	outs   dx,DWORD PTR ds:[rsi]
   14003fea2:	add    BYTE PTR [rax],al
   14003fea4:	add    BYTE PTR [rax],al
   14003fea6:	add    BYTE PTR [rax],al
   14003fea8:	rex.XB push r8
   14003feaa:	xor    BYTE PTR [rcx],dh
   14003feac:	xor    DWORD PTR [rbx+rsi*1],esi
   14003feaf:	add    BYTE PTR [rbx+0x43],al
   14003feb2:	push   rbx
   14003feb3:	rex.WB
   14003feb4:	xor    BYTE PTR [rcx],r14b
   14003feb7:	xor    DWORD PTR [rbx+rsi*1],esi
   14003feba:	add    BYTE PTR [rax],al
   14003febc:	add    BYTE PTR [rax],al
   14003febe:	add    BYTE PTR [rax],al
   14003fec0:	rex.WB
   14003fec1:	rex.X
   14003fec2:	rex.WRB xor BYTE PTR [r9],r14b
   14003fec5:	xor    DWORD PTR [rbx+rsi*1],esi
	...
   14003fed0:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fed7:	xor    bl,BYTE PTR [rdi+0x50]
   14003feda:	xor    DWORD PTR [rax],esi
   14003fedc:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d3813
   14003fee2:	add    BYTE PTR [rax],al
   14003fee4:	movsxd esi,DWORD PTR [rax+0x31]
   14003fee7:	xor    DWORD PTR [rdx+rsi*1],esi
   14003feea:	add    BYTE PTR [rax],al
   14003feec:	add    BYTE PTR [rax],al
   14003feee:	add    BYTE PTR [rax],al
   14003fef0:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003fef7:	xor    al,BYTE PTR [rax]
   14003fef9:	add    BYTE PTR [rax],al
   14003fefb:	add    BYTE PTR [rax],al
   14003fefd:	add    BYTE PTR [rax],al
   14003feff:	add    BYTE PTR [rbp+0x62],ah
   14003ff02:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14003ff06:	sub    eax,0x322d6f6e
   14003ff0b:	(bad)  
   14003ff0c:	(bad)  
   14003ff0d:	sub    esp,DWORD PTR [rbp+0x75]
   14003ff10:	jb     0x14003ff81
   14003ff12:	add    BYTE PTR [rax],al
   14003ff14:	add    BYTE PTR [rax],al
   14003ff16:	add    BYTE PTR [rax],al
   14003ff18:	(bad)
   14003ff1e:	sub    eax,0x322d6b64
   14003ff23:	(bad)  
   14003ff24:	(bad)  
   14003ff25:	sub    esp,DWORD PTR [rbp+0x75]
   14003ff28:	jb     0x14003ff99
   14003ff2a:	add    BYTE PTR [rax],al
   14003ff2c:	add    BYTE PTR [rax],al
   14003ff2e:	add    BYTE PTR [rax],al
   14003ff30:	rex.XB push r8
   14003ff32:	xor    BYTE PTR [rcx],dh
   14003ff34:	xor    DWORD PTR [rdx+rsi*1],esi
   14003ff37:	add    BYTE PTR [rbx+0x43],al
   14003ff3a:	push   rbx
   14003ff3b:	rex.WB
   14003ff3c:	xor    BYTE PTR [rcx],r14b
   14003ff3f:	xor    DWORD PTR [rdx+rsi*1],esi
   14003ff42:	add    BYTE PTR [rax],al
   14003ff44:	add    BYTE PTR [rax],al
   14003ff46:	add    BYTE PTR [rax],al
   14003ff48:	rex.WB
   14003ff49:	rex.X
   14003ff4a:	rex.WRB xor BYTE PTR [r9],r14b
   14003ff4d:	xor    DWORD PTR [rdx+rsi*1],esi
	...
   14003ff58:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003ff5f:	xor    DWORD PTR [rdi+0x50],ebx
   14003ff62:	xor    DWORD PTR [rax],esi
   14003ff64:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d389b
   14003ff6a:	add    BYTE PTR [rax],al
   14003ff6c:	movsxd esi,DWORD PTR [rax+0x31]
   14003ff6f:	xor    DWORD PTR [rcx+rsi*1],esi
   14003ff72:	add    BYTE PTR [rax],al
   14003ff74:	add    BYTE PTR [rax],al
   14003ff76:	add    BYTE PTR [rax],al
   14003ff78:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003ff7f:	xor    DWORD PTR [rax],eax
   14003ff81:	add    BYTE PTR [rax],al
   14003ff83:	add    BYTE PTR [rax],al
   14003ff85:	add    BYTE PTR [rax],al
   14003ff87:	add    BYTE PTR [rbp+0x62],ah
   14003ff8a:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14003ff8e:	sub    eax,0x322d6564
   14003ff93:	(bad)  
   14003ff94:	xor    ebp,DWORD PTR [rbx]
   14003ff96:	gs jne 0x14004000b
   14003ff99:	outs   dx,DWORD PTR ds:[rsi]
   14003ff9a:	add    BYTE PTR [rax],al
   14003ff9c:	add    BYTE PTR [rax],al
   14003ff9e:	add    BYTE PTR [rax],al
   14003ffa0:	rex.XB push r8
   14003ffa2:	xor    BYTE PTR [rcx],dh
   14003ffa4:	xor    DWORD PTR [rcx+rsi*1],esi
   14003ffa7:	add    BYTE PTR [rbx+0x43],al
   14003ffaa:	push   rbx
   14003ffab:	rex.WB
   14003ffac:	xor    BYTE PTR [rcx],r14b
   14003ffaf:	xor    DWORD PTR [rcx+rsi*1],esi
   14003ffb2:	add    BYTE PTR [rax],al
   14003ffb4:	add    BYTE PTR [rax],al
   14003ffb6:	add    BYTE PTR [rax],al
   14003ffb8:	rex.WB
   14003ffb9:	rex.X
   14003ffba:	rex.WRB xor BYTE PTR [r9],r14b
   14003ffbd:	xor    DWORD PTR [rcx+rsi*1],esi
	...
   14003ffc8:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003ffcf:	xor    BYTE PTR [rdi+0x50],bl
   14003ffd2:	xor    DWORD PTR [rax],esi
   14003ffd4:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d390b
   14003ffda:	add    BYTE PTR [rax],al
   14003ffdc:	movsxd esi,DWORD PTR [rax+0x31]
   14003ffdf:	xor    DWORD PTR [rax+rsi*1],esi
   14003ffe2:	add    BYTE PTR [rax],al
   14003ffe4:	add    BYTE PTR [rax],al
   14003ffe6:	add    BYTE PTR [rax],al
   14003ffe8:	imul   esp,DWORD PTR [rdx+0x6d],0x3431312d
   14003ffef:	xor    BYTE PTR [rax],al
   14003fff1:	add    BYTE PTR [rax],al
   14003fff3:	add    BYTE PTR [rax],al
   14003fff5:	add    BYTE PTR [rax],al
   14003fff7:	add    BYTE PTR [rbp+0x62],ah
   14003fffa:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14003fffe:	sub    eax,0x332d7375
   140040003:	(bad)  
   140040004:	sub    esp,DWORD PTR [rbp+0x75]
   140040007:	jb     0x140040078
   140040009:	add    BYTE PTR [rax],al
   14004000b:	add    BYTE PTR [rax],al
   14004000d:	add    BYTE PTR [rax],al
   14004000f:	add    BYTE PTR [rbx+0x50],al
   140040012:	xor    BYTE PTR [rcx],dh
   140040014:	xor    DWORD PTR [rax+rsi*1],esi
   140040017:	add    BYTE PTR [rbx+0x43],al
   14004001a:	push   rbx
   14004001b:	rex.WB
   14004001c:	xor    BYTE PTR [rcx],r14b
   14004001f:	xor    DWORD PTR [rax+rsi*1],esi
   140040022:	add    BYTE PTR [rax],al
   140040024:	add    BYTE PTR [rax],al
   140040026:	add    BYTE PTR [rax],al
   140040028:	rex.WB
   140040029:	rex.X
   14004002a:	rex.WRB xor BYTE PTR [r9],r14b
   14004002d:	xor    DWORD PTR [rax+rsi*1],esi
	...
   140040038:	(bad)
   14004003e:	sub    eax,0x6974614c
   140040043:	outs   dx,BYTE PTR ds:[rsi]
   140040044:	cmp    DWORD PTR [rip+0x7275652d],ebp        # 0x1b2796577
   14004004a:	outs   dx,DWORD PTR ds:[rsi]
   14004004b:	add    BYTE PTR [rax],al
   14004004d:	add    BYTE PTR [rax],al
   14004004f:	add    BYTE PTR [rbx+0x50],al
   140040052:	xor    BYTE PTR [rax],dh
   140040054:	cmp    DWORD PTR [rdx],esi
   140040056:	xor    al,0x0
   140040058:	rex.XB
   140040059:	rex.XB push r11
   14004005b:	rex.WB
   14004005c:	xor    BYTE PTR [rax],r14b
   14004005f:	cmp    DWORD PTR [rdx],esi
   140040061:	xor    al,0x0
   140040063:	add    BYTE PTR [rax],al
   140040065:	add    BYTE PTR [rax],al
   140040067:	add    BYTE PTR [rcx+0x42],cl
   14004006a:	rex.WRB xor BYTE PTR [r8],r14b
   14004006d:	cmp    DWORD PTR [rdx],esi
   14004006f:	xor    al,0x0
   140040071:	add    BYTE PTR [rax],al
   140040073:	add    BYTE PTR [rax],al
   140040075:	add    BYTE PTR [rax],al
   140040077:	add    BYTE PTR [rcx+0x62],ch
   14004007a:	ins    DWORD PTR es:[rdi],dx
   14004007b:	sub    eax,0x5f383538
   140040080:	push   rax
   140040081:	xor    DWORD PTR [rax],esi
   140040083:	xor    BYTE PTR [rip+0x37393931],ch        # 0x1773d39ba
   140040089:	add    BYTE PTR [rax],al
   14004008b:	add    BYTE PTR [rbx+0x70],ah
   14004008e:	cmp    BYTE PTR [rip+0x38],dh        # 0x1400400cc
   140040094:	add    BYTE PTR [rax],al
   140040096:	add    BYTE PTR [rax],al
   140040098:	imul   esp,DWORD PTR [rdx+0x6d],0x3835382d
   14004009f:	add    BYTE PTR [rax+0x43],dl
   1400400a2:	sub    eax,0x746c754d
   1400400a7:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x6c617567
   1400400af:	sub    eax,0x2b303538
   1400400b4:	gs jne 0x140040129
   1400400b7:	outs   dx,DWORD PTR ds:[rsi]
	...
   1400400c0:	rex.XB push r8
   1400400c2:	xor    BYTE PTR [rax],dh
   1400400c4:	cmp    BYTE PTR [rip+0x43430038],dh        # 0x183470102
   1400400ca:	push   rbx
   1400400cb:	rex.WB
   1400400cc:	xor    BYTE PTR [rax],r14b
   1400400cf:	cmp    BYTE PTR [rip+0x38],dh        # 0x14004010d
   1400400d5:	add    BYTE PTR [rax],al
   1400400d7:	add    BYTE PTR [rcx+0x42],cl
   1400400da:	rex.WRB xor BYTE PTR [r8],r14b
   1400400dd:	cmp    BYTE PTR [rip+0x38],dh        # 0x14004011b
   1400400e3:	add    BYTE PTR [rax],al
   1400400e5:	add    BYTE PTR [rax],al
   1400400e7:	add    BYTE PTR [rcx+0x62],ch
   1400400ea:	ins    DWORD PTR es:[rdi],dx
   1400400eb:	sub    eax,0x38363131
   1400400f0:	pop    rdi
   1400400f1:	push   rax
   1400400f2:	xor    DWORD PTR [rax],esi
   1400400f4:	xor    BYTE PTR [rip+0x32303032],ch        # 0x17234312c
   1400400fa:	add    BYTE PTR [rax],al
   1400400fc:	add    BYTE PTR [rax],al
   1400400fe:	add    BYTE PTR [rax],al
   140040100:	imul   esp,DWORD PTR [rdx+0x6d],0x3631312d
   140040107:	cmp    BYTE PTR [rax],al
   140040109:	add    BYTE PTR [rax],al
   14004010b:	add    BYTE PTR [rbx+0x4f],cl
   14004010e:	rex.WB cmp BYTE PTR [rip+0x37000055],bpl        # 0x17704016a
   140040115:	(bad)  
   140040116:	xor    eax,0x6d626900
   14004011b:	sub    eax,0x5f353737
   140040120:	push   rax
   140040121:	xor    DWORD PTR [rax],esi
   140040123:	xor    BYTE PTR [rip+0x36393931],ch        # 0x1763d3a5a
   140040129:	add    BYTE PTR [rax],al
   14004012b:	add    BYTE PTR [rax],al
   14004012d:	add    BYTE PTR [rax],al
   14004012f:	add    BYTE PTR [rbx+0x73],ah
   140040132:	push   rax
   140040133:	rex.XB (bad) 
   140040135:	(bad)  
   140040136:	xor    eax,0x746c6142
   14004013b:	imul   esp,DWORD PTR [rbx+0x0],0x70630000
   140040142:	(bad)  
   140040143:	(bad)  
   140040144:	xor    eax,0x49000000
   140040149:	rex.X
   14004014a:	rex.WRB (bad) 
   14004014c:	(bad)  
   14004014d:	xor    eax,0x62690000
   140040152:	ins    DWORD PTR es:[rdi],dx
   140040153:	sub    eax,0x5f363638
   140040158:	push   rax
   140040159:	xor    DWORD PTR [rax],esi
   14004015b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d3a92
   140040161:	add    BYTE PTR [rax],al
   140040163:	add    BYTE PTR [rax],al
   140040165:	add    BYTE PTR [rax],al
   140040167:	add    BYTE PTR [rbx+0x73],ah
   14004016a:	rex.WB
   14004016b:	rex.X
   14004016c:	rex.WRB cmp BYTE PTR [r14],r14b
   14004016f:	add    BYTE PTR ss:[rax],al
   140040172:	add    BYTE PTR [rax],al
   140040174:	cmp    BYTE PTR [rsi],dh
   140040176:	add    BYTE PTR ss:[rbx+0x70],ah
   14004017a:	cmp    BYTE PTR [rsi],dh
   14004017c:	add    BYTE PTR ss:[rax],al
   14004017f:	add    BYTE PTR [rcx+0x42],cl
   140040182:	rex.WRB cmp BYTE PTR [r14],r14b
   140040185:	add    BYTE PTR ss:[rax],al
   140040188:	rex.W pop rdx
   14004018a:	add    BYTE PTR [rax],al
   14004018c:	add    BYTE PTR [rax],al
   14004018e:	add    BYTE PTR [rax],al
   140040190:	rex.W pop rdx
   140040192:	sub    eax,0x322d4247
   140040197:	xor    esi,DWORD PTR [rcx]
   140040199:	xor    al,BYTE PTR [rax]
   14004019b:	add    BYTE PTR [rax],al
   14004019d:	add    BYTE PTR [rax],al
   14004019f:	add    BYTE PTR [rcx+0x62],ch
   1400401a2:	ins    DWORD PTR es:[rdi],dx
   1400401a3:	sub    eax,0x5f383738
   1400401a8:	push   rax
   1400401a9:	xor    DWORD PTR [rax],esi
   1400401ab:	xor    BYTE PTR [rip+0x36393931],ch        # 0x1763d3ae2
   1400401b1:	add    BYTE PTR [rax],al
   1400401b3:	add    BYTE PTR [rax],al
   1400401b5:	add    BYTE PTR [rax],al
   1400401b7:	add    BYTE PTR [rcx+0x62],ch
   1400401ba:	ins    DWORD PTR es:[rdi],dx
   1400401bb:	sub    eax,0x383738
   1400401c0:	movsxd esi,DWORD PTR [rax+0x38]
   1400401c3:	(bad)  
   1400401c4:	cmp    BYTE PTR [rax],al
   1400401c6:	add    BYTE PTR [rax],al
   1400401c8:	imul   ebp,DWORD PTR [rdi+0x69],0x38
   1400401cc:	add    BYTE PTR [rax],al
   1400401ce:	add    BYTE PTR [rax],al
   1400401d0:	movsxd esi,DWORD PTR [rbx+0x4b]
   1400401d3:	rex.WRXB
   1400401d4:	rex.WB cmp BYTE PTR [r10+0x0],dl
   1400401d8:	rex.WXB
   1400401d9:	rex.WRXB
   1400401da:	rex.WB cmp BYTE PTR [rip+0x63000052],bpl        # 0x1a3040233
   1400401e1:	jae    0x140040239
   1400401e3:	rex.WB push r9
   1400401e5:	push   rdx
   1400401e6:	add    BYTE PTR [rax],al
   1400401e8:	push   rsi
   1400401e9:	rex.WB push r9
   1400401eb:	push   rdx
   1400401ec:	add    BYTE PTR [rax],al
   1400401ee:	add    BYTE PTR [rax],al
   1400401f0:	movsxd esi,DWORD PTR [rbx+0x56]
   1400401f3:	rex.WB push r11
   1400401f5:	rex.XB
   1400401f6:	rex.WB
   1400401f7:	rex.WB add BYTE PTR [r8],al
   1400401fa:	add    BYTE PTR [rax],al
   1400401fc:	push   rsi
   1400401fd:	rex.WB push r11
   1400401ff:	rex.XB
   140040200:	rex.WB
   140040201:	rex.WB add BYTE PTR [r8],al
   140040204:	movsxd esi,DWORD PTR [rbx+0x4d]
   140040207:	outs   dx,BYTE PTR ds:[rsi]
   140040208:	gs ins DWORD PTR es:[rdi],dx
   14004020a:	add    BYTE PTR [rax],al
   14004020c:	rex.WRB
   14004020d:	rex.WRX
   14004020e:	rex.RB
   14004020f:	rex.WRB add BYTE PTR [r8],r8b
   140040212:	add    BYTE PTR [rax],al
   140040214:	add    BYTE PTR [rax],al
   140040216:	add    BYTE PTR [rax],al
   140040218:	movsxd esi,DWORD PTR [rbx+0x4d]
   14004021b:	outs   dx,BYTE PTR ds:[rsi]
   14004021c:	gs ins DWORD PTR es:[rdi],dx
   14004021e:	outs   dx,DWORD PTR ds:[rsi]
   14004021f:	outs   dx,BYTE PTR ds:[rsi]
   140040220:	imul   esp,DWORD PTR [rbx+0x0],0x0
   140040227:	add    BYTE PTR [rbp+0x4e],cl
   14004022a:	rex.RB
   14004022b:	rex.WRB
   14004022c:	rex.WRXB
   14004022d:	rex.WRX
   14004022e:	rex.WB
   14004022f:	rex.XB add BYTE PTR [r8],al
   140040232:	add    BYTE PTR [rax],al
   140040234:	add    BYTE PTR [rax],al
   140040236:	add    BYTE PTR [rax],al
   140040238:	movsxd esi,DWORD PTR [rbx+0x55]
   14004023b:	outs   dx,BYTE PTR ds:[rsi]
   14004023c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140040240:	outs   dx,BYTE PTR ds:[rsi]
   140040241:	cmp    BYTE PTR [rdx+0x69],al
   140040244:	push   rsp
   140040245:	add    BYTE PTR [rax],al
   140040247:	add    BYTE PTR [rbp+0x4e],dl
   14004024a:	rex.WXB
   14004024b:	rex.WRX
   14004024c:	rex.WRXB push r15
   14004024e:	rex.WRX sub rax,0x54494238
   140040254:	add    BYTE PTR [rax],al
   140040256:	add    BYTE PTR [rax],al
   140040258:	movsxd esi,DWORD PTR [rbx+0x45]
   14004025b:	rex.X
   14004025c:	rex.XB
   14004025d:	rex.R
   14004025e:	rex.WB
   14004025f:	rex.XB push r13
   140040261:	push   rbx
   140040262:	add    BYTE PTR [rax],al
   140040264:	add    BYTE PTR [rax],al
   140040266:	add    BYTE PTR [rax],al
   140040268:	rex.RB
   140040269:	rex.X
   14004026a:	rex.XB
   14004026b:	rex.R
   14004026c:	rex.WB
   14004026d:	rex.XB sub eax,0x5355
   140040273:	add    BYTE PTR [rax],al
   140040275:	add    BYTE PTR [rax],al
   140040277:	add    BYTE PTR [rbx+0x73],ah
   14004027a:	rex.RB
   14004027b:	rex.X
   14004027c:	rex.XB
   14004027d:	rex.R
   14004027e:	rex.WB
   14004027f:	rex.XB push r13
   140040281:	rex.WXB add BYTE PTR [r8],al
   140040284:	add    BYTE PTR [rax],al
   140040286:	add    BYTE PTR [rax],al
   140040288:	rex.RB
   140040289:	rex.X
   14004028a:	rex.XB
   14004028b:	rex.R
   14004028c:	rex.WB
   14004028d:	rex.XB sub eax,0x4b55
   140040293:	add    BYTE PTR [rax],al
   140040295:	add    BYTE PTR [rax],al
   140040297:	add    BYTE PTR [rbx+0x73],ah
   14004029a:	rex.RB
   14004029b:	rex.X
   14004029c:	rex.XB
   14004029d:	rex.R
   14004029e:	rex.WB
   14004029f:	rex.XB
   1400402a0:	rex.RB push r11
   1400402a2:	push   rbx
   1400402a3:	add    BYTE PTR [rax],al
   1400402a5:	add    BYTE PTR [rax],al
   1400402a7:	add    BYTE PTR [rbp+0x42],al
   1400402aa:	rex.XB
   1400402ab:	rex.R
   1400402ac:	rex.WB
   1400402ad:	rex.XB sub eax,0x532d5345
   1400402b3:	add    BYTE PTR [rax],al
   1400402b5:	add    BYTE PTR [rax],al
   1400402b7:	add    BYTE PTR [rbx+0x73],ah
   1400402ba:	rex.RB
   1400402bb:	rex.X
   1400402bc:	rex.XB
   1400402bd:	rex.R
   1400402be:	rex.WB
   1400402bf:	rex.XB
   1400402c0:	rex.RB push r11
   1400402c2:	add    BYTE PTR [r8],al
   1400402c5:	add    BYTE PTR [rax],al
   1400402c7:	add    BYTE PTR [rbp+0x42],al
   1400402ca:	rex.XB
   1400402cb:	rex.R
   1400402cc:	rex.WB
   1400402cd:	rex.XB sub eax,0x412d5345
   1400402d3:	add    BYTE PTR [rax],al
   1400402d5:	add    BYTE PTR [rax],al
   1400402d7:	add    BYTE PTR [rbx+0x73],ah
   1400402da:	rex.RB
   1400402db:	rex.X
   1400402dc:	rex.XB
   1400402dd:	rex.R
   1400402de:	rex.WB
   1400402df:	rex.XB
   1400402e0:	rex.RB push r11
   1400402e2:	add    BYTE PTR [rax],al
   1400402e4:	add    BYTE PTR [rax],al
   1400402e6:	add    BYTE PTR [rax],al
   1400402e8:	rex.RB
   1400402e9:	rex.X
   1400402ea:	rex.XB
   1400402eb:	rex.R
   1400402ec:	rex.WB
   1400402ed:	rex.XB sub eax,0x5345
   1400402f3:	add    BYTE PTR [rax],al
   1400402f5:	add    BYTE PTR [rax],al
   1400402f7:	add    BYTE PTR [rbx+0x73],ah
   1400402fa:	rex.RB
   1400402fb:	rex.X
   1400402fc:	rex.XB
   1400402fd:	rex.R
   1400402fe:	rex.WB
   1400402ff:	rex.XB push r8
   140040301:	push   rsp
   140040302:	add    BYTE PTR [rax],al
   140040304:	add    BYTE PTR [rax],al
   140040306:	add    BYTE PTR [rax],al
   140040308:	rex.RB
   140040309:	rex.X
   14004030a:	rex.XB
   14004030b:	rex.R
   14004030c:	rex.WB
   14004030d:	rex.XB sub eax,0x5450
   140040313:	add    BYTE PTR [rax],al
   140040315:	add    BYTE PTR [rax],al
   140040317:	add    BYTE PTR [rbx+0x73],ah
   14004031a:	rex.RB
   14004031b:	rex.X
   14004031c:	rex.XB
   14004031d:	rex.R
   14004031e:	rex.WB
   14004031f:	rex.XB
   140040320:	rex.WB push r12
   140040322:	add    BYTE PTR [rax],al
   140040324:	add    BYTE PTR [rax],al
   140040326:	add    BYTE PTR [rax],al
   140040328:	rex.RB
   140040329:	rex.X
   14004032a:	rex.XB
   14004032b:	rex.R
   14004032c:	rex.WB
   14004032d:	rex.XB sub eax,0x5449
   140040333:	add    BYTE PTR [rax],al
   140040335:	add    BYTE PTR [rax],al
   140040337:	add    BYTE PTR [rbx+0x73],ah
   14004033a:	rex.RB
   14004033b:	rex.X
   14004033c:	rex.XB
   14004033d:	rex.R
   14004033e:	rex.WB
   14004033f:	rex.XB
   140040340:	rex.RX push rdx
   140040342:	add    BYTE PTR [rax],al
   140040344:	add    BYTE PTR [rax],al
   140040346:	add    BYTE PTR [rax],al
   140040348:	rex.RB
   140040349:	rex.X
   14004034a:	rex.XB
   14004034b:	rex.R
   14004034c:	rex.WB
   14004034d:	rex.XB sub eax,0x5246
   140040353:	add    BYTE PTR [rax],al
   140040355:	add    BYTE PTR [rax],al
   140040357:	add    BYTE PTR [rbx+0x73],ah
   14004035a:	rex.RB
   14004035b:	rex.X
   14004035c:	rex.XB
   14004035d:	rex.R
   14004035e:	rex.WB
   14004035f:	rex.XB
   140040360:	rex.RX
   140040361:	rex.WB push r11
   140040363:	rex.RB
   140040364:	add    BYTE PTR [r8],al
   140040367:	add    BYTE PTR [rbp+0x42],al
   14004036a:	rex.XB
   14004036b:	rex.R
   14004036c:	rex.WB
   14004036d:	rex.XB sub eax,0x532d4946
   140040373:	rex.RB sub eax,0x63000041
   140040379:	jae    0x1400403c0
   14004037b:	rex.X
   14004037c:	rex.XB
   14004037d:	rex.R
   14004037e:	rex.WB
   14004037f:	rex.XB
   140040380:	rex.RX
   140040381:	rex.WB push r11
   140040383:	add    BYTE PTR [r8],r8b
   140040386:	add    BYTE PTR [rax],al
   140040388:	rex.RB
   140040389:	rex.X
   14004038a:	rex.XB
   14004038b:	rex.R
   14004038c:	rex.WB
   14004038d:	rex.XB sub eax,0x532d4946
   140040393:	add    BYTE PTR [r8],r8b
   140040396:	add    BYTE PTR [rax],al
   140040398:	movsxd esi,DWORD PTR [rbx+0x45]
   14004039b:	rex.X
   14004039c:	rex.XB
   14004039d:	rex.R
   14004039e:	rex.WB
   14004039f:	rex.XB
   1400403a0:	rex.R
   1400403a1:	rex.WXB
   1400403a2:	rex.WRX
   1400403a3:	rex.WRXB
   1400403a4:	add    BYTE PTR [r8],al
   1400403a7:	add    BYTE PTR [rbp+0x42],al
   1400403aa:	rex.XB
   1400403ab:	rex.R
   1400403ac:	rex.WB
   1400403ad:	rex.XB sub eax,0x4e2d4b44
   1400403b3:	rex.WRXB sub rax,0x63000041
   1400403b9:	jae    0x140040400
   1400403bb:	rex.X
   1400403bc:	rex.XB
   1400403bd:	rex.R
   1400403be:	rex.WB
   1400403bf:	rex.XB
   1400403c0:	rex.R
   1400403c1:	rex.WXB
   1400403c2:	rex.WRX
   1400403c3:	rex.WRXB add BYTE PTR [r8],r8b
   1400403c6:	add    BYTE PTR [rax],al
   1400403c8:	rex.RB
   1400403c9:	rex.X
   1400403ca:	rex.XB
   1400403cb:	rex.R
   1400403cc:	rex.WB
   1400403cd:	rex.XB sub eax,0x4e2d4b44
   1400403d3:	rex.WRXB add BYTE PTR [r8],r8b
   1400403d6:	add    BYTE PTR [rax],al
   1400403d8:	movsxd esi,DWORD PTR [rbx+0x45]
   1400403db:	rex.X
   1400403dc:	rex.XB
   1400403dd:	rex.R
   1400403de:	rex.WB
   1400403df:	rex.XB
   1400403e0:	rex.XB
   1400403e1:	rex.B
   1400403e2:	rex.RX push rdx
   1400403e4:	add    BYTE PTR [rax],al
   1400403e6:	add    BYTE PTR [rax],al
   1400403e8:	rex.RB
   1400403e9:	rex.X
   1400403ea:	rex.XB
   1400403eb:	rex.R
   1400403ec:	rex.WB
   1400403ed:	rex.XB sub eax,0x462d4143
   1400403f3:	push   rdx
   1400403f4:	add    BYTE PTR [rax],al
   1400403f6:	add    BYTE PTR [rax],al
   1400403f8:	movsxd esi,DWORD PTR [rbx+0x45]
   1400403fb:	rex.X
   1400403fc:	rex.XB
   1400403fd:	rex.R
   1400403fe:	rex.WB
   1400403ff:	rex.XB
   140040400:	push   r12
   140040402:	rex.R
   140040403:	rex.RB
   140040404:	add    BYTE PTR [r8],al
   140040407:	add    BYTE PTR [rbp+0x42],al
   14004040a:	rex.XB
   14004040b:	rex.R
   14004040c:	rex.WB
   14004040d:	rex.XB sub eax,0x442d5441
   140040413:	rex.RB sub eax,0x63000041
   140040419:	jae    0x140040464
   14004041b:	rex.X
   14004041c:	rex.WRB
   14004041d:	rex.RB
   14004041e:	rex.X
   14004041f:	rex.XB
   140040420:	rex.R
   140040421:	rex.WB
   140040422:	rex.XB
   140040423:	push   r12
   140040425:	rex.R
   140040426:	add    BYTE PTR [r13+0x42],r8b
   14004042a:	rex.XB
   14004042b:	rex.R
   14004042c:	rex.WB
   14004042d:	rex.XB sub eax,0x442d5441
   140040433:	add    BYTE PTR [r8],r8b
   140040436:	add    BYTE PTR [rax],al
   140040438:	xor    DWORD PTR [rax],esi
   14004043a:	xor    dh,BYTE PTR [rsi]
   14004043c:	add    BYTE PTR [rax],al
   14004043e:	add    BYTE PTR [rax],al
   140040440:	imul   esp,DWORD PTR [rdx+0x6d],0x3230312d
   140040447:	ss pop rdi
   140040449:	push   rax
   14004044a:	xor    DWORD PTR [rax],esi
   14004044c:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d3d83
   140040452:	add    BYTE PTR [rax],al
   140040454:	add    BYTE PTR [rax],al
   140040456:	add    BYTE PTR [rax],al
   140040458:	movsxd esi,DWORD PTR [rbx+0x49]
   14004045b:	rex.X
   14004045c:	xor    QWORD PTR [r8],r14
   14004045f:	xor    dh,BYTE PTR [rsi]
   140040461:	add    BYTE PTR [rax],al
   140040463:	add    BYTE PTR [rbx+0x50],al
   140040466:	xor    DWORD PTR [rax],esi
   140040468:	xor    dh,BYTE PTR [rsi]
   14004046a:	add    BYTE PTR [rax],al
   14004046c:	add    BYTE PTR [rax],al
   14004046e:	add    BYTE PTR [rax],al
   140040470:	rex.WB
   140040471:	rex.X
   140040472:	xor    QWORD PTR [r8],r14
   140040475:	xor    dh,BYTE PTR [rsi]
   140040477:	add    BYTE PTR [rcx+0x62],ch
   14004047a:	ins    DWORD PTR es:[rdi],dx
   14004047b:	sub    eax,0x5f383139
   140040480:	push   rax
   140040481:	xor    DWORD PTR [rax],esi
   140040483:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d3dba
   140040489:	add    BYTE PTR [rax],al
   14004048b:	add    BYTE PTR [rax],al
   14004048d:	add    BYTE PTR [rax],al
   14004048f:	add    BYTE PTR [rbx+0x73],ah
   140040492:	rex.WB
   140040493:	rex.X
   140040494:	cmp    QWORD PTR [r9],r14
   140040497:	cmp    BYTE PTR [rax],al
   140040499:	add    BYTE PTR [rax],al
   14004049b:	add    BYTE PTR [rax],al
   14004049d:	add    BYTE PTR [rax],al
   14004049f:	add    BYTE PTR [rbp+0x62],ah
   1400404a2:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   1400404a6:	sub    eax,0x612d7063
   1400404ab:	jb     0x1400404df
   1400404ad:	add    BYTE PTR [rax],al
   1400404af:	add    BYTE PTR [rbx+0x50],al
   1400404b2:	cmp    DWORD PTR [rcx],esi
   1400404b4:	cmp    BYTE PTR [rax],al
   1400404b6:	add    BYTE PTR [rax],al
   1400404b8:	rex.WB
   1400404b9:	rex.X
   1400404ba:	cmp    QWORD PTR [r9],r14
   1400404bd:	cmp    BYTE PTR [rax],al
   1400404bf:	add    BYTE PTR [rbx+0x73],ah
   1400404c2:	rex.WB
   1400404c3:	rex.X
   1400404c4:	cmp    QWORD PTR [r8],r14
   1400404c7:	xor    eax,0x0
   1400404cc:	add    BYTE PTR [rax],al
   1400404ce:	add    BYTE PTR [rax],al
   1400404d0:	(bad)
   1400404d6:	sub    eax,0x742d7063
   1400404db:	jb     0x1400404dd
   1400404dd:	add    BYTE PTR [rax],al
   1400404df:	add    BYTE PTR [rbx+0x50],al
   1400404e2:	cmp    DWORD PTR [rax],esi
   1400404e4:	xor    eax,0x49000000
   1400404e9:	rex.X
   1400404ea:	cmp    QWORD PTR [r8],r14
   1400404ed:	xor    eax,0x73630000
   1400404f2:	rex.WB
   1400404f3:	rex.X
   1400404f4:	rex.X
   1400404f5:	cmp    QWORD PTR [r8],r14
   1400404f8:	xor    al,0x0
   1400404fa:	add    BYTE PTR [rax],al
   1400404fc:	cmp    DWORD PTR [rax],esi
   1400404fe:	xor    al,0x0
   140040500:	movsxd esi,DWORD PTR [rax+0x39]
   140040503:	xor    BYTE PTR [rax+rax*1],dh
   140040506:	add    BYTE PTR [rax],al
   140040508:	rex.WB
   140040509:	rex.X
   14004050a:	cmp    QWORD PTR [r8],r14
   14004050d:	xor    al,0x0
   14004050f:	add    BYTE PTR [rbx+0x73],ah
   140040512:	rex.WB
   140040513:	rex.X
   140040514:	cmp    QWORD PTR [r8],r14
   140040517:	xor    eax,DWORD PTR [rax]
   140040519:	add    BYTE PTR [rax],al
   14004051b:	add    BYTE PTR [rbx+0x70],ah
   14004051e:	cmp    DWORD PTR [rax],esi
   140040520:	xor    eax,DWORD PTR [rax]
   140040522:	add    BYTE PTR [rax],al
   140040524:	rex.WB
   140040525:	rex.X
   140040526:	cmp    QWORD PTR [r8],r14
   140040529:	xor    eax,DWORD PTR [rax]
   14004052b:	add    BYTE PTR [rax],al
   14004052d:	add    BYTE PTR [rax],al
   14004052f:	add    BYTE PTR [rbx+0x73],ah
   140040532:	rex.WB
   140040533:	rex.X
   140040534:	rex.WRB cmp BYTE PTR [r9],r15b
   140040537:	xor    DWORD PTR [rax],eax
   140040539:	add    BYTE PTR [rax],al
   14004053b:	add    BYTE PTR [rbx+0x70],ah
   14004053e:	cmp    BYTE PTR [rcx],bh
   140040540:	xor    DWORD PTR [rax],eax
   140040542:	add    BYTE PTR [rax],al
   140040544:	rex.WB
   140040545:	rex.X
   140040546:	rex.WRB cmp BYTE PTR [r9],r15b
   140040549:	xor    DWORD PTR [rax],eax
   14004054b:	add    BYTE PTR [rax],al
   14004054d:	add    BYTE PTR [rax],al
   14004054f:	add    BYTE PTR [rbx+0x73],ah
   140040552:	rex.WB
   140040553:	rex.X
   140040554:	rex.WRB cmp BYTE PTR [r8],r15b
   140040557:	xor    BYTE PTR [rax],al
   140040559:	add    BYTE PTR [rax],al
   14004055b:	add    BYTE PTR [rax],al
   14004055d:	add    BYTE PTR [rax],al
   14004055f:	add    BYTE PTR [rbp+0x42],al
   140040562:	rex.XB
   140040563:	rex.R
   140040564:	rex.WB
   140040565:	rex.XB sub eax,0x69727943
   14004056b:	ins    BYTE PTR es:[rdi],dx
   14004056c:	ins    BYTE PTR es:[rdi],dx
   14004056d:	imul   esp,DWORD PTR [rbx+0x0],0x38387063
   140040574:	xor    BYTE PTR [rax],al
   140040576:	add    BYTE PTR [rax],al
   140040578:	rex.WB
   140040579:	rex.X
   14004057a:	rex.WRB cmp BYTE PTR [r8],r15b
   14004057d:	xor    BYTE PTR [rax],al
   14004057f:	add    BYTE PTR [rax],bh
   140040581:	(bad)  
   140040582:	xor    DWORD PTR [rax],eax
   140040584:	add    BYTE PTR [rax],al
   140040586:	add    BYTE PTR [rax],al
   140040588:	(bad)
   14004058e:	sub    eax,0x7369
   140040593:	add    BYTE PTR [rax],al
   140040595:	add    BYTE PTR [rax],al
   140040597:	add    BYTE PTR [rcx+0x62],ch
   14004059a:	ins    DWORD PTR es:[rdi],dx
   14004059b:	sub    eax,0x5f313738
   1400405a0:	push   rax
   1400405a1:	xor    DWORD PTR [rax],esi
   1400405a3:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d3eda
   1400405a9:	add    BYTE PTR [rax],al
   1400405ab:	add    BYTE PTR [rax],al
   1400405ad:	add    BYTE PTR [rax],al
   1400405af:	add    BYTE PTR [rbx+0x73],ah
   1400405b2:	rex.WB
   1400405b3:	rex.X
   1400405b4:	rex.WRB cmp BYTE PTR [r15],r14b
   1400405b7:	xor    DWORD PTR [rax],eax
   1400405b9:	add    BYTE PTR [rax],al
   1400405bb:	add    BYTE PTR [rax],al
   1400405bd:	add    BYTE PTR [rax],al
   1400405bf:	add    BYTE PTR [rbp+0x62],ah
   1400405c2:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   1400405c6:	sub    eax,0x692d7063
   1400405cb:	jae    0x1400405cd
   1400405cd:	add    BYTE PTR [rax],al
   1400405cf:	add    BYTE PTR [rbx+0x50],al
   1400405d2:	cmp    BYTE PTR [rdi],dh
   1400405d4:	xor    DWORD PTR [rax],eax
   1400405d6:	add    BYTE PTR [rax],al
   1400405d8:	rex.WB
   1400405d9:	rex.X
   1400405da:	rex.WRB cmp BYTE PTR [r15],r14b
   1400405dd:	xor    DWORD PTR [rax],eax
   1400405df:	add    BYTE PTR [rcx+0x62],ch
   1400405e2:	ins    DWORD PTR es:[rdi],dx
   1400405e3:	sub    eax,0x5f303738
   1400405e8:	push   rax
   1400405e9:	xor    DWORD PTR [rax],esi
   1400405eb:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d3f22
   1400405f1:	add    BYTE PTR [rax],al
   1400405f3:	add    BYTE PTR [rax],al
   1400405f5:	add    BYTE PTR [rax],al
   1400405f7:	add    BYTE PTR [rbx+0x73],ah
   1400405fa:	rex.WB
   1400405fb:	rex.X
   1400405fc:	rex.WRB cmp BYTE PTR [r15],r14b
   1400405ff:	xor    BYTE PTR [rax],al
   140040601:	add    BYTE PTR [rax],al
   140040603:	add    BYTE PTR [rax],al
   140040605:	add    BYTE PTR [rax],al
   140040607:	add    BYTE PTR [rbp+0x62],ah
   14004060a:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14004060e:	sub    eax,0x792d7063
   140040613:	jne    0x140040615
   140040615:	add    BYTE PTR [rax],al
   140040617:	add    BYTE PTR [rbp+0x62],ah
   14004061a:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   14004061e:	sub    eax,0x722d7063
   140040623:	outs   dx,DWORD PTR ds:[rsi]
   140040624:	movsxd esp,DWORD PTR gs:[rbp+0x0]
   140040628:	rex.XB push r8
   14004062a:	cmp    BYTE PTR [rdi],dh
   14004062c:	xor    BYTE PTR [rax],al
   14004062e:	add    BYTE PTR [rax],al
   140040630:	rex.WB
   140040631:	rex.X
   140040632:	rex.WRB cmp BYTE PTR [r15],r14b
   140040635:	xor    BYTE PTR [rax],al
   140040637:	add    BYTE PTR [rcx+0x62],ch
   14004063a:	ins    DWORD PTR es:[rdi],dx
   14004063b:	sub    eax,0x5f393638
   140040640:	push   rax
   140040641:	xor    DWORD PTR [rax],esi
   140040643:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d3f7a
   140040649:	add    BYTE PTR [rax],al
   14004064b:	add    BYTE PTR [rax],al
   14004064d:	add    BYTE PTR [rax],al
   14004064f:	add    BYTE PTR [rbx+0x73],ah
   140040652:	rex.WB
   140040653:	rex.X
   140040654:	rex.WRB cmp BYTE PTR [r14],r14b
   140040657:	cmp    DWORD PTR [rax],eax
   140040659:	add    BYTE PTR [rax],al
   14004065b:	add    BYTE PTR [rbx+0x70],ah
   14004065e:	sub    eax,0x7267
   140040663:	add    BYTE PTR [rax],bh
   140040665:	cmp    DWORD PTR ss:[rax],eax
   140040668:	movsxd esi,DWORD PTR [rax+0x38]
   14004066b:	cmp    DWORD PTR ss:[rax],eax
   14004066e:	add    BYTE PTR [rax],al
   140040670:	rex.WB
   140040671:	rex.X
   140040672:	rex.WRB cmp BYTE PTR [r14],r14b
   140040675:	cmp    DWORD PTR [rax],eax
   140040677:	add    BYTE PTR [rax],bh
   140040679:	cmp    BYTE PTR ss:[rax],al
   14004067c:	add    BYTE PTR [rax],al
   14004067e:	add    BYTE PTR [rax],al
   140040680:	imul   esp,DWORD PTR [rdx+0x6d],0x3836382d
   140040687:	pop    rdi
   140040688:	push   rax
   140040689:	xor    DWORD PTR [rax],esi
   14004068b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d3fc2
   140040691:	add    BYTE PTR [rax],al
   140040693:	add    BYTE PTR [rax],al
   140040695:	add    BYTE PTR [rax],al
   140040697:	add    BYTE PTR [rbx+0x73],ah
   14004069a:	rex.WB
   14004069b:	rex.X
   14004069c:	rex.WRB cmp BYTE PTR [r14],r14b
   14004069f:	cmp    BYTE PTR [rax],al
   1400406a1:	add    BYTE PTR [rax],al
   1400406a3:	add    BYTE PTR [rbx+0x70],ah
   1400406a6:	sub    eax,0x7261
   1400406ab:	add    BYTE PTR [rbx+0x50],al
   1400406ae:	cmp    BYTE PTR [rsi],dh
   1400406b0:	cmp    BYTE PTR [rax],al
   1400406b2:	add    BYTE PTR [rax],al
   1400406b4:	rex.WB
   1400406b5:	rex.X
   1400406b6:	rex.WRB cmp BYTE PTR [r14],r14b
   1400406b9:	cmp    BYTE PTR [rax],al
   1400406bb:	add    BYTE PTR [rax],al
   1400406bd:	add    BYTE PTR [rax],al
   1400406bf:	add    BYTE PTR [rcx+0x62],ch
   1400406c2:	ins    DWORD PTR es:[rdi],dx
   1400406c3:	sub    eax,0x5f353638
   1400406c8:	push   rax
   1400406c9:	xor    DWORD PTR [rax],esi
   1400406cb:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4002
   1400406d1:	add    BYTE PTR [rax],al
   1400406d3:	add    BYTE PTR [rax],al
   1400406d5:	add    BYTE PTR [rax],al
   1400406d7:	add    BYTE PTR [rbx+0x73],ah
   1400406da:	rex.WB
   1400406db:	rex.X
   1400406dc:	rex.WRB cmp BYTE PTR [r14],r14b
   1400406df:	xor    eax,0x0
   1400406e4:	cmp    BYTE PTR [rsi],dh
   1400406e6:	xor    eax,0x38706300
   1400406eb:	ss xor eax,0x49000000
   1400406f1:	rex.X
   1400406f2:	rex.WRB cmp BYTE PTR [r14],r14b
   1400406f5:	xor    eax,0x62690000
   1400406fa:	ins    DWORD PTR es:[rdi],dx
   1400406fb:	sub    eax,0x5f343638
   140040700:	pop    rax
   140040701:	xor    DWORD PTR [rcx],esi
   140040703:	xor    BYTE PTR [rip+0x39393931],ch        # 0x1793d403a
   140040709:	add    BYTE PTR [rax],al
   14004070b:	add    BYTE PTR [rax],al
   14004070d:	add    BYTE PTR [rax],al
   14004070f:	add    BYTE PTR [rbx+0x73],ah
   140040712:	rex.WB
   140040713:	rex.X
   140040714:	rex.WRB cmp BYTE PTR [r14],r14b
   140040717:	xor    al,0x0
   140040719:	add    BYTE PTR [rax],al
   14004071b:	add    BYTE PTR [rbx+0x70],ah
   14004071e:	cmp    BYTE PTR [rsi],dh
   140040720:	xor    al,0x0
   140040722:	add    BYTE PTR [rax],al
   140040724:	rex.WB
   140040725:	rex.X
   140040726:	rex.WRB cmp BYTE PTR [r14],r14b
   140040729:	xor    al,0x0
   14004072b:	add    BYTE PTR [rax],al
   14004072d:	add    BYTE PTR [rax],al
   14004072f:	add    BYTE PTR [rcx+0x62],ch
   140040732:	ins    DWORD PTR es:[rdi],dx
   140040733:	sub    eax,0x5f333638
   140040738:	push   rax
   140040739:	xor    DWORD PTR [rax],esi
   14004073b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4072
   140040741:	add    BYTE PTR [rax],al
   140040743:	add    BYTE PTR [rax],al
   140040745:	add    BYTE PTR [rax],al
   140040747:	add    BYTE PTR [rbx+0x73],ah
   14004074a:	rex.WB
   14004074b:	rex.X
   14004074c:	rex.WRB cmp BYTE PTR [r14],r14b
   14004074f:	xor    eax,DWORD PTR [rax]
   140040751:	add    BYTE PTR [rax],al
   140040753:	add    BYTE PTR [rax],bh
   140040755:	xor    eax,DWORD PTR ss:[rax]
   140040758:	movsxd esi,DWORD PTR [rax+0x38]
   14004075b:	xor    eax,DWORD PTR ss:[rax]
   14004075e:	add    BYTE PTR [rax],al
   140040760:	rex.WB
   140040761:	rex.X
   140040762:	rex.WRB cmp BYTE PTR [r14],r14b
   140040765:	xor    eax,DWORD PTR [rax]
   140040767:	add    BYTE PTR [rcx+0x62],ch
   14004076a:	ins    DWORD PTR es:[rdi],dx
   14004076b:	sub    eax,0x5f313638
   140040770:	push   rax
   140040771:	xor    DWORD PTR [rax],esi
   140040773:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d40aa
   140040779:	add    BYTE PTR [rax],al
   14004077b:	add    BYTE PTR [rax],al
   14004077d:	add    BYTE PTR [rax],al
   14004077f:	add    BYTE PTR [rbx+0x73],ah
   140040782:	rex.WB
   140040783:	rex.X
   140040784:	rex.WRB cmp BYTE PTR [r14],r14b
   140040787:	xor    DWORD PTR [rax],eax
   140040789:	add    BYTE PTR [rax],al
   14004078b:	add    BYTE PTR [rbx+0x70],ah
   14004078e:	sub    eax,0x7369
   140040793:	add    BYTE PTR [rax],bh
   140040795:	xor    DWORD PTR ss:[rax],eax
   140040798:	movsxd esi,DWORD PTR [rax+0x38]
   14004079b:	xor    DWORD PTR ss:[rax],eax
   14004079e:	add    BYTE PTR [rax],al
   1400407a0:	rex.WB
   1400407a1:	rex.X
   1400407a2:	rex.WRB cmp BYTE PTR [r14],r14b
   1400407a5:	xor    DWORD PTR [rax],eax
   1400407a7:	add    BYTE PTR [rcx+0x62],ch
   1400407aa:	ins    DWORD PTR es:[rdi],dx
   1400407ab:	sub    eax,0x5f303638
   1400407b0:	push   rax
   1400407b1:	xor    DWORD PTR [rax],esi
   1400407b3:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d40ea
   1400407b9:	add    BYTE PTR [rax],al
   1400407bb:	add    BYTE PTR [rax],al
   1400407bd:	add    BYTE PTR [rax],al
   1400407bf:	add    BYTE PTR [rbx+0x73],ah
   1400407c2:	rex.WB
   1400407c3:	rex.X
   1400407c4:	rex.WRB cmp BYTE PTR [r14],r14b
   1400407c7:	xor    BYTE PTR [rax],al
   1400407c9:	add    BYTE PTR [rax],al
   1400407cb:	add    BYTE PTR [rax],bh
   1400407cd:	xor    BYTE PTR ss:[rax],al
   1400407d0:	movsxd esi,DWORD PTR [rax+0x38]
   1400407d3:	xor    BYTE PTR ss:[rax],al
   1400407d6:	add    BYTE PTR [rax],al
   1400407d8:	rex.WB
   1400407d9:	rex.X
   1400407da:	rex.WRB cmp BYTE PTR [r14],r14b
   1400407dd:	xor    BYTE PTR [rax],al
   1400407df:	add    BYTE PTR [rcx+0x62],ch
   1400407e2:	ins    DWORD PTR es:[rdi],dx
   1400407e3:	sub    eax,0x5f373538
   1400407e8:	push   rax
   1400407e9:	xor    DWORD PTR [rax],esi
   1400407eb:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4122
   1400407f1:	add    BYTE PTR [rax],al
   1400407f3:	add    BYTE PTR [rax],al
   1400407f5:	add    BYTE PTR [rax],al
   1400407f7:	add    BYTE PTR [rbx+0x73],ah
   1400407fa:	rex.WB
   1400407fb:	rex.X
   1400407fc:	rex.WRB cmp BYTE PTR [rip+0x37],r14b        # 0x14004083a
   140040803:	add    BYTE PTR [rax],bh
   140040805:	xor    eax,0x70630037
   14004080a:	cmp    BYTE PTR [rip+0x37],dh        # 0x140040847
   140040810:	rex.WB
   140040811:	rex.X
   140040812:	rex.WRB cmp BYTE PTR [rip+0x63000037],r14b        # 0x1a3040850
   140040819:	jae    0x14004086b
   14004081b:	rex.XB jo 0x140040856
   14004081e:	xor    eax,0x35
   140040823:	add    BYTE PTR [rax],al
   140040825:	add    BYTE PTR [rax],al
   140040827:	add    BYTE PTR [rcx+0x62],ch
   14004082a:	ins    DWORD PTR es:[rdi],dx
   14004082b:	sub    eax,0x5f353538
   140040830:	push   rax
   140040831:	xor    DWORD PTR [rax],esi
   140040833:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d416a
   140040839:	add    BYTE PTR [rax],al
   14004083b:	add    BYTE PTR [rax],al
   14004083d:	add    BYTE PTR [rax],al
   14004083f:	add    BYTE PTR [rbx+0x73],ah
   140040842:	rex.WB
   140040843:	rex.X
   140040844:	rex.WRB cmp BYTE PTR [rip+0x35],r14b        # 0x140040880
   14004084b:	add    BYTE PTR [rax],bh
   14004084d:	xor    eax,0x70630035
   140040852:	cmp    BYTE PTR [rip+0x35],dh        # 0x14004088d
   140040858:	rex.WB
   140040859:	rex.X
   14004085a:	rex.WRB cmp BYTE PTR [rip+0x69000035],r14b        # 0x1a9040896
   140040861:	(bad)  
   140040862:	ins    DWORD PTR es:[rdi],dx
   140040863:	sub    eax,0x5f323538
   140040868:	push   rax
   140040869:	xor    DWORD PTR [rax],esi
   14004086b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d41a2
   140040871:	add    BYTE PTR [rax],al
   140040873:	add    BYTE PTR [rax],al
   140040875:	add    BYTE PTR [rax],al
   140040877:	add    BYTE PTR [rbx+0x73],ah
   14004087a:	push   rax
   14004087b:	rex.XB jo 0x1400408b6
   14004087e:	xor    eax,0x32
   140040883:	add    BYTE PTR [rax],bh
   140040885:	xor    eax,0x70630032
   14004088a:	cmp    BYTE PTR [rip+0x32],dh        # 0x1400408c2
   140040890:	rex.WB
   140040891:	rex.X
   140040892:	rex.WRB cmp BYTE PTR [rip+0x63000032],r14b        # 0x1a30408cb
   140040899:	jae    0x1400408eb
   14004089b:	rex.XB cmp BYTE PTR [rip+0x62690031],sil        # 0x1a26d08d3
   1400408a2:	ins    DWORD PTR es:[rdi],dx
   1400408a3:	sub    eax,0x5f313538
   1400408a8:	push   rax
   1400408a9:	xor    DWORD PTR [rax],esi
   1400408ab:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d41e2
   1400408b1:	add    BYTE PTR [rax],al
   1400408b3:	add    BYTE PTR [rax],al
   1400408b5:	add    BYTE PTR [rax],al
   1400408b7:	add    BYTE PTR [rbx+0x73],ah
   1400408ba:	rex.WB
   1400408bb:	rex.X
   1400408bc:	rex.WRB cmp BYTE PTR [rip+0x31],r14b        # 0x1400408f4
   1400408c3:	add    BYTE PTR [rax],bh
   1400408c5:	xor    eax,0x70630031
   1400408ca:	cmp    BYTE PTR [rip+0x31],dh        # 0x140040901
   1400408d0:	rex.WB
   1400408d1:	rex.X
   1400408d2:	rex.WRB cmp BYTE PTR [rip+0x35000031],r14b        # 0x17504090a
   1400408d9:	xor    BYTE PTR [rax],dh
   1400408db:	add    BYTE PTR [rax],al
   1400408dd:	add    BYTE PTR [rax],al
   1400408df:	add    BYTE PTR [rcx+0x62],ch
   1400408e2:	ins    DWORD PTR es:[rdi],dx
   1400408e3:	sub    eax,0x5f303035
   1400408e8:	push   rax
   1400408e9:	xor    DWORD PTR [rax],esi
   1400408eb:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4222
   1400408f1:	add    BYTE PTR [rax],al
   1400408f3:	add    BYTE PTR [rax],al
   1400408f5:	add    BYTE PTR [rax],al
   1400408f7:	add    BYTE PTR [rbx+0x73],ah
   1400408fa:	rex.WB
   1400408fb:	rex.X
   1400408fc:	rex.WRB xor rax,0x3030
   140040902:	add    BYTE PTR [rax],al
   140040904:	add    BYTE PTR [rax],al
   140040906:	add    BYTE PTR [rax],al
   140040908:	(bad)
   14004090e:	sub    eax,0x632d7063
   140040913:	push   0x0
   140040918:	(bad)
   14004091e:	sub    eax,0x622d7063
   140040923:	add    BYTE PTR gs:[rax],al
   140040926:	add    BYTE PTR [rax],al
   140040928:	rex.XB push r8
   14004092a:	xor    eax,0x3030
   14004092f:	add    BYTE PTR [rcx+0x42],cl
   140040932:	rex.WRB xor rax,0x3030
   140040938:	imul   esp,DWORD PTR [rdx+0x6d],0x3733342d
   14004093f:	pop    rdi
   140040940:	push   rax
   140040941:	xor    DWORD PTR [rax],esi
   140040943:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d427a
   140040949:	add    BYTE PTR [rax],al
   14004094b:	add    BYTE PTR [rax],al
   14004094d:	add    BYTE PTR [rax],al
   14004094f:	add    BYTE PTR [rbx+0x73],ah
   140040952:	push   rax
   140040953:	rex.XB cmp BYTE PTR [r11+0x6f],al
   140040957:	fs gs push rax
   14004095a:	(bad)  
   14004095b:	addr32 gs xor al,0x33
   14004095f:	(bad)  
   140040960:	add    BYTE PTR [rax],al
   140040962:	add    BYTE PTR [rax],al
   140040964:	xor    al,0x33
   140040966:	(bad)  
   140040967:	add    BYTE PTR [rbx+0x70],ah
   14004096a:	xor    al,0x33
   14004096c:	(bad)  
   14004096d:	add    BYTE PTR [rax],al
   14004096f:	add    BYTE PTR [rcx+0x42],cl
   140040972:	rex.WRB xor al,0x33
   140040975:	(bad)  
   140040976:	add    BYTE PTR [rax],al
   140040978:	xor    al,0x32
   14004097a:	xor    al,0x0
   14004097c:	add    BYTE PTR [rax],al
   14004097e:	add    BYTE PTR [rax],al
   140040980:	imul   esp,DWORD PTR [rdx+0x6d],0x3432342d
   140040987:	pop    rdi
   140040988:	push   rax
   140040989:	xor    DWORD PTR [rax],esi
   14004098b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d42c2
   140040991:	add    BYTE PTR [rax],al
   140040993:	add    BYTE PTR [rax],al
   140040995:	add    BYTE PTR [rax],al
   140040997:	add    BYTE PTR [rbx+0x73],ah
   14004099a:	rex.WB
   14004099b:	rex.X
   14004099c:	rex.WRB xor al,0x32
   14004099f:	xor    al,0x0
   1400409a1:	add    BYTE PTR [rax],al
   1400409a3:	add    BYTE PTR [rax],al
   1400409a5:	add    BYTE PTR [rax],al
   1400409a7:	add    BYTE PTR [rbp+0x62],ah
   1400409aa:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   1400409ae:	sub    eax,0x682d7063
   1400409b3:	add    BYTE PTR gs:[rax],al
   1400409b6:	add    BYTE PTR [rax],al
   1400409b8:	movsxd esi,DWORD PTR [rax+0x34]
   1400409bb:	xor    dh,BYTE PTR [rax+rax*1]
   1400409be:	add    BYTE PTR [rax],al
   1400409c0:	rex.WB
   1400409c1:	rex.X
   1400409c2:	rex.WRB xor al,0x32
   1400409c5:	xor    al,0x0
   1400409c7:	add    BYTE PTR [rbx+0x73],ah
   1400409ca:	rex.WB
   1400409cb:	rex.X
   1400409cc:	rex.WRB xor al,0x32
   1400409cf:	xor    eax,DWORD PTR [rax]
   1400409d1:	add    BYTE PTR [rax],al
   1400409d3:	add    BYTE PTR [rax],al
   1400409d5:	add    BYTE PTR [rax],al
   1400409d7:	add    BYTE PTR [rbp+0x62],ah
   1400409da:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   1400409de:	sub    eax,0x672d7063
   1400409e3:	jb     0x1400409e5
   1400409e5:	add    BYTE PTR [rax],al
   1400409e7:	add    BYTE PTR [rbx+0x70],ah
   1400409ea:	xor    al,0x32
   1400409ec:	xor    eax,DWORD PTR [rax]
   1400409ee:	add    BYTE PTR [rax],al
   1400409f0:	rex.WB
   1400409f1:	rex.X
   1400409f2:	rex.WRB xor al,0x32
   1400409f5:	xor    eax,DWORD PTR [rax]
   1400409f7:	add    BYTE PTR [rdx+rsi*1],dh
   1400409fa:	xor    BYTE PTR [rax],al
   1400409fc:	add    BYTE PTR [rax],al
   1400409fe:	add    BYTE PTR [rax],al
   140040a00:	imul   esp,DWORD PTR [rdx+0x6d],0x3032342d
   140040a07:	pop    rdi
   140040a08:	pop    rax
   140040a09:	xor    DWORD PTR [rdx],esi
   140040a0b:	xor    BYTE PTR [rip+0x39393931],ch        # 0x1793d4342
   140040a11:	add    BYTE PTR [rax],al
   140040a13:	add    BYTE PTR [rax],al
   140040a15:	add    BYTE PTR [rax],al
   140040a17:	add    BYTE PTR [rbx+0x73],ah
   140040a1a:	rex.WB
   140040a1b:	rex.X
   140040a1c:	rex.WRB xor al,0x32
   140040a1f:	xor    BYTE PTR [rax],al
   140040a21:	add    BYTE PTR [rax],al
   140040a23:	add    BYTE PTR [rax],al
   140040a25:	add    BYTE PTR [rax],al
   140040a27:	add    BYTE PTR [rbp+0x62],ah
   140040a2a:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   140040a2e:	sub    eax,0x612d7063
   140040a33:	jb     0x140040a66
   140040a35:	add    BYTE PTR [rax],al
   140040a37:	add    BYTE PTR [rbx+0x70],ah
   140040a3a:	xor    al,0x32
   140040a3c:	xor    BYTE PTR [rax],al
   140040a3e:	add    BYTE PTR [rax],al
   140040a40:	rex.WB
   140040a41:	rex.X
   140040a42:	rex.WRB xor al,0x32
   140040a45:	xor    BYTE PTR [rax],al
   140040a47:	add    BYTE PTR [rdx],dh
   140040a49:	cmp    DWORD PTR [rdi],esi
   140040a4b:	add    BYTE PTR [rax],al
   140040a4d:	add    BYTE PTR [rax],al
   140040a4f:	add    BYTE PTR [rbx+0x70],ah
   140040a52:	imul   esp,DWORD PTR [rdx+0x6d],0x373932
   140040a59:	add    BYTE PTR [rax],al
   140040a5b:	add    BYTE PTR [rax],al
   140040a5d:	add    BYTE PTR [rax],al
   140040a5f:	add    BYTE PTR [rcx+0x62],ch
   140040a62:	ins    DWORD PTR es:[rdi],dx
   140040a63:	sub    eax,0x5f373932
   140040a68:	push   rax
   140040a69:	xor    DWORD PTR [rax],esi
   140040a6b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d43a2
   140040a71:	add    BYTE PTR [rax],al
   140040a73:	add    BYTE PTR [rax],al
   140040a75:	add    BYTE PTR [rax],al
   140040a77:	add    BYTE PTR [rbx+0x73],ah
   140040a7a:	rex.WB
   140040a7b:	rex.X
   140040a7c:	rex.WRB xor r15b,BYTE PTR [r9]
   140040a7f:	(bad)  
	...
   140040a88:	(bad)
   140040a8e:	sub    eax,0x662d7063
   140040a93:	jb     0x140040a95
   140040a95:	add    BYTE PTR [rax],al
   140040a97:	add    BYTE PTR [rbx+0x70],ah
   140040a9a:	xor    bh,BYTE PTR [rcx]
   140040a9c:	(bad)  
   140040a9d:	add    BYTE PTR [rax],al
   140040a9f:	add    BYTE PTR [rcx+0x42],cl
   140040aa2:	rex.WRB xor r15b,BYTE PTR [r9]
   140040aa5:	(bad)  
   140040aa6:	add    BYTE PTR [rax],al
   140040aa8:	imul   esp,DWORD PTR [rdx+0x6d],0x3039322d
   140040aaf:	pop    rdi
   140040ab0:	push   rax
   140040ab1:	xor    DWORD PTR [rax],esi
   140040ab3:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d43ea
   140040ab9:	add    BYTE PTR [rax],al
   140040abb:	add    BYTE PTR [rax],al
   140040abd:	add    BYTE PTR [rax],al
   140040abf:	add    BYTE PTR [rbx+0x73],ah
   140040ac2:	rex.WB
   140040ac3:	rex.X
   140040ac4:	rex.WRB xor r15b,BYTE PTR [r9]
   140040ac7:	xor    BYTE PTR [rax],al
   140040ac9:	add    BYTE PTR [rax],al
   140040acb:	add    BYTE PTR [rax],al
   140040acd:	add    BYTE PTR [rax],al
   140040acf:	add    BYTE PTR [rbp+0x42],al
   140040ad2:	rex.XB
   140040ad3:	rex.R
   140040ad4:	rex.WB
   140040ad5:	rex.XB sub eax,0x6b2d504a
   140040adb:	(bad)  
   140040adc:	outs   dx,BYTE PTR ds:[rsi]
   140040add:	(bad)  
   140040ade:	add    BYTE PTR [rax],al
   140040ae0:	movsxd esi,DWORD PTR [rax+0x32]
   140040ae3:	cmp    DWORD PTR [rax],esi
   140040ae5:	add    BYTE PTR [rax],al
   140040ae7:	add    BYTE PTR [rcx+0x42],cl
   140040aea:	rex.WRB xor r15b,BYTE PTR [r9]
   140040aed:	xor    BYTE PTR [rax],al
   140040aef:	add    BYTE PTR [rbx+0x73],ah
   140040af2:	rex.WB
   140040af3:	rex.X
   140040af4:	rex.WRB xor r15b,BYTE PTR [r8]
   140040af7:	xor    eax,0x0
   140040afc:	add    BYTE PTR [rax],al
   140040afe:	add    BYTE PTR [rax],al
   140040b00:	(bad)
   140040b06:	sub    eax,0x672d7063
   140040b0b:	(bad)  
   140040b0c:	add    BYTE PTR [rax],al
   140040b0e:	add    BYTE PTR [rax],al
   140040b10:	rex.XB push r8
   140040b12:	xor    bh,BYTE PTR [rax]
   140040b14:	xor    eax,0x49000000
   140040b19:	rex.X
   140040b1a:	rex.WRB xor r15b,BYTE PTR [r8]
   140040b1d:	xor    eax,0x38320000
   140040b22:	xor    al,0x0
   140040b24:	add    BYTE PTR [rax],al
   140040b26:	add    BYTE PTR [rax],al
   140040b28:	movsxd esi,DWORD PTR [rax+0x69]
   140040b2b:	(bad)  
   140040b2c:	ins    DWORD PTR es:[rdi],dx
   140040b2d:	xor    bh,BYTE PTR [rax]
   140040b2f:	xor    al,0x0
   140040b31:	add    BYTE PTR [rax],al
   140040b33:	add    BYTE PTR [rax],al
   140040b35:	add    BYTE PTR [rax],al
   140040b37:	add    BYTE PTR [rcx+0x62],ch
   140040b3a:	ins    DWORD PTR es:[rdi],dx
   140040b3b:	sub    eax,0x5f343832
   140040b40:	push   rax
   140040b41:	xor    DWORD PTR [rax],esi
   140040b43:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d447a
   140040b49:	add    BYTE PTR [rax],al
   140040b4b:	add    BYTE PTR [rax],al
   140040b4d:	add    BYTE PTR [rax],al
   140040b4f:	add    BYTE PTR [rbx+0x73],ah
   140040b52:	rex.WB
   140040b53:	rex.X
   140040b54:	rex.WRB xor r15b,BYTE PTR [r8]
   140040b57:	xor    al,0x0
   140040b59:	add    BYTE PTR [rax],al
   140040b5b:	add    BYTE PTR [rax],al
   140040b5d:	add    BYTE PTR [rax],al
   140040b5f:	add    BYTE PTR [rbp+0x62],ah
   140040b62:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   140040b66:	sub    eax,0x652d7063
   140040b6b:	jae    0x140040b6d
   140040b6d:	add    BYTE PTR [rax],al
   140040b6f:	add    BYTE PTR [rbx+0x50],al
   140040b72:	xor    bh,BYTE PTR [rax]
   140040b74:	xor    al,0x0
   140040b76:	add    BYTE PTR [rax],al
   140040b78:	rex.WB
   140040b79:	rex.X
   140040b7a:	rex.WRB xor r15b,BYTE PTR [r8]
   140040b7d:	xor    al,0x0
   140040b7f:	add    BYTE PTR [rbx+0x73],ah
   140040b82:	rex.WB
   140040b83:	rex.X
   140040b84:	rex.WRB xor r15b,BYTE PTR [r8]
   140040b87:	xor    DWORD PTR [rax],eax
   140040b89:	add    BYTE PTR [rax],al
   140040b8b:	add    BYTE PTR [rbx+0x70],ah
   140040b8e:	xor    bh,BYTE PTR [rax]
   140040b90:	xor    DWORD PTR [rax],eax
   140040b92:	add    BYTE PTR [rax],al
   140040b94:	add    BYTE PTR [rax],al
   140040b96:	add    BYTE PTR [rax],al
   140040b98:	rex.RB
   140040b99:	rex.X
   140040b9a:	rex.XB
   140040b9b:	rex.R
   140040b9c:	rex.WB
   140040b9d:	rex.XB sub eax,0x452d504a
   140040ba3:	add    BYTE PTR [rcx+0x42],cl
   140040ba6:	rex.WRB xor r15b,BYTE PTR [r8]
   140040ba9:	xor    DWORD PTR [rax],eax
   140040bab:	add    BYTE PTR [rdx],dh
   140040bad:	cmp    BYTE PTR [rax],dh
   140040baf:	add    BYTE PTR [rcx+0x62],ch
   140040bb2:	ins    DWORD PTR es:[rdi],dx
   140040bb3:	sub    eax,0x5f303832
   140040bb8:	push   rax
   140040bb9:	xor    DWORD PTR [rax],esi
   140040bbb:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d44f2
   140040bc1:	add    BYTE PTR [rax],al
   140040bc3:	add    BYTE PTR [rax],al
   140040bc5:	add    BYTE PTR [rax],al
   140040bc7:	add    BYTE PTR [rbx+0x73],ah
   140040bca:	rex.WB
   140040bcb:	rex.X
   140040bcc:	rex.WRB xor r15b,BYTE PTR [r8]
   140040bcf:	xor    BYTE PTR [rax],al
   140040bd1:	add    BYTE PTR [rax],al
   140040bd3:	add    BYTE PTR [rax],al
   140040bd5:	add    BYTE PTR [rax],al
   140040bd7:	add    BYTE PTR [rbp+0x62],ah
   140040bda:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   140040bde:	sub    eax,0x692d7063
   140040be3:	je     0x140040be5
   140040be5:	add    BYTE PTR [rax],al
   140040be7:	add    BYTE PTR [rbx+0x50],al
   140040bea:	xor    bh,BYTE PTR [rax]
   140040bec:	xor    BYTE PTR [rax],al
   140040bee:	add    BYTE PTR [rax],al
   140040bf0:	rex.WB
   140040bf1:	rex.X
   140040bf2:	rex.WRB xor r15b,BYTE PTR [r8]
   140040bf5:	xor    BYTE PTR [rax],al
   140040bf7:	add    BYTE PTR [rdx],dh
   140040bf9:	(bad)  
   140040bfa:	cmp    BYTE PTR [rax],al
   140040bfc:	add    BYTE PTR [rax],al
   140040bfe:	add    BYTE PTR [rax],al
   140040c00:	(bad)
   140040c06:	sub    eax,0x7673
   140040c0b:	add    BYTE PTR [rax],al
   140040c0d:	add    BYTE PTR [rax],al
   140040c0f:	add    BYTE PTR [rcx+0x62],ch
   140040c12:	ins    DWORD PTR es:[rdi],dx
   140040c13:	sub    eax,0x5f383732
   140040c18:	push   rax
   140040c19:	xor    DWORD PTR [rax],esi
   140040c1b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4552
   140040c21:	add    BYTE PTR [rax],al
   140040c23:	add    BYTE PTR [rax],al
   140040c25:	add    BYTE PTR [rax],al
   140040c27:	add    BYTE PTR [rbx+0x73],ah
   140040c2a:	rex.WB
   140040c2b:	rex.X
   140040c2c:	rex.WRB xor r14b,BYTE PTR [r15]
   140040c2f:	cmp    BYTE PTR [rax],al
   140040c31:	add    BYTE PTR [rax],al
   140040c33:	add    BYTE PTR [rax],al
   140040c35:	add    BYTE PTR [rax],al
   140040c37:	add    BYTE PTR [rbp+0x62],ah
   140040c3a:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   140040c3e:	sub    eax,0x732d7063
   140040c43:	add    BYTE PTR gs:[rax],al
   140040c46:	add    BYTE PTR [rax],al
   140040c48:	(bad)
   140040c4e:	sub    eax,0x662d7063
   140040c53:	imul   eax,DWORD PTR [rax],0x43000000
   140040c59:	push   rax
   140040c5a:	xor    dh,BYTE PTR [rdi]
   140040c5c:	cmp    BYTE PTR [rax],al
   140040c5e:	add    BYTE PTR [rax],al
   140040c60:	rex.WB
   140040c61:	rex.X
   140040c62:	rex.WRB xor r14b,BYTE PTR [r15]
   140040c65:	cmp    BYTE PTR [rax],al
   140040c67:	add    BYTE PTR [rdx],dh
   140040c69:	(bad)  
   140040c6a:	(bad)  
   140040c6b:	add    BYTE PTR [rax],al
   140040c6d:	add    BYTE PTR [rax],al
   140040c6f:	add    BYTE PTR [rbp+0x62],ah
   140040c72:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   140040c76:	sub    eax,0x6b64
   140040c7b:	add    BYTE PTR [rbx+0x70],ah
   140040c7e:	xor    dh,BYTE PTR [rdi]
   140040c80:	(bad)  
   140040c81:	add    BYTE PTR [rax],al
   140040c83:	add    BYTE PTR [rax],al
   140040c85:	add    BYTE PTR [rax],al
   140040c87:	add    BYTE PTR [rcx+0x62],ch
   140040c8a:	ins    DWORD PTR es:[rdi],dx
   140040c8b:	sub    eax,0x5f373732
   140040c90:	push   rax
   140040c91:	xor    DWORD PTR [rax],esi
   140040c93:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d45ca
   140040c99:	add    BYTE PTR [rax],al
   140040c9b:	add    BYTE PTR [rax],al
   140040c9d:	add    BYTE PTR [rax],al
   140040c9f:	add    BYTE PTR [rbx+0x73],ah
   140040ca2:	rex.WB
   140040ca3:	rex.X
   140040ca4:	rex.WRB xor r14b,BYTE PTR [r15]
   140040ca7:	(bad)  
	...
   140040cb0:	rex.RB
   140040cb1:	rex.X
   140040cb2:	rex.XB
   140040cb3:	rex.R
   140040cb4:	rex.WB
   140040cb5:	rex.XB sub eax,0x4e2d5043
   140040cbb:	rex.WRXB add BYTE PTR [r8],r8b
   140040cbe:	add    BYTE PTR [rax],al
   140040cc0:	rex.RB
   140040cc1:	rex.X
   140040cc2:	rex.XB
   140040cc3:	rex.R
   140040cc4:	rex.WB
   140040cc5:	rex.XB sub eax,0x442d5043
   140040ccb:	rex.WXB add BYTE PTR [r8],al
   140040cce:	add    BYTE PTR [rax],al
   140040cd0:	rex.WB
   140040cd1:	rex.X
   140040cd2:	rex.WRB xor r14b,BYTE PTR [r15]
   140040cd5:	(bad)  
   140040cd6:	add    BYTE PTR [rax],al
   140040cd8:	movsxd esi,DWORD PTR [rbx+0x49]
   140040cdb:	rex.X
   140040cdc:	rex.WRB xor r14b,BYTE PTR [r15]
   140040cdf:	xor    eax,0x0
   140040ce4:	movsxd esi,DWORD PTR [rax+0x32]
   140040ce7:	(bad)  
   140040ce8:	xor    eax,0x0
   140040ced:	add    BYTE PTR [rax],al
   140040cef:	add    BYTE PTR [rbp+0x42],al
   140040cf2:	rex.XB
   140040cf3:	rex.R
   140040cf4:	rex.WB
   140040cf5:	rex.XB sub eax,0x5242
   140040cfb:	add    BYTE PTR [rcx+0x42],cl
   140040cfe:	rex.WRB xor r14b,BYTE PTR [r15]
   140040d01:	xor    eax,0x0
   140040d06:	add    BYTE PTR [rax],al
   140040d08:	movsxd esi,DWORD PTR [rbx+0x49]
   140040d0b:	rex.X
   140040d0c:	rex.WRB xor r14b,BYTE PTR [r15]
   140040d0f:	xor    al,0x0
   140040d11:	add    BYTE PTR [rax],al
   140040d13:	add    BYTE PTR [rbx+0x50],al
   140040d16:	xor    dh,BYTE PTR [rdi]
   140040d18:	xor    al,0x0
   140040d1a:	add    BYTE PTR [rax],al
   140040d1c:	add    BYTE PTR [rax],al
   140040d1e:	add    BYTE PTR [rax],al
   140040d20:	rex.RB
   140040d21:	rex.X
   140040d22:	rex.XB
   140040d23:	rex.R
   140040d24:	rex.WB
   140040d25:	rex.XB sub eax,0x4542
   140040d2b:	add    BYTE PTR [rcx+0x42],cl
   140040d2e:	rex.WRB xor r14b,BYTE PTR [r15]
   140040d31:	xor    al,0x0
   140040d33:	add    BYTE PTR [rdx],dh
   140040d35:	(bad)  
   140040d36:	xor    eax,DWORD PTR [rax]
   140040d38:	(bad)
   140040d3e:	sub    eax,0x6564
   140040d43:	add    BYTE PTR [rax],al
   140040d45:	add    BYTE PTR [rax],al
   140040d47:	add    BYTE PTR [rcx+0x62],ch
   140040d4a:	ins    DWORD PTR es:[rdi],dx
   140040d4b:	sub    eax,0x5f333732
   140040d50:	push   rax
   140040d51:	xor    DWORD PTR [rax],esi
   140040d53:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d468a
   140040d59:	add    BYTE PTR [rax],al
   140040d5b:	add    BYTE PTR [rax],al
   140040d5d:	add    BYTE PTR [rax],al
   140040d5f:	add    BYTE PTR [rbx+0x73],ah
   140040d62:	rex.WB
   140040d63:	rex.X
   140040d64:	rex.WRB xor r14b,BYTE PTR [r15]
   140040d67:	xor    eax,DWORD PTR [rax]
   140040d69:	add    BYTE PTR [rax],al
   140040d6b:	add    BYTE PTR [rbx+0x50],al
   140040d6e:	xor    dh,BYTE PTR [rdi]
   140040d70:	xor    eax,DWORD PTR [rax]
   140040d72:	add    BYTE PTR [rax],al
   140040d74:	rex.WB
   140040d75:	rex.X
   140040d76:	rex.WRB xor r14b,BYTE PTR [r15]
   140040d79:	xor    eax,DWORD PTR [rax]
   140040d7b:	add    BYTE PTR [rax],al
   140040d7d:	add    BYTE PTR [rax],al
   140040d7f:	add    BYTE PTR [rbx+0x73],ah
   140040d82:	rex.WB
   140040d83:	rex.X
   140040d84:	rex.WRB xor BYTE PTR [r11],r14b
   140040d87:	cmp    BYTE PTR [rax],al
   140040d89:	add    BYTE PTR [rax],al
   140040d8b:	add    BYTE PTR [rbx+0x70],ah
   140040d8e:	xor    BYTE PTR [rbx],dh
   140040d90:	cmp    BYTE PTR [rax],al
   140040d92:	add    BYTE PTR [rax],al
   140040d94:	add    BYTE PTR [rax],al
   140040d96:	add    BYTE PTR [rax],al
   140040d98:	rex.RB
   140040d99:	rex.X
   140040d9a:	rex.XB
   140040d9b:	rex.R
   140040d9c:	rex.WB
   140040d9d:	rex.XB sub eax,0x544e49
   140040da3:	add    BYTE PTR [rcx+0x42],cl
   140040da6:	rex.WRB xor BYTE PTR [r11],r14b
   140040da9:	cmp    BYTE PTR [rax],al
   140040dab:	add    BYTE PTR [rbx+0x70],ah
   140040dae:	xor    esi,DWORD PTR [rdi]
	...
   140040db8:	movsxd esi,DWORD PTR [rax+0x69]
   140040dbb:	(bad)  
   140040dbc:	ins    DWORD PTR es:[rdi],dx
   140040dbd:	xor    esi,DWORD PTR [rdi]
   140040dbf:	add    BYTE PTR [rax],dh
   140040dc1:	xor    esi,DWORD PTR [rdi]
   140040dc3:	add    BYTE PTR [rcx+0x62],ch
   140040dc6:	ins    DWORD PTR es:[rdi],dx
   140040dc7:	sub    eax,0x3733
   140040dcc:	add    BYTE PTR [rax],al
   140040dce:	add    BYTE PTR [rax],al
   140040dd0:	imul   esp,DWORD PTR [rdx+0x6d],0x5f37332d
   140040dd7:	push   rax
   140040dd8:	xor    DWORD PTR [rax],esi
   140040dda:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4711
	...
   140040de8:	movsxd esi,DWORD PTR [rbx+0x49]
   140040deb:	rex.X
   140040dec:	rex.WRB xor BYTE PTR [r11],r14b
   140040def:	(bad)  
	...
   140040df8:	(bad)
   140040dfe:	sub    eax,0x6e2d7063
   140040e03:	ins    BYTE PTR es:[rdi],dx
   140040e04:	add    BYTE PTR [rax],al
   140040e06:	add    BYTE PTR [rax],al
   140040e08:	(bad)
   140040e0e:	sub    eax,0x772d7063
   140040e13:	je     0x140040e15
   140040e15:	add    BYTE PTR [rax],al
   140040e17:	add    BYTE PTR [rbp+0x62],ah
   140040e1a:	movsxd esp,DWORD PTR [rcx+rbp*2+0x63]
   140040e1e:	sub    eax,0x632d7063
   140040e23:	(bad)  
   140040e24:	add    BYTE PTR [rax],al
   140040e26:	add    BYTE PTR [rax],al
   140040e28:	(bad)
   140040e2e:	sub    eax,0x752d7063
   140040e33:	jae    0x140040e35
   140040e35:	add    BYTE PTR [rax],al
   140040e37:	add    BYTE PTR [rbx+0x70],ah
   140040e3a:	xor    BYTE PTR [rbx],dh
   140040e3c:	(bad)  
   140040e3d:	add    BYTE PTR [rax],al
   140040e3f:	add    BYTE PTR [rcx+0x42],cl
   140040e42:	rex.WRB xor BYTE PTR [r11],r14b
   140040e45:	(bad)  
   140040e46:	add    BYTE PTR [rax],al
   140040e48:	js     0x140040e77
   140040e4a:	ins    DWORD PTR es:[rdi],dx
   140040e4b:	(bad)  
   140040e4c:	movsxd esi,DWORD PTR [rdx+0x6f]
   140040e4f:	ins    DWORD PTR es:[rdi],dx
   140040e50:	(bad)  
   140040e51:	outs   dx,BYTE PTR ds:[rsi]
   140040e52:	add    BYTE PTR [rax],al
   140040e54:	add    BYTE PTR [rax],al
   140040e56:	add    BYTE PTR [rax],al
   140040e58:	ins    DWORD PTR es:[rdi],dx
   140040e59:	(bad)  
   140040e5a:	movsxd esi,DWORD PTR [rdx+0x6f]
   140040e5d:	ins    DWORD PTR es:[rdi],dx
   140040e5e:	(bad)  
   140040e5f:	outs   dx,BYTE PTR ds:[rsi]
	...
   140040e68:	ins    DWORD PTR es:[rdi],dx
   140040e69:	(bad)  
   140040e6a:	movsxd ebp,DWORD PTR [rdi+0x73]
   140040e6d:	sub    eax,0x2d325f30
   140040e72:	xor    DWORD PTR [rax],esi
   140040e74:	xor    al,BYTE PTR cs:[rax]
   140040e77:	add    BYTE PTR [rbx+0x73],ah
   140040e7a:	rex.WRB (bad) 
   140040e7c:	movsxd ebp,DWORD PTR [rcx+0x6e]
   140040e7f:	je     0x140040ef0
   140040e81:	jae    0x140040eeb
   140040e83:	add    BYTE PTR [rbp+0x61],ch
   140040e86:	movsxd eax,DWORD PTR [rax]
   140040e88:	ins    DWORD PTR es:[rdi],dx
   140040e89:	(bad)  
   140040e8a:	movsxd ebp,DWORD PTR [rcx+0x6e]
   140040e8d:	je     0x140040efe
   140040e8f:	jae    0x140040ef9
   140040e91:	add    BYTE PTR [rax],al
   140040e93:	add    BYTE PTR [rax],al
   140040e95:	add    BYTE PTR [rax],al
   140040e97:	add    BYTE PTR [rcx+0x62],ch
   140040e9a:	ins    DWORD PTR es:[rdi],dx
   140040e9b:	sub    eax,0x33373331
	...
   140040ea8:	imul   esp,DWORD PTR [rdx+0x6d],0x3733312d
   140040eaf:	xor    ebx,DWORD PTR [rdi+0x50]
   140040eb2:	xor    DWORD PTR [rax],esi
   140040eb4:	xor    BYTE PTR [rip+0x32303032],ch        # 0x172343eec
   140040eba:	add    BYTE PTR [rax],al
   140040ebc:	js     0x140040eeb
   140040ebe:	(bad)  
   140040ebf:	imul   esp,DWORD PTR [rdi+0x35],0x0
   140040ec6:	add    BYTE PTR [rax],al
   140040ec8:	ja     0x140040f33
   140040eca:	outs   dx,BYTE PTR ds:[rsi]
   140040ecb:	outs   dx,DWORD PTR fs:[rsi]
   140040ecd:	ja     0x140040f42
   140040ecf:	sub    eax,0x2d303539
   140040ed4:	xor    dh,BYTE PTR [rax]
   140040ed6:	xor    BYTE PTR [rax],dh
	...
   140040ee0:	ja     0x140040f4b
   140040ee2:	outs   dx,BYTE PTR ds:[rsi]
   140040ee3:	outs   dx,DWORD PTR fs:[rsi]
   140040ee5:	ja     0x140040f5a
   140040ee7:	sub    eax,0x303539
   140040eec:	movsxd esi,DWORD PTR [rbx+0x42]
   140040eef:	imul   esp,DWORD PTR [rdi+0x35],0x69420000
   140040ef6:	addr32 xor eax,0x0
   140040efc:	add    BYTE PTR [rax],al
   140040efe:	add    BYTE PTR [rax],al
   140040f00:	imul   esp,DWORD PTR [rdx+0x6d],0x3833312d
   140040f07:	xor    ebx,DWORD PTR [rdi+0x56]
   140040f0a:	push   rax
   140040f0b:	push   rbp
   140040f0c:	add    BYTE PTR [r8],al
   140040f0f:	add    BYTE PTR [rax+0x70],ch
   140040f12:	xor    DWORD PTR [rip+0x4e43],esi        # 0x140045d5b
   140040f18:	imul   esp,DWORD PTR [rdx+0x6d],0x6375652d
   140040f1f:	rex.XB
   140040f20:	rex.WRX add BYTE PTR [rax],r8b
   140040f23:	add    BYTE PTR [rbp+0x55],al
   140040f26:	rex.XB sub eax,0x4e43
   140040f2c:	xor    DWORD PTR [rbx],esi
   140040f2e:	cmp    BYTE PTR [rbx],dh
   140040f30:	add    BYTE PTR [rax],al
   140040f32:	add    BYTE PTR [rax],al
   140040f34:	movsxd esi,DWORD PTR [rax+0x31]
   140040f37:	xor    edi,DWORD PTR [rax]
   140040f39:	xor    eax,DWORD PTR [rax]
   140040f3b:	add    BYTE PTR [rax],al
   140040f3d:	add    BYTE PTR [rax],al
   140040f3f:	add    BYTE PTR [rcx+0x62],ch
   140040f42:	ins    DWORD PTR es:[rdi],dx
   140040f43:	sub    eax,0x33383331
	...
   140040f50:	imul   esp,DWORD PTR [rdx+0x6d],0x3833312d
   140040f57:	xor    ebx,DWORD PTR [rdi+0x50]
   140040f5a:	xor    DWORD PTR [rcx],esi
   140040f5c:	xor    BYTE PTR [rip+0x39393931],ch        # 0x1793d4893
   140040f62:	add    BYTE PTR [rax],al
   140040f64:	add    BYTE PTR [rax],al
   140040f66:	add    BYTE PTR [rax],al
   140040f68:	movsxd esi,DWORD PTR [rbx+0x47]
   140040f6b:	rex.X xor sil,BYTE PTR [rbx]
   140040f6e:	xor    DWORD PTR [rdx],esi
   140040f70:	add    BYTE PTR [rax],al
   140040f72:	add    BYTE PTR [rax],al
   140040f74:	rex.RXB
   140040f75:	rex.X xor sil,BYTE PTR [rbx]
   140040f78:	xor    DWORD PTR [rdx],esi
   140040f7a:	add    BYTE PTR [rax],al
   140040f7c:	add    BYTE PTR [rax],al
   140040f7e:	add    BYTE PTR [rax],al
   140040f80:	movsxd esi,DWORD PTR [rbx+0x57]
   140040f83:	imul   ebp,DWORD PTR [rsi+0x64],0x3373776f
   140040f8a:	xor    DWORD PTR [rdx+0x0],ecx
   140040f8d:	add    BYTE PTR [rax],al
   140040f8f:	add    BYTE PTR [rdi+0x69],dl
   140040f92:	outs   dx,BYTE PTR ds:[rsi]
   140040f93:	outs   dx,DWORD PTR fs:[rsi]
   140040f95:	ja     0x14004100a
   140040f97:	sub    eax,0x4a3133
   140040f9c:	add    BYTE PTR [rax],al
   140040f9e:	add    BYTE PTR [rax],al
   140040fa0:	movsxd esi,DWORD PTR [rbx+0x4d]
   140040fa3:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   140040faa:	je     0x140040ffc
   140040fac:	jne    0x140041010
   140040fae:	ins    BYTE PTR es:[rdi],dx
   140040faf:	imul   esi,DWORD PTR [rbx+0x68],0x676e69
   140040fb6:	add    BYTE PTR [rax],al
   140040fb8:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140040fc0:	je     0x140040fef
   140040fc2:	push   rax
   140040fc3:	jne    0x140041027
   140040fc5:	ins    BYTE PTR es:[rdi],dx
   140040fc6:	imul   esi,DWORD PTR [rbx+0x68],0x676e69
   140040fcd:	add    BYTE PTR [rax],al
   140040fcf:	add    BYTE PTR [rbx+0x73],ah
   140040fd2:	push   rsi
   140040fd3:	outs   dx,BYTE PTR gs:[rsi]
   140040fd5:	je     0x14004104c
   140040fd7:	jb     0x14004103a
   140040fd9:	rex.WRB (bad) 
   140040fdb:	je     0x140041045
   140040fdd:	add    BYTE PTR [rax],al
   140040fdf:	add    BYTE PTR [rsi+0x65],dl
   140040fe2:	outs   dx,BYTE PTR ds:[rsi]
   140040fe3:	je     0x14004105a
   140040fe5:	jb     0x140041048
   140040fe7:	sub    eax,0x6874614d
   140040fec:	add    BYTE PTR [rax],al
   140040fee:	add    BYTE PTR [rax],al
   140040ff0:	movsxd esi,DWORD PTR [rbx+0x48]
   140040ff3:	push   rax
   140040ff4:	rex.R
   140040ff5:	gs jae 0x140041063
   140040ff8:	je     0x140041069
   140040ffa:	jo     0x140040ffc
   140040ffc:	add    BYTE PTR [rax],al
   140040ffe:	add    BYTE PTR [rax],al
   140041000:	rex.W push rax
   140041002:	sub    eax,0x6b736544
   140041007:	push   rsp
   140041008:	outs   dx,DWORD PTR ds:[rsi]
   140041009:	jo     0x14004100b
   14004100b:	add    BYTE PTR [rax],al
   14004100d:	add    BYTE PTR [rax],al
   14004100f:	add    BYTE PTR [rbx+0x73],ah
   140041012:	rex.W push rax
   140041014:	push   rax
   140041015:	push   rbx
   140041016:	rex.WRB (bad) 
   140041018:	je     0x140041082
   14004101a:	add    BYTE PTR [rax],al
   14004101c:	add    BYTE PTR [rax],al
   14004101e:	add    BYTE PTR [rax],al
   140041020:	rex.B
   140041021:	outs   dx,DWORD PTR fs:[rsi]
   140041023:	(bad)  
   140041024:	gs sub eax,0x626d7953
   14004102a:	outs   dx,DWORD PTR ds:[rsi]
   14004102b:	ins    BYTE PTR es:[rdi],dx
   14004102c:	sub    eax,0x6f636e45
   140041031:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x63000000
   140041039:	jae    0x140041083
   14004103b:	push   rax
   14004103c:	rex.WRB (bad) 
   14004103e:	je     0x1400410a8
   140041040:	cmp    BYTE PTR [rax],al
   140041042:	add    BYTE PTR [rax],al
   140041044:	add    BYTE PTR [rax],al
   140041046:	add    BYTE PTR [rax],al
   140041048:	rex.W push rax
   14004104a:	sub    eax,0x6874614d
   14004104f:	cmp    BYTE PTR [rax],al
   140041051:	add    BYTE PTR [rax],al
   140041053:	add    BYTE PTR [rax],al
   140041055:	add    BYTE PTR [rax],al
   140041057:	add    BYTE PTR [rbx+0x73],ah
   14004105a:	rex.W push rax
   14004105c:	push   rax
   14004105d:	imul   eax,DWORD PTR [rsi+0x6f],0x746e
   140041064:	add    BYTE PTR [rax],al
   140041066:	add    BYTE PTR [rax],al
   140041068:	rex.W push rax
   14004106a:	sub    eax,0x662d6950
   14004106f:	outs   dx,DWORD PTR ds:[rsi]
   140041070:	outs   dx,BYTE PTR ds:[rsi]
   140041071:	je     0x140041073
   140041073:	add    BYTE PTR [rax],al
   140041075:	add    BYTE PTR [rax],al
   140041077:	add    BYTE PTR [rbx+0x73],ah
   14004107a:	rex.W push rax
   14004107c:	rex.WR
   14004107d:	gs addr32 (bad) 
   140041080:	ins    BYTE PTR es:[rdi],dx
   140041081:	add    BYTE PTR [rax],al
   140041083:	add    BYTE PTR [rax],al
   140041085:	add    BYTE PTR [rax],al
   140041087:	add    BYTE PTR [rax+0x50],cl
   14004108a:	sub    eax,0x6167654c
   14004108f:	ins    BYTE PTR es:[rdi],dx
	...
   140041098:	imul   esp,DWORD PTR [rdx+0x6d],0x3330392d
   14004109f:	xor    BYTE PTR [rax],al
   1400410a1:	add    BYTE PTR [rax],al
   1400410a3:	add    BYTE PTR [rax],bh
   1400410a5:	xor    edi,DWORD PTR [rax]
   1400410a7:	add    BYTE PTR [rbx+0x70],ah
   1400410aa:	cmp    BYTE PTR [rbx],dh
   1400410ac:	cmp    BYTE PTR [rax],al
   1400410ae:	add    BYTE PTR [rax],al
   1400410b0:	rex.WB
   1400410b1:	rex.X
   1400410b2:	rex.WRB cmp BYTE PTR [r11],r14b
   1400410b5:	cmp    BYTE PTR [rax],al
   1400410b7:	add    BYTE PTR [rcx+0x62],ch
   1400410ba:	ins    DWORD PTR es:[rdi],dx
   1400410bb:	sub    eax,0x383338
   1400410c0:	imul   esp,DWORD PTR [rdx+0x6d],0x3833382d
   1400410c7:	pop    rdi
   1400410c8:	push   rax
   1400410c9:	xor    DWORD PTR [rax],esi
   1400410cb:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4a02
   1400410d1:	add    BYTE PTR [rax],al
   1400410d3:	add    BYTE PTR [rax],al
   1400410d5:	add    BYTE PTR [rax],al
   1400410d7:	add    BYTE PTR [rbx+0x73],ah
   1400410da:	rex.WB
   1400410db:	rex.X
   1400410dc:	rex.WRB push r12
   1400410de:	push   0x6961
   1400410e3:	add    BYTE PTR [rax],al
   1400410e5:	add    BYTE PTR [rax],al
   1400410e7:	add    BYTE PTR [rcx+0x42],cl
   1400410ea:	rex.WRB sub rax,0x69616854
	...
   1400410f8:	movsxd esi,DWORD PTR [rbx+0x49]
   1400410fb:	rex.X
   1400410fc:	rex.WRB push r11
   1400410fe:	jns    0x14004116d
   140041100:	(bad)  
   140041101:	outs   dx,DWORD PTR ds:[rsi]
   140041102:	ins    BYTE PTR es:[rdi],dx
   140041103:	jae    0x140041105
   140041105:	add    BYTE PTR [rax],al
   140041107:	add    BYTE PTR [rcx+0x42],cl
   14004110a:	rex.WRB sub rax,0x626d7953
   140041110:	outs   dx,DWORD PTR ds:[rsi]
   140041111:	ins    BYTE PTR es:[rdi],dx
   140041112:	jae    0x140041114
   140041114:	add    BYTE PTR [rax],al
   140041116:	add    BYTE PTR [rax],al
   140041118:	movsxd esi,DWORD PTR [rbx+0x50]
   14004111b:	cmp    BYTE PTR [r13+r14*2+0x72],dl
   140041120:	imul   ebp,DWORD PTR [rcx+0x73],0x68
   140041124:	add    BYTE PTR [rax],al
   140041126:	add    BYTE PTR [rax],al
   140041128:	push   rax
   140041129:	rex.XB cmp BYTE PTR [rip+0x6b727554],bpl        # 0x1ab768684
   140041130:	imul   esi,DWORD PTR [rbx+0x68],0x0
   140041137:	add    BYTE PTR [rdi+rcx*2+0x53],al
   14004113b:	sub    eax,0x323638
   140041140:	imul   esp,DWORD PTR [rdx+0x6d],0x3236382d
   140041147:	pop    rdi
   140041148:	push   rax
   140041149:	xor    DWORD PTR [rax],esi
   14004114b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4a82
   140041151:	add    BYTE PTR [rax],al
   140041153:	add    BYTE PTR [rax],al
   140041155:	add    BYTE PTR [rax],al
   140041157:	add    BYTE PTR [rbx+0x73],ah
   14004115a:	push   rax
   14004115b:	rex.XB cmp BYTE PTR [r14],sil
   14004115e:	xor    cl,BYTE PTR [rcx+riz*2+0x74]
   140041162:	imul   ebp,DWORD PTR [rsi+0x48],0x65726265
   140041169:	ja     0x14004116b
   14004116b:	add    BYTE PTR [rax],bh
   14004116d:	xor    al,BYTE PTR ss:[rax]
   140041170:	movsxd esi,DWORD PTR [rax+0x38]
   140041173:	xor    al,BYTE PTR ss:[rax]
   140041176:	add    BYTE PTR [rax],al
   140041178:	rex.WB
   140041179:	rex.X
   14004117a:	rex.WRB cmp BYTE PTR [r14],r14b
   14004117d:	xor    al,BYTE PTR [rax]
   14004117f:	add    BYTE PTR [rbx+0x73],ah
   140041182:	push   rax
   140041183:	cmp    BYTE PTR [r9+r12*2+0x6e],al
   140041188:	imul   esi,DWORD PTR [rbx+0x68],0x77726f4e
   14004118f:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x0
   140041198:	push   rax
   140041199:	rex.XB cmp BYTE PTR [rip+0x696e6144],bpl        # 0x1a97272e4
   1400411a0:	jae    0x14004120a
   1400411a2:	sub    eax,0x77726f4e
   1400411a7:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x0
   1400411b0:	imul   esp,DWORD PTR [rdx+0x6d],0x3035382d
   1400411b7:	pop    rdi
   1400411b8:	push   rax
   1400411b9:	xor    DWORD PTR [rax],esi
   1400411bb:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4af2
   1400411c1:	add    BYTE PTR [rax],al
   1400411c3:	add    BYTE PTR [rax],al
   1400411c5:	add    BYTE PTR [rax],al
   1400411c7:	add    BYTE PTR [rbx+0x73],ah
   1400411ca:	push   rax
   1400411cb:	rex.XB cmp BYTE PTR [rip+0x6c754d30],sil        # 0x1ac795f02
   1400411d2:	je     0x14004123d
   1400411d4:	ins    BYTE PTR es:[rdi],dx
   1400411d5:	imul   ebp,DWORD PTR [rsi+0x67],0x6c6175
   1400411dc:	cmp    BYTE PTR [rip+0x70630030],dh        # 0x1b0671212
   1400411e2:	cmp    BYTE PTR [rip+0x30],dh        # 0x140041218
   1400411e8:	rex.WB
   1400411e9:	rex.X
   1400411ea:	rex.WRB cmp BYTE PTR [rip+0x63000030],r14b        # 0x1a3041221
   1400411f1:	jae    0x140041237
   1400411f3:	rex.RB
   1400411f4:	rex.XB
   1400411f5:	rex.WRB
   1400411f6:	rex.XB push r11
   1400411f8:	add    BYTE PTR [rax],al
   1400411fa:	add    BYTE PTR [rax],al
   1400411fc:	fs movsxd eax,DWORD PTR gs:[rax]
   140041200:	rex.R
   140041201:	rex.RB
   140041202:	rex.XB sub eax,0x53434d
   140041208:	movsxd esi,DWORD PTR [rbx+0x56]
   14004120b:	outs   dx,BYTE PTR gs:[rsi]
   14004120d:	je     0x140041284
   14004120f:	jb     0x140041272
   140041211:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140041213:	je     0x14004127a
   140041215:	jb     0x140041285
   140041217:	(bad)  
   140041218:	je     0x140041283
   14004121a:	outs   dx,DWORD PTR ds:[rsi]
   14004121b:	outs   dx,BYTE PTR ds:[rsi]
   14004121c:	(bad)  
   14004121d:	ins    BYTE PTR es:[rdi],dx
   14004121e:	add    BYTE PTR [rax],al
   140041220:	push   rsi
   140041221:	outs   dx,BYTE PTR gs:[rsi]
   140041223:	je     0x14004129a
   140041225:	jb     0x140041288
   140041227:	sub    eax,0x65746e49
   14004122c:	jb     0x14004129c
   14004122e:	(bad)  
   14004122f:	je     0x14004129a
   140041231:	outs   dx,DWORD PTR ds:[rsi]
   140041232:	outs   dx,BYTE PTR ds:[rsi]
   140041233:	(bad)  
   140041234:	ins    BYTE PTR es:[rdi],dx
   140041235:	add    BYTE PTR [rax],al
   140041237:	add    BYTE PTR [rbx+0x73],ah
   14004123a:	push   rsi
   14004123b:	outs   dx,BYTE PTR gs:[rsi]
   14004123d:	je     0x1400412b4
   14004123f:	jb     0x1400412a2
   140041241:	push   rbp
   140041242:	push   rbx
   140041243:	add    BYTE PTR [rax],al
   140041245:	add    BYTE PTR [rax],al
   140041247:	add    BYTE PTR [rsi+0x65],dl
   14004124a:	outs   dx,BYTE PTR ds:[rsi]
   14004124b:	je     0x1400412c2
   14004124d:	jb     0x1400412b0
   14004124f:	sub    eax,0x5355
   140041254:	add    BYTE PTR [rax],al
   140041256:	add    BYTE PTR [rax],al
   140041258:	imul   esp,DWORD PTR [rdx+0x6d],0x3732312d
   14004125f:	add    BYTE PTR ss:[rax],al
   140041262:	add    BYTE PTR [rax],al
   140041264:	add    BYTE PTR [rax],al
   140041266:	add    BYTE PTR [rax],al
   140041268:	imul   esp,DWORD PTR [rdx+0x6d],0x3732312d
   14004126f:	ss pop rdi
   140041271:	push   rax
   140041272:	xor    DWORD PTR [rax],esi
   140041274:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4bab
   14004127a:	add    BYTE PTR [rax],al
   14004127c:	add    BYTE PTR [rax],al
   14004127e:	add    BYTE PTR [rax],al
   140041280:	movsxd esi,DWORD PTR [rbx+0x41]
   140041283:	outs   dx,DWORD PTR fs:[rsi]
   140041285:	(bad)  
   140041286:	gs push rbx
   140041288:	je     0x1400412eb
   14004128a:	outs   dx,BYTE PTR ds:[rsi]
   14004128b:	fs (bad) 
   14004128d:	jb     0x1400412f3
   14004128f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140041291:	movsxd ebp,DWORD PTR [rdi+0x64]
   140041294:	imul   ebp,DWORD PTR [rsi+0x67],0x6f644100
   14004129b:	(bad)  
   14004129c:	gs sub eax,0x6e617453
   1400412a2:	fs (bad) 
   1400412a4:	jb     0x14004130a
   1400412a6:	sub    eax,0x6f636e45
   1400412ab:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6d626900
   1400412b3:	sub    eax,0x31353031
	...
   1400412c0:	imul   esp,DWORD PTR [rdx+0x6d],0x3530312d
   1400412c7:	xor    DWORD PTR [rdi+0x50],ebx
   1400412ca:	xor    DWORD PTR [rax],esi
   1400412cc:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d4c03
   1400412d2:	add    BYTE PTR [rax],al
   1400412d4:	add    BYTE PTR [rax],al
   1400412d6:	add    BYTE PTR [rax],al
   1400412d8:	movsxd esi,DWORD PTR [rbx+0x48]
   1400412db:	push   rax
   1400412dc:	push   rdx
   1400412dd:	outs   dx,DWORD PTR ds:[rsi]
   1400412de:	ins    DWORD PTR es:[rdi],dx
   1400412df:	(bad)  
   1400412e0:	outs   dx,BYTE PTR ds:[rsi]
   1400412e1:	cmp    BYTE PTR [rax],al
   1400412e3:	add    BYTE PTR [rdx+0x38],dh
   1400412e6:	add    BYTE PTR [rax],al
   1400412e8:	jb     0x140041359
   1400412ea:	ins    DWORD PTR es:[rdi],dx
   1400412eb:	(bad)  
   1400412ec:	outs   dx,BYTE PTR ds:[rsi]
   1400412ed:	cmp    BYTE PTR [rax],al
   1400412ef:	add    BYTE PTR [rax+0x70],ch
   1400412f2:	sub    eax,0x616d6f72
   1400412f7:	outs   dx,BYTE PTR ds:[rsi]
   1400412f8:	cmp    BYTE PTR [rax],al
   1400412fa:	add    BYTE PTR [rax],al
   1400412fc:	add    BYTE PTR [rax],al
   1400412fe:	add    BYTE PTR [rax],al
   140041300:	movsxd esi,DWORD PTR [rbx+0x57]
   140041303:	imul   ebp,DWORD PTR [rsi+0x64],0x3373776f
   14004130a:	xor    DWORD PTR [rcx+riz*2+0x74],ecx
   14004130e:	imul   ebp,DWORD PTR [rsi+0x35],0x0
   140041315:	add    BYTE PTR [rax],al
   140041317:	add    BYTE PTR [rcx+0x53],cl
   14004131a:	rex.WRXB sub rax,0x39353838
   140041320:	sub    eax,0x69572d39
   140041325:	outs   dx,BYTE PTR ds:[rsi]
   140041326:	outs   dx,DWORD PTR fs:[rsi]
   140041328:	ja     0x14004139d
   14004132a:	sub    eax,0x6974614c
   14004132f:	outs   dx,BYTE PTR ds:[rsi]
   140041330:	sub    eax,0x35
   140041335:	add    BYTE PTR [rax],al
   140041337:	add    BYTE PTR [rbx+0x73],ah
   14004133a:	push   rdi
   14004133b:	imul   ebp,DWORD PTR [rsi+0x64],0x3373776f
   140041342:	xor    DWORD PTR [rcx+riz*2+0x74],ecx
   140041346:	imul   ebp,DWORD PTR [rsi+0x32],0x0
   14004134d:	add    BYTE PTR [rax],al
   14004134f:	add    BYTE PTR [rcx+0x53],cl
   140041352:	rex.WRXB sub rax,0x39353838
   140041358:	sub    eax,0x69572d32
   14004135d:	outs   dx,BYTE PTR ds:[rsi]
   14004135e:	outs   dx,DWORD PTR fs:[rsi]
   140041360:	ja     0x1400413d5
   140041362:	sub    eax,0x6974614c
   140041367:	outs   dx,BYTE PTR ds:[rsi]
   140041368:	sub    eax,0x32
   14004136d:	add    BYTE PTR [rax],al
   14004136f:	add    BYTE PTR [rbx+0x73],ah
   140041372:	push   rdi
   140041373:	imul   ebp,DWORD PTR [rsi+0x64],0x3373776f
   14004137a:	xor    DWORD PTR [rcx+riz*2+0x74],ecx
   14004137e:	imul   ebp,DWORD PTR [rsi+0x31],0x0
   140041385:	add    BYTE PTR [rax],al
   140041387:	add    BYTE PTR [rcx+0x53],cl
   14004138a:	rex.WRXB sub rax,0x39353838
   140041390:	sub    eax,0x69572d31
   140041395:	outs   dx,BYTE PTR ds:[rsi]
   140041396:	outs   dx,DWORD PTR fs:[rsi]
   140041398:	ja     0x14004140d
   14004139a:	sub    eax,0x2d312e33
   14004139f:	rex.WR (bad) 
   1400413a1:	je     0x14004140c
   1400413a3:	outs   dx,BYTE PTR ds:[rsi]
   1400413a4:	sub    eax,0x63000031
   1400413a9:	jae    0x140041402
   1400413ab:	imul   ebp,DWORD PTR [rsi+0x64],0x3373776f
   1400413b2:	xor    BYTE PTR [rcx+riz*2+0x74],cl
   1400413b6:	imul   ebp,DWORD PTR [rsi+0x31],0x0
   1400413bd:	add    BYTE PTR [rax],al
   1400413bf:	add    BYTE PTR [rcx+0x53],cl
   1400413c2:	rex.WRXB sub rax,0x39353838
   1400413c8:	sub    eax,0x69572d31
   1400413cd:	outs   dx,BYTE PTR ds:[rsi]
   1400413ce:	outs   dx,DWORD PTR fs:[rsi]
   1400413d0:	ja     0x140041445
   1400413d2:	sub    eax,0x2d302e33
   1400413d7:	rex.WR (bad) 
   1400413d9:	je     0x140041444
   1400413db:	outs   dx,BYTE PTR ds:[rsi]
   1400413dc:	sub    eax,0x69000031
   1400413e1:	(bad)  
   1400413e2:	ins    DWORD PTR es:[rdi],dx
   1400413e3:	sub    eax,0x35313231
	...
   1400413f0:	imul   esp,DWORD PTR [rdx+0x6d],0x3132312d
   1400413f7:	xor    al,0x0
   1400413f9:	add    BYTE PTR [rax],al
   1400413fb:	add    BYTE PTR [rax],al
   1400413fd:	add    BYTE PTR [rax],al
   1400413ff:	add    BYTE PTR [rbx+0x73],ah
   140041402:	rex.X
   140041403:	rex.WRXB
   140041404:	rex.XB push r13
   140041406:	sub    eax,0x31
   14004140b:	add    BYTE PTR [rax],al
   14004140d:	add    BYTE PTR [rax],al
   14004140f:	add    BYTE PTR [rcx+0x62],ch
   140041412:	ins    DWORD PTR es:[rdi],dx
   140041413:	sub    eax,0x35333231
	...
   140041420:	imul   esp,DWORD PTR [rdx+0x6d],0x3332312d
   140041427:	xor    al,0x0
   140041429:	add    BYTE PTR [rax],al
   14004142b:	add    BYTE PTR [rax],al
   14004142d:	add    BYTE PTR [rax],al
   14004142f:	add    BYTE PTR [rbp+0x54],dl
   140041432:	rex.RX xor r14d,DWORD PTR [rdx]
   140041435:	pop    rdi
   140041436:	imul   r14,QWORD PTR [rsp+rsi*2+0x6c],0x646e4565
   14004143f:	imul   esp,DWORD PTR [rcx+0x6e],0x0
   140041446:	add    BYTE PTR [rax],al
   140041448:	imul   esp,DWORD PTR [rdx+0x6d],0x3234392d
   14004144f:	xor    al,0x0
   140041451:	add    BYTE PTR [rax],al
   140041453:	add    BYTE PTR [rax],al
   140041455:	add    BYTE PTR [rax],al
   140041457:	add    BYTE PTR [rcx+0x62],ch
   14004145a:	ins    DWORD PTR es:[rdi],dx
   14004145b:	sub    eax,0x33333231
	...
   140041468:	imul   esp,DWORD PTR [rdx+0x6d],0x3332312d
   14004146f:	xor    al,BYTE PTR [rax]
   140041471:	add    BYTE PTR [rax],al
   140041473:	add    BYTE PTR [rax],al
   140041475:	add    BYTE PTR [rax],al
   140041477:	add    BYTE PTR [rbp+0x54],dl
   14004147a:	rex.RX xor r14d,DWORD PTR [rdx]
   14004147d:	pop    rdi
   14004147e:	rex.X imul esp,DWORD PTR [rdi+0x45],0x6169646e
   140041486:	outs   dx,BYTE PTR ds:[rsi]
   140041487:	add    BYTE PTR [rbp+0x54],dl
   14004148a:	rex.RX sub eax,0x3233
   140041490:	imul   esp,DWORD PTR [rdx+0x6d],0x3034392d
   140041497:	xor    BYTE PTR [rax],al
   140041499:	add    BYTE PTR [rax],al
   14004149b:	add    BYTE PTR [rax],al
   14004149d:	add    BYTE PTR [rax],al
   14004149f:	add    BYTE PTR [rbx+0x73],ah
   1400414a2:	rex.XB
   1400414a3:	rex.RB push r11
   1400414a5:	push   rbp
   1400414a6:	sub    eax,0x38
   1400414ab:	add    BYTE PTR [rbx+0x45],al
   1400414ae:	push   rbx
   1400414af:	push   rbp
   1400414b0:	sub    eax,0x55000038
   1400414b5:	push   rsp
   1400414b6:	rex.RX sub eax,0x3631
   1400414bc:	add    BYTE PTR [rax],al
   1400414be:	add    BYTE PTR [rax],al
   1400414c0:	push   rbp
   1400414c1:	outs   dx,BYTE PTR ds:[rsi]
   1400414c2:	imul   esp,DWORD PTR [rbx+0x6f],0x694c6564
   1400414c9:	je     0x14004153f
   1400414cb:	ins    BYTE PTR es:[rdi],dx
   1400414cc:	gs push rbp
   1400414ce:	outs   dx,BYTE PTR ds:[rsi]
   1400414cf:	ins    DWORD PTR es:[rdi],dx
   1400414d0:	(bad)  
   1400414d1:	jb     0x14004153e
   1400414d3:	gs add BYTE PTR fs:[rax],al
   1400414d7:	add    BYTE PTR [rbp+0x54],dl
   1400414da:	rex.RX xor DWORD PTR [rsi],r14d
   1400414dd:	pop    rdi
   1400414de:	imul   r14,QWORD PTR [rsp+rsi*2+0x6c],0x646e4565
   1400414e7:	imul   esp,DWORD PTR [rcx+0x6e],0x0
   1400414ee:	add    BYTE PTR [rax],al
   1400414f0:	imul   esp,DWORD PTR [rdx+0x6d],0x3839322d
   1400414f7:	(bad)  
   1400414f8:	xor    eax,0x0
   1400414fd:	add    BYTE PTR [rax],al
   1400414ff:	add    BYTE PTR [rcx+0x62],ch
   140041502:	ins    DWORD PTR es:[rdi],dx
   140041503:	sub    eax,0x37383932
   140041508:	xor    al,0x0
   14004150a:	add    BYTE PTR [rax],al
   14004150c:	add    BYTE PTR [rax],al
   14004150e:	add    BYTE PTR [rax],al
   140041510:	imul   esp,DWORD PTR [rdx+0x6d],0x3735322d
   140041517:	(bad)  
   140041518:	cmp    DWORD PTR [rax],eax
   14004151a:	add    BYTE PTR [rax],al
   14004151c:	add    BYTE PTR [rax],al
   14004151e:	add    BYTE PTR [rax],al
   140041520:	imul   esp,DWORD PTR [rdx+0x6d],0x3735322d
   140041527:	(bad)  
   140041528:	cmp    BYTE PTR [rax],al
   14004152a:	add    BYTE PTR [rax],al
   14004152c:	add    BYTE PTR [rax],al
   14004152e:	add    BYTE PTR [rax],al
   140041530:	imul   esp,DWORD PTR [rdx+0x6d],0x3631322d
   140041537:	cmp    BYTE PTR [rbx],dh
   140041539:	add    BYTE PTR [rax],al
   14004153b:	add    BYTE PTR [rax],al
   14004153d:	add    BYTE PTR [rax],al
   14004153f:	add    BYTE PTR [rcx+0x62],ch
   140041542:	ins    DWORD PTR es:[rdi],dx
   140041543:	sub    eax,0x38363132
   140041548:	xor    al,BYTE PTR [rax]
   14004154a:	add    BYTE PTR [rax],al
   14004154c:	add    BYTE PTR [rax],al
   14004154e:	add    BYTE PTR [rax],al
   140041550:	imul   esp,DWORD PTR [rdx+0x6d],0x3537312d
   140041557:	cmp    BYTE PTR [rdi],dh
   140041559:	add    BYTE PTR [rax],al
   14004155b:	add    BYTE PTR [rax],al
   14004155d:	add    BYTE PTR [rax],al
   14004155f:	add    BYTE PTR [rcx+0x62],ch
   140041562:	ins    DWORD PTR es:[rdi],dx
   140041563:	sub    eax,0x38353731
   140041568:	add    BYTE PTR ss:[rax],al
   14004156b:	add    BYTE PTR [rax],al
   14004156d:	add    BYTE PTR [rax],al
   14004156f:	add    BYTE PTR [rcx+0x62],ch
   140041572:	ins    DWORD PTR es:[rdi],dx
   140041573:	sub    eax,0x39343331
   140041578:	xor    DWORD PTR [rax],eax
   14004157a:	add    BYTE PTR [rax],al
   14004157c:	add    BYTE PTR [rax],al
   14004157e:	add    BYTE PTR [rax],al
   140041580:	imul   esp,DWORD PTR [rdx+0x6d],0x3433312d
   140041587:	cmp    DWORD PTR [rax],esi
   140041589:	add    BYTE PTR [rax],al
   14004158b:	add    BYTE PTR [rax],al
   14004158d:	add    BYTE PTR [rax],al
   14004158f:	add    BYTE PTR [rcx+0x62],ch
   140041592:	ins    DWORD PTR es:[rdi],dx
   140041593:	sub    eax,0x33303231
	...
   1400415a0:	imul   esp,DWORD PTR [rdx+0x6d],0x3032312d
   1400415a7:	xor    al,BYTE PTR [rax]
   1400415a9:	add    BYTE PTR [rax],al
   1400415ab:	add    BYTE PTR [rax],al
   1400415ad:	add    BYTE PTR [rax],al
   1400415af:	add    BYTE PTR [rax+0x2d],bh
   1400415b2:	jne    0x140041628
   1400415b4:	sub    ax,0x3631
   1400415b8:	ins    BYTE PTR es:[rdi],dx
   1400415b9:	add    BYTE PTR gs:[rax],al
   1400415bc:	add    BYTE PTR [rax],al
   1400415be:	add    BYTE PTR [rax],al
   1400415c0:	push   rbp
   1400415c1:	outs   dx,BYTE PTR ds:[rsi]
   1400415c2:	imul   esp,DWORD PTR [rbx+0x6f],0x69426564
   1400415c9:	addr32 push rbp
   1400415cb:	outs   dx,BYTE PTR ds:[rsi]
   1400415cc:	ins    DWORD PTR es:[rdi],dx
   1400415cd:	(bad)  
   1400415ce:	jb     0x14004163b
   1400415d0:	gs add BYTE PTR fs:[rax],al
   1400415d4:	add    BYTE PTR [rax],al
   1400415d6:	add    BYTE PTR [rax],al
   1400415d8:	push   rbp
   1400415d9:	push   rsp
   1400415da:	rex.RX xor DWORD PTR [rsi],r14d
   1400415dd:	pop    rdi
   1400415de:	rex.X imul esp,DWORD PTR [rdi+0x45],0x6169646e
   1400415e6:	outs   dx,BYTE PTR ds:[rsi]
   1400415e7:	add    BYTE PTR [rbx+0x70],ah
   1400415ea:	xor    DWORD PTR [rdx],esi
   1400415ec:	xor    BYTE PTR [rcx],dh
   1400415ee:	add    BYTE PTR [rax],al
   1400415f0:	movsxd esi,DWORD PTR [rax+0x31]
   1400415f3:	xor    dh,BYTE PTR [rax]
   1400415f5:	xor    BYTE PTR [rax],al
   1400415f7:	add    BYTE PTR [rcx+0x62],ch
   1400415fa:	ins    DWORD PTR es:[rdi],dx
   1400415fb:	sub    eax,0x35393136
   140041600:	add    BYTE PTR ss:[rax],al
   140041603:	add    BYTE PTR [rax],al
   140041605:	add    BYTE PTR [rax],al
   140041607:	add    BYTE PTR [rcx+0x62],ch
   14004160a:	ins    DWORD PTR es:[rdi],dx
   14004160b:	sub    eax,0x35393136
   140041610:	xor    eax,0x0
   140041615:	add    BYTE PTR [rax],al
   140041617:	add    BYTE PTR [rcx+0x62],ch
   14004161a:	ins    DWORD PTR es:[rdi],dx
   14004161b:	sub    eax,0x37383932
   140041620:	xor    eax,DWORD PTR [rax]
   140041622:	add    BYTE PTR [rax],al
   140041624:	add    BYTE PTR [rax],al
   140041626:	add    BYTE PTR [rax],al
   140041628:	imul   esp,DWORD PTR [rdx+0x6d],0x3839322d
   14004162f:	(bad)  
   140041630:	xor    al,BYTE PTR [rax]
   140041632:	add    BYTE PTR [rax],al
   140041634:	add    BYTE PTR [rax],al
   140041636:	add    BYTE PTR [rax],al
   140041638:	imul   esp,DWORD PTR [rdx+0x6d],0x3735322d
   14004163f:	(bad)  
   140041640:	(bad)  
   140041641:	add    BYTE PTR [rax],al
   140041643:	add    BYTE PTR [rax],al
   140041645:	add    BYTE PTR [rax],al
   140041647:	add    BYTE PTR [rcx+0x62],ch
   14004164a:	ins    DWORD PTR es:[rdi],dx
   14004164b:	sub    eax,0x37373532
   140041650:	add    BYTE PTR ss:[rax],al
   140041653:	add    BYTE PTR [rax],al
   140041655:	add    BYTE PTR [rax],al
   140041657:	add    BYTE PTR [rcx+0x62],ch
   14004165a:	ins    DWORD PTR es:[rdi],dx
   14004165b:	sub    eax,0x38363132
   140041660:	xor    DWORD PTR [rax],eax
   140041662:	add    BYTE PTR [rax],al
   140041664:	add    BYTE PTR [rax],al
   140041666:	add    BYTE PTR [rax],al
   140041668:	imul   esp,DWORD PTR [rdx+0x6d],0x3631322d
   14004166f:	cmp    BYTE PTR [rax],dh
   140041671:	add    BYTE PTR [rax],al
   140041673:	add    BYTE PTR [rax],al
   140041675:	add    BYTE PTR [rax],al
   140041677:	add    BYTE PTR [rcx+0x62],ch
   14004167a:	ins    DWORD PTR es:[rdi],dx
   14004167b:	sub    eax,0x38353731
   140041680:	xor    eax,0x0
   140041685:	add    BYTE PTR [rax],al
   140041687:	add    BYTE PTR [rcx+0x62],ch
   14004168a:	ins    DWORD PTR es:[rdi],dx
   14004168b:	sub    eax,0x38353731
   140041690:	xor    al,0x0
   140041692:	add    BYTE PTR [rax],al
   140041694:	add    BYTE PTR [rax],al
   140041696:	add    BYTE PTR [rax],al
   140041698:	imul   esp,DWORD PTR [rdx+0x6d],0x3433312d
   14004169f:	cmp    BYTE PTR [rcx],bh
   1400416a1:	add    BYTE PTR [rax],al
   1400416a3:	add    BYTE PTR [rax],al
   1400416a5:	add    BYTE PTR [rax],al
   1400416a7:	add    BYTE PTR [rcx+0x62],ch
   1400416aa:	ins    DWORD PTR es:[rdi],dx
   1400416ab:	sub    eax,0x38343331
   1400416b0:	cmp    BYTE PTR [rax],al
   1400416b2:	add    BYTE PTR [rax],al
   1400416b4:	add    BYTE PTR [rax],al
   1400416b6:	add    BYTE PTR [rax],al
   1400416b8:	imul   esp,DWORD PTR [rdx+0x6d],0x3032312d
   1400416bf:	xor    DWORD PTR [rax],eax
   1400416c1:	add    BYTE PTR [rax],al
   1400416c3:	add    BYTE PTR [rax],al
   1400416c5:	add    BYTE PTR [rax],al
   1400416c7:	add    BYTE PTR [rcx+0x62],ch
   1400416ca:	ins    DWORD PTR es:[rdi],dx
   1400416cb:	sub    eax,0x30303231
	...
   1400416d8:	js     0x140041707
   1400416da:	jne    0x140041750
   1400416dc:	sub    ax,0x3631
   1400416e0:	(bad)  
   1400416e1:	add    BYTE PTR gs:[rax],al
   1400416e4:	add    BYTE PTR [rax],al
   1400416e6:	add    BYTE PTR [rax],al
   1400416e8:	imul   esp,DWORD PTR [rdx+0x6d],0x3132312d
   1400416ef:	xor    eax,DWORD PTR [rax]
   1400416f1:	add    BYTE PTR [rax],al
   1400416f3:	add    BYTE PTR [rax],al
   1400416f5:	add    BYTE PTR [rax],al
   1400416f7:	add    BYTE PTR [rcx+0x62],ch
   1400416fa:	ins    DWORD PTR es:[rdi],dx
   1400416fb:	sub    eax,0x32313231
	...
   140041708:	movsxd esi,DWORD PTR [rbx+0x55]
   14004170b:	outs   dx,BYTE PTR ds:[rsi]
   14004170c:	imul   esp,DWORD PTR [rbx+0x6f],0x31316564
   140041713:	add    BYTE PTR [rax],al
   140041715:	add    BYTE PTR [rax],al
   140041717:	add    BYTE PTR [rbp+0x4e],dl
   14004171a:	rex.WB
   14004171b:	rex.XB
   14004171c:	rex.WRXB
   14004171d:	rex.R
   14004171e:	rex.RB sub eax,0x312d31
   140041724:	add    BYTE PTR [rax],al
   140041726:	add    BYTE PTR [rax],al
   140041728:	movsxd esi,DWORD PTR [rbx+0x55]
   14004172b:	outs   dx,BYTE PTR ds:[rsi]
   14004172c:	imul   esp,DWORD PTR [rbx+0x6f],0x42496564
   140041733:	xor    QWORD PTR [r10],r14
   140041736:	ss xor eax,0x0
   14004173c:	add    BYTE PTR [rax],al
   14004173e:	add    BYTE PTR [rax],al
   140041740:	rex.WB push r11
   140041742:	rex.WRXB sub rax,0x63696e55
   140041748:	outs   dx,DWORD PTR ds:[rsi]
   140041749:	fs gs sub eax,0x2d4d4249
   140041750:	xor    DWORD PTR [rdx],esi
   140041752:	ss xor eax,0x0
   140041758:	movsxd esi,DWORD PTR [rbx+0x55]
   14004175b:	outs   dx,BYTE PTR ds:[rsi]
   14004175c:	imul   esp,DWORD PTR [rbx+0x6f],0x42496564
   140041763:	xor    QWORD PTR [r10],r14
   140041766:	ss xor al,0x0
   140041769:	add    BYTE PTR [rax],al
   14004176b:	add    BYTE PTR [rax],al
   14004176d:	add    BYTE PTR [rax],al
   14004176f:	add    BYTE PTR [rcx+0x53],cl
   140041772:	rex.WRXB sub rax,0x63696e55
   140041778:	outs   dx,DWORD PTR ds:[rsi]
   140041779:	fs gs sub eax,0x2d4d4249
   140041780:	xor    DWORD PTR [rdx],esi
   140041782:	ss xor al,0x0
   140041785:	add    BYTE PTR [rax],al
   140041787:	add    BYTE PTR [rbx+0x73],ah
   14004178a:	push   rbp
   14004178b:	outs   dx,BYTE PTR ds:[rsi]
   14004178c:	imul   esp,DWORD PTR [rbx+0x6f],0x42496564
   140041793:	xor    QWORD PTR [r10],r14
   140041796:	(bad)  
   140041797:	add    BYTE PTR ss:[rax],al
   14004179a:	add    BYTE PTR [rax],al
   14004179c:	add    BYTE PTR [rax],al
   14004179e:	add    BYTE PTR [rax],al
   1400417a0:	rex.WB push r11
   1400417a2:	rex.WRXB sub rax,0x63696e55
   1400417a8:	outs   dx,DWORD PTR ds:[rsi]
   1400417a9:	fs gs sub eax,0x2d4d4249
   1400417b0:	xor    DWORD PTR [rdx],esi
   1400417b2:	(bad)  
   1400417b3:	add    BYTE PTR ss:[rax],al
   1400417b6:	add    BYTE PTR [rax],al
   1400417b8:	movsxd esi,DWORD PTR [rbx+0x55]
   1400417bb:	outs   dx,BYTE PTR ds:[rsi]
   1400417bc:	imul   esp,DWORD PTR [rbx+0x6f],0x42496564
   1400417c3:	xor    QWORD PTR [r10],r14
   1400417c6:	cmp    BYTE PTR ss:[rax],al
   1400417c9:	add    BYTE PTR [rax],al
   1400417cb:	add    BYTE PTR [rax],al
   1400417cd:	add    BYTE PTR [rax],al
   1400417cf:	add    BYTE PTR [rcx+0x53],cl
   1400417d2:	rex.WRXB sub rax,0x63696e55
   1400417d8:	outs   dx,DWORD PTR ds:[rsi]
   1400417d9:	fs gs sub eax,0x2d4d4249
   1400417e0:	xor    DWORD PTR [rdx],esi
   1400417e2:	cmp    BYTE PTR ss:[rax],al
   1400417e5:	add    BYTE PTR [rax],al
   1400417e7:	add    BYTE PTR [rbx+0x73],ah
   1400417ea:	push   rbp
   1400417eb:	outs   dx,BYTE PTR ds:[rsi]
   1400417ec:	imul   esp,DWORD PTR [rbx+0x6f],0x42496564
   1400417f3:	xor    QWORD PTR [r10],r14
   1400417f6:	xor    DWORD PTR ss:[rax],eax
   1400417f9:	add    BYTE PTR [rax],al
   1400417fb:	add    BYTE PTR [rax],al
   1400417fd:	add    BYTE PTR [rax],al
   1400417ff:	add    BYTE PTR [rcx+0x53],cl
   140041802:	rex.WRXB sub rax,0x63696e55
   140041808:	outs   dx,DWORD PTR ds:[rsi]
   140041809:	fs gs sub eax,0x2d4d4249
   140041810:	xor    DWORD PTR [rdx],esi
   140041812:	xor    DWORD PTR ss:[rax],eax
   140041815:	add    BYTE PTR [rax],al
   140041817:	add    BYTE PTR [rcx+0x53],cl
   14004181a:	rex.WRXB sub rax,0x34363031
   140041820:	ss sub eax,0x312d4a
   140041826:	add    BYTE PTR [rax],al
   140041828:	rex.WB push r11
   14004182a:	rex.WRXB sub rax,0x34363031
   140041830:	add    BYTE PTR ss:[rax],al
   140041833:	add    BYTE PTR [rax],al
   140041835:	add    BYTE PTR [rax],al
   140041837:	add    BYTE PTR [rbx+0x73],ah
   14004183a:	push   rbp
   14004183b:	outs   dx,BYTE PTR ds:[rsi]
   14004183c:	imul   esp,DWORD PTR [rbx+0x6f],0x614c6564
   140041843:	je     0x1400418ae
   140041845:	outs   dx,BYTE PTR ds:[rsi]
   140041846:	xor    DWORD PTR [rax],eax
   140041848:	rex.WB push r11
   14004184a:	rex.WRXB sub rax,0x34363031
   140041850:	ss sub eax,0x63696e55
   140041856:	outs   dx,DWORD PTR ds:[rsi]
   140041857:	fs gs sub eax,0x6974614c
   14004185e:	outs   dx,BYTE PTR ds:[rsi]
   14004185f:	xor    DWORD PTR [rax],eax
   140041861:	add    BYTE PTR [rax],al
   140041863:	add    BYTE PTR [rax],al
   140041865:	add    BYTE PTR [rax],al
   140041867:	add    BYTE PTR [rbx+0x73],ah
   14004186a:	push   rbp
   14004186b:	outs   dx,BYTE PTR ds:[rsi]
   14004186c:	imul   esp,DWORD PTR [rbx+0x6f],0x53416564
   140041873:	rex.XB
   140041874:	rex.WB
   140041875:	rex.WB add BYTE PTR [r8],al
   140041878:	rex.WB push r11
   14004187a:	rex.WRXB sub rax,0x34363031
   140041880:	ss sub eax,0x2d534355
   140041886:	rex.X (bad) 
   140041888:	jae    0x1400418f3
   14004188a:	movsxd eax,DWORD PTR [rax]
   14004188c:	jne    0x1400418f1
   14004188e:	jae    0x1400418bd
   140041890:	xor    al,0x0
   140041892:	add    BYTE PTR [rax],al
   140041894:	add    BYTE PTR [rax],al
   140041896:	add    BYTE PTR [rax],al
   140041898:	imul   esp,DWORD PTR [rdx+0x6d],0x3332312d
   14004189f:	(bad)  
	...
   1400418a8:	imul   esp,DWORD PTR [rdx+0x6d],0x3332312d
   1400418af:	add    BYTE PTR ss:[rax],al
   1400418b2:	add    BYTE PTR [rax],al
   1400418b4:	movsxd esi,DWORD PTR [rbx+0x55]
   1400418b7:	rex.XB push r11
   1400418b9:	xor    al,0x0
   1400418bb:	add    BYTE PTR [rax],al
   1400418bd:	add    BYTE PTR [rax],al
   1400418bf:	add    BYTE PTR [rcx+0x53],cl
   1400418c2:	rex.WRXB sub rax,0x34363031
   1400418c8:	ss sub eax,0x2d534355
   1400418ce:	xor    al,0x0
   1400418d0:	jne    0x140041935
   1400418d2:	jae    0x140041901
   1400418d4:	xor    al,BYTE PTR [rax]
   1400418d6:	add    BYTE PTR [rax],al
   1400418d8:	jne    0x140041948
   1400418da:	imul   esp,DWORD PTR [rbx+0x6f],0x69006564
   1400418e1:	(bad)  
   1400418e2:	ins    DWORD PTR es:[rdi],dx
   1400418e3:	sub    eax,0x35303231
	...
   1400418f0:	imul   esp,DWORD PTR [rdx+0x6d],0x3032312d
   1400418f7:	xor    al,0x0
   1400418f9:	add    BYTE PTR [rax],al
   1400418fb:	add    BYTE PTR [rax],al
   1400418fd:	add    BYTE PTR [rax],al
   1400418ff:	add    BYTE PTR [rbx+0x73],ah
   140041902:	push   rbp
   140041903:	outs   dx,BYTE PTR ds:[rsi]
   140041904:	imul   esp,DWORD PTR [rbx+0x6f],0x6564
   14004190b:	add    BYTE PTR [rax],al
   14004190d:	add    BYTE PTR [rax],al
   14004190f:	add    BYTE PTR [rcx+0x53],cl
   140041912:	rex.WRXB sub rax,0x34363031
   140041918:	ss sub eax,0x2d534355
   14004191e:	xor    al,BYTE PTR [rax]
   140041920:	movsxd esi,DWORD PTR [rbx+0x4b]
   140041923:	pop    rdx
   140041924:	xor    DWORD PTR [rax],esi
   140041926:	xor    al,0x38
   140041928:	add    BYTE PTR [rax],al
   14004192a:	add    BYTE PTR [rax],al
   14004192c:	push   rdx
   14004192d:	rex.WXB xor QWORD PTR [r8],rsi
   140041930:	xor    al,0x38
   140041932:	add    BYTE PTR [rax],al
   140041934:	add    BYTE PTR [rax],al
   140041936:	add    BYTE PTR [rax],al
   140041938:	push   rbx
   140041939:	push   rsp
   14004193a:	push   rdx
   14004193b:	rex.WXB xor QWORD PTR [r8],rsi
   14004193e:	xor    al,0x38
   140041940:	sub    eax,0x32303032
   140041945:	add    BYTE PTR [rax],al
   140041947:	add    BYTE PTR [rbx+0x5a],cl
   14004194a:	sub    eax,0x38343031
   14004194f:	add    BYTE PTR [rbx+0x73],ah
   140041952:	rex.WB push r11
   140041954:	rex.WRXB xor QWORD PTR [r9],r14
   140041957:	xor    eax,0x313834
   14004195c:	add    BYTE PTR [rax],al
   14004195e:	add    BYTE PTR [rax],al
   140041960:	rex.WB push r11
   140041962:	rex.WRXB pop r15
   140041964:	push   rsp
   140041965:	push   rdx
   140041966:	pop    rdi
   140041967:	xor    DWORD PTR [rcx],esi
   140041969:	xor    eax,0x312d3834
   14004196e:	add    BYTE PTR [rax],al
   140041970:	rex.WB push r11
   140041972:	rex.WRXB pop r15
   140041974:	xor    DWORD PTR [rcx],esi
   140041976:	xor    eax,0x312d3834
   14004197b:	add    BYTE PTR [rax],al
   14004197d:	add    BYTE PTR [rax],al
   14004197f:	add    BYTE PTR [rcx+0x53],cl
   140041982:	rex.WRXB sub rax,0x34353131
   140041988:	cmp    BYTE PTR [rip+0x31],ch        # 0x1400419bf
   14004198e:	add    BYTE PTR [rax],al
   140041990:	rex.WRXB push r11
   140041992:	rex.R pop rdi
   140041994:	rex.RB
   140041995:	rex.X
   140041996:	rex.XB
   140041997:	rex.R
   140041998:	rex.WB
   140041999:	rex.XB pop r15
   14004199b:	rex.R
   14004199c:	xor    BYTE PTR [rdi+r11*2],r14b
   1400419a0:	xor    DWORD PTR [rax],eax
   1400419a2:	add    BYTE PTR [rax],al
   1400419a4:	add    BYTE PTR [rax],al
   1400419a6:	add    BYTE PTR [rax],al
   1400419a8:	rex.WRXB push r11
   1400419aa:	rex.R pop rdi
   1400419ac:	rex.RB
   1400419ad:	rex.X
   1400419ae:	rex.XB
   1400419af:	rex.R
   1400419b0:	rex.WB
   1400419b1:	rex.XB pop r15
   1400419b3:	rex.R
   1400419b4:	rex.RX xor BYTE PTR [rbx],r14b
   1400419b7:	pop    rdi
   1400419b8:	rex.WB push r10
   1400419ba:	push   rsi
   1400419bb:	add    BYTE PTR [rax],al
   1400419bd:	add    BYTE PTR [rax],al
   1400419bf:	add    BYTE PTR [rdi+0x53],cl
   1400419c2:	rex.R pop rdi
   1400419c4:	rex.RB
   1400419c5:	rex.X
   1400419c6:	rex.XB
   1400419c7:	rex.R
   1400419c8:	rex.WB
   1400419c9:	rex.XB pop r15
   1400419cb:	rex.R
   1400419cc:	xor    BYTE PTR [rdi+r11*2],r14b
   1400419d0:	xor    DWORD PTR [rip+0x0],esi        # 0x1400419d6
   1400419d6:	add    BYTE PTR [rax],al
   1400419d8:	imul   esp,DWORD PTR [rdx+0x6d],0x3933312d
   1400419df:	xor    al,BYTE PTR [rax]
   1400419e1:	add    BYTE PTR [rax],al
   1400419e3:	add    BYTE PTR [rax],al
   1400419e5:	add    BYTE PTR [rax],al
   1400419e7:	add    BYTE PTR [rdi+0x42],al
   1400419ea:	xor    DWORD PTR [rax],edi
   1400419ec:	xor    BYTE PTR [rbx],dh
   1400419ee:	xor    BYTE PTR [rax],al
   1400419f0:	imul   esp,DWORD PTR [rdx+0x6d],0x3833312d
   1400419f7:	ss pop rdi
   1400419f9:	push   rsi
   1400419fa:	push   rbx
   1400419fb:	push   rbp
   1400419fc:	rex.X pop rdi
   1400419fe:	push   rsi
   1400419ff:	push   rax
   140041a00:	push   rbp
   140041a01:	add    BYTE PTR [r8],al
   140041a04:	movsxd esi,DWORD PTR [rax+0x31]
   140041a07:	xor    edi,DWORD PTR [rax]
   140041a09:	add    BYTE PTR ss:[rax],al
   140041a0c:	add    BYTE PTR [rax],al
   140041a0e:	add    BYTE PTR [rax],al
   140041a10:	imul   esp,DWORD PTR [rdx+0x6d],0x3833312d
   140041a17:	add    BYTE PTR ss:[rax],al
   140041a1a:	add    BYTE PTR [rax],al
   140041a1c:	add    BYTE PTR [rax],al
   140041a1e:	add    BYTE PTR [rax],al
   140041a20:	imul   esp,DWORD PTR [rdx+0x6d],0x3833312d
   140041a27:	ss pop rdi
   140041a29:	push   rax
   140041a2a:	xor    DWORD PTR [rax],esi
   140041a2c:	xor    BYTE PTR [rip+0x31303032],ch        # 0x171344a64
   140041a32:	add    BYTE PTR [rax],al
   140041a34:	add    BYTE PTR [rax],al
   140041a36:	add    BYTE PTR [rax],al
   140041a38:	ja     0x140041aa3
   140041a3a:	outs   dx,BYTE PTR ds:[rsi]
   140041a3b:	outs   dx,DWORD PTR fs:[rsi]
   140041a3d:	ja     0x140041ab2
   140041a3f:	sub    eax,0x2d363339
   140041a44:	xor    dh,BYTE PTR [rax]
   140041a46:	xor    BYTE PTR [rax],dh
	...
   140041a50:	ja     0x140041abb
   140041a52:	outs   dx,BYTE PTR ds:[rsi]
   140041a53:	outs   dx,DWORD PTR fs:[rsi]
   140041a55:	ja     0x140041aca
   140041a57:	sub    eax,0x363339
   140041a5c:	rex.WRB push r11
   140041a5e:	cmp    DWORD PTR [rbx],esi
   140041a60:	add    BYTE PTR ss:[rax],al
   140041a63:	add    BYTE PTR [rbx+0x50],al
   140041a66:	cmp    DWORD PTR [rbx],esi
   140041a68:	add    BYTE PTR ss:[rax],al
   140041a6b:	add    BYTE PTR [rdi+0x42],al
   140041a6e:	rex.WXB add BYTE PTR [r9+r14*1+0x30],bpl
   140041a73:	add    BYTE PTR [rax],al
   140041a75:	add    BYTE PTR [rax],al
   140041a77:	add    BYTE PTR [rcx+riz*2+0x74],ch
   140041a7b:	imul   ebp,DWORD PTR [rsi+0x31],0x53490030
   140041a82:	rex.WRXB pop r15
   140041a84:	cmp    BYTE PTR [rax],bh
   140041a86:	xor    eax,0x36312d39
   140041a8b:	add    BYTE PTR [rax],al
   140041a8d:	add    BYTE PTR [rax],al
   140041a8f:	add    BYTE PTR [rcx+0x53],cl
   140041a92:	rex.WRXB pop r15
   140041a94:	cmp    BYTE PTR [rax],bh
   140041a96:	xor    eax,0x36312d39
   140041a9b:	cmp    dh,BYTE PTR [rdx]
   140041a9d:	xor    BYTE PTR [rax],dh
   140041a9f:	xor    DWORD PTR [rax],eax
   140041aa1:	add    BYTE PTR [rax],al
   140041aa3:	add    BYTE PTR [rax],al
   140041aa5:	add    BYTE PTR [rax],al
   140041aa7:	add    BYTE PTR [rcx+0x73],ch
   140041aaa:	outs   dx,DWORD PTR ds:[rsi]
   140041aab:	sub    eax,0x322d7269
   140041ab0:	xor    dh,BYTE PTR [rsi]
   140041ab2:	add    BYTE PTR [rax],al
   140041ab4:	add    BYTE PTR [rax],al
   140041ab6:	add    BYTE PTR [rax],al
   140041ab8:	rex.WB push r11
   140041aba:	rex.WRXB sub rax,0x39353838
   140041ac0:	sub    eax,0x65003631
   140041ac5:	jne    0x140041b2a
   140041ac7:	push   rsp
   140041ac8:	rex.W add BYTE PTR [rax],al
   140041acb:	add    BYTE PTR [rax],al
   140041acd:	add    BYTE PTR [rax],al
   140041acf:	add    BYTE PTR [rcx+rbp*2+0x73],dh
   140041ad3:	xor    dh,BYTE PTR ss:[rax]
   140041ad6:	xor    dh,BYTE PTR cs:[rip+0x3333]        # 0x140044e10
   140041add:	add    BYTE PTR [rax],al
   140041adf:	add    BYTE PTR [rcx+rcx*2+0x53],dl
   140041ae3:	sub    eax,0x303236
   140041ae8:	imul   esp,DWORD PTR [rdx+0x6d],0x3630392d
   140041aef:	add    BYTE PTR ss:[rax],al
   140041af2:	add    BYTE PTR [rax],al
   140041af4:	movsxd esi,DWORD PTR [rax+0x38]
   140041af7:	(bad)  
   140041af8:	xor    al,0x0
   140041afa:	add    BYTE PTR [rax],al
   140041afc:	add    BYTE PTR [rax],al
   140041afe:	add    BYTE PTR [rax],al
   140041b00:	imul   esp,DWORD PTR [rdx+0x6d],0x3437382d
   140041b07:	pop    rdi
   140041b08:	push   rax
   140041b09:	xor    DWORD PTR [rax],esi
   140041b0b:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d5442
   140041b11:	add    BYTE PTR [rax],al
   140041b13:	add    BYTE PTR [rax],al
   140041b15:	add    BYTE PTR [rax],al
   140041b17:	add    BYTE PTR [rcx+0x62],ch
   140041b1a:	ins    DWORD PTR es:[rdi],dx
   140041b1b:	sub    eax,0x343738
   140041b20:	imul   esi,DWORD PTR [rbx+0x6f],0x39353838
   140041b27:	pop    rdi
   140041b28:	xor    DWORD PTR [rip+0x6964665f],esi        # 0x1a968818d
   140041b2e:	jae    0x140041b30
   140041b30:	cmp    DWORD PTR [rdx],esi
   140041b32:	xor    eax,DWORD PTR [rax]
   140041b34:	movsxd esi,DWORD PTR [rax+0x39]
   140041b37:	xor    dh,BYTE PTR [rbx]
   140041b39:	add    BYTE PTR [rax],al
   140041b3b:	add    BYTE PTR [rax],al
   140041b3d:	add    BYTE PTR [rax],al
   140041b3f:	add    BYTE PTR [rbx+0x73],ah
   140041b42:	imul   esi,DWORD PTR [rbx+0x6f],0x6974616c
   140041b49:	outs   dx,BYTE PTR ds:[rsi]
   140041b4a:	cmp    DWORD PTR [rax],eax
   140041b4c:	add    BYTE PTR [rax],al
   140041b4e:	add    BYTE PTR [rax],al
   140041b50:	movsxd esi,DWORD PTR [rbx+0x69]
   140041b53:	jae    0x140041bc4
   140041b55:	ins    BYTE PTR es:[rdi],dx
   140041b56:	(bad)  
   140041b57:	je     0x140041bc2
   140041b59:	outs   dx,BYTE PTR ds:[rsi]
   140041b5a:	xor    BYTE PTR [rax],al
   140041b5c:	ins    BYTE PTR es:[rdi],dx
   140041b5d:	(bad)  
   140041b5e:	je     0x140041bc9
   140041b60:	outs   dx,BYTE PTR ds:[rsi]
   140041b61:	xor    BYTE PTR [rax],al
   140041b63:	add    BYTE PTR [rax],al
   140041b65:	add    BYTE PTR [rax],al
   140041b67:	add    BYTE PTR [rax],bh
   140041b69:	cmp    BYTE PTR [rip+0x35315f39],dh        # 0x175357aa8
   140041b6f:	add    BYTE PTR [rcx+rdi*1+0x0],ch
   140041b73:	add    BYTE PTR [rax],al
   140041b75:	add    BYTE PTR [rax],al
   140041b77:	add    BYTE PTR [rcx+0x62],ch
   140041b7a:	ins    DWORD PTR es:[rdi],dx
   140041b7b:	sub    eax,0x333239
   140041b80:	imul   esp,DWORD PTR [rdx+0x6d],0x3332392d
   140041b87:	pop    rdi
   140041b88:	push   rax
   140041b89:	xor    DWORD PTR [rax],esi
   140041b8b:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d54c2
   140041b91:	add    BYTE PTR [rax],al
   140041b93:	add    BYTE PTR [rax],al
   140041b95:	add    BYTE PTR [rax],al
   140041b97:	add    BYTE PTR [rcx+riz*2+0x74],cl
   140041b9b:	imul   ebp,DWORD PTR [rsi+0x2d],0x53490039
   140041ba2:	rex.WRXB pop r15
   140041ba4:	cmp    BYTE PTR [rax],bh
   140041ba6:	xor    eax,0x35312d39
   140041bab:	add    BYTE PTR [rax],al
   140041bad:	add    BYTE PTR [rax],al
   140041baf:	add    BYTE PTR [rcx+0x53],cl
   140041bb2:	rex.WRXB sub rax,0x39353838
   140041bb8:	sub    eax,0x6c003531
   140041bbd:	cmp    BYTE PTR [rax],al
   140041bbf:	add    BYTE PTR [rcx+0x73],ch
   140041bc2:	outs   dx,DWORD PTR ds:[rsi]
   140041bc3:	sub    eax,0x746c6563
   140041bc8:	imul   esp,DWORD PTR [rbx+0x0],0x74616c00
   140041bcf:	imul   ebp,DWORD PTR [rsi+0x38],0x0
   140041bd6:	add    BYTE PTR [rax],al
   140041bd8:	rex.WB push r11
   140041bda:	rex.WRXB pop r15
   140041bdc:	cmp    BYTE PTR [rax],bh
   140041bde:	xor    eax,0x34312d39
   140041be3:	add    BYTE PTR [rax],al
   140041be5:	add    BYTE PTR [rax],al
   140041be7:	add    BYTE PTR [rcx+0x53],cl
   140041bea:	rex.WRXB pop r15
   140041bec:	cmp    BYTE PTR [rax],bh
   140041bee:	xor    eax,0x34312d39
   140041bf3:	cmp    dh,BYTE PTR [rcx]
   140041bf5:	cmp    DWORD PTR [rcx],edi
   140041bf7:	cmp    BYTE PTR [rax],al
   140041bf9:	add    BYTE PTR [rax],al
   140041bfb:	add    BYTE PTR [rax],al
   140041bfd:	add    BYTE PTR [rax],al
   140041bff:	add    BYTE PTR [rcx+0x73],ch
   140041c02:	outs   dx,DWORD PTR ds:[rsi]
   140041c03:	sub    eax,0x312d7269
   140041c08:	cmp    DWORD PTR [rcx],edi
   140041c0a:	add    BYTE PTR [rax],al
   140041c0c:	add    BYTE PTR [rax],al
   140041c0e:	add    BYTE PTR [rax],al
   140041c10:	rex.WB push r11
   140041c12:	rex.WRXB sub rax,0x39353838
   140041c18:	sub    eax,0x39003431
   140041c1d:	xor    dh,BYTE PTR [rcx]
   140041c1f:	add    BYTE PTR [rbx+0x70],ah
   140041c22:	cmp    DWORD PTR [rdx],esi
   140041c24:	xor    DWORD PTR [rax],eax
   140041c26:	add    BYTE PTR [rax],al
   140041c28:	cmp    BYTE PTR [rax],bh
   140041c2a:	xor    eax,0x33315f39
   140041c2f:	add    BYTE PTR [rcx+0x62],ch
   140041c32:	ins    DWORD PTR es:[rdi],dx
   140041c33:	sub    eax,0x313239
   140041c38:	imul   esp,DWORD PTR [rdx+0x6d],0x3132392d
   140041c3f:	pop    rdi
   140041c40:	push   rax
   140041c41:	xor    DWORD PTR [rax],esi
   140041c43:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d557a
   140041c49:	add    BYTE PTR [rax],al
   140041c4b:	add    BYTE PTR [rax],al
   140041c4d:	add    BYTE PTR [rax],al
   140041c4f:	add    BYTE PTR [rcx+0x53],cl
   140041c52:	rex.WRXB sub rax,0x39353838
   140041c58:	sub    eax,0x63003331
   140041c5d:	jo     0x140041c90
   140041c5f:	xor    dh,BYTE PTR [rax]
   140041c61:	cmp    BYTE PTR [rax],al
   140041c63:	add    BYTE PTR [rax],al
   140041c65:	add    BYTE PTR [rax],al
   140041c67:	add    BYTE PTR [rcx+0x62],ch
   140041c6a:	ins    DWORD PTR es:[rdi],dx
   140041c6b:	sub    eax,0x39353731
   140041c70:	xor    eax,DWORD PTR [rax]
   140041c72:	add    BYTE PTR [rax],al
   140041c74:	add    BYTE PTR [rax],al
   140041c76:	add    BYTE PTR [rax],al
   140041c78:	imul   esp,DWORD PTR [rdx+0x6d],0x3537312d
   140041c7f:	cmp    DWORD PTR [rdx],esi
   140041c81:	add    BYTE PTR [rax],al
   140041c83:	add    BYTE PTR [rax],al
   140041c85:	add    BYTE PTR [rax],al
   140041c87:	add    BYTE PTR [rcx+0x62],ch
   140041c8a:	ins    DWORD PTR es:[rdi],dx
   140041c8b:	sub    eax,0x39343331
   140041c90:	(bad)  
   140041c91:	add    BYTE PTR [rax],al
   140041c93:	add    BYTE PTR [rax],al
   140041c95:	add    BYTE PTR [rax],al
   140041c97:	add    BYTE PTR [rcx+0x62],ch
   140041c9a:	ins    DWORD PTR es:[rdi],dx
   140041c9b:	sub    eax,0x39343331
   140041ca0:	add    BYTE PTR ss:[rax],al
   140041ca3:	add    BYTE PTR [rax],al
   140041ca5:	add    BYTE PTR [rax],al
   140041ca7:	add    BYTE PTR [rcx+0x62],ch
   140041caa:	ins    DWORD PTR es:[rdi],dx
   140041cab:	sub    eax,0x35303335
	...
   140041cb8:	imul   esp,DWORD PTR [rdx+0x6d],0x3033352d
   140041cbf:	xor    al,0x0
   140041cc1:	add    BYTE PTR [rax],al
   140041cc3:	add    BYTE PTR [rax],al
   140041cc5:	add    BYTE PTR [rax],al
   140041cc7:	add    BYTE PTR [rcx+0x62],ch
   140041cca:	ins    DWORD PTR es:[rdi],dx
   140041ccb:	sub    eax,0x39303231
	...
   140041cd8:	imul   esp,DWORD PTR [rdx+0x6d],0x3032312d
   140041cdf:	cmp    BYTE PTR [rax],al
   140041ce1:	add    BYTE PTR [rax],al
   140041ce3:	add    BYTE PTR [rax],al
   140041ce5:	add    BYTE PTR [rax],al
   140041ce7:	add    BYTE PTR [rcx+0x53],cl
   140041cea:	rex.WRXB sub rax,0x32323032
   140041cf0:	sub    eax,0x452d4e43
   140041cf5:	pop    rax
   140041cf6:	push   rsp
   140041cf7:	add    BYTE PTR [rbx+0x73],ah
   140041cfa:	rex.WB push r11
   140041cfc:	rex.WRXB xor r14b,BYTE PTR [r8]
   140041cff:	xor    dh,BYTE PTR [rdx]
   140041d01:	rex.XB
   140041d02:	rex.WRX add BYTE PTR [rax],r8b
   140041d05:	add    BYTE PTR [rax],al
   140041d07:	add    BYTE PTR [rcx+0x53],cl
   140041d0a:	rex.WRXB sub rax,0x32323032
   140041d10:	sub    eax,0x4e43
   140041d15:	add    BYTE PTR [rax],al
   140041d17:	add    BYTE PTR [rbx+0x73],ah
   140041d1a:	push   rbp
   140041d1b:	outs   dx,BYTE PTR ds:[rsi]
   140041d1c:	imul   esp,DWORD PTR [rbx+0x6f],0x31316564
   140041d23:	push   rbp
   140041d24:	push   rsp
   140041d25:	rex.RX (bad) 
   140041d27:	add    BYTE PTR [rbp+0x4e],dl
   140041d2a:	rex.WB
   140041d2b:	rex.XB
   140041d2c:	rex.WRXB
   140041d2d:	rex.R
   140041d2e:	rex.RB sub eax,0x2d312d31
   140041d34:	push   rbp
   140041d35:	push   rsp
   140041d36:	rex.RX sub eax,0x37
   140041d3c:	add    BYTE PTR [rax],al
   140041d3e:	add    BYTE PTR [rax],al
   140041d40:	movsxd esi,DWORD PTR [rbx+0x4b]
   140041d43:	push   rbx
   140041d44:	rex.XB xor eax,0x363336
   140041d4a:	add    BYTE PTR [rax],al
   140041d4c:	add    BYTE PTR [rax],al
   140041d4e:	add    BYTE PTR [rax],al
   140041d50:	rex.WB push r11
   140041d52:	rex.WRXB
   140041d53:	ss xor al,0x36
   140041d56:	sub    eax,0x524b
   140041d5b:	add    BYTE PTR [rax],al
   140041d5d:	add    BYTE PTR [rax],al
   140041d5f:	add    BYTE PTR [rbx+0x53],cl
   140041d62:	rex.XB xor eax,0x363336
   140041d68:	movsxd esi,DWORD PTR [rbx+0x44]
   140041d6b:	rex.WXB push r13
   140041d6d:	push   rbx
   140041d6e:	add    BYTE PTR [rax],al
   140041d70:	imul   ebp,DWORD PTR fs:[rip+0x7375],0x0        # 0x1400490ed
   140041d78:	movsxd esi,DWORD PTR [rbx+0x55]
   140041d7b:	push   rbx
   140041d7c:	rex.R
   140041d7d:	rex.WXB add BYTE PTR [r8],al
   140041d80:	jne    0x140041df5
   140041d82:	sub    eax,0x6b64
   140041d87:	add    BYTE PTR [rbx+0x73],ah
   140041d8a:	rex.WB push r11
   140041d8c:	rex.WRXB
   140041d8d:	ss xor al,0x36
   140041d90:	rex.R (bad) 
   140041d92:	outs   dx,BYTE PTR ds:[rsi]
   140041d93:	imul   esi,DWORD PTR [rbx+0x68],0x6b640000
   140041d9a:	add    BYTE PTR [rax],al
   140041d9c:	add    BYTE PTR [rax],al
   140041d9e:	add    BYTE PTR [rax],al
   140041da0:	rex.WB push r11
   140041da2:	rex.WRXB
   140041da3:	ss xor al,0x36
   140041da6:	sub    eax,0x4b44
   140041dab:	add    BYTE PTR [rbx+rdx*2+0x32],al
   140041daf:	xor    BYTE PTR [rax],bh
   140041db1:	cmp    DWORD PTR [rax],eax
   140041db3:	add    BYTE PTR [rax],al
   140041db5:	add    BYTE PTR [rax],al
   140041db7:	add    BYTE PTR [rbx+rdx*2+0x5f],al
   140041dbb:	xor    dh,BYTE PTR [rax]
   140041dbd:	cmp    BYTE PTR [rcx],bh
   140041dbf:	add    BYTE PTR [rbx+0x73],ah
   140041dc2:	rex.WB push r11
   140041dc4:	rex.WRXB xor QWORD PTR [rip+0x53494a39],r14        # 0x1934d6804
   140041dcb:	pop    rax
   140041dcc:	xor    BYTE PTR [rdx],dh
   140041dce:	xor    DWORD PTR [rdx],esi
   140041dd0:	xor    DWORD PTR [rcx],edi
   140041dd2:	cmp    DWORD PTR [rax],esi
   140041dd4:	add    BYTE PTR [rax],al
   140041dd6:	add    BYTE PTR [rax],al
   140041dd8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140041ddf:	xor    DWORD PTR [rip+0x78000039],esi        # 0x1b8041e1e
   140041de5:	xor    BYTE PTR [rdx],dh
   140041de7:	xor    DWORD PTR [rdx],esi
   140041de9:	add    BYTE PTR [rax],al
   140041deb:	add    BYTE PTR [rax],al
   140041ded:	add    BYTE PTR [rax],al
   140041def:	add    BYTE PTR [rdx+0x49],cl
   140041df2:	push   rbx
   140041df3:	pop    rdi
   140041df4:	pop    rax
   140041df5:	xor    BYTE PTR [rdx],dh
   140041df7:	xor    DWORD PTR [rdx],esi
   140041df9:	sub    eax,0x30393931
   140041dfe:	add    BYTE PTR [rax],al
   140041e00:	movsxd esi,DWORD PTR [rbx+0x49]
   140041e03:	push   rbx
   140041e04:	rex.WRXB xor QWORD PTR [rip+0x70614c38],r14        # 0x1b0656a43
   140041e0b:	add    BYTE PTR [rax],al
   140041e0d:	add    BYTE PTR [rax],al
   140041e0f:	add    BYTE PTR [rcx+0x73],ch
   140041e12:	outs   dx,DWORD PTR ds:[rsi]
   140041e13:	sub    eax,0x312d7269
   140041e18:	xor    eax,0x6c000038
   140041e1d:	(bad)  
   140041e1e:	jo     0x140041e20
   140041e20:	ins    BYTE PTR es:[rdi],dx
   140041e21:	(bad)  
   140041e22:	je     0x140041e8d
   140041e24:	outs   dx,BYTE PTR ds:[rsi]
   140041e25:	sub    eax,0x70616c
   140041e2a:	add    BYTE PTR [rax],al
   140041e2c:	add    BYTE PTR [rax],al
   140041e2e:	add    BYTE PTR [rax],al
   140041e30:	movsxd esi,DWORD PTR [rbx+0x49]
   140041e33:	push   rbx
   140041e34:	rex.WRXB xor QWORD PTR [r8],r14
   140041e37:	xor    esi,DWORD PTR [rsi]
   140041e39:	(bad)  
   140041e3a:	rex.X outs dx,DWORD PTR ds:[rsi]
   140041e3c:	js     0x140041e3e
   140041e3e:	add    BYTE PTR [rax],al
   140041e40:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140041e47:	xor    DWORD PTR [rip+0x35],esi        # 0x140041e82
   140041e4d:	add    BYTE PTR [rax],al
   140041e4f:	add    BYTE PTR [rcx+0x53],cl
   140041e52:	rex.WRXB pop r15
   140041e54:	xor    DWORD PTR [rax],esi
   140041e56:	xor    esi,DWORD PTR [rsi]
   140041e58:	(bad)  
   140041e59:	sub    eax,0x786f62
   140041e5e:	add    BYTE PTR [rax],al
   140041e60:	movsxd esi,DWORD PTR [rbx+0x49]
   140041e63:	push   rbx
   140041e64:	rex.WRXB cmp BYTE PTR [r8],r15b
   140041e67:	xor    eax,0x70755339
   140041e6c:	jo     0x140041e6e
   140041e6e:	add    BYTE PTR [rax],al
   140041e70:	ins    BYTE PTR es:[rdi],dx
   140041e71:	(bad)  
   140041e72:	je     0x140041edd
   140041e74:	outs   dx,BYTE PTR ds:[rsi]
   140041e75:	xor    DWORD PTR [rip+0x352d32],ebp        # 0x140394bad
   140041e7b:	add    BYTE PTR [rax],al
   140041e7d:	add    BYTE PTR [rax],al
   140041e7f:	add    BYTE PTR [rcx+0x73],ch
   140041e82:	outs   dx,DWORD PTR ds:[rsi]
   140041e83:	sub    eax,0x312d7269
   140041e88:	xor    eax,0x34
   140041e8d:	add    BYTE PTR [rax],al
   140041e8f:	add    BYTE PTR [rcx+0x53],cl
   140041e92:	rex.WRXB pop r15
   140041e94:	cmp    BYTE PTR [rax],bh
   140041e96:	xor    eax,0x75732d39
   140041e9b:	jo     0x140041f0d
   140041e9d:	add    BYTE PTR [rax],al
   140041e9f:	add    BYTE PTR [rbx+0x73],ah
   140041ea2:	rex.WB push r11
   140041ea4:	rex.WRXB xor QWORD PTR [rip+0x534f4733],r14        # 0x1935365de
   140041eab:	push   rsp
   140041eac:	xor    DWORD PTR [rcx],edi
   140041eae:	(bad)  
   140041eaf:	cmp    BYTE PTR ss:[rdi],dh
   140041eb2:	xor    al,0x0
   140041eb4:	add    BYTE PTR [rax],al
   140041eb6:	add    BYTE PTR [rax],al
   140041eb8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140041ebf:	xor    DWORD PTR [rip+0x33],esi        # 0x140041ef8
   140041ec5:	add    BYTE PTR [rax],al
   140041ec7:	add    BYTE PTR [rbx+0x54],dl
   140041eca:	pop    rdi
   140041ecb:	push   rbx
   140041ecc:	rex.RB push r14
   140041ece:	pop    rdi
   140041ecf:	xor    esi,DWORD PTR [rip+0x38382d38]        # 0x1783c4c0d
   140041ed5:	add    BYTE PTR [rax],al
   140041ed7:	add    BYTE PTR [rdi+0x4f],al
   140041eda:	push   rbx
   140041edb:	push   rsp
   140041edc:	pop    rdi
   140041edd:	xor    DWORD PTR [rcx],edi
   140041edf:	(bad)  
   140041ee0:	cmp    BYTE PTR ss:[rip+0x3437],ch        # 0x14004531e
   140041ee7:	add    BYTE PTR [rbx+0x73],ah
   140041eea:	rex.WB push r11
   140041eec:	rex.WRXB
   140041eed:	cmp    DWORD PTR ss:[rbx],esi
   140041ef0:	(bad)  
   140041ef1:	rex.B
   140041ef2:	fs add BYTE PTR fs:[rax],al
   140041ef6:	add    BYTE PTR [rax],al
   140041ef8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140041eff:	xor    DWORD PTR [rip+0x32],esi        # 0x140041f37
   140041f05:	add    BYTE PTR [rax],al
   140041f07:	add    BYTE PTR [rcx+0x53],cl
   140041f0a:	rex.WRXB pop r15
   140041f0c:	cmp    DWORD PTR ss:[rbx],esi
   140041f0f:	(bad)  
   140041f10:	sub    eax,0x35322d32
   140041f15:	add    BYTE PTR [rax],al
   140041f17:	add    BYTE PTR [rbx+0x73],ah
   140041f1a:	rex.WB push r11
   140041f1c:	rex.WRXB xor QWORD PTR [rip+0x62754331],r14        # 0x1a2796254
   140041f23:	(bad)  
   140041f24:	add    BYTE PTR [rax],al
   140041f26:	add    BYTE PTR [rax],al
   140041f28:	rex.WB push r11
   140041f2a:	rex.WRXB
   140041f2b:	ss xor al,0x36
   140041f2e:	sub    eax,0x5543
   140041f33:	add    BYTE PTR [rax],al
   140041f35:	add    BYTE PTR [rax],al
   140041f37:	add    BYTE PTR [rcx+0x73],ch
   140041f3a:	outs   dx,DWORD PTR ds:[rsi]
   140041f3b:	sub    eax,0x312d7269
   140041f40:	xor    eax,0x63000031
   140041f45:	jne    0x140041fa9
   140041f47:	(bad)  
	...
   140041f50:	rex.WRX
   140041f51:	rex.XB pop r15
   140041f53:	rex.WRX
   140041f54:	rex.XB xor BYTE PTR [r8],sil
   140041f57:	sub    eax,0x383a3031
   140041f5c:	xor    DWORD PTR [rax],eax
   140041f5e:	add    BYTE PTR [rax],al
   140041f60:	movsxd esi,DWORD PTR [rbx+0x49]
   140041f63:	push   rbx
   140041f64:	rex.WRXB xor QWORD PTR [rip+0x65724730],r14        # 0x1a576669b
   140041f6b:	imul   eax,DWORD PTR gs:[rbx+0x43],0x49
   140041f70:	push   rsp
   140041f71:	push   rsp
   140041f72:	add    BYTE PTR [rax],al
   140041f74:	add    BYTE PTR [rax],al
   140041f76:	add    BYTE PTR [rax],al
   140041f78:	movsxd esi,DWORD PTR [rbx+0x49]
   140041f7b:	push   rbx
   140041f7c:	rex.WRXB xor QWORD PTR [rip+0x30],r14        # 0x140041fb3
   140041f83:	add    BYTE PTR [rax],al
   140041f85:	add    BYTE PTR [rax],al
   140041f87:	add    BYTE PTR [rcx+0x73],ch
   140041f8a:	outs   dx,DWORD PTR ds:[rsi]
   140041f8b:	sub    eax,0x312d7269
   140041f90:	xor    eax,0x30
   140041f95:	add    BYTE PTR [rax],al
   140041f97:	add    BYTE PTR [rdi+0x72],ah
   140041f9a:	gs imul ebp,DWORD PTR gs:[rip+0x74696363],0x74        # 0x1b46d8306
   140041fa3:	add    BYTE PTR [rax],al
   140041fa5:	add    BYTE PTR [rax],al
   140041fa7:	add    BYTE PTR [rbx+0x73],ah
   140041faa:	rex.WB push r11
   140041fac:	xor    QWORD PTR [r15+r14*1],r14
   140041fb0:	rex.WRB (bad) 
   140041fb2:	movsxd esp,DWORD PTR [rbp+0x64]
   140041fb5:	outs   dx,DWORD PTR ds:[rsi]
   140041fb6:	outs   dx,BYTE PTR ds:[rsi]
   140041fb7:	imul   esp,DWORD PTR [rcx+0x6e],0x0
   140041fbe:	add    BYTE PTR [rax],al
   140041fc0:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140041fc7:	xor    DWORD PTR [rdi+rsi*1],esi
   140041fca:	add    BYTE PTR [rax],al
   140041fcc:	add    BYTE PTR [rax],al
   140041fce:	add    BYTE PTR [rax],al
   140041fd0:	ins    DWORD PTR es:[rdi],dx
   140041fd1:	(bad)  
   140041fd2:	movsxd esp,DWORD PTR [rbp+0x64]
   140041fd5:	outs   dx,DWORD PTR ds:[rsi]
   140041fd6:	outs   dx,BYTE PTR ds:[rsi]
   140041fd7:	imul   esp,DWORD PTR [rcx+0x6e],0x0
   140041fde:	add    BYTE PTR [rax],al
   140041fe0:	rex.WX push rbp
   140041fe2:	push   rbx
   140041fe3:	pop    rdi
   140041fe4:	rex.WB
   140041fe5:	rex.X xor DWORD PTR cs:[rsi],ebp
   140041fe9:	xor    BYTE PTR [rax],dh
   140041feb:	xor    ebp,DWORD PTR [rip+0x63616d]        # 0x14067815e
   140041ff1:	add    BYTE PTR [rax],al
   140041ff3:	add    BYTE PTR [rax],al
   140041ff5:	add    BYTE PTR [rax],al
   140041ff7:	add    BYTE PTR [rbx+0x73],ah
   140041ffa:	rex.WB push r11
   140041ffc:	xor    QWORD PTR [r14+r14*1],r14
   140042000:	push   rbx
   140042001:	gs jb  0x140042066
   140042004:	imul   esp,DWORD PTR [rcx+0x6e],0x72657300
   14004200b:	(bad)  
   14004200c:	imul   esp,DWORD PTR [rcx+0x6e],0x6f736900
   140042013:	sub    eax,0x312d7269
   140042018:	xor    al,0x36
   14004201a:	add    BYTE PTR [rax],al
   14004201c:	add    BYTE PTR [rax],al
   14004201e:	add    BYTE PTR [rax],al
   140042020:	rex.WX push rbp
   140042022:	push   rbx
   140042023:	pop    rdi
   140042024:	rex.WB
   140042025:	rex.X xor DWORD PTR cs:[rsi],ebp
   140042029:	xor    BYTE PTR [rax],dh
   14004202b:	xor    ebp,DWORD PTR [rip+0x62726573]        # 0x1a27685a4
   140042031:	add    BYTE PTR [rax],al
   140042033:	add    BYTE PTR [rax],al
   140042035:	add    BYTE PTR [rax],al
   140042037:	add    BYTE PTR [rbx+0x73],ah
   14004203a:	rex.WB push r11
   14004203c:	xor    QWORD PTR [r11+r14*1],r14
   140042040:	rex.WB
   140042041:	rex.RB
   140042042:	rex.XB push r8
   140042044:	xor    dh,BYTE PTR [rdi]
   140042046:	xor    DWORD PTR [rax],eax
   140042048:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   14004204f:	xor    DWORD PTR [rbx+rsi*1],esi
   140042052:	add    BYTE PTR [rax],al
   140042054:	add    BYTE PTR [rax],al
   140042056:	add    BYTE PTR [rax],al
   140042058:	rex.WB
   140042059:	rex.RB
   14004205a:	rex.XB pop r15
   14004205c:	push   rax
   14004205d:	xor    dh,BYTE PTR [rdi]
   14004205f:	sub    eax,0x31
   140042064:	add    BYTE PTR [rax],al
   140042066:	add    BYTE PTR [rax],al
   140042068:	movsxd esi,DWORD PTR [rbx+0x49]
   14004206b:	push   rbx
   14004206c:	xor    QWORD PTR [r9+r14*1],r14
   140042070:	rex.WX push rbp
   140042072:	push   rbx
   140042073:	rex.WB
   140042074:	rex.X xor DWORD PTR [rax],esi
   140042077:	xor    BYTE PTR [rdx],dh
   140042079:	add    BYTE PTR [rax],al
   14004207b:	add    BYTE PTR [rcx+0x75],bh
   14004207e:	add    BYTE PTR [rax],al
   140042080:	push   0x73
   140042082:	add    BYTE PTR [rax],al
   140042084:	add    BYTE PTR [rax],al
   140042086:	add    BYTE PTR [rax],al
   140042088:	rex.WB push r11
   14004208a:	rex.WRXB
   14004208b:	ss xor al,0x36
   14004208e:	sub    eax,0x5559
   140042093:	add    BYTE PTR [rax],al
   140042095:	add    BYTE PTR [rax],al
   140042097:	add    BYTE PTR [rcx+0x73],ch
   14004209a:	outs   dx,DWORD PTR ds:[rsi]
   14004209b:	sub    eax,0x312d7269
   1400420a0:	xor    al,0x31
   1400420a2:	add    BYTE PTR [rax],al
   1400420a4:	add    BYTE PTR [rax],al
   1400420a6:	add    BYTE PTR [rax],al
   1400420a8:	rex.WX push rbp
   1400420aa:	push   rbx
   1400420ab:	pop    rdi
   1400420ac:	rex.WB
   1400420ad:	rex.X xor DWORD PTR cs:[rsi],ebp
   1400420b1:	xor    BYTE PTR [rax],dh
   1400420b3:	xor    al,BYTE PTR [rax]
   1400420b5:	add    BYTE PTR [rax],al
   1400420b7:	add    BYTE PTR [rbx+0x73],ah
   1400420ba:	rex.WB push r11
   1400420bc:	rex.WRXB xor QWORD PTR [r11],r14
   1400420bf:	cmp    DWORD PTR [rbx+0x53],eax
   1400420c2:	rex.WRX xor r14,QWORD PTR [rsi]
   1400420c5:	cmp    DWORD PTR [rcx],esi
   1400420c7:	xor    BYTE PTR [rbx],dh
   1400420c9:	add    BYTE PTR [rax],al
   1400420cb:	add    BYTE PTR [rax],al
   1400420cd:	add    BYTE PTR [rax],al
   1400420cf:	add    BYTE PTR [rcx+0x73],ch
   1400420d2:	outs   dx,DWORD PTR ds:[rsi]
   1400420d3:	sub    eax,0x312d7269
   1400420d8:	xor    edi,DWORD PTR [rcx]
   1400420da:	add    BYTE PTR [rax],al
   1400420dc:	add    BYTE PTR [rax],al
   1400420de:	add    BYTE PTR [rax],al
   1400420e0:	rex.XB push r11
   1400420e2:	rex.WRX pop rdi
   1400420e4:	xor    esi,DWORD PTR [rsi]
   1400420e6:	cmp    DWORD PTR [rcx],esi
   1400420e8:	xor    BYTE PTR [rbx],dh
   1400420ea:	add    BYTE PTR [rax],al
   1400420ec:	add    BYTE PTR [rax],al
   1400420ee:	add    BYTE PTR [rax],al
   1400420f0:	rex.WB push r11
   1400420f2:	rex.WRXB sub rax,0x39353838
   1400420f8:	sub    eax,0x492d38
   1400420fd:	add    BYTE PTR [rax],al
   1400420ff:	add    BYTE PTR [rbx+0x73],ah
   140042102:	rex.WB push r11
   140042104:	rex.WRXB cmp BYTE PTR [r8],r15b
   140042107:	xor    eax,0x493839
   14004210c:	add    BYTE PTR [rax],al
   14004210e:	add    BYTE PTR [rax],al
   140042110:	rex.WB push r11
   140042112:	rex.WRXB pop r15
   140042114:	cmp    BYTE PTR [rax],bh
   140042116:	xor    eax,0x2d382d39
   14004211b:	rex.WB add BYTE PTR [r8],al
   14004211e:	add    BYTE PTR [rax],al
   140042120:	rex.WB push r11
   140042122:	rex.WRXB sub rax,0x39353838
   140042128:	sub    eax,0x452d38
   14004212d:	add    BYTE PTR [rax],al
   14004212f:	add    BYTE PTR [rbx+0x73],ah
   140042132:	rex.WB push r11
   140042134:	rex.WRXB cmp BYTE PTR [r8],r15b
   140042137:	xor    eax,0x453839
   14004213c:	add    BYTE PTR [rax],al
   14004213e:	add    BYTE PTR [rax],al
   140042140:	rex.WB push r11
   140042142:	rex.WRXB pop r15
   140042144:	cmp    BYTE PTR [rax],bh
   140042146:	xor    eax,0x2d382d39
   14004214b:	add    BYTE PTR [r8],r8b
   14004214e:	add    BYTE PTR [rax],al
   140042150:	movsxd esi,DWORD PTR [rbx+0x49]
   140042153:	push   rbx
   140042154:	rex.WRXB xor QWORD PTR [r10],r14
   140042157:	cmp    BYTE PTR [rcx+rsi*1+0x30],dl
   14004215b:	xor    DWORD PTR [rdi+0x32],eax
   14004215e:	add    BYTE PTR [rax],al
   140042160:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042167:	xor    DWORD PTR [rdx],esi
   140042169:	cmp    BYTE PTR [rax],al
   14004216b:	add    BYTE PTR [rax],al
   14004216d:	add    BYTE PTR [rax],al
   14004216f:	add    BYTE PTR [rsi+rbp*1+0x31],dl
   140042173:	xor    BYTE PTR [rcx],dh
   140042175:	sub    eax,0x3247
   14004217a:	add    BYTE PTR [rax],al
   14004217c:	add    BYTE PTR [rax],al
   14004217e:	add    BYTE PTR [rax],al
   140042180:	rex.WB push r11
   140042182:	rex.WRXB sub rax,0x39353838
   140042188:	sub    eax,0x492d36
   14004218d:	add    BYTE PTR [rax],al
   14004218f:	add    BYTE PTR [rbx+0x73],ah
   140042192:	rex.WB push r11
   140042194:	rex.WRXB cmp BYTE PTR [r8],r15b
   140042197:	xor    eax,0x493639
   14004219c:	add    BYTE PTR [rax],al
   14004219e:	add    BYTE PTR [rax],al
   1400421a0:	rex.WB push r11
   1400421a2:	rex.WRXB pop r15
   1400421a4:	cmp    BYTE PTR [rax],bh
   1400421a6:	xor    eax,0x2d362d39
   1400421ab:	rex.WB add BYTE PTR [r8],al
   1400421ae:	add    BYTE PTR [rax],al
   1400421b0:	rex.WB push r11
   1400421b2:	rex.WRXB sub rax,0x39353838
   1400421b8:	sub    eax,0x452d36
   1400421bd:	add    BYTE PTR [rax],al
   1400421bf:	add    BYTE PTR [rbx+0x73],ah
   1400421c2:	rex.WB push r11
   1400421c4:	rex.WRXB cmp BYTE PTR [r8],r15b
   1400421c7:	xor    eax,0x453639
   1400421cc:	add    BYTE PTR [rax],al
   1400421ce:	add    BYTE PTR [rax],al
   1400421d0:	rex.WB push r11
   1400421d2:	rex.WRXB pop r15
   1400421d4:	cmp    BYTE PTR [rax],bh
   1400421d6:	xor    eax,0x2d362d39
   1400421db:	add    BYTE PTR [r8],r8b
   1400421de:	add    BYTE PTR [rax],al
   1400421e0:	movsxd esi,DWORD PTR [rbx+0x49]
   1400421e3:	push   rbx
   1400421e4:	rex.WRXB xor QWORD PTR [r10],r14
   1400421e7:	xor    eax,DWORD PTR [rbx+0x53]
   1400421ea:	pop    r10
   1400421ec:	xor    dh,BYTE PTR [rbx+rsi*1]
   1400421ef:	xor    al,0x31
   1400421f1:	cmp    DWORD PTR [rax],edi
   1400421f3:	xor    eax,0x7267
   1400421f8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   1400421ff:	xor    DWORD PTR [rdx],esi
   140042201:	xor    eax,DWORD PTR [rax]
   140042203:	add    BYTE PTR [rax],al
   140042205:	add    BYTE PTR [rax],al
   140042207:	add    BYTE PTR [rbx+0x53],al
   14004220a:	pop    r15
   14004220c:	pop    rdx
   14004220d:	xor    dh,BYTE PTR [rbx+rsi*1]
   140042210:	cs xor al,0x2d
   140042213:	xor    DWORD PTR [rcx],edi
   140042215:	cmp    BYTE PTR [rip+0x72672d],dh        # 0x140768948
   14004221b:	add    BYTE PTR [rax],al
   14004221d:	add    BYTE PTR [rax],al
   14004221f:	add    BYTE PTR [rbx+0x73],ah
   140042222:	rex.WB push r11
   140042224:	rex.WRXB xor QWORD PTR [r10],r14
   140042227:	xor    al,BYTE PTR [rbx+0x61]
   14004222a:	outs   dx,BYTE PTR ds:[rsi]
   14004222b:	(bad)  
   14004222c:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x32
   140042234:	movsxd esi,DWORD PTR [rbx+0x61]
   140042237:	(bad)  
   140042238:	sub    eax,0x32
   14004223d:	add    BYTE PTR [rax],al
   14004223f:	add    BYTE PTR [rcx+0x53],cl
   140042242:	rex.WRXB
   140042243:	ss xor al,0x36
   140042246:	sub    eax,0x324143
   14004224b:	add    BYTE PTR [rax],al
   14004224d:	add    BYTE PTR [rax],al
   14004224f:	add    BYTE PTR [rcx+0x73],ch
   140042252:	outs   dx,DWORD PTR ds:[rsi]
   140042253:	sub    eax,0x312d7269
   140042258:	xor    dh,BYTE PTR [rdx]
   14004225a:	add    BYTE PTR [rax],al
   14004225c:	add    BYTE PTR [rax],al
   14004225e:	add    BYTE PTR [rax],al
   140042260:	rex.XB push r11
   140042262:	pop    r15
   140042264:	pop    rdx
   140042265:	xor    dh,BYTE PTR [rbx+rsi*1]
   140042268:	cs xor al,0x2d
   14004226b:	xor    DWORD PTR [rcx],edi
   14004226d:	cmp    BYTE PTR [rip+0x322d],dh        # 0x1400454a0
   140042273:	add    BYTE PTR [rax],al
   140042275:	add    BYTE PTR [rax],al
   140042277:	add    BYTE PTR [rbx+0x73],ah
   14004227a:	rex.WB push r11
   14004227c:	rex.WRXB xor QWORD PTR [r10],r14
   14004227f:	xor    DWORD PTR [rbx+0x61],eax
   140042282:	outs   dx,BYTE PTR ds:[rsi]
   140042283:	(bad)  
   140042284:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x31
   14004228c:	movsxd esp,DWORD PTR [rcx+0x0]
   14004228f:	add    BYTE PTR [rbx+0x73],ah
   140042292:	(bad)  
   140042293:	(bad)  
   140042294:	sub    eax,0x49000031
   140042299:	push   rbx
   14004229a:	rex.WRXB
   14004229b:	ss xor al,0x36
   14004229e:	sub    eax,0x4143
   1400422a3:	add    BYTE PTR [rax],al
   1400422a5:	add    BYTE PTR [rax],al
   1400422a7:	add    BYTE PTR [rcx+0x73],ch
   1400422aa:	outs   dx,DWORD PTR ds:[rsi]
   1400422ab:	sub    eax,0x312d7269
   1400422b0:	xor    dh,BYTE PTR [rcx]
   1400422b2:	add    BYTE PTR [rax],al
   1400422b4:	add    BYTE PTR [rax],al
   1400422b6:	add    BYTE PTR [rax],al
   1400422b8:	rex.XB push r11
   1400422ba:	pop    r15
   1400422bc:	pop    rdx
   1400422bd:	xor    dh,BYTE PTR [rbx+rsi*1]
   1400422c0:	cs xor al,0x2d
   1400422c3:	xor    DWORD PTR [rcx],edi
   1400422c5:	cmp    BYTE PTR [rip+0x312d],dh        # 0x1400453f8
   1400422cb:	add    BYTE PTR [rax],al
   1400422cd:	add    BYTE PTR [rax],al
   1400422cf:	add    BYTE PTR [rbx+0x73],ah
   1400422d2:	rex.WB push r11
   1400422d4:	rex.WRXB xor QWORD PTR [r9],r14
   1400422d7:	xor    DWORD PTR [rbp+0x43],eax
   1400422da:	rex.WRB
   1400422db:	rex.B
   1400422dc:	rex.XB jns 0x140042351
   1400422df:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x63
   1400422e7:	add    BYTE PTR [rbx+0x4f],cl
   1400422ea:	rex.WB cmp BYTE PTR [rip+0x69000045],bpl        # 0x1a9042336
   1400422f1:	jae    0x140042362
   1400422f3:	sub    eax,0x312d7269
   1400422f8:	xor    DWORD PTR [rcx],esi
   1400422fa:	add    BYTE PTR [rax],al
   1400422fc:	add    BYTE PTR [rax],al
   1400422fe:	add    BYTE PTR [rax],al
   140042300:	rex.RB
   140042301:	rex.XB
   140042302:	rex.WRB
   140042303:	rex.B sub eax,0x69727963
   140042309:	ins    BYTE PTR es:[rdi],dx
   14004230a:	ins    BYTE PTR es:[rdi],dx
   14004230b:	imul   esp,DWORD PTR [rbx+0x0],0x73630000
   140042312:	rex.WB push r11
   140042314:	rex.WRXB xor QWORD PTR [r8],r14
   140042317:	xor    edx,DWORD PTR [rsi+rsi*1+0x31]
   14004231b:	cmp    BYTE PTR [rdx+0x69],ah
   14004231e:	je     0x140042320
   140042320:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042327:	xor    DWORD PTR [rax],esi
   140042329:	xor    eax,DWORD PTR [rax]
   14004232b:	add    BYTE PTR [rsi+rbp*1+0x36],dl
   14004232f:	xor    DWORD PTR [rax],eax
   140042331:	add    BYTE PTR [rax],al
   140042333:	add    BYTE PTR [rax],al
   140042335:	add    BYTE PTR [rax],al
   140042337:	add    BYTE PTR [rsi+rbp*1+0x36],dl
   14004233b:	xor    DWORD PTR [rip+0x74696238],ebp        # 0x1b46d8579
   140042341:	add    BYTE PTR [rax],al
   140042343:	add    BYTE PTR [rax],al
   140042345:	add    BYTE PTR [rax],al
   140042347:	add    BYTE PTR [rbx+0x73],ah
   14004234a:	rex.WB push r11
   14004234c:	rex.WRXB xor QWORD PTR [r8],r14
   14004234f:	xor    dl,BYTE PTR [rsi+rsi*1+0x31]
   140042353:	(bad)  
   140042354:	(bad)  
   140042355:	imul   esi,DWORD PTR [rax+rax*1+0x69],0x692d6f73
   14004235d:	jb     0x14004238c
   14004235f:	xor    DWORD PTR [rax],esi
   140042361:	xor    al,BYTE PTR [rax]
   140042363:	add    BYTE PTR [rax],al
   140042365:	add    BYTE PTR [rax],al
   140042367:	add    BYTE PTR [rsi+rbp*1+0x36],dl
   14004236b:	xor    DWORD PTR [rip+0x74696237],ebp        # 0x1b46d85a8
   140042371:	add    BYTE PTR [rax],al
   140042373:	add    BYTE PTR [rax],al
   140042375:	add    BYTE PTR [rax],al
   140042377:	add    BYTE PTR [rbx+0x73],ah
   14004237a:	rex.WB push r11
   14004237c:	rex.WRXB cmp QWORD PTR [r9],r15
   14004237f:	rex.WRX
   140042380:	push   r8
   140042382:	rex.WR push rax
   140042384:	push   rbx
   140042385:	add    BYTE PTR [rax],al
   140042387:	add    BYTE PTR [rsi+0x41],cl
   14004238a:	push   rax
   14004238b:	rex.WR push rax
   14004238d:	push   rbx
   14004238e:	add    BYTE PTR [rax],al
   140042390:	rex.XB push r11
   140042392:	pop    r15
   140042394:	push   rsp
   140042395:	xor    eax,0x312d3030
   14004239a:	cmp    DWORD PTR [rax],edi
   14004239c:	xor    eax,DWORD PTR [rax]
   14004239e:	add    BYTE PTR [rax],al
   1400423a0:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   1400423a7:	cmp    DWORD PTR [rcx],edi
   1400423a9:	add    BYTE PTR [rax],al
   1400423ab:	add    BYTE PTR [rax],al
   1400423ad:	add    BYTE PTR [rax],al
   1400423af:	add    BYTE PTR [rcx+0x4e],al
   1400423b2:	push   rbx
   1400423b3:	rex.WB pop r15
   1400423b5:	pop    rax
   1400423b6:	xor    ebp,DWORD PTR [rsi]
   1400423b8:	xor    DWORD PTR [rcx],esi
   1400423ba:	xor    BYTE PTR [rip+0x33383931],ch        # 0x1733c5cf1
	...
   1400423c8:	movsxd esi,DWORD PTR [rbx+0x49]
   1400423cb:	push   rbx
   1400423cc:	rex.WRXB xor r14b,BYTE PTR [r8]
   1400423cf:	xor    esi,DWORD PTR [rbx]
   1400423d1:	add    BYTE PTR [rax],al
   1400423d3:	add    BYTE PTR [rbp+0x31],ah
   1400423d6:	xor    esp,DWORD PTR [rdx+0x0]
   1400423d9:	add    BYTE PTR [rax],al
   1400423db:	add    BYTE PTR [rax],al
   1400423dd:	add    BYTE PTR [rax],al
   1400423df:	add    BYTE PTR [rcx+0x73],ch
   1400423e2:	outs   dx,DWORD PTR ds:[rsi]
   1400423e3:	sub    eax,0x392d7269
   1400423e8:	cmp    BYTE PTR [rax],al
   1400423ea:	add    BYTE PTR [rax],al
   1400423ec:	add    BYTE PTR [rax],al
   1400423ee:	add    BYTE PTR [rax],al
   1400423f0:	rex.WB push r11
   1400423f2:	rex.WRXB pop r15
   1400423f4:	xor    dh,BYTE PTR [rax]
   1400423f6:	xor    esi,DWORD PTR [rbx]
   1400423f8:	sub    eax,0x33383931
   1400423fd:	add    BYTE PTR [rax],al
   1400423ff:	add    BYTE PTR [rbx+0x73],ah
   140042402:	rex.WB push r11
   140042404:	rex.WRXB cmp QWORD PTR [r14],r14
   140042407:	rex.WX
   140042408:	rex.WB push r11
   14004240a:	rex.XB
   14004240b:	xor    dh,BYTE PTR ss:[rdx]
   14004240e:	cmp    DWORD PTR [rcx],esi
   140042410:	cmp    DWORD PTR [rax],edi
   140042412:	xor    al,0x6b
   140042414:	(bad)  
   140042415:	outs   dx,BYTE PTR ds:[rsi]
   140042416:	(bad)  
   140042417:	add    BYTE PTR [rcx+0x73],ch
   14004241a:	outs   dx,DWORD PTR ds:[rsi]
   14004241b:	sub    eax,0x392d7269
   140042420:	add    BYTE PTR ss:[rax],al
   140042423:	add    BYTE PTR [rax],al
   140042425:	add    BYTE PTR [rax],al
   140042427:	add    BYTE PTR [rdx+0x49],cl
   14004242a:	push   rbx
   14004242b:	pop    rdi
   14004242c:	rex.XB
   14004242d:	xor    dh,BYTE PTR ss:[rdx]
   140042430:	cmp    DWORD PTR [rip+0x34383931],ebp        # 0x1743c5d67
   140042436:	sub    eax,0x616e616b
   14004243b:	add    BYTE PTR [rax],al
   14004243d:	add    BYTE PTR [rax],al
   14004243f:	add    BYTE PTR [rbx+0x73],ah
   140042442:	rex.WB push r11
   140042444:	rex.WRXB cmp QWORD PTR [rip+0x3653494a],r14        # 0x176576d95
   14004244b:	xor    dh,BYTE PTR [rdx]
   14004244d:	cmp    DWORD PTR [rcx],esi
   14004244f:	cmp    DWORD PTR [rax],edi
   140042451:	xor    al,0x68
   140042453:	(bad)  
   140042454:	outs   dx,BYTE PTR ds:[rsi]
   140042455:	fs (bad) 
   140042457:	fs add BYTE PTR fs:[rax],al
   14004245b:	add    BYTE PTR [rax],al
   14004245d:	add    BYTE PTR [rax],al
   14004245f:	add    BYTE PTR [rdx+0x70],ch
   140042462:	sub    eax,0x2d72636f
   140042467:	push   0x2d646e61
   14004246c:	(bad)  
   14004246d:	fs add BYTE PTR fs:[rcx+0x73],ch
   140042472:	outs   dx,DWORD PTR ds:[rsi]
   140042473:	sub    eax,0x392d7269
   140042478:	xor    eax,0x0
   14004247d:	add    BYTE PTR [rax],al
   14004247f:	add    BYTE PTR [rdx+0x49],cl
   140042482:	push   rbx
   140042483:	pop    rdi
   140042484:	rex.XB
   140042485:	xor    dh,BYTE PTR ss:[rdx]
   140042488:	cmp    DWORD PTR [rip+0x34383931],ebp        # 0x1743c5dbf
   14004248e:	sub    eax,0x646e6168
   140042493:	sub    eax,0x646461
   140042498:	movsxd esi,DWORD PTR [rbx+0x49]
   14004249b:	push   rbx
   14004249c:	cmp    QWORD PTR [r10+r9*2],r14
   1400424a0:	rex.WB push r11
   1400424a2:	xor    dh,BYTE PTR ss:[rdx]
   1400424a5:	cmp    DWORD PTR [rcx],esi
   1400424a7:	cmp    DWORD PTR [rax],edi
   1400424a9:	xor    al,0x68
   1400424ab:	(bad)  
   1400424ac:	outs   dx,BYTE PTR ds:[rsi]
   1400424ad:	add    BYTE PTR fs:[rax],al
   1400424b0:	push   0x70
   1400424b2:	sub    eax,0x2d72636f
   1400424b7:	push   0x646e61
   1400424bc:	add    BYTE PTR [rax],al
   1400424be:	add    BYTE PTR [rax],al
   1400424c0:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   1400424c7:	cmp    DWORD PTR [rax+rax*1],esi
   1400424ca:	add    BYTE PTR [rax],al
   1400424cc:	add    BYTE PTR [rax],al
   1400424ce:	add    BYTE PTR [rax],al
   1400424d0:	rex.WX
   1400424d1:	rex.WB push r11
   1400424d3:	pop    rdi
   1400424d4:	rex.XB
   1400424d5:	xor    dh,BYTE PTR ss:[rdx]
   1400424d8:	cmp    DWORD PTR [rip+0x34383931],ebp        # 0x1743c5e0f
   1400424de:	sub    eax,0x646e6168
   1400424e3:	add    BYTE PTR [rax],al
   1400424e5:	add    BYTE PTR [rax],al
   1400424e7:	add    BYTE PTR [rbx+0x73],ah
   1400424ea:	rex.WB push r11
   1400424ec:	rex.WRXB cmp QWORD PTR [r11],r14
   1400424ef:	rex.WX
   1400424f0:	rex.WB push r11
   1400424f2:	xor    dh,BYTE PTR ss:[rdx]
   1400424f5:	cmp    DWORD PTR [rcx],esi
   1400424f7:	cmp    DWORD PTR [rax],edi
   1400424f9:	xor    al,0x62
   1400424fb:	(bad)  
   1400424fc:	fs add BYTE PTR fs:[rax],al
   140042500:	push   0x70
   140042502:	sub    eax,0x2d72636f
   140042507:	(bad)  
   140042508:	sub    eax,0x646461
   14004250d:	add    BYTE PTR [rax],al
   14004250f:	add    BYTE PTR [rcx+0x73],ch
   140042512:	outs   dx,DWORD PTR ds:[rsi]
   140042513:	sub    eax,0x392d7269
   140042518:	xor    eax,DWORD PTR [rax]
   14004251a:	add    BYTE PTR [rax],al
   14004251c:	add    BYTE PTR [rax],al
   14004251e:	add    BYTE PTR [rax],al
   140042520:	rex.WX
   140042521:	rex.WB push r11
   140042523:	pop    rdi
   140042524:	rex.XB
   140042525:	xor    dh,BYTE PTR ss:[rdx]
   140042528:	cmp    DWORD PTR [rip+0x34383931],ebp        # 0x1743c5e5f
   14004252e:	sub    eax,0x64612d62
   140042533:	add    BYTE PTR fs:[rax],al
   140042536:	add    BYTE PTR [rax],al
   140042538:	movsxd esi,DWORD PTR [rbx+0x49]
   14004253b:	push   rbx
   14004253c:	rex.WRXB cmp QWORD PTR [r10],r14
   14004253f:	rex.WX
   140042540:	rex.WB push r11
   140042542:	rex.XB
   140042543:	xor    bh,BYTE PTR ss:[rcx]
   140042546:	cmp    DWORD PTR [rcx],esi
   140042548:	cmp    DWORD PTR [rax],edi
   14004254a:	xor    al,0x62
   14004254c:	add    BYTE PTR [rax],al
   14004254e:	add    BYTE PTR [rax],al
   140042550:	push   0x70
   140042552:	sub    eax,0x2d72636f
   140042557:	(bad)  
	...
   140042560:	rex.WB push r11
   140042562:	rex.WRXB
   140042563:	ss xor al,0x36
   140042566:	sub    eax,0x4f2d504a
   14004256b:	rex.XB push r10
   14004256d:	sub    eax,0x73690042
   140042572:	outs   dx,DWORD PTR ds:[rsi]
   140042573:	sub    eax,0x392d7269
   140042578:	xor    al,BYTE PTR [rax]
   14004257a:	add    BYTE PTR [rax],al
   14004257c:	add    BYTE PTR [rax],al
   14004257e:	add    BYTE PTR [rax],al
   140042580:	rex.WX
   140042581:	rex.WB push r11
   140042583:	pop    rdi
   140042584:	rex.XB
   140042585:	xor    dh,BYTE PTR ss:[rdx]
   140042588:	cmp    DWORD PTR [rip+0x34383931],ebp        # 0x1743c5ebf
   14004258e:	sub    eax,0x62
   140042593:	add    BYTE PTR [rax],al
   140042595:	add    BYTE PTR [rax],al
   140042597:	add    BYTE PTR [rbx+0x73],ah
   14004259a:	rex.WB push r11
   14004259c:	rex.WRXB cmp QWORD PTR [r9],r14
   14004259f:	rex.WX
   1400425a0:	rex.WB push r11
   1400425a2:	rex.XB
   1400425a3:	xor    dh,BYTE PTR ss:[rdx]
   1400425a6:	cmp    DWORD PTR [rcx],esi
   1400425a8:	cmp    DWORD PTR [rax],edi
   1400425aa:	xor    al,0x61
   1400425ac:	add    BYTE PTR [rax],al
   1400425ae:	add    BYTE PTR [rax],al
   1400425b0:	push   0x70
   1400425b2:	sub    eax,0x2d72636f
   1400425b7:	(bad)  
	...
   1400425c0:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   1400425c7:	cmp    DWORD PTR [rcx],esi
   1400425c9:	add    BYTE PTR [rax],al
   1400425cb:	add    BYTE PTR [rax],al
   1400425cd:	add    BYTE PTR [rax],al
   1400425cf:	add    BYTE PTR [rdx+0x49],cl
   1400425d2:	push   rbx
   1400425d3:	pop    rdi
   1400425d4:	rex.XB
   1400425d5:	xor    dh,BYTE PTR ss:[rdx]
   1400425d8:	cmp    DWORD PTR [rip+0x34383931],ebp        # 0x1743c5f0f
   1400425de:	sub    eax,0x61
   1400425e3:	add    BYTE PTR [rax],al
   1400425e5:	add    BYTE PTR [rax],al
   1400425e7:	add    BYTE PTR [rbx+0x73],ah
   1400425ea:	rex.WB push r11
   1400425ec:	rex.WRXB cmp QWORD PTR [r8],r14
   1400425ef:	add    BYTE PTR [rcx+0x73],ch
   1400425f2:	outs   dx,DWORD PTR ds:[rsi]
   1400425f3:	sub    eax,0x392d7269
   1400425f8:	xor    BYTE PTR [rax],al
   1400425fa:	add    BYTE PTR [rax],al
   1400425fc:	add    BYTE PTR [rax],al
   1400425fe:	add    BYTE PTR [rax],al
   140042600:	movsxd esi,DWORD PTR [rbx+0x49]
   140042603:	push   rbx
   140042604:	rex.WRXB cmp BYTE PTR [r9],r15b
   140042607:	push   r11
   140042609:	rex.WRB
   14004260a:	rex.WRXB xor al,0x34
   14004260d:	cmp    DWORD PTR [rax],eax
   14004260f:	add    BYTE PTR [rcx+0x73],ch
   140042612:	outs   dx,DWORD PTR ds:[rsi]
   140042613:	sub    eax,0x382d7269
   140042618:	cmp    DWORD PTR [rax],eax
   14004261a:	add    BYTE PTR [rax],al
   14004261c:	add    BYTE PTR [rax],al
   14004261e:	add    BYTE PTR [rax],al
   140042620:	(bad)  
   140042621:	jb     0x140042684
   140042623:	(bad)  
   140042624:	imul   esp,DWORD PTR [rbx+0x37],0x4f534900
   14004262b:	pop    rdi
   14004262c:	cmp    DWORD PTR [rax],esi
   14004262e:	xor    esi,DWORD PTR [rsi]
	...
   140042638:	push   r11
   14004263a:	rex.WRB
   14004263b:	rex.WRXB pop r15
   14004263d:	xor    al,0x34
   14004263f:	cmp    DWORD PTR [rax],eax
   140042641:	add    BYTE PTR [rax],al
   140042643:	add    BYTE PTR [rax],al
   140042645:	add    BYTE PTR [rax],al
   140042647:	add    BYTE PTR [rbx+0x73],ah
   14004264a:	rex.WB push r11
   14004264c:	rex.WRXB cmp BYTE PTR [r8],r15b
   14004264f:	rex.RXB jb 0x1400426b7
   140042652:	imul   esi,DWORD PTR gs:[rdi],0x0
   140042656:	add    BYTE PTR [rax],al
   140042658:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   14004265f:	cmp    BYTE PTR [rax],bh
   140042661:	add    BYTE PTR [rax],al
   140042663:	add    BYTE PTR [rdi+0x72],ah
   140042666:	gs imul esi,DWORD PTR gs:[rdi],0x0
   14004266b:	add    BYTE PTR [rax],al
   14004266d:	add    BYTE PTR [rax],al
   14004266f:	add    BYTE PTR [rbx+0x73],ah
   140042672:	rex.WB push r11
   140042674:	rex.WRXB cmp BYTE PTR [r15],r14b
   140042677:	rex.WX
   140042678:	rex.WB push r11
   14004267a:	pop    rax
   14004267b:	xor    BYTE PTR [rdx],dh
   14004267d:	xor    BYTE PTR [rax],bh
   14004267f:	add    BYTE PTR [rdx+0x49],cl
   140042682:	push   rbx
   140042683:	pop    rdi
   140042684:	pop    rax
   140042685:	xor    BYTE PTR [rdx],dh
   140042687:	xor    BYTE PTR [rax],bh
   140042689:	sub    eax,0x33383931
   14004268e:	add    BYTE PTR [rax],al
   140042690:	js     0x1400426c2
   140042692:	xor    dh,BYTE PTR [rax]
   140042694:	cmp    BYTE PTR [rax],al
   140042696:	add    BYTE PTR [rax],al
   140042698:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   14004269f:	cmp    BYTE PTR [rdi],dh
   1400426a1:	add    BYTE PTR [rax],al
   1400426a3:	add    BYTE PTR [rax],al
   1400426a5:	add    BYTE PTR [rax],al
   1400426a7:	add    BYTE PTR [rdx+0x49],cl
   1400426aa:	push   rbx
   1400426ab:	pop    rdi
   1400426ac:	rex.XB
   1400426ad:	xor    dh,BYTE PTR ss:[rdx]
   1400426b0:	ss sub eax,0x33383931
   1400426b6:	add    BYTE PTR [rax],al
   1400426b8:	movsxd esi,DWORD PTR [rbx+0x49]
   1400426bb:	push   rbx
   1400426bc:	rex.WRXB cmp BYTE PTR [r14],r14b
   1400426bf:	rex.W jne 0x140042730
   1400426c2:	addr32 (bad) 
   1400426c4:	jb     0x14004272f
   1400426c6:	(bad)  
   1400426c7:	outs   dx,BYTE PTR ds:[rsi]
   1400426c8:	add    BYTE PTR [rax],al
   1400426ca:	add    BYTE PTR [rax],al
   1400426cc:	push   0x49000075
   1400426d1:	push   rbx
   1400426d2:	rex.WRXB
   1400426d3:	ss xor al,0x36
   1400426d6:	sub    eax,0x5548
   1400426db:	add    BYTE PTR [rax],al
   1400426dd:	add    BYTE PTR [rax],al
   1400426df:	add    BYTE PTR [rcx+0x73],ch
   1400426e2:	outs   dx,DWORD PTR ds:[rsi]
   1400426e3:	sub    eax,0x382d7269
   1400426e8:	add    BYTE PTR ss:[rax],al
   1400426eb:	add    BYTE PTR [rax],al
   1400426ed:	add    BYTE PTR [rax],al
   1400426ef:	add    BYTE PTR [rbp+0x53],cl
   1400426f2:	pop    rdx
   1400426f3:	pop    rdi
   1400426f4:	(bad)  
   1400426f5:	(bad)  
   1400426f6:	cmp    DWORD PTR [rip+0x332e],esi        # 0x140045a2a
   1400426fc:	add    BYTE PTR [rax],al
   1400426fe:	add    BYTE PTR [rax],al
   140042700:	movsxd esi,DWORD PTR [rbx+0x49]
   140042703:	push   rbx
   140042704:	rex.WRXB cmp BYTE PTR [rip+0x6e617053],r14b        # 0x1ae65975e
   14004270b:	imul   esi,DWORD PTR [rbx+0x68],0x53490032
   140042712:	rex.WRXB
   140042713:	ss xor al,0x36
   140042716:	sub    eax,0x325345
   14004271b:	add    BYTE PTR [rax],al
   14004271d:	add    BYTE PTR [rax],al
   14004271f:	add    BYTE PTR [rcx+0x73],ch
   140042722:	outs   dx,DWORD PTR ds:[rsi]
   140042723:	sub    eax,0x382d7269
   140042728:	xor    eax,0x45000000
   14004272d:	push   rbx
   14004272e:	xor    al,BYTE PTR [rax]
   140042730:	movsxd esi,DWORD PTR [rbx+0x49]
   140042733:	push   rbx
   140042734:	rex.WRXB cmp BYTE PTR [r8+r10*2],r14b
   140042738:	outs   dx,DWORD PTR ds:[rsi]
   140042739:	jb     0x1400427af
   14004273b:	jne    0x1400427a4
   14004273d:	jne    0x1400427a4
   14004273f:	jae    0x1400427a6
   140042741:	xor    al,BYTE PTR [rax]
   140042743:	add    BYTE PTR [rax],al
   140042745:	add    BYTE PTR [rax],al
   140042747:	add    BYTE PTR [rcx+0x53],cl
   14004274a:	rex.WRXB
   14004274b:	ss xor al,0x36
   14004274e:	sub    eax,0x325450
   140042753:	add    BYTE PTR [rax],al
   140042755:	add    BYTE PTR [rax],al
   140042757:	add    BYTE PTR [rcx+0x73],ch
   14004275a:	outs   dx,DWORD PTR ds:[rsi]
   14004275b:	sub    eax,0x382d7269
   140042760:	xor    al,0x0
   140042762:	add    BYTE PTR [rax],al
   140042764:	push   rax
   140042765:	push   rsp
   140042766:	xor    al,BYTE PTR [rax]
   140042768:	movsxd esi,DWORD PTR [rbx+0x49]
   14004276b:	push   rbx
   14004276c:	rex.WRXB (bad) 
   14004276e:	xor    BYTE PTR [rsi+0x69],dl
   140042771:	fs outs dx,DWORD PTR gs:[rsi]
   140042774:	je     0x1400427db
   140042776:	js     0x1400427cb
   140042778:	jne    0x1400427ea
   14004277a:	jo     0x1400427ad
   14004277c:	add    BYTE PTR [rax],al
   14004277e:	add    BYTE PTR [rax],al
   140042780:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042787:	(bad)  
   140042788:	xor    BYTE PTR [rax],al
   14004278a:	add    BYTE PTR [rax],al
   14004278c:	add    BYTE PTR [rax],al
   14004278e:	add    BYTE PTR [rax],al
   140042790:	jbe    0x1400427fb
   140042792:	fs outs dx,DWORD PTR gs:[rsi]
   140042795:	je     0x1400427fc
   140042797:	js     0x1400427c6
   140042799:	jae    0x140042810
   14004279b:	jo     0x14004280d
   14004279d:	ins    BYTE PTR es:[rdi],dx
   14004279e:	add    BYTE PTR [rax],al
   1400427a0:	movsxd esi,DWORD PTR [rbx+0x49]
   1400427a3:	push   rbx
   1400427a4:	rex.WRXB
   1400427a5:	xor    DWORD PTR ss:[rsi+0x6f],ecx
   1400427a9:	jb     0x140042822
   1400427ab:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x32
   1400427b4:	outs   dx,BYTE PTR ds:[rsi]
   1400427b5:	outs   dx,DWORD PTR ds:[rsi]
   1400427b6:	xor    al,BYTE PTR [rax]
   1400427b8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   1400427bf:	xor    DWORD PTR ss:[rax],eax
   1400427c2:	add    BYTE PTR [rax],al
   1400427c4:	add    BYTE PTR [rax],al
   1400427c6:	add    BYTE PTR [rax],al
   1400427c8:	rex.WB push r11
   1400427ca:	rex.WRXB
   1400427cb:	ss xor al,0x36
   1400427ce:	sub    eax,0x324f4e
   1400427d3:	add    BYTE PTR [rax],al
   1400427d5:	add    BYTE PTR [rax],al
   1400427d7:	add    BYTE PTR [rsi+0x53],cl
   1400427da:	pop    rdi
   1400427db:	xor    al,0x35
   1400427dd:	xor    eax,0x322d31
   1400427e2:	add    BYTE PTR [rax],al
   1400427e4:	add    BYTE PTR [rax],al
   1400427e6:	add    BYTE PTR [rax],al
   1400427e8:	rex.RXB
   1400427e9:	rex.X xor sil,BYTE PTR [rbx]
   1400427ec:	xor    DWORD PTR [rdx],esi
   1400427ee:	xor    DWORD PTR cs:[rcx],edi
   1400427f1:	cmp    BYTE PTR [rax],dh
   1400427f3:	sub    eax,0x30
   1400427f8:	addr32 (bad) 
   1400427fb:	xor    esi,DWORD PTR [rcx]
   1400427fd:	xor    ch,BYTE PTR [rip+0x30383931]        # 0x1703c6134
   140042803:	add    BYTE PTR [rax],al
   140042805:	add    BYTE PTR [rax],al
   140042807:	add    BYTE PTR [rcx+0x62],ch
   14004280a:	ins    DWORD PTR es:[rdi],dx
   14004280b:	sub    eax,0x38373435
	...
   140042818:	imul   esp,DWORD PTR [rdx+0x6d],0x3734352d
   14004281f:	cmp    BYTE PTR [rdi+0x50],bl
   140042822:	xor    DWORD PTR [rax],esi
   140042824:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d615b
   14004282a:	add    BYTE PTR [rax],al
   14004282c:	add    BYTE PTR [rax],al
   14004282e:	add    BYTE PTR [rax],al
   140042830:	movsxd esi,DWORD PTR [rbx+0x49]
   140042833:	push   rbx
   140042834:	rex.WRXB xor rax,0x32424738
   14004283a:	xor    esi,DWORD PTR [rcx]
   14004283c:	xor    bh,BYTE PTR [rax]
   14004283e:	xor    BYTE PTR [rax],al
   140042840:	movsxd ebp,DWORD PTR [rax+0x69]
   140042843:	outs   dx,BYTE PTR ds:[rsi]
   140042844:	gs jae 0x1400428ac
   140042847:	add    BYTE PTR [rcx+0x73],ch
   14004284a:	outs   dx,DWORD PTR ds:[rsi]
   14004284b:	sub    eax,0x352d7269
   140042850:	cmp    BYTE PTR [rax],al
   140042852:	add    BYTE PTR [rax],al
   140042854:	add    BYTE PTR [rax],al
   140042856:	add    BYTE PTR [rax],al
   140042858:	rex.RXB
   140042859:	rex.X pop rdi
   14004285b:	xor    dh,BYTE PTR [rbx]
   14004285d:	xor    DWORD PTR [rdx],esi
   14004285f:	sub    eax,0x3038
   140042864:	add    BYTE PTR [rax],al
   140042866:	add    BYTE PTR [rax],al
   140042868:	movsxd esi,DWORD PTR [rbx+0x49]
   14004286b:	push   rbx
   14004286c:	rex.WRXB xor rax,0x31424737
   140042872:	cmp    DWORD PTR [rax],edi
   140042874:	cmp    BYTE PTR [rax],al
   140042876:	add    BYTE PTR [rax],al
   140042878:	rex.WB push r11
   14004287a:	rex.WRXB
   14004287b:	ss xor al,0x36
   14004287e:	sub    eax,0x4e43
   140042883:	add    BYTE PTR [rbx+0x6e],ah
   140042886:	add    BYTE PTR [rax],al
   140042888:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   14004288f:	xor    eax,0x37
   140042894:	add    BYTE PTR [rax],al
   140042896:	add    BYTE PTR [rax],al
   140042898:	rex.RXB
   140042899:	rex.X pop rdi
   14004289b:	xor    DWORD PTR [rcx],edi
   14004289d:	cmp    BYTE PTR [rax],bh
   14004289f:	sub    eax,0x3038
   1400428a4:	add    BYTE PTR [rax],al
   1400428a6:	add    BYTE PTR [rax],al
   1400428a8:	movsxd esi,DWORD PTR [rbx+0x49]
   1400428ab:	push   rbx
   1400428ac:	rex.WRXB xor rax,0x47383234
   1400428b2:	jb     0x140042919
   1400428b4:	imul   eax,DWORD PTR gs:[rax],0x0
   1400428b8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   1400428bf:	xor    eax,0x35
   1400428c4:	add    BYTE PTR [rax],al
   1400428c6:	add    BYTE PTR [rax],al
   1400428c8:	rex.WB push r11
   1400428ca:	rex.WRXB pop r15
   1400428cc:	xor    eax,0x3a383234
   1400428d1:	xor    DWORD PTR [rcx],edi
   1400428d3:	cmp    BYTE PTR [rax],dh
   1400428d5:	add    BYTE PTR [rax],al
   1400428d7:	add    BYTE PTR [rcx+0x53],cl
   1400428da:	rex.WRXB xor rax,0x43373234
   1400428e0:	jns    0x140042954
   1400428e2:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x38393163
   1400428ea:	xor    DWORD PTR [rax],eax
   1400428ec:	add    BYTE PTR [rax],al
   1400428ee:	add    BYTE PTR [rax],al
   1400428f0:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   1400428f7:	xor    eax,0x34
   1400428fc:	add    BYTE PTR [rax],al
   1400428fe:	add    BYTE PTR [rax],al
   140042900:	rex.WB push r11
   140042902:	rex.WRXB pop r15
   140042904:	xor    eax,0x3a373234
   140042909:	xor    DWORD PTR [rcx],edi
   14004290b:	cmp    BYTE PTR [rcx],dh
   14004290d:	add    BYTE PTR [rax],al
   14004290f:	add    BYTE PTR [rbx+0x73],ah
   140042912:	rex.WB push r11
   140042914:	rex.WRXB xor rax,0x494e4931
   14004291a:	push   rbx
   14004291b:	rex.XB jns 0x140042990
   14004291e:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x63
   140042926:	add    BYTE PTR [rax],al
   140042928:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   14004292f:	xor    eax,0x31
   140042934:	add    BYTE PTR [rax],al
   140042936:	add    BYTE PTR [rax],al
   140042938:	rex.WB
   140042939:	rex.WRX
   14004293a:	rex.WB push r11
   14004293c:	sub    eax,0x69727963
   140042941:	ins    BYTE PTR es:[rdi],dx
   140042942:	ins    BYTE PTR es:[rdi],dx
   140042943:	imul   esp,DWORD PTR [rbx+0x0],0x73630000
   14004294a:	rex.WB push r11
   14004294c:	rex.WRXB xor rax,0x494e4930
   140042952:	push   rbx
   140042953:	cmp    BYTE PTR [rax],al
   140042955:	add    BYTE PTR [rax],al
   140042957:	add    BYTE PTR [rcx+0x73],ch
   14004295a:	outs   dx,DWORD PTR ds:[rsi]
   14004295b:	sub    eax,0x352d7269
   140042960:	xor    BYTE PTR [rax],al
   140042962:	add    BYTE PTR [rax],al
   140042964:	rex.WB
   140042965:	rex.WRX
   140042966:	rex.WB push r11
   140042968:	sub    eax,0x38
   14004296d:	add    BYTE PTR [rax],al
   14004296f:	add    BYTE PTR [rbx+0x73],ah
   140042972:	rex.WB push r11
   140042974:	rex.WRXB xor al,0x39
   140042977:	rex.WB
   140042978:	rex.WRX
   140042979:	rex.WB push r11
   14004297b:	add    BYTE PTR [rax],al
   14004297d:	add    BYTE PTR [rax],al
   14004297f:	add    BYTE PTR [rcx+0x73],ch
   140042982:	outs   dx,DWORD PTR ds:[rsi]
   140042983:	sub    eax,0x342d7269
   140042988:	cmp    DWORD PTR [rax],eax
   14004298a:	add    BYTE PTR [rax],al
   14004298c:	rex.WB
   14004298d:	rex.WRX
   14004298e:	rex.WB push r11
	...
   140042998:	movsxd esi,DWORD PTR [rbx+0x49]
   14004299b:	push   rbx
   14004299c:	rex.WRXB xor al,0x37
   14004299f:	rex.X push rbx
   1400429a1:	push   rsi
   1400429a2:	imul   esp,DWORD PTR [rbp+0x77],0x61746164
   1400429a9:	add    BYTE PTR [rax],al
   1400429ab:	add    BYTE PTR [rax],al
   1400429ad:	add    BYTE PTR [rax],al
   1400429af:	add    BYTE PTR [rcx+0x73],ch
   1400429b2:	outs   dx,DWORD PTR ds:[rsi]
   1400429b3:	sub    eax,0x342d7269
   1400429b8:	(bad)  
   1400429b9:	add    BYTE PTR [rax],al
   1400429bb:	add    BYTE PTR [rax],al
   1400429bd:	add    BYTE PTR [rax],al
   1400429bf:	add    BYTE PTR [rdx+0x53],al
   1400429c2:	pop    rdi
   1400429c3:	jbe    0x140042a2e
   1400429c5:	gs ja  0x140042a2c
   1400429c8:	(bad)  
   1400429c9:	je     0x140042a2c
   1400429cb:	add    BYTE PTR [rax],al
   1400429cd:	add    BYTE PTR [rax],al
   1400429cf:	add    BYTE PTR [rbx+0x73],ah
   1400429d2:	rex.WB push r11
   1400429d4:	rex.WRXB xor al,0x32
   1400429d7:	rex.WX
   1400429d8:	rex.WB push r11
   1400429da:	rex.XB
   1400429db:	xor    dh,BYTE PTR ss:[rdx]
   1400429de:	xor    DWORD PTR ss:[rcx],edi
   1400429e1:	(bad)  
   1400429e2:	cmp    BYTE PTR [rax],al
   1400429e4:	add    BYTE PTR [rax],al
   1400429e6:	add    BYTE PTR [rax],al
   1400429e8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   1400429ef:	xor    al,0x32
   1400429f1:	add    BYTE PTR [rax],al
   1400429f3:	add    BYTE PTR [rax],al
   1400429f5:	add    BYTE PTR [rax],al
   1400429f7:	add    BYTE PTR [rdx+0x49],cl
   1400429fa:	push   rbx
   1400429fb:	pop    rdi
   1400429fc:	rex.XB
   1400429fd:	xor    dh,BYTE PTR ss:[rdx]
   140042a00:	ss sub eax,0x38373931
   140042a06:	add    BYTE PTR [rax],al
   140042a08:	movsxd esi,DWORD PTR [rbx+0x49]
   140042a0b:	push   rbx
   140042a0c:	rex.WRXB xor rax,0x43373234
   140042a12:	jns    0x140042a86
   140042a14:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x63
   140042a1c:	add    BYTE PTR [rax],al
   140042a1e:	add    BYTE PTR [rax],al
   140042a20:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042a27:	xor    esi,DWORD PTR [rdi]
   140042a29:	add    BYTE PTR [rax],al
   140042a2b:	add    BYTE PTR [rax],al
   140042a2d:	add    BYTE PTR [rax],al
   140042a2f:	add    BYTE PTR [rcx+0x53],cl
   140042a32:	rex.WRXB pop r15
   140042a34:	xor    eax,0x373234
   140042a39:	add    BYTE PTR [rax],al
   140042a3b:	add    BYTE PTR [rax],al
   140042a3d:	add    BYTE PTR [rax],al
   140042a3f:	add    BYTE PTR [rbx+0x73],ah
   140042a42:	rex.WB push r11
   140042a44:	rex.WRXB xor r14b,BYTE PTR [r15]
   140042a47:	rex.WR (bad) 
   140042a49:	je     0x140042ab4
   140042a4b:	outs   dx,BYTE PTR ds:[rsi]
   140042a4c:	rex.RXB jb 0x140042ab4
   140042a4f:	imul   esi,DWORD PTR gs:[rcx],0x0
   140042a53:	add    BYTE PTR [rax],al
   140042a55:	add    BYTE PTR [rax],al
   140042a57:	add    BYTE PTR [rcx+0x73],ch
   140042a5a:	outs   dx,DWORD PTR ds:[rsi]
   140042a5b:	sub    eax,0x322d7269
   140042a60:	(bad)  
   140042a61:	add    BYTE PTR [rax],al
   140042a63:	add    BYTE PTR [rax],al
   140042a65:	add    BYTE PTR [rax],al
   140042a67:	add    BYTE PTR [rcx+riz*2+0x74],cl
   140042a6b:	imul   ebp,DWORD PTR [rsi+0x2d],0x65657267
   140042a72:	imul   ebp,DWORD PTR [rip+0x31],0x63        # 0x140042aaa
   140042a79:	jae    0x140042ac4
   140042a7b:	push   rbx
   140042a7c:	rex.WRXB xor r14b,BYTE PTR [rip+0x6e657246]        # 0x1ae699cc9
   140042a83:	movsxd ebp,DWORD PTR [rax+0x0]
   140042a86:	add    BYTE PTR [rax],al
   140042a88:	rex.WB push r11
   140042a8a:	rex.WRXB
   140042a8b:	ss xor al,0x36
   140042a8e:	sub    eax,0x315246
   140042a93:	add    BYTE PTR [rax],al
   140042a95:	add    BYTE PTR [rax],al
   140042a97:	add    BYTE PTR [rcx+0x73],ch
   140042a9a:	outs   dx,DWORD PTR ds:[rsi]
   140042a9b:	sub    eax,0x322d7269
   140042aa0:	xor    eax,0x0
   140042aa5:	add    BYTE PTR [rax],al
   140042aa7:	add    BYTE PTR [rsi+0x46],cl
   140042aaa:	pop    rdi
   140042aab:	pop    rdx
   140042aac:	pop    rdi
   140042aad:	xor    ch,BYTE PTR ss:[rip+0x5f303130]        # 0x19f345be4
   140042ab4:	sub    BYTE PTR [rcx],dh
   140042ab6:	cmp    DWORD PTR [rdi],esi
   140042ab8:	xor    ebp,DWORD PTR [rcx]
   140042aba:	add    BYTE PTR [rax],al
   140042abc:	add    BYTE PTR [rax],al
   140042abe:	add    BYTE PTR [rax],al
   140042ac0:	movsxd esi,DWORD PTR [rbx+0x49]
   140042ac3:	push   rbx
   140042ac4:	rex.WRXB xor QWORD PTR [r9],r15
   140042ac7:	rex.WR (bad) 
   140042ac9:	je     0x140042b34
   140042acb:	outs   dx,BYTE PTR ds:[rsi]
   140042acc:	rex.RXB jb 0x140042b34
   140042acf:	imul   eax,DWORD PTR gs:[rax],0x0
   140042ad3:	add    BYTE PTR [rax],al
   140042ad5:	add    BYTE PTR [rax],al
   140042ad7:	add    BYTE PTR [rcx+0x73],ch
   140042ada:	outs   dx,DWORD PTR ds:[rsi]
   140042adb:	sub    eax,0x312d7269
   140042ae0:	cmp    DWORD PTR [rax],eax
   140042ae2:	add    BYTE PTR [rax],al
   140042ae4:	add    BYTE PTR [rax],al
   140042ae6:	add    BYTE PTR [rax],al
   140042ae8:	ins    BYTE PTR es:[rdi],dx
   140042ae9:	(bad)  
   140042aea:	je     0x140042b55
   140042aec:	outs   dx,BYTE PTR ds:[rsi]
   140042aed:	sub    eax,0x65657267
   140042af2:	imul   eax,DWORD PTR [rax],0x0
   140042af5:	add    BYTE PTR [rax],al
   140042af7:	add    BYTE PTR [rbx+0x73],ah
   140042afa:	rex.WB push r11
   140042afc:	rex.WRXB xor QWORD PTR [r8],r15
   140042aff:	rex.RXB jb 0x140042b67
   140042b02:	imul   esi,DWORD PTR gs:[rdi],0x4f
   140042b06:	ins    BYTE PTR es:[rdi],dx
   140042b07:	add    BYTE PTR fs:[rax],al
   140042b0a:	add    BYTE PTR [rax],al
   140042b0c:	add    BYTE PTR [rax],al
   140042b0e:	add    BYTE PTR [rax],al
   140042b10:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042b17:	xor    DWORD PTR [rax],edi
   140042b19:	add    BYTE PTR [rax],al
   140042b1b:	add    BYTE PTR [rax],al
   140042b1d:	add    BYTE PTR [rax],al
   140042b1f:	add    BYTE PTR [rdi+0x72],ah
   140042b22:	gs imul esi,DWORD PTR gs:[rdi],0x2d
   140042b27:	outs   dx,DWORD PTR ds:[rsi]
   140042b28:	ins    BYTE PTR es:[rdi],dx
   140042b29:	add    BYTE PTR fs:[rax],al
   140042b2c:	add    BYTE PTR [rax],al
   140042b2e:	add    BYTE PTR [rax],al
   140042b30:	movsxd esi,DWORD PTR [rbx+0x49]
   140042b33:	push   rbx
   140042b34:	rex.WRXB xor QWORD PTR [r14],r14
   140042b37:	push   rax
   140042b38:	outs   dx,DWORD PTR ds:[rsi]
   140042b39:	jb     0x140042baf
   140042b3b:	jne    0x140042ba4
   140042b3d:	jne    0x140042ba4
   140042b3f:	jae    0x140042ba6
   140042b41:	add    BYTE PTR [rax],al
   140042b43:	add    BYTE PTR [rax],al
   140042b45:	add    BYTE PTR [rax],al
   140042b47:	add    BYTE PTR [rcx+0x53],cl
   140042b4a:	rex.WRXB
   140042b4b:	ss xor al,0x36
   140042b4e:	sub    eax,0x5450
   140042b53:	add    BYTE PTR [rax],al
   140042b55:	add    BYTE PTR [rax],al
   140042b57:	add    BYTE PTR [rcx+0x73],ch
   140042b5a:	outs   dx,DWORD PTR ds:[rsi]
   140042b5b:	sub    eax,0x312d7269
   140042b60:	add    BYTE PTR ss:[rax],al
   140042b63:	add    BYTE PTR [rax+0x54],dl
   140042b66:	add    BYTE PTR [rax],al
   140042b68:	movsxd esi,DWORD PTR [rbx+0x49]
   140042b6b:	push   rbx
   140042b6c:	xor    QWORD PTR [r10+r9*2],r14
   140042b70:	rex.WB push r11
   140042b72:	rex.XB
   140042b73:	xor    dh,BYTE PTR ss:[rdx]
   140042b76:	xor    BYTE PTR [rdx+0x6f],dh
   140042b79:	add    BYTE PTR [rax],al
   140042b7b:	add    BYTE PTR [rax],al
   140042b7d:	add    BYTE PTR [rax],al
   140042b7f:	add    BYTE PTR [rcx+0x53],cl
   140042b82:	rex.WRXB
   140042b83:	ss xor al,0x36
   140042b86:	sub    eax,0x504a
   140042b8b:	add    BYTE PTR [rdx+0x70],ch
   140042b8e:	add    BYTE PTR [rax],al
   140042b90:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042b97:	xor    DWORD PTR [rax+rax*1],esi
   140042b9a:	add    BYTE PTR [rax],al
   140042b9c:	add    BYTE PTR [rax],al
   140042b9e:	add    BYTE PTR [rax],al
   140042ba0:	rex.WX
   140042ba1:	rex.WB push r11
   140042ba3:	pop    rdi
   140042ba4:	rex.XB
   140042ba5:	xor    dh,BYTE PTR ss:[rdx]
   140042ba8:	xor    BYTE PTR [rip+0x39363931],ch        # 0x1793a64df
   140042bae:	sub    eax,0x6f72
   140042bb3:	add    BYTE PTR [rax],al
   140042bb5:	add    BYTE PTR [rax],al
   140042bb7:	add    BYTE PTR [rbx+0x73],ah
   140042bba:	rex.WB push r11
   140042bbc:	rex.WRXB xor QWORD PTR [r11],r14
   140042bbf:	rex.WX
   140042bc0:	rex.WB push r11
   140042bc2:	rex.XB
   140042bc3:	xor    dh,BYTE PTR ss:[rdx]
   140042bc6:	xor    BYTE PTR [rdx+0x70],ch
   140042bc9:	add    BYTE PTR [rax],al
   140042bcb:	add    BYTE PTR [rax],al
   140042bcd:	add    BYTE PTR [rax],al
   140042bcf:	add    BYTE PTR [rax+0x30],bh
   140042bd2:	xor    dh,BYTE PTR [rax]
   140042bd4:	xor    DWORD PTR [rip+0x616b0037],ebp        # 0x1a16f2c11
   140042bda:	je     0x140042c3d
   140042bdc:	imul   esp,DWORD PTR [rcx+0x6e],0x61
	...
   140042be8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042bef:	xor    DWORD PTR [rbx],esi
   140042bf1:	add    BYTE PTR [rax],al
   140042bf3:	add    BYTE PTR [rax],al
   140042bf5:	add    BYTE PTR [rax],al
   140042bf7:	add    BYTE PTR [rdx+0x49],cl
   140042bfa:	push   rbx
   140042bfb:	pop    rdi
   140042bfc:	rex.XB
   140042bfd:	xor    dh,BYTE PTR ss:[rdx]
   140042c00:	xor    BYTE PTR [rip+0x39363931],ch        # 0x1793a6537
   140042c06:	add    BYTE PTR [rax],al
   140042c08:	rex.WX
   140042c09:	rex.WB push r11
   140042c0b:	pop    rdi
   140042c0c:	rex.XB
   140042c0d:	xor    dh,BYTE PTR ss:[rdx]
   140042c10:	xor    BYTE PTR [rip+0x39363931],ch        # 0x1793a6547
   140042c16:	sub    eax,0x706a
   140042c1b:	add    BYTE PTR [rax],al
   140042c1d:	add    BYTE PTR [rax],al
   140042c1f:	add    BYTE PTR [rbx+0x73],ah
   140042c22:	rex.WB push r11
   140042c24:	rex.WRXB xor r14b,BYTE PTR [r8]
   140042c27:	xor    dh,BYTE PTR [rdx]
   140042c29:	rex.WX push rax
   140042c2b:	xor    al,BYTE PTR [rax]
   140042c2d:	add    BYTE PTR [rax],al
   140042c2f:	add    BYTE PTR [rcx+0x53],cl
   140042c32:	rex.WRXB sub rax,0x32323032
   140042c38:	sub    eax,0x322d504a
   140042c3d:	add    BYTE PTR [rax],al
   140042c3f:	add    BYTE PTR [rcx+0x62],ch
   140042c42:	ins    DWORD PTR es:[rdi],dx
   140042c43:	sub    eax,0x34353035
	...
   140042c50:	rex.WB push r11
   140042c52:	rex.WRXB sub rax,0x32323032
   140042c58:	sub    eax,0x312d504a
   140042c5d:	add    BYTE PTR [rax],al
   140042c5f:	add    BYTE PTR [rbx+0x73],ah
   140042c62:	rex.WB push r11
   140042c64:	rex.WRXB xor r14b,BYTE PTR [r8]
   140042c67:	xor    dh,BYTE PTR [rdx]
   140042c69:	rex.WX push rax
   140042c6b:	add    BYTE PTR [rax],al
   140042c6d:	add    BYTE PTR [rax],al
   140042c6f:	add    BYTE PTR [rcx+0x53],cl
   140042c72:	rex.WRXB sub rax,0x32323032
   140042c78:	sub    eax,0x504a
   140042c7d:	add    BYTE PTR [rax],al
   140042c7f:	add    BYTE PTR [rbx+0x73],ah
   140042c82:	rex.WB push r11
   140042c84:	rex.WRXB xor r14b,BYTE PTR [r8]
   140042c87:	xor    dh,BYTE PTR [rdx]
   140042c89:	rex.WXB push r10
   140042c8b:	add    BYTE PTR [rax],al
   140042c8d:	add    BYTE PTR [rax],al
   140042c8f:	add    BYTE PTR [rcx+0x53],cl
   140042c92:	rex.WRXB sub rax,0x32323032
   140042c98:	sub    eax,0x524b
   140042c9d:	add    BYTE PTR [rax],al
   140042c9f:	add    BYTE PTR [rcx+0x62],ch
   140042ca2:	ins    DWORD PTR es:[rdi],dx
   140042ca3:	sub    eax,0x33363331
   140042ca8:	pop    rdi
   140042ca9:	push   rsi
   140042caa:	push   rbx
   140042cab:	push   rbp
   140042cac:	rex.X pop rdi
   140042cae:	push   rsi
   140042caf:	push   rax
   140042cb0:	push   rbp
   140042cb1:	add    BYTE PTR [r8],al
   140042cb4:	imul   esi,DWORD PTR [rbx+0x63],0x0
   140042cb8:	movsxd esi,DWORD PTR [rax+0x31]
   140042cbb:	xor    esi,DWORD PTR [rsi]
   140042cbd:	xor    eax,DWORD PTR [rax]
   140042cbf:	add    BYTE PTR [rcx+0x62],ch
   140042cc2:	ins    DWORD PTR es:[rdi],dx
   140042cc3:	sub    eax,0x33363331
	...
   140042cd0:	imul   esp,DWORD PTR [rdx+0x6d],0x3633312d
   140042cd7:	xor    ebx,DWORD PTR [rdi+0x50]
   140042cda:	xor    DWORD PTR [rcx],esi
   140042cdc:	rex.X sub eax,0x38393931
   140042ce2:	add    BYTE PTR [rax],al
   140042ce4:	ins    DWORD PTR es:[rdi],dx
   140042ce5:	jae    0x140042d20
   140042ce7:	xor    al,0x39
   140042ce9:	add    BYTE PTR [rax],al
   140042ceb:	add    BYTE PTR [rax],al
   140042ced:	add    BYTE PTR [rax],al
   140042cef:	add    BYTE PTR [rcx+0x73],ch
   140042cf2:	outs   dx,DWORD PTR ds:[rsi]
   140042cf3:	sub    eax,0x312d7269
   140042cf8:	xor    al,0x39
   140042cfa:	add    BYTE PTR [rax],al
   140042cfc:	imul   ebp,DWORD PTR [rdi+0x72],0x65
   140042d00:	(bad)  
   140042d01:	outs   dx,BYTE PTR ds:[rsi]
   140042d02:	add    BYTE PTR [rax],al
   140042d04:	add    BYTE PTR [rax],al
   140042d06:	add    BYTE PTR [rax],al
   140042d08:	movsxd esi,DWORD PTR [rbx+0x4b]
   140042d0b:	push   rbx
   140042d0c:	rex.XB xor eax,0x31313036
   140042d12:	cmp    DWORD PTR [rax],edi
   140042d14:	(bad)  
   140042d15:	add    BYTE PTR [rax],al
   140042d17:	add    BYTE PTR [rbx+0x53],cl
   140042d1a:	pop    rdi
   140042d1b:	rex.XB pop r15
   140042d1d:	xor    eax,0x2d313036
   140042d22:	xor    DWORD PTR [rcx],edi
   140042d24:	cmp    BYTE PTR [rcx],bh
   140042d26:	add    BYTE PTR [rax],al
   140042d28:	ja     0x140042d93
   140042d2a:	outs   dx,BYTE PTR ds:[rsi]
   140042d2b:	outs   dx,DWORD PTR fs:[rsi]
   140042d2d:	ja     0x140042da2
   140042d2f:	sub    eax,0x2d393439
   140042d34:	xor    dh,BYTE PTR [rax]
   140042d36:	xor    BYTE PTR [rax],dh
	...
   140042d40:	imul   esp,DWORD PTR [rdx+0x6d],0x3037392d
   140042d47:	pop    rdi
   140042d48:	push   rsi
   140042d49:	push   rax
   140042d4a:	push   rbp
   140042d4b:	add    BYTE PTR [r8],al
   140042d4e:	add    BYTE PTR [rax],al
   140042d50:	cmp    DWORD PTR [rdi],esi
   140042d52:	xor    BYTE PTR [rax],al
   140042d54:	movsxd esi,DWORD PTR [rax+0x39]
   140042d57:	(bad)  
   140042d58:	xor    BYTE PTR [rax],al
   140042d5a:	add    BYTE PTR [rax],al
   140042d5c:	xor    eax,0x313036
   140042d61:	add    BYTE PTR [rax],al
   140042d63:	add    BYTE PTR [rax],al
   140042d65:	add    BYTE PTR [rax],al
   140042d67:	add    BYTE PTR [rbx+0x53],cl
   140042d6a:	rex.XB pop r15
   140042d6c:	xor    eax,0x313036
   140042d71:	add    BYTE PTR [rax],al
   140042d73:	add    BYTE PTR [rax],al
   140042d75:	add    BYTE PTR [rax],al
   140042d77:	add    BYTE PTR [rcx+0x62],ch
   140042d7a:	ins    DWORD PTR es:[rdi],dx
   140042d7b:	sub    eax,0x4b637565
   140042d80:	push   rdx
   140042d81:	add    BYTE PTR [rax],al
   140042d83:	add    BYTE PTR [rax],al
   140042d85:	add    BYTE PTR [rax],al
   140042d87:	add    BYTE PTR [rbx+0x73],ah
   140042d8a:	rex.RB push r13
   140042d8c:	rex.XB
   140042d8d:	rex.WXB push r10
   140042d8f:	add    BYTE PTR [rbp+0x55],al
   140042d92:	rex.XB sub eax,0x524b
   140042d98:	imul   esp,DWORD PTR [rdx+0x6d],0x3037392d
   140042d9f:	add    BYTE PTR [rcx+0x62],ch
   140042da2:	ins    DWORD PTR es:[rdi],dx
   140042da3:	sub    eax,0x5f303739
   140042da8:	push   rax
   140042da9:	xor    DWORD PTR [rcx],esi
   140042dab:	xor    BYTE PTR [rdi+0x50],bl
   140042dae:	xor    DWORD PTR [rcx],esi
   140042db0:	xor    BYTE PTR [rip+0x36303032],ch        # 0x176345de8
   140042db6:	pop    rdi
   140042db7:	push   rbp
   140042db8:	xor    al,BYTE PTR [rax]
   140042dba:	add    BYTE PTR [rax],al
   140042dbc:	add    BYTE PTR [rax],al
   140042dbe:	add    BYTE PTR [rax],al
   140042dc0:	rex.WXB push r11
   140042dc2:	pop    rdi
   140042dc3:	rex.XB pop r15
   140042dc5:	xor    eax,0x2d313036
   140042dca:	xor    DWORD PTR [rcx],edi
   140042dcc:	cmp    BYTE PTR [rdi],dh
   140042dce:	add    BYTE PTR [rax],al
   140042dd0:	movsxd esi,DWORD PTR [rbx+0x49]
   140042dd3:	push   rbx
   140042dd4:	rex.WRXB xor QWORD PTR [r8],r14
   140042dd7:	push   rbx
   140042dd8:	ja     0x140042e3f
   140042dda:	imul   esi,DWORD PTR fs:[rbx+0x68],0x65730000
   140042de2:	add    BYTE PTR [rax],al
   140042de4:	add    BYTE PTR [rax],al
   140042de6:	add    BYTE PTR [rax],al
   140042de8:	rex.WB push r11
   140042dea:	rex.WRXB
   140042deb:	ss xor al,0x36
   140042dee:	sub    eax,0x4553
   140042df3:	add    BYTE PTR [rax],al
   140042df5:	add    BYTE PTR [rax],al
   140042df7:	add    BYTE PTR [rcx+0x53],cl
   140042dfa:	rex.WRXB
   140042dfb:	ss xor al,0x36
   140042dfe:	sub    eax,0x4946
   140042e03:	add    BYTE PTR [rsi+0x49],al
   140042e06:	add    BYTE PTR [rax],al
   140042e08:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042e0f:	xor    DWORD PTR [rax],esi
   140042e11:	add    BYTE PTR [rax],al
   140042e13:	add    BYTE PTR [rax],al
   140042e15:	add    BYTE PTR [rax],al
   140042e17:	add    BYTE PTR [rbx+0x45],dl
   140042e1a:	rex.WRX pop rdi
   140042e1c:	cmp    BYTE PTR [rip+0x30303230],dh        # 0x170346052
   140042e22:	pop    rdi
   140042e23:	rex.X add BYTE PTR [rax],al
   140042e26:	add    BYTE PTR [rax],al
   140042e28:	movsxd esi,DWORD PTR [rbx+0x4e]
   140042e2b:	push   r12
   140042e2d:	push   rbx
   140042e2e:	rex.R
   140042e2f:	rex.B
   140042e30:	rex.WRX
   140042e31:	rex.WRXB
   140042e32:	rex.B
   140042e33:	rex.R
   140042e34:	add    BYTE PTR [rax],r8b
   140042e37:	add    BYTE PTR [rcx+0x73],ch
   140042e3a:	outs   dx,DWORD PTR ds:[rsi]
   140042e3b:	sub    eax,0x392d7269
   140042e40:	sub    eax,0x32
   140042e45:	add    BYTE PTR [rax],al
   140042e47:	add    BYTE PTR [rsi+0x41],cl
   140042e4a:	push   rsp
   140042e4b:	push   rbx
   140042e4c:	sub    eax,0x4f4e4144
   140042e51:	sub    eax,0x444441
   140042e56:	add    BYTE PTR [rax],al
   140042e58:	movsxd esi,DWORD PTR [rbx+0x4e]
   140042e5b:	push   r12
   140042e5d:	push   rbx
   140042e5e:	rex.R
   140042e5f:	rex.B
   140042e60:	rex.WRX
   140042e61:	rex.WRXB add BYTE PTR [r8],r8b
   140042e64:	add    BYTE PTR [rax],al
   140042e66:	add    BYTE PTR [rax],al
   140042e68:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042e6f:	cmp    DWORD PTR [rip+0x31],ebp        # 0x140042ea6
   140042e75:	add    BYTE PTR [rax],al
   140042e77:	add    BYTE PTR [rsi+0x41],cl
   140042e7a:	push   rsp
   140042e7b:	push   rbx
   140042e7c:	sub    eax,0x4f4e4144
   140042e81:	add    BYTE PTR [rax],al
   140042e83:	add    BYTE PTR [rax],al
   140042e85:	add    BYTE PTR [rax],al
   140042e87:	add    BYTE PTR [rbx+0x73],ah
   140042e8a:	rex.WRX
   140042e8b:	push   r12
   140042e8d:	push   rbx
   140042e8e:	push   rbx
   140042e8f:	rex.RB
   140042e90:	rex.RX
   140042e91:	rex.WB
   140042e92:	rex.B
   140042e93:	rex.R
   140042e94:	add    BYTE PTR [rax],r8b
   140042e97:	add    BYTE PTR [rcx+0x73],ch
   140042e9a:	outs   dx,DWORD PTR ds:[rsi]
   140042e9b:	sub    eax,0x382d7269
   140042ea0:	sub    eax,0x32
   140042ea5:	add    BYTE PTR [rax],al
   140042ea7:	add    BYTE PTR [rsi+0x41],cl
   140042eaa:	push   rsp
   140042eab:	push   rbx
   140042eac:	sub    eax,0x49464553
   140042eb1:	sub    eax,0x444441
   140042eb6:	add    BYTE PTR [rax],al
   140042eb8:	movsxd esi,DWORD PTR [rbx+0x4e]
   140042ebb:	push   r12
   140042ebd:	push   rbx
   140042ebe:	push   rbx
   140042ebf:	rex.RB
   140042ec0:	rex.RX
   140042ec1:	rex.WB add BYTE PTR [r8],al
   140042ec4:	add    BYTE PTR [rax],al
   140042ec6:	add    BYTE PTR [rax],al
   140042ec8:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140042ecf:	cmp    BYTE PTR [rip+0x31],ch        # 0x140042f06
   140042ed5:	add    BYTE PTR [rax],al
   140042ed7:	add    BYTE PTR [rsi+0x41],cl
   140042eda:	push   rsp
   140042edb:	push   rbx
   140042edc:	sub    eax,0x49464553
   140042ee1:	add    BYTE PTR [rax],al
   140042ee3:	add    BYTE PTR [rax],al
   140042ee5:	add    BYTE PTR [rax],al
   140042ee7:	add    BYTE PTR [rbx+0x73],ah
   140042eea:	rex.WB push r11
   140042eec:	rex.WRXB xor r9b,BYTE PTR [r9+0x6e]
   140042ef0:	je     0x140042f5e
   140042ef2:	push   rdx
   140042ef3:	gs push si
   140042ef6:	gs jb  0x140042f6c
   140042ef9:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140042f00:	imul   esi,DWORD PTR [rdx+0x76],0x0
   140042f07:	add    BYTE PTR [rcx+0x73],ch
   140042f0a:	outs   dx,DWORD PTR ds:[rsi]
   140042f0b:	sub    eax,0x322d7269
	...
   140042f18:	rex.WB push r11
   140042f1a:	rex.WRXB pop r15
   140042f1c:	ss xor al,0x36
   140042f1f:	imul   esi,DWORD PTR cs:[rdx+0x76],0x3839313a
   140042f27:	xor    eax,DWORD PTR [rax]
   140042f29:	add    BYTE PTR [rax],al
   140042f2b:	add    BYTE PTR [rax],al
   140042f2d:	add    BYTE PTR [rax],al
   140042f2f:	add    BYTE PTR [rbx+0x73],ah
   140042f32:	rex.WB
   140042f33:	rex.WRX push rsi
   140042f35:	push   r10
   140042f37:	rex.WB
   140042f38:	rex.B
   140042f39:	rex.WRX push rsp
   140042f3b:	add    BYTE PTR [rax],al
   140042f3d:	add    BYTE PTR [rax],al
   140042f3f:	add    BYTE PTR [rcx+0x4e],cl
   140042f42:	push   rsi
   140042f43:	push   r10
   140042f45:	rex.WB
   140042f46:	rex.B
   140042f47:	rex.WRX push rsp
   140042f49:	add    BYTE PTR [rax],al
   140042f4b:	add    BYTE PTR [rax],al
   140042f4d:	add    BYTE PTR [rax],al
   140042f4f:	add    BYTE PTR [rbx+0x73],ah
   140042f52:	rex.WB push r11
   140042f54:	rex.WRXB
   140042f55:	ss xor al,0x36
   140042f58:	(bad)  
   140042f5a:	jae    0x140042fc5
   140042f5c:	movsxd esi,DWORD PTR [rcx]
   140042f5e:	cmp    DWORD PTR [rax],edi
   140042f60:	xor    eax,DWORD PTR [rax]
   140042f62:	add    BYTE PTR [rax],al
   140042f64:	jb     0x140042fcb
   140042f66:	data16 add BYTE PTR [rcx+0x53],cl
   140042f6a:	rex.WRXB pop r15
   140042f6c:	ss xor al,0x36
   140042f6f:	cs (bad) 
   140042f72:	jae    0x140042fdd
   140042f74:	movsxd edi,DWORD PTR [rdx]
   140042f76:	xor    DWORD PTR [rcx],edi
   140042f78:	cmp    BYTE PTR [rbx],dh
   140042f7a:	add    BYTE PTR [rax],al
   140042f7c:	add    BYTE PTR [rax],al
   140042f7e:	add    BYTE PTR [rax],al
   140042f80:	movsxd esi,DWORD PTR [rbx+0x49]
   140042f83:	push   rbx
   140042f84:	rex.WRXB xor QWORD PTR [r8],r14
   140042f87:	ss xor al,0x36
   140042f8a:	push   rbp
   140042f8b:	push   rsp
   140042f8c:	rex.RX xor DWORD PTR [rax],r8d
   140042f8f:	add    BYTE PTR [rcx+0x53],cl
   140042f92:	rex.WRXB sub rax,0x34363031
   140042f98:	ss sub eax,0x2d465455
   140042f9e:	xor    DWORD PTR [rax],eax
   140042fa0:	movsxd esi,DWORD PTR [rbx+0x49]
   140042fa3:	push   rbx
   140042fa4:	rex.WRXB
   140042fa5:	cmp    DWORD PTR ss:[rsi+0x72],eax
   140042fa9:	outs   dx,BYTE PTR gs:[rsi]
   140042fab:	movsxd ebp,DWORD PTR [rax+0x0]
   140042fae:	add    BYTE PTR [rax],al
   140042fb0:	data16 jb 0x140042fb3
   140042fb3:	add    BYTE PTR [rax],al
   140042fb5:	add    BYTE PTR [rax],al
   140042fb7:	add    BYTE PTR [rcx+0x53],cl
   140042fba:	rex.WRXB
   140042fbb:	ss xor al,0x36
   140042fbe:	sub    eax,0x5246
   140042fc3:	add    BYTE PTR [rax],al
   140042fc5:	add    BYTE PTR [rax],al
   140042fc7:	add    BYTE PTR [rcx+0x73],ch
   140042fca:	outs   dx,DWORD PTR ds:[rsi]
   140042fcb:	sub    eax,0x362d7269
   140042fd0:	cmp    DWORD PTR [rax],eax
   140042fd2:	add    BYTE PTR [rax],al
   140042fd4:	add    BYTE PTR [rax],al
   140042fd6:	add    BYTE PTR [rax],al
   140042fd8:	rex.WRX
   140042fd9:	rex.RX pop rdi
   140042fdb:	pop    rdx
   140042fdc:	pop    rdi
   140042fdd:	xor    ch,BYTE PTR ss:[rip+0x303130]        # 0x140346114
   140042fe4:	add    BYTE PTR [rax],al
   140042fe6:	add    BYTE PTR [rax],al
   140042fe8:	movsxd esi,DWORD PTR [rbx+0x49]
   140042feb:	push   rbx
   140042fec:	rex.WRXB
   140042fed:	xor    BYTE PTR ss:[rsi+0x6f],cl
   140042ff1:	jb     0x14004306a
   140042ff3:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x31
   140042ffc:	add    BYTE PTR [rax],al
   140042ffe:	add    BYTE PTR [rax],al
   140043000:	movsxd esi,DWORD PTR [rbx+0x49]
   140043003:	push   rbx
   140043004:	rex.WRXB
   140043005:	xor    BYTE PTR ss:[rcx+riz*2+0x6e],al
   14004300a:	imul   esi,DWORD PTR [rbx+0x68],0x77726f4e
   140043011:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x6f6e0000
   14004301a:	add    BYTE PTR [rax],al
   14004301c:	add    BYTE PTR [rax],al
   14004301e:	add    BYTE PTR [rax],al
   140043020:	rex.WB push r11
   140043022:	rex.WRXB
   140043023:	ss xor al,0x36
   140043026:	sub    eax,0x4f4e
   14004302b:	add    BYTE PTR [rax],al
   14004302d:	add    BYTE PTR [rax],al
   14004302f:	add    BYTE PTR [rcx+0x73],ch
   140043032:	outs   dx,DWORD PTR ds:[rsi]
   140043033:	sub    eax,0x362d7269
   140043038:	xor    BYTE PTR [rax],al
   14004303a:	add    BYTE PTR [rax],al
   14004303c:	add    BYTE PTR [rax],al
   14004303e:	add    BYTE PTR [rax],al
   140043040:	rex.WRX push rbx
   140043042:	pop    rdi
   140043043:	xor    al,0x35
   140043045:	xor    eax,0x312d31
   14004304a:	add    BYTE PTR [rax],al
   14004304c:	add    BYTE PTR [rax],al
   14004304e:	add    BYTE PTR [rax],al
   140043050:	movsxd esi,DWORD PTR [rbx+0x49]
   140043053:	push   rbx
   140043054:	rex.WRXB xor r14b,BYTE PTR [r9]
   140043057:	rex.RXB
   140043058:	gs jb  0x1400430c8
   14004305b:	(bad)  
   14004305c:	outs   dx,BYTE PTR ds:[rsi]
   14004305d:	add    BYTE PTR [rax],al
   14004305f:	add    BYTE PTR [rcx+0x53],cl
   140043062:	rex.WRXB
   140043063:	ss xor al,0x36
   140043066:	sub    eax,0x4544
   14004306b:	add    BYTE PTR [rbp+riz*2+0x0],ah
   14004306f:	add    BYTE PTR [rcx+0x73],ch
   140043072:	outs   dx,DWORD PTR ds:[rsi]
   140043073:	sub    eax,0x322d7269
   140043078:	xor    DWORD PTR [rax],eax
   14004307a:	add    BYTE PTR [rax],al
   14004307c:	add    BYTE PTR [rax],al
   14004307e:	add    BYTE PTR [rax],al
   140043080:	rex.R
   140043081:	rex.WB
   140043082:	rex.WRX pop rdi
   140043084:	ss xor BYTE PTR ss:[rax],dh
   140043088:	xor    eax,DWORD PTR [rax]
   14004308a:	add    BYTE PTR [rax],al
   14004308c:	add    BYTE PTR [rax],al
   14004308e:	add    BYTE PTR [rax],al
   140043090:	movsxd esi,DWORD PTR [rbx+0x49]
   140043093:	push   rbx
   140043094:	rex.WRXB xor QWORD PTR [r15],r14
   140043097:	push   rbx
   140043098:	jo     0x1400430fb
   14004309a:	outs   dx,BYTE PTR ds:[rsi]
   14004309b:	imul   esi,DWORD PTR [rbx+0x68],0x53490000
   1400430a2:	rex.WRXB
   1400430a3:	ss xor al,0x36
   1400430a6:	sub    eax,0x5345
   1400430ab:	add    BYTE PTR [rax],al
   1400430ad:	add    BYTE PTR [rax],al
   1400430af:	add    BYTE PTR [rcx+0x73],ch
   1400430b2:	outs   dx,DWORD PTR ds:[rsi]
   1400430b3:	sub    eax,0x312d7269
   1400430b8:	(bad)  
   1400430b9:	add    BYTE PTR [rax],al
   1400430bb:	add    BYTE PTR [rbp+0x53],al
   1400430be:	add    BYTE PTR [rax],al
   1400430c0:	movsxd esi,DWORD PTR [rbx+0x49]
   1400430c3:	push   rbx
   1400430c4:	rex.WRXB xor QWORD PTR [rip+0x6c617449],r14        # 0x1ac65a514
   1400430cb:	imul   esp,DWORD PTR [rcx+0x6e],0x53490000
   1400430d2:	rex.WRXB
   1400430d3:	ss xor al,0x36
   1400430d6:	sub    eax,0x5449
   1400430db:	add    BYTE PTR [rax],al
   1400430dd:	add    BYTE PTR [rax],al
   1400430df:	add    BYTE PTR [rcx+0x73],ch
   1400430e2:	outs   dx,DWORD PTR ds:[rsi]
   1400430e3:	sub    eax,0x312d7269
   1400430e8:	xor    eax,0x49000000
   1400430ed:	push   rsp
   1400430ee:	add    BYTE PTR [rax],al
   1400430f0:	movsxd esi,DWORD PTR [rbx+0x49]
   1400430f3:	push   rbx
   1400430f4:	rex.WRXB xor QWORD PTR [r9],r14
   1400430f7:	push   rbx
   1400430f8:	ja     0x14004315f
   1400430fa:	imul   esi,DWORD PTR fs:[rbx+0x68],0x4e726f46
   140043102:	(bad)  
   140043103:	ins    DWORD PTR es:[rdi],dx
   140043104:	gs jae 0x140043107
   140043107:	add    BYTE PTR [rbx+0x65],dh
   14004310a:	xor    al,BYTE PTR [rax]
   14004310c:	add    BYTE PTR [rax],al
   14004310e:	add    BYTE PTR [rax],al
   140043110:	rex.WB push r11
   140043112:	rex.WRXB
   140043113:	ss xor al,0x36
   140043116:	sub    eax,0x324553
   14004311b:	add    BYTE PTR [rax],al
   14004311d:	add    BYTE PTR [rax],al
   14004311f:	add    BYTE PTR [rcx+0x73],ch
   140043122:	outs   dx,DWORD PTR ds:[rsi]
   140043123:	sub    eax,0x312d7269
   140043128:	xor    DWORD PTR [rax],eax
   14004312a:	add    BYTE PTR [rax],al
   14004312c:	add    BYTE PTR [rax],al
   14004312e:	add    BYTE PTR [rax],al
   140043130:	push   rbx
   140043131:	rex.RB
   140043132:	rex.WRX pop rdi
   140043134:	cmp    BYTE PTR [rip+0x30303230],dh        # 0x17034636a
   14004313a:	pop    rdi
   14004313b:	rex.XB add BYTE PTR [r8],al
   14004313e:	add    BYTE PTR [rax],al
   140043140:	movsxd esi,DWORD PTR [rbx+0x49]
   140043143:	push   rbx
   140043144:	rex.WRXB xor al,0x55
   140043147:	outs   dx,BYTE PTR ds:[rsi]
   140043148:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x676e694b
   140043150:	outs   dx,DWORD PTR fs:[rsi]
   140043152:	ins    DWORD PTR es:[rdi],dx
   140043153:	add    BYTE PTR [rbp+0x6b],dh
   140043156:	add    BYTE PTR [rax],al
   140043158:	addr32 (bad) 
   14004315a:	add    BYTE PTR [rax],al
   14004315c:	add    BYTE PTR [rax],al
   14004315e:	add    BYTE PTR [rax],al
   140043160:	rex.WB push r11
   140043162:	rex.WRXB
   140043163:	ss xor al,0x36
   140043166:	sub    eax,0x4247
   14004316b:	add    BYTE PTR [rax],al
   14004316d:	add    BYTE PTR [rax],al
   14004316f:	add    BYTE PTR [rcx+0x73],ch
   140043172:	outs   dx,DWORD PTR ds:[rsi]
   140043173:	sub    eax,0x342d7269
	...
   140043180:	rex.X push rbx
   140043182:	pop    rdi
   140043183:	xor    al,0x37
   140043185:	xor    esi,DWORD PTR [rax]
   140043187:	add    BYTE PTR [rbx+0x73],ah
   14004318a:	rex.RB push r13
   14004318c:	rex.XB
   14004318d:	rex.RX imul r15d,DWORD PTR [rax+0x57],0x614a6469
   140043195:	jo     0x1400431f8
   140043197:	outs   dx,BYTE PTR ds:[rsi]
   140043198:	gs jae 0x140043200
   14004319b:	add    BYTE PTR [rax],al
   14004319d:	add    BYTE PTR [rax],al
   14004319f:	add    BYTE PTR [rbp+0x78],al
   1400431a2:	je     0x140043209
   1400431a4:	outs   dx,BYTE PTR ds:[rsi]
   1400431a5:	fs gs fs pop rdi
   1400431a9:	push   rbp
   1400431aa:	rex.WRX
   1400431ab:	rex.WB pop r8
   1400431ad:	pop    rdi
   1400431ae:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400431b0:	fs gs pop rdi
   1400431b3:	rex.RX imul r15d,DWORD PTR [rax+0x65],0x69575f64
   1400431bb:	fs je  0x140043226
   1400431be:	pop    rdi
   1400431bf:	outs   dx,WORD PTR ds:[rsi]
   1400431c1:	jb     0x140043222
   1400431c3:	rex.WX (bad) 
   1400431c5:	jo     0x140043228
   1400431c7:	outs   dx,BYTE PTR ds:[rsi]
   1400431c8:	gs jae 0x140043230
   1400431cb:	add    BYTE PTR [rax],al
   1400431cd:	add    BYTE PTR [rax],al
   1400431cf:	add    BYTE PTR [rcx+0x42],cl
   1400431d2:	rex.WRB sub rax,0x4a637565
   1400431d8:	push   rax
   1400431d9:	add    BYTE PTR [rax],al
   1400431db:	add    BYTE PTR [rax],al
   1400431dd:	add    BYTE PTR [rax],al
   1400431df:	add    BYTE PTR [rcx+0x62],ch
   1400431e2:	ins    DWORD PTR es:[rdi],dx
   1400431e3:	sub    eax,0x32373333
   1400431e8:	xor    bl,BYTE PTR [rdi+0x56]
   1400431eb:	push   rax
   1400431ec:	push   rbp
   1400431ed:	add    BYTE PTR [r8],al
   1400431f0:	imul   esp,DWORD PTR [rdx+0x6d],0x3530352d
   1400431f7:	xor    BYTE PTR [rax],al
   1400431f9:	add    BYTE PTR [rax],al
   1400431fb:	add    BYTE PTR [rax],al
   1400431fd:	add    BYTE PTR [rax],al
   1400431ff:	add    BYTE PTR [rcx+0x62],ch
   140043202:	ins    DWORD PTR es:[rdi],dx
   140043203:	sub    eax,0x32373333
   140043208:	xor    al,BYTE PTR [rax]
   14004320a:	add    BYTE PTR [rax],al
   14004320c:	add    BYTE PTR [rax],al
   14004320e:	add    BYTE PTR [rax],al
   140043210:	imul   esp,DWORD PTR [rdx+0x6d],0x3733332d
   140043217:	xor    dh,BYTE PTR [rdx]
   140043219:	pop    rdi
   14004321a:	push   rax
   14004321b:	xor    DWORD PTR [rdx],esi
   14004321d:	pop    r15
   14004321f:	push   rax
   140043220:	xor    DWORD PTR [rdx],esi
   140043222:	rex.B sub eax,0x34303032
   140043228:	pop    rdi
   140043229:	push   rbp
   14004322a:	xor    al,BYTE PTR [rax]
   14004322c:	jne    0x140043298
   14004322e:	imul   esi,DWORD PTR [rbx+0x0],0x65000000
   140043235:	jne    0x14004329a
   140043237:	push   0x69
   140043239:	jae    0x14004323b
   14004323b:	add    BYTE PTR [rax],al
   14004323d:	add    BYTE PTR [rax],al
   14004323f:	add    BYTE PTR [rax+0x2d],bl
   140043242:	rex.RB push r13
   140043244:	rex.XB sub eax,0x504a
   14004324a:	add    BYTE PTR [rax],al
   14004324c:	add    BYTE PTR [rax],al
   14004324e:	add    BYTE PTR [rax],al
   140043250:	imul   esp,DWORD PTR [rdx+0x6d],0x3435392d
   140043257:	add    BYTE PTR [rcx+0x62],ch
   14004325a:	ins    DWORD PTR es:[rdi],dx
   14004325b:	sub    eax,0x5f343539
   140043260:	push   rax
   140043261:	xor    DWORD PTR [rax],esi
   140043263:	xor    DWORD PTR [rip+0x37303032],ebp        # 0x17734629b
   140043269:	add    BYTE PTR [rax],al
   14004326b:	add    BYTE PTR [rbp+0x55],al
   14004326e:	rex.XB sub eax,0x504a
   140043274:	add    BYTE PTR [rax],al
   140043276:	add    BYTE PTR [rax],al
   140043278:	movsxd esi,DWORD PTR [rbx+0x45]
   14004327b:	push   rbp
   14004327c:	rex.XB push r8
   14004327e:	imul   esp,DWORD PTR [rsi+rax*2+0x6d],0x74
   140043283:	rex.WX (bad) 
   140043285:	jo     0x1400432e8
   140043287:	outs   dx,BYTE PTR ds:[rsi]
   140043288:	gs jae 0x1400432f0
   14004328b:	add    BYTE PTR [rax],al
   14004328d:	add    BYTE PTR [rax],al
   14004328f:	add    BYTE PTR [rbp+0x78],al
   140043292:	je     0x1400432f9
   140043294:	outs   dx,BYTE PTR ds:[rsi]
   140043295:	fs gs fs pop rdi
   140043299:	push   rbp
   14004329a:	rex.WRX
   14004329b:	rex.WB pop r8
   14004329d:	pop    rdi
   14004329e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400432a0:	fs gs pop rdi
   1400432a3:	push   rax
   1400432a4:	(bad)  
   1400432a5:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400432a8:	fs pop rdi
   1400432aa:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400432ac:	jb     0x14004331b
   1400432ae:	(bad)  
   1400432af:	je     0x140043310
   1400432b1:	outs   dx,WORD PTR ds:[rsi]
   1400432b3:	jb     0x140043314
   1400432b5:	rex.WX (bad) 
   1400432b7:	jo     0x14004331a
   1400432b9:	outs   dx,BYTE PTR ds:[rsi]
   1400432ba:	gs jae 0x140043322
   1400432bd:	add    BYTE PTR [rax],al
   1400432bf:	add    BYTE PTR [rcx+0x62],ch
   1400432c2:	ins    DWORD PTR es:[rdi],dx
   1400432c3:	sub    eax,0x5f333439
   1400432c8:	push   rsi
   1400432c9:	push   r11
   1400432cb:	rex.XB
   1400432cc:	rex.WB
   1400432cd:	rex.WB pop r15
   1400432cf:	push   rsi
   1400432d0:	push   rbx
   1400432d1:	push   rbp
   1400432d2:	rex.X pop rdi
   1400432d4:	push   rsi
   1400432d5:	push   rax
   1400432d6:	push   rbp
   1400432d7:	add    BYTE PTR [r8],al
   1400432da:	add    BYTE PTR [rax],al
   1400432dc:	cmp    DWORD PTR [rbx+rsi*1],esi
   1400432df:	add    BYTE PTR [rbx+0x70],ah
   1400432e2:	cmp    DWORD PTR [rbx+rsi*1],esi
   1400432e5:	add    BYTE PTR [rax],al
   1400432e7:	add    BYTE PTR [rcx+0x62],ch
   1400432ea:	ins    DWORD PTR es:[rdi],dx
   1400432eb:	sub    eax,0x5f333439
   1400432f0:	push   rsi
   1400432f1:	push   rbx
   1400432f2:	push   rbp
   1400432f3:	rex.X pop rdi
   1400432f5:	push   rsi
   1400432f6:	push   rax
   1400432f7:	push   rbp
   1400432f8:	add    BYTE PTR [r8],al
   1400432fb:	add    BYTE PTR [rbx+0x6a],dh
   1400432fe:	imul   esi,DWORD PTR [rbx+0x0],0x70000000
   140043305:	movsxd ebp,DWORD PTR [rbx+0x0]
   140043308:	ins    DWORD PTR es:[rdi],dx
   140043309:	jae    0x140043344
   14004330b:	xor    esi,DWORD PTR [rdx]
   14004330d:	add    BYTE PTR [rax],al
   14004330f:	add    BYTE PTR [rcx+0x42],cl
   140043312:	rex.WRB sub rax,0x43333439
   140043318:	add    BYTE PTR [rax],al
   14004331a:	add    BYTE PTR [rax],al
   14004331c:	movsxd esi,DWORD PTR [rax+0x39]
   14004331f:	xor    al,0x33
   140043321:	movsxd eax,DWORD PTR [rax]
   140043323:	add    BYTE PTR [rbx+0x70],ah
   140043326:	cmp    DWORD PTR [rbx],esi
   140043328:	xor    al,BYTE PTR [rax]
   14004332a:	add    BYTE PTR [rax],al
   14004332c:	add    BYTE PTR [rax],al
   14004332e:	add    BYTE PTR [rax],al
   140043330:	js     0x14004335f
   140043332:	ins    DWORD PTR es:[rdi],dx
   140043333:	jae    0x140043362
   140043335:	movsxd esi,DWORD PTR [rax+0x39]
   140043338:	xor    esi,DWORD PTR [rdx]
   14004333a:	add    BYTE PTR [rax],al
   14004333c:	js     0x14004336b
   14004333e:	jae    0x1400433aa
   140043340:	imul   esi,DWORD PTR [rbx+0x0],0x0
   140043347:	add    BYTE PTR [rcx+0x62],ch
   14004334a:	ins    DWORD PTR es:[rdi],dx
   14004334b:	sub    eax,0x333439
   140043350:	imul   esp,DWORD PTR [rdx+0x6d],0x3334392d
   140043357:	pop    rdi
   140043358:	push   rax
   140043359:	xor    DWORD PTR [rip+0x30322d41],esi        # 0x1703660a0
   14004335f:	xor    BYTE PTR [rbx],dh
   140043361:	add    BYTE PTR [rax],al
   140043363:	add    BYTE PTR [rax],al
   140043365:	add    BYTE PTR [rax],al
   140043367:	add    BYTE PTR [rbx+0x73],ah
   14004336a:	push   rbx
   14004336b:	push   0x4a746669
   140043370:	rex.WB push r11
   140043372:	add    BYTE PTR [rax],al
   140043374:	add    BYTE PTR [rax],al
   140043376:	add    BYTE PTR [rax],al
   140043378:	rex.WRB push r11
   14004337a:	pop    rdi
   14004337b:	rex.WXB (bad) 
   14004337d:	outs   dx,BYTE PTR ds:[rsi]
   14004337e:	push   0x69
	...
   140043388:	push   rbx
   140043389:	push   0x5f746669
   14004338e:	rex.WX
   14004338f:	rex.WB push r11
   140043391:	add    BYTE PTR [rax],al
   140043393:	add    BYTE PTR [rdx+0x49],cl
   140043396:	push   rbx
   140043397:	add    BYTE PTR [rbx+0x73],ah
   14004339a:	rex.WX
   14004339b:	rex.WB push r11
   14004339d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004339f:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400433a2:	imul   ebp,DWORD PTR [rsi+0x67],0x4a000000
   1400433a9:	rex.WB push r11
   1400433ab:	pop    rdi
   1400433ac:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400433ae:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400433b1:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   1400433b8:	movsxd esi,DWORD PTR [rbx+0x48]
   1400433bb:	(bad)  
   1400433bc:	ins    BYTE PTR es:[rdi],dx
   1400433bd:	push   di
   1400433bf:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6174614b
   1400433c7:	imul   esp,DWORD PTR [rcx+0x6e],0x61
   1400433cb:	add    BYTE PTR [rax+0x30],bl
   1400433ce:	xor    dh,BYTE PTR [rax]
   1400433d0:	xor    DWORD PTR [rax],eax
   1400433d2:	add    BYTE PTR [rax],al
   1400433d4:	add    BYTE PTR [rax],al
   1400433d6:	add    BYTE PTR [rax],al
   1400433d8:	rex.WX
   1400433d9:	rex.WB push r11
   1400433db:	pop    rdi
   1400433dc:	pop    rax
   1400433dd:	xor    BYTE PTR [rdx],dh
   1400433df:	xor    BYTE PTR [rcx],dh
   1400433e1:	add    BYTE PTR [rax],al
   1400433e3:	add    BYTE PTR [rax],al
   1400433e5:	add    BYTE PTR [rax],al
   1400433e7:	add    BYTE PTR [rbx+0x73],ah
   1400433ea:	rex.WB push r11
   1400433ec:	rex.WRXB push r12
   1400433ee:	gs js  0x140043465
   1400433f1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400433f3:	ins    DWORD PTR es:[rdi],dx
   1400433f4:	ins    DWORD PTR es:[rdi],dx
   1400433f5:	add    BYTE PTR [rax],al
   1400433f7:	add    BYTE PTR [rcx+0x73],ch
   1400433fa:	outs   dx,DWORD PTR ds:[rsi]
   1400433fb:	sub    eax,0x312d7269
   140043400:	xor    al,0x32
   140043402:	add    BYTE PTR [rax],al
   140043404:	add    BYTE PTR [rax],al
   140043406:	add    BYTE PTR [rax],al
   140043408:	rex.WB push r11
   14004340a:	rex.WRXB pop r15
   14004340c:	cmp    DWORD PTR ss:[rbx],esi
   14004340f:	(bad)  
   140043410:	sub    eax,0x64612d32
   140043415:	add    BYTE PTR fs:[rax],al
   140043418:	imul   esi,DWORD PTR [rbx+0x6f],0x3538382d
   14004341f:	cmp    DWORD PTR [rdi+0x31],ebx
   140043422:	xor    BYTE PTR [rip+0x38393931],ch        # 0x1783d6d59
   140043428:	add    BYTE PTR [rax],al
   14004342a:	add    BYTE PTR [rax],al
   14004342c:	ins    BYTE PTR es:[rdi],dx
   14004342d:	(bad)  
   14004342e:	je     0x140043499
   140043430:	outs   dx,BYTE PTR ds:[rsi]
   140043431:	add    BYTE PTR ss:[rax],al
   140043434:	add    BYTE PTR [rax],al
   140043436:	add    BYTE PTR [rax],al
   140043438:	movsxd esi,DWORD PTR [rbx+0x49]
   14004343b:	push   rbx
   14004343c:	rex.WRXB
   14004343d:	rex.WR (bad) 
   14004343f:	je     0x1400434aa
   140043441:	outs   dx,BYTE PTR ds:[rsi]
   140043442:	add    BYTE PTR ss:[rax],al
   140043445:	add    BYTE PTR [rax],al
   140043447:	add    BYTE PTR [rcx+0x53],cl
   14004344a:	rex.WRXB pop r15
   14004344c:	cmp    BYTE PTR [rax],bh
   14004344e:	xor    eax,0x30312d39
   140043453:	cmp    dh,BYTE PTR [rcx]
   140043455:	cmp    DWORD PTR [rcx],edi
   140043457:	xor    al,BYTE PTR [rax]
   140043459:	add    BYTE PTR [rax],al
   14004345b:	add    BYTE PTR [rsi+rsi*1+0x0],ch
   14004345f:	add    BYTE PTR [rcx+0x73],ch
   140043462:	outs   dx,DWORD PTR ds:[rsi]
   140043463:	sub    eax,0x312d7269
   140043468:	xor    eax,0x37
   14004346d:	add    BYTE PTR [rax],al
   14004346f:	add    BYTE PTR [rcx+0x53],cl
   140043472:	rex.WRXB sub rax,0x39353838
   140043478:	sub    eax,0x3031
   14004347d:	add    BYTE PTR [rax],al
   14004347f:	add    BYTE PTR [rbp+rsi*2+0x72],dh
   140043483:	imul   ebp,DWORD PTR [rcx+0x73],0x68
   140043487:	cmp    BYTE PTR [rax],al
   140043489:	add    BYTE PTR [rax],al
   14004348b:	add    BYTE PTR [rax],al
   14004348d:	add    BYTE PTR [rax],al
   14004348f:	add    BYTE PTR [rbp+rsi*2+0x72],dh
   140043493:	imul   ebp,DWORD PTR [rcx+0x73],0x68
   140043497:	add    BYTE PTR [rbp+0x43],al
   14004349a:	rex.WRB
   14004349b:	rex.B sub eax,0x383231
   1400434a1:	add    BYTE PTR [rax],al
   1400434a3:	add    BYTE PTR [rcx],bh
   1400434a5:	xor    dh,BYTE PTR [rax]
   1400434a7:	add    BYTE PTR [rbx+0x70],ah
   1400434aa:	cmp    DWORD PTR [rdx],esi
   1400434ac:	xor    BYTE PTR [rax],al
   1400434ae:	add    BYTE PTR [rax],al
   1400434b0:	cmp    BYTE PTR [rax],bh
   1400434b2:	xor    eax,0x395f39
   1400434b7:	add    BYTE PTR [rcx+0x62],ch
   1400434ba:	ins    DWORD PTR es:[rdi],dx
   1400434bb:	sub    eax,0x303239
   1400434c0:	imul   esp,DWORD PTR [rdx+0x6d],0x3032392d
   1400434c7:	pop    rdi
   1400434c8:	push   rax
   1400434c9:	xor    DWORD PTR [rax],esi
   1400434cb:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d6e02
   1400434d1:	add    BYTE PTR [rax],al
   1400434d3:	add    BYTE PTR [rax],al
   1400434d5:	add    BYTE PTR [rax],al
   1400434d7:	add    BYTE PTR [rbx+0x73],ah
   1400434da:	rex.WB push r11
   1400434dc:	rex.WRXB
   1400434dd:	rex.WR (bad) 
   1400434df:	je     0x14004354a
   1400434e1:	outs   dx,BYTE PTR ds:[rsi]
   1400434e2:	xor    eax,0x356c00
   1400434e7:	add    BYTE PTR [rcx+riz*2+0x74],ch
   1400434eb:	imul   ebp,DWORD PTR [rsi+0x35],0x53490000
   1400434f2:	rex.WRXB sub rax,0x39353838
   1400434f8:	sub    eax,0x39
   1400434fd:	add    BYTE PTR [rax],al
   1400434ff:	add    BYTE PTR [rcx+0x53],cl
   140043502:	rex.WRXB pop r15
   140043504:	cmp    BYTE PTR [rax],bh
   140043506:	xor    eax,0x392d39
   14004350b:	add    BYTE PTR [rax],al
   14004350d:	add    BYTE PTR [rax],al
   14004350f:	add    BYTE PTR [rcx+0x73],ch
   140043512:	outs   dx,DWORD PTR ds:[rsi]
   140043513:	sub    eax,0x312d7269
   140043518:	xor    al,0x38
   14004351a:	add    BYTE PTR [rax],al
   14004351c:	add    BYTE PTR [rax],al
   14004351e:	add    BYTE PTR [rax],al
   140043520:	rex.WB push r11
   140043522:	rex.WRXB pop r15
   140043524:	cmp    BYTE PTR [rax],bh
   140043526:	xor    eax,0x3a392d39
   14004352b:	xor    DWORD PTR [rcx],edi
   14004352d:	cmp    BYTE PTR [rcx],bh
   14004352f:	add    BYTE PTR [rax+0x65],ch
   140043532:	(bad)
   140043537:	add    BYTE PTR [rax],bh
   140043539:	cmp    BYTE PTR [rip+0x385f39],dh        # 0x1403c9478
   14004353f:	add    BYTE PTR [rcx+0x62],ch
   140043542:	ins    DWORD PTR es:[rdi],dx
   140043543:	sub    eax,0x32313035
	...
   140043550:	imul   esp,DWORD PTR [rdx+0x6d],0x3130352d
   140043557:	xor    bl,BYTE PTR [rdi+0x50]
   14004355a:	xor    DWORD PTR [rax],esi
   14004355c:	xor    BYTE PTR [rip+0x39393931],ch        # 0x1793d6e93
   140043562:	add    BYTE PTR [rax],al
   140043564:	add    BYTE PTR [rax],al
   140043566:	add    BYTE PTR [rax],al
   140043568:	movsxd esi,DWORD PTR [rbx+0x49]
   14004356b:	push   rbx
   14004356c:	rex.WRXB
   14004356d:	rex.WR (bad) 
   14004356f:	je     0x1400435da
   140043571:	outs   dx,BYTE PTR ds:[rsi]
   140043572:	rex.W
   140043573:	(bad)
   140043579:	add    BYTE PTR [rax],al
   14004357b:	add    BYTE PTR [rax+0x65],ch
   14004357e:	(bad)
   140043583:	add    BYTE PTR [rax],al
   140043585:	add    BYTE PTR [rax],al
   140043587:	add    BYTE PTR [rcx+0x53],cl
   14004358a:	rex.WRXB sub rax,0x39353838
   140043590:	sub    eax,0x38
   140043595:	add    BYTE PTR [rax],al
   140043597:	add    BYTE PTR [rcx+0x53],cl
   14004359a:	rex.WRXB pop r15
   14004359c:	cmp    BYTE PTR [rax],bh
   14004359e:	xor    eax,0x382d39
   1400435a3:	add    BYTE PTR [rax],al
   1400435a5:	add    BYTE PTR [rax],al
   1400435a7:	add    BYTE PTR [rcx+0x73],ch
   1400435aa:	outs   dx,DWORD PTR ds:[rsi]
   1400435ab:	sub    eax,0x312d7269
   1400435b0:	xor    edi,DWORD PTR [rax]
   1400435b2:	add    BYTE PTR [rax],al
   1400435b4:	add    BYTE PTR [rax],al
   1400435b6:	add    BYTE PTR [rax],al
   1400435b8:	rex.WB push r11
   1400435ba:	rex.WRXB pop r15
   1400435bc:	cmp    BYTE PTR [rax],bh
   1400435be:	xor    eax,0x3a382d39
   1400435c3:	xor    DWORD PTR [rcx],edi
   1400435c5:	cmp    BYTE PTR [rax],bh
   1400435c7:	add    BYTE PTR [rax],bh
   1400435c9:	cmp    BYTE PTR [rip+0x375f39],dh        # 0x1403b9508
   1400435cf:	add    BYTE PTR [rax],bh
   1400435d1:	xor    DWORD PTR [rbx],esi
   1400435d3:	add    BYTE PTR [rbx+0x70],ah
   1400435d6:	cmp    BYTE PTR [rcx],dh
   1400435d8:	xor    eax,DWORD PTR [rax]
   1400435da:	add    BYTE PTR [rax],al
   1400435dc:	add    BYTE PTR [rax],al
   1400435de:	add    BYTE PTR [rax],al
   1400435e0:	imul   esp,DWORD PTR [rdx+0x6d],0x3331382d
   1400435e7:	add    BYTE PTR [rcx+0x62],ch
   1400435ea:	ins    DWORD PTR es:[rdi],dx
   1400435eb:	sub    eax,0x5f333138
   1400435f0:	push   rax
   1400435f1:	xor    DWORD PTR [rax],esi
   1400435f3:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d6f2a
   1400435f9:	add    BYTE PTR [rax],al
   1400435fb:	add    BYTE PTR [rax],al
   1400435fd:	add    BYTE PTR [rax],al
   1400435ff:	add    BYTE PTR [rbx+0x75],dh
   140043602:	outs   dx,BYTE PTR ds:[rsi]
   140043603:	pop    rdi
   140043604:	gs jne 0x140043666
   140043607:	addr32 jb 0x14004366f
   14004360a:	imul   eax,DWORD PTR gs:[rax],0x0
   14004360e:	add    BYTE PTR [rax],al
   140043610:	imul   esp,DWORD PTR [rdx+0x6d],0x3030392d
   140043617:	xor    eax,0x0
   14004361c:	add    BYTE PTR [rax],al
   14004361e:	add    BYTE PTR [rax],al
   140043620:	imul   esp,DWORD PTR [rdx+0x6d],0x3030392d
   140043627:	xor    eax,0x3131585f
   14004362c:	xor    BYTE PTR [rip+0x37303032],ch        # 0x177346664
   140043632:	add    BYTE PTR [rax],al
   140043634:	add    BYTE PTR [rax],al
   140043636:	add    BYTE PTR [rax],al
   140043638:	movsxd esi,DWORD PTR [rbx+0x49]
   14004363b:	push   rbx
   14004363c:	rex.WRXB
   14004363d:	rex.WR (bad) 
   14004363f:	je     0x1400436aa
   140043641:	outs   dx,BYTE PTR ds:[rsi]
   140043642:	rex.RXB jb 0x1400436aa
   140043645:	imul   eax,DWORD PTR gs:[rax],0x67
   140043649:	jb     0x1400436b0
   14004364b:	imul   edi,DWORD PTR gs:[rax],0x0
   14004364f:	add    BYTE PTR [rdi+0x72],ah
   140043652:	gs imul eax,DWORD PTR gs:[rax],0x0
   140043657:	add    BYTE PTR [rbp+0x43],al
   14004365a:	rex.WRB
   14004365b:	rex.B sub eax,0x383131
   140043661:	add    BYTE PTR [rax],al
   140043663:	add    BYTE PTR [rax],al
   140043665:	add    BYTE PTR [rax],al
   140043667:	add    BYTE PTR [rbp+0x4c],al
   14004366a:	rex.WRXB push r12
   14004366c:	pop    rdi
   14004366d:	cmp    DWORD PTR [rdx],esi
   14004366f:	cmp    BYTE PTR [rax],al
   140043671:	add    BYTE PTR [rax],al
   140043673:	add    BYTE PTR [rax],al
   140043675:	add    BYTE PTR [rax],al
   140043677:	add    BYTE PTR [rcx+0x53],cl
   14004367a:	rex.WRXB sub rax,0x39353838
   140043680:	sub    eax,0x37
   140043685:	add    BYTE PTR [rax],al
   140043687:	add    BYTE PTR [rcx+0x53],cl
   14004368a:	rex.WRXB pop r15
   14004368c:	cmp    BYTE PTR [rax],bh
   14004368e:	xor    eax,0x372d39
   140043693:	add    BYTE PTR [rax],al
   140043695:	add    BYTE PTR [rax],al
   140043697:	add    BYTE PTR [rcx+0x73],ch
   14004369a:	outs   dx,DWORD PTR ds:[rsi]
   14004369b:	sub    eax,0x312d7269
   1400436a0:	xor    dh,BYTE PTR [rsi]
   1400436a2:	add    BYTE PTR [rax],al
   1400436a4:	add    BYTE PTR [rax],al
   1400436a6:	add    BYTE PTR [rax],al
   1400436a8:	rex.WB push r11
   1400436aa:	rex.WRXB pop r15
   1400436ac:	cmp    BYTE PTR [rax],bh
   1400436ae:	xor    eax,0x3a372d39
   1400436b3:	xor    DWORD PTR [rcx],edi
   1400436b5:	cmp    BYTE PTR [rdi],dh
   1400436b7:	add    BYTE PTR [rcx],dh
   1400436b9:	xor    BYTE PTR [rax],bh
   1400436bb:	cmp    DWORD PTR [rax],eax
   1400436bd:	add    BYTE PTR [rax],al
   1400436bf:	add    BYTE PTR [rbx+0x70],ah
   1400436c2:	xor    DWORD PTR [rax],esi
   1400436c4:	cmp    BYTE PTR [rcx],bh
   1400436c6:	add    BYTE PTR [rax],al
   1400436c8:	cmp    BYTE PTR [rax],bh
   1400436ca:	xor    eax,0x365f39
   1400436cf:	add    BYTE PTR [rcx+0x62],ch
   1400436d2:	ins    DWORD PTR es:[rdi],dx
   1400436d3:	sub    eax,0x39383031
	...
   1400436e0:	imul   esp,DWORD PTR [rdx+0x6d],0x3830312d
   1400436e7:	cmp    DWORD PTR [rdi+0x50],ebx
   1400436ea:	xor    DWORD PTR [rax],esi
   1400436ec:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d7023
   1400436f2:	add    BYTE PTR [rax],al
   1400436f4:	add    BYTE PTR [rax],al
   1400436f6:	add    BYTE PTR [rax],al
   1400436f8:	movsxd esi,DWORD PTR [rbx+0x49]
   1400436fb:	push   rbx
   1400436fc:	rex.WRXB
   1400436fd:	rex.WR (bad) 
   1400436ff:	je     0x14004376a
   140043701:	outs   dx,BYTE PTR ds:[rsi]
   140043702:	rex.B jb 0x140043766
   140043705:	(bad)  
   140043706:	imul   esp,DWORD PTR [rbx+0x0],0x61000000
   14004370d:	jb     0x140043770
   14004370f:	(bad)  
   140043710:	imul   esp,DWORD PTR [rbx+0x0],0x0
   140043717:	add    BYTE PTR [rcx+0x53],al
   14004371a:	rex.WRB
   14004371b:	rex.WRXB sub rax,0x383037
   140043721:	add    BYTE PTR [rax],al
   140043723:	add    BYTE PTR [rax],al
   140043725:	add    BYTE PTR [rax],al
   140043727:	add    BYTE PTR [rbp+0x43],al
   14004372a:	rex.WRB
   14004372b:	rex.B sub eax,0x343131
   140043731:	add    BYTE PTR [rax],al
   140043733:	add    BYTE PTR [rax],al
   140043735:	add    BYTE PTR [rax],al
   140043737:	add    BYTE PTR [rcx+0x53],cl
   14004373a:	rex.WRXB sub rax,0x39353838
   140043740:	sub    eax,0x36
   140043745:	add    BYTE PTR [rax],al
   140043747:	add    BYTE PTR [rcx+0x53],cl
   14004374a:	rex.WRXB pop r15
   14004374c:	cmp    BYTE PTR [rax],bh
   14004374e:	xor    eax,0x362d39
   140043753:	add    BYTE PTR [rax],al
   140043755:	add    BYTE PTR [rax],al
   140043757:	add    BYTE PTR [rcx+0x73],ch
   14004375a:	outs   dx,DWORD PTR ds:[rsi]
   14004375b:	sub    eax,0x312d7269
   140043760:	xor    dh,BYTE PTR [rdi]
   140043762:	add    BYTE PTR [rax],al
   140043764:	add    BYTE PTR [rax],al
   140043766:	add    BYTE PTR [rax],al
   140043768:	rex.WB push r11
   14004376a:	rex.WRXB pop r15
   14004376c:	cmp    BYTE PTR [rax],bh
   14004376e:	xor    eax,0x3a362d39
   140043773:	xor    DWORD PTR [rcx],edi
   140043775:	cmp    BYTE PTR [rdi],dh
   140043777:	add    BYTE PTR [rcx],bh
   140043779:	xor    DWORD PTR [rip+0x39706300],esi        # 0x179749a7f
   14004377f:	xor    DWORD PTR [rip+0x38000000],esi        # 0x178043785
   140043785:	cmp    BYTE PTR [rip+0x355f39],dh        # 0x1403996c4
   14004378b:	add    BYTE PTR [rax],al
   14004378d:	add    BYTE PTR [rax],al
   14004378f:	add    BYTE PTR [rcx+0x62],ch
   140043792:	ins    DWORD PTR es:[rdi],dx
   140043793:	sub    eax,0x353139
   140043798:	imul   esp,DWORD PTR [rdx+0x6d],0x3531392d
   14004379f:	pop    rdi
   1400437a0:	push   rax
   1400437a1:	xor    DWORD PTR [rax],esi
   1400437a3:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d70da
   1400437a9:	add    BYTE PTR [rax],al
   1400437ab:	add    BYTE PTR [rax],al
   1400437ad:	add    BYTE PTR [rax],al
   1400437af:	add    BYTE PTR [rbx+0x73],ah
   1400437b2:	rex.WB push r11
   1400437b4:	rex.WRXB
   1400437b5:	rex.WR (bad) 
   1400437b7:	je     0x140043822
   1400437b9:	outs   dx,BYTE PTR ds:[rsi]
   1400437ba:	rex.XB jns 0x14004382f
   1400437bd:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x63
   1400437c5:	add    BYTE PTR [rax],al
   1400437c7:	add    BYTE PTR [rbx+0x79],ah
   1400437ca:	jb     0x140043835
   1400437cc:	ins    BYTE PTR es:[rdi],dx
   1400437cd:	ins    BYTE PTR es:[rdi],dx
   1400437ce:	imul   esp,DWORD PTR [rbx+0x0],0x0
   1400437d5:	add    BYTE PTR [rax],al
   1400437d7:	add    BYTE PTR [rcx+0x53],cl
   1400437da:	rex.WRXB sub rax,0x39353838
   1400437e0:	sub    eax,0x35
   1400437e5:	add    BYTE PTR [rax],al
   1400437e7:	add    BYTE PTR [rcx+0x53],cl
   1400437ea:	rex.WRXB pop r15
   1400437ec:	cmp    BYTE PTR [rax],bh
   1400437ee:	xor    eax,0x352d39
   1400437f3:	add    BYTE PTR [rax],al
   1400437f5:	add    BYTE PTR [rax],al
   1400437f7:	add    BYTE PTR [rcx+0x73],ch
   1400437fa:	outs   dx,DWORD PTR ds:[rsi]
   1400437fb:	sub    eax,0x312d7269
   140043800:	xor    al,0x34
   140043802:	add    BYTE PTR [rax],al
   140043804:	add    BYTE PTR [rax],al
   140043806:	add    BYTE PTR [rax],al
   140043808:	rex.WB push r11
   14004380a:	rex.WRXB pop r15
   14004380c:	cmp    BYTE PTR [rax],bh
   14004380e:	xor    eax,0x3a352d39
   140043813:	xor    DWORD PTR [rcx],edi
   140043815:	cmp    BYTE PTR [rax],bh
   140043817:	add    BYTE PTR [rcx],bh
   140043819:	xor    DWORD PTR [rax+rax*1],esi
   14004381c:	movsxd esi,DWORD PTR [rax+0x39]
   14004381f:	xor    DWORD PTR [rax+rax*1],esi
   140043822:	add    BYTE PTR [rax],al
   140043824:	cmp    BYTE PTR [rax],bh
   140043826:	xor    eax,0x345f39
   14004382b:	add    BYTE PTR [rax],al
   14004382d:	add    BYTE PTR [rax],al
   14004382f:	add    BYTE PTR [rcx+0x62],ch
   140043832:	ins    DWORD PTR es:[rdi],dx
   140043833:	sub    eax,0x343139
   140043838:	imul   esp,DWORD PTR [rdx+0x6d],0x3431392d
   14004383f:	pop    rdi
   140043840:	push   rax
   140043841:	xor    DWORD PTR [rax],esi
   140043843:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d717a
   140043849:	add    BYTE PTR [rax],al
   14004384b:	add    BYTE PTR [rax],al
   14004384d:	add    BYTE PTR [rax],al
   14004384f:	add    BYTE PTR [rbx+0x73],ah
   140043852:	rex.WB push r11
   140043854:	rex.WRXB
   140043855:	rex.WR (bad) 
   140043857:	je     0x1400438c2
   140043859:	outs   dx,BYTE PTR ds:[rsi]
   14004385a:	xor    al,0x0
   14004385c:	ins    BYTE PTR es:[rdi],dx
   14004385d:	xor    al,0x0
   14004385f:	add    BYTE PTR [rcx+riz*2+0x74],ch
   140043863:	imul   ebp,DWORD PTR [rsi+0x34],0x53490000
   14004386a:	rex.WRXB sub rax,0x39353838
   140043870:	sub    eax,0x34
   140043875:	add    BYTE PTR [rax],al
   140043877:	add    BYTE PTR [rcx+0x53],cl
   14004387a:	rex.WRXB pop r15
   14004387c:	cmp    BYTE PTR [rax],bh
   14004387e:	xor    eax,0x342d39
   140043883:	add    BYTE PTR [rax],al
   140043885:	add    BYTE PTR [rax],al
   140043887:	add    BYTE PTR [rcx+0x73],ch
   14004388a:	outs   dx,DWORD PTR ds:[rsi]
   14004388b:	sub    eax,0x312d7269
   140043890:	xor    DWORD PTR [rax],esi
   140043892:	add    BYTE PTR [rax],al
   140043894:	add    BYTE PTR [rax],al
   140043896:	add    BYTE PTR [rax],al
   140043898:	rex.WB push r11
   14004389a:	rex.WRXB pop r15
   14004389c:	cmp    BYTE PTR [rax],bh
   14004389e:	xor    eax,0x3a342d39
   1400438a3:	xor    DWORD PTR [rcx],edi
   1400438a5:	cmp    BYTE PTR [rax],bh
   1400438a7:	add    BYTE PTR [rcx],bh
   1400438a9:	xor    DWORD PTR [rbx],esi
   1400438ab:	add    BYTE PTR [rbx+0x70],ah
   1400438ae:	cmp    DWORD PTR [rcx],esi
   1400438b0:	xor    eax,DWORD PTR [rax]
   1400438b2:	add    BYTE PTR [rax],al
   1400438b4:	cmp    BYTE PTR [rax],bh
   1400438b6:	xor    eax,0x335f39
   1400438bb:	add    BYTE PTR [rax],al
   1400438bd:	add    BYTE PTR [rax],al
   1400438bf:	add    BYTE PTR [rcx+0x62],ch
   1400438c2:	ins    DWORD PTR es:[rdi],dx
   1400438c3:	sub    eax,0x333139
   1400438c8:	imul   esp,DWORD PTR [rdx+0x6d],0x3331392d
   1400438cf:	pop    rdi
   1400438d0:	push   rax
   1400438d1:	xor    DWORD PTR [rax],esi
   1400438d3:	xor    BYTE PTR [rip+0x30303032],ch        # 0x17034690b
   1400438d9:	add    BYTE PTR [rax],al
   1400438db:	add    BYTE PTR [rax],al
   1400438dd:	add    BYTE PTR [rax],al
   1400438df:	add    BYTE PTR [rbx+0x73],ah
   1400438e2:	rex.WB push r11
   1400438e4:	rex.WRXB
   1400438e5:	rex.WR (bad) 
   1400438e7:	je     0x140043952
   1400438e9:	outs   dx,BYTE PTR ds:[rsi]
   1400438ea:	xor    eax,DWORD PTR [rax]
   1400438ec:	ins    BYTE PTR es:[rdi],dx
   1400438ed:	xor    eax,DWORD PTR [rax]
   1400438ef:	add    BYTE PTR [rcx+riz*2+0x74],ch
   1400438f3:	imul   ebp,DWORD PTR [rsi+0x33],0x53490000
   1400438fa:	rex.WRXB sub rax,0x39353838
   140043900:	sub    eax,0x33
   140043905:	add    BYTE PTR [rax],al
   140043907:	add    BYTE PTR [rcx+0x53],cl
   14004390a:	rex.WRXB pop r15
   14004390c:	cmp    BYTE PTR [rax],bh
   14004390e:	xor    eax,0x332d39
   140043913:	add    BYTE PTR [rax],al
   140043915:	add    BYTE PTR [rax],al
   140043917:	add    BYTE PTR [rcx+0x73],ch
   14004391a:	outs   dx,DWORD PTR ds:[rsi]
   14004391b:	sub    eax,0x312d7269
   140043920:	xor    BYTE PTR [rcx],bh
   140043922:	add    BYTE PTR [rax],al
   140043924:	add    BYTE PTR [rax],al
   140043926:	add    BYTE PTR [rax],al
   140043928:	rex.WB push r11
   14004392a:	rex.WRXB pop r15
   14004392c:	cmp    BYTE PTR [rax],bh
   14004392e:	xor    eax,0x3a332d39
   140043933:	xor    DWORD PTR [rcx],edi
   140043935:	cmp    BYTE PTR [rax],bh
   140043937:	add    BYTE PTR [rcx],bh
   140043939:	xor    DWORD PTR [rdx],esi
   14004393b:	add    BYTE PTR [rbx+0x70],ah
   14004393e:	cmp    DWORD PTR [rcx],esi
   140043940:	xor    al,BYTE PTR [rax]
   140043942:	add    BYTE PTR [rax],al
   140043944:	cmp    BYTE PTR [rax],bh
   140043946:	xor    eax,0x325f39
   14004394b:	add    BYTE PTR [rax],al
   14004394d:	add    BYTE PTR [rax],al
   14004394f:	add    BYTE PTR [rcx+0x62],ch
   140043952:	ins    DWORD PTR es:[rdi],dx
   140043953:	sub    eax,0x323139
   140043958:	imul   esp,DWORD PTR [rdx+0x6d],0x3231392d
   14004395f:	pop    rdi
   140043960:	push   rax
   140043961:	xor    DWORD PTR [rax],esi
   140043963:	xor    BYTE PTR [rip+0x35393931],ch        # 0x1753d729a
   140043969:	add    BYTE PTR [rax],al
   14004396b:	add    BYTE PTR [rax],al
   14004396d:	add    BYTE PTR [rax],al
   14004396f:	add    BYTE PTR [rbx+0x73],ah
   140043972:	rex.WB push r11
   140043974:	rex.WRXB
   140043975:	rex.WR (bad) 
   140043977:	je     0x1400439e2
   140043979:	outs   dx,BYTE PTR ds:[rsi]
   14004397a:	xor    al,BYTE PTR [rax]
   14004397c:	ins    BYTE PTR es:[rdi],dx
   14004397d:	xor    al,BYTE PTR [rax]
   14004397f:	add    BYTE PTR [rcx+riz*2+0x74],ch
   140043983:	imul   ebp,DWORD PTR [rsi+0x32],0x53490000
   14004398a:	rex.WRXB sub rax,0x39353838
   140043990:	sub    eax,0x32
   140043995:	add    BYTE PTR [rax],al
   140043997:	add    BYTE PTR [rcx+0x53],cl
   14004399a:	rex.WRXB pop r15
   14004399c:	cmp    BYTE PTR [rax],bh
   14004399e:	xor    eax,0x322d39
   1400439a3:	add    BYTE PTR [rax],al
   1400439a5:	add    BYTE PTR [rax],al
   1400439a7:	add    BYTE PTR [rcx+0x73],ch
   1400439aa:	outs   dx,DWORD PTR ds:[rsi]
   1400439ab:	sub    eax,0x312d7269
   1400439b0:	xor    BYTE PTR [rcx],dh
   1400439b2:	add    BYTE PTR [rax],al
   1400439b4:	add    BYTE PTR [rax],al
   1400439b6:	add    BYTE PTR [rax],al
   1400439b8:	rex.WB push r11
   1400439ba:	rex.WRXB pop r15
   1400439bc:	cmp    BYTE PTR [rax],bh
   1400439be:	xor    eax,0x3a322d39
   1400439c3:	xor    DWORD PTR [rcx],edi
   1400439c5:	cmp    BYTE PTR [rdi],dh
   1400439c7:	add    BYTE PTR [rax],bh
   1400439c9:	xor    DWORD PTR [rcx],edi
   1400439cb:	add    BYTE PTR [rax],bh
   1400439cd:	cmp    BYTE PTR [rip+0x315f39],dh        # 0x14035990c
   1400439d3:	add    BYTE PTR [rax],al
   1400439d5:	add    BYTE PTR [rax],al
   1400439d7:	add    BYTE PTR [rbx+0x73],ah
   1400439da:	rex.WB push r11
   1400439dc:	rex.WRXB
   1400439dd:	rex.WR (bad) 
   1400439df:	je     0x140043a4a
   1400439e1:	outs   dx,BYTE PTR ds:[rsi]
   1400439e2:	xor    DWORD PTR [rax],eax
   1400439e4:	rex.XB push r8
   1400439e6:	cmp    BYTE PTR [rcx],dh
   1400439e8:	cmp    DWORD PTR [rax],eax
   1400439ea:	add    BYTE PTR [rax],al
   1400439ec:	rex.WB
   1400439ed:	rex.X
   1400439ee:	rex.WRB cmp BYTE PTR [r9],r14b
   1400439f1:	cmp    DWORD PTR [rax],eax
   1400439f3:	add    BYTE PTR [rcx+rsi*1+0x0],ch
   1400439f7:	add    BYTE PTR [rcx+riz*2+0x74],ch
   1400439fb:	imul   ebp,DWORD PTR [rsi+0x31],0x53490000
   140043a02:	rex.WRXB sub rax,0x39353838
   140043a08:	sub    eax,0x31
   140043a0d:	add    BYTE PTR [rax],al
   140043a0f:	add    BYTE PTR [rcx+0x53],cl
   140043a12:	rex.WRXB pop r15
   140043a14:	cmp    BYTE PTR [rax],bh
   140043a16:	xor    eax,0x312d39
   140043a1b:	add    BYTE PTR [rax],al
   140043a1d:	add    BYTE PTR [rax],al
   140043a1f:	add    BYTE PTR [rcx+0x73],ch
   140043a22:	outs   dx,DWORD PTR ds:[rsi]
   140043a23:	sub    eax,0x312d7269
   140043a28:	xor    BYTE PTR [rax],dh
   140043a2a:	add    BYTE PTR [rax],al
   140043a2c:	add    BYTE PTR [rax],al
   140043a2e:	add    BYTE PTR [rax],al
   140043a30:	rex.WB push r11
   140043a32:	rex.WRXB pop r15
   140043a34:	cmp    BYTE PTR [rax],bh
   140043a36:	xor    eax,0x3a312d39
   140043a3b:	xor    DWORD PTR [rcx],edi
   140043a3d:	cmp    BYTE PTR [rdi],dh
   140043a3f:	add    BYTE PTR [rcx+0x73],ah
   140043a42:	movsxd ebp,DWORD PTR [rcx+0x69]
   140043a45:	(bad)  
   140043a46:	add    BYTE PTR [rax],al
   140043a48:	ss xor al,0x36
   140043a4b:	add    BYTE PTR [rax],al
   140043a4d:	add    BYTE PTR [rax],al
   140043a4f:	add    BYTE PTR [rbx+0x73],ah
   140043a52:	push   r11
   140043a54:	rex.XB
   140043a55:	rex.WB
   140043a56:	rex.WB add BYTE PTR [r11+0x70],spl
   140043a5a:	xor    esi,DWORD PTR [rsi]
   140043a5c:	(bad)  
   140043a5d:	add    BYTE PTR [rax],al
   140043a5f:	add    BYTE PTR [rcx+0x42],cl
   140043a62:	xor    r14,QWORD PTR [r14]
   140043a65:	(bad)  
   140043a66:	add    BYTE PTR [rax],al
   140043a68:	jne    0x140043add
   140043a6a:	add    BYTE PTR [rax],al
   140043a6c:	add    BYTE PTR [rax],al
   140043a6e:	add    BYTE PTR [rax],al
   140043a70:	push   rbp
   140043a71:	push   rbx
   140043a72:	sub    eax,0x49435341
   140043a77:	rex.WB add BYTE PTR [r8],al
   140043a7a:	add    BYTE PTR [rax],al
   140043a7c:	add    BYTE PTR [rax],al
   140043a7e:	add    BYTE PTR [rax],al
   140043a80:	rex.WB push r11
   140043a82:	rex.WRXB
   140043a83:	ss xor al,0x36
   140043a86:	sub    eax,0x5355
   140043a8b:	add    BYTE PTR [rcx+0x53],al
   140043a8e:	rex.XB
   140043a8f:	rex.WB
   140043a90:	rex.WB add BYTE PTR [r8],al
   140043a93:	add    BYTE PTR [rax],al
   140043a95:	add    BYTE PTR [rax],al
   140043a97:	add    BYTE PTR [rcx+0x53],cl
   140043a9a:	rex.WRXB pop r15
   140043a9c:	ss xor al,0x36
   140043a9f:	imul   esi,DWORD PTR cs:[rdx+0x76],0x3939313a
   140043aa7:	xor    DWORD PTR [rax],eax
   140043aa9:	add    BYTE PTR [rax],al
   140043aab:	add    BYTE PTR [rax],al
   140043aad:	add    BYTE PTR [rax],al
   140043aaf:	add    BYTE PTR [rcx+0x4e],al
   140043ab2:	push   rbx
   140043ab3:	rex.WB pop r15
   140043ab5:	pop    rax
   140043ab6:	xor    ebp,DWORD PTR [rsi]
   140043ab8:	xor    al,0x2d
   140043aba:	xor    DWORD PTR [rcx],edi
   140043abc:	cmp    BYTE PTR [rsi],dh
   140043abe:	add    BYTE PTR [rax],al
   140043ac0:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   140043ac7:	add    BYTE PTR ss:[rax],al
   140043aca:	add    BYTE PTR [rax],al
   140043acc:	add    BYTE PTR [rax],al
   140043ace:	add    BYTE PTR [rax],al
   140043ad0:	rex.B
   140043ad1:	rex.WRX push rbx
   140043ad3:	rex.WB pop r15
   140043ad5:	pop    rax
   140043ad6:	xor    ebp,DWORD PTR [rsi]
   140043ad8:	xor    al,0x2d
   140043ada:	xor    DWORD PTR [rcx],edi
   140043adc:	cmp    BYTE PTR ss:[rax],al
   140043adf:	add    BYTE PTR [rip+0x44203a73],ah        # 0x184247558
   140043ae5:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x6620746f
   140043aed:	imul   ebp,DWORD PTR [rsi+0x64],0x206e6120
   140043af4:	rex.WB
   140043af5:	rex.B
   140043af6:	rex.WRX
   140043af7:	and    BYTE PTR [r13+0x61],bpl
   140043afb:	je     0x140043b60
   140043afd:	push   0x726f6620
   140043b02:	and    BYTE PTR [rbp+0x6e],ah
   140043b05:	movsxd ebp,DWORD PTR [rdi+0x64]
   140043b08:	imul   ebp,DWORD PTR [rsi+0x67],0x73252220
   140043b0f:	and    cl,BYTE PTR [rdx]
   140043b11:	add    BYTE PTR [rax],al
   140043b13:	add    BYTE PTR [rax],al
   140043b15:	add    BYTE PTR [rax],al
   140043b17:	add    BYTE PTR [rbp+0x6e],dl
   140043b1a:	imul   esp,DWORD PTR [rbx+0x6f],0x41496564
   140043b21:	rex.WRX
   140043b22:	rex.B
   140043b23:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140043b25:	outs   dx,DWORD PTR ds:[rsi]
   140043b26:	imul   esi,DWORD PTR [rbp+0x70],0x0
   140043b2a:	add    BYTE PTR [rax],al
   140043b2c:	add    BYTE PTR [rax],al
   140043b2e:	add    BYTE PTR [rax],al
   140043b30:	push   rdi
   140043b31:	imul   ebp,DWORD PTR [rsi+0x64],0x2d73776f
	...
   140043b40:	ja     0x140043bab
   140043b42:	outs   dx,BYTE PTR ds:[rsi]
   140043b43:	outs   dx,DWORD PTR fs:[rsi]
   140043b45:	ja     0x140043bba
   140043b47:	sub    eax,0x0
   140043b4c:	add    BYTE PTR [rax],al
   140043b4e:	add    BYTE PTR [rax],al
   140043b50:	(bad)  
   140043b51:	outs   dx,DWORD PTR ds:[rsi]
   140043b52:	jb     0x140043bb5
   140043b54:	pop    rsp
   140043b55:	ins    BYTE PTR es:[rdi],dx
   140043b56:	imul   esp,DWORD PTR [rdx+0x5c],0x63696e75
   140043b5d:	outs   dx,DWORD PTR ds:[rsi]
   140043b5e:	fs gs pop rsp
   140043b61:	jne    0x140043bd1
   140043b63:	imul   esp,DWORD PTR [rbx+0x6f],0x69536564
   140043b6a:	ins    DWORD PTR es:[rdi],dx
   140043b6b:	jo     0x140043bd9
   140043b6d:	gs push rsp
   140043b6f:	jns    0x140043be1
   140043b71:	gs jae 0x140043ba2
   140043b74:	movsxd eax,DWORD PTR [rax]
   140043b76:	add    BYTE PTR [rax],al
   140043b78:	and    eax,0x55203a73
   140043b7d:	outs   dx,BYTE PTR ds:[rsi]
   140043b7e:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140043b82:	outs   dx,BYTE PTR ds:[rsi]
   140043b83:	and    BYTE PTR [rbp+0x6e],ah
   140043b86:	movsxd ebp,DWORD PTR [rdi+0x64]
   140043b89:	imul   ebp,DWORD PTR [rsi+0x67],0x2e642520
   140043b90:	or     al,BYTE PTR [rax]
   140043b92:	add    BYTE PTR [rax],al
   140043b94:	add    BYTE PTR [rax],al
   140043b96:	add    BYTE PTR [rax],al
   140043b98:	push   rbp
   140043b99:	outs   dx,BYTE PTR ds:[rsi]
   140043b9a:	imul   esp,DWORD PTR [rbx+0x6f],0x455f6564
   140043ba1:	outs   dx,BYTE PTR ds:[rsi]
   140043ba2:	movsxd ebp,DWORD PTR [rdi+0x64]
   140043ba5:	imul   ebp,DWORD PTR [rsi+0x67],0x6d756e45
   140043bac:	push   rsp
   140043bad:	outs   dx,DWORD PTR ds:[rsi]
   140043bae:	rex.WRX (bad) 
   140043bb0:	ins    DWORD PTR es:[rdi],dx
   140043bb1:	add    BYTE PTR gs:[rax],al
	...
   140043bc8:	add    BYTE PTR [rcx],al
   140043bca:	add    DWORD PTR [rcx],eax
   140043bcc:	add    DWORD PTR [rcx],eax
	...
   140043bde:	add    BYTE PTR [rax],al
   140043be0:	add    DWORD PTR [rax],eax
	...
   140043c42:	add    BYTE PTR [rax],al
   140043c44:	add    BYTE PTR [rcx],al
	...
   140043c5e:	add    BYTE PTR [rax],al
   140043c60:	add    DWORD PTR [rax],eax
	...
   140043d3e:	add    BYTE PTR [rax],al
   140043d40:	add    DWORD PTR [rax],eax
	...
   140043dce:	add    DWORD PTR [rax],eax
	...
   140043ec0:	add    DWORD PTR [rcx],eax
   140043ec2:	add    DWORD PTR [rcx],eax
   140043ec4:	add    DWORD PTR [rcx],eax
   140043ec6:	add    DWORD PTR [rcx],eax
   140043ec8:	add    DWORD PTR [rcx],eax
   140043eca:	add    DWORD PTR [rax],eax
	...
   140043ee8:	add    DWORD PTR [rcx],eax
   140043eea:	add    BYTE PTR [rax],al
   140043eec:	add    BYTE PTR [rax],al
   140043eee:	add    BYTE PTR [rcx],al
	...
   140043f1c:	add    BYTE PTR [rax],al
   140043f1e:	add    BYTE PTR [rcx],al
	...
   140043fc0:	add    DWORD PTR [rax],eax
	...
   1400440c2:	add    DWORD PTR [rax],eax
   1400440c4:	add    al,BYTE PTR [rax]
   1400440c6:	add    eax,DWORD PTR [rax]
   1400440c8:	add    al,0x0
   1400440ca:	add    eax,0x7000600
   1400440cf:	add    BYTE PTR [rax],cl
   1400440d1:	add    BYTE PTR [rcx],cl
   1400440d3:	add    BYTE PTR [rdx],cl
   1400440d5:	add    BYTE PTR [rbx],cl
   1400440d7:	add    BYTE PTR [rax+rax*1],cl
   1400440da:	or     eax,0xf000e00
   1400440df:	add    BYTE PTR [rax],dl
   1400440e1:	add    BYTE PTR [rcx],dl
   1400440e3:	add    BYTE PTR [rdx],dl
   1400440e5:	add    BYTE PTR [rbx],dl
   1400440e7:	add    BYTE PTR [rax+rax*1],dl
   1400440ea:	adc    eax,0x17001600
   1400440ef:	add    BYTE PTR [rax],bl
   1400440f1:	add    BYTE PTR [rcx],bl
   1400440f3:	add    BYTE PTR [rdx],bl
   1400440f5:	add    BYTE PTR [rbx],bl
   1400440f7:	add    BYTE PTR [rax+rax*1],bl
   1400440fa:	sbb    eax,0x1f001e00
   1400440ff:	add    BYTE PTR [rax],ah
   140044101:	add    BYTE PTR [rcx],ah
   140044103:	add    BYTE PTR [rdx],ah
   140044105:	add    BYTE PTR [rbx],ah
   140044107:	add    BYTE PTR [rax+rax*1],ah
   14004410a:	and    eax,0x27002600
   14004410f:	add    BYTE PTR [rax],ch
   140044111:	add    BYTE PTR [rcx],ch
   140044113:	add    BYTE PTR [rdx],ch
   140044115:	add    BYTE PTR [rbx],ch
   140044117:	add    BYTE PTR [rax+rax*1],ch
   14004411a:	sub    eax,0x2f002e00
   14004411f:	add    BYTE PTR [rax],dh
   140044121:	add    BYTE PTR [rcx],dh
   140044123:	add    BYTE PTR [rdx],dh
   140044125:	add    BYTE PTR [rbx],dh
   140044127:	add    BYTE PTR [rax+rax*1],dh
   14004412a:	xor    eax,0x37003600
   14004412f:	add    BYTE PTR [rax],bh
   140044131:	add    BYTE PTR [rcx],bh
   140044133:	add    BYTE PTR [rdx],bh
   140044135:	add    BYTE PTR [rbx],bh
   140044137:	add    BYTE PTR [rax+rax*1],bh
   14004413a:	cmp    eax,0x3f003e00
   14004413f:	add    BYTE PTR [rax+0x0],al
   140044142:	(bad)  
   140044143:	add    BYTE PTR [rdx+0x0],ah
   140044146:	movsxd eax,DWORD PTR [rax]
   140044148:	add    BYTE PTR fs:[rbp+0x0],ah
   14004414c:	data16 add BYTE PTR [rdi+0x0],ah
   140044150:	push   0x6a006900
   140044155:	add    BYTE PTR [rbx+0x0],ch
   140044158:	ins    BYTE PTR es:[rdi],dx
   140044159:	add    BYTE PTR [rbp+0x0],ch
   14004415c:	outs   dx,BYTE PTR ds:[rsi]
   14004415d:	add    BYTE PTR [rdi+0x0],ch
   140044160:	jo     0x140044162
   140044162:	jno    0x140044164
   140044164:	jb     0x140044166
   140044166:	jae    0x140044168
   140044168:	je     0x14004416a
   14004416a:	jne    0x14004416c
   14004416c:	jbe    0x14004416e
   14004416e:	ja     0x140044170
   140044170:	js     0x140044172
   140044172:	jns    0x140044174
   140044174:	jp     0x140044176
   140044176:	pop    rbx
   140044177:	add    BYTE PTR [rax+rax*1+0x5d],bl
   14004417b:	add    BYTE PTR [rsi+0x0],bl
   14004417e:	pop    rdi
   14004417f:	add    BYTE PTR [rax+0x0],ah
   140044182:	(bad)  
   140044183:	add    BYTE PTR [rdx+0x0],ah
   140044186:	movsxd eax,DWORD PTR [rax]
   140044188:	add    BYTE PTR fs:[rbp+0x0],ah
   14004418c:	data16 add BYTE PTR [rdi+0x0],ah
   140044190:	push   0x6a006900
   140044195:	add    BYTE PTR [rbx+0x0],ch
   140044198:	ins    BYTE PTR es:[rdi],dx
   140044199:	add    BYTE PTR [rbp+0x0],ch
   14004419c:	outs   dx,BYTE PTR ds:[rsi]
   14004419d:	add    BYTE PTR [rdi+0x0],ch
   1400441a0:	jo     0x1400441a2
   1400441a2:	jno    0x1400441a4
   1400441a4:	jb     0x1400441a6
   1400441a6:	jae    0x1400441a8
   1400441a8:	je     0x1400441aa
   1400441aa:	jne    0x1400441ac
   1400441ac:	jbe    0x1400441ae
   1400441ae:	ja     0x1400441b0
   1400441b0:	js     0x1400441b2
   1400441b2:	jns    0x1400441b4
   1400441b4:	jp     0x1400441b6
   1400441b6:	jnp    0x1400441b8
   1400441b8:	jl     0x1400441ba
   1400441ba:	jge    0x1400441bc
   1400441bc:	jle    0x1400441be
   1400441be:	jg     0x1400441c0
   1400441c0:	add    BYTE PTR [rax],0x81
   1400441c3:	add    BYTE PTR [rdx-0x7bff7d00],al
   1400441c9:	add    BYTE PTR [rbp-0x78ff7a00],al
   1400441cf:	add    BYTE PTR [rax-0x75ff7700],cl
   1400441d5:	add    BYTE PTR [rbx-0x72ff7400],cl
   1400441db:	add    BYTE PTR [rsi-0x6fff7100],cl
   1400441e1:	add    BYTE PTR [rcx-0x6cff6e00],dl
   1400441e7:	add    BYTE PTR [rax+rax*1+0x960095],dl
   1400441ee:	xchg   edi,eax
   1400441ef:	add    BYTE PTR [rax-0x65ff6700],bl
   1400441f5:	add    BYTE PTR [rbx-0x62ff6400],bl
   1400441fb:	add    BYTE PTR [rsi-0x5fff6100],bl
   140044201:	add    BYTE PTR [rcx-0x5cff5e00],ah
   140044207:	add    BYTE PTR [rax+rax*1+0xa600a5],ah
   14004420e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004420f:	add    BYTE PTR [rax-0x55ff5700],ch
   140044215:	add    BYTE PTR [rbx-0x52ff5400],ch
   14004421b:	add    BYTE PTR [rsi-0x4fff5100],ch
   140044221:	add    BYTE PTR [rcx-0x4cff4e00],dh
   140044227:	add    BYTE PTR [rax+rax*1+0xb603bc],dh
   14004422e:	mov    bh,0x0
   140044230:	mov    eax,0xba00b900
   140044235:	add    BYTE PTR [rbx-0x42ff4400],bh
   14004423b:	add    BYTE PTR [rsi-0x1fff4100],bh
   140044241:	add    cl,ah
   140044243:	add    dl,ah
   140044245:	add    bl,ah
   140044247:	add    ah,ah
   140044249:	add    ch,ah
   14004424b:	add    dh,ah
   14004424d:	add    bh,ah
   14004424f:	add    al,ch
   140044251:	add    cl,ch
   140044253:	add    dl,ch
   140044255:	add    bl,ch
   140044257:	add    ah,ch
   140044259:	add    ch,ch
   14004425b:	add    dh,ch
   14004425d:	add    bh,ch
   14004425f:	add    al,dh
   140044261:	add    cl,dh
   140044263:	add    dl,dh
   140044265:	add    bl,dh
   140044267:	add    ah,dh
   140044269:	add    ch,dh
   14004426b:	add    dh,dh
   14004426d:	add    bh,dl
   14004426f:	add    al,bh
   140044271:	add    cl,bh
   140044273:	add    dl,bh
   140044275:	add    bl,bh
   140044277:	add    ah,bh
   140044279:	add    ch,bh
   14004427b:	add    dh,bh
   14004427d:	add    bh,bl
   14004427f:	add    al,ah
   140044281:	add    cl,ah
   140044283:	add    dl,ah
   140044285:	add    bl,ah
   140044287:	add    ah,ah
   140044289:	add    ch,ah
   14004428b:	add    dh,ah
   14004428d:	add    bh,ah
   14004428f:	add    al,ch
   140044291:	add    cl,ch
   140044293:	add    dl,ch
   140044295:	add    bl,ch
   140044297:	add    ah,ch
   140044299:	add    ch,ch
   14004429b:	add    dh,ch
   14004429d:	add    bh,ch
   14004429f:	add    al,dh
   1400442a1:	add    cl,dh
   1400442a3:	add    dl,dh
   1400442a5:	add    bl,dh
   1400442a7:	add    ah,dh
   1400442a9:	add    ch,dh
   1400442ab:	add    dh,dh
   1400442ad:	add    bh,dh
   1400442af:	add    al,bh
   1400442b1:	add    cl,bh
   1400442b3:	add    dl,bh
   1400442b5:	add    bl,bh
   1400442b7:	add    ah,bh
   1400442b9:	add    ch,bh
   1400442bb:	add    dh,bh
   1400442bd:	add    bh,bh
   1400442bf:	add    BYTE PTR [rcx],al
   1400442c1:	add    DWORD PTR [rcx],eax
   1400442c3:	add    DWORD PTR [rbx],eax
   1400442c5:	add    DWORD PTR [rbx],eax
   1400442c7:	add    DWORD PTR [rip+0x7010501],eax        # 0x1470547ce
   1400442cd:	add    DWORD PTR [rdi],eax
   1400442cf:	add    DWORD PTR [rcx],ecx
   1400442d1:	add    DWORD PTR [rcx],ecx
   1400442d3:	add    DWORD PTR [rbx],ecx
   1400442d5:	add    DWORD PTR [rbx],ecx
   1400442d7:	add    DWORD PTR [rip+0xf010d01],ecx        # 0x14f054fde
   1400442dd:	add    DWORD PTR [rdi],ecx
   1400442df:	add    DWORD PTR [rcx],edx
   1400442e1:	add    DWORD PTR [rcx],edx
   1400442e3:	add    DWORD PTR [rbx],edx
   1400442e5:	add    DWORD PTR [rbx],edx
   1400442e7:	add    DWORD PTR [rip+0x17011501],edx        # 0x1570557ee
   1400442ed:	add    DWORD PTR [rdi],edx
   1400442ef:	add    DWORD PTR [rcx],ebx
   1400442f1:	add    DWORD PTR [rcx],ebx
   1400442f3:	add    DWORD PTR [rbx],ebx
   1400442f5:	add    DWORD PTR [rbx],ebx
   1400442f7:	add    DWORD PTR [rip+0x1f011d01],ebx        # 0x15f055ffe
   1400442fd:	add    DWORD PTR [rdi],ebx
   1400442ff:	add    DWORD PTR [rcx],esp
   140044301:	add    DWORD PTR [rcx],esp
   140044303:	add    DWORD PTR [rbx],esp
   140044305:	add    DWORD PTR [rbx],esp
   140044307:	add    DWORD PTR [rip+0x27012501],esp        # 0x16705680e
   14004430d:	add    DWORD PTR [rdi],esp
   14004430f:	add    DWORD PTR [rcx],ebp
   140044311:	add    DWORD PTR [rcx],ebp
   140044313:	add    DWORD PTR [rbx],ebp
   140044315:	add    DWORD PTR [rbx],ebp
   140044317:	add    DWORD PTR [rip+0x2f012d01],ebp        # 0x16f05701e
   14004431d:	add    DWORD PTR [rdi],ebp
   14004431f:	add    DWORD PTR [rax],esi
   140044321:	add    DWORD PTR [rcx],esi
   140044323:	add    DWORD PTR [rbx],esi
   140044325:	add    DWORD PTR [rbx],esi
   140044327:	add    DWORD PTR [rip+0x37013501],esi        # 0x17705782e
   14004432d:	add    DWORD PTR [rdi],esi
   14004432f:	add    DWORD PTR [rax],edi
   140044331:	add    DWORD PTR [rdx],edi
   140044333:	add    DWORD PTR [rdx],edi
   140044335:	add    DWORD PTR [rcx+rax*1],edi
   140044338:	cmp    al,0x1
   14004433a:	add    DWORD PTR ds:[rsi],edi
   14004433d:	add    DWORD PTR [rax+0x1],eax
   140044340:	rex add DWORD PTR [rdx+0x1],eax
   140044344:	add    DWORD PTR [rcx+r8*1+0x44],eax
   140044349:	add    DWORD PTR [rsi+0x1],eax
   14004434c:	rex.RX add DWORD PTR [rax+0x1],r9d
   140044350:	add    QWORD PTR [rcx+0x1],rcx
   140044354:	rex.WXB add QWORD PTR [r11+0x1],rcx
   140044358:	add    QWORD PTR [r13+0x1],r9
   14004435c:	rex.WRXB add QWORD PTR [r15+0x1],r9
   140044360:	push   rcx
   140044361:	add    DWORD PTR [rcx+0x1],edx
   140044364:	push   rbx
   140044365:	add    DWORD PTR [rbx+0x1],edx
   140044368:	push   rbp
   140044369:	add    DWORD PTR [rbp+0x1],edx
   14004436c:	push   rdi
   14004436d:	add    DWORD PTR [rdi+0x1],edx
   140044370:	pop    rcx
   140044371:	add    DWORD PTR [rcx+0x1],ebx
   140044374:	pop    rbx
   140044375:	add    DWORD PTR [rbx+0x1],ebx
   140044378:	pop    rbp
   140044379:	add    DWORD PTR [rbp+0x1],ebx
   14004437c:	pop    rdi
   14004437d:	add    DWORD PTR [rdi+0x1],ebx
   140044380:	(bad)  
   140044381:	add    DWORD PTR [rcx+0x1],esp
   140044384:	movsxd eax,DWORD PTR [rcx]
   140044386:	movsxd eax,DWORD PTR [rcx]
   140044388:	add    DWORD PTR gs:[rbp+0x1],esp
   14004438c:	add    DWORD PTR [edi+0x1],esp
   140044390:	imul   eax,DWORD PTR [rcx],0x16b0169
   140044396:	imul   eax,DWORD PTR [rcx],0x6d
   140044399:	add    DWORD PTR [rbp+0x1],ebp
   14004439c:	outs   dx,DWORD PTR ds:[rsi]
   14004439d:	add    DWORD PTR [rdi+0x1],ebp
   1400443a0:	jno    0x1400443a3
   1400443a2:	jno    0x1400443a5
   1400443a4:	jae    0x1400443a7
   1400443a6:	jae    0x1400443a9
   1400443a8:	jne    0x1400443ab
   1400443aa:	jne    0x1400443ad
   1400443ac:	ja     0x1400443af
   1400443ae:	ja     0x1400443b1
   1400443b0:	inc    DWORD PTR [rax]
   1400443b2:	jp     0x1400443b5
   1400443b4:	jp     0x1400443b7
   1400443b6:	jl     0x1400443b9
   1400443b8:	jl     0x1400443bb
   1400443ba:	jle    0x1400443bd
   1400443bc:	jle    0x1400443bf
   1400443be:	jae    0x1400443c0
   1400443c0:	add    BYTE PTR [rcx],0x53
   1400443c3:	add    al,BYTE PTR [rbx-0x7afe7cff]
   1400443c9:	add    DWORD PTR [rbp-0x77fdabff],eax
   1400443cf:	add    DWORD PTR [rax+0x57025601],ecx
   1400443d5:	add    cl,BYTE PTR [rcx+rax*1+0x18d018c]
   1400443dc:	fld    QWORD PTR [rcx]
   1400443de:	pop    rcx
   1400443df:	add    bl,BYTE PTR [rbx+0x2]
   1400443e2:	xchg   edx,eax
   1400443e3:	add    DWORD PTR [rdx+0x63026001],edx
   1400443e9:	add    dl,BYTE PTR [rbp+0x68026901]
   1400443ef:	add    bl,BYTE PTR [rcx-0x65fe66ff]
   1400443f5:	add    DWORD PTR [rbx+0x72026f01],ebx
   1400443fb:	add    bl,BYTE PTR [rsi-0x5efd8aff]
   140044401:	add    DWORD PTR [rcx-0x5cfe5cff],esp
   140044407:	add    DWORD PTR [rbp-0x7ffe5aff],esp
   14004440d:	add    ch,BYTE PTR [rax-0x7cfe57ff]
   140044413:	add    ch,BYTE PTR [rdx-0x52fe54ff]
   140044419:	add    DWORD PTR [rbp-0x4ffd77ff],ebp
   14004441f:	add    DWORD PTR [rax-0x74fd75ff],esi
   140044425:	add    dh,BYTE PTR [rcx+rax*1+0x1b601b4]
   14004442c:	mov    dh,0x1
   14004442e:	xchg   edx,eax
   14004442f:	add    bh,BYTE PTR [rcx-0x45fe46ff]
   140044435:	add    DWORD PTR [rbx-0x42fe42ff],edi
   14004443b:	add    DWORD PTR [rsi-0x3ffe40ff],edi
   140044441:	add    ecx,eax
   140044443:	add    edx,eax
   140044445:	add    ebx,eax
   140044447:	add    esi,eax
   140044449:	add    esi,eax
   14004444b:	add    esi,eax
   14004444d:	add    ecx,ecx
   14004444f:	add    ecx,ecx
   140044451:	add    ecx,ecx
   140044453:	add    esp,ecx
   140044455:	add    esp,ecx
   140044457:	add    esp,ecx
   140044459:	add    esi,ecx
   14004445b:	add    esi,ecx
   14004445d:	add    eax,edx
   14004445f:	add    eax,edx
   140044461:	add    edx,edx
   140044463:	add    edx,edx
   140044465:	add    esp,edx
   140044467:	add    esp,edx
   140044469:	add    esi,edx
   14004446b:	add    esi,edx
   14004446d:	add    eax,ebx
   14004446f:	add    eax,ebx
   140044471:	add    edx,ebx
   140044473:	add    edx,ebx
   140044475:	add    esp,ebx
   140044477:	add    esp,ebx
   140044479:	add    ebp,ebx
   14004447b:	add    edi,ebx
   14004447d:	add    edi,ebx
   14004447f:	add    ecx,esp
   140044481:	add    ecx,esp
   140044483:	add    ebx,esp
   140044485:	add    ebx,esp
   140044487:	add    ebp,esp
   140044489:	add    ebp,esp
   14004448b:	add    edi,esp
   14004448d:	add    edi,esp
   14004448f:	add    ecx,ebp
   140044491:	add    ecx,ebp
   140044493:	add    ebx,ebp
   140044495:	add    ebx,ebp
   140044497:	add    ebp,ebp
   140044499:	add    ebp,ebp
   14004449b:	add    edi,ebp
   14004449d:	add    edi,ebp
   14004449f:	add    eax,esi
   1400444a1:	add    ebx,esi
   1400444a3:	add    ebx,esi
   1400444a5:	add    ebx,esi
   1400444a7:	add    ebp,esi
   1400444a9:	add    ebp,esi
   1400444ab:	add    DWORD PTR [rbp-0x6fe40ff],edx
   1400444b1:	add    ecx,edi
   1400444b3:	add    ebx,edi
   1400444b5:	add    ebx,edi
   1400444b7:	add    ebp,edi
   1400444b9:	add    ebp,edi
   1400444bb:	add    edi,edi
   1400444bd:	add    edi,edi
   1400444bf:	add    DWORD PTR [rcx],eax
   1400444c1:	add    al,BYTE PTR [rcx]
   1400444c3:	add    al,BYTE PTR [rbx]
   1400444c5:	add    al,BYTE PTR [rbx]
   1400444c7:	add    al,BYTE PTR [rip+0x7020502]        # 0x1470649cf
   1400444cd:	add    al,BYTE PTR [rdi]
   1400444cf:	add    cl,BYTE PTR [rcx]
   1400444d1:	add    cl,BYTE PTR [rcx]
   1400444d3:	add    cl,BYTE PTR [rbx]
   1400444d5:	add    cl,BYTE PTR [rbx]
   1400444d7:	add    cl,BYTE PTR [rip+0xf020d02]        # 0x14f0651df
   1400444dd:	add    cl,BYTE PTR [rdi]
   1400444df:	add    dl,BYTE PTR [rcx]
   1400444e1:	add    dl,BYTE PTR [rcx]
   1400444e3:	add    dl,BYTE PTR [rbx]
   1400444e5:	add    dl,BYTE PTR [rbx]
   1400444e7:	add    dl,BYTE PTR [rip+0x17021502]        # 0x1570659ef
   1400444ed:	add    dl,BYTE PTR [rdi]
   1400444ef:	add    bl,BYTE PTR [rcx]
   1400444f1:	add    bl,BYTE PTR [rcx]
   1400444f3:	add    bl,BYTE PTR [rbx]
   1400444f5:	add    bl,BYTE PTR [rbx]
   1400444f7:	add    bl,BYTE PTR [rip+0x1f021d02]        # 0x15f0661ff
   1400444fd:	add    bl,BYTE PTR [rdi]
   1400444ff:	add    bl,BYTE PTR [rsi+0x23022101]
   140044505:	add    ah,BYTE PTR [rbx]
   140044507:	add    ah,BYTE PTR [rip+0x27022502]        # 0x167066a0f
   14004450d:	add    ah,BYTE PTR [rdi]
   14004450f:	add    ch,BYTE PTR [rcx]
   140044511:	add    ch,BYTE PTR [rcx]
   140044513:	add    ch,BYTE PTR [rbx]
   140044515:	add    ch,BYTE PTR [rbx]
   140044517:	add    ch,BYTE PTR [rip+0x2f022d02]        # 0x16f06721f
   14004451d:	add    ch,BYTE PTR [rdi]
   14004451f:	add    dh,BYTE PTR [rcx]
   140044521:	add    dh,BYTE PTR [rcx]
   140044523:	add    dh,BYTE PTR [rbx]
   140044525:	add    dh,BYTE PTR [rbx]
   140044527:	add    dh,BYTE PTR [rdx+rax*1]
   14004452a:	xor    eax,0x37023602
   14004452f:	add    bh,BYTE PTR [rax]
   140044531:	add    bh,BYTE PTR [rcx]
   140044533:	add    ah,BYTE PTR [rbp+0x2c]
   140044536:	cmp    al,0x2
   140044538:	cmp    al,0x2
   14004453a:	(bad)  
   14004453b:	add    DWORD PTR [rsi+0x2c],esp
   14004453e:	(bad)  
   14004453f:	add    al,BYTE PTR [rax+0x2]
   140044542:	rex.X add al,BYTE PTR [rdx+0x2]
   140044546:	add    BYTE PTR [rcx],0x89
   140044549:	add    cl,BYTE PTR [rdx+rax*1+0x2470247]
   140044550:	rex.WB add cl,BYTE PTR [r9+0x2]
   140044554:	rex.WXB add cl,BYTE PTR [r11+0x2]
   140044558:	rex.WRB add r9b,BYTE PTR [r13+0x2]
   14004455c:	rex.WRXB add r9b,BYTE PTR [r15+0x2]
   140044560:	push   rax
   140044561:	add    dl,BYTE PTR [rcx+0x2]
   140044564:	push   rdx
   140044565:	add    dl,BYTE PTR [rbx+0x2]
   140044568:	push   rsp
   140044569:	add    dl,BYTE PTR [rbp+0x2]
   14004456c:	push   rsi
   14004456d:	add    dl,BYTE PTR [rdi+0x2]
   140044570:	pop    rax
   140044571:	add    bl,BYTE PTR [rcx+0x2]
   140044574:	pop    rdx
   140044575:	add    bl,BYTE PTR [rbx+0x2]
   140044578:	pop    rsp
   140044579:	add    bl,BYTE PTR [rbp+0x2]
   14004457c:	pop    rsi
   14004457d:	add    bl,BYTE PTR [rdi+0x2]
   140044580:	(bad)  
   140044581:	add    ah,BYTE PTR [rcx+0x2]
   140044584:	(bad)  
   140044586:	movsxd eax,DWORD PTR [rdx]
   140044588:	add    ah,BYTE PTR fs:[rbp+0x2]
   14004458c:	data16 add ah,BYTE PTR [rdi+0x2]
   140044590:	push   0x6a026902
   140044595:	add    ch,BYTE PTR [rbx+0x2]
   140044598:	ins    BYTE PTR es:[rdi],dx
   140044599:	add    ch,BYTE PTR [rbp+0x2]
   14004459c:	outs   dx,BYTE PTR ds:[rsi]
   14004459d:	add    ch,BYTE PTR [rdi+0x2]
   1400445a0:	jo     0x1400445a4
   1400445a2:	jno    0x1400445a6
   1400445a4:	jb     0x1400445a8
   1400445a6:	jae    0x1400445aa
   1400445a8:	je     0x1400445ac
   1400445aa:	jne    0x1400445ae
   1400445ac:	jbe    0x1400445b0
   1400445ae:	ja     0x1400445b2
   1400445b0:	js     0x1400445b4
   1400445b2:	jns    0x1400445b6
   1400445b4:	jp     0x1400445b8
   1400445b6:	jnp    0x1400445ba
   1400445b8:	jl     0x1400445bc
   1400445ba:	jge    0x1400445be
   1400445bc:	jle    0x1400445c0
   1400445be:	jg     0x1400445c2
   1400445c0:	add    BYTE PTR [rdx],0x81
   1400445c3:	add    al,BYTE PTR [rdx-0x7bfd7cfe]
   1400445c9:	add    al,BYTE PTR [rbp-0x78fd79fe]
   1400445cf:	add    cl,BYTE PTR [rax-0x75fd76fe]
   1400445d5:	add    cl,BYTE PTR [rbx-0x72fd73fe]
   1400445db:	add    cl,BYTE PTR [rsi-0x6ffd70fe]
   1400445e1:	add    dl,BYTE PTR [rcx-0x6cfd6dfe]
   1400445e7:	add    dl,BYTE PTR [rdx+rax*1+0x2960295]
   1400445ee:	xchg   edi,eax
   1400445ef:	add    bl,BYTE PTR [rax-0x65fd66fe]
   1400445f5:	add    bl,BYTE PTR [rbx-0x62fd63fe]
   1400445fb:	add    bl,BYTE PTR [rsi-0x5ffd60fe]
   140044601:	add    ah,BYTE PTR [rcx-0x5cfd5dfe]
   140044607:	add    ah,BYTE PTR [rdx+rax*1+0x2a602a5]
   14004460e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004460f:	add    ch,BYTE PTR [rax-0x55fd56fe]
   140044615:	add    ch,BYTE PTR [rbx-0x52fd53fe]
   14004461b:	add    ch,BYTE PTR [rsi-0x4ffd50fe]
   140044621:	add    dh,BYTE PTR [rcx-0x4cfd4dfe]
   140044627:	add    dh,BYTE PTR [rdx+rax*1+0x2b602b5]
   14004462e:	mov    bh,0x2
   140044630:	mov    eax,0xba02b902
   140044635:	add    bh,BYTE PTR [rbx-0x42fd43fe]
   14004463b:	add    bh,BYTE PTR [rsi-0x3ffd40fe]
   140044641:	add    al,cl
   140044643:	add    al,dl
   140044645:	add    al,bl
   140044647:	add    al,ah
   140044649:	add    al,ch
   14004464b:	add    al,dh
   14004464d:	add    al,bh
   14004464f:	add    cl,al
   140044651:	add    cl,cl
   140044653:	add    cl,dl
   140044655:	add    cl,bl
   140044657:	add    cl,ah
   140044659:	add    cl,ch
   14004465b:	add    cl,dh
   14004465d:	add    cl,bh
   14004465f:	add    dl,al
   140044661:	add    dl,cl
   140044663:	add    dl,dl
   140044665:	add    dl,bl
   140044667:	add    dl,ah
   140044669:	add    dl,ch
   14004466b:	add    dl,dh
   14004466d:	add    dl,bh
   14004466f:	add    bl,al
   140044671:	add    bl,cl
   140044673:	add    bl,dl
   140044675:	add    bl,bl
   140044677:	add    bl,ah
   140044679:	add    bl,ch
   14004467b:	add    bl,dh
   14004467d:	add    bl,bh
   14004467f:	add    ah,al
   140044681:	add    ah,cl
   140044683:	add    ah,dl
   140044685:	add    ah,bl
   140044687:	add    ah,ah
   140044689:	add    ah,ch
   14004468b:	add    ah,dh
   14004468d:	add    ah,bh
   14004468f:	add    ch,al
   140044691:	add    ch,cl
   140044693:	add    ch,dl
   140044695:	add    ch,bl
   140044697:	add    ch,ah
   140044699:	add    ch,ch
   14004469b:	add    ch,dh
   14004469d:	add    ch,bh
   14004469f:	add    dh,al
   1400446a1:	add    dh,cl
   1400446a3:	add    dh,dl
   1400446a5:	add    dh,bl
   1400446a7:	add    dh,ah
   1400446a9:	add    dh,ch
   1400446ab:	add    dh,dh
   1400446ad:	add    dh,bh
   1400446af:	add    bh,al
   1400446b1:	add    bh,cl
   1400446b3:	add    bh,dl
   1400446b5:	add    bh,bl
   1400446b7:	add    bh,ah
   1400446b9:	add    bh,ch
   1400446bb:	add    bh,dh
   1400446bd:	add    bh,bh
   1400446bf:	add    al,BYTE PTR [rax]
   1400446c1:	add    eax,DWORD PTR [rcx]
   1400446c3:	add    eax,DWORD PTR [rdx]
   1400446c5:	add    eax,DWORD PTR [rbx]
   1400446c7:	add    eax,DWORD PTR [rbx+rax*1]
   1400446ca:	add    eax,0x7030603
   1400446cf:	add    ecx,DWORD PTR [rax]
   1400446d1:	add    ecx,DWORD PTR [rcx]
   1400446d3:	add    ecx,DWORD PTR [rdx]
   1400446d5:	add    ecx,DWORD PTR [rbx]
   1400446d7:	add    ecx,DWORD PTR [rbx+rax*1]
   1400446da:	or     eax,0xf030e03
   1400446df:	add    edx,DWORD PTR [rax]
   1400446e1:	add    edx,DWORD PTR [rcx]
   1400446e3:	add    edx,DWORD PTR [rdx]
   1400446e5:	add    edx,DWORD PTR [rbx]
   1400446e7:	add    edx,DWORD PTR [rbx+rax*1]
   1400446ea:	adc    eax,0x17031603
   1400446ef:	add    ebx,DWORD PTR [rax]
   1400446f1:	add    ebx,DWORD PTR [rcx]
   1400446f3:	add    ebx,DWORD PTR [rdx]
   1400446f5:	add    ebx,DWORD PTR [rbx]
   1400446f7:	add    ebx,DWORD PTR [rbx+rax*1]
   1400446fa:	sbb    eax,0x1f031e03
   1400446ff:	add    esp,DWORD PTR [rax]
   140044701:	add    esp,DWORD PTR [rcx]
   140044703:	add    esp,DWORD PTR [rdx]
   140044705:	add    esp,DWORD PTR [rbx]
   140044707:	add    esp,DWORD PTR [rbx+rax*1]
   14004470a:	and    eax,0x27032603
   14004470f:	add    ebp,DWORD PTR [rax]
   140044711:	add    ebp,DWORD PTR [rcx]
   140044713:	add    ebp,DWORD PTR [rdx]
   140044715:	add    ebp,DWORD PTR [rbx]
   140044717:	add    ebp,DWORD PTR [rbx+rax*1]
   14004471a:	sub    eax,0x2f032e03
   14004471f:	add    esi,DWORD PTR [rax]
   140044721:	add    esi,DWORD PTR [rcx]
   140044723:	add    esi,DWORD PTR [rdx]
   140044725:	add    esi,DWORD PTR [rbx]
   140044727:	add    esi,DWORD PTR [rbx+rax*1]
   14004472a:	xor    eax,0x37033603
   14004472f:	add    edi,DWORD PTR [rax]
   140044731:	add    edi,DWORD PTR [rcx]
   140044733:	add    edi,DWORD PTR [rdx]
   140044735:	add    edi,DWORD PTR [rbx]
   140044737:	add    edi,DWORD PTR [rbx+rax*1]
   14004473a:	cmp    eax,0x3f033e03
   14004473f:	add    eax,DWORD PTR [rax+0x3]
   140044742:	add    eax,DWORD PTR [r10+0x3]
   140044746:	add    eax,DWORD PTR [r11+r8*1-0x47]
   14004474b:	add    eax,DWORD PTR [rsi+0x3]
   14004474e:	rex.RXB add r9d,DWORD PTR [r8+0x3]
   140044752:	add    rcx,QWORD PTR [r10+0x3]
   140044756:	add    rcx,QWORD PTR [r11+r8*1+0x4d]
   14004475b:	add    ecx,DWORD PTR [rsi+0x3]
   14004475e:	rex.WRXB add r10,QWORD PTR [r8+0x3]
   140044762:	push   rcx
   140044763:	add    edx,DWORD PTR [rdx+0x3]
   140044766:	push   rbx
   140044767:	add    edx,DWORD PTR [rbx+rax*1+0x55]
   14004476b:	add    edx,DWORD PTR [rsi+0x3]
   14004476e:	push   rdi
   14004476f:	add    ebx,DWORD PTR [rax+0x3]
   140044772:	pop    rcx
   140044773:	add    ebx,DWORD PTR [rdx+0x3]
   140044776:	pop    rbx
   140044777:	add    ebx,DWORD PTR [rbx+rax*1+0x5d]
   14004477b:	add    ebx,DWORD PTR [rsi+0x3]
   14004477e:	pop    rdi
   14004477f:	add    esp,DWORD PTR [rax+0x3]
   140044782:	(bad)  
   140044783:	add    esp,DWORD PTR [rdx+0x3]
   140044786:	movsxd eax,DWORD PTR [rbx]
   140044788:	add    esp,DWORD PTR fs:[rbp+0x3]
   14004478c:	add    sp,WORD PTR [rdi+0x3]
   140044790:	push   0x6a036903
   140044795:	add    ebp,DWORD PTR [rbx+0x3]
   140044798:	ins    BYTE PTR es:[rdi],dx
   140044799:	add    ebp,DWORD PTR [rbp+0x3]
   14004479c:	outs   dx,BYTE PTR ds:[rsi]
   14004479d:	add    ebp,DWORD PTR [rdi+0x3]
   1400447a0:	jo     0x1400447a5
   1400447a2:	jno    0x1400447a7
   1400447a4:	jb     0x1400447a9
   1400447a6:	jae    0x1400447ab
   1400447a8:	je     0x1400447ad
   1400447aa:	jne    0x1400447af
   1400447ac:	jbe    0x1400447b1
   1400447ae:	ja     0x1400447b3
   1400447b0:	js     0x1400447b5
   1400447b2:	jns    0x1400447b7
   1400447b4:	jp     0x1400447b9
   1400447b6:	jnp    0x1400447bb
   1400447b8:	jl     0x1400447bd
   1400447ba:	jge    0x1400447bf
   1400447bc:	jle    0x1400447c1
   1400447be:	jg     0x1400447c3
   1400447c0:	add    BYTE PTR [rbx],0x81
   1400447c3:	add    eax,DWORD PTR [rdx-0x7bfc7cfd]
   1400447c9:	add    eax,DWORD PTR [rbp-0x78fc53fd]
   1400447cf:	add    ebp,DWORD PTR [rbp-0x50fc51fd]
   1400447d5:	add    ecx,DWORD PTR [rbx-0x72fc33fd]
   1400447db:	add    ecx,ebp
   1400447dd:	add    ecx,esi
   1400447df:	add    edx,DWORD PTR [rax-0x4dfc4efd]
   1400447e5:	add    esi,DWORD PTR [rbx-0x4afc4bfd]
   1400447eb:	add    esi,DWORD PTR [rsi-0x47fc48fd]
   1400447f1:	add    edi,DWORD PTR [rcx-0x44fc45fd]
   1400447f7:	add    edi,DWORD PTR [rbx+rax*1+0x3be03bd]
   1400447fe:	mov    edi,0xc103c003
   140044803:	add    esp,DWORD PTR [rdx-0x3bfc3cfd]
   140044809:	add    eax,ebp
   14004480b:	add    eax,esi
   14004480d:	add    eax,edi
   14004480f:	add    ecx,eax
   140044811:	add    ecx,ecx
   140044813:	add    ecx,edx
   140044815:	add    ecx,ebx
   140044817:	add    ebp,DWORD PTR [rbx+rax*1+0x3ae03ad]
   14004481e:	scas   eax,DWORD PTR es:[rdi]
   14004481f:	add    esi,DWORD PTR [rax-0x4dfc4efd]
   140044825:	add    esi,DWORD PTR [rbx-0x4afc4bfd]
   14004482b:	add    esi,DWORD PTR [rsi-0x47fc48fd]
   140044831:	add    edi,DWORD PTR [rcx-0x44fc45fd]
   140044837:	add    edi,DWORD PTR [rbx+rax*1+0x3be03bd]
   14004483e:	mov    edi,0xc103c003
   140044843:	add    eax,ebx
   140044845:	add    eax,ebx
   140044847:	add    eax,esp
   140044849:	add    eax,ebp
   14004484b:	add    eax,esi
   14004484d:	add    eax,edi
   14004484f:	add    ecx,eax
   140044851:	add    ecx,ecx
   140044853:	add    ecx,edx
   140044855:	add    ecx,ebx
   140044857:	add    ecx,esp
   140044859:	add    ecx,ebp
   14004485b:	add    ecx,esi
   14004485d:	add    ecx,edi
   14004485f:	add    esi,DWORD PTR [rdx-0x2dfc47fd]
   140044865:	add    edx,ebx
   140044867:	add    edx,esp
   140044869:	add    eax,esi
   14004486b:	add    eax,eax
   14004486d:	add    edx,edi
   14004486f:	add    ebx,ecx
   140044871:	add    ebx,ecx
   140044873:	add    ebx,ebx
   140044875:	add    ebx,ebx
   140044877:	add    ebx,ebp
   140044879:	add    ebx,ebp
   14004487b:	add    ebx,edi
   14004487d:	add    ebx,edi
   14004487f:	add    esp,ecx
   140044881:	add    esp,ecx
   140044883:	add    esp,ebx
   140044885:	add    esp,ebx
   140044887:	add    esp,ebp
   140044889:	add    esp,ebp
   14004488b:	add    esp,edi
   14004488d:	add    esp,edi
   14004488f:	add    ebp,ecx
   140044891:	add    ebp,ecx
   140044893:	add    ebp,ebx
   140044895:	add    ebp,ebx
   140044897:	add    ebp,ebp
   140044899:	add    ebp,ebp
   14004489b:	add    ebp,edi
   14004489d:	add    ebp,edi
   14004489f:	add    edi,DWORD PTR [rdx-0xdfc3efd]
   1400448a5:	add    esi,ebx
   1400448a7:	add    edi,DWORD PTR [rax-0x9fc4afd]
   1400448ad:	add    edi,eax
   1400448af:	add    edi,eax
   1400448b1:	add    esi,edx
   1400448b3:	add    edi,ebx
   1400448b5:	add    edi,ebx
   1400448b7:	add    edi,esp
   1400448b9:	add    edi,DWORD PTR [rbx+0x3]
   1400448bc:	jl     0x1400448c1
   1400448be:	jge    0x1400448c3
   1400448c0:	push   rax
   1400448c1:	add    al,0x51
   1400448c3:	add    al,0x52
   1400448c5:	add    al,0x53
   1400448c7:	add    al,0x54
   1400448c9:	add    al,0x55
   1400448cb:	add    al,0x56
   1400448cd:	add    al,0x57
   1400448cf:	add    al,0x58
   1400448d1:	add    al,0x59
   1400448d3:	add    al,0x5a
   1400448d5:	add    al,0x5b
   1400448d7:	add    al,0x5c
   1400448d9:	add    al,0x5d
   1400448db:	add    al,0x5e
   1400448dd:	add    al,0x5f
   1400448df:	add    al,0x30
   1400448e1:	add    al,0x31
   1400448e3:	add    al,0x32
   1400448e5:	add    al,0x33
   1400448e7:	add    al,0x34
   1400448e9:	add    al,0x35
   1400448eb:	add    al,0x36
   1400448ed:	add    al,0x37
   1400448ef:	add    al,0x38
   1400448f1:	add    al,0x39
   1400448f3:	add    al,0x3a
   1400448f5:	add    al,0x3b
   1400448f7:	add    al,0x3c
   1400448f9:	add    al,0x3d
   1400448fb:	add    al,0x3e
   1400448fd:	add    al,0x3f
   1400448ff:	add    al,0x40
   140044901:	add    al,0x41
   140044903:	add    al,0x42
   140044905:	add    al,0x43
   140044907:	add    al,0x44
   140044909:	add    al,0x45
   14004490b:	add    al,0x46
   14004490d:	add    al,0x47
   14004490f:	add    al,0x48
   140044911:	add    al,0x49
   140044913:	add    al,0x4a
   140044915:	add    al,0x4b
   140044917:	add    al,0x4c
   140044919:	add    al,0x4d
   14004491b:	add    al,0x4e
   14004491d:	add    al,0x4f
   14004491f:	add    al,0x30
   140044921:	add    al,0x31
   140044923:	add    al,0x32
   140044925:	add    al,0x33
   140044927:	add    al,0x34
   140044929:	add    al,0x35
   14004492b:	add    al,0x36
   14004492d:	add    al,0x37
   14004492f:	add    al,0x38
   140044931:	add    al,0x39
   140044933:	add    al,0x3a
   140044935:	add    al,0x3b
   140044937:	add    al,0x3c
   140044939:	add    al,0x3d
   14004493b:	add    al,0x3e
   14004493d:	add    al,0x3f
   14004493f:	add    al,0x40
   140044941:	add    al,0x41
   140044943:	add    al,0x42
   140044945:	add    al,0x43
   140044947:	add    al,0x44
   140044949:	add    al,0x45
   14004494b:	add    al,0x46
   14004494d:	add    al,0x47
   14004494f:	add    al,0x48
   140044951:	add    al,0x49
   140044953:	add    al,0x4a
   140044955:	add    al,0x4b
   140044957:	add    al,0x4c
   140044959:	add    al,0x4d
   14004495b:	add    al,0x4e
   14004495d:	add    al,0x4f
   14004495f:	add    al,0x50
   140044961:	add    al,0x51
   140044963:	add    al,0x52
   140044965:	add    al,0x53
   140044967:	add    al,0x54
   140044969:	add    al,0x55
   14004496b:	add    al,0x56
   14004496d:	add    al,0x57
   14004496f:	add    al,0x58
   140044971:	add    al,0x59
   140044973:	add    al,0x5a
   140044975:	add    al,0x5b
   140044977:	add    al,0x5c
   140044979:	add    al,0x5d
   14004497b:	add    al,0x5e
   14004497d:	add    al,0x5f
   14004497f:	add    al,0x61
   140044981:	add    al,0x61
   140044983:	add    al,0x63
   140044985:	add    al,0x63
   140044987:	add    al,0x65
   140044989:	add    al,0x65
   14004498b:	add    al,0x67
   14004498d:	add    al,0x67
   14004498f:	add    al,0x69
   140044991:	add    al,0x69
   140044993:	add    al,0x6b
   140044995:	add    al,0x6b
   140044997:	add    al,0x6d
   140044999:	add    al,0x6d
   14004499b:	add    al,0x6f
   14004499d:	add    al,0x6f
   14004499f:	add    al,0x71
   1400449a1:	add    al,0x71
   1400449a3:	add    al,0x73
   1400449a5:	add    al,0x73
   1400449a7:	add    al,0x75
   1400449a9:	add    al,0x75
   1400449ab:	add    al,0x77
   1400449ad:	add    al,0x77
   1400449af:	add    al,0x79
   1400449b1:	add    al,0x79
   1400449b3:	add    al,0x7b
   1400449b5:	add    al,0x7b
   1400449b7:	add    al,0x7d
   1400449b9:	add    al,0x7d
   1400449bb:	add    al,0x7f
   1400449bd:	add    al,0x7f
   1400449bf:	add    al,0x81
   1400449c1:	add    al,0x81
   1400449c3:	add    al,0x82
   1400449c5:	add    al,0x83
   1400449c7:	add    al,0x84
   1400449c9:	add    al,0x85
   1400449cb:	add    al,0x86
   1400449cd:	add    al,0x87
   1400449cf:	add    al,0x88
   1400449d1:	add    al,0x89
   1400449d3:	add    al,0x8b
   1400449d5:	add    al,0x8b
   1400449d7:	add    al,0x8d
   1400449d9:	add    al,0x8d
   1400449db:	add    al,0x8f
   1400449dd:	add    al,0x8f
   1400449df:	add    al,0x91
   1400449e1:	add    al,0x91
   1400449e3:	add    al,0x93
   1400449e5:	add    al,0x93
   1400449e7:	add    al,0x95
   1400449e9:	add    al,0x95
   1400449eb:	add    al,0x97
   1400449ed:	add    al,0x97
   1400449ef:	add    al,0x99
   1400449f1:	add    al,0x99
   1400449f3:	add    al,0x9b
   1400449f5:	add    al,0x9b
   1400449f7:	add    al,0x9d
   1400449f9:	add    al,0x9d
   1400449fb:	add    al,0x9f
   1400449fd:	add    al,0x9f
   1400449ff:	add    al,0xa1
   140044a01:	add    al,0xa1
   140044a03:	add    al,0xa3
   140044a05:	add    al,0xa3
   140044a07:	add    al,0xa5
   140044a09:	add    al,0xa5
   140044a0b:	add    al,0xa7
   140044a0d:	add    al,0xa7
   140044a0f:	add    al,0xa9
   140044a11:	add    al,0xa9
   140044a13:	add    al,0xab
   140044a15:	add    al,0xab
   140044a17:	add    al,0xad
   140044a19:	add    al,0xad
   140044a1b:	add    al,0xaf
   140044a1d:	add    al,0xaf
   140044a1f:	add    al,0xb1
   140044a21:	add    al,0xb1
   140044a23:	add    al,0xb3
   140044a25:	add    al,0xb3
   140044a27:	add    al,0xb5
   140044a29:	add    al,0xb5
   140044a2b:	add    al,0xb7
   140044a2d:	add    al,0xb7
   140044a2f:	add    al,0xb9
   140044a31:	add    al,0xb9
   140044a33:	add    al,0xbb
   140044a35:	add    al,0xbb
   140044a37:	add    al,0xbd
   140044a39:	add    al,0xbd
   140044a3b:	add    al,0xbf
   140044a3d:	add    al,0xbf
   140044a3f:	add    al,0xcf
   140044a41:	add    al,0xc2
   140044a43:	add    al,0xc2
   140044a45:	add    al,0xc4
   140044a47:	add    al,0xc4
   140044a49:	add    al,0xc6
   140044a4b:	add    al,0xc6
   140044a4d:	add    al,0xc8
   140044a4f:	add    al,0xc8
   140044a51:	add    al,0xca
   140044a53:	add    al,0xca
   140044a55:	add    al,0xcc
   140044a57:	add    al,0xcc
   140044a59:	add    al,0xce
   140044a5b:	add    al,0xce
   140044a5d:	add    al,0xcf
   140044a5f:	add    al,0xd1
   140044a61:	add    al,0xd1
   140044a63:	add    al,0xd3
   140044a65:	add    al,0xd3
   140044a67:	add    al,0xd5
   140044a69:	add    al,0xd5
   140044a6b:	add    al,0xd7
   140044a6d:	add    al,0xd7
   140044a6f:	add    al,0xd9
   140044a71:	add    al,0xd9
   140044a73:	add    al,0xdb
   140044a75:	add    al,0xdb
   140044a77:	add    al,0xdd
   140044a79:	add    al,0xdd
   140044a7b:	add    al,0xdf
   140044a7d:	add    al,0xdf
   140044a7f:	add    al,0xe1
   140044a81:	add    al,0xe1
   140044a83:	add    al,0xe3
   140044a85:	add    al,0xe3
   140044a87:	add    al,0xe5
   140044a89:	add    al,0xe5
   140044a8b:	add    al,0xe7
   140044a8d:	add    al,0xe7
   140044a8f:	add    al,0xe9
   140044a91:	add    al,0xe9
   140044a93:	add    al,0xeb
   140044a95:	add    al,0xeb
   140044a97:	add    al,0xed
   140044a99:	add    al,0xed
   140044a9b:	add    al,0xef
   140044a9d:	add    al,0xef
   140044a9f:	add    al,0xf1
   140044aa1:	add    al,0xf1
   140044aa3:	add    al,0xf3
   140044aa5:	add    al,0xf3
   140044aa7:	add    al,0xf5
   140044aa9:	add    al,0xf5
   140044aab:	add    al,0xf7
   140044aad:	add    al,0xf7
   140044aaf:	add    al,0xf9
   140044ab1:	add    al,0xf9
   140044ab3:	add    al,0xfb
   140044ab5:	add    al,0xfb
   140044ab7:	add    al,0xfd
   140044ab9:	add    al,0xfd
   140044abb:	add    al,0xff
   140044abd:	add    al,0xff
   140044abf:	add    al,0x1
   140044ac1:	add    eax,0x5030501
   140044ac6:	add    eax,DWORD PTR [rip+0x5050505]        # 0x145094fd1
   140044acc:	(bad)  
   140044acd:	add    eax,0x5090507
   140044ad2:	or     DWORD PTR [rip+0x50b050b],eax        # 0x1450f4fe3
   140044ad8:	or     eax,0xf050d05
   140044add:	add    eax,0x511050f
   140044ae2:	adc    DWORD PTR [rip+0x5130513],eax        # 0x145174ffb
   140044ae8:	adc    al,0x5
   140044aea:	adc    eax,0x17051605
   140044aef:	add    eax,0x5190518
   140044af4:	sbb    al,BYTE PTR [rip+0x51c051b]        # 0x145205015
   140044afa:	sbb    eax,0x1f051e05
   140044aff:	add    eax,0x5210520
   140044b04:	and    al,BYTE PTR [rip+0x5240523]        # 0x14528502d
   140044b0a:	and    eax,0x27052605
   140044b0f:	add    eax,0x5290528
   140044b14:	sub    al,BYTE PTR [rip+0x52c052b]        # 0x145305045
   140044b1a:	sub    eax,0x2f052e05
   140044b1f:	add    eax,0x5610530
   140044b24:	(bad)  
   140044b25:	add    eax,0x5640563
   140044b2a:	gs add eax,0x5670566
   140044b30:	push   0x6a056905
   140044b35:	add    eax,0x56c056b
   140044b3a:	ins    DWORD PTR es:[rdi],dx
   140044b3b:	add    eax,0x56f056e
   140044b40:	jo     0x140044b47
   140044b42:	jno    0x140044b49
   140044b44:	jb     0x140044b4b
   140044b46:	jae    0x140044b4d
   140044b48:	je     0x140044b4f
   140044b4a:	jne    0x140044b51
   140044b4c:	jbe    0x140044b53
   140044b4e:	ja     0x140044b55
   140044b50:	js     0x140044b57
   140044b52:	jns    0x140044b59
   140044b54:	jp     0x140044b5b
   140044b56:	jnp    0x140044b5d
   140044b58:	jl     0x140044b5f
   140044b5a:	jge    0x140044b61
   140044b5c:	jle    0x140044b63
   140044b5e:	jg     0x140044b65
   140044b60:	add    BYTE PTR [rip+0x5820581],0x83        # 0x1458650e8
   140044b67:	add    eax,0x5850584
   140044b6c:	xchg   BYTE PTR [rip+0x5580557],al        # 0x1455c50c9
   140044b72:	pop    rcx
   140044b73:	add    eax,0x55b055a
   140044b78:	pop    rsp
   140044b79:	add    eax,0x55e055d
   140044b7e:	pop    rdi
   140044b7f:	add    eax,0x5610560
   140044b84:	(bad)  
   140044b85:	add    eax,0x5640563
   140044b8a:	gs add eax,0x5670566
   140044b90:	push   0x6a056905
   140044b95:	add    eax,0x56c056b
   140044b9a:	ins    DWORD PTR es:[rdi],dx
   140044b9b:	add    eax,0x56f056e
   140044ba0:	jo     0x140044ba7
   140044ba2:	jno    0x140044ba9
   140044ba4:	jb     0x140044bab
   140044ba6:	jae    0x140044bad
   140044ba8:	je     0x140044baf
   140044baa:	jne    0x140044bb1
   140044bac:	jbe    0x140044bb3
   140044bae:	ja     0x140044bb5
   140044bb0:	js     0x140044bb7
   140044bb2:	jns    0x140044bb9
   140044bb4:	jp     0x140044bbb
   140044bb6:	jnp    0x140044bbd
   140044bb8:	jl     0x140044bbf
   140044bba:	jge    0x140044bc1
   140044bbc:	jle    0x140044bc3
   140044bbe:	jg     0x140044bc5
   140044bc0:	add    BYTE PTR [rip+0x5820581],0x83        # 0x145865148
   140044bc7:	add    eax,0x5850584
   140044bcc:	xchg   BYTE PTR [rip+0x5880587],al        # 0x1458c5159
   140044bd2:	mov    DWORD PTR [rip+0x58b058a],eax        # 0x1458f5162
   140044bd8:	mov    WORD PTR [rip+0x58e058d],es        # 0x14592516b
   140044bde:	pop    QWORD PTR [rip+0x5910590]        # 0x145955174
   140044be4:	xchg   edx,eax
   140044be5:	add    eax,0x5940593
   140044bea:	xchg   ebp,eax
   140044beb:	add    eax,0x5970596
   140044bf0:	cwde   
   140044bf1:	add    eax,0x59a0599
   140044bf6:	fwait
   140044bf7:	add    eax,0x59d059c
   140044bfc:	sahf   
   140044bfd:	add    eax,0x5a0059f
   140044c02:	movabs eax,ds:0xa505a405a305a205
   140044c0b:	add    eax,0x5a705a6
   140044c10:	test   al,0x5
   140044c12:	test   eax,0xab05aa05
   140044c17:	add    eax,0x5ad05ac
   140044c1c:	scas   al,BYTE PTR es:[rdi]
   140044c1d:	add    eax,0x5b005af
   140044c22:	mov    cl,0x5
   140044c24:	mov    dl,0x5
   140044c26:	mov    bl,0x5
   140044c28:	mov    ah,0x5
   140044c2a:	mov    ch,0x5
   140044c2c:	mov    dh,0x5
   140044c2e:	mov    bh,0x5
   140044c30:	mov    eax,0xba05b905
   140044c35:	add    eax,0x5bc05bb
   140044c3a:	mov    ebp,0xbf05be05
   140044c3f:	add    eax,0x5c105c0
   140044c44:	ret    0xc305
   140044c47:	add    eax,0x5c505c4
   140044c4c:	mov    BYTE PTR [rip+0x5c805c7],0xc9        # 0x145cc521a
   140044c53:	add    eax,0x5cb05ca
   140044c58:	int3   
   140044c59:	add    eax,0x5ce05cd
   140044c5e:	iret   
   140044c5f:	add    eax,0x5d105d0
   140044c64:	rol    BYTE PTR [rip+0x5d405d3],cl        # 0x145d8523d
   140044c6a:	(bad)  
   140044c6b:	add    eax,0x5d705d6
   140044c70:	fadd   DWORD PTR [rip+0x5da05d9]        # 0x145de524f
   140044c76:	fild   DWORD PTR [rip+0x5dd05dc]        # 0x145e15258
   140044c7c:	fiadd  WORD PTR [rip+0x5e005df]        # 0x145e45261
   140044c82:	loope  0x140044c89
   140044c84:	loop   0x140044c8b
   140044c86:	jrcxz  0x140044c8d
   140044c88:	in     al,0x5
   140044c8a:	in     eax,0x5
   140044c8c:	out    0x5,al
   140044c8e:	out    0x5,eax
   140044c90:	call   0x12a0a359a
   140044c95:	add    eax,0x5ec05eb
   140044c9a:	in     eax,dx
   140044c9b:	add    eax,0x5ef05ee
   140044ca0:	lock add eax,0x5f205f1
   140044ca6:	repz add eax,0x5f505f4
   140044cac:	test   BYTE PTR [rip+0x5f805f7],0xf9        # 0x145fc52aa
   140044cb3:	add    eax,0x5fb05fa
   140044cb8:	cld    
   140044cb9:	add    eax,0x5fe05fd
   140044cbe:	inc    DWORD PTR [rip+0x10011000]        # 0x150055cc4
   140044cc4:	add    dl,BYTE PTR [rax]
   140044cc6:	add    edx,DWORD PTR [rax]
   140044cc8:	add    al,0x10
   140044cca:	add    eax,0x7100610
   140044ccf:	adc    BYTE PTR [rax],cl
   140044cd1:	adc    BYTE PTR [rcx],cl
   140044cd3:	adc    BYTE PTR [rdx],cl
   140044cd5:	adc    BYTE PTR [rbx],cl
   140044cd7:	adc    BYTE PTR [rax+rdx*1],cl
   140044cda:	or     eax,0xf100e10
   140044cdf:	adc    BYTE PTR [rax],dl
   140044ce1:	adc    BYTE PTR [rcx],dl
   140044ce3:	adc    BYTE PTR [rdx],dl
   140044ce5:	adc    BYTE PTR [rbx],dl
   140044ce7:	adc    BYTE PTR [rax+rdx*1],dl
   140044cea:	adc    eax,0x17101610
   140044cef:	adc    BYTE PTR [rax],bl
   140044cf1:	adc    BYTE PTR [rcx],bl
   140044cf3:	adc    BYTE PTR [rdx],bl
   140044cf5:	adc    BYTE PTR [rbx],bl
   140044cf7:	adc    BYTE PTR [rax+rdx*1],bl
   140044cfa:	sbb    eax,0x1f101e10
   140044cff:	adc    BYTE PTR [rax],ah
   140044d01:	adc    BYTE PTR [rcx],ah
   140044d03:	adc    BYTE PTR [rdx],ah
   140044d05:	adc    BYTE PTR [rbx],ah
   140044d07:	adc    BYTE PTR [rax+rdx*1],ah
   140044d0a:	and    eax,0x27102610
   140044d0f:	adc    BYTE PTR [rax],ch
   140044d11:	adc    BYTE PTR [rcx],ch
   140044d13:	adc    BYTE PTR [rdx],ch
   140044d15:	adc    BYTE PTR [rbx],ch
   140044d17:	adc    BYTE PTR [rax+rdx*1],ch
   140044d1a:	sub    eax,0x2f102e10
   140044d1f:	adc    BYTE PTR [rax],dh
   140044d21:	adc    BYTE PTR [rcx],dh
   140044d23:	adc    BYTE PTR [rdx],dh
   140044d25:	adc    BYTE PTR [rbx],dh
   140044d27:	adc    BYTE PTR [rax+rdx*1],dh
   140044d2a:	xor    eax,0x37103610
   140044d2f:	adc    BYTE PTR [rax],bh
   140044d31:	adc    BYTE PTR [rcx],bh
   140044d33:	adc    BYTE PTR [rdx],bh
   140044d35:	adc    BYTE PTR [rbx],bh
   140044d37:	adc    BYTE PTR [rax+rdx*1],bh
   140044d3a:	cmp    eax,0x3f103e10
   140044d3f:	adc    BYTE PTR [rax+0x10],al
   140044d42:	adc    BYTE PTR [r10+0x10],al
   140044d46:	adc    BYTE PTR [r8+r10*1+0x45],al
   140044d4b:	adc    BYTE PTR [rsi+0x10],al
   140044d4e:	rex.RXB adc BYTE PTR [r8+0x10],r9b
   140044d52:	rex.WB adc BYTE PTR [r10+0x10],cl
   140044d56:	rex.WXB adc BYTE PTR [r8+r10*1+0x4d],cl
   140044d5b:	adc    BYTE PTR [rsi+0x10],cl
   140044d5e:	rex.WRXB adc BYTE PTR [r8+0x10],r10b
   140044d62:	push   rcx
   140044d63:	adc    BYTE PTR [rdx+0x10],dl
   140044d66:	push   rbx
   140044d67:	adc    BYTE PTR [rax+rdx*1+0x55],dl
   140044d6b:	adc    BYTE PTR [rsi+0x10],dl
   140044d6e:	push   rdi
   140044d6f:	adc    BYTE PTR [rax+0x10],bl
   140044d72:	pop    rcx
   140044d73:	adc    BYTE PTR [rdx+0x10],bl
   140044d76:	pop    rbx
   140044d77:	adc    BYTE PTR [rax+rdx*1+0x5d],bl
   140044d7b:	adc    BYTE PTR [rsi+0x10],bl
   140044d7e:	pop    rdi
   140044d7f:	adc    BYTE PTR [rax+0x10],ah
   140044d82:	(bad)  
   140044d83:	adc    BYTE PTR [rdx+0x10],ah
   140044d86:	movsxd edx,DWORD PTR [rax]
   140044d88:	adc    BYTE PTR fs:[rbp+0x10],ah
   140044d8c:	data16 adc BYTE PTR [rdi+0x10],ah
   140044d90:	push   0x6a106910
   140044d95:	adc    BYTE PTR [rbx+0x10],ch
   140044d98:	ins    BYTE PTR es:[rdi],dx
   140044d99:	adc    BYTE PTR [rbp+0x10],ch
   140044d9c:	outs   dx,BYTE PTR ds:[rsi]
   140044d9d:	adc    BYTE PTR [rdi+0x10],ch
   140044da0:	jo     0x140044db2
   140044da2:	jno    0x140044db4
   140044da4:	jb     0x140044db6
   140044da6:	jae    0x140044db8
   140044da8:	je     0x140044dba
   140044daa:	jne    0x140044dbc
   140044dac:	jbe    0x140044dbe
   140044dae:	ja     0x140044dc0
   140044db0:	js     0x140044dc2
   140044db2:	jns    0x140044dc4
   140044db4:	jp     0x140044dc6
   140044db6:	jnp    0x140044dc8
   140044db8:	jl     0x140044dca
   140044dba:	jge    0x140044dcc
   140044dbc:	jle    0x140044dce
   140044dbe:	jg     0x140044dd0
   140044dc0:	adc    BYTE PTR [rax],0x81
   140044dc3:	adc    BYTE PTR [rdx-0x7bef7cf0],al
   140044dc9:	adc    BYTE PTR [rbp-0x78ef79f0],al
   140044dcf:	adc    BYTE PTR [rax-0x75ef76f0],cl
   140044dd5:	adc    BYTE PTR [rbx-0x72ef73f0],cl
   140044ddb:	adc    BYTE PTR [rsi-0x6fef70f0],cl
   140044de1:	adc    BYTE PTR [rcx-0x6cef6df0],dl
   140044de7:	adc    BYTE PTR [rax+rdx*1+0x10961095],dl
   140044dee:	xchg   edi,eax
   140044def:	adc    BYTE PTR [rax-0x65ef66f0],bl
   140044df5:	adc    BYTE PTR [rbx-0x62ef63f0],bl
   140044dfb:	adc    BYTE PTR [rsi+0x109f10],bl
   140044e01:	sub    eax,0x2d022d01
   140044e06:	add    ebp,DWORD PTR [rip+0x2d052d04]        # 0x16d097b10
   140044e0c:	(bad)  
   140044e0d:	sub    eax,0x2d082d07
   140044e12:	or     DWORD PTR [rip+0x2d0b2d0a],ebp        # 0x16d0f7b22
   140044e18:	or     al,0x2d
   140044e1a:	or     eax,0xf2d0e2d
   140044e1f:	sub    eax,0x2d112d10
   140044e24:	adc    ch,BYTE PTR [rip+0x2d142d13]        # 0x16d187b3d
   140044e2a:	adc    eax,0x172d162d
   140044e2f:	sub    eax,0x2d192d18
   140044e34:	sbb    ch,BYTE PTR [rip+0x2d1c2d1b]        # 0x16d207b55
   140044e3a:	sbb    eax,0x1f2d1e2d
   140044e3f:	sub    eax,0x2d212d20
   140044e44:	and    ch,BYTE PTR [rip+0x2d242d23]        # 0x16d287b6d
   140044e4a:	and    eax,0xc710c62d
   140044e4f:	adc    al,cl
   140044e51:	adc    cl,cl
   140044e53:	adc    dl,cl
   140044e55:	adc    bl,cl
   140044e57:	adc    ah,cl
   140044e59:	adc    ch,cl
   140044e5b:	adc    dh,cl
   140044e5d:	adc    bh,cl
   140044e5f:	adc    al,dl
   140044e61:	adc    cl,dl
   140044e63:	adc    dl,dl
   140044e65:	adc    bl,dl
   140044e67:	adc    ah,dl
   140044e69:	adc    ch,dl
   140044e6b:	adc    dh,dl
   140044e6d:	adc    bh,dl
   140044e6f:	adc    al,bl
   140044e71:	adc    cl,bl
   140044e73:	adc    dl,bl
   140044e75:	adc    bl,bl
   140044e77:	adc    ah,bl
   140044e79:	adc    ch,bl
   140044e7b:	adc    dh,bl
   140044e7d:	adc    bh,bl
   140044e7f:	adc    al,ah
   140044e81:	adc    cl,ah
   140044e83:	adc    dl,ah
   140044e85:	adc    bl,ah
   140044e87:	adc    ah,ah
   140044e89:	adc    ch,ah
   140044e8b:	adc    dh,ah
   140044e8d:	adc    bh,ah
   140044e8f:	adc    al,ch
   140044e91:	adc    cl,ch
   140044e93:	adc    dl,ch
   140044e95:	adc    bl,ch
   140044e97:	adc    ah,ch
   140044e99:	adc    ch,ch
   140044e9b:	adc    dh,ch
   140044e9d:	adc    bh,ch
   140044e9f:	adc    al,dh
   140044ea1:	adc    cl,dh
   140044ea3:	adc    dl,dh
   140044ea5:	adc    bl,dh
   140044ea7:	adc    ah,dh
   140044ea9:	adc    ch,dh
   140044eab:	adc    dh,dh
   140044ead:	adc    bh,dh
   140044eaf:	adc    al,bh
   140044eb1:	adc    cl,bh
   140044eb3:	adc    dl,bh
   140044eb5:	adc    bl,bh
   140044eb7:	adc    ah,bh
   140044eb9:	adc    ch,bh
   140044ebb:	adc    dh,bh
   140044ebd:	adc    bh,bh
   140044ebf:	adc    BYTE PTR [rcx],al
   140044ec1:	(bad)  
   140044ec2:	add    DWORD PTR [rsi],ebx
   140044ec4:	add    ebx,DWORD PTR [rsi]
   140044ec6:	add    ebx,DWORD PTR [rsi]
   140044ec8:	add    eax,0x71e051e
   140044ecd:	(bad)  
   140044ece:	(bad)  
   140044ecf:	(bad)  
   140044ed0:	or     DWORD PTR [rsi],ebx
   140044ed2:	or     DWORD PTR [rsi],ebx
   140044ed4:	or     ebx,DWORD PTR [rsi]
   140044ed6:	or     ebx,DWORD PTR [rsi]
   140044ed8:	or     eax,0xf1e0d1e
   140044edd:	(bad)  
   140044ede:	nop    DWORD PTR [rcx]
   140044ee1:	(bad)  
   140044ee2:	adc    DWORD PTR [rsi],ebx
   140044ee4:	adc    ebx,DWORD PTR [rsi]
   140044ee6:	adc    ebx,DWORD PTR [rsi]
   140044ee8:	adc    eax,0x171e151e
   140044eed:	(bad)  
   140044eee:	(bad)  
   140044eef:	(bad)  
   140044ef0:	sbb    DWORD PTR [rsi],ebx
   140044ef2:	sbb    DWORD PTR [rsi],ebx
   140044ef4:	sbb    ebx,DWORD PTR [rsi]
   140044ef6:	sbb    ebx,DWORD PTR [rsi]
   140044ef8:	sbb    eax,0x1f1e1d1e
   140044efd:	(bad)  
   140044efe:	(bad)  
   140044eff:	(bad)  
   140044f00:	and    DWORD PTR [rsi],ebx
   140044f02:	and    DWORD PTR [rsi],ebx
   140044f04:	and    ebx,DWORD PTR [rsi]
   140044f06:	and    ebx,DWORD PTR [rsi]
   140044f08:	and    eax,0x271e251e
   140044f0d:	(bad)  
   140044f0e:	(bad)  
   140044f0f:	(bad)  
   140044f10:	sub    DWORD PTR [rsi],ebx
   140044f12:	sub    DWORD PTR [rsi],ebx
   140044f14:	sub    ebx,DWORD PTR [rsi]
   140044f16:	sub    ebx,DWORD PTR [rsi]
   140044f18:	sub    eax,0x2f1e2d1e
   140044f1d:	(bad)  
   140044f1e:	(bad)  
   140044f1f:	(bad)  
   140044f20:	xor    DWORD PTR [rsi],ebx
   140044f22:	xor    DWORD PTR [rsi],ebx
   140044f24:	xor    ebx,DWORD PTR [rsi]
   140044f26:	xor    ebx,DWORD PTR [rsi]
   140044f28:	xor    eax,0x371e351e
   140044f2d:	(bad)  
   140044f2e:	(bad)  
   140044f2f:	(bad)  
   140044f30:	cmp    DWORD PTR [rsi],ebx
   140044f32:	cmp    DWORD PTR [rsi],ebx
   140044f34:	cmp    ebx,DWORD PTR [rsi]
   140044f36:	cmp    ebx,DWORD PTR [rsi]
   140044f38:	cmp    eax,0x3f1e3d1e
   140044f3d:	(bad)  
   140044f3e:	(bad)  
   140044f3f:	(bad)  
   140044f40:	rex.B (bad) 
   140044f42:	rex.B (bad) 
   140044f44:	rex.XB (bad) 
   140044f46:	rex.XB (bad) 
   140044f48:	rex.RB (bad) 
   140044f4a:	rex.RB (bad) 
   140044f4c:	rex.RXB (bad) 
   140044f4e:	rex.RXB (bad) 
   140044f50:	rex.WB (bad) 
   140044f52:	rex.WB (bad) 
   140044f54:	rex.WXB (bad) 
   140044f56:	rex.WXB (bad) 
   140044f58:	rex.WRB (bad) 
   140044f5a:	rex.WRB (bad) 
   140044f5c:	rex.WRXB (bad) 
   140044f5e:	rex.WRXB (bad) 
   140044f60:	push   rcx
   140044f61:	(bad)  
   140044f62:	push   rcx
   140044f63:	(bad)  
   140044f64:	push   rbx
   140044f65:	(bad)  
   140044f66:	push   rbx
   140044f67:	(bad)  
   140044f68:	push   rbp
   140044f69:	(bad)  
   140044f6a:	push   rbp
   140044f6b:	(bad)  
   140044f6c:	push   rdi
   140044f6d:	(bad)  
   140044f6e:	push   rdi
   140044f6f:	(bad)  
   140044f70:	pop    rcx
   140044f71:	(bad)  
   140044f72:	pop    rcx
   140044f73:	(bad)  
   140044f74:	pop    rbx
   140044f75:	(bad)  
   140044f76:	pop    rbx
   140044f77:	(bad)  
   140044f78:	pop    rbp
   140044f79:	(bad)  
   140044f7a:	pop    rbp
   140044f7b:	(bad)  
   140044f7c:	pop    rdi
   140044f7d:	(bad)  
   140044f7e:	pop    rdi
   140044f7f:	(bad)  
   140044f80:	(bad)  
   140044f81:	(bad)  
   140044f82:	(bad)  
   140044f83:	(bad)  
   140044f84:	movsxd ebx,DWORD PTR [rsi]
   140044f86:	movsxd ebx,DWORD PTR [rsi]
   140044f88:	gs (bad) 
   140044f8a:	gs (bad) 
   140044f8c:	addr32 (bad) 
   140044f8e:	addr32 (bad) 
   140044f90:	imul   ebx,DWORD PTR [rsi],0x1e6b1e69
   140044f96:	imul   ebx,DWORD PTR [rsi],0x6d
   140044f99:	(bad)  
   140044f9a:	ins    DWORD PTR es:[rdi],dx
   140044f9b:	(bad)  
   140044f9c:	outs   dx,DWORD PTR ds:[rsi]
   140044f9d:	(bad)  
   140044f9e:	outs   dx,DWORD PTR ds:[rsi]
   140044f9f:	(bad)  
   140044fa0:	jno    0x140044fc0
   140044fa2:	jno    0x140044fc2
   140044fa4:	jae    0x140044fc4
   140044fa6:	jae    0x140044fc6
   140044fa8:	jne    0x140044fc8
   140044faa:	jne    0x140044fca
   140044fac:	ja     0x140044fcc
   140044fae:	ja     0x140044fce
   140044fb0:	jns    0x140044fd0
   140044fb2:	jns    0x140044fd2
   140044fb4:	jnp    0x140044fd4
   140044fb6:	jnp    0x140044fd6
   140044fb8:	jge    0x140044fd8
   140044fba:	jge    0x140044fda
   140044fbc:	jg     0x140044fdc
   140044fbe:	jg     0x140044fde
   140044fc0:	sbb    DWORD PTR [rsi],0x1e831e81
   140044fc6:	sbb    DWORD PTR [rsi],0xffffff85
   140044fc9:	(bad)  
   140044fca:	test   DWORD PTR [rsi],ebx
   140044fcc:	xchg   DWORD PTR [rsi],ebx
   140044fce:	xchg   DWORD PTR [rsi],ebx
   140044fd0:	mov    DWORD PTR [rsi],ebx
   140044fd2:	mov    DWORD PTR [rsi],ebx
   140044fd4:	mov    ebx,DWORD PTR [rsi]
   140044fd6:	mov    ebx,DWORD PTR [rsi]
   140044fd8:	lea    ebx,[rsi]
   140044fda:	lea    ebx,[rsi]
   140044fdc:	(bad)  
   140044fdd:	(bad)  
   140044fde:	(bad)  
   140044fdf:	(bad)  
   140044fe0:	xchg   ecx,eax
   140044fe1:	(bad)  
   140044fe2:	xchg   ecx,eax
   140044fe3:	(bad)  
   140044fe4:	xchg   ebx,eax
   140044fe5:	(bad)  
   140044fe6:	xchg   ebx,eax
   140044fe7:	(bad)  
   140044fe8:	xchg   ebp,eax
   140044fe9:	(bad)  
   140044fea:	xchg   ebp,eax
   140044feb:	(bad)  
   140044fec:	xchg   esi,eax
   140044fed:	(bad)  
   140044fee:	xchg   edi,eax
   140044fef:	(bad)  
   140044ff0:	cwde   
   140044ff1:	(bad)  
   140044ff2:	cdq    
   140044ff3:	(bad)  
   140044ff4:	(bad)  
   140044ff5:	(bad)  
   140044ff6:	(bad)  
   140044ff7:	(bad)  
   140044ff8:	pushf  
   140044ff9:	(bad)  
   140044ffa:	popf   
   140044ffb:	(bad)  
   140044ffc:	sahf   
   140044ffd:	(bad)  
   140044ffe:	lahf   
   140044fff:	(bad)  
   140045000:	movabs eax,ds:0xa51ea31ea31ea11e
   140045009:	(bad)  
   14004500a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004500b:	(bad)  
   14004500c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004500d:	(bad)  
   14004500e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004500f:	(bad)  
   140045010:	test   eax,0xab1ea91e
   140045015:	(bad)  
   140045016:	stos   DWORD PTR es:[rdi],eax
   140045017:	(bad)  
   140045018:	lods   eax,DWORD PTR ds:[rsi]
   140045019:	(bad)  
   14004501a:	lods   eax,DWORD PTR ds:[rsi]
   14004501b:	(bad)  
   14004501c:	scas   eax,DWORD PTR es:[rdi]
   14004501d:	(bad)  
   14004501e:	scas   eax,DWORD PTR es:[rdi]
   14004501f:	(bad)  
   140045020:	mov    cl,0x1e
   140045022:	mov    cl,0x1e
   140045024:	mov    bl,0x1e
   140045026:	mov    bl,0x1e
   140045028:	mov    ch,0x1e
   14004502a:	mov    ch,0x1e
   14004502c:	mov    bh,0x1e
   14004502e:	mov    bh,0x1e
   140045030:	mov    ecx,0xbb1eb91e
   140045035:	(bad)  
   140045036:	mov    ebx,0xbd1ebd1e
   14004503b:	(bad)  
   14004503c:	mov    edi,0xc11ebf1e
   140045041:	(bad)  
   140045042:	rcr    DWORD PTR [rsi],0xc3
   140045045:	(bad)  
   140045046:	ret    
   140045047:	(bad)  
   140045048:	(bad)
   14004504b:	(bad)  
   14004504c:	(bad)  
   14004504d:	(bad)  
   14004504e:	(bad)  
   14004504f:	(bad)  
   140045050:	leave  
   140045051:	(bad)  
   140045052:	leave  
   140045053:	(bad)  
   140045054:	retf   
   140045055:	(bad)  
   140045056:	retf   
   140045057:	(bad)  
   140045058:	int    0x1e
   14004505a:	int    0x1e
   14004505c:	iret   
   14004505d:	(bad)  
   14004505e:	iret   
   14004505f:	(bad)  
   140045060:	rcr    DWORD PTR [rsi],1
   140045062:	rcr    DWORD PTR [rsi],1
   140045064:	rcr    DWORD PTR [rsi],cl
   140045066:	rcr    DWORD PTR [rsi],cl
   140045068:	(bad)  
   140045069:	(bad)  
   14004506a:	(bad)  
   14004506b:	(bad)  
   14004506c:	xlat   BYTE PTR ds:[rbx]
   14004506d:	(bad)  
   14004506e:	xlat   BYTE PTR ds:[rbx]
   14004506f:	(bad)  
   140045070:	fstp   DWORD PTR [rsi]
   140045072:	fstp   DWORD PTR [rsi]
   140045074:	fistp  DWORD PTR [rsi]
   140045076:	fistp  DWORD PTR [rsi]
   140045078:	fstp   QWORD PTR [rsi]
   14004507a:	fstp   QWORD PTR [rsi]
   14004507c:	fistp  WORD PTR [rsi]
   14004507e:	fistp  WORD PTR [rsi]
   140045080:	loope  0x1400450a0
   140045082:	loope  0x1400450a2
   140045084:	jrcxz  0x1400450a4
   140045086:	jrcxz  0x1400450a6
   140045088:	in     eax,0x1e
   14004508a:	in     eax,0x1e
   14004508c:	out    0x1e,eax
   14004508e:	out    0x1e,eax
   140045090:	jmp    0x12b2339b3
   140045095:	(bad)  
   140045096:	jmp    0x1400450b6
   140045098:	in     eax,dx
   140045099:	(bad)  
   14004509a:	in     eax,dx
   14004509b:	(bad)  
   14004509c:	out    dx,eax
   14004509d:	(bad)  
   14004509e:	out    dx,eax
   14004509f:	(bad)  
   1400450a0:	icebp  
   1400450a1:	(bad)  
   1400450a2:	icebp  
   1400450a3:	(bad)  
   1400450a4:	repz (bad) 
   1400450a6:	repz (bad) 
   1400450a8:	cmc    
   1400450a9:	(bad)  
   1400450aa:	cmc    
   1400450ab:	(bad)  
   1400450ac:	neg    DWORD PTR [rsi]
   1400450ae:	neg    DWORD PTR [rsi]
   1400450b0:	stc    
   1400450b1:	(bad)  
   1400450b2:	stc    
   1400450b3:	(bad)  
   1400450b4:	cli    
   1400450b5:	(bad)  
   1400450b6:	sti    
   1400450b7:	(bad)  
   1400450b8:	cld    
   1400450b9:	(bad)  
   1400450ba:	std    
   1400450bb:	(bad)  
   1400450bc:	(bad)  
   1400450bd:	(bad)  
   1400450be:	call   FWORD PTR [rsi]
   1400450c0:	add    BYTE PTR [rdi],bl
   1400450c2:	add    DWORD PTR [rdi],ebx
   1400450c4:	add    bl,BYTE PTR [rdi]
   1400450c6:	add    ebx,DWORD PTR [rdi]
   1400450c8:	add    al,0x1f
   1400450ca:	add    eax,0x71f061f
   1400450cf:	(bad)  
   1400450d0:	add    BYTE PTR [rdi],bl
   1400450d2:	add    DWORD PTR [rdi],ebx
   1400450d4:	add    bl,BYTE PTR [rdi]
   1400450d6:	add    ebx,DWORD PTR [rdi]
   1400450d8:	add    al,0x1f
   1400450da:	add    eax,0x71f061f
   1400450df:	(bad)  
   1400450e0:	adc    BYTE PTR [rdi],bl
   1400450e2:	adc    DWORD PTR [rdi],ebx
   1400450e4:	adc    bl,BYTE PTR [rdi]
   1400450e6:	adc    ebx,DWORD PTR [rdi]
   1400450e8:	adc    al,0x1f
   1400450ea:	adc    eax,0x171f161f
   1400450ef:	(bad)  
   1400450f0:	adc    BYTE PTR [rdi],bl
   1400450f2:	adc    DWORD PTR [rdi],ebx
   1400450f4:	adc    bl,BYTE PTR [rdi]
   1400450f6:	adc    ebx,DWORD PTR [rdi]
   1400450f8:	adc    al,0x1f
   1400450fa:	adc    eax,0x1f1f1e1f
   1400450ff:	(bad)  
   140045100:	and    BYTE PTR [rdi],bl
   140045102:	and    DWORD PTR [rdi],ebx
   140045104:	and    bl,BYTE PTR [rdi]
   140045106:	and    ebx,DWORD PTR [rdi]
   140045108:	and    al,0x1f
   14004510a:	and    eax,0x271f261f
   14004510f:	(bad)  
   140045110:	and    BYTE PTR [rdi],bl
   140045112:	and    DWORD PTR [rdi],ebx
   140045114:	and    bl,BYTE PTR [rdi]
   140045116:	and    ebx,DWORD PTR [rdi]
   140045118:	and    al,0x1f
   14004511a:	and    eax,0x271f261f
   14004511f:	(bad)  
   140045120:	xor    BYTE PTR [rdi],bl
   140045122:	xor    DWORD PTR [rdi],ebx
   140045124:	xor    bl,BYTE PTR [rdi]
   140045126:	xor    ebx,DWORD PTR [rdi]
   140045128:	xor    al,0x1f
   14004512a:	xor    eax,0x371f361f
   14004512f:	(bad)  
   140045130:	xor    BYTE PTR [rdi],bl
   140045132:	xor    DWORD PTR [rdi],ebx
   140045134:	xor    bl,BYTE PTR [rdi]
   140045136:	xor    ebx,DWORD PTR [rdi]
   140045138:	xor    al,0x1f
   14004513a:	xor    eax,0x371f361f
   14004513f:	(bad)  
   140045140:	rex (bad) 
   140045142:	rex.B (bad) 
   140045144:	rex.X (bad) 
   140045146:	rex.XB (bad) 
   140045148:	rex.R (bad) 
   14004514a:	rex.RB (bad) 
   14004514c:	rex.RX (bad) 
   14004514e:	rex.RXB (bad) 
   140045150:	rex (bad) 
   140045152:	rex.B (bad) 
   140045154:	rex.X (bad) 
   140045156:	rex.XB (bad) 
   140045158:	rex.R (bad) 
   14004515a:	rex.RB (bad) 
   14004515c:	rex.WRX (bad) 
   14004515e:	rex.WRXB (bad) 
   140045160:	push   rax
   140045161:	(bad)  
   140045162:	push   rcx
   140045163:	(bad)  
   140045164:	push   rdx
   140045165:	(bad)  
   140045166:	push   rbx
   140045167:	(bad)  
   140045168:	push   rsp
   140045169:	(bad)  
   14004516a:	push   rbp
   14004516b:	(bad)  
   14004516c:	push   rsi
   14004516d:	(bad)  
   14004516e:	push   rdi
   14004516f:	(bad)  
   140045170:	pop    rax
   140045171:	(bad)  
   140045172:	push   rcx
   140045173:	(bad)  
   140045174:	pop    rdx
   140045175:	(bad)  
   140045176:	push   rbx
   140045177:	(bad)  
   140045178:	pop    rsp
   140045179:	(bad)  
   14004517a:	push   rbp
   14004517b:	(bad)  
   14004517c:	pop    rsi
   14004517d:	(bad)  
   14004517e:	push   rdi
   14004517f:	(bad)  
   140045180:	(bad)  
   140045181:	(bad)  
   140045182:	(bad)  
   140045183:	(bad)  
   140045184:	(bad)  
   140045185:	(bad)  
   140045186:	movsxd ebx,DWORD PTR [rdi]
   140045188:	fs (bad) 
   14004518a:	gs (bad) 
   14004518c:	data16 (bad) 
   14004518e:	addr32 (bad) 
   140045190:	(bad)  
   140045191:	(bad)  
   140045192:	(bad)  
   140045193:	(bad)  
   140045194:	(bad)  
   140045195:	(bad)  
   140045196:	movsxd ebx,DWORD PTR [rdi]
   140045198:	fs (bad) 
   14004519a:	gs (bad) 
   14004519c:	data16 (bad) 
   14004519e:	addr32 (bad) 
   1400451a0:	jo     0x1400451c1
   1400451a2:	jno    0x1400451c3
   1400451a4:	jb     0x1400451c5
   1400451a6:	jae    0x1400451c7
   1400451a8:	je     0x1400451c9
   1400451aa:	jne    0x1400451cb
   1400451ac:	jbe    0x1400451cd
   1400451ae:	ja     0x1400451cf
   1400451b0:	js     0x1400451d1
   1400451b2:	jns    0x1400451d3
   1400451b4:	jp     0x1400451d5
   1400451b6:	jnp    0x1400451d7
   1400451b8:	jl     0x1400451d9
   1400451ba:	jge    0x1400451db
   1400451bc:	jle    0x1400451dd
   1400451be:	jg     0x1400451df
   1400451c0:	sbb    BYTE PTR [rdi],0x81
   1400451c3:	(bad)  
   1400451c4:	(bad)  
   1400451c5:	(bad)  
   1400451c6:	sbb    DWORD PTR [rdi],0xffffff84
   1400451c9:	(bad)  
   1400451ca:	test   DWORD PTR [rdi],ebx
   1400451cc:	xchg   BYTE PTR [rdi],bl
   1400451ce:	xchg   DWORD PTR [rdi],ebx
   1400451d0:	sbb    BYTE PTR [rdi],0x81
   1400451d3:	(bad)  
   1400451d4:	(bad)  
   1400451d5:	(bad)  
   1400451d6:	sbb    DWORD PTR [rdi],0xffffff84
   1400451d9:	(bad)  
   1400451da:	test   DWORD PTR [rdi],ebx
   1400451dc:	xchg   BYTE PTR [rdi],bl
   1400451de:	xchg   DWORD PTR [rdi],ebx
   1400451e0:	nop
   1400451e1:	(bad)  
   1400451e2:	xchg   ecx,eax
   1400451e3:	(bad)  
   1400451e4:	xchg   edx,eax
   1400451e5:	(bad)  
   1400451e6:	xchg   ebx,eax
   1400451e7:	(bad)  
   1400451e8:	xchg   esp,eax
   1400451e9:	(bad)  
   1400451ea:	xchg   ebp,eax
   1400451eb:	(bad)  
   1400451ec:	xchg   esi,eax
   1400451ed:	(bad)  
   1400451ee:	xchg   edi,eax
   1400451ef:	(bad)  
   1400451f0:	nop
   1400451f1:	(bad)  
   1400451f2:	xchg   ecx,eax
   1400451f3:	(bad)  
   1400451f4:	xchg   edx,eax
   1400451f5:	(bad)  
   1400451f6:	xchg   ebx,eax
   1400451f7:	(bad)  
   1400451f8:	xchg   esp,eax
   1400451f9:	(bad)  
   1400451fa:	xchg   ebp,eax
   1400451fb:	(bad)  
   1400451fc:	xchg   esi,eax
   1400451fd:	(bad)  
   1400451fe:	xchg   edi,eax
   1400451ff:	(bad)  
   140045200:	movabs al,ds:0xa41fa31fa21fa11f
   140045209:	(bad)  
   14004520a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004520b:	(bad)  
   14004520c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004520d:	(bad)  
   14004520e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004520f:	(bad)  
   140045210:	movabs al,ds:0xa41fa31fa21fa11f
   140045219:	(bad)  
   14004521a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004521b:	(bad)  
   14004521c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004521d:	(bad)  
   14004521e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004521f:	(bad)  
   140045220:	mov    al,0x1f
   140045222:	mov    cl,0x1f
   140045224:	mov    dl,0x1f
   140045226:	mov    bl,0x1f
   140045228:	mov    ah,0x1f
   14004522a:	mov    ch,0x1f
   14004522c:	mov    dh,0x1f
   14004522e:	mov    bh,0x1f
   140045230:	mov    al,0x1f
   140045232:	mov    cl,0x1f
   140045234:	jo     0x140045255
   140045236:	jno    0x140045257
   140045238:	mov    bl,0x1f
   14004523a:	mov    ebp,0xbf03b91f
   14004523f:	(bad)  
   140045240:	rcr    BYTE PTR [rdi],0xc1
   140045243:	(bad)  
   140045244:	ret    0xc31f
   140045247:	(bad)  
   140045248:	(bad)  
   140045249:	(bad)  
   14004524a:	vshufps ymm11,ymm12,YMMWORD PTR [rdi],0xc7
   14004524f:	(bad)  
   140045250:	jb     0x140045271
   140045252:	jae    0x140045273
   140045254:	je     0x140045275
   140045256:	jne    0x140045277
   140045258:	ret    
   140045259:	(bad)  
   14004525a:	int    0x1f
   14004525c:	(bad)  
   14004525d:	(bad)  
   14004525e:	iret   
   14004525f:	(bad)  
   140045260:	rcr    BYTE PTR [rdi],1
   140045262:	rcr    DWORD PTR [rdi],1
   140045264:	rcr    BYTE PTR [rdi],cl
   140045266:	rcr    DWORD PTR [rdi],cl
   140045268:	(bad)  
   140045269:	(bad)  
   14004526a:	(bad)  
   14004526b:	(bad)  
   14004526c:	(bad)  
   14004526d:	(bad)  
   14004526e:	xlat   BYTE PTR ds:[rbx]
   14004526f:	(bad)  
   140045270:	rcr    BYTE PTR [rdi],1
   140045272:	rcr    DWORD PTR [rdi],1
   140045274:	jbe    0x140045295
   140045276:	ja     0x140045297
   140045278:	fcomp  QWORD PTR [rdi]
   14004527a:	fstp   QWORD PTR [rdi]
   14004527c:	ficomp WORD PTR [rdi]
   14004527e:	fistp  WORD PTR [rdi]
   140045280:	loopne 0x1400452a1
   140045282:	loope  0x1400452a3
   140045284:	loop   0x1400452a5
   140045286:	jrcxz  0x1400452a7
   140045288:	in     al,0x1f
   14004528a:	in     eax,0x1f
   14004528c:	out    0x1f,al
   14004528e:	out    0x1f,eax
   140045290:	loopne 0x1400452b1
   140045292:	loope  0x1400452b3
   140045294:	jp     0x1400452b5
   140045296:	jnp    0x1400452b7
   140045298:	in     eax,0x1f
   14004529a:	in     eax,dx
   14004529b:	(bad)  
   14004529c:	out    dx,al
   14004529d:	(bad)  
   14004529e:	out    dx,eax
   14004529f:	(bad)  
   1400452a0:	lock (bad) 
   1400452a2:	icebp  
   1400452a3:	(bad)  
   1400452a4:	repnz (bad) 
   1400452a6:	repz (bad) 
   1400452a8:	hlt    
   1400452a9:	(bad)  
   1400452aa:	cmc    
   1400452ab:	(bad)  
   1400452ac:	neg    BYTE PTR [rdi]
   1400452ae:	neg    DWORD PTR [rdi]
   1400452b0:	js     0x1400452d1
   1400452b2:	jns    0x1400452d3
   1400452b4:	jl     0x1400452d5
   1400452b6:	jge    0x1400452d7
   1400452b8:	repz (bad) 
   1400452ba:	std    
   1400452bb:	(bad)  
   1400452bc:	(bad)  
   1400452bd:	(bad)  
   1400452be:	call   FWORD PTR [rdi]
   1400452c0:	add    BYTE PTR [rcx],ah
   1400452c2:	add    DWORD PTR [rcx],esp
   1400452c4:	add    ah,BYTE PTR [rcx]
   1400452c6:	add    esp,DWORD PTR [rcx]
   1400452c8:	add    al,0x21
   1400452ca:	add    eax,0x7210621
   1400452cf:	and    DWORD PTR [rax],ecx
   1400452d1:	and    DWORD PTR [rcx],ecx
   1400452d3:	and    DWORD PTR [rdx],ecx
   1400452d5:	and    DWORD PTR [rbx],ecx
   1400452d7:	and    DWORD PTR [rcx+riz*1],ecx
   1400452da:	or     eax,0xf210e21
   1400452df:	and    DWORD PTR [rax],edx
   1400452e1:	and    DWORD PTR [rcx],edx
   1400452e3:	and    DWORD PTR [rdx],edx
   1400452e5:	and    DWORD PTR [rbx],edx
   1400452e7:	and    DWORD PTR [rcx+riz*1],edx
   1400452ea:	adc    eax,0x17211621
   1400452ef:	and    DWORD PTR [rax],ebx
   1400452f1:	and    DWORD PTR [rcx],ebx
   1400452f3:	and    DWORD PTR [rdx],ebx
   1400452f5:	and    DWORD PTR [rbx],ebx
   1400452f7:	and    DWORD PTR [rcx+riz*1],ebx
   1400452fa:	sbb    eax,0x1f211e21
   1400452ff:	and    DWORD PTR [rax],esp
   140045301:	and    DWORD PTR [rcx],esp
   140045303:	and    DWORD PTR [rdx],esp
   140045305:	and    DWORD PTR [rbx],esp
   140045307:	and    DWORD PTR [rcx+riz*1],esp
   14004530a:	and    eax,0x2703c921
   14004530f:	and    DWORD PTR [rax],ebp
   140045311:	and    DWORD PTR [rcx],ebp
   140045313:	and    DWORD PTR [rbx+0x0],ebp
   140045316:	in     eax,0x0
   140045318:	sub    al,0x21
   14004531a:	sub    eax,0x2f212e21
   14004531f:	and    DWORD PTR [rax],esi
   140045321:	and    DWORD PTR [rcx],esi
   140045323:	and    DWORD PTR [rsi+0x21],ecx
   140045326:	xor    esp,DWORD PTR [rcx]
   140045328:	xor    al,0x21
   14004532a:	xor    eax,0x37213621
   14004532f:	and    DWORD PTR [rax],edi
   140045331:	and    DWORD PTR [rcx],edi
   140045333:	and    DWORD PTR [rdx],edi
   140045335:	and    DWORD PTR [rbx],edi
   140045337:	and    DWORD PTR [rcx+riz*1],edi
   14004533a:	cmp    eax,0x3f213e21
   14004533f:	and    DWORD PTR [rax+0x21],eax
   140045342:	and    DWORD PTR [r10+0x21],eax
   140045346:	and    DWORD PTR [r9+r12*1+0x45],eax
   14004534b:	and    DWORD PTR [rsi+0x21],eax
   14004534e:	rex.RXB and DWORD PTR [r8+0x21],r9d
   140045352:	and    QWORD PTR [r10+0x21],rcx
   140045356:	and    QWORD PTR [r9+r12*1+0x4d],rcx
   14004535b:	and    DWORD PTR [rsi+0x21],ecx
   14004535e:	rex.WRXB and QWORD PTR [r8+0x21],r10
   140045362:	push   rcx
   140045363:	and    DWORD PTR [rdx+0x21],edx
   140045366:	push   rbx
   140045367:	and    DWORD PTR [rcx+riz*1+0x55],edx
   14004536b:	and    DWORD PTR [rsi+0x21],edx
   14004536e:	push   rdi
   14004536f:	and    DWORD PTR [rax+0x21],ebx
   140045372:	pop    rcx
   140045373:	and    DWORD PTR [rdx+0x21],ebx
   140045376:	pop    rbx
   140045377:	and    DWORD PTR [rcx+riz*1+0x5d],ebx
   14004537b:	and    DWORD PTR [rsi+0x21],ebx
   14004537e:	pop    rdi
   14004537f:	and    DWORD PTR [rax+0x21],esi
   140045382:	jno    0x1400453a5
   140045384:	jb     0x1400453a7
   140045386:	jae    0x1400453a9
   140045388:	je     0x1400453ab
   14004538a:	jne    0x1400453ad
   14004538c:	jbe    0x1400453af
   14004538e:	ja     0x1400453b1
   140045390:	js     0x1400453b3
   140045392:	jns    0x1400453b5
   140045394:	jp     0x1400453b7
   140045396:	jnp    0x1400453b9
   140045398:	jl     0x1400453bb
   14004539a:	jge    0x1400453bd
   14004539c:	jle    0x1400453bf
   14004539e:	jg     0x1400453c1
   1400453a0:	jo     0x1400453c3
   1400453a2:	jno    0x1400453c5
   1400453a4:	jb     0x1400453c7
   1400453a6:	jae    0x1400453c9
   1400453a8:	je     0x1400453cb
   1400453aa:	jne    0x1400453cd
   1400453ac:	jbe    0x1400453cf
   1400453ae:	ja     0x1400453d1
   1400453b0:	js     0x1400453d3
   1400453b2:	jns    0x1400453d5
   1400453b4:	jp     0x1400453d7
   1400453b6:	jnp    0x1400453d9
   1400453b8:	jl     0x1400453db
   1400453ba:	jge    0x1400453dd
   1400453bc:	jle    0x1400453df
   1400453be:	jg     0x1400453e1
   1400453c0:	and    BYTE PTR [rcx],0x81
   1400453c3:	and    DWORD PTR [rdx-0x7bde7bdf],eax
   1400453c9:	and    DWORD PTR [rbp-0x78de79df],eax
   1400453cf:	and    DWORD PTR [rax-0x75de76df],ecx
   1400453d5:	and    DWORD PTR [rbx-0x72de73df],ecx
   1400453db:	and    DWORD PTR [rsi-0x6fde70df],ecx
   1400453e1:	and    DWORD PTR [rcx-0x6cde6ddf],edx
   1400453e7:	and    DWORD PTR [rcx+riz*1+0x21962195],edx
   1400453ee:	xchg   edi,eax
   1400453ef:	and    DWORD PTR [rax-0x65de66df],ebx
   1400453f5:	and    DWORD PTR [rbx-0x62de63df],ebx
   1400453fb:	and    DWORD PTR [rsi-0x5fde60df],ebx
   140045401:	and    DWORD PTR [rcx-0x5cde5ddf],esp
   140045407:	and    DWORD PTR [rcx+riz*1+0x21a621a5],esp
   14004540e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004540f:	and    DWORD PTR [rax-0x55de56df],ebp
   140045415:	and    DWORD PTR [rbx-0x52de53df],ebp
   14004541b:	and    DWORD PTR [rsi-0x4fde50df],ebp
   140045421:	and    DWORD PTR [rcx-0x4cde4ddf],esi
   140045427:	and    DWORD PTR [rcx+riz*1+0x21b621b5],esi
   14004542e:	mov    bh,0x21
   140045430:	mov    eax,0xba21b921
   140045435:	and    DWORD PTR [rbx-0x42de43df],edi
   14004543b:	and    DWORD PTR [rsi-0x3fde40df],edi
   140045441:	and    ecx,eax
   140045443:	and    edx,eax
   140045445:	and    ebx,eax
   140045447:	and    esp,eax
   140045449:	and    ebp,eax
   14004544b:	and    esi,eax
   14004544d:	and    edi,eax
   14004544f:	and    eax,ecx
   140045451:	and    ecx,ecx
   140045453:	and    edx,ecx
   140045455:	and    ebx,ecx
   140045457:	and    esp,ecx
   140045459:	and    ebp,ecx
   14004545b:	and    esi,ecx
   14004545d:	and    edi,ecx
   14004545f:	and    eax,edx
   140045461:	and    ecx,edx
   140045463:	and    edx,edx
   140045465:	and    ebx,edx
   140045467:	and    esp,edx
   140045469:	and    ebp,edx
   14004546b:	and    esi,edx
   14004546d:	and    edi,edx
   14004546f:	and    eax,ebx
   140045471:	and    ecx,ebx
   140045473:	and    edx,ebx
   140045475:	and    ebx,ebx
   140045477:	and    esp,ebx
   140045479:	and    ebp,ebx
   14004547b:	and    esi,ebx
   14004547d:	and    edi,ebx
   14004547f:	and    eax,esp
   140045481:	and    ecx,esp
   140045483:	and    edx,esp
   140045485:	and    ebx,esp
   140045487:	and    esp,esp
   140045489:	and    ebp,esp
   14004548b:	and    esi,esp
   14004548d:	and    edi,esp
   14004548f:	and    eax,ebp
   140045491:	and    ecx,ebp
   140045493:	and    edx,ebp
   140045495:	and    ebx,ebp
   140045497:	and    esp,ebp
   140045499:	and    ebp,ebp
   14004549b:	and    esi,ebp
   14004549d:	and    edi,ebp
   14004549f:	and    eax,esi
   1400454a1:	and    ecx,esi
   1400454a3:	and    edx,esi
   1400454a5:	and    ebx,esi
   1400454a7:	and    esp,esi
   1400454a9:	and    ebp,esi
   1400454ab:	and    esi,esi
   1400454ad:	and    edi,esi
   1400454af:	and    eax,edi
   1400454b1:	and    ecx,edi
   1400454b3:	and    edx,edi
   1400454b5:	and    ebx,edi
   1400454b7:	and    esp,edi
   1400454b9:	and    ebp,edi
   1400454bb:	and    esi,edi
   1400454bd:	and    edi,edi
   1400454bf:	and    DWORD PTR [rax],eax
   1400454c1:	and    al,0x1
   1400454c3:	and    al,0x2
   1400454c5:	and    al,0x3
   1400454c7:	and    al,0x4
   1400454c9:	and    al,0x5
   1400454cb:	and    al,0x6
   1400454cd:	and    al,0x7
   1400454cf:	and    al,0x8
   1400454d1:	and    al,0x9
   1400454d3:	and    al,0xa
   1400454d5:	and    al,0xb
   1400454d7:	and    al,0xc
   1400454d9:	and    al,0xd
   1400454db:	and    al,0xe
   1400454dd:	and    al,0xf
   1400454df:	and    al,0x10
   1400454e1:	and    al,0x11
   1400454e3:	and    al,0x12
   1400454e5:	and    al,0x13
   1400454e7:	and    al,0x14
   1400454e9:	and    al,0x15
   1400454eb:	and    al,0x16
   1400454ed:	and    al,0x17
   1400454ef:	and    al,0x18
   1400454f1:	and    al,0x19
   1400454f3:	and    al,0x1a
   1400454f5:	and    al,0x1b
   1400454f7:	and    al,0x1c
   1400454f9:	and    al,0x1d
   1400454fb:	and    al,0x1e
   1400454fd:	and    al,0x1f
   1400454ff:	and    al,0x20
   140045501:	and    al,0x21
   140045503:	and    al,0x22
   140045505:	and    al,0x23
   140045507:	and    al,0x24
   140045509:	and    al,0x25
   14004550b:	and    al,0x26
   14004550d:	and    al,0x27
   14004550f:	and    al,0x28
   140045511:	and    al,0x29
   140045513:	and    al,0x2a
   140045515:	and    al,0x2b
   140045517:	and    al,0x2c
   140045519:	and    al,0x2d
   14004551b:	and    al,0x2e
   14004551d:	and    al,0x2f
   14004551f:	and    al,0x30
   140045521:	and    al,0x31
   140045523:	and    al,0x32
   140045525:	and    al,0x33
   140045527:	and    al,0x34
   140045529:	and    al,0x35
   14004552b:	and    al,0x36
   14004552d:	and    al,0x37
   14004552f:	and    al,0x38
   140045531:	and    al,0x39
   140045533:	and    al,0x3a
   140045535:	and    al,0x3b
   140045537:	and    al,0x3c
   140045539:	and    al,0x3d
   14004553b:	and    al,0x3e
   14004553d:	and    al,0x3f
   14004553f:	and    al,0x40
   140045541:	and    al,0x41
   140045543:	and    al,0x42
   140045545:	and    al,0x43
   140045547:	and    al,0x44
   140045549:	and    al,0x45
   14004554b:	and    al,0x46
   14004554d:	and    al,0x47
   14004554f:	and    al,0x48
   140045551:	and    al,0x49
   140045553:	and    al,0x4a
   140045555:	and    al,0x4b
   140045557:	and    al,0x4c
   140045559:	and    al,0x4d
   14004555b:	and    al,0x4e
   14004555d:	and    al,0x4f
   14004555f:	and    al,0x50
   140045561:	and    al,0x51
   140045563:	and    al,0x52
   140045565:	and    al,0x53
   140045567:	and    al,0x54
   140045569:	and    al,0x55
   14004556b:	and    al,0x56
   14004556d:	and    al,0x57
   14004556f:	and    al,0x58
   140045571:	and    al,0x59
   140045573:	and    al,0x5a
   140045575:	and    al,0x5b
   140045577:	and    al,0x5c
   140045579:	and    al,0x5d
   14004557b:	and    al,0x5e
   14004557d:	and    al,0x5f
   14004557f:	and    al,0x60
   140045581:	and    al,0x61
   140045583:	and    al,0x62
   140045585:	and    al,0x63
   140045587:	and    al,0x64
   140045589:	and    al,0x65
   14004558b:	and    al,0x66
   14004558d:	and    al,0x67
   14004558f:	and    al,0x68
   140045591:	and    al,0x69
   140045593:	and    al,0x6a
   140045595:	and    al,0x6b
   140045597:	and    al,0x6c
   140045599:	and    al,0x6d
   14004559b:	and    al,0x6e
   14004559d:	and    al,0x6f
   14004559f:	and    al,0x70
   1400455a1:	and    al,0x71
   1400455a3:	and    al,0x72
   1400455a5:	and    al,0x73
   1400455a7:	and    al,0x74
   1400455a9:	and    al,0x75
   1400455ab:	and    al,0x76
   1400455ad:	and    al,0x77
   1400455af:	and    al,0x78
   1400455b1:	and    al,0x79
   1400455b3:	and    al,0x7a
   1400455b5:	and    al,0x7b
   1400455b7:	and    al,0x7c
   1400455b9:	and    al,0x7d
   1400455bb:	and    al,0x7e
   1400455bd:	and    al,0x7f
   1400455bf:	and    al,0x80
   1400455c1:	and    al,0x81
   1400455c3:	and    al,0x82
   1400455c5:	and    al,0x83
   1400455c7:	and    al,0x84
   1400455c9:	and    al,0x85
   1400455cb:	and    al,0x86
   1400455cd:	and    al,0x87
   1400455cf:	and    al,0x88
   1400455d1:	and    al,0x89
   1400455d3:	and    al,0x8a
   1400455d5:	and    al,0x8b
   1400455d7:	and    al,0x8c
   1400455d9:	and    al,0x8d
   1400455db:	and    al,0x8e
   1400455dd:	and    al,0x8f
   1400455df:	and    al,0x90
   1400455e1:	and    al,0x91
   1400455e3:	and    al,0x92
   1400455e5:	and    al,0x93
   1400455e7:	and    al,0x94
   1400455e9:	and    al,0x95
   1400455eb:	and    al,0x96
   1400455ed:	and    al,0x97
   1400455ef:	and    al,0x98
   1400455f1:	and    al,0x99
   1400455f3:	and    al,0x9a
   1400455f5:	and    al,0x9b
   1400455f7:	and    al,0x9c
   1400455f9:	and    al,0x9d
   1400455fb:	and    al,0x9e
   1400455fd:	and    al,0x9f
   1400455ff:	and    al,0xa0
   140045601:	and    al,0xa1
   140045603:	and    al,0xa2
   140045605:	and    al,0xa3
   140045607:	and    al,0xa4
   140045609:	and    al,0xa5
   14004560b:	and    al,0xa6
   14004560d:	and    al,0xa7
   14004560f:	and    al,0xa8
   140045611:	and    al,0xa9
   140045613:	and    al,0xaa
   140045615:	and    al,0xab
   140045617:	and    al,0xac
   140045619:	and    al,0xad
   14004561b:	and    al,0xae
   14004561d:	and    al,0xaf
   14004561f:	and    al,0xb0
   140045621:	and    al,0xb1
   140045623:	and    al,0xb2
   140045625:	and    al,0xb3
   140045627:	and    al,0xb4
   140045629:	and    al,0xb5
   14004562b:	and    al,0xd0
   14004562d:	and    al,0xd1
   14004562f:	and    al,0xd2
   140045631:	and    al,0xd3
   140045633:	and    al,0xd4
   140045635:	and    al,0xd5
   140045637:	and    al,0xd6
   140045639:	and    al,0xd7
   14004563b:	and    al,0xd8
   14004563d:	and    al,0xd9
   14004563f:	and    al,0xda
   140045641:	and    al,0xdb
   140045643:	and    al,0xdc
   140045645:	and    al,0xdd
   140045647:	and    al,0xde
   140045649:	and    al,0xdf
   14004564b:	and    al,0xe0
   14004564d:	and    al,0xe1
   14004564f:	and    al,0xe2
   140045651:	and    al,0xe3
   140045653:	and    al,0xe4
   140045655:	and    al,0xe5
   140045657:	and    al,0xe6
   140045659:	and    al,0xe7
   14004565b:	and    al,0xe8
   14004565d:	and    al,0xe9
   14004565f:	and    al,0xd0
   140045661:	and    al,0xd1
   140045663:	and    al,0xd2
   140045665:	and    al,0xd3
   140045667:	and    al,0xd4
   140045669:	and    al,0xd5
   14004566b:	and    al,0xd6
   14004566d:	and    al,0xd7
   14004566f:	and    al,0xd8
   140045671:	and    al,0xd9
   140045673:	and    al,0xda
   140045675:	and    al,0xdb
   140045677:	and    al,0xdc
   140045679:	and    al,0xdd
   14004567b:	and    al,0xde
   14004567d:	and    al,0xdf
   14004567f:	and    al,0xe0
   140045681:	and    al,0xe1
   140045683:	and    al,0xe2
   140045685:	and    al,0xe3
   140045687:	and    al,0xe4
   140045689:	and    al,0xe5
   14004568b:	and    al,0xe6
   14004568d:	and    al,0xe7
   14004568f:	and    al,0xe8
   140045691:	and    al,0xe9
   140045693:	and    al,0xea
   140045695:	and    al,0xeb
   140045697:	and    al,0xec
   140045699:	and    al,0xed
   14004569b:	and    al,0xee
   14004569d:	and    al,0xef
   14004569f:	and    al,0xf0
   1400456a1:	and    al,0xf1
   1400456a3:	and    al,0xf2
   1400456a5:	and    al,0xf3
   1400456a7:	and    al,0xf4
   1400456a9:	and    al,0xf5
   1400456ab:	and    al,0xf6
   1400456ad:	and    al,0xf7
   1400456af:	and    al,0xf8
   1400456b1:	and    al,0xf9
   1400456b3:	and    al,0xfa
   1400456b5:	and    al,0xfb
   1400456b7:	and    al,0xfc
   1400456b9:	and    al,0xfd
   1400456bb:	and    al,0xfe
   1400456bd:	and    al,0xff
   1400456bf:	and    al,0x30
   1400456c1:	sub    al,0x31
   1400456c3:	sub    al,0x32
   1400456c5:	sub    al,0x33
   1400456c7:	sub    al,0x34
   1400456c9:	sub    al,0x35
   1400456cb:	sub    al,0x36
   1400456cd:	sub    al,0x37
   1400456cf:	sub    al,0x38
   1400456d1:	sub    al,0x39
   1400456d3:	sub    al,0x3a
   1400456d5:	sub    al,0x3b
   1400456d7:	sub    al,0x3c
   1400456d9:	sub    al,0x3d
   1400456db:	sub    al,0x3e
   1400456dd:	sub    al,0x3f
   1400456df:	sub    al,0x40
   1400456e1:	sub    al,0x41
   1400456e3:	sub    al,0x42
   1400456e5:	sub    al,0x43
   1400456e7:	sub    al,0x44
   1400456e9:	sub    al,0x45
   1400456eb:	sub    al,0x46
   1400456ed:	sub    al,0x47
   1400456ef:	sub    al,0x48
   1400456f1:	sub    al,0x49
   1400456f3:	sub    al,0x4a
   1400456f5:	sub    al,0x4b
   1400456f7:	sub    al,0x4c
   1400456f9:	sub    al,0x4d
   1400456fb:	sub    al,0x4e
   1400456fd:	sub    al,0x4f
   1400456ff:	sub    al,0x50
   140045701:	sub    al,0x51
   140045703:	sub    al,0x52
   140045705:	sub    al,0x53
   140045707:	sub    al,0x54
   140045709:	sub    al,0x55
   14004570b:	sub    al,0x56
   14004570d:	sub    al,0x57
   14004570f:	sub    al,0x58
   140045711:	sub    al,0x59
   140045713:	sub    al,0x5a
   140045715:	sub    al,0x5b
   140045717:	sub    al,0x5c
   140045719:	sub    al,0x5d
   14004571b:	sub    al,0x5e
   14004571d:	sub    al,0x2f
   14004571f:	sub    al,0x30
   140045721:	sub    al,0x31
   140045723:	sub    al,0x32
   140045725:	sub    al,0x33
   140045727:	sub    al,0x34
   140045729:	sub    al,0x35
   14004572b:	sub    al,0x36
   14004572d:	sub    al,0x37
   14004572f:	sub    al,0x38
   140045731:	sub    al,0x39
   140045733:	sub    al,0x3a
   140045735:	sub    al,0x3b
   140045737:	sub    al,0x3c
   140045739:	sub    al,0x3d
   14004573b:	sub    al,0x3e
   14004573d:	sub    al,0x3f
   14004573f:	sub    al,0x40
   140045741:	sub    al,0x41
   140045743:	sub    al,0x42
   140045745:	sub    al,0x43
   140045747:	sub    al,0x44
   140045749:	sub    al,0x45
   14004574b:	sub    al,0x46
   14004574d:	sub    al,0x47
   14004574f:	sub    al,0x48
   140045751:	sub    al,0x49
   140045753:	sub    al,0x4a
   140045755:	sub    al,0x4b
   140045757:	sub    al,0x4c
   140045759:	sub    al,0x4d
   14004575b:	sub    al,0x4e
   14004575d:	sub    al,0x4f
   14004575f:	sub    al,0x50
   140045761:	sub    al,0x51
   140045763:	sub    al,0x52
   140045765:	sub    al,0x53
   140045767:	sub    al,0x54
   140045769:	sub    al,0x55
   14004576b:	sub    al,0x56
   14004576d:	sub    al,0x57
   14004576f:	sub    al,0x58
   140045771:	sub    al,0x59
   140045773:	sub    al,0x5a
   140045775:	sub    al,0x5b
   140045777:	sub    al,0x5c
   140045779:	sub    al,0x5d
   14004577b:	sub    al,0x5e
   14004577d:	sub    al,0x5f
   14004577f:	sub    al,0x61
   140045781:	sub    al,0x61
   140045783:	sub    al,0x6b
   140045785:	add    bh,BYTE PTR [rbp+0x1d]
   140045788:	jge    0x14004578c
   14004578a:	gs sub al,0x66
   14004578d:	sub    al,0x68
   14004578f:	sub    al,0x68
   140045791:	sub    al,0x6a
   140045793:	sub    al,0x6a
   140045795:	sub    al,0x6c
   140045797:	sub    al,0x6c
   140045799:	sub    al,0x6d
   14004579b:	sub    al,0x6e
   14004579d:	sub    al,0x6f
   14004579f:	sub    al,0x70
   1400457a1:	sub    al,0x71
   1400457a3:	sub    al,0x72
   1400457a5:	sub    al,0x73
   1400457a7:	sub    al,0x74
   1400457a9:	sub    al,0x76
   1400457ab:	sub    al,0x76
   1400457ad:	sub    al,0x77
   1400457af:	sub    al,0x78
   1400457b1:	sub    al,0x79
   1400457b3:	sub    al,0x7a
   1400457b5:	sub    al,0x7b
   1400457b7:	sub    al,0x7c
   1400457b9:	sub    al,0x7d
   1400457bb:	sub    al,0x7e
   1400457bd:	sub    al,0x7f
   1400457bf:	sub    al,0x81
   1400457c1:	sub    al,0x81
   1400457c3:	sub    al,0x83
   1400457c5:	sub    al,0x83
   1400457c7:	sub    al,0x85
   1400457c9:	sub    al,0x85
   1400457cb:	sub    al,0x87
   1400457cd:	sub    al,0x87
   1400457cf:	sub    al,0x89
   1400457d1:	sub    al,0x89
   1400457d3:	sub    al,0x8b
   1400457d5:	sub    al,0x8b
   1400457d7:	sub    al,0x8d
   1400457d9:	sub    al,0x8d
   1400457db:	sub    al,0x8f
   1400457dd:	sub    al,0x8f
   1400457df:	sub    al,0x91
   1400457e1:	sub    al,0x91
   1400457e3:	sub    al,0x93
   1400457e5:	sub    al,0x93
   1400457e7:	sub    al,0x95
   1400457e9:	sub    al,0x95
   1400457eb:	sub    al,0x97
   1400457ed:	sub    al,0x97
   1400457ef:	sub    al,0x99
   1400457f1:	sub    al,0x99
   1400457f3:	sub    al,0x9b
   1400457f5:	sub    al,0x9b
   1400457f7:	sub    al,0x9d
   1400457f9:	sub    al,0x9d
   1400457fb:	sub    al,0x9f
   1400457fd:	sub    al,0x9f
   1400457ff:	sub    al,0xa1
   140045801:	sub    al,0xa1
   140045803:	sub    al,0xa3
   140045805:	sub    al,0xa3
   140045807:	sub    al,0xa5
   140045809:	sub    al,0xa5
   14004580b:	sub    al,0xa7
   14004580d:	sub    al,0xa7
   14004580f:	sub    al,0xa9
   140045811:	sub    al,0xa9
   140045813:	sub    al,0xab
   140045815:	sub    al,0xab
   140045817:	sub    al,0xad
   140045819:	sub    al,0xad
   14004581b:	sub    al,0xaf
   14004581d:	sub    al,0xaf
   14004581f:	sub    al,0xb1
   140045821:	sub    al,0xb1
   140045823:	sub    al,0xb3
   140045825:	sub    al,0xb3
   140045827:	sub    al,0xb5
   140045829:	sub    al,0xb5
   14004582b:	sub    al,0xb7
   14004582d:	sub    al,0xb7
   14004582f:	sub    al,0xb9
   140045831:	sub    al,0xb9
   140045833:	sub    al,0xbb
   140045835:	sub    al,0xbb
   140045837:	sub    al,0xbd
   140045839:	sub    al,0xbd
   14004583b:	sub    al,0xbf
   14004583d:	sub    al,0xbf
   14004583f:	sub    al,0xc1
   140045841:	sub    al,0xc1
   140045843:	sub    al,0xc3
   140045845:	sub    al,0xc3
   140045847:	sub    al,0xc5
   140045849:	sub    al,0xc5
   14004584b:	sub    al,0xc7
   14004584d:	sub    al,0xc7
   14004584f:	sub    al,0xc9
   140045851:	sub    al,0xc9
   140045853:	sub    al,0xcb
   140045855:	sub    al,0xcb
   140045857:	sub    al,0xcd
   140045859:	sub    al,0xcd
   14004585b:	sub    al,0xcf
   14004585d:	sub    al,0xcf
   14004585f:	sub    al,0xd1
   140045861:	sub    al,0xd1
   140045863:	sub    al,0xd3
   140045865:	sub    al,0xd3
   140045867:	sub    al,0xd5
   140045869:	sub    al,0xd5
   14004586b:	sub    al,0xd7
   14004586d:	sub    al,0xd7
   14004586f:	sub    al,0xd9
   140045871:	sub    al,0xd9
   140045873:	sub    al,0xdb
   140045875:	sub    al,0xdb
   140045877:	sub    al,0xdd
   140045879:	sub    al,0xdd
   14004587b:	sub    al,0xdf
   14004587d:	sub    al,0xdf
   14004587f:	sub    al,0xe1
   140045881:	sub    al,0xe1
   140045883:	sub    al,0xe3
   140045885:	sub    al,0xe3
   140045887:	sub    al,0xe4
   140045889:	sub    al,0xe5
   14004588b:	sub    al,0xe6
   14004588d:	sub    al,0xe7
   14004588f:	sub    al,0xe8
   140045891:	sub    al,0xe9
   140045893:	sub    al,0xea
   140045895:	sub    al,0xeb
   140045897:	sub    al,0xec
   140045899:	sub    al,0xed
   14004589b:	sub    al,0xee
   14004589d:	sub    al,0xef
   14004589f:	sub    al,0xf0
   1400458a1:	sub    al,0xf1
   1400458a3:	sub    al,0xf2
   1400458a5:	sub    al,0xf3
   1400458a7:	sub    al,0xf4
   1400458a9:	sub    al,0xf5
   1400458ab:	sub    al,0xf6
   1400458ad:	sub    al,0xf7
   1400458af:	sub    al,0xf8
   1400458b1:	sub    al,0xf9
   1400458b3:	sub    al,0xfa
   1400458b5:	sub    al,0xfb
   1400458b7:	sub    al,0xfc
   1400458b9:	sub    al,0xfd
   1400458bb:	sub    al,0xfe
   1400458bd:	sub    al,0xff
   1400458bf:	sub    al,0x0
   1400458c1:	inc    DWORD PTR [rcx]
   1400458c3:	inc    DWORD PTR [rdx]
   1400458c5:	inc    DWORD PTR [rbx]
   1400458c7:	inc    DWORD PTR [rdi+rdi*8]
   1400458ca:	add    eax,0x7ff06ff
   1400458cf:	dec    DWORD PTR [rax]
   1400458d1:	dec    DWORD PTR [rcx]
   1400458d3:	dec    DWORD PTR [rdx]
   1400458d5:	dec    DWORD PTR [rbx]
   1400458d7:	dec    DWORD PTR [rdi+rdi*8]
   1400458da:	or     eax,0xfff0eff
   1400458df:	call   QWORD PTR [rax]
   1400458e1:	call   QWORD PTR [rcx]
   1400458e3:	call   QWORD PTR [rdx]
   1400458e5:	call   QWORD PTR [rbx]
   1400458e7:	call   QWORD PTR [rdi+rdi*8]
   1400458ea:	adc    eax,0x17ff16ff
   1400458ef:	call   FWORD PTR [rax]
   1400458f1:	call   FWORD PTR [rcx]
   1400458f3:	call   FWORD PTR [rdx]
   1400458f5:	call   FWORD PTR [rbx]
   1400458f7:	call   FWORD PTR [rdi+rdi*8]
   1400458fa:	sbb    eax,0x1fff1eff
   1400458ff:	jmp    QWORD PTR [rax]
   140045901:	inc    DWORD PTR [rcx-0x1]
   140045904:	rex.X inc DWORD PTR [rbx-0x1]
   140045908:	rex.R inc DWORD PTR [rbp-0x1]
   14004590c:	rex.RX inc DWORD PTR [rdi-0x1]
   140045910:	dec    QWORD PTR [rcx-0x1]
   140045914:	rex.WX dec QWORD PTR [rbx-0x1]
   140045918:	rex.WR dec QWORD PTR [rbp-0x1]
   14004591c:	rex.WRX dec QWORD PTR [rdi-0x1]
   140045920:	push   rax
   140045921:	call   QWORD PTR [rcx-0x1]
   140045924:	push   rdx
   140045925:	call   QWORD PTR [rbx-0x1]
   140045928:	push   rsp
   140045929:	call   QWORD PTR [rbp-0x1]
   14004592c:	push   rsi
   14004592d:	call   QWORD PTR [rdi-0x1]
   140045930:	pop    rax
   140045931:	call   FWORD PTR [rcx-0x1]
   140045934:	pop    rdx
   140045935:	(bad)  
   140045936:	cmp    edi,edi
   140045938:	cmp    al,0xff
   14004593a:	cmp    eax,0x3fff3eff
   14004593f:	inc    DWORD PTR [rax-0x1]
   140045942:	inc    DWORD PTR [r10-0x1]
   140045946:	inc    DWORD PTR [r15+r15*8+0x45]
   14004594b:	inc    DWORD PTR [rsi-0x1]
   14004594e:	rex.RXB dec DWORD PTR [r8-0x1]
   140045952:	dec    QWORD PTR [r10-0x1]
   140045956:	dec    QWORD PTR [r15+r15*8+0x4d]
   14004595b:	dec    DWORD PTR [rsi-0x1]
   14004595e:	rex.WRXB call QWORD PTR [r8-0x1]
   140045962:	push   rcx
   140045963:	call   QWORD PTR [rdx-0x1]
   140045966:	push   rbx
   140045967:	call   QWORD PTR [rdi+rdi*8+0x55]
   14004596b:	call   QWORD PTR [rsi-0x1]
   14004596e:	push   rdi
   14004596f:	call   FWORD PTR [rax-0x1]
   140045972:	pop    rcx
   140045973:	call   FWORD PTR [rdx-0x1]
   140045976:	pop    rbx
   140045977:	call   FWORD PTR [rdi+rdi*8+0x5d]
   14004597b:	call   FWORD PTR [rsi-0x1]
   14004597e:	pop    rdi
   14004597f:	jmp    QWORD PTR [rax-0x1]
   140045982:	(bad)  
   140045983:	jmp    QWORD PTR [rdx-0x1]
   140045986:	movsxd edi,edi
   140045988:	jmp    QWORD PTR fs:[rbp-0x1]
   14004598c:	jmp    WORD PTR [rdi-0x1]
   140045990:	push   0x6aff69ff
   140045995:	jmp    FWORD PTR [rbx-0x1]
   140045998:	ins    BYTE PTR es:[rdi],dx
   140045999:	jmp    FWORD PTR [rbp-0x1]
   14004599c:	outs   dx,BYTE PTR ds:[rsi]
   14004599d:	jmp    FWORD PTR [rdi-0x1]
   1400459a0:	jo     0x1400459a1
   1400459a2:	jno    0x1400459a3
   1400459a4:	jb     0x1400459a5
   1400459a6:	jae    0x1400459a7
   1400459a8:	je     0x1400459a9
   1400459aa:	jne    0x1400459ab
   1400459ac:	jbe    0x1400459ad
   1400459ae:	ja     0x1400459af
   1400459b0:	js     0x1400459b1
   1400459b2:	jns    0x1400459b3
   1400459b4:	jp     0x1400459b5
   1400459b6:	jnp    0x1400459b7
   1400459b8:	jl     0x1400459b9
   1400459ba:	jge    0x1400459bb
   1400459bc:	jle    0x1400459bd
   1400459be:	jg     0x1400459bf
   1400459c0:	cmp    bh,0x81
   1400459c3:	inc    DWORD PTR [rdx-0x7b007c01]
   1400459c9:	inc    DWORD PTR [rbp-0x78007901]
   1400459cf:	dec    DWORD PTR [rax-0x75007601]
   1400459d5:	dec    DWORD PTR [rbx-0x72007301]
   1400459db:	dec    DWORD PTR [rsi-0x6f007001]
   1400459e1:	call   QWORD PTR [rcx-0x6c006d01]
   1400459e7:	call   QWORD PTR [rdi+rdi*8-0x69006b]
   1400459ee:	xchg   edi,eax
   1400459ef:	call   FWORD PTR [rax-0x65006601]
   1400459f5:	call   FWORD PTR [rbx-0x62006301]
   1400459fb:	call   FWORD PTR [rsi-0x5f006001]
   140045a01:	jmp    QWORD PTR [rcx-0x5c005d01]
   140045a07:	jmp    QWORD PTR [rdi+rdi*8-0x59005b]
   140045a0e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140045a0f:	jmp    FWORD PTR [rax-0x55005601]
   140045a15:	jmp    FWORD PTR [rbx-0x52005301]
   140045a1b:	jmp    FWORD PTR [rsi-0x4f005001]
   140045a21:	push   QWORD PTR [rcx-0x4c004d01]
   140045a27:	push   QWORD PTR [rdi+rdi*8-0x49004b]
   140045a2e:	mov    bh,0xff
   140045a30:	mov    eax,0xbaffb9ff
   140045a35:	(bad)  
   140045a36:	mov    ebx,0xbdffbcff
   140045a3b:	(bad)  
   140045a3c:	mov    esi,0xc0ffbfff
   140045a41:	inc    ecx
   140045a43:	inc    edx
   140045a45:	inc    ebx
   140045a47:	inc    esp
   140045a49:	inc    ebp
   140045a4b:	inc    esi
   140045a4d:	inc    edi
   140045a4f:	dec    eax
   140045a51:	dec    ecx
   140045a53:	dec    edx
   140045a55:	dec    ebx
   140045a57:	dec    esp
   140045a59:	dec    ebp
   140045a5b:	dec    esi
   140045a5d:	dec    edi
   140045a5f:	call   rax
   140045a61:	call   rcx
   140045a63:	call   rdx
   140045a65:	call   rbx
   140045a67:	call   rsp
   140045a69:	call   rbp
   140045a6b:	call   rsi
   140045a6d:	call   rdi
   140045a6f:	(bad)  
   140045a70:	fdivr  st,st(7)
   140045a72:	fcos   
   140045a74:	(bad)  
   140045a76:	(bad)  
   140045a78:	fdiv   st(7),st
   140045a7a:	(bad)  
   140045a7c:	fdivp  st(7),st
   140045a7e:	(bad)  
   140045a80:	loopne 0x140045a81
   140045a82:	loope  0x140045a83
   140045a84:	loop   0x140045a85
   140045a86:	jrcxz  0x140045a87
   140045a88:	in     al,0xff
   140045a8a:	in     eax,0xff
   140045a8c:	out    0xff,al
   140045a8e:	out    0xff,eax
   140045a90:	call   0x12b044494
   140045a95:	(bad)  
   140045a96:	jmp    0x140045a97
   140045a98:	in     al,dx
   140045a99:	(bad)  
   140045a9a:	in     eax,dx
   140045a9b:	(bad)  
   140045a9c:	out    dx,al
   140045a9d:	(bad)  
   140045a9e:	out    dx,eax
   140045a9f:	push   rax
   140045aa1:	push   rcx
   140045aa3:	push   rdx
   140045aa5:	push   rbx
   140045aa7:	push   rsp
   140045aa9:	push   rbp
   140045aab:	push   rsi
   140045aad:	push   rdi
   140045aaf:	(bad)  
   140045ab0:	clc    
   140045ab1:	(bad)  
   140045ab2:	stc    
   140045ab3:	(bad)  
   140045ab4:	cli    
   140045ab5:	(bad)  
   140045ab6:	sti    
   140045ab7:	(bad)  
   140045ab8:	cld    
   140045ab9:	(bad)  
   140045aba:	std    
   140045abb:	(bad)  
   140045abc:	(bad)  
   140045abd:	(bad)  
   140045abe:	(bad)  
   140045abf:	dec    DWORD PTR [rip+0x1f000000]        # 0x15f045ac5
   140045ac5:	add    BYTE PTR [rax],al
   140045ac7:	add    BYTE PTR [rip+0x7f000000],bh        # 0x1bf045acd
   140045acd:	add    BYTE PTR [rax],al
   140045acf:	add    bl,bh
   140045ad1:	add    BYTE PTR [rax],al
   140045ad3:	add    ch,bh
   140045ad5:	add    DWORD PTR [rax],eax
   140045ad7:	add    ch,bh
   140045ad9:	add    eax,DWORD PTR [rax]
   140045adb:	add    bh,dh
   140045add:	(bad)  
   140045ade:	add    BYTE PTR [rax],al
   140045ae0:	std    
   140045ae1:	sldt   WORD PTR [rax]
   140045ae4:	call   FWORD PTR [rdi]
   140045ae6:	add    BYTE PTR [rax],al
   140045ae8:	std    
   140045ae9:	(bad)  
   140045aea:	add    BYTE PTR [rax],al
   140045aec:	in     eax,dx
   140045aed:	jg     0x140045aef
   140045aef:	add    cl,dh
   140045af1:	inc    DWORD PTR [rax]
   140045af3:	add    bh,bh
   140045af5:	inc    DWORD PTR [rcx]
   140045af7:	add    bl,bh
   140045af9:	inc    DWORD PTR [rbx]
   140045afb:	add    bh,bh
   140045afd:	inc    DWORD PTR [rdi]
   140045aff:	add    ch,bh
   140045b01:	dec    DWORD PTR [rdi]
   140045b03:	add    bh,dh
   140045b05:	call   FWORD PTR [rdi]
   140045b07:	add    ch,bh
   140045b09:	(bad)  
   140045b0a:	(bad)  
   140045b0b:	add    cl,dh
   140045b0d:	(bad)  
   140045b0e:	jg     0x140045b10
   140045b10:	std    
   140045b11:	(bad)  
   140045b12:	inc    DWORD PTR [rax]
   140045b14:	fcos   
   140045b16:	inc    DWORD PTR [rcx]
   140045b18:	sti    
   140045b19:	(bad)  
   140045b1a:	inc    DWORD PTR [rbx]
   140045b1c:	fcos   
   140045b1e:	inc    DWORD PTR [rdi]
   140045b20:	(bad)  
   140045b21:	(bad)  
   140045b22:	dec    DWORD PTR [rdi]
   140045b24:	std    
   140045b25:	(bad)  
   140045b26:	call   FWORD PTR [rdi]
   140045b28:	(bad)  
   140045b2a:	(bad)  
   140045b2b:	(bad)  
   140045b2c:	(bad)  
   140045b2d:	(bad)  
   140045b2e:	(bad)  
   140045b2f:	jg     0x140045b31
   140045b31:	add    BYTE PTR [rax],al
   140045b33:	add    BYTE PTR [rax],al
   140045b35:	add    BYTE PTR [rax],al
   140045b37:	(bad)  
   140045b38:	int    0xcc
   140045b3a:	int3   
   140045b3b:	cmp    eax,0x3f000000
   140045b40:	add    BYTE PTR [rax],al
   140045b42:	add    BYTE PTR [rax],al
   140045b44:	add    BYTE PTR [rax],al
   140045b46:	cmp    BYTE PTR [rdi],0x0
	...
   140045b5d:	add    BYTE PTR [rax],al
   140045b5f:	add    BYTE PTR [rax+0xe],dl
   140045b62:	add    DWORD PTR [rax+0x1],eax
   140045b65:	add    BYTE PTR [rax],al
   140045b67:	add    BYTE PTR [rax+0xe],al
   140045b6a:	add    DWORD PTR [rax+0x1],eax
   140045b6d:	add    BYTE PTR [rax],al
   140045b6f:	add    BYTE PTR [rax],dh
   140045b71:	sgdt   [rax+0x1]
   140045b75:	add    BYTE PTR [rax],al
   140045b77:	add    BYTE PTR [rax+0xe],al
   140045b7a:	add    DWORD PTR [rax+0x1],eax
   140045b7d:	add    BYTE PTR [rax],al
   140045b7f:	add    BYTE PTR [rbp+0x70],dh
   140045b82:	jb     0x140045bfa
   140045b84:	pop    rdi
   140045b85:	ins    DWORD PTR es:[rdi],dx
   140045b86:	(bad)  
   140045b87:	jo     0x140045bcf
   140045b89:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x70614d20
   140045b91:	push   rsi
   140045b92:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140045b99:	ins    BYTE PTR es:[rdi],dx
   140045b9a:	and    BYTE PTR gs:[rsi+0x61],ah
   140045b9e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
   140045ba6:	and    BYTE PTR [rip+0x25282073],ah        # 0x1652c7c1f
   140045bac:	sub    DWORD PTR fs:[rdx],ecx
   140045baf:	add    BYTE PTR [rbp+0x70],dh
   140045bb2:	jb     0x140045c2a
   140045bb4:	pop    rdi
   140045bb5:	ins    DWORD PTR es:[rdi],dx
   140045bb6:	(bad)  
   140045bb7:	jo     0x140045bff
   140045bb9:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x65724320
   140045bc1:	(bad)  
   140045bc2:	je     0x140045c29
   140045bc4:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140045bcd:	outs   dx,BYTE PTR ds:[rsi]
   140045bce:	and    BYTE PTR [esi+0x61],ah
   140045bd2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
   140045bda:	and    BYTE PTR [rip+0x25282073],ah        # 0x1652c7c53
   140045be0:	sub    DWORD PTR fs:[rdx],ecx
   140045be3:	add    BYTE PTR [rax],al
   140045be5:	add    BYTE PTR [rax],al
   140045be7:	add    BYTE PTR [rbp+0x70],dh
   140045bea:	jb     0x140045c62
   140045bec:	pop    rdi
   140045bed:	ins    DWORD PTR es:[rdi],dx
   140045bee:	(bad)  
   140045bef:	jo     0x140045c37
   140045bf1:	imul   ebp,DWORD PTR [rbp+riz*2+0x3a],0x65724320
   140045bf9:	(bad)  
   140045bfa:	je     0x140045c61
   140045bfc:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x69616620
   140045c05:	ins    BYTE PTR es:[rdi],dx
   140045c06:	gs and BYTE PTR fs:[rsi+0x6f],ah
   140045c0b:	jb     0x140045c2d
   140045c0d:	and    eax,0x25282073
   140045c12:	sub    DWORD PTR fs:[rdx],ecx
   140045c15:	add    BYTE PTR [rax],al
   140045c17:	add    BYTE PTR [rbx+0x4f],dl
   140045c1a:	rex.RX push rsp
   140045c1c:	push   rdi
   140045c1d:	push   r10
   140045c1f:	rex.RB pop r12
   140045c21:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140045c29:	je     0x140045c87
   140045c2b:	push   rdi
   140045c2c:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   140045c33:	rex.WRX push rsp
   140045c35:	pop    rsp
   140045c36:	rex.XB jne 0x140045cab
   140045c39:	jb     0x140045ca0
   140045c3b:	outs   dx,BYTE PTR ds:[rsi]
   140045c3c:	je     0x140045c94
   140045c3e:	gs jb  0x140045cb4
   140045c41:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d69545c
   140045c48:	and    BYTE PTR gs:[rdx+0x6f],bl
   140045c4c:	outs   dx,BYTE PTR ds:[rsi]
   140045c4d:	gs jae 0x140045cac
	...
   140045c58:	push   rbx
   140045c59:	rex.WRXB
   140045c5a:	rex.RX push rsp
   140045c5c:	push   rdi
   140045c5d:	push   r10
   140045c5f:	rex.RB pop r12
   140045c61:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140045c69:	je     0x140045cc7
   140045c6b:	push   rdi
   140045c6c:	imul   ebp,DWORD PTR [rsi+0x64],0x5c73776f
   140045c73:	rex.XB jne 0x140045ce8
   140045c76:	jb     0x140045cdd
   140045c78:	outs   dx,BYTE PTR ds:[rsi]
   140045c79:	je     0x140045cd1
   140045c7b:	gs jb  0x140045cf1
   140045c7e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d69545c
   140045c85:	and    BYTE PTR gs:[rdx+0x6f],bl
   140045c89:	outs   dx,BYTE PTR ds:[rsi]
   140045c8a:	gs jae 0x140045ce9
   140045c8d:	add    BYTE PTR [rax],al
   140045c8f:	add    BYTE PTR [rbx+0x4f],dl
   140045c92:	rex.RX push rsp
   140045c94:	push   rdi
   140045c95:	push   r10
   140045c97:	rex.RB pop r12
   140045c99:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140045ca1:	je     0x140045cff
   140045ca3:	push   rdi
   140045ca4:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   140045cab:	rex.WRX push rsp
   140045cad:	pop    rsp
   140045cae:	rex.XB jne 0x140045d23
   140045cb1:	jb     0x140045d18
   140045cb3:	outs   dx,BYTE PTR ds:[rsi]
   140045cb4:	je     0x140045d0c
   140045cb6:	gs jb  0x140045d2c
   140045cb9:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d69545c
   140045cc0:	and    BYTE PTR gs:[rdx+0x6f],bl
   140045cc4:	outs   dx,BYTE PTR ds:[rsi]
   140045cc5:	gs jae 0x140045d24
   140045cc8:	rex.RXB
   140045cc9:	rex.WRB push r12
   140045ccb:	add    BYTE PTR [rax],al
   140045ccd:	add    BYTE PTR [rax],al
   140045ccf:	add    BYTE PTR [rbx+0x4f],dl
   140045cd2:	rex.RX push rsp
   140045cd4:	push   rdi
   140045cd5:	push   r10
   140045cd7:	rex.RB pop r12
   140045cd9:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140045ce1:	je     0x140045d3f
   140045ce3:	push   rdi
   140045ce4:	imul   ebp,DWORD PTR [rsi+0x64],0x5c73776f
   140045ceb:	rex.XB jne 0x140045d60
   140045cee:	jb     0x140045d55
   140045cf0:	outs   dx,BYTE PTR ds:[rsi]
   140045cf1:	je     0x140045d49
   140045cf3:	gs jb  0x140045d69
   140045cf6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d69545c
   140045cfd:	and    BYTE PTR gs:[rdx+0x6f],bl
   140045d01:	outs   dx,BYTE PTR ds:[rsi]
   140045d02:	gs jae 0x140045d05
   140045d05:	add    BYTE PTR [rax],al
   140045d07:	add    BYTE PTR [rbx+0x59],dl
   140045d0a:	push   rbx
   140045d0b:	push   rsp
   140045d0c:	rex.RB
   140045d0d:	rex.WRB pop r12
   140045d0f:	rex.XB jne 0x140045d84
   140045d12:	jb     0x140045d79
   140045d14:	outs   dx,BYTE PTR ds:[rsi]
   140045d15:	je     0x140045d5a
   140045d17:	outs   dx,DWORD PTR ds:[rsi]
   140045d18:	outs   dx,BYTE PTR ds:[rsi]
   140045d19:	je     0x140045d8d
   140045d1b:	outs   dx,DWORD PTR ds:[rsi]
   140045d1c:	ins    BYTE PTR es:[rdi],dx
   140045d1d:	push   rbx
   140045d1e:	gs je  0x140045d7d
   140045d21:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140045d23:	outs   dx,BYTE PTR ds:[rsi]
   140045d24:	je     0x140045d98
   140045d26:	outs   dx,DWORD PTR ds:[rsi]
   140045d27:	ins    BYTE PTR es:[rdi],dx
   140045d28:	pop    rsp
   140045d29:	push   rsp
   140045d2a:	imul   ebp,DWORD PTR [rbp+0x65],0x656e6f5a
   140045d31:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140045d33:	outs   dx,WORD PTR ds:[rsi]
   140045d35:	jb     0x140045da4
   140045d37:	(bad)  
   140045d38:	je     0x140045da3
   140045d3a:	outs   dx,DWORD PTR ds:[rsi]
   140045d3b:	outs   dx,BYTE PTR ds:[rsi]
   140045d3c:	pop    rsp
   140045d3d:	add    BYTE PTR [rax],al
   140045d3f:	add    BYTE PTR [rbx+0x74],dl
   140045d42:	(bad)  
   140045d43:	outs   dx,BYTE PTR ds:[rsi]
   140045d44:	fs (bad) 
   140045d46:	jb     0x140045dac
   140045d48:	rex.WRX (bad) 
   140045d4a:	ins    DWORD PTR es:[rdi],dx
   140045d4b:	add    BYTE PTR gs:[rax],al
   140045d4e:	add    BYTE PTR [rax],al
   140045d50:	and    BYTE PTR [rbx+0x74],dl
   140045d53:	(bad)  
   140045d54:	outs   dx,BYTE PTR ds:[rsi]
   140045d55:	fs (bad) 
   140045d57:	jb     0x140045dbd
   140045d59:	and    BYTE PTR [rcx+rbp*2+0x6d],dl
   140045d5d:	add    BYTE PTR gs:[rax],al
   140045d60:	push   rsp
   140045d61:	pop    rdx
   140045d62:	rex.WB add BYTE PTR [r11+0x74],dl
   140045d66:	fs add al,dl
   140045d69:	pop    rsp
   140045d6a:	add    al,0x40
   140045d6c:	add    DWORD PTR [rax],eax
   140045d6e:	add    BYTE PTR [rax],al
   140045d70:	nop
   140045d71:	pop    rsp
   140045d72:	add    al,0x40
   140045d74:	add    DWORD PTR [rax],eax
   140045d76:	add    BYTE PTR [rax],al
   140045d78:	pop    rax
   140045d79:	pop    rsp
   140045d7a:	add    al,0x40
   140045d7c:	add    DWORD PTR [rax],eax
   140045d7e:	add    BYTE PTR [rax],al
   140045d80:	sbb    BYTE PTR [rsp+rax*1+0x40],bl
   140045d84:	add    DWORD PTR [rax],eax
   140045d86:	add    BYTE PTR [rax],al
   140045d88:	jp     0x140045dff
   140045d8a:	pop    rdi
   140045d8b:	pop    rdx
   140045d8c:	add    BYTE PTR [r8],al
   140045d8f:	add    BYTE PTR [rdx+0x75],bh
   140045d92:	add    BYTE PTR [rax],al
   140045d94:	add    BYTE PTR [rax],al
   140045d96:	add    BYTE PTR [rax],al
   140045d98:	jp     0x140045e02
   140045d9a:	pop    rdi
   140045d9b:	rex.XB
   140045d9c:	rex.WRX
   140045d9d:	rex movsxd ebp,DWORD PTR [rdi+0x6c]
   140045da1:	ins    BYTE PTR es:[rdi],dx
   140045da2:	(bad)  
   140045da3:	je     0x140045e0e
   140045da5:	outs   dx,DWORD PTR ds:[rsi]
   140045da6:	outs   dx,BYTE PTR ds:[rsi]
   140045da7:	cmp    eax,0x6f727473
   140045dac:	imul   esp,DWORD PTR [rbp+0x0],0x0
   140045db0:	jp     0x140045e1a
   140045db2:	pop    rdi
   140045db3:	rex.W (bad) 
   140045db5:	outs   dx,BYTE PTR ds:[rsi]
   140045db6:	jae    0x140045e17
   140045db8:	rex.XB
   140045db9:	rex.WRX
   140045dba:	rex movsxd ebp,DWORD PTR [rdi+0x6c]
   140045dbe:	ins    BYTE PTR es:[rdi],dx
   140045dbf:	(bad)  
   140045dc0:	je     0x140045e2b
   140045dc2:	outs   dx,DWORD PTR ds:[rsi]
   140045dc3:	outs   dx,BYTE PTR ds:[rsi]
   140045dc4:	cmp    eax,0x6f727473
   140045dc9:	imul   esp,DWORD PTR [rbp+0x0],0x0
   140045dcd:	add    BYTE PTR [rax],al
   140045dcf:	add    BYTE PTR [rdx+0x68],bh
   140045dd2:	pop    rdi
   140045dd3:	push   rsp
   140045dd4:	push   rdi
   140045dd5:	rex movsxd ebp,DWORD PTR [rdi+0x6c]
   140045dd9:	ins    BYTE PTR es:[rdi],dx
   140045dda:	(bad)  
   140045ddb:	je     0x140045e46
   140045ddd:	outs   dx,DWORD PTR ds:[rsi]
   140045dde:	outs   dx,BYTE PTR ds:[rsi]
   140045ddf:	cmp    eax,0x6f727473
   140045de4:	imul   esp,DWORD PTR [rbp+0x0],0x0
   140045de8:	jp     0x140045e52
   140045dea:	pop    rdi
   140045deb:	rex.W (bad) 
   140045ded:	outs   dx,BYTE PTR ds:[rsi]
   140045dee:	je     0x140045e4f
   140045df0:	push   rsp
   140045df1:	push   rdi
   140045df2:	rex movsxd ebp,DWORD PTR [rdi+0x6c]
   140045df6:	ins    BYTE PTR es:[rdi],dx
   140045df7:	(bad)  
   140045df8:	je     0x140045e63
   140045dfa:	outs   dx,DWORD PTR ds:[rsi]
   140045dfb:	outs   dx,BYTE PTR ds:[rsi]
   140045dfc:	cmp    eax,0x6f727473
   140045e01:	imul   esp,DWORD PTR [rbp+0x0],0x7a
   140045e05:	push   0x57545f
   140045e0a:	add    BYTE PTR [rax],al
   140045e0c:	add    BYTE PTR [rax],al
   140045e0e:	add    BYTE PTR [rax],al
   140045e10:	jp     0x140045e7a
   140045e12:	pop    rdi
   140045e13:	rex.W (bad) 
   140045e15:	outs   dx,BYTE PTR ds:[rsi]
   140045e16:	je     0x140045e18
   140045e18:	jp     0x140045e82
   140045e1a:	pop    rdi
   140045e1b:	rex.W (bad) 
   140045e1d:	outs   dx,BYTE PTR ds:[rsi]
   140045e1e:	je     0x140045e7f
   140045e20:	push   rsp
   140045e21:	push   rdi
   140045e22:	add    BYTE PTR [rax],al
   140045e24:	jp     0x140045e8e
   140045e26:	pop    rdi
   140045e27:	push   rbx
   140045e28:	rex.RXB add BYTE PTR [r8],r8b
   140045e2b:	add    BYTE PTR [rax],al
   140045e2d:	add    BYTE PTR [rax],al
   140045e2f:	add    BYTE PTR [rdx+0x68],bh
   140045e32:	pop    rdi
   140045e33:	rex.W (bad) 
   140045e35:	outs   dx,BYTE PTR ds:[rsi]
   140045e36:	jae    0x140045e97
   140045e38:	push   rbx
   140045e39:	rex.RXB add BYTE PTR [r8],r8b
   140045e3c:	jp     0x140045ea6
   140045e3e:	pop    rdi
   140045e3f:	rex.WRB
   140045e40:	rex.WRXB add BYTE PTR [r8],r8b
   140045e43:	add    BYTE PTR [rax],al
   140045e45:	add    BYTE PTR [rax],al
   140045e47:	add    BYTE PTR [rdx+0x68],bh
   140045e4a:	pop    rdi
   140045e4b:	rex.W (bad) 
   140045e4d:	outs   dx,BYTE PTR ds:[rsi]
   140045e4e:	je     0x140045eaf
   140045e50:	rex.WRB
   140045e51:	rex.WRXB add BYTE PTR [r8],r8b
   140045e54:	jp     0x140045ebe
   140045e56:	pop    rdi
   140045e57:	rex.W
   140045e58:	rex.WXB add BYTE PTR [r8],al
   140045e5b:	add    BYTE PTR [rax],al
   140045e5d:	add    BYTE PTR [rax],al
   140045e5f:	add    BYTE PTR [rdx+0x68],bh
   140045e62:	pop    rdi
   140045e63:	rex.W (bad) 
   140045e65:	outs   dx,BYTE PTR ds:[rsi]
   140045e66:	je     0x140045ec7
   140045e68:	rex.W
   140045e69:	rex.WXB add BYTE PTR [r8],al
   140045e6c:	add    BYTE PTR [rax],al
   140045e6e:	add    BYTE PTR [rax],al
   140045e70:	jp     0x140045eda
   140045e72:	pop    rdi
   140045e73:	rex.W (bad) 
   140045e75:	outs   dx,BYTE PTR ds:[rsi]
   140045e76:	jae    0x140045ed7
   140045e78:	rex.XB
   140045e79:	rex.WRX add BYTE PTR [rax],r8b
   140045e7c:	jp     0x140045ee6
   140045e7e:	pop    rdi
   140045e7f:	rex.XB
   140045e80:	rex.WRX add BYTE PTR [rax],r8b
   140045e83:	add    BYTE PTR [rdx+0x68],bh
   140045e86:	add    BYTE PTR [rax],al
   140045e88:	jp     0x140045ef2
   140045e8a:	pop    rdi
   140045e8b:	rex.W (bad) 
   140045e8d:	outs   dx,BYTE PTR ds:[rsi]
   140045e8e:	jae    0x140045e90
   140045e90:	jns    0x140045f01
   140045e92:	pop    rdi
   140045e93:	rex.WRX
   140045e94:	rex.RXB add BYTE PTR [r8],r8b
   140045e97:	add    BYTE PTR [rcx+0x6f],bh
   140045e9a:	add    BYTE PTR [rax],al
   140045e9c:	js     0x140045f06
   140045e9e:	pop    rdi
   140045e9f:	pop    rdx
   140045ea0:	add    BYTE PTR [r8],al
   140045ea3:	add    BYTE PTR [rax+0x68],bh
   140045ea6:	add    BYTE PTR [rax],al
   140045ea8:	ja     0x140045f19
   140045eaa:	pop    rdi
   140045eab:	push   rbx
   140045eac:	rex.WRX add BYTE PTR [rax],r8b
   140045eaf:	add    BYTE PTR [rdi+0x6f],dh
   140045eb2:	add    BYTE PTR [rax],al
   140045eb4:	push   0x64006273
   140045eb9:	jae    0x140045f1d
   140045ebb:	add    BYTE PTR [rbx+rsi*2+0x62],ah
   140045ebf:	pop    rdi
   140045ec0:	rex.R
   140045ec1:	add    BYTE PTR [r8],r8b
   140045ec4:	push   0x445f6273
   140045ec9:	add    BYTE PTR [r8],r8b
   140045ecc:	ja     0x140045f33
   140045ece:	outs   dx,BYTE PTR ds:[rsi]
   140045ecf:	pop    rdi
   140045ed0:	rex.R
   140045ed1:	add    BYTE PTR [r8],r8b
   140045ed4:	ja     0x140045f3b
   140045ed6:	outs   dx,BYTE PTR ds:[rsi]
   140045ed7:	add    BYTE PTR [rsi+0x69],dh
   140045eda:	pop    rdi
   140045edb:	push   rsi
   140045edc:	rex.WRX add BYTE PTR [rax],r8b
   140045edf:	add    BYTE PTR [rsi+0x69],dh
   140045ee2:	add    BYTE PTR [rax],al
   140045ee4:	jbe    0x140045f4b
   140045ee6:	pop    rdi
   140045ee7:	pop    rdx
   140045ee8:	add    BYTE PTR [r8],al
   140045eeb:	add    BYTE PTR [rsi+0x65],dh
   140045eee:	add    BYTE PTR [rax],al
   140045ef0:	jne    0x140045f6c
   140045ef2:	pop    rdi
   140045ef3:	rex.WR (bad) 
   140045ef5:	je     0x140045f65
   140045ef7:	add    BYTE PTR [rbp+0x7a],dh
   140045efa:	pop    rdi
   140045efb:	rex.WR (bad) 
   140045efd:	je     0x140045f6d
   140045eff:	pop    rdi
   140045f00:	push   rbp
   140045f01:	pop    rdx
   140045f02:	add    BYTE PTR [rax],al
   140045f04:	jne    0x140045f80
   140045f06:	pop    rdi
   140045f07:	push   rbp
   140045f08:	pop    rdx
   140045f09:	add    BYTE PTR [rax],al
   140045f0b:	add    BYTE PTR [rax],al
   140045f0d:	add    BYTE PTR [rax],al
   140045f0f:	add    BYTE PTR [rbp+0x7a],dh
   140045f12:	pop    rdi
   140045f13:	rex.XB jns 0x140045f88
   140045f16:	ins    BYTE PTR es:[rdi],dx
   140045f17:	add    BYTE PTR [rbp+0x7a],dh
   140045f1a:	pop    rdi
   140045f1b:	rex.XB jns 0x140045f90
   140045f1e:	ins    BYTE PTR es:[rdi],dx
   140045f1f:	pop    rdi
   140045f20:	push   rbp
   140045f21:	pop    rdx
   140045f22:	add    BYTE PTR [rax],al
   140045f24:	jne    0x140045fa0
   140045f26:	add    BYTE PTR [rax],al
   140045f28:	jne    0x140045f9c
   140045f2a:	pop    rdi
   140045f2b:	push   rax
   140045f2c:	rex.WXB add BYTE PTR [r8],al
   140045f2f:	add    BYTE PTR [rbp+0x72],dh
   140045f32:	pop    rdi
   140045f33:	rex.WB
   140045f34:	rex.WRX add BYTE PTR [rax],r8b
   140045f37:	add    BYTE PTR [rbp+0x72],dh
   140045f3a:	add    BYTE PTR [rax],al
   140045f3c:	jne    0x140045fa9
   140045f3e:	pop    rdi
   140045f3f:	push   rbp
   140045f40:	add    BYTE PTR [r8],al
   140045f43:	add    BYTE PTR [rbp+0x67],dh
   140045f46:	pop    rdi
   140045f47:	rex.XB
   140045f48:	rex.WRX add BYTE PTR [rax],r8b
   140045f4b:	add    BYTE PTR [rbp+0x67],dh
   140045f4e:	add    BYTE PTR [rax],al
   140045f50:	je     0x140045fcc
   140045f52:	ins    DWORD PTR es:[rdi],dx
   140045f53:	pop    rdi
   140045f54:	rex.WR (bad) 
   140045f56:	je     0x140045fc6
   140045f58:	pop    rdi
   140045f59:	rex.R pop rdx
   140045f5b:	add    BYTE PTR [rax],al
   140045f5d:	add    BYTE PTR [rax],al
   140045f5f:	add    BYTE PTR [rdx+rdi*2+0x6d],dh
   140045f63:	pop    rdi
   140045f64:	rex.WR (bad) 
   140045f66:	je     0x140045fd6
   140045f68:	add    BYTE PTR [rax],al
   140045f6a:	add    BYTE PTR [rax],al
   140045f6c:	je     0x140045fe8
   140045f6e:	ins    DWORD PTR es:[rdi],dx
   140045f6f:	add    BYTE PTR [rsp+rsi*2+0x5f],dh
   140045f73:	push   rdx
   140045f74:	push   rbp
   140045f75:	add    BYTE PTR [rax],al
   140045f77:	add    BYTE PTR [rsp+rsi*2+0x0],dh
   140045f7b:	add    BYTE PTR [rdx+rsi*2+0x5f],dh
   140045f7f:	push   rsp
   140045f80:	push   rdx
   140045f81:	add    BYTE PTR [rax],al
   140045f83:	add    BYTE PTR [rdx+rsi*2+0x0],dh
   140045f87:	add    BYTE PTR [rsi+rbp*2+0x5f],dh
   140045f8b:	rex.X push rdi
   140045f8d:	add    BYTE PTR [rax],al
   140045f8f:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   140045f93:	add    BYTE PTR [rbx+rbp*2+0x5f],dh
   140045f97:	push   rsp
   140045f98:	rex.WRB add BYTE PTR [r8],r8b
   140045f9b:	add    BYTE PTR [rbx+rbp*2+0x0],dh
   140045f9f:	add    BYTE PTR [rcx+rbp*2+0x5f],dh
   140045fa3:	rex.RB push r12
   140045fa5:	add    BYTE PTR [rax],al
   140045fa7:	add    BYTE PTR [rcx+rbp*2+0x5f],dh
   140045fab:	rex.RB push r10
   140045fad:	add    BYTE PTR [rax],al
   140045faf:	add    BYTE PTR [rcx+rbp*2+0x0],dh
   140045fb3:	add    BYTE PTR [rax+rbp*2+0x5f],dh
   140045fb7:	push   rsp
   140045fb8:	rex.W add BYTE PTR [rax],al
   140045fbb:	add    BYTE PTR [rax+rbp*2+0x0],dh
   140045fbf:	add    BYTE PTR [rdi+riz*2+0x5f],dh
   140045fc3:	rex.XB jns 0x140046038
   140045fc6:	ins    BYTE PTR es:[rdi],dx
   140045fc7:	pop    rdi
   140045fc8:	push   rsp
   140045fc9:	rex.WX add BYTE PTR [rax],al
   140045fcc:	add    BYTE PTR [rax],al
   140045fce:	add    BYTE PTR [rax],al
   140045fd0:	je     0x140046039
   140045fd2:	pop    rdi
   140045fd3:	rex.XB jns 0x140046048
   140045fd6:	ins    BYTE PTR es:[rdi],dx
   140045fd7:	add    BYTE PTR [rdi+riz*2+0x0],dh
   140045fdb:	add    BYTE PTR [rbp+riz*2+0x5f],dh
   140045fdf:	rex.WB
   140045fe0:	rex.WRX add BYTE PTR [rax],r8b
   140045fe3:	add    BYTE PTR [rbp+riz*2+0x0],dh
   140045fe7:	add    BYTE PTR [rcx+riz*2+0x5f],dh
   140045feb:	rex.WB
   140045fec:	rex.WRX add BYTE PTR [rax],r8b
   140045fef:	add    BYTE PTR [rcx+riz*2+0x0],dh
   140045ff3:	add    BYTE PTR [rbx+0x79],dh
   140045ff6:	jb     0x140046057
   140045ff8:	push   rbx
   140045ff9:	pop    rcx
   140045ffa:	add    BYTE PTR [rax],al
   140045ffc:	jae    0x140046077
   140045ffe:	jb     0x140046000
   140046000:	jae    0x140046079
   140046002:	pop    rdi
   140046003:	rex.WXB
   140046004:	add    BYTE PTR [r8],r8b
   140046007:	add    BYTE PTR [rbx+0x77],dh
   14004600a:	add    BYTE PTR [rax],al
   14004600c:	jae    0x140046084
   14004600e:	pop    rdi
   14004600f:	push   rbx
   140046010:	add    BYTE PTR [r8],r8b
   140046013:	add    BYTE PTR [rbx+0x76],dh
   140046016:	pop    rdi
   140046017:	rex.RX
   140046018:	rex.WB add BYTE PTR [r8],al
   14004601b:	add    BYTE PTR [rbx+0x76],dh
   14004601e:	add    BYTE PTR [rax],al
   140046020:	jae    0x140046093
   140046022:	pop    rdi
   140046023:	rex.B
   140046024:	rex.WR add BYTE PTR [rax],r8b
   140046027:	add    BYTE PTR [rbx+0x71],dh
   14004602a:	add    BYTE PTR [rax],al
   14004602c:	jae    0x14004609d
   14004602e:	pop    rdi
   14004602f:	rex.RB push r12
   140046031:	add    BYTE PTR [rax],al
   140046033:	add    BYTE PTR [rbx+0x6f],dh
   140046036:	add    BYTE PTR [rax],al
   140046038:	jae    0x1400460a6
   14004603a:	pop    rdi
   14004603b:	push   rbx
   14004603c:	rex.WB add BYTE PTR [r8],al
   14004603f:	add    BYTE PTR [rbx+0x6c],dh
   140046042:	add    BYTE PTR [rax],al
   140046044:	jae    0x1400460b1
   140046046:	pop    rdi
   140046047:	push   rbx
   140046048:	rex.WXB add BYTE PTR [r8],al
   14004604b:	add    BYTE PTR [rbx+0x6b],dh
   14004604e:	add    BYTE PTR [rax],al
   140046050:	jae    0x1400460bb
   140046052:	pop    rdi
   140046053:	rex.WR
   140046054:	rex.WXB add BYTE PTR [r8],al
   140046057:	add    BYTE PTR [rbx+0x69],dh
   14004605a:	add    BYTE PTR [rax],al
   14004605c:	jae    0x1400460cb
   14004605e:	jae    0x1400460bf
   140046060:	rex.RX
   140046061:	rex.WB add BYTE PTR [r8],al
   140046064:	jae    0x1400460d3
   140046066:	outs   dx,BYTE PTR ds:[rsi]
   140046067:	pop    rdi
   140046068:	rex.RX
   140046069:	rex.WB add BYTE PTR [r8],al
   14004606c:	jae    0x1400460db
   14004606e:	push   0x5f
   140046070:	push   rbx
   140046071:	add    BYTE PTR [r8],r8b
   140046074:	jae    0x1400460e3
   140046076:	push   0x5f
   140046078:	rex.WRX
   140046079:	rex.WRXB add BYTE PTR [r8],r8b
   14004607c:	jae    0x1400460eb
   14004607e:	jae    0x140046080
   140046080:	jae    0x1400460ef
   140046082:	outs   dx,BYTE PTR ds:[rsi]
   140046083:	add    BYTE PTR [rbx+0x6d],dh
   140046086:	push   0x0
   140046088:	jae    0x1400460f7
   14004608a:	(bad)  
   14004608b:	pop    rdi
   14004608c:	push   rbx
   14004608d:	add    BYTE PTR [r8],r8b
   140046090:	jae    0x1400460ff
   140046092:	(bad)  
   140046093:	pop    rdi
   140046094:	rex.WRX
   140046095:	rex.WRXB add BYTE PTR [r8],r8b
   140046098:	jae    0x140046107
   14004609a:	(bad)  
   14004609b:	add    BYTE PTR [rbx+0x65],dh
   14004609e:	pop    rdi
   14004609f:	push   rbx
   1400460a0:	add    BYTE PTR [r8],r8b
   1400460a3:	add    BYTE PTR [rbx+0x65],dh
   1400460a6:	pop    rdi
   1400460a7:	rex.WRX
   1400460a8:	rex.WRXB add BYTE PTR [r8],r8b
   1400460ab:	add    BYTE PTR [rbx+0x65],dh
   1400460ae:	pop    rdi
   1400460af:	rex.RX
   1400460b0:	rex.WB add BYTE PTR [r8],al
   1400460b3:	add    BYTE PTR [rbx+0x64],dh
   1400460b6:	pop    rdi
   1400460b7:	push   rax
   1400460b8:	rex.WXB add BYTE PTR [r8],al
   1400460bb:	add    BYTE PTR [rbx+0x64],dh
   1400460be:	pop    rdi
   1400460bf:	rex.WB
   1400460c0:	rex.WRX add BYTE PTR [rax],r8b
   1400460c3:	add    BYTE PTR [rbx+0x64],dh
   1400460c6:	add    BYTE PTR [rax],al
   1400460c8:	jae    0x14004612b
   1400460ca:	push   0x55525f
   1400460cf:	add    BYTE PTR [rbx+0x61],dh
   1400460d2:	push   0x5f617300
   1400460d7:	rex.WB
   1400460d8:	rex.WRX add BYTE PTR [rax],r8b
   1400460db:	add    BYTE PTR [rbx+0x61],dh
   1400460de:	add    BYTE PTR [rax],al
   1400460e0:	jb     0x140046159
   1400460e2:	pop    rdi
   1400460e3:	push   rdx
   1400460e4:	push   rdi
   1400460e5:	add    BYTE PTR [rax],al
   1400460e7:	add    BYTE PTR [rdx+0x77],dh
   1400460ea:	add    BYTE PTR [rax],al
   1400460ec:	jb     0x140046163
   1400460ee:	pop    rdi
   1400460ef:	push   rdx
   1400460f0:	push   rbp
   1400460f1:	add    BYTE PTR [rax],al
   1400460f3:	add    BYTE PTR [rdx+0x75],dh
   1400460f6:	add    BYTE PTR [rax],al
   1400460f8:	jb     0x140046169
   1400460fa:	outs   dx,DWORD PTR ds:[rsi]
   1400460fb:	je     0x1400460fd
   1400460fd:	add    BYTE PTR [rax],al
   1400460ff:	add    BYTE PTR [rdx+0x6f],dh
   140046102:	pop    rdi
   140046103:	push   rdx
   140046104:	rex.WRXB add BYTE PTR [r8],r8b
   140046107:	add    BYTE PTR [rdx+0x6f],dh
   14004610a:	add    BYTE PTR [rax],al
   14004610c:	jb     0x14004617b
   14004610e:	pop    rdi
   14004610f:	rex.XB
   140046110:	rex.W add BYTE PTR [rax],al
   140046113:	add    BYTE PTR [rdx+0x6d],dh
   140046116:	add    BYTE PTR [rax],al
   140046118:	jno    0x14004618f
   14004611a:	je     0x14004617b
   14004611c:	rex.RXB push r12
   14004611e:	add    BYTE PTR [rax],al
   140046120:	jno    0x140046197
   140046122:	je     0x140046124
   140046124:	jno    0x14004619b
   140046126:	pop    rdi
   140046127:	push   rax
   140046128:	add    BYTE PTR [r8],r8b
   14004612b:	add    BYTE PTR [rcx+0x75],dh
   14004612e:	pop    rdi
   14004612f:	rex.RB
   140046130:	rex.XB add BYTE PTR [r8],al
   140046133:	add    BYTE PTR [rcx+0x75],dh
   140046136:	pop    rdi
   140046137:	rex.X
   140046138:	rex.WRXB add BYTE PTR [r8],r8b
   14004613b:	add    BYTE PTR [rcx+0x75],dh
   14004613e:	add    BYTE PTR [rax],al
   140046140:	jo     0x1400461b6
   140046142:	pop    rdi
   140046143:	push   rax
   140046144:	push   rsp
   140046145:	add    BYTE PTR [rax],al
   140046147:	add    BYTE PTR [rax+0x74],dh
   14004614a:	pop    rdi
   14004614b:	rex.X push rdx
   14004614d:	add    BYTE PTR [rax],al
   14004614f:	add    BYTE PTR [rax+0x74],dh
   140046152:	add    BYTE PTR [rax],al
   140046154:	jo     0x1400461c9
   140046156:	pop    rdi
   140046157:	rex.B
   140046158:	rex.RX add BYTE PTR [rax],r8b
   14004615b:	add    BYTE PTR [rax+0x73],dh
   14004615e:	add    BYTE PTR [rax],al
   140046160:	jo     0x1400461ce
   140046162:	pop    rdi
   140046163:	push   rax
   140046164:	rex.WR add BYTE PTR [rax],r8b
   140046167:	add    BYTE PTR [rax+0x6c],dh
   14004616a:	add    BYTE PTR [rax],al
   14004616c:	jo     0x1400461cf
   14004616e:	pop    rdi
   14004616f:	push   rax
   140046170:	rex.WXB add BYTE PTR [r8],al
   140046173:	add    BYTE PTR [rax+0x61],dh
   140046176:	pop    rdi
   140046177:	rex.WB
   140046178:	rex.WRX add BYTE PTR [rax],r8b
   14004617b:	add    BYTE PTR [rax+0x61],dh
   14004617e:	add    BYTE PTR [rax],al
   140046180:	outs   dx,DWORD PTR ds:[rsi]
   140046181:	jb     0x1400461e2
   140046183:	rex.WB
   140046184:	rex.WRX add BYTE PTR [rax],r8b
   140046187:	add    BYTE PTR [rdi+0x72],ch
   14004618a:	add    BYTE PTR [rax],al
   14004618c:	outs   dx,DWORD PTR ds:[rsi]
   14004618d:	ins    DWORD PTR es:[rdi],dx
   14004618e:	pop    rdi
   14004618f:	rex.RB push r12
   140046191:	add    BYTE PTR [rax],al
   140046193:	add    BYTE PTR [rdi+0x6d],ch
   140046196:	add    BYTE PTR [rax],al
   140046198:	outs   dx,DWORD PTR ds:[rsi]
   140046199:	movsxd ebx,DWORD PTR [rdi+0x46]
   14004619c:	push   rdx
   14004619d:	add    BYTE PTR [rax],al
   14004619f:	add    BYTE PTR [rdi+0x63],ch
   1400461a2:	add    BYTE PTR [rax],al
   1400461a4:	outs   dx,BYTE PTR ds:[rsi]
   1400461a5:	jae    0x140046216
   1400461a7:	pop    rdi
   1400461a8:	pop    rdx
   1400461a9:	add    BYTE PTR [r8],al
   1400461ac:	outs   dx,BYTE PTR ds:[rsi]
   1400461ad:	jae    0x14004621e
   1400461af:	add    BYTE PTR [rsi+0x6f],ch
   1400461b2:	pop    rdi
   1400461b3:	rex.WRX
   1400461b4:	rex.WRXB pop r15
   1400461b6:	rex.WRX pop rcx
   1400461b8:	add    BYTE PTR [rax],al
   1400461ba:	add    BYTE PTR [rax],al
   1400461bc:	outs   dx,BYTE PTR ds:[rsi]
   1400461bd:	outs   dx,BYTE PTR ds:[rsi]
   1400461be:	add    BYTE PTR [rax],al
   1400461c0:	outs   dx,BYTE PTR ds:[rsi]
   1400461c1:	outs   dx,BYTE PTR ds:[rsi]
   1400461c2:	pop    rdi
   1400461c3:	rex.WRX
   1400461c4:	rex.WRXB add BYTE PTR [r8],r8b
   1400461c7:	add    BYTE PTR [rsi+0x6f],ch
   1400461ca:	pop    rdi
   1400461cb:	rex.WRX
   1400461cc:	rex.WRXB add BYTE PTR [r8],r8b
   1400461cf:	add    BYTE PTR [rsi+0x62],ch
   1400461d2:	pop    rdi
   1400461d3:	rex.WRX
   1400461d4:	rex.WRXB add BYTE PTR [r8],r8b
   1400461d7:	add    BYTE PTR [rsi+0x62],ch
   1400461da:	add    BYTE PTR [rax],al
   1400461dc:	outs   dx,BYTE PTR ds:[rsi]
   1400461dd:	ins    BYTE PTR es:[rdi],dx
   1400461de:	pop    rdi
   1400461df:	rex.WRX
   1400461e0:	rex.WR add BYTE PTR [rax],r8b
   1400461e3:	add    BYTE PTR [rsi+0x6c],ch
   1400461e6:	pop    rdi
   1400461e7:	rex.X
   1400461e8:	add    BYTE PTR [r8],r8b
   1400461eb:	add    BYTE PTR [rsi+0x6c],ch
   1400461ee:	add    BYTE PTR [rax],al
   1400461f0:	outs   dx,BYTE PTR ds:[rsi]
   1400461f1:	gs pop rdi
   1400461f3:	rex.WRX push rax
   1400461f5:	add    BYTE PTR [rax],al
   1400461f7:	add    BYTE PTR [rsi+0x65],ch
   1400461fa:	pop    rdi
   1400461fb:	rex.WB
   1400461fc:	rex.WRX add BYTE PTR [rax],r8b
   1400461ff:	add    BYTE PTR [rsi+0x65],ch
   140046202:	add    BYTE PTR [rax],al
   140046204:	ins    DWORD PTR es:[rdi],dx
   140046205:	jns    0x140046266
   140046207:	rex.WRB
   140046208:	rex.WRB add BYTE PTR [r8],r8b
   14004620b:	add    BYTE PTR [rbp+0x79],ch
   14004620e:	add    BYTE PTR [rax],al
   140046210:	ins    DWORD PTR es:[rdi],dx
   140046211:	je     0x140046272
   140046213:	rex.WRB push r12
   140046215:	add    BYTE PTR [rax],al
   140046217:	add    BYTE PTR [rbp+0x74],ch
   14004621a:	add    BYTE PTR [rax],al
   14004621c:	ins    DWORD PTR es:[rdi],dx
   14004621d:	jae    0x14004627e
   14004621f:	rex.WRB pop r9
   140046221:	add    BYTE PTR [rax],al
   140046223:	add    BYTE PTR [rbp+0x73],ch
   140046226:	pop    rdi
   140046227:	rex.X
   140046228:	rex.WRX add BYTE PTR [rax],r8b
   14004622b:	add    BYTE PTR [rbp+0x73],ch
   14004622e:	add    BYTE PTR [rax],al
   140046230:	ins    DWORD PTR es:[rdi],dx
   140046231:	jb     0x140046292
   140046233:	rex.WB
   140046234:	rex.WRX add BYTE PTR [rax],r8b
   140046237:	add    BYTE PTR [rbp+0x72],ch
   14004623a:	add    BYTE PTR [rax],al
   14004623c:	ins    DWORD PTR es:[rdi],dx
   14004623d:	outs   dx,DWORD PTR ds:[rsi]
   14004623e:	push   0x41435f
   140046243:	add    BYTE PTR [rbp+0x6f],ch
   140046246:	push   0x696e6d00
   14004624b:	pop    rdi
   14004624c:	rex.WB
   14004624d:	rex.WRX add BYTE PTR [rax],r8b
   140046250:	ins    DWORD PTR es:[rdi],dx
   140046251:	outs   dx,BYTE PTR ds:[rsi]
   140046252:	imul   eax,DWORD PTR [rax],0x0
   140046258:	ins    DWORD PTR es:[rdi],dx
   140046259:	outs   dx,BYTE PTR ds:[rsi]
   14004625a:	pop    rdi
   14004625b:	rex.XB jns 0x1400462d0
   14004625e:	ins    BYTE PTR es:[rdi],dx
   14004625f:	add    BYTE PTR [rbp+0x6e],ch
   140046262:	pop    rdi
   140046263:	rex.XB
   140046264:	rex.WRX add BYTE PTR [rax],r8b
   140046267:	add    BYTE PTR [rbp+0x6e],ch
   14004626a:	pop    rdi
   14004626b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004626d:	outs   dx,BYTE PTR ds:[rsi]
   14004626e:	addr32 pop rdi
   140046270:	rex.XB
   140046271:	rex.WRX add BYTE PTR [rax],r8b
   140046274:	add    BYTE PTR [rax],al
   140046276:	add    BYTE PTR [rax],al
   140046278:	ins    DWORD PTR es:[rdi],dx
   140046279:	outs   dx,BYTE PTR ds:[rsi]
   14004627a:	pop    rdi
   14004627b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004627d:	outs   dx,BYTE PTR ds:[rsi]
   14004627e:	add    BYTE PTR [ebp+0x6e],ch
   140046282:	pop    rdi
   140046283:	rex.WRB
   140046284:	rex.WRX add BYTE PTR [rax],r8b
   140046287:	add    BYTE PTR [rbp+0x6e],ch
   14004628a:	add    BYTE PTR [rax],al
   14004628c:	ins    DWORD PTR es:[rdi],dx
   14004628d:	ins    BYTE PTR es:[rdi],dx
   14004628e:	pop    rdi
   14004628f:	rex.WB
   140046290:	rex.WRX add BYTE PTR [rax],r8b
   140046293:	add    BYTE PTR [rbp+0x6c],ch
   140046296:	add    BYTE PTR [rax],al
   140046298:	ins    DWORD PTR es:[rdi],dx
   140046299:	imul   ebx,DWORD PTR [rdi+0x4d],0x4b
   14004629d:	add    BYTE PTR [rax],al
   14004629f:	add    BYTE PTR [rbp+0x6b],ch
   1400462a2:	add    BYTE PTR [rax],al
   1400462a4:	ins    DWORD PTR es:[rdi],dx
   1400462a5:	imul   ebx,DWORD PTR [rdi+0x4e],0x5a
   1400462ac:	ins    DWORD PTR es:[rdi],dx
   1400462ad:	imul   eax,DWORD PTR [rax],0x5f766c00
   1400462b3:	rex.WR push rsi
   1400462b5:	add    BYTE PTR [rax],al
   1400462b7:	add    BYTE PTR [rsi+rsi*2+0x0],ch
   1400462bb:	add    BYTE PTR [rsp+rsi*2+0x5f],ch
   1400462bf:	rex.WR push rsp
   1400462c1:	add    BYTE PTR [rax],al
   1400462c3:	add    BYTE PTR [rsp+rsi*2+0x0],ch
   1400462c7:	add    BYTE PTR [rdi+rbp*2+0x5f],ch
   1400462cb:	rex.WR
   1400462cc:	add    BYTE PTR [r8],al
   1400462cf:	add    BYTE PTR [rdi+rbp*2+0x0],ch
   1400462d3:	add    BYTE PTR [rdx+riz*2+0x5f],ch
   1400462d7:	rex.WR push rbp
   1400462d9:	add    BYTE PTR [rax],al
   1400462db:	add    BYTE PTR [rdx+riz*2+0x0],ch
   1400462df:	add    BYTE PTR [rcx+riz*2+0x5f],ch
   1400462e3:	rex.WB push r12
   1400462e5:	add    BYTE PTR [rax],al
   1400462e7:	add    BYTE PTR [rcx+riz*2+0x0],ch
   1400462eb:	add    BYTE PTR [rbx+0x79],ch
   1400462ee:	pop    rdi
   1400462ef:	rex.WXB
   1400462f0:	rex.RXB add BYTE PTR [r8],r8b
   1400462f3:	add    BYTE PTR [rbx+0x79],ch
   1400462f6:	add    BYTE PTR [rax],al
   1400462f8:	imul   esi,DWORD PTR [rbx+0x5f],0x41
   1400462fc:	jb     0x14004635f
   1400462fe:	(bad)  
   1400462ff:	pop    rdi
   140046300:	rex.WB
   140046301:	rex.WRX add BYTE PTR [rax],r8b
   140046304:	imul   esi,DWORD PTR [rbx+0x5f],0x49
   140046308:	rex.WRX add BYTE PTR [rax],r8b
   14004630b:	add    BYTE PTR [rbx+0x73],ch
   14004630e:	add    BYTE PTR [rax],al
   140046310:	imul   esi,DWORD PTR [rdx+0x5f],0x4e
   140046314:	rex.RXB add BYTE PTR [r8],r8b
   140046317:	add    BYTE PTR [rbx+0x72],ch
   14004631a:	add    BYTE PTR [rax],al
   14004631c:	imul   ebp,DWORD PTR [rdi+0x6b],0x5f
   140046320:	rex.WB
   140046321:	rex.WRX add BYTE PTR [rax],r8b
   140046324:	imul   ebp,DWORD PTR [rdi+0x6b],0x0
   140046328:	imul   ebp,DWORD PTR [rdi+0x5f],0x4b
   14004632c:	push   rdx
   14004632d:	add    BYTE PTR [rax],al
   14004632f:	add    BYTE PTR [rbx+0x6f],ch
   140046332:	pop    rdi
   140046333:	rex.WXB push r8
   140046335:	add    BYTE PTR [rax],al
   140046337:	add    BYTE PTR [rbx+0x6f],ch
   14004633a:	add    BYTE PTR [rax],al
   14004633c:	imul   ebp,DWORD PTR [rsi+0x5f],0x49
   140046340:	rex.WRX add BYTE PTR [rax],r8b
   140046343:	add    BYTE PTR [rbx+0x6e],ch
   140046346:	add    BYTE PTR [rax],al
   140046348:	imul   ebp,DWORD PTR [rbp+0x5f],0x4b
   14004634c:	rex.W add BYTE PTR [rax],al
   14004634f:	add    BYTE PTR [rbx+0x6d],ch
   140046352:	add    BYTE PTR [rax],al
   140046354:	imul   ebp,DWORD PTR [rdi+rbx*2+0x47],0x4c
   140046359:	add    BYTE PTR [rax],al
   14004635b:	add    BYTE PTR [rbx+0x6c],ch
   14004635e:	add    BYTE PTR [rax],al
   140046360:	imul   ebp,DWORD PTR [rbx+0x5f],0x4b
   140046364:	pop    rdx
   140046365:	add    BYTE PTR [rax],al
   140046367:	add    BYTE PTR [rbx+0x6b],ch
   14004636a:	add    BYTE PTR [rax],al
   14004636c:	imul   esp,DWORD PTR [rcx+0x5f],0x47
   140046370:	add    BYTE PTR [r8],r8b
   140046373:	add    BYTE PTR [rbx+0x61],ch
   140046376:	add    BYTE PTR [rax],al
   140046378:	push   0x61
   14004637a:	pop    rdi
   14004637b:	rex.WX push rax
   14004637d:	add    BYTE PTR [rax],al
   14004637f:	add    BYTE PTR [rdx+0x61],ch
   140046382:	add    BYTE PTR [rax],al
   140046384:	imul   esi,DWORD PTR [rdi+0x5f],0x4c49
   14004638b:	add    BYTE PTR [rcx+0x77],ch
   14004638e:	add    BYTE PTR [rax],al
   140046390:	imul   esi,DWORD PTR [rbp+0x5f],0x6e74614c
   140046397:	add    BYTE PTR [rcx+0x75],ch
   14004639a:	pop    rdi
   14004639b:	rex.WR (bad) 
   14004639d:	je     0x14004640d
   14004639f:	pop    rdi
   1400463a0:	rex.XB
   1400463a1:	add    BYTE PTR [r8],al
   1400463a4:	add    BYTE PTR [rax],al
   1400463a6:	add    BYTE PTR [rax],al
   1400463a8:	imul   esi,DWORD PTR [rbp+0x5f],0x736e6143
   1400463af:	add    BYTE PTR [rcx+0x75],ch
   1400463b2:	pop    rdi
   1400463b3:	rex.XB (bad) 
   1400463b5:	outs   dx,BYTE PTR ds:[rsi]
   1400463b6:	jae    0x140046417
   1400463b8:	rex.XB
   1400463b9:	add    BYTE PTR [r8],al
   1400463bc:	imul   esi,DWORD PTR [rbp+0x0],0x5f746900
   1400463c3:	rex.WB push r12
   1400463c5:	add    BYTE PTR [rax],al
   1400463c7:	add    BYTE PTR [rcx+0x74],ch
   1400463ca:	pop    rdi
   1400463cb:	rex.XB
   1400463cc:	rex.W add BYTE PTR [rax],al
   1400463cf:	add    BYTE PTR [rcx+0x74],ch
   1400463d2:	add    BYTE PTR [rax],al
   1400463d4:	imul   esi,DWORD PTR [rbx+0x5f],0x5349
   1400463db:	add    BYTE PTR [rcx+0x73],ch
   1400463de:	add    BYTE PTR [rax],al
   1400463e0:	imul   ebp,DWORD PTR [rcx+0x5f],0x4e43
   1400463e7:	add    BYTE PTR [rcx+0x69],ch
   1400463ea:	add    BYTE PTR [rax],al
   1400463ec:	imul   esp,DWORD PTR [rdi+0x5f],0x474e
   1400463f3:	add    BYTE PTR [rcx+0x67],ch
   1400463f6:	add    BYTE PTR [rax],al
   1400463f8:	imul   esp,DWORD PTR [rdi+rbx*2+0x49],0x44
   140046400:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x415f7968
   140046408:	rex.WRB add BYTE PTR [r8],r8b
   14004640b:	add    BYTE PTR [rax+0x79],ch
   14004640e:	add    BYTE PTR [rax],al
   140046410:	push   0x55485f75
   140046415:	add    BYTE PTR [rax],al
   140046417:	add    BYTE PTR [rbx+0x72],dh
   14004641a:	add    BYTE PTR [rax],al
   14004641c:	add    BYTE PTR [rax],al
   14004641e:	add    BYTE PTR [rax],al
   140046420:	jae    0x140046494
   140046422:	pop    rdi
   140046423:	rex.XB jns 0x140046498
   140046426:	ins    BYTE PTR es:[rdi],dx
   140046427:	add    BYTE PTR [rbx+0x72],dh
   14004642a:	pop    rdi
   14004642b:	rex.XB jns 0x1400464a0
   14004642e:	ins    BYTE PTR es:[rdi],dx
   14004642f:	pop    rdi
   140046430:	push   rdx
   140046431:	push   rbx
   140046432:	add    BYTE PTR [rax],al
   140046434:	add    BYTE PTR [rax],al
   140046436:	add    BYTE PTR [rax],al
   140046438:	jae    0x1400464ac
   14004643a:	pop    rdi
   14004643b:	rex.XB jns 0x1400464b0
   14004643e:	ins    BYTE PTR es:[rdi],dx
   14004643f:	pop    rdi
   140046440:	rex.WRB
   140046441:	add    BYTE PTR [r8],r8b
   140046444:	add    BYTE PTR [rax],al
   140046446:	add    BYTE PTR [rax],al
   140046448:	jae    0x1400464bc
   14004644a:	pop    rdi
   14004644b:	rex.XB jns 0x1400464c0
   14004644e:	ins    BYTE PTR es:[rdi],dx
   14004644f:	pop    rdi
   140046450:	rex.XB push r11
   140046452:	add    BYTE PTR [rax],al
   140046454:	add    BYTE PTR [rax],al
   140046456:	add    BYTE PTR [rax],al
   140046458:	jae    0x1400464cc
   14004645a:	pop    rdi
   14004645b:	rex.XB jns 0x1400464d0
   14004645e:	ins    BYTE PTR es:[rdi],dx
   14004645f:	pop    rdi
   140046460:	rex.X
   140046461:	add    BYTE PTR [r8],al
   140046464:	add    BYTE PTR [rax],al
   140046466:	add    BYTE PTR [rax],al
   140046468:	jae    0x1400464dc
   14004646a:	pop    rdi
   14004646b:	rex.WR (bad) 
   14004646d:	je     0x1400464dd
   14004646f:	add    BYTE PTR [rbx+0x72],dh
   140046472:	pop    rdi
   140046473:	rex.WR (bad) 
   140046475:	je     0x1400464e5
   140046477:	pop    rdi
   140046478:	rex.XB push r11
   14004647a:	add    BYTE PTR [rax],al
   14004647c:	add    BYTE PTR [rax],al
   14004647e:	add    BYTE PTR [rax],al
   140046480:	jae    0x1400464f4
   140046482:	pop    rdi
   140046483:	rex.WR (bad) 
   140046485:	je     0x1400464f5
   140046487:	pop    rdi
   140046488:	rex.X
   140046489:	add    BYTE PTR [r8],al
   14004648c:	add    BYTE PTR [rax],al
   14004648e:	add    BYTE PTR [rax],al
   140046490:	jae    0x140046504
   140046492:	pop    rdi
   140046493:	rex.WR (bad) 
   140046495:	je     0x140046505
   140046497:	pop    rdi
   140046498:	push   rdx
   140046499:	push   rbx
   14004649a:	add    BYTE PTR [rax],al
   14004649c:	add    BYTE PTR [rax],al
   14004649e:	add    BYTE PTR [rax],al
   1400464a0:	jae    0x140046514
   1400464a2:	pop    rdi
   1400464a3:	rex.WR (bad) 
   1400464a5:	je     0x140046515
   1400464a7:	pop    rdi
   1400464a8:	rex.WRB
   1400464a9:	add    BYTE PTR [r8],r8b
   1400464ac:	push   0x52485f72
   1400464b1:	add    BYTE PTR [rax],al
   1400464b3:	add    BYTE PTR [rax+0x72],ch
   1400464b6:	pop    rdi
   1400464b7:	rex.X
   1400464b8:	add    BYTE PTR [r8],al
   1400464bb:	add    BYTE PTR [rax],al
   1400464bd:	add    BYTE PTR [rax],al
   1400464bf:	add    BYTE PTR [rdx+0x73],ah
   1400464c2:	pop    rdi
   1400464c3:	rex.XB jns 0x140046538
   1400464c6:	ins    BYTE PTR es:[rdi],dx
   1400464c7:	add    BYTE PTR [rdx+0x73],ah
   1400464ca:	pop    rdi
   1400464cb:	rex.XB jns 0x140046540
   1400464ce:	ins    BYTE PTR es:[rdi],dx
   1400464cf:	pop    rdi
   1400464d0:	rex.X
   1400464d1:	add    BYTE PTR [r8],al
   1400464d4:	(bad)  
   1400464d6:	add    BYTE PTR [rax],al
   1400464d8:	(bad)
   1400464dd:	add    BYTE PTR [rax],al
   1400464df:	add    BYTE PTR [rdx+0x73],ah
   1400464e2:	pop    rdi
   1400464e3:	rex.WR (bad) 
   1400464e5:	je     0x140046555
   1400464e7:	add    BYTE PTR [rdx+0x73],ah
   1400464ea:	pop    rdi
   1400464eb:	rex.WR (bad) 
   1400464ed:	je     0x14004655d
   1400464ef:	pop    rdi
   1400464f0:	rex.X
   1400464f1:	add    BYTE PTR [r8],al
   1400464f4:	push   0x68000072
   1400464f9:	imul   ebx,DWORD PTR [rdi+0x49],0x4e
   140046500:	push   0x68000069
   140046505:	gs pop rdi
   140046507:	rex.WB
   140046508:	rex.WR add BYTE PTR [rax],r8b
   14004650b:	add    BYTE PTR [rax+0x65],ch
   14004650e:	add    BYTE PTR [rax],al
   140046510:	push   0x555f7761
   140046515:	push   rbx
   140046516:	add    BYTE PTR [rax],al
   140046518:	push   0x7761
   14004651d:	add    BYTE PTR [rax],al
   14004651f:	add    BYTE PTR [rax+0x61],ch
   140046522:	pop    rdi
   140046523:	rex.WR (bad) 
   140046525:	je     0x140046595
   140046527:	pop    rdi
   140046528:	rex.WRX
   140046529:	rex.RXB add BYTE PTR [r8],r8b
   14004652c:	add    BYTE PTR [rax],al
   14004652e:	add    BYTE PTR [rax],al
   140046530:	push   0x614c5f61
   140046535:	je     0x1400465a5
   140046537:	add    BYTE PTR [rax+0x61],ch
   14004653a:	add    BYTE PTR [rax],al
   14004653c:	addr32 jae 0x1400465b6
   14004653f:	pop    rdi
   140046540:	rex.RX push rdx
   140046542:	add    BYTE PTR [rax],al
   140046544:	addr32 jae 0x1400465be
   140046547:	add    BYTE PTR [rdi+0x6e],ah
   14004654a:	pop    rdi
   14004654b:	push   rax
   14004654c:	pop    rcx
   14004654d:	add    BYTE PTR [rax],al
   14004654f:	add    BYTE PTR [rdi+0x6e],ah
   140046552:	add    BYTE PTR [rax],al
   140046554:	addr32 jne 0x1400465b6
   140046557:	rex.WB
   140046558:	rex.WRX add BYTE PTR [rax],r8b
   14004655b:	add    BYTE PTR [rdi+0x75],ah
   14004655e:	add    BYTE PTR [rax],al
   140046560:	ins    BYTE PTR es:[edi],dx
   140046562:	pop    rdi
   140046563:	rex.RB push r11
   140046565:	add    BYTE PTR [rax],al
   140046567:	add    BYTE PTR [rdi+0x6c],ah
   14004656a:	add    BYTE PTR [rax],al
   14004656c:	addr32 fs pop rdi
   14004656f:	rex.RXB
   140046570:	rex.X add BYTE PTR [rax],al
   140046573:	add    BYTE PTR [rdi+0x64],ah
   140046576:	add    BYTE PTR [rax],al
   140046578:	addr32 (bad) 
   14004657a:	pop    rdi
   14004657b:	rex.WB
   14004657c:	add    BYTE PTR [r8],r8b
   14004657f:	add    BYTE PTR [rdi+0x61],ah
   140046582:	add    BYTE PTR [rax],al
   140046584:	data16 jns 0x1400465e6
   140046587:	rex.WRX
   140046588:	rex.WR add BYTE PTR [rax],r8b
   14004658b:	add    BYTE PTR [rsi+0x79],ah
   14004658e:	add    BYTE PTR [rax],al
   140046590:	data16 jb 0x1400465f2
   140046593:	push   rbx
   140046594:	rex.WRX add BYTE PTR [rax],r8b
   140046597:	add    BYTE PTR [rsi+0x72],ah
   14004659a:	pop    rdi
   14004659b:	push   rdx
   14004659c:	add    BYTE PTR [r8],r8b
   14004659f:	add    BYTE PTR [rsi+0x72],ah
   1400465a2:	pop    rdi
   1400465a3:	rex.WRB
   1400465a4:	rex.WR add BYTE PTR [rax],r8b
   1400465a7:	add    BYTE PTR [rsi+0x72],ah
   1400465aa:	pop    rdi
   1400465ab:	rex.WRB
   1400465ac:	rex.XB add BYTE PTR [r8],al
   1400465af:	add    BYTE PTR [rsi+0x72],ah
   1400465b2:	pop    rdi
   1400465b3:	rex.WRB
   1400465b4:	add    BYTE PTR [r8],al
   1400465b7:	add    BYTE PTR [rsi+0x72],ah
   1400465ba:	pop    rdi
   1400465bb:	rex.WR push rbp
   1400465bd:	add    BYTE PTR [rax],al
   1400465bf:	add    BYTE PTR [rsi+0x72],ah
   1400465c2:	pop    rdi
   1400465c3:	rex.W push rsp
   1400465c5:	add    BYTE PTR [rax],al
   1400465c7:	add    BYTE PTR [rsi+0x72],ah
   1400465ca:	pop    rdi
   1400465cb:	rex.RX push rdx
   1400465cd:	add    BYTE PTR [rax],al
   1400465cf:	add    BYTE PTR [rsi+0x72],ah
   1400465d2:	pop    rdi
   1400465d3:	rex.XB
   1400465d4:	rex.WRB add BYTE PTR [r8],r8b
   1400465d7:	add    BYTE PTR [rsi+0x72],ah
   1400465da:	pop    rdi
   1400465db:	rex.XB
   1400465dc:	rex.WB add BYTE PTR [r8],al
   1400465df:	add    BYTE PTR [rsi+0x72],ah
   1400465e2:	pop    rdi
   1400465e3:	rex.XB
   1400465e4:	rex.W add BYTE PTR [rax],al
   1400465e7:	add    BYTE PTR [rsi+0x72],ah
   1400465ea:	pop    rdi
   1400465eb:	rex.XB
   1400465ec:	add    BYTE PTR [rax],r8b
   1400465ef:	add    BYTE PTR [rsi+0x72],ah
   1400465f2:	pop    rdi
   1400465f3:	rex.XB
   1400465f4:	add    BYTE PTR [r8],al
   1400465f7:	add    BYTE PTR [rsi+0x72],ah
   1400465fa:	pop    rdi
   1400465fb:	rex.X
   1400465fc:	add    BYTE PTR [r8],r8b
   1400465ff:	add    BYTE PTR [rsi+0x6f],ah
   140046602:	pop    rdi
   140046603:	rex.RX
   140046604:	rex.WRXB add BYTE PTR [r8],r8b
   140046607:	add    BYTE PTR [rsi+0x6f],ah
   14004660a:	add    BYTE PTR [rax],al
   14004660c:	imul   bp,WORD PTR [rdi+rbx*2+0x50],0x48
   140046613:	add    BYTE PTR [rsi+0x69],ah
   140046616:	ins    BYTE PTR es:[rdi],dx
   140046617:	add    BYTE PTR [rsi+0x69],ah
   14004661a:	pop    rdi
   14004661b:	rex.RX
   14004661c:	rex.WB add BYTE PTR [r8],al
   14004661f:	add    BYTE PTR [rsi+0x69],ah
   140046622:	add    BYTE PTR [rax],al
   140046624:	data16 (bad) 
   140046626:	pop    rdi
   140046627:	rex.B
   140046628:	rex.RX add BYTE PTR [rax],r8b
   14004662b:	add    BYTE PTR [rsi+0x61],ah
   14004662e:	pop    rdi
   14004662f:	rex.WB push r10
   140046631:	add    BYTE PTR [rax],al
   140046633:	add    BYTE PTR [rsi+0x61],ah
   140046636:	add    BYTE PTR [rax],al
   140046638:	gs jne 0x14004669a
   14004663b:	rex.RB push r11
   14004663d:	add    BYTE PTR [rax],al
   14004663f:	add    BYTE PTR [rbp+0x75],ah
   140046642:	add    BYTE PTR [rax],al
   140046644:	gs je  0x1400466a6
   140046647:	rex.RB
   140046648:	add    BYTE PTR [r8],r8b
   14004664b:	add    BYTE PTR [rbp+0x74],ah
   14004664e:	add    BYTE PTR [rax],al
   140046650:	gs jae 0x140046693
   140046653:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140046656:	ins    BYTE PTR es:[rdi],dx
   140046657:	(bad)  
   140046658:	je     0x1400466c3
   14004665a:	outs   dx,DWORD PTR ds:[rsi]
   14004665b:	outs   dx,BYTE PTR ds:[rsi]
   14004665c:	cmp    eax,0x64617274
   140046661:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x6c616e
   140046669:	add    BYTE PTR [rax],al
   14004666b:	add    BYTE PTR [rax],al
   14004666d:	add    BYTE PTR [rax],al
   14004666f:	add    BYTE PTR [rbp+0x73],ah
   140046672:	pop    rdi
   140046673:	rex.RB push r11
   140046675:	rex movsxd ebp,DWORD PTR [rdi+0x6c]
   140046679:	ins    BYTE PTR es:[rdi],dx
   14004667a:	(bad)  
   14004667b:	je     0x1400466e6
   14004667d:	outs   dx,DWORD PTR ds:[rsi]
   14004667e:	outs   dx,BYTE PTR ds:[rsi]
   14004667f:	cmp    eax,0x64617274
   140046684:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x6c616e
   14004668c:	gs jae 0x1400466ee
   14004668f:	push   rsi
   140046690:	add    BYTE PTR [r8],r8b
   140046693:	add    BYTE PTR [rbp+0x73],ah
   140046696:	pop    rdi
   140046697:	push   rbp
   140046698:	pop    rcx
   140046699:	add    BYTE PTR [rax],al
   14004669b:	add    BYTE PTR [rbp+0x73],ah
   14004669e:	pop    rdi
   14004669f:	push   rbp
   1400466a0:	push   rbx
   1400466a1:	add    BYTE PTR [rax],al
   1400466a3:	add    BYTE PTR [rbp+0x73],ah
   1400466a6:	pop    rdi
   1400466a7:	push   rbx
   1400466a8:	push   rsi
   1400466a9:	add    BYTE PTR [rax],al
   1400466ab:	add    BYTE PTR [rbp+0x73],ah
   1400466ae:	pop    rdi
   1400466af:	push   rax
   1400466b0:	pop    rcx
   1400466b1:	add    BYTE PTR [rax],al
   1400466b3:	add    BYTE PTR [rbp+0x73],ah
   1400466b6:	pop    rdi
   1400466b7:	push   rax
   1400466b8:	push   rdx
   1400466b9:	add    BYTE PTR [rax],al
   1400466bb:	add    BYTE PTR [rbp+0x73],ah
   1400466be:	pop    rdi
   1400466bf:	push   rax
   1400466c0:	add    BYTE PTR [r8],r8b
   1400466c3:	add    BYTE PTR [rbp+0x73],ah
   1400466c6:	pop    rdi
   1400466c7:	push   rax
   1400466c8:	add    BYTE PTR [r8],al
   1400466cb:	add    BYTE PTR [rbp+0x73],ah
   1400466ce:	pop    rdi
   1400466cf:	rex.WRX
   1400466d0:	rex.WB add BYTE PTR [r8],al
   1400466d3:	add    BYTE PTR [rbp+0x73],ah
   1400466d6:	pop    rdi
   1400466d7:	rex.WRB pop r8
   1400466d9:	add    BYTE PTR [rax],al
   1400466db:	add    BYTE PTR [rbp+0x73],ah
   1400466de:	pop    rdi
   1400466df:	rex.W
   1400466e0:	rex.WRX add BYTE PTR [rax],r8b
   1400466e3:	add    BYTE PTR [rbp+0x73],ah
   1400466e6:	pop    rdi
   1400466e7:	rex.RXB push r12
   1400466e9:	add    BYTE PTR [rax],al
   1400466eb:	add    BYTE PTR [rbp+0x73],ah
   1400466ee:	pop    rdi
   1400466ef:	rex.RB push r11
   1400466f1:	add    BYTE PTR [rax],al
   1400466f3:	add    BYTE PTR [rbp+0x73],ah
   1400466f6:	pop    rdi
   1400466f7:	rex.RB
   1400466f8:	rex.XB add BYTE PTR [r8],al
   1400466fb:	add    BYTE PTR [rbp+0x73],ah
   1400466fe:	pop    rdi
   1400466ff:	rex.R
   140046700:	rex.WRXB add BYTE PTR [r8],r8b
   140046703:	add    BYTE PTR [rbp+0x73],ah
   140046706:	pop    rdi
   140046707:	rex.XB push r10
   140046709:	add    BYTE PTR [rax],al
   14004670b:	add    BYTE PTR [rbp+0x73],ah
   14004670e:	pop    rdi
   14004670f:	rex.XB
   140046710:	rex.WRXB add BYTE PTR [r8],r8b
   140046713:	add    BYTE PTR [rbp+0x73],ah
   140046716:	pop    rdi
   140046717:	rex.XB
   140046718:	rex.WR add BYTE PTR [rax],r8b
   14004671b:	add    BYTE PTR [rbp+0x73],ah
   14004671e:	pop    rdi
   14004671f:	rex.X
   140046720:	rex.WRXB add BYTE PTR [r8],r8b
   140046723:	add    BYTE PTR [rbp+0x73],ah
   140046726:	pop    rdi
   140046727:	push   r10
   140046729:	add    BYTE PTR [rax],al
   14004672b:	add    BYTE PTR [rbp+0x73],ah
   14004672e:	add    BYTE PTR [rax],al
   140046730:	outs   dx,BYTE PTR gs:[rsi]
   140046732:	pop    rdi
   140046733:	push   rbp
   140046734:	rex.WRB add BYTE PTR [r8],r8b
   140046737:	add    BYTE PTR [rbp+0x6e],ah
   14004673a:	pop    rdi
   14004673b:	rex.WRB push r8
   14004673d:	add    BYTE PTR [rax],al
   14004673f:	add    BYTE PTR [rbp+0x6e],ah
   140046742:	pop    rdi
   140046743:	rex.WRB
   140046744:	rex.W add BYTE PTR [rax],al
   140046747:	add    BYTE PTR [rbp+0x6e],ah
   14004674a:	pop    rdi
   14004674b:	rex.RXB push r13
   14004674d:	add    BYTE PTR [rax],al
   14004674f:	add    BYTE PTR [rbp+0x6e],ah
   140046752:	pop    rdi
   140046753:	push   r11
   140046755:	add    BYTE PTR [rax],al
   140046757:	add    BYTE PTR [rbp+0x6e],ah
   14004675a:	pop    rdi
   14004675b:	xor    BYTE PTR [rdx],dh
   14004675d:	cmp    DWORD PTR [rax],eax
   14004675f:	add    BYTE PTR [rbp+0x6e],ah
   140046762:	pop    rdi
   140046763:	pop    rdx
   140046764:	push   rdi
   140046765:	add    BYTE PTR [rax],al
   140046767:	add    BYTE PTR [rbp+0x6e],ah
   14004676a:	pop    rdi
   14004676b:	pop    rdx
   14004676c:	add    BYTE PTR [r8],al
   14004676f:	add    BYTE PTR [rbp+0x6e],ah
   140046772:	pop    rdi
   140046773:	push   rsi
   140046774:	rex.WB add BYTE PTR [r8],al
   140046777:	add    BYTE PTR [rbp+0x6e],ah
   14004677a:	pop    rdi
   14004677b:	push   rbp
   14004677c:	push   rbx
   14004677d:	pop    rdi
   14004677e:	push   rax
   14004677f:	rex.WRXB push r11
   140046781:	rex.WB pop r8
   140046783:	add    BYTE PTR [rbp+0x6e],ah
   140046786:	pop    rdi
   140046787:	push   rsp
   140046788:	push   rsp
   140046789:	add    BYTE PTR [rax],al
   14004678b:	add    BYTE PTR [rbp+0x6e],ah
   14004678e:	pop    rdi
   14004678f:	push   rbx
   140046790:	rex.RXB add BYTE PTR [r8],r8b
   140046793:	add    BYTE PTR [rbp+0x6e],ah
   140046796:	pop    rdi
   140046797:	push   rax
   140046798:	rex.W add BYTE PTR [rax],al
   14004679b:	add    BYTE PTR [rbp+0x6e],ah
   14004679e:	pop    rdi
   14004679f:	rex.WRX pop rdx
   1400467a1:	add    BYTE PTR [rax],al
   1400467a3:	add    BYTE PTR [rbp+0x6e],ah
   1400467a6:	pop    rdi
   1400467a7:	rex.WRB pop r9
   1400467a9:	add    BYTE PTR [rax],al
   1400467ab:	add    BYTE PTR [rbp+0x6e],ah
   1400467ae:	pop    rdi
   1400467af:	rex.WX
   1400467b0:	rex.WRB add BYTE PTR [r8],r8b
   1400467b3:	add    BYTE PTR [rbp+0x6e],ah
   1400467b6:	pop    rdi
   1400467b7:	rex.WB
   1400467b8:	rex.WRX add BYTE PTR [rax],r8b
   1400467bb:	add    BYTE PTR [rbp+0x6e],ah
   1400467be:	pop    rdi
   1400467bf:	rex.WB
   1400467c0:	add    BYTE PTR [r8],r8b
   1400467c3:	add    BYTE PTR [rbp+0x6e],ah
   1400467c6:	pop    rdi
   1400467c7:	rex.RXB
   1400467c8:	rex.X add BYTE PTR [rax],al
   1400467cb:	add    BYTE PTR [rbp+0x6e],ah
   1400467ce:	pop    rdi
   1400467cf:	rex.XB
   1400467d0:	add    BYTE PTR [r8],al
   1400467d3:	add    BYTE PTR [rbp+0x6e],ah
   1400467d6:	pop    rdi
   1400467d7:	rex.X pop rdx
   1400467d9:	add    BYTE PTR [rax],al
   1400467db:	add    BYTE PTR [rbp+0x6e],ah
   1400467de:	pop    rdi
   1400467df:	push   r13
   1400467e1:	add    BYTE PTR [rax],al
   1400467e3:	add    BYTE PTR [rbp+0x6e],ah
   1400467e6:	add    BYTE PTR [rax],al
   1400467e8:	gs ins BYTE PTR es:[rdi],dx
   1400467ea:	pop    rdi
   1400467eb:	rex.RXB push r10
   1400467ed:	add    BYTE PTR [rax],al
   1400467ef:	add    BYTE PTR [rbp+0x6c],ah
   1400467f2:	add    BYTE PTR [rax],al
   1400467f4:	fs jbe 0x140046856
   1400467f7:	rex.WRB push r14
   1400467f9:	add    BYTE PTR [rax],al
   1400467fb:	add    BYTE PTR [rsi+rsi*2+0x0],ah
   1400467ff:	add    BYTE PTR [rbp+riz*2+0x40],ah
   140046803:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140046806:	ins    BYTE PTR es:[rdi],dx
   140046807:	(bad)  
   140046808:	je     0x140046873
   14004680a:	outs   dx,DWORD PTR ds:[rsi]
   14004680b:	outs   dx,BYTE PTR ds:[rsi]
   14004680c:	cmp    eax,0x6e6f6870
   140046811:	gs (bad) 
   140046813:	outs   dx,DWORD PTR ds:[rsi]
   140046814:	outs   dx,DWORD PTR ds:[rsi]
   140046815:	imul   eax,DWORD PTR [rax],0x0
   140046818:	fs gs pop rdi
   14004681b:	rex.R
   14004681c:	rex.RB
   14004681d:	rex movsxd ebp,DWORD PTR [rdi+0x6c]
   140046821:	ins    BYTE PTR es:[rdi],dx
   140046822:	(bad)  
   140046823:	je     0x14004688e
   140046825:	outs   dx,DWORD PTR ds:[rsi]
   140046826:	outs   dx,BYTE PTR ds:[rsi]
   140046827:	cmp    eax,0x6e6f6870
   14004682c:	gs (bad) 
   14004682e:	outs   dx,DWORD PTR ds:[rsi]
   14004682f:	outs   dx,DWORD PTR ds:[rsi]
   140046830:	imul   eax,DWORD PTR [rax],0x0
   140046833:	add    BYTE PTR [rbp+riz*2+0x5f],ah
   140046837:	rex.WR push rbp
   140046839:	add    BYTE PTR [rax],al
   14004683b:	add    BYTE PTR [rbp+riz*2+0x5f],ah
   14004683f:	rex.WR
   140046840:	rex.WB add BYTE PTR [r8],al
   140046843:	add    BYTE PTR [rbp+riz*2+0x5f],ah
   140046847:	rex.R
   140046848:	add    BYTE PTR [r8],r8b
   14004684b:	add    BYTE PTR [rbp+riz*2+0x5f],ah
   14004684f:	rex.XB
   140046850:	rex.W add BYTE PTR [rax],al
   140046853:	add    BYTE PTR [rbp+riz*2+0x5f],ah
   140046857:	push   r12
   140046859:	add    BYTE PTR [rax],al
   14004685b:	add    BYTE PTR [rcx+riz*2+0x5f],ah
   14004685f:	rex.R
   140046860:	rex.WXB add BYTE PTR [r8],al
   140046863:	add    BYTE PTR [rcx+riz*2+0x0],ah
   140046867:	add    BYTE PTR [rbx+0x79],ah
   14004686a:	pop    rdi
   14004686b:	rex.RXB
   14004686c:	rex.X add BYTE PTR [rax],al
   14004686f:	add    BYTE PTR [rbx+0x79],ah
   140046872:	add    BYTE PTR [rax],al
   140046874:	movsxd esi,DWORD PTR [rbx+0x5f]
   140046877:	rex.XB pop r10
   140046879:	add    BYTE PTR [rax],al
   14004687b:	add    BYTE PTR [rbx+0x73],ah
   14004687e:	add    BYTE PTR [rax],al
   140046880:	movsxd ebp,DWORD PTR [rax+0x72]
   140046883:	pop    rdi
   140046884:	push   rbp
   140046885:	push   rbx
   140046886:	add    BYTE PTR [rax],al
   140046888:	movsxd ebp,DWORD PTR [rax+0x72]
   14004688b:	add    BYTE PTR [rbx+0x6f],ah
   14004688e:	pop    rdi
   14004688f:	rex.RX push rdx
   140046891:	add    BYTE PTR [rax],al
   140046893:	add    BYTE PTR [rbx+0x6f],ah
   140046896:	add    BYTE PTR [rax],al
   140046898:	movsxd esp,DWORD PTR [rcx+0x5f]
   14004689b:	rex.RB push r11
   14004689d:	add    BYTE PTR [rax],al
   14004689f:	add    BYTE PTR [rdx+0x72],ah
   1400468a2:	pop    rdi
   1400468a3:	rex.RX push rdx
   1400468a5:	add    BYTE PTR [rax],al
   1400468a7:	add    BYTE PTR [rdx+0x72],ah
   1400468aa:	add    BYTE PTR [rax],al
   1400468ac:	(bad)  
   1400468ad:	outs   dx,DWORD PTR ds:[rsi]
   1400468ae:	pop    rdi
   1400468af:	rex.XB
   1400468b0:	rex.WRX add BYTE PTR [rax],r8b
   1400468b3:	add    BYTE PTR [rdx+0x6f],ah
   1400468b6:	pop    rdi
   1400468b7:	rex.X push rsp
   1400468b9:	add    BYTE PTR [rax],al
   1400468bb:	add    BYTE PTR [rdx+0x6f],ah
   1400468be:	add    BYTE PTR [rax],al
   1400468c0:	(bad)  
   1400468c1:	outs   dx,BYTE PTR ds:[rsi]
   1400468c2:	pop    rdi
   1400468c3:	rex.WB
   1400468c4:	rex.WRX add BYTE PTR [rax],r8b
   1400468c7:	add    BYTE PTR [rdx+0x6e],ah
   1400468ca:	pop    rdi
   1400468cb:	rex.X
   1400468cc:	add    BYTE PTR [rax],r8b
   1400468cf:	add    BYTE PTR [rdx+0x6e],ah
   1400468d2:	add    BYTE PTR [rax],al
   1400468d4:	(bad)  
   1400468d5:	addr32 pop rdi
   1400468d7:	rex.X
   1400468d8:	rex.RXB add BYTE PTR [r8],r8b
   1400468db:	add    BYTE PTR [rdx+0x67],ah
   1400468de:	add    BYTE PTR [rax],al
   1400468e0:	(bad)  
   1400468e1:	gs pop rdi
   1400468e3:	rex.X pop rcx
   1400468e5:	add    BYTE PTR [rax],al
   1400468e7:	add    BYTE PTR [rdx+0x65],ah
   1400468ea:	add    BYTE PTR [rax],al
   1400468ec:	(bad)
   1400468f1:	add    BYTE PTR [rax],al
   1400468f3:	add    BYTE PTR [rdx+0x61],ah
   1400468f6:	add    BYTE PTR [rax],al
   1400468f8:	(bad)  
   1400468f9:	jp     0x14004695a
   1400468fb:	pop    r10
   1400468fd:	add    BYTE PTR [rax],al
   1400468ff:	add    BYTE PTR [rcx+0x7a],ah
   140046902:	pop    rdi
   140046903:	rex.WR (bad) 
   140046905:	je     0x140046975
   140046907:	add    BYTE PTR [rcx+0x7a],ah
   14004690a:	pop    rdi
   14004690b:	rex.WR (bad) 
   14004690d:	je     0x14004697d
   14004690f:	pop    rdi
   140046910:	pop    r10
   140046912:	add    BYTE PTR [rax],al
   140046914:	add    BYTE PTR [rax],al
   140046916:	add    BYTE PTR [rax],al
   140046918:	(bad)  
   140046919:	jp     0x14004697a
   14004691b:	rex.XB jns 0x140046990
   14004691e:	ins    BYTE PTR es:[rdi],dx
   14004691f:	add    BYTE PTR [rcx+0x7a],ah
   140046922:	pop    rdi
   140046923:	rex.XB jns 0x140046998
   140046926:	ins    BYTE PTR es:[rdi],dx
   140046927:	pop    rdi
   140046928:	pop    r10
   14004692a:	add    BYTE PTR [rax],al
   14004692c:	(bad)  
   14004692d:	jp     0x14004692f
   14004692f:	add    BYTE PTR [rcx+0x72],ah
   140046932:	outs   dx,BYTE PTR ds:[rsi]
   140046933:	pop    rdi
   140046934:	rex.XB
   140046935:	rex.WR add BYTE PTR [rax],r8b
   140046938:	(bad)  
   140046939:	jb     0x1400469a9
   14004693b:	add    BYTE PTR [rcx+0x6d],ah
   14004693e:	pop    rdi
   14004693f:	rex.RB push r12
   140046941:	add    BYTE PTR [rax],al
   140046943:	add    BYTE PTR [rcx+0x6d],ah
   140046946:	add    BYTE PTR [rax],al
   140046948:	(bad)  
   140046949:	jae    0x1400469aa
   14004694b:	rex.WB
   14004694c:	rex.WRX add BYTE PTR [rax],r8b
   14004694f:	add    BYTE PTR [rcx+0x73],ah
   140046952:	add    BYTE PTR [rax],al
   140046954:	(bad)  
   140046955:	jb     0x1400469b6
   140046957:	pop    rcx
   140046958:	add    BYTE PTR [r8],r8b
   14004695b:	add    BYTE PTR [rcx+0x72],ah
   14004695e:	pop    rdi
   14004695f:	push   rsp
   140046960:	rex.WRX add BYTE PTR [rax],r8b
   140046963:	add    BYTE PTR [rcx+0x72],ah
   140046966:	pop    rdi
   140046967:	push   rbx
   140046968:	pop    rcx
   140046969:	add    BYTE PTR [rax],al
   14004696b:	add    BYTE PTR [rcx+0x72],ah
   14004696e:	pop    rdi
   14004696f:	push   rbx
   140046970:	add    BYTE PTR [r8],al
   140046973:	add    BYTE PTR [rcx+0x72],ah
   140046976:	pop    rdi
   140046977:	push   rcx
   140046978:	add    BYTE PTR [r8],al
   14004697b:	add    BYTE PTR [rcx+0x72],ah
   14004697e:	pop    rdi
   14004697f:	rex.WRXB
   140046980:	rex.WRB add BYTE PTR [r8],r8b
   140046983:	add    BYTE PTR [rcx+0x72],ah
   140046986:	pop    rdi
   140046987:	rex.WRB
   140046988:	add    BYTE PTR [r8],al
   14004698b:	add    BYTE PTR [rcx+0x72],ah
   14004698e:	pop    rdi
   14004698f:	rex.WR pop rcx
   140046991:	add    BYTE PTR [rax],al
   140046993:	add    BYTE PTR [rcx+0x72],ah
   140046996:	pop    rdi
   140046997:	rex.WR
   140046998:	rex.X add BYTE PTR [rax],al
   14004699b:	add    BYTE PTR [rcx+0x72],ah
   14004699e:	pop    rdi
   14004699f:	rex.WXB push r15
   1400469a1:	add    BYTE PTR [rax],al
   1400469a3:	add    BYTE PTR [rcx+0x72],ah
   1400469a6:	pop    rdi
   1400469a7:	rex.WX
   1400469a8:	rex.WRXB add BYTE PTR [r8],r8b
   1400469ab:	add    BYTE PTR [rcx+0x72],ah
   1400469ae:	pop    rdi
   1400469af:	rex.WB push r9
   1400469b1:	add    BYTE PTR [rax],al
   1400469b3:	add    BYTE PTR [rcx+0x72],ah
   1400469b6:	pop    rdi
   1400469b7:	rex.RB
   1400469b8:	rex.RXB add BYTE PTR [r8],r8b
   1400469bb:	add    BYTE PTR [rcx+0x72],ah
   1400469be:	pop    rdi
   1400469bf:	rex.R pop rdx
   1400469c1:	add    BYTE PTR [rax],al
   1400469c3:	add    BYTE PTR [rcx+0x72],ah
   1400469c6:	pop    rdi
   1400469c7:	rex.X
   1400469c8:	rex.W add BYTE PTR [rax],al
   1400469cb:	add    BYTE PTR [rcx+0x72],ah
   1400469ce:	pop    rdi
   1400469cf:	rex.B
   1400469d0:	add    BYTE PTR [r8],r8b
   1400469d3:	add    BYTE PTR [rcx+0x72],ah
   1400469d6:	add    BYTE PTR [rax],al
   1400469d8:	(bad)  
   1400469d9:	pop    di
   1400469db:	pop    rdx
   1400469dc:	add    BYTE PTR [r8],al
   1400469df:	add    BYTE PTR [rcx+0x66],ah
	...
   1400469ee:	add    BYTE PTR [rax],al
   1400469f0:	add    BYTE PTR ss:[rax],al
   1400469f3:	add    BYTE PTR [rax],al
   1400469f5:	add    BYTE PTR [rax],al
   1400469f7:	add    al,ah
   1400469f9:	imul   eax,DWORD PTR [rax+rax*2],0x1
   140046a00:	ss add al,0x0
   140046a03:	add    BYTE PTR [rax],al
   140046a05:	add    BYTE PTR [rax],al
   140046a07:	add    al,bl
   140046a09:	imul   eax,DWORD PTR [rax+rax*2],0x1
   140046a10:	add    DWORD PTR [rax],eax
   140046a12:	add    BYTE PTR [rax],al
   140046a14:	add    BYTE PTR [rax],al
   140046a16:	add    BYTE PTR [rax],al
   140046a18:	(bad)  
   140046a19:	imul   eax,DWORD PTR [rax+rax*2],0x1
   140046a20:	add    DWORD PTR [rax],edi
   140046a22:	add    BYTE PTR [rax],al
   140046a24:	add    BYTE PTR [rax],al
   140046a26:	add    BYTE PTR [rax],al
   140046a28:	int3   
   140046a29:	imul   eax,DWORD PTR [rax+rax*2],0x1
   140046a30:	add    DWORD PTR [rax+rax*1],edi
   140046a33:	add    BYTE PTR [rax],al
   140046a35:	add    BYTE PTR [rax],al
   140046a37:	add    ah,al
   140046a39:	imul   eax,DWORD PTR [rax+rax*2],0x1
   140046a40:	add    DWORD PTR [rax+rax*1],edx
   140046a43:	add    BYTE PTR [rax],al
   140046a45:	add    BYTE PTR [rax],al
   140046a47:	add    BYTE PTR [rcx+rbp*2+0x14004],bh
   140046a4e:	add    BYTE PTR [rax],al
   140046a50:	add    DWORD PTR [rax+rax*1],ecx
   140046a53:	add    BYTE PTR [rax],al
   140046a55:	add    BYTE PTR [rax],al
   140046a57:	add    BYTE PTR [rcx+rbp*2+0x14004],dh
   140046a5e:	add    BYTE PTR [rax],al
   140046a60:	add    DWORD PTR [rax],ecx
   140046a62:	add    BYTE PTR [rax],al
   140046a64:	add    BYTE PTR [rax],al
   140046a66:	add    BYTE PTR [rax],al
   140046a68:	lods   al,BYTE PTR ds:[rsi]
   140046a69:	imul   eax,DWORD PTR [rax+rax*2],0x1
   140046a70:	add    DWORD PTR [rax+rax*1],ebp
   140046a73:	add    BYTE PTR [rax],al
   140046a75:	add    BYTE PTR [rax],al
   140046a77:	add    BYTE PTR [rcx+rbp*2+0x14004],ah
   140046a7e:	add    BYTE PTR [rax],al
   140046a80:	add    DWORD PTR [rax+rax*1],esi
   140046a83:	add    BYTE PTR [rax],al
   140046a85:	add    BYTE PTR [rax],al
   140046a87:	add    BYTE PTR [rcx+rbp*2+0x14004],bl
   140046a8e:	add    BYTE PTR [rax],al
   140046a90:	add    DWORD PTR [rax],esi
   140046a92:	add    BYTE PTR [rax],al
   140046a94:	add    BYTE PTR [rax],al
   140046a96:	add    BYTE PTR [rax],al
   140046a98:	xchg   esp,eax
   140046a99:	imul   eax,DWORD PTR [rax+rax*2],0x1
   140046aa0:	add    DWORD PTR [rax],edx
   140046aa2:	add    BYTE PTR [rax],al
   140046aa4:	add    BYTE PTR [rax],al
   140046aa6:	add    BYTE PTR [rax],al
   140046aa8:	mov    WORD PTR [rcx+0x4],gs
   140046aab:	rex add DWORD PTR [rax],eax
   140046aae:	add    BYTE PTR [rax],al
   140046ab0:	add    DWORD PTR [rax],ebx
   140046ab2:	add    BYTE PTR [rax],al
   140046ab4:	add    BYTE PTR [rax],al
   140046ab6:	add    BYTE PTR [rax],al
   140046ab8:	test   BYTE PTR [rcx+0x4],ch
   140046abb:	rex add DWORD PTR [rax],eax
   140046abe:	add    BYTE PTR [rax],al
   140046ac0:	add    DWORD PTR [rax],esp
   140046ac2:	add    BYTE PTR [rax],al
   140046ac4:	add    BYTE PTR [rax],al
   140046ac6:	add    BYTE PTR [rax],al
   140046ac8:	jl     0x140046b33
   140046aca:	add    al,0x40
   140046acc:	add    DWORD PTR [rax],eax
   140046ace:	add    BYTE PTR [rax],al
   140046ad0:	add    DWORD PTR [rax+0x0],eax
   140046ad3:	add    BYTE PTR [rax],al
   140046ad5:	add    BYTE PTR [rax],al
   140046ad7:	add    BYTE PTR [rcx+rbp*2+0x4],dh
   140046adb:	rex add DWORD PTR [rax],eax
   140046ade:	add    BYTE PTR [rax],al
   140046ae0:	add    DWORD PTR [rax+rax*1],eax
   140046ae3:	add    BYTE PTR [rax],al
   140046ae5:	add    BYTE PTR [rax],al
   140046ae7:	add    BYTE PTR [rcx+rbp*2+0x4],ch
   140046aeb:	rex add DWORD PTR [rax],eax
   140046aee:	add    BYTE PTR [rax],al
   140046af0:	add    DWORD PTR [rax],ebp
   140046af2:	add    BYTE PTR [rax],al
   140046af4:	add    BYTE PTR [rax],al
   140046af6:	add    BYTE PTR [rax],al
   140046af8:	imul   eax,DWORD PTR fs:[rax+rax*2],0x1
   140046b00:	add    DWORD PTR [rax+rax*1],ebx
   140046b03:	add    BYTE PTR [rax],al
   140046b05:	add    BYTE PTR [rax],al
   140046b07:	add    BYTE PTR [rcx+rbp*2+0x4],bl
   140046b0b:	rex add DWORD PTR [rax],eax
   140046b0e:	add    BYTE PTR [rax],al
   140046b10:	add    DWORD PTR [rax+rax*1],esp
   140046b13:	add    BYTE PTR [rax],al
   140046b15:	add    BYTE PTR [rax],al
   140046b17:	add    BYTE PTR [rcx+rbp*2+0x4],dl
   140046b1b:	rex add DWORD PTR [rax],eax
   140046b1e:	add    BYTE PTR [rax],al
   140046b20:	rex.WRB add BYTE PTR [r8],r8b
   140046b23:	add    BYTE PTR [rax],al
   140046b25:	add    BYTE PTR [rax],al
   140046b27:	add    BYTE PTR [rax+0x69],dl
   140046b2a:	add    al,0x40
   140046b2c:	add    DWORD PTR [rax],eax
   140046b2e:	add    BYTE PTR [rax],al
   140046b30:	rex.WRB add al,0x0
   140046b33:	add    BYTE PTR [rax],al
   140046b35:	add    BYTE PTR [rax],al
   140046b37:	add    BYTE PTR [rax+0x69],cl
   140046b3a:	add    al,0x40
   140046b3c:	add    DWORD PTR [rax],eax
   140046b3e:	add    BYTE PTR [rax],al
   140046b40:	pop    rsi
   140046b41:	add    BYTE PTR [rax],al
   140046b43:	add    BYTE PTR [rax],al
   140046b45:	add    BYTE PTR [rax],al
   140046b47:	add    BYTE PTR [rcx+rbp*2+0x4],al
   140046b4b:	rex add DWORD PTR [rax],eax
   140046b4e:	add    BYTE PTR [rax],al
   140046b50:	pop    rsi
   140046b51:	add    al,0x0
   140046b53:	add    BYTE PTR [rax],al
   140046b55:	add    BYTE PTR [rax],al
   140046b57:	add    BYTE PTR [rcx+rbp*2],bh
   140046b5a:	add    al,0x40
   140046b5c:	add    DWORD PTR [rax],eax
   140046b5e:	add    BYTE PTR [rax],al
   140046b60:	jp     0x140046b62
   140046b62:	add    BYTE PTR [rax],al
   140046b64:	add    BYTE PTR [rax],al
   140046b66:	add    BYTE PTR [rax],al
   140046b68:	cmp    BYTE PTR [rcx+0x4],ch
   140046b6b:	rex add DWORD PTR [rax],eax
   140046b6e:	add    BYTE PTR [rax],al
   140046b70:	jp     0x140046b76
   140046b72:	add    BYTE PTR [rax],al
   140046b74:	add    BYTE PTR [rax],al
   140046b76:	add    BYTE PTR [rax],al
   140046b78:	xor    BYTE PTR [rcx+0x4],ch
   140046b7b:	rex add DWORD PTR [rax],eax
   140046b7e:	add    BYTE PTR [rax],al
   140046b80:	sub    al,0x0
   140046b82:	add    BYTE PTR [rax],al
   140046b84:	add    BYTE PTR [rax],al
   140046b86:	add    BYTE PTR [rax],al
   140046b88:	sub    al,0x69
   140046b8a:	add    al,0x40
   140046b8c:	add    DWORD PTR [rax],eax
   140046b8e:	add    BYTE PTR [rax],al
   140046b90:	sub    al,0x8
   140046b92:	add    BYTE PTR [rax],al
   140046b94:	add    BYTE PTR [rax],al
   140046b96:	add    BYTE PTR [rax],al
   140046b98:	and    BYTE PTR [rcx+0x4],ch
   140046b9b:	rex add DWORD PTR [rax],eax
   140046b9e:	add    BYTE PTR [rax],al
   140046ba0:	sub    al,0x74
   140046ba2:	add    BYTE PTR [rax],al
   140046ba4:	add    BYTE PTR [rax],al
   140046ba6:	add    BYTE PTR [rax],al
   140046ba8:	sbb    BYTE PTR [rcx+0x4],ch
   140046bab:	rex add DWORD PTR [rax],eax
   140046bae:	add    BYTE PTR [rax],al
   140046bb0:	sub    al,0x4
   140046bb2:	add    BYTE PTR [rax],al
   140046bb4:	add    BYTE PTR [rax],al
   140046bb6:	add    BYTE PTR [rax],al
   140046bb8:	or     BYTE PTR [rcx+0x4],ch
   140046bbb:	rex add DWORD PTR [rax],eax
   140046bbe:	add    BYTE PTR [rax],al
   140046bc0:	sub    al,0x78
   140046bc2:	add    BYTE PTR [rax],al
   140046bc4:	add    BYTE PTR [rax],al
   140046bc6:	add    BYTE PTR [rax],al
   140046bc8:	add    BYTE PTR [rcx+0x4],ch
   140046bcb:	rex add DWORD PTR [rax],eax
   140046bce:	add    BYTE PTR [rax],al
   140046bd0:	sub    al,0x4
   140046bd2:	add    BYTE PTR [rax],al
   140046bd4:	add    BYTE PTR [rax],al
   140046bd6:	add    BYTE PTR [rax],al
   140046bd8:	clc    
   140046bd9:	push   0x14004
   140046bde:	add    BYTE PTR [rax],al
   140046be0:	ins    DWORD PTR es:[rdi],dx
   140046be1:	add    BYTE PTR [rax],al
   140046be3:	add    BYTE PTR [rax],al
   140046be5:	add    BYTE PTR [rax],al
   140046be7:	add    ah,dh
   140046be9:	push   0x14004
   140046bee:	add    BYTE PTR [rax],al
   140046bf0:	ins    DWORD PTR es:[rdi],dx
   140046bf1:	add    al,0x0
   140046bf3:	add    BYTE PTR [rax],al
   140046bf5:	add    BYTE PTR [rax],al
   140046bf7:	add    ah,ch
   140046bf9:	push   0x14004
   140046bfe:	add    BYTE PTR [rax],al
   140046c00:	and    eax,DWORD PTR [rax]
   140046c02:	add    BYTE PTR [rax],al
   140046c04:	add    BYTE PTR [rax],al
   140046c06:	add    BYTE PTR [rax],al
   140046c08:	call   0x141447075
   140046c0d:	add    BYTE PTR [rax],al
   140046c0f:	add    BYTE PTR [rbx],ah
   140046c11:	add    al,0x0
   140046c13:	add    BYTE PTR [rax],al
   140046c15:	add    BYTE PTR [rax],al
   140046c17:	add    al,ah
   140046c19:	push   0x14004
   140046c1e:	add    BYTE PTR [rax],al
   140046c20:	add    al,BYTE PTR [rax]
   140046c22:	add    BYTE PTR [rax],al
   140046c24:	add    BYTE PTR [rax],al
   140046c26:	add    BYTE PTR [rax],al
   140046c28:	fsubr  QWORD PTR [rax+0x4]
   140046c2b:	rex add DWORD PTR [rax],eax
   140046c2e:	add    BYTE PTR [rax],al
   140046c30:	add    al,BYTE PTR [rax+rax*1]
   140046c33:	add    BYTE PTR [rax],al
   140046c35:	add    BYTE PTR [rax],al
   140046c37:	add    ah,dl
   140046c39:	push   0x14004
   140046c3e:	add    BYTE PTR [rax],al
   140046c40:	add    BYTE PTR [r8],r8b
   140046c43:	add    BYTE PTR [rax],al
   140046c45:	add    BYTE PTR [rax],al
   140046c47:	add    al,dl
   140046c49:	push   0x14004
   140046c4e:	add    BYTE PTR [rax],al
   140046c50:	or     BYTE PTR [r8],r8b
   140046c53:	add    BYTE PTR [rax],al
   140046c55:	add    BYTE PTR [rax],al
   140046c57:	add    al,cl
   140046c59:	push   0x14004
   140046c5e:	add    BYTE PTR [rax],al
   140046c60:	rex.RB add al,0x0
   140046c63:	add    BYTE PTR [rax],al
   140046c65:	add    BYTE PTR [rax],al
   140046c67:	add    al,al
   140046c69:	push   0x14004
   140046c6e:	add    BYTE PTR [rax],al
   140046c70:	push   rcx
   140046c71:	add    BYTE PTR [rax],al
   140046c73:	add    BYTE PTR [rax],al
   140046c75:	add    BYTE PTR [rax],al
   140046c77:	add    BYTE PTR [rax+rbp*2+0x14004],bh
   140046c7e:	add    BYTE PTR [rax],al
   140046c80:	push   rcx
   140046c81:	or     BYTE PTR [rax],al
   140046c83:	add    BYTE PTR [rax],al
   140046c85:	add    BYTE PTR [rax],al
   140046c87:	add    BYTE PTR [rax+rbp*2+0x14004],dh
   140046c8e:	add    BYTE PTR [rax],al
   140046c90:	push   rcx
   140046c91:	add    al,0x0
   140046c93:	add    BYTE PTR [rax],al
   140046c95:	add    BYTE PTR [rax],al
   140046c97:	add    BYTE PTR [rax+rbp*2+0x14004],ch
   140046c9e:	add    BYTE PTR [rax],al
   140046ca0:	jle    0x140046ca2
   140046ca2:	add    BYTE PTR [rax],al
   140046ca4:	add    BYTE PTR [rax],al
   140046ca6:	add    BYTE PTR [rax],al
   140046ca8:	test   al,0x68
   140046caa:	add    al,0x40
   140046cac:	add    DWORD PTR [rax],eax
   140046cae:	add    BYTE PTR [rax],al
   140046cb0:	jle    0x140046cb6
   140046cb2:	add    BYTE PTR [rax],al
   140046cb4:	add    BYTE PTR [rax],al
   140046cb6:	add    BYTE PTR [rax],al
   140046cb8:	movabs al,ds:0x300000001400468
   140046cc1:	add    BYTE PTR [rax],al
   140046cc3:	add    BYTE PTR [rax],al
   140046cc5:	add    BYTE PTR [rax],al
   140046cc7:	add    BYTE PTR [rdx+riz*1+0x14004],cl
   140046cce:	add    BYTE PTR [rax],al
   140046cd0:	add    eax,DWORD PTR [rax+rax*1]
   140046cd3:	add    BYTE PTR [rax],al
   140046cd5:	add    BYTE PTR [rax],al
   140046cd7:	add    BYTE PTR [rax+0x1400468],bl
   140046cdd:	add    BYTE PTR [rax],al
   140046cdf:	add    BYTE PTR [rbx+0x0],al
   140046ce5:	add    BYTE PTR [rax],al
   140046ce7:	add    BYTE PTR [rax+rbp*2+0x14004],dl
   140046cee:	add    BYTE PTR [rax],al
   140046cf0:	add    DWORD PTR [rax+rax*1],0x0
   140046cf4:	add    BYTE PTR [rax],al
   140046cf6:	add    BYTE PTR [rax],al
   140046cf8:	mov    WORD PTR [rax+0x4],gs
   140046cfb:	rex add DWORD PTR [rax],eax
   140046cfe:	add    BYTE PTR [rax],al
   140046d00:	pop    rsp
   140046d01:	add    BYTE PTR [rax],al
   140046d03:	add    BYTE PTR [rax],al
   140046d05:	add    BYTE PTR [rax],al
   140046d07:	add    BYTE PTR [rax+0x1400468],cl
   140046d0d:	add    BYTE PTR [rax],al
   140046d0f:	add    BYTE PTR [rsp+rax*1+0x0],bl
   140046d13:	add    BYTE PTR [rax],al
   140046d15:	add    BYTE PTR [rax],al
   140046d17:	add    BYTE PTR [rax+0x1400468],al
   140046d1d:	add    BYTE PTR [rax],al
   140046d1f:	add    BYTE PTR [rip+0x0],al        # 0x140046d25
   140046d25:	add    BYTE PTR [rax],al
   140046d27:	add    BYTE PTR [rax+rbp*2+0x4],bh
   140046d2b:	rex add DWORD PTR [rax],eax
   140046d2e:	add    BYTE PTR [rax],al
   140046d30:	add    eax,0x4
   140046d35:	add    BYTE PTR [rax],al
   140046d37:	add    BYTE PTR [rax+rbp*2+0x4],dh
   140046d3b:	rex add DWORD PTR [rax],eax
   140046d3e:	add    BYTE PTR [rax],al
   140046d40:	push   rdx
   140046d41:	add    BYTE PTR [rax],al
   140046d43:	add    BYTE PTR [rax],al
   140046d45:	add    BYTE PTR [rax],al
   140046d47:	add    BYTE PTR [rax+0x68],dh
   140046d4a:	add    al,0x40
   140046d4c:	add    DWORD PTR [rax],eax
   140046d4e:	add    BYTE PTR [rax],al
   140046d50:	push   rdx
   140046d51:	add    al,0x0
   140046d53:	add    BYTE PTR [rax],al
   140046d55:	add    BYTE PTR [rax],al
   140046d57:	add    BYTE PTR [rax+0x68],ch
   140046d5a:	add    al,0x40
   140046d5c:	add    DWORD PTR [rax],eax
   140046d5e:	add    BYTE PTR [rax],al
   140046d60:	(bad)  
   140046d61:	add    BYTE PTR [rax],al
   140046d63:	add    BYTE PTR [rax],al
   140046d65:	add    BYTE PTR [rax],al
   140046d67:	add    BYTE PTR [rax+rbp*2+0x4],ah
   140046d6b:	rex add DWORD PTR [rax],eax
   140046d6e:	add    BYTE PTR [rax],al
   140046d70:	(bad)  
   140046d71:	add    al,0x0
   140046d73:	add    BYTE PTR [rax],al
   140046d75:	add    BYTE PTR [rax],al
   140046d77:	add    BYTE PTR [rax+rbp*2+0x4],bl
   140046d7b:	rex add DWORD PTR [rax],eax
   140046d7e:	add    BYTE PTR [rax],al
   140046d80:	(bad)  
   140046d81:	add    BYTE PTR [rax],al
   140046d83:	add    BYTE PTR [rax],al
   140046d85:	add    BYTE PTR [rax],al
   140046d87:	add    BYTE PTR [rax+rsi*1+0x4],ch
   140046d8b:	rex add DWORD PTR [rax],eax
   140046d8e:	add    BYTE PTR [rax],al
   140046d90:	(bad)  
   140046d91:	or     al,0x0
   140046d93:	add    BYTE PTR [rax],al
   140046d95:	add    BYTE PTR [rax],al
   140046d97:	add    BYTE PTR [rax+rbp*2+0x4],dl
   140046d9b:	rex add DWORD PTR [rax],eax
   140046d9e:	add    BYTE PTR [rax],al
   140046da0:	(bad)  
   140046da1:	or     BYTE PTR [rax],al
   140046da3:	add    BYTE PTR [rax],al
   140046da5:	add    BYTE PTR [rax],al
   140046da7:	add    BYTE PTR [rax+rbp*2+0x4],cl
   140046dab:	rex add DWORD PTR [rax],eax
   140046dae:	add    BYTE PTR [rax],al
   140046db0:	(bad)  
   140046db1:	add    al,0x0
   140046db3:	add    BYTE PTR [rax],al
   140046db5:	add    BYTE PTR [rax],al
   140046db7:	add    BYTE PTR [rax+rbp*2+0x4],al
   140046dbb:	rex add DWORD PTR [rax],eax
   140046dbe:	add    BYTE PTR [rax],al
   140046dc0:	(bad)  
   140046dc1:	adc    al,0x0
   140046dc3:	add    BYTE PTR [rax],al
   140046dc5:	add    BYTE PTR [rax],al
   140046dc7:	add    BYTE PTR [rax+rbp*2],bh
   140046dca:	add    al,0x40
   140046dcc:	add    DWORD PTR [rax],eax
   140046dce:	add    BYTE PTR [rax],al
   140046dd0:	(bad)  
   140046dd1:	adc    BYTE PTR [rax],al
   140046dd3:	add    BYTE PTR [rax],al
   140046dd5:	add    BYTE PTR [rax],al
   140046dd7:	add    BYTE PTR [rax+rbp*2],dh
   140046dda:	add    al,0x40
   140046ddc:	add    DWORD PTR [rax],eax
   140046dde:	add    BYTE PTR [rax],al
   140046de0:	(bad)  
   140046de1:	add    al,0x1
   140046de3:	add    BYTE PTR [rax],al
   140046de5:	add    BYTE PTR [rax],al
   140046de7:	add    BYTE PTR [rax],bl
   140046de9:	push   0x14004
   140046dee:	add    BYTE PTR [rax],al
   140046df0:	(bad)  
   140046df1:	add    al,0x1
   140046df3:	add    BYTE PTR [rax],al
   140046df5:	add    BYTE PTR [rax],al
   140046df7:	add    BYTE PTR [rax],al
   140046df9:	push   0x14004
   140046dfe:	add    BYTE PTR [rax],al
   140046e00:	add    BYTE PTR gs:[rax],al
   140046e03:	add    BYTE PTR [rax],al
   140046e05:	add    BYTE PTR [rax],al
   140046e07:	add    ah,bh
   140046e09:	addr32 add al,0x40
   140046e0c:	add    DWORD PTR [rax],eax
   140046e0e:	add    BYTE PTR [rax],al
   140046e10:	gs add al,0x0
   140046e13:	add    BYTE PTR [rax],al
   140046e15:	add    BYTE PTR [rax],al
   140046e17:	add    ah,dh
   140046e19:	addr32 add al,0x40
   140046e1c:	add    DWORD PTR [rax],eax
   140046e1e:	add    BYTE PTR [rax],al
   140046e20:	or     BYTE PTR [rax],al
   140046e22:	add    BYTE PTR [rax],al
   140046e24:	add    BYTE PTR [rax],al
   140046e26:	add    BYTE PTR [rax],al
   140046e28:	lock addr32 add al,0x40
   140046e2c:	add    DWORD PTR [rax],eax
   140046e2e:	add    BYTE PTR [rax],al
   140046e30:	or     BYTE PTR [rax+rax*1],al
   140046e33:	add    BYTE PTR [rax],al
   140046e35:	add    BYTE PTR [rax],al
   140046e37:	add    al,ch
   140046e39:	addr32 add al,0x40
   140046e3c:	add    DWORD PTR [rax],eax
   140046e3e:	add    BYTE PTR [rax],al
   140046e40:	or     DWORD PTR [rax],eax
   140046e42:	add    BYTE PTR [rax],al
   140046e44:	add    BYTE PTR [rax],al
   140046e46:	add    BYTE PTR [rax],al
   140046e48:	in     al,0x67
   140046e4a:	add    al,0x40
   140046e4c:	add    DWORD PTR [rax],eax
   140046e4e:	add    BYTE PTR [rax],al
   140046e50:	or     DWORD PTR [rax+rax*1],ecx
   140046e53:	add    BYTE PTR [rax],al
   140046e55:	add    BYTE PTR [rax],al
   140046e57:	add    ah,bl
   140046e59:	addr32 add al,0x40
   140046e5c:	add    DWORD PTR [rax],eax
   140046e5e:	add    BYTE PTR [rax],al
   140046e60:	or     DWORD PTR [rax],ebp
   140046e62:	add    BYTE PTR [rax],al
   140046e64:	add    BYTE PTR [rax],al
   140046e66:	add    BYTE PTR [rax],al
   140046e68:	(bad)  
   140046e69:	addr32 add al,0x40
   140046e6c:	add    DWORD PTR [rax],eax
   140046e6e:	add    BYTE PTR [rax],al
   140046e70:	or     DWORD PTR [rax],edx
   140046e72:	add    BYTE PTR [rax],al
   140046e74:	add    BYTE PTR [rax],al
   140046e76:	add    BYTE PTR [rax],al
   140046e78:	int3   
   140046e79:	addr32 add al,0x40
   140046e7c:	add    DWORD PTR [rax],eax
   140046e7e:	add    BYTE PTR [rax],al
   140046e80:	or     DWORD PTR [rax],ecx
   140046e82:	add    BYTE PTR [rax],al
   140046e84:	add    BYTE PTR [rax],al
   140046e86:	add    BYTE PTR [rax],al
   140046e88:	(bad)  
   140046e89:	addr32 add al,0x40
   140046e8c:	add    DWORD PTR [rax],eax
   140046e8e:	add    BYTE PTR [rax],al
   140046e90:	or     DWORD PTR [rax],ebx
   140046e92:	add    BYTE PTR [rax],al
   140046e94:	add    BYTE PTR [rax],al
   140046e96:	add    BYTE PTR [rax],al
   140046e98:	mov    esp,0x1400467
   140046e9d:	add    BYTE PTR [rax],al
   140046e9f:	add    BYTE PTR [rcx],cl
   140046ea1:	add    BYTE PTR [rax],al
   140046ea4:	add    BYTE PTR [rax],al
   140046ea6:	add    BYTE PTR [rax],al
   140046ea8:	mov    ah,0x67
   140046eaa:	add    al,0x40
   140046eac:	add    DWORD PTR [rax],eax
   140046eae:	add    BYTE PTR [rax],al
   140046eb0:	or     DWORD PTR [rax],esp
   140046eb2:	add    BYTE PTR [rax],al
   140046eb4:	add    BYTE PTR [rax],al
   140046eb6:	add    BYTE PTR [rax],al
   140046eb8:	lods   al,BYTE PTR ds:[rsi]
   140046eb9:	addr32 add al,0x40
   140046ebc:	add    DWORD PTR [rax],eax
   140046ebe:	add    BYTE PTR [rax],al
   140046ec0:	or     DWORD PTR [rax+rax*1+0x0],eax
   140046ec4:	add    BYTE PTR [rax],al
   140046ec6:	add    BYTE PTR [rax],al
   140046ec8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046ec9:	addr32 add al,0x40
   140046ecc:	add    DWORD PTR [rax],eax
   140046ece:	add    BYTE PTR [rax],al
   140046ed0:	or     DWORD PTR [rax+rax*1],edx
   140046ed3:	add    BYTE PTR [rax],al
   140046ed5:	add    BYTE PTR [rax],al
   140046ed7:	add    BYTE PTR [rdi+riz*2+0x14004],bl
   140046ede:	add    BYTE PTR [rax],al
   140046ee0:	or     DWORD PTR [rax+rax*1],esi
   140046ee3:	add    BYTE PTR [rax],al
   140046ee5:	add    BYTE PTR [rax],al
   140046ee7:	add    BYTE PTR [rdi+riz*2+0x14004],dl
   140046eee:	add    BYTE PTR [rax],al
   140046ef0:	or     DWORD PTR [rax+0x0],ecx
   140046ef3:	add    BYTE PTR [rax],al
   140046ef5:	add    BYTE PTR [rax],al
   140046ef7:	add    BYTE PTR [rdi+riz*2+0x14004],cl
   140046efe:	add    BYTE PTR [rax],al
   140046f00:	or     DWORD PTR [rax+rax*1],ebp
   140046f03:	add    BYTE PTR [rax],al
   140046f05:	add    BYTE PTR [rax],al
   140046f07:	add    BYTE PTR [rdi+riz*2+0x14004],al
   140046f0e:	add    BYTE PTR [rax],al
   140046f10:	or     DWORD PTR [rax+rax*1],eax
   140046f13:	add    BYTE PTR [rax],al
   140046f15:	add    BYTE PTR [rax],al
   140046f17:	add    BYTE PTR [rsp+rbp*8+0x3],ch
   140046f1b:	rex add DWORD PTR [rax],eax
   140046f1e:	add    BYTE PTR [rax],al
   140046f20:	jg     0x140046f22
   140046f22:	add    BYTE PTR [rax],al
   140046f24:	add    BYTE PTR [rax],al
   140046f26:	add    BYTE PTR [rax],al
   140046f28:	js     0x140046f91
   140046f2a:	add    al,0x40
   140046f2c:	add    DWORD PTR [rax],eax
   140046f2e:	add    BYTE PTR [rax],al
   140046f30:	or     DWORD PTR [rax+rax*1],esp
   140046f33:	add    BYTE PTR [rax],al
   140046f35:	add    BYTE PTR [rax],al
   140046f37:	add    BYTE PTR [rax+0x67],dh
   140046f3a:	add    al,0x40
   140046f3c:	add    DWORD PTR [rax],eax
   140046f3e:	add    BYTE PTR [rax],al
   140046f40:	or     DWORD PTR [rax+rax*1],ebx
   140046f43:	add    BYTE PTR [rax],al
   140046f45:	add    BYTE PTR [rax],al
   140046f47:	add    BYTE PTR [rax+0x67],ch
   140046f4a:	add    al,0x40
   140046f4c:	add    DWORD PTR [rax],eax
   140046f4e:	add    BYTE PTR [rax],al
   140046f50:	or     DWORD PTR [rax],esi
   140046f52:	add    BYTE PTR [rax],al
   140046f54:	add    BYTE PTR [rax],al
   140046f56:	add    BYTE PTR [rax],al
   140046f58:	(bad)  
   140046f59:	addr32 add al,0x40
   140046f5c:	add    DWORD PTR [rax],eax
   140046f5e:	add    BYTE PTR [rax],al
   140046f60:	or     DWORD PTR [rax+rax*1],esp
   140046f63:	add    BYTE PTR [rax],al
   140046f65:	add    BYTE PTR [rax],al
   140046f67:	add    BYTE PTR [rax+0x67],bl
   140046f6a:	add    al,0x40
   140046f6c:	add    DWORD PTR [rax],eax
   140046f6e:	add    BYTE PTR [rax],al
   140046f70:	or     DWORD PTR [rax+rax*1],eax
   140046f73:	add    BYTE PTR [rax],al
   140046f75:	add    BYTE PTR [rax],al
   140046f77:	add    BYTE PTR [rax+0x67],dl
   140046f7a:	add    al,0x40
   140046f7c:	add    DWORD PTR [rax],eax
   140046f7e:	add    BYTE PTR [rax],al
   140046f80:	or     DWORD PTR [rax+rax*1],eax
   140046f83:	add    BYTE PTR [rax],al
   140046f85:	add    BYTE PTR [rax],al
   140046f87:	add    BYTE PTR [rax+0x67],cl
   140046f8a:	add    al,0x40
   140046f8c:	add    DWORD PTR [rax],eax
   140046f8e:	add    BYTE PTR [rax],al
   140046f90:	or     DWORD PTR [rax+rax*1],eax
   140046f93:	add    BYTE PTR [rax],al
   140046f95:	add    BYTE PTR [rax],al
   140046f97:	add    BYTE PTR [rax+0x67],al
   140046f9a:	add    al,0x40
   140046f9c:	add    DWORD PTR [rax],eax
   140046f9e:	add    BYTE PTR [rax],al
   140046fa0:	or     DWORD PTR [rax+rax*1],eax
   140046fa3:	add    BYTE PTR [rax],al
   140046fa5:	add    BYTE PTR [rax],al
   140046fa7:	add    BYTE PTR [rax],bh
   140046fa9:	addr32 add al,0x40
   140046fac:	add    DWORD PTR [rax],eax
   140046fae:	add    BYTE PTR [rax],al
   140046fb0:	or     DWORD PTR [rax+rax*1],eax
   140046fb3:	add    BYTE PTR [rax],al
   140046fb5:	add    BYTE PTR [rax],al
   140046fb7:	add    BYTE PTR [rax],dh
   140046fb9:	addr32 add al,0x40
   140046fbc:	add    DWORD PTR [rax],eax
   140046fbe:	add    BYTE PTR [rax],al
   140046fc0:	jg     0x140046fc2
   140046fc2:	add    BYTE PTR [rax],al
   140046fc4:	add    BYTE PTR [rax],al
   140046fc6:	add    BYTE PTR [rax],al
   140046fc8:	js     0x140047031
   140046fca:	add    al,0x40
   140046fcc:	add    DWORD PTR [rax],eax
   140046fce:	add    BYTE PTR [rax],al
   140046fd0:	or     al,BYTE PTR [rax]
   140046fd2:	add    BYTE PTR [rax],al
   140046fd4:	add    BYTE PTR [rax],al
   140046fd6:	add    BYTE PTR [rax],al
   140046fd8:	sub    al,0x67
   140046fda:	add    al,0x40
   140046fdc:	add    DWORD PTR [rax],eax
   140046fde:	add    BYTE PTR [rax],al
   140046fe0:	or     ch,BYTE PTR [rax+rax*1]
   140046fe3:	add    BYTE PTR [rax],al
   140046fe5:	add    BYTE PTR [rax],al
   140046fe7:	add    BYTE PTR [rdi+riz*2],ah
   140046fea:	add    al,0x40
   140046fec:	add    DWORD PTR [rax],eax
   140046fee:	add    BYTE PTR [rax],al
   140046ff0:	or     al,BYTE PTR [rax+0x0]
   140046ff3:	add    BYTE PTR [rax],al
   140046ff5:	add    BYTE PTR [rax],al
   140046ff7:	add    BYTE PTR [rdi+riz*2],bl
   140046ffa:	add    al,0x40
   140046ffc:	add    DWORD PTR [rax],eax
   140046ffe:	add    BYTE PTR [rax],al
   140047000:	or     dh,BYTE PTR [rax+rax*1]
   140047003:	add    BYTE PTR [rax],al
   140047005:	add    BYTE PTR [rax],al
   140047007:	add    BYTE PTR [rdi+riz*2],dl
   14004700a:	add    al,0x40
   14004700c:	add    DWORD PTR [rax],eax
   14004700e:	add    BYTE PTR [rax],al
   140047010:	or     ah,BYTE PTR [rax+rax*1]
   140047013:	add    BYTE PTR [rax],al
   140047015:	add    BYTE PTR [rax],al
   140047017:	add    BYTE PTR [rdi+riz*2],cl
   14004701a:	add    al,0x40
   14004701c:	add    DWORD PTR [rax],eax
   14004701e:	add    BYTE PTR [rax],al
   140047020:	or     dl,BYTE PTR [rax+rax*1]
   140047023:	add    BYTE PTR [rax],al
   140047025:	add    BYTE PTR [rax],al
   140047027:	add    BYTE PTR [rdi+riz*2],al
   14004702a:	add    al,0x40
   14004702c:	add    DWORD PTR [rax],eax
   14004702e:	add    BYTE PTR [rax],al
   140047030:	or     bl,BYTE PTR [rax+rax*1]
   140047033:	add    BYTE PTR [rax],al
   140047035:	add    BYTE PTR [rax],al
   140047037:	add    ah,bh
   140047039:	data16 add al,0x40
   14004703c:	add    DWORD PTR [rax],eax
   14004703e:	add    BYTE PTR [rax],al
   140047040:	or     dh,BYTE PTR [rax]
   140047042:	add    BYTE PTR [rax],al
   140047044:	add    BYTE PTR [rax],al
   140047046:	add    BYTE PTR [rax],al
   140047048:	hlt    
   140047049:	data16 add al,0x40
   14004704c:	add    DWORD PTR [rax],eax
   14004704e:	add    BYTE PTR [rax],al
   140047050:	or     cl,BYTE PTR [rax+rax*1]
   140047053:	add    BYTE PTR [rax],al
   140047055:	add    BYTE PTR [rax],al
   140047057:	add    ah,ch
   140047059:	data16 add al,0x40
   14004705c:	add    DWORD PTR [rax],eax
   14004705e:	add    BYTE PTR [rax],al
   140047060:	or     dl,BYTE PTR [rax]
   140047062:	add    BYTE PTR [rax],al
   140047064:	add    BYTE PTR [rax],al
   140047066:	add    BYTE PTR [rax],al
   140047068:	in     al,0x66
   14004706a:	add    al,0x40
   14004706c:	add    DWORD PTR [rax],eax
   14004706e:	add    BYTE PTR [rax],al
   140047070:	or     cl,BYTE PTR [rax+0x0]
   140047073:	add    BYTE PTR [rax],al
   140047075:	add    BYTE PTR [rax],al
   140047077:	add    ah,bl
   140047079:	data16 add al,0x40
   14004707c:	add    DWORD PTR [rax],eax
   14004707e:	add    BYTE PTR [rax],al
   140047080:	or     cl,BYTE PTR [rax]
   140047082:	add    BYTE PTR [rax],al
   140047084:	add    BYTE PTR [rax],al
   140047086:	add    BYTE PTR [rax],al
   140047088:	(bad)  
   140047089:	data16 add al,0x40
   14004708c:	add    DWORD PTR [rax],eax
   14004708e:	add    BYTE PTR [rax],al
   140047090:	or     cl,BYTE PTR [rax+rax*1+0x0]
   140047094:	add    BYTE PTR [rax],al
   140047096:	add    BYTE PTR [rax],al
   140047098:	int3   
   140047099:	data16 add al,0x40
   14004709c:	add    DWORD PTR [rax],eax
   14004709e:	add    BYTE PTR [rax],al
   1400470a0:	or     bl,BYTE PTR [rax]
   1400470a2:	add    BYTE PTR [rax],al
   1400470a4:	add    BYTE PTR [rax],al
   1400470a6:	add    BYTE PTR [rax],al
   1400470a8:	(bad)  
   1400470a9:	data16 add al,0x40
   1400470ac:	add    DWORD PTR [rax],eax
   1400470ae:	add    BYTE PTR [rax],al
   1400470b0:	or     ch,BYTE PTR [rax]
   1400470b2:	add    BYTE PTR [rax],al
   1400470b4:	add    BYTE PTR [rax],al
   1400470b6:	add    BYTE PTR [rax],al
   1400470b8:	mov    esp,0x1400466
   1400470bd:	add    BYTE PTR [rax],al
   1400470bf:	add    BYTE PTR [rdx],cl
   1400470c1:	push   rax
   1400470c2:	add    BYTE PTR [rax],al
   1400470c4:	add    BYTE PTR [rax],al
   1400470c6:	add    BYTE PTR [rax],al
   1400470c8:	mov    ah,0x66
   1400470ca:	add    al,0x40
   1400470cc:	add    DWORD PTR [rax],eax
   1400470ce:	add    BYTE PTR [rax],al
   1400470d0:	or     bh,BYTE PTR [rax+rax*1]
   1400470d3:	add    BYTE PTR [rax],al
   1400470d5:	add    BYTE PTR [rax],al
   1400470d7:	add    BYTE PTR [rsi+riz*2+0x14004],ch
   1400470de:	add    BYTE PTR [rax],al
   1400470e0:	or     al,BYTE PTR [rax+rax*1+0x0]
   1400470e4:	add    BYTE PTR [rax],al
   1400470e6:	add    BYTE PTR [rax],al
   1400470e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400470e9:	data16 add al,0x40
   1400470ec:	add    DWORD PTR [rax],eax
   1400470ee:	add    BYTE PTR [rax],al
   1400470f0:	or     dl,BYTE PTR [rax+rax*1+0x0]
   1400470f4:	add    BYTE PTR [rax],al
   1400470f6:	add    BYTE PTR [rax],al
   1400470f8:	pushf  
   1400470f9:	data16 add al,0x40
   1400470fc:	add    DWORD PTR [rax],eax
   1400470fe:	add    BYTE PTR [rax],al
   140047100:	or     bh,BYTE PTR [rax]
   140047102:	add    BYTE PTR [rax],al
   140047104:	add    BYTE PTR [rax],al
   140047106:	add    BYTE PTR [rax],al
   140047108:	xchg   esp,eax
   140047109:	data16 add al,0x40
   14004710c:	add    DWORD PTR [rax],eax
   14004710e:	add    BYTE PTR [rax],al
   140047110:	or     ah,BYTE PTR [rax]
   140047112:	add    BYTE PTR [rax],al
   140047114:	add    BYTE PTR [rax],al
   140047116:	add    BYTE PTR [rax],al
   140047118:	mov    WORD PTR [rsi+0x4],fs
   14004711b:	rex add DWORD PTR [rax],eax
   14004711e:	add    BYTE PTR [rax],al
   140047120:	or     al,BYTE PTR [rax+rax*1]
   140047123:	add    BYTE PTR [rax],al
   140047125:	add    BYTE PTR [rax],al
   140047127:	add    BYTE PTR [rax+0x66],dh
   14004712a:	add    al,0x40
   14004712c:	add    DWORD PTR [rax],eax
   14004712e:	add    BYTE PTR [rax],al
   140047130:	or     al,BYTE PTR [rax+rax*1]
   140047133:	add    BYTE PTR [rax],al
   140047135:	add    BYTE PTR [rax],al
   140047137:	add    BYTE PTR [rax+0x66],dl
   14004713a:	add    al,0x40
   14004713c:	add    DWORD PTR [rax],eax
   14004713e:	add    BYTE PTR [rax],al
   140047140:	and    eax,0x0
   140047145:	add    BYTE PTR [rax],al
   140047147:	add    BYTE PTR [rsi+riz*2+0x4],cl
   14004714b:	rex add DWORD PTR [rax],eax
   14004714e:	add    BYTE PTR [rax],al
   140047150:	and    eax,0x4
   140047155:	add    BYTE PTR [rax],al
   140047157:	add    BYTE PTR [rsi+riz*2+0x4],al
   14004715b:	rex add DWORD PTR [rax],eax
   14004715e:	add    BYTE PTR [rax],al
   140047160:	sub    eax,0x0
   140047165:	add    BYTE PTR [rax],al
   140047167:	add    BYTE PTR [rax+0x66],al
   14004716a:	add    al,0x40
   14004716c:	add    DWORD PTR [rax],eax
   14004716e:	add    BYTE PTR [rax],al
   140047170:	sub    eax,0x4
   140047175:	add    BYTE PTR [rax],al
   140047177:	add    BYTE PTR [rax],bh
   140047179:	data16 add al,0x40
   14004717c:	add    DWORD PTR [rax],eax
   14004717e:	add    BYTE PTR [rax],al
   140047180:	sub    DWORD PTR [rax],eax
   140047182:	add    BYTE PTR [rax],al
   140047184:	add    BYTE PTR [rax],al
   140047186:	add    BYTE PTR [rax],al
   140047188:	xor    al,0x66
   14004718a:	add    al,0x40
   14004718c:	add    DWORD PTR [rax],eax
   14004718e:	add    BYTE PTR [rax],al
   140047190:	sub    DWORD PTR [rax+rax*1],eax
   140047193:	add    BYTE PTR [rax],al
   140047195:	add    BYTE PTR [rax],al
   140047197:	add    BYTE PTR [rsi+riz*2],ch
   14004719a:	add    al,0x40
   14004719c:	add    DWORD PTR [rax],eax
   14004719e:	add    BYTE PTR [rax],al
   1400471a0:	mov    WORD PTR [rax+rax*1],es
   1400471a3:	add    BYTE PTR [rax],al
   1400471a5:	add    BYTE PTR [rax],al
   1400471a7:	add    BYTE PTR [rsi+riz*2],ah
   1400471aa:	add    al,0x40
   1400471ac:	add    DWORD PTR [rax],eax
   1400471ae:	add    BYTE PTR [rax],al
   1400471b0:	mov    WORD PTR [rax],es
   1400471b2:	add    BYTE PTR [rax],al
   1400471b4:	add    BYTE PTR [rax],al
   1400471b6:	add    BYTE PTR [rax],al
   1400471b8:	and    al,0x66
   1400471ba:	add    al,0x40
   1400471bc:	add    DWORD PTR [rax],eax
   1400471be:	add    BYTE PTR [rax],al
   1400471c0:	mov    WORD PTR [rax+rax*1],es
   1400471c3:	add    BYTE PTR [rax],al
   1400471c5:	add    BYTE PTR [rax],al
   1400471c7:	add    BYTE PTR [rsi+riz*2],ah
   1400471ca:	add    al,0x40
   1400471cc:	add    DWORD PTR [rax],eax
   1400471ce:	add    BYTE PTR [rax],al
   1400471d0:	or     eax,DWORD PTR [rax]
   1400471d2:	add    BYTE PTR [rax],al
   1400471d4:	add    BYTE PTR [rax],al
   1400471d6:	add    BYTE PTR [rax],al
   1400471d8:	and    BYTE PTR [rsi+0x4],ah
   1400471db:	rex add DWORD PTR [rax],eax
   1400471de:	add    BYTE PTR [rax],al
   1400471e0:	or     eax,DWORD PTR [rax+rax*1]
   1400471e3:	add    BYTE PTR [rax],al
   1400471e5:	add    BYTE PTR [rax],al
   1400471e7:	add    BYTE PTR [rax],bl
   1400471e9:	data16 add al,0x40
   1400471ec:	add    DWORD PTR [rax],eax
   1400471ee:	add    BYTE PTR [rax],al
   1400471f0:	add    BYTE PTR fs:[rax],al
   1400471f3:	add    BYTE PTR [rax],al
   1400471f5:	add    BYTE PTR [rax],al
   1400471f7:	add    BYTE PTR [rsi+riz*2],dl
   1400471fa:	add    al,0x40
   1400471fc:	add    DWORD PTR [rax],eax
   1400471fe:	add    BYTE PTR [rax],al
   140047200:	fs add al,0x0
   140047203:	add    BYTE PTR [rax],al
   140047205:	add    BYTE PTR [rax],al
   140047207:	add    BYTE PTR [rsi+riz*2],cl
   14004720a:	add    al,0x40
   14004720c:	add    DWORD PTR [rax],eax
   14004720e:	add    BYTE PTR [rax],al
   140047210:	cmp    BYTE PTR [rax],al
   140047212:	add    BYTE PTR [rax],al
   140047214:	add    BYTE PTR [rax],al
   140047216:	add    BYTE PTR [rax],al
   140047218:	or     BYTE PTR [rsi+0x4],ah
   14004721b:	rex add DWORD PTR [rax],eax
   14004721e:	add    BYTE PTR [rax],al
   140047220:	cmp    BYTE PTR [rax+rax*1],al
   140047223:	add    BYTE PTR [rax],al
   140047225:	add    BYTE PTR [rax],al
   140047227:	add    BYTE PTR [rax],al
   140047229:	data16 add al,0x40
   14004722c:	add    DWORD PTR [rax],eax
   14004722e:	add    BYTE PTR [rax],al
   140047230:	or     al,0x0
   140047232:	add    BYTE PTR [rax],al
   140047234:	add    BYTE PTR [rax],al
   140047236:	add    BYTE PTR [rax],al
   140047238:	mov    al,0x2f
   14004723a:	add    al,0x40
   14004723c:	add    DWORD PTR [rax],eax
   14004723e:	add    BYTE PTR [rax],al
   140047240:	or     al,0x8
   140047242:	add    BYTE PTR [rax],al
   140047244:	add    BYTE PTR [rax],al
   140047246:	add    BYTE PTR [rax],al
   140047248:	clc    
   140047249:	gs add al,0x40
   14004724c:	add    DWORD PTR [rax],eax
   14004724e:	add    BYTE PTR [rax],al
   140047250:	or     al,0xc
   140047252:	add    BYTE PTR [rax],al
   140047254:	add    BYTE PTR [rax],al
   140047256:	add    BYTE PTR [rax],al
   140047258:	lock gs add al,0x40
   14004725c:	add    DWORD PTR [rax],eax
   14004725e:	add    BYTE PTR [rax],al
   140047260:	or     al,0x24
   140047262:	add    BYTE PTR [rax],al
   140047264:	add    BYTE PTR [rax],al
   140047266:	add    BYTE PTR [rax],al
   140047268:	call   0x1414476d2
   14004726d:	add    BYTE PTR [rax],al
   14004726f:	add    BYTE PTR [rax+rdx*1],cl
   140047272:	add    BYTE PTR [rax],al
   140047274:	add    BYTE PTR [rax],al
   140047276:	add    BYTE PTR [rax],al
   140047278:	loopne 0x1400472df
   14004727a:	add    al,0x40
   14004727c:	add    DWORD PTR [rax],eax
   14004727e:	add    BYTE PTR [rax],al
   140047280:	or     al,0x30
   140047282:	add    BYTE PTR [rax],al
   140047284:	add    BYTE PTR [rax],al
   140047286:	add    BYTE PTR [rax],al
   140047288:	fsub   DWORD PTR [rbp+0x4]
   14004728b:	rex add DWORD PTR [rax],eax
   14004728e:	add    BYTE PTR [rax],al
   140047290:	or     al,0x2c
   140047292:	add    BYTE PTR [rax],al
   140047294:	add    BYTE PTR [rax],al
   140047296:	add    BYTE PTR [rax],al
   140047298:	shl    BYTE PTR [rbp+0x4],1
   14004729b:	rex add DWORD PTR [rax],eax
   14004729e:	add    BYTE PTR [rax],al
   1400472a0:	or     al,0x4
   1400472a2:	add    BYTE PTR [rax],al
   1400472a4:	add    BYTE PTR [rax],al
   1400472a6:	add    BYTE PTR [rax],al
   1400472a8:	enter  0x465,0x40
   1400472ac:	add    DWORD PTR [rax],eax
   1400472ae:	add    BYTE PTR [rax],al
   1400472b0:	or     al,0x3c
   1400472b2:	add    BYTE PTR [rax],al
   1400472b4:	add    BYTE PTR [rax],al
   1400472b6:	add    BYTE PTR [rax],al
   1400472b8:	shl    BYTE PTR [rbp+0x4],0x40
   1400472bc:	add    DWORD PTR [rax],eax
   1400472be:	add    BYTE PTR [rax],al
   1400472c0:	or     al,0x14
   1400472c2:	add    BYTE PTR [rax],al
   1400472c4:	add    BYTE PTR [rax],al
   1400472c6:	add    BYTE PTR [rax],al
   1400472c8:	mov    eax,0x1400465
   1400472cd:	add    BYTE PTR [rax],al
   1400472cf:	add    BYTE PTR [rax+rdi*1],cl
   1400472d2:	add    BYTE PTR [rax],al
   1400472d4:	add    BYTE PTR [rax],al
   1400472d6:	add    BYTE PTR [rax],al
   1400472d8:	mov    al,0x65
   1400472da:	add    al,0x40
   1400472dc:	add    DWORD PTR [rax],eax
   1400472de:	add    BYTE PTR [rax],al
   1400472e0:	or     al,0x18
   1400472e2:	add    BYTE PTR [rax],al
   1400472e4:	add    BYTE PTR [rax],al
   1400472e6:	add    BYTE PTR [rax],al
   1400472e8:	test   al,0x65
   1400472ea:	add    al,0x40
   1400472ec:	add    DWORD PTR [rax],eax
   1400472ee:	add    BYTE PTR [rax],al
   1400472f0:	or     al,0x34
   1400472f2:	add    BYTE PTR [rax],al
   1400472f4:	add    BYTE PTR [rax],al
   1400472f6:	add    BYTE PTR [rax],al
   1400472f8:	movabs al,ds:0xc00000001400465
   140047301:	and    BYTE PTR [rax],al
   140047303:	add    BYTE PTR [rax],al
   140047305:	add    BYTE PTR [rax],al
   140047307:	add    BYTE PTR [rax+0x1400465],bl
   14004730d:	add    BYTE PTR [rax],al
   14004730f:	add    BYTE PTR [rax+rbp*1],cl
   140047312:	add    BYTE PTR [rax],al
   140047314:	add    BYTE PTR [rax],al
   140047316:	add    BYTE PTR [rax],al
   140047318:	nop
   140047319:	gs add al,0x40
   14004731c:	add    DWORD PTR [rax],eax
   14004731e:	add    BYTE PTR [rax],al
   140047320:	(bad)  
   140047321:	add    BYTE PTR [rax],al
   140047323:	add    BYTE PTR [rax],al
   140047325:	add    BYTE PTR [rax],al
   140047327:	add    BYTE PTR [rbp+riz*2+0x14004],cl
   14004732e:	add    BYTE PTR [rax],al
   140047330:	(bad)  
   140047331:	add    al,0x0
   140047333:	add    BYTE PTR [rax],al
   140047335:	add    BYTE PTR [rax],al
   140047337:	add    BYTE PTR [rbp+riz*2+0x14004],al
   14004733e:	add    BYTE PTR [rax],al
   140047340:	cmp    al,0x0
   140047342:	add    BYTE PTR [rax],al
   140047344:	add    BYTE PTR [rax],al
   140047346:	add    BYTE PTR [rax],al
   140047348:	and    BYTE PTR [rbp+0x4],0x40
   14004734c:	add    DWORD PTR [rax],eax
   14004734e:	add    BYTE PTR [rax],al
   140047350:	cmp    al,0x8
   140047352:	add    BYTE PTR [rax],al
   140047354:	add    BYTE PTR [rax],al
   140047356:	add    BYTE PTR [rax],al
   140047358:	js     0x1400473bf
   14004735a:	add    al,0x40
   14004735c:	add    DWORD PTR [rax],eax
   14004735e:	add    BYTE PTR [rax],al
   140047360:	xchg   ecx,eax
   140047361:	add    BYTE PTR [rax],al
   140047363:	add    BYTE PTR [rax],al
   140047365:	add    BYTE PTR [rax],al
   140047367:	add    BYTE PTR [rbp+riz*2+0x4],dh
   14004736b:	rex add DWORD PTR [rax],eax
   14004736e:	add    BYTE PTR [rax],al
   140047370:	xchg   ecx,eax
   140047371:	add    al,0x0
   140047373:	add    BYTE PTR [rax],al
   140047375:	add    BYTE PTR [rax],al
   140047377:	add    BYTE PTR [rbp+riz*2+0x4],ch
   14004737b:	rex add DWORD PTR [rax],eax
   14004737e:	add    BYTE PTR [rax],al
   140047380:	push   rsi
   140047381:	add    BYTE PTR [rax],al
   140047383:	add    BYTE PTR [rax],al
   140047385:	add    BYTE PTR [rax],al
   140047387:	add    BYTE PTR [rax+0x65],ch
   14004738a:	add    al,0x40
   14004738c:	add    DWORD PTR [rax],eax
   14004738e:	add    BYTE PTR [rax],al
   140047390:	push   rsi
   140047391:	add    al,0x0
   140047393:	add    BYTE PTR [rax],al
   140047395:	add    BYTE PTR [rax],al
   140047397:	add    BYTE PTR [rax+0x65],ah
   14004739a:	add    al,0x40
   14004739c:	add    DWORD PTR [rax],eax
   14004739e:	add    BYTE PTR [rax],al
   1400473a0:	rex.RXB add BYTE PTR [r8],r8b
   1400473a3:	add    BYTE PTR [rax],al
   1400473a5:	add    BYTE PTR [rax],al
   1400473a7:	add    BYTE PTR [rbp+riz*2+0x4],bl
   1400473ab:	rex add DWORD PTR [rax],eax
   1400473ae:	add    BYTE PTR [rax],al
   1400473b0:	rex.RXB add al,0x0
   1400473b3:	add    BYTE PTR [rax],al
   1400473b5:	add    BYTE PTR [rax],al
   1400473b7:	add    BYTE PTR [rbp+riz*2+0x4],dl
   1400473bb:	rex add DWORD PTR [rax],eax
   1400473be:	add    BYTE PTR [rax],al
   1400473c0:	je     0x1400473c2
   1400473c2:	add    BYTE PTR [rax],al
   1400473c4:	add    BYTE PTR [rax],al
   1400473c6:	add    BYTE PTR [rax],al
   1400473c8:	push   rax
   1400473c9:	gs add al,0x40
   1400473cc:	add    DWORD PTR [rax],eax
   1400473ce:	add    BYTE PTR [rax],al
   1400473d0:	je     0x1400473d6
   1400473d2:	add    BYTE PTR [rax],al
   1400473d4:	add    BYTE PTR [rax],al
   1400473d6:	add    BYTE PTR [rax],al
   1400473d8:	rex.W
   1400473d9:	gs add al,0x40
   1400473dc:	add    DWORD PTR [rax],eax
   1400473de:	add    BYTE PTR [rax],al
   1400473e0:	test   BYTE PTR [rax],al
   1400473e2:	add    BYTE PTR [rax],al
   1400473e4:	add    BYTE PTR [rax],al
   1400473e6:	add    BYTE PTR [rax],al
   1400473e8:	rex.R
   1400473e9:	gs add al,0x40
   1400473ec:	add    DWORD PTR [rax],eax
   1400473ee:	add    BYTE PTR [rax],al
   1400473f0:	test   BYTE PTR [rax+rax*1],al
   1400473f3:	add    BYTE PTR [rax],al
   1400473f5:	add    BYTE PTR [rax],al
   1400473f7:	add    BYTE PTR [riz*2+0x14004],bh
   1400473fe:	add    BYTE PTR [rax],al
   140047400:	push   0x0
   140047405:	add    BYTE PTR [rax],al
   140047407:	add    BYTE PTR [rax],bh
   140047409:	gs add al,0x40
   14004740c:	add    DWORD PTR [rax],eax
   14004740e:	add    BYTE PTR [rax],al
   140047410:	push   0x7c
   140047415:	add    BYTE PTR [rax],al
   140047417:	add    BYTE PTR [rax],dh
   140047419:	gs add al,0x40
   14004741c:	add    DWORD PTR [rax],eax
   14004741e:	add    BYTE PTR [rax],al
   140047420:	push   0x4
   140047425:	add    BYTE PTR [rax],al
   140047427:	add    BYTE PTR [rax],ah
   140047429:	gs add al,0x40
   14004742c:	add    DWORD PTR [rax],eax
   14004742e:	add    BYTE PTR [rax],al
   140047430:	jne    0x140047432
   140047432:	add    BYTE PTR [rax],al
   140047434:	add    BYTE PTR [rax],al
   140047436:	add    BYTE PTR [rax],al
   140047438:	sbb    BYTE PTR [rbp+0x4],ah
   14004743b:	rex add DWORD PTR [rax],eax
   14004743e:	add    BYTE PTR [rax],al
   140047440:	jne    0x140047446
   140047442:	add    BYTE PTR [rax],al
   140047444:	add    BYTE PTR [rax],al
   140047446:	add    BYTE PTR [rax],al
   140047448:	adc    BYTE PTR [rbp+0x4],ah
   14004744b:	rex add DWORD PTR [rax],eax
   14004744e:	add    BYTE PTR [rax],al
   140047450:	or     eax,0x0
   140047455:	add    BYTE PTR [rax],al
   140047457:	add    BYTE PTR [riz*2+0x14004],cl
   14004745e:	add    BYTE PTR [rax],al
   140047460:	or     eax,0x4
   140047465:	add    BYTE PTR [rax],al
   140047467:	add    BYTE PTR [riz*2+0x14004],al
   14004746e:	add    BYTE PTR [rax],al
   140047470:	cmp    DWORD PTR [rax],eax
   140047472:	add    BYTE PTR [rax],al
   140047474:	add    BYTE PTR [rax],al
   140047476:	add    BYTE PTR [rax],al
   140047478:	add    BYTE PTR [rbp+0x4],ah
   14004747b:	rex add DWORD PTR [rax],eax
   14004747e:	add    BYTE PTR [rax],al
   140047480:	cmp    DWORD PTR [rax+rax*1],eax
   140047483:	add    BYTE PTR [rax],al
   140047485:	add    BYTE PTR [rax],al
   140047487:	add    al,bh
   140047489:	fs add al,0x40
   14004748c:	add    DWORD PTR [rax],eax
   14004748e:	add    BYTE PTR [rax],al
   140047490:	sbb    al,BYTE PTR [rax]
   140047492:	add    BYTE PTR [rax],al
   140047494:	add    BYTE PTR [rax],al
   140047496:	add    BYTE PTR [rax],al
   140047498:	hlt    
   140047499:	fs add al,0x40
   14004749c:	add    DWORD PTR [rax],eax
   14004749e:	add    BYTE PTR [rax],al
   1400474a0:	sbb    dl,BYTE PTR [rax+rax*1]
   1400474a3:	add    BYTE PTR [rax],al
   1400474a5:	add    BYTE PTR [rax],al
   1400474a7:	add    al,ch
   1400474a9:	fs add al,0x40
   1400474ac:	add    DWORD PTR [rax],eax
   1400474ae:	add    BYTE PTR [rax],al
   1400474b0:	sbb    ch,BYTE PTR [rax+0x0]
   1400474b3:	add    BYTE PTR [rax],al
   1400474b5:	add    BYTE PTR [rax],al
   1400474b7:	add    al,ah
   1400474b9:	fs add al,0x40
   1400474bc:	add    DWORD PTR [rax],eax
   1400474be:	add    BYTE PTR [rax],al
   1400474c0:	sbb    dl,BYTE PTR [rax+rax*1]
   1400474c3:	add    BYTE PTR [rax],al
   1400474c5:	add    BYTE PTR [rax],al
   1400474c7:	add    al,bl
   1400474c9:	fs add al,0x40
   1400474cc:	add    DWORD PTR [rax],eax
   1400474ce:	add    BYTE PTR [rax],al
   1400474d0:	sbb    bh,BYTE PTR [rax+0x0]
   1400474d3:	add    BYTE PTR [rax],al
   1400474d5:	add    BYTE PTR [rax],al
   1400474d7:	add    ah,dl
   1400474d9:	fs add al,0x40
   1400474dc:	add    DWORD PTR [rax],eax
   1400474de:	add    BYTE PTR [rax],al
   1400474e0:	sbb    ah,BYTE PTR [rax]
   1400474e2:	add    BYTE PTR [rax],al
   1400474e4:	add    BYTE PTR [rax],al
   1400474e6:	add    BYTE PTR [rax],al
   1400474e8:	enter  0x464,0x40
   1400474ec:	add    DWORD PTR [rax],eax
   1400474ee:	add    BYTE PTR [rax],al
   1400474f0:	sbb    ah,BYTE PTR [rax+rax*1+0x0]
   1400474f4:	add    BYTE PTR [rax],al
   1400474f6:	add    BYTE PTR [rax],al
   1400474f8:	shl    BYTE PTR [rsp+rax*1+0x40],0x1
   1400474fd:	add    BYTE PTR [rax],al
   1400474ff:	add    BYTE PTR [rdx],bl
   140047501:	adc    BYTE PTR [rax],al
   140047503:	add    BYTE PTR [rax],al
   140047505:	add    BYTE PTR [rax],al
   140047507:	add    BYTE PTR [rsp+riz*2+0x14004],dh
   14004750e:	add    BYTE PTR [rax],al
   140047510:	sbb    al,BYTE PTR [rax+rax*1]
   140047513:	add    BYTE PTR [rax],al
   140047515:	add    BYTE PTR [rax],al
   140047517:	add    BYTE PTR [rsp+riz*2+0x14004],ch
   14004751e:	add    BYTE PTR [rax],al
   140047520:	sbb    ch,BYTE PTR [rax+rax*1]
   140047523:	add    BYTE PTR [rax],al
   140047525:	add    BYTE PTR [rax],al
   140047527:	add    BYTE PTR [rax+0x1400464],ah
   14004752d:	add    BYTE PTR [rax],al
   14004752f:	add    BYTE PTR [rdx],bl
   140047531:	and    al,0x0
   140047533:	add    BYTE PTR [rax],al
   140047535:	add    BYTE PTR [rax],al
   140047537:	add    BYTE PTR [rax+0x1400464],dl
   14004753d:	add    BYTE PTR [rax],al
   14004753f:	add    BYTE PTR [rdx],bl
   140047541:	sbb    BYTE PTR [rax],al
   140047543:	add    BYTE PTR [rax],al
   140047545:	add    BYTE PTR [rax],al
   140047547:	add    BYTE PTR [rax+0x1400464],al
   14004754d:	add    BYTE PTR [rax],al
   14004754f:	add    BYTE PTR [rdx],bl
   140047551:	or     BYTE PTR [rax],al
   140047553:	add    BYTE PTR [rax],al
   140047555:	add    BYTE PTR [rax],al
   140047557:	add    BYTE PTR [rax+0x64],dh
   14004755a:	add    al,0x40
   14004755c:	add    DWORD PTR [rax],eax
   14004755e:	add    BYTE PTR [rax],al
   140047560:	sbb    dh,BYTE PTR [rax+0x0]
   140047563:	add    BYTE PTR [rax],al
   140047565:	add    BYTE PTR [rax],al
   140047567:	add    BYTE PTR [rax+0x64],ch
   14004756a:	add    al,0x40
   14004756c:	add    DWORD PTR [rax],eax
   14004756e:	add    BYTE PTR [rax],al
   140047570:	sbb    bl,BYTE PTR [rax+rax*1]
   140047573:	add    BYTE PTR [rax],al
   140047575:	add    BYTE PTR [rax],al
   140047577:	add    BYTE PTR [rax+0x64],bl
   14004757a:	add    al,0x40
   14004757c:	add    DWORD PTR [rax],eax
   14004757e:	add    BYTE PTR [rax],al
   140047580:	sbb    cl,BYTE PTR [rax+rax*1]
   140047583:	add    BYTE PTR [rax],al
   140047585:	add    BYTE PTR [rax],al
   140047587:	add    BYTE PTR [rax+0x64],cl
   14004758a:	add    al,0x40
   14004758c:	add    DWORD PTR [rax],eax
   14004758e:	add    BYTE PTR [rax],al
   140047590:	sbb    dh,BYTE PTR [rax]
   140047592:	add    BYTE PTR [rax],al
   140047594:	add    BYTE PTR [rax],al
   140047596:	add    BYTE PTR [rax],al
   140047598:	cmp    BYTE PTR [rsp+rax*1+0x40],ah
   14004759c:	add    DWORD PTR [rax],eax
   14004759e:	add    BYTE PTR [rax],al
   1400475a0:	sbb    ch,BYTE PTR [rax]
   1400475a2:	add    BYTE PTR [rax],al
   1400475a4:	add    BYTE PTR [rax],al
   1400475a6:	add    BYTE PTR [rax],al
   1400475a8:	sub    BYTE PTR [rsp+rax*1+0x40],ah
   1400475ac:	add    DWORD PTR [rax],eax
   1400475ae:	add    BYTE PTR [rax],al
   1400475b0:	sbb    ch,BYTE PTR [rax+rax*1+0x0]
   1400475b4:	add    BYTE PTR [rax],al
   1400475b6:	add    BYTE PTR [rax],al
   1400475b8:	and    BYTE PTR [rsp+rax*1+0x40],ah
   1400475bc:	add    DWORD PTR [rax],eax
   1400475be:	add    BYTE PTR [rax],al
   1400475c0:	sbb    bh,BYTE PTR [rax+rax*1+0x0]
   1400475c4:	add    BYTE PTR [rax],al
   1400475c6:	add    BYTE PTR [rax],al
   1400475c8:	sbb    BYTE PTR [rsp+rax*1+0x40],ah
   1400475cc:	add    DWORD PTR [rax],eax
   1400475ce:	add    BYTE PTR [rax],al
   1400475d0:	(bad)  
   1400475d1:	add    BYTE PTR [rax],al
   1400475d3:	add    BYTE PTR [rax],al
   1400475d5:	add    BYTE PTR [rax],al
   1400475d7:	add    ah,cl
   1400475d9:	es add al,0x40
   1400475dc:	add    DWORD PTR [rax],eax
   1400475de:	add    BYTE PTR [rax],al
   1400475e0:	(bad)  
   1400475e1:	add    al,0x0
   1400475e3:	add    BYTE PTR [rax],al
   1400475e5:	add    BYTE PTR [rax],al
   1400475e7:	add    BYTE PTR [rax],dl
   1400475e9:	fs add al,0x40
   1400475ec:	add    DWORD PTR [rax],eax
   1400475ee:	add    BYTE PTR [rax],al
   1400475f0:	sub    eax,DWORD PTR [rax]
   1400475f2:	add    BYTE PTR [rax],al
   1400475f4:	add    BYTE PTR [rax],al
   1400475f6:	add    BYTE PTR [rax],al
   1400475f8:	or     al,0x64
   1400475fa:	add    al,0x40
   1400475fc:	add    DWORD PTR [rax],eax
   1400475fe:	add    BYTE PTR [rax],al
   140047600:	sub    eax,DWORD PTR [rax+rax*1]
   140047603:	add    BYTE PTR [rax],al
   140047605:	add    BYTE PTR [rax],al
   140047607:	add    BYTE PTR [rsp+riz*2],al
   14004760a:	add    al,0x40
   14004760c:	add    DWORD PTR [rax],eax
   14004760e:	add    BYTE PTR [rax],al
   140047610:	and    DWORD PTR [rax],eax
   140047612:	add    BYTE PTR [rax],al
   140047614:	add    BYTE PTR [rax],al
   140047616:	add    BYTE PTR [rax],al
   140047618:	add    BYTE PTR [rsp+rax*1+0x40],ah
   14004761c:	add    DWORD PTR [rax],eax
   14004761e:	add    BYTE PTR [rax],al
   140047620:	and    DWORD PTR [rax+rax*1],eax
   140047623:	add    BYTE PTR [rax],al
   140047625:	add    BYTE PTR [rax],al
   140047627:	add    al,bh
   140047629:	movsxd eax,DWORD PTR [rax+rax*2]
   14004762c:	add    DWORD PTR [rax],eax
   14004762e:	add    BYTE PTR [rax],al
   140047630:	jo     0x140047632
   140047632:	add    BYTE PTR [rax],al
   140047634:	add    BYTE PTR [rax],al
   140047636:	add    BYTE PTR [rax],al
   140047638:	hlt    
   140047639:	movsxd eax,DWORD PTR [rax+rax*2]
   14004763c:	add    DWORD PTR [rax],eax
   14004763e:	add    BYTE PTR [rax],al
   140047640:	jo     0x140047646
   140047642:	add    BYTE PTR [rax],al
   140047644:	add    BYTE PTR [rax],al
   140047646:	add    BYTE PTR [rax],al
   140047648:	in     al,dx
   140047649:	movsxd eax,DWORD PTR [rax+rax*2]
   14004764c:	add    DWORD PTR [rax],eax
   14004764e:	add    BYTE PTR [rax],al
   140047650:	js     0x140047652
   140047652:	add    BYTE PTR [rax],al
   140047654:	add    BYTE PTR [rax],al
   140047656:	add    BYTE PTR [rax],al
   140047658:	call   0x141447ac0
   14004765d:	add    BYTE PTR [rax],al
   14004765f:	add    BYTE PTR [rax+0x4],bh
   140047662:	add    BYTE PTR [rax],al
   140047664:	add    BYTE PTR [rax],al
   140047666:	add    BYTE PTR [rax],al
   140047668:	loopne 0x1400476cd
   14004766a:	add    al,0x40
   14004766c:	add    DWORD PTR [rax],eax
   14004766e:	add    BYTE PTR [rax],al
   140047670:	sldt   WORD PTR [rax]
   140047673:	add    BYTE PTR [rax],al
   140047675:	add    BYTE PTR [rax],al
   140047677:	add    ah,bl
   140047679:	movsxd eax,DWORD PTR [rax+rax*2]
   14004767c:	add    DWORD PTR [rax],eax
   14004767e:	add    BYTE PTR [rax],al
   140047680:	(bad)  
   140047682:	add    BYTE PTR [rax],al
   140047684:	add    BYTE PTR [rax],al
   140047686:	add    BYTE PTR [rax],al
   140047688:	(bad)  
   140047689:	movsxd eax,DWORD PTR [rax+rax*2]
   14004768c:	add    DWORD PTR [rax],eax
   14004768e:	add    BYTE PTR [rax],al
   140047690:	adc    BYTE PTR [rax],al
   140047692:	add    BYTE PTR [rax],al
   140047694:	add    BYTE PTR [rax],al
   140047696:	add    BYTE PTR [rax],al
   140047698:	shl    BYTE PTR [rbx+0x4],1
   14004769b:	rex add DWORD PTR [rax],eax
   14004769e:	add    BYTE PTR [rax],al
   1400476a0:	adc    BYTE PTR [rax],cl
   1400476a2:	add    BYTE PTR [rax],al
   1400476a4:	add    BYTE PTR [rax],al
   1400476a6:	add    BYTE PTR [rax],al
   1400476a8:	enter  0x463,0x40
   1400476ac:	add    DWORD PTR [rax],eax
   1400476ae:	add    BYTE PTR [rax],al
   1400476b0:	adc    BYTE PTR [rax+rax*1],al
   1400476b3:	add    BYTE PTR [rax],al
   1400476b5:	add    BYTE PTR [rax],al
   1400476b7:	add    al,al
   1400476b9:	movsxd eax,DWORD PTR [rax+rax*2]
   1400476bc:	add    DWORD PTR [rax],eax
   1400476be:	add    BYTE PTR [rax],al
   1400476c0:	pop    rbp
   1400476c1:	add    BYTE PTR [rax],al
   1400476c3:	add    BYTE PTR [rax],al
   1400476c5:	add    BYTE PTR [rax],al
   1400476c7:	add    BYTE PTR [rbx+riz*2+0x14004],bh
   1400476ce:	add    BYTE PTR [rax],al
   1400476d0:	pop    rbp
   1400476d1:	add    al,0x0
   1400476d3:	add    BYTE PTR [rax],al
   1400476d5:	add    BYTE PTR [rax],al
   1400476d7:	add    BYTE PTR [rax+0x1400463],dh
   1400476dd:	add    BYTE PTR [rax],al
   1400476df:	add    BYTE PTR [rbp+0x78],bl
   1400476e2:	add    BYTE PTR [rax],al
   1400476e4:	add    BYTE PTR [rax],al
   1400476e6:	add    BYTE PTR [rax],al
   1400476e8:	test   al,0x63
   1400476ea:	add    al,0x40
   1400476ec:	add    DWORD PTR [rax],eax
   1400476ee:	add    BYTE PTR [rax],al
   1400476f0:	pop    rbp
   1400476f1:	or     BYTE PTR [rax],al
   1400476f3:	add    BYTE PTR [rax],al
   1400476f5:	add    BYTE PTR [rax],al
   1400476f7:	add    BYTE PTR [rax+0x1400463],bl
   1400476fd:	add    BYTE PTR [rax],al
   1400476ff:	add    BYTE PTR [rbp+0x7c],bl
   140047702:	add    BYTE PTR [rax],al
   140047704:	add    BYTE PTR [rax],al
   140047706:	add    BYTE PTR [rax],al
   140047708:	nop
   140047709:	movsxd eax,DWORD PTR [rax+rax*2]
   14004770c:	add    DWORD PTR [rax],eax
   14004770e:	add    BYTE PTR [rax],al
   140047710:	or     eax,0x0
   140047715:	add    BYTE PTR [rax],al
   140047717:	add    BYTE PTR [rbx+riz*2+0x14004],cl
   14004771e:	add    BYTE PTR [rax],al
   140047720:	or     eax,0x4
   140047725:	add    BYTE PTR [rax],al
   140047727:	add    BYTE PTR [rbx+riz*2+0x14004],al
   14004772e:	add    BYTE PTR [rax],al
   140047730:	adc    DWORD PTR [rax],eax
   140047732:	add    BYTE PTR [rax],al
   140047734:	add    BYTE PTR [rax],al
   140047736:	add    BYTE PTR [rax],al
   140047738:	and    BYTE PTR [rbx+0x4],0x40
   14004773c:	add    DWORD PTR [rax],eax
   14004773e:	add    BYTE PTR [rax],al
   140047740:	adc    DWORD PTR [rax+rax*1],eax
   140047743:	add    BYTE PTR [rax],al
   140047745:	add    BYTE PTR [rax],al
   140047747:	add    BYTE PTR [rax+0x63],bh
   14004774a:	add    al,0x40
   14004774c:	add    DWORD PTR [rax],eax
   14004774e:	add    BYTE PTR [rax],al
   140047750:	(bad)  
   140047751:	add    BYTE PTR [rax],al
   140047753:	add    BYTE PTR [rax],al
   140047755:	add    BYTE PTR [rax],al
   140047757:	add    BYTE PTR [rbx+riz*2+0x4],dh
   14004775b:	rex add DWORD PTR [rax],eax
   14004775e:	add    BYTE PTR [rax],al
   140047760:	(bad)  
   140047761:	add    al,0x0
   140047763:	add    BYTE PTR [rax],al
   140047765:	add    BYTE PTR [rax],al
   140047767:	add    BYTE PTR [rbx+riz*2+0x4],ch
   14004776b:	rex add DWORD PTR [rax],eax
   14004776e:	add    BYTE PTR [rax],al
   140047770:	(bad)  
   140047771:	add    BYTE PTR [rax],al
   140047773:	add    BYTE PTR [rax],al
   140047775:	add    BYTE PTR [rax],al
   140047777:	add    BYTE PTR [rax+0x63],ch
   14004777a:	add    al,0x40
   14004777c:	add    DWORD PTR [rax],eax
   14004777e:	add    BYTE PTR [rax],al
   140047780:	(bad)  
   140047781:	add    al,0x0
   140047783:	add    BYTE PTR [rax],al
   140047785:	add    BYTE PTR [rax],al
   140047787:	add    BYTE PTR [rax+0x63],ah
   14004778a:	add    al,0x40
   14004778c:	add    DWORD PTR [rax],eax
   14004778e:	add    BYTE PTR [rax],al
   140047790:	outs   dx,DWORD PTR ds:[rsi]
   140047791:	add    BYTE PTR [rax],al
   140047793:	add    BYTE PTR [rax],al
   140047795:	add    BYTE PTR [rax],al
   140047797:	add    BYTE PTR [rbx+riz*2+0x4],bl
   14004779b:	rex add DWORD PTR [rax],eax
   14004779e:	add    BYTE PTR [rax],al
   1400477a0:	outs   dx,DWORD PTR ds:[rsi]
   1400477a1:	add    al,0x0
   1400477a3:	add    BYTE PTR [rax],al
   1400477a5:	add    BYTE PTR [rax],al
   1400477a7:	add    BYTE PTR [rbx+riz*2+0x4],dl
   1400477ab:	rex add DWORD PTR [rax],eax
   1400477ae:	add    BYTE PTR [rax],al
   1400477b0:	push   rbx
   1400477b1:	add    BYTE PTR [rax],al
   1400477b3:	add    BYTE PTR [rax],al
   1400477b5:	add    BYTE PTR [rax],al
   1400477b7:	add    BYTE PTR [rax+0x63],dl
   1400477ba:	add    al,0x40
   1400477bc:	add    DWORD PTR [rax],eax
   1400477be:	add    BYTE PTR [rax],al
   1400477c0:	push   rbx
   1400477c1:	add    al,0x0
   1400477c3:	add    BYTE PTR [rax],al
   1400477c5:	add    BYTE PTR [rax],al
   1400477c7:	add    BYTE PTR [rax+0x63],cl
   1400477ca:	add    al,0x40
   1400477cc:	add    DWORD PTR [rax],eax
   1400477ce:	add    BYTE PTR [rax],al
   1400477d0:	rex.WXB add BYTE PTR [r8],al
   1400477d3:	add    BYTE PTR [rax],al
   1400477d5:	add    BYTE PTR [rax],al
   1400477d7:	add    BYTE PTR [rbx+riz*2+0x4],al
   1400477db:	rex add DWORD PTR [rax],eax
   1400477de:	add    BYTE PTR [rax],al
   1400477e0:	rex.WXB add al,0x0
   1400477e3:	add    BYTE PTR [rax],al
   1400477e5:	add    BYTE PTR [rax],al
   1400477e7:	add    BYTE PTR [rbx+riz*2],bh
   1400477ea:	add    al,0x40
   1400477ec:	add    DWORD PTR [rax],eax
   1400477ee:	add    BYTE PTR [rax],al
   1400477f0:	adc    al,BYTE PTR [rax]
   1400477f2:	add    BYTE PTR [rax],al
   1400477f4:	add    BYTE PTR [rax],al
   1400477f6:	add    BYTE PTR [rax],al
   1400477f8:	cmp    BYTE PTR [rbx+0x4],ah
   1400477fb:	rex add DWORD PTR [rax],eax
   1400477fe:	add    BYTE PTR [rax],al
   140047800:	adc    cl,BYTE PTR [rax]
   140047802:	add    BYTE PTR [rax],al
   140047804:	add    BYTE PTR [rax],al
   140047806:	add    BYTE PTR [rax],al
   140047808:	xor    BYTE PTR [rbx+0x4],ah
   14004780b:	rex add DWORD PTR [rax],eax
   14004780e:	add    BYTE PTR [rax],al
   140047810:	adc    al,BYTE PTR [rax+rax*1]
   140047813:	add    BYTE PTR [rax],al
   140047815:	add    BYTE PTR [rax],al
   140047817:	add    BYTE PTR [rax],ch
   140047819:	movsxd eax,DWORD PTR [rax+rax*2]
   14004781c:	add    DWORD PTR [rax],eax
   14004781e:	add    BYTE PTR [rax],al
   140047820:	push   rdi
   140047821:	add    BYTE PTR [rax],al
   140047823:	add    BYTE PTR [rax],al
   140047825:	add    BYTE PTR [rax],al
   140047827:	add    BYTE PTR [rbx+riz*2],ah
   14004782a:	add    al,0x40
   14004782c:	add    DWORD PTR [rax],eax
   14004782e:	add    BYTE PTR [rax],al
   140047830:	push   rdi
   140047831:	add    al,0x0
   140047833:	add    BYTE PTR [rax],al
   140047835:	add    BYTE PTR [rax],al
   140047837:	add    BYTE PTR [rbx+riz*2],bl
   14004783a:	add    al,0x40
   14004783c:	add    DWORD PTR [rax],eax
   14004783e:	add    BYTE PTR [rax],al
   140047840:	jno    0x140047842
   140047842:	add    BYTE PTR [rax],al
   140047844:	add    BYTE PTR [rax],al
   140047846:	add    BYTE PTR [rax],al
   140047848:	sbb    BYTE PTR [rbx+0x4],ah
   14004784b:	rex add DWORD PTR [rax],eax
   14004784e:	add    BYTE PTR [rax],al
   140047850:	jno    0x140047856
   140047852:	add    BYTE PTR [rax],al
   140047854:	add    BYTE PTR [rax],al
   140047856:	add    BYTE PTR [rax],al
   140047858:	adc    BYTE PTR [rbx+0x4],ah
   14004785b:	rex add DWORD PTR [rax],eax
   14004785e:	add    BYTE PTR [rax],al
   140047860:	(bad)  
   140047861:	add    BYTE PTR [rax],al
   140047863:	add    BYTE PTR [rax],al
   140047865:	add    BYTE PTR [rax],al
   140047867:	add    BYTE PTR [rbx+riz*2],cl
   14004786a:	add    al,0x40
   14004786c:	add    DWORD PTR [rax],eax
   14004786e:	add    BYTE PTR [rax],al
   140047870:	(bad)  
   140047871:	or     BYTE PTR [rax],al
   140047873:	add    BYTE PTR [rax],al
   140047875:	add    BYTE PTR [rax],al
   140047877:	add    BYTE PTR [rbx+riz*2],al
   14004787a:	add    al,0x40
   14004787c:	add    DWORD PTR [rax],eax
   14004787e:	add    BYTE PTR [rax],al
   140047880:	(bad)  
   140047881:	add    al,0x0
   140047883:	add    BYTE PTR [rax],al
   140047885:	add    BYTE PTR [rax],al
   140047887:	add    al,bh
   140047889:	(bad)  
   14004788a:	add    al,0x40
   14004788c:	add    DWORD PTR [rax],eax
   14004788e:	add    BYTE PTR [rax],al
   140047890:	add    BYTE PTR [rax],al
   140047893:	add    BYTE PTR [rax],al
   140047895:	add    BYTE PTR [rax],al
   140047897:	add    ah,dh
   140047899:	(bad)  
   14004789a:	add    al,0x40
   14004789c:	add    DWORD PTR [rax],eax
   14004789e:	add    BYTE PTR [rax],al
   1400478a0:	add    al,0x0
   1400478a3:	add    BYTE PTR [rax],al
   1400478a5:	add    BYTE PTR [rax],al
   1400478a7:	add    ah,ch
   1400478a9:	(bad)  
   1400478aa:	add    al,0x40
   1400478ac:	add    DWORD PTR [rax],eax
   1400478ae:	add    BYTE PTR [rax],al
   1400478b0:	jbe    0x1400478b2
   1400478b2:	add    BYTE PTR [rax],al
   1400478b4:	add    BYTE PTR [rax],al
   1400478b6:	add    BYTE PTR [rax],al
   1400478b8:	call   0x141447d1f
   1400478bd:	add    BYTE PTR [rax],al
   1400478bf:	add    BYTE PTR [rsi+0x4],dh
   1400478c2:	add    BYTE PTR [rax],al
   1400478c4:	add    BYTE PTR [rax],al
   1400478c6:	add    BYTE PTR [rax],al
   1400478c8:	loopne 0x14004792c
   1400478ca:	add    al,0x40
   1400478cc:	add    DWORD PTR [rax],eax
   1400478ce:	add    BYTE PTR [rax],al
   1400478d0:	outs   dx,BYTE PTR ds:[rsi]
   1400478d1:	add    BYTE PTR [rax],al
   1400478d3:	add    BYTE PTR [rax],al
   1400478d5:	add    BYTE PTR [rax],al
   1400478d7:	add    ah,bl
   1400478d9:	(bad)  
   1400478da:	add    al,0x40
   1400478dc:	add    DWORD PTR [rax],eax
   1400478de:	add    BYTE PTR [rax],al
   1400478e0:	outs   dx,BYTE PTR ds:[rsi]
   1400478e1:	add    al,0x0
   1400478e3:	add    BYTE PTR [rax],al
   1400478e5:	add    BYTE PTR [rax],al
   1400478e7:	add    ah,dl
   1400478e9:	(bad)  
   1400478ea:	add    al,0x40
   1400478ec:	add    DWORD PTR [rax],eax
   1400478ee:	add    BYTE PTR [rax],al
   1400478f0:	push   rsp
   1400478f1:	add    BYTE PTR [rax],al
   1400478f3:	add    BYTE PTR [rax],al
   1400478f5:	add    BYTE PTR [rax],al
   1400478f7:	add    al,dl
   1400478f9:	(bad)  
   1400478fa:	add    al,0x40
   1400478fc:	add    DWORD PTR [rax],eax
   1400478fe:	add    BYTE PTR [rax],al
   140047900:	push   rsp
   140047901:	add    al,0x0
   140047903:	add    BYTE PTR [rax],al
   140047905:	add    BYTE PTR [rax],al
   140047907:	add    al,cl
   140047909:	(bad)  
   14004790a:	add    al,0x40
   14004790c:	add    DWORD PTR [rax],eax
   14004790e:	add    BYTE PTR [rax],al
   140047910:	(bad)  
   140047911:	add    BYTE PTR [rax],al
   140047913:	add    BYTE PTR [rax],al
   140047915:	add    BYTE PTR [rax],al
   140047917:	add    ah,al
   140047919:	(bad)  
   14004791a:	add    al,0x40
   14004791c:	add    DWORD PTR [rax],eax
   14004791e:	add    BYTE PTR [rax],al
   140047920:	(bad)  
   140047921:	add    al,0x0
   140047923:	add    BYTE PTR [rax],al
   140047925:	add    BYTE PTR [rax],al
   140047927:	add    BYTE PTR [rdx+riz*2+0x14004],bh
   14004792e:	add    BYTE PTR [rax],al
   140047930:	add    BYTE PTR es:[rax],al
   140047933:	add    BYTE PTR [rax],al
   140047935:	add    BYTE PTR [rax],al
   140047937:	add    BYTE PTR [rax+0x1400462],bh
   14004793d:	add    BYTE PTR [rax],al
   14004793f:	add    BYTE PTR [rsi],ah
   140047941:	add    al,0x0
   140047943:	add    BYTE PTR [rax],al
   140047945:	add    BYTE PTR [rax],al
   140047947:	add    BYTE PTR [rax+0x1400462],dh
   14004794d:	add    BYTE PTR [rax],al
   14004794f:	add    BYTE PTR [rcx+0x0],al
   140047955:	add    BYTE PTR [rax],al
   140047957:	add    BYTE PTR [rdx+riz*2+0x14004],ch
   14004795e:	add    BYTE PTR [rax],al
   140047960:	add    DWORD PTR [rax+rax*1],0x0
   140047967:	add    BYTE PTR [rdx+riz*2+0x14004],ah
   14004796e:	add    BYTE PTR [rax],al
   140047970:	(bad)  
   140047971:	add    BYTE PTR [rax],al
   140047973:	add    BYTE PTR [rax],al
   140047975:	add    BYTE PTR [rax],al
   140047977:	add    BYTE PTR [rax+0x1400462],ah
   14004797d:	add    BYTE PTR [rax],al
   14004797f:	add    BYTE PTR [rdi],ch
   140047981:	add    al,0x0
   140047983:	add    BYTE PTR [rax],al
   140047985:	add    BYTE PTR [rax],al
   140047987:	add    BYTE PTR [rax+0x1400462],bl
   14004798d:	add    BYTE PTR [rax],al
   14004798f:	add    BYTE PTR [rax+rax*1+0x0],cl
   140047993:	add    BYTE PTR [rax],al
   140047995:	add    BYTE PTR [rax],al
   140047997:	add    BYTE PTR [rdx+riz*2+0x14004],dl
   14004799e:	add    BYTE PTR [rax],al
   1400479a0:	rex.WR add al,0x0
   1400479a3:	add    BYTE PTR [rax],al
   1400479a5:	add    BYTE PTR [rax],al
   1400479a7:	add    BYTE PTR [rdx+riz*2+0x14004],cl
   1400479ae:	add    BYTE PTR [rax],al
   1400479b0:	push   rax
   1400479b1:	add    BYTE PTR [rax],al
   1400479b3:	add    BYTE PTR [rax],al
   1400479b5:	add    BYTE PTR [rax],al
   1400479b7:	add    BYTE PTR [rax+0x1400462],cl
   1400479bd:	add    BYTE PTR [rax],al
   1400479bf:	add    BYTE PTR [rax+0x4],dl
   1400479c2:	add    BYTE PTR [rax],al
   1400479c4:	add    BYTE PTR [rax],al
   1400479c6:	add    BYTE PTR [rax],al
   1400479c8:	and    BYTE PTR [rdx+0x4],0x40
   1400479cc:	add    DWORD PTR [rax],eax
   1400479ce:	add    BYTE PTR [rax],al
   1400479d0:	push   rax
   1400479d1:	jl     0x1400479d3
   1400479d3:	add    BYTE PTR [rax],al
   1400479d5:	add    BYTE PTR [rax],al
   1400479d7:	add    BYTE PTR [rax+0x62],bh
   1400479da:	add    al,0x40
   1400479dc:	add    DWORD PTR [rax],eax
   1400479de:	add    BYTE PTR [rax],al
   1400479e0:	push   rax
   1400479e1:	or     BYTE PTR [rax],al
   1400479e3:	add    BYTE PTR [rax],al
   1400479e5:	add    BYTE PTR [rax],al
   1400479e7:	add    BYTE PTR [rax+0x62],ch
   1400479ea:	add    al,0x40
   1400479ec:	add    DWORD PTR [rax],eax
   1400479ee:	add    BYTE PTR [rax],al
   1400479f0:	push   rax
   1400479f1:	or     BYTE PTR [rax],al
   1400479f3:	add    BYTE PTR [rax],al
   1400479f5:	add    BYTE PTR [rax],al
   1400479f7:	add    BYTE PTR [rax+0x62],ah
   1400479fa:	add    al,0x40
   1400479fc:	add    DWORD PTR [rax],eax
   1400479fe:	add    BYTE PTR [rax],al
   140047a00:	push   rax
   140047a01:	js     0x140047a03
   140047a03:	add    BYTE PTR [rax],al
   140047a05:	add    BYTE PTR [rax],al
   140047a07:	add    BYTE PTR [rax+0x62],bl
   140047a0a:	add    al,0x40
   140047a0c:	add    DWORD PTR [rax],eax
   140047a0e:	add    BYTE PTR [rax],al
   140047a10:	pop    rax
   140047a11:	add    BYTE PTR [rax],al
   140047a13:	add    BYTE PTR [rax],al
   140047a15:	add    BYTE PTR [rax],al
   140047a17:	add    BYTE PTR [rax+0x62],dl
   140047a1a:	add    al,0x40
   140047a1c:	add    DWORD PTR [rax],eax
   140047a1e:	add    BYTE PTR [rax],al
   140047a20:	pop    rax
   140047a21:	add    al,0x0
   140047a23:	add    BYTE PTR [rax],al
   140047a25:	add    BYTE PTR [rax],al
   140047a27:	add    BYTE PTR [rax+0x62],cl
   140047a2a:	add    al,0x40
   140047a2c:	add    DWORD PTR [rax],eax
   140047a2e:	add    BYTE PTR [rax],al
   140047a30:	jl     0x140047a32
   140047a32:	add    BYTE PTR [rax],al
   140047a34:	add    BYTE PTR [rax],al
   140047a36:	add    BYTE PTR [rax],al
   140047a38:	rex.R (bad) 
   140047a3a:	add    al,0x40
   140047a3c:	add    DWORD PTR [rax],eax
   140047a3e:	add    BYTE PTR [rax],al
   140047a40:	jl     0x140047a46
   140047a42:	add    BYTE PTR [rax],al
   140047a44:	add    BYTE PTR [rax],al
   140047a46:	add    BYTE PTR [rax],al
   140047a48:	cmp    al,0x62
   140047a4a:	add    al,0x40
   140047a4c:	add    DWORD PTR [rax],eax
   140047a4e:	add    BYTE PTR [rax],al
   140047a50:	rex.WRX add BYTE PTR [rax],r8b
   140047a53:	add    BYTE PTR [rax],al
   140047a55:	add    BYTE PTR [rax],al
   140047a57:	add    BYTE PTR [rax],bh
   140047a59:	(bad)  
   140047a5a:	add    al,0x40
   140047a5c:	add    DWORD PTR [rax],eax
   140047a5e:	add    BYTE PTR [rax],al
   140047a60:	rex.WRX add al,0x0
   140047a63:	add    BYTE PTR [rax],al
   140047a65:	add    BYTE PTR [rax],al
   140047a67:	add    BYTE PTR [rax],dh
   140047a69:	(bad)  
   140047a6a:	add    al,0x40
   140047a6c:	add    DWORD PTR [rax],eax
   140047a6e:	add    BYTE PTR [rax],al
   140047a70:	add    BYTE PTR ds:[rax],al
   140047a73:	add    BYTE PTR [rax],al
   140047a75:	add    BYTE PTR [rax],al
   140047a77:	add    BYTE PTR [rdx+riz*2],ch
   140047a7a:	add    al,0x40
   140047a7c:	add    DWORD PTR [rax],eax
   140047a7e:	add    BYTE PTR [rax],al
   140047a80:	or     BYTE PTR ds:[rax],al
   140047a83:	add    BYTE PTR [rax],al
   140047a85:	add    BYTE PTR [rax],al
   140047a87:	add    BYTE PTR [rdx+riz*2],ah
   140047a8a:	add    al,0x40
   140047a8c:	add    DWORD PTR [rax],eax
   140047a8e:	add    BYTE PTR [rax],al
   140047a90:	ds add al,0x0
   140047a93:	add    BYTE PTR [rax],al
   140047a95:	add    BYTE PTR [rax],al
   140047a97:	add    BYTE PTR [rdx+riz*2],bl
   140047a9a:	add    al,0x40
   140047a9c:	add    DWORD PTR [rax],eax
   140047a9e:	add    BYTE PTR [rax],al
   140047aa0:	cmp    al,BYTE PTR [rax]
   140047aa2:	add    BYTE PTR [rax],al
   140047aa4:	add    BYTE PTR [rax],al
   140047aa6:	add    BYTE PTR [rax],al
   140047aa8:	sbb    BYTE PTR [rdx+0x4],ah
   140047aab:	rex add DWORD PTR [rax],eax
   140047aae:	add    BYTE PTR [rax],al
   140047ab0:	cmp    al,BYTE PTR [rax+rax*1]
   140047ab3:	add    BYTE PTR [rax],al
   140047ab5:	add    BYTE PTR [rax],al
   140047ab7:	add    BYTE PTR [rax],dl
   140047ab9:	(bad)  
   140047aba:	add    al,0x40
   140047abc:	add    DWORD PTR [rax],eax
   140047abe:	add    BYTE PTR [rax],al
   140047ac0:	push   rbp
   140047ac1:	add    BYTE PTR [rax],al
   140047ac3:	add    BYTE PTR [rax],al
   140047ac5:	add    BYTE PTR [rax],al
   140047ac7:	add    BYTE PTR [rdx+riz*2],cl
   140047aca:	add    al,0x40
   140047acc:	add    DWORD PTR [rax],eax
   140047ace:	add    BYTE PTR [rax],al
   140047ad0:	push   rbp
   140047ad1:	add    al,0x0
   140047ad3:	add    BYTE PTR [rax],al
   140047ad5:	add    BYTE PTR [rax],al
   140047ad7:	add    BYTE PTR [rdx+riz*2],al
   140047ada:	add    al,0x40
   140047adc:	add    DWORD PTR [rax],eax
   140047ade:	add    BYTE PTR [rax],al
   140047ae0:	(bad)  
	...
   140047ae9:	(bad)  
   140047aea:	add    al,0x40
   140047aec:	add    DWORD PTR [rax],eax
   140047aee:	add    BYTE PTR [rax],al
   140047af0:	(bad)  
   140047af1:	or     BYTE PTR [rax],al
   140047af3:	add    BYTE PTR [rax],al
   140047af5:	add    BYTE PTR [rax],al
   140047af7:	add    al,bh
   140047af9:	(bad)  
   140047afa:	add    al,0x40
   140047afc:	add    DWORD PTR [rax],eax
   140047afe:	add    BYTE PTR [rax],al
   140047b00:	(bad)  
   140047b01:	add    al,0x0
   140047b03:	add    BYTE PTR [rax],al
   140047b05:	add    BYTE PTR [rax],al
   140047b07:	add    al,dh
   140047b09:	(bad)  
   140047b0a:	add    al,0x40
   140047b0c:	add    DWORD PTR [rax],eax
   140047b0e:	add    BYTE PTR [rax],al
   140047b10:	adc    eax,DWORD PTR [rax]
   140047b12:	add    BYTE PTR [rax],al
   140047b14:	add    BYTE PTR [rax],al
   140047b16:	add    BYTE PTR [rax],al
   140047b18:	in     al,dx
   140047b19:	(bad)  
   140047b1a:	add    al,0x40
   140047b1c:	add    DWORD PTR [rax],eax
   140047b1e:	add    BYTE PTR [rax],al
   140047b20:	adc    ecx,DWORD PTR [rax]
   140047b22:	add    BYTE PTR [rax],al
   140047b24:	add    BYTE PTR [rax],al
   140047b26:	add    BYTE PTR [rax],al
   140047b28:	in     al,0x61
   140047b2a:	add    al,0x40
   140047b2c:	add    DWORD PTR [rax],eax
   140047b2e:	add    BYTE PTR [rax],al
   140047b30:	adc    eax,DWORD PTR [rax+rax*1]
   140047b33:	add    BYTE PTR [rax],al
   140047b35:	add    BYTE PTR [rax],al
   140047b37:	add    ah,bl
   140047b39:	(bad)  
   140047b3a:	add    al,0x40
   140047b3c:	add    DWORD PTR [rax],eax
   140047b3e:	add    BYTE PTR [rax],al
   140047b40:	adc    al,0x0
   140047b42:	add    BYTE PTR [rax],al
   140047b44:	add    BYTE PTR [rax],al
   140047b46:	add    BYTE PTR [rax],al
   140047b48:	sbb    BYTE PTR [rax],dh
   140047b4a:	add    al,0x40
   140047b4c:	add    DWORD PTR [rax],eax
   140047b4e:	add    BYTE PTR [rax],al
   140047b50:	adc    al,0x7c
   140047b52:	add    BYTE PTR [rax],al
   140047b54:	add    BYTE PTR [rax],al
   140047b56:	add    BYTE PTR [rax],al
   140047b58:	fsub   DWORD PTR [rcx+0x4]
   140047b5b:	rex add DWORD PTR [rax],eax
   140047b5e:	add    BYTE PTR [rax],al
   140047b60:	adc    al,0x4
   140047b62:	add    BYTE PTR [rax],al
   140047b64:	add    BYTE PTR [rax],al
   140047b66:	add    BYTE PTR [rax],al
   140047b68:	shl    BYTE PTR [rcx+0x4],1
   140047b6b:	rex add DWORD PTR [rax],eax
   140047b6e:	add    BYTE PTR [rax],al
   140047b70:	adc    al,0x4
   140047b72:	add    BYTE PTR [rax],al
   140047b74:	add    BYTE PTR [rax],al
   140047b76:	add    BYTE PTR [rax],al
   140047b78:	enter  0x461,0x40
   140047b7c:	add    DWORD PTR [rax],eax
   140047b7e:	add    BYTE PTR [rax],al
   140047b80:	adc    al,0x8
   140047b82:	add    BYTE PTR [rax],al
   140047b84:	add    BYTE PTR [rax],al
   140047b86:	add    BYTE PTR [rax],al
   140047b88:	shl    BYTE PTR [rcx+0x4],0x40
   140047b8c:	add    DWORD PTR [rax],eax
   140047b8e:	add    BYTE PTR [rax],al
   140047b90:	adc    al,0x78
   140047b92:	add    BYTE PTR [rax],al
   140047b94:	add    BYTE PTR [rax],al
   140047b96:	add    BYTE PTR [rax],al
   140047b98:	mov    esp,0x1400461
   140047b9d:	add    BYTE PTR [rax],al
   140047b9f:	add    BYTE PTR [rax+rcx*1],dl
   140047ba2:	add    BYTE PTR [rax],al
   140047ba4:	add    BYTE PTR [rax],al
   140047ba6:	add    BYTE PTR [rax],al
   140047ba8:	mov    al,0x61
   140047baa:	add    al,0x40
   140047bac:	add    DWORD PTR [rax],eax
   140047bae:	add    BYTE PTR [rax],al
   140047bb0:	ins    BYTE PTR es:[rdi],dx
   140047bb1:	add    BYTE PTR [rax],al
   140047bb3:	add    BYTE PTR [rax],al
   140047bb5:	add    BYTE PTR [rax],al
   140047bb7:	add    BYTE PTR [rcx+riz*2+0x14004],ch
   140047bbe:	add    BYTE PTR [rax],al
   140047bc0:	ins    BYTE PTR es:[rdi],dx
   140047bc1:	add    al,0x0
   140047bc3:	add    BYTE PTR [rax],al
   140047bc5:	add    BYTE PTR [rax],al
   140047bc7:	add    BYTE PTR [rcx+riz*2+0x14004],ah
   140047bce:	add    BYTE PTR [rax],al
   140047bd0:	(bad)  
   140047bd1:	add    BYTE PTR [rax],al
   140047bd3:	add    BYTE PTR [rax],al
   140047bd5:	add    BYTE PTR [rax],al
   140047bd7:	add    BYTE PTR [rax+0x1400461],ah
   140047bdd:	add    BYTE PTR [rax],al
   140047bdf:	add    BYTE PTR [rdx+0x4],al
   140047be5:	add    BYTE PTR [rax],al
   140047be7:	add    BYTE PTR [rax+0x1400461],bl
   140047bed:	add    BYTE PTR [rax],al
   140047bef:	add    BYTE PTR [rdx+0x0],dh
   140047bf2:	add    BYTE PTR [rax],al
   140047bf4:	add    BYTE PTR [rax],al
   140047bf6:	add    BYTE PTR [rax],al
   140047bf8:	xchg   esp,eax
   140047bf9:	(bad)  
   140047bfa:	add    al,0x40
   140047bfc:	add    DWORD PTR [rax],eax
   140047bfe:	add    BYTE PTR [rax],al
   140047c00:	jb     0x140047c06
   140047c02:	add    BYTE PTR [rax],al
   140047c04:	add    BYTE PTR [rax],al
   140047c06:	add    BYTE PTR [rax],al
   140047c08:	mov    WORD PTR [rcx+0x4],fs
   140047c0b:	rex add DWORD PTR [rax],eax
   140047c0e:	add    BYTE PTR [rax],al
   140047c10:	rex.W add BYTE PTR [rax],al
   140047c13:	add    BYTE PTR [rax],al
   140047c15:	add    BYTE PTR [rax],al
   140047c17:	add    BYTE PTR [rax+0x1400461],cl
   140047c1d:	add    BYTE PTR [rax],al
   140047c1f:	add    BYTE PTR [rax+0x4],cl
   140047c22:	add    BYTE PTR [rax],al
   140047c24:	add    BYTE PTR [rax],al
   140047c26:	add    BYTE PTR [rax],al
   140047c28:	and    BYTE PTR [rcx+0x4],0x40
   140047c2c:	add    DWORD PTR [rax],eax
   140047c2e:	add    BYTE PTR [rax],al
   140047c30:	rex.RX add BYTE PTR [rax],r8b
   140047c33:	add    BYTE PTR [rax],al
   140047c35:	add    BYTE PTR [rax],al
   140047c37:	add    BYTE PTR [rcx+riz*2+0x4],bh
   140047c3b:	rex add DWORD PTR [rax],eax
   140047c3e:	add    BYTE PTR [rax],al
   140047c40:	rex.RX add al,0x0
   140047c43:	add    BYTE PTR [rax],al
   140047c45:	add    BYTE PTR [rax],al
   140047c47:	add    BYTE PTR [rcx+riz*2+0x4],dh
   140047c4b:	rex add DWORD PTR [rax],eax
   140047c4e:	add    BYTE PTR [rax],al
   140047c50:	rex.RX or BYTE PTR [rax],r8b
   140047c53:	add    BYTE PTR [rax],al
   140047c55:	add    BYTE PTR [rax],al
   140047c57:	add    BYTE PTR [rcx+riz*2+0x4],ch
   140047c5b:	rex add DWORD PTR [rax],eax
   140047c5e:	add    BYTE PTR [rax],al
   140047c60:	adc    eax,0x0
   140047c65:	add    BYTE PTR [rax],al
   140047c67:	add    BYTE PTR [rax+0x61],ch
   140047c6a:	add    al,0x40
   140047c6c:	add    DWORD PTR [rax],eax
   140047c6e:	add    BYTE PTR [rax],al
   140047c70:	adc    eax,0x4
   140047c75:	add    BYTE PTR [rax],al
   140047c77:	add    BYTE PTR [rax+0x61],ah
   140047c7a:	add    al,0x40
   140047c7c:	add    DWORD PTR [rax],eax
   140047c7e:	add    BYTE PTR [rax],al
   140047c80:	movsxd eax,DWORD PTR [rax]
   140047c82:	add    BYTE PTR [rax],al
   140047c84:	add    BYTE PTR [rax],al
   140047c86:	add    BYTE PTR [rax],al
   140047c88:	pop    rsp
   140047c89:	(bad)  
   140047c8a:	add    al,0x40
   140047c8c:	add    DWORD PTR [rax],eax
   140047c8e:	add    BYTE PTR [rax],al
   140047c90:	movsxd eax,DWORD PTR [rax+rax*1]
   140047c93:	add    BYTE PTR [rax],al
   140047c95:	add    BYTE PTR [rax],al
   140047c97:	add    BYTE PTR [rcx+riz*2+0x4],dl
   140047c9b:	rex add DWORD PTR [rax],eax
   140047c9e:	add    BYTE PTR [rax],al
   140047ca0:	(bad)  
   140047ca1:	add    BYTE PTR [rax],al
   140047ca3:	add    BYTE PTR [rax],al
   140047ca5:	add    BYTE PTR [rax],al
   140047ca7:	add    BYTE PTR [rax+0x61],dl
   140047caa:	add    al,0x40
   140047cac:	add    DWORD PTR [rax],eax
   140047cae:	add    BYTE PTR [rax],al
   140047cb0:	(bad)  
   140047cb1:	add    al,0x0
   140047cb3:	add    BYTE PTR [rax],al
   140047cb5:	add    BYTE PTR [rax],al
   140047cb7:	add    BYTE PTR [rax+0x61],cl
   140047cba:	add    al,0x40
   140047cbc:	add    DWORD PTR [rax],eax
   140047cbe:	add    BYTE PTR [rax],al
   140047cc0:	(bad)  
   140047cc1:	or     BYTE PTR [rax],al
   140047cc3:	add    BYTE PTR [rax],al
   140047cc5:	add    BYTE PTR [rax],al
   140047cc7:	add    BYTE PTR [rax+0x61],al
   140047cca:	add    al,0x40
   140047ccc:	add    DWORD PTR [rax],eax
   140047cce:	add    BYTE PTR [rax],al
   140047cd0:	imul   eax,DWORD PTR [rax],0x0
   140047cd3:	add    BYTE PTR [rax],al
   140047cd5:	add    BYTE PTR [rax],al
   140047cd7:	add    BYTE PTR [rcx+riz*2],bh
   140047cda:	add    al,0x40
   140047cdc:	add    DWORD PTR [rax],eax
   140047cde:	add    BYTE PTR [rax],al
   140047ce0:	imul   eax,DWORD PTR [rax+rax*1],0x0
   140047ce4:	add    BYTE PTR [rax],al
   140047ce6:	add    BYTE PTR [rax],al
   140047ce8:	xor    al,0x61
   140047cea:	add    al,0x40
   140047cec:	add    DWORD PTR [rax],eax
   140047cee:	add    BYTE PTR [rax],al
   140047cf0:	imul   ecx,DWORD PTR [rax],0x0
   140047cf3:	add    BYTE PTR [rax],al
   140047cf5:	add    BYTE PTR [rax],al
   140047cf7:	add    BYTE PTR [rcx+riz*2],ch
   140047cfa:	add    al,0x40
   140047cfc:	add    DWORD PTR [rax],eax
   140047cfe:	add    BYTE PTR [rax],al
   140047d00:	imul   ecx,DWORD PTR [rax+rax*1],0x0
   140047d04:	add    BYTE PTR [rax],al
   140047d06:	add    BYTE PTR [rax],al
   140047d08:	and    al,0x61
   140047d0a:	add    al,0x40
   140047d0c:	add    DWORD PTR [rax],eax
   140047d0e:	add    BYTE PTR [rax],al
   140047d10:	xchg   BYTE PTR [rax],al
   140047d12:	add    BYTE PTR [rax],al
   140047d14:	add    BYTE PTR [rax],al
   140047d16:	add    BYTE PTR [rax],al
   140047d18:	and    BYTE PTR [rcx+0x4],ah
   140047d1b:	rex add DWORD PTR [rax],eax
   140047d1e:	add    BYTE PTR [rax],al
   140047d20:	xchg   BYTE PTR [rax+rax*1],al
   140047d23:	add    BYTE PTR [rax],al
   140047d25:	add    BYTE PTR [rax],al
   140047d27:	add    BYTE PTR [rax],bl
   140047d29:	(bad)  
   140047d2a:	add    al,0x40
   140047d2c:	add    DWORD PTR [rax],eax
   140047d2e:	add    BYTE PTR [rax],al
   140047d30:	(bad)  
   140047d31:	add    BYTE PTR [rax],al
   140047d33:	add    BYTE PTR [rax],al
   140047d35:	add    BYTE PTR [rax],al
   140047d37:	add    BYTE PTR [rcx+riz*2],dl
   140047d3a:	add    al,0x40
   140047d3c:	add    DWORD PTR [rax],eax
   140047d3e:	add    BYTE PTR [rax],al
   140047d40:	(bad)  
   140047d41:	add    al,0x0
   140047d43:	add    BYTE PTR [rax],al
   140047d45:	add    BYTE PTR [rax],al
   140047d47:	add    BYTE PTR [rcx+riz*2],cl
   140047d4a:	add    al,0x40
   140047d4c:	add    DWORD PTR [rax],eax
   140047d4e:	add    BYTE PTR [rax],al
   140047d50:	sbb    BYTE PTR [rax],al
   140047d52:	add    BYTE PTR [rax],al
   140047d54:	add    BYTE PTR [rax],al
   140047d56:	add    BYTE PTR [rax],al
   140047d58:	or     BYTE PTR [rcx+0x4],ah
   140047d5b:	rex add DWORD PTR [rax],eax
   140047d5e:	add    BYTE PTR [rax],al
   140047d60:	sbb    BYTE PTR [rax+rax*1],al
   140047d63:	add    BYTE PTR [rax],al
   140047d65:	add    BYTE PTR [rax],al
   140047d67:	add    BYTE PTR [rax],al
   140047d69:	(bad)  
   140047d6a:	add    al,0x40
   140047d6c:	add    DWORD PTR [rax],eax
	...
   140047d76:	add    BYTE PTR [rax],al
   140047d78:	clc    
   140047d79:	(bad)  
   140047d7a:	add    al,0x40
   140047d7c:	add    DWORD PTR [rax],eax
   140047d7e:	add    BYTE PTR [rax],al
   140047d80:	sbb    DWORD PTR [rax],eax
   140047d82:	add    BYTE PTR [rax],al
   140047d84:	add    BYTE PTR [rax],al
   140047d86:	add    BYTE PTR [rax],al
   140047d88:	hlt    
   140047d89:	(bad)  
   140047d8a:	add    al,0x40
   140047d8c:	add    DWORD PTR [rax],eax
   140047d8e:	add    BYTE PTR [rax],al
   140047d90:	sbb    DWORD PTR [rax+rax*1],eax
   140047d93:	add    BYTE PTR [rax],al
   140047d95:	add    BYTE PTR [rax],al
   140047d97:	add    ah,ch
   140047d99:	(bad)  
   140047d9a:	add    al,0x40
   140047d9c:	add    DWORD PTR [rax],eax
   140047d9e:	add    BYTE PTR [rax],al
   140047da0:	xchg   DWORD PTR [rax],eax
   140047da2:	add    BYTE PTR [rax],al
   140047da4:	add    BYTE PTR [rax],al
   140047da6:	add    BYTE PTR [rax],al
   140047da8:	call   0x14144820d
   140047dad:	add    BYTE PTR [rax],al
   140047daf:	add    BYTE PTR [rdi+0x4],al
   140047db5:	add    BYTE PTR [rax],al
   140047db7:	add    al,ah
   140047db9:	(bad)  
   140047dba:	add    al,0x40
   140047dbc:	add    DWORD PTR [rax],eax
   140047dbe:	add    BYTE PTR [rax],al
   140047dc0:	rex.WRXB add BYTE PTR [r8],r8b
   140047dc3:	add    BYTE PTR [rax],al
   140047dc5:	add    BYTE PTR [rax],al
   140047dc7:	add    ah,bl
   140047dc9:	(bad)  
   140047dca:	add    al,0x40
   140047dcc:	add    DWORD PTR [rax],eax
   140047dce:	add    BYTE PTR [rax],al
   140047dd0:	rex.WRXB add al,0x0
   140047dd3:	add    BYTE PTR [rax],al
   140047dd5:	add    BYTE PTR [rax],al
   140047dd7:	add    ah,dl
   140047dd9:	(bad)  
   140047dda:	add    al,0x40
   140047ddc:	add    DWORD PTR [rax],eax
   140047dde:	add    BYTE PTR [rax],al
   140047de0:	test   DWORD PTR [rax],eax
   140047de2:	add    BYTE PTR [rax],al
   140047de4:	add    BYTE PTR [rax],al
   140047de6:	add    BYTE PTR [rax],al
   140047de8:	shl    BYTE PTR [rax+0x4],1
   140047deb:	rex add DWORD PTR [rax],eax
   140047dee:	add    BYTE PTR [rax],al
   140047df0:	test   DWORD PTR [rax+rax*1],eax
   140047df3:	add    BYTE PTR [rax],al
   140047df5:	add    BYTE PTR [rax],al
   140047df7:	add    al,cl
   140047df9:	(bad)  
   140047dfa:	add    al,0x40
   140047dfc:	add    DWORD PTR [rax],eax
   140047dfe:	add    BYTE PTR [rax],al
   140047e00:	pop    rcx
   140047e01:	add    BYTE PTR [rax],al
   140047e03:	add    BYTE PTR [rax],al
   140047e05:	add    BYTE PTR [rax],al
   140047e07:	add    ah,al
   140047e09:	(bad)  
   140047e0a:	add    al,0x40
   140047e0c:	add    DWORD PTR [rax],eax
   140047e0e:	add    BYTE PTR [rax],al
   140047e10:	pop    rcx
   140047e11:	add    al,0x0
   140047e13:	add    BYTE PTR [rax],al
   140047e15:	add    BYTE PTR [rax],al
   140047e17:	add    BYTE PTR [rax+riz*2+0x14004],bh
   140047e1e:	add    BYTE PTR [rax],al
   140047e20:	pop    rcx
   140047e21:	or     BYTE PTR [rax],al
   140047e23:	add    BYTE PTR [rax],al
   140047e25:	add    BYTE PTR [rax],al
   140047e27:	add    BYTE PTR [rax+riz*2+0x14004],dh
   140047e2e:	add    BYTE PTR [rax],al
   140047e30:	cmp    eax,DWORD PTR [rax]
   140047e32:	add    BYTE PTR [rax],al
   140047e34:	add    BYTE PTR [rax],al
   140047e36:	add    BYTE PTR [rax],al
   140047e38:	loopne 0x140047e67
   140047e3a:	add    al,0x40
   140047e3c:	add    DWORD PTR [rax],eax
   140047e3e:	add    BYTE PTR [rax],al
   140047e40:	cmp    ecx,DWORD PTR [rax+rax*1]
   140047e43:	add    BYTE PTR [rax],al
   140047e45:	add    BYTE PTR [rax],al
   140047e47:	add    BYTE PTR [rax+riz*2+0x14004],ch
   140047e4e:	add    BYTE PTR [rax],al
   140047e50:	cmp    eax,DWORD PTR [rax+rax*1]
   140047e53:	add    BYTE PTR [rax],al
   140047e55:	add    BYTE PTR [rax],al
   140047e57:	add    BYTE PTR [rax+riz*2+0x14004],ah
   140047e5e:	add    BYTE PTR [rax],al
   140047e60:	cmp    ecx,DWORD PTR [rax]
   140047e62:	add    BYTE PTR [rax],al
   140047e64:	add    BYTE PTR [rax],al
   140047e66:	add    BYTE PTR [rax],al
   140047e68:	pushf  
   140047e69:	(bad)  
   140047e6a:	add    al,0x40
   140047e6c:	add    DWORD PTR [rax],eax
   140047e6e:	add    BYTE PTR [rax],al
   140047e70:	cmp    edi,DWORD PTR [rax+0x0]
   140047e73:	add    BYTE PTR [rax],al
   140047e75:	add    BYTE PTR [rax],al
   140047e77:	add    BYTE PTR [rax+0x1400460],bl
   140047e7d:	add    BYTE PTR [rax],al
   140047e7f:	add    BYTE PTR [rbx],bh
   140047e81:	sbb    BYTE PTR [rax],al
   140047e83:	add    BYTE PTR [rax],al
   140047e85:	add    BYTE PTR [rax],al
   140047e87:	add    BYTE PTR [rax+0x1400460],dl
   140047e8d:	add    BYTE PTR [rax],al
   140047e8f:	add    BYTE PTR [rbx],bh
   140047e91:	sbb    al,0x0
   140047e93:	add    BYTE PTR [rax],al
   140047e95:	add    BYTE PTR [rax],al
   140047e97:	add    BYTE PTR [rax+0x1400460],cl
   140047e9d:	add    BYTE PTR [rax],al
   140047e9f:	add    BYTE PTR [rbx],bh
   140047ea1:	jl     0x140047ea3
   140047ea3:	add    BYTE PTR [rax],al
   140047ea5:	add    BYTE PTR [rax],al
   140047ea7:	add    BYTE PTR [rax+riz*2+0x14004],al
   140047eae:	add    BYTE PTR [rax],al
   140047eb0:	cmp    esi,DWORD PTR [rax+0x0]
   140047eb3:	add    BYTE PTR [rax],al
   140047eb5:	add    BYTE PTR [rax],al
   140047eb7:	add    BYTE PTR [rax+0x1400460],al
   140047ebd:	add    BYTE PTR [rax],al
   140047ebf:	add    BYTE PTR [rbx],bh
   140047ec1:	je     0x140047ec3
   140047ec3:	add    BYTE PTR [rax],al
   140047ec5:	add    BYTE PTR [rax],al
   140047ec7:	add    BYTE PTR [rax+riz*2+0x4],bh
   140047ecb:	rex add DWORD PTR [rax],eax
   140047ece:	add    BYTE PTR [rax],al
   140047ed0:	cmp    edx,DWORD PTR [rax]
   140047ed2:	add    BYTE PTR [rax],al
   140047ed4:	add    BYTE PTR [rax],al
   140047ed6:	add    BYTE PTR [rax],al
   140047ed8:	je     0x140047f3a
   140047eda:	add    al,0x40
   140047edc:	add    DWORD PTR [rax],eax
   140047ede:	add    BYTE PTR [rax],al
   140047ee0:	cmp    edx,DWORD PTR [rax+rax*1]
   140047ee3:	add    BYTE PTR [rax],al
   140047ee5:	add    BYTE PTR [rax],al
   140047ee7:	add    BYTE PTR [rax+riz*2+0x4],ch
   140047eeb:	rex add DWORD PTR [rax],eax
   140047eee:	add    BYTE PTR [rax],al
   140047ef0:	cmp    esp,DWORD PTR [rax+rax*1]
   140047ef3:	add    BYTE PTR [rax],al
   140047ef5:	add    BYTE PTR [rax],al
   140047ef7:	add    BYTE PTR [rax+riz*2+0x4],ah
   140047efb:	rex add DWORD PTR [rax],eax
   140047efe:	add    BYTE PTR [rax],al
   140047f00:	cmp    esp,DWORD PTR [rax]
   140047f02:	add    BYTE PTR [rax],al
   140047f04:	add    BYTE PTR [rax],al
   140047f06:	add    BYTE PTR [rax],al
   140047f08:	pop    rsp
   140047f09:	(bad)  
   140047f0a:	add    al,0x40
   140047f0c:	add    DWORD PTR [rax],eax
   140047f0e:	add    BYTE PTR [rax],al
   140047f10:	pop    rbx
   140047f11:	add    BYTE PTR [rax],al
   140047f13:	add    BYTE PTR [rax],al
   140047f15:	add    BYTE PTR [rax],al
   140047f17:	add    BYTE PTR [rax+0x60],bl
   140047f1a:	add    al,0x40
   140047f1c:	add    DWORD PTR [rax],eax
   140047f1e:	add    BYTE PTR [rax],al
   140047f20:	pop    rbx
   140047f21:	add    al,0x0
   140047f23:	add    BYTE PTR [rax],al
   140047f25:	add    BYTE PTR [rax],al
   140047f27:	add    BYTE PTR [rax+0x60],dl
   140047f2a:	add    al,0x40
   140047f2c:	add    DWORD PTR [rax],eax
   140047f2e:	add    BYTE PTR [rax],al
   140047f30:	sbb    eax,DWORD PTR [rax]
   140047f32:	add    BYTE PTR [rax],al
   140047f34:	add    BYTE PTR [rax],al
   140047f36:	add    BYTE PTR [rax],al
   140047f38:	rex.WR (bad) 
   140047f3a:	add    al,0x40
   140047f3c:	add    DWORD PTR [rax],eax
   140047f3e:	add    BYTE PTR [rax],al
   140047f40:	sbb    eax,DWORD PTR [rax+rax*1]
   140047f43:	add    BYTE PTR [rax],al
   140047f45:	add    BYTE PTR [rax],al
   140047f47:	add    BYTE PTR [rax+riz*2+0x4],al
   140047f4b:	rex add DWORD PTR [rax],eax
   140047f4e:	add    BYTE PTR [rax],al
   140047f50:	and    al,0x0
   140047f52:	add    BYTE PTR [rax],al
   140047f54:	add    BYTE PTR [rax],al
   140047f56:	add    BYTE PTR [rax],al
   140047f58:	rex (bad) 
   140047f5a:	add    al,0x40
   140047f5c:	add    DWORD PTR [rax],eax
   140047f5e:	add    BYTE PTR [rax],al
   140047f60:	and    al,0x4
   140047f62:	add    BYTE PTR [rax],al
   140047f64:	add    BYTE PTR [rax],al
   140047f66:	add    BYTE PTR [rax],al
   140047f68:	cmp    BYTE PTR [rax+0x4],ah
   140047f6b:	rex add DWORD PTR [rax],eax
   140047f6e:	add    BYTE PTR [rax],al
   140047f70:	ja     0x140047f72
   140047f72:	add    BYTE PTR [rax],al
   140047f74:	add    BYTE PTR [rax],al
   140047f76:	add    BYTE PTR [rax],al
   140047f78:	xor    al,0x60
   140047f7a:	add    al,0x40
   140047f7c:	add    DWORD PTR [rax],eax
   140047f7e:	add    BYTE PTR [rax],al
   140047f80:	ja     0x140047f86
   140047f82:	add    BYTE PTR [rax],al
   140047f84:	add    BYTE PTR [rax],al
   140047f86:	add    BYTE PTR [rax],al
   140047f88:	sub    al,0x60
   140047f8a:	add    al,0x40
   140047f8c:	add    DWORD PTR [rax],eax
   140047f8e:	add    BYTE PTR [rax],al
   140047f90:	sbb    al,0x0
   140047f92:	add    BYTE PTR [rax],al
   140047f94:	add    BYTE PTR [rax],al
   140047f96:	add    BYTE PTR [rax],al
   140047f98:	sub    BYTE PTR [rax+0x4],ah
   140047f9b:	rex add DWORD PTR [rax],eax
   140047f9e:	add    BYTE PTR [rax],al
   140047fa0:	sbb    al,0x4
   140047fa2:	add    BYTE PTR [rax],al
   140047fa4:	add    BYTE PTR [rax],al
   140047fa6:	add    BYTE PTR [rax],al
   140047fa8:	and    BYTE PTR [rax+0x4],ah
   140047fab:	rex add DWORD PTR [rax],eax
   140047fae:	add    BYTE PTR [rax],al
   140047fb0:	sbb    eax,0x0
   140047fb5:	add    BYTE PTR [rax],al
   140047fb7:	add    BYTE PTR [rax+riz*2],bl
   140047fba:	add    al,0x40
   140047fbc:	add    DWORD PTR [rax],eax
   140047fbe:	add    BYTE PTR [rax],al
   140047fc0:	sbb    eax,0x8
   140047fc5:	add    BYTE PTR [rax],al
   140047fc7:	add    BYTE PTR [rax+riz*2],dl
   140047fca:	add    al,0x40
   140047fcc:	add    DWORD PTR [rax],eax
   140047fce:	add    BYTE PTR [rax],al
   140047fd0:	sbb    eax,0x4
   140047fd5:	add    BYTE PTR [rax],al
   140047fd7:	add    BYTE PTR [rax+riz*2],cl
   140047fda:	add    al,0x40
   140047fdc:	add    DWORD PTR [rax],eax
   140047fde:	add    BYTE PTR [rax],al
   140047fe0:	add    BYTE PTR [r8],al
   140047fe3:	add    BYTE PTR [rax],al
   140047fe5:	add    BYTE PTR [rax],al
   140047fe7:	add    BYTE PTR [rax],cl
   140047fe9:	(bad)  
   140047fea:	add    al,0x40
   140047fec:	add    DWORD PTR [rax],eax
   140047fee:	add    BYTE PTR [rax],al
   140047ff0:	rex.B add al,0x0
   140047ff3:	add    BYTE PTR [rax],al
   140047ff5:	add    BYTE PTR [rax],al
   140047ff7:	add    BYTE PTR [rax],al
   140047ff9:	(bad)  
   140047ffa:	add    al,0x40
   140047ffc:	add    DWORD PTR [rax],eax
   140047ffe:	add    BYTE PTR [rax],al
   140048000:	pop    rdx
   140048001:	add    BYTE PTR [rax],al
   140048003:	add    BYTE PTR [rax],al
   140048005:	add    BYTE PTR [rax],al
   140048007:	add    ah,bh
   140048009:	pop    rdi
   14004800a:	add    al,0x40
   14004800c:	add    DWORD PTR [rax],eax
   14004800e:	add    BYTE PTR [rax],al
   140048010:	pop    rdx
   140048011:	add    al,0x0
   140048013:	add    BYTE PTR [rax],al
   140048015:	add    BYTE PTR [rax],al
   140048017:	add    ah,dh
   140048019:	pop    rdi
   14004801a:	add    al,0x40
   14004801c:	add    DWORD PTR [rax],eax
   14004801e:	add    BYTE PTR [rax],al
   140048020:	rex.WB add BYTE PTR [r8],al
   140048023:	add    BYTE PTR [rax],al
   140048025:	add    BYTE PTR [rax],al
   140048027:	add    al,dh
   140048029:	pop    rdi
   14004802a:	add    al,0x40
   14004802c:	add    DWORD PTR [rax],eax
   14004802e:	add    BYTE PTR [rax],al
   140048030:	rex.WB add al,0x0
   140048033:	add    BYTE PTR [rax],al
   140048035:	add    BYTE PTR [rax],al
   140048037:	add    al,ch
   140048039:	pop    rdi
   14004803a:	add    al,0x40
   14004803c:	add    DWORD PTR [rax],eax
   14004803e:	add    BYTE PTR [rax],al
   140048040:	rex.WX add BYTE PTR [rax],al
   140048043:	add    BYTE PTR [rax],al
   140048045:	add    BYTE PTR [rax],al
   140048047:	add    ah,ah
   140048049:	pop    rdi
   14004804a:	add    al,0x40
   14004804c:	add    DWORD PTR [rax],eax
   14004804e:	add    BYTE PTR [rax],al
   140048050:	rex.WX add al,0x0
   140048053:	add    BYTE PTR [rax],al
   140048055:	add    BYTE PTR [rax],al
   140048057:	add    ah,bl
   140048059:	pop    rdi
   14004805a:	add    al,0x40
   14004805c:	add    DWORD PTR [rax],eax
   14004805e:	add    BYTE PTR [rax],al
   140048060:	sub    BYTE PTR [rax],al
   140048062:	add    BYTE PTR [rax],al
   140048064:	add    BYTE PTR [rax],al
   140048066:	add    BYTE PTR [rax],al
   140048068:	fcomp  DWORD PTR [rdi+0x4]
   14004806b:	rex add DWORD PTR [rax],eax
   14004806e:	add    BYTE PTR [rax],al
   140048070:	sub    BYTE PTR [rax+rax*1+0x0],bh
   140048074:	add    BYTE PTR [rax],al
   140048076:	add    BYTE PTR [rax],al
   140048078:	rcr    BYTE PTR [rdi+0x4],1
   14004807b:	rex add DWORD PTR [rax],eax
   14004807e:	add    BYTE PTR [rax],al
   140048080:	sub    BYTE PTR [rax+rax*1],al
   140048083:	add    BYTE PTR [rax],al
   140048085:	add    BYTE PTR [rax],al
   140048087:	add    al,al
   140048089:	pop    rdi
   14004808a:	add    al,0x40
   14004808c:	add    DWORD PTR [rax],eax
   14004808e:	add    BYTE PTR [rax],al
   140048090:	(bad)  
   140048091:	add    BYTE PTR [rax],al
   140048093:	add    BYTE PTR [rax],al
   140048095:	add    BYTE PTR [rax],al
   140048097:	add    BYTE PTR [rdi+rbx*2+0x14004],bh
   14004809e:	add    BYTE PTR [rax],al
   1400480a0:	(bad)  
   1400480a1:	add    al,0x0
   1400480a3:	add    BYTE PTR [rax],al
   1400480a5:	add    BYTE PTR [rax],al
   1400480a7:	add    BYTE PTR [rdi+rbx*2+0x14004],dh
   1400480ae:	add    BYTE PTR [rax],al
   1400480b0:	jae    0x1400480b2
   1400480b2:	add    BYTE PTR [rax],al
   1400480b4:	add    BYTE PTR [rax],al
   1400480b6:	add    BYTE PTR [rax],al
   1400480b8:	mov    al,0x5f
   1400480ba:	add    al,0x40
   1400480bc:	add    DWORD PTR [rax],eax
   1400480be:	add    BYTE PTR [rax],al
   1400480c0:	jae    0x1400480ca
   1400480c2:	add    BYTE PTR [rax],al
   1400480c4:	add    BYTE PTR [rax],al
   1400480c6:	add    BYTE PTR [rax],al
   1400480c8:	test   al,0x5f
   1400480ca:	add    al,0x40
   1400480cc:	add    DWORD PTR [rax],eax
   1400480ce:	add    BYTE PTR [rax],al
   1400480d0:	jae    0x1400480d6
   1400480d2:	add    BYTE PTR [rax],al
   1400480d4:	add    BYTE PTR [rax],al
   1400480d6:	add    BYTE PTR [rax],al
   1400480d8:	movabs al,ds:0x420000000140045f
   1400480e1:	add    BYTE PTR [rax],al
   1400480e3:	add    BYTE PTR [rax],al
   1400480e5:	add    BYTE PTR [rax],al
   1400480e7:	add    BYTE PTR [rdi+rbx*2+0x14004],bl
   1400480ee:	add    BYTE PTR [rax],al
   1400480f0:	rex.X add al,0x0
   1400480f3:	add    BYTE PTR [rax],al
   1400480f5:	add    BYTE PTR [rax],al
   1400480f7:	add    BYTE PTR [rdi+rbx*2+0x14004],dl
   1400480fe:	add    BYTE PTR [rax],al
   140048100:	xor    al,BYTE PTR [rax]
   140048102:	add    BYTE PTR [rax],al
   140048104:	add    BYTE PTR [rax],al
   140048106:	add    BYTE PTR [rax],al
   140048108:	nop
   140048109:	pop    rdi
   14004810a:	add    al,0x40
   14004810c:	add    DWORD PTR [rax],eax
   14004810e:	add    BYTE PTR [rax],al
   140048110:	xor    al,BYTE PTR [rax+rax*1]
   140048113:	add    BYTE PTR [rax],al
   140048115:	add    BYTE PTR [rax],al
   140048117:	add    BYTE PTR [rax+0x140045f],cl
   14004811d:	add    BYTE PTR [rax],al
   14004811f:	add    BYTE PTR [rdi],bl
   140048121:	add    BYTE PTR [rax],al
   140048123:	add    BYTE PTR [rax],al
   140048125:	add    BYTE PTR [rax],al
   140048127:	add    BYTE PTR [rdi+rbx*2+0x14004],al
   14004812e:	add    BYTE PTR [rax],al
   140048130:	(bad)  
   140048131:	add    al,0x0
   140048133:	add    BYTE PTR [rax],al
   140048135:	add    BYTE PTR [rax],al
   140048137:	add    BYTE PTR [rdi+rbx*2+0x4],bh
   14004813b:	rex add DWORD PTR [rax],eax
   14004813e:	add    BYTE PTR [rax],al
   140048140:	add    BYTE PTR [rax],r8b
   140048143:	add    BYTE PTR [rax],al
   140048145:	add    BYTE PTR [rax],al
   140048147:	add    BYTE PTR [rax+0x5f],bh
   14004814a:	add    al,0x40
   14004814c:	add    DWORD PTR [rax],eax
   14004814e:	add    BYTE PTR [rax],al
   140048150:	rex.R add al,0x0
   140048153:	add    BYTE PTR [rax],al
   140048155:	add    BYTE PTR [rax],al
   140048157:	add    BYTE PTR [rax+0x5f],dh
   14004815a:	add    al,0x40
   14004815c:	add    DWORD PTR [rax],eax
   14004815e:	add    BYTE PTR [rax],al
   140048160:	pop    rdi
   140048161:	add    BYTE PTR [rax],al
   140048163:	add    BYTE PTR [rax],al
   140048165:	add    BYTE PTR [rax],al
   140048167:	add    BYTE PTR [rdi+rbx*2+0x4],ch
   14004816b:	rex add DWORD PTR [rax],eax
   14004816e:	add    BYTE PTR [rax],al
   140048170:	pop    rdi
   140048171:	jl     0x140048173
   140048173:	add    BYTE PTR [rax],al
   140048175:	add    BYTE PTR [rax],al
   140048177:	add    BYTE PTR [rax+0x5f],ah
   14004817a:	add    al,0x40
   14004817c:	add    DWORD PTR [rax],eax
   14004817e:	add    BYTE PTR [rax],al
   140048180:	pop    rdi
   140048181:	or     BYTE PTR [rax],al
   140048183:	add    BYTE PTR [rax],al
   140048185:	add    BYTE PTR [rax],al
   140048187:	add    BYTE PTR [rax+0x5f],dl
   14004818a:	add    al,0x40
   14004818c:	add    DWORD PTR [rax],eax
   14004818e:	add    BYTE PTR [rax],al
   140048190:	add    BYTE PTR [rax],0x0
   140048193:	add    BYTE PTR [rax],al
   140048195:	add    BYTE PTR [rax],al
   140048197:	add    BYTE PTR [rdi+rbx*2+0x4],cl
   14004819b:	rex add DWORD PTR [rax],eax
   14004819e:	add    BYTE PTR [rax],al
   1400481a0:	add    BYTE PTR [rax+rax*1],0x0
   1400481a4:	add    BYTE PTR [rax],al
   1400481a6:	add    BYTE PTR [rax],al
   1400481a8:	rex.R pop rdi
   1400481aa:	add    al,0x40
   1400481ac:	add    DWORD PTR [rax],eax
   1400481ae:	add    BYTE PTR [rax],al
   1400481b0:	and    al,BYTE PTR [rax]
   1400481b2:	add    BYTE PTR [rax],al
   1400481b4:	add    BYTE PTR [rax],al
   1400481b6:	add    BYTE PTR [rax],al
   1400481b8:	push   rsp
   1400481b9:	xor    DWORD PTR [rax+rax*2],eax
   1400481bc:	add    DWORD PTR [rax],eax
   1400481be:	add    BYTE PTR [rax],al
   1400481c0:	and    al,BYTE PTR [rax+rax*1]
   1400481c3:	add    BYTE PTR [rax],al
   1400481c5:	add    BYTE PTR [rax],al
   1400481c7:	add    BYTE PTR [rdi+rbx*2],bh
   1400481ca:	add    al,0x40
   1400481cc:	add    DWORD PTR [rax],eax
   1400481ce:	add    BYTE PTR [rax],al
   1400481d0:	and    BYTE PTR [rax],al
   1400481d2:	add    BYTE PTR [rax],al
   1400481d4:	add    BYTE PTR [rax],al
   1400481d6:	add    BYTE PTR [rax],al
   1400481d8:	cmp    BYTE PTR [rdi+0x4],bl
   1400481db:	rex add DWORD PTR [rax],eax
   1400481de:	add    BYTE PTR [rax],al
   1400481e0:	and    BYTE PTR [rax],cl
   1400481e2:	add    BYTE PTR [rax],al
   1400481e4:	add    BYTE PTR [rax],al
   1400481e6:	add    BYTE PTR [rax],al
   1400481e8:	xor    BYTE PTR [rdi+0x4],bl
   1400481eb:	rex add DWORD PTR [rax],eax
   1400481ee:	add    BYTE PTR [rax],al
   1400481f0:	and    BYTE PTR [rax+rax*1],al
   1400481f3:	add    BYTE PTR [rax],al
   1400481f5:	add    BYTE PTR [rax],al
   1400481f7:	add    BYTE PTR [rax],ch
   1400481f9:	pop    rdi
   1400481fa:	add    al,0x40
   1400481fc:	add    DWORD PTR [rax],eax
   1400481fe:	add    BYTE PTR [rax],al
   140048200:	rex.XB add BYTE PTR [r8],al
   140048203:	add    BYTE PTR [rax],al
   140048205:	add    BYTE PTR [rax],al
   140048207:	add    BYTE PTR [rdi+rbx*2],ah
   14004820a:	add    al,0x40
   14004820c:	add    DWORD PTR [rax],eax
   14004820e:	add    BYTE PTR [rax],al
   140048210:	rex.XB or BYTE PTR [r8],al
   140048213:	add    BYTE PTR [rax],al
   140048215:	add    BYTE PTR [rax],al
   140048217:	add    BYTE PTR [rax],bl
   140048219:	pop    rdi
   14004821a:	add    al,0x40
   14004821c:	add    DWORD PTR [rax],eax
   14004821e:	add    BYTE PTR [rax],al
   140048220:	rex.XB js 0x140048223
   140048223:	add    BYTE PTR [rax],al
   140048225:	add    BYTE PTR [rax],al
   140048227:	add    BYTE PTR [rax],dl
   140048229:	pop    rdi
   14004822a:	add    al,0x40
   14004822c:	add    DWORD PTR [rax],eax
   14004822e:	add    BYTE PTR [rax],al
   140048230:	rex.XB or BYTE PTR [r8],al
   140048233:	add    BYTE PTR [rax],al
   140048235:	add    BYTE PTR [rax],al
   140048237:	add    BYTE PTR [rdi+rbx*2],al
   14004823a:	add    al,0x40
   14004823c:	add    DWORD PTR [rax],eax
   14004823e:	add    BYTE PTR [rax],al
   140048240:	rex.XB add al,0x0
   140048243:	add    BYTE PTR [rax],al
   140048245:	add    BYTE PTR [rax],al
   140048247:	add    al,bh
   140048249:	pop    rsi
   14004824a:	add    al,0x40
   14004824c:	add    DWORD PTR [rax],eax
   14004824e:	add    BYTE PTR [rax],al
   140048250:	rex.XB jl 0x140048253
   140048253:	add    BYTE PTR [rax],al
   140048255:	add    BYTE PTR [rax],al
   140048257:	add    al,dh
   140048259:	pop    rsi
   14004825a:	add    al,0x40
   14004825c:	add    DWORD PTR [rax],eax
   14004825e:	add    BYTE PTR [rax],al
   140048260:	xor    eax,DWORD PTR [rax]
   140048262:	add    BYTE PTR [rax],al
   140048264:	add    BYTE PTR [rax],al
   140048266:	add    BYTE PTR [rax],al
   140048268:	in     al,dx
   140048269:	pop    rsi
   14004826a:	add    al,0x40
   14004826c:	add    DWORD PTR [rax],eax
   14004826e:	add    BYTE PTR [rax],al
   140048270:	xor    eax,DWORD PTR [rax+rax*1]
   140048273:	add    BYTE PTR [rax],al
   140048275:	add    BYTE PTR [rax],al
   140048277:	add    ah,ah
   140048279:	pop    rsi
   14004827a:	add    al,0x40
   14004827c:	add    DWORD PTR [rax],eax
   14004827e:	add    BYTE PTR [rax],al
   140048280:	sub    al,BYTE PTR [rax]
   140048282:	add    BYTE PTR [rax],al
   140048284:	add    BYTE PTR [rax],al
   140048286:	add    BYTE PTR [rax],al
   140048288:	loopne 0x1400482e8
   14004828a:	add    al,0x40
   14004828c:	add    DWORD PTR [rax],eax
   14004828e:	add    BYTE PTR [rax],al
   140048290:	sub    al,BYTE PTR [rax+rax*1]
   140048293:	add    BYTE PTR [rax],al
   140048295:	add    BYTE PTR [rax],al
   140048297:	add    al,bl
   140048299:	pop    rsi
   14004829a:	add    al,0x40
   14004829c:	add    DWORD PTR [rax],eax
   14004829e:	add    BYTE PTR [rax],al
   1400482a0:	add    BYTE PTR cs:[rax],al
   1400482a3:	add    BYTE PTR [rax],al
   1400482a5:	add    BYTE PTR [rax],al
   1400482a7:	add    ah,dl
   1400482a9:	pop    rsi
   1400482aa:	add    al,0x40
   1400482ac:	add    DWORD PTR [rax],eax
   1400482ae:	add    BYTE PTR [rax],al
   1400482b0:	cs add al,0x0
   1400482b3:	add    BYTE PTR [rax],al
   1400482b5:	add    BYTE PTR [rax],al
   1400482b7:	add    ah,cl
   1400482b9:	pop    rsi
   1400482ba:	add    al,0x40
   1400482bc:	add    DWORD PTR [rax],eax
   1400482be:	add    BYTE PTR [rax],al
   1400482c0:	cs add al,0x0
   1400482c3:	add    BYTE PTR [rax],al
   1400482c5:	add    BYTE PTR [rax],al
   1400482c7:	add    ah,al
   1400482c9:	pop    rsi
   1400482ca:	add    al,0x40
   1400482cc:	add    DWORD PTR [rax],eax
   1400482ce:	add    BYTE PTR [rax],al
   1400482d0:	or     BYTE PTR cs:[rax],al
   1400482d3:	add    BYTE PTR [rax],al
   1400482d5:	add    BYTE PTR [rax],al
   1400482d7:	add    BYTE PTR [rsi+rbx*2+0x14004],bh
   1400482de:	add    BYTE PTR [rax],al
   1400482e0:	cs jl  0x1400482e3
   1400482e3:	add    BYTE PTR [rax],al
   1400482e5:	add    BYTE PTR [rax],al
   1400482e7:	add    BYTE PTR [rax+0x140045e],bh
   1400482ed:	add    BYTE PTR [rax],al
   1400482ef:	add    BYTE PTR [rsi],ch
   1400482f1:	add    BYTE PTR [rax],al
   1400482f3:	add    BYTE PTR [rax],al
   1400482f5:	add    BYTE PTR [rax],al
   1400482f7:	add    BYTE PTR [rsi+rbx*2+0x14004],dh
   1400482fe:	add    BYTE PTR [rax],al
   140048300:	mov    BYTE PTR [rax],al
   140048302:	add    BYTE PTR [rax],al
   140048304:	add    BYTE PTR [rax],al
   140048306:	add    BYTE PTR [rax],al
   140048308:	mov    al,0x5e
   14004830a:	add    al,0x40
   14004830c:	add    DWORD PTR [rax],eax
   14004830e:	add    BYTE PTR [rax],al
   140048310:	mov    BYTE PTR [rax+rax*1],al
   140048313:	add    BYTE PTR [rax],al
   140048315:	add    BYTE PTR [rax],al
   140048317:	add    BYTE PTR [rax+0x140045e],ch
   14004831d:	add    BYTE PTR [rax],al
   14004831f:	add    BYTE PTR [rax+rax*1],dh
   140048322:	add    BYTE PTR [rax],al
   140048324:	add    BYTE PTR [rax],al
   140048326:	add    BYTE PTR [rax],al
   140048328:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140048329:	pop    rsi
   14004832a:	add    al,0x40
   14004832c:	add    DWORD PTR [rax],eax
   14004832e:	add    BYTE PTR [rax],al
   140048330:	xor    al,0x4
   140048332:	add    BYTE PTR [rax],al
   140048334:	add    BYTE PTR [rax],al
   140048336:	add    BYTE PTR [rax],al
   140048338:	pushf  
   140048339:	pop    rsi
   14004833a:	add    al,0x40
   14004833c:	add    DWORD PTR [rax],eax
   14004833e:	add    BYTE PTR [rax],al
   140048340:	push   0x0
   140048342:	add    BYTE PTR [rax],al
   140048344:	add    BYTE PTR [rax],al
   140048346:	add    BYTE PTR [rax],al
   140048348:	cwde   
   140048349:	pop    rsi
   14004834a:	add    al,0x40
   14004834c:	add    DWORD PTR [rax],eax
   14004834e:	add    BYTE PTR [rax],al
   140048350:	push   0x4
   140048352:	add    BYTE PTR [rax],al
   140048354:	add    BYTE PTR [rax],al
   140048356:	add    BYTE PTR [rax],al
   140048358:	nop
   140048359:	pop    rsi
   14004835a:	add    al,0x40
   14004835c:	add    DWORD PTR [rax],eax
   14004835e:	add    BYTE PTR [rax],al
   140048360:	add    al,0x0
   140048362:	add    BYTE PTR [rax],al
   140048364:	add    BYTE PTR [rax],al
   140048366:	add    BYTE PTR [rax],al
   140048368:	mov    BYTE PTR [rsi+0x4],bl
   14004836b:	rex add DWORD PTR [rax],eax
   14004836e:	add    BYTE PTR [rax],al
   140048370:	add    al,0x78
   140048372:	add    BYTE PTR [rax],al
   140048374:	add    BYTE PTR [rax],al
   140048376:	add    BYTE PTR [rax],al
   140048378:	test   BYTE PTR [rsi+0x4],bl
   14004837b:	rex add DWORD PTR [rax],eax
   14004837e:	add    BYTE PTR [rax],al
   140048380:	add    al,0x8
   140048382:	add    BYTE PTR [rax],al
   140048384:	add    BYTE PTR [rax],al
   140048386:	add    BYTE PTR [rax],al
   140048388:	jl     0x1400483e8
   14004838a:	add    al,0x40
   14004838c:	add    DWORD PTR [rax],eax
   14004838e:	add    BYTE PTR [rax],al
   140048390:	add    al,0x8
   140048392:	add    BYTE PTR [rax],al
   140048394:	add    BYTE PTR [rax],al
   140048396:	add    BYTE PTR [rax],al
   140048398:	jo     0x1400483f8
   14004839a:	add    al,0x40
   14004839c:	add    DWORD PTR [rax],eax
   14004839e:	add    BYTE PTR [rax],al
   1400483a0:	add    al,0xc
   1400483a2:	add    BYTE PTR [rax],al
   1400483a4:	add    BYTE PTR [rax],al
   1400483a6:	add    BYTE PTR [rax],al
   1400483a8:	(bad)  
   1400483a9:	pop    rsi
   1400483aa:	add    al,0x40
   1400483ac:	add    DWORD PTR [rax],eax
   1400483ae:	add    BYTE PTR [rax],al
   1400483b0:	add    al,0xc
   1400483b2:	add    BYTE PTR [rax],al
   1400483b4:	add    BYTE PTR [rax],al
   1400483b6:	add    BYTE PTR [rax],al
   1400483b8:	push   rsp
   1400483b9:	pop    rsi
   1400483ba:	add    al,0x40
   1400483bc:	add    DWORD PTR [rax],eax
   1400483be:	add    BYTE PTR [rax],al
   1400483c0:	add    al,0x14
   1400483c2:	add    BYTE PTR [rax],al
   1400483c4:	add    BYTE PTR [rax],al
   1400483c6:	add    BYTE PTR [rax],al
   1400483c8:	rex.W pop rsi
   1400483ca:	add    al,0x40
   1400483cc:	add    DWORD PTR [rax],eax
   1400483ce:	add    BYTE PTR [rax],al
   1400483d0:	add    al,0x14
   1400483d2:	add    BYTE PTR [rax],al
   1400483d4:	add    BYTE PTR [rax],al
   1400483d6:	add    BYTE PTR [rax],al
   1400483d8:	cmp    al,0x5e
   1400483da:	add    al,0x40
   1400483dc:	add    DWORD PTR [rax],eax
   1400483de:	add    BYTE PTR [rax],al
   1400483e0:	add    al,0x10
   1400483e2:	add    BYTE PTR [rax],al
   1400483e4:	add    BYTE PTR [rax],al
   1400483e6:	add    BYTE PTR [rax],al
   1400483e8:	xor    BYTE PTR [rsi+0x4],bl
   1400483eb:	rex add DWORD PTR [rax],eax
   1400483ee:	add    BYTE PTR [rax],al
   1400483f0:	add    al,0x10
   1400483f2:	add    BYTE PTR [rax],al
   1400483f4:	add    BYTE PTR [rax],al
   1400483f6:	add    BYTE PTR [rax],al
   1400483f8:	and    al,0x5e
   1400483fa:	add    al,0x40
   1400483fc:	add    DWORD PTR [rax],eax
   1400483fe:	add    BYTE PTR [rax],al
   140048400:	add    al,0x4
   140048402:	add    BYTE PTR [rax],al
   140048404:	add    BYTE PTR [rax],al
   140048406:	add    BYTE PTR [rax],al
   140048408:	sbb    BYTE PTR [rsi+0x4],bl
   14004840b:	rex add DWORD PTR [rax],eax
   14004840e:	add    BYTE PTR [rax],al
   140048410:	add    al,0x7c
   140048412:	add    BYTE PTR [rax],al
   140048414:	add    BYTE PTR [rax],al
   140048416:	add    BYTE PTR [rax],al
   140048418:	adc    BYTE PTR [rsi+0x4],bl
   14004841b:	rex add DWORD PTR [rax],eax
   14004841e:	add    BYTE PTR [rax],al
   140048420:	add    al,0x4
   140048422:	add    BYTE PTR [rax],al
   140048424:	add    BYTE PTR [rax],al
   140048426:	add    BYTE PTR [rax],al
   140048428:	add    al,0x5e
   14004842a:	add    al,0x40
   14004842c:	add    DWORD PTR [rax],eax
   14004842e:	add    BYTE PTR [rax],al
   140048430:	add    al,0x4
   140048432:	add    eax,DWORD PTR [rax]
   140048434:	add    BYTE PTR [rax],al
   140048436:	add    BYTE PTR [rax],al
   140048438:	sbb    BYTE PTR [rsi+0x4],bl
   14004843b:	rex add DWORD PTR [rax],eax
   14004843e:	add    BYTE PTR [rax],al
   140048440:	add    al,0x4
   140048442:	add    eax,DWORD PTR [rax]
   140048444:	add    BYTE PTR [rax],al
   140048446:	add    BYTE PTR [rax],al
   140048448:	add    al,0x5e
   14004844a:	add    al,0x40
   14004844c:	add    DWORD PTR [rax],eax
   14004844e:	add    BYTE PTR [rax],al
   140048450:	add    al,0x4
   140048452:	add    al,BYTE PTR [rax]
   140048454:	add    BYTE PTR [rax],al
   140048456:	add    BYTE PTR [rax],al
   140048458:	call   0x1414488ba
   14004845d:	add    BYTE PTR [rax],al
   14004845f:	add    BYTE PTR [rsp+rax*1],al
   140048462:	add    al,BYTE PTR [rax]
   140048464:	add    BYTE PTR [rax],al
   140048466:	add    BYTE PTR [rax],al
   140048468:	rcr    BYTE PTR [rbp+0x4],1
   14004846b:	rex add DWORD PTR [rax],eax
   14004846e:	add    BYTE PTR [rax],al
   140048470:	add    al,0x8
   140048472:	add    al,BYTE PTR [rax]
   140048474:	add    BYTE PTR [rax],al
   140048476:	add    BYTE PTR [rax],al
   140048478:	mov    al,0x5d
   14004847a:	add    al,0x40
   14004847c:	add    DWORD PTR [rax],eax
   14004847e:	add    BYTE PTR [rax],al
   140048480:	add    al,0x8
   140048482:	add    al,BYTE PTR [rax]
   140048484:	add    BYTE PTR [rax],al
   140048486:	add    BYTE PTR [rax],al
   140048488:	cwde   
   140048489:	pop    rbp
   14004848a:	add    al,0x40
   14004848c:	add    DWORD PTR [rax],eax
   14004848e:	add    BYTE PTR [rax],al
   140048490:	xor    eax,0x0
   140048495:	add    BYTE PTR [rax],al
   140048497:	add    BYTE PTR [rax+0x140045d],dl
   14004849d:	add    BYTE PTR [rax],al
   14004849f:	add    BYTE PTR [rip+0x4],dh        # 0x1400484a9
   1400484a5:	add    BYTE PTR [rax],al
   1400484a7:	add    BYTE PTR [rax+0x140045d],cl
   1400484ad:	add    BYTE PTR [rax],al
   1400484af:	add    BYTE PTR [rdx],al
   1400484b1:	add    BYTE PTR [rax],al
   1400484b3:	add    BYTE PTR [rax],al
   1400484b5:	add    BYTE PTR [rax],al
   1400484b7:	add    al,dh
   1400484b9:	imul   eax,DWORD PTR [rax+rax*2],0x1
   1400484c0:	add    al,BYTE PTR [rax]
   1400484c2:	add    BYTE PTR [rax],al
   1400484c4:	add    BYTE PTR [rax],al
   1400484c6:	add    BYTE PTR [rax],al
   1400484c8:	rex imul eax,DWORD PTR [rax+rax*2],0x1
   1400484cd:	add    BYTE PTR [rax],al
   1400484cf:	add    BYTE PTR [rcx],dl
   1400484d1:	add    BYTE PTR [rax],al
   1400484d3:	add    BYTE PTR [rax],al
   1400484d5:	add    BYTE PTR [rax],al
   1400484d7:	add    BYTE PTR [rax],dl
   1400484d9:	push   0x4
   1400484db:	rex add DWORD PTR [rax],eax
   1400484de:	add    BYTE PTR [rax],al
   1400484e0:	add    al,BYTE PTR [rax]
   1400484e2:	add    BYTE PTR [rax],al
   1400484e4:	add    BYTE PTR [rax],al
   1400484e6:	add    BYTE PTR [rax],al
   1400484e8:	(bad)  
   1400484e9:	imul   eax,DWORD PTR [rax+rax*2],0x1
   1400484ed:	add    BYTE PTR [rax],al
   1400484ef:	add    BYTE PTR [rdx],al
   1400484f1:	add    BYTE PTR [rax],al
   1400484f3:	add    BYTE PTR [rax],al
   1400484f5:	add    BYTE PTR [rax],al
   1400484f7:	add    BYTE PTR [rax],ah
   1400484f9:	imul   eax,DWORD PTR [rax+rax*2],0x1
   1400484fd:	add    BYTE PTR [rax],al
   1400484ff:	add    BYTE PTR [rsi],al
   140048501:	add    BYTE PTR [rax],al
   140048503:	add    BYTE PTR [rax],al
   140048505:	add    BYTE PTR [rax],al
   140048507:	add    BYTE PTR [rax+0x140046b],al
   14004850d:	add    BYTE PTR [rax],al
   14004850f:	add    BYTE PTR [rdx],al
   140048511:	add    BYTE PTR [rax],al
   140048513:	add    BYTE PTR [rax],al
   140048515:	add    BYTE PTR [rax],al
   140048517:	add    al,ah
   140048519:	imul   eax,DWORD PTR [rax+rax*2],0x1
   14004851d:	add    BYTE PTR [rax],al
   14004851f:	add    BYTE PTR [rdx],al
	...
   140048529:	ins    BYTE PTR es:[rdi],dx
   14004852a:	add    al,0x40
   14004852c:	add    DWORD PTR [rax],eax
   14004852e:	add    BYTE PTR [rax],al
   140048530:	add    al,BYTE PTR [rax]
   140048532:	add    BYTE PTR [rax],al
   140048534:	add    BYTE PTR [rax],al
   140048536:	add    BYTE PTR [rax],al
   140048538:	and    BYTE PTR [rsp+rax*1+0x40],ch
   14004853c:	add    DWORD PTR [rax],eax
   14004853e:	add    BYTE PTR [rax],al
   140048540:	add    eax,DWORD PTR [rax]
   140048542:	add    BYTE PTR [rax],al
   140048544:	add    BYTE PTR [rax],al
   140048546:	add    BYTE PTR [rax],al
   140048548:	rex ins BYTE PTR es:[rdi],dx
   14004854a:	add    al,0x40
   14004854c:	add    DWORD PTR [rax],eax
   14004854e:	add    BYTE PTR [rax],al
   140048550:	add    eax,DWORD PTR [rax]
   140048552:	add    BYTE PTR [rax],al
   140048554:	add    BYTE PTR [rax],al
   140048556:	add    BYTE PTR [rax],al
   140048558:	jo     0x1400485c6
   14004855a:	add    al,0x40
   14004855c:	add    DWORD PTR [rax],eax
   14004855e:	add    BYTE PTR [rax],al
   140048560:	add    al,BYTE PTR [rax]
   140048562:	add    BYTE PTR [rax],al
   140048564:	add    BYTE PTR [rax],al
   140048566:	add    BYTE PTR [rax],al
   140048568:	movabs al,ds:0x20000000140046c
   140048571:	add    BYTE PTR [rax],al
   140048573:	add    BYTE PTR [rax],al
   140048575:	add    BYTE PTR [rax],al
   140048577:	add    al,al
   140048579:	ins    BYTE PTR es:[rdi],dx
   14004857a:	add    al,0x40
   14004857c:	add    DWORD PTR [rax],eax
   14004857e:	add    BYTE PTR [rax],al
   140048580:	add    al,BYTE PTR [rax]
   140048582:	add    BYTE PTR [rax],al
   140048584:	add    BYTE PTR [rax],al
   140048586:	add    BYTE PTR [rax],al
   140048588:	add    BYTE PTR [rbp+0x4],ch
   14004858b:	rex add DWORD PTR [rax],eax
   14004858e:	add    BYTE PTR [rax],al
   140048590:	add    al,BYTE PTR [rax]
   140048592:	add    BYTE PTR [rax],al
   140048594:	add    BYTE PTR [rax],al
   140048596:	add    BYTE PTR [rax],al
   140048598:	loopne 0x140048606
   14004859a:	add    al,0x40
   14004859c:	add    DWORD PTR [rax],eax
   14004859e:	add    BYTE PTR [rax],al
   1400485a0:	add    al,BYTE PTR [rax]
   1400485a2:	add    BYTE PTR [rax],al
   1400485a4:	add    BYTE PTR [rax],al
   1400485a6:	add    BYTE PTR [rax],al
   1400485a8:	and    BYTE PTR [rbp+0x4],ch
   1400485ab:	rex add DWORD PTR [rax],eax
   1400485ae:	add    BYTE PTR [rax],al
   1400485b0:	add    al,BYTE PTR [rax]
   1400485b2:	add    BYTE PTR [rax],al
   1400485b4:	add    BYTE PTR [rax],al
   1400485b6:	add    BYTE PTR [rax],al
   1400485b8:	rex ins DWORD PTR es:[rdi],dx
   1400485ba:	add    al,0x40
   1400485bc:	add    DWORD PTR [rax],eax
   1400485be:	add    BYTE PTR [rax],al
   1400485c0:	add    al,BYTE PTR [rax]
   1400485c2:	add    BYTE PTR [rax],al
   1400485c4:	add    BYTE PTR [rax],al
   1400485c6:	add    BYTE PTR [rax],al
   1400485c8:	(bad)  
   1400485c9:	ins    DWORD PTR es:[rdi],dx
   1400485ca:	add    al,0x40
   1400485cc:	add    DWORD PTR [rax],eax
   1400485ce:	add    BYTE PTR [rax],al
   1400485d0:	or     BYTE PTR [rax],al
   1400485d2:	add    BYTE PTR [rax],al
   1400485d4:	add    BYTE PTR [rax],al
   1400485d6:	add    BYTE PTR [rax],al
   1400485d8:	sub    BYTE PTR [rbp+0x4],0x40
   1400485dc:	add    DWORD PTR [rax],eax
   1400485de:	add    BYTE PTR [rax],al
   1400485e0:	add    al,BYTE PTR [rax]
   1400485e2:	add    BYTE PTR [rax],al
   1400485e4:	add    BYTE PTR [rax],al
   1400485e6:	add    BYTE PTR [rax],al
   1400485e8:	add    BYTE PTR [rsi+0x4],ch
   1400485eb:	rex add DWORD PTR [rax],eax
   1400485ee:	add    BYTE PTR [rax],al
   1400485f0:	add    al,BYTE PTR [rax]
   1400485f2:	add    BYTE PTR [rax],al
   1400485f4:	add    BYTE PTR [rax],al
   1400485f6:	add    BYTE PTR [rax],al
   1400485f8:	and    BYTE PTR [rsi+0x4],ch
   1400485fb:	rex add DWORD PTR [rax],eax
   1400485fe:	add    BYTE PTR [rax],al
   140048600:	sbb    BYTE PTR [rax],al
   140048602:	add    BYTE PTR [rax],al
   140048604:	add    BYTE PTR [rax],al
   140048606:	add    BYTE PTR [rax],al
   140048608:	rex outs dx,BYTE PTR ds:[rsi]
   14004860a:	add    al,0x40
   14004860c:	add    DWORD PTR [rax],eax
   14004860e:	add    BYTE PTR [rax],al
   140048610:	add    DWORD PTR [rax],eax
   140048612:	add    BYTE PTR [rax],al
   140048614:	add    BYTE PTR [rax],al
   140048616:	add    BYTE PTR [rax],al
   140048618:	shr    BYTE PTR [rdi+0x4],0x40
   14004861c:	add    DWORD PTR [rax],eax
   14004861e:	add    BYTE PTR [rax],al
   140048620:	(bad)  
   140048621:	add    BYTE PTR [rax],al
   140048623:	add    BYTE PTR [rax],al
   140048625:	add    BYTE PTR [rax],al
   140048627:	add    al,dl
   140048629:	outs   dx,DWORD PTR ds:[rsi]
   14004862a:	add    al,0x40
   14004862c:	add    DWORD PTR [rax],eax
   14004862e:	add    BYTE PTR [rax],al
   140048630:	add    al,BYTE PTR [rax]
   140048632:	add    BYTE PTR [rax],al
   140048634:	add    BYTE PTR [rax],al
   140048636:	add    BYTE PTR [rax],al
   140048638:	rex jno 0x14004863f
   14004863b:	rex add DWORD PTR [rax],eax
   14004863e:	add    BYTE PTR [rax],al
   140048640:	add    al,BYTE PTR [rax]
   140048642:	add    BYTE PTR [rax],al
   140048644:	add    BYTE PTR [rax],al
   140048646:	add    BYTE PTR [rax],al
   140048648:	(bad)  
   140048649:	jno    0x14004864f
   14004864b:	rex add DWORD PTR [rax],eax
   14004864e:	add    BYTE PTR [rax],al
   140048650:	add    eax,DWORD PTR [rax]
   140048652:	add    BYTE PTR [rax],al
   140048654:	add    BYTE PTR [rax],al
   140048656:	add    BYTE PTR [rax],al
   140048658:	xor    BYTE PTR [rcx+0x4],0x40
   14004865c:	add    DWORD PTR [rax],eax
   14004865e:	add    BYTE PTR [rax],al
   140048660:	add    al,BYTE PTR [rax]
   140048662:	add    BYTE PTR [rax],al
   140048664:	add    BYTE PTR [rax],al
   140048666:	add    BYTE PTR [rax],al
   140048668:	mov    al,0x71
   14004866a:	add    al,0x40
   14004866c:	add    DWORD PTR [rax],eax
   14004866e:	add    BYTE PTR [rax],al
   140048670:	add    al,BYTE PTR [rax]
   140048672:	add    BYTE PTR [rax],al
   140048674:	add    BYTE PTR [rax],al
   140048676:	add    BYTE PTR [rax],al
   140048678:	shl    BYTE PTR [rcx+0x4],1
   14004867b:	rex add DWORD PTR [rax],eax
   14004867e:	add    BYTE PTR [rax],al
   140048680:	add    al,BYTE PTR [rax]
   140048682:	add    BYTE PTR [rax],al
   140048684:	add    BYTE PTR [rax],al
   140048686:	add    BYTE PTR [rax],al
   140048688:	lock jno 0x14004868f
   14004868b:	rex add DWORD PTR [rax],eax
   14004868e:	add    BYTE PTR [rax],al
   140048690:	add    al,BYTE PTR [rax]
   140048692:	add    BYTE PTR [rax],al
   140048694:	add    BYTE PTR [rax],al
   140048696:	add    BYTE PTR [rax],al
   140048698:	adc    BYTE PTR [rdx+0x4],dh
   14004869b:	rex add DWORD PTR [rax],eax
   14004869e:	add    BYTE PTR [rax],al
   1400486a0:	sldt   WORD PTR [rax]
   1400486a3:	add    BYTE PTR [rax],al
   1400486a5:	add    BYTE PTR [rax],al
   1400486a7:	add    BYTE PTR [rax],dh
   1400486a9:	jb     0x1400486af
   1400486ab:	rex add DWORD PTR [rax],eax
   1400486ae:	add    BYTE PTR [rax],al
   1400486b0:	add    al,BYTE PTR [rax]
   1400486b2:	add    BYTE PTR [rax],al
   1400486b4:	add    BYTE PTR [rax],al
   1400486b6:	add    BYTE PTR [rax],al
   1400486b8:	and    BYTE PTR [rbx+0x4],dh
   1400486bb:	rex add DWORD PTR [rax],eax
   1400486be:	add    BYTE PTR [rax],al
   1400486c0:	add    al,BYTE PTR [rax]
   1400486c2:	add    BYTE PTR [rax],al
   1400486c4:	add    BYTE PTR [rax],al
   1400486c6:	add    BYTE PTR [rax],al
   1400486c8:	rex jae 0x1400486cf
   1400486cb:	rex add DWORD PTR [rax],eax
   1400486ce:	add    BYTE PTR [rax],al
   1400486d0:	add    al,BYTE PTR [rax]
   1400486d2:	add    BYTE PTR [rax],al
   1400486d4:	add    BYTE PTR [rax],al
   1400486d6:	add    BYTE PTR [rax],al
   1400486d8:	(bad)  
   1400486d9:	jae    0x1400486df
   1400486db:	rex add DWORD PTR [rax],eax
   1400486de:	add    BYTE PTR [rax],al
   1400486e0:	add    al,BYTE PTR [rax]
   1400486e2:	add    BYTE PTR [rax],al
   1400486e4:	add    BYTE PTR [rax],al
   1400486e6:	add    BYTE PTR [rax],al
   1400486e8:	xor    BYTE PTR [rbx+0x4],0x40
   1400486ec:	add    DWORD PTR [rax],eax
   1400486ee:	add    BYTE PTR [rax],al
   1400486f0:	add    al,BYTE PTR [rax]
   1400486f2:	add    BYTE PTR [rax],al
   1400486f4:	add    BYTE PTR [rax],al
   1400486f6:	add    BYTE PTR [rax],al
   1400486f8:	shl    BYTE PTR [rbx+0x4],0x40
   1400486fc:	add    DWORD PTR [rax],eax
   1400486fe:	add    BYTE PTR [rax],al
   140048700:	add    al,BYTE PTR [rax]
   140048702:	add    BYTE PTR [rax],al
   140048704:	add    BYTE PTR [rax],al
   140048706:	add    BYTE PTR [rax],al
   140048708:	loopne 0x14004877d
   14004870a:	add    al,0x40
   14004870c:	add    DWORD PTR [rax],eax
   14004870e:	add    BYTE PTR [rax],al
   140048710:	add    al,BYTE PTR [rax]
   140048712:	add    BYTE PTR [rax],al
   140048714:	add    BYTE PTR [rax],al
   140048716:	add    BYTE PTR [rax],al
   140048718:	movabs al,ds:0x300000001400473
	...
   140048729:	je     0x14004872f
   14004872b:	rex add DWORD PTR [rax],eax
   14004872e:	add    BYTE PTR [rax],al
   140048730:	add    al,BYTE PTR [rax]
   140048732:	add    BYTE PTR [rax],al
   140048734:	add    BYTE PTR [rax],al
   140048736:	add    BYTE PTR [rax],al
   140048738:	xor    BYTE PTR [rsp+rax*1+0x40],dh
   14004873c:	add    DWORD PTR [rax],eax
   14004873e:	add    BYTE PTR [rax],al
   140048740:	add    al,BYTE PTR [rax]
   140048742:	add    BYTE PTR [rax],al
   140048744:	add    BYTE PTR [rax],al
   140048746:	add    BYTE PTR [rax],al
   140048748:	push   rax
   140048749:	je     0x14004874f
   14004874b:	rex add DWORD PTR [rax],eax
   14004874e:	add    BYTE PTR [rax],al
   140048750:	add    al,BYTE PTR [rax]
   140048752:	add    BYTE PTR [rax],al
   140048754:	add    BYTE PTR [rax],al
   140048756:	add    BYTE PTR [rax],al
   140048758:	jo     0x1400487ce
   14004875a:	add    al,0x40
   14004875c:	add    DWORD PTR [rax],eax
   14004875e:	add    BYTE PTR [rax],al
   140048760:	adc    al,0x0
   140048762:	add    BYTE PTR [rax],al
   140048764:	add    BYTE PTR [rax],al
   140048766:	add    BYTE PTR [rax],al
   140048768:	nop
   140048769:	je     0x14004876f
   14004876b:	rex add DWORD PTR [rax],eax
   14004876e:	add    BYTE PTR [rax],al
   140048770:	add    al,BYTE PTR [rax]
   140048772:	add    BYTE PTR [rax],al
   140048774:	add    BYTE PTR [rax],al
   140048776:	add    BYTE PTR [rax],al
   140048778:	shl    BYTE PTR [rbp+0x4],1
   14004877b:	rex add DWORD PTR [rax],eax
   14004877e:	add    BYTE PTR [rax],al
   140048780:	add    al,BYTE PTR [rax]
   140048782:	add    BYTE PTR [rax],al
   140048784:	add    BYTE PTR [rax],al
   140048786:	add    BYTE PTR [rax],al
   140048788:	lock jne 0x14004878f
   14004878b:	rex add DWORD PTR [rax],eax
   14004878e:	add    BYTE PTR [rax],al
   140048790:	add    al,BYTE PTR [rax]
   140048792:	add    BYTE PTR [rax],al
   140048794:	add    BYTE PTR [rax],al
   140048796:	add    BYTE PTR [rax],al
   140048798:	adc    BYTE PTR [rsi+0x4],dh
   14004879b:	rex add DWORD PTR [rax],eax
   14004879e:	add    BYTE PTR [rax],al
   1400487a0:	add    al,BYTE PTR [rax]
   1400487a2:	add    BYTE PTR [rax],al
   1400487a4:	add    BYTE PTR [rax],al
   1400487a6:	add    BYTE PTR [rax],al
   1400487a8:	xor    BYTE PTR [rsi+0x4],dh
   1400487ab:	rex add DWORD PTR [rax],eax
   1400487ae:	add    BYTE PTR [rax],al
   1400487b0:	add    al,BYTE PTR [rax]
   1400487b2:	add    BYTE PTR [rax],al
   1400487b4:	add    BYTE PTR [rax],al
   1400487b6:	add    BYTE PTR [rax],al
   1400487b8:	push   rax
   1400487b9:	jbe    0x1400487bf
   1400487bb:	rex add DWORD PTR [rax],eax
   1400487be:	add    BYTE PTR [rax],al
   1400487c0:	add    al,BYTE PTR [rax]
   1400487c2:	add    BYTE PTR [rax],al
   1400487c4:	add    BYTE PTR [rax],al
   1400487c6:	add    BYTE PTR [rax],al
   1400487c8:	jo     0x140048840
   1400487ca:	add    al,0x40
   1400487cc:	add    DWORD PTR [rax],eax
   1400487ce:	add    BYTE PTR [rax],al
   1400487d0:	add    eax,DWORD PTR [rax]
   1400487d2:	add    BYTE PTR [rax],al
   1400487d4:	add    BYTE PTR [rax],al
   1400487d6:	add    BYTE PTR [rax],al
   1400487d8:	nop
   1400487d9:	jbe    0x1400487df
   1400487db:	rex add DWORD PTR [rax],eax
   1400487de:	add    BYTE PTR [rax],al
   1400487e0:	add    eax,0x0
   1400487e5:	add    BYTE PTR [rax],al
   1400487e7:	add    al,al
   1400487e9:	jbe    0x1400487ef
   1400487eb:	rex add DWORD PTR [rax],eax
   1400487ee:	add    BYTE PTR [rax],al
   1400487f0:	add    al,BYTE PTR [rax]
   1400487f2:	add    BYTE PTR [rax],al
   1400487f4:	add    BYTE PTR [rax],al
   1400487f6:	add    BYTE PTR [rax],al
   1400487f8:	adc    BYTE PTR [rdi+0x4],dh
   1400487fb:	rex add DWORD PTR [rax],eax
   1400487fe:	add    BYTE PTR [rax],al
   140048800:	add    al,BYTE PTR [rax]
   140048802:	add    BYTE PTR [rax],al
   140048804:	add    BYTE PTR [rax],al
   140048806:	add    BYTE PTR [rax],al
   140048808:	xor    BYTE PTR [rdi+0x4],dh
   14004880b:	rex add DWORD PTR [rax],eax
   14004880e:	add    BYTE PTR [rax],al
   140048810:	add    al,BYTE PTR [rax]
   140048812:	add    BYTE PTR [rax],al
   140048814:	add    BYTE PTR [rax],al
   140048816:	add    BYTE PTR [rax],al
   140048818:	push   rax
   140048819:	ja     0x14004881f
   14004881b:	rex add DWORD PTR [rax],eax
   14004881e:	add    BYTE PTR [rax],al
   140048820:	add    al,BYTE PTR [rax]
   140048822:	add    BYTE PTR [rax],al
   140048824:	add    BYTE PTR [rax],al
   140048826:	add    BYTE PTR [rax],al
   140048828:	jo     0x1400488a1
   14004882a:	add    al,0x40
   14004882c:	add    DWORD PTR [rax],eax
   14004882e:	add    BYTE PTR [rax],al
   140048830:	add    al,BYTE PTR [rax]
   140048832:	add    BYTE PTR [rax],al
   140048834:	add    BYTE PTR [rax],al
   140048836:	add    BYTE PTR [rax],al
   140048838:	nop
   140048839:	ja     0x14004883f
   14004883b:	rex add DWORD PTR [rax],eax
   14004883e:	add    BYTE PTR [rax],al
   140048840:	add    al,BYTE PTR [rax]
   140048842:	add    BYTE PTR [rax],al
   140048844:	add    BYTE PTR [rax],al
   140048846:	add    BYTE PTR [rax],al
   140048848:	mov    al,0x77
   14004884a:	add    al,0x40
   14004884c:	add    DWORD PTR [rax],eax
   14004884e:	add    BYTE PTR [rax],al
   140048850:	add    al,BYTE PTR [rax]
   140048852:	add    BYTE PTR [rax],al
   140048854:	add    BYTE PTR [rax],al
   140048856:	add    BYTE PTR [rax],al
   140048858:	shl    BYTE PTR [rdi+0x4],1
   14004885b:	rex add DWORD PTR [rax],eax
   14004885e:	add    BYTE PTR [rax],al
   140048860:	add    eax,DWORD PTR [rax]
   140048862:	add    BYTE PTR [rax],al
   140048864:	add    BYTE PTR [rax],al
   140048866:	add    BYTE PTR [rax],al
   140048868:	lock ja 0x14004886f
   14004886b:	rex add DWORD PTR [rax],eax
   14004886e:	add    BYTE PTR [rax],al
   140048870:	add    al,BYTE PTR [rax]
   140048872:	add    BYTE PTR [rax],al
   140048874:	add    BYTE PTR [rax],al
   140048876:	add    BYTE PTR [rax],al
   140048878:	and    BYTE PTR [rax+0x4],bh
   14004887b:	rex add DWORD PTR [rax],eax
   14004887e:	add    BYTE PTR [rax],al
   140048880:	add    al,BYTE PTR [rax]
   140048882:	add    BYTE PTR [rax],al
   140048884:	add    BYTE PTR [rax],al
   140048886:	add    BYTE PTR [rax],al
   140048888:	rex js 0x14004888f
   14004888b:	rex add DWORD PTR [rax],eax
   14004888e:	add    BYTE PTR [rax],al
   140048890:	add    eax,DWORD PTR [rax]
   140048892:	add    BYTE PTR [rax],al
   140048894:	add    BYTE PTR [rax],al
   140048896:	add    BYTE PTR [rax],al
   140048898:	(bad)  
   140048899:	js     0x14004889f
   14004889b:	rex add DWORD PTR [rax],eax
   14004889e:	add    BYTE PTR [rax],al
   1400488a0:	add    al,BYTE PTR [rax]
   1400488a2:	add    BYTE PTR [rax],al
   1400488a4:	add    BYTE PTR [rax],al
   1400488a6:	add    BYTE PTR [rax],al
   1400488a8:	nop
   1400488a9:	js     0x1400488af
   1400488ab:	rex add DWORD PTR [rax],eax
   1400488ae:	add    BYTE PTR [rax],al
   1400488b0:	add    al,BYTE PTR [rax]
   1400488b2:	add    BYTE PTR [rax],al
   1400488b4:	add    BYTE PTR [rax],al
   1400488b6:	add    BYTE PTR [rax],al
   1400488b8:	sar    BYTE PTR [rax+0x4],1
   1400488bb:	rex add DWORD PTR [rax],eax
   1400488be:	add    BYTE PTR [rax],al
   1400488c0:	add    al,BYTE PTR [rax]
   1400488c2:	add    BYTE PTR [rax],al
   1400488c4:	add    BYTE PTR [rax],al
   1400488c6:	add    BYTE PTR [rax],al
   1400488c8:	mov    al,0x78
   1400488ca:	add    al,0x40
   1400488cc:	add    DWORD PTR [rax],eax
   1400488ce:	add    BYTE PTR [rax],al
   1400488d0:	add    al,BYTE PTR [rax]
   1400488d2:	add    BYTE PTR [rax],al
   1400488d4:	add    BYTE PTR [rax],al
   1400488d6:	add    BYTE PTR [rax],al
   1400488d8:	lock js 0x1400488df
   1400488db:	rex add DWORD PTR [rax],eax
   1400488de:	add    BYTE PTR [rax],al
   1400488e0:	add    al,BYTE PTR [rax]
   1400488e2:	add    BYTE PTR [rax],al
   1400488e4:	add    BYTE PTR [rax],al
   1400488e6:	add    BYTE PTR [rax],al
   1400488e8:	adc    BYTE PTR [rcx+0x4],bh
   1400488eb:	rex add DWORD PTR [rax],eax
   1400488ee:	add    BYTE PTR [rax],al
   1400488f0:	add    al,BYTE PTR [rax]
   1400488f2:	add    BYTE PTR [rax],al
   1400488f4:	add    BYTE PTR [rax],al
   1400488f6:	add    BYTE PTR [rax],al
   1400488f8:	xor    BYTE PTR [rcx+0x4],bh
   1400488fb:	rex add DWORD PTR [rax],eax
   1400488fe:	add    BYTE PTR [rax],al
   140048900:	add    al,BYTE PTR [rax]
   140048902:	add    BYTE PTR [rax],al
   140048904:	add    BYTE PTR [rax],al
   140048906:	add    BYTE PTR [rax],al
   140048908:	push   rax
   140048909:	jns    0x14004890f
   14004890b:	rex add DWORD PTR [rax],eax
   14004890e:	add    BYTE PTR [rax],al
   140048910:	add    al,BYTE PTR [rax]
   140048912:	add    BYTE PTR [rax],al
   140048914:	add    BYTE PTR [rax],al
   140048916:	add    BYTE PTR [rax],al
   140048918:	jo     0x140048993
   14004891a:	add    al,0x40
   14004891c:	add    DWORD PTR [rax],eax
   14004891e:	add    BYTE PTR [rax],al
   140048920:	add    al,BYTE PTR [rax]
   140048922:	add    BYTE PTR [rax],al
   140048924:	add    BYTE PTR [rax],al
   140048926:	add    BYTE PTR [rax],al
   140048928:	nop
   140048929:	jns    0x14004892f
   14004892b:	rex add DWORD PTR [rax],eax
   14004892e:	add    BYTE PTR [rax],al
   140048930:	(bad)  
   140048931:	add    BYTE PTR [rax],al
   140048933:	add    BYTE PTR [rax],al
   140048935:	add    BYTE PTR [rax],al
   140048937:	add    BYTE PTR [rax+0x1400479],dh
   14004893d:	add    BYTE PTR [rax],al
   14004893f:	add    BYTE PTR [rdx],al
   140048941:	add    BYTE PTR [rax],al
   140048943:	add    BYTE PTR [rax],al
   140048945:	add    BYTE PTR [rax],al
   140048947:	add    BYTE PTR [rax],dl
   140048949:	jp     0x14004894f
   14004894b:	rex add DWORD PTR [rax],eax
   14004894e:	add    BYTE PTR [rax],al
   140048950:	add    al,BYTE PTR [rax]
   140048952:	add    BYTE PTR [rax],al
   140048954:	add    BYTE PTR [rax],al
   140048956:	add    BYTE PTR [rax],al
   140048958:	xor    BYTE PTR [rdx+0x4],bh
   14004895b:	rex add DWORD PTR [rax],eax
   14004895e:	add    BYTE PTR [rax],al
   140048960:	add    al,BYTE PTR [rax]
   140048962:	add    BYTE PTR [rax],al
   140048964:	add    BYTE PTR [rax],al
   140048966:	add    BYTE PTR [rax],al
   140048968:	push   rax
   140048969:	jp     0x14004896f
   14004896b:	rex add DWORD PTR [rax],eax
   14004896e:	add    BYTE PTR [rax],al
   140048970:	add    eax,DWORD PTR [rax]
   140048972:	add    BYTE PTR [rax],al
   140048974:	add    BYTE PTR [rax],al
   140048976:	add    BYTE PTR [rax],al
   140048978:	jo     0x1400489f4
   14004897a:	add    al,0x40
   14004897c:	add    DWORD PTR [rax],eax
   14004897e:	add    BYTE PTR [rax],al
   140048980:	add    al,BYTE PTR [rax]
   140048982:	add    BYTE PTR [rax],al
   140048984:	add    BYTE PTR [rax],al
   140048986:	add    BYTE PTR [rax],al
   140048988:	movabs al,ds:0x20000000140047a
   140048991:	add    BYTE PTR [rax],al
   140048993:	add    BYTE PTR [rax],al
   140048995:	add    BYTE PTR [rax],al
   140048997:	add    al,al
   140048999:	jp     0x14004899f
   14004899b:	rex add DWORD PTR [rax],eax
   14004899e:	add    BYTE PTR [rax],al
   1400489a0:	add    eax,DWORD PTR [rax]
   1400489a2:	add    BYTE PTR [rax],al
   1400489a4:	add    BYTE PTR [rax],al
   1400489a6:	add    BYTE PTR [rax],al
   1400489a8:	loopne 0x140048a24
   1400489aa:	add    al,0x40
   1400489ac:	add    DWORD PTR [rax],eax
   1400489ae:	add    BYTE PTR [rax],al
   1400489b0:	add    eax,DWORD PTR [rax]
   1400489b2:	add    BYTE PTR [rax],al
   1400489b4:	add    BYTE PTR [rax],al
   1400489b6:	add    BYTE PTR [rax],al
   1400489b8:	adc    BYTE PTR [rbx+0x4],bh
   1400489bb:	rex add DWORD PTR [rax],eax
   1400489be:	add    BYTE PTR [rax],al
   1400489c0:	(bad)  
   1400489c1:	add    BYTE PTR [rax],al
   1400489c3:	add    BYTE PTR [rax],al
   1400489c5:	add    BYTE PTR [rax],al
   1400489c7:	add    BYTE PTR [rax+0x7b],al
   1400489ca:	add    al,0x40
   1400489cc:	add    DWORD PTR [rax],eax
   1400489ce:	add    BYTE PTR [rax],al
   1400489d0:	add    al,BYTE PTR [rax]
   1400489d2:	add    BYTE PTR [rax],al
   1400489d4:	add    BYTE PTR [rax],al
   1400489d6:	add    BYTE PTR [rax],al
   1400489d8:	mov    al,0x7b
   1400489da:	add    al,0x40
   1400489dc:	add    DWORD PTR [rax],eax
   1400489de:	add    BYTE PTR [rax],al
   1400489e0:	add    al,BYTE PTR [rax]
   1400489e2:	add    BYTE PTR [rax],al
   1400489e4:	add    BYTE PTR [rax],al
   1400489e6:	add    BYTE PTR [rax],al
   1400489e8:	sar    BYTE PTR [rbx+0x4],1
   1400489eb:	rex add DWORD PTR [rax],eax
   1400489ee:	add    BYTE PTR [rax],al
   1400489f0:	add    al,BYTE PTR [rax]
   1400489f2:	add    BYTE PTR [rax],al
   1400489f4:	add    BYTE PTR [rax],al
   1400489f6:	add    BYTE PTR [rax],al
   1400489f8:	lock jnp 0x1400489ff
   1400489fb:	rex add DWORD PTR [rax],eax
   1400489fe:	add    BYTE PTR [rax],al
   140048a00:	add    al,BYTE PTR [rax]
   140048a02:	add    BYTE PTR [rax],al
   140048a04:	add    BYTE PTR [rax],al
   140048a06:	add    BYTE PTR [rax],al
   140048a08:	adc    BYTE PTR [rsp+rax*1+0x40],bh
   140048a0c:	add    DWORD PTR [rax],eax
   140048a0e:	add    BYTE PTR [rax],al
   140048a10:	add    eax,DWORD PTR [rax]
   140048a12:	add    BYTE PTR [rax],al
   140048a14:	add    BYTE PTR [rax],al
   140048a16:	add    BYTE PTR [rax],al
   140048a18:	xor    BYTE PTR [rsp+rax*1+0x40],bh
   140048a1c:	add    DWORD PTR [rax],eax
   140048a1e:	add    BYTE PTR [rax],al
   140048a20:	add    al,BYTE PTR [rax]
   140048a22:	add    BYTE PTR [rax],al
   140048a24:	add    BYTE PTR [rax],al
   140048a26:	add    BYTE PTR [rax],al
   140048a28:	(bad)  
   140048a29:	jl     0x140048a2f
   140048a2b:	rex add DWORD PTR [rax],eax
   140048a2e:	add    BYTE PTR [rax],al
   140048a30:	add    al,BYTE PTR [rax]
   140048a32:	add    BYTE PTR [rax],al
   140048a34:	add    BYTE PTR [rax],al
   140048a36:	add    BYTE PTR [rax],al
   140048a38:	cmp    BYTE PTR [rsp+rax*1+0x40],0x1
   140048a3d:	add    BYTE PTR [rax],al
   140048a3f:	add    BYTE PTR [rbx],al
   140048a41:	add    BYTE PTR [rax],al
   140048a43:	add    BYTE PTR [rax],al
   140048a45:	add    BYTE PTR [rax],al
   140048a47:	add    BYTE PTR [rax+0x140047c],ah
   140048a4d:	add    BYTE PTR [rax],al
   140048a4f:	add    BYTE PTR [rax+rax*1],al
   140048a52:	add    BYTE PTR [rax],al
   140048a54:	add    BYTE PTR [rax],al
   140048a56:	add    BYTE PTR [rax],al
   140048a58:	sar    BYTE PTR [rsp+rax*1+0x40],1
   140048a5c:	add    DWORD PTR [rax],eax
   140048a5e:	add    BYTE PTR [rax],al
   140048a60:	add    al,BYTE PTR [rax]
   140048a62:	add    BYTE PTR [rax],al
   140048a64:	add    BYTE PTR [rax],al
   140048a66:	add    BYTE PTR [rax],al
   140048a68:	adc    BYTE PTR [rbp+0x4],bh
   140048a6b:	rex add DWORD PTR [rax],eax
   140048a6e:	add    BYTE PTR [rax],al
   140048a70:	add    al,BYTE PTR [rax]
   140048a72:	add    BYTE PTR [rax],al
   140048a74:	add    BYTE PTR [rax],al
   140048a76:	add    BYTE PTR [rax],al
   140048a78:	xor    BYTE PTR [rbp+0x4],bh
   140048a7b:	rex add DWORD PTR [rax],eax
   140048a7e:	add    BYTE PTR [rax],al
   140048a80:	add    al,BYTE PTR [rax]
   140048a82:	add    BYTE PTR [rax],al
   140048a84:	add    BYTE PTR [rax],al
   140048a86:	add    BYTE PTR [rax],al
   140048a88:	push   rax
   140048a89:	jge    0x140048a8f
   140048a8b:	rex add DWORD PTR [rax],eax
   140048a8e:	add    BYTE PTR [rax],al
   140048a90:	add    DWORD PTR [rax],eax
   140048a92:	add    BYTE PTR [rax],al
   140048a94:	add    BYTE PTR [rax],al
   140048a96:	add    BYTE PTR [rax],al
   140048a98:	jo     0x140048b17
   140048a9a:	add    al,0x40
   140048a9c:	add    DWORD PTR [rax],eax
   140048a9e:	add    BYTE PTR [rax],al
   140048aa0:	add    al,BYTE PTR [rax]
   140048aa2:	add    BYTE PTR [rax],al
   140048aa4:	add    BYTE PTR [rax],al
   140048aa6:	add    BYTE PTR [rax],al
   140048aa8:	cmp    BYTE PTR [rbp+0x4],0x40
   140048aac:	add    DWORD PTR [rax],eax
   140048aae:	add    BYTE PTR [rax],al
   140048ab0:	add    al,BYTE PTR [rax]
   140048ab2:	add    BYTE PTR [rax],al
   140048ab4:	add    BYTE PTR [rax],al
   140048ab6:	add    BYTE PTR [rax],al
   140048ab8:	movabs al,ds:0x20000000140047d
   140048ac1:	add    BYTE PTR [rax],al
   140048ac3:	add    BYTE PTR [rax],al
   140048ac5:	add    BYTE PTR [rax],al
   140048ac7:	add    al,al
   140048ac9:	jge    0x140048acf
   140048acb:	rex add DWORD PTR [rax],eax
   140048ace:	add    BYTE PTR [rax],al
   140048ad0:	add    al,BYTE PTR [rax]
   140048ad2:	add    BYTE PTR [rax],al
   140048ad4:	add    BYTE PTR [rax],al
   140048ad6:	add    BYTE PTR [rax],al
   140048ad8:	loopne 0x140048b57
   140048ada:	add    al,0x40
   140048adc:	add    DWORD PTR [rax],eax
   140048ade:	add    BYTE PTR [rax],al
   140048ae0:	add    eax,DWORD PTR [rax]
   140048ae2:	add    BYTE PTR [rax],al
   140048ae4:	add    BYTE PTR [rax],al
   140048ae6:	add    BYTE PTR [rax],al
   140048ae8:	add    BYTE PTR [rsi+0x4],bh
   140048aeb:	rex add DWORD PTR [rax],eax
   140048aee:	add    BYTE PTR [rax],al
   140048af0:	(bad)  
   140048af1:	add    BYTE PTR [rax],al
   140048af3:	add    BYTE PTR [rax],al
   140048af5:	add    BYTE PTR [rax],al
   140048af7:	add    BYTE PTR [rax],dh
   140048af9:	jle    0x140048aff
   140048afb:	rex add DWORD PTR [rax],eax
   140048afe:	add    BYTE PTR [rax],al
   140048b00:	add    al,BYTE PTR [rax]
   140048b02:	add    BYTE PTR [rax],al
   140048b04:	add    BYTE PTR [rax],al
   140048b06:	add    BYTE PTR [rax],al
   140048b08:	adc    BYTE PTR [rdi+0x4],bh
   140048b0b:	rex add DWORD PTR [rax],eax
   140048b0e:	add    BYTE PTR [rax],al
   140048b10:	add    al,BYTE PTR [rax]
   140048b12:	add    BYTE PTR [rax],al
   140048b14:	add    BYTE PTR [rax],al
   140048b16:	add    BYTE PTR [rax],al
   140048b18:	xor    BYTE PTR [rdi+0x4],bh
   140048b1b:	rex add DWORD PTR [rax],eax
   140048b1e:	add    BYTE PTR [rax],al
   140048b20:	add    al,BYTE PTR [rax]
   140048b22:	add    BYTE PTR [rax],al
   140048b24:	add    BYTE PTR [rax],al
   140048b26:	add    BYTE PTR [rax],al
   140048b28:	push   rax
   140048b29:	jg     0x140048b2f
   140048b2b:	rex add DWORD PTR [rax],eax
   140048b2e:	add    BYTE PTR [rax],al
   140048b30:	add    al,BYTE PTR [rax]
   140048b32:	add    BYTE PTR [rax],al
   140048b34:	add    BYTE PTR [rax],al
   140048b36:	add    BYTE PTR [rax],al
   140048b38:	jo     0x140048bb9
   140048b3a:	add    al,0x40
   140048b3c:	add    DWORD PTR [rax],eax
   140048b3e:	add    BYTE PTR [rax],al
   140048b40:	add    al,BYTE PTR [rax]
   140048b42:	add    BYTE PTR [rax],al
   140048b44:	add    BYTE PTR [rax],al
   140048b46:	add    BYTE PTR [rax],al
   140048b48:	nop
   140048b49:	jg     0x140048b4f
   140048b4b:	rex add DWORD PTR [rax],eax
   140048b4e:	add    BYTE PTR [rax],al
   140048b50:	add    eax,DWORD PTR [rax]
   140048b52:	add    BYTE PTR [rax],al
   140048b54:	add    BYTE PTR [rax],al
   140048b56:	add    BYTE PTR [rax],al
   140048b58:	mov    al,0x7f
   140048b5a:	add    al,0x40
   140048b5c:	add    DWORD PTR [rax],eax
   140048b5e:	add    BYTE PTR [rax],al
   140048b60:	add    al,BYTE PTR [rax]
   140048b62:	add    BYTE PTR [rax],al
   140048b64:	add    BYTE PTR [rax],al
   140048b66:	add    BYTE PTR [rax],al
   140048b68:	loopne 0x140048be9
   140048b6a:	add    al,0x40
   140048b6c:	add    DWORD PTR [rax],eax
   140048b6e:	add    BYTE PTR [rax],al
   140048b70:	add    al,BYTE PTR [rax]
   140048b72:	add    BYTE PTR [rax],al
   140048b74:	add    BYTE PTR [rax],al
   140048b76:	add    BYTE PTR [rax],al
   140048b78:	add    BYTE PTR [rax+0x14004],al
   140048b7e:	add    BYTE PTR [rax],al
   140048b80:	add    al,BYTE PTR [rax]
   140048b82:	add    BYTE PTR [rax],al
   140048b84:	add    BYTE PTR [rax],al
   140048b86:	add    BYTE PTR [rax],al
   140048b88:	and    BYTE PTR [rax+0x14004],al
   140048b8e:	add    BYTE PTR [rax],al
   140048b90:	add    al,BYTE PTR [rax]
   140048b92:	add    BYTE PTR [rax],al
   140048b94:	add    BYTE PTR [rax],al
   140048b96:	add    BYTE PTR [rax],al
   140048b98:	rex add BYTE PTR [rax+rax*2],0x1
   140048b9d:	add    BYTE PTR [rax],al
   140048b9f:	add    BYTE PTR [rbx],al
   140048ba1:	add    BYTE PTR [rax],al
   140048ba3:	add    BYTE PTR [rax],al
   140048ba5:	add    BYTE PTR [rax],al
   140048ba7:	add    BYTE PTR [rax-0x80],ah
   140048baa:	add    al,0x40
   140048bac:	add    DWORD PTR [rax],eax
   140048bae:	add    BYTE PTR [rax],al
   140048bb0:	add    al,BYTE PTR [rax]
   140048bb2:	add    BYTE PTR [rax],al
   140048bb4:	add    BYTE PTR [rax],al
   140048bb6:	add    BYTE PTR [rax],al
   140048bb8:	nop
   140048bb9:	add    BYTE PTR [rax+rax*2],0x1
   140048bbd:	add    BYTE PTR [rax],al
   140048bbf:	add    BYTE PTR [rbx],al
   140048bc1:	add    BYTE PTR [rax],al
   140048bc3:	add    BYTE PTR [rax],al
   140048bc5:	add    BYTE PTR [rax],al
   140048bc7:	add    BYTE PTR [rax+0x1400480],dh
   140048bcd:	add    BYTE PTR [rax],al
   140048bcf:	add    BYTE PTR [rdx],al
   140048bd1:	add    BYTE PTR [rax],al
   140048bd3:	add    BYTE PTR [rax],al
   140048bd5:	add    BYTE PTR [rax],al
   140048bd7:	add    al,ah
   140048bd9:	add    BYTE PTR [rax+rax*2],0x1
   140048bdd:	add    BYTE PTR [rax],al
   140048bdf:	add    BYTE PTR [rdx],al
	...
   140048be9:	add    DWORD PTR [rax+rax*2],0x1
   140048bf0:	add    al,BYTE PTR [rax]
   140048bf2:	add    BYTE PTR [rax],al
   140048bf4:	add    BYTE PTR [rax],al
   140048bf6:	add    BYTE PTR [rax],al
   140048bf8:	and    BYTE PTR [rcx+0x14004],al
   140048bfe:	add    BYTE PTR [rax],al
   140048c00:	add    al,BYTE PTR [rax]
   140048c02:	add    BYTE PTR [rax],al
   140048c04:	add    BYTE PTR [rax],al
   140048c06:	add    BYTE PTR [rax],al
   140048c08:	rex add DWORD PTR [rax+rax*2],0x1
   140048c10:	add    eax,DWORD PTR [rax]
   140048c12:	add    BYTE PTR [rax],al
   140048c14:	add    BYTE PTR [rax],al
   140048c16:	add    BYTE PTR [rax],al
   140048c18:	(bad)  
   140048c19:	add    DWORD PTR [rax+rax*2],0x1
   140048c20:	add    al,BYTE PTR [rax]
   140048c22:	add    BYTE PTR [rax],al
   140048c24:	add    BYTE PTR [rax],al
   140048c26:	add    BYTE PTR [rax],al
   140048c28:	nop
   140048c29:	add    DWORD PTR [rax+rax*2],0x1
   140048c30:	add    al,BYTE PTR [rax]
   140048c32:	add    BYTE PTR [rax],al
   140048c34:	add    BYTE PTR [rax],al
   140048c36:	add    BYTE PTR [rax],al
   140048c38:	mov    al,0x81
   140048c3a:	add    al,0x40
   140048c3c:	add    DWORD PTR [rax],eax
   140048c3e:	add    BYTE PTR [rax],al
   140048c40:	add    eax,DWORD PTR [rax]
   140048c42:	add    BYTE PTR [rax],al
   140048c44:	add    BYTE PTR [rax],al
   140048c46:	add    BYTE PTR [rax],al
   140048c48:	rol    BYTE PTR [rcx+0x14004],1
   140048c4e:	add    BYTE PTR [rax],al
   140048c50:	(bad)  
	...
   140048c59:	(bad)  
   140048c5a:	add    al,0x40
   140048c5c:	add    DWORD PTR [rax],eax
   140048c5e:	add    BYTE PTR [rax],al
   140048c60:	add    al,BYTE PTR [rax]
   140048c62:	add    BYTE PTR [rax],al
   140048c64:	add    BYTE PTR [rax],al
   140048c66:	add    BYTE PTR [rax],al
   140048c68:	(bad)  
   140048c69:	(bad)  
   140048c6a:	add    al,0x40
   140048c6c:	add    DWORD PTR [rax],eax
   140048c6e:	add    BYTE PTR [rax],al
   140048c70:	add    al,BYTE PTR [rax]
   140048c72:	add    BYTE PTR [rax],al
   140048c74:	add    BYTE PTR [rax],al
   140048c76:	add    BYTE PTR [rax],al
   140048c78:	add    BYTE PTR [rdx+0x14004],0x0
   140048c7f:	add    BYTE PTR [rsi],al
   140048c81:	add    BYTE PTR [rax],al
   140048c83:	add    BYTE PTR [rax],al
   140048c85:	add    BYTE PTR [rax],al
   140048c87:	add    BYTE PTR [rax+0x1400482],ah
   140048c8d:	add    BYTE PTR [rax],al
   140048c8f:	add    BYTE PTR [rdx],al
	...
   140048c99:	add    DWORD PTR [rax+rax*2],0x1
   140048c9d:	add    BYTE PTR [rax],al
   140048c9f:	add    BYTE PTR [rdx],al
   140048ca1:	add    BYTE PTR [rax],al
   140048ca3:	add    BYTE PTR [rax],al
   140048ca5:	add    BYTE PTR [rax],al
   140048ca7:	add    BYTE PTR [rax],ah
   140048ca9:	add    DWORD PTR [rax+rax*2],0x1
   140048cad:	add    BYTE PTR [rax],al
   140048caf:	add    BYTE PTR [rdx],al
   140048cb1:	add    BYTE PTR [rax],al
   140048cb3:	add    BYTE PTR [rax],al
   140048cb5:	add    BYTE PTR [rax],al
   140048cb7:	add    BYTE PTR [rax-0x7d],al
   140048cba:	add    al,0x40
   140048cbc:	add    DWORD PTR [rax],eax
   140048cbe:	add    BYTE PTR [rax],al
   140048cc0:	adc    eax,DWORD PTR [rax]
   140048cc2:	add    BYTE PTR [rax],al
   140048cc4:	add    BYTE PTR [rax],al
   140048cc6:	add    BYTE PTR [rax],al
   140048cc8:	(bad)  
   140048cc9:	add    DWORD PTR [rax+rax*2],0x1
   140048ccd:	add    BYTE PTR [rax],al
   140048ccf:	add    BYTE PTR [rdx],al
   140048cd1:	add    BYTE PTR [rax],al
   140048cd3:	add    BYTE PTR [rax],al
   140048cd5:	add    BYTE PTR [rax],al
   140048cd7:	add    BYTE PTR [rax+0x1400484],dl
   140048cdd:	add    BYTE PTR [rax],al
   140048cdf:	add    BYTE PTR [rbx+0x0],al
	...
   140048cf1:	add    DWORD PTR [rdx],eax
   140048cf3:	add    eax,DWORD PTR [rax]
   140048cf5:	or     DWORD PTR [rax],eax
   140048cf7:	jg     0x140048cf9
   140048cf9:	add    BYTE PTR [rax],al
   140048cfb:	or     ecx,DWORD PTR [rcx*1+0x11100f0e]
   140048d02:	adc    dl,BYTE PTR [rbx]
   140048d04:	add    BYTE PTR [rdx],cl
   140048d06:	or     BYTE PTR [rax],al
   140048d08:	sbb    BYTE PTR [rcx],bl
   140048d0a:	add    BYTE PTR [rax],al
   140048d0c:	sbb    al,0x1d
   140048d0e:	(bad)  
   140048d0f:	(bad)  
   140048d10:	add    BYTE PTR [rax],al
   140048d12:	add    BYTE PTR [rax],al
   140048d14:	add    BYTE PTR [rdx],cl
   140048d16:	(bad)  
   140048d17:	sbb    eax,DWORD PTR [rax]
   140048d19:	add    BYTE PTR [rax],al
   140048d1b:	add    BYTE PTR [rax],al
   140048d1d:	add    eax,0x706
   140048d22:	(bad)  
   140048d23:	add    BYTE PTR [rax],al
   140048d25:	add    BYTE PTR [rax],al
   140048d27:	add    al,0x0
   140048d29:	add    BYTE PTR [rax],al
   140048d2b:	add    BYTE PTR [rdx*1+0x201a00],dl
	...
   140048d3a:	add    BYTE PTR [rsi],ch
   140048d3c:	cmp    al,0x28
   140048d3e:	sub    edi,DWORD PTR [rsi+riz*1+0x0]
	...
   140048d4a:	and    DWORD PTR [rdx+rbp*1],esp
   140048d4d:	sub    DWORD PTR [rbx],edi
   140048d4f:	pop    rsi
   140048d50:	sub    eax,0x2f
   140048d55:	add    BYTE PTR [rax],al
   140048d57:	add    BYTE PTR [rax],al
   140048d59:	add    BYTE PTR [rax],al
   140048d5b:	sub    al,0x25
   140048d5d:	pop    rdi
   140048d5e:	ds (bad) 
	...
   140048d68:	add    BYTE PTR [rax+0x3a],ah
   140048d6b:	and    eax,DWORD PTR [rax+0x27]
   140048d6e:	cmp    eax,0x62610022
   140048d73:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140048d77:	addr32 push 0x69
   140048d7d:	add    BYTE PTR [rax],al
   140048d7f:	add    BYTE PTR [rax],al
   140048d81:	push   0x6b
   140048d83:	ins    BYTE PTR es:[rdi],dx
   140048d84:	ins    DWORD PTR es:[rdi],dx
   140048d85:	outs   dx,BYTE PTR ds:[rsi]
   140048d86:	outs   dx,DWORD PTR ds:[rsi]
   140048d87:	jo     0x140048dfa
   140048d89:	jb     0x140048d8b
   140048d8b:	add    BYTE PTR [rax],al
   140048d8d:	add    BYTE PTR [rax],al
   140048d8f:	add    BYTE PTR [rax],al
   140048d91:	jle    0x140048e06
   140048d93:	je     0x140048e0a
   140048d95:	jbe    0x140048e0e
   140048d97:	js     0x140048e12
   140048d99:	jp     0x140048d9b
   140048d9b:	add    BYTE PTR [rax],al
   140048d9d:	pop    rbx
   140048d9e:	add    BYTE PTR [rax],al
   140048da0:	pop    rsi
	...
   140048da9:	add    BYTE PTR [rbx+0x5d],bl
   140048dac:	add    BYTE PTR [rbp+0x0],bl
   140048daf:	add    BYTE PTR [rbx+0x41],bh
   140048db2:	rex.X
   140048db3:	rex.XB
   140048db4:	rex.R
   140048db5:	rex.RB
   140048db6:	rex.RX
   140048db7:	rex.RXB
   140048db8:	rex.W
   140048db9:	rex.WB add BYTE PTR [r8],al
   140048dbc:	add    BYTE PTR [rax],al
   140048dbe:	add    BYTE PTR [rax],al
   140048dc0:	jge    0x140048e0c
   140048dc2:	rex.WXB
   140048dc3:	rex.WR
   140048dc4:	rex.WRB
   140048dc5:	rex.WRX
   140048dc6:	rex.WRXB push r8
   140048dc8:	push   rcx
   140048dc9:	push   rdx
   140048dca:	add    BYTE PTR [rax],al
   140048dcc:	add    BYTE PTR [rax],al
   140048dce:	add    BYTE PTR [rax],al
   140048dd0:	pop    rsp
   140048dd1:	add    BYTE PTR [rbx+0x54],dl
   140048dd4:	push   rbp
   140048dd5:	push   rsi
   140048dd6:	push   rdi
   140048dd7:	pop    rax
   140048dd8:	pop    rcx
   140048dd9:	pop    rdx
   140048dda:	add    BYTE PTR [rax],al
   140048ddc:	add    BYTE PTR [rax],al
   140048dde:	add    BYTE PTR [rax],al
   140048de0:	xor    BYTE PTR [rcx],dh
   140048de2:	xor    dh,BYTE PTR [rbx]
   140048de4:	xor    al,0x35
   140048de6:	ss (bad) 
   140048de8:	cmp    BYTE PTR [rcx],bh
   140048dea:	add    BYTE PTR [rax],al
   140048dec:	add    BYTE PTR [rax],al
   140048dee:	add    BYTE PTR [rax],al
   140048df0:	add    BYTE PTR [rcx],al
   140048df2:	add    al,BYTE PTR [rbx]
   140048df4:	(bad)  
   140048df5:	sub    eax,0x5162f2e
   140048dfa:	add    BYTE PTR [rbx],cl
   140048dfc:	or     al,0xd
   140048dfe:	(bad)  
   140048dff:	movups xmm2,XMMWORD PTR [rcx]
   140048e02:	adc    dl,BYTE PTR [rbx]
   140048e04:	cmp    al,0x3d
   140048e06:	xor    ah,BYTE PTR [rsi]
   140048e08:	sbb    BYTE PTR [rcx],bl
   140048e0a:	(bad)  
   140048e0b:	(bad)  
   140048e0c:	sbb    al,0x1d
   140048e0e:	(bad)  
   140048e0f:	(bad)  
   140048e10:	add    BYTE PTR [rdi+0x0],dil
   140048e14:	add    BYTE PTR [rax+rdx*2+0x7d],ch
   140048e18:	rex.WRB pop r13
   140048e1a:	pop    rsp
   140048e1b:	rex.WRX imul r12,QWORD PTR [rax+0x4b],0x61
   140048e20:	lock icebp 
   140048e22:	repnz repz hlt 
   140048e25:	cmc    
   140048e26:	div    bh
   140048e28:	clc    
   140048e29:	stc    
   140048e2a:	jp     0x140048e8a
   140048e2c:	rex.WR jle 0x140048e9d
   140048e2f:	outs   dx,DWORD PTR ds:[rsi]
   140048e30:	add    cl,al
   140048e32:	ret    0xc4c3
   140048e35:	(bad)
   140048e38:	enter  0xd1c9,0xd2
   140048e3c:	rcl    esp,cl
   140048e3e:	(bad)  
   140048e3f:	(bad)  
   140048e40:	xlat   BYTE PTR ds:[rbx]
   140048e41:	fcomp  st(1)
   140048e43:	loop   0x140048e28
   140048e45:	in     al,0xe5
   140048e47:	out    0xe7,al
   140048e49:	call   0x140048f37
   140048e4e:	add    BYTE PTR [rbp+0x0],ch
   140048e51:	add    DWORD PTR [rdx-0x797a7b7d],0x91898887
   140048e5b:	xchg   edx,eax
   140048e5c:	xchg   ebx,eax
   140048e5d:	xchg   esp,eax
   140048e5e:	xchg   ebp,eax
   140048e5f:	xchg   esi,eax
   140048e60:	xchg   edi,eax
   140048e61:	cwde   
   140048e62:	cdq    
   140048e63:	movabs ds:0xa9a8a7a6a5a4a3,al
   140048e6c:	add    BYTE PTR [rax],al
   140048e6e:	add    BYTE PTR [rdi],al
	...
   140048ef0:	(bad)  
   140048ef1:	sti    
   140048ef2:	(bad)  
   140048ef3:	jmp    rbp
   140048ef5:	(bad)  
   140048ef6:	(bad)  
   140048ef7:	(bad)  
   140048ef8:	(bad)  
   140048ef9:	(bad)  
   140048efa:	inc    DWORD PTR [rdi-0x78000002]
   140048f00:	(bad)  
   140048f01:	add    BYTE PTR [rdi],al
   140048f03:	add    BYTE PTR [rdx+0x0],ah
   140048f06:	or     BYTE PTR [rax],al
   140048f08:	add    BYTE PTR gs:[rbx],bl
   140048f0b:	add    BYTE PTR [rsi+0x0],ah
   140048f0e:	or     al,0x0
   140048f10:	outs   dx,BYTE PTR ds:[rsi]
   140048f11:	add    BYTE PTR [rdx],cl
   140048f13:	add    BYTE PTR [rdx+0x0],dh
   140048f16:	or     eax,0x9007400
   140048f1b:	add    BYTE PTR [rsi+0x0],dh
   140048f1e:	or     eax,DWORD PTR [rax]
   140048f20:	jne    0x140048f96
   140048f22:	data16 cmp BYTE PTR [rax],al
   140048f25:	add    BYTE PTR [rax],al
   140048f27:	add    BYTE PTR [rbp+0x74],dh
   140048f2a:	data16 (bad) 
   140048f2c:	add    BYTE PTR [rax],al
   140048f2e:	add    BYTE PTR [rax],al
   140048f30:	jne    0x140048fa6
   140048f32:	xor    si,WORD PTR [rdx]
   140048f35:	jo     0x140048fa3
   140048f37:	(bad)  
   140048f38:	je     0x140048fa0
   140048f3a:	outs   dx,DWORD PTR ds:[rsi]
   140048f3b:	jb     0x140048faa
   140048f3d:	outs   dx,BYTE PTR gs:[rsi]
   140048f3f:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x0
   140048f47:	add    BYTE PTR [rbp+0x74],dh
   140048f4a:	xor    si,WORD PTR [rdx]
   140048f4d:	outs   dx,DWORD PTR ds:[rsi]
   140048f4e:	jo     0x140048fc0
   140048f50:	outs   dx,DWORD PTR ds:[rsi]
   140048f51:	jae    0x140048fbc
   140048f53:	je     0x140048fba
   140048f55:	outs   dx,BYTE PTR gs:[rsi]
   140048f57:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x0
   140048f5f:	add    BYTE PTR [rbp+0x74],dh
   140048f62:	xor    si,WORD PTR [rdx]
   140048f65:	ins    BYTE PTR es:[rdi],dx
   140048f66:	add    BYTE PTR gs:[rbp+0x74],dh
   140048f6a:	xor    si,WORD PTR [rdx]
   140048f6d:	(bad)  
   140048f6e:	add    BYTE PTR gs:[rbp+0x74],dh
   140048f72:	xor    si,WORD PTR [rdx]
   140048f75:	add    BYTE PTR [rax],al
   140048f77:	add    BYTE PTR [rbp+0x74],dh
   140048f7a:	xor    WORD PTR [rsi],si
   140048f7d:	jo     0x140048feb
   140048f7f:	(bad)  
   140048f80:	je     0x140048fe8
   140048f82:	outs   dx,DWORD PTR ds:[rsi]
   140048f83:	jb     0x140048ff2
   140048f85:	outs   dx,BYTE PTR gs:[rsi]
   140048f87:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x0
   140048f8f:	add    BYTE PTR [rbp+0x74],dh
   140048f92:	xor    WORD PTR [rsi],si
   140048f95:	outs   dx,DWORD PTR ds:[rsi]
   140048f96:	jo     0x140049008
   140048f98:	outs   dx,DWORD PTR ds:[rsi]
   140048f99:	jae    0x140049004
   140048f9b:	je     0x140049002
   140048f9d:	outs   dx,BYTE PTR gs:[rsi]
   140048f9f:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x0
   140048fa7:	add    BYTE PTR [rbp+0x74],dh
   140048faa:	xor    WORD PTR [rsi],si
   140048fad:	ins    BYTE PTR es:[rdi],dx
   140048fae:	add    BYTE PTR gs:[rbp+0x74],dh
   140048fb2:	xor    WORD PTR [rsi],si
   140048fb5:	(bad)  
   140048fb6:	add    BYTE PTR gs:[rbp+0x74],dh
   140048fba:	xor    WORD PTR [rsi],si
   140048fbd:	add    BYTE PTR [rax],al
   140048fbf:	add    BYTE PTR [rbp+0x73],dh
   140048fc2:	(bad)  
   140048fc3:	jae    0x140049028
   140048fc5:	imul   ebp,DWORD PTR [rcx+0x0],0x75736373
   140048fcc:	add    BYTE PTR [rax],al
   140048fce:	add    BYTE PTR [rax],al
   140048fd0:	ins    BYTE PTR es:[rdi],dx
   140048fd1:	ins    DWORD PTR es:[rdi],dx
   140048fd2:	(bad)  
   140048fd4:	jae    0x14004900e
   140048fd6:	add    BYTE PTR [rax],al
   140048fd8:	ins    BYTE PTR es:[rdi],dx
   140048fd9:	ins    DWORD PTR es:[rdi],dx
   140048fda:	(bad)  
   140048fdc:	jae    0x140049014
   140048fde:	add    BYTE PTR [rax],al
   140048fe0:	ins    BYTE PTR es:[rdi],dx
   140048fe1:	ins    DWORD PTR es:[rdi],dx
   140048fe2:	(bad)  
   140048fe4:	jae    0x14004901b
   140048fe6:	add    BYTE PTR [rax],al
   140048fe8:	ins    BYTE PTR es:[rdi],dx
   140048fe9:	ins    DWORD PTR es:[rdi],dx
   140048fea:	(bad)  
   140048fec:	jae    0x140049022
   140048fee:	add    BYTE PTR [rax],al
   140048ff0:	ins    BYTE PTR es:[rdi],dx
   140048ff1:	ins    DWORD PTR es:[rdi],dx
   140048ff2:	(bad)  
   140048ff4:	jae    0x140049029
   140048ff6:	add    BYTE PTR [rax],al
   140048ff8:	ins    BYTE PTR es:[rdi],dx
   140048ff9:	ins    DWORD PTR es:[rdi],dx
   140048ffa:	(bad)  
   140048ffc:	jae    0x140049030
   140048ffe:	add    BYTE PTR [rax],al
   140049000:	ins    BYTE PTR es:[rdi],dx
   140049001:	ins    DWORD PTR es:[rdi],dx
   140049002:	(bad)  
   140049004:	jae    0x140049037
   140049006:	cmp    DWORD PTR [rax],eax
   140049008:	ins    BYTE PTR es:[rdi],dx
   140049009:	ins    DWORD PTR es:[rdi],dx
   14004900a:	(bad)  
   14004900c:	jae    0x14004903f
   14004900e:	cmp    BYTE PTR [rax],al
   140049010:	ins    BYTE PTR es:[rdi],dx
   140049011:	ins    DWORD PTR es:[rdi],dx
   140049012:	(bad)  
   140049014:	jae    0x140049047
   140049016:	(bad)  
   140049017:	add    BYTE PTR [rbp+rbp*2+0x62],ch
   14004901b:	movsxd esi,DWORD PTR [rbx+0x31]
   14004901e:	add    BYTE PTR ss:[rbp+rbp*2+0x62],ch
   140049023:	movsxd esi,DWORD PTR [rbx+0x31]
   140049026:	xor    DWORD PTR [rax],eax
   140049028:	ins    BYTE PTR es:[rdi],dx
   140049029:	ins    DWORD PTR es:[rdi],dx
   14004902a:	(bad)  
   14004902c:	jae    0x14004905f
   14004902e:	add    BYTE PTR [rax],al
   140049030:	imul   esi,DWORD PTR [rbx+0x6f],0x39353838
   140049037:	xor    DWORD PTR [rax],eax
   140049039:	add    BYTE PTR [rax],al
   14004903b:	add    BYTE PTR [rax],al
   14004903d:	add    BYTE PTR [rax],al
   14004903f:	add    BYTE PTR [rcx+0x73],ch
   140049042:	outs   dx,DWORD PTR ds:[rsi]
   140049043:	xor    dh,BYTE PTR [rax]
   140049045:	xor    dh,BYTE PTR [rdx]
   140049047:	add    BYTE PTR [rcx+0x73],ch
   14004904a:	movsxd ebp,DWORD PTR [rcx+0x69]
   14004904d:	add    BYTE PTR [rax],al
   14004904f:	add    BYTE PTR [rcx+0x6d],ch
   140049052:	(bad)  
   140049053:	jo     0x1400490c2
   140049055:	(bad)  
   140049056:	imul   ebp,DWORD PTR [rdx+riz*2+0x6f],0x6d616e78
   14004905e:	add    BYTE PTR gs:[rax+0x7a],ch
   140049062:	add    BYTE PTR [rax],al
   140049064:	movsxd esp,DWORD PTR [rbp+0x73]
   140049067:	jne    0x1400490a1
   140049069:	add    BYTE PTR [rax],al
   14004906b:	add    BYTE PTR [rdx+0x6f],ah
   14004906e:	movsxd esi,DWORD PTR [rbp+0x31]
	...
   14004908d:	add    BYTE PTR [rax],al
   14004908f:	add    BYTE PTR [rax],ah
   140049091:	cwde   
   140049092:	add    al,0x40
   140049094:	add    DWORD PTR [rax],eax
   140049096:	add    BYTE PTR [rax],al
   140049098:	shl    BYTE PTR [rsi+0x14004],0x0
   14004909f:	add    BYTE PTR [rax-0x5e],dl
   1400490a2:	add    al,0x40
   1400490a4:	add    DWORD PTR [rax],eax
   1400490a6:	add    BYTE PTR [rax],al
   1400490a8:	jo     0x140049057
   1400490aa:	add    al,0x40
   1400490ac:	add    DWORD PTR [rax],eax
   1400490ae:	add    BYTE PTR [rax],al
   1400490b0:	movabs al,ds:0xc0000000014004af
   1400490b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400490ba:	add    al,0x40
   1400490bc:	add    DWORD PTR [rax],eax
   1400490be:	add    BYTE PTR [rax],al
   1400490c0:	lock test al,0x4
   1400490c3:	rex add DWORD PTR [rax],eax
	...
   1400490ce:	add    BYTE PTR [rax],al
   1400490d0:	nop
   1400490d1:	jmp    0x1400490d7
   1400490d3:	rex add DWORD PTR [rax],eax
   1400490d6:	add    BYTE PTR [rax],al
   1400490d8:	or     ah,0x4
   1400490db:	rex add DWORD PTR [rax],eax
   1400490de:	add    BYTE PTR [rax],al
   1400490e0:	mov    al,0xce
   1400490e2:	add    al,0x40
   1400490e4:	add    DWORD PTR [rax],eax
   1400490e6:	add    BYTE PTR [rax],al
   1400490e8:	loopne 0x1400490ba
   1400490ea:	add    al,0x40
   1400490ec:	add    DWORD PTR [rax],eax
   1400490ee:	add    BYTE PTR [rax],al
   1400490f0:	adc    bl,dl
   1400490f2:	add    al,0x40
   1400490f4:	add    DWORD PTR [rax],eax
   1400490f6:	add    BYTE PTR [rax],al
   1400490f8:	rex (bad) 
   1400490fa:	add    al,0x40
   1400490fc:	add    DWORD PTR [rax],eax
   1400490fe:	add    BYTE PTR [rax],al
   140049100:	jo     0x1400490d9
   140049102:	add    al,0x40
   140049104:	add    DWORD PTR [rax],eax
   140049106:	add    BYTE PTR [rax],al
   140049108:	movabs al,ds:0xd0000000014004d9
   140049111:	fild   DWORD PTR [rax+rax*2]
   140049114:	add    DWORD PTR [rax],eax
   140049116:	add    BYTE PTR [rax],al
   140049118:	add    dh,bl
   14004911a:	add    al,0x40
   14004911c:	add    DWORD PTR [rax],eax
   14004911e:	add    BYTE PTR [rax],al
   140049120:	xor    al,ah
   140049122:	add    al,0x40
   140049124:	add    DWORD PTR [rax],eax
   140049126:	add    BYTE PTR [rax],al
   140049128:	(bad)  
   140049129:	loop   0x14004912f
   14004912b:	rex add DWORD PTR [rax],eax
   14004912e:	add    BYTE PTR [rax],al
   140049130:	nop
   140049131:	in     al,0x4
   140049133:	rex add DWORD PTR [rax],eax
   140049136:	add    BYTE PTR [rax],al
   140049138:	add    ah,0x4
   14004913b:	rex add DWORD PTR [rax],eax
   14004913e:	add    BYTE PTR [rax],al
   140049140:	rex ret 0x4004
   140049144:	add    DWORD PTR [rax],eax
   140049146:	add    BYTE PTR [rax],al
   140049148:	nop
   140049149:	mov    edi,0x14004
   14004914e:	add    BYTE PTR [rax],al
   140049150:	lock mov eax,0x14004
   140049156:	add    BYTE PTR [rax],al
   140049158:	(bad)  
   140049159:	pushf  
   14004915a:	add    al,0x40
   14004915c:	add    DWORD PTR [rax],eax
   14004915e:	add    BYTE PTR [rax],al
   140049160:	nop
   140049161:	mov    ah,0x4
   140049163:	rex add DWORD PTR [rax],eax
   140049166:	add    BYTE PTR [rax],al
   140049168:	shl    BYTE PTR [rcx+0x14004],1
   14004916e:	add    BYTE PTR [rax],al
   140049170:	xor    BYTE PTR [rbx+0x14004],ch
   140049176:	add    BYTE PTR [rax],al
   140049178:	and    BYTE PTR [rsp+rax*1+0x140],0x0
   140049180:	nop
   140049181:	sahf   
   140049182:	add    al,0x40
   140049184:	add    DWORD PTR [rax],eax
   140049186:	add    BYTE PTR [rax],al
   140049188:	movsxd ebp,DWORD PTR [rsi+0x76]
   14004918b:	add    BYTE PTR [rax],al
   14004918d:	add    BYTE PTR [rax],al
   14004918f:	add    BYTE PTR [rax+rdx*4+0x4],ch
   140049193:	rex add DWORD PTR [rax],eax
   140049196:	add    BYTE PTR [rax],al
   140049198:	sbb    al,0x0
   14004919a:	add    BYTE PTR [rax],al
   14004919c:	add    BYTE PTR [rax],al
   14004919e:	add    BYTE PTR [rax],al
   1400491a0:	fs nop
   1400491a2:	add    al,0x40
   1400491a4:	add    DWORD PTR [rax],eax
   1400491a6:	add    BYTE PTR [rax],al
   1400491a8:	(bad)  
   1400491a9:	add    BYTE PTR [rax],al
   1400491ab:	add    BYTE PTR [rax],al
   1400491ad:	add    BYTE PTR [rax],al
   1400491af:	add    BYTE PTR [rax-0x70],ah
   1400491b2:	add    al,0x40
   1400491b4:	add    DWORD PTR [rax],eax
   1400491b6:	add    BYTE PTR [rax],al
   1400491b8:	(bad)  
   1400491b9:	add    BYTE PTR [rax],al
   1400491bb:	add    BYTE PTR [rax],al
   1400491bd:	add    BYTE PTR [rax],al
   1400491bf:	add    BYTE PTR [rax-0x70],dl
   1400491c2:	add    al,0x40
   1400491c4:	add    DWORD PTR [rax],eax
   1400491c6:	add    BYTE PTR [rax],al
   1400491c8:	and    BYTE PTR [rax],al
   1400491ca:	add    BYTE PTR [rax],al
   1400491cc:	add    BYTE PTR [rax],al
   1400491ce:	add    BYTE PTR [rax],al
   1400491d0:	rex.W nop
   1400491d2:	add    al,0x40
   1400491d4:	add    DWORD PTR [rax],eax
   1400491d6:	add    BYTE PTR [rax],al
   1400491d8:	sbb    DWORD PTR [rax],eax
   1400491da:	add    BYTE PTR [rax],al
   1400491dc:	add    BYTE PTR [rax],al
   1400491de:	add    BYTE PTR [rax],al
   1400491e0:	rex xchg eax,eax
   1400491e2:	add    al,0x40
   1400491e4:	add    DWORD PTR [rax],eax
   1400491e6:	add    BYTE PTR [rax],al
   1400491e8:	or     al,BYTE PTR [rax]
   1400491ea:	add    BYTE PTR [rax],al
   1400491ec:	add    BYTE PTR [rax],al
   1400491ee:	add    BYTE PTR [rax],al
   1400491f0:	xor    BYTE PTR [rax+0x14004],dl
   1400491f6:	add    BYTE PTR [rax],al
   1400491f8:	add    eax,DWORD PTR [rax]
   1400491fa:	add    BYTE PTR [rax],al
   1400491fc:	add    BYTE PTR [rax],al
   1400491fe:	add    BYTE PTR [rax],al
   140049200:	sub    BYTE PTR [rax+0x14004],dl
   140049206:	add    BYTE PTR [rax],al
   140049208:	or     eax,DWORD PTR [rax]
   14004920a:	add    BYTE PTR [rax],al
   14004920c:	add    BYTE PTR [rax],al
   14004920e:	add    BYTE PTR [rax],al
   140049210:	and    BYTE PTR [rax+0x14004],dl
   140049216:	add    BYTE PTR [rax],al
   140049218:	adc    al,BYTE PTR [rax]
   14004921a:	add    BYTE PTR [rax],al
   14004921c:	add    BYTE PTR [rax],al
   14004921e:	add    BYTE PTR [rax],al
   140049220:	sbb    BYTE PTR [rax+0x14004],dl
   140049226:	add    BYTE PTR [rax],al
   140049228:	adc    eax,DWORD PTR [rax]
   14004922a:	add    BYTE PTR [rax],al
   14004922c:	add    BYTE PTR [rax],al
   14004922e:	add    BYTE PTR [rax],al
   140049230:	adc    BYTE PTR [rax+0x14004],dl
   140049236:	add    BYTE PTR [rax],al
   140049238:	adc    al,0x0
   14004923a:	add    BYTE PTR [rax],al
   14004923c:	add    BYTE PTR [rax],al
   14004923e:	add    BYTE PTR [rax],al
   140049240:	or     BYTE PTR [rax+0x14004],dl
   140049246:	add    BYTE PTR [rax],al
   140049248:	adc    eax,0x0
   14004924d:	add    BYTE PTR [rax],al
   14004924f:	add    BYTE PTR [rax],al
   140049251:	nop
   140049252:	add    al,0x40
   140049254:	add    DWORD PTR [rax],eax
   140049256:	add    BYTE PTR [rax],al
   140049258:	(bad)  
   140049259:	add    BYTE PTR [rax],al
   14004925b:	add    BYTE PTR [rax],al
   14004925d:	add    BYTE PTR [rax],al
   14004925f:	add    al,bh
   140049261:	pop    QWORD PTR [rax+rax*2]
   140049264:	add    DWORD PTR [rax],eax
   140049266:	add    BYTE PTR [rax],al
   140049268:	or     al,0x0
   14004926a:	add    BYTE PTR [rax],al
   14004926c:	add    BYTE PTR [rax],al
   14004926e:	add    BYTE PTR [rax],al
   140049270:	lock pop QWORD PTR [rax+rax*2]
   140049274:	add    DWORD PTR [rax],eax
   140049276:	add    BYTE PTR [rax],al
   140049278:	or     eax,0x0
   14004927d:	add    BYTE PTR [rax],al
   14004927f:	add    al,ch
   140049281:	pop    QWORD PTR [rax+rax*2]
   140049284:	add    DWORD PTR [rax],eax
   140049286:	add    BYTE PTR [rax],al
   140049288:	(bad)  
   140049289:	add    BYTE PTR [rax],al
   14004928b:	add    BYTE PTR [rax],al
   14004928d:	add    BYTE PTR [rax],al
   14004928f:	add    al,ah
   140049291:	pop    QWORD PTR [rax+rax*2]
   140049294:	add    DWORD PTR [rax],eax
   140049296:	add    BYTE PTR [rax],al
   140049298:	sldt   WORD PTR [rax]
   14004929b:	add    BYTE PTR [rax],al
   14004929d:	add    BYTE PTR [rax],al
   14004929f:	add    al,bl
   1400492a1:	pop    QWORD PTR [rax+rax*2]
   1400492a4:	add    DWORD PTR [rax],eax
   1400492a6:	add    BYTE PTR [rax],al
   1400492a8:	adc    BYTE PTR [rax],al
   1400492aa:	add    BYTE PTR [rax],al
   1400492ac:	add    BYTE PTR [rax],al
   1400492ae:	add    BYTE PTR [rax],al
   1400492b0:	ror    BYTE PTR [rdi+0x14004],1
   1400492b6:	add    BYTE PTR [rax],al
   1400492b8:	adc    DWORD PTR [rax],eax
   1400492ba:	add    BYTE PTR [rax],al
   1400492bc:	add    BYTE PTR [rax],al
   1400492be:	add    BYTE PTR [rax],al
   1400492c0:	enter  0x48f,0x40
   1400492c4:	add    DWORD PTR [rax],eax
   1400492c6:	add    BYTE PTR [rax],al
   1400492c8:	sbb    BYTE PTR [rax],al
   1400492ca:	add    BYTE PTR [rax],al
   1400492cc:	add    BYTE PTR [rax],al
   1400492ce:	add    BYTE PTR [rax],al
   1400492d0:	ror    BYTE PTR [rdi+0x14004],0x0
   1400492d7:	add    BYTE PTR [rdx],bl
   1400492d9:	add    BYTE PTR [rax],al
   1400492db:	add    BYTE PTR [rax],al
   1400492dd:	add    BYTE PTR [rax],al
   1400492df:	add    BYTE PTR [rax+0x140048f],bh
   1400492e5:	add    BYTE PTR [rax],al
   1400492e7:	add    BYTE PTR [rip+0x0],bl        # 0x1400492ed
   1400492ed:	add    BYTE PTR [rax],al
   1400492ef:	add    BYTE PTR [rax+0x140048f],dh
   1400492f5:	add    BYTE PTR [rax],al
   1400492f7:	add    BYTE PTR [rip+0x0],al        # 0x1400492fd
   1400492fd:	add    BYTE PTR [rax],al
   1400492ff:	add    BYTE PTR [rax+0x140048f],ch
   140049305:	add    BYTE PTR [rax],al
   140049307:	add    BYTE PTR [rsi],al
   140049309:	add    BYTE PTR [rax],al
   14004930b:	add    BYTE PTR [rax],al
   14004930d:	add    BYTE PTR [rax],al
   14004930f:	add    BYTE PTR [rax+0x140048f],dl
   140049315:	add    BYTE PTR [rax],al
   140049317:	add    BYTE PTR [rip+0x0],al        # 0x14004931d
   14004931d:	add    BYTE PTR [rax],al
   14004931f:	add    BYTE PTR [rax-0x71],bh
   140049322:	add    al,0x40
   140049324:	add    DWORD PTR [rax],eax
   140049326:	add    BYTE PTR [rax],al
   140049328:	(bad)  
   140049329:	add    BYTE PTR [rax],al
   14004932b:	add    BYTE PTR [rax],al
   14004932d:	add    BYTE PTR [rax],al
   14004932f:	add    BYTE PTR [rax-0x71],dh
   140049332:	add    al,0x40
   140049334:	add    DWORD PTR [rax],eax
   140049336:	add    BYTE PTR [rax],al
   140049338:	(bad)  
   140049339:	add    BYTE PTR [rax],al
   14004933b:	add    BYTE PTR [rax],al
   14004933d:	add    BYTE PTR [rax],al
   14004933f:	add    BYTE PTR [rax-0x71],ch
   140049342:	add    al,0x40
   140049344:	add    DWORD PTR [rax],eax
   140049346:	add    BYTE PTR [rax],al
   140049348:	(bad)  
   140049349:	add    BYTE PTR [rax],al
   14004934b:	add    BYTE PTR [rax],al
   14004934d:	add    BYTE PTR [rax],al
   14004934f:	add    BYTE PTR [rax-0x71],ah
   140049352:	add    al,0x40
   140049354:	add    DWORD PTR [rax],eax
   140049356:	add    BYTE PTR [rax],al
   140049358:	or     BYTE PTR [rax],al
   14004935a:	add    BYTE PTR [rax],al
   14004935c:	add    BYTE PTR [rax],al
   14004935e:	add    BYTE PTR [rax],al
   140049360:	rex.W pop QWORD PTR [rax+rax*2]
   140049364:	add    DWORD PTR [rax],eax
   140049366:	add    BYTE PTR [rax],al
   140049368:	(bad)  
   140049369:	add    BYTE PTR [rax],al
   14004936b:	add    BYTE PTR [rax],al
   14004936d:	add    BYTE PTR [rax],al
   14004936f:	add    BYTE PTR [rax],dh
   140049371:	pop    QWORD PTR [rax+rax*2]
   140049374:	add    DWORD PTR [rax],eax
   140049376:	add    BYTE PTR [rax],al
   140049378:	or     BYTE PTR [rax],al
   14004937a:	add    BYTE PTR [rax],al
   14004937c:	add    BYTE PTR [rax],al
   14004937e:	add    BYTE PTR [rax],al
   140049380:	sub    BYTE PTR [rdi+0x14004],cl
   140049386:	add    BYTE PTR [rax],al
   140049388:	sbb    eax,DWORD PTR [rax]
   14004938a:	add    BYTE PTR [rax],al
   14004938c:	add    BYTE PTR [rax],al
   14004938e:	add    BYTE PTR [rax],al
   140049390:	and    BYTE PTR [rdi+0x14004],cl
   140049396:	add    BYTE PTR [rax],al
   140049398:	add    al,0x0
   14004939a:	add    BYTE PTR [rax],al
   14004939c:	add    BYTE PTR [rax],al
   14004939e:	add    BYTE PTR [rax],al
   1400493a0:	jae    0x140049419
   1400493a2:	(bad)  
   1400493a3:	jo     0x140049411
   1400493a5:	data16 outs dx,BYTE PTR ds:[rsi]
   1400493a7:	ins    BYTE PTR es:[rdi],dx
	...
   1400493b0:	jbe    0x140049417
   1400493b2:	jb     0x140049427
   1400493b4:	imul   ebp,DWORD PTR [rdi+0x6e],0x3d
   1400493bb:	add    BYTE PTR [rax],al
   1400493bd:	add    BYTE PTR [rax],al
   1400493bf:	add    BYTE PTR [rdi+rbp*2+0x63],ch
   1400493c3:	(bad)  
   1400493c4:	ins    BYTE PTR es:[rdi],dx
   1400493c5:	gs cmp eax,0x0
   1400493cb:	add    BYTE PTR [rax],al
   1400493cd:	add    BYTE PTR [rax],al
   1400493cf:	add    BYTE PTR [rbx+0x6e],ah
   1400493d2:	jbe    0x140049435
   1400493d4:	ins    BYTE PTR es:[rdi],dx
   1400493d5:	imul   esp,DWORD PTR [rcx+0x73],0x0
   1400493dc:	imul   esp,DWORD PTR [rbx+0x75],0x0
	...
   14004941f:	add    BYTE PTR [rcx],al
   140049421:	add    al,BYTE PTR [rdx]
   140049423:	add    al,BYTE PTR [rdx]
   140049425:	add    al,BYTE PTR [rdx]
   140049427:	add    al,BYTE PTR [rdx]
   140049429:	add    al,BYTE PTR [rax]
   14004942b:	add    BYTE PTR [rax],al
   14004942d:	add    BYTE PTR [rax],al
   14004942f:	add    BYTE PTR [rax],al
   140049431:	(bad)  
   140049432:	(bad)
   140049437:	addr32 push 0x6c6b6a69
   14004943d:	ins    DWORD PTR es:[rdi],dx
   14004943e:	outs   dx,BYTE PTR ds:[rsi]
   14004943f:	outs   dx,DWORD PTR ds:[rsi]
   140049440:	jo     0x1400494b3
   140049442:	jb     0x1400494b7
   140049444:	je     0x1400494bb
   140049446:	jbe    0x1400494bf
   140049448:	js     0x1400494c3
   14004944a:	jp     0x14004944c
   14004944c:	add    BYTE PTR [rax],al
   14004944e:	add    BYTE PTR [rax],al
   140049450:	add    BYTE PTR [rcx+0x62],ah
   140049453:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140049457:	addr32 push 0x6c6b6a69
   14004945d:	ins    DWORD PTR es:[rdi],dx
   14004945e:	outs   dx,BYTE PTR ds:[rsi]
   14004945f:	outs   dx,DWORD PTR ds:[rsi]
   140049460:	jo     0x1400494d3
   140049462:	jb     0x1400494d7
   140049464:	je     0x1400494db
   140049466:	jbe    0x1400494df
   140049468:	js     0x1400494e3
   14004946a:	jp     0x14004946c
   14004946c:	add    BYTE PTR [rax],al
   14004946e:	add    BYTE PTR [rax],al
   140049470:	add    BYTE PTR [rcx-0x7a7b7c7e],al
   140049476:	xchg   BYTE PTR [rdi+0x8988],al
   14004947c:	add    BYTE PTR [rax],al
   14004947e:	add    BYTE PTR [rax],al
   140049480:	add    BYTE PTR [rcx-0x6a6b6c6e],dl
   140049486:	xchg   esi,eax
   140049487:	xchg   edi,eax
   140049488:	cwde   
   140049489:	cdq    
	...
   140049492:	movabs ds:0xa9a8a7a6a5a4a3,al
	...
   1400494af:	add    BYTE PTR [rax],al
   1400494b1:	add    DWORD PTR [rdx-0x797a7b7d],0x898887
   1400494bb:	add    BYTE PTR [rax],al
   1400494bd:	add    BYTE PTR [rax],al
   1400494bf:	add    BYTE PTR [rax],al
   1400494c1:	xchg   ecx,eax
   1400494c2:	xchg   edx,eax
   1400494c3:	xchg   ebx,eax
   1400494c4:	xchg   esp,eax
   1400494c5:	xchg   ebp,eax
   1400494c6:	xchg   esi,eax
   1400494c7:	xchg   edi,eax
   1400494c8:	cwde   
   1400494c9:	cdq    
	...
   1400494d2:	movabs ds:0xa9a8a7a6a5a4a3,al
   1400494db:	add    BYTE PTR [rax],al
   1400494dd:	add    BYTE PTR [rax],al
   1400494df:	add    BYTE PTR [rcx],al
   1400494e1:	add    al,BYTE PTR [rdx]
   1400494e3:	add    al,BYTE PTR [rdx]
   1400494e5:	add    al,BYTE PTR [rdx]
   1400494e7:	add    al,BYTE PTR [rdx]
   1400494e9:	add    al,BYTE PTR [rax]
	...
   1400494ff:	add    BYTE PTR [rax+0x140012b],ah
   140049505:	add    BYTE PTR [rax],al
   140049507:	add    al,dh
   140049509:	sub    al,BYTE PTR [rcx]
   14004950b:	rex add DWORD PTR [rax],eax
   14004950e:	add    BYTE PTR [rax],al
   140049510:	ror    BYTE PTR [rdi+0x14002],0x0
   140049517:	add    BYTE PTR [rax],dl
   140049519:	sub    eax,DWORD PTR [rcx]
   14004951b:	rex add DWORD PTR [rax],eax
   14004951e:	add    BYTE PTR [rax],al
   140049520:	nop
   140049521:	sub    eax,DWORD PTR [rcx]
   140049523:	rex add DWORD PTR [rax],eax
	...
   140049536:	add    BYTE PTR [rax],al
   140049538:	movabs al,ds:0xc00000000140012b
   140049541:	sub    eax,DWORD PTR [rcx]
   140049543:	rex add DWORD PTR [rax],eax
   140049546:	add    BYTE PTR [rax],al
   140049548:	ror    BYTE PTR [rdi+0x14002],0x0
   14004954f:	add    al,dl
   140049551:	sub    eax,DWORD PTR [rcx]
   140049553:	rex add DWORD PTR [rax],eax
   140049556:	add    BYTE PTR [rax],al
   140049558:	sub    al,0x1
   14004955b:	rex add DWORD PTR [rax],eax
   14004955e:	add    BYTE PTR [rax],al
   140049560:	add    BYTE PTR [rax],al
   140049562:	add    DWORD PTR [rax],eax
   140049564:	(bad)  
   140049565:	call   QWORD PTR [rax]
   140049567:	add    dl,bh
   140049569:	movabs al,ds:0x9fa6002ca0f9001c
   140049572:	add    BYTE PTR [rax],al
   140049574:	call   rdi
   140049576:	add    BYTE PTR [rax],al
   140049578:	adc    eax,0x6e001a09
   14004957d:	sbb    al,BYTE PTR [r8]
   140049580:	push   rdx
   140049581:	add    al,0x0
   140049583:	add    BYTE PTR [rdi],cl
   140049585:	and    BYTE PTR [rax],al
   140049587:	add    dh,ah
   140049589:	rcr    DWORD PTR [rcx],0x0
   14004958c:	movabs ds:0x2b0000e8650019dd,eax
   140049595:	stc    
   140049596:	add    BYTE PTR [rax],al
   140049598:	rol    BYTE PTR [rcx+0x1a],0x0
   14004959c:	xchg   BYTE PTR [rdx+0x1a],dl
   14004959f:	add    BYTE PTR [rbx+0x26],al
   1400495a2:	add    BYTE PTR [rax],al
   1400495a4:	sub    BYTE PTR [rsi],0x0
   1400495a7:	add    BYTE PTR [rbp-0xdffe61e],dh
   1400495ad:	(bad)  
   1400495ae:	sbb    DWORD PTR [rax],eax
   1400495b0:	sub    bh,dl
   1400495b2:	add    BYTE PTR [rax],al
   1400495b4:	(bad)  
   1400495b5:	inc    BYTE PTR [rax]
   1400495b7:	add    BYTE PTR [rax+0x53],dh
   1400495ba:	sbb    al,BYTE PTR [rax]
   1400495bc:	jne    0x140049615
   1400495be:	sbb    al,BYTE PTR [rax]
   1400495c0:	loope  0x1400495fe
   1400495c2:	add    BYTE PTR [rax],al
   1400495c4:	push   rbp
   1400495c5:	add    BYTE PTR [rax],al
   1400495c8:	sbb    al,0xf8
   1400495ca:	sbb    DWORD PTR [rax],eax
   1400495cc:	nop
   1400495cd:	sti    
   1400495ce:	sbb    DWORD PTR [rax],eax
   1400495d0:	sbb    esi,DWORD PTR [rsi]
   1400495d2:	add    BYTE PTR [rax],al
   1400495d4:	(bad)  
   1400495d5:	cmp    DWORD PTR [rax],eax
   1400495d7:	add    BYTE PTR [rdi-0xf],bl
   1400495da:	sbb    DWORD PTR [rax],eax
   1400495dc:	pop    rbx
   1400495dd:	hlt    
   1400495de:	sbb    DWORD PTR [rax],eax
   1400495e0:	mov    eax,0x76000049
   1400495e5:	rex.WR add BYTE PTR [rax],r8b
   1400495e8:	fild   DWORD PTR [rdx+rbx*1]
   1400495eb:	add    BYTE PTR [rcx+0x60001a07],bl
   1400495f1:	add    BYTE PTR [r8],al
   1400495f4:	rex.XB add BYTE PTR ss:[r8],al
   1400495f8:	cdq    
   1400495f9:	cld    
   1400495fa:	sbb    DWORD PTR [rax],eax
   1400495fc:	outs   dx,DWORD PTR ds:[rsi]
   1400495fd:	(bad)  
   1400495fe:	sbb    DWORD PTR [rax],eax
   140049600:	mov    es,WORD PTR [rdi+0x0]
   140049603:	add    BYTE PTR [rsi+0x49],al
   140049606:	add    BYTE PTR [rax],al
   140049608:	mov    esp,0x74001a02
   14004960d:	add    al,0x1a
   14004960f:	add    bh,dl
   140049611:	add    BYTE PTR [rax],r8b
   140049614:	rex.WXB
   140049615:	rex.RX add BYTE PTR [rax],r8b
   140049618:	or     eax,DWORD PTR [rax]
   14004961a:	sbb    al,BYTE PTR [rax]
   14004961c:	jg     0x14004961f
   14004961e:	sbb    al,BYTE PTR [rax]
   140049620:	out    0xff,al
   140049622:	add    BYTE PTR [rax],al
   140049624:	(bad)  
   140049625:	inc    DWORD PTR [rax]
   140049627:	add    BYTE PTR [rax+rbx*2+0x58ad001a],dl
   14004962e:	sbb    al,BYTE PTR [rax]
	...
   140049638:	add    BYTE PTR [rax],0x0
   14004963b:	add    BYTE PTR [rax],al
   14004963d:	or     BYTE PTR [rax],al
   14004963f:	add    BYTE PTR [rax],al
   140049641:	add    BYTE PTR [rcx],al
	...
   14004964f:	add    BYTE PTR [rax-0x7fffffd0],al
   140049655:	and    BYTE PTR [rsi],cl
   140049657:	add    BYTE PTR [rax+0x3c820],al
	...
   14004966d:	add    BYTE PTR [rax],al
   14004966f:	add    BYTE PTR [rdx],al
   140049671:	add    BYTE PTR [rax],al
   140049673:	add    BYTE PTR [rax],al
   140049675:	add    BYTE PTR [rax],al
   140049677:	add    BYTE PTR [rax+0x3d],dl
   14004967a:	add    DWORD PTR [rax+0x1],eax
   14004967d:	add    BYTE PTR [rax],al
   14004967f:	add    BYTE PTR [rax+0x43],ah
   140049682:	add    DWORD PTR [rax+0x1],eax
   140049685:	add    BYTE PTR [rax],al
   140049687:	add    BYTE PTR [rax+0x1400143],dh
	...
   14004969d:	add    BYTE PTR [rax],al
   14004969f:	add    al,ah
   1400496a1:	push   rcx
   1400496a2:	add    DWORD PTR [rax+0x1],eax
   1400496a5:	add    BYTE PTR [rax],al
   1400496a7:	add    al,ah
   1400496a9:	push   rcx
   1400496aa:	add    DWORD PTR [rax+0x1],eax
   1400496ad:	add    BYTE PTR [rax],al
   1400496af:	add    BYTE PTR [rax+0x140016d],ah
   1400496b5:	add    BYTE PTR [rax],al
   1400496b7:	add    BYTE PTR [rax+0x140016d],ah
   1400496bd:	add    BYTE PTR [rax],al
   1400496bf:	add    BYTE PTR [rax+0x5d],dh
   1400496c2:	add    DWORD PTR [rax+0x1],eax
   1400496c5:	add    BYTE PTR [rax],al
   1400496c7:	add    BYTE PTR [rax-0x74],dl
   1400496ca:	add    DWORD PTR [rax+0x1],eax
   1400496cd:	add    BYTE PTR [rax],al
   1400496cf:	add    BYTE PTR [rax+0x45],dh
   1400496d2:	add    DWORD PTR [rax+0x1],eax
   1400496d5:	add    BYTE PTR [rax],al
   1400496d7:	add    BYTE PTR [rax+0x140018c],dh
	...
   1400496e5:	add    BYTE PTR [rax],al
   1400496e7:	add    BYTE PTR [rax+0x36],dh
   1400496ea:	add    DWORD PTR [rax+0x1],eax
	...
   1400496f5:	add    BYTE PTR [rax],al
   1400496f7:	add    BYTE PTR [rax+0x7f],dl
   1400496fa:	add    DWORD PTR [rax+0x1],eax
   1400496fd:	add    BYTE PTR [rax],al
   1400496ff:	add    BYTE PTR [rdx],al
   140049701:	add    BYTE PTR [rax],al
   140049703:	add    BYTE PTR [rax],al
   140049705:	add    BYTE PTR [rax],al
   140049707:	add    BYTE PTR [rax+0x3d],dl
   14004970a:	add    DWORD PTR [rax+0x1],eax
   14004970d:	add    BYTE PTR [rax],al
   14004970f:	add    BYTE PTR [rax+0x43],ah
   140049712:	add    DWORD PTR [rax+0x1],eax
   140049715:	add    BYTE PTR [rax],al
   140049717:	add    BYTE PTR [rax+0x1400143],dh
	...
   14004972d:	add    BYTE PTR [rax],al
   14004972f:	add    al,ah
   140049731:	push   rcx
   140049732:	add    DWORD PTR [rax+0x1],eax
   140049735:	add    BYTE PTR [rax],al
   140049737:	add    al,ah
   140049739:	push   rcx
   14004973a:	add    DWORD PTR [rax+0x1],eax
   14004973d:	add    BYTE PTR [rax],al
   14004973f:	add    BYTE PTR [rax+0x140016d],ah
   140049745:	add    BYTE PTR [rax],al
   140049747:	add    BYTE PTR [rax+0x140016d],ah
   14004974d:	add    BYTE PTR [rax],al
   14004974f:	add    BYTE PTR [rax+0x5d],dh
   140049752:	add    DWORD PTR [rax+0x1],eax
   140049755:	add    BYTE PTR [rax],al
   140049757:	add    BYTE PTR [rax-0x74],dl
   14004975a:	add    DWORD PTR [rax+0x1],eax
   14004975d:	add    BYTE PTR [rax],al
   14004975f:	add    BYTE PTR [rax+0x45],dh
   140049762:	add    DWORD PTR [rax+0x1],eax
   140049765:	add    BYTE PTR [rax],al
   140049767:	add    BYTE PTR [rax+0x140018c],dh
	...
   140049775:	add    BYTE PTR [rax],al
   140049777:	add    BYTE PTR [rax+0x36],dh
   14004977a:	add    DWORD PTR [rax+0x1],eax
	...
   140049785:	add    BYTE PTR [rax],al
   140049787:	add    BYTE PTR [rax+0x1400185],dl
   14004978d:	add    BYTE PTR [rax],al
   14004978f:	add    BYTE PTR [rdx],al
   140049791:	add    BYTE PTR [rax],al
   140049793:	add    BYTE PTR [rax],al
   140049795:	add    BYTE PTR [rax],al
   140049797:	add    BYTE PTR [rax+0x3d],dl
   14004979a:	add    DWORD PTR [rax+0x1],eax
   14004979d:	add    BYTE PTR [rax],al
   14004979f:	add    BYTE PTR [rax+0x43],ah
   1400497a2:	add    DWORD PTR [rax+0x1],eax
   1400497a5:	add    BYTE PTR [rax],al
   1400497a7:	add    BYTE PTR [rax+0x1400143],dh
	...
   1400497bd:	add    BYTE PTR [rax],al
   1400497bf:	add    al,ah
   1400497c1:	push   rcx
   1400497c2:	add    DWORD PTR [rax+0x1],eax
   1400497c5:	add    BYTE PTR [rax],al
   1400497c7:	add    al,ah
   1400497c9:	push   rcx
   1400497ca:	add    DWORD PTR [rax+0x1],eax
   1400497cd:	add    BYTE PTR [rax],al
   1400497cf:	add    BYTE PTR [rax+0x140016d],ah
   1400497d5:	add    BYTE PTR [rax],al
   1400497d7:	add    BYTE PTR [rax+0x140016d],ah
   1400497dd:	add    BYTE PTR [rax],al
   1400497df:	add    BYTE PTR [rax+0x5d],dh
   1400497e2:	add    DWORD PTR [rax+0x1],eax
   1400497e5:	add    BYTE PTR [rax],al
   1400497e7:	add    BYTE PTR [rax-0x74],dl
   1400497ea:	add    DWORD PTR [rax+0x1],eax
   1400497ed:	add    BYTE PTR [rax],al
   1400497ef:	add    BYTE PTR [rax+0x45],dh
   1400497f2:	add    DWORD PTR [rax+0x1],eax
   1400497f5:	add    BYTE PTR [rax],al
   1400497f7:	add    BYTE PTR [rax+0x140018c],dh
	...
   140049805:	add    BYTE PTR [rax],al
   140049807:	add    BYTE PTR [rax+0x36],dh
   14004980a:	add    DWORD PTR [rax+0x1],eax
	...
   14004981d:	add    BYTE PTR [rax],al
   14004981f:	add    BYTE PTR [rax],dh
   140049821:	add    DWORD PTR [rax],eax
   140049823:	add    BYTE PTR [rcx],al
	...
   140049845:	add    BYTE PTR [rax],al
   140049847:	add    BYTE PTR [rax+0x1400497],dl
	...
   14004994d:	add    BYTE PTR [rax],al
   14004994f:	add    BYTE PTR [rbx+rsi*2],ch
   140049952:	ja     0x1400499b5
   140049954:	jo     0x1400499c2
   140049956:	data16 outs dx,BYTE PTR ds:[rsi]
   140049958:	ins    BYTE PTR es:[rdi],dx
   140049959:	add    BYTE PTR [rax],al
   14004995b:	add    BYTE PTR [rdx+0x69],ch
   14004995e:	jo     0x1400499d3
   140049960:	add    BYTE PTR [rax],al
   140049962:	add    BYTE PTR [rax],al
   140049964:	rex.WX
   140049965:	rex.WB push r8
   140049967:	push   rbx
   140049968:	add    BYTE PTR [rax],al
   14004996a:	add    BYTE PTR [rax],al
   14004996c:	push   0x65
   14004996e:	data16 add BYTE PTR [rdx+0x45],cl
   140049972:	rex.RX add BYTE PTR [rbx+0x65],r13b
   140049976:	imul   esi,DWORD PTR [rbx+0x0],0x4b000000
   14004997d:	rex.RB
   14004997e:	rex.WB push r11
	...
   140049988:	addr32 (bad) 
   14004998b:	cmp    BYTE PTR [rax],dh
   14004998d:	xor    esi,DWORD PTR [rax]
   14004998f:	add    BYTE PTR [rcx],dh
   140049991:	cmp    BYTE PTR [rax],dh
   140049993:	xor    esi,DWORD PTR [rax]
   140049995:	add    BYTE PTR [rax],al
   140049997:	add    BYTE PTR [rdx],bl
   140049999:	add    BYTE PTR [rax],al
   14004999b:	add    ch,bh
   14004999d:	inc    DWORD PTR [rax]
	...
   1400499a7:	add    BYTE PTR [rax],al
   1400499a9:	add    DWORD PTR [rcx],eax
   1400499ab:	add    BYTE PTR [rax],al
   1400499ad:	add    DWORD PTR [rax],eax
	...
   1400499bf:	add    BYTE PTR [rcx],al
   1400499c1:	add    DWORD PTR [rcx],eax
   1400499c3:	add    DWORD PTR [rcx],eax
   1400499c5:	add    DWORD PTR [rcx],eax
   1400499c7:	add    DWORD PTR [rcx],eax
   1400499c9:	add    DWORD PTR [rcx],eax
   1400499cb:	add    BYTE PTR [rcx],al
   1400499cd:	add    DWORD PTR [rcx],eax
   1400499cf:	add    DWORD PTR [rcx],eax
   1400499d1:	add    DWORD PTR [rcx],eax
   1400499d3:	add    DWORD PTR [rcx],eax
   1400499d5:	add    DWORD PTR [rcx],eax
   1400499d7:	add    DWORD PTR [rcx],eax
   1400499d9:	add    DWORD PTR [rcx],eax
   1400499db:	add    DWORD PTR [rcx],eax
   1400499dd:	add    DWORD PTR [rcx],eax
   1400499df:	add    DWORD PTR [rcx],eax
   1400499e1:	add    DWORD PTR [rcx],eax
   1400499e3:	add    DWORD PTR [rcx],eax
   1400499e5:	add    DWORD PTR [rcx],eax
   1400499e7:	add    DWORD PTR [rcx],eax
   1400499e9:	add    DWORD PTR [rcx],eax
   1400499eb:	add    DWORD PTR [rcx],eax
   1400499ed:	add    DWORD PTR [rcx],eax
   1400499ef:	add    DWORD PTR [rcx],eax
   1400499f1:	add    DWORD PTR [rcx],eax
   1400499f3:	add    DWORD PTR [rcx],eax
   1400499f5:	add    DWORD PTR [rcx],eax
   1400499f7:	add    DWORD PTR [rcx],eax
   1400499f9:	add    DWORD PTR [rcx],eax
   1400499fb:	add    DWORD PTR [rax],eax
   1400499fd:	add    DWORD PTR [rcx],eax
   1400499ff:	add    DWORD PTR [rcx],eax
   140049a01:	add    DWORD PTR [rcx],eax
   140049a03:	add    DWORD PTR [rcx],eax
   140049a05:	add    DWORD PTR [rcx],eax
   140049a07:	add    DWORD PTR [rcx],eax
   140049a09:	add    DWORD PTR [rcx],eax
   140049a0b:	add    DWORD PTR [rcx],eax
   140049a0d:	add    DWORD PTR [rcx],eax
   140049a0f:	add    DWORD PTR [rcx],eax
   140049a11:	add    DWORD PTR [rcx],eax
   140049a13:	add    DWORD PTR [rcx],eax
   140049a15:	add    DWORD PTR [rcx],eax
   140049a17:	add    DWORD PTR [rcx],eax
   140049a19:	add    DWORD PTR [rcx],eax
   140049a1b:	add    DWORD PTR [rcx],eax
   140049a1d:	add    DWORD PTR [rax],eax
	...
   140049a27:	add    BYTE PTR [rax],al
   140049a29:	add    DWORD PTR [rcx],eax
   140049a2b:	add    BYTE PTR [rax],al
   140049a2d:	add    DWORD PTR [rax],eax
	...
   140049a3f:	add    BYTE PTR [rcx],al
   140049a41:	add    BYTE PTR [rax],al
   140049a43:	add    BYTE PTR [rax],al
   140049a45:	add    BYTE PTR [rax],al
   140049a47:	add    DWORD PTR [rcx],eax
   140049a49:	add    DWORD PTR [rax],eax
   140049a4b:	add    BYTE PTR [rcx],al
   140049a4d:	add    DWORD PTR [rcx],eax
   140049a4f:	add    DWORD PTR [rcx],eax
   140049a51:	add    DWORD PTR [rcx],eax
   140049a53:	add    DWORD PTR [rcx],eax
   140049a55:	add    DWORD PTR [rcx],eax
   140049a57:	add    DWORD PTR [rcx],eax
   140049a59:	add    DWORD PTR [rcx],eax
   140049a5b:	add    BYTE PTR [rax],al
   140049a5d:	add    BYTE PTR [rax],al
   140049a5f:	add    DWORD PTR [rax],eax
   140049a61:	add    DWORD PTR [rcx],eax
   140049a63:	add    DWORD PTR [rcx],eax
   140049a65:	add    DWORD PTR [rcx],eax
   140049a67:	add    DWORD PTR [rcx],eax
   140049a69:	add    DWORD PTR [rcx],eax
   140049a6b:	add    DWORD PTR [rcx],eax
   140049a6d:	add    DWORD PTR [rcx],eax
   140049a6f:	add    DWORD PTR [rcx],eax
   140049a71:	add    DWORD PTR [rcx],eax
   140049a73:	add    DWORD PTR [rcx],eax
   140049a75:	add    DWORD PTR [rcx],eax
   140049a77:	add    DWORD PTR [rcx],eax
   140049a79:	add    DWORD PTR [rcx],eax
   140049a7b:	add    BYTE PTR [rax],al
   140049a7d:	add    BYTE PTR [rax],al
   140049a7f:	add    BYTE PTR [rax],al
   140049a81:	add    DWORD PTR [rcx],eax
   140049a83:	add    DWORD PTR [rcx],eax
   140049a85:	add    DWORD PTR [rcx],eax
   140049a87:	add    DWORD PTR [rcx],eax
   140049a89:	add    DWORD PTR [rcx],eax
   140049a8b:	add    DWORD PTR [rcx],eax
   140049a8d:	add    DWORD PTR [rcx],eax
   140049a8f:	add    DWORD PTR [rcx],eax
   140049a91:	add    DWORD PTR [rcx],eax
   140049a93:	add    DWORD PTR [rcx],eax
   140049a95:	add    DWORD PTR [rcx],eax
   140049a97:	add    DWORD PTR [rcx],eax
   140049a99:	add    DWORD PTR [rcx],eax
   140049a9b:	add    BYTE PTR [rax],al
   140049a9d:	add    BYTE PTR [rax],al
   140049a9f:	add    BYTE PTR [rcx+0x42],al
   140049aa2:	rex.XB
   140049aa3:	rex.R
   140049aa4:	rex.RB
   140049aa5:	rex.RX
   140049aa6:	rex.RXB
   140049aa7:	rex.W
   140049aa8:	rex.WB
   140049aa9:	rex.WX
   140049aaa:	rex.WXB
   140049aab:	rex.WR
   140049aac:	rex.WRB
   140049aad:	rex.WRX
   140049aae:	rex.WRXB push r8
   140049ab0:	push   rcx
   140049ab1:	push   rdx
   140049ab2:	push   rbx
   140049ab3:	push   rsp
   140049ab4:	push   rbp
   140049ab5:	push   rsi
   140049ab6:	push   rdi
   140049ab7:	pop    rax
   140049ab8:	pop    rcx
   140049ab9:	pop    rdx
   140049aba:	(bad)  
   140049abb:	(bad)
   140049ac0:	addr32 push 0x6c6b6a69
   140049ac6:	ins    DWORD PTR es:[rdi],dx
   140049ac7:	outs   dx,BYTE PTR ds:[rsi]
   140049ac8:	outs   dx,DWORD PTR ds:[rsi]
   140049ac9:	jo     0x140049b3c
   140049acb:	jb     0x140049b40
   140049acd:	je     0x140049b44
   140049acf:	jbe    0x140049b48
   140049ad1:	js     0x140049b4c
   140049ad3:	jp     0x140049b05
   140049ad5:	xor    DWORD PTR [rdx],esi
   140049ad7:	xor    esi,DWORD PTR [rsi*1+0x39383736]
   140049ade:	sub    ebp,DWORD PTR [rdi]
   140049ae0:	std    
   140049ae1:	std    
   140049ae2:	std    
   140049ae3:	std    
   140049ae4:	std    
   140049ae5:	std    
   140049ae6:	std    
   140049ae7:	std    
   140049ae8:	std    
   140049ae9:	(bad)  
   140049aea:	(bad)  
   140049aeb:	std    
   140049aec:	std    
   140049aed:	(bad)  
   140049aee:	std    
   140049aef:	std    
   140049af0:	std    
   140049af1:	std    
   140049af2:	std    
   140049af3:	std    
   140049af4:	std    
   140049af5:	std    
   140049af6:	std    
   140049af7:	std    
   140049af8:	std    
   140049af9:	std    
   140049afa:	std    
   140049afb:	std    
   140049afc:	std    
   140049afd:	std    
   140049afe:	std    
   140049aff:	std    
   140049b00:	(bad)  
   140049b01:	(bad)  
   140049b02:	(bad)  
   140049b03:	(bad)  
   140049b04:	(bad)  
   140049b05:	(bad)  
   140049b06:	(bad)  
   140049b07:	(bad)  
   140049b08:	(bad)  
   140049b09:	(bad)  
   140049b0a:	(bad)  
   140049b0b:	ds (bad) 
   140049b0d:	(bad)  
   140049b0e:	(bad)  
   140049b0f:	(bad)  
   140049b10:	xor    al,0x35
   140049b12:	ss (bad) 
   140049b14:	cmp    BYTE PTR [rcx],bh
   140049b16:	cmp    bh,BYTE PTR [rbx]
   140049b18:	cmp    al,0x3d
   140049b1a:	(bad)  
   140049b1b:	(bad)  
   140049b1c:	(bad)  
   140049b1d:	(bad)  
   140049b1e:	(bad)  
   140049b1f:	(bad)  
   140049b20:	inc    DWORD PTR [rax]
   140049b22:	add    DWORD PTR [rdx],eax
   140049b24:	add    eax,DWORD PTR [rax*1+0x9080706]
   140049b2b:	or     cl,BYTE PTR [rbx]
   140049b2d:	or     al,0xd
   140049b2f:	(bad)  
   140049b30:	movups xmm2,XMMWORD PTR [rcx]
   140049b33:	adc    dl,BYTE PTR [rbx]
   140049b35:	adc    al,0x15
   140049b37:	(bad)  
   140049b38:	(bad)  
   140049b39:	sbb    BYTE PTR [rcx],bl
   140049b3b:	(bad)  
   140049b3c:	std    
   140049b3d:	(bad)  
   140049b3e:	(bad)  
   140049b3f:	(bad)  
   140049b40:	call   FWORD PTR [rdx]
   140049b42:	sbb    ebx,DWORD PTR [rbx*1+0x21201f1e]
   140049b49:	and    ah,BYTE PTR [rbx]
   140049b4b:	and    al,0x25
   140049b4d:	es (bad) 
   140049b4f:	sub    BYTE PTR [rcx],ch
   140049b51:	sub    ch,BYTE PTR [rbx]
   140049b53:	sub    al,0x2d
   140049b55:	cs (bad) 
   140049b57:	xor    BYTE PTR [rcx],dh
   140049b59:	xor    dh,BYTE PTR [rbx]
   140049b5b:	(bad)  
   140049b5c:	(bad)  
   140049b5d:	(bad)  
   140049b5e:	std    
   140049b5f:	std    
   140049b60:	sbb    eax,DWORD PTR [rax]
	...
   140049b76:	add    BYTE PTR [rax],al
   140049b78:	mov    al,0x90
   140049b7a:	add    DWORD PTR [rax+0x1],eax
	...
   140049b85:	add    BYTE PTR [rax],al
   140049b87:	add    BYTE PTR [rax+0x1400190],al
   140049b8d:	add    BYTE PTR [rax],al
   140049b8f:	add    al,ah
   140049b91:	nop
   140049b92:	add    DWORD PTR [rax+0x1],eax
   140049b95:	add    BYTE PTR [rax],al
   140049b97:	add    al,ah
   140049b99:	nop
   140049b9a:	add    DWORD PTR [rax+0x1],eax
   140049b9d:	add    BYTE PTR [rax],al
   140049b9f:	add    BYTE PTR [rax+0x1400194],dh
   140049ba5:	add    BYTE PTR [rax],al
   140049ba7:	add    BYTE PTR [rax+0x1400194],dh
	...
   140049bbd:	add    BYTE PTR [rax],al
   140049bbf:	add    BYTE PTR [rax-0x66],ah
   140049bc2:	add    DWORD PTR [rax+0x1],eax
	...
   140049bd5:	add    BYTE PTR [rax],al
   140049bd7:	add    BYTE PTR [rax+0x14002a6],dh
	...
   140049bed:	add    BYTE PTR [rax],al
   140049bef:	add    BYTE PTR [rax+rax*1+0x0],ah
   140049bf3:	add    BYTE PTR [rbp+0x54],dl
   140049bf6:	rex.RX sub eax,0x37
	...
   140049c34:	add    BYTE PTR [rbx],bl
   140049c36:	add    DWORD PTR [rdi+rdi*1],eax
   140049c39:	add    BYTE PTR [rax],al
   140049c3b:	add    BYTE PTR [rcx],al
	...
   140049c5d:	add    BYTE PTR [rax],al
   140049c5f:	add    BYTE PTR [rax],dh
   140049c61:	add    DWORD PTR [rax],eax
   140049c63:	add    bh,bh
   140049c65:	(bad)  
   140049c66:	(bad)  
   140049c67:	inc    DWORD PTR [rax]
	...
   140049c75:	add    BYTE PTR [rax],al
   140049c77:	add    al,dh
   140049c79:	fwait
   140049c7a:	add    al,0x40
   140049c7c:	add    DWORD PTR [rax],eax
	...
   140049c86:	add    BYTE PTR [rax],al
   140049c88:	(bad)  
   140049c89:	fwait
   140049c8a:	add    al,0x40
   140049c8c:	add    DWORD PTR [rax],eax
	...
   140049d8e:	add    BYTE PTR [rax],al
   140049d90:	and    BYTE PTR [rax],al
	...
   140049da6:	add    BYTE PTR [rax],al
   140049da8:	mov    al,0x90
   140049daa:	add    DWORD PTR [rax+0x1],eax
	...
   140049db5:	add    BYTE PTR [rax],al
   140049db7:	add    BYTE PTR [rax+0x1400190],al
   140049dbd:	add    BYTE PTR [rax],al
   140049dbf:	add    BYTE PTR [rax+0x140019a],al
   140049dc5:	add    BYTE PTR [rax],al
   140049dc7:	add    BYTE PTR [rax+0x140019a],al
   140049dcd:	add    BYTE PTR [rax],al
   140049dcf:	add    BYTE PTR [rax-0x62],ah
   140049dd2:	add    DWORD PTR [rax+0x1],eax
   140049dd5:	add    BYTE PTR [rax],al
   140049dd7:	add    BYTE PTR [rax-0x62],ah
   140049dda:	add    DWORD PTR [rax+0x1],eax
	...
   140049e05:	add    BYTE PTR [rax],al
   140049e07:	add    BYTE PTR [rax+0x14002a6],dh
	...
   140049e1d:	add    BYTE PTR [rax],al
   140049e1f:	add    BYTE PTR [rax+rax*1+0x0],ah
   140049e23:	add    BYTE PTR [rcx+0x4d],cl
   140049e26:	push   r8
   140049e28:	sub    eax,0x6c69616d
   140049e2d:	(bad)  
   140049e2e:	outs   dx,DWORD PTR ds:[rsi]
   140049e2f:	js     0x140049e5e
   140049e31:	outs   dx,BYTE PTR ds:[rsi]
   140049e32:	(bad)  
   140049e33:	ins    DWORD PTR es:[rdi],dx
   140049e34:	add    BYTE PTR gs:[rax],al
	...
   140049e63:	add    BYTE PTR [rax],al
   140049e65:	and    BYTE PTR [rcx],al
   140049e67:	add    al,0x3f
   140049e69:	add    BYTE PTR [rax],al
   140049e6b:	add    BYTE PTR [rcx],al
	...
   140049e8d:	add    BYTE PTR [rax],al
   140049e8f:	add    BYTE PTR [rax],dh
   140049e91:	add    DWORD PTR [rax],eax
   140049e93:	add    bh,bh
   140049e95:	(bad)  
   140049e96:	(bad)  
   140049e97:	inc    DWORD PTR [rax]
	...
   140049ea5:	add    BYTE PTR [rax],al
   140049ea7:	add    BYTE PTR [rax],ah
   140049ea9:	sahf   
   140049eaa:	add    al,0x40
   140049eac:	add    DWORD PTR [rax],eax
	...
   140049eb6:	add    BYTE PTR [rax],al
   140049eb8:	nop
   140049eb9:	popf   
   140049eba:	add    al,0x40
   140049ebc:	add    DWORD PTR [rax],eax
	...
   140049fbe:	add    BYTE PTR [rax],al
   140049fc0:	push   rbp
   140049fc1:	push   rsp
   140049fc2:	rex.RX sub eax,0x65762c37
   140049fc8:	jb     0x14004a03d
   140049fca:	imul   ebp,DWORD PTR [rdi+0x6e],0x313d
   140049fd1:	add    BYTE PTR [rax],al
   140049fd3:	add    BYTE PTR [rax],al
   140049fd5:	add    BYTE PTR [rax],al
   140049fd7:	add    BYTE PTR [rax-0x7fffffd0],al
   140049fdd:	and    BYTE PTR [rsi],cl
   140049fdf:	add    BYTE PTR [rax-0x7ffc37e0],al
   140049fe5:	and    BYTE PTR [rax],cl
   140049fe7:	cli    
   140049fe8:	and    BYTE PTR [rax],0x8
   140049feb:	(bad)  
   140049fec:	add    BYTE PTR [rax],al
   140049fee:	add    BYTE PTR [rax],al
   140049ff0:	add    DWORD PTR [rcx],eax
   140049ff2:	add    DWORD PTR [rcx],eax
   140049ff4:	add    DWORD PTR [rcx],eax
   140049ff6:	add    DWORD PTR [rcx],eax
   140049ff8:	add    DWORD PTR [rcx],eax
   140049ffa:	add    DWORD PTR [rcx],eax
   140049ffc:	add    DWORD PTR [rcx],eax
   140049ffe:	add    DWORD PTR [rcx],eax
   14004a000:	add    DWORD PTR [rcx],eax
   14004a002:	add    DWORD PTR [rcx],eax
   14004a004:	add    DWORD PTR [rcx],eax
   14004a006:	add    DWORD PTR [rcx],eax
   14004a008:	add    DWORD PTR [rcx],eax
   14004a00a:	add    DWORD PTR [rcx],eax
   14004a00c:	add    DWORD PTR [rcx],eax
   14004a00e:	add    DWORD PTR [rcx],eax
   14004a010:	add    DWORD PTR [rcx],eax
   14004a012:	add    DWORD PTR [rcx],eax
   14004a014:	add    DWORD PTR [rcx],eax
   14004a016:	add    DWORD PTR [rcx],eax
   14004a018:	add    DWORD PTR [rcx],eax
   14004a01a:	add    DWORD PTR [rcx],eax
   14004a01c:	add    DWORD PTR [rcx],eax
   14004a01e:	add    DWORD PTR [rcx],eax
   14004a020:	add    DWORD PTR [rcx],eax
   14004a022:	add    DWORD PTR [rcx],eax
   14004a024:	add    DWORD PTR [rcx],eax
   14004a026:	add    DWORD PTR [rcx],eax
   14004a028:	add    DWORD PTR [rcx],eax
   14004a02a:	add    DWORD PTR [rcx],eax
   14004a02c:	add    DWORD PTR [rcx],eax
   14004a02e:	add    DWORD PTR [rcx],eax
   14004a030:	add    DWORD PTR [rcx],eax
   14004a032:	add    DWORD PTR [rcx],eax
   14004a034:	add    DWORD PTR [rcx],eax
   14004a036:	add    DWORD PTR [rcx],eax
   14004a038:	add    DWORD PTR [rcx],eax
   14004a03a:	add    DWORD PTR [rcx],eax
   14004a03c:	add    DWORD PTR [rcx],eax
   14004a03e:	add    DWORD PTR [rcx],eax
   14004a040:	add    DWORD PTR [rcx],eax
   14004a042:	add    DWORD PTR [rcx],eax
   14004a044:	add    DWORD PTR [rcx],eax
   14004a046:	add    DWORD PTR [rcx],eax
   14004a048:	add    DWORD PTR [rcx],eax
   14004a04a:	add    DWORD PTR [rcx],eax
   14004a04c:	add    DWORD PTR [rcx],eax
   14004a04e:	add    DWORD PTR [rcx],eax
   14004a050:	add    DWORD PTR [rcx],eax
   14004a052:	add    DWORD PTR [rcx],eax
   14004a054:	add    DWORD PTR [rcx],eax
   14004a056:	add    DWORD PTR [rcx],eax
   14004a058:	add    DWORD PTR [rcx],eax
   14004a05a:	add    DWORD PTR [rcx],eax
   14004a05c:	add    DWORD PTR [rcx],eax
   14004a05e:	add    DWORD PTR [rcx],eax
   14004a060:	add    DWORD PTR [rcx],eax
   14004a062:	add    DWORD PTR [rcx],eax
   14004a064:	add    DWORD PTR [rcx],eax
   14004a066:	add    DWORD PTR [rcx],eax
   14004a068:	add    DWORD PTR [rcx],eax
   14004a06a:	add    DWORD PTR [rcx],eax
   14004a06c:	add    DWORD PTR [rcx],eax
   14004a06e:	add    DWORD PTR [rcx],eax
	...
   14004a0b0:	add    al,BYTE PTR [rdx]
   14004a0b2:	add    al,BYTE PTR [rdx]
   14004a0b4:	add    al,BYTE PTR [rdx]
   14004a0b6:	add    al,BYTE PTR [rdx]
   14004a0b8:	add    al,BYTE PTR [rdx]
   14004a0ba:	add    al,BYTE PTR [rdx]
   14004a0bc:	add    al,BYTE PTR [rdx]
   14004a0be:	add    al,BYTE PTR [rdx]
   14004a0c0:	add    al,BYTE PTR [rdx]
   14004a0c2:	add    al,BYTE PTR [rdx]
   14004a0c4:	add    al,BYTE PTR [rdx]
   14004a0c6:	add    al,BYTE PTR [rdx]
   14004a0c8:	add    al,BYTE PTR [rdx]
   14004a0ca:	add    al,BYTE PTR [rdx]
   14004a0cc:	add    al,BYTE PTR [rdx]
   14004a0ce:	add    al,BYTE PTR [rdx]
   14004a0d0:	add    eax,DWORD PTR [rbx]
   14004a0d2:	add    eax,DWORD PTR [rbx]
   14004a0d4:	add    eax,DWORD PTR [rbx]
   14004a0d6:	add    eax,DWORD PTR [rbx]
   14004a0d8:	add    eax,DWORD PTR [rbx]
   14004a0da:	add    eax,DWORD PTR [rbx]
   14004a0dc:	add    eax,DWORD PTR [rbx]
   14004a0de:	add    eax,DWORD PTR [rbx]
   14004a0e0:	add    al,0x4
   14004a0e2:	add    al,0x4
   14004a0e4:	add    al,0x4
   14004a0e6:	add    al,0x4
   14004a0e8:	add    eax,0x6050505
   14004a0ed:	(bad)  
	...
   14004a0f6:	add    BYTE PTR [rax],al
   14004a0f8:	add    BYTE PTR [rax],0x0
   14004a0fb:	add    BYTE PTR [rax],al
   14004a0fd:	or     BYTE PTR [rax],al
   14004a0ff:	add    BYTE PTR [rax],al
   14004a101:	add    BYTE PTR [rcx],al
   14004a103:	add    bh,bh
   14004a105:	(bad)  
   14004a106:	(bad)  
   14004a107:	(bad)  
   14004a108:	(bad)  
   14004a109:	(bad)  
   14004a10a:	(bad)  
   14004a10b:	inc    DWORD PTR [rax]
	...
   14004a115:	add    BYTE PTR [rax],al
   14004a117:	add    BYTE PTR [rax+0x0],al
   14004a11d:	or     BYTE PTR [rax],al
   14004a11f:	add    BYTE PTR [rax],al
   14004a121:	add    BYTE PTR [rcx],al
	...
   14004a12f:	add    BYTE PTR [rax-0x7fffffd0],al
   14004a135:	and    BYTE PTR [rsi],cl
   14004a137:	add    BYTE PTR [rax+0x3c820],al
	...
   14004a14d:	add    BYTE PTR [rax],al
   14004a14f:	add    BYTE PTR [rax+rax*1],al
	...
   14004a17e:	add    BYTE PTR [rax],al
   14004a180:	mov    al,0xa4
   14004a182:	add    DWORD PTR [rax+0x1],eax
   14004a185:	add    BYTE PTR [rax],al
   14004a187:	add    BYTE PTR [rax+0x14001a6],dl
   14004a18d:	add    BYTE PTR [rax],al
   14004a18f:	add    al,dl
   14004a191:	test   al,0x1
   14004a193:	rex add DWORD PTR [rax],eax
   14004a196:	add    BYTE PTR [rax],al
   14004a198:	shr    BYTE PTR [rdx+0x14001],1
   14004a19e:	add    BYTE PTR [rax],al
   14004a1a0:	xor    BYTE PTR [rbp+0x14001],ch
	...
   14004a1c6:	add    BYTE PTR [rax],al
   14004a1c8:	shl    BYTE PTR [rsi+0x14002],1
   14004a1ce:	add    BYTE PTR [rax],al
   14004a1d0:	push   rax
   14004a1d1:	scas   eax,DWORD PTR es:[rdi]
   14004a1d2:	add    DWORD PTR [rax+0x1],eax
   14004a1d5:	add    BYTE PTR [rax],al
   14004a1d7:	add    BYTE PTR [rax-0x51],dl
   14004a1da:	add    DWORD PTR [rax+0x1],eax
   14004a1dd:	add    BYTE PTR [rax],al
   14004a1df:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004a1e3:	add    BYTE PTR [rbp+0x54],dl
   14004a1e6:	rex.RX sub eax,0x38
	...
   14004a220:	mov    eax,0x4
   14004a225:	add    al,0x1
   14004a227:	add    ebp,edi
   14004a229:	mov    edi,0x300bd
	...
   14004a24e:	add    BYTE PTR [rax],al
   14004a250:	xor    BYTE PTR [rcx],al
   14004a252:	add    BYTE PTR [rax],al
   14004a254:	(bad)  
   14004a255:	(bad)  
   14004a256:	(bad)  
   14004a257:	inc    DWORD PTR [rax]
	...
   14004a265:	add    BYTE PTR [rax],al
   14004a267:	add    al,ah
   14004a269:	movabs eax,ds:0x14004
   14004a272:	add    BYTE PTR [rax],al
   14004a274:	add    BYTE PTR [rax],al
   14004a276:	add    BYTE PTR [rax],al
   14004a278:	push   rax
   14004a279:	movabs eax,ds:0x14004
	...
   14004a37e:	add    BYTE PTR [rax],al
   14004a380:	(bad)  
	...
   14004a3ad:	add    BYTE PTR [rax],al
   14004a3af:	add    BYTE PTR [rax+0x14001a4],dh
   14004a3b5:	add    BYTE PTR [rax],al
   14004a3b7:	add    BYTE PTR [rax+0x14001a6],dl
   14004a3bd:	add    BYTE PTR [rax],al
   14004a3bf:	add    al,dl
   14004a3c1:	test   al,0x1
   14004a3c3:	rex add DWORD PTR [rax],eax
   14004a3c6:	add    BYTE PTR [rax],al
   14004a3c8:	shr    BYTE PTR [rdx+0x14001],1
	...
   14004a3f6:	add    BYTE PTR [rax],al
   14004a3f8:	mov    al,0xa6
   14004a3fa:	add    al,BYTE PTR [rax+0x1]
	...
   14004a40d:	add    BYTE PTR [rax],al
   14004a40f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004a413:	add    BYTE PTR [rbx+0x45],al
   14004a416:	push   rbx
   14004a417:	push   rbp
   14004a418:	sub    eax,0x38
	...
   14004a44d:	add    BYTE PTR [rax],al
   14004a44f:	add    BYTE PTR [rax-0xffffdc],bh
   14004a455:	(bad)  
   14004a456:	add    DWORD PTR [rbx],eax
   14004a458:	out    dx,eax
   14004a459:	mov    edi,0x300bd
	...
   14004a47e:	add    BYTE PTR [rax],al
   14004a480:	xor    BYTE PTR [rcx],al
   14004a482:	add    BYTE PTR [rax],al
   14004a484:	(bad)  
   14004a485:	(bad)  
   14004a486:	(bad)  
   14004a487:	inc    DWORD PTR [rax]
	...
   14004a495:	add    BYTE PTR [rax],al
   14004a497:	add    BYTE PTR [rax],dl
   14004a499:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a49a:	add    al,0x40
   14004a49c:	add    DWORD PTR [rax],eax
	...
   14004a4a6:	add    BYTE PTR [rax],al
   14004a4a8:	and    BYTE PTR [rbx+0x14004],0x0
	...
   14004a5af:	add    BYTE PTR [rax],al
   14004a5b1:	add    dh,bh
   14004a5b3:	inc    DWORD PTR [rax]
   14004a5b5:	add    dh,bh
   14004a5b7:	(bad)  
   14004a5b8:	(bad)  
   14004a5b9:	inc    BYTE PTR [rax]
   14004a5bb:	add    bh,bh
   14004a5bd:	inc    BYTE PTR [rax]
   14004a5bf:	add    BYTE PTR [rdi],al
	...
   14004a5ed:	add    BYTE PTR [rax],al
   14004a5ef:	add    al,ah
   14004a5f1:	mov    bl,0x1
   14004a5f3:	rex add DWORD PTR [rax],eax
   14004a5f6:	add    BYTE PTR [rax],al
   14004a5f8:	mov    bpl,0x1
   14004a5fb:	rex add DWORD PTR [rax],eax
   14004a5fe:	add    BYTE PTR [rax],al
   14004a600:	shl    BYTE PTR [rsi+0x14001],1
   14004a606:	add    BYTE PTR [rax],al
   14004a608:	jo     0x14004a5c2
   14004a60a:	add    DWORD PTR [rax+0x1],eax
   14004a60d:	add    BYTE PTR [rax],al
   14004a60f:	add    BYTE PTR [rax-0x46],ah
   14004a612:	add    DWORD PTR [rax+0x1],eax
	...
   14004a635:	add    BYTE PTR [rax],al
   14004a637:	add    al,dl
   14004a639:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a63a:	add    al,BYTE PTR [rax+0x1]
	...
   14004a64d:	add    BYTE PTR [rax],al
   14004a64f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004a653:	add    BYTE PTR [rbp+0x54],dl
   14004a656:	rex.RX sub eax,0x45423233
	...
   14004a690:	rol    BYTE PTR [rax+rax*1],1
   14004a693:	add    BYTE PTR [rax],al
   14004a695:	(bad)  
   14004a696:	add    al,0x4
   14004a698:	add    BYTE PTR [rax],al
   14004a69a:	(bad)  
   14004a69b:	std    
   14004a69c:	add    al,0x0
	...
   14004a6be:	add    BYTE PTR [rax],al
   14004a6c0:	xor    BYTE PTR [rcx],al
   14004a6c2:	add    BYTE PTR [rax],al
   14004a6c4:	(bad)  
   14004a6c5:	(bad)  
   14004a6c6:	(bad)  
   14004a6c7:	inc    DWORD PTR [rax]
	...
   14004a6d5:	add    BYTE PTR [rax],al
   14004a6d7:	add    BYTE PTR [rax-0x5a],dl
   14004a6da:	add    al,0x40
   14004a6dc:	add    DWORD PTR [rax],eax
	...
   14004a6e6:	add    BYTE PTR [rax],al
   14004a6e8:	shl    BYTE PTR [rbp+0x14004],0x0
	...
   14004a7ef:	add    BYTE PTR [rax],cl
	...
   14004a81d:	add    BYTE PTR [rax],al
   14004a81f:	add    BYTE PTR [rax-0x45],ah
   14004a822:	add    DWORD PTR [rax+0x1],eax
   14004a825:	add    BYTE PTR [rax],al
   14004a827:	add    al,ah
   14004a829:	mov    esp,0x14001
   14004a82e:	add    BYTE PTR [rax],al
   14004a830:	cmp    BYTE PTR [rsi+0x14001],0x0
   14004a837:	add    BYTE PTR [rax],ah
   14004a839:	rol    BYTE PTR [rcx],0x40
   14004a83c:	add    DWORD PTR [rax],eax
   14004a83e:	add    BYTE PTR [rax],al
   14004a840:	adc    dl,al
   14004a842:	add    DWORD PTR [rax+0x1],eax
	...
   14004a865:	add    BYTE PTR [rax],al
   14004a867:	add    al,dl
   14004a869:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a86a:	add    al,BYTE PTR [rax+0x1]
	...
   14004a87d:	add    BYTE PTR [rax],al
   14004a87f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004a883:	add    BYTE PTR [rbp+0x54],dl
   14004a886:	rex.RX sub eax,0x454c3233
	...
   14004a8c0:	rol    BYTE PTR [rax+rax*1],cl
   14004a8c3:	add    BYTE PTR [rax],al
   14004a8c5:	or     BYTE PTR [rsp+rax*1],al
   14004a8c8:	std    
   14004a8c9:	inc    DWORD PTR [rax]
   14004a8cb:	add    BYTE PTR [rax+rax*1],al
	...
   14004a8ee:	add    BYTE PTR [rax],al
   14004a8f0:	xor    BYTE PTR [rcx],al
   14004a8f2:	add    BYTE PTR [rax],al
   14004a8f4:	(bad)  
   14004a8f5:	(bad)  
   14004a8f6:	(bad)  
   14004a8f7:	inc    DWORD PTR [rax]
	...
   14004a905:	add    BYTE PTR [rax],al
   14004a907:	add    BYTE PTR [rax+0x14004a8],al
	...
   14004a915:	add    BYTE PTR [rax],al
   14004a917:	add    al,dh
   14004a919:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a91a:	add    al,0x40
   14004a91c:	add    DWORD PTR [rax],eax
	...
   14004aa22:	(bad)  
   14004aa23:	(bad)  
   14004aa24:	(bad)  
   14004aa25:	inc    BYTE PTR [rax]
	...
   14004aa2f:	add    BYTE PTR [rsi],bl
	...
   14004aa45:	add    BYTE PTR [rax],al
   14004aa47:	add    BYTE PTR [rax],dl
   14004aa49:	ret    
   14004aa4a:	add    DWORD PTR [rax+0x1],eax
	...
   14004aa55:	add    BYTE PTR [rax],al
   14004aa57:	add    BYTE PTR [rax-0x24],al
   14004aa5a:	add    DWORD PTR [rax+0x1],eax
   14004aa5d:	add    BYTE PTR [rax],al
   14004aa5f:	add    BYTE PTR [rax],ah
   14004aa61:	ret    
   14004aa62:	add    DWORD PTR [rax+0x1],eax
   14004aa65:	add    BYTE PTR [rax],al
   14004aa67:	add    BYTE PTR [rax],ah
   14004aa69:	ret    
   14004aa6a:	add    DWORD PTR [rax+0x1],eax
   14004aa6d:	add    BYTE PTR [rax],al
   14004aa6f:	add    BYTE PTR [rax+0x14001be],al
   14004aa75:	add    BYTE PTR [rax],al
   14004aa77:	add    BYTE PTR [rax],ah
   14004aa79:	rol    BYTE PTR [rcx],0x40
   14004aa7c:	add    DWORD PTR [rax],eax
   14004aa7e:	add    BYTE PTR [rax],al
   14004aa80:	mov    al,0xc5
   14004aa82:	add    DWORD PTR [rax+0x1],eax
	...
   14004aaa5:	add    BYTE PTR [rax],al
   14004aaa7:	add    al,dl
   14004aaa9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004aaaa:	add    al,BYTE PTR [rax+0x1]
	...
   14004aabd:	add    BYTE PTR [rax],al
   14004aabf:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004aac3:	add    BYTE PTR [rbp+0x54],dl
   14004aac6:	rex.RX sub eax,0x3233
	...
   14004ab00:	(bad)  
   14004ab01:	add    al,0x0
   14004ab03:	add    BYTE PTR [rax],al
   14004ab05:	(bad)  
   14004ab06:	add    al,0x4
   14004ab08:	std    
   14004ab09:	inc    DWORD PTR [rax]
   14004ab0b:	add    BYTE PTR [rax+rax*1],al
	...
   14004ab2e:	add    BYTE PTR [rax],al
   14004ab30:	xor    BYTE PTR [rcx],al
   14004ab32:	add    BYTE PTR [rax],al
   14004ab34:	(bad)  
   14004ab35:	(bad)  
   14004ab36:	(bad)  
   14004ab37:	inc    DWORD PTR [rax]
	...
   14004ab45:	add    BYTE PTR [rax],al
   14004ab47:	add    al,al
   14004ab49:	stos   BYTE PTR es:[rdi],al
   14004ab4a:	add    al,0x40
   14004ab4c:	add    DWORD PTR [rax],eax
	...
   14004ab56:	add    BYTE PTR [rax],al
   14004ab58:	xor    BYTE PTR [rdx+0x14004],ch
	...
   14004ac5e:	add    BYTE PTR [rax],al
   14004ac60:	(bad)  
   14004ac61:	inc    DWORD PTR [rax]
	...
   14004ac6f:	add    BYTE PTR [rip+0x0],al        # 0x14004ac75
	...
   14004ac85:	add    BYTE PTR [rax],al
   14004ac87:	add    al,dh
   14004ac89:	fild   DWORD PTR [rcx]
   14004ac8b:	rex add DWORD PTR [rax],eax
	...
   14004ac96:	add    BYTE PTR [rax],al
   14004ac98:	rcl    al,0x1
   14004ac9b:	rex add DWORD PTR [rax],eax
   14004ac9e:	add    BYTE PTR [rax],al
   14004aca0:	push   rax
   14004aca1:	retf   
   14004aca2:	add    DWORD PTR [rax+0x1],eax
   14004aca5:	add    BYTE PTR [rax],al
   14004aca7:	add    BYTE PTR [rax-0x35],dl
   14004acaa:	add    DWORD PTR [rax+0x1],eax
   14004acad:	add    BYTE PTR [rax],al
   14004acaf:	add    al,ah
   14004acb1:	(bad)
   14004acb4:	add    DWORD PTR [rax],eax
   14004acb6:	add    BYTE PTR [rax],al
   14004acb8:	loopne 0x14004ac7f
   14004acba:	add    DWORD PTR [rax+0x1],eax
   14004acbd:	add    BYTE PTR [rax],al
   14004acbf:	add    BYTE PTR [rax+0x14001cf],dl
	...
   14004acd1:	rol    DWORD PTR [rcx],1
   14004acd3:	rex add DWORD PTR [rax],eax
	...
   14004ace6:	add    BYTE PTR [rax],al
   14004ace8:	shl    BYTE PTR [rsi+0x14002],1
	...
   14004acfe:	add    BYTE PTR [rax],al
   14004ad00:	add    BYTE PTR fs:[rax],al
   14004ad03:	add    BYTE PTR [rbp+0x54],dl
   14004ad06:	rex.RX sub eax,0x45423631
	...
   14004ad40:	mov    al,0x4
   14004ad42:	add    BYTE PTR [rax],al
   14004ad44:	add    BYTE PTR [rip+0xfffffffffdff0202],al        # 0x13e03af4c
   14004ad4a:	add    BYTE PTR [rax],al
   14004ad4c:	add    al,BYTE PTR [rax]
	...
   14004ad62:	add    BYTE PTR [rax],al
   14004ad64:	(bad)  
   14004ad65:	inc    BYTE PTR [rax]
	...
   14004ad6f:	add    BYTE PTR [rax],dh
   14004ad71:	add    DWORD PTR [rax],eax
   14004ad73:	add    bh,bh
   14004ad75:	(bad)  
   14004ad76:	(bad)  
   14004ad77:	inc    DWORD PTR [rax]
	...
   14004ad89:	lods   eax,DWORD PTR ds:[rsi]
   14004ad8a:	add    al,0x40
   14004ad8c:	add    DWORD PTR [rax],eax
	...
   14004ad96:	add    BYTE PTR [rax],al
   14004ad98:	jo     0x14004ad46
   14004ad9a:	add    al,0x40
   14004ad9c:	add    DWORD PTR [rax],eax
	...
   14004ae9e:	add    BYTE PTR [rax],al
   14004aea0:	(bad)  
	...
   14004aeb5:	add    BYTE PTR [rax],al
   14004aeb7:	add    al,dh
   14004aeb9:	fild   DWORD PTR [rcx]
   14004aebb:	rex add DWORD PTR [rax],eax
	...
   14004aec6:	add    BYTE PTR [rax],al
   14004aec8:	rcl    al,0x1
   14004aecb:	rex add DWORD PTR [rax],eax
   14004aece:	add    BYTE PTR [rax],al
   14004aed0:	adc    dh,0x1
   14004aed3:	rex add DWORD PTR [rax],eax
   14004aed6:	add    BYTE PTR [rax],al
   14004aed8:	adc    dh,0x1
   14004aedb:	rex add DWORD PTR [rax],eax
   14004aede:	add    BYTE PTR [rax],al
   14004aee0:	and    cl,dl
   14004aee2:	add    DWORD PTR [rax+0x1],eax
   14004aee5:	add    BYTE PTR [rax],al
   14004aee7:	add    BYTE PTR [rax],ah
   14004aee9:	rol    DWORD PTR [rcx],1
   14004aeeb:	rex add DWORD PTR [rax],eax
   14004aeee:	add    BYTE PTR [rax],al
   14004aef0:	rcr    dl,0x1
   14004aef3:	rex add DWORD PTR [rax],eax
	...
   14004aefe:	add    BYTE PTR [rax],al
   14004af00:	and    ah,bl
   14004af02:	add    DWORD PTR [rax+0x1],eax
	...
   14004af15:	add    BYTE PTR [rax],al
   14004af17:	add    al,dl
   14004af19:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004af1a:	add    al,BYTE PTR [rax+0x1]
	...
   14004af2d:	add    BYTE PTR [rax],al
   14004af2f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004af33:	add    BYTE PTR [rbp+0x54],dl
   14004af36:	rex.RX sub eax,0x454c3631
	...
   14004af70:	mov    dl,0x4
   14004af72:	add    BYTE PTR [rax],al
   14004af74:	add    BYTE PTR [rsi],al
   14004af76:	add    al,BYTE PTR [rdx]
   14004af78:	std    
   14004af79:	inc    DWORD PTR [rax]
   14004af7b:	add    BYTE PTR [rdx],al
	...
   14004af9d:	add    BYTE PTR [rax],al
   14004af9f:	add    BYTE PTR [rax],dh
   14004afa1:	add    DWORD PTR [rax],eax
   14004afa3:	add    bh,bh
   14004afa5:	(bad)  
   14004afa6:	(bad)  
   14004afa7:	inc    DWORD PTR [rax]
	...
   14004afb5:	add    BYTE PTR [rax],al
   14004afb7:	add    BYTE PTR [rax],dh
   14004afb9:	scas   eax,DWORD PTR es:[rdi]
   14004afba:	add    al,0x40
   14004afbc:	add    DWORD PTR [rax],eax
	...
   14004afc6:	add    BYTE PTR [rax],al
   14004afc8:	movabs al,ds:0x14004ae
	...
   14004b0cd:	add    BYTE PTR [rax],al
   14004b0cf:	add    BYTE PTR [rip+0x0],bl        # 0x14004b0d5
	...
   14004b0e5:	add    BYTE PTR [rax],al
   14004b0e7:	add    BYTE PTR [rax-0x24],ah
   14004b0ea:	add    DWORD PTR [rax+0x1],eax
	...
   14004b0f5:	add    BYTE PTR [rax],al
   14004b0f7:	add    BYTE PTR [rax-0x24],al
   14004b0fa:	add    DWORD PTR [rax+0x1],eax
   14004b0fd:	add    BYTE PTR [rax],al
   14004b0ff:	add    BYTE PTR [rax+0x14001dc],ah
   14004b105:	add    BYTE PTR [rax],al
   14004b107:	add    BYTE PTR [rax+0x14001dc],ah
   14004b10d:	add    BYTE PTR [rax],al
   14004b10f:	add    BYTE PTR [rax],ah
   14004b111:	rol    DWORD PTR [rcx],1
   14004b113:	rex add DWORD PTR [rax],eax
   14004b116:	add    BYTE PTR [rax],al
   14004b118:	and    cl,dl
   14004b11a:	add    DWORD PTR [rax+0x1],eax
   14004b11d:	add    BYTE PTR [rax],al
   14004b11f:	add    BYTE PTR [rax+0x14001de],dh
	...
   14004b12d:	add    BYTE PTR [rax],al
   14004b12f:	add    BYTE PTR [rax+0x14001dc],al
	...
   14004b145:	add    BYTE PTR [rax],al
   14004b147:	add    al,dl
   14004b149:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b14a:	add    al,BYTE PTR [rax+0x1]
	...
   14004b15d:	add    BYTE PTR [rax],al
   14004b15f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004b163:	add    BYTE PTR [rbp+0x54],dl
   14004b166:	rex.RX sub eax,0x3631
	...
   14004b1a0:	mov    ah,0x4
   14004b1a2:	add    BYTE PTR [rax],al
   14004b1a4:	add    BYTE PTR [rip+0xfffffffffffd0202],bl        # 0x14001b3ac
   14004b1aa:	add    BYTE PTR [rax],al
   14004b1ac:	add    al,BYTE PTR [rax]
	...
   14004b1ce:	add    BYTE PTR [rax],al
   14004b1d0:	xor    BYTE PTR [rcx],al
   14004b1d2:	add    BYTE PTR [rax],al
   14004b1d4:	(bad)  
   14004b1d5:	(bad)  
   14004b1d6:	(bad)  
   14004b1d7:	inc    DWORD PTR [rax]
	...
   14004b1e5:	add    BYTE PTR [rax],al
   14004b1e7:	add    BYTE PTR [rax-0x4f],ah
   14004b1ea:	add    al,0x40
   14004b1ec:	add    DWORD PTR [rax],eax
	...
   14004b1f6:	add    BYTE PTR [rax],al
   14004b1f8:	shl    BYTE PTR [rax+0x14004],1
	...
   14004b2fe:	add    BYTE PTR [rax],al
   14004b300:	push   rbp
   14004b301:	push   rsp
   14004b302:	rex.RX sub eax,0x45423631
   14004b308:	sub    al,0x76
   14004b30a:	gs jb  0x14004b380
   14004b30d:	imul   ebp,DWORD PTR [rdi+0x6e],0x313d
   14004b314:	add    BYTE PTR [rax],al
   14004b316:	add    BYTE PTR [rax],al
   14004b318:	push   rbp
   14004b319:	push   rsp
   14004b31a:	rex.RX sub eax,0x454c3631
   14004b320:	sub    al,0x76
   14004b322:	gs jb  0x14004b398
   14004b325:	imul   ebp,DWORD PTR [rdi+0x6e],0x313d
   14004b32c:	add    BYTE PTR [rax],al
   14004b32e:	add    BYTE PTR [rax],al
   14004b330:	push   rbp
   14004b331:	push   rsp
   14004b332:	rex.RX sub eax,0x762c3631
   14004b338:	gs jb  0x14004b3ae
   14004b33b:	imul   ebp,DWORD PTR [rdi+0x6e],0x313d
	...
   14004b34e:	add    BYTE PTR [rax],al
   14004b350:	inc    DWORD PTR [rax]
   14004b352:	add    DWORD PTR [rdx],eax
   14004b354:	add    eax,DWORD PTR [rax*1-0x1]
   14004b35b:	(bad)  
   14004b35c:	(bad)  
   14004b35d:	(bad)  
   14004b35e:	(bad)  
   14004b35f:	inc    DWORD PTR [rsi]
   14004b361:	(bad)  
   14004b362:	or     BYTE PTR [rcx],cl
   14004b364:	or     cl,BYTE PTR [rbx]
   14004b366:	or     al,0xd
   14004b368:	(bad)  
   14004b369:	ud0    edi,edi
   14004b36c:	adc    BYTE PTR [rcx],dl
   14004b36e:	adc    dl,BYTE PTR [rbx]
   14004b370:	inc    DWORD PTR [rax]
   14004b372:	add    BYTE PTR [rax],al
   14004b374:	add    BYTE PTR [rax],al
   14004b376:	add    BYTE PTR [rax],al
   14004b378:	add    DWORD PTR [rdx],eax
   14004b37a:	add    eax,DWORD PTR [rax*1+0x12111006]
   14004b381:	adc    edx,DWORD PTR [rdx*1+0x19181716]
   14004b388:	sbb    al,0x1d
   14004b38a:	(bad)  
   14004b38b:	(bad)  
   14004b38c:	add    BYTE PTR [rax],al
   14004b38e:	add    BYTE PTR [rax],al
   14004b390:	sbb    al,0x0
	...
   14004b3be:	add    BYTE PTR [rax],al
   14004b3c0:	add    dh,ch
   14004b3c2:	add    DWORD PTR [rax+0x1],eax
   14004b3c5:	add    BYTE PTR [rax],al
   14004b3c7:	add    BYTE PTR [rax-0x16],al
   14004b3ca:	add    DWORD PTR [rax+0x1],eax
   14004b3cd:	add    BYTE PTR [rax],al
   14004b3cf:	add    BYTE PTR [rax-0x1a],al
   14004b3d2:	add    DWORD PTR [rax+0x1],eax
   14004b3d5:	add    BYTE PTR [rax],al
   14004b3d7:	add    BYTE PTR [rax-0x1e],ah
   14004b3da:	add    DWORD PTR [rax+0x1],eax
	...
   14004b405:	add    BYTE PTR [rax],al
   14004b407:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004b41d:	add    BYTE PTR [rax],al
   14004b41f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004b423:	add    BYTE PTR [rdx+0x4f],al
   14004b426:	rex.XB push r13
   14004b428:	sub    eax,0x31
	...
   14004b45d:	add    BYTE PTR [rax],al
   14004b45f:	add    BYTE PTR [rsi+0x4],bh
   14004b465:	sbb    al,0x1
   14004b467:	add    al,0x1a
   14004b469:	add    BYTE PTR [rax],al
   14004b46b:	add    BYTE PTR [rcx],al
	...
   14004b48d:	add    BYTE PTR [rax],al
   14004b48f:	add    BYTE PTR [rax],dh
   14004b491:	add    DWORD PTR [rax],eax
   14004b493:	add    bh,bh
   14004b495:	(bad)  
   14004b496:	(bad)  
   14004b497:	inc    DWORD PTR [rax]
	...
   14004b4a5:	add    BYTE PTR [rax],al
   14004b4a7:	add    BYTE PTR [rax],ah
   14004b4a9:	mov    ah,0x4
   14004b4ab:	rex add DWORD PTR [rax],eax
	...
   14004b4b6:	add    BYTE PTR [rax],al
   14004b4b8:	nop
   14004b4b9:	mov    bl,0x4
   14004b4bb:	rex add DWORD PTR [rax],eax
	...
   14004b5be:	add    BYTE PTR [rax],al
   14004b5c0:	add    eax,DWORD PTR [rax]
	...
   14004b5ee:	add    BYTE PTR [rax],al
   14004b5f0:	(bad)  
   14004b5f1:	icebp  
   14004b5f2:	add    DWORD PTR [rax+0x1],eax
   14004b5f5:	add    BYTE PTR [rax],al
   14004b5f7:	add    BYTE PTR [rax-0xf],ah
   14004b5fa:	add    DWORD PTR [rax+0x1],eax
   14004b5fd:	add    BYTE PTR [rax],al
   14004b5ff:	add    BYTE PTR [rax],al
   14004b601:	repz add DWORD PTR [rax+0x1],eax
   14004b605:	add    BYTE PTR [rax],al
   14004b607:	add    BYTE PTR [rax],al
   14004b609:	repz add DWORD PTR [rax+0x1],eax
   14004b60d:	add    BYTE PTR [rax],al
   14004b60f:	add    al,dl
   14004b611:	repnz add DWORD PTR [rax+0x1],eax
	...
   14004b635:	add    BYTE PTR [rax],al
   14004b637:	add    BYTE PTR [rax+0x14001f7],al
	...
   14004b645:	add    BYTE PTR [rax],al
   14004b647:	add    BYTE PTR [rax],ah
   14004b649:	test   BYTE PTR [rcx],0x40
   14004b64c:	add    DWORD PTR [rax],eax
   14004b64e:	add    BYTE PTR [rax],al
   14004b650:	add    BYTE PTR fs:[rax],al
   14004b653:	add    BYTE PTR [rcx+0x53],cl
   14004b656:	rex.WRXB sub rax,0x39353838
   14004b65c:	sub    eax,0x31
	...
   14004b68d:	add    BYTE PTR [rax],al
   14004b68f:	add    BYTE PTR [rbx],dh
   14004b691:	add    eax,DWORD PTR [rax]
   14004b693:	add    BYTE PTR [rax],al
   14004b695:	add    eax,DWORD PTR [rcx]
   14004b697:	add    DWORD PTR [rdx],ebx
   14004b699:	add    BYTE PTR [rax],al
   14004b69b:	add    BYTE PTR [rcx],al
	...
   14004b6bd:	add    BYTE PTR [rax],al
   14004b6bf:	add    BYTE PTR [rax],dh
   14004b6c1:	add    DWORD PTR [rax],eax
   14004b6c3:	add    bh,bh
   14004b6c5:	(bad)  
   14004b6c6:	(bad)  
   14004b6c7:	inc    DWORD PTR [rax]
	...
   14004b6d5:	add    BYTE PTR [rax],al
   14004b6d7:	add    BYTE PTR [rax-0x4a],dl
   14004b6da:	add    al,0x40
   14004b6dc:	add    DWORD PTR [rax],eax
	...
   14004b6e6:	add    BYTE PTR [rax],al
   14004b6e8:	shl    BYTE PTR [rbp+0x14004],0x0
	...
   14004b7ef:	add    BYTE PTR [rdx],bl
	...
   14004b81d:	add    BYTE PTR [rax],al
   14004b81f:	add    BYTE PTR [rax+0x14001f7],ah
   14004b825:	add    BYTE PTR [rax],al
   14004b827:	add    BYTE PTR [rax+0x14001f7],ah
   14004b82d:	add    BYTE PTR [rax],al
   14004b82f:	add    BYTE PTR [rax],al
   14004b831:	repz add DWORD PTR [rax+0x1],eax
   14004b835:	add    BYTE PTR [rax],al
   14004b837:	add    BYTE PTR [rax],al
   14004b839:	repz add DWORD PTR [rax+0x1],eax
   14004b83d:	add    BYTE PTR [rax],al
   14004b83f:	add    al,dh
   14004b841:	stc    
   14004b842:	add    DWORD PTR [rax+0x1],eax
	...
   14004b865:	add    BYTE PTR [rax],al
   14004b867:	add    al,dl
   14004b869:	sti    
   14004b86a:	add    DWORD PTR [rax+0x1],eax
	...
   14004b875:	add    BYTE PTR [rax],al
   14004b877:	add    BYTE PTR [rax-0x6],al
   14004b87a:	add    DWORD PTR [rax+0x1],eax
   14004b87d:	add    BYTE PTR [rax],al
   14004b87f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004b883:	add    BYTE PTR [rbp+0x53],dl
   14004b886:	sub    eax,0x49435341
   14004b88b:	rex.WB add BYTE PTR [r8],al
	...
   14004b8be:	add    BYTE PTR [rax],al
   14004b8c0:	outs   dx,DWORD PTR ds:[rsi]
   14004b8c1:	add    DWORD PTR [rax],eax
   14004b8c3:	add    BYTE PTR [rax],al
   14004b8c5:	sbb    al,BYTE PTR [rcx]
   14004b8c7:	add    DWORD PTR [rdx],ebx
   14004b8c9:	add    BYTE PTR [rax],al
   14004b8cb:	add    BYTE PTR [rcx],al
	...
   14004b8ed:	add    BYTE PTR [rax],al
   14004b8ef:	add    BYTE PTR [rax],dh
   14004b8f1:	add    DWORD PTR [rax],eax
   14004b8f3:	add    bh,bh
   14004b8f5:	(bad)  
   14004b8f6:	(bad)  
   14004b8f7:	inc    DWORD PTR [rax]
	...
   14004b905:	add    BYTE PTR [rax],al
   14004b907:	add    BYTE PTR [rax+0x14004b8],al
	...
   14004b915:	add    BYTE PTR [rax],al
   14004b917:	add    al,dh
   14004b919:	mov    bh,0x4
   14004b91b:	rex add DWORD PTR [rax],eax
	...
   14004ba22:	add    BYTE PTR [rax],al
   14004ba24:	add    BYTE PTR [rax],0x0
   14004ba27:	add    BYTE PTR [rdx+0x0],al
   14004ba2a:	add    BYTE PTR [rax],al
   14004ba2c:	add    DWORD PTR [rax],eax
   14004ba2e:	add    BYTE PTR [rax],al
   14004ba30:	or     BYTE PTR [rax],al
   14004ba32:	add    BYTE PTR [rax],al
   14004ba34:	rex.XB add BYTE PTR [r8],al
   14004ba37:	add    BYTE PTR [rdx],al
   14004ba39:	add    BYTE PTR [rax],al
   14004ba3b:	add    BYTE PTR [rax+0x0],al
   14004ba3e:	add    BYTE PTR [rax],al
   14004ba40:	rex.WXB add BYTE PTR [r8],al
   14004ba43:	add    BYTE PTR [rbx],al
   14004ba45:	add    BYTE PTR [rax],al
   14004ba47:	add    BYTE PTR [rax],ah
   14004ba49:	add    BYTE PTR [rax],al
   14004ba4b:	add    BYTE PTR [rdx+0x0],cl
   14004ba4e:	add    BYTE PTR [rax],al
   14004ba50:	add    al,0x0
   14004ba52:	add    BYTE PTR [rax],al
   14004ba54:	adc    BYTE PTR [rax],al
   14004ba56:	add    BYTE PTR [rax],al
   14004ba58:	rex.RXB add BYTE PTR [r8],r8b
   14004ba5b:	add    BYTE PTR [rip+0x1000000],al        # 0x14104ba61
   14004ba61:	add    BYTE PTR [rax],al
   14004ba63:	add    BYTE PTR [rax+rax*1+0x0],al
   14004ba67:	add    BYTE PTR [rsi],al
   14004ba69:	add    BYTE PTR [rax],al
   14004ba6b:	add    BYTE PTR [rax+rax*1],al
   14004ba6e:	add    BYTE PTR [rax],al
   14004ba70:	add    BYTE PTR [r8],r8b
   14004ba73:	add    BYTE PTR [rdi],al
   14004ba75:	add    BYTE PTR [rax],al
   14004ba77:	add    BYTE PTR [rax+rax*1],al
   14004ba7a:	add    BYTE PTR [rax],al
   14004ba7c:	rex.W add BYTE PTR [rax],al
   14004ba7f:	add    BYTE PTR [rax],cl
   14004ba81:	add    BYTE PTR [rax],al
   14004ba83:	add    BYTE PTR [rdx],al
   14004ba85:	add    BYTE PTR [rax],al
   14004ba87:	add    BYTE PTR [rcx+0x0],cl
   14004ba8a:	add    BYTE PTR [rax],al
   14004ba8c:	add    BYTE PTR [rax],al
   14004ba8e:	add    BYTE PTR [rax],al
   14004ba90:	add    al,bh
   14004ba92:	(bad)  
   14004ba93:	inc    DWORD PTR [rax-0x1]
   14004ba99:	(bad)  
   14004ba9a:	(bad)  
   14004ba9b:	mov    esi,0xff87a09e
   14004baa0:	jmp    QWORD PTR [rax-0x79]
   14004baa6:	(bad)  
   14004baa7:	(bad)  
   14004baa8:	(bad)  
   14004baa9:	(bad)  
   14004baaa:	(bad)  
   14004baab:	(bad)  
   14004baac:	(bad)  
   14004baad:	(bad)  
   14004baae:	(bad)  
   14004baaf:	(bad)  
   14004bab0:	(bad)  
   14004bab1:	(bad)  
   14004bab2:	(bad)  
   14004bab3:	(bad)  
   14004bab4:	(bad)  
   14004bab5:	(bad)  
   14004bab6:	(bad)  
   14004bab7:	(bad)  
   14004bab8:	inc    DWORD PTR [rcx-0x1010101]
   14004babe:	(bad)  
   14004babf:	(bad)  
   14004bac0:	inc    DWORD PTR [rbx-0x87c0801]
   14004bac6:	(bad)  
   14004bac7:	mov    edi,0xffff
   14004bacc:	fadd   DWORD PTR [rax-0x1]
   14004bad2:	(bad)  
   14004bad3:	mov    esi,0xff87a0ac
   14004bad8:	jmp    QWORD PTR [rax-0x79]
   14004bade:	add    BYTE PTR [rax],al
   14004bae0:	movabs al,ds:0x801a140480808080
   14004bae9:	rol    al,0xc0
   14004baec:	enter  0xc098,0x98
   14004baf0:	mov    esi,0x8088889e
   14004baf5:	cmp    bh,0xff
   14004baf8:	(bad)  
   14004baf9:	(bad)  
   14004bafa:	(bad)  
   14004bafb:	(bad)  
   14004bafc:	(bad)  
   14004bafd:	(bad)  
   14004bafe:	(bad)  
   14004baff:	inc    eax
	...
   14004bb0d:	add    BYTE PTR [rax],al
   14004bb0f:	add    BYTE PTR [rax-0x5dff5f00],ah
   14004bb15:	add    BYTE PTR [rbx-0x5b5b2000],ah
   14004bb1b:	add    BYTE PTR [rbp-0x58ff5a00],ah
   14004bb21:	add    BYTE PTR [rax-0x55ff5700],ch
   14004bb27:	add    cl,ch
   14004bb29:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bb2a:	scas   al,BYTE PTR es:[rdi]
   14004bb2b:	add    BYTE PTR [rbx-0x52ff5400],ch
   14004bb31:	add    BYTE PTR [rdx-0x4fff5100],dh
   14004bb37:	add    BYTE PTR [rcx-0x4bff4d00],dh
   14004bb3d:	add    BYTE PTR [rbp-0x48ff4a00],dh
   14004bb43:	add    BYTE PTR [rax-0x45ff4700],bh
   14004bb49:	add    BYTE PTR [rbx-0x42ff4400],bh
   14004bb4f:	add    BYTE PTR [rsi-0x3fff4100],bh
   14004bb55:	add    cl,al
   14004bb57:	add    dl,al
   14004bb59:	add    bl,al
   14004bb5b:	add    ah,al
   14004bb5d:	add    ch,al
   14004bb5f:	add    dh,al
   14004bb61:	add    bh,al
   14004bb63:	add    al,cl
   14004bb65:	add    cl,cl
   14004bb67:	add    dl,cl
   14004bb69:	add    bl,cl
   14004bb6b:	add    ah,cl
   14004bb6d:	add    ch,cl
   14004bb6f:	add    bh,cl
   14004bb71:	add    al,dl
   14004bb73:	add    cl,dl
   14004bb75:	add    dl,dl
   14004bb77:	add    bl,dl
   14004bb79:	add    ah,dl
   14004bb7b:	add    ch,dl
   14004bb7d:	add    dh,dl
   14004bb7f:	add    bh,dl
   14004bb81:	add    al,bl
   14004bb83:	add    bh,bh
   14004bb85:	(bad)  
   14004bb86:	(bad)  
   14004bb87:	(bad)  
   14004bb88:	jmp    0x11aefa48d
   14004bb8d:	add    bl,bl
   14004bb8f:	add    ah,bl
   14004bb91:	add    ch,bl
   14004bb93:	add    dh,bl
   14004bb95:	add    bh,bl
   14004bb97:	add    cl,ch
   14004bb99:	(bad)  
   14004bb9b:	add    al,ah
   14004bb9d:	add    cl,ah
   14004bb9f:	add    dl,ah
   14004bba1:	add    bh,ah
   14004bba3:	add    ah,ah
   14004bba5:	add    ch,ah
   14004bba7:	add    dh,ah
   14004bba9:	add    al,ch
   14004bbab:	add    ah,ch
   14004bbad:	add    ch,ch
   14004bbaf:	add    cl,ch
   14004bbb1:	movabs eax,ds:0xfffffffff0b8ffff
   14004bbba:	(bad)  
   14004bbbb:	(bad)  
   14004bbbc:	(bad)  
   14004bbbd:	(bad)  
   14004bbbe:	(bad)  
   14004bbbf:	(bad)  
   14004bbc0:	jmp    0x129b9a578
   14004bbc5:	mov    ch,0xe9
   14004bbc7:	mov    edx,0xc0e9bfe9
   14004bbcc:	jmp    0x129058a9a
   14004bbd1:	stos   BYTE PTR es:[rdi],al
   14004bbd2:	jmp    0x129e0a57e
   14004bbd7:	fsub   st(2),st
   14004bbd9:	add    dl,ch
   14004bbdb:	(bad)  
   14004bbdc:	icebp  
   14004bbdd:	add    dl,dh
   14004bbdf:	add    bl,dh
   14004bbe1:	add    ah,dh
   14004bbe3:	add    ch,dh
   14004bbe5:	add    dh,dh
   14004bbe7:	add    bh,dh
   14004bbe9:	add    al,bh
   14004bbeb:	add    cl,bh
   14004bbed:	add    dl,bh
   14004bbef:	add    BYTE PTR [rdi-0x10],bh
   14004bbf5:	(bad)  
   14004bbf6:	(bad)  
   14004bbf7:	(bad)  
   14004bbf8:	(bad)  
   14004bbf9:	(bad)  
   14004bbfa:	(bad)  
   14004bbfb:	(bad)  
   14004bbfc:	(bad)  
   14004bbfd:	(bad)  
   14004bbfe:	(bad)  
   14004bbff:	(bad)  
   14004bc00:	(bad)  
   14004bc01:	(bad)  
   14004bc02:	(bad)  
   14004bc03:	(bad)  
   14004bc04:	(bad)  
   14004bc05:	(bad)  
   14004bc06:	(bad)  
   14004bc07:	(bad)  
   14004bc08:	(bad)  
   14004bc09:	(bad)  
   14004bc0a:	(bad)  
   14004bc0b:	(bad)  
   14004bc0c:	(bad)  
   14004bc0d:	(bad)  
   14004bc0e:	(bad)  
   14004bc0f:	inc    DWORD PTR [rax]
   14004bc11:	add    BYTE PTR [rcx],al
   14004bc13:	add    BYTE PTR [rdx],al
   14004bc15:	add    BYTE PTR [rbx],al
   14004bc17:	add    BYTE PTR [rax+rax*1],al
   14004bc1a:	add    eax,0x7000600
   14004bc1f:	add    BYTE PTR [rax],cl
   14004bc21:	add    BYTE PTR [rcx],cl
   14004bc23:	add    BYTE PTR [rdx],cl
   14004bc25:	add    BYTE PTR [rbx],cl
   14004bc27:	add    BYTE PTR [rax+rax*1],cl
   14004bc2a:	or     eax,0xf000e00
   14004bc2f:	add    BYTE PTR [rax],dl
   14004bc31:	add    BYTE PTR [rcx],dl
   14004bc33:	add    BYTE PTR [rdx],dl
   14004bc35:	add    BYTE PTR [rbx],dl
   14004bc37:	add    BYTE PTR [rax+rax*1],dl
   14004bc3a:	adc    eax,0x17001600
   14004bc3f:	add    BYTE PTR [rax],bl
   14004bc41:	add    BYTE PTR [rcx],bl
   14004bc43:	add    BYTE PTR [rdx],bl
   14004bc45:	add    BYTE PTR [rbx],bl
   14004bc47:	add    BYTE PTR [rax+rax*1],bl
   14004bc4a:	sbb    eax,0x1f001e00
   14004bc4f:	add    BYTE PTR [rax],ah
   14004bc51:	add    BYTE PTR [rcx],ah
   14004bc53:	add    BYTE PTR [rdx],ah
   14004bc55:	add    BYTE PTR [rbx],ah
   14004bc57:	add    BYTE PTR [rax+rax*1],ah
   14004bc5a:	and    eax,0x27002600
   14004bc5f:	add    BYTE PTR [rax],ch
   14004bc61:	add    BYTE PTR [rcx],ch
   14004bc63:	add    BYTE PTR [rdx],ch
   14004bc65:	add    BYTE PTR [rbx],ch
   14004bc67:	add    BYTE PTR [rax+rax*1],ch
   14004bc6a:	sub    eax,0x2f002e00
   14004bc6f:	add    BYTE PTR [rax],dh
   14004bc71:	add    BYTE PTR [rcx],dh
   14004bc73:	add    BYTE PTR [rdx],dh
   14004bc75:	add    BYTE PTR [rbx],dh
   14004bc77:	add    BYTE PTR [rax+rax*1],dh
   14004bc7a:	xor    eax,0x37003600
   14004bc7f:	add    BYTE PTR [rax],bh
   14004bc81:	add    BYTE PTR [rcx],bh
   14004bc83:	add    BYTE PTR [rdx],bh
   14004bc85:	add    BYTE PTR [rbx],bh
   14004bc87:	add    BYTE PTR [rax+rax*1],bh
   14004bc8a:	cmp    eax,0x3f003e00
   14004bc8f:	add    BYTE PTR [rax+0x0],al
   14004bc92:	add    BYTE PTR [r10+0x0],al
   14004bc96:	add    BYTE PTR [r8+r8*1+0x45],al
   14004bc9b:	add    BYTE PTR [rsi+0x0],al
   14004bc9e:	rex.RXB add BYTE PTR [r8+0x0],r9b
   14004bca2:	rex.WB add BYTE PTR [r10+0x0],cl
   14004bca6:	rex.WXB add BYTE PTR [r8+r8*1+0x4d],cl
   14004bcab:	add    BYTE PTR [rsi+0x0],cl
   14004bcae:	rex.WRXB add BYTE PTR [r8+0x0],r10b
   14004bcb2:	push   rcx
   14004bcb3:	add    BYTE PTR [rdx+0x0],dl
   14004bcb6:	push   rbx
   14004bcb7:	add    BYTE PTR [rax+rax*1+0x55],dl
   14004bcbb:	add    BYTE PTR [rsi+0x0],dl
   14004bcbe:	push   rdi
   14004bcbf:	add    BYTE PTR [rax+0x0],bl
   14004bcc2:	pop    rcx
   14004bcc3:	add    BYTE PTR [rdx+0x0],bl
   14004bcc6:	pop    rbx
   14004bcc7:	add    BYTE PTR [rax+rax*1+0x5d],bl
   14004bccb:	add    BYTE PTR [rsi+0x0],bl
   14004bcce:	pop    rdi
   14004bccf:	add    BYTE PTR [rax+0x0],ah
   14004bcd2:	(bad)  
   14004bcd3:	add    BYTE PTR [rdx+0x0],ah
   14004bcd6:	movsxd eax,DWORD PTR [rax]
   14004bcd8:	add    BYTE PTR fs:[rbp+0x0],ah
   14004bcdc:	data16 add BYTE PTR [rdi+0x0],ah
   14004bce0:	push   0x6a006900
   14004bce5:	add    BYTE PTR [rbx+0x0],ch
   14004bce8:	ins    BYTE PTR es:[rdi],dx
   14004bce9:	add    BYTE PTR [rbp+0x0],ch
   14004bcec:	outs   dx,BYTE PTR ds:[rsi]
   14004bced:	add    BYTE PTR [rdi+0x0],ch
   14004bcf0:	jo     0x14004bcf2
   14004bcf2:	jno    0x14004bcf4
   14004bcf4:	jb     0x14004bcf6
   14004bcf6:	jae    0x14004bcf8
   14004bcf8:	je     0x14004bcfa
   14004bcfa:	jne    0x14004bcfc
   14004bcfc:	jbe    0x14004bcfe
   14004bcfe:	ja     0x14004bd00
   14004bd00:	js     0x14004bd02
   14004bd02:	jns    0x14004bd04
   14004bd04:	jp     0x14004bd06
   14004bd06:	jnp    0x14004bd08
   14004bd08:	jl     0x14004bd0a
   14004bd0a:	jge    0x14004bd0c
   14004bd0c:	jle    0x14004bd0e
   14004bd0e:	jg     0x14004bd10
   14004bd10:	add    BYTE PTR [rax],0x81
   14004bd13:	add    BYTE PTR [rdx-0x7bff7d00],al
   14004bd19:	add    BYTE PTR [rbp-0x78ff7a00],al
   14004bd1f:	add    BYTE PTR [rax-0x75ff7700],cl
   14004bd25:	add    BYTE PTR [rbx-0x72ff7400],cl
   14004bd2b:	add    BYTE PTR [rsi-0x6fff7100],cl
   14004bd31:	add    BYTE PTR [rcx-0x6cff6e00],dl
   14004bd37:	add    BYTE PTR [rax+rax*1+0x960095],dl
   14004bd3e:	xchg   edi,eax
   14004bd3f:	add    BYTE PTR [rax-0x65ff6700],bl
   14004bd45:	add    BYTE PTR [rbx-0x62ff6400],bl
   14004bd4b:	add    BYTE PTR [rsi-0x5fff6100],bl
   14004bd51:	add    BYTE PTR [rcx],al
   14004bd53:	or     DWORD PTR [rdx],eax
   14004bd55:	or     DWORD PTR [rbx],eax
   14004bd57:	or     DWORD PTR [rip+0x7090609],eax        # 0x1470dc366
   14004bd5d:	or     DWORD PTR [rax],ecx
   14004bd5f:	or     DWORD PTR [rcx],ecx
   14004bd61:	or     DWORD PTR [rdx],ecx
   14004bd63:	or     DWORD PTR [rbx],ecx
   14004bd65:	or     DWORD PTR [rsi],ecx
   14004bd67:	or     DWORD PTR [rdi],ecx
   14004bd69:	or     DWORD PTR [rax],edx
   14004bd6b:	or     DWORD PTR [rip+0x13091209],ecx        # 0x1530dcf7a
   14004bd71:	or     DWORD PTR [rcx+rcx*1],edx
   14004bd74:	adc    DWORD PTR [rcx],ecx
   14004bd76:	adc    eax,0x17091609
   14004bd7b:	or     DWORD PTR [rax],ebx
   14004bd7d:	or     DWORD PTR [rcx],ebx
   14004bd7f:	or     DWORD PTR [rdx],ebx
   14004bd81:	or     DWORD PTR [rbx],ebx
   14004bd83:	or     DWORD PTR [rcx+rcx*1],ebx
   14004bd86:	sbb    eax,0x1f091e09
   14004bd8b:	or     DWORD PTR [rax],esp
   14004bd8d:	or     DWORD PTR [rcx],esp
   14004bd8f:	or     DWORD PTR [rdx],esp
   14004bd91:	or     DWORD PTR [rbx],esp
   14004bd93:	or     DWORD PTR [rcx+rcx*1],esp
   14004bd96:	and    eax,0x27092609
   14004bd9b:	or     DWORD PTR [rax],ebp
   14004bd9d:	or     DWORD PTR [rcx],ebp
   14004bd9f:	or     DWORD PTR [rdx],ebp
   14004bda1:	or     DWORD PTR [rbx],ebp
   14004bda3:	or     DWORD PTR [rcx+rcx*1],ebp
   14004bda6:	sub    eax,0x2f092e09
   14004bdab:	or     DWORD PTR [rdi+0x9],ebx
   14004bdae:	xor    BYTE PTR [rcx],cl
   14004bdb0:	xor    DWORD PTR [rcx],ecx
   14004bdb2:	xor    cl,BYTE PTR [rcx]
   14004bdb4:	xor    ecx,DWORD PTR [rcx]
   14004bdb6:	xor    al,0x9
   14004bdb8:	xor    eax,0x37093609
   14004bdbd:	or     DWORD PTR [rax],edi
   14004bdbf:	or     DWORD PTR [rcx],edi
   14004bdc1:	or     DWORD PTR [rip+0x3f093e20],ecx        # 0x17f0dfbe7
   14004bdc7:	or     DWORD PTR [rax+0x9],eax
   14004bdca:	or     DWORD PTR [r10+0x9],eax
   14004bdce:	rex.XB or DWORD PTR [r14+0x9],eax
   14004bdd2:	rex.RXB or DWORD PTR [r8+0x9],r9d
   14004bdd6:	or     DWORD PTR [r10+0x9],r9d
   14004bdda:	or     QWORD PTR [r9+r9*1+0x49],rcx
   14004bddf:	or     DWORD PTR [rbp+0x9],ecx
   14004bde2:	cmp    al,0x9
   14004bde4:	fs or  edi,edi
   14004bde7:	(bad)  
   14004bde8:	(bad)  
   14004bde9:	(bad)  
   14004bdea:	(bad)  
   14004bdeb:	(bad)  
   14004bdec:	(bad)  
   14004bded:	(bad)  
   14004bdee:	(bad)  
   14004bdef:	(bad)  
   14004bdf0:	(bad)  
   14004bdf1:	jmp    QWORD PTR [rsi+0x9]
   14004bdf4:	or     DWORD PTR [eax+0x9],ebp
   14004bdf8:	imul   ecx,DWORD PTR [rcx],0x96b096a
   14004bdfe:	ins    BYTE PTR es:[rdi],dx
   14004bdff:	or     DWORD PTR [rbp+0x9],ebp
   14004be02:	outs   dx,BYTE PTR ds:[rsi]
   14004be03:	or     DWORD PTR [rdi+0x9],ebp
   14004be06:	(bad)  
   14004be07:	(bad)  
   14004be08:	(bad)  
   14004be09:	(bad)  
   14004be0a:	(bad)  
   14004be0b:	(bad)  
   14004be0c:	(bad)  
   14004be0d:	(bad)  
   14004be0e:	(bad)  
   14004be0f:	inc    DWORD PTR [rdx]
   14004be11:	add    BYTE PTR [rax],al
   14004be13:	add    BYTE PTR [rax+rax*1+0x904],ah
   14004be1a:	add    BYTE PTR [rax],al
   14004be1c:	add    BYTE PTR [rax],al
   14004be1e:	add    BYTE PTR [rax],al
   14004be20:	adc    BYTE PTR [rax],al
   14004be22:	add    BYTE PTR [rax],al
   14004be24:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004be25:	add    BYTE PTR [rcx+rcx*1],cl
   14004be28:	(bad)  
   14004be29:	add    BYTE PTR [rip+0x4400df09],bh        # 0x184059d38
   14004be2f:	or     DWORD PTR [rcx-0x4cf6b000],esp
   14004be35:	add    BYTE PTR [rax+0x9],bl
   14004be38:	mov    ah,0x0
   14004be3a:	pop    rcx
   14004be3b:	or     DWORD PTR [rbp-0x45f6a600],esi
   14004be41:	add    BYTE PTR [rbx+0x9],bl
   14004be44:	mov    edi,0xc0095c00
   14004be49:	add    BYTE PTR [rbp+0x9],bl
   14004be4c:	leave  
   14004be4d:	add    BYTE PTR [rsi+0x9],bl
   14004be50:	stos   BYTE PTR es:[rdi],al
   14004be51:	add    BYTE PTR [rax+0x9],ah
   14004be54:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004be55:	add    BYTE PTR [rcx+0x9],ah
   14004be58:	fild   DWORD PTR [rax]
   14004be5a:	(bad)  
   14004be5b:	or     esp,ebx
   14004be5d:	add    BYTE PTR [rbx+0x9],ah
	...
   14004be68:	add    BYTE PTR [rax],al
   14004be6a:	add    BYTE PTR [rax],0x1
   14004be6d:	add    BYTE PTR [rax],cl
   14004be6f:	add    BYTE PTR [rip+0x6000100],al        # 0x14604bf75
   14004be75:	add    BYTE PTR [rax+rax*1],al
   14004be78:	add    DWORD PTR [rax],eax
   14004be7a:	or     BYTE PTR [rax],al
   14004be7c:	add    al,0x0
   14004be7e:	adc    BYTE PTR [rax],al
   14004be80:	(bad)  
   14004be81:	add    BYTE PTR [rax+rax*1],al
   14004be84:	or     BYTE PTR [rax],al
   14004be86:	add    al,BYTE PTR [rax]
   14004be88:	add    eax,DWORD PTR [rax]
   14004be8a:	and    BYTE PTR [rax],al
   14004be8c:	add    al,BYTE PTR [rax]
   14004be8e:	add    BYTE PTR [rcx],bl
	...
   14004bea5:	add    BYTE PTR [rax],al
   14004bea7:	add    al,ah
   14004bea9:	sti    
   14004beaa:	add    DWORD PTR [rax+0x1],eax
   14004bead:	add    BYTE PTR [rax],al
   14004beaf:	add    BYTE PTR [rax-0x3],al
   14004beb2:	add    DWORD PTR [rax+0x1],eax
   14004beb5:	add    BYTE PTR [rax],al
   14004beb7:	add    BYTE PTR [rax+0x14001fd],ah
   14004bebd:	add    BYTE PTR [rax],al
   14004bebf:	add    al,al
   14004bec1:	(bad)  
   14004bec2:	add    al,BYTE PTR [rax+0x1]
   14004bec5:	add    BYTE PTR [rax],al
   14004bec7:	add    al,al
   14004bec9:	(bad)  
   14004beca:	add    al,BYTE PTR [rax+0x1]
   14004becd:	add    BYTE PTR [rax],al
   14004becf:	add    BYTE PTR [rax],al
   14004bed1:	inc    BYTE PTR [rcx]
   14004bed3:	rex add DWORD PTR [rax],eax
   14004bed6:	add    BYTE PTR [rax],al
   14004bed8:	add    dh,bh
   14004beda:	add    DWORD PTR [rax+0x1],eax
	...
   14004beed:	add    BYTE PTR [rax],al
   14004beef:	add    BYTE PTR [rax+0x14001fd],al
	...
   14004befd:	add    BYTE PTR [rax],al
   14004beff:	add    BYTE PTR [rax+0x1400214],al
   14004bf05:	add    BYTE PTR [rax],al
   14004bf07:	add    al,ah
   14004bf09:	adc    al,0x2
   14004bf0b:	rex add DWORD PTR [rax],eax
	...
   14004bf1e:	add    BYTE PTR [rax],al
   14004bf20:	add    BYTE PTR fs:[rax],al
   14004bf23:	add    BYTE PTR [rcx+0x53],cl
   14004bf26:	rex.XB
   14004bf27:	rex.WB
   14004bf28:	rex.WB add BYTE PTR [r8],al
	...
   14004bf63:	add    BYTE PTR [rax],al
   14004bf65:	sbb    DWORD PTR [rcx],eax
   14004bf67:	add    al,0x1a
   14004bf69:	add    BYTE PTR [rax],al
   14004bf6b:	add    BYTE PTR [rcx],al
	...
   14004bf8d:	add    BYTE PTR [rax],al
   14004bf8f:	add    BYTE PTR [rax],dh
   14004bf91:	add    DWORD PTR [rax],eax
   14004bf93:	add    bh,bh
   14004bf95:	(bad)  
   14004bf96:	(bad)  
   14004bf97:	inc    DWORD PTR [rax]
	...
   14004bfa5:	add    BYTE PTR [rax],al
   14004bfa7:	add    BYTE PTR [rax],ah
   14004bfa9:	mov    edi,0x14004
	...
   14004bfb6:	add    BYTE PTR [rax],al
   14004bfb8:	nop
   14004bfb9:	mov    esi,0x14004
	...
   14004c0be:	add    BYTE PTR [rax],al
   14004c0c0:	rex.WB push r11
   14004c0c2:	rex.XB
   14004c0c3:	rex.WB
   14004c0c4:	rex.WB sub al,0x76
   14004c0c7:	gs jb  0x14004c13d
   14004c0ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x3d
   14004c0d1:	add    BYTE PTR [rax],al
   14004c0d3:	add    BYTE PTR [rax+0x0],al
   14004c0d9:	add    DWORD PTR [rax],eax
   14004c0db:	add    BYTE PTR [rax],al
   14004c0dd:	add    eax,DWORD PTR [rax]
   14004c0df:	add    BYTE PTR [rax],al
   14004c0e1:	and    BYTE PTR [rax],al
   14004c0e3:	add    BYTE PTR [rax+0x20],al
   14004c0e9:	and    DWORD PTR [rax],eax
   14004c0eb:	add    BYTE PTR [rax],al
   14004c0ed:	xor    BYTE PTR [rax],al
   14004c0ef:	add    BYTE PTR [rax-0x40000000],al
   14004c0f5:	add    BYTE PTR [rax],al
   14004c0f7:	add    BYTE PTR [rax],al
   14004c0f9:	add    al,0x0
   14004c0fb:	add    BYTE PTR [rax],al
   14004c0fd:	(bad)  
   14004c0fe:	add    BYTE PTR [rax],al
   14004c100:	add    BYTE PTR [rcx],cl
   14004c102:	add    BYTE PTR [rax],al
   14004c104:	xor    BYTE PTR [rax],al
   14004c107:	add    BYTE PTR [rax+0x30],ah
   14004c10d:	inc    DWORD PTR [rax]
   14004c10f:	add    al,al
   14004c111:	add    BYTE PTR [rax],al
   14004c113:	add    BYTE PTR [rax+0x2],dl
   14004c116:	add    BYTE PTR [rax],al
   14004c118:	jo     0x14004c11d
   14004c11a:	add    BYTE PTR [rax],al
   14004c11c:	xor    BYTE PTR [rip+0x30400000],al        # 0x17044c122
   14004c122:	add    BYTE PTR [rax],al
   14004c124:	movabs al,ds:0xff60000030
   14004c12d:	add    BYTE PTR [rax],al
   14004c12f:	add    BYTE PTR [rdi],al
   14004c131:	add    BYTE PTR [rbx],al
   14004c133:	add    al,BYTE PTR [rax*1+0x2030106]
   14004c13a:	add    al,0x1
   14004c13c:	add    BYTE PTR [rdi],al
   14004c13e:	add    eax,0x1806
	...
   14004c157:	add    al,al
   14004c159:	(bad)  
   14004c15a:	add    al,BYTE PTR [rax+0x1]
   14004c15d:	add    BYTE PTR [rax],al
   14004c15f:	add    BYTE PTR [rax+0x17],ah
   14004c162:	add    al,BYTE PTR [rax+0x1]
   14004c165:	add    BYTE PTR [rax],al
   14004c167:	add    al,al
   14004c169:	adc    eax,0x14002
   14004c16e:	add    BYTE PTR [rax],al
   14004c170:	(bad)  
   14004c171:	sbb    eax,0x14002
   14004c176:	add    BYTE PTR [rax],al
   14004c178:	nop
   14004c179:	(bad)  
   14004c17a:	add    al,BYTE PTR [rax+0x1]
   14004c17d:	add    BYTE PTR [rax],al
   14004c17f:	add    BYTE PTR [rax+0x140022e],ah
   14004c185:	add    BYTE PTR [rax],al
   14004c187:	add    al,dl
   14004c189:	and    eax,DWORD PTR [rdx]
   14004c18b:	rex add DWORD PTR [rax],eax
	...
   14004c19e:	add    BYTE PTR [rax],al
   14004c1a0:	push   rax
   14004c1a1:	cmp    BYTE PTR [rdx],al
   14004c1a3:	rex add DWORD PTR [rax],eax
	...
   14004c1ae:	add    BYTE PTR [rax],al
   14004c1b0:	jo     0x14004c1ea
   14004c1b2:	add    al,BYTE PTR [rax+0x1]
   14004c1b5:	add    BYTE PTR [rax],al
   14004c1b7:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004c1cd:	add    BYTE PTR [rax],al
   14004c1cf:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004c1d3:	add    BYTE PTR [rbx+0x43],dl
   14004c1d6:	push   rbx
   14004c1d7:	push   rbp
	...
   14004c210:	mov    esp,0x4
   14004c215:	sbb    BYTE PTR [rcx],al
   14004c217:	add    ecx,DWORD PTR [rsi]
   14004c219:	(bad)  
   14004c21a:	std    
   14004c21b:	add    BYTE PTR [rbx],al
	...
   14004c23d:	add    BYTE PTR [rax],al
   14004c23f:	add    BYTE PTR [rax],dh
   14004c241:	add    DWORD PTR [rax],eax
   14004c243:	add    bh,bh
   14004c245:	(bad)  
   14004c246:	(bad)  
   14004c247:	inc    DWORD PTR [rax]
	...
   14004c255:	add    BYTE PTR [rax],al
   14004c257:	add    al,dl
   14004c259:	rol    DWORD PTR [rax+rax*2],0x1
	...
   14004c265:	add    BYTE PTR [rax],al
   14004c267:	add    BYTE PTR [rax-0x3f],al
   14004c26a:	add    al,0x40
   14004c26c:	add    DWORD PTR [rax],eax
	...
   14004c36e:	add    BYTE PTR [rax],al
   14004c370:	push   rbx
   14004c371:	rex.XB push r11
   14004c373:	push   rbp
   14004c374:	sub    al,0x6c
   14004c376:	outs   dx,DWORD PTR ds:[rsi]
   14004c377:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004c37a:	gs cmp eax,0x616a
   14004c380:	(bad)  
	...
   14004c395:	add    BYTE PTR [rax],al
   14004c397:	add    al,dl
   14004c399:	cmp    BYTE PTR [rdx],al
   14004c39b:	rex add DWORD PTR [rax],eax
   14004c39e:	add    BYTE PTR [rax],al
   14004c3a0:	cmp    BYTE PTR [rcx],0x2
   14004c3a3:	rex add DWORD PTR [rax],eax
   14004c3a6:	add    BYTE PTR [rax],al
   14004c3a8:	sar    BYTE PTR [rcx],0x2
   14004c3ab:	rex add DWORD PTR [rax],eax
   14004c3ae:	add    BYTE PTR [rax],al
   14004c3b0:	and    BYTE PTR [rdx],bh
   14004c3b2:	add    al,BYTE PTR [rax+0x1]
   14004c3b5:	add    BYTE PTR [rax],al
   14004c3b7:	add    BYTE PTR [rax],ah
   14004c3b9:	cmp    al,BYTE PTR [rdx]
   14004c3bb:	rex add DWORD PTR [rax],eax
   14004c3be:	add    BYTE PTR [rax],al
   14004c3c0:	adc    BYTE PTR [rip+0x14002],bh        # 0x1400603c8
   14004c3c6:	add    BYTE PTR [rax],al
   14004c3c8:	adc    BYTE PTR [rip+0x14002],bh        # 0x1400603d0
	...
   14004c3e6:	add    BYTE PTR [rax],al
   14004c3e8:	adc    BYTE PTR [rdx+0x2],al
   14004c3eb:	rex add DWORD PTR [rax],eax
   14004c3ee:	add    BYTE PTR [rax],al
   14004c3f0:	jo     0x14004c434
   14004c3f2:	add    al,BYTE PTR [rax+0x1]
   14004c3f5:	add    BYTE PTR [rax],al
   14004c3f7:	add    al,dh
   14004c3f9:	rex.X add al,BYTE PTR [rax+0x1]
	...
   14004c40d:	add    BYTE PTR [rax],al
   14004c40f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004c413:	add    BYTE PTR [rax+0x5a],cl
	...
   14004c452:	add    BYTE PTR [rax],al
   14004c454:	add    BYTE PTR [rdi],dl
   14004c456:	add    DWORD PTR [rdx+rbx*1],eax
   14004c459:	add    BYTE PTR [rax],al
   14004c45b:	add    BYTE PTR [rcx],al
	...
   14004c47d:	add    BYTE PTR [rax],al
   14004c47f:	add    BYTE PTR [rax],dh
   14004c481:	add    DWORD PTR [rax],eax
   14004c483:	add    bh,bh
   14004c485:	(bad)  
   14004c486:	(bad)  
   14004c487:	inc    DWORD PTR [rax]
	...
   14004c495:	add    BYTE PTR [rax],al
   14004c497:	add    BYTE PTR [rax],dl
   14004c499:	(bad)  
   14004c49a:	add    al,0x40
   14004c49c:	add    DWORD PTR [rax],eax
	...
   14004c4a6:	add    BYTE PTR [rax],al
   14004c4a8:	add    bl,0x4
   14004c4ab:	rex add DWORD PTR [rax],eax
	...
   14004c5ae:	add    BYTE PTR [rax],al
   14004c5b0:	jle    0x14004c62d
   14004c5b2:	add    BYTE PTR [rax],al
   14004c5b4:	jle    0x14004c633
   14004c5b6:	add    BYTE PTR [rax],al
   14004c5b8:	jle    0x14004c638
   14004c5ba:	add    BYTE PTR [rax],al
   14004c5bc:	jp     0x14004c626
   14004c5be:	push   rsp
   14004c5bf:	push   rdi
   14004c5c0:	add    BYTE PTR [rax],al
   14004c5c2:	add    BYTE PTR [rax],al
   14004c5c4:	jae    0x14004c62e
   14004c5c6:	add    BYTE PTR [rax],al
   14004c5c8:	ja     0x14004c633
   14004c5ca:	outs   dx,BYTE PTR ds:[rsi]
   14004c5cb:	outs   dx,DWORD PTR fs:[rsi]
   14004c5cd:	ja     0x14004c642
   14004c5cf:	sub    eax,0x393439
   14004c5d4:	add    BYTE PTR [rax],al
   14004c5d6:	add    BYTE PTR [rax],al
   14004c5d8:	ja     0x14004c643
   14004c5da:	outs   dx,BYTE PTR ds:[rsi]
   14004c5db:	outs   dx,DWORD PTR fs:[rsi]
   14004c5dd:	ja     0x14004c652
   14004c5df:	sub    eax,0x323339
   14004c5e4:	add    BYTE PTR [rax],al
   14004c5e6:	add    BYTE PTR [rax],al
   14004c5e8:	ja     0x14004c653
   14004c5ea:	outs   dx,BYTE PTR ds:[rsi]
   14004c5eb:	outs   dx,DWORD PTR fs:[rsi]
   14004c5ed:	ja     0x14004c662
   14004c5ef:	sub    eax,0x343738
   14004c5f4:	add    BYTE PTR [rax],al
   14004c5f6:	add    BYTE PTR [rax],al
   14004c5f8:	imul   esp,DWORD PTR [rdx+0x6d],0x3235382d
   14004c5ff:	add    BYTE PTR [rcx+0x62],ch
   14004c602:	ins    DWORD PTR es:[rdi],dx
   14004c603:	sub    eax,0x313538
   14004c608:	imul   esp,DWORD PTR [rdx+0x6d],0x3035382d
   14004c60f:	add    BYTE PTR [rbp+rbp*2+0x62],ch
   14004c613:	sub    eax,0x70637865
	...
   14004c620:	adc    dh,al
   14004c622:	add    al,0x40
   14004c624:	add    DWORD PTR [rax],eax
   14004c626:	add    BYTE PTR [rax],al
   14004c628:	or     dh,al
   14004c62a:	add    al,0x40
   14004c62c:	add    DWORD PTR [rax],eax
   14004c62e:	add    BYTE PTR [rax],al
   14004c630:	add    dh,al
   14004c632:	add    al,0x40
   14004c634:	add    DWORD PTR [rax],eax
   14004c636:	add    BYTE PTR [rax],al
   14004c638:	or     al,bh
   14004c63a:	add    eax,DWORD PTR [rax+0x1]
   14004c63d:	add    BYTE PTR [rax],al
   14004c63f:	add    BYTE PTR [rax+0x14003f7],ah
   14004c645:	add    BYTE PTR [rax],al
   14004c647:	add    BYTE PTR [rax+0x14003f9],bh
   14004c64d:	add    BYTE PTR [rax],al
   14004c64f:	add    al,bh
   14004c651:	(bad)
   14004c654:	add    DWORD PTR [rax],eax
	...
   14004c65e:	add    BYTE PTR [rax],al
   14004c660:	jo     0x14004c65a
   14004c662:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c675:	add    BYTE PTR [rax],al
   14004c677:	add    al,ch
   14004c679:	(bad)
   14004c67c:	add    DWORD PTR [rax],eax
	...
   14004c69e:	add    BYTE PTR [rax],al
   14004c6a0:	fadd   st,st(5)
   14004c6a2:	add    al,0x40
   14004c6a4:	add    DWORD PTR [rax],eax
   14004c6a6:	add    BYTE PTR [rax],al
   14004c6a8:	enter  0x4c5,0x40
   14004c6ac:	add    DWORD PTR [rax],eax
   14004c6ae:	add    BYTE PTR [rax],al
   14004c6b0:	loopne 0x14004c6c0
   14004c6b2:	add    al,0x40
   14004c6b4:	add    DWORD PTR [rax],eax
   14004c6b6:	add    BYTE PTR [rax],al
   14004c6b8:	push   rax
   14004c6b9:	sbb    al,BYTE PTR [rax+rax*2]
   14004c6bc:	add    DWORD PTR [rax],eax
   14004c6be:	add    BYTE PTR [rax],al
   14004c6c0:	add    DWORD PTR [rax],eax
   14004c6c2:	(bad)  
   14004c6c3:	add    BYTE PTR [rdi],cl
   14004c6c5:	add    BYTE PTR [rax+0xf009f00],al
   14004c6cb:	add    BYTE PTR [rax-0x7fff5a00],ah
   14004c6d1:	add    BYTE PTR [rdi-0x7dff5800],ah
   14004c6d7:	add    BYTE PTR [rcx-0x7fff5100],ch
   14004c6dd:	add    BYTE PTR [rax-0x7dff4f00],dh
   14004c6e3:	add    BYTE PTR [rdx-0x7fff4d00],dh
   14004c6e9:	add    BYTE PTR [rax+rax*1+0x8200b4],dh
   14004c6f0:	mov    ch,0x0
   14004c6f2:	mov    ch,0x0
   14004c6f4:	add    BYTE PTR [rax],0xb6
   14004c6f7:	add    BYTE PTR [rsi-0x48ff7e00],dh
   14004c6fd:	add    dh,dl
   14004c6ff:	add    BYTE PTR [rax-0x28ff2900],al
   14004c705:	add    BYTE PTR [rdx-0x9ff2800],al
   14004c70b:	add    BYTE PTR [rax-0x8ff0900],al
   14004c711:	add    BYTE PTR [rdx-0x32ff0800],al
   14004c717:	add    DWORD PTR [rax-0x31fe3200],eax
   14004c71d:	add    DWORD PTR [rdx],edx
   14004c71f:	add    bh,cl
   14004c721:	add    DWORD PTR [rcx-0x45ff7ffe],edi
   14004c727:	add    bh,BYTE PTR [rdx-0x43ffecfe]
   14004c72d:	add    cl,al
   14004c72f:	add    al,BYTE PTR [rax-0x2ffd3700]
   14004c735:	add    al,BYTE PTR [rcx-0x22fd2800]
   14004c73b:	add    al,BYTE PTR [rax-0x6ffc7c00]
   14004c741:	add    eax,DWORD PTR [rax-0x56fc6f00]
   14004c747:	add    eax,DWORD PTR [rdx-0x4ffc5600]
   14004c74d:	add    eax,DWORD PTR [rax-0x36fc4f00]
   14004c753:	add    eax,DWORD PTR [rdx-0x31fc3600]
   14004c759:	add    eax,DWORD PTR [rax+0x40000]
   14004c75f:	add    al,0x5
   14004c761:	add    BYTE PTR [rcx],al
   14004c763:	add    al,0x1
   14004c765:	add    al,0x82
   14004c767:	add    BYTE PTR [rdx],al
   14004c769:	add    al,0xf
   14004c76b:	add    al,0x5
   14004c76d:	add    BYTE PTR [rax],dl
   14004c76f:	add    al,0x31
   14004c771:	add    al,0x82
   14004c773:	add    BYTE PTR [rdx],dh
   14004c775:	add    al,0x4e
   14004c777:	add    al,0x5
   14004c779:	add    BYTE PTR [rdi+0x4],cl
   14004c77c:	rex.WRXB add al,0x82
   14004c77f:	add    BYTE PTR [rax+0x4],dl
   14004c782:	xchg   ecx,eax
   14004c783:	add    al,0x5
   14004c785:	add    BYTE PTR [rax+0x305f205],dh
   14004c78b:	add    BYTE PTR [rsi+rax*1],cl
   14004c78e:	scas   eax,DWORD PTR es:[rdi]
   14004c78f:	(bad)  
   14004c790:	add    al,0x0
   14004c792:	add    DWORD PTR [rsi],ecx
   14004c794:	pop    rbx
   14004c795:	(bad)  
   14004c796:	or     eax,DWORD PTR [rax]
   14004c798:	or     al,0x20
   14004c79a:	mov    rax,cr0
   14004c79d:	add    BYTE PTR [rax],dl
   14004c79f:	and    BYTE PTR [rax],dl
   14004c7a1:	and    BYTE PTR [rcx+0x14201300],al
   14004c7a7:	and    BYTE PTR [rax+0x15201500],al
   14004c7ad:	and    BYTE PTR [rcx+0x16201600],al
   14004c7b3:	and    BYTE PTR [rcx+0x17201700],al
   14004c7b9:	and    BYTE PTR [rax+0x19201800],al
   14004c7bf:	and    BYTE PTR [rdx+0x1b201a00],al
   14004c7c5:	and    BYTE PTR [rax+0x1d201c00],al
   14004c7cb:	and    BYTE PTR [rdx+0x1f201e00],al
   14004c7d1:	and    BYTE PTR [rax+0x21202000],al
   14004c7d7:	and    BYTE PTR [rdx+0x24202200],al
   14004c7dd:	and    BYTE PTR [rax+0x25202500],al
   14004c7e3:	and    BYTE PTR [rcx+0x26202600],al
   14004c7e9:	and    BYTE PTR [rdx+0x27202700],al
   14004c7ef:	and    BYTE PTR [rdx],dl
   14004c7f1:	add    BYTE PTR [rax],dh
   14004c7f3:	and    BYTE PTR [rax],dh
   14004c7f5:	and    BYTE PTR [rdx+0x31203100],al
   14004c7fb:	and    BYTE PTR [rax+0x33203200],al
   14004c801:	and    BYTE PTR [rcx+0x35203500],al
   14004c807:	and    BYTE PTR [rcx+0x3a203900],al
   14004c80d:	and    BYTE PTR [rax+0x3b203b00],al
   14004c813:	and    BYTE PTR [rcx+0x3c203c00],al
   14004c819:	and    BYTE PTR [rax],al
   14004c81b:	add    BYTE PTR [rax+riz*1+0x74],dh
   14004c81f:	and    BYTE PTR [rcx],dl
   14004c821:	add    BYTE PTR [rdi+0x20],bh
   14004c824:	jg     0x14004c846
   14004c826:	add    BYTE PTR [rax],al
   14004c828:	and    DWORD PTR [rax],0x112084
   14004c82e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c82f:	and    BYTE PTR [rax+riz*1+0x21030080],ch
   14004c836:	or     DWORD PTR [rcx],esp
   14004c838:	add    DWORD PTR [rax],0x21202111
   14004c83e:	add    BYTE PTR [rax],0x21
   14004c841:	and    DWORD PTR [rcx],esp
   14004c843:	and    DWORD PTR [rcx+0x26212200],eax
   14004c849:	and    DWORD PTR [rax+0x2b212b00],eax
   14004c84f:	and    DWORD PTR [rcx+0x35213500],eax
   14004c855:	and    DWORD PTR [rax+0x54215300],eax
   14004c85b:	and    DWORD PTR [rcx],edx
   14004c85d:	add    BYTE PTR [rbx+0x21],bl
   14004c860:	pop    rsi
   14004c861:	and    DWORD PTR [rax],eax
   14004c863:	add    BYTE PTR [rax+0x21],ah
   14004c866:	jns    0x14004c889
   14004c868:	add    DWORD PTR [rax],0x21932190
   14004c86e:	(bad)  
   14004c86f:	add    BYTE PTR [rcx+riz*1+0x2195],dl
   14004c876:	xchg   esi,eax
   14004c877:	and    DWORD PTR [rcx-0x57ff7edf],ebx
   14004c87d:	and    DWORD PTR [rax-0x47ffffdf],ebp
   14004c883:	and    DWORD PTR [rcx-0x2fffecdf],edi
   14004c889:	and    ecx,edx
   14004c88b:	and    DWORD PTR [rax],eax
   14004c88d:	add    dl,dl
   14004c88f:	and    edx,edx
   14004c891:	and    DWORD PTR [rcx-0x2cde2d00],eax
   14004c897:	and    DWORD PTR [rax],eax
   14004c899:	add    ah,dl
   14004c89b:	and    esp,edx
   14004c89d:	and    DWORD PTR [rcx-0x2ade2b00],eax
   14004c8a3:	and    DWORD PTR [rax],eax
   14004c8a5:	add    bh,ah
   14004c8a7:	and    edi,esp
   14004c8a9:	and    DWORD PTR [rbx],edx
   14004c8ab:	add    BYTE PTR [rax],al
   14004c8ad:	and    al,BYTE PTR [rax]
   14004c8af:	and    al,BYTE PTR [rcx+0x1220100]
   14004c8b5:	and    al,BYTE PTR [rax]
   14004c8b7:	add    BYTE PTR [rdx],al
   14004c8b9:	and    al,BYTE PTR [rdx]
   14004c8bb:	and    al,BYTE PTR [rcx+0x3220300]
   14004c8c1:	and    al,BYTE PTR [rcx+0x6220400]
   14004c8c7:	and    al,BYTE PTR [rax]
   14004c8c9:	add    BYTE PTR [rdi],al
   14004c8cb:	and    cl,BYTE PTR [rax]
   14004c8cd:	and    al,BYTE PTR [rcx+0xa220900]
   14004c8d3:	and    al,BYTE PTR [rax]
   14004c8d5:	add    BYTE PTR [rbx],cl
   14004c8d7:	and    cl,BYTE PTR [rbx]
   14004c8d9:	and    al,BYTE PTR [rcx+0x15220f00]
   14004c8df:	and    al,BYTE PTR [rcx+0x19221900]
   14004c8e5:	and    al,BYTE PTR [rax]
   14004c8e7:	add    BYTE PTR [rdx],bl
   14004c8e9:	and    bl,BYTE PTR [rdx]
   14004c8eb:	and    al,BYTE PTR [rcx+0x1c221b00]
   14004c8f1:	and    al,BYTE PTR [rax]
   14004c8f3:	add    BYTE PTR [rip+0xffffffff81221e22],bl        # 0xc126e71b
   14004c8f9:	add    BYTE PTR [rdi],bl
   14004c8fb:	and    bl,BYTE PTR [rdi]
   14004c8fd:	and    al,BYTE PTR [rax]
   14004c8ff:	add    BYTE PTR [rax],ah
   14004c901:	and    ah,BYTE PTR [rax]
   14004c903:	and    al,BYTE PTR [rcx+0x2a222300]
   14004c909:	and    al,BYTE PTR [rcx+0x3d222b00]
   14004c90f:	and    al,BYTE PTR [rcx+0x48224500]
   14004c915:	and    al,BYTE PTR [rax]
   14004c917:	add    BYTE PTR [rdx+riz*1+0x4c],cl
   14004c91b:	and    dl,BYTE PTR [rdx]
   14004c91d:	add    BYTE PTR [rdx+0x22],dl
   14004c920:	push   rdx
   14004c921:	and    al,BYTE PTR [rcx+0x61226000]
   14004c927:	and    al,BYTE PTR [rcx+0x65226200]
   14004c92d:	and    al,BYTE PTR [rax]
   14004c92f:	add    BYTE PTR [rsi+0x22],ah
   14004c932:	outs   dx,DWORD PTR ds:[rsi]
   14004c933:	and    al,BYTE PTR [rcx-0x7cdd7e00]
   14004c939:	and    al,BYTE PTR [rcx-0x7add7c00]
   14004c93f:	and    al,BYTE PTR [rax]
   14004c941:	add    BYTE PTR [rsi-0x7edd78de],al
   14004c947:	add    BYTE PTR [rax+0x229722],cl
   14004c94d:	add    BYTE PTR [rcx-0x7edd40de],bl
   14004c953:	add    al,al
   14004c955:	and    al,al
   14004c957:	and    al,BYTE PTR [rax]
   14004c959:	add    BYTE PTR [rax],dl
   14004c95b:	and    edx,DWORD PTR [rax]
   14004c95d:	and    eax,DWORD PTR [rax]
   14004c95f:	add    BYTE PTR [rdx],dl
   14004c961:	and    edx,DWORD PTR [rdx]
   14004c963:	and    eax,DWORD PTR [rcx+0x21231800]
   14004c969:	and    eax,DWORD PTR [rax]
   14004c96b:	add    BYTE PTR [rax],bl
   14004c96d:	and    esp,DWORD PTR [rcx]
   14004c96f:	and    edx,DWORD PTR [rbx]
   14004c971:	add    BYTE PTR [rax+0x24],ah
   14004c974:	jmp    0x140054a9d
   14004c979:	and    eax,0x802500
   14004c97e:	add    DWORD PTR [rip+0x812501],esp        # 0x14085ee85
   14004c984:	add    ah,BYTE PTR [rip+0x822502]        # 0x14086ee8c
   14004c98a:	add    esp,DWORD PTR [rip+0x812503]        # 0x14085ee93
   14004c990:	add    al,0x25
   14004c992:	add    eax,0x6001225
   14004c997:	and    eax,0x822665
   14004c99c:	data16 es data16 add BYTE PTR es:[rax],al
   14004c9a2:	imul   esp,DWORD PTR es:[esi],0x266a0080
   14004c9aa:	push   0x26
   14004c9ac:	(bad)  
   14004c9ad:	add    BYTE PTR [rbx+0x26],ch
   14004c9b0:	ins    BYTE PTR es:[rdi],dx
   14004c9b1:	add    BYTE PTR es:[rax],0x6d
   14004c9b5:	es ins DWORD PTR es:[rdi],dx
   14004c9b7:	add    DWORD PTR es:[rax],0x266e266e
   14004c9be:	add    BYTE PTR [rax],0x6f
   14004c9c1:	outs   dx,DWORD PTR es:[rsi]
   14004c9c3:	adc    BYTE PTR es:[rax],al
   14004c9c6:	jo     0x14004c9ee
   14004c9c8:	jg     0x14004c9f8
   14004c9ca:	add    BYTE PTR [rax],0x80
   14004c9cd:	cs (bad) 
   14004c9cf:	clc    
   14004c9d0:	add    DWORD PTR [rax],0xf8fff862
   14004c9d6:	add    BYTE PTR [rax],al
   14004c9d8:	add    cl,bh
   14004c9da:	sub    eax,0x81fa
   14004c9df:	sti    
   14004c9e0:	(bad)  
   14004c9e1:	inc    BYTE PTR [rax-0x1100ff00]
   14004c9e7:	inc    DWORD PTR [rcx-0x100]
   14004c9ed:	call   QWORD PTR [rax+rax*1]
   14004c9f0:	(bad)  
   14004c9f1:	imul   eax,DWORD PTR [rax+rax*2],0x1
   14004c9f8:	add    al,0x0
   14004c9fa:	add    BYTE PTR [rax],al
   14004c9fc:	add    BYTE PTR [rax],al
   14004c9fe:	add    BYTE PTR [rax],al
   14004ca00:	call   0x14144ce6d
   14004ca05:	add    BYTE PTR [rax],al
   14004ca07:	add    BYTE PTR [rip+0x0],al        # 0x14004ca0d
   14004ca0d:	add    BYTE PTR [rax],al
   14004ca0f:	add    ah,bl
   14004ca11:	push   0x14004
   14004ca16:	add    BYTE PTR [rax],al
   14004ca18:	(bad)  
   14004ca19:	add    BYTE PTR [rax],al
   14004ca1b:	add    BYTE PTR [rax],al
   14004ca1d:	add    BYTE PTR [rax],al
   14004ca1f:	add    BYTE PTR [rax+rbp*2+0x4],bh
   14004ca23:	rex add DWORD PTR [rax],eax
   14004ca26:	add    BYTE PTR [rax],al
   14004ca28:	(bad)  
   14004ca29:	add    BYTE PTR [rax],al
   14004ca2b:	add    BYTE PTR [rax],al
   14004ca2d:	add    BYTE PTR [rax],al
   14004ca2f:	add    al,dh
   14004ca31:	addr32 add al,0x40
   14004ca34:	add    DWORD PTR [rax],eax
   14004ca36:	add    BYTE PTR [rax],al
   14004ca38:	add    al,BYTE PTR [rax]
   14004ca3a:	add    BYTE PTR [rax],al
   14004ca3c:	add    BYTE PTR [rax],al
   14004ca3e:	add    BYTE PTR [rax],al
   14004ca40:	or     al,0x65
   14004ca42:	add    al,0x40
   14004ca44:	add    DWORD PTR [rax],eax
   14004ca46:	add    BYTE PTR [rax],al
   14004ca48:	add    eax,DWORD PTR [rax]
   14004ca4a:	add    BYTE PTR [rax],al
   14004ca4c:	add    BYTE PTR [rax],al
   14004ca4e:	add    BYTE PTR [rax],al
   14004ca50:	int3   
   14004ca51:	es add al,0x40
   14004ca54:	add    DWORD PTR [rax],eax
   14004ca56:	add    BYTE PTR [rax],al
   14004ca58:	(bad)  
   14004ca59:	add    BYTE PTR [rax],al
   14004ca5b:	add    BYTE PTR [rax],al
   14004ca5d:	add    BYTE PTR [rax],al
   14004ca5f:	add    BYTE PTR [rbx+riz*2+0x14004],cl
   14004ca66:	add    BYTE PTR [rax],al
   14004ca68:	add    eax,DWORD PTR [rax]
   14004ca6a:	add    BYTE PTR [rax],al
   14004ca6c:	add    BYTE PTR [rax],al
   14004ca6e:	add    BYTE PTR [rax],al
   14004ca70:	and    BYTE PTR [rbx+0x4],0x40
   14004ca74:	add    DWORD PTR [rax],eax
   14004ca76:	add    BYTE PTR [rax],al
   14004ca78:	adc    BYTE PTR [rax],al
   14004ca7a:	add    BYTE PTR [rax],al
   14004ca7c:	add    BYTE PTR [rax],al
   14004ca7e:	add    BYTE PTR [rax],al
   14004ca80:	cmp    BYTE PTR [rbx+0x4],ah
   14004ca83:	rex add DWORD PTR [rax],eax
   14004ca86:	add    BYTE PTR [rax],al
   14004ca88:	adc    DWORD PTR [rax],eax
   14004ca8a:	add    BYTE PTR [rax],al
   14004ca8c:	add    BYTE PTR [rax],al
   14004ca8e:	add    BYTE PTR [rax],al
   14004ca90:	movabs al,ds:0x500000001400462
   14004ca99:	add    BYTE PTR [rax],al
   14004ca9b:	add    BYTE PTR [rax],al
   14004ca9d:	add    BYTE PTR [rax],al
   14004ca9f:	add    BYTE PTR [rax+0x61],ch
   14004caa2:	add    al,0x40
   14004caa4:	add    DWORD PTR [rax],eax
   14004caa6:	add    BYTE PTR [rax],al
   14004caa8:	(bad)  
   14004caa9:	add    BYTE PTR [rax],al
   14004caab:	add    BYTE PTR [rax],al
   14004caad:	add    BYTE PTR [rax],al
   14004caaf:	add    BYTE PTR [rax],cl
   14004cab1:	(bad)  
   14004cab2:	add    al,0x40
   14004cab4:	add    DWORD PTR [rax],eax
   14004cab6:	add    BYTE PTR [rax],al
   14004cab8:	(bad)  
   14004cab9:	add    BYTE PTR [rax],al
   14004cabb:	add    BYTE PTR [rax],al
   14004cabd:	add    BYTE PTR [rax],al
   14004cabf:	add    ah,dh
   14004cac1:	(bad)  
   14004cac2:	add    al,0x40
   14004cac4:	add    DWORD PTR [rax],eax
   14004cac6:	add    BYTE PTR [rax],al
   14004cac8:	add    eax,0x0
   14004cacd:	add    BYTE PTR [rax],al
   14004cacf:	add    ah,al
   14004cad1:	(bad)
   14004cad4:	add    DWORD PTR [rax],eax
   14004cad6:	add    BYTE PTR [rax],al
   14004cad8:	(bad)  
   14004cad9:	add    BYTE PTR [rax],al
   14004cadb:	add    BYTE PTR [rax],al
   14004cadd:	add    BYTE PTR [rax],al
   14004cadf:	add    BYTE PTR [rax+riz*2+0x4],cl
   14004cae3:	rex add DWORD PTR [rax],eax
   14004cae6:	add    BYTE PTR [rax],al
   14004cae8:	(bad)  
   14004cae9:	add    BYTE PTR [rax],al
   14004caeb:	add    BYTE PTR [rax],al
   14004caed:	add    BYTE PTR [rax],al
   14004caef:	add    BYTE PTR [rax+0x60],al
   14004caf2:	add    al,0x40
   14004caf4:	add    DWORD PTR [rax],eax
   14004caf6:	add    BYTE PTR [rax],al
   14004caf8:	(bad)  
   14004caf9:	add    BYTE PTR [rax],al
   14004cafb:	add    BYTE PTR [rax],al
   14004cafd:	add    BYTE PTR [rax],al
   14004caff:	add    BYTE PTR [rax],ch
   14004cb01:	(bad)  
   14004cb02:	add    al,0x40
   14004cb04:	add    DWORD PTR [rax],eax
   14004cb06:	add    BYTE PTR [rax],al
   14004cb08:	(bad)  
   14004cb09:	add    BYTE PTR [rax],al
   14004cb0b:	add    BYTE PTR [rax],al
   14004cb0d:	add    BYTE PTR [rax],al
   14004cb0f:	add    BYTE PTR [rax],bl
   14004cb11:	fs add al,0x40
   14004cb14:	add    DWORD PTR [rax],eax
   14004cb16:	add    BYTE PTR [rax],al
   14004cb18:	add    eax,0x0
   14004cb1d:	add    BYTE PTR [rax],al
   14004cb1f:	add    BYTE PTR [rdi+rbx*2+0x14004],bh
   14004cb26:	add    BYTE PTR [rax],al
   14004cb28:	or     eax,DWORD PTR [rax]
   14004cb2a:	add    BYTE PTR [rax],al
   14004cb2c:	add    BYTE PTR [rax],al
   14004cb2e:	add    BYTE PTR [rax],al
   14004cb30:	test   BYTE PTR [rdi+0x4],bl
   14004cb33:	rex add DWORD PTR [rax],eax
   14004cb36:	add    BYTE PTR [rax],al
   14004cb38:	or     BYTE PTR [rax],al
   14004cb3a:	add    BYTE PTR [rax],al
   14004cb3c:	add    BYTE PTR [rax],al
   14004cb3e:	add    BYTE PTR [rax],al
   14004cb40:	push   rsp
   14004cb41:	xor    DWORD PTR [rax+rax*2],eax
   14004cb44:	add    DWORD PTR [rax],eax
   14004cb46:	add    BYTE PTR [rax],al
   14004cb48:	add    eax,0x0
   14004cb4d:	add    BYTE PTR [rax],al
   14004cb4f:	add    BYTE PTR [rbp+rax*8+0x14004],bh
   14004cb56:	add    BYTE PTR [rax],al
   14004cb58:	adc    al,BYTE PTR [rax]
   14004cb5a:	add    BYTE PTR [rax],al
   14004cb5c:	add    BYTE PTR [rax],al
   14004cb5e:	add    BYTE PTR [rax],al
   14004cb60:	test   BYTE PTR [rsi+0x4],bl
   14004cb63:	rex add DWORD PTR [rax],eax
   14004cb66:	add    BYTE PTR [rax],al
   14004cb68:	adc    eax,DWORD PTR [rax]
	...
   14004cb76:	add    BYTE PTR [rax],al
   14004cb78:	add    DWORD PTR [rax],eax
   14004cb7a:	add    BYTE PTR [rax],al
   14004cb7c:	add    BYTE PTR [rax],al
   14004cb7e:	add    BYTE PTR [rax],al
   14004cb80:	or     eax,DWORD PTR [rax]
	...
   14004cb96:	add    BYTE PTR [rax],al
   14004cb98:	rcl    BYTE PTR [rdi+0x2],1
   14004cb9b:	rex add DWORD PTR [rax],eax
   14004cb9e:	add    BYTE PTR [rax],al
   14004cba0:	add    BYTE PTR [rdx+rax*1+0x40],al
   14004cba4:	add    DWORD PTR [rax],eax
	...
   14004cbae:	add    BYTE PTR [rax],al
   14004cbb0:	xor    BYTE PTR [rdx+rax*1+0x40],dl
   14004cbb4:	add    DWORD PTR [rax],eax
   14004cbb6:	add    BYTE PTR [rax],al
   14004cbb8:	xor    BYTE PTR [rdx+rax*1+0x40],dl
   14004cbbc:	add    DWORD PTR [rax],eax
   14004cbbe:	add    BYTE PTR [rax],al
   14004cbc0:	lock add r8b,BYTE PTR [rax+0x1]
   14004cbc5:	add    BYTE PTR [rax],al
   14004cbc7:	add    al,dh
   14004cbc9:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004cbed:	add    BYTE PTR [rax],al
   14004cbef:	add    BYTE PTR [rax+0x44],ah
   14004cbf2:	add    al,BYTE PTR [rax+0x1]
   14004cbf5:	add    BYTE PTR [rax],al
   14004cbf7:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004cc0d:	add    BYTE PTR [rax],al
   14004cc0f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004cc13:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004cc17:	rex.XB push r11
   14004cc19:	sub    eax,0x31
	...
   14004cc52:	add    BYTE PTR [rax],al
   14004cc54:	add    BYTE PTR [rbx],cl
   14004cc56:	add    DWORD PTR [rbx],eax
   14004cc58:	(bad)  
   14004cc59:	add    BYTE PTR [rax],al
   14004cc5b:	add    BYTE PTR [rcx],al
	...
   14004cc7d:	add    BYTE PTR [rax],al
   14004cc7f:	add    BYTE PTR [rax],dh
   14004cc81:	add    DWORD PTR [rax],eax
   14004cc83:	add    bh,bh
   14004cc85:	(bad)  
   14004cc86:	(bad)  
   14004cc87:	inc    DWORD PTR [rax]
	...
   14004cc95:	add    BYTE PTR [rax],al
   14004cc97:	add    BYTE PTR [rax],dl
   14004cc99:	int3   
   14004cc9a:	add    al,0x40
   14004cc9c:	add    DWORD PTR [rax],eax
	...
   14004cca6:	add    BYTE PTR [rax],al
   14004cca8:	or     bl,0x4
   14004ccab:	rex add DWORD PTR [rax],eax
	...
   14004cdae:	add    BYTE PTR [rax],al
   14004cdb0:	or     al,0x0
	...
   14004cdc6:	add    BYTE PTR [rax],al
   14004cdc8:	loopne 0x14004ce21
   14004cdca:	add    al,BYTE PTR [rax+0x1]
   14004cdcd:	add    BYTE PTR [rax],al
   14004cdcf:	add    BYTE PTR [rax],al
   14004cdd1:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004cddd:	add    BYTE PTR [rax],al
   14004cddf:	add    BYTE PTR [rax],dh
   14004cde1:	push   rsp
   14004cde2:	add    al,BYTE PTR [rax+0x1]
   14004cde5:	add    BYTE PTR [rax],al
   14004cde7:	add    BYTE PTR [rax],dh
   14004cde9:	push   rsp
   14004cdea:	add    al,BYTE PTR [rax+0x1]
   14004cded:	add    BYTE PTR [rax],al
   14004cdef:	add    al,dh
   14004cdf1:	add    r8b,BYTE PTR [rax+0x1]
   14004cdf5:	add    BYTE PTR [rax],al
   14004cdf7:	add    al,dh
   14004cdf9:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004ce1d:	add    BYTE PTR [rax],al
   14004ce1f:	add    BYTE PTR [rax+0x44],ah
   14004ce22:	add    al,BYTE PTR [rax+0x1]
   14004ce25:	add    BYTE PTR [rax],al
   14004ce27:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004ce3d:	add    BYTE PTR [rax],al
   14004ce3f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004ce43:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004ce47:	rex.XB push r11
   14004ce49:	sub    eax,0x32
	...
   14004ce82:	add    BYTE PTR [rax],al
   14004ce84:	add    BYTE PTR [rcx+rax*1],cl
   14004ce87:	add    edi,DWORD PTR [rdi]
   14004ce89:	add    BYTE PTR [rax],al
   14004ce8b:	add    BYTE PTR [rcx],al
	...
   14004cead:	add    BYTE PTR [rax],al
   14004ceaf:	add    BYTE PTR [rax],dh
   14004ceb1:	add    DWORD PTR [rax],eax
   14004ceb3:	add    bh,bh
   14004ceb5:	(bad)  
   14004ceb6:	(bad)  
   14004ceb7:	inc    DWORD PTR [rax]
	...
   14004cec5:	add    BYTE PTR [rax],al
   14004cec7:	add    BYTE PTR [rax-0x32],al
   14004ceca:	add    al,0x40
   14004cecc:	add    DWORD PTR [rax],eax
	...
   14004ced6:	add    BYTE PTR [rax],al
   14004ced8:	mov    al,0xcd
   14004ceda:	add    al,0x40
   14004cedc:	add    DWORD PTR [rax],eax
	...
   14004cfde:	add    BYTE PTR [rax],al
   14004cfe0:	or     eax,0x0
	...
   14004cff5:	add    BYTE PTR [rax],al
   14004cff7:	add    al,dh
   14004cff9:	push   rdi
   14004cffa:	add    al,BYTE PTR [rax+0x1]
   14004cffd:	add    BYTE PTR [rax],al
   14004cfff:	add    BYTE PTR [rax],al
   14004d001:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004d00d:	add    BYTE PTR [rax],al
   14004d00f:	add    BYTE PTR [rax],dh
   14004d011:	push   rsp
   14004d012:	add    al,BYTE PTR [rax+0x1]
   14004d015:	add    BYTE PTR [rax],al
   14004d017:	add    BYTE PTR [rax],dh
   14004d019:	push   rsp
   14004d01a:	add    al,BYTE PTR [rax+0x1]
   14004d01d:	add    BYTE PTR [rax],al
   14004d01f:	add    al,dh
   14004d021:	add    r8b,BYTE PTR [rax+0x1]
   14004d025:	add    BYTE PTR [rax],al
   14004d027:	add    al,dh
   14004d029:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004d04d:	add    BYTE PTR [rax],al
   14004d04f:	add    BYTE PTR [rax+0x44],ah
   14004d052:	add    al,BYTE PTR [rax+0x1]
   14004d055:	add    BYTE PTR [rax],al
   14004d057:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004d06d:	add    BYTE PTR [rax],al
   14004d06f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004d073:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004d077:	rex.XB push r11
   14004d079:	sub    eax,0x33
	...
   14004d0b2:	add    BYTE PTR [rax],al
   14004d0b4:	add    BYTE PTR [rip+0x3f0301],cl        # 0x14043d3bb
   14004d0ba:	add    BYTE PTR [rax],al
   14004d0bc:	add    DWORD PTR [rax],eax
	...
   14004d0de:	add    BYTE PTR [rax],al
   14004d0e0:	xor    BYTE PTR [rcx],al
   14004d0e2:	add    BYTE PTR [rax],al
   14004d0e4:	(bad)  
   14004d0e5:	(bad)  
   14004d0e6:	(bad)  
   14004d0e7:	inc    DWORD PTR [rax]
	...
   14004d0f5:	add    BYTE PTR [rax],al
   14004d0f7:	add    BYTE PTR [rax-0x30],dh
   14004d0fa:	add    al,0x40
   14004d0fc:	add    DWORD PTR [rax],eax
	...
   14004d106:	add    BYTE PTR [rax],al
   14004d108:	loopne 0x14004d0d9
   14004d10a:	add    al,0x40
   14004d10c:	add    DWORD PTR [rax],eax
	...
   14004d20e:	add    BYTE PTR [rax],al
   14004d210:	(bad)  
	...
   14004d229:	pop    rax
   14004d22a:	add    al,BYTE PTR [rax+0x1]
   14004d22d:	add    BYTE PTR [rax],al
   14004d22f:	add    BYTE PTR [rax],al
   14004d231:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004d23d:	add    BYTE PTR [rax],al
   14004d23f:	add    BYTE PTR [rax],dh
   14004d241:	push   rsp
   14004d242:	add    al,BYTE PTR [rax+0x1]
   14004d245:	add    BYTE PTR [rax],al
   14004d247:	add    BYTE PTR [rax],dh
   14004d249:	push   rsp
   14004d24a:	add    al,BYTE PTR [rax+0x1]
   14004d24d:	add    BYTE PTR [rax],al
   14004d24f:	add    al,dh
   14004d251:	add    r8b,BYTE PTR [rax+0x1]
   14004d255:	add    BYTE PTR [rax],al
   14004d257:	add    al,dh
   14004d259:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004d27d:	add    BYTE PTR [rax],al
   14004d27f:	add    BYTE PTR [rax+0x44],ah
   14004d282:	add    al,BYTE PTR [rax+0x1]
   14004d285:	add    BYTE PTR [rax],al
   14004d287:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004d29d:	add    BYTE PTR [rax],al
   14004d29f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004d2a3:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004d2a7:	rex.XB push r11
   14004d2a9:	sub    eax,0x34
	...
   14004d2e2:	add    BYTE PTR [rax],al
   14004d2e4:	add    BYTE PTR [rsi],cl
   14004d2e6:	add    DWORD PTR [rbx],eax
   14004d2e8:	(bad)  
   14004d2e9:	add    BYTE PTR [rax],al
   14004d2eb:	add    BYTE PTR [rcx],al
	...
   14004d30d:	add    BYTE PTR [rax],al
   14004d30f:	add    BYTE PTR [rax],dh
   14004d311:	add    DWORD PTR [rax],eax
   14004d313:	add    bh,bh
   14004d315:	(bad)  
   14004d316:	(bad)  
   14004d317:	inc    DWORD PTR [rax]
	...
   14004d325:	add    BYTE PTR [rax],al
   14004d327:	add    BYTE PTR [rax+0x14004d2],ah
	...
   14004d335:	add    BYTE PTR [rax],al
   14004d337:	add    BYTE PTR [rax],dl
   14004d339:	rol    BYTE PTR [rax+rax*2],cl
   14004d33c:	add    DWORD PTR [rax],eax
	...
   14004d43e:	add    BYTE PTR [rax],al
   14004d440:	sldt   WORD PTR [rax]
	...
   14004d457:	add    BYTE PTR [rax],dl
   14004d459:	pop    rax
   14004d45a:	add    al,BYTE PTR [rax+0x1]
   14004d45d:	add    BYTE PTR [rax],al
   14004d45f:	add    BYTE PTR [rax],al
   14004d461:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004d46d:	add    BYTE PTR [rax],al
   14004d46f:	add    BYTE PTR [rax],dh
   14004d471:	push   rsp
   14004d472:	add    al,BYTE PTR [rax+0x1]
   14004d475:	add    BYTE PTR [rax],al
   14004d477:	add    BYTE PTR [rax],dh
   14004d479:	push   rsp
   14004d47a:	add    al,BYTE PTR [rax+0x1]
   14004d47d:	add    BYTE PTR [rax],al
   14004d47f:	add    al,dh
   14004d481:	add    r8b,BYTE PTR [rax+0x1]
   14004d485:	add    BYTE PTR [rax],al
   14004d487:	add    al,dh
   14004d489:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004d4ad:	add    BYTE PTR [rax],al
   14004d4af:	add    BYTE PTR [rax+0x44],ah
   14004d4b2:	add    al,BYTE PTR [rax+0x1]
   14004d4b5:	add    BYTE PTR [rax],al
   14004d4b7:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004d4cd:	add    BYTE PTR [rax],al
   14004d4cf:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004d4d3:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004d4d7:	rex.XB push r11
   14004d4d9:	sub    eax,0x35
	...
   14004d512:	add    BYTE PTR [rax],al
   14004d514:	add    BYTE PTR [rdi],cl
   14004d516:	add    DWORD PTR [rbx],eax
   14004d518:	(bad)  
   14004d519:	add    BYTE PTR [rax],al
   14004d51b:	add    BYTE PTR [rcx],al
	...
   14004d53d:	add    BYTE PTR [rax],al
   14004d53f:	add    BYTE PTR [rax],dh
   14004d541:	add    DWORD PTR [rax],eax
   14004d543:	add    bh,bh
   14004d545:	(bad)  
   14004d546:	(bad)  
   14004d547:	inc    DWORD PTR [rax]
	...
   14004d555:	add    BYTE PTR [rax],al
   14004d557:	add    al,dl
   14004d559:	(bad)  
   14004d55a:	add    al,0x40
   14004d55c:	add    DWORD PTR [rax],eax
	...
   14004d566:	add    BYTE PTR [rax],al
   14004d568:	rex (bad) 
   14004d56a:	add    al,0x40
   14004d56c:	add    DWORD PTR [rax],eax
	...
   14004d66e:	add    BYTE PTR [rax],al
   14004d670:	adc    BYTE PTR [rax],al
	...
   14004d686:	add    BYTE PTR [rax],al
   14004d688:	and    BYTE PTR [rax+0x2],bl
   14004d68b:	rex add DWORD PTR [rax],eax
   14004d68e:	add    BYTE PTR [rax],al
   14004d690:	add    BYTE PTR [rdx+rax*1+0x40],al
   14004d694:	add    DWORD PTR [rax],eax
	...
   14004d69e:	add    BYTE PTR [rax],al
   14004d6a0:	xor    BYTE PTR [rdx+rax*1+0x40],dl
   14004d6a4:	add    DWORD PTR [rax],eax
   14004d6a6:	add    BYTE PTR [rax],al
   14004d6a8:	xor    BYTE PTR [rdx+rax*1+0x40],dl
   14004d6ac:	add    DWORD PTR [rax],eax
   14004d6ae:	add    BYTE PTR [rax],al
   14004d6b0:	lock add r8b,BYTE PTR [rax+0x1]
   14004d6b5:	add    BYTE PTR [rax],al
   14004d6b7:	add    al,dh
   14004d6b9:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004d6dd:	add    BYTE PTR [rax],al
   14004d6df:	add    BYTE PTR [rax+0x44],ah
   14004d6e2:	add    al,BYTE PTR [rax+0x1]
   14004d6e5:	add    BYTE PTR [rax],al
   14004d6e7:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004d6fd:	add    BYTE PTR [rax],al
   14004d6ff:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004d703:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004d707:	rex.XB push r11
   14004d709:	sub    eax,0x36
	...
   14004d742:	add    BYTE PTR [rax],al
   14004d744:	add    BYTE PTR [rax],dl
   14004d746:	add    DWORD PTR [rbx],eax
   14004d748:	(bad)  
   14004d749:	add    BYTE PTR [rax],al
   14004d74b:	add    BYTE PTR [rcx],al
	...
   14004d76d:	add    BYTE PTR [rax],al
   14004d76f:	add    BYTE PTR [rax],dh
   14004d771:	add    DWORD PTR [rax],eax
   14004d773:	add    bh,bh
   14004d775:	(bad)  
   14004d776:	(bad)  
   14004d777:	inc    DWORD PTR [rax]
	...
   14004d789:	xlat   BYTE PTR ds:[rbx]
   14004d78a:	add    al,0x40
   14004d78c:	add    DWORD PTR [rax],eax
	...
   14004d796:	add    BYTE PTR [rax],al
   14004d798:	jo     0x14004d770
   14004d79a:	add    al,0x40
   14004d79c:	add    DWORD PTR [rax],eax
	...
   14004d89e:	add    BYTE PTR [rax],al
   14004d8a0:	adc    DWORD PTR [rax],eax
	...
   14004d8b6:	add    BYTE PTR [rax],al
   14004d8b8:	xor    BYTE PTR [rax+0x2],bl
   14004d8bb:	rex add DWORD PTR [rax],eax
   14004d8be:	add    BYTE PTR [rax],al
   14004d8c0:	add    BYTE PTR [rdx+rax*1+0x40],al
   14004d8c4:	add    DWORD PTR [rax],eax
	...
   14004d8ce:	add    BYTE PTR [rax],al
   14004d8d0:	xor    BYTE PTR [rdx+rax*1+0x40],dl
   14004d8d4:	add    DWORD PTR [rax],eax
   14004d8d6:	add    BYTE PTR [rax],al
   14004d8d8:	xor    BYTE PTR [rdx+rax*1+0x40],dl
   14004d8dc:	add    DWORD PTR [rax],eax
   14004d8de:	add    BYTE PTR [rax],al
   14004d8e0:	lock add r8b,BYTE PTR [rax+0x1]
   14004d8e5:	add    BYTE PTR [rax],al
   14004d8e7:	add    al,dh
   14004d8e9:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004d90d:	add    BYTE PTR [rax],al
   14004d90f:	add    BYTE PTR [rax+0x44],ah
   14004d912:	add    al,BYTE PTR [rax+0x1]
   14004d915:	add    BYTE PTR [rax],al
   14004d917:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004d92d:	add    BYTE PTR [rax],al
   14004d92f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004d933:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004d937:	rex.XB push r11
   14004d939:	sub    eax,0x38
	...
   14004d972:	add    BYTE PTR [rax],al
   14004d974:	add    BYTE PTR [rcx],dl
   14004d976:	add    DWORD PTR [rbx],eax
   14004d978:	(bad)  
   14004d979:	add    BYTE PTR [rax],al
   14004d97b:	add    BYTE PTR [rcx],al
	...
   14004d99d:	add    BYTE PTR [rax],al
   14004d99f:	add    BYTE PTR [rax],dh
   14004d9a1:	add    DWORD PTR [rax],eax
   14004d9a3:	add    bh,bh
   14004d9a5:	(bad)  
   14004d9a6:	(bad)  
   14004d9a7:	inc    DWORD PTR [rax]
	...
   14004d9b5:	add    BYTE PTR [rax],al
   14004d9b7:	add    BYTE PTR [rax],dh
   14004d9b9:	fld    DWORD PTR [rax+rax*2]
   14004d9bc:	add    DWORD PTR [rax],eax
	...
   14004d9c6:	add    BYTE PTR [rax],al
   14004d9c8:	movabs al,ds:0x14004d8
	...
   14004dacd:	add    BYTE PTR [rax],al
   14004dacf:	add    BYTE PTR [rdx],dl
	...
   14004dae5:	add    BYTE PTR [rax],al
   14004dae7:	add    BYTE PTR [rax+0x58],al
   14004daea:	add    al,BYTE PTR [rax+0x1]
   14004daed:	add    BYTE PTR [rax],al
   14004daef:	add    BYTE PTR [rax],al
   14004daf1:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004dafd:	add    BYTE PTR [rax],al
   14004daff:	add    BYTE PTR [rax],dh
   14004db01:	push   rsp
   14004db02:	add    al,BYTE PTR [rax+0x1]
   14004db05:	add    BYTE PTR [rax],al
   14004db07:	add    BYTE PTR [rax],dh
   14004db09:	push   rsp
   14004db0a:	add    al,BYTE PTR [rax+0x1]
   14004db0d:	add    BYTE PTR [rax],al
   14004db0f:	add    al,dh
   14004db11:	add    r8b,BYTE PTR [rax+0x1]
   14004db15:	add    BYTE PTR [rax],al
   14004db17:	add    al,dh
   14004db19:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004db3d:	add    BYTE PTR [rax],al
   14004db3f:	add    BYTE PTR [rax+0x44],ah
   14004db42:	add    al,BYTE PTR [rax+0x1]
   14004db45:	add    BYTE PTR [rax],al
   14004db47:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004db5d:	add    BYTE PTR [rax],al
   14004db5f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004db63:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004db67:	rex.XB push r11
   14004db69:	sub    eax,0x3131
	...
   14004dba2:	add    BYTE PTR [rax],al
   14004dba4:	add    BYTE PTR [rdx],dl
   14004dba6:	add    DWORD PTR [rbx],eax
   14004dba8:	(bad)  
   14004dba9:	add    BYTE PTR [rax],al
   14004dbab:	add    BYTE PTR [rcx],al
	...
   14004dbcd:	add    BYTE PTR [rax],al
   14004dbcf:	add    BYTE PTR [rax],dh
   14004dbd1:	add    DWORD PTR [rax],eax
   14004dbd3:	add    bh,bh
   14004dbd5:	(bad)  
   14004dbd6:	(bad)  
   14004dbd7:	inc    DWORD PTR [rax]
	...
   14004dbe5:	add    BYTE PTR [rax],al
   14004dbe7:	add    BYTE PTR [rax-0x25],ah
   14004dbea:	add    al,0x40
   14004dbec:	add    DWORD PTR [rax],eax
	...
   14004dbf6:	add    BYTE PTR [rax],al
   14004dbf8:	rcr    dl,1
   14004dbfa:	add    al,0x40
   14004dbfc:	add    DWORD PTR [rax],eax
	...
   14004dcfe:	add    BYTE PTR [rax],al
   14004dd00:	adc    eax,DWORD PTR [rax]
	...
   14004dd16:	add    BYTE PTR [rax],al
   14004dd18:	push   rax
   14004dd19:	pop    rax
   14004dd1a:	add    al,BYTE PTR [rax+0x1]
   14004dd1d:	add    BYTE PTR [rax],al
   14004dd1f:	add    BYTE PTR [rax],al
   14004dd21:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004dd2d:	add    BYTE PTR [rax],al
   14004dd2f:	add    BYTE PTR [rax],dh
   14004dd31:	push   rsp
   14004dd32:	add    al,BYTE PTR [rax+0x1]
   14004dd35:	add    BYTE PTR [rax],al
   14004dd37:	add    BYTE PTR [rax],dh
   14004dd39:	push   rsp
   14004dd3a:	add    al,BYTE PTR [rax+0x1]
   14004dd3d:	add    BYTE PTR [rax],al
   14004dd3f:	add    al,dh
   14004dd41:	add    r8b,BYTE PTR [rax+0x1]
   14004dd45:	add    BYTE PTR [rax],al
   14004dd47:	add    al,dh
   14004dd49:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004dd6d:	add    BYTE PTR [rax],al
   14004dd6f:	add    BYTE PTR [rax+0x44],ah
   14004dd72:	add    al,BYTE PTR [rax+0x1]
   14004dd75:	add    BYTE PTR [rax],al
   14004dd77:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004dd8d:	add    BYTE PTR [rax],al
   14004dd8f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004dd93:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004dd97:	rex.XB push r11
   14004dd99:	sub    eax,0x3631
	...
   14004ddd2:	add    BYTE PTR [rax],al
   14004ddd4:	add    BYTE PTR [rbx],dl
   14004ddd6:	add    DWORD PTR [rbx],eax
   14004ddd8:	(bad)  
   14004ddd9:	add    BYTE PTR [rax],al
   14004dddb:	add    BYTE PTR [rcx],al
	...
   14004ddfd:	add    BYTE PTR [rax],al
   14004ddff:	add    BYTE PTR [rax],dh
   14004de01:	add    DWORD PTR [rax],eax
   14004de03:	add    bh,bh
   14004de05:	(bad)  
   14004de06:	(bad)  
   14004de07:	inc    DWORD PTR [rax]
	...
   14004de15:	add    BYTE PTR [rax],al
   14004de17:	add    BYTE PTR [rax+0x14004dd],dl
	...
   14004de29:	fld    QWORD PTR [rax+rax*2]
   14004de2c:	add    DWORD PTR [rax],eax
	...
   14004df2e:	add    BYTE PTR [rax],al
   14004df30:	adc    al,0x0
	...
   14004df46:	add    BYTE PTR [rax],al
   14004df48:	(bad)  
   14004df49:	pop    rax
   14004df4a:	add    al,BYTE PTR [rax+0x1]
   14004df4d:	add    BYTE PTR [rax],al
   14004df4f:	add    BYTE PTR [rax],al
   14004df51:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004df5d:	add    BYTE PTR [rax],al
   14004df5f:	add    BYTE PTR [rax],dh
   14004df61:	push   rsp
   14004df62:	add    al,BYTE PTR [rax+0x1]
   14004df65:	add    BYTE PTR [rax],al
   14004df67:	add    BYTE PTR [rax],dh
   14004df69:	push   rsp
   14004df6a:	add    al,BYTE PTR [rax+0x1]
   14004df6d:	add    BYTE PTR [rax],al
   14004df6f:	add    al,dh
   14004df71:	add    r8b,BYTE PTR [rax+0x1]
   14004df75:	add    BYTE PTR [rax],al
   14004df77:	add    al,dh
   14004df79:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004df9d:	add    BYTE PTR [rax],al
   14004df9f:	add    BYTE PTR [rax+0x44],ah
   14004dfa2:	add    al,BYTE PTR [rax+0x1]
   14004dfa5:	add    BYTE PTR [rax],al
   14004dfa7:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004dfbd:	add    BYTE PTR [rax],al
   14004dfbf:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004dfc3:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004dfc7:	rex.XB push r11
   14004dfc9:	sub    eax,0x3731
	...
   14004e002:	add    BYTE PTR [rax],al
   14004e004:	add    BYTE PTR [rcx+rax*1],dl
   14004e007:	add    edi,DWORD PTR [rdi]
   14004e009:	add    BYTE PTR [rax],al
   14004e00b:	add    BYTE PTR [rcx],al
	...
   14004e02d:	add    BYTE PTR [rax],al
   14004e02f:	add    BYTE PTR [rax],dh
   14004e031:	add    DWORD PTR [rax],eax
   14004e033:	add    bh,bh
   14004e035:	(bad)  
   14004e036:	(bad)  
   14004e037:	inc    DWORD PTR [rax]
	...
   14004e045:	add    BYTE PTR [rax],al
   14004e047:	add    al,al
   14004e049:	fild   WORD PTR [rax+rax*2]
   14004e04c:	add    DWORD PTR [rax],eax
	...
   14004e056:	add    BYTE PTR [rax],al
   14004e058:	xor    bh,bl
   14004e05a:	add    al,0x40
   14004e05c:	add    DWORD PTR [rax],eax
	...
   14004e15e:	add    BYTE PTR [rax],al
   14004e160:	adc    eax,0x0
	...
   14004e175:	add    BYTE PTR [rax],al
   14004e177:	add    BYTE PTR [rax+0x58],dh
   14004e17a:	add    al,BYTE PTR [rax+0x1]
   14004e17d:	add    BYTE PTR [rax],al
   14004e17f:	add    BYTE PTR [rax],al
   14004e181:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004e18d:	add    BYTE PTR [rax],al
   14004e18f:	add    BYTE PTR [rax],dh
   14004e191:	push   rsp
   14004e192:	add    al,BYTE PTR [rax+0x1]
   14004e195:	add    BYTE PTR [rax],al
   14004e197:	add    BYTE PTR [rax],dh
   14004e199:	push   rsp
   14004e19a:	add    al,BYTE PTR [rax+0x1]
   14004e19d:	add    BYTE PTR [rax],al
   14004e19f:	add    al,dh
   14004e1a1:	add    r8b,BYTE PTR [rax+0x1]
   14004e1a5:	add    BYTE PTR [rax],al
   14004e1a7:	add    al,dh
   14004e1a9:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004e1cd:	add    BYTE PTR [rax],al
   14004e1cf:	add    BYTE PTR [rax+0x44],ah
   14004e1d2:	add    al,BYTE PTR [rax+0x1]
   14004e1d5:	add    BYTE PTR [rax],al
   14004e1d7:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004e1ed:	add    BYTE PTR [rax],al
   14004e1ef:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004e1f3:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004e1f7:	rex.XB push r11
   14004e1f9:	sub    eax,0x3831
	...
   14004e232:	add    BYTE PTR [rax],al
   14004e234:	add    BYTE PTR [rip+0x3f0301],dl        # 0x14043e53b
   14004e23a:	add    BYTE PTR [rax],al
   14004e23c:	add    DWORD PTR [rax],eax
	...
   14004e25e:	add    BYTE PTR [rax],al
   14004e260:	xor    BYTE PTR [rcx],al
   14004e262:	add    BYTE PTR [rax],al
   14004e264:	(bad)  
   14004e265:	(bad)  
   14004e266:	(bad)  
   14004e267:	inc    DWORD PTR [rax]
	...
   14004e275:	add    BYTE PTR [rax],al
   14004e277:	add    al,dh
   14004e279:	loope  0x14004e27f
   14004e27b:	rex add DWORD PTR [rax],eax
	...
   14004e286:	add    BYTE PTR [rax],al
   14004e288:	(bad)  
   14004e289:	loope  0x14004e28f
   14004e28b:	rex add DWORD PTR [rax],eax
	...
   14004e38e:	add    BYTE PTR [rax],al
   14004e390:	(bad)  
	...
   14004e3a5:	add    BYTE PTR [rax],al
   14004e3a7:	add    BYTE PTR [rax+0x1400258],al
   14004e3ad:	add    BYTE PTR [rax],al
   14004e3af:	add    BYTE PTR [rax],al
   14004e3b1:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004e3bd:	add    BYTE PTR [rax],al
   14004e3bf:	add    BYTE PTR [rax],dh
   14004e3c1:	push   rsp
   14004e3c2:	add    al,BYTE PTR [rax+0x1]
   14004e3c5:	add    BYTE PTR [rax],al
   14004e3c7:	add    BYTE PTR [rax],dh
   14004e3c9:	push   rsp
   14004e3ca:	add    al,BYTE PTR [rax+0x1]
   14004e3cd:	add    BYTE PTR [rax],al
   14004e3cf:	add    al,dh
   14004e3d1:	add    r8b,BYTE PTR [rax+0x1]
   14004e3d5:	add    BYTE PTR [rax],al
   14004e3d7:	add    al,dh
   14004e3d9:	add    r8b,BYTE PTR [rax+0x1]
	...
   14004e3fd:	add    BYTE PTR [rax],al
   14004e3ff:	add    BYTE PTR [rax+0x44],ah
   14004e402:	add    al,BYTE PTR [rax+0x1]
   14004e405:	add    BYTE PTR [rax],al
   14004e407:	add    BYTE PTR [rax+0x14002a6],dh
	...
   14004e41d:	add    BYTE PTR [rax],al
   14004e41f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004e423:	add    BYTE PTR [rbp+rcx*2+0x42],cl
   14004e427:	rex.XB push r11
   14004e429:	sub    eax,0x3931
	...
   14004e462:	add    BYTE PTR [rax],al
   14004e464:	add    BYTE PTR [rsi],dl
   14004e466:	add    DWORD PTR [rbx],eax
   14004e468:	(bad)  
   14004e469:	add    BYTE PTR [rax],al
   14004e46b:	add    BYTE PTR [rcx],al
	...
   14004e48d:	add    BYTE PTR [rax],al
   14004e48f:	add    BYTE PTR [rax],dh
   14004e491:	add    DWORD PTR [rax],eax
   14004e493:	add    bh,bh
   14004e495:	(bad)  
   14004e496:	(bad)  
   14004e497:	inc    DWORD PTR [rax]
	...
   14004e4a5:	add    BYTE PTR [rax],al
   14004e4a7:	add    BYTE PTR [rax],ah
   14004e4a9:	in     al,0x4
   14004e4ab:	rex add DWORD PTR [rax],eax
	...
   14004e4b6:	add    BYTE PTR [rax],al
   14004e4b8:	nop
   14004e4b9:	jrcxz  0x14004e4bf
   14004e4bb:	rex add DWORD PTR [rax],eax
	...
   14004e5be:	add    BYTE PTR [rax],al
   14004e5c0:	sldt   WORD PTR [rax]
   14004e5c3:	add    BYTE PTR [rax],al
   14004e5c5:	add    BYTE PTR [rax],al
   14004e5c7:	add    BYTE PTR [rcx],bl
   14004e5c9:	add    DWORD PTR [rcx],edi
   14004e5cb:	add    edi,edi
   14004e5cd:	add    edi,edi
   14004e5cf:	add    edi,edi
   14004e5d1:	add    DWORD PTR [rax],eax
	...
   14004e5fb:	add    DWORD PTR [rax],eax
   14004e5fd:	add    BYTE PTR [rax],al
   14004e5ff:	add    BYTE PTR [rax],al
   14004e601:	add    BYTE PTR [rax],al
   14004e603:	add    BYTE PTR [rdi+rax*1],al
   14004e606:	sbb    eax,0x1a180200
   14004e60b:	sbb    eax,DWORD PTR [rax]
   14004e60d:	add    edx,DWORD PTR [rdi]
   14004e60f:	(bad)  
	...
   14004e620:	add    eax,0xb0a0908
   14004e625:	or     al,0xd
   14004e627:	(bad)  
   14004e628:	movups xmm2,XMMWORD PTR [rcx]
   14004e62b:	adc    dl,BYTE PTR [rbx]
   14004e62d:	adc    al,0x19
   14004e62f:	sbb    al,0x0
   14004e631:	add    BYTE PTR [rip+0x0],dl        # 0x14004e637
   14004e637:	add    BYTE PTR [rax],al
   14004e639:	add    BYTE PTR [rsi],dl
	...
   14004e6df:	add    BYTE PTR [rcx],al
   14004e6e1:	add    BYTE PTR [rax],al
   14004e6e3:	add    BYTE PTR [rdx],ah
   14004e6e5:	add    BYTE PTR [rax],al
   14004e6e7:	add    BYTE PTR [rax+rax*1],ah
   14004e6ea:	add    BYTE PTR [rax],al
   14004e6ec:	(bad)  
   14004e6ed:	add    BYTE PTR [rax],al
   14004e6ef:	add    BYTE PTR [rdi],dh
   14004e6f1:	add    BYTE PTR [rax],al
   14004e6f3:	add    BYTE PTR [rcx],bh
   14004e6f5:	add    BYTE PTR [rax],al
   14004e6f7:	add    BYTE PTR [rax+rax*1],bh
   14004e6fa:	add    BYTE PTR [rax],al
   14004e6fc:	cmp    eax,0x45000000
   14004e701:	add    al,0x0
   14004e703:	add    BYTE PTR [rax+0x4],cl
   14004e706:	add    BYTE PTR [rax],al
   14004e708:	rex.WB add al,0x0
   14004e70b:	add    BYTE PTR [rdx+0x4],cl
   14004e70e:	add    BYTE PTR [rax],al
   14004e710:	rex.WXB add al,0x0
   14004e713:	add    BYTE PTR [rsp+rax*1+0x0],cl
   14004e717:	add    BYTE PTR [rbp+0x4],cl
   14004e71a:	add    BYTE PTR [rax],al
   14004e71c:	rex.WRX add al,0x0
   14004e71f:	add    BYTE PTR [rdi+0x4],cl
   14004e722:	add    BYTE PTR [rax],al
   14004e724:	push   rax
   14004e725:	add    al,0x0
   14004e727:	add    BYTE PTR [rcx+0x4],dl
   14004e72a:	add    BYTE PTR [rax],al
   14004e72c:	push   rdx
   14004e72d:	add    al,0x0
   14004e72f:	add    BYTE PTR [rbp+0x4],dl
   14004e732:	add    BYTE PTR [rax],al
   14004e734:	(bad)  
   14004e735:	add    al,0x0
   14004e737:	add    BYTE PTR [rbp-0x77fffffc],al
   14004e73d:	add    al,0x0
   14004e73f:	add    BYTE PTR [rcx-0x67fffffc],cl
   14004e745:	add    al,0x0
   14004e747:	add    BYTE PTR [rdx-0x64fffffc],bl
   14004e74d:	add    al,0x0
   14004e74f:	add    dh,ah
   14004e751:	add    al,0x0
   14004e753:	add    cl,ch
   14004e755:	add    al,0x0
   14004e757:	add    al,ch
   14004e759:	(bad)  
   14004e75a:	add    BYTE PTR [rax],al
   14004e75c:	in     eax,dx
   14004e75d:	(bad)  
   14004e75e:	add    BYTE PTR [rax],al
   14004e760:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e761:	(bad)  
   14004e762:	add    BYTE PTR [rax],al
   14004e764:	and    DWORD PTR [rcx-0x6fbb0000],ecx
   14004e76a:	add    BYTE PTR [rax],al
   14004e76c:	rex.W nop
   14004e76e:	add    BYTE PTR [rax],al
   14004e770:	xchg   r8,rax
   14004e772:	add    BYTE PTR [rax],al
   14004e774:	rex.WX xchg rax,rax
   14004e776:	add    BYTE PTR [rax],al
   14004e778:	rex.WXB xchg r8,rax
   14004e77a:	add    BYTE PTR [rax],al
   14004e77c:	rex.WR xchg rax,rax
   14004e77e:	add    BYTE PTR [rax],al
   14004e780:	rex.WRX xchg rax,rax
   14004e782:	add    BYTE PTR [rax],al
   14004e784:	rex.WRXB xchg r8,rax
   14004e786:	add    BYTE PTR [rax],al
   14004e788:	push   rax
   14004e789:	nop
   14004e78a:	add    BYTE PTR [rax],al
   14004e78c:	push   rcx
   14004e78d:	nop
   14004e78e:	add    BYTE PTR [rax],al
   14004e790:	push   rdx
   14004e791:	nop
   14004e792:	add    BYTE PTR [rax],al
   14004e794:	push   rbx
   14004e795:	nop
   14004e796:	add    BYTE PTR [rax],al
   14004e798:	push   rsp
   14004e799:	nop
   14004e79a:	add    BYTE PTR [rax],al
   14004e79c:	or     BYTE PTR [rbx-0x6cf60000],dl
   14004e7a2:	add    BYTE PTR [rax],al
   14004e7a4:	or     al,0x93
   14004e7a6:	add    BYTE PTR [rax],al
   14004e7a8:	(bad)  
   14004e7a9:	xchg   ebx,eax
   14004e7aa:	add    BYTE PTR [rax],al
   14004e7ac:	rex.WRXB xchg r11,rax
   14004e7ae:	add    BYTE PTR [rax],al
   14004e7b0:	jo     0x14004e745
   14004e7b2:	add    BYTE PTR [rax],al
   14004e7b4:	jno    0x14004e749
   14004e7b6:	add    BYTE PTR [rax],al
   14004e7b8:	jb     0x14004e74d
   14004e7ba:	add    BYTE PTR [rax],al
   14004e7bc:	jae    0x14004e751
   14004e7be:	add    BYTE PTR [rax],al
   14004e7c0:	je     0x14004e755
   14004e7c2:	add    BYTE PTR [rax],al
   14004e7c4:	(bad)
   14004e7c7:	add    al,cl
   14004e7c9:	pushf  
   14004e7ca:	add    BYTE PTR [rax],al
   14004e7cc:	retf   0x9c
   14004e7cf:	add    bl,cl
   14004e7d1:	pushf  
   14004e7d2:	add    BYTE PTR [rax],al
   14004e7d4:	int3   
   14004e7d5:	pushf  
   14004e7d6:	add    BYTE PTR [rax],al
   14004e7d8:	int    0x9c
   14004e7da:	add    BYTE PTR [rax],al
   14004e7dc:	and    esp,DWORD PTR [rcx+rdx*1]
   14004e7df:	add    BYTE PTR [rax-0x7c],ch
   14004e7e2:	and    al,0x2
   14004e7e4:	imul   eax,DWORD PTR [rsp+0x24846a02],0x24846b02
   14004e7ef:	add    ch,BYTE PTR [rbp-0x7c]
   14004e7f2:	and    al,0x2
   14004e7f4:	outs   dx,BYTE PTR ds:[rsi]
   14004e7f5:	test   BYTE PTR [rdx+rax*1],ah
   14004e7f8:	outs   dx,DWORD PTR ds:[rsi]
   14004e7f9:	test   BYTE PTR [rdx+rax*1],ah
   14004e7fc:	jae    0x14004e782
   14004e7fe:	and    al,0x2
   14004e800:	je     0x14004e786
   14004e802:	and    al,0x2
   14004e804:	jbe    0x14004e78a
   14004e806:	and    al,0x2
   14004e808:	add    BYTE PTR [rax],al
   14004e80a:	add    BYTE PTR [rax],al
   14004e80c:	add    eax,DWORD PTR [rax]
   14004e80e:	add    BYTE PTR [rax],al
   14004e810:	add    DWORD PTR [rax],eax
   14004e812:	add    BYTE PTR [rax],al
   14004e814:	add    al,BYTE PTR [rax]
   14004e816:	add    BYTE PTR [rax],al
   14004e818:	add    al,0x0
   14004e81a:	add    BYTE PTR [rax],al
   14004e81c:	add    eax,0x6000000
   14004e821:	add    BYTE PTR [rax],al
   14004e823:	add    BYTE PTR [rdi],al
   14004e825:	add    BYTE PTR [rax],al
   14004e827:	add    BYTE PTR [rax],cl
	...
   14004e835:	add    DWORD PTR [rcx],eax
   14004e837:	add    BYTE PTR [rcx],al
   14004e839:	add    DWORD PTR [rdx],eax
   14004e83b:	add    DWORD PTR [rcx],eax
   14004e83d:	add    DWORD PTR [rcx],eax
   14004e83f:	add    DWORD PTR [rcx],eax
   14004e841:	add    DWORD PTR [rcx],eax
   14004e843:	add    DWORD PTR [rcx],eax
   14004e845:	add    BYTE PTR [rcx],al
   14004e847:	add    DWORD PTR [rcx],eax
   14004e849:	add    BYTE PTR [rax],al
   14004e84b:	add    BYTE PTR [rax],al
   14004e84d:	add    DWORD PTR [rcx],eax
   14004e84f:	add    DWORD PTR [rcx],eax
   14004e851:	add    BYTE PTR [rcx],al
   14004e853:	add    DWORD PTR [rcx],eax
   14004e855:	add    DWORD PTR [rcx],eax
   14004e857:	add    DWORD PTR [rcx],eax
   14004e859:	add    DWORD PTR [rcx],eax
   14004e85b:	add    DWORD PTR [rcx],eax
   14004e85d:	add    DWORD PTR [rcx],eax
   14004e85f:	add    DWORD PTR [rcx],eax
   14004e861:	add    DWORD PTR [rcx],eax
   14004e863:	add    DWORD PTR [rcx],eax
   14004e865:	add    DWORD PTR [rcx],eax
   14004e867:	add    DWORD PTR [rcx],eax
   14004e869:	add    DWORD PTR [rcx],eax
   14004e86b:	add    DWORD PTR [rcx],eax
   14004e86d:	add    DWORD PTR [rcx],eax
   14004e86f:	add    BYTE PTR [rcx],al
   14004e871:	add    DWORD PTR [rcx],eax
   14004e873:	add    DWORD PTR [rcx],eax
   14004e875:	add    DWORD PTR [rcx],eax
   14004e877:	add    DWORD PTR [rcx],eax
   14004e879:	add    DWORD PTR [rax],eax
   14004e87b:	add    BYTE PTR [rax],al
   14004e87d:	add    BYTE PTR [rax],al
   14004e87f:	add    bh,bh
   14004e881:	(bad)  
   14004e882:	(bad)  
   14004e883:	(bad)  
   14004e884:	call   QWORD PTR [rax]
   14004e886:	(bad)  
   14004e887:	(bad)  
   14004e888:	(bad)  
   14004e889:	inc    DWORD PTR [rax]
   14004e88b:	(bad)  
   14004e88c:	(bad)  
   14004e88d:	(bad)  
   14004e88e:	(bad)  
   14004e88f:	inc    DWORD PTR [rbx]
   14004e891:	or     BYTE PTR [rbx],al
   14004e893:	(bad)  
   14004e894:	(bad)  
   14004e895:	inc    DWORD PTR [rsi+rax*1]
   14004e898:	add    al,0xff
   14004e89a:	(bad)  
   14004e89b:	(bad)  
   14004e89c:	(bad)  
   14004e89d:	inc    DWORD PTR [rcx]
   14004e89f:	add    al,BYTE PTR [rdi+rdi*8]
   14004e8a2:	(bad)  
   14004e8a3:	(bad)  
   14004e8a4:	inc    DWORD PTR [rdi]
   14004e8a6:	add    eax,0xffffffff
   14004e8ab:	(bad)  
   14004e8ac:	(bad)  
   14004e8ad:	(bad)  
   14004e8ae:	(bad)  
   14004e8af:	(bad)  
   14004e8b0:	(bad)  
   14004e8b1:	(bad)  
   14004e8b2:	(bad)  
   14004e8b3:	(bad)  
   14004e8b4:	(bad)  
   14004e8b5:	(bad)  
   14004e8b6:	(bad)  
   14004e8b7:	(bad)  
   14004e8b8:	(bad)  
   14004e8b9:	(bad)  
   14004e8ba:	(bad)  
   14004e8bb:	(bad)  
   14004e8bc:	(bad)  
   14004e8bd:	(bad)  
   14004e8be:	(bad)  
   14004e8bf:	(bad)  
   14004e8c0:	(bad)  
   14004e8c1:	(bad)  
   14004e8c2:	(bad)  
   14004e8c3:	(bad)  
   14004e8c4:	(bad)  
   14004e8c5:	(bad)  
   14004e8c6:	(bad)  
   14004e8c7:	(bad)  
   14004e8c8:	(bad)  
   14004e8c9:	inc    DWORD PTR [rax]
   14004e8cb:	add    BYTE PTR [rax],al
   14004e8cd:	add    BYTE PTR [rax],al
   14004e8cf:	add    bh,bh
   14004e8d1:	(bad)  
   14004e8d2:	(bad)  
   14004e8d3:	(bad)  
   14004e8d4:	call   QWORD PTR [rax]
   14004e8d6:	adc    edi,edi
   14004e8d8:	(bad)  
   14004e8d9:	(bad)  
   14004e8da:	(bad)  
   14004e8db:	(bad)  
   14004e8dc:	(bad)  
   14004e8dd:	(bad)  
   14004e8de:	(bad)  
   14004e8df:	(bad)  
   14004e8e0:	(bad)  
   14004e8e1:	(bad)  
   14004e8e2:	(bad)  
   14004e8e3:	(bad)  
   14004e8e4:	(bad)  
   14004e8e5:	(bad)  
   14004e8e6:	(bad)  
   14004e8e7:	(bad)  
   14004e8e8:	(bad)  
   14004e8e9:	(bad)  
   14004e8ea:	(bad)  
   14004e8eb:	(bad)  
   14004e8ec:	(bad)  
   14004e8ed:	(bad)  
   14004e8ee:	(bad)  
   14004e8ef:	(bad)  
   14004e8f0:	(bad)  
   14004e8f1:	(bad)  
   14004e8f2:	(bad)  
   14004e8f3:	(bad)  
   14004e8f4:	(bad)  
   14004e8f5:	(bad)  
   14004e8f6:	(bad)  
   14004e8f7:	(bad)  
   14004e8f8:	(bad)  
   14004e8f9:	(bad)  
   14004e8fa:	(bad)  
   14004e8fb:	(bad)  
   14004e8fc:	(bad)  
   14004e8fd:	(bad)  
   14004e8fe:	inc    DWORD PTR [rcx]
   14004e900:	inc    DWORD PTR [rdx]
   14004e902:	and    DWORD PTR [rdx],esp
   14004e904:	and    esp,DWORD PTR ds:0xffffffffffff2726
   14004e90b:	(bad)  
   14004e90c:	(bad)  
   14004e90d:	(bad)  
   14004e90e:	(bad)  
   14004e90f:	(bad)  
   14004e910:	(bad)  
   14004e911:	(bad)  
   14004e912:	(bad)  
   14004e913:	(bad)  
   14004e914:	(bad)  
   14004e915:	(bad)  
   14004e916:	(bad)  
   14004e917:	(bad)  
   14004e918:	(bad)  
   14004e919:	inc    DWORD PTR [rax]
   14004e91b:	add    BYTE PTR [rax],al
   14004e91d:	add    BYTE PTR [rax],al
   14004e91f:	add    BYTE PTR [rbx],bl
   14004e921:	sub    BYTE PTR [rdx+0x0],al
   14004e924:	add    BYTE PTR [rax],al
   14004e926:	sbb    ebp,DWORD PTR [rsi]
   14004e928:	add    BYTE PTR [r8],al
   14004e92b:	add    BYTE PTR [rbx],bl
   14004e92d:	rex.RX add BYTE PTR cs:[rax],r8b
   14004e931:	add    BYTE PTR [rbx],bl
   14004e933:	sub    BYTE PTR [rdx+0x0],cl
   14004e936:	add    BYTE PTR [rax],al
   14004e938:	sbb    esp,DWORD PTR [rdx+rax*2]
   14004e93b:	add    BYTE PTR [rax],al
   14004e93d:	add    BYTE PTR [rbx],bl
   14004e93f:	and    al,0x28
   14004e941:	add    BYTE PTR [rax],r8b
   14004e944:	sbb    esp,DWORD PTR [rcx+rax*2]
   14004e947:	add    BYTE PTR [rax],al
   14004e949:	add    BYTE PTR [rbx],bl
   14004e94b:	and    al,0x28
   14004e94d:	rex.XB add BYTE PTR [r8],al
   14004e950:	sbb    ebp,DWORD PTR [rax]
   14004e952:	rex.WB add BYTE PTR [r8],al
   14004e955:	add    BYTE PTR [rax],al
   14004e957:	add    BYTE PTR [rbx],al
   14004e959:	add    eax,DWORD PTR [rbx]
   14004e95b:	add    eax,DWORD PTR [rbx]
   14004e95d:	add    al,0x3
   14004e95f:	add    al,0x3
	...
   14004e96d:	add    BYTE PTR [rax],al
   14004e96f:	add    BYTE PTR [rbx],ah
   14004e971:	and    DWORD PTR [rsi+0x21],edx
   14004e974:	push   rdi
   14004e975:	and    DWORD PTR [rdx],esp
   14004e977:	and    DWORD PTR [rsi],esp
   14004e979:	and    DWORD PTR [rdx+0x25],esi
   14004e97c:	and    DWORD PTR [rip+0x25252523],esp        # 0x1652a0ea5
   14004e982:	(bad)  
   14004e983:	and    eax,0x25632529
   14004e988:	gs and eax,0x25432567
   14004e98e:	cmp    al,0x21
   14004e990:	and    ah,BYTE PTR [rip+0x25262524]        # 0x1652b0eba
   14004e996:	sub    BYTE PTR [rip+0x252b252a],ah        # 0x165300ec6
   14004e99c:	sub    eax,0x31252f25
   14004e9a1:	and    eax,0x25352533
   14004e9a6:	(bad)  
   14004e9a7:	and    eax,0x253b2539
   14004e9ac:	cmp    eax,0x41253f25
   14004e9b1:	and    eax,0x25462544
   14004e9b6:	and    rax,0x254b254a
   14004e9bc:	rex.WR and rax,0x254e254d
   14004e9c2:	rex.WRXB and rax,0x25552552
   14004e9c8:	pop    rax
   14004e9c9:	and    eax,0x255e255b
   14004e9ce:	pop    rdi
   14004e9cf:	and    eax,0x25612560
   14004e9d4:	(bad)  
   14004e9d5:	and    eax,0x25662564
   14004e9da:	push   0x6a256925
   14004e9df:	and    eax,0x256c256b
   14004e9e4:	ins    DWORD PTR es:[rdi],dx
   14004e9e5:	and    eax,0x2573256f
   14004e9ea:	sub    esp,DWORD PTR [rcx]
   14004e9ec:	sub    al,0x21
   14004e9ee:	add    BYTE PTR [rax],al
   14004e9f0:	sbb    esp,DWORD PTR [rcx+rbp*1]
   14004e9f3:	add    BYTE PTR [r8],al
   14004e9f6:	add    BYTE PTR [rax],al
   14004e9f8:	sbb    esp,DWORD PTR [rcx+rbp*1]
   14004e9fb:	add    BYTE PTR [r8],r8b
   14004e9fe:	add    BYTE PTR [rax],al
   14004ea00:	sbb    esp,DWORD PTR [rcx+rbp*1]
   14004ea03:	rex.RXB add BYTE PTR [r8],r8b
   14004ea06:	add    BYTE PTR [rax],al
   14004ea08:	sbb    esp,DWORD PTR [rdx+rbp*1]
   14004ea0b:	rex.W add BYTE PTR [rax],al
   14004ea0e:	add    BYTE PTR [rax],al
   14004ea10:	sbb    esp,DWORD PTR [rbx+rbp*1]
   14004ea13:	rex.WB add BYTE PTR [r8],al
   14004ea16:	add    BYTE PTR [rax],al
   14004ea18:	sbb    esp,DWORD PTR [rbx+rbp*1]
   14004ea1b:	rex.WX add BYTE PTR [rax],al
   14004ea1e:	add    BYTE PTR [rax],al
   14004ea20:	sbb    esp,DWORD PTR [rbx+rbp*1]
   14004ea23:	rex.WXB add BYTE PTR [r8],al
   14004ea26:	add    BYTE PTR [rax],al
   14004ea28:	sbb    esp,DWORD PTR [rbx+rbp*1]
   14004ea2b:	rex.WR add BYTE PTR [rax],r8b
   14004ea2e:	add    BYTE PTR [rax],al
   14004ea30:	sbb    esp,DWORD PTR [rbx+rbp*1]
   14004ea33:	rex.WRB add BYTE PTR [r8],r8b
	...
   14004ea3e:	add    BYTE PTR [rax],al
   14004ea40:	shl    ch,0x4
   14004ea43:	rex add DWORD PTR [rax],eax
   14004ea46:	add    BYTE PTR [rax],al
   14004ea48:	lock jmp 0x140062a52
   14004ea4e:	add    BYTE PTR [rax],al
   14004ea50:	clc    
   14004ea51:	jmp    0x140062a5a
   14004ea56:	add    BYTE PTR [rax],al
   14004ea58:	add    dl,ch
   14004ea5a:	add    al,0x40
   14004ea5c:	add    DWORD PTR [rax],eax
   14004ea5e:	add    BYTE PTR [rax],al
   14004ea60:	or     dl,ch
   14004ea62:	add    al,0x40
   14004ea64:	add    DWORD PTR [rax],eax
   14004ea66:	add    BYTE PTR [rax],al
   14004ea68:	adc    dl,ch
   14004ea6a:	add    al,0x40
   14004ea6c:	add    DWORD PTR [rax],eax
   14004ea6e:	add    BYTE PTR [rax],al
   14004ea70:	sbb    dl,ch
   14004ea72:	add    al,0x40
   14004ea74:	add    DWORD PTR [rax],eax
   14004ea76:	add    BYTE PTR [rax],al
   14004ea78:	and    dl,ch
   14004ea7a:	add    al,0x40
   14004ea7c:	add    DWORD PTR [rax],eax
   14004ea7e:	add    BYTE PTR [rax],al
   14004ea80:	sub    dl,ch
   14004ea82:	add    al,0x40
   14004ea84:	add    DWORD PTR [rax],eax
   14004ea86:	add    BYTE PTR [rax],al
   14004ea88:	xor    dl,ch
   14004ea8a:	add    al,0x40
   14004ea8c:	add    DWORD PTR [rax],eax
   14004ea8e:	add    BYTE PTR [rax],al
   14004ea90:	or     al,BYTE PTR [rax]
	...
   14004eaa6:	add    BYTE PTR [rax],al
   14004eaa8:	nop
   14004eaa9:	mov    DWORD PTR [rdx],eax
   14004eaab:	rex add DWORD PTR [rax],eax
   14004eaae:	add    BYTE PTR [rax],al
   14004eab0:	nop
   14004eab1:	pop    rax
   14004eab2:	add    al,BYTE PTR [rax+0x1]
   14004eab5:	add    BYTE PTR [rax],al
   14004eab7:	add    BYTE PTR [rax],al
   14004eab9:	pop    rcx
   14004eaba:	add    al,BYTE PTR [rax+0x1]
	...
   14004eaed:	add    BYTE PTR [rax],al
   14004eaef:	add    BYTE PTR [rax+0x1400259],dl
   14004eaf5:	add    BYTE PTR [rax],al
   14004eaf7:	add    BYTE PTR [rax],dh
   14004eaf9:	test   DWORD PTR [rdx],eax
   14004eafb:	rex add DWORD PTR [rax],eax
   14004eafe:	add    BYTE PTR [rax],al
   14004eb00:	and    BYTE PTR [rdi+0x14002],al
   14004eb06:	add    BYTE PTR [rax],al
   14004eb08:	lock xchg DWORD PTR [rdx],eax
   14004eb0b:	rex add DWORD PTR [rax],eax
	...
   14004eb1e:	add    BYTE PTR [rax],al
   14004eb20:	add    BYTE PTR fs:[rax],al
   14004eb23:	add    BYTE PTR [rcx+0x53],cl
   14004eb26:	rex.WRXB pop r15
   14004eb28:	xor    dh,BYTE PTR [rax]
   14004eb2a:	xor    dh,BYTE PTR [rdx]
	...
   14004eb60:	out    0x7,al
   14004eb62:	add    BYTE PTR [rax],al
   14004eb64:	add    BYTE PTR [rdx],cl
   14004eb66:	add    DWORD PTR [rbx],eax
   14004eb68:	sbb    al,BYTE PTR [rax]
   14004eb6a:	add    BYTE PTR [rax],al
   14004eb6c:	add    DWORD PTR [rax],eax
	...
   14004eb8e:	add    BYTE PTR [rax],al
   14004eb90:	xor    BYTE PTR [rcx],al
   14004eb92:	add    BYTE PTR [rax],al
   14004eb94:	(bad)  
   14004eb95:	(bad)  
   14004eb96:	(bad)  
   14004eb97:	inc    DWORD PTR [rax]
	...
   14004eba5:	add    BYTE PTR [rax],al
   14004eba7:	add    BYTE PTR [rax],ah
   14004eba9:	jmp    0x14004ebaf
   14004ebab:	rex add DWORD PTR [rax],eax
	...
   14004ebb6:	add    BYTE PTR [rax],al
   14004ebb8:	nop
   14004ebb9:	(bad)  
   14004ebba:	add    al,0x40
   14004ebbc:	add    DWORD PTR [rax],eax
	...
   14004ecbe:	add    BYTE PTR [rax],al
   14004ecc0:	or     al,BYTE PTR [rax]
	...
   14004ecd6:	add    BYTE PTR [rax],al
   14004ecd8:	nop
   14004ecd9:	mov    DWORD PTR [rdx],eax
   14004ecdb:	rex add DWORD PTR [rax],eax
   14004ecde:	add    BYTE PTR [rax],al
   14004ece0:	nop
   14004ece1:	pop    rax
   14004ece2:	add    al,BYTE PTR [rax+0x1]
   14004ece5:	add    BYTE PTR [rax],al
   14004ece7:	add    BYTE PTR [rax],al
   14004ece9:	pop    rcx
   14004ecea:	add    al,BYTE PTR [rax+0x1]
   14004eced:	add    BYTE PTR [rax],al
   14004ecef:	add    al,al
   14004ecf1:	imul   eax,DWORD PTR [rdx],0x140
   14004ecf7:	add    al,al
   14004ecf9:	imul   eax,DWORD PTR [rdx],0x140
   14004ecff:	add    BYTE PTR [rax+0x5e],ah
   14004ed02:	add    al,BYTE PTR [rax+0x1]
   14004ed05:	add    BYTE PTR [rax],al
   14004ed07:	add    BYTE PTR [rax+0x5e],ah
   14004ed0a:	add    al,BYTE PTR [rax+0x1]
	...
   14004ed1d:	add    BYTE PTR [rax],al
   14004ed1f:	add    BYTE PTR [rax+0x1400259],dl
   14004ed25:	add    BYTE PTR [rax],al
   14004ed27:	add    BYTE PTR [rax],dh
   14004ed29:	test   DWORD PTR [rdx],eax
   14004ed2b:	rex add DWORD PTR [rax],eax
   14004ed2e:	add    BYTE PTR [rax],al
   14004ed30:	and    BYTE PTR [rdi+0x14002],al
   14004ed36:	add    BYTE PTR [rax],al
   14004ed38:	lock xchg DWORD PTR [rdx],eax
   14004ed3b:	rex add DWORD PTR [rax],eax
	...
   14004ed4e:	add    BYTE PTR [rax],al
   14004ed50:	add    BYTE PTR fs:[rax],al
   14004ed53:	add    BYTE PTR [rcx+0x53],cl
   14004ed56:	rex.WRXB pop r15
   14004ed58:	xor    dh,BYTE PTR [rax]
   14004ed5a:	xor    dh,BYTE PTR [rdx]
   14004ed5c:	pop    rdi
   14004ed5d:	rex.WX push rax
	...
   14004ed93:	add    BYTE PTR [rax],al
   14004ed95:	or     al,BYTE PTR [rcx]
   14004ed97:	(bad)  
   14004ed98:	sbb    al,BYTE PTR [rax]
   14004ed9a:	add    BYTE PTR [rax],al
   14004ed9c:	add    DWORD PTR [rax],eax
	...
   14004edbe:	add    BYTE PTR [rax],al
   14004edc0:	xor    BYTE PTR [rcx],al
   14004edc2:	add    BYTE PTR [rax],al
   14004edc4:	(bad)  
   14004edc5:	(bad)  
   14004edc6:	(bad)  
   14004edc7:	inc    DWORD PTR [rax]
	...
   14004edd5:	add    BYTE PTR [rax],al
   14004edd7:	add    BYTE PTR [rax-0x13],dl
   14004edda:	add    al,0x40
   14004eddc:	add    DWORD PTR [rax],eax
	...
   14004ede6:	add    BYTE PTR [rax],al
   14004ede8:	shr    ah,0x4
   14004edeb:	rex add DWORD PTR [rax],eax
	...
   14004eeee:	add    BYTE PTR [rax],al
   14004eef0:	or     al,BYTE PTR [rax]
	...
   14004ef06:	add    BYTE PTR [rax],al
   14004ef08:	nop
   14004ef09:	mov    DWORD PTR [rdx],eax
   14004ef0b:	rex add DWORD PTR [rax],eax
   14004ef0e:	add    BYTE PTR [rax],al
   14004ef10:	nop
   14004ef11:	pop    rax
   14004ef12:	add    al,BYTE PTR [rax+0x1]
   14004ef15:	add    BYTE PTR [rax],al
   14004ef17:	add    BYTE PTR [rax],al
   14004ef19:	pop    rcx
   14004ef1a:	add    al,BYTE PTR [rax+0x1]
   14004ef1d:	add    BYTE PTR [rax],al
   14004ef1f:	add    BYTE PTR [rax+0x77],dl
   14004ef22:	add    al,BYTE PTR [rax+0x1]
   14004ef25:	add    BYTE PTR [rax],al
   14004ef27:	add    BYTE PTR [rax+0x77],dl
   14004ef2a:	add    al,BYTE PTR [rax+0x1]
   14004ef2d:	add    BYTE PTR [rax],al
   14004ef2f:	add    BYTE PTR [rax+0x140026f],dl
   14004ef35:	add    BYTE PTR [rax],al
   14004ef37:	add    BYTE PTR [rax+0x140026f],dl
	...
   14004ef4d:	add    BYTE PTR [rax],al
   14004ef4f:	add    BYTE PTR [rax+0x1400259],dl
   14004ef55:	add    BYTE PTR [rax],al
   14004ef57:	add    BYTE PTR [rax],dh
   14004ef59:	test   DWORD PTR [rdx],eax
   14004ef5b:	rex add DWORD PTR [rax],eax
   14004ef5e:	add    BYTE PTR [rax],al
   14004ef60:	and    BYTE PTR [rdi+0x14002],al
   14004ef66:	add    BYTE PTR [rax],al
   14004ef68:	lock xchg DWORD PTR [rdx],eax
   14004ef6b:	rex add DWORD PTR [rax],eax
	...
   14004ef7e:	add    BYTE PTR [rax],al
   14004ef80:	add    BYTE PTR fs:[rax],al
   14004ef83:	add    BYTE PTR [rcx+0x53],cl
   14004ef86:	rex.WRXB pop r15
   14004ef88:	xor    dh,BYTE PTR [rax]
   14004ef8a:	xor    dh,BYTE PTR [rdx]
   14004ef8c:	pop    rdi
   14004ef8d:	rex.WXB push r10
	...
   14004efc3:	add    BYTE PTR [rax],al
   14004efc5:	or     al,BYTE PTR [rcx]
   14004efc7:	add    ebx,DWORD PTR [rdx]
   14004efc9:	add    BYTE PTR [rax],al
   14004efcb:	add    BYTE PTR [rcx],al
	...
   14004efed:	add    BYTE PTR [rax],al
   14004efef:	add    BYTE PTR [rax],dh
   14004eff1:	add    DWORD PTR [rax],eax
   14004eff3:	add    bh,bh
   14004eff5:	(bad)  
   14004eff6:	(bad)  
   14004eff7:	inc    DWORD PTR [rax]
	...
   14004f005:	add    BYTE PTR [rax],al
   14004f007:	add    BYTE PTR [rax+0x14004ef],al
	...
   14004f015:	add    BYTE PTR [rax],al
   14004f017:	add    al,dh
   14004f019:	out    dx,al
   14004f01a:	add    al,0x40
   14004f01c:	add    DWORD PTR [rax],eax
	...
   14004f11e:	add    BYTE PTR [rax],al
   14004f120:	or     al,BYTE PTR [rax]
	...
   14004f136:	add    BYTE PTR [rax],al
   14004f138:	nop
   14004f139:	mov    DWORD PTR [rdx],eax
   14004f13b:	rex add DWORD PTR [rax],eax
   14004f13e:	add    BYTE PTR [rax],al
   14004f140:	nop
   14004f141:	pop    rax
   14004f142:	add    al,BYTE PTR [rax+0x1]
   14004f145:	add    BYTE PTR [rax],al
   14004f147:	add    BYTE PTR [rax],al
   14004f149:	pop    rcx
   14004f14a:	add    al,BYTE PTR [rax+0x1]
   14004f14d:	add    BYTE PTR [rax],al
   14004f14f:	add    BYTE PTR [rax],ah
   14004f151:	add    DWORD PTR [rdx],0x140
   14004f157:	add    BYTE PTR [rax],ah
   14004f159:	add    DWORD PTR [rdx],0x140
   14004f15f:	add    BYTE PTR [rax+0x140027a],dl
   14004f165:	add    BYTE PTR [rax],al
   14004f167:	add    BYTE PTR [rax+0x140027a],dl
	...
   14004f17d:	add    BYTE PTR [rax],al
   14004f17f:	add    BYTE PTR [rax+0x1400259],dl
   14004f185:	add    BYTE PTR [rax],al
   14004f187:	add    BYTE PTR [rax],dh
   14004f189:	test   DWORD PTR [rdx],eax
   14004f18b:	rex add DWORD PTR [rax],eax
   14004f18e:	add    BYTE PTR [rax],al
   14004f190:	and    BYTE PTR [rdi+0x14002],al
   14004f196:	add    BYTE PTR [rax],al
   14004f198:	lock xchg DWORD PTR [rdx],eax
   14004f19b:	rex add DWORD PTR [rax],eax
	...
   14004f1ae:	add    BYTE PTR [rax],al
   14004f1b0:	add    BYTE PTR fs:[rax],al
   14004f1b3:	add    BYTE PTR [rcx+0x53],cl
   14004f1b6:	rex.WRXB pop r15
   14004f1b8:	xor    dh,BYTE PTR [rax]
   14004f1ba:	xor    dh,BYTE PTR [rdx]
   14004f1bc:	pop    rdi
   14004f1bd:	rex.XB
   14004f1be:	rex.WRX add BYTE PTR [rax],r8b
	...
   14004f1f5:	or     al,BYTE PTR [rcx]
   14004f1f7:	or     BYTE PTR [rdx],bl
   14004f1f9:	add    BYTE PTR [rax],al
   14004f1fb:	add    BYTE PTR [rcx],al
	...
   14004f21d:	add    BYTE PTR [rax],al
   14004f21f:	add    BYTE PTR [rax],dh
   14004f221:	add    DWORD PTR [rax],eax
   14004f223:	add    bh,bh
   14004f225:	(bad)  
   14004f226:	(bad)  
   14004f227:	inc    DWORD PTR [rax]
	...
   14004f235:	add    BYTE PTR [rax],al
   14004f237:	add    BYTE PTR [rax+0x14004f1],dh
	...
   14004f245:	add    BYTE PTR [rax],al
   14004f247:	add    BYTE PTR [rax],ah
   14004f249:	icebp  
   14004f24a:	add    al,0x40
   14004f24c:	add    DWORD PTR [rax],eax
	...
   14004f34e:	add    BYTE PTR [rax],al
   14004f350:	rex.WB push r11
   14004f352:	rex.WRXB pop r15
   14004f354:	xor    dh,BYTE PTR [rax]
   14004f356:	xor    dh,BYTE PTR [rdx]
   14004f358:	sub    al,0x6c
   14004f35a:	outs   dx,DWORD PTR ds:[rsi]
   14004f35b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004f35e:	gs cmp eax,0x762c687a
   14004f364:	gs jb  0x14004f3da
   14004f367:	imul   ebp,DWORD PTR [rdi+0x6e],0x303d
   14004f36e:	add    BYTE PTR [rax],al
   14004f370:	rex.WB push r11
   14004f372:	rex.WRXB pop r15
   14004f374:	xor    dh,BYTE PTR [rax]
   14004f376:	xor    dh,BYTE PTR [rdx]
   14004f378:	sub    al,0x6c
   14004f37a:	outs   dx,DWORD PTR ds:[rsi]
   14004f37b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004f37e:	gs cmp eax,0x762c687a
   14004f384:	gs jb  0x14004f3fa
   14004f387:	imul   ebp,DWORD PTR [rdi+0x6e],0x313d
   14004f38e:	add    BYTE PTR [rax],al
   14004f390:	movsxd ebp,DWORD PTR [rsi+0x73]
   14004f393:	sub    eax,0x34363131
   14004f398:	xor    ebp,DWORD PTR [rip+0x32393931]        # 0x1723e2ccf
   14004f39e:	add    BYTE PTR [rax],al
   14004f3a0:	imul   esi,DWORD PTR [rbx+0x6f],0x2d72692d
   14004f3a7:	xor    DWORD PTR [rsi],esi
   14004f3a9:	xor    eax,0x0
   14004f3ae:	add    BYTE PTR [rax],al
   14004f3b0:	rex.WB push r11
   14004f3b2:	rex.WRXB pop r15
   14004f3b4:	xor    dh,BYTE PTR [rax]
   14004f3b6:	xor    dh,BYTE PTR [rdx]
   14004f3b8:	sub    al,0x6c
   14004f3ba:	outs   dx,DWORD PTR ds:[rsi]
   14004f3bb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004f3be:	gs cmp eax,0x762c6f6b
   14004f3c4:	gs jb  0x14004f43a
   14004f3c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x313d
   14004f3ce:	add    BYTE PTR [rax],al
   14004f3d0:	imul   esp,DWORD PTR [rdx+0x6d],0x3934392d
   14004f3d7:	add    BYTE PTR [rcx+0x63],ch
   14004f3da:	jne    0x14004f409
   14004f3dc:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14004f3e3:	ins    BYTE PTR es:[rdi],dx
   14004f3e4:	sub    eax,0x34353532
   14004f3e9:	add    BYTE PTR ss:[rax],al
   14004f3ec:	add    BYTE PTR [rax],al
   14004f3ee:	add    BYTE PTR [rax],al
   14004f3f0:	rex.WB push r11
   14004f3f2:	rex.WRXB pop r15
   14004f3f4:	xor    dh,BYTE PTR [rax]
   14004f3f6:	xor    dh,BYTE PTR [rdx]
   14004f3f8:	sub    al,0x6c
   14004f3fa:	outs   dx,DWORD PTR ds:[rsi]
   14004f3fb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004f3fe:	gs cmp eax,0x762c616a
   14004f404:	gs jb  0x14004f47a
   14004f407:	imul   ebp,DWORD PTR [rdi+0x6e],0x3d
   14004f40e:	add    BYTE PTR [rax],al
   14004f410:	imul   esi,DWORD PTR [rbx+0x63],0x5f
   14004f414:	xor    eax,0x313036
   14004f419:	add    BYTE PTR [rax],al
   14004f41b:	add    BYTE PTR [rax],al
   14004f41d:	add    BYTE PTR [rax],al
   14004f41f:	add    BYTE PTR [rdx+0x69],ch
   14004f422:	jae    0x14004f49c
   14004f424:	sub    eax,0x323132
   14004f429:	add    BYTE PTR [rax],al
   14004f42b:	add    BYTE PTR [rax],al
   14004f42d:	add    BYTE PTR [rax],al
   14004f42f:	add    BYTE PTR [rbx+0x68],dl
   14004f432:	imul   esp,DWORD PTR [rsi+0x74],0x53494a2d
   14004f439:	add    BYTE PTR [rax],al
   14004f43b:	add    BYTE PTR [rax],al
   14004f43d:	add    BYTE PTR [rax],al
   14004f43f:	add    BYTE PTR [rcx+0x53],cl
   14004f442:	rex.WRXB cmp BYTE PTR [r8],r15b
   14004f445:	xor    eax,0x375f39
   14004f44a:	add    BYTE PTR [rax],al
   14004f44c:	or     BYTE PTR [rax],al
	...
   14004f50e:	add    BYTE PTR [rax],al
   14004f510:	add    DWORD PTR [rcx],eax
   14004f512:	add    DWORD PTR [rcx],eax
   14004f514:	add    DWORD PTR [rcx],eax
   14004f516:	add    DWORD PTR [rcx],eax
   14004f518:	add    DWORD PTR [rcx],eax
   14004f51a:	add    DWORD PTR [rcx],eax
   14004f51c:	add    DWORD PTR [rcx],eax
   14004f51e:	add    DWORD PTR [rcx],eax
   14004f520:	add    DWORD PTR [rcx],eax
   14004f522:	add    DWORD PTR [rcx],eax
   14004f524:	add    DWORD PTR [rcx],eax
   14004f526:	add    DWORD PTR [rcx],eax
   14004f528:	add    DWORD PTR [rcx],eax
   14004f52a:	add    DWORD PTR [rcx],eax
   14004f52c:	add    DWORD PTR [rcx],eax
   14004f52e:	add    DWORD PTR [rcx],eax
   14004f530:	add    al,BYTE PTR [rdx]
   14004f532:	add    al,BYTE PTR [rdx]
   14004f534:	add    al,BYTE PTR [rdx]
   14004f536:	add    al,BYTE PTR [rdx]
   14004f538:	add    al,BYTE PTR [rdx]
   14004f53a:	add    al,BYTE PTR [rdx]
   14004f53c:	add    al,BYTE PTR [rdx]
   14004f53e:	add    al,BYTE PTR [rdx]
   14004f540:	add    eax,DWORD PTR [rbx]
   14004f542:	add    eax,DWORD PTR [rbx]
   14004f544:	add    eax,DWORD PTR [rbx]
   14004f546:	add    eax,DWORD PTR [rbx]
   14004f548:	add    al,0x4
   14004f54a:	add    al,0x4
   14004f54c:	add    eax,0x5
   14004f551:	add    BYTE PTR [rax],al
   14004f553:	add    BYTE PTR [rax+0x0],al
   14004f559:	or     BYTE PTR [rax],al
   14004f55b:	add    BYTE PTR [rax],al
   14004f55d:	add    BYTE PTR [rcx],al
   14004f55f:	add    BYTE PTR [rip+0xffffffff9f000000],dl        # 0xdf04f565
   14004f565:	add    BYTE PTR [rax],al
   14004f567:	add    bh,bh
   14004f569:	inc    DWORD PTR [rax]
   14004f56b:	add    bh,bh
   14004f56d:	call   QWORD PTR [rax]
   14004f56f:	add    bh,bh
   14004f571:	(bad)  
   14004f572:	inc    DWORD PTR [rbx]
   14004f574:	(bad)  
   14004f575:	(bad)  
   14004f576:	(bad)  
   14004f577:	jg     0x14004f5ee
   14004f579:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14004f57c:	pop    rdi
   14004f57d:	jae    0x14004f5f3
   14004f57f:	jb     0x14004f5e4
   14004f581:	outs   dx,DWORD PTR ds:[rsi]
   14004f582:	ins    BYTE PTR es:[rdi],dx
   14004f583:	ins    BYTE PTR es:[rdi],dx
   14004f584:	rex.WB je 0x14004f5ec
   14004f587:	jb     0x14004f589
   14004f589:	add    BYTE PTR [rax],al
   14004f58b:	add    BYTE PTR [rax],al
   14004f58d:	add    BYTE PTR [rax],al
   14004f58f:	add    BYTE PTR [rbp+0x63],dh
   14004f592:	outs   dx,DWORD PTR ds:[rsi]
   14004f593:	ins    BYTE PTR es:[rdi],dx
   14004f594:	pop    rdi
   14004f595:	outs   dx,BYTE PTR ds:[rsi]
   14004f596:	gs js  0x14004f60d
   14004f599:	push   rbx
   14004f59a:	outs   dx,DWORD PTR ds:[rsi]
   14004f59b:	jb     0x14004f611
   14004f59d:	rex.WXB
   14004f59e:	gs jns 0x14004f5f1
   14004f5a1:	(bad)  
   14004f5a2:	jb     0x14004f618
   14004f5a4:	add    BYTE PTR [rax],al
   14004f5a6:	add    BYTE PTR [rax],al
   14004f5a8:	jne    0x14004f60d
   14004f5aa:	outs   dx,DWORD PTR ds:[rsi]
   14004f5ab:	ins    BYTE PTR es:[rdi],dx
   14004f5ac:	pop    rdi
   14004f5ad:	addr32 gs je 0x14004f5fd
   14004f5b1:	outs   dx,DWORD PTR ds:[rsi]
   14004f5b2:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004f5b5:	add    BYTE PTR gs:[rax],al
   14004f5b8:	jne    0x14004f61d
   14004f5ba:	outs   dx,DWORD PTR ds:[rsi]
   14004f5bb:	ins    BYTE PTR es:[rdi],dx
   14004f5bc:	pop    rdi
   14004f5bd:	addr32 gs je 0x14004f614
   14004f5c1:	outs   dx,DWORD PTR ds:[rsi]
   14004f5c2:	jb     0x14004f638
   14004f5c4:	rex.WXB
   14004f5c5:	gs jns 0x14004f5c8
   14004f5c8:	jne    0x14004f62d
   14004f5ca:	outs   dx,DWORD PTR ds:[rsi]
   14004f5cb:	ins    BYTE PTR es:[rdi],dx
   14004f5cc:	pop    rdi
   14004f5cd:	jae    0x14004f643
   14004f5cf:	jb     0x14004f634
   14004f5d1:	outs   dx,DWORD PTR ds:[rsi]
   14004f5d2:	ins    BYTE PTR es:[rdi],dx
   14004f5d3:	ins    BYTE PTR es:[rdi],dx
   14004f5d4:	add    BYTE PTR [rax],al
   14004f5d6:	add    BYTE PTR [rax],al
   14004f5d8:	jne    0x14004f63d
   14004f5da:	outs   dx,DWORD PTR ds:[rsi]
   14004f5db:	ins    BYTE PTR es:[rdi],dx
   14004f5dc:	pop    rdi
   14004f5dd:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14004f5e1:	add    BYTE PTR gs:[rax],al
   14004f5e4:	add    BYTE PTR [rax],al
   14004f5e6:	add    BYTE PTR [rax],al
   14004f5e8:	jne    0x14004f64d
   14004f5ea:	outs   dx,DWORD PTR ds:[rsi]
   14004f5eb:	ins    BYTE PTR es:[rdi],dx
   14004f5ec:	pop    rdi
   14004f5ed:	outs   dx,DWORD PTR ds:[rsi]
   14004f5ee:	jo     0x14004f655
   14004f5f0:	outs   dx,BYTE PTR ds:[rsi]
   14004f5f1:	add    BYTE PTR [rax],al
   14004f5f3:	add    BYTE PTR [rax],al
   14004f5f5:	add    BYTE PTR [rax],al
   14004f5f7:	add    BYTE PTR [rbp+0x63],dh
   14004f5fa:	outs   dx,BYTE PTR ds:[rsi]
   14004f5fb:	jbe    0x14004f65c
   14004f5fd:	jne    0x14004f66d
   14004f5ff:	ins    BYTE PTR es:[rdi],dx
   14004f600:	outs   dx,DWORD PTR ds:[rsi]
   14004f601:	(bad)  
   14004f602:	add    BYTE PTR fs:[rax],al
   14004f605:	add    BYTE PTR [rax],al
   14004f607:	add    BYTE PTR [rbp+0x63],dh
   14004f60a:	outs   dx,BYTE PTR ds:[rsi]
   14004f60b:	jbe    0x14004f66c
   14004f60d:	ins    BYTE PTR es:[rdi],dx
   14004f60e:	outs   dx,DWORD PTR ds:[rsi]
   14004f60f:	(bad)  
   14004f610:	add    BYTE PTR fs:[rax],al
   14004f613:	add    BYTE PTR [rax],al
   14004f615:	add    BYTE PTR [rax],al
   14004f617:	add    BYTE PTR [rbp+0x63],dh
   14004f61a:	outs   dx,BYTE PTR ds:[rsi]
   14004f61b:	jbe    0x14004f67c
   14004f61d:	data16 ins BYTE PTR es:[rdi],dx
   14004f61f:	jne    0x14004f694
   14004f621:	push   0x68636143
   14004f626:	add    BYTE PTR gs:[rbp+0x63],dh
   14004f62a:	outs   dx,BYTE PTR ds:[rsi]
   14004f62b:	jbe    0x14004f68c
   14004f62d:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14004f631:	add    BYTE PTR gs:[rax],al
   14004f634:	add    BYTE PTR [rax],al
   14004f636:	add    BYTE PTR [rax],al
   14004f638:	jne    0x14004f69d
   14004f63a:	outs   dx,BYTE PTR ds:[rsi]
   14004f63b:	jbe    0x14004f69c
   14004f63d:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x6e]
   14004f641:	add    BYTE PTR gs:[rax],al
   14004f644:	add    BYTE PTR [rax],al
   14004f646:	add    BYTE PTR [rax],al
   14004f648:	jne    0x14004f6ad
   14004f64a:	outs   dx,BYTE PTR ds:[rsi]
   14004f64b:	jbe    0x14004f6ac
   14004f64d:	outs   dx,DWORD PTR ds:[rsi]
   14004f64e:	jo     0x14004f6b5
   14004f650:	outs   dx,BYTE PTR ds:[rsi]
   14004f651:	rex.B ins BYTE PTR es:[rdi],dx
   14004f653:	outs   dx,DWORD PTR ds:[esi]
   14004f655:	jb     0x14004f6c0
   14004f657:	je     0x14004f6c1
   14004f659:	ins    DWORD PTR es:[rdi],dx
   14004f65a:	imul   esp,DWORD PTR [rbx+0x0],0x75000000
   14004f661:	movsxd ebp,DWORD PTR [rsi+0x76]
   14004f664:	pop    rdi
   14004f665:	outs   dx,DWORD PTR ds:[rsi]
   14004f666:	jo     0x14004f6cd
   14004f668:	outs   dx,BYTE PTR ds:[rsi]
   14004f669:	push   rax
   14004f66a:	(bad)  
   14004f66b:	movsxd ebp,DWORD PTR [rbx+0x61]
   14004f66e:	add    BYTE PTR gs:[eax],al
   14004f672:	add    BYTE PTR [rax],al
   14004f674:	add    BYTE PTR [rax],al
   14004f676:	add    BYTE PTR [rax],al
   14004f678:	jne    0x14004f6dd
   14004f67a:	outs   dx,BYTE PTR ds:[rsi]
   14004f67b:	jbe    0x14004f6dc
   14004f67d:	outs   dx,DWORD PTR ds:[rsi]
   14004f67e:	jo     0x14004f6e5
   14004f680:	outs   dx,BYTE PTR ds:[rsi]
   14004f681:	add    BYTE PTR [rax],al
   14004f683:	add    BYTE PTR [rax],al
   14004f685:	add    BYTE PTR [rax],al
   14004f687:	add    BYTE PTR [rbp+0x5f],dh
   14004f68a:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   14004f68e:	outs   dx,BYTE PTR ds:[rsi]
   14004f68f:	jne    0x14004f701
   14004f691:	add    BYTE PTR [rax],al
   14004f693:	add    BYTE PTR [rbp+0x5f],dh
   14004f696:	imul   ebp,DWORD PTR [rsi+0x69],0x74
   14004f69d:	add    BYTE PTR [rax],al
   14004f69f:	add    BYTE PTR [rdx+0x65],dl
   14004f6a2:	je     0x14004f719
   14004f6a4:	jb     0x14004f714
   14004f6a6:	jae    0x14004f6d6
	...
   14004f6b0:	push   rdx
   14004f6b1:	gs je  0x14004f729
   14004f6b4:	jb     0x14004f724
   14004f6b6:	jae    0x14004f6d8
   14004f6b8:	and    eax,0x2e64
   14004f6bd:	add    BYTE PTR [rax],al
   14004f6bf:	add    BYTE PTR [rdx+0x65],dl
   14004f6c2:	je     0x14004f739
   14004f6c4:	jb     0x14004f734
   14004f6c6:	jae    0x14004f6f6
   14004f6c8:	and    BYTE PTR [rax],ah
   14004f6ca:	push   rbx
   14004f6cb:	je     0x14004f72e
   14004f6cd:	je     0x14004f744
   14004f6cf:	jae    0x14004f6f1
   14004f6d1:	cmp    eax,0x2e642520
   14004f6d6:	add    BYTE PTR [rax],al
   14004f6d8:	push   rdx
   14004f6d9:	gs je  0x14004f751
   14004f6dc:	jb     0x14004f74c
   14004f6de:	jae    0x14004f700
   14004f6e0:	and    eax,0x20202e64
   14004f6e5:	push   rbx
   14004f6e6:	je     0x14004f749
   14004f6e8:	je     0x14004f75f
   14004f6ea:	jae    0x14004f70c
   14004f6ec:	cmp    eax,0x2e642520
   14004f6f1:	add    BYTE PTR [rax],al
   14004f6f3:	add    BYTE PTR [rax],al
   14004f6f5:	add    BYTE PTR [rax],al
   14004f6f7:	add    BYTE PTR [rdx+0x65],dl
   14004f6fa:	je     0x14004f771
   14004f6fc:	jb     0x14004f76c
   14004f6fe:	jae    0x14004f720
   14004f700:	and    eax,0x20202e64
   14004f705:	push   rbx
   14004f706:	je     0x14004f769
   14004f708:	je     0x14004f77f
   14004f70a:	jae    0x14004f72c
   14004f70c:	cmp    eax,0x2e702520
   14004f711:	add    BYTE PTR [rax],al
   14004f713:	add    BYTE PTR [rax],al
   14004f715:	add    BYTE PTR [rax],al
   14004f717:	add    BYTE PTR [rax],dh
   14004f719:	xor    DWORD PTR [rdx],esi
   14004f71b:	xor    esi,DWORD PTR [rsi*1+0x39383736]
   14004f722:	(bad)  
   14004f723:	(bad)
	...
   14004f730:	xchg   esp,eax
   14004f731:	test   BYTE PTR [rax+rax*2],0x1
   14004f735:	add    BYTE PTR [rax],al
   14004f737:	add    BYTE PTR [rax+0x14004f6],cl
	...
   14004f74d:	add    BYTE PTR [rax],al
   14004f74f:	add    BYTE PTR [rax-0xa],bh
   14004f752:	add    al,0x40
   14004f754:	add    DWORD PTR [rax],eax
   14004f756:	add    BYTE PTR [rax],al
   14004f758:	(bad)  
   14004f759:	test   BYTE PTR [rax+rax*2],0x1
   14004f75d:	add    BYTE PTR [rax],al
   14004f75f:	add    BYTE PTR [rax-0xa],cl
   14004f762:	add    al,0x40
   14004f764:	add    DWORD PTR [rax],eax
   14004f766:	add    BYTE PTR [rax],al
   14004f768:	cmp    dh,dh
   14004f76a:	add    al,0x40
   14004f76c:	add    DWORD PTR [rax],eax
   14004f76e:	add    BYTE PTR [rax],al
   14004f770:	sub    dh,dh
   14004f772:	add    al,0x40
   14004f774:	add    DWORD PTR [rax],eax
   14004f776:	add    BYTE PTR [rax],al
   14004f778:	sbb    dh,dh
   14004f77a:	add    al,0x40
   14004f77c:	add    DWORD PTR [rax],eax
   14004f77e:	add    BYTE PTR [rax],al
   14004f780:	or     dh,dh
   14004f782:	add    al,0x40
   14004f784:	add    DWORD PTR [rax],eax
   14004f786:	add    BYTE PTR [rax],al
   14004f788:	clc    
   14004f789:	cmc    
   14004f78a:	add    al,0x40
   14004f78c:	add    DWORD PTR [rax],eax
	...
   14004f79e:	add    BYTE PTR [rax],al
   14004f7a0:	call   0x14144fc9a
   14004f7a5:	add    BYTE PTR [rax],al
   14004f7a7:	add    al,bl
   14004f7a9:	cmc    
   14004f7aa:	add    al,0x40
   14004f7ac:	add    DWORD PTR [rax],eax
   14004f7ae:	add    BYTE PTR [rax],al
   14004f7b0:	enter  0x4f5,0x40
   14004f7b4:	add    DWORD PTR [rax],eax
   14004f7b6:	add    BYTE PTR [rax],al
   14004f7b8:	mov    eax,0x14004f5
   14004f7bd:	add    BYTE PTR [rax],al
   14004f7bf:	add    BYTE PTR [rax+0x14004f5],ch
   14004f7c5:	add    BYTE PTR [rax],al
   14004f7c7:	add    BYTE PTR [rax+0x14004f5],dl
   14004f7cd:	add    BYTE PTR [rax],al
   14004f7cf:	add    BYTE PTR [rax-0xb],bh
   14004f7d2:	add    al,0x40
   14004f7d4:	add    DWORD PTR [rax],eax
	...
   14004f7de:	add    BYTE PTR [rax],al
   14004f7e0:	nop
   14004f7e1:	rol    DWORD PTR [rdx],0x40
   14004f7e4:	add    DWORD PTR [rax],eax
   14004f7e6:	add    BYTE PTR [rax],al
   14004f7e8:	add    al,0xc1
   14004f7ea:	add    al,BYTE PTR [rax+0x1]
   14004f7ed:	add    BYTE PTR [rax],al
   14004f7ef:	add    BYTE PTR [rcx+rax*8],al
   14004f7f2:	add    al,BYTE PTR [rax+0x1]
   14004f7f5:	add    BYTE PTR [rax],al
   14004f7f7:	add    BYTE PTR [rdx+rbx*2+0x0],dl
   14004f7fb:	add    BYTE PTR [rax],al
   14004f7fd:	add    BYTE PTR [rax],al
   14004f7ff:	add    BYTE PTR [rbx+0x75],dl
   14004f802:	outs   dx,BYTE PTR ds:[rsi]
   14004f803:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004f805:	outs   dx,BYTE PTR ds:[rsi]
   14004f806:	push   rsp
   14004f807:	jne    0x14004f86e
   14004f809:	push   rdi
   14004f80a:	gs fs push rsp
   14004f80d:	push   0x69724675
   14004f812:	push   rbx
   14004f813:	(bad)  
   14004f814:	je     0x14004f816
   14004f816:	add    BYTE PTR [rax],al
   14004f818:	rex.WX (bad) 
   14004f81a:	outs   dx,BYTE PTR ds:[rsi]
   14004f81b:	rex.RX
   14004f81c:	gs (bad) 
   14004f81e:	rex.WRB (bad) 
   14004f820:	jb     0x14004f863
   14004f822:	jo     0x14004f896
   14004f824:	rex.WRB (bad) 
   14004f826:	jns    0x14004f872
   14004f828:	jne    0x14004f898
   14004f82a:	rex.WX jne 0x14004f899
   14004f82d:	rex.B jne 0x14004f897
   14004f830:	push   rbx
   14004f831:	gs jo  0x14004f883
   14004f834:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   14004f838:	jbe    0x14004f87e
   14004f83a:	movsxd eax,DWORD PTR gs:[rax]
   14004f83d:	add    BYTE PTR [rax],al
   14004f83f:	add    BYTE PTR [rbx+0x6f],al
   14004f842:	jb     0x14004f889
   14004f844:	js     0x14004f8af
   14004f846:	je     0x14004f898
   14004f848:	jb     0x14004f8b9
   14004f84a:	movsxd esp,DWORD PTR [rbp+0x73]
   14004f84d:	jae    0x14004f84f
   14004f84f:	add    BYTE PTR [rbp+0x0],ch
   14004f852:	jae    0x14004f854
   14004f854:	movsxd eax,DWORD PTR [rax]
   14004f856:	outs   dx,DWORD PTR ds:[rsi]
   14004f857:	add    BYTE PTR [rdx+0x0],dh
   14004f85a:	add    BYTE PTR gs:[rbp+0x0],ah
   14004f85e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14004f863:	add    BYTE PTR [rax+rax*1+0x0],ch
   14004f867:	add    BYTE PTR [rdx+0x75],dh
   14004f86a:	outs   dx,BYTE PTR ds:[rsi]
   14004f86b:	je     0x14004f8d6
   14004f86d:	ins    DWORD PTR es:[rdi],dx
   14004f86e:	and    BYTE PTR gs:[rbp+0x72],ah
   14004f872:	jb     0x14004f8e3
   14004f874:	jb     0x14004f896
   14004f876:	add    BYTE PTR [rax],al
   14004f878:	or     eax,0xa
   14004f87d:	add    BYTE PTR [rax],al
   14004f87f:	add    BYTE PTR [rsp+rcx*2+0x4f],dl
   14004f883:	push   rbx
   14004f884:	push   rbx
   14004f885:	and    BYTE PTR [rbp+0x72],ah
   14004f888:	jb     0x14004f8f9
   14004f88a:	jb     0x14004f899
   14004f88c:	or     al,BYTE PTR [rax]
   14004f88e:	add    BYTE PTR [rax],al
   14004f890:	push   rbx
   14004f891:	rex.WB
   14004f892:	rex.WRX
   14004f893:	rex.RXB and BYTE PTR [r13+0x72],r12b
   14004f897:	jb     0x14004f908
   14004f899:	jb     0x14004f8a8
   14004f89b:	or     al,BYTE PTR [rax]
   14004f89d:	add    BYTE PTR [rax],al
   14004f89f:	add    BYTE PTR [rdi+rcx*2+0x4d],al
   14004f8a3:	rex.B
   14004f8a4:	rex.WB
   14004f8a5:	rex.WRX and BYTE PTR [rbp+0x72],r12b
   14004f8a9:	jb     0x14004f91a
   14004f8ab:	jb     0x14004f8ba
   14004f8ad:	or     al,BYTE PTR [rax]
   14004f8af:	add    BYTE PTR [rdx+0x36],dl
   14004f8b2:	xor    BYTE PTR [rbx],dh
   14004f8b4:	xor    al,0xd
   14004f8b6:	or     al,BYTE PTR [rcx+0x6e]
   14004f8b9:	and    BYTE PTR [rcx+0x70],ah
   14004f8bc:	jo     0x14004f92a
   14004f8be:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004f8c5:	and    BYTE PTR [rax+0x61],ch
   14004f8c8:	jae    0x14004f8ea
   14004f8ca:	ins    DWORD PTR es:[rdi],dx
   14004f8cb:	(bad)  
   14004f8cc:	fs and BYTE PTR gs:[rcx+0x6e],ah
   14004f8d1:	and    BYTE PTR [rcx+0x74],ah
   14004f8d4:	je     0x14004f93b
   14004f8d6:	ins    DWORD PTR es:[rdi],dx
   14004f8d7:	jo     0x14004f94d
   14004f8d9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14004f8dd:	ins    BYTE PTR es:[rdi],dx
   14004f8de:	outs   dx,DWORD PTR ds:[rsi]
   14004f8df:	(bad)  
   14004f8e0:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   14004f8e5:	and    BYTE PTR [rbx+0x20],al
   14004f8e8:	jb     0x14004f95f
   14004f8ea:	outs   dx,BYTE PTR ds:[rsi]
   14004f8eb:	je     0x14004f956
   14004f8ed:	ins    DWORD PTR es:[rdi],dx
   14004f8ee:	and    BYTE PTR gs:[rcx+rbp*2+0x62],ch
   14004f8f3:	jb     0x14004f956
   14004f8f5:	jb     0x14004f970
   14004f8f7:	and    BYTE PTR [rcx+0x6e],ch
   14004f8fa:	movsxd ebp,DWORD PTR [rdi+0x72]
   14004f8fd:	jb     0x14004f964
   14004f8ff:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
   14004f903:	or     dl,BYTE PTR cs:[rax+0x6c]
   14004f907:	gs (bad) 
   14004f909:	jae    0x14004f970
   14004f90b:	and    BYTE PTR [rbx+0x6f],ah
   14004f90e:	outs   dx,BYTE PTR ds:[rsi]
   14004f90f:	je     0x14004f972
   14004f911:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
   14004f915:	push   0x70612065
   14004f91a:	jo     0x14004f988
   14004f91c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004f923:	(bad)  
   14004f924:	jae    0x14004f946
   14004f926:	jae    0x14004f99d
   14004f928:	jo     0x14004f99a
   14004f92a:	outs   dx,DWORD PTR ds:[rsi]
   14004f92b:	jb     0x14004f9a1
   14004f92d:	and    BYTE PTR [rbp+riz*2+0x61],dh
   14004f931:	ins    DWORD PTR es:[rdi],dx
   14004f932:	and    BYTE PTR [rsi+0x6f],ah
   14004f935:	jb     0x14004f957
   14004f937:	ins    DWORD PTR es:[rdi],dx
   14004f938:	outs   dx,DWORD PTR ds:[rsi]
   14004f939:	jb     0x14004f9a0
   14004f93b:	and    BYTE PTR [rcx+0x6e],ch
   14004f93e:	outs   dx,WORD PTR ds:[rsi]
   14004f940:	jb     0x14004f9af
   14004f942:	(bad)  
   14004f943:	je     0x14004f9ae
   14004f945:	outs   dx,DWORD PTR ds:[rsi]
   14004f946:	outs   dx,BYTE PTR ds:[rsi]
   14004f947:	cs or  eax,0xa
   14004f94d:	add    BYTE PTR [rax],al
   14004f94f:	add    BYTE PTR [rdx+0x36],dl
   14004f952:	xor    BYTE PTR [rbx],dh
   14004f954:	xor    ecx,DWORD PTR [rip+0x41202d0a]        # 0x181252664
   14004f95a:	je     0x14004f9d0
   14004f95c:	gs ins DWORD PTR es:[rdi],dx
   14004f95e:	jo     0x14004f9d4
   14004f960:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14004f964:	jne    0x14004f9d9
   14004f966:	and    BYTE PTR gs:[rbp+0x53],cl
   14004f96a:	rex.WB
   14004f96b:	rex.WR and BYTE PTR [rbx+0x6f],r12b
   14004f96f:	fs and BYTE PTR gs:[rsi+0x72],ah
   14004f974:	outs   dx,DWORD PTR ds:[rsi]
   14004f975:	ins    DWORD PTR es:[rdi],dx
   14004f976:	and    BYTE PTR [rax+rbp*2+0x69],dh
   14004f97a:	jae    0x14004f99c
   14004f97c:	(bad)  
   14004f97d:	jae    0x14004f9f2
   14004f97f:	gs ins DWORD PTR es:[rdi],dx
   14004f981:	(bad)  
   14004f982:	ins    BYTE PTR es:[rdi],dx
   14004f983:	jns    0x14004f9a5
   14004f985:	fs jne 0x14004f9fa
   14004f988:	imul   ebp,DWORD PTR [rsi+0x67],0x74616e20
   14004f98f:	imul   esi,DWORD PTR [rsi+0x65],0x646f6320
   14004f996:	and    BYTE PTR gs:[rcx+0x6e],ch
   14004f99a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   14004f9a2:	je     0x14004fa0d
   14004f9a4:	outs   dx,DWORD PTR ds:[rsi]
   14004f9a5:	outs   dx,BYTE PTR ds:[rsi]
   14004f9a6:	or     dl,BYTE PTR [rax+rbp*2+0x69]
   14004f9aa:	jae    0x14004f9cc
   14004f9ac:	imul   ebp,DWORD PTR [rsi+0x64],0x74616369
   14004f9b3:	gs jae 0x14004f9d6
   14004f9b6:	(bad)  
   14004f9b7:	and    BYTE PTR [rdx+0x75],ah
   14004f9ba:	and    BYTE PTR [ecx+0x6e],ch
   14004f9be:	and    BYTE PTR [rcx+0x6f],bh
   14004f9c1:	jne    0x14004fa35
   14004f9c3:	and    BYTE PTR [rcx+0x70],ah
   14004f9c6:	jo     0x14004fa34
   14004f9c8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004f9cf:	and    BYTE PTR cs:[rcx+0x74],cl
   14004f9d3:	and    BYTE PTR [rcx+0x73],ch
   14004f9d6:	and    BYTE PTR [rbp+0x6f],ch
   14004f9d9:	jae    0x14004fa4f
   14004f9db:	and    BYTE PTR [rcx+rbp*2+0x6b],ch
   14004f9df:	gs ins BYTE PTR es:[rdi],dx
   14004f9e1:	jns    0x14004fa03
   14004f9e3:	je     0x14004fa4d
   14004f9e5:	and    BYTE PTR gs:[rdx+0x65],dh
   14004f9e9:	jae    0x14004fa60
   14004f9eb:	ins    BYTE PTR es:[rdi],dx
   14004f9ec:	je     0x14004fa0e
   14004f9ee:	outs   dx,DWORD PTR ds:[rsi]
   14004f9ef:	data16 and BYTE PTR [rbx+0x61],ah
   14004f9f3:	ins    BYTE PTR es:[rdi],dx
   14004f9f4:	ins    BYTE PTR es:[rdi],dx
   14004f9f5:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6120
   14004f9fc:	rex.WRB push r11
   14004f9fe:	rex.WB
   14004f9ff:	rex.WR sub rax,0x706d6f63
   14004fa05:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x632f2820
   14004fa0d:	ins    BYTE PTR es:[rdi],dx
   14004fa0e:	jb     0x14004fa39
   14004fa10:	and    BYTE PTR [rsi+0x75],ah
   14004fa13:	outs   dx,BYTE PTR ds:[rsi]
   14004fa14:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004fa18:	outs   dx,BYTE PTR ds:[rsi]
   14004fa19:	and    BYTE PTR [rsi+0x72],ah
   14004fa1c:	outs   dx,DWORD PTR ds:[rsi]
   14004fa1d:	ins    DWORD PTR es:[rdi],dx
   14004fa1e:	and    BYTE PTR [rcx+0x20],ah
   14004fa21:	outs   dx,BYTE PTR ds:[rsi]
   14004fa22:	(bad)  
   14004fa23:	je     0x14004fa8e
   14004fa25:	jbe    0x14004fa8c
   14004fa27:	and    BYTE PTR [rbx+0x6f],ah
   14004fa2a:	outs   dx,BYTE PTR ds:[rsi]
   14004fa2b:	jae    0x14004faa1
   14004fa2d:	jb     0x14004faa4
   14004fa2f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14004fa33:	and    BYTE PTR [rdi+0x72],ch
   14004fa36:	and    BYTE PTR [rsi+0x72],ah
   14004fa39:	outs   dx,DWORD PTR ds:[rsi]
   14004fa3a:	ins    DWORD PTR es:[rdi],dx
   14004fa3b:	and    BYTE PTR [rsp+rbp*2+0x6c],al
   14004fa3f:	rex.WRB (bad) 
   14004fa41:	imul   ebp,DWORD PTR [rsi+0x2e],0xa0d
   14004fa48:	push   rdx
   14004fa49:	xor    BYTE PTR ss:[rbx],dh
   14004fa4c:	xor    cl,BYTE PTR [rip+0x6e202d0a]        # 0x1ae25275c
   14004fa52:	outs   dx,DWORD PTR ds:[rsi]
   14004fa53:	je     0x14004fa75
   14004fa55:	outs   dx,BYTE PTR gs:[rsi]
   14004fa57:	outs   dx,DWORD PTR ds:[rsi]
   14004fa58:	jne    0x14004fac1
   14004fa5a:	push   0x61707320
   14004fa5f:	movsxd esp,DWORD PTR [rbp+0x20]
   14004fa62:	outs   dx,WORD PTR ds:[rsi]
   14004fa64:	jb     0x14004fa86
   14004fa66:	ins    BYTE PTR es:[rdi],dx
   14004fa67:	outs   dx,DWORD PTR ds:[rsi]
   14004fa68:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004fa6b:	and    BYTE PTR gs:[rcx+0x6e],ch
   14004fa6f:	outs   dx,WORD PTR ds:[rsi]
   14004fa71:	jb     0x14004fae0
   14004fa73:	(bad)  
   14004fa74:	je     0x14004fadf
   14004fa76:	outs   dx,DWORD PTR ds:[rsi]
   14004fa77:	outs   dx,BYTE PTR ds:[rsi]
   14004fa78:	or     eax,0xa
   14004fa7d:	add    BYTE PTR [rax],al
   14004fa7f:	add    BYTE PTR [rdx+0x36],dl
   14004fa82:	xor    BYTE PTR [rbx],dh
   14004fa84:	xor    DWORD PTR [rip+0x41202d0a],ecx        # 0x181252794
   14004fa8a:	je     0x14004fb00
   14004fa8c:	gs ins DWORD PTR es:[rdi],dx
   14004fa8e:	jo     0x14004fb04
   14004fa90:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14004fa94:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14004fa9b:	imul   edi,DWORD PTR [rdx+0x65],0x65687420
   14004faa2:	and    BYTE PTR [rbx+0x52],al
   14004faa5:	push   rsp
   14004faa6:	and    BYTE PTR [rbp+0x6f],ch
   14004faa9:	jb     0x14004fb10
   14004faab:	and    BYTE PTR [rax+rbp*2+0x61],dh
   14004faaf:	outs   dx,BYTE PTR ds:[rsi]
   14004fab0:	and    BYTE PTR [rdi+0x6e],ch
   14004fab3:	movsxd esp,DWORD PTR [rbp+0x2e]
   14004fab6:	or     dl,BYTE PTR [rax+rbp*2+0x69]
   14004faba:	jae    0x14004fadc
   14004fabc:	imul   ebp,DWORD PTR [rsi+0x64],0x74616369
   14004fac3:	gs jae 0x14004fae6
   14004fac6:	(bad)  
   14004fac7:	and    BYTE PTR [rdx+0x75],ah
   14004faca:	and    BYTE PTR [ecx+0x6e],ch
   14004face:	and    BYTE PTR [rcx+0x6f],bh
   14004fad1:	jne    0x14004fb45
   14004fad3:	and    BYTE PTR [rcx+0x70],ah
   14004fad6:	jo     0x14004fb44
   14004fad8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004fadf:	cs or  eax,0xa
   14004fae5:	add    BYTE PTR [rax],al
   14004fae7:	add    BYTE PTR [rdx+0x36],dl
   14004faea:	xor    BYTE PTR [rbx],dh
   14004faec:	xor    BYTE PTR [rip+0x43202d0a],cl        # 0x1832527fc
   14004faf2:	push   rdx
   14004faf3:	push   rsp
   14004faf4:	and    BYTE PTR [rsi+0x6f],ch
   14004faf7:	je     0x14004fb19
   14004faf9:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14004fb00:	imul   edi,DWORD PTR [rdx+0x65],0xa0d64
   14004fb07:	add    BYTE PTR [rdx+0x36],dl
   14004fb0a:	xor    BYTE PTR [rdx],dh
   14004fb0c:	cmp    BYTE PTR [rip+0x75202d0a],cl        # 0x1b525281c
   14004fb12:	outs   dx,BYTE PTR ds:[rsi]
   14004fb13:	(bad)  
   14004fb14:	(bad)  
   14004fb15:	ins    BYTE PTR es:[rdi],dx
   14004fb16:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14004fb1b:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14004fb22:	imul   edi,DWORD PTR [rdx+0x65],0x61656820
   14004fb29:	jo     0x14004fb38
   14004fb2b:	or     al,BYTE PTR [rax]
   14004fb2d:	add    BYTE PTR [rax],al
   14004fb2f:	add    BYTE PTR [rdx+0x36],dl
   14004fb32:	xor    BYTE PTR [rdx],dh
   14004fb34:	(bad)  
   14004fb35:	or     eax,0x6e202d0a
   14004fb3a:	outs   dx,DWORD PTR ds:[rsi]
   14004fb3b:	je     0x14004fb5d
   14004fb3d:	outs   dx,BYTE PTR gs:[rsi]
   14004fb3f:	outs   dx,DWORD PTR ds:[rsi]
   14004fb40:	jne    0x14004fba9
   14004fb42:	push   0x61707320
   14004fb47:	movsxd esp,DWORD PTR [rbp+0x20]
   14004fb4a:	outs   dx,WORD PTR ds:[rsi]
   14004fb4c:	jb     0x14004fb6e
   14004fb4e:	ins    BYTE PTR es:[rdi],dx
   14004fb4f:	outs   dx,DWORD PTR ds:[rsi]
   14004fb50:	ja     0x14004fbbb
   14004fb52:	outs   dx,DWORD PTR ds:[rsi]
   14004fb53:	and    BYTE PTR [rcx+0x6e],ch
   14004fb56:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   14004fb5e:	je     0x14004fbc9
   14004fb60:	outs   dx,DWORD PTR ds:[rsi]
   14004fb61:	outs   dx,BYTE PTR ds:[rsi]
   14004fb62:	or     eax,0xa
   14004fb67:	add    BYTE PTR [rdx+0x36],dl
   14004fb6a:	xor    BYTE PTR [rdx],dh
   14004fb6c:	ss or  eax,0x6e202d0a
   14004fb72:	outs   dx,DWORD PTR ds:[rsi]
   14004fb73:	je     0x14004fb95
   14004fb75:	outs   dx,BYTE PTR gs:[rsi]
   14004fb77:	outs   dx,DWORD PTR ds:[rsi]
   14004fb78:	jne    0x14004fbe1
   14004fb7a:	push   0x61707320
   14004fb7f:	movsxd esp,DWORD PTR [rbp+0x20]
   14004fb82:	outs   dx,WORD PTR ds:[rsi]
   14004fb84:	jb     0x14004fba6
   14004fb86:	jae    0x14004fbfc
   14004fb88:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x74696e69
   14004fb90:	imul   esp,DWORD PTR [rcx+0x6c],0x74617a69
   14004fb97:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d
   14004fb9e:	add    BYTE PTR [rax],al
   14004fba0:	push   rdx
   14004fba1:	xor    BYTE PTR ss:[rdx],dh
   14004fba4:	xor    eax,0x202d0a0d
   14004fba9:	jo     0x14004fc20
   14004fbab:	jb     0x14004fc12
   14004fbad:	and    BYTE PTR [rsi+0x69],dh
   14004fbb0:	jb     0x14004fc26
   14004fbb2:	jne    0x14004fc15
   14004fbb4:	ins    BYTE PTR es:[rdi],dx
   14004fbb5:	and    BYTE PTR [rsi+0x75],ah
   14004fbb8:	outs   dx,BYTE PTR ds:[rsi]
   14004fbb9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004fbbd:	outs   dx,BYTE PTR ds:[rsi]
   14004fbbe:	and    BYTE PTR [rbx+0x61],ah
   14004fbc1:	ins    BYTE PTR es:[rdi],dx
   14004fbc2:	ins    BYTE PTR es:[rdi],dx
   14004fbc3:	or     eax,0xa
   14004fbc8:	push   rdx
   14004fbc9:	xor    BYTE PTR ss:[rdx],dh
   14004fbcc:	xor    al,0xd
   14004fbce:	or     ch,BYTE PTR [rip+0x746f6e20]        # 0x1b47469f4
   14004fbd4:	and    BYTE PTR [rbp+0x6e],ah
   14004fbd7:	outs   dx,DWORD PTR ds:[rsi]
   14004fbd8:	jne    0x14004fc41
   14004fbda:	push   0x61707320
   14004fbdf:	movsxd esp,DWORD PTR [rbp+0x20]
   14004fbe2:	outs   dx,WORD PTR ds:[rsi]
   14004fbe4:	jb     0x14004fc06
   14004fbe6:	pop    rdi
   14004fbe7:	outs   dx,DWORD PTR ds:[rsi]
   14004fbe8:	outs   dx,BYTE PTR ds:[rsi]
   14004fbe9:	gs js  0x14004fc55
   14004fbec:	je     0x14004fc1d
   14004fbee:	(bad)  
   14004fbef:	je     0x14004fc56
   14004fbf1:	js     0x14004fc5c
   14004fbf3:	je     0x14004fc15
   14004fbf5:	je     0x14004fc58
   14004fbf7:	(bad)  
   14004fbf8:	ins    BYTE PTR es:[rdi],dx
   14004fbf9:	gs or  eax,0xa
   14004fbff:	add    BYTE PTR [rdx+0x36],dl
   14004fc02:	xor    BYTE PTR [rcx],dh
   14004fc04:	cmp    DWORD PTR [rip+0x75202d0a],ecx        # 0x1b5252914
   14004fc0a:	outs   dx,BYTE PTR ds:[rsi]
   14004fc0b:	(bad)  
   14004fc0c:	(bad)  
   14004fc0d:	ins    BYTE PTR es:[rdi],dx
   14004fc0e:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14004fc13:	outs   dx,DWORD PTR ds:[rsi]
   14004fc14:	jo     0x14004fc7b
   14004fc16:	outs   dx,BYTE PTR ds:[rsi]
   14004fc17:	and    BYTE PTR [rbx+0x6f],ah
   14004fc1a:	outs   dx,BYTE PTR ds:[rsi]
   14004fc1b:	jae    0x14004fc8c
   14004fc1d:	ins    BYTE PTR es:[rdi],dx
   14004fc1e:	and    BYTE PTR gs:[rbp+riz*2+0x76],ah
   14004fc23:	imul   esp,DWORD PTR [rbx+0x65],0xa0d
   14004fc2a:	add    BYTE PTR [rax],al
   14004fc2c:	add    BYTE PTR [rax],al
   14004fc2e:	add    BYTE PTR [rax],al
   14004fc30:	push   rdx
   14004fc31:	xor    BYTE PTR ss:[rcx],dh
   14004fc34:	cmp    BYTE PTR [rip+0x75202d0a],cl        # 0x1b5252944
   14004fc3a:	outs   dx,BYTE PTR ds:[rsi]
   14004fc3b:	gs js  0x14004fcae
   14004fc3e:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14004fc43:	and    BYTE PTR [rax+0x65],ch
   14004fc46:	(bad)  
   14004fc47:	jo     0x14004fc69
   14004fc49:	gs jb  0x14004fcbe
   14004fc4c:	outs   dx,DWORD PTR ds:[rsi]
   14004fc4d:	jb     0x14004fc5c
   14004fc4f:	or     al,BYTE PTR [rax]
   14004fc51:	add    BYTE PTR [rax],al
   14004fc53:	add    BYTE PTR [rax],al
   14004fc55:	add    BYTE PTR [rax],al
   14004fc57:	add    BYTE PTR [rdx+0x36],dl
   14004fc5a:	xor    BYTE PTR [rcx],dh
   14004fc5c:	(bad)  
   14004fc5d:	or     eax,0x75202d0a
   14004fc62:	outs   dx,BYTE PTR ds:[rsi]
   14004fc63:	gs js  0x14004fcd6
   14004fc66:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14004fc6b:	and    BYTE PTR [rbp+0x75],ch
   14004fc6e:	ins    BYTE PTR es:[rdi],dx
   14004fc6f:	je     0x14004fcda
   14004fc71:	je     0x14004fcdb
   14004fc73:	jb     0x14004fcda
   14004fc75:	(bad)  
   14004fc76:	and    BYTE PTR fs:[rdi+rbp*2+0x63],ch
   14004fc7b:	imul   esp,DWORD PTR [rax],0x65
   14004fc7e:	jb     0x14004fcf2
   14004fc80:	outs   dx,DWORD PTR ds:[rsi]
   14004fc81:	jb     0x14004fc90
   14004fc83:	or     al,BYTE PTR [rax]
   14004fc85:	add    BYTE PTR [rax],al
   14004fc87:	add    BYTE PTR [rdx+0x36],dl
   14004fc8a:	xor    BYTE PTR [rcx],dh
   14004fc8c:	ss or  eax,0x6e202d0a
   14004fc92:	outs   dx,DWORD PTR ds:[rsi]
   14004fc93:	je     0x14004fcb5
   14004fc95:	outs   dx,BYTE PTR gs:[rsi]
   14004fc97:	outs   dx,DWORD PTR ds:[rsi]
   14004fc98:	jne    0x14004fd01
   14004fc9a:	push   0x61707320
   14004fc9f:	movsxd esp,DWORD PTR [rbp+0x20]
   14004fca2:	outs   dx,WORD PTR ds:[rsi]
   14004fca4:	jb     0x14004fcc6
   14004fca6:	je     0x14004fd10
   14004fca8:	jb     0x14004fd0f
   14004fcaa:	(bad)  
   14004fcab:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
   14004fcb0:	(bad)  
   14004fcb1:	or     eax,0xa
	...
   14004fcbe:	add    BYTE PTR [rax],al
   14004fcc0:	or     eax,0x6968540a
   14004fcc5:	jae    0x14004fce7
   14004fcc7:	(bad)  
   14004fcc8:	jo     0x14004fd3a
   14004fcca:	ins    BYTE PTR es:[rdi],dx
   14004fccb:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004fcd2:	and    BYTE PTR [rax+0x61],ch
   14004fcd5:	jae    0x14004fcf7
   14004fcd7:	jb     0x14004fd3e
   14004fcd9:	jno    0x14004fd50
   14004fcdb:	gs jae 0x14004fd52
   14004fcde:	gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
   14004fce4:	and    BYTE PTR [rdx+0x75],dl
   14004fce7:	outs   dx,BYTE PTR ds:[rsi]
   14004fce8:	je     0x14004fd53
   14004fcea:	ins    DWORD PTR es:[rdi],dx
   14004fceb:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14004fcf0:	je     0x14004fd57
   14004fcf2:	jb     0x14004fd61
   14004fcf4:	imul   ebp,DWORD PTR [rsi+0x61],0x69206574
   14004fcfb:	je     0x14004fd1d
   14004fcfd:	imul   ebp,DWORD PTR [rsi+0x20],0x75206e61
   14004fd04:	outs   dx,BYTE PTR ds:[rsi]
   14004fd05:	jne    0x14004fd7a
   14004fd07:	jne    0x14004fd6a
   14004fd09:	ins    BYTE PTR es:[rdi],dx
   14004fd0a:	and    BYTE PTR [rdi+0x61],dh
   14004fd0d:	jns    0x14004fd3d
   14004fd0f:	or     dl,BYTE PTR [rax+0x6c]
   14004fd12:	gs (bad) 
   14004fd14:	jae    0x14004fd7b
   14004fd16:	and    BYTE PTR [rbx+0x6f],ah
   14004fd19:	outs   dx,BYTE PTR ds:[rsi]
   14004fd1a:	je     0x14004fd7d
   14004fd1c:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
   14004fd20:	push   0x70612065
   14004fd25:	jo     0x14004fd93
   14004fd27:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004fd2e:	(bad)  
   14004fd2f:	jae    0x14004fd51
   14004fd31:	jae    0x14004fda8
   14004fd33:	jo     0x14004fda5
   14004fd35:	outs   dx,DWORD PTR ds:[rsi]
   14004fd36:	jb     0x14004fdac
   14004fd38:	and    BYTE PTR [rbp+riz*2+0x61],dh
   14004fd3c:	ins    DWORD PTR es:[rdi],dx
   14004fd3d:	and    BYTE PTR [rsi+0x6f],ah
   14004fd40:	jb     0x14004fd62
   14004fd42:	ins    DWORD PTR es:[rdi],dx
   14004fd43:	outs   dx,DWORD PTR ds:[rsi]
   14004fd44:	jb     0x14004fdab
   14004fd46:	and    BYTE PTR [rcx+0x6e],ch
   14004fd49:	outs   dx,WORD PTR ds:[rsi]
   14004fd4b:	jb     0x14004fdba
   14004fd4d:	(bad)  
   14004fd4e:	je     0x14004fdb9
   14004fd50:	outs   dx,DWORD PTR ds:[rsi]
   14004fd51:	outs   dx,BYTE PTR ds:[rsi]
   14004fd52:	cs or  eax,0xa
   14004fd58:	push   rdx
   14004fd59:	xor    BYTE PTR ss:[rax],dh
   14004fd5c:	cmp    DWORD PTR [rip+0x6e202d0a],ecx        # 0x1ae252a6c
   14004fd62:	outs   dx,DWORD PTR ds:[rsi]
   14004fd63:	je     0x14004fd85
   14004fd65:	outs   dx,BYTE PTR gs:[rsi]
   14004fd67:	outs   dx,DWORD PTR ds:[rsi]
   14004fd68:	jne    0x14004fdd1
   14004fd6a:	push   0x61707320
   14004fd6f:	movsxd esp,DWORD PTR [rbp+0x20]
   14004fd72:	outs   dx,WORD PTR ds:[rsi]
   14004fd74:	jb     0x14004fd96
   14004fd76:	outs   dx,BYTE PTR gs:[rsi]
   14004fd78:	jbe    0x14004fde3
   14004fd7a:	jb     0x14004fdeb
   14004fd7c:	outs   dx,BYTE PTR ds:[rsi]
   14004fd7d:	ins    DWORD PTR es:[rdi],dx
   14004fd7e:	outs   dx,BYTE PTR gs:[rsi]
   14004fd80:	je     0x14004fd8f
   14004fd82:	or     al,BYTE PTR [rax]
   14004fd84:	add    BYTE PTR [rax],al
   14004fd86:	add    BYTE PTR [rax],al
   14004fd88:	push   rdx
   14004fd89:	xor    BYTE PTR ss:[rax],dh
   14004fd8c:	cmp    BYTE PTR [rip+0x6e202d0a],cl        # 0x1ae252a9c
   14004fd92:	outs   dx,DWORD PTR ds:[rsi]
   14004fd93:	je     0x14004fdb5
   14004fd95:	outs   dx,BYTE PTR gs:[rsi]
   14004fd97:	outs   dx,DWORD PTR ds:[rsi]
   14004fd98:	jne    0x14004fe01
   14004fd9a:	push   0x61707320
   14004fd9f:	movsxd esp,DWORD PTR [rbp+0x20]
   14004fda2:	outs   dx,WORD PTR ds:[rsi]
   14004fda4:	jb     0x14004fdc6
   14004fda6:	(bad)  
   14004fda7:	jb     0x14004fe10
   14004fda9:	jne    0x14004fe18
   14004fdab:	outs   dx,BYTE PTR gs:[rsi]
   14004fdad:	je     0x14004fe22
   14004fdaf:	or     eax,0xa
   14004fdb4:	add    BYTE PTR [rax],al
   14004fdb6:	add    BYTE PTR [rax],al
   14004fdb8:	push   rdx
   14004fdb9:	xor    BYTE PTR ss:[rax],dh
   14004fdbc:	xor    cl,BYTE PTR [rip+0x66202d0a]        # 0x1a6252acc
   14004fdc2:	ins    BYTE PTR es:[rdi],dx
   14004fdc3:	outs   dx,DWORD PTR ds:[rsi]
   14004fdc4:	(bad)  
   14004fdc5:	je     0x14004fe30
   14004fdc7:	outs   dx,BYTE PTR ds:[rsi]
   14004fdc8:	and    BYTE PTR [eax+0x6f],dh
   14004fdcc:	imul   ebp,DWORD PTR [rsi+0x74],0x70757320
   14004fdd3:	jo     0x14004fe44
   14004fdd5:	jb     0x14004fe4b
   14004fdd7:	and    BYTE PTR [rsi+0x6f],ch
   14004fdda:	je     0x14004fdfc
   14004fddc:	ins    BYTE PTR es:[rdi],dx
   14004fddd:	outs   dx,DWORD PTR ds:[rsi]
   14004fdde:	(bad)  
   14004fddf:	fs gs fs or eax,0xa
   14004fde7:	add    BYTE PTR [rbp+0x69],cl
   14004fdea:	movsxd esi,DWORD PTR [rdx+0x6f]
   14004fded:	jae    0x14004fe5e
   14004fdef:	data16 je 0x14004fe12
   14004fdf2:	push   rsi
   14004fdf3:	imul   esi,DWORD PTR [rbx+0x75],0x43206c61
   14004fdfa:	sub    ebp,DWORD PTR [rbx]
   14004fdfc:	and    BYTE PTR [rdx+0x75],dl
   14004fdff:	outs   dx,BYTE PTR ds:[rsi]
   14004fe00:	je     0x14004fe6b
   14004fe02:	ins    DWORD PTR es:[rdi],dx
   14004fe03:	and    BYTE PTR gs:[rcx+rbp*2+0x62],cl
   14004fe08:	jb     0x14004fe6b
   14004fe0a:	jb     0x14004fe85
   14004fe0c:	add    BYTE PTR [rax],al
   14004fe0e:	add    BYTE PTR [rax],al
   14004fe10:	or     cl,BYTE PTR [rdx]
   14004fe12:	add    BYTE PTR [rax],al
   14004fe14:	cs cs add BYTE PTR cs:[rax+rsi*2],bh
   14004fe1a:	jb     0x14004fe8b
   14004fe1c:	addr32 jb 0x14004fe80
   14004fe1f:	ins    DWORD PTR es:[rdi],dx
   14004fe20:	and    BYTE PTR [rsi+0x61],ch
   14004fe23:	ins    DWORD PTR es:[rdi],dx
   14004fe24:	and    BYTE PTR gs:[rbp+0x6e],dh
   14004fe28:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14004fe2c:	outs   dx,BYTE PTR ds:[rsi]
   14004fe2d:	add    BYTE PTR ds:[rax],al
   14004fe30:	push   rdx
   14004fe31:	jne    0x14004fea1
   14004fe33:	je     0x14004fe9e
   14004fe35:	ins    DWORD PTR es:[rdi],dx
   14004fe36:	and    BYTE PTR gs:[rbp+0x72],al
   14004fe3a:	jb     0x14004feab
   14004fe3c:	jb     0x14004fe5f
   14004fe3e:	or     cl,BYTE PTR [rdx]
   14004fe40:	push   rax
   14004fe41:	jb     0x14004feb2
   14004fe43:	addr32 jb 0x14004fea7
   14004fe46:	ins    DWORD PTR es:[rdi],dx
   14004fe47:	cmp    ah,BYTE PTR [rax]
   14004fe49:	add    BYTE PTR [rax],al
   14004fe4b:	add    BYTE PTR [rax],al
   14004fe4d:	add    BYTE PTR [rax],al
   14004fe4f:	add    BYTE PTR [rsi],al
   14004fe51:	add    BYTE PTR [rax],al
   14004fe53:	(bad)  
   14004fe54:	add    BYTE PTR [rcx],al
   14004fe56:	add    BYTE PTR [rax],al
   14004fe58:	adc    BYTE PTR [rax],al
   14004fe5a:	add    eax,DWORD PTR [rsi]
   14004fe5c:	add    BYTE PTR [rsi],al
   14004fe5e:	add    dl,BYTE PTR [rax]
   14004fe60:	add    al,0x45
   14004fe62:	rex.RB
   14004fe63:	rex.RB add eax,0x5050505
   14004fe69:	xor    eax,0x500030
   14004fe6e:	add    BYTE PTR [rax],al
   14004fe70:	add    BYTE PTR [rax],ch
   14004fe72:	and    BYTE PTR [rax],bh
   14004fe74:	push   rax
   14004fe75:	pop    rax
   14004fe76:	(bad)  
   14004fe77:	or     BYTE PTR [rax],al
   14004fe79:	(bad)  
   14004fe7a:	xor    BYTE PTR [rax],dh
   14004fe7c:	push   rdi
   14004fe7d:	push   rax
   14004fe7e:	(bad)  
   14004fe7f:	add    BYTE PTR [rax],al
   14004fe81:	and    BYTE PTR [rax],ah
   14004fe83:	or     BYTE PTR [rax],al
   14004fe85:	add    BYTE PTR [rax],al
   14004fe87:	add    BYTE PTR [rax],cl
   14004fe89:	(bad)  
   14004fe8a:	push   0x60606060
   14004fe8f:	add    BYTE PTR [rax],al
   14004fe91:	js     0x14004ff03
   14004fe93:	js     0x14004ff0d
   14004fe95:	js     0x14004ff0f
   14004fe97:	or     BYTE PTR [rdi],al
   14004fe99:	or     BYTE PTR [rax],al
   14004fe9b:	add    BYTE PTR [rdi],al
   14004fe9d:	add    BYTE PTR [rax],cl
   14004fe9f:	or     BYTE PTR [rax],cl
   14004fea1:	add    BYTE PTR [rax],al
   14004fea3:	or     BYTE PTR [rax],al
   14004fea5:	or     BYTE PTR [rax],al
   14004fea7:	(bad)  
   14004fea8:	or     BYTE PTR [rax],al
   14004feaa:	add    BYTE PTR [rax],al
   14004feac:	add    BYTE PTR [rax],al
   14004feae:	add    BYTE PTR [rax],al
   14004feb0:	rex movabs ds:0xa3e0000000014006,eax
   14004feba:	(bad)  
   14004febb:	rex add DWORD PTR [rax],eax
   14004febe:	add    BYTE PTR [rax],al
   14004fec0:	add    DWORD PTR [rdx],eax
   14004fec2:	add    eax,DWORD PTR [rax*1+0x9080706]
   14004fec9:	or     cl,BYTE PTR [rbx]
   14004fecb:	or     al,0xd
   14004fecd:	(bad)  
   14004fece:	movups xmm2,XMMWORD PTR [rcx]
   14004fed1:	adc    dl,BYTE PTR [rbx]
   14004fed3:	adc    al,0x15
   14004fed5:	(bad)  
   14004fed6:	(bad)  
   14004fed7:	sbb    BYTE PTR [rcx],bl
   14004fed9:	sbb    bl,BYTE PTR [rbx]
   14004fedb:	sbb    al,0x1d
   14004fedd:	(bad)  
   14004fede:	(bad)  
   14004fedf:	and    BYTE PTR [rcx],ah
   14004fee1:	and    ah,BYTE PTR [rbx]
   14004fee3:	and    al,0x25
   14004fee5:	es (bad) 
   14004fee7:	sub    BYTE PTR [rcx],ch
   14004fee9:	sub    ch,BYTE PTR [rbx]
   14004feeb:	sub    al,0x2d
   14004feed:	cs (bad) 
   14004feef:	xor    BYTE PTR [rcx],dh
   14004fef1:	xor    dh,BYTE PTR [rbx]
   14004fef3:	xor    al,0x35
   14004fef5:	ss (bad) 
   14004fef7:	cmp    BYTE PTR [rcx],bh
   14004fef9:	cmp    bh,BYTE PTR [rbx]
   14004fefb:	cmp    al,0x3d
   14004fefd:	ds (bad) 
   14004feff:	rex
   14004ff00:	rex.B
   14004ff01:	rex.X
   14004ff02:	rex.XB
   14004ff03:	rex.R
   14004ff04:	rex.RB
   14004ff05:	rex.RX
   14004ff06:	rex.RXB
   14004ff07:	rex.W
   14004ff08:	rex.WB
   14004ff09:	rex.WX
   14004ff0a:	rex.WXB
   14004ff0b:	rex.WR
   14004ff0c:	rex.WRB
   14004ff0d:	rex.WRX
   14004ff0e:	rex.WRXB push r8
   14004ff10:	push   rcx
   14004ff11:	push   rdx
   14004ff12:	push   rbx
   14004ff13:	push   rsp
   14004ff14:	push   rbp
   14004ff15:	push   rsi
   14004ff16:	push   rdi
   14004ff17:	pop    rax
   14004ff18:	pop    rcx
   14004ff19:	pop    rdx
   14004ff1a:	pop    rbx
   14004ff1b:	pop    rsp
   14004ff1c:	pop    rbp
   14004ff1d:	pop    rsi
   14004ff1e:	pop    rdi
   14004ff1f:	(bad)  
   14004ff20:	(bad)  
   14004ff21:	(bad)
   14004ff26:	addr32 push 0x6c6b6a69
   14004ff2c:	ins    DWORD PTR es:[rdi],dx
   14004ff2d:	outs   dx,BYTE PTR ds:[rsi]
   14004ff2e:	outs   dx,DWORD PTR ds:[rsi]
   14004ff2f:	jo     0x14004ffa2
   14004ff31:	jb     0x14004ffa6
   14004ff33:	je     0x14004ffaa
   14004ff35:	jbe    0x14004ffae
   14004ff37:	js     0x14004ffb2
   14004ff39:	jp     0x14004ffb6
   14004ff3b:	jl     0x14004ffba
   14004ff3d:	jle    0x14004ffbe
   14004ff3f:	add    BYTE PTR [rip+0xbc00000],al        # 0x14bc4ff45
	...
   14004ff4d:	add    BYTE PTR [rax],al
   14004ff4f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c4ff55
	...
   14004ff5d:	add    BYTE PTR [rax],al
   14004ff5f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14004ff6d:	add    BYTE PTR [rax],al
   14004ff6f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14004ff7d:	add    BYTE PTR [rax],al
   14004ff7f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14004ff8d:	add    BYTE PTR [rax],al
   14004ff8f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14004ff9d:	add    BYTE PTR [rax],al
   14004ff9f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14004ffad:	add    BYTE PTR [rax],al
   14004ffaf:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14004ffbd:	add    BYTE PTR [rax],al
   14004ffbf:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14004ffcd:	add    BYTE PTR [rax],al
   14004ffcf:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14004ffdd:	add    BYTE PTR [rax],al
   14004ffdf:	add    BYTE PTR [rbp+0x2b],ah
   14004ffe2:	xor    BYTE PTR [rax],dh
   14004ffe4:	xor    BYTE PTR [rax],al
   14004ffe6:	add    BYTE PTR [rax],al
   14004ffe8:	movsxd eax,DWORD PTR [rax]
   14004ffea:	movsxd eax,DWORD PTR [rax]
   14004ffec:	jae    0x14004ffee
   14004ffee:	add    BYTE PTR [rax],al
   14004fff0:	push   rbp
   14004fff1:	add    BYTE PTR [rax+rax*1+0x46],dl
   14004fff5:	add    BYTE PTR [rip+0x3800],ch        # 0x1400537fb
   14004fffb:	add    BYTE PTR [rax],al
   14004fffd:	add    BYTE PTR [rax],al
   14004ffff:	add    BYTE PTR [rbp+0x0],dl
   140050002:	push   rsp
   140050003:	add    BYTE PTR [rsi+0x0],al
   140050006:	sub    eax,0x36003100
   14005000b:	add    BYTE PTR [rax+rax*1+0x45],cl
	...
   140050017:	add    BYTE PTR [rbp+0x0],dl
   14005001a:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14005001e:	rex.XB add BYTE PTR [r15+0x0],cl
   140050022:	add    BYTE PTR [rbp+0x0],r8b
   140050026:	add    BYTE PTR [rax],al
   140050028:	add    BYTE PTR cs:[rbx+0x0],ah
   14005002c:	outs   dx,DWORD PTR ds:[rsi]
   14005002d:	add    BYTE PTR [rbp+0x0],ch
	...
   140050038:	add    BYTE PTR cs:[rdx+0x0],ah
   14005003c:	(bad)  
   14005003d:	add    BYTE PTR [rax+rax*1+0x0],dh
   140050041:	add    BYTE PTR [rax],al
   140050043:	add    BYTE PTR [rax],al
   140050045:	add    BYTE PTR [rax],al
   140050047:	add    BYTE PTR [rsi],ch
   140050049:	add    BYTE PTR [rbx+0x0],ah
   14005004c:	ins    DWORD PTR es:[rdi],dx
   14005004d:	add    BYTE PTR [rax+rax*1+0x0],ah
   140050051:	add    BYTE PTR [rax],al
   140050053:	add    BYTE PTR [rax],al
   140050055:	add    BYTE PTR [rax],al
   140050057:	add    BYTE PTR [rsi],ch
   140050059:	add    BYTE PTR [rbp+0x0],ah
   14005005c:	js     0x14005005e
   14005005e:	add    BYTE PTR gs:[rax],al
   140050061:	add    BYTE PTR [rax],al
   140050063:	add    BYTE PTR [rax],al
   140050065:	add    BYTE PTR [rax],al
   140050067:	add    BYTE PTR [rcx+0x6c],cl
   14005006a:	ins    BYTE PTR es:[rdi],dx
   14005006b:	gs addr32 (bad) 
   14005006e:	ins    BYTE PTR es:[rdi],dx
   14005006f:	and    BYTE PTR [rdx+0x79],ah
   140050072:	je     0x1400500d9
   140050074:	and    BYTE PTR [rbx+0x65],dh
   140050077:	jno    0x1400500ee
   140050079:	outs   dx,BYTE PTR gs:[rsi]
   14005007b:	movsxd esp,DWORD PTR [rbp+0x0]
   14005007e:	add    BYTE PTR [rax],al
   140050080:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140050088:	jns    0x1400500aa
   14005008a:	outs   dx,BYTE PTR ds:[rsi]
   14005008b:	outs   dx,DWORD PTR ds:[rsi]
   14005008c:	je     0x1400500ae
   14005008e:	gs ins DWORD PTR es:[rdi],dx
   140050090:	jo     0x140050106
   140050092:	jns    0x140050094
   140050094:	add    BYTE PTR [rax],al
   140050096:	add    BYTE PTR [rax],al
   140050098:	rex.RX jne 0x140050109
   14005009b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14005009f:	outs   dx,BYTE PTR ds:[rsi]
   1400500a0:	and    BYTE PTR [rsi+0x6f],ch
   1400500a3:	je     0x1400500c5
   1400500a5:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
   1400500ac:	outs   dx,BYTE PTR ds:[rsi]
   1400500ad:	je     0x140050114
   1400500af:	add    BYTE PTR fs:[rax],al
   1400500b2:	add    BYTE PTR [rax],al
   1400500b4:	add    BYTE PTR [rax],al
   1400500b6:	add    BYTE PTR [rax],al
   1400500b8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400500ba:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   1400500be:	imul   esi,DWORD PTR [rbx+0x20],0x61
   1400500c2:	jbe    0x140050125
   1400500c4:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400500cc:	add    BYTE PTR [rax],al
   1400500ce:	add    BYTE PTR [rax],al
   1400500d0:	imul   r13d,DWORD PTR [rbp+r12*2+0x6e],0x20656d61
   1400500d9:	je     0x14005014a
   1400500db:	outs   dx,DWORD PTR ds:[rsi]
   1400500dc:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400500e0:	add    BYTE PTR [eax],al
   1400500e3:	add    BYTE PTR [rax],al
   1400500e5:	add    BYTE PTR [rax],al
   1400500e7:	add    BYTE PTR [rdx+0x65],dl
   1400500ea:	jae    0x14005015b
   1400500ec:	jne    0x140050160
   1400500ee:	movsxd esp,DWORD PTR [rbp+0x20]
   1400500f1:	fs gs (bad) 
   1400500f4:	fs ins BYTE PTR es:[rdi],dx
   1400500f6:	outs   dx,DWORD PTR ds:[rsi]
   1400500f7:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400500fa:	(bad)  
   1400500fb:	jbe    0x14005016c
   1400500fd:	imul   esp,DWORD PTR [rbp+riz*2+0x64],0x0
   140050105:	add    BYTE PTR [rax],al
   140050107:	add    BYTE PTR [rdx+0x65],dl
   14005010a:	jae    0x140050181
   14005010c:	ins    BYTE PTR es:[rdi],dx
   14005010d:	je     0x14005012f
   14005010f:	je     0x140050180
   140050111:	outs   dx,DWORD PTR ds:[rsi]
   140050112:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140050116:	add    BYTE PTR gs:[eax],al
   14005011a:	add    BYTE PTR [rax],al
   14005011c:	add    BYTE PTR [rax],al
   14005011e:	add    BYTE PTR [rax],al
   140050120:	rex.R outs dx,DWORD PTR ds:[rsi]
   140050122:	ins    DWORD PTR es:[rdi],dx
   140050123:	(bad)  
   140050124:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
   14005012b:	jb     0x14005012d
   14005012d:	add    BYTE PTR [rax],al
   14005012f:	add    BYTE PTR [rdx+0x72],al
   140050132:	outs   dx,DWORD PTR ds:[rsi]
   140050133:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   140050137:	jo     0x1400501a2
   140050139:	jo     0x1400501a0
   14005013b:	add    BYTE PTR [rax],al
   14005013d:	add    BYTE PTR [rax],al
   14005013f:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   140050143:	and    BYTE PTR [rbp+0x61],ch
   140050146:	outs   dx,BYTE PTR ds:[rsi]
   140050147:	jns    0x140050169
   140050149:	ins    BYTE PTR es:[rdi],dx
   14005014a:	imul   ebp,DWORD PTR [rsi+0x6b],0x52000073
   140050151:	gs (bad) 
   140050153:	fs sub eax,0x796c6e6f
   140050159:	and    BYTE PTR [rsi+0x69],ah
   14005015c:	ins    BYTE PTR es:[rdi],dx
   14005015d:	and    BYTE PTR gs:[rbx+0x79],dh
   140050161:	jae    0x1400501d7
   140050163:	gs ins DWORD PTR es:[rdi],dx
   140050165:	add    BYTE PTR [rax],al
   140050167:	add    BYTE PTR [rcx+0x6e],cl
   14005016a:	jbe    0x1400501cd
   14005016c:	ins    BYTE PTR es:[rdi],dx
   14005016d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6b6565
   140050175:	add    BYTE PTR [rax],al
   140050177:	add    BYTE PTR [rsi+0x6f],cl
   14005017a:	and    BYTE PTR [rbx+0x70],dh
   14005017d:	(bad)  
   14005017e:	movsxd esp,DWORD PTR [rbp+0x20]
   140050181:	ins    BYTE PTR es:[rdi],dx
   140050182:	gs data16 je 0x1400501a6
   140050186:	outs   dx,DWORD PTR ds:[rsi]
   140050187:	outs   dx,BYTE PTR ds:[rsi]
   140050188:	and    BYTE PTR [rbp+riz*2+0x76],ah
   14005018c:	imul   esp,DWORD PTR [rbx+0x65],0x6c694600
   140050193:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140050198:	and    BYTE PTR [rcx+riz*2+0x72],ch
   14005019c:	add    BYTE PTR gs:[eax],al
   1400501a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400501a2:	(bad)  
   1400501a3:	jo     0x140050215
   1400501a5:	jb     0x140050216
   1400501a7:	jo     0x14005021b
   1400501a9:	imul   esp,DWORD PTR [rcx+0x74],0x2f492065
   1400501b0:	rex.WRXB and BYTE PTR [r11+0x6f],r12b
   1400501b4:	outs   dx,BYTE PTR ds:[rsi]
   1400501b5:	je     0x140050229
   1400501b7:	outs   dx,DWORD PTR ds:[rsi]
   1400501b8:	ins    BYTE PTR es:[rdi],dx
   1400501b9:	and    BYTE PTR [rdi+0x70],ch
   1400501bc:	gs jb  0x140050220
   1400501bf:	je     0x14005022a
   1400501c1:	outs   dx,DWORD PTR ds:[rsi]
   1400501c2:	outs   dx,BYTE PTR ds:[rsi]
   1400501c3:	add    BYTE PTR [rax],al
   1400501c5:	add    BYTE PTR [rax],al
   1400501c7:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   1400501cb:	and    BYTE PTR [rbp+0x61],ch
   1400501ce:	outs   dx,BYTE PTR ds:[rsi]
   1400501cf:	jns    0x1400501f1
   1400501d1:	outs   dx,DWORD PTR ds:[rsi]
   1400501d2:	jo     0x140050239
   1400501d4:	outs   dx,BYTE PTR ds:[rsi]
   1400501d5:	and    BYTE PTR [rsi+0x69],ah
   1400501d8:	ins    BYTE PTR es:[rdi],dx
   1400501d9:	gs jae 0x1400501dc
   1400501dc:	add    BYTE PTR [rax],al
   1400501de:	add    BYTE PTR [rax],al
   1400501e0:	push   rsp
   1400501e1:	outs   dx,DWORD PTR ds:[rsi]
   1400501e2:	outs   dx,DWORD PTR ds:[rsi]
   1400501e3:	and    BYTE PTR [rbp+0x61],ch
   1400501e6:	outs   dx,BYTE PTR ds:[rsi]
   1400501e7:	jns    0x140050209
   1400501e9:	outs   dx,DWORD PTR ds:[rsi]
   1400501ea:	jo     0x140050251
   1400501ec:	outs   dx,BYTE PTR ds:[rsi]
   1400501ed:	and    BYTE PTR [rsi+0x69],ah
   1400501f0:	ins    BYTE PTR es:[rdi],dx
   1400501f1:	gs jae 0x140050214
   1400501f4:	imul   ebp,DWORD PTR [rsi+0x20],0x74737973
   1400501fb:	gs ins DWORD PTR es:[rdi],dx
   1400501fd:	add    BYTE PTR [rax],al
   1400501ff:	add    BYTE PTR [rcx+0x6e],cl
   140050202:	jbe    0x140050265
   140050204:	ins    BYTE PTR es:[rdi],dx
   140050205:	imul   esp,DWORD PTR [rax+riz*1+0x61],0x6d756772
   14005020d:	outs   dx,BYTE PTR gs:[rsi]
   14005020f:	je     0x140050211
   140050211:	add    BYTE PTR [rax],al
   140050213:	add    BYTE PTR [rax],al
   140050215:	add    BYTE PTR [rax],al
   140050217:	add    BYTE PTR [rcx+0x73],cl
   14005021a:	and    BYTE PTR [rcx+0x20],ah
   14005021d:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   140050225:	jns    0x140050227
   140050227:	add    BYTE PTR [rsi+0x6f],cl
   14005022a:	je     0x14005024c
   14005022c:	(bad)  
   14005022d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140050231:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140050236:	jns    0x140050238
   140050238:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14005023a:	and    BYTE PTR [rbx+0x75],dh
   14005023d:	movsxd ebp,DWORD PTR [rax+0x20]
   140050240:	fs gs jbe 0x1400502ad
   140050244:	movsxd esp,DWORD PTR [rbp+0x0]
   140050247:	add    BYTE PTR [rcx+0x6d],cl
   14005024a:	jo     0x1400502be
   14005024c:	outs   dx,DWORD PTR ds:[rsi]
   14005024d:	jo     0x1400502b4
   14005024f:	jb     0x140050271
   140050251:	ins    BYTE PTR es:[rdi],dx
   140050252:	imul   ebp,DWORD PTR [rsi+0x6b],0x46000000
   140050259:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x73697865
   140050261:	je     0x1400502d6
   140050263:	add    BYTE PTR [rax],al
   140050265:	add    BYTE PTR [rax],al
   140050267:	add    BYTE PTR [rdx+0x65],dl
   14005026a:	jae    0x1400502db
   14005026c:	jne    0x1400502e0
   14005026e:	movsxd esp,DWORD PTR [rbp+0x20]
   140050271:	fs gs jbe 0x1400502de
   140050275:	movsxd esp,DWORD PTR [rbp+0x0]
   140050278:	push   rbp
   140050279:	outs   dx,BYTE PTR ds:[rsi]
   14005027a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14005027e:	outs   dx,BYTE PTR ds:[rsi]
   14005027f:	and    BYTE PTR [rbp+0x72],ah
   140050282:	jb     0x1400502f3
   140050284:	jb     0x140050286
   140050286:	add    BYTE PTR [rax],al
   140050288:	rex.X (bad) 
   14005028a:	and    BYTE PTR fs:[rcx+0x64],ah
   14005028e:	fs jb  0x1400502f6
   140050291:	jae    0x140050306
   140050293:	add    BYTE PTR [rax],al
   140050295:	add    BYTE PTR [rax],al
   140050297:	add    BYTE PTR [rax+0x65],dl
   14005029a:	jb     0x140050309
   14005029c:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   1400502a3:	fs outs dx,BYTE PTR gs:[rsi]
   1400502a6:	imul   esp,DWORD PTR [rbp+0x64],0x0
   1400502ad:	add    BYTE PTR [rax],al
   1400502af:	add    BYTE PTR [rsi+0x6f],cl
   1400502b2:	je     0x1400502d4
   1400502b4:	outs   dx,BYTE PTR gs:[rsi]
   1400502b6:	outs   dx,DWORD PTR ds:[rsi]
   1400502b7:	jne    0x140050320
   1400502b9:	push   0x61707320
   1400502be:	movsxd esp,DWORD PTR [rbp+0x0]
   1400502c1:	add    BYTE PTR [rax],al
   1400502c3:	add    BYTE PTR [rax],al
   1400502c5:	add    BYTE PTR [rax],al
   1400502c7:	add    BYTE PTR [rdx+0x65],dl
   1400502ca:	jae    0x14005033b
   1400502cc:	jne    0x140050340
   1400502ce:	movsxd esp,DWORD PTR [rbp+0x20]
   1400502d1:	je     0x140050338
   1400502d3:	ins    DWORD PTR es:[rdi],dx
   1400502d4:	jo     0x140050345
   1400502d6:	jb     0x140050339
   1400502d8:	jb     0x140050343
   1400502da:	ins    BYTE PTR es:[rdi],dx
   1400502db:	jns    0x1400502fd
   1400502dd:	jne    0x14005034d
   1400502df:	(bad)  
   1400502e0:	jbe    0x140050343
   1400502e2:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400502ea:	add    BYTE PTR [rax],al
   1400502ec:	add    BYTE PTR [rax],al
   1400502ee:	add    BYTE PTR [rax],al
   1400502f0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400502f2:	and    BYTE PTR [rbx+0x68],ah
   1400502f5:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   1400502fd:	gs jae 0x140050373
   140050300:	gs jae 0x140050303
   140050303:	add    BYTE PTR [rax],al
   140050305:	add    BYTE PTR [rax],al
   140050307:	add    BYTE PTR [rdx+0x61],al
   14005030a:	and    BYTE PTR fs:[rsi+0x69],ah
   14005030e:	ins    BYTE PTR es:[rdi],dx
   14005030f:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   140050314:	movsxd esi,DWORD PTR [rdx+0x69]
   140050317:	jo     0x14005038d
   140050319:	outs   dx,DWORD PTR ds:[rsi]
   14005031a:	jb     0x14005031c
   14005031c:	add    BYTE PTR [rax],al
   14005031e:	add    BYTE PTR [rax],al
   140050320:	rex.RB js 0x140050388
   140050323:	movsxd esp,DWORD PTR [rax]
   140050325:	outs   dx,WORD PTR ds:[rsi]
   140050327:	jb     0x140050396
   140050329:	(bad)  
   14005032a:	je     0x14005034c
   14005032c:	gs jb  0x1400503a1
   14005032f:	outs   dx,DWORD PTR ds:[rsi]
   140050330:	jb     0x140050332
   140050332:	add    BYTE PTR [rax],al
   140050334:	add    BYTE PTR [rax],al
   140050336:	add    BYTE PTR [rax],al
   140050338:	rex.B jb 0x1400503a2
   14005033b:	and    BYTE PTR [rcx+rbp*2+0x73],ch
   14005033f:	je     0x140050361
   140050341:	je     0x1400503b2
   140050343:	outs   dx,DWORD PTR ds:[rsi]
   140050344:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140050348:	add    BYTE PTR [eax],al
   14005034b:	add    BYTE PTR [rax],al
   14005034d:	add    BYTE PTR [rax],al
   14005034f:	add    BYTE PTR [rsi+0x6f],cl
   140050352:	and    BYTE PTR [rbx+0x75],dh
   140050355:	movsxd ebp,DWORD PTR [rax+0x20]
   140050358:	fs gs jbe 0x1400503c5
   14005035c:	movsxd esp,DWORD PTR [rbp+0x20]
   14005035f:	outs   dx,DWORD PTR ds:[rsi]
   140050360:	jb     0x140050382
   140050362:	(bad)  
   140050363:	fs fs jb 0x1400503cc
   140050367:	jae    0x1400503dc
   140050369:	add    BYTE PTR [rax],al
   14005036b:	add    BYTE PTR [rax],al
   14005036d:	add    BYTE PTR [rax],al
   14005036f:	add    BYTE PTR [rcx+0x6e],cl
   140050372:	jo     0x1400503e9
   140050374:	je     0x1400503a5
   140050376:	outs   dx,DWORD PTR ds:[rsi]
   140050377:	jne    0x1400503ed
   140050379:	jo     0x1400503f0
   14005037b:	je     0x14005039d
   14005037d:	gs jb  0x1400503f2
   140050380:	outs   dx,DWORD PTR ds:[rsi]
   140050381:	jb     0x140050383
   140050383:	add    BYTE PTR [rax],al
   140050385:	add    BYTE PTR [rax],al
   140050387:	add    BYTE PTR [rcx+0x6e],cl
   14005038a:	je     0x1400503f1
   14005038c:	jb     0x140050400
   14005038e:	jne    0x140050400
   140050390:	je     0x1400503f7
   140050392:	and    BYTE PTR fs:[rsi+0x75],ah
   140050396:	outs   dx,BYTE PTR ds:[rsi]
   140050397:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14005039b:	outs   dx,BYTE PTR ds:[rsi]
   14005039c:	and    BYTE PTR [rbx+0x61],ah
   14005039f:	ins    BYTE PTR es:[rdi],dx
   1400503a0:	ins    BYTE PTR es:[rdi],dx
   1400503a1:	add    BYTE PTR [rax],al
   1400503a3:	add    BYTE PTR [rax],al
   1400503a5:	add    BYTE PTR [rax],al
   1400503a7:	add    BYTE PTR [rsi+0x6f],cl
   1400503aa:	and    BYTE PTR [rbx+0x75],dh
   1400503ad:	movsxd ebp,DWORD PTR [rax+0x20]
   1400503b0:	jo     0x140050424
   1400503b2:	outs   dx,DWORD PTR ds:[rsi]
   1400503b3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400503b6:	jae    0x1400503b8
   1400503b8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400503ba:	and    BYTE PTR [rbx+0x75],dh
   1400503bd:	movsxd ebp,DWORD PTR [rax+0x20]
   1400503c0:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   1400503c7:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   1400503cb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400503d0:	jns    0x1400503d2
   1400503d2:	add    BYTE PTR [rax],al
   1400503d4:	add    BYTE PTR [rax],al
   1400503d6:	add    BYTE PTR [rax],al
   1400503d8:	rex.WRXB jo 0x140050440
   1400503db:	jb     0x14005043e
   1400503dd:	je     0x140050448
   1400503df:	outs   dx,DWORD PTR ds:[rsi]
   1400503e0:	outs   dx,BYTE PTR ds:[rsi]
   1400503e1:	and    BYTE PTR [rsi+0x6f],ch
   1400503e4:	je     0x140050406
   1400503e6:	jo     0x14005044d
   1400503e8:	jb     0x140050457
   1400503ea:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6f4e0064
   1400503f2:	and    BYTE PTR [rbp+0x72],ah
   1400503f5:	jb     0x140050466
   1400503f7:	jb     0x1400503f9
   1400503f9:	add    BYTE PTR [rax],al
   1400503fb:	add    BYTE PTR [rax],al
   1400503fd:	add    BYTE PTR [rax],al
   1400503ff:	add    BYTE PTR [rdi+0x65],al
   140050402:	je     0x140050454
   140050404:	jb     0x140050475
   140050406:	movsxd esp,DWORD PTR [rbp+0x73]
   140050409:	jae    0x140050462
   14005040b:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   140050412:	(bad)  
   140050413:	je     0x14005047e
   140050415:	outs   dx,DWORD PTR ds:[rsi]
   140050416:	outs   dx,BYTE PTR ds:[rsi]
   140050417:	add    BYTE PTR [rdi+0x65],al
   14005041a:	je     0x140050471
   14005041c:	jae    0x140050483
   14005041e:	jb     0x14005046f
   140050420:	(bad)  
   140050421:	push   0x65
   140050423:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   140050427:	outs   dx,WORD PTR ds:[rsi]
   140050429:	jb     0x140050498
   14005042b:	(bad)  
   14005042c:	je     0x140050497
   14005042e:	outs   dx,DWORD PTR ds:[rsi]
   14005042f:	outs   dx,BYTE PTR ds:[rsi]
   140050430:	add    BYTE PTR [r8],al
   140050433:	add    BYTE PTR [rax],al
   140050435:	add    BYTE PTR [rax],al
   140050437:	add    BYTE PTR [rdi+0x65],al
   14005043a:	je     0x140050488
   14005043c:	(bad)  
   14005043d:	jae    0x1400504b3
   14005043f:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140050444:	gs push rax
   140050446:	outs   dx,DWORD PTR ds:[rsi]
   140050447:	jo     0x1400504be
   140050449:	jo     0x14005044b
   14005044b:	add    BYTE PTR [rax],al
   14005044d:	add    BYTE PTR [rax],al
   14005044f:	add    BYTE PTR [rdi+0x65],al
   140050452:	je     0x140050495
   140050454:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140050458:	gs push rdi
   14005045a:	imul   ebp,DWORD PTR [rsi+0x64],0x4d00776f
   140050461:	gs jae 0x1400504d7
   140050464:	(bad)  
   140050465:	rex.X outs dx,DWORD PTR gs:[esi]
   140050469:	js     0x1400504ac
   14005046b:	add    BYTE PTR [rax],al
   14005046d:	add    BYTE PTR [rax],al
   14005046f:	add    BYTE PTR [rbp+0x53],dl
   140050472:	rex.RB push r10
   140050474:	xor    esi,DWORD PTR [rdx]
   140050476:	cs rex.R
   140050478:	rex.WR
   140050479:	rex.WR add BYTE PTR [rax],r8b
   14005047c:	add    BYTE PTR [rax],al
   14005047e:	add    BYTE PTR [rax],al
   140050480:	(bad)  
   140050481:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   140050488:	add    BYTE PTR [rax],dl
   14005048a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   140050490:	adc    al,0x5
   140050492:	add    eax,0x85454545
   140050497:	test   DWORD PTR [rbp+0x30000005],eax
   14005049d:	xor    BYTE PTR [rax+0x888050],al
   1400504a3:	or     BYTE PTR [rax],al
   1400504a5:	sub    BYTE PTR [rdi],ah
   1400504a7:	cmp    BYTE PTR [rax+0x57],dl
   1400504aa:	add    BYTE PTR [rax],0x7
   1400504ad:	add    BYTE PTR [rdi],dh
   1400504af:	xor    BYTE PTR [rax],dh
   1400504b1:	push   rax
   1400504b2:	push   rax
   1400504b3:	mov    BYTE PTR [rax],al
   1400504b5:	add    BYTE PTR [rax],al
   1400504b7:	and    BYTE PTR [rax],ch
   1400504b9:	or     BYTE PTR [rax+0x8080],0x0
   1400504c0:	(bad)  
   1400504c1:	push   0x68686860
   1400504c6:	or     BYTE PTR [rax],cl
   1400504c8:	(bad)  
   1400504c9:	js     0x14005053b
   1400504cb:	jo     0x140050544
   1400504cd:	jo     0x14005053f
   1400504cf:	or     BYTE PTR [rax],cl
   1400504d1:	add    BYTE PTR [rax],al
   1400504d3:	or     BYTE PTR [rax],al
   1400504d5:	or     BYTE PTR [rax],al
   1400504d7:	(bad)  
   1400504d8:	or     BYTE PTR [rax],al
	...
   1400505de:	add    BYTE PTR [rax],al
   1400505e0:	and    BYTE PTR [rax],al
   1400505e2:	and    BYTE PTR [rax],al
   1400505e4:	and    BYTE PTR [rax],al
   1400505e6:	and    BYTE PTR [rax],al
   1400505e8:	and    BYTE PTR [rax],al
   1400505ea:	and    BYTE PTR [rax],al
   1400505ec:	and    BYTE PTR [rax],al
   1400505ee:	and    BYTE PTR [rax],al
   1400505f0:	and    BYTE PTR [rax],al
   1400505f2:	sub    BYTE PTR [rax],al
   1400505f4:	sub    BYTE PTR [rax],al
   1400505f6:	sub    BYTE PTR [rax],al
   1400505f8:	sub    BYTE PTR [rax],al
   1400505fa:	sub    BYTE PTR [rax],al
   1400505fc:	and    BYTE PTR [rax],al
   1400505fe:	and    BYTE PTR [rax],al
   140050600:	and    BYTE PTR [rax],al
   140050602:	and    BYTE PTR [rax],al
   140050604:	and    BYTE PTR [rax],al
   140050606:	and    BYTE PTR [rax],al
   140050608:	and    BYTE PTR [rax],al
   14005060a:	and    BYTE PTR [rax],al
   14005060c:	and    BYTE PTR [rax],al
   14005060e:	and    BYTE PTR [rax],al
   140050610:	and    BYTE PTR [rax],al
   140050612:	and    BYTE PTR [rax],al
   140050614:	and    BYTE PTR [rax],al
   140050616:	and    BYTE PTR [rax],al
   140050618:	and    BYTE PTR [rax],al
   14005061a:	and    BYTE PTR [rax],al
   14005061c:	and    BYTE PTR [rax],al
   14005061e:	and    BYTE PTR [rax],al
   140050620:	rex.W add BYTE PTR [rax],dl
   140050623:	add    BYTE PTR [rax],dl
   140050625:	add    BYTE PTR [rax],dl
   140050627:	add    BYTE PTR [rax],dl
   140050629:	add    BYTE PTR [rax],dl
   14005062b:	add    BYTE PTR [rax],dl
   14005062d:	add    BYTE PTR [rax],dl
   14005062f:	add    BYTE PTR [rax],dl
   140050631:	add    BYTE PTR [rax],dl
   140050633:	add    BYTE PTR [rax],dl
   140050635:	add    BYTE PTR [rax],dl
   140050637:	add    BYTE PTR [rax],dl
   140050639:	add    BYTE PTR [rax],dl
   14005063b:	add    BYTE PTR [rax],dl
   14005063d:	add    BYTE PTR [rax],dl
   14005063f:	add    BYTE PTR [rax+rax*1+0x840084],al
   140050646:	test   BYTE PTR [rax],al
   140050648:	test   BYTE PTR [rax],al
   14005064a:	test   BYTE PTR [rax],al
   14005064c:	test   BYTE PTR [rax],al
   14005064e:	test   BYTE PTR [rax],al
   140050650:	test   BYTE PTR [rax],al
   140050652:	test   BYTE PTR [rax],al
   140050654:	adc    BYTE PTR [rax],al
   140050656:	adc    BYTE PTR [rax],al
   140050658:	adc    BYTE PTR [rax],al
   14005065a:	adc    BYTE PTR [rax],al
   14005065c:	adc    BYTE PTR [rax],al
   14005065e:	adc    BYTE PTR [rax],al
   140050660:	adc    BYTE PTR [rax],al
   140050662:	add    DWORD PTR [rax],0x810081
   140050668:	add    DWORD PTR [rax],0x810081
   14005066e:	add    DWORD PTR [rax],eax
   140050670:	add    DWORD PTR [rax],eax
   140050672:	add    DWORD PTR [rax],eax
   140050674:	add    DWORD PTR [rax],eax
   140050676:	add    DWORD PTR [rax],eax
   140050678:	add    DWORD PTR [rax],eax
   14005067a:	add    DWORD PTR [rax],eax
   14005067c:	add    DWORD PTR [rax],eax
   14005067e:	add    DWORD PTR [rax],eax
   140050680:	add    DWORD PTR [rax],eax
   140050682:	add    DWORD PTR [rax],eax
   140050684:	add    DWORD PTR [rax],eax
   140050686:	add    DWORD PTR [rax],eax
   140050688:	add    DWORD PTR [rax],eax
   14005068a:	add    DWORD PTR [rax],eax
   14005068c:	add    DWORD PTR [rax],eax
   14005068e:	add    DWORD PTR [rax],eax
   140050690:	add    DWORD PTR [rax],eax
   140050692:	add    DWORD PTR [rax],eax
   140050694:	add    DWORD PTR [rax],eax
   140050696:	adc    BYTE PTR [rax],al
   140050698:	adc    BYTE PTR [rax],al
   14005069a:	adc    BYTE PTR [rax],al
   14005069c:	adc    BYTE PTR [rax],al
   14005069e:	adc    BYTE PTR [rax],al
   1400506a0:	adc    BYTE PTR [rax],al
   1400506a2:	(bad)  
   1400506a3:	add    BYTE PTR [rdx-0x7dff7e00],al
   1400506a9:	add    BYTE PTR [rdx+0x2008200],al
   1400506af:	add    BYTE PTR [rdx],al
   1400506b1:	add    BYTE PTR [rdx],al
   1400506b3:	add    BYTE PTR [rdx],al
   1400506b5:	add    BYTE PTR [rdx],al
   1400506b7:	add    BYTE PTR [rdx],al
   1400506b9:	add    BYTE PTR [rdx],al
   1400506bb:	add    BYTE PTR [rdx],al
   1400506bd:	add    BYTE PTR [rdx],al
   1400506bf:	add    BYTE PTR [rdx],al
   1400506c1:	add    BYTE PTR [rdx],al
   1400506c3:	add    BYTE PTR [rdx],al
   1400506c5:	add    BYTE PTR [rdx],al
   1400506c7:	add    BYTE PTR [rdx],al
   1400506c9:	add    BYTE PTR [rdx],al
   1400506cb:	add    BYTE PTR [rdx],al
   1400506cd:	add    BYTE PTR [rdx],al
   1400506cf:	add    BYTE PTR [rdx],al
   1400506d1:	add    BYTE PTR [rdx],al
   1400506d3:	add    BYTE PTR [rdx],al
   1400506d5:	add    BYTE PTR [rax],dl
   1400506d7:	add    BYTE PTR [rax],dl
   1400506d9:	add    BYTE PTR [rax],dl
   1400506db:	add    BYTE PTR [rax],dl
   1400506dd:	add    BYTE PTR [rax],ah
	...
   1400507df:	add    BYTE PTR [rax],al
   1400507e1:	add    BYTE PTR [rax],ah
   1400507e3:	add    BYTE PTR [rax],ah
   1400507e5:	add    BYTE PTR [rax],ah
   1400507e7:	add    BYTE PTR [rax],ah
   1400507e9:	add    BYTE PTR [rax],ah
   1400507eb:	add    BYTE PTR [rax],ah
   1400507ed:	add    BYTE PTR [rax],ah
   1400507ef:	add    BYTE PTR [rax],ah
   1400507f1:	add    BYTE PTR [rax],ah
   1400507f3:	add    BYTE PTR [rax+0x0],ch
   1400507f6:	sub    BYTE PTR [rax],al
   1400507f8:	sub    BYTE PTR [rax],al
   1400507fa:	sub    BYTE PTR [rax],al
   1400507fc:	sub    BYTE PTR [rax],al
   1400507fe:	and    BYTE PTR [rax],al
   140050800:	and    BYTE PTR [rax],al
   140050802:	and    BYTE PTR [rax],al
   140050804:	and    BYTE PTR [rax],al
   140050806:	and    BYTE PTR [rax],al
   140050808:	and    BYTE PTR [rax],al
   14005080a:	and    BYTE PTR [rax],al
   14005080c:	and    BYTE PTR [rax],al
   14005080e:	and    BYTE PTR [rax],al
   140050810:	and    BYTE PTR [rax],al
   140050812:	and    BYTE PTR [rax],al
   140050814:	and    BYTE PTR [rax],al
   140050816:	and    BYTE PTR [rax],al
   140050818:	and    BYTE PTR [rax],al
   14005081a:	and    BYTE PTR [rax],al
   14005081c:	and    BYTE PTR [rax],al
   14005081e:	and    BYTE PTR [rax],al
   140050820:	and    BYTE PTR [rax],al
   140050822:	rex.W add BYTE PTR [rax],dl
   140050825:	add    BYTE PTR [rax],dl
   140050827:	add    BYTE PTR [rax],dl
   140050829:	add    BYTE PTR [rax],dl
   14005082b:	add    BYTE PTR [rax],dl
   14005082d:	add    BYTE PTR [rax],dl
   14005082f:	add    BYTE PTR [rax],dl
   140050831:	add    BYTE PTR [rax],dl
   140050833:	add    BYTE PTR [rax],dl
   140050835:	add    BYTE PTR [rax],dl
   140050837:	add    BYTE PTR [rax],dl
   140050839:	add    BYTE PTR [rax],dl
   14005083b:	add    BYTE PTR [rax],dl
   14005083d:	add    BYTE PTR [rax],dl
   14005083f:	add    BYTE PTR [rax],dl
   140050841:	add    BYTE PTR [rax+rax*1+0x840084],al
   140050848:	test   BYTE PTR [rax],al
   14005084a:	test   BYTE PTR [rax],al
   14005084c:	test   BYTE PTR [rax],al
   14005084e:	test   BYTE PTR [rax],al
   140050850:	test   BYTE PTR [rax],al
   140050852:	test   BYTE PTR [rax],al
   140050854:	test   BYTE PTR [rax],al
   140050856:	adc    BYTE PTR [rax],al
   140050858:	adc    BYTE PTR [rax],al
   14005085a:	adc    BYTE PTR [rax],al
   14005085c:	adc    BYTE PTR [rax],al
   14005085e:	adc    BYTE PTR [rax],al
   140050860:	adc    BYTE PTR [rax],al
   140050862:	adc    BYTE PTR [rax],al
   140050864:	add    DWORD PTR [rcx],0x1810181
   14005086a:	add    DWORD PTR [rcx],0x1810181
   140050870:	add    DWORD PTR [rcx],eax
   140050872:	add    DWORD PTR [rcx],eax
   140050874:	add    DWORD PTR [rcx],eax
   140050876:	add    DWORD PTR [rcx],eax
   140050878:	add    DWORD PTR [rcx],eax
   14005087a:	add    DWORD PTR [rcx],eax
   14005087c:	add    DWORD PTR [rcx],eax
   14005087e:	add    DWORD PTR [rcx],eax
   140050880:	add    DWORD PTR [rcx],eax
   140050882:	add    DWORD PTR [rcx],eax
   140050884:	add    DWORD PTR [rcx],eax
   140050886:	add    DWORD PTR [rcx],eax
   140050888:	add    DWORD PTR [rcx],eax
   14005088a:	add    DWORD PTR [rcx],eax
   14005088c:	add    DWORD PTR [rcx],eax
   14005088e:	add    DWORD PTR [rcx],eax
   140050890:	add    DWORD PTR [rcx],eax
   140050892:	add    DWORD PTR [rcx],eax
   140050894:	add    DWORD PTR [rcx],eax
   140050896:	add    DWORD PTR [rcx],eax
   140050898:	adc    BYTE PTR [rax],al
   14005089a:	adc    BYTE PTR [rax],al
   14005089c:	adc    BYTE PTR [rax],al
   14005089e:	adc    BYTE PTR [rax],al
   1400508a0:	adc    BYTE PTR [rax],al
   1400508a2:	adc    BYTE PTR [rax],al
   1400508a4:	(bad)  
   1400508a5:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   1400508ab:	add    DWORD PTR [rdx+0x2018201],eax
   1400508b1:	add    DWORD PTR [rdx],eax
   1400508b3:	add    DWORD PTR [rdx],eax
   1400508b5:	add    DWORD PTR [rdx],eax
   1400508b7:	add    DWORD PTR [rdx],eax
   1400508b9:	add    DWORD PTR [rdx],eax
   1400508bb:	add    DWORD PTR [rdx],eax
   1400508bd:	add    DWORD PTR [rdx],eax
   1400508bf:	add    DWORD PTR [rdx],eax
   1400508c1:	add    DWORD PTR [rdx],eax
   1400508c3:	add    DWORD PTR [rdx],eax
   1400508c5:	add    DWORD PTR [rdx],eax
   1400508c7:	add    DWORD PTR [rdx],eax
   1400508c9:	add    DWORD PTR [rdx],eax
   1400508cb:	add    DWORD PTR [rdx],eax
   1400508cd:	add    DWORD PTR [rdx],eax
   1400508cf:	add    DWORD PTR [rdx],eax
   1400508d1:	add    DWORD PTR [rdx],eax
   1400508d3:	add    DWORD PTR [rdx],eax
   1400508d5:	add    DWORD PTR [rdx],eax
   1400508d7:	add    DWORD PTR [rax],edx
   1400508d9:	add    BYTE PTR [rax],dl
   1400508db:	add    BYTE PTR [rax],dl
   1400508dd:	add    BYTE PTR [rax],dl
   1400508df:	add    BYTE PTR [rax],ah
   1400508e1:	add    BYTE PTR [rax],ah
   1400508e3:	add    BYTE PTR [rax],ah
   1400508e5:	add    BYTE PTR [rax],ah
   1400508e7:	add    BYTE PTR [rax],ah
   1400508e9:	add    BYTE PTR [rax],ah
   1400508eb:	add    BYTE PTR [rax],ah
   1400508ed:	add    BYTE PTR [rax],ah
   1400508ef:	add    BYTE PTR [rax],ah
   1400508f1:	add    BYTE PTR [rax],ah
   1400508f3:	add    BYTE PTR [rax],ah
   1400508f5:	add    BYTE PTR [rax],ah
   1400508f7:	add    BYTE PTR [rax],ah
   1400508f9:	add    BYTE PTR [rax],ah
   1400508fb:	add    BYTE PTR [rax],ah
   1400508fd:	add    BYTE PTR [rax],ah
   1400508ff:	add    BYTE PTR [rax],ah
   140050901:	add    BYTE PTR [rax],ah
   140050903:	add    BYTE PTR [rax],ah
   140050905:	add    BYTE PTR [rax],ah
   140050907:	add    BYTE PTR [rax],ah
   140050909:	add    BYTE PTR [rax],ah
   14005090b:	add    BYTE PTR [rax],ah
   14005090d:	add    BYTE PTR [rax],ah
   14005090f:	add    BYTE PTR [rax],ah
   140050911:	add    BYTE PTR [rax],ah
   140050913:	add    BYTE PTR [rax],ah
   140050915:	add    BYTE PTR [rax],ah
   140050917:	add    BYTE PTR [rax],ah
   140050919:	add    BYTE PTR [rax],ah
   14005091b:	add    BYTE PTR [rax],ah
   14005091d:	add    BYTE PTR [rax],ah
   14005091f:	add    BYTE PTR [rax],ah
   140050921:	add    BYTE PTR [rax+0x0],cl
   140050924:	adc    BYTE PTR [rax],al
   140050926:	adc    BYTE PTR [rax],al
   140050928:	adc    BYTE PTR [rax],al
   14005092a:	adc    BYTE PTR [rax],al
   14005092c:	adc    BYTE PTR [rax],al
   14005092e:	adc    BYTE PTR [rax],al
   140050930:	adc    BYTE PTR [rax],al
   140050932:	adc    BYTE PTR [rax],al
   140050934:	adc    BYTE PTR [rax],al
   140050936:	adc    BYTE PTR [rax],al
   140050938:	adc    BYTE PTR [rax],al
   14005093a:	adc    BYTE PTR [rax],al
   14005093c:	adc    BYTE PTR [rax],al
   14005093e:	adc    BYTE PTR [rax],al
   140050940:	adc    BYTE PTR [rax],al
   140050942:	adc    BYTE PTR [rax],al
   140050944:	adc    BYTE PTR [rax],al
   140050946:	adc    al,0x0
   140050948:	adc    al,0x0
   14005094a:	adc    BYTE PTR [rax],al
   14005094c:	adc    BYTE PTR [rax],al
   14005094e:	adc    BYTE PTR [rax],al
   140050950:	adc    BYTE PTR [rax],al
   140050952:	adc    BYTE PTR [rax],al
   140050954:	adc    al,0x0
   140050956:	adc    BYTE PTR [rax],al
   140050958:	adc    BYTE PTR [rax],al
   14005095a:	adc    BYTE PTR [rax],al
   14005095c:	adc    BYTE PTR [rax],al
   14005095e:	adc    BYTE PTR [rax],al
   140050960:	adc    BYTE PTR [rax],al
   140050962:	add    DWORD PTR [rcx],eax
   140050964:	add    DWORD PTR [rcx],eax
   140050966:	add    DWORD PTR [rcx],eax
   140050968:	add    DWORD PTR [rcx],eax
   14005096a:	add    DWORD PTR [rcx],eax
   14005096c:	add    DWORD PTR [rcx],eax
   14005096e:	add    DWORD PTR [rcx],eax
   140050970:	add    DWORD PTR [rcx],eax
   140050972:	add    DWORD PTR [rcx],eax
   140050974:	add    DWORD PTR [rcx],eax
   140050976:	add    DWORD PTR [rcx],eax
   140050978:	add    DWORD PTR [rcx],eax
   14005097a:	add    DWORD PTR [rcx],eax
   14005097c:	add    DWORD PTR [rcx],eax
   14005097e:	add    DWORD PTR [rcx],eax
   140050980:	add    DWORD PTR [rcx],eax
   140050982:	add    DWORD PTR [rcx],eax
   140050984:	add    DWORD PTR [rcx],eax
   140050986:	add    DWORD PTR [rcx],eax
   140050988:	add    DWORD PTR [rcx],eax
   14005098a:	add    DWORD PTR [rcx],eax
   14005098c:	add    DWORD PTR [rcx],eax
   14005098e:	add    DWORD PTR [rcx],eax
   140050990:	adc    BYTE PTR [rax],al
   140050992:	add    DWORD PTR [rcx],eax
   140050994:	add    DWORD PTR [rcx],eax
   140050996:	add    DWORD PTR [rcx],eax
   140050998:	add    DWORD PTR [rcx],eax
   14005099a:	add    DWORD PTR [rcx],eax
   14005099c:	add    DWORD PTR [rcx],eax
   14005099e:	add    DWORD PTR [rcx],eax
   1400509a0:	add    al,BYTE PTR [rcx]
   1400509a2:	add    al,BYTE PTR [rcx]
   1400509a4:	add    al,BYTE PTR [rcx]
   1400509a6:	add    al,BYTE PTR [rcx]
   1400509a8:	add    al,BYTE PTR [rcx]
   1400509aa:	add    al,BYTE PTR [rcx]
   1400509ac:	add    al,BYTE PTR [rcx]
   1400509ae:	add    al,BYTE PTR [rcx]
   1400509b0:	add    al,BYTE PTR [rcx]
   1400509b2:	add    al,BYTE PTR [rcx]
   1400509b4:	add    al,BYTE PTR [rcx]
   1400509b6:	add    al,BYTE PTR [rcx]
   1400509b8:	add    al,BYTE PTR [rcx]
   1400509ba:	add    al,BYTE PTR [rcx]
   1400509bc:	add    al,BYTE PTR [rcx]
   1400509be:	add    al,BYTE PTR [rcx]
   1400509c0:	add    al,BYTE PTR [rcx]
   1400509c2:	add    al,BYTE PTR [rcx]
   1400509c4:	add    al,BYTE PTR [rcx]
   1400509c6:	add    al,BYTE PTR [rcx]
   1400509c8:	add    al,BYTE PTR [rcx]
   1400509ca:	add    al,BYTE PTR [rcx]
   1400509cc:	add    al,BYTE PTR [rcx]
   1400509ce:	add    al,BYTE PTR [rcx]
   1400509d0:	adc    BYTE PTR [rax],al
   1400509d2:	add    al,BYTE PTR [rcx]
   1400509d4:	add    al,BYTE PTR [rcx]
   1400509d6:	add    al,BYTE PTR [rcx]
   1400509d8:	add    al,BYTE PTR [rcx]
   1400509da:	add    al,BYTE PTR [rcx]
   1400509dc:	add    al,BYTE PTR [rcx]
   1400509de:	add    al,BYTE PTR [rcx]
   1400509e0:	add    al,BYTE PTR [rcx]
   1400509e2:	add    DWORD PTR [rcx],eax
	...
   1400509f0:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   1400509f7:	xchg   DWORD PTR [rax-0x73747577],ecx
   1400509fd:	lea    ecx,[rsi-0x6d6e6f71]
   140050a03:	xchg   ebx,eax
   140050a04:	xchg   esp,eax
   140050a05:	xchg   ebp,eax
   140050a06:	xchg   esi,eax
   140050a07:	xchg   edi,eax
   140050a08:	cwde   
   140050a09:	cdq    
   140050a0a:	(bad)  
   140050a0b:	fwait
   140050a0c:	pushf  
   140050a0d:	popf   
   140050a0e:	sahf   
   140050a0f:	lahf   
   140050a10:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140050a19:	test   eax,0xadacabaa
   140050a1e:	scas   al,BYTE PTR es:[rdi]
   140050a1f:	scas   eax,DWORD PTR es:[rdi]
   140050a20:	mov    al,0xb1
   140050a22:	mov    dl,0xb3
   140050a24:	mov    ah,0xb5
   140050a26:	mov    dh,0xb7
   140050a28:	mov    eax,0xbcbbbab9
   140050a2d:	mov    ebp,0xc1c0bfbe
   140050a32:	ret    0xc4c3
   140050a35:	(bad)
   140050a38:	enter  0xcac9,0xcb
   140050a3c:	int3   
   140050a3d:	int    0xce
   140050a3f:	iret   
   140050a40:	rcl    cl,1
   140050a42:	rcl    bl,cl
   140050a44:	(bad)  
   140050a45:	(bad)  
   140050a46:	(bad)  
   140050a47:	xlat   BYTE PTR ds:[rbx]
   140050a48:	fcomp  st(1)
   140050a4a:	fcmovu st,st(3)
   140050a4c:	(bad)  
   140050a4e:	(bad)  
   140050a50:	loopne 0x140050a33
   140050a52:	loop   0x140050a37
   140050a54:	in     al,0xe5
   140050a56:	out    0xe7,al
   140050a58:	call   0x12cf0f546
   140050a5d:	in     eax,dx
   140050a5e:	out    dx,al
   140050a5f:	out    dx,eax
   140050a60:	lock icebp 
   140050a62:	repnz repz hlt 
   140050a65:	cmc    
   140050a66:	div    bh
   140050a68:	clc    
   140050a69:	stc    
   140050a6a:	cli    
   140050a6b:	sti    
   140050a6c:	cld    
   140050a6d:	std    
   140050a6e:	(bad)  
   140050a6f:	inc    DWORD PTR [rax]
   140050a71:	add    DWORD PTR [rdx],eax
   140050a73:	add    eax,DWORD PTR [rax*1+0x9080706]
   140050a7a:	or     cl,BYTE PTR [rbx]
   140050a7c:	or     al,0xd
   140050a7e:	(bad)  
   140050a7f:	movups xmm2,XMMWORD PTR [rcx]
   140050a82:	adc    dl,BYTE PTR [rbx]
   140050a84:	adc    al,0x15
   140050a86:	(bad)  
   140050a87:	(bad)  
   140050a88:	sbb    BYTE PTR [rcx],bl
   140050a8a:	sbb    bl,BYTE PTR [rbx]
   140050a8c:	sbb    al,0x1d
   140050a8e:	(bad)  
   140050a8f:	(bad)  
   140050a90:	and    BYTE PTR [rcx],ah
   140050a92:	and    ah,BYTE PTR [rbx]
   140050a94:	and    al,0x25
   140050a96:	es (bad) 
   140050a98:	sub    BYTE PTR [rcx],ch
   140050a9a:	sub    ch,BYTE PTR [rbx]
   140050a9c:	sub    al,0x2d
   140050a9e:	cs (bad) 
   140050aa0:	xor    BYTE PTR [rcx],dh
   140050aa2:	xor    dh,BYTE PTR [rbx]
   140050aa4:	xor    al,0x35
   140050aa6:	ss (bad) 
   140050aa8:	cmp    BYTE PTR [rcx],bh
   140050aaa:	cmp    bh,BYTE PTR [rbx]
   140050aac:	cmp    al,0x3d
   140050aae:	ds (bad) 
   140050ab0:	rex (bad) 
   140050ab2:	(bad)
   140050ab7:	addr32 push 0x6c6b6a69
   140050abd:	ins    DWORD PTR es:[rdi],dx
   140050abe:	outs   dx,BYTE PTR ds:[rsi]
   140050abf:	outs   dx,DWORD PTR ds:[rsi]
   140050ac0:	jo     0x140050b33
   140050ac2:	jb     0x140050b37
   140050ac4:	je     0x140050b3b
   140050ac6:	jbe    0x140050b3f
   140050ac8:	js     0x140050b43
   140050aca:	jp     0x140050b27
   140050acc:	pop    rsp
   140050acd:	pop    rbp
   140050ace:	pop    rsi
   140050acf:	pop    rdi
   140050ad0:	(bad)  
   140050ad1:	(bad)  
   140050ad2:	(bad)
   140050ad7:	addr32 push 0x6c6b6a69
   140050add:	ins    DWORD PTR es:[rdi],dx
   140050ade:	outs   dx,BYTE PTR ds:[rsi]
   140050adf:	outs   dx,DWORD PTR ds:[rsi]
   140050ae0:	jo     0x140050b53
   140050ae2:	jb     0x140050b57
   140050ae4:	je     0x140050b5b
   140050ae6:	jbe    0x140050b5f
   140050ae8:	js     0x140050b63
   140050aea:	jp     0x140050b67
   140050aec:	jl     0x140050b6b
   140050aee:	jle    0x140050b6f
   140050af0:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140050af7:	xchg   DWORD PTR [rax-0x73747577],ecx
   140050afd:	lea    ecx,[rsi-0x6d6e6f71]
   140050b03:	xchg   ebx,eax
   140050b04:	xchg   esp,eax
   140050b05:	xchg   ebp,eax
   140050b06:	xchg   esi,eax
   140050b07:	xchg   edi,eax
   140050b08:	cwde   
   140050b09:	cdq    
   140050b0a:	(bad)  
   140050b0b:	fwait
   140050b0c:	pushf  
   140050b0d:	popf   
   140050b0e:	sahf   
   140050b0f:	lahf   
   140050b10:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140050b19:	test   eax,0xadacabaa
   140050b1e:	scas   al,BYTE PTR es:[rdi]
   140050b1f:	scas   eax,DWORD PTR es:[rdi]
   140050b20:	mov    al,0xb1
   140050b22:	mov    dl,0xb3
   140050b24:	mov    ah,0xb5
   140050b26:	mov    dh,0xb7
   140050b28:	mov    eax,0xbcbbbab9
   140050b2d:	mov    ebp,0xc1c0bfbe
   140050b32:	ret    0xc4c3
   140050b35:	(bad)
   140050b38:	enter  0xcac9,0xcb
   140050b3c:	int3   
   140050b3d:	int    0xce
   140050b3f:	iret   
   140050b40:	rcl    cl,1
   140050b42:	rcl    bl,cl
   140050b44:	(bad)  
   140050b45:	(bad)  
   140050b46:	(bad)  
   140050b47:	xlat   BYTE PTR ds:[rbx]
   140050b48:	fcomp  st(1)
   140050b4a:	fcmovu st,st(3)
   140050b4c:	(bad)  
   140050b4e:	(bad)  
   140050b50:	loopne 0x140050b33
   140050b52:	loop   0x140050b37
   140050b54:	in     al,0xe5
   140050b56:	out    0xe7,al
   140050b58:	call   0x12cf0f646
   140050b5d:	in     eax,dx
   140050b5e:	out    dx,al
   140050b5f:	out    dx,eax
   140050b60:	lock icebp 
   140050b62:	repnz repz hlt 
   140050b65:	cmc    
   140050b66:	div    bh
   140050b68:	clc    
   140050b69:	stc    
   140050b6a:	cli    
   140050b6b:	sti    
   140050b6c:	cld    
   140050b6d:	std    
   140050b6e:	(bad)  
   140050b6f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   140050b75:	test   DWORD PTR [rsi-0x75767779],eax
   140050b7b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140050b82:	xchg   edx,eax
   140050b83:	xchg   ebx,eax
   140050b84:	xchg   esp,eax
   140050b85:	xchg   ebp,eax
   140050b86:	xchg   esi,eax
   140050b87:	xchg   edi,eax
   140050b88:	cwde   
   140050b89:	cdq    
   140050b8a:	(bad)  
   140050b8b:	fwait
   140050b8c:	pushf  
   140050b8d:	popf   
   140050b8e:	sahf   
   140050b8f:	lahf   
   140050b90:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140050b99:	test   eax,0xadacabaa
   140050b9e:	scas   al,BYTE PTR es:[rdi]
   140050b9f:	scas   eax,DWORD PTR es:[rdi]
   140050ba0:	mov    al,0xb1
   140050ba2:	mov    dl,0xb3
   140050ba4:	mov    ah,0xb5
   140050ba6:	mov    dh,0xb7
   140050ba8:	mov    eax,0xbcbbbab9
   140050bad:	mov    ebp,0xc1c0bfbe
   140050bb2:	ret    0xc4c3
   140050bb5:	(bad)
   140050bb8:	enter  0xcac9,0xcb
   140050bbc:	int3   
   140050bbd:	int    0xce
   140050bbf:	iret   
   140050bc0:	rcl    cl,1
   140050bc2:	rcl    bl,cl
   140050bc4:	(bad)  
   140050bc5:	(bad)  
   140050bc6:	(bad)  
   140050bc7:	xlat   BYTE PTR ds:[rbx]
   140050bc8:	fcomp  st(1)
   140050bca:	fcmovu st,st(3)
   140050bcc:	(bad)  
   140050bce:	(bad)  
   140050bd0:	loopne 0x140050bb3
   140050bd2:	loop   0x140050bb7
   140050bd4:	in     al,0xe5
   140050bd6:	out    0xe7,al
   140050bd8:	call   0x12cf0f6c6
   140050bdd:	in     eax,dx
   140050bde:	out    dx,al
   140050bdf:	out    dx,eax
   140050be0:	lock icebp 
   140050be2:	repnz repz hlt 
   140050be5:	cmc    
   140050be6:	div    bh
   140050be8:	clc    
   140050be9:	stc    
   140050bea:	cli    
   140050beb:	sti    
   140050bec:	cld    
   140050bed:	std    
   140050bee:	(bad)  
   140050bef:	inc    DWORD PTR [rax]
   140050bf1:	add    DWORD PTR [rdx],eax
   140050bf3:	add    eax,DWORD PTR [rax*1+0x9080706]
   140050bfa:	or     cl,BYTE PTR [rbx]
   140050bfc:	or     al,0xd
   140050bfe:	(bad)  
   140050bff:	movups xmm2,XMMWORD PTR [rcx]
   140050c02:	adc    dl,BYTE PTR [rbx]
   140050c04:	adc    al,0x15
   140050c06:	(bad)  
   140050c07:	(bad)  
   140050c08:	sbb    BYTE PTR [rcx],bl
   140050c0a:	sbb    bl,BYTE PTR [rbx]
   140050c0c:	sbb    al,0x1d
   140050c0e:	(bad)  
   140050c0f:	(bad)  
   140050c10:	and    BYTE PTR [rcx],ah
   140050c12:	and    ah,BYTE PTR [rbx]
   140050c14:	and    al,0x25
   140050c16:	es (bad) 
   140050c18:	sub    BYTE PTR [rcx],ch
   140050c1a:	sub    ch,BYTE PTR [rbx]
   140050c1c:	sub    al,0x2d
   140050c1e:	cs (bad) 
   140050c20:	xor    BYTE PTR [rcx],dh
   140050c22:	xor    dh,BYTE PTR [rbx]
   140050c24:	xor    al,0x35
   140050c26:	ss (bad) 
   140050c28:	cmp    BYTE PTR [rcx],bh
   140050c2a:	cmp    bh,BYTE PTR [rbx]
   140050c2c:	cmp    al,0x3d
   140050c2e:	ds (bad) 
   140050c30:	rex
   140050c31:	rex.B
   140050c32:	rex.X
   140050c33:	rex.XB
   140050c34:	rex.R
   140050c35:	rex.RB
   140050c36:	rex.RX
   140050c37:	rex.RXB
   140050c38:	rex.W
   140050c39:	rex.WB
   140050c3a:	rex.WX
   140050c3b:	rex.WXB
   140050c3c:	rex.WR
   140050c3d:	rex.WRB
   140050c3e:	rex.WRX
   140050c3f:	rex.WRXB push r8
   140050c41:	push   rcx
   140050c42:	push   rdx
   140050c43:	push   rbx
   140050c44:	push   rsp
   140050c45:	push   rbp
   140050c46:	push   rsi
   140050c47:	push   rdi
   140050c48:	pop    rax
   140050c49:	pop    rcx
   140050c4a:	pop    rdx
   140050c4b:	pop    rbx
   140050c4c:	pop    rsp
   140050c4d:	pop    rbp
   140050c4e:	pop    rsi
   140050c4f:	pop    rdi
   140050c50:	(bad)  
   140050c51:	rex.B
   140050c52:	rex.X
   140050c53:	rex.XB
   140050c54:	rex.R
   140050c55:	rex.RB
   140050c56:	rex.RX
   140050c57:	rex.RXB
   140050c58:	rex.W
   140050c59:	rex.WB
   140050c5a:	rex.WX
   140050c5b:	rex.WXB
   140050c5c:	rex.WR
   140050c5d:	rex.WRB
   140050c5e:	rex.WRX
   140050c5f:	rex.WRXB push r8
   140050c61:	push   rcx
   140050c62:	push   rdx
   140050c63:	push   rbx
   140050c64:	push   rsp
   140050c65:	push   rbp
   140050c66:	push   rsi
   140050c67:	push   rdi
   140050c68:	pop    rax
   140050c69:	pop    rcx
   140050c6a:	pop    rdx
   140050c6b:	jnp    0x140050ce9
   140050c6d:	jge    0x140050ced
   140050c6f:	jg     0x140050bf1
   140050c71:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   140050c7b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   140050c82:	xchg   edx,eax
   140050c83:	xchg   ebx,eax
   140050c84:	xchg   esp,eax
   140050c85:	xchg   ebp,eax
   140050c86:	xchg   esi,eax
   140050c87:	xchg   edi,eax
   140050c88:	cwde   
   140050c89:	cdq    
   140050c8a:	(bad)  
   140050c8b:	fwait
   140050c8c:	pushf  
   140050c8d:	popf   
   140050c8e:	sahf   
   140050c8f:	lahf   
   140050c90:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140050c99:	test   eax,0xadacabaa
   140050c9e:	scas   al,BYTE PTR es:[rdi]
   140050c9f:	scas   eax,DWORD PTR es:[rdi]
   140050ca0:	mov    al,0xb1
   140050ca2:	mov    dl,0xb3
   140050ca4:	mov    ah,0xb5
   140050ca6:	mov    dh,0xb7
   140050ca8:	mov    eax,0xbcbbbab9
   140050cad:	mov    ebp,0xc1c0bfbe
   140050cb2:	ret    0xc4c3
   140050cb5:	(bad)
   140050cb8:	enter  0xcac9,0xcb
   140050cbc:	int3   
   140050cbd:	int    0xce
   140050cbf:	iret   
   140050cc0:	rcl    cl,1
   140050cc2:	rcl    bl,cl
   140050cc4:	(bad)  
   140050cc5:	(bad)  
   140050cc6:	(bad)  
   140050cc7:	xlat   BYTE PTR ds:[rbx]
   140050cc8:	fcomp  st(1)
   140050cca:	fcmovu st,st(3)
   140050ccc:	(bad)  
   140050cce:	(bad)  
   140050cd0:	loopne 0x140050cb3
   140050cd2:	loop   0x140050cb7
   140050cd4:	in     al,0xe5
   140050cd6:	out    0xe7,al
   140050cd8:	call   0x12cf0f7c6
   140050cdd:	in     eax,dx
   140050cde:	out    dx,al
   140050cdf:	out    dx,eax
   140050ce0:	lock icebp 
   140050ce2:	repnz repz hlt 
   140050ce5:	cmc    
   140050ce6:	div    bh
   140050ce8:	clc    
   140050ce9:	stc    
   140050cea:	cli    
   140050ceb:	sti    
   140050cec:	cld    
   140050ced:	std    
   140050cee:	(bad)  
   140050cef:	dec    DWORD PTR [rax+0x48]
   140050cf2:	cmp    ch,BYTE PTR [rbp+0x6d]
   140050cf5:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   140050d00:	fs fs fs fs sub al,0x20
   140050d06:	rex.WRB
   140050d07:	rex.WRB
   140050d08:	rex.WRB
   140050d09:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   140050d0e:	and    BYTE PTR [rcx+0x79],bh
   140050d11:	jns    0x140050d8c
   140050d13:	add    BYTE PTR [rax],al
   140050d15:	add    BYTE PTR [rax],al
   140050d17:	add    BYTE PTR [rbp+0x4d],cl
   140050d1a:	(bad)  
   140050d1b:	fs fs (bad) 
   140050d1e:	jns    0x140050d99
   140050d20:	add    BYTE PTR [rax],al
   140050d22:	add    BYTE PTR [rax],al
   140050d24:	push   rax
   140050d25:	rex.WRB add BYTE PTR [r8],r8b
   140050d28:	rex.B
   140050d29:	rex.WRB add BYTE PTR [r8],r8b
   140050d2c:	add    BYTE PTR [rax],al
   140050d2e:	add    BYTE PTR [rax],al
   140050d30:	rex.R
   140050d31:	movsxd esp,DWORD PTR gs:[rbp+0x6d]
   140050d35:	(bad)  
   140050d36:	gs jb  0x140050d39
   140050d39:	add    BYTE PTR [rax],al
   140050d3b:	add    BYTE PTR [rax],al
   140050d3d:	add    BYTE PTR [rax],al
   140050d3f:	add    BYTE PTR [rsi+0x6f],cl
   140050d42:	jbe    0x140050da9
   140050d44:	ins    DWORD PTR es:[rdi],dx
   140050d45:	(bad)  
   140050d46:	gs jb  0x140050d49
   140050d49:	add    BYTE PTR [rax],al
   140050d4b:	add    BYTE PTR [rax],al
   140050d4d:	add    BYTE PTR [rax],al
   140050d4f:	add    BYTE PTR [rdi+0x63],cl
   140050d52:	je     0x140050dc3
   140050d54:	(bad)  
   140050d55:	gs jb  0x140050d58
   140050d58:	push   rbx
   140050d59:	gs jo  0x140050dd0
   140050d5c:	gs ins DWORD PTR es:[rdi],dx
   140050d5e:	(bad)  
   140050d5f:	gs jb  0x140050d62
   140050d62:	add    BYTE PTR [rax],al
   140050d64:	rex.B jne 0x140050dce
   140050d67:	jne    0x140050ddc
   140050d69:	je     0x140050d6b
   140050d6b:	add    BYTE PTR [rdx+0x75],cl
   140050d6e:	ins    BYTE PTR es:[rdi],dx
   140050d6f:	jns    0x140050d71
   140050d71:	add    BYTE PTR [rax],al
   140050d73:	add    BYTE PTR [rdx+0x75],cl
   140050d76:	outs   dx,BYTE PTR ds:[rsi]
   140050d77:	add    BYTE PTR gs:[rax],al
   140050d7a:	add    BYTE PTR [rax],al
   140050d7c:	rex.B jo 0x140050df1
   140050d7f:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x72614d00
   140050d87:	movsxd ebp,DWORD PTR [rax+0x0]
   140050d8a:	add    BYTE PTR [rax],al
   140050d8c:	add    BYTE PTR [rax],al
   140050d8e:	add    BYTE PTR [rax],al
   140050d90:	rex.RX
   140050d91:	(bad)
   140050d97:	jns    0x140050d99
   140050d99:	add    BYTE PTR [rax],al
   140050d9b:	add    BYTE PTR [rax],al
   140050d9d:	add    BYTE PTR [rax],al
   140050d9f:	add    BYTE PTR [rdx+0x61],cl
   140050da2:	outs   dx,BYTE PTR ds:[rsi]
   140050da3:	jne    0x140050e06
   140050da5:	jb     0x140050e20
   140050da7:	add    BYTE PTR [rbp+riz*2+0x63],al
   140050dab:	add    BYTE PTR [rsi+0x6f],cl
   140050dae:	jbe    0x140050db0
   140050db0:	movsxd r14,DWORD PTR [r8+r8*1+0x53]
   140050db5:	gs jo  0x140050db8
   140050db8:	rex.B jne 0x140050e22
   140050dbb:	add    BYTE PTR [rdx+0x75],cl
   140050dbe:	ins    BYTE PTR es:[rdi],dx
   140050dbf:	add    BYTE PTR [rdx+0x75],cl
   140050dc2:	outs   dx,BYTE PTR ds:[rsi]
   140050dc3:	add    BYTE PTR [rbp+0x61],cl
   140050dc6:	jns    0x140050dc8
   140050dc8:	rex.B jo 0x140050e3d
   140050dcb:	add    BYTE PTR [rbp+0x61],cl
   140050dce:	jb     0x140050dd0
   140050dd0:	rex.RX
   140050dd1:	gs (bad) 
   140050dd3:	add    BYTE PTR [rdx+0x61],cl
   140050dd6:	outs   dx,BYTE PTR ds:[rsi]
   140050dd7:	add    BYTE PTR [rbx+0x61],dl
   140050dda:	je     0x140050e51
   140050ddc:	jb     0x140050e42
   140050dde:	(bad)  
   140050ddf:	jns    0x140050de1
   140050de1:	add    BYTE PTR [rax],al
   140050de3:	add    BYTE PTR [rsi+0x72],al
   140050de6:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   140050dee:	add    BYTE PTR [rax],al
   140050df0:	push   rsp
   140050df1:	push   0x64737275
   140050df6:	(bad)  
   140050df7:	jns    0x140050df9
   140050df9:	add    BYTE PTR [rax],al
   140050dfb:	add    BYTE PTR [rax],al
   140050dfd:	add    BYTE PTR [rax],al
   140050dff:	add    BYTE PTR [rdi+0x65],dl
   140050e02:	outs   dx,BYTE PTR fs:[rsi]
   140050e04:	gs jae 0x140050e6b
   140050e07:	(bad)  
   140050e08:	jns    0x140050e0a
   140050e0a:	add    BYTE PTR [rax],al
   140050e0c:	add    BYTE PTR [rax],al
   140050e0e:	add    BYTE PTR [rax],al
   140050e10:	push   rsp
   140050e11:	jne    0x140050e78
   140050e13:	jae    0x140050e79
   140050e15:	(bad)  
   140050e16:	jns    0x140050e18
   140050e18:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140050e1a:	outs   dx,BYTE PTR ds:[rsi]
   140050e1b:	fs (bad) 
   140050e1d:	jns    0x140050e1f
   140050e1f:	add    BYTE PTR [rbx+0x75],dl
   140050e22:	outs   dx,BYTE PTR ds:[rsi]
   140050e23:	fs (bad) 
   140050e25:	jns    0x140050e27
   140050e27:	add    BYTE PTR [rbx+0x61],dl
   140050e2a:	je     0x140050e2c
   140050e2c:	rex.RX jb 0x140050e98
   140050e2f:	add    BYTE PTR [rax+rbp*2+0x75],dl
   140050e33:	add    BYTE PTR [rdi+0x65],dl
   140050e36:	add    BYTE PTR fs:[rbp+rsi*2+0x65],dl
   140050e3b:	add    BYTE PTR [rbp+0x6f],cl
   140050e3e:	outs   dx,BYTE PTR ds:[rsi]
   140050e3f:	add    BYTE PTR [rbx+0x75],dl
   140050e42:	outs   dx,BYTE PTR ds:[rsi]
   140050e43:	add    BYTE PTR [rcx+0x2f],ah
   140050e46:	jo     0x140050e48
   140050e48:	(bad)  
   140050e49:	ins    DWORD PTR es:[rdi],dx
   140050e4a:	(bad)  
   140050e4b:	jo     0x140050eba
   140050e4d:	add    BYTE PTR [rax],al
   140050e4f:	add    BYTE PTR [rcx],dh
   140050e51:	and    edx,DWORD PTR [rcx+0x4e]
   140050e54:	rex.B
   140050e55:	rex.WRX add BYTE PTR [rax],r8b
   140050e58:	xor    DWORD PTR [rbx],esp
   140050e5a:	rex.WB
   140050e5b:	rex.WRX
   140050e5c:	rex.RX add BYTE PTR [rax],r8b
   140050e5f:	add    BYTE PTR [rcx],dh
   140050e61:	and    ecx,DWORD PTR [rcx+0x4e]
   140050e64:	add    BYTE PTR [rax],r8b
   140050e67:	add    BYTE PTR [rcx],dh
   140050e69:	and    edx,DWORD PTR [rbx+0x4e]
   140050e6c:	rex.B
   140050e6d:	rex.WRX add BYTE PTR [rax],r8b
   140050e70:	rex.XB
   140050e71:	rex.WRXB
   140050e72:	rex.WRX
   140050e73:	rex.WRXB push r13
   140050e75:	push   rsp
   140050e76:	and    al,0x0
   140050e78:	(bad)
   140050e7d:	ins    BYTE PTR es:[rdi],dx
   140050e7e:	ins    BYTE PTR es:[rdi],dx
   140050e7f:	outs   dx,DWORD PTR ds:[rsi]
   140050e80:	movsxd esp,DWORD PTR [rcx+0x74]
   140050e83:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e550000
   140050e8a:	(bad)  
   140050e8b:	(bad)  
   140050e8c:	ins    BYTE PTR es:[rdi],dx
   140050e8d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140050e92:	ins    BYTE PTR es:[rdi],dx
   140050e93:	outs   dx,DWORD PTR ds:[rsi]
   140050e94:	and    BYTE PTR [edi+ebp*2+0x20],dh
   140050e99:	imul   ebp,DWORD PTR [rsi+0x74],0x65646e65
   140050ea0:	and    BYTE PTR fs:[rsi+0x69],ah
   140050ea4:	ins    BYTE PTR es:[rdi],dx
   140050ea5:	and    BYTE PTR gs:[rip+0x65202c73],ah        # 0x1a5253b1f
   140050eac:	jb     0x140050f20
   140050eae:	outs   dx,DWORD PTR ds:[rsi]
   140050eaf:	jb     0x140050ed1
   140050eb1:	and    eax,0x64
   140050eb6:	add    BYTE PTR [rax],al
   140050eb8:	imul   ebp,DWORD PTR [rsi+0x73],0x6f6c2e74
   140050ebf:	add    BYTE PTR [eax],al
   140050ec2:	add    BYTE PTR [rax],al
   140050ec4:	add    BYTE PTR [rax],al
   140050ec6:	add    BYTE PTR [rax],al
   140050ec8:	jbe    0x140050f37
   140050eca:	imul   ebp,DWORD PTR [rsi+0x73],0x6f6c2e74
   140050ed1:	add    BYTE PTR [eax],al
   140050ed4:	add    BYTE PTR [rax],al
   140050ed6:	add    BYTE PTR [rax],al
   140050ed8:	push   rsp
   140050ed9:	push   0x6f662065
   140050ede:	ins    BYTE PTR es:[rdi],dx
   140050edf:	ins    BYTE PTR es:[rdi],dx
   140050ee0:	outs   dx,DWORD PTR ds:[rsi]
   140050ee1:	ja     0x140050f4c
   140050ee3:	outs   dx,BYTE PTR ds:[rsi]
   140050ee4:	and    BYTE PTR [ebp+0x65],ch
   140050ee8:	jae    0x140050f5d
   140050eea:	(bad)  
   140050eeb:	and    BYTE PTR gs:[ecx+0x73],ch
   140050ef0:	and    BYTE PTR [rdx+rsi*2+0x75],dh
   140050ef4:	outs   dx,BYTE PTR ds:[rsi]
   140050ef5:	movsxd esp,DWORD PTR [rcx+0x74]
   140050ef8:	gs cmp cl,BYTE PTR fs:[rdx]
   140050efc:	add    BYTE PTR [rax],al
   140050efe:	add    BYTE PTR [rax],al
   140050f00:	push   rbx
   140050f01:	gs jb  0x140050f6d
   140050f04:	outs   dx,DWORD PTR ds:[rsi]
   140050f05:	jne    0x140050f7a
   140050f07:	and    BYTE PTR [rsi+0x6f],ah
   140050f0a:	jb     0x140050f79
   140050f0c:	(bad)  
   140050f0d:	je     0x140050f2f
   140050f0f:	gs jb  0x140050f84
   140050f12:	outs   dx,DWORD PTR ds:[rsi]
   140050f13:	jb     0x140050f35
   140050f15:	imul   ebp,DWORD PTR [rsi+0x20],0x67676f6c
   140050f1c:	imul   ebp,DWORD PTR [rsi+0x67],0x646f6320
   140050f23:	or     al,BYTE PTR gs:[rax]
   140050f26:	add    BYTE PTR [rax],al
   140050f28:	and    eax,0x3a632563
   140050f2d:	and    BYTE PTR [rax],al
   140050f2f:	add    BYTE PTR [rip+0x6d252d59],ah        # 0x1ad2a3c8e
   140050f35:	sub    eax,0x25206425
   140050f3a:	rex.W cmp spl,BYTE PTR [rip+0x53253a4d]        # 0x1932a498e
   140050f41:	jl     0x140050f63
   140050f43:	imul   ebp,DWORD PTR [rsi+0x73],0x75622d74
   140050f4a:	imul   ebp,DWORD PTR [rsp+riz*2+0x2d],0x35383932
   140050f52:	xor    eax,0x207c3639
	...
   140050f5f:	add    bh,bh
   140050f61:	(bad)  
   140050f62:	(bad)  
   140050f63:	(bad)  
   140050f64:	(bad)  
   140050f65:	(bad)  
   140050f66:	(bad)  
   140050f67:	(bad)  
   140050f68:	(bad)  
   140050f69:	(bad)  
   140050f6a:	(bad)  
   140050f6b:	(bad)  
   140050f6c:	(bad)  
   140050f6d:	(bad)  
   140050f6e:	(bad)  
   140050f6f:	(bad)  
   140050f70:	(bad)  
   140050f71:	(bad)  
   140050f72:	(bad)  
   140050f73:	(bad)  
   140050f74:	(bad)  
   140050f75:	(bad)  
   140050f76:	(bad)  
   140050f77:	(bad)  
   140050f78:	(bad)  
   140050f79:	(bad)  
   140050f7a:	(bad)  
   140050f7b:	(bad)  
   140050f7c:	(bad)  
   140050f7d:	(bad)  
   140050f7e:	(bad)  
   140050f7f:	(bad)  
   140050f80:	(bad)  
   140050f81:	(bad)  
   140050f82:	(bad)  
   140050f83:	(bad)  
   140050f84:	(bad)  
   140050f85:	(bad)  
   140050f86:	(bad)  
   140050f87:	(bad)  
   140050f88:	(bad)  
   140050f89:	(bad)  
   140050f8a:	(bad)  
   140050f8b:	(bad)  
   140050f8c:	(bad)  
   140050f8d:	(bad)  
   140050f8e:	(bad)  
   140050f8f:	(bad)  
   140050f90:	(bad)  
   140050f91:	(bad)  
   140050f92:	(bad)  
   140050f93:	(bad)  
   140050f94:	(bad)  
   140050f95:	(bad)  
   140050f96:	(bad)  
   140050f97:	(bad)  
   140050f98:	(bad)  
   140050f99:	(bad)  
   140050f9a:	(bad)  
   140050f9b:	(bad)  
   140050f9c:	(bad)  
   140050f9d:	(bad)  
   140050f9e:	(bad)  
   140050f9f:	(bad)  
   140050fa0:	(bad)  
   140050fa1:	(bad)  
   140050fa2:	(bad)  
   140050fa3:	(bad)  
   140050fa4:	(bad)  
   140050fa5:	(bad)  
   140050fa6:	(bad)  
   140050fa7:	(bad)  
   140050fa8:	(bad)  
   140050fa9:	(bad)  
   140050faa:	(bad)  
   140050fab:	(bad)  
   140050fac:	(bad)  
   140050fad:	(bad)  
   140050fae:	(bad)  
   140050faf:	(bad)  
   140050fb0:	(bad)  
   140050fb1:	(bad)  
   140050fb2:	(bad)  
   140050fb3:	(bad)  
   140050fb4:	(bad)  
   140050fb5:	(bad)  
   140050fb6:	(bad)  
   140050fb7:	(bad)  
   140050fb8:	(bad)  
   140050fb9:	(bad)  
   140050fba:	(bad)  
   140050fbb:	(bad)  
   140050fbc:	(bad)  
   140050fbd:	(bad)  
   140050fbe:	(bad)  
   140050fbf:	(bad)  
   140050fc0:	(bad)  
   140050fc1:	(bad)  
   140050fc2:	(bad)  
   140050fc3:	(bad)  
   140050fc4:	(bad)  
   140050fc5:	(bad)  
   140050fc6:	(bad)  
   140050fc7:	(bad)  
   140050fc8:	(bad)  
   140050fc9:	(bad)  
   140050fca:	(bad)  
   140050fcb:	(bad)  
   140050fcc:	(bad)  
   140050fcd:	(bad)  
   140050fce:	(bad)  
   140050fcf:	(bad)  
   140050fd0:	(bad)  
   140050fd1:	(bad)  
   140050fd2:	(bad)  
   140050fd3:	(bad)  
   140050fd4:	(bad)  
   140050fd5:	(bad)  
   140050fd6:	(bad)  
   140050fd7:	(bad)  
   140050fd8:	(bad)  
   140050fd9:	(bad)  
   140050fda:	(bad)  
   140050fdb:	(bad)  
   140050fdc:	(bad)  
   140050fdd:	(bad)  
   140050fde:	(bad)  
   140050fdf:	(bad)  
   140050fe0:	(bad)  
   140050fe1:	(bad)  
   140050fe2:	(bad)  
   140050fe3:	(bad)  
   140050fe4:	(bad)  
   140050fe5:	(bad)  
   140050fe6:	(bad)  
   140050fe7:	(bad)  
   140050fe8:	(bad)  
   140050fe9:	(bad)  
   140050fea:	(bad)  
   140050feb:	(bad)  
   140050fec:	(bad)  
   140050fed:	(bad)  
   140050fee:	(bad)  
   140050fef:	(bad)  
   140050ff0:	(bad)  
   140050ff1:	(bad)  
   140050ff2:	(bad)  
   140050ff3:	(bad)  
   140050ff4:	(bad)  
   140050ff5:	(bad)  
   140050ff6:	(bad)  
   140050ff7:	(bad)  
   140050ff8:	(bad)  
   140050ff9:	(bad)  
   140050ffa:	(bad)  
   140050ffb:	(bad)  
   140050ffc:	(bad)  
   140050ffd:	(bad)  
   140050ffe:	(bad)  
   140050fff:	(bad)  
   140051000:	(bad)  
   140051001:	(bad)  
   140051002:	(bad)  
   140051003:	(bad)  
   140051004:	(bad)  
   140051005:	(bad)  
   140051006:	(bad)  
   140051007:	(bad)  
   140051008:	(bad)  
   140051009:	(bad)  
   14005100a:	(bad)  
   14005100b:	(bad)  
   14005100c:	(bad)  
   14005100d:	(bad)  
   14005100e:	(bad)  
   14005100f:	(bad)  
   140051010:	(bad)  
   140051011:	(bad)  
   140051012:	(bad)  
   140051013:	(bad)  
   140051014:	(bad)  
   140051015:	(bad)  
   140051016:	(bad)  
   140051017:	(bad)  
   140051018:	(bad)  
   140051019:	(bad)  
   14005101a:	(bad)  
   14005101b:	(bad)  
   14005101c:	(bad)  
   14005101d:	(bad)  
   14005101e:	(bad)  
   14005101f:	inc    DWORD PTR [rax]
   140051021:	add    BYTE PTR [rax],al
   140051023:	add    BYTE PTR [rcx],al
   140051025:	add    BYTE PTR [rax],al
   140051027:	add    BYTE PTR [rdx],al
   140051029:	add    BYTE PTR [rax],al
   14005102b:	add    BYTE PTR [rbx],al
   14005102d:	add    BYTE PTR [rax],al
   14005102f:	add    BYTE PTR [rax+rax*1],al
   140051032:	add    BYTE PTR [rax],al
   140051034:	add    eax,0x6000000
   140051039:	add    BYTE PTR [rax],al
   14005103b:	add    BYTE PTR [rdi],al
   14005103d:	add    BYTE PTR [rax],al
   14005103f:	add    BYTE PTR [rax],cl
   140051041:	add    BYTE PTR [rax],al
   140051043:	add    BYTE PTR [rcx],cl
   140051045:	add    BYTE PTR [rax],al
   140051047:	add    bh,bh
   140051049:	(bad)  
   14005104a:	(bad)  
   14005104b:	(bad)  
   14005104c:	(bad)  
   14005104d:	(bad)  
   14005104e:	(bad)  
   14005104f:	(bad)  
   140051050:	(bad)  
   140051051:	(bad)  
   140051052:	(bad)  
   140051053:	(bad)  
   140051054:	(bad)  
   140051055:	(bad)  
   140051056:	(bad)  
   140051057:	(bad)  
   140051058:	(bad)  
   140051059:	(bad)  
   14005105a:	(bad)  
   14005105b:	(bad)  
   14005105c:	(bad)  
   14005105d:	(bad)  
   14005105e:	(bad)  
   14005105f:	(bad)  
   140051060:	(bad)  
   140051061:	(bad)  
   140051062:	(bad)  
   140051063:	dec    DWORD PTR [rdx]
   140051065:	add    BYTE PTR [rax],al
   140051067:	add    BYTE PTR [rbx],cl
   140051069:	add    BYTE PTR [rax],al
   14005106b:	add    BYTE PTR [rax+rax*1],cl
   14005106e:	add    BYTE PTR [rax],al
   140051070:	or     eax,0xe000000
   140051075:	add    BYTE PTR [rax],al
   140051077:	add    BYTE PTR [rdi],cl
   140051079:	add    BYTE PTR [rax],al
   14005107b:	add    bh,bh
   14005107d:	(bad)  
   14005107e:	(bad)  
   14005107f:	(bad)  
   140051080:	(bad)  
   140051081:	(bad)  
   140051082:	(bad)  
   140051083:	(bad)  
   140051084:	(bad)  
   140051085:	(bad)  
   140051086:	(bad)  
   140051087:	(bad)  
   140051088:	(bad)  
   140051089:	(bad)  
   14005108a:	(bad)  
   14005108b:	(bad)  
   14005108c:	(bad)  
   14005108d:	(bad)  
   14005108e:	(bad)  
   14005108f:	(bad)  
   140051090:	(bad)  
   140051091:	(bad)  
   140051092:	(bad)  
   140051093:	(bad)  
   140051094:	(bad)  
   140051095:	(bad)  
   140051096:	(bad)  
   140051097:	(bad)  
   140051098:	(bad)  
   140051099:	(bad)  
   14005109a:	(bad)  
   14005109b:	(bad)  
   14005109c:	(bad)  
   14005109d:	(bad)  
   14005109e:	(bad)  
   14005109f:	(bad)  
   1400510a0:	(bad)  
   1400510a1:	(bad)  
   1400510a2:	(bad)  
   1400510a3:	(bad)  
   1400510a4:	(bad)  
   1400510a5:	(bad)  
   1400510a6:	(bad)  
   1400510a7:	(bad)  
   1400510a8:	(bad)  
   1400510a9:	(bad)  
   1400510aa:	(bad)  
   1400510ab:	(bad)  
   1400510ac:	(bad)  
   1400510ad:	(bad)  
   1400510ae:	(bad)  
   1400510af:	(bad)  
   1400510b0:	(bad)  
   1400510b1:	(bad)  
   1400510b2:	(bad)  
   1400510b3:	(bad)  
   1400510b4:	(bad)  
   1400510b5:	(bad)  
   1400510b6:	(bad)  
   1400510b7:	(bad)  
   1400510b8:	(bad)  
   1400510b9:	(bad)  
   1400510ba:	(bad)  
   1400510bb:	(bad)  
   1400510bc:	(bad)  
   1400510bd:	(bad)  
   1400510be:	(bad)  
   1400510bf:	(bad)  
   1400510c0:	(bad)  
   1400510c1:	(bad)  
   1400510c2:	(bad)  
   1400510c3:	(bad)  
   1400510c4:	(bad)  
   1400510c5:	(bad)  
   1400510c6:	(bad)  
   1400510c7:	(bad)  
   1400510c8:	(bad)  
   1400510c9:	(bad)  
   1400510ca:	(bad)  
   1400510cb:	(bad)  
   1400510cc:	(bad)  
   1400510cd:	(bad)  
   1400510ce:	(bad)  
   1400510cf:	(bad)  
   1400510d0:	(bad)  
   1400510d1:	(bad)  
   1400510d2:	(bad)  
   1400510d3:	(bad)  
   1400510d4:	(bad)  
   1400510d5:	(bad)  
   1400510d6:	(bad)  
   1400510d7:	(bad)  
   1400510d8:	(bad)  
   1400510d9:	(bad)  
   1400510da:	(bad)  
   1400510db:	(bad)  
   1400510dc:	(bad)  
   1400510dd:	(bad)  
   1400510de:	(bad)  
   1400510df:	(bad)  
   1400510e0:	(bad)  
   1400510e1:	(bad)  
   1400510e2:	(bad)  
   1400510e3:	dec    DWORD PTR [rdx]
   1400510e5:	add    BYTE PTR [rax],al
   1400510e7:	add    BYTE PTR [rbx],cl
   1400510e9:	add    BYTE PTR [rax],al
   1400510eb:	add    BYTE PTR [rax+rax*1],cl
   1400510ee:	add    BYTE PTR [rax],al
   1400510f0:	or     eax,0xe000000
   1400510f5:	add    BYTE PTR [rax],al
   1400510f7:	add    BYTE PTR [rdi],cl
   1400510f9:	add    BYTE PTR [rax],al
   1400510fb:	add    bh,bh
   1400510fd:	(bad)  
   1400510fe:	(bad)  
   1400510ff:	(bad)  
   140051100:	(bad)  
   140051101:	(bad)  
   140051102:	(bad)  
   140051103:	(bad)  
   140051104:	(bad)  
   140051105:	(bad)  
   140051106:	(bad)  
   140051107:	(bad)  
   140051108:	(bad)  
   140051109:	(bad)  
   14005110a:	(bad)  
   14005110b:	(bad)  
   14005110c:	(bad)  
   14005110d:	(bad)  
   14005110e:	(bad)  
   14005110f:	(bad)  
   140051110:	(bad)  
   140051111:	(bad)  
   140051112:	(bad)  
   140051113:	(bad)  
   140051114:	(bad)  
   140051115:	(bad)  
   140051116:	(bad)  
   140051117:	(bad)  
   140051118:	(bad)  
   140051119:	(bad)  
   14005111a:	(bad)  
   14005111b:	(bad)  
   14005111c:	(bad)  
   14005111d:	(bad)  
   14005111e:	(bad)  
   14005111f:	(bad)  
   140051120:	(bad)  
   140051121:	(bad)  
   140051122:	(bad)  
   140051123:	(bad)  
   140051124:	(bad)  
   140051125:	(bad)  
   140051126:	(bad)  
   140051127:	(bad)  
   140051128:	(bad)  
   140051129:	(bad)  
   14005112a:	(bad)  
   14005112b:	(bad)  
   14005112c:	(bad)  
   14005112d:	(bad)  
   14005112e:	(bad)  
   14005112f:	(bad)  
   140051130:	(bad)  
   140051131:	(bad)  
   140051132:	(bad)  
   140051133:	(bad)  
   140051134:	(bad)  
   140051135:	(bad)  
   140051136:	(bad)  
   140051137:	(bad)  
   140051138:	(bad)  
   140051139:	(bad)  
   14005113a:	(bad)  
   14005113b:	(bad)  
   14005113c:	(bad)  
   14005113d:	(bad)  
   14005113e:	(bad)  
   14005113f:	(bad)  
   140051140:	(bad)  
   140051141:	(bad)  
   140051142:	(bad)  
   140051143:	(bad)  
   140051144:	(bad)  
   140051145:	(bad)  
   140051146:	(bad)  
   140051147:	(bad)  
   140051148:	(bad)  
   140051149:	(bad)  
   14005114a:	(bad)  
   14005114b:	(bad)  
   14005114c:	(bad)  
   14005114d:	(bad)  
   14005114e:	(bad)  
   14005114f:	(bad)  
   140051150:	(bad)  
   140051151:	(bad)  
   140051152:	(bad)  
   140051153:	(bad)  
   140051154:	(bad)  
   140051155:	(bad)  
   140051156:	(bad)  
   140051157:	(bad)  
   140051158:	(bad)  
   140051159:	(bad)  
   14005115a:	(bad)  
   14005115b:	(bad)  
   14005115c:	(bad)  
   14005115d:	(bad)  
   14005115e:	(bad)  
   14005115f:	(bad)  
   140051160:	(bad)  
   140051161:	(bad)  
   140051162:	(bad)  
   140051163:	(bad)  
   140051164:	(bad)  
   140051165:	(bad)  
   140051166:	(bad)  
   140051167:	(bad)  
   140051168:	(bad)  
   140051169:	(bad)  
   14005116a:	(bad)  
   14005116b:	(bad)  
   14005116c:	(bad)  
   14005116d:	(bad)  
   14005116e:	(bad)  
   14005116f:	(bad)  
   140051170:	(bad)  
   140051171:	(bad)  
   140051172:	(bad)  
   140051173:	(bad)  
   140051174:	(bad)  
   140051175:	(bad)  
   140051176:	(bad)  
   140051177:	(bad)  
   140051178:	(bad)  
   140051179:	(bad)  
   14005117a:	(bad)  
   14005117b:	(bad)  
   14005117c:	(bad)  
   14005117d:	(bad)  
   14005117e:	(bad)  
   14005117f:	(bad)  
   140051180:	(bad)  
   140051181:	(bad)  
   140051182:	(bad)  
   140051183:	(bad)  
   140051184:	(bad)  
   140051185:	(bad)  
   140051186:	(bad)  
   140051187:	(bad)  
   140051188:	(bad)  
   140051189:	(bad)  
   14005118a:	(bad)  
   14005118b:	(bad)  
   14005118c:	(bad)  
   14005118d:	(bad)  
   14005118e:	(bad)  
   14005118f:	(bad)  
   140051190:	(bad)  
   140051191:	(bad)  
   140051192:	(bad)  
   140051193:	(bad)  
   140051194:	(bad)  
   140051195:	(bad)  
   140051196:	(bad)  
   140051197:	(bad)  
   140051198:	(bad)  
   140051199:	(bad)  
   14005119a:	(bad)  
   14005119b:	(bad)  
   14005119c:	(bad)  
   14005119d:	(bad)  
   14005119e:	(bad)  
   14005119f:	(bad)  
   1400511a0:	(bad)  
   1400511a1:	(bad)  
   1400511a2:	(bad)  
   1400511a3:	(bad)  
   1400511a4:	(bad)  
   1400511a5:	(bad)  
   1400511a6:	(bad)  
   1400511a7:	(bad)  
   1400511a8:	(bad)  
   1400511a9:	(bad)  
   1400511aa:	(bad)  
   1400511ab:	(bad)  
   1400511ac:	(bad)  
   1400511ad:	(bad)  
   1400511ae:	(bad)  
   1400511af:	(bad)  
   1400511b0:	(bad)  
   1400511b1:	(bad)  
   1400511b2:	(bad)  
   1400511b3:	(bad)  
   1400511b4:	(bad)  
   1400511b5:	(bad)  
   1400511b6:	(bad)  
   1400511b7:	(bad)  
   1400511b8:	(bad)  
   1400511b9:	(bad)  
   1400511ba:	(bad)  
   1400511bb:	(bad)  
   1400511bc:	(bad)  
   1400511bd:	(bad)  
   1400511be:	(bad)  
   1400511bf:	(bad)  
   1400511c0:	(bad)  
   1400511c1:	(bad)  
   1400511c2:	(bad)  
   1400511c3:	(bad)  
   1400511c4:	(bad)  
   1400511c5:	(bad)  
   1400511c6:	(bad)  
   1400511c7:	(bad)  
   1400511c8:	(bad)  
   1400511c9:	(bad)  
   1400511ca:	(bad)  
   1400511cb:	(bad)  
   1400511cc:	(bad)  
   1400511cd:	(bad)  
   1400511ce:	(bad)  
   1400511cf:	(bad)  
   1400511d0:	(bad)  
   1400511d1:	(bad)  
   1400511d2:	(bad)  
   1400511d3:	(bad)  
   1400511d4:	(bad)  
   1400511d5:	(bad)  
   1400511d6:	(bad)  
   1400511d7:	(bad)  
   1400511d8:	(bad)  
   1400511d9:	(bad)  
   1400511da:	(bad)  
   1400511db:	(bad)  
   1400511dc:	(bad)  
   1400511dd:	(bad)  
   1400511de:	(bad)  
   1400511df:	(bad)  
   1400511e0:	(bad)  
   1400511e1:	(bad)  
   1400511e2:	(bad)  
   1400511e3:	(bad)  
   1400511e4:	(bad)  
   1400511e5:	(bad)  
   1400511e6:	(bad)  
   1400511e7:	(bad)  
   1400511e8:	(bad)  
   1400511e9:	(bad)  
   1400511ea:	(bad)  
   1400511eb:	(bad)  
   1400511ec:	(bad)  
   1400511ed:	(bad)  
   1400511ee:	(bad)  
   1400511ef:	(bad)  
   1400511f0:	(bad)  
   1400511f1:	(bad)  
   1400511f2:	(bad)  
   1400511f3:	(bad)  
   1400511f4:	(bad)  
   1400511f5:	(bad)  
   1400511f6:	(bad)  
   1400511f7:	(bad)  
   1400511f8:	(bad)  
   1400511f9:	(bad)  
   1400511fa:	(bad)  
   1400511fb:	(bad)  
   1400511fc:	(bad)  
   1400511fd:	(bad)  
   1400511fe:	(bad)  
   1400511ff:	(bad)  
   140051200:	(bad)  
   140051201:	(bad)  
   140051202:	(bad)  
   140051203:	(bad)  
   140051204:	(bad)  
   140051205:	(bad)  
   140051206:	(bad)  
   140051207:	(bad)  
   140051208:	(bad)  
   140051209:	(bad)  
   14005120a:	(bad)  
   14005120b:	(bad)  
   14005120c:	(bad)  
   14005120d:	(bad)  
   14005120e:	(bad)  
   14005120f:	(bad)  
   140051210:	(bad)  
   140051211:	(bad)  
   140051212:	(bad)  
   140051213:	(bad)  
   140051214:	(bad)  
   140051215:	(bad)  
   140051216:	(bad)  
   140051217:	(bad)  
   140051218:	(bad)  
   140051219:	(bad)  
   14005121a:	(bad)  
   14005121b:	(bad)  
   14005121c:	(bad)  
   14005121d:	(bad)  
   14005121e:	(bad)  
   14005121f:	(bad)  
   140051220:	(bad)  
   140051221:	(bad)  
   140051222:	(bad)  
   140051223:	(bad)  
   140051224:	(bad)  
   140051225:	(bad)  
   140051226:	(bad)  
   140051227:	(bad)  
   140051228:	(bad)  
   140051229:	(bad)  
   14005122a:	(bad)  
   14005122b:	(bad)  
   14005122c:	(bad)  
   14005122d:	(bad)  
   14005122e:	(bad)  
   14005122f:	(bad)  
   140051230:	(bad)  
   140051231:	(bad)  
   140051232:	(bad)  
   140051233:	(bad)  
   140051234:	(bad)  
   140051235:	(bad)  
   140051236:	(bad)  
   140051237:	(bad)  
   140051238:	(bad)  
   140051239:	(bad)  
   14005123a:	(bad)  
   14005123b:	(bad)  
   14005123c:	(bad)  
   14005123d:	(bad)  
   14005123e:	(bad)  
   14005123f:	(bad)  
   140051240:	(bad)  
   140051241:	(bad)  
   140051242:	(bad)  
   140051243:	(bad)  
   140051244:	(bad)  
   140051245:	(bad)  
   140051246:	(bad)  
   140051247:	(bad)  
   140051248:	(bad)  
   140051249:	(bad)  
   14005124a:	(bad)  
   14005124b:	(bad)  
   14005124c:	(bad)  
   14005124d:	(bad)  
   14005124e:	(bad)  
   14005124f:	(bad)  
   140051250:	(bad)  
   140051251:	(bad)  
   140051252:	(bad)  
   140051253:	(bad)  
   140051254:	(bad)  
   140051255:	(bad)  
   140051256:	(bad)  
   140051257:	(bad)  
   140051258:	(bad)  
   140051259:	(bad)  
   14005125a:	(bad)  
   14005125b:	(bad)  
   14005125c:	(bad)  
   14005125d:	(bad)  
   14005125e:	(bad)  
   14005125f:	(bad)  
   140051260:	(bad)  
   140051261:	(bad)  
   140051262:	(bad)  
   140051263:	(bad)  
   140051264:	(bad)  
   140051265:	(bad)  
   140051266:	(bad)  
   140051267:	(bad)  
   140051268:	(bad)  
   140051269:	(bad)  
   14005126a:	(bad)  
   14005126b:	(bad)  
   14005126c:	(bad)  
   14005126d:	(bad)  
   14005126e:	(bad)  
   14005126f:	(bad)  
   140051270:	(bad)  
   140051271:	(bad)  
   140051272:	(bad)  
   140051273:	(bad)  
   140051274:	(bad)  
   140051275:	(bad)  
   140051276:	(bad)  
   140051277:	(bad)  
   140051278:	(bad)  
   140051279:	(bad)  
   14005127a:	(bad)  
   14005127b:	(bad)  
   14005127c:	(bad)  
   14005127d:	(bad)  
   14005127e:	(bad)  
   14005127f:	(bad)  
   140051280:	(bad)  
   140051281:	(bad)  
   140051282:	(bad)  
   140051283:	(bad)  
   140051284:	(bad)  
   140051285:	(bad)  
   140051286:	(bad)  
   140051287:	(bad)  
   140051288:	(bad)  
   140051289:	(bad)  
   14005128a:	(bad)  
   14005128b:	(bad)  
   14005128c:	(bad)  
   14005128d:	(bad)  
   14005128e:	(bad)  
   14005128f:	(bad)  
   140051290:	(bad)  
   140051291:	(bad)  
   140051292:	(bad)  
   140051293:	(bad)  
   140051294:	(bad)  
   140051295:	(bad)  
   140051296:	(bad)  
   140051297:	(bad)  
   140051298:	(bad)  
   140051299:	(bad)  
   14005129a:	(bad)  
   14005129b:	(bad)  
   14005129c:	(bad)  
   14005129d:	(bad)  
   14005129e:	(bad)  
   14005129f:	(bad)  
   1400512a0:	(bad)  
   1400512a1:	(bad)  
   1400512a2:	(bad)  
   1400512a3:	(bad)  
   1400512a4:	(bad)  
   1400512a5:	(bad)  
   1400512a6:	(bad)  
   1400512a7:	(bad)  
   1400512a8:	(bad)  
   1400512a9:	(bad)  
   1400512aa:	(bad)  
   1400512ab:	(bad)  
   1400512ac:	(bad)  
   1400512ad:	(bad)  
   1400512ae:	(bad)  
   1400512af:	(bad)  
   1400512b0:	(bad)  
   1400512b1:	(bad)  
   1400512b2:	(bad)  
   1400512b3:	(bad)  
   1400512b4:	(bad)  
   1400512b5:	(bad)  
   1400512b6:	(bad)  
   1400512b7:	(bad)  
   1400512b8:	(bad)  
   1400512b9:	(bad)  
   1400512ba:	(bad)  
   1400512bb:	(bad)  
   1400512bc:	(bad)  
   1400512bd:	(bad)  
   1400512be:	(bad)  
   1400512bf:	(bad)  
   1400512c0:	(bad)  
   1400512c1:	(bad)  
   1400512c2:	(bad)  
   1400512c3:	(bad)  
   1400512c4:	(bad)  
   1400512c5:	(bad)  
   1400512c6:	(bad)  
   1400512c7:	(bad)  
   1400512c8:	(bad)  
   1400512c9:	(bad)  
   1400512ca:	(bad)  
   1400512cb:	(bad)  
   1400512cc:	(bad)  
   1400512cd:	(bad)  
   1400512ce:	(bad)  
   1400512cf:	(bad)  
   1400512d0:	(bad)  
   1400512d1:	(bad)  
   1400512d2:	(bad)  
   1400512d3:	(bad)  
   1400512d4:	(bad)  
   1400512d5:	(bad)  
   1400512d6:	(bad)  
   1400512d7:	(bad)  
   1400512d8:	(bad)  
   1400512d9:	(bad)  
   1400512da:	(bad)  
   1400512db:	(bad)  
   1400512dc:	(bad)  
   1400512dd:	(bad)  
   1400512de:	(bad)  
   1400512df:	(bad)  
   1400512e0:	(bad)  
   1400512e1:	(bad)  
   1400512e2:	(bad)  
   1400512e3:	(bad)  
   1400512e4:	(bad)  
   1400512e5:	(bad)  
   1400512e6:	(bad)  
   1400512e7:	(bad)  
   1400512e8:	(bad)  
   1400512e9:	(bad)  
   1400512ea:	(bad)  
   1400512eb:	(bad)  
   1400512ec:	(bad)  
   1400512ed:	(bad)  
   1400512ee:	(bad)  
   1400512ef:	(bad)  
   1400512f0:	(bad)  
   1400512f1:	(bad)  
   1400512f2:	(bad)  
   1400512f3:	(bad)  
   1400512f4:	(bad)  
   1400512f5:	(bad)  
   1400512f6:	(bad)  
   1400512f7:	(bad)  
   1400512f8:	(bad)  
   1400512f9:	(bad)  
   1400512fa:	(bad)  
   1400512fb:	(bad)  
   1400512fc:	(bad)  
   1400512fd:	(bad)  
   1400512fe:	(bad)  
   1400512ff:	(bad)  
   140051300:	(bad)  
   140051301:	(bad)  
   140051302:	(bad)  
   140051303:	(bad)  
   140051304:	(bad)  
   140051305:	(bad)  
   140051306:	(bad)  
   140051307:	(bad)  
   140051308:	(bad)  
   140051309:	(bad)  
   14005130a:	(bad)  
   14005130b:	(bad)  
   14005130c:	(bad)  
   14005130d:	(bad)  
   14005130e:	(bad)  
   14005130f:	(bad)  
   140051310:	(bad)  
   140051311:	(bad)  
   140051312:	(bad)  
   140051313:	(bad)  
   140051314:	(bad)  
   140051315:	(bad)  
   140051316:	(bad)  
   140051317:	(bad)  
   140051318:	(bad)  
   140051319:	(bad)  
   14005131a:	(bad)  
   14005131b:	(bad)  
   14005131c:	(bad)  
   14005131d:	(bad)  
   14005131e:	(bad)  
   14005131f:	(bad)  
   140051320:	(bad)  
   140051321:	(bad)  
   140051322:	(bad)  
   140051323:	(bad)  
   140051324:	(bad)  
   140051325:	(bad)  
   140051326:	(bad)  
   140051327:	(bad)  
   140051328:	(bad)  
   140051329:	(bad)  
   14005132a:	(bad)  
   14005132b:	(bad)  
   14005132c:	(bad)  
   14005132d:	(bad)  
   14005132e:	(bad)  
   14005132f:	(bad)  
   140051330:	(bad)  
   140051331:	(bad)  
   140051332:	(bad)  
   140051333:	(bad)  
   140051334:	(bad)  
   140051335:	(bad)  
   140051336:	(bad)  
   140051337:	(bad)  
   140051338:	(bad)  
   140051339:	(bad)  
   14005133a:	(bad)  
   14005133b:	(bad)  
   14005133c:	(bad)  
   14005133d:	(bad)  
   14005133e:	(bad)  
   14005133f:	(bad)  
   140051340:	(bad)  
   140051341:	(bad)  
   140051342:	(bad)  
   140051343:	(bad)  
   140051344:	(bad)  
   140051345:	(bad)  
   140051346:	(bad)  
   140051347:	(bad)  
   140051348:	(bad)  
   140051349:	(bad)  
   14005134a:	(bad)  
   14005134b:	(bad)  
   14005134c:	(bad)  
   14005134d:	(bad)  
   14005134e:	(bad)  
   14005134f:	(bad)  
   140051350:	(bad)  
   140051351:	(bad)  
   140051352:	(bad)  
   140051353:	(bad)  
   140051354:	(bad)  
   140051355:	(bad)  
   140051356:	(bad)  
   140051357:	(bad)  
   140051358:	(bad)  
   140051359:	(bad)  
   14005135a:	(bad)  
   14005135b:	(bad)  
   14005135c:	(bad)  
   14005135d:	(bad)  
   14005135e:	(bad)  
   14005135f:	push   QWORD PTR [rax]
   140051361:	xor    DWORD PTR [rdx],esi
   140051363:	xor    esi,DWORD PTR [rsi*1+0x39383736]
   14005136a:	rex.B
   14005136b:	rex.X
   14005136c:	rex.XB
   14005136d:	rex.R
   14005136e:	rex.RB
   14005136f:	rex.RX (bad) 
   140051371:	pop    rsp
   140051372:	add    BYTE PTR [rax],al
   140051374:	(bad)  
   140051375:	and    ah,BYTE PTR [rdi]
   140051377:	and    al,BYTE PTR [rax]
	...
   14005140d:	add    BYTE PTR [rax],al
   14005140f:	add    BYTE PTR [rcx],al
	...
   140051425:	add    BYTE PTR [rax],al
   140051427:	add    BYTE PTR [rcx],al
	...
   140051435:	add    BYTE PTR [rax],al
   140051437:	add    BYTE PTR [rcx],al
	...
   1400514e9:	add    BYTE PTR [rax],al
   1400514eb:	add    BYTE PTR [rcx],al
   1400514ed:	add    BYTE PTR [rax],al
   1400514ef:	add    BYTE PTR [rcx],al
   1400514f1:	add    BYTE PTR [rax],al
   1400514f3:	add    BYTE PTR [rcx],al
   1400514f5:	add    BYTE PTR [rax],al
   1400514f7:	add    BYTE PTR [rcx],al
	...
   14005177d:	add    BYTE PTR [rax],al
   14005177f:	add    BYTE PTR [rdx+0x53],dl
   140051782:	rex.R push rbx
   140051784:	mov    ebp,0xe7ff3ade
   140051789:	mov    ebp,0x23bd4407
   14005178e:	jrcxz  0x1400517d1
   140051790:	es jmp 0x1400517d2
   140051793:	pop    QWORD PTR [rcx]
   140051795:	add    BYTE PTR [rax],al
   140051797:	add    BYTE PTR [rdx+rdi*1+0x5c],al
   14005179b:	(bad)  
   14005179c:	jne    0x140051807
   14005179e:	ins    BYTE PTR es:[rdi],dx
   14005179f:	fs pop rsp
   1400517a1:	outs   dx,DWORD PTR ds:[rsi]
   1400517a2:	(bad)  
   1400517a3:	pop    rsp
   1400517a4:	(bad)  
   1400517a5:	outs   dx,DWORD PTR ds:[rsi]
   1400517a6:	jb     0x140051809
   1400517a8:	sub    eax,0x35383932
   1400517ad:	xor    eax,0x625c3639
   1400517b2:	outs   dx,DWORD PTR ds:[rsi]
   1400517b3:	jb     0x140051816
   1400517b5:	pop    rsp
   1400517b6:	(bad)  
   1400517b7:	jne    0x140051822
   1400517b9:	ins    BYTE PTR es:[rdi],dx
   1400517ba:	fs pop rsp
   1400517bc:	(bad)  
   1400517bd:	jne    0x140051828
   1400517bf:	ins    BYTE PTR es:[rdi],dx
   1400517c0:	fs pop rsp
   1400517c2:	fs jb  0x14005183b
   1400517c5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400517c7:	jae    0x14005183d
   1400517c9:	ss xor al,0x5c
   1400517cc:	jb     0x140051833
   1400517ce:	ins    BYTE PTR es:[rdi],dx
   1400517cf:	gs (bad) 
   1400517d1:	jae    0x140051838
   1400517d3:	pop    rsp
   1400517d4:	ja     0x14005183f
   1400517d6:	outs   dx,BYTE PTR ds:[rsi]
   1400517d7:	ss xor al,0x5c
   1400517da:	fs jb  0x140051853
   1400517dd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400517df:	jae    0x140051855
   1400517e1:	ss xor al,0x2e
   1400517e4:	jo     0x14005184a
   1400517e6:	(bad)  
	...
   140051807:	add    BYTE PTR [rcx],al
   140051809:	sbb    BYTE PTR [rcx],al
   14005180b:	add    BYTE PTR [rax],bl
   14005180d:	rex.X add BYTE PTR [rax],al
   140051810:	add    DWORD PTR [rax+rcx*1],edx
   140051813:	add    BYTE PTR [rsp+riz*2],dl
   140051816:	or     eax,DWORD PTR [rax]
   140051818:	adc    al,0x54
   14005181a:	or     al,BYTE PTR [rax]
   14005181c:	adc    al,0x34
   14005181e:	or     BYTE PTR [rax],al
   140051820:	adc    al,0x52
   140051822:	adc    BYTE PTR [rax+0x1],dh
   140051825:	sbb    DWORD PTR [rdx],ecx
   140051827:	add    BYTE PTR [rcx],bl
   140051829:	je     0x14005183c
   14005182b:	add    BYTE PTR [rcx],bl
   14005182d:	adc    BYTE PTR fs:[rax],al
   140051830:	sbb    DWORD PTR [rdi+rcx*1+0x0],edx
   140051834:	sbb    DWORD PTR [rsi+rcx*1],esi
   140051837:	add    BYTE PTR [rcx],bl
   140051839:	mov    dl,0x15
   14005183b:	rcr    BYTE PTR [rcx],0x24
   14005183e:	(bad)  
   14005183f:	add    BYTE PTR [rdx],dl
   140051841:	fs cwde 
   140051843:	add    BYTE PTR [rdx],dl
   140051845:	xor    al,0x97
   140051847:	add    BYTE PTR [rdx],dl
   140051849:	add    DWORD PTR [rax+rax*1+0x700b],edx
   140051850:	pushf  
   140051851:	mov    al,0x2
   140051853:	add    BYTE PTR [rax+0x19000004],dl
   140051859:	and    DWORD PTR [rdi],eax
   14005185b:	add    BYTE PTR [rdi],cl
   14005185d:	xor    al,0x4f
   14005185f:	add    BYTE PTR [rdi],cl
   140051861:	add    DWORD PTR [rax+0x0],ecx
   140051864:	or     BYTE PTR [rax+0x7],dh
   140051867:	(bad)  
   140051868:	(bad)  
   140051869:	push   rax
   14005186a:	add    BYTE PTR [rax],al
   14005186c:	pushf  
   14005186d:	mov    al,0x2
   14005186f:	add    BYTE PTR [rax],dh
   140051871:	add    al,BYTE PTR [rax]
   140051873:	add    BYTE PTR [rcx],ah
   140051875:	add    BYTE PTR [rax],al
   140051877:	add    BYTE PTR [rax-0x20ffffe9],ah
   14005187d:	(bad)  
   14005187e:	add    BYTE PTR [rax],al
   140051880:	cwde   
   140051881:	sub    al,BYTE PTR [rip+0x2082100]        # 0x1420d3987
   140051887:	add    BYTE PTR [rax],cl
   140051889:	fs sub al,0x0
   14005188c:	movabs al,ds:0x98000017df000017
   140051895:	sub    al,BYTE PTR [rip+0x61e1900]        # 0x14623319b
   14005189b:	add    BYTE PTR [rcx+rax*1],cl
   14005189e:	mov    eax,DWORD PTR [rax]
   1400518a0:	add    eax,0x3600470
   1400518a5:	push   rax
   1400518a6:	add    dh,BYTE PTR [rax]
   1400518a8:	pushf  
   1400518a9:	mov    al,0x2
   1400518ab:	add    BYTE PTR [rax+0x4],al
   1400518ae:	add    BYTE PTR [rax],al
   1400518b0:	and    DWORD PTR [rax],eax
   1400518b2:	add    BYTE PTR [rax],al
   1400518b4:	adc    BYTE PTR [rdx],bl
   1400518b6:	add    BYTE PTR [rax],al
   1400518b8:	cmp    eax,0xfc00001a
   1400518bd:	cmp    BYTE PTR [rip+0x40a2100],al        # 0x1440f39c3
   1400518c3:	add    BYTE PTR [rdx],cl
   1400518c5:	fs (bad) 
   1400518c7:	add    BYTE PTR [rip+0x10000654],al        # 0x150051f21
   1400518cd:	sbb    al,BYTE PTR [rax]
   1400518cf:	add    BYTE PTR [rip+0xfffffffffc00001a],bh        # 0x13c0518ef
   1400518d5:	cmp    BYTE PTR [rip+0x43c0100],al        # 0x1444119db
   1400518db:	add    BYTE PTR [rsp+rsi*2],bh
   1400518de:	or     DWORD PTR [rax],eax
   1400518e0:	(bad)  
   1400518e1:	push   rdx
   1400518e2:	add    dh,BYTE PTR [rax]
   1400518e4:	and    DWORD PTR [rax],eax
   1400518e6:	add    BYTE PTR [rax],al
   1400518e8:	rcr    BYTE PTR [rbx],1
   1400518ea:	add    BYTE PTR [rax],al
   1400518ec:	adc    BYTE PTR [rax+rax*1],bl
   1400518ef:	add    BYTE PTR [rax],bl
   1400518f1:	sbb    DWORD PTR [rip+0xa2a2100],eax        # 0x14a2f39f7
   1400518f7:	add    BYTE PTR [rdx],ch
   1400518f9:	in     al,0xe
   1400518fb:	add    BYTE PTR [rax],ah
   1400518fd:	(bad)  
   1400518fe:	adc    eax,0x14c41800
   140051903:	add    BYTE PTR [rax],dl
   140051905:	je     0x14005191a
   140051907:	add    BYTE PTR [rax],cl
   140051909:	xor    al,0x12
   14005190b:	add    al,dl
   14005190d:	sbb    eax,DWORD PTR [rax]
   14005190f:	add    BYTE PTR [rax],dl
   140051911:	sbb    al,0x0
   140051913:	add    BYTE PTR [rax],bl
   140051915:	sbb    DWORD PTR [rip+0x3161900],eax        # 0x1431b321b
   14005191b:	add    BYTE PTR [rdi],al
   14005191d:	loop   0x140051922
   14005191f:	(bad)  
   140051920:	add    dl,BYTE PTR [rax+0x0]
   140051923:	add    BYTE PTR [rax+rsi*4+0x680002],bl
   14005192a:	add    BYTE PTR [rax],al
   14005192c:	sbb    DWORD PTR [rsi],esp
   14005192e:	or     al,BYTE PTR [rax]
   140051930:	adc    al,0x1
   140051932:	sbb    DWORD PTR [rax],eax
   140051934:	or     eax,0x9e00bf0
   140051939:	rol    BYTE PTR [rdi],1
   14005193b:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143651db2
   140051942:	add    dh,BYTE PTR [rax]
   140051944:	pushf  
   140051945:	mov    al,0x2
   140051947:	add    BYTE PTR [rax+0x21000000],dh
   14005194d:	add    BYTE PTR [rdx],al
   14005194f:	add    BYTE PTR [rax],al
   140051951:	fs (bad) 
   140051953:	add    al,al
   140051955:	(bad)  
   140051956:	add    BYTE PTR [rax],al
   140051958:	or     esp,DWORD PTR [rax]
   14005195a:	add    BYTE PTR [rax],al
   14005195c:	fcomp  DWORD PTR [rdi]
   14005195e:	add    eax,0x2052100
   140051963:	add    BYTE PTR [rip+0xffffffffc0000664],al        # 0x100051fcd
   140051969:	(bad)  
   14005196a:	add    BYTE PTR [rax],al
   14005196c:	or     esp,DWORD PTR [rax]
   14005196e:	add    BYTE PTR [rax],al
   140051970:	fcomp  DWORD PTR [rdi]
   140051972:	add    eax,0x2100
   140051977:	add    BYTE PTR [rax+0x68000020],dh
   14005197d:	and    DWORD PTR [rax],eax
   14005197f:	add    BYTE PTR [rax+0x21000519],bl
   140051985:	add    eax,0x54050002
   14005198a:	(bad)  
   14005198b:	add    BYTE PTR [rax+0x68000020],dh
   140051991:	and    DWORD PTR [rax],eax
   140051993:	add    BYTE PTR [rax+0x1000519],bl
   140051999:	(bad)  
   14005199a:	or     eax,DWORD PTR [rax]
   14005199c:	(bad)  
   14005199d:	in     al,0x6
   14005199f:	add    BYTE PTR [rbp-0x2c],bl
   1400519a2:	(bad)  
   1400519a3:	add    BYTE PTR [rbp+0x74],cl
   1400519a6:	or     BYTE PTR [rax],al
   1400519a8:	rex.W
   1400519a9:	str    WORD PTR fs:[rax]
   1400519ad:	(bad)  
   1400519ae:	add    al,0xc0
   1400519b0:	add    dh,BYTE PTR [rax]
   1400519b2:	add    BYTE PTR [rax],al
   1400519b4:	and    DWORD PTR [rax],eax
   1400519b6:	add    BYTE PTR [rax],al
   1400519b8:	and    al,BYTE PTR [rax]
   1400519bb:	add    bl,cl
   1400519bd:	and    al,BYTE PTR [rax]
   1400519bf:	add    BYTE PTR [rax],al
   1400519c1:	sbb    al,BYTE PTR [rip+0x2100]        # 0x140053ac7
   1400519c7:	add    bl,cl
   1400519c9:	and    al,BYTE PTR [rax]
   1400519cb:	add    dh,ah
   1400519cd:	and    al,BYTE PTR [rax]
   1400519cf:	add    al,ch
   1400519d1:	sbb    DWORD PTR [rip+0x2082100],eax        # 0x1420d3ad7
   1400519d7:	add    BYTE PTR [rax],cl
   1400519d9:	(bad)  
   1400519da:	push   rax
   1400519db:	add    bl,cl
   1400519dd:	and    al,BYTE PTR [rax]
   1400519df:	add    dh,ah
   1400519e1:	and    al,BYTE PTR [rax]
   1400519e3:	add    al,ch
   1400519e5:	sbb    DWORD PTR [rip+0x41b2100],eax        # 0x144203aeb
   1400519eb:	add    BYTE PTR [rbx],bl
   1400519ed:	(bad)  
   1400519ee:	push   rcx
   1400519ef:	add    BYTE PTR [rax],cl
   1400519f1:	push   rsp
   1400519f2:	pop    rax
   1400519f3:	add    BYTE PTR [rax+0x22],al
   1400519f6:	add    BYTE PTR [rax],al
   1400519f8:	retf   
   1400519f9:	and    al,BYTE PTR [rax]
   1400519fb:	add    BYTE PTR [rax],al
   1400519fd:	sbb    al,BYTE PTR [rip+0x51d1900]        # 0x145223303
   140051a03:	add    BYTE PTR [rbx],cl
   140051a05:	add    DWORD PTR [rdx+0x0],edx
   140051a08:	add    al,0x70
   140051a0a:	add    esp,DWORD PTR [rax+0x2]
   140051a0d:	xor    BYTE PTR [rax],al
   140051a0f:	add    BYTE PTR [rax+rsi*4+0x2700002],bl
   140051a16:	add    BYTE PTR [rax],al
   140051a18:	and    DWORD PTR [rax],eax
   140051a1a:	add    BYTE PTR [rax],al
   140051a1c:	add    BYTE PTR [rip+0x25960000],ah        # 0x1659b1a22
   140051a22:	add    BYTE PTR [rax],al
   140051a24:	cmp    al,0x1a
   140051a26:	add    eax,0x2082100
   140051a2b:	add    BYTE PTR [rax],cl
   140051a2d:	fs push rsi
   140051a2f:	add    BYTE PTR [rax],al
   140051a31:	and    eax,0x25960000
   140051a36:	add    BYTE PTR [rax],al
   140051a38:	cmp    al,0x1a
   140051a3a:	add    eax,0x51d1900
   140051a3f:	add    BYTE PTR [rbx],cl
   140051a41:	add    DWORD PTR [rax+0x0],edx
   140051a44:	add    al,0x70
   140051a46:	add    edx,DWORD PTR [rax+0x2]
   140051a49:	xor    BYTE PTR [rax],al
   140051a4b:	add    BYTE PTR [rax+rsi*4+0x2700002],bl
   140051a52:	add    BYTE PTR [rax],al
   140051a54:	add    DWORD PTR [rsi],ecx
   140051a56:	add    DWORD PTR [rax],eax
   140051a58:	(bad)  
   140051a59:	rex.X add BYTE PTR [rax],al
   140051a5c:	add    DWORD PTR [rcx+0x6481000a],eax
   140051a62:	(bad)  
   140051a63:	add    BYTE PTR [rdx+0x54],bh
   140051a66:	(bad)  
   140051a67:	add    BYTE PTR [rax],dl
   140051a69:	je     0x140051a74
   140051a6b:	add    BYTE PTR [rax],dl
   140051a6d:	xor    al,0x8
   140051a6f:	add    BYTE PTR [rax],dl
   140051a71:	xor    cl,BYTE PTR [rax+rax*8]
   140051a74:	and    DWORD PTR [rax],eax
   140051a76:	add    BYTE PTR [rax],al
   140051a78:	shr    BYTE PTR [rdx],1
   140051a7a:	add    BYTE PTR [rax],al
   140051a7c:	rex.WX sub rax,QWORD PTR [rax]
   140051a7f:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   140051a83:	add    BYTE PTR [rcx],ah
   140051a85:	add    eax,0x74050002
   140051a8a:	(bad)  
   140051a8b:	add    al,dl
   140051a8d:	sub    al,BYTE PTR [rax]
   140051a8f:	add    BYTE PTR [rdx+0x2b],cl
   140051a92:	add    BYTE PTR [rax],al
   140051a94:	pop    rsp
   140051a95:	(bad)  
   140051a96:	add    eax,0x2100
   140051a9b:	add    BYTE PTR [rax+0x2c],al
   140051a9e:	add    BYTE PTR [rax],al
   140051aa0:	and    al,0x2d
   140051aa2:	add    BYTE PTR [rax],al
   140051aa4:	add    al,0x45
   140051aa6:	add    eax,0x40a2100
   140051aab:	add    BYTE PTR [rdx],cl
   140051aad:	je     0x140051aba
   140051aaf:	add    BYTE PTR [rip+0x40000a64],al        # 0x180052519
   140051ab5:	sub    al,0x0
   140051ab7:	add    BYTE PTR [rbp*1+0x45040000],ah
   140051abe:	add    eax,0x8120100
   140051ac3:	add    BYTE PTR [rdx],dl
   140051ac5:	push   rsp
   140051ac6:	or     eax,DWORD PTR [rax]
   140051ac8:	adc    dh,BYTE PTR [rdx+rcx*1]
   140051acb:	add    BYTE PTR [rdx],dl
   140051acd:	push   rdx
   140051ace:	(bad)  
   140051acf:	ror    BYTE PTR [rax+rsi*2],0xb
   140051ad3:	(bad)  
   140051ad4:	and    DWORD PTR [rax],eax
   140051ad6:	add    BYTE PTR [rax],al
   140051ad8:	jo     0x140051b09
   140051ada:	add    BYTE PTR [rax],al
   140051adc:	(bad)  
   140051add:	(bad)  
   140051ade:	add    BYTE PTR [rax],al
   140051ae0:	cld    
   140051ae1:	sbb    al,BYTE PTR [rip+0x4102100]        # 0x144153be7
   140051ae7:	add    BYTE PTR [rax],dl
   140051ae9:	in     al,0x9
   140051aeb:	add    BYTE PTR [rip+0x700008d4],al        # 0x1b00523c5
   140051af1:	(bad)  
   140051af2:	add    BYTE PTR [rax],al
   140051af4:	(bad)  
   140051af5:	(bad)  
   140051af6:	add    BYTE PTR [rax],al
   140051af8:	cld    
   140051af9:	sbb    al,BYTE PTR [rip+0x8120100]        # 0x148171bff
   140051aff:	add    BYTE PTR [rdx],dl
   140051b01:	push   rsp
   140051b02:	or     eax,DWORD PTR [rax]
   140051b04:	adc    dh,BYTE PTR [rdx+rcx*1]
   140051b07:	add    BYTE PTR [rdx],dl
   140051b09:	xor    cl,BYTE PTR [rsi]
   140051b0b:	ror    BYTE PTR [rax+rsi*2],0xb
   140051b0f:	(bad)  
   140051b10:	and    DWORD PTR [rax],eax
   140051b12:	add    BYTE PTR [rax],al
   140051b14:	xor    BYTE PTR [rax],al
   140051b17:	add    dh,ah
   140051b19:	xor    BYTE PTR [rax],al
   140051b1b:	add    BYTE PTR [rbx+rbx*1],dh
   140051b1e:	add    eax,0x2052100
   140051b23:	add    BYTE PTR [rip+0x40000934],al        # 0x18005245d
   140051b29:	xor    BYTE PTR [rax],al
   140051b2b:	add    dh,ah
   140051b2d:	xor    BYTE PTR [rax],al
   140051b2f:	add    BYTE PTR [rbx+rbx*1],dh
   140051b32:	add    eax,0x4191900
   140051b37:	add    BYTE PTR [rdx],cl
   140051b39:	or     al,BYTE PTR fs:[rax]
   140051b3c:	or     dl,BYTE PTR [rdx+0x6]
   140051b3f:	jo     0x140051add
   140051b41:	mov    al,0x2
   140051b43:	add    BYTE PTR [rax],ch
   140051b45:	add    BYTE PTR [rax],al
   140051b47:	add    BYTE PTR [rcx],al
   140051b49:	sbb    ecx,DWORD PTR [rcx]
   140051b4b:	add    BYTE PTR [rbx],bl
   140051b4d:	movabs ds:0xc011d013e015f017,al
   140051b56:	pshufw mm1,QWORD PTR [rsi],0x60
   140051b5a:	or     eax,0x300c50
   140051b5f:	add    BYTE PTR [rcx],ah
   140051b61:	add    BYTE PTR [rax+rax*1],cl
   140051b64:	add    ah,ah
   140051b66:	push   rsi
   140051b67:	add    BYTE PTR [rax],al
   140051b69:	(bad)  
   140051b6a:	push   rdi
   140051b6b:	add    BYTE PTR [rax],al
   140051b6d:	(bad)  
   140051b6e:	pop    rax
   140051b6f:	add    BYTE PTR [rax],al
   140051b71:	fs pop rcx
   140051b73:	add    BYTE PTR [rax],al
   140051b75:	push   rsp
   140051b76:	pop    rdx
   140051b77:	add    BYTE PTR [rax],al
   140051b79:	xor    al,0x61
   140051b7b:	add    BYTE PTR [rax+0x49],al
   140051b7e:	add    BYTE PTR [rax],al
   140051b80:	rex.WB add BYTE PTR [r8d],al
   140051b84:	loopne 0x140051ba1
   140051b86:	add    eax,0x2100
   140051b8b:	add    BYTE PTR [rax+0x49],al
   140051b8e:	add    BYTE PTR [rax],al
   140051b90:	rex.WB add BYTE PTR [r8d],al
   140051b94:	loopne 0x140051bb1
   140051b96:	add    eax,0x2100
   140051b9b:	add    BYTE PTR [rdi+0x49],ah
   140051b9e:	add    BYTE PTR [rax],al
   140051ba0:	jrcxz  0x140051bec
   140051ba2:	add    BYTE PTR [rax],al
   140051ba4:	mov    esp,0x2100051b
   140051ba9:	or     BYTE PTR [rdx],al
   140051bab:	add    BYTE PTR [rax],cl
   140051bad:	(bad)  
   140051bae:	pop    rax
   140051baf:	add    BYTE PTR [rdi+0x49],ah
   140051bb2:	add    BYTE PTR [rax],al
   140051bb4:	jrcxz  0x140051c00
   140051bb6:	add    BYTE PTR [rax],al
   140051bb8:	mov    esp,0x2100051b
   140051bbd:	mov    BYTE PTR [rdx],cl
   140051bbf:	add    BYTE PTR [rax+0x7a0056e4],cl
   140051bc5:	(bad)  
   140051bc6:	push   rdi
   140051bc7:	add    BYTE PTR [rdx],ch
   140051bc9:	fs pop rcx
   140051bcb:	add    BYTE PTR [rax],cl
   140051bcd:	push   rsp
   140051bce:	pop    rdx
   140051bcf:	add    BYTE PTR [rsp+rsi*1],al
   140051bd2:	(bad)  
   140051bd3:	add    BYTE PTR [rax+0x49],al
   140051bd6:	add    BYTE PTR [rax],al
   140051bd8:	rex.WB add BYTE PTR [r8d],al
   140051bdc:	loopne 0x140051bf9
   140051bde:	add    eax,0x41f1900
   140051be3:	add    BYTE PTR [rip+0x6005b01],cl        # 0x1460576ea
   140051be9:	lock add al,0x70
   140051bec:	pushf  
   140051bed:	mov    al,0x2
   140051bef:	add    BYTE PTR [rax+0x1000002],ah
   140051bf5:	sbb    BYTE PTR [rdx],cl
   140051bf7:	add    BYTE PTR [rax],bl
   140051bf9:	fs (bad) 
   140051bfb:	add    BYTE PTR [rax],bl
   140051bfd:	push   rsp
   140051bfe:	or     eax,0xc341800
   140051c03:	add    BYTE PTR [rax],bl
   140051c05:	jb     0x140051c1b
   140051c07:	rcl    BYTE PTR [rdx],1
   140051c09:	rcl    BYTE PTR [rax],0x70
   140051c0c:	and    DWORD PTR [rax],eax
   140051c0e:	add    BYTE PTR [rax],al
   140051c10:	mov    al,0x87
   140051c12:	add    BYTE PTR [rax],al
   140051c14:	fadd   DWORD PTR [rdi+0x1c380000]
   140051c1a:	add    eax,0x6132100
   140051c1f:	add    BYTE PTR [rbx],dl
   140051c21:	hlt    
   140051c22:	(bad)  
   140051c23:	add    BYTE PTR [rsi],cl
   140051c25:	in     al,0x6
   140051c27:	add    BYTE PTR [rip+0xffffffffb0000564],al        # 0xf0052191
   140051c2d:	xchg   DWORD PTR [rax],eax
   140051c2f:	add    al,bl
   140051c31:	xchg   DWORD PTR [rax],eax
   140051c33:	add    BYTE PTR [rax],bh
   140051c35:	sbb    al,0x5
   140051c37:	add    BYTE PTR [rcx],al
   140051c39:	or     eax,DWORD PTR [rsi]
   140051c3b:	add    BYTE PTR [rbx],cl
   140051c3d:	xor    al,0x8
   140051c3f:	add    BYTE PTR [rbx],cl
   140051c41:	ror    BYTE PTR [rcx],1
   140051c43:	rol    BYTE PTR [rdi],0x70
   140051c46:	(bad)  
   140051c47:	push   rax
   140051c48:	add    DWORD PTR [rax+rcx*1],edx
   140051c4b:	add    BYTE PTR [rax+rbp*2],dl
   140051c4e:	add    eax,DWORD PTR [rax]
   140051c50:	pcmpgtb mm1,QWORD PTR [rax+rax*1]
   140051c54:	sysenter 
   140051c56:	or     al,BYTE PTR [rax]
   140051c58:	(bad)  
   140051c5a:	or     esi,DWORD PTR [rax+0x21]
   140051c5d:	add    BYTE PTR [rax],al
   140051c5f:	add    al,dl
   140051c61:	mov    al,BYTE PTR [rax]
   140051c63:	add    bh,bh
   140051c65:	mov    al,BYTE PTR [rax]
   140051c67:	add    BYTE PTR [rax+0x2100051c],al
   140051c6d:	add    eax,0x34050002
   140051c72:	or     BYTE PTR [rax],al
   140051c74:	ror    BYTE PTR [rdx-0x75010000],1
   140051c7a:	add    BYTE PTR [rax],al
   140051c7c:	sbb    BYTE PTR [rax*1+0x60f0100],0x0
   140051c84:	pcmpgtb mm1,QWORD PTR [rdx]
   140051c87:	add    BYTE PTR [rdi],cl
   140051c89:	push   rsp
   140051c8a:	or     DWORD PTR [rax],eax
   140051c8c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140051c8f:	jo     0x140051c92
   140051c91:	sbb    cl,BYTE PTR [rdx]
   140051c93:	add    BYTE PTR [rdx],bl
   140051c95:	je     0x140051ca6
   140051c97:	add    BYTE PTR [rdx],bl
   140051c99:	fs (bad) 
   140051c9b:	add    BYTE PTR [rdx],bl
   140051c9d:	push   rsp
   140051c9e:	or     eax,0xc341a00
   140051ca3:	add    BYTE PTR [rdx],bl
   140051ca5:	xchg   edx,eax
   140051ca6:	(bad)  
   140051ca7:	rol    BYTE PTR [rcx],0x14
   140051caa:	or     BYTE PTR [rax],al
   140051cac:	adc    al,0x64
   140051cae:	or     al,0x0
   140051cb0:	adc    al,0x54
   140051cb2:	or     eax,DWORD PTR [rax]
   140051cb4:	adc    al,0x34
   140051cb6:	or     al,BYTE PTR [rax]
   140051cb8:	adc    al,0x72
   140051cba:	adc    BYTE PTR [rax+0x1],dh
   140051cbd:	(bad)  
   140051cbe:	or     al,BYTE PTR [rax]
   140051cc0:	(bad)  
   140051cc1:	push   rsp
   140051cc2:	lldt   WORD PTR [rsi]
   140051cc5:	xor    al,0xe
   140051cc7:	add    BYTE PTR [rsi],dl
   140051cc9:	jb     0x140051cdd
   140051ccb:	lock adc al,dl
   140051cce:	(bad)  
   140051ccf:	ror    BYTE PTR [rax+rsi*2],0xb
   140051cd3:	(bad)  
   140051cd4:	and    DWORD PTR [rax],eax
   140051cd6:	add    BYTE PTR [rax],al
   140051cd8:	movabs al,ds:0xf800008fdb00008f
   140051ce1:	sbb    al,0x5
   140051ce3:	add    BYTE PTR [rcx],ah
   140051ce5:	add    eax,0x74050002
   140051cea:	add    eax,0x8fa000
   140051cef:	add    bl,bl
   140051cf1:	pop    QWORD PTR [rax]
   140051cf3:	add    al,bh
   140051cf5:	sbb    al,0x5
   140051cf7:	add    BYTE PTR [rcx],al
   140051cf9:	adc    eax,0x52150004
   140051cfe:	adc    DWORD PTR [rax+0x10],esp
   140051d01:	push   rax
   140051d02:	wrmsr  
   140051d04:	and    DWORD PTR [rax],eax
   140051d06:	add    BYTE PTR [rax],al
   140051d08:	push   rax
   140051d09:	nop
   140051d0a:	add    BYTE PTR [rax],al
   140051d0c:	xchg   DWORD PTR [rax+0x1d280000],edx
   140051d12:	add    eax,0x2052100
   140051d17:	add    BYTE PTR [rip+0x50000674],al        # 0x190052391
   140051d1d:	nop
   140051d1e:	add    BYTE PTR [rax],al
   140051d20:	xchg   DWORD PTR [rax+0x1d280000],edx
   140051d26:	add    eax,0x60f0100
   140051d2b:	add    BYTE PTR [rdi],cl
   140051d2d:	push   rsp
   140051d2e:	or     BYTE PTR [rax],al
   140051d30:	sysenter 
   140051d32:	(bad)  
   140051d33:	add    BYTE PTR [rdi],cl
   140051d35:	xor    cl,BYTE PTR [rbx]
   140051d37:	(bad)  
   140051d38:	and    DWORD PTR [rax],eax
   140051d3a:	add    BYTE PTR [rax],al
   140051d3c:	lock nop
   140051d3e:	add    BYTE PTR [rax],al
   140051d40:	(bad)  
   140051d41:	xchg   ecx,eax
   140051d42:	add    BYTE PTR [rax],al
   140051d44:	sub    BYTE PTR [rip+0x5210005],bl        # 0x145261d4f
   140051d4a:	add    al,BYTE PTR [rax]
   140051d4c:	add    eax,0xf0000674
   140051d51:	nop
   140051d52:	add    BYTE PTR [rax],al
   140051d54:	(bad)  
   140051d55:	xchg   ecx,eax
   140051d56:	add    BYTE PTR [rax],al
   140051d58:	sub    BYTE PTR [rip+0xf010005],bl        # 0x14f061d63
   140051d5e:	(bad)  
   140051d5f:	add    BYTE PTR [rdi],cl
   140051d61:	or     DWORD PTR fs:[rax],eax
   140051d64:	sysenter 
   140051d66:	or     BYTE PTR [rax],al
   140051d68:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140051d6b:	jo     0x140051d8e
   140051d6d:	add    BYTE PTR [rax],al
   140051d6f:	add    BYTE PTR [rax+0x7000095],dh
   140051d75:	xchg   esi,eax
   140051d76:	add    BYTE PTR [rax],al
   140051d78:	cwde   
   140051d79:	sbb    eax,0x18210005
   140051d7e:	(bad)  
   140051d7f:	add    BYTE PTR [rax],bl
   140051d81:	hlt    
   140051d82:	(bad)  
   140051d83:	add    DWORD PTR [rax],edx
   140051d85:	(bad)  
   140051d86:	sbb    BYTE PTR [rcx],al
   140051d88:	or     ah,al
   140051d8a:	sbb    DWORD PTR [rcx],eax
   140051d8c:	mov    al,0x95
   140051d8e:	add    BYTE PTR [rax],al
   140051d90:	(bad)  
   140051d91:	xchg   esi,eax
   140051d92:	add    BYTE PTR [rax],al
   140051d94:	cwde   
   140051d95:	sbb    eax,0x20190005
   140051d9a:	(bad)  
   140051d9b:	add    BYTE PTR [rsi],cl
   140051d9d:	add    DWORD PTR [rdx],ebx
   140051d9f:	add    DWORD PTR [rdi],eax
   140051da1:	loopne 0x140051da8
   140051da3:	jo     0x140051da9
   140051da5:	(bad)  
   140051da6:	add    edx,DWORD PTR [rax+0x2]
   140051da9:	xor    BYTE PTR [rax],al
   140051dab:	add    BYTE PTR [rax+rsi*4+0x8a00002],bl
   140051db2:	add    BYTE PTR [rax],al
   140051db4:	add    DWORD PTR [rax+rcx*1],edx
   140051db7:	add    BYTE PTR [rsp+riz*2],dl
   140051dba:	(bad)  
   140051dbb:	add    BYTE PTR [rsp+rdx*2],dl
   140051dbe:	or     eax,0xc341400
   140051dc3:	add    BYTE PTR [rdx+rdx*4],dl
   140051dc6:	adc    BYTE PTR [rax+0x1],dh
   140051dc9:	ins    DWORD PTR es:[rdi],dx
   140051dca:	or     BYTE PTR [rax],al
   140051dcc:	ins    DWORD PTR es:[rdi],dx
   140051dcd:	je     0x140051dd9
   140051dcf:	add    BYTE PTR [rbx+0x64],ah
   140051dd2:	or     BYTE PTR [rax],al
   140051dd4:	or     dh,BYTE PTR [rbx+rcx*1]
   140051dd7:	add    BYTE PTR [rdx],cl
   140051dd9:	push   rdx
   140051dda:	(bad)  
   140051ddb:	push   rax
   140051ddc:	and    DWORD PTR [rax],eax
   140051dde:	add    al,BYTE PTR [rax]
   140051de0:	add    BYTE PTR [rsi+rax*1],dh
   140051de3:	add    BYTE PTR [rax-0x63],al
   140051de6:	add    BYTE PTR [rax],al
   140051de8:	addr32 popf 
   140051dea:	add    BYTE PTR [rax],al
   140051dec:	lods   al,BYTE PTR ds:[rsi]
   140051ded:	cs add eax,0x2052100
   140051df3:	add    BYTE PTR [rip+0x40000634],al        # 0x18005242d
   140051df9:	popf   
   140051dfa:	add    BYTE PTR [rax],al
   140051dfc:	addr32 popf 
   140051dfe:	add    BYTE PTR [rax],al
   140051e00:	lods   al,BYTE PTR ds:[rsi]
   140051e01:	cs add eax,0x83b0100
   140051e07:	add    BYTE PTR [rbx],bh
   140051e09:	je     0x140051e11
   140051e0b:	add    BYTE PTR [rdi],cl
   140051e0d:	push   rsp
   140051e0e:	or     BYTE PTR [rax],al
   140051e10:	sysenter 
   140051e12:	(bad)  
   140051e13:	add    BYTE PTR [rdi],cl
   140051e15:	xor    cl,BYTE PTR [rbx]
   140051e17:	(bad)  
   140051e18:	and    DWORD PTR [rax],eax
   140051e1a:	add    BYTE PTR [rax],al
   140051e1c:	push   rax
   140051e1d:	lahf   
   140051e1e:	add    BYTE PTR [rax],al
   140051e20:	addr32 lahf 
   140051e22:	add    BYTE PTR [rax],al
   140051e24:	rex.R (bad) 
   140051e26:	add    eax,0x60f2100
   140051e2b:	add    BYTE PTR [rdi],cl
   140051e2d:	(bad)  
   140051e2e:	or     BYTE PTR [rax],al
   140051e30:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140051e34:	add    eax,0x50000654
   140051e39:	lahf   
   140051e3a:	add    BYTE PTR [rax],al
   140051e3c:	addr32 lahf 
   140051e3e:	add    BYTE PTR [rax],al
   140051e40:	rex.R (bad) 
   140051e42:	add    eax,0x40a0100
   140051e47:	add    BYTE PTR [rdx],cl
   140051e49:	xor    al,0x9
   140051e4b:	add    BYTE PTR [rdx],cl
   140051e4d:	xor    al,BYTE PTR [rsi]
   140051e4f:	(bad)  
   140051e50:	and    DWORD PTR [rax],eax
   140051e52:	add    BYTE PTR [rax],al
   140051e54:	lock movabs eax,ds:0x28440000a2100000
   140051e5e:	add    eax,0x2002100
   140051e63:	add    BYTE PTR [rax],al
   140051e65:	xor    al,0x6
   140051e67:	add    al,dh
   140051e69:	movabs eax,ds:0x28440000a2100000
   140051e72:	add    eax,0x2052100
   140051e77:	add    BYTE PTR [rip+0xfffffffff0000634],al        # 0x1300524b1
   140051e7d:	movabs eax,ds:0x28440000a2100000
   140051e86:	add    eax,0x8380100
   140051e8b:	add    BYTE PTR [rax],bh
   140051e8d:	je     0x140051e95
   140051e8f:	add    BYTE PTR [rdi],cl
   140051e91:	push   rsp
   140051e92:	or     BYTE PTR [rax],al
   140051e94:	sysenter 
   140051e96:	(bad)  
   140051e97:	add    BYTE PTR [rdi],cl
   140051e99:	xor    cl,BYTE PTR [rbx]
   140051e9b:	(bad)  
   140051e9c:	add    DWORD PTR [rsp+rcx*1],ebx
   140051e9f:	add    BYTE PTR [rsp+riz*2],bl
   140051ea2:	or     eax,0xc541c00
   140051ea7:	add    BYTE PTR [rsp+rsi*1],bl
   140051eaa:	or     eax,DWORD PTR [rax]
   140051eac:	sbb    al,0x32
   140051eae:	sbb    al,dh
   140051eb0:	(bad)  
   140051eb1:	loopne 0x140051ec7
   140051eb3:	rcl    BYTE PTR [rdx],1
   140051eb5:	rcl    BYTE PTR [rax],0x70
   140051eb8:	add    DWORD PTR [rax],ebx
   140051eba:	or     al,BYTE PTR [rax]
   140051ebc:	sbb    BYTE PTR [rbx+rdx*1+0x0],ah
   140051ec0:	sbb    BYTE PTR [rdx+rdx*1+0x0],dl
   140051ec4:	sbb    BYTE PTR [rax+rdx*1],dh
   140051ec7:	add    BYTE PTR [rax],bl
   140051ec9:	mov    dl,0x14
   140051ecb:	rcl    BYTE PTR [rdx],1
   140051ecd:	rcl    BYTE PTR [rax],0x70
   140051ed0:	add    DWORD PTR [rcx+0xe],eax
   140051ed3:	add    BYTE PTR [rcx-0xc],al
   140051ed6:	add    al,0x0
   140051ed8:	cmp    al,0x74
   140051eda:	add    eax,0xc643700
   140051edf:	add    BYTE PTR [rdx],dh
   140051ee1:	push   rsp
   140051ee2:	or     eax,DWORD PTR [rax]
   140051ee4:	sub    eax,0xa000a34
   140051ee9:	push   rdx
   140051eea:	(bad)  
   140051eeb:	loopne 0x140051ef1
   140051eed:	rol    BYTE PTR [rdx],1
   140051eef:	rol    BYTE PTR [rcx],0x1a
   140051ef2:	or     al,BYTE PTR [rax]
   140051ef4:	sbb    dh,BYTE PTR [rcx+rcx*1+0x0]
   140051ef8:	sbb    ah,BYTE PTR [rax+rcx*1+0x0]
   140051efc:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140051f00:	sbb    dh,BYTE PTR [rsi+rax*1]
   140051f03:	add    BYTE PTR [rdx],bl
   140051f05:	xor    dl,BYTE PTR [rsi]
   140051f07:	shl    BYTE PTR [rcx],0x0
   140051f0a:	add    BYTE PTR [rax],al
   140051f0c:	movabs al,ds:0x2c0000acc20000ac
   140051f15:	(bad)  
   140051f16:	add    eax,0x2052100
   140051f1b:	add    BYTE PTR [rip+0xffffffffa0000734],al        # 0xe0052655
   140051f21:	lods   al,BYTE PTR ds:[rsi]
   140051f22:	add    BYTE PTR [rax],al
   140051f24:	ret    0xac
   140051f27:	add    BYTE PTR [rdi+rbx*1],ch
   140051f2a:	add    eax,0x60f0100
   140051f2f:	add    BYTE PTR [rdi],cl
   140051f31:	or     DWORD PTR fs:[rax],eax
   140051f34:	andps  xmm1,XMMWORD PTR [rax]
   140051f37:	add    BYTE PTR [rdi],cl
   140051f39:	xor    cl,BYTE PTR [rbx]
   140051f3b:	jo     0x140051f56
   140051f3d:	sbb    DWORD PTR [rdx],eax
   140051f3f:	add    BYTE PTR [rdi],al
   140051f41:	add    DWORD PTR [rbx],ebx
   140051f43:	add    BYTE PTR [rax+rsi*4+0xc00002],bl
   140051f4a:	add    BYTE PTR [rax],al
   140051f4c:	add    DWORD PTR [rcx],ebx
   140051f4e:	or     al,BYTE PTR [rax]
   140051f50:	sbb    DWORD PTR [rax+rdx*1],esi
   140051f53:	add    BYTE PTR [rcx],bl
   140051f55:	jb     0x140051f6c
   140051f57:	lock adc esp,eax
   140051f5a:	adc    eax,edx
   140051f5c:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b652bd3
   140051f63:	push   rax
   140051f64:	add    DWORD PTR [rdx],ebx
   140051f66:	or     al,BYTE PTR [rax]
   140051f68:	sbb    dh,BYTE PTR [rbp+rcx*1+0x0]
   140051f6c:	sbb    ah,BYTE PTR [rsp+rcx*1+0x0]
   140051f70:	sbb    dl,BYTE PTR [rbx+rcx*1+0x0]
   140051f74:	sbb    dh,BYTE PTR [rdx+rcx*1]
   140051f77:	add    BYTE PTR [rdx],bl
   140051f79:	jb     0x140051f91
   140051f7b:	rol    BYTE PTR [rcx],0x18
   140051f7e:	or     al,BYTE PTR [rax]
   140051f80:	sbb    BYTE PTR [rbx+rdx*1+0x0],ah
   140051f84:	sbb    BYTE PTR [rcx+rdx*1+0x0],dl
   140051f88:	sbb    BYTE PTR [rax+rdx*1],dh
   140051f8b:	add    BYTE PTR [rax],bl
   140051f8d:	mov    dl,0x14
   140051f8f:	rcl    BYTE PTR [rdx],1
   140051f91:	rcl    BYTE PTR [rax],0x70
   140051f94:	add    DWORD PTR [rdx],ecx
   140051f96:	add    al,0x0
   140051f98:	or     dh,BYTE PTR [rax+rcx*1]
   140051f9b:	add    BYTE PTR [rdx],cl
   140051f9d:	push   rdx
   140051f9e:	(bad)  
   140051f9f:	jo     0x140051fa2
   140051fa1:	sub    al,BYTE PTR [rsi]
   140051fa3:	add    BYTE PTR [rdx],ch
   140051fa5:	fs (bad) 
   140051fa7:	add    BYTE PTR [rdx],cl
   140051fa9:	xor    al,0x7
   140051fab:	add    BYTE PTR [rdx],cl
   140051fad:	xor    al,BYTE PTR [rsi]
   140051faf:	jo     0x140051fd2
   140051fb1:	add    BYTE PTR [rdx],al
   140051fb3:	add    BYTE PTR [rax],al
   140051fb5:	fs (bad) 
   140051fb7:	add    BYTE PTR [rax-0x46],ah
   140051fba:	add    BYTE PTR [rax],al
   140051fbc:	test   DWORD PTR [rdx+0x1fd80000],edi
   140051fc2:	add    eax,0x2052100
   140051fc7:	add    BYTE PTR [rip+0x60000664],al        # 0x1a0052631
   140051fcd:	mov    edx,0xba850000
   140051fd2:	add    BYTE PTR [rax],al
   140051fd4:	fcomp  DWORD PTR [rdi]
   140051fd6:	add    eax,0x40a0100
   140051fdb:	add    BYTE PTR [rdx],cl
   140051fdd:	xor    al,0x7
   140051fdf:	add    BYTE PTR [rdx],cl
   140051fe1:	xor    al,BYTE PTR [rsi]
   140051fe3:	jo     0x140051fe6
   140051fe5:	sbb    al,0xc
   140051fe7:	add    BYTE PTR [rsp+riz*2],bl
   140051fea:	adc    eax,DWORD PTR [rax]
   140051fec:	sbb    al,0x54
   140051fee:	adc    al,BYTE PTR [rax]
   140051ff0:	sbb    al,0x34
   140051ff2:	adc    BYTE PTR [rax],al
   140051ff4:	sbb    al,0x92
   140051ff6:	sbb    al,dh
   140051ff8:	(bad)  
   140051ff9:	loopne 0x14005200f
   140051ffb:	rcl    BYTE PTR [rdx],1
   140051ffd:	rcl    BYTE PTR [rax],0x70
   140052000:	add    DWORD PTR [rax+rcx*1],edx
   140052003:	add    BYTE PTR [rsp+riz*2],dl
   140052006:	or     eax,0xc541400
   14005200b:	add    BYTE PTR [rsp+rsi*1],dl
   14005200e:	or     eax,DWORD PTR [rax]
   140052010:	adc    al,0x72
   140052012:	adc    BYTE PTR [rax+0x1],dh
   140052015:	clts   
   140052017:	add    BYTE PTR [rdi],cl
   140052019:	fs or  eax,0xc340f00
   14005201f:	add    BYTE PTR [rdi],cl
   140052021:	xchg   edx,eax
   140052022:	or     esi,DWORD PTR [rax+0x21]
   140052025:	add    BYTE PTR [rax],al
   140052027:	add    al,ah
   140052029:	mov    edi,0xc01f0000
   14005202e:	add    BYTE PTR [rax],al
   140052030:	rex.W and BYTE PTR [rip+0x2052100],al        # 0x1420a4137
   140052037:	add    BYTE PTR [rip+0xffffffffe0000834],al        # 0x120052871
   14005203d:	mov    edi,0xc01f0000
   140052042:	add    BYTE PTR [rax],al
   140052044:	rex.W and BYTE PTR [rip+0x8130100],al        # 0x14818214b
   14005204b:	add    BYTE PTR [rbx],dl
   14005204d:	or     al,BYTE PTR fs:[rax]
   140052050:	adc    edx,DWORD PTR [rcx+rcx*1+0x0]
   140052054:	adc    esi,DWORD PTR [rdx]
   140052056:	(bad)  
   140052058:	or     eax,0x21700bc0
   14005205d:	add    BYTE PTR [rax],al
   14005205f:	add    al,dh
   140052061:	rol    BYTE PTR [rax],0x0
   140052064:	and    al,cl
   140052066:	add    BYTE PTR [rax],al
   140052068:	sub    BYTE PTR [rip+0x2002100],r8b        # 0x14205416f
   14005206f:	add    BYTE PTR [rax],al
   140052071:	xor    al,0x7
   140052073:	add    al,dh
   140052075:	rol    BYTE PTR [rax],0x0
   140052078:	and    al,cl
   14005207a:	add    BYTE PTR [rax],al
   14005207c:	sub    BYTE PTR [rip+0x2052100],r8b        # 0x1420a4183
   140052083:	add    BYTE PTR [rip+0xfffffffff0000734],al        # 0x1300527bd
   140052089:	rol    BYTE PTR [rax],0x0
   14005208c:	and    al,cl
   14005208e:	add    BYTE PTR [rax],al
   140052090:	sub    BYTE PTR [rip+0x2100],r8b        # 0x140054197
   140052097:	add    BYTE PTR [rax+0x2f0000c1],dh
   14005209d:	ret    0x0
   1400520a0:	mov    eax,0x21000520
   1400520a5:	add    eax,0x34050002
   1400520aa:	or     BYTE PTR [rax],al
   1400520ac:	mov    al,0xc1
   1400520ae:	add    BYTE PTR [rax],al
   1400520b0:	(bad)  
   1400520b1:	ret    0x0
   1400520b4:	mov    eax,0x1000520
   1400520b9:	(bad)  
   1400520ba:	or     BYTE PTR [rax],al
   1400520bc:	(bad)  
   1400520bd:	or     DWORD PTR fs:[rax],eax
   1400520c0:	(bad)  
   1400520c1:	push   rsp
   1400520c2:	or     eax,DWORD PTR [rax]
   1400520c4:	(bad)  
   1400520c5:	xor    cl,BYTE PTR [rdx]
   1400520c7:	ror    BYTE PTR [rax],1
   1400520c9:	rol    BYTE PTR [rsi],0x70
   1400520cc:	and    DWORD PTR [rax],eax
   1400520ce:	add    BYTE PTR [rax],al
   1400520d0:	push   rax
   1400520d1:	ret    
   1400520d2:	add    BYTE PTR [rax],al
   1400520d4:	test   bl,al
   1400520d6:	add    BYTE PTR [rax],al
   1400520d8:	js     0x140052100
   1400520da:	add    eax,0x2052100
   1400520df:	add    BYTE PTR [rip+0x500006c4],al        # 0x1900527a9
   1400520e5:	ret    
   1400520e6:	add    BYTE PTR [rax],al
   1400520e8:	test   bl,al
   1400520ea:	add    BYTE PTR [rax],al
   1400520ec:	js     0x140052114
   1400520ee:	add    eax,0x82f0100
   1400520f3:	add    BYTE PTR [rdi],ch
   1400520f5:	je     0x1400520fd
   1400520f7:	add    BYTE PTR [rdi],cl
   1400520f9:	push   rsp
   1400520fa:	or     BYTE PTR [rax],al
   1400520fc:	sysenter 
   1400520fe:	(bad)  
   1400520ff:	add    BYTE PTR [rdi],cl
   140052101:	xor    cl,BYTE PTR [rbx]
   140052103:	(bad)  
   140052104:	add    DWORD PTR [rdi],edx
   140052106:	or     BYTE PTR [rax],al
   140052108:	(bad)  
   140052109:	je     0x140052112
   14005210b:	add    BYTE PTR [rdi],cl
   14005210d:	fs (bad) 
   14005210f:	add    BYTE PTR [rdx],cl
   140052111:	xor    al,0x8
   140052113:	add    BYTE PTR [rdx],cl
   140052115:	xor    al,BYTE PTR [rsi]
   140052117:	push   rax
   140052118:	and    DWORD PTR [rax],eax
   14005211a:	add    BYTE PTR [rax],al
   14005211c:	nop
   14005211d:	enter  0x0,0xde
   140052121:	enter  0x0,0x60
   140052125:	and    DWORD PTR [rip+0x2100],eax        # 0x14005422b
   14005212b:	add    dh,bl
   14005212d:	enter  0x0,0xa
   140052131:	leave  
   140052132:	add    BYTE PTR [rax],al
   140052134:	and    QWORD PTR [rip+0x2082100],r8        # 0x1420d423b
   14005213b:	add    BYTE PTR [rax],cl
   14005213d:	push   rsp
   14005213e:	rex.WRXB add r14b,r11b
   140052141:	enter  0x0,0xa
   140052145:	leave  
   140052146:	add    BYTE PTR [rax],al
   140052148:	and    QWORD PTR [rip+0x2082100],r8        # 0x1420d424f
   14005214f:	add    BYTE PTR [rax],cl
   140052151:	je     0x1400521a4
   140052153:	add    BYTE PTR [rax-0x21ffff38],dl
   140052159:	enter  0x0,0x60
   14005215d:	and    DWORD PTR [rip+0x51e1900],eax        # 0x145233a63
   140052163:	add    BYTE PTR [rcx+rax*1],cl
   140052166:	rex.WX add BYTE PTR [rip+0x26003c0],al        # 0x14265252d
   14005216d:	xor    BYTE PTR [rax],al
   14005216f:	add    BYTE PTR [rax+rsi*4+0x2400002],bl
   140052176:	add    BYTE PTR [rax],al
   140052178:	and    DWORD PTR [rax],eax
   14005217a:	add    BYTE PTR [rax],al
   14005217c:	nop
   14005217d:	retf   0x0
   140052180:	mov    ebp,0x140000ca
   140052185:	and    al,BYTE PTR [rip+0x4002100]        # 0x14405428b
   14005218b:	add    BYTE PTR [rax],al
   14005218d:	(bad)  
   14005218e:	push   rax
   14005218f:	add    BYTE PTR [rax],al
   140052191:	xor    al,0x55
   140052193:	add    BYTE PTR [rax-0x42ffff36],dl
   140052199:	retf   0x0
   14005219c:	adc    al,0x22
   14005219e:	add    eax,0x2100
   1400521a3:	add    BYTE PTR [rbp-0x1effff36],bh
   1400521a9:	retf   0x0
   1400521ac:	cld    
   1400521ad:	and    DWORD PTR [rip+0x2100],eax        # 0x1400542b3
   1400521b3:	add    cl,ah
   1400521b5:	retf   0x0
   1400521b8:	adc    ecx,ebx
   1400521ba:	add    BYTE PTR [rax],al
   1400521bc:	call   0x1610526e2
   1400521c1:	add    BYTE PTR [rdx],al
   1400521c3:	add    BYTE PTR [rax],al
   1400521c5:	push   rsp
   1400521c6:	push   rsi
   1400521c7:	add    cl,ah
   1400521c9:	retf   0x0
   1400521cc:	adc    ecx,ebx
   1400521ce:	add    BYTE PTR [rax],al
   1400521d0:	call   0x1610526f6
   1400521d5:	or     BYTE PTR [rdx],al
   1400521d7:	add    BYTE PTR [rax],cl
   1400521d9:	push   rsp
   1400521da:	push   rsi
   1400521db:	add    cl,ah
   1400521dd:	retf   0x0
   1400521e0:	adc    ecx,ebx
   1400521e2:	add    BYTE PTR [rax],al
   1400521e4:	call   0x16105270a
   1400521e9:	or     BYTE PTR [rdx],al
   1400521eb:	add    BYTE PTR [rax],cl
   1400521ed:	fs push rcx
   1400521ef:	add    BYTE PTR [rbp-0x1effff36],bh
   1400521f5:	retf   0x0
   1400521f8:	cld    
   1400521f9:	and    DWORD PTR [rip+0x4082100],eax        # 0x1440d42ff
   1400521ff:	add    BYTE PTR [rax],cl
   140052201:	(bad)  
   140052202:	push   rax
   140052203:	add    BYTE PTR [rsp+rsi*1],al
   140052206:	push   rbp
   140052207:	add    BYTE PTR [rax-0x42ffff36],dl
   14005220d:	retf   0x0
   140052210:	adc    al,0x22
   140052212:	add    eax,0x31d1900
   140052217:	add    BYTE PTR [rbx],cl
   140052219:	add    DWORD PTR [rdx+0x0],edx
   14005221c:	add    al,0x70
   14005221e:	add    BYTE PTR [rax],al
   140052220:	pushf  
   140052221:	mov    al,0x2
   140052223:	add    BYTE PTR [rax+0x2],dh
   140052226:	add    BYTE PTR [rax],al
   140052228:	and    DWORD PTR [rax],eax
   14005222a:	(bad)  
   14005222b:	add    BYTE PTR [rax],al
   14005222d:	hlt    
   14005222e:	rex.WX add BYTE PTR [rax],al
   140052231:	in     al,0x4b
   140052233:	add    BYTE PTR [rax],al
   140052235:	(bad)  
   140052236:	rex.WR add BYTE PTR [rax],r8b
   140052239:	je     0x140052288
   14005223b:	add    BYTE PTR [rax],al
   14005223d:	rex.WRX add BYTE PTR fs:[rax],r8b
   140052241:	push   rsp
   140052242:	rex.WRXB add BYTE PTR [r8],r8b
   140052245:	xor    al,0x53
   140052247:	add    BYTE PTR [rax-0x31ffff33],dh
   14005224d:	int    0x0
   14005224f:	add    BYTE PTR [rax+0x21000522],dh
   140052255:	add    BYTE PTR [rax],al
   140052257:	add    BYTE PTR [rax-0x31ffff33],dh
   14005225d:	int    0x0
   14005225f:	add    BYTE PTR [rax+0x21000522],dh
   140052265:	add    BYTE PTR [rax],al
   140052267:	add    dh,cl
   140052269:	int    0x0
   14005226b:	add    BYTE PTR [rbx-0x32],al
   14005226e:	add    BYTE PTR [rax],al
   140052270:	mov    BYTE PTR [rdx],ah
   140052272:	add    eax,0x2082100
   140052277:	add    BYTE PTR [rax],cl
   140052279:	xor    al,0x53
   14005227b:	add    dh,cl
   14005227d:	int    0x0
   14005227f:	add    BYTE PTR [rbx-0x32],al
   140052282:	add    BYTE PTR [rax],al
   140052284:	mov    BYTE PTR [rdx],ah
   140052286:	add    eax,0xc402100
   14005228b:	add    BYTE PTR [rax-0xc],al
   14005228e:	rex.WX add BYTE PTR [rsp+r12*8],sil
   140052292:	rex.WXB add BYTE PTR [r8],bpl
   140052295:	(bad)  
   140052296:	rex.WR add BYTE PTR [rsp+rsi*2],r11b
   14005229a:	rex.WRB add BYTE PTR [r8],r10b
   14005229d:	rex.WRX add BYTE PTR fs:[rsp+r10*2],r8b
   1400522a2:	rex.WRXB add BYTE PTR [r8-0x31ffff33],r14b
   1400522a9:	int    0x0
   1400522ab:	add    BYTE PTR [rax+0x19000522],dh
   1400522b1:	(bad)  
   1400522b2:	add    eax,DWORD PTR [rax]
   1400522b4:	or     al,0x1
   1400522b6:	push   rax
   1400522b7:	add    BYTE PTR [rip+0xffffffff9c0000c0],al        # 0xdc05237d
   1400522bd:	mov    al,0x2
   1400522bf:	add    BYTE PTR [rax+0x2],al
   1400522c2:	add    BYTE PTR [rax],al
   1400522c4:	add    DWORD PTR [rsp+rcx*1],ebx
   1400522c7:	add    BYTE PTR [rsp+riz*2],bl
   1400522ca:	adc    DWORD PTR [rax],eax
   1400522cc:	sbb    al,0x54
   1400522ce:	adc    BYTE PTR [rax],al
   1400522d0:	sbb    al,0x34
   1400522d2:	ltr    WORD PTR [rdx+rsi*2]
   1400522d6:	sbb    al,dh
   1400522d8:	(bad)  
   1400522d9:	loopne 0x1400522ef
   1400522db:	rcl    BYTE PTR [rdx],1
   1400522dd:	rcl    BYTE PTR [rax],0x70
   1400522e0:	sbb    DWORD PTR [rsi],esp
   1400522e2:	or     al,BYTE PTR [rax]
   1400522e4:	adc    al,0x1
   1400522e6:	add    BYTE PTR gs:[rip+0x9e00bf0],cl        # 0x149e52edd
   1400522ed:	rol    BYTE PTR [rdi],1
   1400522ef:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143652766
   1400522f6:	add    dh,BYTE PTR [rax]
   1400522f8:	pushf  
   1400522f9:	mov    al,0x2
   1400522fb:	add    BYTE PTR [rax],dl
   1400522fd:	add    eax,DWORD PTR [rax]
   1400522ff:	add    BYTE PTR [rcx],ah
   140052301:	add    BYTE PTR [rax],al
   140052303:	add    BYTE PTR [rax-0x27],ah
   140052306:	add    BYTE PTR [rax],al
   140052308:	jnp    0x1400522e3
   14005230a:	add    BYTE PTR [rax],al
   14005230c:	clc    
   14005230d:	sub    BYTE PTR [rip+0x4002100],al        # 0x144054413
   140052313:	add    BYTE PTR [rax],al
   140052315:	je     0x14005231f
   140052317:	add    BYTE PTR [rax],al
   140052319:	fs (bad) 
   14005231b:	add    BYTE PTR [rax-0x27],ah
   14005231e:	add    BYTE PTR [rax],al
   140052320:	jnp    0x1400522fb
   140052322:	add    BYTE PTR [rax],al
   140052324:	clc    
   140052325:	sub    BYTE PTR [rip+0x6162100],al        # 0x1461b442b
   14005232b:	add    BYTE PTR [rsi],dl
   14005232d:	je     0x140052337
   14005232f:	add    BYTE PTR [rsi],cl
   140052331:	fs (bad) 
   140052333:	add    BYTE PTR [rip+0x60000654],al        # 0x1a005298d
   140052339:	fld    DWORD PTR [rax]
   14005233b:	add    BYTE PTR [rbx-0x27],bh
   14005233e:	add    BYTE PTR [rax],al
   140052340:	clc    
   140052341:	sub    BYTE PTR [rip+0x2100],al        # 0x140054447
   140052347:	add    BYTE PTR [rax-0x25],dh
   14005234a:	add    BYTE PTR [rax],al
   14005234c:	test   ebx,ebx
   14005234e:	add    BYTE PTR [rax],al
   140052350:	pop    rsp
   140052351:	es add eax,0x2052100
   140052357:	add    BYTE PTR [rip+0x70000434],al        # 0x1b0052791
   14005235d:	fild   DWORD PTR [rax]
   14005235f:	add    BYTE PTR [rbp+0x5c0000db],al
   140052365:	es add eax,0x2100
   14005236b:	add    al,dh
   14005236d:	fild   DWORD PTR [rax]
   14005236f:	add    BYTE PTR [rcx],cl
   140052371:	fld    QWORD PTR [rax]
   140052373:	add    BYTE PTR [rax+0x21000523],ch
   140052379:	add    BYTE PTR [rax+rax*1],al
   14005237c:	add    BYTE PTR [rsi+rbx*1+0x0],dh
   140052380:	add    BYTE PTR [rsp+rbx*1],dh
   140052383:	add    al,dh
   140052385:	fild   DWORD PTR [rax]
   140052387:	add    BYTE PTR [rcx],cl
   140052389:	fld    QWORD PTR [rax]
   14005238b:	add    BYTE PTR [rax+0x21000523],ch
   140052391:	adc    BYTE PTR [rax+rax*1],al
   140052394:	adc    BYTE PTR [rsi+rbx*1+0x0],dh
   140052398:	or     BYTE PTR [rsp+rbx*1],dh
   14005239b:	add    al,dh
   14005239d:	fild   DWORD PTR [rax]
   14005239f:	add    BYTE PTR [rcx],cl
   1400523a1:	fld    QWORD PTR [rax]
   1400523a3:	add    BYTE PTR [rax+0x1000523],ch
   1400523a9:	adc    al,BYTE PTR [rdi]
   1400523ab:	add    BYTE PTR [rdx],dl
   1400523ad:	add    DWORD PTR [rsi],edx
   1400523af:	add    BYTE PTR [rbx],cl
   1400523b1:	loopne 0x1400523bc
   1400523b3:	rol    BYTE PTR [rdi],1
   1400523b5:	rol    BYTE PTR [rip+0x500460],0x0        # 0x14055281c
   1400523bc:	and    DWORD PTR [rax],eax
   1400523be:	add    BYTE PTR [rax],al
   1400523c0:	and    bh,bl
   1400523c2:	add    BYTE PTR [rax],al
   1400523c4:	rex.W fild WORD PTR [rax]
   1400523c7:	add    al,ah
   1400523c9:	and    eax,DWORD PTR [rip+0x2042100]        # 0x1420944cf
   1400523cf:	add    BYTE PTR [rsp+riz*2],al
   1400523d2:	adc    eax,DWORD PTR [rax]
   1400523d4:	and    bh,bl
   1400523d6:	add    BYTE PTR [rax],al
   1400523d8:	rex.W fild WORD PTR [rax]
   1400523db:	add    al,ah
   1400523dd:	and    eax,DWORD PTR [rip+0x4180100]        # 0x1441d24e3
   1400523e3:	add    BYTE PTR [rax],bl
   1400523e5:	xor    al,0x14
   1400523e7:	add    BYTE PTR [rax],bl
   1400523e9:	repnz adc DWORD PTR [rax+0x21],esi
   1400523ed:	add    BYTE PTR [rax],al
   1400523ef:	add    BYTE PTR [rax-0x20],dh
   1400523f2:	add    BYTE PTR [rax],al
   1400523f4:	(bad)  
   1400523f5:	loopne 0x1400523f7
   1400523f7:	add    BYTE PTR [rax],dl
   1400523f9:	and    al,0x5
   1400523fb:	add    BYTE PTR [rcx],ah
   1400523fd:	add    al,0x2
   1400523ff:	add    BYTE PTR [rsp+rsi*2],al
   140052402:	adc    DWORD PTR [rax],eax
   140052404:	jo     0x1400523e6
   140052406:	add    BYTE PTR [rax],al
   140052408:	(bad)  
   140052409:	loopne 0x14005240b
   14005240b:	add    BYTE PTR [rax],dl
   14005240d:	and    al,0x5
   14005240f:	add    BYTE PTR [rcx],al
   140052411:	adc    DWORD PTR [rdx],eax
   140052413:	add    BYTE PTR [rcx],dl
   140052415:	ror    BYTE PTR [rip+0x2130],cl        # 0x14005454b
   14005241b:	add    BYTE PTR [rax],dh
   14005241d:	loope  0x14005241f
   14005241f:	add    BYTE PTR [rcx-0x1f],dl
   140052422:	add    BYTE PTR [rax],al
   140052424:	cmp    al,0x24
   140052426:	add    eax,0x2042100
   14005242b:	add    BYTE PTR [rsp+rsi*2],al
   14005242e:	adc    eax,DWORD PTR [rax]
   140052430:	xor    cl,ah
   140052432:	add    BYTE PTR [rax],al
   140052434:	push   rcx
   140052435:	loope  0x140052437
   140052437:	add    BYTE PTR [rsp],bh
   14005243a:	add    eax,0x2140100
   14005243f:	add    BYTE PTR [rdx+rsi*8],dl
   140052442:	or     eax,0xb291930
   140052447:	add    BYTE PTR [rdi],dl
   140052449:	xor    al,0x1e
   14005244b:	add    BYTE PTR [rdi],dl
   14005244d:	add    DWORD PTR [rax+rax*1],edx
   140052450:	adc    al,dh
   140052452:	(bad)  
   140052453:	loopne 0x140052461
   140052455:	ror    BYTE PTR [rdx],1
   140052457:	ror    BYTE PTR [rax],0x70
   14005245a:	(bad)  
   14005245b:	(bad)  
   14005245c:	(bad)  
   14005245d:	push   rax
   14005245e:	add    BYTE PTR [rax],al
   140052460:	pushf  
   140052461:	mov    al,0x2
   140052463:	add    BYTE PTR [rax+0x21000000],dl
   140052469:	add    BYTE PTR [rax+rax*1],al
   14005246c:	add    BYTE PTR [rbx+rdx*1+0x0],dl
   140052470:	add    BYTE PTR [rdx+rdx*1],dh
   140052473:	add    BYTE PTR [rax],al
   140052475:	call   0x1285e247a
   14005247a:	add    BYTE PTR [rax],al
   14005247c:	test   al,0x24
   14005247e:	add    eax,0x2100
   140052483:	add    BYTE PTR [rax],al
   140052485:	call   0x1285e248a
   14005248a:	add    BYTE PTR [rax],al
   14005248c:	test   al,0x24
   14005248e:	add    eax,0x4142100
   140052493:	add    BYTE PTR [rsp+rdx*2],dl
   140052496:	adc    eax,DWORD PTR [rax]
   140052498:	add    al,0x34
   14005249a:	adc    al,BYTE PTR [rax]
   14005249c:	add    al,ch
   14005249e:	add    BYTE PTR [rax],al
   1400524a0:	pop    rcx
   1400524a1:	call   0x164ad24a6
   1400524a6:	add    eax,0x8150100
   1400524ab:	add    BYTE PTR [rip+0x15001574],dl        # 0x155053a25
   1400524b1:	fs adc al,0x0
   1400524b4:	adc    eax,0xfe011d2
   1400524b9:	ror    BYTE PTR [rip+0xa2619c0],1        # 0x14a2b3e7f
   1400524bf:	add    BYTE PTR [rdi],dl
   1400524c1:	xor    al,0x1a
   1400524c3:	add    BYTE PTR [rdi],dl
   1400524c5:	repnz adc al,dh
   1400524c8:	(bad)  
   1400524c9:	loopne 0x1400524d7
   1400524cb:	ror    BYTE PTR [rdx],1
   1400524cd:	ror    BYTE PTR [rax],0x70
   1400524d0:	(bad)  
   1400524d1:	(bad)  
   1400524d2:	(bad)  
   1400524d3:	push   rax
   1400524d4:	pushf  
   1400524d5:	mov    al,0x2
   1400524d7:	add    BYTE PTR [rax+0x0],bh
   1400524da:	add    BYTE PTR [rax],al
   1400524dc:	and    DWORD PTR [rax],eax
   1400524de:	add    al,0x0
   1400524e0:	add    BYTE PTR [rbx+rdx*1+0x0],ah
   1400524e4:	add    BYTE PTR [rdx+rdx*1+0x0],dl
   1400524e8:	movabs al,ds:0x1c0000eef90000ee
   1400524f1:	and    eax,0x210005
   1400524f6:	add    BYTE PTR [rax],al
   1400524f8:	movabs al,ds:0x1c0000eef90000ee
   140052501:	and    eax,0xf210005
   140052506:	add    al,0x0
   140052508:	pcmpgtb mm2,QWORD PTR [rbx]
   14005250b:	add    BYTE PTR [rsp+rdx*2],al
   14005250e:	adc    al,BYTE PTR [rax]
   140052510:	movabs al,ds:0x1c0000eef90000ee
   140052519:	and    eax,0x15010005
   14005251e:	or     BYTE PTR [rax],al
   140052520:	adc    eax,0x15001574
   140052525:	xor    al,0x14
   140052527:	add    BYTE PTR [rip+0xfe011d2],dl        # 0x14fe536ff
   14005252d:	ror    BYTE PTR [rip+0x21c0],1        # 0x1400546f3
   140052533:	add    BYTE PTR [rax-0x10],dl
   140052536:	add    BYTE PTR [rax],al
   140052538:	movabs eax,ds:0x210005258c0000f0
   140052541:	add    BYTE PTR [rdx],al
   140052543:	add    BYTE PTR [rax],al
   140052545:	je     0x140052554
   140052547:	add    DWORD PTR [rax-0x10],edx
   14005254a:	add    BYTE PTR [rax],al
   14005254c:	movabs eax,ds:0x210005258c0000f0
   140052555:	add    BYTE PTR [rax],al
   140052557:	add    BYTE PTR [rcx+0x20000f0],ah
   14005255d:	icebp  
   14005255e:	add    BYTE PTR [rax],al
   140052560:	js     0x140052587
   140052562:	add    eax,0x2082100
   140052567:	add    BYTE PTR [rax],cl
   140052569:	(bad)  
   14005256a:	or     al,0x1
   14005256c:	movabs eax,ds:0x780000f1020000f0
   140052575:	and    eax,0x8210005
   14005257a:	add    al,BYTE PTR [rax]
   14005257c:	or     BYTE PTR [rbp+rcx*1+0x1],dh
   140052580:	push   rax
   140052581:	lock add BYTE PTR [rax],al
   140052584:	movabs eax,ds:0x190005258c0000f0
   14005258d:	and    DWORD PTR [rdi],eax
   14005258f:	add    BYTE PTR [rdi],cl
   140052591:	add    DWORD PTR [rsi],ecx
   140052593:	add    DWORD PTR [rax],ecx
   140052595:	loopne 0x14005259d
   140052597:	rol    BYTE PTR [rax+riz*2],0x3
   14005259b:	push   rax
   14005259c:	add    dh,BYTE PTR [rax]
   14005259e:	add    BYTE PTR [rax],al
   1400525a0:	pushf  
   1400525a1:	mov    al,0x2
   1400525a3:	add    BYTE PTR [rax+0x8],dl
   1400525a6:	add    BYTE PTR [rax],al
   1400525a8:	and    DWORD PTR [rax],eax
   1400525aa:	add    al,BYTE PTR [rax]
   1400525ac:	add    BYTE PTR [rax+riz*1+0x1],dh
   1400525b0:	xor    dl,dh
   1400525b2:	add    BYTE PTR [rax],al
   1400525b4:	(bad)
   1400525b7:	add    BYTE PTR [rsi+riz*1],bl
   1400525ba:	add    eax,0x4002100
   1400525bf:	add    BYTE PTR [rax],al
   1400525c1:	(bad)  
   1400525c2:	(bad)  
   1400525c3:	add    DWORD PTR [rax],eax
   1400525c5:	je     0x1400525e7
   1400525c7:	add    DWORD PTR [rax],esi
   1400525c9:	repnz add BYTE PTR [rax],al
   1400525cc:	(bad)
   1400525cf:	add    BYTE PTR [rsi+riz*1],bl
   1400525d2:	add    eax,0x2100
   1400525d7:	add    BYTE PTR [rax],dh
   1400525d9:	repnz add BYTE PTR [rax],al
   1400525dc:	(bad)
   1400525df:	add    BYTE PTR [rsi+riz*1],bl
   1400525e2:	add    eax,0x2100
   1400525e7:	add    ch,al
   1400525e9:	repnz add BYTE PTR [rax],al
   1400525ec:	pop    rsp
   1400525ed:	repz add BYTE PTR [rax],al
   1400525f0:	or     BYTE PTR [rsi],ah
   1400525f2:	add    eax,0x2082100
   1400525f7:	add    BYTE PTR [rax],cl
   1400525f9:	(bad)  
   1400525fa:	(bad)  
   1400525fb:	add    ebp,eax
   1400525fd:	repnz add BYTE PTR [rax],al
   140052600:	pop    rsp
   140052601:	repz add BYTE PTR [rax],al
   140052604:	or     BYTE PTR [rsi],ah
   140052606:	add    eax,0x2082100
   14005260b:	add    BYTE PTR [rax],cl
   14005260d:	je     0x14005262f
   14005260f:	add    DWORD PTR [rax],esi
   140052611:	repnz add BYTE PTR [rax],al
   140052614:	(bad)
   140052617:	add    BYTE PTR [rsi+riz*1],bl
   14005261a:	add    eax,0x8231900
   14005261f:	add    BYTE PTR [rcx],dl
   140052621:	add    DWORD PTR [rcx],esp
   140052623:	add    DWORD PTR [rdx],ecx
   140052625:	lock or al,ah
   140052628:	(bad)  
   140052629:	rol    BYTE PTR [rax+riz*2],0x3
   14005262d:	push   rax
   14005262e:	add    dh,BYTE PTR [rax]
   140052630:	pushf  
   140052631:	mov    al,0x2
   140052633:	add    al,ah
   140052635:	or     BYTE PTR [rax],al
   140052637:	add    BYTE PTR [rcx],al
   140052639:	xchg   esi,eax
   14005263a:	lldt   WORD PTR [rsi-0x6efffb0c]
   140052641:	(bad)  
   140052642:	add    eax,0x6747c00
   140052647:	add    BYTE PTR [rdi+0x64],dh
   14005264a:	(bad)  
   14005264b:	add    BYTE PTR [rdx+0x54],dh
   14005264e:	or     BYTE PTR [rax],al
   140052650:	ins    DWORD PTR es:[rdi],dx
   140052651:	xor    al,0xc
   140052653:	add    BYTE PTR [rax],cl
   140052655:	(bad)  
   140052656:	add    al,0xe0
   140052658:	add    dl,al
   14005265a:	add    BYTE PTR [rax],al
   14005265c:	add    DWORD PTR [rcx+rax*1],eax
   14005265f:	add    BYTE PTR [rdx+rax*2],al
   140052662:	add    BYTE PTR [rax],al
   140052664:	add    DWORD PTR [rcx],ebx
   140052666:	or     BYTE PTR [rax],al
   140052668:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14005266c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140052670:	sbb    DWORD PTR [rsi+rax*1],esi
   140052673:	add    BYTE PTR [rcx],bl
   140052675:	xor    dl,BYTE PTR [rip+0x8140170]        # 0x1481927eb
   14005267b:	add    BYTE PTR [rsp+riz*2],dl
   14005267e:	or     DWORD PTR [rax],eax
   140052680:	adc    al,0x54
   140052682:	or     BYTE PTR [rax],al
   140052684:	adc    al,0x34
   140052686:	(bad)  
   140052687:	add    BYTE PTR [rdx+rsi*1],dl
   14005268a:	adc    BYTE PTR [rax+0x1],dh
   14005268d:	xor    eax,0x64350006
   140052692:	(bad)  
   140052693:	add    BYTE PTR [rdx],cl
   140052695:	xor    al,0x7
   140052697:	add    BYTE PTR [rdx],cl
   140052699:	xor    al,BYTE PTR [rsi]
   14005269b:	jo     0x1400526be
   14005269d:	add    BYTE PTR [rax],al
   14005269f:	add    BYTE PTR [rax],dh
   1400526a1:	add    al,BYTE PTR [rcx]
   1400526a3:	add    BYTE PTR [rdx+0x2],ah
   1400526a6:	add    DWORD PTR [rax],eax
   1400526a8:	shl    BYTE PTR [rsi],0x5
   1400526ab:	add    BYTE PTR [rcx],ah
   1400526ad:	add    eax,0x34050002
   1400526b2:	or     al,BYTE PTR [rax]
   1400526b4:	xor    BYTE PTR [rdx],al
   1400526b6:	add    DWORD PTR [rax],eax
   1400526b8:	(bad)  
   1400526ba:	add    DWORD PTR [rax],eax
   1400526bc:	shl    BYTE PTR [rsi],0x5
   1400526bf:	add    BYTE PTR [rcx],al
   1400526c1:	adc    ecx,DWORD PTR [rax]
   1400526c3:	add    BYTE PTR [rbx],dl
   1400526c5:	fs or  al,0x0
   1400526c8:	adc    edx,DWORD PTR [rbx+rcx*1+0x0]
   1400526cc:	adc    edx,DWORD PTR [rdx+0xf]
   1400526cf:	ror    BYTE PTR [rip+0x1700bc0],1        # 0x141753295
   1400526d5:	and    DWORD PTR [rax+rax*1],ecx
   1400526d8:	and    DWORD PTR [rbp+rcx*1+0x0],esp
   1400526dc:	and    DWORD PTR [rsp+rcx*1+0x0],edx
   1400526e0:	and    DWORD PTR [rdx+rcx*1],esi
   1400526e3:	add    BYTE PTR [rcx],ah
   1400526e5:	xor    bl,BYTE PTR [rip+0x19e01bf0]        # 0x159e542db
   1400526eb:	rcl    BYTE PTR [rdi],1
   1400526ed:	rcl    BYTE PTR [rip+0x2170],0x0        # 0x140054864
   1400526f4:	rol    BYTE PTR [rbx],0x1
   1400526f7:	add    BYTE PTR [rip+0x14000104],ah        # 0x154052801
   1400526fd:	(bad)  
   1400526fe:	add    eax,0x2052100
   140052703:	add    BYTE PTR [rip+0xffffffffc0000664],al        # 0x100052d6d
   140052709:	add    eax,DWORD PTR [rcx]
   14005270b:	add    BYTE PTR [rip+0x14000104],ah        # 0x154052815
   140052711:	(bad)  
   140052712:	add    eax,0x8150100
   140052717:	add    BYTE PTR [rip+0x15000974],dl        # 0x155053091
   14005271d:	push   rsp
   14005271e:	or     BYTE PTR [rax],al
   140052720:	adc    eax,0x15000734
   140052725:	xor    dl,BYTE PTR [rcx]
   140052727:	shl    BYTE PTR [rcx],0x0
   14005272a:	add    BYTE PTR [rax],al
   14005272c:	movabs al,ds:0x4c000104df000104
   140052735:	(bad)  
   140052736:	add    eax,0x2052100
   14005273b:	add    BYTE PTR [rip+0xffffffffa0000834],al        # 0xe0052f75
   140052741:	add    al,0x1
   140052743:	add    bh,bl
   140052745:	add    al,0x1
   140052747:	add    BYTE PTR [rdi+riz*1+0x5],cl
   14005274b:	add    BYTE PTR [rcx],al
   14005274d:	or     al,BYTE PTR [rdx]
   14005274f:	add    BYTE PTR [rdx],cl
   140052751:	xor    al,BYTE PTR [rsi]
   140052753:	jo     0x140052756
   140052755:	(bad)  
   140052756:	(bad)  
   140052757:	add    BYTE PTR [rsi],dl
   140052759:	xor    al,0xa
   14005275b:	add    BYTE PTR [rsi],dl
   14005275d:	push   rdx
   14005275e:	adc    dh,BYTE PTR [rax+0x11]
   140052761:	(bad)  
   140052762:	adc    BYTE PTR [rax+0x1],dl
   140052765:	add    al,0x1
   140052767:	add    BYTE PTR [rdx+riz*2],al
   14005276a:	add    BYTE PTR [rax],al
   14005276c:	add    DWORD PTR [rip+0x34050002],eax        # 0x1740a2774
   140052772:	add    DWORD PTR [rax],eax
   140052774:	and    DWORD PTR [rax],eax
   140052776:	add    BYTE PTR [rax],al
   140052778:	movabs al,ds:0x98000107b5000107
   140052781:	(bad)  
   140052782:	add    eax,0x2042100
   140052787:	add    BYTE PTR [rsp+rsi*2],al
   14005278a:	add    BYTE PTR [rax],al
   14005278c:	movabs al,ds:0x98000107b5000107
   140052795:	(bad)  
   140052796:	add    eax,0x1040100
   14005279b:	add    BYTE PTR [rdx+rax*1],al
   14005279e:	add    BYTE PTR [rax],al
   1400527a0:	and    DWORD PTR [rax],eax
   1400527a2:	(bad)  
   1400527a3:	add    BYTE PTR [rax],al
   1400527a5:	je     0x1400527af
   1400527a7:	add    BYTE PTR [rax],al
   1400527a9:	fs (bad) 
   1400527ab:	add    BYTE PTR [rax],al
   1400527ad:	push   rsp
   1400527ae:	(bad)  
   1400527af:	add    BYTE PTR [rax+0x8],dl
   1400527b2:	add    DWORD PTR [rax],eax
   1400527b4:	jne    0x1400527be
   1400527b6:	add    DWORD PTR [rax],eax
   1400527b8:	cld    
   1400527b9:	rex.RXB add eax,0x2100
   1400527bf:	add    BYTE PTR [rax+0x8],dl
   1400527c2:	add    DWORD PTR [rax],eax
   1400527c4:	jne    0x1400527ce
   1400527c6:	add    DWORD PTR [rax],eax
   1400527c8:	cld    
   1400527c9:	rex.RXB add eax,0x6162100
   1400527cf:	add    BYTE PTR [rsi],dl
   1400527d1:	fs (bad) 
   1400527d3:	add    BYTE PTR [rdx],cl
   1400527d5:	je     0x1400527df
   1400527d7:	add    BYTE PTR [rip+0x50000654],al        # 0x190052e31
   1400527dd:	or     BYTE PTR [rcx],al
   1400527df:	add    BYTE PTR [rbp+0x8],dh
   1400527e2:	add    DWORD PTR [rax],eax
   1400527e4:	cld    
   1400527e5:	rex.RXB add eax,0x2100
   1400527eb:	add    al,dl
   1400527ed:	or     al,BYTE PTR [rcx]
   1400527ef:	add    al,dh
   1400527f1:	or     al,BYTE PTR [rcx]
   1400527f3:	add    BYTE PTR [rax+rbp*1+0x5],al
   1400527f7:	add    BYTE PTR [rcx],ah
   1400527f9:	add    eax,0x34050002
   1400527fe:	(bad)  
   1400527ff:	add    al,dl
   140052801:	or     al,BYTE PTR [rcx]
   140052803:	add    al,dh
   140052805:	or     al,BYTE PTR [rcx]
   140052807:	add    BYTE PTR [rax+rbp*1+0x5],al
   14005280b:	add    BYTE PTR [rcx],ah
   14005280d:	add    BYTE PTR [rax],al
   14005280f:	add    BYTE PTR [rax],dh
   140052811:	or     eax,DWORD PTR [rcx]
   140052813:	add    BYTE PTR [rax+0xb],cl
   140052816:	add    DWORD PTR [rax],eax
   140052818:	sub    BYTE PTR [rip+0x2002100],r8b        # 0x14205491f
   14005281f:	add    BYTE PTR [rax],al
   140052821:	xor    al,0x7
   140052823:	add    BYTE PTR [rax],dh
   140052825:	or     eax,DWORD PTR [rcx]
   140052827:	add    BYTE PTR [rax+0xb],cl
   14005282a:	add    DWORD PTR [rax],eax
   14005282c:	sub    BYTE PTR [rip+0x2052100],r8b        # 0x1420a4933
   140052833:	add    BYTE PTR [rip+0x30000734],al        # 0x170052f6d
   140052839:	or     eax,DWORD PTR [rcx]
   14005283b:	add    BYTE PTR [rax+0xb],cl
   14005283e:	add    DWORD PTR [rax],eax
   140052840:	sub    BYTE PTR [rip+0x2060100],r8b        # 0x1420b2947
   140052847:	add    BYTE PTR [rsi],al
   140052849:	xor    al,BYTE PTR [rdx]
   14005284b:	jo     0x14005286e
   14005284d:	add    BYTE PTR [rax],al
   14005284f:	add    BYTE PTR [rax-0x61fffef4],dl
   140052855:	or     al,0x1
   140052857:	add    BYTE PTR [rax+rbp*1+0x210005],dl
   14005285e:	add    BYTE PTR [rax],al
   140052860:	sahf   
   140052861:	or     al,0x1
   140052863:	add    dl,al
   140052865:	or     al,0x1
   140052867:	add    BYTE PTR [rax+0x21000528],al
   14005286d:	add    eax,0x34050002
   140052872:	(bad)  
   140052873:	add    BYTE PTR [rsi-0x3dfffef4],bl
   140052879:	or     al,0x1
   14005287b:	add    BYTE PTR [rax+0x21000528],al
   140052881:	add    eax,0x74050002
   140052886:	(bad)  
   140052887:	add    BYTE PTR [rax-0x61fffef4],dl
   14005288d:	or     al,0x1
   14005288f:	add    BYTE PTR [rax+rbp*1+0xe010005],dl
   140052896:	add    al,BYTE PTR [rax]
   140052898:	(bad)  
   140052899:	xor    cl,BYTE PTR [rdx]
   14005289b:	(bad)  
   14005289c:	and    DWORD PTR [rax],eax
   14005289e:	add    BYTE PTR [rax],al
   1400528a0:	push   rax
   1400528a1:	(bad)  
   1400528a2:	add    DWORD PTR [rax],eax
   1400528a4:	outs   dx,DWORD PTR ds:[rsi]
   1400528a5:	(bad)  
   1400528a6:	add    DWORD PTR [rax],eax
   1400528a8:	(bad)  
   1400528a9:	sub    BYTE PTR [rip+0x2002100],al        # 0x1420549af
   1400528af:	add    BYTE PTR [rax],al
   1400528b1:	xor    al,0x2
   1400528b3:	add    BYTE PTR [rax+0xe],dl
   1400528b6:	add    DWORD PTR [rax],eax
   1400528b8:	outs   dx,DWORD PTR ds:[rsi]
   1400528b9:	(bad)  
   1400528ba:	add    DWORD PTR [rax],eax
   1400528bc:	(bad)  
   1400528bd:	sub    BYTE PTR [rip+0x2052100],al        # 0x1420a49c3
   1400528c3:	add    BYTE PTR [rip+0x50000234],al        # 0x190052afd
   1400528c9:	(bad)  
   1400528ca:	add    DWORD PTR [rax],eax
   1400528cc:	outs   dx,DWORD PTR ds:[rsi]
   1400528cd:	(bad)  
   1400528ce:	add    DWORD PTR [rax],eax
   1400528d0:	(bad)  
   1400528d1:	sub    BYTE PTR [rip+0x3060100],al        # 0x1430b29d7
   1400528d7:	add    BYTE PTR [rsi],al
   1400528d9:	push   rsp
   1400528da:	add    eax,DWORD PTR [rax]
   1400528dc:	(bad)  
   1400528dd:	jo     0x1400528df
   1400528df:	add    BYTE PTR [rcx],al
   1400528e1:	sbb    eax,0x741d000a
   1400528e6:	adc    eax,0x14641d00
   1400528eb:	add    BYTE PTR [rip+0x1d001354],bl        # 0x15d053c45
   1400528f1:	xor    al,0x12
   1400528f3:	add    BYTE PTR [rip+0x1c016f2],bl        # 0x141c53feb
   1400528f9:	or     al,BYTE PTR [rdx]
   1400528fb:	add    BYTE PTR [rdx],cl
   1400528fd:	xor    al,BYTE PTR [rsi]
   1400528ff:	xor    BYTE PTR [rcx],ah
   140052901:	add    BYTE PTR [rax+rax*1],al
   140052904:	add    ah,ah
   140052906:	or     al,BYTE PTR [rax]
   140052908:	add    BYTE PTR [rcx+rcx*1+0x0],dl
   14005290c:	adc    BYTE PTR [rbx],0x1
   14005290f:	add    BYTE PTR [rbp+0x70000113],bh
   140052915:	sub    DWORD PTR [rip+0x6002100],eax        # 0x146054a1b
   14005291b:	add    BYTE PTR [rax],al
   14005291d:	in     al,0xa
   14005291f:	add    BYTE PTR [rax],al
   140052921:	push   rsp
   140052922:	or     DWORD PTR [rax],eax
   140052924:	add    BYTE PTR [rax+rcx*1],dh
   140052927:	add    BYTE PTR [rax-0x42fffeed],al
   14005292d:	adc    eax,DWORD PTR [rcx]
   14005292f:	add    BYTE PTR [rax+0x29],dh
   140052932:	add    eax,0x2100
   140052937:	add    BYTE PTR [rbp+0x113],bh
   14005293d:	adc    al,0x1
   14005293f:	add    BYTE PTR [rax+0x29],bl
   140052942:	add    eax,0x2052100
   140052947:	add    BYTE PTR [rip+0xffffffffbd000834],al        # 0xfd053181
   14005294d:	adc    eax,DWORD PTR [rcx]
   14005294f:	add    BYTE PTR [rax],al
   140052951:	adc    al,0x1
   140052953:	add    BYTE PTR [rax+0x29],bl
   140052956:	add    eax,0x40a2100
   14005295b:	add    BYTE PTR [rdx],cl
   14005295d:	in     al,0xa
   14005295f:	add    BYTE PTR [rip+0xffffffff80000954],al        # 0xc00532b9
   140052965:	adc    eax,DWORD PTR [rcx]
   140052967:	add    BYTE PTR [rbp+0x70000113],bh
   14005296d:	sub    DWORD PTR [rip+0x60e0100],eax        # 0x146132a73
   140052973:	add    BYTE PTR [rsi],cl
   140052975:	or     eax,DWORD PTR fs:[rax]
   140052978:	(bad)  
   140052979:	xor    cl,BYTE PTR [rdx]
   14005297b:	ror    BYTE PTR [rax],1
   14005297d:	rol    BYTE PTR [rsi],0x70
   140052980:	add    DWORD PTR [rdx+0x6],eax
   140052983:	add    BYTE PTR [rdx+0x74],al
   140052986:	or     BYTE PTR [rax],al
   140052988:	or     dh,BYTE PTR [rcx+rcx*1]
   14005298b:	add    BYTE PTR [rdx],cl
   14005298d:	push   rdx
   14005298e:	(bad)  
   14005298f:	(bad)  
   140052990:	sbb    DWORD PTR [rip+0xffffffffd2060002],edx        # 0x1120b2998
   140052996:	add    dh,BYTE PTR [rax]
   140052998:	pushf  
   140052999:	mov    al,0x2
   14005299b:	add    BYTE PTR [rax+0x0],ah
   14005299e:	add    BYTE PTR [rax],al
   1400529a0:	and    DWORD PTR [rax],eax
   1400529a2:	add    BYTE PTR [rax],al
   1400529a4:	lock sbb BYTE PTR [rcx],al
   1400529a7:	add    BYTE PTR [rcx+0x19],ah
   1400529aa:	add    DWORD PTR [rax],eax
   1400529ac:	js     0x1400529d4
   1400529ae:	add    eax,0x2052100
   1400529b3:	add    BYTE PTR [rip+0xfffffffff00006c4],al        # 0x13005307d
   1400529b9:	sbb    BYTE PTR [rcx],al
   1400529bb:	add    BYTE PTR [rcx+0x19],ah
   1400529be:	add    DWORD PTR [rax],eax
   1400529c0:	js     0x1400529e8
   1400529c2:	add    eax,0x8490100
   1400529c7:	add    BYTE PTR [rcx+0x74],cl
   1400529ca:	add    al,0x0
   1400529cc:	rex.R
   1400529cd:	fs add eax,0xa343800
   1400529d3:	add    BYTE PTR [rsi],al
   1400529d5:	push   rdx
   1400529d6:	add    dl,BYTE PTR [rax+0x21]
   1400529d9:	add    BYTE PTR [rax],al
   1400529db:	add    al,dh
   1400529dd:	sbb    al,0x1
   1400529df:	add    BYTE PTR [rsi],dh
   1400529e1:	sbb    eax,0x2eac0001
   1400529e6:	add    eax,0x2002100
   1400529eb:	add    BYTE PTR [rax],al
   1400529ed:	xor    al,0x6
   1400529ef:	add    al,dh
   1400529f1:	sbb    al,0x1
   1400529f3:	add    BYTE PTR [rsi],dh
   1400529f5:	sbb    eax,0x2eac0001
   1400529fa:	add    eax,0x2052100
   1400529ff:	add    BYTE PTR [rip+0xfffffffff0000634],al        # 0x130053039
   140052a05:	sbb    al,0x1
   140052a07:	add    BYTE PTR [rsi],dh
   140052a09:	sbb    eax,0x2eac0001
   140052a0e:	add    eax,0x9271900
   140052a13:	add    BYTE PTR [rip+0x15002f54],dl        # 0x15505596d
   140052a19:	xor    al,0x2e
   140052a1b:	add    BYTE PTR [rip+0xe002801],dl        # 0x14e055222
   140052a21:	ror    BYTE PTR [rax+rsi*2],0xb
   140052a25:	(bad)  
   140052a26:	add    BYTE PTR [rax],al
   140052a28:	pushf  
   140052a29:	mov    al,0x2
   140052a2b:	add    BYTE PTR [rax],dh
   140052a2d:	add    DWORD PTR [rax],eax
   140052a2f:	add    BYTE PTR [rcx],ah
   140052a31:	add    BYTE PTR [rax],al
   140052a33:	add    al,ah
   140052a35:	(bad)  
   140052a36:	add    DWORD PTR [rax],eax
   140052a38:	hlt    
   140052a39:	(bad)  
   140052a3a:	add    DWORD PTR [rax],eax
   140052a3c:	pop    rsp
   140052a3d:	es add eax,0x2100
   140052a43:	add    ah,dh
   140052a45:	(bad)  
   140052a46:	add    DWORD PTR [rax],eax
   140052a48:	pop    rcx
   140052a49:	(bad)  
   140052a4a:	add    DWORD PTR [rax],eax
   140052a4c:	sub    al,BYTE PTR fs:[rip+0x2052100]        # 0x1420a4b53
   140052a53:	add    BYTE PTR [rip+0xfffffffff4000474],al        # 0x134052ecd
   140052a59:	(bad)  
   140052a5a:	add    DWORD PTR [rax],eax
   140052a5c:	pop    rcx
   140052a5d:	(bad)  
   140052a5e:	add    DWORD PTR [rax],eax
   140052a60:	sub    al,BYTE PTR fs:[rip+0x40a2100]        # 0x1440f4b67
   140052a67:	add    BYTE PTR [rdx],cl
   140052a69:	or     BYTE PTR fs:[rax],al
   140052a6c:	add    eax,0xe0000734
   140052a71:	(bad)  
   140052a72:	add    DWORD PTR [rax],eax
   140052a74:	hlt    
   140052a75:	(bad)  
   140052a76:	add    DWORD PTR [rax],eax
   140052a78:	pop    rsp
   140052a79:	es add eax,0x7201900
   140052a7f:	add    BYTE PTR [rsi],cl
   140052a81:	add    DWORD PTR [rax],ebp
   140052a83:	add    BYTE PTR [rdi],al
   140052a85:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143652efc
   140052a8c:	add    dh,BYTE PTR [rax]
   140052a8e:	add    BYTE PTR [rax],al
   140052a90:	pushf  
   140052a91:	mov    al,0x2
   140052a93:	add    BYTE PTR [rax],dh
   140052a95:	add    DWORD PTR [rax],eax
   140052a97:	add    BYTE PTR [rcx],bl
   140052a99:	(bad)  
   140052a9a:	add    eax,0x2d340d00
   140052a9f:	add    BYTE PTR [rip+0x6002801],cl        # 0x1460552a6
   140052aa5:	jo     0x140052aa7
   140052aa7:	add    BYTE PTR [rax+rsi*4+0x1300002],bl
   140052aae:	add    BYTE PTR [rax],al
   140052ab0:	and    DWORD PTR [rax],eax
   140052ab2:	add    BYTE PTR [rax],al
   140052ab4:	nop
   140052ab5:	and    al,BYTE PTR [rcx]
   140052ab7:	add    cl,dh
   140052ab9:	and    al,BYTE PTR [rcx]
   140052abb:	add    ah,dl
   140052abd:	sub    al,BYTE PTR [rip+0x2082100]        # 0x1420d4bc3
   140052ac3:	add    BYTE PTR [rax],cl
   140052ac5:	xor    al,0x50
   140052ac7:	add    BYTE PTR [rax-0xefffede],dl
   140052acd:	and    al,BYTE PTR [rcx]
   140052acf:	add    ah,dl
   140052ad1:	sub    al,BYTE PTR [rip+0x31b1900]        # 0x1432043d7
   140052ad7:	add    BYTE PTR [rcx],cl
   140052ad9:	add    DWORD PTR [rax+rax*1+0x2],ecx
   140052add:	jo     0x140052adf
   140052adf:	add    BYTE PTR [rax+rsi*4+0x2500002],bl
   140052ae6:	add    BYTE PTR [rax],al
   140052ae8:	and    DWORD PTR [rax],eax
   140052aea:	add    BYTE PTR [rax],al
   140052aec:	nop
   140052aed:	and    al,0x1
   140052aef:	add    BYTE PTR [rbx+0x5c000124],dh
   140052af5:	sub    eax,DWORD PTR [rip+0x2100]        # 0x140054bfb
   140052afb:	add    BYTE PTR [rcx],dh
   140052afd:	and    eax,0x254a0001
   140052b02:	add    DWORD PTR [rax],eax
   140052b04:	and    al,0x2b
   140052b06:	add    eax,0x61a2100
   140052b0b:	add    BYTE PTR [rdx],bl
   140052b0d:	in     al,0x6
   140052b0f:	add    BYTE PTR [rdx],cl
   140052b11:	(bad)  
   140052b12:	(bad)  
   140052b13:	add    BYTE PTR [rip+0x31000dc4],al        # 0x1710538dd
   140052b19:	and    eax,0x254a0001
   140052b1e:	add    DWORD PTR [rax],eax
   140052b20:	and    al,0x2b
   140052b22:	add    eax,0x6002100
   140052b27:	add    BYTE PTR [rax],al
   140052b29:	je     0x140052b37
   140052b2b:	add    BYTE PTR [rax],al
   140052b2d:	push   rsp
   140052b2e:	or     eax,DWORD PTR [rax]
   140052b30:	add    BYTE PTR [rdx+rcx*1],dh
   140052b33:	add    BYTE PTR [rax-0x4cfffedc],dl
   140052b39:	and    al,0x1
   140052b3b:	add    BYTE PTR [rbx+rbp*1+0x5],bl
   140052b3f:	add    BYTE PTR [rcx],ah
   140052b41:	clts   
   140052b43:	add    BYTE PTR [rdi],cl
   140052b45:	je     0x140052b53
   140052b47:	add    BYTE PTR [rdx],cl
   140052b49:	push   rsp
   140052b4a:	or     eax,DWORD PTR [rax]
   140052b4c:	add    eax,0x90000a34
   140052b51:	and    al,0x1
   140052b53:	add    BYTE PTR [rbx+0x5c000124],dh
   140052b59:	sub    eax,DWORD PTR [rip+0x2060100]        # 0x1420b2c5f
   140052b5f:	add    BYTE PTR [rsi],al
   140052b61:	jb     0x140052b65
   140052b63:	(bad)  
   140052b64:	and    DWORD PTR [rax],eax
   140052b66:	add    BYTE PTR [rax],al
   140052b68:	shl    BYTE PTR [rsi],0x1
   140052b6b:	add    bl,bl
   140052b6d:	add    DWORD PTR es:[rax],eax
   140052b70:	fs xor al,0x5
   140052b73:	add    BYTE PTR [rcx],ah
   140052b75:	add    eax,0x74050002
   140052b7a:	add    al,BYTE PTR [rax]
   140052b7c:	shl    BYTE PTR [rsi],0x1
   140052b7f:	add    bl,bl
   140052b81:	add    DWORD PTR es:[rax],eax
   140052b84:	fs xor al,0x5
   140052b87:	add    BYTE PTR [rcx],ah
   140052b89:	add    BYTE PTR [rax],cl
   140052b8b:	add    BYTE PTR [rax],al
   140052b8d:	in     al,0xe
   140052b8f:	add    BYTE PTR [rax],al
   140052b91:	(bad)  
   140052b92:	sldt   WORD PTR [rax]
   140052b95:	adc    BYTE PTR fs:[rax],al
   140052b98:	add    BYTE PTR [rcx+rbx*1+0x0],dl
   140052b9c:	mov    al,0x28
   140052b9e:	add    DWORD PTR [rax],eax
   140052ba0:	and    ebp,DWORD PTR [rcx]
   140052ba2:	add    DWORD PTR [rax],eax
   140052ba4:	fsubr  DWORD PTR [rbx]
   140052ba6:	add    eax,0x2100
   140052bab:	add    BYTE PTR [rax+0x23000128],dh
   140052bb1:	sub    DWORD PTR [rcx],eax
   140052bb3:	add    al,bl
   140052bb5:	sub    eax,DWORD PTR [rip+0x8262100]        # 0x1482b4cbb
   140052bbb:	add    BYTE PTR [rsi],ah
   140052bbd:	in     al,0xe
   140052bbf:	add    BYTE PTR [rbx],bl
   140052bc1:	(bad)  
   140052bc2:	lldt   WORD PTR [rax]
   140052bc5:	adc    BYTE PTR fs:[rax],al
   140052bc8:	or     BYTE PTR [rcx+rbx*1+0x0],dl
   140052bcc:	mov    al,0x28
   140052bce:	add    DWORD PTR [rax],eax
   140052bd0:	and    ebp,DWORD PTR [rcx]
   140052bd2:	add    DWORD PTR [rax],eax
   140052bd4:	fsubr  DWORD PTR [rbx]
   140052bd6:	add    eax,0x61d1900
   140052bdb:	add    BYTE PTR [rsi],cl
   140052bdd:	add    DWORD PTR [rcx],edx
   140052bdf:	add    BYTE PTR [rdi],al
   140052be1:	lock add eax,0x27003c0
   140052be7:	xor    BYTE PTR [rax+rsi*4+0x680002],bl
   140052bee:	add    BYTE PTR [rax],al
   140052bf0:	add    DWORD PTR [rip+0x74050002],eax        # 0x1b40a2bf8
   140052bf6:	add    DWORD PTR [rax],eax
   140052bf8:	add    DWORD PTR [rdx],ebx
   140052bfa:	(bad)  
   140052bfb:	add    BYTE PTR [rdx],bl
   140052bfd:	add    DWORD PTR [rbx],ebx
   140052bff:	add    BYTE PTR [rbx],dl
   140052c01:	jo     0x140052c15
   140052c03:	(bad)  
   140052c04:	adc    DWORD PTR [rax+0x10],edx
   140052c07:	xor    BYTE PTR [rcx],al
   140052c09:	adc    DWORD PTR [rsi],eax
   140052c0b:	add    BYTE PTR [rcx],dl
   140052c0d:	xor    al,0xc
   140052c0f:	add    BYTE PTR [rcx],dl
   140052c11:	push   rdx
   140052c12:	or     eax,0xb600c70
   140052c17:	push   rax
   140052c18:	and    DWORD PTR [rax],eax
   140052c1a:	add    BYTE PTR [rax],al
   140052c1c:	shl    BYTE PTR [rax],1
   140052c1e:	add    DWORD PTR [rax],eax
   140052c20:	sub    eax,0x3c000131
   140052c25:	sub    al,0x5
   140052c27:	add    BYTE PTR [rcx],ah
   140052c29:	or     BYTE PTR [rdx],al
   140052c2b:	add    BYTE PTR [rax],cl
   140052c2d:	je     0x140052c49
   140052c2f:	add    al,dl
   140052c31:	xor    BYTE PTR [rcx],al
   140052c33:	add    BYTE PTR [rip+0x3c000131],ch        # 0x17c052d6a
   140052c39:	sub    al,0x5
   140052c3b:	add    BYTE PTR [rcx],bl
   140052c3d:	and    ecx,DWORD PTR [rax]
   140052c3f:	add    BYTE PTR [rcx],dl
   140052c41:	add    DWORD PTR [rbx],ebx
   140052c43:	add    BYTE PTR [rdx],cl
   140052c45:	loopne 0x140052c4f
   140052c47:	rol    BYTE PTR [rsi],1
   140052c49:	rol    BYTE PTR [rax+riz*2],0x3
   140052c4d:	push   rax
   140052c4e:	add    dh,BYTE PTR [rax]
   140052c50:	pushf  
   140052c51:	mov    al,0x2
   140052c53:	add    al,al
   140052c55:	add    BYTE PTR [rax],al
   140052c57:	add    BYTE PTR [rcx],al
   140052c59:	jbe    0x140052c69
   140052c5b:	add    BYTE PTR [rsi-0xc],dh
   140052c5e:	or     eax,DWORD PTR [rax]
   140052c60:	jno    0x140052c46
   140052c62:	or     al,0x0
   140052c64:	ins    BYTE PTR es:[rdi],dx
   140052c65:	(bad)  
   140052c66:	or     eax,0xec46500
   140052c6b:	add    BYTE PTR [rax+0x64],ah
   140052c6e:	ltr    WORD PTR [rsi]
   140052c71:	repnz (bad) 
   140052c73:	jo     0x140052c8b
   140052c75:	push   rax
   140052c76:	adc    eax,0xa170130
   140052c7b:	add    BYTE PTR [rdi],dl
   140052c7d:	push   rsp
   140052c7e:	adc    al,0x0
   140052c80:	(bad)  
   140052c81:	xor    al,0x13
   140052c83:	add    BYTE PTR [rdi],dl
   140052c85:	mov    dl,0x13
   140052c87:	loopne 0x140052c9a
   140052c89:	ror    BYTE PTR [rdi],1
   140052c8b:	ror    BYTE PTR [rip+0x21600c70],0x0        # 0x161653902
   140052c92:	add    BYTE PTR [rax],al
   140052c94:	jo     0x140052cce
   140052c96:	add    DWORD PTR [rax],eax
   140052c98:	mov    edi,0x3c000138
   140052c9d:	sub    eax,0x210005
   140052ca2:	(bad)  
   140052ca3:	add    BYTE PTR [rax],al
   140052ca5:	hlt    
   140052ca6:	add    al,0x0
   140052ca8:	add    ah,ah
   140052caa:	or     al,0x0
   140052cac:	add    ah,dl
   140052cae:	or     eax,DWORD PTR [rax]
   140052cb0:	jo     0x140052cea
   140052cb2:	add    DWORD PTR [rax],eax
   140052cb4:	mov    edi,0x3c000138
   140052cb9:	sub    eax,0x210005
   140052cbe:	or     BYTE PTR [rax],al
   140052cc0:	add    ah,dh
   140052cc2:	add    al,0x0
   140052cc4:	add    ah,ah
   140052cc6:	or     al,0x0
   140052cc8:	add    ah,dl
   140052cca:	or     eax,DWORD PTR [rax]
   140052ccc:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   140052cd0:	jo     0x140052d0a
   140052cd2:	add    DWORD PTR [rax],eax
   140052cd4:	mov    edi,0x3c000138
   140052cd9:	sub    eax,0x210005
   140052cde:	add    BYTE PTR [rax],al
   140052ce0:	mov    edi,0x36000138
   140052ce5:	cmp    DWORD PTR [rcx],eax
   140052ce7:	add    BYTE PTR [rbp*1+0x210005],ah
   140052cee:	add    BYTE PTR [rax],al
   140052cf0:	cmp    DWORD PTR ss:[rcx],eax
   140052cf3:	add    BYTE PTR [rdi+0x39],cl
   140052cf6:	add    DWORD PTR [rax],eax
   140052cf8:	adc    BYTE PTR [rip+0x5210005],ch        # 0x145262d03
   140052cfe:	add    al,BYTE PTR [rax]
   140052d00:	add    eax,0x36000a64
   140052d05:	cmp    DWORD PTR [rcx],eax
   140052d07:	add    BYTE PTR [rdi+0x39],cl
   140052d0a:	add    DWORD PTR [rax],eax
   140052d0c:	adc    BYTE PTR [rip+0x5210005],ch        # 0x145262d17
   140052d12:	add    al,BYTE PTR [rax]
   140052d14:	add    eax,0xbf000bd4
   140052d19:	cmp    BYTE PTR [rcx],al
   140052d1b:	add    BYTE PTR [rsi],dh
   140052d1d:	cmp    DWORD PTR [rcx],eax
   140052d1f:	add    BYTE PTR [rbp*1+0xa210005],ah
   140052d26:	add    al,0x0
   140052d28:	or     dh,ah
   140052d2a:	add    al,0x0
   140052d2c:	add    eax,0x70000ce4
   140052d31:	cmp    BYTE PTR [rcx],al
   140052d33:	add    BYTE PTR [rdi+0x3c000138],bh
   140052d39:	sub    eax,0xa010005
   140052d3e:	add    eax,0x6420a00
   140052d43:	rol    BYTE PTR [rax+rsi*2],0x3
   140052d47:	push   rax
   140052d48:	add    dh,BYTE PTR [rax]
   140052d4a:	add    BYTE PTR [rax],al
   140052d4c:	add    DWORD PTR [rsi+0x7],esi
   140052d4f:	add    BYTE PTR [rsi+0x34],dh
   140052d52:	add    al,BYTE PTR [rax]
   140052d54:	or     esp,DWORD PTR [rsp+rax*1+0x0]
   140052d58:	or     edx,DWORD PTR [rbx+rax*1+0x0]
   140052d5c:	or     esi,DWORD PTR [rax+0x0]
   140052d5f:	add    BYTE PTR [rcx],ah
   140052d61:	add    BYTE PTR [rax],al
   140052d63:	add    al,dh
   140052d65:	cmp    eax,DWORD PTR [rcx]
   140052d67:	add    BYTE PTR [rdx+0x3c],cl
   140052d6a:	add    DWORD PTR [rax],eax
   140052d6c:	test   BYTE PTR [rip+0x5210005],ch        # 0x145262d77
   140052d72:	add    al,BYTE PTR [rax]
   140052d74:	add    eax,0xf00008d4
   140052d79:	cmp    eax,DWORD PTR [rcx]
   140052d7b:	add    BYTE PTR [rdx+0x3c],cl
   140052d7e:	add    DWORD PTR [rax],eax
   140052d80:	test   BYTE PTR [rip+0x12010005],ch        # 0x152062d8b
   140052d86:	or     BYTE PTR [rax],al
   140052d88:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   140052d8c:	adc    dh,BYTE PTR [rcx+rcx*1]
   140052d8f:	add    BYTE PTR [rdx],dl
   140052d91:	xor    cl,BYTE PTR [rsi]
   140052d93:	ror    BYTE PTR [rax+rsi*2],0xb
   140052d97:	(bad)  
   140052d98:	and    DWORD PTR [rax],eax
   140052d9a:	add    BYTE PTR [rax],al
   140052d9c:	push   rax
   140052d9d:	cmp    eax,0x3dee0001
   140052da2:	add    DWORD PTR [rax],eax
   140052da4:	shr    BYTE PTR [rip+0x10210005],0x4        # 0x150262db0
   140052dab:	add    BYTE PTR [rax],dl
   140052dad:	in     al,0x11
   140052daf:	add    BYTE PTR [rax],cl
   140052db1:	(bad)  
   140052db2:	adc    al,BYTE PTR [rax]
   140052db4:	push   rax
   140052db5:	cmp    eax,0x3dee0001
   140052dba:	add    DWORD PTR [rax],eax
   140052dbc:	shr    BYTE PTR [rip+0x1f190005],0x8        # 0x15f1e2dc8
   140052dc3:	add    BYTE PTR [rax],dl
   140052dc5:	add    DWORD PTR [rbx],edx
   140052dc7:	add    BYTE PTR [rcx],cl
   140052dc9:	lock (bad) 
   140052dcb:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143653242
   140052dd2:	add    dh,BYTE PTR [rax]
   140052dd4:	pushf  
   140052dd5:	mov    al,0x2
   140052dd7:	add    BYTE PTR [rax+0x0],dh
   140052dda:	add    BYTE PTR [rax],al
   140052ddc:	and    DWORD PTR [rax],eax
   140052dde:	add    BYTE PTR [rax],al
   140052de0:	mov    al,0x43
   140052de2:	add    DWORD PTR [rax],eax
   140052de4:	int3   
   140052de5:	rex.XB add DWORD PTR [r8],eax
   140052de8:	sub    BYTE PTR [rsi],ch
   140052dea:	add    eax,0x2100
   140052def:	add    ah,cl
   140052df1:	rex.XB add DWORD PTR [r8],eax
   140052df4:	cli    
   140052df5:	rex.XB add DWORD PTR [r8],eax
   140052df8:	adc    BYTE PTR [rsi],ch
   140052dfa:	add    eax,0x2052100
   140052dff:	add    BYTE PTR [rip+0xffffffffcc000834],al        # 0x10c053639
   140052e05:	rex.XB add DWORD PTR [r8],eax
   140052e08:	cli    
   140052e09:	rex.XB add DWORD PTR [r8],eax
   140052e0c:	adc    BYTE PTR [rsi],ch
   140052e0e:	add    eax,0x40e2100
   140052e13:	add    BYTE PTR [rsi],cl
   140052e15:	(bad)  
   140052e16:	or     al,BYTE PTR [rax]
   140052e18:	add    eax,0xb0000954
   140052e1d:	rex.XB add DWORD PTR [r8],eax
   140052e20:	int3   
   140052e21:	rex.XB add DWORD PTR [r8],eax
   140052e24:	sub    BYTE PTR [rsi],ch
   140052e26:	add    eax,0x4090100
   140052e2b:	add    BYTE PTR [rcx],cl
   140052e2d:	xor    al,BYTE PTR [rip+0x27003d0]        # 0x142753203
   140052e33:	(bad)  
   140052e34:	and    DWORD PTR [rax],eax
   140052e36:	add    BYTE PTR [rax],al
   140052e38:	add    BYTE PTR [rsi+0x1],al
   140052e3b:	add    BYTE PTR [rsi+0x46],bl
   140052e3e:	add    DWORD PTR [rax],eax
   140052e40:	pop    rax
   140052e41:	cs add eax,0x2082100
   140052e47:	add    BYTE PTR [rax],cl
   140052e49:	hlt    
   140052e4a:	adc    eax,0x1460000
   140052e4f:	add    BYTE PTR [rsi+0x46],bl
   140052e52:	add    DWORD PTR [rax],eax
   140052e54:	pop    rax
   140052e55:	cs add eax,0x8110100
   140052e5b:	add    BYTE PTR [rcx],dl
   140052e5d:	mov    dl,0xd
   140052e5f:	loopne 0x140052e6c
   140052e61:	ror    BYTE PTR [rcx],1
   140052e63:	rol    BYTE PTR [rdi],0x70
   140052e66:	(bad)  
   140052e67:	(bad)  
   140052e68:	add    eax,0x1300450
   140052e6d:	adc    ecx,DWORD PTR [rcx]
   140052e6f:	add    BYTE PTR [rbx],dl
   140052e71:	ret    0xf00f
   140052e74:	or     eax,0x9d00be0
   140052e79:	rol    BYTE PTR [rdi],0x70
   140052e7c:	(bad)  
   140052e7d:	(bad)  
   140052e7e:	add    eax,0x300450
   140052e83:	add    BYTE PTR [rcx],ah
   140052e85:	add    BYTE PTR [rdx],al
   140052e87:	add    BYTE PTR [rax],al
   140052e89:	xor    al,0x6
   140052e8b:	add    BYTE PTR [rax],dl
   140052e8d:	push   rcx
   140052e8e:	add    DWORD PTR [rax],eax
   140052e90:	(bad)  
   140052e91:	push   rcx
   140052e92:	add    DWORD PTR [rax],eax
   140052e94:	lods   al,BYTE PTR ds:[rsi]
   140052e95:	cs add eax,0x2052100
   140052e9b:	add    BYTE PTR [rip+0x10000634],al        # 0x1500534d5
   140052ea1:	push   rcx
   140052ea2:	add    DWORD PTR [rax],eax
   140052ea4:	(bad)  
   140052ea5:	push   rcx
   140052ea6:	add    DWORD PTR [rax],eax
   140052ea8:	lods   al,BYTE PTR ds:[rsi]
   140052ea9:	cs add eax,0x40a0100
   140052eaf:	add    BYTE PTR [rdx],cl
   140052eb1:	fs (bad) 
   140052eb3:	add    BYTE PTR [rdx],cl
   140052eb5:	xor    al,BYTE PTR [rsi]
   140052eb7:	jo     0x140052eda
   140052eb9:	add    BYTE PTR [rax],al
   140052ebb:	add    al,ah
   140052ebd:	push   rcx
   140052ebe:	add    DWORD PTR [rax],eax
   140052ec0:	mov    dl,BYTE PTR [rdx+0x1]
   140052ec3:	add    ah,dh
   140052ec5:	cs add eax,0xe5a2100
   140052ecb:	add    BYTE PTR [rdx-0xc],bl
   140052ece:	adc    DWORD PTR [rax],eax
   140052ed0:	cmp    al,0xd4
   140052ed2:	adc    al,BYTE PTR [rax]
   140052ed4:	xor    al,0xc4
   140052ed6:	adc    eax,DWORD PTR [rax]
   140052ed8:	and    BYTE PTR [rsp+rdx*1+0x0],dh
   140052edc:	sbb    BYTE PTR [rbp+rdx*1+0x0],ah
   140052ee0:	adc    BYTE PTR [rsi+rdx*1+0x0],dl
   140052ee4:	or     BYTE PTR [rdi+rdx*1],dh
   140052ee7:	add    al,ah
   140052ee9:	push   rcx
   140052eea:	add    DWORD PTR [rax],eax
   140052eec:	mov    dl,BYTE PTR [rdx+0x1]
   140052eef:	add    ah,dh
   140052ef1:	cs add eax,0x3130100
   140052ef7:	add    BYTE PTR [rbx],dl
   140052ef9:	add    DWORD PTR [rax],ebx
   140052efb:	add    BYTE PTR [rax+riz*8],cl
   140052efe:	add    BYTE PTR [rax],al
   140052f00:	and    DWORD PTR [rcx],esp
   140052f02:	or     al,0x0
   140052f04:	and    esp,esp
   140052f06:	add    eax,0x6d41c00
   140052f0b:	add    BYTE PTR [rdi],dl
   140052f0d:	(bad)  
   140052f0e:	or     eax,0xc541200
   140052f13:	add    BYTE PTR [rip+0xb34],cl        # 0x140053a4d
   140052f19:	hlt    
   140052f1a:	add    al,0x0
   140052f1c:	jo     0x140052f7b
   140052f1e:	add    DWORD PTR [rax],eax
   140052f20:	stos   BYTE PTR es:[rdi],al
   140052f21:	pop    rbp
   140052f22:	add    DWORD PTR [rax],eax
   140052f24:	cmp    al,0x2f
   140052f26:	add    eax,0x2052100
   140052f2b:	add    BYTE PTR [rip+0x700004f4],al        # 0x1b0053425
   140052f31:	pop    rbp
   140052f32:	add    DWORD PTR [rax],eax
   140052f34:	stos   BYTE PTR es:[rdi],al
   140052f35:	pop    rbp
   140052f36:	add    DWORD PTR [rax],eax
   140052f38:	cmp    al,0x2f
   140052f3a:	add    eax,0x30b0100
   140052f3f:	add    BYTE PTR [rbx],cl
   140052f41:	(bad)  
   140052f42:	(bad)  
   140052f43:	jo     0x140052f4b
   140052f45:	(bad)  
   140052f46:	add    BYTE PTR [rax],al
   140052f48:	add    DWORD PTR [rbp+0xa],ecx
   140052f4b:	add    BYTE PTR [rbp+0x54],cl
   140052f4e:	or     DWORD PTR [rax],eax
   140052f50:	xor    al,0x8
   140052f53:	add    BYTE PTR [rsi],cl
   140052f55:	or     al,BYTE PTR fs:[rax]
   140052f58:	(bad)  
   140052f59:	xor    cl,BYTE PTR [rdx]
   140052f5b:	ror    BYTE PTR [rax],1
   140052f5d:	rol    BYTE PTR [rsi],0x70
   140052f60:	add    DWORD PTR [rdi],edx
   140052f62:	or     al,BYTE PTR [rax]
   140052f64:	(bad)  
   140052f65:	xor    al,0x19
   140052f67:	add    BYTE PTR [rdi],dl
   140052f69:	repnz adc al,dh
   140052f6c:	(bad)  
   140052f6d:	loopne 0x140052f7b
   140052f6f:	ror    BYTE PTR [rdx],1
   140052f71:	ror    BYTE PTR [rax],0x70
   140052f74:	(bad)  
   140052f75:	(bad)  
   140052f76:	(bad)  
   140052f77:	push   rax
   140052f78:	add    DWORD PTR [rax-0xb7ffff6],eax
   140052f7e:	(bad)  
   140052f7f:	add    BYTE PTR [rcx],dl
   140052f81:	ror    BYTE PTR [rip+0x9d00be0],cl        # 0x149d53b67
   140052f87:	rol    BYTE PTR [rdi],0x70
   140052f8a:	(bad)  
   140052f8b:	(bad)  
   140052f8c:	add    eax,0x21300450
   140052f91:	add    BYTE PTR [rax],al
   140052f93:	add    al,al
   140052f95:	imul   eax,DWORD PTR [rcx],0x169e200
   140052f9b:	add    BYTE PTR [rdi+rbp*1+0x66210005],bh
   140052fa2:	(bad)  
   140052fa3:	add    BYTE PTR [rsi+0x64],ah
   140052fa6:	adc    al,BYTE PTR [rax]
   140052fa8:	sbb    ah,al
   140052faa:	adc    DWORD PTR [rax],eax
   140052fac:	add    al,0x34
   140052fae:	adc    eax,DWORD PTR [rax]
   140052fb0:	shr    BYTE PTR [rcx+0x1],0x0
   140052fb4:	loop   0x14005301f
   140052fb6:	add    DWORD PTR [rax],eax
   140052fb8:	mov    esp,0x100052f
   140052fbd:	adc    al,BYTE PTR [rdi]
   140052fbf:	add    BYTE PTR [rdx],dl
   140052fc1:	add    DWORD PTR [rax+rax*1],edx
   140052fc4:	or     esi,eax
   140052fc6:	or     eax,esp
   140052fc8:	(bad)  
   140052fc9:	rol    BYTE PTR [rip+0x500470],1        # 0x14055343f
   140052fcf:	add    BYTE PTR [rcx],ah
   140052fd1:	add    BYTE PTR [rsi],al
   140052fd3:	add    BYTE PTR [rax],al
   140052fd5:	in     al,0x18
   140052fd7:	add    BYTE PTR [rax],al
   140052fd9:	(bad)  
   140052fda:	sbb    DWORD PTR [rax],eax
   140052fdc:	add    BYTE PTR [rcx+riz*1+0x0],ah
   140052fe0:	movabs al,ds:0x1800016e8c00016d
   140052fe9:	xor    BYTE PTR [rip+0x2100],al        # 0x1400550ef
   140052fef:	add    BYTE PTR [rax-0x73fffe93],ah
   140052ff5:	outs   dx,BYTE PTR ds:[rsi]
   140052ff6:	add    DWORD PTR [rax],eax
   140052ff8:	sbb    BYTE PTR [rax],dh
   140052ffa:	add    eax,0x6c72100
   140052fff:	add    bh,al
   140053001:	in     al,0x18
   140053003:	add    BYTE PTR [rsp+rdx*8],bl
   140053006:	sbb    DWORD PTR [rax],eax
   140053008:	or     BYTE PTR [rcx+riz*1+0x0],ah
   14005300c:	movabs al,ds:0x1800016e8c00016d
   140053015:	xor    BYTE PTR [rip+0x70f0100],al        # 0x14714311b
   14005301b:	add    BYTE PTR [rdi],cl
   14005301d:	add    DWORD PTR [rdx],ebx
   14005301f:	add    BYTE PTR [rax],cl
   140053021:	lock (bad) 
   140053023:	rol    BYTE PTR [rax+rsi*2],0x3
   140053027:	push   rax
   140053028:	add    dh,BYTE PTR [rax]
   14005302a:	add    BYTE PTR [rax],al
   14005302c:	add    DWORD PTR [rdx],esp
   14005302e:	or     al,BYTE PTR [rax]
   140053030:	and    al,BYTE PTR [rcx]
   140053032:	adc    eax,DWORD PTR [rax]
   140053034:	sbb    esi,eax
   140053036:	sbb    eax,esp
   140053038:	(bad)  
   140053039:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x1527543ff
   14005303f:	(bad)  
   140053040:	adc    DWORD PTR [rax+0x10],edx
   140053043:	xor    BYTE PTR [rcx],ah
   140053045:	add    BYTE PTR [rax],al
   140053047:	add    al,dh
   140053049:	lea    eax,[rcx]
   14005304b:	add    BYTE PTR [rdx],ch
   14005304d:	mov    es,WORD PTR [rcx]
   14005304f:	add    BYTE PTR [rax+0x21000530],al
   140053055:	add    BYTE PTR [rdx],al
   140053057:	add    BYTE PTR [rax],al
   140053059:	je     0x14005306a
   14005305b:	add    al,dh
   14005305d:	lea    eax,[rcx]
   14005305f:	add    BYTE PTR [rdx],ch
   140053061:	mov    es,WORD PTR [rcx]
   140053063:	add    BYTE PTR [rax+0x21000530],al
   140053069:	adc    BYTE PTR [rax+rax*1],al
   14005306c:	adc    BYTE PTR [rdi+rcx*1+0x0],dh
   140053070:	add    al,0x54
   140053072:	(bad)  
   140053073:	add    al,dh
   140053075:	lea    eax,[rcx]
   140053077:	add    BYTE PTR [rdx],ch
   140053079:	mov    es,WORD PTR [rcx]
   14005307b:	add    BYTE PTR [rax+0x1000530],al
   140053081:	adc    eax,0x64150008
   140053086:	adc    DWORD PTR [rax],eax
   140053088:	adc    eax,0x15001034
   14005308d:	xchg   edx,eax
   14005308e:	adc    eax,esp
   140053090:	(bad)  
   140053092:	or     eax,0xc1c01c0
   140053097:	add    BYTE PTR [rsp+rsi*2],bl
   14005309a:	or     BYTE PTR [rax],al
   14005309c:	sbb    al,0x64
   14005309e:	(bad)  
   14005309f:	add    BYTE PTR [rsp+rdx*2],bl
   1400530a2:	(bad)  
   1400530a3:	add    BYTE PTR [rsp+rsi*1],bl
   1400530a6:	add    eax,0x1af01c00
   1400530ab:	loopne 0x1400530c5
   1400530ad:	rcl    BYTE PTR [rsi],1
   1400530af:	rol    BYTE PTR [rcx],0x14
   1400530b2:	or     DWORD PTR [rax],eax
   1400530b4:	adc    al,0x64
   1400530b6:	(bad)  
   1400530b7:	add    BYTE PTR [rsp+rdx*2],dl
   1400530ba:	(bad)  
   1400530bb:	add    BYTE PTR [rsp+rsi*1],dl
   1400530be:	add    eax,0x12d01400
   1400530c3:	rcl    BYTE PTR [rax],0x70
   1400530c6:	add    BYTE PTR [rax],al
   1400530c8:	add    DWORD PTR [rdx+rcx*1],edx
   1400530cb:	add    BYTE PTR [rsp+rdx*2],dl
   1400530ce:	or     al,BYTE PTR [rax]
   1400530d0:	adc    al,0x34
   1400530d2:	or     BYTE PTR [rax],al
   1400530d4:	adc    al,0xf0
   1400530d6:	adc    ah,al
   1400530d8:	adc    al,dl
   1400530da:	(bad)  
   1400530db:	ror    BYTE PTR [rax+rsi*2],0xb
   1400530df:	(bad)  
   1400530e0:	and    DWORD PTR [rax],eax
   1400530e2:	(bad)  
   1400530e3:	add    BYTE PTR [rax],al
   1400530e5:	(bad)  
   1400530e6:	add    eax,0x4740000
   1400530eb:	add    BYTE PTR [rax],al
   1400530ed:	push   rsp
   1400530ee:	add    eax,DWORD PTR [rax]
   1400530f0:	xor    BYTE PTR [rbp-0x5291ffff],ch
   1400530f6:	add    DWORD PTR [rax],eax
   1400530f8:	add    BYTE PTR [rip+0x210005],dh        # 0x140263103
   1400530fe:	add    BYTE PTR [rax],al
   140053100:	mov    ah,0xad
   140053102:	add    DWORD PTR [rax],eax
   140053104:	(bad)  
   140053105:	scas   al,BYTE PTR es:[rdi]
   140053106:	add    DWORD PTR [rax],eax
   140053108:	and    BYTE PTR [rcx],dh
   14005310a:	add    eax,0x2052100
   14005310f:	add    BYTE PTR [rip+0xffffffffb4000234],al        # 0xf4053349
   140053115:	lods   eax,DWORD PTR ds:[rsi]
   140053116:	add    DWORD PTR [rax],eax
   140053118:	(bad)  
   140053119:	scas   al,BYTE PTR es:[rdi]
   14005311a:	add    DWORD PTR [rax],eax
   14005311c:	and    BYTE PTR [rcx],dh
   14005311e:	add    eax,0x6052100
   140053123:	add    BYTE PTR [rip+0x354],al        # 0x14005347d
   140053129:	(bad)  
   14005312a:	add    eax,0x4740000
   14005312f:	add    BYTE PTR [rax],dh
   140053131:	lods   eax,DWORD PTR ds:[rsi]
   140053132:	add    DWORD PTR [rax],eax
   140053134:	outs   dx,BYTE PTR ds:[rsi]
   140053135:	lods   eax,DWORD PTR ds:[rsi]
   140053136:	add    DWORD PTR [rax],eax
   140053138:	add    BYTE PTR [rip+0xa210005],dh        # 0x14a263143
   14005313e:	add    al,0x0
   140053140:	or     al,ah
   140053142:	add    eax,0x4740500
   140053147:	add    BYTE PTR [rax],dh
   140053149:	lods   eax,DWORD PTR ds:[rsi]
   14005314a:	add    DWORD PTR [rax],eax
   14005314c:	outs   dx,BYTE PTR ds:[rsi]
   14005314d:	lods   eax,DWORD PTR ds:[rsi]
   14005314e:	add    DWORD PTR [rax],eax
   140053150:	add    BYTE PTR [rip+0x1f010005],dh        # 0x15f06315b
   140053156:	or     DWORD PTR [rax],eax
   140053158:	(bad)  
   140053159:	xor    al,0xb
   14005315b:	add    BYTE PTR [rdi],bl
   14005315d:	lock sbb eax,0x19d01be0
   140053163:	rcl    BYTE PTR [rdi],0x70
   140053166:	(bad)  
   140053167:	(bad)  
   140053168:	adc    eax,0x1000050
   14005316d:	(bad)  
   14005316e:	or     DWORD PTR [rax],eax
   140053170:	(bad)  
   140053171:	je     0x140053178
   140053173:	add    BYTE PTR [rsi],dl
   140053175:	fs add al,0x0
   140053178:	(bad)  
   140053179:	push   rsp
   14005317a:	add    eax,DWORD PTR [rax]
   14005317c:	(bad)  
   14005317d:	xor    al,0x2
   14005317f:	add    BYTE PTR [rsi],dl
   140053181:	rol    BYTE PTR [rax],0x0
   140053184:	add    DWORD PTR [rdx],ebx
   140053186:	or     eax,DWORD PTR [rax]
   140053188:	sbb    dh,BYTE PTR [rdi+rax*1+0x0]
   14005318c:	sbb    ah,BYTE PTR [rsi+rax*1+0x0]
   140053190:	sbb    dl,BYTE PTR [rbp+rax*1+0x0]
   140053194:	sbb    dh,BYTE PTR [rsp+rax*1]
   140053197:	add    BYTE PTR [rdx],bl
   140053199:	loopne 0x1400531b3
   14005319b:	rcl    BYTE PTR [rsi],1
   14005319d:	rol    BYTE PTR [rax],0x0
   1400531a0:	add    DWORD PTR [rdx],edx
   1400531a2:	or     BYTE PTR [rax],al
   1400531a4:	adc    dl,BYTE PTR [rsi+rcx*1+0x0]
   1400531a8:	adc    dh,BYTE PTR [rcx*1+0xe721200]
   1400531af:	ror    BYTE PTR [rax+rsi*2],0xb
   1400531b3:	(bad)  
   1400531b4:	and    DWORD PTR [rax],eax
   1400531b6:	add    BYTE PTR [rax],al
   1400531b8:	jo     0x140053172
   1400531ba:	add    DWORD PTR [rax],eax
   1400531bc:	(bad)  
   1400531bd:	mov    eax,0x32380001
   1400531c2:	add    eax,0x2052100
   1400531c7:	add    BYTE PTR [rip+0x70000fc4],al        # 0x1b0054191
   1400531cd:	mov    eax,0xb8ea0001
   1400531d2:	add    DWORD PTR [rax],eax
   1400531d4:	cmp    BYTE PTR [rdx],dh
   1400531d6:	add    eax,0x2100
   1400531db:	add    BYTE PTR [rax-0x46],ah
   1400531de:	add    DWORD PTR [rax],eax
   1400531e0:	scas   eax,DWORD PTR es:[rdi]
   1400531e1:	mov    edx,0x32700001
   1400531e6:	add    eax,0x2052100
   1400531eb:	add    BYTE PTR [rip+0x60000634],al        # 0x1a0053825
   1400531f1:	mov    edx,0xbaaf0001
   1400531f6:	add    DWORD PTR [rax],eax
   1400531f8:	jo     0x14005322c
   1400531fa:	add    eax,0xa180100
   1400531ff:	add    BYTE PTR [rax],bl
   140053201:	je     0x140053209
   140053203:	add    BYTE PTR [rax],bl
   140053205:	fs add eax,0x4541800
   14005320b:	add    BYTE PTR [rax],bl
   14005320d:	xor    al,0x3
   14005320f:	add    BYTE PTR [rax],bl
   140053211:	rcl    BYTE PTR [rsi],1
   140053213:	shl    BYTE PTR [rcx],0x0
   140053216:	add    BYTE PTR [rax],al
   140053218:	and    al,al
   14005321a:	add    DWORD PTR [rax],eax
   14005321c:	(bad)  
   14005321d:	rol    BYTE PTR [rcx],0x0
   140053220:	cmp    BYTE PTR [rdx],dh
   140053222:	add    eax,0x2052100
   140053227:	add    BYTE PTR [rip+0x20000fc4],al        # 0x1600541f1
   14005322d:	rol    BYTE PTR [rcx],0x0
   140053230:	(bad)  
   140053231:	rol    BYTE PTR [rcx],0x0
   140053234:	cmp    BYTE PTR [rdx],dh
   140053236:	add    eax,0x8100100
   14005323b:	add    BYTE PTR [rax],dl
   14005323d:	xor    al,0x10
   14005323f:	add    BYTE PTR [rax],dl
   140053241:	jb     0x14005324f
   140053243:	loopne 0x14005324f
   140053245:	ror    BYTE PTR [rax],1
   140053247:	jo     0x140053250
   140053249:	(bad)  
   14005324a:	(bad)  
   14005324b:	push   rax
   14005324c:	and    DWORD PTR [rax],eax
   14005324e:	add    BYTE PTR [rax],al
   140053250:	adc    dl,al
   140053252:	add    DWORD PTR [rax],eax
   140053254:	pop    rdi
   140053255:	ret    0x1
   140053258:	jo     0x14005328c
   14005325a:	add    eax,0x2052100
   14005325f:	add    BYTE PTR [rip+0x10000634],al        # 0x150053899
   140053265:	ret    0x1
   140053268:	pop    rdi
   140053269:	ret    0x1
   14005326c:	jo     0x1400532a0
   14005326e:	add    eax,0x8410100
   140053273:	add    BYTE PTR [rcx+0x54],al
   140053276:	(bad)  
   140053277:	add    BYTE PTR [rax],dl
   140053279:	je     0x140053284
   14005327b:	add    BYTE PTR [rax],dl
   14005327d:	or     BYTE PTR fs:[rax],al
   140053280:	adc    BYTE PTR [rdx],dh
   140053282:	or     al,0xc0
   140053284:	add    DWORD PTR [rdx+rcx*1],edx
   140053287:	add    BYTE PTR [rsp+rsi*1],dl
   14005328a:	or     eax,0x10321400
   14005328f:	lock (bad) 
   140053291:	loopne 0x14005329f
   140053293:	ror    BYTE PTR [rdx],1
   140053295:	ror    BYTE PTR [rax],0x70
   140053298:	(bad)  
   140053299:	(bad)  
   14005329a:	(bad)  
   14005329b:	push   rax
   14005329c:	and    DWORD PTR [rax],eax
   14005329e:	add    BYTE PTR [rax],al
   1400532a0:	loopne 0x140053267
   1400532a2:	add    DWORD PTR [rax],eax
   1400532a4:	add    eax,0xe80001c6
   1400532a9:	xor    al,BYTE PTR [rip+0x2100]        # 0x1400553af
   1400532af:	add    BYTE PTR [rip+0x7f0001c6],al        # 0x1bf05347b
   1400532b5:	mov    BYTE PTR [rcx],0x0
   1400532b8:	shl    BYTE PTR [rdx],1
   1400532ba:	add    eax,0x2052100
   1400532bf:	add    BYTE PTR [rip+0x50009d4],al        # 0x145053c99
   1400532c5:	mov    BYTE PTR [rcx],0x0
   1400532c8:	jg     0x140053290
   1400532ca:	add    DWORD PTR [rax],eax
   1400532cc:	shl    BYTE PTR [rdx],1
   1400532ce:	add    eax,0x40e2100
   1400532d3:	add    BYTE PTR [rsi],cl
   1400532d5:	in     al,0x8
   1400532d7:	add    BYTE PTR [rip+0xffffffffe0000ac4],al        # 0x120053da1
   1400532dd:	(bad)
   1400532e0:	add    eax,0xe80001c6
   1400532e5:	xor    al,BYTE PTR [rip+0x5090100]        # 0x1450e33eb
   1400532eb:	add    BYTE PTR [rcx],cl
   1400532ed:	movabs ds:0x3002500360047005,al
   1400532f6:	add    BYTE PTR [rax],al
   1400532f8:	and    DWORD PTR [rax],eax
   1400532fa:	add    BYTE PTR [rax],al
   1400532fc:	push   rax
   1400532fd:	retf   
   1400532fe:	add    DWORD PTR [rax],eax
   140053300:	xchg   esp,eax
   140053301:	retf   
   140053302:	add    DWORD PTR [rax],eax
   140053304:	sbb    al,0x34
   140053306:	add    eax,0x2100
   14005330b:	add    BYTE PTR [rbx+rcx*8-0x344cffff],dl
   140053312:	add    DWORD PTR [rax],eax
   140053314:	xor    al,0x33
   140053316:	add    eax,0x6182100
   14005331b:	add    BYTE PTR [rax],bl
   14005331d:	hlt    
   14005331e:	add    al,0x0
   140053320:	or     eax,0x50005e4
   140053325:	je     0x140053332
   140053327:	add    BYTE PTR [rbx+rcx*8-0x344cffff],dl
   14005332e:	add    DWORD PTR [rax],eax
   140053330:	xor    al,0x33
   140053332:	add    eax,0x2052100
   140053337:	add    BYTE PTR [rip+0x50000cc4],al        # 0x190054001
   14005333d:	retf   
   14005333e:	add    DWORD PTR [rax],eax
   140053340:	xchg   esp,eax
   140053341:	retf   
   140053342:	add    DWORD PTR [rax],eax
   140053344:	sbb    al,0x34
   140053346:	add    eax,0x2002100
   14005334b:	add    BYTE PTR [rax],al
   14005334d:	je     0x140053351
   14005334f:	add    BYTE PTR [rax+0x140001cf],dl
   140053355:	rol    BYTE PTR [rcx],1
   140053357:	add    BYTE PTR [rsp+rsi*1+0x5],ah
   14005335b:	add    BYTE PTR [rcx],ah
   14005335d:	add    BYTE PTR [rax],al
   14005335f:	add    BYTE PTR [rax+0x140001cf],dl
   140053365:	rol    BYTE PTR [rcx],1
   140053367:	add    BYTE PTR [rsp+rsi*1+0x5],ah
   14005336b:	add    BYTE PTR [rcx],ah
   14005336d:	add    eax,0x74050002
   140053372:	add    al,BYTE PTR [rax]
   140053374:	nop
   140053375:	iret   
   140053376:	add    DWORD PTR [rax],eax
   140053378:	adc    al,0xd0
   14005337a:	add    DWORD PTR [rax],eax
   14005337c:	fs xor al,0x5
   14005337f:	add    BYTE PTR [rcx],ah
   140053381:	add    BYTE PTR [rax],al
   140053383:	add    BYTE PTR [rax],ah
   140053385:	rol    DWORD PTR [rcx],1
   140053387:	add    BYTE PTR [rbp-0x2f],al
   14005338a:	add    DWORD PTR [rax],eax
   14005338c:	call   0x1610538c3
   140053391:	add    BYTE PTR [rax],al
   140053393:	add    BYTE PTR [rbp-0x2f],al
   140053396:	add    DWORD PTR [rax],eax
   140053398:	mov    edi,0xb40001d1
   14005339d:	xor    eax,DWORD PTR [rip+0x2052100]        # 0x1420a54a3
   1400533a3:	add    BYTE PTR [rip+0x450009d4],al        # 0x185053d7d
   1400533a9:	rol    DWORD PTR [rcx],1
   1400533ab:	add    BYTE PTR [rdi-0x4bfffe2f],bh
   1400533b1:	xor    eax,DWORD PTR [rip+0x40e2100]        # 0x1441354b7
   1400533b7:	add    BYTE PTR [rsi],cl
   1400533b9:	in     al,0x8
   1400533bb:	add    BYTE PTR [rip+0x20000ac4],al        # 0x160053e85
   1400533c1:	rol    DWORD PTR [rcx],1
   1400533c3:	add    BYTE PTR [rbp-0x2f],al
   1400533c6:	add    DWORD PTR [rax],eax
   1400533c8:	call   0x1610538ff
   1400533cd:	add    BYTE PTR [rax],al
   1400533cf:	add    BYTE PTR [rax-0x3bfffe2a],al
   1400533d5:	(bad)  
   1400533d6:	add    DWORD PTR [rax],eax
   1400533d8:	sbb    al,0x34
   1400533da:	add    eax,0x2100
   1400533df:	add    ah,al
   1400533e1:	(bad)  
   1400533e2:	add    DWORD PTR [rax],eax
   1400533e4:	jrcxz  0x1400533bc
   1400533e6:	add    DWORD PTR [rax],eax
   1400533e8:	or     BYTE PTR [rax*1+0x6182100],dh
   1400533ef:	add    BYTE PTR [rax],bl
   1400533f1:	hlt    
   1400533f2:	add    al,0x0
   1400533f4:	or     eax,0x50005e4
   1400533f9:	je     0x140053406
   1400533fb:	add    ah,al
   1400533fd:	(bad)  
   1400533fe:	add    DWORD PTR [rax],eax
   140053400:	jrcxz  0x1400533d8
   140053402:	add    DWORD PTR [rax],eax
   140053404:	or     BYTE PTR [rax*1+0x2052100],dh
   14005340b:	add    BYTE PTR [rip+0xffffffff80000cc4],al        # 0xc00540d5
   140053411:	(bad)  
   140053412:	add    DWORD PTR [rax],eax
   140053414:	(bad)  
   140053415:	(bad)  
   140053416:	add    DWORD PTR [rax],eax
   140053418:	sbb    al,0x34
   14005341a:	add    eax,0x62f0100
   14005341f:	add    BYTE PTR [rdi],ch
   140053421:	push   rsp
   140053422:	or     al,BYTE PTR [rax]
   140053424:	or     DWORD PTR [rdx+0x5],edx
   140053427:	rol    BYTE PTR [rbx],1
   140053429:	(bad)  
   14005342a:	add    dh,BYTE PTR [rax]
   14005342c:	and    DWORD PTR [rax],eax
   14005342e:	add    al,BYTE PTR [rax]
   140053430:	add    BYTE PTR [rdx+rax*1+0x0],dh
   140053434:	rcr    dl,0x1
   140053437:	add    BYTE PTR [rbx+rbx*8+0x1],al
   14005343b:	add    BYTE PTR [rsp+rsi*1+0x5],ah
   14005343f:	add    BYTE PTR [rcx],ah
   140053441:	add    BYTE PTR [rax],al
   140053443:	add    al,al
   140053445:	fiadd  DWORD PTR [rcx]
   140053447:	add    BYTE PTR [rbx+rbx*8+0x1],al
   14005344b:	add    BYTE PTR [rsp+rsi*1+0x5],ah
   14005344f:	add    BYTE PTR [rcx],ah
   140053451:	add    eax,0x74050002
   140053456:	add    al,BYTE PTR [rax]
   140053458:	rcr    dl,0x1
   14005345b:	add    BYTE PTR [rbx+rbx*8+0x1],al
   14005345f:	add    BYTE PTR [rsp+rsi*1+0x5],ah
   140053463:	add    BYTE PTR [rcx],al
   140053465:	add    al,BYTE PTR [rcx]
   140053467:	add    BYTE PTR [rdx],al
   140053469:	xor    BYTE PTR [rax],al
   14005346b:	add    BYTE PTR [rcx],al
   14005346d:	(bad)  
   14005346e:	or     al,BYTE PTR [rax]
   140053470:	(bad)  
   140053471:	xor    al,0xf
   140053473:	add    BYTE PTR [rsi],bl
   140053475:	xor    bl,BYTE PTR [rdx]
   140053477:	lock sbb al,ah
   14005347a:	(bad)  
   14005347b:	rcl    BYTE PTR [rax+rax*8],1
   14005347e:	adc    dh,BYTE PTR [rax+0x11]
   140053481:	(bad)  
   140053482:	adc    BYTE PTR [rax+0x1],dl
   140053485:	sbb    al,0xc
   140053487:	add    BYTE PTR [rsp+riz*2],bl
   14005348a:	or     al,0x0
   14005348c:	sbb    al,0x54
   14005348e:	or     eax,DWORD PTR [rax]
   140053490:	sbb    al,0x34
   140053492:	or     al,BYTE PTR [rax]
   140053494:	sbb    al,0x32
   140053496:	sbb    al,dh
   140053498:	(bad)  
   140053499:	loopne 0x1400534af
   14005349b:	rcl    BYTE PTR [rdx],1
   14005349d:	rcl    BYTE PTR [rax],0x70
   1400534a0:	add    DWORD PTR [rcx],ebx
   1400534a2:	or     al,BYTE PTR [rax]
   1400534a4:	sbb    DWORD PTR [rsi+rcx*1],esi
   1400534a7:	add    BYTE PTR [rcx],bl
   1400534a9:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e5489f
   1400534af:	ror    BYTE PTR [rdi],1
   1400534b1:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b654128
   1400534b8:	and    DWORD PTR [rax],eax
   1400534ba:	add    BYTE PTR [rax],al
   1400534bc:	(bad)  
   1400534bd:	icebp  
   1400534be:	add    DWORD PTR [rax],eax
   1400534c0:	movabs ds:0x21000535000001f1,eax
   1400534c9:	add    BYTE PTR [rax],al
   1400534cb:	add    BYTE PTR [rbx-0x57fffe0f],ah
   1400534d1:	icebp  
   1400534d2:	add    DWORD PTR [rax],eax
   1400534d4:	in     al,dx
   1400534d5:	xor    al,0x5
   1400534d7:	add    BYTE PTR [rcx],ah
   1400534d9:	add    eax,0x74050002
   1400534de:	add    eax,DWORD PTR [rax]
   1400534e0:	movabs ds:0xec0001f1a80001f1,eax
   1400534e9:	xor    al,0x5
   1400534eb:	add    BYTE PTR [rcx],ah
   1400534ed:	add    eax,0x34050002
   1400534f2:	add    al,BYTE PTR [rax]
   1400534f4:	(bad)  
   1400534f5:	icebp  
   1400534f6:	add    DWORD PTR [rax],eax
   1400534f8:	movabs ds:0x1000535000001f1,eax
   140053501:	add    al,BYTE PTR [rcx]
   140053503:	add    BYTE PTR [rdx],al
   140053505:	(bad)  
   140053506:	add    BYTE PTR [rax],al
   140053508:	and    DWORD PTR [rax],eax
   14005350a:	or     BYTE PTR [rax],al
   14005350c:	add    ah,dl
   14005350e:	add    BYTE PTR [rax],al
   140053510:	add    ah,al
   140053512:	add    DWORD PTR [rax],eax
   140053514:	add    BYTE PTR [rdi+rax*1+0x0],dl
   140053518:	add    BYTE PTR [rsi+rax*1],dh
   14005351b:	add    BYTE PTR [rax],al
   14005351d:	repz add DWORD PTR [rax],eax
   140053520:	(bad)  
   140053521:	repz add DWORD PTR [rax],eax
   140053524:	nop
   140053525:	xor    eax,0x210005
   14005352a:	add    BYTE PTR [rax],al
   14005352c:	add    bl,dh
   14005352e:	add    DWORD PTR [rax],eax
   140053530:	(bad)  
   140053531:	repz add DWORD PTR [rax],eax
   140053534:	nop
   140053535:	xor    eax,0x210005
   14005353a:	add    al,BYTE PTR [rax]
   14005353c:	add    ah,dl
   14005353e:	add    BYTE PTR [rax],al
   140053540:	add    bl,dh
   140053542:	add    DWORD PTR [rax],eax
   140053544:	(bad)  
   140053545:	repz add DWORD PTR [rax],eax
   140053548:	nop
   140053549:	xor    eax,0x210005
   14005354e:	add    BYTE PTR [rax],al
   140053550:	(bad)  
   140053551:	repz add DWORD PTR [rax],eax
   140053554:	xchg   ecx,eax
   140053555:	repz add DWORD PTR [rax],eax
   140053558:	jo     0x14005358f
   14005355a:	add    eax,0x2052100
   14005355f:	add    BYTE PTR [rip+0x16000874],al        # 0x156053dd9
   140053565:	repz add DWORD PTR [rax],eax
   140053568:	xchg   ecx,eax
   140053569:	repz add DWORD PTR [rax],eax
   14005356c:	jo     0x1400535a3
   14005356e:	add    eax,0x8172100
   140053573:	add    BYTE PTR [rdi],dl
   140053575:	(bad)  
   140053576:	add    BYTE PTR [rax],al
   140053578:	pinsrw mm0,WORD PTR [rcx],0x0
   14005357c:	or     dl,BYTE PTR [rdi+rax*1+0x0]
   140053580:	add    eax,0x634
   140053585:	repz add DWORD PTR [rax],eax
   140053588:	(bad)  
   140053589:	repz add DWORD PTR [rax],eax
   14005358c:	nop
   14005358d:	xor    eax,0xa010005
   140053592:	add    al,0x0
   140053594:	or     dl,BYTE PTR [rdx]
   140053596:	(bad)  
   140053597:	lock add al,0xe0
   14005359a:	add    ah,BYTE PTR [rax+0x21]
   14005359d:	add    BYTE PTR [rax],al
   14005359f:	add    BYTE PTR [rax-0x3cfffe09],ah
   1400535a5:	test   DWORD PTR [rcx],0x5360000
   1400535ab:	add    BYTE PTR [rcx],ah
   1400535ad:	add    BYTE PTR [rax],al
   1400535af:	add    bl,al
   1400535b1:	test   DWORD PTR [rcx],0x1f7fe00
   1400535b7:	add    ah,ch
   1400535b9:	xor    eax,0x210005
   1400535be:	add    al,BYTE PTR [rax]
   1400535c0:	add    ah,dh
   1400535c2:	add    DWORD PTR [rax],eax
   1400535c4:	ret    
   1400535c5:	test   DWORD PTR [rcx],0x1f7fe00
   1400535cb:	add    ah,ch
   1400535cd:	xor    eax,0x16210005
   1400535d2:	(bad)  
   1400535d3:	add    BYTE PTR [rsi],dl
   1400535d5:	hlt    
   1400535d6:	add    DWORD PTR [rax],eax
   1400535d8:	or     ah,ah
   1400535da:	add    al,BYTE PTR [rax]
   1400535dc:	add    eax,0xc3000434
   1400535e1:	test   DWORD PTR [rcx],0x1f7fe00
   1400535e7:	add    ah,ch
   1400535e9:	xor    eax,0x5210005
   1400535ee:	add    al,BYTE PTR [rax]
   1400535f0:	add    eax,0xa00003d4
   1400535f5:	test   DWORD PTR [rcx],0x1f7c300
   1400535fb:	add    BYTE PTR [rax],al
   1400535fd:	ss add eax,0x5130100
   140053603:	add    BYTE PTR [rbx],dl
   140053605:	rex.X xadd BYTE PTR [rip+0xb600c70],cl        # 0x14b65427d
   14005360d:	push   rax
   14005360e:	add    BYTE PTR [rax],al
   140053610:	and    DWORD PTR [rax],eax
   140053612:	add    al,BYTE PTR [rax]
   140053614:	add    BYTE PTR [rdx+rax*1+0x0],dl
   140053618:	rex cli 
   14005361a:	add    DWORD PTR [rax],eax
   14005361c:	jbe    0x140053618
   14005361e:	add    DWORD PTR [rax],eax
   140053620:	pop    rsp
   140053621:	ss add eax,0x2100
   140053627:	add    BYTE PTR [rsi-0x6],dh
   14005362a:	add    DWORD PTR [rax],eax
   14005362c:	xchg   edi,eax
   14005362d:	cli    
   14005362e:	add    DWORD PTR [rax],eax
   140053630:	rex.W
   140053631:	ss add eax,0x2052100
   140053637:	add    BYTE PTR [rip+0x76000364],al        # 0x1b60539a1
   14005363d:	cli    
   14005363e:	add    DWORD PTR [rax],eax
   140053640:	xchg   edi,eax
   140053641:	cli    
   140053642:	add    DWORD PTR [rax],eax
   140053644:	rex.W
   140053645:	ss add eax,0x2052100
   14005364b:	add    BYTE PTR [rip+0x40000254],al        # 0x1800538a5
   140053651:	cli    
   140053652:	add    DWORD PTR [rax],eax
   140053654:	jbe    0x140053650
   140053656:	add    DWORD PTR [rax],eax
   140053658:	pop    rsp
   140053659:	ss add eax,0x3060100
   14005365f:	add    BYTE PTR [rsi],al
   140053661:	xor    al,0x4
   140053663:	add    BYTE PTR [rsi],al
   140053665:	jo     0x140053667
   140053667:	add    BYTE PTR [rcx],ah
   140053669:	add    BYTE PTR [rdx],al
   14005366b:	add    BYTE PTR [rax],al
   14005366d:	push   rsp
   14005366e:	(bad)  
   14005366f:	add    al,ah
   140053671:	sti    
   140053672:	add    DWORD PTR [rax],eax
   140053674:	and    esp,edi
   140053676:	add    DWORD PTR [rax],eax
   140053678:	movabs al,ds:0xe000000021000536
   140053681:	sti    
   140053682:	add    DWORD PTR [rax],eax
   140053684:	and    esp,edi
   140053686:	add    DWORD PTR [rax],eax
   140053688:	movabs al,ds:0x500020521000536
   140053691:	push   rsp
   140053692:	(bad)  
   140053693:	add    al,ah
   140053695:	sti    
   140053696:	add    DWORD PTR [rax],eax
   140053698:	and    esp,edi
   14005369a:	add    DWORD PTR [rax],eax
   14005369c:	movabs al,ds:0xf00060f01000536
   1400536a5:	or     BYTE PTR fs:[rax],al
   1400536a8:	sysenter 
   1400536aa:	(bad)  
   1400536ab:	add    BYTE PTR [rdi],cl
   1400536ad:	xor    cl,BYTE PTR [rbx]
   1400536af:	jo     0x1400536d2
   1400536b1:	add    BYTE PTR [rax],al
   1400536b3:	add    BYTE PTR [rax],al
   1400536b5:	inc    BYTE PTR [rcx]
   1400536b7:	add    BYTE PTR [rsi-0x2],cl
   1400536ba:	add    DWORD PTR [rax],eax
   1400536bc:	fdiv   QWORD PTR [rsi]
   1400536be:	add    eax,0x6132100
   1400536c3:	add    BYTE PTR [rbx],dl
   1400536c5:	in     al,0x9
   1400536c7:	add    BYTE PTR [rsi],cl
   1400536c9:	je     0x1400536d3
   1400536cb:	add    BYTE PTR [rip+0x754],al        # 0x140053e25
   1400536d1:	inc    BYTE PTR [rcx]
   1400536d3:	add    BYTE PTR [rsi-0x2],cl
   1400536d6:	add    DWORD PTR [rax],eax
   1400536d8:	fdiv   QWORD PTR [rsi]
   1400536da:	add    eax,0x5090100
   1400536df:	add    BYTE PTR [rcx],cl
   1400536e1:	lock (bad) 
   1400536e3:	rol    BYTE PTR [rip+0x26003c0],1        # 0x142653aa9
   1400536e9:	xor    BYTE PTR [rax],al
   1400536eb:	add    BYTE PTR [rcx],ah
   1400536ed:	add    BYTE PTR [rax+rax*1],al
   1400536f0:	add    ah,dh
   1400536f2:	(bad)  
   1400536f3:	add    BYTE PTR [rax],al
   1400536f5:	in     al,0x5
   1400536f7:	add    al,al
   1400536f9:	(bad)  
   1400536fa:	add    al,BYTE PTR [rax]
   1400536fc:	add    BYTE PTR [rdi],al
   1400536fe:	add    al,BYTE PTR [rax]
   140053700:	sub    al,0x37
   140053702:	add    eax,0x2100
   140053707:	add    al,al
   140053709:	(bad)  
   14005370a:	add    al,BYTE PTR [rax]
   14005370c:	add    BYTE PTR [rdi],al
   14005370e:	add    al,BYTE PTR [rax]
   140053710:	sub    al,0x37
   140053712:	add    eax,0x4102100
   140053717:	add    BYTE PTR [rax],dl
   140053719:	hlt    
   14005371a:	(bad)  
   14005371b:	add    BYTE PTR [rip+0xffffffffc00005e4],al        # 0x100053d05
   140053721:	(bad)  
   140053722:	add    al,BYTE PTR [rax]
   140053724:	add    BYTE PTR [rdi],al
   140053726:	add    al,BYTE PTR [rax]
   140053728:	sub    al,0x37
   14005372a:	add    eax,0x8100100
   14005372f:	add    BYTE PTR [rax],dl
   140053731:	push   rsp
   140053732:	or     BYTE PTR [rax],al
   140053734:	adc    BYTE PTR [rdi+rax*1],dh
   140053737:	add    BYTE PTR [rax],dl
   140053739:	ror    BYTE PTR [rsi],1
   14005373b:	ror    BYTE PTR [rax+rsi*2],0xb
   14005373f:	(bad)  
   140053740:	add    DWORD PTR [rsi],ebx
   140053742:	or     al,0x0
   140053744:	(bad)  
   140053745:	je     0x140053752
   140053747:	add    BYTE PTR [rsi],bl
   140053749:	or     al,BYTE PTR fs:[rax]
   14005374c:	(bad)  
   14005374d:	push   rsp
   14005374e:	or     DWORD PTR [rax],eax
   140053750:	(bad)  
   140053751:	xor    al,0x8
   140053753:	add    BYTE PTR [rsi],bl
   140053755:	xor    bl,BYTE PTR [rdx]
   140053757:	loopne 0x140053771
   140053759:	rcl    BYTE PTR [rsi],1
   14005375b:	rol    BYTE PTR [rcx],0x6
   14005375e:	add    al,BYTE PTR [rax]
   140053760:	(bad)  
   140053761:	xor    al,BYTE PTR [rdx]
   140053763:	xor    BYTE PTR [rcx],al
   140053765:	(bad)  
   140053766:	or     BYTE PTR [rax],al
   140053768:	(bad)  
   140053769:	lock adc al,0xe0
   14005376c:	adc    dl,al
   14005376e:	adc    al,al
   140053770:	(bad)  
   140053771:	jo     0x140053780
   140053773:	(bad)  
   140053774:	or     al,0x50
   140053776:	or     esi,DWORD PTR [rax]
   140053778:	add    DWORD PTR [rip+0x641d000b],ebx        # 0x1a4223789
   14005377e:	or     DWORD PTR [rax],eax
   140053780:	sbb    eax,0x1d000854
   140053785:	xor    al,0x7
   140053787:	add    BYTE PTR [rip+0x19e01bf0],bl        # 0x159e5537d
   14005378d:	rcl    BYTE PTR [rdi],1
   14005378f:	rcl    BYTE PTR [rip+0x1000070],0x1a        # 0x141053806
   140053796:	or     DWORD PTR [rax],eax
   140053798:	sbb    ah,BYTE PTR [rdx-0x1feb0fea]
   14005379e:	adc    dl,al
   1400537a0:	adc    al,al
   1400537a2:	(bad)  
   1400537a3:	jo     0x1400537b2
   1400537a5:	(bad)  
   1400537a6:	or     al,0x50
   1400537a8:	or     esi,DWORD PTR [rax]
   1400537aa:	add    BYTE PTR [rax],al
   1400537ac:	add    DWORD PTR [rdx],ebx
   1400537ae:	or     DWORD PTR [rax],eax
   1400537b0:	sbb    al,BYTE PTR [rdx-0x1feb0fea]
   1400537b6:	adc    dl,al
   1400537b8:	adc    al,al
   1400537ba:	(bad)  
   1400537bb:	jo     0x1400537ca
   1400537bd:	(bad)  
   1400537be:	or     al,0x50
   1400537c0:	or     esi,DWORD PTR [rax]
   1400537c2:	add    BYTE PTR [rax],al
   1400537c4:	add    DWORD PTR [rcx],ebp
   1400537c6:	add    al,0x0
   1400537c8:	sub    DWORD PTR [rsi+rax*1],esi
   1400537cb:	add    BYTE PTR [rsi],al
   1400537cd:	xor    al,BYTE PTR [rdx]
   1400537cf:	jo     0x1400537f2
   1400537d1:	add    BYTE PTR [rdx],al
   1400537d3:	add    BYTE PTR [rax],al
   1400537d5:	fs (bad) 
   1400537d7:	add    al,dl
   1400537d9:	cmp    BYTE PTR [rdx],al
   1400537db:	add    BYTE PTR [rcx],cl
   1400537dd:	cmp    DWORD PTR [rdx],eax
   1400537df:	add    al,bl
   1400537e1:	(bad)  
   1400537e2:	add    eax,0x2052100
   1400537e7:	add    BYTE PTR [rip+0xffffffffd0000664],al        # 0x110053e51
   1400537ed:	cmp    BYTE PTR [rdx],al
   1400537ef:	add    BYTE PTR [rcx],cl
   1400537f1:	cmp    DWORD PTR [rdx],eax
   1400537f3:	add    al,bl
   1400537f5:	(bad)  
   1400537f6:	add    eax,0x9150100
   1400537fb:	add    BYTE PTR [rip+0xff011c2],dl        # 0x14ff549c3
   140053801:	loopne 0x140053810
   140053803:	ror    BYTE PTR [rbx],1
   140053805:	ror    BYTE PTR [rcx],0x70
   140053808:	or     BYTE PTR [rax+0x7],ah
   14005380b:	push   rax
   14005380c:	(bad)  
   14005380d:	xor    BYTE PTR [rax],al
   14005380f:	add    BYTE PTR [rcx],ah
   140053811:	add    BYTE PTR [rax],al
   140053813:	add    BYTE PTR [rax+0x43],ah
   140053816:	add    al,BYTE PTR [rax]
   140053818:	xchg   BYTE PTR [rbx+0x2],al
   14005381b:	add    BYTE PTR [rax+0x38],cl
   14005381e:	add    eax,0x2002100
   140053823:	add    BYTE PTR [rax],al
   140053825:	je     0x14005382d
   140053827:	add    BYTE PTR [rax+0x43],ah
   14005382a:	add    al,BYTE PTR [rax]
   14005382c:	xchg   BYTE PTR [rbx+0x2],al
   14005382f:	add    BYTE PTR [rax+0x38],cl
   140053832:	add    eax,0x2052100
   140053837:	add    BYTE PTR [rip+0x60000674],al        # 0x1a0053eb1
   14005383d:	rex.XB add al,BYTE PTR [r8]
   140053840:	xchg   BYTE PTR [rbx+0x2],al
   140053843:	add    BYTE PTR [rax+0x38],cl
   140053846:	add    eax,0x40a0100
   14005384b:	add    BYTE PTR [rdx],cl
   14005384d:	xor    al,0x7
   14005384f:	add    BYTE PTR [rdx],cl
   140053851:	xor    al,BYTE PTR [rsi]
   140053853:	(bad)  
   140053854:	and    DWORD PTR [rax],eax
   140053856:	add    BYTE PTR [rax],al
   140053858:	add    BYTE PTR [rdx+rax*1+0x0],al
   14005385c:	(bad)  
   14005385d:	add    r8b,BYTE PTR [rax]
   140053860:	rex.W cmp BYTE PTR [rip+0x2052100],al        # 0x1420a5967
   140053867:	add    BYTE PTR [rip+0x674],al        # 0x140053ee1
   14005386d:	add    r8b,BYTE PTR [rax]
   140053870:	(bad)  
   140053871:	add    r8b,BYTE PTR [rax]
   140053874:	rex.W cmp BYTE PTR [rip+0x8340100],al        # 0x14839397b
   14005387b:	add    BYTE PTR [rsp+riz*2],dh
   14005387e:	or     BYTE PTR [rax],al
   140053880:	sub    BYTE PTR [rdi+rax*1+0x0],dl
   140053884:	and    esi,DWORD PTR [rsi+rax*1]
   140053887:	add    BYTE PTR [rsi],al
   140053889:	xor    al,BYTE PTR [rdx]
   14005388b:	jo     0x1400538ae
   14005388d:	add    BYTE PTR [rax],al
   14005388f:	add    al,dh
   140053891:	add    r8b,BYTE PTR [rax]
   140053894:	rex.WXB
   140053895:	add    r8b,BYTE PTR [r8]
   140053898:	mov    esp,0x21000538
   14005389d:	adc    eax,0xf4150008
   1400538a2:	adc    al,BYTE PTR [rax]
   1400538a4:	adc    esp,esp
   1400538a6:	adc    eax,DWORD PTR [rax]
   1400538a8:	or     eax,0x4001474
   1400538ad:	xor    al,0x1c
   1400538af:	add    al,dh
   1400538b1:	add    r8b,BYTE PTR [rax]
   1400538b4:	rex.WXB
   1400538b5:	add    r8b,BYTE PTR [r8]
   1400538b8:	mov    esp,0x19000538
   1400538bd:	and    al,BYTE PTR [rsi]
   1400538bf:	add    BYTE PTR [rax],dl
   1400538c1:	add    DWORD PTR [rip+0x7d00900],edx        # 0x147d541c7
   1400538c7:	rol    BYTE PTR [rip+0xffffffff9c500460],0xb0        # 0xdc553d2e
   1400538ce:	add    al,BYTE PTR [rax]
   1400538d0:	mov    BYTE PTR [rax],al
   1400538d2:	add    BYTE PTR [rax],al
   1400538d4:	and    DWORD PTR [rax],eax
   1400538d6:	add    al,BYTE PTR [rax]
   1400538d8:	add    BYTE PTR [rdi+rax*1+0x0],ah
   1400538dc:	rcl    BYTE PTR [rax+0x2],0x0
   1400538e0:	std    
   1400538e1:	push   rax
   1400538e2:	add    al,BYTE PTR [rax]
   1400538e4:	cld    
   1400538e5:	cmp    BYTE PTR [rip+0x2052100],al        # 0x1420a59eb
   1400538eb:	add    BYTE PTR [rip+0xffffffffc0000764],al        # 0x100054055
   1400538f1:	push   rax
   1400538f2:	add    al,BYTE PTR [rax]
   1400538f4:	std    
   1400538f5:	push   rax
   1400538f6:	add    al,BYTE PTR [rax]
   1400538f8:	cld    
   1400538f9:	cmp    BYTE PTR [rip+0x40a0100],al        # 0x1440f39ff
   1400538ff:	add    BYTE PTR [rdx],cl
   140053901:	xor    al,0x8
   140053903:	add    BYTE PTR [rdx],cl
   140053905:	xor    al,BYTE PTR [rsi]
   140053907:	jo     0x14005390a
   140053909:	adc    al,0xa
   14005390b:	add    BYTE PTR [rsp+rsi*1],dl
   14005390e:	(bad)  
   14005390f:	add    BYTE PTR [rdx+rsi*1],dl
   140053912:	adc    al,dh
   140053914:	(bad)  
   140053915:	loopne 0x140053923
   140053917:	ror    BYTE PTR [rdx],1
   140053919:	ror    BYTE PTR [rax],0x70
   14005391c:	(bad)  
   14005391d:	(bad)  
   14005391e:	(bad)  
   14005391f:	push   rax
   140053920:	and    DWORD PTR [rax],eax
   140053922:	add    BYTE PTR [rax],al
   140053924:	rex push rsi
   140053926:	add    al,BYTE PTR [rax]
   140053928:	xchg   esi,eax
   140053929:	push   rsi
   14005392a:	add    al,BYTE PTR [rax]
   14005392c:	push   0x21000539
   140053931:	add    BYTE PTR [rsi],al
   140053933:	add    BYTE PTR [rax],al
   140053935:	hlt    
   140053936:	sub    BYTE PTR [rax],al
   140053938:	add    BYTE PTR [rcx+rbp*1+0x0],ah
   14005393c:	add    BYTE PTR [rbx+rsi*1],dh
   14005393f:	add    BYTE PTR [rax+0x56],al
   140053942:	add    al,BYTE PTR [rax]
   140053944:	xchg   esi,eax
   140053945:	push   rsi
   140053946:	add    al,BYTE PTR [rax]
   140053948:	push   0x21000539
   14005394d:	pop    rbx
   14005394e:	(bad)  
   14005394f:	add    BYTE PTR [rbx+0x64],bl
   140053952:	sub    DWORD PTR [rax],eax
   140053954:	cmp    al,0xf4
   140053956:	sub    BYTE PTR [rax],al
   140053958:	or     BYTE PTR [rbx+rsi*1],dh
   14005395b:	add    BYTE PTR [rax+0x56],al
   14005395e:	add    al,BYTE PTR [rax]
   140053960:	xchg   esi,eax
   140053961:	push   rsi
   140053962:	add    al,BYTE PTR [rax]
   140053964:	push   0x19000539
   140053969:	and    al,BYTE PTR [rdi]
   14005396b:	add    BYTE PTR [rax],dl
   14005396d:	add    DWORD PTR [rdx],ebp
   14005396f:	add    BYTE PTR [rcx],cl
   140053971:	loopne 0x14005397a
   140053973:	rol    BYTE PTR [rip+0x27003c0],1        # 0x142753d39
   140053979:	push   rax
   14005397a:	add    BYTE PTR [rax],al
   14005397c:	pushf  
   14005397d:	mov    al,0x2
   14005397f:	add    BYTE PTR [rax],dh
   140053981:	add    DWORD PTR [rax],eax
   140053983:	add    BYTE PTR [rcx],ah
   140053985:	add    BYTE PTR [rax],al
   140053987:	add    BYTE PTR [rax-0x59fffda8],dl
   14005398d:	pop    rax
   14005398e:	add    al,BYTE PTR [rax]
   140053990:	lods   al,BYTE PTR ds:[rsi]
   140053991:	cs add eax,0x2052100
   140053997:	add    BYTE PTR [rip+0xffffffff90000634],al        # 0xd0053fd1
   14005399d:	pop    rax
   14005399e:	add    al,BYTE PTR [rax]
   1400539a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400539a1:	pop    rax
   1400539a2:	add    al,BYTE PTR [rax]
   1400539a4:	lods   al,BYTE PTR ds:[rsi]
   1400539a5:	cs add eax,0xb291900
   1400539ab:	add    BYTE PTR [rdi],dl
   1400539ad:	xor    al,0x22
   1400539af:	add    BYTE PTR [rdi],dl
   1400539b1:	add    DWORD PTR [rax],ebx
   1400539b3:	add    BYTE PTR [rax],dl
   1400539b5:	lock (bad) 
   1400539b7:	loopne 0x1400539c5
   1400539b9:	ror    BYTE PTR [rdx],1
   1400539bb:	ror    BYTE PTR [rax],0x70
   1400539be:	(bad)  
   1400539bf:	(bad)  
   1400539c0:	(bad)  
   1400539c1:	push   rax
   1400539c2:	add    BYTE PTR [rax],al
   1400539c4:	pushf  
   1400539c5:	mov    al,0x2
   1400539c7:	add    BYTE PTR [rax+0x1000000],dh
   1400539cd:	(bad)  
   1400539ce:	or     al,0x0
   1400539d0:	(bad)  
   1400539d1:	hlt    
   1400539d2:	or     al,BYTE PTR [rax]
   1400539d4:	js     0x1400539aa
   1400539d6:	or     eax,DWORD PTR [rax]
   1400539d8:	jo     0x140053a3e
   1400539da:	adc    eax,DWORD PTR [rax]
   1400539dc:	or     al,0xb2
   1400539de:	or     al,ah
   1400539e0:	(bad)  
   1400539e1:	rol    BYTE PTR [rax+rsi*2],0x3
   1400539e5:	push   rax
   1400539e6:	add    dh,BYTE PTR [rax]
   1400539e8:	add    DWORD PTR [rdx],ebx
   1400539ea:	or     al,BYTE PTR [rax]
   1400539ec:	sbb    dh,BYTE PTR [rbx+rdx*1+0x0]
   1400539f0:	sbb    ah,BYTE PTR [rdx+rdx*1+0x0]
   1400539f4:	sbb    dl,BYTE PTR [rcx+rdx*1+0x0]
   1400539f8:	sbb    dh,BYTE PTR [rax+rdx*1]
   1400539fb:	add    BYTE PTR [rdx],bl
   1400539fd:	rcl    BYTE PTR [rsi],cl
   1400539ff:	rol    BYTE PTR [rcx],0x67
   140053a02:	or     eax,DWORD PTR [rax]
   140053a04:	addr32 hlt 
   140053a06:	(bad)  
   140053a07:	add    BYTE PTR [rdx+0x74],ah
   140053a0a:	or     BYTE PTR [rax],al
   140053a0c:	adc    al,BYTE PTR [rdx-0x2ff31ff2]
   140053a12:	or     al,al
   140053a14:	or     BYTE PTR [rax+0x7],ah
   140053a17:	push   rax
   140053a18:	(bad)  
   140053a19:	xor    BYTE PTR [rax],al
   140053a1b:	add    BYTE PTR [rcx],bl
   140053a1d:	sub    DWORD PTR [rbx],ecx
   140053a1f:	add    BYTE PTR [rdi],dl
   140053a21:	xor    al,0x20
   140053a23:	add    BYTE PTR [rdi],dl
   140053a25:	add    DWORD PTR [rsi],edx
   140053a27:	add    BYTE PTR [rax],dl
   140053a29:	lock (bad) 
   140053a2b:	loopne 0x140053a39
   140053a2d:	ror    BYTE PTR [rdx],1
   140053a2f:	ror    BYTE PTR [rax],0x70
   140053a32:	(bad)  
   140053a33:	(bad)  
   140053a34:	(bad)  
   140053a35:	push   rax
   140053a36:	add    BYTE PTR [rax],al
   140053a38:	pushf  
   140053a39:	mov    al,0x2
   140053a3b:	add    BYTE PTR [rax+0x1000000],ch
   140053a41:	adc    al,0xa
   140053a43:	add    BYTE PTR [rsp+rsi*1],dl
   140053a46:	lldt   WORD PTR [rdx+rdx*2]
   140053a4a:	adc    al,dh
   140053a4c:	(bad)  
   140053a4d:	loopne 0x140053a5b
   140053a4f:	ror    BYTE PTR [rdx],1
   140053a51:	ror    BYTE PTR [rax],0x70
   140053a54:	(bad)  
   140053a55:	(bad)  
   140053a56:	(bad)  
   140053a57:	push   rax
   140053a58:	and    DWORD PTR [rax],eax
   140053a5a:	add    BYTE PTR [rax],al
   140053a5c:	xor    BYTE PTR [rbp-0x7a1efffe],al
   140053a62:	add    al,BYTE PTR [rax]
   140053a64:	cmp    BYTE PTR [rdx],0x5
   140053a67:	add    BYTE PTR [rcx],ah
   140053a69:	or     eax,0x740d0004
   140053a6e:	or     BYTE PTR [rax],al
   140053a70:	or     BYTE PTR [rcx+rdx*1],dh
   140053a73:	add    BYTE PTR [rax],dh
   140053a75:	test   DWORD PTR [rdx],eax
   140053a77:	add    cl,ah
   140053a79:	test   DWORD PTR [rdx],eax
   140053a7b:	add    BYTE PTR [rax+0x1900053a],al
   140053a81:	sbb    al,BYTE PTR [rip+0x7820b00]        # 0x147874587
   140053a87:	rol    BYTE PTR [rip+0x26003c0],1        # 0x142653e4d
   140053a8d:	push   rax
   140053a8e:	add    BYTE PTR [rax],al
   140053a90:	pushf  
   140053a91:	mov    al,0x2
   140053a93:	add    BYTE PTR [rax],bh
   140053a95:	add    BYTE PTR [rax],al
   140053a97:	add    BYTE PTR [rcx],al
   140053a99:	cmp    ecx,DWORD PTR [rax]
   140053a9b:	add    BYTE PTR [rbx],bh
   140053a9d:	je     0x140053aa6
   140053a9f:	add    BYTE PTR [rdi],ch
   140053aa1:	xor    al,0x6
   140053aa3:	add    BYTE PTR [rdx],cl
   140053aa5:	push   rsp
   140053aa6:	or     DWORD PTR [rax],eax
   140053aa8:	or     dh,BYTE PTR [rdx]
   140053aaa:	(bad)  
   140053aab:	(bad)  
   140053aac:	and    DWORD PTR [rax],eax
   140053aae:	add    BYTE PTR [rax],al
   140053ab0:	lock xchg DWORD PTR [rdx],eax
   140053ab3:	add    BYTE PTR [rax+rcx*4],cl
   140053ab6:	add    al,BYTE PTR [rax]
   140053ab8:	fdivr  DWORD PTR [rdx]
   140053aba:	add    eax,0x61a2100
   140053abf:	add    BYTE PTR [rdx],bl
   140053ac1:	(bad)  
   140053ac2:	or     al,0x0
   140053ac4:	or     ah,BYTE PTR [rbx+rcx*1+0x0]
   140053ac8:	add    eax,0xf0000a34
   140053acd:	xchg   DWORD PTR [rdx],eax
   140053acf:	add    BYTE PTR [rax+rcx*4],cl
   140053ad2:	add    al,BYTE PTR [rax]
   140053ad4:	fdivr  DWORD PTR [rdx]
   140053ad6:	add    eax,0x4090100
   140053adb:	add    BYTE PTR [rcx],cl
   140053add:	push   rdx
   140053ade:	add    eax,0x27003c0
   140053ae3:	push   rax
   140053ae4:	and    DWORD PTR [rax],eax
   140053ae6:	add    BYTE PTR [rax],al
   140053ae8:	nop
   140053ae9:	mov    DWORD PTR [rdx],eax
   140053aeb:	add    BYTE PTR [rcx],ch
   140053aed:	mov    al,BYTE PTR [rdx]
   140053aef:	add    BYTE PTR [rbx+rdi*1],ch
   140053af2:	add    eax,0x6002100
   140053af7:	add    BYTE PTR [rax],al
   140053af9:	in     al,0x28
   140053afb:	add    BYTE PTR [rax],al
   140053afd:	je     0x140053b28
   140053aff:	add    BYTE PTR [rax],al
   140053b01:	sub    al,BYTE PTR fs:[rax]
   140053b04:	nop
   140053b05:	mov    DWORD PTR [rdx],eax
   140053b07:	add    BYTE PTR [rcx],ch
   140053b09:	mov    al,BYTE PTR [rdx]
   140053b0b:	add    BYTE PTR [rbx+rdi*1],ch
   140053b0e:	add    eax,0x6522100
   140053b13:	add    BYTE PTR [rdx+0x64],dl
   140053b16:	sub    al,BYTE PTR [rax]
   140053b18:	adc    ah,ah
   140053b1a:	sub    BYTE PTR [rax],al
   140053b1c:	or     BYTE PTR [rcx+rbp*1+0x0],dh
   140053b20:	nop
   140053b21:	mov    DWORD PTR [rdx],eax
   140053b23:	add    BYTE PTR [rcx],ch
   140053b25:	mov    al,BYTE PTR [rdx]
   140053b27:	add    BYTE PTR [rbx+rdi*1],ch
   140053b2a:	add    eax,0x6221900
   140053b2f:	add    BYTE PTR [rax],dl
   140053b31:	add    DWORD PTR [rbx],ebp
   140053b33:	add    BYTE PTR [rcx],cl
   140053b35:	rol    BYTE PTR [rdi],1
   140053b37:	rol    BYTE PTR [rip+0xffffffff9c300450],0xb0        # 0xdc353f8e
   140053b3e:	add    al,BYTE PTR [rax]
   140053b40:	cmp    BYTE PTR [rcx],al
   140053b42:	add    BYTE PTR [rax],al
   140053b44:	and    DWORD PTR [rax],eax
   140053b46:	add    BYTE PTR [rax],al
   140053b48:	ror    BYTE PTR [rdi-0x7034fffe],0x2
   140053b4f:	add    BYTE PTR [rax+0x3b],dh
   140053b52:	add    eax,0x61b2100
   140053b57:	add    BYTE PTR [rbx],bl
   140053b59:	(bad)  
   140053b5a:	add    al,0x0
   140053b5c:	or     al,0x74
   140053b5e:	or     al,BYTE PTR [rax]
   140053b60:	add    eax,0xc0000954
   140053b65:	pop    QWORD PTR [rdx]
   140053b67:	add    bl,cl
   140053b69:	pop    QWORD PTR [rdx]
   140053b6b:	add    BYTE PTR [rax+0x3b],dh
   140053b6e:	add    eax,0x3070100
   140053b73:	add    BYTE PTR [rdi],al
   140053b75:	rex.X add esp,DWORD PTR [rax+0x2]
   140053b79:	xor    BYTE PTR [rax],al
   140053b7b:	add    BYTE PTR [rcx],ah
   140053b7d:	add    BYTE PTR [rax],al
   140053b7f:	add    BYTE PTR [rax-0x70],ah
   140053b82:	add    al,BYTE PTR [rax]
   140053b84:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053b85:	nop
   140053b86:	add    al,BYTE PTR [rax]
   140053b88:	movabs al,ds:0x50002052100053b
   140053b91:	xor    al,0x2
   140053b93:	add    BYTE PTR [rax-0x70],ah
   140053b96:	add    al,BYTE PTR [rax]
   140053b98:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053b99:	nop
   140053b9a:	add    al,BYTE PTR [rax]
   140053b9c:	movabs al,ds:0x20001020100053b
   140053ba5:	jo     0x140053ba7
   140053ba7:	add    BYTE PTR [rcx],ah
   140053ba9:	add    BYTE PTR [rax],al
   140053bab:	add    BYTE PTR [rax-0x6f],dl
   140053bae:	add    al,BYTE PTR [rax]
   140053bb0:	jnp    0x140053b43
   140053bb2:	add    al,BYTE PTR [rax]
   140053bb4:	xor    BYTE PTR [rax*1+0xe002100],bh
   140053bbb:	add    BYTE PTR [rax],al
   140053bbd:	hlt    
   140053bbe:	or     BYTE PTR [rax],al
   140053bc0:	add    ah,dl
   140053bc2:	or     DWORD PTR [rax],eax
   140053bc4:	add    ah,al
   140053bc6:	or     al,BYTE PTR [rax]
   140053bc8:	add    BYTE PTR [rbx+rcx*1+0x0],dh
   140053bcc:	add    BYTE PTR [rsp+rcx*1+0x0],ah
   140053bd0:	add    BYTE PTR [rbp+rcx*1+0x0],dl
   140053bd4:	add    BYTE PTR [rcx+rdx*1],dh
   140053bd7:	add    BYTE PTR [rax-0x6f],dl
   140053bda:	add    al,BYTE PTR [rax]
   140053bdc:	jnp    0x140053b6f
   140053bde:	add    al,BYTE PTR [rax]
   140053be0:	xor    BYTE PTR [rax*1+0x2100],bh
   140053be7:	add    BYTE PTR [rbx-0x6f],bh
   140053bea:	add    al,BYTE PTR [rax]
   140053bec:	cld    
   140053bed:	xchg   ecx,eax
   140053bee:	add    al,BYTE PTR [rax]
   140053bf0:	or     al,0x3c
   140053bf2:	add    eax,0x40d2100
   140053bf7:	add    BYTE PTR [rip+0x5000ac4],cl        # 0x1450546c1
   140053bfd:	push   rsp
   140053bfe:	or     eax,0x2917b00
   140053c03:	add    ah,bh
   140053c05:	xchg   ecx,eax
   140053c06:	add    al,BYTE PTR [rax]
   140053c08:	or     al,0x3c
   140053c0a:	add    eax,0xa192100
   140053c0f:	add    BYTE PTR [rcx],bl
   140053c11:	hlt    
   140053c12:	or     BYTE PTR [rax],al
   140053c14:	adc    eax,0xe0009d4
   140053c19:	je     0x140053c26
   140053c1b:	add    BYTE PTR [rdx],cl
   140053c1d:	fs or  al,0x0
   140053c20:	add    al,0x34
   140053c22:	adc    DWORD PTR [rax],eax
   140053c24:	push   rax
   140053c25:	xchg   ecx,eax
   140053c26:	add    al,BYTE PTR [rax]
   140053c28:	jnp    0x140053bbb
   140053c2a:	add    al,BYTE PTR [rax]
   140053c2c:	xor    BYTE PTR [rax*1+0x20d0100],bh
   140053c33:	add    BYTE PTR [rip+0x1e009d2],cl        # 0x141e5460b
   140053c39:	add    al,0x1
   140053c3b:	add    BYTE PTR [rdx+rax*4],al
   140053c3e:	add    BYTE PTR [rax],al
   140053c40:	add    DWORD PTR [rax],ebx
   140053c42:	or     al,BYTE PTR [rax]
   140053c44:	sbb    BYTE PTR [rcx+rdx*1+0x0],ah
   140053c48:	sbb    BYTE PTR [rax+rdx*1+0x0],dl
   140053c4c:	sbb    BYTE PTR [rdi+rcx*1],dh
   140053c4f:	add    BYTE PTR [rax],bl
   140053c51:	xchg   edx,eax
   140053c52:	adc    al,0xd0
   140053c54:	adc    al,al
   140053c56:	adc    BYTE PTR [rax+0x21],dh
   140053c59:	add    BYTE PTR [rax],al
   140053c5b:	add    BYTE PTR [rax-0x49fffd6b],dl
   140053c61:	xchg   ebp,eax
   140053c62:	add    al,BYTE PTR [rax]
   140053c64:	mov    al,0x3c
   140053c66:	add    eax,0x2100
   140053c6b:	add    BYTE PTR [rsi-0x29fffd6b],dh
   140053c71:	xchg   ebp,eax
   140053c72:	add    al,BYTE PTR [rax]
   140053c74:	cwde   
   140053c75:	cmp    al,0x5
   140053c77:	add    BYTE PTR [rcx],ah
   140053c79:	(bad)  
   140053c7a:	or     BYTE PTR [rax],al
   140053c7c:	(bad)  
   140053c7d:	(bad)  
   140053c7e:	(bad)  
   140053c7f:	add    BYTE PTR [rdi],cl
   140053c81:	(bad)  
   140053c82:	or     BYTE PTR [rax],al
   140053c84:	or     ah,BYTE PTR [rsi+rcx*1+0x0]
   140053c88:	add    eax,0xb6000c54
   140053c8d:	xchg   ebp,eax
   140053c8e:	add    al,BYTE PTR [rax]
   140053c90:	(bad)  
   140053c91:	xchg   ebp,eax
   140053c92:	add    al,BYTE PTR [rax]
   140053c94:	cwde   
   140053c95:	cmp    al,0x5
   140053c97:	add    BYTE PTR [rcx],ah
   140053c99:	or     al,BYTE PTR [rax+rax*1]
   140053c9c:	or     ah,ah
   140053c9e:	(bad)  
   140053c9f:	add    BYTE PTR [rip+0xffffffff90000f74],al        # 0xd0054c19
   140053ca5:	xchg   ebp,eax
   140053ca6:	add    al,BYTE PTR [rax]
   140053ca8:	mov    dh,0x95
   140053caa:	add    al,BYTE PTR [rax]
   140053cac:	mov    al,0x3c
   140053cae:	add    eax,0x30c0100
   140053cb3:	add    BYTE PTR [rdx+rax*4],cl
   140053cb6:	or     al,dh
   140053cb8:	(bad)  
   140053cb9:	xor    BYTE PTR [rax],al
   140053cbb:	add    BYTE PTR [rcx],ah
   140053cbd:	add    BYTE PTR [rax],al
   140053cbf:	add    al,ah
   140053cc1:	xchg   esi,eax
   140053cc2:	add    al,BYTE PTR [rax]
   140053cc4:	adc    DWORD PTR [rdi+0x3d9c0002],0x5
   140053ccb:	add    BYTE PTR [rcx],ah
   140053ccd:	add    eax,0x64050002
   140053cd2:	verr   ax
   140053cd5:	xchg   esi,eax
   140053cd6:	add    al,BYTE PTR [rax]
   140053cd8:	adc    DWORD PTR [rdi+0x3d9c0002],0x5
   140053cdf:	add    BYTE PTR [rcx],ah
   140053ce1:	add    BYTE PTR [rsi],cl
   140053ce3:	add    BYTE PTR [rax],al
   140053ce5:	hlt    
   140053ce6:	(bad)  
   140053ce7:	add    BYTE PTR [rax],al
   140053ce9:	in     al,0x7
   140053ceb:	add    BYTE PTR [rax],al
   140053ced:	(bad)  
   140053cee:	or     BYTE PTR [rax],al
   140053cf0:	add    ah,al
   140053cf2:	or     DWORD PTR [rax],eax
   140053cf4:	add    BYTE PTR [rdx+rcx*1+0x0],dh
   140053cf8:	add    BYTE PTR [rbx+rcx*1+0x0],ah
   140053cfc:	add    BYTE PTR [rdi+rcx*1+0x0],dl
   140053d00:	jo     0x140053c9b
   140053d02:	add    al,BYTE PTR [rax]
   140053d04:	loopne 0x140053c9f
   140053d06:	add    al,BYTE PTR [rax]
   140053d08:	cmp    BYTE PTR [rip+0x23210005],bh        # 0x163263d13
   140053d0e:	(bad)  
   140053d0f:	add    BYTE PTR [rbx],ah
   140053d11:	hlt    
   140053d12:	(bad)  
   140053d13:	add    BYTE PTR [rsi],bl
   140053d15:	in     al,0x7
   140053d17:	add    BYTE PTR [rcx],bl
   140053d19:	(bad)  
   140053d1a:	or     BYTE PTR [rax],al
   140053d1c:	adc    al,0xc4
   140053d1e:	or     DWORD PTR [rax],eax
   140053d20:	pcmpeqb mm1,QWORD PTR [rdx]
   140053d23:	add    BYTE PTR [rdx],cl
   140053d25:	or     eax,DWORD PTR fs:[rax]
   140053d28:	add    eax,0x70000f54
   140053d2d:	cdq    
   140053d2e:	add    al,BYTE PTR [rax]
   140053d30:	loopne 0x140053ccb
   140053d32:	add    al,BYTE PTR [rax]
   140053d34:	cmp    BYTE PTR [rip+0xa010005],bh        # 0x14a063d3f
   140053d3a:	add    al,BYTE PTR [rax]
   140053d3c:	or     dh,BYTE PTR [rdx+0x1c193006]
   140053d42:	(bad)  
   140053d43:	add    BYTE PTR [rip+0x7d009e2],cl        # 0x147d5472b
   140053d49:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436541c0
   140053d50:	add    dh,BYTE PTR [rax]
   140053d52:	add    BYTE PTR [rax],al
   140053d54:	pushf  
   140053d55:	mov    al,0x2
   140053d57:	add    BYTE PTR [rax+0x0],ah
   140053d5a:	add    BYTE PTR [rax],al
   140053d5c:	add    DWORD PTR [rax+rcx*1],edx
   140053d5f:	add    BYTE PTR [rsp+riz*2],dl
   140053d62:	lldt   WORD PTR [rsp+rdx*2]
   140053d66:	(bad)  
   140053d67:	add    BYTE PTR [rsp+rsi*1],dl
   140053d6a:	or     eax,0x10921400
   140053d6f:	jo     0x140053d72
   140053d71:	(bad)  
   140053d72:	add    al,BYTE PTR [rax]
   140053d74:	(bad)  
   140053d75:	mov    dl,0x2
   140053d77:	xor    BYTE PTR [rcx],ah
   140053d79:	add    BYTE PTR [rax],al
   140053d7b:	add    BYTE PTR [rax],dl
   140053d7d:	lahf   
   140053d7e:	add    al,BYTE PTR [rax]
   140053d80:	(bad)  
   140053d81:	lahf   
   140053d82:	add    al,BYTE PTR [rax]
   140053d84:	pushf  
   140053d85:	cmp    eax,0x5210005
   140053d8a:	add    al,BYTE PTR [rax]
   140053d8c:	add    eax,0x10000f64
   140053d91:	lahf   
   140053d92:	add    al,BYTE PTR [rax]
   140053d94:	(bad)  
   140053d95:	lahf   
   140053d96:	add    al,BYTE PTR [rax]
   140053d98:	pushf  
   140053d99:	cmp    eax,0x13010005
   140053d9e:	or     BYTE PTR [rax],al
   140053da0:	adc    edx,DWORD PTR [rcx+rdx*1+0x0]
   140053da4:	adc    esi,DWORD PTR [rax+rdx*1]
   140053da7:	add    BYTE PTR [rbx],dl
   140053da9:	xchg   edx,eax
   140053daa:	(bad)  
   140053dac:	or     eax,0x1700bc0
   140053db1:	sbb    eax,DWORD PTR [rsi]
   140053db3:	add    BYTE PTR [rbx],bl
   140053db5:	xor    al,0x14
   140053db7:	add    BYTE PTR [rbx],bl
   140053db9:	rcl    BYTE PTR [rdi],cl
   140053dbb:	jo     0x140053dd3
   140053dbd:	(bad)  
   140053dbe:	adc    eax,0x2150
   140053dc3:	add    BYTE PTR [rax+0x70002a2],dh
   140053dc9:	movabs ds:0x2100053e180002,eax
   140053dd2:	add    BYTE PTR [rax],al
   140053dd4:	(bad)  
   140053dd5:	movabs ds:0x3df80002a3840002,eax
   140053dde:	add    eax,0x4102100
   140053de3:	add    BYTE PTR [rax],dl
   140053de5:	in     al,0x1b
   140053de7:	add    BYTE PTR [rax],cl
   140053de9:	je     0x140053e08
   140053deb:	add    BYTE PTR [rdi],al
   140053ded:	movabs ds:0x3df80002a3840002,eax
   140053df6:	add    eax,0x8162100
   140053dfb:	add    BYTE PTR [rsi],dl
   140053dfd:	hlt    
   140053dfe:	sbb    al,BYTE PTR [rax]
   140053e00:	adc    al,ah
   140053e02:	sbb    al,0x0
   140053e04:	or     BYTE PTR [rsi+rbx*1+0x0],dl
   140053e08:	add    al,0x34
   140053e0a:	and    eax,0x2a2b000
   140053e0f:	add    BYTE PTR [rdi],al
   140053e11:	movabs ds:0x1f1900053e180002,eax
   140053e1a:	add    al,0x0
   140053e1c:	or     eax,0x6001f01
   140053e21:	rol    BYTE PTR [rax+riz*2],1
   140053e24:	pushf  
   140053e25:	mov    al,0x2
   140053e27:	add    al,cl
   140053e29:	add    BYTE PTR [rax],al
   140053e2b:	add    BYTE PTR [rcx],al
   140053e2d:	clts   
   140053e2f:	add    BYTE PTR [rdi],cl
   140053e31:	je     0x140053e36
   140053e33:	add    BYTE PTR [rdx],cl
   140053e35:	add    al,BYTE PTR fs:[rax]
   140053e38:	add    eax,0x1000134
   140053e3d:	adc    al,0x8
   140053e3f:	add    BYTE PTR [rsp+rsi*2],dl
   140053e42:	add    al,0x0
   140053e44:	pcmpgtb mm0,QWORD PTR [rbx]
   140053e47:	add    BYTE PTR [rdx],cl
   140053e49:	push   rsp
   140053e4a:	add    al,BYTE PTR [rax]
   140053e4c:	add    eax,0x11000134
   140053e51:	sbb    DWORD PTR [rdx],ecx
   140053e53:	add    BYTE PTR [rcx],bl
   140053e55:	(bad)  
   140053e56:	or     al,0x0
   140053e58:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   140053e5c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140053e60:	sbb    DWORD PTR [rdx+0x15],edx
   140053e63:	lock adc esp,eax
   140053e66:	adc    eax,edx
   140053e68:	loopne 0x140053e63
   140053e6a:	add    al,BYTE PTR [rax]
   140053e6c:	add    al,BYTE PTR [rax]
   140053e6e:	add    BYTE PTR [rax],al
   140053e70:	out    dx,eax
   140053e71:	stos   BYTE PTR es:[rdi],al
   140053e72:	add    al,BYTE PTR [rax]
   140053e74:	xor    eax,0x500002ab
   140053e79:	mov    BYTE PTR [rbx],0x0
   140053e7c:	add    BYTE PTR [rax],al
   140053e7e:	add    BYTE PTR [rax],al
   140053e80:	mov    dh,0xaa
   140053e82:	add    al,BYTE PTR [rax]
   140053e84:	push   rdx
   140053e85:	stos   DWORD PTR es:[rdi],eax
   140053e86:	add    al,BYTE PTR [rax]
   140053e88:	add    dh,0x3
   140053e8b:	add    BYTE PTR [rax],al
   140053e8d:	add    BYTE PTR [rax],al
   140053e8f:	add    BYTE PTR [rcx],dl
   140053e91:	(bad)  
   140053e93:	add    BYTE PTR [rdi],cl
   140053e95:	xor    al,0x7
   140053e97:	add    BYTE PTR [rdi],cl
   140053e99:	xor    cl,BYTE PTR [rbx]
   140053e9b:	jo     0x140053e7d
   140053e9d:	stc    
   140053e9e:	add    al,BYTE PTR [rax]
   140053ea0:	add    DWORD PTR [rax],eax
   140053ea2:	add    BYTE PTR [rax],al
   140053ea4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053ea5:	stos   DWORD PTR es:[rdi],eax
   140053ea6:	add    al,BYTE PTR [rax]
   140053ea8:	scas   al,BYTE PTR es:[rdi]
   140053ea9:	stos   DWORD PTR es:[rdi],eax
   140053eaa:	add    al,BYTE PTR [rax]
   140053eac:	cdq    
   140053ead:	mov    BYTE PTR [rbx],0x0
   140053eb0:	add    BYTE PTR [rax],al
   140053eb2:	add    BYTE PTR [rax],al
   140053eb4:	add    DWORD PTR [rdi],eax
   140053eb6:	add    al,BYTE PTR [rax]
   140053eb8:	(bad)  
   140053eb9:	add    DWORD PTR [rbp+0x51c1100],esi
   140053ebf:	add    BYTE PTR [rdx+riz*2],bl
   140053ec2:	sbb    al,al
   140053ec4:	(bad)  
   140053ec5:	jo     0x140053edc
   140053ec7:	(bad)  
   140053ec8:	adc    al,0x30
   140053eca:	add    BYTE PTR [rax],al
   140053ecc:	loopne 0x140053ec7
   140053ece:	add    al,BYTE PTR [rax]
   140053ed0:	add    DWORD PTR [rax],eax
   140053ed2:	add    BYTE PTR [rax],al
   140053ed4:	sub    al,0xaf
   140053ed6:	add    al,BYTE PTR [rax]
   140053ed8:	stc    
   140053ed9:	scas   eax,DWORD PTR es:[rdi]
   140053eda:	add    al,BYTE PTR [rax]
   140053edc:	mov    cl,0xc6
   140053ede:	add    eax,DWORD PTR [rax]
   140053ee0:	add    BYTE PTR [rax],al
   140053ee2:	add    BYTE PTR [rax],al
   140053ee4:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4223ef6
   140053eea:	adc    DWORD PTR [rax],eax
   140053eec:	sbb    eax,0x1d001064
   140053ef1:	push   rsp
   140053ef2:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d054d2d
   140053ef9:	xchg   edx,eax
   140053efa:	sbb    eax,esp
   140053efc:	(bad)  
   140053efd:	rcl    BYTE PTR [rip+0x40a09c0],1        # 0x1440f48c3
   140053f03:	add    BYTE PTR [rdx],cl
   140053f05:	xor    al,0x9
   140053f07:	add    BYTE PTR [rdx],cl
   140053f09:	push   rdx
   140053f0a:	(bad)  
   140053f0b:	jo     0x140053eed
   140053f0d:	stc    
   140053f0e:	add    al,BYTE PTR [rax]
   140053f10:	add    DWORD PTR [rax],eax
   140053f12:	add    BYTE PTR [rax],al
   140053f14:	mov    bl,0xb8
   140053f16:	add    al,BYTE PTR [rax]
   140053f18:	rex.WRXB movabs r9,0xb94f0003c6c90002
   140053f22:	add    al,BYTE PTR [rax]
   140053f24:	add    DWORD PTR [rdx],ecx
   140053f26:	add    al,0x0
   140053f28:	or     dh,BYTE PTR [rdx+rcx*1]
   140053f2b:	add    BYTE PTR [rdx],cl
   140053f2d:	jb     0x140053f35
   140053f2f:	jo     0x140053f4a
   140053f31:	sub    DWORD PTR [rbx],ecx
   140053f33:	push   rbp
   140053f34:	sbb    esi,DWORD PTR [rdx+rdx*1+0x0]
   140053f38:	(bad)  
   140053f39:	adc    DWORD PTR fs:[rax],eax
   140053f3c:	adc    esi,DWORD PTR [rax+rdx*1]
   140053f3f:	add    BYTE PTR [rdi],cl
   140053f41:	push   rbx
   140053f42:	or     dh,BYTE PTR [rdx-0x3ffb2ffa]
   140053f48:	add    dl,BYTE PTR [rax+0x0]
   140053f4b:	add    BYTE PTR [rax+rsi*4+0x500002],bl
   140053f52:	add    BYTE PTR [rax],al
   140053f54:	add    DWORD PTR [rip+0x64150006],edx        # 0x1a41a3f60
   140053f5a:	lldt   WORD PTR [rip+0x15000e34]        # 0x155054d95
   140053f61:	mov    dl,0x11
   140053f63:	jo     0x140053f7e
   140053f65:	adc    eax,0x92060002
   140053f6a:	add    dh,BYTE PTR [rax]
   140053f6c:	pushf  
   140053f6d:	mov    al,0x2
   140053f6f:	add    BYTE PTR [rax+0x0],al
   140053f72:	add    BYTE PTR [rax],al
   140053f74:	sbb    DWORD PTR [rdx],ebx
   140053f76:	(bad)  
   140053f77:	add    BYTE PTR [rbx],cl
   140053f79:	rol    BYTE PTR [rdi],cl
   140053f7b:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436543f2
   140053f82:	add    dh,BYTE PTR [rax]
   140053f84:	pushf  
   140053f85:	mov    al,0x2
   140053f87:	add    BYTE PTR [rax+0x0],ch
   140053f8a:	add    BYTE PTR [rax],al
   140053f8c:	add    DWORD PTR [rcx],esp
   140053f8e:	or     al,BYTE PTR [rax]
   140053f90:	and    DWORD PTR [rcx+rbx*1],esi
   140053f93:	add    BYTE PTR [rcx],ah
   140053f95:	repnz sbb dh,al
   140053f98:	sbb    al,ah
   140053f9a:	(bad)  
   140053f9b:	rcl    BYTE PTR [rax+rax*8],1
   140053f9e:	adc    dh,BYTE PTR [rax+0x11]
   140053fa1:	(bad)  
   140053fa2:	adc    BYTE PTR [rax+0x11],dl
   140053fa5:	adc    al,0x3
   140053fa7:	add    BYTE PTR [rdx+riz*4],dl
   140053faa:	adc    BYTE PTR [rax+0xf],dh
   140053fad:	(bad)  
   140053fae:	add    BYTE PTR [rax],al
   140053fb0:	loopne 0x140053fab
   140053fb2:	add    al,BYTE PTR [rax]
   140053fb4:	add    DWORD PTR [rax],eax
   140053fb6:	add    BYTE PTR [rax],al
   140053fb8:	mov    ebx,eax
   140053fba:	add    al,BYTE PTR [rax]
   140053fbc:	mov    eax,0xe50002d8
   140053fc1:	mov    BYTE PTR [rbx],0x0
   140053fc4:	add    BYTE PTR [rax],al
   140053fc6:	add    BYTE PTR [rax],al
   140053fc8:	add    DWORD PTR [rdi],ecx
   140053fca:	(bad)  
   140053fcb:	add    BYTE PTR [rdi],cl
   140053fcd:	push   rsp
   140053fce:	(bad)  
   140053fcf:	add    BYTE PTR [rdi],cl
   140053fd1:	xor    al,0x6
   140053fd3:	add    BYTE PTR [rdi],cl
   140053fd5:	xor    cl,BYTE PTR [rbx]
   140053fd7:	jo     0x140053fea
   140053fd9:	sbb    DWORD PTR [rdx],ecx
   140053fdb:	add    BYTE PTR [rcx],bl
   140053fdd:	(bad)  
   140053fde:	or     DWORD PTR [rax],eax
   140053fe0:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140053fe4:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140053fe8:	sbb    DWORD PTR [rsi+rax*1],esi
   140053feb:	add    BYTE PTR [rcx],bl
   140053fed:	xor    dl,BYTE PTR [rip+0x2f9e0d0]        # 0x142ff20c3
   140053ff3:	add    BYTE PTR [rcx],al
   140053ff5:	add    BYTE PTR [rax],al
   140053ff7:	add    BYTE PTR [rbx-0x44fffd24],bl
   140053ffd:	fadd   QWORD PTR [rdx]
   140053fff:	add    BYTE PTR [rcx],dh
   140054001:	mov    DWORD PTR [rbx],0x0
   140054007:	add    BYTE PTR [rcx],dl
   140054009:	sbb    DWORD PTR [rdx],ecx
   14005400b:	add    BYTE PTR [rcx],bl
   14005400d:	(bad)  
   14005400e:	(bad)  
   14005400f:	add    BYTE PTR [rcx],bl
   140054011:	je     0x140054020
   140054013:	add    BYTE PTR [rcx],bl
   140054015:	xor    al,0xc
   140054017:	add    BYTE PTR [rcx],bl
   140054019:	jb     0x140054030
   14005401b:	lock adc esp,eax
   14005401e:	adc    eax,edx
   140054020:	loopne 0x14005401b
   140054022:	add    al,BYTE PTR [rax]
   140054024:	add    al,BYTE PTR [rax]
   140054026:	add    BYTE PTR [rax],al
   140054028:	mov    ebp,0xe30002dd
   14005402d:	fld    QWORD PTR [rdx]
   14005402f:	add    BYTE PTR [rdx-0x39],cl
   140054032:	add    eax,DWORD PTR [rax]
   140054034:	add    BYTE PTR [rax],al
   140054036:	add    BYTE PTR [rax],al
   140054038:	fld    QWORD PTR fs:[rdx]
   14005403b:	add    BYTE PTR [rip+0x6a0002df],dl        # 0x1aa054320
   140054041:	mov    DWORD PTR [rbx],0x0
   140054047:	add    BYTE PTR [rcx],al
   140054049:	or     al,BYTE PTR [rax+rax*1]
   14005404c:	or     dl,BYTE PTR [rcx+rdx*1+0x0]
   140054050:	or     dl,dl
   140054052:	(bad)  
   140054053:	jo     0x140054056
   140054055:	(bad)  
   140054056:	add    al,BYTE PTR [rax]
   140054058:	(bad)  
   140054059:	jb     0x14005405d
   14005405b:	push   rax
   14005405c:	adc    DWORD PTR [rdx],edx
   14005405e:	or     BYTE PTR [rax],al
   140054060:	adc    dl,BYTE PTR [rdx-0x1ff30ff2]
   140054066:	or     dl,al
   140054068:	or     al,al
   14005406a:	(bad)  
   14005406b:	jo     0x140054072
   14005406d:	(bad)  
   14005406e:	add    al,0x30
   140054070:	loopne 0x14005406b
   140054072:	add    al,BYTE PTR [rax]
   140054074:	add    DWORD PTR [rax],eax
   140054076:	add    BYTE PTR [rax],al
   140054078:	(bad)  
   14005407a:	add    al,BYTE PTR [rax]
   14005407c:	mov    esp,0x830002e5
   140054081:	mov    DWORD PTR [rbx],0x0
   140054087:	add    BYTE PTR [rcx],al
   140054089:	adc    cl,BYTE PTR [rax]
   14005408b:	add    BYTE PTR [rdx],dl
   14005408d:	push   rsp
   14005408e:	or     al,0x0
   140054090:	adc    dh,BYTE PTR [rbx+rcx*1]
   140054093:	add    BYTE PTR [rdx],dl
   140054095:	push   rdx
   140054096:	(bad)  
   140054097:	ror    BYTE PTR [rax+rsi*2],0xb
   14005409b:	(bad)  
   14005409c:	adc    DWORD PTR [rcx+rax*1],eax
   14005409f:	add    BYTE PTR [rdx+rax*2],al
   1400540a2:	add    BYTE PTR [rax],al
   1400540a4:	loopne 0x14005409f
   1400540a6:	add    al,BYTE PTR [rax]
   1400540a8:	add    DWORD PTR [rax],eax
   1400540aa:	add    BYTE PTR [rax],al
   1400540ac:	mov    esp,0xd00002ec
   1400540b1:	in     al,dx
   1400540b2:	add    al,BYTE PTR [rax]
   1400540b4:	pushf  
   1400540b5:	mov    DWORD PTR [rbx],0x0
   1400540bb:	add    BYTE PTR [rcx],dl
   1400540bd:	(bad)  
   1400540be:	add    al,BYTE PTR [rax]
   1400540c0:	(bad)  
   1400540c1:	xor    al,BYTE PTR [rdx]
   1400540c3:	xor    al,ah
   1400540c5:	stc    
   1400540c6:	add    al,BYTE PTR [rax]
   1400540c8:	add    DWORD PTR [rax],eax
   1400540ca:	add    BYTE PTR [rax],al
   1400540cc:	hlt    
   1400540cd:	in     al,dx
   1400540ce:	add    al,BYTE PTR [rax]
   1400540d0:	(bad)  
   1400540d1:	in     al,dx
   1400540d2:	add    al,BYTE PTR [rax]
   1400540d4:	pushf  
   1400540d5:	mov    DWORD PTR [rbx],0x0
   1400540db:	add    BYTE PTR [rcx],dl
   1400540dd:	(bad)  
   1400540de:	add    al,BYTE PTR [rax]
   1400540e0:	(bad)  
   1400540e1:	push   rdx
   1400540e2:	add    dh,BYTE PTR [rax]
   1400540e4:	loopne 0x1400540df
   1400540e6:	add    al,BYTE PTR [rax]
   1400540e8:	add    DWORD PTR [rax],eax
   1400540ea:	add    BYTE PTR [rax],al
   1400540ec:	adc    eax,0x200002ef
   1400540f1:	out    dx,eax
   1400540f2:	add    al,BYTE PTR [rax]
   1400540f4:	mov    ch,0xc7
   1400540f6:	add    eax,DWORD PTR [rax]
   1400540f8:	add    BYTE PTR [rax],al
   1400540fa:	add    BYTE PTR [rax],al
   1400540fc:	add    DWORD PTR [rdx+rax*1],edx
   1400540ff:	add    BYTE PTR [rdx+rsi*4],dl
   140054102:	adc    BYTE PTR [rax],dh
   140054104:	sbb    DWORD PTR [rdi],ebp
   140054106:	or     eax,DWORD PTR [rax]
   140054108:	sbb    eax,0x1d037134
   14005410d:	add    DWORD PTR [rsi+0x3],esp
   140054110:	adc    al,dh
   140054112:	(bad)  
   140054113:	loopne 0x140054121
   140054115:	ror    BYTE PTR [rdx],1
   140054117:	ror    BYTE PTR [rax],0x70
   14005411a:	(bad)  
   14005411b:	(bad)  
   14005411c:	(bad)  
   14005411d:	push   rax
   14005411e:	add    BYTE PTR [rax],al
   140054120:	pushf  
   140054121:	mov    al,0x2
   140054123:	add    BYTE PTR [rax],ah
   140054125:	sbb    eax,DWORD PTR [rax]
   140054127:	add    BYTE PTR [rcx],dl
   140054129:	sbb    ecx,DWORD PTR [rdx]
   14005412b:	add    BYTE PTR [rbx],bl
   14005412d:	fs (bad) 
   14005412f:	add    BYTE PTR [rbx],bl
   140054131:	xor    al,0xd
   140054133:	add    BYTE PTR [rbx],bl
   140054135:	push   rdx
   140054136:	(bad)  
   140054137:	lock adc eax,0x11d013e0
   14005413d:	ror    BYTE PTR [rdi],0x70
   140054140:	loopne 0x14005413b
   140054142:	add    al,BYTE PTR [rax]
   140054144:	add    DWORD PTR [rax],eax
   140054146:	add    BYTE PTR [rax],al
   140054148:	rex.WR clc 
   14005414a:	add    al,BYTE PTR [rax]
   14005414c:	jge    0x140054146
   14005414e:	add    al,BYTE PTR [rax]
   140054150:	lods   al,BYTE PTR ds:[rsi]
   140054151:	enter  0x3,0x0
   140054155:	add    BYTE PTR [rax],al
   140054157:	add    BYTE PTR [rcx],dl
   140054159:	adc    DWORD PTR [rsi],eax
   14005415b:	add    BYTE PTR [rcx],dl
   14005415d:	xor    al,0xc
   14005415f:	add    BYTE PTR [rcx],dl
   140054161:	push   rdx
   140054162:	or     eax,0xa700bc0
   140054167:	(bad)  
   140054168:	loopne 0x140054163
   14005416a:	add    al,BYTE PTR [rax]
   14005416c:	add    DWORD PTR [rax],eax
   14005416e:	add    BYTE PTR [rax],al
   140054170:	pop    rdi
   140054171:	stc    
   140054172:	add    al,BYTE PTR [rax]
   140054174:	movabs ds:0x3c8c30002f9,eax
   14005417d:	add    BYTE PTR [rax],al
   14005417f:	add    BYTE PTR [rcx],al
   140054181:	and    BYTE PTR [rax+rax*1],cl
   140054184:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   140054188:	and    BYTE PTR [rax+rdx*1+0x0],dl
   14005418c:	and    BYTE PTR [rsi+rcx*1],dh
   14005418f:	add    BYTE PTR [rax],ah
   140054191:	jb     0x1400541af
   140054193:	lock sbb ah,al
   140054196:	sbb    al,dl
   140054198:	(bad)  
   140054199:	rcl    BYTE PTR [rax+rsi*2],0x1
   14005419d:	adc    eax,0x74150008
   1400541a2:	or     BYTE PTR [rax],al
   1400541a4:	adc    eax,0x15000764
   1400541a9:	xor    al,0x6
   1400541ab:	add    BYTE PTR [rip+0x11c01132],dl        # 0x151c552e3
   1400541b1:	adc    eax,0x74150008
   1400541b6:	or     BYTE PTR [rax],al
   1400541b8:	adc    eax,0x15000764
   1400541bd:	xor    al,0x6
   1400541bf:	add    BYTE PTR [rip+0xffffffffe0d01132],dl        # 0x120d552f7
   1400541c5:	stc    
   1400541c6:	add    al,BYTE PTR [rax]
   1400541c8:	add    DWORD PTR [rax],eax
   1400541ca:	add    BYTE PTR [rax],al
   1400541cc:	(bad)  
   1400541cd:	std    
   1400541ce:	add    al,BYTE PTR [rax]
   1400541d0:	outs   dx,DWORD PTR ds:[rsi]
   1400541d1:	std    
   1400541d2:	add    al,BYTE PTR [rax]
   1400541d4:	(bad)  
   1400541d5:	mov    DWORD PTR [rbx],0x0
   1400541db:	add    BYTE PTR [rcx],cl
   1400541dd:	and    BYTE PTR [rip+0x19c42000],cl        # 0x159c961e3
   1400541e3:	add    BYTE PTR [rax],ah
   1400541e5:	je     0x1400541ff
   1400541e7:	add    BYTE PTR [rax],ah
   1400541e9:	fs (bad) 
   1400541eb:	add    BYTE PTR [rax],ah
   1400541ed:	xor    al,0x16
   1400541ef:	add    BYTE PTR [rax],ah
   1400541f1:	add    DWORD PTR [rdx],edx
   1400541f3:	add    BYTE PTR [rcx],bl
   1400541f5:	lock (bad) 
   1400541f7:	loopne 0x14005420e
   1400541f9:	rol    BYTE PTR [rax],1
   1400541fb:	add    al,ah
   1400541fd:	stc    
   1400541fe:	add    al,BYTE PTR [rax]
   140054200:	add    DWORD PTR [rax],eax
   140054202:	add    BYTE PTR [rax],al
   140054204:	clc    
   140054205:	std    
   140054206:	add    al,BYTE PTR [rax]
   140054208:	add    al,0xfe
   14005420a:	add    al,BYTE PTR [rax]
   14005420c:	add    DWORD PTR [rax],eax
   14005420e:	add    BYTE PTR [rax],al
   140054210:	movabs al,ds:0x1400081401000300
   140054219:	or     BYTE PTR fs:[rax],al
   14005421c:	adc    al,0x54
   14005421e:	(bad)  
   14005421f:	add    BYTE PTR [rsp+rsi*1],dl
   140054222:	(bad)  
   140054223:	add    BYTE PTR [rdx+rsi*1],dl
   140054226:	adc    BYTE PTR [rax+0x1],dh
   140054229:	sbb    DWORD PTR [rdx],ecx
   14005422b:	add    BYTE PTR [rcx],bl
   14005422d:	je     0x140054238
   14005422f:	add    BYTE PTR [rcx],bl
   140054231:	or     BYTE PTR fs:[rax],al
   140054234:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140054238:	sbb    DWORD PTR [rsi+rax*1],esi
   14005423b:	add    BYTE PTR [rcx],bl
   14005423d:	xor    dl,BYTE PTR [rip+0xa1801c0]        # 0x14a1d4403
   140054243:	add    BYTE PTR [rax],bl
   140054245:	or     al,BYTE PTR fs:[rax]
   140054248:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14005424c:	sbb    BYTE PTR [rax+rcx*1],dh
   14005424f:	add    BYTE PTR [rax],bl
   140054251:	xor    dl,BYTE PTR [rax+rdx*8]
   140054254:	adc    al,al
   140054256:	adc    BYTE PTR [rax+0x11],dh
   140054259:	adc    BYTE PTR [rsi],al
   14005425b:	add    BYTE PTR [rax],dl
   14005425d:	or     DWORD PTR fs:[rax],eax
   140054260:	adc    BYTE PTR [rax+rcx*1],dh
   140054263:	add    BYTE PTR [rax],dl
   140054265:	push   rdx
   140054266:	or     al,0xc0
   140054268:	loopne 0x140054263
   14005426a:	add    al,BYTE PTR [rax]
   14005426c:	add    DWORD PTR [rax],eax
   14005426e:	add    BYTE PTR [rax],al
   140054270:	jrcxz  0x140054274
   140054272:	add    eax,DWORD PTR [rax]
   140054274:	pop    rbx
   140054275:	add    eax,DWORD PTR [rbx]
   140054277:	add    dl,ch
   140054279:	mov    DWORD PTR [rbx],0x0
   14005427f:	add    BYTE PTR [rcx],al
   140054281:	(bad)  
   140054283:	add    BYTE PTR [rdi],cl
   140054285:	xor    al,0x6
   140054287:	add    BYTE PTR [rdi],cl
   140054289:	xor    cl,BYTE PTR [rbx]
   14005428b:	jo     0x14005429e
   14005428d:	sbb    al,0xa
   14005428f:	add    BYTE PTR [rsp+riz*2],bl
   140054292:	ltr    WORD PTR [rsp+rsi*1]
   140054296:	(bad)  
   140054297:	add    BYTE PTR [rdx+rsi*2],bl
   14005429a:	sbb    al,dh
   14005429c:	(bad)  
   14005429d:	loopne 0x1400542b3
   14005429f:	rcl    BYTE PTR [rdx],1
   1400542a1:	rcl    BYTE PTR [rax],0x70
   1400542a4:	loopne 0x14005429f
   1400542a6:	add    al,BYTE PTR [rax]
   1400542a8:	add    DWORD PTR [rax],eax
   1400542aa:	add    BYTE PTR [rax],al
   1400542ac:	movsxd eax,DWORD PTR [rip+0x66c0003]        # 0x1467142b5
   1400542b2:	add    eax,DWORD PTR [rax]
   1400542b4:	add    ecx,eax
   1400542b6:	add    eax,DWORD PTR [rax]
   1400542b8:	add    BYTE PTR [rax],al
   1400542ba:	add    BYTE PTR [rax],al
   1400542bc:	adc    DWORD PTR [rdi],edx
   1400542be:	or     al,BYTE PTR [rax]
   1400542c0:	(bad)  
   1400542c1:	adc    BYTE PTR fs:[rax],al
   1400542c4:	(bad)  
   1400542c5:	xor    al,0xf
   1400542c7:	add    BYTE PTR [rdi],dl
   1400542c9:	jb     0x1400542de
   1400542cb:	lock adc eax,esp
   1400542ce:	(bad)  
   1400542d0:	or     eax,0xe0700bc0
   1400542d5:	stc    
   1400542d6:	add    al,BYTE PTR [rax]
   1400542d8:	add    DWORD PTR [rax],eax
   1400542da:	add    BYTE PTR [rax],al
   1400542dc:	or     BYTE PTR [rcx],cl
   1400542de:	add    eax,DWORD PTR [rax]
   1400542e0:	fwait
   1400542e1:	or     DWORD PTR [rbx],eax
   1400542e3:	add    BYTE PTR [rip+0x3c8],ah        # 0x1400546b1
   1400542e9:	add    BYTE PTR [rax],al
   1400542eb:	add    BYTE PTR [rcx],al
   1400542ed:	adc    eax,0xd4150008
   1400542f2:	or     eax,DWORD PTR [rax]
   1400542f4:	adc    eax,0x15000a74
   1400542f9:	xor    al,0x8
   1400542fb:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e55453
   140054301:	adc    BYTE PTR [rsi],al
   140054303:	add    BYTE PTR [rax],dl
   140054305:	je     0x14005430e
   140054307:	add    BYTE PTR [rax],dl
   140054309:	xor    al,0x6
   14005430b:	add    BYTE PTR [rax],dl
   14005430d:	xor    cl,BYTE PTR [rax+rax*8]
   140054310:	add    DWORD PTR [rcx],ecx
   140054312:	add    al,BYTE PTR [rax]
   140054314:	or     DWORD PTR [rdx],esi
   140054316:	add    eax,0x8180130
   14005431b:	add    BYTE PTR [rax],bl
   14005431d:	or     BYTE PTR fs:[rax],al
   140054320:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140054324:	sbb    BYTE PTR [rsi+rax*1],dh
   140054327:	add    BYTE PTR [rax],bl
   140054329:	xor    dl,BYTE PTR [rax+rsi*2]
   14005432c:	sbb    DWORD PTR [rcx],ebp
   14005432e:	or     eax,DWORD PTR [rax]
   140054330:	(bad)  
   140054331:	xor    al,0x64
   140054333:	add    BYTE PTR [rdi],dl
   140054335:	add    DWORD PTR [rdx+0x0],ebx
   140054338:	adc    al,dh
   14005433a:	(bad)  
   14005433b:	loopne 0x140054349
   14005433d:	ror    BYTE PTR [rdx],1
   14005433f:	ror    BYTE PTR [rax],0x70
   140054342:	(bad)  
   140054343:	(bad)  
   140054344:	(bad)  
   140054345:	push   rax
   140054346:	add    BYTE PTR [rax],al
   140054348:	pushf  
   140054349:	mov    al,0x2
   14005434b:	add    al,cl
   14005434d:	add    al,BYTE PTR [rax]
   14005434f:	add    BYTE PTR [rcx],al
   140054351:	or     DWORD PTR [rbx],eax
   140054353:	add    BYTE PTR [rcx],cl
   140054355:	add    DWORD PTR [rax+rax*1+0x3002],edi
   14005435c:	add    DWORD PTR [rdx+rax*1],ecx
   14005435f:	add    BYTE PTR [rcx+rax*1],cl
   140054362:	adc    DWORD PTR [rax],eax
   140054364:	add    DWORD PTR [rax],ecx
   140054366:	add    DWORD PTR [rax],eax
   140054368:	or     BYTE PTR [rdx+0x0],al
   14005436b:	add    BYTE PTR [rcx],dl
   14005436d:	or     al,BYTE PTR [rax+rax*1]
   140054370:	or     dh,BYTE PTR [rsi+rax*1]
   140054373:	add    BYTE PTR [rdx],cl
   140054375:	xor    al,BYTE PTR [rsi]
   140054377:	jo     0x140054359
   140054379:	stc    
   14005437a:	add    al,BYTE PTR [rax]
   14005437c:	add    al,BYTE PTR [rax]
   14005437e:	add    BYTE PTR [rax],al
   140054380:	sbb    ax,0x3
   140054384:	jno    0x1400543a3
   140054386:	add    eax,DWORD PTR [rax]
   140054388:	rex.B enter 0x3,0x0
   14005438d:	add    BYTE PTR [rax],al
   14005438f:	add    BYTE PTR [rsi-0x52fffce3],al
   140054395:	sbb    eax,0xc8610003
   14005439a:	add    eax,DWORD PTR [rax]
   14005439c:	add    BYTE PTR [rax],al
   14005439e:	add    BYTE PTR [rax],al
   1400543a0:	adc    DWORD PTR [rbx],edx
   1400543a2:	add    al,0x0
   1400543a4:	adc    esi,DWORD PTR [rdi+rax*1]
   1400543a7:	add    BYTE PTR [rbx],dl
   1400543a9:	xor    cl,BYTE PTR [rdi]
   1400543ab:	jo     0x14005438d
   1400543ad:	stc    
   1400543ae:	add    al,BYTE PTR [rax]
   1400543b0:	add    al,BYTE PTR [rax]
   1400543b2:	add    BYTE PTR [rax],al
   1400543b4:	or     bl,BYTE PTR [rdi]
   1400543b6:	add    eax,DWORD PTR [rax]
   1400543b8:	cmp    BYTE PTR [rdi],bl
   1400543ba:	add    eax,DWORD PTR [rax]
   1400543bc:	rex.B enter 0x3,0x0
   1400543c1:	add    BYTE PTR [rax],al
   1400543c3:	add    BYTE PTR [rbp+0x1f],cl
   1400543c6:	add    eax,DWORD PTR [rax]
   1400543c8:	test   BYTE PTR [rdi],bl
   1400543ca:	add    eax,DWORD PTR [rax]
   1400543cc:	(bad)  
   1400543cd:	enter  0x3,0x0
   1400543d1:	add    BYTE PTR [rax],al
   1400543d3:	add    BYTE PTR [rcx],bl
   1400543d5:	and    al,0x7
   1400543d7:	add    BYTE PTR [rdx],dl
   1400543d9:	fs mov ah,0x0
   1400543dc:	adc    dh,BYTE PTR [rbx+rsi*4]
   1400543df:	add    BYTE PTR [rdx],dl
   1400543e1:	add    DWORD PTR [rax+0x700b00],esi
   1400543e7:	add    BYTE PTR [rax+rsi*4+0x5700002],bl
   1400543ee:	add    BYTE PTR [rax],al
   1400543f0:	adc    DWORD PTR [rdx],ecx
   1400543f2:	add    al,0x0
   1400543f4:	or     dh,BYTE PTR [rdi+rax*1]
   1400543f7:	add    BYTE PTR [rdx],cl
   1400543f9:	xor    al,BYTE PTR [rsi]
   1400543fb:	jo     0x1400543dd
   1400543fd:	stc    
   1400543fe:	add    al,BYTE PTR [rax]
   140054400:	add    DWORD PTR [rax],eax
   140054402:	add    BYTE PTR [rax],al
   140054404:	fisub  WORD PTR [rdx]
   140054406:	add    eax,DWORD PTR [rax]
   140054408:	(bad)  
   140054409:	and    eax,DWORD PTR [rbx]
   14005440b:	add    BYTE PTR [rdx-0x38],bh
   14005440e:	add    eax,DWORD PTR [rax]
   140054410:	add    BYTE PTR [rax],al
   140054412:	add    BYTE PTR [rax],al
   140054414:	sbb    DWORD PTR [rdi],ebx
   140054416:	or     BYTE PTR [rax],al
   140054418:	adc    BYTE PTR [rax+rdx*1],dh
   14005441b:	add    BYTE PTR [rax],dl
   14005441d:	jb     0x14005442b
   14005441f:	ror    BYTE PTR [rdx],1
   140054421:	ror    BYTE PTR [rax],0x70
   140054424:	(bad)  
   140054425:	(bad)  
   140054426:	(bad)  
   140054427:	push   rax
   140054428:	pushf  
   140054429:	mov    al,0x2
   14005442b:	add    BYTE PTR [rax],bh
   14005442d:	add    BYTE PTR [rax],al
   14005442f:	add    BYTE PTR [rcx],dl
   140054431:	sbb    DWORD PTR [rdx],ecx
   140054433:	add    BYTE PTR [rcx],bl
   140054435:	(bad)  
   140054436:	or     eax,DWORD PTR [rax]
   140054438:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14005443c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140054440:	sbb    DWORD PTR [rax+rcx*1],esi
   140054443:	add    BYTE PTR [rcx],bl
   140054445:	push   rdx
   140054446:	adc    eax,0x2f9e0d0
   14005444b:	add    BYTE PTR [rcx],al
   14005444d:	add    BYTE PTR [rax],al
   14005444f:	add    BYTE PTR [rbp+0x27],cl
   140054452:	add    eax,DWORD PTR [rax]
   140054454:	(bad)  
   140054455:	sub    BYTE PTR [rbx],al
   140054457:	add    BYTE PTR [rdx-0x38],bh
   14005445a:	add    eax,DWORD PTR [rax]
   14005445c:	add    BYTE PTR [rax],al
   14005445e:	add    BYTE PTR [rax],al
   140054460:	add    DWORD PTR [rdi],ecx
   140054462:	(bad)  
   140054463:	add    BYTE PTR [rdi],cl
   140054465:	fs (bad) 
   140054467:	add    BYTE PTR [rdi],cl
   140054469:	xor    al,0x6
   14005446b:	add    BYTE PTR [rdi],cl
   14005446d:	xor    cl,BYTE PTR [rbx]
   14005446f:	jo     0x140054482
   140054471:	(bad)  
   140054472:	add    al,BYTE PTR [rax]
   140054474:	(bad)  
   140054475:	xor    al,BYTE PTR [rdx]
   140054477:	xor    al,ah
   140054479:	stc    
   14005447a:	add    al,BYTE PTR [rax]
   14005447c:	add    DWORD PTR [rax],eax
   14005447e:	add    BYTE PTR [rax],al
   140054480:	xlat   BYTE PTR ds:[rbx]
   140054481:	sub    eax,DWORD PTR [rbx]
   140054483:	add    ch,ch
   140054485:	sub    eax,DWORD PTR [rbx]
   140054487:	add    BYTE PTR [rbx+0x3c8],dl
   14005448d:	add    BYTE PTR [rax],al
   14005448f:	add    BYTE PTR [rcx],al
   140054491:	clts   
   140054493:	add    BYTE PTR [rdi],cl
   140054495:	adc    BYTE PTR fs:[rax],al
   140054498:	andps  xmm1,XMMWORD PTR [rdi]
   14005449b:	add    BYTE PTR [rdi],cl
   14005449d:	mov    dl,0xb
   14005449f:	jo     0x1400544a2
   1400544a1:	adc    al,0x8
   1400544a3:	add    BYTE PTR [rsp+riz*2],dl
   1400544a6:	or     al,BYTE PTR [rax]
   1400544a8:	adc    al,0x54
   1400544aa:	or     DWORD PTR [rax],eax
   1400544ac:	adc    al,0x34
   1400544ae:	or     BYTE PTR [rax],al
   1400544b0:	adc    al,0x52
   1400544b2:	adc    BYTE PTR [rax+0x1],dh
   1400544b5:	sbb    eax,0x741d000c
   1400544ba:	or     eax,DWORD PTR [rax]
   1400544bc:	sbb    eax,0x1d000a64
   1400544c1:	push   rsp
   1400544c2:	or     DWORD PTR [rax],eax
   1400544c4:	sbb    eax,0x1d000834
   1400544c9:	xor    bl,BYTE PTR [rcx]
   1400544cb:	loopne 0x1400544e4
   1400544cd:	rcl    BYTE PTR [rip+0x60f01c0],1        # 0x146144693
   1400544d3:	add    BYTE PTR [rdi],cl
   1400544d5:	or     eax,DWORD PTR fs:[rax]
   1400544d8:	sysenter 
   1400544da:	or     al,BYTE PTR [rax]
   1400544dc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400544df:	jo     0x1400544e2
   1400544e1:	sbb    DWORD PTR [rdx],ecx
   1400544e3:	add    BYTE PTR [rcx],bl
   1400544e5:	je     0x1400544f4
   1400544e7:	add    BYTE PTR [rcx],bl
   1400544e9:	fs or  al,0x0
   1400544ec:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400544f0:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400544f3:	add    BYTE PTR [rcx],bl
   1400544f5:	jb     0x14005450c
   1400544f7:	rol    BYTE PTR [rcx],0xa
   1400544fa:	add    al,0x0
   1400544fc:	or     dh,BYTE PTR [rsi+rax*1]
   1400544ff:	add    BYTE PTR [rdx],cl
   140054501:	xor    al,BYTE PTR [rsi]
   140054503:	jo     0x140054506
   140054505:	(bad)  
   140054506:	add    al,BYTE PTR [rax]
   140054508:	(bad)  
   140054509:	jb     0x14005450d
   14005450b:	xor    BYTE PTR [rcx],al
   14005450d:	sbb    eax,0x741d000c
   140054512:	adc    DWORD PTR [rax],eax
   140054514:	sbb    eax,0x1d001064
   140054519:	push   rsp
   14005451a:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d055355
   140054521:	xchg   edx,eax
   140054522:	sbb    eax,esi
   140054524:	(bad)  
   140054525:	rcl    BYTE PTR [rip+0x61c19c0],1        # 0x146215eeb
   14005452b:	add    BYTE PTR [rip+0x6001101],cl        # 0x146055632
   140054531:	rol    BYTE PTR [rax+rsi*2],0x3
   140054535:	(bad)  
   140054536:	add    dh,BYTE PTR [rax]
   140054538:	pushf  
   140054539:	mov    al,0x2
   14005453b:	add    BYTE PTR [rax+0x0],dh
   14005453e:	add    BYTE PTR [rax],al
   140054540:	add    DWORD PTR [rip+0xffffffffc41d000c],ebx        # 0x104224552
   140054546:	adc    DWORD PTR [rax],eax
   140054548:	sbb    eax,0x1d001074
   14005454d:	push   rsp
   14005454e:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d055389
   140054555:	xchg   edx,eax
   140054556:	sbb    eax,esi
   140054558:	(bad)  
   140054559:	loopne 0x140054570
   14005455b:	rol    BYTE PTR [rcx],1
   14005455d:	sbb    DWORD PTR [rdx],ecx
   14005455f:	add    BYTE PTR [rcx],bl
   140054561:	je     0x140054572
   140054563:	add    BYTE PTR [rcx],bl
   140054565:	fs (bad) 
   140054567:	add    BYTE PTR [rcx],bl
   140054569:	push   rsp
   14005456a:	or     eax,0xc341900
   14005456f:	add    BYTE PTR [rcx],bl
   140054571:	xchg   edx,eax
   140054572:	adc    eax,0x51919c0
   140054577:	add    BYTE PTR [rdx],cl
   140054579:	loop   0x140054581
   14005457b:	rol    BYTE PTR [rax+rsi*2],0x3
   14005457f:	(bad)  
   140054580:	add    dh,BYTE PTR [rax]
   140054582:	add    BYTE PTR [rax],al
   140054584:	pushf  
   140054585:	mov    al,0x2
   140054587:	add    BYTE PTR [rax+0x0],ah
   14005458a:	add    BYTE PTR [rax],al
   14005458c:	sbb    DWORD PTR [rip+0xfffffffff20e0006],ebx        # 0x132134598
   140054592:	(bad)  
   140054593:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143654a0a
   14005459a:	add    dh,BYTE PTR [rax]
   14005459c:	pushf  
   14005459d:	mov    al,0x2
   14005459f:	add    BYTE PTR [rax+0x0],dh
   1400545a2:	add    BYTE PTR [rax],al
   1400545a4:	sbb    DWORD PTR [rip+0x741f450d],ebp        # 0x1b4248ab7
   1400545aa:	adc    al,0x0
   1400545ac:	sbb    esp,DWORD PTR [rbx+rdx*1+0x0]
   1400545b0:	(bad)  
   1400545b1:	xor    al,0x12
   1400545b3:	add    BYTE PTR [rbx],dl
   1400545b5:	rex.XB (bad) 
   1400545b7:	mov    dl,0xa
   1400545b9:	lock or al,ah
   1400545bc:	(bad)  
   1400545bd:	rol    BYTE PTR [rax+rax*8],1
   1400545c0:	add    dl,BYTE PTR [rax+0x0]
   1400545c3:	add    BYTE PTR [rax+rsi*4+0x580002],bl
   1400545ca:	add    BYTE PTR [rax],al
   1400545cc:	add    DWORD PTR [rdi],ecx
   1400545ce:	(bad)  
   1400545cf:	add    BYTE PTR [rdi],cl
   1400545d1:	adc    DWORD PTR fs:[rax],eax
   1400545d4:	sysenter 
   1400545d6:	adc    BYTE PTR [rax],al
   1400545d8:	psrld  mm1,QWORD PTR [rbx]
   1400545db:	jo     0x1400545dd
   1400545dd:	add    BYTE PTR [rax],al
   1400545df:	add    BYTE PTR [rcx],al
   1400545e1:	add    al,0x1
   1400545e3:	add    BYTE PTR [rdx+rdx*1],al
   1400545e6:	add    BYTE PTR [rax],al
   1400545e8:	sbb    DWORD PTR [rdx],ebx
   1400545ea:	add    al,0x0
   1400545ec:	or     esi,edx
   1400545ee:	add    al,0x70
   1400545f0:	add    esp,DWORD PTR [rax+0x2]
   1400545f3:	xor    BYTE PTR [rax+rsi*4+0x700002],bl
   1400545fa:	add    BYTE PTR [rax],al
   1400545fc:	adc    DWORD PTR [rbx],ebx
   1400545fe:	or     al,BYTE PTR [rax]
   140054600:	sbb    esp,DWORD PTR [rsi+rcx*1+0x0]
   140054604:	sbb    esi,DWORD PTR [rcx*1+0x17521b00]
   14005460b:	lock adc eax,0x11d013e0
   140054611:	ror    BYTE PTR [rdi],0x70
   140054614:	loopne 0x14005460f
   140054616:	add    al,BYTE PTR [rax]
   140054618:	add    DWORD PTR [rax],eax
   14005461a:	add    BYTE PTR [rax],al
   14005461c:	and    cl,BYTE PTR [rdi+0x3]
   14005461f:	add    BYTE PTR [rbp+0x4f],dl
   140054622:	add    eax,DWORD PTR [rax]
   140054624:	lods   al,BYTE PTR ds:[rsi]
   140054625:	enter  0x3,0x0
   140054629:	add    BYTE PTR [rax],al
   14005462b:	add    BYTE PTR [rcx],al
   14005462d:	sbb    eax,0x741d000c
   140054632:	or     eax,DWORD PTR [rax]
   140054634:	sbb    eax,0x1d000a64
   140054639:	push   rsp
   14005463a:	or     DWORD PTR [rax],eax
   14005463c:	sbb    eax,0x1d000834
   140054641:	xor    bl,BYTE PTR [rcx]
   140054643:	lock (bad) 
   140054645:	rcl    BYTE PTR [rip+0x91901c0],1        # 0x1491e480b
   14005464b:	add    BYTE PTR [rcx],bl
   14005464d:	movabs ds:0xc00fd011e013f015,al
   140054656:	or     eax,0xb600c70
   14005465b:	push   rax
   14005465c:	or     dh,BYTE PTR [rax]
   14005465e:	add    BYTE PTR [rax],al
   140054660:	add    DWORD PTR [rsi],eax
   140054662:	add    al,BYTE PTR [rax]
   140054664:	(bad)  
   140054665:	push   rdx
   140054666:	add    dl,BYTE PTR [rax+0x11]
   140054669:	(bad)  
   14005466a:	or     BYTE PTR [rax],al
   14005466c:	(bad)  
   14005466d:	fs or  eax,0xc341700
   140054673:	add    BYTE PTR [rdi],dl
   140054675:	push   rdx
   140054676:	adc    edx,eax
   140054678:	adc    eax,eax
   14005467a:	pshufw mm4,mm0,0xf9
   14005467e:	add    al,BYTE PTR [rax]
   140054680:	add    DWORD PTR [rax],eax
   140054682:	add    BYTE PTR [rax],al
   140054684:	and    ebx,DWORD PTR [rdx+0x3]
   140054687:	add    BYTE PTR [rax+0x5a],cl
   14005468a:	add    eax,DWORD PTR [rax]
   14005468c:	ret    
   14005468d:	enter  0x3,0x0
   140054691:	add    BYTE PTR [rax],al
   140054693:	add    BYTE PTR [rax],al
   140054695:	add    BYTE PTR [rax],al
   140054697:	add    BYTE PTR [rcx],al
   140054699:	(bad)  
   14005469a:	add    al,BYTE PTR [rax]
   14005469c:	(bad)  
   14005469d:	add    DWORD PTR [rbx+0x40f1100],ebx
   1400546a3:	add    BYTE PTR [rdi],cl
   1400546a5:	xor    al,0x9
   1400546a7:	add    BYTE PTR [rdi],cl
   1400546a9:	push   rdx
   1400546aa:	or     esi,DWORD PTR [rax-0x20]
   1400546ad:	stc    
   1400546ae:	add    al,BYTE PTR [rax]
   1400546b0:	add    DWORD PTR [rax],eax
   1400546b2:	add    BYTE PTR [rax],al
   1400546b4:	xchg   edi,eax
   1400546b5:	pop    rbp
   1400546b6:	add    eax,DWORD PTR [rax]
   1400546b8:	movabs eax,ds:0x3c8da00035d
   1400546c1:	add    BYTE PTR [rax],al
   1400546c3:	add    BYTE PTR [rcx],cl
   1400546c5:	add    al,0x1
   1400546c7:	add    BYTE PTR [rdx+riz*2],al
   1400546ca:	add    BYTE PTR [rax],al
   1400546cc:	loopne 0x1400546c7
   1400546ce:	add    al,BYTE PTR [rax]
   1400546d0:	add    DWORD PTR [rax],eax
   1400546d2:	add    BYTE PTR [rax],al
   1400546d4:	test   BYTE PTR [rsi+0x3],bl
   1400546d7:	add    BYTE PTR [rax-0xdfffca2],dl
   1400546dd:	enter  0x3,0x90
   1400546e1:	pop    rsi
   1400546e2:	add    eax,DWORD PTR [rax]
   1400546e4:	add    DWORD PTR [rsi],eax
   1400546e6:	add    al,BYTE PTR [rax]
   1400546e8:	(bad)  
   1400546e9:	push   rdx
   1400546ea:	add    dh,BYTE PTR [rax]
   1400546ec:	add    DWORD PTR [rax+rcx*1],edx
   1400546ef:	add    BYTE PTR [rsp+riz*2],dl
   1400546f2:	adc    BYTE PTR [rax],al
   1400546f4:	adc    al,0x54
   1400546f6:	lldt   WORD PTR [rsp+rsi*1]
   1400546fa:	(bad)  
   1400546fb:	add    BYTE PTR [rdx+rsi*4],dl
   1400546fe:	adc    BYTE PTR [rax+0x1],dh
   140054701:	clts   
   140054703:	add    BYTE PTR [rdi],cl
   140054705:	push   rsp
   140054706:	or     al,0x0
   140054708:	sysenter 
   14005470a:	or     eax,DWORD PTR [rax]
   14005470c:	(bad)  
   14005470e:	or     esi,DWORD PTR [rax+0x1]
   140054711:	(bad)  
   140054712:	or     BYTE PTR [rax],al
   140054714:	(bad)  
   140054715:	or     DWORD PTR fs:[rax],eax
   140054718:	(bad)  
   140054719:	push   rsp
   14005471a:	or     BYTE PTR [rax],al
   14005471c:	(bad)  
   14005471d:	xor    al,0x7
   14005471f:	add    BYTE PTR [rdi],dl
   140054721:	xor    dl,BYTE PTR [rbx]
   140054723:	jo     0x14005473e
   140054725:	adc    eax,DWORD PTR [rcx]
   140054727:	add    BYTE PTR [rdx+rax*8],al
   14005472a:	add    BYTE PTR [rax],al
   14005472c:	pushf  
   14005472d:	mov    al,0x2
   14005472f:	add    BYTE PTR [rax+0x0],dl
   140054732:	add    BYTE PTR [rax],al
   140054734:	or     DWORD PTR [rcx+rax*1],eax
   140054737:	add    BYTE PTR [rdx+rax*2],al
   14005473a:	add    BYTE PTR [rax],al
   14005473c:	loopne 0x140054737
   14005473e:	add    al,BYTE PTR [rax]
   140054740:	add    DWORD PTR [rax],eax
   140054742:	add    BYTE PTR [rax],al
   140054744:	out    0x66,eax
   140054746:	add    eax,DWORD PTR [rax]
   140054748:	sbb    ah,BYTE PTR [rdi+0x3]
   14005474b:	add    BYTE PTR [rax],ah
   14005474d:	leave  
   14005474e:	add    eax,DWORD PTR [rax]
   140054750:	sbb    ah,BYTE PTR [rdi+0x3]
   140054753:	add    BYTE PTR [rcx],al
   140054755:	(bad)  
   140054756:	add    al,BYTE PTR [rax]
   140054758:	(bad)  
   140054759:	xor    al,BYTE PTR [rdx]
   14005475b:	push   rax
   14005475c:	adc    DWORD PTR [rcx],ebx
   14005475e:	or     al,BYTE PTR [rax]
   140054760:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140054764:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140054768:	sbb    DWORD PTR [rax+rcx*1],esi
   14005476b:	add    BYTE PTR [rcx],bl
   14005476d:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d55b53
   140054773:	shl    al,0xf9
   140054776:	add    al,BYTE PTR [rax]
   140054778:	add    DWORD PTR [rax],eax
   14005477a:	add    BYTE PTR [rax],al
   14005477c:	es push 0x68e70003
   140054782:	add    eax,DWORD PTR [rax]
   140054784:	rex.B leave 
   140054786:	add    eax,DWORD PTR [rax]
   140054788:	add    BYTE PTR [rax],al
   14005478a:	add    BYTE PTR [rax],al
   14005478c:	or     DWORD PTR [rcx+rax*1],eax
   14005478f:	add    BYTE PTR [rdx+rax*2],al
   140054792:	add    BYTE PTR [rax],al
   140054794:	loopne 0x14005478f
   140054796:	add    al,BYTE PTR [rax]
   140054798:	add    DWORD PTR [rax],eax
   14005479a:	add    BYTE PTR [rax],al
   14005479c:	cmp    DWORD PTR [rcx+0x3],ebp
   14005479f:	add    BYTE PTR [rip+0x1000369],bh        # 0x141054b0e
   1400547a5:	add    BYTE PTR [rax],al
   1400547a7:	add    BYTE PTR [rip+0x1000369],bh        # 0x141054b16
   1400547ad:	(bad)  
   1400547ae:	or     al,BYTE PTR [rax]
   1400547b0:	(bad)  
   1400547b1:	push   rsp
   1400547b2:	lldt   WORD PTR [rsi]
   1400547b5:	xor    al,0xe
   1400547b7:	add    BYTE PTR [rsi],dl
   1400547b9:	jb     0x1400547cd
   1400547bb:	loopne 0x1400547cd
   1400547bd:	ror    BYTE PTR [rsi],1
   1400547bf:	ror    BYTE PTR [rax+rsi*2],0xb
   1400547c3:	(bad)  
   1400547c4:	add    DWORD PTR [rdx],edx
   1400547c6:	(bad)  
   1400547c7:	add    BYTE PTR [rdx],dl
   1400547c9:	xor    al,0x10
   1400547cb:	add    BYTE PTR [rdx],dl
   1400547cd:	mov    dl,0xe
   1400547cf:	jo     0x1400547de
   1400547d1:	(bad)  
   1400547d2:	or     al,0x50
   1400547d4:	sbb    DWORD PTR [rcx],esi
   1400547d6:	or     eax,0x10742335
   1400547db:	add    BYTE PTR [rdi],bl
   1400547dd:	ltr    WORD PTR fs:[rbx]
   1400547e1:	xor    al,0xe
   1400547e3:	add    BYTE PTR [rdi],dl
   1400547e5:	xor    edx,DWORD PTR [rdx]
   1400547e7:	jb     0x1400547f7
   1400547e9:	lock or al,0xe0
   1400547ec:	or     dl,al
   1400547ee:	or     al,al
   1400547f0:	(bad)  
   1400547f1:	push   rax
   1400547f2:	add    BYTE PTR [rax],al
   1400547f4:	pushf  
   1400547f5:	mov    al,0x2
   1400547f7:	add    BYTE PTR [rax],bh
   1400547f9:	add    BYTE PTR [rax],al
   1400547fb:	add    BYTE PTR [rcx],al
   1400547fd:	(bad)  
   1400547fe:	add    al,BYTE PTR [rax]
   140054800:	(bad)  
   140054801:	xor    cl,BYTE PTR [rdx]
   140054803:	xor    BYTE PTR [rcx],al
   140054805:	or     al,BYTE PTR [rax+rax*1]
   140054808:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   14005480c:	add    eax,0x1000134
   140054811:	sbb    eax,0x741d000c
   140054816:	or     eax,0xc641d00
   14005481b:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d055375
   140054821:	xor    al,0xa
   140054823:	add    BYTE PTR [rip+0x17e01952],bl        # 0x157e5617b
   140054829:	rcl    BYTE PTR [rip+0xd2d19c0],1        # 0x14d3261ef
   14005482f:	rex.RB (bad) 
   140054831:	je     0x140054849
   140054833:	add    BYTE PTR [rbx],bl
   140054835:	fs adc eax,0x14341700
   14005483b:	add    BYTE PTR [rbx],dl
   14005483d:	rex.XB (bad) 
   14005483f:	ror    BYTE PTR [rdx],cl
   140054841:	lock or al,ah
   140054844:	(bad)  
   140054845:	rol    BYTE PTR [rax+rax*8],1
   140054848:	add    dl,BYTE PTR [rax+0x0]
   14005484b:	add    BYTE PTR [rax+rsi*4+0x600002],bl
   140054852:	add    BYTE PTR [rax],al
   140054854:	add    DWORD PTR [rbx],ebx
   140054856:	or     al,BYTE PTR [rax]
   140054858:	sbb    edx,DWORD PTR [rsi+rdx*1+0x0]
   14005485c:	sbb    esi,DWORD PTR [rdx*1+0x17d21b00]
   140054863:	loopne 0x14005487a
   140054865:	rcl    BYTE PTR [rbx],1
   140054867:	rcl    BYTE PTR [rcx],0x70
   14005486a:	adc    BYTE PTR [rax+0x1],ah
   14005486d:	clts   
   14005486f:	add    BYTE PTR [rdi],cl
   140054871:	or     eax,DWORD PTR fs:[rax]
   140054874:	sysenter 
   140054876:	or     al,BYTE PTR [rax]
   140054878:	(bad)  
   14005487a:	or     esi,DWORD PTR [rax+0x19]
   14005487d:	sbb    al,0x4
   14005487f:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d055cb9
   140054885:	repnz (bad) 
   140054887:	jo     0x140054825
   140054889:	mov    al,0x2
   14005488b:	add    BYTE PTR [rax+0x0],bh
   14005488e:	add    BYTE PTR [rax],al
   140054890:	sbb    DWORD PTR [rbx],edx
   140054892:	add    DWORD PTR [rax],eax
   140054894:	add    al,0x62
   140054896:	add    BYTE PTR [rax],al
   140054898:	pushf  
   140054899:	mov    al,0x2
   14005489b:	add    BYTE PTR [rax],ch
   14005489d:	add    BYTE PTR [rax],al
   14005489f:	add    BYTE PTR [rcx],bl
   1400548a1:	(bad)  
   1400548a2:	or     eax,DWORD PTR [rbp+0x19]
   1400548a5:	rex.XB adc al,0x1
   1400548a8:	adc    DWORD PTR [rax],eax
   1400548aa:	or     eax,0x9e00bf0
   1400548af:	rol    BYTE PTR [rdi],1
   1400548b1:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143654d28
   1400548b8:	add    dl,BYTE PTR [rax+0x0]
   1400548bb:	add    BYTE PTR [rax+rsi*4+0x700002],bl
   1400548c2:	add    BYTE PTR [rax],al
   1400548c4:	add    DWORD PTR [rax+rcx*1],edx
   1400548c7:	add    BYTE PTR [rdx+rsi*2],dl
   1400548ca:	adc    al,dh
   1400548cc:	(bad)  
   1400548cd:	loopne 0x1400548db
   1400548cf:	ror    BYTE PTR [rdx],1
   1400548d1:	ror    BYTE PTR [rax],0x70
   1400548d4:	(bad)  
   1400548d5:	(bad)  
   1400548d6:	(bad)  
   1400548d7:	xor    BYTE PTR [rcx],bl
   1400548d9:	sub    ecx,DWORD PTR [rbx]
   1400548db:	add    BYTE PTR [rcx],bl
   1400548dd:	xor    al,0x20
   1400548df:	add    BYTE PTR [rcx],bl
   1400548e1:	add    DWORD PTR [rsi],edx
   1400548e3:	add    BYTE PTR [rdx],dl
   1400548e5:	lock adc al,ah
   1400548e8:	(bad)  
   1400548e9:	ror    BYTE PTR [rax+rax*8],1
   1400548ec:	or     dh,BYTE PTR [rax+0x9]
   1400548ef:	(bad)  
   1400548f0:	or     BYTE PTR [rax+0x0],dl
   1400548f3:	add    BYTE PTR [rax+rsi*4+0xa00002],bl
   1400548fa:	add    BYTE PTR [rax],al
   1400548fc:	sbb    DWORD PTR [rbx],ebp
   1400548fe:	or     eax,DWORD PTR [rax]
   140054900:	sbb    DWORD PTR [rdi+rbx*1],esi
   140054903:	add    BYTE PTR [rcx],bl
   140054905:	add    DWORD PTR [rsi],edx
   140054907:	add    BYTE PTR [rdx],dl
   140054909:	lock adc al,ah
   14005490c:	(bad)  
   14005490d:	ror    BYTE PTR [rax+rax*8],1
   140054910:	or     dh,BYTE PTR [rax+0x9]
   140054913:	(bad)  
   140054914:	or     BYTE PTR [rax+0x0],dl
   140054917:	add    BYTE PTR [rax+rsi*4+0xa00002],bl
   14005491e:	add    BYTE PTR [rax],al
   140054920:	sbb    DWORD PTR [rdx+rcx*1],esp
   140054923:	xor    eax,0xc2113316
   140054928:	or     eax,0x9e00bf0
   14005492d:	rol    BYTE PTR [rdi],1
   14005492f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143654da6
   140054936:	add    dl,BYTE PTR [rax-0x64]
   140054939:	mov    al,0x2
   14005493b:	add    BYTE PTR [rax+0x0],bl
   14005493e:	add    BYTE PTR [rax],al
   140054940:	add    DWORD PTR [rdi],ecx
   140054942:	(bad)  
   140054943:	add    BYTE PTR [rdi],cl
   140054945:	str    WORD PTR fs:[rdi]
   140054949:	xor    al,0xe
   14005494b:	add    BYTE PTR [rdi],cl
   14005494d:	mov    dl,0xb
   14005494f:	jo     0x140054952
   140054951:	sbb    BYTE PTR [rdx],cl
   140054953:	add    BYTE PTR [rax],bl
   140054955:	xor    al,0x10
   140054957:	add    BYTE PTR [rax],bl
   140054959:	push   rdx
   14005495a:	adc    al,0xf0
   14005495c:	adc    ah,al
   14005495e:	adc    al,dl
   140054960:	(bad)  
   140054961:	ror    BYTE PTR [rax+rsi*2],0xb
   140054965:	(bad)  
   140054966:	or     dl,BYTE PTR [rax+0x19]
   140054969:	and    DWORD PTR [rax],ecx
   14005496b:	add    BYTE PTR [rdx],dl
   14005496d:	push   rsp
   14005496e:	or     DWORD PTR [rax],eax
   140054970:	adc    dh,BYTE PTR [rax+rcx*1]
   140054973:	add    BYTE PTR [rdx],dl
   140054975:	xor    cl,BYTE PTR [rsi]
   140054977:	ror    BYTE PTR [rax+rsi*2],1
   14005497a:	or     esp,DWORD PTR [rax-0x64]
   14005497d:	mov    al,0x2
   14005497f:	add    BYTE PTR [rax],dl
   140054981:	add    BYTE PTR [rax],al
   140054983:	add    BYTE PTR [rcx],ah
   140054985:	add    BYTE PTR [rax],al
   140054987:	add    BYTE PTR [rax-0x47],al
   14005498a:	add    eax,DWORD PTR [rax]
   14005498c:	int3   
   14005498d:	mov    ecx,0x49a80003
   140054992:	add    eax,0x2082100
   140054997:	add    BYTE PTR [rax],cl
   140054999:	xor    al,0x6
   14005499b:	add    DWORD PTR [rax-0x47],eax
   14005499e:	add    eax,DWORD PTR [rax]
   1400549a0:	int3   
   1400549a1:	mov    ecx,0x49a80003
   1400549a6:	add    eax,0x2191900
   1400549ab:	add    BYTE PTR [rdi],al
   1400549ad:	add    DWORD PTR [rdi],eax
   1400549af:	add    DWORD PTR [rax+rsi*4+0x8200002],ebx
   1400549b6:	add    BYTE PTR [rax],al
   1400549b8:	and    DWORD PTR [rax],eax
   1400549ba:	add    BYTE PTR [rax],al
   1400549bc:	rex mov edx,0xbad80003
   1400549c2:	add    eax,DWORD PTR [rax]
   1400549c4:	add    BYTE PTR [rdx+0x5],cl
   1400549c7:	add    BYTE PTR [rcx],ah
   1400549c9:	add    BYTE PTR [rax],al
   1400549cb:	add    al,bl
   1400549cd:	mov    edx,0xbb940003
   1400549d2:	add    eax,DWORD PTR [rax]
   1400549d4:	in     al,dx
   1400549d5:	rex.WB add rax,0x2082100
   1400549db:	add    BYTE PTR [rax],cl
   1400549dd:	push   rsp
   1400549de:	adc    al,0x1
   1400549e0:	fdivr  DWORD PTR [rdx-0x446bfffd]
   1400549e6:	add    eax,DWORD PTR [rax]
   1400549e8:	in     al,dx
   1400549e9:	rex.WB add rax,0x2082100
   1400549ef:	add    BYTE PTR [rax],cl
   1400549f1:	fs (bad) 
   1400549f3:	add    DWORD PTR [rax-0x46],eax
   1400549f6:	add    eax,DWORD PTR [rax]
   1400549f8:	fdivr  DWORD PTR [rdx+0x4a000003]
   1400549fe:	add    eax,0x7221900
   140054a03:	add    BYTE PTR [rax],dl
   140054a05:	add    DWORD PTR [rsi],ecx
   140054a07:	add    DWORD PTR [rcx],ecx
   140054a09:	loopne 0x140054a12
   140054a0b:	rol    BYTE PTR [rip+0x27003c0],1        # 0x142754dd1
   140054a11:	xor    BYTE PTR [rax],al
   140054a13:	add    BYTE PTR [rax+rsi*4+0x8600002],bl
   140054a1a:	add    BYTE PTR [rax],al
   140054a1c:	add    DWORD PTR [rbx],edx
   140054a1e:	add    DWORD PTR [rax],eax
   140054a20:	adc    eax,DWORD PTR [rdx+0x0]
   140054a23:	add    BYTE PTR [rcx],al
   140054a25:	or     al,0x4
   140054a27:	add    BYTE PTR [rsp+rsi*1],cl
   140054a2a:	or     eax,DWORD PTR [rax]
   140054a2c:	or     al,0x72
   140054a2e:	or     BYTE PTR [rax+0x1],dh
   140054a31:	adc    eax,0x74150008
   140054a36:	or     al,BYTE PTR [rax]
   140054a38:	adc    eax,0x15000964
   140054a3d:	xor    al,0x8
   140054a3f:	add    BYTE PTR [rip+0x8d01152],dl        # 0x148d55b97
   140054a45:	rex.WXB add rax,0x0
   140054a4b:	add    BYTE PTR [rax],al
   140054a4d:	add    BYTE PTR [rax],al
   140054a4f:	add    BYTE PTR [rsi+0x55],bh
   140054a52:	add    eax,0x3d04800
   140054a57:	add    BYTE PTR [rax+0x54e],al
   140054a5d:	add    BYTE PTR [rax],al
   140054a5f:	add    BYTE PTR [rax],al
   140054a61:	add    BYTE PTR [rax],al
   140054a63:	add    BYTE PTR [rdx-0x3ffffaab],dh
   140054a69:	rol    DWORD PTR [rbx],cl
   140054a6b:	add    al,al
   140054a6d:	rex.WX add rax,0x0
   140054a73:	add    BYTE PTR [rax],al
   140054a75:	add    BYTE PTR [rax],al
   140054a77:	add    BYTE PTR [rdx+0x56],ah
   140054a7a:	add    eax,0x3d00000
   140054a7f:	add    BYTE PTR [rax],bl
   140054a81:	rex.WRX add rax,0x0
   140054a87:	add    BYTE PTR [rax],al
   140054a89:	add    BYTE PTR [rax],al
   140054a8b:	add    BYTE PTR [rdi+rdx*2+0x5],dh
   140054a8f:	add    BYTE PTR [rax-0x2d],bl
   140054a92:	add    eax,DWORD PTR [rax]
   140054a94:	push   0x54e
   140054a99:	add    BYTE PTR [rax],al
   140054a9b:	add    BYTE PTR [rax],al
   140054a9d:	add    BYTE PTR [rax],al
   140054a9f:	add    BYTE PTR [rdx-0x57fffaa9],dh
   140054aa5:	rol    DWORD PTR [rbx],cl
	...
   140054abf:	add    BYTE PTR [rdx],dl
   140054ac1:	push   rsi
   140054ac2:	add    eax,0x0
   140054ac7:	add    BYTE PTR [rax],al
   140054ac9:	push   rsi
   140054aca:	add    eax,0x0
   140054acf:	add    dh,ch
   140054ad1:	push   rbp
   140054ad2:	add    eax,0x0
   140054ad7:	add    ah,bl
   140054ad9:	push   rbp
   140054ada:	add    eax,0x0
   140054adf:	add    ah,cl
   140054ae1:	push   rbp
   140054ae2:	add    eax,0x0
   140054ae7:	add    BYTE PTR [rsi+0x555],bh
   140054aed:	add    BYTE PTR [rax],al
   140054aef:	add    BYTE PTR [rsi],ah
   140054af1:	push   rsi
   140054af2:	add    eax,0x0
   140054af7:	add    BYTE PTR [rdx+0x56],al
   140054afa:	add    eax,0x0
	...
   140054b07:	add    BYTE PTR [rdi+rcx*2+0x5],bh
   140054b0b:	add    BYTE PTR [rax],al
   140054b0d:	add    BYTE PTR [rax],al
   140054b0f:	add    BYTE PTR [rax+0x54f],cl
   140054b15:	add    BYTE PTR [rax],al
   140054b17:	add    BYTE PTR [rsi+0x54f],dl
   140054b1d:	add    BYTE PTR [rax],al
   140054b1f:	add    BYTE PTR [rdi+rcx*2+0x5],ch
   140054b26:	add    BYTE PTR [rax],al
   140054b28:	ret    0x54f
   140054b2b:	add    BYTE PTR [rax],al
   140054b2d:	add    BYTE PTR [rax],al
   140054b2f:	add    dl,dl
   140054b31:	rex.WRXB add rax,0x0
   140054b37:	add    al,ch
   140054b39:	rex.WRXB add rax,0x0
   140054b3f:	add    dh,dh
   140054b41:	rex.WRXB add rax,0x0
   140054b47:	add    BYTE PTR [rax],cl
   140054b49:	push   rax
   140054b4a:	add    eax,0x0
   140054b4f:	add    BYTE PTR [rax],bl
   140054b51:	push   rax
   140054b52:	add    eax,0x0
   140054b57:	add    BYTE PTR [rsi],ch
   140054b59:	push   rax
   140054b5a:	add    eax,0x0
   140054b5f:	add    BYTE PTR [rax+rdx*2+0x5],al
   140054b63:	add    BYTE PTR [rax],al
   140054b65:	add    BYTE PTR [rax],al
   140054b67:	add    BYTE PTR [rsi+0x50],cl
   140054b6a:	add    eax,0x0
   140054b6f:	add    BYTE PTR [rsi+0x50],bl
   140054b72:	add    eax,0x0
   140054b77:	add    BYTE PTR [rax+rdx*2+0x5],dh
   140054b7b:	add    BYTE PTR [rax],al
   140054b7d:	add    BYTE PTR [rax],al
   140054b7f:	add    BYTE PTR [rdx+0x550],cl
   140054b85:	add    BYTE PTR [rax],al
   140054b87:	add    BYTE PTR [rdx+0x550],ah
   140054b8d:	add    BYTE PTR [rax],al
   140054b8f:	add    BYTE PTR [rsi+0x550],bh
   140054b95:	add    BYTE PTR [rax],al
   140054b97:	add    dh,dl
   140054b99:	push   rax
   140054b9a:	add    eax,0x0
   140054b9f:	add    dh,ch
   140054ba1:	push   rax
   140054ba2:	add    eax,0x0
   140054ba7:	add    ah,bh
   140054ba9:	push   rax
   140054baa:	add    eax,0x0
   140054baf:	add    BYTE PTR [rsi],cl
   140054bb1:	push   rcx
   140054bb2:	add    eax,0x0
   140054bb7:	add    BYTE PTR [rdx],ch
   140054bb9:	push   rcx
   140054bba:	add    eax,0x0
   140054bbf:	add    BYTE PTR [rax+0x51],cl
   140054bc2:	add    eax,0x0
   140054bc7:	add    BYTE PTR [rcx+rdx*2+0x5],bl
   140054bcb:	add    BYTE PTR [rax],al
   140054bcd:	add    BYTE PTR [rax],al
   140054bcf:	add    BYTE PTR [rax+0x51],ch
   140054bd2:	add    eax,0x0
   140054bd7:	add    BYTE PTR [rdx+0x51],bh
   140054bda:	add    eax,0x0
   140054bdf:	add    BYTE PTR [rax+0x551],cl
   140054be5:	add    BYTE PTR [rax],al
   140054be7:	add    BYTE PTR [rcx+rdx*2+0x5],dl
   140054bee:	add    BYTE PTR [rax],al
   140054bf0:	movabs ds:0x6800000000000551,al
   140054bf9:	rex.WRXB add rax,0x0
   140054bff:	add    dh,al
   140054c01:	push   rcx
   140054c02:	add    eax,0x0
   140054c07:	add    ah,bl
   140054c09:	push   rcx
   140054c0a:	add    eax,0x0
   140054c0f:	add    dh,dh
   140054c11:	push   rcx
   140054c12:	add    eax,0x0
   140054c17:	add    BYTE PTR [rdx],al
   140054c19:	push   rdx
   140054c1a:	add    eax,0x0
   140054c1f:	add    BYTE PTR [rdx],dl
   140054c21:	push   rdx
   140054c22:	add    eax,0x0
   140054c27:	add    BYTE PTR [rdx+rdx*2],ah
   140054c2a:	add    eax,0x0
   140054c2f:	add    BYTE PTR [rax],bh
   140054c31:	push   rdx
   140054c32:	add    eax,0x0
   140054c37:	add    BYTE PTR [rsi+0x52],al
   140054c3a:	add    eax,0x0
   140054c3f:	add    BYTE PTR [rax+0x52],bl
   140054c42:	add    eax,0x0
   140054c47:	add    BYTE PTR [rax+0x52],ch
   140054c4a:	add    eax,0x0
   140054c4f:	add    BYTE PTR [rdx+0x52],bh
   140054c52:	add    eax,0x0
   140054c57:	add    BYTE PTR [rax+0x552],cl
   140054c5d:	add    BYTE PTR [rax],al
   140054c5f:	add    BYTE PTR [rsi+0x552],bl
   140054c65:	add    BYTE PTR [rax],al
   140054c67:	add    BYTE PTR [rdx+0x552],dh
   140054c6d:	add    BYTE PTR [rax],al
   140054c6f:	add    dh,al
   140054c71:	push   rdx
   140054c72:	add    eax,0x0
   140054c77:	add    dl,bl
   140054c79:	push   rdx
   140054c7a:	add    eax,0x0
   140054c7f:	add    ah,dh
   140054c81:	push   rdx
   140054c82:	add    eax,0x0
   140054c87:	add    BYTE PTR [rdx],cl
   140054c89:	push   rbx
   140054c8a:	add    eax,0x0
   140054c8f:	add    BYTE PTR [rax],bl
   140054c91:	push   rbx
   140054c92:	add    eax,0x0
   140054c97:	add    BYTE PTR [rax],ch
   140054c99:	push   rbx
   140054c9a:	add    eax,0x0
   140054c9f:	add    BYTE PTR [rax],bh
   140054ca1:	push   rbx
   140054ca2:	add    eax,0x0
   140054ca7:	add    BYTE PTR [rsi+0x53],al
   140054caa:	add    eax,0x0
   140054caf:	add    BYTE PTR [rbx+rdx*2+0x5],dl
   140054cb3:	add    BYTE PTR [rax],al
   140054cb5:	add    BYTE PTR [rax],al
   140054cb7:	add    BYTE PTR [rsi+0x53],bl
   140054cba:	add    eax,0x0
   140054cbf:	add    BYTE PTR [rdx+0x53],ch
   140054cc2:	add    eax,0x0
   140054cc7:	add    BYTE PTR [rsi+0x53],dh
   140054cca:	add    eax,0x0
   140054ccf:	add    BYTE PTR [rdx+0x553],al
   140054cd5:	add    BYTE PTR [rax],al
   140054cd7:	add    BYTE PTR [rbx+rdx*2+0x5],dl
   140054cde:	add    BYTE PTR [rax],al
   140054ce0:	scas   al,BYTE PTR es:[rdi]
   140054ce1:	push   rbx
   140054ce2:	add    eax,0x0
   140054ce7:	add    dh,al
   140054ce9:	push   rbx
   140054cea:	add    eax,0x0
   140054cef:	add    al,ah
   140054cf1:	push   rbx
   140054cf2:	add    eax,0x0
   140054cf7:	add    dl,bh
   140054cf9:	push   rbx
   140054cfa:	add    eax,0x0
   140054cff:	add    BYTE PTR [rsp+rdx*2],dl
   140054d02:	add    eax,0x0
   140054d07:	add    BYTE PTR [rsp+rdx*2],ah
   140054d0a:	add    eax,0x0
   140054d0f:	add    BYTE PTR [rsi],bh
   140054d11:	push   rsp
   140054d12:	add    eax,0x0
   140054d17:	add    BYTE PTR [rsi+0x54],cl
   140054d1a:	add    eax,0x0
   140054d1f:	add    BYTE PTR [rsi+0x54],bl
   140054d22:	add    eax,0x0
   140054d27:	add    BYTE PTR [rax+0x54],dh
   140054d2a:	add    eax,0x0
   140054d2f:	add    BYTE PTR [rax+0x554],al
   140054d35:	add    BYTE PTR [rax],al
   140054d37:	add    BYTE PTR [rdx+0x554],dl
   140054d3d:	add    BYTE PTR [rax],al
   140054d3f:	add    BYTE PTR [rsi+0x554],bl
   140054d45:	add    BYTE PTR [rax],al
   140054d47:	add    dh,al
   140054d49:	push   rsp
   140054d4a:	add    eax,0x0
   140054d4f:	add    dh,dl
   140054d51:	push   rsp
   140054d52:	add    eax,0x0
   140054d57:	add    ah,ch
   140054d59:	push   rsp
   140054d5a:	add    eax,0x0
   140054d5f:	add    dh,bh
   140054d61:	push   rsp
   140054d62:	add    eax,0x0
   140054d67:	add    BYTE PTR [rax],dl
   140054d69:	push   rbp
   140054d6a:	add    eax,0x0
   140054d6f:	add    BYTE PTR [rdx],ah
   140054d71:	push   rbp
   140054d72:	add    eax,0x0
   140054d77:	add    BYTE PTR [rdx*2+0x5],dh
   140054d7e:	add    BYTE PTR [rax],al
   140054d80:	rex.RX push rbp
   140054d82:	add    eax,0x0
   140054d87:	add    BYTE PTR [rax+0x55],ah
   140054d8a:	add    eax,0x0
   140054d8f:	add    BYTE PTR [rdx+0x55],dh
   140054d92:	add    eax,0x0
   140054d97:	add    BYTE PTR [rdx+0x4f],bl
   140054d9a:	add    eax,0x0
   140054d9f:	add    BYTE PTR [rdi+rcx*2+0x5],cl
   140054da3:	add    BYTE PTR [rax],al
   140054da5:	add    BYTE PTR [rax],al
   140054da7:	add    BYTE PTR [rdx],bh
   140054da9:	rex.WRXB add rax,0x0
   140054daf:	add    BYTE PTR [rdx],ch
   140054db1:	rex.WRXB add rax,0x0
   140054db7:	add    BYTE PTR [rdx],bl
   140054db9:	rex.WRXB add rax,0x0
   140054dbf:	add    BYTE PTR [rdx],cl
   140054dc1:	rex.WRXB add rax,0x0
   140054dc7:	add    dh,dh
   140054dc9:	rex.WRX add rax,0x0
   140054dcf:	add    ah,ah
   140054dd1:	rex.WRX add rax,0x0
   140054dd7:	add    al,bl
   140054dd9:	rex.WRX add rax,0x0
   140054ddf:	add    dl,cl
   140054de1:	rex.WRX add rax,0x0
   140054de7:	add    dl,al
   140054de9:	rex.WRX add rax,0x0
   140054def:	add    BYTE PTR [rsi+0x54e],dh
   140054df5:	add    BYTE PTR [rax],al
   140054df7:	add    BYTE PTR [rsi+0x54e],ah
   140054dfd:	add    BYTE PTR [rax],al
   140054dff:	add    BYTE PTR [rsi+0x551],dh
   140054e05:	add    BYTE PTR [rax],al
   140054e07:	add    BYTE PTR [rax+0x54e],dl
	...
   140054e15:	add    BYTE PTR [rax],al
   140054e17:	add    ah,cl
   140054e19:	push   rsi
   140054e1a:	add    eax,0x0
   140054e1f:	add    BYTE PTR [rsi+0x57],bl
   140054e22:	add    eax,0x0
   140054e27:	add    BYTE PTR [rax+0x57],al
   140054e2a:	add    eax,0x0
   140054e2f:	add    BYTE PTR [rdi+rdx*2],ah
   140054e32:	add    eax,0x0
   140054e37:	add    BYTE PTR [rax],al
   140054e39:	push   rdi
   140054e3a:	add    eax,0x0
   140054e3f:	add    ah,ah
   140054e41:	push   rsi
   140054e42:	add    eax,0x0
   140054e47:	add    BYTE PTR [rsi+rdx*2+0x5],dh
   140054e4e:	add    BYTE PTR [rax],al
   140054e50:	nop
   140054e51:	push   rsi
   140054e52:	add    eax,0x0
   140054e57:	add    BYTE PTR [rax+0x56],dh
   140054e5a:	add    eax,0x0
	...
   140054e67:	add    BYTE PTR [rax+0x557],bl
   140054e6d:	add    BYTE PTR [rax],al
   140054e6f:	add    BYTE PTR [rdx+0x557],al
	...
   140054e7d:	add    BYTE PTR [rax],al
   140054e7f:	add    BYTE PTR [rbp+rdx*2+0x5],cl
	...
   140054e8e:	add    BYTE PTR [rax],al
   140054e90:	mov    eax,DWORD PTR [rbx]
   140054e92:	rex.WRXB jne 0x140054f09
   140054e95:	jo     0x140054f0c
   140054e97:	je     0x140054edd
   140054e99:	gs (bad) 
   140054e9b:	jne    0x140054f04
   140054e9d:	push   rbx
   140054e9e:	je     0x140054f12
   140054ea0:	imul   ebp,DWORD PTR [rsi+0x67],0x8000041
   140054ea7:	add    al,BYTE PTR [rdi+0x65]
   140054eaa:	je     0x140054ef8
   140054eac:	(bad)  
   140054ead:	jae    0x140054f23
   140054eaf:	rex.RB jb 0x140054f24
   140054eb2:	outs   dx,DWORD PTR ds:[rsi]
   140054eb3:	jb     0x140054eb5
   140054eb5:	add    BYTE PTR [rcx+rax*1],dh
   140054eb8:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x736f6c43
   140054ec0:	gs add al,al
   140054ec3:	add    al,0x53
   140054ec5:	ins    BYTE PTR es:[rdi],dx
   140054ec6:	gs gs jo 0x140054eca
   140054eca:	add    r9d,DWORD PTR [rdi+r13*2+0x63]
   140054ecf:	(bad)  
   140054ed0:	ins    BYTE PTR es:[rdi],dx
   140054ed1:	rex.B ins BYTE PTR es:[rdi],dx
   140054ed3:	ins    BYTE PTR es:[rdi],dx
   140054ed4:	outs   dx,DWORD PTR ds:[rsi]
   140054ed5:	movsxd eax,DWORD PTR [rax]
   140054ed7:	add    BYTE PTR [rdx+0x3],cl
   140054eda:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140054edc:	movsxd esp,DWORD PTR [rcx+0x6c]
   140054edf:	rex.RX jb 0x140054f47
   140054ee2:	add    BYTE PTR gs:[rdx+rax*1+0x47],cl
   140054ee7:	gs je  0x140054f3a
   140054eea:	jb     0x140054f5b
   140054eec:	movsxd eax,DWORD PTR [rcx+0x64]
   140054eef:	fs jb  0x140054f57
   140054ef2:	jae    0x140054f67
   140054ef4:	add    BYTE PTR [rax],al
   140054ef6:	(bad)  
   140054ef7:	add    al,BYTE PTR [rdi+0x65]
   140054efa:	je     0x140054f49
   140054efc:	outs   dx,DWORD PTR ds:[rsi]
   140054efd:	fs jne 0x140054f6c
   140054f00:	gs rex.W (bad) 
   140054f03:	outs   dx,BYTE PTR ds:[rsi]
   140054f04:	fs ins BYTE PTR es:[rdi],dx
   140054f06:	gs push rdi
   140054f08:	add    BYTE PTR [rax],al
   140054f0a:	add    BYTE PTR [rbx+rdx*2],0x65
   140054f0e:	je     0x140054f5c
   140054f10:	(bad)  
   140054f11:	jae    0x140054f87
   140054f13:	rex.RB jb 0x140054f88
   140054f16:	outs   dx,DWORD PTR ds:[rsi]
   140054f17:	jb     0x140054f19
   140054f19:	add    BYTE PTR [rbx],dh
   140054f1b:	add    eax,0x74697257
   140054f20:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140054f23:	outs   dx,BYTE PTR ds:[rsi]
   140054f24:	jae    0x140054f95
   140054f26:	ins    BYTE PTR es:[rdi],dx
   140054f27:	gs push rdi
   140054f29:	add    BYTE PTR [rsi],bh
   140054f2b:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140054f2f:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   140054f38:	add    BYTE PTR [rax],al
   140054f3a:	(bad)  
   140054f3b:	add    DWORD PTR [rsi+0x69],eax
   140054f3e:	outs   dx,BYTE PTR ds:[rsi]
   140054f3f:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   140054f48:	gs push rdi
   140054f4a:	add    BYTE PTR [rax],al
   140054f4c:	pop    QWORD PTR [rax]
   140054f4e:	rex.XB jb 0x140054fb6
   140054f51:	(bad)  
   140054f52:	je     0x140054fb9
   140054f54:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4400d700
   140054f5d:	gs ins BYTE PTR es:[rdi],dx
   140054f5f:	gs je  0x140054fc7
   140054f62:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x43008100
   140054f6b:	jb     0x140054fd2
   140054f6d:	(bad)  
   140054f6e:	je     0x140054fd5
   140054f70:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140054f78:	jns    0x140054fd1
   140054f7a:	add    BYTE PTR [rax],al
   140054f7c:	jne    0x140054f7e
   140054f7e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140054f80:	jo     0x140054ffb
   140054f82:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4d036200
   140054f8b:	outs   dx,DWORD PTR ds:[rsi]
   140054f8c:	jbe    0x140054ff3
   140054f8e:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0xf1005778
   140054f97:	add    DWORD PTR [rdi+0x65],eax
   140054f9a:	je     0x140054fe2
   140054f9c:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140054fa4:	(bad)  
   140054fa5:	jne    0x14005501b
   140054fa7:	gs jae 0x140055001
   140054faa:	add    BYTE PTR [rax],al
   140054fac:	outs   dx,DWORD PTR ds:[rsi]
   140054fad:	add    al,0x53
   140054faf:	gs je  0x140054ff8
   140054fb2:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140054fba:	(bad)  
   140054fbb:	jne    0x140055031
   140054fbd:	gs jae 0x140055017
   140054fc0:	add    BYTE PTR [rax],al
   140054fc2:	mov    WORD PTR [rdx],es
   140054fc4:	rex.RXB
   140054fc5:	gs je  0x14005501c
   140054fc8:	gs ins DWORD PTR es:[rdi],dx
   140054fca:	jo     0x14005501c
   140054fcc:	(bad)  
   140054fcd:	je     0x140055037
   140054fcf:	push   rdi
   140054fd0:	add    BYTE PTR [rax],al
   140054fd2:	ja     0x140054fd6
   140054fd4:	rex.RXB
   140054fd5:	gs je  0x14005502b
   140054fd8:	jns    0x14005504d
   140054fda:	je     0x140055041
   140054fdc:	ins    DWORD PTR es:[rdi],dx
   140054fdd:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140054fe5:	jns    0x14005503e
   140054fe7:	add    BYTE PTR [rdx+0x0],dl
   140054fea:	rex.XB ins BYTE PTR es:[rdi],dx
   140054fec:	outs   dx,DWORD PTR ds:[rsi]
   140054fed:	jae    0x140055054
   140054fef:	rex.W (bad) 
   140054ff1:	outs   dx,BYTE PTR ds:[rsi]
   140054ff2:	fs ins BYTE PTR es:[rdi],dx
   140054ff4:	gs add ch,ah
   140054ff7:	add    al,0x55
   140054ff9:	outs   dx,BYTE PTR ds:[rsi]
   140054ffa:	ins    DWORD PTR es:[rdi],dx
   140054ffb:	(bad)  
   140054ffc:	jo     0x140055054
   140054ffe:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140055005:	ins    BYTE PTR es:[rdi],dx
   140055006:	add    BYTE PTR gs:[rcx+0x3],bl
   14005500a:	rex.WRB (bad) 
   14005500c:	jo     0x140055064
   14005500e:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140055015:	ins    BYTE PTR es:[rdi],dx
   140055016:	add    BYTE PTR gs:[rcx+0x65724300],cl
   14005501d:	(bad)  
   14005501e:	je     0x140055085
   140055020:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140055029:	outs   dx,BYTE PTR ds:[rsi]
   14005502a:	add    BYTE PTR [r8d],al
   14005502e:	and    BYTE PTR [rip+0x65646957],al        # 0x1a569b98b
   140055034:	rex.XB push 0x6f547261
   14005503a:	rex.WRB jne 0x1400550a9
   14005503d:	je     0x1400550a8
   14005503f:	rex.X jns 0x1400550b6
   140055042:	add    BYTE PTR gs:[rsi+0x1],ch
   140055046:	rex.RXB
   140055047:	gs je  0x14005508b
   14005504a:	rex.XB push r8
   14005504c:	add    BYTE PTR [rax],al
   14005504e:	stos   DWORD PTR es:[rdi],eax
   14005504f:	add    al,BYTE PTR [rdi+0x65]
   140055052:	je     0x1400550aa
   140055054:	gs jb  0x1400550ca
   140055057:	imul   ebp,DWORD PTR [rdi+0x6e],0x417845
   14005505e:	imul   eax,DWORD PTR [rbx],0x746c754d
   140055064:	imul   eax,DWORD PTR [rdx+0x79],0x6f546574
   14005506b:	push   rdi
   14005506c:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140055074:	retf   
   140055075:	add    DWORD PTR [rdi+0x65],eax
   140055078:	je     0x1400550bd
   14005507a:	jne    0x1400550ee
   14005507c:	jb     0x1400550e3
   14005507e:	outs   dx,BYTE PTR ds:[rsi]
   14005507f:	je     0x1400550d5
   140055081:	push   0x64616572
   140055086:	rex.WB
   140055087:	add    BYTE PTR fs:[rax],al
   14005508a:	cmp    eax,DWORD PTR [rbx]
   14005508c:	rex.WR
   14005508d:	gs (bad) 
   14005508f:	jbe    0x1400550f6
   140055091:	rex.XB jb 0x1400550fd
   140055094:	je     0x1400550ff
   140055096:	movsxd esp,DWORD PTR [rcx+0x6c]
   140055099:	push   rbx
   14005509a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14005509f:	outs   dx,BYTE PTR ds:[rsi]
   1400550a0:	add    BYTE PTR [rax],al
   1400550a2:	(bad)  
   1400550a3:	add    cl,BYTE PTR [rcx+0x6e]
   1400550a6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400550ae:	rex.XB jb 0x14005511a
   1400550b1:	je     0x14005511c
   1400550b3:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400550b6:	push   rbx
   1400550b7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400550bc:	outs   dx,BYTE PTR ds:[rsi]
   1400550bd:	add    dl,dl
   1400550bf:	add    BYTE PTR [rbp+riz*2+0x6c],al
   1400550c3:	gs je  0x14005512b
   1400550c6:	rex.XB jb 0x140055132
   1400550c9:	je     0x140055134
   1400550cb:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400550ce:	push   rbx
   1400550cf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400550d4:	outs   dx,BYTE PTR ds:[rsi]
   1400550d5:	add    dl,dh
   1400550d7:	add    BYTE PTR [rbp+0x6e],al
   1400550da:	je     0x140055141
   1400550dc:	jb     0x140055121
   1400550de:	jb     0x140055149
   1400550e0:	je     0x14005514b
   1400550e2:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400550e5:	push   rbx
   1400550e6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400550eb:	outs   dx,BYTE PTR ds:[rsi]
   1400550ec:	add    BYTE PTR [rax],al
   1400550ee:	mov    BYTE PTR [rax],al
   1400550f0:	rex.XB jb 0x140055158
   1400550f3:	(bad)  
   1400550f4:	je     0x14005515b
   1400550f6:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x47020a00
   1400550ff:	gs je  0x14005514e
   140055102:	outs   dx,DWORD PTR ds:[rsi]
   140055103:	movsxd esp,DWORD PTR [rcx+0x6c]
   140055106:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140055109:	outs   dx,WORD PTR ds:[rsi]
   14005510b:	add    BYTE PTR [r8],al
   14005510e:	loop   0x140055114
   140055110:	push   rbp
   140055111:	outs   dx,BYTE PTR ds:[rsi]
   140055112:	push   0x6c646e61
   140055117:	gs fs rex.RB js 0x14005517f
   14005511c:	gs jo  0x140055193
   14005511f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140055126:	gs jb  0x140055129
   140055129:	add    BYTE PTR [rbx+0x74655304],dh
   14005512f:	push   rbp
   140055130:	outs   dx,BYTE PTR ds:[rsi]
   140055131:	push   0x6c646e61
   140055136:	gs fs rex.RB js 0x14005519e
   14005513b:	gs jo  0x1400551b2
   14005513e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140055145:	gs jb  0x140055148
   140055148:	sbb    BYTE PTR [rdx+rdx*2],al
   14005514b:	je     0x1400551b9
   14005514d:	rex.XB (bad) 
   14005514f:	jo     0x1400551c5
   140055151:	jne    0x1400551c5
   140055153:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140055156:	outs   dx,BYTE PTR ds:[rsi]
   140055157:	je     0x1400551be
   140055159:	js     0x1400551cf
   14005515b:	add    bh,dl
   14005515d:	add    cl,BYTE PTR [rax+0x65]
   140055160:	(bad)  
   140055161:	jo     0x1400551a9
   140055163:	jb     0x1400551ca
   140055165:	add    BYTE PTR gs:[rax],al
   140055168:	mov    WORD PTR [rcx],es
   14005516a:	rex.RXB
   14005516b:	gs je  0x1400551b1
   14005516e:	outs   dx,DWORD PTR ds:[rsi]
   14005516f:	ins    DWORD PTR es:[rdi],dx
   140055170:	ins    DWORD PTR es:[rdi],dx
   140055171:	(bad)  
   140055172:	outs   dx,BYTE PTR ds:[rsi]
   140055173:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2da0041
   14005517c:	rex.W
   14005517d:	gs (bad) 
   14005517f:	jo     0x1400551d3
   140055181:	gs rex.B ins BYTE PTR es:[rdi],dx
   140055184:	ins    BYTE PTR es:[rdi],dx
   140055185:	outs   dx,DWORD PTR ds:[rsi]
   140055186:	movsxd eax,DWORD PTR [rax]
   140055188:	rol    DWORD PTR [rdx],cl
   14005518a:	rex.W
   14005518b:	gs (bad) 
   14005518d:	jo     0x1400551d0
   14005518f:	ins    BYTE PTR es:[rdi],dx
   140055190:	ins    BYTE PTR es:[rdi],dx
   140055191:	outs   dx,DWORD PTR ds:[rsi]
   140055192:	movsxd eax,DWORD PTR [rax]
   140055194:	cli    
   140055195:	add    DWORD PTR [rdi+0x65],eax
   140055198:	je     0x1400551e0
   14005519a:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   1400551a2:	mov    BYTE PTR [rcx],0x47
   1400551a5:	gs je  0x1400551eb
   1400551a8:	jne    0x14005521c
   1400551aa:	jb     0x140055211
   1400551ac:	outs   dx,BYTE PTR ds:[rsi]
   1400551ad:	je     0x1400551ff
   1400551af:	jb     0x140055220
   1400551b1:	movsxd esp,DWORD PTR [rbp+0x73]
   1400551b4:	jae    0x1400551b6
   1400551b6:	xchg   esp,eax
   1400551b7:	add    al,0x53
   1400551b9:	gs je  0x14005520f
   1400551bc:	je     0x140055222
   1400551be:	rex.W (bad) 
   1400551c0:	outs   dx,BYTE PTR ds:[rsi]
   1400551c1:	fs ins BYTE PTR es:[rdi],dx
   1400551c3:	add    BYTE PTR gs:[rax],al
   1400551c6:	mov    DWORD PTR [rcx],0x43746547
   1400551cc:	jne    0x140055240
   1400551ce:	jb     0x140055235
   1400551d0:	outs   dx,BYTE PTR ds:[rsi]
   1400551d1:	je     0x140055223
   1400551d3:	jb     0x140055244
   1400551d5:	movsxd esp,DWORD PTR [rbp+0x73]
   1400551d8:	jae    0x140055223
   1400551da:	add    BYTE PTR fs:[rdi+0x74654702],bl
   1400551e1:	push   rsp
   1400551e2:	imul   ebp,DWORD PTR [rbp+0x65],0x656e6f5a
   1400551e9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400551eb:	outs   dx,WORD PTR ds:[rsi]
   1400551ed:	jb     0x14005525c
   1400551ef:	(bad)  
   1400551f0:	je     0x14005525b
   1400551f2:	outs   dx,DWORD PTR ds:[rsi]
   1400551f3:	outs   dx,BYTE PTR ds:[rsi]
   1400551f4:	add    BYTE PTR [rax],al
   1400551f6:	xor    al,0x5
   1400551f8:	push   rdi
   1400551f9:	jb     0x140055264
   1400551fb:	je     0x140055262
   1400551fd:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x654701a0
   140055206:	je     0x14005524b
   140055208:	outs   dx,DWORD PTR ds:[rsi]
   140055209:	outs   dx,BYTE PTR ds:[rsi]
   14005520a:	jae    0x14005527b
   14005520c:	ins    BYTE PTR es:[rdi],dx
   14005520d:	gs rex.XB push r8
   140055210:	add    BYTE PTR [rax],al
   140055212:	mov    dl,0x1
   140055214:	rex.RXB
   140055215:	gs je  0x14005525b
   140055218:	outs   dx,DWORD PTR ds:[rsi]
   140055219:	outs   dx,BYTE PTR ds:[rsi]
   14005521a:	jae    0x14005528b
   14005521c:	ins    BYTE PTR es:[rdi],dx
   14005521d:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140055220:	fs add BYTE PTR gs:[rax],al
   140055224:	pop    rbp
   140055225:	add    DWORD PTR [rsi+0x6c],eax
   140055228:	jne    0x14005529d
   14005522a:	push   0x656c6946
   14005522f:	rex.X jne 0x140055298
   140055232:	data16 gs jb 0x1400552a9
   140055236:	add    BYTE PTR [rax],al
   140055238:	and    eax,0x6c745204
   14005523d:	push   rbp
   14005523e:	outs   dx,BYTE PTR ds:[rsi]
   14005523f:	ja     0x1400552aa
   140055241:	outs   dx,BYTE PTR ds:[rsi]
   140055242:	fs rex.RB js 0x140055246
   140055246:	jl     0x14005524c
   140055248:	push   rbx
   140055249:	gs je  0x140055294
   14005524c:	(bad)  
   14005524d:	outs   dx,BYTE PTR ds:[rsi]
   14005524e:	fs ins BYTE PTR es:[rdi],dx
   140055250:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140055253:	jne    0x1400552c3
   140055255:	je     0x140055257
   140055257:	add    BYTE PTR [rbx+0x2],ch
   14005525a:	rex.RXB
   14005525b:	gs je  0x1400552b1
   14005525e:	je     0x1400552c4
   140055260:	rex.W (bad) 
   140055262:	outs   dx,BYTE PTR ds:[rsi]
   140055263:	fs ins BYTE PTR es:[rdi],dx
   140055265:	add    BYTE PTR gs:[rax],al
   140055268:	imul   eax,DWORD PTR [rdx],0x53746547
   14005526e:	je     0x1400552d1
   140055270:	jb     0x1400552e6
   140055272:	jne    0x1400552e4
   140055274:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140055276:	outs   dx,WORD PTR ds:[rsi]
   140055278:	add    BYTE PTR [r15],bl
   14005527b:	add    DWORD PTR [rbp+0x78],eax
   14005527e:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   140055286:	jae    0x140055288
   140055288:	sbb    DWORD PTR [rdx],eax
   14005528a:	rex.RXB
   14005528b:	gs je  0x1400552db
   14005528e:	outs   dx,DWORD PTR ds:[rsi]
   14005528f:	fs jne 0x1400552fe
   140055292:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14005529c:	add    BYTE PTR [rax],al
   14005529e:	(bad)  
   14005529f:	add    al,0x54
   1400552a1:	gs jb  0x140055311
   1400552a4:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400552ab:	outs   dx,DWORD PTR ds:[rsi]
   1400552ac:	movsxd esp,DWORD PTR [rbp+0x73]
   1400552af:	jae    0x1400552b1
   1400552b1:	add    BYTE PTR [rdx],al
   1400552b3:	add    ecx,DWORD PTR [rcx+0x73]
   1400552b6:	rex.R
   1400552b7:	gs (bad) 
   1400552b9:	jne    0x140055322
   1400552bb:	addr32 gs jb 0x14005530f
   1400552bf:	jb     0x140055326
   1400552c1:	jae    0x140055328
   1400552c3:	outs   dx,BYTE PTR ds:[rsi]
   1400552c4:	je     0x1400552c6
   1400552c6:	es add al,0x52
   1400552c9:	je     0x140055337
   1400552cb:	push   rsi
   1400552cc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400552d3:	outs   dx,BYTE PTR ds:[rsi]
   1400552d4:	ja     0x14005533f
   1400552d6:	outs   dx,BYTE PTR ds:[rsi]
   1400552d7:	add    BYTE PTR fs:[rax],al
   1400552da:	(bad)  
   1400552db:	add    al,0x52
   1400552dd:	je     0x14005534b
   1400552df:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400552e1:	outs   dx,DWORD PTR ds:[rsi]
   1400552e2:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400552e6:	jne    0x140055356
   1400552e8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400552ec:	outs   dx,BYTE PTR ds:[rsi]
   1400552ed:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400552ef:	je     0x140055363
   1400552f1:	jns    0x1400552f3
   1400552f3:	add    bl,bl
   1400552f5:	add    cl,BYTE PTR [rax+0x65]
   1400552f8:	(bad)  
   1400552f9:	jo     0x14005534e
   1400552fb:	gs je  0x140055347
   1400552fe:	outs   dx,BYTE PTR ds:[rsi]
   1400552ff:	outs   dx,WORD PTR ds:[rsi]
   140055301:	jb     0x140055370
   140055303:	(bad)  
   140055304:	je     0x14005536f
   140055306:	outs   dx,DWORD PTR ds:[rsi]
   140055307:	outs   dx,BYTE PTR ds:[rsi]
   140055308:	add    BYTE PTR [rax],al
   14005530a:	(bad)  
   14005530b:	add    cl,BYTE PTR [rax+0x65]
   14005530e:	(bad)  
   14005530f:	jo     0x140055354
   140055311:	jb     0x140055378
   140055313:	(bad)  
   140055314:	je     0x14005537b
   140055316:	add    BYTE PTR [rax],al
   140055318:	out    dx,al
   140055319:	add    BYTE PTR [rbp+0x6e],al
   14005531c:	movsxd ebp,DWORD PTR [rdi+0x64]
   14005531f:	gs push rax
   140055321:	outs   dx,DWORD PTR ds:[rsi]
   140055322:	imul   ebp,DWORD PTR [rsi+0x74],0xcb007265
   140055329:	add    BYTE PTR [rbp+riz*2+0x63],al
   14005532d:	outs   dx,DWORD PTR ds:[rsi]
   14005532e:	fs gs push rax
   140055331:	outs   dx,DWORD PTR ds:[rsi]
   140055332:	imul   ebp,DWORD PTR [rsi+0x74],0x5a007265
   140055339:	add    DWORD PTR [rsi+0x6c],eax
   14005533c:	jae    0x140055385
   14005533e:	gs je  0x140055397
   140055341:	(bad)  
   140055342:	ins    BYTE PTR es:[rdi],dx
   140055343:	jne    0x1400553aa
   140055345:	add    BYTE PTR [rbx+0x1],bl
   140055348:	rex.RX ins BYTE PTR es:[rdi],dx
   14005534a:	jae    0x14005539f
   14005534c:	gs je  0x1400553a5
   14005534f:	(bad)  
   140055350:	ins    BYTE PTR es:[rdi],dx
   140055351:	jne    0x1400553b8
   140055353:	add    BYTE PTR [rcx+0x1],bl
   140055356:	rex.RX ins BYTE PTR es:[rdi],dx
   140055358:	jae    0x1400553a0
   14005535a:	jb     0x1400553c1
   14005535c:	add    BYTE PTR gs:[rax+0x1],bl
   140055360:	rex.RX ins BYTE PTR es:[rdi],dx
   140055362:	jae    0x1400553a5
   140055364:	ins    BYTE PTR es:[rdi],dx
   140055365:	ins    BYTE PTR es:[rdi],dx
   140055366:	outs   dx,DWORD PTR ds:[rsi]
   140055367:	movsxd eax,DWORD PTR [rax]
   140055369:	add    BYTE PTR [rax+0x1],bh
   14005536c:	rex.RXB
   14005536d:	gs je  0x1400553b3
   140055370:	push   rax
   140055371:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140055373:	outs   dx,WORD PTR ds:[rsi]
   140055375:	add    BYTE PTR [rsi],bh
   140055377:	add    al,BYTE PTR [rdi+0x65]
   14005537a:	je     0x1400553cb
   14005537c:	rex.RB
   14005537d:	rex.WRB
   14005537e:	rex.XB push r8
   140055380:	add    BYTE PTR [rax],al
   140055382:	or     al,0x3
   140055384:	rex.WB jae 0x1400553dd
   140055387:	(bad)  
   140055388:	ins    BYTE PTR es:[rdi],dx
   140055389:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   140055391:	add    BYTE PTR gs:[esi+0x1],ah
   140055396:	rex.RX jb 0x1400553fe
   140055399:	rex.RB outs dx,BYTE PTR gs:[rsi]
   14005539c:	jbe    0x140055407
   14005539e:	jb     0x14005540f
   1400553a0:	outs   dx,BYTE PTR ds:[rsi]
   1400553a1:	ins    DWORD PTR es:[rdi],dx
   1400553a2:	outs   dx,BYTE PTR gs:[rsi]
   1400553a4:	je     0x1400553f9
   1400553a6:	je     0x14005541a
   1400553a8:	imul   ebp,DWORD PTR [rsi+0x67],0xdf004173
   1400553af:	add    DWORD PTR [rdi+0x65],eax
   1400553b2:	je     0x1400553f9
   1400553b4:	outs   dx,BYTE PTR ds:[rsi]
   1400553b5:	jbe    0x140055420
   1400553b7:	jb     0x140055428
   1400553b9:	outs   dx,BYTE PTR ds:[rsi]
   1400553ba:	ins    DWORD PTR es:[rdi],dx
   1400553bb:	outs   dx,BYTE PTR gs:[rsi]
   1400553bd:	je     0x140055412
   1400553bf:	je     0x140055433
   1400553c1:	imul   ebp,DWORD PTR [rsi+0x67],0x1670073
   1400553c8:	rex.RX jb 0x140055430
   1400553cb:	rex.RB outs dx,BYTE PTR gs:[rsi]
   1400553ce:	jbe    0x140055439
   1400553d0:	jb     0x140055441
   1400553d2:	outs   dx,BYTE PTR ds:[rsi]
   1400553d3:	ins    DWORD PTR es:[rdi],dx
   1400553d4:	outs   dx,BYTE PTR gs:[rsi]
   1400553d6:	je     0x14005542b
   1400553d8:	je     0x14005544c
   1400553da:	imul   ebp,DWORD PTR [rsi+0x67],0xe1005773
   1400553e1:	add    DWORD PTR [rdi+0x65],eax
   1400553e4:	je     0x14005542b
   1400553e6:	outs   dx,BYTE PTR ds:[rsi]
   1400553e7:	jbe    0x140055452
   1400553e9:	jb     0x14005545a
   1400553eb:	outs   dx,BYTE PTR ds:[rsi]
   1400553ec:	ins    DWORD PTR es:[rdi],dx
   1400553ed:	outs   dx,BYTE PTR gs:[rsi]
   1400553ef:	je     0x140055444
   1400553f1:	je     0x140055465
   1400553f3:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   1400553fa:	test   eax,0x65755103
   1400553ff:	jb     0x14005547a
   140055401:	push   rax
   140055402:	gs jb  0x14005546b
   140055405:	outs   dx,DWORD PTR ds:[rsi]
   140055406:	jb     0x140055475
   140055408:	(bad)  
   140055409:	outs   dx,BYTE PTR ds:[rsi]
   14005540a:	movsxd esp,DWORD PTR [rbp+0x43]
   14005540d:	outs   dx,DWORD PTR ds:[rsi]
   14005540e:	jne    0x14005547e
   140055410:	je     0x140055477
   140055412:	jb     0x140055414
   140055414:	(bad)  
   140055415:	add    al,BYTE PTR [rdi+0x65]
   140055418:	je     0x14005546e
   14005541a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140055421:	je     0x140055423
   140055423:	add    BYTE PTR [rax+0x74654702],al
   140055429:	push   rbx
   14005542a:	jns    0x14005549f
   14005542c:	je     0x140055493
   14005542e:	ins    DWORD PTR es:[rdi],dx
   14005542f:	push   rsp
   140055430:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140055437:	ins    BYTE PTR es:[rdi],dx
   140055438:	gs push rsp
   14005543a:	imul   ebp,DWORD PTR [rbp+0x65],0x4c032d00
   140055441:	rex.XB
   140055442:	rex.WRB (bad) 
   140055444:	jo     0x140055499
   140055446:	je     0x1400554ba
   140055448:	imul   ebp,DWORD PTR [rsi+0x67],0x2f000041
   14005544f:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   140055453:	(bad)  
   140055454:	jo     0x1400554a9
   140055456:	je     0x1400554ca
   140055458:	imul   ebp,DWORD PTR [rsi+0x67],0x74000057
   14005545f:	add    al,0x53
   140055461:	gs je  0x1400554aa
   140055464:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   14005546c:	gs jb  0x14005546f
   14005546f:	add    BYTE PTR [rcx+0x4],ah
   140055472:	push   rbx
   140055473:	gs je  0x1400554bb
   140055476:	outs   dx,BYTE PTR ds:[rsi]
   140055477:	fs rex.WRXB
   140055479:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x5100
   140055481:	add    al,BYTE PTR [rdi+0x65]
   140055484:	je     0x1400554d6
   140055486:	jb     0x1400554f7
   140055488:	movsxd esp,DWORD PTR [rbp+0x73]
   14005548b:	jae    0x1400554d5
   14005548d:	gs (bad) 
   14005548f:	jo     0x140055491
   140055491:	add    bl,al
   140055493:	add    edx,DWORD PTR [rdx+0x65]
   140055496:	(bad)  
   140055497:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x4902eb00
   1400554a1:	outs   dx,BYTE PTR ds:[rsi]
   1400554a2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400554aa:	rex.XB jb 0x140055516
   1400554ad:	je     0x140055518
   1400554af:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400554b2:	push   rbx
   1400554b3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400554b8:	outs   dx,BYTE PTR ds:[rsi]
   1400554b9:	rex.B outs dx,BYTE PTR ds:[rsi]
   1400554bb:	fs push rbx
   1400554bd:	jo     0x140055528
   1400554bf:	outs   dx,BYTE PTR ds:[rsi]
   1400554c0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400554c2:	jne    0x140055532
   1400554c4:	je     0x1400554c6
   1400554c6:	sub    DWORD PTR [rip+0x74697257],eax        # 0x1b46ec723
   1400554cc:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400554cf:	outs   dx,BYTE PTR ds:[rsi]
   1400554d0:	jae    0x140055541
   1400554d2:	ins    BYTE PTR es:[rdi],dx
   1400554d3:	add    BYTE PTR gs:[r14+0x74654701],sil
   1400554db:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400554dd:	outs   dx,BYTE PTR ds:[rsi]
   1400554de:	jae    0x14005554f
   1400554e0:	ins    BYTE PTR es:[rdi],dx
   1400554e1:	gs rex.WRXB jne 0x140055559
   1400554e5:	jo     0x14005555c
   1400554e7:	je     0x14005552c
   1400554e9:	push   rax
   1400554ea:	add    BYTE PTR [rax],al
   1400554ec:	ins    DWORD PTR es:[rdi],dx
   1400554ed:	add    al,BYTE PTR [rdi+0x65]
   1400554f0:	je     0x140055545
   1400554f2:	je     0x140055566
   1400554f4:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   1400554fb:	add    BYTE PTR [r8],al
   1400554fe:	jo     0x140055502
   140055500:	rex.RXB
   140055501:	gs je  0x140055557
   140055504:	je     0x140055578
   140055506:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   14005550d:	push   rdi
   14005550e:	add    BYTE PTR [rax],al
   140055510:	int    0x1
   140055512:	rex.RXB
   140055513:	gs je  0x14005555a
   140055516:	(bad)  
   140055517:	je     0x14005557e
   140055519:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14005551b:	jb     0x14005558a
   14005551d:	(bad)  
   14005551e:	je     0x140055561
   140055520:	add    BYTE PTR [rax],al
   140055522:	pushf  
   140055523:	add    al,BYTE PTR [rdi+0x65]
   140055526:	je     0x14005557c
   140055528:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   14005552f:	(bad)  
   140055530:	je     0x140055573
   140055532:	add    BYTE PTR [rax],al
   140055534:	add    BYTE PTR fs:[rbx+0x6f],al
   140055538:	ins    DWORD PTR es:[rdi],dx
   140055539:	jo     0x14005559c
   14005553b:	jb     0x1400555a2
   14005553d:	push   rbx
   14005553e:	je     0x1400555b2
   140055540:	imul   ebp,DWORD PTR [rsi+0x67],0x64000057
   140055547:	add    al,0x53
   140055549:	gs je  0x140055591
   14005554c:	outs   dx,BYTE PTR ds:[rsi]
   14005554d:	jbe    0x1400555b8
   14005554f:	jb     0x1400555c0
   140055551:	outs   dx,BYTE PTR ds:[rsi]
   140055552:	ins    DWORD PTR es:[rdi],dx
   140055553:	outs   dx,BYTE PTR gs:[rsi]
   140055555:	je     0x1400555ad
   140055557:	(bad)  
   140055558:	jb     0x1400555c3
   14005555a:	(bad)  
   14005555b:	(bad)  
   14005555c:	ins    BYTE PTR es:[rdi],dx
   14005555d:	add    BYTE PTR gs:[r9+0x0],spl
   140055562:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140055564:	ins    DWORD PTR es:[rdi],dx
   140055565:	jo     0x1400555c8
   140055567:	jb     0x1400555ce
   140055569:	push   rbx
   14005556a:	je     0x1400555de
   14005556c:	imul   ebp,DWORD PTR [rsi+0x67],0xdc000041
   140055573:	add    cl,BYTE PTR [rax+0x65]
   140055576:	(bad)  
   140055577:	jo     0x1400555cc
   140055579:	imul   edi,DWORD PTR [rdx+0x65],0x454b0000
   140055580:	push   rdx
   140055581:	rex.WRX
   140055582:	rex.RB
   140055583:	xor    r14,QWORD PTR [rdx]
   140055586:	cs fs ins BYTE PTR es:[rdi],dx
   140055589:	ins    BYTE PTR es:[rdi],dx
   14005558a:	add    BYTE PTR [rax],al
   14005558c:	or     al,0x0
   14005558e:	push   rbp
   14005558f:	jo     0x1400555f5
   140055591:	(bad)  
   140055592:	je     0x1400555f9
   140055594:	rex.R jb 0x140055600
   140055597:	jbe    0x1400555fe
   140055599:	jb     0x1400555e1
   14005559b:	outs   dx,DWORD PTR ds:[rsi]
   14005559c:	jb     0x1400555ee
   14005559e:	ins    BYTE PTR es:[rdi],dx
   14005559f:	jne    0x140055608
   1400555a1:	rex.B outs dx,BYTE PTR ds:[rsi]
   1400555a3:	fs push rax
   1400555a5:	ins    BYTE PTR es:[rdi],dx
   1400555a6:	(bad)  
   1400555a7:	jns    0x1400555ed
   1400555a9:	gs jbe 0x140055615
   1400555ac:	movsxd esp,DWORD PTR [rbp+0x73]
   1400555af:	push   rdi
   1400555b0:	add    BYTE PTR [rax],al
   1400555b2:	outs   dx,BYTE PTR ds:[rsi]
   1400555b3:	gs ja  0x14005561a
   1400555b6:	gs jbe 0x1400555e7
   1400555b9:	fs ins BYTE PTR es:[rdi],dx
   1400555bb:	ins    BYTE PTR es:[rdi],dx
   1400555bc:	add    BYTE PTR [rax],al
   1400555be:	xor    BYTE PTR [rdx],al
   1400555c0:	push   rdx
   1400555c1:	gs rex.XB ins BYTE PTR es:[edi],dx
   1400555c5:	outs   dx,DWORD PTR ds:[rsi]
   1400555c6:	jae    0x14005562d
   1400555c8:	rex.WXB
   1400555c9:	gs jns 0x1400555cc
   1400555cc:	(bad)  
   1400555cd:	add    dl,BYTE PTR [rdx+0x65]
   1400555d0:	addr32 rex.WRXB jo 0x140055639
   1400555d4:	outs   dx,BYTE PTR ds:[rsi]
   1400555d5:	rex.WXB
   1400555d6:	gs jns 0x14005561e
   1400555d9:	js     0x140055632
   1400555db:	add    BYTE PTR [rcx],bh
   1400555dd:	add    dl,BYTE PTR [rdx+0x65]
   1400555e0:	addr32 rex.XB jb 0x140055649
   1400555e4:	(bad)  
   1400555e5:	je     0x14005564c
   1400555e7:	rex.WXB
   1400555e8:	gs jns 0x140055630
   1400555eb:	js     0x140055644
   1400555ed:	add    BYTE PTR [rax+0x2],cl
   1400555f0:	push   rdx
   1400555f1:	gs addr32 rex.R
   1400555f4:	gs ins BYTE PTR es:[rdi],dx
   1400555f6:	gs je  0x14005565e
   1400555f9:	push   rsi
   1400555fa:	(bad)  
   1400555fb:	ins    BYTE PTR es:[rdi],dx
   1400555fc:	jne    0x140055663
   1400555fe:	push   rdi
   1400555ff:	add    BYTE PTR [rsi+0x2],bh
   140055602:	push   rdx
   140055603:	gs addr32 push rbx
   140055606:	gs je  0x14005565f
   140055609:	(bad)  
   14005560a:	ins    BYTE PTR es:[rdi],dx
   14005560b:	jne    0x140055672
   14005560d:	rex.RB js 0x140055667
   140055610:	add    BYTE PTR [rax],al
   140055612:	outs   dx,BYTE PTR ds:[rsi]
   140055613:	add    dl,BYTE PTR [rdx+0x65]
   140055616:	addr32 push rcx
   140055618:	jne    0x14005567f
   14005561a:	jb     0x140055695
   14005561c:	push   rsi
   14005561d:	(bad)  
   14005561e:	ins    BYTE PTR es:[rdi],dx
   14005561f:	jne    0x140055686
   140055621:	rex.RB js 0x14005567b
   140055624:	add    BYTE PTR [rax],al
   140055626:	mov    dh,0x2
   140055628:	push   rbx
   140055629:	gs je  0x14005567f
   14005562c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140055630:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140055638:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   14005563f:	movsxd ebp,DWORD PTR [rax+rax*1+0x77]
   140055643:	add    DWORD PTR [rcx+0x6e],ecx
   140055646:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14005564e:	push   rbx
   14005564f:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140055653:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14005565b:	imul   esi,DWORD PTR [rax+0x74],0x726f
   140055662:	rex.B
   140055663:	rex.R push rsi
   140055665:	push   r8
   140055667:	xor    rsi,QWORD PTR [r10]
   14005566a:	cs fs ins BYTE PTR es:[rdi],dx
   14005566d:	ins    BYTE PTR es:[rdi],dx
   14005566e:	add    BYTE PTR [rax],al
   140055670:	(bad)  
   140055671:	add    DWORD PTR [rbx+0x65],edx
   140055674:	je     0x1400556eb
   140055676:	jo     0x1400556bc
   140055678:	imul   eax,DWORD PTR [rbp+riz*2+0x73],0x796f7274
   140055680:	rex.R
   140055681:	gs jbe 0x1400556ed
   140055684:	movsxd esp,DWORD PTR [rbp+0x49]
   140055687:	outs   dx,BYTE PTR ds:[rsi]
   140055688:	outs   dx,WORD PTR ds:[rsi]
   14005568a:	imul   r14,QWORD PTR [rbx+0x74],0x1730000
   140055692:	push   rbx
   140055693:	gs je  0x14005570b
   140055696:	jo     0x1400556dc
   140055698:	imul   eax,DWORD PTR [rdi+0x65],0x76654474
   14005569f:	imul   esp,DWORD PTR [rbx+0x65],0x69676552
   1400556a6:	jae    0x14005571c
   1400556a8:	jb     0x140055723
   1400556aa:	push   rax
   1400556ab:	jb     0x14005571c
   1400556ad:	jo     0x140055714
   1400556af:	jb     0x140055725
   1400556b1:	jns    0x1400556f4
   1400556b3:	add    BYTE PTR [rdx+0x1],al
   1400556b6:	push   rbx
   1400556b7:	gs je  0x14005572f
   1400556ba:	jo     0x140055700
   1400556bc:	imul   eax,DWORD PTR [rbp+0x6e],0x65446d75
   1400556c3:	jbe    0x14005572e
   1400556c5:	movsxd esp,DWORD PTR [rbp+0x49]
   1400556c8:	outs   dx,BYTE PTR ds:[rsi]
   1400556c9:	outs   dx,WORD PTR ds:[rsi]
   1400556cb:	add    BYTE PTR [rbx+0x1],dl
   1400556ce:	push   rbx
   1400556cf:	gs je  0x140055747
   1400556d2:	jo     0x140055718
   1400556d4:	imul   eax,DWORD PTR [rdi+0x65],0x616c4374
   1400556db:	jae    0x140055750
   1400556dd:	rex.R
   1400556de:	gs jbe 0x140055754
   1400556e1:	add    BYTE PTR [r8],al
   1400556e4:	and    al,0x1
   1400556e6:	push   rbx
   1400556e7:	gs je  0x14005575f
   1400556ea:	jo     0x140055730
   1400556ec:	imul   eax,DWORD PTR [rbx+0x61],0x6c436c6c
   1400556f3:	(bad)  
   1400556f4:	jae    0x140055769
   1400556f6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400556f8:	jae    0x14005576e
   1400556fa:	(bad)  
   1400556fb:	ins    BYTE PTR es:[rdi],dx
   1400556fc:	ins    BYTE PTR es:[rdi],dx
   1400556fd:	gs jb  0x140055700
   140055700:	mov    dl,0x1
   140055702:	push   rbx
   140055703:	gs je  0x14005577b
   140055706:	jo     0x14005574c
   140055708:	imul   edx,DWORD PTR [rbx+0x65],0x76654474
   14005570f:	imul   esp,DWORD PTR [rbx+0x65],0x69676552
   140055716:	jae    0x14005578c
   140055718:	jb     0x140055793
   14005571a:	push   rax
   14005571b:	jb     0x14005578c
   14005571d:	jo     0x140055784
   14005571f:	jb     0x140055795
   140055721:	jns    0x140055764
   140055723:	add    BYTE PTR [rip+0x74655301],dh        # 0x1b46aaa2a
   140055729:	jne    0x14005579b
   14005572b:	imul   r8d,DWORD PTR [rbx+0x72],0x65746165
   140055733:	rex.R
   140055734:	gs jbe 0x1400557a0
   140055737:	movsxd esp,DWORD PTR [rbp+0x49]
   14005573a:	outs   dx,BYTE PTR ds:[rsi]
   14005573b:	outs   dx,WORD PTR ds:[rsi]
   14005573d:	push   rdi
   14005573e:	add    BYTE PTR [rax],al
   140055740:	xor    al,BYTE PTR [rcx]
   140055742:	push   rbx
   140055743:	gs je  0x1400557bb
   140055746:	jo     0x14005578c
   140055748:	imul   eax,DWORD PTR [rbx+0x72],0x65746165
   14005574f:	rex.R
   140055750:	gs jbe 0x1400557bc
   140055753:	movsxd esp,DWORD PTR [rbp+0x49]
   140055756:	outs   dx,BYTE PTR ds:[rsi]
   140055757:	outs   dx,WORD PTR ds:[rsi]
   140055759:	imul   r14,QWORD PTR [rbx+0x74],0x53018100
   140055761:	gs je  0x1400557d9
   140055764:	jo     0x1400557aa
   140055766:	imul   eax,DWORD PTR [rdi+0x65],0x464e4974
   14005576d:	rex.XB ins BYTE PTR es:[rdi],dx
   14005576f:	(bad)  
   140055770:	jae    0x1400557e5
   140055772:	push   rdi
   140055773:	add    BYTE PTR [rbx+0x45],dl
   140055776:	push   rsp
   140055777:	push   rbp
   140055778:	push   rax
   140055779:	push   r8
   14005577b:	rex.WB
   14005577c:	cs fs ins BYTE PTR es:[rdi],dx
   14005577f:	ins    BYTE PTR es:[rdi],dx
   140055780:	add    BYTE PTR [rax],al
   140055782:	ins    BYTE PTR es:[rdi],dx
   140055783:	add    BYTE PTR [rdi+0x53],dl
   140055786:	rex.XB
   140055787:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140055789:	jae    0x1400557ff
   14005578b:	(bad)  
   14005578c:	ins    BYTE PTR es:[rdi],dx
   14005578d:	ins    BYTE PTR es:[rdi],dx
   14005578e:	push   rax
   14005578f:	jb     0x140055800
   140055791:	jbe    0x1400557fc
   140055793:	fs gs jb 0x140055797
   140055797:	add    BYTE PTR [rax+rax*1+0x57],bl
   14005579b:	push   rbx
   14005579c:	rex.XB
   14005579d:	rex.R
   14005579e:	imul   ebp,DWORD PTR gs:[rsi+0x73],0x6c6c6174
   1400557a6:	push   rax
   1400557a7:	jb     0x140055818
   1400557a9:	jbe    0x140055814
   1400557ab:	fs gs jb 0x1400557e2
   1400557af:	xor    al,BYTE PTR [rax]
   1400557b1:	add    BYTE PTR [rdi+0x53],dl
   1400557b4:	xor    bl,BYTE PTR [rdi+0x33]
   1400557b7:	xor    ch,BYTE PTR [rsi]
   1400557b9:	fs ins BYTE PTR es:[rdi],dx
   1400557bb:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140056000 <.data>:
   140056000:	sbb    al,bl
   140056002:	add    eax,DWORD PTR [rax+0x1]
   140056005:	add    BYTE PTR [rax],al
   140056007:	add    al,dh
   140056009:	xlat   BYTE PTR ds:[rbx]
   14005600a:	add    eax,DWORD PTR [rax+0x1]
   14005600d:	add    BYTE PTR [rax],al
   14005600f:	add    BYTE PTR [rax+0x1400020],dh
   140056015:	add    BYTE PTR [rax],al
   140056017:	add    al,ah
   140056019:	xlat   BYTE PTR ds:[rbx]
   14005601a:	add    eax,DWORD PTR [rax+0x1]
   14005601d:	add    BYTE PTR [rax],al
   14005601f:	add    BYTE PTR [rax+0x14003d7],ah
   140056025:	add    BYTE PTR [rax],al
   140056027:	add    BYTE PTR [rax+0x22],al
   14005602a:	add    BYTE PTR [rax+0x1],al
   14005602d:	add    BYTE PTR [rax],al
   14005602f:	add    BYTE PTR [rax+0x14003d7],cl
   140056035:	add    BYTE PTR [rax],al
   140056037:	add    BYTE PTR [rax-0x29],bl
   14005603a:	add    eax,DWORD PTR [rax+0x1]
   14005603d:	add    BYTE PTR [rax],al
   14005603f:	add    BYTE PTR [rax],al
   140056041:	and    eax,0x14000
   140056046:	add    BYTE PTR [rax],al
   140056048:	rex.W xlat BYTE PTR ds:[rbx]
   14005604a:	add    eax,DWORD PTR [rax+0x1]
   14005604d:	add    BYTE PTR [rax],al
   14005604f:	add    BYTE PTR [rax],dh
   140056051:	xlat   BYTE PTR ds:[rbx]
   140056052:	add    eax,DWORD PTR [rax+0x1]
   140056055:	add    BYTE PTR [rax],al
   140056057:	add    BYTE PTR [rax+0x140001a],dh
   14005605d:	add    BYTE PTR [rax],al
   14005605f:	add    BYTE PTR [rax],ah
   140056061:	xlat   BYTE PTR ds:[rbx]
   140056062:	add    eax,DWORD PTR [rax+0x1]
   140056065:	add    BYTE PTR [rax],al
   140056067:	add    BYTE PTR [rax],dl
   140056069:	xlat   BYTE PTR ds:[rbx]
   14005606a:	add    eax,DWORD PTR [rax+0x1]
   14005606d:	add    BYTE PTR [rax],al
   14005606f:	add    BYTE PTR [rax+0x140001b],al
	...
   14005608d:	add    BYTE PTR [rax],al
   14005608f:	add    BYTE PTR [rax],ah
   140056091:	and    BYTE PTR [rax],ah
   140056093:	and    BYTE PTR [rax],ah
   140056095:	and    BYTE PTR [rax],ah
   140056097:	and    BYTE PTR [rax],ah
   140056099:	and    BYTE PTR [rax],ah
   14005609b:	and    BYTE PTR [rax],ah
   14005609d:	and    BYTE PTR [rax],ah
   14005609f:	and    BYTE PTR [rax],dh
   1400560a1:	xor    BYTE PTR [rax],dh
   1400560a3:	xor    BYTE PTR [rax],dh
   1400560a5:	xor    BYTE PTR [rax],dh
   1400560a7:	xor    BYTE PTR [rax],dh
   1400560a9:	xor    BYTE PTR [rax],dh
   1400560ab:	xor    BYTE PTR [rax],dh
   1400560ad:	xor    BYTE PTR [rax],dh
   1400560af:	xor    BYTE PTR [rcx],al
   1400560b1:	add    BYTE PTR cs:[rax],al
   1400560b4:	jg     0x1400560b6
   1400560b6:	add    BYTE PTR [rax],al
   1400560b8:	add    DWORD PTR [rax],eax
   1400560ba:	add    BYTE PTR [rax],al
   1400560bc:	add    BYTE PTR [rax],al
   1400560be:	add    BYTE PTR [rax],al
   1400560c0:	and    BYTE PTR [rax],al
   1400560c2:	and    BYTE PTR [rax],al
   1400560c4:	and    BYTE PTR [rax],al
   1400560c6:	and    BYTE PTR [rax],al
   1400560c8:	and    BYTE PTR [rax],al
   1400560ca:	and    BYTE PTR [rax],al
   1400560cc:	and    BYTE PTR [rax],al
   1400560ce:	and    BYTE PTR [rax],al
   1400560d0:	and    BYTE PTR [rax],al
   1400560d2:	and    BYTE PTR [rax],al
   1400560d4:	and    BYTE PTR [rax],al
   1400560d6:	and    BYTE PTR [rax],al
   1400560d8:	and    BYTE PTR [rax],al
   1400560da:	and    BYTE PTR [rax],al
   1400560dc:	and    BYTE PTR [rax],al
   1400560de:	and    BYTE PTR [rax],al
   1400560e0:	xor    BYTE PTR [rax],al
   1400560e2:	xor    BYTE PTR [rax],al
   1400560e4:	xor    BYTE PTR [rax],al
   1400560e6:	xor    BYTE PTR [rax],al
   1400560e8:	xor    BYTE PTR [rax],al
   1400560ea:	xor    BYTE PTR [rax],al
   1400560ec:	xor    BYTE PTR [rax],al
   1400560ee:	xor    BYTE PTR [rax],al
   1400560f0:	xor    BYTE PTR [rax],al
   1400560f2:	xor    BYTE PTR [rax],al
   1400560f4:	xor    BYTE PTR [rax],al
   1400560f6:	xor    BYTE PTR [rax],al
   1400560f8:	xor    BYTE PTR [rax],al
   1400560fa:	xor    BYTE PTR [rax],al
   1400560fc:	xor    BYTE PTR [rax],al
   1400560fe:	xor    BYTE PTR [rax],al
   140056100:	jg     0x140056102
   140056102:	add    DWORD PTR [rcx],eax
	...
   140056110:	add    eax,DWORD PTR [rax]
   140056112:	add    BYTE PTR [rax],al
   140056114:	lahf   
   140056115:	rex.WRX add BYTE PTR [rax],r8b
   140056118:	(bad)  
   140056119:	add    BYTE PTR [rax],al
   14005611b:	add    BYTE PTR [rcx],al
   14005611d:	add    BYTE PTR [rax],al
   14005611f:	add    BYTE PTR [rax+rax*1],al
   140056122:	add    BYTE PTR [rax],al
   140056124:	add    BYTE PTR [rax],al
   140056126:	add    BYTE PTR [rax],al
   140056128:	sar    BYTE PTR [rdx],1
   14005612a:	add    al,0x40
   14005612c:	add    DWORD PTR [rax],eax
   14005612e:	add    BYTE PTR [rax],al
   140056130:	sar    BYTE PTR [rdx],0x4
   140056133:	rex add DWORD PTR [rax],eax
   140056136:	add    BYTE PTR [rax],al
   140056138:	mov    al,0x3a
   14005613a:	add    al,0x40
   14005613c:	add    DWORD PTR [rax],eax
   14005613e:	add    BYTE PTR [rax],al
   140056140:	cwde   
   140056141:	cmp    al,BYTE PTR [rax+rax*2]
   140056144:	add    DWORD PTR [rax],eax
   140056146:	add    BYTE PTR [rax],al
   140056148:	mov    WORD PTR [rdx],?
   14005614a:	add    al,0x40
   14005614c:	add    DWORD PTR [rax],eax
   14005614e:	add    BYTE PTR [rax],al
   140056150:	cmp    BYTE PTR [rdx],0x4
   140056153:	rex add DWORD PTR [rax],eax
   140056156:	add    BYTE PTR [rax],al
   140056158:	jo     0x140056194
   14005615a:	add    al,0x40
   14005615c:	add    DWORD PTR [rax],eax
   14005615e:	add    BYTE PTR [rax],al
   140056160:	push   0x140043a
   140056165:	add    BYTE PTR [rax],al
   140056167:	add    BYTE PTR [rax+0x3a],ah
   14005616a:	add    al,0x40
   14005616c:	add    DWORD PTR [rax],eax
   14005616e:	add    BYTE PTR [rax],al
   140056170:	pop    rax
   140056171:	cmp    al,BYTE PTR [rax+rax*2]
   140056174:	add    DWORD PTR [rax],eax
   140056176:	add    BYTE PTR [rax],al
   140056178:	push   rax
   140056179:	cmp    al,BYTE PTR [rax+rax*2]
   14005617c:	add    DWORD PTR [rax],eax
   14005617e:	add    BYTE PTR [rax],al
   140056180:	rex.W cmp al,BYTE PTR [rax+rax*2]
   140056184:	add    DWORD PTR [rax],eax
   140056186:	add    BYTE PTR [rax],al
   140056188:	cmp    al,BYTE PTR [rax+rax*2]
   14005618c:	add    DWORD PTR [rax],eax
	...
   1400561ce:	add    BYTE PTR [rax],al
   1400561d0:	add    al,0x0
   1400561d2:	add    BYTE PTR [rax],al
   1400561d4:	scas   eax,DWORD PTR es:[rdi]
   1400561d5:	outs   dx,DWORD PTR ds:[rsi]
   1400561d6:	add    BYTE PTR [rax],al
   1400561d8:	or     BYTE PTR [rax],al
   1400561da:	add    BYTE PTR [rax],al
   1400561dc:	add    DWORD PTR [rax],eax
   1400561de:	add    BYTE PTR [rax],al
   1400561e0:	add    eax,DWORD PTR [rax]
   1400561e2:	add    BYTE PTR [rax],al
   1400561e4:	add    BYTE PTR [rax],al
   1400561e6:	add    BYTE PTR [rax],al
   1400561e8:	xor    BYTE PTR [rdx],bh
   1400561ea:	add    al,0x40
   1400561ec:	add    DWORD PTR [rax],eax
   1400561ee:	add    BYTE PTR [rax],al
   1400561f0:	and    BYTE PTR [rdx],bh
   1400561f2:	add    al,0x40
   1400561f4:	add    DWORD PTR [rax],eax
   1400561f6:	add    BYTE PTR [rax],al
   1400561f8:	adc    BYTE PTR [rdx],bh
   1400561fa:	add    al,0x40
   1400561fc:	add    DWORD PTR [rax],eax
   1400561fe:	add    BYTE PTR [rax],al
   140056200:	add    BYTE PTR [rdx],bh
   140056202:	add    al,0x40
   140056204:	add    DWORD PTR [rax],eax
   140056206:	add    BYTE PTR [rax],al
   140056208:	clc    
   140056209:	cmp    DWORD PTR [rax+rax*2],eax
   14005620c:	add    DWORD PTR [rax],eax
   14005620e:	add    BYTE PTR [rax],al
   140056210:	hlt    
   140056211:	cmp    DWORD PTR [rax+rax*2],eax
   140056214:	add    DWORD PTR [rax],eax
   140056216:	add    BYTE PTR [rax],al
   140056218:	in     al,dx
   140056219:	cmp    DWORD PTR [rax+rax*2],eax
   14005621c:	add    DWORD PTR [rax],eax
   14005621e:	add    BYTE PTR [rax],al
   140056220:	in     al,0x39
   140056222:	add    al,0x40
   140056224:	add    DWORD PTR [rax],eax
   140056226:	add    BYTE PTR [rax],al
   140056228:	fdivr  DWORD PTR [rcx]
   14005622a:	add    al,0x40
   14005622c:	add    DWORD PTR [rax],eax
   14005622e:	add    BYTE PTR [rax],al
   140056230:	int3   
   140056231:	cmp    DWORD PTR [rax+rax*2],eax
   140056234:	add    DWORD PTR [rax],eax
   140056236:	add    BYTE PTR [rax],al
   140056238:	enter  0x439,0x40
   14005623c:	add    DWORD PTR [rax],eax
	...
   14005628e:	add    BYTE PTR [rax],al
   140056290:	add    eax,0xb0000000
   140056295:	outs   dx,DWORD PTR ds:[rsi]
   140056296:	add    BYTE PTR [rax],al
   140056298:	or     DWORD PTR [rax],eax
   14005629a:	add    BYTE PTR [rax],al
   14005629c:	add    DWORD PTR [rax],eax
   14005629e:	add    BYTE PTR [rax],al
   1400562a0:	add    eax,DWORD PTR [rax]
   1400562a2:	add    BYTE PTR [rax],al
   1400562a4:	add    BYTE PTR [rax],al
   1400562a6:	add    BYTE PTR [rax],al
   1400562a8:	mov    eax,0x1400439
   1400562ad:	add    BYTE PTR [rax],al
   1400562af:	add    BYTE PTR [rax+0x1400439],ch
   1400562b5:	add    BYTE PTR [rax],al
   1400562b7:	add    BYTE PTR [rax+0x1400439],bl
   1400562bd:	add    BYTE PTR [rax],al
   1400562bf:	add    BYTE PTR [rax+0x1400439],cl
   1400562c5:	add    BYTE PTR [rax],al
   1400562c7:	add    BYTE PTR [rax+0x1400439],al
   1400562cd:	add    BYTE PTR [rax],al
   1400562cf:	add    BYTE PTR [rcx+rdi*1+0x4],bh
   1400562d3:	rex add DWORD PTR [rax],eax
   1400562d6:	add    BYTE PTR [rax],al
   1400562d8:	jo     0x140056313
   1400562da:	add    al,0x40
   1400562dc:	add    DWORD PTR [rax],eax
   1400562de:	add    BYTE PTR [rax],al
   1400562e0:	pop    rax
   1400562e1:	cmp    DWORD PTR [rax+rax*2],eax
   1400562e4:	add    DWORD PTR [rax],eax
   1400562e6:	add    BYTE PTR [rax],al
   1400562e8:	push   rax
   1400562e9:	cmp    DWORD PTR [rax+rax*2],eax
   1400562ec:	add    DWORD PTR [rax],eax
   1400562ee:	add    BYTE PTR [rax],al
   1400562f0:	cmp    DWORD PTR [rax+rax*2],r8d
   1400562f4:	add    DWORD PTR [rax],eax
   1400562f6:	add    BYTE PTR [rax],al
   1400562f8:	cmp    al,0x39
   1400562fa:	add    al,0x40
   1400562fc:	add    DWORD PTR [rax],eax
   1400562fe:	add    BYTE PTR [rax],al
   140056300:	cmp    BYTE PTR [rcx],bh
   140056302:	add    al,0x40
   140056304:	add    DWORD PTR [rax],eax
	...
   14005634e:	add    BYTE PTR [rax],al
   140056350:	(bad)  
   140056351:	add    BYTE PTR [rax],al
   140056353:	add    BYTE PTR [rcx+0xa00006f],dh
   140056359:	add    BYTE PTR [rax],al
   14005635b:	add    BYTE PTR [rcx],al
   14005635d:	add    BYTE PTR [rax],al
   14005635f:	add    BYTE PTR [rbx],al
   140056361:	add    BYTE PTR [rax],al
   140056363:	add    BYTE PTR [rax],al
   140056365:	add    BYTE PTR [rax],al
   140056367:	add    BYTE PTR [rax],ch
   140056369:	cmp    DWORD PTR [rax+rax*2],eax
   14005636c:	add    DWORD PTR [rax],eax
   14005636e:	add    BYTE PTR [rax],al
   140056370:	sbb    BYTE PTR [rcx],bh
   140056372:	add    al,0x40
   140056374:	add    DWORD PTR [rax],eax
   140056376:	add    BYTE PTR [rax],al
   140056378:	or     BYTE PTR [rcx],bh
   14005637a:	add    al,0x40
   14005637c:	add    DWORD PTR [rax],eax
   14005637e:	add    BYTE PTR [rax],al
   140056380:	clc    
   140056381:	cmp    BYTE PTR [rax+rax*2],al
   140056384:	add    DWORD PTR [rax],eax
   140056386:	add    BYTE PTR [rax],al
   140056388:	lock cmp BYTE PTR [rax+rax*2],al
   14005638c:	add    DWORD PTR [rax],eax
   14005638e:	add    BYTE PTR [rax],al
   140056390:	in     al,dx
   140056391:	cmp    BYTE PTR [rax+rax*2],al
   140056394:	add    DWORD PTR [rax],eax
   140056396:	add    BYTE PTR [rax],al
   140056398:	loopne 0x1400563d2
   14005639a:	add    al,0x40
   14005639c:	add    DWORD PTR [rax],eax
   14005639e:	add    BYTE PTR [rax],al
   1400563a0:	enter  0x438,0x40
   1400563a4:	add    DWORD PTR [rax],eax
   1400563a6:	add    BYTE PTR [rax],al
   1400563a8:	sar    BYTE PTR [rax],0x4
   1400563ab:	rex add DWORD PTR [rax],eax
   1400563ae:	add    BYTE PTR [rax],al
   1400563b0:	mov    ah,0x38
   1400563b2:	add    al,0x40
   1400563b4:	add    DWORD PTR [rax],eax
   1400563b6:	add    BYTE PTR [rax],al
   1400563b8:	lods   al,BYTE PTR ds:[rsi]
   1400563b9:	cmp    BYTE PTR [rax+rax*2],al
   1400563bc:	add    DWORD PTR [rax],eax
   1400563be:	add    BYTE PTR [rax],al
   1400563c0:	test   al,0x38
   1400563c2:	add    al,0x40
   1400563c4:	add    DWORD PTR [rax],eax
	...
   14005640e:	add    BYTE PTR [rax],al
   140056410:	(bad)  
   140056411:	add    BYTE PTR [rax],al
   140056413:	add    BYTE PTR [rdx+0xb00006f],dh
   140056419:	add    BYTE PTR [rax],al
   14005641b:	add    BYTE PTR [rcx],al
   14005641d:	add    BYTE PTR [rax],al
   14005641f:	add    BYTE PTR [rbx],al
   140056421:	add    BYTE PTR [rax],al
   140056423:	add    BYTE PTR [rax],al
   140056425:	add    BYTE PTR [rax],al
   140056427:	add    BYTE PTR [rax+0x1400438],bl
   14005642d:	add    BYTE PTR [rax],al
   14005642f:	add    BYTE PTR [rax+0x1400438],cl
   140056435:	add    BYTE PTR [rax],al
   140056437:	add    BYTE PTR [rax+0x38],bh
   14005643a:	add    al,0x40
   14005643c:	add    DWORD PTR [rax],eax
   14005643e:	add    BYTE PTR [rax],al
   140056440:	push   0x1400438
   140056445:	add    BYTE PTR [rax],al
   140056447:	add    BYTE PTR [rax+0x38],ah
   14005644a:	add    al,0x40
   14005644c:	add    DWORD PTR [rax],eax
   14005644e:	add    BYTE PTR [rax],al
   140056450:	pop    rsp
   140056451:	cmp    BYTE PTR [rax+rax*2],al
   140056454:	add    DWORD PTR [rax],eax
   140056456:	add    BYTE PTR [rax],al
   140056458:	push   rax
   140056459:	cmp    BYTE PTR [rax+rax*2],al
   14005645c:	add    DWORD PTR [rax],eax
   14005645e:	add    BYTE PTR [rax],al
   140056460:	cmp    BYTE PTR [rax],bh
   140056462:	add    al,0x40
   140056464:	add    DWORD PTR [rax],eax
   140056466:	add    BYTE PTR [rax],al
   140056468:	xor    BYTE PTR [rax],bh
   14005646a:	add    al,0x40
   14005646c:	add    DWORD PTR [rax],eax
   14005646e:	add    BYTE PTR [rax],al
   140056470:	and    al,0x38
   140056472:	add    al,0x40
   140056474:	add    DWORD PTR [rax],eax
   140056476:	add    BYTE PTR [rax],al
   140056478:	sbb    al,0x38
   14005647a:	add    al,0x40
   14005647c:	add    DWORD PTR [rax],eax
   14005647e:	add    BYTE PTR [rax],al
   140056480:	sbb    BYTE PTR [rax],bh
   140056482:	add    al,0x40
   140056484:	add    DWORD PTR [rax],eax
	...
   1400564ce:	add    BYTE PTR [rax],al
   1400564d0:	or     BYTE PTR [rax],al
   1400564d2:	add    BYTE PTR [rax],al
   1400564d4:	mov    bl,0x6f
   1400564d6:	add    BYTE PTR [rax],al
   1400564d8:	or     al,0x0
   1400564da:	add    BYTE PTR [rax],al
   1400564dc:	add    DWORD PTR [rax],eax
   1400564de:	add    BYTE PTR [rax],al
   1400564e0:	add    eax,DWORD PTR [rax]
   1400564e2:	add    BYTE PTR [rax],al
   1400564e4:	add    BYTE PTR [rax],al
   1400564e6:	add    BYTE PTR [rax],al
   1400564e8:	or     BYTE PTR [rax],bh
   1400564ea:	add    al,0x40
   1400564ec:	add    DWORD PTR [rax],eax
   1400564ee:	add    BYTE PTR [rax],al
   1400564f0:	clc    
   1400564f1:	(bad)  
   1400564f2:	add    al,0x40
   1400564f4:	add    DWORD PTR [rax],eax
   1400564f6:	add    BYTE PTR [rax],al
   1400564f8:	call   0x141456934
   1400564fd:	add    BYTE PTR [rax],al
   1400564ff:	add    al,bl
   140056501:	(bad)  
   140056502:	add    al,0x40
   140056504:	add    DWORD PTR [rax],eax
   140056506:	add    BYTE PTR [rax],al
   140056508:	enter  0x437,0x40
   14005650c:	add    DWORD PTR [rax],eax
   14005650e:	add    BYTE PTR [rax],al
   140056510:	mov    al,0x37
   140056512:	add    al,0x40
   140056514:	add    DWORD PTR [rax],eax
   140056516:	add    BYTE PTR [rax],al
   140056518:	cwde   
   140056519:	(bad)  
   14005651a:	add    al,0x40
   14005651c:	add    DWORD PTR [rax],eax
   14005651e:	add    BYTE PTR [rax],al
   140056520:	nop
   140056521:	(bad)  
   140056522:	add    al,0x40
   140056524:	add    DWORD PTR [rax],eax
   140056526:	add    BYTE PTR [rax],al
   140056528:	test   BYTE PTR [rdi],dh
   14005652a:	add    al,0x40
   14005652c:	add    DWORD PTR [rax],eax
   14005652e:	add    BYTE PTR [rax],al
   140056530:	jl     0x140056569
   140056532:	add    al,0x40
   140056534:	add    DWORD PTR [rax],eax
   140056536:	add    BYTE PTR [rax],al
   140056538:	js     0x140056571
   14005653a:	add    al,0x40
   14005653c:	add    DWORD PTR [rax],eax
	...
   14005658e:	add    BYTE PTR [rax],al
   140056590:	or     DWORD PTR [rax],eax
   140056592:	add    BYTE PTR [rax],al
   140056594:	mov    ah,0x6f
   140056596:	add    BYTE PTR [rax],al
   140056598:	or     eax,0x1000000
   14005659d:	add    BYTE PTR [rax],al
   14005659f:	add    BYTE PTR [rbx],al
   1400565a1:	add    BYTE PTR [rax],al
   1400565a3:	add    BYTE PTR [rax],al
   1400565a5:	add    BYTE PTR [rax],al
   1400565a7:	add    BYTE PTR [rax+0x37],ch
   1400565aa:	add    al,0x40
   1400565ac:	add    DWORD PTR [rax],eax
   1400565ae:	add    BYTE PTR [rax],al
   1400565b0:	pop    rax
   1400565b1:	(bad)  
   1400565b2:	add    al,0x40
   1400565b4:	add    DWORD PTR [rax],eax
   1400565b6:	add    BYTE PTR [rax],al
   1400565b8:	rex.W (bad) 
   1400565ba:	add    al,0x40
   1400565bc:	add    DWORD PTR [rax],eax
   1400565be:	add    BYTE PTR [rax],al
   1400565c0:	cmp    BYTE PTR [rdi],dh
   1400565c2:	add    al,0x40
   1400565c4:	add    DWORD PTR [rax],eax
   1400565c6:	add    BYTE PTR [rax],al
   1400565c8:	sub    BYTE PTR [rdi],dh
   1400565ca:	add    al,0x40
   1400565cc:	add    DWORD PTR [rax],eax
   1400565ce:	add    BYTE PTR [rax],al
   1400565d0:	sbb    BYTE PTR [rdi],dh
   1400565d2:	add    al,0x40
   1400565d4:	add    DWORD PTR [rax],eax
   1400565d6:	add    BYTE PTR [rax],al
   1400565d8:	or     al,0x37
   1400565da:	add    al,0x40
   1400565dc:	add    DWORD PTR [rax],eax
   1400565de:	add    BYTE PTR [rax],al
   1400565e0:	clc    
   1400565e1:	ss add al,0x40
   1400565e4:	add    DWORD PTR [rax],eax
   1400565e6:	add    BYTE PTR [rax],al
   1400565e8:	loopne 0x140056620
   1400565ea:	add    al,0x40
   1400565ec:	add    DWORD PTR [rax],eax
   1400565ee:	add    BYTE PTR [rax],al
   1400565f0:	shl    BYTE PTR [rsi],1
   1400565f2:	add    al,0x40
   1400565f4:	add    DWORD PTR [rax],eax
   1400565f6:	add    BYTE PTR [rax],al
   1400565f8:	enter  0x436,0x40
   1400565fc:	add    DWORD PTR [rax],eax
   1400565fe:	add    BYTE PTR [rax],al
   140056600:	shl    BYTE PTR [rsi],0x4
   140056603:	rex add DWORD PTR [rax],eax
   140056606:	add    BYTE PTR [rax],al
   140056608:	mov    eax,0x1400436
	...
   14005664d:	add    BYTE PTR [rax],al
   14005664f:	add    BYTE PTR [rcx],cl
   140056651:	add    BYTE PTR [rax],al
   140056653:	add    ah,al
   140056655:	add    al,BYTE PTR [rax]
   140056657:	add    BYTE PTR [rip+0x1000000],cl        # 0x14105665d
	...
   140056665:	add    BYTE PTR [rax],al
   140056667:	add    BYTE PTR [rax],bl
   140056669:	(bad)  
   14005666a:	add    al,0x40
   14005666c:	add    DWORD PTR [rax],eax
	...
   14005670e:	add    BYTE PTR [rax],al
   140056710:	or     al,BYTE PTR [rax]
   140056712:	add    BYTE PTR [rax],al
   140056714:	mov    ch,0x6f
   140056716:	add    BYTE PTR [rax],al
   140056718:	(bad)  
   140056719:	add    BYTE PTR [rax],al
   14005671b:	add    BYTE PTR [rcx],al
   14005671d:	add    BYTE PTR [rax],al
   14005671f:	add    BYTE PTR [rbx],al
   140056721:	add    BYTE PTR [rax],al
   140056723:	add    BYTE PTR [rax],al
   140056725:	add    BYTE PTR [rax],al
   140056727:	add    BYTE PTR [rax+0x1400436],ch
   14005672d:	add    BYTE PTR [rax],al
   14005672f:	add    BYTE PTR [rax+0x1400436],bl
   140056735:	add    BYTE PTR [rax],al
   140056737:	add    BYTE PTR [rax+0x1400436],cl
   14005673d:	add    BYTE PTR [rax],al
   14005673f:	add    BYTE PTR [rax+0x36],bh
   140056742:	add    al,0x40
   140056744:	add    DWORD PTR [rax],eax
   140056746:	add    BYTE PTR [rax],al
   140056748:	push   0x1400436
   14005674d:	add    BYTE PTR [rax],al
   14005674f:	add    BYTE PTR [rax+0x36],bl
   140056752:	add    al,0x40
   140056754:	add    DWORD PTR [rax],eax
   140056756:	add    BYTE PTR [rax],al
   140056758:	push   rax
   140056759:	ss add al,0x40
   14005675c:	add    DWORD PTR [rax],eax
   14005675e:	add    BYTE PTR [rax],al
   140056760:	rex.W
   140056761:	ss add al,0x40
   140056764:	add    DWORD PTR [rax],eax
   140056766:	add    BYTE PTR [rax],al
   140056768:	cmp    BYTE PTR [rsi],dh
   14005676a:	add    al,0x40
   14005676c:	add    DWORD PTR [rax],eax
   14005676e:	add    BYTE PTR [rax],al
   140056770:	and    BYTE PTR [rsi],dh
   140056772:	add    al,0x40
   140056774:	add    DWORD PTR [rax],eax
   140056776:	add    BYTE PTR [rax],al
   140056778:	adc    BYTE PTR [rsi],dh
   14005677a:	add    al,0x40
   14005677c:	add    DWORD PTR [rax],eax
   14005677e:	add    BYTE PTR [rax],al
   140056780:	add    BYTE PTR [rsi],dh
   140056782:	add    al,0x40
   140056784:	add    DWORD PTR [rax],eax
	...
   1400567ce:	add    BYTE PTR [rax],al
   1400567d0:	(bad)  
   1400567d1:	(bad)  
   1400567d2:	(bad)  
   1400567d3:	(bad)  
   1400567d4:	(bad)  
   1400567d5:	(bad)  
   1400567d6:	(bad)  
   1400567d7:	(bad)  
   1400567d8:	cmp    eax,DWORD PTR [rcx]
	...
   1400567e6:	add    BYTE PTR [rax],al
   1400567e8:	call   0x141456c22
   1400567ed:	add    BYTE PTR [rax],al
   1400567ef:	add    al,ah
   1400567f1:	xor    eax,0x14004
   1400567f6:	add    BYTE PTR [rax],al
   1400567f8:	(bad)  
   1400567f9:	xor    eax,0x14004
   1400567fe:	add    BYTE PTR [rax],al
   140056800:	shl    BYTE PTR [rip+0x14004],1        # 0x14006a80a
   140056806:	add    BYTE PTR [rax],al
   140056808:	enter  0x435,0x40
   14005680c:	add    DWORD PTR [rax],eax
	...
   14005688e:	add    BYTE PTR [rax],al
   140056890:	or     eax,DWORD PTR [rax]
   140056892:	add    BYTE PTR [rax],al
   140056894:	mov    dh,0x6f
   140056896:	add    BYTE PTR [rax],al
   140056898:	sldt   WORD PTR [rax]
   14005689b:	add    BYTE PTR [rcx],al
   14005689d:	add    BYTE PTR [rax],al
   14005689f:	add    BYTE PTR [rbx],al
   1400568a1:	add    BYTE PTR [rax],al
   1400568a3:	add    BYTE PTR [rax],al
   1400568a5:	add    BYTE PTR [rax],al
   1400568a7:	add    BYTE PTR [rax+0x1400435],bh
   1400568ad:	add    BYTE PTR [rax],al
   1400568af:	add    BYTE PTR [rax+0x1400435],ch
   1400568b5:	add    BYTE PTR [rax],al
   1400568b7:	add    BYTE PTR [rax+0x1400435],bl
   1400568bd:	add    BYTE PTR [rax],al
   1400568bf:	add    BYTE PTR [rax+0x1400435],cl
   1400568c5:	add    BYTE PTR [rax],al
   1400568c7:	add    BYTE PTR [rbp+rsi*1+0x4],bh
   1400568cb:	rex add DWORD PTR [rax],eax
   1400568ce:	add    BYTE PTR [rax],al
   1400568d0:	push   0x1400435
   1400568d5:	add    BYTE PTR [rax],al
   1400568d7:	add    BYTE PTR [rax+0x35],dl
   1400568da:	add    al,0x40
   1400568dc:	add    DWORD PTR [rax],eax
   1400568de:	add    BYTE PTR [rax],al
   1400568e0:	rex xor eax,0x14004
   1400568e6:	add    BYTE PTR [rax],al
   1400568e8:	cmp    BYTE PTR [rip+0x14004],dh        # 0x14006a8f2
   1400568ee:	add    BYTE PTR [rax],al
   1400568f0:	xor    BYTE PTR [rip+0x14004],dh        # 0x14006a8fa
	...
   14005694e:	add    BYTE PTR [rax],al
   140056950:	or     al,0x0
   140056952:	add    BYTE PTR [rax],al
   140056954:	mov    bh,0x6f
   140056956:	add    BYTE PTR [rax],al
   140056958:	adc    BYTE PTR [rax],al
   14005695a:	add    BYTE PTR [rax],al
   14005695c:	add    DWORD PTR [rax],eax
   14005695e:	add    BYTE PTR [rax],al
   140056960:	add    eax,DWORD PTR [rax]
   140056962:	add    BYTE PTR [rax],al
   140056964:	add    BYTE PTR [rax],al
   140056966:	add    BYTE PTR [rax],al
   140056968:	and    BYTE PTR [rip+0x14004],dh        # 0x14006a972
   14005696e:	add    BYTE PTR [rax],al
   140056970:	adc    BYTE PTR [rip+0x14004],dh        # 0x14006a97a
   140056976:	add    BYTE PTR [rax],al
   140056978:	add    BYTE PTR [rip+0x14004],dh        # 0x14006a982
   14005697e:	add    BYTE PTR [rax],al
   140056980:	lock xor al,0x4
   140056983:	rex add DWORD PTR [rax],eax
   140056986:	add    BYTE PTR [rax],al
   140056988:	call   0x141456dc1
   14005698d:	add    BYTE PTR [rax],al
   14005698f:	add    ah,ah
   140056991:	xor    al,0x4
   140056993:	rex add DWORD PTR [rax],eax
   140056996:	add    BYTE PTR [rax],al
   140056998:	fdiv   DWORD PTR [rsp+rax*1]
   14005699b:	rex add DWORD PTR [rax],eax
   14005699e:	add    BYTE PTR [rax],al
   1400569a0:	shl    BYTE PTR [rsp+rax*1],0x40
   1400569a4:	add    DWORD PTR [rax],eax
   1400569a6:	add    BYTE PTR [rax],al
   1400569a8:	mov    eax,0x1400434
   1400569ad:	add    BYTE PTR [rax],al
   1400569af:	add    BYTE PTR [rax+0x1400434],dh
   1400569b5:	add    BYTE PTR [rax],al
   1400569b7:	add    BYTE PTR [rax+0x1400434],ch
   1400569bd:	add    BYTE PTR [rax],al
   1400569bf:	add    BYTE PTR [rsp+rsi*1+0x14004],ah
   1400569c6:	add    BYTE PTR [rax],al
   1400569c8:	cwde   
   1400569c9:	xor    al,0x4
   1400569cb:	rex add DWORD PTR [rax],eax
   1400569ce:	add    BYTE PTR [rax],al
   1400569d0:	nop
   1400569d1:	xor    al,0x4
   1400569d3:	rex add DWORD PTR [rax],eax
   1400569d6:	add    BYTE PTR [rax],al
   1400569d8:	xor    BYTE PTR [rsp+rax*1],0x40
   1400569dc:	add    DWORD PTR [rax],eax
	...
   140056a0e:	add    BYTE PTR [rax],al
   140056a10:	or     eax,0xff000000
   140056a15:	(bad)  
   140056a16:	(bad)  
   140056a17:	call   QWORD PTR [rcx]
   140056a19:	add    BYTE PTR [rax],al
   140056a1b:	add    BYTE PTR [rcx],al
	...
   140056a25:	add    BYTE PTR [rax],al
   140056a27:	add    BYTE PTR [rax+0x34],dh
   140056a2a:	add    al,0x40
   140056a2c:	add    DWORD PTR [rax],eax
   140056a2e:	add    BYTE PTR [rax],al
   140056a30:	(bad)  
   140056a31:	xor    al,0x4
   140056a33:	rex add DWORD PTR [rax],eax
   140056a36:	add    BYTE PTR [rax],al
   140056a38:	pop    rsp
   140056a39:	xor    al,0x4
   140056a3b:	rex add DWORD PTR [rax],eax
   140056a3e:	add    BYTE PTR [rax],al
   140056a40:	rex.W xor al,0x4
   140056a43:	rex add DWORD PTR [rax],eax
   140056a46:	add    BYTE PTR [rax],al
   140056a48:	cmp    BYTE PTR [rsp+rax*1],dh
   140056a4b:	rex add DWORD PTR [rax],eax
   140056a4e:	add    BYTE PTR [rax],al
   140056a50:	sub    al,0x34
   140056a52:	add    al,0x40
   140056a54:	add    DWORD PTR [rax],eax
   140056a56:	add    BYTE PTR [rax],al
   140056a58:	sbb    BYTE PTR [rsp+rax*1],dh
   140056a5b:	rex add DWORD PTR [rax],eax
	...
   140056ace:	add    BYTE PTR [rax],al
   140056ad0:	(bad)  
   140056ad1:	add    BYTE PTR [rax],al
   140056ad3:	add    bh,bh
   140056ad5:	(bad)  
   140056ad6:	(bad)  
   140056ad7:	jmp    FWORD PTR [rdx]
	...
   140056ae5:	add    BYTE PTR [rax],al
   140056ae7:	add    BYTE PTR [rax],cl
   140056ae9:	xor    al,0x4
   140056aeb:	rex add DWORD PTR [rax],eax
   140056aee:	add    BYTE PTR [rax],al
   140056af0:	clc    
   140056af1:	xor    eax,DWORD PTR [rax+rax*2]
   140056af4:	add    DWORD PTR [rax],eax
   140056af6:	add    BYTE PTR [rax],al
   140056af8:	call   0x141456f30
	...
   140056b8d:	add    BYTE PTR [rax],al
   140056b8f:	add    BYTE PTR [rdi],cl
   140056b91:	add    BYTE PTR [rax],al
   140056b93:	add    bh,bh
   140056b95:	(bad)  
   140056b96:	(bad)  
   140056b97:	jmp    FWORD PTR [rbx]
	...
   140056ba5:	add    BYTE PTR [rax],al
   140056ba7:	add    al,bl
   140056ba9:	xor    eax,DWORD PTR [rax+rax*2]
   140056bac:	add    DWORD PTR [rax],eax
   140056bae:	add    BYTE PTR [rax],al
   140056bb0:	int3   
   140056bb1:	xor    eax,DWORD PTR [rax+rax*2]
   140056bb4:	add    DWORD PTR [rax],eax
   140056bb6:	add    BYTE PTR [rax],al
   140056bb8:	mov    eax,0x1400433
	...
   140056c4d:	add    BYTE PTR [rax],al
   140056c4f:	add    BYTE PTR [rax],dl
   140056c51:	add    BYTE PTR [rax],al
   140056c53:	add    bh,bh
   140056c55:	(bad)  
   140056c56:	(bad)  
   140056c57:	jmp    FWORD PTR [rax+rax*1]
	...
   140056c66:	add    BYTE PTR [rax],al
   140056c68:	test   al,0x33
   140056c6a:	add    al,0x40
   140056c6c:	add    DWORD PTR [rax],eax
   140056c6e:	add    BYTE PTR [rax],al
   140056c70:	cwde   
   140056c71:	xor    eax,DWORD PTR [rax+rax*2]
   140056c74:	add    DWORD PTR [rax],eax
   140056c76:	add    BYTE PTR [rax],al
   140056c78:	xchg   esp,eax
   140056c79:	xor    eax,DWORD PTR [rax+rax*2]
   140056c7c:	add    DWORD PTR [rax],eax
	...
   140056d0e:	add    BYTE PTR [rax],al
   140056d10:	adc    DWORD PTR [rax],eax
   140056d12:	add    BYTE PTR [rax],al
   140056d14:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056d15:	add    eax,DWORD PTR [rax]
   140056d17:	add    BYTE PTR [rbx],bl
   140056d19:	add    BYTE PTR [rax],al
   140056d1b:	add    BYTE PTR [rcx],al
	...
   140056d25:	add    BYTE PTR [rax],al
   140056d27:	add    BYTE PTR [rax+0x1400433],cl
   140056d2d:	add    BYTE PTR [rax],al
   140056d2f:	add    BYTE PTR [rax+0x33],bh
   140056d32:	add    al,0x40
   140056d34:	add    DWORD PTR [rax],eax
   140056d36:	add    BYTE PTR [rax],al
   140056d38:	push   0x1400433
   140056d3d:	add    BYTE PTR [rax],al
   140056d3f:	add    BYTE PTR [rax+0x33],dl
   140056d42:	add    al,0x40
   140056d44:	add    DWORD PTR [rax],eax
   140056d46:	add    BYTE PTR [rax],al
   140056d48:	xor    rax,QWORD PTR [rax+rax*2]
   140056d4c:	add    DWORD PTR [rax],eax
   140056d4e:	add    BYTE PTR [rax],al
   140056d50:	cmp    al,0x33
   140056d52:	add    al,0x40
   140056d54:	add    DWORD PTR [rax],eax
   140056d56:	add    BYTE PTR [rax],al
   140056d58:	xor    BYTE PTR [rbx],dh
   140056d5a:	add    al,0x40
   140056d5c:	add    DWORD PTR [rax],eax
   140056d5e:	add    BYTE PTR [rax],al
   140056d60:	and    al,0x33
   140056d62:	add    al,0x40
   140056d64:	add    DWORD PTR [rax],eax
   140056d66:	add    BYTE PTR [rax],al
   140056d68:	sbb    al,0x33
   140056d6a:	add    al,0x40
   140056d6c:	add    DWORD PTR [rax],eax
   140056d6e:	add    BYTE PTR [rax],al
   140056d70:	adc    BYTE PTR [rbx],dh
   140056d72:	add    al,0x40
   140056d74:	add    DWORD PTR [rax],eax
   140056d76:	add    BYTE PTR [rax],al
   140056d78:	or     BYTE PTR [rbx],dh
   140056d7a:	add    al,0x40
   140056d7c:	add    DWORD PTR [rax],eax
   140056d7e:	add    BYTE PTR [rax],al
   140056d80:	add    al,0x33
   140056d82:	add    al,0x40
   140056d84:	add    DWORD PTR [rax],eax
   140056d86:	add    BYTE PTR [rax],al
   140056d88:	cld    
   140056d89:	xor    al,BYTE PTR [rax+rax*2]
   140056d8c:	add    DWORD PTR [rax],eax
   140056d8e:	add    BYTE PTR [rax],al
   140056d90:	call   0x1414571c7
	...
   140056dcd:	add    BYTE PTR [rax],al
   140056dcf:	add    bh,bh
   140056dd1:	(bad)  
   140056dd2:	(bad)  
   140056dd3:	(bad)  
   140056dd4:	(bad)  
   140056dd5:	(bad)  
   140056dd6:	(bad)  
   140056dd7:	(bad)  
   140056dd8:	cmp    al,0x1
   140056dda:	add    BYTE PTR [rax],al
   140056ddc:	add    DWORD PTR [rax],eax
	...
   140056de6:	add    BYTE PTR [rax],al
   140056de8:	and    ch,ch
   140056dea:	add    eax,DWORD PTR [rax+0x1]
   140056ded:	add    BYTE PTR [rax],al
   140056def:	add    al,ah
   140056df1:	xor    al,BYTE PTR [rax+rax*2]
   140056df4:	add    DWORD PTR [rax],eax
   140056df6:	add    BYTE PTR [rax],al
   140056df8:	fdiv   QWORD PTR [rdx]
   140056dfa:	add    al,0x40
   140056dfc:	add    DWORD PTR [rax],eax
   140056dfe:	add    BYTE PTR [rax],al
   140056e00:	shl    BYTE PTR [rdx],0x4
   140056e03:	rex add DWORD PTR [rax],eax
	...
   140056e8e:	add    BYTE PTR [rax],al
   140056e90:	adc    al,BYTE PTR [rax]
   140056e92:	add    BYTE PTR [rax],al
   140056e94:	(bad)  
   140056e95:	push   rcx
   140056e96:	add    BYTE PTR [rax],al
   140056e98:	sbb    al,0x0
   140056e9a:	add    BYTE PTR [rax],al
   140056e9c:	add    BYTE PTR [rax],al
   140056e9e:	add    BYTE PTR [rax],al
   140056ea0:	add    al,BYTE PTR [rax]
   140056ea2:	add    BYTE PTR [rax],al
   140056ea4:	add    BYTE PTR [rax],al
   140056ea6:	add    BYTE PTR [rax],al
   140056ea8:	nop
   140056ea9:	xor    al,BYTE PTR [rax+rax*2]
   140056eac:	add    DWORD PTR [rax],eax
   140056eae:	add    BYTE PTR [rax],al
   140056eb0:	js     0x140056ee4
   140056eb2:	add    al,0x40
   140056eb4:	add    DWORD PTR [rax],eax
   140056eb6:	add    BYTE PTR [rax],al
   140056eb8:	ins    BYTE PTR es:[rdi],dx
   140056eb9:	xor    al,BYTE PTR [rax+rax*2]
   140056ebc:	add    DWORD PTR [rax],eax
   140056ebe:	add    BYTE PTR [rax],al
   140056ec0:	pop    rax
   140056ec1:	xor    al,BYTE PTR [rax+rax*2]
   140056ec4:	add    DWORD PTR [rax],eax
   140056ec6:	add    BYTE PTR [rax],al
   140056ec8:	push   rax
   140056ec9:	xor    al,BYTE PTR [rax+rax*2]
   140056ecc:	add    DWORD PTR [rax],eax
   140056ece:	add    BYTE PTR [rax],al
   140056ed0:	xor    al,BYTE PTR [rax+rax*2]
   140056ed4:	add    DWORD PTR [rax],eax
   140056ed6:	add    BYTE PTR [rax],al
   140056ed8:	xor    al,0x32
   140056eda:	add    al,0x40
   140056edc:	add    DWORD PTR [rax],eax
   140056ede:	add    BYTE PTR [rax],al
   140056ee0:	sub    al,0x32
   140056ee2:	add    al,0x40
   140056ee4:	add    DWORD PTR [rax],eax
	...
   140056f4e:	add    BYTE PTR [rax],al
   140056f50:	adc    al,BYTE PTR [rax]
   140056f52:	add    BYTE PTR [rax],al
   140056f54:	fmul   st(2),st
   140056f56:	add    BYTE PTR [rax],al
   140056f58:	cmp    eax,0x1
	...
   140056f65:	add    BYTE PTR [rax],al
   140056f67:	add    BYTE PTR [rax],dl
   140056f69:	xor    al,BYTE PTR [rax+rax*2]
   140056f6c:	add    DWORD PTR [rax],eax
   140056f6e:	add    BYTE PTR [rax],al
   140056f70:	add    BYTE PTR [rdx],dh
   140056f72:	add    al,0x40
   140056f74:	add    DWORD PTR [rax],eax
   140056f76:	add    BYTE PTR [rax],al
   140056f78:	lock xor DWORD PTR [rax+rax*2],eax
   140056f7c:	add    DWORD PTR [rax],eax
   140056f7e:	add    BYTE PTR [rax],al
   140056f80:	loopne 0x140056fb3
   140056f82:	add    al,0x40
   140056f84:	add    DWORD PTR [rax],eax
   140056f86:	add    BYTE PTR [rax],al
   140056f88:	shl    BYTE PTR [rcx],1
   140056f8a:	add    al,0x40
   140056f8c:	add    DWORD PTR [rax],eax
	...
   14005700e:	add    BYTE PTR [rax],al
   140057010:	adc    eax,DWORD PTR [rax]
   140057012:	add    BYTE PTR [rax],al
   140057014:	(bad)  
   140057015:	(bad)  
   140057016:	(bad)  
   140057017:	jmp    FWORD PTR [rip+0x0]        # 0x14005701d
	...
   140057025:	add    BYTE PTR [rax],al
   140057027:	add    BYTE PTR [rax+0x1400431],ah
   14005702d:	add    BYTE PTR [rax],al
   14005702f:	add    BYTE PTR [rax+0x1400431],cl
	...
   1400570cd:	add    BYTE PTR [rax],al
   1400570cf:	add    BYTE PTR [rax+rax*1],dl
   1400570d2:	add    BYTE PTR [rax],al
   1400570d4:	(bad)  
   1400570d5:	(bad)  
   1400570d6:	(bad)  
   1400570d7:	jmp    FWORD PTR [rsi]
	...
   1400570e5:	add    BYTE PTR [rax],al
   1400570e7:	add    BYTE PTR [rax+0x1400431],al
   1400570ed:	add    BYTE PTR [rax],al
   1400570ef:	add    BYTE PTR [rax+0x31],dh
   1400570f2:	add    al,0x40
   1400570f4:	add    DWORD PTR [rax],eax
   1400570f6:	add    BYTE PTR [rax],al
   1400570f8:	(bad)  
   1400570f9:	xor    DWORD PTR [rax+rax*2],eax
   1400570fc:	add    DWORD PTR [rax],eax
   1400570fe:	add    BYTE PTR [rax],al
   140057100:	pop    rax
   140057101:	xor    DWORD PTR [rax+rax*2],eax
   140057104:	add    DWORD PTR [rax],eax
   140057106:	add    BYTE PTR [rax],al
   140057108:	push   rsp
   140057109:	xor    DWORD PTR [rax+rax*2],eax
   14005710c:	add    DWORD PTR [rax],eax
   14005710e:	add    BYTE PTR [rax],al
   140057110:	rex xor DWORD PTR [rax+rax*2],eax
   140057114:	add    DWORD PTR [rax],eax
	...
   14005718e:	add    BYTE PTR [rax],al
   140057190:	adc    eax,0xff000000
   140057195:	(bad)  
   140057196:	(bad)  
   140057197:	jmp    FWORD PTR [rdi]
	...
   1400571a5:	add    BYTE PTR [rax],al
   1400571a7:	add    BYTE PTR [rax],dh
   1400571a9:	xor    DWORD PTR [rax+rax*2],eax
   1400571ac:	add    DWORD PTR [rax],eax
   1400571ae:	add    BYTE PTR [rax],al
   1400571b0:	and    BYTE PTR [rcx],dh
   1400571b2:	add    al,0x40
   1400571b4:	add    DWORD PTR [rax],eax
   1400571b6:	add    BYTE PTR [rax],al
   1400571b8:	adc    BYTE PTR [rcx],dh
   1400571ba:	add    al,0x40
   1400571bc:	add    DWORD PTR [rax],eax
   1400571be:	add    BYTE PTR [rax],al
   1400571c0:	or     BYTE PTR [rcx],dh
   1400571c2:	add    al,0x40
   1400571c4:	add    DWORD PTR [rax],eax
   1400571c6:	add    BYTE PTR [rax],al
   1400571c8:	lock xor BYTE PTR [rax+rax*2],al
   1400571cc:	add    DWORD PTR [rax],eax
	...
   14005724e:	add    BYTE PTR [rax],al
   140057250:	(bad)  
   140057251:	add    BYTE PTR [rax],al
   140057253:	add    bh,bh
   140057255:	(bad)  
   140057256:	(bad)  
   140057257:	push   QWORD PTR [rax]
	...
   140057265:	add    BYTE PTR [rax],al
   140057267:	add    ah,ch
   140057269:	xor    BYTE PTR [rax+rax*2],al
   14005726c:	add    DWORD PTR [rax],eax
   14005726e:	add    BYTE PTR [rax],al
   140057270:	loopne 0x1400572a2
   140057272:	add    al,0x40
   140057274:	add    DWORD PTR [rax],eax
   140057276:	add    BYTE PTR [rax],al
   140057278:	shl    BYTE PTR [rax],1
   14005727a:	add    al,0x40
   14005727c:	add    DWORD PTR [rax],eax
   14005727e:	add    BYTE PTR [rax],al
   140057280:	shl    BYTE PTR [rax],0x4
   140057283:	rex add DWORD PTR [rax],eax
	...
   14005730e:	add    BYTE PTR [rax],al
   140057310:	(bad)  
   140057311:	add    BYTE PTR [rax],al
   140057313:	add    bh,bh
   140057315:	(bad)  
   140057316:	(bad)  
   140057317:	push   QWORD PTR [rcx]
	...
   140057325:	add    BYTE PTR [rax],al
   140057327:	add    BYTE PTR [rax+rsi*1+0x14004],bh
   14005732e:	add    BYTE PTR [rax],al
   140057330:	mov    al,0x30
   140057332:	add    al,0x40
   140057334:	add    DWORD PTR [rax],eax
   140057336:	add    BYTE PTR [rax],al
   140057338:	movabs al,ds:0x9000000001400430
   140057341:	xor    BYTE PTR [rax+rax*2],al
   140057344:	add    DWORD PTR [rax],eax
	...
   1400573ce:	add    BYTE PTR [rax],al
   1400573d0:	sbb    BYTE PTR [rax],al
   1400573d2:	add    BYTE PTR [rax],al
   1400573d4:	(bad)  
   1400573d5:	(bad)  
   1400573d6:	(bad)  
   1400573d7:	push   QWORD PTR [rdx]
	...
   1400573e5:	add    BYTE PTR [rax],al
   1400573e7:	add    BYTE PTR [rax+0x1400430],al
   1400573ed:	add    BYTE PTR [rax],al
   1400573ef:	add    BYTE PTR [rax+0x30],dh
   1400573f2:	add    al,0x40
   1400573f4:	add    DWORD PTR [rax],eax
   1400573f6:	add    BYTE PTR [rax],al
   1400573f8:	ins    BYTE PTR es:[rdi],dx
   1400573f9:	xor    BYTE PTR [rax+rax*2],al
   1400573fc:	add    DWORD PTR [rax],eax
   1400573fe:	add    BYTE PTR [rax],al
   140057400:	(bad)  
   140057401:	xor    BYTE PTR [rax+rax*2],al
   140057404:	add    DWORD PTR [rax],eax
   140057406:	add    BYTE PTR [rax],al
   140057408:	push   rax
   140057409:	xor    BYTE PTR [rax+rax*2],al
   14005740c:	add    DWORD PTR [rax],eax
	...
   14005748e:	add    BYTE PTR [rax],al
   140057490:	sbb    DWORD PTR [rax],eax
   140057492:	add    BYTE PTR [rax],al
   140057494:	(bad)  
   140057495:	(bad)  
   140057496:	(bad)  
   140057497:	push   QWORD PTR [rbx]
	...
   1400574a5:	add    BYTE PTR [rax],al
   1400574a7:	add    BYTE PTR [rax+0x30],al
   1400574aa:	add    al,0x40
   1400574ac:	add    DWORD PTR [rax],eax
   1400574ae:	add    BYTE PTR [rax],al
   1400574b0:	xor    BYTE PTR [rax],dh
   1400574b2:	add    al,0x40
   1400574b4:	add    DWORD PTR [rax],eax
   1400574b6:	add    BYTE PTR [rax],al
   1400574b8:	and    BYTE PTR [rax],dh
   1400574ba:	add    al,0x40
   1400574bc:	add    DWORD PTR [rax],eax
   1400574be:	add    BYTE PTR [rax],al
   1400574c0:	sbb    BYTE PTR [rax],dh
   1400574c2:	add    al,0x40
   1400574c4:	add    DWORD PTR [rax],eax
   1400574c6:	add    BYTE PTR [rax],al
   1400574c8:	add    BYTE PTR [rax],dh
   1400574ca:	add    al,0x40
   1400574cc:	add    DWORD PTR [rax],eax
   1400574ce:	add    BYTE PTR [rax],al
   1400574d0:	call   0x141457904
	...
   14005754d:	add    BYTE PTR [rax],al
   14005754f:	add    BYTE PTR [rdx],bl
   140057551:	add    BYTE PTR [rax],al
   140057553:	add    bh,bh
   140057555:	(bad)  
   140057556:	(bad)  
   140057557:	push   QWORD PTR [rax+rax*1]
	...
   140057566:	add    BYTE PTR [rax],al
   140057568:	fsubr  DWORD PTR [rdi]
   14005756a:	add    al,0x40
   14005756c:	add    DWORD PTR [rax],eax
   14005756e:	add    BYTE PTR [rax],al
   140057570:	enter  0x42f,0x40
   140057574:	add    DWORD PTR [rax],eax
   140057576:	add    BYTE PTR [rax],al
   140057578:	mov    eax,0x140042f
   14005757d:	add    BYTE PTR [rax],al
   14005757f:	add    BYTE PTR [rax+0x140042f],dh
   140057585:	add    BYTE PTR [rax],al
   140057587:	add    BYTE PTR [rax+0x140042f],ah
	...
   14005760d:	add    BYTE PTR [rax],al
   14005760f:	add    BYTE PTR [rbx],bl
   140057611:	add    BYTE PTR [rax],al
   140057613:	add    bh,bh
   140057615:	(bad)  
   140057616:	(bad)  
   140057617:	push   QWORD PTR [rip+0x0]        # 0x14005761d
	...
   140057625:	add    BYTE PTR [rax],al
   140057627:	add    BYTE PTR [rax+0x140042f],dl
   14005762d:	add    BYTE PTR [rax],al
   14005762f:	add    BYTE PTR [rax+0x140042f],al
	...
   1400576cd:	add    BYTE PTR [rax],al
   1400576cf:	add    BYTE PTR [rax+rax*1],bl
   1400576d2:	add    BYTE PTR [rax],al
   1400576d4:	(bad)  
   1400576d5:	(bad)  
   1400576d6:	(bad)  
   1400576d7:	push   QWORD PTR [rsi]
	...
   1400576e5:	add    BYTE PTR [rax],al
   1400576e7:	add    BYTE PTR [rax+0x2f],ch
   1400576ea:	add    al,0x40
   1400576ec:	add    DWORD PTR [rax],eax
   1400576ee:	add    BYTE PTR [rax],al
   1400576f0:	fs (bad) 
   1400576f2:	add    al,0x40
   1400576f4:	add    DWORD PTR [rax],eax
   1400576f6:	add    BYTE PTR [rax],al
   1400576f8:	push   rax
   1400576f9:	(bad)  
   1400576fa:	add    al,0x40
   1400576fc:	add    DWORD PTR [rax],eax
	...
   14005778e:	add    BYTE PTR [rax],al
   140057790:	sbb    eax,0xff000000
   140057795:	(bad)  
   140057796:	(bad)  
   140057797:	push   QWORD PTR [rdi]
	...
   1400577a5:	add    BYTE PTR [rax],al
   1400577a7:	add    BYTE PTR [rax+0x2f],al
   1400577aa:	add    al,0x40
   1400577ac:	add    DWORD PTR [rax],eax
   1400577ae:	add    BYTE PTR [rax],al
   1400577b0:	xor    BYTE PTR [rdi],ch
   1400577b2:	add    al,0x40
   1400577b4:	add    DWORD PTR [rax],eax
	...
   14005784e:	add    BYTE PTR [rax],al
   140057850:	(bad)  
   140057851:	add    BYTE PTR [rax],al
   140057853:	add    bh,bh
   140057855:	(bad)  
   140057856:	(bad)  
   140057857:	(bad)  
   140057858:	cmp    BYTE PTR [rax],al
   14005785a:	add    BYTE PTR [rax],al
   14005785c:	add    DWORD PTR [rax],eax
	...
   140057866:	add    BYTE PTR [rax],al
   140057868:	sbb    BYTE PTR [rdi],ch
   14005786a:	add    al,0x40
   14005786c:	add    DWORD PTR [rax],eax
   14005786e:	add    BYTE PTR [rax],al
   140057870:	or     BYTE PTR [rdi],ch
   140057872:	add    al,0x40
   140057874:	add    DWORD PTR [rax],eax
   140057876:	add    BYTE PTR [rax],al
   140057878:	add    BYTE PTR [rdi],ch
   14005787a:	add    al,0x40
   14005787c:	add    DWORD PTR [rax],eax
   14005787e:	add    BYTE PTR [rax],al
   140057880:	call   0x141457cb3
	...
   14005790d:	add    BYTE PTR [rax],al
   14005790f:	add    BYTE PTR [rdi],bl
   140057911:	add    BYTE PTR [rax],al
   140057913:	add    bh,bh
   140057915:	(bad)  
   140057916:	(bad)  
   140057917:	(bad)  
   140057918:	cmp    DWORD PTR [rax],eax
	...
   140057926:	add    BYTE PTR [rax],al
   140057928:	fsubr  DWORD PTR [rsi]
   14005792a:	add    al,0x40
   14005792c:	add    DWORD PTR [rax],eax
   14005792e:	add    BYTE PTR [rax],al
   140057930:	enter  0x42e,0x40
   140057934:	add    DWORD PTR [rax],eax
   140057936:	add    BYTE PTR [rax],al
   140057938:	mov    eax,0x140042e
	...
   1400579cd:	add    BYTE PTR [rax],al
   1400579cf:	add    BYTE PTR [rax],ah
   1400579d1:	add    BYTE PTR [rax],al
   1400579d3:	add    bh,bh
   1400579d5:	(bad)  
   1400579d6:	(bad)  
   1400579d7:	(bad)  
   1400579d8:	cmp    al,BYTE PTR [rax]
	...
   1400579e6:	add    BYTE PTR [rax],al
   1400579e8:	test   al,0x2e
   1400579ea:	add    al,0x40
   1400579ec:	add    DWORD PTR [rax],eax
   1400579ee:	add    BYTE PTR [rax],al
   1400579f0:	cwde   
   1400579f1:	cs add al,0x40
   1400579f4:	add    DWORD PTR [rax],eax
   1400579f6:	add    BYTE PTR [rax],al
   1400579f8:	mov    BYTE PTR [rsi],ch
   1400579fa:	add    al,0x40
   1400579fc:	add    DWORD PTR [rax],eax
	...
   140057a8e:	add    BYTE PTR [rax],al
   140057a90:	and    DWORD PTR [rax],eax
   140057a92:	add    BYTE PTR [rax],al
   140057a94:	(bad)  
   140057a95:	(bad)  
   140057a96:	(bad)  
   140057a97:	(bad)  
   140057a98:	cmp    eax,DWORD PTR [rax]
	...
   140057aa6:	add    BYTE PTR [rax],al
   140057aa8:	js     0x140057ad8
   140057aaa:	add    al,0x40
   140057aac:	add    DWORD PTR [rax],eax
   140057aae:	add    BYTE PTR [rax],al
   140057ab0:	push   0x140042e
   140057ab5:	add    BYTE PTR [rax],al
   140057ab7:	add    BYTE PTR [rax+0x2e],bl
   140057aba:	add    al,0x40
   140057abc:	add    DWORD PTR [rax],eax
	...
   140057b4e:	add    BYTE PTR [rax],al
   140057b50:	and    al,BYTE PTR [rax]
   140057b52:	add    BYTE PTR [rax],al
   140057b54:	(bad)  
   140057b55:	(bad)  
   140057b56:	(bad)  
   140057b57:	(bad)  
   140057b58:	cmp    al,0x0
	...
   140057b66:	add    BYTE PTR [rax],al
   140057b68:	rex.W
   140057b69:	cs add al,0x40
   140057b6c:	add    DWORD PTR [rax],eax
   140057b6e:	add    BYTE PTR [rax],al
   140057b70:	cmp    BYTE PTR [rsi],ch
   140057b72:	add    al,0x40
   140057b74:	add    DWORD PTR [rax],eax
   140057b76:	add    BYTE PTR [rax],al
   140057b78:	sub    BYTE PTR [rsi],ch
   140057b7a:	add    al,0x40
   140057b7c:	add    DWORD PTR [rax],eax
	...
   140057c0e:	add    BYTE PTR [rax],al
   140057c10:	and    eax,DWORD PTR [rax]
   140057c12:	add    BYTE PTR [rax],al
   140057c14:	(bad)  
   140057c15:	(bad)  
   140057c16:	(bad)  
   140057c17:	(bad)  
   140057c18:	cmp    eax,0x0
	...
   140057c25:	add    BYTE PTR [rax],al
   140057c27:	add    BYTE PTR [rax],bl
   140057c29:	cs add al,0x40
   140057c2c:	add    DWORD PTR [rax],eax
   140057c2e:	add    BYTE PTR [rax],al
   140057c30:	or     BYTE PTR [rsi],ch
   140057c32:	add    al,0x40
   140057c34:	add    DWORD PTR [rax],eax
   140057c36:	add    BYTE PTR [rax],al
   140057c38:	add    al,0x2e
   140057c3a:	add    al,0x40
   140057c3c:	add    DWORD PTR [rax],eax
   140057c3e:	add    BYTE PTR [rax],al
   140057c40:	clc    
   140057c41:	sub    eax,0x14004
   140057c46:	add    BYTE PTR [rax],al
   140057c48:	call   0x14145807a
   140057c4d:	add    BYTE PTR [rax],al
   140057c4f:	add    al,ah
   140057c51:	sub    eax,0x14004
   140057c56:	add    BYTE PTR [rax],al
   140057c58:	shr    BYTE PTR [rip+0x14004],1        # 0x14006bc62
	...
   140057cce:	add    BYTE PTR [rax],al
   140057cd0:	and    al,0x0
   140057cd2:	add    BYTE PTR [rax],al
   140057cd4:	in     eax,dx
   140057cd5:	retf   0x0
   140057cd8:	add    BYTE PTR ds:[rax],al
   140057cdb:	add    BYTE PTR [rcx],al
	...
   140057ce5:	add    BYTE PTR [rax],al
   140057ce7:	add    al,al
   140057ce9:	sub    eax,0x14004
   140057cee:	add    BYTE PTR [rax],al
   140057cf0:	movabs al,ds:0x980000000140042d
   140057cf9:	sub    eax,0x14004
   140057cfe:	add    BYTE PTR [rax],al
   140057d00:	nop
   140057d01:	sub    eax,0x14004
   140057d06:	add    BYTE PTR [rax],al
   140057d08:	mov    BYTE PTR [rip+0x14004],ch        # 0x14006bd12
   140057d0e:	add    BYTE PTR [rax],al
   140057d10:	js     0x140057d3f
   140057d12:	add    al,0x40
   140057d14:	add    DWORD PTR [rax],eax
   140057d16:	add    BYTE PTR [rax],al
   140057d18:	push   0x140042d
   140057d1d:	add    BYTE PTR [rax],al
   140057d1f:	add    BYTE PTR [rbp+rbp*1+0x4],bl
   140057d23:	rex add DWORD PTR [rax],eax
   140057d26:	add    BYTE PTR [rax],al
   140057d28:	push   rsp
   140057d29:	sub    eax,0x14004
   140057d2e:	add    BYTE PTR [rax],al
   140057d30:	push   rax
   140057d31:	sub    eax,0x14004
   140057d36:	add    BYTE PTR [rax],al
   140057d38:	rex sub eax,0x14004
	...
   140057d8e:	add    BYTE PTR [rax],al
   140057d90:	and    al,0x0
   140057d92:	add    BYTE PTR [rax],al
   140057d94:	mov    ch,0x3
   140057d96:	add    BYTE PTR [rax],al
   140057d98:	add    DWORD PTR ds:[rax],eax
   140057d9b:	add    BYTE PTR [rcx],al
	...
   140057da5:	add    BYTE PTR [rax],al
   140057da7:	add    BYTE PTR [rax],ch
   140057da9:	sub    eax,0x14004
   140057dae:	add    BYTE PTR [rax],al
   140057db0:	sbb    BYTE PTR [rip+0x14004],ch        # 0x14006bdba
   140057db6:	add    BYTE PTR [rax],al
   140057db8:	shr    BYTE PTR [rip+0x14004],0x0        # 0x14006bdc3
   140057dbf:	add    BYTE PTR [rax+0x2d],ch
   140057dc2:	add    al,0x40
   140057dc4:	add    DWORD PTR [rax],eax
   140057dc6:	add    BYTE PTR [rax],al
   140057dc8:	or     BYTE PTR [rip+0x14004],ch        # 0x14006bdd2
   140057dce:	add    BYTE PTR [rax],al
   140057dd0:	cld    
   140057dd1:	sub    al,0x4
   140057dd3:	rex add DWORD PTR [rax],eax
   140057dd6:	add    BYTE PTR [rax],al
   140057dd8:	lock sub al,0x4
   140057ddb:	rex add DWORD PTR [rax],eax
   140057dde:	add    BYTE PTR [rax],al
   140057de0:	in     al,0x2c
   140057de2:	add    al,0x40
   140057de4:	add    DWORD PTR [rax],eax
	...
   140057e4e:	add    BYTE PTR [rax],al
   140057e50:	and    al,0x0
   140057e52:	add    BYTE PTR [rax],al
   140057e54:	(bad)  
   140057e55:	(bad)  
   140057e56:	(bad)  
   140057e57:	(bad)  
   140057e58:	(bad)  
   140057e59:	add    DWORD PTR [rax],eax
   140057e5b:	add    BYTE PTR [rcx],al
	...
   140057e65:	add    BYTE PTR [rax],al
   140057e67:	add    al,dl
   140057e69:	sub    al,0x4
   140057e6b:	rex add DWORD PTR [rax],eax
   140057e6e:	add    BYTE PTR [rax],al
   140057e70:	shr    BYTE PTR [rsp+rax*1],0x40
   140057e74:	add    DWORD PTR [rax],eax
   140057e76:	add    BYTE PTR [rax],al
   140057e78:	mov    eax,0x140042c
   140057e7d:	add    BYTE PTR [rax],al
   140057e7f:	add    BYTE PTR [rbp+rbp*1+0x4],bl
   140057e83:	rex add DWORD PTR [rax],eax
   140057e86:	add    BYTE PTR [rax],al
   140057e88:	mov    ah,0x2c
   140057e8a:	add    al,0x40
   140057e8c:	add    DWORD PTR [rax],eax
   140057e8e:	add    BYTE PTR [rax],al
   140057e90:	movabs al,ds:0x140042c
	...
   140057f0d:	add    BYTE PTR [rax],al
   140057f0f:	add    BYTE PTR [rip+0x31000000],ah        # 0x171057f15
   140057f15:	(bad)  
   140057f16:	add    BYTE PTR [rax],al
   140057f18:	and    BYTE PTR [rax],al
	...
   140057f26:	add    BYTE PTR [rax],al
   140057f28:	nop
   140057f29:	sub    al,0x4
   140057f2b:	rex add DWORD PTR [rax],eax
   140057f2e:	add    BYTE PTR [rax],al
   140057f30:	sub    BYTE PTR [rsp+rax*1],0x40
   140057f34:	add    DWORD PTR [rax],eax
	...
   140057fce:	add    BYTE PTR [rax],al
   140057fd0:	(bad)  
   140057fd1:	add    BYTE PTR [rax],al
   140057fd3:	add    BYTE PTR [rsp+rax*8],ch
   140057fd6:	add    BYTE PTR [rax],al
   140057fd8:	sbb    eax,0x1000000
	...
   140057fe5:	add    BYTE PTR [rax],al
   140057fe7:	add    BYTE PTR [rax+0x2c],dh
   140057fea:	add    al,0x40
   140057fec:	add    DWORD PTR [rax],eax
   140057fee:	add    BYTE PTR [rax],al
   140057ff0:	(bad)  
   140057ff1:	sub    al,0x4
   140057ff3:	rex add DWORD PTR [rax],eax
	...
   14005808e:	add    BYTE PTR [rax],al
   140058090:	(bad)  
   140058091:	(bad)  
   140058092:	(bad)  
   140058093:	(bad)  
   140058094:	(bad)  
   140058095:	(bad)  
   140058096:	(bad)  
   140058097:	call   FWORD PTR [rsi]
	...
   1400580a5:	add    BYTE PTR [rax],al
   1400580a7:	add    BYTE PTR [rax+0x2c],dl
   1400580aa:	add    al,0x40
   1400580ac:	add    DWORD PTR [rax],eax
   1400580ae:	add    BYTE PTR [rax],al
   1400580b0:	sub    al,0x4
   1400580b3:	rex add DWORD PTR [rax],eax
	...
   14005814e:	add    BYTE PTR [rax],al
   140058150:	sub    BYTE PTR [rax],al
   140058152:	add    BYTE PTR [rax],al
   140058154:	(bad)  
   140058155:	(bad)  
   140058156:	(bad)  
   140058157:	call   FWORD PTR [rdi]
	...
   140058165:	add    BYTE PTR [rax],al
   140058167:	add    BYTE PTR [rax],dh
   140058169:	sub    al,0x4
   14005816b:	rex add DWORD PTR [rax],eax
   14005816e:	add    BYTE PTR [rax],al
   140058170:	and    BYTE PTR [rsp+rax*1],ch
   140058173:	rex add DWORD PTR [rax],eax
	...
   14005820e:	add    BYTE PTR [rax],al
   140058210:	sub    DWORD PTR [rax],eax
   140058212:	add    BYTE PTR [rax],al
   140058214:	(bad)  
   140058215:	(bad)  
   140058216:	(bad)  
   140058217:	(bad)  
   140058218:	(bad)  
	...
   140058225:	add    BYTE PTR [rax],al
   140058227:	add    BYTE PTR [rax],cl
   140058229:	sub    al,0x4
   14005822b:	rex add DWORD PTR [rax],eax
   14005822e:	add    BYTE PTR [rax],al
   140058230:	clc    
   140058231:	sub    eax,DWORD PTR [rax+rax*2]
   140058234:	add    DWORD PTR [rax],eax
   140058236:	add    BYTE PTR [rax],al
   140058238:	call   0x141458668
   14005823d:	add    BYTE PTR [rax],al
   14005823f:	add    al,bl
   140058241:	sub    eax,DWORD PTR [rax+rax*2]
   140058244:	add    DWORD PTR [rax],eax
   140058246:	add    BYTE PTR [rax],al
   140058248:	shr    BYTE PTR [rbx],1
   14005824a:	add    al,0x40
   14005824c:	add    DWORD PTR [rax],eax
   14005824e:	add    BYTE PTR [rax],al
   140058250:	mov    eax,0x140042b
	...
   1400582cd:	add    BYTE PTR [rax],al
   1400582cf:	add    BYTE PTR [rdx],ch
   1400582d1:	add    BYTE PTR [rax],al
   1400582d3:	add    bh,bh
   1400582d5:	(bad)  
   1400582d6:	(bad)  
   1400582d7:	inc    DWORD PTR [rax+0x0]
	...
   1400582e6:	add    BYTE PTR [rax],al
   1400582e8:	movabs al,ds:0x900000000140042b
   1400582f1:	sub    eax,DWORD PTR [rax+rax*2]
   1400582f4:	add    DWORD PTR [rax],eax
   1400582f6:	add    BYTE PTR [rax],al
   1400582f8:	mov    WORD PTR [rbx],gs
   1400582fa:	add    al,0x40
   1400582fc:	add    DWORD PTR [rax],eax
   1400582fe:	add    BYTE PTR [rax],al
   140058300:	sub    BYTE PTR [rbx],0x4
   140058303:	rex add DWORD PTR [rax],eax
   140058306:	add    BYTE PTR [rax],al
   140058308:	push   0x140042b
	...
   14005838d:	add    BYTE PTR [rax],al
   14005838f:	add    BYTE PTR [rbx],ch
   140058391:	add    BYTE PTR [rax],al
   140058393:	add    bh,bh
   140058395:	(bad)  
   140058396:	(bad)  
   140058397:	inc    DWORD PTR [rcx+0x0]
	...
   1400583a6:	add    BYTE PTR [rax],al
   1400583a8:	sub    eax,DWORD PTR fs:[rax+rax*2]
   1400583ac:	add    DWORD PTR [rax],eax
   1400583ae:	add    BYTE PTR [rax],al
   1400583b0:	pop    rax
   1400583b1:	sub    eax,DWORD PTR [rax+rax*2]
   1400583b4:	add    DWORD PTR [rax],eax
   1400583b6:	add    BYTE PTR [rax],al
   1400583b8:	sub    rax,QWORD PTR [rax+rax*2]
   1400583bc:	add    DWORD PTR [rax],eax
   1400583be:	add    BYTE PTR [rax],al
   1400583c0:	xor    BYTE PTR [rbx],ch
   1400583c2:	add    al,0x40
   1400583c4:	add    DWORD PTR [rax],eax
	...
   14005844e:	add    BYTE PTR [rax],al
   140058450:	sub    al,0x0
   140058452:	add    BYTE PTR [rax],al
   140058454:	(bad)  
   140058455:	(bad)  
   140058456:	(bad)  
   140058457:	inc    DWORD PTR [rdx+0x0]
	...
   140058466:	add    BYTE PTR [rax],al
   140058468:	and    BYTE PTR [rbx],ch
   14005846a:	add    al,0x40
   14005846c:	add    DWORD PTR [rax],eax
   14005846e:	add    BYTE PTR [rax],al
   140058470:	adc    BYTE PTR [rbx],ch
   140058472:	add    al,0x40
   140058474:	add    DWORD PTR [rax],eax
   140058476:	add    BYTE PTR [rax],al
   140058478:	clc    
   140058479:	sub    al,BYTE PTR [rax+rax*2]
   14005847c:	add    DWORD PTR [rax],eax
	...
   14005850e:	add    BYTE PTR [rax],al
   140058510:	sub    eax,0xff000000
   140058515:	(bad)  
   140058516:	(bad)  
   140058517:	inc    DWORD PTR [rbx+0x0]
	...
   140058526:	add    BYTE PTR [rax],al
   140058528:	call   0x141458957
   14005852d:	add    BYTE PTR [rax],al
   14005852f:	add    al,bl
   140058531:	sub    al,BYTE PTR [rax+rax*2]
   140058534:	add    DWORD PTR [rax],eax
   140058536:	add    BYTE PTR [rax],al
   140058538:	shr    BYTE PTR [rdx],0x4
   14005853b:	rex add DWORD PTR [rax],eax
	...
   1400585ce:	add    BYTE PTR [rax],al
   1400585d0:	add    BYTE PTR cs:[rax],al
   1400585d3:	add    bh,bh
   1400585d5:	(bad)  
   1400585d6:	(bad)  
   1400585d7:	inc    DWORD PTR [rax+rax*1+0x0]
	...
   1400585e7:	add    BYTE PTR [rax+0x140042a],ch
   1400585ed:	add    BYTE PTR [rax],al
   1400585ef:	add    BYTE PTR [rax+0x140042a],bl
   1400585f5:	add    BYTE PTR [rax],al
   1400585f7:	add    BYTE PTR [rax+0x140042a],cl
   1400585fd:	add    BYTE PTR [rax],al
   1400585ff:	add    BYTE PTR [rax+0x2a],bh
   140058602:	add    al,0x40
   140058604:	add    DWORD PTR [rax],eax
	...
   14005868e:	add    BYTE PTR [rax],al
   140058690:	(bad)  
   140058691:	add    BYTE PTR [rax],al
   140058693:	add    bh,bh
   140058695:	(bad)  
   140058696:	(bad)  
   140058697:	inc    DWORD PTR [rbp+0x0]
	...
   1400586a6:	add    BYTE PTR [rax],al
   1400586a8:	push   0x140042a
   1400586ad:	add    BYTE PTR [rax],al
   1400586af:	add    BYTE PTR [rax+0x2a],bl
   1400586b2:	add    al,0x40
   1400586b4:	add    DWORD PTR [rax],eax
   1400586b6:	add    BYTE PTR [rax],al
   1400586b8:	sub    al,BYTE PTR [rax+rax*2]
   1400586bc:	add    DWORD PTR [rax],eax
	...
   14005874e:	add    BYTE PTR [rax],al
   140058750:	xor    BYTE PTR [rax],al
   140058752:	add    BYTE PTR [rax],al
   140058754:	(bad)  
   140058755:	(bad)  
   140058756:	(bad)  
   140058757:	inc    DWORD PTR [rsi+0x0]
	...
   140058766:	add    BYTE PTR [rax],al
   140058768:	xor    BYTE PTR [rdx],ch
   14005876a:	add    al,0x40
   14005876c:	add    DWORD PTR [rax],eax
   14005876e:	add    BYTE PTR [rax],al
   140058770:	and    BYTE PTR [rdx],ch
   140058772:	add    al,0x40
   140058774:	add    DWORD PTR [rax],eax
   140058776:	add    BYTE PTR [rax],al
   140058778:	or     BYTE PTR [rdx],ch
   14005877a:	add    al,0x40
   14005877c:	add    DWORD PTR [rax],eax
	...
   14005880e:	add    BYTE PTR [rax],al
   140058810:	xor    DWORD PTR [rax],eax
   140058812:	add    BYTE PTR [rax],al
   140058814:	(bad)  
   140058815:	(bad)  
   140058816:	(bad)  
   140058817:	inc    DWORD PTR [rdi+0x0]
	...
   140058826:	add    BYTE PTR [rax],al
   140058828:	clc    
   140058829:	sub    DWORD PTR [rax+rax*2],eax
   14005882c:	add    DWORD PTR [rax],eax
   14005882e:	add    BYTE PTR [rax],al
   140058830:	call   0x141458c5e
   140058835:	add    BYTE PTR [rax],al
   140058837:	add    al,dl
   140058839:	sub    DWORD PTR [rax+rax*2],eax
   14005883c:	add    DWORD PTR [rax],eax
	...
   1400588ce:	add    BYTE PTR [rax],al
   1400588d0:	xor    al,BYTE PTR [rax]
   1400588d2:	add    BYTE PTR [rax],al
   1400588d4:	(bad)  
   1400588d5:	(bad)  
   1400588d6:	(bad)  
   1400588d7:	dec    DWORD PTR [rax+0x0]
	...
   1400588e6:	add    BYTE PTR [rax],al
   1400588e8:	shr    BYTE PTR [rcx],0x4
   1400588eb:	rex add DWORD PTR [rax],eax
   1400588ee:	add    BYTE PTR [rax],al
   1400588f0:	mov    al,0x29
   1400588f2:	add    al,0x40
   1400588f4:	add    DWORD PTR [rax],eax
   1400588f6:	add    BYTE PTR [rax],al
   1400588f8:	cwde   
   1400588f9:	sub    DWORD PTR [rax+rax*2],eax
   1400588fc:	add    DWORD PTR [rax],eax
	...
   14005898e:	add    BYTE PTR [rax],al
   140058990:	xor    eax,DWORD PTR [rax]
   140058992:	add    BYTE PTR [rax],al
   140058994:	(bad)  
   140058995:	(bad)  
   140058996:	(bad)  
   140058997:	dec    DWORD PTR [rcx+0x0]
	...
   1400589a6:	add    BYTE PTR [rax],al
   1400589a8:	mov    WORD PTR [rcx],gs
   1400589aa:	add    al,0x40
   1400589ac:	add    DWORD PTR [rax],eax
   1400589ae:	add    BYTE PTR [rax],al
   1400589b0:	sub    BYTE PTR [rcx],0x4
   1400589b3:	rex add DWORD PTR [rax],eax
   1400589b6:	add    BYTE PTR [rax],al
   1400589b8:	jo     0x1400589e3
   1400589ba:	add    al,0x40
   1400589bc:	add    DWORD PTR [rax],eax
	...
   140058a4e:	add    BYTE PTR [rax],al
   140058a50:	xor    al,0x0
   140058a52:	add    BYTE PTR [rax],al
   140058a54:	(bad)  
   140058a55:	(bad)  
   140058a56:	(bad)  
   140058a57:	dec    DWORD PTR [rdx+0x0]
	...
   140058a66:	add    BYTE PTR [rax],al
   140058a68:	sub    DWORD PTR fs:[rax+rax*2],eax
   140058a6c:	add    DWORD PTR [rax],eax
   140058a6e:	add    BYTE PTR [rax],al
   140058a70:	pop    rax
   140058a71:	sub    DWORD PTR [rax+rax*2],eax
   140058a74:	add    DWORD PTR [rax],eax
   140058a76:	add    BYTE PTR [rax],al
   140058a78:	sub    QWORD PTR [rax+rax*2],rax
   140058a7c:	add    DWORD PTR [rax],eax
	...
   140058b0e:	add    BYTE PTR [rax],al
   140058b10:	xor    eax,0xff000000
   140058b15:	(bad)  
   140058b16:	(bad)  
   140058b17:	dec    DWORD PTR [rbx+0x0]
	...
   140058b26:	add    BYTE PTR [rax],al
   140058b28:	cmp    BYTE PTR [rcx],ch
   140058b2a:	add    al,0x40
   140058b2c:	add    DWORD PTR [rax],eax
   140058b2e:	add    BYTE PTR [rax],al
   140058b30:	sub    BYTE PTR [rcx],ch
   140058b32:	add    al,0x40
   140058b34:	add    DWORD PTR [rax],eax
   140058b36:	add    BYTE PTR [rax],al
   140058b38:	adc    BYTE PTR [rcx],ch
   140058b3a:	add    al,0x40
   140058b3c:	add    DWORD PTR [rax],eax
	...
   140058bce:	add    BYTE PTR [rax],al
   140058bd0:	add    BYTE PTR ss:[rax],al
   140058bd3:	add    bh,bh
   140058bd5:	(bad)  
   140058bd6:	(bad)  
   140058bd7:	dec    DWORD PTR [rax+rax*1+0x0]
	...
   140058be7:	add    BYTE PTR [rax],al
   140058be9:	sub    DWORD PTR [rax+rax*2],eax
   140058bec:	add    DWORD PTR [rax],eax
   140058bee:	add    BYTE PTR [rax],al
   140058bf0:	lock sub BYTE PTR [rax+rax*2],al
   140058bf4:	add    DWORD PTR [rax],eax
   140058bf6:	add    BYTE PTR [rax],al
   140058bf8:	fsubr  DWORD PTR [rax]
   140058bfa:	add    al,0x40
   140058bfc:	add    DWORD PTR [rax],eax
	...
   140058c8e:	add    BYTE PTR [rax],al
   140058c90:	(bad)  
   140058c91:	add    BYTE PTR [rax],al
   140058c93:	add    bh,bh
   140058c95:	(bad)  
   140058c96:	(bad)  
   140058c97:	dec    DWORD PTR [rbp+0x0]
	...
   140058ca6:	add    BYTE PTR [rax],al
   140058ca8:	enter  0x428,0x40
   140058cac:	add    DWORD PTR [rax],eax
   140058cae:	add    BYTE PTR [rax],al
   140058cb0:	mov    eax,0x1400428
   140058cb5:	add    BYTE PTR [rax],al
   140058cb7:	add    BYTE PTR [rax+0x1400428],ch
	...
   140058d4d:	add    BYTE PTR [rax],al
   140058d4f:	add    BYTE PTR [rax],bh
   140058d51:	add    BYTE PTR [rax],al
   140058d53:	add    bh,bh
   140058d55:	(bad)  
   140058d56:	(bad)  
   140058d57:	dec    DWORD PTR [rsi+0x0]
	...
   140058d66:	add    BYTE PTR [rax],al
   140058d68:	cwde   
   140058d69:	sub    BYTE PTR [rax+rax*2],al
   140058d6c:	add    DWORD PTR [rax],eax
   140058d6e:	add    BYTE PTR [rax],al
   140058d70:	mov    BYTE PTR [rax],ch
   140058d72:	add    al,0x40
   140058d74:	add    DWORD PTR [rax],eax
   140058d76:	add    BYTE PTR [rax],al
   140058d78:	test   BYTE PTR [rax],ch
   140058d7a:	add    al,0x40
   140058d7c:	add    DWORD PTR [rax],eax
   140058d7e:	add    BYTE PTR [rax],al
   140058d80:	js     0x140058daa
   140058d82:	add    al,0x40
   140058d84:	add    DWORD PTR [rax],eax
   140058d86:	add    BYTE PTR [rax],al
   140058d88:	push   0x1400428
	...
   140058e0d:	add    BYTE PTR [rax],al
   140058e0f:	add    BYTE PTR [rcx],bh
   140058e11:	add    BYTE PTR [rax],al
   140058e13:	add    al,cl
   140058e15:	push   rcx
   140058e16:	add    BYTE PTR [rax],al
   140058e18:	rex.WRXB add BYTE PTR [r8],r8b
	...
   140058e27:	add    BYTE PTR [rax+0x28],bl
   140058e2a:	add    al,0x40
   140058e2c:	add    DWORD PTR [rax],eax
   140058e2e:	add    BYTE PTR [rax],al
   140058e30:	rex.W sub BYTE PTR [rax+rax*2],al
   140058e34:	add    DWORD PTR [rax],eax
   140058e36:	add    BYTE PTR [rax],al
   140058e38:	sub    BYTE PTR [rax+rax*2],al
   140058e3c:	add    DWORD PTR [rax],eax
   140058e3e:	add    BYTE PTR [rax],al
   140058e40:	xor    BYTE PTR [rax],ch
   140058e42:	add    al,0x40
   140058e44:	add    DWORD PTR [rax],eax
   140058e46:	add    BYTE PTR [rax],al
   140058e48:	sbb    BYTE PTR [rax],ch
   140058e4a:	add    al,0x40
   140058e4c:	add    DWORD PTR [rax],eax
   140058e4e:	add    BYTE PTR [rax],al
   140058e50:	or     BYTE PTR [rax],ch
   140058e52:	add    al,0x40
   140058e54:	add    DWORD PTR [rax],eax
   140058e56:	add    BYTE PTR [rax],al
   140058e58:	clc    
   140058e59:	(bad)  
   140058e5a:	add    al,0x40
   140058e5c:	add    DWORD PTR [rax],eax
   140058e5e:	add    BYTE PTR [rax],al
   140058e60:	call   0x14145928c
	...
   140058ecd:	add    BYTE PTR [rax],al
   140058ecf:	add    BYTE PTR [rdx],bh
   140058ed1:	add    BYTE PTR [rax],al
   140058ed3:	add    bh,bh
   140058ed5:	(bad)  
   140058ed6:	(bad)  
   140058ed7:	call   QWORD PTR [rax+0x0]
	...
   140058ee6:	add    BYTE PTR [rax],al
   140058ee8:	fsub   DWORD PTR [rdi]
   140058eea:	add    al,0x40
   140058eec:	add    DWORD PTR [rax],eax
   140058eee:	add    BYTE PTR [rax],al
   140058ef0:	enter  0x427,0x40
   140058ef4:	add    DWORD PTR [rax],eax
   140058ef6:	add    BYTE PTR [rax],al
   140058ef8:	mov    eax,0x1400427
   140058efd:	add    BYTE PTR [rax],al
   140058eff:	add    BYTE PTR [rdi+riz*1+0x14004],dh
   140058f06:	add    BYTE PTR [rax],al
   140058f08:	movabs al,ds:0x1400427
	...
   140058f8d:	add    BYTE PTR [rax],al
   140058f8f:	add    BYTE PTR [rbx],bh
   140058f91:	add    BYTE PTR [rax],al
   140058f93:	add    bh,bh
   140058f95:	(bad)  
   140058f96:	(bad)  
   140058f97:	call   QWORD PTR [rcx+0x0]
	...
   140058fa6:	add    BYTE PTR [rax],al
   140058fa8:	nop
   140058fa9:	(bad)  
   140058faa:	add    al,0x40
   140058fac:	add    DWORD PTR [rax],eax
   140058fae:	add    BYTE PTR [rax],al
   140058fb0:	and    BYTE PTR [rdi],0x4
   140058fb3:	rex add DWORD PTR [rax],eax
   140058fb6:	add    BYTE PTR [rax],al
   140058fb8:	push   0x1400427
	...
   14005904d:	add    BYTE PTR [rax],al
   14005904f:	add    BYTE PTR [rax+rax*1],bh
   140059052:	add    BYTE PTR [rax],al
   140059054:	(bad)  
   140059055:	(bad)  
   140059056:	(bad)  
   140059057:	call   QWORD PTR [rdx+0x0]
	...
   140059066:	add    BYTE PTR [rax],al
   140059068:	fs (bad) 
   14005906a:	add    al,0x40
   14005906c:	add    DWORD PTR [rax],eax
   14005906e:	add    BYTE PTR [rax],al
   140059070:	pop    rax
   140059071:	(bad)  
   140059072:	add    al,0x40
   140059074:	add    DWORD PTR [rax],eax
   140059076:	add    BYTE PTR [rax],al
   140059078:	rex.W (bad) 
   14005907a:	add    al,0x40
   14005907c:	add    DWORD PTR [rax],eax
   14005907e:	add    BYTE PTR [rax],al
   140059080:	xor    BYTE PTR [rdi],ah
   140059082:	add    al,0x40
   140059084:	add    DWORD PTR [rax],eax
	...
   14005910e:	add    BYTE PTR [rax],al
   140059110:	cmp    eax,0xff000000
   140059115:	(bad)  
   140059116:	(bad)  
   140059117:	call   QWORD PTR [rbx+0x0]
	...
   140059126:	add    BYTE PTR [rax],al
   140059128:	sub    al,0x27
   14005912a:	add    al,0x40
   14005912c:	add    DWORD PTR [rax],eax
   14005912e:	add    BYTE PTR [rax],al
   140059130:	and    BYTE PTR [rdi],ah
   140059132:	add    al,0x40
   140059134:	add    DWORD PTR [rax],eax
   140059136:	add    BYTE PTR [rax],al
   140059138:	adc    BYTE PTR [rdi],ah
   14005913a:	add    al,0x40
   14005913c:	add    DWORD PTR [rax],eax
   14005913e:	add    BYTE PTR [rax],al
   140059140:	add    BYTE PTR [rdi],ah
   140059142:	add    al,0x40
   140059144:	add    DWORD PTR [rax],eax
	...
   1400591ce:	add    BYTE PTR [rax],al
   1400591d0:	add    BYTE PTR ds:[rax],al
   1400591d3:	add    bh,bh
   1400591d5:	(bad)  
   1400591d6:	(bad)  
   1400591d7:	call   QWORD PTR [rax+rax*1+0x0]
	...
   1400591e7:	add    al,dh
   1400591e9:	es add al,0x40
   1400591ec:	add    DWORD PTR [rax],eax
   1400591ee:	add    BYTE PTR [rax],al
   1400591f0:	loopne 0x140059218
   1400591f2:	add    al,0x40
   1400591f4:	add    DWORD PTR [rax],eax
   1400591f6:	add    BYTE PTR [rax],al
   1400591f8:	shl    BYTE PTR [rsi],1
   1400591fa:	add    al,0x40
   1400591fc:	add    DWORD PTR [rax],eax
   1400591fe:	add    BYTE PTR [rax],al
   140059200:	int3   
   140059201:	es add al,0x40
   140059204:	add    DWORD PTR [rax],eax
   140059206:	add    BYTE PTR [rax],al
   140059208:	mov    eax,0x1400426
	...
   14005928d:	add    BYTE PTR [rax],al
   14005928f:	add    BYTE PTR [rdi],bh
   140059291:	add    BYTE PTR [rax],al
   140059293:	add    bh,bh
   140059295:	(bad)  
   140059296:	(bad)  
   140059297:	call   QWORD PTR [rbp+0x0]
	...
   1400592a6:	add    BYTE PTR [rax],al
   1400592a8:	test   al,0x26
   1400592aa:	add    al,0x40
   1400592ac:	add    DWORD PTR [rax],eax
   1400592ae:	add    BYTE PTR [rax],al
   1400592b0:	cwde   
   1400592b1:	es add al,0x40
   1400592b4:	add    DWORD PTR [rax],eax
   1400592b6:	add    BYTE PTR [rax],al
   1400592b8:	nop
   1400592b9:	es add al,0x40
   1400592bc:	add    DWORD PTR [rax],eax
   1400592be:	add    BYTE PTR [rax],al
   1400592c0:	and    BYTE PTR [rsi],0x4
   1400592c3:	rex add DWORD PTR [rax],eax
   1400592c6:	add    BYTE PTR [rax],al
   1400592c8:	jo     0x1400592f0
   1400592ca:	add    al,0x40
   1400592cc:	add    DWORD PTR [rax],eax
	...
   14005934e:	add    BYTE PTR [rax],al
   140059350:	add    BYTE PTR [rax],al
   140059353:	add    bh,bh
   140059355:	(bad)  
   140059356:	(bad)  
   140059357:	call   QWORD PTR [rsi+0x0]
	...
   140059366:	add    BYTE PTR [rax],al
   140059368:	fs es add al,0x40
   14005936c:	add    DWORD PTR [rax],eax
   14005936e:	add    BYTE PTR [rax],al
   140059370:	pop    rax
   140059371:	es add al,0x40
   140059374:	add    DWORD PTR [rax],eax
   140059376:	add    BYTE PTR [rax],al
   140059378:	rex.W
   140059379:	es add al,0x40
   14005937c:	add    DWORD PTR [rax],eax
	...
   14005940e:	add    BYTE PTR [rax],al
   140059410:	add    BYTE PTR [r8],al
   140059413:	add    bh,bh
   140059415:	(bad)  
   140059416:	(bad)  
   140059417:	call   QWORD PTR [rdi+0x0]
	...
   140059426:	add    BYTE PTR [rax],al
   140059428:	cmp    BYTE PTR [rsi],ah
   14005942a:	add    al,0x40
   14005942c:	add    DWORD PTR [rax],eax
   14005942e:	add    BYTE PTR [rax],al
   140059430:	sub    BYTE PTR [rsi],ah
   140059432:	add    al,0x40
   140059434:	add    DWORD PTR [rax],eax
   140059436:	add    BYTE PTR [rax],al
   140059438:	and    BYTE PTR [rsi],ah
   14005943a:	add    al,0x40
   14005943c:	add    DWORD PTR [rax],eax
   14005943e:	add    BYTE PTR [rax],al
   140059440:	adc    BYTE PTR [rsi],ah
   140059442:	add    al,0x40
   140059444:	add    DWORD PTR [rax],eax
   140059446:	add    BYTE PTR [rax],al
   140059448:	add    BYTE PTR [rsi],ah
   14005944a:	add    al,0x40
   14005944c:	add    DWORD PTR [rax],eax
	...
   1400594ce:	add    BYTE PTR [rax],al
   1400594d0:	rex.X add BYTE PTR [rax],al
   1400594d3:	add    bh,bh
   1400594d5:	(bad)  
   1400594d6:	(bad)  
   1400594d7:	call   FWORD PTR [rax+0x0]
	...
   1400594e6:	add    BYTE PTR [rax],al
   1400594e8:	lock and eax,0x14004
   1400594ee:	add    BYTE PTR [rax],al
   1400594f0:	call   0x14145991a
	...
   14005958d:	add    BYTE PTR [rax],al
   14005958f:	add    BYTE PTR [rbx+0x0],al
   140059592:	add    BYTE PTR [rax],al
   140059594:	(bad)  
   140059595:	(bad)  
   140059596:	(bad)  
   140059597:	call   FWORD PTR [rcx+0x0]
	...
   1400595a6:	add    BYTE PTR [rax],al
   1400595a8:	shl    BYTE PTR [rip+0x14004],1        # 0x14006d5b2
   1400595ae:	add    BYTE PTR [rax],al
   1400595b0:	shl    BYTE PTR [rip+0x14004],0x0        # 0x14006d5bb
   1400595b7:	add    BYTE PTR [rax+0x1400425],dh
   1400595bd:	add    BYTE PTR [rax],al
   1400595bf:	add    BYTE PTR [rax+0x1400425],bl
	...
   14005964d:	add    BYTE PTR [rax],al
   14005964f:	add    BYTE PTR [rax+rax*1+0x0],al
   140059653:	add    bh,bh
   140059655:	(bad)  
   140059656:	(bad)  
   140059657:	call   FWORD PTR [rdx+0x0]
	...
   140059666:	add    BYTE PTR [rax],al
   140059668:	and    BYTE PTR [rip+0x14004],0x0        # 0x14006d673
   14005966f:	add    BYTE PTR [rax+0x25],dh
   140059672:	add    al,0x40
   140059674:	add    DWORD PTR [rax],eax
   140059676:	add    BYTE PTR [rax],al
   140059678:	(bad)  
   140059679:	and    eax,0x14004
   14005967e:	add    BYTE PTR [rax],al
   140059680:	push   rax
   140059681:	and    eax,0x14004
   140059686:	add    BYTE PTR [rax],al
   140059688:	cmp    BYTE PTR [rip+0x14004],ah        # 0x14006d692
	...
   14005970e:	add    BYTE PTR [rax],al
   140059710:	add    BYTE PTR [r8],r8b
   140059713:	add    bh,bh
   140059715:	(bad)  
   140059716:	(bad)  
   140059717:	call   FWORD PTR [rbx+0x0]
	...
   140059726:	add    BYTE PTR [rax],al
   140059728:	and    BYTE PTR [rip+0x14004],ah        # 0x14006d732
   14005972e:	add    BYTE PTR [rax],al
   140059730:	adc    BYTE PTR [rip+0x14004],ah        # 0x14006d73a
   140059736:	add    BYTE PTR [rax],al
   140059738:	add    BYTE PTR [rip+0x14004],ah        # 0x14006d742
   14005973e:	add    BYTE PTR [rax],al
   140059740:	call   0x141459b69
	...
   1400597cd:	add    BYTE PTR [rax],al
   1400597cf:	add    BYTE PTR [rsi+0x0],al
   1400597d2:	add    BYTE PTR [rax],al
   1400597d4:	(bad)  
   1400597d5:	(bad)  
   1400597d6:	(bad)  
   1400597d7:	call   FWORD PTR [rax+rax*1+0x0]
	...
   1400597e7:	add    al,dl
   1400597e9:	and    al,0x4
   1400597eb:	rex add DWORD PTR [rax],eax
   1400597ee:	add    BYTE PTR [rax],al
   1400597f0:	shl    BYTE PTR [rsp+rax*1],0x40
   1400597f4:	add    DWORD PTR [rax],eax
   1400597f6:	add    BYTE PTR [rax],al
   1400597f8:	mov    al,0x24
   1400597fa:	add    al,0x40
   1400597fc:	add    DWORD PTR [rax],eax
   1400597fe:	add    BYTE PTR [rax],al
   140059800:	cwde   
   140059801:	and    al,0x4
   140059803:	rex add DWORD PTR [rax],eax
	...
   14005988e:	add    BYTE PTR [rax],al
   140059890:	rex.RXB add BYTE PTR [r8],r8b
   140059893:	add    bh,bh
   140059895:	(bad)  
   140059896:	(bad)  
   140059897:	call   FWORD PTR [rbp+0x0]
	...
   1400598a6:	add    BYTE PTR [rax],al
   1400598a8:	and    BYTE PTR [rsp+rax*1],0x40
   1400598ac:	add    DWORD PTR [rax],eax
   1400598ae:	add    BYTE PTR [rax],al
   1400598b0:	jo     0x1400598d6
   1400598b2:	add    al,0x40
   1400598b4:	add    DWORD PTR [rax],eax
   1400598b6:	add    BYTE PTR [rax],al
   1400598b8:	(bad)  
   1400598b9:	and    al,0x4
   1400598bb:	rex add DWORD PTR [rax],eax
   1400598be:	add    BYTE PTR [rax],al
   1400598c0:	and    al,0x4
   1400598c3:	rex add DWORD PTR [rax],eax
	...
   14005994e:	add    BYTE PTR [rax],al
   140059950:	rex.W add BYTE PTR [rax],al
   140059953:	add    bh,bh
   140059955:	(bad)  
   140059956:	(bad)  
   140059957:	call   FWORD PTR [rsi+0x0]
	...
   140059966:	add    BYTE PTR [rax],al
   140059968:	sub    BYTE PTR [rsp+rax*1],ah
   14005996b:	rex add DWORD PTR [rax],eax
   14005996e:	add    BYTE PTR [rax],al
   140059970:	sbb    BYTE PTR [rsp+rax*1],ah
   140059973:	rex add DWORD PTR [rax],eax
   140059976:	add    BYTE PTR [rax],al
   140059978:	add    BYTE PTR [rsp+rax*1],ah
   14005997b:	rex add DWORD PTR [rax],eax
	...
   140059a0e:	add    BYTE PTR [rax],al
   140059a10:	rex.WB add BYTE PTR [r8],al
   140059a13:	add    bh,bh
   140059a15:	(bad)  
   140059a16:	(bad)  
   140059a17:	call   FWORD PTR [rdi+0x0]
	...
   140059a26:	add    BYTE PTR [rax],al
   140059a28:	lock and eax,DWORD PTR [rax+rax*2]
   140059a2c:	add    DWORD PTR [rax],eax
   140059a2e:	add    BYTE PTR [rax],al
   140059a30:	loopne 0x140059a55
   140059a32:	add    al,0x40
   140059a34:	add    DWORD PTR [rax],eax
   140059a36:	add    BYTE PTR [rax],al
   140059a38:	(bad)  
   140059a39:	and    eax,DWORD PTR [rax+rax*2]
   140059a3c:	add    DWORD PTR [rax],eax
   140059a3e:	add    BYTE PTR [rax],al
   140059a40:	enter  0x423,0x40
   140059a44:	add    DWORD PTR [rax],eax
	...
   140059ace:	add    BYTE PTR [rax],al
   140059ad0:	rex.WX add BYTE PTR [rax],al
   140059ad3:	add    bh,bh
   140059ad5:	(bad)  
   140059ad6:	(bad)  
   140059ad7:	jmp    QWORD PTR [rax+0x0]
	...
   140059ae6:	add    BYTE PTR [rax],al
   140059ae8:	mov    al,0x23
   140059aea:	add    al,0x40
   140059aec:	add    DWORD PTR [rax],eax
   140059aee:	add    BYTE PTR [rax],al
   140059af0:	movabs al,ds:0x9000000001400423
   140059af9:	and    eax,DWORD PTR [rax+rax*2]
   140059afc:	add    DWORD PTR [rax],eax
   140059afe:	add    BYTE PTR [rax],al
   140059b00:	mov    BYTE PTR [rbx],ah
   140059b02:	add    al,0x40
   140059b04:	add    DWORD PTR [rax],eax
   140059b06:	add    BYTE PTR [rax],al
   140059b08:	js     0x140059b2d
   140059b0a:	add    al,0x40
   140059b0c:	add    DWORD PTR [rax],eax
	...
   140059b8e:	add    BYTE PTR [rax],al
   140059b90:	rex.WXB add BYTE PTR [r8],al
   140059b93:	add    bh,bh
   140059b95:	(bad)  
   140059b96:	(bad)  
   140059b97:	jmp    QWORD PTR [rcx+0x0]
	...
   140059ba6:	add    BYTE PTR [rax],al
   140059ba8:	push   0x1400423
   140059bad:	add    BYTE PTR [rax],al
   140059baf:	add    BYTE PTR [rax+0x23],bl
   140059bb2:	add    al,0x40
   140059bb4:	add    DWORD PTR [rax],eax
   140059bb6:	add    BYTE PTR [rax],al
   140059bb8:	and    rax,QWORD PTR [rax+rax*2]
   140059bbc:	add    DWORD PTR [rax],eax
	...
   140059c4e:	add    BYTE PTR [rax],al
   140059c50:	rex.WR add BYTE PTR [rax],r8b
   140059c53:	add    BYTE PTR [rip+0x6200004f],ah        # 0x1a2059ca8
	...
   140059c65:	add    BYTE PTR [rax],al
   140059c67:	add    BYTE PTR [rax],bh
   140059c69:	and    eax,DWORD PTR [rax+rax*2]
   140059c6c:	add    DWORD PTR [rax],eax
   140059c6e:	add    BYTE PTR [rax],al
   140059c70:	sub    al,0x23
   140059c72:	add    al,0x40
   140059c74:	add    DWORD PTR [rax],eax
   140059c76:	add    BYTE PTR [rax],al
   140059c78:	and    BYTE PTR [rbx],ah
   140059c7a:	add    al,0x40
   140059c7c:	add    DWORD PTR [rax],eax
   140059c7e:	add    BYTE PTR [rax],al
   140059c80:	adc    BYTE PTR [rbx],ah
   140059c82:	add    al,0x40
   140059c84:	add    DWORD PTR [rax],eax
	...
   140059d0e:	add    BYTE PTR [rax],al
   140059d10:	rex.WRB add BYTE PTR [r8],r8b
   140059d13:	add    bh,bh
   140059d15:	(bad)  
   140059d16:	(bad)  
   140059d17:	jmp    QWORD PTR [rbx+0x0]
	...
   140059d26:	add    BYTE PTR [rax],al
   140059d28:	add    BYTE PTR [rbx],ah
   140059d2a:	add    al,0x40
   140059d2c:	add    DWORD PTR [rax],eax
   140059d2e:	add    BYTE PTR [rax],al
   140059d30:	lock and al,BYTE PTR [rax+rax*2]
   140059d34:	add    DWORD PTR [rax],eax
   140059d36:	add    BYTE PTR [rax],al
   140059d38:	call   0x14145a15f
   140059d3d:	add    BYTE PTR [rax],al
   140059d3f:	add    al,dl
   140059d41:	and    al,BYTE PTR [rax+rax*2]
   140059d44:	add    DWORD PTR [rax],eax
	...
   140059dce:	add    BYTE PTR [rax],al
   140059dd0:	rex.WRX add BYTE PTR [rax],r8b
   140059dd3:	add    bh,bh
   140059dd5:	(bad)  
   140059dd6:	(bad)  
   140059dd7:	jmp    QWORD PTR [rax+rax*1+0x0]
	...
   140059de7:	add    BYTE PTR [rax+0x1400422],bh
   140059ded:	add    BYTE PTR [rax],al
   140059def:	add    BYTE PTR [rax+0x1400422],ch
   140059df5:	add    BYTE PTR [rax],al
   140059df7:	add    BYTE PTR [rax+0x1400422],bl
   140059dfd:	add    BYTE PTR [rax],al
   140059dff:	add    BYTE PTR [rax+0x1400422],dl
   140059e05:	add    BYTE PTR [rax],al
   140059e07:	add    BYTE PTR [rdx+riz*1+0x14004],cl
   140059e0e:	add    BYTE PTR [rax],al
   140059e10:	js     0x140059e34
   140059e12:	add    al,0x40
   140059e14:	add    DWORD PTR [rax],eax
	...
   140059e8e:	add    BYTE PTR [rax],al
   140059e90:	rex.WRXB add BYTE PTR [r8],r8b
   140059e93:	add    bh,bh
   140059e95:	(bad)  
   140059e96:	(bad)  
   140059e97:	jmp    QWORD PTR [rbp+0x0]
	...
   140059ea6:	add    BYTE PTR [rax],al
   140059ea8:	(bad)  
   140059ea9:	and    al,BYTE PTR [rax+rax*2]
   140059eac:	add    DWORD PTR [rax],eax
   140059eae:	add    BYTE PTR [rax],al
   140059eb0:	push   rax
   140059eb1:	and    al,BYTE PTR [rax+rax*2]
   140059eb4:	add    DWORD PTR [rax],eax
   140059eb6:	add    BYTE PTR [rax],al
   140059eb8:	and    al,BYTE PTR [rax+rax*2]
   140059ebc:	add    DWORD PTR [rax],eax
   140059ebe:	add    BYTE PTR [rax],al
   140059ec0:	xor    al,0x22
   140059ec2:	add    al,0x40
   140059ec4:	add    DWORD PTR [rax],eax
   140059ec6:	add    BYTE PTR [rax],al
   140059ec8:	and    BYTE PTR [rdx],ah
   140059eca:	add    al,0x40
   140059ecc:	add    DWORD PTR [rax],eax
	...
   140059f4e:	add    BYTE PTR [rax],al
   140059f50:	push   rax
   140059f51:	add    BYTE PTR [rax],al
   140059f53:	add    bh,bh
   140059f55:	(bad)  
   140059f56:	(bad)  
   140059f57:	jmp    QWORD PTR [rsi+0x0]
	...
   140059f66:	add    BYTE PTR [rax],al
   140059f68:	or     BYTE PTR [rdx],ah
   140059f6a:	add    al,0x40
   140059f6c:	add    DWORD PTR [rax],eax
   140059f6e:	add    BYTE PTR [rax],al
   140059f70:	clc    
   140059f71:	and    DWORD PTR [rax+rax*2],eax
   140059f74:	add    DWORD PTR [rax],eax
   140059f76:	add    BYTE PTR [rax],al
   140059f78:	loopne 0x140059f9b
   140059f7a:	add    al,0x40
   140059f7c:	add    DWORD PTR [rax],eax
	...
   14005a00e:	add    BYTE PTR [rax],al
   14005a010:	push   rcx
   14005a011:	add    BYTE PTR [rax],al
   14005a013:	add    bh,bh
   14005a015:	(bad)  
   14005a016:	(bad)  
   14005a017:	jmp    QWORD PTR [rdi+0x0]
   14005a01a:	add    BYTE PTR [rax],al
   14005a01c:	add    DWORD PTR [rax],eax
   14005a01e:	add    BYTE PTR [rax],al
   14005a020:	add    al,BYTE PTR [rax]
   14005a022:	add    BYTE PTR [rax],al
   14005a024:	add    BYTE PTR [rax],al
   14005a026:	add    BYTE PTR [rax],al
   14005a028:	shl    BYTE PTR [rcx],1
   14005a02a:	add    al,0x40
   14005a02c:	add    DWORD PTR [rax],eax
   14005a02e:	add    BYTE PTR [rax],al
   14005a030:	shl    BYTE PTR [rcx],0x4
   14005a033:	rex add DWORD PTR [rax],eax
   14005a036:	add    BYTE PTR [rax],al
   14005a038:	mov    al,0x21
   14005a03a:	add    al,0x40
   14005a03c:	add    DWORD PTR [rax],eax
	...
   14005a0ce:	add    BYTE PTR [rax],al
   14005a0d0:	push   rdx
   14005a0d1:	add    BYTE PTR [rax],al
   14005a0d3:	add    bh,bh
   14005a0d5:	(bad)  
   14005a0d6:	(bad)  
   14005a0d7:	jmp    FWORD PTR [rax+0x0]
   14005a0da:	add    BYTE PTR [rax],al
   14005a0dc:	add    DWORD PTR [rax],eax
   14005a0de:	add    BYTE PTR [rax],al
   14005a0e0:	add    al,BYTE PTR [rax]
   14005a0e2:	add    BYTE PTR [rax],al
   14005a0e4:	add    BYTE PTR [rax],al
   14005a0e6:	add    BYTE PTR [rax],al
   14005a0e8:	movabs al,ds:0x9000000001400421
   14005a0f1:	and    DWORD PTR [rax+rax*2],eax
   14005a0f4:	add    DWORD PTR [rax],eax
   14005a0f6:	add    BYTE PTR [rax],al
   14005a0f8:	and    BYTE PTR [rcx],0x4
   14005a0fb:	rex add DWORD PTR [rax],eax
	...
   14005a18e:	add    BYTE PTR [rax],al
   14005a190:	push   rbx
   14005a191:	add    BYTE PTR [rax],al
   14005a193:	add    bh,bh
   14005a195:	(bad)  
   14005a196:	(bad)  
   14005a197:	jmp    FWORD PTR [rcx+0x0]
	...
   14005a1a6:	add    BYTE PTR [rax],al
   14005a1a8:	jo     0x14005a1cb
   14005a1aa:	add    al,0x40
   14005a1ac:	add    DWORD PTR [rax],eax
   14005a1ae:	add    BYTE PTR [rax],al
   14005a1b0:	(bad)  
   14005a1b1:	and    DWORD PTR [rax+rax*2],eax
   14005a1b4:	add    DWORD PTR [rax],eax
   14005a1b6:	add    BYTE PTR [rax],al
   14005a1b8:	push   rax
   14005a1b9:	and    DWORD PTR [rax+rax*2],eax
   14005a1bc:	add    DWORD PTR [rax],eax
	...
   14005a24e:	add    BYTE PTR [rax],al
   14005a250:	push   rsp
   14005a251:	add    BYTE PTR [rax],al
   14005a253:	add    bh,bh
   14005a255:	(bad)  
   14005a256:	(bad)  
   14005a257:	jmp    FWORD PTR [rdx+0x0]
   14005a25a:	add    BYTE PTR [rax],al
   14005a25c:	add    DWORD PTR [rax],eax
   14005a25e:	add    BYTE PTR [rax],al
   14005a260:	add    al,BYTE PTR [rax]
   14005a262:	add    BYTE PTR [rax],al
   14005a264:	add    BYTE PTR [rax],al
   14005a266:	add    BYTE PTR [rax],al
   14005a268:	rex and DWORD PTR [rax+rax*2],eax
   14005a26c:	add    DWORD PTR [rax],eax
   14005a26e:	add    BYTE PTR [rax],al
   14005a270:	xor    BYTE PTR [rcx],ah
   14005a272:	add    al,0x40
   14005a274:	add    DWORD PTR [rax],eax
   14005a276:	add    BYTE PTR [rax],al
   14005a278:	and    BYTE PTR [rcx],ah
   14005a27a:	add    al,0x40
   14005a27c:	add    DWORD PTR [rax],eax
	...
   14005a30e:	add    BYTE PTR [rax],al
   14005a310:	push   rbp
   14005a311:	add    BYTE PTR [rax],al
   14005a313:	add    bh,bh
   14005a315:	(bad)  
   14005a316:	(bad)  
   14005a317:	jmp    FWORD PTR [rbx+0x0]
   14005a31a:	add    BYTE PTR [rax],al
   14005a31c:	add    DWORD PTR [rax],eax
   14005a31e:	add    BYTE PTR [rax],al
   14005a320:	add    al,BYTE PTR [rax]
   14005a322:	add    BYTE PTR [rax],al
   14005a324:	add    BYTE PTR [rax],al
   14005a326:	add    BYTE PTR [rax],al
   14005a328:	adc    BYTE PTR [rcx],ah
   14005a32a:	add    al,0x40
   14005a32c:	add    DWORD PTR [rax],eax
   14005a32e:	add    BYTE PTR [rax],al
   14005a330:	add    BYTE PTR [rcx],ah
   14005a332:	add    al,0x40
   14005a334:	add    DWORD PTR [rax],eax
   14005a336:	add    BYTE PTR [rax],al
   14005a338:	lock and BYTE PTR [rax+rax*2],al
   14005a33c:	add    DWORD PTR [rax],eax
	...
   14005a3ce:	add    BYTE PTR [rax],al
   14005a3d0:	push   rsi
   14005a3d1:	add    BYTE PTR [rax],al
   14005a3d3:	add    bh,bh
   14005a3d5:	(bad)  
   14005a3d6:	(bad)  
   14005a3d7:	jmp    FWORD PTR [rax+rax*1+0x0]
	...
   14005a3e7:	add    al,ah
   14005a3e9:	and    BYTE PTR [rax+rax*2],al
   14005a3ec:	add    DWORD PTR [rax],eax
   14005a3ee:	add    BYTE PTR [rax],al
   14005a3f0:	shl    BYTE PTR [rax],1
   14005a3f2:	add    al,0x40
   14005a3f4:	add    DWORD PTR [rax],eax
   14005a3f6:	add    BYTE PTR [rax],al
   14005a3f8:	mov    eax,0x1400420
	...
   14005a48d:	add    BYTE PTR [rax],al
   14005a48f:	add    BYTE PTR [rdi+0x0],dl
   14005a492:	add    BYTE PTR [rax],al
   14005a494:	(bad)  
   14005a495:	(bad)  
   14005a496:	(bad)  
   14005a497:	jmp    FWORD PTR [rbp+0x0]
	...
   14005a4a6:	add    BYTE PTR [rax],al
   14005a4a8:	test   al,0x20
   14005a4aa:	add    al,0x40
   14005a4ac:	add    DWORD PTR [rax],eax
   14005a4ae:	add    BYTE PTR [rax],al
   14005a4b0:	cwde   
   14005a4b1:	and    BYTE PTR [rax+rax*2],al
   14005a4b4:	add    DWORD PTR [rax],eax
   14005a4b6:	add    BYTE PTR [rax],al
   14005a4b8:	mov    BYTE PTR [rax],ah
   14005a4ba:	add    al,0x40
   14005a4bc:	add    DWORD PTR [rax],eax
   14005a4be:	add    BYTE PTR [rax],al
   14005a4c0:	and    BYTE PTR [rax],0x4
   14005a4c3:	rex add DWORD PTR [rax],eax
   14005a4c6:	add    BYTE PTR [rax],al
   14005a4c8:	jl     0x14005a4ea
   14005a4ca:	add    al,0x40
   14005a4cc:	add    DWORD PTR [rax],eax
   14005a4ce:	add    BYTE PTR [rax],al
   14005a4d0:	push   0x1400420
	...
   14005a54d:	add    BYTE PTR [rax],al
   14005a54f:	add    BYTE PTR [rax+0x0],bl
   14005a552:	add    BYTE PTR [rax],al
   14005a554:	(bad)  
   14005a555:	(bad)  
   14005a556:	(bad)  
   14005a557:	jmp    FWORD PTR [rsi+0x0]
	...
   14005a566:	add    BYTE PTR [rax],al
   14005a568:	pop    rax
   14005a569:	and    BYTE PTR [rax+rax*2],al
   14005a56c:	add    DWORD PTR [rax],eax
   14005a56e:	add    BYTE PTR [rax],al
   14005a570:	rex.W and BYTE PTR [rax+rax*2],al
   14005a574:	add    DWORD PTR [rax],eax
   14005a576:	add    BYTE PTR [rax],al
   14005a578:	cmp    BYTE PTR [rax],ah
   14005a57a:	add    al,0x40
   14005a57c:	add    DWORD PTR [rax],eax
	...
   14005a60e:	add    BYTE PTR [rax],al
   14005a610:	pop    rcx
   14005a611:	add    BYTE PTR [rax],al
   14005a613:	add    bh,bh
   14005a615:	(bad)  
   14005a616:	(bad)  
   14005a617:	jmp    FWORD PTR [rdi+0x0]
	...
   14005a626:	add    BYTE PTR [rax],al
   14005a628:	and    BYTE PTR [rax],ah
   14005a62a:	add    al,0x40
   14005a62c:	add    DWORD PTR [rax],eax
   14005a62e:	add    BYTE PTR [rax],al
   14005a630:	adc    BYTE PTR [rax],ah
   14005a632:	add    al,0x40
   14005a634:	add    DWORD PTR [rax],eax
   14005a636:	add    BYTE PTR [rax],al
   14005a638:	or     BYTE PTR [rax],ah
   14005a63a:	add    al,0x40
   14005a63c:	add    DWORD PTR [rax],eax
   14005a63e:	add    BYTE PTR [rax],al
   14005a640:	clc    
   14005a641:	(bad)  
   14005a642:	add    al,0x40
   14005a644:	add    DWORD PTR [rax],eax
	...
   14005a6ce:	add    BYTE PTR [rax],al
   14005a6d0:	pop    rdx
   14005a6d1:	add    BYTE PTR [rax],al
   14005a6d3:	add    bh,bh
   14005a6d5:	(bad)  
   14005a6d6:	(bad)  
   14005a6d7:	push   QWORD PTR [rax+0x0]
	...
   14005a6e6:	add    BYTE PTR [rax],al
   14005a6e8:	loopne 0x14005a709
   14005a6ea:	add    al,0x40
   14005a6ec:	add    DWORD PTR [rax],eax
   14005a6ee:	add    BYTE PTR [rax],al
   14005a6f0:	rcr    BYTE PTR [rdi],1
   14005a6f2:	add    al,0x40
   14005a6f4:	add    DWORD PTR [rax],eax
   14005a6f6:	add    BYTE PTR [rax],al
   14005a6f8:	rcr    BYTE PTR [rdi],0x4
   14005a6fb:	rex add DWORD PTR [rax],eax
   14005a6fe:	add    BYTE PTR [rax],al
   14005a700:	test   al,0x1f
   14005a702:	add    al,0x40
   14005a704:	add    DWORD PTR [rax],eax
	...
   14005a78e:	add    BYTE PTR [rax],al
   14005a790:	pop    rbx
   14005a791:	add    BYTE PTR [rax],al
   14005a793:	add    bh,bh
   14005a795:	(bad)  
   14005a796:	(bad)  
   14005a797:	push   QWORD PTR [rcx+0x0]
	...
   14005a7a6:	add    BYTE PTR [rax],al
   14005a7a8:	cwde   
   14005a7a9:	(bad)  
   14005a7aa:	add    al,0x40
   14005a7ac:	add    DWORD PTR [rax],eax
   14005a7ae:	add    BYTE PTR [rax],al
   14005a7b0:	mov    BYTE PTR [rdi],bl
   14005a7b2:	add    al,0x40
   14005a7b4:	add    DWORD PTR [rax],eax
   14005a7b6:	add    BYTE PTR [rax],al
   14005a7b8:	js     0x14005a7d9
   14005a7ba:	add    al,0x40
   14005a7bc:	add    DWORD PTR [rax],eax
   14005a7be:	add    BYTE PTR [rax],al
   14005a7c0:	(bad)  
   14005a7c1:	(bad)  
   14005a7c2:	add    al,0x40
   14005a7c4:	add    DWORD PTR [rax],eax
	...
   14005a84e:	add    BYTE PTR [rax],al
   14005a850:	pop    rsp
   14005a851:	add    BYTE PTR [rax],al
   14005a853:	add    bh,bh
   14005a855:	(bad)  
   14005a856:	(bad)  
   14005a857:	push   QWORD PTR [rdx+0x0]
	...
   14005a866:	add    BYTE PTR [rax],al
   14005a868:	push   rax
   14005a869:	(bad)  
   14005a86a:	add    al,0x40
   14005a86c:	add    DWORD PTR [rax],eax
   14005a86e:	add    BYTE PTR [rax],al
   14005a870:	rex.R (bad) 
   14005a872:	add    al,0x40
   14005a874:	add    DWORD PTR [rax],eax
   14005a876:	add    BYTE PTR [rax],al
   14005a878:	cmp    BYTE PTR [rdi],bl
   14005a87a:	add    al,0x40
   14005a87c:	add    DWORD PTR [rax],eax
   14005a87e:	add    BYTE PTR [rax],al
   14005a880:	sub    BYTE PTR [rdi],bl
   14005a882:	add    al,0x40
   14005a884:	add    DWORD PTR [rax],eax
   14005a886:	add    BYTE PTR [rax],al
   14005a888:	sbb    BYTE PTR [rdi],bl
   14005a88a:	add    al,0x40
   14005a88c:	add    DWORD PTR [rax],eax
	...
   14005a90e:	add    BYTE PTR [rax],al
   14005a910:	pop    rbp
   14005a911:	add    BYTE PTR [rax],al
   14005a913:	add    bh,bh
   14005a915:	(bad)  
   14005a916:	(bad)  
   14005a917:	push   QWORD PTR [rbx+0x0]
	...
   14005a926:	add    BYTE PTR [rax],al
   14005a928:	or     BYTE PTR [rdi],bl
   14005a92a:	add    al,0x40
   14005a92c:	add    DWORD PTR [rax],eax
   14005a92e:	add    BYTE PTR [rax],al
   14005a930:	clc    
   14005a931:	(bad)  
   14005a932:	add    al,0x40
   14005a934:	add    DWORD PTR [rax],eax
   14005a936:	add    BYTE PTR [rax],al
   14005a938:	call   0x14145ad5b
	...
   14005a9cd:	add    BYTE PTR [rax],al
   14005a9cf:	add    BYTE PTR [rsi+0x0],bl
   14005a9d2:	add    BYTE PTR [rax],al
   14005a9d4:	(bad)  
   14005a9d5:	(bad)  
   14005a9d6:	(bad)  
   14005a9d7:	push   QWORD PTR [rax+rax*1+0x0]
	...
   14005a9e7:	add    al,bl
   14005a9e9:	(bad)  
   14005a9ea:	add    al,0x40
   14005a9ec:	add    DWORD PTR [rax],eax
   14005a9ee:	add    BYTE PTR [rax],al
   14005a9f0:	enter  0x41e,0x40
   14005a9f4:	add    DWORD PTR [rax],eax
   14005a9f6:	add    BYTE PTR [rax],al
   14005a9f8:	mov    eax,0x140041e
   14005a9fd:	add    BYTE PTR [rax],al
   14005a9ff:	add    BYTE PTR [rax+0x140041e],ah
	...
   14005aa8d:	add    BYTE PTR [rax],al
   14005aa8f:	add    BYTE PTR [rdi+0x0],bl
   14005aa92:	add    BYTE PTR [rax],al
   14005aa94:	(bad)  
   14005aa95:	(bad)  
   14005aa96:	(bad)  
   14005aa97:	push   QWORD PTR [rbp+0x0]
	...
   14005aaa6:	add    BYTE PTR [rax],al
   14005aaa8:	nop
   14005aaa9:	(bad)  
   14005aaaa:	add    al,0x40
   14005aaac:	add    DWORD PTR [rax],eax
   14005aaae:	add    BYTE PTR [rax],al
   14005aab0:	sbb    BYTE PTR [rsi],0x4
   14005aab3:	rex add DWORD PTR [rax],eax
   14005aab6:	add    BYTE PTR [rax],al
   14005aab8:	jo     0x14005aad8
   14005aaba:	add    al,0x40
   14005aabc:	add    DWORD PTR [rax],eax
   14005aabe:	add    BYTE PTR [rax],al
   14005aac0:	(bad)  
   14005aac1:	(bad)  
   14005aac2:	add    al,0x40
   14005aac4:	add    DWORD PTR [rax],eax
	...
   14005ab4e:	add    BYTE PTR [rax],al
   14005ab50:	(bad)  
   14005ab51:	add    BYTE PTR [rax],al
   14005ab53:	add    bh,bh
   14005ab55:	(bad)  
   14005ab56:	(bad)  
   14005ab57:	push   QWORD PTR [rsi+0x0]
	...
   14005ab66:	add    BYTE PTR [rax],al
   14005ab68:	push   rax
   14005ab69:	(bad)  
   14005ab6a:	add    al,0x40
   14005ab6c:	add    DWORD PTR [rax],eax
   14005ab6e:	add    BYTE PTR [rax],al
   14005ab70:	rex (bad) 
   14005ab72:	add    al,0x40
   14005ab74:	add    DWORD PTR [rax],eax
   14005ab76:	add    BYTE PTR [rax],al
   14005ab78:	xor    BYTE PTR [rsi],bl
   14005ab7a:	add    al,0x40
   14005ab7c:	add    DWORD PTR [rax],eax
	...
   14005ac0e:	add    BYTE PTR [rax],al
   14005ac10:	(bad)  
   14005ac11:	add    BYTE PTR [rax],al
   14005ac13:	add    bh,bh
   14005ac15:	(bad)  
   14005ac16:	(bad)  
   14005ac17:	push   QWORD PTR [rdi+0x0]
	...
   14005ac26:	add    BYTE PTR [rax],al
   14005ac28:	and    BYTE PTR [rsi],bl
   14005ac2a:	add    al,0x40
   14005ac2c:	add    DWORD PTR [rax],eax
   14005ac2e:	add    BYTE PTR [rax],al
   14005ac30:	sbb    al,0x1e
   14005ac32:	add    al,0x40
   14005ac34:	add    DWORD PTR [rax],eax
   14005ac36:	add    BYTE PTR [rax],al
   14005ac38:	adc    BYTE PTR [rsi],bl
   14005ac3a:	add    al,0x40
   14005ac3c:	add    DWORD PTR [rax],eax
   14005ac3e:	add    BYTE PTR [rax],al
   14005ac40:	add    BYTE PTR [rsi],bl
   14005ac42:	add    al,0x40
   14005ac44:	add    DWORD PTR [rax],eax
	...
   14005acce:	add    BYTE PTR [rax],al
   14005acd0:	(bad)  
   14005acd1:	add    BYTE PTR [rax],al
   14005acd3:	add    bh,bh
   14005acd5:	(bad)  
   14005acd6:	(bad)  
   14005acd7:	(bad)  
   14005acd8:	js     0x14005acda
	...
   14005ace6:	add    BYTE PTR [rax],al
   14005ace8:	lock sbb eax,0x14004
   14005acee:	add    BYTE PTR [rax],al
   14005acf0:	in     al,0x1d
   14005acf2:	add    al,0x40
   14005acf4:	add    DWORD PTR [rax],eax
   14005acf6:	add    BYTE PTR [rax],al
   14005acf8:	fcomp  DWORD PTR [rip+0x14004]        # 0x14006ed02
   14005acfe:	add    BYTE PTR [rax],al
   14005ad00:	rcr    BYTE PTR [rip+0x14004],0x0        # 0x14006ed0b
	...
   14005ad8f:	add    BYTE PTR [rbx+0x0],ah
   14005ad92:	add    BYTE PTR [rax],al
   14005ad94:	(bad)  
   14005ad95:	(bad)  
   14005ad96:	(bad)  
   14005ad97:	(bad)  
   14005ad98:	jns    0x14005ad9a
	...
   14005ada6:	add    BYTE PTR [rax],al
   14005ada8:	mov    eax,0x140041d
   14005adad:	add    BYTE PTR [rax],al
   14005adaf:	add    BYTE PTR [rbp+rbx*1+0x14004],ch
   14005adb6:	add    BYTE PTR [rax],al
   14005adb8:	movabs al,ds:0x980000000140041d
   14005adc1:	sbb    eax,0x14004
   14005adc6:	add    BYTE PTR [rax],al
   14005adc8:	mov    BYTE PTR [rip+0x14004],bl        # 0x14006edd2
	...
   14005ae4e:	add    BYTE PTR [rax],al
   14005ae50:	add    BYTE PTR fs:[rax],al
   14005ae53:	add    bh,bh
   14005ae55:	(bad)  
   14005ae56:	(bad)  
   14005ae57:	(bad)  
   14005ae58:	jp     0x14005ae5a
	...
   14005ae66:	add    BYTE PTR [rax],al
   14005ae68:	sbb    BYTE PTR [rip+0x14004],0x0        # 0x14006ee73
   14005ae6f:	add    BYTE PTR [rax+0x1d],bh
   14005ae72:	add    al,0x40
   14005ae74:	add    DWORD PTR [rax],eax
	...
   14005af0e:	add    BYTE PTR [rax],al
   14005af10:	add    BYTE PTR gs:[rax],al
   14005af13:	add    bh,bh
   14005af15:	(bad)  
   14005af16:	(bad)  
   14005af17:	(bad)  
   14005af18:	jnp    0x14005af1a
	...
   14005af26:	add    BYTE PTR [rax],al
   14005af28:	jo     0x14005af47
   14005af2a:	add    al,0x40
   14005af2c:	add    DWORD PTR [rax],eax
   14005af2e:	add    BYTE PTR [rax],al
   14005af30:	push   0x140041d
	...
   14005afcd:	add    BYTE PTR [rax],al
   14005afcf:	add    BYTE PTR [rsi+0x0],ah
   14005afd2:	add    BYTE PTR [rax],al
   14005afd4:	(bad)  
   14005afd5:	(bad)  
   14005afd6:	(bad)  
   14005afd7:	(bad)  
   14005afd8:	jl     0x14005afda
	...
   14005afe6:	add    BYTE PTR [rax],al
   14005afe8:	(bad)  
   14005afe9:	sbb    eax,0x14004
   14005afee:	add    BYTE PTR [rax],al
   14005aff0:	push   rax
   14005aff1:	sbb    eax,0x14004
   14005aff6:	add    BYTE PTR [rax],al
   14005aff8:	rex sbb eax,0x14004
	...
   14005b08e:	add    BYTE PTR [rax],al
   14005b090:	add    BYTE PTR [eax],al
   14005b093:	add    bh,bh
   14005b095:	(bad)  
   14005b096:	(bad)  
   14005b097:	(bad)  
   14005b098:	jge    0x14005b09a
	...
   14005b0a6:	add    BYTE PTR [rax],al
   14005b0a8:	sub    BYTE PTR [rip+0x14004],bl        # 0x14006f0b2
   14005b0ae:	add    BYTE PTR [rax],al
   14005b0b0:	sbb    BYTE PTR [rip+0x14004],bl        # 0x14006f0ba
	...
   14005b14e:	add    BYTE PTR [rax],al
   14005b150:	push   0x33000000
   14005b155:	(bad)  
   14005b156:	add    BYTE PTR [rax],al
   14005b158:	sbb    al,BYTE PTR [rax]
	...
   14005b166:	add    BYTE PTR [rax],al
   14005b168:	or     BYTE PTR [rip+0x14004],bl        # 0x14006f172
   14005b16e:	add    BYTE PTR [rax],al
   14005b170:	clc    
   14005b171:	sbb    al,0x4
   14005b173:	rex add DWORD PTR [rax],eax
	...
   14005b20e:	add    BYTE PTR [rax],al
   14005b210:	imul   eax,DWORD PTR [rax],0xffff0000
   14005b216:	(bad)  
   14005b217:	(bad)  
   14005b218:	jle    0x14005b21a
	...
   14005b226:	add    BYTE PTR [rax],al
   14005b228:	call   0x14145b649
	...
   14005b2cd:	add    BYTE PTR [rax],al
   14005b2cf:	add    BYTE PTR [rdx+0x0],ch
   14005b2d2:	add    BYTE PTR [rax],al
   14005b2d4:	jmp    0x14005b3d6
   14005b2d9:	add    BYTE PTR [rax],al
   14005b2db:	add    BYTE PTR [rcx],al
	...
   14005b2e5:	add    BYTE PTR [rax],al
   14005b2e7:	add    BYTE PTR [rax-0x1a],ah
   14005b2ea:	add    eax,DWORD PTR [rax+0x1]
   14005b2ed:	add    BYTE PTR [rax],al
   14005b2ef:	add    al,bl
   14005b2f1:	sbb    al,0x4
   14005b2f3:	rex add DWORD PTR [rax],eax
   14005b2f6:	add    BYTE PTR [rax],al
   14005b2f8:	enter  0x41c,0x40
   14005b2fc:	add    DWORD PTR [rax],eax
   14005b2fe:	add    BYTE PTR [rax],al
   14005b300:	mov    eax,0x140041c
   14005b305:	add    BYTE PTR [rax],al
   14005b307:	add    BYTE PTR [rax+0x140041c],ch
   14005b30d:	add    BYTE PTR [rax],al
   14005b30f:	add    BYTE PTR [rax+0x140041c],bl
   14005b315:	add    BYTE PTR [rax],al
   14005b317:	add    BYTE PTR [rax+0x140041c],cl
   14005b31d:	add    BYTE PTR [rax],al
   14005b31f:	add    BYTE PTR [rax+0x1c],bh
   14005b322:	add    al,0x40
   14005b324:	add    DWORD PTR [rax],eax
   14005b326:	add    BYTE PTR [rax],al
   14005b328:	push   0x140041c
   14005b32d:	add    BYTE PTR [rax],al
   14005b32f:	add    BYTE PTR [rsp+rbx*1+0x4],bl
   14005b333:	rex add DWORD PTR [rax],eax
	...
   14005b38e:	add    BYTE PTR [rax],al
   14005b390:	ins    DWORD PTR es:[rdi],dx
   14005b391:	add    BYTE PTR [rax],al
   14005b393:	add    BYTE PTR [rbx+0x1200006f],bh
   14005b399:	add    BYTE PTR [rax],al
   14005b39b:	add    BYTE PTR [rcx],al
	...
   14005b3a5:	add    BYTE PTR [rax],al
   14005b3a7:	add    BYTE PTR [rax+0x1c],dl
   14005b3aa:	add    al,0x40
   14005b3ac:	add    DWORD PTR [rax],eax
   14005b3ae:	add    BYTE PTR [rax],al
   14005b3b0:	cmp    BYTE PTR [rsp+rax*1],bl
   14005b3b3:	rex add DWORD PTR [rax],eax
   14005b3b6:	add    BYTE PTR [rax],al
   14005b3b8:	xor    BYTE PTR [rsp+rax*1],bl
   14005b3bb:	rex add DWORD PTR [rax],eax
   14005b3be:	add    BYTE PTR [rax],al
   14005b3c0:	sub    BYTE PTR [rsp+rax*1],bl
   14005b3c3:	rex add DWORD PTR [rax],eax
   14005b3c6:	add    BYTE PTR [rax],al
   14005b3c8:	and    BYTE PTR [rsp+rax*1],bl
   14005b3cb:	rex add DWORD PTR [rax],eax
   14005b3ce:	add    BYTE PTR [rax],al
   14005b3d0:	sbb    al,0x1c
   14005b3d2:	add    al,0x40
   14005b3d4:	add    DWORD PTR [rax],eax
	...
   14005b44e:	add    BYTE PTR [rax],al
   14005b450:	outs   dx,BYTE PTR ds:[rsi]
   14005b451:	add    BYTE PTR [rax],al
   14005b453:	add    bh,bh
   14005b455:	(bad)  
   14005b456:	(bad)  
   14005b457:	call   QWORD PTR [rbx]
   14005b459:	add    BYTE PTR [rax],al
   14005b45b:	add    BYTE PTR [rcx],al
	...
   14005b465:	add    BYTE PTR [rax],al
   14005b467:	add    BYTE PTR [rax],dl
   14005b469:	sbb    al,0x4
   14005b46b:	rex add DWORD PTR [rax],eax
   14005b46e:	add    BYTE PTR [rax],al
   14005b470:	add    BYTE PTR [rsp+rax*1],bl
   14005b473:	rex add DWORD PTR [rax],eax
   14005b476:	add    BYTE PTR [rax],al
   14005b478:	call   0x14145b898
   14005b47d:	add    BYTE PTR [rax],al
   14005b47f:	add    al,bl
   14005b481:	sbb    eax,DWORD PTR [rax+rax*2]
   14005b484:	add    DWORD PTR [rax],eax
   14005b486:	add    BYTE PTR [rax],al
   14005b488:	int3   
   14005b489:	sbb    eax,DWORD PTR [rax+rax*2]
   14005b48c:	add    DWORD PTR [rax],eax
   14005b48e:	add    BYTE PTR [rax],al
   14005b490:	rcr    BYTE PTR [rbx],0x4
   14005b493:	rex add DWORD PTR [rax],eax
   14005b496:	add    BYTE PTR [rax],al
   14005b498:	mov    esp,0x140041b
	...
   14005b50d:	add    BYTE PTR [rax],al
   14005b50f:	add    BYTE PTR [rdi+0x0],ch
   14005b512:	add    BYTE PTR [rax],al
   14005b514:	mov    ebp,0x1400006f
   14005b519:	add    BYTE PTR [rax],al
   14005b51b:	add    BYTE PTR [rcx],al
	...
   14005b525:	add    BYTE PTR [rax],al
   14005b527:	add    BYTE PTR [rax+0x140041b],dh
   14005b52d:	add    BYTE PTR [rax],al
   14005b52f:	add    BYTE PTR [rax+0x140041b],ah
   14005b535:	add    BYTE PTR [rax],al
   14005b537:	add    BYTE PTR [rax+0x140041b],bl
   14005b53d:	add    BYTE PTR [rax],al
   14005b53f:	add    BYTE PTR [rax+0x140041b],al
   14005b545:	add    BYTE PTR [rax],al
   14005b547:	add    BYTE PTR [rax+0x1b],bh
   14005b54a:	add    al,0x40
   14005b54c:	add    DWORD PTR [rax],eax
   14005b54e:	add    BYTE PTR [rax],al
   14005b550:	jo     0x14005b56d
   14005b552:	add    al,0x40
   14005b554:	add    DWORD PTR [rax],eax
   14005b556:	add    BYTE PTR [rax],al
   14005b558:	push   0x140041b
   14005b55d:	add    BYTE PTR [rax],al
   14005b55f:	add    BYTE PTR [rbx+rbx*1+0x4],bl
   14005b563:	rex add DWORD PTR [rax],eax
   14005b566:	add    BYTE PTR [rax],al
   14005b568:	push   rax
   14005b569:	sbb    eax,DWORD PTR [rax+rax*2]
   14005b56c:	add    DWORD PTR [rax],eax
   14005b56e:	add    BYTE PTR [rax],al
   14005b570:	rex sbb eax,DWORD PTR [rax+rax*2]
   14005b574:	add    DWORD PTR [rax],eax
   14005b576:	add    BYTE PTR [rax],al
   14005b578:	xor    al,0x1b
   14005b57a:	add    al,0x40
   14005b57c:	add    DWORD PTR [rax],eax
   14005b57e:	add    BYTE PTR [rax],al
   14005b580:	xor    BYTE PTR [rbx],bl
   14005b582:	add    al,0x40
   14005b584:	add    DWORD PTR [rax],eax
   14005b586:	add    BYTE PTR [rax],al
   14005b588:	and    BYTE PTR [rbx],bl
   14005b58a:	add    al,0x40
   14005b58c:	add    DWORD PTR [rax],eax
	...
   14005b5ce:	add    BYTE PTR [rax],al
   14005b5d0:	outs   dx,DWORD PTR ds:[rsi]
   14005b5d1:	add    BYTE PTR [rax],al
   14005b5d3:	add    BYTE PTR [rdx+0x3],ch
   14005b5d6:	add    BYTE PTR [rax],al
   14005b5d8:	rex.XB add DWORD PTR [r8],eax
   14005b5db:	add    BYTE PTR [rcx],al
	...
   14005b5e5:	add    BYTE PTR [rax],al
   14005b5e7:	add    BYTE PTR [rax],bl
   14005b5e9:	sbb    eax,DWORD PTR [rax+rax*2]
   14005b5ec:	add    DWORD PTR [rax],eax
   14005b5ee:	add    BYTE PTR [rax],al
   14005b5f0:	add    BYTE PTR [rbx],bl
   14005b5f2:	add    al,0x40
   14005b5f4:	add    DWORD PTR [rax],eax
   14005b5f6:	add    BYTE PTR [rax],al
   14005b5f8:	hlt    
   14005b5f9:	sbb    al,BYTE PTR [rax+rax*2]
   14005b5fc:	add    DWORD PTR [rax],eax
   14005b5fe:	add    BYTE PTR [rax],al
   14005b600:	call   0x14145ba1f
   14005b605:	add    BYTE PTR [rax],al
   14005b607:	add    al,ah
   14005b609:	sbb    al,BYTE PTR [rax+rax*2]
   14005b60c:	add    DWORD PTR [rax],eax
   14005b60e:	add    BYTE PTR [rax],al
   14005b610:	rcr    BYTE PTR [rdx],1
   14005b612:	add    al,0x40
   14005b614:	add    DWORD PTR [rax],eax
   14005b616:	add    BYTE PTR [rax],al
   14005b618:	(bad)  
   14005b619:	sbb    al,BYTE PTR [rax+rax*2]
   14005b61c:	add    DWORD PTR [rax],eax
	...
   14005b68e:	add    BYTE PTR [rax],al
   14005b690:	jo     0x14005b692
   14005b692:	add    BYTE PTR [rax],al
   14005b694:	(bad)  
   14005b695:	(bad)  
   14005b696:	(bad)  
   14005b697:	(bad)  
   14005b698:	jg     0x14005b69a
	...
   14005b6a6:	add    BYTE PTR [rax],al
   14005b6a8:	mov    eax,0x140041a
   14005b6ad:	add    BYTE PTR [rax],al
   14005b6af:	add    BYTE PTR [rax+0x140041a],ch
   14005b6b5:	add    BYTE PTR [rax],al
   14005b6b7:	add    BYTE PTR [rax+0x140041a],dl
   14005b6bd:	add    BYTE PTR [rax],al
   14005b6bf:	add    BYTE PTR [rax+0x140041a],al
   14005b6c5:	add    BYTE PTR [rax],al
   14005b6c7:	add    BYTE PTR [rax+0x1a],bh
   14005b6ca:	add    al,0x40
   14005b6cc:	add    DWORD PTR [rax],eax
   14005b6ce:	add    BYTE PTR [rax],al
   14005b6d0:	jo     0x14005b6ec
   14005b6d2:	add    al,0x40
   14005b6d4:	add    DWORD PTR [rax],eax
	...
   14005b74e:	add    BYTE PTR [rax],al
   14005b750:	jno    0x14005b752
   14005b752:	add    BYTE PTR [rax],al
   14005b754:	test   al,0x3
   14005b756:	add    BYTE PTR [rax],al
   14005b758:	sbb    BYTE PTR [rax],al
   14005b75a:	add    BYTE PTR [rax],al
   14005b75c:	add    DWORD PTR [rax],eax
	...
   14005b766:	add    BYTE PTR [rax],al
   14005b768:	ins    BYTE PTR es:[rdi],dx
   14005b769:	sbb    al,BYTE PTR [rax+rax*2]
   14005b76c:	add    DWORD PTR [rax],eax
   14005b76e:	add    BYTE PTR [rax],al
   14005b770:	sbb    al,BYTE PTR fs:[rax+rax*2]
   14005b774:	add    DWORD PTR [rax],eax
   14005b776:	add    BYTE PTR [rax],al
   14005b778:	pop    rsp
   14005b779:	sbb    al,BYTE PTR [rax+rax*2]
   14005b77c:	add    DWORD PTR [rax],eax
   14005b77e:	add    BYTE PTR [rax],al
   14005b780:	push   rax
   14005b781:	sbb    al,BYTE PTR [rax+rax*2]
   14005b784:	add    DWORD PTR [rax],eax
   14005b786:	add    BYTE PTR [rax],al
   14005b788:	cmp    BYTE PTR [rdx],bl
   14005b78a:	add    al,0x40
   14005b78c:	add    DWORD PTR [rax],eax
	...
   14005b80e:	add    BYTE PTR [rax],al
   14005b810:	(bad)  
   14005b811:	(bad)  
   14005b812:	(bad)  
   14005b813:	(bad)  
   14005b814:	(bad)  
   14005b815:	(bad)  
   14005b816:	(bad)  
   14005b817:	inc    DWORD PTR [rax+0x1]
   14005b81a:	add    BYTE PTR [rax],al
   14005b81c:	add    DWORD PTR [rax],eax
   14005b81e:	add    BYTE PTR [rax],al
   14005b820:	add    DWORD PTR [rax],eax
   14005b822:	add    BYTE PTR [rax],al
   14005b824:	add    BYTE PTR [rax],al
   14005b826:	add    BYTE PTR [rax],al
   14005b828:	and    BYTE PTR [rdx],bl
   14005b82a:	add    al,0x40
   14005b82c:	add    DWORD PTR [rax],eax
   14005b82e:	add    BYTE PTR [rax],al
   14005b830:	adc    BYTE PTR [rdx],bl
   14005b832:	add    al,0x40
   14005b834:	add    DWORD PTR [rax],eax
   14005b836:	add    BYTE PTR [rax],al
   14005b838:	add    al,0x1a
   14005b83a:	add    al,0x40
   14005b83c:	add    DWORD PTR [rax],eax
   14005b83e:	add    BYTE PTR [rax],al
   14005b840:	lock sbb DWORD PTR [rax+rax*2],eax
   14005b844:	add    DWORD PTR [rax],eax
	...
   14005b8ce:	add    BYTE PTR [rax],al
   14005b8d0:	jb     0x14005b8d2
   14005b8d2:	add    BYTE PTR [rax],al
   14005b8d4:	cwde   
   14005b8d5:	(bad)  
   14005b8d6:	add    BYTE PTR [rax],al
   14005b8d8:	adc    eax,0x0
	...
   14005b8e5:	add    BYTE PTR [rax],al
   14005b8e7:	add    al,ch
   14005b8e9:	sbb    DWORD PTR [rax+rax*2],eax
   14005b8ec:	add    DWORD PTR [rax],eax
   14005b8ee:	add    BYTE PTR [rax],al
   14005b8f0:	fcomp  DWORD PTR [rcx]
   14005b8f2:	add    al,0x40
   14005b8f4:	add    DWORD PTR [rax],eax
	...
   14005b98e:	add    BYTE PTR [rax],al
   14005b990:	jae    0x14005b992
   14005b992:	add    BYTE PTR [rax],al
   14005b994:	(bad)  
   14005b995:	(bad)  
   14005b996:	(bad)  
   14005b997:	inc    DWORD PTR [rax+0x0]
	...
   14005b9a5:	add    BYTE PTR [rax],al
   14005b9a7:	add    al,al
   14005b9a9:	sbb    DWORD PTR [rax+rax*2],eax
   14005b9ac:	add    DWORD PTR [rax],eax
	...
   14005ba4e:	add    BYTE PTR [rax],al
   14005ba50:	je     0x14005ba52
   14005ba52:	add    BYTE PTR [rax],al
   14005ba54:	(bad)  
   14005ba55:	(bad)  
   14005ba56:	(bad)  
   14005ba57:	inc    DWORD PTR [rcx+0x0]
	...
   14005ba65:	add    BYTE PTR [rax],al
   14005ba67:	add    BYTE PTR [rax+0x1400419],ch
	...
   14005bb0d:	add    BYTE PTR [rax],al
   14005bb0f:	add    BYTE PTR [rbp+0x0],dh
   14005bb12:	add    BYTE PTR [rax],al
   14005bb14:	(bad)  
   14005bb15:	(bad)  
   14005bb16:	(bad)  
   14005bb17:	inc    DWORD PTR [rdx+0x0]
	...
   14005bb25:	add    BYTE PTR [rax],al
   14005bb27:	add    BYTE PTR [rax+0x1400419],dl
	...
   14005bbcd:	add    BYTE PTR [rax],al
   14005bbcf:	add    BYTE PTR [rsi+0x0],dh
   14005bbd2:	add    BYTE PTR [rax],al
   14005bbd4:	(bad)  
   14005bbd5:	(bad)  
   14005bbd6:	(bad)  
   14005bbd7:	inc    DWORD PTR [rbx+0x0]
	...
   14005bbe5:	add    BYTE PTR [rax],al
   14005bbe7:	add    BYTE PTR [rax+0x1400419],al
   14005bbed:	add    BYTE PTR [rax],al
   14005bbef:	add    BYTE PTR [rax+0x19],dh
   14005bbf2:	add    al,0x40
   14005bbf4:	add    DWORD PTR [rax],eax
   14005bbf6:	add    BYTE PTR [rax],al
   14005bbf8:	(bad)  
   14005bbf9:	sbb    DWORD PTR [rax+rax*2],eax
   14005bbfc:	add    DWORD PTR [rax],eax
   14005bbfe:	add    BYTE PTR [rax],al
   14005bc00:	push   rax
   14005bc01:	sbb    DWORD PTR [rax+rax*2],eax
   14005bc04:	add    DWORD PTR [rax],eax
	...
   14005bc8e:	add    BYTE PTR [rax],al
   14005bc90:	ja     0x14005bc92
   14005bc92:	add    BYTE PTR [rax],al
   14005bc94:	(bad)  
   14005bc95:	(bad)  
   14005bc96:	(bad)  
   14005bc97:	inc    DWORD PTR [rax+rax*1+0x0]
	...
   14005bca6:	add    BYTE PTR [rax],al
   14005bca8:	sbb    QWORD PTR [rax+rax*2],rax
   14005bcac:	add    DWORD PTR [rax],eax
   14005bcae:	add    BYTE PTR [rax],al
   14005bcb0:	cmp    BYTE PTR [rcx],bl
   14005bcb2:	add    al,0x40
   14005bcb4:	add    DWORD PTR [rax],eax
   14005bcb6:	add    BYTE PTR [rax],al
   14005bcb8:	sub    al,0x19
   14005bcba:	add    al,0x40
   14005bcbc:	add    DWORD PTR [rax],eax
   14005bcbe:	add    BYTE PTR [rax],al
   14005bcc0:	and    BYTE PTR [rcx],bl
   14005bcc2:	add    al,0x40
   14005bcc4:	add    DWORD PTR [rax],eax
	...
   14005bd4e:	add    BYTE PTR [rax],al
   14005bd50:	call   0x13f05bd58
   14005bd55:	(bad)  
   14005bd56:	(bad)  
   14005bd57:	inc    DWORD PTR [rbp+0x1000000]
	...
   14005bd65:	add    BYTE PTR [rax],al
   14005bd67:	add    BYTE PTR [rax],dl
   14005bd69:	sbb    DWORD PTR [rax+rax*2],eax
   14005bd6c:	add    DWORD PTR [rax],eax
   14005bd6e:	add    BYTE PTR [rax],al
   14005bd70:	add    BYTE PTR [rcx],bl
   14005bd72:	add    al,0x40
   14005bd74:	add    DWORD PTR [rax],eax
   14005bd76:	add    BYTE PTR [rax],al
   14005bd78:	lock sbb BYTE PTR [rax+rax*2],al
   14005bd7c:	add    DWORD PTR [rax],eax
   14005bd7e:	add    BYTE PTR [rax],al
   14005bd80:	loopne 0x14005bd9a
   14005bd82:	add    al,0x40
   14005bd84:	add    DWORD PTR [rax],eax
   14005bd86:	add    BYTE PTR [rax],al
   14005bd88:	fcomp  DWORD PTR [rax]
   14005bd8a:	add    al,0x40
   14005bd8c:	add    DWORD PTR [rax],eax
   14005bd8e:	add    BYTE PTR [rax],al
   14005bd90:	rcr    BYTE PTR [rax],1
   14005bd92:	add    al,0x40
   14005bd94:	add    DWORD PTR [rax],eax
	...
   14005be0e:	add    BYTE PTR [rax],al
   14005be10:	jmp    0x13f05be18
   14005be15:	(bad)  
   14005be16:	(bad)  
   14005be17:	inc    DWORD PTR [rsi+0x1000000]
	...
   14005be25:	add    BYTE PTR [rax],al
   14005be27:	add    al,al
   14005be29:	sbb    BYTE PTR [rax+rax*2],al
   14005be2c:	add    DWORD PTR [rax],eax
   14005be2e:	add    BYTE PTR [rax],al
   14005be30:	mov    ah,0x18
   14005be32:	add    al,0x40
   14005be34:	add    DWORD PTR [rax],eax
   14005be36:	add    BYTE PTR [rax],al
   14005be38:	test   al,0x18
   14005be3a:	add    al,0x40
   14005be3c:	add    DWORD PTR [rax],eax
   14005be3e:	add    BYTE PTR [rax],al
   14005be40:	cwde   
   14005be41:	sbb    BYTE PTR [rax+rax*2],al
   14005be44:	add    DWORD PTR [rax],eax
   14005be46:	add    BYTE PTR [rax],al
   14005be48:	mov    WORD PTR [rax],ds
   14005be4a:	add    al,0x40
   14005be4c:	add    DWORD PTR [rax],eax
	...
   14005bece:	add    BYTE PTR [rax],al
   14005bed0:	(bad)  
   14005bed1:	add    eax,DWORD PTR [rax]
   14005bed3:	add    bh,bh
   14005bed5:	(bad)  
   14005bed6:	(bad)  
   14005bed7:	inc    DWORD PTR [rdi+0x0]
	...
   14005bee5:	add    BYTE PTR [rax],al
   14005bee7:	add    BYTE PTR [rax+0x18],bh
   14005beea:	add    al,0x40
   14005beec:	add    DWORD PTR [rax],eax
   14005beee:	add    BYTE PTR [rax],al
   14005bef0:	push   0x1400418
	...
   14005bf8d:	add    BYTE PTR [rax],al
   14005bf8f:	add    bl,ch
   14005bf91:	add    eax,DWORD PTR [rax]
   14005bf93:	add    bh,bh
   14005bf95:	(bad)  
   14005bf96:	(bad)  
   14005bf97:	dec    DWORD PTR [rax+0x0]
	...
   14005bfa5:	add    BYTE PTR [rax],al
   14005bfa7:	add    BYTE PTR [rax+0x18],cl
   14005bfaa:	add    al,0x40
   14005bfac:	add    DWORD PTR [rax],eax
   14005bfae:	add    BYTE PTR [rax],al
   14005bfb0:	cmp    BYTE PTR [rax],bl
   14005bfb2:	add    al,0x40
   14005bfb4:	add    DWORD PTR [rax],eax
   14005bfb6:	add    BYTE PTR [rax],al
   14005bfb8:	sub    BYTE PTR [rax],bl
   14005bfba:	add    al,0x40
   14005bfbc:	add    DWORD PTR [rax],eax
	...
   14005c04e:	add    BYTE PTR [rax],al
   14005c050:	(bad)  
   14005c051:	(bad)  
   14005c052:	(bad)  
   14005c053:	(bad)  
   14005c054:	(bad)  
   14005c055:	(bad)  
   14005c056:	(bad)  
   14005c057:	dec    DWORD PTR [rcx+0x0]
	...
   14005c065:	add    BYTE PTR [rax],al
   14005c067:	add    BYTE PTR [rax],bl
   14005c069:	sbb    BYTE PTR [rax+rax*2],al
   14005c06c:	add    DWORD PTR [rax],eax
	...
   14005c10e:	add    BYTE PTR [rax],al
   14005c110:	in     eax,dx
   14005c111:	add    eax,DWORD PTR [rax]
   14005c113:	add    bh,bh
   14005c115:	(bad)  
   14005c116:	(bad)  
   14005c117:	dec    DWORD PTR [rdx+0x0]
	...
   14005c129:	sbb    BYTE PTR [rax+rax*2],al
   14005c12c:	add    DWORD PTR [rax],eax
   14005c12e:	add    BYTE PTR [rax],al
   14005c130:	call   0x14145c54c
	...
   14005c1cd:	add    BYTE PTR [rax],al
   14005c1cf:	add    dh,ch
   14005c1d1:	add    eax,DWORD PTR [rax]
   14005c1d3:	add    bh,bh
   14005c1d5:	(bad)  
   14005c1d6:	(bad)  
   14005c1d7:	dec    DWORD PTR [rbx+0x0]
	...
   14005c1e5:	add    BYTE PTR [rax],al
   14005c1e7:	add    al,dl
   14005c1e9:	(bad)  
   14005c1ea:	add    al,0x40
   14005c1ec:	add    DWORD PTR [rax],eax
   14005c1ee:	add    BYTE PTR [rax],al
   14005c1f0:	mov    eax,0x1400417
	...
   14005c28d:	add    BYTE PTR [rax],al
   14005c28f:	add    bh,ch
   14005c291:	add    eax,DWORD PTR [rax]
   14005c293:	add    bh,bh
   14005c295:	(bad)  
   14005c296:	(bad)  
   14005c297:	dec    DWORD PTR [rax+rax*1+0x0]
	...
   14005c2a6:	add    BYTE PTR [rax],al
   14005c2a8:	movabs al,ds:0x8800000001400417
   14005c2b1:	(bad)  
   14005c2b2:	add    al,0x40
   14005c2b4:	add    DWORD PTR [rax],eax
	...
   14005c34e:	add    BYTE PTR [rax],al
   14005c350:	lock add eax,DWORD PTR [rax]
   14005c353:	add    bh,bh
   14005c355:	(bad)  
   14005c356:	(bad)  
   14005c357:	dec    DWORD PTR [rbp+0x0]
	...
   14005c365:	add    BYTE PTR [rax],al
   14005c367:	add    BYTE PTR [rax+0x17],dh
   14005c36a:	add    al,0x40
   14005c36c:	add    DWORD PTR [rax],eax
   14005c36e:	add    BYTE PTR [rax],al
   14005c370:	pop    rax
   14005c371:	(bad)  
   14005c372:	add    al,0x40
   14005c374:	add    DWORD PTR [rax],eax
	...
   14005c40e:	add    BYTE PTR [rax],al
   14005c410:	icebp  
   14005c411:	add    eax,DWORD PTR [rax]
   14005c413:	add    bh,bh
   14005c415:	(bad)  
   14005c416:	(bad)  
   14005c417:	dec    DWORD PTR [rsi+0x0]
	...
   14005c425:	add    BYTE PTR [rax],al
   14005c427:	add    BYTE PTR [rax+0x17],al
   14005c42a:	add    al,0x40
   14005c42c:	add    DWORD PTR [rax],eax
   14005c42e:	add    BYTE PTR [rax],al
   14005c430:	sub    BYTE PTR [rdi],dl
   14005c432:	add    al,0x40
   14005c434:	add    DWORD PTR [rax],eax
	...
   14005c4ce:	add    BYTE PTR [rax],al
   14005c4d0:	repnz add eax,DWORD PTR [rax]
   14005c4d3:	add    bh,bh
   14005c4d5:	(bad)  
   14005c4d6:	(bad)  
   14005c4d7:	dec    DWORD PTR [rdi+0x0]
	...
   14005c4e5:	add    BYTE PTR [rax],al
   14005c4e7:	add    BYTE PTR [rax],bl
   14005c4e9:	(bad)  
   14005c4ea:	add    al,0x40
   14005c4ec:	add    DWORD PTR [rax],eax
   14005c4ee:	add    BYTE PTR [rax],al
   14005c4f0:	or     BYTE PTR [rdi],dl
   14005c4f2:	add    al,0x40
   14005c4f4:	add    DWORD PTR [rax],eax
	...
   14005c58e:	add    BYTE PTR [rax],al
   14005c590:	repz add eax,DWORD PTR [rax]
   14005c593:	add    bh,bh
   14005c595:	(bad)  
   14005c596:	(bad)  
   14005c597:	call   QWORD PTR [rax+0x1000000]
	...
   14005c5a5:	add    BYTE PTR [rax],al
   14005c5a7:	add    BYTE PTR [rax],dl
   14005c5a9:	out    dx,al
   14005c5aa:	add    eax,DWORD PTR [rax+0x1]
   14005c5ad:	add    BYTE PTR [rax],al
   14005c5af:	add    al,bh
   14005c5b1:	(bad)  
   14005c5b2:	add    al,0x40
   14005c5b4:	add    DWORD PTR [rax],eax
   14005c5b6:	add    BYTE PTR [rax],al
   14005c5b8:	call   0x14145c9d3
	...
   14005c64d:	add    BYTE PTR [rax],al
   14005c64f:	add    ah,dh
   14005c651:	add    eax,DWORD PTR [rax]
   14005c653:	add    al,ch
   14005c655:	std    
   14005c656:	add    BYTE PTR [rax],al
   14005c658:	xchg   ecx,eax
   14005c659:	add    BYTE PTR [rax],al
   14005c65b:	add    BYTE PTR [rcx],al
	...
   14005c669:	out    dx,al
   14005c66a:	add    eax,DWORD PTR [rax+0x1]
	...
   14005c70d:	add    BYTE PTR [rax],al
   14005c70f:	add    ch,dh
   14005c711:	add    eax,DWORD PTR [rax]
   14005c713:	add    BYTE PTR [rcx+0x2000004],dh
   14005c719:	add    BYTE PTR [rax],al
   14005c71b:	add    BYTE PTR [rcx],al
	...
   14005c725:	add    BYTE PTR [rax],al
   14005c727:	add    BYTE PTR [rax-0x1a],bh
   14005c72a:	add    eax,DWORD PTR [rax+0x1]
   14005c72d:	add    BYTE PTR [rax],al
   14005c72f:	add    al,bl
   14005c731:	(bad)  
   14005c732:	add    al,0x40
   14005c734:	add    DWORD PTR [rax],eax
   14005c736:	add    BYTE PTR [rax],al
   14005c738:	enter  0x416,0x40
   14005c73c:	add    DWORD PTR [rax],eax
   14005c73e:	add    BYTE PTR [rax],al
   14005c740:	mov    eax,0x1400416
   14005c745:	add    BYTE PTR [rax],al
   14005c747:	add    BYTE PTR [rax+0x1400416],ch
   14005c74d:	add    BYTE PTR [rax],al
   14005c74f:	add    BYTE PTR [rax+0x1400416],bl
   14005c755:	add    BYTE PTR [rax],al
   14005c757:	add    BYTE PTR [rax+0x1400416],cl
   14005c75d:	add    BYTE PTR [rax],al
   14005c75f:	add    BYTE PTR [rax+0x16],bh
   14005c762:	add    al,0x40
   14005c764:	add    DWORD PTR [rax],eax
   14005c766:	add    BYTE PTR [rax],al
   14005c768:	push   0x1400416
   14005c76d:	add    BYTE PTR [rax],al
   14005c76f:	add    BYTE PTR [rax+0x16],bl
   14005c772:	add    al,0x40
   14005c774:	add    DWORD PTR [rax],eax
   14005c776:	add    BYTE PTR [rax],al
   14005c778:	rex.W (bad) 
   14005c77a:	add    al,0x40
   14005c77c:	add    DWORD PTR [rax],eax
   14005c77e:	add    BYTE PTR [rax],al
   14005c780:	cmp    BYTE PTR [rsi],dl
   14005c782:	add    al,0x40
   14005c784:	add    DWORD PTR [rax],eax
   14005c786:	add    BYTE PTR [rax],al
   14005c788:	sub    BYTE PTR [rsi],dl
   14005c78a:	add    al,0x40
   14005c78c:	add    DWORD PTR [rax],eax
   14005c78e:	add    BYTE PTR [rax],al
   14005c790:	sbb    BYTE PTR [rsi],dl
   14005c792:	add    al,0x40
   14005c794:	add    DWORD PTR [rax],eax
   14005c796:	add    BYTE PTR [rax],al
   14005c798:	or     BYTE PTR [rsi],dl
   14005c79a:	add    al,0x40
   14005c79c:	add    DWORD PTR [rax],eax
   14005c79e:	add    BYTE PTR [rax],al
   14005c7a0:	clc    
   14005c7a1:	adc    eax,0x14004
   14005c7a6:	add    BYTE PTR [rax],al
   14005c7a8:	lock adc eax,0x14004
   14005c7ae:	add    BYTE PTR [rax],al
   14005c7b0:	call   0x14145cbca
   14005c7b5:	add    BYTE PTR [rax],al
   14005c7b7:	add    al,bl
   14005c7b9:	adc    eax,0x14004
   14005c7be:	add    BYTE PTR [rax],al
   14005c7c0:	rcl    BYTE PTR [rip+0x14004],0x0        # 0x1400707cb
	...
   14005c7cf:	add    dh,dh
   14005c7d1:	add    eax,DWORD PTR [rax]
   14005c7d3:	add    BYTE PTR [rax+0x1000004],dh
   14005c7d9:	add    BYTE PTR [rax],al
   14005c7db:	add    BYTE PTR [rcx],al
	...
   14005c7e5:	add    BYTE PTR [rax],al
   14005c7e7:	add    BYTE PTR [rax-0x1a],ch
   14005c7ea:	add    eax,DWORD PTR [rax+0x1]
   14005c7ed:	add    BYTE PTR [rax],al
   14005c7ef:	add    BYTE PTR [rax+0x1400415],dh
   14005c7f5:	add    BYTE PTR [rax],al
   14005c7f7:	add    BYTE PTR [rax+0x1400415],ah
   14005c7fd:	add    BYTE PTR [rax],al
   14005c7ff:	add    BYTE PTR [rax+0x1400415],dl
   14005c805:	add    BYTE PTR [rax],al
   14005c807:	add    BYTE PTR [rax+0x1400415],al
   14005c80d:	add    BYTE PTR [rax],al
   14005c80f:	add    BYTE PTR [rax+0x15],dh
   14005c812:	add    al,0x40
   14005c814:	add    DWORD PTR [rax],eax
   14005c816:	add    BYTE PTR [rax],al
   14005c818:	(bad)  
   14005c819:	adc    eax,0x14004
   14005c81e:	add    BYTE PTR [rax],al
   14005c820:	push   rax
   14005c821:	adc    eax,0x14004
   14005c826:	add    BYTE PTR [rax],al
   14005c828:	rex adc eax,0x14004
   14005c82e:	add    BYTE PTR [rax],al
   14005c830:	xor    BYTE PTR [rip+0x14004],dl        # 0x14007083a
   14005c836:	add    BYTE PTR [rax],al
   14005c838:	and    BYTE PTR [rip+0x14004],dl        # 0x140070842
   14005c83e:	add    BYTE PTR [rax],al
   14005c840:	adc    BYTE PTR [rip+0x14004],dl        # 0x14007084a
   14005c846:	add    BYTE PTR [rax],al
   14005c848:	add    BYTE PTR [rip+0x14004],dl        # 0x140070852
   14005c84e:	add    BYTE PTR [rax],al
   14005c850:	lock adc al,0x4
   14005c853:	rex add DWORD PTR [rax],eax
   14005c856:	add    BYTE PTR [rax],al
   14005c858:	fcom   DWORD PTR [rsp+rax*1]
   14005c85b:	rex add DWORD PTR [rax],eax
   14005c85e:	add    BYTE PTR [rax],al
   14005c860:	rcl    BYTE PTR [rsp+rax*1],0x40
   14005c864:	add    DWORD PTR [rax],eax
	...
   14005c88e:	add    BYTE PTR [rax],al
   14005c890:	test   DWORD PTR [rbx],0xffff0000
   14005c896:	(bad)  
   14005c897:	inc    DWORD PTR [rbx]
   14005c899:	add    BYTE PTR [rax],al
   14005c89b:	add    BYTE PTR [rcx],al
	...
   14005c8a5:	add    BYTE PTR [rax],al
   14005c8a7:	add    BYTE PTR [rsp+rdx*1+0x14004],dh
	...
   14005c94e:	add    BYTE PTR [rax],al
   14005c950:	clc    
   14005c951:	add    eax,DWORD PTR [rax]
   14005c953:	add    bh,bh
   14005c955:	(bad)  
   14005c956:	(bad)  
   14005c957:	call   QWORD PTR [rdx+0x1000000]
	...
   14005c965:	add    BYTE PTR [rax],al
   14005c967:	add    BYTE PTR [rsp+rdx*1+0x14004],ch
   14005c96e:	add    BYTE PTR [rax],al
   14005c970:	movabs al,ds:0x9000000001400414
   14005c979:	adc    al,0x4
   14005c97b:	rex add DWORD PTR [rax],eax
	...
   14005ca0e:	add    BYTE PTR [rax],al
   14005ca10:	stc    
   14005ca11:	add    eax,DWORD PTR [rax]
   14005ca13:	add    bh,bh
   14005ca15:	(bad)  
   14005ca16:	(bad)  
   14005ca17:	inc    DWORD PTR [rsi]
   14005ca19:	add    BYTE PTR [rax],al
   14005ca1b:	add    BYTE PTR [rcx],al
	...
   14005ca25:	add    BYTE PTR [rax],al
   14005ca27:	add    BYTE PTR [rax+0x1400414],cl
	...
   14005cacd:	add    BYTE PTR [rax],al
   14005cacf:	add    dl,bh
   14005cad1:	add    eax,DWORD PTR [rax]
   14005cad3:	add    cl,ah
   14005cad5:	add    BYTE PTR cs:[rax],al
   14005cad8:	add    eax,0x1000000
	...
   14005cae5:	add    BYTE PTR [rax],al
   14005cae7:	add    BYTE PTR [rax],bl
   14005cae9:	out    dx,al
   14005caea:	add    eax,DWORD PTR [rax+0x1]
   14005caed:	add    BYTE PTR [rax],al
   14005caef:	add    BYTE PTR [rax+0x14],bh
   14005caf2:	add    al,0x40
   14005caf4:	add    DWORD PTR [rax],eax
   14005caf6:	add    BYTE PTR [rax],al
   14005caf8:	push   0x1400414
   14005cafd:	add    BYTE PTR [rax],al
   14005caff:	add    BYTE PTR [rax+0x14],bl
   14005cb02:	add    al,0x40
   14005cb04:	add    DWORD PTR [rax],eax
   14005cb06:	add    BYTE PTR [rax],al
   14005cb08:	rex.W adc al,0x4
   14005cb0b:	rex add DWORD PTR [rax],eax
	...
   14005cb8e:	add    BYTE PTR [rax],al
   14005cb90:	sti    
   14005cb91:	add    eax,DWORD PTR [rax]
   14005cb93:	add    al,ah
   14005cb95:	add    BYTE PTR cs:[rax],al
   14005cb98:	add    al,0x0
   14005cb9a:	add    BYTE PTR [rax],al
   14005cb9c:	add    DWORD PTR [rax],eax
	...
   14005cba6:	add    BYTE PTR [rax],al
   14005cba8:	sub    dh,ch
   14005cbaa:	add    eax,DWORD PTR [rax+0x1]
   14005cbad:	add    BYTE PTR [rax],al
   14005cbaf:	add    BYTE PTR [rax],dh
   14005cbb1:	adc    al,0x4
   14005cbb3:	rex add DWORD PTR [rax],eax
   14005cbb6:	add    BYTE PTR [rax],al
   14005cbb8:	and    BYTE PTR [rsp+rax*1],dl
   14005cbbb:	rex add DWORD PTR [rax],eax
   14005cbbe:	add    BYTE PTR [rax],al
   14005cbc0:	adc    BYTE PTR [rsp+rax*1],dl
   14005cbc3:	rex add DWORD PTR [rax],eax
	...
   14005cc4e:	add    BYTE PTR [rax],al
   14005cc50:	cld    
   14005cc51:	add    eax,DWORD PTR [rax]
   14005cc53:	add    bh,bh
   14005cc55:	(bad)  
   14005cc56:	(bad)  
   14005cc57:	call   QWORD PTR [rbx+0x1000000]
	...
   14005cc65:	add    BYTE PTR [rax],al
   14005cc67:	add    BYTE PTR [rax],cl
   14005cc69:	out    dx,al
   14005cc6a:	add    eax,DWORD PTR [rax+0x1]
   14005cc6d:	add    BYTE PTR [rax],al
   14005cc6f:	add    BYTE PTR [rax],al
   14005cc71:	adc    al,0x4
   14005cc73:	rex add DWORD PTR [rax],eax
   14005cc76:	add    BYTE PTR [rax],al
   14005cc78:	lock adc eax,DWORD PTR [rax+rax*2]
   14005cc7c:	add    DWORD PTR [rax],eax
   14005cc7e:	add    BYTE PTR [rax],al
   14005cc80:	loopne 0x14005cc95
   14005cc82:	add    al,0x40
   14005cc84:	add    DWORD PTR [rax],eax
	...
   14005cd0e:	add    BYTE PTR [rax],al
   14005cd10:	rol    BYTE PTR [rdi],1
   14005cd12:	add    BYTE PTR [rax],al
   14005cd14:	(bad)  
   14005cd15:	(bad)  
   14005cd16:	(bad)  
   14005cd17:	call   QWORD PTR [rax+rax*1+0x0]
	...
   14005cd26:	add    BYTE PTR [rax],al
   14005cd28:	rcl    BYTE PTR [rbx],0x4
   14005cd2b:	rex add DWORD PTR [rax],eax
   14005cd2e:	add    BYTE PTR [rax],al
   14005cd30:	test   al,0x13
   14005cd32:	add    al,0x40
   14005cd34:	add    DWORD PTR [rax],eax
	...
   14005cdce:	add    BYTE PTR [rax],al
   14005cdd0:	rol    DWORD PTR [rdi],1
   14005cdd2:	add    BYTE PTR [rax],al
   14005cdd4:	(bad)  
   14005cdd5:	(bad)  
   14005cdd6:	(bad)  
   14005cdd7:	call   QWORD PTR [rbp+0x0]
	...
   14005cde5:	add    BYTE PTR [rax],al
   14005cde7:	add    BYTE PTR [rax+0x1400413],cl
   14005cded:	add    BYTE PTR [rax],al
   14005cdef:	add    BYTE PTR [rax+0x13],dh
   14005cdf2:	add    al,0x40
   14005cdf4:	add    DWORD PTR [rax],eax
	...
   14005ce8e:	add    BYTE PTR [rax],al
   14005ce90:	rol    BYTE PTR [rdi],cl
   14005ce92:	add    BYTE PTR [rax],al
   14005ce94:	(bad)  
   14005ce95:	(bad)  
   14005ce96:	(bad)  
   14005ce97:	call   QWORD PTR [rsi+0x0]
	...
   14005cea5:	add    BYTE PTR [rax],al
   14005cea7:	add    BYTE PTR [rax+0x13],dl
   14005ceaa:	add    al,0x40
   14005ceac:	add    DWORD PTR [rax],eax
   14005ceae:	add    BYTE PTR [rax],al
   14005ceb0:	cmp    BYTE PTR [rbx],dl
   14005ceb2:	add    al,0x40
   14005ceb4:	add    DWORD PTR [rax],eax
	...
   14005cf4e:	add    BYTE PTR [rax],al
   14005cf50:	rol    DWORD PTR [rdi],cl
   14005cf52:	add    BYTE PTR [rax],al
   14005cf54:	(bad)  
   14005cf55:	(bad)  
   14005cf56:	(bad)  
   14005cf57:	call   QWORD PTR [rdi+0x0]
	...
   14005cf65:	add    BYTE PTR [rax],al
   14005cf67:	add    BYTE PTR [rax],bl
   14005cf69:	adc    eax,DWORD PTR [rax+rax*2]
   14005cf6c:	add    DWORD PTR [rax],eax
   14005cf6e:	add    BYTE PTR [rax],al
   14005cf70:	add    BYTE PTR [rbx],dl
   14005cf72:	add    al,0x40
   14005cf74:	add    DWORD PTR [rax],eax
	...
   14005d00e:	add    BYTE PTR [rax],al
   14005d010:	(bad)  
   14005d011:	(bad)  
   14005d012:	add    BYTE PTR [rax],al
   14005d014:	(bad)  
   14005d015:	(bad)  
   14005d016:	(bad)  
   14005d017:	call   FWORD PTR [rax+0x0]
	...
   14005d025:	add    BYTE PTR [rax],al
   14005d027:	add    al,dh
   14005d029:	adc    al,BYTE PTR [rax+rax*2]
   14005d02c:	add    DWORD PTR [rax],eax
   14005d02e:	add    BYTE PTR [rax],al
   14005d030:	call   0x14145d447
   14005d035:	add    BYTE PTR [rax],al
   14005d037:	add    ah,ah
   14005d039:	adc    al,BYTE PTR [rax+rax*2]
   14005d03c:	add    DWORD PTR [rax],eax
   14005d03e:	add    BYTE PTR [rax],al
   14005d040:	fcom   DWORD PTR [rdx]
   14005d042:	add    al,0x40
   14005d044:	add    DWORD PTR [rax],eax
   14005d046:	add    BYTE PTR [rax],al
   14005d048:	rcl    BYTE PTR [rdx],0x4
   14005d04b:	rex add DWORD PTR [rax],eax
   14005d04e:	add    BYTE PTR [rax],al
   14005d050:	mov    al,0x12
   14005d052:	add    al,0x40
   14005d054:	add    DWORD PTR [rax],eax
	...
   14005d0ce:	add    BYTE PTR [rax],al
   14005d0d0:	(bad)  
   14005d0d1:	(bad)  
   14005d0d2:	add    BYTE PTR [rax],al
   14005d0d4:	(bad)  
   14005d0d5:	(bad)  
   14005d0d6:	(bad)  
   14005d0d7:	call   FWORD PTR [rcx+0x0]
	...
   14005d0e5:	add    BYTE PTR [rax],al
   14005d0e7:	add    BYTE PTR [rax+0x1400412],bl
   14005d0ed:	add    BYTE PTR [rax],al
   14005d0ef:	add    BYTE PTR [rax+0x1400412],al
   14005d0f5:	add    BYTE PTR [rax],al
   14005d0f7:	add    BYTE PTR [rax+0x12],ch
   14005d0fa:	add    al,0x40
   14005d0fc:	add    DWORD PTR [rax],eax
   14005d0fe:	add    BYTE PTR [rax],al
   14005d100:	pop    rax
   14005d101:	adc    al,BYTE PTR [rax+rax*2]
   14005d104:	add    DWORD PTR [rax],eax
	...
   14005d18e:	add    BYTE PTR [rax],al
   14005d190:	(bad)  
   14005d191:	(bad)  
   14005d192:	add    BYTE PTR [rax],al
   14005d194:	(bad)  
   14005d195:	(bad)  
   14005d196:	(bad)  
   14005d197:	call   FWORD PTR [rdx+0x0]
	...
   14005d1a5:	add    BYTE PTR [rax],al
   14005d1a7:	add    BYTE PTR [rax+0x12],cl
   14005d1aa:	add    al,0x40
   14005d1ac:	add    DWORD PTR [rax],eax
   14005d1ae:	add    BYTE PTR [rax],al
   14005d1b0:	cmp    BYTE PTR [rdx],dl
   14005d1b2:	add    al,0x40
   14005d1b4:	add    DWORD PTR [rax],eax
	...
   14005d24e:	add    BYTE PTR [rax],al
   14005d250:	xlat   BYTE PTR ds:[rbx]
   14005d251:	(bad)  
   14005d252:	add    BYTE PTR [rax],al
   14005d254:	(bad)  
   14005d255:	(bad)  
   14005d256:	(bad)  
   14005d257:	call   FWORD PTR [rbx+0x0]
	...
   14005d265:	add    BYTE PTR [rax],al
   14005d267:	add    BYTE PTR [rax],ah
   14005d269:	adc    al,BYTE PTR [rax+rax*2]
   14005d26c:	add    DWORD PTR [rax],eax
   14005d26e:	add    BYTE PTR [rax],al
   14005d270:	or     BYTE PTR [rdx],dl
   14005d272:	add    al,0x40
   14005d274:	add    DWORD PTR [rax],eax
	...
   14005d30e:	add    BYTE PTR [rax],al
   14005d310:	fadd   DWORD PTR [rdi]
   14005d312:	add    BYTE PTR [rax],al
   14005d314:	(bad)  
   14005d315:	(bad)  
   14005d316:	(bad)  
   14005d317:	call   FWORD PTR [rax+rax*1+0x0]
	...
   14005d326:	add    BYTE PTR [rax],al
   14005d328:	add    BYTE PTR [rdx],dl
   14005d32a:	add    al,0x40
   14005d32c:	add    DWORD PTR [rax],eax
   14005d32e:	add    BYTE PTR [rax],al
   14005d330:	cld    
   14005d331:	adc    DWORD PTR [rax+rax*2],eax
   14005d334:	add    DWORD PTR [rax],eax
   14005d336:	add    BYTE PTR [rax],al
   14005d338:	lock adc DWORD PTR [rax+rax*2],eax
   14005d33c:	add    DWORD PTR [rax],eax
	...
   14005d3ce:	add    BYTE PTR [rax],al
   14005d3d0:	fld    DWORD PTR [rdi]
   14005d3d2:	add    BYTE PTR [rax],al
   14005d3d4:	push   rdx
   14005d3d5:	add    eax,DWORD PTR [rax]
   14005d3d7:	add    BYTE PTR [rbp+0x1000000],bl
	...
   14005d3e5:	add    BYTE PTR [rax],al
   14005d3e7:	add    al,ch
   14005d3e9:	adc    DWORD PTR [rax+rax*2],eax
   14005d3ec:	add    DWORD PTR [rax],eax
   14005d3ee:	add    BYTE PTR [rax],al
   14005d3f0:	loopne 0x14005d403
   14005d3f2:	add    al,0x40
   14005d3f4:	add    DWORD PTR [rax],eax
   14005d3f6:	add    BYTE PTR [rax],al
   14005d3f8:	fcom   QWORD PTR [rcx]
   14005d3fa:	add    al,0x40
   14005d3fc:	add    DWORD PTR [rax],eax
   14005d3fe:	add    BYTE PTR [rax],al
   14005d400:	enter  0x411,0x40
   14005d404:	add    DWORD PTR [rax],eax
   14005d406:	add    BYTE PTR [rax],al
   14005d408:	mov    al,0x11
   14005d40a:	add    al,0x40
   14005d40c:	add    DWORD PTR [rax],eax
	...
   14005d48e:	add    BYTE PTR [rax],al
   14005d490:	fadd   QWORD PTR [rdi]
   14005d492:	add    BYTE PTR [rax],al
   14005d494:	(bad)  
   14005d495:	(bad)  
   14005d496:	(bad)  
   14005d497:	call   FWORD PTR [rsi+0x0]
	...
   14005d4a5:	add    BYTE PTR [rax],al
   14005d4a7:	add    BYTE PTR [rax+0x1400411],bl
   14005d4ad:	add    BYTE PTR [rax],al
   14005d4af:	add    BYTE PTR [rax+0x1400411],al
	...
   14005d54d:	add    BYTE PTR [rax],al
   14005d54f:	add    ch,bl
   14005d551:	(bad)  
   14005d552:	add    BYTE PTR [rax],al
   14005d554:	pop    rsi
   14005d555:	add    eax,DWORD PTR [rax]
   14005d557:	add    BYTE PTR [rdi+0x1000000],bl
	...
   14005d565:	add    BYTE PTR [rax],al
   14005d567:	add    BYTE PTR [rax+0x11],bh
   14005d56a:	add    al,0x40
   14005d56c:	add    DWORD PTR [rax],eax
   14005d56e:	add    BYTE PTR [rax],al
   14005d570:	jo     0x14005d583
   14005d572:	add    al,0x40
   14005d574:	add    DWORD PTR [rax],eax
   14005d576:	add    BYTE PTR [rax],al
   14005d578:	ins    BYTE PTR es:[rdi],dx
   14005d579:	adc    DWORD PTR [rax+rax*2],eax
   14005d57c:	add    DWORD PTR [rax],eax
   14005d57e:	add    BYTE PTR [rax],al
   14005d580:	pop    rax
   14005d581:	adc    DWORD PTR [rax+rax*2],eax
   14005d584:	add    DWORD PTR [rax],eax
   14005d586:	add    BYTE PTR [rax],al
   14005d588:	rex adc DWORD PTR [rax+rax*2],eax
   14005d58c:	add    DWORD PTR [rax],eax
   14005d58e:	add    BYTE PTR [rax],al
   14005d590:	cmp    BYTE PTR [rcx],dl
   14005d592:	add    al,0x40
   14005d594:	add    DWORD PTR [rax],eax
	...
   14005d60e:	add    BYTE PTR [rax],al
   14005d610:	fiadd  WORD PTR [rdi]
   14005d612:	add    BYTE PTR [rax],al
   14005d614:	(bad)  
   14005d615:	(bad)  
   14005d616:	(bad)  
   14005d617:	jmp    QWORD PTR [rax+0x0]
	...
   14005d625:	add    BYTE PTR [rax],al
   14005d627:	add    BYTE PTR [rax],ch
   14005d629:	adc    DWORD PTR [rax+rax*2],eax
   14005d62c:	add    DWORD PTR [rax],eax
   14005d62e:	add    BYTE PTR [rax],al
   14005d630:	sbb    BYTE PTR [rcx],dl
   14005d632:	add    al,0x40
   14005d634:	add    DWORD PTR [rax],eax
	...
   14005d6ce:	add    BYTE PTR [rax],al
   14005d6d0:	fild   WORD PTR [rdi]
   14005d6d2:	add    BYTE PTR [rax],al
   14005d6d4:	(bad)  
   14005d6d5:	(bad)  
   14005d6d6:	(bad)  
   14005d6d7:	jmp    QWORD PTR [rcx+0x0]
	...
   14005d6e5:	add    BYTE PTR [rax],al
   14005d6e7:	add    BYTE PTR [rax],cl
   14005d6e9:	adc    DWORD PTR [rax+rax*2],eax
   14005d6ec:	add    DWORD PTR [rax],eax
   14005d6ee:	add    BYTE PTR [rax],al
   14005d6f0:	clc    
   14005d6f1:	adc    BYTE PTR [rax+rax*2],al
   14005d6f4:	add    DWORD PTR [rax],eax
	...
   14005d78e:	add    BYTE PTR [rax],al
   14005d790:	loopne 0x14005d799
   14005d792:	add    BYTE PTR [rax],al
   14005d794:	push   cx
   14005d796:	add    BYTE PTR [rax],al
   14005d798:	movabs ds:0x0,al
   14005d7a1:	add    BYTE PTR [rax],al
   14005d7a3:	add    BYTE PTR [rax],al
   14005d7a5:	add    BYTE PTR [rax],al
   14005d7a7:	add    al,ch
   14005d7a9:	adc    BYTE PTR [rax+rax*2],al
   14005d7ac:	add    DWORD PTR [rax],eax
   14005d7ae:	add    BYTE PTR [rax],al
   14005d7b0:	fcom   DWORD PTR [rax]
   14005d7b2:	add    al,0x40
   14005d7b4:	add    DWORD PTR [rax],eax
   14005d7b6:	add    BYTE PTR [rax],al
   14005d7b8:	rcl    BYTE PTR [rax],0x4
   14005d7bb:	rex add DWORD PTR [rax],eax
   14005d7be:	add    BYTE PTR [rax],al
   14005d7c0:	mov    eax,0x1400410
   14005d7c5:	add    BYTE PTR [rax],al
   14005d7c7:	add    BYTE PTR [rax+0x1400410],dh
   14005d7cd:	add    BYTE PTR [rax],al
   14005d7cf:	add    BYTE PTR [rax+0x1400410],ch
   14005d7d5:	add    BYTE PTR [rax],al
   14005d7d7:	add    BYTE PTR [rax+rdx*1+0x14004],ah
   14005d7de:	add    BYTE PTR [rax],al
   14005d7e0:	cwde   
   14005d7e1:	adc    BYTE PTR [rax+rax*2],al
   14005d7e4:	add    DWORD PTR [rax],eax
	...
   14005d84e:	add    BYTE PTR [rax],al
   14005d850:	loope  0x14005d859
   14005d852:	add    BYTE PTR [rax],al
   14005d854:	(bad)  
   14005d855:	(bad)  
   14005d856:	(bad)  
   14005d857:	jmp    QWORD PTR [rbx+0x0]
	...
   14005d865:	add    BYTE PTR [rax],al
   14005d867:	add    BYTE PTR [rax+0x1400410],cl
   14005d86d:	add    BYTE PTR [rax],al
   14005d86f:	add    BYTE PTR [rax+0x10],bh
   14005d872:	add    al,0x40
   14005d874:	add    DWORD PTR [rax],eax
	...
   14005d90e:	add    BYTE PTR [rax],al
   14005d910:	loop   0x14005d919
   14005d912:	add    BYTE PTR [rax],al
   14005d914:	(bad)  
   14005d915:	(bad)  
   14005d916:	(bad)  
   14005d917:	jmp    QWORD PTR [rax+rax*1+0x0]
	...
   14005d926:	add    BYTE PTR [rax],al
   14005d928:	push   0x1400410
   14005d92d:	add    BYTE PTR [rax],al
   14005d92f:	add    BYTE PTR [rax+0x10],bl
   14005d932:	add    al,0x40
   14005d934:	add    DWORD PTR [rax],eax
	...
   14005d9ce:	add    BYTE PTR [rax],al
   14005d9d0:	jrcxz  0x14005d9d9
   14005d9d2:	add    BYTE PTR [rax],al
   14005d9d4:	(bad)  
   14005d9d5:	(bad)  
   14005d9d6:	(bad)  
   14005d9d7:	jmp    QWORD PTR [rbp+0x0]
	...
   14005d9e5:	add    BYTE PTR [rax],al
   14005d9e7:	add    BYTE PTR [rax+0x10],cl
   14005d9ea:	add    al,0x40
   14005d9ec:	add    DWORD PTR [rax],eax
   14005d9ee:	add    BYTE PTR [rax],al
   14005d9f0:	cmp    BYTE PTR [rax],dl
   14005d9f2:	add    al,0x40
   14005d9f4:	add    DWORD PTR [rax],eax
	...
   14005da8e:	add    BYTE PTR [rax],al
   14005da90:	in     al,0x7
   14005da92:	add    BYTE PTR [rax],al
   14005da94:	(bad)  
   14005da95:	(bad)  
   14005da96:	(bad)  
   14005da97:	jmp    QWORD PTR [rsi+0x0]
	...
   14005daa5:	add    BYTE PTR [rax],al
   14005daa7:	add    BYTE PTR [rax],ah
   14005daa9:	adc    BYTE PTR [rax+rax*2],al
   14005daac:	add    DWORD PTR [rax],eax
   14005daae:	add    BYTE PTR [rax],al
   14005dab0:	adc    BYTE PTR [rax],dl
   14005dab2:	add    al,0x40
   14005dab4:	add    DWORD PTR [rax],eax
	...
   14005db4e:	add    BYTE PTR [rax],al
   14005db50:	in     eax,0x7
   14005db52:	add    BYTE PTR [rax],al
   14005db54:	(bad)  
   14005db55:	(bad)  
   14005db56:	(bad)  
   14005db57:	jmp    QWORD PTR [rdi+0x0]
	...
   14005db69:	adc    BYTE PTR [rax+rax*2],al
   14005db6c:	add    DWORD PTR [rax],eax
   14005db6e:	add    BYTE PTR [rax],al
   14005db70:	lock (bad) 
   14005db73:	rex add DWORD PTR [rax],eax
	...
   14005dc0e:	add    BYTE PTR [rax],al
   14005dc10:	out    0x7,al
   14005dc12:	add    BYTE PTR [rax],al
   14005dc14:	(bad)  
   14005dc15:	(bad)  
   14005dc16:	(bad)  
   14005dc17:	jmp    FWORD PTR [rax+0x0]
	...
   14005dc25:	add    BYTE PTR [rax],al
   14005dc27:	add    al,ah
   14005dc29:	(bad)  
   14005dc2b:	rex add DWORD PTR [rax],eax
   14005dc2e:	add    BYTE PTR [rax],al
   14005dc30:	ror    BYTE PTR [rdi],1
   14005dc32:	add    al,0x40
   14005dc34:	add    DWORD PTR [rax],eax
	...
   14005dcce:	add    BYTE PTR [rax],al
   14005dcd0:	out    0x7,eax
   14005dcd2:	add    BYTE PTR [rax],al
   14005dcd4:	(bad)  
   14005dcd5:	(bad)  
   14005dcd6:	(bad)  
   14005dcd7:	jmp    FWORD PTR [rcx+0x0]
	...
   14005dce5:	add    BYTE PTR [rax],al
   14005dce7:	add    BYTE PTR [rax+0x140040f],bh
   14005dced:	add    BYTE PTR [rax],al
   14005dcef:	add    BYTE PTR [rax+0x140040f],ah
	...
   14005dd8d:	add    BYTE PTR [rax],al
   14005dd8f:	add    al,ch
   14005dd91:	(bad)  
   14005dd92:	add    BYTE PTR [rax],al
   14005dd94:	(bad)  
   14005dd95:	(bad)  
   14005dd96:	(bad)  
   14005dd97:	jmp    FWORD PTR [rdx+0x1000000]
	...
   14005dda5:	add    BYTE PTR [rax],al
   14005dda7:	add    BYTE PTR [rax+0x140040f],dl
   14005ddad:	add    BYTE PTR [rax],al
   14005ddaf:	add    BYTE PTR [rax+0x140040f],al
	...
   14005de4d:	add    BYTE PTR [rax],al
   14005de4f:	add    cl,ch
   14005de51:	(bad)  
   14005de52:	add    BYTE PTR [rax],al
   14005de54:	(bad)  
   14005de55:	(bad)  
   14005de56:	(bad)  
   14005de57:	call   FWORD PTR [rcx]
	...
   14005de65:	add    BYTE PTR [rax],al
   14005de67:	add    BYTE PTR [rdi+rcx*1+0x4],dh
   14005de6b:	rex add DWORD PTR [rax],eax
   14005de6e:	add    BYTE PTR [rax],al
   14005de70:	push   0x140040f
   14005de75:	add    BYTE PTR [rax],al
   14005de77:	add    BYTE PTR [rax+0xf],dl
   14005de7a:	add    al,0x40
   14005de7c:	add    DWORD PTR [rax],eax
   14005de7e:	add    BYTE PTR [rax],al
   14005de80:	rex (bad) 
   14005de83:	rex add DWORD PTR [rax],eax
   14005de86:	add    BYTE PTR [rax],al
   14005de88:	xor    al,0xf
   14005de8a:	add    al,0x40
   14005de8c:	add    DWORD PTR [rax],eax
   14005de8e:	add    BYTE PTR [rax],al
   14005de90:	sub    al,0xf
   14005de92:	add    al,0x40
   14005de94:	add    DWORD PTR [rax],eax
   14005de96:	add    BYTE PTR [rax],al
   14005de98:	and    al,0xf
   14005de9a:	add    al,0x40
   14005de9c:	add    DWORD PTR [rax],eax
   14005de9e:	add    BYTE PTR [rax],al
   14005dea0:	sbb    BYTE PTR [rdi],cl
   14005dea2:	add    al,0x40
   14005dea4:	add    DWORD PTR [rax],eax
   14005dea6:	add    BYTE PTR [rax],al
   14005dea8:	adc    BYTE PTR [rdi],cl
   14005deaa:	add    al,0x40
   14005deac:	add    DWORD PTR [rax],eax
   14005deae:	add    BYTE PTR [rax],al
   14005deb0:	add    BYTE PTR [rdi],cl
   14005deb2:	add    al,0x40
   14005deb4:	add    DWORD PTR [rax],eax
	...
   14005df0e:	add    BYTE PTR [rax],al
   14005df10:	(bad)  
   14005df11:	(bad)  
   14005df12:	add    BYTE PTR [rax],al
   14005df14:	mov    dh,0x3
   14005df16:	add    BYTE PTR [rax],al
   14005df18:	(bad)  
   14005df19:	add    BYTE PTR [rax],al
   14005df1b:	add    BYTE PTR [rcx],al
	...
   14005df25:	add    BYTE PTR [rax],al
   14005df27:	add    ah,dh
   14005df29:	(bad)  
   14005df2a:	add    al,0x40
   14005df2c:	add    DWORD PTR [rax],eax
   14005df2e:	add    BYTE PTR [rax],al
   14005df30:	in     al,dx
   14005df31:	(bad)  
   14005df32:	add    al,0x40
   14005df34:	add    DWORD PTR [rax],eax
   14005df36:	add    BYTE PTR [rax],al
   14005df38:	loopne 0x14005df48
   14005df3a:	add    al,0x40
   14005df3c:	add    DWORD PTR [rax],eax
   14005df3e:	add    BYTE PTR [rax],al
   14005df40:	enter  0x40e,0x40
   14005df44:	add    DWORD PTR [rax],eax
   14005df46:	add    BYTE PTR [rax],al
   14005df48:	mov    esp,0x140040e
	...
   14005dfcd:	add    BYTE PTR [rax],al
   14005dfcf:	add    bh,bh
   14005dfd1:	(bad)  
   14005dfd2:	(bad)  
   14005dfd3:	push   QWORD PTR [rsi+0x41000003]
   14005dfd9:	add    DWORD PTR [rax],eax
   14005dfdb:	add    BYTE PTR [rcx],al
	...
   14005dfe5:	add    BYTE PTR [rax],al
   14005dfe7:	add    BYTE PTR [rax+0x140040e],ch
   14005dfed:	add    BYTE PTR [rax],al
   14005dfef:	add    BYTE PTR [rax+0x140040e],bl
	...
   14005e08d:	add    BYTE PTR [rax],al
   14005e08f:	add    bl,ch
   14005e091:	(bad)  
   14005e092:	add    BYTE PTR [rax],al
   14005e094:	(bad)  
   14005e095:	(bad)  
   14005e096:	(bad)  
   14005e097:	jmp    FWORD PTR [rbx+0x0]
	...
   14005e0a5:	add    BYTE PTR [rax],al
   14005e0a7:	add    BYTE PTR [rax+0x140040e],cl
   14005e0ad:	add    BYTE PTR [rax],al
   14005e0af:	add    BYTE PTR [rsi+rcx*1+0x14004],al
   14005e0b6:	add    BYTE PTR [rax],al
   14005e0b8:	js     0x14005e0c8
   14005e0ba:	add    al,0x40
   14005e0bc:	add    DWORD PTR [rax],eax
   14005e0be:	add    BYTE PTR [rax],al
   14005e0c0:	push   0x140040e
   14005e0c5:	add    BYTE PTR [rax],al
   14005e0c7:	add    BYTE PTR [rax+0xe],bl
   14005e0ca:	add    al,0x40
   14005e0cc:	add    DWORD PTR [rax],eax
   14005e0ce:	add    BYTE PTR [rax],al
   14005e0d0:	rex.W (bad) 
   14005e0d2:	add    al,0x40
   14005e0d4:	add    DWORD PTR [rax],eax
	...
   14005e14e:	add    BYTE PTR [rax],al
   14005e150:	in     al,dx
   14005e151:	(bad)  
   14005e152:	add    BYTE PTR [rax],al
   14005e154:	and    eax,0xac000000
	...
   14005e165:	add    BYTE PTR [rax],al
   14005e167:	add    BYTE PTR [rax+0xe],al
   14005e16a:	add    al,0x40
   14005e16c:	add    DWORD PTR [rax],eax
   14005e16e:	add    BYTE PTR [rax],al
   14005e170:	cmp    BYTE PTR [rsi],cl
   14005e172:	add    al,0x40
   14005e174:	add    DWORD PTR [rax],eax
   14005e176:	add    BYTE PTR [rax],al
   14005e178:	sub    BYTE PTR [rsi],cl
   14005e17a:	add    al,0x40
   14005e17c:	add    DWORD PTR [rax],eax
   14005e17e:	add    BYTE PTR [rax],al
   14005e180:	sbb    BYTE PTR [rsi],cl
   14005e182:	add    al,0x40
   14005e184:	add    DWORD PTR [rax],eax
   14005e186:	add    BYTE PTR [rax],al
   14005e188:	or     BYTE PTR [rsi],cl
   14005e18a:	add    al,0x40
   14005e18c:	add    DWORD PTR [rax],eax
   14005e18e:	add    BYTE PTR [rax],al
   14005e190:	clc    
   14005e191:	or     eax,0x14004
   14005e196:	add    BYTE PTR [rax],al
   14005e198:	call   0x14145e5aa
   14005e19d:	add    BYTE PTR [rax],al
   14005e19f:	add    al,dl
   14005e1a1:	or     eax,0x14004
   14005e1a6:	add    BYTE PTR [rax],al
   14005e1a8:	(bad)  
   14005e1a9:	or     eax,0x14004
   14005e1ae:	add    BYTE PTR [rax],al
   14005e1b0:	ror    BYTE PTR [rip+0x14004],0x0        # 0x1400721bb
   14005e1b7:	add    BYTE PTR [rax+0x140040d],bh
   14005e1bd:	add    BYTE PTR [rax],al
   14005e1bf:	add    BYTE PTR [rbp+rcx*1+0x14004],ch
	...
   14005e20e:	add    BYTE PTR [rax],al
   14005e210:	in     eax,dx
   14005e211:	(bad)  
   14005e212:	add    BYTE PTR [rax],al
   14005e214:	(bad)  
   14005e215:	(bad)  
   14005e216:	(bad)  
   14005e217:	jmp    FWORD PTR [rbp+0x0]
	...
   14005e225:	add    BYTE PTR [rax],al
   14005e227:	add    BYTE PTR [rbp+rcx*1+0x14004],ah
   14005e22e:	add    BYTE PTR [rax],al
   14005e230:	cwde   
   14005e231:	or     eax,0x14004
   14005e236:	add    BYTE PTR [rax],al
   14005e238:	mov    WORD PTR [rip+0x14004],cs        # 0x140072242
   14005e23e:	add    BYTE PTR [rax],al
   14005e240:	or     BYTE PTR [rip+0x14004],0x0        # 0x14007224b
	...
   14005e2cf:	add    dh,ch
   14005e2d1:	(bad)  
   14005e2d2:	add    BYTE PTR [rax],al
   14005e2d4:	xor    DWORD PTR [rdi+0x0],ecx
   14005e2d7:	add    BYTE PTR [rsi+0x0],ch
	...
   14005e2e5:	add    BYTE PTR [rax],al
   14005e2e7:	add    BYTE PTR [rbp+rcx*1+0x4],dh
   14005e2eb:	rex add DWORD PTR [rax],eax
   14005e2ee:	add    BYTE PTR [rax],al
   14005e2f0:	ins    BYTE PTR es:[rdi],dx
   14005e2f1:	or     eax,0x14004
   14005e2f6:	add    BYTE PTR [rax],al
   14005e2f8:	(bad)  
   14005e2f9:	or     eax,0x14004
   14005e2fe:	add    BYTE PTR [rax],al
   14005e300:	or     rax,0x14004
   14005e306:	add    BYTE PTR [rax],al
   14005e308:	cmp    BYTE PTR [rip+0x14004],cl        # 0x140072312
   14005e30e:	add    BYTE PTR [rax],al
   14005e310:	xor    al,0xd
   14005e312:	add    al,0x40
   14005e314:	add    DWORD PTR [rax],eax
	...
   14005e38e:	add    BYTE PTR [rax],al
   14005e390:	out    dx,eax
   14005e391:	(bad)  
   14005e392:	add    BYTE PTR [rax],al
   14005e394:	(bad)  
   14005e395:	(bad)  
   14005e396:	(bad)  
   14005e397:	jmp    FWORD PTR [rdi+0x0]
	...
   14005e3a5:	add    BYTE PTR [rax],al
   14005e3a7:	add    BYTE PTR [rcx*1+0x14004],ch
   14005e3ae:	add    BYTE PTR [rax],al
   14005e3b0:	and    BYTE PTR [rip+0x14004],cl        # 0x1400723ba
   14005e3b6:	add    BYTE PTR [rax],al
   14005e3b8:	adc    al,0xd
   14005e3ba:	add    al,0x40
   14005e3bc:	add    DWORD PTR [rax],eax
   14005e3be:	add    BYTE PTR [rax],al
   14005e3c0:	or     BYTE PTR [rip+0x14004],cl        # 0x1400723ca
	...
   14005e44e:	add    BYTE PTR [rax],al
   14005e450:	lock (bad) 
   14005e452:	add    BYTE PTR [rax],al
   14005e454:	(bad)  
   14005e455:	(bad)  
   14005e456:	(bad)  
   14005e457:	push   QWORD PTR [rax+0x0]
	...
   14005e465:	add    BYTE PTR [rax],al
   14005e467:	add    ah,bh
   14005e469:	or     al,0x4
   14005e46b:	rex add DWORD PTR [rax],eax
   14005e46e:	add    BYTE PTR [rax],al
   14005e470:	lock or al,0x4
   14005e473:	rex add DWORD PTR [rax],eax
   14005e476:	add    BYTE PTR [rax],al
   14005e478:	in     al,0xc
   14005e47a:	add    al,0x40
   14005e47c:	add    DWORD PTR [rax],eax
   14005e47e:	add    BYTE PTR [rax],al
   14005e480:	fmul   DWORD PTR [rsp+rax*1]
   14005e483:	rex add DWORD PTR [rax],eax
	...
   14005e50e:	add    BYTE PTR [rax],al
   14005e510:	icebp  
   14005e511:	(bad)  
   14005e512:	add    BYTE PTR [rax],al
   14005e514:	xor    eax,0xb100004f
	...
   14005e525:	add    BYTE PTR [rax],al
   14005e527:	add    al,dl
   14005e529:	or     al,0x4
   14005e52b:	rex add DWORD PTR [rax],eax
   14005e52e:	add    BYTE PTR [rax],al
   14005e530:	ror    BYTE PTR [rsp+rax*1],0x40
   14005e534:	add    DWORD PTR [rax],eax
   14005e536:	add    BYTE PTR [rax],al
   14005e538:	mov    al,0xc
   14005e53a:	add    al,0x40
   14005e53c:	add    DWORD PTR [rax],eax
   14005e53e:	add    BYTE PTR [rax],al
   14005e540:	movabs al,ds:0x880000000140040c
   14005e549:	or     al,0x4
   14005e54b:	rex add DWORD PTR [rax],eax
   14005e54e:	add    BYTE PTR [rax],al
   14005e550:	jl     0x14005e55e
   14005e552:	add    al,0x40
   14005e554:	add    DWORD PTR [rax],eax
   14005e556:	add    BYTE PTR [rax],al
   14005e558:	jo     0x14005e566
   14005e55a:	add    al,0x40
   14005e55c:	add    DWORD PTR [rax],eax
   14005e55e:	add    BYTE PTR [rax],al
   14005e560:	push   0x140040c
	...
   14005e5cd:	add    BYTE PTR [rax],al
   14005e5cf:	add    dl,dh
   14005e5d1:	(bad)  
   14005e5d2:	add    BYTE PTR [rax],al
   14005e5d4:	rex.WRXB add BYTE PTR ss:[r8],r8b
   14005e5d8:	mov    dl,0x0
	...
   14005e5e6:	add    BYTE PTR [rax],al
   14005e5e8:	(bad)  
   14005e5e9:	or     al,0x4
   14005e5eb:	rex add DWORD PTR [rax],eax
   14005e5ee:	add    BYTE PTR [rax],al
   14005e5f0:	pop    rax
   14005e5f1:	or     al,0x4
   14005e5f3:	rex add DWORD PTR [rax],eax
   14005e5f6:	add    BYTE PTR [rax],al
   14005e5f8:	rex.W or al,0x4
   14005e5fb:	rex add DWORD PTR [rax],eax
   14005e5fe:	add    BYTE PTR [rax],al
   14005e600:	cmp    BYTE PTR [rsp+rax*1],cl
   14005e603:	rex add DWORD PTR [rax],eax
   14005e606:	add    BYTE PTR [rax],al
   14005e608:	sub    BYTE PTR [rsp+rax*1],cl
   14005e60b:	rex add DWORD PTR [rax],eax
   14005e60e:	add    BYTE PTR [rax],al
   14005e610:	adc    BYTE PTR [rsp+rax*1],cl
   14005e613:	rex add DWORD PTR [rax],eax
   14005e616:	add    BYTE PTR [rax],al
   14005e618:	add    BYTE PTR [rsp+rax*1],cl
   14005e61b:	rex add DWORD PTR [rax],eax
   14005e61e:	add    BYTE PTR [rax],al
   14005e620:	clc    
   14005e621:	or     eax,DWORD PTR [rax+rax*2]
   14005e624:	add    DWORD PTR [rax],eax
	...
   14005e68e:	add    BYTE PTR [rax],al
   14005e690:	repz (bad) 
   14005e692:	add    BYTE PTR [rax],al
   14005e694:	cmp    BYTE PTR [rdi+0x0],cl
   14005e697:	add    BYTE PTR [rbx+0x0],dh
	...
   14005e6a5:	add    BYTE PTR [rax],al
   14005e6a7:	add    al,dh
   14005e6a9:	or     eax,DWORD PTR [rax+rax*2]
   14005e6ac:	add    DWORD PTR [rax],eax
   14005e6ae:	add    BYTE PTR [rax],al
   14005e6b0:	call   0x14145eac0
   14005e6b5:	add    BYTE PTR [rax],al
   14005e6b7:	add    al,bl
   14005e6b9:	or     eax,DWORD PTR [rax+rax*2]
   14005e6bc:	add    DWORD PTR [rax],eax
   14005e6be:	add    BYTE PTR [rax],al
   14005e6c0:	enter  0x40b,0x40
   14005e6c4:	add    DWORD PTR [rax],eax
   14005e6c6:	add    BYTE PTR [rax],al
   14005e6c8:	mov    al,0xb
   14005e6ca:	add    al,0x40
   14005e6cc:	add    DWORD PTR [rax],eax
   14005e6ce:	add    BYTE PTR [rax],al
   14005e6d0:	lods   al,BYTE PTR ds:[rsi]
   14005e6d1:	or     eax,DWORD PTR [rax+rax*2]
   14005e6d4:	add    DWORD PTR [rax],eax
	...
   14005e74e:	add    BYTE PTR [rax],al
   14005e750:	hlt    
   14005e751:	(bad)  
   14005e752:	add    BYTE PTR [rax],al
   14005e754:	(bad)  
   14005e755:	(bad)  
   14005e756:	(bad)  
   14005e757:	push   QWORD PTR [rax+rax*1+0x0]
	...
   14005e766:	add    BYTE PTR [rax],al
   14005e768:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005e769:	or     eax,DWORD PTR [rax+rax*2]
   14005e76c:	add    DWORD PTR [rax],eax
   14005e76e:	add    BYTE PTR [rax],al
   14005e770:	cwde   
   14005e771:	or     eax,DWORD PTR [rax+rax*2]
   14005e774:	add    DWORD PTR [rax],eax
   14005e776:	add    BYTE PTR [rax],al
   14005e778:	mov    WORD PTR [rbx],cs
   14005e77a:	add    al,0x40
   14005e77c:	add    DWORD PTR [rax],eax
   14005e77e:	add    BYTE PTR [rax],al
   14005e780:	or     BYTE PTR [rbx],0x4
   14005e783:	rex add DWORD PTR [rax],eax
	...
   14005e80e:	add    BYTE PTR [rax],al
   14005e810:	cmc    
   14005e811:	(bad)  
   14005e812:	add    BYTE PTR [rax],al
   14005e814:	cmp    al,0x4f
   14005e816:	add    BYTE PTR [rax],al
   14005e818:	mov    ch,0x0
	...
   14005e826:	add    BYTE PTR [rax],al
   14005e828:	js     0x14005e835
   14005e82a:	add    al,0x40
   14005e82c:	add    DWORD PTR [rax],eax
   14005e82e:	add    BYTE PTR [rax],al
   14005e830:	jo     0x14005e83d
   14005e832:	add    al,0x40
   14005e834:	add    DWORD PTR [rax],eax
   14005e836:	add    BYTE PTR [rax],al
   14005e838:	(bad)  
   14005e839:	or     eax,DWORD PTR [rax+rax*2]
   14005e83c:	add    DWORD PTR [rax],eax
   14005e83e:	add    BYTE PTR [rax],al
   14005e840:	push   rax
   14005e841:	or     eax,DWORD PTR [rax+rax*2]
   14005e844:	add    DWORD PTR [rax],eax
   14005e846:	add    BYTE PTR [rax],al
   14005e848:	cmp    BYTE PTR [rbx],cl
   14005e84a:	add    al,0x40
   14005e84c:	add    DWORD PTR [rax],eax
   14005e84e:	add    BYTE PTR [rax],al
   14005e850:	sub    BYTE PTR [rbx],cl
   14005e852:	add    al,0x40
   14005e854:	add    DWORD PTR [rax],eax
   14005e856:	add    BYTE PTR [rax],al
   14005e858:	and    BYTE PTR [rbx],cl
   14005e85a:	add    al,0x40
   14005e85c:	add    DWORD PTR [rax],eax
	...
   14005e8ce:	add    BYTE PTR [rax],al
   14005e8d0:	test   BYTE PTR [rdi],0x0
   14005e8d3:	add    BYTE PTR [rip+0xffffffffb600004f],bh        # 0xf605e928
	...
   14005e8e5:	add    BYTE PTR [rax],al
   14005e8e7:	add    BYTE PTR [rax],bl
   14005e8e9:	or     eax,DWORD PTR [rax+rax*2]
   14005e8ec:	add    DWORD PTR [rax],eax
   14005e8ee:	add    BYTE PTR [rax],al
   14005e8f0:	adc    BYTE PTR [rbx],cl
   14005e8f2:	add    al,0x40
   14005e8f4:	add    DWORD PTR [rax],eax
   14005e8f6:	add    BYTE PTR [rax],al
   14005e8f8:	add    BYTE PTR [rbx],cl
   14005e8fa:	add    al,0x40
   14005e8fc:	add    DWORD PTR [rax],eax
   14005e8fe:	add    BYTE PTR [rax],al
   14005e900:	lock or al,BYTE PTR [rax+rax*2]
   14005e904:	add    DWORD PTR [rax],eax
   14005e906:	add    BYTE PTR [rax],al
   14005e908:	cmp    BYTE PTR [rbx],cl
   14005e90a:	add    al,0x40
   14005e90c:	add    DWORD PTR [rax],eax
   14005e90e:	add    BYTE PTR [rax],al
   14005e910:	sub    BYTE PTR [rbx],cl
   14005e912:	add    al,0x40
   14005e914:	add    DWORD PTR [rax],eax
   14005e916:	add    BYTE PTR [rax],al
   14005e918:	and    BYTE PTR [rbx],cl
   14005e91a:	add    al,0x40
   14005e91c:	add    DWORD PTR [rax],eax
	...
   14005e98e:	add    BYTE PTR [rax],al
   14005e990:	test   DWORD PTR [rdi],0x4f420000
   14005e996:	add    BYTE PTR [rax],al
   14005e998:	mov    bh,0x0
	...
   14005e9a6:	add    BYTE PTR [rax],al
   14005e9a8:	call   0x14145edb7
   14005e9ad:	add    BYTE PTR [rax],al
   14005e9af:	add    al,ah
   14005e9b1:	or     al,BYTE PTR [rax+rax*2]
   14005e9b4:	add    DWORD PTR [rax],eax
   14005e9b6:	add    BYTE PTR [rax],al
   14005e9b8:	ror    BYTE PTR [rdx],1
   14005e9ba:	add    al,0x40
   14005e9bc:	add    DWORD PTR [rax],eax
   14005e9be:	add    BYTE PTR [rax],al
   14005e9c0:	ror    BYTE PTR [rdx],0x4
   14005e9c3:	rex add DWORD PTR [rax],eax
   14005e9c6:	add    BYTE PTR [rax],al
   14005e9c8:	test   al,0xa
   14005e9ca:	add    al,0x40
   14005e9cc:	add    DWORD PTR [rax],eax
	...
   14005ea4e:	add    BYTE PTR [rax],al
   14005ea50:	clc    
   14005ea51:	(bad)  
   14005ea52:	add    BYTE PTR [rax],al
   14005ea54:	rex.WB
   14005ea55:	rex.WRXB add BYTE PTR [r8],r8b
   14005ea58:	mov    eax,0x0
	...
   14005ea65:	add    BYTE PTR [rax],al
   14005ea67:	add    BYTE PTR [rax+0x140040a],ah
   14005ea6d:	add    BYTE PTR [rax],al
   14005ea6f:	add    BYTE PTR [rax+0x140040a],bl
   14005ea75:	add    BYTE PTR [rax],al
   14005ea77:	add    BYTE PTR [rax+0x140040a],cl
   14005ea7d:	add    BYTE PTR [rax],al
   14005ea7f:	add    BYTE PTR [rax+0xa],bh
   14005ea82:	add    al,0x40
   14005ea84:	add    DWORD PTR [rax],eax
   14005ea86:	add    BYTE PTR [rax],al
   14005ea88:	(bad)  
   14005ea89:	or     al,BYTE PTR [rax+rax*2]
   14005ea8c:	add    DWORD PTR [rax],eax
   14005ea8e:	add    BYTE PTR [rax],al
   14005ea90:	push   rax
   14005ea91:	or     al,BYTE PTR [rax+rax*2]
   14005ea94:	add    DWORD PTR [rax],eax
   14005ea96:	add    BYTE PTR [rax],al
   14005ea98:	rex.W or al,BYTE PTR [rax+rax*2]
   14005ea9c:	add    DWORD PTR [rax],eax
	...
   14005eb0e:	add    BYTE PTR [rax],al
   14005eb10:	stc    
   14005eb11:	(bad)  
   14005eb12:	add    BYTE PTR [rax],al
   14005eb14:	(bad)  
   14005eb15:	rex.WRXB add BYTE PTR [r8],r8b
   14005eb18:	mov    ecx,0x0
	...
   14005eb25:	add    BYTE PTR [rax],al
   14005eb27:	add    BYTE PTR [rax+0xa],al
   14005eb2a:	add    al,0x40
   14005eb2c:	add    DWORD PTR [rax],eax
   14005eb2e:	add    BYTE PTR [rax],al
   14005eb30:	cmp    BYTE PTR [rdx],cl
   14005eb32:	add    al,0x40
   14005eb34:	add    DWORD PTR [rax],eax
   14005eb36:	add    BYTE PTR [rax],al
   14005eb38:	sub    BYTE PTR [rdx],cl
   14005eb3a:	add    al,0x40
   14005eb3c:	add    DWORD PTR [rax],eax
   14005eb3e:	add    BYTE PTR [rax],al
   14005eb40:	sbb    BYTE PTR [rdx],cl
   14005eb42:	add    al,0x40
   14005eb44:	add    DWORD PTR [rax],eax
   14005eb46:	add    BYTE PTR [rax],al
   14005eb48:	add    BYTE PTR [rdx],cl
   14005eb4a:	add    al,0x40
   14005eb4c:	add    DWORD PTR [rax],eax
   14005eb4e:	add    BYTE PTR [rax],al
   14005eb50:	clc    
   14005eb51:	or     DWORD PTR [rax+rax*2],eax
   14005eb54:	add    DWORD PTR [rax],eax
	...
   14005ebce:	add    BYTE PTR [rax],al
   14005ebd0:	cli    
   14005ebd1:	(bad)  
   14005ebd2:	add    BYTE PTR [rax],al
   14005ebd4:	(bad)  
   14005ebd5:	rex.WRXB add BYTE PTR [r8],r8b
   14005ebd8:	mov    edx,0x0
	...
   14005ebe5:	add    BYTE PTR [rax],al
   14005ebe7:	add    al,dh
   14005ebe9:	or     DWORD PTR [rax+rax*2],eax
   14005ebec:	add    DWORD PTR [rax],eax
   14005ebee:	add    BYTE PTR [rax],al
   14005ebf0:	call   0x14145effe
   14005ebf5:	add    BYTE PTR [rax],al
   14005ebf7:	add    al,bl
   14005ebf9:	or     DWORD PTR [rax+rax*2],eax
   14005ebfc:	add    DWORD PTR [rax],eax
   14005ebfe:	add    BYTE PTR [rax],al
   14005ec00:	enter  0x409,0x40
   14005ec04:	add    DWORD PTR [rax],eax
	...
   14005ec8e:	add    BYTE PTR [rax],al
   14005ec90:	sti    
   14005ec91:	(bad)  
   14005ec92:	add    BYTE PTR [rax],al
   14005ec94:	enter  0x4f,0x0
   14005ec98:	mov    ebx,0x0
	...
   14005eca5:	add    BYTE PTR [rax],al
   14005eca7:	add    al,al
   14005eca9:	or     DWORD PTR [rax+rax*2],eax
   14005ecac:	add    DWORD PTR [rax],eax
   14005ecae:	add    BYTE PTR [rax],al
   14005ecb0:	mov    eax,0x1400409
   14005ecb5:	add    BYTE PTR [rax],al
   14005ecb7:	add    BYTE PTR [rax+0x1400409],ch
   14005ecbd:	add    BYTE PTR [rax],al
   14005ecbf:	add    BYTE PTR [rax+0x1400409],bl
   14005ecc5:	add    BYTE PTR [rax],al
   14005ecc7:	add    BYTE PTR [rax+0x1400409],al
   14005eccd:	add    BYTE PTR [rax],al
   14005eccf:	add    BYTE PTR [rax+0x9],bh
   14005ecd2:	add    al,0x40
   14005ecd4:	add    DWORD PTR [rax],eax
	...
   14005ed4e:	add    BYTE PTR [rax],al
   14005ed50:	fild   DWORD PTR [rdi]
   14005ed52:	add    BYTE PTR [rax],al
   14005ed54:	mov    ch,0x1
   14005ed56:	add    BYTE PTR [rax],al
   14005ed58:	mov    esp,0x1000000
	...
   14005ed65:	add    BYTE PTR [rax],al
   14005ed67:	add    BYTE PTR [rax+0x9],dh
   14005ed6a:	add    al,0x40
   14005ed6c:	add    DWORD PTR [rax],eax
   14005ed6e:	add    BYTE PTR [rax],al
   14005ed70:	push   0x1400409
   14005ed75:	add    BYTE PTR [rax],al
   14005ed77:	add    BYTE PTR [rcx+rcx*1+0x4],ah
   14005ed7b:	rex add DWORD PTR [rax],eax
   14005ed7e:	add    BYTE PTR [rax],al
   14005ed80:	push   rax
   14005ed81:	or     DWORD PTR [rax+rax*2],eax
   14005ed84:	add    DWORD PTR [rax],eax
   14005ed86:	add    BYTE PTR [rax],al
   14005ed88:	cmp    BYTE PTR [rcx],cl
   14005ed8a:	add    al,0x40
   14005ed8c:	add    DWORD PTR [rax],eax
	...
   14005ee0e:	add    BYTE PTR [rax],al
   14005ee10:	cld    
   14005ee11:	(bad)  
   14005ee12:	add    BYTE PTR [rax],al
   14005ee14:	hlt    
   14005ee15:	add    DWORD PTR [rax],eax
   14005ee17:	add    BYTE PTR [rbp+0x0],bh
	...
   14005ee25:	add    BYTE PTR [rax],al
   14005ee27:	add    BYTE PTR [rax],dh
   14005ee29:	or     DWORD PTR [rax+rax*2],eax
   14005ee2c:	add    DWORD PTR [rax],eax
   14005ee2e:	add    BYTE PTR [rax],al
   14005ee30:	sub    BYTE PTR [rcx],cl
   14005ee32:	add    al,0x40
   14005ee34:	add    DWORD PTR [rax],eax
   14005ee36:	add    BYTE PTR [rax],al
   14005ee38:	sbb    BYTE PTR [rcx],cl
   14005ee3a:	add    al,0x40
   14005ee3c:	add    DWORD PTR [rax],eax
   14005ee3e:	add    BYTE PTR [rax],al
   14005ee40:	or     BYTE PTR [rcx],cl
   14005ee42:	add    al,0x40
   14005ee44:	add    DWORD PTR [rax],eax
   14005ee46:	add    BYTE PTR [rax],al
   14005ee48:	clc    
   14005ee49:	or     BYTE PTR [rax+rax*2],al
   14005ee4c:	add    DWORD PTR [rax],eax
   14005ee4e:	add    BYTE PTR [rax],al
   14005ee50:	loopne 0x14005ee5a
   14005ee52:	add    al,0x40
   14005ee54:	add    DWORD PTR [rax],eax
   14005ee56:	add    BYTE PTR [rax],al
   14005ee58:	fmul   DWORD PTR [rax]
   14005ee5a:	add    al,0x40
   14005ee5c:	add    DWORD PTR [rax],eax
	...
   14005eece:	add    BYTE PTR [rax],al
   14005eed0:	std    
   14005eed1:	(bad)  
   14005eed2:	add    BYTE PTR [rax],al
   14005eed4:	(bad)  
   14005eed5:	(bad)  
   14005eed6:	(bad)  
   14005eed7:	(bad)  
   14005eed8:	mov    esi,0x0
	...
   14005eee5:	add    BYTE PTR [rax],al
   14005eee7:	add    al,dl
   14005eee9:	or     BYTE PTR [rax+rax*2],al
   14005eeec:	add    DWORD PTR [rax],eax
   14005eeee:	add    BYTE PTR [rax],al
   14005eef0:	enter  0x408,0x40
   14005eef4:	add    DWORD PTR [rax],eax
   14005eef6:	add    BYTE PTR [rax],al
   14005eef8:	(bad)  
   14005eef9:	or     BYTE PTR [rax+rax*2],al
   14005eefc:	add    DWORD PTR [rax],eax
   14005eefe:	add    BYTE PTR [rax],al
   14005ef00:	mov    eax,0x1400408
   14005ef05:	add    BYTE PTR [rax],al
   14005ef07:	add    BYTE PTR [rax+0x1400408],ah
   14005ef0d:	add    BYTE PTR [rax],al
   14005ef0f:	add    BYTE PTR [rax+0x1400408],bl
	...
   14005ef8d:	add    BYTE PTR [rax],al
   14005ef8f:	add    dl,bl
   14005ef91:	(bad)  
   14005ef92:	add    BYTE PTR [rax],al
   14005ef94:	push   rsp
   14005ef95:	add    eax,DWORD PTR [rax]
   14005ef97:	add    BYTE PTR [rdi+0x1000000],bh
	...
   14005efa5:	add    BYTE PTR [rax],al
   14005efa7:	add    BYTE PTR [rax+0x1400408],dl
   14005efad:	add    BYTE PTR [rax],al
   14005efaf:	add    BYTE PTR [rax+0x1400408],cl
   14005efb5:	add    BYTE PTR [rax],al
   14005efb7:	add    BYTE PTR [rax+rcx*1+0x14004],al
   14005efbe:	add    BYTE PTR [rax],al
   14005efc0:	js     0x14005efca
   14005efc2:	add    al,0x40
   14005efc4:	add    DWORD PTR [rax],eax
   14005efc6:	add    BYTE PTR [rax],al
   14005efc8:	(bad)  
   14005efc9:	or     BYTE PTR [rax+rax*2],al
   14005efcc:	add    DWORD PTR [rax],eax
	...
   14005f04e:	add    BYTE PTR [rax],al
   14005f050:	inc    BYTE PTR [rdi]
   14005f052:	add    BYTE PTR [rax],al
   14005f054:	push   rdi
   14005f055:	add    eax,DWORD PTR [rax]
   14005f057:	add    al,al
	...
   14005f065:	add    BYTE PTR [rax],al
   14005f067:	add    BYTE PTR [rax+0x8],bl
   14005f06a:	add    al,0x40
   14005f06c:	add    DWORD PTR [rax],eax
   14005f06e:	add    BYTE PTR [rax],al
   14005f070:	push   rax
   14005f071:	or     BYTE PTR [rax+rax*2],al
   14005f074:	add    DWORD PTR [rax],eax
   14005f076:	add    BYTE PTR [rax],al
   14005f078:	rex.WR or BYTE PTR [rax+rax*2],r8b
   14005f07c:	add    DWORD PTR [rax],eax
   14005f07e:	add    BYTE PTR [rax],al
   14005f080:	or     BYTE PTR [rax+rax*2],al
   14005f084:	add    DWORD PTR [rax],eax
   14005f086:	add    BYTE PTR [rax],al
   14005f088:	sub    BYTE PTR [rax],cl
   14005f08a:	add    al,0x40
   14005f08c:	add    DWORD PTR [rax],eax
   14005f08e:	add    BYTE PTR [rax],al
   14005f090:	sbb    BYTE PTR [rax],cl
   14005f092:	add    al,0x40
   14005f094:	add    DWORD PTR [rax],eax
	...
   14005f10e:	add    BYTE PTR [rax],al
   14005f110:	inc    DWORD PTR [rdi]
   14005f112:	add    BYTE PTR [rax],al
   14005f114:	pop    rcx
   14005f115:	add    eax,DWORD PTR [rax]
   14005f117:	add    cl,al
   14005f119:	add    BYTE PTR [rax],al
   14005f11b:	add    BYTE PTR [rcx],al
	...
   14005f125:	add    BYTE PTR [rax],al
   14005f127:	add    BYTE PTR [rax],dl
   14005f129:	or     BYTE PTR [rax+rax*2],al
   14005f12c:	add    DWORD PTR [rax],eax
   14005f12e:	add    BYTE PTR [rax],al
   14005f130:	or     BYTE PTR [rax],cl
   14005f132:	add    al,0x40
   14005f134:	add    DWORD PTR [rax],eax
   14005f136:	add    BYTE PTR [rax],al
   14005f138:	add    al,0x8
   14005f13a:	add    al,0x40
   14005f13c:	add    DWORD PTR [rax],eax
   14005f13e:	add    BYTE PTR [rax],al
   14005f140:	clc    
   14005f141:	(bad)  
   14005f142:	add    al,0x40
   14005f144:	add    DWORD PTR [rax],eax
   14005f146:	add    BYTE PTR [rax],al
   14005f148:	loopne 0x14005f151
   14005f14a:	add    al,0x40
   14005f14c:	add    DWORD PTR [rax],eax
	...
   14005f1ce:	add    BYTE PTR [rax],al
   14005f1d0:	add    BYTE PTR [rax],cl
   14005f1d2:	add    BYTE PTR [rax],al
   14005f1d4:	pop    rsp
   14005f1d5:	add    eax,DWORD PTR [rax]
   14005f1d7:	add    dl,al
	...
   14005f1e5:	add    BYTE PTR [rax],al
   14005f1e7:	add    al,bl
   14005f1e9:	(bad)  
   14005f1ea:	add    al,0x40
   14005f1ec:	add    DWORD PTR [rax],eax
   14005f1ee:	add    BYTE PTR [rax],al
   14005f1f0:	rol    BYTE PTR [rdi],1
   14005f1f2:	add    al,0x40
   14005f1f4:	add    DWORD PTR [rax],eax
   14005f1f6:	add    BYTE PTR [rax],al
   14005f1f8:	int3   
   14005f1f9:	(bad)  
   14005f1fa:	add    al,0x40
   14005f1fc:	add    DWORD PTR [rax],eax
   14005f1fe:	add    BYTE PTR [rax],al
   14005f200:	rol    BYTE PTR [rdi],0x4
   14005f203:	rex add DWORD PTR [rax],eax
   14005f206:	add    BYTE PTR [rax],al
   14005f208:	test   al,0x7
   14005f20a:	add    al,0x40
   14005f20c:	add    DWORD PTR [rax],eax
	...
   14005f28e:	add    BYTE PTR [rax],al
   14005f290:	add    DWORD PTR [rax],ecx
   14005f292:	add    BYTE PTR [rax],al
   14005f294:	pop    rbp
   14005f295:	add    eax,DWORD PTR [rax]
   14005f297:	add    bl,al
	...
   14005f2a5:	add    BYTE PTR [rax],al
   14005f2a7:	add    BYTE PTR [rax+0x1400407],ah
   14005f2ad:	add    BYTE PTR [rax],al
   14005f2af:	add    BYTE PTR [rax+0x1400407],bl
   14005f2b5:	add    BYTE PTR [rax],al
   14005f2b7:	add    BYTE PTR [rdi+rax*1+0x14004],dl
   14005f2be:	add    BYTE PTR [rax],al
   14005f2c0:	mov    WORD PTR [rdi],es
   14005f2c2:	add    al,0x40
   14005f2c4:	add    DWORD PTR [rax],eax
   14005f2c6:	add    BYTE PTR [rax],al
   14005f2c8:	add    BYTE PTR [rdi],0x4
   14005f2cb:	rex add DWORD PTR [rax],eax
   14005f2ce:	add    BYTE PTR [rax],al
   14005f2d0:	push   0x1400407
	...
   14005f34d:	add    BYTE PTR [rax],al
   14005f34f:	add    BYTE PTR [rdx],al
   14005f351:	or     BYTE PTR [rax],al
   14005f353:	add    BYTE PTR [rdi+0x3],bl
   14005f356:	add    BYTE PTR [rax],al
   14005f358:	(bad)  
	...
   14005f365:	add    BYTE PTR [rax],al
   14005f367:	add    BYTE PTR [rax+0x7],ah
   14005f36a:	add    al,0x40
   14005f36c:	add    DWORD PTR [rax],eax
   14005f36e:	add    BYTE PTR [rax],al
   14005f370:	pop    rax
   14005f371:	(bad)  
   14005f372:	add    al,0x40
   14005f374:	add    DWORD PTR [rax],eax
   14005f376:	add    BYTE PTR [rax],al
   14005f378:	push   rsp
   14005f379:	(bad)  
   14005f37a:	add    al,0x40
   14005f37c:	add    DWORD PTR [rax],eax
   14005f37e:	add    BYTE PTR [rax],al
   14005f380:	rex.W (bad) 
   14005f382:	add    al,0x40
   14005f384:	add    DWORD PTR [rax],eax
   14005f386:	add    BYTE PTR [rax],al
   14005f388:	xor    BYTE PTR [rdi],al
   14005f38a:	add    al,0x40
   14005f38c:	add    DWORD PTR [rax],eax
	...
   14005f40e:	add    BYTE PTR [rax],al
   14005f410:	add    ecx,DWORD PTR [rax]
   14005f412:	add    BYTE PTR [rax],al
   14005f414:	(bad)  
   14005f415:	add    eax,DWORD PTR [rax]
   14005f417:	add    ch,al
	...
   14005f425:	add    BYTE PTR [rax],al
   14005f427:	add    BYTE PTR [rdi+rax*1],ah
   14005f42a:	add    al,0x40
   14005f42c:	add    DWORD PTR [rax],eax
   14005f42e:	add    BYTE PTR [rax],al
   14005f430:	sbb    al,0x7
   14005f432:	add    al,0x40
   14005f434:	add    DWORD PTR [rax],eax
   14005f436:	add    BYTE PTR [rax],al
   14005f438:	adc    BYTE PTR [rdi],al
   14005f43a:	add    al,0x40
   14005f43c:	add    DWORD PTR [rax],eax
   14005f43e:	add    BYTE PTR [rax],al
   14005f440:	clc    
   14005f441:	(bad)  
   14005f442:	add    al,0x40
   14005f444:	add    DWORD PTR [rax],eax
	...
   14005f4ce:	add    BYTE PTR [rax],al
   14005f4d0:	add    al,0x8
   14005f4d2:	add    BYTE PTR [rax],al
   14005f4d4:	(bad)  
   14005f4d5:	add    eax,DWORD PTR [rax]
   14005f4d7:	add    dh,al
	...
   14005f4e5:	add    BYTE PTR [rax],al
   14005f4e7:	add    al,dh
   14005f4e9:	(bad)  
   14005f4ea:	add    al,0x40
   14005f4ec:	add    DWORD PTR [rax],eax
   14005f4ee:	add    BYTE PTR [rax],al
   14005f4f0:	call   0x14145f8fb
   14005f4f5:	add    BYTE PTR [rax],al
   14005f4f7:	add    ah,ah
   14005f4f9:	(bad)  
   14005f4fa:	add    al,0x40
   14005f4fc:	add    DWORD PTR [rax],eax
   14005f4fe:	add    BYTE PTR [rax],al
   14005f500:	fadd   DWORD PTR [rsi]
   14005f502:	add    al,0x40
   14005f504:	add    DWORD PTR [rax],eax
   14005f506:	add    BYTE PTR [rax],al
   14005f508:	rol    BYTE PTR [rsi],0x4
   14005f50b:	rex add DWORD PTR [rax],eax
	...
   14005f58e:	add    BYTE PTR [rax],al
   14005f590:	add    eax,0xff000008
   14005f595:	(bad)  
   14005f596:	(bad)  
   14005f597:	inc    edi
	...
   14005f5a5:	add    BYTE PTR [rax],al
   14005f5a7:	add    BYTE PTR [rsi+rax*1+0x14004],dh
   14005f5ae:	add    BYTE PTR [rax],al
   14005f5b0:	lods   al,BYTE PTR ds:[rsi]
   14005f5b1:	(bad)  
   14005f5b2:	add    al,0x40
   14005f5b4:	add    DWORD PTR [rax],eax
   14005f5b6:	add    BYTE PTR [rax],al
   14005f5b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005f5b9:	(bad)  
   14005f5ba:	add    al,0x40
   14005f5bc:	add    DWORD PTR [rax],eax
   14005f5be:	add    BYTE PTR [rax],al
   14005f5c0:	cwde   
   14005f5c1:	(bad)  
   14005f5c2:	add    al,0x40
   14005f5c4:	add    DWORD PTR [rax],eax
   14005f5c6:	add    BYTE PTR [rax],al
   14005f5c8:	add    BYTE PTR [rsi],0x4
   14005f5cb:	rex add DWORD PTR [rax],eax
   14005f5ce:	add    BYTE PTR [rax],al
   14005f5d0:	js     0x14005f5d8
   14005f5d2:	add    al,0x40
   14005f5d4:	add    DWORD PTR [rax],eax
	...
   14005f64e:	add    BYTE PTR [rax],al
   14005f650:	(bad)  
   14005f651:	or     BYTE PTR [rax],al
   14005f653:	add    BYTE PTR [rbp+0x3],ah
   14005f656:	add    BYTE PTR [rax],al
   14005f658:	enter  0x0,0x0
	...
   14005f668:	jo     0x14005f670
   14005f66a:	add    al,0x40
   14005f66c:	add    DWORD PTR [rax],eax
   14005f66e:	add    BYTE PTR [rax],al
   14005f670:	push   0x1400406
   14005f675:	add    BYTE PTR [rax],al
   14005f677:	add    BYTE PTR [rsi+rax*1+0x4],ah
   14005f67b:	rex add DWORD PTR [rax],eax
   14005f67e:	add    BYTE PTR [rax],al
   14005f680:	pop    rsp
   14005f681:	(bad)  
   14005f682:	add    al,0x40
   14005f684:	add    DWORD PTR [rax],eax
   14005f686:	add    BYTE PTR [rax],al
   14005f688:	push   rax
   14005f689:	(bad)  
   14005f68a:	add    al,0x40
   14005f68c:	add    DWORD PTR [rax],eax
   14005f68e:	add    BYTE PTR [rax],al
   14005f690:	cmp    BYTE PTR [rsi],al
   14005f692:	add    al,0x40
   14005f694:	add    DWORD PTR [rax],eax
	...
   14005f70e:	add    BYTE PTR [rax],al
   14005f710:	(bad)  
   14005f711:	or     BYTE PTR [rax],al
   14005f713:	add    BYTE PTR [rsi+0x3],ah
   14005f716:	add    BYTE PTR [rax],al
   14005f718:	leave  
	...
   14005f725:	add    BYTE PTR [rax],al
   14005f727:	add    BYTE PTR [rax],dh
   14005f729:	(bad)  
   14005f72a:	add    al,0x40
   14005f72c:	add    DWORD PTR [rax],eax
   14005f72e:	add    BYTE PTR [rax],al
   14005f730:	sub    BYTE PTR [rsi],al
   14005f732:	add    al,0x40
   14005f734:	add    DWORD PTR [rax],eax
   14005f736:	add    BYTE PTR [rax],al
   14005f738:	sbb    BYTE PTR [rsi],al
   14005f73a:	add    al,0x40
   14005f73c:	add    DWORD PTR [rax],eax
   14005f73e:	add    BYTE PTR [rax],al
   14005f740:	or     BYTE PTR [rsi],al
   14005f742:	add    al,0x40
   14005f744:	add    DWORD PTR [rax],eax
   14005f746:	add    BYTE PTR [rax],al
   14005f748:	clc    
   14005f749:	add    eax,0x14004
   14005f74e:	add    BYTE PTR [rax],al
   14005f750:	loopne 0x14005f757
   14005f752:	add    al,0x40
   14005f754:	add    DWORD PTR [rax],eax
	...
   14005f7ce:	add    BYTE PTR [rax],al
   14005f7d0:	or     BYTE PTR [rax],cl
   14005f7d2:	add    BYTE PTR [rax],al
   14005f7d4:	xchg   DWORD PTR [rcx+0x0],edx
   14005f7d7:	add    dl,cl
	...
   14005f7e5:	add    BYTE PTR [rax],al
   14005f7e7:	add    al,bl
   14005f7e9:	add    eax,0x14004
   14005f7ee:	add    BYTE PTR [rax],al
   14005f7f0:	rol    BYTE PTR [rip+0x14004],1        # 0x1400737fa
   14005f7f6:	add    BYTE PTR [rax],al
   14005f7f8:	rol    BYTE PTR [rip+0x14004],0x0        # 0x140073803
   14005f7ff:	add    BYTE PTR [rax+0x1400405],dh
   14005f805:	add    BYTE PTR [rax],al
   14005f807:	add    BYTE PTR [rax+0x1400405],bl
   14005f80d:	add    BYTE PTR [rax],al
   14005f80f:	add    BYTE PTR [rax+0x1400405],cl
   14005f815:	add    BYTE PTR [rax],al
   14005f817:	add    BYTE PTR [rax+0x1400405],al
	...
   14005f88d:	add    BYTE PTR [rax],al
   14005f88f:	add    BYTE PTR [rcx],cl
   14005f891:	or     BYTE PTR [rax],al
   14005f893:	add    BYTE PTR [rax-0x34ffffaf],dl
	...
   14005f8a5:	add    BYTE PTR [rax],al
   14005f8a7:	add    BYTE PTR [rax+0x5],bh
   14005f8aa:	add    al,0x40
   14005f8ac:	add    DWORD PTR [rax],eax
   14005f8ae:	add    BYTE PTR [rax],al
   14005f8b0:	jo     0x14005f8b7
   14005f8b2:	add    al,0x40
   14005f8b4:	add    DWORD PTR [rax],eax
   14005f8b6:	add    BYTE PTR [rax],al
   14005f8b8:	(bad)  
   14005f8b9:	add    eax,0x14004
   14005f8be:	add    BYTE PTR [rax],al
   14005f8c0:	push   rax
   14005f8c1:	add    eax,0x14004
	...
   14005f94e:	add    BYTE PTR [rax],al
   14005f950:	or     cl,BYTE PTR [rax]
   14005f952:	add    BYTE PTR [rax],al
   14005f954:	(bad)  
   14005f955:	(bad)  
   14005f956:	(bad)  
   14005f957:	dec    esp
	...
   14005f965:	add    BYTE PTR [rax],al
   14005f967:	add    BYTE PTR [rbp+rax*1+0x4],al
   14005f96b:	rex add DWORD PTR [rax],eax
   14005f96e:	add    BYTE PTR [rax],al
   14005f970:	cmp    al,0x5
   14005f972:	add    al,0x40
   14005f974:	add    DWORD PTR [rax],eax
   14005f976:	add    BYTE PTR [rax],al
   14005f978:	xor    BYTE PTR [rip+0x14004],al        # 0x140073982
	...
   14005fa0e:	add    BYTE PTR [rax],al
   14005fa10:	or     ecx,DWORD PTR [rax]
   14005fa12:	add    BYTE PTR [rax],al
   14005fa14:	(bad)  
   14005fa15:	(bad)  
   14005fa16:	(bad)  
   14005fa17:	dec    ebp
	...
   14005fa25:	add    BYTE PTR [rax],al
   14005fa27:	add    BYTE PTR [rax*1+0x14004],ah
   14005fa2e:	add    BYTE PTR [rax],al
   14005fa30:	sbb    al,0x5
   14005fa32:	add    al,0x40
   14005fa34:	add    DWORD PTR [rax],eax
   14005fa36:	add    BYTE PTR [rax],al
   14005fa38:	adc    BYTE PTR [rip+0x14004],al        # 0x140073a42
	...
   14005face:	add    BYTE PTR [rax],al
   14005fad0:	or     al,0x8
   14005fad2:	add    BYTE PTR [rax],al
   14005fad4:	(bad)  
   14005fad5:	(bad)  
   14005fad6:	(bad)  
   14005fad7:	dec    esi
	...
   14005fae5:	add    BYTE PTR [rax],al
   14005fae7:	add    BYTE PTR [rax],cl
   14005fae9:	add    eax,0x14004
   14005faee:	add    BYTE PTR [rax],al
   14005faf0:	add    BYTE PTR [rip+0x14004],al        # 0x140073afa
   14005faf6:	add    BYTE PTR [rax],al
   14005faf8:	cld    
   14005faf9:	add    al,0x4
   14005fafb:	rex add DWORD PTR [rax],eax
   14005fafe:	add    BYTE PTR [rax],al
   14005fb00:	lock add al,0x4
   14005fb03:	rex add DWORD PTR [rax],eax
	...
   14005fb8e:	add    BYTE PTR [rax],al
   14005fb90:	or     eax,0xa9000008
   14005fb95:	push   rcx
   14005fb96:	add    BYTE PTR [rax],al
   14005fb98:	iret   
	...
   14005fba5:	add    BYTE PTR [rax],al
   14005fba7:	add    al,ch
   14005fba9:	add    al,0x4
   14005fbab:	rex add DWORD PTR [rax],eax
   14005fbae:	add    BYTE PTR [rax],al
   14005fbb0:	loopne 0x14005fbb6
   14005fbb2:	add    al,0x40
   14005fbb4:	add    DWORD PTR [rax],eax
   14005fbb6:	add    BYTE PTR [rax],al
   14005fbb8:	rol    BYTE PTR [rsp+rax*1],1
   14005fbbb:	rex add DWORD PTR [rax],eax
   14005fbbe:	add    BYTE PTR [rax],al
   14005fbc0:	rol    BYTE PTR [rsp+rax*1],0x40
   14005fbc4:	add    DWORD PTR [rax],eax
	...
   14005fc4e:	add    BYTE PTR [rax],al
   14005fc50:	(bad)  
   14005fc51:	or     BYTE PTR [rax],al
   14005fc53:	add    bh,bh
   14005fc55:	(bad)  
   14005fc56:	(bad)  
   14005fc57:	call   rax
	...
   14005fc65:	add    BYTE PTR [rax],al
   14005fc67:	add    BYTE PTR [rax+0x1400404],bh
   14005fc6d:	add    BYTE PTR [rax],al
   14005fc6f:	add    BYTE PTR [rax+0x1400404],dh
   14005fc75:	add    BYTE PTR [rax],al
   14005fc77:	add    BYTE PTR [rax+0x1400404],ah
   14005fc7d:	add    BYTE PTR [rax],al
   14005fc7f:	add    BYTE PTR [rax+0x1400404],dl
   14005fc85:	add    BYTE PTR [rax],al
   14005fc87:	add    BYTE PTR [rax+0x4],bh
   14005fc8a:	add    al,0x40
   14005fc8c:	add    DWORD PTR [rax],eax
	...
   14005fd0e:	add    BYTE PTR [rax],al
   14005fd10:	invd   
   14005fd12:	add    BYTE PTR [rax],al
   14005fd14:	add    al,BYTE PTR [rax+rax*1]
   14005fd17:	add    cl,dl
	...
   14005fd25:	add    BYTE PTR [rax],al
   14005fd27:	add    BYTE PTR [rax+0x4],dh
   14005fd2a:	add    al,0x40
   14005fd2c:	add    DWORD PTR [rax],eax
   14005fd2e:	add    BYTE PTR [rax],al
   14005fd30:	fs add al,0x4
   14005fd33:	rex add DWORD PTR [rax],eax
   14005fd36:	add    BYTE PTR [rax],al
   14005fd38:	pop    rax
   14005fd39:	add    al,0x4
   14005fd3b:	rex add DWORD PTR [rax],eax
   14005fd3e:	add    BYTE PTR [rax],al
   14005fd40:	add    al,0x4
   14005fd43:	rex add DWORD PTR [rax],eax
   14005fd46:	add    BYTE PTR [rax],al
   14005fd48:	cmp    BYTE PTR [rsp+rax*1],al
   14005fd4b:	rex add DWORD PTR [rax],eax
	...
   14005fdce:	add    BYTE PTR [rax],al
   14005fdd0:	adc    BYTE PTR [rax],cl
   14005fdd2:	add    BYTE PTR [rax],al
   14005fdd4:	(bad)  
   14005fdd5:	(bad)  
   14005fdd6:	(bad)  
   14005fdd7:	call   rdx
	...
   14005fde5:	add    BYTE PTR [rax],al
   14005fde7:	add    BYTE PTR [rax],ch
   14005fde9:	add    al,0x4
   14005fdeb:	rex add DWORD PTR [rax],eax
   14005fdee:	add    BYTE PTR [rax],al
   14005fdf0:	sbb    BYTE PTR [rsp+rax*1],al
   14005fdf3:	rex add DWORD PTR [rax],eax
	...
   14005fe8e:	add    BYTE PTR [rax],al
   14005fe90:	adc    DWORD PTR [rax],ecx
   14005fe92:	add    BYTE PTR [rax],al
   14005fe94:	(bad)  
   14005fe95:	(bad)  
   14005fe96:	(bad)  
   14005fe97:	call   rbx
	...
   14005fea5:	add    BYTE PTR [rax],al
   14005fea7:	add    BYTE PTR [rax],cl
   14005fea9:	add    al,0x4
   14005feab:	rex add DWORD PTR [rax],eax
   14005feae:	add    BYTE PTR [rax],al
   14005feb0:	clc    
   14005feb1:	add    eax,DWORD PTR [rax+rax*2]
   14005feb4:	add    DWORD PTR [rax],eax
	...
   14005ff4e:	add    BYTE PTR [rax],al
   14005ff50:	adc    cl,BYTE PTR [rax]
   14005ff52:	add    BYTE PTR [rax],al
   14005ff54:	(bad)  
   14005ff55:	(bad)  
   14005ff56:	(bad)  
   14005ff57:	call   rsp
	...
   14005ff65:	add    BYTE PTR [rax],al
   14005ff67:	add    al,ch
   14005ff69:	add    eax,DWORD PTR [rax+rax*2]
   14005ff6c:	add    DWORD PTR [rax],eax
   14005ff6e:	add    BYTE PTR [rax],al
   14005ff70:	fadd   DWORD PTR [rbx]
   14005ff72:	add    al,0x40
   14005ff74:	add    DWORD PTR [rax],eax
	...
   14006000e:	add    BYTE PTR [rax],al
   140060010:	adc    ecx,DWORD PTR [rax]
   140060012:	add    BYTE PTR [rax],al
   140060014:	(bad)  
   140060015:	(bad)  
   140060016:	(bad)  
   140060017:	call   rbp
	...
   140060025:	add    BYTE PTR [rax],al
   140060027:	add    al,cl
   140060029:	add    eax,DWORD PTR [rax+rax*2]
   14006002c:	add    DWORD PTR [rax],eax
   14006002e:	add    BYTE PTR [rax],al
   140060030:	mov    eax,0x1400403
	...
   1400600cd:	add    BYTE PTR [rax],al
   1400600cf:	add    BYTE PTR [rax+rcx*1],dl
   1400600d2:	add    BYTE PTR [rax],al
   1400600d4:	(bad)  
   1400600d5:	(bad)  
   1400600d6:	(bad)  
   1400600d7:	call   rsi
	...
   1400600e5:	add    BYTE PTR [rax],al
   1400600e7:	add    BYTE PTR [rax+0x1400403],ch
   1400600ed:	add    BYTE PTR [rax],al
   1400600ef:	add    BYTE PTR [rax+0x1400403],bl
	...
   14006018d:	add    BYTE PTR [rax],al
   14006018f:	add    BYTE PTR [rip+0xffffffffff000008],dl        # 0x13f06019d
   140060195:	(bad)  
   140060196:	(bad)  
   140060197:	call   rdi
	...
   1400601a5:	add    BYTE PTR [rax],al
   1400601a7:	add    BYTE PTR [rax+0x1400403],cl
   1400601ad:	add    BYTE PTR [rax],al
   1400601af:	add    BYTE PTR [rax+0x3],bh
   1400601b2:	add    al,0x40
   1400601b4:	add    DWORD PTR [rax],eax
	...
   14006024e:	add    BYTE PTR [rax],al
   140060250:	(bad)  
   140060251:	or     BYTE PTR [rax],al
   140060253:	add    bh,bh
   140060255:	(bad)  
   140060256:	(bad)  
   140060257:	(bad)  
   140060258:	fadd   DWORD PTR [rax]
	...
   140060266:	add    BYTE PTR [rax],al
   140060268:	push   0x1400403
   14006026d:	add    BYTE PTR [rax],al
   14006026f:	add    BYTE PTR [rax+0x3],bl
   140060272:	add    al,0x40
   140060274:	add    DWORD PTR [rax],eax
	...
   14006030e:	add    BYTE PTR [rax],al
   140060310:	(bad)  
   140060311:	or     BYTE PTR [rax],al
   140060313:	add    bh,bh
   140060315:	(bad)  
   140060316:	(bad)  
   140060317:	(bad)  
   140060318:	fld    DWORD PTR [rax]
	...
   140060326:	add    BYTE PTR [rax],al
   140060328:	add    rax,QWORD PTR [rax+rax*2]
   14006032c:	add    DWORD PTR [rax],eax
   14006032e:	add    BYTE PTR [rax],al
   140060330:	cmp    BYTE PTR [rbx],al
   140060332:	add    al,0x40
   140060334:	add    DWORD PTR [rax],eax
	...
   1400603ce:	add    BYTE PTR [rax],al
   1400603d0:	sbb    BYTE PTR [rax],cl
   1400603d2:	add    BYTE PTR [rax],al
   1400603d4:	(bad)  
   1400603d5:	(bad)  
   1400603d6:	(bad)  
   1400603d7:	(bad)  
   1400603d8:	fiadd  DWORD PTR [rax]
	...
   1400603e6:	add    BYTE PTR [rax],al
   1400603e8:	sub    BYTE PTR [rbx],al
   1400603ea:	add    al,0x40
   1400603ec:	add    DWORD PTR [rax],eax
   1400603ee:	add    BYTE PTR [rax],al
   1400603f0:	sbb    BYTE PTR [rbx],al
   1400603f2:	add    al,0x40
   1400603f4:	add    DWORD PTR [rax],eax
	...
   14006048e:	add    BYTE PTR [rax],al
   140060490:	sbb    DWORD PTR [rax],ecx
   140060492:	add    BYTE PTR [rax],al
   140060494:	(bad)  
   140060495:	(bad)  
   140060496:	(bad)  
   140060497:	(bad)  
   140060498:	fild   DWORD PTR [rax]
	...
   1400604a6:	add    BYTE PTR [rax],al
   1400604a8:	or     BYTE PTR [rbx],al
   1400604aa:	add    al,0x40
   1400604ac:	add    DWORD PTR [rax],eax
   1400604ae:	add    BYTE PTR [rax],al
   1400604b0:	clc    
   1400604b1:	add    al,BYTE PTR [rax+rax*2]
   1400604b4:	add    DWORD PTR [rax],eax
	...
   14006054e:	add    BYTE PTR [rax],al
   140060550:	sbb    cl,BYTE PTR [rax]
   140060552:	add    BYTE PTR [rax],al
   140060554:	(bad)  
   140060555:	(bad)  
   140060556:	(bad)  
   140060557:	(bad)  
   140060558:	fadd   QWORD PTR [rax]
	...
   140060566:	add    BYTE PTR [rax],al
   140060568:	call   0x14146096f
   14006056d:	add    BYTE PTR [rax],al
   14006056f:	add    al,bl
   140060571:	add    al,BYTE PTR [rax+rax*2]
   140060574:	add    DWORD PTR [rax],eax
	...
   14006060e:	add    BYTE PTR [rax],al
   140060610:	sbb    ecx,DWORD PTR [rax]
   140060612:	add    BYTE PTR [rax],al
   140060614:	(bad)  
   140060615:	(bad)  
   140060616:	(bad)  
   140060617:	(bad)  
   140060618:	fld    QWORD PTR [rax]
	...
   140060626:	add    BYTE PTR [rax],al
   140060628:	enter  0x402,0x40
   14006062c:	add    DWORD PTR [rax],eax
   14006062e:	add    BYTE PTR [rax],al
   140060630:	mov    eax,0x1400402
	...
   1400606cd:	add    BYTE PTR [rax],al
   1400606cf:	add    BYTE PTR [rax+rcx*1],bl
   1400606d2:	add    BYTE PTR [rax],al
   1400606d4:	(bad)  
   1400606d5:	(bad)  
   1400606d6:	(bad)  
   1400606d7:	(bad)  
   1400606d8:	fiadd  WORD PTR [rax]
	...
   1400606e6:	add    BYTE PTR [rax],al
   1400606e8:	test   al,0x2
   1400606ea:	add    al,0x40
   1400606ec:	add    DWORD PTR [rax],eax
   1400606ee:	add    BYTE PTR [rax],al
   1400606f0:	cwde   
   1400606f1:	add    al,BYTE PTR [rax+rax*2]
   1400606f4:	add    DWORD PTR [rax],eax
	...
   14006078e:	add    BYTE PTR [rax],al
   140060790:	sbb    eax,0xff000008
   140060795:	(bad)  
   140060796:	(bad)  
   140060797:	(bad)  
   140060798:	fild   WORD PTR [rax]
	...
   1400607a6:	add    BYTE PTR [rax],al
   1400607a8:	mov    BYTE PTR [rdx],al
   1400607aa:	add    al,0x40
   1400607ac:	add    DWORD PTR [rax],eax
   1400607ae:	add    BYTE PTR [rax],al
   1400607b0:	js     0x1400607b4
   1400607b2:	add    al,0x40
   1400607b4:	add    DWORD PTR [rax],eax
	...
   14006084e:	add    BYTE PTR [rax],al
   140060850:	(bad)  
   140060851:	or     BYTE PTR [rax],al
   140060853:	add    bh,bh
   140060855:	(bad)  
   140060856:	(bad)  
   140060857:	jmp    rax
	...
   140060865:	add    BYTE PTR [rax],al
   140060867:	add    BYTE PTR [rax+0x2],ch
   14006086a:	add    al,0x40
   14006086c:	add    DWORD PTR [rax],eax
   14006086e:	add    BYTE PTR [rax],al
   140060870:	pop    rax
   140060871:	add    al,BYTE PTR [rax+rax*2]
   140060874:	add    DWORD PTR [rax],eax
	...
   14006090e:	add    BYTE PTR [rax],al
   140060910:	(bad)  
   140060911:	or     BYTE PTR [rax],al
   140060913:	add    bh,bh
   140060915:	(bad)  
   140060916:	(bad)  
   140060917:	jmp    rcx
	...
   140060925:	add    BYTE PTR [rax],al
   140060927:	add    BYTE PTR [rax+0x2],cl
   14006092a:	add    al,0x40
   14006092c:	add    DWORD PTR [rax],eax
   14006092e:	add    BYTE PTR [rax],al
   140060930:	cmp    BYTE PTR [rdx],al
   140060932:	add    al,0x40
   140060934:	add    DWORD PTR [rax],eax
	...
   1400609ce:	add    BYTE PTR [rax],al
   1400609d0:	and    BYTE PTR [rax],cl
   1400609d2:	add    BYTE PTR [rax],al
   1400609d4:	(bad)  
   1400609d5:	(bad)  
   1400609d6:	(bad)  
   1400609d7:	jmp    rdx
	...
   1400609e5:	add    BYTE PTR [rax],al
   1400609e7:	add    BYTE PTR [rax],ch
   1400609e9:	add    al,BYTE PTR [rax+rax*2]
   1400609ec:	add    DWORD PTR [rax],eax
   1400609ee:	add    BYTE PTR [rax],al
   1400609f0:	sbb    BYTE PTR [rdx],al
   1400609f2:	add    al,0x40
   1400609f4:	add    DWORD PTR [rax],eax
	...
   140060a8e:	add    BYTE PTR [rax],al
   140060a90:	and    DWORD PTR [rax],ecx
   140060a92:	add    BYTE PTR [rax],al
   140060a94:	(bad)  
   140060a95:	(bad)  
   140060a96:	(bad)  
   140060a97:	jmp    rbx
	...
   140060aa5:	add    BYTE PTR [rax],al
   140060aa7:	add    BYTE PTR [rdx+rax*1],cl
   140060aaa:	add    al,0x40
   140060aac:	add    DWORD PTR [rax],eax
   140060aae:	add    BYTE PTR [rax],al
   140060ab0:	add    al,0x2
   140060ab2:	add    al,0x40
   140060ab4:	add    DWORD PTR [rax],eax
	...
   140060b4e:	add    BYTE PTR [rax],al
   140060b50:	and    cl,BYTE PTR [rax]
   140060b52:	add    BYTE PTR [rax],al
   140060b54:	(bad)  
   140060b55:	(bad)  
   140060b56:	(bad)  
   140060b57:	jmp    rsp
	...
   140060b65:	add    BYTE PTR [rax],al
   140060b67:	add    ah,bh
   140060b69:	add    DWORD PTR [rax+rax*2],eax
   140060b6c:	add    DWORD PTR [rax],eax
   140060b6e:	add    BYTE PTR [rax],al
   140060b70:	lock add DWORD PTR [rax+rax*2],eax
   140060b74:	add    DWORD PTR [rax],eax
	...
   140060c0e:	add    BYTE PTR [rax],al
   140060c10:	and    ecx,DWORD PTR [rax]
   140060c12:	add    BYTE PTR [rax],al
   140060c14:	(bad)  
   140060c15:	(bad)  
   140060c16:	(bad)  
   140060c17:	jmp    rbp
	...
   140060c25:	add    BYTE PTR [rax],al
   140060c27:	add    al,ch
   140060c29:	add    DWORD PTR [rax+rax*2],eax
   140060c2c:	add    DWORD PTR [rax],eax
   140060c2e:	add    BYTE PTR [rax],al
   140060c30:	loopne 0x140060c33
   140060c32:	add    al,0x40
   140060c34:	add    DWORD PTR [rax],eax
	...
   140060cce:	add    BYTE PTR [rax],al
   140060cd0:	and    al,0x8
   140060cd2:	add    BYTE PTR [rax],al
   140060cd4:	(bad)  
   140060cd5:	push   rcx
   140060cd6:	add    BYTE PTR [rax],al
   140060cd8:	out    0x0,al
	...
   140060ce6:	add    BYTE PTR [rax],al
   140060ce8:	fadd   DWORD PTR [rcx]
   140060cea:	add    al,0x40
   140060cec:	add    DWORD PTR [rax],eax
   140060cee:	add    BYTE PTR [rax],al
   140060cf0:	rol    BYTE PTR [rcx],1
   140060cf2:	add    al,0x40
   140060cf4:	add    DWORD PTR [rax],eax
   140060cf6:	add    BYTE PTR [rax],al
   140060cf8:	enter  0x401,0x40
   140060cfc:	add    DWORD PTR [rax],eax
   140060cfe:	add    BYTE PTR [rax],al
   140060d00:	rol    BYTE PTR [rcx],0x4
   140060d03:	rex add DWORD PTR [rax],eax
   140060d06:	add    BYTE PTR [rax],al
   140060d08:	mov    eax,0x1400401
   140060d0d:	add    BYTE PTR [rax],al
   140060d0f:	add    BYTE PTR [rax+0x1400401],ah
	...
   140060d8d:	add    BYTE PTR [rax],al
   140060d8f:	add    BYTE PTR [rip+0xffffffffc8000008],ah        # 0x108060d9d
   140060d95:	(bad)  
   140060d96:	add    BYTE PTR [rax],al
   140060d98:	out    0x0,eax
   140060d9a:	add    BYTE PTR [rax],al
   140060d9c:	add    DWORD PTR [rax],eax
	...
   140060da6:	add    BYTE PTR [rax],al
   140060da8:	nop
   140060da9:	add    DWORD PTR [rax+rax*2],eax
   140060dac:	add    DWORD PTR [rax],eax
   140060dae:	add    BYTE PTR [rax],al
   140060db0:	mov    BYTE PTR [rcx],al
   140060db2:	add    al,0x40
   140060db4:	add    DWORD PTR [rax],eax
	...
   140060e4e:	add    BYTE PTR [rax],al
   140060e50:	or     BYTE PTR es:[rax],al
   140060e53:	add    BYTE PTR [rdx+0x3],ah
   140060e56:	add    BYTE PTR [rax],al
   140060e58:	call   0x141060e5d
	...
   140060e65:	add    BYTE PTR [rax],al
   140060e67:	add    BYTE PTR [rax+0x1400401],al
   140060e6d:	add    BYTE PTR [rax],al
   140060e6f:	add    BYTE PTR [rax+0x1],bh
   140060e72:	add    al,0x40
   140060e74:	add    DWORD PTR [rax],eax
   140060e76:	add    BYTE PTR [rax],al
   140060e78:	je     0x140060e7b
   140060e7a:	add    al,0x40
   140060e7c:	add    DWORD PTR [rax],eax
   140060e7e:	add    BYTE PTR [rax],al
   140060e80:	push   0x1400401
   140060e85:	add    BYTE PTR [rax],al
   140060e87:	add    BYTE PTR [rax+0x1],dl
   140060e8a:	add    al,0x40
   140060e8c:	add    DWORD PTR [rax],eax
	...
   140060f0e:	add    BYTE PTR [rax],al
   140060f10:	(bad)  
   140060f11:	or     BYTE PTR [rax],al
   140060f13:	add    BYTE PTR [rdi],al
   140060f15:	add    eax,DWORD PTR [rax]
   140060f17:	add    cl,ch
   140060f19:	add    BYTE PTR [rax],al
   140060f1b:	add    BYTE PTR [rcx],al
	...
   140060f25:	add    BYTE PTR [rax],al
   140060f27:	add    BYTE PTR [rax+0x1],cl
   140060f2a:	add    al,0x40
   140060f2c:	add    DWORD PTR [rax],eax
   140060f2e:	add    BYTE PTR [rax],al
   140060f30:	rex add DWORD PTR [rax+rax*2],eax
   140060f34:	add    DWORD PTR [rax],eax
   140060f36:	add    BYTE PTR [rax],al
   140060f38:	xor    BYTE PTR [rcx],al
   140060f3a:	add    al,0x40
   140060f3c:	add    DWORD PTR [rax],eax
   140060f3e:	add    BYTE PTR [rax],al
   140060f40:	sbb    BYTE PTR [rcx],al
   140060f42:	add    al,0x40
   140060f44:	add    DWORD PTR [rax],eax
   140060f46:	add    BYTE PTR [rax],al
   140060f48:	adc    al,0x1
   140060f4a:	add    al,0x40
   140060f4c:	add    DWORD PTR [rax],eax
	...
   140060fce:	add    BYTE PTR [rax],al
   140060fd0:	sub    BYTE PTR [rax],cl
   140060fd2:	add    BYTE PTR [rax],al
   140060fd4:	push   0x55
   140060fd6:	add    BYTE PTR [rax],al
   140060fd8:	(bad)  
	...
   140060fe5:	add    BYTE PTR [rax],al
   140060fe7:	add    BYTE PTR [rcx+rax*1],cl
   140060fea:	add    al,0x40
   140060fec:	add    DWORD PTR [rax],eax
   140060fee:	add    BYTE PTR [rax],al
   140060ff0:	add    BYTE PTR [rcx],al
   140060ff2:	add    al,0x40
   140060ff4:	add    DWORD PTR [rax],eax
   140060ff6:	add    BYTE PTR [rax],al
   140060ff8:	call   0x1414613fd
	...
   14006108d:	add    BYTE PTR [rax],al
   14006108f:	add    BYTE PTR [rcx],ch
   140061091:	or     BYTE PTR [rax],al
   140061093:	add    BYTE PTR [rdx+0x3],bl
   140061096:	add    BYTE PTR [rax],al
   140061098:	jmp    0x14006109a
   14006109a:	add    BYTE PTR [rax],al
   14006109c:	add    DWORD PTR [rax],eax
	...
   1400610a6:	add    BYTE PTR [rax],al
   1400610a8:	fadd   DWORD PTR [rax]
   1400610aa:	add    al,0x40
   1400610ac:	add    DWORD PTR [rax],eax
   1400610ae:	add    BYTE PTR [rax],al
   1400610b0:	enter  0x400,0x40
   1400610b4:	add    DWORD PTR [rax],eax
   1400610b6:	add    BYTE PTR [rax],al
   1400610b8:	rol    BYTE PTR [rax],0x4
   1400610bb:	rex add DWORD PTR [rax],eax
   1400610be:	add    BYTE PTR [rax],al
   1400610c0:	movabs al,ds:0x9800000001400400
   1400610c9:	add    BYTE PTR [rax+rax*2],al
   1400610cc:	add    DWORD PTR [rax],eax
   1400610ce:	add    BYTE PTR [rax],al
   1400610d0:	mov    WORD PTR [rax],es
   1400610d2:	add    al,0x40
   1400610d4:	add    DWORD PTR [rax],eax
   1400610d6:	add    BYTE PTR [rax],al
   1400610d8:	js     0x1400610da
   1400610da:	add    al,0x40
   1400610dc:	add    DWORD PTR [rax],eax
	...
   14006114e:	add    BYTE PTR [rax],al
   140061150:	sub    cl,BYTE PTR [rax]
   140061152:	add    BYTE PTR [rax],al
   140061154:	mov    esp,0xec000051
	...
   140061165:	add    BYTE PTR [rax],al
   140061167:	add    BYTE PTR [rax+0x0],ch
   14006116a:	add    al,0x40
   14006116c:	add    DWORD PTR [rax],eax
   14006116e:	add    BYTE PTR [rax],al
   140061170:	pop    rax
   140061171:	add    BYTE PTR [rax+rax*2],al
   140061174:	add    DWORD PTR [rax],eax
   140061176:	add    BYTE PTR [rax],al
   140061178:	push   rax
   140061179:	add    BYTE PTR [rax+rax*2],al
   14006117c:	add    DWORD PTR [rax],eax
   14006117e:	add    BYTE PTR [rax],al
   140061180:	cmp    BYTE PTR [rax],al
   140061182:	add    al,0x40
   140061184:	add    DWORD PTR [rax],eax
	...
   14006120e:	add    BYTE PTR [rax],al
   140061210:	sub    ecx,DWORD PTR [rax]
   140061212:	add    BYTE PTR [rax],al
   140061214:	je     0x14006121a
   140061216:	add    BYTE PTR [rax],al
   140061218:	in     eax,dx
	...
   140061225:	add    BYTE PTR [rax],al
   140061227:	add    BYTE PTR [rax],ch
   140061229:	add    BYTE PTR [rax+rax*2],al
   14006122c:	add    DWORD PTR [rax],eax
   14006122e:	add    BYTE PTR [rax],al
   140061230:	sbb    BYTE PTR [rax],al
   140061232:	add    al,0x40
   140061234:	add    DWORD PTR [rax],eax
   140061236:	add    BYTE PTR [rax],al
   140061238:	adc    BYTE PTR [rax],al
   14006123a:	add    al,0x40
   14006123c:	add    DWORD PTR [rax],eax
   14006123e:	add    BYTE PTR [rax],al
   140061240:	clc    
   140061241:	inc    DWORD PTR [rbx]
   140061243:	rex add DWORD PTR [rax],eax
   140061246:	add    BYTE PTR [rax],al
   140061248:	call   0x14146164c
   14006124d:	add    BYTE PTR [rax],al
   14006124f:	add    ah,bl
   140061251:	inc    DWORD PTR [rbx]
   140061253:	rex add DWORD PTR [rax],eax
   140061256:	add    BYTE PTR [rax],al
   140061258:	enter  0x3ff,0x40
   14006125c:	add    DWORD PTR [rax],eax
	...
   1400612ce:	add    BYTE PTR [rax],al
   1400612d0:	sub    al,0x8
   1400612d2:	add    BYTE PTR [rax],al
   1400612d4:	jne    0x1400612da
   1400612d6:	add    BYTE PTR [rax],al
   1400612d8:	out    dx,al
	...
   1400612e5:	add    BYTE PTR [rax],al
   1400612e7:	add    BYTE PTR [rax+0x14003ff],bh
   1400612ed:	add    BYTE PTR [rax],al
   1400612ef:	add    BYTE PTR [rax+0x14003ff],ch
   1400612f5:	add    BYTE PTR [rax],al
   1400612f7:	add    BYTE PTR [rax+0x14003ff],ah
   1400612fd:	add    BYTE PTR [rax],al
   1400612ff:	add    BYTE PTR [rax+0x14003ff],cl
   140061305:	add    BYTE PTR [rax],al
   140061307:	add    BYTE PTR [rax-0x1],bh
   14006130a:	add    eax,DWORD PTR [rax+0x1]
   14006130d:	add    BYTE PTR [rax],al
   14006130f:	add    BYTE PTR [rdi+rdi*8+0x3],ch
   140061313:	rex add DWORD PTR [rax],eax
   140061316:	add    BYTE PTR [rax],al
   140061318:	pop    rax
   140061319:	inc    DWORD PTR [rbx]
   14006131b:	rex add DWORD PTR [rax],eax
	...
   14006138e:	add    BYTE PTR [rax],al
   140061390:	sub    eax,0x76000008
   140061395:	add    al,0x0
   140061397:	add    bh,ch
	...
   1400613a5:	add    BYTE PTR [rax],al
   1400613a7:	add    BYTE PTR [rax-0x1],cl
   1400613aa:	add    eax,DWORD PTR [rax+0x1]
   1400613ad:	add    BYTE PTR [rax],al
   1400613af:	add    BYTE PTR [rax],bh
   1400613b1:	inc    DWORD PTR [rbx]
   1400613b3:	rex add DWORD PTR [rax],eax
   1400613b6:	add    BYTE PTR [rax],al
   1400613b8:	xor    bh,bh
   1400613ba:	add    eax,DWORD PTR [rax+0x1]
   1400613bd:	add    BYTE PTR [rax],al
   1400613bf:	add    BYTE PTR [rax],bl
   1400613c1:	inc    DWORD PTR [rbx]
   1400613c3:	rex add DWORD PTR [rax],eax
   1400613c6:	add    BYTE PTR [rax],al
   1400613c8:	add    bh,bh
   1400613ca:	add    eax,DWORD PTR [rax+0x1]
   1400613cd:	add    BYTE PTR [rax],al
   1400613cf:	add    al,dh
   1400613d1:	inc    BYTE PTR [rbx]
   1400613d3:	rex add DWORD PTR [rax],eax
   1400613d6:	add    BYTE PTR [rax],al
   1400613d8:	in     al,0xfe
   1400613da:	add    eax,DWORD PTR [rax+0x1]
   1400613dd:	add    BYTE PTR [rax],al
   1400613df:	add    al,dl
   1400613e1:	inc    BYTE PTR [rbx]
   1400613e3:	rex add DWORD PTR [rax],eax
	...
   14006144e:	add    BYTE PTR [rax],al
   140061450:	or     BYTE PTR cs:[rax],al
   140061453:	add    BYTE PTR [rdi+0x4],dh
   140061456:	add    BYTE PTR [rax],al
   140061458:	lock add BYTE PTR [rax],al
	...
   140061467:	add    al,al
   140061469:	inc    BYTE PTR [rbx]
   14006146b:	rex add DWORD PTR [rax],eax
   14006146e:	add    BYTE PTR [rax],al
   140061470:	mov    al,0xfe
   140061472:	add    eax,DWORD PTR [rax+0x1]
   140061475:	add    BYTE PTR [rax],al
   140061477:	add    BYTE PTR [rax+0x14003fe],ch
   14006147d:	add    BYTE PTR [rax],al
   14006147f:	add    BYTE PTR [rax+0x14003fe],dl
   140061485:	add    BYTE PTR [rax],al
   140061487:	add    BYTE PTR [rax-0x2],bh
   14006148a:	add    eax,DWORD PTR [rax+0x1]
   14006148d:	add    BYTE PTR [rax],al
   14006148f:	add    BYTE PTR [rax-0x2],ch
   140061492:	add    eax,DWORD PTR [rax+0x1]
   140061495:	add    BYTE PTR [rax],al
   140061497:	add    BYTE PTR [rsi+rdi*8+0x3],bl
   14006149b:	rex add DWORD PTR [rax],eax
   14006149e:	add    BYTE PTR [rax],al
   1400614a0:	rex.W inc BYTE PTR [rbx]
   1400614a3:	rex add DWORD PTR [rax],eax
	...
   14006150e:	add    BYTE PTR [rax],al
   140061510:	(bad)  
   140061511:	or     BYTE PTR [rax],al
   140061513:	add    BYTE PTR [rax+0x4],bh
   140061516:	add    BYTE PTR [rax],al
   140061518:	icebp  
	...
   140061525:	add    BYTE PTR [rax],al
   140061527:	add    BYTE PTR [rax],bh
   140061529:	inc    BYTE PTR [rbx]
   14006152b:	rex add DWORD PTR [rax],eax
   14006152e:	add    BYTE PTR [rax],al
   140061530:	sub    dh,bh
   140061532:	add    eax,DWORD PTR [rax+0x1]
   140061535:	add    BYTE PTR [rax],al
   140061537:	add    BYTE PTR [rax],ah
   140061539:	inc    BYTE PTR [rbx]
   14006153b:	rex add DWORD PTR [rax],eax
   14006153e:	add    BYTE PTR [rax],al
   140061540:	or     dh,bh
   140061542:	add    eax,DWORD PTR [rax+0x1]
   140061545:	add    BYTE PTR [rax],al
   140061547:	add    al,bh
   140061549:	std    
   14006154a:	add    eax,DWORD PTR [rax+0x1]
   14006154d:	add    BYTE PTR [rax],al
   14006154f:	add    ah,ch
   140061551:	std    
   140061552:	add    eax,DWORD PTR [rax+0x1]
   140061555:	add    BYTE PTR [rax],al
   140061557:	add    al,bl
   140061559:	std    
   14006155a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400615cd:	add    BYTE PTR [rax],al
   1400615cf:	add    BYTE PTR [rax],dh
   1400615d1:	or     BYTE PTR [rax],al
   1400615d3:	add    BYTE PTR [rcx+0x4],bh
   1400615d6:	add    BYTE PTR [rax],al
   1400615d8:	repnz add BYTE PTR [rax],al
	...
   1400615e7:	add    al,cl
   1400615e9:	std    
   1400615ea:	add    eax,DWORD PTR [rax+0x1]
   1400615ed:	add    BYTE PTR [rax],al
   1400615ef:	add    BYTE PTR [rax+0x14003fd],bh
   1400615f5:	add    BYTE PTR [rax],al
   1400615f7:	add    BYTE PTR [rax+0x14003fd],dh
   1400615fd:	add    BYTE PTR [rax],al
   1400615ff:	add    BYTE PTR [rax+0x14003fd],bl
   140061605:	add    BYTE PTR [rax],al
   140061607:	add    BYTE PTR [rax+0x14003fd],cl
   14006160d:	add    BYTE PTR [rax],al
   14006160f:	add    BYTE PTR [rbp+rdi*8+0x3],bh
   140061613:	rex add DWORD PTR [rax],eax
   140061616:	add    BYTE PTR [rax],al
   140061618:	push   0x14003fd
	...
   14006168d:	add    BYTE PTR [rax],al
   14006168f:	add    BYTE PTR [rcx],dh
   140061691:	or     BYTE PTR [rax],al
   140061693:	add    BYTE PTR [rdx+0x4],bh
   140061696:	add    BYTE PTR [rax],al
   140061698:	repz add BYTE PTR [rax],al
	...
   1400616a7:	add    BYTE PTR [rax-0x3],bl
   1400616aa:	add    eax,DWORD PTR [rax+0x1]
   1400616ad:	add    BYTE PTR [rax],al
   1400616af:	add    BYTE PTR [rax-0x3],cl
   1400616b2:	add    eax,DWORD PTR [rax+0x1]
   1400616b5:	add    BYTE PTR [rax],al
   1400616b7:	add    BYTE PTR [rax-0x3],al
   1400616ba:	add    eax,DWORD PTR [rax+0x1]
   1400616bd:	add    BYTE PTR [rax],al
   1400616bf:	add    BYTE PTR [rax],ch
   1400616c1:	std    
   1400616c2:	add    eax,DWORD PTR [rax+0x1]
   1400616c5:	add    BYTE PTR [rax],al
   1400616c7:	add    BYTE PTR [rax],bl
   1400616c9:	std    
   1400616ca:	add    eax,DWORD PTR [rax+0x1]
   1400616cd:	add    BYTE PTR [rax],al
   1400616cf:	add    BYTE PTR [rdi*8+0x14003],cl
   1400616d6:	add    BYTE PTR [rax],al
   1400616d8:	clc    
   1400616d9:	cld    
   1400616da:	add    eax,DWORD PTR [rax+0x1]
	...
   14006174d:	add    BYTE PTR [rax],al
   14006174f:	add    BYTE PTR [rdx],dh
   140061751:	or     BYTE PTR [rax],al
   140061753:	add    BYTE PTR [rbx+0x4],bh
   140061756:	add    BYTE PTR [rax],al
   140061758:	hlt    
	...
   140061765:	add    BYTE PTR [rax],al
   140061767:	add    al,ch
   140061769:	cld    
   14006176a:	add    eax,DWORD PTR [rax+0x1]
   14006176d:	add    BYTE PTR [rax],al
   14006176f:	add    al,bl
   140061771:	cld    
   140061772:	add    eax,DWORD PTR [rax+0x1]
   140061775:	add    BYTE PTR [rax],al
   140061777:	add    al,dl
   140061779:	cld    
   14006177a:	add    eax,DWORD PTR [rax+0x1]
   14006177d:	add    BYTE PTR [rax],al
   14006177f:	add    BYTE PTR [rax+0x14003fc],bh
   140061785:	add    BYTE PTR [rax],al
   140061787:	add    BYTE PTR [rax+0x14003fc],ch
   14006178d:	add    BYTE PTR [rax],al
   14006178f:	add    BYTE PTR [rsp+rdi*8+0x14003],bl
   140061796:	add    BYTE PTR [rax],al
   140061798:	mov    ah,bh
   14006179a:	add    eax,DWORD PTR [rax+0x1]
	...
   14006180d:	add    BYTE PTR [rax],al
   14006180f:	add    BYTE PTR [rbx],dh
   140061811:	or     BYTE PTR [rax],al
   140061813:	add    BYTE PTR [rsp+rax*1+0x0],bh
   140061817:	add    ch,dh
	...
   140061825:	add    BYTE PTR [rax],al
   140061827:	add    BYTE PTR [rax-0x4],bh
   14006182a:	add    eax,DWORD PTR [rax+0x1]
   14006182d:	add    BYTE PTR [rax],al
   14006182f:	add    BYTE PTR [rax-0x4],ch
   140061832:	add    eax,DWORD PTR [rax+0x1]
   140061835:	add    BYTE PTR [rax],al
   140061837:	add    BYTE PTR [rax-0x4],ah
   14006183a:	add    eax,DWORD PTR [rax+0x1]
   14006183d:	add    BYTE PTR [rax],al
   14006183f:	add    BYTE PTR [rax-0x4],al
   140061842:	add    eax,DWORD PTR [rax+0x1]
   140061845:	add    BYTE PTR [rax],al
   140061847:	add    BYTE PTR [rax],dh
   140061849:	cld    
   14006184a:	add    eax,DWORD PTR [rax+0x1]
   14006184d:	add    BYTE PTR [rax],al
   14006184f:	add    BYTE PTR [rsp+rdi*8],ah
   140061852:	add    eax,DWORD PTR [rax+0x1]
   140061855:	add    BYTE PTR [rax],al
   140061857:	add    BYTE PTR [rax],dl
   140061859:	cld    
   14006185a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400618cd:	add    BYTE PTR [rax],al
   1400618cf:	add    BYTE PTR [rax+rcx*1],dh
   1400618d2:	add    BYTE PTR [rax],al
   1400618d4:	jge    0x1400618da
   1400618d6:	add    BYTE PTR [rax],al
   1400618d8:	test   BYTE PTR [rax],0x0
	...
   1400618e7:	add    BYTE PTR [rax],al
   1400618e9:	cld    
   1400618ea:	add    eax,DWORD PTR [rax+0x1]
   1400618ed:	add    BYTE PTR [rax],al
   1400618ef:	add    al,dh
   1400618f1:	sti    
   1400618f2:	add    eax,DWORD PTR [rax+0x1]
   1400618f5:	add    BYTE PTR [rax],al
   1400618f7:	add    al,ch
   1400618f9:	sti    
   1400618fa:	add    eax,DWORD PTR [rax+0x1]
   1400618fd:	add    BYTE PTR [rax],al
   1400618ff:	add    al,dl
   140061901:	sti    
   140061902:	add    eax,DWORD PTR [rax+0x1]
   140061905:	add    BYTE PTR [rax],al
   140061907:	add    al,al
   140061909:	sti    
   14006190a:	add    eax,DWORD PTR [rax+0x1]
   14006190d:	add    BYTE PTR [rax],al
   14006190f:	add    BYTE PTR [rbx+rdi*8+0x14003],dh
   140061916:	add    BYTE PTR [rax],al
   140061918:	movabs al,ds:0x14003fb
	...
   14006198d:	add    BYTE PTR [rax],al
   14006198f:	add    BYTE PTR [rip+0xffffffffff000008],dh        # 0x13f06199d
   140061995:	(bad)  
   140061996:	(bad)  
   140061997:	call   QWORD PTR [rdi]
	...
   1400619a5:	add    BYTE PTR [rax],al
   1400619a7:	add    BYTE PTR [rax+0x14003fb],dl
   1400619ad:	add    BYTE PTR [rax],al
   1400619af:	add    BYTE PTR [rax-0x5],bh
   1400619b2:	add    eax,DWORD PTR [rax+0x1]
   1400619b5:	add    BYTE PTR [rax],al
   1400619b7:	add    BYTE PTR [rax-0x5],ch
   1400619ba:	add    eax,DWORD PTR [rax+0x1]
   1400619bd:	add    BYTE PTR [rax],al
   1400619bf:	add    BYTE PTR [rbx+rdi*8+0x3],bl
   1400619c3:	rex add DWORD PTR [rax],eax
   1400619c6:	add    BYTE PTR [rax],al
   1400619c8:	push   rax
   1400619c9:	sti    
   1400619ca:	add    eax,DWORD PTR [rax+0x1]
	...
   140061a4d:	add    BYTE PTR [rax],al
   140061a4f:	add    BYTE PTR [rip+0xffffffffff000008],dh        # 0x13f061a5d
   140061a55:	(bad)  
   140061a56:	(bad)  
   140061a57:	inc    DWORD PTR [rdx+0x1]
	...
   140061a66:	add    BYTE PTR [rax],al
   140061a68:	cmp    bl,bh
   140061a6a:	add    eax,DWORD PTR [rax+0x1]
   140061a6d:	add    BYTE PTR [rax],al
   140061a6f:	add    BYTE PTR [rax],ch
   140061a71:	sti    
   140061a72:	add    eax,DWORD PTR [rax+0x1]
   140061a75:	add    BYTE PTR [rax],al
   140061a77:	add    BYTE PTR [rax],bl
   140061a79:	sti    
   140061a7a:	add    eax,DWORD PTR [rax+0x1]
   140061a7d:	add    BYTE PTR [rax],al
   140061a7f:	add    BYTE PTR [rax],dl
   140061a81:	sti    
   140061a82:	add    eax,DWORD PTR [rax+0x1]
	...
   140061b0d:	add    BYTE PTR [rax],al
   140061b0f:	add    BYTE PTR [rsi],dh
   140061b11:	or     BYTE PTR [rax],al
   140061b13:	add    BYTE PTR [rdi],dl
   140061b15:	add    al,0x0
   140061b17:	add    bh,dh
	...
   140061b25:	add    BYTE PTR [rax],al
   140061b27:	add    BYTE PTR [rax],cl
   140061b29:	sti    
   140061b2a:	add    eax,DWORD PTR [rax+0x1]
   140061b2d:	add    BYTE PTR [rax],al
   140061b2f:	add    al,bh
   140061b31:	cli    
   140061b32:	add    eax,DWORD PTR [rax+0x1]
   140061b35:	add    BYTE PTR [rax],al
   140061b37:	add    ah,ch
   140061b39:	cli    
   140061b3a:	add    eax,DWORD PTR [rax+0x1]
   140061b3d:	add    BYTE PTR [rax],al
   140061b3f:	add    ah,ah
   140061b41:	cli    
   140061b42:	add    eax,DWORD PTR [rax+0x1]
   140061b45:	add    BYTE PTR [rax],al
   140061b47:	add    al,dl
   140061b49:	cli    
   140061b4a:	add    eax,DWORD PTR [rax+0x1]
	...
   140061bcd:	add    BYTE PTR [rax],al
   140061bcf:	add    BYTE PTR [rdi],dh
   140061bd1:	or     BYTE PTR [rax],al
   140061bd3:	add    bh,bh
   140061bd5:	(bad)  
   140061bd6:	(bad)  
   140061bd7:	(bad)  
   140061bd8:	clc    
	...
   140061be5:	add    BYTE PTR [rax],al
   140061be7:	add    al,cl
   140061be9:	cli    
   140061bea:	add    eax,DWORD PTR [rax+0x1]
   140061bed:	add    BYTE PTR [rax],al
   140061bef:	add    BYTE PTR [rax+0x14003fa],bh
   140061bf5:	add    BYTE PTR [rax],al
   140061bf7:	add    BYTE PTR [rax+0x14003fa],dh
   140061bfd:	add    BYTE PTR [rax],al
   140061bff:	add    BYTE PTR [rax+0x14003fa],ch
   140061c05:	add    BYTE PTR [rax],al
   140061c07:	add    BYTE PTR [rax+0x14003fa],bl
	...
   140061c8d:	add    BYTE PTR [rax],al
   140061c8f:	add    BYTE PTR [rax],bh
   140061c91:	or     BYTE PTR [rax],al
   140061c93:	add    bh,bh
   140061c95:	(bad)  
   140061c96:	(bad)  
   140061c97:	(bad)  
   140061c98:	stc    
	...
   140061ca5:	add    BYTE PTR [rax],al
   140061ca7:	add    BYTE PTR [rax+0x14003fa],cl
   140061cad:	add    BYTE PTR [rax],al
   140061caf:	add    BYTE PTR [rax+0x14003fa],al
   140061cb5:	add    BYTE PTR [rax],al
   140061cb7:	add    BYTE PTR [rax-0x6],dh
   140061cba:	add    eax,DWORD PTR [rax+0x1]
   140061cbd:	add    BYTE PTR [rax],al
   140061cbf:	add    BYTE PTR [rax-0x6],ah
   140061cc2:	add    eax,DWORD PTR [rax+0x1]
	...
   140061d4d:	add    BYTE PTR [rax],al
   140061d4f:	add    BYTE PTR [rcx],bh
   140061d51:	or     BYTE PTR [rax],al
   140061d53:	add    bh,bh
   140061d55:	(bad)  
   140061d56:	(bad)  
   140061d57:	(bad)  
   140061d58:	cli    
	...
   140061d65:	add    BYTE PTR [rax],al
   140061d67:	add    BYTE PTR [rax-0x6],dl
   140061d6a:	add    eax,DWORD PTR [rax+0x1]
	...
   140061e0d:	add    BYTE PTR [rax],al
   140061e0f:	add    BYTE PTR [rdx],bh
   140061e11:	or     BYTE PTR [rax],al
   140061e13:	add    bh,bh
   140061e15:	(bad)  
   140061e16:	(bad)  
   140061e17:	(bad)  
   140061e18:	sti    
	...
   140061e25:	add    BYTE PTR [rax],al
   140061e27:	add    BYTE PTR [rax-0x6],cl
   140061e2a:	add    eax,DWORD PTR [rax+0x1]
   140061e2d:	add    BYTE PTR [rax],al
   140061e2f:	add    BYTE PTR [rax-0x6],al
   140061e32:	add    eax,DWORD PTR [rax+0x1]
	...
   140061ecd:	add    BYTE PTR [rax],al
   140061ecf:	add    BYTE PTR [rbx],bh
   140061ed1:	or     BYTE PTR [rax],al
   140061ed3:	add    bh,bh
   140061ed5:	(bad)  
   140061ed6:	(bad)  
   140061ed7:	(bad)  
   140061ed8:	cld    
	...
   140061ee5:	add    BYTE PTR [rax],al
   140061ee7:	add    BYTE PTR [rax],bh
   140061ee9:	cli    
   140061eea:	add    eax,DWORD PTR [rax+0x1]
   140061eed:	add    BYTE PTR [rax],al
   140061eef:	add    BYTE PTR [rax],dh
   140061ef1:	cli    
   140061ef2:	add    eax,DWORD PTR [rax+0x1]
	...
   140061f8d:	add    BYTE PTR [rax],al
   140061f8f:	add    dl,cl
   140061f91:	or     BYTE PTR [rax],al
   140061f93:	add    dl,ah
   140061f95:	add    al,0x0
   140061f97:	add    BYTE PTR [rcx],ah
   140061f99:	add    BYTE PTR [rax],al
   140061f9b:	add    BYTE PTR [rcx],al
	...
   140061fa5:	add    BYTE PTR [rax],al
   140061fa7:	add    BYTE PTR [rax],ah
   140061fa9:	cli    
   140061faa:	add    eax,DWORD PTR [rax+0x1]
   140061fad:	add    BYTE PTR [rax],al
   140061faf:	add    BYTE PTR [rax],cl
   140061fb1:	cli    
   140061fb2:	add    eax,DWORD PTR [rax+0x1]
   140061fb5:	add    BYTE PTR [rax],al
   140061fb7:	add    al,bh
   140061fb9:	stc    
   140061fba:	add    eax,DWORD PTR [rax+0x1]
   140061fbd:	add    BYTE PTR [rax],al
   140061fbf:	add    ah,ch
   140061fc1:	stc    
   140061fc2:	add    eax,DWORD PTR [rax+0x1]
   140061fc5:	add    BYTE PTR [rax],al
   140061fc7:	add    al,bl
   140061fc9:	stc    
   140061fca:	add    eax,DWORD PTR [rax+0x1]
   140061fcd:	add    BYTE PTR [rax],al
   140061fcf:	add    al,cl
   140061fd1:	stc    
   140061fd2:	add    eax,DWORD PTR [rax+0x1]
	...
   14006204d:	add    BYTE PTR [rax],al
   14006204f:	add    bl,cl
   140062051:	or     BYTE PTR [rax],al
   140062053:	add    bl,ah
   140062055:	add    al,0x0
   140062057:	add    BYTE PTR [rdx],ah
   140062059:	add    BYTE PTR [rax],al
   14006205b:	add    BYTE PTR [rcx],al
	...
   140062065:	add    BYTE PTR [rax],al
   140062067:	add    BYTE PTR [rax+0x14003f9],bh
   14006206d:	add    BYTE PTR [rax],al
   14006206f:	add    BYTE PTR [rax+0x14003f9],ah
   140062075:	add    BYTE PTR [rax],al
   140062077:	add    BYTE PTR [rax+0x14003f9],dl
   14006207d:	add    BYTE PTR [rax],al
   14006207f:	add    BYTE PTR [rcx+rdi*8+0x14003],al
   140062086:	add    BYTE PTR [rax],al
   140062088:	js     0x140062083
   14006208a:	add    eax,DWORD PTR [rax+0x1]
   14006208d:	add    BYTE PTR [rax],al
   14006208f:	add    BYTE PTR [rax-0x7],ah
   140062092:	add    eax,DWORD PTR [rax+0x1]
   140062095:	add    BYTE PTR [rax],al
   140062097:	add    BYTE PTR [rax-0x7],dl
   14006209a:	add    eax,DWORD PTR [rax+0x1]
	...
   14006210d:	add    BYTE PTR [rax],al
   14006210f:	add    ah,cl
   140062111:	or     BYTE PTR [rax],al
   140062113:	add    ah,ah
   140062115:	add    al,0x0
   140062117:	add    BYTE PTR [rbx],ah
   140062119:	add    BYTE PTR [rax],al
   14006211b:	add    BYTE PTR [rcx],al
	...
   140062125:	add    BYTE PTR [rax],al
   140062127:	add    BYTE PTR [rax-0x7],al
   14006212a:	add    eax,DWORD PTR [rax+0x1]
   14006212d:	add    BYTE PTR [rax],al
   14006212f:	add    BYTE PTR [rax],ch
   140062131:	stc    
   140062132:	add    eax,DWORD PTR [rax+0x1]
   140062135:	add    BYTE PTR [rax],al
   140062137:	add    BYTE PTR [rax],bl
   140062139:	stc    
   14006213a:	add    eax,DWORD PTR [rax+0x1]
   14006213d:	add    BYTE PTR [rax],al
   14006213f:	add    BYTE PTR [rcx+rdi*8],cl
   140062142:	add    eax,DWORD PTR [rax+0x1]
   140062145:	add    BYTE PTR [rax],al
   140062147:	add    al,bh
   140062149:	clc    
   14006214a:	add    eax,DWORD PTR [rax+0x1]
   14006214d:	add    BYTE PTR [rax],al
   14006214f:	add    al,ch
   140062151:	clc    
   140062152:	add    eax,DWORD PTR [rax+0x1]
	...
   1400621cd:	add    BYTE PTR [rax],al
   1400621cf:	add    ch,cl
   1400621d1:	or     BYTE PTR [rax],al
   1400621d3:	add    ch,ah
   1400621d5:	add    al,0x0
   1400621d7:	add    BYTE PTR [rax+rax*1],ah
   1400621da:	add    BYTE PTR [rax],al
   1400621dc:	add    DWORD PTR [rax],eax
	...
   1400621e6:	add    BYTE PTR [rax],al
   1400621e8:	fdivr  st,st(0)
   1400621ea:	add    eax,DWORD PTR [rax+0x1]
   1400621ed:	add    BYTE PTR [rax],al
   1400621ef:	add    al,al
   1400621f1:	clc    
   1400621f2:	add    eax,DWORD PTR [rax+0x1]
   1400621f5:	add    BYTE PTR [rax],al
   1400621f7:	add    BYTE PTR [rax+0x14003f8],dh
   1400621fd:	add    BYTE PTR [rax],al
   1400621ff:	add    BYTE PTR [rax+rdi*8+0x14003],ah
   140062206:	add    BYTE PTR [rax],al
   140062208:	cwde   
   140062209:	clc    
   14006220a:	add    eax,DWORD PTR [rax+0x1]
   14006220d:	add    BYTE PTR [rax],al
   14006220f:	add    BYTE PTR [rax+0x14003f8],al
	...
   14006228d:	add    BYTE PTR [rax],al
   14006228f:	add    dh,cl
   140062291:	or     BYTE PTR [rax],al
   140062293:	add    dh,ah
   140062295:	add    al,0x0
   140062297:	add    BYTE PTR [rip+0x1000000],ah        # 0x14106229d
	...
   1400622a5:	add    BYTE PTR [rax],al
   1400622a7:	add    BYTE PTR [rax-0x8],dh
   1400622aa:	add    eax,DWORD PTR [rax+0x1]
   1400622ad:	add    BYTE PTR [rax],al
   1400622af:	add    BYTE PTR [rax-0x8],bl
   1400622b2:	add    eax,DWORD PTR [rax+0x1]
   1400622b5:	add    BYTE PTR [rax],al
   1400622b7:	add    BYTE PTR [rax-0x8],cl
   1400622ba:	add    eax,DWORD PTR [rax+0x1]
   1400622bd:	add    BYTE PTR [rax],al
   1400622bf:	add    BYTE PTR [rax+rdi*8],bh
   1400622c2:	add    eax,DWORD PTR [rax+0x1]
   1400622c5:	add    BYTE PTR [rax],al
   1400622c7:	add    BYTE PTR [rax],dh
   1400622c9:	clc    
   1400622ca:	add    eax,DWORD PTR [rax+0x1]
   1400622cd:	add    BYTE PTR [rax],al
   1400622cf:	add    BYTE PTR [rax],bl
   1400622d1:	clc    
   1400622d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14006234d:	add    BYTE PTR [rax],al
   14006234f:	add    bh,cl
   140062351:	or     BYTE PTR [rax],al
   140062353:	add    bh,ah
   140062355:	add    al,0x0
   140062357:	add    BYTE PTR [rsi],ah
   140062359:	add    BYTE PTR [rax],al
   14006235b:	add    BYTE PTR [rcx],al
	...
   140062365:	add    BYTE PTR [rax],al
   140062367:	add    BYTE PTR [rax],cl
   140062369:	clc    
   14006236a:	add    eax,DWORD PTR [rax+0x1]
   14006236d:	add    BYTE PTR [rax],al
   14006236f:	add    al,dh
   140062371:	test   DWORD PTR [rbx],0x140
   140062377:	add    al,ah
   140062379:	test   DWORD PTR [rbx],0x140
   14006237f:	add    ah,dl
   140062381:	test   DWORD PTR [rbx],0x140
   140062387:	add    al,cl
   140062389:	test   DWORD PTR [rbx],0x140
   14006238f:	add    BYTE PTR [rax+0x14003f7],dh
	...
   14006240d:	add    BYTE PTR [rax],al
   14006240f:	add    al,dl
   140062411:	or     BYTE PTR [rax],al
   140062413:	add    al,ch
   140062415:	add    al,0x0
   140062417:	add    BYTE PTR [rdi],ah
   140062419:	add    BYTE PTR [rax],al
   14006241b:	add    BYTE PTR [rcx],al
	...
   140062425:	add    BYTE PTR [rax],al
   140062427:	add    BYTE PTR [rax+0x14003f7],ah
   14006242d:	add    BYTE PTR [rax],al
   14006242f:	add    BYTE PTR [rax+0x14003f7],cl
   140062435:	add    BYTE PTR [rax],al
   140062437:	add    BYTE PTR [rax-0x9],bh
   14006243a:	add    eax,DWORD PTR [rax+0x1]
   14006243d:	add    BYTE PTR [rax],al
   14006243f:	add    BYTE PTR [rdi+rsi*8+0x3],ch
   140062443:	rex add DWORD PTR [rax],eax
   140062446:	add    BYTE PTR [rax],al
   140062448:	(bad)  
   140062449:	test   DWORD PTR [rbx],0x140
   14006244f:	add    BYTE PTR [rax-0x9],cl
   140062452:	add    eax,DWORD PTR [rax+0x1]
	...
   1400624cd:	add    BYTE PTR [rax],al
   1400624cf:	add    cl,dl
   1400624d1:	or     BYTE PTR [rax],al
   1400624d3:	add    cl,ch
   1400624d5:	add    al,0x0
   1400624d7:	add    BYTE PTR [rax],ch
   1400624d9:	add    BYTE PTR [rax],al
   1400624db:	add    BYTE PTR [rcx],al
	...
   1400624e5:	add    BYTE PTR [rax],al
   1400624e7:	add    BYTE PTR [rax],bh
   1400624e9:	test   DWORD PTR [rbx],0x140
   1400624ef:	add    BYTE PTR [rax],ah
   1400624f1:	test   DWORD PTR [rbx],0x140
   1400624f7:	add    BYTE PTR [rax],dl
   1400624f9:	test   DWORD PTR [rbx],0x140
   1400624ff:	add    BYTE PTR [rdi+rsi*8],al
   140062502:	add    eax,DWORD PTR [rax+0x1]
   140062505:	add    BYTE PTR [rax],al
   140062507:	add    al,bh
   140062509:	test   BYTE PTR [rbx],0x40
   14006250c:	add    DWORD PTR [rax],eax
   14006250e:	add    BYTE PTR [rax],al
   140062510:	loopne 0x140062508
   140062512:	add    eax,DWORD PTR [rax+0x1]
	...
   14006258d:	add    BYTE PTR [rax],al
   14006258f:	add    dl,dl
   140062591:	or     BYTE PTR [rax],al
   140062593:	add    dl,ch
   140062595:	add    al,0x0
   140062597:	add    BYTE PTR [rcx],ch
   140062599:	add    BYTE PTR [rax],al
   14006259b:	add    BYTE PTR [rcx],al
	...
   1400625a5:	add    BYTE PTR [rax],al
   1400625a7:	add    al,dl
   1400625a9:	test   BYTE PTR [rbx],0x40
   1400625ac:	add    DWORD PTR [rax],eax
   1400625ae:	add    BYTE PTR [rax],al
   1400625b0:	mov    eax,0x14003f6
   1400625b5:	add    BYTE PTR [rax],al
   1400625b7:	add    BYTE PTR [rax+0x14003f6],ch
   1400625bd:	add    BYTE PTR [rax],al
   1400625bf:	add    BYTE PTR [rsi+rsi*8+0x14003],bl
   1400625c6:	add    BYTE PTR [rax],al
   1400625c8:	nop
   1400625c9:	test   BYTE PTR [rbx],0x40
   1400625cc:	add    DWORD PTR [rax],eax
   1400625ce:	add    BYTE PTR [rax],al
   1400625d0:	js     0x1400625c8
   1400625d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14006264d:	add    BYTE PTR [rax],al
   14006264f:	add    bl,dl
   140062651:	or     BYTE PTR [rax],al
   140062653:	add    bh,bh
   140062655:	(bad)  
   140062656:	(bad)  
   140062657:	(bad)  
   140062658:	std    
   140062659:	add    BYTE PTR [rax],al
   14006265b:	add    BYTE PTR [rcx],al
	...
   140062665:	add    BYTE PTR [rax],al
   140062667:	add    al,ah
   140062669:	sbb    al,BYTE PTR [rax+rax*2]
   14006266c:	add    DWORD PTR [rax],eax
   14006266e:	add    BYTE PTR [rax],al
   140062670:	(bad)  
   140062671:	test   BYTE PTR [rbx],0x40
   140062674:	add    DWORD PTR [rax],eax
   140062676:	add    BYTE PTR [rax],al
   140062678:	push   rsp
   140062679:	test   BYTE PTR [rbx],0x40
   14006267c:	add    DWORD PTR [rax],eax
	...
   14006270e:	add    BYTE PTR [rax],al
   140062710:	(bad)  
   140062711:	(bad)  
   140062712:	(bad)  
   140062713:	inc    ebp
   140062715:	add    al,BYTE PTR [rax]
   140062717:	add    dh,bh
	...
   140062725:	add    BYTE PTR [rax],al
   140062727:	add    BYTE PTR [rax-0xa],cl
   14006272a:	add    eax,DWORD PTR [rax+0x1]
   14006272d:	add    BYTE PTR [rax],al
   14006272f:	add    BYTE PTR [rax],bh
   140062731:	test   BYTE PTR [rbx],0x40
   140062734:	add    DWORD PTR [rax],eax
   140062736:	add    BYTE PTR [rax],al
   140062738:	xor    dh,dh
   14006273a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400627cd:	add    BYTE PTR [rax],al
   1400627cf:	add    bh,bh
   1400627d1:	(bad)  
   1400627d2:	(bad)  
   1400627d3:	inc    esi
   1400627d5:	add    al,BYTE PTR [rax]
   1400627d7:	add    bh,bh
	...
   1400627e5:	add    BYTE PTR [rax],al
   1400627e7:	add    BYTE PTR [rax],ah
   1400627e9:	test   BYTE PTR [rbx],0x40
   1400627ec:	add    DWORD PTR [rax],eax
	...
   14006288e:	add    BYTE PTR [rax],al
   140062890:	(bad)  
   140062891:	(bad)  
   140062892:	(bad)  
   140062893:	call   rax
   140062895:	add    al,BYTE PTR [rax]
   140062897:	add    BYTE PTR [rax],al
   140062899:	add    DWORD PTR [rax],eax
   14006289b:	add    BYTE PTR [rcx],al
	...
   1400628a5:	add    BYTE PTR [rax],al
   1400628a7:	add    BYTE PTR [rax],dl
   1400628a9:	test   BYTE PTR [rbx],0x40
   1400628ac:	add    DWORD PTR [rax],eax
   1400628ae:	add    BYTE PTR [rax],al
   1400628b0:	or     dh,dh
   1400628b2:	add    eax,DWORD PTR [rax+0x1]
   1400628b5:	add    BYTE PTR [rax],al
   1400628b7:	add    BYTE PTR [rax],al
   1400628b9:	test   BYTE PTR [rbx],0x40
   1400628bc:	add    DWORD PTR [rax],eax
   1400628be:	add    BYTE PTR [rax],al
   1400628c0:	clc    
   1400628c1:	cmc    
   1400628c2:	add    eax,DWORD PTR [rax+0x1]
   1400628c5:	add    BYTE PTR [rax],al
   1400628c7:	add    al,ah
   1400628c9:	cmc    
   1400628ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14006294d:	add    BYTE PTR [rax],al
   14006294f:	add    bh,bh
   140062951:	(bad)  
   140062952:	(bad)  
   140062953:	jmp    rcx
   140062955:	add    al,BYTE PTR [rax]
   140062957:	add    BYTE PTR [rcx],al
   140062959:	add    DWORD PTR [rax],eax
   14006295b:	add    BYTE PTR [rcx],al
	...
   140062965:	add    BYTE PTR [rax],al
   140062967:	add    al,dl
   140062969:	cmc    
   14006296a:	add    eax,DWORD PTR [rax+0x1]
   14006296d:	add    BYTE PTR [rax],al
   14006296f:	add    al,cl
   140062971:	cmc    
   140062972:	add    eax,DWORD PTR [rax+0x1]
   140062975:	add    BYTE PTR [rax],al
   140062977:	add    al,al
   140062979:	cmc    
   14006297a:	add    eax,DWORD PTR [rax+0x1]
   14006297d:	add    BYTE PTR [rax],al
   14006297f:	add    BYTE PTR [rbp+rsi*8+0x14003],bh
   140062986:	add    BYTE PTR [rax],al
   140062988:	test   al,0xf5
   14006298a:	add    eax,DWORD PTR [rax+0x1]
	...
   140062a0d:	add    BYTE PTR [rax],al
   140062a0f:	add    bh,bh
   140062a11:	(bad)  
   140062a12:	(bad)  
   140062a13:	jmp    FWORD PTR [rbx+0x3]
   140062a16:	add    BYTE PTR [rax],al
   140062a18:	add    al,BYTE PTR [rcx]
	...
   140062a26:	add    BYTE PTR [rax],al
   140062a28:	movabs al,ds:0x98000000014003f5
   140062a31:	cmc    
   140062a32:	add    eax,DWORD PTR [rax+0x1]
   140062a35:	add    BYTE PTR [rax],al
   140062a37:	add    BYTE PTR [rax+0x14003f5],dl
   140062a3d:	add    BYTE PTR [rax],al
   140062a3f:	add    BYTE PTR [rbp+rsi*8+0x14003],cl
   140062a46:	add    BYTE PTR [rax],al
   140062a48:	js     0x140062a3f
   140062a4a:	add    eax,DWORD PTR [rax+0x1]
	...
   140062acd:	add    BYTE PTR [rax],al
   140062acf:	add    bh,bh
   140062ad1:	(bad)  
   140062ad2:	(bad)  
   140062ad3:	call   QWORD PTR [rcx+0x5]
   140062ad6:	add    BYTE PTR [rax],al
   140062ad8:	add    eax,DWORD PTR [rcx]
	...
   140062ae6:	add    BYTE PTR [rax],al
   140062ae8:	push   0x14003f5
   140062aed:	add    BYTE PTR [rax],al
   140062aef:	add    BYTE PTR [rax-0xb],ah
   140062af2:	add    eax,DWORD PTR [rax+0x1]
	...
   140062b8d:	add    BYTE PTR [rax],al
   140062b8f:	add    bh,bh
   140062b91:	(bad)  
   140062b92:	(bad)  
   140062b93:	call   QWORD PTR [rax]
   140062b95:	(bad)  
   140062b96:	add    BYTE PTR [rax],al
   140062b98:	add    al,0x1
	...
   140062ba6:	add    BYTE PTR [rax],al
   140062ba8:	push   rax
   140062ba9:	cmc    
   140062baa:	add    eax,DWORD PTR [rax+0x1]
	...
   140062c4d:	add    BYTE PTR [rax],al
   140062c4f:	add    bh,bh
   140062c51:	(bad)  
   140062c52:	(bad)  
   140062c53:	call   QWORD PTR [rcx]
   140062c55:	(bad)  
   140062c56:	add    BYTE PTR [rax],al
   140062c58:	add    eax,0x1
	...
   140062c65:	add    BYTE PTR [rax],al
   140062c67:	add    BYTE PTR [rax-0xb],al
   140062c6a:	add    eax,DWORD PTR [rax+0x1]
   140062c6d:	add    BYTE PTR [rax],al
   140062c6f:	add    BYTE PTR [rax],dh
   140062c71:	cmc    
   140062c72:	add    eax,DWORD PTR [rax+0x1]
	...
   140062d0d:	add    BYTE PTR [rax],al
   140062d0f:	add    bh,bh
   140062d11:	(bad)  
   140062d12:	(bad)  
   140062d13:	call   QWORD PTR [rdx]
   140062d15:	(bad)  
   140062d16:	add    BYTE PTR [rax],al
   140062d18:	(bad)  
   140062d19:	add    DWORD PTR [rax],eax
	...
   140062d27:	add    BYTE PTR [rax],ah
   140062d29:	cmc    
   140062d2a:	add    eax,DWORD PTR [rax+0x1]
   140062d2d:	add    BYTE PTR [rax],al
   140062d2f:	add    BYTE PTR [rax],cl
   140062d31:	cmc    
   140062d32:	add    eax,DWORD PTR [rax+0x1]
	...
   140062dcd:	add    BYTE PTR [rax],al
   140062dcf:	add    bh,bh
   140062dd1:	(bad)  
   140062dd2:	(bad)  
   140062dd3:	call   QWORD PTR [rbx]
   140062dd5:	(bad)  
   140062dd6:	add    BYTE PTR [rax],al
   140062dd8:	(bad)  
   140062dd9:	add    DWORD PTR [rax],eax
	...
   140062de7:	add    al,bh
   140062de9:	hlt    
   140062dea:	add    eax,DWORD PTR [rax+0x1]
   140062ded:	add    BYTE PTR [rax],al
   140062def:	add    al,ch
   140062df1:	hlt    
   140062df2:	add    eax,DWORD PTR [rax+0x1]
	...
   140062e8d:	add    BYTE PTR [rax],al
   140062e8f:	add    bh,bh
   140062e91:	(bad)  
   140062e92:	(bad)  
   140062e93:	call   QWORD PTR [rdi+riz*1]
   140062e96:	add    BYTE PTR [rax],al
   140062e98:	or     BYTE PTR [rcx],al
	...
   140062ea6:	add    BYTE PTR [rax],al
   140062ea8:	fdiv   st,st(4)
   140062eaa:	add    eax,DWORD PTR [rax+0x1]
   140062ead:	add    BYTE PTR [rax],al
   140062eaf:	add    al,cl
   140062eb1:	hlt    
   140062eb2:	add    eax,DWORD PTR [rax+0x1]
	...
   140062f4d:	add    BYTE PTR [rax],al
   140062f4f:	add    bh,bh
   140062f51:	(bad)  
   140062f52:	(bad)  
   140062f53:	call   QWORD PTR [rip+0x9000027]        # 0x149062f80
   140062f59:	add    DWORD PTR [rax],eax
	...
   140062f67:	add    BYTE PTR [rax+0x14003f4],bh
   140062f6d:	add    BYTE PTR [rax],al
   140062f6f:	add    BYTE PTR [rax+0x14003f4],ch
	...
   14006300d:	add    BYTE PTR [rax],al
   14006300f:	add    bh,bh
   140063011:	(bad)  
   140063012:	(bad)  
   140063013:	call   QWORD PTR [rsi]
   140063015:	(bad)  
   140063016:	add    BYTE PTR [rax],al
   140063018:	or     al,BYTE PTR [rcx]
	...
   140063026:	add    BYTE PTR [rax],al
   140063028:	cwde   
   140063029:	hlt    
   14006302a:	add    eax,DWORD PTR [rax+0x1]
   14006302d:	add    BYTE PTR [rax],al
   14006302f:	add    BYTE PTR [rax+0x14003f4],cl
   140063035:	add    BYTE PTR [rax],al
   140063037:	add    BYTE PTR [rax+0x14003f4],al
   14006303d:	add    BYTE PTR [rax],al
   14006303f:	add    BYTE PTR [rax-0xc],dh
   140063042:	add    eax,DWORD PTR [rax+0x1]
	...
   1400630cd:	add    BYTE PTR [rax],al
   1400630cf:	add    bh,bh
   1400630d1:	(bad)  
   1400630d2:	(bad)  
   1400630d3:	call   QWORD PTR [rdi]
   1400630d5:	(bad)  
   1400630d6:	add    BYTE PTR [rax],al
   1400630d8:	or     eax,DWORD PTR [rcx]
	...
   1400630e6:	add    BYTE PTR [rax],al
   1400630e8:	(bad)  
   1400630e9:	hlt    
   1400630ea:	add    eax,DWORD PTR [rax+0x1]
   1400630ed:	add    BYTE PTR [rax],al
   1400630ef:	add    BYTE PTR [rax-0xc],dl
   1400630f2:	add    eax,DWORD PTR [rax+0x1]
   1400630f5:	add    BYTE PTR [rax],al
   1400630f7:	add    BYTE PTR [rax-0xc],cl
   1400630fa:	add    eax,DWORD PTR [rax+0x1]
   1400630fd:	add    BYTE PTR [rax],al
   1400630ff:	add    BYTE PTR [rax],bh
   140063101:	hlt    
   140063102:	add    eax,DWORD PTR [rax+0x1]
   140063105:	add    BYTE PTR [rax],al
   140063107:	add    BYTE PTR [rax],ch
   140063109:	hlt    
   14006310a:	add    eax,DWORD PTR [rax+0x1]
	...
   14006318d:	add    BYTE PTR [rax],al
   14006318f:	add    bh,bh
   140063191:	(bad)  
   140063192:	(bad)  
   140063193:	call   FWORD PTR [rax]
   140063195:	(bad)  
   140063196:	add    BYTE PTR [rax],al
   140063198:	or     al,0x1
	...
   1400631a6:	add    BYTE PTR [rax],al
   1400631a8:	sbb    ah,dh
   1400631aa:	add    eax,DWORD PTR [rax+0x1]
   1400631ad:	add    BYTE PTR [rax],al
   1400631af:	add    BYTE PTR [rax],al
   1400631b1:	hlt    
   1400631b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14006324d:	add    BYTE PTR [rax],al
   14006324f:	add    bh,bh
   140063251:	(bad)  
   140063252:	(bad)  
   140063253:	call   FWORD PTR [rdx]
   140063255:	(bad)  
   140063256:	add    BYTE PTR [rax],al
   140063258:	or     eax,0x1
	...
   140063265:	add    BYTE PTR [rax],al
   140063267:	add    al,dh
   140063269:	repz add eax,DWORD PTR [rax+0x1]
   14006326d:	add    BYTE PTR [rax],al
   14006326f:	add    al,ah
   140063271:	repz add eax,DWORD PTR [rax+0x1]
	...
   14006330d:	add    BYTE PTR [rax],al
   14006330f:	add    bh,bh
   140063311:	(bad)  
   140063312:	(bad)  
   140063313:	jmp    QWORD PTR [rcx]
   140063315:	(bad)  
   140063316:	add    BYTE PTR [rax],al
   140063318:	(bad)  
   140063319:	add    DWORD PTR [rax],eax
	...
   140063327:	add    al,dl
   140063329:	repz add eax,DWORD PTR [rax+0x1]
   14006332d:	add    BYTE PTR [rax],al
   14006332f:	add    al,al
   140063331:	repz add eax,DWORD PTR [rax+0x1]
	...
   1400633cd:	add    BYTE PTR [rax],al
   1400633cf:	add    bh,bh
   1400633d1:	(bad)  
   1400633d2:	(bad)  
   1400633d3:	jmp    QWORD PTR [rip+0xf000027]        # 0x14f063400
   1400633d9:	add    DWORD PTR [rax],eax
	...
   1400633e7:	add    BYTE PTR [rax+0x14003f3],dh
   1400633ed:	add    BYTE PTR [rax],al
   1400633ef:	add    BYTE PTR [rax+0x14003f3],ah
	...
   14006348d:	add    BYTE PTR [rax],al
   14006348f:	add    bh,bh
   140063491:	(bad)  
   140063492:	(bad)  
   140063493:	jmp    FWORD PTR [rip+0x10000027]        # 0x1500634c0
   140063499:	add    DWORD PTR [rax],eax
	...
   1400634a7:	add    BYTE PTR [rax+0x14003f3],dl
   1400634ad:	add    BYTE PTR [rax],al
   1400634af:	add    BYTE PTR [rax+0x14003f3],al
   1400634b5:	add    BYTE PTR [rax],al
   1400634b7:	add    BYTE PTR [rbx+rsi*8+0x3],dh
   1400634bb:	rex add DWORD PTR [rax],eax
   1400634be:	add    BYTE PTR [rax],al
   1400634c0:	(bad)  
   1400634c1:	repz add eax,DWORD PTR [rax+0x1]
   1400634c5:	add    BYTE PTR [rax],al
   1400634c7:	add    BYTE PTR [rax-0xd],cl
   1400634ca:	add    eax,DWORD PTR [rax+0x1]
   1400634cd:	add    BYTE PTR [rax],al
   1400634cf:	add    BYTE PTR [rax],bh
   1400634d1:	repz add eax,DWORD PTR [rax+0x1]
	...
   14006354d:	add    BYTE PTR [rax],al
   14006354f:	add    bh,bh
   140063551:	(bad)  
   140063552:	(bad)  
   140063553:	call   FWORD PTR [rdi+0x27]
   140063556:	add    BYTE PTR [rax],al
   140063558:	adc    DWORD PTR [rcx],eax
	...
   140063566:	add    BYTE PTR [rax],al
   140063568:	sub    bl,dh
   14006356a:	add    eax,DWORD PTR [rax+0x1]
   14006356d:	add    BYTE PTR [rax],al
   14006356f:	add    BYTE PTR [rax],bl
   140063571:	repz add eax,DWORD PTR [rax+0x1]
	...
   14006360d:	add    BYTE PTR [rax],al
   14006360f:	add    bh,bh
   140063611:	(bad)  
   140063612:	(bad)  
   140063613:	jmp    QWORD PTR [rcx+0x27]
   140063616:	add    BYTE PTR [rax],al
   140063618:	adc    al,BYTE PTR [rcx]
	...
   140063626:	add    BYTE PTR [rax],al
   140063628:	or     bl,dh
   14006362a:	add    eax,DWORD PTR [rax+0x1]
   14006362d:	add    BYTE PTR [rax],al
   14006362f:	add    al,bh
   140063631:	repnz add eax,DWORD PTR [rax+0x1]
   140063635:	add    BYTE PTR [rax],al
   140063637:	add    al,dh
   140063639:	repnz add eax,DWORD PTR [rax+0x1]
   14006363d:	add    BYTE PTR [rax],al
   14006363f:	add    al,ah
   140063641:	repnz add eax,DWORD PTR [rax+0x1]
	...
   1400636cd:	add    BYTE PTR [rax],al
   1400636cf:	add    bh,bh
   1400636d1:	(bad)  
   1400636d2:	(bad)  
   1400636d3:	jmp    QWORD PTR [rdx+0x27]
   1400636d6:	add    BYTE PTR [rax],al
   1400636d8:	adc    eax,DWORD PTR [rcx]
	...
   1400636e6:	add    BYTE PTR [rax],al
   1400636e8:	shl    dl,1
   1400636ea:	add    eax,DWORD PTR [rax+0x1]
   1400636ed:	add    BYTE PTR [rax],al
   1400636ef:	add    al,al
   1400636f1:	repnz add eax,DWORD PTR [rax+0x1]
	...
   14006378d:	add    BYTE PTR [rax],al
   14006378f:	add    bh,bh
   140063791:	(bad)  
   140063792:	(bad)  
   140063793:	jmp    QWORD PTR [rax]
   140063795:	rex.WRX add BYTE PTR [rax],r8b
   140063798:	adc    al,0x1
	...
   1400637a6:	add    BYTE PTR [rax],al
   1400637a8:	mov    al,0xf2
   1400637aa:	add    eax,DWORD PTR [rax+0x1]
   1400637ad:	add    BYTE PTR [rax],al
   1400637af:	add    BYTE PTR [rax+0x14003f2],ah
	...
   14006384d:	add    BYTE PTR [rax],al
   14006384f:	add    bh,bh
   140063851:	(bad)  
   140063852:	(bad)  
   140063853:	jmp    QWORD PTR [rcx]
   140063855:	rex.WRX add BYTE PTR [rax],r8b
   140063858:	adc    eax,0x1
	...
   140063865:	add    BYTE PTR [rax],al
   140063867:	add    BYTE PTR [rax+0x14003f2],dl
   14006386d:	add    BYTE PTR [rax],al
   14006386f:	add    BYTE PTR [rax+0x14003f2],al
	...
   14006390d:	add    BYTE PTR [rax],al
   14006390f:	add    bh,bh
   140063911:	(bad)  
   140063912:	(bad)  
   140063913:	jmp    QWORD PTR [rdx]
   140063915:	rex.WRX add BYTE PTR [rax],r8b
   140063918:	(bad)  
   140063919:	add    DWORD PTR [rax],eax
	...
   140063927:	add    BYTE PTR [rax-0xe],dh
   14006392a:	add    eax,DWORD PTR [rax+0x1]
   14006392d:	add    BYTE PTR [rax],al
   14006392f:	add    BYTE PTR [rax-0xe],ah
   140063932:	add    eax,DWORD PTR [rax+0x1]
	...
   1400639cd:	add    BYTE PTR [rax],al
   1400639cf:	add    bh,bh
   1400639d1:	(bad)  
   1400639d2:	(bad)  
   1400639d3:	jmp    QWORD PTR [rbx]
   1400639d5:	rex.WRX add BYTE PTR [rax],r8b
   1400639d8:	(bad)  
   1400639d9:	add    DWORD PTR [rax],eax
	...
   1400639e7:	add    BYTE PTR [rax-0xe],dl
   1400639ea:	add    eax,DWORD PTR [rax+0x1]
   1400639ed:	add    BYTE PTR [rax],al
   1400639ef:	add    BYTE PTR [rax-0xe],al
   1400639f2:	add    eax,DWORD PTR [rax+0x1]
	...
   140063a8d:	add    BYTE PTR [rax],al
   140063a8f:	add    bh,bh
   140063a91:	(bad)  
   140063a92:	(bad)  
   140063a93:	jmp    QWORD PTR [rsi+rcx*2]
   140063a96:	add    BYTE PTR [rax],al
   140063a98:	sbb    BYTE PTR [rcx],al
	...
   140063aa6:	add    BYTE PTR [rax],al
   140063aa8:	xor    dl,dh
   140063aaa:	add    eax,DWORD PTR [rax+0x1]
   140063aad:	add    BYTE PTR [rax],al
   140063aaf:	add    BYTE PTR [rax],ah
   140063ab1:	repnz add eax,DWORD PTR [rax+0x1]
	...
   140063b4d:	add    BYTE PTR [rax],al
   140063b4f:	add    bh,bh
   140063b51:	(bad)  
   140063b52:	(bad)  
   140063b53:	jmp    QWORD PTR [rip+0x1900004e]        # 0x159063ba7
   140063b59:	add    DWORD PTR [rax],eax
	...
   140063b67:	add    BYTE PTR [rax],dl
   140063b69:	repnz add eax,DWORD PTR [rax+0x1]
   140063b6d:	add    BYTE PTR [rax],al
   140063b6f:	add    BYTE PTR [rax],al
   140063b71:	repnz add eax,DWORD PTR [rax+0x1]
	...
   140063c0d:	add    BYTE PTR [rax],al
   140063c0f:	add    bh,bh
   140063c11:	(bad)  
   140063c12:	(bad)  
   140063c13:	dec    DWORD PTR [rcx+0x1a00004e]
   140063c19:	add    DWORD PTR [rax],eax
	...
   140063c27:	add    al,dh
   140063c29:	icebp  
   140063c2a:	add    eax,DWORD PTR [rax+0x1]
   140063c2d:	add    BYTE PTR [rax],al
   140063c2f:	add    al,ch
   140063c31:	icebp  
   140063c32:	add    eax,DWORD PTR [rax+0x1]
	...
   140063ccd:	add    BYTE PTR [rax],al
   140063ccf:	add    bh,bh
   140063cd1:	(bad)  
   140063cd2:	(bad)  
   140063cd3:	dec    DWORD PTR [rdx+0x1b00004e]
   140063cd9:	add    DWORD PTR [rax],eax
	...
   140063ce7:	add    al,bl
   140063ce9:	icebp  
   140063cea:	add    eax,DWORD PTR [rax+0x1]
   140063ced:	add    BYTE PTR [rax],al
   140063cef:	add    al,cl
   140063cf1:	icebp  
   140063cf2:	add    eax,DWORD PTR [rax+0x1]
	...
   140063d8d:	add    BYTE PTR [rax],al
   140063d8f:	add    bh,bh
   140063d91:	(bad)  
   140063d92:	(bad)  
   140063d93:	dec    DWORD PTR [rbx+0x1c00004e]
   140063d99:	add    DWORD PTR [rax],eax
	...
   140063da7:	add    BYTE PTR [rax+0x14003f1],bh
   140063dad:	add    BYTE PTR [rax],al
   140063daf:	add    BYTE PTR [rax+0x14003f1],ch
	...
   140063e4d:	add    BYTE PTR [rax],al
   140063e4f:	add    bh,bh
   140063e51:	(bad)  
   140063e52:	(bad)  
   140063e53:	dec    DWORD PTR [rsi+rcx*2+0x11d0000]
	...
   140063e66:	add    BYTE PTR [rax],al
   140063e68:	cwde   
   140063e69:	icebp  
   140063e6a:	add    eax,DWORD PTR [rax+0x1]
   140063e6d:	add    BYTE PTR [rax],al
   140063e6f:	add    BYTE PTR [rax+0x14003f1],cl
	...
   140063f0d:	add    BYTE PTR [rax],al
   140063f0f:	add    bh,bh
   140063f11:	(bad)  
   140063f12:	(bad)  
   140063f13:	jmp    FWORD PTR [rip+0x1e00004f]        # 0x15e063f68
   140063f19:	add    DWORD PTR [rax],eax
	...
   140063f27:	add    BYTE PTR [rax-0xf],bh
   140063f2a:	add    eax,DWORD PTR [rax+0x1]
   140063f2d:	add    BYTE PTR [rax],al
   140063f2f:	add    BYTE PTR [rax-0xf],ch
   140063f32:	add    eax,DWORD PTR [rax+0x1]
	...
   140063fcd:	add    BYTE PTR [rax],al
   140063fcf:	add    bh,bh
   140063fd1:	(bad)  
   140063fd2:	(bad)  
   140063fd3:	jmp    QWORD PTR [rcx+0x51]
   140063fd6:	add    BYTE PTR [rax],al
   140063fd8:	(bad)  
   140063fd9:	add    DWORD PTR [rax],eax
	...
   140063fe7:	add    BYTE PTR [rax-0xf],bl
   140063fea:	add    eax,DWORD PTR [rax+0x1]
   140063fed:	add    BYTE PTR [rax],al
   140063fef:	add    BYTE PTR [rax-0xf],al
   140063ff2:	add    eax,DWORD PTR [rax+0x1]
	...
   14006408d:	add    BYTE PTR [rax],al
   14006408f:	add    bh,bh
   140064091:	(bad)  
   140064092:	(bad)  
   140064093:	call   rbp
   140064095:	push   rcx
   140064096:	add    BYTE PTR [rax],al
   140064098:	and    BYTE PTR [rcx],al
	...
   1400640a6:	add    BYTE PTR [rax],al
   1400640a8:	xor    cl,dh
   1400640aa:	add    eax,DWORD PTR [rax+0x1]
   1400640ad:	add    BYTE PTR [rax],al
   1400640af:	add    BYTE PTR [rax],ah
   1400640b1:	icebp  
   1400640b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14006414d:	add    BYTE PTR [rax],al
   14006414f:	add    bh,bh
   140064151:	(bad)  
   140064152:	(bad)  
   140064153:	jmp    QWORD PTR [rcx]
   140064155:	push   rdx
   140064156:	add    BYTE PTR [rax],al
   140064158:	and    DWORD PTR [rcx],eax
	...
   140064166:	add    BYTE PTR [rax],al
   140064168:	adc    al,0xf1
   14006416a:	add    eax,DWORD PTR [rax+0x1]
   14006416d:	add    BYTE PTR [rax],al
   14006416f:	add    BYTE PTR [rax],cl
   140064171:	icebp  
   140064172:	add    eax,DWORD PTR [rax+0x1]
   140064175:	add    BYTE PTR [rax],al
   140064177:	add    ah,bh
   140064179:	lock add eax,DWORD PTR [rax+0x1]
   14006417d:	add    BYTE PTR [rax],al
   14006417f:	add    al,ch
   140064181:	lock add eax,DWORD PTR [rax+0x1]
	...
   14006420d:	add    BYTE PTR [rax],al
   14006420f:	add    bh,bh
   140064211:	(bad)  
   140064212:	(bad)  
   140064213:	jmp    QWORD PTR [rbx]
   140064215:	push   rdx
   140064216:	add    BYTE PTR [rax],al
   140064218:	and    al,BYTE PTR [rcx]
	...
   140064226:	add    BYTE PTR [rax],al
   140064228:	fdiv   st,st(0)
   14006422a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400642cd:	add    BYTE PTR [rax],al
   1400642cf:	add    bh,bh
   1400642d1:	(bad)  
   1400642d2:	(bad)  
   1400642d3:	dec    DWORD PTR [rcx+0x71]
   1400642d6:	add    BYTE PTR [rax],al
   1400642d8:	and    eax,DWORD PTR [rcx]
	...
   1400642e6:	add    BYTE PTR [rax],al
   1400642e8:	enter  0x3f0,0x40
   1400642ec:	add    DWORD PTR [rax],eax
   1400642ee:	add    BYTE PTR [rax],al
   1400642f0:	mov    eax,0x14003f0
	...
   14006438d:	add    BYTE PTR [rax],al
   14006438f:	add    bh,bh
   140064391:	(bad)  
   140064392:	(bad)  
   140064393:	inc    esi
   140064395:	xchg   esi,eax
   140064396:	add    BYTE PTR [rax],al
   140064398:	and    al,0x1
	...
   1400643a6:	add    BYTE PTR [rax],al
   1400643a8:	test   al,0xf0
   1400643aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14006444d:	add    BYTE PTR [rax],al
   14006444f:	add    bh,bh
   140064451:	(bad)  
   140064452:	(bad)  
   140064453:	jmp    FWORD PTR [rip+0x250000c4]        # 0x16506451d
   140064459:	add    DWORD PTR [rax],eax
   14006445b:	add    BYTE PTR [rcx],al
	...
   140064465:	add    BYTE PTR [rax],al
   140064467:	add    BYTE PTR [rax+0x2c],ah
   14006446a:	add    al,0x40
   14006446c:	add    DWORD PTR [rax],eax
	...
   14006450e:	add    BYTE PTR [rax],al
   140064510:	(bad)  
   140064511:	(bad)  
   140064512:	(bad)  
   140064513:	jmp    FWORD PTR [rsi]
   140064515:	(bad)  
   140064516:	add    BYTE PTR [rax],al
   140064518:	add    DWORD PTR es:[rax],eax
	...
   140064527:	add    BYTE PTR [rax+0x2c],dh
   14006452a:	add    al,0x40
   14006452c:	add    DWORD PTR [rax],eax
	...
   1400645ce:	add    BYTE PTR [rax],al
   1400645d0:	(bad)  
   1400645d1:	(bad)  
   1400645d2:	(bad)  
   1400645d3:	push   QWORD PTR [rip+0x270000c4]        # 0x16706469d
   1400645d9:	add    DWORD PTR [rax],eax
	...
   1400645e7:	add    BYTE PTR [rax+0x14003f0],bl
	...
   14006468d:	add    BYTE PTR [rax],al
   14006468f:	add    bh,bh
   140064691:	(bad)  
   140064692:	(bad)  
   140064693:	push   rdx
   140064695:	mov    BYTE PTR [rax],0x0
   140064698:	sub    BYTE PTR [rcx],al
	...
   1400646a6:	add    BYTE PTR [rax],al
   1400646a8:	mov    al,dh
   1400646aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14006474d:	add    BYTE PTR [rax],al
   14006474f:	add    bh,bh
   140064751:	(bad)  
   140064752:	(bad)  
   140064753:	push   rbx
   140064755:	mov    BYTE PTR [rax],0x0
   140064758:	sub    DWORD PTR [rcx],eax
	...
   140064766:	add    BYTE PTR [rax],al
   140064768:	js     0x14006475a
   14006476a:	add    eax,DWORD PTR [rax+0x1]
	...
   14006480d:	add    BYTE PTR [rax],al
   14006480f:	add    bh,bh
   140064811:	(bad)  
   140064812:	(bad)  
   140064813:	push   rbp
   140064815:	mov    BYTE PTR [rax],0x0
   140064818:	sub    al,BYTE PTR [rcx]
	...
   140064826:	add    BYTE PTR [rax],al
   140064828:	push   0x14003f0
	...
   1400648cd:	add    BYTE PTR [rax],al
   1400648cf:	add    bh,bh
   1400648d1:	(bad)  
   1400648d2:	(bad)  
   1400648d3:	push   rdi
   1400648d5:	mov    BYTE PTR [rax],0x0
   1400648d8:	sub    eax,DWORD PTR [rcx]
	...
   1400648e6:	add    BYTE PTR [rax],al
   1400648e8:	pop    rax
   1400648e9:	lock add eax,DWORD PTR [rax+0x1]
	...
   14006498d:	add    BYTE PTR [rax],al
   14006498f:	add    bh,bh
   140064991:	(bad)  
   140064992:	(bad)  
   140064993:	(bad)  
   140064994:	clc    
   140064995:	mov    BYTE PTR [rax],0x0
   140064998:	sub    al,0x1
	...
   1400649a6:	add    BYTE PTR [rax],al
   1400649a8:	rex.W
   1400649a9:	lock add eax,DWORD PTR [rax+0x1]
	...
   140064a4d:	add    BYTE PTR [rax],al
   140064a4f:	add    bh,bh
   140064a51:	(bad)  
   140064a52:	(bad)  
   140064a53:	(bad)  
   140064a54:	stc    
   140064a55:	mov    BYTE PTR [rax],0x0
   140064a58:	sub    eax,0x1
	...
   140064a65:	add    BYTE PTR [rax],al
   140064a67:	add    BYTE PTR [rax],bh
   140064a69:	lock add eax,DWORD PTR [rax+0x1]
	...
   140064b0d:	add    BYTE PTR [rax],al
   140064b0f:	add    bh,bh
   140064b11:	(bad)  
   140064b12:	(bad)  
   140064b13:	(bad)  
   140064b14:	sti    
   140064b15:	mov    BYTE PTR [rax],0x0
   140064b18:	add    DWORD PTR cs:[rax],eax
	...
   140064b27:	add    BYTE PTR [rax],ch
   140064b29:	lock add eax,DWORD PTR [rax+0x1]
	...
   140064bcd:	add    BYTE PTR [rax],al
   140064bcf:	add    bh,bh
   140064bd1:	(bad)  
   140064bd2:	(bad)  
   140064bd3:	jmp    rax
   140064bd5:	retf   0x0
   140064bd8:	(bad)  
   140064bd9:	add    DWORD PTR [rax],eax
	...
   140064be7:	add    BYTE PTR [rdi+rcx*1],ah
   140064bea:	add    al,0x40
   140064bec:	add    DWORD PTR [rax],eax
	...
   140064c8e:	add    BYTE PTR [rax],al
   140064c90:	(bad)  
   140064c91:	(bad)  
   140064c92:	(bad)  
   140064c93:	(bad)  
   140064c94:	out    dx,al
   140064c95:	retf   0x0
   140064c98:	xor    BYTE PTR [rcx],al
	...
   140064ca6:	add    BYTE PTR [rax],al
   140064ca8:	sbb    al,dh
   140064caa:	add    eax,DWORD PTR [rax+0x1]
	...
   140064d4d:	add    BYTE PTR [rax],al
   140064d4f:	add    bh,bh
   140064d51:	(bad)  
   140064d52:	(bad)  
   140064d53:	jmp    FWORD PTR [rdx+0x310000de]
   140064d59:	add    DWORD PTR [rax],eax
   140064d5b:	add    BYTE PTR [rcx],al
	...
   140064d65:	add    BYTE PTR [rax],al
   140064d67:	add    BYTE PTR [rax],cl
   140064d69:	lock add eax,DWORD PTR [rax+0x1]
   140064d6d:	add    BYTE PTR [rax],al
   140064d6f:	add    al,bh
   140064d71:	out    dx,eax
   140064d72:	add    eax,DWORD PTR [rax+0x1]
   140064d75:	add    BYTE PTR [rax],al
   140064d77:	add    al,ch
   140064d79:	out    dx,eax
   140064d7a:	add    eax,DWORD PTR [rax+0x1]
   140064d7d:	add    BYTE PTR [rax],al
   140064d7f:	add    al,bl
   140064d81:	out    dx,eax
   140064d82:	add    eax,DWORD PTR [rax+0x1]
	...
   140064e0d:	add    BYTE PTR [rax],al
   140064e0f:	add    bh,bh
   140064e11:	(bad)  
   140064e12:	(bad)  
   140064e13:	jmp    FWORD PTR [rbx+0x320000de]
   140064e19:	add    DWORD PTR [rax],eax
   140064e1b:	add    BYTE PTR [rcx],al
	...
   140064e25:	add    BYTE PTR [rax],al
   140064e27:	add    al,cl
   140064e29:	out    dx,eax
   140064e2a:	add    eax,DWORD PTR [rax+0x1]
   140064e2d:	add    BYTE PTR [rax],al
   140064e2f:	add    BYTE PTR [rax+0x14003ef],bh
   140064e35:	add    BYTE PTR [rax],al
   140064e37:	add    BYTE PTR [rax+0x14003ef],ch
	...
   140064ecd:	add    BYTE PTR [rax],al
   140064ecf:	add    bh,bh
   140064ed1:	(bad)  
   140064ed2:	(bad)  
   140064ed3:	jmp    FWORD PTR [rsi+rbx*8+0x1330000]
   140064eda:	add    BYTE PTR [rax],al
   140064edc:	add    DWORD PTR [rax],eax
	...
   140064ee6:	add    BYTE PTR [rax],al
   140064ee8:	cwde   
   140064ee9:	out    dx,eax
   140064eea:	add    eax,DWORD PTR [rax+0x1]
   140064eed:	add    BYTE PTR [rax],al
   140064eef:	add    BYTE PTR [rax+0x14003ef],cl
   140064ef5:	add    BYTE PTR [rax],al
   140064ef7:	add    BYTE PTR [rax-0x11],bh
   140064efa:	add    eax,DWORD PTR [rax+0x1]
	...
   140064f8d:	add    BYTE PTR [rax],al
   140064f8f:	add    bh,bh
   140064f91:	(bad)  
   140064f92:	(bad)  
   140064f93:	jmp    FWORD PTR [rbp+0x340000de]
   140064f99:	add    DWORD PTR [rax],eax
   140064f9b:	add    BYTE PTR [rcx],al
	...
   140064fa5:	add    BYTE PTR [rax],al
   140064fa7:	add    BYTE PTR [rax-0x11],ch
   140064faa:	add    eax,DWORD PTR [rax+0x1]
   140064fad:	add    BYTE PTR [rax],al
   140064faf:	add    BYTE PTR [rax-0x11],bl
   140064fb2:	add    eax,DWORD PTR [rax+0x1]
   140064fb5:	add    BYTE PTR [rax],al
   140064fb7:	add    BYTE PTR [rax-0x11],cl
   140064fba:	add    eax,DWORD PTR [rax+0x1]
	...
   14006504d:	add    BYTE PTR [rax],al
   14006504f:	add    bh,bh
   140065051:	(bad)  
   140065052:	(bad)  
   140065053:	jmp    FWORD PTR [rsi+0x350000de]
   140065059:	add    DWORD PTR [rax],eax
   14006505b:	add    BYTE PTR [rcx],al
	...
   140065065:	add    BYTE PTR [rax],al
   140065067:	add    BYTE PTR [rax],bh
   140065069:	out    dx,eax
   14006506a:	add    eax,DWORD PTR [rax+0x1]
   14006506d:	add    BYTE PTR [rax],al
   14006506f:	add    BYTE PTR [rax],ch
   140065071:	out    dx,eax
   140065072:	add    eax,DWORD PTR [rax+0x1]
	...
   14006510d:	add    BYTE PTR [rax],al
   14006510f:	add    bh,bh
   140065111:	(bad)  
   140065112:	(bad)  
   140065113:	jmp    FWORD PTR [rdi+0x360000de]
   140065119:	add    DWORD PTR [rax],eax
   14006511b:	add    BYTE PTR [rcx],al
	...
   140065125:	add    BYTE PTR [rax],al
   140065127:	add    BYTE PTR [rax],bl
   140065129:	out    dx,eax
   14006512a:	add    eax,DWORD PTR [rax+0x1]
   14006512d:	add    BYTE PTR [rax],al
   14006512f:	add    BYTE PTR [rax],cl
   140065131:	out    dx,eax
   140065132:	add    eax,DWORD PTR [rax+0x1]
   140065135:	add    BYTE PTR [rax],al
   140065137:	add    al,bh
   140065139:	out    dx,al
   14006513a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400651cd:	add    BYTE PTR [rax],al
   1400651cf:	add    bh,bh
   1400651d1:	(bad)  
   1400651d2:	(bad)  
   1400651d3:	push   QWORD PTR [rax+0x370000de]
   1400651d9:	add    DWORD PTR [rax],eax
   1400651db:	add    BYTE PTR [rcx],al
	...
   1400651e5:	add    BYTE PTR [rax],al
   1400651e7:	add    al,ch
   1400651e9:	out    dx,al
   1400651ea:	add    eax,DWORD PTR [rax+0x1]
   1400651ed:	add    BYTE PTR [rax],al
   1400651ef:	add    al,bl
   1400651f1:	out    dx,al
   1400651f2:	add    eax,DWORD PTR [rax+0x1]
   1400651f5:	add    BYTE PTR [rax],al
   1400651f7:	add    al,cl
   1400651f9:	out    dx,al
   1400651fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14006528d:	add    BYTE PTR [rax],al
   14006528f:	add    bh,bh
   140065291:	(bad)  
   140065292:	(bad)  
   140065293:	push   QWORD PTR [rcx+0x380000de]
   140065299:	add    DWORD PTR [rax],eax
   14006529b:	add    BYTE PTR [rcx],al
	...
   1400652a5:	add    BYTE PTR [rax],al
   1400652a7:	add    BYTE PTR [rax+0x14003ee],bh
   1400652ad:	add    BYTE PTR [rax],al
   1400652af:	add    BYTE PTR [rax+0x14003ee],ch
   1400652b5:	add    BYTE PTR [rax],al
   1400652b7:	add    BYTE PTR [rax+0x14003ee],bl
	...
   14006534d:	add    BYTE PTR [rax],al
   14006534f:	add    bh,bh
   140065351:	(bad)  
   140065352:	(bad)  
   140065353:	push   QWORD PTR [rdx+0x390000de]
   140065359:	add    DWORD PTR [rax],eax
   14006535b:	add    BYTE PTR [rcx],al
	...
   140065365:	add    BYTE PTR [rax],al
   140065367:	add    BYTE PTR [rax+0x14003ee],cl
   14006536d:	add    BYTE PTR [rax],al
   14006536f:	add    BYTE PTR [rax-0x12],bh
   140065372:	add    eax,DWORD PTR [rax+0x1]
   140065375:	add    BYTE PTR [rax],al
   140065377:	add    BYTE PTR [rax-0x12],ch
   14006537a:	add    eax,DWORD PTR [rax+0x1]
	...
   14006540d:	add    BYTE PTR [rax],al
   14006540f:	add    bh,bh
   140065411:	(bad)  
   140065412:	(bad)  
   140065413:	push   QWORD PTR [rbx+0x3a0000de]
   140065419:	add    DWORD PTR [rax],eax
   14006541b:	add    BYTE PTR [rcx],al
	...
   140065425:	add    BYTE PTR [rax],al
   140065427:	add    BYTE PTR [rax-0x12],bl
   14006542a:	add    eax,DWORD PTR [rax+0x1]
   14006542d:	add    BYTE PTR [rax],al
   14006542f:	add    BYTE PTR [rax-0x12],cl
   140065432:	add    eax,DWORD PTR [rax+0x1]
   140065435:	add    BYTE PTR [rax],al
   140065437:	add    BYTE PTR [rax],bh
   140065439:	out    dx,al
   14006543a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400654cd:	add    BYTE PTR [rax],al
   1400654cf:	add    dh,bh
   1400654d1:	(bad)  
   1400654d2:	(bad)  
   1400654d3:	inc    DWORD PTR [rax]
	...
   1400654dd:	add    BYTE PTR [rax],al
   1400654df:	add    al,al
   1400654e1:	cmp    eax,DWORD PTR [rax+rax*2]
   1400654e4:	add    DWORD PTR [rax],eax
	...
   14006558e:	add    BYTE PTR [rax],al
   140065590:	sar    BYTE PTR [rsp+rax*1],0x40
   140065594:	add    DWORD PTR [rax],eax
	...
   14006559e:	add    BYTE PTR [rax],al
   1400655a0:	sar    BYTE PTR [rip+0x14004],0x0        # 0x1400795ab
	...
   1400655df:	add    al,al
   1400655e1:	ds add al,0x40
   1400655e4:	add    DWORD PTR [rax],eax
	...
   14006565e:	add    BYTE PTR [rax],al
   140065660:	sar    BYTE PTR [rdi],0x4
   140065663:	rex add DWORD PTR [rax],eax
	...
   140065cde:	add    BYTE PTR [rax],al
   140065ce0:	rol    BYTE PTR [rax+0x4],0x40
   140065ce4:	add    DWORD PTR [rax],eax
   140065ce6:	add    BYTE PTR [rax],al
   140065ce8:	rol    BYTE PTR [rdx+0x4],0x40
   140065cec:	add    DWORD PTR [rax],eax
   140065cee:	add    BYTE PTR [rax],al
   140065cf0:	rol    BYTE PTR [rsp+rax*1+0x40],0x1
   140065cf5:	add    BYTE PTR [rax],al
   140065cf7:	add    al,al
   140065cf9:	rex.RX add al,0x40
   140065cfc:	add    DWORD PTR [rax],eax
   140065cfe:	add    BYTE PTR [rax],al
   140065d00:	ror    BYTE PTR [rax+0x4],0x40
   140065d04:	add    DWORD PTR [rax],eax
   140065d06:	add    BYTE PTR [rax],al
   140065d08:	ror    BYTE PTR [rdx+0x4],0x40
   140065d0c:	add    DWORD PTR [rax],eax
	...
   140065d5e:	add    BYTE PTR [rax],al
   140065d60:	ror    BYTE PTR [rsp+rax*1+0x40],0x1
	...
   140065dcd:	add    BYTE PTR [rax],al
   140065dcf:	add    al,al
   140065dd1:	rex.WRX add al,0x40
   140065dd4:	add    DWORD PTR [rax],eax
   140065dd6:	add    BYTE PTR [rax],al
   140065dd8:	rcl    BYTE PTR [rax+0x4],0x40
   140065ddc:	add    DWORD PTR [rax],eax
	...
   140065de6:	add    BYTE PTR [rax],al
   140065de8:	rcl    BYTE PTR [rdx+0x4],0x40
   140065dec:	add    DWORD PTR [rax],eax
	...
   140065dfe:	add    BYTE PTR [rax],al
   140065e00:	rcl    BYTE PTR [rsp+rax*1+0x40],0x1
	...
   140065e3d:	add    BYTE PTR [rax],al
   140065e3f:	add    al,al
   140065e41:	push   rsi
   140065e42:	add    al,0x40
   140065e44:	add    DWORD PTR [rax],eax
	...
   1400664d6:	add    BYTE PTR [rax],al
   1400664d8:	rcr    BYTE PTR [rax+0x4],0x40
   1400664dc:	add    DWORD PTR [rax],eax
   1400664de:	add    BYTE PTR [rax],al
   1400664e0:	and    BYTE PTR [rbp+0x14006],ch
	...
   1400664ee:	add    BYTE PTR [rax],al
   1400664f0:	and    BYTE PTR [rbp+0x14006],ch
   1400664f6:	add    BYTE PTR [rax],al
   1400664f8:	add    DWORD PTR [rcx],eax
	...
   140066502:	add    BYTE PTR [rax],al
   140066504:	add    BYTE PTR [rax],dl
	...
   140066526:	add    BYTE PTR [rax],al
   140066528:	add    al,BYTE PTR [rax]
   14006652a:	add    BYTE PTR [rax],al
   14006652c:	add    DWORD PTR [rax],eax
	...
   140066556:	add    BYTE PTR [rax],al
   140066558:	add    al,BYTE PTR [rax]
   14006655a:	add    BYTE PTR [rax],al
   14006655c:	add    al,BYTE PTR [rax]
	...
   14006689e:	add    BYTE PTR [rax],al
   1400668a0:	add    eax,DWORD PTR [rax]
	...
   1400668ae:	add    BYTE PTR [rax],al
   1400668b0:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   1400668b6:	add    BYTE PTR [rax],al
   1400668b8:	int    0x5d
   1400668ba:	and    dl,dl
   1400668bc:	data16 (bad) 
   1400668be:	(bad)  
   1400668bf:	inc    DWORD PTR [rcx]
   1400668c1:	add    BYTE PTR [rax],al
   1400668c3:	add    BYTE PTR [rsi],dl
   1400668c5:	add    BYTE PTR [rax],al
   1400668c7:	add    BYTE PTR [rdx],al
   1400668c9:	add    BYTE PTR [rax],al
   1400668cb:	add    BYTE PTR [rdx],al
   1400668cd:	add    BYTE PTR [rax],al
   1400668cf:	add    BYTE PTR [rbx],al
   1400668d1:	add    BYTE PTR [rax],al
   1400668d3:	add    BYTE PTR [rdx],al
   1400668d5:	add    BYTE PTR [rax],al
   1400668d7:	add    BYTE PTR [rax+rax*1],al
   1400668da:	add    BYTE PTR [rax],al
   1400668dc:	sbb    BYTE PTR [rax],al
   1400668de:	add    BYTE PTR [rax],al
   1400668e0:	add    eax,0xd000000
   1400668e5:	add    BYTE PTR [rax],al
   1400668e7:	add    BYTE PTR [rsi],al
   1400668e9:	add    BYTE PTR [rax],al
   1400668eb:	add    BYTE PTR [rcx],cl
   1400668ed:	add    BYTE PTR [rax],al
   1400668ef:	add    BYTE PTR [rdi],al
   1400668f1:	add    BYTE PTR [rax],al
   1400668f3:	add    BYTE PTR [rax+rax*1],cl
   1400668f6:	add    BYTE PTR [rax],al
   1400668f8:	or     BYTE PTR [rax],al
   1400668fa:	add    BYTE PTR [rax],al
   1400668fc:	or     al,0x0
   1400668fe:	add    BYTE PTR [rax],al
   140066900:	or     DWORD PTR [rax],eax
   140066902:	add    BYTE PTR [rax],al
   140066904:	or     al,0x0
   140066906:	add    BYTE PTR [rax],al
   140066908:	or     al,BYTE PTR [rax]
   14006690a:	add    BYTE PTR [rax],al
   14006690c:	(bad)  
   14006690d:	add    BYTE PTR [rax],al
   14006690f:	add    BYTE PTR [rbx],cl
   140066911:	add    BYTE PTR [rax],al
   140066913:	add    BYTE PTR [rax],cl
   140066915:	add    BYTE PTR [rax],al
   140066917:	add    BYTE PTR [rax+rax*1],cl
   14006691a:	add    BYTE PTR [rax],al
   14006691c:	(bad)  
   14006691d:	add    BYTE PTR [rax],al
   14006691f:	add    BYTE PTR [rip+0x16000000],cl        # 0x156066925
   140066925:	add    BYTE PTR [rax],al
   140066927:	add    BYTE PTR [rdi],cl
   140066929:	add    BYTE PTR [rax],al
   14006692b:	add    BYTE PTR [rdx],al
   14006692d:	add    BYTE PTR [rax],al
   14006692f:	add    BYTE PTR [rax],dl
   140066931:	add    BYTE PTR [rax],al
   140066933:	add    BYTE PTR [rip+0x11000000],cl        # 0x151066939
   140066939:	add    BYTE PTR [rax],al
   14006693b:	add    BYTE PTR [rdx],dl
   14006693d:	add    BYTE PTR [rax],al
   14006693f:	add    BYTE PTR [rdx],dl
   140066941:	add    BYTE PTR [rax],al
   140066943:	add    BYTE PTR [rdx],al
   140066945:	add    BYTE PTR [rax],al
   140066947:	add    BYTE PTR [rcx],ah
   140066949:	add    BYTE PTR [rax],al
   14006694b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175066951
   140066951:	add    BYTE PTR [rax],al
   140066953:	add    BYTE PTR [rdx],al
   140066955:	add    BYTE PTR [rax],al
   140066957:	add    BYTE PTR [rcx+0x0],al
   14006695a:	add    BYTE PTR [rax],al
   14006695c:	or     eax,0x43000000
   140066961:	add    BYTE PTR [rax],al
   140066963:	add    BYTE PTR [rdx],al
   140066965:	add    BYTE PTR [rax],al
   140066967:	add    BYTE PTR [rax+0x0],dl
   14006696a:	add    BYTE PTR [rax],al
   14006696c:	adc    DWORD PTR [rax],eax
   14006696e:	add    BYTE PTR [rax],al
   140066970:	push   rdx
   140066971:	add    BYTE PTR [rax],al
   140066973:	add    BYTE PTR [rip+0x53000000],cl        # 0x193066979
   140066979:	add    BYTE PTR [rax],al
   14006697b:	add    BYTE PTR [rip+0x57000000],cl        # 0x197066981
   140066981:	add    BYTE PTR [rax],al
   140066983:	add    BYTE PTR [rsi],dl
   140066985:	add    BYTE PTR [rax],al
   140066987:	add    BYTE PTR [rcx+0x0],bl
   14006698a:	add    BYTE PTR [rax],al
   14006698c:	or     eax,DWORD PTR [rax]
   14006698e:	add    BYTE PTR [rax],al
   140066990:	ins    BYTE PTR es:[rdi],dx
   140066991:	add    BYTE PTR [rax],al
   140066993:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad066999
   140066999:	add    BYTE PTR [rax],al
   14006699b:	add    BYTE PTR [rax],ah
   14006699d:	add    BYTE PTR [rax],al
   14006699f:	add    BYTE PTR [rax+0x0],dh
   1400669a2:	add    BYTE PTR [rax],al
   1400669a4:	sbb    al,0x0
   1400669a6:	add    BYTE PTR [rax],al
   1400669a8:	jb     0x1400669aa
   1400669aa:	add    BYTE PTR [rax],al
   1400669ac:	or     DWORD PTR [rax],eax
   1400669ae:	add    BYTE PTR [rax],al
   1400669b0:	(bad)  
   1400669b1:	add    BYTE PTR [rax],al
   1400669b3:	add    BYTE PTR [rsi],dl
   1400669b5:	add    BYTE PTR [rax],al
   1400669b7:	add    BYTE PTR [rax+0xa000000],al
   1400669bd:	add    BYTE PTR [rax],al
   1400669bf:	add    BYTE PTR [rcx+0xa000000],al
   1400669c5:	add    BYTE PTR [rax],al
   1400669c7:	add    BYTE PTR [rdx+0x9000000],al
   1400669cd:	add    BYTE PTR [rax],al
   1400669cf:	add    BYTE PTR [rbx+0x16000000],al
   1400669d5:	add    BYTE PTR [rax],al
   1400669d7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   1400669de:	add    BYTE PTR [rax],al
   1400669e0:	xchg   ecx,eax
   1400669e1:	add    BYTE PTR [rax],al
   1400669e3:	add    BYTE PTR [rcx],ch
   1400669e5:	add    BYTE PTR [rax],al
   1400669e7:	add    BYTE PTR [rsi+0xd000000],bl
   1400669ed:	add    BYTE PTR [rax],al
   1400669ef:	add    BYTE PTR [rcx+0x2000000],ah
   1400669f5:	add    BYTE PTR [rax],al
   1400669f7:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   1400669fe:	add    BYTE PTR [rax],al
   140066a00:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140066a01:	add    BYTE PTR [rax],al
   140066a03:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf7066a09
   140066a09:	add    BYTE PTR [rax],al
   140066a0b:	add    BYTE PTR [rcx],dl
   140066a0d:	add    BYTE PTR [rax],al
   140066a0f:	add    dh,cl
   140066a11:	add    BYTE PTR [rax],al
   140066a13:	add    BYTE PTR [rdx],al
   140066a15:	add    BYTE PTR [rax],al
   140066a17:	add    bh,dl
   140066a19:	add    BYTE PTR [rax],al
   140066a1b:	add    BYTE PTR [rbx],cl
   140066a1d:	add    BYTE PTR [rax],al
   140066a1f:	add    BYTE PTR [rax],bl
   140066a21:	(bad)  
   140066a22:	add    BYTE PTR [rax],al
   140066a24:	or     al,0x0
   140066a26:	add    BYTE PTR [rax],al
   140066a28:	or     al,0x0
   140066a2a:	add    BYTE PTR [rax],al
   140066a2c:	or     BYTE PTR [rax],al
   140066a2e:	add    BYTE PTR [rax],al
   140066a30:	add    DWORD PTR [rax],eax
	...
   140066a3e:	add    BYTE PTR [rax],al
   140066a40:	jne    0x1400669da
   140066a42:	add    BYTE PTR [rax],al
   140066a44:	jae    0x1400669de
	...
   140066a4e:	add    BYTE PTR [rax],al
   140066a50:	add    BYTE PTR cs:[rax],al
	...
   140066a5f:	add    BYTE PTR [rax+0x6a],dl
   140066a62:	(bad)  
   140066a63:	rex add DWORD PTR [rax],eax
   140066a66:	add    BYTE PTR [rax],al
   140066a68:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066a70:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066a78:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066a80:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066a88:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066a90:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066a98:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066aa0:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066aa8:	sbb    BYTE PTR [rsi+rax*1+0x140],0x0
   140066ab0:	jg     0x140066b31
   140066ab2:	jg     0x140066b33
   140066ab4:	jg     0x140066b35
   140066ab6:	jg     0x140066b37
   140066ab8:	(bad)  
   140066ab9:	push   0x6
   140066abb:	rex add DWORD PTR [rax],eax
   140066abe:	add    BYTE PTR [rax],al
   140066ac0:	(bad)  
   140066ac1:	(bad)  
   140066ac2:	(bad)  
   140066ac3:	inc    DWORD PTR [rax]
	...
   140066acd:	add    BYTE PTR [rax],al
   140066acf:	add    bh,bh
   140066ad1:	(bad)  
   140066ad2:	(bad)  
   140066ad3:	inc    DWORD PTR [rax]
	...
   140066add:	add    BYTE PTR [rax],al
   140066adf:	add    BYTE PTR [rax+0x1000070],al
   140066ae5:	add    BYTE PTR [rax],al
   140066ae7:	add    al,dh
   140066ae9:	icebp  
   140066aea:	(bad)  
   140066aeb:	inc    DWORD PTR [rax]
   140066aed:	add    BYTE PTR [rax],al
   140066aef:	add    BYTE PTR [rax+0x53],dl
   140066af2:	push   rsp
	...
   140066b2f:	add    BYTE PTR [rax+0x44],dl
   140066b32:	push   rsp
	...
   140066b6f:	add    al,dh
   140066b71:	push   0x6
   140066b73:	rex add DWORD PTR [rax],eax
   140066b76:	add    BYTE PTR [rax],al
   140066b78:	xor    BYTE PTR [rbx+0x6],ch
   140066b7b:	rex add DWORD PTR [rax],eax
	...
   140066b86:	add    BYTE PTR [rax],al
   140066b88:	add    DWORD PTR [rax],eax
	...
   140066b96:	add    BYTE PTR [rax],al
   140066b98:	add    DWORD PTR [rax],eax
	...
   140066bb6:	add    BYTE PTR [rax],al
   140066bb8:	add    DWORD PTR [rax],eax
	...
   140066bc6:	add    BYTE PTR [rax],al
   140066bc8:	add    DWORD PTR [rax],eax
	...
   140066be6:	add    BYTE PTR [rax],al
   140066be8:	add    DWORD PTR [rax],eax
	...
   140066bf6:	add    BYTE PTR [rax],al
   140066bf8:	add    DWORD PTR [rax],eax
	...
   140066c06:	add    BYTE PTR [rax],al
   140066c08:	add    DWORD PTR [rax],eax
	...
   140066c26:	add    BYTE PTR [rax],al
   140066c28:	add    DWORD PTR [rax],eax
	...
   140066c46:	add    BYTE PTR [rax],al
   140066c48:	add    DWORD PTR [rax],eax
	...
   140066c56:	add    BYTE PTR [rax],al
   140066c58:	add    DWORD PTR [rax],eax
	...
   140066c66:	add    BYTE PTR [rax],al
   140066c68:	add    DWORD PTR [rax],eax
	...
   140066c86:	add    BYTE PTR [rax],al
   140066c88:	add    DWORD PTR [rax],eax
	...
   140066c96:	add    BYTE PTR [rax],al
   140066c98:	add    DWORD PTR [rax],eax
	...
   140066ca6:	add    BYTE PTR [rax],al
   140066ca8:	add    DWORD PTR [rax],eax
	...
   140066dbe:	add    BYTE PTR [rax],al
   140066dc0:	(bad)  
   140066dc1:	(bad)  
   140066dc2:	(bad)  
   140066dc3:	(bad)  
   140066dc4:	(bad)  
   140066dc5:	(bad)  
   140066dc6:	(bad)  
   140066dc7:	inc    DWORD PTR [rax+0xa]
	...
   140066e15:	add    BYTE PTR [rax],al
   140066e17:	add    ah,cl
   140066e19:	(bad)  
   140066e1a:	add    eax,DWORD PTR [rax+0x1]
   140066e1d:	add    BYTE PTR [rax],al
   140066e1f:	add    BYTE PTR [rdx],al
   140066e21:	add    BYTE PTR [rax],al
   140066e23:	add    BYTE PTR [rax],al
   140066e25:	add    BYTE PTR [rax],al
   140066e27:	add    BYTE PTR [rax+0x14004fd],bh
   140066e2d:	add    BYTE PTR [rax],al
   140066e2f:	add    BYTE PTR [rax],cl
   140066e31:	add    BYTE PTR [rax],al
   140066e33:	add    BYTE PTR [rax],al
   140066e35:	add    BYTE PTR [rax],al
   140066e37:	add    BYTE PTR [rax+0x14004fd],cl
   140066e3d:	add    BYTE PTR [rax],al
   140066e3f:	add    BYTE PTR [rcx],cl
   140066e41:	add    BYTE PTR [rax],al
   140066e43:	add    BYTE PTR [rax],al
   140066e45:	add    BYTE PTR [rax],al
   140066e47:	add    BYTE PTR [rax-0x3],bl
   140066e4a:	add    al,0x40
   140066e4c:	add    DWORD PTR [rax],eax
   140066e4e:	add    BYTE PTR [rax],al
   140066e50:	or     al,BYTE PTR [rax]
   140066e52:	add    BYTE PTR [rax],al
   140066e54:	add    BYTE PTR [rax],al
   140066e56:	add    BYTE PTR [rax],al
   140066e58:	sar    ah,0x4
   140066e5b:	rex add DWORD PTR [rax],eax
   140066e5e:	add    BYTE PTR [rax],al
   140066e60:	adc    BYTE PTR [rax],al
   140066e62:	add    BYTE PTR [rax],al
   140066e64:	add    BYTE PTR [rax],al
   140066e66:	add    BYTE PTR [rax],al
   140066e68:	mov    ah,bh
   140066e6a:	add    al,0x40
   140066e6c:	add    DWORD PTR [rax],eax
   140066e6e:	add    BYTE PTR [rax],al
   140066e70:	adc    DWORD PTR [rax],eax
   140066e72:	add    BYTE PTR [rax],al
   140066e74:	add    BYTE PTR [rax],al
   140066e76:	add    BYTE PTR [rax],al
   140066e78:	pop    rax
   140066e79:	cld    
   140066e7a:	add    al,0x40
   140066e7c:	add    DWORD PTR [rax],eax
   140066e7e:	add    BYTE PTR [rax],al
   140066e80:	adc    al,BYTE PTR [rax]
   140066e82:	add    BYTE PTR [rax],al
   140066e84:	add    BYTE PTR [rax],al
   140066e86:	add    BYTE PTR [rax],al
   140066e88:	xor    ah,bh
   140066e8a:	add    al,0x40
   140066e8c:	add    DWORD PTR [rax],eax
   140066e8e:	add    BYTE PTR [rax],al
   140066e90:	adc    eax,DWORD PTR [rax]
   140066e92:	add    BYTE PTR [rax],al
   140066e94:	add    BYTE PTR [rax],al
   140066e96:	add    BYTE PTR [rax],al
   140066e98:	add    ah,bh
   140066e9a:	add    al,0x40
   140066e9c:	add    DWORD PTR [rax],eax
   140066e9e:	add    BYTE PTR [rax],al
   140066ea0:	sbb    BYTE PTR [rax],al
   140066ea2:	add    BYTE PTR [rax],al
   140066ea4:	add    BYTE PTR [rax],al
   140066ea6:	add    BYTE PTR [rax],al
   140066ea8:	enter  0x4fb,0x40
   140066eac:	add    DWORD PTR [rax],eax
   140066eae:	add    BYTE PTR [rax],al
   140066eb0:	sbb    DWORD PTR [rax],eax
   140066eb2:	add    BYTE PTR [rax],al
   140066eb4:	add    BYTE PTR [rax],al
   140066eb6:	add    BYTE PTR [rax],al
   140066eb8:	movabs al,ds:0x1a000000014004fb
   140066ec1:	add    BYTE PTR [rax],al
   140066ec3:	add    BYTE PTR [rax],al
   140066ec5:	add    BYTE PTR [rax],al
   140066ec7:	add    BYTE PTR [rax-0x5],ch
   140066eca:	add    al,0x40
   140066ecc:	add    DWORD PTR [rax],eax
   140066ece:	add    BYTE PTR [rax],al
   140066ed0:	sbb    eax,DWORD PTR [rax]
   140066ed2:	add    BYTE PTR [rax],al
   140066ed4:	add    BYTE PTR [rax],al
   140066ed6:	add    BYTE PTR [rax],al
   140066ed8:	xor    bl,bh
   140066eda:	add    al,0x40
   140066edc:	add    DWORD PTR [rax],eax
   140066ede:	add    BYTE PTR [rax],al
   140066ee0:	sbb    al,0x0
   140066ee2:	add    BYTE PTR [rax],al
   140066ee4:	add    BYTE PTR [rax],al
   140066ee6:	add    BYTE PTR [rax],al
   140066ee8:	or     bl,bh
   140066eea:	add    al,0x40
   140066eec:	add    DWORD PTR [rax],eax
   140066eee:	add    BYTE PTR [rax],al
   140066ef0:	(bad)  
   140066ef1:	add    BYTE PTR [rax],al
   140066ef3:	add    BYTE PTR [rax],al
   140066ef5:	add    BYTE PTR [rax],al
   140066ef7:	add    al,ch
   140066ef9:	cli    
   140066efa:	add    al,0x40
   140066efc:	add    DWORD PTR [rax],eax
   140066efe:	add    BYTE PTR [rax],al
   140066f00:	(bad)  
   140066f01:	add    BYTE PTR [rax],al
   140066f03:	add    BYTE PTR [rax],al
   140066f05:	add    BYTE PTR [rax],al
   140066f07:	add    BYTE PTR [rax+0x14004fa],al
   140066f0d:	add    BYTE PTR [rax],al
   140066f0f:	add    BYTE PTR [rax],ah
   140066f11:	add    BYTE PTR [rax],al
   140066f13:	add    BYTE PTR [rax],al
   140066f15:	add    BYTE PTR [rax],al
   140066f17:	add    BYTE PTR [rax-0x6],cl
   140066f1a:	add    al,0x40
   140066f1c:	add    DWORD PTR [rax],eax
   140066f1e:	add    BYTE PTR [rax],al
   140066f20:	and    DWORD PTR [rax],eax
   140066f22:	add    BYTE PTR [rax],al
   140066f24:	add    BYTE PTR [rax],al
   140066f26:	add    BYTE PTR [rax],al
   140066f28:	push   rax
   140066f29:	stc    
   140066f2a:	add    al,0x40
   140066f2c:	add    DWORD PTR [rax],eax
   140066f2e:	add    BYTE PTR [rax],al
   140066f30:	and    al,BYTE PTR [rax]
   140066f32:	add    BYTE PTR [rax],al
   140066f34:	add    BYTE PTR [rax],al
   140066f36:	add    BYTE PTR [rax],al
   140066f38:	mov    al,0xf8
   140066f3a:	add    al,0x40
   140066f3c:	add    DWORD PTR [rax],eax
   140066f3e:	add    BYTE PTR [rax],al
   140066f40:	js     0x140066f42
   140066f42:	add    BYTE PTR [rax],al
   140066f44:	add    BYTE PTR [rax],al
   140066f46:	add    BYTE PTR [rax],al
   140066f48:	movabs al,ds:0x79000000014004f8
   140066f51:	add    BYTE PTR [rax],al
   140066f53:	add    BYTE PTR [rax],al
   140066f55:	add    BYTE PTR [rax],al
   140066f57:	add    BYTE PTR [rax+0x14004f8],dl
   140066f5d:	add    BYTE PTR [rax],al
   140066f5f:	add    BYTE PTR [rdx+0x0],bh
   140066f62:	add    BYTE PTR [rax],al
   140066f64:	add    BYTE PTR [rax],al
   140066f66:	add    BYTE PTR [rax],al
   140066f68:	cmp    al,0x4
   140066f6b:	rex add DWORD PTR [rax],eax
   140066f6e:	add    BYTE PTR [rax],al
   140066f70:	cld    
   140066f71:	add    BYTE PTR [rax],al
   140066f73:	add    BYTE PTR [rax],al
   140066f75:	add    BYTE PTR [rax],al
   140066f77:	add    BYTE PTR [rax-0x8],bh
   140066f7a:	add    al,0x40
   140066f7c:	add    DWORD PTR [rax],eax
   140066f7e:	add    BYTE PTR [rax],al
   140066f80:	inc    DWORD PTR [rax]
   140066f82:	add    BYTE PTR [rax],al
   140066f84:	add    BYTE PTR [rax],al
   140066f86:	add    BYTE PTR [rax],al
   140066f88:	push   0x14004f8
   140066f8d:	add    BYTE PTR [rax],al
   140066f8f:	add    BYTE PTR [rax-0x1c],bl
   140066f92:	add    eax,DWORD PTR [rax+0x1]
   140066f95:	add    BYTE PTR [rax],al
   140066f97:	add    BYTE PTR [rax+0x14003e4],dl
   140066f9d:	add    BYTE PTR [rax],al
   140066f9f:	add    BYTE PTR [rax],dl
   140066fa1:	add    BYTE PTR [rax],al
   140066fa3:	add    bh,bh
   140066fa5:	(bad)  
   140066fa6:	(bad)  
   140066fa7:	inc    DWORD PTR [rax]
	...
   14006700d:	add    BYTE PTR [rax],dl
   14006700f:	adc    BYTE PTR [rax],dl
   140067011:	adc    BYTE PTR [rax],dl
   140067013:	adc    BYTE PTR [rax],dl
   140067015:	adc    BYTE PTR [rax],dl
   140067017:	adc    BYTE PTR [rax],dl
   140067019:	adc    BYTE PTR [rax],dl
   14006701b:	adc    BYTE PTR [rax],dl
   14006701d:	adc    BYTE PTR [rax],dl
   14006701f:	adc    BYTE PTR [rax],dl
   140067021:	adc    BYTE PTR [rax],dl
   140067023:	adc    BYTE PTR [rax],dl
   140067025:	adc    BYTE PTR [rax],dl
   140067027:	adc    BYTE PTR [rax],al
   140067029:	add    BYTE PTR [rax],al
   14006702b:	add    BYTE PTR [rax],al
   14006702d:	add    BYTE PTR [rax],ah
   14006702f:	and    BYTE PTR [rax],ah
   140067031:	and    BYTE PTR [rax],ah
   140067033:	and    BYTE PTR [rax],ah
   140067035:	and    BYTE PTR [rax],ah
   140067037:	and    BYTE PTR [rax],ah
   140067039:	and    BYTE PTR [rax],ah
   14006703b:	and    BYTE PTR [rax],ah
   14006703d:	and    BYTE PTR [rax],ah
   14006703f:	and    BYTE PTR [rax],ah
   140067041:	and    BYTE PTR [rax],ah
   140067043:	and    BYTE PTR [rax],ah
   140067045:	and    BYTE PTR [rax],ah
   140067047:	and    BYTE PTR [rax],al
	...
   14006710d:	add    BYTE PTR [rcx+0x62],ah
   140067110:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140067114:	addr32 push 0x6c6b6a69
   14006711a:	ins    DWORD PTR es:[rdi],dx
   14006711b:	outs   dx,BYTE PTR ds:[rsi]
   14006711c:	outs   dx,DWORD PTR ds:[rsi]
   14006711d:	jo     0x140067190
   14006711f:	jb     0x140067194
   140067121:	je     0x140067198
   140067123:	jbe    0x14006719c
   140067125:	js     0x1400671a0
   140067127:	jp     0x140067129
   140067129:	add    BYTE PTR [rax],al
   14006712b:	add    BYTE PTR [rax],al
   14006712d:	add    BYTE PTR [rcx+0x42],al
   140067130:	rex.XB
   140067131:	rex.R
   140067132:	rex.RB
   140067133:	rex.RX
   140067134:	rex.RXB
   140067135:	rex.W
   140067136:	rex.WB
   140067137:	rex.WX
   140067138:	rex.WXB
   140067139:	rex.WR
   14006713a:	rex.WRB
   14006713b:	rex.WRX
   14006713c:	rex.WRXB push r8
   14006713e:	push   rcx
   14006713f:	push   rdx
   140067140:	push   rbx
   140067141:	push   rsp
   140067142:	push   rbp
   140067143:	push   rsi
   140067144:	push   rdi
   140067145:	pop    rax
   140067146:	pop    rcx
   140067147:	pop    rdx
	...
   140067210:	add    BYTE PTR [rax],al
   140067212:	adc    BYTE PTR [rax],dl
   140067214:	adc    BYTE PTR [rax],dl
   140067216:	adc    BYTE PTR [rax],dl
   140067218:	adc    BYTE PTR [rax],dl
   14006721a:	adc    BYTE PTR [rax],dl
   14006721c:	adc    BYTE PTR [rax],dl
   14006721e:	adc    BYTE PTR [rax],dl
   140067220:	adc    BYTE PTR [rax],dl
   140067222:	adc    BYTE PTR [rax],dl
   140067224:	adc    BYTE PTR [rax],dl
   140067226:	adc    BYTE PTR [rax],dl
   140067228:	adc    BYTE PTR [rax],dl
   14006722a:	adc    BYTE PTR [rax],dl
   14006722c:	add    BYTE PTR [rax],al
   14006722e:	add    BYTE PTR [rax],al
   140067230:	add    BYTE PTR [rax],al
   140067232:	and    BYTE PTR [rax],ah
   140067234:	and    BYTE PTR [rax],ah
   140067236:	and    BYTE PTR [rax],ah
   140067238:	and    BYTE PTR [rax],ah
   14006723a:	and    BYTE PTR [rax],ah
   14006723c:	and    BYTE PTR [rax],ah
   14006723e:	and    BYTE PTR [rax],ah
   140067240:	and    BYTE PTR [rax],ah
   140067242:	and    BYTE PTR [rax],ah
   140067244:	and    BYTE PTR [rax],ah
   140067246:	and    BYTE PTR [rax],ah
   140067248:	and    BYTE PTR [rax],ah
   14006724a:	and    BYTE PTR [rax],ah
	...
   140067320:	add    BYTE PTR [rcx+0x62],ah
   140067323:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140067327:	addr32 push 0x6c6b6a69
   14006732d:	ins    DWORD PTR es:[rdi],dx
   14006732e:	outs   dx,BYTE PTR ds:[rsi]
   14006732f:	outs   dx,DWORD PTR ds:[rsi]
   140067330:	jo     0x1400673a3
   140067332:	jb     0x1400673a7
   140067334:	je     0x1400673ab
   140067336:	jbe    0x1400673af
   140067338:	js     0x1400673b3
   14006733a:	jp     0x14006733c
   14006733c:	add    BYTE PTR [rax],al
   14006733e:	add    BYTE PTR [rax],al
   140067340:	add    BYTE PTR [rcx+0x42],al
   140067343:	rex.XB
   140067344:	rex.R
   140067345:	rex.RB
   140067346:	rex.RX
   140067347:	rex.RXB
   140067348:	rex.W
   140067349:	rex.WB
   14006734a:	rex.WX
   14006734b:	rex.WXB
   14006734c:	rex.WR
   14006734d:	rex.WRB
   14006734e:	rex.WRX
   14006734f:	rex.WRXB push r8
   140067351:	push   rcx
   140067352:	push   rdx
   140067353:	push   rbx
   140067354:	push   rsp
   140067355:	push   rbp
   140067356:	push   rsi
   140067357:	push   rdi
   140067358:	pop    rax
   140067359:	pop    rcx
   14006735a:	pop    rdx
	...
   1400673df:	add    BYTE PTR [rax+0x140066f],dh
   1400673e5:	add    BYTE PTR [rax],al
   1400673e7:	add    BYTE PTR [rcx],al
   1400673e9:	add    al,BYTE PTR [rax+rcx*1]
   1400673ec:	add    BYTE PTR [rax],al
   1400673ee:	add    BYTE PTR [rax],al
   1400673f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400673f1:	add    eax,DWORD PTR [rax]
   1400673f3:	add    BYTE PTR [rax-0x7e],ah
   1400673f6:	jns    0x14006737a
   1400673f8:	and    DWORD PTR [rax],eax
   1400673fa:	add    BYTE PTR [rax],al
   1400673fc:	add    BYTE PTR [rax],al
   1400673fe:	add    BYTE PTR [rax],al
   140067400:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140067401:	fild   WORD PTR [rax]
   140067403:	add    BYTE PTR [rax],al
   140067405:	add    BYTE PTR [rax],al
   140067407:	add    BYTE PTR [rcx+0xa5],ah
   14006740d:	add    BYTE PTR [rax],al
   14006740f:	add    BYTE PTR [rcx+0xfce09f],al
   140067415:	add    BYTE PTR [rax],al
   140067417:	add    BYTE PTR [rax+0x7e],al
   14006741a:	cmp    ah,0x0
   14006741d:	add    BYTE PTR [rax],al
   14006741f:	add    BYTE PTR [rax-0x3efffffd],ch
   140067425:	movabs ds:0x20a3da,eax
	...
   14006743e:	add    BYTE PTR [rax],al
   140067440:	cmp    esi,0x0
   140067446:	add    BYTE PTR [rax],al
   140067448:	rex inc BYTE PTR [rax]
   14006744b:	add    BYTE PTR [rax],al
   14006744d:	add    BYTE PTR [rax],al
   14006744f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140067455:	movabs ds:0x20a3da,eax
	...
   14006746e:	add    BYTE PTR [rax],al
   140067470:	cmp    esi,0x0
   140067476:	add    BYTE PTR [rax],al
   140067478:	inc    BYTE PTR [r8]
   14006747b:	add    BYTE PTR [rax],al
   14006747d:	add    BYTE PTR [rax],al
   14006747f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140067485:	movabs ds:0xa2e8a2e5001aa2e4,al
   14006748e:	pop    rbx
	...
   14006749f:	add    BYTE PTR [rcx+0xfe],al
   1400674a5:	add    BYTE PTR [rax],al
   1400674a7:	add    BYTE PTR [rax+0x7e],al
   1400674aa:	movabs eax,ds:0x55100000000fe
   1400674b3:	add    BYTE PTR [rcx-0x26],dl
   1400674b6:	pop    rsi
   1400674b7:	fisub  DWORD PTR [rax]
   1400674b9:	add    BYTE PTR [rdi-0x26],bl
   1400674bc:	push   0xffffffffffffffda
   1400674be:	xor    al,BYTE PTR [rax]
	...
   1400674d0:	adc    ebx,0xf9e0ded8
   1400674d6:	add    BYTE PTR [rax],al
   1400674d8:	xor    DWORD PTR [rsi-0x7f],edi
   1400674db:	inc    BYTE PTR [rax]
   1400674dd:	add    BYTE PTR [rax],al
   1400674df:	add    ah,ah
   1400674e1:	(bad)  
   1400674e2:	add    eax,0x140
   1400674e7:	add    dh,bh
   1400674e9:	(bad)  
   1400674ea:	(bad)  
   1400674eb:	inc    DWORD PTR [rax]
   1400674ed:	add    BYTE PTR [rax],al
   1400674ef:	add    BYTE PTR [rbx+0x0],al
	...
   1400674fe:	add    BYTE PTR [rax],al
   140067500:	add    DWORD PTR [rax],eax
	...
   140067566:	add    BYTE PTR [rax],al
   140067568:	lock je 0x140067571
   14006756b:	rex add DWORD PTR [rax],eax
	...
   140067586:	add    BYTE PTR [rax],al
   140067588:	lock je 0x140067591
   14006758b:	rex add DWORD PTR [rax],eax
	...
   1400675a6:	add    BYTE PTR [rax],al
   1400675a8:	lock je 0x1400675b1
   1400675ab:	rex add DWORD PTR [rax],eax
	...
   1400675c6:	add    BYTE PTR [rax],al
   1400675c8:	lock je 0x1400675d1
   1400675cb:	rex add DWORD PTR [rax],eax
	...
   1400675e6:	add    BYTE PTR [rax],al
   1400675e8:	lock je 0x1400675f1
   1400675eb:	rex add DWORD PTR [rax],eax
	...
   140067606:	add    BYTE PTR [rax],al
   140067608:	add    DWORD PTR [rax],eax
   14006760a:	add    BYTE PTR [rax],al
   14006760c:	add    DWORD PTR [rax],eax
	...
   140067626:	add    BYTE PTR [rax],al
   140067628:	(bad)  
   140067629:	push   0x6
   14006762b:	rex add DWORD PTR [rax],eax
	...
   14006763e:	add    BYTE PTR [rax],al
   140067640:	loopne 0x140067647
   140067642:	add    eax,0x140
   140067647:	add    BYTE PTR [rax+0xa],dh
   14006764a:	add    eax,0x140
   14006764f:	add    al,dh
   140067651:	or     eax,DWORD PTR [rip+0x140]        # 0x140067797
   140067657:	add    BYTE PTR [rax],al
   140067659:	jp     0x140067661
   14006765b:	rex add DWORD PTR [rax],eax
   14006765e:	add    BYTE PTR [rax],al
   140067660:	add    BYTE PTR [rbp+0x6],dh
   140067663:	rex add DWORD PTR [rax],eax
   140067666:	add    BYTE PTR [rax],al
   140067668:	add    DWORD PTR [rax],eax
   14006766a:	add    BYTE PTR [rax],al
   14006766c:	add    BYTE PTR [rax],al
   14006766e:	add    BYTE PTR [rax],al
   140067670:	add    BYTE PTR [rbp+0x6],dh
   140067673:	rex add DWORD PTR [rax],eax
   140067676:	add    BYTE PTR [rax],al
   140067678:	mov    al,0x6f
   14006767a:	(bad)  
   14006767b:	rex add DWORD PTR [rax],eax
   14006767e:	add    BYTE PTR [rax],al
   140067680:	add    eax,DWORD PTR [rax]
   140067682:	add    BYTE PTR [rax],al
   140067684:	(bad)  
   140067685:	add    BYTE PTR [rax],al
   140067687:	add    BYTE PTR [rax+0xa000000],ah
   14006768d:	add    BYTE PTR [rax],al
   14006768f:	add    ah,cl
   140067691:	test   DWORD PTR [rbx],eax
   140067693:	rex add DWORD PTR [rax],eax
   140067696:	add    BYTE PTR [rax],al
   140067698:	int3   
   140067699:	test   DWORD PTR [rbx],eax
   14006769b:	rex add DWORD PTR [rax],eax
   14006769e:	add    BYTE PTR [rax],al
   1400676a0:	int3   
   1400676a1:	test   DWORD PTR [rbx],eax
   1400676a3:	rex add DWORD PTR [rax],eax
   1400676a6:	add    BYTE PTR [rax],al
   1400676a8:	int3   
   1400676a9:	test   DWORD PTR [rbx],eax
   1400676ab:	rex add DWORD PTR [rax],eax
   1400676ae:	add    BYTE PTR [rax],al
   1400676b0:	int3   
   1400676b1:	test   DWORD PTR [rbx],eax
   1400676b3:	rex add DWORD PTR [rax],eax
   1400676b6:	add    BYTE PTR [rax],al
   1400676b8:	int3   
   1400676b9:	test   DWORD PTR [rbx],eax
   1400676bb:	rex add DWORD PTR [rax],eax
   1400676be:	add    BYTE PTR [rax],al
   1400676c0:	int3   
   1400676c1:	test   DWORD PTR [rbx],eax
   1400676c3:	rex add DWORD PTR [rax],eax
   1400676c6:	add    BYTE PTR [rax],al
   1400676c8:	int3   
   1400676c9:	test   DWORD PTR [rbx],eax
   1400676cb:	rex add DWORD PTR [rax],eax
   1400676ce:	add    BYTE PTR [rax],al
   1400676d0:	int3   
   1400676d1:	test   DWORD PTR [rbx],eax
   1400676d3:	rex add DWORD PTR [rax],eax
   1400676d6:	add    BYTE PTR [rax],al
   1400676d8:	int3   
   1400676d9:	test   DWORD PTR [rbx],eax
   1400676db:	rex add DWORD PTR [rax],eax
   1400676de:	add    BYTE PTR [rax],al
   1400676e0:	and    BYTE PTR [rdx+0x14006],ch
	...
   1400677ae:	add    BYTE PTR [rax],al
   1400677b0:	add    DWORD PTR [rcx],eax
   1400677b2:	add    DWORD PTR [rcx],eax
   1400677b4:	add    DWORD PTR [rcx],eax
   1400677b6:	add    DWORD PTR [rcx],eax
   1400677b8:	add    DWORD PTR [rcx],eax
   1400677ba:	add    DWORD PTR [rcx],eax
   1400677bc:	add    DWORD PTR [rcx],eax
   1400677be:	add    DWORD PTR [rcx],eax
   1400677c0:	add    DWORD PTR [rcx],eax
   1400677c2:	add    DWORD PTR [rcx],eax
   1400677c4:	add    DWORD PTR [rcx],eax
   1400677c6:	add    DWORD PTR [rcx],eax
   1400677c8:	add    DWORD PTR [rcx],eax
   1400677ca:	add    DWORD PTR [rcx],eax
   1400677cc:	add    DWORD PTR [rcx],eax
   1400677ce:	add    DWORD PTR [rcx],eax
   1400677d0:	add    al,BYTE PTR [rdx]
   1400677d2:	add    al,BYTE PTR [rdx]
   1400677d4:	add    al,BYTE PTR [rdx]
   1400677d6:	add    al,BYTE PTR [rdx]
   1400677d8:	add    al,BYTE PTR [rdx]
   1400677da:	add    al,BYTE PTR [rdx]
   1400677dc:	add    al,BYTE PTR [rdx]
   1400677de:	add    al,BYTE PTR [rdx]
   1400677e0:	add    eax,DWORD PTR [rbx]
   1400677e2:	add    eax,DWORD PTR [rbx]
   1400677e4:	add    eax,DWORD PTR [rbx]
   1400677e6:	add    eax,DWORD PTR [rbx]
	...
   1400677f0:	rex.W add BYTE PTR [rip+0x140],al        # 0x140067937
   1400677f7:	add    BYTE PTR [rax],bh
   1400677f9:	add    BYTE PTR [rip+0x140],al        # 0x14006793f
   1400677ff:	add    BYTE PTR [rax+0x0],bl
   140067802:	add    eax,0x140
   140067807:	add    BYTE PTR [rax],ch
   140067809:	add    BYTE PTR [rip+0x140],al        # 0x14006794f
   14006780f:	add    al,dh
   140067811:	add    eax,DWORD PTR [rip+0x140]        # 0x140067957
   140067817:	add    al,bl
   140067819:	add    eax,DWORD PTR [rip+0x140]        # 0x14006795f
   14006781f:	add    BYTE PTR [rax+0x1400503],bh
   140067825:	add    BYTE PTR [rax],al
   140067827:	add    BYTE PTR [rax+0x1400503],ch
   14006782d:	add    BYTE PTR [rax],al
   14006782f:	add    BYTE PTR [rax+0x1400503],cl
   140067835:	add    BYTE PTR [rax],al
   140067837:	add    BYTE PTR [rax+0x3],dh
   14006783a:	add    eax,0x140
   14006783f:	add    BYTE PTR [rax+0x3],dl
   140067842:	add    eax,0x140
   140067847:	add    BYTE PTR [rax],bh
   140067849:	add    eax,DWORD PTR [rip+0x140]        # 0x14006798f
   14006784f:	add    BYTE PTR [rax],ah
   140067851:	add    eax,DWORD PTR [rip+0x140]        # 0x140067997
   140067857:	add    BYTE PTR [rax],cl
   140067859:	add    eax,DWORD PTR [rip+0x140]        # 0x14006799f
   14006785f:	add    al,dh
   140067861:	add    al,BYTE PTR [rip+0x140]        # 0x1400679a7
   140067867:	add    al,cl
   140067869:	add    al,BYTE PTR [rip+0x140]        # 0x1400679af
   14006786f:	add    BYTE PTR [rax+0x1400502],dh
   140067875:	add    BYTE PTR [rax],al
   140067877:	add    BYTE PTR [rax+0x1400502],bl
   14006787d:	add    BYTE PTR [rax],al
   14006787f:	add    BYTE PTR [rax+0x1400502],cl
   140067885:	add    BYTE PTR [rax],al
   140067887:	add    BYTE PTR [rax+0x2],bh
   14006788a:	add    eax,0x140
   14006788f:	add    BYTE PTR [rax+0x2],ch
   140067892:	add    eax,0x140
   140067897:	add    BYTE PTR [rax+0x2],bl
   14006789a:	add    eax,0x140
   14006789f:	add    BYTE PTR [rax+0x2],cl
   1400678a2:	add    eax,0x140
   1400678a7:	add    BYTE PTR [rax],bh
   1400678a9:	add    al,BYTE PTR [rip+0x140]        # 0x1400679ef
   1400678af:	add    BYTE PTR [rax],ch
   1400678b1:	add    al,BYTE PTR [rip+0x140]        # 0x1400679f7
   1400678b7:	add    BYTE PTR [rax],bl
   1400678b9:	add    al,BYTE PTR [rip+0x140]        # 0x1400679ff
   1400678bf:	add    BYTE PTR [rax],al
   1400678c1:	add    al,BYTE PTR [rip+0x140]        # 0x140067a07
   1400678c7:	add    al,ah
   1400678c9:	add    DWORD PTR [rip+0x140],eax        # 0x140067a0f
   1400678cf:	add    al,cl
   1400678d1:	add    DWORD PTR [rip+0x140],eax        # 0x140067a17
   1400678d7:	add    BYTE PTR [rax+0x1400501],ah
   1400678dd:	add    BYTE PTR [rax],al
   1400678df:	add    BYTE PTR [rax+0x2],bh
   1400678e2:	add    eax,0x140
   1400678e7:	add    BYTE PTR [rax+0x1400501],dl
   1400678ed:	add    BYTE PTR [rax],al
   1400678ef:	add    BYTE PTR [rax+0x1],bh
   1400678f2:	add    eax,0x140
   1400678f7:	add    BYTE PTR [rax+0x1],ch
   1400678fa:	add    eax,0x140
   1400678ff:	add    BYTE PTR [rax+0x1],dl
   140067902:	add    eax,0x140
   140067907:	add    BYTE PTR [rax+0x1],al
   14006790a:	add    eax,0x140
   14006790f:	add    BYTE PTR [rax],dh
   140067911:	add    DWORD PTR [rip+0x140],eax        # 0x140067a57
   140067917:	add    BYTE PTR [rax],ah
   140067919:	add    DWORD PTR [rip+0x140],eax        # 0x140067a5f
   14006791f:	add    BYTE PTR [rax],cl
   140067921:	add    DWORD PTR [rip+0x140],eax        # 0x140067a67
   140067927:	add    BYTE PTR [rax+0x2],bh
   14006792a:	add    eax,0x140
   14006792f:	add    al,ch
   140067931:	add    BYTE PTR [rip+0x140],al        # 0x140067a77
   140067937:	add    BYTE PTR [rax+0x2],bh
   14006793a:	add    eax,0x140
   14006793f:	add    al,dl
   140067941:	add    BYTE PTR [rip+0x140],al        # 0x140067a87
   140067947:	add    BYTE PTR [rax+0x1400500],bh
   14006794d:	add    BYTE PTR [rax],al
   14006794f:	add    BYTE PTR [rax+0x1400500],bl
   140067955:	add    BYTE PTR [rax],al
   140067957:	add    BYTE PTR [rax+0x1400500],al
   14006795d:	add    BYTE PTR [rax],al
   14006795f:	add    BYTE PTR [rax+0x0],ch
   140067962:	add    eax,0x140
   140067967:	add    BYTE PTR [rax+0x2],bh
   14006796a:	add    eax,0x140
   14006796f:	add    BYTE PTR [rbx],ch
	...
   14006797d:	add    BYTE PTR [rax],al
   14006797f:	add    bh,bh
   140067981:	(bad)  
   140067982:	(bad)  
   140067983:	call   FWORD PTR [rsi]
   140067985:	add    BYTE PTR [rax],al
   140067987:	add    BYTE PTR [rbx],bh
   140067989:	add    BYTE PTR [rax],al
   14006798b:	add    BYTE PTR [rdx+0x0],bl
   14006798e:	add    BYTE PTR [rax],al
   140067990:	js     0x140067992
   140067992:	add    BYTE PTR [rax],al
   140067994:	xchg   edi,eax
   140067995:	add    BYTE PTR [rax],al
   140067997:	add    BYTE PTR [rbp-0x2c000000],dh
   14006799d:	add    BYTE PTR [rax],al
   14006799f:	add    bl,dh
   1400679a1:	add    BYTE PTR [rax],al
   1400679a3:	add    BYTE PTR [rcx],dl
   1400679a5:	add    DWORD PTR [rax],eax
   1400679a7:	add    BYTE PTR [rax],dh
   1400679a9:	add    DWORD PTR [rax],eax
   1400679ab:	add    BYTE PTR [rsi+0x1],cl
   1400679ae:	add    BYTE PTR [rax],al
   1400679b0:	ins    DWORD PTR es:[rdi],dx
   1400679b1:	add    DWORD PTR [rax],eax
   1400679b3:	add    BYTE PTR [rax],al
   1400679b5:	add    BYTE PTR [rax],al
   1400679b7:	add    bh,bh
   1400679b9:	(bad)  
   1400679ba:	(bad)  
   1400679bb:	call   FWORD PTR [rsi]
   1400679bd:	add    BYTE PTR [rax],al
   1400679bf:	add    BYTE PTR [rdx],bh
   1400679c1:	add    BYTE PTR [rax],al
   1400679c3:	add    BYTE PTR [rcx+0x0],bl
   1400679c6:	add    BYTE PTR [rax],al
   1400679c8:	ja     0x1400679ca
   1400679ca:	add    BYTE PTR [rax],al
   1400679cc:	xchg   esi,eax
   1400679cd:	add    BYTE PTR [rax],al
   1400679cf:	add    BYTE PTR [rax+rax*1+0xd30000],dh
   1400679d6:	add    BYTE PTR [rax],al
   1400679d8:	repnz add BYTE PTR [rax],al
   1400679db:	add    BYTE PTR [rax],dl
   1400679dd:	add    DWORD PTR [rax],eax
   1400679df:	add    BYTE PTR [rdi],ch
   1400679e1:	add    DWORD PTR [rax],eax
   1400679e3:	add    BYTE PTR [rbp+0x1],cl
   1400679e6:	add    BYTE PTR [rax],al
   1400679e8:	ins    BYTE PTR es:[rdi],dx
   1400679e9:	add    DWORD PTR [rax],eax
   1400679eb:	add    BYTE PTR [rdx],al
   1400679ed:	add    BYTE PTR [rax],al
   1400679ef:	add    al,ah
   1400679f1:	add    eax,0x14005
   1400679f6:	add    BYTE PTR [rax],al
   1400679f8:	loop   0x140067a01
   1400679fa:	add    eax,0x140
   1400679ff:	add    BYTE PTR [rax+0xe],al
   140067a02:	add    eax,0x140
   140067a07:	add    BYTE PTR [rsi+rcx*1],bh
   140067a0a:	add    eax,0x140
   140067a0f:	add    BYTE PTR [rax],bh
   140067a11:	(bad)  
   140067a12:	add    eax,0x140
   140067a17:	add    BYTE PTR [rsi+rcx*1],dh
   140067a1a:	add    eax,0x140
   140067a1f:	add    BYTE PTR [rax],dh
   140067a21:	(bad)  
   140067a22:	add    eax,0x140
   140067a27:	add    BYTE PTR [rsi+rcx*1],ch
   140067a2a:	add    eax,0x140
   140067a2f:	add    BYTE PTR [rax],ch
   140067a31:	(bad)  
   140067a32:	add    eax,0x140
   140067a37:	add    BYTE PTR [rax],ah
   140067a39:	(bad)  
   140067a3a:	add    eax,0x140
   140067a3f:	add    BYTE PTR [rax],bl
   140067a41:	(bad)  
   140067a42:	add    eax,0x140
   140067a47:	add    BYTE PTR [rax],dl
   140067a49:	(bad)  
   140067a4a:	add    eax,0x140
   140067a4f:	add    BYTE PTR [rax],al
   140067a51:	(bad)  
   140067a52:	add    eax,0x140
   140067a57:	add    al,dh
   140067a59:	or     eax,0x14005
   140067a5e:	add    BYTE PTR [rax],al
   140067a60:	in     al,0xd
   140067a62:	add    eax,0x140
   140067a67:	add    al,bl
   140067a69:	or     eax,0x14005
   140067a6e:	add    BYTE PTR [rax],al
   140067a70:	(bad)  
   140067a71:	or     eax,0x14005
   140067a76:	add    BYTE PTR [rax],al
   140067a78:	ror    BYTE PTR [rip+0x14005],1        # 0x14007ba83
   140067a7e:	add    BYTE PTR [rax],al
   140067a80:	int3   
   140067a81:	or     eax,0x14005
   140067a86:	add    BYTE PTR [rax],al
   140067a88:	enter  0x50d,0x40
   140067a8c:	add    DWORD PTR [rax],eax
   140067a8e:	add    BYTE PTR [rax],al
   140067a90:	(bad)  
   140067a91:	or     eax,0x14005
   140067a96:	add    BYTE PTR [rax],al
   140067a98:	ror    BYTE PTR [rip+0x14005],0x0        # 0x14007baa4
   140067a9f:	add    BYTE PTR [rbp+rcx*1+0x14005],bh
   140067aa6:	add    BYTE PTR [rax],al
   140067aa8:	mov    eax,0x140050d
   140067aad:	add    BYTE PTR [rax],al
   140067aaf:	add    BYTE PTR [rbp+rcx*1+0x14005],dh
   140067ab6:	add    BYTE PTR [rax],al
   140067ab8:	mov    al,0xd
   140067aba:	add    eax,0x140
   140067abf:	add    BYTE PTR [rbp+rcx*1+0x14005],ch
   140067ac6:	add    BYTE PTR [rax],al
   140067ac8:	test   al,0xd
   140067aca:	add    eax,0x140
   140067acf:	add    BYTE PTR [rax+0x140050d],ah
   140067ad5:	add    BYTE PTR [rax],al
   140067ad7:	add    BYTE PTR [rax+0x140050d],dl
   140067add:	add    BYTE PTR [rax],al
   140067adf:	add    BYTE PTR [rbp+rcx*1+0x14005],al
   140067ae6:	add    BYTE PTR [rax],al
   140067ae8:	jl     0x140067af7
   140067aea:	add    eax,0x140
   140067aef:	add    ah,al
   140067af1:	or     eax,0x14005
   140067af6:	add    BYTE PTR [rax],al
   140067af8:	je     0x140067b07
   140067afa:	add    eax,0x140
   140067aff:	add    BYTE PTR [rbp+rcx*1+0x5],ch
   140067b03:	rex add DWORD PTR [rax],eax
   140067b06:	add    BYTE PTR [rax],al
   140067b08:	fs or  eax,0x14005
   140067b0e:	add    BYTE PTR [rax],al
   140067b10:	pop    rax
   140067b11:	or     eax,0x14005
   140067b16:	add    BYTE PTR [rax],al
   140067b18:	push   rax
   140067b19:	or     eax,0x14005
   140067b1e:	add    BYTE PTR [rax],al
   140067b20:	rex or eax,0x14005
   140067b26:	add    BYTE PTR [rax],al
   140067b28:	xor    BYTE PTR [rip+0x14005],cl        # 0x14007bb33
   140067b2e:	add    BYTE PTR [rax],al
   140067b30:	sub    BYTE PTR [rip+0x14005],cl        # 0x14007bb3b
   140067b36:	add    BYTE PTR [rax],al
   140067b38:	and    al,0xd
   140067b3a:	add    eax,0x140
   140067b3f:	add    BYTE PTR [rax],bl
   140067b41:	or     eax,0x14005
   140067b46:	add    BYTE PTR [rax],al
   140067b48:	add    BYTE PTR [rip+0x14005],cl        # 0x14007bb53
   140067b4e:	add    BYTE PTR [rax],al
   140067b50:	lock or al,0x5
   140067b53:	rex add DWORD PTR [rax],eax
   140067b56:	add    BYTE PTR [rax],al
   140067b58:	or     DWORD PTR [rax+rax*1],eax
   140067b5b:	add    BYTE PTR [rcx],al
	...
   140067b69:	jp     0x140067b71
   140067b6b:	rex add DWORD PTR [rax],eax
   140067b6e:	add    BYTE PTR [rax],al
   140067b70:	add    DWORD PTR [rax],eax
   140067b72:	add    BYTE PTR [rax],al
   140067b74:	add    BYTE PTR cs:[rax],al
   140067b77:	add    BYTE PTR [rcx],al
	...
   140067b81:	add    al,0x0
   140067b83:	add    BYTE PTR [rcx],al
   140067b85:	cld    
   140067b86:	(bad)  
   140067b87:	push   QWORD PTR [rip+0xb000000]        # 0x14b067b8d
   140067b8d:	add    BYTE PTR [rax],al
   140067b8f:	add    BYTE PTR [rax+0x0],al
   140067b92:	add    BYTE PTR [rax],al
   140067b94:	inc    DWORD PTR [rbx]
   140067b96:	add    BYTE PTR [rax],al
   140067b98:	add    BYTE PTR [rax],0x0
   140067b9b:	add    BYTE PTR [rcx+0x18ffffff],al
   140067ba1:	add    BYTE PTR [rax],al
   140067ba3:	add    BYTE PTR [rax],cl
   140067ba5:	add    BYTE PTR [rax],al
   140067ba7:	add    BYTE PTR [rax],ah
   140067ba9:	add    BYTE PTR [rax],al
   140067bab:	add    BYTE PTR [rdi+0x0],bh
   140067bae:	add    BYTE PTR [rax],al
   140067bb0:	add    DWORD PTR [rax],eax
   140067bb2:	add    BYTE PTR [rax],al
   140067bb4:	add    BYTE PTR [rax],al
   140067bb6:	add    BYTE PTR [rax],al
   140067bb8:	(bad)  
   140067bb9:	(bad)  
   140067bba:	(bad)  
   140067bbb:	(bad)  
   140067bbc:	(bad)  
   140067bbd:	(bad)  
   140067bbe:	(bad)  
   140067bbf:	(bad)  
   140067bc0:	(bad)  
   140067bc1:	(bad)  
   140067bc2:	(bad)  
   140067bc3:	(bad)  
   140067bc4:	(bad)  
   140067bc5:	(bad)  
   140067bc6:	(bad)  
   140067bc7:	inc    DWORD PTR [rax]
	...
   140067bd9:	movabs al,ds:0x4002
   140067be2:	add    BYTE PTR [rax],al
   140067be4:	add    al,cl
   140067be6:	add    eax,0x40
   140067beb:	add    BYTE PTR [rax],al
   140067bed:	add    BYTE PTR [rax],al
   140067bef:	add    BYTE PTR [rax],al
   140067bf1:	cli    
   140067bf2:	or     BYTE PTR [rax+0x0],al
   140067bf5:	add    BYTE PTR [rax],al
   140067bf7:	add    BYTE PTR [rax],al
   140067bf9:	add    BYTE PTR [rax],al
   140067bfb:	add    BYTE PTR [rax-0x64],al
   140067bfe:	or     al,0x40
	...
   140067c08:	push   rax
   140067c09:	ret    
   140067c0a:	cmovo  eax,DWORD PTR [rax]
   140067c0d:	add    BYTE PTR [rax],al
   140067c0f:	add    BYTE PTR [rax],al
   140067c11:	add    BYTE PTR [rax],al
   140067c13:	add    BYTE PTR [rsp+rsi*8],ah
   140067c16:	adc    al,BYTE PTR [rax+0x0]
   140067c19:	add    BYTE PTR [rax],al
   140067c1b:	add    BYTE PTR [rax],al
   140067c1d:	add    BYTE PTR [rax],al
   140067c1f:	adc    BYTE PTR [rsi+0x401698],0x0
   140067c26:	add    BYTE PTR [rax],al
   140067c28:	add    BYTE PTR [rax],al
   140067c2a:	add    BYTE PTR [rax],ah
   140067c2c:	mov    esp,0x4019be
   140067c31:	add    BYTE PTR [rax],al
   140067c33:	add    BYTE PTR [rax],al
   140067c35:	add    al,0xbf
   140067c37:	leave  
   140067c38:	sbb    ecx,DWORD PTR [rsi+0x4034]
   140067c3e:	add    BYTE PTR [rcx+0x1bcecced],ah
   140067c44:	ret    0x4ed3
   140067c47:	and    al,sil
   140067c4a:	sahf   
   140067c4b:	mov    ch,0x70
   140067c4d:	sub    ebp,DWORD PTR [rax+0x699dc5ad]
   140067c53:	rex rcr BYTE PTR [rbp-0x3],1
   140067c57:	and    eax,0x4f8e1ae5
   140067c5c:	sbb    ebx,ebp
   140067c5e:	add    DWORD PTR [rax+0x71],0xffffff96
   140067c62:	xlat   BYTE PTR ds:[rbx]
   140067c63:	xchg   ebp,eax
   140067c64:	rex.XB (bad) 
   140067c66:	add    eax,0x9eaf298d
   140067c6b:	rex stc 
   140067c6d:	mov    edi,0x81ed44a0
   140067c72:	adc    cl,BYTE PTR [rdi+0x40b98281]
   140067c78:	mov    edi,0xcfa6d53c
   140067c7d:	dec    DWORD PTR [rcx+0x1f]
   140067c80:	js     0x140067c44
   140067c82:	rol    DWORD PTR [rax+0x6f],cl
   140067c85:	(bad)  
   140067c86:	loopne 0x140067c14
   140067c88:	jmp    0xfa4e460d
   140067c8d:	xchg   ebx,eax
   140067c8e:	test   al,0x41
   140067c90:	mov    esp,0x27556b85
   140067c95:	cmp    DWORD PTR [rbp+0x7ce070f7],ecx
   140067c9b:	rex.X mov esp,0xf9de8edd
   140067ca1:	popf   
   140067ca2:	sti    
   140067ca3:	jmp    0x140067d23
   140067ca5:	stos   BYTE PTR es:[rdi],al
   140067ca6:	push   rcx
   140067ca7:	rex.XB movabs eax,ds:0x842f29f2cce376e6
   140067cb1:	and    DWORD PTR [rsi],0x17102844
   140067cb7:	stos   BYTE PTR es:[rdi],al
   140067cb8:	clc    
   140067cb9:	scas   al,BYTE PTR es:[rdi]
   140067cba:	adc    bl,ah
   140067cbc:	(bad)
   140067cbf:	rex.R jmp 0x140067c69
   140067cc2:	(bad)  
   140067cc3:	repz imul ebx
   140067cc6:	loope  0x140067d12
   140067cc8:	jp     0x140067c5f
   140067cca:	iret   
   140067ccb:	rex.RB
   140067ccc:	gs int3 
   140067cce:	(bad)  
   140067ccf:	xchg   ecx,eax
   140067cd0:	(bad)  
   140067cd1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140067cd2:	scas   al,BYTE PTR es:[rdi]
   140067cd3:	movabs al,ds:0xc17650d46a3e319
   140067cdc:	jne    0x140067c5f
   140067cde:	xchg   BYTE PTR [rbp+0x76],dh
   140067ce1:	leave  
   140067ce2:	rex.W
   140067ce3:	rex.WRB pop r8
   140067ce5:	rex.X in al,0xa7
   140067ce8:	xchg   ebx,eax
   140067ce9:	cmp    DWORD PTR [rbx],edi
   140067ceb:	xor    eax,0x53edb2b8
   140067cf0:	rex.WRB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140067cf2:	in     eax,0x5d
   140067cf4:	cmp    eax,0x8b3b5dc5
   140067cf9:	sahf   
   140067cfa:	xchg   edx,eax
   140067cfb:	pop    rdx
   140067cfc:	call   FWORD PTR [rbp-0x5a]
   140067cff:	lock movabs eax,ds:0xd161378ca554c020
   140067d09:	std    
   140067d0a:	mov    ebx,DWORD PTR [rdx-0x75]
   140067d0d:	fsub   DWORD PTR [rip+0xffffffffdbf9895d]        # 0x11c000670
   140067d13:	stos   BYTE PTR es:[edi],al
   140067d15:	xchg   ebp,eax
   140067d16:	clc    
   140067d17:	repz (bad) 
   140067d19:	mov    edi,0xdd5dc8a2
   140067d1e:	sub    BYTE PTR [rsi+0x4c],0xc9
   140067d22:	fwait
   140067d23:	xchg   edi,eax
   140067d24:	and    BYTE PTR [rdx-0x3b9fadfe],cl
   140067d2a:	and    eax,0x75
   140067d2f:	add    ch,cl
   140067d31:	int3   
   140067d32:	int    0xcc
   140067d34:	int3   
   140067d35:	int3   
   140067d36:	int3   
   140067d37:	int3   
   140067d38:	int3   
   140067d39:	int3   
   140067d3a:	sti    
   140067d3b:	(bad)  
   140067d3c:	jno    0x140067d7b
   140067d3e:	or     dl,bh
   140067d40:	movabs ds:0x5a3ff8a3d70a3d70,eax
   140067d49:	fs cmp ebx,edi
   140067d4c:	rex.WRXB lea r10,[r15-0xa7ced92]
   140067d53:	(bad)  
   140067d54:	ret    
   140067d55:	shr    DWORD PTR [riz*2+0x1758e219],cl
   140067d5c:	mov    bh,0xd1
   140067d5e:	icebp  
   140067d5f:	(bad)  
   140067d60:	ror    BYTE PTR [rdi],1
   140067d62:	and    eax,DWORD PTR [rdi+rax*2-0x3a53b8e5]
   140067d69:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140067d6a:	out    dx,al
   140067d6b:	(bad)  
   140067d6c:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140067d6e:	mov    dh,0x69
   140067d70:	ins    BYTE PTR es:[rdi],dx
   140067d71:	scas   eax,DWORD PTR es:[rdi]
   140067d72:	add    eax,0xeb8637bd
   140067d77:	(bad)  
   140067d78:	xor    edi,DWORD PTR [rip+0xffffffffe57a42bc]        # 0x12580c03a
   140067d7e:	(bad)  
   140067d7f:	xchg   esp,eax
   140067d80:	mov    edi,0xc23fe7d6
   140067d85:	std    
   140067d86:	std    
   140067d87:	(bad)  
   140067d88:	(bad)  
   140067d89:	test   BYTE PTR [rcx],dl
   140067d8b:	ja     0x140067d59
   140067d8d:	stos   DWORD PTR es:[rdi],eax
   140067d8e:	in     al,0x3f
   140067d90:	(bad)  
   140067d91:	rex.WR pop rbx
   140067d93:	loope  0x140067de2
   140067d95:	(bad)  
   140067d96:	mov    esi,0xc9e69594
   140067d9b:	(bad)  
   140067d9c:	xchg   edx,eax
   140067d9d:	(bad)  
   140067d9e:	push   rbx
   140067d9f:	cmp    esi,DWORD PTR [rbp+0x44]
   140067da2:	int    0x14
   140067da4:	mov    esi,0xde3faf9a
   140067da9:	addr32 mov edx,0xad453994
   140067daf:	(bad)  
   140067db0:	mov    cl,0xcf
   140067db2:	xchg   esp,eax
   140067db3:	(bad)  
   140067db4:	and    al,0x23
   140067db6:	(bad)  
   140067db7:	loop   0x140067d75
   140067db9:	mov    edx,0x8b61313b
   140067dbe:	jp     0x140067dff
   140067dc0:	(bad)  
   140067dc1:	push   rbp
   140067dc2:	pop    rcx
   140067dc3:	sar    DWORD PTR [rsi-0x4f],0x53
   140067dc7:	jl     0x140067ddb
   140067dc9:	mov    ebx,0xeed73f5f
   140067dce:	(bad)  
   140067dcf:	lea    eax,[rsi]
   140067dd1:	mov    esi,0xfb158592
   140067dd6:	rex.R (bad) 
   140067dd8:	and    al,0x3f
   140067dda:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140067ddb:	jmp    0x12a2e2319
   140067de0:	jg     0x140067d8a
   140067de2:	sub    bh,BYTE PTR [rdi]
   140067de4:	jge    0x140067d92
   140067de6:	movabs eax,ds:0x55ddd0467c64bce4
   140067def:	movsxd edi,DWORD PTR ds:[rbx+0x6]
   140067df3:	int3   
   140067df4:	and    edx,DWORD PTR [rdi+rsi*2-0x7d]
   140067df8:	call   QWORD PTR [rcx-0x56ec27f]
   140067dfe:	cmp    bl,BYTE PTR [rcx]
   140067e00:	jp     0x140067e65
   140067e02:	and    eax,0xacc03143
   140067e07:	cmp    al,0x21
   140067e09:	mov    ecx,edx
   140067e0b:	cmp    BYTE PTR [rdx+0xb89747],al
   140067e11:	std    
   140067e12:	xlat   BYTE PTR ds:[rbx]
   140067e13:	cmp    ebx,esp
   140067e15:	mov    BYTE PTR [rax+0x8],bl
   140067e18:	sbb    esi,DWORD PTR [rcx-0x59791c18]
   140067e1e:	add    edi,DWORD PTR [rbx]
   140067e20:	mov    BYTE PTR [rbp+rax*2-0x6649f8be],0x75
   140067e28:	(bad)  
   140067e29:	fld    TBYTE PTR [rsi]
   140067e2b:	cmp    dh,BYTE PTR [rbx]
   140067e2d:	jno    0x140067e4b
   140067e2f:	shl    BYTE PTR [rbx],cl
   140067e31:	(bad)  [rdx]
   140067e33:	out    dx,al
   140067e34:	xchg   r8,rax
   140067e36:	pop    rdx
   140067e37:	cmp    DWORD PTR [rsi+0x57c0be87],esp
   140067e3d:	fisub  DWORD PTR [rbp-0x4a5d597e]
   140067e43:	xor    ah,dl
   140067e45:	push   0x52a711b2
   140067e4a:	lahf   
   140067e4b:	rex.R pop rcx
   140067e4d:	mov    bh,0x10
   140067e4f:	sub    al,0x25
   140067e51:	rex.WB in al,0x2d
   140067e54:	ss xor al,0x4f
   140067e57:	push   rbx
   140067e58:	scas   al,BYTE PTR es:[rdi]
   140067e59:	(bad)  
   140067e5a:	imul   esp,DWORD PTR [rip+0xffffffffa404598f],0xffffffc0        # 0xe40ad7f0
   140067e61:	faddp  st(2),st
   140067e63:	jge    0x140067e60
   140067e65:	call   0x127a49d30
   140067e6a:	mov    BYTE PTR [rdx+0x57],bl
   140067e6d:	xchg   ecx,eax
   140067e6e:	cmp    al,0xbf
   140067e70:	push   rax
   140067e71:	and    DWORD PTR [rdx],0x18
   140067e74:	rex.WRX
   140067e75:	rex.WXB
   140067e76:	gs (bad) 
   140067e78:	std    
   140067e79:	or     DWORD PTR [rdi+0x7d9406af],0x11
   140067e80:	in     al,0x2d
   140067e82:	ficomp WORD PTR [rdi+0x4c8d2ce]
   140067e88:	frstor [rsi+0xad8]
   140067e8e:	add    BYTE PTR [rax],al
   140067e90:	js     0x140067ea0
   140067e92:	add    eax,0x140
   140067e97:	add    bh,bh
   140067e99:	(bad)  
   140067e9a:	(bad)  
   140067e9b:	inc    DWORD PTR [rax+0x0]
	...

Disassembly of section .pdata:

000000014006c000 <.pdata>:
   14006c000:	add    BYTE PTR [rax],dl
   14006c002:	add    BYTE PTR [rax],al
   14006c004:	rex.XB adc BYTE PTR [r8],al
   14006c007:	add    BYTE PTR [rax],cl
   14006c009:	sbb    BYTE PTR [rip+0x105000],al        # 0x14017100f
   14006c00f:	add    BYTE PTR [rax+0x8000010],ah
   14006c015:	sbb    BYTE PTR [rip+0x110000],al        # 0x14017c01b
   14006c01b:	add    bl,dl
   14006c01d:	adc    DWORD PTR [rax],eax
   14006c01f:	add    BYTE PTR [rax-0x1ffffae4],ch
   14006c025:	adc    DWORD PTR [rax],eax
   14006c027:	add    ch,dl
   14006c029:	adc    al,BYTE PTR [rax]
   14006c02b:	add    BYTE PTR [rax],dl
   14006c02d:	sbb    BYTE PTR [rip+0x12e000],al        # 0x14019a033
   14006c033:	add    ch,bl
   14006c035:	adc    eax,DWORD PTR [rax]
   14006c037:	add    BYTE PTR [rax+rbx*1],ah
   14006c03a:	add    eax,0x13e000
   14006c03f:	add    BYTE PTR [rbx],ah
   14006c041:	adc    al,0x0
   14006c043:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006c047:	add    BYTE PTR [rax],dh
   14006c049:	adc    al,0x0
   14006c04b:	add    BYTE PTR [rdi+0x3c000015],ch
   14006c051:	sbb    BYTE PTR [rip+0x15b000],al        # 0x1401c7057
   14006c057:	add    cl,cl
   14006c059:	(bad)  
   14006c05a:	add    BYTE PTR [rax],al
   14006c05c:	(bad)  
   14006c05d:	rex.R add eax,0x16d000
   14006c063:	add    BYTE PTR [rdx+0x58000017],dl
   14006c069:	sbb    BYTE PTR [rip+0x17a000],al        # 0x1401e606f
   14006c06f:	add    bh,bl
   14006c071:	(bad)  
   14006c072:	add    BYTE PTR [rax],al
   14006c074:	cwde   
   14006c075:	sub    al,BYTE PTR [rip+0x17df00]        # 0x1401e9f7b
   14006c07b:	add    BYTE PTR [rcx-0x7bffffe8],dl
   14006c081:	sbb    BYTE PTR [rip+0x189100],al        # 0x1401f5187
   14006c087:	add    bh,ch
   14006c089:	sbb    BYTE PTR [rax],al
   14006c08b:	add    BYTE PTR [rax+rbx*1+0x5],dh
   14006c08f:	add    al,dh
   14006c091:	sbb    BYTE PTR [rax],al
   14006c093:	add    BYTE PTR [rdx+rbx*1],al
   14006c096:	add    BYTE PTR [rax],al
   14006c098:	cwde   
   14006c099:	sbb    BYTE PTR [rip+0x1a1000],al        # 0x14020d09f
   14006c09f:	add    BYTE PTR [rip+0xfffffffffc00001a],bh        # 0x13c06c0bf
   14006c0a5:	cmp    BYTE PTR [rip+0x1a3d00],al        # 0x14020fdab
   14006c0ab:	add    BYTE PTR [rax-0x3fffffe6],dl
   14006c0b1:	sbb    BYTE PTR [rip+0x1a9000],al        # 0x1402150b7
   14006c0b7:	add    BYTE PTR [rdi-0x4fffffe6],ch
   14006c0bd:	sbb    BYTE PTR [rip+0x1ab000],al        # 0x1402170c3
   14006c0c3:	add    BYTE PTR [rbx+rbx*1+0x0],bh
   14006c0c7:	add    al,bl
   14006c0c9:	sbb    BYTE PTR [rip+0x1b8000],al        # 0x1402240cf
   14006c0cf:	add    ah,al
   14006c0d1:	sbb    eax,DWORD PTR [rax]
   14006c0d3:	add    BYTE PTR [rsi+riz*1+0x5],bl
   14006c0d7:	add    al,dl
   14006c0d9:	sbb    eax,DWORD PTR [rax]
   14006c0db:	add    BYTE PTR [rax],dl
   14006c0dd:	sbb    al,0x0
   14006c0df:	add    BYTE PTR [rax],bl
   14006c0e1:	sbb    DWORD PTR [rip+0x1c1000],eax        # 0x14022d0e7
   14006c0e7:	add    al,dl
   14006c0e9:	sbb    eax,0x18f40000
   14006c0ee:	add    eax,0x1dd000
   14006c0f3:	add    ah,ah
   14006c0f5:	sbb    eax,0x18e40000
   14006c0fa:	add    eax,0x1df000
   14006c0ff:	add    BYTE PTR [rbx+0x2c00001f],dh
   14006c105:	sbb    DWORD PTR [rip+0x1fc000],eax        # 0x14026810b
   14006c10b:	add    BYTE PTR [rbx],cl
   14006c10d:	and    BYTE PTR [rax],al
   14006c10f:	add    al,bl
   14006c111:	(bad)  
   14006c112:	add    eax,0x200b00
   14006c117:	add    BYTE PTR [rax+riz*1+0x19600000],al
   14006c11e:	add    eax,0x208400
   14006c123:	add    BYTE PTR [rcx+0x4c000020],ch
   14006c129:	sbb    DWORD PTR [rip+0x20b000],eax        # 0x14027712f
   14006c12f:	add    BYTE PTR [rax+0x21],ch
   14006c132:	add    BYTE PTR [rax],al
   14006c134:	cwde   
   14006c135:	sbb    DWORD PTR [rip+0x216800],eax        # 0x14028293b
   14006c13b:	add    bh,bl
   14006c13d:	and    DWORD PTR [rax],eax
   14006c13f:	add    BYTE PTR [rcx+rbx*1+0x21df0005],al
   14006c146:	add    BYTE PTR [rax],al
   14006c148:	cmp    al,0x22
   14006c14a:	add    BYTE PTR [rax],al
   14006c14c:	je     0x14006c167
   14006c14e:	add    eax,0x224000
   14006c153:	add    bl,cl
   14006c155:	and    al,BYTE PTR [rax]
   14006c157:	add    BYTE PTR [rax],al
   14006c159:	sbb    al,BYTE PTR [rip+0x22cb00]        # 0x140298c5f
   14006c15f:	add    dh,ah
   14006c161:	and    al,BYTE PTR [rax]
   14006c163:	add    al,ch
   14006c165:	sbb    DWORD PTR [rip+0x22e600],eax        # 0x14029a76b
   14006c16b:	add    BYTE PTR [rdi-0x2bffffdd],dl
   14006c171:	sbb    DWORD PTR [rip+0x239700],eax        # 0x1402a5877
   14006c177:	add    cl,ah
   14006c179:	and    al,0x0
   14006c17b:	add    ah,al
   14006c17d:	sbb    DWORD PTR [rip+0x24e100],eax        # 0x1402ba283
   14006c183:	add    ah,bh
   14006c185:	and    al,0x0
   14006c187:	add    BYTE PTR [rcx+rbx*1+0x25000005],dh
   14006c18e:	add    BYTE PTR [rax],al
   14006c190:	xchg   esi,eax
   14006c191:	and    eax,0x1a3c0000
   14006c196:	add    eax,0x259600
   14006c19b:	add    BYTE PTR [rbx+0x28000027],bl
   14006c1a1:	sbb    al,BYTE PTR [rip+0x279b00]        # 0x1402e5ca7
   14006c1a7:	add    BYTE PTR [rsi+0x18000027],dh
   14006c1ad:	sbb    al,BYTE PTR [rip+0x27c000]        # 0x1402e81b3
   14006c1b3:	add    BYTE PTR [rdi+0x28],al
   14006c1b6:	add    BYTE PTR [rax],al
   14006c1b8:	clc    
   14006c1b9:	sub    BYTE PTR [rip+0x285000],al        # 0x1402f11bf
   14006c1bf:	add    BYTE PTR [rbx+0x54000028],cl
   14006c1c5:	sbb    al,BYTE PTR [rip+0x289000]        # 0x1402f51cb
   14006c1cb:	add    BYTE PTR [rbp+0x54000028],ch
   14006c1d1:	sbb    al,BYTE PTR [rip+0x28b000]        # 0x1402f71d7
   14006c1d7:	add    BYTE PTR [rdi],al
   14006c1d9:	sub    DWORD PTR [rax],eax
   14006c1db:	add    al,bh
   14006c1dd:	rex.R add eax,0x291000
   14006c1e3:	add    BYTE PTR [rcx-0x7ffffd7],al
   14006c1e9:	rex.R add eax,0x299000
   14006c1ef:	add    ch,dl
   14006c1f1:	sub    DWORD PTR [rax],eax
   14006c1f3:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006c1f7:	add    al,ah
   14006c1f9:	sub    DWORD PTR [rax],eax
   14006c1fb:	add    al,cl
   14006c1fd:	sub    al,BYTE PTR [rax]
   14006c1ff:	add    BYTE PTR [rdx+rbx*1+0x5],bl
   14006c203:	add    al,dl
   14006c205:	sub    al,BYTE PTR [rax]
   14006c207:	add    BYTE PTR [rdx+0x2b],cl
   14006c20a:	add    BYTE PTR [rax],al
   14006c20c:	pop    rsp
   14006c20d:	(bad)  
   14006c20e:	add    eax,0x2b4a00
   14006c213:	add    BYTE PTR [rax],dl
   14006c215:	sub    al,0x0
   14006c217:	add    BYTE PTR [rdx+rbx*1+0x2c100005],al
   14006c21e:	add    BYTE PTR [rax],al
   14006c220:	ds sub al,0x0
   14006c223:	add    BYTE PTR [rdx+rbx*1+0x5],dh
   14006c227:	add    BYTE PTR [rax+0x2c],al
   14006c22a:	add    BYTE PTR [rax],al
   14006c22c:	and    al,0x2d
   14006c22e:	add    BYTE PTR [rax],al
   14006c230:	add    al,0x45
   14006c232:	add    eax,0x2d2400
   14006c237:	add    BYTE PTR [rax],dl
   14006c239:	add    BYTE PTR cs:[rax],al
   14006c23c:	test   al,0x1a
   14006c23e:	add    eax,0x2e1000
   14006c243:	add    BYTE PTR [rsi],bh
   14006c245:	add    BYTE PTR cs:[rax],al
   14006c248:	cwde   
   14006c249:	sbb    al,BYTE PTR [rip+0x2e4000]        # 0x14035024f
   14006c24f:	add    BYTE PTR [rdx+0x2f],ah
   14006c252:	add    BYTE PTR [rax],al
   14006c254:	rcr    BYTE PTR [rdx],0x5
   14006c257:	add    BYTE PTR [rax+0x2f],dh
   14006c25a:	add    BYTE PTR [rax],al
   14006c25c:	(bad)  
   14006c25d:	(bad)  
   14006c25e:	add    BYTE PTR [rax],al
   14006c260:	cld    
   14006c261:	sbb    al,BYTE PTR [rip+0x2f8200]        # 0x140364467
   14006c267:	add    BYTE PTR [rax+rsi*1],cl
   14006c26a:	add    BYTE PTR [rax],al
   14006c26c:	in     al,0x1a
   14006c26e:	add    eax,0x300c00
   14006c273:	add    BYTE PTR [rbx],bh
   14006c275:	xor    BYTE PTR [rax],al
   14006c277:	add    ah,dl
   14006c279:	sbb    al,BYTE PTR [rip+0x304000]        # 0x14037027f
   14006c27f:	add    dh,ah
   14006c281:	xor    BYTE PTR [rax],al
   14006c283:	add    BYTE PTR [rbx+rbx*1],dh
   14006c286:	add    eax,0x30e600
   14006c28b:	add    BYTE PTR [rbx],cl
   14006c28d:	xor    DWORD PTR [rax],eax
   14006c28f:	add    BYTE PTR [rax],ah
   14006c291:	sbb    eax,DWORD PTR [rip+0x310b00]        # 0x14037cd97
   14006c297:	add    BYTE PTR [rbx],dh
   14006c299:	xor    DWORD PTR [rax],eax
   14006c29b:	add    BYTE PTR [rax],dl
   14006c29d:	sbb    eax,DWORD PTR [rip+0x314000]        # 0x1403802a3
   14006c2a3:	add    BYTE PTR [rcx+rcx*2],bh
   14006c2a6:	add    BYTE PTR [rax],al
   14006c2a8:	sbb    rax,QWORD PTR [rip+0x494000]        # 0x1405002af
   14006c2af:	add    BYTE PTR [rdi+0x49],ah
   14006c2b2:	add    BYTE PTR [rax],al
   14006c2b4:	loopne 0x14006c2d1
   14006c2b6:	add    eax,0x496700
   14006c2bb:	add    bl,ah
   14006c2bd:	rex.WX add BYTE PTR [rax],al
   14006c2c0:	mov    esp,0xe300051b
   14006c2c5:	rex.WX add BYTE PTR [rax],al
   14006c2c8:	mov    ebp,0xa8000085
   14006c2cd:	sbb    eax,DWORD PTR [rip+0x85bd00]        # 0x1408c7fd3
   14006c2d3:	add    ch,dh
   14006c2d5:	test   DWORD PTR [rax],eax
   14006c2d7:	add    BYTE PTR [rax-0xafffae5],bl
   14006c2dd:	test   DWORD PTR [rax],eax
   14006c2df:	add    BYTE PTR [rsi+rax*4+0x0],cl
   14006c2e3:	add    BYTE PTR [rax+0x4c00051b],cl
   14006c2e9:	xchg   BYTE PTR [rax],al
   14006c2eb:	add    BYTE PTR [rdi],ch
   14006c2ed:	xchg   DWORD PTR [rax],eax
   14006c2ef:	add    BYTE PTR [rax+0x1b],ah
   14006c2f2:	add    eax,0x873000
   14006c2f7:	add    BYTE PTR [rcx-0xbffff79],ch
   14006c2fd:	sbb    eax,DWORD PTR [rip+0x87b000]        # 0x1408e7303
   14006c303:	add    al,bl
   14006c305:	xchg   DWORD PTR [rax],eax
   14006c307:	add    BYTE PTR [rax],bh
   14006c309:	sbb    al,0x5
   14006c30b:	add    al,bl
   14006c30d:	xchg   DWORD PTR [rax],eax
   14006c30f:	add    BYTE PTR [rax-0x77],bl
   14006c312:	add    BYTE PTR [rax],al
   14006c314:	sbb    al,0x1c
   14006c316:	add    eax,0x895800
   14006c31b:	add    BYTE PTR [rsi-0x77],ch
   14006c31e:	add    BYTE PTR [rax],al
   14006c320:	or     al,0x1c
   14006c322:	add    eax,0x897000
   14006c327:	add    BYTE PTR [rbp+0x4800008a],cl
   14006c32d:	sbb    al,0x5
   14006c32f:	add    BYTE PTR [rax-0x49ffff76],dl
   14006c335:	mov    al,BYTE PTR [rax]
   14006c337:	add    BYTE PTR [rdi+riz*1+0x5],ah
   14006c33b:	add    al,dl
   14006c33d:	mov    al,BYTE PTR [rax]
   14006c33f:	add    bh,bh
   14006c341:	mov    al,BYTE PTR [rax]
   14006c343:	add    BYTE PTR [rax-0xfffae4],al
   14006c349:	mov    al,BYTE PTR [rax]
   14006c34b:	add    BYTE PTR [rbx+rcx*4+0x0],dl
   14006c34f:	add    BYTE PTR [rsp+rbx*1+0x5],ch
   14006c353:	add    BYTE PTR [rbx+rcx*4+0x0],dl
   14006c357:	add    BYTE PTR [rsi-0x75],ch
   14006c35a:	add    BYTE PTR [rax],al
   14006c35c:	pop    rsp
   14006c35d:	sbb    al,0x5
   14006c35f:	add    BYTE PTR [rax-0x75],dh
   14006c362:	add    BYTE PTR [rax],al
   14006c364:	(bad)  
   14006c365:	mov    WORD PTR [rax],es
   14006c367:	add    BYTE PTR [rax+0x44],ah
   14006c36a:	add    eax,0x8c2000
   14006c36f:	add    BYTE PTR [rbp-0x5fffff74],cl
   14006c375:	rex.R add eax,0x8c9000
   14006c37b:	add    BYTE PTR [rbp+rcx*4+0x0],dl
   14006c37f:	add    BYTE PTR [rax+0x6000051c],dl
   14006c385:	lea    eax,[rax]
   14006c387:	add    BYTE PTR [rbx-0x7ffff73],ah
   14006c38d:	rex.R add eax,0x8db000
   14006c393:	add    BYTE PTR [rsi+rcx*4+0x0],bh
   14006c397:	add    BYTE PTR [rax-0x7ffffae4],ch
   14006c39d:	mov    es,WORD PTR [rax]
   14006c39f:	add    BYTE PTR [rbp-0x43ffff71],bl
   14006c3a5:	sbb    al,0x5
   14006c3a7:	add    BYTE PTR [rax-0x24ffff71],ah
   14006c3ad:	pop    QWORD PTR [rax]
   14006c3af:	add    al,bh
   14006c3b1:	sbb    al,0x5
   14006c3b3:	add    bl,bl
   14006c3b5:	pop    QWORD PTR [rax]
   14006c3b7:	add    BYTE PTR [rbx],al
   14006c3b9:	nop
   14006c3ba:	add    BYTE PTR [rax],al
   14006c3bc:	in     al,0x1c
   14006c3be:	add    eax,0x900300
   14006c3c3:	add    BYTE PTR [rbx-0x70],cl
   14006c3c6:	add    BYTE PTR [rax],al
   14006c3c8:	(bad)  
   14006c3c9:	sbb    al,0x5
   14006c3cb:	add    BYTE PTR [rax-0x70],dl
   14006c3ce:	add    BYTE PTR [rax],al
   14006c3d0:	xchg   DWORD PTR [rax+0x1d280000],edx
   14006c3d6:	add    eax,0x908700
   14006c3db:	add    BYTE PTR [rdi+0x14000090],ch
   14006c3e1:	sbb    eax,0x90af0005
   14006c3e6:	add    BYTE PTR [rax],al
   14006c3e8:	in     eax,dx
   14006c3e9:	nop
   14006c3ea:	add    BYTE PTR [rax],al
   14006c3ec:	add    al,0x1d
   14006c3ee:	add    eax,0x90f000
   14006c3f3:	add    BYTE PTR [rdi],ah
   14006c3f5:	xchg   ecx,eax
   14006c3f6:	add    BYTE PTR [rax],al
   14006c3f8:	sub    BYTE PTR [rip+0xffffffff91270005],bl        # 0xd12dc403
   14006c3fe:	add    BYTE PTR [rax],al
   14006c400:	rex.WRXB xchg r9,rax
   14006c402:	add    BYTE PTR [rax],al
   14006c404:	sbb    rax,0xffffffff914f0005
   14006c40a:	add    BYTE PTR [rax],al
   14006c40c:	lea    edx,[rcx+0x1d380000]
   14006c412:	add    eax,0x919000
   14006c417:	add    bh,cl
   14006c419:	xchg   ecx,eax
   14006c41a:	add    BYTE PTR [rax],al
   14006c41c:	clc    
   14006c41d:	rex.R add eax,0x91d000
   14006c423:	add    BYTE PTR [rdi],al
   14006c425:	xchg   edx,eax
   14006c426:	add    BYTE PTR [rax],al
   14006c428:	clc    
   14006c429:	rex.R add eax,0x921000
   14006c42f:	add    BYTE PTR [rip+0x5c000092],dh        # 0x19c06c4c7
   14006c435:	(bad)  
   14006c436:	add    eax,0x924000
   14006c43b:	add    BYTE PTR [rdi+0x14000092],ch
   14006c441:	rex.X add eax,0x92b000
   14006c447:	add    BYTE PTR [rdi],bl
   14006c449:	xchg   ebx,eax
   14006c44a:	add    BYTE PTR [rax],al
   14006c44c:	adc    al,0x42
   14006c44e:	add    eax,0x932000
   14006c453:	add    BYTE PTR [rbx+0x60000093],ch
   14006c459:	rex.R add eax,0x93b000
   14006c45f:	add    BYTE PTR [rdx-0x6c],dl
   14006c462:	add    BYTE PTR [rax],al
   14006c464:	pop    rsp
   14006c465:	sbb    eax,0x94600005
   14006c46a:	add    BYTE PTR [rax],al
   14006c46c:	sti    
   14006c46d:	xchg   esp,eax
   14006c46e:	add    BYTE PTR [rax],al
   14006c470:	adc    al,0x42
   14006c472:	add    eax,0x950000
   14006c477:	add    BYTE PTR [rdx+0x5c000095],ah
   14006c47d:	sbb    eax,0x95b00005
   14006c482:	add    BYTE PTR [rax],al
   14006c484:	(bad)  
   14006c485:	xchg   esi,eax
   14006c486:	add    BYTE PTR [rax],al
   14006c488:	cwde   
   14006c489:	sbb    eax,0x96070005
   14006c48e:	add    BYTE PTR [rax],al
   14006c490:	jp     0x14006c42a
   14006c492:	add    BYTE PTR [rax],al
   14006c494:	jl     0x14006c4b3
   14006c496:	add    eax,0x987a00
   14006c49b:	add    BYTE PTR [rax+0x6c000098],bl
   14006c4a1:	sbb    eax,0x98a00005
   14006c4a6:	add    BYTE PTR [rax],al
   14006c4a8:	imul   ebx,DWORD PTR [rcx+0x1db40000],0x5
   14006c4af:	add    BYTE PTR [rax-0x67],dh
   14006c4b2:	add    BYTE PTR [rax],al
   14006c4b4:	pop    rsi
   14006c4b5:	(bad)  
   14006c4b6:	add    BYTE PTR [rax],al
   14006c4b8:	mov    ah,0x1d
   14006c4ba:	add    eax,0x9a6000
   14006c4bf:	add    BYTE PTR [rbp-0x37ffff65],al
   14006c4c5:	sbb    eax,0x9b900005
   14006c4ca:	add    BYTE PTR [rax],al
   14006c4cc:	movsxd ebx,DWORD PTR [rax+rax*1+0x51db400]
   14006c4d3:	add    BYTE PTR [rax-0x64],dh
   14006c4d6:	add    BYTE PTR [rax],al
   14006c4d8:	fwait
   14006c4d9:	pushf  
   14006c4da:	add    BYTE PTR [rax],al
   14006c4dc:	pop    rsp
   14006c4dd:	(bad)  
   14006c4de:	add    eax,0x9ca000
   14006c4e3:	add    bl,cl
   14006c4e5:	pushf  
   14006c4e6:	add    BYTE PTR [rax],al
   14006c4e8:	pop    rsp
   14006c4e9:	(bad)  
   14006c4ea:	add    eax,0x9cd000
   14006c4ef:	add    BYTE PTR [rbx*4+0x44f80000],cl
   14006c4f6:	add    eax,0x9d1000
   14006c4fb:	add    BYTE PTR [rdi],dh
   14006c4fd:	popf   
   14006c4fe:	add    BYTE PTR [rax],al
   14006c500:	pop    rsp
   14006c501:	es add eax,0x9d4000
   14006c507:	add    BYTE PTR [rdi-0x63],ah
   14006c50a:	add    BYTE PTR [rax],al
   14006c50c:	lods   al,BYTE PTR ds:[rsi]
   14006c50d:	cs add eax,0x9d6700
   14006c513:	add    BYTE PTR [rbp+rbx*4+0x1df00000],bh
   14006c51a:	add    eax,0x9dbc00
   14006c51f:	add    cl,cl
   14006c521:	popf   
   14006c522:	add    BYTE PTR [rax],al
   14006c524:	fcomp  QWORD PTR [rip+0xffffffff9dd00005]        # 0xddd6c52f
   14006c52a:	add    BYTE PTR [rax],al
   14006c52c:	xchg   edi,eax
   14006c52d:	sahf   
   14006c52e:	add    BYTE PTR [rax],al
   14006c530:	(bad)  
   14006c531:	rex.R add eax,0x9ea000
   14006c537:	add    BYTE PTR [rsi-0x61],al
   14006c53a:	add    BYTE PTR [rax],al
   14006c53c:	add    al,0x1e
   14006c53e:	add    eax,0x9f5000
   14006c543:	add    BYTE PTR [rdi-0x61],ah
   14006c546:	add    BYTE PTR [rax],al
   14006c548:	rex.R (bad) 
   14006c54a:	add    eax,0x9f6700
   14006c54f:	add    dh,ah
   14006c551:	lahf   
   14006c552:	add    BYTE PTR [rax],al
   14006c554:	sub    BYTE PTR [rsi],bl
   14006c556:	add    eax,0x9fe600
   14006c55b:	add    cl,dh
   14006c55d:	lahf   
   14006c55e:	add    BYTE PTR [rax],al
   14006c560:	sbb    BYTE PTR [rsi],bl
   14006c562:	add    eax,0xa00000
   14006c567:	add    BYTE PTR [rcx+0x600000a0],bl
   14006c56d:	rex.R add eax,0xa0a000
   14006c573:	add    dh,bh
   14006c575:	movabs al,ds:0xa100000544600000
   14006c57e:	add    BYTE PTR [rax],al
   14006c580:	call   0xc406c626
   14006c585:	xor    al,0x5
   14006c587:	add    al,dh
   14006c589:	movabs eax,ds:0x28440000a2100000
   14006c592:	add    eax,0xa21000
   14006c597:	add    BYTE PTR [rdi],dh
   14006c599:	movabs ds:0xa23700051e740000,al
   14006c5a2:	add    BYTE PTR [rax],al
   14006c5a4:	pop    rbp
   14006c5a5:	movabs ds:0xa25d00051e600000,al
   14006c5ae:	add    BYTE PTR [rax],al
   14006c5b0:	movsxd esp,DWORD PTR [rdx+0x1e500000]
   14006c5b6:	add    eax,0xa27000
   14006c5bb:	add    BYTE PTR [rdx+riz*4+0x265c0000],al
   14006c5c2:	add    eax,0xa2a000
   14006c5c7:	add    ch,al
   14006c5c9:	movabs ds:0xa2d00005375c0000,al
   14006c5d2:	add    BYTE PTR [rax],al
   14006c5d4:	or     esp,DWORD PTR [rbx+0x44600000]
   14006c5da:	add    eax,0xa31000
   14006c5df:	add    BYTE PTR [rbx+riz*4+0x44f80000],al
   14006c5e6:	add    eax,0xa39000
   14006c5eb:	add    BYTE PTR [rsp+riz*4],dl
   14006c5ee:	add    BYTE PTR [rax],al
   14006c5f0:	mov    BYTE PTR [rsi],bl
   14006c5f2:	add    eax,0xa42000
   14006c5f7:	add    BYTE PTR [rbp-0x5c],ah
   14006c5fa:	add    BYTE PTR [rax],al
   14006c5fc:	clc    
   14006c5fd:	rex.R add eax,0xa47000
   14006c603:	add    BYTE PTR [rbp+riz*4+0x1e9c0000],ah
   14006c60a:	add    eax,0xa5b000
   14006c60f:	add    ch,dh
   14006c611:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006c612:	add    BYTE PTR [rax],al
   14006c614:	mov    eax,0x51e
   14006c619:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006c61a:	add    BYTE PTR [rax],al
   14006c61c:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14006c61e:	add    BYTE PTR [rax],al
   14006c620:	pop    rsp
   14006c621:	(bad)  
   14006c622:	add    eax,0xa75000
   14006c627:	add    BYTE PTR [rcx+rbp*4],ah
   14006c62a:	add    BYTE PTR [rax],al
   14006c62c:	rcr    BYTE PTR [rsi],1
   14006c62e:	add    eax,0xa93000
   14006c633:	add    dh,dl
   14006c635:	test   eax,0x1ca80000
   14006c63a:	add    eax,0xa9e000
   14006c63f:	add    BYTE PTR [rsi-0x57ffff56],al
   14006c645:	sbb    al,0x5
   14006c647:	add    BYTE PTR [rax+0x230000aa],dl
   14006c64d:	stos   DWORD PTR es:[rdi],eax
   14006c64e:	add    BYTE PTR [rax],al
   14006c650:	adc    al,0x42
   14006c652:	add    eax,0xab3000
   14006c657:	add    al,bl
   14006c659:	stos   DWORD PTR es:[rdi],eax
   14006c65a:	add    BYTE PTR [rax],al
   14006c65c:	rex
   14006c65d:	rex.X add eax,0xabe000
   14006c663:	add    BYTE PTR [rsi-0xfffff54],bl
   14006c669:	(bad)  
   14006c66a:	add    eax,0xaca000
   14006c66f:	add    dl,al
   14006c671:	lods   al,BYTE PTR ds:[rsi]
   14006c672:	add    BYTE PTR [rax],al
   14006c674:	sub    al,0x1f
   14006c676:	add    eax,0xacc200
   14006c67b:	add    BYTE PTR [rdi],ah
   14006c67d:	lods   eax,DWORD PTR ds:[rsi]
   14006c67e:	add    BYTE PTR [rax],al
   14006c680:	sbb    BYTE PTR [rdi],bl
   14006c682:	add    eax,0xad2700
   14006c687:	add    BYTE PTR [rdi-0x53],al
   14006c68a:	add    BYTE PTR [rax],al
   14006c68c:	or     BYTE PTR [rdi],bl
   14006c68e:	add    eax,0xad5000
   14006c693:	add    BYTE PTR [rbx],ch
   14006c695:	scas   al,BYTE PTR es:[rdi]
   14006c696:	add    BYTE PTR [rax],al
   14006c698:	cmp    al,0x1f
   14006c69a:	add    eax,0xae3000
   14006c69f:	add    BYTE PTR [rdi+rbp*4+0x0],ch
   14006c6a3:	add    BYTE PTR [rdi+rbx*1+0x5],cl
   14006c6a7:	add    BYTE PTR [rax-0x51],dh
   14006c6aa:	add    BYTE PTR [rax],al
   14006c6ac:	xor    BYTE PTR [rax+0x1f640000],0x5
   14006c6b3:	add    BYTE PTR [rax+0xb0000b0],al
   14006c6b9:	mov    bh,0x0
   14006c6bb:	add    BYTE PTR [rdi+rbx*1+0x5],bh
   14006c6bf:	add    BYTE PTR [rax],dl
   14006c6c1:	mov    bh,0x0
   14006c6c3:	add    BYTE PTR [rdi+0x140000b7],cl
   14006c6c9:	and    BYTE PTR [rip+0xb7a000],al        # 0x140be66cf
   14006c6cf:	add    BYTE PTR [rbx-0x48],ch
   14006c6d2:	add    BYTE PTR [rax],al
   14006c6d4:	ins    BYTE PTR es:[rdi],dx
   14006c6d5:	(bad)  
   14006c6d6:	add    eax,0xb8c000
   14006c6db:	add    BYTE PTR [rcx],ch
   14006c6dd:	mov    ecx,0x28440000
   14006c6e2:	add    eax,0xb93000
   14006c6e7:	add    BYTE PTR [rax-0x6bffff47],cl
   14006c6ed:	(bad)  
   14006c6ee:	add    eax,0xb99000
   14006c6f3:	add    BYTE PTR [rax-0x46],bl
   14006c6f6:	add    BYTE PTR [rax],al
   14006c6f8:	movabs al,ds:0x850000ba6000051f
   14006c701:	mov    edx,0x1fd80000
   14006c706:	add    eax,0xba8500
   14006c70b:	add    BYTE PTR [rbx-0x3bffff46],dh
   14006c711:	(bad)  
   14006c712:	add    eax,0xbab300
   14006c717:	add    dl,ch
   14006c719:	mov    edx,0x1fb00000
   14006c71e:	add    eax,0xbaf000
   14006c723:	add    BYTE PTR [rsi-0x43],dl
   14006c726:	add    BYTE PTR [rax],al
   14006c728:	in     al,0x1f
   14006c72a:	add    eax,0xbd6000
   14006c72f:	add    BYTE PTR [rcx-0x42],dh
   14006c732:	add    BYTE PTR [rax],al
   14006c734:	add    BYTE PTR [rax],ah
   14006c736:	add    eax,0xbe8000
   14006c73b:	add    BYTE PTR [rcx-0x41],cl
   14006c73e:	add    BYTE PTR [rax],al
   14006c740:	adc    al,0x20
   14006c742:	add    eax,0xbf7000
   14006c747:	add    cl,bl
   14006c749:	mov    edi,0x44600000
   14006c74e:	add    eax,0xbfe000
   14006c753:	add    BYTE PTR [rdi],bl
   14006c755:	rol    BYTE PTR [rax],0x0
   14006c758:	rex.W and BYTE PTR [rip+0xc01f00],al        # 0x140c6e65f
   14006c75f:	add    BYTE PTR [rsi+0x340000c0],cl
   14006c765:	and    BYTE PTR [rip+0xc08e00],al        # 0x140c7556b
   14006c76b:	add    BYTE PTR [rdi+0x240000c0],bh
   14006c771:	and    BYTE PTR [rip+0xc0c000],al        # 0x140c78777
   14006c777:	add    bh,ah
   14006c779:	rol    BYTE PTR [rax],0x0
   14006c77c:	pop    rsp
   14006c77d:	(bad)  
   14006c77e:	add    eax,0xc0f000
   14006c783:	add    BYTE PTR [rdx],ah
   14006c785:	rol    DWORD PTR [rax],0x0
   14006c788:	sub    BYTE PTR [rip+0xc12200],r8b        # 0x140c7e98f
   14006c78f:	add    BYTE PTR [rdi],bh
   14006c791:	rol    DWORD PTR [rax],0x0
   14006c794:	and    BYTE PTR [rax],0x5
   14006c797:	add    BYTE PTR [rdi],bh
   14006c799:	rol    DWORD PTR [rax],0x0
   14006c79c:	movabs eax,ds:0xa10005206c0000c1
   14006c7a5:	rol    DWORD PTR [rax],0x0
   14006c7a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006c7a9:	rol    DWORD PTR [rax],0x0
   14006c7ac:	pop    rsp
   14006c7ad:	and    BYTE PTR [rip+0xc1b000],al        # 0x140c877b3
   14006c7b3:	add    BYTE PTR [rdi],ch
   14006c7b5:	ret    0x0
   14006c7b8:	mov    eax,0x2f000520
   14006c7bd:	ret    0x0
   14006c7c0:	ss ret 
   14006c7c2:	add    BYTE PTR [rax],al
   14006c7c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006c7c5:	and    BYTE PTR [rip+0xc33600],al        # 0x140c9fdcb
   14006c7cb:	add    BYTE PTR [rdx-0x3d],cl
   14006c7ce:	add    BYTE PTR [rax],al
   14006c7d0:	xchg   esp,eax
   14006c7d1:	and    BYTE PTR [rip+0xc35000],al        # 0x140ca17d7
   14006c7d7:	add    BYTE PTR [rbx+rax*8+0x26780000],al
   14006c7de:	add    eax,0xc38400
   14006c7e3:	add    ch,bl
   14006c7e5:	ret    
   14006c7e6:	add    BYTE PTR [rax],al
   14006c7e8:	fsub   QWORD PTR [rax]
   14006c7ea:	add    eax,0xc3dd00
   14006c7ef:	add    BYTE PTR [rdi],ah
   14006c7f1:	(bad)  
   14006c7f2:	add    BYTE PTR [rax],al
   14006c7f4:	int3   
   14006c7f5:	and    BYTE PTR [rip+0xc43000],al        # 0x140caf7fb
   14006c7fb:	add    BYTE PTR [rbx],bh
   14006c7fd:	mov    BYTE PTR [rax],0x0
   14006c800:	lock and BYTE PTR [rip+0xc64000],al        # 0x140cd0807
   14006c807:	add    BYTE PTR [rax+rcx*8+0x21040000],cl
   14006c80e:	add    eax,0xc89000
   14006c813:	add    dh,bl
   14006c815:	enter  0x0,0x60
   14006c819:	and    DWORD PTR [rip+0xc8de00],eax        # 0x140cfa61f
   14006c81f:	add    BYTE PTR [rdx],cl
   14006c821:	leave  
   14006c822:	add    BYTE PTR [rax],al
   14006c824:	and    QWORD PTR [rip+0xc90a00],r8        # 0x140cfd22b
   14006c82b:	add    BYTE PTR [rsi-0x37],dl
   14006c82e:	add    BYTE PTR [rax],al
   14006c830:	cmp    BYTE PTR [rcx],ah
   14006c832:	add    eax,0xc95600
   14006c837:	add    BYTE PTR [rdi-0x36],ch
   14006c83a:	add    BYTE PTR [rax],al
   14006c83c:	sub    BYTE PTR [rcx],ah
   14006c83e:	add    eax,0xca6f00
   14006c843:	add    BYTE PTR [rbx+0x180000ca],cl
   14006c849:	and    DWORD PTR [rip+0xca9000],eax        # 0x140d1584f
   14006c84f:	add    BYTE PTR [rbp+0x140000ca],bh
   14006c855:	and    al,BYTE PTR [rip+0xcabd00]        # 0x140d1855b
   14006c85b:	add    cl,ah
   14006c85d:	retf   0x0
   14006c860:	cld    
   14006c861:	and    DWORD PTR [rip+0xcae100],eax        # 0x140d1a967
   14006c867:	add    BYTE PTR [rbx],dl
   14006c869:	retf   
   14006c86a:	add    BYTE PTR [rax],al
   14006c86c:	call   0x15306cd92
   14006c871:	retf   
   14006c872:	add    BYTE PTR [rax],al
   14006c874:	sub    cl,bl
   14006c876:	add    BYTE PTR [rax],al
   14006c878:	(bad)  
   14006c879:	and    DWORD PTR [rip+0xcb2a00],eax        # 0x140d1f27f
   14006c87f:	add    BYTE PTR [rdx-0x35],al
   14006c882:	add    BYTE PTR [rax],al
   14006c884:	mov    al,0x21
   14006c886:	add    eax,0xcb4200
   14006c88b:	add    BYTE PTR [rdi-0x35],dh
   14006c88e:	add    BYTE PTR [rax],al
   14006c890:	shl    BYTE PTR [rcx],0x5
   14006c893:	add    BYTE PTR [rdi-0x35],dh
   14006c896:	add    BYTE PTR [rax],al
   14006c898:	xchg   esi,eax
   14006c899:	int3   
   14006c89a:	add    BYTE PTR [rax],al
   14006c89c:	mov    al,0x21
   14006c89e:	add    eax,0xcc9600
   14006c8a3:	add    cl,ah
   14006c8a5:	int3   
   14006c8a6:	add    BYTE PTR [rax],al
   14006c8a8:	movabs al,ds:0xfa0000cce1000521
   14006c8b1:	int3   
   14006c8b2:	add    BYTE PTR [rax],al
   14006c8b4:	js     0x14006c8d7
   14006c8b6:	add    eax,0xccfa00
   14006c8bb:	add    dh,bh
   14006c8bd:	int3   
   14006c8be:	add    BYTE PTR [rax],al
   14006c8c0:	mov    BYTE PTR [rcx],ah
   14006c8c2:	add    eax,0xccfe00
   14006c8c7:	add    BYTE PTR [rdx],al
   14006c8c9:	int    0x0
   14006c8cb:	add    BYTE PTR [rax+0x21],bh
   14006c8ce:	add    eax,0xcd1000
   14006c8d3:	add    BYTE PTR [rax+0x600000cd],dh
   14006c8d9:	rex.R add eax,0xcdb000
   14006c8df:	add    dh,cl
   14006c8e1:	int    0x0
   14006c8e3:	add    BYTE PTR [rax-0x31fffade],dh
   14006c8e9:	int    0x0
   14006c8eb:	add    BYTE PTR [rbx-0x32],al
   14006c8ee:	add    BYTE PTR [rax],al
   14006c8f0:	mov    BYTE PTR [rdx],ah
   14006c8f2:	add    eax,0xce4300
   14006c8f7:	add    al,bl
   14006c8f9:	(bad)  
   14006c8fa:	add    BYTE PTR [rax],al
   14006c8fc:	je     0x14006c920
   14006c8fe:	add    eax,0xced800
   14006c903:	add    BYTE PTR [rip+0x640000cf],bl        # 0x1a406c9d8
   14006c909:	and    al,BYTE PTR [rip+0xcf1d00]        # 0x140d5e60f
   14006c90f:	add    BYTE PTR [rbx+0x540000cf],cl
   14006c915:	and    al,BYTE PTR [rip+0xcf8b00]        # 0x140d6541b
   14006c91b:	add    dl,al
   14006c91d:	iret   
   14006c91e:	add    BYTE PTR [rax],al
   14006c920:	sub    BYTE PTR [rdx],ah
   14006c922:	add    eax,0xcfd000
   14006c927:	add    ah,ah
   14006c929:	rol    BYTE PTR [rax],1
   14006c92b:	add    ah,al
   14006c92d:	and    al,BYTE PTR [rip+0xd0f000]        # 0x140d7b933
   14006c933:	add    BYTE PTR [rsi],al
   14006c935:	fld    DWORD PTR [rax]
   14006c937:	add    al,ah
   14006c939:	and    al,BYTE PTR [rip+0xd91000]        # 0x140dfd93f
   14006c93f:	add    BYTE PTR [rcx-0x27],bl
   14006c942:	add    BYTE PTR [rax],al
   14006c944:	fs (bad) 
   14006c946:	add    eax,0xd96000
   14006c94b:	add    BYTE PTR [rbx-0x27],bh
   14006c94e:	add    BYTE PTR [rax],al
   14006c950:	clc    
   14006c951:	sub    BYTE PTR [rip+0xd97b00],al        # 0x140e04457
   14006c957:	add    dl,al
   14006c959:	fld    DWORD PTR [rax]
   14006c95b:	add    BYTE PTR [rax],ch
   14006c95d:	and    eax,DWORD PTR [rip+0xd9c200]        # 0x140e08b63
   14006c963:	add    ah,bl
   14006c965:	fld    DWORD PTR [rax]
   14006c967:	add    BYTE PTR [rax],dl
   14006c969:	and    eax,DWORD PTR [rip+0xd9dc00]        # 0x140e0a56f
   14006c96f:	add    cl,ch
   14006c971:	fld    DWORD PTR [rax]
   14006c973:	add    BYTE PTR [rax],al
   14006c975:	and    eax,DWORD PTR [rip+0xd9f000]        # 0x140e0b97b
   14006c97b:	add    BYTE PTR [rdx+rbx*8],bl
   14006c97e:	add    BYTE PTR [rax],al
   14006c980:	pop    rsp
   14006c981:	es add eax,0xda2000
   14006c987:	add    ch,dh
   14006c989:	fiadd  DWORD PTR [rax]
   14006c98b:	add    al,bh
   14006c98d:	rex.R add eax,0xdb3000
   14006c993:	add    BYTE PTR [rbx-0x25],ch
   14006c996:	add    BYTE PTR [rax],al
   14006c998:	pop    rsp
   14006c999:	es add eax,0xdb7000
   14006c99f:	add    BYTE PTR [rbp+0x5c0000db],al
   14006c9a5:	es add eax,0xdb8500
   14006c9ab:	add    BYTE PTR [rbp+0x540000db],dh
   14006c9b1:	and    eax,DWORD PTR [rip+0xdbb500]        # 0x140e27eb7
   14006c9b7:	add    al,cl
   14006c9b9:	fild   DWORD PTR [rax]
   14006c9bb:	add    BYTE PTR [rbx+riz*1+0x5],al
   14006c9bf:	add    al,dh
   14006c9c1:	fild   DWORD PTR [rax]
   14006c9c3:	add    BYTE PTR [rcx],cl
   14006c9c5:	fld    QWORD PTR [rax]
   14006c9c7:	add    BYTE PTR [rax+0x9000523],ch
   14006c9cd:	fld    QWORD PTR [rax]
   14006c9cf:	add    BYTE PTR [rcx-0x23],ah
   14006c9d2:	add    BYTE PTR [rax],al
   14006c9d4:	nop
   14006c9d5:	and    eax,DWORD PTR [rip+0xdd6100]        # 0x140e42adb
   14006c9db:	add    BYTE PTR [rcx],al
   14006c9dd:	fild   WORD PTR [rax]
   14006c9df:	add    BYTE PTR [rax+0x23],bh
   14006c9e2:	add    eax,0xdf0100
   14006c9e7:	add    BYTE PTR [rdx],bl
   14006c9e9:	fild   WORD PTR [rax]
   14006c9eb:	add    BYTE PTR [rax+0x23],ch
   14006c9ee:	add    eax,0xdf2000
   14006c9f3:	add    BYTE PTR [rax-0x21],cl
   14006c9f6:	add    BYTE PTR [rax],al
   14006c9f8:	loopne 0x14006ca1d
   14006c9fa:	add    eax,0xdf4800
   14006c9ff:	add    BYTE PTR [rdi],bl
   14006ca01:	loopne 0x14006ca03
   14006ca03:	add    ah,cl
   14006ca05:	and    eax,DWORD PTR [rip+0xe01f00]        # 0x140e6e90b
   14006ca0b:	add    BYTE PTR [rax-0x20],ch
   14006ca0e:	add    BYTE PTR [rax],al
   14006ca10:	mov    esp,0x70000523
   14006ca15:	loopne 0x14006ca17
   14006ca17:	add    BYTE PTR [rdi+0x100000e0],cl
   14006ca1d:	and    al,0x5
   14006ca1f:	add    BYTE PTR [rdi+0x1a0000e0],cl
   14006ca25:	loope  0x14006ca27
   14006ca27:	add    ah,bh
   14006ca29:	and    eax,DWORD PTR [rip+0xe11a00]        # 0x140e7e42f
   14006ca2f:	add    BYTE PTR [rcx+riz*8],ch
   14006ca32:	add    BYTE PTR [rax],al
   14006ca34:	in     al,dx
   14006ca35:	and    eax,DWORD PTR [rip+0xe13000]        # 0x140e7fa3b
   14006ca3b:	add    BYTE PTR [rcx-0x1f],dl
   14006ca3e:	add    BYTE PTR [rax],al
   14006ca40:	cmp    al,0x24
   14006ca42:	add    eax,0xe15100
   14006ca47:	add    bl,ah
   14006ca49:	loope  0x14006ca4b
   14006ca4b:	add    BYTE PTR [rax],ch
   14006ca4d:	and    al,0x5
   14006ca4f:	add    bl,ah
   14006ca51:	loope  0x14006ca53
   14006ca53:	add    bh,dh
   14006ca55:	loope  0x14006ca57
   14006ca57:	add    BYTE PTR [rax],bl
   14006ca59:	and    al,0x5
   14006ca5b:	add    BYTE PTR [rax],al
   14006ca5d:	loop   0x14006ca5f
   14006ca5f:	add    BYTE PTR [rbx-0x1e],al
   14006ca62:	add    BYTE PTR [rax],al
   14006ca64:	pop    rsp
   14006ca65:	(bad)  
   14006ca66:	add    eax,0xe2c000
   14006ca6b:	add    BYTE PTR [rcx],ch
   14006ca6d:	out    0x0,eax
   14006ca6f:	add    BYTE PTR [rsp+0x5],al
   14006ca73:	add    BYTE PTR [rax],dh
   14006ca75:	out    0x0,eax
   14006ca77:	add    al,bh
   14006ca79:	out    0x0,eax
   14006ca7b:	add    BYTE PTR [rsi+rdi*1],bh
   14006ca7e:	add    eax,0xe80000
   14006ca83:	add    BYTE PTR [rcx-0x18],bl
   14006ca86:	add    BYTE PTR [rax],al
   14006ca88:	test   al,0x24
   14006ca8a:	add    eax,0xe85900
   14006ca8f:	add    BYTE PTR [rsi-0x17],dh
   14006ca92:	add    BYTE PTR [rax],al
   14006ca94:	nop
   14006ca95:	and    al,0x5
   14006ca97:	add    BYTE PTR [rsi-0x17],dh
   14006ca9a:	add    BYTE PTR [rax],al
   14006ca9c:	(bad)  
   14006ca9d:	jmp    0x16486caa2
   14006caa2:	add    eax,0xe98d00
   14006caa7:	add    BYTE PTR [rbp+0x680000e9],dl
   14006caad:	and    al,0x5
   14006caaf:	add    BYTE PTR [rbp-0x62ffff17],dl
   14006cab5:	jmp    0x16486caba
   14006caba:	add    eax,0xe9a000
   14006cabf:	add    BYTE PTR [rsi-0x43ffff13],dh
   14006cac5:	and    al,0x5
   14006cac7:	add    al,al
   14006cac9:	in     eax,dx
   14006caca:	add    BYTE PTR [rax],al
   14006cacc:	lahf   
   14006cacd:	out    dx,al
   14006cace:	add    BYTE PTR [rax],al
   14006cad0:	cmp    al,0x3e
   14006cad2:	add    eax,0xeea000
   14006cad7:	add    cl,bh
   14006cad9:	out    dx,al
   14006cada:	add    BYTE PTR [rax],al
   14006cadc:	sbb    al,0x25
   14006cade:	add    eax,0xeef900
   14006cae3:	add    BYTE PTR [rip+0x40000f0],bl        # 0x14406cbd9
   14006cae9:	and    eax,0xf01d0005
   14006caee:	add    BYTE PTR [rax],al
   14006caf0:	xor    al,0xf0
   14006caf2:	add    BYTE PTR [rax],al
   14006caf4:	hlt    
   14006caf5:	and    al,0x5
   14006caf7:	add    BYTE PTR [rax+rsi*8],dh
   14006cafa:	add    BYTE PTR [rax],al
   14006cafc:	cmp    al,0xf0
   14006cafe:	add    BYTE PTR [rax],al
   14006cb00:	fsub   QWORD PTR [rax*1+0xf03c00]
   14006cb07:	add    BYTE PTR [rax+rsi*8+0x0],al
   14006cb0b:	add    ah,dh
   14006cb0d:	and    al,0x5
   14006cb0f:	add    BYTE PTR [rax-0x10],dl
   14006cb12:	add    BYTE PTR [rax],al
   14006cb14:	movabs eax,ds:0xa10005258c0000f0
   14006cb1d:	lock add BYTE PTR [rax],al
   14006cb20:	add    dh,cl
   14006cb22:	add    BYTE PTR [rax],al
   14006cb24:	js     0x14006cb4b
   14006cb26:	add    eax,0xf10200
   14006cb2b:	add    al,dh
   14006cb2d:	icebp  
   14006cb2e:	add    BYTE PTR [rax],al
   14006cb30:	fs and eax,0xf1f00005
   14006cb36:	add    BYTE PTR [rax],al
   14006cb38:	clc    
   14006cb39:	icebp  
   14006cb3a:	add    BYTE PTR [rax],al
   14006cb3c:	push   rsp
   14006cb3d:	and    eax,0xf1f80005
   14006cb42:	add    BYTE PTR [rax],al
   14006cb44:	(bad)  
   14006cb45:	repnz add BYTE PTR [rax],al
   14006cb48:	xor    BYTE PTR [rip+0xfffffffff2170005],ah        # 0x1321dcb53
   14006cb4e:	add    BYTE PTR [rax],al
   14006cb50:	and    edx,esi
   14006cb52:	add    BYTE PTR [rax],al
   14006cb54:	rex and eax,0xf2210005
   14006cb5a:	add    BYTE PTR [rax],al
   14006cb5c:	and    eax,0x300000f2
   14006cb61:	and    eax,0xf2300005
   14006cb66:	add    BYTE PTR [rax],al
   14006cb68:	(bad)
   14006cb6b:	add    BYTE PTR [rsi+riz*1],bl
   14006cb6e:	add    eax,0xf2c500
   14006cb73:	add    BYTE PTR [rbx+rsi*8+0x0],bl
   14006cb77:	add    BYTE PTR [rax],cl
   14006cb79:	es add eax,0xf35c00
   14006cb7f:	add    BYTE PTR [rdi],bl
   14006cb81:	clc    
   14006cb82:	add    BYTE PTR [rax],al
   14006cb84:	hlt    
   14006cb85:	and    eax,0xf81f0005
   14006cb8a:	add    BYTE PTR [rax],al
   14006cb8c:	(bad)  
   14006cb8d:	clc    
   14006cb8e:	add    BYTE PTR [rax],al
   14006cb90:	in     al,0x25
   14006cb92:	add    eax,0xf82700
   14006cb97:	add    BYTE PTR [rax-0x8],cl
   14006cb9a:	add    BYTE PTR [rax],al
   14006cb9c:	(bad)  
   14006cb9d:	and    eax,0xf8480005
   14006cba2:	add    BYTE PTR [rax],al
   14006cba4:	pop    rax
   14006cba5:	clc    
   14006cba6:	add    BYTE PTR [rax],al
   14006cba8:	mov    esp,0x58000525
   14006cbad:	clc    
   14006cbae:	add    BYTE PTR [rax],al
   14006cbb0:	(bad)  
   14006cbb1:	clc    
   14006cbb2:	add    BYTE PTR [rax],al
   14006cbb4:	test   al,0x25
   14006cbb6:	add    eax,0xf8a000
   14006cbbb:	add    cl,bl
   14006cbbd:	clc    
   14006cbbe:	add    BYTE PTR [rax],al
   14006cbc0:	pop    rsp
   14006cbc1:	es add eax,0xf91000
   14006cbc7:	add    BYTE PTR [rcx-0x7],cl
   14006cbca:	add    BYTE PTR [rax],al
   14006cbcc:	pop    rsp
   14006cbcd:	es add eax,0xf95000
   14006cbd3:	add    BYTE PTR [rcx-0x4],al
   14006cbd6:	add    BYTE PTR [rax],al
   14006cbd8:	cmp    BYTE PTR [rsi],ah
   14006cbda:	add    eax,0xfc5000
   14006cbdf:	add    BYTE PTR [rax+0x5c0000fc],cl
   14006cbe5:	es add eax,0xfc9000
   14006cbeb:	add    bh,ah
   14006cbed:	cld    
   14006cbee:	add    BYTE PTR [rax],al
   14006cbf0:	pop    rsp
   14006cbf1:	es add eax,0xfcf000
   14006cbf7:	add    BYTE PTR [rbx-0x3],dl
   14006cbfa:	add    BYTE PTR [rax],al
   14006cbfc:	pop    rsp
   14006cbfd:	es add eax,0xfd6000
   14006cc03:	add    BYTE PTR [rdi],ah
   14006cc05:	inc    BYTE PTR [rax]
   14006cc07:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006cc0b:	add    BYTE PTR [rax-0xffff02],ah
   14006cc11:	inc    BYTE PTR [rax]
   14006cc13:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006cc17:	add    BYTE PTR [rax],ah
   14006cc19:	inc    DWORD PTR [rax]
   14006cc1b:	add    BYTE PTR [rax-0x1],dh
   14006cc1e:	add    BYTE PTR [rax],al
   14006cc20:	clc    
   14006cc21:	sub    BYTE PTR [rip+0xff7000],al        # 0x141063c27
   14006cc27:	add    BYTE PTR [rcx+0x5c0000ff],ah
   14006cc2d:	(bad)  
   14006cc2e:	add    eax,0xffc000
   14006cc33:	add    BYTE PTR [rax+rax*1+0x1],cl
   14006cc37:	add    BYTE PTR [rsi+riz*1+0x5],ah
   14006cc3b:	add    BYTE PTR [rax+0x0],dl
   14006cc3e:	add    DWORD PTR [rax],eax
   14006cc40:	loopne 0x14006cc42
   14006cc42:	add    DWORD PTR [rax],eax
   14006cc44:	js     0x14006cc6c
   14006cc46:	add    eax,0x100e000
   14006cc4b:	add    BYTE PTR [rdi-0x7fffeff],ch
   14006cc51:	rex.R add eax,0x101b000
   14006cc57:	add    BYTE PTR [rdx],ah
   14006cc59:	add    al,BYTE PTR [rcx]
   14006cc5b:	add    BYTE PTR [rsi+riz*1+0x2300005],cl
   14006cc62:	add    DWORD PTR [rax],eax
   14006cc64:	(bad)  
   14006cc66:	add    DWORD PTR [rax],eax
   14006cc68:	shl    BYTE PTR [rsi],0x5
   14006cc6b:	add    BYTE PTR [rdx+0x2],ah
   14006cc6e:	add    DWORD PTR [rax],eax
   14006cc70:	mov    bl,0x2
   14006cc72:	add    DWORD PTR [rax],eax
   14006cc74:	lods   al,BYTE PTR ds:[rsi]
   14006cc75:	es add eax,0x102b300
   14006cc7b:	add    bh,al
   14006cc7d:	add    al,BYTE PTR [rcx]
   14006cc7f:	add    BYTE PTR [rsi+riz*1+0x2d00005],bl
   14006cc86:	add    DWORD PTR [rax],eax
   14006cc88:	mov    ah,0x3
   14006cc8a:	add    DWORD PTR [rax],eax
   14006cc8c:	(bad)  
   14006cc8d:	es add eax,0x103c000
   14006cc93:	add    BYTE PTR [rip+0x14000104],ah        # 0x15406cd9d
   14006cc99:	(bad)  
   14006cc9a:	add    eax,0x1042500
   14006cc9f:	add    BYTE PTR [rbx+0x4],dh
   14006cca2:	add    DWORD PTR [rax],eax
   14006cca4:	add    BYTE PTR [rdi],ah
   14006cca6:	add    eax,0x1047300
   14006ccab:	add    BYTE PTR [rcx-0xffffefc],dl
   14006ccb1:	es add eax,0x104a000
   14006ccb7:	add    bh,bl
   14006ccb9:	add    al,0x1
   14006ccbb:	add    BYTE PTR [rdi+riz*1+0x5],cl
   14006ccbf:	add    bh,bl
   14006ccc1:	add    al,0x1
   14006ccc3:	add    BYTE PTR [rdi],dl
   14006ccc5:	add    eax,0x27380001
   14006ccca:	add    eax,0x1051700
   14006cccf:	add    BYTE PTR [rdx],ah
   14006ccd1:	add    eax,0x27280001
   14006ccd6:	add    eax,0x1053000
   14006ccdb:	add    BYTE PTR [rax+0x6],dl
   14006ccde:	add    DWORD PTR [rax],eax
   14006cce0:	push   rsp
   14006cce1:	(bad)  
   14006cce2:	add    eax,0x1065000
   14006cce7:	add    BYTE PTR [rcx+0x6],ch
   14006ccea:	add    DWORD PTR [rax],eax
   14006ccec:	fs (bad) 
   14006ccee:	add    eax,0x1067000
   14006ccf3:	add    BYTE PTR [rdi+0x64000106],ah
   14006ccf9:	(bad)  
   14006ccfa:	add    eax,0x106d000
   14006ccff:	add    BYTE PTR [rbx],al
   14006cd01:	(bad)  
   14006cd02:	add    DWORD PTR [rax],eax
   14006cd04:	clc    
   14006cd05:	rex.R add eax,0x1071000
   14006cd0b:	add    BYTE PTR [rsi],ah
   14006cd0d:	(bad)  
   14006cd0e:	add    DWORD PTR [rax],eax
   14006cd10:	fs (bad) 
   14006cd12:	add    eax,0x1073000
   14006cd17:	add    BYTE PTR [rcx+0x6c000107],cl
   14006cd1d:	(bad)  
   14006cd1e:	add    eax,0x107a000
   14006cd23:	add    BYTE PTR [rbp-0x67fffef9],dh
   14006cd29:	(bad)  
   14006cd2a:	add    eax,0x107b500
   14006cd2f:	add    cl,ah
   14006cd31:	(bad)  
   14006cd32:	add    DWORD PTR [rax],eax
   14006cd34:	test   BYTE PTR [rdi],ah
   14006cd36:	add    eax,0x107e100
   14006cd3b:	add    BYTE PTR [rbx],cl
   14006cd3d:	or     BYTE PTR [rcx],al
   14006cd3f:	add    BYTE PTR [rdi+riz*1+0x5],dh
   14006cd43:	add    BYTE PTR [rax+0x8],dl
   14006cd46:	add    DWORD PTR [rax],eax
   14006cd48:	jne    0x14006cd52
   14006cd4a:	add    DWORD PTR [rax],eax
   14006cd4c:	cld    
   14006cd4d:	rex.RXB add eax,0x1087500
   14006cd53:	add    al,cl
   14006cd55:	or     BYTE PTR [rcx],al
   14006cd57:	add    ah,cl
   14006cd59:	(bad)  
   14006cd5a:	add    eax,0x108c800
   14006cd5f:	add    ah,ch
   14006cd61:	or     BYTE PTR [rcx],al
   14006cd63:	add    BYTE PTR [rdi+riz*1+0x8ec0005],bh
   14006cd6a:	add    DWORD PTR [rax],eax
   14006cd6c:	xor    ecx,DWORD PTR [rcx]
   14006cd6e:	add    DWORD PTR [rax],eax
   14006cd70:	movabs al,ds:0x3600010980000527
   14006cd79:	or     al,BYTE PTR [rcx]
   14006cd7b:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006cd7f:	add    BYTE PTR [rax+0xa],al
   14006cd82:	add    DWORD PTR [rax],eax
   14006cd84:	ja     0x14006cd90
   14006cd86:	add    DWORD PTR [rax],eax
   14006cd88:	pop    rsp
   14006cd89:	es add eax,0x10a8000
   14006cd8f:	add    dl,cl
   14006cd91:	or     al,BYTE PTR [rcx]
   14006cd93:	add    BYTE PTR [rsi+riz*1+0x5],bl
   14006cd97:	add    al,dl
   14006cd99:	or     al,BYTE PTR [rcx]
   14006cd9b:	add    al,dh
   14006cd9d:	or     al,BYTE PTR [rcx]
   14006cd9f:	add    BYTE PTR [rax+rbp*1+0x5],al
   14006cda3:	add    al,dh
   14006cda5:	or     al,BYTE PTR [rcx]
   14006cda7:	add    BYTE PTR [rsi],al
   14006cda9:	or     eax,DWORD PTR [rcx]
   14006cdab:	add    al,bh
   14006cdad:	(bad)  
   14006cdae:	add    eax,0x10b0600
   14006cdb3:	add    BYTE PTR [rbx+rcx*1],ah
   14006cdb6:	add    DWORD PTR [rax],eax
   14006cdb8:	call   0x17006d2e4
   14006cdbd:	or     eax,DWORD PTR [rcx]
   14006cdbf:	add    BYTE PTR [rax+0xb],cl
   14006cdc2:	add    DWORD PTR [rax],eax
   14006cdc4:	sub    BYTE PTR [rip+0x10b4800],r8b        # 0x1411215cb
   14006cdcb:	add    BYTE PTR [rsi+0x3000010b],ch
   14006cdd1:	sub    BYTE PTR [rip+0x10bae00],al        # 0x141127bd7
   14006cdd7:	add    ch,bh
   14006cdd9:	or     eax,DWORD PTR [rcx]
   14006cddb:	add    BYTE PTR [rax+rbp*1],bl
   14006cdde:	add    eax,0x10bfd00
   14006cde3:	add    BYTE PTR [rsp+rcx*1],cl
   14006cde6:	add    DWORD PTR [rax],eax
   14006cde8:	sbb    al,0x28
   14006cdea:	add    eax,0x10c0c00
   14006cdef:	add    BYTE PTR [rdx],dl
   14006cdf1:	or     al,0x1
   14006cdf3:	add    BYTE PTR [rax+rbp*1],cl
   14006cdf6:	add    eax,0x10c2000
   14006cdfb:	add    BYTE PTR [rdx-0x7fffef4],cl
   14006ce01:	rex.R add eax,0x10c9000
   14006ce07:	add    BYTE PTR [rsi-0x6bfffef4],bl
   14006ce0d:	sub    BYTE PTR [rip+0x10c9e00],al        # 0x141136c13
   14006ce13:	add    dl,al
   14006ce15:	or     al,0x1
   14006ce17:	add    BYTE PTR [rax-0x3dfffad8],al
   14006ce1d:	or     al,0x1
   14006ce1f:	add    BYTE PTR [rdi+0x6c00010d],dh
   14006ce25:	sub    BYTE PTR [rip+0x10db700],al        # 0x14114852b
   14006ce2b:	add    al,dl
   14006ce2d:	or     eax,0x285c0001
   14006ce32:	add    eax,0x10dd000
   14006ce37:	add    dl,dl
   14006ce39:	or     eax,0x284c0001
   14006ce3e:	add    eax,0x10e5000
   14006ce43:	add    BYTE PTR [rdi+0xe],ch
   14006ce46:	add    DWORD PTR [rax],eax
   14006ce48:	(bad)  
   14006ce49:	sub    BYTE PTR [rip+0x10e6f00],al        # 0x141153d4f
   14006ce4f:	add    bl,dl
   14006ce51:	(bad)  
   14006ce52:	add    DWORD PTR [rax],eax
   14006ce54:	shr    BYTE PTR [rax],0x5
   14006ce57:	add    bl,dl
   14006ce59:	(bad)  
   14006ce5a:	add    DWORD PTR [rax],eax
   14006ce5c:	cld    
   14006ce5d:	(bad)  
   14006ce5e:	add    DWORD PTR [rax],eax
   14006ce60:	lods   al,BYTE PTR ds:[rsi]
   14006ce61:	sub    BYTE PTR [rip+0x10efc00],al        # 0x14115ca67
   14006ce67:	add    BYTE PTR [rsi],dl
   14006ce69:	sgdt   [rax]
   14006ce6c:	lods   al,BYTE PTR ds:[rsi]
   14006ce6d:	sub    BYTE PTR [rip+0x10f1600],al        # 0x14115e473
   14006ce73:	add    BYTE PTR [rcx],ah
   14006ce75:	sgdt   [rax]
   14006ce78:	pushf  
   14006ce79:	sub    BYTE PTR [rip+0x10f3000],al        # 0x14115fe7f
   14006ce7f:	add    bh,dh
   14006ce81:	sgdt   [rax]
   14006ce84:	(bad)  
   14006ce85:	rex.R add eax,0x1100000
   14006ce8b:	add    ch,dl
   14006ce8d:	adc    BYTE PTR [rcx],al
   14006ce8f:	add    BYTE PTR [rsi+riz*1+0x5],bl
   14006ce93:	add    al,ah
   14006ce95:	adc    BYTE PTR [rcx],al
   14006ce97:	add    BYTE PTR [rdi+0x12],ch
   14006ce9a:	add    DWORD PTR [rax],eax
   14006ce9c:	loopne 0x14006cec6
   14006ce9e:	add    eax,0x1127000
   14006cea3:	add    BYTE PTR [rdx-0x7fffeee],ch
   14006cea9:	sub    BYTE PTR [rip+0x1138000],al        # 0x1411a4eaf
   14006ceaf:	add    BYTE PTR [rbp+0x70000113],bh
   14006ceb5:	sub    DWORD PTR [rip+0x113bd00],eax        # 0x1411a8bbb
   14006cebb:	add    BYTE PTR [rax],al
   14006cebd:	adc    al,0x1
   14006cebf:	add    BYTE PTR [rax+0x29],bl
   14006cec2:	add    eax,0x1140000
   14006cec7:	add    BYTE PTR [rip+0x44000114],bl        # 0x18406cfe1
   14006cecd:	sub    DWORD PTR [rip+0x1141d00],eax        # 0x1411aebd3
   14006ced3:	add    BYTE PTR [rsi],dh
   14006ced5:	adc    al,0x1
   14006ced7:	add    BYTE PTR [rcx+rbp*1],dh
   14006ceda:	add    eax,0x1143600
   14006cedf:	add    BYTE PTR [rdx+0x18000114],dl
   14006cee5:	sub    DWORD PTR [rip+0x1149200],eax        # 0x1411b60eb
   14006ceeb:	add    BYTE PTR [rsp+rdx*1+0x29000001],bl
   14006cef2:	add    eax,0x114a000
   14006cef7:	add    BYTE PTR [rip+0xffffffff80000115],ah        # 0xc006d012
   14006cefd:	sub    DWORD PTR [rip+0x1153000],eax        # 0x1411bff03
   14006cf03:	add    bh,bh
   14006cf05:	adc    eax,0x29900001
   14006cf0a:	add    eax,0x1160000
   14006cf0f:	add    BYTE PTR [rdx+0x16],dl
   14006cf12:	add    DWORD PTR [rax],eax
   14006cf14:	pop    rsp
   14006cf15:	(bad)  
   14006cf16:	add    eax,0x1166000
   14006cf1b:	add    BYTE PTR [rbx+0x5c000116],cl
   14006cf21:	es add eax,0x1169000
   14006cf27:	add    dl,ah
   14006cf29:	(bad)  
   14006cf2a:	add    DWORD PTR [rax],eax
   14006cf2c:	clc    
   14006cf2d:	sub    BYTE PTR [rip+0x116f000],al        # 0x1411dbf33
   14006cf33:	add    BYTE PTR [rip+0xfffffffff8000117],ah        # 0x13806d050
   14006cf39:	sub    BYTE PTR [rip+0x1173000],al        # 0x1411dff3f
   14006cf3f:	add    bh,ah
   14006cf41:	sbb    BYTE PTR [rcx],al
   14006cf43:	add    al,dh
   14006cf45:	(bad)  
   14006cf46:	add    eax,0x118f000
   14006cf4b:	add    BYTE PTR [rcx+0x19],ah
   14006cf4e:	add    DWORD PTR [rax],eax
   14006cf50:	js     0x14006cf78
   14006cf52:	add    eax,0x1196100
   14006cf57:	add    BYTE PTR [rdx+0x1a],ah
   14006cf5a:	add    DWORD PTR [rax],eax
   14006cf5c:	mov    al,0x29
   14006cf5e:	add    eax,0x11a6200
   14006cf63:	add    BYTE PTR [rdi+0x1a],dh
   14006cf66:	add    DWORD PTR [rax],eax
   14006cf68:	movabs al,ds:0x9700011a80000529
   14006cf71:	sbb    eax,DWORD PTR [rcx]
   14006cf73:	add    ah,al
   14006cf75:	sub    DWORD PTR [rip+0x11ba000],eax        # 0x141226f7b
   14006cf7b:	add    BYTE PTR [rsi+0x1c],al
   14006cf7e:	add    DWORD PTR [rax],eax
   14006cf80:	pop    rsp
   14006cf81:	(bad)  
   14006cf82:	add    eax,0x11c5000
   14006cf87:	add    bl,ah
   14006cf89:	sbb    al,0x1
   14006cf8b:	add    ah,ah
   14006cf8d:	rex.RX add eax,0x11cf000
   14006cf93:	add    BYTE PTR [rsi],dh
   14006cf95:	sbb    eax,0x2eac0001
   14006cf9a:	add    eax,0x11d3600
   14006cf9f:	add    BYTE PTR [rbp+rbx*1+0x1],ah
   14006cfa3:	add    ah,bh
   14006cfa5:	sub    DWORD PTR [rip+0x11d6400],eax        # 0x1412433ab
   14006cfab:	add    BYTE PTR [rbp-0x17fffee3],bl
   14006cfb1:	sub    DWORD PTR [rip+0x11d9d00],eax        # 0x141246cb7
   14006cfb7:	add    BYTE PTR [rdi-0x17fffee3],ch
   14006cfbd:	sub    DWORD PTR [rip+0x11daf00],eax        # 0x141247ec3
   14006cfc3:	add    BYTE PTR [rbp+rbx*1+0x29d80001],bh
   14006cfca:	add    eax,0x11dc000
   14006cfcf:	add    ah,bl
   14006cfd1:	(bad)  
   14006cfd2:	add    DWORD PTR [rax],eax
   14006cfd4:	adc    BYTE PTR [rdx],ch
   14006cfd6:	add    eax,0x11ee000
   14006cfdb:	add    ah,dh
   14006cfdd:	(bad)  
   14006cfde:	add    DWORD PTR [rax],eax
   14006cfe0:	pop    rsp
   14006cfe1:	es add eax,0x11ef400
   14006cfe7:	add    BYTE PTR [rcx+0x1f],bl
   14006cfea:	add    DWORD PTR [rax],eax
   14006cfec:	sub    al,BYTE PTR fs:[rip+0x11f5900]        # 0x1412628f3
   14006cff3:	add    BYTE PTR [rsi+0x1f],dh
   14006cff6:	add    DWORD PTR [rax],eax
   14006cff8:	push   rax
   14006cff9:	sub    al,BYTE PTR [rip+0x11f7600]        # 0x1412645ff
   14006cfff:	add    BYTE PTR [rdi+0x4000011f],bl
   14006d005:	sub    al,BYTE PTR [rip+0x11f9f00]        # 0x141266f0b
   14006d00b:	add    BYTE PTR [rdi+rbx*1+0x2a300001],ah
   14006d012:	add    eax,0x11fb000
   14006d017:	add    ch,bl
   14006d019:	and    DWORD PTR [rcx],eax
   14006d01b:	add    BYTE PTR [rdx+rbp*1+0x5],bh
   14006d01f:	add    al,ah
   14006d021:	and    DWORD PTR [rcx],eax
   14006d023:	add    BYTE PTR [rbx-0x67fffede],cl
   14006d029:	sub    al,BYTE PTR [rip+0x1229000]        # 0x14129602f
   14006d02f:	add    cl,dh
   14006d031:	and    al,BYTE PTR [rcx]
   14006d033:	add    ah,dl
   14006d035:	sub    al,BYTE PTR [rip+0x122f100]        # 0x14129c13b
   14006d03b:	add    BYTE PTR [rcx+0x23],ch
   14006d03e:	add    DWORD PTR [rax],eax
   14006d040:	shr    BYTE PTR [rdx],0x5
   14006d043:	add    BYTE PTR [rcx+0x23],ch
   14006d046:	add    DWORD PTR [rax],eax
   14006d048:	mov    DWORD PTR [rbx],esp
   14006d04a:	add    DWORD PTR [rax],eax
   14006d04c:	mov    al,0x2a
   14006d04e:	add    eax,0x1239000
   14006d053:	add    BYTE PTR [rdi],al
   14006d055:	and    al,0x1
   14006d057:	add    al,bh
   14006d059:	rex.R add eax,0x1245000
   14006d05f:	add    BYTE PTR [rcx+0x5c000124],cl
   14006d065:	es add eax,0x1249000
   14006d06b:	add    BYTE PTR [rbx+0x5c000124],dh
   14006d071:	sub    eax,DWORD PTR [rip+0x124b300]        # 0x1412b8377
   14006d077:	add    BYTE PTR [rcx],dh
   14006d079:	and    eax,0x2b400001
   14006d07e:	add    eax,0x1253100
   14006d083:	add    BYTE PTR [rdx+0x25],cl
   14006d086:	add    DWORD PTR [rax],eax
   14006d088:	and    al,0x2b
   14006d08a:	add    eax,0x1254a00
   14006d08f:	add    BYTE PTR [rsi+riz*1],ah
   14006d092:	add    DWORD PTR [rax],eax
   14006d094:	or     BYTE PTR [rbx],ch
   14006d096:	add    eax,0x1262400
   14006d09b:	add    BYTE PTR [rcx-0x7fffeda],ch
   14006d0a1:	sub    al,BYTE PTR [rip+0x126a900]        # 0x1412d79a7
   14006d0a7:	add    BYTE PTR [rcx-0x17fffeda],dh
   14006d0ad:	sub    al,BYTE PTR [rip+0x126c000]        # 0x1412d90b3
   14006d0b3:	add    bl,bl
   14006d0b5:	add    DWORD PTR es:[rax],eax
   14006d0b8:	fs xor al,0x5
   14006d0bb:	add    bl,bl
   14006d0bd:	add    DWORD PTR es:[rax],eax
   14006d0c0:	movsxd esp,DWORD PTR [rdi]
   14006d0c2:	add    DWORD PTR [rax],eax
   14006d0c4:	je     0x14006d0f1
   14006d0c6:	add    eax,0x1276300
   14006d0cb:	add    BYTE PTR [rbx+0x27],ch
   14006d0ce:	add    DWORD PTR [rax],eax
   14006d0d0:	sub    eax,DWORD PTR fs:[rip+0x1277000]        # 0x1412e40d7
   14006d0d7:	add    BYTE PTR [rsi+0x2c000128],ch
   14006d0dd:	ds add eax,0x128b000
   14006d0e3:	add    BYTE PTR [rbx],ah
   14006d0e5:	sub    DWORD PTR [rcx],eax
   14006d0e7:	add    al,bl
   14006d0e9:	sub    eax,DWORD PTR [rip+0x1292300]        # 0x1412ff3ef
   14006d0ef:	add    ah,bl
   14006d0f1:	sub    DWORD PTR [rcx],eax
   14006d0f3:	add    BYTE PTR [rax-0x23fffad5],bh
   14006d0f9:	sub    DWORD PTR [rcx],eax
   14006d0fb:	add    bh,dh
   14006d0fd:	sub    DWORD PTR [rcx],eax
   14006d0ff:	add    BYTE PTR [rax-0x8fffad5],ch
   14006d105:	sub    DWORD PTR [rcx],eax
   14006d107:	add    BYTE PTR [rax+0x2a],bl
   14006d10a:	add    DWORD PTR [rax],eax
   14006d10c:	mov    BYTE PTR [rbx],ch
   14006d10e:	add    eax,0x12a6000
   14006d113:	add    cl,ch
   14006d115:	sub    al,BYTE PTR [rcx]
   14006d117:	add    BYTE PTR [rax+0x44],ah
   14006d11a:	add    eax,0x12b1000
   14006d11f:	add    BYTE PTR [rdi-0xffffed5],al
   14006d125:	sub    eax,DWORD PTR [rip+0x12ba000]        # 0x14132712b
   14006d12b:	add    BYTE PTR [rdi+0x5c00012b],bh
   14006d131:	(bad)  
   14006d132:	add    eax,0x12bd000
   14006d137:	add    BYTE PTR [rsi],dh
   14006d139:	sub    al,0x1
   14006d13b:	add    al,dh
   14006d13d:	sub    eax,DWORD PTR [rip+0x12c5000]        # 0x141332143
   14006d143:	add    BYTE PTR [rax+0x2c],dh
   14006d146:	add    DWORD PTR [rax],eax
   14006d148:	pop    rsp
   14006d149:	es add eax,0x12c7000
   14006d14f:	add    dl,ah
   14006d151:	add    DWORD PTR cs:[rax],eax
   14006d154:	clc    
   14006d155:	sub    eax,DWORD PTR [rip+0x12ef000]        # 0x14135c15b
   14006d15b:	add    dh,al
   14006d15d:	xor    BYTE PTR [rcx],al
   14006d15f:	add    BYTE PTR [rax],cl
   14006d161:	sub    al,0x5
   14006d163:	add    al,dl
   14006d165:	xor    BYTE PTR [rcx],al
   14006d167:	add    BYTE PTR [rip+0x3c000131],ch        # 0x17c06d29e
   14006d16d:	sub    al,0x5
   14006d16f:	add    BYTE PTR [rip+0xffffffff80000131],ch        # 0xc006d2a6
   14006d175:	xor    DWORD PTR [rcx],eax
   14006d177:	add    BYTE PTR [rax],ch
   14006d179:	sub    al,0x5
   14006d17b:	add    BYTE PTR [rax-0x5efffecf],al
   14006d181:	xor    DWORD PTR [rcx],eax
   14006d183:	add    BYTE PTR [rax],bl
   14006d185:	sub    al,0x5
   14006d187:	add    BYTE PTR [rax+0x6c000131],dh
   14006d18d:	add    DWORD PTR ss:[rax],eax
   14006d190:	pop    rax
   14006d191:	sub    al,0x5
   14006d193:	add    BYTE PTR [rax+0x36],dh
   14006d196:	add    DWORD PTR [rax],eax
   14006d198:	int    0x36
   14006d19a:	add    DWORD PTR [rax],eax
   14006d19c:	in     al,0x46
   14006d19e:	add    eax,0x136d000
   14006d1a3:	add    BYTE PTR [rbx+0x38],ch
   14006d1a6:	add    DWORD PTR [rax],eax
   14006d1a8:	js     0x14006d1d6
   14006d1aa:	add    eax,0x1387000
   14006d1af:	add    BYTE PTR [rdi+0x3c000138],bh
   14006d1b5:	sub    eax,0x38bf0005
   14006d1ba:	add    DWORD PTR [rax],eax
   14006d1bc:	cmp    DWORD PTR ss:[rcx],eax
   14006d1bf:	add    BYTE PTR [rbp*1+0x39360005],ah
   14006d1c6:	add    DWORD PTR [rax],eax
   14006d1c8:	rex.WRXB cmp QWORD PTR [r9],r8
   14006d1cb:	add    BYTE PTR [rax],dl
   14006d1cd:	sub    eax,0x394f0005
   14006d1d2:	add    DWORD PTR [rax],eax
   14006d1d4:	jne    0x14006d20f
   14006d1d6:	add    DWORD PTR [rax],eax
   14006d1d8:	cld    
   14006d1d9:	sub    al,0x5
   14006d1db:	add    BYTE PTR [rbp+0x39],dh
   14006d1de:	add    DWORD PTR [rax],eax
   14006d1e0:	jp     0x14006d21b
   14006d1e2:	add    DWORD PTR [rax],eax
   14006d1e4:	in     al,dx
   14006d1e5:	sub    al,0x5
   14006d1e7:	add    BYTE PTR [rdx+0x39],bh
   14006d1ea:	add    DWORD PTR [rax],eax
   14006d1ec:	mov    ?,WORD PTR [rcx]
   14006d1ee:	add    DWORD PTR [rax],eax
   14006d1f0:	fsubr  QWORD PTR [rax*1+0x1398e00]
   14006d1f7:	add    BYTE PTR [rsi-0x43fffec6],ch
   14006d1fd:	sub    al,0x5
   14006d1ff:	add    BYTE PTR [rsi-0x43fffec6],ch
   14006d205:	cmp    al,BYTE PTR [rcx]
   14006d207:	add    BYTE PTR [rax-0x43fffad4],ah
   14006d20d:	cmp    al,BYTE PTR [rcx]
   14006d20f:	add    al,cl
   14006d211:	cmp    al,BYTE PTR [rcx]
   14006d213:	add    BYTE PTR [rax-0x2ffffad4],dl
   14006d219:	cmp    al,BYTE PTR [rcx]
   14006d21b:	add    bh,ch
   14006d21d:	cmp    eax,DWORD PTR [rcx]
   14006d21f:	add    BYTE PTR [rbp+rbp*1+0x5],cl
   14006d223:	add    al,dh
   14006d225:	cmp    eax,DWORD PTR [rcx]
   14006d227:	add    BYTE PTR [rdx+0x3c],cl
   14006d22a:	add    DWORD PTR [rax],eax
   14006d22c:	test   BYTE PTR [rip+0x3c4a0005],ch        # 0x17c50d237
   14006d232:	add    DWORD PTR [rax],eax
   14006d234:	(bad)  
   14006d235:	cmp    eax,0x2d700001
   14006d23a:	add    eax,0x13d2f00
   14006d23f:	add    BYTE PTR [rdx+0x3d],al
   14006d242:	add    DWORD PTR [rax],eax
   14006d244:	(bad)  
   14006d245:	sub    eax,0x3d500005
   14006d24a:	add    DWORD PTR [rax],eax
   14006d24c:	out    dx,al
   14006d24d:	cmp    eax,0x2dc00001
   14006d252:	add    eax,0x13dee00
   14006d257:	add    BYTE PTR [rsi],bh
   14006d259:	rex.XB add DWORD PTR [r8],eax
   14006d25c:	test   al,0x2d
   14006d25e:	add    eax,0x1433e00
   14006d263:	add    BYTE PTR [rbx+0x43],bl
   14006d266:	add    DWORD PTR [rax],eax
   14006d268:	cwde   
   14006d269:	sub    eax,0x43600005
   14006d26e:	add    DWORD PTR [rax],eax
   14006d270:	scas   al,BYTE PTR es:[rdi]
   14006d271:	rex.XB add DWORD PTR [r8],eax
   14006d274:	pop    rsp
   14006d275:	(bad)  
   14006d276:	add    eax,0x143b000
   14006d27b:	add    ah,cl
   14006d27d:	rex.XB add DWORD PTR [r8],eax
   14006d280:	sub    BYTE PTR [rsi],ch
   14006d282:	add    eax,0x143cc00
   14006d287:	add    dl,bh
   14006d289:	rex.XB add DWORD PTR [r8],eax
   14006d28c:	adc    BYTE PTR [rsi],ch
   14006d28e:	add    eax,0x143fa00
   14006d293:	add    BYTE PTR [rsp+rax*2],bl
   14006d296:	add    DWORD PTR [rax],eax
   14006d298:	cld    
   14006d299:	sub    eax,0x441c0005
   14006d29e:	add    DWORD PTR [rax],eax
   14006d2a0:	pop    rbx
   14006d2a1:	add    DWORD PTR [r8],r8d
   14006d2a4:	in     al,dx
   14006d2a5:	sub    eax,0x455b0005
   14006d2aa:	add    DWORD PTR [rax],eax
   14006d2ac:	add    DWORD PTR fs:[r8],r8d
   14006d2b0:	fsubr  QWORD PTR [rip+0x46000005]        # 0x18606d2bb
   14006d2b6:	add    DWORD PTR [rax],eax
   14006d2b8:	pop    rsi
   14006d2b9:	rex.RX add DWORD PTR [rax],r8d
   14006d2bc:	pop    rax
   14006d2bd:	cs add eax,0x1465e00
   14006d2c3:	add    al,dh
   14006d2c5:	add    QWORD PTR [rax],rax
   14006d2c8:	rex.R
   14006d2c9:	cs add eax,0x148f000
   14006d2cf:	add    BYTE PTR [rbx],dl
   14006d2d1:	add    QWORD PTR [r8],rax
   14006d2d4:	xor    al,0x2e
   14006d2d6:	add    eax,0x1492000
   14006d2db:	add    BYTE PTR [rbx],cl
   14006d2dd:	push   rcx
   14006d2de:	add    DWORD PTR [rax],eax
   14006d2e0:	ins    BYTE PTR es:[rdi],dx
   14006d2e1:	cs add eax,0x1511000
   14006d2e7:	add    BYTE PTR [rax+0x51],ah
   14006d2ea:	add    DWORD PTR [rax],eax
   14006d2ec:	lods   al,BYTE PTR ds:[rsi]
   14006d2ed:	cs add eax,0x1516000
   14006d2f3:	add    bh,al
   14006d2f5:	push   rcx
   14006d2f6:	add    DWORD PTR [rax],eax
   14006d2f8:	cwde   
   14006d2f9:	cs add eax,0x151c700
   14006d2ff:	add    cl,bl
   14006d301:	push   rcx
   14006d302:	add    DWORD PTR [rax],eax
   14006d304:	test   BYTE PTR [rsi],ch
   14006d306:	add    eax,0x151e000
   14006d30b:	add    BYTE PTR [rdx-0xbfffeae],cl
   14006d311:	cs add eax,0x1528a00
   14006d317:	add    BYTE PTR [rax-0x37fffea4],dh
   14006d31d:	cs add eax,0x15cb000
   14006d323:	add    BYTE PTR [rdx-0x47fffea4],bh
   14006d329:	cs add eax,0x15d7000
   14006d32f:	add    BYTE PTR [rdx+0x3c00015d],ch
   14006d335:	(bad)  
   14006d336:	add    eax,0x15daa00
   14006d33b:	add    cl,al
   14006d33d:	pop    rbp
   14006d33e:	add    DWORD PTR [rax],eax
   14006d340:	sub    BYTE PTR [rdi],ch
   14006d342:	add    eax,0x15dc100
   14006d347:	add    BYTE PTR [rsi],dh
   14006d349:	(bad)  
   14006d34a:	add    DWORD PTR [rax],eax
   14006d34c:	add    BYTE PTR [rdi],ch
   14006d34e:	add    eax,0x1614000
   14006d353:	add    bh,bh
   14006d355:	(bad)  
   14006d357:	add    BYTE PTR [rax+0x2f],cl
   14006d35a:	add    eax,0x1630000
   14006d35f:	add    BYTE PTR [rbx],bl
   14006d361:	add    DWORD PTR [eax],eax
   14006d364:	(bad)  
   14006d365:	(bad)  
   14006d366:	add    eax,0x1672000
   14006d36b:	add    BYTE PTR [rcx+rbp*2+0x2f780001],bh
   14006d372:	add    eax,0x169c000
   14006d377:	add    dl,ah
   14006d379:	imul   eax,DWORD PTR [rcx],0x52fbc00
   14006d37f:	add    dl,ah
   14006d381:	imul   eax,DWORD PTR [rcx],0x16d2100
   14006d387:	add    BYTE PTR [rax+0x2100052f],ah
   14006d38d:	ins    DWORD PTR es:[rdi],dx
   14006d38e:	add    DWORD PTR [rax],eax
   14006d390:	xchg   esp,eax
   14006d391:	ins    DWORD PTR es:[rdi],dx
   14006d392:	add    DWORD PTR [rax],eax
   14006d394:	nop
   14006d395:	(bad)  
   14006d396:	add    eax,0x16da000
   14006d39b:	add    BYTE PTR [rsi+rbp*2+0x30180001],cl
   14006d3a2:	add    eax,0x16e8c00
   14006d3a7:	add    BYTE PTR [rdi-0x3fffe85],dh
   14006d3ad:	(bad)  
   14006d3ae:	add    eax,0x17bb700
   14006d3b3:	add    al,cl
   14006d3b5:	jnp    0x14006d3b8
   14006d3b7:	add    ah,ch
   14006d3b9:	(bad)  
   14006d3ba:	add    eax,0x17bc800
   14006d3bf:	add    BYTE PTR [rdi-0x2ffffe83],bh
   14006d3c5:	(bad)  
   14006d3c6:	add    eax,0x17dc000
   14006d3cb:	add    BYTE PTR [rdi+rdi*2+0x1],cl
   14006d3cf:	add    BYTE PTR [rax+0x44],ah
   14006d3d2:	add    eax,0x17f5000
   14006d3d7:	add    BYTE PTR [rdi+0x2c000185],cl
   14006d3dd:	xor    BYTE PTR [rip+0x1859000],al        # 0x1418c63e3
   14006d3e3:	add    BYTE PTR [rdx-0x74],al
   14006d3e6:	add    DWORD PTR [rax],eax
   14006d3e8:	sub    al,0x30
   14006d3ea:	add    eax,0x18cb000
   14006d3ef:	add    BYTE PTR [rbp-0x1bfffe73],ch
   14006d3f5:	rex.RX add eax,0x18db000
   14006d3fb:	add    al,dh
   14006d3fd:	lea    eax,[rcx]
   14006d3ff:	add    BYTE PTR [rax],bh
   14006d401:	cmp    al,0x5
   14006d403:	add    al,dh
   14006d405:	lea    eax,[rcx]
   14006d407:	add    BYTE PTR [rdx],ch
   14006d409:	mov    es,WORD PTR [rcx]
   14006d40b:	add    BYTE PTR [rax+0x2a000530],al
   14006d411:	mov    es,WORD PTR [rcx]
   14006d413:	add    BYTE PTR [rbx+0x6800018e],dl
   14006d419:	xor    BYTE PTR [rip+0x18e9300],al        # 0x14195671f
   14006d41f:	add    BYTE PTR [rdi],ah
   14006d421:	pop    QWORD PTR [rcx]
   14006d423:	add    BYTE PTR [rax+rsi*1+0x5],dl
   14006d427:	add    BYTE PTR [rdi],ah
   14006d429:	pop    QWORD PTR [rcx]
   14006d42b:	add    BYTE PTR [rsi],bh
   14006d42d:	pop    QWORD PTR [rcx]
   14006d42f:	add    BYTE PTR [rax+rsi*1+0x5],al
   14006d433:	add    BYTE PTR [rax-0x71],al
   14006d436:	add    DWORD PTR [rax],eax
   14006d438:	add    eax,0xe4000190
   14006d43d:	rex.RX add eax,0x1901000
   14006d443:	add    BYTE PTR [rbx-0x70],bh
   14006d446:	add    DWORD PTR [rax],eax
   14006d448:	cmp    BYTE PTR [rax*1+0x190e000],bh
   14006d44f:	add    BYTE PTR [rsp+rdx*4+0x37640001],ah
   14006d456:	add    eax,0x194b000
   14006d45b:	add    BYTE PTR [rsi-0x66],bl
   14006d45e:	add    DWORD PTR [rax],eax
   14006d460:	js     0x14006d499
   14006d462:	add    eax,0x19a8000
   14006d467:	add    BYTE PTR [rsi+rbx*4+0x1],dl
   14006d46b:	add    BYTE PTR [rdi+rsi*1+0x5],ah
   14006d46f:	add    BYTE PTR [rax-0x62],ah
   14006d472:	add    DWORD PTR [rax],eax
   14006d474:	movabs ds:0xb0000537780001a4,eax
   14006d47d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14006d47e:	add    DWORD PTR [rax],eax
   14006d480:	nop
   14006d481:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006d482:	add    DWORD PTR [rax],eax
   14006d484:	xchg   esp,eax
   14006d485:	xor    BYTE PTR [rip+0x1a69000],al        # 0x141ad648b
   14006d48b:	add    ah,cl
   14006d48d:	test   al,0x1
   14006d48f:	add    BYTE PTR [rax+rsi*1-0x572ffffb],dl
   14006d496:	add    DWORD PTR [rax],eax
   14006d498:	retf   0x1aa
   14006d49b:	add    BYTE PTR [rax-0x2ffffad0],dh
   14006d4a1:	stos   BYTE PTR es:[rdi],al
   14006d4a2:	add    DWORD PTR [rax],eax
   14006d4a4:	sub    ebp,DWORD PTR [rbp+0x30c80001]
   14006d4aa:	add    eax,0x1ad3000
   14006d4af:	add    BYTE PTR [rsi-0x53],ch
   14006d4b2:	add    DWORD PTR [rax],eax
   14006d4b4:	add    BYTE PTR [rip+0xffffffffad6e0005],dh        # 0xed74d4bf
   14006d4ba:	add    DWORD PTR [rax],eax
   14006d4bc:	mov    ah,0xad
   14006d4be:	add    DWORD PTR [rax],eax
   14006d4c0:	cmp    al,0x31
   14006d4c2:	add    eax,0x1adb400
   14006d4c7:	add    BYTE PTR [rdi],ah
   14006d4c9:	scas   al,BYTE PTR es:[rdi]
   14006d4ca:	add    DWORD PTR [rax],eax
   14006d4cc:	and    BYTE PTR [rcx],dh
   14006d4ce:	add    eax,0x1ae2700
   14006d4d3:	add    ah,dl
   14006d4d5:	scas   al,BYTE PTR es:[rdi]
   14006d4d6:	add    DWORD PTR [rax],eax
   14006d4d8:	or     al,0x31
   14006d4da:	add    eax,0x1aed400
   14006d4df:	add    BYTE PTR [rcx],cl
   14006d4e1:	scas   eax,DWORD PTR es:[rdi]
   14006d4e2:	add    DWORD PTR [rax],eax
   14006d4e4:	cld    
   14006d4e5:	xor    BYTE PTR [rip+0x1af0900],al        # 0x141b5ddeb
   14006d4eb:	add    BYTE PTR [rdi-0x51],al
   14006d4ee:	add    DWORD PTR [rax],eax
   14006d4f0:	loopne 0x14006d522
   14006d4f2:	add    eax,0x1af5000
   14006d4f7:	add    bh,dl
   14006d4f9:	mov    bl,0x1
   14006d4fb:	add    BYTE PTR [rcx+rsi*1+0x5],dl
   14006d4ff:	add    al,ah
   14006d501:	mov    bl,0x1
   14006d503:	add    BYTE PTR [rsi],bh
   14006d505:	mov    ch,0x1
   14006d507:	add    BYTE PTR [rcx+rsi*1+0x5],ch
   14006d50b:	add    BYTE PTR [rax-0x4b],al
   14006d50e:	add    DWORD PTR [rax],eax
   14006d510:	(bad)  
   14006d511:	mov    dh,0x1
   14006d513:	add    BYTE PTR [rcx+rsi*1-0x492ffffb],al
   14006d51a:	add    DWORD PTR [rax],eax
   14006d51c:	ins    DWORD PTR es:[rdi],dx
   14006d51d:	mov    eax,0x31a00001
   14006d522:	add    eax,0x1b87000
   14006d527:	add    dl,ch
   14006d529:	mov    eax,0x32380001
   14006d52e:	add    eax,0x1b8ea00
   14006d533:	add    BYTE PTR [rbp-0x46],al
   14006d536:	add    DWORD PTR [rax],eax
   14006d538:	(bad)  
   14006d539:	xor    DWORD PTR [rip+0x1ba4500],eax        # 0x141c11a3f
   14006d53f:	add    BYTE PTR [rcx-0x46],bl
   14006d542:	add    DWORD PTR [rax],eax
   14006d544:	mov    ah,0x31
   14006d546:	add    eax,0x1ba6000
   14006d54b:	add    BYTE PTR [rdi+0x700001ba],ch
   14006d551:	xor    al,BYTE PTR [rip+0x1baaf00]        # 0x141c18457
   14006d557:	add    ch,ah
   14006d559:	mov    edx,0x31e80001
   14006d55e:	add    eax,0x1bae500
   14006d563:	add    BYTE PTR [rbx-0x45],bl
   14006d566:	add    DWORD PTR [rax],eax
   14006d568:	fdiv   DWORD PTR [rcx]
   14006d56a:	add    eax,0x1bb6000
   14006d56f:	add    bh,bl
   14006d571:	mov    esp,0x31fc0001
   14006d576:	add    eax,0x1bce000
   14006d57b:	add    BYTE PTR [rsi+rdi*4+0x1],bh
   14006d57f:	add    BYTE PTR [rax+rsi*1-0x417ffffb],dl
   14006d586:	add    DWORD PTR [rax],eax
   14006d588:	sbb    eax,0xa00001c0
   14006d58d:	xor    DWORD PTR [rip+0x1c02000],eax        # 0x141c6f593
   14006d593:	add    BYTE PTR [rdx+0x380001c0],bl
   14006d599:	xor    al,BYTE PTR [rip+0x1c09a00]        # 0x141c76f9f
   14006d59f:	add    ch,dh
   14006d5a1:	rol    DWORD PTR [rcx],0x0
   14006d5a4:	and    al,0x32
   14006d5a6:	add    eax,0x1c1f500
   14006d5ab:	add    BYTE PTR [rcx],cl
   14006d5ad:	ret    0x1
   14006d5b0:	adc    al,0x32
   14006d5b2:	add    eax,0x1c21000
   14006d5b7:	add    BYTE PTR [rdi-0x3e],bl
   14006d5ba:	add    DWORD PTR [rax],eax
   14006d5bc:	jo     0x14006d5f0
   14006d5be:	add    eax,0x1c25f00
   14006d5c3:	add    BYTE PTR [rbp+0x5c0001c2],dl
   14006d5c9:	xor    al,BYTE PTR [rip+0x1c29500]        # 0x141c96acf
   14006d5cf:	add    BYTE PTR [rbx],cl
   14006d5d1:	ret    
   14006d5d2:	add    DWORD PTR [rax],eax
   14006d5d4:	rex.WR xor r8b,BYTE PTR [rip+0x1c32000]        # 0x141c9f5db
   14006d5db:	add    BYTE PTR [rax-0x7bfffe3b],ch
   14006d5e1:	xor    al,BYTE PTR [rip+0x1c5e000]        # 0x141ccb5e7
   14006d5e7:	add    BYTE PTR [rip+0xffffffffe80001c6],al        # 0x12806d7b3
   14006d5ed:	xor    al,BYTE PTR [rip+0x1c60500]        # 0x141ccdaf3
   14006d5f3:	add    BYTE PTR [rdi-0x3a],bh
   14006d5f6:	add    DWORD PTR [rax],eax
   14006d5f8:	shl    BYTE PTR [rdx],1
   14006d5fa:	add    eax,0x1c67f00
   14006d5ff:	add    BYTE PTR [rdi],cl
   14006d601:	retf   
   14006d602:	add    DWORD PTR [rax],eax
   14006d604:	mov    esp,0xf000532
   14006d609:	retf   
   14006d60a:	add    DWORD PTR [rax],eax
   14006d60c:	(bad)  
   14006d60d:	retf   
   14006d60e:	add    DWORD PTR [rax],eax
   14006d610:	lods   al,BYTE PTR ds:[rsi]
   14006d611:	xor    al,BYTE PTR [rip+0x1cb3f00]        # 0x141d21517
   14006d617:	add    BYTE PTR [rax-0x35],cl
   14006d61a:	add    DWORD PTR [rax],eax
   14006d61c:	pushf  
   14006d61d:	xor    al,BYTE PTR [rip+0x1cb5000]        # 0x141d22623
   14006d623:	add    BYTE PTR [rbx+rcx*8+0x341c0001],dl
   14006d62a:	add    eax,0x1cb9400
   14006d62f:	add    BYTE PTR [rbx+0x340001cb],dh
   14006d635:	xor    eax,DWORD PTR [rip+0x1cbb300]        # 0x141d2893b
   14006d63b:	add    BYTE PTR [rcx-0x31],dh
   14006d63e:	add    DWORD PTR [rax],eax
   14006d640:	sbb    BYTE PTR [rbx],dh
   14006d642:	add    eax,0x1cf7100
   14006d647:	add    BYTE PTR [rsi-0x31],dh
   14006d64a:	add    DWORD PTR [rax],eax
   14006d64c:	or     BYTE PTR [rbx],dh
   14006d64e:	add    eax,0x1cf7600
   14006d653:	add    BYTE PTR [rdi+rcx*8+0x32f80001],al
   14006d65a:	add    eax,0x1cf9000
   14006d65f:	add    BYTE PTR [rax+rdx*8],dl
   14006d662:	add    DWORD PTR [rax],eax
   14006d664:	fs xor al,0x5
   14006d667:	add    BYTE PTR [rax+rdx*8],dl
   14006d66a:	add    DWORD PTR [rax],eax
   14006d66c:	jle    0x14006d63e
   14006d66e:	add    DWORD PTR [rax],eax
   14006d670:	ins    BYTE PTR es:[rdi],dx
   14006d671:	xor    eax,DWORD PTR [rip+0x1d07e00]        # 0x141d75477
   14006d677:	add    BYTE PTR [rdi+0x5c0001d0],al
   14006d67d:	xor    eax,DWORD PTR [rip+0x1d08700]        # 0x141d75d83
   14006d683:	add    BYTE PTR [rcx+0x480001d0],bh
   14006d689:	xor    eax,DWORD PTR [rip+0x1d12000]        # 0x141d7f68f
   14006d68f:	add    BYTE PTR [rbp-0x2f],al
   14006d692:	add    DWORD PTR [rax],eax
   14006d694:	call   0x18506dbcb
   14006d699:	rol    DWORD PTR [rcx],1
   14006d69b:	add    BYTE PTR [rdi-0x4bfffe2f],bh
   14006d6a1:	xor    eax,DWORD PTR [rip+0x1d1bf00]        # 0x141d895a7
   14006d6a7:	add    BYTE PTR [rsi+rdx*8+0x1],al
   14006d6ab:	add    BYTE PTR [rax+0x44000533],ah
   14006d6b1:	(bad)  
   14006d6b2:	add    DWORD PTR [rax],eax
   14006d6b4:	je     0x14006d68c
   14006d6b6:	add    DWORD PTR [rax],eax
   14006d6b8:	nop
   14006d6b9:	xor    eax,DWORD PTR [rip+0x1d67400]        # 0x141dd4abf
   14006d6bf:	add    BYTE PTR [rbp-0x2a],bh
   14006d6c2:	add    DWORD PTR [rax],eax
   14006d6c4:	xor    BYTE PTR [rbx],0x5
   14006d6c7:	add    BYTE PTR [rax-0x3bfffe2a],al
   14006d6cd:	(bad)  
   14006d6ce:	add    DWORD PTR [rax],eax
   14006d6d0:	sbb    al,0x34
   14006d6d2:	add    eax,0x1d6c400
   14006d6d7:	add    bl,ah
   14006d6d9:	(bad)  
   14006d6da:	add    DWORD PTR [rax],eax
   14006d6dc:	or     BYTE PTR [rax*1+0x1d6e300],dh
   14006d6e3:	add    BYTE PTR [rcx-0x13fffe26],ah
   14006d6e9:	xor    eax,DWORD PTR [rip+0x1daa100]        # 0x141e177ef
   14006d6ef:	add    BYTE PTR [rsi-0x23fffe26],ah
   14006d6f5:	xor    eax,DWORD PTR [rip+0x1daa600]        # 0x141e17cfb
   14006d6fb:	add    BYTE PTR [rdx+rbx*8+0x33cc0001],dh
   14006d702:	add    eax,0x1dac000
   14006d707:	add    BYTE PTR [rbx+rbx*8+0x1],al
   14006d70b:	add    BYTE PTR [rsp+rsi*1+0x5],ah
   14006d70f:	add    BYTE PTR [rbx+rbx*8+0x1],al
   14006d713:	add    BYTE PTR [rsi+0x500001db],ch
   14006d719:	xor    al,0x5
   14006d71b:	add    BYTE PTR [rsi-0x48fffe25],ch
   14006d721:	fild   DWORD PTR [rcx]
   14006d723:	add    BYTE PTR [rax+0x34],al
   14006d726:	add    eax,0x1dbb700
   14006d72b:	add    cl,ch
   14006d72d:	fild   DWORD PTR [rcx]
   14006d72f:	add    BYTE PTR [rsp+rsi*1],ch
   14006d732:	add    eax,0x1dca000
   14006d737:	add    BYTE PTR [rsi+rbx*8+0x34840001],ch
   14006d73e:	add    eax,0x1e26000
   14006d743:	add    BYTE PTR [rsi],bh
   14006d745:	out    0x1,al
   14006d747:	add    BYTE PTR [rsp+rsi*1+0x5],ch
   14006d74b:	add    BYTE PTR [rax-0x1a],al
   14006d74e:	add    DWORD PTR [rax],eax
   14006d750:	jge    0x14006d73b
   14006d752:	add    DWORD PTR [rax],eax
   14006d754:	test   BYTE PTR [rax*1+0x1ea4000],dh
   14006d75b:	add    cl,bh
   14006d75d:	in     eax,dx
   14006d75e:	add    DWORD PTR [rax],eax
   14006d760:	movabs al,ds:0x580001ee00000534
   14006d769:	icebp  
   14006d76a:	add    DWORD PTR [rax],eax
   14006d76c:	pushf  
   14006d76d:	(bad)  
   14006d76e:	add    eax,0x1f16000
   14006d773:	add    BYTE PTR [rbx+0x1f1],ah
   14006d779:	xor    eax,0xf1a30005
   14006d77e:	add    DWORD PTR [rax],eax
   14006d780:	test   al,0xf1
   14006d782:	add    DWORD PTR [rax],eax
   14006d784:	in     al,dx
   14006d785:	xor    al,0x5
   14006d787:	add    BYTE PTR [rax+0x300001f1],ch
   14006d78d:	repnz add DWORD PTR [rax],eax
   14006d790:	fdiv   DWORD PTR [rax*1+0x1f23000]
   14006d797:	add    BYTE PTR [rsi-0xe],ch
   14006d79a:	add    DWORD PTR [rax],eax
   14006d79c:	enter  0x534,0x0
   14006d7a0:	outs   dx,BYTE PTR ds:[rsi]
   14006d7a1:	repnz add DWORD PTR [rax],eax
   14006d7a4:	(bad)
   14006d7a7:	add    BYTE PTR [rax+0x534],bh
   14006d7ad:	repz add DWORD PTR [rax],eax
   14006d7b0:	(bad)  
   14006d7b1:	repz add DWORD PTR [rax],eax
   14006d7b4:	nop
   14006d7b5:	xor    eax,0xf3160005
   14006d7ba:	add    DWORD PTR [rax],eax
   14006d7bc:	xchg   ecx,eax
   14006d7bd:	repz add DWORD PTR [rax],eax
   14006d7c0:	jo     0x14006d7f7
   14006d7c2:	add    eax,0x1f39100
   14006d7c7:	add    BYTE PTR [rsi],bl
   14006d7c9:	cmc    
   14006d7ca:	add    DWORD PTR [rax],eax
   14006d7cc:	pop    rsp
   14006d7cd:	xor    eax,0xf51e0005
   14006d7d2:	add    DWORD PTR [rax],eax
   14006d7d4:	enter  0x1f5,0x0
   14006d7d8:	rex.WR xor rax,0xfffffffff5c80005
   14006d7de:	add    DWORD PTR [rax],eax
   14006d7e0:	(bad)  
   14006d7e1:	cmc    
   14006d7e2:	add    DWORD PTR [rax],eax
   14006d7e4:	cmp    BYTE PTR [rip+0xfffffffff5ea0005],dh        # 0x135f0d7ef
   14006d7ea:	add    DWORD PTR [rax],eax
   14006d7ec:	adc    dh,dh
   14006d7ee:	add    DWORD PTR [rax],eax
   14006d7f0:	sub    BYTE PTR [rip+0xfffffffff6120005],dh        # 0x13618d7fb
   14006d7f6:	add    DWORD PTR [rax],eax
   14006d7f8:	sbb    esi,esi
   14006d7fa:	add    DWORD PTR [rax],eax
   14006d7fc:	or     BYTE PTR [rip+0xfffffffff6200005],dh        # 0x13626d807
   14006d802:	add    DWORD PTR [rax],eax
   14006d804:	jae    0x14006d7fd
   14006d806:	add    DWORD PTR [rax],eax
   14006d808:	cmp    al,0x3e
   14006d80a:	add    eax,0x1f7a000
   14006d80f:	add    bl,al
   14006d811:	test   DWORD PTR [rcx],0x5360000
   14006d817:	add    bl,al
   14006d819:	test   DWORD PTR [rcx],0x1f7fe00
   14006d81f:	add    ah,ch
   14006d821:	xor    eax,0xf7fe0005
   14006d826:	add    DWORD PTR [rax],eax
   14006d828:	xbegin 0x175d6d82f
   14006d82e:	add    eax,0x1f8c700
   14006d833:	add    BYTE PTR [rsi-0x7],cl
   14006d836:	add    DWORD PTR [rax],eax
   14006d838:	mov    esp,0x4e000535
   14006d83d:	stc    
   14006d83e:	add    DWORD PTR [rax],eax
   14006d840:	test   al,0xf9
   14006d842:	add    DWORD PTR [rax],eax
   14006d844:	lods   al,BYTE PTR ds:[rsi]
   14006d845:	xor    eax,0xf9a80005
   14006d84a:	add    DWORD PTR [rax],eax
   14006d84c:	in     al,0xf9
   14006d84e:	add    DWORD PTR [rax],eax
   14006d850:	pushf  
   14006d851:	xor    eax,0xfa400005
   14006d856:	add    DWORD PTR [rax],eax
   14006d858:	jbe    0x14006d854
   14006d85a:	add    DWORD PTR [rax],eax
   14006d85c:	pop    rsp
   14006d85d:	ss add eax,0x1fa7600
   14006d863:	add    BYTE PTR [rdi+0x480001fa],dl
   14006d869:	ss add eax,0x1fa9700
   14006d86f:	add    BYTE PTR [rdi-0x5],bh
   14006d872:	add    DWORD PTR [rax],eax
   14006d874:	xor    al,0x36
   14006d876:	add    eax,0x1fb7f00
   14006d87b:	add    cl,al
   14006d87d:	sti    
   14006d87e:	add    DWORD PTR [rax],eax
   14006d880:	and    al,0x36
   14006d882:	add    eax,0x1fbc100
   14006d887:	add    cl,cl
   14006d889:	sti    
   14006d88a:	add    DWORD PTR [rax],eax
   14006d88c:	adc    BYTE PTR [rsi],dh
   14006d88e:	add    eax,0x1fbe000
   14006d893:	add    BYTE PTR [rcx],ah
   14006d895:	cld    
   14006d896:	add    DWORD PTR [rax],eax
   14006d898:	movabs al,ds:0xfa0001fc21000536
   14006d8a1:	cld    
   14006d8a2:	add    DWORD PTR [rax],eax
   14006d8a4:	mov    WORD PTR [rsi],?
   14006d8a6:	add    eax,0x1fcfa00
   14006d8ab:	add    BYTE PTR [rdx],cl
   14006d8ad:	std    
   14006d8ae:	add    DWORD PTR [rax],eax
   14006d8b0:	jl     0x14006d8e8
   14006d8b2:	add    eax,0x1fd0a00
   14006d8b7:	add    BYTE PTR [rdi],bl
   14006d8b9:	std    
   14006d8ba:	add    DWORD PTR [rax],eax
   14006d8bc:	push   0x1f000536
   14006d8c1:	std    
   14006d8c2:	add    DWORD PTR [rax],eax
   14006d8c4:	xor    eax,0x7c0001fd
   14006d8c9:	ss add eax,0x1fd4000
   14006d8cf:	add    BYTE PTR [rbx-0x3],bh
   14006d8d2:	add    DWORD PTR [rax],eax
   14006d8d4:	pop    rsp
   14006d8d5:	(bad)  
   14006d8d6:	add    eax,0x1fe0000
   14006d8db:	add    BYTE PTR [rsi-0x2],cl
   14006d8de:	add    DWORD PTR [rax],eax
   14006d8e0:	fdiv   QWORD PTR [rsi]
   14006d8e2:	add    eax,0x1fe4e00
   14006d8e7:	add    BYTE PTR [rbx-0x3ffffdfa],ah
   14006d8ed:	ss add eax,0x206a300
   14006d8f3:	add    BYTE PTR [rdx-0x4ffffdfa],dh
   14006d8f9:	ss add eax,0x206c000
   14006d8ff:	add    BYTE PTR [rax],al
   14006d901:	(bad)  
   14006d902:	add    al,BYTE PTR [rax]
   14006d904:	sub    al,0x37
   14006d906:	add    eax,0x2070000
   14006d90b:	add    BYTE PTR [rdx+0x13],al
   14006d90e:	add    al,BYTE PTR [rax]
   14006d910:	adc    al,0x37
   14006d912:	add    eax,0x2134200
   14006d917:	add    BYTE PTR [rbx+rdx*1+0x2],dh
   14006d91b:	add    BYTE PTR [rdi+rsi*1],al
   14006d91e:	add    eax,0x2137400
   14006d923:	add    BYTE PTR [rdi+0x14],dh
   14006d926:	add    al,BYTE PTR [rax]
   14006d928:	in     al,dx
   14006d929:	ss add eax,0x214e000
   14006d92f:	add    BYTE PTR [rdi+0x40000215],bh
   14006d935:	(bad)  
   14006d936:	add    eax,0x216c000
   14006d93b:	add    BYTE PTR [rbp+0x17],dl
   14006d93e:	add    al,BYTE PTR [rax]
   14006d940:	(bad)  
   14006d941:	rex.R add eax,0x2176000
   14006d947:	add    BYTE PTR [rbx+0x5c000217],cl
   14006d94d:	(bad)  
   14006d94e:	add    eax,0x2179000
   14006d953:	add    BYTE PTR [rax+0x1d],ah
   14006d956:	add    al,BYTE PTR [rax]
   14006d958:	fs (bad) 
   14006d95a:	add    eax,0x21d6000
   14006d95f:	add    BYTE PTR [rdx+riz*1+0x2],al
   14006d963:	add    BYTE PTR [rax+0x37],bh
   14006d966:	add    eax,0x2228000
   14006d96b:	add    BYTE PTR [rcx],dl
   14006d96d:	and    eax,DWORD PTR [rdx]
   14006d96f:	add    BYTE PTR [rdi+riz*1+0x5],ch
   14006d973:	add    al,dl
   14006d975:	and    eax,DWORD PTR [rdx]
   14006d977:	add    BYTE PTR [rax-0x6bfffdd2],ah
   14006d97d:	(bad)  
   14006d97e:	add    eax,0x22ea000
   14006d983:	add    BYTE PTR [rdx+0x38],cl
   14006d986:	add    al,BYTE PTR [rax]
   14006d988:	lods   al,BYTE PTR ds:[rsi]
   14006d989:	(bad)  
   14006d98a:	add    eax,0x2387000
   14006d98f:	add    al,cl
   14006d991:	cmp    BYTE PTR [rdx],al
   14006d993:	add    ah,al
   14006d995:	(bad)  
   14006d996:	add    eax,0x238d000
   14006d99b:	add    BYTE PTR [rcx],cl
   14006d99d:	cmp    DWORD PTR [rdx],eax
   14006d99f:	add    al,bl
   14006d9a1:	(bad)  
   14006d9a2:	add    eax,0x2390900
   14006d9a7:	add    BYTE PTR [rsi+0x39],bl
   14006d9aa:	add    al,BYTE PTR [rax]
   14006d9ac:	in     al,0x37
   14006d9ae:	add    eax,0x2395e00
   14006d9b3:	add    BYTE PTR [rcx+rdi*1+0x2],bh
   14006d9b7:	add    al,dl
   14006d9b9:	(bad)  
   14006d9ba:	add    eax,0x2398000
   14006d9bf:	add    BYTE PTR [rdi+0x5c000239],dh
   14006d9c5:	(bad)  
   14006d9c6:	add    eax,0x23a2000
   14006d9cb:	add    BYTE PTR [rdx],cl
   14006d9cd:	cmp    eax,0x32840002
   14006d9d2:	add    eax,0x23d1000
   14006d9d7:	add    BYTE PTR [rdx],cl
   14006d9d9:	rex.X add al,BYTE PTR [rax]
   14006d9dc:	clc    
   14006d9dd:	(bad)  
   14006d9de:	add    eax,0x2421000
   14006d9e3:	add    BYTE PTR [rdi+0x42],ch
   14006d9e6:	add    al,BYTE PTR [rax]
   14006d9e8:	fs (bad) 
   14006d9ea:	add    eax,0x2427000
   14006d9ef:	add    al,dh
   14006d9f1:	rex.X add al,BYTE PTR [rax]
   14006d9f4:	pop    rsp
   14006d9f5:	(bad)  
   14006d9f6:	add    eax,0x242f000
   14006d9fb:	add    BYTE PTR [rbx+0x43],dl
   14006d9fe:	add    al,BYTE PTR [rax]
   14006da00:	movabs al,ds:0x8600024360000544
   14006da09:	rex.XB add al,BYTE PTR [r8]
   14006da0c:	rex.W cmp BYTE PTR [rip+0x2438600],al        # 0x1424a6013
   14006da13:	add    dl,dl
   14006da15:	rex.XB add al,BYTE PTR [r8]
   14006da18:	xor    al,0x38
   14006da1a:	add    eax,0x243d200
   14006da1f:	add    dl,dh
   14006da21:	rex.XB add al,BYTE PTR [r8]
   14006da24:	and    BYTE PTR [rax],bh
   14006da26:	add    eax,0x243f200
   14006da2b:	add    bh,bh
   14006da2d:	rex.XB add al,BYTE PTR [r8]
   14006da30:	adc    BYTE PTR [rax],bh
   14006da32:	add    eax,0x2440000
   14006da37:	add    BYTE PTR [rsi],dl
   14006da39:	add    r8b,BYTE PTR [rax]
   14006da3c:	rex.W cmp BYTE PTR [rip+0x2441600],al        # 0x1424af043
   14006da43:	add    BYTE PTR [rdx+0x44],al
   14006da46:	add    al,BYTE PTR [rax]
   14006da48:	cmp    BYTE PTR fs:[rip+0x2444200],al        # 0x1424b1c4f
   14006da4f:	add    BYTE PTR [rsi+0x44],bl
   14006da52:	add    al,BYTE PTR [rax]
   14006da54:	push   rsp
   14006da55:	cmp    BYTE PTR [rip+0x2446000],al        # 0x1424b3a5b
   14006da5b:	add    bh,ah
   14006da5d:	add    r8b,BYTE PTR [rax]
   14006da60:	js     0x14006da9a
   14006da62:	add    eax,0x244f000
   14006da67:	add    BYTE PTR [rbx+0x45],cl
   14006da6a:	add    al,BYTE PTR [rax]
   14006da6c:	mov    esp,0x4b000538
   14006da71:	add    r8b,BYTE PTR [r8]
   14006da74:	sahf   
   14006da75:	push   rax
   14006da76:	add    al,BYTE PTR [rax]
   14006da78:	pushf  
   14006da79:	cmp    BYTE PTR [rip+0x2509e00],al        # 0x14257787f
   14006da7f:	add    BYTE PTR [rax+rdx*2+0x388c0002],bh
   14006da86:	add    eax,0x250c000
   14006da8b:	add    ch,bh
   14006da8d:	push   rax
   14006da8e:	add    al,BYTE PTR [rax]
   14006da90:	cld    
   14006da91:	cmp    BYTE PTR [rip+0x250fd00],al        # 0x14257d797
   14006da97:	add    BYTE PTR [rdx-0x17fffdaf],al
   14006da9d:	cmp    BYTE PTR [rip+0x2518200],al        # 0x142585ca3
   14006daa3:	add    BYTE PTR [rcx-0x2bfffdaf],bl
   14006daa9:	cmp    BYTE PTR [rip+0x2519900],al        # 0x1425873af
   14006daaf:	add    bl,cl
   14006dab1:	push   rcx
   14006dab2:	add    al,BYTE PTR [rax]
   14006dab4:	(bad)  
   14006dab5:	cmp    BYTE PTR [rip+0x251cb00],al        # 0x14258a5bb
   14006dabb:	add    BYTE PTR [rcx],cl
   14006dabd:	push   rdx
   14006dabe:	add    al,BYTE PTR [rax]
   14006dac0:	(bad)  
   14006dac1:	cmp    BYTE PTR [rip+0x2520900],al        # 0x14258e3c7
   14006dac7:	add    BYTE PTR [rbx-0x2bfffdae],al
   14006dacd:	cmp    BYTE PTR [rip+0x2528300],al        # 0x142595dd3
   14006dad3:	add    BYTE PTR [rbp-0x2bfffdae],ch
   14006dad9:	cmp    BYTE PTR [rip+0x252ad00],al        # 0x1425987df
   14006dadf:	add    dl,ch
   14006dae1:	push   rdx
   14006dae2:	add    al,BYTE PTR [rax]
   14006dae4:	(bad)  
   14006dae5:	cmp    BYTE PTR [rip+0x252ea00],al        # 0x14259c4eb
   14006daeb:	add    BYTE PTR [rsi],bl
   14006daed:	push   rbx
   14006daee:	add    al,BYTE PTR [rax]
   14006daf0:	(bad)  
   14006daf1:	cmp    BYTE PTR [rip+0x2531e00],al        # 0x14259f8f7
   14006daf7:	add    BYTE PTR [rdi],dh
   14006daf9:	push   rbx
   14006dafa:	add    al,BYTE PTR [rax]
   14006dafc:	(bad)  
   14006dafd:	cmp    BYTE PTR [rip+0x2533700],al        # 0x1425a1203
   14006db03:	add    BYTE PTR [rsi-0x2bfffdad],bl
   14006db09:	cmp    BYTE PTR [rip+0x2539e00],al        # 0x1425a790f
   14006db0f:	add    bh,cl
   14006db11:	push   rbx
   14006db12:	add    al,BYTE PTR [rax]
   14006db14:	(bad)  
   14006db15:	cmp    BYTE PTR [rip+0x253cf00],al        # 0x1425aaa1b
   14006db1b:	add    al,bh
   14006db1d:	push   rbx
   14006db1e:	add    al,BYTE PTR [rax]
   14006db20:	(bad)  
   14006db21:	cmp    BYTE PTR [rip+0x253f800],al        # 0x1425ad327
   14006db27:	add    BYTE PTR [rax],bl
   14006db29:	push   rsp
   14006db2a:	add    al,BYTE PTR [rax]
   14006db2c:	(bad)  
   14006db2d:	cmp    BYTE PTR [rip+0x2541800],al        # 0x1425af333
   14006db33:	add    BYTE PTR [rdi],ch
   14006db35:	push   rsp
   14006db36:	add    al,BYTE PTR [rax]
   14006db38:	(bad)  
   14006db39:	cmp    BYTE PTR [rip+0x2543000],al        # 0x1425b0b3f
   14006db3f:	add    BYTE PTR [rcx],bh
   14006db41:	push   rsi
   14006db42:	add    al,BYTE PTR [rax]
   14006db44:	or     BYTE PTR [rcx],bh
   14006db46:	add    eax,0x2564000
   14006db4b:	add    BYTE PTR [rsi+0x68000256],dl
   14006db51:	cmp    DWORD PTR [rip+0x2569600],eax        # 0x1425d7157
   14006db57:	add    BYTE PTR [rax+0x57],ah
   14006db5a:	add    al,BYTE PTR [rax]
   14006db5c:	cmp    QWORD PTR [rip+0x2576000],r8        # 0x1425e3b63
   14006db63:	add    BYTE PTR [rax+0x20000257],al
   14006db69:	cmp    DWORD PTR [rip+0x2578000],eax        # 0x1425e5b6f
   14006db6f:	add    BYTE PTR [rdi+rdx*2+0x39300002],bh
   14006db76:	add    eax,0x257bc00
   14006db7b:	add    ah,al
   14006db7d:	push   rdi
   14006db7e:	add    al,BYTE PTR [rax]
   14006db80:	and    BYTE PTR [rcx],bh
   14006db82:	add    eax,0x2589000
   14006db87:	add    BYTE PTR [rsi-0x53fffda8],ah
   14006db8d:	cs add eax,0x258a600
   14006db93:	add    bl,bl
   14006db95:	pop    rax
   14006db96:	add    al,BYTE PTR [rax]
   14006db98:	xchg   esp,eax
   14006db99:	cmp    DWORD PTR [rip+0x258db00],eax        # 0x1425fb69f
   14006db9f:	add    bh,dh
   14006dba1:	pop    rax
   14006dba2:	add    al,BYTE PTR [rax]
   14006dba4:	test   BYTE PTR [rcx],bh
   14006dba6:	add    eax,0x259b000
   14006dbab:	add    BYTE PTR [rsp+rbx*2+0x34840002],bh
   14006dbb2:	add    eax,0x25cc000
   14006dbb7:	add    BYTE PTR [rdx],dl
   14006dbb9:	pop    rsi
   14006dbba:	add    al,BYTE PTR [rax]
   14006dbbc:	adc    al,0x42
   14006dbbe:	add    eax,0x25e6000
   14006dbc3:	add    BYTE PTR [rax-0x57fffd97],bh
   14006dbc9:	cmp    DWORD PTR [rip+0x269c000],eax        # 0x142709bcf
   14006dbcf:	add    ah,ah
   14006dbd1:	outs   dx,BYTE PTR ds:[rsi]
   14006dbd2:	add    al,BYTE PTR [rax]
   14006dbd4:	cmp    al,BYTE PTR [rip+0x26ef000]        # 0x14275cbdb
   14006dbdb:	add    BYTE PTR [rdx+0x1400026f],al
   14006dbe1:	rex.X add eax,0x26f9000
   14006dbe7:	add    BYTE PTR [rcx],dh
   14006dbe9:	jne    0x14006dbed
   14006dbeb:	add    ah,cl
   14006dbed:	cmp    DWORD PTR [rip+0x2754000],eax        # 0x1427c1bf3
   14006dbf3:	add    BYTE PTR [rdx+0x77],al
   14006dbf6:	add    al,BYTE PTR [rax]
   14006dbf8:	call   0x19006e136
   14006dbfd:	ja     0x14006dc01
   14006dbff:	add    BYTE PTR [rdi+0x27a],cl
   14006dc05:	cmp    al,BYTE PTR [rip+0x27a9000]        # 0x142816c0b
   14006dc0b:	add    BYTE PTR [rdx],bl
   14006dc0d:	add    DWORD PTR [rdx],0x53a1c00
   14006dc13:	add    BYTE PTR [rax],ah
   14006dc15:	add    DWORD PTR [rdx],0x2852600
   14006dc1b:	add    BYTE PTR [rax+0x3a],al
   14006dc1e:	add    eax,0x2853000
   14006dc23:	add    cl,ah
   14006dc25:	test   DWORD PTR [rdx],eax
   14006dc27:	add    BYTE PTR [rax-0x1efffac6],al
   14006dc2d:	test   DWORD PTR [rdx],eax
   14006dc2f:	add    BYTE PTR [rdx-0x7a],bl
   14006dc32:	add    al,BYTE PTR [rax]
   14006dc34:	push   0x5a00053a
   14006dc39:	xchg   BYTE PTR [rdx],al
   14006dc3b:	add    BYTE PTR [rdi+rax*4],dl
   14006dc3e:	add    al,BYTE PTR [rax]
   14006dc40:	pop    rax
   14006dc41:	cmp    al,BYTE PTR [rip+0x2872000]        # 0x1428dfc47
   14006dc47:	add    cl,ah
   14006dc49:	xchg   DWORD PTR [rdx],eax
   14006dc4b:	add    BYTE PTR [rax-0xffffac6],bl
   14006dc51:	xchg   DWORD PTR [rdx],eax
   14006dc53:	add    BYTE PTR [rax+rcx*4],cl
   14006dc56:	add    al,BYTE PTR [rax]
   14006dc58:	fdivr  DWORD PTR [rdx]
   14006dc5a:	add    eax,0x2880c00
   14006dc5f:	add    BYTE PTR [rbx-0x43fffd77],al
   14006dc65:	cmp    al,BYTE PTR [rip+0x2898300]        # 0x142905f6b
   14006dc6b:	add    BYTE PTR [rcx+rcx*4+0x3aac0002],cl
   14006dc72:	add    eax,0x2899000
   14006dc77:	add    BYTE PTR [rcx],ch
   14006dc79:	mov    al,BYTE PTR [rdx]
   14006dc7b:	add    BYTE PTR [rbx+rdi*1],ch
   14006dc7e:	add    eax,0x28a2900
   14006dc83:	add    BYTE PTR [rsi-0x74],dh
   14006dc86:	add    al,BYTE PTR [rax]
   14006dc88:	adc    BYTE PTR [rbx],bh
   14006dc8a:	add    eax,0x28c7600
   14006dc8f:	add    BYTE PTR [rsp+rcx*4+0x3ae40002],dl
   14006dc96:	add    eax,0x28c9400
   14006dc9b:	add    BYTE PTR [rsi],dh
   14006dc9d:	pop    QWORD PTR [rdx]
   14006dc9f:	add    ah,dh
   14006dca1:	cmp    al,BYTE PTR [rip+0x28f3600]        # 0x1429612a7
   14006dca7:	add    BYTE PTR [rbx-0x71],al
   14006dcaa:	add    al,BYTE PTR [rax]
   14006dcac:	in     al,0x3a
   14006dcae:	add    eax,0x28f5000
   14006dcb3:	add    BYTE PTR [rdi+rcx*4+0x44f80002],dh
   14006dcba:	add    eax,0x28fc000
   14006dcbf:	add    bl,cl
   14006dcc1:	pop    QWORD PTR [rdx]
   14006dcc3:	add    BYTE PTR [rax+0x3b],dh
   14006dcc6:	add    eax,0x28fcb00
   14006dccb:	add    BYTE PTR [rbp-0x70],cl
   14006dcce:	add    al,BYTE PTR [rax]
   14006dcd0:	push   rsp
   14006dcd1:	cmp    eax,DWORD PTR [rip+0x2904d00]        # 0x1429729d7
   14006dcd7:	add    BYTE PTR [rbp-0x70],bl
   14006dcda:	add    al,BYTE PTR [rax]
   14006dcdc:	cmp    r8d,DWORD PTR [rip+0x2906000]        # 0x142973ce3
   14006dce3:	add    BYTE PTR [rax+rdx*4+0x3ba00002],ah
   14006dcea:	add    eax,0x290a400
   14006dcef:	add    BYTE PTR [rcx],ch
   14006dcf1:	xchg   ecx,eax
   14006dcf2:	add    al,BYTE PTR [rax]
   14006dcf4:	mov    WORD PTR [rbx],?
   14006dcf6:	add    eax,0x2912900
   14006dcfb:	add    BYTE PTR [rcx-0x6f],al
   14006dcfe:	add    al,BYTE PTR [rax]
   14006dd00:	jl     0x14006dd3d
   14006dd02:	add    eax,0x2915000
   14006dd07:	add    BYTE PTR [rbx-0x6f],bh
   14006dd0a:	add    al,BYTE PTR [rax]
   14006dd0c:	xor    BYTE PTR [rax*1+0x2917b00],bh
   14006dd13:	add    ah,bh
   14006dd15:	xchg   ecx,eax
   14006dd16:	add    al,BYTE PTR [rax]
   14006dd18:	or     al,0x3c
   14006dd1a:	add    eax,0x291fc00
   14006dd1f:	add    cl,dh
   14006dd21:	xchg   edx,eax
   14006dd22:	add    al,BYTE PTR [rax]
   14006dd24:	hlt    
   14006dd25:	cmp    eax,DWORD PTR [rip+0x292f100]        # 0x14299ce2b
   14006dd2b:	add    BYTE PTR [rbx+rdx*4],dl
   14006dd2e:	add    al,BYTE PTR [rax]
   14006dd30:	in     al,0x3b
   14006dd32:	add    eax,0x2931400
   14006dd37:	add    BYTE PTR [rsi],bh
   14006dd39:	xchg   ebx,eax
   14006dd3a:	add    al,BYTE PTR [rax]
   14006dd3c:	mov    eax,0x3e00053b
   14006dd41:	xchg   ebx,eax
   14006dd42:	add    al,BYTE PTR [rax]
   14006dd44:	rex.RXB xchg r11d,eax
   14006dd46:	add    al,BYTE PTR [rax]
   14006dd48:	test   al,0x3b
   14006dd4a:	add    eax,0x2935000
   14006dd4f:	add    ah,bh
   14006dd51:	xchg   ebx,eax
   14006dd52:	add    al,BYTE PTR [rax]
   14006dd54:	cmp    BYTE PTR [rax*1+0x2940000],bh
   14006dd5b:	add    BYTE PTR [rbp+0x40000295],cl
   14006dd61:	cmp    al,0x5
   14006dd63:	add    BYTE PTR [rax-0x49fffd6b],dl
   14006dd69:	xchg   ebp,eax
   14006dd6a:	add    al,BYTE PTR [rax]
   14006dd6c:	mov    al,0x3c
   14006dd6e:	add    eax,0x295b600
   14006dd73:	add    dh,dl
   14006dd75:	xchg   ebp,eax
   14006dd76:	add    al,BYTE PTR [rax]
   14006dd78:	cwde   
   14006dd79:	cmp    al,0x5
   14006dd7b:	add    dh,dl
   14006dd7d:	xchg   ebp,eax
   14006dd7e:	add    al,BYTE PTR [rax]
   14006dd80:	(bad)  
   14006dd81:	xchg   esi,eax
   14006dd82:	add    al,BYTE PTR [rax]
   14006dd84:	js     0x14006ddc2
   14006dd86:	add    eax,0x2968f00
   14006dd8b:	add    BYTE PTR [rsi+0x68000296],ch
   14006dd91:	cmp    al,0x5
   14006dd93:	add    BYTE PTR [rsi-0x2efffd6a],ch
   14006dd99:	xchg   esi,eax
   14006dd9a:	add    al,BYTE PTR [rax]
   14006dd9c:	pop    rax
   14006dd9d:	cmp    al,0x5
   14006dd9f:	add    al,ah
   14006dda1:	xchg   esi,eax
   14006dda2:	add    al,BYTE PTR [rax]
   14006dda4:	adc    DWORD PTR [rdi+0x3d9c0002],0x5
   14006ddab:	add    BYTE PTR [rbx+0xd000297],al
   14006ddb1:	cwde   
   14006ddb2:	add    al,BYTE PTR [rax]
   14006ddb4:	int3   
   14006ddb5:	cmp    al,0x5
   14006ddb7:	add    BYTE PTR [rip+0xffffffffd4000298],cl        # 0x11406e055
   14006ddbd:	cwde   
   14006ddbe:	add    al,BYTE PTR [rax]
   14006ddc0:	mov    esp,0x7000053c
   14006ddc5:	cdq    
   14006ddc6:	add    al,BYTE PTR [rax]
   14006ddc8:	loopne 0x14006dd63
   14006ddca:	add    al,BYTE PTR [rax]
   14006ddcc:	cmp    BYTE PTR [rip+0xffffffff99e00005],bh        # 0xd9e6ddd7
   14006ddd2:	add    al,BYTE PTR [rax]
   14006ddd4:	jns    0x14006dd71
   14006ddd6:	add    al,BYTE PTR [rax]
   14006ddd8:	or     al,0x3d
   14006ddda:	add    eax,0x29b7900
   14006dddf:	add    dl,dh
   14006dde1:	fwait
   14006dde2:	add    al,BYTE PTR [rax]
   14006dde4:	loopne 0x14006de22
   14006dde6:	add    eax,0x29c0000
   14006ddeb:	add    BYTE PTR [rcx],ch
   14006dded:	popf   
   14006ddee:	add    al,BYTE PTR [rax]
   14006ddf0:	rex cmp eax,0x9d300005
   14006ddf6:	add    al,BYTE PTR [rax]
   14006ddf8:	xchg   edx,eax
   14006ddf9:	sahf   
   14006ddfa:	add    al,BYTE PTR [rax]
   14006ddfc:	pop    rsp
   14006ddfd:	cmp    eax,0x9ea00005
   14006de02:	add    al,BYTE PTR [rax]
   14006de04:	or     bl,BYTE PTR [rdi+0x3d700002]
   14006de0a:	add    eax,0x29f1000
   14006de0f:	add    BYTE PTR [rdx-0x63fffd61],bl
   14006de15:	cmp    eax,0x9f9a0005
   14006de1a:	add    al,BYTE PTR [rax]
   14006de1c:	cmp    esp,DWORD PTR [rax+0x3d880002]
   14006de22:	add    eax,0x2a03b00
   14006de27:	add    cl,bl
   14006de29:	movabs al,ds:0xa0e000053d780002
   14006de32:	add    al,BYTE PTR [rax]
   14006de34:	movabs eax,ds:0xb000053db00002a2
   14006de3d:	movabs ds:0x3e180002a3070002,al
   14006de46:	add    eax,0x2a30700
   14006de4b:	add    BYTE PTR [rbx+riz*4+0x3df80002],al
   14006de52:	add    eax,0x2a38400
   14006de57:	add    BYTE PTR [rbx-0x5a],dh
   14006de5a:	add    al,BYTE PTR [rax]
   14006de5c:	loopne 0x14006de9b
   14006de5e:	add    eax,0x2a67300
   14006de63:	add    BYTE PTR [rbx-0x2ffffd5a],dl
   14006de69:	cmp    eax,0xa6930005
   14006de6e:	add    al,BYTE PTR [rax]
   14006de70:	scas   al,BYTE PTR es:[rdi]
   14006de71:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006de72:	add    al,BYTE PTR [rax]
   14006de74:	sar    BYTE PTR [rip+0xffffffffa6d00005],0x2        # 0xe6d6de80
   14006de7b:	add    BYTE PTR [rcx],al
   14006de7d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006de7e:	add    al,BYTE PTR [rax]
   14006de80:	pop    rsp
   14006de81:	(bad)  
   14006de82:	add    eax,0x2a71000
   14006de87:	add    bh,bl
   14006de89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006de8a:	add    al,BYTE PTR [rax]
   14006de8c:	sub    al,0x3e
   14006de8e:	add    eax,0x2a7e000
   14006de93:	add    dl,al
   14006de95:	test   al,0x2
   14006de97:	add    BYTE PTR [rsi+rdi*1],ch
   14006de9a:	add    eax,0x2a8d000
   14006de9f:	add    bh,al
   14006dea1:	test   eax,0x3e3c0002
   14006dea6:	add    eax,0x2a9c800
   14006deab:	add    BYTE PTR [rcx-0x56],al
   14006deae:	add    al,BYTE PTR [rax]
   14006deb0:	(bad)  
   14006deb1:	rex.R add eax,0x2aa4400
   14006deb7:	add    BYTE PTR [rbx+0x5c0002aa],cl
   14006debd:	(bad)  
   14006debe:	add    eax,0x2aa8c00
   14006dec3:	add    BYTE PTR [rax+0x500002ab],al
   14006dec9:	ds add eax,0x2ab8000
   14006decf:	add    bl,al
   14006ded1:	stos   DWORD PTR es:[rdi],eax
   14006ded2:	add    al,BYTE PTR [rax]
   14006ded4:	nop
   14006ded5:	ds add eax,0x2abd800
   14006dedb:	add    BYTE PTR [rdx+0x5c0002ac],bh
   14006dee1:	(bad)  
   14006dee2:	add    eax,0x2acbc00
   14006dee7:	add    bl,ah
   14006dee9:	lods   al,BYTE PTR ds:[rsi]
   14006deea:	add    al,BYTE PTR [rax]
   14006deec:	pop    rsp
   14006deed:	es add eax,0x2ace400
   14006def3:	add    BYTE PTR [rbx-0x53],al
   14006def6:	add    al,BYTE PTR [rax]
   14006def8:	pop    rsp
   14006def9:	(bad)  
   14006defa:	add    eax,0x2ad4400
   14006deff:	add    BYTE PTR [rcx-0x53],dh
   14006df02:	add    al,BYTE PTR [rax]
   14006df04:	pop    rsp
   14006df05:	(bad)  
   14006df06:	add    eax,0x2ad7400
   14006df0b:	add    dl,cl
   14006df0d:	lods   eax,DWORD PTR ds:[rsi]
   14006df0e:	add    al,BYTE PTR [rax]
   14006df10:	pop    rsp
   14006df11:	es add eax,0x2adcc00
   14006df17:	add    bl,dh
   14006df19:	lods   eax,DWORD PTR ds:[rsi]
   14006df1a:	add    al,BYTE PTR [rax]
   14006df1c:	pop    rsp
   14006df1d:	es add eax,0x2adf400
   14006df23:	add    BYTE PTR [rbp-0x4bfffd52],dl
   14006df29:	ds add eax,0x2ae9800
   14006df2f:	add    BYTE PTR [rip+0xffffffffbc0002b0],cl        # 0xfc06e1e5
   14006df35:	ds add eax,0x2b03800
   14006df3b:	add    BYTE PTR [rbx+0x5c0002b0],bl
   14006df41:	(bad)  
   14006df42:	add    eax,0x2b09c00
   14006df47:	add    BYTE PTR [rcx+0x5c0002b0],bh
   14006df4d:	es add eax,0x2b36c00
   14006df53:	add    BYTE PTR [rcx-0x7fffd4d],ch
   14006df59:	sub    BYTE PTR [rip+0x2b3f400],al        # 0x142bad35f
   14006df5f:	add    BYTE PTR [rsp+rsi*4],dl
   14006df62:	add    al,BYTE PTR [rax]
   14006df64:	pop    rsp
   14006df65:	es add eax,0x2b41400
   14006df6b:	add    BYTE PTR [rsp+rsi*4],dh
   14006df6e:	add    al,BYTE PTR [rax]
   14006df70:	pop    rsp
   14006df71:	es add eax,0x2b43400
   14006df77:	add    BYTE PTR [rdx-0x4c],bh
   14006df7a:	add    al,BYTE PTR [rax]
   14006df7c:	pop    rsp
   14006df7d:	(bad)  
   14006df7e:	add    eax,0x2b47c00
   14006df83:	add    BYTE PTR [rip+0x5c0002b5],ah        # 0x19c06e23e
   14006df89:	(bad)  
   14006df8a:	add    eax,0x2b52800
   14006df8f:	add    BYTE PTR [rdx-0x1bfffd49],ch
   14006df95:	ds add eax,0x2b7ac00
   14006df9b:	add    ah,bl
   14006df9d:	mov    bh,0x2
   14006df9f:	add    BYTE PTR [rdi+riz*1+0x5],ah
   14006dfa3:	add    ah,bl
   14006dfa5:	mov    bh,0x2
   14006dfa7:	add    BYTE PTR [rbx-0x47],dh
   14006dfaa:	add    al,BYTE PTR [rax]
   14006dfac:	add    BYTE PTR [rdi],bh
   14006dfae:	add    eax,0x2b97400
   14006dfb3:	add    BYTE PTR [rsi+0x5c0002b9],al
   14006dfb9:	es add eax,0x2bf7800
   14006dfbf:	add    BYTE PTR [rbx-0x40],cl
   14006dfc2:	add    al,BYTE PTR [rax]
   14006dfc4:	(bad)  
   14006dfc5:	rex.R add eax,0x2c04c00
   14006dfcb:	add    BYTE PTR [rdx],al
   14006dfcd:	rol    DWORD PTR [rdx],0x0
   14006dfd0:	(bad)  
   14006dfd1:	rex.R add eax,0x2c19800
   14006dfd7:	add    BYTE PTR [rbx+0x300002c3],ah
   14006dfdd:	(bad)  
   14006dfde:	add    eax,0x2c3a400
   14006dfe3:	add    bh,ch
   14006dfe5:	ret    
   14006dfe6:	add    al,BYTE PTR [rax]
   14006dfe8:	and    al,0x3f
   14006dfea:	add    eax,0x2c3f000
   14006dfef:	add    BYTE PTR [rdx-0x3c],ah
   14006dff2:	add    al,BYTE PTR [rax]
   14006dff4:	in     al,0x46
   14006dff6:	add    eax,0x2c46400
   14006dffb:	add    BYTE PTR [rdi-0x3a],ch
   14006dffe:	add    al,BYTE PTR [rax]
   14006e000:	xor    BYTE PTR [rdi],bh
   14006e002:	add    eax,0x2c67000
   14006e007:	add    BYTE PTR [rbx+0x240002c6],bh
   14006e00d:	(bad)  
   14006e00e:	add    eax,0x2c6bc00
   14006e013:	add    BYTE PTR [rsi],ch
   14006e015:	mov    DWORD PTR [rdx],0x546e400
   14006e01b:	add    BYTE PTR [rax],dh
   14006e01d:	mov    DWORD PTR [rdx],0x2c7ae00
   14006e023:	add    BYTE PTR [rax*2-0x384ffffb],al
   14006e02a:	add    al,BYTE PTR [rax]
   14006e02c:	cs enter 0x2,0x4
   14006e031:	rex.RB add eax,0x2c83000
   14006e037:	add    BYTE PTR [rbx+0x40002c8],dh
   14006e03d:	rex.RB add eax,0x2c8f000
   14006e043:	add    dl,dl
   14006e045:	leave  
   14006e046:	add    al,BYTE PTR [rax]
   14006e048:	adc    al,0x20
   14006e04a:	add    eax,0x2c9d400
   14006e04f:	add    BYTE PTR [rsi],ah
   14006e051:	retf   0x2
   14006e054:	fs (bad) 
   14006e056:	add    eax,0x2ca2800
   14006e05b:	add    BYTE PTR [rip+0x540002cb],bh        # 0x19406e32c
   14006e061:	(bad)  
   14006e062:	add    eax,0x2cb4000
   14006e067:	add    dl,bl
   14006e069:	retf   
   14006e06a:	add    al,BYTE PTR [rax]
   14006e06c:	fs (bad) 
   14006e06e:	add    eax,0x2cbdc00
   14006e073:	add    BYTE PTR [rsi],dl
   14006e075:	int3   
   14006e076:	add    al,BYTE PTR [rax]
   14006e078:	fs (bad) 
   14006e07a:	add    eax,0x2cc1800
   14006e07f:	add    BYTE PTR [rax-0x34],dl
   14006e082:	add    al,BYTE PTR [rax]
   14006e084:	pop    rsp
   14006e085:	es add eax,0x2cc5000
   14006e08b:	add    cl,ch
   14006e08d:	int3   
   14006e08e:	add    al,BYTE PTR [rax]
   14006e090:	pop    rsp
   14006e091:	sbb    eax,0xccec0005
   14006e096:	add    al,BYTE PTR [rax]
   14006e098:	leave  
   14006e099:	int    0x2
   14006e09b:	add    BYTE PTR [rdi+rdi*1+0x5],dh
   14006e09f:	add    ah,cl
   14006e0a1:	int    0x2
   14006e0a3:	add    BYTE PTR [rcx+0x740002ce],ch
   14006e0a9:	(bad)  
   14006e0aa:	add    eax,0x2ceac00
   14006e0af:	add    BYTE PTR [rip+0xffffffffb40002d0],bl        # 0xf406e385
   14006e0b5:	sbb    eax,0xd0280005
   14006e0ba:	add    al,BYTE PTR [rax]
   14006e0bc:	(bad)  
   14006e0bd:	fadd   DWORD PTR [rdx]
   14006e0bf:	add    BYTE PTR [rdi+rdi*1-0x27d7fffb],cl
   14006e0c6:	add    al,BYTE PTR [rax]
   14006e0c8:	adc    eax,0xa40002d9
   14006e0cd:	(bad)  
   14006e0ce:	add    eax,0x2d94800
   14006e0d3:	add    dl,cl
   14006e0d5:	fld    DWORD PTR [rdx]
   14006e0d7:	add    BYTE PTR [rdi+rbx*1-0x2633fffb],dl
   14006e0de:	add    al,BYTE PTR [rax]
   14006e0e0:	pop    rsp
   14006e0e1:	fiadd  DWORD PTR [rdx]
   14006e0e3:	add    ah,ah
   14006e0e5:	rex.RX add eax,0x2da5c00
   14006e0eb:	add    BYTE PTR [rsi-0x26],ch
   14006e0ee:	add    al,BYTE PTR [rax]
   14006e0f0:	pop    rsp
   14006e0f1:	es add eax,0x2da7000
   14006e0f7:	add    BYTE PTR [rdi],bl
   14006e0f9:	fild   DWORD PTR [rdx]
   14006e0fb:	add    BYTE PTR [rdx+rax*2],dl
   14006e0fe:	add    eax,0x2db2000
   14006e103:	add    ah,cl
   14006e105:	fild   DWORD PTR [rdx]
   14006e107:	add    al,cl
   14006e109:	(bad)  
   14006e10a:	add    eax,0x2dbcc00
   14006e10f:	add    BYTE PTR [rax-0x24],dl
   14006e112:	add    al,BYTE PTR [rax]
   14006e114:	fs (bad) 
   14006e116:	add    eax,0x2dc5000
   14006e11b:	add    dh,dh
   14006e11d:	fadd   QWORD PTR [rdx]
   14006e11f:	add    al,bl
   14006e121:	(bad)  
   14006e122:	add    eax,0x2dd2000
   14006e127:	add    BYTE PTR [rdi+rbx*8],bh
   14006e12a:	add    al,BYTE PTR [rax]
   14006e12c:	or     BYTE PTR [rax+0x5],al
   14006e12f:	add    BYTE PTR [rdi+rbx*8],bh
   14006e132:	add    al,BYTE PTR [rax]
   14006e134:	jb     0x14006e115
   14006e136:	add    al,BYTE PTR [rax]
   14006e138:	fs (bad) 
   14006e13a:	add    eax,0x2df7400
   14006e13f:	add    BYTE PTR [rbp+0x5c0002df],dh
   14006e145:	(bad)  
   14006e146:	add    eax,0x2dfb800
   14006e14b:	add    BYTE PTR [rdi],ah
   14006e14d:	loopne 0x14006e151
   14006e14f:	add    BYTE PTR [rbp+rbx*1+0x5],bl
   14006e153:	add    BYTE PTR [rax],ch
   14006e155:	loopne 0x14006e159
   14006e157:	add    BYTE PTR [rax+0x480002e1],bl
   14006e15d:	rex add eax,0x2e19800
   14006e163:	add    al,al
   14006e165:	loope  0x14006e169
   14006e167:	add    BYTE PTR [rsi+riz*1+0x5],bl
   14006e16b:	add    BYTE PTR [rax+0x460002e2],ch
   14006e171:	out    0x2,eax
   14006e173:	add    BYTE PTR [rax+rax*2+0x5],bl
   14006e177:	add    BYTE PTR [rax-0x19],cl
   14006e17a:	add    al,BYTE PTR [rax]
   14006e17c:	add    dl,ch
   14006e17e:	add    al,BYTE PTR [rax]
   14006e180:	mov    BYTE PTR [rax+0x5],al
   14006e183:	add    BYTE PTR [rax],al
   14006e185:	(bad)  
   14006e186:	add    al,BYTE PTR [rax]
   14006e188:	movabs eax,ds:0xa400051eb80002ec
   14006e191:	in     al,dx
   14006e192:	add    al,BYTE PTR [rax]
   14006e194:	fucomip st,st(4)
   14006e196:	add    al,BYTE PTR [rax]
   14006e198:	pushf  
   14006e199:	rex add eax,0x2ece000
   14006e19f:	add    BYTE PTR [rax],dl
   14006e1a1:	in     eax,dx
   14006e1a2:	add    al,BYTE PTR [rax]
   14006e1a4:	mov    esp,0x10000540
   14006e1a9:	in     eax,dx
   14006e1aa:	add    al,BYTE PTR [rax]
   14006e1ac:	rex.WRXB in eax,dx
   14006e1ae:	add    al,BYTE PTR [rax]
   14006e1b0:	fs (bad) 
   14006e1b2:	add    eax,0x2ed5000
   14006e1b7:	add    BYTE PTR [rdi+0x640002ed],cl
   14006e1bd:	(bad)  
   14006e1be:	add    eax,0x2ed9000
   14006e1c3:	add    bh,cl
   14006e1c5:	in     eax,dx
   14006e1c6:	add    al,BYTE PTR [rax]
   14006e1c8:	fs (bad) 
   14006e1ca:	add    eax,0x2edf000
   14006e1cf:	add    BYTE PTR [rcx+0x600002ee],dl
   14006e1d5:	rex.R add eax,0x2ee9400
   14006e1db:	add    BYTE PTR [rbx],dh
   14006e1dd:	out    dx,eax
   14006e1de:	add    al,BYTE PTR [rax]
   14006e1e0:	fadd   QWORD PTR [rax+0x5]
   14006e1e3:	add    BYTE PTR [rdi+rbp*8],dh
   14006e1e6:	add    al,BYTE PTR [rax]
   14006e1e8:	int    0xef
   14006e1ea:	add    al,BYTE PTR [rax]
   14006e1ec:	cld    
   14006e1ed:	rex add eax,0x2f03800
   14006e1f3:	add    BYTE PTR [rsi+0x40002f7],dl
   14006e1f9:	rex.B add eax,0x2f79800
   14006e1ff:	add    cl,cl
   14006e201:	clc    
   14006e202:	add    al,BYTE PTR [rax]
   14006e204:	sub    BYTE PTR [rcx+0x5],al
   14006e207:	add    ah,cl
   14006e209:	clc    
   14006e20a:	add    al,BYTE PTR [rax]
   14006e20c:	(bad)  
   14006e20e:	add    al,BYTE PTR [rax]
   14006e210:	pop    rax
   14006e211:	rex.B add eax,0x2f9e000
   14006e217:	add    BYTE PTR [rcx-0x7ffffd05],al
   14006e21d:	rex.B add eax,0x2fb8400
   14006e223:	add    BYTE PTR [rsi],cl
   14006e225:	cld    
   14006e226:	add    al,BYTE PTR [rax]
   14006e228:	pushf  
   14006e229:	rex.B add eax,0x2fc1000
   14006e22f:	add    BYTE PTR [rbx+0x140002fc],dl
   14006e235:	rex.X add eax,0x2fcac00
   14006e23b:	add    BYTE PTR [rbp+rdi*8+0x41b00002],dl
   14006e242:	add    eax,0x2fd9400
   14006e247:	add    al,bl
   14006e249:	std    
   14006e24a:	add    al,BYTE PTR [rax]
   14006e24c:	clc    
   14006e24d:	rex.R add eax,0x2fdd800
   14006e253:	add    ch,al
   14006e255:	add    BYTE PTR [rbx],al
   14006e257:	add    ah,bl
   14006e259:	rex.B add eax,0x300c800
   14006e25f:	add    BYTE PTR [rcx+rax*1],dh
   14006e262:	add    eax,DWORD PTR [rax]
   14006e264:	adc    al,0x42
   14006e266:	add    eax,0x3013400
   14006e26b:	add    BYTE PTR [rdi+0x28000301],dh
   14006e271:	rex.X add eax,0x301b800
   14006e277:	add    BYTE PTR [rip+0x28000302],bh        # 0x16806e57f
   14006e27d:	rex.X add eax,0x3024000
   14006e283:	add    al,cl
   14006e285:	add    al,BYTE PTR [rbx]
   14006e287:	add    BYTE PTR [rax+0x42],al
   14006e28a:	add    eax,0x302c800
   14006e28f:	add    BYTE PTR [rax+0x3],bh
   14006e292:	add    eax,DWORD PTR [rax]
   14006e294:	pop    rax
   14006e295:	rex.X add eax,0x3037800
   14006e29b:	add    BYTE PTR [rbp+0x5c000303],ah
   14006e2a1:	(bad)  
   14006e2a2:	add    eax,0x303a800
   14006e2a7:	add    cl,ah
   14006e2a9:	add    eax,DWORD PTR [rbx]
   14006e2ab:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006e2af:	add    ah,ah
   14006e2b1:	add    eax,DWORD PTR [rbx]
   14006e2b3:	add    dl,bh
   14006e2b5:	add    eax,DWORD PTR [rbx]
   14006e2b7:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006e2bb:	add    BYTE PTR [rsp+rax*1],dl
   14006e2be:	add    eax,DWORD PTR [rax]
   14006e2c0:	rex.RXB add al,0x3
   14006e2c3:	add    BYTE PTR [rax+0x48000542],al
   14006e2c9:	add    al,0x3
   14006e2cb:	add    BYTE PTR [rcx-0x7fffcfc],al
   14006e2d1:	rex.R add eax,0x3048400
   14006e2d7:	add    BYTE PTR [rbx],dh
   14006e2d9:	add    eax,0x44f80003
   14006e2de:	add    eax,0x3053400
   14006e2e3:	add    BYTE PTR [rsi-0x73fffcfa],bh
   14006e2e9:	rex.X add eax,0x306f800
   14006e2ef:	add    BYTE PTR [rdi+0x7],bl
   14006e2f2:	add    eax,DWORD PTR [rax]
   14006e2f4:	pop    rsp
   14006e2f5:	(bad)  
   14006e2f6:	add    eax,0x3078c00
   14006e2fb:	add    ch,bh
   14006e2fd:	or     DWORD PTR [rbx],eax
   14006e2ff:	add    BYTE PTR [rdx+rax*2+0xa000005],bh
   14006e306:	add    eax,DWORD PTR [rax]
   14006e308:	and    eax,0xec00030c
   14006e30d:	rex.X add eax,0x30c2800
   14006e313:	add    BYTE PTR [rbx+0xc],ch
   14006e316:	add    eax,DWORD PTR [rax]
   14006e318:	pop    rsp
   14006e319:	es add eax,0x30c6c00
   14006e31f:	add    BYTE PTR [rip+0x30d],bh        # 0x14006e632
   14006e325:	rex.XB add eax,0x30d4000
   14006e32b:	add    BYTE PTR [rbp+0xd],dh
   14006e32e:	add    eax,DWORD PTR [rax]
   14006e330:	adc    BYTE PTR [rbx+0x5],al
   14006e333:	add    BYTE PTR [rax+0xd],bh
   14006e336:	add    eax,DWORD PTR [rax]
   14006e338:	mov    edi,0x5c00030d
   14006e33d:	(bad)  
   14006e33e:	add    eax,0x30dc000
   14006e343:	add    BYTE PTR [rcx],dl
   14006e345:	(bad)  
   14006e346:	add    eax,DWORD PTR [rax]
   14006e348:	sbb    BYTE PTR [rbx+0x5],al
   14006e34b:	add    BYTE PTR [rsi+rcx*1],dl
   14006e34e:	add    eax,DWORD PTR [rax]
   14006e350:	xchg   edx,eax
   14006e351:	(bad)  
   14006e352:	add    eax,DWORD PTR [rax]
   14006e354:	adc    al,0x42
   14006e356:	add    eax,0x30e9400
   14006e35b:	add    BYTE PTR [rcx+0x19],bh
   14006e35e:	add    eax,DWORD PTR [rax]
   14006e360:	sub    al,0x43
   14006e362:	add    eax,0x3198400
   14006e367:	add    BYTE PTR [rcx+0x5000031a],ch
   14006e36d:	rex.XB add eax,0x31aac00
   14006e373:	add    BYTE PTR [rcx],dh
   14006e375:	sbb    eax,DWORD PTR [rbx]
   14006e377:	add    BYTE PTR [rax+0x34000544],ah
   14006e37d:	sbb    eax,DWORD PTR [rbx]
   14006e37f:	add    BYTE PTR [rsi+0x1c],bh
   14006e382:	add    eax,DWORD PTR [rax]
   14006e384:	pop    rsp
   14006e385:	rex.XB add eax,0x31c8000
   14006e38b:	add    ah,cl
   14006e38d:	sbb    al,0x3
   14006e38f:	add    BYTE PTR [rbx+rax*2+0x5],ah
   14006e393:	add    al,ch
   14006e395:	sbb    al,0x3
   14006e397:	add    BYTE PTR [rip+0x5c00031d],cl        # 0x19c06e6ba
   14006e39d:	es add eax,0x31d1000
   14006e3a3:	add    dl,al
   14006e3a5:	sbb    eax,0x436c0003
   14006e3aa:	add    eax,0x31dc400
   14006e3af:	add    BYTE PTR [rax+0x1e],cl
   14006e3b2:	add    eax,DWORD PTR [rax]
   14006e3b4:	clc    
   14006e3b5:	rex.R add eax,0x31e4800
   14006e3bb:	add    BYTE PTR [rsi+rbx*1+0x3],ch
   14006e3bf:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006e3c3:	add    BYTE PTR [rsi+rbx*1+0x3],ch
   14006e3c7:	add    BYTE PTR [rcx-0x5ffffce1],ah
   14006e3cd:	rex.XB add eax,0x31fa400
   14006e3d3:	add    BYTE PTR [rip+0x5c000320],ah        # 0x19c06e6f9
   14006e3d9:	(bad)  
   14006e3da:	add    eax,0x3202800
   14006e3df:	add    BYTE PTR [rdx+0x14000320],bh
   14006e3e5:	rex.X add eax,0x320bc00
   14006e3eb:	add    BYTE PTR [rdi-0x2bfffcde],bl
   14006e3f1:	rex.XB add eax,0x322a000
   14006e3f7:	add    BYTE PTR [rbx+riz*1+0x3],bl
   14006e3fb:	add    al,dh
   14006e3fd:	rex.XB add eax,0x3235c00
   14006e403:	add    ah,ch
   14006e405:	and    eax,DWORD PTR [rbx]
   14006e407:	add    BYTE PTR [rax*2+0x23ec0005],al
   14006e40e:	add    eax,DWORD PTR [rax]
   14006e410:	movsxd esp,DWORD PTR [rsi]
   14006e412:	add    eax,DWORD PTR [rax]
   14006e414:	adc    al,0x44
   14006e416:	add    eax,0x3266400
   14006e41b:	add    BYTE PTR [rax+rbp*1+0x3],bl
   14006e41f:	add    BYTE PTR [rax],dh
   14006e421:	rex.R add eax,0x3285c00
   14006e427:	add    BYTE PTR [rax+rbp*1+0x265c0003],al
   14006e42e:	add    eax,0x3288400
   14006e433:	add    dh,bh
   14006e435:	sub    DWORD PTR [rbx],eax
   14006e437:	add    BYTE PTR [rax+0x44],ah
   14006e43a:	add    eax,0x32b4000
   14006e43f:	add    BYTE PTR [rdi+0x5c00032b],dl
   14006e445:	(bad)  
   14006e446:	add    eax,0x32b9800
   14006e44b:	add    BYTE PTR [rip+0x7000032c],cl        # 0x1b006e77d
   14006e451:	rex.R add eax,0x32c1000
   14006e457:	add    BYTE PTR [rcx],bl
   14006e459:	sub    eax,0x44900003
   14006e45e:	add    eax,0x32d1c00
   14006e463:	add    BYTE PTR [rbp+0x2d],bl
   14006e466:	add    eax,DWORD PTR [rax]
   14006e468:	pop    rsp
   14006e469:	es add eax,0x32d6000
   14006e46f:	add    BYTE PTR [rax+0x2d],bh
   14006e472:	add    eax,DWORD PTR [rax]
   14006e474:	pop    rsp
   14006e475:	es add eax,0x32d7800
   14006e47b:	add    BYTE PTR [rsi+0x2f],al
   14006e47e:	add    eax,DWORD PTR [rax]
   14006e480:	adc    al,0x42
   14006e482:	add    eax,0x32f4800
   14006e487:	add    BYTE PTR [rdi+0x30],dh
   14006e48a:	add    eax,DWORD PTR [rax]
   14006e48c:	movabs al,ds:0x4700033078000544
   14006e495:	xor    al,BYTE PTR [rbx]
   14006e497:	add    BYTE PTR [rsp+rax*2+0x32480005],dh
   14006e49e:	add    eax,DWORD PTR [rax]
   14006e4a0:	xor    eax,DWORD PTR ds:[rbx]
   14006e4a3:	add    al,dl
   14006e4a5:	rex.R add eax,0x3334000
   14006e4ab:	add    dl,dh
   14006e4ad:	xor    al,0x3
   14006e4af:	add    al,ah
   14006e4b1:	rex.R add eax,0x334f400
   14006e4b7:	add    BYTE PTR [rsi*1+0x44f80003],ch
   14006e4be:	add    eax,0x3352c00
   14006e4c3:	add    BYTE PTR [rbp+rsi*1+0x3],ah
   14006e4c7:	add    al,bh
   14006e4c9:	rex.R add eax,0x3356400
   14006e4cf:	add    BYTE PTR [rdi],dl
   14006e4d1:	add    eax,DWORD PTR ss:[rax]
   14006e4d4:	cld    
   14006e4d5:	cmp    BYTE PTR [rip+0x3362000],al        # 0x1433d04db
   14006e4db:	add    BYTE PTR [rdx+0x36],dl
   14006e4de:	add    eax,DWORD PTR [rax]
   14006e4e0:	pop    rsp
   14006e4e1:	(bad)  
   14006e4e2:	add    eax,0x3365400
   14006e4e7:	add    bl,dl
   14006e4e9:	add    eax,DWORD PTR ss:[rax]
   14006e4ec:	add    al,0x45
   14006e4ee:	add    eax,0x336d400
   14006e4f3:	add    BYTE PTR [rcx+0x37],dh
   14006e4f6:	add    eax,DWORD PTR [rax]
   14006e4f8:	add    al,0x45
   14006e4fa:	add    eax,0x3378c00
   14006e4ff:	add    dh,cl
   14006e501:	(bad)  
   14006e502:	add    eax,DWORD PTR [rax]
   14006e504:	in     al,0x46
   14006e506:	add    eax,0x337e800
   14006e50b:	add    BYTE PTR [rdi],bh
   14006e50d:	cmp    al,BYTE PTR [rbx]
   14006e50f:	add    BYTE PTR [rax*2+0x3a400005],cl
   14006e516:	add    eax,DWORD PTR [rax]
   14006e518:	cmp    r8,QWORD PTR [rbx]
   14006e51b:	add    BYTE PTR [rax],ch
   14006e51d:	rex.RB add eax,0x33b4c00
   14006e523:	add    BYTE PTR [rbp+0x3f],dh
   14006e526:	add    eax,DWORD PTR [rax]
   14006e528:	rex
   14006e529:	rex.RB add eax,0x33f7800
   14006e52f:	add    BYTE PTR [rbx],bh
   14006e531:	add    eax,DWORD PTR [r8]
   14006e534:	pop    rsp
   14006e535:	rex.RB add eax,0x3413c00
   14006e53b:	add    BYTE PTR [rdx],ah
   14006e53d:	rex.X add eax,DWORD PTR [rax]
   14006e540:	je     0x14006e587
   14006e542:	add    eax,0x3422400
   14006e547:	add    BYTE PTR [rax+0x43],ch
   14006e54a:	add    eax,DWORD PTR [rax]
   14006e54c:	mov    WORD PTR [rbp+0x5],es
   14006e54f:	add    BYTE PTR [rax+0x43],ch
   14006e552:	add    eax,DWORD PTR [rax]
   14006e554:	std    
   14006e555:	rex.XB add eax,DWORD PTR [r8]
   14006e558:	fs (bad) 
   14006e55a:	add    eax,0x3440000
   14006e55f:	add    BYTE PTR [rsp+rax*2],ah
   14006e562:	add    eax,DWORD PTR [rax]
   14006e564:	cmp    BYTE PTR [rax*1+0x3442400],bh
   14006e56b:	add    BYTE PTR [rdx+0x44],bl
   14006e56e:	add    eax,DWORD PTR [rax]
   14006e570:	clc    
   14006e571:	rex.R add eax,0x3445c00
   14006e577:	add    ch,cl
   14006e579:	add    r8d,DWORD PTR [rax]
   14006e57c:	in     al,0x46
   14006e57e:	add    eax,0x344d000
   14006e583:	add    BYTE PTR [rip+0xffffffffa400034a],cl        # 0xe406e8d3
   14006e589:	rex.RB add eax,0x34a1000
   14006e58f:	add    BYTE PTR [rsi-0x33fffcb6],ah
   14006e595:	rex.RB add eax,0x34ad000
   14006e59b:	add    BYTE PTR [rcx-0x6bfffcb5],ch
   14006e5a1:	(bad)  
   14006e5a2:	add    eax,0x34bac00
   14006e5a7:	add    BYTE PTR [rdx+0x400034c],al
   14006e5ad:	add    rax,0x34c8400
   14006e5b3:	add    BYTE PTR [rbp+rcx*2+0x3],al
   14006e5b7:	add    al,ch
   14006e5b9:	rex.RB add eax,0x34d4400
   14006e5bf:	add    BYTE PTR [rcx+0x400034d],cl
   14006e5c5:	rex.RB add eax,0x34d8c00
   14006e5cb:	add    bl,dl
   14006e5cd:	add    r8,QWORD PTR [r8]
   14006e5d0:	add    al,0x45
   14006e5d2:	add    eax,0x34dd400
   14006e5d7:	add    BYTE PTR [rcx+0x4e],ch
   14006e5da:	add    eax,DWORD PTR [rax]
   14006e5dc:	clc    
   14006e5dd:	rex.R add eax,0x34e6c00
   14006e5e3:	add    BYTE PTR [rbx-0x3fffcb1],ah
   14006e5e9:	rex.RB add eax,0x34fa400
   14006e5ef:	add    BYTE PTR [rcx+rdx*2],bh
   14006e5f2:	add    eax,DWORD PTR [rax]
   14006e5f4:	sub    al,0x46
   14006e5f6:	add    eax,0x3513c00
   14006e5fb:	add    BYTE PTR [rbx+0x48000358],bh
   14006e601:	rex.RX add eax,0x358bc00
   14006e607:	add    BYTE PTR [rax+0x59],bh
   14006e60a:	add    eax,DWORD PTR [rax]
   14006e60c:	clc    
   14006e60d:	rex.R add eax,0x3597800
   14006e613:	add    BYTE PTR [rax+0x6800035a],dl
   14006e619:	rex.RX add eax,0x35a9000
   14006e61f:	add    BYTE PTR [rsi],ah
   14006e621:	pop    rbx
   14006e622:	add    eax,DWORD PTR [rax]
   14006e624:	(bad)  
   14006e625:	rex.R add eax,0x35b2800
   14006e62b:	add    dh,dh
   14006e62d:	pop    rbx
   14006e62e:	add    eax,DWORD PTR [rax]
   14006e630:	ins    BYTE PTR es:[rdi],dx
   14006e631:	(bad)  
   14006e632:	add    eax,0x35bf800
   14006e637:	add    BYTE PTR [rdi],dh
   14006e639:	pop    rsp
   14006e63a:	add    eax,DWORD PTR [rax]
   14006e63c:	fs (bad) 
   14006e63e:	add    eax,0x35c5000
   14006e643:	add    BYTE PTR [rsp+rbx*2+0x3],dh
   14006e647:	add    BYTE PTR [rax-0x4bfffaba],bl
   14006e64d:	pop    rsp
   14006e64e:	add    eax,DWORD PTR [rax]
   14006e650:	cmp    eax,0x9400035d
   14006e655:	(bad)  
   14006e656:	add    eax,0x35d4000
   14006e65b:	add    BYTE PTR [rsi-0x5ffffca3],dh
   14006e661:	rex.RX add eax,0x35e8000
   14006e667:	add    BYTE PTR [rbp-0x3bfffca2],ch
   14006e66d:	rex.RX add eax,0x35eb000
   14006e673:	add    BYTE PTR [rdi+0x5f],bl
   14006e676:	add    eax,DWORD PTR [rax]
   14006e678:	xchg   esp,eax
   14006e679:	(bad)  
   14006e67a:	add    eax,0x35f6000
   14006e67f:	add    BYTE PTR [rip+0xffffffffe4000360],dh        # 0x12406e9e5
   14006e685:	rex.RX add eax,0x3610000
   14006e68b:	add    BYTE PTR [rdi],dh
   14006e68d:	(bad)  
   14006e68e:	add    eax,DWORD PTR [rax]
   14006e690:	pop    rsp
   14006e691:	es add eax,0x3613800
   14006e697:	add    BYTE PTR [rdi+0x62],al
   14006e69a:	add    eax,DWORD PTR [rax]
   14006e69c:	in     al,dx
   14006e69d:	rex.RX add eax,0x3625000
   14006e6a3:	add    BYTE PTR [rdx+0x63],al
   14006e6a6:	add    eax,DWORD PTR [rax]
   14006e6a8:	add    BYTE PTR [rdi+0x5],al
   14006e6ab:	add    BYTE PTR [rbx+riz*2+0x3],al
   14006e6af:	add    cl,dl
   14006e6b1:	add    eax,DWORD PTR fs:[rax]
   14006e6b4:	adc    BYTE PTR [rdi+0x5],al
   14006e6b7:	add    ah,dl
   14006e6b9:	add    eax,DWORD PTR fs:[rax]
   14006e6bc:	call   0x16406ea26
   14006e6c1:	rex.RXB add eax,0x365e800
   14006e6c7:	add    BYTE PTR [rdi+0x66],dl
   14006e6ca:	add    eax,DWORD PTR [rax]
   14006e6cc:	fs (bad) 
   14006e6ce:	add    eax,0x366e000
   14006e6d3:	add    BYTE PTR [rcx],ah
   14006e6d5:	add    eax,DWORD PTR [eax]
   14006e6d8:	xor    al,0x47
   14006e6da:	add    eax,0x3672400
   14006e6df:	add    BYTE PTR [rsi+0x5c000367],bh
   14006e6e5:	sbb    eax,0x67c00005
   14006e6ea:	add    eax,DWORD PTR [rax]
   14006e6ec:	add    ch,BYTE PTR [rax+0x3]
   14006e6ef:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006e6f3:	add    BYTE PTR [rax+rbp*2],al
   14006e6f6:	add    eax,DWORD PTR [rax]
   14006e6f8:	or     DWORD PTR [rcx+0x3],ebp
   14006e6fb:	add    BYTE PTR [rdi+rax*2+0x5],bl
   14006e6ff:	add    BYTE PTR [rcx+rbp*2],cl
   14006e702:	add    eax,DWORD PTR [rax]
   14006e704:	and    ebp,DWORD PTR [rcx+0x3]
   14006e707:	add    BYTE PTR [rsi+riz*1+0x5],bl
   14006e70b:	add    BYTE PTR [rcx+rbp*2],ah
   14006e70e:	add    eax,DWORD PTR [rax]
   14006e710:	rex.RXB imul r8d,DWORD PTR [r11],0x5478c00
   14006e717:	add    BYTE PTR [rax+0x69],cl
   14006e71a:	add    eax,DWORD PTR [rax]
   14006e71c:	imul   eax,DWORD PTR fs:[rbx],0x5265c00
   14006e723:	add    BYTE PTR [rcx+rbp*2+0x3],dh
   14006e727:	add    BYTE PTR [rax+0x6b],ch
   14006e72a:	add    eax,DWORD PTR [rax]
   14006e72c:	lods   al,BYTE PTR ds:[rsi]
   14006e72d:	rex.RXB add eax,0x36b6800
   14006e733:	add    cl,dh
   14006e735:	imul   eax,DWORD PTR [rbx],0x0
   14006e738:	in     al,0x46
   14006e73a:	add    eax,0x36bf400
   14006e73f:	add    BYTE PTR [rsp+rbp*2+0x3],al
   14006e743:	add    BYTE PTR [rdi+riz*1+0x5],ah
   14006e747:	add    BYTE PTR [rsp+rbp*2+0x3],bl
   14006e74b:	add    BYTE PTR [rsi+rbp*2+0x3],ch
   14006e74f:	add    ah,al
   14006e751:	rex.RXB add eax,0x36e6c00
   14006e757:	add    BYTE PTR [rax+0x6400036e],al
   14006e75d:	(bad)  
   14006e75e:	add    eax,0x36e8800
   14006e763:	add    dl,dh
   14006e765:	jo     0x14006e76a
   14006e767:	add    ah,dl
   14006e769:	rex.RXB add eax,0x370f400
   14006e76f:	add    BYTE PTR [rbp+0x71],bh
   14006e772:	add    eax,DWORD PTR [rax]
   14006e774:	rex
   14006e775:	rex.WB add rax,0x3718000
   14006e77b:	add    BYTE PTR [rdx+0x73],ch
   14006e77e:	add    eax,DWORD PTR [rax]
   14006e780:	cld    
   14006e781:	rex.RXB add eax,0x3736c00
   14006e787:	add    BYTE PTR [rbx+rsi*2+0x28f80003],dh
   14006e78e:	add    eax,0x373b400
   14006e793:	add    BYTE PTR [rcx+0x74],cl
   14006e796:	add    eax,DWORD PTR [rax]
   14006e798:	cld    
   14006e799:	rex.RXB add eax,0x3744c00
   14006e79f:	add    BYTE PTR [rsi],ah
   14006e7a1:	jne    0x14006e7a6
   14006e7a3:	add    BYTE PTR [rax+rcx*2],al
   14006e7a6:	add    eax,0x3752800
   14006e7ab:	add    BYTE PTR [rdx+0x1000037b],al
   14006e7b1:	add    rax,0x37b8400
   14006e7b7:	add    BYTE PTR [rdi],al
   14006e7b9:	add    DWORD PTR [rbx],0x5482c00
   14006e7bf:	add    BYTE PTR [rax],cl
   14006e7c1:	add    DWORD PTR [rbx],0x3831700
   14006e7c7:	add    BYTE PTR [rax+rcx*2+0x5],dl
   14006e7cb:	add    BYTE PTR [rax],bl
   14006e7cd:	add    DWORD PTR [rbx],0x0
   14006e7d0:	xor    al,BYTE PTR [rbx+0x27640003]
   14006e7d6:	add    eax,0x3833400
   14006e7db:	add    BYTE PTR [rdi+0x6c000383],ch
   14006e7e1:	add    rax,0x383c400
   14006e7e7:	add    dh,al
   14006e7e9:	test   BYTE PTR [rbx],al
   14006e7eb:	add    BYTE PTR [rax+rcx*2+0x5],bh
   14006e7ef:	add    al,cl
   14006e7f1:	test   BYTE PTR [rbx],al
   14006e7f3:	add    dl,cl
   14006e7f5:	test   DWORD PTR [rbx],eax
   14006e7f7:	add    BYTE PTR [rax+rcx*2+0x5],bh
   14006e7fb:	add    al,bl
   14006e7fd:	test   DWORD PTR [rbx],eax
   14006e7ff:	add    BYTE PTR [rbx],ch
   14006e801:	xchg   BYTE PTR [rbx],al
   14006e803:	add    BYTE PTR [rax+0x2c000548],dl
   14006e809:	xchg   BYTE PTR [rbx],al
   14006e80b:	add    BYTE PTR [rcx-0x5ffffc78],dh
   14006e811:	add    rax,0x388b400
   14006e817:	add    BYTE PTR [rdi-0x3bfffc72],dh
   14006e81d:	add    rax,0x38eb800
   14006e823:	add    BYTE PTR [rbx-0x3bfffc6c],bh
   14006e829:	add    rax,0x394bc00
   14006e82f:	add    BYTE PTR [rbp-0x27fffc63],dh
   14006e835:	add    rax,0x39db800
   14006e83b:	add    BYTE PTR [rdi],bl
   14006e83d:	test   eax,0x48fc0003
   14006e842:	add    eax,0x3a92000
   14006e847:	add    BYTE PTR [rdi-0x57],dl
   14006e84a:	add    eax,DWORD PTR [rax]
   14006e84c:	pop    rsp
   14006e84d:	(bad)  
   14006e84e:	add    eax,0x3a95800
   14006e853:	add    BYTE PTR [rdx],dh
   14006e855:	scas   al,BYTE PTR es:[rdi]
   14006e856:	add    eax,DWORD PTR [rax]
   14006e858:	and    BYTE PTR [rcx+0x5],cl
   14006e85b:	add    BYTE PTR [rsi+rbp*4],dh
   14006e85e:	add    eax,DWORD PTR [rax]
   14006e860:	mov    ebp,0x400003ae
   14006e865:	rex.WB add rax,0x3aec000
   14006e86b:	add    ch,dl
   14006e86d:	scas   eax,DWORD PTR es:[rdi]
   14006e86e:	add    eax,DWORD PTR [rax]
   14006e870:	rex
   14006e871:	rex.WB add rax,0x3afd800
   14006e877:	add    BYTE PTR [rax+0x500003b3],cl
   14006e87d:	rex.WB add rax,0x3b38800
   14006e883:	add    bl,bl
   14006e885:	mov    bl,0x3
   14006e887:	add    BYTE PTR [rdi+rsi*1+0x5],bl
   14006e88b:	add    ah,bl
   14006e88d:	mov    bl,0x3
   14006e88f:	add    BYTE PTR [rdi],dl
   14006e891:	mov    ah,0x3
   14006e893:	add    BYTE PTR [rax],bh
   14006e895:	cmp    al,0x5
   14006e897:	add    BYTE PTR [rax],bl
   14006e899:	mov    ah,0x3
   14006e89b:	add    BYTE PTR [rbx-0x4c],dl
   14006e89e:	add    eax,DWORD PTR [rax]
   14006e8a0:	pop    rsp
   14006e8a1:	es add eax,0x3b45400
   14006e8a7:	add    BYTE PTR [rdx+0x640003b4],bl
   14006e8ad:	(bad)  
   14006e8ae:	add    eax,0x3b4e400
   14006e8b3:	add    ch,dh
   14006e8b5:	mov    ch,0x3
   14006e8b7:	add    BYTE PTR [rbp+rbx*1-0x4a07fffb],dh
   14006e8be:	add    eax,DWORD PTR [rax]
   14006e8c0:	(bad)  
   14006e8c1:	mov    eax,0x49680003
   14006e8c6:	add    eax,0x3b81800
   14006e8cb:	add    BYTE PTR [rsi],cl
   14006e8cd:	mov    ecx,0x20140003
   14006e8d2:	add    eax,0x3b94000
   14006e8d7:	add    ah,cl
   14006e8d9:	mov    ecx,0x49a80003
   14006e8de:	add    eax,0x3b9cc00
   14006e8e3:	add    BYTE PTR [rdi],bl
   14006e8e5:	mov    edx,0x49940003
   14006e8ea:	add    eax,0x3ba1f00
   14006e8ef:	add    BYTE PTR [rdi],dh
   14006e8f1:	mov    edx,0x49840003
   14006e8f6:	add    eax,0x3ba4000
   14006e8fb:	add    al,bl
   14006e8fd:	mov    edx,0x4a000003
   14006e902:	add    eax,0x3bad800
   14006e907:	add    BYTE PTR [rbx+rdi*4+0x49ec0003],dl
   14006e90e:	add    eax,0x3bb9400
   14006e913:	add    BYTE PTR [rsi-0x44],al
   14006e916:	add    eax,DWORD PTR [rax]
   14006e918:	fmul   DWORD PTR [rcx+0x5]
   14006e91b:	add    BYTE PTR [rsi-0x44],al
   14006e91e:	add    eax,DWORD PTR [rax]
   14006e920:	imul   edi,DWORD PTR [rbx+rax*1+0x549c800],0x3bc6900
   14006e92b:	add    BYTE PTR [rdi*4+0x49b80003],ch
   14006e932:	add    eax,0x3bd3000
   14006e937:	add    BYTE PTR [rdi-0x43],bl
   14006e93a:	add    eax,DWORD PTR [rax]
   14006e93c:	or     BYTE PTR [rax],bl
   14006e93e:	add    eax,0x3bd6000
   14006e943:	add    BYTE PTR [rdx+0x1c0003bd],cl
   14006e949:	rex.WX add rax,0x3bd9000
   14006e94f:	add    dh,bh
   14006e951:	mov    esi,0x47ac0003
   14006e956:	add    eax,0x3bf0000
   14006e95b:	add    BYTE PTR [rdi],ch
   14006e95d:	ret    0x3
   14006e960:	and    al,0x4a
   14006e962:	add    eax,0x3c23000
   14006e967:	add    BYTE PTR [rcx-0x3e],bh
   14006e96a:	add    eax,DWORD PTR [rax]
   14006e96c:	(bad)  
   14006e96d:	rex.R add eax,0x3c27c00
   14006e973:	add    cl,bl
   14006e975:	ret    0x3
   14006e978:	pop    rsp
   14006e979:	(bad)  
   14006e97a:	add    eax,0x3c2dc00
   14006e97f:	add    BYTE PTR [rax+0x300003c5],ch
   14006e985:	rex.WX add rax,0x3c5a800
   14006e98b:	add    dh,ch
   14006e98d:	(bad)
   14006e990:	pop    rsp
   14006e991:	(bad)  
   14006e992:	add    eax,0x3c60000
   14006e997:	add    BYTE PTR [rsi-0x3a],cl
   14006e99a:	add    eax,DWORD PTR [rax]
   14006e99c:	loopne 0x14006e9e3
   14006e99e:	add    eax,0x3c65000
   14006e9a3:	add    BYTE PTR [rsi-0x3a],dh
   14006e9a6:	add    eax,DWORD PTR [rax]
   14006e9a8:	push   rsp
   14006e9a9:	rex.RXB add eax,0x3c68000
   14006e9af:	add    BYTE PTR [rcx+0x540003c6],bl
   14006e9b5:	rex.RXB add eax,0x3c69900
   14006e9bb:	add    BYTE PTR [rcx+0x540003c6],dh
   14006e9c1:	rex.RXB add eax,0x3c6b100
   14006e9c7:	add    cl,cl
   14006e9c9:	mov    BYTE PTR [rbx],0x0
   14006e9cc:	(bad)  
   14006e9cd:	rex.RX add eax,0x3c6c900
   14006e9d3:	add    ch,ah
   14006e9d5:	mov    BYTE PTR [rbx],0x0
   14006e9d8:	push   rsp
   14006e9d9:	rex.RXB add eax,0x3c6e500
   14006e9df:	add    BYTE PTR [rcx],dh
   14006e9e1:	mov    DWORD PTR [rbx],0x5405400
   14006e9e7:	add    BYTE PTR [rcx],dh
   14006e9e9:	mov    DWORD PTR [rbx],0x3c74a00
   14006e9ef:	add    BYTE PTR [rdi+rax*2+0x5],dl
   14006e9f3:	add    BYTE PTR [rdx-0x39],cl
   14006e9f6:	add    eax,DWORD PTR [rax]
   14006e9f8:	movsxd eax,edi
   14006e9fa:	add    eax,DWORD PTR [rax]
   14006e9fc:	push   rsp
   14006e9fd:	rex.RXB add eax,0x3c76a00
   14006ea03:	add    BYTE PTR [rbx+0x540003c7],al
   14006ea09:	rex.RXB add eax,0x3c78300
   14006ea0f:	add    BYTE PTR [rdi+rax*8+0x40540003],bl
   14006ea16:	add    eax,0x3c79c00
   14006ea1b:	add    BYTE PTR [rbp+0x540003c7],dh
   14006ea21:	rex.RXB add eax,0x3c7b500
   14006ea27:	add    dh,cl
   14006ea29:	mov    DWORD PTR [rbx],0x5466000
   14006ea2f:	add    dh,cl
   14006ea31:	mov    DWORD PTR [rbx],0x3c7ea00
   14006ea37:	add    BYTE PTR [rdi+rax*2+0x5],dl
   14006ea3b:	add    dl,ch
   14006ea3d:	mov    DWORD PTR [rbx],0x3c80300
   14006ea43:	add    BYTE PTR [rdi+rax*2+0x5],dl
   14006ea47:	add    BYTE PTR [rbx],al
   14006ea49:	enter  0x3,0x25
   14006ea4d:	enter  0x3,0x54
   14006ea51:	rex.RXB add eax,0x3c82500
   14006ea57:	add    BYTE PTR [rcx-0x38],al
   14006ea5a:	add    eax,DWORD PTR [rax]
   14006ea5c:	(bad)  
   14006ea5d:	rex.RX add eax,0x3c84100
   14006ea63:	add    BYTE PTR [rdx-0x38],bl
   14006ea66:	add    eax,DWORD PTR [rax]
   14006ea68:	push   rsp
   14006ea69:	rex.RXB add eax,0x3c86100
   14006ea6f:	add    BYTE PTR [rdx-0x38],bh
   14006ea72:	add    eax,DWORD PTR [rax]
   14006ea74:	push   rsp
   14006ea75:	rex.RXB add eax,0x3c87a00
   14006ea7b:	add    BYTE PTR [rbx+0x540003c8],dl
   14006ea81:	rex.RXB add eax,0x3c89300
   14006ea87:	add    BYTE PTR [rax+rcx*8+0x47540003],ch
   14006ea8e:	add    eax,0x3c8ac00
   14006ea93:	add    bl,al
   14006ea95:	enter  0x3,0x60
   14006ea99:	rex.RX add eax,0x3c8c300
   14006ea9f:	add    dl,bl
   14006eaa1:	enter  0x3,0x60
   14006eaa5:	rex.RX add eax,0x3c8da00
   14006eaab:	add    dl,dh
   14006eaad:	enter  0x3,0x60
   14006eab1:	rex.RX add eax,0x3c8f200
   14006eab7:	add    BYTE PTR [rbx],dl
   14006eab9:	leave  
   14006eaba:	add    eax,DWORD PTR [rax]
   14006eabc:	push   rsp
   14006eabd:	rex.RXB add eax,0x3c92000
   14006eac3:	add    BYTE PTR [rcx-0x37],al
   14006eac6:	add    eax,DWORD PTR [rax]
   14006eac8:	push   rsp
   14006eac9:	rex.RXB add eax,0x3c94100
   14006eacf:	add    BYTE PTR [rbp-0x37],dl
   14006ead2:	add    eax,DWORD PTR [rax]
   14006ead4:	push   rsp
   14006ead5:	rex.RXB
   14006ead6:	.byte 0x5
	...

Disassembly of section .rsrc:

000000014006f000 <.rsrc>:
	...
   14006f00c:	add    BYTE PTR [rax],al
   14006f00e:	add    al,BYTE PTR [rax]
   14006f010:	adc    BYTE PTR [rax],al
   14006f012:	add    BYTE PTR [rax],al
   14006f014:	and    BYTE PTR [rax],al
   14006f016:	add    BYTE PTR [rax+0x18],al
   14006f01c:	cmp    BYTE PTR [rax],al
   14006f01e:	add    BYTE PTR [rax+0x0],al
	...
   14006f02c:	add    BYTE PTR [rax],al
   14006f02e:	add    DWORD PTR [rax],eax
   14006f030:	add    DWORD PTR [rax],eax
   14006f032:	add    BYTE PTR [rax],al
   14006f034:	push   rax
   14006f035:	add    BYTE PTR [rax],al
   14006f037:	add    BYTE PTR [rax],0x0
	...
   14006f046:	add    DWORD PTR [rax],eax
   14006f048:	add    DWORD PTR [rax],eax
   14006f04a:	add    BYTE PTR [rax],al
   14006f04c:	push   0x800000
	...
   14006f05d:	add    BYTE PTR [rcx],al
   14006f05f:	add    BYTE PTR [rcx],cl
   14006f061:	add    al,0x0
   14006f063:	add    BYTE PTR [rax+0x0],al
	...
   14006f075:	add    BYTE PTR [rcx],al
   14006f077:	add    BYTE PTR [rcx],cl
   14006f079:	add    al,0x0
   14006f07b:	add    BYTE PTR [rax-0x60000000],dl
   14006f081:	lock (bad) 
   14006f083:	add    BYTE PTR [rbx+rax*1+0x0],al
	...
   14006f08f:	add    al,ch
   14006f091:	repz (bad) 
   14006f093:	add    BYTE PTR [rdi+0x2],dh
	...
   14006f09e:	add    BYTE PTR [rax],al
   14006f0a0:	add    r14d,DWORD PTR [rax+rax*1]
   14006f0a4:	add    BYTE PTR [rax],al
   14006f0a6:	push   rsi
   14006f0a7:	add    BYTE PTR [rbx+0x0],dl
   14006f0aa:	pop    rdi
   14006f0ab:	add    BYTE PTR [rsi+0x0],dl
   14006f0ae:	add    BYTE PTR [r10+0x0],r10b
   14006f0b2:	push   rbx
   14006f0b3:	add    BYTE PTR [rcx+0x0],cl
   14006f0b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14006f0ba:	pop    rdi
   14006f0bb:	add    BYTE PTR [rcx+0x0],cl
   14006f0be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14006f0c2:	rex.WRXB add BYTE PTR [r8],r8b
   14006f0c5:	add    BYTE PTR [rax],al
   14006f0c7:	add    BYTE PTR [rbp+0xfeef04],bh
   14006f0cd:	add    BYTE PTR [rcx],al
   14006f0cf:	add    BYTE PTR [rax],al
   14006f0d1:	add    BYTE PTR [rax+rax*1],cl
   14006f0d4:	retf   0xfa
   14006f0d7:	add    BYTE PTR [rax],al
   14006f0d9:	add    BYTE PTR [rax+rax*1],cl
   14006f0dc:	retf   0xfa
   14006f0df:	add    BYTE PTR [rdi],bh
   14006f0e1:	add    BYTE PTR [rax],al
   14006f0e3:	add    BYTE PTR [rax],al
   14006f0e5:	add    BYTE PTR [rax],al
   14006f0e7:	add    BYTE PTR [rax+rax*1],al
   14006f0ea:	add    al,0x0
   14006f0ec:	add    DWORD PTR [rax],eax
	...
   14006f0fa:	add    BYTE PTR [rax],al
   14006f0fc:	movabs ds:0x7400530001000002,al
   14006f105:	add    BYTE PTR [rdx+0x0],dh
   14006f108:	imul   eax,DWORD PTR [rax],0x67006e
   14006f10e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14006f112:	ins    BYTE PTR es:[rdi],dx
   14006f113:	add    BYTE PTR [rbp+0x0],ah
   14006f116:	rex.WB add BYTE PTR [r14+0x0],bpl
   14006f11a:	data16 add BYTE PTR [rdi+0x0],ch
   14006f11e:	add    BYTE PTR [rax],al
   14006f120:	jle    0x14006f124
   14006f122:	add    BYTE PTR [rax],al
   14006f124:	add    DWORD PTR [rax],eax
   14006f126:	xor    BYTE PTR [rax],al
   14006f128:	xor    al,0x0
   14006f12a:	xor    BYTE PTR [rax],al
   14006f12c:	cmp    DWORD PTR [rax],eax
   14006f12e:	xor    BYTE PTR [rax],al
   14006f130:	xor    al,0x0
   14006f132:	(bad)  
   14006f133:	add    BYTE PTR [rax],dh
   14006f135:	add    BYTE PTR [rax],al
   14006f137:	add    BYTE PTR [rdx],bh
   14006f139:	add    BYTE PTR [rip+0x43000100],cl        # 0x18306f23f
   14006f13f:	add    BYTE PTR [rdi+0x0],ch
   14006f142:	ins    DWORD PTR es:[rdi],dx
   14006f143:	add    BYTE PTR [rax+0x0],dh
   14006f146:	(bad)  
   14006f147:	add    BYTE PTR [rsi+0x0],ch
   14006f14a:	jns    0x14006f14c
   14006f14c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14006f150:	ins    DWORD PTR es:[rdi],dx
   14006f151:	add    BYTE PTR [rbp+0x0],ah
   14006f154:	add    BYTE PTR [rax],al
   14006f156:	add    BYTE PTR [rax],al
   14006f158:	push   rsi
   14006f159:	add    BYTE PTR [rbp+0x0],cl
   14006f15c:	ja     0x14006f15e
   14006f15e:	(bad)  
   14006f15f:	add    BYTE PTR [rdx+0x0],dh
   14006f162:	add    BYTE PTR gs:[rax+rax*1],ch
   14006f166:	and    BYTE PTR [rax],al
   14006f168:	rex.WB add BYTE PTR [r14+0x0],bpl
   14006f16c:	movsxd eax,DWORD PTR [rax]
   14006f16e:	add    BYTE PTR cs:[rax],al
   14006f171:	add    BYTE PTR [rax],al
   14006f173:	add    BYTE PTR [rax+rax*1+0x1e],ah
   14006f177:	add    BYTE PTR [rcx],al
   14006f179:	add    BYTE PTR [rsi+0x0],al
   14006f17c:	imul   eax,DWORD PTR [rax],0x65006c
   14006f182:	add    BYTE PTR [rbp+0x0],r12b
   14006f186:	jae    0x14006f188
   14006f188:	movsxd eax,DWORD PTR [rax]
   14006f18a:	jb     0x14006f18c
   14006f18c:	imul   eax,DWORD PTR [rax],0x740070
   14006f192:	imul   eax,DWORD PTR [rax],0x6e006f
   14006f198:	add    BYTE PTR [rax],al
   14006f19a:	add    BYTE PTR [rax],al
   14006f19c:	push   rsi
   14006f19d:	add    BYTE PTR [rbp+0x0],cl
   14006f1a0:	ja     0x14006f1a2
   14006f1a2:	(bad)  
   14006f1a3:	add    BYTE PTR [rdx+0x0],dh
   14006f1a6:	add    BYTE PTR gs:[rax],ah
   14006f1a9:	add    BYTE PTR [rsi],dh
   14006f1ab:	add    BYTE PTR [rax+rax*1],dh
   14006f1ae:	sub    eax,0x69006200
   14006f1b3:	add    BYTE PTR [rax+rax*1+0x20],dh
   14006f1b7:	add    BYTE PTR [rcx+0x0],cl
   14006f1ba:	outs   dx,BYTE PTR ds:[rsi]
   14006f1bb:	add    BYTE PTR [rbx+0x0],dh
   14006f1be:	je     0x14006f1c0
   14006f1c0:	(bad)  
   14006f1c1:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14006f1c5:	add    BYTE PTR [rax],ah
   14006f1c7:	add    BYTE PTR [rbp+0x0],dl
   14006f1ca:	je     0x14006f1cc
   14006f1cc:	imul   eax,DWORD PTR [rax],0x69006c
   14006f1d2:	je     0x14006f1d4
   14006f1d4:	jns    0x14006f1d6
   14006f1d6:	add    BYTE PTR [rax],al
   14006f1d8:	rex.WX add BYTE PTR [rip+0x46000100],dl        # 0x18606f2df
   14006f1df:	add    BYTE PTR [rcx+0x0],ch
   14006f1e2:	ins    BYTE PTR es:[rdi],dx
   14006f1e3:	add    BYTE PTR [rbp+0x0],ah
   14006f1e6:	push   rsi
   14006f1e7:	add    BYTE PTR [rbp+0x0],ah
   14006f1ea:	jb     0x14006f1ec
   14006f1ec:	jae    0x14006f1ee
   14006f1ee:	imul   eax,DWORD PTR [rax],0x6e006f
   14006f1f4:	add    BYTE PTR [rax],al
   14006f1f6:	add    BYTE PTR [rax],al
   14006f1f8:	xor    DWORD PTR [rax],eax
   14006f1fa:	xor    al,BYTE PTR [rax]
   14006f1fc:	add    BYTE PTR cs:[rax],dh
   14006f1ff:	add    BYTE PTR [rsi],ch
   14006f201:	add    BYTE PTR [rax],dh
   14006f203:	add    BYTE PTR [rax],ah
   14006f205:	add    BYTE PTR [rdx+0x0],ah
   14006f208:	jne    0x14006f20a
   14006f20a:	imul   eax,DWORD PTR [rax],0x64006c
   14006f210:	sub    eax,0x39003200
   14006f215:	add    BYTE PTR [rax],bh
   14006f217:	add    BYTE PTR [rip+0x39003500],dh        # 0x17907271d
   14006f21d:	add    BYTE PTR [rsi],dh
   14006f21f:	add    BYTE PTR [rax],al
   14006f221:	add    BYTE PTR [rax],al
   14006f223:	add    BYTE PTR [rax+rax*1],dh
   14006f226:	or     al,BYTE PTR [rax]
   14006f228:	add    DWORD PTR [rax],eax
   14006f22a:	rex.WB add BYTE PTR [r14+0x0],bpl
   14006f22e:	je     0x14006f230
   14006f230:	add    BYTE PTR gs:[rdx+0x0],dh
   14006f234:	outs   dx,BYTE PTR ds:[rsi]
   14006f235:	add    BYTE PTR [rcx+0x0],ah
   14006f238:	ins    BYTE PTR es:[rdi],dx
   14006f239:	add    BYTE PTR [rsi+0x0],cl
   14006f23c:	(bad)  
   14006f23d:	add    BYTE PTR [rbp+0x0],ch
   14006f240:	add    BYTE PTR gs:[rax],al
   14006f243:	add    BYTE PTR [rax+rax*1+0x72],ah
   14006f247:	add    BYTE PTR [rsi+0x0],dh
   14006f24a:	rex.WB add BYTE PTR [r14+0x0],bpl
   14006f24e:	jae    0x14006f250
   14006f250:	je     0x14006f252
   14006f252:	add    BYTE PTR ss:[rax+rax*1],dh
   14006f256:	add    BYTE PTR [rax],al
   14006f258:	push   0x0
   14006f25a:	and    eax,DWORD PTR [rax]
   14006f25c:	add    DWORD PTR [rax],eax
   14006f25e:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14006f262:	add    BYTE PTR [ecx+0x0],ah
   14006f266:	ins    BYTE PTR es:[rdi],dx
   14006f267:	add    BYTE PTR [rbx+0x0],al
   14006f26a:	outs   dx,DWORD PTR ds:[rsi]
   14006f26b:	add    BYTE PTR [rax+0x0],dh
   14006f26e:	jns    0x14006f270
   14006f270:	jb     0x14006f272
   14006f272:	imul   eax,DWORD PTR [rax],0x680067
   14006f278:	je     0x14006f27a
   14006f27a:	add    BYTE PTR [rax],al
   14006f27c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14006f280:	jo     0x14006f282
   14006f282:	jns    0x14006f284
   14006f284:	jb     0x14006f286
   14006f286:	imul   eax,DWORD PTR [rax],0x680067
   14006f28c:	je     0x14006f28e
   14006f28e:	and    BYTE PTR [rax],al
   14006f290:	test   eax,0x31002000
   14006f295:	add    BYTE PTR [rcx],bh
   14006f297:	add    BYTE PTR [rcx],bh
   14006f299:	add    BYTE PTR [rax],bh
   14006f29b:	add    BYTE PTR [rip+0x30003200],ch        # 0x1700724a1
   14006f2a1:	add    BYTE PTR [rcx],dh
   14006f2a3:	add    BYTE PTR [rip+0x56002000],dh        # 0x1960712a9
   14006f2a9:	add    BYTE PTR [rbp+0x0],cl
   14006f2ac:	ja     0x14006f2ae
   14006f2ae:	(bad)  
   14006f2af:	add    BYTE PTR [rdx+0x0],dh
   14006f2b2:	add    BYTE PTR gs:[rax+rax*1],ch
   14006f2b6:	and    BYTE PTR [rax],al
   14006f2b8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14006f2bc:	movsxd eax,DWORD PTR [rax]
   14006f2be:	add    BYTE PTR cs:[rax],al
   14006f2c1:	add    BYTE PTR [rax],al
   14006f2c3:	add    BYTE PTR [rax+rax*1+0xe],al
   14006f2c7:	add    BYTE PTR [rcx],al
   14006f2c9:	add    BYTE PTR [rdi+0x0],cl
   14006f2cc:	jb     0x14006f2ce
   14006f2ce:	imul   eax,DWORD PTR [rax],0x690067
   14006f2d4:	outs   dx,BYTE PTR ds:[rsi]
   14006f2d5:	add    BYTE PTR [rcx+0x0],ah
   14006f2d8:	ins    BYTE PTR es:[rdi],dx
   14006f2d9:	add    BYTE PTR [rsi+0x0],al
   14006f2dc:	imul   eax,DWORD PTR [rax],0x65006c
   14006f2e2:	outs   dx,BYTE PTR ds:[rsi]
   14006f2e3:	add    BYTE PTR [rcx+0x0],ah
   14006f2e6:	ins    DWORD PTR es:[rdi],dx
   14006f2e7:	add    BYTE PTR [rbp+0x0],ah
   14006f2ea:	add    BYTE PTR [rax],al
   14006f2ec:	add    BYTE PTR fs:[rdx+0x0],dh
   14006f2f0:	jbe    0x14006f2f2
   14006f2f2:	rex.WB add BYTE PTR [r14+0x0],bpl
   14006f2f6:	jae    0x14006f2f8
   14006f2f8:	je     0x14006f2fa
   14006f2fa:	add    BYTE PTR ss:[rax+rax*1],dh
   14006f2fe:	add    BYTE PTR cs:[rbp+0x0],ah
   14006f302:	js     0x14006f304
   14006f304:	add    BYTE PTR gs:[rax],al
   14006f307:	add    BYTE PTR [rsi+0x0],al
   14006f30a:	adc    eax,DWORD PTR [rax]
   14006f30c:	add    DWORD PTR [rax],eax
   14006f30e:	push   rax
   14006f30f:	add    BYTE PTR [rdx+0x0],dh
   14006f312:	outs   dx,DWORD PTR ds:[rsi]
   14006f313:	add    BYTE PTR [rax+rax*1+0x75],ah
   14006f317:	add    BYTE PTR [rbx+0x0],ah
   14006f31a:	je     0x14006f31c
   14006f31c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14006f320:	ins    DWORD PTR es:[rdi],dx
   14006f321:	add    BYTE PTR [rbp+0x0],ah
   14006f324:	add    BYTE PTR [rax],al
   14006f326:	add    BYTE PTR [rax],al
   14006f328:	push   rsi
   14006f329:	add    BYTE PTR [rbp+0x0],cl
   14006f32c:	ja     0x14006f32e
   14006f32e:	(bad)  
   14006f32f:	add    BYTE PTR [rdx+0x0],dh
   14006f332:	add    BYTE PTR gs:[rax],ah
   14006f335:	add    BYTE PTR [rdi+0x0],dl
   14006f338:	outs   dx,DWORD PTR ds:[rsi]
   14006f339:	add    BYTE PTR [rdx+0x0],dh
   14006f33c:	imul   eax,DWORD PTR [rax],0x73
   14006f33f:	add    BYTE PTR [rax+rax*1+0x61],dh
   14006f343:	add    BYTE PTR [rax+rax*1+0x69],dh
   14006f347:	add    BYTE PTR [rdi+0x0],ch
   14006f34a:	outs   dx,BYTE PTR ds:[rsi]
   14006f34b:	add    BYTE PTR [rax],al
   14006f34d:	add    BYTE PTR [rax],al
   14006f34f:	add    BYTE PTR [rsi+0x0],cl
   14006f352:	adc    eax,0x50000100
   14006f357:	add    BYTE PTR [rdx+0x0],dh
   14006f35a:	outs   dx,DWORD PTR ds:[rsi]
   14006f35b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14006f35f:	add    BYTE PTR [rbx+0x0],ah
   14006f362:	je     0x14006f364
   14006f364:	push   rsi
   14006f365:	add    BYTE PTR [rbp+0x0],ah
   14006f368:	jb     0x14006f36a
   14006f36a:	jae    0x14006f36c
   14006f36c:	imul   eax,DWORD PTR [rax],0x6e006f
   14006f372:	add    BYTE PTR [rax],al
   14006f374:	xor    DWORD PTR [rax],eax
   14006f376:	xor    al,BYTE PTR [rax]
   14006f378:	add    BYTE PTR cs:[rax],dh
   14006f37b:	add    BYTE PTR [rsi],ch
   14006f37d:	add    BYTE PTR [rax],dh
   14006f37f:	add    BYTE PTR [rax],ah
   14006f381:	add    BYTE PTR [rdx+0x0],ah
   14006f384:	jne    0x14006f386
   14006f386:	imul   eax,DWORD PTR [rax],0x64006c
   14006f38c:	sub    eax,0x39003200
   14006f391:	add    BYTE PTR [rax],bh
   14006f393:	add    BYTE PTR [rip+0x39003500],dh        # 0x179072899
   14006f399:	add    BYTE PTR [rsi],dh
   14006f39b:	add    BYTE PTR [rax],al
   14006f39d:	add    BYTE PTR [rax],al
   14006f39f:	add    BYTE PTR [rax+rax*1+0x0],al
   14006f3a3:	add    BYTE PTR [rcx],al
   14006f3a5:	add    BYTE PTR [rsi+0x0],dl
   14006f3a8:	(bad)  
   14006f3a9:	add    BYTE PTR [rdx+0x0],dh
   14006f3ac:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14006f3b0:	ins    BYTE PTR es:[rdi],dx
   14006f3b1:	add    BYTE PTR [rbp+0x0],ah
   14006f3b4:	rex.WB add BYTE PTR [r14+0x0],bpl
   14006f3b8:	data16 add BYTE PTR [rdi+0x0],ch
   14006f3bc:	add    BYTE PTR [rax],al
   14006f3be:	add    BYTE PTR [rax],al
   14006f3c0:	and    al,0x0
   14006f3c2:	add    al,0x0
   14006f3c4:	add    BYTE PTR [rax],al
   14006f3c6:	push   rsp
   14006f3c7:	add    BYTE PTR [rdx+0x0],dh
   14006f3ca:	(bad)  
   14006f3cb:	add    BYTE PTR [rsi+0x0],ch
   14006f3ce:	jae    0x14006f3d0
   14006f3d0:	ins    BYTE PTR es:[rdi],dx
   14006f3d1:	add    BYTE PTR [rcx+0x0],ah
   14006f3d4:	je     0x14006f3d6
   14006f3d6:	imul   eax,DWORD PTR [rax],0x6e006f
   14006f3dc:	add    BYTE PTR [rax],al
   14006f3de:	add    BYTE PTR [rax],al
   14006f3e0:	or     DWORD PTR [rax+rsi*4],eax
   14006f3e3:	add    al,0x0
   14006f3e5:	add    BYTE PTR [rax],al
   14006f3e7:	add    BYTE PTR [rdi+rdi*1],bh
   14006f3ea:	js     0x14006f459
   14006f3ec:	ins    BYTE PTR es:[rdi],dx
   14006f3ed:	and    BYTE PTR [rsi+0x65],dh
   14006f3f0:	jb     0x14006f465
   14006f3f2:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14006f3f9:	xor    BYTE PTR [rdx],ah
   14006f3fb:	and    BYTE PTR [rbp+0x6e],ah
   14006f3fe:	movsxd ebp,DWORD PTR [rdi+0x64]
   14006f401:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14006f408:	rex.RX sub eax,0x73202238
   14006f40e:	je     0x14006f471
   14006f410:	outs   dx,BYTE PTR ds:[rsi]
   14006f411:	fs (bad) 
   14006f413:	ins    BYTE PTR es:[rdi],dx
   14006f414:	outs   dx,DWORD PTR ds:[rsi]
   14006f415:	outs   dx,BYTE PTR ds:[rsi]
   14006f416:	gs cmp eax,0x73657922
   14006f41c:	and    bh,BYTE PTR [rdi]
   14006f41e:	or     bh,BYTE PTR ds:[rcx+riz*2]
   14006f422:	jae    0x14006f497
   14006f424:	gs ins DWORD PTR es:[rdi],dx
   14006f426:	(bad)  
   14006f427:	ins    BYTE PTR es:[rdi],dx
   14006f428:	jns    0x14006f44a
   14006f42a:	js     0x14006f499
   14006f42c:	ins    BYTE PTR es:[rdi],dx
   14006f42d:	outs   dx,BYTE PTR ds:[rsi]
   14006f42e:	jae    0x14006f46d
   14006f430:	and    dh,BYTE PTR [rbp+0x72]
   14006f433:	outs   dx,BYTE PTR ds:[rsi]
   14006f434:	cmp    dh,BYTE PTR [rbx+0x63]
   14006f437:	push   0x73616d65
   14006f43c:	sub    eax,0x7263696d
   14006f441:	outs   dx,DWORD PTR ds:[rsi]
   14006f442:	jae    0x14006f4b3
   14006f444:	data16 je 0x14006f474
   14006f447:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14006f44a:	cmp    ah,BYTE PTR [rcx+0x73]
   14006f44d:	ins    DWORD PTR es:[rdi],dx
   14006f44e:	cs jbe 0x14006f482
   14006f451:	and    ah,BYTE PTR [rax]
   14006f453:	ins    DWORD PTR es:[rdi],dx
   14006f454:	(bad)  
   14006f455:	outs   dx,BYTE PTR ds:[rsi]
   14006f456:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14006f45d:	jb     0x14006f4d2
   14006f45f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14006f466:	xor    BYTE PTR [rdx],ah
   14006f468:	or     ah,BYTE PTR ds:[rax]
   14006f46b:	and    BYTE PTR [rax],ah
   14006f46d:	cmp    al,0x61
   14006f46f:	jae    0x14006f4e4
   14006f471:	gs ins DWORD PTR es:[rdi],dx
   14006f473:	(bad)  
   14006f474:	ins    BYTE PTR es:[rdi],dx
   14006f475:	jns    0x14006f4c0
   14006f477:	fs outs dx,BYTE PTR gs:[rsi]
   14006f47a:	je     0x14006f4e5
   14006f47c:	je     0x14006f4f7
   14006f47e:	or     ah,BYTE PTR [rax]
   14006f480:	and    BYTE PTR [rax],ah
   14006f482:	and    BYTE PTR [rax],ah
   14006f484:	and    BYTE PTR [rsi+0x65],dh
   14006f487:	jb     0x14006f4fc
   14006f489:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14006f490:	xor    BYTE PTR [rsi],ch
   14006f492:	xor    BYTE PTR [rsi],ch
   14006f494:	xor    BYTE PTR [rdx],ah
   14006f496:	or     ah,BYTE PTR [rax]
   14006f498:	and    BYTE PTR [rax],ah
   14006f49a:	and    BYTE PTR [rax],ah
   14006f49c:	and    BYTE PTR [rax+0x72],dh
   14006f49f:	outs   dx,DWORD PTR ds:[rsi]
   14006f4a0:	movsxd esp,DWORD PTR [rbp+0x73]
   14006f4a3:	jae    0x14006f514
   14006f4a5:	jb     0x14006f4e8
   14006f4a7:	jb     0x14006f50c
   14006f4a9:	push   0x63657469
   14006f4ae:	je     0x14006f525
   14006f4b0:	jb     0x14006f517
   14006f4b2:	cmp    eax,0x646d6122
   14006f4b7:	ss xor al,0x22
   14006f4ba:	or     ah,BYTE PTR [rax]
   14006f4bc:	and    BYTE PTR [rax],ah
   14006f4be:	and    BYTE PTR [rax],ah
   14006f4c0:	and    BYTE PTR [rsi+0x61],ch
   14006f4c3:	ins    DWORD PTR es:[rdi],dx
   14006f4c4:	gs cmp eax,0x774d5622
   14006f4ca:	(bad)  
   14006f4cb:	jb     0x14006f532
   14006f4cd:	cs push rsi
   14006f4cf:	rex.WRB ja 0x14006f533
   14006f4d2:	jb     0x14006f539
   14006f4d4:	cs fs jb 0x14006f54e
   14006f4d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14006f4da:	jae    0x14006f550
   14006f4dc:	ss xor al,0x22
   14006f4df:	or     ah,BYTE PTR [rax]
   14006f4e1:	and    BYTE PTR [rax],ah
   14006f4e3:	and    BYTE PTR [rax],ah
   14006f4e5:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14006f4e9:	gs cmp eax,0x6e697722
   14006f4ef:	xor    esi,DWORD PTR [rdx]
   14006f4f1:	and    cl,BYTE PTR [rdx]
   14006f4f3:	and    BYTE PTR [rax],ah
   14006f4f5:	and    BYTE PTR [rdi],ch
   14006f4f7:	or     ah,BYTE PTR ds:[rax]
   14006f4fa:	and    BYTE PTR [rax],ah
   14006f4fc:	cmp    al,0x64
   14006f4fe:	gs jae 0x14006f564
   14006f501:	jb     0x14006f56c
   14006f503:	jo     0x14006f579
   14006f505:	imul   ebp,DWORD PTR [rdi+0x6e],0x4d56223e
   14006f50c:	ja     0x14006f56f
   14006f50e:	jb     0x14006f575
   14006f510:	and    BYTE PTR [rsi],dh
   14006f512:	xor    al,0x2d
   14006f514:	(bad)  
   14006f515:	imul   esi,DWORD PTR [rax+riz*1+0x49],0x6174736e
   14006f51d:	ins    BYTE PTR es:[rdi],dx
   14006f51e:	ins    BYTE PTR es:[rdi],dx
   14006f51f:	and    BYTE PTR [rbp+0x74],dl
   14006f522:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x2f3c2279
   14006f52a:	fs gs jae 0x14006f591
   14006f52e:	jb     0x14006f599
   14006f530:	jo     0x14006f5a6
   14006f532:	imul   ebp,DWORD PTR [rdi+0x6e],0x20200a3e
   14006f539:	and    BYTE PTR [rsp+rsi*2],bh
   14006f53c:	jb     0x14006f5b3
   14006f53e:	jae    0x14006f5b4
   14006f540:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14006f542:	outs   dx,WORD PTR ds:[rsi]
   14006f544:	and    BYTE PTR [rax+0x6d],bh
   14006f547:	ins    BYTE PTR es:[rdi],dx
   14006f548:	outs   dx,BYTE PTR ds:[rsi]
   14006f549:	jae    0x14006f588
   14006f54b:	and    dh,BYTE PTR [rbp+0x72]
   14006f54e:	outs   dx,BYTE PTR ds:[rsi]
   14006f54f:	cmp    dh,BYTE PTR [rbx+0x63]
   14006f552:	push   0x73616d65
   14006f557:	sub    eax,0x7263696d
   14006f55c:	outs   dx,DWORD PTR ds:[rsi]
   14006f55d:	jae    0x14006f5ce
   14006f55f:	data16 je 0x14006f58f
   14006f562:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14006f565:	cmp    ah,BYTE PTR [rcx+0x73]
   14006f568:	ins    DWORD PTR es:[rdi],dx
   14006f569:	cs jbe 0x14006f59f
   14006f56c:	and    bh,BYTE PTR [rsi]
   14006f56e:	or     ah,BYTE PTR [rax]
   14006f570:	and    BYTE PTR [rax],ah
   14006f572:	and    BYTE PTR [rax],ah
   14006f574:	and    BYTE PTR [rbx+rsi*2],bh
   14006f577:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14006f57b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2020200a
   14006f583:	and    BYTE PTR [rax],ah
   14006f585:	and    BYTE PTR [rax],ah
   14006f587:	and    BYTE PTR [rax],ah
   14006f589:	cmp    al,0x72
   14006f58b:	gs jno 0x14006f603
   14006f58e:	gs jae 0x14006f605
   14006f591:	gs fs push rax
   14006f594:	jb     0x14006f5ff
   14006f596:	jbe    0x14006f601
   14006f598:	ins    BYTE PTR es:[rdi],dx
   14006f599:	gs addr32 gs jae 0x14006f5dc
   14006f59e:	or     ah,BYTE PTR [rax]
   14006f5a0:	and    BYTE PTR [rax],ah
   14006f5a2:	and    BYTE PTR [rax],ah
   14006f5a4:	and    BYTE PTR [rax],ah
   14006f5a6:	and    BYTE PTR [rax],ah
   14006f5a8:	and    BYTE PTR [rax],ah
   14006f5aa:	and    BYTE PTR [rdx+rsi*2],bh
   14006f5ad:	gs jno 0x14006f625
   14006f5b0:	gs jae 0x14006f627
   14006f5b3:	gs fs rex.RB js 0x14006f61d
   14006f5b8:	movsxd esi,DWORD PTR [rbp+0x74]
   14006f5bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14006f5c2:	ins    BYTE PTR es:[rdi],dx
   14006f5c3:	or     ah,BYTE PTR [rax]
   14006f5c5:	and    BYTE PTR [rax],ah
   14006f5c7:	and    BYTE PTR [rax],ah
   14006f5c9:	and    BYTE PTR [rax],ah
   14006f5cb:	and    BYTE PTR [rax],ah
   14006f5cd:	and    BYTE PTR [rax],ah
   14006f5cf:	and    BYTE PTR [rax],ah
   14006f5d1:	and    BYTE PTR [rax],ah
   14006f5d3:	ins    BYTE PTR es:[rdi],dx
   14006f5d4:	gs jbe 0x14006f63c
   14006f5d7:	ins    BYTE PTR es:[rdi],dx
   14006f5d8:	cmp    eax,0x49736122
   14006f5dd:	outs   dx,BYTE PTR ds:[rsi]
   14006f5de:	jbe    0x14006f64f
   14006f5e0:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14006f5e4:	or     ah,BYTE PTR [rax]
   14006f5e6:	and    BYTE PTR [rax],ah
   14006f5e8:	and    BYTE PTR [rax],ah
   14006f5ea:	and    BYTE PTR [rax],ah
   14006f5ec:	and    BYTE PTR [rax],ah
   14006f5ee:	and    BYTE PTR [rax],ah
   14006f5f0:	and    BYTE PTR [rax],ah
   14006f5f2:	and    BYTE PTR [rax],ah
   14006f5f4:	jne    0x14006f65f
   14006f5f6:	movsxd esp,DWORD PTR [r11+0x65]
   14006f5fa:	jae    0x14006f66f
   14006f5fc:	cmp    eax,0x6c616622
   14006f601:	jae    0x14006f668
   14006f603:	and    cl,BYTE PTR [rdx]
   14006f605:	and    BYTE PTR [rax],ah
   14006f607:	and    BYTE PTR [rax],ah
   14006f609:	and    BYTE PTR [rax],ah
   14006f60b:	and    BYTE PTR [rax],ah
   14006f60d:	and    BYTE PTR [rdi],ch
   14006f60f:	or     ah,BYTE PTR ds:[rax]
   14006f612:	and    BYTE PTR [rax],ah
   14006f614:	and    BYTE PTR [rax],ah
   14006f616:	and    BYTE PTR [rax],ah
   14006f618:	and    BYTE PTR [rax],ah
   14006f61a:	cmp    al,0x2f
   14006f61c:	jb     0x14006f683
   14006f61e:	jno    0x14006f695
   14006f620:	gs jae 0x14006f697
   14006f623:	gs fs push rax
   14006f626:	jb     0x14006f691
   14006f628:	jbe    0x14006f693
   14006f62a:	ins    BYTE PTR es:[rdi],dx
   14006f62b:	gs addr32 gs jae 0x14006f66e
   14006f630:	or     ah,BYTE PTR [rax]
   14006f632:	and    BYTE PTR [rax],ah
   14006f634:	and    BYTE PTR [rax],ah
   14006f636:	and    BYTE PTR [rdi+rbp*1],bh
   14006f639:	jae    0x14006f6a0
   14006f63b:	movsxd esi,DWORD PTR [rbp+0x72]
   14006f63e:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2020200a
   14006f646:	cmp    al,0x2f
   14006f648:	je     0x14006f6bc
   14006f64a:	jne    0x14006f6bf
   14006f64c:	je     0x14006f697
   14006f64e:	outs   dx,BYTE PTR ds:[rsi]
   14006f64f:	outs   dx,WORD PTR ds:[rsi]
   14006f651:	or     bh,BYTE PTR ds:[rdi+rbp*1]
   14006f655:	(bad)  
   14006f656:	jae    0x14006f6cb
   14006f658:	gs ins DWORD PTR es:[rdi],dx
   14006f65a:	(bad)  
   14006f65b:	ins    BYTE PTR es:[rdi],dx
   14006f65c:	jns    0x14006f69c
   14006f65e:	or     al,BYTE PTR [rax]

Disassembly of section .reloc:

0000000140070000 <.reloc>:
   140070000:	add    al,dl
   140070002:	add    eax,DWORD PTR [rax]
   140070004:	adc    al,0x0
   140070006:	add    BYTE PTR [rax],al
   140070008:	call   0x138aaf0b0
   14007000d:	movabs ds:0xe000a420a418a400,eax
   140070016:	add    eax,DWORD PTR [rax]
   140070018:	sbb    al,0x0
   14007001a:	add    BYTE PTR [rax],al
   14007001c:	jo     0x14006ffcb
   14007001e:	sub    BYTE PTR [rbp-0x525f5270],0xb0
   140070025:	lods   eax,DWORD PTR ds:[rsi]
   140070026:	shr    BYTE PTR [rbp-0x521f5230],0xf0
   14007002d:	lods   eax,DWORD PTR ds:[rsi]
   14007002e:	add    BYTE PTR [rax],al
   140070030:	add    BYTE PTR [rax+0x4],dl
   140070033:	add    BYTE PTR [rax],bl
   140070035:	add    BYTE PTR [rax],al
   140070037:	add    BYTE PTR [rax-0x55],ah
   14007003a:	push   0x78ab70ab
   14007003f:	stos   DWORD PTR es:[rdi],eax
   140070040:	push   0x78ad70ad
   140070045:	lods   eax,DWORD PTR ds:[rsi]
   140070046:	sub    BYTE PTR [rbp+0x46000],0xcc
   14007004d:	add    BYTE PTR [rax],al
   14007004f:	add    al,bh
   140070051:	test   eax,0xaa18aa08
   140070056:	sub    BYTE PTR [rdx-0x55b755c8],ch
   14007005c:	pop    rax
   14007005d:	stos   BYTE PTR es:[rdi],al
   14007005e:	push   0xffffffff88aa78aa
   140070063:	stos   BYTE PTR es:[rdi],al
   140070064:	cwde   
   140070065:	stos   BYTE PTR es:[rdi],al
   140070066:	test   al,0xaa
   140070068:	mov    eax,0xd8aac8aa
   14007006d:	stos   BYTE PTR es:[rdi],al
   14007006e:	call   0x148b1f91d
   140070073:	stos   DWORD PTR es:[rdi],eax
   140070074:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   14007007a:	stos   QWORD PTR es:[rdi],rax
   14007007c:	pop    rax
   14007007d:	stos   DWORD PTR es:[rdi],eax
   14007007e:	push   0xffffffff88ab78ab
   140070083:	stos   DWORD PTR es:[rdi],eax
   140070084:	cwde   
   140070085:	stos   DWORD PTR es:[rdi],eax
   140070086:	test   al,0xab
   140070088:	mov    eax,0xd8abc8ab
   14007008d:	stos   DWORD PTR es:[rdi],eax
   14007008e:	call   0x148b2f93e
   140070093:	lods   al,BYTE PTR ds:[rsi]
   140070094:	sbb    BYTE PTR [rax+rbp*1+0x48ac38ac],ch
   14007009b:	lods   al,BYTE PTR ds:[rsi]
   14007009c:	pop    rax
   14007009d:	lods   al,BYTE PTR ds:[rsi]
   14007009e:	push   0xffffffff88ac78ac
   1400700a3:	lods   al,BYTE PTR ds:[rsi]
   1400700a4:	cwde   
   1400700a5:	lods   al,BYTE PTR ds:[rsi]
   1400700a6:	test   al,0xac
   1400700a8:	mov    eax,0xd8acc8ac
   1400700ad:	lods   al,BYTE PTR ds:[rsi]
   1400700ae:	call   0x148b3f95f
   1400700b3:	lods   eax,DWORD PTR ds:[rsi]
   1400700b4:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   1400700ba:	lods   rax,QWORD PTR ds:[rsi]
   1400700bc:	pop    rax
   1400700bd:	lods   eax,DWORD PTR ds:[rsi]
   1400700be:	push   0xffffffff88ad78ad
   1400700c3:	lods   eax,DWORD PTR ds:[rsi]
   1400700c4:	cwde   
   1400700c5:	lods   eax,DWORD PTR ds:[rsi]
   1400700c6:	test   al,0xad
   1400700c8:	mov    eax,0xd8adc8ad
   1400700cd:	lods   eax,DWORD PTR ds:[rsi]
   1400700ce:	call   0x148b4f980
   1400700d3:	scas   al,BYTE PTR es:[rdi]
   1400700d4:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   1400700da:	rex.W scas al,BYTE PTR es:[rdi]
   1400700dc:	pop    rax
   1400700dd:	scas   al,BYTE PTR es:[rdi]
   1400700de:	push   0xffffffff88ae78ae
   1400700e3:	scas   al,BYTE PTR es:[rdi]
   1400700e4:	cwde   
   1400700e5:	scas   al,BYTE PTR es:[rdi]
   1400700e6:	test   al,0xae
   1400700e8:	mov    eax,0xd8aec8ae
   1400700ed:	scas   al,BYTE PTR es:[rdi]
   1400700ee:	call   0x148b5f9a1
   1400700f3:	scas   eax,DWORD PTR es:[rdi]
   1400700f4:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   1400700fa:	scas   rax,QWORD PTR es:[rdi]
   1400700fc:	pop    rax
   1400700fd:	scas   eax,DWORD PTR es:[rdi]
   1400700fe:	push   0xffffffff88af78af
   140070103:	scas   eax,DWORD PTR es:[rdi]
   140070104:	cwde   
   140070105:	scas   eax,DWORD PTR es:[rdi]
   140070106:	test   al,0xaf
   140070108:	mov    eax,0xd8afc8af
   14007010d:	scas   eax,DWORD PTR es:[rdi]
   14007010e:	call   0x140b6f9c2
   140070113:	add    BYTE PTR [rax],al
   140070115:	jo     0x14007011b
   140070117:	add    BYTE PTR [rax],cl
   140070119:	add    al,BYTE PTR [rax]
   14007011b:	add    BYTE PTR [rax],cl
   14007011d:	movabs al,ds:0xa048a038a028a018
   140070126:	pop    rax
   140070127:	movabs al,ds:0xa098a088a078a068
   140070130:	test   al,0xa0
   140070132:	mov    eax,0xd8a0c8a0
   140070137:	movabs al,ds:0xa118a108a0f8a0e8
   140070140:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   140070146:	pop    rax
   140070147:	movabs eax,ds:0xa198a188a178a168
   140070150:	test   al,0xa1
   140070152:	mov    eax,0xd8a1c8a1
   140070157:	movabs eax,ds:0xa218a208a1f8a1e8
   140070160:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   140070166:	pop    rax
   140070167:	movabs ds:0xa298a288a278a268,al
   140070170:	test   al,0xa2
   140070172:	mov    eax,0xd8a2c8a2
   140070177:	movabs ds:0xa318a308a2f8a2e8,al
   140070180:	sub    BYTE PTR [rbx-0x5cb75cc8],ah
   140070186:	pop    rax
   140070187:	movabs ds:0xa398a388a378a368,eax
   140070190:	test   al,0xa3
   140070192:	mov    eax,0xd8a3c8a3
   140070197:	movabs ds:0xa418a408a3f8a3e8,eax
   1400701a0:	sub    BYTE PTR [rax+rdi*1+0x58a448a4],ah
   1400701a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400701a8:	push   0xffffffff88a478a4
   1400701ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400701ae:	cwde   
   1400701af:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400701b0:	test   al,0xa4
   1400701b2:	mov    eax,0xd8a4c8a4
   1400701b7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400701b8:	call   0x148abfa61
   1400701bd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400701be:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   1400701c4:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400701c6:	pop    rax
   1400701c7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400701c8:	push   0xffffffff88a578a5
   1400701cd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400701ce:	cwde   
   1400701cf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400701d0:	test   al,0xa5
   1400701d2:	mov    eax,0xd8a5c8a5
   1400701d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400701d8:	call   0x148acfa82
   1400701dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400701de:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   1400701e4:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400701e6:	pop    rax
   1400701e7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400701e8:	push   0xffffffff88a678a6
   1400701ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400701ee:	cwde   
   1400701ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400701f0:	test   al,0xa6
   1400701f2:	mov    eax,0xd8a6c8a6
   1400701f7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400701f8:	call   0x148adfaa3
   1400701fd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400701fe:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   140070204:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140070206:	pop    rax
   140070207:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070208:	push   0xffffffff88a778a7
   14007020d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14007020e:	cwde   
   14007020f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070210:	test   al,0xa7
   140070212:	mov    eax,0xd8a7c8a7
   140070217:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070218:	call   0x148aefac4
   14007021d:	test   al,0x18
   14007021f:	test   al,0x28
   140070221:	test   al,0x38
   140070223:	test   al,0x48
   140070225:	test   al,0x58
   140070227:	test   al,0x68
   140070229:	test   al,0x78
   14007022b:	test   al,0x88
   14007022d:	test   al,0x98
   14007022f:	test   al,0xa8
   140070231:	test   al,0xb8
   140070233:	test   al,0xc8
   140070235:	test   al,0xd8
   140070237:	test   al,0xe8
   140070239:	test   al,0xf8
   14007023b:	test   al,0x8
   14007023d:	test   eax,0xa928a918
   140070242:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   140070248:	push   0xffffffff88a978a9
   14007024d:	test   eax,0xa9a8a998
   140070252:	mov    eax,0xd8a9c8a9
   140070257:	test   eax,0xa9f8a9e8
   14007025c:	or     BYTE PTR [rdx-0x55d755e8],ch
   140070262:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   140070268:	push   0xffffffff88aa78aa
   14007026d:	stos   BYTE PTR es:[rdi],al
   14007026e:	cwde   
   14007026f:	stos   BYTE PTR es:[rdi],al
   140070270:	test   al,0xaa
   140070272:	mov    eax,0xd8aac8aa
   140070277:	stos   BYTE PTR es:[rdi],al
   140070278:	call   0x148b1fb27
   14007027d:	stos   DWORD PTR es:[rdi],eax
   14007027e:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   140070284:	stos   QWORD PTR es:[rdi],rax
   140070286:	pop    rax
   140070287:	stos   DWORD PTR es:[rdi],eax
   140070288:	push   0xffffffff88ab78ab
   14007028d:	stos   DWORD PTR es:[rdi],eax
   14007028e:	cwde   
   14007028f:	stos   DWORD PTR es:[rdi],eax
   140070290:	test   al,0xab
   140070292:	mov    eax,0xd8abc8ab
   140070297:	stos   DWORD PTR es:[rdi],eax
   140070298:	call   0x148b2fb48
   14007029d:	lods   al,BYTE PTR ds:[rsi]
   14007029e:	sbb    BYTE PTR [rax+rbp*1+0x48ac38ac],ch
   1400702a5:	lods   al,BYTE PTR ds:[rsi]
   1400702a6:	pop    rax
   1400702a7:	lods   al,BYTE PTR ds:[rsi]
   1400702a8:	push   0xffffffff88ac78ac
   1400702ad:	lods   al,BYTE PTR ds:[rsi]
   1400702ae:	cwde   
   1400702af:	lods   al,BYTE PTR ds:[rsi]
   1400702b0:	test   al,0xac
   1400702b2:	mov    eax,0xd8acc8ac
   1400702b7:	lods   al,BYTE PTR ds:[rsi]
   1400702b8:	call   0x148b3fb69
   1400702bd:	lods   eax,DWORD PTR ds:[rsi]
   1400702be:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   1400702c4:	lods   rax,QWORD PTR ds:[rsi]
   1400702c6:	pop    rax
   1400702c7:	lods   eax,DWORD PTR ds:[rsi]
   1400702c8:	push   0xffffffff88ad78ad
   1400702cd:	lods   eax,DWORD PTR ds:[rsi]
   1400702ce:	cwde   
   1400702cf:	lods   eax,DWORD PTR ds:[rsi]
   1400702d0:	test   al,0xad
   1400702d2:	mov    eax,0xd8adc8ad
   1400702d7:	lods   eax,DWORD PTR ds:[rsi]
   1400702d8:	call   0x148b4fb8a
   1400702dd:	scas   al,BYTE PTR es:[rdi]
   1400702de:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   1400702e4:	rex.W scas al,BYTE PTR es:[rdi]
   1400702e6:	pop    rax
   1400702e7:	scas   al,BYTE PTR es:[rdi]
   1400702e8:	push   0xffffffff88ae78ae
   1400702ed:	scas   al,BYTE PTR es:[rdi]
   1400702ee:	cwde   
   1400702ef:	scas   al,BYTE PTR es:[rdi]
   1400702f0:	test   al,0xae
   1400702f2:	mov    eax,0xd8aec8ae
   1400702f7:	scas   al,BYTE PTR es:[rdi]
   1400702f8:	call   0x148b5fbab
   1400702fd:	scas   eax,DWORD PTR es:[rdi]
   1400702fe:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   140070304:	scas   rax,QWORD PTR es:[rdi]
   140070306:	pop    rax
   140070307:	scas   eax,DWORD PTR es:[rdi]
   140070308:	push   0xffffffff88af78af
   14007030d:	scas   eax,DWORD PTR es:[rdi]
   14007030e:	cwde   
   14007030f:	scas   eax,DWORD PTR es:[rdi]
   140070310:	test   al,0xaf
   140070312:	mov    eax,0xd8afc8af
   140070317:	scas   eax,DWORD PTR es:[rdi]
   140070318:	call   0x140b6fbcc
   14007031d:	add    BYTE PTR [rax+rax*1],0xa4
   140070321:	add    DWORD PTR [rax],eax
   140070323:	add    BYTE PTR [rax],cl
   140070325:	movabs al,ds:0xa048a038a028a018
   14007032e:	pop    rax
   14007032f:	movabs al,ds:0xa098a088a078a068
   140070338:	test   al,0xa0
   14007033a:	mov    eax,0xd8a0c8a0
   14007033f:	movabs al,ds:0xa118a108a0f8a0e8
   140070348:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   14007034e:	pop    rax
   14007034f:	movabs eax,ds:0xa198a188a178a168
   140070358:	test   al,0xa1
   14007035a:	mov    eax,0xd8a1c8a1
   14007035f:	movabs eax,ds:0xa218a208a1f8a1e8
   140070368:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   14007036e:	pop    rax
   14007036f:	movabs ds:0xa298a288a278a268,al
   140070378:	test   al,0xa2
   14007037a:	mov    eax,0xd8a2c8a2
   14007037f:	movabs ds:0xa318a308a2f8a2e8,al
   140070388:	sub    BYTE PTR [rbx-0x5cb75cc8],ah
   14007038e:	pop    rax
   14007038f:	movabs ds:0xa398a388a378a368,eax
   140070398:	test   al,0xa3
   14007039a:	mov    eax,0xd8a3c8a3
   14007039f:	movabs ds:0xa418a408a3f8a3e8,eax
   1400703a8:	sub    BYTE PTR [rax+rdi*1+0x58a448a4],ah
   1400703af:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400703b0:	push   0xffffffff88a478a4
   1400703b5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400703b6:	cwde   
   1400703b7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400703b8:	test   al,0xa4
   1400703ba:	mov    eax,0xd8a4c8a4
   1400703bf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400703c0:	call   0x148abfc69
   1400703c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400703c6:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   1400703cc:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400703ce:	pop    rax
   1400703cf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400703d0:	push   0xffffffff88a578a5
   1400703d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400703d6:	cwde   
   1400703d7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400703d8:	test   al,0xa5
   1400703da:	mov    eax,0xd8a5c8a5
   1400703df:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400703e0:	call   0x148acfc8a
   1400703e5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400703e6:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   1400703ec:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400703ee:	pop    rax
   1400703ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400703f0:	push   0xffffffff88a678a6
   1400703f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400703f6:	cwde   
   1400703f7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400703f8:	test   al,0xa6
   1400703fa:	mov    eax,0xd8a6c8a6
   1400703ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070400:	call   0x148adfcab
   140070405:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070406:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   14007040c:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14007040e:	pop    rax
   14007040f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070410:	push   0xffffffff88a778a7
   140070415:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070416:	cwde   
   140070417:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070418:	test   al,0xa7
   14007041a:	mov    eax,0xd8a7c8a7
   14007041f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070420:	call   0x148aefccc
   140070425:	test   al,0x18
   140070427:	test   al,0x28
   140070429:	test   al,0x38
   14007042b:	test   al,0x48
   14007042d:	test   al,0x58
   14007042f:	test   al,0x68
   140070431:	test   al,0x78
   140070433:	test   al,0x88
   140070435:	test   al,0x98
   140070437:	test   al,0xa8
   140070439:	test   al,0xb8
   14007043b:	test   al,0xc8
   14007043d:	test   al,0xd8
   14007043f:	test   al,0xe8
   140070441:	test   al,0xf8
   140070443:	test   al,0x8
   140070445:	test   eax,0xa928a918
   14007044a:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   140070450:	push   0xffffffff88a978a9
   140070455:	test   eax,0xa9a8a998
   14007045a:	mov    eax,0xd8a9c8a9
   14007045f:	test   eax,0xa9f8a9e8
   140070464:	or     BYTE PTR [rdx-0x55d755e8],ch
   14007046a:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   140070470:	push   0xffffffff88aa78aa
   140070475:	stos   BYTE PTR es:[rdi],al
   140070476:	cwde   
   140070477:	stos   BYTE PTR es:[rdi],al
   140070478:	test   al,0xaa
   14007047a:	mov    eax,0xd8aac8aa
   14007047f:	stos   BYTE PTR es:[rdi],al
   140070480:	call   0x148b1fd2f
   140070485:	stos   DWORD PTR es:[rdi],eax
   140070486:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   14007048c:	stos   QWORD PTR es:[rdi],rax
   14007048e:	pop    rax
   14007048f:	stos   DWORD PTR es:[rdi],eax
   140070490:	push   0xffffffff88ab78ab
   140070495:	stos   DWORD PTR es:[rdi],eax
   140070496:	cwde   
   140070497:	stos   DWORD PTR es:[rdi],eax
   140070498:	test   al,0xab
   14007049a:	mov    eax,0xd8abc8ab
   14007049f:	stos   DWORD PTR es:[rdi],eax
   1400704a0:	call   0x148b2fd50
   1400704a5:	lods   al,BYTE PTR ds:[rsi]
   1400704a6:	sbb    BYTE PTR [rax+rbp*1+0x48ac38ac],ch
   1400704ad:	lods   al,BYTE PTR ds:[rsi]
   1400704ae:	pop    rax
   1400704af:	lods   al,BYTE PTR ds:[rsi]
   1400704b0:	push   0xffffffff88ac78ac
   1400704b5:	lods   al,BYTE PTR ds:[rsi]
   1400704b6:	cwde   
   1400704b7:	lods   al,BYTE PTR ds:[rsi]
   1400704b8:	test   al,0xac
   1400704ba:	mov    eax,0xd8acc8ac
   1400704bf:	lods   al,BYTE PTR ds:[rsi]
   1400704c0:	add    BYTE PTR [rax+0x1100004],dl
   1400704c6:	add    BYTE PTR [rax],al
   1400704c8:	nop
   1400704c9:	movabs al,ds:0xa0b0a0a8a0a0a098
   1400704d2:	mov    eax,0xd0a0c0a0
   1400704d7:	movabs al,ds:0xa0f0a0e8a0e0a0d8
   1400704e0:	clc    
   1400704e1:	movabs al,ds:0xa118a110a108a100
   1400704ea:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   1400704f0:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400704f6:	push   rax
   1400704f7:	movabs eax,ds:0xa170a168a160a158
   140070500:	js     0x1400704a3
   140070502:	and    BYTE PTR [rcx-0x5e5f5e70],0xb0
   140070509:	movabs eax,ds:0xa1f0a1e0a1d0a1c0
   140070512:	add    BYTE PTR [rdx-0x5ddf5df0],ah
   140070518:	xor    BYTE PTR [rdx-0x5daf5dc0],ah
   14007051e:	(bad)  
   14007051f:	movabs ds:0xa2a0a290a280a270,al
   140070528:	mov    al,0xa2
   14007052a:	shl    BYTE PTR [rdx-0x5d1f5d30],0xf0
   140070531:	movabs ds:0xa330a320a310a300,al
   14007053a:	rex movabs ds:0xa380a370a360a350,eax
   140070544:	nop
   140070545:	movabs ds:0xa518a510a508a500,eax
   14007054e:	and    BYTE PTR [rbp-0x5abf5ac8],ah
   140070554:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140070556:	push   rax
   140070557:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070558:	pop    rax
   140070559:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14007055a:	js     0x140070502
   14007055c:	and    BYTE PTR [rsi-0x595f5978],0xa8
   140070563:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070564:	mov    al,0xa6
   140070566:	mov    eax,0xc8a6c0a6
   14007056b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14007056c:	shl    BYTE PTR [rsi-0x59175928],1
   140070572:	clc    
   140070573:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070574:	or     BYTE PTR [rdi-0x58e758f0],ah
   14007057a:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140070580:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140070582:	push   rax
   140070583:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070584:	pop    rax
   140070585:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070586:	(bad)  
   140070587:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070588:	push   0xffffffff88a778a7
   14007058d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14007058e:	cwde   
   14007058f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070590:	movabs al,ds:0xd0a7c8a7c0a7a8a7
   140070599:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14007059a:	fsub   DWORD PTR [rdi-0x58175820]
   1400705a0:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400705a2:	clc    
   1400705a3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400705a4:	or     BYTE PTR [rax-0x548757b8],ch
   1400705aa:	mov    BYTE PTR [rbx-0x54675470],ch
   1400705b0:	movabs al,ds:0x78abd8abc0aba8ab
   1400705b9:	lods   al,BYTE PTR ds:[rsi]
   1400705ba:	mov    BYTE PTR [rax+rbp*4-0x3f524753],ch
   1400705c1:	lods   eax,DWORD PTR ds:[rsi]
   1400705c2:	enter  0xd0ad,0xad
   1400705c6:	fsubr  DWORD PTR [rbp-0x515751f8]
   1400705cc:	mov    eax,0xae
   1400705d1:	movabs al,ds:0xa1800000008c0004
   1400705da:	mov    BYTE PTR [rcx-0x5e675e70],ah
   1400705e0:	movabs al,ds:0x68a1d8a1d0a1c8a1
   1400705e9:	movabs ds:0xa3c0a3b8a3b0a278,al
   1400705f2:	enter  0xf8a3,0xa3
   1400705f6:	cwde   
   1400705f7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400705f8:	test   al,0xa4
   1400705fa:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400705fc:	clc    
   1400705fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400705fe:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140070604:	cmp    BYTE PTR [rsi-0x59175928],ah
   14007060a:	and    BYTE PTR [rax-0x57cf57d8],ch
   140070610:	cmp    BYTE PTR [rax-0x579757c0],ch
   140070616:	or     BYTE PTR [rcx-0x55b756e8],ch
   14007061c:	pop    rax
   14007061d:	stos   BYTE PTR es:[rdi],al
   14007061e:	(bad)  
   14007061f:	stos   BYTE PTR es:[rdi],al
   140070620:	push   0x78aa70aa
   140070625:	stos   BYTE PTR es:[rdi],al
   140070626:	sub    BYTE PTR [rdx-0x54b75558],0x58
   14007062d:	stos   DWORD PTR es:[rdi],eax
   14007062e:	mov    BYTE PTR [rax+rbx*4-0x57535f54],ch
   140070635:	lods   al,BYTE PTR ds:[rsi]
   140070636:	mov    al,0xac
   140070638:	mov    eax,0xd0acc0ac
   14007063d:	lods   al,BYTE PTR ds:[rsi]
   14007063e:	call   0xd8b48eef
   140070643:	lods   eax,DWORD PTR ds:[rsi]
   140070644:	mov    eax,0xd0aec8ae
   140070649:	scas   al,BYTE PTR es:[rdi]
   14007064a:	fsubr  DWORD PTR [rsi-0x51175120]
   140070650:	lock scas al,BYTE PTR es:[rdi]
   140070652:	add    BYTE PTR [rdi-0x504750e8],ch
   140070658:	enter  0xaf,0x0
   14007065c:	add    BYTE PTR [rax+0x680004],dh
   140070662:	add    BYTE PTR [rax],al
   140070664:	call   0x140a7ff09
   140070669:	movabs eax,ds:0xa120a118a110a108
   140070672:	xor    BYTE PTR [rcx-0x5e175eb8],ah
   140070678:	clc    
   140070679:	movabs eax,ds:0xa3d8a3d0a3c8a3c0
   140070682:	or     BYTE PTR [rax+rbp*4-0xf5b475c],ah
   140070689:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14007068a:	clc    
   14007068b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14007068c:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140070692:	cmp    BYTE PTR [rsi-0x592759b8],ah
   140070698:	call   0x168af2743
   14007069d:	test   al,0x30
   14007069f:	test   al,0x38
   1400706a1:	test   al,0x40
   1400706a3:	test   al,0x68
   1400706a5:	test   al,0x78
   1400706a7:	test   al,0x8
   1400706a9:	test   eax,0xaea8a918
   1400706ae:	mov    al,0xae
   1400706b0:	mov    eax,0xc8aec0ae
   1400706b5:	scas   al,BYTE PTR es:[rdi]
   1400706b6:	shr    BYTE PTR [rsi-0x510f5128],1
   1400706bc:	add    BYTE PTR [rdi-0x505750f8],ch
   1400706c2:	mov    eax,0x4c000af
   1400706c7:	add    BYTE PTR [rax+rax*1-0x5ea80000],ch
   1400706ce:	(bad)  
   1400706cf:	movabs eax,ds:0xa180a178a170a168
   1400706d8:	mov    BYTE PTR [rcx-0x5e4f5e60],ah
   1400706de:	mov    eax,0x68a258a1
   1400706e3:	movabs ds:0xa3b0a3a8a3a0a398,al
   1400706ec:	mov    eax,0xc8a3c0a3
   1400706f1:	movabs ds:0xa498a3f8a3f0a3e8,eax
   1400706fa:	test   al,0xa4
   1400706fc:	and    BYTE PTR [rsi-0x59cf59d8],ah
   140070702:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   140070708:	push   rax
   140070709:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14007070a:	(bad)  
   14007070b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14007070c:	js     0x1400706b4
   14007070e:	movabs al,ds:0xf0a6b8a6b0a6a8a6
   140070717:	test   eax,0xaa10aa00
   14007071c:	and    BYTE PTR [rdx-0x55bf55d0],ch
   140070722:	push   rax
   140070723:	stos   BYTE PTR es:[rdi],al
   140070724:	(bad)  
   140070725:	stos   BYTE PTR es:[rdi],al
   140070726:	jo     0x1400706d2
   140070728:	sub    BYTE PTR [rdx-0x555f5570],0xb0
   14007072f:	stos   BYTE PTR es:[rdi],al
   140070730:	shr    BYTE PTR [rdx-0x551f5530],0xf0
   140070737:	stos   BYTE PTR es:[rdi],al
   140070738:	add    BYTE PTR [rbx-0x54df54f0],ch
   14007073e:	xor    BYTE PTR [rbx-0x54af54c0],ch
   140070744:	(bad)  
   140070745:	stos   DWORD PTR es:[rdi],eax
   140070746:	cwde   
   140070747:	stos   DWORD PTR es:[rdi],eax
   140070748:	movabs al,ds:0xc8abc0abb8abb0ab
   140070751:	stos   DWORD PTR es:[rdi],eax
   140070752:	lock stos DWORD PTR es:[rdi],eax
   140070754:	clc    
   140070755:	stos   DWORD PTR es:[rdi],eax
   140070756:	cwde   
   140070757:	lods   al,BYTE PTR ds:[rsi]
   140070758:	test   al,0xac
   14007075a:	enter  0xd0ad,0xad
   14007075e:	loopne 0x14007070d
   140070760:	call   0x138b4f812
   140070765:	lods   eax,DWORD PTR ds:[rsi]
   140070766:	and    BYTE PTR [rsi-0x513751d8],ch
   14007076c:	fsubr  DWORD PTR [rsi-0x2fff5008]
   140070772:	add    al,0x0
   140070774:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070775:	add    BYTE PTR [rax],al
   140070777:	add    BYTE PTR [rax],al
   140070779:	movabs al,ds:0xa028a020a018a010
   140070782:	push   rax
   140070783:	movabs al,ds:0xa228a108a0f8a058
   14007078c:	xor    BYTE PTR [rdx-0x5db75dc0],ah
   140070792:	push   rax
   140070793:	movabs ds:0xa328a288a280a258,al
   14007079c:	cmp    BYTE PTR [rbx-0x5b9f5ba8],ah
   1400707a2:	jo     0x140070748
   1400707a4:	js     0x14007074a
   1400707a6:	and    BYTE PTR [rax+rcx*4-0x475b4f5c],0xa4
   1400707ae:	pop    rax
   1400707af:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400707b0:	push   0xffffffff90a688a5
   1400707b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400707b6:	movabs al,ds:0xe0a6b8a6b0a6a8a6
   1400707bf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400707c0:	call   0xd8ae906b
   1400707c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400707c6:	mov    eax,0xd0a8c0a8
   1400707cb:	test   al,0xd8
   1400707cd:	test   al,0xe0
   1400707cf:	test   al,0xe8
   1400707d1:	test   al,0x10
   1400707d3:	test   eax,0xa9b8a918
   1400707d8:	enter  0xe8a9,0xaa
   1400707dc:	lock stos BYTE PTR es:[rdi],al
   1400707de:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400707e4:	sbb    BYTE PTR [rbx-0x54b754c0],ch
   1400707ea:	call   0x158b3009a
   1400707ef:	lods   eax,DWORD PTR ds:[rsi]
   1400707f0:	and    BYTE PTR [rbp-0x52c752d0],ch
   1400707f6:	rex lods eax,DWORD PTR ds:[rsi]
   1400707f8:	lods   rax,QWORD PTR ds:[rsi]
   1400707fa:	jo     0x1400707a9
   1400707fc:	js     0x1400707ab
   1400707fe:	sbb    BYTE PTR [rsi-0x50b751d8],ch
   140070804:	push   rax
   140070805:	scas   eax,DWORD PTR es:[rdi]
   140070806:	(bad)  
   140070807:	scas   eax,DWORD PTR es:[rdi]
   140070808:	push   0x78af70af
   14007080d:	scas   eax,DWORD PTR es:[rdi]
   14007080e:	movabs al,ds:0x4e0000000afa8af
   140070817:	add    BYTE PTR [rax+rax*1-0x5fb80000],cl
   14007081e:	pop    rax
   14007081f:	movabs al,ds:0xa198a190a180a178
   140070828:	movabs al,ds:0x78a1d8a1d0a1a8a1
   140070831:	movabs ds:0xa3c0a3b0a3a8a288,al
   14007083a:	enter  0xd0a3,0xa3
   14007083e:	fsub   DWORD PTR [rbx-0x5bf75c00]
   140070844:	test   al,0xa4
   140070846:	mov    eax,0x48aa40a4
   14007084b:	stos   BYTE PTR es:[rdi],al
   14007084c:	push   rax
   14007084d:	stos   BYTE PTR es:[rdi],al
   14007084e:	pop    rax
   14007084f:	stos   BYTE PTR es:[rdi],al
   140070850:	(bad)  
   140070851:	stos   BYTE PTR es:[rdi],al
   140070852:	push   0x78aa70aa
   140070857:	stos   BYTE PTR es:[rdi],al
   140070858:	sub    BYTE PTR [rdx-0x55575578],0xb0
   14007085f:	stos   BYTE PTR es:[rdi],al
   140070860:	mov    eax,0xf8aaf0aa
   140070865:	stos   BYTE PTR es:[rdi],al
   140070866:	add    BYTE PTR [rbx-0x545754f8],ch
   14007086c:	mov    eax,0xe0acd8ab
   140070871:	lods   al,BYTE PTR ds:[rsi]
   140070872:	call   0x138b3f923
   140070877:	lods   al,BYTE PTR ds:[rsi]
   140070878:	add    BYTE PTR [rbp-0x52df52f8],ch
   14007087e:	sub    BYTE PTR [rbp-0x52c752d0],ch
   140070884:	fsubr  DWORD PTR [rbp-0x50f75218]
   14007088a:	adc    BYTE PTR [rdi-0x50df50e8],ch
   140070890:	sub    BYTE PTR [rdi-0x50c750d0],ch
   140070896:	push   rax
   140070897:	scas   eax,DWORD PTR es:[rdi]
   140070898:	pop    rax
   140070899:	scas   eax,DWORD PTR es:[rdi]
   14007089a:	(bad)  
   14007089b:	scas   eax,DWORD PTR es:[rdi]
   14007089c:	push   0xaf
   1400708a1:	lock add al,0x0
   1400708a4:	push   rsp
   1400708a5:	add    BYTE PTR [rax],al
   1400708a7:	add    BYTE PTR [rax],cl
   1400708a9:	movabs al,ds:0xa148a140a138a018
   1400708b2:	push   rax
   1400708b3:	movabs eax,ds:0xa180a168a160a158
   1400708bc:	mov    BYTE PTR [rcx-0x5e675e70],ah
   1400708c2:	cmp    BYTE PTR [rdx-0x58cf5db8],ah
   1400708c8:	cmp    BYTE PTR [rdi-0x58a758b0],ah
   1400708ce:	(bad)  
   1400708cf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400708d0:	push   0x78a770a7
   1400708d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400708d6:	and    BYTE PTR [rdi-0x585f5878],0xa8
   1400708dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400708de:	mov    al,0xa7
   1400708e0:	mov    eax,0xc8a7c0a7
   1400708e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400708e6:	shl    BYTE PTR [rdi-0x58175820],1
   1400708ec:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400708ee:	mov    al,0xae
   1400708f0:	mov    eax,0xae
   1400708f5:	(bad)  
   1400708f6:	add    eax,0x18400
   1400708fb:	add    BYTE PTR [rax],al
   1400708fd:	movabs al,ds:0xa020a018a010a008
   140070906:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   14007090c:	movabs al,ds:0xa060a058a050a048
   140070916:	push   0x28a070a0
   14007091b:	movabs eax,ds:0xa148a140a138a130
   140070924:	push   rax
   140070925:	movabs eax,ds:0xa170a168a160a158
   14007092e:	js     0x1400708d1
   140070930:	and    BYTE PTR [rcx-0x5e175e78],0xf0
   140070937:	movabs eax,ds:0xa210a208a200a1f8
   140070940:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140070946:	xor    BYTE PTR [rdx-0x5d575dc8],ah
   14007094c:	mov    al,0xa2
   14007094e:	mov    eax,0xc8a2c0a2
   140070953:	movabs ds:0xa2e8a2e0a2d8a2d0,al
   14007095c:	lock movabs ds:0xa370a368a300a2f8,al
   140070966:	js     0x14007090b
   140070968:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14007096f:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   140070978:	shl    BYTE PTR [rbx-0x5bcf5bd8],0x38
   14007097f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070980:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070982:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070984:	push   rax
   140070985:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070986:	pop    rax
   140070987:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070988:	(bad)  
   140070989:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14007098a:	push   0x78a470a4
   14007098f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070990:	and    BYTE PTR [rax+rbp*8-0x75b0f5c],0xa4
   140070998:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14007099e:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   1400709a4:	xor    BYTE PTR [rbp-0x5a575ac8],ah
   1400709aa:	mov    al,0xa5
   1400709ac:	mov    eax,0xc8a5c0a5
   1400709b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400709b2:	shl    BYTE PTR [rbp-0x5a1f5a28],1
   1400709b8:	call   0x138acfa62
   1400709bd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400709be:	add    BYTE PTR [rsi-0x599759f8],ah
   1400709c4:	sub    BYTE PTR [rdi-0x58c758d0],ah
   1400709ca:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400709cc:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400709ce:	push   rax
   1400709cf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400709d0:	pop    rax
   1400709d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400709d2:	(bad)  
   1400709d3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400709d4:	push   0x78a770a7
   1400709d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400709da:	and    BYTE PTR [rdi-0x580f5818],0xf8
   1400709e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400709e2:	add    BYTE PTR [rax-0x575757f8],ch
   1400709e8:	mov    al,0xa8
   1400709ea:	mov    eax,0xc8a8c0a8
   1400709ef:	test   al,0xd0
   1400709f1:	test   al,0xd8
   1400709f3:	test   al,0xe0
   1400709f5:	test   al,0xe8
   1400709f7:	test   al,0xf0
   1400709f9:	test   al,0x68
   1400709fb:	test   eax,0xa978a970
   140070a00:	sub    BYTE PTR [rcx-0x566f5678],0x98
   140070a07:	test   eax,0xa9a8a9a0
   140070a0c:	mov    al,0xa9
   140070a0e:	mov    eax,0xc8a9c0a9
   140070a13:	test   eax,0xa9d8a9d0
   140070a18:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140070a1e:	stos   BYTE PTR es:[rdi],al
   140070a20:	rex.W stos BYTE PTR es:[rdi],al
   140070a22:	push   rax
   140070a23:	stos   BYTE PTR es:[rdi],al
   140070a24:	pop    rax
   140070a25:	stos   BYTE PTR es:[rdi],al
   140070a26:	call   0x138b1fad5
   140070a2b:	stos   BYTE PTR es:[rdi],al
   140070a2c:	test   al,0xab
   140070a2e:	mov    al,0xab
   140070a30:	mov    eax,0x70ac68ab
   140070a35:	lods   al,BYTE PTR ds:[rsi]
   140070a36:	js     0x1400709e4
   140070a38:	sub    BYTE PTR [rbp-0x52c752d0],ch
   140070a3e:	rex lods eax,DWORD PTR ds:[rsi]
   140070a40:	lods   rax,QWORD PTR ds:[rsi]
   140070a42:	push   rax
   140070a43:	lods   eax,DWORD PTR ds:[rsi]
   140070a44:	pop    rax
   140070a45:	lods   eax,DWORD PTR ds:[rsi]
   140070a46:	(bad)  
   140070a47:	lods   eax,DWORD PTR ds:[rsi]
   140070a48:	push   0x78ad70ad
   140070a4d:	lods   eax,DWORD PTR ds:[rsi]
   140070a4e:	sub    BYTE PTR [rbp-0x526f5278],0xe8
   140070a55:	lods   eax,DWORD PTR ds:[rsi]
   140070a56:	lock lods eax,DWORD PTR ds:[rsi]
   140070a58:	clc    
   140070a59:	lods   eax,DWORD PTR ds:[rsi]
   140070a5a:	add    BYTE PTR [rsi-0x514f5158],ch
   140070a60:	mov    eax,0xc8aec0ae
   140070a65:	scas   al,BYTE PTR es:[rdi]
   140070a66:	shr    BYTE PTR [rsi-0x511f5128],1
   140070a6c:	push   0x78af70af
   140070a71:	scas   eax,DWORD PTR es:[rdi]
   140070a72:	sub    BYTE PTR [rdi+0xaf88],0x0
   140070a79:	jo     0x140070a80
   140070a7b:	add    al,cl
   140070a7d:	add    BYTE PTR [rax],al
   140070a7f:	add    BYTE PTR [rax],ch
   140070a81:	movabs al,ds:0xa0f8a0f0a0e8a030
   140070a8a:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   140070a90:	test   al,0xa1
   140070a92:	mov    al,0xa1
   140070a94:	mov    eax,0xc8a1c0a1
   140070a99:	movabs eax,ds:0xa280a278a270a268
   140070aa2:	sub    BYTE PTR [rbx-0x5cc75cd0],ah
   140070aa8:	rex movabs ds:0xa400a3f8a3f0a3e8,eax
   140070ab2:	or     BYTE PTR [rax+rbp*4-0x475b4f5c],ah
   140070ab9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070aba:	shl    BYTE PTR [rax+rcx*8+0x68a4d0a4],0xa5
   140070ac2:	jo     0x140070a69
   140070ac4:	js     0x140070a6b
   140070ac6:	and    BYTE PTR [rbp-0x59d75a78],0x30
   140070acd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070ace:	call   0x138adfb79
   140070ad3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070ad4:	test   al,0xa7
   140070ad6:	mov    al,0xa7
   140070ad8:	push   0x78a870a8
   140070add:	test   al,0x80
   140070adf:	test   al,0x28
   140070ae1:	test   eax,0xa938a930
   140070ae6:	call   0x138b0fb94
   140070aeb:	test   eax,0xaab0aaa8
   140070af0:	mov    eax,0x70ab68aa
   140070af5:	stos   DWORD PTR es:[rdi],eax
   140070af6:	js     0x140070aa3
   140070af8:	sub    BYTE PTR [rax+rsi*1+0x40ac38ac],ch
   140070aff:	lods   al,BYTE PTR ds:[rsi]
   140070b00:	rex.W lods al,BYTE PTR ds:[rsi]
   140070b02:	push   rax
   140070b03:	lods   al,BYTE PTR ds:[rsi]
   140070b04:	pop    rax
   140070b05:	lods   al,BYTE PTR ds:[rsi]
   140070b06:	call   0x138b3fbb7
   140070b0b:	lods   al,BYTE PTR ds:[rsi]
   140070b0c:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140070b12:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140070b18:	xor    BYTE PTR [rbp-0x525752c8],ch
   140070b1e:	mov    al,0xad
   140070b20:	mov    eax,0xc8adc0ad
   140070b25:	lods   eax,DWORD PTR ds:[rsi]
   140070b26:	shr    BYTE PTR [rbp-0x521f5228],1
   140070b2c:	push   0x78ae70ae
   140070b31:	scas   al,BYTE PTR es:[rdi]
   140070b32:	sub    BYTE PTR [rsi-0x516f5178],0x28
   140070b39:	scas   eax,DWORD PTR es:[rdi]
   140070b3a:	xor    BYTE PTR [rdi-0x500f5018],ch
   140070b40:	add    BYTE PTR [rax+0xa40005],al
   140070b46:	add    BYTE PTR [rax],al
   140070b48:	test   al,0xa0
   140070b4a:	mov    al,0xa0
   140070b4c:	push   0x28a170a1
   140070b51:	movabs ds:0xa248a240a238a230,al
   140070b5a:	push   rax
   140070b5b:	movabs ds:0xa300a2f8a2f0a2e8,al
   140070b64:	or     BYTE PTR [rbx-0x5c4f5c58],ah
   140070b6a:	mov    eax,0x68a3c0a3
   140070b6f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070b70:	jo     0x140070b16
   140070b72:	js     0x140070b18
   140070b74:	sub    BYTE PTR [rbp-0x5ac75ad0],ah
   140070b7a:	call   0x138acfc24
   140070b7f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070b80:	add    BYTE PTR [rsi-0x594f5958],ah
   140070b86:	mov    eax,0x70a768a6
   140070b8b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070b8c:	js     0x140070b35
   140070b8e:	sub    BYTE PTR [rax-0x57c757d0],ch
   140070b94:	call   0x138affc41
   140070b99:	test   al,0xa8
   140070b9b:	test   eax,0xa9b8a9b0
   140070ba0:	push   0x78aa70aa
   140070ba5:	stos   BYTE PTR es:[rdi],al
   140070ba6:	sub    BYTE PTR [rbx-0x54c754d0],ch
   140070bac:	call   0x138b2fc5c
   140070bb1:	stos   DWORD PTR es:[rdi],eax
   140070bb2:	test   al,0xac
   140070bb4:	mov    al,0xac
   140070bb6:	mov    eax,0x70ad68ac
   140070bbb:	lods   eax,DWORD PTR ds:[rsi]
   140070bbc:	js     0x140070b6b
   140070bbe:	sub    BYTE PTR [rbp-0x51d75278],0x30
   140070bc5:	scas   al,BYTE PTR es:[rdi]
   140070bc6:	cmp    BYTE PTR [rsi-0x51b751c0],ch
   140070bcc:	push   rax
   140070bcd:	scas   al,BYTE PTR es:[rdi]
   140070bce:	pop    rax
   140070bcf:	scas   al,BYTE PTR es:[rdi]
   140070bd0:	(bad)  
   140070bd1:	scas   al,BYTE PTR es:[rdi]
   140070bd2:	call   0x138b5fc85
   140070bd7:	scas   al,BYTE PTR es:[rdi]
   140070bd8:	add    BYTE PTR [rdi-0x505750f8],ch
   140070bde:	mov    al,0xaf
   140070be0:	mov    eax,0xaf
   140070be5:	nop
   140070be6:	add    eax,0xb400
   140070beb:	add    BYTE PTR [rax-0x60],ch
   140070bee:	jo     0x140070b90
   140070bf0:	js     0x140070b92
   140070bf2:	and    BYTE PTR [rax-0x5ecf5ed8],0x38
   140070bf9:	movabs eax,ds:0xa1f8a1f0a1e8a140
   140070c02:	add    BYTE PTR [rdx-0x5d575df8],ah
   140070c08:	mov    al,0xa2
   140070c0a:	mov    eax,0xc8a2c0a2
   140070c0f:	movabs ds:0xa428a378a370a368,al
   140070c18:	xor    BYTE PTR [rax+rdi*1+0x48a440a4],ah
   140070c1f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070c20:	call   0xe8abfcc9
   140070c25:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070c26:	mov    al,0xa5
   140070c28:	mov    eax,0x68a5c0a5
   140070c2d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070c2e:	jo     0x140070bd6
   140070c30:	js     0x140070bd8
   140070c32:	and    BYTE PTR [rsi-0x58d75978],0x30
   140070c39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070c3a:	cmp    BYTE PTR [rdi-0x581758c0],ah
   140070c40:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070c42:	clc    
   140070c43:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070c44:	add    BYTE PTR [rax-0x574f5758],ch
   140070c4a:	mov    eax,0x68a8c0a8
   140070c4f:	test   eax,0xa978a970
   140070c54:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140070c5a:	stos   BYTE PTR es:[rdi],al
   140070c5c:	call   0x138b1fd0b
   140070c61:	stos   BYTE PTR es:[rdi],al
   140070c62:	add    BYTE PTR [rbx-0x545754f8],ch
   140070c68:	mov    al,0xab
   140070c6a:	mov    eax,0x70ac68ab
   140070c6f:	lods   al,BYTE PTR ds:[rsi]
   140070c70:	js     0x140070c1e
   140070c72:	sub    BYTE PTR [rax+rbp*1+0x38ad30ad],0xad
   140070c7a:	rex lods eax,DWORD PTR ds:[rsi]
   140070c7c:	call   0x138b4fd2e
   140070c81:	lods   eax,DWORD PTR ds:[rsi]
   140070c82:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140070c88:	test   al,0xae
   140070c8a:	mov    al,0xae
   140070c8c:	mov    eax,0xc8aec0ae
   140070c91:	scas   al,BYTE PTR es:[rdi]
   140070c92:	push   0x78af70af
   140070c97:	scas   eax,DWORD PTR es:[rdi]
   140070c98:	add    BYTE PTR [rax+0xa40005],ah
   140070c9e:	add    BYTE PTR [rax],al
   140070ca0:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140070ca6:	call   0x138a7fd4b
   140070cab:	movabs al,ds:0xa268a1b8a1b0a1a8
   140070cb4:	jo     0x140070c58
   140070cb6:	js     0x140070c5a
   140070cb8:	sub    BYTE PTR [rbx-0x5cc75cd0],ah
   140070cbe:	call   0x138aafd66
   140070cc3:	movabs ds:0xa4c0a4b8a4b0a4a8,eax
   140070ccc:	enter  0xd0a4,0xa4
   140070cd0:	push   0x78a570a5
   140070cd5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070cd6:	sub    BYTE PTR [rsi-0x59c759d0],ah
   140070cdc:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070cde:	call   0x138adfd89
   140070ce3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070ce4:	add    BYTE PTR [rdi-0x584f5858],ah
   140070cea:	mov    eax,0x68a7c0a7
   140070cef:	test   al,0x70
   140070cf1:	test   al,0x78
   140070cf3:	test   al,0x80
   140070cf5:	test   al,0x88
   140070cf7:	test   al,0x28
   140070cf9:	test   eax,0xa938a930
   140070cfe:	call   0x138b0fdac
   140070d03:	test   eax,0xaaa8aa00
   140070d08:	mov    al,0xaa
   140070d0a:	mov    eax,0x68aac0aa
   140070d0f:	stos   DWORD PTR es:[rdi],eax
   140070d10:	jo     0x140070cbd
   140070d12:	js     0x140070cbf
   140070d14:	sub    BYTE PTR [rax+rsi*1+0x40ac38ac],ch
   140070d1b:	lods   al,BYTE PTR ds:[rsi]
   140070d1c:	call   0x138b3fdcd
   140070d21:	lods   al,BYTE PTR ds:[rsi]
   140070d22:	add    BYTE PTR [rbp-0x524f5258],ch
   140070d28:	mov    eax,0xc8adc0ad
   140070d2d:	lods   eax,DWORD PTR ds:[rsi]
   140070d2e:	push   0x28ae70ae
   140070d33:	scas   eax,DWORD PTR es:[rdi]
   140070d34:	xor    BYTE PTR [rdi-0x500f5018],ch
   140070d3a:	clc    
   140070d3b:	scas   eax,DWORD PTR es:[rdi]
   140070d3c:	add    BYTE PTR [rax+0xc00005],dh
   140070d42:	add    BYTE PTR [rax],al
   140070d44:	test   al,0xa0
   140070d46:	mov    al,0xa0
   140070d48:	push   0x28a170a1
   140070d4d:	movabs ds:0xa300a2f8a2f0a2e8,al
   140070d56:	or     BYTE PTR [rbx-0x5ce75cf0],ah
   140070d5c:	and    BYTE PTR [rbx-0x5ccf5cd8],ah
   140070d62:	test   al,0xa3
   140070d64:	mov    al,0xa3
   140070d66:	mov    eax,0xc8a3c0a3
   140070d6b:	movabs ds:0xa478a470a468a3d0,eax
   140070d74:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140070d7c:	sub    BYTE PTR [rbp-0x5ac75ad0],ah
   140070d82:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070d84:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140070d86:	push   rax
   140070d87:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070d88:	pop    rax
   140070d89:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070d8a:	(bad)  
   140070d8b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070d8c:	push   0x78a570a5
   140070d91:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070d92:	and    BYTE PTR [rbp-0x5a175a78],0xf0
   140070d99:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070d9a:	clc    
   140070d9b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070d9c:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140070da2:	sbb    BYTE PTR [rsi-0x594f5958],ah
   140070da8:	mov    eax,0xc8a6c0a6
   140070dad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070dae:	shl    BYTE PTR [rsi-0x588f5898],1
   140070db4:	js     0x140070d5d
   140070db6:	and    BYTE PTR [rdi-0x57d75878],0x30
   140070dbd:	test   al,0x38
   140070dbf:	test   al,0x40
   140070dc1:	test   al,0xe8
   140070dc3:	test   al,0xf0
   140070dc5:	test   al,0xa8
   140070dc7:	test   eax,0xab28aa68
   140070dcc:	call   0x138b2fe7c
   140070dd1:	stos   DWORD PTR es:[rdi],eax
   140070dd2:	add    BYTE PTR [rax+rbp*4-0x47534f54],ch
   140070dd9:	lods   al,BYTE PTR ds:[rsi]
   140070dda:	shr    BYTE PTR [rax+rbp*2+0x78ad70ad],0xad
   140070de2:	sub    BYTE PTR [rbp-0x526f5278],0x28
   140070de9:	scas   al,BYTE PTR es:[rdi]
   140070dea:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   140070df0:	rex.W scas al,BYTE PTR es:[rdi]
   140070df2:	call   0xe8b5fea5
   140070df7:	scas   eax,DWORD PTR es:[rdi]
   140070df8:	mov    al,0xaf
   140070dfa:	mov    eax,0x5c000af
   140070dff:	add    BYTE PTR [rax+0x68000000],ch
   140070e05:	movabs al,ds:0xa1f0a1e8a130a128
   140070e0e:	test   al,0xa2
   140070e10:	mov    al,0xa2
   140070e12:	push   0x28a370a3
   140070e17:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070e18:	xor    BYTE PTR [rax+rbp*8-0x575b0f5c],ah
   140070e1f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070e20:	mov    al,0xa5
   140070e22:	mov    eax,0x28a668a5
   140070e27:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070e28:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140070e2e:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140070e30:	push   rax
   140070e31:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070e32:	pop    rax
   140070e33:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070e34:	(bad)  
   140070e35:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070e36:	push   0x78a770a7
   140070e3b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070e3c:	and    BYTE PTR [rdi-0x586f5878],0x98
   140070e43:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070e44:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140070e4d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070e4e:	call   0x138aefefa
   140070e53:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070e54:	add    BYTE PTR [rax-0x57ef57f8],ch
   140070e5a:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140070e60:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140070e66:	rex.W test al,0x50
   140070e69:	test   al,0x58
   140070e6b:	test   al,0x60
   140070e6d:	test   al,0xa8
   140070e6f:	test   al,0x68
   140070e71:	test   eax,0xa978a970
   140070e76:	sub    BYTE PTR [rdx-0x550f5518],ch
   140070e7c:	clc    
   140070e7d:	stos   BYTE PTR es:[rdi],al
   140070e7e:	add    BYTE PTR [rbx-0x545754f8],ch
   140070e84:	mov    al,0xab
   140070e86:	mov    eax,0x68abc0ab
   140070e8b:	lods   al,BYTE PTR ds:[rsi]
   140070e8c:	jo     0x140070e3a
   140070e8e:	js     0x140070e3c
   140070e90:	sub    BYTE PTR [rax+rbp*1-0x1752cf53],0xad
   140070e98:	lock lods eax,DWORD PTR ds:[rsi]
   140070e9a:	test   al,0xae
   140070e9c:	mov    al,0xae
   140070e9e:	push   0xaf70af
   140070ea3:	add    BYTE PTR [rax],al
   140070ea5:	rol    BYTE PTR [rip+0xa000],1        # 0x14007aeab
   140070eab:	add    BYTE PTR [rax],ch
   140070ead:	movabs al,ds:0xa048a040a038a030
   140070eb6:	push   rax
   140070eb7:	movabs al,ds:0xa100a0f8a0f0a0e8
   140070ec0:	test   al,0xa1
   140070ec2:	mov    al,0xa1
   140070ec4:	push   0x28a270a2
   140070ec9:	movabs ds:0xa3f0a3e8a338a330,eax
   140070ed2:	clc    
   140070ed3:	movabs ds:0xa4b0a4a8a408a400,eax
   140070edc:	push   0x78a570a5
   140070ee1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070ee2:	and    BYTE PTR [rbp-0x5a6f5a78],0x28
   140070ee9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070eea:	xor    BYTE PTR [rsi-0x590f5918],ah
   140070ef0:	test   al,0xa7
   140070ef2:	mov    al,0xa7
   140070ef4:	mov    eax,0xc8a7c0a7
   140070ef9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140070efa:	shl    BYTE PTR [rdi-0x581f5828],1
   140070f00:	push   0x28a870a8
   140070f05:	test   eax,0xa9e8a930
   140070f0a:	lock test eax,0xaab0aaa8
   140070f10:	push   0x28ab70ab
   140070f15:	lods   al,BYTE PTR ds:[rsi]
   140070f16:	xor    BYTE PTR [rax+rbp*8-0x57530f54],ch
   140070f1d:	lods   eax,DWORD PTR ds:[rsi]
   140070f1e:	mov    al,0xad
   140070f20:	push   0x78ae70ae
   140070f25:	scas   al,BYTE PTR es:[rdi]
   140070f26:	sub    BYTE PTR [rsi-0x516f5178],0x98
   140070f2d:	scas   al,BYTE PTR es:[rdi]
   140070f2e:	movabs al,ds:0x30af28aeb0aea8ae
   140070f37:	scas   eax,DWORD PTR es:[rdi]
   140070f38:	cmp    BYTE PTR [rdi-0x50b750c0],ch
   140070f3e:	call   0x140b6fff2
   140070f43:	add    BYTE PTR [rax],al
   140070f45:	loopne 0x140070f4c
   140070f47:	add    BYTE PTR [rax],cl
   140070f49:	add    DWORD PTR [rax],eax
   140070f4b:	add    BYTE PTR [rax-0x475f4f60],ch
   140070f51:	movabs al,ds:0xa168a0d0a0c8a0c0
   140070f5a:	jo     0x140070efd
   140070f5c:	js     0x140070eff
   140070f5e:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   140070f65:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   140070f6e:	shl    BYTE PTR [rcx-0x5dcf5dd8],0x38
   140070f75:	movabs ds:0xa2f8a2f0a2e8a240,al
   140070f7e:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   140070f84:	test   al,0xa3
   140070f86:	mov    al,0xa3
   140070f88:	mov    eax,0x68a3c0a3
   140070f8d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140070f8e:	jo     0x140070f34
   140070f90:	js     0x140070f36
   140070f92:	and    BYTE PTR [rax+rbp*1+0x38a530a5],0xa5
   140070f9a:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070f9c:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140070f9e:	push   rax
   140070f9f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070fa0:	pop    rax
   140070fa1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070fa2:	(bad)  
   140070fa3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070fa4:	call   0x138ad004e
   140070fa9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140070faa:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140070fb0:	sbb    BYTE PTR [rsi-0x595759e0],ah
   140070fb6:	mov    al,0xa6
   140070fb8:	mov    eax,0xc8a6c0a6
   140070fbd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140070fbe:	shl    BYTE PTR [rsi-0x588f5898],1
   140070fc4:	js     0x140070f6d
   140070fc6:	and    BYTE PTR [rdi-0x57cf57d8],0x38
   140070fcd:	test   al,0x40
   140070fcf:	test   al,0x48
   140070fd1:	test   al,0x50
   140070fd3:	test   al,0x58
   140070fd5:	test   al,0xe8
   140070fd7:	test   al,0xf0
   140070fd9:	test   al,0xf8
   140070fdb:	test   al,0x0
   140070fdd:	test   eax,0xa910a908
   140070fe2:	sbb    BYTE PTR [rcx-0x564f5658],ch
   140070fe8:	mov    eax,0xc8a9c0a9
   140070fed:	test   eax,0xaa70aa68
   140070ff2:	js     0x140070f9e
   140070ff4:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140070ffb:	stos   BYTE PTR es:[rdi],al
   140070ffc:	sub    BYTE PTR [rbx-0x54c754d0],ch
   140071002:	rex stos DWORD PTR es:[rdi],eax
   140071004:	stos   QWORD PTR es:[rdi],rax
   140071006:	push   rax
   140071007:	stos   DWORD PTR es:[rdi],eax
   140071008:	call   0x138b300b8
   14007100d:	stos   DWORD PTR es:[rdi],eax
   14007100e:	add    BYTE PTR [rax+rbp*4-0x47534f54],ch
   140071015:	lods   al,BYTE PTR ds:[rsi]
   140071016:	shr    BYTE PTR [rax+rcx*8+0x68acd0ac],0xad
   14007101e:	jo     0x140070fcd
   140071020:	js     0x140070fcf
   140071022:	sub    BYTE PTR [rbp-0x51d75278],0x30
   140071029:	scas   al,BYTE PTR es:[rdi]
   14007102a:	cmp    BYTE PTR [rsi-0x51b751c0],ch
   140071030:	push   rax
   140071031:	scas   al,BYTE PTR es:[rdi]
   140071032:	pop    rax
   140071033:	scas   al,BYTE PTR es:[rdi]
   140071034:	call   0x138b600e7
   140071039:	scas   al,BYTE PTR es:[rdi]
   14007103a:	add    BYTE PTR [rdi-0x50ef50f8],ch
   140071040:	test   al,0xaf
   140071042:	mov    al,0xaf
   140071044:	mov    eax,0xc8afc0af
   140071049:	scas   eax,DWORD PTR es:[rdi]
   14007104a:	add    BYTE PTR [rax],al
   14007104c:	add    al,dh
   14007104e:	add    eax,0xc800
   140071053:	add    BYTE PTR [rax-0x60],ch
   140071056:	jo     0x140070ff8
   140071058:	js     0x140070ffa
   14007105a:	and    BYTE PTR [rax-0x5f6f5f78],0x28
   140071061:	movabs eax,ds:0xa148a140a138a130
   14007106a:	call   0x138a90110
   14007106f:	movabs eax,ds:0xa2b0a2a8a208a200
   140071078:	mov    eax,0xc8a2c0a2
   14007107d:	movabs ds:0xa378a370a368a2d0,al
   140071086:	and    BYTE PTR [rbx-0x5bd75c78],0x30
   14007108d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14007108e:	cmp    BYTE PTR [rax+rax*2-0xf5b175c],ah
   140071095:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140071096:	clc    
   140071097:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140071098:	add    BYTE PTR [rbp-0x5a575af8],ah
   14007109e:	mov    al,0xa5
   1400710a0:	mov    eax,0xc8a5c0a5
   1400710a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400710a6:	shl    BYTE PTR [rbp-0x598f5998],1
   1400710ac:	js     0x140071054
   1400710ae:	and    BYTE PTR [rsi-0x596f5978],0x28
   1400710b5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400710b6:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   1400710bc:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400710be:	push   rax
   1400710bf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400710c0:	call   0x138af016c
   1400710c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400710c6:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400710cc:	sbb    BYTE PTR [rax-0x574f5758],ch
   1400710d2:	mov    eax,0x68a8c0a8
   1400710d7:	test   eax,0xa978a970
   1400710dc:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400710e2:	call   0x138b20191
   1400710e7:	stos   BYTE PTR es:[rdi],al
   1400710e8:	add    BYTE PTR [rbx-0x544f5458],ch
   1400710ee:	mov    eax,0x68abc0ab
   1400710f3:	lods   al,BYTE PTR ds:[rsi]
   1400710f4:	jo     0x1400710a2
   1400710f6:	js     0x1400710a4
   1400710f8:	sub    BYTE PTR [rax+rcx*4+0x30ad28ac],0xad
   140071100:	cmp    BYTE PTR [rbp-0x52b752c0],ch
   140071106:	call   0xe8b501b8
   14007110b:	scas   al,BYTE PTR es:[rdi]
   14007110c:	mov    al,0xae
   14007110e:	push   0xaf70af
   140071113:	add    BYTE PTR [rax],al
   140071115:	add    BYTE PTR [rsi],al
   140071117:	add    BYTE PTR [rax+0x0],bh
   14007111a:	add    BYTE PTR [rax],al
   14007111c:	sub    BYTE PTR [rax-0x5f175fd0],ah
   140071122:	lock movabs al,ds:0xa270a268a1b0a1a8
   14007112c:	sub    BYTE PTR [rbx-0x5c175cd0],ah
   140071132:	lock movabs ds:0xa570a568a4b0a4a8,eax
   14007113c:	sub    BYTE PTR [rsi-0x591759d0],ah
   140071142:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140071144:	test   al,0xa7
   140071146:	mov    al,0xa7
   140071148:	push   0x28a870a8
   14007114d:	test   eax,0xa9e8a930
   140071152:	lock test eax,0xaab0aaa8
   140071158:	push   0x28ab70ab
   14007115d:	lods   al,BYTE PTR ds:[rsi]
   14007115e:	xor    BYTE PTR [rax+rbp*8-0x7530f54],ch
   140071165:	lods   al,BYTE PTR ds:[rsi]
   140071166:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14007116c:	test   al,0xad
   14007116e:	mov    al,0xad
   140071170:	push   0x78ae70ae
   140071175:	scas   al,BYTE PTR es:[rdi]
   140071176:	sub    BYTE PTR [rsi-0x50d75178],0x30
   14007117d:	scas   eax,DWORD PTR es:[rdi]
   14007117e:	cmp    BYTE PTR [rdi-0x50b750c0],ch
   140071184:	call   0x138b70238
   140071189:	scas   eax,DWORD PTR es:[rdi]
   14007118a:	add    BYTE PTR [rax],al
   14007118c:	add    BYTE PTR [rax],dl
   14007118e:	(bad)  
   14007118f:	add    ah,dh
   140071191:	add    BYTE PTR [rax],al
   140071193:	add    BYTE PTR [rax-0x475f4f60],ch
   140071199:	movabs al,ds:0xa0d8a0d0a0c8a0c0
   1400711a2:	push   0x78a170a1
   1400711a7:	movabs eax,ds:0xa238a230a228a180
   1400711b0:	movabs ds:0xa2e8a258a250a248,al
   1400711ba:	lock movabs ds:0xa310a308a300a2f8,al
   1400711c4:	sbb    BYTE PTR [rbx-0x5c4f5c58],ah
   1400711ca:	mov    eax,0xc8a3c0a3
   1400711cf:	movabs ds:0xa468a3e0a3d8a3d0,eax
   1400711d8:	jo     0x14007117e
   1400711da:	js     0x140071180
   1400711dc:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   1400711e4:	movabs al,ds:0x40a538a530a528a4
   1400711ed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400711ee:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400711f0:	push   rax
   1400711f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400711f2:	pop    rax
   1400711f3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400711f4:	call   0x138ad029e
   1400711f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400711fa:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140071200:	sbb    BYTE PTR [rsi-0x594f5958],ah
   140071206:	mov    eax,0xc8a6c0a6
   14007120b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14007120c:	shl    BYTE PTR [rsi-0x58975928],1
   140071212:	jo     0x1400711bb
   140071214:	js     0x1400711bd
   140071216:	and    BYTE PTR [rdi-0x586f5878],0x98
   14007121d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14007121e:	sub    BYTE PTR [rax-0x57c757d0],ch
   140071224:	test   al,0x48
   140071227:	test   al,0x50
   140071229:	test   al,0x58
   14007122b:	test   al,0xe8
   14007122d:	test   al,0xf0
   14007122f:	test   al,0xf8
   140071231:	test   al,0x0
   140071233:	test   eax,0xa910a908
   140071238:	sbb    BYTE PTR [rcx-0x564f5658],ch
   14007123e:	mov    eax,0xc8a9c0a9
   140071243:	test   eax,0xaa70aa68
   140071248:	js     0x1400711f4
   14007124a:	sub    BYTE PTR [rdx-0x54cf54d8],0x38
   140071251:	stos   DWORD PTR es:[rdi],eax
   140071252:	rex stos DWORD PTR es:[rdi],eax
   140071254:	stos   QWORD PTR es:[rdi],rax
   140071256:	call   0x138b30306
   14007125b:	stos   DWORD PTR es:[rdi],eax
   14007125c:	add    BYTE PTR [rax+rcx*1-0x4f535754],ch
   140071263:	lods   al,BYTE PTR ds:[rsi]
   140071264:	mov    eax,0x68acc0ac
   140071269:	lods   eax,DWORD PTR ds:[rsi]
   14007126a:	sub    BYTE PTR [rsi-0x511751d0],ch
   140071270:	lock scas al,BYTE PTR es:[rdi]
   140071272:	test   al,0xaf
   140071274:	mov    al,0xaf
   140071276:	mov    eax,0xc8afc0af
   14007127b:	scas   eax,DWORD PTR es:[rdi]
   14007127c:	shr    BYTE PTR [rdi+0x20000000],1
   140071282:	(bad)  
   140071283:	add    BYTE PTR [rax+0x68000000],dh
   140071289:	movabs al,ds:0xa088a080a078a070
   140071292:	nop
   140071293:	movabs al,ds:0xa138a130a128a098
   14007129c:	rex movabs eax,ds:0xa1f0a1e8a150a148
   1400712a6:	clc    
   1400712a7:	movabs eax,ds:0xa2a8a210a208a200
   1400712b0:	mov    al,0xa2
   1400712b2:	mov    eax,0xc8a2c0a2
   1400712b7:	movabs ds:0xa378a370a368a2d0,al
   1400712c0:	and    BYTE PTR [rbx-0x5c6f5c78],0x28
   1400712c7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400712c8:	xor    BYTE PTR [rax+rdi*1+0x48a440a4],ah
   1400712cf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400712d0:	push   rax
   1400712d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400712d2:	call   0x138ac037b
   1400712d7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400712d8:	add    BYTE PTR [rbp-0x5aef5af8],ah
   1400712de:	test   al,0xa5
   1400712e0:	mov    al,0xa5
   1400712e2:	mov    eax,0xc8a5c0a5
   1400712e7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400712e8:	shl    BYTE PTR [rbp-0x598f5998],1
   1400712ee:	js     0x140071296
   1400712f0:	sub    BYTE PTR [rdi-0x58c758d0],ah
   1400712f6:	call   0xf0afbba2
   1400712fb:	test   al,0xb8
   1400712fd:	test   al,0xc0
   1400712ff:	test   al,0xc8
   140071301:	test   al,0x68
   140071303:	test   eax,0xa978a970
   140071308:	sub    BYTE PTR [rcx-0x55d75678],0x30
   14007130f:	stos   BYTE PTR es:[rdi],al
   140071310:	cmp    BYTE PTR [rdx-0x55b755c0],ch
   140071316:	call   0xe8b203c5
   14007131b:	stos   DWORD PTR es:[rdi],eax
   14007131c:	push   0x28ac70ac
   140071321:	lods   eax,DWORD PTR ds:[rsi]
   140071322:	xor    BYTE PTR [rbp-0x520f5218],ch
   140071328:	test   al,0xae
   14007132a:	mov    al,0xae
   14007132c:	push   0xaf70af
   140071331:	xor    BYTE PTR [rsi],al
   140071333:	add    BYTE PTR [rax+0x0],bh
   140071336:	add    BYTE PTR [rax],al
   140071338:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   14007133e:	movabs al,ds:0xa100a0f8a0f0a0e8
   140071348:	or     BYTE PTR [rcx-0x5e4f5e58],ah
   14007134e:	push   0x28a270a2
   140071353:	movabs ds:0xa4a8a3f0a3e8a330,eax
   14007135c:	mov    al,0xa4
   14007135e:	mov    eax,0xc8a4c0a4
   140071363:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140071364:	shl    BYTE PTR [rax+rbp*2+0x28a570a5],1
   14007136b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14007136c:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   140071372:	call   0xe8ae041d
   140071377:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140071378:	mov    al,0xa7
   14007137a:	push   0x28a870a8
   14007137f:	test   eax,0xa9e8a930
   140071384:	lock test eax,0xaab0aaa8
   14007138a:	push   0x28ab70ab
   14007138f:	lods   al,BYTE PTR ds:[rsi]
   140071390:	xor    BYTE PTR [rax+rbp*8-0x57530f54],ch
   140071397:	lods   eax,DWORD PTR ds:[rsi]
   140071398:	mov    al,0xad
   14007139a:	push   0x28ae70ae
   14007139f:	scas   eax,DWORD PTR es:[rdi]
   1400713a0:	xor    BYTE PTR [rdi-0x500f5018],ch
   1400713a6:	add    BYTE PTR [rax],al
   1400713a8:	add    BYTE PTR [rax+0x6],al
   1400713ab:	add    BYTE PTR [rax+0x0],dl
   1400713ae:	add    BYTE PTR [rax],al
   1400713b0:	test   al,0xa0
   1400713b2:	mov    al,0xa0
   1400713b4:	push   0x78a170a1
   1400713b9:	movabs eax,ds:0xa2f0a2e8a228a180
   1400713c2:	test   al,0xa3
   1400713c4:	push   0xffffffffe8a528a4
   1400713c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400713ca:	test   al,0xa6
   1400713cc:	push   0xffffffffe8a828a7
   1400713d1:	test   al,0xa8
   1400713d3:	test   eax,0xab28aa68
   1400713d8:	call   0x1a8b3bc88
   1400713dd:	lods   eax,DWORD PTR ds:[rsi]
   1400713de:	jo     0x14007138d
   1400713e0:	js     0x14007138f
   1400713e2:	sub    BYTE PTR [rbp-0x51cf51d8],0x38
   1400713e9:	scas   al,BYTE PTR es:[rdi]
   1400713ea:	call   0x138b6049d
   1400713ef:	scas   al,BYTE PTR es:[rdi]
   1400713f0:	test   al,0xaf
   1400713f2:	mov    al,0xaf
   1400713f4:	mov    eax,0xaf
   1400713f9:	push   rax
   1400713fa:	(bad)  
   1400713fb:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400713ff:	add    BYTE PTR [rax-0x60],ch
   140071402:	jo     0x1400713a4
   140071404:	sub    BYTE PTR [rcx-0x5ec75ed0],ah
   14007140a:	call   0x138a904b0
   14007140f:	movabs eax,ds:0xa368a2b8a2b0a2a8
   140071418:	jo     0x1400713bd
   14007141a:	js     0x1400713bf
   14007141c:	sub    BYTE PTR [rax+rsi*1-0x1f5bc75c],ah
   140071423:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140071424:	nop
   140071425:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140071426:	movabs al,ds:0xe8ace0a660a5e0a5
   14007142f:	lods   al,BYTE PTR ds:[rsi]
   140071430:	lock lods al,BYTE PTR ds:[rsi]
   140071432:	clc    
   140071433:	lods   al,BYTE PTR ds:[rsi]
   140071434:	add    BYTE PTR [rbp-0x529f52f8],ch
   14007143a:	shr    BYTE PTR [rbp-0x52175228],1
   140071440:	add    BYTE PTR [rsi+0x6000ae40],ch
   140071446:	(bad)  
   140071447:	add    BYTE PTR [rax+rax*1+0x0],bl
   14007144b:	add    al,bl
   14007144d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14007144e:	loopne 0x1400713f4
   140071450:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140071452:	(bad)  
   140071453:	stos   BYTE PTR es:[rdi],al
   140071454:	push   0x78aa70aa
   140071459:	stos   BYTE PTR es:[rdi],al
   14007145a:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140071461:	stos   BYTE PTR es:[rdi],al
   140071462:	movabs al,ds:0x78ab70aab8aaa8aa
   14007146b:	stos   DWORD PTR es:[rdi],eax
   14007146c:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   140071472:	rex.W scas al,BYTE PTR es:[rdi]
   140071474:	pop    rax
   140071475:	scas   al,BYTE PTR es:[rdi]
   140071476:	push   0xffffffff88ae78ae
   14007147b:	scas   al,BYTE PTR es:[rdi]
   14007147c:	cwde   
   14007147d:	scas   al,BYTE PTR es:[rdi]
   14007147e:	test   al,0xae
   140071480:	mov    eax,0xd8aec8ae
   140071485:	scas   al,BYTE PTR es:[rdi]
   140071486:	call   0x148b60d39
   14007148b:	scas   eax,DWORD PTR es:[rdi]
   14007148c:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   140071492:	scas   rax,QWORD PTR es:[rdi]
   140071494:	pop    rax
   140071495:	scas   eax,DWORD PTR es:[rdi]
   140071496:	push   0xffffffff88af78af
   14007149b:	scas   eax,DWORD PTR es:[rdi]
   14007149c:	nop
   14007149d:	scas   eax,DWORD PTR es:[rdi]
   14007149e:	cwde   
   14007149f:	scas   eax,DWORD PTR es:[rdi]
   1400714a0:	add    BYTE PTR [rax+0x6],dh
   1400714a3:	add    ah,bh
   1400714a5:	add    BYTE PTR [rax],al
   1400714a7:	add    al,ah
   1400714a9:	movabs ds:0xa5a8a588a568a4e0,eax
   1400714b2:	enter  0xe8a5,0xa5
   1400714b6:	sub    BYTE PTR [rsi-0x59b759c0],ah
   1400714bc:	push   rax
   1400714bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400714be:	pop    rax
   1400714bf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400714c0:	(bad)  
   1400714c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400714c2:	jo     0x14007146a
   1400714c4:	js     0x14007146c
   1400714c6:	nop
   1400714c7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400714c8:	cwde   
   1400714c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400714ca:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   1400714d3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400714d4:	enter  0xd0a6,0xa6
   1400714d8:	fsub   DWORD PTR [rsi-0x580f5920]
   1400714de:	clc    
   1400714df:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400714e0:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400714e6:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400714ec:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400714f2:	rex.W test al,0x50
   1400714f5:	test   al,0x58
   1400714f7:	test   al,0x60
   1400714f9:	test   al,0x68
   1400714fb:	test   al,0x70
   1400714fd:	test   al,0x78
   1400714ff:	test   al,0x80
   140071501:	test   al,0x88
   140071503:	test   al,0x90
   140071505:	test   al,0x98
   140071507:	test   al,0xa0
   140071509:	test   al,0xa8
   14007150b:	test   al,0xb0
   14007150d:	test   al,0xb8
   14007150f:	test   al,0xc0
   140071511:	test   al,0xc8
   140071513:	test   al,0xd0
   140071515:	test   al,0xd8
   140071517:	test   al,0xe0
   140071519:	test   al,0xe8
   14007151b:	test   al,0xf0
   14007151d:	test   al,0xf8
   14007151f:	test   al,0x0
   140071521:	test   eax,0xa910a908
   140071526:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14007152c:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140071532:	test   rax,0xffffffffa958a950
   140071538:	(bad)  
   140071539:	test   eax,0xa9f0a968
   14007153e:	clc    
   14007153f:	test   eax,0xaa08aa00
   140071544:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14007154a:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140071550:	stos   BYTE PTR es:[rdi],al
   140071552:	rex.W stos BYTE PTR es:[rdi],al
   140071554:	push   rax
   140071555:	stos   BYTE PTR es:[rdi],al
   140071556:	pop    rax
   140071557:	stos   BYTE PTR es:[rdi],al
   140071558:	(bad)  
   140071559:	stos   BYTE PTR es:[rdi],al
   14007155a:	push   0x78aa70aa
   14007155f:	stos   BYTE PTR es:[rdi],al
   140071560:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140071567:	stos   BYTE PTR es:[rdi],al
   140071568:	movabs al,ds:0xc0aab8aab0aaa8aa
   140071571:	stos   BYTE PTR es:[rdi],al
   140071572:	enter  0xd0aa,0xaa
   140071576:	fsubr  DWORD PTR [rdx-0x55175520]
   14007157c:	lock stos BYTE PTR es:[rdi],al
   14007157e:	clc    
   14007157f:	stos   BYTE PTR es:[rdi],al
   140071580:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140071586:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14007158c:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   140071592:	stos   QWORD PTR es:[rdi],rax
   140071594:	push   rax
   140071595:	stos   DWORD PTR es:[rdi],eax
   140071596:	push   0xae90ab
	...
