
59cd1d0af53ea03abee50526e77074de7dab2ec4e3bae4293c0bfcd89b1898a9.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	rex push rsi
   140001002:	sub    rsp,0x20
   140001006:	mov    rax,QWORD PTR [rcx]
   140001009:	mov    rsi,rcx
   14000100c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001010:	mov    rax,QWORD PTR [rdx]
   140001013:	cmp    ecx,DWORD PTR [rax+0x4]
   140001016:	jne    0x14000105e
   140001018:	mov    QWORD PTR [rsp+0x30],rbx
   14000101d:	mov    QWORD PTR [rsp+0x38],rdi
   140001022:	mov    rdi,rcx
   140001025:	mov    rcx,rdx
   140001028:	call   QWORD PTR [rip+0x1e5ca]        # 0x14001f5f8
   14000102e:	mov    rcx,rsi
   140001031:	mov    rbx,rax
   140001034:	call   QWORD PTR [rip+0x1e5be]        # 0x14001f5f8
   14000103a:	mov    r8,rdi
   14000103d:	mov    rcx,rax
   140001040:	mov    rdx,rbx
   140001043:	call   0x14001e102
   140001048:	mov    rdi,QWORD PTR [rsp+0x38]
   14000104d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001052:	test   eax,eax
   140001054:	jne    0x14000105e
   140001056:	mov    al,0x1
   140001058:	add    rsp,0x20
   14000105c:	pop    rsi
   14000105d:	ret    
   14000105e:	xor    al,al
   140001060:	add    rsp,0x20
   140001064:	pop    rsi
   140001065:	ret    
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	rex push rbx
   140001072:	sub    rsp,0x20
   140001076:	mov    rbx,rcx
   140001079:	call   QWORD PTR [rip+0x1e541]        # 0x14001f5c0
   14000107f:	lea    rcx,[rbx+0x8]
   140001083:	call   QWORD PTR [rip+0x1e537]        # 0x14001f5c0
   140001089:	lea    rcx,[rbx+0x10]
   14000108d:	call   QWORD PTR [rip+0x1e52d]        # 0x14001f5c0
   140001093:	lea    rcx,[rbx+0x18]
   140001097:	call   QWORD PTR [rip+0x1e523]        # 0x14001f5c0
   14000109d:	lea    rcx,[rbx+0x20]
   1400010a1:	call   QWORD PTR [rip+0x1e519]        # 0x14001f5c0
   1400010a7:	lea    rcx,[rbx+0x28]
   1400010ab:	call   QWORD PTR [rip+0x1e50f]        # 0x14001f5c0
   1400010b1:	lea    rcx,[rbx+0x30]
   1400010b5:	call   QWORD PTR [rip+0x1e505]        # 0x14001f5c0
   1400010bb:	lea    rcx,[rbx+0x38]
   1400010bf:	call   QWORD PTR [rip+0x1e4fb]        # 0x14001f5c0
   1400010c5:	lea    rcx,[rbx+0x40]
   1400010c9:	call   QWORD PTR [rip+0x1e4f1]        # 0x14001f5c0
   1400010cf:	lea    rcx,[rbx+0x48]
   1400010d3:	call   QWORD PTR [rip+0x1e4e7]        # 0x14001f5c0
   1400010d9:	lea    rcx,[rbx+0x50]
   1400010dd:	call   QWORD PTR [rip+0x1e4dd]        # 0x14001f5c0
   1400010e3:	lea    rcx,[rbx+0x58]
   1400010e7:	call   QWORD PTR [rip+0x1e4d3]        # 0x14001f5c0
   1400010ed:	lea    rcx,[rbx+0x60]
   1400010f1:	call   QWORD PTR [rip+0x1e4c9]        # 0x14001f5c0
   1400010f7:	xor    eax,eax
   1400010f9:	mov    DWORD PTR [rbx+0x68],0xffffffff
   140001100:	mov    DWORD PTR [rbx+0x70],eax
   140001103:	mov    DWORD PTR [rbx+0x74],eax
   140001106:	mov    BYTE PTR [rbx+0x6c],0x0
   14000110a:	mov    rax,rbx
   14000110d:	mov    BYTE PTR [rbx+0x6d],0x0
   140001111:	add    rsp,0x20
   140001115:	pop    rbx
   140001116:	ret    
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    r8d,DWORD PTR [rcx+0x8]
   140001124:	cmp    r8d,DWORD PTR [rdx+0xa0]
   14000112b:	jle    0x14000113d
   14000112d:	mov    eax,DWORD PTR [rdx+0xa4]
   140001133:	dec    eax
   140001135:	cmp    r8d,eax
   140001138:	jge    0x14000113d
   14000113a:	mov    al,0x1
   14000113c:	ret    
   14000113d:	xor    al,al
   14000113f:	ret    
   140001140:	cmp    cl,0x61
   140001143:	jl     0x14000114a
   140001145:	cmp    cl,0x7a
   140001148:	jle    0x14000116b
   14000114a:	cmp    cl,0x41
   14000114d:	jl     0x140001154
   14000114f:	cmp    cl,0x5a
   140001152:	jle    0x14000116b
   140001154:	cmp    cl,0x30
   140001157:	jl     0x14000115e
   140001159:	cmp    cl,0x39
   14000115c:	jle    0x14000116b
   14000115e:	cmp    cl,0x5f
   140001161:	je     0x14000116b
   140001163:	cmp    cl,0x24
   140001166:	je     0x14000116b
   140001168:	xor    al,al
   14000116a:	ret    
   14000116b:	mov    al,0x1
   14000116d:	ret    
   14000116e:	int3   
   14000116f:	int3   
   140001170:	mov    BYTE PTR [rsp+0x20],r9b
   140001175:	mov    QWORD PTR [rsp+0x18],r8
   14000117a:	mov    QWORD PTR [rsp+0x8],rcx
   14000117f:	push   rbx
   140001180:	push   rbp
   140001181:	push   rsi
   140001182:	push   rdi
   140001183:	sub    rsp,0x88
   14000118a:	mov    ebp,r8d
   14000118d:	lea    rcx,[rsp+0x30]
   140001192:	mov    rax,r8
   140001195:	sub    ebp,edx
   140001197:	mov    rbx,rdx
   14000119a:	mov    DWORD PTR [rsp+0xb8],ebp
   1400011a1:	call   QWORD PTR [rip+0x1e419]        # 0x14001f5c0
   1400011a7:	mov    esi,0x1
   1400011ac:	movsxd rbp,ebp
   1400011af:	mov    rdi,rsi
   1400011b2:	cmp    rbp,rsi
   1400011b5:	jle    0x14000125b
   1400011bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400011c0:	cmp    BYTE PTR [rdi+rbx*1],0x63
   1400011c4:	jne    0x14000123d
   1400011c6:	movsxd rax,esi
   1400011c9:	lea    rdx,[rip+0x1e53c]        # 0x14001f70c
   1400011d0:	mov    r8d,0x4
   1400011d6:	lea    rcx,[rax+rbx*1+0x1]
   1400011db:	call   QWORD PTR [rip+0x1df9f]        # 0x14001f180
   1400011e1:	test   eax,eax
   1400011e3:	jne    0x14000123d
   1400011e5:	mov    ecx,DWORD PTR [rsp+0xb8]
   1400011ec:	lea    eax,[rsi+0x5]
   1400011ef:	cmp    eax,ecx
   1400011f1:	jge    0x140001218
   1400011f3:	movzx  eax,BYTE PTR [rdi+rbx*1+0x5]
   1400011f8:	cmp    al,0x61
   1400011fa:	jl     0x140001200
   1400011fc:	cmp    al,0x7a
   1400011fe:	jle    0x14000123d
   140001200:	cmp    al,0x41
   140001202:	jl     0x140001208
   140001204:	cmp    al,0x5a
   140001206:	jle    0x14000123d
   140001208:	cmp    al,0x30
   14000120a:	jl     0x140001210
   14000120c:	cmp    al,0x39
   14000120e:	jle    0x14000123d
   140001210:	cmp    al,0x5f
   140001212:	je     0x14000123d
   140001214:	cmp    al,0x24
   140001216:	je     0x14000123d
   140001218:	movzx  eax,BYTE PTR [rdi+rbx*1-0x1]
   14000121d:	cmp    al,0x61
   14000121f:	jl     0x140001225
   140001221:	cmp    al,0x7a
   140001223:	jle    0x14000123d
   140001225:	cmp    al,0x41
   140001227:	jl     0x14000122d
   140001229:	cmp    al,0x5a
   14000122b:	jle    0x14000123d
   14000122d:	cmp    al,0x30
   14000122f:	jl     0x140001235
   140001231:	cmp    al,0x39
   140001233:	jle    0x14000123d
   140001235:	cmp    al,0x5f
   140001237:	je     0x14000123d
   140001239:	cmp    al,0x24
   14000123b:	jne    0x1400012bc
   14000123d:	movzx  eax,BYTE PTR [rdi+rbx*1]
   140001241:	cmp    al,0x26
   140001243:	je     0x14000125b
   140001245:	cmp    al,0x2a
   140001247:	je     0x14000125b
   140001249:	cmp    al,0x3c
   14000124b:	je     0x14000125b
   14000124d:	inc    rdi
   140001250:	inc    esi
   140001252:	cmp    rdi,rbp
   140001255:	jl     0x1400011c0
   14000125b:	mov    rbp,QWORD PTR [rsp+0xc0]
   140001263:	cmp    BYTE PTR [rsp+0xd0],0x0
   14000126b:	je     0x140001385
   140001271:	lea    rdi,[rbx+0x6]
   140001275:	cmp    rbp,rdi
   140001278:	jbe    0x140001385
   14000127e:	lea    rcx,[rip+0x1e47f]        # 0x14001f704
   140001285:	mov    r8d,0x6
   14000128b:	mov    rdx,rbx
   14000128e:	call   QWORD PTR [rip+0x1deec]        # 0x14001f180
   140001294:	test   eax,eax
   140001296:	jne    0x140001385
   14000129c:	movzx  eax,BYTE PTR [rbp-0x1]
   1400012a0:	lea    rcx,[rbp-0x1]
   1400012a4:	cmp    al,0x26
   1400012a6:	jne    0x14000135e
   1400012ac:	mov    rbp,rcx
   1400012af:	mov    QWORD PTR [rsp+0xc0],rcx
   1400012b7:	jmp    0x140001382
   1400012bc:	mov    r8d,ecx
   1400012bf:	lea    rcx,[rsp+0xc0]
   1400012c7:	mov    rdx,rbx
   1400012ca:	call   QWORD PTR [rip+0x1e280]        # 0x14001f550
   1400012d0:	lea    rcx,[rsp+0x30]
   1400012d5:	mov    rdx,rax
   1400012d8:	call   QWORD PTR [rip+0x1e27a]        # 0x14001f558
   1400012de:	lea    rcx,[rsp+0xc0]
   1400012e6:	call   QWORD PTR [rip+0x1e2cc]        # 0x14001f5b8
   1400012ec:	movsxd rcx,esi
   1400012ef:	movzx  eax,BYTE PTR [rcx+rbx*1-0x1]
   1400012f4:	cmp    al,0x20
   1400012f6:	je     0x140001306
   1400012f8:	cmp    al,0x9
   1400012fa:	je     0x140001306
   1400012fc:	mov    r8d,0x5
   140001302:	mov    edx,esi
   140001304:	jmp    0x14000130f
   140001306:	lea    edx,[rsi-0x1]
   140001309:	mov    r8d,0x6
   14000130f:	lea    rcx,[rsp+0x30]
   140001314:	call   QWORD PTR [rip+0x1e246]        # 0x14001f560
   14000131a:	lea    rdx,[rip+0x1e3e3]        # 0x14001f704
   140001321:	lea    rcx,[rsp+0x30]
   140001326:	call   QWORD PTR [rip+0x1e23c]        # 0x14001f568
   14000132c:	lea    rcx,[rsp+0x30]
   140001331:	call   QWORD PTR [rip+0x1e239]        # 0x14001f570
   140001337:	lea    rcx,[rsp+0x30]
   14000133c:	mov    rbx,rax
   14000133f:	mov    rax,QWORD PTR [rsp+0x30]
   140001344:	movsxd rbp,DWORD PTR [rax+0x4]
   140001348:	call   QWORD PTR [rip+0x1e222]        # 0x14001f570
   14000134e:	add    rbp,rax
   140001351:	mov    QWORD PTR [rsp+0xc0],rbp
   140001359:	jmp    0x140001263
   14000135e:	cmp    al,0x61
   140001360:	jl     0x140001366
   140001362:	cmp    al,0x7a
   140001364:	jle    0x140001382
   140001366:	cmp    al,0x41
   140001368:	jl     0x14000136e
   14000136a:	cmp    al,0x5a
   14000136c:	jle    0x140001382
   14000136e:	cmp    al,0x30
   140001370:	jl     0x140001376
   140001372:	cmp    al,0x39
   140001374:	jle    0x140001382
   140001376:	cmp    al,0x5f
   140001378:	je     0x140001382
   14000137a:	cmp    al,0x24
   14000137c:	je     0x140001382
   14000137e:	cmp    al,0x3e
   140001380:	jne    0x140001385
   140001382:	mov    rbx,rdi
   140001385:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000138d:	mov    rcx,rsi
   140001390:	call   QWORD PTR [rip+0x1e22a]        # 0x14001f5c0
   140001396:	mov    edx,DWORD PTR [rsp+0xb8]
   14000139d:	mov    rcx,rsi
   1400013a0:	call   QWORD PTR [rip+0x1e1d2]        # 0x14001f578
   1400013a6:	lea    rcx,[rip+0x1e357]        # 0x14001f704
   1400013ad:	mov    r8d,0x6
   1400013b3:	mov    rdx,rbx
   1400013b6:	call   QWORD PTR [rip+0x1ddc4]        # 0x14001f180
   1400013bc:	test   eax,eax
   1400013be:	jne    0x1400013d4
   1400013c0:	lea    rdx,[rip+0x1e33d]        # 0x14001f704
   1400013c7:	mov    rcx,rsi
   1400013ca:	add    rbx,0x6
   1400013ce:	call   QWORD PTR [rip+0x1e1ac]        # 0x14001f580
   1400013d4:	lea    rcx,[rip+0x1e31d]        # 0x14001f6f8
   1400013db:	mov    r8d,0x8
   1400013e1:	mov    rdx,rbx
   1400013e4:	call   QWORD PTR [rip+0x1dd96]        # 0x14001f180
   1400013ea:	xor    edx,edx
   1400013ec:	test   eax,eax
   1400013ee:	jne    0x140001554
   1400013f4:	movzx  eax,BYTE PTR [rbx+0x8]
   1400013f8:	lea    rdi,[rbx+0x8]
   1400013fc:	test   al,al
   1400013fe:	je     0x140001434
   140001400:	cmp    al,0x61
   140001402:	jl     0x14000140c
   140001404:	cmp    al,0x7a
   140001406:	jle    0x1400015e1
   14000140c:	cmp    al,0x41
   14000140e:	jl     0x140001418
   140001410:	cmp    al,0x5a
   140001412:	jle    0x1400015e1
   140001418:	cmp    al,0x30
   14000141a:	jl     0x140001424
   14000141c:	cmp    al,0x39
   14000141e:	jle    0x1400015e1
   140001424:	cmp    al,0x5f
   140001426:	je     0x1400015e1
   14000142c:	cmp    al,0x24
   14000142e:	je     0x1400015e1
   140001434:	lea    rcx,[rip+0x1e2b5]        # 0x14001f6f0
   14000143b:	mov    r8d,0x4
   140001441:	mov    rdx,rdi
   140001444:	call   QWORD PTR [rip+0x1dd36]        # 0x14001f180
   14000144a:	test   eax,eax
   14000144c:	jne    0x140001457
   14000144e:	add    rbx,0xc
   140001452:	jmp    0x14000153f
   140001457:	lea    rcx,[rip+0x1e28a]        # 0x14001f6e8
   14000145e:	mov    r8d,0x5
   140001464:	mov    rdx,rdi
   140001467:	call   QWORD PTR [rip+0x1dd13]        # 0x14001f180
   14000146d:	test   eax,eax
   14000146f:	jne    0x140001500
   140001475:	or     rcx,0xffffffffffffffff
   140001479:	xor    eax,eax
   14000147b:	lea    rdi,[rbx+0xd]
   14000147f:	repnz scas al,BYTE PTR es:[rdi]
   140001481:	not    rcx
   140001484:	dec    rcx
   140001487:	cmp    rcx,0x4
   14000148b:	jb     0x1400014aa
   14000148d:	lea    r8d,[rax+0x4]
   140001491:	lea    rdx,[rip+0x1e258]        # 0x14001f6f0
   140001498:	lea    rcx,[rbx+0xd]
   14000149c:	call   QWORD PTR [rip+0x1dcde]        # 0x14001f180
   1400014a2:	test   eax,eax
   1400014a4:	je     0x1400015d9
   1400014aa:	or     rcx,0xffffffffffffffff
   1400014ae:	xor    eax,eax
   1400014b0:	lea    rdi,[rbx+0xd]
   1400014b4:	repnz scas al,BYTE PTR es:[rdi]
   1400014b6:	not    rcx
   1400014b9:	dec    rcx
   1400014bc:	cmp    rcx,0x5
   1400014c0:	jb     0x1400014df
   1400014c2:	lea    r8d,[rax+0x5]
   1400014c6:	lea    rdx,[rip+0x1e21b]        # 0x14001f6e8
   1400014cd:	lea    rcx,[rbx+0xd]
   1400014d1:	call   QWORD PTR [rip+0x1dca9]        # 0x14001f180
   1400014d7:	test   eax,eax
   1400014d9:	je     0x1400015d9
   1400014df:	mov    rsi,QWORD PTR [rsp+0xb0]
   1400014e7:	lea    rdx,[rip+0x1e1f2]        # 0x14001f6e0
   1400014ee:	add    rbx,0xd
   1400014f2:	mov    rcx,rsi
   1400014f5:	call   QWORD PTR [rip+0x1e085]        # 0x14001f580
   1400014fb:	jmp    0x1400015e1
   140001500:	lea    rcx,[rip+0x1e1d1]        # 0x14001f6d8
   140001507:	mov    r8d,0x6
   14000150d:	mov    rdx,rdi
   140001510:	call   QWORD PTR [rip+0x1dc6a]        # 0x14001f180
   140001516:	test   eax,eax
   140001518:	je     0x1400015e1
   14000151e:	lea    rcx,[rip+0x1e1ab]        # 0x14001f6d0
   140001525:	mov    r8d,0x5
   14000152b:	mov    rdx,rdi
   14000152e:	call   QWORD PTR [rip+0x1dc4c]        # 0x14001f180
   140001534:	test   eax,eax
   140001536:	je     0x1400015e1
   14000153c:	mov    rbx,rdi
   14000153f:	lea    rdx,[rip+0x1e182]        # 0x14001f6c8
   140001546:	mov    rcx,rsi
   140001549:	call   QWORD PTR [rip+0x1e031]        # 0x14001f580
   14000154f:	jmp    0x1400015e1
   140001554:	lea    rax,[rip+0x1e165]        # 0x14001f6c0
   14000155b:	lea    rcx,[rip+0x1e156]        # 0x14001f6b8
   140001562:	mov    DWORD PTR [rsp+0x48],0x7
   14000156a:	mov    QWORD PTR [rsp+0x50],rax
   14000156f:	lea    rax,[rip+0x1e136]        # 0x14001f6ac
   140001576:	mov    DWORD PTR [rsp+0x58],0x6
   14000157e:	mov    QWORD PTR [rsp+0x60],rax
   140001583:	mov    QWORD PTR [rsp+0x40],rcx
   140001588:	mov    DWORD PTR [rsp+0x68],0x5
   140001590:	mov    rax,rdx
   140001593:	mov    QWORD PTR [rsp+0x70],rdx
   140001598:	mov    DWORD PTR [rsp+0x78],edx
   14000159c:	mov    esi,edx
   14000159e:	mov    rdi,rdx
   1400015a1:	movsxd r8,DWORD PTR [rsp+rax*1+0x48]
   1400015a6:	mov    rdx,rbx
   1400015a9:	call   QWORD PTR [rip+0x1dbd1]        # 0x14001f180
   1400015af:	test   eax,eax
   1400015b1:	je     0x1400015cb
   1400015b3:	inc    rdi
   1400015b6:	inc    esi
   1400015b8:	mov    rax,rdi
   1400015bb:	shl    rax,0x4
   1400015bf:	mov    rcx,QWORD PTR [rsp+rax*1+0x40]
   1400015c4:	test   rcx,rcx
   1400015c7:	jne    0x1400015a1
   1400015c9:	jmp    0x1400015d9
   1400015cb:	movsxd rax,esi
   1400015ce:	add    rax,rax
   1400015d1:	movsxd rax,DWORD PTR [rsp+rax*8+0x48]
   1400015d6:	add    rbx,rax
   1400015d9:	mov    rsi,QWORD PTR [rsp+0xb0]
   1400015e1:	xor    al,al
   1400015e3:	mov    BYTE PTR [rsp+0xb8],al
   1400015ea:	cmp    rbx,rbp
   1400015ed:	je     0x1400018cb
   1400015f3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001600:	movzx  edi,BYTE PTR [rbx]
   140001603:	inc    rbx
   140001606:	cmp    BYTE PTR [rsp+0xc8],0x0
   14000160e:	je     0x140001689
   140001610:	cmp    dil,0x3a
   140001614:	jne    0x140001689
   140001616:	cmp    BYTE PTR [rbx],dil
   140001619:	jne    0x140001689
   14000161b:	mov    rax,QWORD PTR [rsi]
   14000161e:	mov    dil,BYTE PTR [rbx+0x1]
   140001622:	add    rbx,0x2
   140001626:	mov    esi,DWORD PTR [rax+0x4]
   140001629:	dec    esi
   14000162b:	js     0x14000166d
   14000162d:	mov    rbp,QWORD PTR [rsp+0xb0]
   140001635:	mov    edx,esi
   140001637:	mov    rcx,rbp
   14000163a:	call   QWORD PTR [rip+0x1df48]        # 0x14001f588
   140001640:	cmp    al,0x61
   140001642:	jl     0x140001648
   140001644:	cmp    al,0x7a
   140001646:	jle    0x140001660
   140001648:	cmp    al,0x41
   14000164a:	jl     0x140001650
   14000164c:	cmp    al,0x5a
   14000164e:	jle    0x140001660
   140001650:	cmp    al,0x30
   140001652:	jl     0x140001658
   140001654:	cmp    al,0x39
   140001656:	jle    0x140001660
   140001658:	cmp    al,0x5f
   14000165a:	je     0x140001660
   14000165c:	cmp    al,0x24
   14000165e:	jne    0x140001665
   140001660:	sub    esi,0x1
   140001663:	jns    0x140001635
   140001665:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000166d:	lea    edx,[rsi+0x1]
   140001670:	mov    rsi,QWORD PTR [rsp+0xb0]
   140001678:	mov    rcx,rsi
   14000167b:	call   QWORD PTR [rip+0x1df0f]        # 0x14001f590
   140001681:	movzx  eax,BYTE PTR [rsp+0xb8]
   140001689:	test   al,al
   14000168b:	jne    0x14000169a
   14000168d:	mov    BYTE PTR [rsp+0xb8],al
   140001694:	cmp    dil,0x2a
   140001698:	jne    0x1400016a2
   14000169a:	mov    BYTE PTR [rsp+0xb8],0x1
   1400016a2:	movzx  edx,dil
   1400016a6:	mov    rcx,rsi
   1400016a9:	call   QWORD PTR [rip+0x1dee9]        # 0x14001f598
   1400016af:	cmp    dil,0x3c
   1400016b3:	jne    0x14000179d
   1400016b9:	mov    rax,QWORD PTR [rsp+0xc0]
   1400016c1:	xor    ebp,ebp
   1400016c3:	mov    rdx,rbx
   1400016c6:	mov    esi,0x1
   1400016cb:	cmp    rbx,rax
   1400016ce:	je     0x1400018cb
   1400016d4:	mov    dil,BYTE PTR [rbx]
   1400016d7:	inc    rbx
   1400016da:	cmp    dil,0x7b
   1400016de:	je     0x1400016ec
   1400016e0:	cmp    dil,0x28
   1400016e4:	je     0x1400016ec
   1400016e6:	cmp    dil,0x5b
   1400016ea:	jne    0x1400016ee
   1400016ec:	inc    ebp
   1400016ee:	cmp    dil,0x7d
   1400016f2:	je     0x140001700
   1400016f4:	cmp    dil,0x29
   1400016f8:	je     0x140001700
   1400016fa:	cmp    dil,0x5d
   1400016fe:	jne    0x140001702
   140001700:	dec    ebp
   140001702:	test   ebp,ebp
   140001704:	jne    0x140001784
   140001706:	cmp    dil,0x3c
   14000170a:	jne    0x140001710
   14000170c:	inc    esi
   14000170e:	jmp    0x140001718
   140001710:	cmp    dil,0x3e
   140001714:	jne    0x140001718
   140001716:	dec    esi
   140001718:	test   esi,esi
   14000171a:	je     0x140001727
   14000171c:	cmp    esi,0x1
   14000171f:	jne    0x140001784
   140001721:	cmp    dil,0x2c
   140001725:	jne    0x140001784
   140001727:	movzx  r9d,BYTE PTR [rsp+0xc8]
   140001730:	lea    r8,[rbx-0x1]
   140001734:	lea    rcx,[rsp+0x38]
   140001739:	mov    BYTE PTR [rsp+0x20],0x0
   14000173e:	call   0x140001170
   140001743:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000174b:	mov    rdx,rax
   14000174e:	call   QWORD PTR [rip+0x1de8c]        # 0x14001f5e0
   140001754:	lea    rcx,[rsp+0x38]
   140001759:	call   QWORD PTR [rip+0x1de59]        # 0x14001f5b8
   14000175f:	mov    rcx,QWORD PTR [rsp+0xb0]
   140001767:	movzx  edx,dil
   14000176b:	call   QWORD PTR [rip+0x1de27]        # 0x14001f598
   140001771:	test   esi,esi
   140001773:	je     0x14000187f
   140001779:	mov    rax,QWORD PTR [rsp+0xc0]
   140001781:	mov    rdx,rbx
   140001784:	cmp    rbx,rax
   140001787:	jne    0x1400016d4
   14000178d:	mov    rsi,QWORD PTR [rsp+0xb0]
   140001795:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000179d:	cmp    dil,0x61
   1400017a1:	jl     0x1400017ad
   1400017a3:	cmp    dil,0x7a
   1400017a7:	jle    0x1400018bb
   1400017ad:	cmp    dil,0x41
   1400017b1:	jl     0x1400017bd
   1400017b3:	cmp    dil,0x5a
   1400017b7:	jle    0x1400018bb
   1400017bd:	cmp    dil,0x30
   1400017c1:	jl     0x1400017cd
   1400017c3:	cmp    dil,0x39
   1400017c7:	jle    0x1400018bb
   1400017cd:	cmp    dil,0x5f
   1400017d1:	je     0x1400018bb
   1400017d7:	cmp    dil,0x24
   1400017db:	je     0x1400018bb
   1400017e1:	cmp    rbx,rbp
   1400017e4:	je     0x1400018cb
   1400017ea:	mov    rdi,rbp
   1400017ed:	sub    rdi,rbx
   1400017f0:	cmp    rdi,0x5
   1400017f4:	jl     0x1400018bb
   1400017fa:	lea    rcx,[rip+0x1dea3]        # 0x14001f6a4
   140001801:	mov    r8d,0x5
   140001807:	mov    rdx,rbx
   14000180a:	call   QWORD PTR [rip+0x1d970]        # 0x14001f180
   140001810:	test   eax,eax
   140001812:	jne    0x1400018bb
   140001818:	cmp    rdi,0x5
   14000181c:	je     0x14000184a
   14000181e:	movzx  eax,BYTE PTR [rbx+0x5]
   140001822:	cmp    al,0x61
   140001824:	jl     0x14000182e
   140001826:	cmp    al,0x7a
   140001828:	jle    0x1400018bb
   14000182e:	cmp    al,0x41
   140001830:	jl     0x14000183a
   140001832:	cmp    al,0x5a
   140001834:	jle    0x1400018bb
   14000183a:	cmp    al,0x30
   14000183c:	jl     0x140001842
   14000183e:	cmp    al,0x39
   140001840:	jle    0x1400018bb
   140001842:	cmp    al,0x5f
   140001844:	je     0x1400018bb
   140001846:	cmp    al,0x24
   140001848:	je     0x1400018bb
   14000184a:	add    rbx,0x5
   14000184e:	cmp    rbx,rbp
   140001851:	je     0x140001866
   140001853:	movzx  eax,BYTE PTR [rbx]
   140001856:	cmp    al,0x20
   140001858:	je     0x14000185e
   14000185a:	cmp    al,0x9
   14000185c:	jne    0x140001866
   14000185e:	inc    rbx
   140001861:	cmp    rbx,rbp
   140001864:	jne    0x140001853
   140001866:	cmp    BYTE PTR [rsp+0xd0],0x0
   14000186e:	je     0x1400018ea
   140001870:	cmp    rbx,rbp
   140001873:	je     0x1400018a0
   140001875:	cmp    BYTE PTR [rbx],0x26
   140001878:	jne    0x1400018a0
   14000187a:	inc    rbx
   14000187d:	jmp    0x1400018bb
   14000187f:	cmp    BYTE PTR [rbx],0x3e
   140001882:	mov    rsi,QWORD PTR [rsp+0xb0]
   14000188a:	jne    0x140001795
   140001890:	mov    dl,0x20
   140001892:	mov    rcx,rsi
   140001895:	call   QWORD PTR [rip+0x1dcfd]        # 0x14001f598
   14000189b:	jmp    0x140001795
   1400018a0:	mov    al,BYTE PTR [rsp+0xb8]
   1400018a7:	test   al,al
   1400018a9:	je     0x1400018c2
   1400018ab:	lea    rdx,[rip+0x1ddf2]        # 0x14001f6a4
   1400018b2:	mov    rcx,rsi
   1400018b5:	call   QWORD PTR [rip+0x1dcc5]        # 0x14001f580
   1400018bb:	mov    al,BYTE PTR [rsp+0xb8]
   1400018c2:	cmp    rbx,rbp
   1400018c5:	jne    0x140001600
   1400018cb:	lea    rcx,[rsp+0x30]
   1400018d0:	call   QWORD PTR [rip+0x1dce2]        # 0x14001f5b8
   1400018d6:	mov    rax,QWORD PTR [rsp+0xb0]
   1400018de:	add    rsp,0x88
   1400018e5:	pop    rdi
   1400018e6:	pop    rsi
   1400018e7:	pop    rbp
   1400018e8:	pop    rbx
   1400018e9:	ret    
   1400018ea:	cmp    BYTE PTR [rsp+0xb8],0x0
   1400018f2:	jne    0x1400018ab
   1400018f4:	lea    rdx,[rip+0x1de09]        # 0x14001f704
   1400018fb:	mov    rcx,rsi
   1400018fe:	call   QWORD PTR [rip+0x1dc64]        # 0x14001f568
   140001904:	jmp    0x1400018bb
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	mov    QWORD PTR [rsp+0x20],rbx
   140001915:	push   rbp
   140001916:	push   rsi
   140001917:	push   rdi
   140001918:	sub    rsp,0x80
   14000191f:	mov    rax,QWORD PTR [rip+0x29732]        # 0x14002b058
   140001926:	xor    rax,rsp
   140001929:	mov    QWORD PTR [rsp+0x70],rax
   14000192e:	mov    rsi,rcx
   140001931:	mov    rcx,rdx
   140001934:	movzx  ebp,r8b
   140001938:	mov    rbx,rdx
   14000193b:	call   QWORD PTR [rip+0x1dcb7]        # 0x14001f5f8
   140001941:	mov    rdi,rax
   140001944:	mov    rax,QWORD PTR [rbx]
   140001947:	mov    eax,DWORD PTR [rax+0x4]
   14000194a:	cmp    eax,0x40
   14000194d:	jl     0x14000195e
   14000194f:	inc    eax
   140001951:	movsxd rcx,eax
   140001954:	call   0x14001e0fc
   140001959:	mov    rbx,rax
   14000195c:	jmp    0x140001963
   14000195e:	lea    rbx,[rsp+0x30]
   140001963:	movzx  eax,BYTE PTR [rdi]
   140001966:	xor    cl,cl
   140001968:	mov    r8,rbx
   14000196b:	test   al,al
   14000196d:	je     0x140001a35
   140001973:	cmp    al,0x20
   140001975:	je     0x14000197b
   140001977:	cmp    al,0x9
   140001979:	jne    0x14000198a
   14000197b:	mov    al,BYTE PTR [rdi+0x1]
   14000197e:	inc    rdi
   140001981:	test   al,al
   140001983:	jne    0x140001973
   140001985:	jmp    0x140001a35
   14000198a:	movzx  eax,BYTE PTR [rdi]
   14000198d:	test   al,al
   14000198f:	je     0x140001a35
   140001995:	cmp    al,0x20
   140001997:	je     0x1400019ab
   140001999:	cmp    al,0x9
   14000199b:	je     0x1400019ab
   14000199d:	mov    BYTE PTR [r8],al
   1400019a0:	movzx  ecx,al
   1400019a3:	inc    rdi
   1400019a6:	jmp    0x140001a28
   1400019ab:	movzx  eax,BYTE PTR [rdi]
   1400019ae:	test   al,al
   1400019b0:	je     0x140001a35
   1400019b6:	cmp    al,0x20
   1400019b8:	je     0x1400019be
   1400019ba:	cmp    al,0x9
   1400019bc:	jne    0x1400019ca
   1400019be:	mov    al,BYTE PTR [rdi+0x1]
   1400019c1:	inc    rdi
   1400019c4:	test   al,al
   1400019c6:	jne    0x1400019b6
   1400019c8:	jmp    0x140001a35
   1400019ca:	movzx  eax,BYTE PTR [rdi]
   1400019cd:	test   al,al
   1400019cf:	je     0x140001a35
   1400019d1:	cmp    al,0x61
   1400019d3:	jl     0x1400019d9
   1400019d5:	cmp    al,0x7a
   1400019d7:	jle    0x1400019f1
   1400019d9:	cmp    al,0x41
   1400019db:	jl     0x1400019e1
   1400019dd:	cmp    al,0x5a
   1400019df:	jle    0x1400019f1
   1400019e1:	cmp    al,0x30
   1400019e3:	jl     0x1400019e9
   1400019e5:	cmp    al,0x39
   1400019e7:	jle    0x1400019f1
   1400019e9:	cmp    al,0x5f
   1400019eb:	je     0x1400019f1
   1400019ed:	cmp    al,0x24
   1400019ef:	jne    0x140001a19
   1400019f1:	cmp    cl,0x61
   1400019f4:	jl     0x1400019fb
   1400019f6:	cmp    cl,0x7a
   1400019f9:	jle    0x140001a22
   1400019fb:	cmp    cl,0x41
   1400019fe:	jl     0x140001a05
   140001a00:	cmp    cl,0x5a
   140001a03:	jle    0x140001a22
   140001a05:	cmp    cl,0x30
   140001a08:	jl     0x140001a0f
   140001a0a:	cmp    cl,0x39
   140001a0d:	jle    0x140001a22
   140001a0f:	cmp    cl,0x5f
   140001a12:	je     0x140001a22
   140001a14:	cmp    cl,0x24
   140001a17:	je     0x140001a22
   140001a19:	cmp    al,0x3a
   140001a1b:	jne    0x140001a2b
   140001a1d:	cmp    cl,0x3c
   140001a20:	jne    0x140001a2b
   140001a22:	mov    BYTE PTR [r8],0x20
   140001a26:	mov    cl,0x20
   140001a28:	inc    r8
   140001a2b:	mov    al,BYTE PTR [rdi]
   140001a2d:	test   al,al
   140001a2f:	jne    0x140001995
   140001a35:	movzx  r9d,bpl
   140001a39:	mov    rdx,rbx
   140001a3c:	mov    rcx,rsi
   140001a3f:	mov    BYTE PTR [r8],0x0
   140001a43:	mov    BYTE PTR [rsp+0x20],0x1
   140001a48:	call   0x140001170
   140001a4d:	lea    r11,[rsp+0x30]
   140001a52:	cmp    rbx,r11
   140001a55:	je     0x140001a5f
   140001a57:	mov    rcx,rbx
   140001a5a:	call   0x14001e18a
   140001a5f:	mov    rax,rsi
   140001a62:	mov    rcx,QWORD PTR [rsp+0x70]
   140001a67:	xor    rcx,rsp
   140001a6a:	call   0x14001e1a0
   140001a6f:	mov    rbx,QWORD PTR [rsp+0xb8]
   140001a77:	add    rsp,0x80
   140001a7e:	pop    rdi
   140001a7f:	pop    rsi
   140001a80:	pop    rbp
   140001a81:	ret    
   140001a82:	int3   
   140001a83:	int3   
   140001a84:	int3   
   140001a85:	int3   
   140001a86:	int3   
   140001a87:	int3   
   140001a88:	int3   
   140001a89:	int3   
   140001a8a:	int3   
   140001a8b:	int3   
   140001a8c:	int3   
   140001a8d:	int3   
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	rex push rbx
   140001a92:	sub    rsp,0x20
   140001a96:	mov    rbx,rcx
   140001a99:	add    rcx,0x60
   140001a9d:	call   QWORD PTR [rip+0x1db15]        # 0x14001f5b8
   140001aa3:	lea    rcx,[rbx+0x58]
   140001aa7:	call   QWORD PTR [rip+0x1db0b]        # 0x14001f5b8
   140001aad:	lea    rcx,[rbx+0x50]
   140001ab1:	call   QWORD PTR [rip+0x1db01]        # 0x14001f5b8
   140001ab7:	lea    rcx,[rbx+0x48]
   140001abb:	call   QWORD PTR [rip+0x1daf7]        # 0x14001f5b8
   140001ac1:	lea    rcx,[rbx+0x40]
   140001ac5:	call   QWORD PTR [rip+0x1daed]        # 0x14001f5b8
   140001acb:	lea    rcx,[rbx+0x38]
   140001acf:	call   QWORD PTR [rip+0x1dae3]        # 0x14001f5b8
   140001ad5:	lea    rcx,[rbx+0x30]
   140001ad9:	call   QWORD PTR [rip+0x1dad9]        # 0x14001f5b8
   140001adf:	lea    rcx,[rbx+0x28]
   140001ae3:	call   QWORD PTR [rip+0x1dacf]        # 0x14001f5b8
   140001ae9:	lea    rcx,[rbx+0x20]
   140001aed:	call   QWORD PTR [rip+0x1dac5]        # 0x14001f5b8
   140001af3:	lea    rcx,[rbx+0x18]
   140001af7:	call   QWORD PTR [rip+0x1dabb]        # 0x14001f5b8
   140001afd:	lea    rcx,[rbx+0x10]
   140001b01:	call   QWORD PTR [rip+0x1dab1]        # 0x14001f5b8
   140001b07:	lea    rcx,[rbx+0x8]
   140001b0b:	call   QWORD PTR [rip+0x1daa7]        # 0x14001f5b8
   140001b11:	mov    rcx,rbx
   140001b14:	add    rsp,0x20
   140001b18:	pop    rbx
   140001b19:	rex.W jmp QWORD PTR [rip+0x1da98]        # 0x14001f5b8
   140001b20:	cmp    rdx,r8
   140001b23:	je     0x140001b5c
   140001b25:	mov    QWORD PTR [rsp+0x8],rbx
   140001b2a:	push   rdi
   140001b2b:	sub    rsp,0x20
   140001b2f:	mov    rdi,r8
   140001b32:	mov    rbx,rdx
   140001b35:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001b40:	mov    rcx,rbx
   140001b43:	add    rbx,0x8
   140001b47:	call   QWORD PTR [rip+0x1da6b]        # 0x14001f5b8
   140001b4d:	cmp    rbx,rdi
   140001b50:	jne    0x140001b40
   140001b52:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b57:	add    rsp,0x20
   140001b5b:	pop    rdi
   140001b5c:	repz ret 
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	mov    QWORD PTR [rsp+0x8],rbx
   140001b65:	push   rdi
   140001b66:	sub    rsp,0x20
   140001b6a:	mov    rbx,rdx
   140001b6d:	mov    rdi,rcx
   140001b70:	call   QWORD PTR [rip+0x1da62]        # 0x14001f5d8
   140001b76:	lea    rdx,[rbx+0x8]
   140001b7a:	lea    rcx,[rdi+0x8]
   140001b7e:	call   QWORD PTR [rip+0x1da54]        # 0x14001f5d8
   140001b84:	mov    eax,DWORD PTR [rdi+0x10]
   140001b87:	lea    rdx,[rbx+0x20]
   140001b8b:	xor    eax,DWORD PTR [rbx+0x10]
   140001b8e:	and    eax,0x1
   140001b91:	xor    DWORD PTR [rdi+0x10],eax
   140001b94:	mov    ecx,DWORD PTR [rbx+0x10]
   140001b97:	mov    eax,DWORD PTR [rdi+0x10]
   140001b9a:	xor    ecx,eax
   140001b9c:	and    ecx,0x2
   140001b9f:	xor    ecx,eax
   140001ba1:	mov    DWORD PTR [rdi+0x10],ecx
   140001ba4:	mov    eax,DWORD PTR [rbx+0x14]
   140001ba7:	lea    rcx,[rdi+0x20]
   140001bab:	mov    DWORD PTR [rdi+0x14],eax
   140001bae:	mov    eax,DWORD PTR [rbx+0x18]
   140001bb1:	mov    DWORD PTR [rdi+0x18],eax
   140001bb4:	call   QWORD PTR [rip+0x1da1e]        # 0x14001f5d8
   140001bba:	lea    rdx,[rbx+0x28]
   140001bbe:	lea    rcx,[rdi+0x28]
   140001bc2:	call   QWORD PTR [rip+0x1da10]        # 0x14001f5d8
   140001bc8:	lea    rdx,[rbx+0x30]
   140001bcc:	lea    rcx,[rdi+0x30]
   140001bd0:	call   QWORD PTR [rip+0x1da02]        # 0x14001f5d8
   140001bd6:	lea    rdx,[rbx+0x38]
   140001bda:	lea    rcx,[rdi+0x38]
   140001bde:	call   QWORD PTR [rip+0x1d9f4]        # 0x14001f5d8
   140001be4:	movzx  r11d,BYTE PTR [rbx+0x40]
   140001be9:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bee:	mov    BYTE PTR [rdi+0x40],r11b
   140001bf2:	mov    rax,rdi
   140001bf5:	add    rsp,0x20
   140001bf9:	pop    rdi
   140001bfa:	ret    
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	mov    QWORD PTR [rsp+0x8],rbx
   140001c05:	push   rdi
   140001c06:	sub    rsp,0x20
   140001c0a:	mov    rbx,rdx
   140001c0d:	mov    rdi,rcx
   140001c10:	call   QWORD PTR [rip+0x1d9c2]        # 0x14001f5d8
   140001c16:	lea    rdx,[rbx+0x8]
   140001c1a:	lea    rcx,[rdi+0x8]
   140001c1e:	call   QWORD PTR [rip+0x1d9b4]        # 0x14001f5d8
   140001c24:	lea    rdx,[rbx+0x10]
   140001c28:	lea    rcx,[rdi+0x10]
   140001c2c:	call   QWORD PTR [rip+0x1d9a6]        # 0x14001f5d8
   140001c32:	lea    rdx,[rbx+0x18]
   140001c36:	lea    rcx,[rdi+0x18]
   140001c3a:	call   QWORD PTR [rip+0x1d998]        # 0x14001f5d8
   140001c40:	lea    rdx,[rbx+0x20]
   140001c44:	lea    rcx,[rdi+0x20]
   140001c48:	call   QWORD PTR [rip+0x1d98a]        # 0x14001f5d8
   140001c4e:	lea    rdx,[rbx+0x28]
   140001c52:	lea    rcx,[rdi+0x28]
   140001c56:	call   QWORD PTR [rip+0x1d97c]        # 0x14001f5d8
   140001c5c:	lea    rdx,[rbx+0x30]
   140001c60:	lea    rcx,[rdi+0x30]
   140001c64:	call   QWORD PTR [rip+0x1d96e]        # 0x14001f5d8
   140001c6a:	lea    rdx,[rbx+0x38]
   140001c6e:	lea    rcx,[rdi+0x38]
   140001c72:	call   QWORD PTR [rip+0x1d960]        # 0x14001f5d8
   140001c78:	lea    rdx,[rbx+0x40]
   140001c7c:	lea    rcx,[rdi+0x40]
   140001c80:	call   QWORD PTR [rip+0x1d952]        # 0x14001f5d8
   140001c86:	lea    rdx,[rbx+0x48]
   140001c8a:	lea    rcx,[rdi+0x48]
   140001c8e:	call   QWORD PTR [rip+0x1d944]        # 0x14001f5d8
   140001c94:	lea    rdx,[rbx+0x50]
   140001c98:	lea    rcx,[rdi+0x50]
   140001c9c:	call   QWORD PTR [rip+0x1d936]        # 0x14001f5d8
   140001ca2:	lea    rdx,[rbx+0x58]
   140001ca6:	lea    rcx,[rdi+0x58]
   140001caa:	call   QWORD PTR [rip+0x1d928]        # 0x14001f5d8
   140001cb0:	lea    rdx,[rbx+0x60]
   140001cb4:	lea    rcx,[rdi+0x60]
   140001cb8:	call   QWORD PTR [rip+0x1d91a]        # 0x14001f5d8
   140001cbe:	mov    r11d,DWORD PTR [rbx+0x68]
   140001cc2:	mov    DWORD PTR [rdi+0x68],r11d
   140001cc6:	movzx  eax,BYTE PTR [rbx+0x6c]
   140001cca:	mov    BYTE PTR [rdi+0x6c],al
   140001ccd:	movzx  eax,BYTE PTR [rbx+0x6d]
   140001cd1:	mov    BYTE PTR [rdi+0x6d],al
   140001cd4:	mov    eax,DWORD PTR [rbx+0x70]
   140001cd7:	mov    DWORD PTR [rdi+0x70],eax
   140001cda:	mov    eax,DWORD PTR [rbx+0x74]
   140001cdd:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ce2:	mov    DWORD PTR [rdi+0x74],eax
   140001ce5:	mov    rax,rdi
   140001ce8:	add    rsp,0x20
   140001cec:	pop    rdi
   140001ced:	ret    
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	cmp    rdx,r8
   140001cf3:	je     0x140001d31
   140001cf5:	mov    QWORD PTR [rsp+0x8],rbx
   140001cfa:	push   rdi
   140001cfb:	sub    rsp,0x20
   140001cff:	mov    rdi,r8
   140001d02:	mov    rbx,rdx
   140001d05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001d10:	mov    rcx,rbx
   140001d13:	add    rbx,0x8
   140001d17:	test   rcx,rcx
   140001d1a:	je     0x140001d22
   140001d1c:	call   QWORD PTR [rip+0x1d89e]        # 0x14001f5c0
   140001d22:	cmp    rbx,rdi
   140001d25:	jne    0x140001d10
   140001d27:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d2c:	add    rsp,0x20
   140001d30:	pop    rdi
   140001d31:	repz ret 
   140001d33:	int3   
   140001d34:	int3   
   140001d35:	int3   
   140001d36:	int3   
   140001d37:	int3   
   140001d38:	int3   
   140001d39:	int3   
   140001d3a:	int3   
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	cmp    rdx,r8
   140001d43:	je     0x140001dc4
   140001d45:	mov    QWORD PTR [rsp+0x10],rbx
   140001d4a:	push   rsi
   140001d4b:	sub    rsp,0x20
   140001d4f:	mov    rbx,r8
   140001d52:	mov    rsi,rdx
   140001d55:	mov    QWORD PTR [rsp+0x30],rdi
   140001d5a:	nop    WORD PTR [rax+rax*1+0x0]
   140001d60:	mov    rdi,QWORD PTR [rbx-0x8]
   140001d64:	sub    rbx,0x8
   140001d68:	test   rdi,rdi
   140001d6b:	je     0x140001db0
   140001d6d:	lea    rcx,[rdi+0x38]
   140001d71:	call   QWORD PTR [rip+0x1d841]        # 0x14001f5b8
   140001d77:	lea    rcx,[rdi+0x30]
   140001d7b:	call   QWORD PTR [rip+0x1d837]        # 0x14001f5b8
   140001d81:	lea    rcx,[rdi+0x28]
   140001d85:	call   QWORD PTR [rip+0x1d82d]        # 0x14001f5b8
   140001d8b:	lea    rcx,[rdi+0x20]
   140001d8f:	call   QWORD PTR [rip+0x1d823]        # 0x14001f5b8
   140001d95:	lea    rcx,[rdi+0x8]
   140001d99:	call   QWORD PTR [rip+0x1d819]        # 0x14001f5b8
   140001d9f:	mov    rcx,rdi
   140001da2:	call   QWORD PTR [rip+0x1d810]        # 0x14001f5b8
   140001da8:	mov    rcx,rdi
   140001dab:	call   0x14001e1c0
   140001db0:	cmp    rbx,rsi
   140001db3:	jne    0x140001d60
   140001db5:	mov    rdi,QWORD PTR [rsp+0x30]
   140001dba:	mov    rbx,QWORD PTR [rsp+0x38]
   140001dbf:	add    rsp,0x20
   140001dc3:	pop    rsi
   140001dc4:	repz ret 
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	cmp    rdx,r8
   140001dd3:	je     0x140001e2d
   140001dd5:	mov    QWORD PTR [rsp+0x8],rbx
   140001dda:	mov    QWORD PTR [rsp+0x10],rsi
   140001ddf:	push   rdi
   140001de0:	sub    rsp,0x20
   140001de4:	mov    rdi,r9
   140001de7:	mov    rsi,r8
   140001dea:	mov    rbx,rdx
   140001ded:	nop    DWORD PTR [rax]
   140001df0:	mov    ecx,0x48
   140001df5:	call   0x14001e1c6
   140001dfa:	test   rax,rax
   140001dfd:	je     0x140001e0c
   140001dff:	mov    rdx,QWORD PTR [rdi]
   140001e02:	mov    rcx,rax
   140001e05:	call   0x140001b60
   140001e0a:	jmp    0x140001e0e
   140001e0c:	xor    eax,eax
   140001e0e:	mov    QWORD PTR [rbx],rax
   140001e11:	add    rbx,0x8
   140001e15:	add    rdi,0x8
   140001e19:	cmp    rbx,rsi
   140001e1c:	jne    0x140001df0
   140001e1e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e23:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e28:	add    rsp,0x20
   140001e2c:	pop    rdi
   140001e2d:	repz ret 
   140001e2f:	int3   
   140001e30:	cmp    rdx,r8
   140001e33:	je     0x140001eb8
   140001e39:	mov    QWORD PTR [rsp+0x18],rbp
   140001e3e:	mov    QWORD PTR [rsp+0x20],rdi
   140001e43:	push   r12
   140001e45:	sub    rsp,0x20
   140001e49:	mov    QWORD PTR [rsp+0x30],rbx
   140001e4e:	mov    rbp,r9
   140001e51:	mov    r12,r8
   140001e54:	mov    QWORD PTR [rsp+0x38],rsi
   140001e59:	mov    rdi,rdx
   140001e5c:	nop    DWORD PTR [rax+0x0]
   140001e60:	mov    ecx,0x10
   140001e65:	call   0x14001e1c6
   140001e6a:	mov    rsi,rax
   140001e6d:	test   rax,rax
   140001e70:	je     0x140001e8c
   140001e72:	mov    rbx,QWORD PTR [rbp+0x0]
   140001e76:	mov    rcx,rax
   140001e79:	mov    rdx,rbx
   140001e7c:	call   QWORD PTR [rip+0x1d756]        # 0x14001f5d8
   140001e82:	mov    r11d,DWORD PTR [rbx+0x8]
   140001e86:	mov    DWORD PTR [rsi+0x8],r11d
   140001e8a:	jmp    0x140001e8e
   140001e8c:	xor    esi,esi
   140001e8e:	mov    QWORD PTR [rdi],rsi
   140001e91:	add    rdi,0x8
   140001e95:	add    rbp,0x8
   140001e99:	cmp    rdi,r12
   140001e9c:	jne    0x140001e60
   140001e9e:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ea3:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ea8:	mov    rbp,QWORD PTR [rsp+0x40]
   140001ead:	mov    rdi,QWORD PTR [rsp+0x48]
   140001eb2:	add    rsp,0x20
   140001eb6:	pop    r12
   140001eb8:	repz ret 
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	cmp    rdx,r8
   140001ec3:	je     0x140001f1d
   140001ec5:	mov    QWORD PTR [rsp+0x8],rbx
   140001eca:	mov    QWORD PTR [rsp+0x10],rsi
   140001ecf:	push   rdi
   140001ed0:	sub    rsp,0x20
   140001ed4:	mov    rdi,r9
   140001ed7:	mov    rsi,r8
   140001eda:	mov    rbx,rdx
   140001edd:	nop    DWORD PTR [rax]
   140001ee0:	mov    ecx,0x78
   140001ee5:	call   0x14001e1c6
   140001eea:	test   rax,rax
   140001eed:	je     0x140001efc
   140001eef:	mov    rdx,QWORD PTR [rdi]
   140001ef2:	mov    rcx,rax
   140001ef5:	call   0x140001c00
   140001efa:	jmp    0x140001efe
   140001efc:	xor    eax,eax
   140001efe:	mov    QWORD PTR [rbx],rax
   140001f01:	add    rbx,0x8
   140001f05:	add    rdi,0x8
   140001f09:	cmp    rbx,rsi
   140001f0c:	jne    0x140001ee0
   140001f0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f13:	mov    rsi,QWORD PTR [rsp+0x38]
   140001f18:	add    rsp,0x20
   140001f1c:	pop    rdi
   140001f1d:	repz ret 
   140001f1f:	int3   
   140001f20:	cmp    rdx,r8
   140001f23:	je     0x140001fae
   140001f29:	mov    QWORD PTR [rsp+0x18],rbp
   140001f2e:	mov    QWORD PTR [rsp+0x20],rdi
   140001f33:	push   r12
   140001f35:	sub    rsp,0x20
   140001f39:	mov    QWORD PTR [rsp+0x30],rbx
   140001f3e:	mov    rbp,r9
   140001f41:	mov    r12,r8
   140001f44:	mov    QWORD PTR [rsp+0x38],rsi
   140001f49:	mov    rdi,rdx
   140001f4c:	nop    DWORD PTR [rax+0x0]
   140001f50:	mov    ecx,0x10
   140001f55:	call   0x14001e1c6
   140001f5a:	mov    rsi,rax
   140001f5d:	test   rax,rax
   140001f60:	je     0x140001f82
   140001f62:	mov    rbx,QWORD PTR [rbp+0x0]
   140001f66:	mov    rcx,rax
   140001f69:	mov    rdx,rbx
   140001f6c:	call   QWORD PTR [rip+0x1d666]        # 0x14001f5d8
   140001f72:	lea    rdx,[rbx+0x8]
   140001f76:	lea    rcx,[rsi+0x8]
   140001f7a:	call   QWORD PTR [rip+0x1d658]        # 0x14001f5d8
   140001f80:	jmp    0x140001f84
   140001f82:	xor    esi,esi
   140001f84:	mov    QWORD PTR [rdi],rsi
   140001f87:	add    rdi,0x8
   140001f8b:	add    rbp,0x8
   140001f8f:	cmp    rdi,r12
   140001f92:	jne    0x140001f50
   140001f94:	mov    rsi,QWORD PTR [rsp+0x38]
   140001f99:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f9e:	mov    rbp,QWORD PTR [rsp+0x40]
   140001fa3:	mov    rdi,QWORD PTR [rsp+0x48]
   140001fa8:	add    rsp,0x20
   140001fac:	pop    r12
   140001fae:	repz ret 
   140001fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001fb5:	mov    QWORD PTR [rsp+0x10],rsi
   140001fba:	push   rdi
   140001fbb:	sub    rsp,0x30
   140001fbf:	xor    r9d,r9d
   140001fc2:	mov    rsi,rdx
   140001fc5:	mov    rdi,rcx
   140001fc8:	lea    edx,[r9+0x28]
   140001fcc:	lea    r8d,[r9+0x8]
   140001fd0:	mov    rcx,rsi
   140001fd3:	mov    BYTE PTR [rsp+0x20],0x0
   140001fd8:	call   QWORD PTR [rip+0x1d52a]        # 0x14001f508
   140001fde:	lea    rcx,[rax+0x18]
   140001fe2:	mov    rbx,rax
   140001fe5:	test   rcx,rcx
   140001fe8:	je     0x140001ff4
   140001fea:	lea    rdx,[rdi+0x18]
   140001fee:	call   QWORD PTR [rip+0x1d5e4]        # 0x14001f5d8
   140001ff4:	lea    rax,[rbx+0x20]
   140001ff8:	test   rax,rax
   140001ffb:	je     0x140002003
   140001ffd:	movzx  ecx,BYTE PTR [rdi+0x20]
   140002001:	mov    BYTE PTR [rax],cl
   140002003:	test   BYTE PTR [rdi],0x1
   140002006:	je     0x14000200e
   140002008:	or     QWORD PTR [rbx],0x1
   14000200c:	jmp    0x140002012
   14000200e:	and    QWORD PTR [rbx],0xfffffffffffffffe
   140002012:	mov    rcx,QWORD PTR [rdi+0x8]
   140002016:	test   rcx,rcx
   140002019:	je     0x140002030
   14000201b:	mov    rdx,rsi
   14000201e:	call   0x140001fb0
   140002023:	mov    QWORD PTR [rbx+0x8],rax
   140002027:	and    QWORD PTR [rax],0x3
   14000202b:	or     QWORD PTR [rax],rbx
   14000202e:	jmp    0x140002038
   140002030:	mov    QWORD PTR [rbx+0x8],0x0
   140002038:	mov    rcx,QWORD PTR [rdi+0x10]
   14000203c:	test   rcx,rcx
   14000203f:	je     0x140002067
   140002041:	mov    rdx,rsi
   140002044:	call   0x140001fb0
   140002049:	mov    QWORD PTR [rbx+0x10],rax
   14000204d:	and    QWORD PTR [rax],0x3
   140002051:	or     QWORD PTR [rax],rbx
   140002054:	mov    rax,rbx
   140002057:	mov    rbx,QWORD PTR [rsp+0x40]
   14000205c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002061:	add    rsp,0x30
   140002065:	pop    rdi
   140002066:	ret    
   140002067:	mov    rsi,QWORD PTR [rsp+0x48]
   14000206c:	mov    QWORD PTR [rbx+0x10],0x0
   140002074:	mov    rax,rbx
   140002077:	mov    rbx,QWORD PTR [rsp+0x40]
   14000207c:	add    rsp,0x30
   140002080:	pop    rdi
   140002081:	ret    
   140002082:	int3   
   140002083:	int3   
   140002084:	int3   
   140002085:	int3   
   140002086:	int3   
   140002087:	int3   
   140002088:	int3   
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	int3   
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	mov    QWORD PTR [rsp+0x8],rbx
   140002095:	mov    QWORD PTR [rsp+0x10],rsi
   14000209a:	push   rdi
   14000209b:	sub    rsp,0x30
   14000209f:	xor    r9d,r9d
   1400020a2:	mov    rsi,rdx
   1400020a5:	mov    rdi,rcx
   1400020a8:	lea    edx,[r9+0x28]
   1400020ac:	lea    r8d,[r9+0x8]
   1400020b0:	mov    rcx,rsi
   1400020b3:	mov    BYTE PTR [rsp+0x20],0x0
   1400020b8:	call   QWORD PTR [rip+0x1d44a]        # 0x14001f508
   1400020be:	lea    rcx,[rax+0x18]
   1400020c2:	mov    rbx,rax
   1400020c5:	test   rcx,rcx
   1400020c8:	je     0x1400020d4
   1400020ca:	lea    rdx,[rdi+0x18]
   1400020ce:	call   QWORD PTR [rip+0x1d504]        # 0x14001f5d8
   1400020d4:	lea    rcx,[rbx+0x20]
   1400020d8:	test   rcx,rcx
   1400020db:	je     0x1400020e7
   1400020dd:	lea    rdx,[rdi+0x20]
   1400020e1:	call   QWORD PTR [rip+0x1d4f1]        # 0x14001f5d8
   1400020e7:	test   BYTE PTR [rdi],0x1
   1400020ea:	je     0x1400020f2
   1400020ec:	or     QWORD PTR [rbx],0x1
   1400020f0:	jmp    0x1400020f6
   1400020f2:	and    QWORD PTR [rbx],0xfffffffffffffffe
   1400020f6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400020fa:	test   rcx,rcx
   1400020fd:	je     0x140002114
   1400020ff:	mov    rdx,rsi
   140002102:	call   0x140002090
   140002107:	mov    QWORD PTR [rbx+0x8],rax
   14000210b:	and    QWORD PTR [rax],0x3
   14000210f:	or     QWORD PTR [rax],rbx
   140002112:	jmp    0x14000211c
   140002114:	mov    QWORD PTR [rbx+0x8],0x0
   14000211c:	mov    rcx,QWORD PTR [rdi+0x10]
   140002120:	test   rcx,rcx
   140002123:	je     0x14000214b
   140002125:	mov    rdx,rsi
   140002128:	call   0x140002090
   14000212d:	mov    QWORD PTR [rbx+0x10],rax
   140002131:	and    QWORD PTR [rax],0x3
   140002135:	or     QWORD PTR [rax],rbx
   140002138:	mov    rax,rbx
   14000213b:	mov    rbx,QWORD PTR [rsp+0x40]
   140002140:	mov    rsi,QWORD PTR [rsp+0x48]
   140002145:	add    rsp,0x30
   140002149:	pop    rdi
   14000214a:	ret    
   14000214b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002150:	mov    QWORD PTR [rbx+0x10],0x0
   140002158:	mov    rax,rbx
   14000215b:	mov    rbx,QWORD PTR [rsp+0x40]
   140002160:	add    rsp,0x30
   140002164:	pop    rdi
   140002165:	ret    
   140002166:	int3   
   140002167:	int3   
   140002168:	int3   
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	test   rdx,rdx
   140002173:	je     0x1400021b8
   140002175:	mov    QWORD PTR [rsp+0x8],rbx
   14000217a:	push   rdi
   14000217b:	sub    rsp,0x20
   14000217f:	mov    eax,DWORD PTR [rcx+0x8]
   140002182:	mov    rbx,rdx
   140002185:	mov    QWORD PTR [rdx],0x0
   14000218c:	mov    DWORD PTR [rdx+0x8],eax
   14000218f:	lea    rdx,[rcx+0x10]
   140002193:	mov    rdi,rcx
   140002196:	lea    rcx,[rbx+0x10]
   14000219a:	call   QWORD PTR [rip+0x1d438]        # 0x14001f5d8
   1400021a0:	lea    rdx,[rdi+0x18]
   1400021a4:	lea    rcx,[rbx+0x18]
   1400021a8:	call   QWORD PTR [rip+0x1d42a]        # 0x14001f5d8
   1400021ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400021b3:	add    rsp,0x20
   1400021b7:	pop    rdi
   1400021b8:	repz ret 
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	cmp    rdx,r8
   1400021c3:	je     0x14000224e
   1400021c9:	mov    QWORD PTR [rsp+0x18],rbp
   1400021ce:	mov    QWORD PTR [rsp+0x20],rsi
   1400021d3:	push   r12
   1400021d5:	sub    rsp,0x20
   1400021d9:	mov    QWORD PTR [rsp+0x30],rbx
   1400021de:	mov    rbp,r9
   1400021e1:	mov    r12,r8
   1400021e4:	mov    QWORD PTR [rsp+0x38],rdi
   1400021e9:	mov    rsi,rdx
   1400021ec:	nop    DWORD PTR [rax+0x0]
   1400021f0:	mov    ecx,0x10
   1400021f5:	call   0x14001e1c6
   1400021fa:	mov    rdi,rax
   1400021fd:	test   rax,rax
   140002200:	je     0x140002222
   140002202:	mov    rbx,QWORD PTR [rbp+0x0]
   140002206:	mov    rcx,rax
   140002209:	mov    rdx,rbx
   14000220c:	call   QWORD PTR [rip+0x1d3c6]        # 0x14001f5d8
   140002212:	mov    r11d,DWORD PTR [rbx+0x8]
   140002216:	mov    DWORD PTR [rdi+0x8],r11d
   14000221a:	mov    ecx,DWORD PTR [rbx+0xc]
   14000221d:	mov    DWORD PTR [rdi+0xc],ecx
   140002220:	jmp    0x140002224
   140002222:	xor    edi,edi
   140002224:	mov    QWORD PTR [rsi],rdi
   140002227:	add    rsi,0x8
   14000222b:	add    rbp,0x8
   14000222f:	cmp    rsi,r12
   140002232:	jne    0x1400021f0
   140002234:	mov    rdi,QWORD PTR [rsp+0x38]
   140002239:	mov    rbx,QWORD PTR [rsp+0x30]
   14000223e:	mov    rbp,QWORD PTR [rsp+0x40]
   140002243:	mov    rsi,QWORD PTR [rsp+0x48]
   140002248:	add    rsp,0x20
   14000224c:	pop    r12
   14000224e:	repz ret 
   140002250:	sub    rsp,0x28
   140002254:	mov    r8,rdx
   140002257:	test   rdx,rdx
   14000225a:	je     0x140002277
   14000225c:	mov    eax,DWORD PTR [rcx+0x8]
   14000225f:	mov    QWORD PTR [rdx],0x0
   140002266:	mov    DWORD PTR [rdx+0x8],eax
   140002269:	lea    rdx,[rcx+0x10]
   14000226d:	lea    rcx,[r8+0x10]
   140002271:	call   QWORD PTR [rip+0x1d361]        # 0x14001f5d8
   140002277:	add    rsp,0x28
   14000227b:	ret    
   14000227c:	int3   
   14000227d:	int3   
   14000227e:	int3   
   14000227f:	int3   
   140002280:	mov    QWORD PTR [rsp+0x10],rbx
   140002285:	mov    QWORD PTR [rsp+0x18],rbp
   14000228a:	push   rsi
   14000228b:	sub    rsp,0x20
   14000228f:	movsxd rax,DWORD PTR [rdx+0xc]
   140002293:	mov    rbp,rdx
   140002296:	lea    rbx,[rdx+rax*8+0x10]
   14000229b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000229f:	lea    rsi,[rdx+rax*8+0x10]
   1400022a4:	cmp    rsi,rbx
   1400022a7:	je     0x1400022d7
   1400022a9:	mov    QWORD PTR [rsp+0x30],rdi
   1400022ae:	xchg   ax,ax
   1400022b0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400022b4:	sub    rbx,0x8
   1400022b8:	test   rdi,rdi
   1400022bb:	je     0x1400022cd
   1400022bd:	mov    rcx,rdi
   1400022c0:	call   0x140001a90
   1400022c5:	mov    rcx,rdi
   1400022c8:	call   0x14001e1c0
   1400022cd:	cmp    rbx,rsi
   1400022d0:	jne    0x1400022b0
   1400022d2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400022d7:	mov    rcx,rbp
   1400022da:	mov    rbx,QWORD PTR [rsp+0x38]
   1400022df:	mov    rbp,QWORD PTR [rsp+0x40]
   1400022e4:	add    rsp,0x20
   1400022e8:	pop    rsi
   1400022e9:	rex.W jmp QWORD PTR [rip+0x1d1f8]        # 0x14001f4e8
   1400022f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400022f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400022fa:	push   rsi
   1400022fb:	sub    rsp,0x20
   1400022ff:	movsxd rax,DWORD PTR [rdx+0xc]
   140002303:	mov    rbp,rdx
   140002306:	lea    rbx,[rdx+rax*8+0x10]
   14000230b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000230f:	lea    rsi,[rdx+rax*8+0x10]
   140002314:	cmp    rsi,rbx
   140002317:	je     0x140002352
   140002319:	mov    QWORD PTR [rsp+0x30],rdi
   14000231e:	xchg   ax,ax
   140002320:	mov    rdi,QWORD PTR [rbx-0x8]
   140002324:	sub    rbx,0x8
   140002328:	test   rdi,rdi
   14000232b:	je     0x140002348
   14000232d:	lea    rcx,[rdi+0x8]
   140002331:	call   QWORD PTR [rip+0x1d281]        # 0x14001f5b8
   140002337:	mov    rcx,rdi
   14000233a:	call   QWORD PTR [rip+0x1d278]        # 0x14001f5b8
   140002340:	mov    rcx,rdi
   140002343:	call   0x14001e1c0
   140002348:	cmp    rbx,rsi
   14000234b:	jne    0x140002320
   14000234d:	mov    rdi,QWORD PTR [rsp+0x30]
   140002352:	mov    rcx,rbp
   140002355:	mov    rbx,QWORD PTR [rsp+0x38]
   14000235a:	mov    rbp,QWORD PTR [rsp+0x40]
   14000235f:	add    rsp,0x20
   140002363:	pop    rsi
   140002364:	rex.W jmp QWORD PTR [rip+0x1d17d]        # 0x14001f4e8
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	mov    QWORD PTR [rsp+0x8],rbx
   140002375:	mov    QWORD PTR [rsp+0x10],rsi
   14000237a:	push   rdi
   14000237b:	sub    rsp,0x20
   14000237f:	mov    rbx,QWORD PTR [rcx+0x10]
   140002383:	mov    rsi,rdx
   140002386:	test   rbx,rbx
   140002389:	je     0x1400023dc
   14000238b:	xor    edi,edi
   14000238d:	nop    DWORD PTR [rax]
   140002390:	lea    rcx,[rbx+0x18]
   140002394:	mov    rdx,rsi
   140002397:	call   QWORD PTR [rip+0x1d24b]        # 0x14001f5e8
   14000239d:	test   eax,eax
   14000239f:	js     0x1400023aa
   1400023a1:	mov    rdi,rbx
   1400023a4:	mov    rbx,QWORD PTR [rbx+0x8]
   1400023a8:	jmp    0x1400023ae
   1400023aa:	mov    rbx,QWORD PTR [rbx+0x10]
   1400023ae:	test   rbx,rbx
   1400023b1:	jne    0x140002390
   1400023b3:	test   rdi,rdi
   1400023b6:	je     0x1400023dc
   1400023b8:	lea    rdx,[rdi+0x18]
   1400023bc:	mov    rcx,rsi
   1400023bf:	call   QWORD PTR [rip+0x1d223]        # 0x14001f5e8
   1400023c5:	test   eax,eax
   1400023c7:	js     0x1400023dc
   1400023c9:	mov    rax,rdi
   1400023cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023d1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400023d6:	add    rsp,0x20
   1400023da:	pop    rdi
   1400023db:	ret    
   1400023dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023e1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400023e6:	xor    eax,eax
   1400023e8:	add    rsp,0x20
   1400023ec:	pop    rdi
   1400023ed:	ret    
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400023fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400023ff:	push   rdi
   140002400:	push   r12
   140002402:	push   r13
   140002404:	sub    rsp,0x20
   140002408:	mov    rsi,rcx
   14000240b:	mov    rcx,QWORD PTR [rcx]
   14000240e:	mov    r13d,edx
   140002411:	mov    edx,0x8
   140002416:	mov    rbp,r9
   140002419:	mov    r12,r8
   14000241c:	call   QWORD PTR [rip+0x1d0be]        # 0x14001f4e0
   140002422:	mov    rdi,QWORD PTR [rsp+0x60]
   140002427:	mov    rbx,rax
   14000242a:	test   rax,rax
   14000242d:	je     0x140002455
   14000242f:	mov    rax,QWORD PTR [rdi]
   140002432:	lea    rcx,[rbx+0x10]
   140002436:	mov    rdx,r12
   140002439:	mov    QWORD PTR [rbx],rax
   14000243c:	mov    DWORD PTR [rbx+0x8],r13d
   140002440:	call   QWORD PTR [rip+0x1d192]        # 0x14001f5d8
   140002446:	lea    rcx,[rbx+0x18]
   14000244a:	mov    rdx,rbp
   14000244d:	call   QWORD PTR [rip+0x1d185]        # 0x14001f5d8
   140002453:	jmp    0x140002457
   140002455:	xor    ebx,ebx
   140002457:	mov    rbp,QWORD PTR [rsp+0x48]
   14000245c:	mov    QWORD PTR [rdi],rbx
   14000245f:	mov    rcx,QWORD PTR [rsi]
   140002462:	mov    rsi,QWORD PTR [rsp+0x50]
   140002467:	inc    DWORD PTR [rcx+0x14]
   14000246a:	mov    rax,rbx
   14000246d:	mov    rbx,QWORD PTR [rsp+0x40]
   140002472:	add    rsp,0x20
   140002476:	pop    r13
   140002478:	pop    r12
   14000247a:	pop    rdi
   14000247b:	ret    
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	mov    QWORD PTR [rsp+0x10],rbx
   140002485:	mov    QWORD PTR [rsp+0x18],rbp
   14000248a:	push   rsi
   14000248b:	sub    rsp,0x20
   14000248f:	movsxd rax,DWORD PTR [rdx+0xc]
   140002493:	mov    rbp,rdx
   140002496:	lea    rbx,[rdx+rax*8+0x10]
   14000249b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000249f:	lea    rsi,[rdx+rax*8+0x10]
   1400024a4:	cmp    rsi,rbx
   1400024a7:	je     0x1400024d8
   1400024a9:	mov    QWORD PTR [rsp+0x30],rdi
   1400024ae:	xchg   ax,ax
   1400024b0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400024b4:	sub    rbx,0x8
   1400024b8:	test   rdi,rdi
   1400024bb:	je     0x1400024ce
   1400024bd:	mov    rcx,rdi
   1400024c0:	call   QWORD PTR [rip+0x1d0f2]        # 0x14001f5b8
   1400024c6:	mov    rcx,rdi
   1400024c9:	call   0x14001e1c0
   1400024ce:	cmp    rbx,rsi
   1400024d1:	jne    0x1400024b0
   1400024d3:	mov    rdi,QWORD PTR [rsp+0x30]
   1400024d8:	mov    rcx,rbp
   1400024db:	mov    rbx,QWORD PTR [rsp+0x38]
   1400024e0:	mov    rbp,QWORD PTR [rsp+0x40]
   1400024e5:	add    rsp,0x20
   1400024e9:	pop    rsi
   1400024ea:	rex.W jmp QWORD PTR [rip+0x1cff7]        # 0x14001f4e8
   1400024f1:	int3   
   1400024f2:	int3   
   1400024f3:	int3   
   1400024f4:	int3   
   1400024f5:	int3   
   1400024f6:	int3   
   1400024f7:	int3   
   1400024f8:	int3   
   1400024f9:	int3   
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	mov    QWORD PTR [rsp+0x8],rbx
   140002505:	mov    QWORD PTR [rsp+0x10],rsi
   14000250a:	push   rdi
   14000250b:	sub    rsp,0x30
   14000250f:	xor    r9d,r9d
   140002512:	mov    rsi,rdx
   140002515:	mov    rdi,rcx
   140002518:	lea    edx,[r9+0x30]
   14000251c:	lea    r8d,[r9+0x8]
   140002520:	mov    rcx,rsi
   140002523:	mov    BYTE PTR [rsp+0x20],0x0
   140002528:	call   QWORD PTR [rip+0x1cfda]        # 0x14001f508
   14000252e:	lea    rcx,[rax+0x18]
   140002532:	mov    rbx,rax
   140002535:	test   rcx,rcx
   140002538:	je     0x140002544
   14000253a:	lea    rdx,[rdi+0x18]
   14000253e:	call   QWORD PTR [rip+0x1cfac]        # 0x14001f4f0
   140002544:	lea    rcx,[rbx+0x20]
   140002548:	test   rcx,rcx
   14000254b:	je     0x140002557
   14000254d:	lea    rdx,[rdi+0x20]
   140002551:	call   QWORD PTR [rip+0x1cfa1]        # 0x14001f4f8
   140002557:	test   BYTE PTR [rdi],0x1
   14000255a:	je     0x140002562
   14000255c:	or     QWORD PTR [rbx],0x1
   140002560:	jmp    0x140002566
   140002562:	and    QWORD PTR [rbx],0xfffffffffffffffe
   140002566:	mov    rcx,QWORD PTR [rdi+0x8]
   14000256a:	test   rcx,rcx
   14000256d:	je     0x140002584
   14000256f:	mov    rdx,rsi
   140002572:	call   0x140002500
   140002577:	mov    QWORD PTR [rbx+0x8],rax
   14000257b:	and    QWORD PTR [rax],0x3
   14000257f:	or     QWORD PTR [rax],rbx
   140002582:	jmp    0x14000258c
   140002584:	mov    QWORD PTR [rbx+0x8],0x0
   14000258c:	mov    rcx,QWORD PTR [rdi+0x10]
   140002590:	test   rcx,rcx
   140002593:	je     0x1400025bb
   140002595:	mov    rdx,rsi
   140002598:	call   0x140002500
   14000259d:	mov    QWORD PTR [rbx+0x10],rax
   1400025a1:	and    QWORD PTR [rax],0x3
   1400025a5:	or     QWORD PTR [rax],rbx
   1400025a8:	mov    rax,rbx
   1400025ab:	mov    rbx,QWORD PTR [rsp+0x40]
   1400025b0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400025b5:	add    rsp,0x30
   1400025b9:	pop    rdi
   1400025ba:	ret    
   1400025bb:	mov    rsi,QWORD PTR [rsp+0x48]
   1400025c0:	mov    QWORD PTR [rbx+0x10],0x0
   1400025c8:	mov    rax,rbx
   1400025cb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400025d0:	add    rsp,0x30
   1400025d4:	pop    rdi
   1400025d5:	ret    
   1400025d6:	int3   
   1400025d7:	int3   
   1400025d8:	int3   
   1400025d9:	int3   
   1400025da:	int3   
   1400025db:	int3   
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	rex push rbp
   1400025e2:	push   r12
   1400025e4:	push   r13
   1400025e6:	sub    rsp,0x20
   1400025ea:	mov    r12d,r8d
   1400025ed:	mov    r8,QWORD PTR [rcx]
   1400025f0:	mov    rbp,rcx
   1400025f3:	mov    ecx,DWORD PTR [r8+0x20]
   1400025f7:	mov    r13,rdx
   1400025fa:	test   ecx,ecx
   1400025fc:	je     0x1400026ab
   140002602:	xor    edx,edx
   140002604:	mov    eax,r12d
   140002607:	mov    QWORD PTR [rsp+0x48],rsi
   14000260c:	div    ecx
   14000260e:	mov    rax,QWORD PTR [r8+0x8]
   140002612:	lea    rsi,[rax+rdx*8]
   140002616:	mov    rax,QWORD PTR [rax+rdx*8]
   14000261a:	cmp    rax,r8
   14000261d:	je     0x140002699
   14000261f:	mov    QWORD PTR [rsp+0x40],rbx
   140002624:	mov    QWORD PTR [rsp+0x50],rdi
   140002629:	nop    DWORD PTR [rax+0x0]
   140002630:	cmp    r12d,DWORD PTR [rax+0x8]
   140002634:	jne    0x140002671
   140002636:	lea    rcx,[rax+0x10]
   14000263a:	mov    rax,QWORD PTR [r13+0x0]
   14000263e:	movsxd rdx,DWORD PTR [rax+0x4]
   140002642:	mov    rax,QWORD PTR [rcx]
   140002645:	cmp    edx,DWORD PTR [rax+0x4]
   140002648:	jne    0x140002671
   14000264a:	mov    rdi,rdx
   14000264d:	call   QWORD PTR [rip+0x1cfa5]        # 0x14001f5f8
   140002653:	mov    rcx,r13
   140002656:	mov    rbx,rax
   140002659:	call   QWORD PTR [rip+0x1cf99]        # 0x14001f5f8
   14000265f:	mov    r8,rdi
   140002662:	mov    rcx,rax
   140002665:	mov    rdx,rbx
   140002668:	call   0x14001e102
   14000266d:	test   eax,eax
   14000266f:	je     0x14000267d
   140002671:	mov    rsi,QWORD PTR [rsi]
   140002674:	mov    rax,QWORD PTR [rsi]
   140002677:	cmp    rax,QWORD PTR [rbp+0x0]
   14000267b:	jne    0x140002630
   14000267d:	mov    rbx,QWORD PTR [rsp+0x40]
   140002682:	mov    rdi,QWORD PTR [rsp+0x50]
   140002687:	mov    rax,rsi
   14000268a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000268f:	add    rsp,0x20
   140002693:	pop    r13
   140002695:	pop    r12
   140002697:	pop    rbp
   140002698:	ret    
   140002699:	mov    rax,rsi
   14000269c:	mov    rsi,QWORD PTR [rsp+0x48]
   1400026a1:	add    rsp,0x20
   1400026a5:	pop    r13
   1400026a7:	pop    r12
   1400026a9:	pop    rbp
   1400026aa:	ret    
   1400026ab:	mov    rax,rbp
   1400026ae:	add    rsp,0x20
   1400026b2:	pop    r13
   1400026b4:	pop    r12
   1400026b6:	pop    rbp
   1400026b7:	ret    
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	rex push rbx
   1400026c2:	sub    rsp,0x20
   1400026c6:	mov    rbx,rcx
   1400026c9:	nop    DWORD PTR [rax+0x0]
   1400026d0:	lea    rcx,[rbx+0x18]
   1400026d4:	call   QWORD PTR [rip+0x1ce4e]        # 0x14001f528
   1400026da:	lea    rcx,[rbx+0x20]
   1400026de:	call   QWORD PTR [rip+0x1ce3c]        # 0x14001f520
   1400026e4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400026e8:	test   rcx,rcx
   1400026eb:	je     0x1400026f2
   1400026ed:	call   0x1400026c0
   1400026f2:	mov    rbx,QWORD PTR [rbx+0x10]
   1400026f6:	test   rbx,rbx
   1400026f9:	jne    0x1400026d0
   1400026fb:	add    rsp,0x20
   1400026ff:	pop    rbx
   140002700:	ret    
   140002701:	int3   
   140002702:	int3   
   140002703:	int3   
   140002704:	int3   
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	rex push rbx
   140002712:	sub    rsp,0x20
   140002716:	mov    rbx,rcx
   140002719:	nop    DWORD PTR [rax+0x0]
   140002720:	lea    rcx,[rbx+0x18]
   140002724:	call   QWORD PTR [rip+0x1ce8e]        # 0x14001f5b8
   14000272a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000272e:	test   rcx,rcx
   140002731:	je     0x140002738
   140002733:	call   0x140002710
   140002738:	mov    rbx,QWORD PTR [rbx+0x10]
   14000273c:	test   rbx,rbx
   14000273f:	jne    0x140002720
   140002741:	add    rsp,0x20
   140002745:	pop    rbx
   140002746:	ret    
   140002747:	int3   
   140002748:	int3   
   140002749:	int3   
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	rex push rbx
   140002752:	sub    rsp,0x20
   140002756:	mov    rbx,rcx
   140002759:	nop    DWORD PTR [rax+0x0]
   140002760:	lea    rcx,[rbx+0x18]
   140002764:	call   QWORD PTR [rip+0x1ce4e]        # 0x14001f5b8
   14000276a:	lea    rcx,[rbx+0x20]
   14000276e:	call   QWORD PTR [rip+0x1ce44]        # 0x14001f5b8
   140002774:	mov    rcx,QWORD PTR [rbx+0x8]
   140002778:	test   rcx,rcx
   14000277b:	je     0x140002782
   14000277d:	call   0x140002750
   140002782:	mov    rbx,QWORD PTR [rbx+0x10]
   140002786:	test   rbx,rbx
   140002789:	jne    0x140002760
   14000278b:	add    rsp,0x20
   14000278f:	pop    rbx
   140002790:	ret    
   140002791:	int3   
   140002792:	int3   
   140002793:	int3   
   140002794:	int3   
   140002795:	int3   
   140002796:	int3   
   140002797:	int3   
   140002798:	int3   
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400027aa:	push   rdi
   1400027ab:	sub    rsp,0x20
   1400027af:	mov    rcx,QWORD PTR [rdx+0x10]
   1400027b3:	movsxd rax,DWORD PTR [rdx+0x4]
   1400027b7:	mov    rsi,rdx
   1400027ba:	lea    rdi,[rcx+rax*8]
   1400027be:	lea    rbx,[rcx+rdx*1]
   1400027c2:	add    rdi,rdx
   1400027c5:	cmp    rbx,rdi
   1400027c8:	je     0x1400027e2
   1400027ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400027d0:	mov    rcx,rbx
   1400027d3:	add    rbx,0x8
   1400027d7:	call   QWORD PTR [rip+0x1cddb]        # 0x14001f5b8
   1400027dd:	cmp    rbx,rdi
   1400027e0:	jne    0x1400027d0
   1400027e2:	mov    edx,0x8
   1400027e7:	mov    rcx,rsi
   1400027ea:	mov    r8,rdx
   1400027ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027f2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400027f7:	add    rsp,0x20
   1400027fb:	pop    rdi
   1400027fc:	rex.W jmp QWORD PTR [rip+0x1cd0d]        # 0x14001f510
   140002803:	int3   
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    QWORD PTR [rsp+0x8],rbx
   140002815:	mov    QWORD PTR [rsp+0x10],rbp
   14000281a:	mov    QWORD PTR [rsp+0x18],rsi
   14000281f:	push   rdi
   140002820:	push   r12
   140002822:	push   r13
   140002824:	push   r14
   140002826:	push   r15
   140002828:	sub    rsp,0x20
   14000282c:	mov    rax,QWORD PTR [rcx]
   14000282f:	mov    rbp,rdx
   140002832:	mov    r14,rcx
   140002835:	mov    r8,QWORD PTR [rax]
   140002838:	mov    rax,QWORD PTR [r8]
   14000283b:	mov    r9d,DWORD PTR [rax+0x4]
   14000283f:	mov    rax,QWORD PTR [rcx+0x8]
   140002843:	mov    rcx,rbp
   140002846:	mov    r8,QWORD PTR [rax]
   140002849:	mov    eax,DWORD PTR [r8+0x4]
   14000284d:	xor    r8d,r8d
   140002850:	lea    r13d,[rax+r9*1+0x1]
   140002855:	mov    edx,r13d
   140002858:	call   QWORD PTR [rip+0x1cc7a]        # 0x14001f4d8
   14000285e:	mov    rcx,rbp
   140002861:	call   QWORD PTR [rip+0x1cd91]        # 0x14001f5f8
   140002867:	mov    r15,QWORD PTR [r14]
   14000286a:	mov    rbx,QWORD PTR [r15]
   14000286d:	mov    rdi,rax
   140002870:	mov    r12,rax
   140002873:	mov    rcx,rbx
   140002876:	call   QWORD PTR [rip+0x1cd7c]        # 0x14001f5f8
   14000287c:	mov    rcx,rbx
   14000287f:	mov    rsi,rax
   140002882:	call   QWORD PTR [rip+0x1cad8]        # 0x14001f360
   140002888:	cmp    rsi,rax
   14000288b:	je     0x1400028a1
   14000288d:	nop    DWORD PTR [rax]
   140002890:	movzx  ecx,BYTE PTR [rsi]
   140002893:	inc    rsi
   140002896:	inc    rdi
   140002899:	mov    BYTE PTR [rdi-0x1],cl
   14000289c:	cmp    rsi,rax
   14000289f:	jne    0x140002890
   1400028a1:	mov    rax,QWORD PTR [r15+0x8]
   1400028a5:	inc    rdi
   1400028a8:	movzx  ecx,BYTE PTR [rax]
   1400028ab:	mov    BYTE PTR [rdi-0x1],cl
   1400028ae:	mov    rbx,QWORD PTR [r14+0x8]
   1400028b2:	mov    rcx,rbx
   1400028b5:	call   QWORD PTR [rip+0x1cd3d]        # 0x14001f5f8
   1400028bb:	mov    rcx,rbx
   1400028be:	mov    rsi,rax
   1400028c1:	call   QWORD PTR [rip+0x1ca99]        # 0x14001f360
   1400028c7:	cmp    rsi,rax
   1400028ca:	je     0x1400028e1
   1400028cc:	nop    DWORD PTR [rax+0x0]
   1400028d0:	movzx  ecx,BYTE PTR [rsi]
   1400028d3:	inc    rsi
   1400028d6:	inc    rdi
   1400028d9:	mov    BYTE PTR [rdi-0x1],cl
   1400028dc:	cmp    rsi,rax
   1400028df:	jne    0x1400028d0
   1400028e1:	mov    rcx,rdi
   1400028e4:	movsxd rax,r13d
   1400028e7:	sub    rcx,r12
   1400028ea:	cmp    rax,rcx
   1400028ed:	je     0x1400028fd
   1400028ef:	sub    edi,r12d
   1400028f2:	mov    rcx,rbp
   1400028f5:	mov    edx,edi
   1400028f7:	call   QWORD PTR [rip+0x1cc93]        # 0x14001f590
   1400028fd:	mov    rbx,QWORD PTR [rsp+0x50]
   140002902:	mov    rsi,QWORD PTR [rsp+0x60]
   140002907:	mov    rax,rbp
   14000290a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000290f:	add    rsp,0x20
   140002913:	pop    r15
   140002915:	pop    r14
   140002917:	pop    r13
   140002919:	pop    r12
   14000291b:	pop    rdi
   14000291c:	ret    
   14000291d:	int3   
   14000291e:	int3   
   14000291f:	int3   
   140002920:	add    rcx,0x10
   140002924:	rex.W jmp QWORD PTR [rip+0x1cc8d]        # 0x14001f5b8
   14000292b:	int3   
   14000292c:	int3   
   14000292d:	int3   
   14000292e:	int3   
   14000292f:	int3   
   140002930:	rex push rbx
   140002932:	sub    rsp,0x20
   140002936:	mov    rbx,rcx
   140002939:	add    rcx,0x18
   14000293d:	call   QWORD PTR [rip+0x1cc75]        # 0x14001f5b8
   140002943:	lea    rcx,[rbx+0x10]
   140002947:	add    rsp,0x20
   14000294b:	pop    rbx
   14000294c:	rex.W jmp QWORD PTR [rip+0x1cc65]        # 0x14001f5b8
   140002953:	int3   
   140002954:	int3   
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	mov    eax,DWORD PTR [rcx+0x8]
   140002963:	lea    r8d,[rax+rdx*1-0x1]
   140002968:	mov    rdx,QWORD PTR [rcx]
   14000296b:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000296f:	jge    0x140002985
   140002971:	movsxd rax,r8d
   140002974:	lea    rcx,[rax+rax*2]
   140002978:	mov    rax,QWORD PTR [rdx+0x10]
   14000297c:	lea    rcx,[rax+rcx*8]
   140002980:	mov    eax,DWORD PTR [rcx+rdx*1+0x4]
   140002984:	ret    
   140002985:	xor    eax,eax
   140002987:	ret    
   140002988:	int3   
   140002989:	int3   
   14000298a:	int3   
   14000298b:	int3   
   14000298c:	int3   
   14000298d:	int3   
   14000298e:	int3   
   14000298f:	int3   
   140002990:	mov    QWORD PTR [rsp+0x10],rbx
   140002995:	mov    QWORD PTR [rsp+0x18],rbp
   14000299a:	mov    QWORD PTR [rsp+0x20],rsi
   14000299f:	push   rdi
   1400029a0:	push   r12
   1400029a2:	push   r13
   1400029a4:	movsxd r9,DWORD PTR [rcx+0x8]
   1400029a8:	xor    r10d,r10d
   1400029ab:	mov    r11d,edx
   1400029ae:	mov    rdi,rcx
   1400029b1:	mov    r12d,r10d
   1400029b4:	mov    ebp,r10d
   1400029b7:	mov    ebx,r10d
   1400029ba:	test   r9d,r9d
   1400029bd:	je     0x140002a01
   1400029bf:	mov    r8,QWORD PTR [rcx]
   1400029c2:	lea    rdx,[r9+r9*2]
   1400029c6:	mov    rax,QWORD PTR [r8+0x10]
   1400029ca:	lea    rcx,[rax+rdx*8]
   1400029ce:	mov    eax,DWORD PTR [rcx+r8*1-0x14]
   1400029d3:	cmp    eax,0x7
   1400029d6:	je     0x1400029fc
   1400029d8:	cmp    eax,0x9
   1400029db:	je     0x1400029f5
   1400029dd:	cmp    eax,0xc
   1400029e0:	je     0x1400029ed
   1400029e2:	cmp    eax,0xe
   1400029e5:	jne    0x140002a01
   1400029e7:	lea    r10d,[rax-0xd]
   1400029eb:	jmp    0x140002a01
   1400029ed:	mov    r12d,0x1
   1400029f3:	jmp    0x140002a01
   1400029f5:	mov    ebp,0x1
   1400029fa:	jmp    0x140002a01
   1400029fc:	mov    ebx,0x1
   140002a01:	mov    r13,QWORD PTR [rdi]
   140002a04:	or     esi,0xffffffff
   140002a07:	mov    QWORD PTR [rsp+0x20],r14
   140002a0c:	cmp    r9d,DWORD PTR [r13+0x4]
   140002a10:	jge    0x140002b26
   140002a16:	lea    r14,[rip+0xffffffffffffd5e3]        # 0x140000000
   140002a1d:	nop    DWORD PTR [rax]
   140002a20:	movsxd rax,DWORD PTR [rdi+0x8]
   140002a24:	lea    r9d,[rax+0x1]
   140002a28:	lea    rcx,[rax+rax*2]
   140002a2c:	mov    DWORD PTR [rdi+0x8],r9d
   140002a30:	mov    rax,QWORD PTR [r13+0x10]
   140002a34:	lea    rdx,[r13+rcx*8+0x0]
   140002a39:	mov    r8d,DWORD PTR [rdx+rax*1+0x4]
   140002a3e:	lea    eax,[r8-0x7]
   140002a42:	cmp    eax,0x48
   140002a45:	ja     0x140002aa7
   140002a47:	cdqe   
   140002a49:	movzx  eax,BYTE PTR [r14+rax*1+0x2b7c]
   140002a52:	mov    ecx,DWORD PTR [r14+rax*4+0x2b54]
   140002a5a:	add    rcx,r14
   140002a5d:	jmp    rcx
   140002a5f:	inc    r10d
   140002a62:	jmp    0x140002aa7
   140002a64:	dec    r10d
   140002a67:	jmp    0x140002aa7
   140002a69:	inc    r12d
   140002a6c:	jmp    0x140002aa7
   140002a6e:	dec    r12d
   140002a71:	jmp    0x140002aa7
   140002a73:	inc    ebp
   140002a75:	jmp    0x140002aa7
   140002a77:	dec    ebp
   140002a79:	jmp    0x140002aa7
   140002a7b:	test   ebp,ebp
   140002a7d:	jne    0x140002aa7
   140002a7f:	test   r10d,r10d
   140002a82:	jne    0x140002aa7
   140002a84:	inc    ebx
   140002a86:	jmp    0x140002aa7
   140002a88:	test   ebp,ebp
   140002a8a:	jne    0x140002aa7
   140002a8c:	test   r10d,r10d
   140002a8f:	jne    0x140002aa7
   140002a91:	dec    ebx
   140002a93:	jmp    0x140002aa7
   140002a95:	test   ebp,ebp
   140002a97:	jne    0x140002aa7
   140002a99:	test   r10d,r10d
   140002a9c:	jne    0x140002aa7
   140002a9e:	sub    ebx,0x2
   140002aa1:	mov    r8d,0x8
   140002aa7:	cmp    r8d,r11d
   140002aaa:	jne    0x140002ad5
   140002aac:	test   r10d,r10d
   140002aaf:	jg     0x140002ad5
   140002ab1:	test   r12d,r12d
   140002ab4:	jg     0x140002ad5
   140002ab6:	test   ebp,ebp
   140002ab8:	jg     0x140002ad5
   140002aba:	cmp    r11d,0x8
   140002abe:	jne    0x140002ac6
   140002ac0:	test   ebx,ebx
   140002ac2:	jle    0x140002b1b
   140002ac4:	jmp    0x140002ae6
   140002ac6:	cmp    r11d,0x5a
   140002aca:	jne    0x140002b1b
   140002acc:	test   ebx,ebx
   140002ace:	jle    0x140002b1b
   140002ad0:	mov    esi,r9d
   140002ad3:	jmp    0x140002adb
   140002ad5:	cmp    r11d,0x5a
   140002ad9:	jne    0x140002ae6
   140002adb:	cmp    r8d,0x10
   140002adf:	jne    0x140002ae6
   140002ae1:	cmp    esi,0xffffffff
   140002ae4:	jne    0x140002b18
   140002ae6:	test   r10d,r10d
   140002ae9:	js     0x140002b1f
   140002aeb:	test   r12d,r12d
   140002aee:	js     0x140002b1f
   140002af0:	test   ebp,ebp
   140002af2:	js     0x140002b1f
   140002af4:	cmp    r11d,0x8
   140002af8:	jne    0x140002afe
   140002afa:	test   ebx,ebx
   140002afc:	js     0x140002b1f
   140002afe:	test   r10d,r10d
   140002b01:	jg     0x140002b09
   140002b03:	cmp    r8d,0x12
   140002b07:	je     0x140002b26
   140002b09:	cmp    r9d,DWORD PTR [r13+0x4]
   140002b0d:	mov    rax,r13
   140002b10:	jl     0x140002a20
   140002b16:	jmp    0x140002b26
   140002b18:	mov    DWORD PTR [rdi+0x8],esi
   140002b1b:	mov    al,0x1
   140002b1d:	jmp    0x140002b37
   140002b1f:	lea    eax,[r9-0x1]
   140002b23:	mov    DWORD PTR [rdi+0x8],eax
   140002b26:	cmp    r11d,0x5a
   140002b2a:	jne    0x140002b35
   140002b2c:	test   ebx,ebx
   140002b2e:	je     0x140002b35
   140002b30:	cmp    esi,0xffffffff
   140002b33:	jne    0x140002b18
   140002b35:	xor    al,al
   140002b37:	mov    r14,QWORD PTR [rsp+0x20]
   140002b3c:	mov    rbx,QWORD PTR [rsp+0x28]
   140002b41:	mov    rbp,QWORD PTR [rsp+0x30]
   140002b46:	mov    rsi,QWORD PTR [rsp+0x38]
   140002b4b:	pop    r13
   140002b4d:	pop    r12
   140002b4f:	pop    rdi
   140002b50:	ret    
   140002b51:	nop    DWORD PTR [rax]
   140002b54:	jnp    0x140002b80
   140002b56:	add    BYTE PTR [rax],al
   140002b58:	mov    BYTE PTR [rdx],ch
   140002b5a:	add    BYTE PTR [rax],al
   140002b5c:	jae    0x140002b88
   140002b5e:	add    BYTE PTR [rax],al
   140002b60:	ja     0x140002b8c
   140002b62:	add    BYTE PTR [rax],al
   140002b64:	imul   ebp,DWORD PTR [rdx],0x2a6e0000
   140002b6a:	add    BYTE PTR [rax],al
   140002b6c:	pop    rdi
   140002b6d:	sub    al,BYTE PTR [rax]
   140002b6f:	add    BYTE PTR [rdx+rbp*1+0x0],ah
   140002b73:	add    BYTE PTR [rbp-0x58ffffd6],dl
   140002b79:	sub    al,BYTE PTR [rax]
   140002b7b:	add    BYTE PTR [rax],al
   140002b7d:	add    DWORD PTR [rdx],eax
   140002b7f:	add    ecx,DWORD PTR [rcx]
   140002b81:	add    al,0x5
   140002b83:	(bad)  
   140002b84:	(bad)  
   140002b85:	or     DWORD PTR [rcx],ecx
   140002b87:	or     DWORD PTR [rcx],ecx
   140002b89:	or     DWORD PTR [rcx],ecx
   140002b8b:	or     DWORD PTR [rcx],ecx
   140002b8d:	or     DWORD PTR [rcx],ecx
   140002b8f:	or     DWORD PTR [rcx],ecx
   140002b91:	or     DWORD PTR [rcx],ecx
   140002b93:	or     DWORD PTR [rcx],ecx
   140002b95:	or     DWORD PTR [rcx],ecx
   140002b97:	or     DWORD PTR [rcx],ecx
   140002b99:	or     DWORD PTR [rcx],ecx
   140002b9b:	or     DWORD PTR [rcx],ecx
   140002b9d:	or     DWORD PTR [rcx],ecx
   140002b9f:	or     DWORD PTR [rcx],ecx
   140002ba1:	or     DWORD PTR [rcx],ecx
   140002ba3:	or     DWORD PTR [rcx],ecx
   140002ba5:	or     DWORD PTR [rcx],ecx
   140002ba7:	or     DWORD PTR [rcx],ecx
   140002ba9:	or     DWORD PTR [rcx],ecx
   140002bab:	or     DWORD PTR [rcx],ecx
   140002bad:	or     DWORD PTR [rcx],ecx
   140002baf:	or     DWORD PTR [rcx],ecx
   140002bb1:	or     DWORD PTR [rcx],ecx
   140002bb3:	or     DWORD PTR [rcx],ecx
   140002bb5:	or     DWORD PTR [rcx],ecx
   140002bb7:	or     DWORD PTR [rcx],ecx
   140002bb9:	or     DWORD PTR [rcx],ecx
   140002bbb:	or     DWORD PTR [rcx],ecx
   140002bbd:	or     DWORD PTR [rcx],ecx
   140002bbf:	or     DWORD PTR [rcx],ecx
   140002bc1:	or     DWORD PTR [rcx],ecx
   140002bc3:	or     DWORD PTR [rax],ecx
   140002bc5:	int3   
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	int3   
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140002bd5:	push   rdi
   140002bd6:	sub    rsp,0x20
   140002bda:	mov    rdi,QWORD PTR [rcx+0x10]
   140002bde:	mov    rbx,rcx
   140002be1:	test   rdi,rdi
   140002be4:	je     0x140002c29
   140002be6:	lea    rcx,[rdi+0x18]
   140002bea:	call   QWORD PTR [rip+0x1c938]        # 0x14001f528
   140002bf0:	lea    rcx,[rdi+0x20]
   140002bf4:	call   QWORD PTR [rip+0x1c926]        # 0x14001f520
   140002bfa:	mov    rcx,QWORD PTR [rdi+0x8]
   140002bfe:	test   rcx,rcx
   140002c01:	je     0x140002c08
   140002c03:	call   0x1400026c0
   140002c08:	mov    rcx,QWORD PTR [rdi+0x10]
   140002c0c:	test   rcx,rcx
   140002c0f:	je     0x140002c16
   140002c11:	call   0x1400026c0
   140002c16:	mov    rdx,QWORD PTR [rbx+0x10]
   140002c1a:	mov    r8d,0x8
   140002c20:	mov    rcx,rbx
   140002c23:	call   QWORD PTR [rip+0x1c897]        # 0x14001f4c0
   140002c29:	mov    rcx,rbx
   140002c2c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c31:	add    rsp,0x20
   140002c35:	pop    rdi
   140002c36:	rex.W jmp QWORD PTR [rip+0x1c88b]        # 0x14001f4c8
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x8],rbx
   140002c45:	push   rdi
   140002c46:	sub    rsp,0x20
   140002c4a:	mov    rdi,QWORD PTR [rcx+0x10]
   140002c4e:	mov    rbx,rcx
   140002c51:	test   rdi,rdi
   140002c54:	je     0x140002c8f
   140002c56:	lea    rcx,[rdi+0x18]
   140002c5a:	call   QWORD PTR [rip+0x1c958]        # 0x14001f5b8
   140002c60:	mov    rcx,QWORD PTR [rdi+0x8]
   140002c64:	test   rcx,rcx
   140002c67:	je     0x140002c6e
   140002c69:	call   0x140002710
   140002c6e:	mov    rcx,QWORD PTR [rdi+0x10]
   140002c72:	test   rcx,rcx
   140002c75:	je     0x140002c7c
   140002c77:	call   0x140002710
   140002c7c:	mov    rdx,QWORD PTR [rbx+0x10]
   140002c80:	mov    r8d,0x8
   140002c86:	mov    rcx,rbx
   140002c89:	call   QWORD PTR [rip+0x1c831]        # 0x14001f4c0
   140002c8f:	mov    rcx,rbx
   140002c92:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c97:	add    rsp,0x20
   140002c9b:	pop    rdi
   140002c9c:	rex.W jmp QWORD PTR [rip+0x1c825]        # 0x14001f4c8
   140002ca3:	int3   
   140002ca4:	int3   
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002cb5:	push   rdi
   140002cb6:	sub    rsp,0x20
   140002cba:	mov    rdi,QWORD PTR [rcx+0x10]
   140002cbe:	mov    rbx,rcx
   140002cc1:	test   rdi,rdi
   140002cc4:	je     0x140002d09
   140002cc6:	lea    rcx,[rdi+0x18]
   140002cca:	call   QWORD PTR [rip+0x1c8e8]        # 0x14001f5b8
   140002cd0:	lea    rcx,[rdi+0x20]
   140002cd4:	call   QWORD PTR [rip+0x1c8de]        # 0x14001f5b8
   140002cda:	mov    rcx,QWORD PTR [rdi+0x8]
   140002cde:	test   rcx,rcx
   140002ce1:	je     0x140002ce8
   140002ce3:	call   0x140002750
   140002ce8:	mov    rcx,QWORD PTR [rdi+0x10]
   140002cec:	test   rcx,rcx
   140002cef:	je     0x140002cf6
   140002cf1:	call   0x140002750
   140002cf6:	mov    rdx,QWORD PTR [rbx+0x10]
   140002cfa:	mov    r8d,0x8
   140002d00:	mov    rcx,rbx
   140002d03:	call   QWORD PTR [rip+0x1c7b7]        # 0x14001f4c0
   140002d09:	mov    rcx,rbx
   140002d0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d11:	add    rsp,0x20
   140002d15:	pop    rdi
   140002d16:	rex.W jmp QWORD PTR [rip+0x1c7ab]        # 0x14001f4c8
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	sub    rsp,0x28
   140002d24:	mov    rdx,QWORD PTR [rcx]
   140002d27:	mov    eax,DWORD PTR [rdx]
   140002d29:	test   eax,eax
   140002d2b:	je     0x140002d3d
   140002d2d:	cmp    eax,0xffffffff
   140002d30:	je     0x140002d9a
   140002d32:	lock add DWORD PTR [rdx],0xffffffff
   140002d36:	setne  al
   140002d39:	test   al,al
   140002d3b:	jne    0x140002d9a
   140002d3d:	mov    QWORD PTR [rsp+0x30],rbx
   140002d42:	mov    QWORD PTR [rsp+0x38],rsi
   140002d47:	mov    rsi,QWORD PTR [rcx]
   140002d4a:	movsxd rax,DWORD PTR [rsi+0xc]
   140002d4e:	mov    QWORD PTR [rsp+0x20],rdi
   140002d53:	lea    rbx,[rsi+rax*8+0x10]
   140002d58:	movsxd rax,DWORD PTR [rsi+0x8]
   140002d5c:	lea    rdi,[rsi+rax*8+0x10]
   140002d61:	cmp    rdi,rbx
   140002d64:	je     0x140002d82
   140002d66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002d70:	sub    rbx,0x8
   140002d74:	mov    rcx,rbx
   140002d77:	call   QWORD PTR [rip+0x1c83b]        # 0x14001f5b8
   140002d7d:	cmp    rbx,rdi
   140002d80:	jne    0x140002d70
   140002d82:	mov    rcx,rsi
   140002d85:	call   QWORD PTR [rip+0x1c75d]        # 0x14001f4e8
   140002d8b:	mov    rdi,QWORD PTR [rsp+0x20]
   140002d90:	mov    rsi,QWORD PTR [rsp+0x38]
   140002d95:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d9a:	add    rsp,0x28
   140002d9e:	ret    
   140002d9f:	int3   
   140002da0:	mov    QWORD PTR [rsp+0x20],rsi
   140002da5:	push   r12
   140002da7:	sub    rsp,0x20
   140002dab:	mov    rax,QWORD PTR [rdx]
   140002dae:	mov    rsi,rcx
   140002db1:	mov    r12,rdx
   140002db4:	mov    ecx,DWORD PTR [rax]
   140002db6:	test   ecx,ecx
   140002db8:	je     0x140002dd8
   140002dba:	cmp    ecx,0xffffffff
   140002dbd:	je     0x140002dc3
   140002dbf:	lock add DWORD PTR [rax],0x1
   140002dc3:	mov    rax,QWORD PTR [rdx]
   140002dc6:	mov    QWORD PTR [rsi],rax
   140002dc9:	mov    rax,rsi
   140002dcc:	mov    rsi,QWORD PTR [rsp+0x48]
   140002dd1:	add    rsp,0x20
   140002dd5:	pop    r12
   140002dd7:	ret    
   140002dd8:	mov    r8d,DWORD PTR [rax+0x8]
   140002ddc:	bt     r8d,0x1f
   140002de1:	jae    0x140002e07
   140002de3:	mov    edx,0x8
   140002de8:	and    r8d,0x7fffffff
   140002def:	xor    r9d,r9d
   140002df2:	mov    rcx,rdx
   140002df5:	call   QWORD PTR [rip+0x1c71d]        # 0x14001f518
   140002dfb:	mov    QWORD PTR [rsi],rax
   140002dfe:	or     DWORD PTR [rax+0x8],0x80000000
   140002e05:	jmp    0x140002e1f
   140002e07:	movsxd r8,DWORD PTR [rax+0x4]
   140002e0b:	mov    edx,0x8
   140002e10:	xor    r9d,r9d
   140002e13:	mov    rcx,rdx
   140002e16:	call   QWORD PTR [rip+0x1c6fc]        # 0x14001f518
   140002e1c:	mov    QWORD PTR [rsi],rax
   140002e1f:	mov    rcx,QWORD PTR [rsi]
   140002e22:	mov    eax,DWORD PTR [rcx+0x8]
   140002e25:	btr    eax,0x1f
   140002e29:	test   eax,eax
   140002e2b:	je     0x140002e9a
   140002e2d:	mov    rdx,QWORD PTR [r12]
   140002e31:	mov    rax,QWORD PTR [rcx+0x10]
   140002e35:	mov    QWORD PTR [rsp+0x30],rbx
   140002e3a:	mov    QWORD PTR [rsp+0x38],rbp
   140002e3f:	mov    QWORD PTR [rsp+0x40],rdi
   140002e44:	lea    rdi,[rcx+rax*1]
   140002e48:	mov    rax,QWORD PTR [rdx+0x10]
   140002e4c:	movsxd rcx,DWORD PTR [rdx+0x4]
   140002e50:	lea    rbp,[rax+rcx*8]
   140002e54:	lea    rbx,[rdx+rax*1]
   140002e58:	add    rbp,rdx
   140002e5b:	cmp    rbx,rbp
   140002e5e:	je     0x140002e7e
   140002e60:	mov    rcx,rdi
   140002e63:	add    rdi,0x8
   140002e67:	test   rcx,rcx
   140002e6a:	je     0x140002e79
   140002e6c:	mov    rdx,rbx
   140002e6f:	call   QWORD PTR [rip+0x1c763]        # 0x14001f5d8
   140002e75:	add    rbx,0x8
   140002e79:	cmp    rbx,rbp
   140002e7c:	jne    0x140002e60
   140002e7e:	mov    rax,QWORD PTR [r12]
   140002e82:	mov    rcx,QWORD PTR [rsi]
   140002e85:	mov    rdi,QWORD PTR [rsp+0x40]
   140002e8a:	mov    eax,DWORD PTR [rax+0x4]
   140002e8d:	mov    rbp,QWORD PTR [rsp+0x38]
   140002e92:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e97:	mov    DWORD PTR [rcx+0x4],eax
   140002e9a:	mov    rax,rsi
   140002e9d:	mov    rsi,QWORD PTR [rsp+0x48]
   140002ea2:	add    rsp,0x20
   140002ea6:	pop    r12
   140002ea8:	ret    
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002eb5:	mov    QWORD PTR [rsp+0x10],rsi
   140002eba:	push   rdi
   140002ebb:	sub    rsp,0x20
   140002ebf:	mov    rax,QWORD PTR [rcx]
   140002ec2:	xor    edi,edi
   140002ec4:	mov    rsi,rdx
   140002ec7:	mov    rbx,rcx
   140002eca:	mov    r8d,edi
   140002ecd:	cmp    DWORD PTR [rax+0x20],edi
   140002ed0:	je     0x140002ee1
   140002ed2:	mov    edx,DWORD PTR [rax+0x24]
   140002ed5:	mov    rcx,rsi
   140002ed8:	call   QWORD PTR [rip+0x1c5f2]        # 0x14001f4d0
   140002ede:	mov    r8d,eax
   140002ee1:	mov    rdx,rsi
   140002ee4:	mov    rcx,rbx
   140002ee7:	call   0x1400025e0
   140002eec:	mov    rcx,QWORD PTR [rbx]
   140002eef:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ef4:	cmp    QWORD PTR [rax],rcx
   140002ef7:	mov    rsi,QWORD PTR [rsp+0x38]
   140002efc:	setne  al
   140002eff:	add    rsp,0x20
   140002f03:	pop    rdi
   140002f04:	ret    
   140002f05:	int3   
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	mov    QWORD PTR [rsp+0x8],rbx
   140002f15:	mov    QWORD PTR [rsp+0x10],rbp
   140002f1a:	mov    QWORD PTR [rsp+0x18],rsi
   140002f1f:	push   rdi
   140002f20:	push   r12
   140002f22:	push   r13
   140002f24:	push   r14
   140002f26:	push   r15
   140002f28:	sub    rsp,0x20
   140002f2c:	mov    rax,QWORD PTR [rcx]
   140002f2f:	mov    rbp,rdx
   140002f32:	mov    r14,rcx
   140002f35:	mov    r8,QWORD PTR [rax]
   140002f38:	mov    rax,QWORD PTR [r8]
   140002f3b:	mov    r9d,DWORD PTR [rax+0x4]
   140002f3f:	mov    rax,QWORD PTR [rcx+0x8]
   140002f43:	mov    rcx,rbp
   140002f46:	mov    r8,QWORD PTR [rax]
   140002f49:	mov    eax,DWORD PTR [r8+0x4]
   140002f4d:	xor    r8d,r8d
   140002f50:	lea    r15d,[rax+r9*1+0x3]
   140002f55:	mov    edx,r15d
   140002f58:	call   QWORD PTR [rip+0x1c57a]        # 0x14001f4d8
   140002f5e:	mov    rcx,rbp
   140002f61:	call   QWORD PTR [rip+0x1c691]        # 0x14001f5f8
   140002f67:	mov    r13,QWORD PTR [r14]
   140002f6a:	mov    rbx,QWORD PTR [r13+0x0]
   140002f6e:	mov    rdi,rax
   140002f71:	mov    r12,rax
   140002f74:	mov    rcx,rbx
   140002f77:	call   QWORD PTR [rip+0x1c67b]        # 0x14001f5f8
   140002f7d:	mov    rcx,rbx
   140002f80:	mov    rsi,rax
   140002f83:	call   QWORD PTR [rip+0x1c3d7]        # 0x14001f360
   140002f89:	cmp    rsi,rax
   140002f8c:	je     0x140002fa1
   140002f8e:	xchg   ax,ax
   140002f90:	movzx  ecx,BYTE PTR [rsi]
   140002f93:	inc    rsi
   140002f96:	inc    rdi
   140002f99:	mov    BYTE PTR [rdi-0x1],cl
   140002f9c:	cmp    rsi,rax
   140002f9f:	jne    0x140002f90
   140002fa1:	mov    rax,QWORD PTR [r13+0x8]
   140002fa5:	movzx  ecx,BYTE PTR [rax]
   140002fa8:	test   cl,cl
   140002faa:	je     0x140002fbe
   140002fac:	nop    DWORD PTR [rax+0x0]
   140002fb0:	inc    rax
   140002fb3:	mov    BYTE PTR [rdi],cl
   140002fb5:	inc    rdi
   140002fb8:	mov    cl,BYTE PTR [rax]
   140002fba:	test   cl,cl
   140002fbc:	jne    0x140002fb0
   140002fbe:	mov    rbx,QWORD PTR [r14+0x8]
   140002fc2:	mov    rcx,rbx
   140002fc5:	call   QWORD PTR [rip+0x1c62d]        # 0x14001f5f8
   140002fcb:	mov    rcx,rbx
   140002fce:	mov    rsi,rax
   140002fd1:	call   QWORD PTR [rip+0x1c389]        # 0x14001f360
   140002fd7:	cmp    rsi,rax
   140002fda:	je     0x140002ff1
   140002fdc:	nop    DWORD PTR [rax+0x0]
   140002fe0:	movzx  ecx,BYTE PTR [rsi]
   140002fe3:	inc    rsi
   140002fe6:	inc    rdi
   140002fe9:	mov    BYTE PTR [rdi-0x1],cl
   140002fec:	cmp    rsi,rax
   140002fef:	jne    0x140002fe0
   140002ff1:	mov    rcx,rdi
   140002ff4:	movsxd rax,r15d
   140002ff7:	sub    rcx,r12
   140002ffa:	cmp    rax,rcx
   140002ffd:	je     0x14000300d
   140002fff:	sub    edi,r12d
   140003002:	mov    rcx,rbp
   140003005:	mov    edx,edi
   140003007:	call   QWORD PTR [rip+0x1c583]        # 0x14001f590
   14000300d:	mov    rbx,QWORD PTR [rsp+0x50]
   140003012:	mov    rsi,QWORD PTR [rsp+0x60]
   140003017:	mov    rax,rbp
   14000301a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000301f:	add    rsp,0x20
   140003023:	pop    r15
   140003025:	pop    r14
   140003027:	pop    r13
   140003029:	pop    r12
   14000302b:	pop    rdi
   14000302c:	ret    
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	mov    QWORD PTR [rsp+0x18],rbx
   140003035:	push   rsi
   140003036:	sub    rsp,0x20
   14000303a:	mov    rax,QWORD PTR [rdx]
   14000303d:	mov    rsi,rcx
   140003040:	mov    rbx,rdx
   140003043:	mov    QWORD PTR [rcx],rax
   140003046:	mov    ecx,DWORD PTR [rax]
   140003048:	test   ecx,ecx
   14000304a:	je     0x140003063
   14000304c:	cmp    ecx,0xffffffff
   14000304f:	je     0x1400030c8
   140003051:	lock add DWORD PTR [rax],0x1
   140003055:	mov    rax,rsi
   140003058:	mov    rbx,QWORD PTR [rsp+0x40]
   14000305d:	add    rsp,0x20
   140003061:	pop    rsi
   140003062:	ret    
   140003063:	mov    edx,DWORD PTR [rax+0x4]
   140003066:	mov    rcx,rsi
   140003069:	mov    QWORD PTR [rsp+0x30],rbp
   14000306e:	mov    QWORD PTR [rsp+0x38],rdi
   140003073:	call   QWORD PTR [rip+0x1c437]        # 0x14001f4b0
   140003079:	mov    r11,QWORD PTR [rsi]
   14000307c:	mov    rcx,QWORD PTR [rbx]
   14000307f:	movsxd rax,DWORD PTR [r11+0xc]
   140003083:	lea    rbp,[r11+rax*8+0x10]
   140003088:	movsxd rax,DWORD PTR [rcx+0x8]
   14000308c:	lea    rdi,[rcx+rax*8+0x10]
   140003091:	movsxd rax,DWORD PTR [r11+0x8]
   140003095:	lea    rbx,[r11+rax*8+0x10]
   14000309a:	cmp    rbx,rbp
   14000309d:	je     0x1400030be
   14000309f:	nop
   1400030a0:	test   rbx,rbx
   1400030a3:	je     0x1400030b1
   1400030a5:	mov    rdx,rdi
   1400030a8:	mov    rcx,rbx
   1400030ab:	call   QWORD PTR [rip+0x1c527]        # 0x14001f5d8
   1400030b1:	add    rbx,0x8
   1400030b5:	add    rdi,0x8
   1400030b9:	cmp    rbx,rbp
   1400030bc:	jne    0x1400030a0
   1400030be:	mov    rbp,QWORD PTR [rsp+0x30]
   1400030c3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400030c8:	mov    rax,rsi
   1400030cb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400030d0:	add    rsp,0x20
   1400030d4:	pop    rsi
   1400030d5:	ret    
   1400030d6:	int3   
   1400030d7:	int3   
   1400030d8:	int3   
   1400030d9:	int3   
   1400030da:	int3   
   1400030db:	int3   
   1400030dc:	int3   
   1400030dd:	int3   
   1400030de:	int3   
   1400030df:	int3   
   1400030e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400030ea:	mov    DWORD PTR [rsp+0x10],edx
   1400030ee:	push   rsi
   1400030ef:	push   rdi
   1400030f0:	push   r12
   1400030f2:	push   r13
   1400030f4:	push   r14
   1400030f6:	sub    rsp,0x20
   1400030fa:	mov    rdx,QWORD PTR [rcx]
   1400030fd:	movsxd r13,r8d
   140003100:	mov    r12,rcx
   140003103:	movsxd rax,DWORD PTR [rdx+0x8]
   140003107:	mov    r8d,r13d
   14000310a:	lea    r14,[rdx+rax*8+0x10]
   14000310f:	lea    rdx,[rsp+0x58]
   140003114:	call   QWORD PTR [rip+0x1c38e]        # 0x14001f4a8
   14000311a:	mov    r10,QWORD PTR [r12]
   14000311e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140003123:	movsxd r9,DWORD PTR [r10+0x8]
   140003127:	mov    rsi,rax
   14000312a:	mov    rdi,r14
   14000312d:	add    rdx,r9
   140003130:	lea    rbx,[r10+r9*8+0x10]
   140003135:	lea    rbp,[r10+rdx*8+0x10]
   14000313a:	cmp    rbx,rbp
   14000313d:	je     0x14000315e
   14000313f:	nop
   140003140:	test   rbx,rbx
   140003143:	je     0x140003151
   140003145:	mov    rdx,rdi
   140003148:	mov    rcx,rbx
   14000314b:	call   QWORD PTR [rip+0x1c487]        # 0x14001f5d8
   140003151:	add    rbx,0x8
   140003155:	add    rdi,0x8
   140003159:	cmp    rbx,rbp
   14000315c:	jne    0x140003140
   14000315e:	mov    r8,QWORD PTR [r12]
   140003162:	movsxd rdx,DWORD PTR [rsp+0x58]
   140003167:	movsxd rcx,DWORD PTR [r8+0x8]
   14000316b:	movsxd rax,DWORD PTR [r8+0xc]
   14000316f:	lea    rdi,[r14+rdx*8]
   140003173:	add    rcx,rdx
   140003176:	lea    rbp,[r8+rax*8+0x10]
   14000317b:	add    rcx,r13
   14000317e:	lea    rbx,[r8+rcx*8+0x10]
   140003183:	cmp    rbx,rbp
   140003186:	je     0x1400031a6
   140003188:	test   rbx,rbx
   14000318b:	je     0x140003199
   14000318d:	mov    rdx,rdi
   140003190:	mov    rcx,rbx
   140003193:	call   QWORD PTR [rip+0x1c43f]        # 0x14001f5d8
   140003199:	add    rbx,0x8
   14000319d:	add    rdi,0x8
   1400031a1:	cmp    rbx,rbp
   1400031a4:	jne    0x140003188
   1400031a6:	mov    eax,DWORD PTR [rsi]
   1400031a8:	test   eax,eax
   1400031aa:	je     0x1400031bc
   1400031ac:	cmp    eax,0xffffffff
   1400031af:	je     0x1400031ee
   1400031b1:	lock add DWORD PTR [rsi],0xffffffff
   1400031b5:	setne  al
   1400031b8:	test   al,al
   1400031ba:	jne    0x1400031ee
   1400031bc:	movsxd rax,DWORD PTR [rsi+0xc]
   1400031c0:	lea    rbx,[rsi+rax*8+0x10]
   1400031c5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400031c9:	lea    rdi,[rsi+rax*8+0x10]
   1400031ce:	cmp    rdi,rbx
   1400031d1:	je     0x1400031e5
   1400031d3:	sub    rbx,0x8
   1400031d7:	mov    rcx,rbx
   1400031da:	call   QWORD PTR [rip+0x1c3d8]        # 0x14001f5b8
   1400031e0:	cmp    rbx,rdi
   1400031e3:	jne    0x1400031d3
   1400031e5:	mov    rcx,rsi
   1400031e8:	call   QWORD PTR [rip+0x1c2fa]        # 0x14001f4e8
   1400031ee:	mov    rdx,QWORD PTR [r12]
   1400031f2:	movsxd rax,DWORD PTR [rsp+0x58]
   1400031f7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400031fc:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003200:	mov    rbp,QWORD PTR [rsp+0x60]
   140003205:	add    rcx,rax
   140003208:	lea    rax,[rdx+rcx*8+0x10]
   14000320d:	add    rsp,0x20
   140003211:	pop    r14
   140003213:	pop    r13
   140003215:	pop    r12
   140003217:	pop    rdi
   140003218:	pop    rsi
   140003219:	ret    
   14000321a:	int3   
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	rex push rbx
   140003222:	push   rsi
   140003223:	push   r14
   140003225:	push   r15
   140003227:	sub    rsp,0x28
   14000322b:	mov    rbx,QWORD PTR [rcx]
   14000322e:	mov    QWORD PTR [rsp+0x20],r13
   140003233:	movsxd r15,r8d
   140003236:	mov    eax,DWORD PTR [rbx]
   140003238:	movsxd r13,edx
   14000323b:	mov    rsi,rcx
   14000323e:	cmp    eax,0x1
   140003241:	je     0x14000324c
   140003243:	test   eax,eax
   140003245:	je     0x14000324c
   140003247:	mov    r14b,0x1
   14000324a:	jmp    0x14000324f
   14000324c:	xor    r14b,r14b
   14000324f:	test   r8d,r8d
   140003252:	je     0x1400033c6
   140003258:	mov    eax,DWORD PTR [rbx+0x8]
   14000325b:	btr    eax,0x1f
   14000325f:	cmp    r15d,eax
   140003262:	jne    0x1400032bd
   140003264:	test   r14b,r14b
   140003267:	jne    0x1400032bd
   140003269:	cmp    r13d,DWORD PTR [rbx+0x4]
   14000326d:	jg     0x140003296
   14000326f:	mov    rcx,QWORD PTR [rbx+0x10]
   140003273:	movsxd rax,DWORD PTR [rbx+0x4]
   140003277:	lea    r8,[rcx+rax*8]
   14000327b:	lea    rdx,[rcx+r13*8]
   14000327f:	mov    rcx,rsi
   140003282:	add    r8,rbx
   140003285:	add    rdx,rbx
   140003288:	call   0x140001b20
   14000328d:	mov    DWORD PTR [rbx+0x4],r13d
   140003291:	jmp    0x1400033cd
   140003296:	mov    rcx,QWORD PTR [rbx+0x10]
   14000329a:	movsxd rax,DWORD PTR [rbx+0x4]
   14000329e:	lea    r8,[rcx+r13*8]
   1400032a2:	lea    rdx,[rcx+rax*8]
   1400032a6:	mov    rcx,rsi
   1400032a9:	add    r8,rbx
   1400032ac:	add    rdx,rbx
   1400032af:	call   0x140001cf0
   1400032b4:	mov    DWORD PTR [rbx+0x4],r13d
   1400032b8:	jmp    0x1400033cd
   1400032bd:	mov    edx,0x8
   1400032c2:	mov    QWORD PTR [rsp+0x50],rbp
   1400032c7:	mov    r8,r15
   1400032ca:	mov    rcx,rdx
   1400032cd:	mov    QWORD PTR [rsp+0x58],rdi
   1400032d2:	mov    QWORD PTR [rsp+0x60],r12
   1400032d7:	call   QWORD PTR [rip+0x1c23b]        # 0x14001f518
   1400032dd:	mov    rbx,rax
   1400032e0:	mov    DWORD PTR [rax+0x4],r13d
   1400032e4:	mov    r8,QWORD PTR [rsi]
   1400032e7:	cmp    r13d,DWORD PTR [r8+0x4]
   1400032eb:	mov    rcx,QWORD PTR [r8+0x10]
   1400032ef:	lea    rdi,[r8+rcx*1]
   1400032f3:	jle    0x140003302
   1400032f5:	movsxd rdx,DWORD PTR [r8+0x4]
   1400032f9:	lea    r12,[rcx+rdx*8]
   1400032fd:	add    r12,r8
   140003300:	jmp    0x140003309
   140003302:	lea    r12,[rcx+r13*8]
   140003306:	add    r12,r8
   140003309:	mov    rax,QWORD PTR [rax+0x10]
   14000330d:	lea    rbp,[rbx+rax*1]
   140003311:	test   r14b,r14b
   140003314:	je     0x140003340
   140003316:	cmp    rdi,r12
   140003319:	je     0x14000337f
   14000331b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003320:	mov    rcx,rbp
   140003323:	add    rbp,0x8
   140003327:	test   rcx,rcx
   14000332a:	je     0x140003339
   14000332c:	mov    rdx,rdi
   14000332f:	call   QWORD PTR [rip+0x1c2a3]        # 0x14001f5d8
   140003335:	add    rdi,0x8
   140003339:	cmp    rdi,r12
   14000333c:	jne    0x140003320
   14000333e:	jmp    0x14000337f
   140003340:	sub    r12,rdi
   140003343:	mov    rdx,rdi
   140003346:	mov    rcx,rbp
   140003349:	and    r12,0xfffffffffffffff8
   14000334d:	mov    r8,r12
   140003350:	call   0x14001e1cc
   140003355:	mov    r9,QWORD PTR [rsi]
   140003358:	add    rbp,r12
   14000335b:	cmp    r13d,DWORD PTR [r9+0x4]
   14000335f:	jge    0x14000337f
   140003361:	movsxd rcx,DWORD PTR [r9+0x4]
   140003365:	mov    rax,QWORD PTR [r9+0x10]
   140003369:	lea    r8,[rax+rcx*8]
   14000336d:	lea    rdx,[rax+r13*8]
   140003371:	mov    rcx,rsi
   140003374:	add    r8,r9
   140003377:	add    rdx,r9
   14000337a:	call   0x140001b20
   14000337f:	mov    rax,QWORD PTR [rsi]
   140003382:	mov    r12,QWORD PTR [rsp+0x60]
   140003387:	mov    rdi,QWORD PTR [rsp+0x58]
   14000338c:	cmp    r13d,DWORD PTR [rax+0x4]
   140003390:	jle    0x1400033ac
   140003392:	movsxd rcx,DWORD PTR [rbx+0x4]
   140003396:	mov    rax,QWORD PTR [rbx+0x10]
   14000339a:	mov    rdx,rbp
   14000339d:	lea    r8,[rax+rcx*8]
   1400033a1:	mov    rcx,rsi
   1400033a4:	add    r8,rbx
   1400033a7:	call   0x140001cf0
   1400033ac:	mov    rax,QWORD PTR [rsi]
   1400033af:	mov    rbp,QWORD PTR [rsp+0x50]
   1400033b4:	mov    ecx,DWORD PTR [rax+0x8]
   1400033b7:	xor    ecx,DWORD PTR [rbx+0x8]
   1400033ba:	btr    ecx,0x1f
   1400033be:	xor    ecx,DWORD PTR [rax+0x8]
   1400033c1:	mov    DWORD PTR [rbx+0x8],ecx
   1400033c4:	jmp    0x1400033cd
   1400033c6:	mov    rbx,QWORD PTR [rip+0x1c163]        # 0x14001f530
   1400033cd:	mov    rcx,QWORD PTR [rsi]
   1400033d0:	mov    r13,QWORD PTR [rsp+0x20]
   1400033d5:	cmp    rcx,rbx
   1400033d8:	je     0x140003427
   1400033da:	mov    eax,DWORD PTR [rcx]
   1400033dc:	test   eax,eax
   1400033de:	je     0x1400033f0
   1400033e0:	cmp    eax,0xffffffff
   1400033e3:	je     0x140003424
   1400033e5:	lock add DWORD PTR [rcx],0xffffffff
   1400033e9:	setne  al
   1400033ec:	test   al,al
   1400033ee:	jne    0x140003424
   1400033f0:	test   r15d,r15d
   1400033f3:	je     0x140003419
   1400033f5:	test   r14b,r14b
   1400033f8:	jne    0x140003419
   1400033fa:	mov    rcx,QWORD PTR [rsi]
   1400033fd:	mov    edx,0x8
   140003402:	mov    r8,rdx
   140003405:	call   QWORD PTR [rip+0x1c105]        # 0x14001f510
   14000340b:	mov    QWORD PTR [rsi],rbx
   14000340e:	add    rsp,0x28
   140003412:	pop    r15
   140003414:	pop    r14
   140003416:	pop    rsi
   140003417:	pop    rbx
   140003418:	ret    
   140003419:	mov    rdx,QWORD PTR [rsi]
   14000341c:	mov    rcx,rsi
   14000341f:	call   0x1400027a0
   140003424:	mov    QWORD PTR [rsi],rbx
   140003427:	add    rsp,0x28
   14000342b:	pop    r15
   14000342d:	pop    r14
   14000342f:	pop    rsi
   140003430:	pop    rbx
   140003431:	ret    
   140003432:	int3   
   140003433:	int3   
   140003434:	int3   
   140003435:	int3   
   140003436:	int3   
   140003437:	int3   
   140003438:	int3   
   140003439:	int3   
   14000343a:	int3   
   14000343b:	int3   
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	mov    QWORD PTR [rsp+0x8],rbx
   140003445:	push   rdi
   140003446:	sub    rsp,0x20
   14000344a:	mov    rax,QWORD PTR [rdx]
   14000344d:	mov    rbx,rcx
   140003450:	mov    rdi,rdx
   140003453:	mov    QWORD PTR [rcx],rax
   140003456:	mov    ecx,DWORD PTR [rax]
   140003458:	test   ecx,ecx
   14000345a:	je     0x140003473
   14000345c:	cmp    ecx,0xffffffff
   14000345f:	je     0x1400034a8
   140003461:	lock add DWORD PTR [rax],0x1
   140003465:	mov    rax,rbx
   140003468:	mov    rbx,QWORD PTR [rsp+0x30]
   14000346d:	add    rsp,0x20
   140003471:	pop    rdi
   140003472:	ret    
   140003473:	mov    edx,DWORD PTR [rax+0x4]
   140003476:	mov    rcx,rbx
   140003479:	call   QWORD PTR [rip+0x1c031]        # 0x14001f4b0
   14000347f:	mov    rcx,QWORD PTR [rbx]
   140003482:	mov    r11,QWORD PTR [rdi]
   140003485:	movsxd rax,DWORD PTR [r11+0x8]
   140003489:	lea    r9,[r11+rax*8+0x10]
   14000348e:	movsxd rax,DWORD PTR [rcx+0xc]
   140003492:	lea    r8,[rcx+rax*8+0x10]
   140003497:	movsxd rax,DWORD PTR [rcx+0x8]
   14000349b:	lea    rdx,[rcx+rax*8+0x10]
   1400034a0:	mov    rcx,rbx
   1400034a3:	call   0x140001dd0
   1400034a8:	mov    rax,rbx
   1400034ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400034b0:	add    rsp,0x20
   1400034b4:	pop    rdi
   1400034b5:	ret    
   1400034b6:	int3   
   1400034b7:	int3   
   1400034b8:	int3   
   1400034b9:	int3   
   1400034ba:	int3   
   1400034bb:	int3   
   1400034bc:	int3   
   1400034bd:	int3   
   1400034be:	int3   
   1400034bf:	int3   
   1400034c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400034c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400034ca:	mov    DWORD PTR [rsp+0x10],edx
   1400034ce:	push   rsi
   1400034cf:	push   rdi
   1400034d0:	push   r12
   1400034d2:	push   r13
   1400034d4:	push   r14
   1400034d6:	sub    rsp,0x20
   1400034da:	mov    rdx,QWORD PTR [rcx]
   1400034dd:	movsxd r13,r8d
   1400034e0:	mov    r12,rcx
   1400034e3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400034e7:	mov    r8d,r13d
   1400034ea:	lea    r14,[rdx+rax*8+0x10]
   1400034ef:	lea    rdx,[rsp+0x58]
   1400034f4:	call   QWORD PTR [rip+0x1bfae]        # 0x14001f4a8
   1400034fa:	mov    r10,QWORD PTR [r12]
   1400034fe:	movsxd rdx,DWORD PTR [rsp+0x58]
   140003503:	movsxd r9,DWORD PTR [r10+0x8]
   140003507:	mov    rsi,rax
   14000350a:	mov    rdi,r14
   14000350d:	add    rdx,r9
   140003510:	lea    rbx,[r10+r9*8+0x10]
   140003515:	lea    rbp,[r10+rdx*8+0x10]
   14000351a:	cmp    rbx,rbp
   14000351d:	je     0x14000354e
   14000351f:	nop
   140003520:	mov    ecx,0x48
   140003525:	call   0x14001e1c6
   14000352a:	test   rax,rax
   14000352d:	je     0x14000353c
   14000352f:	mov    rdx,QWORD PTR [rdi]
   140003532:	mov    rcx,rax
   140003535:	call   0x140001b60
   14000353a:	jmp    0x14000353e
   14000353c:	xor    eax,eax
   14000353e:	mov    QWORD PTR [rbx],rax
   140003541:	add    rbx,0x8
   140003545:	add    rdi,0x8
   140003549:	cmp    rbx,rbp
   14000354c:	jne    0x140003520
   14000354e:	mov    r8,QWORD PTR [r12]
   140003552:	movsxd rdx,DWORD PTR [rsp+0x58]
   140003557:	movsxd rcx,DWORD PTR [r8+0x8]
   14000355b:	movsxd rax,DWORD PTR [r8+0xc]
   14000355f:	lea    rdi,[r14+rdx*8]
   140003563:	add    rcx,rdx
   140003566:	lea    rbp,[r8+rax*8+0x10]
   14000356b:	add    rcx,r13
   14000356e:	lea    rbx,[r8+rcx*8+0x10]
   140003573:	cmp    rbx,rbp
   140003576:	je     0x1400035ae
   140003578:	nop    DWORD PTR [rax+rax*1+0x0]
   140003580:	mov    ecx,0x48
   140003585:	call   0x14001e1c6
   14000358a:	test   rax,rax
   14000358d:	je     0x14000359c
   14000358f:	mov    rdx,QWORD PTR [rdi]
   140003592:	mov    rcx,rax
   140003595:	call   0x140001b60
   14000359a:	jmp    0x14000359e
   14000359c:	xor    eax,eax
   14000359e:	mov    QWORD PTR [rbx],rax
   1400035a1:	add    rbx,0x8
   1400035a5:	add    rdi,0x8
   1400035a9:	cmp    rbx,rbp
   1400035ac:	jne    0x140003580
   1400035ae:	mov    eax,DWORD PTR [rsi]
   1400035b0:	test   eax,eax
   1400035b2:	je     0x1400035c4
   1400035b4:	cmp    eax,0xffffffff
   1400035b7:	je     0x1400035e7
   1400035b9:	lock add DWORD PTR [rsi],0xffffffff
   1400035bd:	setne  al
   1400035c0:	test   al,al
   1400035c2:	jne    0x1400035e7
   1400035c4:	movsxd rax,DWORD PTR [rsi+0xc]
   1400035c8:	mov    rcx,r12
   1400035cb:	lea    r8,[rsi+rax*8+0x10]
   1400035d0:	movsxd rax,DWORD PTR [rsi+0x8]
   1400035d4:	lea    rdx,[rsi+rax*8+0x10]
   1400035d9:	call   0x140001d40
   1400035de:	mov    rcx,rsi
   1400035e1:	call   QWORD PTR [rip+0x1bf01]        # 0x14001f4e8
   1400035e7:	mov    rdx,QWORD PTR [r12]
   1400035eb:	movsxd rax,DWORD PTR [rsp+0x58]
   1400035f0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400035f5:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400035f9:	mov    rbp,QWORD PTR [rsp+0x60]
   1400035fe:	add    rcx,rax
   140003601:	lea    rax,[rdx+rcx*8+0x10]
   140003606:	add    rsp,0x20
   14000360a:	pop    r14
   14000360c:	pop    r13
   14000360e:	pop    r12
   140003610:	pop    rdi
   140003611:	pop    rsi
   140003612:	ret    
   140003613:	int3   
   140003614:	int3   
   140003615:	int3   
   140003616:	int3   
   140003617:	int3   
   140003618:	int3   
   140003619:	int3   
   14000361a:	int3   
   14000361b:	int3   
   14000361c:	int3   
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	mov    QWORD PTR [rsp+0x8],rbx
   140003625:	mov    QWORD PTR [rsp+0x10],rbp
   14000362a:	mov    QWORD PTR [rsp+0x18],rsi
   14000362f:	mov    QWORD PTR [rsp+0x20],rdi
   140003634:	push   r12
   140003636:	sub    rsp,0x20
   14000363a:	mov    r8,QWORD PTR [rcx]
   14000363d:	mov    r12,rcx
   140003640:	movsxd rax,DWORD PTR [r8+0x8]
   140003644:	lea    rdi,[r8+rax*8+0x10]
   140003649:	call   QWORD PTR [rip+0x1be61]        # 0x14001f4b0
   14000364f:	mov    r8,QWORD PTR [r12]
   140003653:	movsxd rdx,DWORD PTR [r8+0xc]
   140003657:	mov    rsi,rax
   14000365a:	lea    rbp,[r8+rdx*8+0x10]
   14000365f:	movsxd rdx,DWORD PTR [r8+0x8]
   140003663:	lea    rbx,[r8+rdx*8+0x10]
   140003668:	cmp    rbx,rbp
   14000366b:	je     0x14000369e
   14000366d:	nop    DWORD PTR [rax]
   140003670:	mov    ecx,0x48
   140003675:	call   0x14001e1c6
   14000367a:	test   rax,rax
   14000367d:	je     0x14000368c
   14000367f:	mov    rdx,QWORD PTR [rdi]
   140003682:	mov    rcx,rax
   140003685:	call   0x140001b60
   14000368a:	jmp    0x14000368e
   14000368c:	xor    eax,eax
   14000368e:	mov    QWORD PTR [rbx],rax
   140003691:	add    rbx,0x8
   140003695:	add    rdi,0x8
   140003699:	cmp    rbx,rbp
   14000369c:	jne    0x140003670
   14000369e:	mov    eax,DWORD PTR [rsi]
   1400036a0:	test   eax,eax
   1400036a2:	je     0x1400036b4
   1400036a4:	cmp    eax,0xffffffff
   1400036a7:	je     0x1400036d7
   1400036a9:	lock add DWORD PTR [rsi],0xffffffff
   1400036ad:	setne  al
   1400036b0:	test   al,al
   1400036b2:	jne    0x1400036d7
   1400036b4:	movsxd rax,DWORD PTR [rsi+0xc]
   1400036b8:	mov    rcx,r12
   1400036bb:	lea    r8,[rsi+rax*8+0x10]
   1400036c0:	movsxd rax,DWORD PTR [rsi+0x8]
   1400036c4:	lea    rdx,[rsi+rax*8+0x10]
   1400036c9:	call   0x140001d40
   1400036ce:	mov    rcx,rsi
   1400036d1:	call   QWORD PTR [rip+0x1be11]        # 0x14001f4e8
   1400036d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036dc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400036e1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400036e6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400036eb:	add    rsp,0x20
   1400036ef:	pop    r12
   1400036f1:	ret    
   1400036f2:	int3   
   1400036f3:	int3   
   1400036f4:	int3   
   1400036f5:	int3   
   1400036f6:	int3   
   1400036f7:	int3   
   1400036f8:	int3   
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	int3   
   1400036fd:	int3   
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	mov    QWORD PTR [rsp+0x8],rbx
   140003705:	mov    QWORD PTR [rsp+0x18],rbp
   14000370a:	mov    QWORD PTR [rsp+0x20],rsi
   14000370f:	mov    DWORD PTR [rsp+0x10],edx
   140003713:	push   rdi
   140003714:	sub    rsp,0x20
   140003718:	mov    rdx,QWORD PTR [rcx]
   14000371b:	movsxd rdi,r8d
   14000371e:	mov    rbp,rcx
   140003721:	movsxd rax,DWORD PTR [rdx+0x8]
   140003725:	mov    r8d,edi
   140003728:	lea    rbx,[rdx+rax*8+0x10]
   14000372d:	lea    rdx,[rsp+0x38]
   140003732:	call   QWORD PTR [rip+0x1bd70]        # 0x14001f4a8
   140003738:	mov    r10,QWORD PTR [rbp+0x0]
   14000373c:	movsxd rdx,DWORD PTR [rsp+0x38]
   140003741:	movsxd r9,DWORD PTR [r10+0x8]
   140003745:	mov    rcx,rbp
   140003748:	mov    rsi,rax
   14000374b:	add    rdx,r9
   14000374e:	lea    r8,[r10+rdx*8+0x10]
   140003753:	lea    rdx,[r10+r9*8+0x10]
   140003758:	mov    r9,rbx
   14000375b:	call   0x140001e30
   140003760:	mov    rdx,QWORD PTR [rbp+0x0]
   140003764:	movsxd r11,DWORD PTR [rsp+0x38]
   140003769:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000376d:	lea    r9,[rbx+r11*8]
   140003771:	lea    r8,[rdx+rcx*8+0x10]
   140003776:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000377a:	add    rcx,r11
   14000377d:	add    rcx,rdi
   140003780:	lea    rdx,[rdx+rcx*8+0x10]
   140003785:	mov    rcx,rbp
   140003788:	call   0x140001e30
   14000378d:	mov    r11d,DWORD PTR [rsi]
   140003790:	test   r11d,r11d
   140003793:	je     0x1400037a6
   140003795:	cmp    r11d,0xffffffff
   140003799:	je     0x1400037b1
   14000379b:	lock add DWORD PTR [rsi],0xffffffff
   14000379f:	setne  al
   1400037a2:	test   al,al
   1400037a4:	jne    0x1400037b1
   1400037a6:	mov    rdx,rsi
   1400037a9:	mov    rcx,rbp
   1400037ac:	call   0x140002480
   1400037b1:	mov    rdx,QWORD PTR [rbp+0x0]
   1400037b5:	movsxd rax,DWORD PTR [rsp+0x38]
   1400037ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037bf:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400037c3:	mov    rbp,QWORD PTR [rsp+0x40]
   1400037c8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400037cd:	add    rcx,rax
   1400037d0:	lea    rax,[rdx+rcx*8+0x10]
   1400037d5:	add    rsp,0x20
   1400037d9:	pop    rdi
   1400037da:	ret    
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400037e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400037ea:	push   rdi
   1400037eb:	sub    rsp,0x20
   1400037ef:	mov    r8,QWORD PTR [rcx]
   1400037f2:	mov    rsi,rcx
   1400037f5:	movsxd rax,DWORD PTR [r8+0x8]
   1400037f9:	lea    rbx,[r8+rax*8+0x10]
   1400037fe:	call   QWORD PTR [rip+0x1bcac]        # 0x14001f4b0
   140003804:	mov    r10,QWORD PTR [rsi]
   140003807:	movsxd rdx,DWORD PTR [r10+0xc]
   14000380b:	mov    r9,rbx
   14000380e:	mov    rcx,rsi
   140003811:	lea    r8,[r10+rdx*8+0x10]
   140003816:	movsxd rdx,DWORD PTR [r10+0x8]
   14000381a:	mov    rdi,rax
   14000381d:	lea    rdx,[r10+rdx*8+0x10]
   140003822:	call   0x140001e30
   140003827:	mov    r11d,DWORD PTR [rdi]
   14000382a:	test   r11d,r11d
   14000382d:	je     0x140003840
   14000382f:	cmp    r11d,0xffffffff
   140003833:	je     0x14000384b
   140003835:	lock add DWORD PTR [rdi],0xffffffff
   140003839:	setne  al
   14000383c:	test   al,al
   14000383e:	jne    0x14000384b
   140003840:	mov    rdx,rdi
   140003843:	mov    rcx,rsi
   140003846:	call   0x140002480
   14000384b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003850:	mov    rsi,QWORD PTR [rsp+0x38]
   140003855:	add    rsp,0x20
   140003859:	pop    rdi
   14000385a:	ret    
   14000385b:	int3   
   14000385c:	int3   
   14000385d:	int3   
   14000385e:	int3   
   14000385f:	int3   
   140003860:	mov    QWORD PTR [rsp+0x8],rbx
   140003865:	push   rdi
   140003866:	sub    rsp,0x20
   14000386a:	mov    rax,QWORD PTR [rdx]
   14000386d:	mov    rbx,rcx
   140003870:	mov    rdi,rdx
   140003873:	mov    ecx,DWORD PTR [rax]
   140003875:	test   ecx,ecx
   140003877:	je     0x140003896
   140003879:	cmp    ecx,0xffffffff
   14000387c:	je     0x140003882
   14000387e:	lock add DWORD PTR [rax],0x1
   140003882:	mov    rax,QWORD PTR [rdx]
   140003885:	mov    QWORD PTR [rbx],rax
   140003888:	mov    rax,rbx
   14000388b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003890:	add    rsp,0x20
   140003894:	pop    rdi
   140003895:	ret    
   140003896:	call   QWORD PTR [rip+0x1bc64]        # 0x14001f500
   14000389c:	mov    QWORD PTR [rbx],rax
   14000389f:	mov    rcx,QWORD PTR [rdi]
   1400038a2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400038a6:	test   rcx,rcx
   1400038a9:	je     0x1400038d9
   1400038ab:	mov    rdx,rax
   1400038ae:	call   0x140002500
   1400038b3:	mov    rcx,QWORD PTR [rbx]
   1400038b6:	mov    QWORD PTR [rcx+0x10],rax
   1400038ba:	mov    rax,QWORD PTR [rbx]
   1400038bd:	mov    rdx,QWORD PTR [rax+0x10]
   1400038c1:	add    rax,0x8
   1400038c5:	mov    ecx,DWORD PTR [rdx]
   1400038c7:	and    ecx,0x3
   1400038ca:	or     rcx,rax
   1400038cd:	mov    QWORD PTR [rdx],rcx
   1400038d0:	mov    rcx,QWORD PTR [rbx]
   1400038d3:	call   QWORD PTR [rip+0x1bbc7]        # 0x14001f4a0
   1400038d9:	mov    rax,rbx
   1400038dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038e1:	add    rsp,0x20
   1400038e5:	pop    rdi
   1400038e6:	ret    
   1400038e7:	int3   
   1400038e8:	int3   
   1400038e9:	int3   
   1400038ea:	int3   
   1400038eb:	int3   
   1400038ec:	int3   
   1400038ed:	int3   
   1400038ee:	int3   
   1400038ef:	int3   
   1400038f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400038f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400038fa:	mov    DWORD PTR [rsp+0x10],edx
   1400038fe:	push   rsi
   1400038ff:	push   rdi
   140003900:	push   r12
   140003902:	push   r13
   140003904:	push   r14
   140003906:	sub    rsp,0x20
   14000390a:	mov    rdx,QWORD PTR [rcx]
   14000390d:	movsxd r13,r8d
   140003910:	mov    r12,rcx
   140003913:	movsxd rax,DWORD PTR [rdx+0x8]
   140003917:	mov    r8d,r13d
   14000391a:	lea    r14,[rdx+rax*8+0x10]
   14000391f:	lea    rdx,[rsp+0x58]
   140003924:	call   QWORD PTR [rip+0x1bb7e]        # 0x14001f4a8
   14000392a:	mov    r10,QWORD PTR [r12]
   14000392e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140003933:	movsxd r9,DWORD PTR [r10+0x8]
   140003937:	mov    rbp,rax
   14000393a:	mov    rdi,r14
   14000393d:	add    rdx,r9
   140003940:	lea    rbx,[r10+r9*8+0x10]
   140003945:	lea    rsi,[r10+rdx*8+0x10]
   14000394a:	cmp    rbx,rsi
   14000394d:	je     0x14000397e
   14000394f:	nop
   140003950:	mov    ecx,0x78
   140003955:	call   0x14001e1c6
   14000395a:	test   rax,rax
   14000395d:	je     0x14000396c
   14000395f:	mov    rdx,QWORD PTR [rdi]
   140003962:	mov    rcx,rax
   140003965:	call   0x140001c00
   14000396a:	jmp    0x14000396e
   14000396c:	xor    eax,eax
   14000396e:	mov    QWORD PTR [rbx],rax
   140003971:	add    rbx,0x8
   140003975:	add    rdi,0x8
   140003979:	cmp    rbx,rsi
   14000397c:	jne    0x140003950
   14000397e:	mov    r8,QWORD PTR [r12]
   140003982:	movsxd rdx,DWORD PTR [rsp+0x58]
   140003987:	movsxd rcx,DWORD PTR [r8+0x8]
   14000398b:	movsxd rax,DWORD PTR [r8+0xc]
   14000398f:	lea    rdi,[r14+rdx*8]
   140003993:	add    rcx,rdx
   140003996:	lea    rsi,[r8+rax*8+0x10]
   14000399b:	add    rcx,r13
   14000399e:	lea    rbx,[r8+rcx*8+0x10]
   1400039a3:	cmp    rbx,rsi
   1400039a6:	je     0x1400039de
   1400039a8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400039b0:	mov    ecx,0x78
   1400039b5:	call   0x14001e1c6
   1400039ba:	test   rax,rax
   1400039bd:	je     0x1400039cc
   1400039bf:	mov    rdx,QWORD PTR [rdi]
   1400039c2:	mov    rcx,rax
   1400039c5:	call   0x140001c00
   1400039ca:	jmp    0x1400039ce
   1400039cc:	xor    eax,eax
   1400039ce:	mov    QWORD PTR [rbx],rax
   1400039d1:	add    rbx,0x8
   1400039d5:	add    rdi,0x8
   1400039d9:	cmp    rbx,rsi
   1400039dc:	jne    0x1400039b0
   1400039de:	mov    eax,DWORD PTR [rbp+0x0]
   1400039e1:	test   eax,eax
   1400039e3:	je     0x1400039f6
   1400039e5:	cmp    eax,0xffffffff
   1400039e8:	je     0x140003a01
   1400039ea:	lock add DWORD PTR [rbp+0x0],0xffffffff
   1400039ef:	setne  al
   1400039f2:	test   al,al
   1400039f4:	jne    0x140003a01
   1400039f6:	mov    rdx,rbp
   1400039f9:	mov    rcx,r12
   1400039fc:	call   0x140002280
   140003a01:	mov    rdx,QWORD PTR [r12]
   140003a05:	movsxd rax,DWORD PTR [rsp+0x58]
   140003a0a:	mov    rbx,QWORD PTR [rsp+0x50]
   140003a0f:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003a13:	mov    rbp,QWORD PTR [rsp+0x60]
   140003a18:	add    rcx,rax
   140003a1b:	lea    rax,[rdx+rcx*8+0x10]
   140003a20:	add    rsp,0x20
   140003a24:	pop    r14
   140003a26:	pop    r13
   140003a28:	pop    r12
   140003a2a:	pop    rdi
   140003a2b:	pop    rsi
   140003a2c:	ret    
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	mov    QWORD PTR [rsp+0x8],rbx
   140003a35:	mov    QWORD PTR [rsp+0x18],rbp
   140003a3a:	mov    QWORD PTR [rsp+0x20],rsi
   140003a3f:	mov    DWORD PTR [rsp+0x10],edx
   140003a43:	push   rdi
   140003a44:	sub    rsp,0x20
   140003a48:	mov    rdx,QWORD PTR [rcx]
   140003a4b:	movsxd rdi,r8d
   140003a4e:	mov    rbp,rcx
   140003a51:	movsxd rax,DWORD PTR [rdx+0x8]
   140003a55:	mov    r8d,edi
   140003a58:	lea    rbx,[rdx+rax*8+0x10]
   140003a5d:	lea    rdx,[rsp+0x38]
   140003a62:	call   QWORD PTR [rip+0x1ba40]        # 0x14001f4a8
   140003a68:	mov    r10,QWORD PTR [rbp+0x0]
   140003a6c:	movsxd rdx,DWORD PTR [rsp+0x38]
   140003a71:	movsxd r9,DWORD PTR [r10+0x8]
   140003a75:	mov    rcx,rbp
   140003a78:	mov    rsi,rax
   140003a7b:	add    rdx,r9
   140003a7e:	lea    r8,[r10+rdx*8+0x10]
   140003a83:	lea    rdx,[r10+r9*8+0x10]
   140003a88:	mov    r9,rbx
   140003a8b:	call   0x140001f20
   140003a90:	mov    rdx,QWORD PTR [rbp+0x0]
   140003a94:	movsxd r11,DWORD PTR [rsp+0x38]
   140003a99:	movsxd rcx,DWORD PTR [rdx+0xc]
   140003a9d:	lea    r9,[rbx+r11*8]
   140003aa1:	lea    r8,[rdx+rcx*8+0x10]
   140003aa6:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003aaa:	add    rcx,r11
   140003aad:	add    rcx,rdi
   140003ab0:	lea    rdx,[rdx+rcx*8+0x10]
   140003ab5:	mov    rcx,rbp
   140003ab8:	call   0x140001f20
   140003abd:	mov    r11d,DWORD PTR [rsi]
   140003ac0:	test   r11d,r11d
   140003ac3:	je     0x140003ad6
   140003ac5:	cmp    r11d,0xffffffff
   140003ac9:	je     0x140003ae1
   140003acb:	lock add DWORD PTR [rsi],0xffffffff
   140003acf:	setne  al
   140003ad2:	test   al,al
   140003ad4:	jne    0x140003ae1
   140003ad6:	mov    rdx,rsi
   140003ad9:	mov    rcx,rbp
   140003adc:	call   0x1400022f0
   140003ae1:	mov    rdx,QWORD PTR [rbp+0x0]
   140003ae5:	movsxd rax,DWORD PTR [rsp+0x38]
   140003aea:	mov    rbx,QWORD PTR [rsp+0x30]
   140003aef:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003af3:	mov    rbp,QWORD PTR [rsp+0x40]
   140003af8:	mov    rsi,QWORD PTR [rsp+0x48]
   140003afd:	add    rcx,rax
   140003b00:	lea    rax,[rdx+rcx*8+0x10]
   140003b05:	add    rsp,0x20
   140003b09:	pop    rdi
   140003b0a:	ret    
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	mov    QWORD PTR [rsp+0x8],rbx
   140003b15:	push   rdi
   140003b16:	sub    rsp,0x20
   140003b1a:	mov    rbx,rcx
   140003b1d:	call   QWORD PTR [rip+0x1b9dd]        # 0x14001f500
   140003b23:	mov    rdx,QWORD PTR [rbx]
   140003b26:	mov    rcx,QWORD PTR [rdx+0x10]
   140003b2a:	mov    rdi,rax
   140003b2d:	test   rcx,rcx
   140003b30:	je     0x140003b49
   140003b32:	mov    rdx,rax
   140003b35:	call   0x140002090
   140003b3a:	lea    rcx,[rdi+0x8]
   140003b3e:	mov    QWORD PTR [rdi+0x10],rax
   140003b42:	and    QWORD PTR [rax],0x3
   140003b46:	or     QWORD PTR [rax],rcx
   140003b49:	mov    rcx,QWORD PTR [rbx]
   140003b4c:	mov    eax,DWORD PTR [rcx]
   140003b4e:	test   eax,eax
   140003b50:	je     0x140003b62
   140003b52:	cmp    eax,0xffffffff
   140003b55:	je     0x140003b6a
   140003b57:	lock add DWORD PTR [rcx],0xffffffff
   140003b5b:	setne  al
   140003b5e:	test   al,al
   140003b60:	jne    0x140003b6a
   140003b62:	mov    rcx,QWORD PTR [rbx]
   140003b65:	call   0x140002cb0
   140003b6a:	mov    rcx,rdi
   140003b6d:	mov    QWORD PTR [rbx],rdi
   140003b70:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b75:	add    rsp,0x20
   140003b79:	pop    rdi
   140003b7a:	rex.W jmp QWORD PTR [rip+0x1b91f]        # 0x14001f4a0
   140003b81:	int3   
   140003b82:	int3   
   140003b83:	int3   
   140003b84:	int3   
   140003b85:	int3   
   140003b86:	int3   
   140003b87:	int3   
   140003b88:	int3   
   140003b89:	int3   
   140003b8a:	int3   
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	mov    QWORD PTR [rsp+0x8],rbx
   140003b95:	push   rdi
   140003b96:	sub    rsp,0x30
   140003b9a:	mov    rbx,rcx
   140003b9d:	mov    rcx,QWORD PTR [rcx]
   140003ba0:	lea    r8,[rip+0xffffffffffffed89]        # 0x140002930
   140003ba7:	lea    rdx,[rip+0xffffffffffffe5c2]        # 0x140002170
   140003bae:	mov    r9d,0x20
   140003bb4:	mov    DWORD PTR [rsp+0x20],0x8
   140003bbc:	call   QWORD PTR [rip+0x1b7ae]        # 0x14001f370
   140003bc2:	mov    rdi,rax
   140003bc5:	mov    rax,QWORD PTR [rbx]
   140003bc8:	mov    ecx,DWORD PTR [rax+0x10]
   140003bcb:	test   ecx,ecx
   140003bcd:	je     0x140003be0
   140003bcf:	cmp    ecx,0xffffffff
   140003bd2:	je     0x140003bf0
   140003bd4:	lock add DWORD PTR [rax+0x10],0xffffffff
   140003bd9:	setne  al
   140003bdc:	test   al,al
   140003bde:	jne    0x140003bf0
   140003be0:	mov    rcx,QWORD PTR [rbx]
   140003be3:	lea    rdx,[rip+0xffffffffffffed46]        # 0x140002930
   140003bea:	call   QWORD PTR [rip+0x1b8c8]        # 0x14001f4b8
   140003bf0:	mov    QWORD PTR [rbx],rdi
   140003bf3:	mov    rbx,QWORD PTR [rsp+0x40]
   140003bf8:	add    rsp,0x30
   140003bfc:	pop    rdi
   140003bfd:	ret    
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	mov    QWORD PTR [rsp+0x8],rbx
   140003c05:	mov    QWORD PTR [rsp+0x18],rbp
   140003c0a:	mov    QWORD PTR [rsp+0x20],rsi
   140003c0f:	mov    DWORD PTR [rsp+0x10],edx
   140003c13:	push   rdi
   140003c14:	sub    rsp,0x20
   140003c18:	mov    rdx,QWORD PTR [rcx]
   140003c1b:	movsxd rdi,r8d
   140003c1e:	mov    rbp,rcx
   140003c21:	movsxd rax,DWORD PTR [rdx+0x8]
   140003c25:	mov    r8d,edi
   140003c28:	lea    rbx,[rdx+rax*8+0x10]
   140003c2d:	lea    rdx,[rsp+0x38]
   140003c32:	call   QWORD PTR [rip+0x1b870]        # 0x14001f4a8
   140003c38:	mov    r10,QWORD PTR [rbp+0x0]
   140003c3c:	movsxd rdx,DWORD PTR [rsp+0x38]
   140003c41:	movsxd r9,DWORD PTR [r10+0x8]
   140003c45:	mov    rcx,rbp
   140003c48:	mov    rsi,rax
   140003c4b:	add    rdx,r9
   140003c4e:	lea    r8,[r10+rdx*8+0x10]
   140003c53:	lea    rdx,[r10+r9*8+0x10]
   140003c58:	mov    r9,rbx
   140003c5b:	call   0x1400021c0
   140003c60:	mov    rdx,QWORD PTR [rbp+0x0]
   140003c64:	movsxd r11,DWORD PTR [rsp+0x38]
   140003c69:	movsxd rcx,DWORD PTR [rdx+0xc]
   140003c6d:	lea    r9,[rbx+r11*8]
   140003c71:	lea    r8,[rdx+rcx*8+0x10]
   140003c76:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003c7a:	add    rcx,r11
   140003c7d:	add    rcx,rdi
   140003c80:	lea    rdx,[rdx+rcx*8+0x10]
   140003c85:	mov    rcx,rbp
   140003c88:	call   0x1400021c0
   140003c8d:	mov    r11d,DWORD PTR [rsi]
   140003c90:	test   r11d,r11d
   140003c93:	je     0x140003ca6
   140003c95:	cmp    r11d,0xffffffff
   140003c99:	je     0x140003cb1
   140003c9b:	lock add DWORD PTR [rsi],0xffffffff
   140003c9f:	setne  al
   140003ca2:	test   al,al
   140003ca4:	jne    0x140003cb1
   140003ca6:	mov    rdx,rsi
   140003ca9:	mov    rcx,rbp
   140003cac:	call   0x140002480
   140003cb1:	mov    rdx,QWORD PTR [rbp+0x0]
   140003cb5:	movsxd rax,DWORD PTR [rsp+0x38]
   140003cba:	mov    rbx,QWORD PTR [rsp+0x30]
   140003cbf:	movsxd rcx,DWORD PTR [rdx+0x8]
   140003cc3:	mov    rbp,QWORD PTR [rsp+0x40]
   140003cc8:	mov    rsi,QWORD PTR [rsp+0x48]
   140003ccd:	add    rcx,rax
   140003cd0:	lea    rax,[rdx+rcx*8+0x10]
   140003cd5:	add    rsp,0x20
   140003cd9:	pop    rdi
   140003cda:	ret    
   140003cdb:	int3   
   140003cdc:	int3   
   140003cdd:	int3   
   140003cde:	int3   
   140003cdf:	int3   
   140003ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ce5:	push   rdi
   140003ce6:	sub    rsp,0x20
   140003cea:	mov    rbx,rdx
   140003ced:	mov    rdi,rcx
   140003cf0:	call   QWORD PTR [rip+0x1b8e2]        # 0x14001f5d8
   140003cf6:	lea    rdx,[rbx+0x8]
   140003cfa:	lea    rcx,[rdi+0x8]
   140003cfe:	call   QWORD PTR [rip+0x1b8d4]        # 0x14001f5d8
   140003d04:	mov    eax,DWORD PTR [rdi+0x10]
   140003d07:	lea    rdx,[rbx+0x20]
   140003d0b:	xor    eax,DWORD PTR [rbx+0x10]
   140003d0e:	and    eax,0x1
   140003d11:	xor    DWORD PTR [rdi+0x10],eax
   140003d14:	mov    ecx,DWORD PTR [rbx+0x10]
   140003d17:	mov    eax,DWORD PTR [rdi+0x10]
   140003d1a:	xor    ecx,eax
   140003d1c:	and    ecx,0x2
   140003d1f:	xor    ecx,eax
   140003d21:	mov    DWORD PTR [rdi+0x10],ecx
   140003d24:	mov    eax,DWORD PTR [rbx+0x14]
   140003d27:	lea    rcx,[rdi+0x20]
   140003d2b:	mov    DWORD PTR [rdi+0x14],eax
   140003d2e:	mov    eax,DWORD PTR [rbx+0x18]
   140003d31:	mov    DWORD PTR [rdi+0x18],eax
   140003d34:	call   QWORD PTR [rip+0x1b89e]        # 0x14001f5d8
   140003d3a:	lea    rdx,[rbx+0x28]
   140003d3e:	lea    rcx,[rdi+0x28]
   140003d42:	call   QWORD PTR [rip+0x1b890]        # 0x14001f5d8
   140003d48:	lea    rdx,[rbx+0x30]
   140003d4c:	lea    rcx,[rdi+0x30]
   140003d50:	call   QWORD PTR [rip+0x1b882]        # 0x14001f5d8
   140003d56:	movzx  r11d,BYTE PTR [rbx+0x38]
   140003d5b:	lea    rdx,[rbx+0x40]
   140003d5f:	lea    rcx,[rdi+0x40]
   140003d63:	mov    BYTE PTR [rdi+0x38],r11b
   140003d67:	call   0x140003440
   140003d6c:	mov    r11d,DWORD PTR [rbx+0x48]
   140003d70:	lea    rdx,[rbx+0x58]
   140003d74:	mov    DWORD PTR [rdi+0x48],r11d
   140003d78:	movzx  eax,BYTE PTR [rbx+0x4c]
   140003d7c:	lea    rcx,[rdi+0x58]
   140003d80:	mov    BYTE PTR [rdi+0x4c],al
   140003d83:	movzx  eax,BYTE PTR [rbx+0x4d]
   140003d87:	mov    BYTE PTR [rdi+0x4d],al
   140003d8a:	movzx  eax,BYTE PTR [rbx+0x4e]
   140003d8e:	mov    BYTE PTR [rdi+0x4e],al
   140003d91:	movzx  eax,BYTE PTR [rbx+0x4f]
   140003d95:	mov    BYTE PTR [rdi+0x4f],al
   140003d98:	movzx  eax,BYTE PTR [rbx+0x50]
   140003d9c:	mov    BYTE PTR [rdi+0x50],al
   140003d9f:	call   QWORD PTR [rip+0x1b833]        # 0x14001f5d8
   140003da5:	movzx  r11d,BYTE PTR [rbx+0x60]
   140003daa:	mov    BYTE PTR [rdi+0x60],r11b
   140003dae:	movzx  eax,BYTE PTR [rbx+0x61]
   140003db2:	mov    BYTE PTR [rdi+0x61],al
   140003db5:	movzx  eax,BYTE PTR [rbx+0x62]
   140003db9:	mov    BYTE PTR [rdi+0x62],al
   140003dbc:	movzx  eax,BYTE PTR [rbx+0x63]
   140003dc0:	mov    BYTE PTR [rdi+0x63],al
   140003dc3:	movzx  eax,BYTE PTR [rbx+0x64]
   140003dc7:	mov    BYTE PTR [rdi+0x64],al
   140003dca:	movzx  eax,BYTE PTR [rbx+0x65]
   140003dce:	mov    BYTE PTR [rdi+0x65],al
   140003dd1:	movzx  eax,BYTE PTR [rbx+0x66]
   140003dd5:	mov    BYTE PTR [rdi+0x66],al
   140003dd8:	movzx  eax,BYTE PTR [rbx+0x67]
   140003ddc:	mov    BYTE PTR [rdi+0x67],al
   140003ddf:	movzx  eax,BYTE PTR [rbx+0x68]
   140003de3:	mov    BYTE PTR [rdi+0x68],al
   140003de6:	mov    eax,DWORD PTR [rbx+0x6c]
   140003de9:	mov    rbx,QWORD PTR [rsp+0x30]
   140003dee:	mov    DWORD PTR [rdi+0x6c],eax
   140003df1:	mov    rax,rdi
   140003df4:	add    rsp,0x20
   140003df8:	pop    rdi
   140003df9:	ret    
   140003dfa:	int3   
   140003dfb:	int3   
   140003dfc:	int3   
   140003dfd:	int3   
   140003dfe:	int3   
   140003dff:	int3   
   140003e00:	mov    QWORD PTR [rsp+0x8],rbx
   140003e05:	push   rdi
   140003e06:	sub    rsp,0x20
   140003e0a:	mov    rax,QWORD PTR [rdx]
   140003e0d:	mov    rbx,rcx
   140003e10:	mov    rdi,rdx
   140003e13:	mov    QWORD PTR [rcx],rax
   140003e16:	mov    ecx,DWORD PTR [rax]
   140003e18:	test   ecx,ecx
   140003e1a:	je     0x140003e33
   140003e1c:	cmp    ecx,0xffffffff
   140003e1f:	je     0x140003e68
   140003e21:	lock add DWORD PTR [rax],0x1
   140003e25:	mov    rax,rbx
   140003e28:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e2d:	add    rsp,0x20
   140003e31:	pop    rdi
   140003e32:	ret    
   140003e33:	mov    edx,DWORD PTR [rax+0x4]
   140003e36:	mov    rcx,rbx
   140003e39:	call   QWORD PTR [rip+0x1b671]        # 0x14001f4b0
   140003e3f:	mov    rcx,QWORD PTR [rbx]
   140003e42:	mov    r11,QWORD PTR [rdi]
   140003e45:	movsxd rax,DWORD PTR [r11+0x8]
   140003e49:	lea    r9,[r11+rax*8+0x10]
   140003e4e:	movsxd rax,DWORD PTR [rcx+0xc]
   140003e52:	lea    r8,[rcx+rax*8+0x10]
   140003e57:	movsxd rax,DWORD PTR [rcx+0x8]
   140003e5b:	lea    rdx,[rcx+rax*8+0x10]
   140003e60:	mov    rcx,rbx
   140003e63:	call   0x140001e30
   140003e68:	mov    rax,rbx
   140003e6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e70:	add    rsp,0x20
   140003e74:	pop    rdi
   140003e75:	ret    
   140003e76:	int3   
   140003e77:	int3   
   140003e78:	int3   
   140003e79:	int3   
   140003e7a:	int3   
   140003e7b:	int3   
   140003e7c:	int3   
   140003e7d:	int3   
   140003e7e:	int3   
   140003e7f:	int3   
   140003e80:	mov    QWORD PTR [rsp+0x8],rbx
   140003e85:	push   rdi
   140003e86:	sub    rsp,0x20
   140003e8a:	mov    rax,QWORD PTR [rdx]
   140003e8d:	mov    rbx,rcx
   140003e90:	mov    rdi,rdx
   140003e93:	mov    QWORD PTR [rcx],rax
   140003e96:	mov    ecx,DWORD PTR [rax]
   140003e98:	test   ecx,ecx
   140003e9a:	je     0x140003eb3
   140003e9c:	cmp    ecx,0xffffffff
   140003e9f:	je     0x140003ee8
   140003ea1:	lock add DWORD PTR [rax],0x1
   140003ea5:	mov    rax,rbx
   140003ea8:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ead:	add    rsp,0x20
   140003eb1:	pop    rdi
   140003eb2:	ret    
   140003eb3:	mov    edx,DWORD PTR [rax+0x4]
   140003eb6:	mov    rcx,rbx
   140003eb9:	call   QWORD PTR [rip+0x1b5f1]        # 0x14001f4b0
   140003ebf:	mov    rcx,QWORD PTR [rbx]
   140003ec2:	mov    r11,QWORD PTR [rdi]
   140003ec5:	movsxd rax,DWORD PTR [r11+0x8]
   140003ec9:	lea    r9,[r11+rax*8+0x10]
   140003ece:	movsxd rax,DWORD PTR [rcx+0xc]
   140003ed2:	lea    r8,[rcx+rax*8+0x10]
   140003ed7:	movsxd rax,DWORD PTR [rcx+0x8]
   140003edb:	lea    rdx,[rcx+rax*8+0x10]
   140003ee0:	mov    rcx,rbx
   140003ee3:	call   0x140001ec0
   140003ee8:	mov    rax,rbx
   140003eeb:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ef0:	add    rsp,0x20
   140003ef4:	pop    rdi
   140003ef5:	ret    
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	int3   
   140003efd:	int3   
   140003efe:	int3   
   140003eff:	int3   
   140003f00:	mov    QWORD PTR [rsp+0x8],rbx
   140003f05:	mov    QWORD PTR [rsp+0x10],rbp
   140003f0a:	mov    QWORD PTR [rsp+0x18],rsi
   140003f0f:	mov    QWORD PTR [rsp+0x20],rdi
   140003f14:	push   r12
   140003f16:	sub    rsp,0x20
   140003f1a:	mov    r8,QWORD PTR [rcx]
   140003f1d:	mov    r12,rcx
   140003f20:	movsxd rax,DWORD PTR [r8+0x8]
   140003f24:	lea    rdi,[r8+rax*8+0x10]
   140003f29:	call   QWORD PTR [rip+0x1b581]        # 0x14001f4b0
   140003f2f:	mov    r8,QWORD PTR [r12]
   140003f33:	movsxd rdx,DWORD PTR [r8+0xc]
   140003f37:	mov    rsi,rax
   140003f3a:	lea    rbp,[r8+rdx*8+0x10]
   140003f3f:	movsxd rdx,DWORD PTR [r8+0x8]
   140003f43:	lea    rbx,[r8+rdx*8+0x10]
   140003f48:	cmp    rbx,rbp
   140003f4b:	je     0x140003f7e
   140003f4d:	nop    DWORD PTR [rax]
   140003f50:	mov    ecx,0x78
   140003f55:	call   0x14001e1c6
   140003f5a:	test   rax,rax
   140003f5d:	je     0x140003f6c
   140003f5f:	mov    rdx,QWORD PTR [rdi]
   140003f62:	mov    rcx,rax
   140003f65:	call   0x140001c00
   140003f6a:	jmp    0x140003f6e
   140003f6c:	xor    eax,eax
   140003f6e:	mov    QWORD PTR [rbx],rax
   140003f71:	add    rbx,0x8
   140003f75:	add    rdi,0x8
   140003f79:	cmp    rbx,rbp
   140003f7c:	jne    0x140003f50
   140003f7e:	mov    eax,DWORD PTR [rsi]
   140003f80:	test   eax,eax
   140003f82:	je     0x140003f94
   140003f84:	cmp    eax,0xffffffff
   140003f87:	je     0x140003f9f
   140003f89:	lock add DWORD PTR [rsi],0xffffffff
   140003f8d:	setne  al
   140003f90:	test   al,al
   140003f92:	jne    0x140003f9f
   140003f94:	mov    rdx,rsi
   140003f97:	mov    rcx,r12
   140003f9a:	call   0x140002280
   140003f9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fa4:	mov    rbp,QWORD PTR [rsp+0x38]
   140003fa9:	mov    rsi,QWORD PTR [rsp+0x40]
   140003fae:	mov    rdi,QWORD PTR [rsp+0x48]
   140003fb3:	add    rsp,0x20
   140003fb7:	pop    r12
   140003fb9:	ret    
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	int3   
   140003fbd:	int3   
   140003fbe:	int3   
   140003fbf:	int3   
   140003fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140003fc5:	push   rdi
   140003fc6:	sub    rsp,0x20
   140003fca:	mov    rax,QWORD PTR [rdx]
   140003fcd:	mov    rbx,rcx
   140003fd0:	mov    rdi,rdx
   140003fd3:	mov    QWORD PTR [rcx],rax
   140003fd6:	mov    ecx,DWORD PTR [rax]
   140003fd8:	test   ecx,ecx
   140003fda:	je     0x140003ff3
   140003fdc:	cmp    ecx,0xffffffff
   140003fdf:	je     0x140004028
   140003fe1:	lock add DWORD PTR [rax],0x1
   140003fe5:	mov    rax,rbx
   140003fe8:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fed:	add    rsp,0x20
   140003ff1:	pop    rdi
   140003ff2:	ret    
   140003ff3:	mov    edx,DWORD PTR [rax+0x4]
   140003ff6:	mov    rcx,rbx
   140003ff9:	call   QWORD PTR [rip+0x1b4b1]        # 0x14001f4b0
   140003fff:	mov    rcx,QWORD PTR [rbx]
   140004002:	mov    r11,QWORD PTR [rdi]
   140004005:	movsxd rax,DWORD PTR [r11+0x8]
   140004009:	lea    r9,[r11+rax*8+0x10]
   14000400e:	movsxd rax,DWORD PTR [rcx+0xc]
   140004012:	lea    r8,[rcx+rax*8+0x10]
   140004017:	movsxd rax,DWORD PTR [rcx+0x8]
   14000401b:	lea    rdx,[rcx+rax*8+0x10]
   140004020:	mov    rcx,rbx
   140004023:	call   0x140001f20
   140004028:	mov    rax,rbx
   14000402b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004030:	add    rsp,0x20
   140004034:	pop    rdi
   140004035:	ret    
   140004036:	int3   
   140004037:	int3   
   140004038:	int3   
   140004039:	int3   
   14000403a:	int3   
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	mov    QWORD PTR [rsp+0x8],rbx
   140004045:	push   rdi
   140004046:	sub    rsp,0x20
   14000404a:	mov    rax,QWORD PTR [rdx]
   14000404d:	mov    rbx,rcx
   140004050:	mov    rdi,rdx
   140004053:	mov    ecx,DWORD PTR [rax]
   140004055:	test   ecx,ecx
   140004057:	je     0x140004076
   140004059:	cmp    ecx,0xffffffff
   14000405c:	je     0x140004062
   14000405e:	lock add DWORD PTR [rax],0x1
   140004062:	mov    rax,QWORD PTR [rdx]
   140004065:	mov    QWORD PTR [rbx],rax
   140004068:	mov    rax,rbx
   14000406b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004070:	add    rsp,0x20
   140004074:	pop    rdi
   140004075:	ret    
   140004076:	call   QWORD PTR [rip+0x1b484]        # 0x14001f500
   14000407c:	mov    QWORD PTR [rbx],rax
   14000407f:	mov    rcx,QWORD PTR [rdi]
   140004082:	mov    rcx,QWORD PTR [rcx+0x10]
   140004086:	test   rcx,rcx
   140004089:	je     0x1400040b9
   14000408b:	mov    rdx,rax
   14000408e:	call   0x140001fb0
   140004093:	mov    rcx,QWORD PTR [rbx]
   140004096:	mov    QWORD PTR [rcx+0x10],rax
   14000409a:	mov    rax,QWORD PTR [rbx]
   14000409d:	mov    rdx,QWORD PTR [rax+0x10]
   1400040a1:	add    rax,0x8
   1400040a5:	mov    ecx,DWORD PTR [rdx]
   1400040a7:	and    ecx,0x3
   1400040aa:	or     rcx,rax
   1400040ad:	mov    QWORD PTR [rdx],rcx
   1400040b0:	mov    rcx,QWORD PTR [rbx]
   1400040b3:	call   QWORD PTR [rip+0x1b3e7]        # 0x14001f4a0
   1400040b9:	mov    rax,rbx
   1400040bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040c1:	add    rsp,0x20
   1400040c5:	pop    rdi
   1400040c6:	ret    
   1400040c7:	int3   
   1400040c8:	int3   
   1400040c9:	int3   
   1400040ca:	int3   
   1400040cb:	int3   
   1400040cc:	int3   
   1400040cd:	int3   
   1400040ce:	int3   
   1400040cf:	int3   
   1400040d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040d5:	push   rdi
   1400040d6:	sub    rsp,0x20
   1400040da:	mov    rax,QWORD PTR [rdx]
   1400040dd:	mov    rbx,rcx
   1400040e0:	mov    rdi,rdx
   1400040e3:	mov    ecx,DWORD PTR [rax]
   1400040e5:	test   ecx,ecx
   1400040e7:	je     0x140004106
   1400040e9:	cmp    ecx,0xffffffff
   1400040ec:	je     0x1400040f2
   1400040ee:	lock add DWORD PTR [rax],0x1
   1400040f2:	mov    rax,QWORD PTR [rdx]
   1400040f5:	mov    QWORD PTR [rbx],rax
   1400040f8:	mov    rax,rbx
   1400040fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140004100:	add    rsp,0x20
   140004104:	pop    rdi
   140004105:	ret    
   140004106:	call   QWORD PTR [rip+0x1b3f4]        # 0x14001f500
   14000410c:	mov    QWORD PTR [rbx],rax
   14000410f:	mov    rcx,QWORD PTR [rdi]
   140004112:	mov    rcx,QWORD PTR [rcx+0x10]
   140004116:	test   rcx,rcx
   140004119:	je     0x140004149
   14000411b:	mov    rdx,rax
   14000411e:	call   0x140002090
   140004123:	mov    rcx,QWORD PTR [rbx]
   140004126:	mov    QWORD PTR [rcx+0x10],rax
   14000412a:	mov    rax,QWORD PTR [rbx]
   14000412d:	mov    rdx,QWORD PTR [rax+0x10]
   140004131:	add    rax,0x8
   140004135:	mov    ecx,DWORD PTR [rdx]
   140004137:	and    ecx,0x3
   14000413a:	or     rcx,rax
   14000413d:	mov    QWORD PTR [rdx],rcx
   140004140:	mov    rcx,QWORD PTR [rbx]
   140004143:	call   QWORD PTR [rip+0x1b357]        # 0x14001f4a0
   140004149:	mov    rax,rbx
   14000414c:	mov    rbx,QWORD PTR [rsp+0x30]
   140004151:	add    rsp,0x20
   140004155:	pop    rdi
   140004156:	ret    
   140004157:	int3   
   140004158:	int3   
   140004159:	int3   
   14000415a:	int3   
   14000415b:	int3   
   14000415c:	int3   
   14000415d:	int3   
   14000415e:	int3   
   14000415f:	int3   
   140004160:	mov    QWORD PTR [rsp+0x8],rbx
   140004165:	push   rdi
   140004166:	sub    rsp,0x20
   14000416a:	mov    rbx,rcx
   14000416d:	call   QWORD PTR [rip+0x1b44d]        # 0x14001f5c0
   140004173:	lea    rcx,[rbx+0x8]
   140004177:	call   QWORD PTR [rip+0x1b443]        # 0x14001f5c0
   14000417d:	and    DWORD PTR [rbx+0x10],0xfffffffc
   140004181:	xor    edi,edi
   140004183:	lea    rcx,[rbx+0x20]
   140004187:	mov    DWORD PTR [rbx+0x14],edi
   14000418a:	mov    DWORD PTR [rbx+0x18],edi
   14000418d:	call   QWORD PTR [rip+0x1b42d]        # 0x14001f5c0
   140004193:	lea    rcx,[rbx+0x28]
   140004197:	call   QWORD PTR [rip+0x1b423]        # 0x14001f5c0
   14000419d:	lea    rcx,[rbx+0x30]
   1400041a1:	call   QWORD PTR [rip+0x1b419]        # 0x14001f5c0
   1400041a7:	mov    BYTE PTR [rbx+0x38],dil
   1400041ab:	mov    rax,QWORD PTR [rip+0x1b396]        # 0x14001f548
   1400041b2:	mov    QWORD PTR [rbx+0x40],rax
   1400041b6:	lea    rcx,[rbx+0x58]
   1400041ba:	mov    DWORD PTR [rbx+0x48],edi
   1400041bd:	mov    BYTE PTR [rbx+0x4c],dil
   1400041c1:	mov    BYTE PTR [rbx+0x4d],dil
   1400041c5:	mov    BYTE PTR [rbx+0x4e],dil
   1400041c9:	mov    BYTE PTR [rbx+0x4f],dil
   1400041cd:	mov    BYTE PTR [rbx+0x50],dil
   1400041d1:	call   QWORD PTR [rip+0x1b3e9]        # 0x14001f5c0
   1400041d7:	mov    BYTE PTR [rbx+0x60],dil
   1400041db:	mov    BYTE PTR [rbx+0x61],dil
   1400041df:	mov    BYTE PTR [rbx+0x62],dil
   1400041e3:	mov    BYTE PTR [rbx+0x63],dil
   1400041e7:	mov    BYTE PTR [rbx+0x64],dil
   1400041eb:	mov    BYTE PTR [rbx+0x65],dil
   1400041ef:	mov    BYTE PTR [rbx+0x66],dil
   1400041f3:	mov    BYTE PTR [rbx+0x67],dil
   1400041f7:	mov    BYTE PTR [rbx+0x68],dil
   1400041fb:	mov    DWORD PTR [rbx+0x6c],edi
   1400041fe:	mov    rax,rbx
   140004201:	mov    rbx,QWORD PTR [rsp+0x30]
   140004206:	add    rsp,0x20
   14000420a:	pop    rdi
   14000420b:	ret    
   14000420c:	int3   
   14000420d:	int3   
   14000420e:	int3   
   14000420f:	int3   
   140004210:	rex push rdi
   140004212:	sub    rsp,0x20
   140004216:	mov    rdi,rcx
   140004219:	add    rcx,0x58
   14000421d:	call   QWORD PTR [rip+0x1b395]        # 0x14001f5b8
   140004223:	mov    rdx,QWORD PTR [rdi+0x40]
   140004227:	lea    rcx,[rdi+0x40]
   14000422b:	mov    eax,DWORD PTR [rdx]
   14000422d:	test   eax,eax
   14000422f:	je     0x140004241
   140004231:	cmp    eax,0xffffffff
   140004234:	je     0x14000426e
   140004236:	lock add DWORD PTR [rdx],0xffffffff
   14000423a:	setne  al
   14000423d:	test   al,al
   14000423f:	jne    0x14000426e
   140004241:	mov    QWORD PTR [rsp+0x30],rbx
   140004246:	mov    rbx,QWORD PTR [rcx]
   140004249:	movsxd rax,DWORD PTR [rbx+0xc]
   14000424d:	lea    r8,[rbx+rax*8+0x10]
   140004252:	movsxd rax,DWORD PTR [rbx+0x8]
   140004256:	lea    rdx,[rbx+rax*8+0x10]
   14000425b:	call   0x140001d40
   140004260:	mov    rcx,rbx
   140004263:	call   QWORD PTR [rip+0x1b27f]        # 0x14001f4e8
   140004269:	mov    rbx,QWORD PTR [rsp+0x30]
   14000426e:	lea    rcx,[rdi+0x30]
   140004272:	call   QWORD PTR [rip+0x1b340]        # 0x14001f5b8
   140004278:	lea    rcx,[rdi+0x28]
   14000427c:	call   QWORD PTR [rip+0x1b336]        # 0x14001f5b8
   140004282:	lea    rcx,[rdi+0x20]
   140004286:	call   QWORD PTR [rip+0x1b32c]        # 0x14001f5b8
   14000428c:	lea    rcx,[rdi+0x8]
   140004290:	call   QWORD PTR [rip+0x1b322]        # 0x14001f5b8
   140004296:	mov    rcx,rdi
   140004299:	add    rsp,0x20
   14000429d:	pop    rdi
   14000429e:	rex.W jmp QWORD PTR [rip+0x1b313]        # 0x14001f5b8
   1400042a5:	int3   
   1400042a6:	int3   
   1400042a7:	int3   
   1400042a8:	int3   
   1400042a9:	int3   
   1400042aa:	int3   
   1400042ab:	int3   
   1400042ac:	int3   
   1400042ad:	int3   
   1400042ae:	int3   
   1400042af:	int3   
   1400042b0:	rex push rbp
   1400042b2:	push   rsi
   1400042b3:	push   rdi
   1400042b4:	sub    rsp,0x20
   1400042b8:	movsxd rbp,DWORD PTR [rcx+0x8]
   1400042bc:	mov    rdi,rdx
   1400042bf:	mov    edx,r8d
   1400042c2:	mov    rsi,rcx
   1400042c5:	call   0x140002990
   1400042ca:	mov    rcx,rdi
   1400042cd:	call   QWORD PTR [rip+0x1b2ed]        # 0x14001f5c0
   1400042d3:	cmp    ebp,DWORD PTR [rsi+0x8]
   1400042d6:	jg     0x1400043f6
   1400042dc:	mov    QWORD PTR [rsp+0x50],r12
   1400042e1:	lea    rax,[rbp+rbp*2+0x0]
   1400042e6:	mov    QWORD PTR [rsp+0x48],rbx
   1400042eb:	lea    r12,[rax*8-0x18]
   1400042f3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004300:	mov    rax,QWORD PTR [rsi]
   140004303:	inc    ebp
   140004305:	mov    rdx,QWORD PTR [rax+0x10]
   140004309:	add    rdx,r12
   14000430c:	add    r12,0x18
   140004310:	mov    r9d,DWORD PTR [rdx+rax*1+0x14]
   140004315:	mov    r8d,DWORD PTR [rdx+rax*1+0x10]
   14000431a:	lea    rcx,[rdx+rax*1+0x8]
   14000431f:	lea    rdx,[rsp+0x40]
   140004324:	call   QWORD PTR [rip+0x1b2a6]        # 0x14001f5d0
   14000432a:	mov    r11,QWORD PTR [rdi]
   14000432d:	mov    edx,DWORD PTR [r11+0x4]
   140004331:	test   edx,edx
   140004333:	je     0x1400043ca
   140004339:	mov    rax,QWORD PTR [rsp+0x40]
   14000433e:	cmp    DWORD PTR [rax+0x4],0x0
   140004342:	je     0x1400043ca
   140004348:	dec    edx
   14000434a:	mov    rcx,rdi
   14000434d:	call   QWORD PTR [rip+0x1b235]        # 0x14001f588
   140004353:	lea    rcx,[rsp+0x40]
   140004358:	xor    edx,edx
   14000435a:	movzx  ebx,al
   14000435d:	call   QWORD PTR [rip+0x1b225]        # 0x14001f588
   140004363:	cmp    bl,0x61
   140004366:	jl     0x14000436d
   140004368:	cmp    bl,0x7a
   14000436b:	jle    0x14000438b
   14000436d:	cmp    bl,0x41
   140004370:	jl     0x140004377
   140004372:	cmp    bl,0x5a
   140004375:	jle    0x14000438b
   140004377:	cmp    bl,0x30
   14000437a:	jl     0x140004381
   14000437c:	cmp    bl,0x39
   14000437f:	jle    0x14000438b
   140004381:	cmp    bl,0x5f
   140004384:	je     0x14000438b
   140004386:	cmp    bl,0x24
   140004389:	jne    0x1400043ab
   14000438b:	cmp    al,0x61
   14000438d:	jl     0x140004393
   14000438f:	cmp    al,0x7a
   140004391:	jle    0x1400043bf
   140004393:	cmp    al,0x41
   140004395:	jl     0x14000439b
   140004397:	cmp    al,0x5a
   140004399:	jle    0x1400043bf
   14000439b:	cmp    al,0x30
   14000439d:	jl     0x1400043a3
   14000439f:	cmp    al,0x39
   1400043a1:	jle    0x1400043bf
   1400043a3:	cmp    al,0x5f
   1400043a5:	je     0x1400043bf
   1400043a7:	cmp    al,0x24
   1400043a9:	je     0x1400043bf
   1400043ab:	cmp    bl,0x3c
   1400043ae:	jne    0x1400043b6
   1400043b0:	cmp    al,0x3a
   1400043b2:	je     0x1400043bf
   1400043b4:	jmp    0x1400043ca
   1400043b6:	cmp    bl,0x3e
   1400043b9:	jne    0x1400043ca
   1400043bb:	cmp    al,bl
   1400043bd:	jne    0x1400043ca
   1400043bf:	mov    dl,0x20
   1400043c1:	mov    rcx,rdi
   1400043c4:	call   QWORD PTR [rip+0x1b1ce]        # 0x14001f598
   1400043ca:	lea    rdx,[rsp+0x40]
   1400043cf:	mov    rcx,rdi
   1400043d2:	call   QWORD PTR [rip+0x1b208]        # 0x14001f5e0
   1400043d8:	lea    rcx,[rsp+0x40]
   1400043dd:	call   QWORD PTR [rip+0x1b1d5]        # 0x14001f5b8
   1400043e3:	cmp    ebp,DWORD PTR [rsi+0x8]
   1400043e6:	jle    0x140004300
   1400043ec:	mov    r12,QWORD PTR [rsp+0x50]
   1400043f1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400043f6:	mov    rax,rdi
   1400043f9:	add    rsp,0x20
   1400043fd:	pop    rdi
   1400043fe:	pop    rsi
   1400043ff:	pop    rbp
   140004400:	ret    
   140004401:	int3   
   140004402:	int3   
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	mov    QWORD PTR [rsp+0x8],rcx
   140004415:	push   rbx
   140004416:	push   rdi
   140004417:	push   r13
   140004419:	push   r14
   14000441b:	sub    rsp,0x68
   14000441f:	mov    rbx,QWORD PTR [rdx+0x10]
   140004423:	mov    r13,rdx
   140004426:	mov    rdi,rcx
   140004429:	movsxd rdx,DWORD PTR [rbx+0x8]
   14000442d:	mov    eax,DWORD PTR [rbx+0xc]
   140004430:	sub    eax,edx
   140004432:	test   eax,eax
   140004434:	jg     0x14000444b
   140004436:	lea    rcx,[rsp+0x28]
   14000443b:	call   QWORD PTR [rip+0x1b17f]        # 0x14001f5c0
   140004441:	mov    DWORD PTR [rsp+0x30],0x0
   140004449:	jmp    0x140004467
   14000444b:	mov    rbx,QWORD PTR [rbx+rdx*8+0x10]
   140004450:	lea    rcx,[rsp+0x28]
   140004455:	mov    rdx,rbx
   140004458:	call   QWORD PTR [rip+0x1b17a]        # 0x14001f5d8
   14000445e:	mov    r11d,DWORD PTR [rbx+0x8]
   140004462:	mov    DWORD PTR [rsp+0x30],r11d
   140004467:	lea    rdx,[rsp+0x28]
   14000446c:	lea    rcx,[rsp+0x20]
   140004471:	call   QWORD PTR [rip+0x1b161]        # 0x14001f5d8
   140004477:	lea    rcx,[rsp+0x28]
   14000447c:	call   QWORD PTR [rip+0x1b136]        # 0x14001f5b8
   140004482:	mov    rax,QWORD PTR [rdi+0x58]
   140004486:	lea    r14,[rdi+0x58]
   14000448a:	xor    r8d,r8d
   14000448d:	cmp    DWORD PTR [rax+0x20],r8d
   140004491:	je     0x1400044a4
   140004493:	mov    edx,DWORD PTR [rax+0x24]
   140004496:	lea    rcx,[rsp+0x20]
   14000449b:	call   QWORD PTR [rip+0x1b02f]        # 0x14001f4d0
   1400044a1:	mov    r8d,eax
   1400044a4:	lea    rdx,[rsp+0x20]
   1400044a9:	mov    rcx,r14
   1400044ac:	call   0x1400025e0
   1400044b1:	mov    rcx,QWORD PTR [r14]
   1400044b4:	cmp    QWORD PTR [rax],rcx
   1400044b7:	jne    0x1400044cf
   1400044b9:	lea    rcx,[rsp+0x20]
   1400044be:	call   QWORD PTR [rip+0x1b0f4]        # 0x14001f5b8
   1400044c4:	add    rsp,0x68
   1400044c8:	pop    r14
   1400044ca:	pop    r13
   1400044cc:	pop    rdi
   1400044cd:	pop    rbx
   1400044ce:	ret    
   1400044cf:	mov    rcx,QWORD PTR [r13+0x10]
   1400044d3:	mov    QWORD PTR [rsp+0x48],r15
   1400044d8:	mov    r15d,0x1
   1400044de:	mov    eax,DWORD PTR [rcx+0xc]
   1400044e1:	mov    r8,r15
   1400044e4:	mov    QWORD PTR [rsp+0x28],r15
   1400044e9:	sub    eax,DWORD PTR [rcx+0x8]
   1400044ec:	cmp    eax,r8d
   1400044ef:	jle    0x140004840
   1400044f5:	mov    QWORD PTR [rsp+0x60],rbp
   1400044fa:	mov    QWORD PTR [rsp+0x58],rsi
   1400044ff:	mov    QWORD PTR [rsp+0x50],r12
   140004504:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004510:	mov    rax,QWORD PTR [r13+0x10]
   140004514:	lea    rcx,[rsp+0x98]
   14000451c:	movsxd rdx,DWORD PTR [rax+0x8]
   140004520:	add    rdx,r8
   140004523:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
   140004528:	call   QWORD PTR [rip+0x1b0aa]        # 0x14001f5d8
   14000452e:	mov    rcx,QWORD PTR [r14]
   140004531:	xor    eax,eax
   140004533:	cmp    DWORD PTR [rcx+0x20],eax
   140004536:	je     0x140004549
   140004538:	mov    edx,DWORD PTR [rcx+0x24]
   14000453b:	lea    rcx,[rsp+0x98]
   140004543:	call   QWORD PTR [rip+0x1af87]        # 0x14001f4d0
   140004549:	lea    rdx,[rsp+0x98]
   140004551:	mov    r8d,eax
   140004554:	mov    rcx,r14
   140004557:	call   0x1400025e0
   14000455c:	mov    rcx,QWORD PTR [r14]
   14000455f:	cmp    QWORD PTR [rax],rcx
   140004562:	je     0x14000462b
   140004568:	lea    rcx,[rsp+0xa0]
   140004570:	call   QWORD PTR [rip+0x1b04a]        # 0x14001f5c0
   140004576:	lea    rdx,[rip+0x1b253]        # 0x14001f7d0
   14000457d:	lea    rcx,[rsp+0xa0]
   140004585:	call   QWORD PTR [rip+0x1aff5]        # 0x14001f580
   14000458b:	lea    rcx,[rsp+0xa0]
   140004593:	mov    rdx,r13
   140004596:	call   QWORD PTR [rip+0x1b044]        # 0x14001f5e0
   14000459c:	lea    rdx,[rip+0x1b205]        # 0x14001f7a8
   1400045a3:	lea    rcx,[rsp+0xa0]
   1400045ab:	call   QWORD PTR [rip+0x1afcf]        # 0x14001f580
   1400045b1:	lea    rdx,[rsp+0x20]
   1400045b6:	lea    rcx,[rsp+0xa0]
   1400045be:	call   QWORD PTR [rip+0x1b01c]        # 0x14001f5e0
   1400045c4:	lea    rdx,[rip+0x1b1d1]        # 0x14001f79c
   1400045cb:	lea    rcx,[rsp+0xa0]
   1400045d3:	call   QWORD PTR [rip+0x1afa7]        # 0x14001f580
   1400045d9:	lea    rdx,[rsp+0x98]
   1400045e1:	lea    rcx,[rsp+0xa0]
   1400045e9:	call   QWORD PTR [rip+0x1aff1]        # 0x14001f5e0
   1400045ef:	lea    rdx,[rip+0x1b18a]        # 0x14001f780
   1400045f6:	lea    rcx,[rsp+0xa0]
   1400045fe:	call   QWORD PTR [rip+0x1af7c]        # 0x14001f580
   140004604:	lea    rcx,[rsp+0xa0]
   14000460c:	call   QWORD PTR [rip+0x1afe6]        # 0x14001f5f8
   140004612:	mov    rcx,rdi
   140004615:	mov    rdx,rax
   140004618:	call   0x140019d80
   14000461d:	lea    rcx,[rsp+0xa0]
   140004625:	call   QWORD PTR [rip+0x1af8d]        # 0x14001f5b8
   14000462b:	mov    rax,QWORD PTR [rdi+0x48]
   14000462f:	mov    rbx,QWORD PTR [rax+0x10]
   140004633:	test   rbx,rbx
   140004636:	je     0x140004800
   14000463c:	xor    edi,edi
   14000463e:	xchg   ax,ax
   140004640:	lea    rcx,[rbx+0x18]
   140004644:	lea    rdx,[rsp+0x98]
   14000464c:	call   QWORD PTR [rip+0x1af96]        # 0x14001f5e8
   140004652:	test   eax,eax
   140004654:	js     0x14000465f
   140004656:	mov    rdi,rbx
   140004659:	mov    rbx,QWORD PTR [rbx+0x8]
   14000465d:	jmp    0x140004663
   14000465f:	mov    rbx,QWORD PTR [rbx+0x10]
   140004663:	test   rbx,rbx
   140004666:	jne    0x140004640
   140004668:	test   rdi,rdi
   14000466b:	je     0x1400047f8
   140004671:	lea    rdx,[rdi+0x18]
   140004675:	lea    rcx,[rsp+0x98]
   14000467d:	call   QWORD PTR [rip+0x1af65]        # 0x14001f5e8
   140004683:	test   eax,eax
   140004685:	js     0x1400047e4
   14000468b:	mov    rax,QWORD PTR [r13+0x18]
   14000468f:	xor    esi,esi
   140004691:	xor    ebp,ebp
   140004693:	mov    ecx,DWORD PTR [rax+0xc]
   140004696:	sub    ecx,DWORD PTR [rax+0x8]
   140004699:	test   ecx,ecx
   14000469b:	jle    0x140004714
   14000469d:	nop    DWORD PTR [rax]
   1400046a0:	mov    rax,QWORD PTR [r13+0x18]
   1400046a4:	movsxd rcx,DWORD PTR [rax+0x8]
   1400046a8:	add    rcx,rbp
   1400046ab:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
   1400046b0:	movsxd rax,DWORD PTR [rcx+0x8]
   1400046b4:	mov    r12,QWORD PTR [rcx+rax*8+0x10]
   1400046b9:	mov    rax,QWORD PTR [r12]
   1400046bd:	movsxd rcx,DWORD PTR [rax+0x4]
   1400046c1:	mov    rax,QWORD PTR [rsp+0x98]
   1400046c9:	cmp    ecx,DWORD PTR [rax+0x4]
   1400046cc:	jne    0x140004701
   1400046ce:	mov    rdi,rcx
   1400046d1:	lea    rcx,[rsp+0x98]
   1400046d9:	call   QWORD PTR [rip+0x1af19]        # 0x14001f5f8
   1400046df:	mov    rcx,r12
   1400046e2:	mov    rbx,rax
   1400046e5:	call   QWORD PTR [rip+0x1af0d]        # 0x14001f5f8
   1400046eb:	mov    r8,rdi
   1400046ee:	mov    rcx,rax
   1400046f1:	mov    rdx,rbx
   1400046f4:	call   0x14001e102
   1400046f9:	test   eax,eax
   1400046fb:	je     0x1400047ee
   140004701:	mov    rax,QWORD PTR [r13+0x18]
   140004705:	inc    esi
   140004707:	inc    rbp
   14000470a:	mov    ecx,DWORD PTR [rax+0xc]
   14000470d:	sub    ecx,DWORD PTR [rax+0x8]
   140004710:	cmp    esi,ecx
   140004712:	jl     0x1400046a0
   140004714:	lea    rcx,[rsp+0xa8]
   14000471c:	call   QWORD PTR [rip+0x1ae9e]        # 0x14001f5c0
   140004722:	lea    rdx,[rip+0x1b0a7]        # 0x14001f7d0
   140004729:	lea    rcx,[rsp+0xa8]
   140004731:	call   QWORD PTR [rip+0x1ae49]        # 0x14001f580
   140004737:	lea    rcx,[rsp+0xa8]
   14000473f:	mov    rdx,r13
   140004742:	call   QWORD PTR [rip+0x1ae98]        # 0x14001f5e0
   140004748:	lea    rdx,[rip+0x1b011]        # 0x14001f760
   14000474f:	lea    rcx,[rsp+0xa8]
   140004757:	call   QWORD PTR [rip+0x1ae23]        # 0x14001f580
   14000475d:	lea    rdx,[rsp+0x98]
   140004765:	lea    rcx,[rsp+0xa8]
   14000476d:	call   QWORD PTR [rip+0x1ae6d]        # 0x14001f5e0
   140004773:	lea    rdx,[rip+0x1afae]        # 0x14001f728
   14000477a:	lea    rcx,[rsp+0xa8]
   140004782:	call   QWORD PTR [rip+0x1adf8]        # 0x14001f580
   140004788:	lea    rdx,[rsp+0x98]
   140004790:	lea    rcx,[rsp+0xa8]
   140004798:	call   QWORD PTR [rip+0x1ae42]        # 0x14001f5e0
   14000479e:	lea    rdx,[rip+0x1af73]        # 0x14001f718
   1400047a5:	lea    rcx,[rsp+0xa8]
   1400047ad:	call   QWORD PTR [rip+0x1adcd]        # 0x14001f580
   1400047b3:	lea    rcx,[rsp+0xa8]
   1400047bb:	call   QWORD PTR [rip+0x1ae37]        # 0x14001f5f8
   1400047c1:	mov    rdi,QWORD PTR [rsp+0x90]
   1400047c9:	mov    rcx,rdi
   1400047cc:	mov    rdx,rax
   1400047cf:	call   0x140019d80
   1400047d4:	lea    rcx,[rsp+0xa8]
   1400047dc:	call   QWORD PTR [rip+0x1add6]        # 0x14001f5b8
   1400047e2:	jmp    0x140004800
   1400047e4:	mov    rdi,QWORD PTR [rsp+0x90]
   1400047ec:	jmp    0x140004800
   1400047ee:	mov    rdi,QWORD PTR [rsp+0x90]
   1400047f6:	jmp    0x140004800
   1400047f8:	mov    rdi,QWORD PTR [rsp+0x90]
   140004800:	lea    rcx,[rsp+0x98]
   140004808:	call   QWORD PTR [rip+0x1adaa]        # 0x14001f5b8
   14000480e:	mov    rax,QWORD PTR [r13+0x10]
   140004812:	mov    r8,QWORD PTR [rsp+0x28]
   140004817:	mov    ecx,DWORD PTR [rax+0xc]
   14000481a:	inc    r8
   14000481d:	inc    r15d
   140004820:	sub    ecx,DWORD PTR [rax+0x8]
   140004823:	mov    QWORD PTR [rsp+0x28],r8
   140004828:	cmp    r15d,ecx
   14000482b:	jl     0x140004510
   140004831:	mov    r12,QWORD PTR [rsp+0x50]
   140004836:	mov    rsi,QWORD PTR [rsp+0x58]
   14000483b:	mov    rbp,QWORD PTR [rsp+0x60]
   140004840:	lea    rcx,[rsp+0x20]
   140004845:	call   QWORD PTR [rip+0x1ad6d]        # 0x14001f5b8
   14000484b:	mov    r15,QWORD PTR [rsp+0x48]
   140004850:	add    rsp,0x68
   140004854:	pop    r14
   140004856:	pop    r13
   140004858:	pop    rdi
   140004859:	pop    rbx
   14000485a:	ret    
   14000485b:	int3   
   14000485c:	int3   
   14000485d:	int3   
   14000485e:	int3   
   14000485f:	int3   
   140004860:	mov    QWORD PTR [rsp+0x8],rbx
   140004865:	push   rdi
   140004866:	sub    rsp,0x30
   14000486a:	mov    rbx,rcx
   14000486d:	mov    rcx,QWORD PTR [rcx]
   140004870:	lea    r8,[rip+0xffffffffffffe0a9]        # 0x140002920
   140004877:	lea    rdx,[rip+0xffffffffffffd9d2]        # 0x140002250
   14000487e:	mov    r9d,0x18
   140004884:	mov    DWORD PTR [rsp+0x20],0x8
   14000488c:	call   QWORD PTR [rip+0x1aade]        # 0x14001f370
   140004892:	mov    rdi,rax
   140004895:	mov    rax,QWORD PTR [rbx]
   140004898:	mov    ecx,DWORD PTR [rax+0x10]
   14000489b:	test   ecx,ecx
   14000489d:	je     0x1400048b0
   14000489f:	cmp    ecx,0xffffffff
   1400048a2:	je     0x1400048c0
   1400048a4:	lock add DWORD PTR [rax+0x10],0xffffffff
   1400048a9:	setne  al
   1400048ac:	test   al,al
   1400048ae:	jne    0x1400048c0
   1400048b0:	mov    rcx,QWORD PTR [rbx]
   1400048b3:	lea    rdx,[rip+0xffffffffffffe066]        # 0x140002920
   1400048ba:	call   QWORD PTR [rip+0x1abf8]        # 0x14001f4b8
   1400048c0:	mov    QWORD PTR [rbx],rdi
   1400048c3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400048c8:	add    rsp,0x30
   1400048cc:	pop    rdi
   1400048cd:	ret    
   1400048ce:	int3   
   1400048cf:	int3   
   1400048d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400048d5:	push   rdi
   1400048d6:	sub    rsp,0x20
   1400048da:	mov    r9,QWORD PTR [rcx]
   1400048dd:	mov    rbx,rcx
   1400048e0:	mov    r8d,DWORD PTR [r9+0x8]
   1400048e4:	mov    eax,DWORD PTR [r9+0x4]
   1400048e8:	inc    eax
   1400048ea:	btr    r8d,0x1f
   1400048ef:	cmp    eax,r8d
   1400048f2:	mov    eax,DWORD PTR [r9]
   1400048f5:	seta   dil
   1400048f9:	cmp    eax,0x1
   1400048fc:	je     0x140004902
   1400048fe:	test   eax,eax
   140004900:	jne    0x14000492f
   140004902:	test   dil,dil
   140004905:	jne    0x14000492f
   140004907:	movsxd rcx,DWORD PTR [r9+0x4]
   14000490b:	mov    rax,QWORD PTR [r9+0x10]
   14000490f:	lea    rcx,[rax+rcx*8]
   140004913:	add    rcx,r9
   140004916:	je     0x140004997
   140004918:	call   QWORD PTR [rip+0x1acba]        # 0x14001f5d8
   14000491e:	mov    rax,QWORD PTR [rbx]
   140004921:	inc    DWORD PTR [rax+0x4]
   140004924:	mov    rbx,QWORD PTR [rsp+0x38]
   140004929:	add    rsp,0x20
   14000492d:	pop    rdi
   14000492e:	ret    
   14000492f:	lea    rcx,[rsp+0x30]
   140004934:	call   QWORD PTR [rip+0x1ac9e]        # 0x14001f5d8
   14000493a:	mov    rax,QWORD PTR [rbx]
   14000493d:	movzx  r11d,dil
   140004941:	neg    r11b
   140004944:	sbb    r9d,r9d
   140004947:	and    r9d,0x8
   14000494b:	test   dil,dil
   14000494e:	je     0x140004959
   140004950:	mov    r8d,DWORD PTR [rax+0x4]
   140004954:	inc    r8d
   140004957:	jmp    0x140004962
   140004959:	mov    r8d,DWORD PTR [rax+0x8]
   14000495d:	btr    r8d,0x1f
   140004962:	mov    edx,DWORD PTR [rax+0x4]
   140004965:	mov    rcx,rbx
   140004968:	call   0x140003220
   14000496d:	mov    r11,QWORD PTR [rbx]
   140004970:	movsxd rcx,DWORD PTR [r11+0x4]
   140004974:	mov    rax,QWORD PTR [r11+0x10]
   140004978:	lea    rcx,[rax+rcx*8]
   14000497c:	add    rcx,r11
   14000497f:	je     0x14000498c
   140004981:	lea    rdx,[rsp+0x30]
   140004986:	call   QWORD PTR [rip+0x1ac4c]        # 0x14001f5d8
   14000498c:	lea    rcx,[rsp+0x30]
   140004991:	call   QWORD PTR [rip+0x1ac21]        # 0x14001f5b8
   140004997:	mov    rax,QWORD PTR [rbx]
   14000499a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000499f:	inc    DWORD PTR [rax+0x4]
   1400049a2:	add    rsp,0x20
   1400049a6:	pop    rdi
   1400049a7:	ret    
   1400049a8:	int3   
   1400049a9:	int3   
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	mov    QWORD PTR [rsp+0x18],rsi
   1400049b5:	push   rdi
   1400049b6:	sub    rsp,0x20
   1400049ba:	mov    rax,QWORD PTR [rdx]
   1400049bd:	mov    rsi,rdx
   1400049c0:	mov    rdi,rcx
   1400049c3:	cmp    QWORD PTR [rcx],rax
   1400049c6:	je     0x140004a72
   1400049cc:	mov    ecx,DWORD PTR [rax]
   1400049ce:	mov    QWORD PTR [rsp+0x38],rbx
   1400049d3:	test   ecx,ecx
   1400049d5:	je     0x1400049ea
   1400049d7:	cmp    ecx,0xffffffff
   1400049da:	je     0x1400049e0
   1400049dc:	lock add DWORD PTR [rax],0x1
   1400049e0:	mov    rbx,QWORD PTR [rdx]
   1400049e3:	mov    QWORD PTR [rsp+0x30],rbx
   1400049e8:	jmp    0x140004a24
   1400049ea:	call   QWORD PTR [rip+0x1ab10]        # 0x14001f500
   1400049f0:	mov    rbx,rax
   1400049f3:	mov    QWORD PTR [rsp+0x30],rax
   1400049f8:	mov    rax,QWORD PTR [rsi]
   1400049fb:	mov    rcx,QWORD PTR [rax+0x10]
   1400049ff:	test   rcx,rcx
   140004a02:	je     0x140004a24
   140004a04:	mov    rdx,rbx
   140004a07:	call   0x140002500
   140004a0c:	lea    rcx,[rbx+0x8]
   140004a10:	mov    QWORD PTR [rbx+0x10],rax
   140004a14:	and    QWORD PTR [rax],0x3
   140004a18:	or     QWORD PTR [rax],rcx
   140004a1b:	mov    rcx,rbx
   140004a1e:	call   QWORD PTR [rip+0x1aa7c]        # 0x14001f4a0
   140004a24:	lea    rax,[rsp+0x30]
   140004a29:	cmp    rax,rdi
   140004a2c:	je     0x140004a3c
   140004a2e:	mov    rax,rbx
   140004a31:	mov    rbx,QWORD PTR [rdi]
   140004a34:	mov    QWORD PTR [rsp+0x30],rbx
   140004a39:	mov    QWORD PTR [rdi],rax
   140004a3c:	mov    eax,DWORD PTR [rbx]
   140004a3e:	test   eax,eax
   140004a40:	je     0x140004a57
   140004a42:	cmp    eax,0xffffffff
   140004a45:	je     0x140004a5f
   140004a47:	lock add DWORD PTR [rbx],0xffffffff
   140004a4b:	setne  al
   140004a4e:	test   al,al
   140004a50:	jne    0x140004a5f
   140004a52:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a57:	mov    rcx,rbx
   140004a5a:	call   0x140002bd0
   140004a5f:	mov    rax,rdi
   140004a62:	mov    rbx,QWORD PTR [rsp+0x38]
   140004a67:	mov    rsi,QWORD PTR [rsp+0x40]
   140004a6c:	add    rsp,0x20
   140004a70:	pop    rdi
   140004a71:	ret    
   140004a72:	mov    rax,rcx
   140004a75:	mov    rsi,QWORD PTR [rsp+0x40]
   140004a7a:	add    rsp,0x20
   140004a7e:	pop    rdi
   140004a7f:	ret    
   140004a80:	mov    QWORD PTR [rsp+0x8],rbx
   140004a85:	mov    QWORD PTR [rsp+0x10],rsi
   140004a8a:	push   rdi
   140004a8b:	sub    rsp,0x20
   140004a8f:	movsxd rax,DWORD PTR [rdx+0xc]
   140004a93:	mov    rsi,rdx
   140004a96:	lea    rbx,[rdx+rax*8+0x10]
   140004a9b:	movsxd rax,DWORD PTR [rdx+0x8]
   140004a9f:	lea    rdi,[rdx+rax*8+0x10]
   140004aa4:	cmp    rdi,rbx
   140004aa7:	je     0x140004ade
   140004aa9:	nop    DWORD PTR [rax+0x0]
   140004ab0:	mov    rcx,QWORD PTR [rbx-0x8]
   140004ab4:	sub    rbx,0x8
   140004ab8:	mov    eax,DWORD PTR [rcx]
   140004aba:	test   eax,eax
   140004abc:	je     0x140004ace
   140004abe:	cmp    eax,0xffffffff
   140004ac1:	je     0x140004ad9
   140004ac3:	lock add DWORD PTR [rcx],0xffffffff
   140004ac7:	setne  al
   140004aca:	test   al,al
   140004acc:	jne    0x140004ad9
   140004ace:	mov    rdx,QWORD PTR [rbx]
   140004ad1:	mov    rcx,rbx
   140004ad4:	call   0x1400022f0
   140004ad9:	cmp    rbx,rdi
   140004adc:	jne    0x140004ab0
   140004ade:	mov    rcx,rsi
   140004ae1:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ae6:	mov    rsi,QWORD PTR [rsp+0x38]
   140004aeb:	add    rsp,0x20
   140004aef:	pop    rdi
   140004af0:	rex.W jmp QWORD PTR [rip+0x1a9f1]        # 0x14001f4e8
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	cmp    rdx,r8
   140004b03:	je     0x140004b96
   140004b09:	mov    QWORD PTR [rsp+0x18],rbp
   140004b0e:	mov    QWORD PTR [rsp+0x20],rdi
   140004b13:	push   r12
   140004b15:	sub    rsp,0x20
   140004b19:	mov    QWORD PTR [rsp+0x30],rbx
   140004b1e:	mov    rbp,r9
   140004b21:	mov    r12,r8
   140004b24:	mov    QWORD PTR [rsp+0x38],rsi
   140004b29:	mov    rdi,rdx
   140004b2c:	nop    DWORD PTR [rax+0x0]
   140004b30:	mov    ecx,0x18
   140004b35:	call   0x14001e1c6
   140004b3a:	mov    rsi,rax
   140004b3d:	test   rax,rax
   140004b40:	je     0x140004b6a
   140004b42:	mov    rbx,QWORD PTR [rbp+0x0]
   140004b46:	mov    rcx,rax
   140004b49:	mov    rdx,rbx
   140004b4c:	call   QWORD PTR [rip+0x1aa86]        # 0x14001f5d8
   140004b52:	lea    rdx,[rbx+0x8]
   140004b56:	lea    rcx,[rsi+0x8]
   140004b5a:	call   0x140003030
   140004b5f:	movzx  r11d,BYTE PTR [rbx+0x10]
   140004b64:	mov    BYTE PTR [rsi+0x10],r11b
   140004b68:	jmp    0x140004b6c
   140004b6a:	xor    esi,esi
   140004b6c:	mov    QWORD PTR [rdi],rsi
   140004b6f:	add    rdi,0x8
   140004b73:	add    rbp,0x8
   140004b77:	cmp    rdi,r12
   140004b7a:	jne    0x140004b30
   140004b7c:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b81:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b86:	mov    rbp,QWORD PTR [rsp+0x40]
   140004b8b:	mov    rdi,QWORD PTR [rsp+0x48]
   140004b90:	add    rsp,0x20
   140004b94:	pop    r12
   140004b96:	repz ret 
   140004b98:	int3   
   140004b99:	int3   
   140004b9a:	int3   
   140004b9b:	int3   
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	rex push rbx
   140004ba2:	push   rbp
   140004ba3:	push   rsi
   140004ba4:	push   rdi
   140004ba5:	push   r12
   140004ba7:	sub    rsp,0x50
   140004bab:	mov    rbx,rcx
   140004bae:	lea    rcx,[rsp+0x28]
   140004bb3:	mov    rdi,rdx
   140004bb6:	call   QWORD PTR [rip+0x1aa04]        # 0x14001f5c0
   140004bbc:	lea    rcx,[rsp+0x30]
   140004bc1:	call   QWORD PTR [rip+0x1a9f9]        # 0x14001f5c0
   140004bc7:	mov    r8,QWORD PTR [rbx]
   140004bca:	movsxd rdx,DWORD PTR [rbx+0x8]
   140004bce:	and    DWORD PTR [rsp+0x38],0xfffffffc
   140004bd3:	mov    DWORD PTR [rsp+0x3c],0x0
   140004bdb:	mov    DWORD PTR [rsp+0x40],0x0
   140004be3:	xor    sil,sil
   140004be6:	xor    bpl,bpl
   140004be9:	cmp    edx,DWORD PTR [r8+0x4]
   140004bed:	jge    0x140004c06
   140004bef:	mov    rax,QWORD PTR [r8+0x10]
   140004bf3:	lea    rcx,[rdx+rdx*2]
   140004bf7:	lea    rcx,[rax+rcx*8]
   140004bfb:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   140004c00:	mov    DWORD PTR [rsp+0x3c],eax
   140004c04:	jmp    0x140004c0e
   140004c06:	mov    DWORD PTR [rsp+0x3c],0x0
   140004c0e:	lea    r12,[rip+0xffffffffffffb3eb]        # 0x140000000
   140004c15:	cmp    edx,DWORD PTR [r8+0x4]
   140004c19:	jl     0x140004c1f
   140004c1b:	xor    eax,eax
   140004c1d:	jmp    0x140004c44
   140004c1f:	lea    eax,[rdx+0x1]
   140004c22:	mov    DWORD PTR [rbx+0x8],eax
   140004c25:	movsxd rax,edx
   140004c28:	lea    rcx,[rax+rax*2]
   140004c2c:	mov    rax,QWORD PTR [r8+0x10]
   140004c30:	lea    rcx,[rax+rcx*8]
   140004c34:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   140004c39:	cmp    eax,0x8a
   140004c3e:	ja     0x140004d4d
   140004c44:	cdqe   
   140004c46:	movzx  eax,BYTE PTR [r12+rax*1+0x5248]
   140004c4f:	mov    ecx,DWORD PTR [r12+rax*4+0x5234]
   140004c57:	add    rcx,r12
   140004c5a:	jmp    rcx
   140004c5c:	mov    sil,0x1
   140004c5f:	mov    eax,DWORD PTR [rbx+0x8]
   140004c62:	dec    eax
   140004c64:	cdqe   
   140004c66:	lea    rcx,[rax+rax*2]
   140004c6a:	mov    rax,QWORD PTR [r8+0x10]
   140004c6e:	lea    rdx,[rax+rcx*8]
   140004c72:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140004c77:	lea    rcx,[rdx+r8*1+0x8]
   140004c7c:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140004c81:	lea    rdx,[rsp+0x80]
   140004c89:	call   QWORD PTR [rip+0x1a941]        # 0x14001f5d0
   140004c8f:	lea    rdx,[rsp+0x80]
   140004c97:	lea    rcx,[rsp+0x28]
   140004c9c:	call   QWORD PTR [rip+0x1a93e]        # 0x14001f5e0
   140004ca2:	lea    rcx,[rsp+0x80]
   140004caa:	call   QWORD PTR [rip+0x1a908]        # 0x14001f5b8
   140004cb0:	lea    rcx,[rsp+0x28]
   140004cb5:	mov    dl,0x20
   140004cb7:	call   QWORD PTR [rip+0x1a8db]        # 0x14001f598
   140004cbd:	mov    edx,DWORD PTR [rbx+0x8]
   140004cc0:	mov    r8,QWORD PTR [rbx]
   140004cc3:	lea    eax,[rdx-0x1]
   140004cc6:	cmp    eax,DWORD PTR [r8+0x4]
   140004cca:	jge    0x140004c15
   140004cd0:	cdqe   
   140004cd2:	lea    rcx,[rax+rax*2]
   140004cd6:	mov    rax,QWORD PTR [r8+0x10]
   140004cda:	lea    rcx,[rax+rcx*8]
   140004cde:	cmp    DWORD PTR [rcx+r8*1+0x4],0x37
   140004ce4:	jne    0x140004c15
   140004cea:	or     DWORD PTR [rsp+0x38],0x1
   140004cef:	jmp    0x140004c15
   140004cf4:	mov    r8,QWORD PTR [rbx]
   140004cf7:	mov    eax,DWORD PTR [rbx+0x8]
   140004cfa:	dec    eax
   140004cfc:	cdqe   
   140004cfe:	lea    rcx,[rax+rax*2]
   140004d02:	mov    rax,QWORD PTR [r8+0x10]
   140004d06:	lea    rdx,[rax+rcx*8]
   140004d0a:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140004d0f:	lea    rcx,[rdx+r8*1+0x8]
   140004d14:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140004d19:	lea    rdx,[rsp+0x90]
   140004d21:	call   QWORD PTR [rip+0x1a8a9]        # 0x14001f5d0
   140004d27:	lea    rdx,[rsp+0x90]
   140004d2f:	lea    rcx,[rsp+0x28]
   140004d34:	call   QWORD PTR [rip+0x1a8a6]        # 0x14001f5e0
   140004d3a:	lea    rcx,[rsp+0x90]
   140004d42:	call   QWORD PTR [rip+0x1a870]        # 0x14001f5b8
   140004d48:	jmp    0x1400051d7
   140004d4d:	dec    DWORD PTR [rbx+0x8]
   140004d50:	mov    r8,QWORD PTR [rbx]
   140004d53:	movsxd rdx,DWORD PTR [rbx+0x8]
   140004d57:	mov    r9d,DWORD PTR [r8+0x4]
   140004d5b:	cmp    edx,r9d
   140004d5e:	jge    0x140004db0
   140004d60:	mov    rax,QWORD PTR [r8+0x10]
   140004d64:	lea    rcx,[rdx+rdx*2]
   140004d68:	lea    rcx,[rax+rcx*8]
   140004d6c:	cmp    DWORD PTR [rcx+r8*1+0x4],0x25
   140004d72:	je     0x140004d9e
   140004d74:	cmp    edx,r9d
   140004d77:	jge    0x140004db0
   140004d79:	lea    rcx,[rdx+rdx*2]
   140004d7d:	lea    rcx,[rax+rcx*8]
   140004d81:	cmp    DWORD PTR [rcx+r8*1+0x4],0x23
   140004d87:	je     0x140004d9e
   140004d89:	cmp    edx,r9d
   140004d8c:	jge    0x140004db0
   140004d8e:	lea    rcx,[rdx+rdx*2]
   140004d92:	lea    rcx,[rax+rcx*8]
   140004d96:	cmp    DWORD PTR [rcx+r8*1+0x4],0x26
   140004d9c:	jne    0x140004db0
   140004d9e:	lea    eax,[rdx+0x1]
   140004da1:	mov    DWORD PTR [rbx+0x8],eax
   140004da4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004db0:	mov    r8,QWORD PTR [rbx]
   140004db3:	movsxd rcx,DWORD PTR [rbx+0x8]
   140004db7:	cmp    ecx,DWORD PTR [r8+0x4]
   140004dbb:	jl     0x140004dc1
   140004dbd:	xor    eax,eax
   140004dbf:	jmp    0x140004de1
   140004dc1:	lea    eax,[rcx+0x1]
   140004dc4:	lea    rcx,[rcx+rcx*2]
   140004dc8:	mov    DWORD PTR [rbx+0x8],eax
   140004dcb:	mov    rax,QWORD PTR [r8+0x10]
   140004dcf:	lea    rcx,[rax+rcx*8]
   140004dd3:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   140004dd8:	cmp    eax,0x67
   140004ddb:	ja     0x140004f32
   140004de1:	cdqe   
   140004de3:	movzx  eax,BYTE PTR [r12+rax*1+0x52e8]
   140004dec:	mov    ecx,DWORD PTR [r12+rax*4+0x52d4]
   140004df4:	add    rcx,r12
   140004df7:	jmp    rcx
   140004df9:	test   sil,sil
   140004dfc:	jne    0x140004f32
   140004e02:	mov    eax,DWORD PTR [rbx+0x8]
   140004e05:	dec    eax
   140004e07:	cdqe   
   140004e09:	lea    rcx,[rax+rax*2]
   140004e0d:	mov    rax,QWORD PTR [r8+0x10]
   140004e11:	lea    rdx,[rax+rcx*8]
   140004e15:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140004e1a:	lea    rcx,[rdx+r8*1+0x8]
   140004e1f:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140004e24:	lea    rdx,[rsp+0x80]
   140004e2c:	call   QWORD PTR [rip+0x1a79e]        # 0x14001f5d0
   140004e32:	lea    rdx,[rsp+0x80]
   140004e3a:	lea    rcx,[rsp+0x28]
   140004e3f:	call   QWORD PTR [rip+0x1a79b]        # 0x14001f5e0
   140004e45:	lea    rcx,[rsp+0x80]
   140004e4d:	call   QWORD PTR [rip+0x1a765]        # 0x14001f5b8
   140004e53:	mov    r11,QWORD PTR [rbx]
   140004e56:	movsxd rdx,DWORD PTR [rbx+0x8]
   140004e5a:	mov    r8d,DWORD PTR [r11+0x4]
   140004e5e:	cmp    edx,r8d
   140004e61:	jge    0x140004f35
   140004e67:	mov    rax,QWORD PTR [r11+0x10]
   140004e6b:	lea    rcx,[rdx+rdx*2]
   140004e6f:	lea    rcx,[rax+rcx*8]
   140004e73:	cmp    DWORD PTR [rcx+r11*1+0x4],0x62
   140004e79:	je     0x140004eb1
   140004e7b:	cmp    edx,r8d
   140004e7e:	jge    0x140004f35
   140004e84:	lea    rcx,[rdx+rdx*2]
   140004e88:	lea    rcx,[rax+rcx*8]
   140004e8c:	cmp    DWORD PTR [rcx+r11*1+0x4],0x61
   140004e92:	je     0x140004eb1
   140004e94:	cmp    edx,r8d
   140004e97:	jge    0x140004f35
   140004e9d:	lea    rcx,[rdx+rdx*2]
   140004ea1:	lea    rcx,[rax+rcx*8]
   140004ea5:	cmp    DWORD PTR [rcx+r11*1+0x4],0x66
   140004eab:	jne    0x140004f35
   140004eb1:	lea    eax,[rdx+0x1]
   140004eb4:	lea    rcx,[rsp+0x28]
   140004eb9:	mov    dl,0x20
   140004ebb:	mov    DWORD PTR [rbx+0x8],eax
   140004ebe:	call   QWORD PTR [rip+0x1a6d4]        # 0x14001f598
   140004ec4:	dec    DWORD PTR [rbx+0x8]
   140004ec7:	jmp    0x140004db0
   140004ecc:	mov    eax,DWORD PTR [rbx+0x8]
   140004ecf:	dec    eax
   140004ed1:	cdqe   
   140004ed3:	lea    rcx,[rax+rax*2]
   140004ed7:	mov    rax,QWORD PTR [r8+0x10]
   140004edb:	lea    rdx,[rax+rcx*8]
   140004edf:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140004ee4:	lea    rcx,[rdx+r8*1+0x8]
   140004ee9:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140004eee:	lea    rdx,[rsp+0x90]
   140004ef6:	call   QWORD PTR [rip+0x1a6d4]        # 0x14001f5d0
   140004efc:	lea    rdx,[rsp+0x90]
   140004f04:	lea    rcx,[rsp+0x28]
   140004f09:	call   QWORD PTR [rip+0x1a6d1]        # 0x14001f5e0
   140004f0f:	lea    rcx,[rsp+0x90]
   140004f17:	call   QWORD PTR [rip+0x1a69b]        # 0x14001f5b8
   140004f1d:	xor    edx,edx
   140004f1f:	mov    rcx,rbx
   140004f22:	call   0x140002960
   140004f27:	cmp    eax,0x67
   140004f2a:	sete   al
   140004f2d:	or     bpl,al
   140004f30:	jmp    0x140004f35
   140004f32:	dec    DWORD PTR [rbx+0x8]
   140004f35:	mov    r8,QWORD PTR [rbx]
   140004f38:	movsxd rdx,DWORD PTR [rbx+0x8]
   140004f3c:	cmp    edx,DWORD PTR [r8+0x4]
   140004f40:	jge    0x140004f97
   140004f42:	mov    rax,QWORD PTR [r8+0x10]
   140004f46:	lea    rcx,[rdx+rdx*2]
   140004f4a:	lea    rcx,[rax+rcx*8]
   140004f4e:	cmp    DWORD PTR [rcx+r8*1+0x4],0x7
   140004f54:	jne    0x140004f97
   140004f56:	lea    eax,[rdx+0x1]
   140004f59:	mov    DWORD PTR [rbx+0x8],eax
   140004f5c:	mov    rax,QWORD PTR [rsp+0x28]
   140004f61:	cmp    DWORD PTR [rax+0x4],0x0
   140004f65:	je     0x1400051d7
   140004f6b:	lea    rdx,[rsp+0x20]
   140004f70:	mov    r8d,0x8
   140004f76:	mov    rcx,rbx
   140004f79:	call   0x1400042b0
   140004f7e:	lea    rcx,[rsp+0x28]
   140004f83:	mov    rdx,rax
   140004f86:	call   QWORD PTR [rip+0x1a654]        # 0x14001f5e0
   140004f8c:	lea    rcx,[rsp+0x20]
   140004f91:	call   QWORD PTR [rip+0x1a621]        # 0x14001f5b8
   140004f97:	mov    r9,QWORD PTR [rbx]
   140004f9a:	movsxd rdx,DWORD PTR [rbx+0x8]
   140004f9e:	cmp    edx,DWORD PTR [r9+0x4]
   140004fa2:	jge    0x140005020
   140004fa8:	mov    rax,QWORD PTR [r9+0x10]
   140004fac:	lea    rcx,[rdx+rdx*2]
   140004fb0:	lea    rcx,[rax+rcx*8]
   140004fb4:	cmp    DWORD PTR [rcx+r9*1+0x4],0x11
   140004fba:	jne    0x140005020
   140004fbc:	lea    eax,[rdx+0x1]
   140004fbf:	mov    DWORD PTR [rbx+0x8],eax
   140004fc2:	dec    eax
   140004fc4:	movsxd rcx,eax
   140004fc7:	mov    rax,QWORD PTR [r9+0x10]
   140004fcb:	lea    rdx,[rcx+rcx*2]
   140004fcf:	lea    r8,[rax+rdx*8]
   140004fd3:	lea    rdx,[rsp+0x98]
   140004fdb:	add    r8,r9
   140004fde:	mov    r9d,DWORD PTR [r8+0x14]
   140004fe2:	lea    rcx,[r8+0x8]
   140004fe6:	mov    r8d,DWORD PTR [r8+0x10]
   140004fea:	call   QWORD PTR [rip+0x1a5e0]        # 0x14001f5d0
   140004ff0:	lea    rdx,[rsp+0x98]
   140004ff8:	lea    rcx,[rsp+0x28]
   140004ffd:	call   QWORD PTR [rip+0x1a5dd]        # 0x14001f5e0
   140005003:	lea    rcx,[rsp+0x98]
   14000500b:	call   QWORD PTR [rip+0x1a5a7]        # 0x14001f5b8
   140005011:	or     DWORD PTR [rsp+0x38],0x2
   140005016:	jmp    0x140004db0
   14000501b:	nop    DWORD PTR [rax+rax*1+0x0]
   140005020:	mov    r8,QWORD PTR [rbx]
   140005023:	movsxd rdx,DWORD PTR [rbx+0x8]
   140005027:	mov    r9d,DWORD PTR [r8+0x4]
   14000502b:	cmp    edx,r9d
   14000502e:	jge    0x1400051a9
   140005034:	mov    rax,QWORD PTR [r8+0x10]
   140005038:	lea    rcx,[rdx+rdx*2]
   14000503c:	lea    rcx,[rax+rcx*8]
   140005040:	cmp    DWORD PTR [rcx+r8*1+0x4],0x36
   140005046:	je     0x1400050ea
   14000504c:	cmp    edx,r9d
   14000504f:	jge    0x1400051a9
   140005055:	lea    rcx,[rdx+rdx*2]
   140005059:	lea    rcx,[rax+rcx*8]
   14000505d:	cmp    DWORD PTR [rcx+r8*1+0x4],0x37
   140005063:	je     0x1400050ea
   140005069:	cmp    edx,r9d
   14000506c:	jge    0x1400051a9
   140005072:	lea    rcx,[rdx+rdx*2]
   140005076:	lea    rcx,[rax+rcx*8]
   14000507a:	cmp    DWORD PTR [rcx+r8*1+0x4],0x63
   140005080:	je     0x1400050ea
   140005082:	cmp    edx,r9d
   140005085:	jge    0x1400051a9
   14000508b:	lea    rcx,[rdx+rdx*2]
   14000508f:	lea    rcx,[rax+rcx*8]
   140005093:	cmp    DWORD PTR [rcx+r8*1+0x4],0x64
   140005099:	je     0x1400050ea
   14000509b:	cmp    edx,r9d
   14000509e:	jge    0x1400051a9
   1400050a4:	lea    rcx,[rdx+rdx*2]
   1400050a8:	lea    rcx,[rax+rcx*8]
   1400050ac:	cmp    DWORD PTR [rcx+r8*1+0x4],0x3e
   1400050b2:	je     0x1400050ea
   1400050b4:	cmp    edx,r9d
   1400050b7:	jge    0x1400051a9
   1400050bd:	lea    rcx,[rdx+rdx*2]
   1400050c1:	lea    rcx,[rax+rcx*8]
   1400050c5:	cmp    DWORD PTR [rcx+r8*1+0x4],0x42
   1400050cb:	je     0x1400050ea
   1400050cd:	cmp    edx,r9d
   1400050d0:	jge    0x1400051a9
   1400050d6:	lea    rcx,[rdx+rdx*2]
   1400050da:	lea    rcx,[rax+rcx*8]
   1400050de:	cmp    DWORD PTR [rcx+r8*1+0x4],0x56
   1400050e4:	jne    0x1400051a9
   1400050ea:	lea    eax,[rdx+0x1]
   1400050ed:	lea    rcx,[rsp+0x28]
   1400050f2:	mov    dl,0x20
   1400050f4:	mov    DWORD PTR [rbx+0x8],eax
   1400050f7:	call   QWORD PTR [rip+0x1a49b]        # 0x14001f598
   1400050fd:	mov    r11,QWORD PTR [rbx]
   140005100:	mov    eax,DWORD PTR [rbx+0x8]
   140005103:	dec    eax
   140005105:	cdqe   
   140005107:	lea    rcx,[rax+rax*2]
   14000510b:	mov    rax,QWORD PTR [r11+0x10]
   14000510f:	lea    rdx,[rax+rcx*8]
   140005113:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   140005118:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   14000511d:	lea    rcx,[rdx+r11*1+0x8]
   140005122:	lea    rdx,[rsp+0x80]
   14000512a:	call   QWORD PTR [rip+0x1a4a0]        # 0x14001f5d0
   140005130:	lea    rdx,[rsp+0x80]
   140005138:	lea    rcx,[rsp+0x28]
   14000513d:	call   QWORD PTR [rip+0x1a49d]        # 0x14001f5e0
   140005143:	lea    rcx,[rsp+0x80]
   14000514b:	call   QWORD PTR [rip+0x1a467]        # 0x14001f5b8
   140005151:	xor    edx,edx
   140005153:	mov    rcx,rbx
   140005156:	call   0x140002960
   14000515b:	cmp    eax,0x42
   14000515e:	jne    0x14000516d
   140005160:	mov    DWORD PTR [rsp+0x40],0x1
   140005168:	jmp    0x140005020
   14000516d:	xor    edx,edx
   14000516f:	mov    rcx,rbx
   140005172:	call   0x140002960
   140005177:	cmp    eax,0x56
   14000517a:	jne    0x140005189
   14000517c:	mov    DWORD PTR [rsp+0x40],0x2
   140005184:	jmp    0x140005020
   140005189:	xor    edx,edx
   14000518b:	mov    rcx,rbx
   14000518e:	call   0x140002960
   140005193:	cmp    eax,0x3e
   140005196:	jne    0x140005020
   14000519c:	mov    DWORD PTR [rsp+0x40],0x3
   1400051a4:	jmp    0x140005020
   1400051a9:	lea    rdx,[rsp+0x28]
   1400051ae:	lea    rcx,[rsp+0x30]
   1400051b3:	call   QWORD PTR [rip+0x1a39f]        # 0x14001f558
   1400051b9:	test   bpl,bpl
   1400051bc:	je     0x1400051d7
   1400051be:	cmp    DWORD PTR [rsp+0x40],0x0
   1400051c3:	jne    0x1400051d7
   1400051c5:	lea    rdx,[rip+0x1a60c]        # 0x14001f7d8
   1400051cc:	lea    rcx,[rsp+0x28]
   1400051d1:	call   QWORD PTR [rip+0x19ff1]        # 0x14001f1c8
   1400051d7:	lea    rdx,[rsp+0x28]
   1400051dc:	mov    rcx,rdi
   1400051df:	call   QWORD PTR [rip+0x1a3f3]        # 0x14001f5d8
   1400051e5:	lea    rdx,[rsp+0x30]
   1400051ea:	lea    rcx,[rdi+0x8]
   1400051ee:	call   QWORD PTR [rip+0x1a3e4]        # 0x14001f5d8
   1400051f4:	mov    eax,DWORD PTR [rsp+0x38]
   1400051f8:	and    DWORD PTR [rdi+0x10],0xfffffffc
   1400051fc:	and    eax,0x3
   1400051ff:	lea    rcx,[rsp+0x30]
   140005204:	or     DWORD PTR [rdi+0x10],eax
   140005207:	mov    eax,DWORD PTR [rsp+0x3c]
   14000520b:	mov    DWORD PTR [rdi+0x14],eax
   14000520e:	mov    eax,DWORD PTR [rsp+0x40]
   140005212:	mov    DWORD PTR [rdi+0x18],eax
   140005215:	call   QWORD PTR [rip+0x1a39d]        # 0x14001f5b8
   14000521b:	lea    rcx,[rsp+0x28]
   140005220:	call   QWORD PTR [rip+0x1a392]        # 0x14001f5b8
   140005226:	mov    rax,rdi
   140005229:	add    rsp,0x50
   14000522d:	pop    r12
   14000522f:	pop    rdi
   140005230:	pop    rsi
   140005231:	pop    rbp
   140005232:	pop    rbx
   140005233:	ret    
   140005234:	xlat   BYTE PTR ds:[rbx]
   140005235:	push   rcx
   140005236:	add    BYTE PTR [rax],al
   140005238:	pop    rdi
   140005239:	rex.WR add BYTE PTR [rax],r8b
   14000523c:	pop    rsp
   14000523d:	rex.WR add BYTE PTR [rax],r8b
   140005240:	hlt    
   140005241:	rex.WR add BYTE PTR [rax],r8b
   140005244:	rex.WRB
   140005245:	rex.WRB add BYTE PTR [r8],r8b
   140005248:	add    BYTE PTR [rsp+rax*1],al
   14000524b:	add    al,0x4
   14000524d:	add    al,0x4
   14000524f:	add    al,0x4
   140005251:	add    al,0x4
   140005253:	add    al,0x4
   140005255:	add    al,0x4
   140005257:	add    al,0x4
   140005259:	add    al,0x4
   14000525b:	add    al,0x4
   14000525d:	add    al,0x4
   14000525f:	add    al,0x4
   140005261:	add    al,0x4
   140005263:	add    al,0x4
   140005265:	add    al,0x4
   140005267:	add    al,0x4
   140005269:	add    al,0x4
   14000526b:	add    al,0x4
   14000526d:	add    al,0x4
   14000526f:	add    al,0x4
   140005271:	add    al,0x4
   140005273:	add    al,0x4
   140005275:	add    al,0x4
   140005277:	add    al,0x4
   140005279:	add    al,0x4
   14000527b:	add    al,0x4
   14000527d:	add    al,0x1
   14000527f:	add    DWORD PTR [rsp+rax*1],eax
   140005282:	add    al,0x4
   140005284:	add    al,0x4
   140005286:	add    al,0x4
   140005288:	add    al,0x4
   14000528a:	add    al,0x4
   14000528c:	add    al,0x4
   14000528e:	add    al,0x4
   140005290:	add    al,0x4
   140005292:	add    al,0x4
   140005294:	add    al,0x4
   140005296:	add    al,0x4
   140005298:	add    al,0x4
   14000529a:	add    al,0x4
   14000529c:	add    al,0x4
   14000529e:	add    al,0x4
   1400052a0:	add    al,0x4
   1400052a2:	add    al,0x4
   1400052a4:	add    al,0x4
   1400052a6:	add    al,0x4
   1400052a8:	add    al,0x4
   1400052aa:	add    al,0x2
   1400052ac:	add    al,BYTE PTR [rsp+rax*1]
   1400052af:	add    al,0x4
   1400052b1:	add    al,0x4
   1400052b3:	add    al,0x4
   1400052b5:	add    al,0x4
   1400052b7:	add    al,0x4
   1400052b9:	add    al,0x4
   1400052bb:	add    al,0x4
   1400052bd:	add    al,0x4
   1400052bf:	add    al,0x4
   1400052c1:	add    al,0x4
   1400052c3:	add    al,0x4
   1400052c5:	add    al,0x4
   1400052c7:	add    al,0x4
   1400052c9:	add    al,0x4
   1400052cb:	add    eax,DWORD PTR [rbx]
   1400052cd:	add    eax,DWORD PTR [rbx]
   1400052cf:	add    al,0x3
   1400052d1:	add    eax,DWORD PTR [rbx]
   1400052d3:	nop
   1400052d4:	xlat   BYTE PTR ds:[rbx]
   1400052d5:	push   rcx
   1400052d6:	add    BYTE PTR [rax],al
   1400052d8:	stc    
   1400052d9:	rex.WRB add BYTE PTR [r8],r8b
   1400052dc:	add    cl,BYTE PTR [rsi+0x0]
   1400052df:	add    ah,cl
   1400052e1:	rex.WRX add BYTE PTR [rax],r8b
   1400052e4:	xor    cl,BYTE PTR [rdi+0x0]
   1400052e7:	add    BYTE PTR [rax],al
   1400052e9:	add    DWORD PTR [rsp+rax*1],eax
   1400052ec:	add    al,0x4
   1400052ee:	add    al,0x4
   1400052f0:	add    al,0x4
   1400052f2:	add    al,0x4
   1400052f4:	add    al,0x4
   1400052f6:	add    al,0x4
   1400052f8:	add    al,0x4
   1400052fa:	add    al,0x4
   1400052fc:	add    al,0x4
   1400052fe:	add    al,0x4
   140005300:	add    al,0x4
   140005302:	add    al,0x4
   140005304:	add    al,0x4
   140005306:	add    al,0x4
   140005308:	add    al,0x4
   14000530a:	add    al,0x4
   14000530c:	add    al,0x4
   14000530e:	add    al,0x4
   140005310:	add    al,0x4
   140005312:	add    al,0x4
   140005314:	add    al,0x4
   140005316:	add    al,0x4
   140005318:	add    al,0x4
   14000531a:	add    al,0x4
   14000531c:	add    al,0x4
   14000531e:	add    al,0x4
   140005320:	add    al,0x4
   140005322:	add    al,0x4
   140005324:	add    al,0x4
   140005326:	add    al,0x4
   140005328:	add    al,0x4
   14000532a:	add    al,0x4
   14000532c:	add    al,0x4
   14000532e:	add    al,0x4
   140005330:	add    al,0x4
   140005332:	add    al,0x4
   140005334:	add    al,0x4
   140005336:	add    al,0x4
   140005338:	add    al,0x4
   14000533a:	add    al,0x4
   14000533c:	add    al,0x4
   14000533e:	add    al,0x4
   140005340:	add    al,0x4
   140005342:	add    al,0x4
   140005344:	add    al,0x2
   140005346:	add    al,0x3
   140005348:	add    al,BYTE PTR [rdx]
   14000534a:	add    al,BYTE PTR [rsp+rax*1]
   14000534d:	add    eax,DWORD PTR [rbx]
   14000534f:	add    ecx,DWORD PTR [rax-0x77]
   140005352:	pop    rsp
   140005353:	and    al,0x10
   140005355:	push   rdi
   140005356:	sub    rsp,0x20
   14000535a:	mov    r9,QWORD PTR [rcx]
   14000535d:	mov    rdi,rdx
   140005360:	movsxd rdx,DWORD PTR [rcx+0x8]
   140005364:	cmp    edx,DWORD PTR [r9+0x4]
   140005368:	mov    rbx,rcx
   14000536b:	jge    0x140005444
   140005371:	mov    rax,QWORD PTR [r9+0x10]
   140005375:	lea    r8,[rdx+rdx*2]
   140005379:	lea    r8,[rax+r8*8]
   14000537d:	cmp    DWORD PTR [r8+r9*1+0x4],0x8c
   140005386:	jne    0x140005444
   14000538c:	inc    edx
   14000538e:	mov    DWORD PTR [rcx+0x8],edx
   140005391:	cmp    edx,DWORD PTR [r9+0x4]
   140005395:	jge    0x1400053b6
   140005397:	movsxd rax,edx
   14000539a:	lea    rcx,[rax+rax*2]
   14000539e:	mov    rax,QWORD PTR [r9+0x10]
   1400053a2:	lea    rcx,[rax+rcx*8]
   1400053a6:	cmp    DWORD PTR [rcx+r9*1+0x4],0x9
   1400053ac:	jne    0x1400053b6
   1400053ae:	lea    eax,[rdx+0x1]
   1400053b1:	mov    DWORD PTR [rbx+0x8],eax
   1400053b4:	jmp    0x1400053c0
   1400053b6:	xor    edx,edx
   1400053b8:	mov    rcx,rbx
   1400053bb:	call   0x140019c50
   1400053c0:	lea    rdx,[rsp+0x40]
   1400053c5:	mov    r8d,0xa
   1400053cb:	mov    rcx,rbx
   1400053ce:	call   0x1400042b0
   1400053d3:	xor    edx,edx
   1400053d5:	lea    rcx,[rsp+0x40]
   1400053da:	lea    r8d,[rdx+0x1]
   1400053de:	call   QWORD PTR [rip+0x1a17c]        # 0x14001f560
   1400053e4:	lea    rcx,[rsp+0x40]
   1400053e9:	mov    edx,0x1
   1400053ee:	call   QWORD PTR [rip+0x19de4]        # 0x14001f1d8
   1400053f4:	lea    rdx,[rsp+0x30]
   1400053f9:	lea    rcx,[rsp+0x40]
   1400053fe:	mov    r8d,0xa
   140005404:	mov    BYTE PTR [rsp+0x30],0x0
   140005409:	call   QWORD PTR [rip+0x19dc1]        # 0x14001f1d0
   14000540f:	cmp    BYTE PTR [rsp+0x30],0x0
   140005414:	mov    DWORD PTR [rdi+0x6c],eax
   140005417:	je     0x14000541d
   140005419:	test   eax,eax
   14000541b:	jns    0x14000542c
   14000541d:	lea    rdx,[rip+0x1a3bc]        # 0x14001f7e0
   140005424:	mov    rcx,rbx
   140005427:	call   0x140019c50
   14000542c:	lea    rcx,[rsp+0x40]
   140005431:	call   QWORD PTR [rip+0x1a181]        # 0x14001f5b8
   140005437:	mov    al,0x1
   140005439:	mov    rbx,QWORD PTR [rsp+0x38]
   14000543e:	add    rsp,0x20
   140005442:	pop    rdi
   140005443:	ret    
   140005444:	xor    al,al
   140005446:	mov    rbx,QWORD PTR [rsp+0x38]
   14000544b:	add    rsp,0x20
   14000544f:	pop    rdi
   140005450:	ret    
   140005451:	int3   
   140005452:	int3   
   140005453:	int3   
   140005454:	int3   
   140005455:	int3   
   140005456:	int3   
   140005457:	int3   
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	int3   
   14000545d:	int3   
   14000545e:	int3   
   14000545f:	int3   
   140005460:	rex push rbx
   140005462:	push   rbp
   140005463:	push   rsi
   140005464:	push   rdi
   140005465:	push   r12
   140005467:	push   r13
   140005469:	push   r14
   14000546b:	push   r15
   14000546d:	sub    rsp,0xc8
   140005474:	mov    rdi,rdx
   140005477:	lea    rdx,[rsp+0xa0]
   14000547f:	mov    rbx,rcx
   140005482:	call   0x140004ba0
   140005487:	lea    rcx,[rsp+0x128]
   14000548f:	mov    rdx,rax
   140005492:	call   QWORD PTR [rip+0x1a140]        # 0x14001f5d8
   140005498:	lea    rcx,[rsp+0xa8]
   1400054a0:	call   QWORD PTR [rip+0x1a112]        # 0x14001f5b8
   1400054a6:	lea    rcx,[rsp+0xa0]
   1400054ae:	call   QWORD PTR [rip+0x1a104]        # 0x14001f5b8
   1400054b4:	mov    r11,QWORD PTR [rsp+0x128]
   1400054bc:	cmp    DWORD PTR [r11+0x4],0x0
   1400054c1:	jne    0x1400054cd
   1400054c3:	xor    edx,edx
   1400054c5:	mov    rcx,rbx
   1400054c8:	call   0x140019c50
   1400054cd:	lea    rdx,[rip+0x1a544]        # 0x14001fa18
   1400054d4:	lea    rcx,[rdi+0x48]
   1400054d8:	call   QWORD PTR [rip+0x19cea]        # 0x14001f1c8
   1400054de:	lea    rcx,[rdi+0x38]
   1400054e2:	mov    rdx,rax
   1400054e5:	call   QWORD PTR [rip+0x1a06d]        # 0x14001f558
   1400054eb:	lea    rcx,[rdi+0x30]
   1400054ef:	mov    rdx,rax
   1400054f2:	call   QWORD PTR [rip+0x1a060]        # 0x14001f558
   1400054f8:	lea    rdx,[rip+0x1a511]        # 0x14001fa10
   1400054ff:	lea    rcx,[rdi+0x50]
   140005503:	call   QWORD PTR [rip+0x19cbf]        # 0x14001f1c8
   140005509:	lea    rdx,[rsp+0x128]
   140005511:	lea    rcx,[rsp+0x110]
   140005519:	xor    r8d,r8d
   14000551c:	call   0x140001910
   140005521:	lea    rcx,[rsp+0x128]
   140005529:	mov    rdx,rax
   14000552c:	call   QWORD PTR [rip+0x1a026]        # 0x14001f558
   140005532:	lea    rcx,[rsp+0x110]
   14000553a:	call   QWORD PTR [rip+0x1a078]        # 0x14001f5b8
   140005540:	lea    rdx,[rip+0x1a4c1]        # 0x14001fa08
   140005547:	lea    rcx,[rsp+0x128]
   14000554f:	call   QWORD PTR [rip+0x1a09b]        # 0x14001f5f0
   140005555:	xor    r14d,r14d
   140005558:	lea    rcx,[rsp+0x128]
   140005560:	test   eax,eax
   140005562:	jne    0x14000556d
   140005564:	lea    rdx,[rip+0x1a485]        # 0x14001f9f0
   14000556b:	jmp    0x1400055d1
   14000556d:	lea    rdx,[rip+0x1a46c]        # 0x14001f9e0
   140005574:	call   QWORD PTR [rip+0x1a076]        # 0x14001f5f0
   14000557a:	lea    rcx,[rsp+0x128]
   140005582:	test   eax,eax
   140005584:	jne    0x14000558f
   140005586:	lea    rdx,[rip+0x1a43b]        # 0x14001f9c8
   14000558d:	jmp    0x1400055d1
   14000558f:	lea    rdx,[rip+0x1a422]        # 0x14001f9b8
   140005596:	call   QWORD PTR [rip+0x1a054]        # 0x14001f5f0
   14000559c:	lea    rcx,[rsp+0x128]
   1400055a4:	test   eax,eax
   1400055a6:	jne    0x1400055b1
   1400055a8:	lea    rdx,[rip+0x1a3f9]        # 0x14001f9a8
   1400055af:	jmp    0x1400055d1
   1400055b1:	lea    rdx,[rip+0x1a3e0]        # 0x14001f998
   1400055b8:	call   QWORD PTR [rip+0x1a032]        # 0x14001f5f0
   1400055be:	test   eax,eax
   1400055c0:	jne    0x1400055d7
   1400055c2:	lea    rdx,[rip+0x1a3bf]        # 0x14001f988
   1400055c9:	lea    rcx,[rsp+0x128]
   1400055d1:	call   QWORD PTR [rip+0x19bf1]        # 0x14001f1c8
   1400055d7:	lea    rcx,[rdi+0x8]
   1400055db:	lea    rdx,[rsp+0x128]
   1400055e3:	call   QWORD PTR [rip+0x19f6f]        # 0x14001f558
   1400055e9:	mov    r11,QWORD PTR [rbx]
   1400055ec:	mov    eax,DWORD PTR [rbx+0x8]
   1400055ef:	cmp    eax,DWORD PTR [r11+0x4]
   1400055f3:	jge    0x1400055fa
   1400055f5:	inc    eax
   1400055f7:	mov    DWORD PTR [rbx+0x8],eax
   1400055fa:	mov    eax,DWORD PTR [rbx+0x8]
   1400055fd:	dec    eax
   1400055ff:	cdqe   
   140005601:	lea    rcx,[rax+rax*2]
   140005605:	mov    rax,QWORD PTR [r11+0x10]
   140005609:	lea    rdx,[rax+rcx*8]
   14000560d:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   140005612:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   140005617:	lea    rcx,[rdx+r11*1+0x8]
   14000561c:	lea    rdx,[rsp+0x110]
   140005624:	call   QWORD PTR [rip+0x19fa6]        # 0x14001f5d0
   14000562a:	lea    rdx,[rsp+0x110]
   140005632:	mov    rcx,rdi
   140005635:	call   QWORD PTR [rip+0x19f1d]        # 0x14001f558
   14000563b:	lea    rcx,[rsp+0x110]
   140005643:	call   QWORD PTR [rip+0x19f6f]        # 0x14001f5b8
   140005649:	lea    r15,[rip+0xffffffffffffa9b0]        # 0x140000000
   140005650:	mov    r9,QWORD PTR [rbx]
   140005653:	movsxd rdx,DWORD PTR [rbx+0x8]
   140005657:	cmp    edx,DWORD PTR [r9+0x4]
   14000565b:	jge    0x140005dd3
   140005661:	mov    rax,QWORD PTR [r9+0x10]
   140005665:	lea    rcx,[rdx+rdx*2]
   140005669:	lea    rcx,[rax+rcx*8]
   14000566d:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   140005673:	jne    0x140005dd3
   140005679:	lea    eax,[rdx+0x1]
   14000567c:	mov    DWORD PTR [rbx+0x8],eax
   14000567f:	dec    eax
   140005681:	movsxd rcx,eax
   140005684:	mov    rax,QWORD PTR [r9+0x10]
   140005688:	lea    rdx,[rcx+rcx*2]
   14000568c:	lea    r8,[rax+rdx*8]
   140005690:	lea    rdx,[rsp+0x120]
   140005698:	add    r8,r9
   14000569b:	mov    r9d,DWORD PTR [r8+0x14]
   14000569f:	lea    rcx,[r8+0x8]
   1400056a3:	mov    r8d,DWORD PTR [r8+0x10]
   1400056a7:	call   QWORD PTR [rip+0x19f23]        # 0x14001f5d0
   1400056ad:	lea    r11,[rsp+0x120]
   1400056b5:	lea    rcx,[rsp+0x80]
   1400056bd:	mov    dl,0x43
   1400056bf:	mov    QWORD PTR [rsp+0x80],r11
   1400056c7:	mov    DWORD PTR [rsp+0x88],r14d
   1400056cf:	call   QWORD PTR [rip+0x19b1b]        # 0x14001f1f0
   1400056d5:	test   al,al
   1400056d7:	je     0x140005709
   1400056d9:	lea    rdx,[rip+0x1a298]        # 0x14001f978
   1400056e0:	lea    rcx,[rsp+0x120]
   1400056e8:	call   QWORD PTR [rip+0x19f02]        # 0x14001f5f0
   1400056ee:	test   eax,eax
   1400056f0:	jne    0x140005709
   1400056f2:	lea    rcx,[rsp+0x120]
   1400056fa:	mov    BYTE PTR [rdi+0x6c],0x1
   1400056fe:	call   QWORD PTR [rip+0x19eb4]        # 0x14001f5b8
   140005704:	jmp    0x140005650
   140005709:	lea    rax,[rsp+0x120]
   140005711:	lea    rcx,[rsp+0x90]
   140005719:	mov    dl,0x46
   14000571b:	mov    QWORD PTR [rsp+0x90],rax
   140005723:	mov    DWORD PTR [rsp+0x98],r14d
   14000572b:	call   QWORD PTR [rip+0x19abf]        # 0x14001f1f0
   140005731:	test   al,al
   140005733:	je     0x140005765
   140005735:	lea    rdx,[rip+0x1a230]        # 0x14001f96c
   14000573c:	lea    rcx,[rsp+0x120]
   140005744:	call   QWORD PTR [rip+0x19ea6]        # 0x14001f5f0
   14000574a:	test   eax,eax
   14000574c:	jne    0x140005765
   14000574e:	lea    rcx,[rsp+0x120]
   140005756:	mov    BYTE PTR [rdi+0x6d],0x1
   14000575a:	call   QWORD PTR [rip+0x19e58]        # 0x14001f5b8
   140005760:	jmp    0x140005650
   140005765:	lea    rcx,[rsp+0x118]
   14000576d:	call   QWORD PTR [rip+0x19e4d]        # 0x14001f5c0
   140005773:	lea    rcx,[rsp+0x20]
   140005778:	call   QWORD PTR [rip+0x19e42]        # 0x14001f5c0
   14000577e:	mov    r11,QWORD PTR [rbx]
   140005781:	movsxd rdx,DWORD PTR [rbx+0x8]
   140005785:	mov    r8d,DWORD PTR [r11+0x4]
   140005789:	cmp    edx,r8d
   14000578c:	jge    0x1400058e1
   140005792:	mov    rax,QWORD PTR [r11+0x10]
   140005796:	lea    rcx,[rdx+rdx*2]
   14000579a:	lea    rcx,[rax+rcx*8]
   14000579e:	cmp    DWORD PTR [rcx+r11*1+0x4],0x9
   1400057a4:	jne    0x140005825
   1400057a6:	lea    eax,[rdx+0x1]
   1400057a9:	lea    rdx,[rsp+0x78]
   1400057ae:	mov    r8d,0xa
   1400057b4:	mov    rcx,rbx
   1400057b7:	mov    DWORD PTR [rbx+0x8],eax
   1400057ba:	call   0x1400042b0
   1400057bf:	lea    rcx,[rsp+0x118]
   1400057c7:	mov    rdx,rax
   1400057ca:	call   QWORD PTR [rip+0x19d88]        # 0x14001f558
   1400057d0:	lea    rcx,[rsp+0x78]
   1400057d5:	call   QWORD PTR [rip+0x19ddd]        # 0x14001f5b8
   1400057db:	mov    r11,QWORD PTR [rsp+0x118]
   1400057e3:	lea    rdx,[rsp+0x70]
   1400057e8:	mov    r9d,DWORD PTR [r11+0x4]
   1400057ec:	lea    rcx,[rsp+0x118]
   1400057f4:	mov    r8d,0x1
   1400057fa:	add    r9d,0xfffffffe
   1400057fe:	call   QWORD PTR [rip+0x19dcc]        # 0x14001f5d0
   140005804:	lea    rcx,[rsp+0x118]
   14000580c:	mov    rdx,rax
   14000580f:	call   QWORD PTR [rip+0x19d43]        # 0x14001f558
   140005815:	lea    rcx,[rsp+0x70]
   14000581a:	call   QWORD PTR [rip+0x19d98]        # 0x14001f5b8
   140005820:	jmp    0x1400059d2
   140005825:	cmp    edx,r8d
   140005828:	jge    0x1400058e1
   14000582e:	mov    rax,QWORD PTR [r11+0x10]
   140005832:	lea    rcx,[rdx+rdx*2]
   140005836:	lea    rcx,[rax+rcx*8]
   14000583a:	cmp    DWORD PTR [rcx+r11*1+0x4],0x2
   140005840:	jne    0x1400058c0
   140005842:	lea    eax,[rdx+0x1]
   140005845:	mov    DWORD PTR [rbx+0x8],eax
   140005848:	dec    eax
   14000584a:	movsxd rcx,eax
   14000584d:	mov    rax,QWORD PTR [r11+0x10]
   140005851:	lea    rdx,[rcx+rcx*2]
   140005855:	lea    r8,[rax+rdx*8]
   140005859:	lea    rdx,[rsp+0x58]
   14000585e:	mov    r9d,DWORD PTR [r8+r11*1+0x14]
   140005863:	lea    rcx,[r8+r11*1+0x8]
   140005868:	mov    r8d,DWORD PTR [r8+r11*1+0x10]
   14000586d:	call   QWORD PTR [rip+0x19d5d]        # 0x14001f5d0
   140005873:	lea    rdx,[rsp+0x58]
   140005878:	lea    rcx,[rsp+0x118]
   140005880:	call   QWORD PTR [rip+0x19cd2]        # 0x14001f558
   140005886:	lea    rcx,[rsp+0x58]
   14000588b:	call   QWORD PTR [rip+0x19d27]        # 0x14001f5b8
   140005891:	lea    rdx,[rip+0x1a0c8]        # 0x14001f960
   140005898:	lea    rcx,[rsp+0x120]
   1400058a0:	call   QWORD PTR [rip+0x19d4a]        # 0x14001f5f0
   1400058a6:	test   eax,eax
   1400058a8:	je     0x1400059d2
   1400058ae:	mov    edx,0x1
   1400058b3:	mov    rcx,rbx
   1400058b6:	call   0x140019e30
   1400058bb:	jmp    0x1400059d2
   1400058c0:	cmp    edx,r8d
   1400058c3:	jge    0x1400058e1
   1400058c5:	mov    rax,QWORD PTR [r11+0x10]
   1400058c9:	lea    rcx,[rdx+rdx*2]
   1400058cd:	lea    rcx,[rax+rcx*8]
   1400058d1:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   1400058d7:	jne    0x1400058e1
   1400058d9:	lea    eax,[rdx+0x1]
   1400058dc:	mov    DWORD PTR [rbx+0x8],eax
   1400058df:	jmp    0x1400058eb
   1400058e1:	xor    edx,edx
   1400058e3:	mov    rcx,rbx
   1400058e6:	call   0x140019c50
   1400058eb:	mov    r8,QWORD PTR [rbx]
   1400058ee:	mov    eax,DWORD PTR [rbx+0x8]
   1400058f1:	dec    eax
   1400058f3:	cdqe   
   1400058f5:	lea    rcx,[rax+rax*2]
   1400058f9:	mov    rax,QWORD PTR [r8+0x10]
   1400058fd:	lea    rdx,[rax+rcx*8]
   140005901:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140005906:	lea    rcx,[rdx+r8*1+0x8]
   14000590b:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140005910:	lea    rdx,[rsp+0x60]
   140005915:	call   QWORD PTR [rip+0x19cb5]        # 0x14001f5d0
   14000591b:	lea    rdx,[rsp+0x60]
   140005920:	lea    rcx,[rsp+0x118]
   140005928:	call   QWORD PTR [rip+0x19c2a]        # 0x14001f558
   14000592e:	lea    rcx,[rsp+0x60]
   140005933:	call   QWORD PTR [rip+0x19c7f]        # 0x14001f5b8
   140005939:	mov    r11,QWORD PTR [rbx]
   14000593c:	movsxd rdx,DWORD PTR [rbx+0x8]
   140005940:	cmp    edx,DWORD PTR [r11+0x4]
   140005944:	jge    0x14000598e
   140005946:	mov    rax,QWORD PTR [r11+0x10]
   14000594a:	lea    rcx,[rdx+rdx*2]
   14000594e:	lea    rcx,[rax+rcx*8]
   140005952:	cmp    DWORD PTR [rcx+r11*1+0x4],0x9
   140005958:	jne    0x14000598e
   14000595a:	lea    eax,[rdx+0x1]
   14000595d:	lea    rdx,[rsp+0x68]
   140005962:	mov    r8d,0xa
   140005968:	mov    rcx,rbx
   14000596b:	mov    DWORD PTR [rbx+0x8],eax
   14000596e:	call   0x1400042b0
   140005973:	lea    rcx,[rsp+0x20]
   140005978:	mov    rdx,rax
   14000597b:	call   QWORD PTR [rip+0x19bd7]        # 0x14001f558
   140005981:	lea    rcx,[rsp+0x68]
   140005986:	call   QWORD PTR [rip+0x19c2c]        # 0x14001f5b8
   14000598c:	jmp    0x1400059d2
   14000598e:	lea    rdx,[rip+0x1a083]        # 0x14001fa18
   140005995:	lea    rcx,[rsp+0x118]
   14000599d:	call   QWORD PTR [rip+0x19c4d]        # 0x14001f5f0
   1400059a3:	test   eax,eax
   1400059a5:	je     0x1400059d2
   1400059a7:	lea    rdx,[rip+0x1a062]        # 0x14001fa10
   1400059ae:	lea    rcx,[rsp+0x118]
   1400059b6:	call   QWORD PTR [rip+0x19c34]        # 0x14001f5f0
   1400059bc:	test   eax,eax
   1400059be:	je     0x1400059d2
   1400059c0:	lea    rdx,[rip+0x19f95]        # 0x14001f95c
   1400059c7:	lea    rcx,[rsp+0x20]
   1400059cc:	call   QWORD PTR [rip+0x197f6]        # 0x14001f1c8
   1400059d2:	lea    rax,[rsp+0x120]
   1400059da:	lea    rcx,[rsp+0xa0]
   1400059e2:	mov    DWORD PTR [rsp+0xa8],r14d
   1400059ea:	mov    QWORD PTR [rsp+0xa0],rax
   1400059f2:	call   QWORD PTR [rip+0x197f0]        # 0x14001f1e8
   1400059f8:	movsx  ecx,al
   1400059fb:	add    ecx,0xffffffbc
   1400059fe:	cmp    ecx,0x13
   140005a01:	ja     0x140005d9a
   140005a07:	movsxd rax,ecx
   140005a0a:	mov    ecx,DWORD PTR [r15+rax*4+0x5f9c]
   140005a12:	add    rcx,r15
   140005a15:	jmp    rcx
   140005a17:	lea    rdx,[rip+0x19f36]        # 0x14001f954
   140005a1e:	lea    rcx,[rsp+0x120]
   140005a26:	call   QWORD PTR [rip+0x19bc4]        # 0x14001f5f0
   140005a2c:	test   eax,eax
   140005a2e:	jne    0x140005d9a
   140005a34:	lea    rcx,[rdi+0x10]
   140005a38:	lea    rdx,[rsp+0x118]
   140005a40:	call   QWORD PTR [rip+0x19b12]        # 0x14001f558
   140005a46:	jmp    0x140005da7
   140005a4b:	lea    rdx,[rip+0x19efa]        # 0x14001f94c
   140005a52:	lea    rcx,[rsp+0x120]
   140005a5a:	call   QWORD PTR [rip+0x19b90]        # 0x14001f5f0
   140005a60:	test   eax,eax
   140005a62:	jne    0x140005a7b
   140005a64:	lea    rcx,[rdi+0x18]
   140005a68:	lea    rdx,[rsp+0x118]
   140005a70:	call   QWORD PTR [rip+0x19ae2]        # 0x14001f558
   140005a76:	jmp    0x140005da7
   140005a7b:	lea    rdx,[rip+0x19ec2]        # 0x14001f944
   140005a82:	lea    rcx,[rsp+0x120]
   140005a8a:	call   QWORD PTR [rip+0x19b60]        # 0x14001f5f0
   140005a90:	test   eax,eax
   140005a92:	jne    0x140005ad6
   140005a94:	lea    rdx,[rsp+0x118]
   140005a9c:	lea    rcx,[rsp+0x48]
   140005aa1:	call   QWORD PTR [rip+0x19b31]        # 0x14001f5d8
   140005aa7:	lea    rdx,[rsp+0x20]
   140005aac:	lea    rcx,[rsp+0x48]
   140005ab1:	call   QWORD PTR [rip+0x19b29]        # 0x14001f5e0
   140005ab7:	lea    rcx,[rdi+0x28]
   140005abb:	lea    rdx,[rsp+0x48]
   140005ac0:	call   QWORD PTR [rip+0x19a92]        # 0x14001f558
   140005ac6:	lea    rcx,[rsp+0x48]
   140005acb:	call   QWORD PTR [rip+0x19ae7]        # 0x14001f5b8
   140005ad1:	jmp    0x140005da7
   140005ad6:	lea    rdx,[rip+0x19e83]        # 0x14001f960
   140005add:	lea    rcx,[rsp+0x120]
   140005ae5:	call   QWORD PTR [rip+0x19b05]        # 0x14001f5f0
   140005aeb:	test   eax,eax
   140005aed:	jne    0x140005d9a
   140005af3:	lea    r8d,[rax+0xa]
   140005af7:	lea    rdx,[rsp+0x110]
   140005aff:	lea    rcx,[rsp+0x118]
   140005b07:	mov    BYTE PTR [rsp+0x110],r14b
   140005b0f:	call   QWORD PTR [rip+0x196bb]        # 0x14001f1d0
   140005b15:	mov    DWORD PTR [rdi+0x74],eax
   140005b18:	cmp    BYTE PTR [rsp+0x110],r14b
   140005b20:	je     0x140005b2a
   140005b22:	test   eax,eax
   140005b24:	jns    0x140005da7
   140005b2a:	mov    edx,0x1
   140005b2f:	jmp    0x140005d9f
   140005b34:	lea    rdx,[rip+0x19dfd]        # 0x14001f938
   140005b3b:	lea    rcx,[rsp+0x120]
   140005b43:	call   QWORD PTR [rip+0x19aa7]        # 0x14001f5f0
   140005b49:	test   eax,eax
   140005b4b:	jne    0x140005b8f
   140005b4d:	lea    rdx,[rsp+0x118]
   140005b55:	lea    rcx,[rsp+0x38]
   140005b5a:	call   QWORD PTR [rip+0x19a78]        # 0x14001f5d8
   140005b60:	lea    rdx,[rsp+0x20]
   140005b65:	lea    rcx,[rsp+0x38]
   140005b6a:	call   QWORD PTR [rip+0x19a70]        # 0x14001f5e0
   140005b70:	lea    rdx,[rsp+0x38]
   140005b75:	lea    rcx,[rdi+0x38]
   140005b79:	call   QWORD PTR [rip+0x199d9]        # 0x14001f558
   140005b7f:	lea    rcx,[rsp+0x38]
   140005b84:	call   QWORD PTR [rip+0x19a2e]        # 0x14001f5b8
   140005b8a:	jmp    0x140005da7
   140005b8f:	lea    rdx,[rip+0x19d96]        # 0x14001f92c
   140005b96:	lea    rcx,[rsp+0x120]
   140005b9e:	call   QWORD PTR [rip+0x19a4c]        # 0x14001f5f0
   140005ba4:	test   eax,eax
   140005ba6:	jne    0x140005d9a
   140005bac:	lea    rdx,[rsp+0x118]
   140005bb4:	lea    rcx,[rsp+0x28]
   140005bb9:	call   QWORD PTR [rip+0x19a19]        # 0x14001f5d8
   140005bbf:	lea    rdx,[rsp+0x20]
   140005bc4:	lea    rcx,[rsp+0x28]
   140005bc9:	call   QWORD PTR [rip+0x19a11]        # 0x14001f5e0
   140005bcf:	lea    rdx,[rsp+0x28]
   140005bd4:	lea    rcx,[rdi+0x48]
   140005bd8:	call   QWORD PTR [rip+0x1997a]        # 0x14001f558
   140005bde:	lea    rcx,[rsp+0x28]
   140005be3:	call   QWORD PTR [rip+0x199cf]        # 0x14001f5b8
   140005be9:	jmp    0x140005da7
   140005bee:	lea    rdx,[rip+0x19d2f]        # 0x14001f924
   140005bf5:	lea    rcx,[rsp+0x120]
   140005bfd:	call   QWORD PTR [rip+0x199ed]        # 0x14001f5f0
   140005c03:	test   eax,eax
   140005c05:	je     0x140005c14
   140005c07:	mov    edx,0x2
   140005c0c:	mov    rcx,rbx
   140005c0f:	call   0x140019e30
   140005c14:	lea    rcx,[rdi+0x20]
   140005c18:	lea    rdx,[rsp+0x118]
   140005c20:	call   QWORD PTR [rip+0x19932]        # 0x14001f558
   140005c26:	jmp    0x140005da7
   140005c2b:	lea    rdx,[rip+0x19ce6]        # 0x14001f918
   140005c32:	lea    rcx,[rsp+0x120]
   140005c3a:	call   QWORD PTR [rip+0x199b0]        # 0x14001f5f0
   140005c40:	test   eax,eax
   140005c42:	je     0x140005c51
   140005c44:	mov    edx,0x2
   140005c49:	mov    rcx,rbx
   140005c4c:	call   0x140019e30
   140005c51:	lea    rdx,[rsp+0x118]
   140005c59:	lea    rcx,[rsp+0x30]
   140005c5e:	call   QWORD PTR [rip+0x19974]        # 0x14001f5d8
   140005c64:	lea    rdx,[rsp+0x20]
   140005c69:	lea    rcx,[rsp+0x30]
   140005c6e:	call   QWORD PTR [rip+0x1996c]        # 0x14001f5e0
   140005c74:	lea    rdx,[rsp+0x30]
   140005c79:	lea    rcx,[rdi+0x30]
   140005c7d:	call   QWORD PTR [rip+0x198d5]        # 0x14001f558
   140005c83:	lea    rcx,[rsp+0x30]
   140005c88:	call   QWORD PTR [rip+0x1992a]        # 0x14001f5b8
   140005c8e:	jmp    0x140005da7
   140005c93:	lea    rdx,[rip+0x19c6e]        # 0x14001f908
   140005c9a:	lea    rcx,[rsp+0x120]
   140005ca2:	call   QWORD PTR [rip+0x19948]        # 0x14001f5f0
   140005ca8:	test   eax,eax
   140005caa:	je     0x140005cb9
   140005cac:	mov    edx,0x2
   140005cb1:	mov    rcx,rbx
   140005cb4:	call   0x140019e30
   140005cb9:	lea    rdx,[rsp+0x118]
   140005cc1:	lea    rcx,[rsp+0x40]
   140005cc6:	call   QWORD PTR [rip+0x1990c]        # 0x14001f5d8
   140005ccc:	lea    rdx,[rsp+0x20]
   140005cd1:	lea    rcx,[rsp+0x40]
   140005cd6:	call   QWORD PTR [rip+0x19904]        # 0x14001f5e0
   140005cdc:	lea    rcx,[rdi+0x40]
   140005ce0:	lea    rdx,[rsp+0x40]
   140005ce5:	call   QWORD PTR [rip+0x1986d]        # 0x14001f558
   140005ceb:	lea    rcx,[rsp+0x40]
   140005cf0:	call   QWORD PTR [rip+0x198c2]        # 0x14001f5b8
   140005cf6:	jmp    0x140005da7
   140005cfb:	lea    rdx,[rip+0x19bfe]        # 0x14001f900
   140005d02:	lea    rcx,[rsp+0x120]
   140005d0a:	call   QWORD PTR [rip+0x198e0]        # 0x14001f5f0
   140005d10:	test   eax,eax
   140005d12:	je     0x140005d21
   140005d14:	mov    edx,0x2
   140005d19:	mov    rcx,rbx
   140005d1c:	call   0x140019e30
   140005d21:	lea    rcx,[rdi+0x58]
   140005d25:	lea    rdx,[rsp+0x118]
   140005d2d:	call   QWORD PTR [rip+0x19825]        # 0x14001f558
   140005d33:	jmp    0x140005da7
   140005d35:	lea    rdx,[rip+0x19bbc]        # 0x14001f8f8
   140005d3c:	lea    rcx,[rsp+0x120]
   140005d44:	call   QWORD PTR [rip+0x198a6]        # 0x14001f5f0
   140005d4a:	test   eax,eax
   140005d4c:	je     0x140005d5b
   140005d4e:	mov    edx,0x2
   140005d53:	mov    rcx,rbx
   140005d56:	call   0x140019e30
   140005d5b:	lea    rdx,[rsp+0x118]
   140005d63:	lea    rcx,[rsp+0x50]
   140005d68:	call   QWORD PTR [rip+0x1986a]        # 0x14001f5d8
   140005d6e:	lea    rdx,[rsp+0x20]
   140005d73:	lea    rcx,[rsp+0x50]
   140005d78:	call   QWORD PTR [rip+0x19862]        # 0x14001f5e0
   140005d7e:	lea    rdx,[rsp+0x50]
   140005d83:	lea    rcx,[rdi+0x50]
   140005d87:	call   QWORD PTR [rip+0x197cb]        # 0x14001f558
   140005d8d:	lea    rcx,[rsp+0x50]
   140005d92:	call   QWORD PTR [rip+0x19820]        # 0x14001f5b8
   140005d98:	jmp    0x140005da7
   140005d9a:	mov    edx,0x2
   140005d9f:	mov    rcx,rbx
   140005da2:	call   0x140019e30
   140005da7:	lea    rcx,[rsp+0x20]
   140005dac:	call   QWORD PTR [rip+0x19806]        # 0x14001f5b8
   140005db2:	lea    rcx,[rsp+0x118]
   140005dba:	call   QWORD PTR [rip+0x197f8]        # 0x14001f5b8
   140005dc0:	lea    rcx,[rsp+0x120]
   140005dc8:	call   QWORD PTR [rip+0x197ea]        # 0x14001f5b8
   140005dce:	jmp    0x140005650
   140005dd3:	lea    rcx,[rdi+0x18]
   140005dd7:	call   QWORD PTR [rip+0x19403]        # 0x14001f1e0
   140005ddd:	test   al,al
   140005ddf:	je     0x140005e5f
   140005de1:	lea    rcx,[rdi+0x10]
   140005de5:	call   QWORD PTR [rip+0x193f5]        # 0x14001f1e0
   140005deb:	test   al,al
   140005ded:	je     0x140005e5f
   140005def:	lea    rcx,[rsp+0x110]
   140005df7:	call   QWORD PTR [rip+0x197c3]        # 0x14001f5c0
   140005dfd:	lea    rdx,[rip+0x19adc]        # 0x14001f8e0
   140005e04:	lea    rcx,[rsp+0x110]
   140005e0c:	call   QWORD PTR [rip+0x1976e]        # 0x14001f580
   140005e12:	lea    rcx,[rsp+0x110]
   140005e1a:	mov    rdx,rdi
   140005e1d:	call   QWORD PTR [rip+0x197bd]        # 0x14001f5e0
   140005e23:	lea    rdx,[rip+0x19a56]        # 0x14001f880
   140005e2a:	lea    rcx,[rsp+0x110]
   140005e32:	call   QWORD PTR [rip+0x19748]        # 0x14001f580
   140005e38:	lea    rcx,[rsp+0x110]
   140005e40:	call   QWORD PTR [rip+0x197b2]        # 0x14001f5f8
   140005e46:	mov    rcx,rbx
   140005e49:	mov    rdx,rax
   140005e4c:	call   0x140019d80
   140005e51:	lea    rcx,[rsp+0x110]
   140005e59:	call   QWORD PTR [rip+0x19759]        # 0x14001f5b8
   140005e5f:	cmp    BYTE PTR [rdi+0x6c],r14b
   140005e63:	je     0x140005f77
   140005e69:	lea    rcx,[rdi+0x20]
   140005e6d:	call   QWORD PTR [rip+0x1936d]        # 0x14001f1e0
   140005e73:	test   al,al
   140005e75:	jne    0x140005eeb
   140005e77:	lea    rcx,[rsp+0x110]
   140005e7f:	call   QWORD PTR [rip+0x1973b]        # 0x14001f5c0
   140005e85:	lea    rdx,[rip+0x19a54]        # 0x14001f8e0
   140005e8c:	lea    rcx,[rsp+0x110]
   140005e94:	call   QWORD PTR [rip+0x196e6]        # 0x14001f580
   140005e9a:	lea    rcx,[rsp+0x110]
   140005ea2:	mov    rdx,rdi
   140005ea5:	call   QWORD PTR [rip+0x19735]        # 0x14001f5e0
   140005eab:	lea    rdx,[rip+0x19986]        # 0x14001f838
   140005eb2:	lea    rcx,[rsp+0x110]
   140005eba:	call   QWORD PTR [rip+0x196c0]        # 0x14001f580
   140005ec0:	lea    rcx,[rsp+0x110]
   140005ec8:	mov    BYTE PTR [rdi+0x6c],r14b
   140005ecc:	call   QWORD PTR [rip+0x19726]        # 0x14001f5f8
   140005ed2:	mov    rcx,rbx
   140005ed5:	mov    rdx,rax
   140005ed8:	call   0x140019d80
   140005edd:	lea    rcx,[rsp+0x110]
   140005ee5:	call   QWORD PTR [rip+0x196cd]        # 0x14001f5b8
   140005eeb:	cmp    BYTE PTR [rdi+0x6c],r14b
   140005eef:	je     0x140005f77
   140005ef5:	lea    rcx,[rdi+0x58]
   140005ef9:	call   QWORD PTR [rip+0x192e1]        # 0x14001f1e0
   140005eff:	test   al,al
   140005f01:	jne    0x140005f77
   140005f03:	lea    rcx,[rsp+0x110]
   140005f0b:	call   QWORD PTR [rip+0x196af]        # 0x14001f5c0
   140005f11:	lea    rdx,[rip+0x199c8]        # 0x14001f8e0
   140005f18:	lea    rcx,[rsp+0x110]
   140005f20:	call   QWORD PTR [rip+0x1965a]        # 0x14001f580
   140005f26:	lea    rcx,[rsp+0x110]
   140005f2e:	mov    rdx,rdi
   140005f31:	call   QWORD PTR [rip+0x196a9]        # 0x14001f5e0
   140005f37:	lea    rdx,[rip+0x198ba]        # 0x14001f7f8
   140005f3e:	lea    rcx,[rsp+0x110]
   140005f46:	call   QWORD PTR [rip+0x19634]        # 0x14001f580
   140005f4c:	lea    rcx,[rsp+0x110]
   140005f54:	mov    BYTE PTR [rdi+0x6c],r14b
   140005f58:	call   QWORD PTR [rip+0x1969a]        # 0x14001f5f8
   140005f5e:	mov    rcx,rbx
   140005f61:	mov    rdx,rax
   140005f64:	call   0x140019d80
   140005f69:	lea    rcx,[rsp+0x110]
   140005f71:	call   QWORD PTR [rip+0x19641]        # 0x14001f5b8
   140005f77:	lea    rcx,[rsp+0x128]
   140005f7f:	call   QWORD PTR [rip+0x19633]        # 0x14001f5b8
   140005f85:	add    rsp,0xc8
   140005f8c:	pop    r15
   140005f8e:	pop    r14
   140005f90:	pop    r13
   140005f92:	pop    r12
   140005f94:	pop    rdi
   140005f95:	pop    rsi
   140005f96:	pop    rbp
   140005f97:	pop    rbx
   140005f98:	ret    
   140005f99:	nop    DWORD PTR [rax]
   140005f9c:	sub    ebx,DWORD PTR [rax+rax*1+0x0]
   140005fa0:	xchg   ebx,eax
   140005fa1:	pop    rsp
   140005fa2:	add    BYTE PTR [rax],al
   140005fa4:	(bad)  
   140005fa5:	pop    rbp
   140005fa6:	add    BYTE PTR [rax],al
   140005fa8:	(bad)  
   140005fa9:	pop    rbp
   140005faa:	add    BYTE PTR [rax],al
   140005fac:	(bad)  
   140005fad:	pop    rbp
   140005fae:	add    BYTE PTR [rax],al
   140005fb0:	(bad)  
   140005fb1:	pop    rbp
   140005fb2:	add    BYTE PTR [rax],al
   140005fb4:	(bad)  
   140005fb5:	pop    rbp
   140005fb6:	add    BYTE PTR [rax],al
   140005fb8:	(bad)  
   140005fb9:	pop    rbp
   140005fba:	add    BYTE PTR [rax],al
   140005fbc:	(bad)  
   140005fbd:	pop    rbp
   140005fbe:	add    BYTE PTR [rax],al
   140005fc0:	(bad)  
   140005fc1:	pop    rdx
   140005fc2:	add    BYTE PTR [rax],al
   140005fc4:	sti    
   140005fc5:	pop    rsp
   140005fc6:	add    BYTE PTR [rax],al
   140005fc8:	(bad)  
   140005fc9:	pop    rbp
   140005fca:	add    BYTE PTR [rax],al
   140005fcc:	(bad)  
   140005fcd:	pop    rbp
   140005fce:	add    BYTE PTR [rax],al
   140005fd0:	(bad)  
   140005fd1:	pop    rbp
   140005fd2:	add    BYTE PTR [rax],al
   140005fd4:	rex.WXB pop r10
   140005fd6:	add    BYTE PTR [rax],al
   140005fd8:	xor    al,0x5b
   140005fda:	add    BYTE PTR [rax],al
   140005fdc:	(bad)  
   140005fdd:	pop    rbp
   140005fde:	add    BYTE PTR [rax],al
   140005fe0:	xor    eax,0x9a00005d
   140005fe5:	pop    rbp
   140005fe6:	add    BYTE PTR [rax],al
   140005fe8:	out    dx,al
   140005fe9:	pop    rbx
   140005fea:	add    BYTE PTR [rax],al
   140005fec:	int3   
   140005fed:	int3   
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	rex push rbx
   140005ff2:	sub    rsp,0x20
   140005ff6:	mov    r8,QWORD PTR [rcx]
   140005ff9:	mov    rbx,rcx
   140005ffc:	movsxd rcx,DWORD PTR [rcx+0x8]
   140006000:	cmp    ecx,DWORD PTR [r8+0x4]
   140006004:	jge    0x140006022
   140006006:	mov    rax,QWORD PTR [r8+0x10]
   14000600a:	lea    rdx,[rcx+rcx*2]
   14000600e:	lea    rdx,[rax+rdx*8]
   140006012:	cmp    DWORD PTR [rdx+r8*1+0x4],0x9
   140006018:	jne    0x140006022
   14000601a:	lea    eax,[rcx+0x1]
   14000601d:	mov    DWORD PTR [rbx+0x8],eax
   140006020:	jmp    0x14000602c
   140006022:	xor    edx,edx
   140006024:	mov    rcx,rbx
   140006027:	call   0x140019c50
   14000602c:	lea    rdx,[rsp+0x30]
   140006031:	mov    r8d,0xa
   140006037:	mov    rcx,rbx
   14000603a:	call   0x1400042b0
   14000603f:	xor    edx,edx
   140006041:	lea    rcx,[rsp+0x30]
   140006046:	lea    r8d,[rdx+0x1]
   14000604a:	call   QWORD PTR [rip+0x19510]        # 0x14001f560
   140006050:	lea    rcx,[rsp+0x30]
   140006055:	mov    edx,0x1
   14000605a:	call   QWORD PTR [rip+0x19178]        # 0x14001f1d8
   140006060:	mov    rax,QWORD PTR [rbx+0x50]
   140006064:	mov    ecx,DWORD PTR [rax]
   140006066:	cmp    ecx,0x1
   140006069:	je     0x1400060a7
   14000606b:	test   ecx,ecx
   14000606d:	je     0x1400060a7
   14000606f:	lea    rcx,[rbx+0x50]
   140006073:	mov    edx,0x7fffffff
   140006078:	mov    r8d,0x1
   14000607e:	call   0x1400030e0
   140006083:	test   rax,rax
   140006086:	je     0x1400060c9
   140006088:	lea    rdx,[rsp+0x30]
   14000608d:	mov    rcx,rax
   140006090:	call   QWORD PTR [rip+0x19542]        # 0x14001f5d8
   140006096:	lea    rcx,[rsp+0x30]
   14000609b:	call   QWORD PTR [rip+0x19517]        # 0x14001f5b8
   1400060a1:	add    rsp,0x20
   1400060a5:	pop    rbx
   1400060a6:	ret    
   1400060a7:	lea    rdx,[rsp+0x30]
   1400060ac:	lea    rcx,[rsp+0x38]
   1400060b1:	call   QWORD PTR [rip+0x19521]        # 0x14001f5d8
   1400060b7:	lea    rcx,[rbx+0x50]
   1400060bb:	call   QWORD PTR [rip+0x190df]        # 0x14001f1a0
   1400060c1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400060c6:	mov    QWORD PTR [rax],rcx
   1400060c9:	lea    rcx,[rsp+0x30]
   1400060ce:	call   QWORD PTR [rip+0x194e4]        # 0x14001f5b8
   1400060d4:	add    rsp,0x20
   1400060d8:	pop    rbx
   1400060d9:	ret    
   1400060da:	int3   
   1400060db:	int3   
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400060ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400060ef:	push   rdi
   1400060f0:	push   r12
   1400060f2:	push   r13
   1400060f4:	sub    rsp,0x30
   1400060f8:	mov    rax,QWORD PTR [rcx]
   1400060fb:	mov    rbx,rcx
   1400060fe:	mov    rbp,r9
   140006101:	mov    ecx,DWORD PTR [rax+0x10]
   140006104:	mov    r12,r8
   140006107:	mov    rdi,rdx
   14000610a:	cmp    ecx,0x1
   14000610d:	je     0x14000611b
   14000610f:	test   ecx,ecx
   140006111:	je     0x14000611b
   140006113:	mov    rcx,rbx
   140006116:	call   0x140003b90
   14000611b:	mov    rax,QWORD PTR [rbx]
   14000611e:	mov    rcx,r12
   140006121:	mov    edx,DWORD PTR [rax+0x24]
   140006124:	call   QWORD PTR [rip+0x193a6]        # 0x14001f4d0
   14000612a:	mov    rdx,r12
   14000612d:	mov    rcx,rbx
   140006130:	mov    r8d,eax
   140006133:	mov    r13d,eax
   140006136:	call   0x1400025e0
   14000613b:	mov    rcx,QWORD PTR [rbx]
   14000613e:	mov    rsi,rax
   140006141:	mov    rax,QWORD PTR [rax]
   140006144:	cmp    rax,rcx
   140006147:	jne    0x14000619c
   140006149:	mov    edx,DWORD PTR [rcx+0x20]
   14000614c:	cmp    DWORD PTR [rcx+0x14],edx
   14000614f:	jl     0x140006181
   140006151:	movsx  edx,WORD PTR [rcx+0x1e]
   140006155:	inc    edx
   140006157:	call   QWORD PTR [rip+0x1909b]        # 0x14001f1f8
   14000615d:	mov    r11,QWORD PTR [rbx]
   140006160:	mov    rcx,r12
   140006163:	mov    edx,DWORD PTR [r11+0x24]
   140006167:	call   QWORD PTR [rip+0x19363]        # 0x14001f4d0
   14000616d:	mov    rdx,r12
   140006170:	mov    rcx,rbx
   140006173:	mov    r8d,eax
   140006176:	mov    r13d,eax
   140006179:	call   0x1400025e0
   14000617e:	mov    rsi,rax
   140006181:	mov    r9,rbp
   140006184:	mov    r8,r12
   140006187:	mov    edx,r13d
   14000618a:	mov    rcx,rbx
   14000618d:	mov    QWORD PTR [rsp+0x20],rsi
   140006192:	call   0x1400023f0
   140006197:	mov    QWORD PTR [rdi],rax
   14000619a:	jmp    0x1400061af
   14000619c:	lea    rcx,[rax+0x18]
   1400061a0:	mov    rdx,rbp
   1400061a3:	call   QWORD PTR [rip+0x193af]        # 0x14001f558
   1400061a9:	mov    r11,QWORD PTR [rsi]
   1400061ac:	mov    QWORD PTR [rdi],r11
   1400061af:	mov    rbx,QWORD PTR [rsp+0x50]
   1400061b4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400061b9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400061be:	mov    rax,rdi
   1400061c1:	add    rsp,0x30
   1400061c5:	pop    r13
   1400061c7:	pop    r12
   1400061c9:	pop    rdi
   1400061ca:	ret    
   1400061cb:	int3   
   1400061cc:	int3   
   1400061cd:	int3   
   1400061ce:	int3   
   1400061cf:	int3   
   1400061d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400061d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400061da:	mov    QWORD PTR [rsp+0x20],rsi
   1400061df:	push   rdi
   1400061e0:	push   r12
   1400061e2:	push   r13
   1400061e4:	push   r14
   1400061e6:	push   r15
   1400061e8:	sub    rsp,0x20
   1400061ec:	mov    r10,QWORD PTR [rcx]
   1400061ef:	mov    rbp,rdx
   1400061f2:	mov    r15,rcx
   1400061f5:	mov    rax,QWORD PTR [r10]
   1400061f8:	mov    rcx,rbp
   1400061fb:	mov    r8,QWORD PTR [rax]
   1400061fe:	mov    rax,QWORD PTR [r8+0x8]
   140006202:	mov    r8,QWORD PTR [rax]
   140006205:	mov    rax,QWORD PTR [r10+0x8]
   140006209:	mov    r9d,DWORD PTR [r8+0x4]
   14000620d:	mov    r8,QWORD PTR [rax]
   140006210:	mov    eax,DWORD PTR [r8+0x4]
   140006214:	xor    r8d,r8d
   140006217:	lea    eax,[rax+r9*1+0x34]
   14000621c:	mov    edx,eax
   14000621e:	mov    DWORD PTR [rsp+0x50],eax
   140006222:	call   QWORD PTR [rip+0x192b0]        # 0x14001f4d8
   140006228:	mov    rcx,rbp
   14000622b:	call   QWORD PTR [rip+0x193c7]        # 0x14001f5f8
   140006231:	mov    r14,QWORD PTR [r15]
   140006234:	mov    r13,QWORD PTR [r14]
   140006237:	mov    rdi,rax
   14000623a:	mov    r12,rax
   14000623d:	mov    rbx,QWORD PTR [r13+0x0]
   140006241:	mov    rax,QWORD PTR [rbx]
   140006244:	movzx  ecx,BYTE PTR [rax]
   140006247:	test   cl,cl
   140006249:	je     0x14000625e
   14000624b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006250:	inc    rax
   140006253:	mov    BYTE PTR [rdi],cl
   140006255:	inc    rdi
   140006258:	mov    cl,BYTE PTR [rax]
   14000625a:	test   cl,cl
   14000625c:	jne    0x140006250
   14000625e:	mov    rbx,QWORD PTR [rbx+0x8]
   140006262:	mov    rcx,rbx
   140006265:	call   QWORD PTR [rip+0x1938d]        # 0x14001f5f8
   14000626b:	mov    rcx,rbx
   14000626e:	mov    rsi,rax
   140006271:	call   QWORD PTR [rip+0x190e9]        # 0x14001f360
   140006277:	cmp    rsi,rax
   14000627a:	je     0x140006291
   14000627c:	nop    DWORD PTR [rax+0x0]
   140006280:	movzx  ecx,BYTE PTR [rsi]
   140006283:	inc    rsi
   140006286:	inc    rdi
   140006289:	mov    BYTE PTR [rdi-0x1],cl
   14000628c:	cmp    rsi,rax
   14000628f:	jne    0x140006280
   140006291:	mov    rax,QWORD PTR [r13+0x8]
   140006295:	movzx  ecx,BYTE PTR [rax]
   140006298:	test   cl,cl
   14000629a:	je     0x1400062ae
   14000629c:	nop    DWORD PTR [rax+0x0]
   1400062a0:	inc    rax
   1400062a3:	mov    BYTE PTR [rdi],cl
   1400062a5:	inc    rdi
   1400062a8:	mov    cl,BYTE PTR [rax]
   1400062aa:	test   cl,cl
   1400062ac:	jne    0x1400062a0
   1400062ae:	mov    rbx,QWORD PTR [r14+0x8]
   1400062b2:	mov    rcx,rbx
   1400062b5:	call   QWORD PTR [rip+0x1933d]        # 0x14001f5f8
   1400062bb:	mov    rcx,rbx
   1400062be:	mov    rsi,rax
   1400062c1:	call   QWORD PTR [rip+0x19099]        # 0x14001f360
   1400062c7:	cmp    rsi,rax
   1400062ca:	je     0x1400062e1
   1400062cc:	nop    DWORD PTR [rax+0x0]
   1400062d0:	movzx  ecx,BYTE PTR [rsi]
   1400062d3:	inc    rsi
   1400062d6:	inc    rdi
   1400062d9:	mov    BYTE PTR [rdi-0x1],cl
   1400062dc:	cmp    rsi,rax
   1400062df:	jne    0x1400062d0
   1400062e1:	mov    rax,QWORD PTR [r15+0x8]
   1400062e5:	movzx  ecx,BYTE PTR [rax]
   1400062e8:	test   cl,cl
   1400062ea:	je     0x1400062fe
   1400062ec:	nop    DWORD PTR [rax+0x0]
   1400062f0:	inc    rax
   1400062f3:	mov    BYTE PTR [rdi],cl
   1400062f5:	inc    rdi
   1400062f8:	mov    cl,BYTE PTR [rax]
   1400062fa:	test   cl,cl
   1400062fc:	jne    0x1400062f0
   1400062fe:	movsxd rax,DWORD PTR [rsp+0x50]
   140006303:	mov    rcx,rdi
   140006306:	sub    rcx,r12
   140006309:	cmp    rax,rcx
   14000630c:	je     0x14000631c
   14000630e:	sub    edi,r12d
   140006311:	mov    rcx,rbp
   140006314:	mov    edx,edi
   140006316:	call   QWORD PTR [rip+0x19274]        # 0x14001f590
   14000631c:	mov    rbx,QWORD PTR [rsp+0x58]
   140006321:	mov    rsi,QWORD PTR [rsp+0x68]
   140006326:	mov    rax,rbp
   140006329:	mov    rbp,QWORD PTR [rsp+0x60]
   14000632e:	add    rsp,0x20
   140006332:	pop    r15
   140006334:	pop    r14
   140006336:	pop    r13
   140006338:	pop    r12
   14000633a:	pop    rdi
   14000633b:	ret    
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	rex push rbx
   140006342:	sub    rsp,0x20
   140006346:	mov    rax,QWORD PTR [rcx]
   140006349:	mov    rbx,rcx
   14000634c:	mov    ecx,DWORD PTR [rax]
   14000634e:	cmp    ecx,0x1
   140006351:	je     0x14000639b
   140006353:	test   ecx,ecx
   140006355:	je     0x14000639b
   140006357:	mov    r8d,DWORD PTR [rax+0x8]
   14000635b:	btr    r8d,0x1f
   140006360:	test   r8d,r8d
   140006363:	jne    0x14000638d
   140006365:	mov    edx,0x8
   14000636a:	lea    r9d,[r8+0x2]
   14000636e:	xor    r8d,r8d
   140006371:	mov    rcx,rdx
   140006374:	call   QWORD PTR [rip+0x1919e]        # 0x14001f518
   14000637a:	mov    QWORD PTR [rbx],rax
   14000637d:	mov    rcx,rax
   140006380:	mov    rax,QWORD PTR [rax+0x10]
   140006384:	add    rax,rcx
   140006387:	add    rsp,0x20
   14000638b:	pop    rbx
   14000638c:	ret    
   14000638d:	mov    edx,DWORD PTR [rax+0x4]
   140006390:	xor    r9d,r9d
   140006393:	mov    rcx,rbx
   140006396:	call   0x140003220
   14000639b:	mov    rcx,QWORD PTR [rbx]
   14000639e:	mov    rax,QWORD PTR [rcx+0x10]
   1400063a2:	add    rax,rcx
   1400063a5:	add    rsp,0x20
   1400063a9:	pop    rbx
   1400063aa:	ret    
   1400063ab:	int3   
   1400063ac:	int3   
   1400063ad:	int3   
   1400063ae:	int3   
   1400063af:	int3   
   1400063b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400063b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400063ba:	mov    DWORD PTR [rsp+0x10],edx
   1400063be:	push   rsi
   1400063bf:	push   rdi
   1400063c0:	push   r12
   1400063c2:	push   r13
   1400063c4:	push   r14
   1400063c6:	sub    rsp,0x20
   1400063ca:	mov    rdx,QWORD PTR [rcx]
   1400063cd:	movsxd r13,r8d
   1400063d0:	mov    r12,rcx
   1400063d3:	movsxd rax,DWORD PTR [rdx+0x8]
   1400063d7:	mov    r8d,r13d
   1400063da:	lea    r14,[rdx+rax*8+0x10]
   1400063df:	lea    rdx,[rsp+0x58]
   1400063e4:	call   QWORD PTR [rip+0x190be]        # 0x14001f4a8
   1400063ea:	mov    r10,QWORD PTR [r12]
   1400063ee:	movsxd rdx,DWORD PTR [rsp+0x58]
   1400063f3:	movsxd r9,DWORD PTR [r10+0x8]
   1400063f7:	mov    rbp,rax
   1400063fa:	mov    rdi,r14
   1400063fd:	add    rdx,r9
   140006400:	lea    rbx,[r10+r9*8+0x10]
   140006405:	lea    rsi,[r10+rdx*8+0x10]
   14000640a:	cmp    rbx,rsi
   14000640d:	je     0x14000642d
   14000640f:	nop
   140006410:	test   rbx,rbx
   140006413:	je     0x140006420
   140006415:	mov    rdx,rdi
   140006418:	mov    rcx,rbx
   14000641b:	call   0x140003fc0
   140006420:	add    rbx,0x8
   140006424:	add    rdi,0x8
   140006428:	cmp    rbx,rsi
   14000642b:	jne    0x140006410
   14000642d:	mov    r8,QWORD PTR [r12]
   140006431:	movsxd rdx,DWORD PTR [rsp+0x58]
   140006436:	movsxd rcx,DWORD PTR [r8+0x8]
   14000643a:	movsxd rax,DWORD PTR [r8+0xc]
   14000643e:	lea    rdi,[r14+rdx*8]
   140006442:	add    rcx,rdx
   140006445:	lea    rsi,[r8+rax*8+0x10]
   14000644a:	add    rcx,r13
   14000644d:	lea    rbx,[r8+rcx*8+0x10]
   140006452:	cmp    rbx,rsi
   140006455:	je     0x140006474
   140006457:	test   rbx,rbx
   14000645a:	je     0x140006467
   14000645c:	mov    rdx,rdi
   14000645f:	mov    rcx,rbx
   140006462:	call   0x140003fc0
   140006467:	add    rbx,0x8
   14000646b:	add    rdi,0x8
   14000646f:	cmp    rbx,rsi
   140006472:	jne    0x140006457
   140006474:	mov    eax,DWORD PTR [rbp+0x0]
   140006477:	test   eax,eax
   140006479:	je     0x14000648c
   14000647b:	cmp    eax,0xffffffff
   14000647e:	je     0x140006497
   140006480:	lock add DWORD PTR [rbp+0x0],0xffffffff
   140006485:	setne  al
   140006488:	test   al,al
   14000648a:	jne    0x140006497
   14000648c:	mov    rdx,rbp
   14000648f:	mov    rcx,r12
   140006492:	call   0x140004a80
   140006497:	mov    rdx,QWORD PTR [r12]
   14000649b:	movsxd rax,DWORD PTR [rsp+0x58]
   1400064a0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400064a5:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400064a9:	mov    rbp,QWORD PTR [rsp+0x60]
   1400064ae:	add    rcx,rax
   1400064b1:	lea    rax,[rdx+rcx*8+0x10]
   1400064b6:	add    rsp,0x20
   1400064ba:	pop    r14
   1400064bc:	pop    r13
   1400064be:	pop    r12
   1400064c0:	pop    rdi
   1400064c1:	pop    rsi
   1400064c2:	ret    
   1400064c3:	int3   
   1400064c4:	int3   
   1400064c5:	int3   
   1400064c6:	int3   
   1400064c7:	int3   
   1400064c8:	int3   
   1400064c9:	int3   
   1400064ca:	int3   
   1400064cb:	int3   
   1400064cc:	int3   
   1400064cd:	int3   
   1400064ce:	int3   
   1400064cf:	int3   
   1400064d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400064d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400064da:	push   rsi
   1400064db:	sub    rsp,0x20
   1400064df:	movsxd rax,DWORD PTR [rdx+0xc]
   1400064e3:	mov    rbp,rdx
   1400064e6:	lea    rbx,[rdx+rax*8+0x10]
   1400064eb:	movsxd rax,DWORD PTR [rdx+0x8]
   1400064ef:	lea    rsi,[rdx+rax*8+0x10]
   1400064f4:	cmp    rsi,rbx
   1400064f7:	je     0x140006527
   1400064f9:	mov    QWORD PTR [rsp+0x30],rdi
   1400064fe:	xchg   ax,ax
   140006500:	mov    rdi,QWORD PTR [rbx-0x8]
   140006504:	sub    rbx,0x8
   140006508:	test   rdi,rdi
   14000650b:	je     0x14000651d
   14000650d:	mov    rcx,rdi
   140006510:	call   0x140004210
   140006515:	mov    rcx,rdi
   140006518:	call   0x14001e1c0
   14000651d:	cmp    rbx,rsi
   140006520:	jne    0x140006500
   140006522:	mov    rdi,QWORD PTR [rsp+0x30]
   140006527:	mov    rcx,rbp
   14000652a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000652f:	mov    rbp,QWORD PTR [rsp+0x40]
   140006534:	add    rsp,0x20
   140006538:	pop    rsi
   140006539:	rex.W jmp QWORD PTR [rip+0x18fa8]        # 0x14001f4e8
   140006540:	cmp    rdx,r8
   140006543:	je     0x14000659d
   140006545:	mov    QWORD PTR [rsp+0x8],rbx
   14000654a:	mov    QWORD PTR [rsp+0x10],rsi
   14000654f:	push   rdi
   140006550:	sub    rsp,0x20
   140006554:	mov    rdi,r9
   140006557:	mov    rsi,r8
   14000655a:	mov    rbx,rdx
   14000655d:	nop    DWORD PTR [rax]
   140006560:	mov    ecx,0x70
   140006565:	call   0x14001e1c6
   14000656a:	test   rax,rax
   14000656d:	je     0x14000657c
   14000656f:	mov    rdx,QWORD PTR [rdi]
   140006572:	mov    rcx,rax
   140006575:	call   0x140003ce0
   14000657a:	jmp    0x14000657e
   14000657c:	xor    eax,eax
   14000657e:	mov    QWORD PTR [rbx],rax
   140006581:	add    rbx,0x8
   140006585:	add    rdi,0x8
   140006589:	cmp    rbx,rsi
   14000658c:	jne    0x140006560
   14000658e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006593:	mov    rsi,QWORD PTR [rsp+0x38]
   140006598:	add    rsp,0x20
   14000659c:	pop    rdi
   14000659d:	repz ret 
   14000659f:	int3   
   1400065a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400065a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400065aa:	push   rsi
   1400065ab:	sub    rsp,0x20
   1400065af:	movsxd rax,DWORD PTR [rdx+0xc]
   1400065b3:	mov    rbp,rdx
   1400065b6:	lea    rbx,[rdx+rax*8+0x10]
   1400065bb:	movsxd rax,DWORD PTR [rdx+0x8]
   1400065bf:	lea    rsi,[rdx+rax*8+0x10]
   1400065c4:	cmp    rsi,rbx
   1400065c7:	je     0x140006601
   1400065c9:	mov    QWORD PTR [rsp+0x30],rdi
   1400065ce:	xchg   ax,ax
   1400065d0:	mov    rdi,QWORD PTR [rbx-0x8]
   1400065d4:	sub    rbx,0x8
   1400065d8:	test   rdi,rdi
   1400065db:	je     0x1400065f7
   1400065dd:	lea    rcx,[rdi+0x8]
   1400065e1:	call   0x140002d20
   1400065e6:	mov    rcx,rdi
   1400065e9:	call   QWORD PTR [rip+0x18fc9]        # 0x14001f5b8
   1400065ef:	mov    rcx,rdi
   1400065f2:	call   0x14001e1c0
   1400065f7:	cmp    rbx,rsi
   1400065fa:	jne    0x1400065d0
   1400065fc:	mov    rdi,QWORD PTR [rsp+0x30]
   140006601:	mov    rcx,rbp
   140006604:	mov    rbx,QWORD PTR [rsp+0x38]
   140006609:	mov    rbp,QWORD PTR [rsp+0x40]
   14000660e:	add    rsp,0x20
   140006612:	pop    rsi
   140006613:	rex.W jmp QWORD PTR [rip+0x18ece]        # 0x14001f4e8
   14000661a:	int3   
   14000661b:	int3   
   14000661c:	int3   
   14000661d:	int3   
   14000661e:	int3   
   14000661f:	int3   
   140006620:	mov    QWORD PTR [rsp+0x18],rbx
   140006625:	push   rsi
   140006626:	sub    rsp,0x20
   14000662a:	mov    rax,QWORD PTR [rdx]
   14000662d:	mov    rsi,rcx
   140006630:	mov    rbx,rdx
   140006633:	mov    QWORD PTR [rcx],rax
   140006636:	mov    ecx,DWORD PTR [rax]
   140006638:	test   ecx,ecx
   14000663a:	je     0x140006653
   14000663c:	cmp    ecx,0xffffffff
   14000663f:	je     0x1400066b7
   140006641:	lock add DWORD PTR [rax],0x1
   140006645:	mov    rax,rsi
   140006648:	mov    rbx,QWORD PTR [rsp+0x40]
   14000664d:	add    rsp,0x20
   140006651:	pop    rsi
   140006652:	ret    
   140006653:	mov    edx,DWORD PTR [rax+0x4]
   140006656:	mov    rcx,rsi
   140006659:	mov    QWORD PTR [rsp+0x30],rbp
   14000665e:	mov    QWORD PTR [rsp+0x38],rdi
   140006663:	call   QWORD PTR [rip+0x18e47]        # 0x14001f4b0
   140006669:	mov    r11,QWORD PTR [rsi]
   14000666c:	mov    rcx,QWORD PTR [rbx]
   14000666f:	movsxd rax,DWORD PTR [r11+0xc]
   140006673:	lea    rbp,[r11+rax*8+0x10]
   140006678:	movsxd rax,DWORD PTR [rcx+0x8]
   14000667c:	lea    rdi,[rcx+rax*8+0x10]
   140006681:	movsxd rax,DWORD PTR [r11+0x8]
   140006685:	lea    rbx,[r11+rax*8+0x10]
   14000668a:	cmp    rbx,rbp
   14000668d:	je     0x1400066ad
   14000668f:	nop
   140006690:	test   rbx,rbx
   140006693:	je     0x1400066a0
   140006695:	mov    rdx,rdi
   140006698:	mov    rcx,rbx
   14000669b:	call   0x140003fc0
   1400066a0:	add    rbx,0x8
   1400066a4:	add    rdi,0x8
   1400066a8:	cmp    rbx,rbp
   1400066ab:	jne    0x140006690
   1400066ad:	mov    rbp,QWORD PTR [rsp+0x30]
   1400066b2:	mov    rdi,QWORD PTR [rsp+0x38]
   1400066b7:	mov    rax,rsi
   1400066ba:	mov    rbx,QWORD PTR [rsp+0x40]
   1400066bf:	add    rsp,0x20
   1400066c3:	pop    rsi
   1400066c4:	ret    
   1400066c5:	int3   
   1400066c6:	int3   
   1400066c7:	int3   
   1400066c8:	int3   
   1400066c9:	int3   
   1400066ca:	int3   
   1400066cb:	int3   
   1400066cc:	int3   
   1400066cd:	int3   
   1400066ce:	int3   
   1400066cf:	int3   
   1400066d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400066d5:	push   rdi
   1400066d6:	sub    rsp,0x20
   1400066da:	mov    rax,QWORD PTR [rdx]
   1400066dd:	mov    rbx,rcx
   1400066e0:	mov    rdi,rdx
   1400066e3:	mov    QWORD PTR [rcx],rax
   1400066e6:	mov    ecx,DWORD PTR [rax]
   1400066e8:	test   ecx,ecx
   1400066ea:	je     0x140006703
   1400066ec:	cmp    ecx,0xffffffff
   1400066ef:	je     0x140006738
   1400066f1:	lock add DWORD PTR [rax],0x1
   1400066f5:	mov    rax,rbx
   1400066f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400066fd:	add    rsp,0x20
   140006701:	pop    rdi
   140006702:	ret    
   140006703:	mov    edx,DWORD PTR [rax+0x4]
   140006706:	mov    rcx,rbx
   140006709:	call   QWORD PTR [rip+0x18da1]        # 0x14001f4b0
   14000670f:	mov    rcx,QWORD PTR [rbx]
   140006712:	mov    r11,QWORD PTR [rdi]
   140006715:	movsxd rax,DWORD PTR [r11+0x8]
   140006719:	lea    r9,[r11+rax*8+0x10]
   14000671e:	movsxd rax,DWORD PTR [rcx+0xc]
   140006722:	lea    r8,[rcx+rax*8+0x10]
   140006727:	movsxd rax,DWORD PTR [rcx+0x8]
   14000672b:	lea    rdx,[rcx+rax*8+0x10]
   140006730:	mov    rcx,rbx
   140006733:	call   0x140004b00
   140006738:	mov    rax,rbx
   14000673b:	mov    rbx,QWORD PTR [rsp+0x30]
   140006740:	add    rsp,0x20
   140006744:	pop    rdi
   140006745:	ret    
   140006746:	int3   
   140006747:	int3   
   140006748:	int3   
   140006749:	int3   
   14000674a:	int3   
   14000674b:	int3   
   14000674c:	int3   
   14000674d:	int3   
   14000674e:	int3   
   14000674f:	int3   
   140006750:	rex push rbx
   140006752:	push   rbp
   140006753:	push   rsi
   140006754:	sub    rsp,0x40
   140006758:	mov    r9,QWORD PTR [rcx]
   14000675b:	mov    rbx,rcx
   14000675e:	movsxd rcx,DWORD PTR [rcx+0x8]
   140006762:	xor    sil,sil
   140006765:	cmp    ecx,DWORD PTR [r9+0x4]
   140006769:	mov    rbp,rdx
   14000676c:	jge    0x14000678c
   14000676e:	mov    rax,QWORD PTR [r9+0x10]
   140006772:	lea    r8,[rcx+rcx*2]
   140006776:	lea    r8,[rax+r8*8]
   14000677a:	cmp    DWORD PTR [r8+r9*1+0x4],0x23
   140006780:	jne    0x14000678c
   140006782:	lea    eax,[rcx+0x1]
   140006785:	mov    DWORD PTR [rbx+0x8],eax
   140006788:	mov    BYTE PTR [rdx+0x10],0x1
   14000678c:	mov    r9,QWORD PTR [rbx]
   14000678f:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006793:	mov    r8d,DWORD PTR [r9+0x4]
   140006797:	cmp    edx,r8d
   14000679a:	jge    0x1400067fc
   14000679c:	mov    rax,QWORD PTR [r9+0x10]
   1400067a0:	lea    rcx,[rdx+rdx*2]
   1400067a4:	lea    rcx,[rax+rcx*8]
   1400067a8:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   1400067ae:	jne    0x1400067fc
   1400067b0:	lea    eax,[rdx+0x1]
   1400067b3:	mov    DWORD PTR [rbx+0x8],eax
   1400067b6:	dec    eax
   1400067b8:	movsxd rcx,eax
   1400067bb:	mov    rax,QWORD PTR [r9+0x10]
   1400067bf:	lea    rdx,[rcx+rcx*2]
   1400067c3:	lea    r8,[rax+rdx*8]
   1400067c7:	lea    rdx,[rsp+0x60]
   1400067cc:	add    r8,r9
   1400067cf:	mov    r9d,DWORD PTR [r8+0x14]
   1400067d3:	lea    rcx,[r8+0x8]
   1400067d7:	mov    r8d,DWORD PTR [r8+0x10]
   1400067db:	call   QWORD PTR [rip+0x18def]        # 0x14001f5d0
   1400067e1:	lea    rdx,[rsp+0x60]
   1400067e6:	mov    rcx,rbp
   1400067e9:	call   QWORD PTR [rip+0x18d69]        # 0x14001f558
   1400067ef:	lea    rcx,[rsp+0x60]
   1400067f4:	call   QWORD PTR [rip+0x18dbe]        # 0x14001f5b8
   1400067fa:	jmp    0x140006826
   1400067fc:	add    edx,0xfffffffe
   1400067ff:	cmp    edx,r8d
   140006802:	jge    0x140006aa3
   140006808:	movsxd rax,edx
   14000680b:	lea    rcx,[rax+rax*2]
   14000680f:	mov    rax,QWORD PTR [r9+0x10]
   140006813:	lea    rcx,[rax+rcx*8]
   140006817:	cmp    DWORD PTR [rcx+r9*1+0x4],0x21
   14000681d:	jne    0x140006aa3
   140006823:	mov    sil,0x1
   140006826:	mov    r8,QWORD PTR [rbx]
   140006829:	movsxd rdx,DWORD PTR [rbx+0x8]
   14000682d:	cmp    edx,DWORD PTR [r8+0x4]
   140006831:	jge    0x140006870
   140006833:	mov    rax,QWORD PTR [r8+0x10]
   140006837:	lea    rcx,[rdx+rdx*2]
   14000683b:	lea    rcx,[rax+rcx*8]
   14000683f:	cmp    DWORD PTR [rcx+r8*1+0x4],0x13
   140006845:	jne    0x140006870
   140006847:	lea    eax,[rdx+0x1]
   14000684a:	lea    rdx,[rsp+0x20]
   14000684f:	mov    rcx,rbx
   140006852:	mov    DWORD PTR [rbx+0x8],eax
   140006855:	call   0x140004ba0
   14000685a:	lea    rcx,[rsp+0x28]
   14000685f:	call   QWORD PTR [rip+0x18d53]        # 0x14001f5b8
   140006865:	lea    rcx,[rsp+0x20]
   14000686a:	call   QWORD PTR [rip+0x18d48]        # 0x14001f5b8
   140006870:	mov    r8,QWORD PTR [rbx]
   140006873:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006877:	cmp    edx,DWORD PTR [r8+0x4]
   14000687b:	jge    0x140006aa3
   140006881:	mov    rax,QWORD PTR [r8+0x10]
   140006885:	lea    rcx,[rdx+rdx*2]
   140006889:	lea    rcx,[rax+rcx*8]
   14000688d:	cmp    DWORD PTR [rcx+r8*1+0x4],0xe
   140006893:	jne    0x140006aa3
   140006899:	lea    eax,[rdx+0x1]
   14000689c:	mov    QWORD PTR [rsp+0x68],rdi
   1400068a1:	mov    DWORD PTR [rbx+0x8],eax
   1400068a4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400068b0:	mov    edx,0x1
   1400068b5:	mov    rcx,rbx
   1400068b8:	call   0x140002960
   1400068bd:	cmp    eax,0xf
   1400068c0:	je     0x1400069cd
   1400068c6:	mov    r8,QWORD PTR [rbx]
   1400068c9:	movsxd rdx,DWORD PTR [rbx+0x8]
   1400068cd:	cmp    edx,DWORD PTR [r8+0x4]
   1400068d1:	jge    0x1400068ef
   1400068d3:	mov    rax,QWORD PTR [r8+0x10]
   1400068d7:	lea    rcx,[rdx+rdx*2]
   1400068db:	lea    rcx,[rax+rcx*8]
   1400068df:	cmp    DWORD PTR [rcx+r8*1+0x4],0x1
   1400068e5:	jne    0x1400068ef
   1400068e7:	lea    eax,[rdx+0x1]
   1400068ea:	mov    DWORD PTR [rbx+0x8],eax
   1400068ed:	jmp    0x1400068f9
   1400068ef:	xor    edx,edx
   1400068f1:	mov    rcx,rbx
   1400068f4:	call   0x140019c50
   1400068f9:	mov    r8,QWORD PTR [rbx]
   1400068fc:	mov    eax,DWORD PTR [rbx+0x8]
   1400068ff:	dec    eax
   140006901:	cdqe   
   140006903:	lea    rcx,[rax+rax*2]
   140006907:	mov    rax,QWORD PTR [r8+0x10]
   14000690b:	lea    rdx,[rax+rcx*8]
   14000690f:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140006914:	lea    rcx,[rdx+r8*1+0x8]
   140006919:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   14000691e:	lea    rdx,[rsp+0x60]
   140006923:	call   QWORD PTR [rip+0x18ca7]        # 0x14001f5d0
   140006929:	mov    rax,QWORD PTR [rbp+0x8]
   14000692d:	mov    ecx,DWORD PTR [rax]
   14000692f:	cmp    ecx,0x1
   140006932:	je     0x140006961
   140006934:	test   ecx,ecx
   140006936:	je     0x140006961
   140006938:	lea    rcx,[rbp+0x8]
   14000693c:	mov    edx,0x7fffffff
   140006941:	mov    r8d,0x1
   140006947:	call   0x1400030e0
   14000694c:	test   rax,rax
   14000694f:	je     0x140006983
   140006951:	lea    rdx,[rsp+0x60]
   140006956:	mov    rcx,rax
   140006959:	call   QWORD PTR [rip+0x18c79]        # 0x14001f5d8
   14000695f:	jmp    0x140006983
   140006961:	lea    rdx,[rsp+0x60]
   140006966:	lea    rcx,[rsp+0x70]
   14000696b:	call   QWORD PTR [rip+0x18c67]        # 0x14001f5d8
   140006971:	lea    rcx,[rbp+0x8]
   140006975:	call   QWORD PTR [rip+0x18825]        # 0x14001f1a0
   14000697b:	mov    rcx,QWORD PTR [rsp+0x70]
   140006980:	mov    QWORD PTR [rax],rcx
   140006983:	lea    rcx,[rsp+0x60]
   140006988:	call   QWORD PTR [rip+0x18c2a]        # 0x14001f5b8
   14000698e:	mov    r11,QWORD PTR [rbx]
   140006991:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006995:	mov    r8d,DWORD PTR [r11+0x4]
   140006999:	cmp    edx,r8d
   14000699c:	jge    0x1400069fb
   14000699e:	mov    rax,QWORD PTR [r11+0x10]
   1400069a2:	lea    rcx,[rdx+rdx*2]
   1400069a6:	lea    rcx,[rax+rcx*8]
   1400069aa:	cmp    DWORD PTR [rcx+r11*1+0x4],0x10
   1400069b0:	jne    0x1400069fb
   1400069b2:	lea    eax,[rdx+0x1]
   1400069b5:	mov    rcx,rbx
   1400069b8:	mov    edx,0x5a
   1400069bd:	mov    DWORD PTR [rbx+0x8],eax
   1400069c0:	call   0x140002990
   1400069c5:	test   al,al
   1400069c7:	jne    0x1400068b0
   1400069cd:	mov    r8,QWORD PTR [rbx]
   1400069d0:	movsxd rdx,DWORD PTR [rbx+0x8]
   1400069d4:	mov    rdi,QWORD PTR [rsp+0x68]
   1400069d9:	cmp    edx,DWORD PTR [r8+0x4]
   1400069dd:	jge    0x140006a1f
   1400069df:	mov    rax,QWORD PTR [r8+0x10]
   1400069e3:	lea    rcx,[rdx+rdx*2]
   1400069e7:	lea    rcx,[rax+rcx*8]
   1400069eb:	cmp    DWORD PTR [rcx+r8*1+0x4],0xf
   1400069f1:	jne    0x140006a1f
   1400069f3:	lea    eax,[rdx+0x1]
   1400069f6:	mov    DWORD PTR [rbx+0x8],eax
   1400069f9:	jmp    0x140006a29
   1400069fb:	cmp    edx,r8d
   1400069fe:	jge    0x1400069cd
   140006a00:	mov    rax,QWORD PTR [r11+0x10]
   140006a04:	lea    rcx,[rdx+rdx*2]
   140006a08:	lea    rcx,[rax+rcx*8]
   140006a0c:	cmp    DWORD PTR [rcx+r11*1+0x4],0x5a
   140006a12:	jne    0x1400069cd
   140006a14:	lea    eax,[rdx+0x1]
   140006a17:	mov    DWORD PTR [rbx+0x8],eax
   140006a1a:	jmp    0x1400068b0
   140006a1f:	xor    edx,edx
   140006a21:	mov    rcx,rbx
   140006a24:	call   0x140019c50
   140006a29:	test   sil,sil
   140006a2c:	je     0x140006a99
   140006a2e:	mov    r9,QWORD PTR [rbx]
   140006a31:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006a35:	cmp    edx,DWORD PTR [r9+0x4]
   140006a39:	jge    0x140006aa3
   140006a3b:	mov    rax,QWORD PTR [r9+0x10]
   140006a3f:	lea    rcx,[rdx+rdx*2]
   140006a43:	lea    rcx,[rax+rcx*8]
   140006a47:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   140006a4d:	jne    0x140006aa3
   140006a4f:	lea    eax,[rdx+0x1]
   140006a52:	mov    DWORD PTR [rbx+0x8],eax
   140006a55:	dec    eax
   140006a57:	movsxd rcx,eax
   140006a5a:	mov    rax,QWORD PTR [r9+0x10]
   140006a5e:	lea    rdx,[rcx+rcx*2]
   140006a62:	lea    r8,[rax+rdx*8]
   140006a66:	lea    rdx,[rsp+0x60]
   140006a6b:	add    r8,r9
   140006a6e:	mov    r9d,DWORD PTR [r8+0x14]
   140006a72:	lea    rcx,[r8+0x8]
   140006a76:	mov    r8d,DWORD PTR [r8+0x10]
   140006a7a:	call   QWORD PTR [rip+0x18b50]        # 0x14001f5d0
   140006a80:	lea    rdx,[rsp+0x60]
   140006a85:	mov    rcx,rbp
   140006a88:	call   QWORD PTR [rip+0x18aca]        # 0x14001f558
   140006a8e:	lea    rcx,[rsp+0x60]
   140006a93:	call   QWORD PTR [rip+0x18b1f]        # 0x14001f5b8
   140006a99:	mov    al,0x1
   140006a9b:	add    rsp,0x40
   140006a9f:	pop    rsi
   140006aa0:	pop    rbp
   140006aa1:	pop    rbx
   140006aa2:	ret    
   140006aa3:	xor    al,al
   140006aa5:	add    rsp,0x40
   140006aa9:	pop    rsi
   140006aaa:	pop    rbp
   140006aab:	pop    rbx
   140006aac:	ret    
   140006aad:	int3   
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140006ab5:	push   rdi
   140006ab6:	sub    rsp,0xa0
   140006abd:	mov    rdi,rdx
   140006ac0:	mov    rdx,QWORD PTR [rcx]
   140006ac3:	mov    rbx,rcx
   140006ac6:	movsxd rcx,DWORD PTR [rcx+0x8]
   140006aca:	cmp    ecx,DWORD PTR [rdx+0x4]
   140006acd:	jge    0x140006aeb
   140006acf:	mov    rax,QWORD PTR [rdx+0x10]
   140006ad3:	lea    r8,[rcx+rcx*2]
   140006ad7:	lea    r8,[rax+r8*8]
   140006adb:	cmp    DWORD PTR [r8+rdx*1+0x4],0x9
   140006ae1:	jne    0x140006aeb
   140006ae3:	lea    eax,[rcx+0x1]
   140006ae6:	mov    DWORD PTR [rbx+0x8],eax
   140006ae9:	jmp    0x140006af5
   140006aeb:	xor    edx,edx
   140006aed:	mov    rcx,rbx
   140006af0:	call   0x140019c50
   140006af5:	lea    rcx,[rsp+0x20]
   140006afa:	call   0x140001070
   140006aff:	lea    rdx,[rsp+0x20]
   140006b04:	mov    rcx,rbx
   140006b07:	call   0x140005460
   140006b0c:	mov    r11,QWORD PTR [rbx]
   140006b0f:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006b13:	cmp    edx,DWORD PTR [r11+0x4]
   140006b17:	jge    0x140006b35
   140006b19:	mov    rax,QWORD PTR [r11+0x10]
   140006b1d:	lea    rcx,[rdx+rdx*2]
   140006b21:	lea    rcx,[rax+rcx*8]
   140006b25:	cmp    DWORD PTR [rcx+r11*1+0x4],0xa
   140006b2b:	jne    0x140006b35
   140006b2d:	lea    eax,[rdx+0x1]
   140006b30:	mov    DWORD PTR [rbx+0x8],eax
   140006b33:	jmp    0x140006b3f
   140006b35:	xor    edx,edx
   140006b37:	mov    rcx,rbx
   140006b3a:	call   0x140019c50
   140006b3f:	mov    rax,QWORD PTR [rsp+0x78]
   140006b44:	cmp    DWORD PTR [rax+0x4],0x0
   140006b48:	je     0x140006b4d
   140006b4a:	inc    DWORD PTR [rdi+0x68]
   140006b4d:	cmp    DWORD PTR [rsp+0x94],0x0
   140006b55:	jle    0x140006b5d
   140006b57:	inc    DWORD PTR [rdi+0x9c]
   140006b5d:	mov    rax,QWORD PTR [rdi+0x70]
   140006b61:	lea    rcx,[rdi+0x70]
   140006b65:	mov    edx,DWORD PTR [rax]
   140006b67:	cmp    edx,0x1
   140006b6a:	je     0x140006b82
   140006b6c:	test   edx,edx
   140006b6e:	je     0x140006b82
   140006b70:	mov    edx,0x7fffffff
   140006b75:	mov    r8d,0x1
   140006b7b:	call   0x1400038f0
   140006b80:	jmp    0x140006b88
   140006b82:	call   QWORD PTR [rip+0x18618]        # 0x14001f1a0
   140006b88:	mov    ecx,0x78
   140006b8d:	mov    rbx,rax
   140006b90:	call   0x14001e1c6
   140006b95:	test   rax,rax
   140006b98:	je     0x140006ba9
   140006b9a:	lea    rdx,[rsp+0x20]
   140006b9f:	mov    rcx,rax
   140006ba2:	call   0x140001c00
   140006ba7:	jmp    0x140006bab
   140006ba9:	xor    eax,eax
   140006bab:	lea    rcx,[rsp+0x80]
   140006bb3:	mov    QWORD PTR [rbx],rax
   140006bb6:	call   QWORD PTR [rip+0x189fc]        # 0x14001f5b8
   140006bbc:	lea    rcx,[rsp+0x78]
   140006bc1:	call   QWORD PTR [rip+0x189f1]        # 0x14001f5b8
   140006bc7:	lea    rcx,[rsp+0x70]
   140006bcc:	call   QWORD PTR [rip+0x189e6]        # 0x14001f5b8
   140006bd2:	lea    rcx,[rsp+0x68]
   140006bd7:	call   QWORD PTR [rip+0x189db]        # 0x14001f5b8
   140006bdd:	lea    rcx,[rsp+0x60]
   140006be2:	call   QWORD PTR [rip+0x189d0]        # 0x14001f5b8
   140006be8:	lea    rcx,[rsp+0x58]
   140006bed:	call   QWORD PTR [rip+0x189c5]        # 0x14001f5b8
   140006bf3:	lea    rcx,[rsp+0x50]
   140006bf8:	call   QWORD PTR [rip+0x189ba]        # 0x14001f5b8
   140006bfe:	lea    rcx,[rsp+0x48]
   140006c03:	call   QWORD PTR [rip+0x189af]        # 0x14001f5b8
   140006c09:	lea    rcx,[rsp+0x40]
   140006c0e:	call   QWORD PTR [rip+0x189a4]        # 0x14001f5b8
   140006c14:	lea    rcx,[rsp+0x38]
   140006c19:	call   QWORD PTR [rip+0x18999]        # 0x14001f5b8
   140006c1f:	lea    rcx,[rsp+0x30]
   140006c24:	call   QWORD PTR [rip+0x1898e]        # 0x14001f5b8
   140006c2a:	lea    rcx,[rsp+0x28]
   140006c2f:	call   QWORD PTR [rip+0x18983]        # 0x14001f5b8
   140006c35:	lea    rcx,[rsp+0x20]
   140006c3a:	call   QWORD PTR [rip+0x18978]        # 0x14001f5b8
   140006c40:	mov    rbx,QWORD PTR [rsp+0xb0]
   140006c48:	add    rsp,0xa0
   140006c4f:	pop    rdi
   140006c50:	ret    
   140006c51:	int3   
   140006c52:	int3   
   140006c53:	int3   
   140006c54:	int3   
   140006c55:	int3   
   140006c56:	int3   
   140006c57:	int3   
   140006c58:	int3   
   140006c59:	int3   
   140006c5a:	int3   
   140006c5b:	int3   
   140006c5c:	int3   
   140006c5d:	int3   
   140006c5e:	int3   
   140006c5f:	int3   
   140006c60:	mov    QWORD PTR [rsp+0x18],rbx
   140006c65:	push   rdi
   140006c66:	sub    rsp,0xa0
   140006c6d:	mov    rdi,rdx
   140006c70:	mov    rdx,QWORD PTR [rcx]
   140006c73:	mov    rbx,rcx
   140006c76:	movsxd rcx,DWORD PTR [rcx+0x8]
   140006c7a:	cmp    ecx,DWORD PTR [rdx+0x4]
   140006c7d:	jge    0x140006c9b
   140006c7f:	mov    rax,QWORD PTR [rdx+0x10]
   140006c83:	lea    r8,[rcx+rcx*2]
   140006c87:	lea    r8,[rax+r8*8]
   140006c8b:	cmp    DWORD PTR [r8+rdx*1+0x4],0x9
   140006c91:	jne    0x140006c9b
   140006c93:	lea    eax,[rcx+0x1]
   140006c96:	mov    DWORD PTR [rbx+0x8],eax
   140006c99:	jmp    0x140006ca5
   140006c9b:	xor    edx,edx
   140006c9d:	mov    rcx,rbx
   140006ca0:	call   0x140019c50
   140006ca5:	lea    rcx,[rsp+0x20]
   140006caa:	call   0x140001070
   140006caf:	mov    r11,QWORD PTR [rbx]
   140006cb2:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006cb6:	cmp    edx,DWORD PTR [r11+0x4]
   140006cba:	jge    0x140006cd8
   140006cbc:	mov    rax,QWORD PTR [r11+0x10]
   140006cc0:	lea    rcx,[rdx+rdx*2]
   140006cc4:	lea    rcx,[rax+rcx*8]
   140006cc8:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   140006cce:	jne    0x140006cd8
   140006cd0:	lea    eax,[rdx+0x1]
   140006cd3:	mov    DWORD PTR [rbx+0x8],eax
   140006cd6:	jmp    0x140006ce2
   140006cd8:	xor    edx,edx
   140006cda:	mov    rcx,rbx
   140006cdd:	call   0x140019c50
   140006ce2:	mov    r8,QWORD PTR [rbx]
   140006ce5:	mov    eax,DWORD PTR [rbx+0x8]
   140006ce8:	dec    eax
   140006cea:	cdqe   
   140006cec:	lea    rcx,[rax+rax*2]
   140006cf0:	mov    rax,QWORD PTR [r8+0x10]
   140006cf4:	lea    rdx,[rax+rcx*8]
   140006cf8:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140006cfd:	lea    rcx,[rdx+r8*1+0x8]
   140006d02:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140006d07:	lea    rdx,[rsp+0xb0]
   140006d0f:	call   QWORD PTR [rip+0x188bb]        # 0x14001f5d0
   140006d15:	lea    rdx,[rsp+0xb0]
   140006d1d:	lea    rcx,[rsp+0x80]
   140006d25:	call   QWORD PTR [rip+0x1882d]        # 0x14001f558
   140006d2b:	lea    rcx,[rsp+0xb0]
   140006d33:	call   QWORD PTR [rip+0x1887f]        # 0x14001f5b8
   140006d39:	mov    r9,QWORD PTR [rbx]
   140006d3c:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006d40:	cmp    edx,DWORD PTR [r9+0x4]
   140006d44:	jge    0x140006e43
   140006d4a:	mov    rax,QWORD PTR [r9+0x10]
   140006d4e:	lea    rcx,[rdx+rdx*2]
   140006d52:	lea    rcx,[rax+rcx*8]
   140006d56:	cmp    DWORD PTR [rcx+r9*1+0x4],0x11
   140006d5c:	jne    0x140006e43
   140006d62:	lea    eax,[rdx+0x1]
   140006d65:	mov    DWORD PTR [rbx+0x8],eax
   140006d68:	dec    eax
   140006d6a:	movsxd rcx,eax
   140006d6d:	mov    rax,QWORD PTR [r9+0x10]
   140006d71:	lea    rdx,[rcx+rcx*2]
   140006d75:	lea    r8,[rax+rdx*8]
   140006d79:	lea    rdx,[rsp+0xb0]
   140006d81:	add    r8,r9
   140006d84:	mov    r9d,DWORD PTR [r8+0x14]
   140006d88:	lea    rcx,[r8+0x8]
   140006d8c:	mov    r8d,DWORD PTR [r8+0x10]
   140006d90:	call   QWORD PTR [rip+0x1883a]        # 0x14001f5d0
   140006d96:	lea    rdx,[rsp+0xb0]
   140006d9e:	lea    rcx,[rsp+0x80]
   140006da6:	call   QWORD PTR [rip+0x18834]        # 0x14001f5e0
   140006dac:	lea    rcx,[rsp+0xb0]
   140006db4:	call   QWORD PTR [rip+0x187fe]        # 0x14001f5b8
   140006dba:	mov    r11,QWORD PTR [rbx]
   140006dbd:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006dc1:	cmp    edx,DWORD PTR [r11+0x4]
   140006dc5:	jge    0x140006de3
   140006dc7:	mov    rax,QWORD PTR [r11+0x10]
   140006dcb:	lea    rcx,[rdx+rdx*2]
   140006dcf:	lea    rcx,[rax+rcx*8]
   140006dd3:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   140006dd9:	jne    0x140006de3
   140006ddb:	lea    eax,[rdx+0x1]
   140006dde:	mov    DWORD PTR [rbx+0x8],eax
   140006de1:	jmp    0x140006ded
   140006de3:	xor    edx,edx
   140006de5:	mov    rcx,rbx
   140006de8:	call   0x140019c50
   140006ded:	mov    r8,QWORD PTR [rbx]
   140006df0:	mov    eax,DWORD PTR [rbx+0x8]
   140006df3:	dec    eax
   140006df5:	cdqe   
   140006df7:	lea    rcx,[rax+rax*2]
   140006dfb:	mov    rax,QWORD PTR [r8+0x10]
   140006dff:	lea    rdx,[rax+rcx*8]
   140006e03:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140006e08:	lea    rcx,[rdx+r8*1+0x8]
   140006e0d:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140006e12:	lea    rdx,[rsp+0xb8]
   140006e1a:	call   QWORD PTR [rip+0x187b0]        # 0x14001f5d0
   140006e20:	lea    rdx,[rsp+0xb8]
   140006e28:	lea    rcx,[rsp+0x80]
   140006e30:	call   QWORD PTR [rip+0x187aa]        # 0x14001f5e0
   140006e36:	lea    rcx,[rsp+0xb8]
   140006e3e:	jmp    0x140006d33
   140006e43:	movsxd r8,DWORD PTR [rbx+0x8]
   140006e47:	cmp    r8d,DWORD PTR [r9+0x4]
   140006e4b:	jge    0x140006ead
   140006e4d:	mov    rax,QWORD PTR [r9+0x10]
   140006e51:	lea    rcx,[r8+r8*2]
   140006e55:	lea    rcx,[rax+rcx*8]
   140006e59:	cmp    DWORD PTR [rcx+r9*1+0x4],0x9
   140006e5f:	jne    0x140006ead
   140006e61:	inc    r8d
   140006e64:	mov    DWORD PTR [rbx+0x8],r8d
   140006e68:	cmp    r8d,DWORD PTR [r9+0x4]
   140006e6c:	jge    0x140006e8e
   140006e6e:	movsxd rax,r8d
   140006e71:	lea    rcx,[rax+rax*2]
   140006e75:	mov    rax,QWORD PTR [r9+0x10]
   140006e79:	lea    rcx,[rax+rcx*8]
   140006e7d:	cmp    DWORD PTR [rcx+r9*1+0x4],0xa
   140006e83:	jne    0x140006e8e
   140006e85:	lea    eax,[r8+0x1]
   140006e89:	mov    DWORD PTR [rbx+0x8],eax
   140006e8c:	jmp    0x140006e98
   140006e8e:	xor    edx,edx
   140006e90:	mov    rcx,rbx
   140006e93:	call   0x140019c50
   140006e98:	lea    rdx,[rip+0x18abd]        # 0x14001f95c
   140006e9f:	lea    rcx,[rsp+0x80]
   140006ea7:	call   QWORD PTR [rip+0x186d3]        # 0x14001f580
   140006ead:	mov    r8,QWORD PTR [rbx]
   140006eb0:	movsxd rdx,DWORD PTR [rbx+0x8]
   140006eb4:	cmp    edx,DWORD PTR [r8+0x4]
   140006eb8:	jge    0x140006ed6
   140006eba:	mov    rax,QWORD PTR [r8+0x10]
   140006ebe:	lea    rcx,[rdx+rdx*2]
   140006ec2:	lea    rcx,[rax+rcx*8]
   140006ec6:	cmp    DWORD PTR [rcx+r8*1+0x4],0x5a
   140006ecc:	jne    0x140006ed6
   140006ece:	lea    eax,[rdx+0x1]
   140006ed1:	mov    DWORD PTR [rbx+0x8],eax
   140006ed4:	jmp    0x140006ee0
   140006ed6:	xor    edx,edx
   140006ed8:	mov    rcx,rbx
   140006edb:	call   0x140019c50
   140006ee0:	lea    rdx,[rsp+0x20]
   140006ee5:	mov    rcx,rbx
   140006ee8:	call   0x140005460
   140006eed:	mov    r11,QWORD PTR [rsp+0x78]
   140006ef2:	cmp    DWORD PTR [r11+0x4],0x0
   140006ef7:	je     0x140006efc
   140006ef9:	inc    DWORD PTR [rdi+0x68]
   140006efc:	cmp    DWORD PTR [rsp+0x94],0x0
   140006f04:	jle    0x140006f0c
   140006f06:	inc    DWORD PTR [rdi+0x9c]
   140006f0c:	mov    rax,QWORD PTR [rdi+0x70]
   140006f10:	lea    rcx,[rdi+0x70]
   140006f14:	mov    edx,DWORD PTR [rax]
   140006f16:	cmp    edx,0x1
   140006f19:	je     0x140006f31
   140006f1b:	test   edx,edx
   140006f1d:	je     0x140006f31
   140006f1f:	mov    edx,0x7fffffff
   140006f24:	mov    r8d,0x1
   140006f2a:	call   0x1400038f0
   140006f2f:	jmp    0x140006f37
   140006f31:	call   QWORD PTR [rip+0x18269]        # 0x14001f1a0
   140006f37:	mov    ecx,0x78
   140006f3c:	mov    rbx,rax
   140006f3f:	call   0x14001e1c6
   140006f44:	test   rax,rax
   140006f47:	je     0x140006f58
   140006f49:	lea    rdx,[rsp+0x20]
   140006f4e:	mov    rcx,rax
   140006f51:	call   0x140001c00
   140006f56:	jmp    0x140006f5a
   140006f58:	xor    eax,eax
   140006f5a:	lea    rcx,[rsp+0x80]
   140006f62:	mov    QWORD PTR [rbx],rax
   140006f65:	call   QWORD PTR [rip+0x1864d]        # 0x14001f5b8
   140006f6b:	lea    rcx,[rsp+0x78]
   140006f70:	call   QWORD PTR [rip+0x18642]        # 0x14001f5b8
   140006f76:	lea    rcx,[rsp+0x70]
   140006f7b:	call   QWORD PTR [rip+0x18637]        # 0x14001f5b8
   140006f81:	lea    rcx,[rsp+0x68]
   140006f86:	call   QWORD PTR [rip+0x1862c]        # 0x14001f5b8
   140006f8c:	lea    rcx,[rsp+0x60]
   140006f91:	call   QWORD PTR [rip+0x18621]        # 0x14001f5b8
   140006f97:	lea    rcx,[rsp+0x58]
   140006f9c:	call   QWORD PTR [rip+0x18616]        # 0x14001f5b8
   140006fa2:	lea    rcx,[rsp+0x50]
   140006fa7:	call   QWORD PTR [rip+0x1860b]        # 0x14001f5b8
   140006fad:	lea    rcx,[rsp+0x48]
   140006fb2:	call   QWORD PTR [rip+0x18600]        # 0x14001f5b8
   140006fb8:	lea    rcx,[rsp+0x40]
   140006fbd:	call   QWORD PTR [rip+0x185f5]        # 0x14001f5b8
   140006fc3:	lea    rcx,[rsp+0x38]
   140006fc8:	call   QWORD PTR [rip+0x185ea]        # 0x14001f5b8
   140006fce:	lea    rcx,[rsp+0x30]
   140006fd3:	call   QWORD PTR [rip+0x185df]        # 0x14001f5b8
   140006fd9:	lea    rcx,[rsp+0x28]
   140006fde:	call   QWORD PTR [rip+0x185d4]        # 0x14001f5b8
   140006fe4:	lea    rcx,[rsp+0x20]
   140006fe9:	call   QWORD PTR [rip+0x185c9]        # 0x14001f5b8
   140006fef:	mov    rbx,QWORD PTR [rsp+0xc0]
   140006ff7:	add    rsp,0xa0
   140006ffe:	pop    rdi
   140006fff:	ret    
   140007000:	mov    QWORD PTR [rsp+0x10],rbx
   140007005:	mov    QWORD PTR [rsp+0x18],rbp
   14000700a:	push   rsi
   14000700b:	push   rdi
   14000700c:	push   r12
   14000700e:	push   r13
   140007010:	push   r14
   140007012:	sub    rsp,0x40
   140007016:	mov    r13,rdx
   140007019:	mov    rdx,QWORD PTR [rcx]
   14000701c:	mov    rsi,rcx
   14000701f:	movsxd rcx,DWORD PTR [rcx+0x8]
   140007023:	movzx  r14d,r8b
   140007027:	cmp    ecx,DWORD PTR [rdx+0x4]
   14000702a:	jge    0x140007048
   14000702c:	mov    rax,QWORD PTR [rdx+0x10]
   140007030:	lea    r9,[rcx+rcx*2]
   140007034:	lea    r9,[rax+r9*8]
   140007038:	cmp    DWORD PTR [r9+rdx*1+0x4],0x9
   14000703e:	jne    0x140007048
   140007040:	lea    eax,[rcx+0x1]
   140007043:	mov    DWORD PTR [rsi+0x8],eax
   140007046:	jmp    0x140007052
   140007048:	xor    edx,edx
   14000704a:	mov    rcx,rsi
   14000704d:	call   0x140019c50
   140007052:	lea    rcx,[rsp+0x70]
   140007057:	call   QWORD PTR [rip+0x18563]        # 0x14001f5c0
   14000705d:	nop    DWORD PTR [rax]
   140007060:	mov    r9,QWORD PTR [rsi]
   140007063:	movsxd rdx,DWORD PTR [rsi+0x8]
   140007067:	cmp    edx,DWORD PTR [r9+0x4]
   14000706b:	jge    0x14000744d
   140007071:	mov    rax,QWORD PTR [r9+0x10]
   140007075:	lea    rcx,[rdx+rdx*2]
   140007079:	lea    rcx,[rax+rcx*8]
   14000707d:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   140007083:	jne    0x14000744d
   140007089:	lea    eax,[rdx+0x1]
   14000708c:	mov    DWORD PTR [rsi+0x8],eax
   14000708f:	dec    eax
   140007091:	movsxd rcx,eax
   140007094:	mov    rax,QWORD PTR [r9+0x10]
   140007098:	lea    rdx,[rcx+rcx*2]
   14000709c:	lea    r8,[rax+rdx*8]
   1400070a0:	lea    rdx,[rsp+0x88]
   1400070a8:	add    r8,r9
   1400070ab:	mov    r9d,DWORD PTR [r8+0x14]
   1400070af:	lea    rcx,[r8+0x8]
   1400070b3:	mov    r8d,DWORD PTR [r8+0x10]
   1400070b7:	call   QWORD PTR [rip+0x18513]        # 0x14001f5d0
   1400070bd:	lea    rdx,[rsp+0x88]
   1400070c5:	lea    rcx,[rsp+0x70]
   1400070ca:	call   QWORD PTR [rip+0x18488]        # 0x14001f558
   1400070d0:	lea    rcx,[rsp+0x88]
   1400070d8:	call   QWORD PTR [rip+0x184da]        # 0x14001f5b8
   1400070de:	mov    rdx,QWORD PTR [rsi]
   1400070e1:	movsxd r8,DWORD PTR [rsi+0x8]
   1400070e5:	cmp    r8d,DWORD PTR [rdx+0x4]
   1400070e9:	jge    0x14000718c
   1400070ef:	mov    rax,QWORD PTR [rdx+0x10]
   1400070f3:	lea    rcx,[r8+r8*2]
   1400070f7:	lea    rcx,[rax+rcx*8]
   1400070fb:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x11
   140007100:	jne    0x14000718c
   140007106:	inc    r8d
   140007109:	mov    DWORD PTR [rsi+0x8],r8d
   14000710d:	cmp    r8d,DWORD PTR [rdx+0x4]
   140007111:	jge    0x14000718c
   140007113:	movsxd rax,r8d
   140007116:	lea    rcx,[rax+rax*2]
   14000711a:	mov    rax,QWORD PTR [rdx+0x10]
   14000711e:	lea    rcx,[rax+rcx*8]
   140007122:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x1
   140007127:	jne    0x14000718c
   140007129:	lea    eax,[r8+0x1]
   14000712d:	lea    rdx,[rip+0x188ec]        # 0x14001fa20
   140007134:	lea    rcx,[rsp+0x70]
   140007139:	mov    DWORD PTR [rsi+0x8],eax
   14000713c:	call   QWORD PTR [rip+0x1843e]        # 0x14001f580
   140007142:	mov    r11,QWORD PTR [rsi]
   140007145:	mov    eax,DWORD PTR [rsi+0x8]
   140007148:	dec    eax
   14000714a:	cdqe   
   14000714c:	lea    rcx,[rax+rax*2]
   140007150:	mov    rax,QWORD PTR [r11+0x10]
   140007154:	lea    rdx,[rax+rcx*8]
   140007158:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   14000715d:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   140007162:	lea    rcx,[rdx+r11*1+0x8]
   140007167:	lea    rdx,[rsp+0x30]
   14000716c:	call   QWORD PTR [rip+0x1845e]        # 0x14001f5d0
   140007172:	lea    rdx,[rsp+0x30]
   140007177:	lea    rcx,[rsp+0x70]
   14000717c:	call   QWORD PTR [rip+0x1845e]        # 0x14001f5e0
   140007182:	lea    rcx,[rsp+0x30]
   140007187:	jmp    0x1400070d8
   14000718c:	mov    rax,QWORD PTR [r13+0x80]
   140007193:	mov    ecx,DWORD PTR [rax]
   140007195:	cmp    ecx,0x1
   140007198:	je     0x140007255
   14000719e:	test   ecx,ecx
   1400071a0:	je     0x140007255
   1400071a6:	call   QWORD PTR [rip+0x18354]        # 0x14001f500
   1400071ac:	mov    rcx,QWORD PTR [r13+0x80]
   1400071b3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400071b7:	mov    rbp,rax
   1400071ba:	test   rcx,rcx
   1400071bd:	je     0x1400071d6
   1400071bf:	mov    rdx,rax
   1400071c2:	call   0x140001fb0
   1400071c7:	lea    rcx,[rbp+0x8]
   1400071cb:	mov    QWORD PTR [rbp+0x10],rax
   1400071cf:	and    QWORD PTR [rax],0x3
   1400071d3:	or     QWORD PTR [rax],rcx
   1400071d6:	mov    rcx,QWORD PTR [r13+0x80]
   1400071dd:	mov    eax,DWORD PTR [rcx]
   1400071df:	test   eax,eax
   1400071e1:	je     0x1400071f3
   1400071e3:	cmp    eax,0xffffffff
   1400071e6:	je     0x140007245
   1400071e8:	lock add DWORD PTR [rcx],0xffffffff
   1400071ec:	setne  al
   1400071ef:	test   al,al
   1400071f1:	jne    0x140007245
   1400071f3:	mov    rdi,QWORD PTR [r13+0x80]
   1400071fa:	mov    rbx,QWORD PTR [rdi+0x10]
   1400071fe:	test   rbx,rbx
   140007201:	je     0x14000723c
   140007203:	lea    rcx,[rbx+0x18]
   140007207:	call   QWORD PTR [rip+0x183ab]        # 0x14001f5b8
   14000720d:	mov    rcx,QWORD PTR [rbx+0x8]
   140007211:	test   rcx,rcx
   140007214:	je     0x14000721b
   140007216:	call   0x140002710
   14000721b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000721f:	test   rcx,rcx
   140007222:	je     0x140007229
   140007224:	call   0x140002710
   140007229:	mov    rdx,QWORD PTR [rdi+0x10]
   14000722d:	mov    r8d,0x8
   140007233:	mov    rcx,rdi
   140007236:	call   QWORD PTR [rip+0x18284]        # 0x14001f4c0
   14000723c:	mov    rcx,rdi
   14000723f:	call   QWORD PTR [rip+0x18283]        # 0x14001f4c8
   140007245:	mov    rcx,rbp
   140007248:	mov    QWORD PTR [r13+0x80],rbp
   14000724f:	call   QWORD PTR [rip+0x1824b]        # 0x14001f4a0
   140007255:	mov    rax,QWORD PTR [r13+0x80]
   14000725c:	mov    rbx,QWORD PTR [rax+0x10]
   140007260:	test   rbx,rbx
   140007263:	je     0x1400072b9
   140007265:	xor    edi,edi
   140007267:	nop    WORD PTR [rax+rax*1+0x0]
   140007270:	lea    rcx,[rbx+0x18]
   140007274:	lea    rdx,[rsp+0x70]
   140007279:	call   QWORD PTR [rip+0x18369]        # 0x14001f5e8
   14000727f:	test   eax,eax
   140007281:	js     0x14000728c
   140007283:	mov    rdi,rbx
   140007286:	mov    rbx,QWORD PTR [rbx+0x8]
   14000728a:	jmp    0x140007290
   14000728c:	mov    rbx,QWORD PTR [rbx+0x10]
   140007290:	test   rbx,rbx
   140007293:	jne    0x140007270
   140007295:	test   rdi,rdi
   140007298:	je     0x1400072b9
   14000729a:	lea    rdx,[rdi+0x18]
   14000729e:	lea    rcx,[rsp+0x70]
   1400072a3:	call   QWORD PTR [rip+0x1833f]        # 0x14001f5e8
   1400072a9:	test   eax,eax
   1400072ab:	js     0x1400072b9
   1400072ad:	add    rdi,0x20
   1400072b1:	mov    BYTE PTR [rdi],r14b
   1400072b4:	jmp    0x140007060
   1400072b9:	mov    rax,QWORD PTR [r13+0x80]
   1400072c0:	mov    ecx,DWORD PTR [rax]
   1400072c2:	cmp    ecx,0x1
   1400072c5:	je     0x140007382
   1400072cb:	test   ecx,ecx
   1400072cd:	je     0x140007382
   1400072d3:	call   QWORD PTR [rip+0x18227]        # 0x14001f500
   1400072d9:	mov    rcx,QWORD PTR [r13+0x80]
   1400072e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400072e4:	mov    rbp,rax
   1400072e7:	test   rcx,rcx
   1400072ea:	je     0x140007303
   1400072ec:	mov    rdx,rax
   1400072ef:	call   0x140001fb0
   1400072f4:	lea    rcx,[rbp+0x8]
   1400072f8:	mov    QWORD PTR [rbp+0x10],rax
   1400072fc:	and    QWORD PTR [rax],0x3
   140007300:	or     QWORD PTR [rax],rcx
   140007303:	mov    rcx,QWORD PTR [r13+0x80]
   14000730a:	mov    eax,DWORD PTR [rcx]
   14000730c:	test   eax,eax
   14000730e:	je     0x140007320
   140007310:	cmp    eax,0xffffffff
   140007313:	je     0x140007372
   140007315:	lock add DWORD PTR [rcx],0xffffffff
   140007319:	setne  al
   14000731c:	test   al,al
   14000731e:	jne    0x140007372
   140007320:	mov    rdi,QWORD PTR [r13+0x80]
   140007327:	mov    rbx,QWORD PTR [rdi+0x10]
   14000732b:	test   rbx,rbx
   14000732e:	je     0x140007369
   140007330:	lea    rcx,[rbx+0x18]
   140007334:	call   QWORD PTR [rip+0x1827e]        # 0x14001f5b8
   14000733a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000733e:	test   rcx,rcx
   140007341:	je     0x140007348
   140007343:	call   0x140002710
   140007348:	mov    rcx,QWORD PTR [rbx+0x10]
   14000734c:	test   rcx,rcx
   14000734f:	je     0x140007356
   140007351:	call   0x140002710
   140007356:	mov    rdx,QWORD PTR [rdi+0x10]
   14000735a:	mov    r8d,0x8
   140007360:	mov    rcx,rdi
   140007363:	call   QWORD PTR [rip+0x18157]        # 0x14001f4c0
   140007369:	mov    rcx,rdi
   14000736c:	call   QWORD PTR [rip+0x18156]        # 0x14001f4c8
   140007372:	mov    rcx,rbp
   140007375:	mov    QWORD PTR [r13+0x80],rbp
   14000737c:	call   QWORD PTR [rip+0x1811e]        # 0x14001f4a0
   140007382:	mov    rax,QWORD PTR [r13+0x80]
   140007389:	xor    ebx,ebx
   14000738b:	mov    bpl,0x1
   14000738e:	mov    rdi,QWORD PTR [rax+0x10]
   140007392:	lea    r12,[rax+0x8]
   140007396:	test   rdi,rdi
   140007399:	je     0x1400073fb
   14000739b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400073a0:	lea    rcx,[rdi+0x18]
   1400073a4:	lea    rdx,[rsp+0x70]
   1400073a9:	mov    r12,rdi
   1400073ac:	call   QWORD PTR [rip+0x18236]        # 0x14001f5e8
   1400073b2:	test   eax,eax
   1400073b4:	js     0x1400073c2
   1400073b6:	mov    rbx,rdi
   1400073b9:	mov    rdi,QWORD PTR [rdi+0x8]
   1400073bd:	mov    bpl,0x1
   1400073c0:	jmp    0x1400073c9
   1400073c2:	mov    rdi,QWORD PTR [rdi+0x10]
   1400073c6:	xor    bpl,bpl
   1400073c9:	test   rdi,rdi
   1400073cc:	jne    0x1400073a0
   1400073ce:	test   rbx,rbx
   1400073d1:	je     0x1400073fb
   1400073d3:	lea    rdx,[rbx+0x18]
   1400073d7:	lea    rcx,[rsp+0x70]
   1400073dc:	call   QWORD PTR [rip+0x18206]        # 0x14001f5e8
   1400073e2:	test   eax,eax
   1400073e4:	js     0x1400073fb
   1400073e6:	mov    BYTE PTR [rbx+0x20],dil
   1400073ea:	lea    rdi,[rbx+0x20]
   1400073ee:	mov    QWORD PTR [rsp+0x38],rbx
   1400073f3:	mov    BYTE PTR [rdi],r14b
   1400073f6:	jmp    0x140007060
   1400073fb:	mov    rcx,QWORD PTR [r13+0x80]
   140007402:	mov    edx,0x28
   140007407:	mov    r9,r12
   14000740a:	lea    r8d,[rdx-0x20]
   14000740e:	mov    BYTE PTR [rsp+0x20],bpl
   140007413:	call   QWORD PTR [rip+0x180ef]        # 0x14001f508
   140007419:	mov    rbx,rax
   14000741c:	lea    rcx,[rax+0x18]
   140007420:	test   rcx,rcx
   140007423:	je     0x140007430
   140007425:	lea    rdx,[rsp+0x70]
   14000742a:	call   QWORD PTR [rip+0x181a8]        # 0x14001f5d8
   140007430:	lea    rax,[rbx+0x20]
   140007434:	test   rax,rax
   140007437:	je     0x14000743c
   140007439:	mov    BYTE PTR [rax],0x0
   14000743c:	lea    rdi,[rbx+0x20]
   140007440:	mov    QWORD PTR [rsp+0x38],rbx
   140007445:	mov    BYTE PTR [rdi],r14b
   140007448:	jmp    0x140007060
   14000744d:	movsxd rdx,DWORD PTR [rsi+0x8]
   140007451:	cmp    edx,DWORD PTR [r9+0x4]
   140007455:	jge    0x140007473
   140007457:	mov    rax,QWORD PTR [r9+0x10]
   14000745b:	lea    rcx,[rdx+rdx*2]
   14000745f:	lea    rcx,[rax+rcx*8]
   140007463:	cmp    DWORD PTR [rcx+r9*1+0x4],0xa
   140007469:	jne    0x140007473
   14000746b:	lea    eax,[rdx+0x1]
   14000746e:	mov    DWORD PTR [rsi+0x8],eax
   140007471:	jmp    0x14000747d
   140007473:	xor    edx,edx
   140007475:	mov    rcx,rsi
   140007478:	call   0x140019c50
   14000747d:	lea    rcx,[rsp+0x70]
   140007482:	call   QWORD PTR [rip+0x18130]        # 0x14001f5b8
   140007488:	mov    rbx,QWORD PTR [rsp+0x78]
   14000748d:	mov    rbp,QWORD PTR [rsp+0x80]
   140007495:	add    rsp,0x40
   140007499:	pop    r14
   14000749b:	pop    r13
   14000749d:	pop    r12
   14000749f:	pop    rdi
   1400074a0:	pop    rsi
   1400074a1:	ret    
   1400074a2:	int3   
   1400074a3:	int3   
   1400074a4:	int3   
   1400074a5:	int3   
   1400074a6:	int3   
   1400074a7:	int3   
   1400074a8:	int3   
   1400074a9:	int3   
   1400074aa:	int3   
   1400074ab:	int3   
   1400074ac:	int3   
   1400074ad:	int3   
   1400074ae:	int3   
   1400074af:	int3   
   1400074b0:	rex push rbx
   1400074b2:	push   rbp
   1400074b3:	push   rsi
   1400074b4:	push   rdi
   1400074b5:	push   r12
   1400074b7:	push   r13
   1400074b9:	sub    rsp,0x38
   1400074bd:	mov    r9,QWORD PTR [rcx]
   1400074c0:	mov    rbx,rcx
   1400074c3:	movsxd rcx,DWORD PTR [rcx+0x8]
   1400074c7:	cmp    ecx,DWORD PTR [r9+0x4]
   1400074cb:	mov    r13,rdx
   1400074ce:	jge    0x1400074ec
   1400074d0:	mov    rax,QWORD PTR [r9+0x10]
   1400074d4:	lea    r8,[rcx+rcx*2]
   1400074d8:	lea    r8,[rax+r8*8]
   1400074dc:	cmp    DWORD PTR [r8+r9*1+0x4],0x9
   1400074e2:	jne    0x1400074ec
   1400074e4:	lea    eax,[rcx+0x1]
   1400074e7:	mov    DWORD PTR [rbx+0x8],eax
   1400074ea:	jmp    0x1400074f6
   1400074ec:	xor    edx,edx
   1400074ee:	mov    rcx,rbx
   1400074f1:	call   0x140019c50
   1400074f6:	lea    rcx,[rsp+0x78]
   1400074fb:	call   QWORD PTR [rip+0x180bf]        # 0x14001f5c0
   140007501:	lea    rcx,[rsp+0x70]
   140007506:	call   QWORD PTR [rip+0x180b4]        # 0x14001f5c0
   14000750c:	nop    DWORD PTR [rax+0x0]
   140007510:	mov    r9,QWORD PTR [rbx]
   140007513:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007517:	cmp    edx,DWORD PTR [r9+0x4]
   14000751b:	jge    0x14000764d
   140007521:	mov    rax,QWORD PTR [r9+0x10]
   140007525:	lea    rcx,[rdx+rdx*2]
   140007529:	lea    rcx,[rax+rcx*8]
   14000752d:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   140007533:	jne    0x14000764d
   140007539:	lea    eax,[rdx+0x1]
   14000753c:	mov    DWORD PTR [rbx+0x8],eax
   14000753f:	dec    eax
   140007541:	movsxd rcx,eax
   140007544:	mov    rax,QWORD PTR [r9+0x10]
   140007548:	lea    rdx,[rcx+rcx*2]
   14000754c:	lea    r8,[rax+rdx*8]
   140007550:	lea    rdx,[rsp+0x80]
   140007558:	add    r8,r9
   14000755b:	mov    r9d,DWORD PTR [r8+0x14]
   14000755f:	lea    rcx,[r8+0x8]
   140007563:	mov    r8d,DWORD PTR [r8+0x10]
   140007567:	call   QWORD PTR [rip+0x18063]        # 0x14001f5d0
   14000756d:	lea    rdx,[rsp+0x80]
   140007575:	lea    rcx,[rsp+0x78]
   14000757a:	call   QWORD PTR [rip+0x17fd8]        # 0x14001f558
   140007580:	lea    rcx,[rsp+0x80]
   140007588:	call   QWORD PTR [rip+0x1802a]        # 0x14001f5b8
   14000758e:	mov    rdx,QWORD PTR [rbx]
   140007591:	movsxd r8,DWORD PTR [rbx+0x8]
   140007595:	cmp    r8d,DWORD PTR [rdx+0x4]
   140007599:	jge    0x140007510
   14000759f:	mov    rax,QWORD PTR [rdx+0x10]
   1400075a3:	lea    rcx,[r8+r8*2]
   1400075a7:	lea    rcx,[rax+rcx*8]
   1400075ab:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x11
   1400075b0:	jne    0x140007510
   1400075b6:	inc    r8d
   1400075b9:	mov    DWORD PTR [rbx+0x8],r8d
   1400075bd:	cmp    r8d,DWORD PTR [rdx+0x4]
   1400075c1:	jge    0x140007510
   1400075c7:	movsxd rax,r8d
   1400075ca:	lea    rcx,[rax+rax*2]
   1400075ce:	mov    rax,QWORD PTR [rdx+0x10]
   1400075d2:	lea    rcx,[rax+rcx*8]
   1400075d6:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x1
   1400075db:	jne    0x140007510
   1400075e1:	lea    eax,[r8+0x1]
   1400075e5:	lea    rdx,[rip+0x18434]        # 0x14001fa20
   1400075ec:	lea    rcx,[rsp+0x78]
   1400075f1:	mov    DWORD PTR [rbx+0x8],eax
   1400075f4:	call   QWORD PTR [rip+0x17f86]        # 0x14001f580
   1400075fa:	mov    r11,QWORD PTR [rbx]
   1400075fd:	mov    eax,DWORD PTR [rbx+0x8]
   140007600:	dec    eax
   140007602:	cdqe   
   140007604:	lea    rcx,[rax+rax*2]
   140007608:	mov    rax,QWORD PTR [r11+0x10]
   14000760c:	lea    rdx,[rax+rcx*8]
   140007610:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   140007615:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   14000761a:	lea    rcx,[rdx+r11*1+0x8]
   14000761f:	lea    rdx,[rsp+0x88]
   140007627:	call   QWORD PTR [rip+0x17fa3]        # 0x14001f5d0
   14000762d:	lea    rdx,[rsp+0x88]
   140007635:	lea    rcx,[rsp+0x78]
   14000763a:	call   QWORD PTR [rip+0x17fa0]        # 0x14001f5e0
   140007640:	lea    rcx,[rsp+0x88]
   140007648:	jmp    0x140007588
   14000764d:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007651:	cmp    edx,DWORD PTR [r9+0x4]
   140007655:	jge    0x140007673
   140007657:	mov    rax,QWORD PTR [r9+0x10]
   14000765b:	lea    rcx,[rdx+rdx*2]
   14000765f:	lea    rcx,[rax+rcx*8]
   140007663:	cmp    DWORD PTR [rcx+r9*1+0x4],0x5a
   140007669:	jne    0x140007673
   14000766b:	lea    eax,[rdx+0x1]
   14000766e:	mov    DWORD PTR [rbx+0x8],eax
   140007671:	jmp    0x140007680
   140007673:	xor    edx,edx
   140007675:	mov    rcx,rbx
   140007678:	call   0x140019c50
   14000767d:	nop    DWORD PTR [rax]
   140007680:	mov    r9,QWORD PTR [rbx]
   140007683:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007687:	cmp    edx,DWORD PTR [r9+0x4]
   14000768b:	jge    0x1400077bd
   140007691:	mov    rax,QWORD PTR [r9+0x10]
   140007695:	lea    rcx,[rdx+rdx*2]
   140007699:	lea    rcx,[rax+rcx*8]
   14000769d:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   1400076a3:	jne    0x1400077bd
   1400076a9:	lea    eax,[rdx+0x1]
   1400076ac:	mov    DWORD PTR [rbx+0x8],eax
   1400076af:	dec    eax
   1400076b1:	movsxd rcx,eax
   1400076b4:	mov    rax,QWORD PTR [r9+0x10]
   1400076b8:	lea    rdx,[rcx+rcx*2]
   1400076bc:	lea    r8,[rax+rdx*8]
   1400076c0:	lea    rdx,[rsp+0x80]
   1400076c8:	add    r8,r9
   1400076cb:	mov    r9d,DWORD PTR [r8+0x14]
   1400076cf:	lea    rcx,[r8+0x8]
   1400076d3:	mov    r8d,DWORD PTR [r8+0x10]
   1400076d7:	call   QWORD PTR [rip+0x17ef3]        # 0x14001f5d0
   1400076dd:	lea    rdx,[rsp+0x80]
   1400076e5:	lea    rcx,[rsp+0x70]
   1400076ea:	call   QWORD PTR [rip+0x17e68]        # 0x14001f558
   1400076f0:	lea    rcx,[rsp+0x80]
   1400076f8:	call   QWORD PTR [rip+0x17eba]        # 0x14001f5b8
   1400076fe:	mov    rdx,QWORD PTR [rbx]
   140007701:	movsxd r8,DWORD PTR [rbx+0x8]
   140007705:	cmp    r8d,DWORD PTR [rdx+0x4]
   140007709:	jge    0x140007680
   14000770f:	mov    rax,QWORD PTR [rdx+0x10]
   140007713:	lea    rcx,[r8+r8*2]
   140007717:	lea    rcx,[rax+rcx*8]
   14000771b:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x11
   140007720:	jne    0x140007680
   140007726:	inc    r8d
   140007729:	mov    DWORD PTR [rbx+0x8],r8d
   14000772d:	cmp    r8d,DWORD PTR [rdx+0x4]
   140007731:	jge    0x140007680
   140007737:	movsxd rax,r8d
   14000773a:	lea    rcx,[rax+rax*2]
   14000773e:	mov    rax,QWORD PTR [rdx+0x10]
   140007742:	lea    rcx,[rax+rcx*8]
   140007746:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x1
   14000774b:	jne    0x140007680
   140007751:	lea    eax,[r8+0x1]
   140007755:	lea    rdx,[rip+0x182c4]        # 0x14001fa20
   14000775c:	lea    rcx,[rsp+0x70]
   140007761:	mov    DWORD PTR [rbx+0x8],eax
   140007764:	call   QWORD PTR [rip+0x17e16]        # 0x14001f580
   14000776a:	mov    r11,QWORD PTR [rbx]
   14000776d:	mov    eax,DWORD PTR [rbx+0x8]
   140007770:	dec    eax
   140007772:	cdqe   
   140007774:	lea    rcx,[rax+rax*2]
   140007778:	mov    rax,QWORD PTR [r11+0x10]
   14000777c:	lea    rdx,[rax+rcx*8]
   140007780:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   140007785:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   14000778a:	lea    rcx,[rdx+r11*1+0x8]
   14000778f:	lea    rdx,[rsp+0x88]
   140007797:	call   QWORD PTR [rip+0x17e33]        # 0x14001f5d0
   14000779d:	lea    rdx,[rsp+0x88]
   1400077a5:	lea    rcx,[rsp+0x70]
   1400077aa:	call   QWORD PTR [rip+0x17e30]        # 0x14001f5e0
   1400077b0:	lea    rcx,[rsp+0x88]
   1400077b8:	jmp    0x1400076f8
   1400077bd:	mov    rax,QWORD PTR [r13+0x90]
   1400077c4:	mov    ecx,DWORD PTR [rax]
   1400077c6:	cmp    ecx,0x1
   1400077c9:	je     0x1400077db
   1400077cb:	test   ecx,ecx
   1400077cd:	je     0x1400077db
   1400077cf:	lea    rcx,[r13+0x90]
   1400077d6:	call   0x140003b10
   1400077db:	mov    rax,QWORD PTR [r13+0x90]
   1400077e2:	xor    ebp,ebp
   1400077e4:	mov    sil,0x1
   1400077e7:	mov    rdi,QWORD PTR [rax+0x10]
   1400077eb:	lea    r12,[rax+0x8]
   1400077ef:	test   rdi,rdi
   1400077f2:	je     0x14000784b
   1400077f4:	lea    rcx,[rdi+0x18]
   1400077f8:	lea    rdx,[rsp+0x70]
   1400077fd:	mov    r12,rdi
   140007800:	call   QWORD PTR [rip+0x17de2]        # 0x14001f5e8
   140007806:	test   eax,eax
   140007808:	js     0x140007816
   14000780a:	mov    rbp,rdi
   14000780d:	mov    rdi,QWORD PTR [rdi+0x8]
   140007811:	mov    sil,0x1
   140007814:	jmp    0x14000781d
   140007816:	mov    rdi,QWORD PTR [rdi+0x10]
   14000781a:	xor    sil,sil
   14000781d:	test   rdi,rdi
   140007820:	jne    0x1400077f4
   140007822:	test   rbp,rbp
   140007825:	je     0x14000784b
   140007827:	lea    rdx,[rbp+0x18]
   14000782b:	lea    rcx,[rsp+0x70]
   140007830:	call   QWORD PTR [rip+0x17db2]        # 0x14001f5e8
   140007836:	test   eax,eax
   140007838:	js     0x14000784b
   14000783a:	lea    rcx,[rbp+0x20]
   14000783e:	lea    rdx,[rsp+0x78]
   140007843:	call   QWORD PTR [rip+0x17d0f]        # 0x14001f558
   140007849:	jmp    0x140007894
   14000784b:	mov    rcx,QWORD PTR [r13+0x90]
   140007852:	mov    edx,0x28
   140007857:	mov    r9,r12
   14000785a:	lea    r8d,[rdx-0x20]
   14000785e:	mov    BYTE PTR [rsp+0x20],sil
   140007863:	call   QWORD PTR [rip+0x17c9f]        # 0x14001f508
   140007869:	mov    rdi,rax
   14000786c:	lea    rcx,[rax+0x18]
   140007870:	test   rcx,rcx
   140007873:	je     0x140007880
   140007875:	lea    rdx,[rsp+0x70]
   14000787a:	call   QWORD PTR [rip+0x17d58]        # 0x14001f5d8
   140007880:	lea    rcx,[rdi+0x20]
   140007884:	test   rcx,rcx
   140007887:	je     0x140007894
   140007889:	lea    rdx,[rsp+0x78]
   14000788e:	call   QWORD PTR [rip+0x17d44]        # 0x14001f5d8
   140007894:	mov    r8,QWORD PTR [rbx]
   140007897:	movsxd rdx,DWORD PTR [rbx+0x8]
   14000789b:	cmp    edx,DWORD PTR [r8+0x4]
   14000789f:	jge    0x1400078bd
   1400078a1:	mov    rax,QWORD PTR [r8+0x10]
   1400078a5:	lea    rcx,[rdx+rdx*2]
   1400078a9:	lea    rcx,[rax+rcx*8]
   1400078ad:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa
   1400078b3:	jne    0x1400078bd
   1400078b5:	lea    eax,[rdx+0x1]
   1400078b8:	mov    DWORD PTR [rbx+0x8],eax
   1400078bb:	jmp    0x1400078c7
   1400078bd:	xor    edx,edx
   1400078bf:	mov    rcx,rbx
   1400078c2:	call   0x140019c50
   1400078c7:	lea    rcx,[rsp+0x70]
   1400078cc:	call   QWORD PTR [rip+0x17ce6]        # 0x14001f5b8
   1400078d2:	lea    rcx,[rsp+0x78]
   1400078d7:	call   QWORD PTR [rip+0x17cdb]        # 0x14001f5b8
   1400078dd:	add    rsp,0x38
   1400078e1:	pop    r13
   1400078e3:	pop    r12
   1400078e5:	pop    rdi
   1400078e6:	pop    rsi
   1400078e7:	pop    rbp
   1400078e8:	pop    rbx
   1400078e9:	ret    
   1400078ea:	int3   
   1400078eb:	int3   
   1400078ec:	int3   
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400078f5:	push   rdi
   1400078f6:	sub    rsp,0x30
   1400078fa:	mov    r9,QWORD PTR [rcx]
   1400078fd:	mov    rbx,rcx
   140007900:	movsxd rcx,DWORD PTR [rcx+0x8]
   140007904:	cmp    ecx,DWORD PTR [r9+0x4]
   140007908:	mov    rdi,rdx
   14000790b:	jge    0x140007929
   14000790d:	mov    rax,QWORD PTR [r9+0x10]
   140007911:	lea    r8,[rcx+rcx*2]
   140007915:	lea    r8,[rax+r8*8]
   140007919:	cmp    DWORD PTR [r8+r9*1+0x4],0x9
   14000791f:	jne    0x140007929
   140007921:	lea    eax,[rcx+0x1]
   140007924:	mov    DWORD PTR [rbx+0x8],eax
   140007927:	jmp    0x140007933
   140007929:	xor    edx,edx
   14000792b:	mov    rcx,rbx
   14000792e:	call   0x140019c50
   140007933:	lea    rcx,[rsp+0x20]
   140007938:	call   QWORD PTR [rip+0x17c82]        # 0x14001f5c0
   14000793e:	lea    rcx,[rsp+0x28]
   140007943:	call   QWORD PTR [rip+0x17c77]        # 0x14001f5c0
   140007949:	mov    r11,QWORD PTR [rbx]
   14000794c:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007950:	cmp    edx,DWORD PTR [r11+0x4]
   140007954:	jge    0x140007972
   140007956:	mov    rax,QWORD PTR [r11+0x10]
   14000795a:	lea    rcx,[rdx+rdx*2]
   14000795e:	lea    rcx,[rax+rcx*8]
   140007962:	cmp    DWORD PTR [rcx+r11*1+0x4],0x4
   140007968:	jne    0x140007972
   14000796a:	lea    eax,[rdx+0x1]
   14000796d:	mov    DWORD PTR [rbx+0x8],eax
   140007970:	jmp    0x14000797c
   140007972:	xor    edx,edx
   140007974:	mov    rcx,rbx
   140007977:	call   0x140019c50
   14000797c:	mov    rdx,QWORD PTR [rbx]
   14000797f:	mov    eax,DWORD PTR [rbx+0x8]
   140007982:	dec    eax
   140007984:	cdqe   
   140007986:	lea    rcx,[rax+rax*2]
   14000798a:	mov    rax,QWORD PTR [rdx+0x10]
   14000798e:	lea    rcx,[rax+rcx*8]
   140007992:	add    rcx,rdx
   140007995:	lea    rdx,[rsp+0x40]
   14000799a:	mov    r9d,DWORD PTR [rcx+0x14]
   14000799e:	mov    r8d,DWORD PTR [rcx+0x10]
   1400079a2:	add    rcx,0x8
   1400079a6:	sub    r9d,0x2
   1400079aa:	inc    r8d
   1400079ad:	call   QWORD PTR [rip+0x17c1d]        # 0x14001f5d0
   1400079b3:	lea    rdx,[rsp+0x40]
   1400079b8:	lea    rcx,[rsp+0x20]
   1400079bd:	call   QWORD PTR [rip+0x17b95]        # 0x14001f558
   1400079c3:	lea    rcx,[rsp+0x40]
   1400079c8:	call   QWORD PTR [rip+0x17bea]        # 0x14001f5b8
   1400079ce:	mov    r11,QWORD PTR [rbx]
   1400079d1:	movsxd rdx,DWORD PTR [rbx+0x8]
   1400079d5:	cmp    edx,DWORD PTR [r11+0x4]
   1400079d9:	jge    0x1400079f7
   1400079db:	mov    rax,QWORD PTR [r11+0x10]
   1400079df:	lea    rcx,[rdx+rdx*2]
   1400079e3:	lea    rcx,[rax+rcx*8]
   1400079e7:	cmp    DWORD PTR [rcx+r11*1+0x4],0x5a
   1400079ed:	jne    0x1400079f7
   1400079ef:	lea    eax,[rdx+0x1]
   1400079f2:	mov    DWORD PTR [rbx+0x8],eax
   1400079f5:	jmp    0x140007a01
   1400079f7:	xor    edx,edx
   1400079f9:	mov    rcx,rbx
   1400079fc:	call   0x140019c50
   140007a01:	mov    r8,QWORD PTR [rbx]
   140007a04:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007a08:	mov    r9d,DWORD PTR [r8+0x4]
   140007a0c:	cmp    edx,r9d
   140007a0f:	jge    0x140007aa2
   140007a15:	mov    rax,QWORD PTR [r8+0x10]
   140007a19:	lea    rcx,[rdx+rdx*2]
   140007a1d:	lea    rcx,[rax+rcx*8]
   140007a21:	cmp    DWORD PTR [rcx+r8*1+0x4],0x4
   140007a27:	jne    0x140007a81
   140007a29:	lea    eax,[rdx+0x1]
   140007a2c:	mov    DWORD PTR [rbx+0x8],eax
   140007a2f:	dec    eax
   140007a31:	movsxd rcx,eax
   140007a34:	mov    rax,QWORD PTR [r8+0x10]
   140007a38:	lea    rdx,[rcx+rcx*2]
   140007a3c:	lea    rcx,[rax+rdx*8]
   140007a40:	lea    rdx,[rsp+0x40]
   140007a45:	add    rcx,r8
   140007a48:	add    rcx,0x8
   140007a4c:	mov    r9d,DWORD PTR [rcx+0xc]
   140007a50:	mov    r8d,DWORD PTR [rcx+0x8]
   140007a54:	sub    r9d,0x2
   140007a58:	inc    r8d
   140007a5b:	call   QWORD PTR [rip+0x17b6f]        # 0x14001f5d0
   140007a61:	lea    rdx,[rsp+0x40]
   140007a66:	lea    rcx,[rsp+0x28]
   140007a6b:	call   QWORD PTR [rip+0x17ae7]        # 0x14001f558
   140007a71:	lea    rcx,[rsp+0x40]
   140007a76:	call   QWORD PTR [rip+0x17b3c]        # 0x14001f5b8
   140007a7c:	jmp    0x140007b97
   140007a81:	cmp    edx,r9d
   140007a84:	jge    0x140007aa2
   140007a86:	mov    rax,QWORD PTR [r8+0x10]
   140007a8a:	lea    rcx,[rdx+rdx*2]
   140007a8e:	lea    rcx,[rax+rcx*8]
   140007a92:	cmp    DWORD PTR [rcx+r8*1+0x4],0x1
   140007a98:	jne    0x140007aa2
   140007a9a:	lea    eax,[rdx+0x1]
   140007a9d:	mov    DWORD PTR [rbx+0x8],eax
   140007aa0:	jmp    0x140007aac
   140007aa2:	xor    edx,edx
   140007aa4:	mov    rcx,rbx
   140007aa7:	call   0x140019c50
   140007aac:	mov    r8,QWORD PTR [rbx]
   140007aaf:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007ab3:	cmp    edx,DWORD PTR [r8+0x4]
   140007ab7:	jge    0x140007ad5
   140007ab9:	mov    rax,QWORD PTR [r8+0x10]
   140007abd:	lea    rcx,[rdx+rdx*2]
   140007ac1:	lea    rcx,[rax+rcx*8]
   140007ac5:	cmp    DWORD PTR [rcx+r8*1+0x4],0x9
   140007acb:	jne    0x140007ad5
   140007acd:	lea    eax,[rdx+0x1]
   140007ad0:	mov    DWORD PTR [rbx+0x8],eax
   140007ad3:	jmp    0x140007adf
   140007ad5:	xor    edx,edx
   140007ad7:	mov    rcx,rbx
   140007ada:	call   0x140019c50
   140007adf:	mov    r8,QWORD PTR [rbx]
   140007ae2:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007ae6:	cmp    edx,DWORD PTR [r8+0x4]
   140007aea:	jge    0x140007b08
   140007aec:	mov    rax,QWORD PTR [r8+0x10]
   140007af0:	lea    rcx,[rdx+rdx*2]
   140007af4:	lea    rcx,[rax+rcx*8]
   140007af8:	cmp    DWORD PTR [rcx+r8*1+0x4],0x4
   140007afe:	jne    0x140007b08
   140007b00:	lea    eax,[rdx+0x1]
   140007b03:	mov    DWORD PTR [rbx+0x8],eax
   140007b06:	jmp    0x140007b12
   140007b08:	xor    edx,edx
   140007b0a:	mov    rcx,rbx
   140007b0d:	call   0x140019c50
   140007b12:	mov    rdx,QWORD PTR [rbx]
   140007b15:	mov    eax,DWORD PTR [rbx+0x8]
   140007b18:	dec    eax
   140007b1a:	cdqe   
   140007b1c:	lea    rcx,[rax+rax*2]
   140007b20:	mov    rax,QWORD PTR [rdx+0x10]
   140007b24:	lea    rcx,[rax+rcx*8]
   140007b28:	add    rcx,rdx
   140007b2b:	lea    rdx,[rsp+0x40]
   140007b30:	mov    r9d,DWORD PTR [rcx+0x14]
   140007b34:	mov    r8d,DWORD PTR [rcx+0x10]
   140007b38:	add    rcx,0x8
   140007b3c:	sub    r9d,0x2
   140007b40:	inc    r8d
   140007b43:	call   QWORD PTR [rip+0x17a87]        # 0x14001f5d0
   140007b49:	lea    rdx,[rsp+0x40]
   140007b4e:	lea    rcx,[rsp+0x28]
   140007b53:	call   QWORD PTR [rip+0x179ff]        # 0x14001f558
   140007b59:	lea    rcx,[rsp+0x40]
   140007b5e:	call   QWORD PTR [rip+0x17a54]        # 0x14001f5b8
   140007b64:	mov    r11,QWORD PTR [rbx]
   140007b67:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007b6b:	cmp    edx,DWORD PTR [r11+0x4]
   140007b6f:	jge    0x140007b8d
   140007b71:	mov    rax,QWORD PTR [r11+0x10]
   140007b75:	lea    rcx,[rdx+rdx*2]
   140007b79:	lea    rcx,[rax+rcx*8]
   140007b7d:	cmp    DWORD PTR [rcx+r11*1+0x4],0xa
   140007b83:	jne    0x140007b8d
   140007b85:	lea    eax,[rdx+0x1]
   140007b88:	mov    DWORD PTR [rbx+0x8],eax
   140007b8b:	jmp    0x140007b97
   140007b8d:	xor    edx,edx
   140007b8f:	mov    rcx,rbx
   140007b92:	call   0x140019c50
   140007b97:	mov    r8,QWORD PTR [rbx]
   140007b9a:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007b9e:	cmp    edx,DWORD PTR [r8+0x4]
   140007ba2:	jge    0x140007bc0
   140007ba4:	mov    rax,QWORD PTR [r8+0x10]
   140007ba8:	lea    rcx,[rdx+rdx*2]
   140007bac:	lea    rcx,[rax+rcx*8]
   140007bb0:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa
   140007bb6:	jne    0x140007bc0
   140007bb8:	lea    eax,[rdx+0x1]
   140007bbb:	mov    DWORD PTR [rbx+0x8],eax
   140007bbe:	jmp    0x140007bca
   140007bc0:	xor    edx,edx
   140007bc2:	mov    rcx,rbx
   140007bc5:	call   0x140019c50
   140007bca:	mov    rax,QWORD PTR [rdi+0x78]
   140007bce:	lea    rcx,[rdi+0x78]
   140007bd2:	mov    edx,DWORD PTR [rax]
   140007bd4:	cmp    edx,0x1
   140007bd7:	je     0x140007bef
   140007bd9:	test   edx,edx
   140007bdb:	je     0x140007bef
   140007bdd:	mov    edx,0x7fffffff
   140007be2:	mov    r8d,0x1
   140007be8:	call   0x140003a30
   140007bed:	jmp    0x140007bf5
   140007bef:	call   QWORD PTR [rip+0x175ab]        # 0x14001f1a0
   140007bf5:	mov    ecx,0x10
   140007bfa:	mov    rdi,rax
   140007bfd:	call   0x14001e1c6
   140007c02:	mov    rbx,rax
   140007c05:	test   rax,rax
   140007c08:	je     0x140007c29
   140007c0a:	lea    rdx,[rsp+0x20]
   140007c0f:	mov    rcx,rax
   140007c12:	call   QWORD PTR [rip+0x179c0]        # 0x14001f5d8
   140007c18:	lea    rcx,[rbx+0x8]
   140007c1c:	lea    rdx,[rsp+0x28]
   140007c21:	call   QWORD PTR [rip+0x179b1]        # 0x14001f5d8
   140007c27:	jmp    0x140007c2b
   140007c29:	xor    ebx,ebx
   140007c2b:	lea    rcx,[rsp+0x28]
   140007c30:	mov    QWORD PTR [rdi],rbx
   140007c33:	call   QWORD PTR [rip+0x1797f]        # 0x14001f5b8
   140007c39:	lea    rcx,[rsp+0x20]
   140007c3e:	call   QWORD PTR [rip+0x17974]        # 0x14001f5b8
   140007c44:	mov    rbx,QWORD PTR [rsp+0x48]
   140007c49:	add    rsp,0x30
   140007c4d:	pop    rdi
   140007c4e:	ret    
   140007c4f:	int3   
   140007c50:	rex push rbx
   140007c52:	push   rbp
   140007c53:	push   rsi
   140007c54:	push   rdi
   140007c55:	push   r12
   140007c57:	push   r13
   140007c59:	sub    rsp,0x38
   140007c5d:	mov    r8,QWORD PTR [rcx]
   140007c60:	mov    rbx,rcx
   140007c63:	movsxd rcx,DWORD PTR [rcx+0x8]
   140007c67:	cmp    ecx,DWORD PTR [r8+0x4]
   140007c6b:	jge    0x140007c89
   140007c6d:	mov    rax,QWORD PTR [r8+0x10]
   140007c71:	lea    rdx,[rcx+rcx*2]
   140007c75:	lea    rdx,[rax+rdx*8]
   140007c79:	cmp    DWORD PTR [rdx+r8*1+0x4],0x9
   140007c7f:	jne    0x140007c89
   140007c81:	lea    eax,[rcx+0x1]
   140007c84:	mov    DWORD PTR [rbx+0x8],eax
   140007c87:	jmp    0x140007c93
   140007c89:	xor    edx,edx
   140007c8b:	mov    rcx,rbx
   140007c8e:	call   0x140019c50
   140007c93:	lea    rcx,[rsp+0x70]
   140007c98:	call   QWORD PTR [rip+0x17922]        # 0x14001f5c0
   140007c9e:	mov    r11,QWORD PTR [rbx]
   140007ca1:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007ca5:	cmp    edx,DWORD PTR [r11+0x4]
   140007ca9:	jge    0x140007cc7
   140007cab:	mov    rax,QWORD PTR [r11+0x10]
   140007caf:	lea    rcx,[rdx+rdx*2]
   140007cb3:	lea    rcx,[rax+rcx*8]
   140007cb7:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   140007cbd:	jne    0x140007cc7
   140007cbf:	lea    eax,[rdx+0x1]
   140007cc2:	mov    DWORD PTR [rbx+0x8],eax
   140007cc5:	jmp    0x140007cd1
   140007cc7:	xor    edx,edx
   140007cc9:	mov    rcx,rbx
   140007ccc:	call   0x140019c50
   140007cd1:	mov    r8,QWORD PTR [rbx]
   140007cd4:	mov    eax,DWORD PTR [rbx+0x8]
   140007cd7:	dec    eax
   140007cd9:	cdqe   
   140007cdb:	lea    rcx,[rax+rax*2]
   140007cdf:	mov    rax,QWORD PTR [r8+0x10]
   140007ce3:	lea    rdx,[rax+rcx*8]
   140007ce7:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140007cec:	lea    rcx,[rdx+r8*1+0x8]
   140007cf1:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140007cf6:	lea    rdx,[rsp+0x80]
   140007cfe:	call   QWORD PTR [rip+0x178cc]        # 0x14001f5d0
   140007d04:	lea    rdx,[rsp+0x80]
   140007d0c:	lea    rcx,[rsp+0x70]
   140007d11:	call   QWORD PTR [rip+0x178c9]        # 0x14001f5e0
   140007d17:	lea    rcx,[rsp+0x80]
   140007d1f:	call   QWORD PTR [rip+0x17893]        # 0x14001f5b8
   140007d25:	mov    r9,QWORD PTR [rbx]
   140007d28:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007d2c:	cmp    edx,DWORD PTR [r9+0x4]
   140007d30:	jge    0x140007e29
   140007d36:	mov    rax,QWORD PTR [r9+0x10]
   140007d3a:	lea    rcx,[rdx+rdx*2]
   140007d3e:	lea    rcx,[rax+rcx*8]
   140007d42:	cmp    DWORD PTR [rcx+r9*1+0x4],0x11
   140007d48:	jne    0x140007e29
   140007d4e:	lea    eax,[rdx+0x1]
   140007d51:	mov    DWORD PTR [rbx+0x8],eax
   140007d54:	dec    eax
   140007d56:	movsxd rcx,eax
   140007d59:	mov    rax,QWORD PTR [r9+0x10]
   140007d5d:	lea    rdx,[rcx+rcx*2]
   140007d61:	lea    r8,[rax+rdx*8]
   140007d65:	lea    rdx,[rsp+0x80]
   140007d6d:	add    r8,r9
   140007d70:	mov    r9d,DWORD PTR [r8+0x14]
   140007d74:	lea    rcx,[r8+0x8]
   140007d78:	mov    r8d,DWORD PTR [r8+0x10]
   140007d7c:	call   QWORD PTR [rip+0x1784e]        # 0x14001f5d0
   140007d82:	lea    rdx,[rsp+0x80]
   140007d8a:	lea    rcx,[rsp+0x70]
   140007d8f:	call   QWORD PTR [rip+0x1784b]        # 0x14001f5e0
   140007d95:	lea    rcx,[rsp+0x80]
   140007d9d:	call   QWORD PTR [rip+0x17815]        # 0x14001f5b8
   140007da3:	mov    r11,QWORD PTR [rbx]
   140007da6:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007daa:	cmp    edx,DWORD PTR [r11+0x4]
   140007dae:	jge    0x140007dcc
   140007db0:	mov    rax,QWORD PTR [r11+0x10]
   140007db4:	lea    rcx,[rdx+rdx*2]
   140007db8:	lea    rcx,[rax+rcx*8]
   140007dbc:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   140007dc2:	jne    0x140007dcc
   140007dc4:	lea    eax,[rdx+0x1]
   140007dc7:	mov    DWORD PTR [rbx+0x8],eax
   140007dca:	jmp    0x140007dd6
   140007dcc:	xor    edx,edx
   140007dce:	mov    rcx,rbx
   140007dd1:	call   0x140019c50
   140007dd6:	mov    r8,QWORD PTR [rbx]
   140007dd9:	mov    eax,DWORD PTR [rbx+0x8]
   140007ddc:	dec    eax
   140007dde:	cdqe   
   140007de0:	lea    rcx,[rax+rax*2]
   140007de4:	mov    rax,QWORD PTR [r8+0x10]
   140007de8:	lea    rdx,[rax+rcx*8]
   140007dec:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140007df1:	lea    rcx,[rdx+r8*1+0x8]
   140007df6:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140007dfb:	lea    rdx,[rsp+0x88]
   140007e03:	call   QWORD PTR [rip+0x177c7]        # 0x14001f5d0
   140007e09:	lea    rdx,[rsp+0x88]
   140007e11:	lea    rcx,[rsp+0x70]
   140007e16:	call   QWORD PTR [rip+0x177c4]        # 0x14001f5e0
   140007e1c:	lea    rcx,[rsp+0x88]
   140007e24:	jmp    0x140007d1f
   140007e29:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007e2d:	cmp    edx,DWORD PTR [r9+0x4]
   140007e31:	jge    0x140007e4f
   140007e33:	mov    rax,QWORD PTR [r9+0x10]
   140007e37:	lea    rcx,[rdx+rdx*2]
   140007e3b:	lea    rcx,[rax+rcx*8]
   140007e3f:	cmp    DWORD PTR [rcx+r9*1+0x4],0x5a
   140007e45:	jne    0x140007e4f
   140007e47:	lea    eax,[rdx+0x1]
   140007e4a:	mov    DWORD PTR [rbx+0x8],eax
   140007e4d:	jmp    0x140007e59
   140007e4f:	xor    edx,edx
   140007e51:	mov    rcx,rbx
   140007e54:	call   0x140019c50
   140007e59:	lea    rcx,[rsp+0x78]
   140007e5e:	call   QWORD PTR [rip+0x1775c]        # 0x14001f5c0
   140007e64:	mov    r11,QWORD PTR [rbx]
   140007e67:	movsxd rdx,DWORD PTR [rbx+0x8]
   140007e6b:	mov    r8d,DWORD PTR [r11+0x4]
   140007e6f:	cmp    edx,r8d
   140007e72:	jge    0x140007ed1
   140007e74:	mov    rax,QWORD PTR [r11+0x10]
   140007e78:	lea    rcx,[rdx+rdx*2]
   140007e7c:	lea    rcx,[rax+rcx*8]
   140007e80:	cmp    DWORD PTR [rcx+r11*1+0x4],0x4
   140007e86:	jne    0x140007eb0
   140007e88:	lea    eax,[rdx+0x1]
   140007e8b:	mov    DWORD PTR [rbx+0x8],eax
   140007e8e:	dec    eax
   140007e90:	movsxd rcx,eax
   140007e93:	mov    rax,QWORD PTR [r11+0x10]
   140007e97:	lea    rdx,[rcx+rcx*2]
   140007e9b:	lea    r8,[rax+rdx*8]
   140007e9f:	mov    r9d,DWORD PTR [r8+r11*1+0x14]
   140007ea4:	lea    rcx,[r8+r11*1+0x8]
   140007ea9:	mov    r8d,DWORD PTR [r8+r11*1+0x10]
   140007eae:	jmp    0x140007f00
   140007eb0:	cmp    edx,r8d
   140007eb3:	jge    0x140007ed1
   140007eb5:	mov    rax,QWORD PTR [r11+0x10]
   140007eb9:	lea    rcx,[rdx+rdx*2]
   140007ebd:	lea    rcx,[rax+rcx*8]
   140007ec1:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   140007ec7:	jne    0x140007ed1
   140007ec9:	lea    eax,[rdx+0x1]
   140007ecc:	mov    DWORD PTR [rbx+0x8],eax
   140007ecf:	jmp    0x140007edb
   140007ed1:	xor    edx,edx
   140007ed3:	mov    rcx,rbx
   140007ed6:	call   0x140019c50
   140007edb:	mov    r8,QWORD PTR [rbx]
   140007ede:	mov    eax,DWORD PTR [rbx+0x8]
   140007ee1:	dec    eax
   140007ee3:	cdqe   
   140007ee5:	lea    rcx,[rax+rax*2]
   140007ee9:	mov    rax,QWORD PTR [r8+0x10]
   140007eed:	lea    rdx,[rax+rcx*8]
   140007ef1:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140007ef6:	lea    rcx,[rdx+r8*1+0x8]
   140007efb:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140007f00:	lea    rdx,[rsp+0x80]
   140007f08:	call   QWORD PTR [rip+0x176c2]        # 0x14001f5d0
   140007f0e:	lea    rdx,[rsp+0x80]
   140007f16:	lea    rcx,[rsp+0x78]
   140007f1b:	call   QWORD PTR [rip+0x17637]        # 0x14001f558
   140007f21:	lea    rcx,[rsp+0x80]
   140007f29:	call   QWORD PTR [rip+0x17689]        # 0x14001f5b8
   140007f2f:	mov    rax,QWORD PTR [rbx+0x48]
   140007f33:	mov    ecx,DWORD PTR [rax]
   140007f35:	cmp    ecx,0x1
   140007f38:	je     0x140007f47
   140007f3a:	test   ecx,ecx
   140007f3c:	je     0x140007f47
   140007f3e:	lea    rcx,[rbx+0x48]
   140007f42:	call   0x140003b10
   140007f47:	mov    rax,QWORD PTR [rbx+0x48]
   140007f4b:	xor    ebp,ebp
   140007f4d:	mov    sil,0x1
   140007f50:	mov    rdi,QWORD PTR [rax+0x10]
   140007f54:	lea    r12,[rax+0x8]
   140007f58:	test   rdi,rdi
   140007f5b:	je     0x140007fb7
   140007f5d:	nop    DWORD PTR [rax]
   140007f60:	lea    rcx,[rdi+0x18]
   140007f64:	lea    rdx,[rsp+0x70]
   140007f69:	mov    r12,rdi
   140007f6c:	call   QWORD PTR [rip+0x17676]        # 0x14001f5e8
   140007f72:	test   eax,eax
   140007f74:	js     0x140007f82
   140007f76:	mov    rbp,rdi
   140007f79:	mov    rdi,QWORD PTR [rdi+0x8]
   140007f7d:	mov    sil,0x1
   140007f80:	jmp    0x140007f89
   140007f82:	mov    rdi,QWORD PTR [rdi+0x10]
   140007f86:	xor    sil,sil
   140007f89:	test   rdi,rdi
   140007f8c:	jne    0x140007f60
   140007f8e:	test   rbp,rbp
   140007f91:	je     0x140007fb7
   140007f93:	lea    rdx,[rbp+0x18]
   140007f97:	lea    rcx,[rsp+0x70]
   140007f9c:	call   QWORD PTR [rip+0x17646]        # 0x14001f5e8
   140007fa2:	test   eax,eax
   140007fa4:	js     0x140007fb7
   140007fa6:	lea    rcx,[rbp+0x20]
   140007faa:	lea    rdx,[rsp+0x78]
   140007faf:	call   QWORD PTR [rip+0x175a3]        # 0x14001f558
   140007fb5:	jmp    0x140007ffd
   140007fb7:	mov    rcx,QWORD PTR [rbx+0x48]
   140007fbb:	mov    edx,0x28
   140007fc0:	mov    r9,r12
   140007fc3:	lea    r8d,[rdx-0x20]
   140007fc7:	mov    BYTE PTR [rsp+0x20],sil
   140007fcc:	call   QWORD PTR [rip+0x17536]        # 0x14001f508
   140007fd2:	mov    rdi,rax
   140007fd5:	lea    rcx,[rax+0x18]
   140007fd9:	test   rcx,rcx
   140007fdc:	je     0x140007fe9
   140007fde:	lea    rdx,[rsp+0x70]
   140007fe3:	call   QWORD PTR [rip+0x175ef]        # 0x14001f5d8
   140007fe9:	lea    rcx,[rdi+0x20]
   140007fed:	test   rcx,rcx
   140007ff0:	je     0x140007ffd
   140007ff2:	lea    rdx,[rsp+0x78]
   140007ff7:	call   QWORD PTR [rip+0x175db]        # 0x14001f5d8
   140007ffd:	mov    r8,QWORD PTR [rbx]
   140008000:	movsxd rdx,DWORD PTR [rbx+0x8]
   140008004:	cmp    edx,DWORD PTR [r8+0x4]
   140008008:	jge    0x140008026
   14000800a:	mov    rax,QWORD PTR [r8+0x10]
   14000800e:	lea    rcx,[rdx+rdx*2]
   140008012:	lea    rcx,[rax+rcx*8]
   140008016:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa
   14000801c:	jne    0x140008026
   14000801e:	lea    eax,[rdx+0x1]
   140008021:	mov    DWORD PTR [rbx+0x8],eax
   140008024:	jmp    0x140008030
   140008026:	xor    edx,edx
   140008028:	mov    rcx,rbx
   14000802b:	call   0x140019c50
   140008030:	lea    rcx,[rsp+0x78]
   140008035:	call   QWORD PTR [rip+0x1757d]        # 0x14001f5b8
   14000803b:	lea    rcx,[rsp+0x70]
   140008040:	call   QWORD PTR [rip+0x17572]        # 0x14001f5b8
   140008046:	add    rsp,0x38
   14000804a:	pop    r13
   14000804c:	pop    r12
   14000804e:	pop    rdi
   14000804f:	pop    rsi
   140008050:	pop    rbp
   140008051:	pop    rbx
   140008052:	ret    
   140008053:	int3   
   140008054:	int3   
   140008055:	int3   
   140008056:	int3   
   140008057:	int3   
   140008058:	int3   
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	int3   
   14000805d:	int3   
   14000805e:	int3   
   14000805f:	int3   
   140008060:	mov    QWORD PTR [rsp+0x10],rbp
   140008065:	mov    QWORD PTR [rsp+0x18],rsi
   14000806a:	push   rdi
   14000806b:	push   r12
   14000806d:	push   r13
   14000806f:	sub    rsp,0x20
   140008073:	mov    rax,QWORD PTR [rcx]
   140008076:	mov    rdi,rcx
   140008079:	mov    r12,r8
   14000807c:	mov    ecx,DWORD PTR [rax+0x10]
   14000807f:	mov    rsi,rdx
   140008082:	cmp    ecx,0x1
   140008085:	je     0x140008093
   140008087:	test   ecx,ecx
   140008089:	je     0x140008093
   14000808b:	mov    rcx,rdi
   14000808e:	call   0x140004860
   140008093:	mov    rax,QWORD PTR [rdi]
   140008096:	mov    rcx,r12
   140008099:	mov    edx,DWORD PTR [rax+0x24]
   14000809c:	call   QWORD PTR [rip+0x1742e]        # 0x14001f4d0
   1400080a2:	mov    rdx,r12
   1400080a5:	mov    rcx,rdi
   1400080a8:	mov    r8d,eax
   1400080ab:	mov    r13d,eax
   1400080ae:	call   0x1400025e0
   1400080b3:	mov    rcx,QWORD PTR [rdi]
   1400080b6:	mov    rdx,QWORD PTR [rax]
   1400080b9:	mov    rbp,rax
   1400080bc:	cmp    rdx,rcx
   1400080bf:	jne    0x140008148
   1400080c5:	mov    edx,DWORD PTR [rcx+0x20]
   1400080c8:	mov    QWORD PTR [rsp+0x40],rbx
   1400080cd:	cmp    DWORD PTR [rcx+0x14],edx
   1400080d0:	jl     0x140008102
   1400080d2:	movsx  edx,WORD PTR [rcx+0x1e]
   1400080d6:	inc    edx
   1400080d8:	call   QWORD PTR [rip+0x1711a]        # 0x14001f1f8
   1400080de:	mov    r11,QWORD PTR [rdi]
   1400080e1:	mov    rcx,r12
   1400080e4:	mov    edx,DWORD PTR [r11+0x24]
   1400080e8:	call   QWORD PTR [rip+0x173e2]        # 0x14001f4d0
   1400080ee:	mov    rdx,r12
   1400080f1:	mov    rcx,rdi
   1400080f4:	mov    r8d,eax
   1400080f7:	mov    r13d,eax
   1400080fa:	call   0x1400025e0
   1400080ff:	mov    rbp,rax
   140008102:	mov    rcx,QWORD PTR [rdi]
   140008105:	mov    edx,0x8
   14000810a:	call   QWORD PTR [rip+0x173d0]        # 0x14001f4e0
   140008110:	mov    rbx,rax
   140008113:	test   rax,rax
   140008116:	je     0x140008132
   140008118:	mov    rax,QWORD PTR [rbp+0x0]
   14000811c:	lea    rcx,[rbx+0x10]
   140008120:	mov    rdx,r12
   140008123:	mov    QWORD PTR [rbx],rax
   140008126:	mov    DWORD PTR [rbx+0x8],r13d
   14000812a:	call   QWORD PTR [rip+0x174a8]        # 0x14001f5d8
   140008130:	jmp    0x140008134
   140008132:	xor    ebx,ebx
   140008134:	mov    QWORD PTR [rbp+0x0],rbx
   140008138:	mov    rax,QWORD PTR [rdi]
   14000813b:	mov    QWORD PTR [rsi],rbx
   14000813e:	inc    DWORD PTR [rax+0x14]
   140008141:	mov    rbx,QWORD PTR [rsp+0x40]
   140008146:	jmp    0x14000814b
   140008148:	mov    QWORD PTR [rsi],rdx
   14000814b:	mov    rbp,QWORD PTR [rsp+0x48]
   140008150:	mov    rax,rsi
   140008153:	mov    rsi,QWORD PTR [rsp+0x50]
   140008158:	add    rsp,0x20
   14000815c:	pop    r13
   14000815e:	pop    r12
   140008160:	pop    rdi
   140008161:	ret    
   140008162:	int3   
   140008163:	int3   
   140008164:	int3   
   140008165:	int3   
   140008166:	int3   
   140008167:	int3   
   140008168:	int3   
   140008169:	int3   
   14000816a:	int3   
   14000816b:	int3   
   14000816c:	int3   
   14000816d:	int3   
   14000816e:	int3   
   14000816f:	int3   
   140008170:	mov    QWORD PTR [rsp+0x8],rbx
   140008175:	push   rdi
   140008176:	sub    rsp,0x20
   14000817a:	mov    rax,QWORD PTR [rcx]
   14000817d:	mov    rdi,rcx
   140008180:	mov    edx,DWORD PTR [rax]
   140008182:	cmp    edx,0x1
   140008185:	je     0x1400081be
   140008187:	test   edx,edx
   140008189:	je     0x1400081be
   14000818b:	mov    r8d,DWORD PTR [rax+0x8]
   14000818f:	btr    r8d,0x1f
   140008194:	test   r8d,r8d
   140008197:	jne    0x1400081b3
   140008199:	mov    edx,0x8
   14000819e:	lea    r9d,[r8+0x2]
   1400081a2:	xor    r8d,r8d
   1400081a5:	mov    rcx,rdx
   1400081a8:	call   QWORD PTR [rip+0x1736a]        # 0x14001f518
   1400081ae:	mov    QWORD PTR [rdi],rax
   1400081b1:	jmp    0x1400081be
   1400081b3:	mov    edx,DWORD PTR [rax+0x4]
   1400081b6:	xor    r9d,r9d
   1400081b9:	call   0x140003220
   1400081be:	mov    rax,QWORD PTR [rdi]
   1400081c1:	mov    rcx,rdi
   1400081c4:	mov    ebx,DWORD PTR [rax+0x4]
   1400081c7:	call   0x140006340
   1400081cc:	lea    ecx,[rbx-0x1]
   1400081cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081d4:	movsxd rdx,ecx
   1400081d7:	lea    rax,[rax+rdx*8]
   1400081db:	add    rsp,0x20
   1400081df:	pop    rdi
   1400081e0:	ret    
   1400081e1:	int3   
   1400081e2:	int3   
   1400081e3:	int3   
   1400081e4:	int3   
   1400081e5:	int3   
   1400081e6:	int3   
   1400081e7:	int3   
   1400081e8:	int3   
   1400081e9:	int3   
   1400081ea:	int3   
   1400081eb:	int3   
   1400081ec:	int3   
   1400081ed:	int3   
   1400081ee:	int3   
   1400081ef:	int3   
   1400081f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400081f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400081fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400081ff:	push   rdi
   140008200:	sub    rsp,0x20
   140008204:	mov    rsi,rcx
   140008207:	mov    rcx,QWORD PTR [rcx]
   14000820a:	mov    rdi,r8
   14000820d:	mov    r9d,DWORD PTR [rcx]
   140008210:	mov    rbp,rdx
   140008213:	cmp    r9d,0x1
   140008217:	je     0x140008262
   140008219:	test   r9d,r9d
   14000821c:	je     0x140008262
   14000821e:	movsxd rax,DWORD PTR [rcx+0x8]
   140008222:	mov    rbx,QWORD PTR [r8]
   140008225:	lea    rax,[rax*8+0x10]
   14000822d:	sub    rbx,rax
   140008230:	sub    rbx,rcx
   140008233:	sar    rbx,0x3
   140008237:	cmp    r9d,0x1
   14000823b:	je     0x14000824d
   14000823d:	test   r9d,r9d
   140008240:	je     0x14000824d
   140008242:	mov    edx,DWORD PTR [rcx+0x4]
   140008245:	mov    rcx,rsi
   140008248:	call   0x140003620
   14000824d:	mov    rdx,QWORD PTR [rsi]
   140008250:	movsxd rax,ebx
   140008253:	movsxd rcx,DWORD PTR [rdx+0x8]
   140008257:	add    rcx,rax
   14000825a:	lea    rax,[rdx+rcx*8+0x10]
   14000825f:	mov    QWORD PTR [rdi],rax
   140008262:	mov    rax,QWORD PTR [rdi]
   140008265:	mov    rbx,QWORD PTR [rax]
   140008268:	test   rbx,rbx
   14000826b:	je     0x1400082b0
   14000826d:	lea    rcx,[rbx+0x38]
   140008271:	call   QWORD PTR [rip+0x17341]        # 0x14001f5b8
   140008277:	lea    rcx,[rbx+0x30]
   14000827b:	call   QWORD PTR [rip+0x17337]        # 0x14001f5b8
   140008281:	lea    rcx,[rbx+0x28]
   140008285:	call   QWORD PTR [rip+0x1732d]        # 0x14001f5b8
   14000828b:	lea    rcx,[rbx+0x20]
   14000828f:	call   QWORD PTR [rip+0x17323]        # 0x14001f5b8
   140008295:	lea    rcx,[rbx+0x8]
   140008299:	call   QWORD PTR [rip+0x17319]        # 0x14001f5b8
   14000829f:	mov    rcx,rbx
   1400082a2:	call   QWORD PTR [rip+0x17310]        # 0x14001f5b8
   1400082a8:	mov    rcx,rbx
   1400082ab:	call   0x14001e1c0
   1400082b0:	mov    rdx,QWORD PTR [rdi]
   1400082b3:	mov    rcx,rsi
   1400082b6:	call   QWORD PTR [rip+0x16f44]        # 0x14001f200
   1400082bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400082c1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400082c6:	mov    QWORD PTR [rbp+0x0],rax
   1400082ca:	mov    rax,rbp
   1400082cd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400082d2:	add    rsp,0x20
   1400082d6:	pop    rdi
   1400082d7:	ret    
   1400082d8:	int3   
   1400082d9:	int3   
   1400082da:	int3   
   1400082db:	int3   
   1400082dc:	int3   
   1400082dd:	int3   
   1400082de:	int3   
   1400082df:	int3   
   1400082e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400082e5:	push   rdi
   1400082e6:	sub    rsp,0x20
   1400082ea:	mov    rax,QWORD PTR [rdx]
   1400082ed:	mov    rbx,rcx
   1400082f0:	mov    rdi,rdx
   1400082f3:	mov    QWORD PTR [rcx],rax
   1400082f6:	mov    ecx,DWORD PTR [rax]
   1400082f8:	test   ecx,ecx
   1400082fa:	je     0x140008313
   1400082fc:	cmp    ecx,0xffffffff
   1400082ff:	je     0x140008348
   140008301:	lock add DWORD PTR [rax],0x1
   140008305:	mov    rax,rbx
   140008308:	mov    rbx,QWORD PTR [rsp+0x30]
   14000830d:	add    rsp,0x20
   140008311:	pop    rdi
   140008312:	ret    
   140008313:	mov    edx,DWORD PTR [rax+0x4]
   140008316:	mov    rcx,rbx
   140008319:	call   QWORD PTR [rip+0x17191]        # 0x14001f4b0
   14000831f:	mov    rcx,QWORD PTR [rbx]
   140008322:	mov    r11,QWORD PTR [rdi]
   140008325:	movsxd rax,DWORD PTR [r11+0x8]
   140008329:	lea    r9,[r11+rax*8+0x10]
   14000832e:	movsxd rax,DWORD PTR [rcx+0xc]
   140008332:	lea    r8,[rcx+rax*8+0x10]
   140008337:	movsxd rax,DWORD PTR [rcx+0x8]
   14000833b:	lea    rdx,[rcx+rax*8+0x10]
   140008340:	mov    rcx,rbx
   140008343:	call   0x140006540
   140008348:	mov    rax,rbx
   14000834b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008350:	add    rsp,0x20
   140008354:	pop    rdi
   140008355:	ret    
   140008356:	int3   
   140008357:	int3   
   140008358:	int3   
   140008359:	int3   
   14000835a:	int3   
   14000835b:	int3   
   14000835c:	int3   
   14000835d:	int3   
   14000835e:	int3   
   14000835f:	int3   
   140008360:	mov    QWORD PTR [rsp+0x20],rbx
   140008365:	mov    QWORD PTR [rsp+0x8],rcx
   14000836a:	push   rbp
   14000836b:	push   rsi
   14000836c:	push   rdi
   14000836d:	push   r12
   14000836f:	push   r13
   140008371:	push   r14
   140008373:	push   r15
   140008375:	sub    rsp,0x20
   140008379:	mov    r11,QWORD PTR [rcx]
   14000837c:	mov    rbp,rdx
   14000837f:	mov    rbx,rcx
   140008382:	mov    rax,QWORD PTR [r11]
   140008385:	mov    r9,QWORD PTR [rax]
   140008388:	mov    rax,QWORD PTR [r9]
   14000838b:	mov    r8,QWORD PTR [rax]
   14000838e:	mov    rax,QWORD PTR [r8+0x8]
   140008392:	mov    r8,QWORD PTR [rax]
   140008395:	mov    rax,QWORD PTR [r9+0x8]
   140008399:	mov    r10d,DWORD PTR [r8+0x4]
   14000839d:	mov    r8,QWORD PTR [rax]
   1400083a0:	mov    rax,QWORD PTR [r11+0x8]
   1400083a4:	mov    rdx,QWORD PTR [rax]
   1400083a7:	mov    ecx,DWORD PTR [rdx+0x4]
   1400083aa:	add    ecx,DWORD PTR [r8+0x4]
   1400083ae:	xor    r8d,r8d
   1400083b1:	lea    eax,[rcx+r10*1+0x39]
   1400083b6:	mov    rcx,rbp
   1400083b9:	mov    edx,eax
   1400083bb:	mov    DWORD PTR [rsp+0x68],eax
   1400083bf:	call   QWORD PTR [rip+0x17113]        # 0x14001f4d8
   1400083c5:	mov    rcx,rbp
   1400083c8:	call   QWORD PTR [rip+0x1722a]        # 0x14001f5f8
   1400083ce:	mov    rdi,rax
   1400083d1:	mov    r13,rax
   1400083d4:	mov    rax,QWORD PTR [rbx]
   1400083d7:	mov    r15,QWORD PTR [rax]
   1400083da:	mov    QWORD PTR [rsp+0x70],rax
   1400083df:	mov    r14,QWORD PTR [r15]
   1400083e2:	mov    r12,QWORD PTR [r14]
   1400083e5:	mov    rbx,QWORD PTR [r12]
   1400083e9:	mov    rax,QWORD PTR [rbx]
   1400083ec:	movzx  ecx,BYTE PTR [rax]
   1400083ef:	test   cl,cl
   1400083f1:	je     0x140008401
   1400083f3:	inc    rax
   1400083f6:	mov    BYTE PTR [rdi],cl
   1400083f8:	inc    rdi
   1400083fb:	mov    cl,BYTE PTR [rax]
   1400083fd:	test   cl,cl
   1400083ff:	jne    0x1400083f3
   140008401:	mov    rbx,QWORD PTR [rbx+0x8]
   140008405:	mov    rcx,rbx
   140008408:	call   QWORD PTR [rip+0x171ea]        # 0x14001f5f8
   14000840e:	mov    rcx,rbx
   140008411:	mov    rsi,rax
   140008414:	call   QWORD PTR [rip+0x16f46]        # 0x14001f360
   14000841a:	cmp    rsi,rax
   14000841d:	je     0x140008431
   14000841f:	nop
   140008420:	movzx  ecx,BYTE PTR [rsi]
   140008423:	inc    rsi
   140008426:	inc    rdi
   140008429:	mov    BYTE PTR [rdi-0x1],cl
   14000842c:	cmp    rsi,rax
   14000842f:	jne    0x140008420
   140008431:	mov    rax,QWORD PTR [r12+0x8]
   140008436:	movzx  ecx,BYTE PTR [rax]
   140008439:	test   cl,cl
   14000843b:	je     0x14000844e
   14000843d:	nop    DWORD PTR [rax]
   140008440:	inc    rax
   140008443:	mov    BYTE PTR [rdi],cl
   140008445:	inc    rdi
   140008448:	mov    cl,BYTE PTR [rax]
   14000844a:	test   cl,cl
   14000844c:	jne    0x140008440
   14000844e:	mov    rbx,QWORD PTR [r14+0x8]
   140008452:	mov    rcx,rbx
   140008455:	call   QWORD PTR [rip+0x1719d]        # 0x14001f5f8
   14000845b:	mov    rcx,rbx
   14000845e:	mov    rsi,rax
   140008461:	call   QWORD PTR [rip+0x16ef9]        # 0x14001f360
   140008467:	cmp    rsi,rax
   14000846a:	je     0x140008481
   14000846c:	nop    DWORD PTR [rax+0x0]
   140008470:	movzx  ecx,BYTE PTR [rsi]
   140008473:	inc    rsi
   140008476:	inc    rdi
   140008479:	mov    BYTE PTR [rdi-0x1],cl
   14000847c:	cmp    rsi,rax
   14000847f:	jne    0x140008470
   140008481:	mov    rax,QWORD PTR [r15+0x8]
   140008485:	movzx  ecx,BYTE PTR [rax]
   140008488:	test   cl,cl
   14000848a:	je     0x14000849e
   14000848c:	nop    DWORD PTR [rax+0x0]
   140008490:	inc    rax
   140008493:	mov    BYTE PTR [rdi],cl
   140008495:	inc    rdi
   140008498:	mov    cl,BYTE PTR [rax]
   14000849a:	test   cl,cl
   14000849c:	jne    0x140008490
   14000849e:	mov    rbx,QWORD PTR [rsp+0x70]
   1400084a3:	mov    rbx,QWORD PTR [rbx+0x8]
   1400084a7:	mov    rcx,rbx
   1400084aa:	call   QWORD PTR [rip+0x17148]        # 0x14001f5f8
   1400084b0:	mov    rcx,rbx
   1400084b3:	mov    rsi,rax
   1400084b6:	call   QWORD PTR [rip+0x16ea4]        # 0x14001f360
   1400084bc:	cmp    rsi,rax
   1400084bf:	je     0x1400084d2
   1400084c1:	movzx  ecx,BYTE PTR [rsi]
   1400084c4:	inc    rsi
   1400084c7:	inc    rdi
   1400084ca:	mov    BYTE PTR [rdi-0x1],cl
   1400084cd:	cmp    rsi,rax
   1400084d0:	jne    0x1400084c1
   1400084d2:	mov    rax,QWORD PTR [rsp+0x60]
   1400084d7:	mov    rax,QWORD PTR [rax+0x8]
   1400084db:	movzx  ecx,BYTE PTR [rax]
   1400084de:	test   cl,cl
   1400084e0:	je     0x1400084f0
   1400084e2:	inc    rax
   1400084e5:	mov    BYTE PTR [rdi],cl
   1400084e7:	inc    rdi
   1400084ea:	mov    cl,BYTE PTR [rax]
   1400084ec:	test   cl,cl
   1400084ee:	jne    0x1400084e2
   1400084f0:	movsxd rax,DWORD PTR [rsp+0x68]
   1400084f5:	mov    rcx,rdi
   1400084f8:	sub    rcx,r13
   1400084fb:	cmp    rax,rcx
   1400084fe:	je     0x14000850e
   140008500:	sub    edi,r13d
   140008503:	mov    rcx,rbp
   140008506:	mov    edx,edi
   140008508:	call   QWORD PTR [rip+0x17082]        # 0x14001f590
   14000850e:	mov    rax,rbp
   140008511:	mov    rbx,QWORD PTR [rsp+0x78]
   140008516:	add    rsp,0x20
   14000851a:	pop    r15
   14000851c:	pop    r14
   14000851e:	pop    r13
   140008520:	pop    r12
   140008522:	pop    rdi
   140008523:	pop    rsi
   140008524:	pop    rbp
   140008525:	ret    
   140008526:	int3   
   140008527:	int3   
   140008528:	int3   
   140008529:	int3   
   14000852a:	int3   
   14000852b:	int3   
   14000852c:	int3   
   14000852d:	int3   
   14000852e:	int3   
   14000852f:	int3   
   140008530:	mov    QWORD PTR [rsp+0x8],rbx
   140008535:	mov    QWORD PTR [rsp+0x18],rbp
   14000853a:	mov    DWORD PTR [rsp+0x10],edx
   14000853e:	push   rsi
   14000853f:	push   rdi
   140008540:	push   r12
   140008542:	push   r13
   140008544:	push   r14
   140008546:	sub    rsp,0x20
   14000854a:	mov    rdx,QWORD PTR [rcx]
   14000854d:	movsxd r13,r8d
   140008550:	mov    r12,rcx
   140008553:	movsxd rax,DWORD PTR [rdx+0x8]
   140008557:	mov    r8d,r13d
   14000855a:	lea    r14,[rdx+rax*8+0x10]
   14000855f:	lea    rdx,[rsp+0x58]
   140008564:	call   QWORD PTR [rip+0x16f3e]        # 0x14001f4a8
   14000856a:	mov    r10,QWORD PTR [r12]
   14000856e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140008573:	movsxd r9,DWORD PTR [r10+0x8]
   140008577:	mov    rbp,rax
   14000857a:	mov    rdi,r14
   14000857d:	add    rdx,r9
   140008580:	lea    rbx,[r10+r9*8+0x10]
   140008585:	lea    rsi,[r10+rdx*8+0x10]
   14000858a:	cmp    rbx,rsi
   14000858d:	je     0x1400085be
   14000858f:	nop
   140008590:	mov    ecx,0x70
   140008595:	call   0x14001e1c6
   14000859a:	test   rax,rax
   14000859d:	je     0x1400085ac
   14000859f:	mov    rdx,QWORD PTR [rdi]
   1400085a2:	mov    rcx,rax
   1400085a5:	call   0x140003ce0
   1400085aa:	jmp    0x1400085ae
   1400085ac:	xor    eax,eax
   1400085ae:	mov    QWORD PTR [rbx],rax
   1400085b1:	add    rbx,0x8
   1400085b5:	add    rdi,0x8
   1400085b9:	cmp    rbx,rsi
   1400085bc:	jne    0x140008590
   1400085be:	mov    r8,QWORD PTR [r12]
   1400085c2:	movsxd rdx,DWORD PTR [rsp+0x58]
   1400085c7:	movsxd rcx,DWORD PTR [r8+0x8]
   1400085cb:	movsxd rax,DWORD PTR [r8+0xc]
   1400085cf:	lea    rdi,[r14+rdx*8]
   1400085d3:	add    rcx,rdx
   1400085d6:	lea    rsi,[r8+rax*8+0x10]
   1400085db:	add    rcx,r13
   1400085de:	lea    rbx,[r8+rcx*8+0x10]
   1400085e3:	cmp    rbx,rsi
   1400085e6:	je     0x14000861e
   1400085e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400085f0:	mov    ecx,0x70
   1400085f5:	call   0x14001e1c6
   1400085fa:	test   rax,rax
   1400085fd:	je     0x14000860c
   1400085ff:	mov    rdx,QWORD PTR [rdi]
   140008602:	mov    rcx,rax
   140008605:	call   0x140003ce0
   14000860a:	jmp    0x14000860e
   14000860c:	xor    eax,eax
   14000860e:	mov    QWORD PTR [rbx],rax
   140008611:	add    rbx,0x8
   140008615:	add    rdi,0x8
   140008619:	cmp    rbx,rsi
   14000861c:	jne    0x1400085f0
   14000861e:	mov    eax,DWORD PTR [rbp+0x0]
   140008621:	test   eax,eax
   140008623:	je     0x140008636
   140008625:	cmp    eax,0xffffffff
   140008628:	je     0x140008641
   14000862a:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000862f:	setne  al
   140008632:	test   al,al
   140008634:	jne    0x140008641
   140008636:	mov    rdx,rbp
   140008639:	mov    rcx,r12
   14000863c:	call   0x1400064d0
   140008641:	mov    rdx,QWORD PTR [r12]
   140008645:	movsxd rax,DWORD PTR [rsp+0x58]
   14000864a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000864f:	movsxd rcx,DWORD PTR [rdx+0x8]
   140008653:	mov    rbp,QWORD PTR [rsp+0x60]
   140008658:	add    rcx,rax
   14000865b:	lea    rax,[rdx+rcx*8+0x10]
   140008660:	add    rsp,0x20
   140008664:	pop    r14
   140008666:	pop    r13
   140008668:	pop    r12
   14000866a:	pop    rdi
   14000866b:	pop    rsi
   14000866c:	ret    
   14000866d:	int3   
   14000866e:	int3   
   14000866f:	int3   
   140008670:	mov    QWORD PTR [rsp+0x8],rbx
   140008675:	mov    QWORD PTR [rsp+0x18],rbp
   14000867a:	mov    QWORD PTR [rsp+0x20],rsi
   14000867f:	mov    DWORD PTR [rsp+0x10],edx
   140008683:	push   rdi
   140008684:	sub    rsp,0x20
   140008688:	mov    rdx,QWORD PTR [rcx]
   14000868b:	movsxd rdi,r8d
   14000868e:	mov    rbp,rcx
   140008691:	movsxd rax,DWORD PTR [rdx+0x8]
   140008695:	mov    r8d,edi
   140008698:	lea    rbx,[rdx+rax*8+0x10]
   14000869d:	lea    rdx,[rsp+0x38]
   1400086a2:	call   QWORD PTR [rip+0x16e00]        # 0x14001f4a8
   1400086a8:	mov    r10,QWORD PTR [rbp+0x0]
   1400086ac:	movsxd rdx,DWORD PTR [rsp+0x38]
   1400086b1:	movsxd r9,DWORD PTR [r10+0x8]
   1400086b5:	mov    rcx,rbp
   1400086b8:	mov    rsi,rax
   1400086bb:	add    rdx,r9
   1400086be:	lea    r8,[r10+rdx*8+0x10]
   1400086c3:	lea    rdx,[r10+r9*8+0x10]
   1400086c8:	mov    r9,rbx
   1400086cb:	call   0x140004b00
   1400086d0:	mov    rdx,QWORD PTR [rbp+0x0]
   1400086d4:	movsxd r11,DWORD PTR [rsp+0x38]
   1400086d9:	movsxd rcx,DWORD PTR [rdx+0xc]
   1400086dd:	lea    r9,[rbx+r11*8]
   1400086e1:	lea    r8,[rdx+rcx*8+0x10]
   1400086e6:	movsxd rcx,DWORD PTR [rdx+0x8]
   1400086ea:	add    rcx,r11
   1400086ed:	add    rcx,rdi
   1400086f0:	lea    rdx,[rdx+rcx*8+0x10]
   1400086f5:	mov    rcx,rbp
   1400086f8:	call   0x140004b00
   1400086fd:	mov    r11d,DWORD PTR [rsi]
   140008700:	test   r11d,r11d
   140008703:	je     0x140008716
   140008705:	cmp    r11d,0xffffffff
   140008709:	je     0x140008721
   14000870b:	lock add DWORD PTR [rsi],0xffffffff
   14000870f:	setne  al
   140008712:	test   al,al
   140008714:	jne    0x140008721
   140008716:	mov    rdx,rsi
   140008719:	mov    rcx,rbp
   14000871c:	call   0x1400065a0
   140008721:	mov    rdx,QWORD PTR [rbp+0x0]
   140008725:	movsxd rax,DWORD PTR [rsp+0x38]
   14000872a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000872f:	movsxd rcx,DWORD PTR [rdx+0x8]
   140008733:	mov    rbp,QWORD PTR [rsp+0x40]
   140008738:	mov    rsi,QWORD PTR [rsp+0x48]
   14000873d:	add    rcx,rax
   140008740:	lea    rax,[rdx+rcx*8+0x10]
   140008745:	add    rsp,0x20
   140008749:	pop    rdi
   14000874a:	ret    
   14000874b:	int3   
   14000874c:	int3   
   14000874d:	int3   
   14000874e:	int3   
   14000874f:	int3   
   140008750:	mov    QWORD PTR [rsp+0x8],rbx
   140008755:	mov    QWORD PTR [rsp+0x10],rbp
   14000875a:	mov    QWORD PTR [rsp+0x18],rsi
   14000875f:	push   rdi
   140008760:	sub    rsp,0x20
   140008764:	mov    rsi,rdx
   140008767:	mov    rbp,rcx
   14000876a:	call   QWORD PTR [rip+0x16e68]        # 0x14001f5d8
   140008770:	lea    rdx,[rsi+0x8]
   140008774:	lea    rcx,[rbp+0x8]
   140008778:	call   QWORD PTR [rip+0x16e5a]        # 0x14001f5d8
   14000877e:	lea    rdx,[rsi+0x10]
   140008782:	lea    rcx,[rbp+0x10]
   140008786:	call   0x140003e00
   14000878b:	lea    rdx,[rsi+0x18]
   14000878f:	lea    rcx,[rbp+0x18]
   140008793:	call   0x140006620
   140008798:	movzx  r11d,BYTE PTR [rsi+0x20]
   14000879d:	lea    rdx,[rsi+0x28]
   1400087a1:	mov    BYTE PTR [rbp+0x20],r11b
   1400087a5:	movzx  eax,BYTE PTR [rsi+0x21]
   1400087a9:	lea    rcx,[rbp+0x28]
   1400087ad:	mov    BYTE PTR [rbp+0x21],al
   1400087b0:	call   QWORD PTR [rip+0x16e22]        # 0x14001f5d8
   1400087b6:	lea    rdx,[rsi+0x30]
   1400087ba:	lea    rcx,[rbp+0x30]
   1400087be:	call   0x140003860
   1400087c3:	lea    rdx,[rsi+0x38]
   1400087c7:	lea    rcx,[rbp+0x38]
   1400087cb:	call   QWORD PTR [rip+0x169df]        # 0x14001f1b0
   1400087d1:	lea    rdx,[rsi+0x40]
   1400087d5:	lea    rcx,[rbp+0x40]
   1400087d9:	call   0x1400082e0
   1400087de:	lea    rdx,[rsi+0x48]
   1400087e2:	lea    rcx,[rbp+0x48]
   1400087e6:	call   0x1400082e0
   1400087eb:	lea    rdx,[rsi+0x50]
   1400087ef:	lea    rcx,[rbp+0x50]
   1400087f3:	call   0x1400082e0
   1400087f8:	lea    rdx,[rsi+0x58]
   1400087fc:	lea    rcx,[rbp+0x58]
   140008800:	call   0x1400082e0
   140008805:	lea    rdx,[rsi+0x60]
   140008809:	lea    rcx,[rbp+0x60]
   14000880d:	call   0x1400082e0
   140008812:	mov    r11d,DWORD PTR [rsi+0x68]
   140008816:	lea    rdx,[rsi+0x70]
   14000881a:	lea    rcx,[rbp+0x70]
   14000881e:	mov    DWORD PTR [rbp+0x68],r11d
   140008822:	call   0x140003e80
   140008827:	lea    rdx,[rsi+0x78]
   14000882b:	lea    rcx,[rbp+0x78]
   14000882f:	call   0x140003fc0
   140008834:	lea    rdx,[rsi+0x80]
   14000883b:	lea    rcx,[rbp+0x80]
   140008842:	call   0x140004040
   140008847:	lea    rdx,[rsi+0x88]
   14000884e:	lea    rcx,[rbp+0x88]
   140008855:	call   0x1400066d0
   14000885a:	lea    rdx,[rsi+0x90]
   140008861:	lea    rcx,[rbp+0x90]
   140008868:	call   0x1400040d0
   14000886d:	mov    r11d,DWORD PTR [rsi+0x98]
   140008874:	mov    rbx,QWORD PTR [rsp+0x30]
   140008879:	mov    DWORD PTR [rbp+0x98],r11d
   140008880:	mov    eax,DWORD PTR [rsi+0x9c]
   140008886:	mov    DWORD PTR [rbp+0x9c],eax
   14000888c:	mov    eax,DWORD PTR [rsi+0xa0]
   140008892:	mov    DWORD PTR [rbp+0xa0],eax
   140008898:	mov    eax,DWORD PTR [rsi+0xa4]
   14000889e:	mov    rsi,QWORD PTR [rsp+0x40]
   1400088a3:	mov    DWORD PTR [rbp+0xa4],eax
   1400088a9:	mov    rax,rbp
   1400088ac:	mov    rbp,QWORD PTR [rsp+0x38]
   1400088b1:	add    rsp,0x20
   1400088b5:	pop    rdi
   1400088b6:	ret    
   1400088b7:	int3   
   1400088b8:	int3   
   1400088b9:	int3   
   1400088ba:	int3   
   1400088bb:	int3   
   1400088bc:	int3   
   1400088bd:	int3   
   1400088be:	int3   
   1400088bf:	int3   
   1400088c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400088c5:	push   rdi
   1400088c6:	sub    rsp,0x20
   1400088ca:	mov    rdi,rcx
   1400088cd:	call   QWORD PTR [rip+0x16ced]        # 0x14001f5c0
   1400088d3:	lea    rcx,[rdi+0x8]
   1400088d7:	call   QWORD PTR [rip+0x16ce3]        # 0x14001f5c0
   1400088dd:	mov    r11,QWORD PTR [rip+0x16c64]        # 0x14001f548
   1400088e4:	lea    rcx,[rdi+0x28]
   1400088e8:	mov    QWORD PTR [rdi+0x10],r11
   1400088ec:	mov    rax,QWORD PTR [rip+0x16c55]        # 0x14001f548
   1400088f3:	mov    QWORD PTR [rdi+0x18],rax
   1400088f7:	mov    BYTE PTR [rdi+0x20],0x0
   1400088fb:	mov    BYTE PTR [rdi+0x21],0x0
   1400088ff:	call   QWORD PTR [rip+0x16cbb]        # 0x14001f5c0
   140008905:	mov    r11,QWORD PTR [rip+0x16c34]        # 0x14001f540
   14000890c:	lea    rcx,[rdi+0x38]
   140008910:	mov    QWORD PTR [rdi+0x30],r11
   140008914:	call   QWORD PTR [rip+0x1689e]        # 0x14001f1b8
   14000891a:	mov    r11,QWORD PTR [rip+0x16c27]        # 0x14001f548
   140008921:	mov    rbx,QWORD PTR [rsp+0x30]
   140008926:	mov    QWORD PTR [rdi+0x40],r11
   14000892a:	mov    rax,QWORD PTR [rip+0x16c17]        # 0x14001f548
   140008931:	mov    QWORD PTR [rdi+0x48],rax
   140008935:	mov    rax,QWORD PTR [rip+0x16c0c]        # 0x14001f548
   14000893c:	xor    ecx,ecx
   14000893e:	mov    QWORD PTR [rdi+0x50],rax
   140008942:	mov    rax,QWORD PTR [rip+0x16bff]        # 0x14001f548
   140008949:	mov    QWORD PTR [rdi+0x58],rax
   14000894d:	mov    rax,QWORD PTR [rip+0x16bf4]        # 0x14001f548
   140008954:	mov    QWORD PTR [rdi+0x60],rax
   140008958:	mov    DWORD PTR [rdi+0x68],ecx
   14000895b:	mov    rax,QWORD PTR [rip+0x16be6]        # 0x14001f548
   140008962:	mov    QWORD PTR [rdi+0x70],rax
   140008966:	mov    rax,QWORD PTR [rip+0x16bdb]        # 0x14001f548
   14000896d:	mov    QWORD PTR [rdi+0x78],rax
   140008971:	mov    rax,QWORD PTR [rip+0x16bc8]        # 0x14001f540
   140008978:	mov    QWORD PTR [rdi+0x80],rax
   14000897f:	mov    rax,QWORD PTR [rip+0x16bc2]        # 0x14001f548
   140008986:	mov    QWORD PTR [rdi+0x88],rax
   14000898d:	mov    rax,QWORD PTR [rip+0x16bac]        # 0x14001f540
   140008994:	mov    QWORD PTR [rdi+0x90],rax
   14000899b:	mov    DWORD PTR [rdi+0x98],ecx
   1400089a1:	mov    DWORD PTR [rdi+0x9c],ecx
   1400089a7:	mov    DWORD PTR [rdi+0xa0],ecx
   1400089ad:	mov    DWORD PTR [rdi+0xa4],ecx
   1400089b3:	mov    rax,rdi
   1400089b6:	add    rsp,0x20
   1400089ba:	pop    rdi
   1400089bb:	ret    
   1400089bc:	int3   
   1400089bd:	int3   
   1400089be:	int3   
   1400089bf:	int3   
   1400089c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400089c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400089ca:	push   rdi
   1400089cb:	sub    rsp,0x20
   1400089cf:	mov    rbx,rcx
   1400089d2:	mov    rcx,QWORD PTR [rcx+0x90]
   1400089d9:	mov    eax,DWORD PTR [rcx]
   1400089db:	test   eax,eax
   1400089dd:	je     0x1400089ef
   1400089df:	cmp    eax,0xffffffff
   1400089e2:	je     0x1400089fb
   1400089e4:	lock add DWORD PTR [rcx],0xffffffff
   1400089e8:	setne  al
   1400089eb:	test   al,al
   1400089ed:	jne    0x1400089fb
   1400089ef:	mov    rcx,QWORD PTR [rbx+0x90]
   1400089f6:	call   0x140002cb0
   1400089fb:	lea    rcx,[rbx+0x88]
   140008a02:	mov    rdx,QWORD PTR [rcx]
   140008a05:	mov    eax,DWORD PTR [rdx]
   140008a07:	test   eax,eax
   140008a09:	je     0x140008a1b
   140008a0b:	cmp    eax,0xffffffff
   140008a0e:	je     0x140008a23
   140008a10:	lock add DWORD PTR [rdx],0xffffffff
   140008a14:	setne  al
   140008a17:	test   al,al
   140008a19:	jne    0x140008a23
   140008a1b:	mov    rdx,QWORD PTR [rcx]
   140008a1e:	call   0x1400065a0
   140008a23:	mov    rcx,QWORD PTR [rbx+0x80]
   140008a2a:	mov    eax,DWORD PTR [rcx]
   140008a2c:	test   eax,eax
   140008a2e:	je     0x140008a40
   140008a30:	cmp    eax,0xffffffff
   140008a33:	je     0x140008a4c
   140008a35:	lock add DWORD PTR [rcx],0xffffffff
   140008a39:	setne  al
   140008a3c:	test   al,al
   140008a3e:	jne    0x140008a4c
   140008a40:	mov    rcx,QWORD PTR [rbx+0x80]
   140008a47:	call   0x140002c40
   140008a4c:	mov    rdx,QWORD PTR [rbx+0x78]
   140008a50:	lea    rcx,[rbx+0x78]
   140008a54:	mov    eax,DWORD PTR [rdx]
   140008a56:	test   eax,eax
   140008a58:	je     0x140008a6a
   140008a5a:	cmp    eax,0xffffffff
   140008a5d:	je     0x140008a72
   140008a5f:	lock add DWORD PTR [rdx],0xffffffff
   140008a63:	setne  al
   140008a66:	test   al,al
   140008a68:	jne    0x140008a72
   140008a6a:	mov    rdx,QWORD PTR [rcx]
   140008a6d:	call   0x1400022f0
   140008a72:	mov    rdx,QWORD PTR [rbx+0x70]
   140008a76:	lea    rcx,[rbx+0x70]
   140008a7a:	mov    eax,DWORD PTR [rdx]
   140008a7c:	test   eax,eax
   140008a7e:	je     0x140008a90
   140008a80:	cmp    eax,0xffffffff
   140008a83:	je     0x140008a98
   140008a85:	lock add DWORD PTR [rdx],0xffffffff
   140008a89:	setne  al
   140008a8c:	test   al,al
   140008a8e:	jne    0x140008a98
   140008a90:	mov    rdx,QWORD PTR [rcx]
   140008a93:	call   0x140002280
   140008a98:	mov    rdx,QWORD PTR [rbx+0x60]
   140008a9c:	lea    rcx,[rbx+0x60]
   140008aa0:	mov    eax,DWORD PTR [rdx]
   140008aa2:	test   eax,eax
   140008aa4:	je     0x140008ab6
   140008aa6:	cmp    eax,0xffffffff
   140008aa9:	je     0x140008abe
   140008aab:	lock add DWORD PTR [rdx],0xffffffff
   140008aaf:	setne  al
   140008ab2:	test   al,al
   140008ab4:	jne    0x140008abe
   140008ab6:	mov    rdx,QWORD PTR [rcx]
   140008ab9:	call   0x1400064d0
   140008abe:	mov    rdx,QWORD PTR [rbx+0x58]
   140008ac2:	lea    rcx,[rbx+0x58]
   140008ac6:	mov    eax,DWORD PTR [rdx]
   140008ac8:	test   eax,eax
   140008aca:	je     0x140008adc
   140008acc:	cmp    eax,0xffffffff
   140008acf:	je     0x140008ae4
   140008ad1:	lock add DWORD PTR [rdx],0xffffffff
   140008ad5:	setne  al
   140008ad8:	test   al,al
   140008ada:	jne    0x140008ae4
   140008adc:	mov    rdx,QWORD PTR [rcx]
   140008adf:	call   0x1400064d0
   140008ae4:	mov    rdx,QWORD PTR [rbx+0x50]
   140008ae8:	lea    rcx,[rbx+0x50]
   140008aec:	mov    eax,DWORD PTR [rdx]
   140008aee:	test   eax,eax
   140008af0:	je     0x140008b02
   140008af2:	cmp    eax,0xffffffff
   140008af5:	je     0x140008b0a
   140008af7:	lock add DWORD PTR [rdx],0xffffffff
   140008afb:	setne  al
   140008afe:	test   al,al
   140008b00:	jne    0x140008b0a
   140008b02:	mov    rdx,QWORD PTR [rcx]
   140008b05:	call   0x1400064d0
   140008b0a:	mov    rdx,QWORD PTR [rbx+0x48]
   140008b0e:	lea    rcx,[rbx+0x48]
   140008b12:	mov    eax,DWORD PTR [rdx]
   140008b14:	test   eax,eax
   140008b16:	je     0x140008b28
   140008b18:	cmp    eax,0xffffffff
   140008b1b:	je     0x140008b30
   140008b1d:	lock add DWORD PTR [rdx],0xffffffff
   140008b21:	setne  al
   140008b24:	test   al,al
   140008b26:	jne    0x140008b30
   140008b28:	mov    rdx,QWORD PTR [rcx]
   140008b2b:	call   0x1400064d0
   140008b30:	mov    rdx,QWORD PTR [rbx+0x40]
   140008b34:	lea    rcx,[rbx+0x40]
   140008b38:	mov    eax,DWORD PTR [rdx]
   140008b3a:	test   eax,eax
   140008b3c:	je     0x140008b4e
   140008b3e:	cmp    eax,0xffffffff
   140008b41:	je     0x140008b56
   140008b43:	lock add DWORD PTR [rdx],0xffffffff
   140008b47:	setne  al
   140008b4a:	test   al,al
   140008b4c:	jne    0x140008b56
   140008b4e:	mov    rdx,QWORD PTR [rcx]
   140008b51:	call   0x1400064d0
   140008b56:	lea    rcx,[rbx+0x38]
   140008b5a:	call   QWORD PTR [rip+0x16660]        # 0x14001f1c0
   140008b60:	mov    rcx,QWORD PTR [rbx+0x30]
   140008b64:	mov    eax,DWORD PTR [rcx]
   140008b66:	test   eax,eax
   140008b68:	je     0x140008b7a
   140008b6a:	cmp    eax,0xffffffff
   140008b6d:	je     0x140008b83
   140008b6f:	lock add DWORD PTR [rcx],0xffffffff
   140008b73:	setne  al
   140008b76:	test   al,al
   140008b78:	jne    0x140008b83
   140008b7a:	mov    rcx,QWORD PTR [rbx+0x30]
   140008b7e:	call   0x140002bd0
   140008b83:	lea    rcx,[rbx+0x28]
   140008b87:	call   QWORD PTR [rip+0x16a2b]        # 0x14001f5b8
   140008b8d:	mov    rdx,QWORD PTR [rbx+0x18]
   140008b91:	lea    rcx,[rbx+0x18]
   140008b95:	mov    eax,DWORD PTR [rdx]
   140008b97:	test   eax,eax
   140008b99:	je     0x140008bab
   140008b9b:	cmp    eax,0xffffffff
   140008b9e:	je     0x140008bb3
   140008ba0:	lock add DWORD PTR [rdx],0xffffffff
   140008ba4:	setne  al
   140008ba7:	test   al,al
   140008ba9:	jne    0x140008bb3
   140008bab:	mov    rdx,QWORD PTR [rcx]
   140008bae:	call   0x140004a80
   140008bb3:	mov    rax,QWORD PTR [rbx+0x10]
   140008bb7:	lea    rcx,[rbx+0x10]
   140008bbb:	mov    edx,DWORD PTR [rax]
   140008bbd:	test   edx,edx
   140008bbf:	je     0x140008bd1
   140008bc1:	cmp    edx,0xffffffff
   140008bc4:	je     0x140008bd9
   140008bc6:	lock add DWORD PTR [rax],0xffffffff
   140008bca:	setne  al
   140008bcd:	test   al,al
   140008bcf:	jne    0x140008bd9
   140008bd1:	mov    rdx,QWORD PTR [rcx]
   140008bd4:	call   0x140002480
   140008bd9:	lea    rcx,[rbx+0x8]
   140008bdd:	call   QWORD PTR [rip+0x169d5]        # 0x14001f5b8
   140008be3:	mov    rcx,rbx
   140008be6:	mov    rbx,QWORD PTR [rsp+0x30]
   140008beb:	mov    rsi,QWORD PTR [rsp+0x38]
   140008bf0:	add    rsp,0x20
   140008bf4:	pop    rdi
   140008bf5:	rex.W jmp QWORD PTR [rip+0x169bc]        # 0x14001f5b8
   140008bfc:	int3   
   140008bfd:	int3   
   140008bfe:	int3   
   140008bff:	int3   
   140008c00:	mov    QWORD PTR [rsp+0x10],rbx
   140008c05:	push   rbp
   140008c06:	push   rsi
   140008c07:	push   rdi
   140008c08:	sub    rsp,0x90
   140008c0f:	mov    r9,QWORD PTR [rcx]
   140008c12:	mov    rdi,rcx
   140008c15:	movsxd rcx,DWORD PTR [rcx+0x8]
   140008c19:	cmp    ecx,DWORD PTR [r9+0x4]
   140008c1d:	mov    rbp,rdx
   140008c20:	jge    0x140008c3e
   140008c22:	mov    rax,QWORD PTR [r9+0x10]
   140008c26:	lea    r8,[rcx+rcx*2]
   140008c2a:	lea    r8,[rax+r8*8]
   140008c2e:	cmp    DWORD PTR [r8+r9*1+0x4],0x9
   140008c34:	jne    0x140008c3e
   140008c36:	lea    eax,[rcx+0x1]
   140008c39:	mov    DWORD PTR [rdi+0x8],eax
   140008c3c:	jmp    0x140008c48
   140008c3e:	xor    edx,edx
   140008c40:	mov    rcx,rdi
   140008c43:	call   0x140019c50
   140008c48:	lea    rcx,[rsp+0xc0]
   140008c50:	call   QWORD PTR [rip+0x1696a]        # 0x14001f5c0
   140008c56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008c60:	mov    r9,QWORD PTR [rdi]
   140008c63:	movsxd rdx,DWORD PTR [rdi+0x8]
   140008c67:	cmp    edx,DWORD PTR [r9+0x4]
   140008c6b:	jge    0x14000912e
   140008c71:	mov    rax,QWORD PTR [r9+0x10]
   140008c75:	lea    rcx,[rdx+rdx*2]
   140008c79:	lea    rcx,[rax+rcx*8]
   140008c7d:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   140008c83:	jne    0x14000912e
   140008c89:	lea    eax,[rdx+0x1]
   140008c8c:	mov    DWORD PTR [rdi+0x8],eax
   140008c8f:	dec    eax
   140008c91:	movsxd rcx,eax
   140008c94:	mov    rax,QWORD PTR [r9+0x10]
   140008c98:	lea    rdx,[rcx+rcx*2]
   140008c9c:	lea    r8,[rax+rdx*8]
   140008ca0:	lea    rdx,[rsp+0x28]
   140008ca5:	add    r8,r9
   140008ca8:	mov    r9d,DWORD PTR [r8+0x14]
   140008cac:	lea    rcx,[r8+0x8]
   140008cb0:	mov    r8d,DWORD PTR [r8+0x10]
   140008cb4:	call   QWORD PTR [rip+0x16916]        # 0x14001f5d0
   140008cba:	lea    rdx,[rip+0x16e07]        # 0x14001fac8
   140008cc1:	lea    rcx,[rsp+0x28]
   140008cc6:	call   QWORD PTR [rip+0x16924]        # 0x14001f5f0
   140008ccc:	test   eax,eax
   140008cce:	jne    0x140008d60
   140008cd4:	mov    r8,QWORD PTR [rdi]
   140008cd7:	movsxd rdx,DWORD PTR [rdi+0x8]
   140008cdb:	cmp    edx,DWORD PTR [r8+0x4]
   140008cdf:	jge    0x140008cfd
   140008ce1:	mov    rax,QWORD PTR [r8+0x10]
   140008ce5:	lea    rcx,[rdx+rdx*2]
   140008ce9:	lea    rcx,[rax+rcx*8]
   140008ced:	cmp    DWORD PTR [rcx+r8*1+0x4],0x4
   140008cf3:	jne    0x140008cfd
   140008cf5:	lea    eax,[rdx+0x1]
   140008cf8:	mov    DWORD PTR [rdi+0x8],eax
   140008cfb:	jmp    0x140008d07
   140008cfd:	xor    edx,edx
   140008cff:	mov    rcx,rdi
   140008d02:	call   0x140019c50
   140008d07:	mov    rdx,QWORD PTR [rdi]
   140008d0a:	mov    eax,DWORD PTR [rdi+0x8]
   140008d0d:	dec    eax
   140008d0f:	cdqe   
   140008d11:	lea    rcx,[rax+rax*2]
   140008d15:	mov    rax,QWORD PTR [rdx+0x10]
   140008d19:	lea    rcx,[rax+rcx*8]
   140008d1d:	add    rcx,rdx
   140008d20:	lea    rdx,[rsp+0xc8]
   140008d28:	mov    r9d,DWORD PTR [rcx+0x14]
   140008d2c:	mov    r8d,DWORD PTR [rcx+0x10]
   140008d30:	add    rcx,0x8
   140008d34:	sub    r9d,0x2
   140008d38:	inc    r8d
   140008d3b:	call   QWORD PTR [rip+0x1688f]        # 0x14001f5d0
   140008d41:	lea    rcx,[rbp+0x28]
   140008d45:	lea    rdx,[rsp+0xc8]
   140008d4d:	call   QWORD PTR [rip+0x16805]        # 0x14001f558
   140008d53:	lea    rcx,[rsp+0xc8]
   140008d5b:	jmp    0x140009042
   140008d60:	lea    rdx,[rip+0x16d59]        # 0x14001fac0
   140008d67:	lea    rcx,[rsp+0x28]
   140008d6c:	call   QWORD PTR [rip+0x1687e]        # 0x14001f5f0
   140008d72:	test   eax,eax
   140008d74:	jne    0x140009048
   140008d7a:	mov    r8,QWORD PTR [rdi]
   140008d7d:	movsxd rdx,DWORD PTR [rdi+0x8]
   140008d81:	cmp    edx,DWORD PTR [r8+0x4]
   140008d85:	jge    0x140008da3
   140008d87:	mov    rax,QWORD PTR [r8+0x10]
   140008d8b:	lea    rcx,[rdx+rdx*2]
   140008d8f:	lea    rcx,[rax+rcx*8]
   140008d93:	cmp    DWORD PTR [rcx+r8*1+0x4],0x4
   140008d99:	jne    0x140008da3
   140008d9b:	lea    eax,[rdx+0x1]
   140008d9e:	mov    DWORD PTR [rdi+0x8],eax
   140008da1:	jmp    0x140008dad
   140008da3:	xor    edx,edx
   140008da5:	mov    rcx,rdi
   140008da8:	call   0x140019c50
   140008dad:	mov    rdx,QWORD PTR [rdi]
   140008db0:	mov    eax,DWORD PTR [rdi+0x8]
   140008db3:	dec    eax
   140008db5:	cdqe   
   140008db7:	lea    rcx,[rax+rax*2]
   140008dbb:	mov    rax,QWORD PTR [rdx+0x10]
   140008dbf:	lea    rcx,[rax+rcx*8]
   140008dc3:	add    rcx,rdx
   140008dc6:	lea    rdx,[rsp+0x30]
   140008dcb:	mov    r9d,DWORD PTR [rcx+0x14]
   140008dcf:	mov    r8d,DWORD PTR [rcx+0x10]
   140008dd3:	add    rcx,0x8
   140008dd7:	sub    r9d,0x2
   140008ddb:	inc    r8d
   140008dde:	call   QWORD PTR [rip+0x167ec]        # 0x14001f5d0
   140008de4:	lea    rcx,[rsp+0x30]
   140008de9:	call   QWORD PTR [rip+0x16809]        # 0x14001f5f8
   140008def:	lea    rcx,[rsp+0x38]
   140008df4:	or     r8d,0xffffffff
   140008df8:	mov    rdx,rax
   140008dfb:	call   QWORD PTR [rip+0x1649f]        # 0x14001f2a0
   140008e01:	lea    rcx,[rdi+0x18]
   140008e05:	mov    rbx,rax
   140008e08:	call   0x140008170
   140008e0d:	mov    rcx,rax
   140008e10:	call   QWORD PTR [rip+0x167e2]        # 0x14001f5f8
   140008e16:	lea    rcx,[rsp+0x68]
   140008e1b:	or     r8d,0xffffffff
   140008e1f:	mov    rdx,rax
   140008e22:	call   QWORD PTR [rip+0x16478]        # 0x14001f2a0
   140008e28:	lea    rcx,[rsp+0x48]
   140008e2d:	mov    rdx,rax
   140008e30:	call   QWORD PTR [rip+0x16462]        # 0x14001f298
   140008e36:	lea    rdx,[rsp+0x58]
   140008e3b:	mov    rcx,rax
   140008e3e:	call   QWORD PTR [rip+0x1644c]        # 0x14001f290
   140008e44:	lea    rcx,[rsp+0xb0]
   140008e4c:	mov    r8,rbx
   140008e4f:	mov    rdx,rax
   140008e52:	call   QWORD PTR [rip+0x16430]        # 0x14001f288
   140008e58:	lea    rcx,[rsp+0x58]
   140008e5d:	call   QWORD PTR [rip+0x1641d]        # 0x14001f280
   140008e63:	lea    rcx,[rsp+0x48]
   140008e68:	call   QWORD PTR [rip+0x1640a]        # 0x14001f278
   140008e6e:	lea    rcx,[rsp+0x68]
   140008e73:	call   QWORD PTR [rip+0x166af]        # 0x14001f528
   140008e79:	lea    rcx,[rsp+0x38]
   140008e7e:	call   QWORD PTR [rip+0x166a4]        # 0x14001f528
   140008e84:	mov    rax,QWORD PTR [rdi+0x10]
   140008e88:	xor    esi,esi
   140008e8a:	mov    ecx,DWORD PTR [rax+0xc]
   140008e8d:	xor    ebx,ebx
   140008e8f:	sub    ecx,DWORD PTR [rax+0x8]
   140008e92:	test   ecx,ecx
   140008e94:	jle    0x140008f9a
   140008e9a:	nop    WORD PTR [rax+rax*1+0x0]
   140008ea0:	lea    rcx,[rsp+0xb0]
   140008ea8:	call   QWORD PTR [rip+0x163c2]        # 0x14001f270
   140008eae:	test   al,al
   140008eb0:	jne    0x140008f9a
   140008eb6:	mov    rcx,QWORD PTR [rdi+0x10]
   140008eba:	movsxd rax,DWORD PTR [rcx+0x8]
   140008ebe:	add    rax,rbx
   140008ec1:	mov    rcx,QWORD PTR [rcx+rax*8+0x10]
   140008ec6:	cmp    BYTE PTR [rcx+0x8],0x0
   140008eca:	jne    0x140008f83
   140008ed0:	call   QWORD PTR [rip+0x16722]        # 0x14001f5f8
   140008ed6:	lea    rcx,[rsp+0x40]
   140008edb:	or     r8d,0xffffffff
   140008edf:	mov    rdx,rax
   140008ee2:	call   QWORD PTR [rip+0x163b8]        # 0x14001f2a0
   140008ee8:	lea    rcx,[rsp+0x20]
   140008eed:	mov    rdx,rax
   140008ef0:	call   QWORD PTR [rip+0x16372]        # 0x14001f268
   140008ef6:	lea    rcx,[rsp+0x30]
   140008efb:	call   QWORD PTR [rip+0x166f7]        # 0x14001f5f8
   140008f01:	lea    rcx,[rsp+0x78]
   140008f06:	or     r8d,0xffffffff
   140008f0a:	mov    rdx,rax
   140008f0d:	call   QWORD PTR [rip+0x1638d]        # 0x14001f2a0
   140008f13:	lea    rdx,[rsp+0x20]
   140008f18:	lea    rcx,[rsp+0xb0]
   140008f20:	mov    r8,rax
   140008f23:	call   QWORD PTR [rip+0x16337]        # 0x14001f260
   140008f29:	lea    rcx,[rsp+0x78]
   140008f2e:	call   QWORD PTR [rip+0x165f4]        # 0x14001f528
   140008f34:	lea    rcx,[rsp+0x20]
   140008f39:	call   QWORD PTR [rip+0x16341]        # 0x14001f280
   140008f3f:	lea    rcx,[rsp+0x40]
   140008f44:	call   QWORD PTR [rip+0x165de]        # 0x14001f528
   140008f4a:	lea    rcx,[rsp+0xb0]
   140008f52:	call   QWORD PTR [rip+0x16300]        # 0x14001f258
   140008f58:	test   al,al
   140008f5a:	je     0x140008f83
   140008f5c:	lea    rcx,[rsp+0x50]
   140008f61:	call   QWORD PTR [rip+0x162e9]        # 0x14001f250
   140008f67:	lea    rcx,[rsp+0xb0]
   140008f6f:	mov    rdx,rax
   140008f72:	call   QWORD PTR [rip+0x162d0]        # 0x14001f248
   140008f78:	lea    rcx,[rsp+0x50]
   140008f7d:	call   QWORD PTR [rip+0x162f5]        # 0x14001f278
   140008f83:	mov    rax,QWORD PTR [rdi+0x10]
   140008f87:	inc    esi
   140008f89:	inc    rbx
   140008f8c:	mov    ecx,DWORD PTR [rax+0xc]
   140008f8f:	sub    ecx,DWORD PTR [rax+0x8]
   140008f92:	cmp    esi,ecx
   140008f94:	jl     0x140008ea0
   140008f9a:	lea    rcx,[rsp+0xb0]
   140008fa2:	call   QWORD PTR [rip+0x162c8]        # 0x14001f270
   140008fa8:	test   al,al
   140008faa:	je     0x140009058
   140008fb0:	lea    rdx,[rsp+0x60]
   140008fb5:	lea    rcx,[rsp+0xb0]
   140008fbd:	call   QWORD PTR [rip+0x1627d]        # 0x14001f240
   140008fc3:	lea    rcx,[rsp+0x80]
   140008fcb:	mov    rdx,rax
   140008fce:	call   QWORD PTR [rip+0x16264]        # 0x14001f238
   140008fd4:	lea    rcx,[rsp+0x60]
   140008fd9:	call   QWORD PTR [rip+0x16549]        # 0x14001f528
   140008fdf:	lea    rcx,[rsp+0x80]
   140008fe7:	mov    edx,0x1
   140008fec:	call   QWORD PTR [rip+0x1623e]        # 0x14001f230
   140008ff2:	lea    rdx,[rsp+0x70]
   140008ff7:	lea    rcx,[rsp+0x80]
   140008fff:	call   QWORD PTR [rip+0x16223]        # 0x14001f228
   140009005:	lea    rcx,[rsp+0xc0]
   14000900d:	mov    rdx,rax
   140009010:	call   QWORD PTR [rip+0x16542]        # 0x14001f558
   140009016:	lea    rcx,[rsp+0x70]
   14000901b:	call   QWORD PTR [rip+0x16597]        # 0x14001f5b8
   140009021:	lea    rcx,[rsp+0x80]
   140009029:	call   QWORD PTR [rip+0x161f1]        # 0x14001f220
   14000902f:	lea    rcx,[rsp+0xb0]
   140009037:	call   QWORD PTR [rip+0x1623b]        # 0x14001f278
   14000903d:	lea    rcx,[rsp+0x30]
   140009042:	call   QWORD PTR [rip+0x16570]        # 0x14001f5b8
   140009048:	lea    rcx,[rsp+0x28]
   14000904d:	call   QWORD PTR [rip+0x16565]        # 0x14001f5b8
   140009053:	jmp    0x140008c60
   140009058:	lea    rcx,[rsp+0xc8]
   140009060:	call   QWORD PTR [rip+0x1655a]        # 0x14001f5c0
   140009066:	lea    rdx,[rip+0x16a3b]        # 0x14001faa8
   14000906d:	lea    rcx,[rsp+0xc8]
   140009075:	call   QWORD PTR [rip+0x16505]        # 0x14001f580
   14000907b:	mov    r11,QWORD PTR [rdi]
   14000907e:	mov    eax,DWORD PTR [rdi+0x8]
   140009081:	dec    eax
   140009083:	cdqe   
   140009085:	lea    rcx,[rax+rax*2]
   140009089:	mov    rax,QWORD PTR [r11+0x10]
   14000908d:	lea    rdx,[rax+rcx*8]
   140009091:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   140009096:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   14000909b:	lea    rcx,[rdx+r11*1+0x8]
   1400090a0:	lea    rdx,[rsp+0x20]
   1400090a5:	call   QWORD PTR [rip+0x16525]        # 0x14001f5d0
   1400090ab:	lea    rdx,[rsp+0x20]
   1400090b0:	lea    rcx,[rsp+0xc8]
   1400090b8:	call   QWORD PTR [rip+0x16522]        # 0x14001f5e0
   1400090be:	lea    rcx,[rsp+0x20]
   1400090c3:	call   QWORD PTR [rip+0x164ef]        # 0x14001f5b8
   1400090c9:	lea    rdx,[rip+0x169a8]        # 0x14001fa78
   1400090d0:	lea    rcx,[rsp+0xc8]
   1400090d8:	call   QWORD PTR [rip+0x164a2]        # 0x14001f580
   1400090de:	lea    rcx,[rsp+0xc8]
   1400090e6:	call   QWORD PTR [rip+0x1650c]        # 0x14001f5f8
   1400090ec:	mov    rcx,rdi
   1400090ef:	mov    rdx,rax
   1400090f2:	call   0x140019c50
   1400090f7:	lea    rcx,[rsp+0xc8]
   1400090ff:	call   QWORD PTR [rip+0x164b3]        # 0x14001f5b8
   140009105:	lea    rcx,[rsp+0xb0]
   14000910d:	call   QWORD PTR [rip+0x16165]        # 0x14001f278
   140009113:	lea    rcx,[rsp+0x30]
   140009118:	call   QWORD PTR [rip+0x1649a]        # 0x14001f5b8
   14000911e:	lea    rcx,[rsp+0x28]
   140009123:	call   QWORD PTR [rip+0x1648f]        # 0x14001f5b8
   140009129:	jmp    0x14000929e
   14000912e:	mov    rax,QWORD PTR [rsp+0xc0]
   140009136:	cmp    DWORD PTR [rax+0x4],0x0
   14000913a:	je     0x140009267
   140009140:	lea    rdx,[rsp+0xc0]
   140009148:	lea    rcx,[rsp+0xb0]
   140009150:	xor    r8d,r8d
   140009153:	call   QWORD PTR [rip+0x160bf]        # 0x14001f218
   140009159:	lea    rcx,[rbp+0x38]
   14000915d:	mov    rdx,rax
   140009160:	call   QWORD PTR [rip+0x160aa]        # 0x14001f210
   140009166:	lea    rcx,[rsp+0xb0]
   14000916e:	call   QWORD PTR [rip+0x1604c]        # 0x14001f1c0
   140009174:	lea    rcx,[rbp+0x38]
   140009178:	call   QWORD PTR [rip+0x1608a]        # 0x14001f208
   14000917e:	test   al,al
   140009180:	jne    0x140009267
   140009186:	lea    rcx,[rsp+0xb0]
   14000918e:	call   QWORD PTR [rip+0x1642c]        # 0x14001f5c0
   140009194:	lea    rdx,[rip+0x1690d]        # 0x14001faa8
   14000919b:	lea    rcx,[rsp+0xb0]
   1400091a3:	call   QWORD PTR [rip+0x163d7]        # 0x14001f580
   1400091a9:	mov    r11,QWORD PTR [rdi]
   1400091ac:	mov    eax,DWORD PTR [rdi+0x8]
   1400091af:	dec    eax
   1400091b1:	cdqe   
   1400091b3:	lea    rcx,[rax+rax*2]
   1400091b7:	mov    rax,QWORD PTR [r11+0x10]
   1400091bb:	lea    rdx,[rax+rcx*8]
   1400091bf:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   1400091c4:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   1400091c9:	lea    rcx,[rdx+r11*1+0x8]
   1400091ce:	lea    rdx,[rsp+0xc8]
   1400091d6:	call   QWORD PTR [rip+0x163f4]        # 0x14001f5d0
   1400091dc:	lea    rdx,[rsp+0xc8]
   1400091e4:	lea    rcx,[rsp+0xb0]
   1400091ec:	call   QWORD PTR [rip+0x163ee]        # 0x14001f5e0
   1400091f2:	lea    rcx,[rsp+0xc8]
   1400091fa:	call   QWORD PTR [rip+0x163b8]        # 0x14001f5b8
   140009200:	lea    rdx,[rip+0x16829]        # 0x14001fa30
   140009207:	lea    rcx,[rsp+0xb0]
   14000920f:	call   QWORD PTR [rip+0x1636b]        # 0x14001f580
   140009215:	lea    rcx,[rsp+0xb0]
   14000921d:	call   QWORD PTR [rip+0x163d5]        # 0x14001f5f8
   140009223:	mov    rcx,rdi
   140009226:	mov    rdx,rax
   140009229:	call   0x140019d80
   14000922e:	lea    rcx,[rsp+0xc8]
   140009236:	call   QWORD PTR [rip+0x16384]        # 0x14001f5c0
   14000923c:	lea    rcx,[rbp+0x28]
   140009240:	mov    rdx,rax
   140009243:	call   QWORD PTR [rip+0x1630f]        # 0x14001f558
   140009249:	lea    rcx,[rsp+0xc8]
   140009251:	call   QWORD PTR [rip+0x16361]        # 0x14001f5b8
   140009257:	lea    rcx,[rsp+0xb0]
   14000925f:	call   QWORD PTR [rip+0x16353]        # 0x14001f5b8
   140009265:	jmp    0x14000929e
   140009267:	mov    r8,QWORD PTR [rdi]
   14000926a:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000926e:	mov    BYTE PTR [rdi+0x29],0x1
   140009272:	cmp    edx,DWORD PTR [r8+0x4]
   140009276:	jge    0x140009294
   140009278:	mov    rax,QWORD PTR [r8+0x10]
   14000927c:	lea    rcx,[rdx+rdx*2]
   140009280:	lea    rcx,[rax+rcx*8]
   140009284:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa
   14000928a:	jne    0x140009294
   14000928c:	lea    eax,[rdx+0x1]
   14000928f:	mov    DWORD PTR [rdi+0x8],eax
   140009292:	jmp    0x14000929e
   140009294:	xor    edx,edx
   140009296:	mov    rcx,rdi
   140009299:	call   0x140019c50
   14000929e:	lea    rcx,[rsp+0xc0]
   1400092a6:	call   QWORD PTR [rip+0x1630c]        # 0x14001f5b8
   1400092ac:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400092b4:	add    rsp,0x90
   1400092bb:	pop    rdi
   1400092bc:	pop    rsi
   1400092bd:	pop    rbp
   1400092be:	ret    
   1400092bf:	int3   
   1400092c0:	rex push rbx
   1400092c2:	sub    rsp,0x20
   1400092c6:	mov    rbx,rcx
   1400092c9:	mov    rcx,QWORD PTR [rcx]
   1400092cc:	mov    eax,DWORD PTR [rcx]
   1400092ce:	cmp    eax,0x1
   1400092d1:	je     0x1400092e2
   1400092d3:	test   eax,eax
   1400092d5:	je     0x1400092e2
   1400092d7:	mov    edx,DWORD PTR [rcx+0x4]
   1400092da:	mov    rcx,rbx
   1400092dd:	call   0x1400037e0
   1400092e2:	mov    rcx,QWORD PTR [rbx]
   1400092e5:	movsxd rax,DWORD PTR [rcx+0x8]
   1400092e9:	mov    rax,QWORD PTR [rcx+rax*8+0x10]
   1400092ee:	add    rsp,0x20
   1400092f2:	pop    rbx
   1400092f3:	ret    
   1400092f4:	int3   
   1400092f5:	int3   
   1400092f6:	int3   
   1400092f7:	int3   
   1400092f8:	int3   
   1400092f9:	int3   
   1400092fa:	int3   
   1400092fb:	int3   
   1400092fc:	int3   
   1400092fd:	int3   
   1400092fe:	int3   
   1400092ff:	int3   
   140009300:	mov    QWORD PTR [rsp+0x8],rbx
   140009305:	push   rdi
   140009306:	sub    rsp,0x20
   14000930a:	mov    ecx,0xa8
   14000930f:	mov    rdi,r8
   140009312:	mov    rbx,rdx
   140009315:	call   0x14001e1c6
   14000931a:	test   rax,rax
   14000931d:	je     0x140009338
   14000931f:	mov    rdx,rdi
   140009322:	mov    rcx,rax
   140009325:	call   0x140008750
   14000932a:	mov    QWORD PTR [rbx],rax
   14000932d:	mov    rbx,QWORD PTR [rsp+0x30]
   140009332:	add    rsp,0x20
   140009336:	pop    rdi
   140009337:	ret    
   140009338:	mov    QWORD PTR [rbx],0x0
   14000933f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009344:	add    rsp,0x20
   140009348:	pop    rdi
   140009349:	ret    
   14000934a:	int3   
   14000934b:	int3   
   14000934c:	int3   
   14000934d:	int3   
   14000934e:	int3   
   14000934f:	int3   
   140009350:	rex push rbx
   140009352:	push   rbp
   140009353:	push   r13
   140009355:	sub    rsp,0x70
   140009359:	mov    r9,QWORD PTR [rcx]
   14000935c:	movsxd r11,DWORD PTR [rcx+0x8]
   140009360:	mov    r13,rdx
   140009363:	mov    r10d,DWORD PTR [r9+0x4]
   140009367:	mov    rbx,rcx
   14000936a:	xor    ebp,ebp
   14000936c:	lea    r8d,[r11-0x1]
   140009370:	cmp    r8d,r10d
   140009373:	jge    0x14000938b
   140009375:	movsxd rax,r8d
   140009378:	lea    rcx,[rax+rax*2]
   14000937c:	mov    rax,QWORD PTR [r9+0x10]
   140009380:	lea    rcx,[rax+rcx*8]
   140009384:	mov    eax,DWORD PTR [rcx+r9*1+0x4]
   140009389:	jmp    0x14000938d
   14000938b:	mov    eax,ebp
   14000938d:	inc    r8d
   140009390:	cmp    eax,0x13
   140009393:	je     0x1400093b0
   140009395:	cmp    eax,0xe
   140009398:	je     0x1400093b0
   14000939a:	cmp    eax,0x12
   14000939d:	je     0x140009482
   1400093a3:	cmp    eax,0x8
   1400093a6:	je     0x140009482
   1400093ac:	test   eax,eax
   1400093ae:	jne    0x140009370
   1400093b0:	cmp    r11d,r10d
   1400093b3:	jge    0x140009482
   1400093b9:	mov    rax,QWORD PTR [r9+0x10]
   1400093bd:	lea    rcx,[r11+r11*2]
   1400093c1:	lea    rcx,[rax+rcx*8]
   1400093c5:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   1400093cb:	jne    0x140009482
   1400093d1:	lea    eax,[r11+0x1]
   1400093d5:	mov    QWORD PTR [rsp+0x60],rdi
   1400093da:	mov    QWORD PTR [rsp+0x50],r14
   1400093df:	mov    DWORD PTR [rbx+0x8],eax
   1400093e2:	dec    eax
   1400093e4:	movsxd rcx,eax
   1400093e7:	mov    rax,QWORD PTR [r9+0x10]
   1400093eb:	lea    rdx,[rcx+rcx*2]
   1400093ef:	lea    r8,[rax+rdx*8]
   1400093f3:	lea    rdx,[rsp+0x90]
   1400093fb:	add    r8,r9
   1400093fe:	mov    r9d,DWORD PTR [r8+0x14]
   140009402:	lea    rcx,[r8+0x8]
   140009406:	mov    r8d,DWORD PTR [r8+0x10]
   14000940a:	call   QWORD PTR [rip+0x161c0]        # 0x14001f5d0
   140009410:	mov    r11,QWORD PTR [rbx]
   140009413:	movsxd rdx,DWORD PTR [rbx+0x8]
   140009417:	mov    r8d,DWORD PTR [r11+0x4]
   14000941b:	lea    r14,[rip+0xffffffffffff6bde]        # 0x140000000
   140009422:	cmp    edx,r8d
   140009425:	jge    0x1400095e0
   14000942b:	mov    rax,QWORD PTR [r11+0x10]
   14000942f:	lea    rcx,[rdx+rdx*2]
   140009433:	lea    rcx,[rax+rcx*8]
   140009437:	cmp    DWORD PTR [rcx+r11*1+0x4],0x9
   14000943d:	jne    0x1400095e0
   140009443:	lea    edi,[rdx+0x1]
   140009446:	mov    r10d,ebp
   140009449:	mov    r9d,ebp
   14000944c:	mov    DWORD PTR [rbx+0x8],edi
   14000944f:	mov    edx,ebp
   140009451:	test   edi,edi
   140009453:	je     0x14000949b
   140009455:	movsxd rax,edi
   140009458:	lea    rcx,[rax+rax*2]
   14000945c:	mov    rax,QWORD PTR [r11+0x10]
   140009460:	lea    rcx,[rax+rcx*8]
   140009464:	mov    eax,DWORD PTR [rcx+r11*1-0x14]
   140009469:	cmp    eax,0x7
   14000946c:	je     0x14000949b
   14000946e:	cmp    eax,0x9
   140009471:	je     0x140009495
   140009473:	cmp    eax,0xc
   140009476:	je     0x14000948d
   140009478:	cmp    eax,0xe
   14000947b:	jne    0x14000949b
   14000947d:	lea    edx,[rax-0xd]
   140009480:	jmp    0x14000949b
   140009482:	xor    al,al
   140009484:	add    rsp,0x70
   140009488:	pop    r13
   14000948a:	pop    rbp
   14000948b:	pop    rbx
   14000948c:	ret    
   14000948d:	mov    r10d,0x1
   140009493:	jmp    0x14000949b
   140009495:	mov    r9d,0x1
   14000949b:	cmp    edi,DWORD PTR [r11+0x4]
   14000949f:	jge    0x140009550
   1400094a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400094b0:	movsxd rax,edi
   1400094b3:	inc    edi
   1400094b5:	lea    rcx,[rax+rax*2]
   1400094b9:	mov    DWORD PTR [rbx+0x8],edi
   1400094bc:	mov    rax,QWORD PTR [r11+0x10]
   1400094c0:	lea    rcx,[rax+rcx*8]
   1400094c4:	mov    r8d,DWORD PTR [rcx+r11*1+0x4]
   1400094c9:	lea    eax,[r8-0x7]
   1400094cd:	cmp    eax,0x48
   1400094d0:	ja     0x1400094ec
   1400094d2:	cdqe   
   1400094d4:	movzx  eax,BYTE PTR [r14+rax*1+0x9e00]
   1400094dd:	mov    ecx,DWORD PTR [r14+rax*4+0x9ddc]
   1400094e5:	add    rcx,r14
   1400094e8:	jmp    rcx
   1400094ea:	inc    edx
   1400094ec:	cmp    r8d,0xa
   1400094f0:	jne    0x140009500
   1400094f2:	test   edx,edx
   1400094f4:	jg     0x140009500
   1400094f6:	test   r10d,r10d
   1400094f9:	jg     0x140009500
   1400094fb:	test   r9d,r9d
   1400094fe:	jle    0x140009550
   140009500:	test   edx,edx
   140009502:	js     0x14000954a
   140009504:	test   r10d,r10d
   140009507:	js     0x14000954a
   140009509:	test   r9d,r9d
   14000950c:	js     0x14000954a
   14000950e:	test   edx,edx
   140009510:	jg     0x140009518
   140009512:	cmp    r8d,0x12
   140009516:	je     0x140009550
   140009518:	cmp    edi,DWORD PTR [r11+0x4]
   14000951c:	mov    rax,r11
   14000951f:	jl     0x1400094b0
   140009521:	jmp    0x140009550
   140009523:	dec    edx
   140009525:	jmp    0x1400094ec
   140009527:	inc    r10d
   14000952a:	jmp    0x1400094ec
   14000952c:	dec    r10d
   14000952f:	jmp    0x1400094ec
   140009531:	inc    r9d
   140009534:	jmp    0x1400094ec
   140009536:	dec    r9d
   140009539:	jmp    0x1400094ec
   14000953b:	test   r9d,r9d
   14000953e:	jne    0x1400094ec
   140009540:	test   edx,edx
   140009542:	jne    0x1400094ec
   140009544:	lea    r8d,[r9+0x8]
   140009548:	jmp    0x140009504
   14000954a:	lea    eax,[rdi-0x1]
   14000954d:	mov    DWORD PTR [rbx+0x8],eax
   140009550:	movsxd rdx,DWORD PTR [rbx+0x8]
   140009554:	cmp    edx,DWORD PTR [r11+0x4]
   140009558:	jge    0x1400095cb
   14000955a:	mov    rax,QWORD PTR [r11+0x10]
   14000955e:	lea    rcx,[rdx+rdx*2]
   140009562:	lea    rcx,[rax+rcx*8]
   140009566:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   14000956c:	jne    0x1400095cb
   14000956e:	lea    eax,[rdx+0x1]
   140009571:	mov    DWORD PTR [rbx+0x8],eax
   140009574:	dec    eax
   140009576:	movsxd rcx,eax
   140009579:	mov    rax,QWORD PTR [r11+0x10]
   14000957d:	lea    rdx,[rcx+rcx*2]
   140009581:	lea    r8,[rax+rdx*8]
   140009585:	lea    rdx,[rsp+0xa0]
   14000958d:	mov    r9d,DWORD PTR [r8+r11*1+0x14]
   140009592:	lea    rcx,[r8+r11*1+0x8]
   140009597:	mov    r8d,DWORD PTR [r8+r11*1+0x10]
   14000959c:	call   QWORD PTR [rip+0x1602e]        # 0x14001f5d0
   1400095a2:	lea    rdx,[rsp+0xa0]
   1400095aa:	lea    rcx,[rsp+0x90]
   1400095b2:	call   QWORD PTR [rip+0x15fa0]        # 0x14001f558
   1400095b8:	lea    rcx,[rsp+0xa0]
   1400095c0:	call   QWORD PTR [rip+0x15ff2]        # 0x14001f5b8
   1400095c6:	jmp    0x1400096a4
   1400095cb:	lea    rcx,[rsp+0x90]
   1400095d3:	call   QWORD PTR [rip+0x15fdf]        # 0x14001f5b8
   1400095d9:	xor    al,al
   1400095db:	jmp    0x140009dc9
   1400095e0:	cmp    edx,r8d
   1400095e3:	jge    0x1400096a4
   1400095e9:	mov    rax,QWORD PTR [r11+0x10]
   1400095ed:	lea    rcx,[rdx+rdx*2]
   1400095f1:	lea    rcx,[rax+rcx*8]
   1400095f5:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   1400095fb:	jne    0x1400096a4
   140009601:	lea    eax,[rdx+0x1]
   140009604:	mov    DWORD PTR [rbx+0x8],eax
   140009607:	dec    eax
   140009609:	movsxd rcx,eax
   14000960c:	mov    rax,QWORD PTR [r11+0x10]
   140009610:	lea    rdx,[rcx+rcx*2]
   140009614:	lea    r8,[rax+rdx*8]
   140009618:	lea    rdx,[rsp+0xa0]
   140009620:	mov    r9d,DWORD PTR [r8+r11*1+0x14]
   140009625:	lea    rcx,[r8+r11*1+0x8]
   14000962a:	mov    r8d,DWORD PTR [r8+r11*1+0x10]
   14000962f:	call   QWORD PTR [rip+0x15f9b]        # 0x14001f5d0
   140009635:	lea    rdx,[rip+0x164ac]        # 0x14001fae8
   14000963c:	lea    rcx,[rsp+0xa0]
   140009644:	call   QWORD PTR [rip+0x15fa6]        # 0x14001f5f0
   14000964a:	test   eax,eax
   14000964c:	je     0x140009696
   14000964e:	lea    rdx,[rip+0x1648b]        # 0x14001fae0
   140009655:	lea    rcx,[rsp+0xa0]
   14000965d:	call   QWORD PTR [rip+0x15f8d]        # 0x14001f5f0
   140009663:	test   eax,eax
   140009665:	je     0x140009696
   140009667:	lea    rdx,[rip+0x16462]        # 0x14001fad0
   14000966e:	lea    rcx,[rsp+0xa0]
   140009676:	call   QWORD PTR [rip+0x15f74]        # 0x14001f5f0
   14000967c:	test   eax,eax
   14000967e:	je     0x140009696
   140009680:	lea    rdx,[rsp+0xa0]
   140009688:	lea    rcx,[rsp+0x90]
   140009690:	call   QWORD PTR [rip+0x15ec2]        # 0x14001f558
   140009696:	lea    rcx,[rsp+0xa0]
   14000969e:	call   QWORD PTR [rip+0x15f14]        # 0x14001f5b8
   1400096a4:	lea    rdx,[rsp+0x90]
   1400096ac:	lea    rcx,[r13+0x8]
   1400096b0:	mov    QWORD PTR [rsp+0x58],r12
   1400096b5:	call   QWORD PTR [rip+0x15f25]        # 0x14001f5e0
   1400096bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400096c0:	mov    r9,QWORD PTR [rbx]
   1400096c3:	movsxd rdx,DWORD PTR [rbx+0x8]
   1400096c7:	cmp    edx,DWORD PTR [r9+0x4]
   1400096cb:	jge    0x1400097d5
   1400096d1:	mov    rax,QWORD PTR [r9+0x10]
   1400096d5:	lea    rcx,[rdx+rdx*2]
   1400096d9:	lea    rcx,[rax+rcx*8]
   1400096dd:	cmp    DWORD PTR [rcx+r9*1+0x4],0x11
   1400096e3:	jne    0x1400097d5
   1400096e9:	lea    eax,[rdx+0x1]
   1400096ec:	mov    DWORD PTR [rbx+0x8],eax
   1400096ef:	dec    eax
   1400096f1:	movsxd rcx,eax
   1400096f4:	mov    rax,QWORD PTR [r9+0x10]
   1400096f8:	lea    rdx,[rcx+rcx*2]
   1400096fc:	lea    r8,[rax+rdx*8]
   140009700:	lea    rdx,[rsp+0xa0]
   140009708:	add    r8,r9
   14000970b:	mov    r9d,DWORD PTR [r8+0x14]
   14000970f:	lea    rcx,[r8+0x8]
   140009713:	mov    r8d,DWORD PTR [r8+0x10]
   140009717:	call   QWORD PTR [rip+0x15eb3]        # 0x14001f5d0
   14000971d:	lea    rdx,[rsp+0xa0]
   140009725:	lea    rcx,[r13+0x8]
   140009729:	call   QWORD PTR [rip+0x15eb1]        # 0x14001f5e0
   14000972f:	lea    rcx,[rsp+0xa0]
   140009737:	call   QWORD PTR [rip+0x15e7b]        # 0x14001f5b8
   14000973d:	mov    r11,QWORD PTR [rbx]
   140009740:	movsxd rdx,DWORD PTR [rbx+0x8]
   140009744:	cmp    edx,DWORD PTR [r11+0x4]
   140009748:	jge    0x1400096c0
   14000974e:	mov    rax,QWORD PTR [r11+0x10]
   140009752:	lea    rcx,[rdx+rdx*2]
   140009756:	lea    rcx,[rax+rcx*8]
   14000975a:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   140009760:	jne    0x1400096c0
   140009766:	lea    eax,[rdx+0x1]
   140009769:	mov    DWORD PTR [rbx+0x8],eax
   14000976c:	dec    eax
   14000976e:	movsxd rcx,eax
   140009771:	mov    rax,QWORD PTR [r11+0x10]
   140009775:	lea    rdx,[rcx+rcx*2]
   140009779:	lea    r8,[rax+rdx*8]
   14000977d:	lea    rdx,[rsp+0xa8]
   140009785:	mov    r9d,DWORD PTR [r8+r11*1+0x14]
   14000978a:	lea    rcx,[r8+r11*1+0x8]
   14000978f:	mov    r8d,DWORD PTR [r8+r11*1+0x10]
   140009794:	call   QWORD PTR [rip+0x15e36]        # 0x14001f5d0
   14000979a:	lea    rdx,[rsp+0xa8]
   1400097a2:	lea    rcx,[rsp+0x90]
   1400097aa:	call   QWORD PTR [rip+0x15da8]        # 0x14001f558
   1400097b0:	lea    rcx,[rsp+0xa8]
   1400097b8:	call   QWORD PTR [rip+0x15dfa]        # 0x14001f5b8
   1400097be:	lea    rdx,[rsp+0x90]
   1400097c6:	lea    rcx,[r13+0x8]
   1400097ca:	call   QWORD PTR [rip+0x15e10]        # 0x14001f5e0
   1400097d0:	jmp    0x1400096c0
   1400097d5:	lea    rdx,[rsp+0x90]
   1400097dd:	mov    rcx,r13
   1400097e0:	call   QWORD PTR [rip+0x15d72]        # 0x14001f558
   1400097e6:	mov    r11,QWORD PTR [rbx]
   1400097e9:	movsxd rdx,DWORD PTR [rbx+0x8]
   1400097ed:	cmp    edx,DWORD PTR [r11+0x4]
   1400097f1:	jge    0x1400098bf
   1400097f7:	mov    rax,QWORD PTR [r11+0x10]
   1400097fb:	lea    rcx,[rdx+rdx*2]
   1400097ff:	lea    rcx,[rax+rcx*8]
   140009803:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   140009809:	jne    0x1400098bf
   14000980f:	lea    eax,[rdx+0x1]
   140009812:	lea    rdx,[rsp+0xa0]
   14000981a:	mov    DWORD PTR [rbx+0x8],eax
   14000981d:	dec    eax
   14000981f:	movsxd rcx,eax
   140009822:	mov    rax,QWORD PTR [r11+0x10]
   140009826:	lea    r8,[rcx+rcx*2]
   14000982a:	lea    r10,[rax+r8*8]
   14000982e:	mov    r9d,DWORD PTR [r10+r11*1+0x14]
   140009833:	mov    r8d,DWORD PTR [r10+r11*1+0x10]
   140009838:	lea    rcx,[r10+r11*1+0x8]
   14000983d:	call   QWORD PTR [rip+0x15d8d]        # 0x14001f5d0
   140009843:	lea    rdx,[rip+0x1629e]        # 0x14001fae8
   14000984a:	lea    rcx,[rsp+0xa0]
   140009852:	call   QWORD PTR [rip+0x15d98]        # 0x14001f5f0
   140009858:	test   eax,eax
   14000985a:	je     0x1400098b1
   14000985c:	lea    rdx,[rip+0x1627d]        # 0x14001fae0
   140009863:	lea    rcx,[rsp+0xa0]
   14000986b:	call   QWORD PTR [rip+0x15d7f]        # 0x14001f5f0
   140009871:	test   eax,eax
   140009873:	je     0x1400098b1
   140009875:	lea    rdx,[rip+0x16254]        # 0x14001fad0
   14000987c:	lea    rcx,[rsp+0xa0]
   140009884:	call   QWORD PTR [rip+0x15d66]        # 0x14001f5f0
   14000988a:	test   eax,eax
   14000988c:	je     0x1400098b1
   14000988e:	lea    rcx,[rsp+0xa0]
   140009896:	call   QWORD PTR [rip+0x15d1c]        # 0x14001f5b8
   14000989c:	lea    rcx,[rsp+0x90]
   1400098a4:	call   QWORD PTR [rip+0x15d0e]        # 0x14001f5b8
   1400098aa:	xor    al,al
   1400098ac:	jmp    0x140009dc4
   1400098b1:	lea    rcx,[rsp+0xa0]
   1400098b9:	call   QWORD PTR [rip+0x15cf9]        # 0x14001f5b8
   1400098bf:	mov    rdx,QWORD PTR [rbx]
   1400098c2:	movsxd r8,DWORD PTR [rbx+0x8]
   1400098c6:	cmp    r8d,DWORD PTR [rdx+0x4]
   1400098ca:	jge    0x140009c5f
   1400098d0:	mov    rax,QWORD PTR [rdx+0x10]
   1400098d4:	lea    rcx,[r8+r8*2]
   1400098d8:	lea    rcx,[rax+rcx*8]
   1400098dc:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x13
   1400098e1:	jne    0x140009c5f
   1400098e7:	inc    r8d
   1400098ea:	mov    QWORD PTR [rsp+0x68],rsi
   1400098ef:	mov    DWORD PTR [rbx+0x8],r8d
   1400098f3:	cmp    r8d,DWORD PTR [rdx+0x4]
   1400098f7:	jge    0x140009916
   1400098f9:	movsxd rax,r8d
   1400098fc:	lea    rcx,[rax+rax*2]
   140009900:	mov    rax,QWORD PTR [rdx+0x10]
   140009904:	lea    rcx,[rax+rcx*8]
   140009908:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x28
   14000990d:	jne    0x140009916
   14000990f:	lea    eax,[r8+0x1]
   140009913:	mov    DWORD PTR [rbx+0x8],eax
   140009916:	mov    r9d,DWORD PTR [rdx+0x4]
   14000991a:	movsxd r8,DWORD PTR [rbx+0x8]
   14000991e:	mov    edi,0x2
   140009923:	cmp    r8d,r9d
   140009926:	jge    0x140009946
   140009928:	mov    rax,QWORD PTR [rdx+0x10]
   14000992c:	lea    rcx,[r8+r8*2]
   140009930:	lea    rcx,[rax+rcx*8]
   140009934:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x29
   140009939:	jne    0x140009946
   14000993b:	lea    eax,[r8+0x1]
   14000993f:	mov    edi,ebp
   140009941:	mov    DWORD PTR [rbx+0x8],eax
   140009944:	jmp    0x14000998b
   140009946:	cmp    r8d,r9d
   140009949:	jge    0x14000996c
   14000994b:	mov    rax,QWORD PTR [rdx+0x10]
   14000994f:	lea    rcx,[r8+r8*2]
   140009953:	lea    rcx,[rax+rcx*8]
   140009957:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x2a
   14000995c:	jne    0x14000996c
   14000995e:	lea    eax,[r8+0x1]
   140009962:	mov    edi,0x1
   140009967:	mov    DWORD PTR [rbx+0x8],eax
   14000996a:	jmp    0x14000998b
   14000996c:	cmp    r8d,r9d
   14000996f:	jge    0x14000998b
   140009971:	mov    rax,QWORD PTR [rdx+0x10]
   140009975:	lea    rcx,[r8+r8*2]
   140009979:	lea    rcx,[rax+rcx*8]
   14000997d:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x2b
   140009982:	jne    0x14000998b
   140009984:	lea    eax,[r8+0x1]
   140009988:	mov    DWORD PTR [rbx+0x8],eax
   14000998b:	movsxd r8,DWORD PTR [rbx+0x8]
   14000998f:	cmp    r8d,DWORD PTR [rdx+0x4]
   140009993:	jge    0x1400099af
   140009995:	mov    rax,QWORD PTR [rdx+0x10]
   140009999:	lea    rcx,[r8+r8*2]
   14000999d:	lea    rcx,[rax+rcx*8]
   1400099a1:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x28
   1400099a6:	jne    0x1400099af
   1400099a8:	lea    eax,[r8+0x1]
   1400099ac:	mov    DWORD PTR [rbx+0x8],eax
   1400099af:	lea    rdx,[rsp+0x30]
   1400099b4:	mov    rcx,rbx
   1400099b7:	call   0x140004ba0
   1400099bc:	lea    rcx,[rsp+0xa0]
   1400099c4:	mov    rdx,rax
   1400099c7:	call   QWORD PTR [rip+0x15c0b]        # 0x14001f5d8
   1400099cd:	lea    rcx,[rsp+0x38]
   1400099d2:	call   QWORD PTR [rip+0x15be0]        # 0x14001f5b8
   1400099d8:	lea    rcx,[rsp+0x30]
   1400099dd:	call   QWORD PTR [rip+0x15bd5]        # 0x14001f5b8
   1400099e3:	mov    rsi,QWORD PTR [rbx]
   1400099e6:	movsxd r11,DWORD PTR [rbx+0x8]
   1400099ea:	cmp    r11d,DWORD PTR [rsi+0x4]
   1400099ee:	jge    0x140009b12
   1400099f4:	mov    rax,QWORD PTR [rsi+0x10]
   1400099f8:	lea    rcx,[r11+r11*2]
   1400099fc:	lea    rcx,[rax+rcx*8]
   140009a00:	cmp    DWORD PTR [rcx+rsi*1+0x4],0x9
   140009a05:	jne    0x140009b12
   140009a0b:	inc    r11d
   140009a0e:	mov    r8d,ebp
   140009a11:	mov    edi,ebp
   140009a13:	mov    DWORD PTR [rbx+0x8],r11d
   140009a17:	mov    r10d,ebp
   140009a1a:	je     0x140009a56
   140009a1c:	movsxd rax,r11d
   140009a1f:	lea    rcx,[rax+rax*2]
   140009a23:	mov    rax,QWORD PTR [rsi+0x10]
   140009a27:	lea    rcx,[rax+rcx*8]
   140009a2b:	mov    eax,DWORD PTR [rcx+rsi*1-0x14]
   140009a2f:	cmp    eax,0x7
   140009a32:	je     0x140009a56
   140009a34:	cmp    eax,0x9
   140009a37:	je     0x140009a50
   140009a39:	cmp    eax,0xc
   140009a3c:	je     0x140009a49
   140009a3e:	cmp    eax,0xe
   140009a41:	jne    0x140009a56
   140009a43:	lea    r8d,[rax-0xd]
   140009a47:	jmp    0x140009a56
   140009a49:	mov    edi,0x1
   140009a4e:	jmp    0x140009a56
   140009a50:	mov    r10d,0x1
   140009a56:	cmp    r11d,DWORD PTR [rsi+0x4]
   140009a5a:	jge    0x140009bca
   140009a60:	movsxd rax,r11d
   140009a63:	inc    r11d
   140009a66:	lea    rcx,[rax+rax*2]
   140009a6a:	mov    DWORD PTR [rbx+0x8],r11d
   140009a6e:	mov    rax,QWORD PTR [rsi+0x10]
   140009a72:	lea    rdx,[rsi+rcx*8]
   140009a76:	mov    r9d,DWORD PTR [rdx+rax*1+0x4]
   140009a7b:	lea    eax,[r9-0x7]
   140009a7f:	cmp    eax,0x48
   140009a82:	ja     0x140009a9f
   140009a84:	cdqe   
   140009a86:	movzx  eax,BYTE PTR [r14+rax*1+0x9e70]
   140009a8f:	mov    ecx,DWORD PTR [r14+rax*4+0x9e4c]
   140009a97:	add    rcx,r14
   140009a9a:	jmp    rcx
   140009a9c:	inc    r8d
   140009a9f:	cmp    r9d,0xa
   140009aa3:	jne    0x140009ab7
   140009aa5:	test   r8d,r8d
   140009aa8:	jg     0x140009ab7
   140009aaa:	test   edi,edi
   140009aac:	jg     0x140009ab7
   140009aae:	test   r10d,r10d
   140009ab1:	jle    0x140009bca
   140009ab7:	test   r8d,r8d
   140009aba:	js     0x140009b06
   140009abc:	test   edi,edi
   140009abe:	js     0x140009b06
   140009ac0:	test   r10d,r10d
   140009ac3:	js     0x140009b06
   140009ac5:	test   r8d,r8d
   140009ac8:	jg     0x140009ad4
   140009aca:	cmp    r9d,0x12
   140009ace:	je     0x140009bca
   140009ad4:	cmp    r11d,DWORD PTR [rsi+0x4]
   140009ad8:	jl     0x140009a60
   140009ada:	jmp    0x140009bca
   140009adf:	dec    r8d
   140009ae2:	jmp    0x140009a9f
   140009ae4:	inc    edi
   140009ae6:	jmp    0x140009a9f
   140009ae8:	dec    edi
   140009aea:	jmp    0x140009a9f
   140009aec:	inc    r10d
   140009aef:	jmp    0x140009a9f
   140009af1:	dec    r10d
   140009af4:	jmp    0x140009a9f
   140009af6:	test   r10d,r10d
   140009af9:	jne    0x140009a9f
   140009afb:	test   r8d,r8d
   140009afe:	jne    0x140009a9f
   140009b00:	lea    r9d,[r10+0x8]
   140009b04:	jmp    0x140009abc
   140009b06:	lea    eax,[r11-0x1]
   140009b0a:	mov    DWORD PTR [rbx+0x8],eax
   140009b0d:	jmp    0x140009bca
   140009b12:	lea    rdx,[rsp+0xa0]
   140009b1a:	lea    rcx,[rsp+0x20]
   140009b1f:	call   QWORD PTR [rip+0x15ab3]        # 0x14001f5d8
   140009b25:	mov    rax,QWORD PTR [r13+0x10]
   140009b29:	lea    rcx,[r13+0x10]
   140009b2d:	mov    DWORD PTR [rsp+0x28],edi
   140009b31:	mov    edx,DWORD PTR [rax]
   140009b33:	cmp    edx,0x1
   140009b36:	je     0x140009b85
   140009b38:	test   edx,edx
   140009b3a:	je     0x140009b85
   140009b3c:	mov    edx,0x7fffffff
   140009b41:	mov    r8d,0x1
   140009b47:	call   0x140003700
   140009b4c:	mov    ecx,0x10
   140009b51:	mov    rsi,rax
   140009b54:	call   0x14001e1c6
   140009b59:	mov    rdi,rax
   140009b5c:	test   rax,rax
   140009b5f:	je     0x140009b7d
   140009b61:	lea    rdx,[rsp+0x20]
   140009b66:	mov    rcx,rax
   140009b69:	call   QWORD PTR [rip+0x15a69]        # 0x14001f5d8
   140009b6f:	mov    r11d,DWORD PTR [rsp+0x28]
   140009b74:	mov    DWORD PTR [rdi+0x8],r11d
   140009b78:	mov    QWORD PTR [rsi],rdi
   140009b7b:	jmp    0x140009bbf
   140009b7d:	mov    rdi,rbp
   140009b80:	mov    QWORD PTR [rsi],rbp
   140009b83:	jmp    0x140009bbf
   140009b85:	call   QWORD PTR [rip+0x15615]        # 0x14001f1a0
   140009b8b:	mov    ecx,0x10
   140009b90:	mov    rsi,rax
   140009b93:	call   0x14001e1c6
   140009b98:	mov    rdi,rax
   140009b9b:	test   rax,rax
   140009b9e:	je     0x140009bb9
   140009ba0:	lea    rdx,[rsp+0x20]
   140009ba5:	mov    rcx,rax
   140009ba8:	call   QWORD PTR [rip+0x15a2a]        # 0x14001f5d8
   140009bae:	mov    r11d,DWORD PTR [rsp+0x28]
   140009bb3:	mov    DWORD PTR [rdi+0x8],r11d
   140009bb7:	jmp    0x140009bbc
   140009bb9:	mov    rdi,rbp
   140009bbc:	mov    QWORD PTR [rsi],rdi
   140009bbf:	lea    rcx,[rsp+0x20]
   140009bc4:	call   QWORD PTR [rip+0x159ee]        # 0x14001f5b8
   140009bca:	lea    rcx,[rsp+0xa0]
   140009bd2:	call   QWORD PTR [rip+0x159e0]        # 0x14001f5b8
   140009bd8:	mov    rdx,QWORD PTR [rbx]
   140009bdb:	movsxd r8,DWORD PTR [rbx+0x8]
   140009bdf:	cmp    r8d,DWORD PTR [rdx+0x4]
   140009be3:	jge    0x140009c04
   140009be5:	mov    rax,QWORD PTR [rdx+0x10]
   140009be9:	lea    rcx,[r8+r8*2]
   140009bed:	lea    rcx,[rax+rcx*8]
   140009bf1:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x5a
   140009bf6:	jne    0x140009c04
   140009bf8:	inc    r8d
   140009bfb:	mov    DWORD PTR [rbx+0x8],r8d
   140009bff:	jmp    0x1400098f3
   140009c04:	mov    rdx,QWORD PTR [r13+0x10]
   140009c08:	mov    rsi,QWORD PTR [rsp+0x68]
   140009c0d:	lea    rcx,[r13+0x10]
   140009c11:	mov    eax,DWORD PTR [rdx+0x8]
   140009c14:	cmp    DWORD PTR [rdx+0xc],eax
   140009c17:	je     0x140009c5f
   140009c19:	call   0x1400092c0
   140009c1e:	lea    rcx,[rbx+0x60]
   140009c22:	mov    rdx,rax
   140009c25:	call   0x140002eb0
   140009c2a:	test   al,al
   140009c2c:	je     0x140009c5f
   140009c2e:	lea    r9,[r13+0x8]
   140009c32:	lea    rdx,[rsp+0xa0]
   140009c3a:	lea    rcx,[rbx+0x60]
   140009c3e:	mov    r8,r13
   140009c41:	call   0x1400060e0
   140009c46:	lea    r9,[r13+0x8]
   140009c4a:	lea    r8,[r13+0x8]
   140009c4e:	lea    rdx,[rsp+0xa0]
   140009c56:	lea    rcx,[rbx+0x60]
   140009c5a:	call   0x1400060e0
   140009c5f:	mov    rdx,QWORD PTR [rbx]
   140009c62:	movsxd r8,DWORD PTR [rbx+0x8]
   140009c66:	cmp    r8d,DWORD PTR [rdx+0x4]
   140009c6a:	jge    0x14000989c
   140009c70:	mov    rax,QWORD PTR [rdx+0x10]
   140009c74:	lea    rcx,[r8+r8*2]
   140009c78:	lea    rcx,[rax+rcx*8]
   140009c7c:	cmp    DWORD PTR [rcx+rdx*1+0x4],0xe
   140009c81:	jne    0x14000989c
   140009c87:	lea    eax,[r8+0x1]
   140009c8b:	mov    r10d,ebp
   140009c8e:	mov    r9d,ebp
   140009c91:	mov    DWORD PTR [rbx+0x8],eax
   140009c94:	dec    eax
   140009c96:	mov    DWORD PTR [r13+0xa0],eax
   140009c9d:	movsxd r8,DWORD PTR [rbx+0x8]
   140009ca1:	test   r8d,r8d
   140009ca4:	je     0x140009ce0
   140009ca6:	mov    rdx,QWORD PTR [rbx]
   140009ca9:	lea    rcx,[r8+r8*2]
   140009cad:	mov    rax,QWORD PTR [rdx+0x10]
   140009cb1:	lea    rcx,[rax+rcx*8]
   140009cb5:	mov    eax,DWORD PTR [rcx+rdx*1-0x14]
   140009cb9:	cmp    eax,0x7
   140009cbc:	je     0x140009ce0
   140009cbe:	cmp    eax,0x9
   140009cc1:	je     0x140009cda
   140009cc3:	cmp    eax,0xc
   140009cc6:	je     0x140009cd2
   140009cc8:	cmp    eax,0xe
   140009ccb:	jne    0x140009ce0
   140009ccd:	lea    ebp,[rax-0xd]
   140009cd0:	jmp    0x140009ce0
   140009cd2:	mov    r10d,0x1
   140009cd8:	jmp    0x140009ce0
   140009cda:	mov    r9d,0x1
   140009ce0:	mov    rdi,QWORD PTR [rbx]
   140009ce3:	cmp    r8d,DWORD PTR [rdi+0x4]
   140009ce7:	jge    0x140009d9a
   140009ced:	nop    DWORD PTR [rax]
   140009cf0:	movsxd rax,DWORD PTR [rbx+0x8]
   140009cf4:	lea    r11d,[rax+0x1]
   140009cf8:	lea    rcx,[rax+rax*2]
   140009cfc:	mov    DWORD PTR [rbx+0x8],r11d
   140009d00:	mov    rax,QWORD PTR [rdi+0x10]
   140009d04:	lea    rdx,[rdi+rcx*8]
   140009d08:	mov    r8d,DWORD PTR [rdx+rax*1+0x4]
   140009d0d:	lea    eax,[r8-0x7]
   140009d11:	cmp    eax,0x48
   140009d14:	ja     0x140009d30
   140009d16:	cdqe   
   140009d18:	movzx  eax,BYTE PTR [r14+rax*1+0x9ee0]
   140009d21:	mov    ecx,DWORD PTR [r14+rax*4+0x9ebc]
   140009d29:	add    rcx,r14
   140009d2c:	jmp    rcx
   140009d2e:	inc    ebp
   140009d30:	cmp    r8d,0xf
   140009d34:	jne    0x140009d44
   140009d36:	test   ebp,ebp
   140009d38:	jg     0x140009d44
   140009d3a:	test   r10d,r10d
   140009d3d:	jg     0x140009d44
   140009d3f:	test   r9d,r9d
   140009d42:	jle    0x140009d8e
   140009d44:	test   ebp,ebp
   140009d46:	js     0x140009d93
   140009d48:	test   r10d,r10d
   140009d4b:	js     0x140009d93
   140009d4d:	test   r9d,r9d
   140009d50:	js     0x140009d93
   140009d52:	test   ebp,ebp
   140009d54:	jg     0x140009d5c
   140009d56:	cmp    r8d,0x12
   140009d5a:	je     0x140009d9a
   140009d5c:	cmp    r11d,DWORD PTR [rdi+0x4]
   140009d60:	mov    rax,rdi
   140009d63:	jl     0x140009cf0
   140009d65:	jmp    0x140009d9a
   140009d67:	dec    ebp
   140009d69:	jmp    0x140009d30
   140009d6b:	inc    r10d
   140009d6e:	jmp    0x140009d30
   140009d70:	dec    r10d
   140009d73:	jmp    0x140009d30
   140009d75:	inc    r9d
   140009d78:	jmp    0x140009d30
   140009d7a:	dec    r9d
   140009d7d:	jmp    0x140009d30
   140009d7f:	test   r9d,r9d
   140009d82:	jne    0x140009d30
   140009d84:	test   ebp,ebp
   140009d86:	jne    0x140009d30
   140009d88:	lea    r8d,[r9+0x8]
   140009d8c:	jmp    0x140009d48
   140009d8e:	mov    dil,0x1
   140009d91:	jmp    0x140009d9d
   140009d93:	lea    eax,[r11-0x1]
   140009d97:	mov    DWORD PTR [rbx+0x8],eax
   140009d9a:	xor    dil,dil
   140009d9d:	mov    ecx,DWORD PTR [rbx+0x8]
   140009da0:	mov    DWORD PTR [r13+0xa4],ecx
   140009da7:	mov    ecx,DWORD PTR [r13+0xa0]
   140009dae:	inc    ecx
   140009db0:	mov    DWORD PTR [rbx+0x8],ecx
   140009db3:	lea    rcx,[rsp+0x90]
   140009dbb:	call   QWORD PTR [rip+0x157f7]        # 0x14001f5b8
   140009dc1:	mov    al,dil
   140009dc4:	mov    r12,QWORD PTR [rsp+0x58]
   140009dc9:	mov    rdi,QWORD PTR [rsp+0x60]
   140009dce:	mov    r14,QWORD PTR [rsp+0x50]
   140009dd3:	add    rsp,0x70
   140009dd7:	pop    r13
   140009dd9:	pop    rbp
   140009dda:	pop    rbx
   140009ddb:	ret    
   140009ddc:	in     al,dx
   140009ddd:	xchg   esp,eax
   140009dde:	add    BYTE PTR [rax],al
   140009de0:	xor    DWORD PTR [rbp-0x6aca0000],edx
   140009de6:	add    BYTE PTR [rax],al
   140009de8:	(bad)  
   140009de9:	xchg   ebp,eax
   140009dea:	add    BYTE PTR [rax],al
   140009dec:	sub    al,0x95
   140009dee:	add    BYTE PTR [rax],al
   140009df0:	(bad)  
   140009df1:	xchg   esp,eax
   140009df2:	add    BYTE PTR [rax],al
   140009df4:	and    edx,DWORD PTR [rbp-0x6ac50000]
   140009dfa:	add    BYTE PTR [rax],al
   140009dfc:	in     al,dx
   140009dfd:	xchg   esp,eax
   140009dfe:	add    BYTE PTR [rax],al
   140009e00:	add    BYTE PTR [rax],al
   140009e02:	add    DWORD PTR [rdx],eax
   140009e04:	or     BYTE PTR [rbx],al
   140009e06:	add    al,0x5
   140009e08:	(bad)  
   140009e09:	or     BYTE PTR [rax],cl
   140009e0b:	or     BYTE PTR [rax],cl
   140009e0d:	or     BYTE PTR [rax],cl
   140009e0f:	or     BYTE PTR [rax],cl
   140009e11:	or     BYTE PTR [rax],cl
   140009e13:	or     BYTE PTR [rax],cl
   140009e15:	or     BYTE PTR [rax],cl
   140009e17:	or     BYTE PTR [rax],cl
   140009e19:	or     BYTE PTR [rax],cl
   140009e1b:	or     BYTE PTR [rax],cl
   140009e1d:	or     BYTE PTR [rax],cl
   140009e1f:	or     BYTE PTR [rax],cl
   140009e21:	or     BYTE PTR [rax],cl
   140009e23:	or     BYTE PTR [rax],cl
   140009e25:	or     BYTE PTR [rax],cl
   140009e27:	or     BYTE PTR [rax],cl
   140009e29:	or     BYTE PTR [rax],cl
   140009e2b:	or     BYTE PTR [rax],cl
   140009e2d:	or     BYTE PTR [rax],cl
   140009e2f:	or     BYTE PTR [rax],cl
   140009e31:	or     BYTE PTR [rax],cl
   140009e33:	or     BYTE PTR [rax],cl
   140009e35:	or     BYTE PTR [rax],cl
   140009e37:	or     BYTE PTR [rax],cl
   140009e39:	or     BYTE PTR [rax],cl
   140009e3b:	or     BYTE PTR [rax],cl
   140009e3d:	or     BYTE PTR [rax],cl
   140009e3f:	or     BYTE PTR [rax],cl
   140009e41:	or     BYTE PTR [rax],cl
   140009e43:	or     BYTE PTR [rax],cl
   140009e45:	or     BYTE PTR [rax],cl
   140009e47:	or     BYTE PTR [rdi],al
   140009e49:	nop    DWORD PTR [rax]
   140009e4c:	lahf   
   140009e4d:	(bad)  
   140009e4e:	add    BYTE PTR [rax],al
   140009e50:	in     al,dx
   140009e51:	(bad)  
   140009e52:	add    BYTE PTR [rax],al
   140009e54:	icebp  
   140009e55:	(bad)  
   140009e56:	add    BYTE PTR [rax],al
   140009e58:	in     al,0x9a
   140009e5a:	add    BYTE PTR [rax],al
   140009e5c:	call   0xdc009efb
   140009e61:	(bad)  
   140009e62:	add    BYTE PTR [rax],al
   140009e64:	fistp  WORD PTR [rdx-0x650a0000]
   140009e6a:	add    BYTE PTR [rax],al
   140009e6c:	lahf   
   140009e6d:	(bad)  
   140009e6e:	add    BYTE PTR [rax],al
   140009e70:	add    BYTE PTR [rax],al
   140009e72:	add    DWORD PTR [rdx],eax
   140009e74:	or     BYTE PTR [rbx],al
   140009e76:	add    al,0x5
   140009e78:	(bad)  
   140009e79:	or     BYTE PTR [rax],cl
   140009e7b:	or     BYTE PTR [rax],cl
   140009e7d:	or     BYTE PTR [rax],cl
   140009e7f:	or     BYTE PTR [rax],cl
   140009e81:	or     BYTE PTR [rax],cl
   140009e83:	or     BYTE PTR [rax],cl
   140009e85:	or     BYTE PTR [rax],cl
   140009e87:	or     BYTE PTR [rax],cl
   140009e89:	or     BYTE PTR [rax],cl
   140009e8b:	or     BYTE PTR [rax],cl
   140009e8d:	or     BYTE PTR [rax],cl
   140009e8f:	or     BYTE PTR [rax],cl
   140009e91:	or     BYTE PTR [rax],cl
   140009e93:	or     BYTE PTR [rax],cl
   140009e95:	or     BYTE PTR [rax],cl
   140009e97:	or     BYTE PTR [rax],cl
   140009e99:	or     BYTE PTR [rax],cl
   140009e9b:	or     BYTE PTR [rax],cl
   140009e9d:	or     BYTE PTR [rax],cl
   140009e9f:	or     BYTE PTR [rax],cl
   140009ea1:	or     BYTE PTR [rax],cl
   140009ea3:	or     BYTE PTR [rax],cl
   140009ea5:	or     BYTE PTR [rax],cl
   140009ea7:	or     BYTE PTR [rax],cl
   140009ea9:	or     BYTE PTR [rax],cl
   140009eab:	or     BYTE PTR [rax],cl
   140009ead:	or     BYTE PTR [rax],cl
   140009eaf:	or     BYTE PTR [rax],cl
   140009eb1:	or     BYTE PTR [rax],cl
   140009eb3:	or     BYTE PTR [rax],cl
   140009eb5:	or     BYTE PTR [rax],cl
   140009eb7:	or     BYTE PTR [rdi],al
   140009eb9:	nop    DWORD PTR [rax]
   140009ebc:	xor    BYTE PTR [rbp-0x628b0000],bl
   140009ec2:	add    BYTE PTR [rax],al
   140009ec4:	jp     0x140009e63
   140009ec6:	add    BYTE PTR [rax],al
   140009ec8:	imul   ebx,DWORD PTR [rbp-0x62900000],0x0
   140009ecf:	add    BYTE PTR [rsi],ch
   140009ed1:	popf   
   140009ed2:	add    BYTE PTR [rax],al
   140009ed4:	addr32 popf 
   140009ed6:	add    BYTE PTR [rax],al
   140009ed8:	jg     0x140009e77
   140009eda:	add    BYTE PTR [rax],al
   140009edc:	xor    BYTE PTR [rbp+0x0],bl
   140009ee2:	add    DWORD PTR [rdx],eax
   140009ee4:	or     BYTE PTR [rbx],al
   140009ee6:	add    al,0x5
   140009ee8:	(bad)  
   140009ee9:	or     BYTE PTR [rax],cl
   140009eeb:	or     BYTE PTR [rax],cl
   140009eed:	or     BYTE PTR [rax],cl
   140009eef:	or     BYTE PTR [rax],cl
   140009ef1:	or     BYTE PTR [rax],cl
   140009ef3:	or     BYTE PTR [rax],cl
   140009ef5:	or     BYTE PTR [rax],cl
   140009ef7:	or     BYTE PTR [rax],cl
   140009ef9:	or     BYTE PTR [rax],cl
   140009efb:	or     BYTE PTR [rax],cl
   140009efd:	or     BYTE PTR [rax],cl
   140009eff:	or     BYTE PTR [rax],cl
   140009f01:	or     BYTE PTR [rax],cl
   140009f03:	or     BYTE PTR [rax],cl
   140009f05:	or     BYTE PTR [rax],cl
   140009f07:	or     BYTE PTR [rax],cl
   140009f09:	or     BYTE PTR [rax],cl
   140009f0b:	or     BYTE PTR [rax],cl
   140009f0d:	or     BYTE PTR [rax],cl
   140009f0f:	or     BYTE PTR [rax],cl
   140009f11:	or     BYTE PTR [rax],cl
   140009f13:	or     BYTE PTR [rax],cl
   140009f15:	or     BYTE PTR [rax],cl
   140009f17:	or     BYTE PTR [rax],cl
   140009f19:	or     BYTE PTR [rax],cl
   140009f1b:	or     BYTE PTR [rax],cl
   140009f1d:	or     BYTE PTR [rax],cl
   140009f1f:	or     BYTE PTR [rax],cl
   140009f21:	or     BYTE PTR [rax],cl
   140009f23:	or     BYTE PTR [rax],cl
   140009f25:	or     BYTE PTR [rax],cl
   140009f27:	or     BYTE PTR [rdi],al
   140009f29:	int3   
   140009f2a:	int3   
   140009f2b:	int3   
   140009f2c:	int3   
   140009f2d:	int3   
   140009f2e:	int3   
   140009f2f:	int3   
   140009f30:	mov    r11,rsp
   140009f33:	push   rbx
   140009f34:	push   r13
   140009f36:	push   r14
   140009f38:	sub    rsp,0x120
   140009f3f:	mov    rax,QWORD PTR [rcx]
   140009f42:	xor    r13d,r13d
   140009f45:	mov    QWORD PTR [r11-0x30],rdi
   140009f49:	mov    r8d,DWORD PTR [rax+0x4]
   140009f4d:	mov    r14,rdx
   140009f50:	mov    rdi,rcx
   140009f53:	cmp    DWORD PTR [rcx+0x8],r8d
   140009f57:	jge    0x14000a686
   140009f5d:	mov    QWORD PTR [r11-0x28],rsi
   140009f61:	mov    QWORD PTR [r11-0x40],r15
   140009f65:	mov    QWORD PTR [r11-0x20],rbp
   140009f69:	mov    QWORD PTR [r11-0x38],r12
   140009f6d:	lea    r15,[rip+0x15b8c]        # 0x14001fb00
   140009f74:	lea    rcx,[rsp+0x20]
   140009f79:	call   QWORD PTR [rip+0x15641]        # 0x14001f5c0
   140009f7f:	lea    rcx,[rsp+0x28]
   140009f84:	call   QWORD PTR [rip+0x15636]        # 0x14001f5c0
   140009f8a:	and    DWORD PTR [rsp+0x30],0xfffffffc
   140009f8f:	lea    rcx,[rsp+0x40]
   140009f94:	mov    DWORD PTR [rsp+0x34],r13d
   140009f99:	mov    DWORD PTR [rsp+0x38],r13d
   140009f9e:	call   QWORD PTR [rip+0x1561c]        # 0x14001f5c0
   140009fa4:	lea    rcx,[rsp+0x48]
   140009fa9:	call   QWORD PTR [rip+0x15611]        # 0x14001f5c0
   140009faf:	lea    rcx,[rsp+0x50]
   140009fb4:	call   QWORD PTR [rip+0x15606]        # 0x14001f5c0
   140009fba:	lea    rcx,[rsp+0x58]
   140009fbf:	call   QWORD PTR [rip+0x155fb]        # 0x14001f5c0
   140009fc5:	lea    rdx,[rsp+0xc8]
   140009fcd:	mov    rcx,rdi
   140009fd0:	mov    BYTE PTR [rsp+0x60],r13b
   140009fd5:	call   0x140004ba0
   140009fda:	lea    rcx,[rsp+0x20]
   140009fdf:	mov    rdx,rax
   140009fe2:	mov    rbx,rax
   140009fe5:	call   QWORD PTR [rip+0x1556d]        # 0x14001f558
   140009feb:	lea    rdx,[rbx+0x8]
   140009fef:	lea    rcx,[rsp+0x28]
   140009ff4:	call   QWORD PTR [rip+0x1555e]        # 0x14001f558
   140009ffa:	mov    ecx,DWORD PTR [rbx+0x10]
   140009ffd:	mov    edx,DWORD PTR [rsp+0x30]
   14000a001:	xor    ecx,edx
   14000a003:	and    ecx,0x1
   14000a006:	xor    edx,ecx
   14000a008:	lea    rcx,[rsp+0xd0]
   14000a010:	mov    DWORD PTR [rsp+0x30],edx
   14000a014:	mov    eax,DWORD PTR [rbx+0x10]
   14000a017:	xor    eax,edx
   14000a019:	and    eax,0x2
   14000a01c:	xor    edx,eax
   14000a01e:	mov    DWORD PTR [rsp+0x30],edx
   14000a022:	mov    eax,DWORD PTR [rbx+0x14]
   14000a025:	mov    DWORD PTR [rsp+0x34],eax
   14000a029:	mov    eax,DWORD PTR [rbx+0x18]
   14000a02c:	mov    DWORD PTR [rsp+0x38],eax
   14000a030:	call   QWORD PTR [rip+0x15582]        # 0x14001f5b8
   14000a036:	lea    rcx,[rsp+0xc8]
   14000a03e:	call   QWORD PTR [rip+0x15574]        # 0x14001f5b8
   14000a044:	lea    rdx,[rip+0x1578d]        # 0x14001f7d8
   14000a04b:	lea    rcx,[rsp+0x20]
   14000a050:	call   QWORD PTR [rip+0x1559a]        # 0x14001f5f0
   14000a056:	test   eax,eax
   14000a058:	je     0x14000a624
   14000a05e:	mov    r9,QWORD PTR [rdi]
   14000a061:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000a065:	cmp    edx,DWORD PTR [r9+0x4]
   14000a069:	jge    0x14000a0e0
   14000a06b:	mov    rax,QWORD PTR [r9+0x10]
   14000a06f:	lea    rcx,[rdx+rdx*2]
   14000a073:	lea    rcx,[rax+rcx*8]
   14000a077:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   14000a07d:	jne    0x14000a0e0
   14000a07f:	lea    eax,[rdx+0x1]
   14000a082:	mov    DWORD PTR [rdi+0x8],eax
   14000a085:	dec    eax
   14000a087:	movsxd rcx,eax
   14000a08a:	mov    rax,QWORD PTR [r9+0x10]
   14000a08e:	lea    rdx,[rcx+rcx*2]
   14000a092:	lea    r8,[rax+rdx*8]
   14000a096:	lea    rdx,[rsp+0x158]
   14000a09e:	add    r8,r9
   14000a0a1:	mov    r9d,DWORD PTR [r8+0x14]
   14000a0a5:	lea    rcx,[r8+0x8]
   14000a0a9:	mov    r8d,DWORD PTR [r8+0x10]
   14000a0ad:	call   QWORD PTR [rip+0x1551d]        # 0x14001f5d0
   14000a0b3:	lea    rdx,[rsp+0x158]
   14000a0bb:	lea    rcx,[rsp+0x50]
   14000a0c0:	call   QWORD PTR [rip+0x15492]        # 0x14001f558
   14000a0c6:	lea    rcx,[rsp+0x158]
   14000a0ce:	call   QWORD PTR [rip+0x154e4]        # 0x14001f5b8
   14000a0d4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a0e0:	mov    rdx,QWORD PTR [rdi]
   14000a0e3:	movsxd r8,DWORD PTR [rdi+0x8]
   14000a0e7:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000a0eb:	jge    0x14000a13b
   14000a0ed:	mov    rax,QWORD PTR [rdx+0x10]
   14000a0f1:	lea    rcx,[r8+r8*2]
   14000a0f5:	lea    rcx,[rax+rcx*8]
   14000a0f9:	cmp    DWORD PTR [rcx+rdx*1+0x4],0xc
   14000a0fe:	jne    0x14000a13b
   14000a100:	lea    eax,[r8+0x1]
   14000a104:	lea    rdx,[rsp+0x88]
   14000a10c:	mov    rcx,rdi
   14000a10f:	mov    r8d,0xd
   14000a115:	mov    DWORD PTR [rdi+0x8],eax
   14000a118:	call   0x1400042b0
   14000a11d:	lea    rcx,[rsp+0x40]
   14000a122:	mov    rdx,rax
   14000a125:	call   QWORD PTR [rip+0x154b5]        # 0x14001f5e0
   14000a12b:	lea    rcx,[rsp+0x88]
   14000a133:	call   QWORD PTR [rip+0x1547f]        # 0x14001f5b8
   14000a139:	jmp    0x14000a0e0
   14000a13b:	mov    r9d,DWORD PTR [rdx+0x4]
   14000a13f:	mov    r8,rdx
   14000a142:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000a146:	cmp    edx,r9d
   14000a149:	jge    0x14000a167
   14000a14b:	mov    rax,QWORD PTR [r8+0x10]
   14000a14f:	lea    rcx,[rdx+rdx*2]
   14000a153:	lea    rcx,[rax+rcx*8]
   14000a157:	cmp    DWORD PTR [rcx+r8*1+0x4],0x36
   14000a15d:	jne    0x14000a167
   14000a15f:	lea    eax,[rdx+0x1]
   14000a162:	mov    DWORD PTR [rdi+0x8],eax
   14000a165:	jmp    0x14000a186
   14000a167:	cmp    edx,r9d
   14000a16a:	jge    0x14000a1de
   14000a16c:	mov    rax,QWORD PTR [r8+0x10]
   14000a170:	lea    rcx,[rdx+rdx*2]
   14000a174:	lea    rcx,[rax+rcx*8]
   14000a178:	cmp    DWORD PTR [rcx+r8*1+0x4],0x37
   14000a17e:	jne    0x14000a1de
   14000a180:	lea    eax,[rdx+0x1]
   14000a183:	mov    DWORD PTR [rdi+0x8],eax
   14000a186:	lea    rcx,[rsp+0x40]
   14000a18b:	mov    dl,0x20
   14000a18d:	call   QWORD PTR [rip+0x15405]        # 0x14001f598
   14000a193:	mov    r11,QWORD PTR [rdi]
   14000a196:	mov    eax,DWORD PTR [rdi+0x8]
   14000a199:	dec    eax
   14000a19b:	cdqe   
   14000a19d:	lea    rcx,[rax+rax*2]
   14000a1a1:	mov    rax,QWORD PTR [r11+0x10]
   14000a1a5:	lea    rdx,[rax+rcx*8]
   14000a1a9:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   14000a1ae:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   14000a1b3:	lea    rcx,[rdx+r11*1+0x8]
   14000a1b8:	lea    rdx,[rsp+0x78]
   14000a1bd:	call   QWORD PTR [rip+0x1540d]        # 0x14001f5d0
   14000a1c3:	lea    rdx,[rsp+0x78]
   14000a1c8:	lea    rcx,[rsp+0x40]
   14000a1cd:	call   QWORD PTR [rip+0x1540d]        # 0x14001f5e0
   14000a1d3:	lea    rcx,[rsp+0x78]
   14000a1d8:	call   QWORD PTR [rip+0x153da]        # 0x14001f5b8
   14000a1de:	mov    rax,QWORD PTR [rsp+0x20]
   14000a1e3:	mov    BYTE PTR [rsp+0x140],0x20
   14000a1eb:	xor    r8d,r8d
   14000a1ee:	mov    edx,DWORD PTR [rax+0x4]
   14000a1f1:	mov    rax,QWORD PTR [rsp+0x40]
   14000a1f6:	mov    ecx,DWORD PTR [rax+0x4]
   14000a1f9:	lea    r12d,[rcx+rdx*1+0x1]
   14000a1fe:	lea    rcx,[rsp+0x148]
   14000a206:	mov    edx,r12d
   14000a209:	call   QWORD PTR [rip+0x152c9]        # 0x14001f4d8
   14000a20f:	lea    rcx,[rsp+0x148]
   14000a217:	call   QWORD PTR [rip+0x153db]        # 0x14001f5f8
   14000a21d:	lea    rcx,[rsp+0x20]
   14000a222:	mov    rbx,rax
   14000a225:	mov    rbp,rax
   14000a228:	call   QWORD PTR [rip+0x153ca]        # 0x14001f5f8
   14000a22e:	lea    rcx,[rsp+0x20]
   14000a233:	mov    rsi,rax
   14000a236:	call   QWORD PTR [rip+0x15124]        # 0x14001f360
   14000a23c:	cmp    rsi,rax
   14000a23f:	je     0x14000a252
   14000a241:	movzx  ecx,BYTE PTR [rsi]
   14000a244:	inc    rsi
   14000a247:	inc    rbx
   14000a24a:	mov    BYTE PTR [rbx-0x1],cl
   14000a24d:	cmp    rsi,rax
   14000a250:	jne    0x14000a241
   14000a252:	movzx  eax,BYTE PTR [rsp+0x140]
   14000a25a:	lea    rcx,[rsp+0x40]
   14000a25f:	inc    rbx
   14000a262:	mov    BYTE PTR [rbx-0x1],al
   14000a265:	call   QWORD PTR [rip+0x1538d]        # 0x14001f5f8
   14000a26b:	lea    rcx,[rsp+0x40]
   14000a270:	mov    rsi,rax
   14000a273:	call   QWORD PTR [rip+0x150e7]        # 0x14001f360
   14000a279:	cmp    rsi,rax
   14000a27c:	je     0x14000a291
   14000a27e:	xchg   ax,ax
   14000a280:	movzx  ecx,BYTE PTR [rsi]
   14000a283:	inc    rsi
   14000a286:	inc    rbx
   14000a289:	mov    BYTE PTR [rbx-0x1],cl
   14000a28c:	cmp    rsi,rax
   14000a28f:	jne    0x14000a280
   14000a291:	mov    rcx,rbx
   14000a294:	movsxd rax,r12d
   14000a297:	sub    rcx,rbp
   14000a29a:	cmp    rax,rcx
   14000a29d:	je     0x14000a2b1
   14000a29f:	sub    ebx,ebp
   14000a2a1:	lea    rcx,[rsp+0x148]
   14000a2a9:	mov    edx,ebx
   14000a2ab:	call   QWORD PTR [rip+0x152df]        # 0x14001f590
   14000a2b1:	lea    rdx,[rsp+0x148]
   14000a2b9:	lea    rcx,[rsp+0xa0]
   14000a2c1:	call   QWORD PTR [rip+0x15311]        # 0x14001f5d8
   14000a2c7:	lea    rcx,[rsp+0x98]
   14000a2cf:	xor    r8d,r8d
   14000a2d2:	mov    rdx,rax
   14000a2d5:	call   0x140001910
   14000a2da:	lea    rcx,[rsp+0x48]
   14000a2df:	mov    rdx,rax
   14000a2e2:	call   QWORD PTR [rip+0x15270]        # 0x14001f558
   14000a2e8:	lea    rcx,[rsp+0x98]
   14000a2f0:	call   QWORD PTR [rip+0x152c2]        # 0x14001f5b8
   14000a2f6:	lea    rcx,[rsp+0xa0]
   14000a2fe:	call   QWORD PTR [rip+0x152b4]        # 0x14001f5b8
   14000a304:	lea    rcx,[rsp+0x148]
   14000a30c:	call   QWORD PTR [rip+0x152a6]        # 0x14001f5b8
   14000a312:	lea    rcx,[rsp+0x20]
   14000a317:	mov    dl,0x26
   14000a319:	call   QWORD PTR [rip+0x15281]        # 0x14001f5a0
   14000a31f:	test   al,al
   14000a321:	je     0x14000a37c
   14000a323:	lea    rdx,[rip+0x15376]        # 0x14001f6a0
   14000a32a:	lea    rcx,[rsp+0x20]
   14000a32f:	call   QWORD PTR [rip+0x15273]        # 0x14001f5a8
   14000a335:	test   al,al
   14000a337:	je     0x14000a35b
   14000a339:	mov    rax,QWORD PTR [rsp+0x20]
   14000a33e:	lea    rdx,[rsp+0x150]
   14000a346:	lea    rcx,[rsp+0x20]
   14000a34b:	mov    r8d,DWORD PTR [rax+0x4]
   14000a34f:	sub    r8d,0x2
   14000a353:	call   QWORD PTR [rip+0x15257]        # 0x14001f5b0
   14000a359:	jmp    0x14000a38f
   14000a35b:	mov    rax,QWORD PTR [rsp+0x20]
   14000a360:	lea    rdx,[rsp+0x150]
   14000a368:	lea    rcx,[rsp+0x20]
   14000a36d:	mov    r8d,DWORD PTR [rax+0x4]
   14000a371:	dec    r8d
   14000a374:	call   QWORD PTR [rip+0x15236]        # 0x14001f5b0
   14000a37a:	jmp    0x14000a38f
   14000a37c:	lea    rdx,[rsp+0x20]
   14000a381:	lea    rcx,[rsp+0x150]
   14000a389:	call   QWORD PTR [rip+0x15249]        # 0x14001f5d8
   14000a38f:	lea    rax,[rsp+0x150]
   14000a397:	lea    rdx,[rsp+0x70]
   14000a39c:	lea    rcx,[rsp+0xb8]
   14000a3a4:	mov    QWORD PTR [rsp+0xa8],rax
   14000a3ac:	lea    rax,[rsp+0xa8]
   14000a3b4:	mov    QWORD PTR [rsp+0xb0],r15
   14000a3bc:	mov    QWORD PTR [rsp+0xb8],rax
   14000a3c4:	lea    rax,[rsp+0x40]
   14000a3c9:	mov    QWORD PTR [rsp+0xc0],rax
   14000a3d1:	call   0x140002f10
   14000a3d6:	lea    rdx,[rsp+0x70]
   14000a3db:	lea    rcx,[rsp+0x90]
   14000a3e3:	call   QWORD PTR [rip+0x151ef]        # 0x14001f5d8
   14000a3e9:	lea    rcx,[rsp+0x80]
   14000a3f1:	xor    r8d,r8d
   14000a3f4:	mov    rdx,rax
   14000a3f7:	call   0x140001910
   14000a3fc:	lea    rcx,[rsp+0x58]
   14000a401:	mov    rdx,rax
   14000a404:	call   QWORD PTR [rip+0x1514e]        # 0x14001f558
   14000a40a:	lea    rcx,[rsp+0x80]
   14000a412:	call   QWORD PTR [rip+0x151a0]        # 0x14001f5b8
   14000a418:	lea    rcx,[rsp+0x90]
   14000a420:	call   QWORD PTR [rip+0x15192]        # 0x14001f5b8
   14000a426:	lea    rcx,[rsp+0x70]
   14000a42b:	call   QWORD PTR [rip+0x15187]        # 0x14001f5b8
   14000a431:	lea    rcx,[rsp+0x150]
   14000a439:	call   QWORD PTR [rip+0x15179]        # 0x14001f5b8
   14000a43f:	mov    r11,QWORD PTR [rdi]
   14000a442:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000a446:	cmp    edx,DWORD PTR [r11+0x4]
   14000a44a:	jge    0x14000a46b
   14000a44c:	mov    rax,QWORD PTR [r11+0x10]
   14000a450:	lea    rcx,[rdx+rdx*2]
   14000a454:	lea    rcx,[rax+rcx*8]
   14000a458:	cmp    DWORD PTR [rcx+r11*1+0x4],0x10
   14000a45e:	jne    0x14000a46b
   14000a460:	lea    eax,[rdx+0x1]
   14000a463:	mov    BYTE PTR [rsp+0x60],0x1
   14000a468:	mov    DWORD PTR [rdi+0x8],eax
   14000a46b:	mov    rax,QWORD PTR [r14+0x40]
   14000a46f:	lea    rcx,[r14+0x40]
   14000a473:	mov    edx,DWORD PTR [rax]
   14000a475:	cmp    edx,0x1
   14000a478:	je     0x14000a54b
   14000a47e:	test   edx,edx
   14000a480:	je     0x14000a54b
   14000a486:	mov    edx,0x7fffffff
   14000a48b:	mov    r8d,0x1
   14000a491:	call   0x1400034c0
   14000a496:	mov    ecx,0x48
   14000a49b:	mov    rsi,rax
   14000a49e:	call   0x14001e1c6
   14000a4a3:	mov    rbx,rax
   14000a4a6:	test   rax,rax
   14000a4a9:	je     0x14000a543
   14000a4af:	lea    rdx,[rsp+0x20]
   14000a4b4:	mov    rcx,rax
   14000a4b7:	call   QWORD PTR [rip+0x1511b]        # 0x14001f5d8
   14000a4bd:	lea    rcx,[rbx+0x8]
   14000a4c1:	lea    rdx,[rsp+0x28]
   14000a4c6:	call   QWORD PTR [rip+0x1510c]        # 0x14001f5d8
   14000a4cc:	mov    ecx,DWORD PTR [rsp+0x30]
   14000a4d0:	lea    rdx,[rsp+0x40]
   14000a4d5:	xor    ecx,DWORD PTR [rbx+0x10]
   14000a4d8:	and    ecx,0x1
   14000a4db:	xor    DWORD PTR [rbx+0x10],ecx
   14000a4de:	mov    ecx,DWORD PTR [rsp+0x30]
   14000a4e2:	mov    eax,DWORD PTR [rbx+0x10]
   14000a4e5:	xor    ecx,eax
   14000a4e7:	and    ecx,0x2
   14000a4ea:	xor    ecx,eax
   14000a4ec:	mov    DWORD PTR [rbx+0x10],ecx
   14000a4ef:	mov    eax,DWORD PTR [rsp+0x34]
   14000a4f3:	lea    rcx,[rbx+0x20]
   14000a4f7:	mov    DWORD PTR [rbx+0x14],eax
   14000a4fa:	mov    eax,DWORD PTR [rsp+0x38]
   14000a4fe:	mov    DWORD PTR [rbx+0x18],eax
   14000a501:	call   QWORD PTR [rip+0x150d1]        # 0x14001f5d8
   14000a507:	lea    rcx,[rbx+0x28]
   14000a50b:	lea    rdx,[rsp+0x48]
   14000a510:	call   QWORD PTR [rip+0x150c2]        # 0x14001f5d8
   14000a516:	lea    rcx,[rbx+0x30]
   14000a51a:	lea    rdx,[rsp+0x50]
   14000a51f:	call   QWORD PTR [rip+0x150b3]        # 0x14001f5d8
   14000a525:	lea    rcx,[rbx+0x38]
   14000a529:	lea    rdx,[rsp+0x58]
   14000a52e:	call   QWORD PTR [rip+0x150a4]        # 0x14001f5d8
   14000a534:	movzx  r11d,BYTE PTR [rsp+0x60]
   14000a53a:	mov    BYTE PTR [rbx+0x40],r11b
   14000a53e:	mov    QWORD PTR [rsi],rbx
   14000a541:	jmp    0x14000a578
   14000a543:	mov    rbx,r13
   14000a546:	mov    QWORD PTR [rsi],rbx
   14000a549:	jmp    0x14000a578
   14000a54b:	call   QWORD PTR [rip+0x14c4f]        # 0x14001f1a0
   14000a551:	mov    ecx,0x48
   14000a556:	mov    rbx,rax
   14000a559:	call   0x14001e1c6
   14000a55e:	test   rax,rax
   14000a561:	je     0x14000a572
   14000a563:	lea    rdx,[rsp+0x20]
   14000a568:	mov    rcx,rax
   14000a56b:	call   0x140001b60
   14000a570:	jmp    0x14000a575
   14000a572:	mov    rax,r13
   14000a575:	mov    QWORD PTR [rbx],rax
   14000a578:	mov    edx,0x5a
   14000a57d:	mov    rcx,rdi
   14000a580:	call   0x140002990
   14000a585:	test   al,al
   14000a587:	je     0x14000a5e0
   14000a589:	lea    rcx,[rsp+0x58]
   14000a58e:	call   QWORD PTR [rip+0x15024]        # 0x14001f5b8
   14000a594:	lea    rcx,[rsp+0x50]
   14000a599:	call   QWORD PTR [rip+0x15019]        # 0x14001f5b8
   14000a59f:	lea    rcx,[rsp+0x48]
   14000a5a4:	call   QWORD PTR [rip+0x1500e]        # 0x14001f5b8
   14000a5aa:	lea    rcx,[rsp+0x40]
   14000a5af:	call   QWORD PTR [rip+0x15003]        # 0x14001f5b8
   14000a5b5:	lea    rcx,[rsp+0x28]
   14000a5ba:	call   QWORD PTR [rip+0x14ff8]        # 0x14001f5b8
   14000a5c0:	lea    rcx,[rsp+0x20]
   14000a5c5:	call   QWORD PTR [rip+0x14fed]        # 0x14001f5b8
   14000a5cb:	mov    r11,QWORD PTR [rdi]
   14000a5ce:	mov    eax,DWORD PTR [r11+0x4]
   14000a5d2:	cmp    DWORD PTR [rdi+0x8],eax
   14000a5d5:	jl     0x140009f74
   14000a5db:	jmp    0x14000a666
   14000a5e0:	lea    rcx,[rsp+0x58]
   14000a5e5:	call   QWORD PTR [rip+0x14fcd]        # 0x14001f5b8
   14000a5eb:	lea    rcx,[rsp+0x50]
   14000a5f0:	call   QWORD PTR [rip+0x14fc2]        # 0x14001f5b8
   14000a5f6:	lea    rcx,[rsp+0x48]
   14000a5fb:	call   QWORD PTR [rip+0x14fb7]        # 0x14001f5b8
   14000a601:	lea    rcx,[rsp+0x40]
   14000a606:	call   QWORD PTR [rip+0x14fac]        # 0x14001f5b8
   14000a60c:	lea    rcx,[rsp+0x28]
   14000a611:	call   QWORD PTR [rip+0x14fa1]        # 0x14001f5b8
   14000a617:	lea    rcx,[rsp+0x20]
   14000a61c:	call   QWORD PTR [rip+0x14f96]        # 0x14001f5b8
   14000a622:	jmp    0x14000a666
   14000a624:	lea    rcx,[rsp+0x58]
   14000a629:	call   QWORD PTR [rip+0x14f89]        # 0x14001f5b8
   14000a62f:	lea    rcx,[rsp+0x50]
   14000a634:	call   QWORD PTR [rip+0x14f7e]        # 0x14001f5b8
   14000a63a:	lea    rcx,[rsp+0x48]
   14000a63f:	call   QWORD PTR [rip+0x14f73]        # 0x14001f5b8
   14000a645:	lea    rcx,[rsp+0x40]
   14000a64a:	call   QWORD PTR [rip+0x14f68]        # 0x14001f5b8
   14000a650:	lea    rcx,[rsp+0x28]
   14000a655:	call   QWORD PTR [rip+0x14f5d]        # 0x14001f5b8
   14000a65b:	lea    rcx,[rsp+0x20]
   14000a660:	call   QWORD PTR [rip+0x14f52]        # 0x14001f5b8
   14000a666:	mov    r12,QWORD PTR [rsp+0x100]
   14000a66e:	mov    rbp,QWORD PTR [rsp+0x118]
   14000a676:	mov    rsi,QWORD PTR [rsp+0x110]
   14000a67e:	mov    r15,QWORD PTR [rsp+0xf8]
   14000a686:	mov    rcx,QWORD PTR [r14+0x40]
   14000a68a:	mov    rdi,QWORD PTR [rsp+0x108]
   14000a692:	mov    eax,DWORD PTR [rcx+0x8]
   14000a695:	cmp    DWORD PTR [rcx+0xc],eax
   14000a698:	je     0x14000a725
   14000a69e:	mov    eax,DWORD PTR [rcx]
   14000a6a0:	cmp    eax,0x1
   14000a6a3:	je     0x14000a6b5
   14000a6a5:	test   eax,eax
   14000a6a7:	je     0x14000a6b5
   14000a6a9:	mov    edx,DWORD PTR [rcx+0x4]
   14000a6ac:	lea    rcx,[r14+0x40]
   14000a6b0:	call   0x140003620
   14000a6b5:	mov    rcx,QWORD PTR [r14+0x40]
   14000a6b9:	lea    rdx,[rip+0x15430]        # 0x14001faf0
   14000a6c0:	movsxd rax,DWORD PTR [rcx+0xc]
   14000a6c4:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   14000a6c9:	add    rcx,0x28
   14000a6cd:	call   QWORD PTR [rip+0x14f1d]        # 0x14001f5f0
   14000a6d3:	test   eax,eax
   14000a6d5:	jne    0x14000a725
   14000a6d7:	mov    rcx,QWORD PTR [r14+0x40]
   14000a6db:	mov    eax,DWORD PTR [rcx]
   14000a6dd:	cmp    eax,0x1
   14000a6e0:	je     0x14000a6f2
   14000a6e2:	test   eax,eax
   14000a6e4:	je     0x14000a6f2
   14000a6e6:	mov    edx,DWORD PTR [rcx+0x4]
   14000a6e9:	lea    rcx,[r14+0x40]
   14000a6ed:	call   0x140003620
   14000a6f2:	mov    rdx,QWORD PTR [r14+0x40]
   14000a6f6:	lea    r8,[rsp+0x140]
   14000a6fe:	lea    rcx,[r14+0x40]
   14000a702:	movsxd rax,DWORD PTR [rdx+0xc]
   14000a706:	lea    rdx,[rdx+rax*8+0x8]
   14000a70b:	mov    QWORD PTR [rsp+0x140],rdx
   14000a713:	lea    rdx,[rsp+0x148]
   14000a71b:	call   0x1400081f0
   14000a720:	mov    BYTE PTR [r14+0x65],0x1
   14000a725:	add    rsp,0x120
   14000a72c:	pop    r14
   14000a72e:	pop    r13
   14000a730:	pop    rbx
   14000a731:	ret    
   14000a732:	int3   
   14000a733:	int3   
   14000a734:	int3   
   14000a735:	int3   
   14000a736:	int3   
   14000a737:	int3   
   14000a738:	int3   
   14000a739:	int3   
   14000a73a:	int3   
   14000a73b:	int3   
   14000a73c:	int3   
   14000a73d:	int3   
   14000a73e:	int3   
   14000a73f:	int3   
   14000a740:	mov    rax,rsp
   14000a743:	push   rdi
   14000a744:	sub    rsp,0x90
   14000a74b:	mov    QWORD PTR [rax+0x18],rbx
   14000a74f:	mov    QWORD PTR [rax-0x10],rbp
   14000a753:	mov    QWORD PTR [rax-0x18],rsi
   14000a757:	mov    QWORD PTR [rax-0x20],r12
   14000a75b:	mov    QWORD PTR [rax-0x28],r13
   14000a75f:	mov    QWORD PTR [rax-0x30],r14
   14000a763:	movzx  r14d,r8b
   14000a767:	mov    rsi,rdx
   14000a76a:	mov    rdi,rcx
   14000a76d:	mov    BYTE PTR [rdx+0x4d],0x0
   14000a771:	mov    BYTE PTR [rdx+0x4e],0x0
   14000a775:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000a780:	mov    r9,QWORD PTR [rdi]
   14000a783:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000a787:	mov    r10d,DWORD PTR [r9+0x4]
   14000a78b:	cmp    edx,r10d
   14000a78e:	jge    0x14000a7ac
   14000a790:	mov    rax,QWORD PTR [r9+0x10]
   14000a794:	lea    rcx,[rdx+rdx*2]
   14000a798:	lea    rcx,[rax+rcx*8]
   14000a79c:	cmp    DWORD PTR [rcx+r9*1+0x4],0x33
   14000a7a2:	jne    0x14000a7ac
   14000a7a4:	lea    eax,[rdx+0x1]
   14000a7a7:	mov    DWORD PTR [rdi+0x8],eax
   14000a7aa:	jmp    0x14000a780
   14000a7ac:	cmp    edx,r10d
   14000a7af:	jge    0x14000a7d1
   14000a7b1:	mov    rax,QWORD PTR [r9+0x10]
   14000a7b5:	lea    rcx,[rdx+rdx*2]
   14000a7b9:	lea    rcx,[rax+rcx*8]
   14000a7bd:	cmp    DWORD PTR [rcx+r9*1+0x4],0x35
   14000a7c3:	jne    0x14000a7d1
   14000a7c5:	lea    eax,[rdx+0x1]
   14000a7c8:	mov    DWORD PTR [rdi+0x8],eax
   14000a7cb:	mov    BYTE PTR [rsi+0x4e],0x1
   14000a7cf:	jmp    0x14000a780
   14000a7d1:	cmp    edx,r10d
   14000a7d4:	jge    0x14000a7f6
   14000a7d6:	mov    rax,QWORD PTR [r9+0x10]
   14000a7da:	lea    rcx,[rdx+rdx*2]
   14000a7de:	lea    rcx,[rax+rcx*8]
   14000a7e2:	cmp    DWORD PTR [rcx+r9*1+0x4],0x28
   14000a7e8:	jne    0x14000a7f6
   14000a7ea:	lea    eax,[rdx+0x1]
   14000a7ed:	mov    DWORD PTR [rdi+0x8],eax
   14000a7f0:	mov    BYTE PTR [rsi+0x4d],0x1
   14000a7f4:	jmp    0x14000a780
   14000a7f6:	cmp    edx,r10d
   14000a7f9:	jge    0x14000a866
   14000a7fb:	mov    rax,QWORD PTR [r9+0x10]
   14000a7ff:	lea    rcx,[rdx+rdx*2]
   14000a803:	lea    rdx,[rax+rcx*8]
   14000a807:	mov    ecx,DWORD PTR [rdx+r9*1+0x4]
   14000a80c:	sub    ecx,0x85
   14000a812:	je     0x14000a85a
   14000a814:	sub    ecx,0x1
   14000a817:	je     0x14000a84e
   14000a819:	sub    ecx,0x2
   14000a81c:	je     0x14000a842
   14000a81e:	sub    ecx,0x1
   14000a821:	je     0x14000a836
   14000a823:	cmp    ecx,0x1
   14000a826:	jne    0x14000a866
   14000a828:	mov    BYTE PTR [rsi+0x62],cl
   14000a82b:	mov    BYTE PTR [rsi+0x61],cl
   14000a82e:	inc    DWORD PTR [rdi+0x8]
   14000a831:	jmp    0x14000a780
   14000a836:	mov    BYTE PTR [rsi+0x61],0x1
   14000a83a:	inc    DWORD PTR [rdi+0x8]
   14000a83d:	jmp    0x14000a780
   14000a842:	mov    BYTE PTR [rsi+0x60],0x1
   14000a846:	inc    DWORD PTR [rdi+0x8]
   14000a849:	jmp    0x14000a780
   14000a84e:	mov    BYTE PTR [rsi+0x63],0x1
   14000a852:	inc    DWORD PTR [rdi+0x8]
   14000a855:	jmp    0x14000a780
   14000a85a:	mov    BYTE PTR [rsi+0x64],0x1
   14000a85e:	inc    DWORD PTR [rdi+0x8]
   14000a861:	jmp    0x14000a780
   14000a866:	mov    rdx,rsi
   14000a869:	mov    rcx,rdi
   14000a86c:	call   0x140005350
   14000a871:	test   al,al
   14000a873:	jne    0x14000a780
   14000a879:	mov    rdx,QWORD PTR [rdi]
   14000a87c:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a880:	xor    ebp,ebp
   14000a882:	cmp    eax,DWORD PTR [rdx+0x4]
   14000a885:	jge    0x14000a89a
   14000a887:	lea    rcx,[rax+rax*2]
   14000a88b:	mov    rax,QWORD PTR [rdx+0x10]
   14000a88f:	lea    rcx,[rax+rcx*8]
   14000a893:	mov    r12d,DWORD PTR [rcx+rdx*1+0x4]
   14000a898:	jmp    0x14000a89d
   14000a89a:	mov    r12d,ebp
   14000a89d:	lea    rdx,[rsp+0x20]
   14000a8a2:	mov    rcx,rdi
   14000a8a5:	call   0x140004ba0
   14000a8aa:	mov    rcx,rsi
   14000a8ad:	mov    rdx,rax
   14000a8b0:	mov    rbx,rax
   14000a8b3:	call   QWORD PTR [rip+0x14c9f]        # 0x14001f558
   14000a8b9:	lea    rdx,[rbx+0x8]
   14000a8bd:	lea    rcx,[rsi+0x8]
   14000a8c1:	call   QWORD PTR [rip+0x14c91]        # 0x14001f558
   14000a8c7:	mov    ecx,DWORD PTR [rsi+0x10]
   14000a8ca:	xor    ecx,DWORD PTR [rbx+0x10]
   14000a8cd:	and    ecx,0x1
   14000a8d0:	xor    DWORD PTR [rsi+0x10],ecx
   14000a8d3:	mov    eax,DWORD PTR [rsi+0x10]
   14000a8d6:	mov    ecx,eax
   14000a8d8:	xor    ecx,DWORD PTR [rbx+0x10]
   14000a8db:	and    ecx,0x2
   14000a8de:	xor    ecx,eax
   14000a8e0:	mov    DWORD PTR [rsi+0x10],ecx
   14000a8e3:	mov    eax,DWORD PTR [rbx+0x14]
   14000a8e6:	lea    rcx,[rsp+0x28]
   14000a8eb:	mov    DWORD PTR [rsi+0x14],eax
   14000a8ee:	mov    eax,DWORD PTR [rbx+0x18]
   14000a8f1:	mov    DWORD PTR [rsi+0x18],eax
   14000a8f4:	call   QWORD PTR [rip+0x14cbe]        # 0x14001f5b8
   14000a8fa:	lea    rcx,[rsp+0x20]
   14000a8ff:	call   QWORD PTR [rip+0x14cb3]        # 0x14001f5b8
   14000a905:	mov    r11,QWORD PTR [rsi]
   14000a908:	cmp    DWORD PTR [r11+0x4],ebp
   14000a90c:	jne    0x14000a92f
   14000a90e:	cmp    r12d,0x1d
   14000a912:	jne    0x14000a925
   14000a914:	lea    rdx,[rip+0x1526d]        # 0x14001fb88
   14000a91b:	mov    rcx,rdi
   14000a91e:	call   0x140019c50
   14000a923:	jmp    0x14000a92f
   14000a925:	xor    edx,edx
   14000a927:	mov    rcx,rdi
   14000a92a:	call   0x140019c50
   14000a92f:	mov    rdx,QWORD PTR [rdi]
   14000a932:	movsxd r8,DWORD PTR [rdi+0x8]
   14000a936:	mov    QWORD PTR [rsp+0x60],r15
   14000a93b:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000a93f:	jge    0x14000aa2c
   14000a945:	mov    rax,QWORD PTR [rdx+0x10]
   14000a949:	lea    rcx,[r8+r8*2]
   14000a94d:	lea    rcx,[rax+rcx*8]
   14000a951:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x9
   14000a956:	jne    0x14000aa2c
   14000a95c:	lea    eax,[r8+0x1]
   14000a960:	lea    r15,[rsi+0x30]
   14000a964:	mov    rdx,rsi
   14000a967:	mov    rcx,r15
   14000a96a:	mov    DWORD PTR [rdi+0x8],eax
   14000a96d:	call   QWORD PTR [rip+0x14be5]        # 0x14001f558
   14000a973:	mov    r12d,DWORD PTR [rsi+0x10]
   14000a977:	lea    rdx,[rip+0x15206]        # 0x14001fb84
   14000a97e:	lea    rcx,[rsp+0xa0]
   14000a986:	shr    r12d,1
   14000a989:	or     r8d,0xffffffff
   14000a98d:	and    r12b,0x1
   14000a991:	call   QWORD PTR [rip+0x14bb9]        # 0x14001f550
   14000a997:	lea    rdx,[rsp+0xa0]
   14000a99f:	lea    rcx,[rsp+0x20]
   14000a9a4:	call   QWORD PTR [rip+0x14c2e]        # 0x14001f5d8
   14000a9aa:	lea    rdx,[rsp+0x20]
   14000a9af:	lea    rcx,[rsp+0x28]
   14000a9b4:	call   QWORD PTR [rip+0x14c1e]        # 0x14001f5d8
   14000a9ba:	and    DWORD PTR [rsp+0x30],0xfffffffc
   14000a9bf:	lea    rdx,[rsp+0x20]
   14000a9c4:	mov    rcx,rsi
   14000a9c7:	mov    DWORD PTR [rsp+0x34],ebp
   14000a9cb:	mov    DWORD PTR [rsp+0x38],ebp
   14000a9cf:	call   QWORD PTR [rip+0x14b83]        # 0x14001f558
   14000a9d5:	lea    rdx,[rsp+0x28]
   14000a9da:	lea    rcx,[rsi+0x8]
   14000a9de:	call   QWORD PTR [rip+0x14b74]        # 0x14001f558
   14000a9e4:	mov    eax,DWORD PTR [rsp+0x34]
   14000a9e8:	mov    r11d,DWORD PTR [rsp+0x30]
   14000a9ed:	xor    r11d,DWORD PTR [rsi+0x10]
   14000a9f1:	mov    DWORD PTR [rsi+0x14],eax
   14000a9f4:	mov    eax,DWORD PTR [rsp+0x38]
   14000a9f8:	and    r11d,0x3
   14000a9fc:	lea    rcx,[rsp+0x28]
   14000aa01:	mov    DWORD PTR [rsi+0x18],eax
   14000aa04:	xor    DWORD PTR [rsi+0x10],r11d
   14000aa08:	call   QWORD PTR [rip+0x14baa]        # 0x14001f5b8
   14000aa0e:	lea    rcx,[rsp+0x20]
   14000aa13:	call   QWORD PTR [rip+0x14b9f]        # 0x14001f5b8
   14000aa19:	lea    rcx,[rsp+0xa0]
   14000aa21:	call   QWORD PTR [rip+0x14b91]        # 0x14001f5b8
   14000aa27:	jmp    0x14000ac19
   14000aa2c:	lea    rdx,[rsp+0x20]
   14000aa31:	mov    rcx,rdi
   14000aa34:	call   0x140004ba0
   14000aa39:	mov    r11,QWORD PTR [rsp+0x20]
   14000aa3e:	cmp    DWORD PTR [r11+0x4],ebp
   14000aa42:	je     0x14000abad
   14000aa48:	nop    DWORD PTR [rax+rax*1+0x0]
   14000aa50:	mov    edx,0x1
   14000aa55:	mov    rcx,rdi
   14000aa58:	call   0x140002960
   14000aa5d:	cmp    eax,0x9
   14000aa60:	je     0x14000abad
   14000aa66:	mov    edx,DWORD PTR [rsi+0x14]
   14000aa69:	mov    ecx,edx
   14000aa6b:	sub    ecx,0x85
   14000aa71:	je     0x14000aaed
   14000aa73:	sub    ecx,0x1
   14000aa76:	je     0x14000aae7
   14000aa78:	sub    ecx,0x2
   14000aa7b:	je     0x14000aae1
   14000aa7d:	sub    ecx,0x1
   14000aa80:	je     0x14000aadb
   14000aa82:	cmp    ecx,0x1
   14000aa85:	jne    0x14000aa8f
   14000aa87:	mov    BYTE PTR [rsi+0x62],cl
   14000aa8a:	mov    BYTE PTR [rsi+0x61],cl
   14000aa8d:	jmp    0x14000aaf1
   14000aa8f:	cmp    edx,0x83
   14000aa95:	jne    0x14000aaa3
   14000aa97:	xor    edx,edx
   14000aa99:	mov    rcx,rdi
   14000aa9c:	call   0x140019c50
   14000aaa1:	jmp    0x14000aaf1
   14000aaa3:	cmp    edx,0x84
   14000aaa9:	jne    0x14000aab7
   14000aaab:	xor    edx,edx
   14000aaad:	mov    rcx,rdi
   14000aab0:	call   0x140019c50
   14000aab5:	jmp    0x14000aaf1
   14000aab7:	mov    rax,QWORD PTR [rsi+0x28]
   14000aabb:	cmp    DWORD PTR [rax+0x4],ebp
   14000aabe:	je     0x14000aacc
   14000aac0:	lea    rcx,[rsi+0x28]
   14000aac4:	mov    dl,0x20
   14000aac6:	call   QWORD PTR [rip+0x14acc]        # 0x14001f598
   14000aacc:	lea    rcx,[rsi+0x28]
   14000aad0:	mov    rdx,rsi
   14000aad3:	call   QWORD PTR [rip+0x14b07]        # 0x14001f5e0
   14000aad9:	jmp    0x14000aaf1
   14000aadb:	mov    BYTE PTR [rsi+0x61],0x1
   14000aadf:	jmp    0x14000aaf1
   14000aae1:	mov    BYTE PTR [rsi+0x60],0x1
   14000aae5:	jmp    0x14000aaf1
   14000aae7:	mov    BYTE PTR [rsi+0x63],0x1
   14000aaeb:	jmp    0x14000aaf1
   14000aaed:	mov    BYTE PTR [rsi+0x64],0x1
   14000aaf1:	lea    rdx,[rsp+0x20]
   14000aaf6:	mov    rcx,rsi
   14000aaf9:	call   QWORD PTR [rip+0x14a59]        # 0x14001f558
   14000aaff:	lea    rdx,[rsp+0x28]
   14000ab04:	lea    rcx,[rsi+0x8]
   14000ab08:	call   QWORD PTR [rip+0x14a4a]        # 0x14001f558
   14000ab0e:	mov    eax,DWORD PTR [rsp+0x34]
   14000ab12:	mov    r11d,DWORD PTR [rsp+0x30]
   14000ab17:	xor    r11d,DWORD PTR [rsi+0x10]
   14000ab1b:	mov    DWORD PTR [rsi+0x14],eax
   14000ab1e:	mov    eax,DWORD PTR [rsp+0x38]
   14000ab22:	and    r11d,0x3
   14000ab26:	lea    rdx,[rsp+0x40]
   14000ab2b:	mov    rcx,rdi
   14000ab2e:	xor    DWORD PTR [rsi+0x10],r11d
   14000ab32:	mov    DWORD PTR [rsi+0x18],eax
   14000ab35:	call   0x140004ba0
   14000ab3a:	lea    rcx,[rsp+0x20]
   14000ab3f:	mov    rdx,rax
   14000ab42:	mov    rbx,rax
   14000ab45:	call   QWORD PTR [rip+0x14a0d]        # 0x14001f558
   14000ab4b:	lea    rdx,[rbx+0x8]
   14000ab4f:	lea    rcx,[rsp+0x28]
   14000ab54:	call   QWORD PTR [rip+0x149fe]        # 0x14001f558
   14000ab5a:	mov    edx,DWORD PTR [rsp+0x30]
   14000ab5e:	mov    ecx,edx
   14000ab60:	xor    ecx,DWORD PTR [rbx+0x10]
   14000ab63:	and    ecx,0x1
   14000ab66:	xor    edx,ecx
   14000ab68:	lea    rcx,[rsp+0x48]
   14000ab6d:	mov    DWORD PTR [rsp+0x30],edx
   14000ab71:	mov    eax,edx
   14000ab73:	xor    eax,DWORD PTR [rbx+0x10]
   14000ab76:	and    eax,0x2
   14000ab79:	xor    edx,eax
   14000ab7b:	mov    DWORD PTR [rsp+0x30],edx
   14000ab7f:	mov    eax,DWORD PTR [rbx+0x14]
   14000ab82:	mov    DWORD PTR [rsp+0x34],eax
   14000ab86:	mov    eax,DWORD PTR [rbx+0x18]
   14000ab89:	mov    DWORD PTR [rsp+0x38],eax
   14000ab8d:	call   QWORD PTR [rip+0x14a25]        # 0x14001f5b8
   14000ab93:	lea    rcx,[rsp+0x40]
   14000ab98:	call   QWORD PTR [rip+0x14a1a]        # 0x14001f5b8
   14000ab9e:	mov    r11,QWORD PTR [rsp+0x20]
   14000aba3:	cmp    DWORD PTR [r11+0x4],ebp
   14000aba7:	jne    0x14000aa50
   14000abad:	mov    r8,QWORD PTR [rdi]
   14000abb0:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000abb4:	cmp    edx,DWORD PTR [r8+0x4]
   14000abb8:	jge    0x14000abd6
   14000abba:	mov    rax,QWORD PTR [r8+0x10]
   14000abbe:	lea    rcx,[rdx+rdx*2]
   14000abc2:	lea    rcx,[rax+rcx*8]
   14000abc6:	cmp    DWORD PTR [rcx+r8*1+0x4],0x9
   14000abcc:	jne    0x14000abd6
   14000abce:	lea    eax,[rdx+0x1]
   14000abd1:	mov    DWORD PTR [rdi+0x8],eax
   14000abd4:	jmp    0x14000abe5
   14000abd6:	lea    rdx,[rip+0x14f83]        # 0x14001fb60
   14000abdd:	mov    rcx,rdi
   14000abe0:	call   0x140019c50
   14000abe5:	lea    r15,[rsi+0x30]
   14000abe9:	lea    rdx,[rsp+0x20]
   14000abee:	mov    rcx,r15
   14000abf1:	call   QWORD PTR [rip+0x14961]        # 0x14001f558
   14000abf7:	mov    r12d,DWORD PTR [rsp+0x30]
   14000abfc:	lea    rcx,[rsp+0x28]
   14000ac01:	shr    r12d,1
   14000ac04:	and    r12b,0x1
   14000ac08:	call   QWORD PTR [rip+0x149aa]        # 0x14001f5b8
   14000ac0e:	lea    rcx,[rsp+0x20]
   14000ac13:	call   QWORD PTR [rip+0x1499f]        # 0x14001f5b8
   14000ac19:	cmp    DWORD PTR [rsi+0x18],0x1
   14000ac1d:	jne    0x14000acfe
   14000ac23:	lea    rdx,[rsi+0x8]
   14000ac27:	lea    rcx,[rsp+0xa8]
   14000ac2f:	call   QWORD PTR [rip+0x149a3]        # 0x14001f5d8
   14000ac35:	lea    rdx,[rip+0x14b9c]        # 0x14001f7d8
   14000ac3c:	lea    rcx,[rsp+0xa0]
   14000ac44:	or     r8d,0xffffffff
   14000ac48:	call   QWORD PTR [rip+0x14902]        # 0x14001f550
   14000ac4e:	lea    rdx,[rsp+0xa0]
   14000ac56:	lea    rcx,[rsp+0x20]
   14000ac5b:	call   QWORD PTR [rip+0x14977]        # 0x14001f5d8
   14000ac61:	lea    rdx,[rsp+0x20]
   14000ac66:	lea    rcx,[rsp+0x28]
   14000ac6b:	call   QWORD PTR [rip+0x14967]        # 0x14001f5d8
   14000ac71:	and    DWORD PTR [rsp+0x30],0xfffffffc
   14000ac76:	lea    rdx,[rsp+0x20]
   14000ac7b:	mov    rcx,rsi
   14000ac7e:	mov    DWORD PTR [rsp+0x34],ebp
   14000ac82:	mov    DWORD PTR [rsp+0x38],ebp
   14000ac86:	call   QWORD PTR [rip+0x148cc]        # 0x14001f558
   14000ac8c:	lea    rdx,[rsp+0x28]
   14000ac91:	lea    rcx,[rsi+0x8]
   14000ac95:	call   QWORD PTR [rip+0x148bd]        # 0x14001f558
   14000ac9b:	mov    eax,DWORD PTR [rsp+0x34]
   14000ac9f:	mov    r11d,DWORD PTR [rsp+0x30]
   14000aca4:	xor    r11d,DWORD PTR [rsi+0x10]
   14000aca8:	mov    DWORD PTR [rsi+0x14],eax
   14000acab:	mov    eax,DWORD PTR [rsp+0x38]
   14000acaf:	and    r11d,0x3
   14000acb3:	lea    rcx,[rsp+0x28]
   14000acb8:	mov    DWORD PTR [rsi+0x18],eax
   14000acbb:	xor    DWORD PTR [rsi+0x10],r11d
   14000acbf:	call   QWORD PTR [rip+0x148f3]        # 0x14001f5b8
   14000acc5:	lea    rcx,[rsp+0x20]
   14000acca:	call   QWORD PTR [rip+0x148e8]        # 0x14001f5b8
   14000acd0:	lea    rcx,[rsp+0xa0]
   14000acd8:	call   QWORD PTR [rip+0x148da]        # 0x14001f5b8
   14000acde:	lea    rdx,[rsp+0xa8]
   14000ace6:	lea    rcx,[rsi+0x8]
   14000acea:	call   QWORD PTR [rip+0x14868]        # 0x14001f558
   14000acf0:	lea    rcx,[rsp+0xa8]
   14000acf8:	call   QWORD PTR [rip+0x148ba]        # 0x14001f5b8
   14000acfe:	lea    rcx,[rsp+0xa0]
   14000ad06:	xor    r8d,r8d
   14000ad09:	mov    rdx,rsi
   14000ad0c:	call   0x140001910
   14000ad11:	lea    rcx,[rsi+0x20]
   14000ad15:	mov    rdx,rax
   14000ad18:	call   QWORD PTR [rip+0x1483a]        # 0x14001f558
   14000ad1e:	lea    rcx,[rsp+0xa0]
   14000ad26:	call   QWORD PTR [rip+0x1488c]        # 0x14001f5b8
   14000ad2c:	mov    r11,QWORD PTR [rdi]
   14000ad2f:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000ad33:	cmp    edx,DWORD PTR [r11+0x4]
   14000ad37:	jge    0x14000ad55
   14000ad39:	mov    rax,QWORD PTR [r11+0x10]
   14000ad3d:	lea    rcx,[rdx+rdx*2]
   14000ad41:	lea    rcx,[rax+rcx*8]
   14000ad45:	cmp    DWORD PTR [rcx+r11*1+0x4],0xa
   14000ad4b:	jne    0x14000ad55
   14000ad4d:	lea    eax,[rdx+0x1]
   14000ad50:	mov    DWORD PTR [rdi+0x8],eax
   14000ad53:	jmp    0x14000ad93
   14000ad55:	mov    rdx,rsi
   14000ad58:	mov    rcx,rdi
   14000ad5b:	call   0x140009f30
   14000ad60:	mov    r11,QWORD PTR [rdi]
   14000ad63:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000ad67:	cmp    edx,DWORD PTR [r11+0x4]
   14000ad6b:	jge    0x14000ad89
   14000ad6d:	mov    rax,QWORD PTR [r11+0x10]
   14000ad71:	lea    rcx,[rdx+rdx*2]
   14000ad75:	lea    rcx,[rax+rcx*8]
   14000ad79:	cmp    DWORD PTR [rcx+r11*1+0x4],0xa
   14000ad7f:	jne    0x14000ad89
   14000ad81:	lea    eax,[rdx+0x1]
   14000ad84:	mov    DWORD PTR [rdi+0x8],eax
   14000ad87:	jmp    0x14000ad93
   14000ad89:	xor    edx,edx
   14000ad8b:	mov    rcx,rdi
   14000ad8e:	call   0x140019c50
   14000ad93:	mov    r8,QWORD PTR [rdi]
   14000ad96:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000ad9a:	cmp    edx,DWORD PTR [r8+0x4]
   14000ad9e:	jge    0x14000adbc
   14000ada0:	mov    rax,QWORD PTR [r8+0x10]
   14000ada4:	lea    rcx,[rdx+rdx*2]
   14000ada8:	lea    rcx,[rax+rcx*8]
   14000adac:	cmp    DWORD PTR [rcx+r8*1+0x4],0x1
   14000adb2:	jne    0x14000adbc
   14000adb4:	lea    eax,[rdx+0x1]
   14000adb7:	mov    DWORD PTR [rdi+0x8],eax
   14000adba:	jmp    0x14000ad96
   14000adbc:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000adc0:	cmp    edx,DWORD PTR [r8+0x4]
   14000adc4:	jge    0x14000ade4
   14000adc6:	mov    rax,QWORD PTR [r8+0x10]
   14000adca:	lea    rcx,[rdx+rdx*2]
   14000adce:	lea    rcx,[rax+rcx*8]
   14000add2:	cmp    DWORD PTR [rcx+r8*1+0x4],0x36
   14000add8:	jne    0x14000ade4
   14000adda:	lea    eax,[rdx+0x1]
   14000addd:	mov    DWORD PTR [rdi+0x8],eax
   14000ade0:	mov    al,0x1
   14000ade2:	jmp    0x14000ade6
   14000ade4:	xor    al,al
   14000ade6:	mov    BYTE PTR [rsi+0x4c],al
   14000ade9:	mov    rdx,QWORD PTR [rdi]
   14000adec:	nop    DWORD PTR [rax+0x0]
   14000adf0:	movsxd r8,DWORD PTR [rdi+0x8]
   14000adf4:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000adf8:	jge    0x14000ae16
   14000adfa:	mov    rax,QWORD PTR [rdx+0x10]
   14000adfe:	lea    rcx,[r8+r8*2]
   14000ae02:	lea    rcx,[rax+rcx*8]
   14000ae06:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x1
   14000ae0b:	jne    0x14000ae16
   14000ae0d:	lea    eax,[r8+0x1]
   14000ae11:	mov    DWORD PTR [rdi+0x8],eax
   14000ae14:	jmp    0x14000adf0
   14000ae16:	test   r14b,r14b
   14000ae19:	mov    r14,QWORD PTR [rsp+0x68]
   14000ae1e:	je     0x14000ae5e
   14000ae20:	movsxd r8,DWORD PTR [rdi+0x8]
   14000ae24:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000ae28:	jge    0x14000ae4c
   14000ae2a:	mov    rax,QWORD PTR [rdx+0x10]
   14000ae2e:	lea    rcx,[r8+r8*2]
   14000ae32:	lea    rcx,[rax+rcx*8]
   14000ae36:	cmp    DWORD PTR [rcx+rdx*1+0x4],0xa
   14000ae3b:	jne    0x14000ae4c
   14000ae3d:	lea    eax,[r8+0x1]
   14000ae41:	mov    DWORD PTR [rdi+0x8],eax
   14000ae44:	dec    DWORD PTR [rdi+0x8]
   14000ae47:	jmp    0x14000b26d
   14000ae4c:	xor    edx,edx
   14000ae4e:	mov    rcx,rdi
   14000ae51:	call   0x140019c50
   14000ae56:	dec    DWORD PTR [rdi+0x8]
   14000ae59:	jmp    0x14000b26d
   14000ae5e:	movsxd r8,DWORD PTR [rdi+0x8]
   14000ae62:	lea    r13,[rip+0xffffffffffff5197]        # 0x140000000
   14000ae69:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000ae6d:	jge    0x14000afc7
   14000ae73:	mov    rax,QWORD PTR [rdx+0x10]
   14000ae77:	lea    rcx,[r8+r8*2]
   14000ae7b:	lea    rcx,[rax+rcx*8]
   14000ae7f:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x1e
   14000ae84:	jne    0x14000afc7
   14000ae8a:	inc    r8d
   14000ae8d:	mov    DWORD PTR [rdi+0x8],r8d
   14000ae91:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000ae95:	jge    0x14000aeb6
   14000ae97:	movsxd rax,r8d
   14000ae9a:	lea    rcx,[rax+rax*2]
   14000ae9e:	mov    rax,QWORD PTR [rdx+0x10]
   14000aea2:	lea    rcx,[rax+rcx*8]
   14000aea6:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x9
   14000aeab:	jne    0x14000aeb6
   14000aead:	lea    eax,[r8+0x1]
   14000aeb1:	mov    DWORD PTR [rdi+0x8],eax
   14000aeb4:	jmp    0x14000aec0
   14000aeb6:	xor    edx,edx
   14000aeb8:	mov    rcx,rdi
   14000aebb:	call   0x140019c50
   14000aec0:	movsxd r9,DWORD PTR [rdi+0x8]
   14000aec4:	mov    r8d,ebp
   14000aec7:	mov    r11d,ebp
   14000aeca:	mov    r10d,ebp
   14000aecd:	test   r9d,r9d
   14000aed0:	je     0x14000af0d
   14000aed2:	mov    rdx,QWORD PTR [rdi]
   14000aed5:	lea    rcx,[r9+r9*2]
   14000aed9:	mov    rax,QWORD PTR [rdx+0x10]
   14000aedd:	lea    rcx,[rax+rcx*8]
   14000aee1:	mov    eax,DWORD PTR [rcx+rdx*1-0x14]
   14000aee5:	cmp    eax,0x7
   14000aee8:	je     0x14000af0d
   14000aeea:	cmp    eax,0x9
   14000aeed:	je     0x14000af07
   14000aeef:	cmp    eax,0xc
   14000aef2:	je     0x14000aeff
   14000aef4:	cmp    eax,0xe
   14000aef7:	jne    0x14000af0d
   14000aef9:	lea    r8d,[rax-0xd]
   14000aefd:	jmp    0x14000af0d
   14000aeff:	mov    r11d,0x1
   14000af05:	jmp    0x14000af0d
   14000af07:	mov    r10d,0x1
   14000af0d:	mov    rdx,QWORD PTR [rdi]
   14000af10:	cmp    r9d,DWORD PTR [rdx+0x4]
   14000af14:	jge    0x14000afc7
   14000af1a:	nop    WORD PTR [rax+rax*1+0x0]
   14000af20:	movsxd rax,DWORD PTR [rdi+0x8]
   14000af24:	lea    ebx,[rax+0x1]
   14000af27:	lea    rcx,[rax+rax*2]
   14000af2b:	mov    DWORD PTR [rdi+0x8],ebx
   14000af2e:	mov    rax,QWORD PTR [rdx+0x10]
   14000af32:	lea    rcx,[rax+rcx*8]
   14000af36:	mov    r9d,DWORD PTR [rcx+rdx*1+0x4]
   14000af3b:	lea    eax,[r9-0x7]
   14000af3f:	cmp    eax,0x48
   14000af42:	ja     0x14000af5f
   14000af44:	cdqe   
   14000af46:	movzx  eax,BYTE PTR [r13+rax*1+0xb340]
   14000af4f:	mov    ecx,DWORD PTR [r13+rax*4+0xb31c]
   14000af57:	add    rcx,r13
   14000af5a:	jmp    rcx
   14000af5c:	inc    r8d
   14000af5f:	cmp    r9d,0xa
   14000af63:	jne    0x14000af74
   14000af65:	test   r8d,r8d
   14000af68:	jg     0x14000af74
   14000af6a:	test   r11d,r11d
   14000af6d:	jg     0x14000af74
   14000af6f:	test   r10d,r10d
   14000af72:	jle    0x14000afc7
   14000af74:	test   r8d,r8d
   14000af77:	js     0x14000afc1
   14000af79:	test   r11d,r11d
   14000af7c:	js     0x14000afc1
   14000af7e:	test   r10d,r10d
   14000af81:	js     0x14000afc1
   14000af83:	test   r8d,r8d
   14000af86:	jg     0x14000af8e
   14000af88:	cmp    r9d,0x12
   14000af8c:	je     0x14000afc7
   14000af8e:	mov    rax,QWORD PTR [rdi]
   14000af91:	cmp    ebx,DWORD PTR [rax+0x4]
   14000af94:	jl     0x14000af20
   14000af96:	jmp    0x14000afc7
   14000af98:	dec    r8d
   14000af9b:	jmp    0x14000af5f
   14000af9d:	inc    r11d
   14000afa0:	jmp    0x14000af5f
   14000afa2:	dec    r11d
   14000afa5:	jmp    0x14000af5f
   14000afa7:	inc    r10d
   14000afaa:	jmp    0x14000af5f
   14000afac:	dec    r10d
   14000afaf:	jmp    0x14000af5f
   14000afb1:	test   r10d,r10d
   14000afb4:	jne    0x14000af5f
   14000afb6:	test   r8d,r8d
   14000afb9:	jne    0x14000af5f
   14000afbb:	lea    r9d,[r10+0x8]
   14000afbf:	jmp    0x14000af79
   14000afc1:	lea    eax,[rbx-0x1]
   14000afc4:	mov    DWORD PTR [rdi+0x8],eax
   14000afc7:	mov    r9d,DWORD PTR [rdx+0x4]
   14000afcb:	movsxd r8,DWORD PTR [rdi+0x8]
   14000afcf:	cmp    r8d,r9d
   14000afd2:	jge    0x14000aff3
   14000afd4:	mov    rax,QWORD PTR [rdx+0x10]
   14000afd8:	lea    rcx,[r8+r8*2]
   14000afdc:	lea    rcx,[rax+rcx*8]
   14000afe0:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x12
   14000afe5:	jne    0x14000aff3
   14000afe7:	lea    eax,[r8+0x1]
   14000afeb:	mov    DWORD PTR [rdi+0x8],eax
   14000afee:	jmp    0x14000b26d
   14000aff3:	cmp    r8d,r9d
   14000aff6:	jge    0x14000b016
   14000aff8:	mov    rax,QWORD PTR [rdx+0x10]
   14000affc:	lea    rcx,[r8+r8*2]
   14000b000:	lea    rcx,[rax+rcx*8]
   14000b004:	cmp    DWORD PTR [rcx+rdx*1+0x4],0xe
   14000b009:	jne    0x14000b016
   14000b00b:	lea    eax,[r8+0x1]
   14000b00f:	mov    DWORD PTR [rdi+0x8],eax
   14000b012:	mov    al,0x1
   14000b014:	jmp    0x14000b018
   14000b016:	xor    al,al
   14000b018:	mov    BYTE PTR [rsi+0x4f],al
   14000b01b:	test   al,al
   14000b01d:	je     0x14000b131
   14000b023:	movsxd r8,DWORD PTR [rdi+0x8]
   14000b027:	mov    r10d,ebp
   14000b02a:	mov    r9d,ebp
   14000b02d:	test   r8d,r8d
   14000b030:	je     0x14000b06c
   14000b032:	mov    rdx,QWORD PTR [rdi]
   14000b035:	lea    rcx,[r8+r8*2]
   14000b039:	mov    rax,QWORD PTR [rdx+0x10]
   14000b03d:	lea    rcx,[rax+rcx*8]
   14000b041:	mov    eax,DWORD PTR [rcx+rdx*1-0x14]
   14000b045:	cmp    eax,0x7
   14000b048:	je     0x14000b06c
   14000b04a:	cmp    eax,0x9
   14000b04d:	je     0x14000b066
   14000b04f:	cmp    eax,0xc
   14000b052:	je     0x14000b05e
   14000b054:	cmp    eax,0xe
   14000b057:	jne    0x14000b06c
   14000b059:	lea    ebp,[rax-0xd]
   14000b05c:	jmp    0x14000b06c
   14000b05e:	mov    r10d,0x1
   14000b064:	jmp    0x14000b06c
   14000b066:	mov    r9d,0x1
   14000b06c:	mov    r11,QWORD PTR [rdi]
   14000b06f:	cmp    r8d,DWORD PTR [r11+0x4]
   14000b073:	jge    0x14000b26d
   14000b079:	nop    DWORD PTR [rax+0x0]
   14000b080:	movsxd rax,DWORD PTR [rdi+0x8]
   14000b084:	lea    ebx,[rax+0x1]
   14000b087:	lea    rcx,[rax+rax*2]
   14000b08b:	mov    DWORD PTR [rdi+0x8],ebx
   14000b08e:	mov    rax,QWORD PTR [r11+0x10]
   14000b092:	lea    rdx,[r11+rcx*8]
   14000b096:	mov    r8d,DWORD PTR [rdx+rax*1+0x4]
   14000b09b:	lea    eax,[r8-0x7]
   14000b09f:	cmp    eax,0x48
   14000b0a2:	ja     0x14000b0be
   14000b0a4:	cdqe   
   14000b0a6:	movzx  eax,BYTE PTR [r13+rax*1+0xb3b0]
   14000b0af:	mov    ecx,DWORD PTR [r13+rax*4+0xb38c]
   14000b0b7:	add    rcx,r13
   14000b0ba:	jmp    rcx
   14000b0bc:	inc    ebp
   14000b0be:	cmp    r8d,0xf
   14000b0c2:	jne    0x14000b0d6
   14000b0c4:	test   ebp,ebp
   14000b0c6:	jg     0x14000b0d6
   14000b0c8:	test   r10d,r10d
   14000b0cb:	jg     0x14000b0d6
   14000b0cd:	test   r9d,r9d
   14000b0d0:	jle    0x14000b26d
   14000b0d6:	test   ebp,ebp
   14000b0d8:	js     0x14000b126
   14000b0da:	test   r10d,r10d
   14000b0dd:	js     0x14000b126
   14000b0df:	test   r9d,r9d
   14000b0e2:	js     0x14000b126
   14000b0e4:	test   ebp,ebp
   14000b0e6:	jg     0x14000b0f2
   14000b0e8:	cmp    r8d,0x12
   14000b0ec:	je     0x14000b26d
   14000b0f2:	mov    rax,QWORD PTR [rdi]
   14000b0f5:	cmp    ebx,DWORD PTR [rax+0x4]
   14000b0f8:	jl     0x14000b080
   14000b0fa:	jmp    0x14000b26d
   14000b0ff:	dec    ebp
   14000b101:	jmp    0x14000b0be
   14000b103:	inc    r10d
   14000b106:	jmp    0x14000b0be
   14000b108:	dec    r10d
   14000b10b:	jmp    0x14000b0be
   14000b10d:	inc    r9d
   14000b110:	jmp    0x14000b0be
   14000b112:	dec    r9d
   14000b115:	jmp    0x14000b0be
   14000b117:	test   r9d,r9d
   14000b11a:	jne    0x14000b0be
   14000b11c:	test   ebp,ebp
   14000b11e:	jne    0x14000b0be
   14000b120:	lea    r8d,[r9+0x8]
   14000b124:	jmp    0x14000b0da
   14000b126:	lea    eax,[rbx-0x1]
   14000b129:	mov    DWORD PTR [rdi+0x8],eax
   14000b12c:	jmp    0x14000b26d
   14000b131:	mov    r8,QWORD PTR [rdi]
   14000b134:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000b138:	cmp    edx,DWORD PTR [r8+0x4]
   14000b13c:	jge    0x14000b15c
   14000b13e:	mov    rax,QWORD PTR [r8+0x10]
   14000b142:	lea    rcx,[rdx+rdx*2]
   14000b146:	lea    rcx,[rax+rcx*8]
   14000b14a:	cmp    DWORD PTR [rcx+r8*1+0x4],0x10
   14000b150:	jne    0x14000b15c
   14000b152:	lea    eax,[rdx+0x1]
   14000b155:	mov    DWORD PTR [rdi+0x8],eax
   14000b158:	mov    al,0x1
   14000b15a:	jmp    0x14000b15e
   14000b15c:	xor    al,al
   14000b15e:	mov    BYTE PTR [rsi+0x68],al
   14000b161:	test   al,al
   14000b163:	je     0x14000b263
   14000b169:	movsxd r8,DWORD PTR [rdi+0x8]
   14000b16d:	mov    r10d,ebp
   14000b170:	mov    r9d,ebp
   14000b173:	test   r8d,r8d
   14000b176:	je     0x14000b1b2
   14000b178:	mov    rdx,QWORD PTR [rdi]
   14000b17b:	lea    rcx,[r8+r8*2]
   14000b17f:	mov    rax,QWORD PTR [rdx+0x10]
   14000b183:	lea    rcx,[rax+rcx*8]
   14000b187:	mov    eax,DWORD PTR [rcx+rdx*1-0x14]
   14000b18b:	cmp    eax,0x7
   14000b18e:	je     0x14000b1b2
   14000b190:	cmp    eax,0x9
   14000b193:	je     0x14000b1ac
   14000b195:	cmp    eax,0xc
   14000b198:	je     0x14000b1a4
   14000b19a:	cmp    eax,0xe
   14000b19d:	jne    0x14000b1b2
   14000b19f:	lea    ebp,[rax-0xd]
   14000b1a2:	jmp    0x14000b1b2
   14000b1a4:	mov    r10d,0x1
   14000b1aa:	jmp    0x14000b1b2
   14000b1ac:	mov    r9d,0x1
   14000b1b2:	mov    r11,QWORD PTR [rdi]
   14000b1b5:	cmp    r8d,DWORD PTR [r11+0x4]
   14000b1b9:	jge    0x14000b26d
   14000b1bf:	nop
   14000b1c0:	movsxd rax,DWORD PTR [rdi+0x8]
   14000b1c4:	lea    ebx,[rax+0x1]
   14000b1c7:	lea    rcx,[rax+rax*2]
   14000b1cb:	mov    DWORD PTR [rdi+0x8],ebx
   14000b1ce:	mov    rax,QWORD PTR [r11+0x10]
   14000b1d2:	lea    rdx,[r11+rcx*8]
   14000b1d6:	mov    r8d,DWORD PTR [rdx+rax*1+0x4]
   14000b1db:	lea    eax,[r8-0x7]
   14000b1df:	cmp    eax,0x48
   14000b1e2:	ja     0x14000b1fe
   14000b1e4:	cdqe   
   14000b1e6:	movzx  eax,BYTE PTR [r13+rax*1+0xb420]
   14000b1ef:	mov    ecx,DWORD PTR [r13+rax*4+0xb3fc]
   14000b1f7:	add    rcx,r13
   14000b1fa:	jmp    rcx
   14000b1fc:	inc    ebp
   14000b1fe:	cmp    r8d,0x12
   14000b202:	jne    0x14000b212
   14000b204:	test   ebp,ebp
   14000b206:	jg     0x14000b212
   14000b208:	test   r10d,r10d
   14000b20b:	jg     0x14000b212
   14000b20d:	test   r9d,r9d
   14000b210:	jle    0x14000b26d
   14000b212:	test   ebp,ebp
   14000b214:	js     0x14000b25b
   14000b216:	test   r10d,r10d
   14000b219:	js     0x14000b25b
   14000b21b:	test   r9d,r9d
   14000b21e:	js     0x14000b25b
   14000b220:	test   ebp,ebp
   14000b222:	jg     0x14000b22a
   14000b224:	cmp    r8d,0x12
   14000b228:	je     0x14000b26d
   14000b22a:	mov    rax,QWORD PTR [rdi]
   14000b22d:	cmp    ebx,DWORD PTR [rax+0x4]
   14000b230:	jl     0x14000b1c0
   14000b232:	jmp    0x14000b26d
   14000b234:	dec    ebp
   14000b236:	jmp    0x14000b1fe
   14000b238:	inc    r10d
   14000b23b:	jmp    0x14000b1fe
   14000b23d:	dec    r10d
   14000b240:	jmp    0x14000b1fe
   14000b242:	inc    r9d
   14000b245:	jmp    0x14000b1fe
   14000b247:	dec    r9d
   14000b24a:	jmp    0x14000b1fe
   14000b24c:	test   r9d,r9d
   14000b24f:	jne    0x14000b1fe
   14000b251:	test   ebp,ebp
   14000b253:	jne    0x14000b1fe
   14000b255:	lea    r8d,[r9+0x8]
   14000b259:	jmp    0x14000b216
   14000b25b:	lea    eax,[rbx-0x1]
   14000b25e:	mov    DWORD PTR [rdi+0x8],eax
   14000b261:	jmp    0x14000b26d
   14000b263:	xor    edx,edx
   14000b265:	mov    rcx,rdi
   14000b268:	call   0x140019c50
   14000b26d:	mov    r13,QWORD PTR [rsp+0x70]
   14000b272:	mov    rsi,QWORD PTR [rsp+0x80]
   14000b27a:	mov    rbp,QWORD PTR [rsp+0x88]
   14000b282:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000b28a:	test   r12b,r12b
   14000b28d:	mov    r12,QWORD PTR [rsp+0x78]
   14000b292:	je     0x14000b30a
   14000b294:	lea    rdx,[rip+0x148ad]        # 0x14001fb48
   14000b29b:	lea    rcx,[rsp+0xa0]
   14000b2a3:	or     r8d,0xffffffff
   14000b2a7:	call   QWORD PTR [rip+0x142a3]        # 0x14001f550
   14000b2ad:	lea    rcx,[rsp+0xa0]
   14000b2b5:	mov    rdx,r15
   14000b2b8:	call   QWORD PTR [rip+0x14322]        # 0x14001f5e0
   14000b2be:	lea    rdx,[rip+0x14843]        # 0x14001fb08
   14000b2c5:	lea    rcx,[rsp+0xa0]
   14000b2cd:	call   QWORD PTR [rip+0x142ad]        # 0x14001f580
   14000b2d3:	lea    rcx,[rsp+0xa0]
   14000b2db:	call   QWORD PTR [rip+0x14317]        # 0x14001f5f8
   14000b2e1:	mov    rcx,rdi
   14000b2e4:	mov    rdx,rax
   14000b2e7:	call   0x140019d80
   14000b2ec:	lea    rcx,[rsp+0xa0]
   14000b2f4:	call   QWORD PTR [rip+0x142be]        # 0x14001f5b8
   14000b2fa:	xor    al,al
   14000b2fc:	mov    r15,QWORD PTR [rsp+0x60]
   14000b301:	add    rsp,0x90
   14000b308:	pop    rdi
   14000b309:	ret    
   14000b30a:	mov    al,0x1
   14000b30c:	mov    r15,QWORD PTR [rsp+0x60]
   14000b311:	add    rsp,0x90
   14000b318:	pop    rdi
   14000b319:	ret    
   14000b31a:	xchg   ax,ax
   14000b31c:	pop    rdi
   14000b31d:	scas   eax,DWORD PTR es:[rdi]
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b321:	scas   eax,DWORD PTR es:[rdi]
   14000b322:	add    BYTE PTR [rax],al
   14000b324:	lods   al,BYTE PTR ds:[rsi]
   14000b325:	scas   eax,DWORD PTR es:[rdi]
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	popf   
   14000b329:	scas   eax,DWORD PTR es:[rdi]
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	movabs ds:0x980000af5c0000af,al
   14000b335:	scas   eax,DWORD PTR es:[rdi]
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	mov    cl,0xaf
   14000b33a:	add    BYTE PTR [rax],al
   14000b33c:	pop    rdi
   14000b33d:	scas   eax,DWORD PTR es:[rdi]
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	add    BYTE PTR [rax],al
   14000b342:	add    DWORD PTR [rdx],eax
   14000b344:	or     BYTE PTR [rbx],al
   14000b346:	add    al,0x5
   14000b348:	(bad)  
   14000b349:	or     BYTE PTR [rax],cl
   14000b34b:	or     BYTE PTR [rax],cl
   14000b34d:	or     BYTE PTR [rax],cl
   14000b34f:	or     BYTE PTR [rax],cl
   14000b351:	or     BYTE PTR [rax],cl
   14000b353:	or     BYTE PTR [rax],cl
   14000b355:	or     BYTE PTR [rax],cl
   14000b357:	or     BYTE PTR [rax],cl
   14000b359:	or     BYTE PTR [rax],cl
   14000b35b:	or     BYTE PTR [rax],cl
   14000b35d:	or     BYTE PTR [rax],cl
   14000b35f:	or     BYTE PTR [rax],cl
   14000b361:	or     BYTE PTR [rax],cl
   14000b363:	or     BYTE PTR [rax],cl
   14000b365:	or     BYTE PTR [rax],cl
   14000b367:	or     BYTE PTR [rax],cl
   14000b369:	or     BYTE PTR [rax],cl
   14000b36b:	or     BYTE PTR [rax],cl
   14000b36d:	or     BYTE PTR [rax],cl
   14000b36f:	or     BYTE PTR [rax],cl
   14000b371:	or     BYTE PTR [rax],cl
   14000b373:	or     BYTE PTR [rax],cl
   14000b375:	or     BYTE PTR [rax],cl
   14000b377:	or     BYTE PTR [rax],cl
   14000b379:	or     BYTE PTR [rax],cl
   14000b37b:	or     BYTE PTR [rax],cl
   14000b37d:	or     BYTE PTR [rax],cl
   14000b37f:	or     BYTE PTR [rax],cl
   14000b381:	or     BYTE PTR [rax],cl
   14000b383:	or     BYTE PTR [rax],cl
   14000b385:	or     BYTE PTR [rax],cl
   14000b387:	or     BYTE PTR [rdi],al
   14000b389:	nop    DWORD PTR [rax]
   14000b38c:	mov    esi,0xd0000b0
   14000b391:	mov    cl,0x0
   14000b393:	add    BYTE PTR [rdx],dl
   14000b395:	mov    cl,0x0
   14000b397:	add    BYTE PTR [rbx],al
   14000b399:	mov    cl,0x0
   14000b39b:	add    BYTE PTR [rax],cl
   14000b39d:	mov    cl,0x0
   14000b39f:	add    BYTE PTR [rax+rsi*4-0x4f010000],bh
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	(bad)  
   14000b3a9:	mov    cl,0x0
   14000b3ab:	add    BYTE PTR [rsi+0xb0],bh
   14000b3b1:	add    BYTE PTR [rcx],al
   14000b3b3:	add    cl,BYTE PTR [rax]
   14000b3b5:	add    eax,DWORD PTR [rax*1+0x8080806]
   14000b3bc:	or     BYTE PTR [rax],cl
   14000b3be:	or     BYTE PTR [rax],cl
   14000b3c0:	or     BYTE PTR [rax],cl
   14000b3c2:	or     BYTE PTR [rax],cl
   14000b3c4:	or     BYTE PTR [rax],cl
   14000b3c6:	or     BYTE PTR [rax],cl
   14000b3c8:	or     BYTE PTR [rax],cl
   14000b3ca:	or     BYTE PTR [rax],cl
   14000b3cc:	or     BYTE PTR [rax],cl
   14000b3ce:	or     BYTE PTR [rax],cl
   14000b3d0:	or     BYTE PTR [rax],cl
   14000b3d2:	or     BYTE PTR [rax],cl
   14000b3d4:	or     BYTE PTR [rax],cl
   14000b3d6:	or     BYTE PTR [rax],cl
   14000b3d8:	or     BYTE PTR [rax],cl
   14000b3da:	or     BYTE PTR [rax],cl
   14000b3dc:	or     BYTE PTR [rax],cl
   14000b3de:	or     BYTE PTR [rax],cl
   14000b3e0:	or     BYTE PTR [rax],cl
   14000b3e2:	or     BYTE PTR [rax],cl
   14000b3e4:	or     BYTE PTR [rax],cl
   14000b3e6:	or     BYTE PTR [rax],cl
   14000b3e8:	or     BYTE PTR [rax],cl
   14000b3ea:	or     BYTE PTR [rax],cl
   14000b3ec:	or     BYTE PTR [rax],cl
   14000b3ee:	or     BYTE PTR [rax],cl
   14000b3f0:	or     BYTE PTR [rax],cl
   14000b3f2:	or     BYTE PTR [rax],cl
   14000b3f4:	or     BYTE PTR [rax],cl
   14000b3f6:	or     BYTE PTR [rax],cl
   14000b3f8:	(bad)  
   14000b3f9:	nop    DWORD PTR [rax]
   14000b3fc:	(bad)  
   14000b3fd:	mov    cl,0x0
   14000b3ff:	add    BYTE PTR [rdx-0x4e],al
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	rex.RXB mov r10b,0x0
   14000b407:	add    BYTE PTR [rax],bh
   14000b409:	mov    dl,0x0
   14000b40b:	add    BYTE PTR [rip+0xfffffffffc0000b2],bh        # 0x13c00b4c3
   14000b411:	mov    cl,0x0
   14000b413:	add    BYTE PTR [rdx+rsi*4],dh
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	rex.WR mov dl,0x0
   14000b41b:	add    dh,bh
   14000b41d:	mov    cl,0x0
   14000b41f:	add    BYTE PTR [rax],al
   14000b421:	add    BYTE PTR [rcx],al
   14000b423:	add    cl,BYTE PTR [rax]
   14000b425:	add    eax,DWORD PTR [rax*1+0x8080806]
   14000b42c:	or     BYTE PTR [rax],cl
   14000b42e:	or     BYTE PTR [rax],cl
   14000b430:	or     BYTE PTR [rax],cl
   14000b432:	or     BYTE PTR [rax],cl
   14000b434:	or     BYTE PTR [rax],cl
   14000b436:	or     BYTE PTR [rax],cl
   14000b438:	or     BYTE PTR [rax],cl
   14000b43a:	or     BYTE PTR [rax],cl
   14000b43c:	or     BYTE PTR [rax],cl
   14000b43e:	or     BYTE PTR [rax],cl
   14000b440:	or     BYTE PTR [rax],cl
   14000b442:	or     BYTE PTR [rax],cl
   14000b444:	or     BYTE PTR [rax],cl
   14000b446:	or     BYTE PTR [rax],cl
   14000b448:	or     BYTE PTR [rax],cl
   14000b44a:	or     BYTE PTR [rax],cl
   14000b44c:	or     BYTE PTR [rax],cl
   14000b44e:	or     BYTE PTR [rax],cl
   14000b450:	or     BYTE PTR [rax],cl
   14000b452:	or     BYTE PTR [rax],cl
   14000b454:	or     BYTE PTR [rax],cl
   14000b456:	or     BYTE PTR [rax],cl
   14000b458:	or     BYTE PTR [rax],cl
   14000b45a:	or     BYTE PTR [rax],cl
   14000b45c:	or     BYTE PTR [rax],cl
   14000b45e:	or     BYTE PTR [rax],cl
   14000b460:	or     BYTE PTR [rax],cl
   14000b462:	or     BYTE PTR [rax],cl
   14000b464:	or     BYTE PTR [rax],cl
   14000b466:	or     BYTE PTR [rax],cl
   14000b468:	(bad)  
   14000b469:	int3   
   14000b46a:	int3   
   14000b46b:	int3   
   14000b46c:	int3   
   14000b46d:	int3   
   14000b46e:	int3   
   14000b46f:	int3   
   14000b470:	rex push rbx
   14000b472:	push   rsi
   14000b473:	push   rdi
   14000b474:	push   r13
   14000b476:	push   r14
   14000b478:	sub    rsp,0x60
   14000b47c:	mov    rdi,r8
   14000b47f:	mov    r13,rdx
   14000b482:	mov    rsi,rcx
   14000b485:	mov    BYTE PTR [r8+0x4d],0x0
   14000b48a:	mov    BYTE PTR [r8+0x4e],0x0
   14000b48f:	nop
   14000b490:	mov    r9,QWORD PTR [rsi]
   14000b493:	movsxd r8,DWORD PTR [rsi+0x8]
   14000b497:	mov    r10d,DWORD PTR [r9+0x4]
   14000b49b:	cmp    r8d,r10d
   14000b49e:	jge    0x14000b4bd
   14000b4a0:	mov    rax,QWORD PTR [r9+0x10]
   14000b4a4:	lea    rcx,[r8+r8*2]
   14000b4a8:	lea    rcx,[rax+rcx*8]
   14000b4ac:	cmp    DWORD PTR [rcx+r9*1+0x4],0x34
   14000b4b2:	jne    0x14000b4bd
   14000b4b4:	lea    eax,[r8+0x1]
   14000b4b8:	mov    DWORD PTR [rsi+0x8],eax
   14000b4bb:	jmp    0x14000b490
   14000b4bd:	cmp    r8d,r10d
   14000b4c0:	jge    0x14000b4df
   14000b4c2:	mov    rax,QWORD PTR [r9+0x10]
   14000b4c6:	lea    rcx,[r8+r8*2]
   14000b4ca:	lea    rcx,[rax+rcx*8]
   14000b4ce:	cmp    DWORD PTR [rcx+r9*1+0x4],0x33
   14000b4d4:	jne    0x14000b4df
   14000b4d6:	lea    eax,[r8+0x1]
   14000b4da:	mov    DWORD PTR [rsi+0x8],eax
   14000b4dd:	jmp    0x14000b490
   14000b4df:	cmp    r8d,r10d
   14000b4e2:	jge    0x14000b505
   14000b4e4:	mov    rax,QWORD PTR [r9+0x10]
   14000b4e8:	lea    rcx,[r8+r8*2]
   14000b4ec:	lea    rcx,[rax+rcx*8]
   14000b4f0:	cmp    DWORD PTR [rcx+r9*1+0x4],0x35
   14000b4f6:	jne    0x14000b505
   14000b4f8:	lea    eax,[r8+0x1]
   14000b4fc:	mov    DWORD PTR [rsi+0x8],eax
   14000b4ff:	mov    BYTE PTR [rdi+0x4e],0x1
   14000b503:	jmp    0x14000b490
   14000b505:	cmp    r8d,r10d
   14000b508:	jge    0x14000b52e
   14000b50a:	mov    rax,QWORD PTR [r9+0x10]
   14000b50e:	lea    rcx,[r8+r8*2]
   14000b512:	lea    rcx,[rax+rcx*8]
   14000b516:	cmp    DWORD PTR [rcx+r9*1+0x4],0x28
   14000b51c:	jne    0x14000b52e
   14000b51e:	lea    eax,[r8+0x1]
   14000b522:	mov    DWORD PTR [rsi+0x8],eax
   14000b525:	mov    BYTE PTR [rdi+0x4d],0x1
   14000b529:	jmp    0x14000b490
   14000b52e:	cmp    r8d,r10d
   14000b531:	jge    0x14000b59e
   14000b533:	mov    rax,QWORD PTR [r9+0x10]
   14000b537:	lea    rcx,[r8+r8*2]
   14000b53b:	lea    rdx,[rax+rcx*8]
   14000b53f:	mov    ecx,DWORD PTR [rdx+r9*1+0x4]
   14000b544:	sub    ecx,0x85
   14000b54a:	je     0x14000b592
   14000b54c:	sub    ecx,0x1
   14000b54f:	je     0x14000b586
   14000b551:	sub    ecx,0x2
   14000b554:	je     0x14000b57a
   14000b556:	sub    ecx,0x1
   14000b559:	je     0x14000b56e
   14000b55b:	cmp    ecx,0x1
   14000b55e:	jne    0x14000b59e
   14000b560:	mov    BYTE PTR [rdi+0x62],cl
   14000b563:	mov    BYTE PTR [rdi+0x61],cl
   14000b566:	inc    DWORD PTR [rsi+0x8]
   14000b569:	jmp    0x14000b490
   14000b56e:	mov    BYTE PTR [rdi+0x61],0x1
   14000b572:	inc    DWORD PTR [rsi+0x8]
   14000b575:	jmp    0x14000b490
   14000b57a:	mov    BYTE PTR [rdi+0x60],0x1
   14000b57e:	inc    DWORD PTR [rsi+0x8]
   14000b581:	jmp    0x14000b490
   14000b586:	mov    BYTE PTR [rdi+0x63],0x1
   14000b58a:	inc    DWORD PTR [rsi+0x8]
   14000b58d:	jmp    0x14000b490
   14000b592:	mov    BYTE PTR [rdi+0x64],0x1
   14000b596:	inc    DWORD PTR [rsi+0x8]
   14000b599:	jmp    0x14000b490
   14000b59e:	mov    rdx,rdi
   14000b5a1:	mov    rcx,rsi
   14000b5a4:	call   0x140005350
   14000b5a9:	test   al,al
   14000b5ab:	jne    0x14000b490
   14000b5b1:	mov    r8,QWORD PTR [rsi]
   14000b5b4:	movsxd rdx,DWORD PTR [rsi+0x8]
   14000b5b8:	mov    QWORD PTR [rsp+0x98],rbp
   14000b5c0:	cmp    edx,DWORD PTR [r8+0x4]
   14000b5c4:	jge    0x14000b5e5
   14000b5c6:	mov    rax,QWORD PTR [r8+0x10]
   14000b5ca:	lea    rcx,[rdx+rdx*2]
   14000b5ce:	lea    rcx,[rax+rcx*8]
   14000b5d2:	cmp    DWORD PTR [rcx+r8*1+0x4],0x44
   14000b5d8:	jne    0x14000b5e5
   14000b5da:	lea    eax,[rdx+0x1]
   14000b5dd:	mov    bpl,0x1
   14000b5e0:	mov    DWORD PTR [rsi+0x8],eax
   14000b5e3:	jmp    0x14000b5e8
   14000b5e5:	xor    bpl,bpl
   14000b5e8:	lea    rdx,[rsp+0x20]
   14000b5ed:	mov    rcx,rsi
   14000b5f0:	call   0x140004ba0
   14000b5f5:	mov    rcx,rdi
   14000b5f8:	mov    rdx,rax
   14000b5fb:	mov    rbx,rax
   14000b5fe:	call   QWORD PTR [rip+0x13f54]        # 0x14001f558
   14000b604:	lea    rdx,[rbx+0x8]
   14000b608:	lea    rcx,[rdi+0x8]
   14000b60c:	call   QWORD PTR [rip+0x13f46]        # 0x14001f558
   14000b612:	mov    ecx,DWORD PTR [rdi+0x10]
   14000b615:	xor    ecx,DWORD PTR [rbx+0x10]
   14000b618:	and    ecx,0x1
   14000b61b:	xor    DWORD PTR [rdi+0x10],ecx
   14000b61e:	mov    eax,DWORD PTR [rdi+0x10]
   14000b621:	mov    ecx,eax
   14000b623:	xor    ecx,DWORD PTR [rbx+0x10]
   14000b626:	and    ecx,0x2
   14000b629:	xor    ecx,eax
   14000b62b:	mov    DWORD PTR [rdi+0x10],ecx
   14000b62e:	mov    eax,DWORD PTR [rbx+0x14]
   14000b631:	lea    rcx,[rsp+0x28]
   14000b636:	mov    DWORD PTR [rdi+0x14],eax
   14000b639:	mov    eax,DWORD PTR [rbx+0x18]
   14000b63c:	mov    DWORD PTR [rdi+0x18],eax
   14000b63f:	call   QWORD PTR [rip+0x13f73]        # 0x14001f5b8
   14000b645:	lea    rcx,[rsp+0x20]
   14000b64a:	call   QWORD PTR [rip+0x13f68]        # 0x14001f5b8
   14000b650:	mov    r11,QWORD PTR [rdi]
   14000b653:	cmp    DWORD PTR [r11+0x4],0x0
   14000b658:	jne    0x14000b661
   14000b65a:	xor    al,al
   14000b65c:	jmp    0x14000bc27
   14000b661:	mov    rdx,QWORD PTR [rsi]
   14000b664:	movsxd r8,DWORD PTR [rsi+0x8]
   14000b668:	mov    QWORD PTR [rsp+0xa8],r12
   14000b670:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000b674:	jge    0x14000b7fc
   14000b67a:	mov    rax,QWORD PTR [rdx+0x10]
   14000b67e:	lea    rcx,[r8+r8*2]
   14000b682:	lea    rcx,[rax+rcx*8]
   14000b686:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x9
   14000b68b:	jne    0x14000b7fc
   14000b691:	lea    eax,[r8+0x1]
   14000b695:	lea    r12,[rdi+0x30]
   14000b699:	mov    rdx,rdi
   14000b69c:	mov    rcx,r12
   14000b69f:	mov    DWORD PTR [rsi+0x8],eax
   14000b6a2:	call   QWORD PTR [rip+0x13eb0]        # 0x14001f558
   14000b6a8:	mov    ebx,DWORD PTR [rdi+0x10]
   14000b6ab:	mov    rdx,r13
   14000b6ae:	shr    ebx,1
   14000b6b0:	mov    rcx,r12
   14000b6b3:	and    bl,0x1
   14000b6b6:	call   0x140001000
   14000b6bb:	test   al,al
   14000b6bd:	je     0x14000b74c
   14000b6c3:	test   bpl,bpl
   14000b6c6:	lea    rcx,[rsp+0x20]
   14000b6cb:	mov    BYTE PTR [rdi+0x67],bpl
   14000b6cf:	sete   al
   14000b6d2:	mov    BYTE PTR [rdi+0x66],al
   14000b6d5:	call   QWORD PTR [rip+0x13ee5]        # 0x14001f5c0
   14000b6db:	lea    rcx,[rsp+0x28]
   14000b6e0:	call   QWORD PTR [rip+0x13eda]        # 0x14001f5c0
   14000b6e6:	and    DWORD PTR [rsp+0x30],0xfffffffc
   14000b6eb:	xor    ebp,ebp
   14000b6ed:	lea    rdx,[rsp+0x20]
   14000b6f2:	mov    rcx,rdi
   14000b6f5:	mov    DWORD PTR [rsp+0x34],ebp
   14000b6f9:	mov    DWORD PTR [rsp+0x38],ebp
   14000b6fd:	call   QWORD PTR [rip+0x13e55]        # 0x14001f558
   14000b703:	lea    rdx,[rsp+0x28]
   14000b708:	lea    rcx,[rdi+0x8]
   14000b70c:	call   QWORD PTR [rip+0x13e46]        # 0x14001f558
   14000b712:	mov    eax,DWORD PTR [rsp+0x34]
   14000b716:	mov    r11d,DWORD PTR [rsp+0x30]
   14000b71b:	xor    r11d,DWORD PTR [rdi+0x10]
   14000b71f:	mov    DWORD PTR [rdi+0x14],eax
   14000b722:	mov    eax,DWORD PTR [rsp+0x38]
   14000b726:	and    r11d,0x3
   14000b72a:	lea    rcx,[rsp+0x28]
   14000b72f:	mov    DWORD PTR [rdi+0x18],eax
   14000b732:	xor    DWORD PTR [rdi+0x10],r11d
   14000b736:	call   QWORD PTR [rip+0x13e7c]        # 0x14001f5b8
   14000b73c:	lea    rcx,[rsp+0x20]
   14000b741:	call   QWORD PTR [rip+0x13e71]        # 0x14001f5b8
   14000b747:	jmp    0x14000b9eb
   14000b74c:	lea    rdx,[rip+0x14431]        # 0x14001fb84
   14000b753:	lea    rcx,[rsp+0x90]
   14000b75b:	or     r8d,0xffffffff
   14000b75f:	call   QWORD PTR [rip+0x13deb]        # 0x14001f550
   14000b765:	lea    rdx,[rsp+0x90]
   14000b76d:	lea    rcx,[rsp+0x20]
   14000b772:	call   QWORD PTR [rip+0x13e60]        # 0x14001f5d8
   14000b778:	lea    rdx,[rsp+0x20]
   14000b77d:	lea    rcx,[rsp+0x28]
   14000b782:	call   QWORD PTR [rip+0x13e50]        # 0x14001f5d8
   14000b788:	and    DWORD PTR [rsp+0x30],0xfffffffc
   14000b78d:	xor    ebp,ebp
   14000b78f:	lea    rdx,[rsp+0x20]
   14000b794:	mov    rcx,rdi
   14000b797:	mov    DWORD PTR [rsp+0x34],ebp
   14000b79b:	mov    DWORD PTR [rsp+0x38],ebp
   14000b79f:	call   QWORD PTR [rip+0x13db3]        # 0x14001f558
   14000b7a5:	lea    rdx,[rsp+0x28]
   14000b7aa:	lea    rcx,[rdi+0x8]
   14000b7ae:	call   QWORD PTR [rip+0x13da4]        # 0x14001f558
   14000b7b4:	mov    eax,DWORD PTR [rsp+0x34]
   14000b7b8:	mov    r11d,DWORD PTR [rsp+0x30]
   14000b7bd:	xor    r11d,DWORD PTR [rdi+0x10]
   14000b7c1:	mov    DWORD PTR [rdi+0x14],eax
   14000b7c4:	mov    eax,DWORD PTR [rsp+0x38]
   14000b7c8:	and    r11d,0x3
   14000b7cc:	lea    rcx,[rsp+0x28]
   14000b7d1:	mov    DWORD PTR [rdi+0x18],eax
   14000b7d4:	xor    DWORD PTR [rdi+0x10],r11d
   14000b7d8:	call   QWORD PTR [rip+0x13dda]        # 0x14001f5b8
   14000b7de:	lea    rcx,[rsp+0x20]
   14000b7e3:	call   QWORD PTR [rip+0x13dcf]        # 0x14001f5b8
   14000b7e9:	lea    rcx,[rsp+0x90]
   14000b7f1:	call   QWORD PTR [rip+0x13dc1]        # 0x14001f5b8
   14000b7f7:	jmp    0x14000b9eb
   14000b7fc:	lea    rdx,[rsp+0x20]
   14000b801:	mov    rcx,rsi
   14000b804:	call   0x140004ba0
   14000b809:	mov    rax,QWORD PTR [rsp+0x20]
   14000b80e:	xor    ebp,ebp
   14000b810:	cmp    DWORD PTR [rax+0x4],ebp
   14000b813:	je     0x14000b98b
   14000b819:	nop    DWORD PTR [rax+0x0]
   14000b820:	mov    edx,0x1
   14000b825:	mov    rcx,rsi
   14000b828:	call   0x140002960
   14000b82d:	cmp    eax,0x9
   14000b830:	je     0x14000b98b
   14000b836:	mov    ecx,DWORD PTR [rdi+0x14]
   14000b839:	sub    ecx,0x85
   14000b83f:	je     0x14000b8cb
   14000b845:	sub    ecx,0x1
   14000b848:	je     0x14000b8c5
   14000b84a:	sub    ecx,0x2
   14000b84d:	je     0x14000b8bf
   14000b84f:	sub    ecx,0x1
   14000b852:	je     0x14000b8b9
   14000b854:	cmp    ecx,0x1
   14000b857:	jne    0x14000b861
   14000b859:	mov    BYTE PTR [rdi+0x62],cl
   14000b85c:	mov    BYTE PTR [rdi+0x61],cl
   14000b85f:	jmp    0x14000b8cf
   14000b861:	lea    rdx,[rip+0x14378]        # 0x14001fbe0
   14000b868:	mov    rcx,rdi
   14000b86b:	call   QWORD PTR [rip+0x13d7f]        # 0x14001f5f0
   14000b871:	test   eax,eax
   14000b873:	jne    0x14000b87b
   14000b875:	mov    BYTE PTR [rdi+0x64],0x1
   14000b879:	jmp    0x14000b8cf
   14000b87b:	lea    rdx,[rip+0x14352]        # 0x14001fbd4
   14000b882:	mov    rcx,rdi
   14000b885:	call   QWORD PTR [rip+0x13d65]        # 0x14001f5f0
   14000b88b:	test   eax,eax
   14000b88d:	jne    0x14000b895
   14000b88f:	mov    BYTE PTR [rdi+0x63],0x1
   14000b893:	jmp    0x14000b8cf
   14000b895:	mov    rax,QWORD PTR [rdi+0x28]
   14000b899:	cmp    DWORD PTR [rax+0x4],ebp
   14000b89c:	je     0x14000b8aa
   14000b89e:	lea    rcx,[rdi+0x28]
   14000b8a2:	mov    dl,0x20
   14000b8a4:	call   QWORD PTR [rip+0x13cee]        # 0x14001f598
   14000b8aa:	lea    rcx,[rdi+0x28]
   14000b8ae:	mov    rdx,rdi
   14000b8b1:	call   QWORD PTR [rip+0x13d29]        # 0x14001f5e0
   14000b8b7:	jmp    0x14000b8cf
   14000b8b9:	mov    BYTE PTR [rdi+0x61],0x1
   14000b8bd:	jmp    0x14000b8cf
   14000b8bf:	mov    BYTE PTR [rdi+0x60],0x1
   14000b8c3:	jmp    0x14000b8cf
   14000b8c5:	mov    BYTE PTR [rdi+0x63],0x1
   14000b8c9:	jmp    0x14000b8cf
   14000b8cb:	mov    BYTE PTR [rdi+0x64],0x1
   14000b8cf:	lea    rdx,[rsp+0x20]
   14000b8d4:	mov    rcx,rdi
   14000b8d7:	call   QWORD PTR [rip+0x13c7b]        # 0x14001f558
   14000b8dd:	lea    rdx,[rsp+0x28]
   14000b8e2:	lea    rcx,[rdi+0x8]
   14000b8e6:	call   QWORD PTR [rip+0x13c6c]        # 0x14001f558
   14000b8ec:	mov    eax,DWORD PTR [rsp+0x34]
   14000b8f0:	mov    r11d,DWORD PTR [rsp+0x30]
   14000b8f5:	xor    r11d,DWORD PTR [rdi+0x10]
   14000b8f9:	mov    DWORD PTR [rdi+0x14],eax
   14000b8fc:	mov    eax,DWORD PTR [rsp+0x38]
   14000b900:	and    r11d,0x3
   14000b904:	lea    rdx,[rsp+0x40]
   14000b909:	mov    rcx,rsi
   14000b90c:	xor    DWORD PTR [rdi+0x10],r11d
   14000b910:	mov    DWORD PTR [rdi+0x18],eax
   14000b913:	call   0x140004ba0
   14000b918:	lea    rcx,[rsp+0x20]
   14000b91d:	mov    rdx,rax
   14000b920:	mov    rbx,rax
   14000b923:	call   QWORD PTR [rip+0x13c2f]        # 0x14001f558
   14000b929:	lea    rdx,[rbx+0x8]
   14000b92d:	lea    rcx,[rsp+0x28]
   14000b932:	call   QWORD PTR [rip+0x13c20]        # 0x14001f558
   14000b938:	mov    ecx,DWORD PTR [rbx+0x10]
   14000b93b:	mov    edx,DWORD PTR [rsp+0x30]
   14000b93f:	xor    ecx,edx
   14000b941:	and    ecx,0x1
   14000b944:	xor    edx,ecx
   14000b946:	lea    rcx,[rsp+0x48]
   14000b94b:	mov    DWORD PTR [rsp+0x30],edx
   14000b94f:	mov    eax,DWORD PTR [rbx+0x10]
   14000b952:	xor    eax,edx
   14000b954:	and    eax,0x2
   14000b957:	xor    edx,eax
   14000b959:	mov    DWORD PTR [rsp+0x30],edx
   14000b95d:	mov    eax,DWORD PTR [rbx+0x14]
   14000b960:	mov    DWORD PTR [rsp+0x34],eax
   14000b964:	mov    eax,DWORD PTR [rbx+0x18]
   14000b967:	mov    DWORD PTR [rsp+0x38],eax
   14000b96b:	call   QWORD PTR [rip+0x13c47]        # 0x14001f5b8
   14000b971:	lea    rcx,[rsp+0x40]
   14000b976:	call   QWORD PTR [rip+0x13c3c]        # 0x14001f5b8
   14000b97c:	mov    r11,QWORD PTR [rsp+0x20]
   14000b981:	cmp    DWORD PTR [r11+0x4],ebp
   14000b985:	jne    0x14000b820
   14000b98b:	mov    rdx,QWORD PTR [rsi]
   14000b98e:	movsxd r8,DWORD PTR [rsi+0x8]
   14000b992:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000b996:	jge    0x14000bc07
   14000b99c:	mov    rax,QWORD PTR [rdx+0x10]
   14000b9a0:	lea    rcx,[r8+r8*2]
   14000b9a4:	lea    rcx,[rax+rcx*8]
   14000b9a8:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x9
   14000b9ad:	jne    0x14000bc07
   14000b9b3:	lea    eax,[r8+0x1]
   14000b9b7:	lea    r12,[rdi+0x30]
   14000b9bb:	lea    rdx,[rsp+0x20]
   14000b9c0:	mov    rcx,r12
   14000b9c3:	mov    DWORD PTR [rsi+0x8],eax
   14000b9c6:	call   QWORD PTR [rip+0x13b8c]        # 0x14001f558
   14000b9cc:	mov    ebx,DWORD PTR [rsp+0x30]
   14000b9d0:	lea    rcx,[rsp+0x28]
   14000b9d5:	shr    ebx,1
   14000b9d7:	and    bl,0x1
   14000b9da:	call   QWORD PTR [rip+0x13bd8]        # 0x14001f5b8
   14000b9e0:	lea    rcx,[rsp+0x20]
   14000b9e5:	call   QWORD PTR [rip+0x13bcd]        # 0x14001f5b8
   14000b9eb:	cmp    DWORD PTR [rdi+0x18],0x1
   14000b9ef:	jne    0x14000bad0
   14000b9f5:	lea    rdx,[rdi+0x8]
   14000b9f9:	lea    rcx,[rsp+0xa0]
   14000ba01:	call   QWORD PTR [rip+0x13bd1]        # 0x14001f5d8
   14000ba07:	lea    rdx,[rip+0x13dca]        # 0x14001f7d8
   14000ba0e:	lea    rcx,[rsp+0x90]
   14000ba16:	or     r8d,0xffffffff
   14000ba1a:	call   QWORD PTR [rip+0x13b30]        # 0x14001f550
   14000ba20:	lea    rdx,[rsp+0x90]
   14000ba28:	lea    rcx,[rsp+0x20]
   14000ba2d:	call   QWORD PTR [rip+0x13ba5]        # 0x14001f5d8
   14000ba33:	lea    rdx,[rsp+0x20]
   14000ba38:	lea    rcx,[rsp+0x28]
   14000ba3d:	call   QWORD PTR [rip+0x13b95]        # 0x14001f5d8
   14000ba43:	and    DWORD PTR [rsp+0x30],0xfffffffc
   14000ba48:	lea    rdx,[rsp+0x20]
   14000ba4d:	mov    rcx,rdi
   14000ba50:	mov    DWORD PTR [rsp+0x34],ebp
   14000ba54:	mov    DWORD PTR [rsp+0x38],ebp
   14000ba58:	call   QWORD PTR [rip+0x13afa]        # 0x14001f558
   14000ba5e:	lea    rdx,[rsp+0x28]
   14000ba63:	lea    rcx,[rdi+0x8]
   14000ba67:	call   QWORD PTR [rip+0x13aeb]        # 0x14001f558
   14000ba6d:	mov    eax,DWORD PTR [rsp+0x34]
   14000ba71:	mov    r11d,DWORD PTR [rsp+0x30]
   14000ba76:	xor    r11d,DWORD PTR [rdi+0x10]
   14000ba7a:	mov    DWORD PTR [rdi+0x14],eax
   14000ba7d:	mov    eax,DWORD PTR [rsp+0x38]
   14000ba81:	and    r11d,0x3
   14000ba85:	lea    rcx,[rsp+0x28]
   14000ba8a:	mov    DWORD PTR [rdi+0x18],eax
   14000ba8d:	xor    DWORD PTR [rdi+0x10],r11d
   14000ba91:	call   QWORD PTR [rip+0x13b21]        # 0x14001f5b8
   14000ba97:	lea    rcx,[rsp+0x20]
   14000ba9c:	call   QWORD PTR [rip+0x13b16]        # 0x14001f5b8
   14000baa2:	lea    rcx,[rsp+0x90]
   14000baaa:	call   QWORD PTR [rip+0x13b08]        # 0x14001f5b8
   14000bab0:	lea    rdx,[rsp+0xa0]
   14000bab8:	lea    rcx,[rdi+0x8]
   14000babc:	call   QWORD PTR [rip+0x13a96]        # 0x14001f558
   14000bac2:	lea    rcx,[rsp+0xa0]
   14000baca:	call   QWORD PTR [rip+0x13ae8]        # 0x14001f5b8
   14000bad0:	lea    rcx,[rsp+0x90]
   14000bad8:	xor    r8d,r8d
   14000badb:	mov    rdx,rdi
   14000bade:	call   0x140001910
   14000bae3:	lea    rcx,[rdi+0x20]
   14000bae7:	mov    rdx,rax
   14000baea:	call   QWORD PTR [rip+0x13a68]        # 0x14001f558
   14000baf0:	lea    rcx,[rsp+0x90]
   14000baf8:	call   QWORD PTR [rip+0x13aba]        # 0x14001f5b8
   14000bafe:	mov    r11,QWORD PTR [rsi]
   14000bb01:	movsxd rdx,DWORD PTR [rsi+0x8]
   14000bb05:	cmp    edx,DWORD PTR [r11+0x4]
   14000bb09:	jge    0x14000bb26
   14000bb0b:	mov    rax,QWORD PTR [r11+0x10]
   14000bb0f:	lea    rcx,[rdx+rdx*2]
   14000bb13:	lea    rcx,[rax+rcx*8]
   14000bb17:	cmp    DWORD PTR [rcx+r11*1+0x4],0xa
   14000bb1d:	jne    0x14000bb26
   14000bb1f:	inc    edx
   14000bb21:	mov    DWORD PTR [rsi+0x8],edx
   14000bb24:	jmp    0x14000bb5f
   14000bb26:	mov    rdx,rdi
   14000bb29:	mov    rcx,rsi
   14000bb2c:	call   0x140009f30
   14000bb31:	mov    r11,QWORD PTR [rsi]
   14000bb34:	movsxd rdx,DWORD PTR [rsi+0x8]
   14000bb38:	cmp    edx,DWORD PTR [r11+0x4]
   14000bb3c:	jge    0x14000bc1d
   14000bb42:	mov    rax,QWORD PTR [r11+0x10]
   14000bb46:	lea    rcx,[rdx+rdx*2]
   14000bb4a:	lea    rcx,[rax+rcx*8]
   14000bb4e:	cmp    DWORD PTR [rcx+r11*1+0x4],0xa
   14000bb54:	jne    0x14000bc1d
   14000bb5a:	inc    edx
   14000bb5c:	mov    DWORD PTR [rsi+0x8],edx
   14000bb5f:	cmp    edx,DWORD PTR [r11+0x4]
   14000bb63:	jge    0x14000bb86
   14000bb65:	movsxd rax,edx
   14000bb68:	lea    rcx,[rax+rax*2]
   14000bb6c:	mov    rax,QWORD PTR [r11+0x10]
   14000bb70:	lea    rcx,[rax+rcx*8]
   14000bb74:	cmp    DWORD PTR [rcx+r11*1+0x4],0x36
   14000bb7a:	jne    0x14000bb86
   14000bb7c:	lea    eax,[rdx+0x1]
   14000bb7f:	mov    DWORD PTR [rsi+0x8],eax
   14000bb82:	mov    al,0x1
   14000bb84:	jmp    0x14000bb88
   14000bb86:	xor    al,al
   14000bb88:	mov    BYTE PTR [rdi+0x4c],al
   14000bb8b:	test   bl,bl
   14000bb8d:	je     0x14000bc03
   14000bb8f:	cmp    BYTE PTR [rdi+0x64],0x0
   14000bb93:	jne    0x14000bba1
   14000bb95:	cmp    BYTE PTR [rdi+0x63],0x0
   14000bb99:	jne    0x14000bba1
   14000bb9b:	cmp    BYTE PTR [rdi+0x61],0x0
   14000bb9f:	je     0x14000bc03
   14000bba1:	lea    rdx,[rip+0x14008]        # 0x14001fbb0
   14000bba8:	lea    rcx,[rsp+0x90]
   14000bbb0:	or     r8d,0xffffffff
   14000bbb4:	call   QWORD PTR [rip+0x13996]        # 0x14001f550
   14000bbba:	lea    rcx,[rsp+0x90]
   14000bbc2:	mov    rdx,r12
   14000bbc5:	call   QWORD PTR [rip+0x13a15]        # 0x14001f5e0
   14000bbcb:	lea    rdx,[rip+0x13f36]        # 0x14001fb08
   14000bbd2:	lea    rcx,[rsp+0x90]
   14000bbda:	call   QWORD PTR [rip+0x139a0]        # 0x14001f580
   14000bbe0:	lea    rcx,[rsp+0x90]
   14000bbe8:	call   QWORD PTR [rip+0x13a0a]        # 0x14001f5f8
   14000bbee:	mov    rcx,rsi
   14000bbf1:	mov    rdx,rax
   14000bbf4:	call   0x140019d80
   14000bbf9:	lea    rcx,[rsp+0x90]
   14000bc01:	jmp    0x14000bc17
   14000bc03:	mov    al,0x1
   14000bc05:	jmp    0x14000bc1f
   14000bc07:	lea    rcx,[rsp+0x28]
   14000bc0c:	call   QWORD PTR [rip+0x139a6]        # 0x14001f5b8
   14000bc12:	lea    rcx,[rsp+0x20]
   14000bc17:	call   QWORD PTR [rip+0x1399b]        # 0x14001f5b8
   14000bc1d:	xor    al,al
   14000bc1f:	mov    r12,QWORD PTR [rsp+0xa8]
   14000bc27:	mov    rbp,QWORD PTR [rsp+0x98]
   14000bc2f:	add    rsp,0x60
   14000bc33:	pop    r14
   14000bc35:	pop    r13
   14000bc37:	pop    rdi
   14000bc38:	pop    rsi
   14000bc39:	pop    rbx
   14000bc3a:	ret    
   14000bc3b:	int3   
   14000bc3c:	int3   
   14000bc3d:	int3   
   14000bc3e:	int3   
   14000bc3f:	int3   
   14000bc40:	mov    QWORD PTR [rsp+0x10],rdx
   14000bc45:	push   rbx
   14000bc46:	push   rbp
   14000bc47:	push   rsi
   14000bc48:	push   rdi
   14000bc49:	push   r12
   14000bc4b:	push   r13
   14000bc4d:	push   r14
   14000bc4f:	push   r15
   14000bc51:	sub    rsp,0x88
   14000bc58:	mov    r9,QWORD PTR [rcx]
   14000bc5b:	mov    r14,rcx
   14000bc5e:	movsxd rcx,DWORD PTR [rcx+0x8]
   14000bc62:	cmp    ecx,DWORD PTR [r9+0x4]
   14000bc66:	jge    0x14000bc85
   14000bc68:	mov    rax,QWORD PTR [r9+0x10]
   14000bc6c:	lea    r8,[rcx+rcx*2]
   14000bc70:	lea    r8,[rax+r8*8]
   14000bc74:	cmp    DWORD PTR [r8+r9*1+0x4],0x9
   14000bc7a:	jne    0x14000bc85
   14000bc7c:	lea    eax,[rcx+0x1]
   14000bc7f:	mov    DWORD PTR [r14+0x8],eax
   14000bc83:	jmp    0x14000bc90
   14000bc85:	xor    edx,edx
   14000bc87:	mov    rcx,r14
   14000bc8a:	call   0x140019c50
   14000bc8f:	nop
   14000bc90:	mov    r9,QWORD PTR [r14]
   14000bc93:	movsxd rdx,DWORD PTR [r14+0x8]
   14000bc97:	cmp    edx,DWORD PTR [r9+0x4]
   14000bc9b:	jge    0x14000c98b
   14000bca1:	mov    rax,QWORD PTR [r9+0x10]
   14000bca5:	lea    rcx,[rdx+rdx*2]
   14000bca9:	lea    rcx,[rax+rcx*8]
   14000bcad:	cmp    DWORD PTR [rcx+r9*1+0x4],0x1
   14000bcb3:	jne    0x14000c98b
   14000bcb9:	lea    ecx,[rdx+0x1]
   14000bcbc:	mov    DWORD PTR [r14+0x8],ecx
   14000bcc0:	mov    rax,QWORD PTR [rip+0x13881]        # 0x14001f548
   14000bcc7:	mov    QWORD PTR [rsp+0xe0],rax
   14000bccf:	lea    eax,[rcx-0x1]
   14000bcd2:	movsxd rcx,eax
   14000bcd5:	mov    rax,QWORD PTR [r9+0x10]
   14000bcd9:	lea    rdx,[rcx+rcx*2]
   14000bcdd:	lea    r8,[rax+rdx*8]
   14000bce1:	lea    rdx,[rsp+0x60]
   14000bce6:	add    r8,r9
   14000bce9:	mov    r9d,DWORD PTR [r8+0x14]
   14000bced:	lea    rcx,[r8+0x8]
   14000bcf1:	mov    r8d,DWORD PTR [r8+0x10]
   14000bcf5:	call   QWORD PTR [rip+0x138d5]        # 0x14001f5d0
   14000bcfb:	lea    rdx,[rsp+0x60]
   14000bd00:	lea    rcx,[rsp+0x30]
   14000bd05:	call   QWORD PTR [rip+0x138cd]        # 0x14001f5d8
   14000bd0b:	lea    rcx,[rsp+0x38]
   14000bd10:	call   QWORD PTR [rip+0x138aa]        # 0x14001f5c0
   14000bd16:	mov    r11,QWORD PTR [rsp+0xe0]
   14000bd1e:	mov    eax,DWORD PTR [r11]
   14000bd21:	cmp    eax,0x1
   14000bd24:	je     0x14000bd44
   14000bd26:	test   eax,eax
   14000bd28:	je     0x14000bd44
   14000bd2a:	lea    rcx,[rsp+0xe0]
   14000bd32:	mov    edx,0x7fffffff
   14000bd37:	mov    r8d,0x1
   14000bd3d:	call   0x140003a30
   14000bd42:	jmp    0x14000bd52
   14000bd44:	lea    rcx,[rsp+0xe0]
   14000bd4c:	call   QWORD PTR [rip+0x1344e]        # 0x14001f1a0
   14000bd52:	mov    ecx,0x10
   14000bd57:	mov    rdi,rax
   14000bd5a:	call   0x14001e1c6
   14000bd5f:	mov    rbx,rax
   14000bd62:	test   rax,rax
   14000bd65:	je     0x14000bd86
   14000bd67:	lea    rdx,[rsp+0x30]
   14000bd6c:	mov    rcx,rax
   14000bd6f:	call   QWORD PTR [rip+0x13863]        # 0x14001f5d8
   14000bd75:	lea    rcx,[rbx+0x8]
   14000bd79:	lea    rdx,[rsp+0x38]
   14000bd7e:	call   QWORD PTR [rip+0x13854]        # 0x14001f5d8
   14000bd84:	jmp    0x14000bd88
   14000bd86:	xor    ebx,ebx
   14000bd88:	lea    rcx,[rsp+0x38]
   14000bd8d:	mov    QWORD PTR [rdi],rbx
   14000bd90:	call   QWORD PTR [rip+0x13822]        # 0x14001f5b8
   14000bd96:	lea    rcx,[rsp+0x30]
   14000bd9b:	call   QWORD PTR [rip+0x13817]        # 0x14001f5b8
   14000bda1:	lea    rcx,[rsp+0x60]
   14000bda6:	call   QWORD PTR [rip+0x1380c]        # 0x14001f5b8
   14000bdac:	mov    r9,QWORD PTR [r14]
   14000bdaf:	movsxd rdx,DWORD PTR [r14+0x8]
   14000bdb3:	cmp    edx,DWORD PTR [r9+0x4]
   14000bdb7:	jge    0x14000c0e0
   14000bdbd:	mov    rax,QWORD PTR [r9+0x10]
   14000bdc1:	lea    rcx,[rdx+rdx*2]
   14000bdc5:	lea    rcx,[rax+rcx*8]
   14000bdc9:	cmp    DWORD PTR [rcx+r9*1+0x4],0x11
   14000bdcf:	jne    0x14000c0e0
   14000bdd5:	lea    eax,[rdx+0x1]
   14000bdd8:	mov    DWORD PTR [r14+0x8],eax
   14000bddc:	dec    eax
   14000bdde:	movsxd rcx,eax
   14000bde1:	mov    rax,QWORD PTR [r9+0x10]
   14000bde5:	lea    rdx,[rcx+rcx*2]
   14000bde9:	lea    r8,[rax+rdx*8]
   14000bded:	lea    rdx,[rsp+0x68]
   14000bdf2:	add    r8,r9
   14000bdf5:	mov    r9d,DWORD PTR [r8+0x14]
   14000bdf9:	lea    rcx,[r8+0x8]
   14000bdfd:	mov    r8d,DWORD PTR [r8+0x10]
   14000be01:	call   QWORD PTR [rip+0x137c9]        # 0x14001f5d0
   14000be07:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000be0f:	mov    eax,DWORD PTR [rcx]
   14000be11:	cmp    eax,0x1
   14000be14:	je     0x14000bf1e
   14000be1a:	test   eax,eax
   14000be1c:	je     0x14000bf1e
   14000be22:	movsxd rax,DWORD PTR [rcx+0x8]
   14000be26:	mov    edx,DWORD PTR [rcx+0x4]
   14000be29:	lea    rbp,[rcx+rax*8+0x10]
   14000be2e:	lea    rcx,[rsp+0xe0]
   14000be36:	call   QWORD PTR [rip+0x13674]        # 0x14001f4b0
   14000be3c:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000be44:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000be48:	mov    r12,rax
   14000be4b:	lea    r13,[rcx+rdx*8+0x10]
   14000be50:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000be54:	lea    rsi,[rcx+rdx*8+0x10]
   14000be59:	cmp    rsi,r13
   14000be5c:	je     0x14000beac
   14000be5e:	xchg   ax,ax
   14000be60:	mov    ecx,0x10
   14000be65:	call   0x14001e1c6
   14000be6a:	mov    rdi,rax
   14000be6d:	test   rax,rax
   14000be70:	je     0x14000be92
   14000be72:	mov    rbx,QWORD PTR [rbp+0x0]
   14000be76:	mov    rcx,rax
   14000be79:	mov    rdx,rbx
   14000be7c:	call   QWORD PTR [rip+0x13756]        # 0x14001f5d8
   14000be82:	lea    rdx,[rbx+0x8]
   14000be86:	lea    rcx,[rdi+0x8]
   14000be8a:	call   QWORD PTR [rip+0x13748]        # 0x14001f5d8
   14000be90:	jmp    0x14000be94
   14000be92:	xor    edi,edi
   14000be94:	mov    QWORD PTR [rsi],rdi
   14000be97:	add    rsi,0x8
   14000be9b:	add    rbp,0x8
   14000be9f:	cmp    rsi,r13
   14000bea2:	jne    0x14000be60
   14000bea4:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000beac:	mov    eax,DWORD PTR [r12]
   14000beb0:	test   eax,eax
   14000beb2:	je     0x14000bec6
   14000beb4:	cmp    eax,0xffffffff
   14000beb7:	je     0x14000bf1e
   14000beb9:	lock add DWORD PTR [r12],0xffffffff
   14000bebf:	setne  al
   14000bec2:	test   al,al
   14000bec4:	jne    0x14000bf16
   14000bec6:	movsxd rax,DWORD PTR [r12+0xc]
   14000becb:	lea    rdi,[r12+rax*8+0x10]
   14000bed0:	movsxd rax,DWORD PTR [r12+0x8]
   14000bed5:	lea    rsi,[r12+rax*8+0x10]
   14000beda:	cmp    rsi,rdi
   14000bedd:	je     0x14000bf0d
   14000bedf:	nop
   14000bee0:	mov    rbx,QWORD PTR [rdi-0x8]
   14000bee4:	sub    rdi,0x8
   14000bee8:	test   rbx,rbx
   14000beeb:	je     0x14000bf08
   14000beed:	lea    rcx,[rbx+0x8]
   14000bef1:	call   QWORD PTR [rip+0x136c1]        # 0x14001f5b8
   14000bef7:	mov    rcx,rbx
   14000befa:	call   QWORD PTR [rip+0x136b8]        # 0x14001f5b8
   14000bf00:	mov    rcx,rbx
   14000bf03:	call   0x14001e1c0
   14000bf08:	cmp    rdi,rsi
   14000bf0b:	jne    0x14000bee0
   14000bf0d:	mov    rcx,r12
   14000bf10:	call   QWORD PTR [rip+0x135d2]        # 0x14001f4e8
   14000bf16:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000bf1e:	movsxd rax,DWORD PTR [rcx+0xc]
   14000bf22:	lea    rdx,[rsp+0x68]
   14000bf27:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   14000bf2c:	call   QWORD PTR [rip+0x136ae]        # 0x14001f5e0
   14000bf32:	lea    rcx,[rsp+0x68]
   14000bf37:	call   QWORD PTR [rip+0x1367b]        # 0x14001f5b8
   14000bf3d:	mov    r11,QWORD PTR [r14]
   14000bf40:	movsxd rdx,DWORD PTR [r14+0x8]
   14000bf44:	cmp    edx,DWORD PTR [r11+0x4]
   14000bf48:	jge    0x14000bf67
   14000bf4a:	mov    rax,QWORD PTR [r11+0x10]
   14000bf4e:	lea    rcx,[rdx+rdx*2]
   14000bf52:	lea    rcx,[rax+rcx*8]
   14000bf56:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   14000bf5c:	jne    0x14000bf67
   14000bf5e:	lea    eax,[rdx+0x1]
   14000bf61:	mov    DWORD PTR [r14+0x8],eax
   14000bf65:	jmp    0x14000bf71
   14000bf67:	xor    edx,edx
   14000bf69:	mov    rcx,r14
   14000bf6c:	call   0x140019c50
   14000bf71:	mov    r8,QWORD PTR [r14]
   14000bf74:	mov    eax,DWORD PTR [r14+0x8]
   14000bf78:	dec    eax
   14000bf7a:	cdqe   
   14000bf7c:	lea    rcx,[rax+rax*2]
   14000bf80:	mov    rax,QWORD PTR [r8+0x10]
   14000bf84:	lea    rdx,[rax+rcx*8]
   14000bf88:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   14000bf8d:	lea    rcx,[rdx+r8*1+0x8]
   14000bf92:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   14000bf97:	lea    rdx,[rsp+0x50]
   14000bf9c:	call   QWORD PTR [rip+0x1362e]        # 0x14001f5d0
   14000bfa2:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000bfaa:	mov    eax,DWORD PTR [rcx]
   14000bfac:	cmp    eax,0x1
   14000bfaf:	je     0x14000c0be
   14000bfb5:	test   eax,eax
   14000bfb7:	je     0x14000c0be
   14000bfbd:	movsxd rax,DWORD PTR [rcx+0x8]
   14000bfc1:	mov    edx,DWORD PTR [rcx+0x4]
   14000bfc4:	lea    rbp,[rcx+rax*8+0x10]
   14000bfc9:	lea    rcx,[rsp+0xe0]
   14000bfd1:	call   QWORD PTR [rip+0x134d9]        # 0x14001f4b0
   14000bfd7:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000bfdf:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000bfe3:	mov    r12,rax
   14000bfe6:	lea    r13,[rcx+rdx*8+0x10]
   14000bfeb:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000bfef:	lea    rsi,[rcx+rdx*8+0x10]
   14000bff4:	cmp    rsi,r13
   14000bff7:	je     0x14000c04c
   14000bff9:	nop    DWORD PTR [rax+0x0]
   14000c000:	mov    ecx,0x10
   14000c005:	call   0x14001e1c6
   14000c00a:	mov    rdi,rax
   14000c00d:	test   rax,rax
   14000c010:	je     0x14000c032
   14000c012:	mov    rbx,QWORD PTR [rbp+0x0]
   14000c016:	mov    rcx,rax
   14000c019:	mov    rdx,rbx
   14000c01c:	call   QWORD PTR [rip+0x135b6]        # 0x14001f5d8
   14000c022:	lea    rdx,[rbx+0x8]
   14000c026:	lea    rcx,[rdi+0x8]
   14000c02a:	call   QWORD PTR [rip+0x135a8]        # 0x14001f5d8
   14000c030:	jmp    0x14000c034
   14000c032:	xor    edi,edi
   14000c034:	mov    QWORD PTR [rsi],rdi
   14000c037:	add    rsi,0x8
   14000c03b:	add    rbp,0x8
   14000c03f:	cmp    rsi,r13
   14000c042:	jne    0x14000c000
   14000c044:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000c04c:	mov    eax,DWORD PTR [r12]
   14000c050:	test   eax,eax
   14000c052:	je     0x14000c066
   14000c054:	cmp    eax,0xffffffff
   14000c057:	je     0x14000c0be
   14000c059:	lock add DWORD PTR [r12],0xffffffff
   14000c05f:	setne  al
   14000c062:	test   al,al
   14000c064:	jne    0x14000c0b6
   14000c066:	movsxd rax,DWORD PTR [r12+0xc]
   14000c06b:	lea    rdi,[r12+rax*8+0x10]
   14000c070:	movsxd rax,DWORD PTR [r12+0x8]
   14000c075:	lea    rsi,[r12+rax*8+0x10]
   14000c07a:	cmp    rsi,rdi
   14000c07d:	je     0x14000c0ad
   14000c07f:	nop
   14000c080:	mov    rbx,QWORD PTR [rdi-0x8]
   14000c084:	sub    rdi,0x8
   14000c088:	test   rbx,rbx
   14000c08b:	je     0x14000c0a8
   14000c08d:	lea    rcx,[rbx+0x8]
   14000c091:	call   QWORD PTR [rip+0x13521]        # 0x14001f5b8
   14000c097:	mov    rcx,rbx
   14000c09a:	call   QWORD PTR [rip+0x13518]        # 0x14001f5b8
   14000c0a0:	mov    rcx,rbx
   14000c0a3:	call   0x14001e1c0
   14000c0a8:	cmp    rdi,rsi
   14000c0ab:	jne    0x14000c080
   14000c0ad:	mov    rcx,r12
   14000c0b0:	call   QWORD PTR [rip+0x13432]        # 0x14001f4e8
   14000c0b6:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000c0be:	movsxd rax,DWORD PTR [rcx+0xc]
   14000c0c2:	lea    rdx,[rsp+0x50]
   14000c0c7:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   14000c0cc:	call   QWORD PTR [rip+0x1350e]        # 0x14001f5e0
   14000c0d2:	lea    rcx,[rsp+0x50]
   14000c0d7:	jmp    0x14000bda6
   14000c0dc:	nop    DWORD PTR [rax+0x0]
   14000c0e0:	mov    rdx,QWORD PTR [r14]
   14000c0e3:	movsxd r8,DWORD PTR [r14+0x8]
   14000c0e7:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000c0eb:	jge    0x14000c6dd
   14000c0f1:	mov    rax,QWORD PTR [rdx+0x10]
   14000c0f5:	lea    rcx,[r8+r8*2]
   14000c0f9:	lea    rcx,[rax+rcx*8]
   14000c0fd:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x13
   14000c102:	jne    0x14000c6dd
   14000c108:	inc    r8d
   14000c10b:	mov    DWORD PTR [r14+0x8],r8d
   14000c10f:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000c113:	jge    0x14000c135
   14000c115:	movsxd rax,r8d
   14000c118:	lea    rcx,[rax+rax*2]
   14000c11c:	mov    rax,QWORD PTR [rdx+0x10]
   14000c120:	lea    rcx,[rax+rcx*8]
   14000c124:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x1
   14000c129:	jne    0x14000c135
   14000c12b:	lea    eax,[r8+0x1]
   14000c12f:	mov    DWORD PTR [r14+0x8],eax
   14000c133:	jmp    0x14000c13f
   14000c135:	xor    edx,edx
   14000c137:	mov    rcx,r14
   14000c13a:	call   0x140019c50
   14000c13f:	mov    r8,QWORD PTR [r14]
   14000c142:	mov    eax,DWORD PTR [r14+0x8]
   14000c146:	dec    eax
   14000c148:	cdqe   
   14000c14a:	lea    rcx,[rax+rax*2]
   14000c14e:	mov    rax,QWORD PTR [r8+0x10]
   14000c152:	lea    rdx,[rax+rcx*8]
   14000c156:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   14000c15b:	lea    rcx,[rdx+r8*1+0x8]
   14000c160:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   14000c165:	lea    rdx,[rsp+0x58]
   14000c16a:	call   QWORD PTR [rip+0x13460]        # 0x14001f5d0
   14000c170:	lea    rdx,[rsp+0x58]
   14000c175:	lea    rcx,[rsp+0x20]
   14000c17a:	call   QWORD PTR [rip+0x13458]        # 0x14001f5d8
   14000c180:	lea    rcx,[rsp+0x28]
   14000c185:	call   QWORD PTR [rip+0x13435]        # 0x14001f5c0
   14000c18b:	mov    r11,QWORD PTR [rsp+0xe0]
   14000c193:	mov    eax,DWORD PTR [r11]
   14000c196:	cmp    eax,0x1
   14000c199:	je     0x14000c37e
   14000c19f:	test   eax,eax
   14000c1a1:	je     0x14000c37e
   14000c1a7:	mov    DWORD PTR [rsp+0xd0],0x7fffffff
   14000c1b2:	movsxd rax,DWORD PTR [r11+0x8]
   14000c1b6:	lea    rdx,[rsp+0xd0]
   14000c1be:	lea    rcx,[rsp+0xe0]
   14000c1c6:	mov    r8d,0x1
   14000c1cc:	lea    r15,[r11+rax*8+0x10]
   14000c1d1:	call   QWORD PTR [rip+0x132d1]        # 0x14001f4a8
   14000c1d7:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000c1df:	movsxd rcx,DWORD PTR [rsp+0xd0]
   14000c1e7:	movsxd rdx,DWORD PTR [rbx+0x8]
   14000c1eb:	mov    r13,rax
   14000c1ee:	mov    rbp,r15
   14000c1f1:	add    rcx,rdx
   14000c1f4:	lea    rsi,[rbx+rdx*8+0x10]
   14000c1f9:	lea    r12,[rbx+rcx*8+0x10]
   14000c1fe:	cmp    rsi,r12
   14000c201:	je     0x14000c24f
   14000c203:	mov    ecx,0x10
   14000c208:	call   0x14001e1c6
   14000c20d:	mov    rdi,rax
   14000c210:	test   rax,rax
   14000c213:	je     0x14000c235
   14000c215:	mov    rbx,QWORD PTR [rbp+0x0]
   14000c219:	mov    rcx,rax
   14000c21c:	mov    rdx,rbx
   14000c21f:	call   QWORD PTR [rip+0x133b3]        # 0x14001f5d8
   14000c225:	lea    rdx,[rbx+0x8]
   14000c229:	lea    rcx,[rdi+0x8]
   14000c22d:	call   QWORD PTR [rip+0x133a5]        # 0x14001f5d8
   14000c233:	jmp    0x14000c237
   14000c235:	xor    edi,edi
   14000c237:	mov    QWORD PTR [rsi],rdi
   14000c23a:	add    rsi,0x8
   14000c23e:	add    rbp,0x8
   14000c242:	cmp    rsi,r12
   14000c245:	jne    0x14000c203
   14000c247:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000c24f:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c253:	movsxd rcx,DWORD PTR [rsp+0xd0]
   14000c25b:	lea    r12,[rbx+rax*8+0x10]
   14000c260:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c264:	lea    rbp,[r15+rcx*8]
   14000c268:	add    rax,rcx
   14000c26b:	lea    rsi,[rbx+rax*8+0x18]
   14000c270:	cmp    rsi,r12
   14000c273:	je     0x14000c2c1
   14000c275:	mov    ecx,0x10
   14000c27a:	call   0x14001e1c6
   14000c27f:	mov    rdi,rax
   14000c282:	test   rax,rax
   14000c285:	je     0x14000c2a7
   14000c287:	mov    rbx,QWORD PTR [rbp+0x0]
   14000c28b:	mov    rcx,rax
   14000c28e:	mov    rdx,rbx
   14000c291:	call   QWORD PTR [rip+0x13341]        # 0x14001f5d8
   14000c297:	lea    rdx,[rbx+0x8]
   14000c29b:	lea    rcx,[rdi+0x8]
   14000c29f:	call   QWORD PTR [rip+0x13333]        # 0x14001f5d8
   14000c2a5:	jmp    0x14000c2a9
   14000c2a7:	xor    edi,edi
   14000c2a9:	mov    QWORD PTR [rsi],rdi
   14000c2ac:	add    rsi,0x8
   14000c2b0:	add    rbp,0x8
   14000c2b4:	cmp    rsi,r12
   14000c2b7:	jne    0x14000c275
   14000c2b9:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000c2c1:	mov    eax,DWORD PTR [r13+0x0]
   14000c2c5:	test   eax,eax
   14000c2c7:	je     0x14000c2db
   14000c2c9:	cmp    eax,0xffffffff
   14000c2cc:	je     0x14000c330
   14000c2ce:	lock add DWORD PTR [r13+0x0],0xffffffff
   14000c2d4:	setne  al
   14000c2d7:	test   al,al
   14000c2d9:	jne    0x14000c328
   14000c2db:	movsxd rax,DWORD PTR [r13+0xc]
   14000c2df:	lea    rdi,[r13+rax*8+0x10]
   14000c2e4:	movsxd rax,DWORD PTR [r13+0x8]
   14000c2e8:	lea    rsi,[r13+rax*8+0x10]
   14000c2ed:	cmp    rsi,rdi
   14000c2f0:	je     0x14000c31f
   14000c2f2:	mov    rbx,QWORD PTR [rdi-0x8]
   14000c2f6:	sub    rdi,0x8
   14000c2fa:	test   rbx,rbx
   14000c2fd:	je     0x14000c31a
   14000c2ff:	lea    rcx,[rbx+0x8]
   14000c303:	call   QWORD PTR [rip+0x132af]        # 0x14001f5b8
   14000c309:	mov    rcx,rbx
   14000c30c:	call   QWORD PTR [rip+0x132a6]        # 0x14001f5b8
   14000c312:	mov    rcx,rbx
   14000c315:	call   0x14001e1c0
   14000c31a:	cmp    rdi,rsi
   14000c31d:	jne    0x14000c2f2
   14000c31f:	mov    rcx,r13
   14000c322:	call   QWORD PTR [rip+0x131c0]        # 0x14001f4e8
   14000c328:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000c330:	movsxd rsi,DWORD PTR [rbx+0x8]
   14000c334:	movsxd rax,DWORD PTR [rsp+0xd0]
   14000c33c:	mov    ecx,0x10
   14000c341:	add    rsi,rax
   14000c344:	call   0x14001e1c6
   14000c349:	mov    rdi,rax
   14000c34c:	test   rax,rax
   14000c34f:	je     0x14000c375
   14000c351:	lea    rdx,[rsp+0x20]
   14000c356:	mov    rcx,rax
   14000c359:	call   QWORD PTR [rip+0x13279]        # 0x14001f5d8
   14000c35f:	lea    rcx,[rdi+0x8]
   14000c363:	lea    rdx,[rsp+0x28]
   14000c368:	call   QWORD PTR [rip+0x1326a]        # 0x14001f5d8
   14000c36e:	mov    QWORD PTR [rbx+rsi*8+0x10],rdi
   14000c373:	jmp    0x14000c3c5
   14000c375:	xor    edi,edi
   14000c377:	mov    QWORD PTR [rbx+rsi*8+0x10],rdi
   14000c37c:	jmp    0x14000c3c5
   14000c37e:	lea    rcx,[rsp+0xe0]
   14000c386:	call   QWORD PTR [rip+0x12e14]        # 0x14001f1a0
   14000c38c:	mov    ecx,0x10
   14000c391:	mov    rdi,rax
   14000c394:	call   0x14001e1c6
   14000c399:	mov    rbx,rax
   14000c39c:	test   rax,rax
   14000c39f:	je     0x14000c3c0
   14000c3a1:	lea    rdx,[rsp+0x20]
   14000c3a6:	mov    rcx,rax
   14000c3a9:	call   QWORD PTR [rip+0x13229]        # 0x14001f5d8
   14000c3af:	lea    rcx,[rbx+0x8]
   14000c3b3:	lea    rdx,[rsp+0x28]
   14000c3b8:	call   QWORD PTR [rip+0x1321a]        # 0x14001f5d8
   14000c3be:	jmp    0x14000c3c2
   14000c3c0:	xor    ebx,ebx
   14000c3c2:	mov    QWORD PTR [rdi],rbx
   14000c3c5:	lea    rcx,[rsp+0x28]
   14000c3ca:	call   QWORD PTR [rip+0x131e8]        # 0x14001f5b8
   14000c3d0:	lea    rcx,[rsp+0x20]
   14000c3d5:	call   QWORD PTR [rip+0x131dd]        # 0x14001f5b8
   14000c3db:	lea    rcx,[rsp+0x58]
   14000c3e0:	call   QWORD PTR [rip+0x131d2]        # 0x14001f5b8
   14000c3e6:	mov    r9,QWORD PTR [r14]
   14000c3e9:	movsxd rdx,DWORD PTR [r14+0x8]
   14000c3ed:	cmp    edx,DWORD PTR [r9+0x4]
   14000c3f1:	jge    0x14000c0e0
   14000c3f7:	mov    rax,QWORD PTR [r9+0x10]
   14000c3fb:	lea    rcx,[rdx+rdx*2]
   14000c3ff:	lea    rcx,[rax+rcx*8]
   14000c403:	cmp    DWORD PTR [rcx+r9*1+0x4],0x11
   14000c409:	jne    0x14000c0e0
   14000c40f:	lea    eax,[rdx+0x1]
   14000c412:	mov    DWORD PTR [r14+0x8],eax
   14000c416:	dec    eax
   14000c418:	movsxd rcx,eax
   14000c41b:	mov    rax,QWORD PTR [r9+0x10]
   14000c41f:	lea    rdx,[rcx+rcx*2]
   14000c423:	lea    r8,[rax+rdx*8]
   14000c427:	lea    rdx,[rsp+0x40]
   14000c42c:	add    r8,r9
   14000c42f:	mov    r9d,DWORD PTR [r8+0x14]
   14000c433:	lea    rcx,[r8+0x8]
   14000c437:	mov    r8d,DWORD PTR [r8+0x10]
   14000c43b:	call   QWORD PTR [rip+0x1318f]        # 0x14001f5d0
   14000c441:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000c449:	mov    eax,DWORD PTR [rcx]
   14000c44b:	cmp    eax,0x1
   14000c44e:	je     0x14000c55e
   14000c454:	test   eax,eax
   14000c456:	je     0x14000c55e
   14000c45c:	movsxd rax,DWORD PTR [rcx+0x8]
   14000c460:	mov    edx,DWORD PTR [rcx+0x4]
   14000c463:	lea    rbp,[rcx+rax*8+0x10]
   14000c468:	lea    rcx,[rsp+0xe0]
   14000c470:	call   QWORD PTR [rip+0x1303a]        # 0x14001f4b0
   14000c476:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000c47e:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000c482:	mov    r12,rax
   14000c485:	lea    r13,[rcx+rdx*8+0x10]
   14000c48a:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000c48e:	lea    rsi,[rcx+rdx*8+0x10]
   14000c493:	cmp    rsi,r13
   14000c496:	je     0x14000c4ec
   14000c498:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c4a0:	mov    ecx,0x10
   14000c4a5:	call   0x14001e1c6
   14000c4aa:	mov    rdi,rax
   14000c4ad:	test   rax,rax
   14000c4b0:	je     0x14000c4d2
   14000c4b2:	mov    rbx,QWORD PTR [rbp+0x0]
   14000c4b6:	mov    rcx,rax
   14000c4b9:	mov    rdx,rbx
   14000c4bc:	call   QWORD PTR [rip+0x13116]        # 0x14001f5d8
   14000c4c2:	lea    rdx,[rbx+0x8]
   14000c4c6:	lea    rcx,[rdi+0x8]
   14000c4ca:	call   QWORD PTR [rip+0x13108]        # 0x14001f5d8
   14000c4d0:	jmp    0x14000c4d4
   14000c4d2:	xor    edi,edi
   14000c4d4:	mov    QWORD PTR [rsi],rdi
   14000c4d7:	add    rsi,0x8
   14000c4db:	add    rbp,0x8
   14000c4df:	cmp    rsi,r13
   14000c4e2:	jne    0x14000c4a0
   14000c4e4:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000c4ec:	mov    eax,DWORD PTR [r12]
   14000c4f0:	test   eax,eax
   14000c4f2:	je     0x14000c506
   14000c4f4:	cmp    eax,0xffffffff
   14000c4f7:	je     0x14000c55e
   14000c4f9:	lock add DWORD PTR [r12],0xffffffff
   14000c4ff:	setne  al
   14000c502:	test   al,al
   14000c504:	jne    0x14000c556
   14000c506:	movsxd rax,DWORD PTR [r12+0xc]
   14000c50b:	lea    rdi,[r12+rax*8+0x10]
   14000c510:	movsxd rax,DWORD PTR [r12+0x8]
   14000c515:	lea    rsi,[r12+rax*8+0x10]
   14000c51a:	cmp    rsi,rdi
   14000c51d:	je     0x14000c54d
   14000c51f:	nop
   14000c520:	mov    rbx,QWORD PTR [rdi-0x8]
   14000c524:	sub    rdi,0x8
   14000c528:	test   rbx,rbx
   14000c52b:	je     0x14000c548
   14000c52d:	lea    rcx,[rbx+0x8]
   14000c531:	call   QWORD PTR [rip+0x13081]        # 0x14001f5b8
   14000c537:	mov    rcx,rbx
   14000c53a:	call   QWORD PTR [rip+0x13078]        # 0x14001f5b8
   14000c540:	mov    rcx,rbx
   14000c543:	call   0x14001e1c0
   14000c548:	cmp    rdi,rsi
   14000c54b:	jne    0x14000c520
   14000c54d:	mov    rcx,r12
   14000c550:	call   QWORD PTR [rip+0x12f92]        # 0x14001f4e8
   14000c556:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000c55e:	movsxd rax,DWORD PTR [rcx+0xc]
   14000c562:	lea    rdx,[rsp+0x40]
   14000c567:	mov    rcx,QWORD PTR [rcx+rax*8+0x8]
   14000c56c:	call   QWORD PTR [rip+0x1306e]        # 0x14001f5e0
   14000c572:	lea    rcx,[rsp+0x40]
   14000c577:	call   QWORD PTR [rip+0x1303b]        # 0x14001f5b8
   14000c57d:	mov    r11,QWORD PTR [r14]
   14000c580:	movsxd rdx,DWORD PTR [r14+0x8]
   14000c584:	cmp    edx,DWORD PTR [r11+0x4]
   14000c588:	jge    0x14000c5a7
   14000c58a:	mov    rax,QWORD PTR [r11+0x10]
   14000c58e:	lea    rcx,[rdx+rdx*2]
   14000c592:	lea    rcx,[rax+rcx*8]
   14000c596:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   14000c59c:	jne    0x14000c5a7
   14000c59e:	lea    eax,[rdx+0x1]
   14000c5a1:	mov    DWORD PTR [r14+0x8],eax
   14000c5a5:	jmp    0x14000c5b1
   14000c5a7:	xor    edx,edx
   14000c5a9:	mov    rcx,r14
   14000c5ac:	call   0x140019c50
   14000c5b1:	mov    r8,QWORD PTR [r14]
   14000c5b4:	mov    eax,DWORD PTR [r14+0x8]
   14000c5b8:	dec    eax
   14000c5ba:	cdqe   
   14000c5bc:	lea    rcx,[rax+rax*2]
   14000c5c0:	mov    rax,QWORD PTR [r8+0x10]
   14000c5c4:	lea    rdx,[rax+rcx*8]
   14000c5c8:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   14000c5cd:	lea    rcx,[rdx+r8*1+0x8]
   14000c5d2:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   14000c5d7:	lea    rdx,[rsp+0x48]
   14000c5dc:	call   QWORD PTR [rip+0x12fee]        # 0x14001f5d0
   14000c5e2:	mov    r11,QWORD PTR [rsp+0xe0]
   14000c5ea:	mov    eax,DWORD PTR [r11]
   14000c5ed:	cmp    eax,0x1
   14000c5f0:	je     0x14000c6b6
   14000c5f6:	test   eax,eax
   14000c5f8:	je     0x14000c6b6
   14000c5fe:	movsxd rax,DWORD PTR [r11+0x8]
   14000c602:	mov    edx,DWORD PTR [r11+0x4]
   14000c606:	lea    rcx,[rsp+0xe0]
   14000c60e:	lea    rbx,[r11+rax*8+0x10]
   14000c613:	call   QWORD PTR [rip+0x12e97]        # 0x14001f4b0
   14000c619:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000c621:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000c625:	mov    r9,rbx
   14000c628:	mov    rsi,rax
   14000c62b:	lea    r8,[rcx+rdx*8+0x10]
   14000c630:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000c634:	lea    rdx,[rcx+rdx*8+0x10]
   14000c639:	lea    rcx,[rsp+0xe0]
   14000c641:	call   0x140001f20
   14000c646:	mov    r11d,DWORD PTR [rsi]
   14000c649:	test   r11d,r11d
   14000c64c:	je     0x14000c65f
   14000c64e:	cmp    r11d,0xffffffff
   14000c652:	je     0x14000c6b6
   14000c654:	lock add DWORD PTR [rsi],0xffffffff
   14000c658:	setne  al
   14000c65b:	test   al,al
   14000c65d:	jne    0x14000c6b6
   14000c65f:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c663:	lea    rdi,[rsi+rax*8+0x10]
   14000c668:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c66c:	lea    rbp,[rsi+rax*8+0x10]
   14000c671:	cmp    rbp,rdi
   14000c674:	je     0x14000c6ad
   14000c676:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c680:	mov    rbx,QWORD PTR [rdi-0x8]
   14000c684:	sub    rdi,0x8
   14000c688:	test   rbx,rbx
   14000c68b:	je     0x14000c6a8
   14000c68d:	lea    rcx,[rbx+0x8]
   14000c691:	call   QWORD PTR [rip+0x12f21]        # 0x14001f5b8
   14000c697:	mov    rcx,rbx
   14000c69a:	call   QWORD PTR [rip+0x12f18]        # 0x14001f5b8
   14000c6a0:	mov    rcx,rbx
   14000c6a3:	call   0x14001e1c0
   14000c6a8:	cmp    rdi,rbp
   14000c6ab:	jne    0x14000c680
   14000c6ad:	mov    rcx,rsi
   14000c6b0:	call   QWORD PTR [rip+0x12e32]        # 0x14001f4e8
   14000c6b6:	lea    rcx,[rsp+0xe0]
   14000c6be:	call   QWORD PTR [rip+0x12c14]        # 0x14001f2d8
   14000c6c4:	lea    rdx,[rsp+0x48]
   14000c6c9:	mov    rcx,QWORD PTR [rax-0x8]
   14000c6cd:	call   QWORD PTR [rip+0x12bfd]        # 0x14001f2d0
   14000c6d3:	lea    rcx,[rsp+0x48]
   14000c6d8:	jmp    0x14000c3e0
   14000c6dd:	lea    rcx,[rsp+0xe0]
   14000c6e5:	xor    r12d,r12d
   14000c6e8:	call   QWORD PTR [rip+0x12bda]        # 0x14001f2c8
   14000c6ee:	test   eax,eax
   14000c6f0:	jle    0x14000c8a4
   14000c6f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c700:	lea    rcx,[rsp+0xe0]
   14000c708:	mov    edx,r12d
   14000c70b:	call   QWORD PTR [rip+0x12baf]        # 0x14001f2c0
   14000c711:	lea    rcx,[rsp+0x70]
   14000c716:	mov    rbx,QWORD PTR [rax]
   14000c719:	call   QWORD PTR [rip+0x12ea1]        # 0x14001f5c0
   14000c71f:	mov    rcx,QWORD PTR [r14+0x48]
   14000c723:	mov    rdx,rbx
   14000c726:	mov    rdi,rax
   14000c729:	call   0x140002370
   14000c72e:	test   rax,rax
   14000c731:	je     0x14000c737
   14000c733:	lea    rdi,[rax+0x20]
   14000c737:	lea    rcx,[rsp+0xe8]
   14000c73f:	mov    rdx,rdi
   14000c742:	call   QWORD PTR [rip+0x12e90]        # 0x14001f5d8
   14000c748:	lea    rcx,[rsp+0x70]
   14000c74d:	call   QWORD PTR [rip+0x12e65]        # 0x14001f5b8
   14000c753:	lea    rcx,[rsp+0xe8]
   14000c75b:	call   QWORD PTR [rip+0x12b57]        # 0x14001f2b8
   14000c761:	test   al,al
   14000c763:	je     0x14000c774
   14000c765:	lea    rdx,[rip+0x13484]        # 0x14001fbf0
   14000c76c:	mov    rcx,r14
   14000c76f:	call   0x140019c50
   14000c774:	mov    rax,QWORD PTR [rsp+0xe0]
   14000c77c:	mov    ecx,DWORD PTR [rax]
   14000c77e:	cmp    ecx,0x1
   14000c781:	je     0x14000c856
   14000c787:	test   ecx,ecx
   14000c789:	je     0x14000c856
   14000c78f:	mov    ebx,DWORD PTR [rax+0x4]
   14000c792:	lea    rcx,[rsp+0xe0]
   14000c79a:	call   QWORD PTR [rip+0x12b10]        # 0x14001f2b0
   14000c7a0:	lea    rcx,[rsp+0xe0]
   14000c7a8:	mov    edx,ebx
   14000c7aa:	mov    rdi,rax
   14000c7ad:	call   QWORD PTR [rip+0x12cfd]        # 0x14001f4b0
   14000c7b3:	lea    rcx,[rsp+0xe0]
   14000c7bb:	mov    rsi,rax
   14000c7be:	call   QWORD PTR [rip+0x12b14]        # 0x14001f2d8
   14000c7c4:	lea    rcx,[rsp+0xe0]
   14000c7cc:	mov    rbx,rax
   14000c7cf:	call   QWORD PTR [rip+0x12adb]        # 0x14001f2b0
   14000c7d5:	lea    rcx,[rsp+0xe0]
   14000c7dd:	mov    r9,rdi
   14000c7e0:	mov    r8,rbx
   14000c7e3:	mov    rdx,rax
   14000c7e6:	call   0x140001f20
   14000c7eb:	mov    r11d,DWORD PTR [rsi]
   14000c7ee:	test   r11d,r11d
   14000c7f1:	je     0x14000c804
   14000c7f3:	cmp    r11d,0xffffffff
   14000c7f7:	je     0x14000c856
   14000c7f9:	lock add DWORD PTR [rsi],0xffffffff
   14000c7fd:	setne  al
   14000c800:	test   al,al
   14000c802:	jne    0x14000c856
   14000c804:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c808:	lea    rdi,[rsi+rax*8+0x10]
   14000c80d:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c811:	lea    rbp,[rsi+rax*8+0x10]
   14000c816:	cmp    rbp,rdi
   14000c819:	je     0x14000c84d
   14000c81b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c820:	mov    rbx,QWORD PTR [rdi-0x8]
   14000c824:	sub    rdi,0x8
   14000c828:	test   rbx,rbx
   14000c82b:	je     0x14000c848
   14000c82d:	lea    rcx,[rbx+0x8]
   14000c831:	call   QWORD PTR [rip+0x12d81]        # 0x14001f5b8
   14000c837:	mov    rcx,rbx
   14000c83a:	call   QWORD PTR [rip+0x12d78]        # 0x14001f5b8
   14000c840:	mov    rcx,rbx
   14000c843:	call   0x14001e1c0
   14000c848:	cmp    rdi,rbp
   14000c84b:	jne    0x14000c820
   14000c84d:	mov    rcx,rsi
   14000c850:	call   QWORD PTR [rip+0x12c92]        # 0x14001f4e8
   14000c856:	lea    rcx,[rsp+0xe0]
   14000c85e:	mov    edx,r12d
   14000c861:	call   QWORD PTR [rip+0x12a59]        # 0x14001f2c0
   14000c867:	lea    rdx,[rsp+0xe8]
   14000c86f:	mov    rcx,QWORD PTR [rax]
   14000c872:	add    rcx,0x8
   14000c876:	call   QWORD PTR [rip+0x12cdc]        # 0x14001f558
   14000c87c:	lea    rcx,[rsp+0xe8]
   14000c884:	call   QWORD PTR [rip+0x12d2e]        # 0x14001f5b8
   14000c88a:	lea    rcx,[rsp+0xe0]
   14000c892:	inc    r12d
   14000c895:	call   QWORD PTR [rip+0x12a2d]        # 0x14001f2c8
   14000c89b:	cmp    r12d,eax
   14000c89e:	jl     0x14000c700
   14000c8a4:	mov    r13,QWORD PTR [rsp+0xd8]
   14000c8ac:	mov    rax,QWORD PTR [r13+0x18]
   14000c8b0:	mov    ecx,DWORD PTR [rax]
   14000c8b2:	cmp    ecx,0x1
   14000c8b5:	je     0x14000c8e6
   14000c8b7:	test   ecx,ecx
   14000c8b9:	je     0x14000c8e6
   14000c8bb:	lea    rcx,[r13+0x18]
   14000c8bf:	mov    edx,0x7fffffff
   14000c8c4:	mov    r8d,0x1
   14000c8ca:	call   0x1400063b0
   14000c8cf:	test   rax,rax
   14000c8d2:	je     0x14000c90a
   14000c8d4:	lea    rdx,[rsp+0xe0]
   14000c8dc:	mov    rcx,rax
   14000c8df:	call   0x140003fc0
   14000c8e4:	jmp    0x14000c90a
   14000c8e6:	lea    rdx,[rsp+0xe0]
   14000c8ee:	lea    rcx,[rsp+0x78]
   14000c8f3:	call   0x140003fc0
   14000c8f8:	lea    rcx,[r13+0x18]
   14000c8fc:	call   QWORD PTR [rip+0x1289e]        # 0x14001f1a0
   14000c902:	mov    rcx,QWORD PTR [rsp+0x78]
   14000c907:	mov    QWORD PTR [rax],rcx
   14000c90a:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000c912:	mov    eax,DWORD PTR [rsi]
   14000c914:	test   eax,eax
   14000c916:	je     0x14000c938
   14000c918:	cmp    eax,0xffffffff
   14000c91b:	je     0x14000bc90
   14000c921:	lock add DWORD PTR [rsi],0xffffffff
   14000c925:	setne  al
   14000c928:	test   al,al
   14000c92a:	jne    0x14000bc90
   14000c930:	mov    rsi,QWORD PTR [rsp+0xe0]
   14000c938:	movsxd rax,DWORD PTR [rsi+0xc]
   14000c93c:	lea    rdi,[rsi+rax*8+0x10]
   14000c941:	movsxd rax,DWORD PTR [rsi+0x8]
   14000c945:	lea    rbp,[rsi+rax*8+0x10]
   14000c94a:	cmp    rbp,rdi
   14000c94d:	je     0x14000c97d
   14000c94f:	nop
   14000c950:	mov    rbx,QWORD PTR [rdi-0x8]
   14000c954:	sub    rdi,0x8
   14000c958:	test   rbx,rbx
   14000c95b:	je     0x14000c978
   14000c95d:	lea    rcx,[rbx+0x8]
   14000c961:	call   QWORD PTR [rip+0x12c51]        # 0x14001f5b8
   14000c967:	mov    rcx,rbx
   14000c96a:	call   QWORD PTR [rip+0x12c48]        # 0x14001f5b8
   14000c970:	mov    rcx,rbx
   14000c973:	call   0x14001e1c0
   14000c978:	cmp    rdi,rbp
   14000c97b:	jne    0x14000c950
   14000c97d:	mov    rcx,rsi
   14000c980:	call   QWORD PTR [rip+0x12b62]        # 0x14001f4e8
   14000c986:	jmp    0x14000bc90
   14000c98b:	movsxd rbx,DWORD PTR [r14+0x8]
   14000c98f:	mov    rcx,r9
   14000c992:	cmp    ebx,DWORD PTR [r9+0x4]
   14000c996:	jge    0x14000c9af
   14000c998:	call   QWORD PTR [rip+0x1290a]        # 0x14001f2a8
   14000c99e:	lea    rdx,[rbx+rbx*2]
   14000c9a2:	cmp    DWORD PTR [rax+rdx*8+0x4],0xa
   14000c9a7:	jne    0x14000c9af
   14000c9a9:	inc    DWORD PTR [r14+0x8]
   14000c9ad:	jmp    0x14000c9b9
   14000c9af:	xor    edx,edx
   14000c9b1:	mov    rcx,r14
   14000c9b4:	call   0x140019c50
   14000c9b9:	add    rsp,0x88
   14000c9c0:	pop    r15
   14000c9c2:	pop    r14
   14000c9c4:	pop    r13
   14000c9c6:	pop    r12
   14000c9c8:	pop    rdi
   14000c9c9:	pop    rsi
   14000c9ca:	pop    rbp
   14000c9cb:	pop    rbx
   14000c9cc:	ret    
   14000c9cd:	int3   
   14000c9ce:	int3   
   14000c9cf:	int3   
   14000c9d0:	mov    r11,rsp
   14000c9d3:	mov    QWORD PTR [r11+0x8],rcx
   14000c9d7:	push   rbp
   14000c9d8:	sub    rsp,0x160
   14000c9df:	mov    rax,QWORD PTR [rip+0x12b52]        # 0x14001f538
   14000c9e6:	mov    QWORD PTR [r11-0x10],rbx
   14000c9ea:	mov    QWORD PTR [r11-0x20],rdi
   14000c9ee:	mov    QWORD PTR [r11+0x20],rax
   14000c9f2:	mov    QWORD PTR [r11-0x38],r14
   14000c9f6:	xor    ebx,ebx
   14000c9f8:	mov    QWORD PTR [r11-0x40],r15
   14000c9fc:	mov    r15,rdx
   14000c9ff:	xor    edx,edx
   14000ca01:	mov    rax,QWORD PTR [r15+0x70]
   14000ca05:	lea    r14,[r15+0x70]
   14000ca09:	or     ebp,0xffffffff
   14000ca0c:	mov    r8d,DWORD PTR [rax+0xc]
   14000ca10:	mov    rdi,rcx
   14000ca13:	mov    DWORD PTR [rsp+0x178],edx
   14000ca1a:	sub    r8d,DWORD PTR [rax+0x8]
   14000ca1e:	mov    QWORD PTR [rsp+0x38],rbx
   14000ca23:	test   r8d,r8d
   14000ca26:	jle    0x14000d161
   14000ca2c:	mov    QWORD PTR [r11-0x18],rsi
   14000ca30:	mov    QWORD PTR [r11-0x28],r12
   14000ca34:	mov    QWORD PTR [r11-0x30],r13
   14000ca38:	lea    r13,[rip+0x13239]        # 0x14001fc78
   14000ca3f:	lea    r12,[rip+0x13222]        # 0x14001fc68
   14000ca46:	lea    rsi,[rip+0x13217]        # 0x14001fc64
   14000ca4d:	nop    DWORD PTR [rax]
   14000ca50:	mov    rcx,QWORD PTR [r14]
   14000ca53:	mov    eax,DWORD PTR [rcx]
   14000ca55:	cmp    eax,0x1
   14000ca58:	je     0x14000ca70
   14000ca5a:	test   eax,eax
   14000ca5c:	je     0x14000ca70
   14000ca5e:	mov    edx,DWORD PTR [rcx+0x4]
   14000ca61:	mov    rcx,r14
   14000ca64:	call   0x140003f00
   14000ca69:	mov    edx,DWORD PTR [rsp+0x178]
   14000ca70:	mov    rcx,QWORD PTR [r14]
   14000ca73:	movsxd rax,DWORD PTR [rcx+0x8]
   14000ca77:	add    rax,rbx
   14000ca7a:	mov    r14,QWORD PTR [rcx+rax*8+0x10]
   14000ca7f:	mov    QWORD PTR [rsp+0x70],r14
   14000ca84:	mov    rax,QWORD PTR [r14+0x18]
   14000ca88:	cmp    DWORD PTR [rax+0x4],0x0
   14000ca8c:	jne    0x14000ca9c
   14000ca8e:	mov    rax,QWORD PTR [r14+0x10]
   14000ca92:	cmp    DWORD PTR [rax+0x4],0x0
   14000ca96:	je     0x14000d119
   14000ca9c:	mov    rcx,QWORD PTR [rsp+0x188]
   14000caa4:	xor    eax,eax
   14000caa6:	cmp    DWORD PTR [rcx+0x20],eax
   14000caa9:	je     0x14000cab7
   14000caab:	mov    edx,DWORD PTR [rcx+0x24]
   14000caae:	mov    rcx,r14
   14000cab1:	call   QWORD PTR [rip+0x12a19]        # 0x14001f4d0
   14000cab7:	lea    rcx,[rsp+0x188]
   14000cabf:	mov    r8d,eax
   14000cac2:	mov    rdx,r14
   14000cac5:	call   0x1400025e0
   14000caca:	mov    rbx,QWORD PTR [rsp+0x188]
   14000cad2:	cmp    QWORD PTR [rax],rbx
   14000cad5:	je     0x14000cb83
   14000cadb:	lea    rax,[rsp+0x78]
   14000cae0:	lea    rdx,[rsp+0x50]
   14000cae5:	lea    rcx,[rsp+0xb8]
   14000caed:	mov    QWORD PTR [rsp+0x98],rax
   14000caf5:	lea    rax,[rsp+0x98]
   14000cafd:	mov    QWORD PTR [rsp+0x78],r12
   14000cb02:	mov    QWORD PTR [rsp+0xd8],rax
   14000cb0a:	lea    rax,[rsp+0xd8]
   14000cb12:	mov    QWORD PTR [rsp+0x80],r14
   14000cb1a:	mov    QWORD PTR [rsp+0xa0],r13
   14000cb22:	mov    QWORD PTR [rsp+0xe0],r15
   14000cb2a:	mov    QWORD PTR [rsp+0xc0],rsi
   14000cb32:	mov    QWORD PTR [rsp+0xb8],rax
   14000cb3a:	call   0x1400061d0
   14000cb3f:	lea    rdx,[rsp+0x50]
   14000cb44:	lea    rcx,[rsp+0x58]
   14000cb49:	call   QWORD PTR [rip+0x12a89]        # 0x14001f5d8
   14000cb4f:	lea    rcx,[rsp+0x50]
   14000cb54:	call   QWORD PTR [rip+0x12a5e]        # 0x14001f5b8
   14000cb5a:	lea    rcx,[rsp+0x58]
   14000cb5f:	call   QWORD PTR [rip+0x12a93]        # 0x14001f5f8
   14000cb65:	mov    rcx,rdi
   14000cb68:	mov    rdx,rax
   14000cb6b:	call   0x140019d80
   14000cb70:	lea    rcx,[rsp+0x58]
   14000cb75:	call   QWORD PTR [rip+0x12a3d]        # 0x14001f5b8
   14000cb7b:	mov    rbx,QWORD PTR [rsp+0x188]
   14000cb83:	mov    eax,DWORD PTR [rbx+0x10]
   14000cb86:	cmp    eax,0x1
   14000cb89:	je     0x14000cbf9
   14000cb8b:	test   eax,eax
   14000cb8d:	je     0x14000cbf9
   14000cb8f:	lea    r8,[rip+0xffffffffffff5d8a]        # 0x140002920
   14000cb96:	lea    rdx,[rip+0xffffffffffff56b3]        # 0x140002250
   14000cb9d:	mov    r9d,0x18
   14000cba3:	mov    rcx,rbx
   14000cba6:	mov    DWORD PTR [rsp+0x20],0x8
   14000cbae:	call   QWORD PTR [rip+0x127bc]        # 0x14001f370
   14000cbb4:	mov    rcx,QWORD PTR [rsp+0x188]
   14000cbbc:	mov    rbx,rax
   14000cbbf:	mov    eax,DWORD PTR [rcx+0x10]
   14000cbc2:	test   eax,eax
   14000cbc4:	je     0x14000cbe4
   14000cbc6:	cmp    eax,0xffffffff
   14000cbc9:	je     0x14000cbf1
   14000cbcb:	mov    eax,ebp
   14000cbcd:	lock xadd DWORD PTR [rcx+0x10],eax
   14000cbd2:	add    eax,0xffffffff
   14000cbd5:	setne  al
   14000cbd8:	test   al,al
   14000cbda:	jne    0x14000cbf1
   14000cbdc:	mov    rcx,QWORD PTR [rsp+0x188]
   14000cbe4:	lea    rdx,[rip+0xffffffffffff5d35]        # 0x140002920
   14000cbeb:	call   QWORD PTR [rip+0x128c7]        # 0x14001f4b8
   14000cbf1:	mov    QWORD PTR [rsp+0x188],rbx
   14000cbf9:	mov    edx,DWORD PTR [rbx+0x24]
   14000cbfc:	mov    rcx,r14
   14000cbff:	call   QWORD PTR [rip+0x128cb]        # 0x14001f4d0
   14000cc05:	lea    rcx,[rsp+0x188]
   14000cc0d:	mov    rdx,r14
   14000cc10:	mov    r8d,eax
   14000cc13:	mov    edi,eax
   14000cc15:	mov    DWORD PTR [rsp+0x180],eax
   14000cc1c:	call   0x1400025e0
   14000cc21:	mov    rcx,QWORD PTR [rsp+0x188]
   14000cc29:	mov    rsi,rax
   14000cc2c:	cmp    QWORD PTR [rax],rcx
   14000cc2f:	jne    0x14000ccb5
   14000cc35:	call   QWORD PTR [rip+0x126a5]        # 0x14001f2e0
   14000cc3b:	test   al,al
   14000cc3d:	je     0x14000cc72
   14000cc3f:	mov    rax,QWORD PTR [rsp+0x188]
   14000cc47:	mov    rcx,r14
   14000cc4a:	mov    edx,DWORD PTR [rax+0x24]
   14000cc4d:	call   QWORD PTR [rip+0x1287d]        # 0x14001f4d0
   14000cc53:	lea    rcx,[rsp+0x188]
   14000cc5b:	mov    rdx,r14
   14000cc5e:	mov    r8d,eax
   14000cc61:	mov    edi,eax
   14000cc63:	mov    DWORD PTR [rsp+0x180],eax
   14000cc6a:	call   0x1400025e0
   14000cc6f:	mov    rsi,rax
   14000cc72:	mov    rcx,QWORD PTR [rsp+0x188]
   14000cc7a:	mov    edx,0x8
   14000cc7f:	call   QWORD PTR [rip+0x1285b]        # 0x14001f4e0
   14000cc85:	mov    rbx,rax
   14000cc88:	test   rax,rax
   14000cc8b:	je     0x14000cca5
   14000cc8d:	mov    rcx,QWORD PTR [rsi]
   14000cc90:	mov    rdx,r14
   14000cc93:	mov    DWORD PTR [rax+0x8],edi
   14000cc96:	mov    QWORD PTR [rax],rcx
   14000cc99:	lea    rcx,[rax+0x10]
   14000cc9d:	call   QWORD PTR [rip+0x12935]        # 0x14001f5d8
   14000cca3:	jmp    0x14000cca7
   14000cca5:	xor    ebx,ebx
   14000cca7:	mov    QWORD PTR [rsi],rbx
   14000ccaa:	mov    rax,QWORD PTR [rsp+0x188]
   14000ccb2:	inc    DWORD PTR [rax+0x14]
   14000ccb5:	mov    rax,QWORD PTR [r15+0x60]
   14000ccb9:	xor    r13d,r13d
   14000ccbc:	xor    r12d,r12d
   14000ccbf:	mov    ecx,DWORD PTR [rax+0xc]
   14000ccc2:	sub    ecx,DWORD PTR [rax+0x8]
   14000ccc5:	test   ecx,ecx
   14000ccc7:	jle    0x14000cf03
   14000cccd:	lea    rdx,[r14+0x18]
   14000ccd1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000cce0:	mov    rcx,QWORD PTR [r15+0x60]
   14000cce4:	movsxd rax,DWORD PTR [rcx+0x8]
   14000cce8:	add    rax,r12
   14000cceb:	mov    rsi,QWORD PTR [rcx+rax*8+0x10]
   14000ccf0:	mov    rax,QWORD PTR [rsi+0x30]
   14000ccf4:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ccf8:	mov    rax,QWORD PTR [rdx]
   14000ccfb:	cmp    ecx,DWORD PTR [rax+0x4]
   14000ccfe:	jne    0x14000cee7
   14000cd04:	mov    rdi,rcx
   14000cd07:	mov    rcx,rdx
   14000cd0a:	call   QWORD PTR [rip+0x128e8]        # 0x14001f5f8
   14000cd10:	lea    rcx,[rsi+0x30]
   14000cd14:	mov    rbx,rax
   14000cd17:	call   QWORD PTR [rip+0x128db]        # 0x14001f5f8
   14000cd1d:	mov    r8,rdi
   14000cd20:	mov    rcx,rax
   14000cd23:	mov    rdx,rbx
   14000cd26:	call   0x14001e102
   14000cd2b:	test   eax,eax
   14000cd2d:	jne    0x14000ced7
   14000cd33:	cmp    BYTE PTR [rsi+0x4c],al
   14000cd36:	je     0x14000cee3
   14000cd3c:	mov    rax,QWORD PTR [rsi+0x40]
   14000cd40:	mov    ecx,DWORD PTR [rax+0x8]
   14000cd43:	mov    eax,DWORD PTR [rax+0xc]
   14000cd46:	cmp    eax,ecx
   14000cd48:	jne    0x14000cedd
   14000cd4e:	lea    rdx,[rsi+0x20]
   14000cd52:	lea    rcx,[rsp+0x30]
   14000cd57:	call   QWORD PTR [rip+0x1287b]        # 0x14001f5d8
   14000cd5d:	lea    rdx,[rip+0x12ef4]        # 0x14001fc58
   14000cd64:	lea    rcx,[r14+0x8]
   14000cd68:	call   QWORD PTR [rip+0x12882]        # 0x14001f5f0
   14000cd6e:	test   eax,eax
   14000cd70:	jne    0x14000cd9a
   14000cd72:	lea    rdx,[rip+0x12ecf]        # 0x14001fc48
   14000cd79:	lea    rcx,[rsp+0x30]
   14000cd7e:	call   QWORD PTR [rip+0x1286c]        # 0x14001f5f0
   14000cd84:	test   eax,eax
   14000cd86:	jne    0x14000cd9a
   14000cd88:	lea    rdx,[rip+0x12ec9]        # 0x14001fc58
   14000cd8f:	lea    rcx,[rsp+0x30]
   14000cd94:	call   QWORD PTR [rip+0x1242e]        # 0x14001f1c8
   14000cd9a:	lea    rdx,[rsp+0x60]
   14000cd9f:	lea    rcx,[rsp+0x30]
   14000cda4:	mov    r8d,0x6
   14000cdaa:	call   QWORD PTR [rip+0x12800]        # 0x14001f5b0
   14000cdb0:	lea    rdx,[rip+0x1294d]        # 0x14001f704
   14000cdb7:	mov    rcx,rax
   14000cdba:	call   QWORD PTR [rip+0x12830]        # 0x14001f5f0
   14000cdc0:	lea    rcx,[rsp+0x60]
   14000cdc5:	test   eax,eax
   14000cdc7:	sete   bl
   14000cdca:	call   QWORD PTR [rip+0x127e8]        # 0x14001f5b8
   14000cdd0:	test   bl,bl
   14000cdd2:	je     0x14000ce05
   14000cdd4:	or     r9d,0xffffffff
   14000cdd8:	lea    rdx,[rsp+0x68]
   14000cddd:	lea    rcx,[rsp+0x30]
   14000cde2:	lea    r8d,[r9+0x7]
   14000cde6:	call   QWORD PTR [rip+0x127e4]        # 0x14001f5d0
   14000cdec:	lea    rcx,[rsp+0x30]
   14000cdf1:	mov    rdx,rax
   14000cdf4:	call   QWORD PTR [rip+0x1275e]        # 0x14001f558
   14000cdfa:	lea    rcx,[rsp+0x68]
   14000cdff:	call   QWORD PTR [rip+0x127b3]        # 0x14001f5b8
   14000ce05:	mov    rax,QWORD PTR [r14+0x8]
   14000ce09:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ce0d:	mov    rax,QWORD PTR [rsp+0x30]
   14000ce12:	cmp    ecx,DWORD PTR [rax+0x4]
   14000ce15:	jne    0x14000ce44
   14000ce17:	mov    rdi,rcx
   14000ce1a:	lea    rcx,[rsp+0x30]
   14000ce1f:	call   QWORD PTR [rip+0x127d3]        # 0x14001f5f8
   14000ce25:	lea    rcx,[r14+0x8]
   14000ce29:	mov    rbx,rax
   14000ce2c:	call   QWORD PTR [rip+0x127c6]        # 0x14001f5f8
   14000ce32:	mov    r8,rdi
   14000ce35:	mov    rcx,rax
   14000ce38:	mov    rdx,rbx
   14000ce3b:	call   0x14001e102
   14000ce40:	test   eax,eax
   14000ce42:	je     0x14000ce6c
   14000ce44:	lea    rcx,[rsp+0x30]
   14000ce49:	mov    dl,0x2a
   14000ce4b:	call   QWORD PTR [rip+0x1274f]        # 0x14001f5a0
   14000ce51:	test   al,al
   14000ce53:	je     0x14000ce6c
   14000ce55:	lea    rcx,[rsp+0x30]
   14000ce5a:	mov    edx,0x1
   14000ce5f:	call   QWORD PTR [rip+0x12373]        # 0x14001f1d8
   14000ce65:	mov    esi,0x2
   14000ce6a:	jmp    0x14000ce83
   14000ce6c:	mov    dl,0x26
   14000ce6e:	mov    rcx,rsi
   14000ce71:	call   QWORD PTR [rip+0x12729]        # 0x14001f5a0
   14000ce77:	xor    esi,esi
   14000ce79:	test   al,al
   14000ce7b:	mov    eax,0x1
   14000ce80:	cmovne esi,eax
   14000ce83:	mov    rax,QWORD PTR [r14+0x8]
   14000ce87:	movsxd rdx,DWORD PTR [rax+0x4]
   14000ce8b:	mov    rax,QWORD PTR [rsp+0x30]
   14000ce90:	cmp    edx,DWORD PTR [rax+0x4]
   14000ce93:	jne    0x14000cec6
   14000ce95:	lea    rcx,[rsp+0x30]
   14000ce9a:	mov    rdi,rdx
   14000ce9d:	call   QWORD PTR [rip+0x12755]        # 0x14001f5f8
   14000cea3:	lea    rcx,[r14+0x8]
   14000cea7:	mov    rbx,rax
   14000ceaa:	call   QWORD PTR [rip+0x12748]        # 0x14001f5f8
   14000ceb0:	mov    r8,rdi
   14000ceb3:	mov    rcx,rax
   14000ceb6:	mov    rdx,rbx
   14000ceb9:	call   0x14001e102
   14000cebe:	test   eax,eax
   14000cec0:	je     0x14000cf91
   14000cec6:	lea    rcx,[rsp+0x30]
   14000cecb:	call   QWORD PTR [rip+0x126e7]        # 0x14001f5b8
   14000ced1:	lea    rdx,[r14+0x18]
   14000ced5:	jmp    0x14000cee7
   14000ced7:	lea    rdx,[r14+0x18]
   14000cedb:	jmp    0x14000cee7
   14000cedd:	lea    rdx,[r14+0x18]
   14000cee1:	jmp    0x14000cee7
   14000cee3:	lea    rdx,[r14+0x18]
   14000cee7:	mov    rax,QWORD PTR [r15+0x60]
   14000ceeb:	inc    r13d
   14000ceee:	inc    r12
   14000cef1:	mov    ecx,DWORD PTR [rax+0xc]
   14000cef4:	sub    ecx,DWORD PTR [rax+0x8]
   14000cef7:	cmp    r13d,ecx
   14000cefa:	jl     0x14000cce0
   14000cf00:	or     ebp,0xffffffff
   14000cf03:	mov    rax,QWORD PTR [r14+0x58]
   14000cf07:	lea    r13,[r14+0x58]
   14000cf0b:	cmp    DWORD PTR [rax+0x4],0x0
   14000cf0f:	je     0x14000d0cf
   14000cf15:	mov    rax,QWORD PTR [r15+0x48]
   14000cf19:	mov    r14d,ebp
   14000cf1c:	xor    r12d,r12d
   14000cf1f:	mov    ecx,DWORD PTR [rax+0xc]
   14000cf22:	xor    ebp,ebp
   14000cf24:	sub    ecx,DWORD PTR [rax+0x8]
   14000cf27:	test   ecx,ecx
   14000cf29:	jle    0x14000cfab
   14000cf2f:	nop
   14000cf30:	mov    rcx,QWORD PTR [r15+0x48]
   14000cf34:	movsxd rax,DWORD PTR [rcx+0x8]
   14000cf38:	add    rax,r12
   14000cf3b:	mov    rsi,QWORD PTR [rcx+rax*8+0x10]
   14000cf40:	mov    rax,QWORD PTR [rsi+0x30]
   14000cf44:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cf48:	mov    rax,QWORD PTR [r13+0x0]
   14000cf4c:	cmp    ecx,DWORD PTR [rax+0x4]
   14000cf4f:	jne    0x14000cf7c
   14000cf51:	mov    rdi,rcx
   14000cf54:	mov    rcx,r13
   14000cf57:	call   QWORD PTR [rip+0x1269b]        # 0x14001f5f8
   14000cf5d:	lea    rcx,[rsi+0x30]
   14000cf61:	mov    rbx,rax
   14000cf64:	call   QWORD PTR [rip+0x1268e]        # 0x14001f5f8
   14000cf6a:	mov    r8,rdi
   14000cf6d:	mov    rcx,rax
   14000cf70:	mov    rdx,rbx
   14000cf73:	call   0x14001e102
   14000cf78:	test   eax,eax
   14000cf7a:	je     0x14000cfa8
   14000cf7c:	mov    rax,QWORD PTR [r15+0x48]
   14000cf80:	inc    ebp
   14000cf82:	inc    r12
   14000cf85:	mov    ecx,DWORD PTR [rax+0xc]
   14000cf88:	sub    ecx,DWORD PTR [rax+0x8]
   14000cf8b:	cmp    ebp,ecx
   14000cf8d:	jl     0x14000cf30
   14000cf8f:	jmp    0x14000cfab
   14000cf91:	lea    rcx,[rsp+0x30]
   14000cf96:	mov    DWORD PTR [r14+0x70],esi
   14000cf9a:	call   QWORD PTR [rip+0x12618]        # 0x14001f5b8
   14000cfa0:	or     ebp,0xffffffff
   14000cfa3:	jmp    0x14000cf03
   14000cfa8:	mov    r14d,ebp
   14000cfab:	mov    rax,QWORD PTR [rsp+0x70]
   14000cfb0:	mov    DWORD PTR [rax+0x68],r14d
   14000cfb4:	cmp    r14d,0xffffffff
   14000cfb8:	jne    0x14000d0f5
   14000cfbe:	mov    QWORD PTR [rsp+0xb0],rax
   14000cfc6:	lea    rcx,[rip+0x12c6b]        # 0x14001fc38
   14000cfcd:	lea    rax,[rsp+0xa8]
   14000cfd5:	mov    QWORD PTR [rsp+0xf8],rcx
   14000cfdd:	mov    QWORD PTR [rsp+0xc8],rax
   14000cfe5:	lea    rcx,[rsp+0xf8]
   14000cfed:	mov    QWORD PTR [rsp+0x88],rcx
   14000cff5:	lea    rax,[rip+0x12c1c]        # 0x14001fc18
   14000cffc:	lea    rcx,[rip+0x12c05]        # 0x14001fc08
   14000d003:	mov    QWORD PTR [rsp+0xd0],rax
   14000d00b:	mov    QWORD PTR [rsp+0x90],rcx
   14000d013:	lea    rax,[rsp+0xc8]
   14000d01b:	lea    rcx,[rsp+0x88]
   14000d023:	mov    QWORD PTR [rsp+0xe8],rax
   14000d02b:	lea    rax,[rsp+0xe8]
   14000d033:	mov    QWORD PTR [rsp+0xa8],rcx
   14000d03b:	lea    rsi,[rip+0x12c22]        # 0x14001fc64
   14000d042:	lea    rdx,[rsp+0x40]
   14000d047:	lea    rcx,[rsp+0x108]
   14000d04f:	mov    QWORD PTR [rsp+0x100],r13
   14000d057:	mov    QWORD PTR [rsp+0xf0],r15
   14000d05f:	mov    QWORD PTR [rsp+0x108],rax
   14000d067:	mov    QWORD PTR [rsp+0x110],rsi
   14000d06f:	call   0x140008360
   14000d074:	lea    rdx,[rsp+0x40]
   14000d079:	lea    rcx,[rsp+0x48]
   14000d07e:	call   QWORD PTR [rip+0x12554]        # 0x14001f5d8
   14000d084:	lea    rcx,[rsp+0x40]
   14000d089:	call   QWORD PTR [rip+0x12529]        # 0x14001f5b8
   14000d08f:	lea    rcx,[rsp+0x48]
   14000d094:	call   QWORD PTR [rip+0x1255e]        # 0x14001f5f8
   14000d09a:	mov    rdi,QWORD PTR [rsp+0x170]
   14000d0a2:	mov    rcx,rdi
   14000d0a5:	mov    rdx,rax
   14000d0a8:	call   0x140019c50
   14000d0ad:	lea    rcx,[rsp+0x48]
   14000d0b2:	call   QWORD PTR [rip+0x12500]        # 0x14001f5b8
   14000d0b8:	mov    edx,DWORD PTR [rsp+0x178]
   14000d0bf:	lea    r12,[rip+0x12ba2]        # 0x14001fc68
   14000d0c6:	lea    r13,[rip+0x12bab]        # 0x14001fc78
   14000d0cd:	jmp    0x14000d119
   14000d0cf:	mov    edx,DWORD PTR [rsp+0x178]
   14000d0d6:	mov    rdi,QWORD PTR [rsp+0x170]
   14000d0de:	lea    rsi,[rip+0x12b7f]        # 0x14001fc64
   14000d0e5:	lea    r12,[rip+0x12b7c]        # 0x14001fc68
   14000d0ec:	lea    r13,[rip+0x12b85]        # 0x14001fc78
   14000d0f3:	jmp    0x14000d119
   14000d0f5:	mov    edx,DWORD PTR [rsp+0x178]
   14000d0fc:	mov    rdi,QWORD PTR [rsp+0x170]
   14000d104:	lea    rsi,[rip+0x12b59]        # 0x14001fc64
   14000d10b:	lea    r12,[rip+0x12b56]        # 0x14001fc68
   14000d112:	lea    r13,[rip+0x12b5f]        # 0x14001fc78
   14000d119:	mov    rax,QWORD PTR [r15+0x70]
   14000d11d:	inc    QWORD PTR [rsp+0x38]
   14000d122:	inc    edx
   14000d124:	mov    ecx,DWORD PTR [rax+0xc]
   14000d127:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d12c:	lea    r14,[r15+0x70]
   14000d130:	sub    ecx,DWORD PTR [rax+0x8]
   14000d133:	mov    DWORD PTR [rsp+0x178],edx
   14000d13a:	mov    ebp,0xffffffff
   14000d13f:	cmp    edx,ecx
   14000d141:	jl     0x14000ca50
   14000d147:	mov    r13,QWORD PTR [rsp+0x138]
   14000d14f:	mov    r12,QWORD PTR [rsp+0x140]
   14000d157:	mov    rsi,QWORD PTR [rsp+0x150]
   14000d15f:	or     ebp,ebp
   14000d161:	mov    rax,QWORD PTR [rsp+0x188]
   14000d169:	mov    r15,QWORD PTR [rsp+0x128]
   14000d171:	mov    r14,QWORD PTR [rsp+0x130]
   14000d179:	mov    ecx,DWORD PTR [rax+0x10]
   14000d17c:	mov    rdi,QWORD PTR [rsp+0x148]
   14000d184:	mov    rbx,QWORD PTR [rsp+0x158]
   14000d18c:	test   ecx,ecx
   14000d18e:	je     0x14000d1a4
   14000d190:	cmp    ecx,0xffffffff
   14000d193:	je     0x14000d1b9
   14000d195:	lock xadd DWORD PTR [rax+0x10],ebp
   14000d19a:	add    ebp,0xffffffff
   14000d19d:	setne  al
   14000d1a0:	test   al,al
   14000d1a2:	jne    0x14000d1b9
   14000d1a4:	mov    rcx,QWORD PTR [rsp+0x188]
   14000d1ac:	lea    rdx,[rip+0xffffffffffff576d]        # 0x140002920
   14000d1b3:	call   QWORD PTR [rip+0x122ff]        # 0x14001f4b8
   14000d1b9:	add    rsp,0x160
   14000d1c0:	pop    rbp
   14000d1c1:	ret    
   14000d1c2:	int3   
   14000d1c3:	int3   
   14000d1c4:	int3   
   14000d1c5:	int3   
   14000d1c6:	int3   
   14000d1c7:	int3   
   14000d1c8:	int3   
   14000d1c9:	int3   
   14000d1ca:	int3   
   14000d1cb:	int3   
   14000d1cc:	int3   
   14000d1cd:	int3   
   14000d1ce:	int3   
   14000d1cf:	int3   
   14000d1d0:	mov    QWORD PTR [rsp+0x10],rbx
   14000d1d5:	mov    QWORD PTR [rsp+0x18],rbp
   14000d1da:	push   rsi
   14000d1db:	sub    rsp,0x20
   14000d1df:	movsxd rax,DWORD PTR [rdx+0xc]
   14000d1e3:	mov    rbp,rdx
   14000d1e6:	lea    rbx,[rdx+rax*8+0x10]
   14000d1eb:	movsxd rax,DWORD PTR [rdx+0x8]
   14000d1ef:	lea    rsi,[rdx+rax*8+0x10]
   14000d1f4:	cmp    rsi,rbx
   14000d1f7:	je     0x14000d227
   14000d1f9:	mov    QWORD PTR [rsp+0x30],rdi
   14000d1fe:	xchg   ax,ax
   14000d200:	mov    rdi,QWORD PTR [rbx-0x8]
   14000d204:	sub    rbx,0x8
   14000d208:	test   rdi,rdi
   14000d20b:	je     0x14000d21d
   14000d20d:	mov    rcx,rdi
   14000d210:	call   0x1400089c0
   14000d215:	mov    rcx,rdi
   14000d218:	call   0x14001e1c0
   14000d21d:	cmp    rbx,rsi
   14000d220:	jne    0x14000d200
   14000d222:	mov    rdi,QWORD PTR [rsp+0x30]
   14000d227:	mov    rcx,rbp
   14000d22a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d22f:	mov    rbp,QWORD PTR [rsp+0x40]
   14000d234:	add    rsp,0x20
   14000d238:	pop    rsi
   14000d239:	rex.W jmp QWORD PTR [rip+0x122a8]        # 0x14001f4e8
   14000d240:	mov    DWORD PTR [rsp+0x18],r8d
   14000d245:	push   rsi
   14000d246:	push   rdi
   14000d247:	push   r14
   14000d249:	push   r15
   14000d24b:	sub    rsp,0xc8
   14000d252:	mov    r9,QWORD PTR [rcx]
   14000d255:	movsxd r10,DWORD PTR [rcx+0x8]
   14000d259:	or     edi,0xffffffff
   14000d25c:	cmp    r10d,DWORD PTR [r9+0x4]
   14000d260:	mov    esi,r8d
   14000d263:	mov    r15,rdx
   14000d266:	mov    r14,rcx
   14000d269:	mov    DWORD PTR [rsp+0x108],edi
   14000d270:	jge    0x14000d34f
   14000d276:	mov    rax,QWORD PTR [r9+0x10]
   14000d27a:	lea    rdx,[r10+r10*2]
   14000d27e:	lea    rcx,[rax+rdx*8]
   14000d282:	cmp    DWORD PTR [rcx+r9*1+0x4],0x8c
   14000d28b:	jne    0x14000d34f
   14000d291:	lea    edx,[r10+0x1]
   14000d295:	mov    DWORD PTR [r14+0x8],edx
   14000d299:	cmp    edx,DWORD PTR [r9+0x4]
   14000d29d:	jge    0x14000d2bf
   14000d29f:	movsxd rax,edx
   14000d2a2:	lea    rcx,[rax+rax*2]
   14000d2a6:	mov    rax,QWORD PTR [r9+0x10]
   14000d2aa:	lea    rcx,[rax+rcx*8]
   14000d2ae:	cmp    DWORD PTR [rcx+r9*1+0x4],0x9
   14000d2b4:	jne    0x14000d2bf
   14000d2b6:	lea    eax,[rdx+0x1]
   14000d2b9:	mov    DWORD PTR [r14+0x8],eax
   14000d2bd:	jmp    0x14000d2c9
   14000d2bf:	xor    edx,edx
   14000d2c1:	mov    rcx,r14
   14000d2c4:	call   0x140019c50
   14000d2c9:	lea    rdx,[rsp+0x20]
   14000d2ce:	mov    r8d,0xa
   14000d2d4:	mov    rcx,r14
   14000d2d7:	call   0x1400042b0
   14000d2dc:	xor    edx,edx
   14000d2de:	lea    rcx,[rsp+0x20]
   14000d2e3:	lea    r8d,[rdx+0x1]
   14000d2e7:	call   QWORD PTR [rip+0x12273]        # 0x14001f560
   14000d2ed:	lea    rcx,[rsp+0x20]
   14000d2f2:	mov    edx,0x1
   14000d2f7:	call   QWORD PTR [rip+0x11edb]        # 0x14001f1d8
   14000d2fd:	lea    rdx,[rsp+0xf0]
   14000d305:	lea    rcx,[rsp+0x20]
   14000d30a:	mov    r8d,0xa
   14000d310:	mov    BYTE PTR [rsp+0xf0],0x0
   14000d318:	call   QWORD PTR [rip+0x11eb2]        # 0x14001f1d0
   14000d31e:	cmp    BYTE PTR [rsp+0xf0],0x0
   14000d326:	mov    edi,eax
   14000d328:	mov    DWORD PTR [rsp+0x108],eax
   14000d32f:	je     0x14000d335
   14000d331:	test   eax,eax
   14000d333:	jns    0x14000d344
   14000d335:	lea    rdx,[rip+0x124a4]        # 0x14001f7e0
   14000d33c:	mov    rcx,r14
   14000d33f:	call   0x140019c50
   14000d344:	lea    rcx,[rsp+0x20]
   14000d349:	call   QWORD PTR [rip+0x12269]        # 0x14001f5b8
   14000d34f:	mov    r8,QWORD PTR [r14]
   14000d352:	movsxd rdx,DWORD PTR [r14+0x8]
   14000d356:	cmp    edx,DWORD PTR [r8+0x4]
   14000d35a:	jge    0x14000d379
   14000d35c:	mov    rax,QWORD PTR [r8+0x10]
   14000d360:	lea    rcx,[rdx+rdx*2]
   14000d364:	lea    rcx,[rax+rcx*8]
   14000d368:	cmp    DWORD PTR [rcx+r8*1+0x4],0x13
   14000d36e:	jne    0x14000d379
   14000d370:	lea    eax,[rdx+0x1]
   14000d373:	mov    DWORD PTR [r14+0x8],eax
   14000d377:	jmp    0x14000d383
   14000d379:	xor    edx,edx
   14000d37b:	mov    rcx,r14
   14000d37e:	call   0x140019c50
   14000d383:	mov    rdx,r15
   14000d386:	mov    rcx,r14
   14000d389:	call   0x140001120
   14000d38e:	test   al,al
   14000d390:	je     0x14000dc8f
   14000d396:	mov    QWORD PTR [rsp+0xf8],rbx
   14000d39e:	mov    QWORD PTR [rsp+0xc0],rbp
   14000d3a6:	mov    QWORD PTR [rsp+0xb8],r12
   14000d3ae:	mov    QWORD PTR [rsp+0xb0],r13
   14000d3b6:	lea    rbp,[rip+0xffffffffffff2c43]        # 0x140000000
   14000d3bd:	nop    DWORD PTR [rax]
   14000d3c0:	mov    rbx,QWORD PTR [r14]
   14000d3c3:	movsxd rcx,DWORD PTR [r14+0x8]
   14000d3c7:	cmp    ecx,DWORD PTR [rbx+0x4]
   14000d3ca:	jge    0x14000dc6f
   14000d3d0:	cmp    ecx,DWORD PTR [rbx+0x4]
   14000d3d3:	jl     0x14000d3d9
   14000d3d5:	xor    eax,eax
   14000d3d7:	jmp    0x14000d3f0
   14000d3d9:	lea    eax,[rcx+0x1]
   14000d3dc:	lea    rcx,[rcx+rcx*2]
   14000d3e0:	mov    DWORD PTR [r14+0x8],eax
   14000d3e4:	mov    rax,QWORD PTR [rbx+0x10]
   14000d3e8:	lea    rcx,[rax+rcx*8]
   14000d3ec:	mov    eax,DWORD PTR [rcx+rbx*1+0x4]
   14000d3f0:	sub    eax,0x12
   14000d3f3:	cmp    eax,0x72
   14000d3f6:	ja     0x14000d533
   14000d3fc:	cdqe   
   14000d3fe:	movzx  eax,BYTE PTR [rax+rbp*1+0xdcb4]
   14000d406:	mov    ecx,DWORD PTR [rbp+rax*4+0xdca0]
   14000d40d:	add    rcx,rbp
   14000d410:	jmp    rcx
   14000d412:	movsxd rdx,DWORD PTR [r14+0x8]
   14000d416:	xor    r8d,r8d
   14000d419:	xor    r10d,r10d
   14000d41c:	xor    r9d,r9d
   14000d41f:	test   edx,edx
   14000d421:	je     0x14000d45b
   14000d423:	mov    rax,QWORD PTR [rbx+0x10]
   14000d427:	lea    rcx,[rdx+rdx*2]
   14000d42b:	lea    rcx,[rax+rcx*8]
   14000d42f:	mov    eax,DWORD PTR [rcx+rbx*1-0x14]
   14000d433:	cmp    eax,0x7
   14000d436:	je     0x14000d45b
   14000d438:	cmp    eax,0x9
   14000d43b:	je     0x14000d455
   14000d43d:	cmp    eax,0xc
   14000d440:	je     0x14000d44d
   14000d442:	cmp    eax,0xe
   14000d445:	jne    0x14000d45b
   14000d447:	lea    r8d,[r10+0x1]
   14000d44b:	jmp    0x14000d45b
   14000d44d:	mov    r10d,0x1
   14000d453:	jmp    0x14000d45b
   14000d455:	mov    r9d,0x1
   14000d45b:	cmp    edx,DWORD PTR [rbx+0x4]
   14000d45e:	jge    0x14000dc50
   14000d464:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d470:	movsxd rax,DWORD PTR [r14+0x8]
   14000d474:	lea    edi,[rax+0x1]
   14000d477:	lea    rcx,[rax+rax*2]
   14000d47b:	mov    DWORD PTR [r14+0x8],edi
   14000d47f:	mov    rax,QWORD PTR [rbx+0x10]
   14000d483:	lea    rdx,[rbx+rcx*8]
   14000d487:	mov    r11d,DWORD PTR [rdx+rax*1+0x4]
   14000d48c:	lea    eax,[r11-0x7]
   14000d490:	cmp    eax,0x48
   14000d493:	ja     0x14000d4ae
   14000d495:	cdqe   
   14000d497:	movzx  eax,BYTE PTR [rax+rbp*1+0xdd4c]
   14000d49f:	mov    ecx,DWORD PTR [rbp+rax*4+0xdd28]
   14000d4a6:	add    rcx,rbp
   14000d4a9:	jmp    rcx
   14000d4ab:	inc    r8d
   14000d4ae:	cmp    r11d,0x12
   14000d4b2:	jne    0x14000d4c7
   14000d4b4:	test   r8d,r8d
   14000d4b7:	jg     0x14000d4c7
   14000d4b9:	test   r10d,r10d
   14000d4bc:	jg     0x14000d4c7
   14000d4be:	test   r9d,r9d
   14000d4c1:	jle    0x14000dc50
   14000d4c7:	test   r8d,r8d
   14000d4ca:	js     0x14000d518
   14000d4cc:	test   r10d,r10d
   14000d4cf:	js     0x14000d518
   14000d4d1:	test   r9d,r9d
   14000d4d4:	js     0x14000d518
   14000d4d6:	test   r8d,r8d
   14000d4d9:	jg     0x14000d4e5
   14000d4db:	cmp    r11d,0x12
   14000d4df:	je     0x14000dc50
   14000d4e5:	cmp    edi,DWORD PTR [rbx+0x4]
   14000d4e8:	jl     0x14000d470
   14000d4ea:	jmp    0x14000dc50
   14000d4ef:	dec    r8d
   14000d4f2:	jmp    0x14000d4ae
   14000d4f4:	inc    r10d
   14000d4f7:	jmp    0x14000d4ae
   14000d4f9:	dec    r10d
   14000d4fc:	jmp    0x14000d4ae
   14000d4fe:	inc    r9d
   14000d501:	jmp    0x14000d4ae
   14000d503:	dec    r9d
   14000d506:	jmp    0x14000d4ae
   14000d508:	test   r9d,r9d
   14000d50b:	jne    0x14000d4ae
   14000d50d:	test   r8d,r8d
   14000d510:	jne    0x14000d4ae
   14000d512:	lea    r11d,[r9+0x8]
   14000d516:	jmp    0x14000d4cc
   14000d518:	lea    eax,[rdi-0x1]
   14000d51b:	mov    DWORD PTR [r14+0x8],eax
   14000d51f:	jmp    0x14000dc50
   14000d524:	lea    rdx,[rip+0x12775]        # 0x14001fca0
   14000d52b:	mov    rcx,r14
   14000d52e:	call   0x140019c50
   14000d533:	dec    DWORD PTR [r14+0x8]
   14000d537:	lea    rcx,[rsp+0x30]
   14000d53c:	call   QWORD PTR [rip+0x1207e]        # 0x14001f5c0
   14000d542:	lea    rcx,[rsp+0x38]
   14000d547:	call   QWORD PTR [rip+0x12073]        # 0x14001f5c0
   14000d54d:	and    DWORD PTR [rsp+0x40],0xfffffffc
   14000d552:	lea    rcx,[rsp+0x50]
   14000d557:	mov    DWORD PTR [rsp+0x44],0x0
   14000d55f:	mov    DWORD PTR [rsp+0x48],0x0
   14000d567:	call   QWORD PTR [rip+0x12053]        # 0x14001f5c0
   14000d56d:	lea    rcx,[rsp+0x58]
   14000d572:	call   QWORD PTR [rip+0x12048]        # 0x14001f5c0
   14000d578:	lea    rcx,[rsp+0x60]
   14000d57d:	call   QWORD PTR [rip+0x1203d]        # 0x14001f5c0
   14000d583:	mov    rax,QWORD PTR [rip+0x11fbe]        # 0x14001f548
   14000d58a:	lea    rcx,[rsp+0x88]
   14000d592:	mov    QWORD PTR [rsp+0x70],rax
   14000d597:	mov    BYTE PTR [rsp+0x68],0x0
   14000d59c:	mov    DWORD PTR [rsp+0x78],0x0
   14000d5a4:	mov    BYTE PTR [rsp+0x7c],0x0
   14000d5a9:	mov    BYTE PTR [rsp+0x7d],0x0
   14000d5ae:	mov    BYTE PTR [rsp+0x7e],0x0
   14000d5b3:	mov    BYTE PTR [rsp+0x7f],0x0
   14000d5b8:	mov    BYTE PTR [rsp+0x80],0x0
   14000d5c0:	call   QWORD PTR [rip+0x11ffa]        # 0x14001f5c0
   14000d5c6:	lea    rdx,[rsp+0x30]
   14000d5cb:	xor    r8d,r8d
   14000d5ce:	mov    rcx,r14
   14000d5d1:	mov    BYTE PTR [rsp+0x90],0x0
   14000d5d9:	mov    BYTE PTR [rsp+0x91],0x0
   14000d5e1:	mov    BYTE PTR [rsp+0x92],0x0
   14000d5e9:	mov    BYTE PTR [rsp+0x93],0x0
   14000d5f1:	mov    BYTE PTR [rsp+0x94],0x0
   14000d5f9:	mov    BYTE PTR [rsp+0x95],0x0
   14000d601:	mov    BYTE PTR [rsp+0x96],0x0
   14000d609:	mov    BYTE PTR [rsp+0x97],0x0
   14000d611:	mov    BYTE PTR [rsp+0x98],0x0
   14000d619:	mov    DWORD PTR [rsp+0x9c],0x0
   14000d624:	mov    DWORD PTR [rsp+0x78],esi
   14000d628:	call   0x14000a740
   14000d62d:	test   al,al
   14000d62f:	jne    0x14000d6c4
   14000d635:	lea    rcx,[rsp+0x88]
   14000d63d:	call   QWORD PTR [rip+0x11f75]        # 0x14001f5b8
   14000d643:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d648:	mov    eax,DWORD PTR [rbx]
   14000d64a:	test   eax,eax
   14000d64c:	je     0x14000d663
   14000d64e:	cmp    eax,0xffffffff
   14000d651:	je     0x14000d688
   14000d653:	lock add DWORD PTR [rbx],0xffffffff
   14000d657:	setne  al
   14000d65a:	test   al,al
   14000d65c:	jne    0x14000d688
   14000d65e:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d663:	movsxd rax,DWORD PTR [rbx+0xc]
   14000d667:	lea    rcx,[rsp+0x70]
   14000d66c:	lea    r8,[rbx+rax*8+0x10]
   14000d671:	movsxd rax,DWORD PTR [rbx+0x8]
   14000d675:	lea    rdx,[rbx+rax*8+0x10]
   14000d67a:	call   0x140001d40
   14000d67f:	mov    rcx,rbx
   14000d682:	call   QWORD PTR [rip+0x11e60]        # 0x14001f4e8
   14000d688:	lea    rcx,[rsp+0x60]
   14000d68d:	call   QWORD PTR [rip+0x11f25]        # 0x14001f5b8
   14000d693:	lea    rcx,[rsp+0x58]
   14000d698:	call   QWORD PTR [rip+0x11f1a]        # 0x14001f5b8
   14000d69e:	lea    rcx,[rsp+0x50]
   14000d6a3:	call   QWORD PTR [rip+0x11f0f]        # 0x14001f5b8
   14000d6a9:	lea    rcx,[rsp+0x38]
   14000d6ae:	call   QWORD PTR [rip+0x11f04]        # 0x14001f5b8
   14000d6b4:	lea    rcx,[rsp+0x30]
   14000d6b9:	call   QWORD PTR [rip+0x11ef9]        # 0x14001f5b8
   14000d6bf:	jmp    0x14000dc50
   14000d6c4:	cmp    DWORD PTR [rsp+0x9c],0x0
   14000d6cc:	jle    0x14000d6d7
   14000d6ce:	inc    DWORD PTR [r15+0x98]
   14000d6d5:	jmp    0x14000d6ea
   14000d6d7:	cmp    edi,0xffffffff
   14000d6da:	je     0x14000d6ea
   14000d6dc:	inc    DWORD PTR [r15+0x98]
   14000d6e3:	mov    DWORD PTR [rsp+0x9c],edi
   14000d6ea:	mov    rax,QWORD PTR [r15+0x50]
   14000d6ee:	mov    ecx,DWORD PTR [rax]
   14000d6f0:	cmp    ecx,0x1
   14000d6f3:	je     0x14000d738
   14000d6f5:	test   ecx,ecx
   14000d6f7:	je     0x14000d738
   14000d6f9:	lea    rcx,[r15+0x50]
   14000d6fd:	mov    edx,0x7fffffff
   14000d702:	mov    r8d,0x1
   14000d708:	call   0x140008530
   14000d70d:	mov    ecx,0x70
   14000d712:	mov    rbx,rax
   14000d715:	call   0x14001e1c6
   14000d71a:	test   rax,rax
   14000d71d:	je     0x14000d731
   14000d71f:	lea    rdx,[rsp+0x30]
   14000d724:	mov    rcx,rax
   14000d727:	call   0x140003ce0
   14000d72c:	mov    QWORD PTR [rbx],rax
   14000d72f:	jmp    0x14000d768
   14000d731:	xor    eax,eax
   14000d733:	mov    QWORD PTR [rbx],rax
   14000d736:	jmp    0x14000d768
   14000d738:	lea    rcx,[r15+0x50]
   14000d73c:	call   QWORD PTR [rip+0x11a5e]        # 0x14001f1a0
   14000d742:	mov    ecx,0x70
   14000d747:	mov    rbx,rax
   14000d74a:	call   0x14001e1c6
   14000d74f:	test   rax,rax
   14000d752:	je     0x14000d763
   14000d754:	lea    rdx,[rsp+0x30]
   14000d759:	mov    rcx,rax
   14000d75c:	call   0x140003ce0
   14000d761:	jmp    0x14000d765
   14000d763:	xor    eax,eax
   14000d765:	mov    QWORD PTR [rbx],rax
   14000d768:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d76d:	mov    ecx,DWORD PTR [rdx+0x8]
   14000d770:	mov    eax,DWORD PTR [rdx+0xc]
   14000d773:	sub    eax,ecx
   14000d775:	test   eax,eax
   14000d777:	jle    0x14000dc46
   14000d77d:	nop    DWORD PTR [rax]
   14000d780:	mov    eax,DWORD PTR [rdx]
   14000d782:	cmp    eax,0x1
   14000d785:	je     0x14000d8a3
   14000d78b:	test   eax,eax
   14000d78d:	je     0x14000d8a3
   14000d793:	movsxd rax,ecx
   14000d796:	lea    rcx,[rsp+0x70]
   14000d79b:	lea    rdi,[rdx+rax*8+0x10]
   14000d7a0:	mov    edx,DWORD PTR [rdx+0x4]
   14000d7a3:	call   QWORD PTR [rip+0x11d07]        # 0x14001f4b0
   14000d7a9:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d7ae:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000d7b2:	mov    rbp,rax
   14000d7b5:	lea    rsi,[rdx+rcx*8+0x10]
   14000d7ba:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000d7be:	lea    rbx,[rdx+rcx*8+0x10]
   14000d7c3:	cmp    rbx,rsi
   14000d7c6:	je     0x14000d803
   14000d7c8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d7d0:	mov    ecx,0x48
   14000d7d5:	call   0x14001e1c6
   14000d7da:	test   rax,rax
   14000d7dd:	je     0x14000d7ec
   14000d7df:	mov    rdx,QWORD PTR [rdi]
   14000d7e2:	mov    rcx,rax
   14000d7e5:	call   0x140001b60
   14000d7ea:	jmp    0x14000d7ee
   14000d7ec:	xor    eax,eax
   14000d7ee:	mov    QWORD PTR [rbx],rax
   14000d7f1:	add    rbx,0x8
   14000d7f5:	add    rdi,0x8
   14000d7f9:	cmp    rbx,rsi
   14000d7fc:	jne    0x14000d7d0
   14000d7fe:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d803:	mov    eax,DWORD PTR [rbp+0x0]
   14000d806:	test   eax,eax
   14000d808:	je     0x14000d829
   14000d80a:	cmp    eax,0xffffffff
   14000d80d:	je     0x14000d8a3
   14000d813:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000d818:	setne  al
   14000d81b:	test   al,al
   14000d81d:	je     0x14000d829
   14000d81f:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d824:	jmp    0x14000d8a3
   14000d829:	movsxd rax,DWORD PTR [rbp+0xc]
   14000d82d:	lea    rdi,[rbp+rax*8+0x10]
   14000d832:	movsxd rax,DWORD PTR [rbp+0x8]
   14000d836:	lea    rsi,[rbp+rax*8+0x10]
   14000d83b:	cmp    rsi,rdi
   14000d83e:	je     0x14000d895
   14000d840:	mov    rbx,QWORD PTR [rdi-0x8]
   14000d844:	sub    rdi,0x8
   14000d848:	test   rbx,rbx
   14000d84b:	je     0x14000d890
   14000d84d:	lea    rcx,[rbx+0x38]
   14000d851:	call   QWORD PTR [rip+0x11d61]        # 0x14001f5b8
   14000d857:	lea    rcx,[rbx+0x30]
   14000d85b:	call   QWORD PTR [rip+0x11d57]        # 0x14001f5b8
   14000d861:	lea    rcx,[rbx+0x28]
   14000d865:	call   QWORD PTR [rip+0x11d4d]        # 0x14001f5b8
   14000d86b:	lea    rcx,[rbx+0x20]
   14000d86f:	call   QWORD PTR [rip+0x11d43]        # 0x14001f5b8
   14000d875:	lea    rcx,[rbx+0x8]
   14000d879:	call   QWORD PTR [rip+0x11d39]        # 0x14001f5b8
   14000d87f:	mov    rcx,rbx
   14000d882:	call   QWORD PTR [rip+0x11d30]        # 0x14001f5b8
   14000d888:	mov    rcx,rbx
   14000d88b:	call   0x14001e1c0
   14000d890:	cmp    rdi,rsi
   14000d893:	jne    0x14000d840
   14000d895:	mov    rcx,rbp
   14000d898:	call   QWORD PTR [rip+0x11c4a]        # 0x14001f4e8
   14000d89e:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d8a3:	movsxd rax,DWORD PTR [rdx+0xc]
   14000d8a7:	mov    rcx,QWORD PTR [rdx+rax*8+0x8]
   14000d8ac:	cmp    BYTE PTR [rcx+0x40],0x0
   14000d8b0:	je     0x14000dc38
   14000d8b6:	mov    BYTE PTR [rsp+0x80],0x1
   14000d8be:	mov    eax,DWORD PTR [rdx]
   14000d8c0:	cmp    eax,0x1
   14000d8c3:	je     0x14000d9e3
   14000d8c9:	test   eax,eax
   14000d8cb:	je     0x14000d9e3
   14000d8d1:	movsxd rax,DWORD PTR [rdx+0x8]
   14000d8d5:	lea    rcx,[rsp+0x70]
   14000d8da:	lea    rdi,[rdx+rax*8+0x10]
   14000d8df:	mov    edx,DWORD PTR [rdx+0x4]
   14000d8e2:	call   QWORD PTR [rip+0x11bc8]        # 0x14001f4b0
   14000d8e8:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d8ed:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000d8f1:	mov    rbp,rax
   14000d8f4:	lea    rsi,[rdx+rcx*8+0x10]
   14000d8f9:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000d8fd:	lea    rbx,[rdx+rcx*8+0x10]
   14000d902:	cmp    rbx,rsi
   14000d905:	je     0x14000d943
   14000d907:	nop    WORD PTR [rax+rax*1+0x0]
   14000d910:	mov    ecx,0x48
   14000d915:	call   0x14001e1c6
   14000d91a:	test   rax,rax
   14000d91d:	je     0x14000d92c
   14000d91f:	mov    rdx,QWORD PTR [rdi]
   14000d922:	mov    rcx,rax
   14000d925:	call   0x140001b60
   14000d92a:	jmp    0x14000d92e
   14000d92c:	xor    eax,eax
   14000d92e:	mov    QWORD PTR [rbx],rax
   14000d931:	add    rbx,0x8
   14000d935:	add    rdi,0x8
   14000d939:	cmp    rbx,rsi
   14000d93c:	jne    0x14000d910
   14000d93e:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d943:	mov    eax,DWORD PTR [rbp+0x0]
   14000d946:	test   eax,eax
   14000d948:	je     0x14000d969
   14000d94a:	cmp    eax,0xffffffff
   14000d94d:	je     0x14000d9e3
   14000d953:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000d958:	setne  al
   14000d95b:	test   al,al
   14000d95d:	je     0x14000d969
   14000d95f:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d964:	jmp    0x14000d9e3
   14000d969:	movsxd rax,DWORD PTR [rbp+0xc]
   14000d96d:	lea    rdi,[rbp+rax*8+0x10]
   14000d972:	movsxd rax,DWORD PTR [rbp+0x8]
   14000d976:	lea    rsi,[rbp+rax*8+0x10]
   14000d97b:	cmp    rsi,rdi
   14000d97e:	je     0x14000d9d5
   14000d980:	mov    rbx,QWORD PTR [rdi-0x8]
   14000d984:	sub    rdi,0x8
   14000d988:	test   rbx,rbx
   14000d98b:	je     0x14000d9d0
   14000d98d:	lea    rcx,[rbx+0x38]
   14000d991:	call   QWORD PTR [rip+0x11c21]        # 0x14001f5b8
   14000d997:	lea    rcx,[rbx+0x30]
   14000d99b:	call   QWORD PTR [rip+0x11c17]        # 0x14001f5b8
   14000d9a1:	lea    rcx,[rbx+0x28]
   14000d9a5:	call   QWORD PTR [rip+0x11c0d]        # 0x14001f5b8
   14000d9ab:	lea    rcx,[rbx+0x20]
   14000d9af:	call   QWORD PTR [rip+0x11c03]        # 0x14001f5b8
   14000d9b5:	lea    rcx,[rbx+0x8]
   14000d9b9:	call   QWORD PTR [rip+0x11bf9]        # 0x14001f5b8
   14000d9bf:	mov    rcx,rbx
   14000d9c2:	call   QWORD PTR [rip+0x11bf0]        # 0x14001f5b8
   14000d9c8:	mov    rcx,rbx
   14000d9cb:	call   0x14001e1c0
   14000d9d0:	cmp    rdi,rsi
   14000d9d3:	jne    0x14000d980
   14000d9d5:	mov    rcx,rbp
   14000d9d8:	call   QWORD PTR [rip+0x11b0a]        # 0x14001f4e8
   14000d9de:	mov    rdx,QWORD PTR [rsp+0x70]
   14000d9e3:	movsxd rax,DWORD PTR [rdx+0xc]
   14000d9e7:	mov    ecx,DWORD PTR [rdx]
   14000d9e9:	lea    rbx,[rdx+rax*8+0x8]
   14000d9ee:	mov    QWORD PTR [rsp+0xa0],rbx
   14000d9f6:	cmp    ecx,0x1
   14000d9f9:	je     0x14000db4c
   14000d9ff:	test   ecx,ecx
   14000da01:	je     0x14000db4c
   14000da07:	movsxd rax,DWORD PTR [rdx+0x8]
   14000da0b:	lea    rax,[rax*8+0x10]
   14000da13:	sub    rbx,rax
   14000da16:	sub    rbx,rdx
   14000da19:	sar    rbx,0x3
   14000da1d:	cmp    ecx,0x1
   14000da20:	je     0x14000db34
   14000da26:	test   ecx,ecx
   14000da28:	je     0x14000db34
   14000da2e:	lea    rsi,[rax+rdx*1]
   14000da32:	mov    edx,DWORD PTR [rdx+0x4]
   14000da35:	lea    rcx,[rsp+0x70]
   14000da3a:	call   QWORD PTR [rip+0x11a70]        # 0x14001f4b0
   14000da40:	mov    rdx,QWORD PTR [rsp+0x70]
   14000da45:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000da49:	mov    r12,rax
   14000da4c:	lea    rbp,[rdx+rcx*8+0x10]
   14000da51:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000da55:	lea    rdi,[rdx+rcx*8+0x10]
   14000da5a:	cmp    rdi,rbp
   14000da5d:	je     0x14000da93
   14000da5f:	nop
   14000da60:	mov    ecx,0x48
   14000da65:	call   0x14001e1c6
   14000da6a:	test   rax,rax
   14000da6d:	je     0x14000da7c
   14000da6f:	mov    rdx,QWORD PTR [rsi]
   14000da72:	mov    rcx,rax
   14000da75:	call   0x140001b60
   14000da7a:	jmp    0x14000da7e
   14000da7c:	xor    eax,eax
   14000da7e:	mov    QWORD PTR [rdi],rax
   14000da81:	add    rdi,0x8
   14000da85:	add    rsi,0x8
   14000da89:	cmp    rdi,rbp
   14000da8c:	jne    0x14000da60
   14000da8e:	mov    rdx,QWORD PTR [rsp+0x70]
   14000da93:	mov    eax,DWORD PTR [r12]
   14000da97:	test   eax,eax
   14000da99:	je     0x14000dab8
   14000da9b:	cmp    eax,0xffffffff
   14000da9e:	je     0x14000db34
   14000daa4:	lock add DWORD PTR [r12],0xffffffff
   14000daaa:	setne  al
   14000daad:	test   al,al
   14000daaf:	je     0x14000dab8
   14000dab1:	mov    rdx,QWORD PTR [rsp+0x70]
   14000dab6:	jmp    0x14000db34
   14000dab8:	movsxd rax,DWORD PTR [r12+0xc]
   14000dabd:	lea    rsi,[r12+rax*8+0x10]
   14000dac2:	movsxd rax,DWORD PTR [r12+0x8]
   14000dac7:	lea    rbp,[r12+rax*8+0x10]
   14000dacc:	cmp    rbp,rsi
   14000dacf:	je     0x14000db26
   14000dad1:	mov    rdi,QWORD PTR [rsi-0x8]
   14000dad5:	sub    rsi,0x8
   14000dad9:	test   rdi,rdi
   14000dadc:	je     0x14000db21
   14000dade:	lea    rcx,[rdi+0x38]
   14000dae2:	call   QWORD PTR [rip+0x11ad0]        # 0x14001f5b8
   14000dae8:	lea    rcx,[rdi+0x30]
   14000daec:	call   QWORD PTR [rip+0x11ac6]        # 0x14001f5b8
   14000daf2:	lea    rcx,[rdi+0x28]
   14000daf6:	call   QWORD PTR [rip+0x11abc]        # 0x14001f5b8
   14000dafc:	lea    rcx,[rdi+0x20]
   14000db00:	call   QWORD PTR [rip+0x11ab2]        # 0x14001f5b8
   14000db06:	lea    rcx,[rdi+0x8]
   14000db0a:	call   QWORD PTR [rip+0x11aa8]        # 0x14001f5b8
   14000db10:	mov    rcx,rdi
   14000db13:	call   QWORD PTR [rip+0x11a9f]        # 0x14001f5b8
   14000db19:	mov    rcx,rdi
   14000db1c:	call   0x14001e1c0
   14000db21:	cmp    rsi,rbp
   14000db24:	jne    0x14000dad1
   14000db26:	mov    rcx,r12
   14000db29:	call   QWORD PTR [rip+0x119b9]        # 0x14001f4e8
   14000db2f:	mov    rdx,QWORD PTR [rsp+0x70]
   14000db34:	movsxd rax,DWORD PTR [rdx+0x8]
   14000db38:	movsxd rcx,ebx
   14000db3b:	lea    rax,[rdx+rax*8+0x10]
   14000db40:	lea    rbx,[rax+rcx*8]
   14000db44:	mov    QWORD PTR [rsp+0xa0],rbx
   14000db4c:	mov    rdi,QWORD PTR [rbx]
   14000db4f:	test   rdi,rdi
   14000db52:	je     0x14000db97
   14000db54:	lea    rcx,[rdi+0x38]
   14000db58:	call   QWORD PTR [rip+0x11a5a]        # 0x14001f5b8
   14000db5e:	lea    rcx,[rdi+0x30]
   14000db62:	call   QWORD PTR [rip+0x11a50]        # 0x14001f5b8
   14000db68:	lea    rcx,[rdi+0x28]
   14000db6c:	call   QWORD PTR [rip+0x11a46]        # 0x14001f5b8
   14000db72:	lea    rcx,[rdi+0x20]
   14000db76:	call   QWORD PTR [rip+0x11a3c]        # 0x14001f5b8
   14000db7c:	lea    rcx,[rdi+0x8]
   14000db80:	call   QWORD PTR [rip+0x11a32]        # 0x14001f5b8
   14000db86:	mov    rcx,rdi
   14000db89:	call   QWORD PTR [rip+0x11a29]        # 0x14001f5b8
   14000db8f:	mov    rcx,rdi
   14000db92:	call   0x14001e1c0
   14000db97:	lea    rcx,[rsp+0x70]
   14000db9c:	mov    rdx,rbx
   14000db9f:	call   QWORD PTR [rip+0x1165b]        # 0x14001f200
   14000dba5:	mov    rax,QWORD PTR [r15+0x50]
   14000dba9:	mov    ecx,DWORD PTR [rax]
   14000dbab:	cmp    ecx,0x1
   14000dbae:	je     0x14000dbf3
   14000dbb0:	test   ecx,ecx
   14000dbb2:	je     0x14000dbf3
   14000dbb4:	lea    rcx,[r15+0x50]
   14000dbb8:	mov    edx,0x7fffffff
   14000dbbd:	mov    r8d,0x1
   14000dbc3:	call   0x140008530
   14000dbc8:	mov    ecx,0x70
   14000dbcd:	mov    rbx,rax
   14000dbd0:	call   0x14001e1c6
   14000dbd5:	test   rax,rax
   14000dbd8:	je     0x14000dbec
   14000dbda:	lea    rdx,[rsp+0x30]
   14000dbdf:	mov    rcx,rax
   14000dbe2:	call   0x140003ce0
   14000dbe7:	mov    QWORD PTR [rbx],rax
   14000dbea:	jmp    0x14000dc23
   14000dbec:	xor    eax,eax
   14000dbee:	mov    QWORD PTR [rbx],rax
   14000dbf1:	jmp    0x14000dc23
   14000dbf3:	lea    rcx,[r15+0x50]
   14000dbf7:	call   QWORD PTR [rip+0x115a3]        # 0x14001f1a0
   14000dbfd:	mov    ecx,0x70
   14000dc02:	mov    rbx,rax
   14000dc05:	call   0x14001e1c6
   14000dc0a:	test   rax,rax
   14000dc0d:	je     0x14000dc1e
   14000dc0f:	lea    rdx,[rsp+0x30]
   14000dc14:	mov    rcx,rax
   14000dc17:	call   0x140003ce0
   14000dc1c:	jmp    0x14000dc20
   14000dc1e:	xor    eax,eax
   14000dc20:	mov    QWORD PTR [rbx],rax
   14000dc23:	mov    rdx,QWORD PTR [rsp+0x70]
   14000dc28:	mov    ecx,DWORD PTR [rdx+0x8]
   14000dc2b:	mov    eax,DWORD PTR [rdx+0xc]
   14000dc2e:	sub    eax,ecx
   14000dc30:	test   eax,eax
   14000dc32:	jg     0x14000d780
   14000dc38:	mov    esi,DWORD PTR [rsp+0x100]
   14000dc3f:	lea    rbp,[rip+0xffffffffffff23ba]        # 0x140000000
   14000dc46:	lea    rcx,[rsp+0x30]
   14000dc4b:	call   0x140004210
   14000dc50:	mov    rdx,r15
   14000dc53:	mov    rcx,r14
   14000dc56:	call   0x140001120
   14000dc5b:	test   al,al
   14000dc5d:	je     0x14000dc6f
   14000dc5f:	mov    edi,DWORD PTR [rsp+0x108]
   14000dc66:	jmp    0x14000d3c0
   14000dc6b:	dec    DWORD PTR [r14+0x8]
   14000dc6f:	mov    r12,QWORD PTR [rsp+0xb8]
   14000dc77:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000dc7f:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000dc87:	mov    r13,QWORD PTR [rsp+0xb0]
   14000dc8f:	add    rsp,0xc8
   14000dc96:	pop    r15
   14000dc98:	pop    r14
   14000dc9a:	pop    rdi
   14000dc9b:	pop    rsi
   14000dc9c:	ret    
   14000dc9d:	nop    DWORD PTR [rax]
   14000dca0:	push   rax
   14000dca1:	fadd   QWORD PTR [rax]
   14000dca3:	add    BYTE PTR [rdx],dl
   14000dca5:	(bad)  
   14000dca6:	add    BYTE PTR [rax],al
   14000dca8:	imul   ebx,esp,0x0
   14000dcab:	add    BYTE PTR [rdx*8-0x2acd0000],ah
   14000dcb2:	add    BYTE PTR [rax],al
   14000dcb4:	add    BYTE PTR [rsp+rax*1],al
   14000dcb7:	add    al,0x4
   14000dcb9:	add    al,0x4
   14000dcbb:	add    al,0x4
   14000dcbd:	add    al,0x4
   14000dcbf:	add    al,0x4
   14000dcc1:	add    al,0x4
   14000dcc3:	add    al,0x1
   14000dcc5:	add    al,0x4
   14000dcc7:	add    al,0x4
   14000dcc9:	add    al,0x4
   14000dccb:	add    al,BYTE PTR [rdx]
   14000dccd:	add    al,BYTE PTR [rsp+rax*1]
   14000dcd0:	add    al,0x4
   14000dcd2:	add    al,0x4
   14000dcd4:	add    eax,DWORD PTR [rsp+rax*1]
   14000dcd7:	add    al,0x4
   14000dcd9:	add    al,0x4
   14000dcdb:	add    al,0x4
   14000dcdd:	add    al,0x4
   14000dcdf:	add    al,0x4
   14000dce1:	add    al,0x4
   14000dce3:	add    al,0x4
   14000dce5:	add    al,0x4
   14000dce7:	add    al,0x4
   14000dce9:	add    al,0x4
   14000dceb:	add    al,0x4
   14000dced:	add    al,0x4
   14000dcef:	add    al,0x4
   14000dcf1:	add    al,0x4
   14000dcf3:	add    al,0x4
   14000dcf5:	add    al,0x4
   14000dcf7:	add    al,0x4
   14000dcf9:	add    al,0x4
   14000dcfb:	add    al,0x4
   14000dcfd:	add    al,0x4
   14000dcff:	add    al,0x4
   14000dd01:	add    al,0x4
   14000dd03:	add    al,0x4
   14000dd05:	add    al,0x4
   14000dd07:	add    al,0x4
   14000dd09:	add    al,0x4
   14000dd0b:	add    al,0x4
   14000dd0d:	add    al,0x4
   14000dd0f:	add    al,0x4
   14000dd11:	add    al,0x4
   14000dd13:	add    al,0x4
   14000dd15:	add    al,0x4
   14000dd17:	add    al,0x4
   14000dd19:	add    al,0x4
   14000dd1b:	add    al,0x4
   14000dd1d:	add    al,0x4
   14000dd1f:	add    al,0x4
   14000dd21:	add    al,0x4
   14000dd23:	add    al,0x4
   14000dd25:	add    al,BYTE PTR [rdx]
   14000dd27:	nop
   14000dd28:	scas   al,BYTE PTR es:[rdi]
   14000dd29:	(bad)  
   14000dd2a:	add    BYTE PTR [rax],al
   14000dd2c:	(bad)  
   14000dd2d:	(bad)  
   14000dd2e:	add    BYTE PTR [rax],al
   14000dd30:	add    edx,ebp
   14000dd32:	add    BYTE PTR [rax],al
   14000dd34:	hlt    
   14000dd35:	(bad)  
   14000dd36:	add    BYTE PTR [rax],al
   14000dd38:	stc    
   14000dd39:	(bad)  
   14000dd3a:	add    BYTE PTR [rax],al
   14000dd3c:	stos   DWORD PTR es:[rdi],eax
   14000dd3d:	(bad)  
   14000dd3e:	add    BYTE PTR [rax],al
   14000dd40:	out    dx,eax
   14000dd41:	(bad)  
   14000dd42:	add    BYTE PTR [rax],al
   14000dd44:	or     ch,dl
   14000dd46:	add    BYTE PTR [rax],al
   14000dd48:	scas   al,BYTE PTR es:[rdi]
   14000dd49:	(bad)  
   14000dd4a:	add    BYTE PTR [rax],al
   14000dd4c:	add    BYTE PTR [rax],al
   14000dd4e:	add    DWORD PTR [rdx],eax
   14000dd50:	or     BYTE PTR [rbx],al
   14000dd52:	add    al,0x5
   14000dd54:	(bad)  
   14000dd55:	or     BYTE PTR [rax],cl
   14000dd57:	or     BYTE PTR [rax],cl
   14000dd59:	or     BYTE PTR [rax],cl
   14000dd5b:	or     BYTE PTR [rax],cl
   14000dd5d:	or     BYTE PTR [rax],cl
   14000dd5f:	or     BYTE PTR [rax],cl
   14000dd61:	or     BYTE PTR [rax],cl
   14000dd63:	or     BYTE PTR [rax],cl
   14000dd65:	or     BYTE PTR [rax],cl
   14000dd67:	or     BYTE PTR [rax],cl
   14000dd69:	or     BYTE PTR [rax],cl
   14000dd6b:	or     BYTE PTR [rax],cl
   14000dd6d:	or     BYTE PTR [rax],cl
   14000dd6f:	or     BYTE PTR [rax],cl
   14000dd71:	or     BYTE PTR [rax],cl
   14000dd73:	or     BYTE PTR [rax],cl
   14000dd75:	or     BYTE PTR [rax],cl
   14000dd77:	or     BYTE PTR [rax],cl
   14000dd79:	or     BYTE PTR [rax],cl
   14000dd7b:	or     BYTE PTR [rax],cl
   14000dd7d:	or     BYTE PTR [rax],cl
   14000dd7f:	or     BYTE PTR [rax],cl
   14000dd81:	or     BYTE PTR [rax],cl
   14000dd83:	or     BYTE PTR [rax],cl
   14000dd85:	or     BYTE PTR [rax],cl
   14000dd87:	or     BYTE PTR [rax],cl
   14000dd89:	or     BYTE PTR [rax],cl
   14000dd8b:	or     BYTE PTR [rax],cl
   14000dd8d:	or     BYTE PTR [rax],cl
   14000dd8f:	or     BYTE PTR [rax],cl
   14000dd91:	or     BYTE PTR [rax],cl
   14000dd93:	or     BYTE PTR [rdi],al
   14000dd95:	int3   
   14000dd96:	int3   
   14000dd97:	int3   
   14000dd98:	int3   
   14000dd99:	int3   
   14000dd9a:	int3   
   14000dd9b:	int3   
   14000dd9c:	int3   
   14000dd9d:	int3   
   14000dd9e:	int3   
   14000dd9f:	int3   
   14000dda0:	mov    QWORD PTR [rsp+0x10],rdx
   14000dda5:	push   rsi
   14000dda6:	push   rdi
   14000dda7:	push   r14
   14000dda9:	sub    rsp,0xd0
   14000ddb0:	mov    r8,QWORD PTR [rcx]
   14000ddb3:	movsxd r9,DWORD PTR [rcx+0x8]
   14000ddb7:	or     edi,0xffffffff
   14000ddba:	cmp    r9d,DWORD PTR [r8+0x4]
   14000ddbe:	mov    rsi,rdx
   14000ddc1:	mov    r14,rcx
   14000ddc4:	mov    DWORD PTR [rsp+0x100],edi
   14000ddcb:	jge    0x14000deb9
   14000ddd1:	mov    rax,QWORD PTR [r8+0x10]
   14000ddd5:	lea    rdx,[r9+r9*2]
   14000ddd9:	lea    rcx,[rax+rdx*8]
   14000dddd:	cmp    DWORD PTR [rcx+r8*1+0x4],0x8c
   14000dde6:	jne    0x14000deb9
   14000ddec:	lea    edx,[r9+0x1]
   14000ddf0:	mov    DWORD PTR [r14+0x8],edx
   14000ddf4:	cmp    edx,DWORD PTR [r8+0x4]
   14000ddf8:	jge    0x14000de1a
   14000ddfa:	movsxd rax,edx
   14000ddfd:	lea    rcx,[rax+rax*2]
   14000de01:	mov    rax,QWORD PTR [r8+0x10]
   14000de05:	lea    rcx,[rax+rcx*8]
   14000de09:	cmp    DWORD PTR [rcx+r8*1+0x4],0x9
   14000de0f:	jne    0x14000de1a
   14000de11:	lea    eax,[rdx+0x1]
   14000de14:	mov    DWORD PTR [r14+0x8],eax
   14000de18:	jmp    0x14000de24
   14000de1a:	xor    edx,edx
   14000de1c:	mov    rcx,r14
   14000de1f:	call   0x140019c50
   14000de24:	lea    rdx,[rsp+0x108]
   14000de2c:	mov    r8d,0xa
   14000de32:	mov    rcx,r14
   14000de35:	call   0x1400042b0
   14000de3a:	xor    edx,edx
   14000de3c:	lea    rcx,[rsp+0x108]
   14000de44:	lea    r8d,[rdx+0x1]
   14000de48:	call   QWORD PTR [rip+0x11712]        # 0x14001f560
   14000de4e:	lea    rcx,[rsp+0x108]
   14000de56:	mov    edx,0x1
   14000de5b:	call   QWORD PTR [rip+0x11377]        # 0x14001f1d8
   14000de61:	lea    rdx,[rsp+0xf0]
   14000de69:	lea    rcx,[rsp+0x108]
   14000de71:	mov    r8d,0xa
   14000de77:	mov    BYTE PTR [rsp+0xf0],0x0
   14000de7f:	call   QWORD PTR [rip+0x1134b]        # 0x14001f1d0
   14000de85:	cmp    BYTE PTR [rsp+0xf0],0x0
   14000de8d:	mov    edi,eax
   14000de8f:	mov    DWORD PTR [rsp+0x100],eax
   14000de96:	je     0x14000de9c
   14000de98:	test   eax,eax
   14000de9a:	jns    0x14000deab
   14000de9c:	lea    rdx,[rip+0x1193d]        # 0x14001f7e0
   14000dea3:	mov    rcx,r14
   14000dea6:	call   0x140019c50
   14000deab:	lea    rcx,[rsp+0x108]
   14000deb3:	call   QWORD PTR [rip+0x116ff]        # 0x14001f5b8
   14000deb9:	mov    r8,QWORD PTR [r14]
   14000debc:	movsxd rdx,DWORD PTR [r14+0x8]
   14000dec0:	cmp    edx,DWORD PTR [r8+0x4]
   14000dec4:	jge    0x14000dee3
   14000dec6:	mov    rax,QWORD PTR [r8+0x10]
   14000deca:	lea    rcx,[rdx+rdx*2]
   14000dece:	lea    rcx,[rax+rcx*8]
   14000ded2:	cmp    DWORD PTR [rcx+r8*1+0x4],0x13
   14000ded8:	jne    0x14000dee3
   14000deda:	lea    eax,[rdx+0x1]
   14000dedd:	mov    DWORD PTR [r14+0x8],eax
   14000dee1:	jmp    0x14000deed
   14000dee3:	xor    edx,edx
   14000dee5:	mov    rcx,r14
   14000dee8:	call   0x140019c50
   14000deed:	mov    rdx,rsi
   14000def0:	mov    rcx,r14
   14000def3:	call   0x140001120
   14000def8:	test   al,al
   14000defa:	je     0x14000e832
   14000df00:	mov    QWORD PTR [rsp+0xc8],rbx
   14000df08:	mov    QWORD PTR [rsp+0xc0],rbp
   14000df10:	mov    QWORD PTR [rsp+0xb8],r12
   14000df18:	mov    QWORD PTR [rsp+0xb0],r13
   14000df20:	lea    rbp,[rip+0xffffffffffff20d9]        # 0x140000000
   14000df27:	mov    QWORD PTR [rsp+0xa8],r15
   14000df2f:	nop
   14000df30:	mov    rbx,QWORD PTR [r14]
   14000df33:	movsxd rcx,DWORD PTR [r14+0x8]
   14000df37:	cmp    ecx,DWORD PTR [rbx+0x4]
   14000df3a:	jge    0x14000e80a
   14000df40:	cmp    ecx,DWORD PTR [rbx+0x4]
   14000df43:	jl     0x14000df49
   14000df45:	xor    eax,eax
   14000df47:	jmp    0x14000df60
   14000df49:	lea    eax,[rcx+0x1]
   14000df4c:	lea    rcx,[rcx+rcx*2]
   14000df50:	mov    DWORD PTR [r14+0x8],eax
   14000df54:	mov    rax,QWORD PTR [rbx+0x10]
   14000df58:	lea    rcx,[rax+rcx*8]
   14000df5c:	mov    eax,DWORD PTR [rcx+rbx*1+0x4]
   14000df60:	sub    eax,0x12
   14000df63:	cmp    eax,0x72
   14000df66:	ja     0x14000e0a3
   14000df6c:	cdqe   
   14000df6e:	movzx  eax,BYTE PTR [rax+rbp*1+0xe854]
   14000df76:	mov    ecx,DWORD PTR [rbp+rax*4+0xe840]
   14000df7d:	add    rcx,rbp
   14000df80:	jmp    rcx
   14000df82:	movsxd rdx,DWORD PTR [r14+0x8]
   14000df86:	xor    r8d,r8d
   14000df89:	xor    r10d,r10d
   14000df8c:	xor    r9d,r9d
   14000df8f:	test   edx,edx
   14000df91:	je     0x14000dfcb
   14000df93:	mov    rax,QWORD PTR [rbx+0x10]
   14000df97:	lea    rcx,[rdx+rdx*2]
   14000df9b:	lea    rcx,[rax+rcx*8]
   14000df9f:	mov    eax,DWORD PTR [rcx+rbx*1-0x14]
   14000dfa3:	cmp    eax,0x7
   14000dfa6:	je     0x14000dfcb
   14000dfa8:	cmp    eax,0x9
   14000dfab:	je     0x14000dfc5
   14000dfad:	cmp    eax,0xc
   14000dfb0:	je     0x14000dfbd
   14000dfb2:	cmp    eax,0xe
   14000dfb5:	jne    0x14000dfcb
   14000dfb7:	lea    r8d,[r10+0x1]
   14000dfbb:	jmp    0x14000dfcb
   14000dfbd:	mov    r10d,0x1
   14000dfc3:	jmp    0x14000dfcb
   14000dfc5:	mov    r9d,0x1
   14000dfcb:	cmp    edx,DWORD PTR [rbx+0x4]
   14000dfce:	jge    0x14000e7eb
   14000dfd4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000dfe0:	movsxd rax,DWORD PTR [r14+0x8]
   14000dfe4:	lea    edi,[rax+0x1]
   14000dfe7:	lea    rcx,[rax+rax*2]
   14000dfeb:	mov    DWORD PTR [r14+0x8],edi
   14000dfef:	mov    rax,QWORD PTR [rbx+0x10]
   14000dff3:	lea    rdx,[rbx+rcx*8]
   14000dff7:	mov    r11d,DWORD PTR [rdx+rax*1+0x4]
   14000dffc:	lea    eax,[r11-0x7]
   14000e000:	cmp    eax,0x48
   14000e003:	ja     0x14000e01e
   14000e005:	cdqe   
   14000e007:	movzx  eax,BYTE PTR [rax+rbp*1+0xe8ec]
   14000e00f:	mov    ecx,DWORD PTR [rbp+rax*4+0xe8c8]
   14000e016:	add    rcx,rbp
   14000e019:	jmp    rcx
   14000e01b:	inc    r8d
   14000e01e:	cmp    r11d,0x12
   14000e022:	jne    0x14000e037
   14000e024:	test   r8d,r8d
   14000e027:	jg     0x14000e037
   14000e029:	test   r10d,r10d
   14000e02c:	jg     0x14000e037
   14000e02e:	test   r9d,r9d
   14000e031:	jle    0x14000e7eb
   14000e037:	test   r8d,r8d
   14000e03a:	js     0x14000e088
   14000e03c:	test   r10d,r10d
   14000e03f:	js     0x14000e088
   14000e041:	test   r9d,r9d
   14000e044:	js     0x14000e088
   14000e046:	test   r8d,r8d
   14000e049:	jg     0x14000e055
   14000e04b:	cmp    r11d,0x12
   14000e04f:	je     0x14000e7eb
   14000e055:	cmp    edi,DWORD PTR [rbx+0x4]
   14000e058:	jl     0x14000dfe0
   14000e05a:	jmp    0x14000e7eb
   14000e05f:	dec    r8d
   14000e062:	jmp    0x14000e01e
   14000e064:	inc    r10d
   14000e067:	jmp    0x14000e01e
   14000e069:	dec    r10d
   14000e06c:	jmp    0x14000e01e
   14000e06e:	inc    r9d
   14000e071:	jmp    0x14000e01e
   14000e073:	dec    r9d
   14000e076:	jmp    0x14000e01e
   14000e078:	test   r9d,r9d
   14000e07b:	jne    0x14000e01e
   14000e07d:	test   r8d,r8d
   14000e080:	jne    0x14000e01e
   14000e082:	lea    r11d,[r9+0x8]
   14000e086:	jmp    0x14000e03c
   14000e088:	lea    eax,[rdi-0x1]
   14000e08b:	mov    DWORD PTR [r14+0x8],eax
   14000e08f:	jmp    0x14000e7eb
   14000e094:	lea    rdx,[rip+0x11c85]        # 0x14001fd20
   14000e09b:	mov    rcx,r14
   14000e09e:	call   0x140019c50
   14000e0a3:	dec    DWORD PTR [r14+0x8]
   14000e0a7:	lea    rcx,[rsp+0x30]
   14000e0ac:	call   QWORD PTR [rip+0x1150e]        # 0x14001f5c0
   14000e0b2:	lea    rcx,[rsp+0x38]
   14000e0b7:	call   QWORD PTR [rip+0x11503]        # 0x14001f5c0
   14000e0bd:	and    DWORD PTR [rsp+0x40],0xfffffffc
   14000e0c2:	lea    rcx,[rsp+0x50]
   14000e0c7:	mov    DWORD PTR [rsp+0x44],0x0
   14000e0cf:	mov    DWORD PTR [rsp+0x48],0x0
   14000e0d7:	call   QWORD PTR [rip+0x114e3]        # 0x14001f5c0
   14000e0dd:	lea    rcx,[rsp+0x58]
   14000e0e2:	call   QWORD PTR [rip+0x114d8]        # 0x14001f5c0
   14000e0e8:	lea    rcx,[rsp+0x60]
   14000e0ed:	call   QWORD PTR [rip+0x114cd]        # 0x14001f5c0
   14000e0f3:	mov    rax,QWORD PTR [rip+0x1144e]        # 0x14001f548
   14000e0fa:	lea    rcx,[rsp+0x88]
   14000e102:	mov    QWORD PTR [rsp+0x70],rax
   14000e107:	mov    BYTE PTR [rsp+0x68],0x0
   14000e10c:	mov    DWORD PTR [rsp+0x78],0x0
   14000e114:	mov    BYTE PTR [rsp+0x7c],0x0
   14000e119:	mov    BYTE PTR [rsp+0x7d],0x0
   14000e11e:	mov    BYTE PTR [rsp+0x7e],0x0
   14000e123:	mov    BYTE PTR [rsp+0x7f],0x0
   14000e128:	mov    BYTE PTR [rsp+0x80],0x0
   14000e130:	call   QWORD PTR [rip+0x1148a]        # 0x14001f5c0
   14000e136:	lea    rdx,[rsp+0x30]
   14000e13b:	xor    r8d,r8d
   14000e13e:	mov    rcx,r14
   14000e141:	mov    BYTE PTR [rsp+0x90],0x0
   14000e149:	mov    BYTE PTR [rsp+0x91],0x0
   14000e151:	mov    BYTE PTR [rsp+0x92],0x0
   14000e159:	mov    BYTE PTR [rsp+0x93],0x0
   14000e161:	mov    BYTE PTR [rsp+0x94],0x0
   14000e169:	mov    BYTE PTR [rsp+0x95],0x0
   14000e171:	mov    BYTE PTR [rsp+0x96],0x0
   14000e179:	mov    BYTE PTR [rsp+0x97],0x0
   14000e181:	mov    BYTE PTR [rsp+0x98],0x0
   14000e189:	mov    DWORD PTR [rsp+0x9c],0x0
   14000e194:	mov    DWORD PTR [rsp+0x78],0x2
   14000e19c:	call   0x14000a740
   14000e1a1:	cmp    BYTE PTR [rsp+0x7d],0x0
   14000e1a6:	je     0x14000e1b7
   14000e1a8:	lea    rdx,[rip+0x11b49]        # 0x14001fcf8
   14000e1af:	mov    rcx,r14
   14000e1b2:	call   0x140019d80
   14000e1b7:	cmp    BYTE PTR [rsp+0x7f],0x0
   14000e1bc:	je     0x14000e1cd
   14000e1be:	lea    rdx,[rip+0x11b13]        # 0x14001fcd8
   14000e1c5:	mov    rcx,r14
   14000e1c8:	call   0x140019c50
   14000e1cd:	cmp    DWORD PTR [rsp+0x9c],0x0
   14000e1d5:	jle    0x14000e1df
   14000e1d7:	inc    DWORD PTR [rsi+0x98]
   14000e1dd:	jmp    0x14000e1f1
   14000e1df:	cmp    edi,0xffffffff
   14000e1e2:	je     0x14000e1f1
   14000e1e4:	inc    DWORD PTR [rsi+0x98]
   14000e1ea:	mov    DWORD PTR [rsp+0x9c],edi
   14000e1f1:	mov    rax,QWORD PTR [rsi+0x48]
   14000e1f5:	lea    r15,[rsi+0x48]
   14000e1f9:	mov    ecx,DWORD PTR [rax]
   14000e1fb:	cmp    ecx,0x1
   14000e1fe:	je     0x14000e242
   14000e200:	test   ecx,ecx
   14000e202:	je     0x14000e242
   14000e204:	mov    edx,0x7fffffff
   14000e209:	mov    r8d,0x1
   14000e20f:	mov    rcx,r15
   14000e212:	call   0x140008530
   14000e217:	mov    ecx,0x70
   14000e21c:	mov    rbx,rax
   14000e21f:	call   0x14001e1c6
   14000e224:	test   rax,rax
   14000e227:	je     0x14000e23b
   14000e229:	lea    rdx,[rsp+0x30]
   14000e22e:	mov    rcx,rax
   14000e231:	call   0x140003ce0
   14000e236:	mov    QWORD PTR [rbx],rax
   14000e239:	jmp    0x14000e271
   14000e23b:	xor    eax,eax
   14000e23d:	mov    QWORD PTR [rbx],rax
   14000e240:	jmp    0x14000e271
   14000e242:	mov    rcx,r15
   14000e245:	call   QWORD PTR [rip+0x10f55]        # 0x14001f1a0
   14000e24b:	mov    ecx,0x70
   14000e250:	mov    rbx,rax
   14000e253:	call   0x14001e1c6
   14000e258:	test   rax,rax
   14000e25b:	je     0x14000e26c
   14000e25d:	lea    rdx,[rsp+0x30]
   14000e262:	mov    rcx,rax
   14000e265:	call   0x140003ce0
   14000e26a:	jmp    0x14000e26e
   14000e26c:	xor    eax,eax
   14000e26e:	mov    QWORD PTR [rbx],rax
   14000e271:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e276:	mov    ecx,DWORD PTR [rdx+0x8]
   14000e279:	mov    eax,DWORD PTR [rdx+0xc]
   14000e27c:	sub    eax,ecx
   14000e27e:	test   eax,eax
   14000e280:	jle    0x14000e7e1
   14000e286:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e290:	mov    eax,DWORD PTR [rdx]
   14000e292:	cmp    eax,0x1
   14000e295:	je     0x14000e443
   14000e29b:	test   eax,eax
   14000e29d:	je     0x14000e443
   14000e2a3:	movsxd rax,ecx
   14000e2a6:	lea    rcx,[rsp+0x70]
   14000e2ab:	lea    rbp,[rdx+rax*8+0x10]
   14000e2b0:	mov    edx,DWORD PTR [rdx+0x4]
   14000e2b3:	call   QWORD PTR [rip+0x111f7]        # 0x14001f4b0
   14000e2b9:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e2be:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000e2c2:	mov    r12,rax
   14000e2c5:	lea    r13,[rdx+rcx*8+0x10]
   14000e2ca:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000e2ce:	lea    rsi,[rdx+rcx*8+0x10]
   14000e2d3:	cmp    rsi,r13
   14000e2d6:	je     0x14000e39a
   14000e2dc:	nop    DWORD PTR [rax+0x0]
   14000e2e0:	mov    ecx,0x48
   14000e2e5:	call   0x14001e1c6
   14000e2ea:	mov    rdi,rax
   14000e2ed:	test   rax,rax
   14000e2f0:	je     0x14000e37f
   14000e2f6:	mov    rbx,QWORD PTR [rbp+0x0]
   14000e2fa:	mov    rcx,rax
   14000e2fd:	mov    rdx,rbx
   14000e300:	call   QWORD PTR [rip+0x112d2]        # 0x14001f5d8
   14000e306:	lea    rdx,[rbx+0x8]
   14000e30a:	lea    rcx,[rdi+0x8]
   14000e30e:	call   QWORD PTR [rip+0x112c4]        # 0x14001f5d8
   14000e314:	mov    ecx,DWORD PTR [rdi+0x10]
   14000e317:	lea    rdx,[rbx+0x20]
   14000e31b:	xor    ecx,DWORD PTR [rbx+0x10]
   14000e31e:	and    ecx,0x1
   14000e321:	xor    DWORD PTR [rdi+0x10],ecx
   14000e324:	mov    eax,DWORD PTR [rdi+0x10]
   14000e327:	mov    ecx,eax
   14000e329:	xor    ecx,DWORD PTR [rbx+0x10]
   14000e32c:	and    ecx,0x2
   14000e32f:	xor    ecx,eax
   14000e331:	mov    DWORD PTR [rdi+0x10],ecx
   14000e334:	mov    eax,DWORD PTR [rbx+0x14]
   14000e337:	lea    rcx,[rdi+0x20]
   14000e33b:	mov    DWORD PTR [rdi+0x14],eax
   14000e33e:	mov    eax,DWORD PTR [rbx+0x18]
   14000e341:	mov    DWORD PTR [rdi+0x18],eax
   14000e344:	call   QWORD PTR [rip+0x1128e]        # 0x14001f5d8
   14000e34a:	lea    rdx,[rbx+0x28]
   14000e34e:	lea    rcx,[rdi+0x28]
   14000e352:	call   QWORD PTR [rip+0x11280]        # 0x14001f5d8
   14000e358:	lea    rdx,[rbx+0x30]
   14000e35c:	lea    rcx,[rdi+0x30]
   14000e360:	call   QWORD PTR [rip+0x11272]        # 0x14001f5d8
   14000e366:	lea    rdx,[rbx+0x38]
   14000e36a:	lea    rcx,[rdi+0x38]
   14000e36e:	call   QWORD PTR [rip+0x11264]        # 0x14001f5d8
   14000e374:	movzx  r11d,BYTE PTR [rbx+0x40]
   14000e379:	mov    BYTE PTR [rdi+0x40],r11b
   14000e37d:	jmp    0x14000e381
   14000e37f:	xor    edi,edi
   14000e381:	mov    QWORD PTR [rsi],rdi
   14000e384:	add    rsi,0x8
   14000e388:	add    rbp,0x8
   14000e38c:	cmp    rsi,r13
   14000e38f:	jne    0x14000e2e0
   14000e395:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e39a:	mov    eax,DWORD PTR [r12]
   14000e39e:	test   eax,eax
   14000e3a0:	je     0x14000e3c2
   14000e3a2:	cmp    eax,0xffffffff
   14000e3a5:	je     0x14000e443
   14000e3ab:	lock add DWORD PTR [r12],0xffffffff
   14000e3b1:	setne  al
   14000e3b4:	test   al,al
   14000e3b6:	je     0x14000e3c2
   14000e3b8:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e3bd:	jmp    0x14000e443
   14000e3c2:	movsxd rax,DWORD PTR [r12+0xc]
   14000e3c7:	lea    rdi,[r12+rax*8+0x10]
   14000e3cc:	movsxd rax,DWORD PTR [r12+0x8]
   14000e3d1:	lea    rsi,[r12+rax*8+0x10]
   14000e3d6:	cmp    rsi,rdi
   14000e3d9:	je     0x14000e435
   14000e3db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e3e0:	mov    rbx,QWORD PTR [rdi-0x8]
   14000e3e4:	sub    rdi,0x8
   14000e3e8:	test   rbx,rbx
   14000e3eb:	je     0x14000e430
   14000e3ed:	lea    rcx,[rbx+0x38]
   14000e3f1:	call   QWORD PTR [rip+0x111c1]        # 0x14001f5b8
   14000e3f7:	lea    rcx,[rbx+0x30]
   14000e3fb:	call   QWORD PTR [rip+0x111b7]        # 0x14001f5b8
   14000e401:	lea    rcx,[rbx+0x28]
   14000e405:	call   QWORD PTR [rip+0x111ad]        # 0x14001f5b8
   14000e40b:	lea    rcx,[rbx+0x20]
   14000e40f:	call   QWORD PTR [rip+0x111a3]        # 0x14001f5b8
   14000e415:	lea    rcx,[rbx+0x8]
   14000e419:	call   QWORD PTR [rip+0x11199]        # 0x14001f5b8
   14000e41f:	mov    rcx,rbx
   14000e422:	call   QWORD PTR [rip+0x11190]        # 0x14001f5b8
   14000e428:	mov    rcx,rbx
   14000e42b:	call   0x14001e1c0
   14000e430:	cmp    rdi,rsi
   14000e433:	jne    0x14000e3e0
   14000e435:	mov    rcx,r12
   14000e438:	call   QWORD PTR [rip+0x110aa]        # 0x14001f4e8
   14000e43e:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e443:	movsxd rax,DWORD PTR [rdx+0xc]
   14000e447:	mov    rcx,QWORD PTR [rdx+rax*8+0x8]
   14000e44c:	cmp    BYTE PTR [rcx+0x40],0x0
   14000e450:	je     0x14000e7d2
   14000e456:	mov    BYTE PTR [rsp+0x80],0x1
   14000e45e:	mov    eax,DWORD PTR [rdx]
   14000e460:	cmp    eax,0x1
   14000e463:	je     0x14000e583
   14000e469:	test   eax,eax
   14000e46b:	je     0x14000e583
   14000e471:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e475:	lea    rcx,[rsp+0x70]
   14000e47a:	lea    rdi,[rdx+rax*8+0x10]
   14000e47f:	mov    edx,DWORD PTR [rdx+0x4]
   14000e482:	call   QWORD PTR [rip+0x11028]        # 0x14001f4b0
   14000e488:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e48d:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000e491:	mov    rbp,rax
   14000e494:	lea    rsi,[rdx+rcx*8+0x10]
   14000e499:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000e49d:	lea    rbx,[rdx+rcx*8+0x10]
   14000e4a2:	cmp    rbx,rsi
   14000e4a5:	je     0x14000e4e3
   14000e4a7:	nop    WORD PTR [rax+rax*1+0x0]
   14000e4b0:	mov    ecx,0x48
   14000e4b5:	call   0x14001e1c6
   14000e4ba:	test   rax,rax
   14000e4bd:	je     0x14000e4cc
   14000e4bf:	mov    rdx,QWORD PTR [rdi]
   14000e4c2:	mov    rcx,rax
   14000e4c5:	call   0x140001b60
   14000e4ca:	jmp    0x14000e4ce
   14000e4cc:	xor    eax,eax
   14000e4ce:	mov    QWORD PTR [rbx],rax
   14000e4d1:	add    rbx,0x8
   14000e4d5:	add    rdi,0x8
   14000e4d9:	cmp    rbx,rsi
   14000e4dc:	jne    0x14000e4b0
   14000e4de:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e4e3:	mov    eax,DWORD PTR [rbp+0x0]
   14000e4e6:	test   eax,eax
   14000e4e8:	je     0x14000e506
   14000e4ea:	cmp    eax,0xffffffff
   14000e4ed:	je     0x14000e583
   14000e4f3:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000e4f8:	setne  al
   14000e4fb:	test   al,al
   14000e4fd:	je     0x14000e506
   14000e4ff:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e504:	jmp    0x14000e583
   14000e506:	movsxd rax,DWORD PTR [rbp+0xc]
   14000e50a:	lea    rdi,[rbp+rax*8+0x10]
   14000e50f:	movsxd rax,DWORD PTR [rbp+0x8]
   14000e513:	lea    rsi,[rbp+rax*8+0x10]
   14000e518:	cmp    rsi,rdi
   14000e51b:	je     0x14000e575
   14000e51d:	nop    DWORD PTR [rax]
   14000e520:	mov    rbx,QWORD PTR [rdi-0x8]
   14000e524:	sub    rdi,0x8
   14000e528:	test   rbx,rbx
   14000e52b:	je     0x14000e570
   14000e52d:	lea    rcx,[rbx+0x38]
   14000e531:	call   QWORD PTR [rip+0x11081]        # 0x14001f5b8
   14000e537:	lea    rcx,[rbx+0x30]
   14000e53b:	call   QWORD PTR [rip+0x11077]        # 0x14001f5b8
   14000e541:	lea    rcx,[rbx+0x28]
   14000e545:	call   QWORD PTR [rip+0x1106d]        # 0x14001f5b8
   14000e54b:	lea    rcx,[rbx+0x20]
   14000e54f:	call   QWORD PTR [rip+0x11063]        # 0x14001f5b8
   14000e555:	lea    rcx,[rbx+0x8]
   14000e559:	call   QWORD PTR [rip+0x11059]        # 0x14001f5b8
   14000e55f:	mov    rcx,rbx
   14000e562:	call   QWORD PTR [rip+0x11050]        # 0x14001f5b8
   14000e568:	mov    rcx,rbx
   14000e56b:	call   0x14001e1c0
   14000e570:	cmp    rdi,rsi
   14000e573:	jne    0x14000e520
   14000e575:	mov    rcx,rbp
   14000e578:	call   QWORD PTR [rip+0x10f6a]        # 0x14001f4e8
   14000e57e:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e583:	movsxd rax,DWORD PTR [rdx+0xc]
   14000e587:	mov    ecx,DWORD PTR [rdx]
   14000e589:	lea    rbx,[rdx+rax*8+0x8]
   14000e58e:	mov    QWORD PTR [rsp+0x20],rbx
   14000e593:	cmp    ecx,0x1
   14000e596:	je     0x14000e6e9
   14000e59c:	test   ecx,ecx
   14000e59e:	je     0x14000e6e9
   14000e5a4:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e5a8:	lea    rax,[rax*8+0x10]
   14000e5b0:	sub    rbx,rax
   14000e5b3:	sub    rbx,rdx
   14000e5b6:	sar    rbx,0x3
   14000e5ba:	cmp    ecx,0x1
   14000e5bd:	je     0x14000e6d4
   14000e5c3:	test   ecx,ecx
   14000e5c5:	je     0x14000e6d4
   14000e5cb:	lea    rsi,[rax+rdx*1]
   14000e5cf:	mov    edx,DWORD PTR [rdx+0x4]
   14000e5d2:	lea    rcx,[rsp+0x70]
   14000e5d7:	call   QWORD PTR [rip+0x10ed3]        # 0x14001f4b0
   14000e5dd:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e5e2:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000e5e6:	mov    r12,rax
   14000e5e9:	lea    rbp,[rdx+rcx*8+0x10]
   14000e5ee:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000e5f2:	lea    rdi,[rdx+rcx*8+0x10]
   14000e5f7:	cmp    rdi,rbp
   14000e5fa:	je     0x14000e633
   14000e5fc:	nop    DWORD PTR [rax+0x0]
   14000e600:	mov    ecx,0x48
   14000e605:	call   0x14001e1c6
   14000e60a:	test   rax,rax
   14000e60d:	je     0x14000e61c
   14000e60f:	mov    rdx,QWORD PTR [rsi]
   14000e612:	mov    rcx,rax
   14000e615:	call   0x140001b60
   14000e61a:	jmp    0x14000e61e
   14000e61c:	xor    eax,eax
   14000e61e:	mov    QWORD PTR [rdi],rax
   14000e621:	add    rdi,0x8
   14000e625:	add    rsi,0x8
   14000e629:	cmp    rdi,rbp
   14000e62c:	jne    0x14000e600
   14000e62e:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e633:	mov    eax,DWORD PTR [r12]
   14000e637:	test   eax,eax
   14000e639:	je     0x14000e658
   14000e63b:	cmp    eax,0xffffffff
   14000e63e:	je     0x14000e6d4
   14000e644:	lock add DWORD PTR [r12],0xffffffff
   14000e64a:	setne  al
   14000e64d:	test   al,al
   14000e64f:	je     0x14000e658
   14000e651:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e656:	jmp    0x14000e6d4
   14000e658:	movsxd rax,DWORD PTR [r12+0xc]
   14000e65d:	lea    rsi,[r12+rax*8+0x10]
   14000e662:	movsxd rax,DWORD PTR [r12+0x8]
   14000e667:	lea    rbp,[r12+rax*8+0x10]
   14000e66c:	cmp    rbp,rsi
   14000e66f:	je     0x14000e6c6
   14000e671:	mov    rdi,QWORD PTR [rsi-0x8]
   14000e675:	sub    rsi,0x8
   14000e679:	test   rdi,rdi
   14000e67c:	je     0x14000e6c1
   14000e67e:	lea    rcx,[rdi+0x38]
   14000e682:	call   QWORD PTR [rip+0x10f30]        # 0x14001f5b8
   14000e688:	lea    rcx,[rdi+0x30]
   14000e68c:	call   QWORD PTR [rip+0x10f26]        # 0x14001f5b8
   14000e692:	lea    rcx,[rdi+0x28]
   14000e696:	call   QWORD PTR [rip+0x10f1c]        # 0x14001f5b8
   14000e69c:	lea    rcx,[rdi+0x20]
   14000e6a0:	call   QWORD PTR [rip+0x10f12]        # 0x14001f5b8
   14000e6a6:	lea    rcx,[rdi+0x8]
   14000e6aa:	call   QWORD PTR [rip+0x10f08]        # 0x14001f5b8
   14000e6b0:	mov    rcx,rdi
   14000e6b3:	call   QWORD PTR [rip+0x10eff]        # 0x14001f5b8
   14000e6b9:	mov    rcx,rdi
   14000e6bc:	call   0x14001e1c0
   14000e6c1:	cmp    rsi,rbp
   14000e6c4:	jne    0x14000e671
   14000e6c6:	mov    rcx,r12
   14000e6c9:	call   QWORD PTR [rip+0x10e19]        # 0x14001f4e8
   14000e6cf:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e6d4:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e6d8:	movsxd rcx,ebx
   14000e6db:	lea    rax,[rdx+rax*8+0x10]
   14000e6e0:	lea    rbx,[rax+rcx*8]
   14000e6e4:	mov    QWORD PTR [rsp+0x20],rbx
   14000e6e9:	mov    rdi,QWORD PTR [rbx]
   14000e6ec:	test   rdi,rdi
   14000e6ef:	je     0x14000e734
   14000e6f1:	lea    rcx,[rdi+0x38]
   14000e6f5:	call   QWORD PTR [rip+0x10ebd]        # 0x14001f5b8
   14000e6fb:	lea    rcx,[rdi+0x30]
   14000e6ff:	call   QWORD PTR [rip+0x10eb3]        # 0x14001f5b8
   14000e705:	lea    rcx,[rdi+0x28]
   14000e709:	call   QWORD PTR [rip+0x10ea9]        # 0x14001f5b8
   14000e70f:	lea    rcx,[rdi+0x20]
   14000e713:	call   QWORD PTR [rip+0x10e9f]        # 0x14001f5b8
   14000e719:	lea    rcx,[rdi+0x8]
   14000e71d:	call   QWORD PTR [rip+0x10e95]        # 0x14001f5b8
   14000e723:	mov    rcx,rdi
   14000e726:	call   QWORD PTR [rip+0x10e8c]        # 0x14001f5b8
   14000e72c:	mov    rcx,rdi
   14000e72f:	call   0x14001e1c0
   14000e734:	lea    rcx,[rsp+0x70]
   14000e739:	mov    rdx,rbx
   14000e73c:	call   QWORD PTR [rip+0x10abe]        # 0x14001f200
   14000e742:	mov    rax,QWORD PTR [r15]
   14000e745:	mov    ecx,DWORD PTR [rax]
   14000e747:	cmp    ecx,0x1
   14000e74a:	je     0x14000e78e
   14000e74c:	test   ecx,ecx
   14000e74e:	je     0x14000e78e
   14000e750:	mov    edx,0x7fffffff
   14000e755:	mov    r8d,0x1
   14000e75b:	mov    rcx,r15
   14000e75e:	call   0x140008530
   14000e763:	mov    ecx,0x70
   14000e768:	mov    rbx,rax
   14000e76b:	call   0x14001e1c6
   14000e770:	test   rax,rax
   14000e773:	je     0x14000e787
   14000e775:	lea    rdx,[rsp+0x30]
   14000e77a:	mov    rcx,rax
   14000e77d:	call   0x140003ce0
   14000e782:	mov    QWORD PTR [rbx],rax
   14000e785:	jmp    0x14000e7bd
   14000e787:	xor    eax,eax
   14000e789:	mov    QWORD PTR [rbx],rax
   14000e78c:	jmp    0x14000e7bd
   14000e78e:	mov    rcx,r15
   14000e791:	call   QWORD PTR [rip+0x10a09]        # 0x14001f1a0
   14000e797:	mov    ecx,0x70
   14000e79c:	mov    rbx,rax
   14000e79f:	call   0x14001e1c6
   14000e7a4:	test   rax,rax
   14000e7a7:	je     0x14000e7b8
   14000e7a9:	lea    rdx,[rsp+0x30]
   14000e7ae:	mov    rcx,rax
   14000e7b1:	call   0x140003ce0
   14000e7b6:	jmp    0x14000e7ba
   14000e7b8:	xor    eax,eax
   14000e7ba:	mov    QWORD PTR [rbx],rax
   14000e7bd:	mov    rdx,QWORD PTR [rsp+0x70]
   14000e7c2:	mov    ecx,DWORD PTR [rdx+0x8]
   14000e7c5:	mov    eax,DWORD PTR [rdx+0xc]
   14000e7c8:	sub    eax,ecx
   14000e7ca:	test   eax,eax
   14000e7cc:	jg     0x14000e290
   14000e7d2:	mov    rsi,QWORD PTR [rsp+0xf8]
   14000e7da:	lea    rbp,[rip+0xffffffffffff181f]        # 0x140000000
   14000e7e1:	lea    rcx,[rsp+0x30]
   14000e7e6:	call   0x140004210
   14000e7eb:	mov    rdx,rsi
   14000e7ee:	mov    rcx,r14
   14000e7f1:	call   0x140001120
   14000e7f6:	test   al,al
   14000e7f8:	je     0x14000e80a
   14000e7fa:	mov    edi,DWORD PTR [rsp+0x100]
   14000e801:	jmp    0x14000df30
   14000e806:	dec    DWORD PTR [r14+0x8]
   14000e80a:	mov    r13,QWORD PTR [rsp+0xb0]
   14000e812:	mov    r12,QWORD PTR [rsp+0xb8]
   14000e81a:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000e822:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000e82a:	mov    r15,QWORD PTR [rsp+0xa8]
   14000e832:	add    rsp,0xd0
   14000e839:	pop    r14
   14000e83b:	pop    rdi
   14000e83c:	pop    rsi
   14000e83d:	ret    
   14000e83e:	xchg   ax,ax
   14000e840:	jmp    0x14000e829
   14000e842:	add    BYTE PTR [rax],al
   14000e844:	(bad)  
   14000e845:	fild   WORD PTR [rax]
   14000e847:	add    BYTE PTR [rsi],al
   14000e849:	call   0x12094e84e
   14000e84e:	add    BYTE PTR [rax],al
   14000e850:	movabs ds:0x4040404000000e0,eax
   14000e859:	add    al,0x4
   14000e85b:	add    al,0x4
   14000e85d:	add    al,0x4
   14000e85f:	add    al,0x4
   14000e861:	add    al,0x4
   14000e863:	add    al,0x1
   14000e865:	add    al,0x4
   14000e867:	add    al,0x4
   14000e869:	add    al,0x4
   14000e86b:	add    al,BYTE PTR [rdx]
   14000e86d:	add    al,BYTE PTR [rsp+rax*1]
   14000e870:	add    al,0x4
   14000e872:	add    al,0x4
   14000e874:	add    eax,DWORD PTR [rsp+rax*1]
   14000e877:	add    al,0x4
   14000e879:	add    al,0x4
   14000e87b:	add    al,0x4
   14000e87d:	add    al,0x4
   14000e87f:	add    al,0x4
   14000e881:	add    al,0x4
   14000e883:	add    al,0x4
   14000e885:	add    al,0x4
   14000e887:	add    al,0x4
   14000e889:	add    al,0x4
   14000e88b:	add    al,0x4
   14000e88d:	add    al,0x4
   14000e88f:	add    al,0x4
   14000e891:	add    al,0x4
   14000e893:	add    al,0x4
   14000e895:	add    al,0x4
   14000e897:	add    al,0x4
   14000e899:	add    al,0x4
   14000e89b:	add    al,0x4
   14000e89d:	add    al,0x4
   14000e89f:	add    al,0x4
   14000e8a1:	add    al,0x4
   14000e8a3:	add    al,0x4
   14000e8a5:	add    al,0x4
   14000e8a7:	add    al,0x4
   14000e8a9:	add    al,0x4
   14000e8ab:	add    al,0x4
   14000e8ad:	add    al,0x4
   14000e8af:	add    al,0x4
   14000e8b1:	add    al,0x4
   14000e8b3:	add    al,0x4
   14000e8b5:	add    al,0x4
   14000e8b7:	add    al,0x4
   14000e8b9:	add    al,0x4
   14000e8bb:	add    al,0x4
   14000e8bd:	add    al,0x4
   14000e8bf:	add    al,0x4
   14000e8c1:	add    al,0x4
   14000e8c3:	add    al,0x4
   14000e8c5:	add    al,BYTE PTR [rdx]
   14000e8c7:	nop
   14000e8c8:	(bad)  
   14000e8c9:	loopne 0x14000e8cb
   14000e8cb:	add    BYTE PTR [rsi-0x20],ch
   14000e8ce:	add    BYTE PTR [rax],al
   14000e8d0:	jae    0x14000e8b2
   14000e8d2:	add    BYTE PTR [rax],al
   14000e8d4:	fs loopne 0x14000e8d7
   14000e8d7:	add    BYTE PTR [rcx-0x20],ch
   14000e8da:	add    BYTE PTR [rax],al
   14000e8dc:	sbb    esp,eax
   14000e8de:	add    BYTE PTR [rax],al
   14000e8e0:	pop    rdi
   14000e8e1:	loopne 0x14000e8e3
   14000e8e3:	add    BYTE PTR [rax-0x20],bh
   14000e8e6:	add    BYTE PTR [rax],al
   14000e8e8:	(bad)  
   14000e8e9:	loopne 0x14000e8eb
   14000e8eb:	add    BYTE PTR [rax],al
   14000e8ed:	add    BYTE PTR [rcx],al
   14000e8ef:	add    cl,BYTE PTR [rax]
   14000e8f1:	add    eax,DWORD PTR [rax*1+0x8080806]
   14000e8f8:	or     BYTE PTR [rax],cl
   14000e8fa:	or     BYTE PTR [rax],cl
   14000e8fc:	or     BYTE PTR [rax],cl
   14000e8fe:	or     BYTE PTR [rax],cl
   14000e900:	or     BYTE PTR [rax],cl
   14000e902:	or     BYTE PTR [rax],cl
   14000e904:	or     BYTE PTR [rax],cl
   14000e906:	or     BYTE PTR [rax],cl
   14000e908:	or     BYTE PTR [rax],cl
   14000e90a:	or     BYTE PTR [rax],cl
   14000e90c:	or     BYTE PTR [rax],cl
   14000e90e:	or     BYTE PTR [rax],cl
   14000e910:	or     BYTE PTR [rax],cl
   14000e912:	or     BYTE PTR [rax],cl
   14000e914:	or     BYTE PTR [rax],cl
   14000e916:	or     BYTE PTR [rax],cl
   14000e918:	or     BYTE PTR [rax],cl
   14000e91a:	or     BYTE PTR [rax],cl
   14000e91c:	or     BYTE PTR [rax],cl
   14000e91e:	or     BYTE PTR [rax],cl
   14000e920:	or     BYTE PTR [rax],cl
   14000e922:	or     BYTE PTR [rax],cl
   14000e924:	or     BYTE PTR [rax],cl
   14000e926:	or     BYTE PTR [rax],cl
   14000e928:	or     BYTE PTR [rax],cl
   14000e92a:	or     BYTE PTR [rax],cl
   14000e92c:	or     BYTE PTR [rax],cl
   14000e92e:	or     BYTE PTR [rax],cl
   14000e930:	or     BYTE PTR [rax],cl
   14000e932:	or     BYTE PTR [rax],cl
   14000e934:	(bad)  
   14000e935:	int3   
   14000e936:	int3   
   14000e937:	int3   
   14000e938:	int3   
   14000e939:	int3   
   14000e93a:	int3   
   14000e93b:	int3   
   14000e93c:	int3   
   14000e93d:	int3   
   14000e93e:	int3   
   14000e93f:	int3   
   14000e940:	mov    QWORD PTR [rsp+0x18],rbx
   14000e945:	push   rbp
   14000e946:	push   rsi
   14000e947:	push   rdi
   14000e948:	sub    rsp,0x90
   14000e94f:	mov    r10,QWORD PTR [rcx]
   14000e952:	mov    rbx,rcx
   14000e955:	movsxd rcx,DWORD PTR [rcx+0x8]
   14000e959:	cmp    ecx,DWORD PTR [r10+0x4]
   14000e95d:	mov    edi,r8d
   14000e960:	mov    rbp,rdx
   14000e963:	jge    0x14000e981
   14000e965:	mov    rax,QWORD PTR [r10+0x10]
   14000e969:	lea    r9,[rcx+rcx*2]
   14000e96d:	lea    r9,[rax+r9*8]
   14000e971:	cmp    DWORD PTR [r9+r10*1+0x4],0x9
   14000e977:	jne    0x14000e981
   14000e979:	lea    eax,[rcx+0x1]
   14000e97c:	mov    DWORD PTR [rbx+0x8],eax
   14000e97f:	jmp    0x14000e98b
   14000e981:	xor    edx,edx
   14000e983:	mov    rcx,rbx
   14000e986:	call   0x140019c50
   14000e98b:	lea    rcx,[rsp+0x20]
   14000e990:	call   0x140004160
   14000e995:	mov    r11,QWORD PTR [rbx]
   14000e998:	movsxd rdx,DWORD PTR [rbx+0x8]
   14000e99c:	cmp    edx,DWORD PTR [r11+0x4]
   14000e9a0:	jge    0x14000e9be
   14000e9a2:	mov    rax,QWORD PTR [r11+0x10]
   14000e9a6:	lea    rcx,[rdx+rdx*2]
   14000e9aa:	lea    rcx,[rax+rcx*8]
   14000e9ae:	cmp    DWORD PTR [rcx+r11*1+0x4],0x1
   14000e9b4:	jne    0x14000e9be
   14000e9b6:	lea    eax,[rdx+0x1]
   14000e9b9:	mov    DWORD PTR [rbx+0x8],eax
   14000e9bc:	jmp    0x14000e9c8
   14000e9be:	xor    edx,edx
   14000e9c0:	mov    rcx,rbx
   14000e9c3:	call   0x140019c50
   14000e9c8:	mov    r8,QWORD PTR [rbx]
   14000e9cb:	mov    eax,DWORD PTR [rbx+0x8]
   14000e9ce:	dec    eax
   14000e9d0:	cdqe   
   14000e9d2:	lea    rcx,[rax+rax*2]
   14000e9d6:	mov    rax,QWORD PTR [r8+0x10]
   14000e9da:	lea    rdx,[rax+rcx*8]
   14000e9de:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   14000e9e3:	lea    rcx,[rdx+r8*1+0x8]
   14000e9e8:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   14000e9ed:	lea    rdx,[rsp+0xb0]
   14000e9f5:	call   QWORD PTR [rip+0x10bd5]        # 0x14001f5d0
   14000e9fb:	lea    rdx,[rsp+0xb0]
   14000ea03:	lea    rcx,[rsp+0x78]
   14000ea08:	call   QWORD PTR [rip+0x10b4a]        # 0x14001f558
   14000ea0e:	lea    rcx,[rsp+0xb0]
   14000ea16:	call   QWORD PTR [rip+0x10b9c]        # 0x14001f5b8
   14000ea1c:	mov    r11,QWORD PTR [rbx]
   14000ea1f:	movsxd rdx,DWORD PTR [rbx+0x8]
   14000ea23:	cmp    edx,DWORD PTR [r11+0x4]
   14000ea27:	jge    0x14000ea83
   14000ea29:	mov    rax,QWORD PTR [r11+0x10]
   14000ea2d:	lea    rcx,[rdx+rdx*2]
   14000ea31:	lea    rcx,[rax+rcx*8]
   14000ea35:	cmp    DWORD PTR [rcx+r11*1+0x4],0x9
   14000ea3b:	jne    0x14000ea83
   14000ea3d:	inc    edx
   14000ea3f:	mov    DWORD PTR [rbx+0x8],edx
   14000ea42:	cmp    edx,DWORD PTR [r11+0x4]
   14000ea46:	jge    0x14000ea67
   14000ea48:	movsxd rax,edx
   14000ea4b:	lea    rcx,[rax+rax*2]
   14000ea4f:	mov    rax,QWORD PTR [r11+0x10]
   14000ea53:	lea    rcx,[rax+rcx*8]
   14000ea57:	cmp    DWORD PTR [rcx+r11*1+0x4],0xa
   14000ea5d:	jne    0x14000ea67
   14000ea5f:	lea    eax,[rdx+0x1]
   14000ea62:	mov    DWORD PTR [rbx+0x8],eax
   14000ea65:	jmp    0x14000ea71
   14000ea67:	xor    edx,edx
   14000ea69:	mov    rcx,rbx
   14000ea6c:	call   0x140019c50
   14000ea71:	lea    rdx,[rip+0x10ee4]        # 0x14001f95c
   14000ea78:	lea    rcx,[rsp+0x78]
   14000ea7d:	call   QWORD PTR [rip+0x10afd]        # 0x14001f580
   14000ea83:	mov    r8,QWORD PTR [rbx]
   14000ea86:	movsxd rdx,DWORD PTR [rbx+0x8]
   14000ea8a:	cmp    edx,DWORD PTR [r8+0x4]
   14000ea8e:	jge    0x14000eaac
   14000ea90:	mov    rax,QWORD PTR [r8+0x10]
   14000ea94:	lea    rcx,[rdx+rdx*2]
   14000ea98:	lea    rcx,[rax+rcx*8]
   14000ea9c:	cmp    DWORD PTR [rcx+r8*1+0x4],0x5a
   14000eaa2:	jne    0x14000eaac
   14000eaa4:	lea    eax,[rdx+0x1]
   14000eaa7:	mov    DWORD PTR [rbx+0x8],eax
   14000eaaa:	jmp    0x14000eab6
   14000eaac:	xor    edx,edx
   14000eaae:	mov    rcx,rbx
   14000eab1:	call   0x140019c50
   14000eab6:	lea    rdx,[rsp+0x20]
   14000eabb:	mov    r8b,0x1
   14000eabe:	mov    rcx,rbx
   14000eac1:	mov    DWORD PTR [rsp+0x68],edi
   14000eac5:	call   0x14000a740
   14000eaca:	mov    rax,QWORD PTR [rbp+0x50]
   14000eace:	mov    ecx,DWORD PTR [rax]
   14000ead0:	cmp    ecx,0x1
   14000ead3:	je     0x14000eaef
   14000ead5:	test   ecx,ecx
   14000ead7:	je     0x14000eaef
   14000ead9:	lea    rcx,[rbp+0x50]
   14000eadd:	mov    edx,0x7fffffff
   14000eae2:	mov    r8d,0x1
   14000eae8:	call   0x140008530
   14000eaed:	jmp    0x14000eaf9
   14000eaef:	lea    rcx,[rbp+0x50]
   14000eaf3:	call   QWORD PTR [rip+0x106a7]        # 0x14001f1a0
   14000eaf9:	mov    ecx,0x70
   14000eafe:	mov    rbx,rax
   14000eb01:	call   0x14001e1c6
   14000eb06:	test   rax,rax
   14000eb09:	je     0x14000eb1a
   14000eb0b:	lea    rdx,[rsp+0x20]
   14000eb10:	mov    rcx,rax
   14000eb13:	call   0x140003ce0
   14000eb18:	jmp    0x14000eb1c
   14000eb1a:	xor    eax,eax
   14000eb1c:	mov    QWORD PTR [rbx],rax
   14000eb1f:	mov    rdx,QWORD PTR [rsp+0x60]
   14000eb24:	mov    eax,DWORD PTR [rdx+0xc]
   14000eb27:	sub    eax,DWORD PTR [rdx+0x8]
   14000eb2a:	test   eax,eax
   14000eb2c:	jle    0x14000ecaa
   14000eb32:	mov    eax,DWORD PTR [rdx]
   14000eb34:	cmp    eax,0x1
   14000eb37:	je     0x14000eb4f
   14000eb39:	test   eax,eax
   14000eb3b:	je     0x14000eb4f
   14000eb3d:	mov    edx,DWORD PTR [rdx+0x4]
   14000eb40:	lea    rcx,[rsp+0x60]
   14000eb45:	call   0x140003620
   14000eb4a:	mov    rdx,QWORD PTR [rsp+0x60]
   14000eb4f:	movsxd rax,DWORD PTR [rdx+0xc]
   14000eb53:	mov    rcx,QWORD PTR [rdx+rax*8+0x8]
   14000eb58:	cmp    BYTE PTR [rcx+0x40],0x0
   14000eb5c:	je     0x14000ecaa
   14000eb62:	mov    BYTE PTR [rsp+0x70],0x1
   14000eb67:	mov    eax,DWORD PTR [rdx]
   14000eb69:	cmp    eax,0x1
   14000eb6c:	je     0x14000eb84
   14000eb6e:	test   eax,eax
   14000eb70:	je     0x14000eb84
   14000eb72:	mov    edx,DWORD PTR [rdx+0x4]
   14000eb75:	lea    rcx,[rsp+0x60]
   14000eb7a:	call   0x140003620
   14000eb7f:	mov    rdx,QWORD PTR [rsp+0x60]
   14000eb84:	movsxd rax,DWORD PTR [rdx+0xc]
   14000eb88:	mov    ecx,DWORD PTR [rdx]
   14000eb8a:	lea    rbx,[rdx+rax*8+0x8]
   14000eb8f:	mov    QWORD PTR [rsp+0xb8],rbx
   14000eb97:	cmp    ecx,0x1
   14000eb9a:	je     0x14000ebe9
   14000eb9c:	test   ecx,ecx
   14000eb9e:	je     0x14000ebe9
   14000eba0:	movsxd rax,DWORD PTR [rdx+0x8]
   14000eba4:	lea    rax,[rax*8+0x10]
   14000ebac:	sub    rbx,rax
   14000ebaf:	sub    rbx,rdx
   14000ebb2:	sar    rbx,0x3
   14000ebb6:	cmp    ecx,0x1
   14000ebb9:	je     0x14000ebd1
   14000ebbb:	test   ecx,ecx
   14000ebbd:	je     0x14000ebd1
   14000ebbf:	mov    edx,DWORD PTR [rdx+0x4]
   14000ebc2:	lea    rcx,[rsp+0x60]
   14000ebc7:	call   0x140003620
   14000ebcc:	mov    rdx,QWORD PTR [rsp+0x60]
   14000ebd1:	movsxd rax,DWORD PTR [rdx+0x8]
   14000ebd5:	movsxd rcx,ebx
   14000ebd8:	lea    rax,[rdx+rax*8+0x10]
   14000ebdd:	lea    rbx,[rax+rcx*8]
   14000ebe1:	mov    QWORD PTR [rsp+0xb8],rbx
   14000ebe9:	mov    rdi,QWORD PTR [rbx]
   14000ebec:	test   rdi,rdi
   14000ebef:	je     0x14000ec34
   14000ebf1:	lea    rcx,[rdi+0x38]
   14000ebf5:	call   QWORD PTR [rip+0x109bd]        # 0x14001f5b8
   14000ebfb:	lea    rcx,[rdi+0x30]
   14000ebff:	call   QWORD PTR [rip+0x109b3]        # 0x14001f5b8
   14000ec05:	lea    rcx,[rdi+0x28]
   14000ec09:	call   QWORD PTR [rip+0x109a9]        # 0x14001f5b8
   14000ec0f:	lea    rcx,[rdi+0x20]
   14000ec13:	call   QWORD PTR [rip+0x1099f]        # 0x14001f5b8
   14000ec19:	lea    rcx,[rdi+0x8]
   14000ec1d:	call   QWORD PTR [rip+0x10995]        # 0x14001f5b8
   14000ec23:	mov    rcx,rdi
   14000ec26:	call   QWORD PTR [rip+0x1098c]        # 0x14001f5b8
   14000ec2c:	mov    rcx,rdi
   14000ec2f:	call   0x14001e1c0
   14000ec34:	lea    rcx,[rsp+0x60]
   14000ec39:	mov    rdx,rbx
   14000ec3c:	call   QWORD PTR [rip+0x105be]        # 0x14001f200
   14000ec42:	mov    rax,QWORD PTR [rbp+0x50]
   14000ec46:	mov    ecx,DWORD PTR [rax]
   14000ec48:	cmp    ecx,0x1
   14000ec4b:	je     0x14000ec67
   14000ec4d:	test   ecx,ecx
   14000ec4f:	je     0x14000ec67
   14000ec51:	lea    rcx,[rbp+0x50]
   14000ec55:	mov    edx,0x7fffffff
   14000ec5a:	mov    r8d,0x1
   14000ec60:	call   0x140008530
   14000ec65:	jmp    0x14000ec71
   14000ec67:	lea    rcx,[rbp+0x50]
   14000ec6b:	call   QWORD PTR [rip+0x1052f]        # 0x14001f1a0
   14000ec71:	mov    ecx,0x70
   14000ec76:	mov    rbx,rax
   14000ec79:	call   0x14001e1c6
   14000ec7e:	test   rax,rax
   14000ec81:	je     0x14000ec92
   14000ec83:	lea    rdx,[rsp+0x20]
   14000ec88:	mov    rcx,rax
   14000ec8b:	call   0x140003ce0
   14000ec90:	jmp    0x14000ec94
   14000ec92:	xor    eax,eax
   14000ec94:	mov    QWORD PTR [rbx],rax
   14000ec97:	mov    rdx,QWORD PTR [rsp+0x60]
   14000ec9c:	mov    eax,DWORD PTR [rdx+0xc]
   14000ec9f:	sub    eax,DWORD PTR [rdx+0x8]
   14000eca2:	test   eax,eax
   14000eca4:	jg     0x14000eb32
   14000ecaa:	cmp    DWORD PTR [rsp+0x8c],0x0
   14000ecb2:	jle    0x14000ecba
   14000ecb4:	inc    DWORD PTR [rbp+0x98]
   14000ecba:	lea    rcx,[rsp+0x78]
   14000ecbf:	call   QWORD PTR [rip+0x108f3]        # 0x14001f5b8
   14000ecc5:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ecca:	mov    eax,DWORD PTR [rbx]
   14000eccc:	test   eax,eax
   14000ecce:	je     0x14000ece5
   14000ecd0:	cmp    eax,0xffffffff
   14000ecd3:	je     0x14000ed0a
   14000ecd5:	lock add DWORD PTR [rbx],0xffffffff
   14000ecd9:	setne  al
   14000ecdc:	test   al,al
   14000ecde:	jne    0x14000ed0a
   14000ece0:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ece5:	movsxd rax,DWORD PTR [rbx+0xc]
   14000ece9:	lea    rcx,[rsp+0x60]
   14000ecee:	lea    r8,[rbx+rax*8+0x10]
   14000ecf3:	movsxd rax,DWORD PTR [rbx+0x8]
   14000ecf7:	lea    rdx,[rbx+rax*8+0x10]
   14000ecfc:	call   0x140001d40
   14000ed01:	mov    rcx,rbx
   14000ed04:	call   QWORD PTR [rip+0x107de]        # 0x14001f4e8
   14000ed0a:	lea    rcx,[rsp+0x50]
   14000ed0f:	call   QWORD PTR [rip+0x108a3]        # 0x14001f5b8
   14000ed15:	lea    rcx,[rsp+0x48]
   14000ed1a:	call   QWORD PTR [rip+0x10898]        # 0x14001f5b8
   14000ed20:	lea    rcx,[rsp+0x40]
   14000ed25:	call   QWORD PTR [rip+0x1088d]        # 0x14001f5b8
   14000ed2b:	lea    rcx,[rsp+0x28]
   14000ed30:	call   QWORD PTR [rip+0x10882]        # 0x14001f5b8
   14000ed36:	lea    rcx,[rsp+0x20]
   14000ed3b:	call   QWORD PTR [rip+0x10877]        # 0x14001f5b8
   14000ed41:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000ed49:	add    rsp,0x90
   14000ed50:	pop    rdi
   14000ed51:	pop    rsi
   14000ed52:	pop    rbp
   14000ed53:	ret    
   14000ed54:	int3   
   14000ed55:	int3   
   14000ed56:	int3   
   14000ed57:	int3   
   14000ed58:	int3   
   14000ed59:	int3   
   14000ed5a:	int3   
   14000ed5b:	int3   
   14000ed5c:	int3   
   14000ed5d:	int3   
   14000ed5e:	int3   
   14000ed5f:	int3   
   14000ed60:	mov    QWORD PTR [rsp+0x8],rbx
   14000ed65:	mov    QWORD PTR [rsp+0x18],rbp
   14000ed6a:	mov    DWORD PTR [rsp+0x10],edx
   14000ed6e:	push   rsi
   14000ed6f:	push   rdi
   14000ed70:	push   r12
   14000ed72:	push   r13
   14000ed74:	push   r14
   14000ed76:	sub    rsp,0x20
   14000ed7a:	mov    rdx,QWORD PTR [rcx]
   14000ed7d:	movsxd r13,r8d
   14000ed80:	mov    r12,rcx
   14000ed83:	movsxd rax,DWORD PTR [rdx+0x8]
   14000ed87:	mov    r8d,r13d
   14000ed8a:	lea    r14,[rdx+rax*8+0x10]
   14000ed8f:	lea    rdx,[rsp+0x58]
   14000ed94:	call   QWORD PTR [rip+0x1070e]        # 0x14001f4a8
   14000ed9a:	mov    r10,QWORD PTR [r12]
   14000ed9e:	movsxd rdx,DWORD PTR [rsp+0x58]
   14000eda3:	movsxd r9,DWORD PTR [r10+0x8]
   14000eda7:	mov    rbp,rax
   14000edaa:	mov    rdi,r14
   14000edad:	add    rdx,r9
   14000edb0:	lea    rbx,[r10+r9*8+0x10]
   14000edb5:	lea    rsi,[r10+rdx*8+0x10]
   14000edba:	cmp    rbx,rsi
   14000edbd:	je     0x14000edee
   14000edbf:	nop
   14000edc0:	mov    ecx,0xa8
   14000edc5:	call   0x14001e1c6
   14000edca:	test   rax,rax
   14000edcd:	je     0x14000eddc
   14000edcf:	mov    rdx,QWORD PTR [rdi]
   14000edd2:	mov    rcx,rax
   14000edd5:	call   0x140008750
   14000edda:	jmp    0x14000edde
   14000eddc:	xor    eax,eax
   14000edde:	mov    QWORD PTR [rbx],rax
   14000ede1:	add    rbx,0x8
   14000ede5:	add    rdi,0x8
   14000ede9:	cmp    rbx,rsi
   14000edec:	jne    0x14000edc0
   14000edee:	mov    r8,QWORD PTR [r12]
   14000edf2:	movsxd rdx,DWORD PTR [rsp+0x58]
   14000edf7:	movsxd rcx,DWORD PTR [r8+0x8]
   14000edfb:	movsxd rax,DWORD PTR [r8+0xc]
   14000edff:	lea    rdi,[r14+rdx*8]
   14000ee03:	add    rcx,rdx
   14000ee06:	lea    rsi,[r8+rax*8+0x10]
   14000ee0b:	add    rcx,r13
   14000ee0e:	lea    rbx,[r8+rcx*8+0x10]
   14000ee13:	cmp    rbx,rsi
   14000ee16:	je     0x14000ee4e
   14000ee18:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ee20:	mov    ecx,0xa8
   14000ee25:	call   0x14001e1c6
   14000ee2a:	test   rax,rax
   14000ee2d:	je     0x14000ee3c
   14000ee2f:	mov    rdx,QWORD PTR [rdi]
   14000ee32:	mov    rcx,rax
   14000ee35:	call   0x140008750
   14000ee3a:	jmp    0x14000ee3e
   14000ee3c:	xor    eax,eax
   14000ee3e:	mov    QWORD PTR [rbx],rax
   14000ee41:	add    rbx,0x8
   14000ee45:	add    rdi,0x8
   14000ee49:	cmp    rbx,rsi
   14000ee4c:	jne    0x14000ee20
   14000ee4e:	mov    eax,DWORD PTR [rbp+0x0]
   14000ee51:	test   eax,eax
   14000ee53:	je     0x14000ee66
   14000ee55:	cmp    eax,0xffffffff
   14000ee58:	je     0x14000ee71
   14000ee5a:	lock add DWORD PTR [rbp+0x0],0xffffffff
   14000ee5f:	setne  al
   14000ee62:	test   al,al
   14000ee64:	jne    0x14000ee71
   14000ee66:	mov    rdx,rbp
   14000ee69:	mov    rcx,r12
   14000ee6c:	call   0x14000d1d0
   14000ee71:	mov    rdx,QWORD PTR [r12]
   14000ee75:	movsxd rax,DWORD PTR [rsp+0x58]
   14000ee7a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ee7f:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000ee83:	mov    rbp,QWORD PTR [rsp+0x60]
   14000ee88:	add    rcx,rax
   14000ee8b:	lea    rax,[rdx+rcx*8+0x10]
   14000ee90:	add    rsp,0x20
   14000ee94:	pop    r14
   14000ee96:	pop    r13
   14000ee98:	pop    r12
   14000ee9a:	pop    rdi
   14000ee9b:	pop    rsi
   14000ee9c:	ret    
   14000ee9d:	int3   
   14000ee9e:	int3   
   14000ee9f:	int3   
   14000eea0:	mov    QWORD PTR [rsp+0x8],rbx
   14000eea5:	push   rdi
   14000eea6:	sub    rsp,0x20
   14000eeaa:	mov    rax,QWORD PTR [rcx]
   14000eead:	mov    rdi,rdx
   14000eeb0:	mov    rbx,rcx
   14000eeb3:	mov    r8d,DWORD PTR [rax]
   14000eeb6:	cmp    r8d,0x1
   14000eeba:	je     0x14000ef0c
   14000eebc:	test   r8d,r8d
   14000eebf:	je     0x14000ef0c
   14000eec1:	mov    edx,0x7fffffff
   14000eec6:	mov    r8d,0x1
   14000eecc:	call   0x14000ed60
   14000eed1:	mov    ecx,0xa8
   14000eed6:	mov    rbx,rax
   14000eed9:	call   0x14001e1c6
   14000eede:	test   rax,rax
   14000eee1:	je     0x14000eefc
   14000eee3:	mov    rdx,rdi
   14000eee6:	mov    rcx,rax
   14000eee9:	call   0x140008750
   14000eeee:	mov    QWORD PTR [rbx],rax
   14000eef1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eef6:	add    rsp,0x20
   14000eefa:	pop    rdi
   14000eefb:	ret    
   14000eefc:	xor    eax,eax
   14000eefe:	mov    QWORD PTR [rbx],rax
   14000ef01:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ef06:	add    rsp,0x20
   14000ef0a:	pop    rdi
   14000ef0b:	ret    
   14000ef0c:	call   QWORD PTR [rip+0x1028e]        # 0x14001f1a0
   14000ef12:	mov    r8,rdi
   14000ef15:	mov    rcx,rbx
   14000ef18:	mov    rdx,rax
   14000ef1b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ef20:	add    rsp,0x20
   14000ef24:	pop    rdi
   14000ef25:	jmp    0x140009300
   14000ef2a:	int3   
   14000ef2b:	int3   
   14000ef2c:	int3   
   14000ef2d:	int3   
   14000ef2e:	int3   
   14000ef2f:	int3   
   14000ef30:	mov    r11,rsp
   14000ef33:	push   r13
   14000ef35:	sub    rsp,0x390
   14000ef3c:	mov    rax,QWORD PTR [rip+0x10605]        # 0x14001f548
   14000ef43:	or     r13d,0xffffffff
   14000ef47:	mov    QWORD PTR [r11-0x38],r14
   14000ef4b:	mov    QWORD PTR [r11+0x20],rax
   14000ef4f:	xor    al,al
   14000ef51:	mov    r14,rcx
   14000ef54:	mov    BYTE PTR [rsp+0x3a0],al
   14000ef5b:	mov    rax,QWORD PTR [rcx]
   14000ef5e:	mov    edx,DWORD PTR [rax+0x4]
   14000ef61:	cmp    DWORD PTR [rcx+0x8],edx
   14000ef64:	jge    0x140010c8a
   14000ef6a:	mov    QWORD PTR [r11-0x10],rbx
   14000ef6e:	mov    QWORD PTR [r11-0x18],rbp
   14000ef72:	mov    QWORD PTR [r11-0x20],rsi
   14000ef76:	mov    QWORD PTR [r11-0x28],rdi
   14000ef7a:	mov    QWORD PTR [r11-0x30],r12
   14000ef7e:	mov    QWORD PTR [r11-0x40],r15
   14000ef82:	lea    r15,[rip+0xffffffffffff1077]        # 0x140000000
   14000ef89:	xor    esi,esi
   14000ef8b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ef90:	mov    r10,QWORD PTR [r14]
   14000ef93:	movsxd rcx,DWORD PTR [r14+0x8]
   14000ef97:	cmp    ecx,DWORD PTR [r10+0x4]
   14000ef9b:	jl     0x14000efa2
   14000ef9d:	mov    r12d,esi
   14000efa0:	jmp    0x14000efba
   14000efa2:	lea    eax,[rcx+0x1]
   14000efa5:	lea    rcx,[rcx+rcx*2]
   14000efa9:	mov    DWORD PTR [r14+0x8],eax
   14000efad:	mov    rax,QWORD PTR [r10+0x10]
   14000efb1:	lea    rcx,[rax+rcx*8]
   14000efb5:	mov    r12d,DWORD PTR [rcx+r10*1+0x4]
   14000efba:	lea    eax,[r12-0xf]
   14000efbf:	cmp    eax,0x80
   14000efc4:	ja     0x14000f10f
   14000efca:	cdqe   
   14000efcc:	movzx  eax,BYTE PTR [r15+rax*1+0x10cfc]
   14000efd5:	mov    ecx,DWORD PTR [r15+rax*4+0x10cd4]
   14000efdd:	add    rcx,r15
   14000efe0:	jmp    rcx
   14000efe2:	movsxd rbp,DWORD PTR [r14+0x8]
   14000efe6:	cmp    ebp,DWORD PTR [r10+0x4]
   14000efea:	jge    0x14000f10f
   14000eff0:	mov    rax,QWORD PTR [r10+0x10]
   14000eff4:	lea    rcx,[rbp+rbp*2+0x0]
   14000eff9:	lea    rcx,[rax+rcx*8]
   14000effd:	cmp    DWORD PTR [rcx+r10*1+0x4],0x1
   14000f003:	jne    0x14000f10f
   14000f009:	lea    edx,[rbp+0x1]
   14000f00c:	mov    DWORD PTR [r14+0x8],edx
   14000f010:	mov    r8d,DWORD PTR [r10+0x4]
   14000f014:	cmp    edx,r8d
   14000f017:	jge    0x14000f347
   14000f01d:	movsxd rax,edx
   14000f020:	lea    rcx,[rax+rax*2]
   14000f024:	mov    rax,QWORD PTR [r10+0x10]
   14000f028:	lea    rcx,[rax+rcx*8]
   14000f02c:	cmp    DWORD PTR [rcx+r10*1+0x4],0x10
   14000f032:	jne    0x14000f347
   14000f038:	inc    edx
   14000f03a:	mov    r8d,esi
   14000f03d:	mov    r11d,esi
   14000f040:	mov    DWORD PTR [r14+0x8],edx
   14000f044:	mov    r9d,esi
   14000f047:	je     0x14000f085
   14000f049:	movsxd rax,edx
   14000f04c:	lea    rcx,[rax+rax*2]
   14000f050:	mov    rax,QWORD PTR [r10+0x10]
   14000f054:	lea    rcx,[rax+rcx*8]
   14000f058:	mov    eax,DWORD PTR [rcx+r10*1-0x14]
   14000f05d:	cmp    eax,0x7
   14000f060:	je     0x14000f085
   14000f062:	cmp    eax,0x9
   14000f065:	je     0x14000f07f
   14000f067:	cmp    eax,0xc
   14000f06a:	je     0x14000f077
   14000f06c:	cmp    eax,0xe
   14000f06f:	jne    0x14000f085
   14000f071:	lea    r8d,[rax-0xd]
   14000f075:	jmp    0x14000f085
   14000f077:	mov    r11d,0x1
   14000f07d:	jmp    0x14000f085
   14000f07f:	mov    r9d,0x1
   14000f085:	cmp    edx,DWORD PTR [r10+0x4]
   14000f089:	jge    0x14000f10f
   14000f08f:	nop
   14000f090:	movsxd rax,DWORD PTR [r14+0x8]
   14000f094:	lea    ebx,[rax+0x1]
   14000f097:	lea    rcx,[rax+rax*2]
   14000f09b:	mov    DWORD PTR [r14+0x8],ebx
   14000f09f:	mov    rax,QWORD PTR [r10+0x10]
   14000f0a3:	lea    rdx,[r10+rcx*8]
   14000f0a7:	mov    edx,DWORD PTR [rdx+rax*1+0x4]
   14000f0ab:	lea    eax,[rdx-0x7]
   14000f0ae:	cmp    eax,0x48
   14000f0b1:	ja     0x14000f0ce
   14000f0b3:	cdqe   
   14000f0b5:	movzx  eax,BYTE PTR [r15+rax*1+0x10da4]
   14000f0be:	mov    ecx,DWORD PTR [r15+rax*4+0x10d80]
   14000f0c6:	add    rcx,r15
   14000f0c9:	jmp    rcx
   14000f0cb:	inc    r8d
   14000f0ce:	cmp    edx,0x12
   14000f0d1:	jne    0x14000f0e2
   14000f0d3:	test   r8d,r8d
   14000f0d6:	jg     0x14000f0e2
   14000f0d8:	test   r11d,r11d
   14000f0db:	jg     0x14000f0e2
   14000f0dd:	test   r9d,r9d
   14000f0e0:	jle    0x14000f10f
   14000f0e2:	test   r8d,r8d
   14000f0e5:	js     0x14000f33b
   14000f0eb:	test   r11d,r11d
   14000f0ee:	js     0x14000f33b
   14000f0f4:	test   r9d,r9d
   14000f0f7:	js     0x14000f33b
   14000f0fd:	test   r8d,r8d
   14000f100:	jg     0x14000f107
   14000f102:	cmp    edx,0x12
   14000f105:	je     0x14000f10f
   14000f107:	mov    rax,QWORD PTR [r14]
   14000f10a:	cmp    ebx,DWORD PTR [rax+0x4]
   14000f10d:	jl     0x14000f090
   14000f10f:	cmp    r12d,0x23
   14000f113:	je     0x14000f11f
   14000f115:	cmp    r12d,0x26
   14000f119:	jne    0x140010c3e
   14000f11f:	mov    rax,QWORD PTR [r14+0x18]
   14000f123:	cmp    DWORD PTR [rax+0x4],0x1
   14000f127:	jg     0x140010c3e
   14000f12d:	lea    rcx,[rsp+0xd0]
   14000f135:	call   0x1400088c0
   14000f13a:	lea    rdx,[rsp+0xd0]
   14000f142:	mov    rcx,r14
   14000f145:	call   0x140009350
   14000f14a:	test   al,al
   14000f14c:	je     0x140010c31
   14000f152:	mov    rax,QWORD PTR [rsp+0x3b8]
   14000f15a:	mov    r15d,esi
   14000f15d:	mov    ecx,DWORD PTR [rax+0xc]
   14000f160:	sub    ecx,DWORD PTR [rax+0x8]
   14000f163:	sub    ecx,0x1
   14000f166:	movsxd rbp,ecx
   14000f169:	js     0x14000f27c
   14000f16f:	nop
   14000f170:	movsxd rcx,DWORD PTR [rax+0x8]
   14000f174:	mov    r8d,DWORD PTR [r14+0x8]
   14000f178:	add    rcx,rbp
   14000f17b:	mov    rdx,QWORD PTR [rax+rcx*8+0x10]
   14000f180:	cmp    r8d,DWORD PTR [rdx+0x8]
   14000f184:	jle    0x14000f26c
   14000f18a:	mov    ecx,DWORD PTR [rdx+0xc]
   14000f18d:	dec    ecx
   14000f18f:	cmp    r8d,ecx
   14000f192:	jge    0x14000f26c
   14000f198:	movsxd rcx,DWORD PTR [rax+0x8]
   14000f19c:	xor    r8d,r8d
   14000f19f:	add    rcx,rbp
   14000f1a2:	mov    rbx,QWORD PTR [rax+rcx*8+0x10]
   14000f1a7:	lea    rcx,[rsp+0xa0]
   14000f1af:	mov    rax,QWORD PTR [rbx]
   14000f1b2:	mov    r13d,DWORD PTR [rax+0x4]
   14000f1b6:	add    r13d,0x2
   14000f1ba:	mov    edx,r13d
   14000f1bd:	call   QWORD PTR [rip+0x10315]        # 0x14001f4d8
   14000f1c3:	lea    rcx,[rsp+0xa0]
   14000f1cb:	call   QWORD PTR [rip+0x10427]        # 0x14001f5f8
   14000f1d1:	mov    rcx,rbx
   14000f1d4:	mov    rdi,rax
   14000f1d7:	mov    r12,rax
   14000f1da:	call   QWORD PTR [rip+0x10418]        # 0x14001f5f8
   14000f1e0:	mov    rcx,rbx
   14000f1e3:	mov    rsi,rax
   14000f1e6:	call   QWORD PTR [rip+0x10174]        # 0x14001f360
   14000f1ec:	cmp    rsi,rax
   14000f1ef:	je     0x14000f202
   14000f1f1:	movzx  ecx,BYTE PTR [rsi]
   14000f1f4:	inc    rsi
   14000f1f7:	inc    rdi
   14000f1fa:	mov    BYTE PTR [rdi-0x1],cl
   14000f1fd:	cmp    rsi,rax
   14000f200:	jne    0x14000f1f1
   14000f202:	lea    rax,[rip+0x10817]        # 0x14001fa20
   14000f209:	mov    cl,0x3a
   14000f20b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f210:	inc    rax
   14000f213:	mov    BYTE PTR [rdi],cl
   14000f215:	inc    rdi
   14000f218:	movzx  ecx,BYTE PTR [rax]
   14000f21b:	test   cl,cl
   14000f21d:	jne    0x14000f210
   14000f21f:	mov    rcx,rdi
   14000f222:	movsxd rax,r13d
   14000f225:	sub    rcx,r12
   14000f228:	cmp    rax,rcx
   14000f22b:	je     0x14000f240
   14000f22d:	sub    edi,r12d
   14000f230:	lea    rcx,[rsp+0xa0]
   14000f238:	mov    edx,edi
   14000f23a:	call   QWORD PTR [rip+0x10350]        # 0x14001f590
   14000f240:	lea    rdx,[rsp+0xa0]
   14000f248:	lea    rcx,[rsp+0xd8]
   14000f250:	call   QWORD PTR [rip+0x1009a]        # 0x14001f2f0
   14000f256:	lea    rcx,[rsp+0xa0]
   14000f25e:	call   QWORD PTR [rip+0x10354]        # 0x14001f5b8
   14000f264:	mov    rax,QWORD PTR [rsp+0x3b8]
   14000f26c:	sub    rbp,0x1
   14000f270:	jns    0x14000f170
   14000f276:	or     r13d,0xffffffff
   14000f27a:	xor    esi,esi
   14000f27c:	movzx  ebx,BYTE PTR [rsp+0x3a0]
   14000f284:	lea    rbp,[rip+0xffffffffffff0d75]        # 0x140000000
   14000f28b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f290:	movsxd rcx,DWORD PTR [r14+0x8]
   14000f294:	cmp    ecx,DWORD PTR [rsp+0x170]
   14000f29b:	jle    0x140010acb
   14000f2a1:	mov    eax,DWORD PTR [rsp+0x174]
   14000f2a8:	dec    eax
   14000f2aa:	cmp    ecx,eax
   14000f2ac:	jge    0x140010acb
   14000f2b2:	mov    rdx,QWORD PTR [r14]
   14000f2b5:	cmp    ecx,DWORD PTR [rdx+0x4]
   14000f2b8:	jge    0x140010acb
   14000f2be:	lea    r8d,[rcx+0x1]
   14000f2c2:	lea    rcx,[rcx+rcx*2]
   14000f2c6:	mov    DWORD PTR [r14+0x8],r8d
   14000f2ca:	mov    rax,QWORD PTR [rdx+0x10]
   14000f2ce:	lea    rcx,[rax+rcx*8]
   14000f2d2:	mov    eax,DWORD PTR [rcx+rdx*1+0x4]
   14000f2d6:	add    eax,0xffffffee
   14000f2d9:	cmp    eax,0x79
   14000f2dc:	ja     0x14001007f
   14000f2e2:	cdqe   
   14000f2e4:	movzx  eax,BYTE PTR [rax+rbp*1+0x10e40]
   14000f2ec:	mov    ecx,DWORD PTR [rbp+rax*4+0x10df0]
   14000f2f3:	add    rcx,rbp
   14000f2f6:	jmp    rcx
   14000f2f8:	dec    r8d
   14000f2fb:	jmp    0x14000f0ce
   14000f300:	inc    r11d
   14000f303:	jmp    0x14000f0ce
   14000f308:	dec    r11d
   14000f30b:	jmp    0x14000f0ce
   14000f310:	inc    r9d
   14000f313:	jmp    0x14000f0ce
   14000f318:	dec    r9d
   14000f31b:	jmp    0x14000f0ce
   14000f320:	test   r9d,r9d
   14000f323:	jne    0x14000f0ce
   14000f329:	test   r8d,r8d
   14000f32c:	jne    0x14000f0ce
   14000f332:	lea    edx,[r9+0x8]
   14000f336:	jmp    0x14000f0eb
   14000f33b:	lea    eax,[rbx-0x1]
   14000f33e:	mov    DWORD PTR [r14+0x8],eax
   14000f342:	jmp    0x14000f10f
   14000f347:	cmp    edx,r8d
   14000f34a:	jge    0x14000f36f
   14000f34c:	movsxd rax,edx
   14000f34f:	lea    rcx,[rax+rax*2]
   14000f353:	mov    rax,QWORD PTR [r10+0x10]
   14000f357:	lea    rcx,[rax+rcx*8]
   14000f35b:	cmp    DWORD PTR [rcx+r10*1+0x4],0x12
   14000f361:	jne    0x14000f36f
   14000f363:	lea    eax,[rdx+0x1]
   14000f366:	mov    DWORD PTR [r14+0x8],eax
   14000f36a:	jmp    0x14000f10f
   14000f36f:	lea    rcx,[rsp+0x90]
   14000f377:	call   QWORD PTR [rip+0x10243]        # 0x14001f5c0
   14000f37d:	mov    r11,QWORD PTR [r14]
   14000f380:	mov    eax,DWORD PTR [r14+0x8]
   14000f384:	dec    eax
   14000f386:	cdqe   
   14000f388:	lea    rcx,[rax+rax*2]
   14000f38c:	mov    rax,QWORD PTR [r11+0x10]
   14000f390:	lea    rdx,[rax+rcx*8]
   14000f394:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   14000f399:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   14000f39e:	lea    rcx,[rdx+r11*1+0x8]
   14000f3a3:	lea    rdx,[rsp+0x188]
   14000f3ab:	call   QWORD PTR [rip+0x1021f]        # 0x14001f5d0
   14000f3b1:	lea    rdx,[rsp+0x188]
   14000f3b9:	lea    rcx,[rsp+0x90]
   14000f3c1:	call   QWORD PTR [rip+0x10191]        # 0x14001f558
   14000f3c7:	lea    rcx,[rsp+0x188]
   14000f3cf:	call   QWORD PTR [rip+0x101e3]        # 0x14001f5b8
   14000f3d5:	mov    r11,QWORD PTR [r14]
   14000f3d8:	movsxd rdx,DWORD PTR [r14+0x8]
   14000f3dc:	cmp    edx,DWORD PTR [r11+0x4]
   14000f3e0:	jge    0x14000f3ff
   14000f3e2:	mov    rax,QWORD PTR [r11+0x10]
   14000f3e6:	lea    rcx,[rdx+rdx*2]
   14000f3ea:	lea    rcx,[rax+rcx*8]
   14000f3ee:	cmp    DWORD PTR [rcx+r11*1+0x4],0xe
   14000f3f4:	jne    0x14000f3ff
   14000f3f6:	lea    eax,[rdx+0x1]
   14000f3f9:	mov    DWORD PTR [r14+0x8],eax
   14000f3fd:	jmp    0x14000f409
   14000f3ff:	xor    edx,edx
   14000f401:	mov    rcx,r14
   14000f404:	call   0x140019c50
   14000f409:	movsxd r11,DWORD PTR [r14+0x8]
   14000f40d:	xor    r8d,r8d
   14000f410:	xor    r10d,r10d
   14000f413:	lea    esi,[r11-0x1]
   14000f417:	xor    r9d,r9d
   14000f41a:	mov    DWORD PTR [rsp+0x98],esi
   14000f421:	test   r11d,r11d
   14000f424:	je     0x14000f461
   14000f426:	mov    rdx,QWORD PTR [r14]
   14000f429:	lea    rcx,[r11+r11*2]
   14000f42d:	mov    rax,QWORD PTR [rdx+0x10]
   14000f431:	lea    rcx,[rax+rcx*8]
   14000f435:	mov    eax,DWORD PTR [rcx+rdx*1-0x14]
   14000f439:	cmp    eax,0x7
   14000f43c:	je     0x14000f461
   14000f43e:	cmp    eax,0x9
   14000f441:	je     0x14000f45b
   14000f443:	cmp    eax,0xc
   14000f446:	je     0x14000f453
   14000f448:	cmp    eax,0xe
   14000f44b:	jne    0x14000f461
   14000f44d:	lea    r8d,[r10+0x1]
   14000f451:	jmp    0x14000f461
   14000f453:	mov    r10d,0x1
   14000f459:	jmp    0x14000f461
   14000f45b:	mov    r9d,0x1
   14000f461:	mov    rdi,QWORD PTR [r14]
   14000f464:	cmp    r11d,DWORD PTR [rdi+0x4]
   14000f468:	jge    0x14000f519
   14000f46e:	xchg   ax,ax
   14000f470:	movsxd rax,DWORD PTR [r14+0x8]
   14000f474:	lea    ebx,[rax+0x1]
   14000f477:	lea    rcx,[rax+rax*2]
   14000f47b:	mov    DWORD PTR [r14+0x8],ebx
   14000f47f:	mov    rax,QWORD PTR [rdi+0x10]
   14000f483:	lea    rdx,[rdi+rcx*8]
   14000f487:	mov    r11d,DWORD PTR [rdx+rax*1+0x4]
   14000f48c:	lea    eax,[r11-0x7]
   14000f490:	cmp    eax,0x48
   14000f493:	ja     0x14000f4b0
   14000f495:	cdqe   
   14000f497:	movzx  eax,BYTE PTR [r15+rax*1+0x10ee0]
   14000f4a0:	mov    ecx,DWORD PTR [r15+rax*4+0x10ebc]
   14000f4a8:	add    rcx,r15
   14000f4ab:	jmp    rcx
   14000f4ad:	inc    r8d
   14000f4b0:	cmp    r11d,0xf
   14000f4b4:	jne    0x14000f4c5
   14000f4b6:	test   r8d,r8d
   14000f4b9:	jg     0x14000f4c5
   14000f4bb:	test   r10d,r10d
   14000f4be:	jg     0x14000f4c5
   14000f4c0:	test   r9d,r9d
   14000f4c3:	jle    0x14000f519
   14000f4c5:	test   r8d,r8d
   14000f4c8:	js     0x14000f512
   14000f4ca:	test   r10d,r10d
   14000f4cd:	js     0x14000f512
   14000f4cf:	test   r9d,r9d
   14000f4d2:	js     0x14000f512
   14000f4d4:	test   r8d,r8d
   14000f4d7:	jg     0x14000f4df
   14000f4d9:	cmp    r11d,0x12
   14000f4dd:	je     0x14000f519
   14000f4df:	mov    rax,QWORD PTR [r14]
   14000f4e2:	cmp    ebx,DWORD PTR [rax+0x4]
   14000f4e5:	jl     0x14000f470
   14000f4e7:	jmp    0x14000f519
   14000f4e9:	dec    r8d
   14000f4ec:	jmp    0x14000f4b0
   14000f4ee:	inc    r10d
   14000f4f1:	jmp    0x14000f4b0
   14000f4f3:	dec    r10d
   14000f4f6:	jmp    0x14000f4b0
   14000f4f8:	inc    r9d
   14000f4fb:	jmp    0x14000f4b0
   14000f4fd:	dec    r9d
   14000f500:	jmp    0x14000f4b0
   14000f502:	test   r9d,r9d
   14000f505:	jne    0x14000f4b0
   14000f507:	test   r8d,r8d
   14000f50a:	jne    0x14000f4b0
   14000f50c:	lea    r11d,[r9+0x8]
   14000f510:	jmp    0x14000f4ca
   14000f512:	lea    eax,[rbx-0x1]
   14000f515:	mov    DWORD PTR [r14+0x8],eax
   14000f519:	mov    eax,DWORD PTR [r14+0x8]
   14000f51d:	mov    DWORD PTR [rsp+0x9c],eax
   14000f524:	lea    eax,[rsi+0x1]
   14000f527:	mov    DWORD PTR [r14+0x8],eax
   14000f52b:	mov    rax,QWORD PTR [rsp+0x3b8]
   14000f533:	mov    ecx,DWORD PTR [rax]
   14000f535:	cmp    ecx,0x1
   14000f538:	je     0x14000f59e
   14000f53a:	test   ecx,ecx
   14000f53c:	je     0x14000f59e
   14000f53e:	lea    rcx,[rsp+0x3b8]
   14000f546:	mov    edx,0x7fffffff
   14000f54b:	mov    r8d,0x1
   14000f551:	call   0x140003c00
   14000f556:	mov    ecx,0x10
   14000f55b:	mov    rdi,rax
   14000f55e:	call   0x14001e1c6
   14000f563:	mov    rbx,rax
   14000f566:	test   rax,rax
   14000f569:	je     0x14000f597
   14000f56b:	lea    rdx,[rsp+0x90]
   14000f573:	mov    rcx,rax
   14000f576:	call   QWORD PTR [rip+0x1005c]        # 0x14001f5d8
   14000f57c:	mov    r11d,DWORD PTR [rsp+0x98]
   14000f584:	mov    DWORD PTR [rbx+0x8],r11d
   14000f588:	mov    ecx,DWORD PTR [rsp+0x9c]
   14000f58f:	mov    DWORD PTR [rbx+0xc],ecx
   14000f592:	mov    QWORD PTR [rdi],rbx
   14000f595:	jmp    0x14000f5ef
   14000f597:	xor    ebx,ebx
   14000f599:	mov    QWORD PTR [rdi],rbx
   14000f59c:	jmp    0x14000f5ef
   14000f59e:	lea    rcx,[rsp+0x3b8]
   14000f5a6:	call   QWORD PTR [rip+0xfbf4]        # 0x14001f1a0
   14000f5ac:	mov    ecx,0x10
   14000f5b1:	mov    rdi,rax
   14000f5b4:	call   0x14001e1c6
   14000f5b9:	mov    rbx,rax
   14000f5bc:	test   rax,rax
   14000f5bf:	je     0x14000f5ea
   14000f5c1:	lea    rdx,[rsp+0x90]
   14000f5c9:	mov    rcx,rax
   14000f5cc:	call   QWORD PTR [rip+0x10006]        # 0x14001f5d8
   14000f5d2:	mov    r11d,DWORD PTR [rsp+0x98]
   14000f5da:	mov    DWORD PTR [rbx+0x8],r11d
   14000f5de:	mov    ecx,DWORD PTR [rsp+0x9c]
   14000f5e5:	mov    DWORD PTR [rbx+0xc],ecx
   14000f5e8:	jmp    0x14000f5ec
   14000f5ea:	xor    ebx,ebx
   14000f5ec:	mov    QWORD PTR [rdi],rbx
   14000f5ef:	lea    rcx,[rsp+0x90]
   14000f5f7:	mov    DWORD PTR [r14+0x8],ebp
   14000f5fb:	call   QWORD PTR [rip+0xffb7]        # 0x14001f5b8
   14000f601:	xor    esi,esi
   14000f603:	jmp    0x14000f10f
   14000f608:	xor    al,al
   14000f60a:	mov    BYTE PTR [rsp+0x3a0],al
   14000f611:	jmp    0x14000f10f
   14000f616:	mov    BYTE PTR [rsp+0x3a0],0x1
   14000f61e:	jmp    0x14000f10f
   14000f623:	mov    eax,DWORD PTR [r14+0x8]
   14000f627:	lea    rdx,[rsp+0x180]
   14000f62f:	dec    eax
   14000f631:	cdqe   
   14000f633:	lea    rcx,[rax+rax*2]
   14000f637:	mov    rax,QWORD PTR [r10+0x10]
   14000f63b:	lea    rcx,[rax+rcx*8]
   14000f63f:	add    rcx,r10
   14000f642:	add    rcx,0x8
   14000f646:	mov    r9d,DWORD PTR [rcx+0xc]
   14000f64a:	mov    r8d,DWORD PTR [rcx+0x8]
   14000f64e:	sub    r9d,0x2
   14000f652:	inc    r8d
   14000f655:	call   QWORD PTR [rip+0xff75]        # 0x14001f5d0
   14000f65b:	lea    rcx,[r14+0x18]
   14000f65f:	lea    rdx,[rsp+0x180]
   14000f667:	call   0x1400048d0
   14000f66c:	lea    rcx,[rsp+0x180]
   14000f674:	call   QWORD PTR [rip+0xff3e]        # 0x14001f5b8
   14000f67a:	jmp    0x14000f10f
   14000f67f:	mov    rax,QWORD PTR [r14+0x18]
   14000f683:	lea    rcx,[r14+0x18]
   14000f687:	mov    ebx,DWORD PTR [rax+0x4]
   14000f68a:	call   0x140006340
   14000f68f:	lea    ecx,[rbx-0x1]
   14000f692:	movsxd rdx,ecx
   14000f695:	lea    rcx,[rsp+0x1a0]
   14000f69d:	lea    rdx,[rax+rdx*8]
   14000f6a1:	call   QWORD PTR [rip+0xff31]        # 0x14001f5d8
   14000f6a7:	mov    r11,QWORD PTR [r14+0x18]
   14000f6ab:	mov    r9d,esi
   14000f6ae:	mov    r8d,DWORD PTR [r11+0x8]
   14000f6b2:	mov    edx,DWORD PTR [r11+0x4]
   14000f6b6:	btr    r8d,0x1f
   14000f6bb:	dec    edx
   14000f6bd:	cmp    edx,r8d
   14000f6c0:	jle    0x14000f6cb
   14000f6c2:	mov    r8d,edx
   14000f6c5:	mov    r9d,0x8
   14000f6cb:	lea    rcx,[r14+0x18]
   14000f6cf:	call   0x140003220
   14000f6d4:	lea    rcx,[rsp+0x1a0]
   14000f6dc:	call   QWORD PTR [rip+0xfed6]        # 0x14001f5b8
   14000f6e2:	jmp    0x14000f10f
   14000f6e7:	mov    rcx,r14
   14000f6ea:	call   0x140007c50
   14000f6ef:	jmp    0x14000f10f
   14000f6f4:	mov    rcx,r14
   14000f6f7:	call   0x140005ff0
   14000f6fc:	jmp    0x14000f10f
   14000f701:	movsxd rdx,DWORD PTR [r14+0x8]
   14000f705:	cmp    edx,DWORD PTR [r10+0x4]
   14000f709:	jge    0x14000f10f
   14000f70f:	mov    rax,QWORD PTR [r10+0x10]
   14000f713:	lea    rcx,[rdx+rdx*2]
   14000f717:	lea    rcx,[rax+rcx*8]
   14000f71b:	cmp    DWORD PTR [rcx+r10*1+0x4],0x24
   14000f721:	jne    0x14000f10f
   14000f727:	inc    edx
   14000f729:	mov    DWORD PTR [r14+0x8],edx
   14000f72d:	nop    DWORD PTR [rax]
   14000f730:	mov    r8d,DWORD PTR [r10+0x4]
   14000f734:	cmp    edx,r8d
   14000f737:	jge    0x14000f758
   14000f739:	movsxd rax,edx
   14000f73c:	lea    rcx,[rax+rax*2]
   14000f740:	mov    rax,QWORD PTR [r10+0x10]
   14000f744:	lea    rcx,[rax+rcx*8]
   14000f748:	cmp    DWORD PTR [rcx+r10*1+0x4],0x11
   14000f74e:	jne    0x14000f758
   14000f750:	inc    edx
   14000f752:	mov    DWORD PTR [r14+0x8],edx
   14000f756:	jmp    0x14000f730
   14000f758:	cmp    edx,r8d
   14000f75b:	jge    0x14000f77c
   14000f75d:	movsxd rax,edx
   14000f760:	lea    rcx,[rax+rax*2]
   14000f764:	mov    rax,QWORD PTR [r10+0x10]
   14000f768:	lea    rcx,[rax+rcx*8]
   14000f76c:	cmp    DWORD PTR [rcx+r10*1+0x4],0x1
   14000f772:	jne    0x14000f77c
   14000f774:	inc    edx
   14000f776:	mov    DWORD PTR [r14+0x8],edx
   14000f77a:	jmp    0x14000f730
   14000f77c:	cmp    edx,r8d
   14000f77f:	jge    0x14000f7a4
   14000f781:	movsxd rax,edx
   14000f784:	lea    rcx,[rax+rax*2]
   14000f788:	mov    rax,QWORD PTR [r10+0x10]
   14000f78c:	lea    rcx,[rax+rcx*8]
   14000f790:	cmp    DWORD PTR [rcx+r10*1+0x4],0x12
   14000f796:	jne    0x14000f7a4
   14000f798:	lea    eax,[rdx+0x1]
   14000f79b:	mov    DWORD PTR [r14+0x8],eax
   14000f79f:	jmp    0x14000f10f
   14000f7a4:	xor    edx,edx
   14000f7a6:	mov    rcx,r14
   14000f7a9:	call   0x140019c50
   14000f7ae:	jmp    0x14000f10f
   14000f7b3:	mov    rax,QWORD PTR [r14+0x18]
   14000f7b7:	cmp    DWORD PTR [rax+0x4],0x1
   14000f7bb:	jle    0x14000f10f
   14000f7c1:	lea    rcx,[rsp+0x1c0]
   14000f7c9:	call   0x1400088c0
   14000f7ce:	lea    rdx,[rsp+0x1c0]
   14000f7d6:	mov    rcx,r14
   14000f7d9:	call   0x140009350
   14000f7de:	test   al,al
   14000f7e0:	jne    0x14000f7f4
   14000f7e2:	lea    rcx,[rsp+0x1c0]
   14000f7ea:	call   0x1400089c0
   14000f7ef:	jmp    0x140010c3e
   14000f7f4:	mov    r11d,DWORD PTR [rsp+0x264]
   14000f7fc:	mov    r10d,DWORD PTR [rsp+0x260]
   14000f804:	movzx  r9d,BYTE PTR [rsp+0x1e1]
   14000f80d:	movzx  r8d,BYTE PTR [rsp+0x1e0]
   14000f816:	movsxd rcx,DWORD PTR [r14+0x8]
   14000f81a:	cmp    ecx,r10d
   14000f81d:	jle    0x14000f873
   14000f81f:	lea    eax,[r11-0x1]
   14000f823:	cmp    ecx,eax
   14000f825:	jge    0x14000f873
   14000f827:	mov    rdx,QWORD PTR [r14]
   14000f82a:	mov    eax,DWORD PTR [rdx+0x4]
   14000f82d:	cmp    ecx,eax
   14000f82f:	jge    0x14000f873
   14000f831:	cmp    ecx,eax
   14000f833:	jl     0x14000f839
   14000f835:	mov    ecx,esi
   14000f837:	jmp    0x14000f850
   14000f839:	lea    eax,[rcx+0x1]
   14000f83c:	lea    rcx,[rcx+rcx*2]
   14000f840:	mov    DWORD PTR [r14+0x8],eax
   14000f844:	mov    rax,QWORD PTR [rdx+0x10]
   14000f848:	lea    rcx,[rax+rcx*8]
   14000f84c:	mov    ecx,DWORD PTR [rcx+rdx*1+0x4]
   14000f850:	sub    ecx,0x76
   14000f853:	je     0x14000f866
   14000f855:	cmp    ecx,0x1
   14000f858:	jne    0x14000f816
   14000f85a:	mov    r9b,cl
   14000f85d:	mov    BYTE PTR [rsp+0x1e1],cl
   14000f864:	jmp    0x14000f816
   14000f866:	mov    r8b,0x1
   14000f869:	mov    BYTE PTR [rsp+0x1e0],r8b
   14000f871:	jmp    0x14000f816
   14000f873:	test   r8b,r8b
   14000f876:	jne    0x14000f88f
   14000f878:	test   r9b,r9b
   14000f87b:	jne    0x14000f88f
   14000f87d:	lea    rcx,[rsp+0x1c0]
   14000f885:	call   0x1400089c0
   14000f88a:	jmp    0x140010c3e
   14000f88f:	mov    rax,QWORD PTR [rsp+0x3b8]
   14000f897:	mov    ecx,DWORD PTR [rax+0xc]
   14000f89a:	sub    ecx,DWORD PTR [rax+0x8]
   14000f89d:	sub    ecx,0x1
   14000f8a0:	movsxd rbp,ecx
   14000f8a3:	js     0x14000f9c2
   14000f8a9:	nop    DWORD PTR [rax+0x0]
   14000f8b0:	movsxd rbx,DWORD PTR [rax+0x8]
   14000f8b4:	mov    edx,DWORD PTR [r14+0x8]
   14000f8b8:	add    rbx,rbp
   14000f8bb:	mov    rcx,QWORD PTR [rax+rbx*8+0x10]
   14000f8c0:	cmp    edx,DWORD PTR [rcx+0x8]
   14000f8c3:	jle    0x14000f9ac
   14000f8c9:	mov    ecx,DWORD PTR [rcx+0xc]
   14000f8cc:	dec    ecx
   14000f8ce:	cmp    edx,ecx
   14000f8d0:	jge    0x14000f9ac
   14000f8d6:	mov    rbx,QWORD PTR [rax+rbx*8+0x10]
   14000f8db:	lea    rcx,[rsp+0xa8]
   14000f8e3:	xor    r8d,r8d
   14000f8e6:	mov    rax,QWORD PTR [rbx]
   14000f8e9:	mov    r13d,DWORD PTR [rax+0x4]
   14000f8ed:	add    r13d,0x2
   14000f8f1:	mov    edx,r13d
   14000f8f4:	call   QWORD PTR [rip+0xfbde]        # 0x14001f4d8
   14000f8fa:	lea    rcx,[rsp+0xa8]
   14000f902:	call   QWORD PTR [rip+0xfcf0]        # 0x14001f5f8
   14000f908:	mov    rcx,rbx
   14000f90b:	mov    rdi,rax
   14000f90e:	mov    r12,rax
   14000f911:	call   QWORD PTR [rip+0xfce1]        # 0x14001f5f8
   14000f917:	mov    rcx,rbx
   14000f91a:	mov    rsi,rax
   14000f91d:	call   QWORD PTR [rip+0xfa3d]        # 0x14001f360
   14000f923:	cmp    rsi,rax
   14000f926:	je     0x14000f941
   14000f928:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f930:	movzx  ecx,BYTE PTR [rsi]
   14000f933:	inc    rsi
   14000f936:	inc    rdi
   14000f939:	mov    BYTE PTR [rdi-0x1],cl
   14000f93c:	cmp    rsi,rax
   14000f93f:	jne    0x14000f930
   14000f941:	lea    rax,[rip+0x100d8]        # 0x14001fa20
   14000f948:	mov    cl,0x3a
   14000f94a:	nop    WORD PTR [rax+rax*1+0x0]
   14000f950:	inc    rax
   14000f953:	mov    BYTE PTR [rdi],cl
   14000f955:	inc    rdi
   14000f958:	movzx  ecx,BYTE PTR [rax]
   14000f95b:	test   cl,cl
   14000f95d:	jne    0x14000f950
   14000f95f:	mov    rcx,rdi
   14000f962:	movsxd rax,r13d
   14000f965:	sub    rcx,r12
   14000f968:	cmp    rax,rcx
   14000f96b:	je     0x14000f980
   14000f96d:	sub    edi,r12d
   14000f970:	lea    rcx,[rsp+0xa8]
   14000f978:	mov    edx,edi
   14000f97a:	call   QWORD PTR [rip+0xfc10]        # 0x14001f590
   14000f980:	lea    rdx,[rsp+0xa8]
   14000f988:	lea    rcx,[rsp+0x1c8]
   14000f990:	call   QWORD PTR [rip+0xf95a]        # 0x14001f2f0
   14000f996:	lea    rcx,[rsp+0xa8]
   14000f99e:	call   QWORD PTR [rip+0xfc14]        # 0x14001f5b8
   14000f9a4:	mov    rax,QWORD PTR [rsp+0x3b8]
   14000f9ac:	sub    rbp,0x1
   14000f9b0:	jns    0x14000f8b0
   14000f9b6:	mov    r8b,BYTE PTR [rsp+0x1e0]
   14000f9be:	or     r13d,0xffffffff
   14000f9c2:	test   r8b,r8b
   14000f9c5:	je     0x14000f9cd
   14000f9c7:	lea    rbx,[r14+0x58]
   14000f9cb:	jmp    0x14000f9d1
   14000f9cd:	lea    rbx,[r14+0x60]
   14000f9d1:	mov    rax,QWORD PTR [rbx]
   14000f9d4:	mov    ecx,DWORD PTR [rax+0x10]
   14000f9d7:	cmp    ecx,0x1
   14000f9da:	je     0x14000f9e8
   14000f9dc:	test   ecx,ecx
   14000f9de:	je     0x14000f9e8
   14000f9e0:	mov    rcx,rbx
   14000f9e3:	call   0x140003b90
   14000f9e8:	mov    rax,QWORD PTR [rbx]
   14000f9eb:	lea    rcx,[rsp+0x1c0]
   14000f9f3:	mov    edx,DWORD PTR [rax+0x24]
   14000f9f6:	call   QWORD PTR [rip+0xfad4]        # 0x14001f4d0
   14000f9fc:	lea    rdx,[rsp+0x1c0]
   14000fa04:	mov    rcx,rbx
   14000fa07:	mov    r8d,eax
   14000fa0a:	mov    esi,eax
   14000fa0c:	mov    DWORD PTR [rsp+0x3a8],eax
   14000fa13:	call   0x1400025e0
   14000fa18:	mov    rbp,rax
   14000fa1b:	mov    rcx,QWORD PTR [rax]
   14000fa1e:	mov    rax,QWORD PTR [rbx]
   14000fa21:	cmp    rcx,rax
   14000fa24:	jne    0x14000fac8
   14000fa2a:	mov    rcx,rax
   14000fa2d:	call   QWORD PTR [rip+0xf8ad]        # 0x14001f2e0
   14000fa33:	test   al,al
   14000fa35:	je     0x14000fa6a
   14000fa37:	mov    rax,QWORD PTR [rbx]
   14000fa3a:	lea    rcx,[rsp+0x1c0]
   14000fa42:	mov    edx,DWORD PTR [rax+0x24]
   14000fa45:	call   QWORD PTR [rip+0xfa85]        # 0x14001f4d0
   14000fa4b:	lea    rdx,[rsp+0x1c0]
   14000fa53:	mov    rcx,rbx
   14000fa56:	mov    r8d,eax
   14000fa59:	mov    esi,eax
   14000fa5b:	mov    DWORD PTR [rsp+0x3a8],eax
   14000fa62:	call   0x1400025e0
   14000fa67:	mov    rbp,rax
   14000fa6a:	mov    rcx,QWORD PTR [rbx]
   14000fa6d:	mov    edx,0x8
   14000fa72:	call   QWORD PTR [rip+0xfa68]        # 0x14001f4e0
   14000fa78:	mov    rdi,rax
   14000fa7b:	test   rax,rax
   14000fa7e:	je     0x14000faba
   14000fa80:	mov    rcx,QWORD PTR [rbp+0x0]
   14000fa84:	lea    rdx,[rsp+0x1c0]
   14000fa8c:	mov    DWORD PTR [rax+0x8],esi
   14000fa8f:	mov    QWORD PTR [rax],rcx
   14000fa92:	lea    rcx,[rax+0x10]
   14000fa96:	call   QWORD PTR [rip+0xfb3c]        # 0x14001f5d8
   14000fa9c:	lea    rcx,[rdi+0x18]
   14000faa0:	lea    rdx,[rsp+0x1c8]
   14000faa8:	call   QWORD PTR [rip+0xfb2a]        # 0x14001f5d8
   14000faae:	mov    QWORD PTR [rbp+0x0],rdi
   14000fab2:	mov    rax,QWORD PTR [rbx]
   14000fab5:	inc    DWORD PTR [rax+0x14]
   14000fab8:	jmp    0x14000fada
   14000faba:	xor    edi,edi
   14000fabc:	mov    QWORD PTR [rbp+0x0],rdi
   14000fac0:	mov    rax,QWORD PTR [rbx]
   14000fac3:	inc    DWORD PTR [rax+0x14]
   14000fac6:	jmp    0x14000fada
   14000fac8:	lea    rdx,[rsp+0x1c8]
   14000fad0:	add    rcx,0x18
   14000fad4:	call   QWORD PTR [rip+0xfa7e]        # 0x14001f558
   14000fada:	mov    rax,QWORD PTR [rbx]
   14000fadd:	mov    ecx,DWORD PTR [rax+0x10]
   14000fae0:	cmp    ecx,0x1
   14000fae3:	je     0x14000faf1
   14000fae5:	test   ecx,ecx
   14000fae7:	je     0x14000faf1
   14000fae9:	mov    rcx,rbx
   14000faec:	call   0x140003b90
   14000faf1:	mov    rax,QWORD PTR [rbx]
   14000faf4:	lea    rcx,[rsp+0x1c8]
   14000fafc:	mov    edx,DWORD PTR [rax+0x24]
   14000faff:	call   QWORD PTR [rip+0xf9cb]        # 0x14001f4d0
   14000fb05:	lea    rdx,[rsp+0x1c8]
   14000fb0d:	mov    rcx,rbx
   14000fb10:	mov    r8d,eax
   14000fb13:	mov    esi,eax
   14000fb15:	mov    DWORD PTR [rsp+0x3b0],eax
   14000fb1c:	call   0x1400025e0
   14000fb21:	mov    rbp,rax
   14000fb24:	mov    rcx,QWORD PTR [rax]
   14000fb27:	mov    rax,QWORD PTR [rbx]
   14000fb2a:	cmp    rcx,rax
   14000fb2d:	jne    0x14000fbf1
   14000fb33:	mov    rcx,rax
   14000fb36:	call   QWORD PTR [rip+0xf7a4]        # 0x14001f2e0
   14000fb3c:	test   al,al
   14000fb3e:	je     0x14000fb73
   14000fb40:	mov    rax,QWORD PTR [rbx]
   14000fb43:	lea    rcx,[rsp+0x1c8]
   14000fb4b:	mov    edx,DWORD PTR [rax+0x24]
   14000fb4e:	call   QWORD PTR [rip+0xf97c]        # 0x14001f4d0
   14000fb54:	lea    rdx,[rsp+0x1c8]
   14000fb5c:	mov    rcx,rbx
   14000fb5f:	mov    r8d,eax
   14000fb62:	mov    esi,eax
   14000fb64:	mov    DWORD PTR [rsp+0x3b0],eax
   14000fb6b:	call   0x1400025e0
   14000fb70:	mov    rbp,rax
   14000fb73:	mov    rcx,QWORD PTR [rbx]
   14000fb76:	mov    edx,0x8
   14000fb7b:	call   QWORD PTR [rip+0xf95f]        # 0x14001f4e0
   14000fb81:	mov    rdi,rax
   14000fb84:	test   rax,rax
   14000fb87:	je     0x14000fbd3
   14000fb89:	mov    rcx,QWORD PTR [rbp+0x0]
   14000fb8d:	lea    rdx,[rsp+0x1c8]
   14000fb95:	mov    DWORD PTR [rax+0x8],esi
   14000fb98:	mov    QWORD PTR [rax],rcx
   14000fb9b:	lea    rcx,[rax+0x10]
   14000fb9f:	call   QWORD PTR [rip+0xfa33]        # 0x14001f5d8
   14000fba5:	lea    rcx,[rdi+0x18]
   14000fba9:	lea    rdx,[rsp+0x1c8]
   14000fbb1:	call   QWORD PTR [rip+0xfa21]        # 0x14001f5d8
   14000fbb7:	mov    QWORD PTR [rbp+0x0],rdi
   14000fbbb:	mov    rax,QWORD PTR [rbx]
   14000fbbe:	inc    DWORD PTR [rax+0x14]
   14000fbc1:	lea    rcx,[rsp+0x1c0]
   14000fbc9:	call   0x1400089c0
   14000fbce:	jmp    0x140010c3e
   14000fbd3:	xor    edi,edi
   14000fbd5:	lea    rcx,[rsp+0x1c0]
   14000fbdd:	mov    QWORD PTR [rbp+0x0],rdi
   14000fbe1:	mov    rax,QWORD PTR [rbx]
   14000fbe4:	inc    DWORD PTR [rax+0x14]
   14000fbe7:	call   0x1400089c0
   14000fbec:	jmp    0x140010c3e
   14000fbf1:	lea    rdx,[rsp+0x1c8]
   14000fbf9:	add    rcx,0x18
   14000fbfd:	call   QWORD PTR [rip+0xf955]        # 0x14001f558
   14000fc03:	lea    rcx,[rsp+0x1c0]
   14000fc0b:	call   0x1400089c0
   14000fc10:	jmp    0x140010c3e
   14000fc15:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000fc19:	mov    r15d,esi
   14000fc1c:	jge    0x14000f290
   14000fc22:	movsxd rax,r8d
   14000fc25:	lea    rcx,[rax+rax*2]
   14000fc29:	mov    rax,QWORD PTR [rdx+0x10]
   14000fc2d:	lea    rcx,[rax+rcx*8]
   14000fc31:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x83
   14000fc39:	jne    0x14000f290
   14000fc3f:	lea    eax,[r8+0x1]
   14000fc43:	lea    rdx,[rip+0x10246]        # 0x14001fe90
   14000fc4a:	mov    rcx,r14
   14000fc4d:	mov    DWORD PTR [r14+0x8],eax
   14000fc51:	call   0x140019c50
   14000fc56:	jmp    0x14000f290
   14000fc5b:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000fc5f:	mov    r15d,0x1
   14000fc65:	jge    0x14000f290
   14000fc6b:	movsxd rax,r8d
   14000fc6e:	lea    rcx,[rax+rax*2]
   14000fc72:	mov    rax,QWORD PTR [rdx+0x10]
   14000fc76:	lea    rcx,[rax+rcx*8]
   14000fc7a:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x83
   14000fc82:	jne    0x14000f290
   14000fc88:	lea    eax,[r8+0x1]
   14000fc8c:	lea    rdx,[rip+0x101fd]        # 0x14001fe90
   14000fc93:	mov    rcx,r14
   14000fc96:	mov    DWORD PTR [r14+0x8],eax
   14000fc9a:	call   0x140019c50
   14000fc9f:	jmp    0x14000f290
   14000fca4:	cmp    r8d,DWORD PTR [rdx+0x4]
   14000fca8:	mov    r15d,0x2
   14000fcae:	jge    0x14000f290
   14000fcb4:	movsxd rax,r8d
   14000fcb7:	lea    rcx,[rax+rax*2]
   14000fcbb:	mov    rax,QWORD PTR [rdx+0x10]
   14000fcbf:	lea    rcx,[rax+rcx*8]
   14000fcc3:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x83
   14000fccb:	jne    0x14000f290
   14000fcd1:	lea    eax,[r8+0x1]
   14000fcd5:	lea    rdx,[rip+0x101b4]        # 0x14001fe90
   14000fcdc:	mov    rcx,r14
   14000fcdf:	mov    DWORD PTR [r14+0x8],eax
   14000fce3:	call   0x140019c50
   14000fce8:	jmp    0x14000f290
   14000fced:	lea    rcx,[rsp+0x2a0]
   14000fcf5:	call   0x1400088c0
   14000fcfa:	lea    rdx,[rsp+0x2a0]
   14000fd02:	mov    rcx,r14
   14000fd05:	call   0x140009350
   14000fd0a:	test   al,al
   14000fd0c:	je     0x14000fd78
   14000fd0e:	xchg   ax,ax
   14000fd10:	movsxd rcx,DWORD PTR [r14+0x8]
   14000fd14:	cmp    ecx,DWORD PTR [rsp+0x340]
   14000fd1b:	jle    0x14000fd78
   14000fd1d:	mov    eax,DWORD PTR [rsp+0x344]
   14000fd24:	dec    eax
   14000fd26:	cmp    ecx,eax
   14000fd28:	jge    0x14000fd78
   14000fd2a:	cmp    ecx,DWORD PTR [rsp+0x170]
   14000fd31:	jle    0x14000fd78
   14000fd33:	mov    eax,DWORD PTR [rsp+0x174]
   14000fd3a:	dec    eax
   14000fd3c:	cmp    ecx,eax
   14000fd3e:	jge    0x14000fd78
   14000fd40:	mov    rdx,QWORD PTR [r14]
   14000fd43:	cmp    ecx,DWORD PTR [rdx+0x4]
   14000fd46:	jge    0x14000fd10
   14000fd48:	lea    eax,[rcx+0x1]
   14000fd4b:	lea    rcx,[rcx+rcx*2]
   14000fd4f:	mov    DWORD PTR [r14+0x8],eax
   14000fd53:	mov    rax,QWORD PTR [rdx+0x10]
   14000fd57:	lea    rcx,[rax+rcx*8]
   14000fd5b:	mov    eax,DWORD PTR [rcx+rdx*1+0x4]
   14000fd5f:	add    eax,0xffffff8a
   14000fd62:	cmp    eax,0x16
   14000fd65:	ja     0x14000fd10
   14000fd67:	lea    rdx,[rip+0x100ea]        # 0x14001fe58
   14000fd6e:	mov    rcx,r14
   14000fd71:	call   0x140019c50
   14000fd76:	jmp    0x14000fd10
   14000fd78:	lea    rcx,[rsp+0x2a0]
   14000fd80:	call   0x1400089c0
   14000fd85:	jmp    0x14000f290
   14000fd8a:	lea    rdx,[rsp+0xd0]
   14000fd92:	mov    rcx,r14
   14000fd95:	call   0x14000dda0
   14000fd9a:	jmp    0x14000f290
   14000fd9f:	mov    edx,r13d
   14000fda2:	mov    rcx,r14
   14000fda5:	call   0x140002960
   14000fdaa:	add    eax,0xffffffd7
   14000fdad:	cmp    eax,0x2
   14000fdb0:	ja     0x14000fdca
   14000fdb2:	lea    rdx,[rsp+0xd0]
   14000fdba:	mov    r8d,r15d
   14000fdbd:	mov    rcx,r14
   14000fdc0:	call   0x14000d240
   14000fdc5:	jmp    0x14000f290
   14000fdca:	lea    rdx,[rip+0x1005f]        # 0x14001fe30
   14000fdd1:	mov    rcx,r14
   14000fdd4:	call   0x140019c50
   14000fdd9:	jmp    0x14000f290
   14000fdde:	mov    BYTE PTR [rsp+0xf0],0x1
   14000fde6:	test   bl,bl
   14000fde8:	je     0x14000fdf9
   14000fdea:	lea    rdx,[rip+0x1000f]        # 0x14001fe00
   14000fdf1:	mov    rcx,r14
   14000fdf4:	call   0x140019c50
   14000fdf9:	lea    rdx,[rip+0xfff8]        # 0x14001fdf8
   14000fe00:	lea    rcx,[rsp+0xd0]
   14000fe08:	call   QWORD PTR [rip+0xf7e2]        # 0x14001f5f0
   14000fe0e:	test   eax,eax
   14000fe10:	je     0x14000f290
   14000fe16:	lea    rdx,[rip+0xffd3]        # 0x14001fdf0
   14000fe1d:	lea    rcx,[rsp+0xd0]
   14000fe25:	call   QWORD PTR [rip+0xf7c5]        # 0x14001f5f0
   14000fe2b:	test   eax,eax
   14000fe2d:	je     0x14000f290
   14000fe33:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000fe3b:	mov    eax,DWORD PTR [rcx+0x8]
   14000fe3e:	cmp    DWORD PTR [rcx+0xc],eax
   14000fe41:	jne    0x14000f290
   14000fe47:	lea    rdx,[rip+0xff62]        # 0x14001fdb0
   14000fe4e:	mov    rcx,r14
   14000fe51:	call   0x140019c50
   14000fe56:	jmp    0x14000f290
   14000fe5b:	mov    BYTE PTR [rsp+0xf1],0x1
   14000fe63:	test   bl,bl
   14000fe65:	je     0x14000f290
   14000fe6b:	lea    rdx,[rip+0xff0e]        # 0x14001fd80
   14000fe72:	mov    rcx,r14
   14000fe75:	call   0x140019c50
   14000fe7a:	jmp    0x14000f290
   14000fe7f:	lea    rdx,[rsp+0xd0]
   14000fe87:	mov    rcx,r14
   14000fe8a:	call   0x140006ab0
   14000fe8f:	jmp    0x14000f290
   14000fe94:	lea    rdx,[rsp+0xd0]
   14000fe9c:	mov    rcx,r14
   14000fe9f:	call   0x140008c00
   14000fea4:	jmp    0x14000f290
   14000fea9:	lea    rdx,[rsp+0xd0]
   14000feb1:	xor    r8d,r8d
   14000feb4:	mov    rcx,r14
   14000feb7:	call   0x140007000
   14000febc:	jmp    0x14000f290
   14000fec1:	lea    rdx,[rsp+0xd0]
   14000fec9:	mov    r8b,0x1
   14000fecc:	mov    rcx,r14
   14000fecf:	call   0x140007000
   14000fed4:	jmp    0x14000f290
   14000fed9:	lea    rdx,[rsp+0xd0]
   14000fee1:	mov    rcx,r14
   14000fee4:	call   0x1400074b0
   14000fee9:	jmp    0x14000f290
   14000feee:	lea    rdx,[rsp+0xd0]
   14000fef6:	mov    rcx,r14
   14000fef9:	call   0x1400078f0
   14000fefe:	jmp    0x14000f290
   14000ff03:	lea    rdx,[rsp+0xd0]
   14000ff0b:	mov    rcx,r14
   14000ff0e:	call   0x14000bc40
   14000ff13:	jmp    0x14000f290
   14000ff18:	lea    rdx,[rsp+0xd0]
   14000ff20:	mov    r8d,r15d
   14000ff23:	mov    rcx,r14
   14000ff26:	call   0x14000e940
   14000ff2b:	jmp    0x14000f290
   14000ff30:	lea    rdx,[rsp+0xd0]
   14000ff38:	mov    rcx,r14
   14000ff3b:	call   0x140006c60
   14000ff40:	jmp    0x14000f290
   14000ff45:	lea    rcx,[rsp+0xb0]
   14000ff4d:	call   QWORD PTR [rip+0xf66d]        # 0x14001f5c0
   14000ff53:	mov    r11,QWORD PTR [rip+0xf5ee]        # 0x14001f548
   14000ff5a:	lea    rdx,[rsp+0xb0]
   14000ff62:	mov    rcx,r14
   14000ff65:	mov    QWORD PTR [rsp+0xb8],r11
   14000ff6d:	mov    BYTE PTR [rsp+0xc0],0x0
   14000ff75:	call   0x140006750
   14000ff7a:	test   al,al
   14000ff7c:	je     0x140010058
   14000ff82:	mov    rax,QWORD PTR [rsp+0x158]
   14000ff8a:	mov    ecx,DWORD PTR [rax]
   14000ff8c:	cmp    ecx,0x1
   14000ff8f:	je     0x14000fffe
   14000ff91:	test   ecx,ecx
   14000ff93:	je     0x14000fffe
   14000ff95:	lea    rcx,[rsp+0x158]
   14000ff9d:	mov    edx,0x7fffffff
   14000ffa2:	mov    r8d,0x1
   14000ffa8:	call   0x140008670
   14000ffad:	mov    ecx,0x18
   14000ffb2:	mov    rdi,rax
   14000ffb5:	call   0x14001e1c6
   14000ffba:	mov    rbx,rax
   14000ffbd:	test   rax,rax
   14000ffc0:	je     0x14000fff6
   14000ffc2:	lea    rdx,[rsp+0xb0]
   14000ffca:	mov    rcx,rax
   14000ffcd:	call   QWORD PTR [rip+0xf605]        # 0x14001f5d8
   14000ffd3:	lea    rcx,[rbx+0x8]
   14000ffd7:	lea    rdx,[rsp+0xb8]
   14000ffdf:	call   0x140003030
   14000ffe4:	movzx  r11d,BYTE PTR [rsp+0xc0]
   14000ffed:	mov    BYTE PTR [rbx+0x10],r11b
   14000fff1:	mov    QWORD PTR [rdi],rbx
   14000fff4:	jmp    0x140010058
   14000fff6:	mov    rbx,rsi
   14000fff9:	mov    QWORD PTR [rdi],rbx
   14000fffc:	jmp    0x140010058
   14000fffe:	lea    rcx,[rsp+0x158]
   140010006:	call   QWORD PTR [rip+0xf194]        # 0x14001f1a0
   14001000c:	mov    ecx,0x18
   140010011:	mov    rdi,rax
   140010014:	call   0x14001e1c6
   140010019:	mov    rbx,rax
   14001001c:	test   rax,rax
   14001001f:	je     0x140010052
   140010021:	lea    rdx,[rsp+0xb0]
   140010029:	mov    rcx,rax
   14001002c:	call   QWORD PTR [rip+0xf5a6]        # 0x14001f5d8
   140010032:	lea    rcx,[rbx+0x8]
   140010036:	lea    rdx,[rsp+0xb8]
   14001003e:	call   0x140003030
   140010043:	movzx  r11d,BYTE PTR [rsp+0xc0]
   14001004c:	mov    BYTE PTR [rbx+0x10],r11b
   140010050:	jmp    0x140010055
   140010052:	mov    rbx,rsi
   140010055:	mov    QWORD PTR [rdi],rbx
   140010058:	lea    rcx,[rsp+0xb8]
   140010060:	call   0x140002d20
   140010065:	lea    rcx,[rsp+0xb0]
   14001006d:	call   QWORD PTR [rip+0xf545]        # 0x14001f5b8
   140010073:	mov    bl,BYTE PTR [rsp+0x3a0]
   14001007a:	jmp    0x14000f290
   14001007f:	lea    rcx,[rsp+0x20]
   140010084:	call   QWORD PTR [rip+0xf536]        # 0x14001f5c0
   14001008a:	lea    rcx,[rsp+0x28]
   14001008f:	call   QWORD PTR [rip+0xf52b]        # 0x14001f5c0
   140010095:	and    DWORD PTR [rsp+0x30],0xfffffffc
   14001009a:	lea    rcx,[rsp+0x40]
   14001009f:	mov    DWORD PTR [rsp+0x34],esi
   1400100a3:	mov    DWORD PTR [rsp+0x38],esi
   1400100a7:	call   QWORD PTR [rip+0xf513]        # 0x14001f5c0
   1400100ad:	lea    rcx,[rsp+0x48]
   1400100b2:	call   QWORD PTR [rip+0xf508]        # 0x14001f5c0
   1400100b8:	lea    rcx,[rsp+0x50]
   1400100bd:	call   QWORD PTR [rip+0xf4fd]        # 0x14001f5c0
   1400100c3:	mov    rax,QWORD PTR [rip+0xf47e]        # 0x14001f548
   1400100ca:	lea    rcx,[rsp+0x78]
   1400100cf:	mov    QWORD PTR [rsp+0x60],rax
   1400100d4:	mov    BYTE PTR [rsp+0x58],0x0
   1400100d9:	mov    DWORD PTR [rsp+0x68],esi
   1400100dd:	mov    BYTE PTR [rsp+0x6c],0x0
   1400100e2:	mov    BYTE PTR [rsp+0x6d],0x0
   1400100e7:	mov    BYTE PTR [rsp+0x6e],0x0
   1400100ec:	mov    BYTE PTR [rsp+0x6f],0x0
   1400100f1:	mov    BYTE PTR [rsp+0x70],0x0
   1400100f6:	call   QWORD PTR [rip+0xf4c4]        # 0x14001f5c0
   1400100fc:	mov    ebx,DWORD PTR [r14+0x8]
   140010100:	lea    r8,[rsp+0x20]
   140010105:	lea    rdx,[rsp+0xd0]
   14001010d:	lea    eax,[rbx-0x1]
   140010110:	mov    rcx,r14
   140010113:	mov    BYTE PTR [rsp+0x80],0x0
   14001011b:	mov    BYTE PTR [rsp+0x81],0x0
   140010123:	mov    BYTE PTR [rsp+0x82],0x0
   14001012b:	mov    BYTE PTR [rsp+0x83],0x0
   140010133:	mov    DWORD PTR [r14+0x8],eax
   140010137:	mov    BYTE PTR [rsp+0x84],0x0
   14001013f:	mov    BYTE PTR [rsp+0x85],0x0
   140010147:	mov    BYTE PTR [rsp+0x86],0x0
   14001014f:	mov    BYTE PTR [rsp+0x87],0x0
   140010157:	mov    BYTE PTR [rsp+0x88],0x0
   14001015f:	mov    DWORD PTR [rsp+0x8c],esi
   140010166:	mov    DWORD PTR [rsp+0x68],r15d
   14001016b:	call   0x14000b470
   140010170:	test   al,al
   140010172:	je     0x140010ab1
   140010178:	cmp    BYTE PTR [rsp+0x86],0x0
   140010180:	je     0x140010406
   140010186:	cmp    r15d,0x2
   14001018a:	jne    0x140010ab5
   140010190:	cmp    BYTE PTR [rsp+0x81],0x0
   140010198:	je     0x140010ab5
   14001019e:	mov    rax,QWORD PTR [rsp+0x110]
   1400101a6:	mov    ecx,DWORD PTR [rax]
   1400101a8:	cmp    ecx,0x1
   1400101ab:	je     0x1400101f2
   1400101ad:	test   ecx,ecx
   1400101af:	je     0x1400101f2
   1400101b1:	lea    r8d,[r15-0x1]
   1400101b5:	lea    rcx,[rsp+0x110]
   1400101bd:	mov    edx,0x7fffffff
   1400101c2:	call   0x140008530
   1400101c7:	lea    ecx,[r15+0x6e]
   1400101cb:	mov    rbx,rax
   1400101ce:	call   0x14001e1c6
   1400101d3:	test   rax,rax
   1400101d6:	je     0x1400101ea
   1400101d8:	lea    rdx,[rsp+0x20]
   1400101dd:	mov    rcx,rax
   1400101e0:	call   0x140003ce0
   1400101e5:	mov    QWORD PTR [rbx],rax
   1400101e8:	jmp    0x140010227
   1400101ea:	mov    rax,rsi
   1400101ed:	mov    QWORD PTR [rbx],rax
   1400101f0:	jmp    0x140010227
   1400101f2:	lea    rcx,[rsp+0x110]
   1400101fa:	call   QWORD PTR [rip+0xefa0]        # 0x14001f1a0
   140010200:	mov    ecx,0x70
   140010205:	mov    rbx,rax
   140010208:	call   0x14001e1c6
   14001020d:	test   rax,rax
   140010210:	je     0x140010221
   140010212:	lea    rdx,[rsp+0x20]
   140010217:	mov    rcx,rax
   14001021a:	call   0x140003ce0
   14001021f:	jmp    0x140010224
   140010221:	mov    rax,rsi
   140010224:	mov    QWORD PTR [rbx],rax
   140010227:	mov    rdx,QWORD PTR [rsp+0x60]
   14001022c:	mov    eax,DWORD PTR [rdx+0xc]
   14001022f:	sub    eax,DWORD PTR [rdx+0x8]
   140010232:	test   eax,eax
   140010234:	jle    0x140010ab5
   14001023a:	nop    WORD PTR [rax+rax*1+0x0]
   140010240:	mov    eax,DWORD PTR [rdx]
   140010242:	cmp    eax,0x1
   140010245:	je     0x14001025d
   140010247:	test   eax,eax
   140010249:	je     0x14001025d
   14001024b:	mov    edx,DWORD PTR [rdx+0x4]
   14001024e:	lea    rcx,[rsp+0x60]
   140010253:	call   0x140003620
   140010258:	mov    rdx,QWORD PTR [rsp+0x60]
   14001025d:	movsxd rax,DWORD PTR [rdx+0xc]
   140010261:	mov    rcx,QWORD PTR [rdx+rax*8+0x8]
   140010266:	cmp    BYTE PTR [rcx+0x40],0x0
   14001026a:	je     0x140010ab5
   140010270:	mov    BYTE PTR [rsp+0x70],0x1
   140010275:	mov    eax,DWORD PTR [rdx]
   140010277:	cmp    eax,0x1
   14001027a:	je     0x140010292
   14001027c:	test   eax,eax
   14001027e:	je     0x140010292
   140010280:	mov    edx,DWORD PTR [rdx+0x4]
   140010283:	lea    rcx,[rsp+0x60]
   140010288:	call   0x140003620
   14001028d:	mov    rdx,QWORD PTR [rsp+0x60]
   140010292:	movsxd rax,DWORD PTR [rdx+0xc]
   140010296:	mov    ecx,DWORD PTR [rdx]
   140010298:	lea    rbx,[rdx+rax*8+0x8]
   14001029d:	mov    QWORD PTR [rsp+0x198],rbx
   1400102a5:	cmp    ecx,0x1
   1400102a8:	je     0x1400102f7
   1400102aa:	test   ecx,ecx
   1400102ac:	je     0x1400102f7
   1400102ae:	movsxd rax,DWORD PTR [rdx+0x8]
   1400102b2:	lea    rax,[rax*8+0x10]
   1400102ba:	sub    rbx,rax
   1400102bd:	sub    rbx,rdx
   1400102c0:	sar    rbx,0x3
   1400102c4:	cmp    ecx,0x1
   1400102c7:	je     0x1400102df
   1400102c9:	test   ecx,ecx
   1400102cb:	je     0x1400102df
   1400102cd:	mov    edx,DWORD PTR [rdx+0x4]
   1400102d0:	lea    rcx,[rsp+0x60]
   1400102d5:	call   0x140003620
   1400102da:	mov    rdx,QWORD PTR [rsp+0x60]
   1400102df:	movsxd rax,DWORD PTR [rdx+0x8]
   1400102e3:	movsxd rcx,ebx
   1400102e6:	lea    rax,[rdx+rax*8+0x10]
   1400102eb:	lea    rbx,[rax+rcx*8]
   1400102ef:	mov    QWORD PTR [rsp+0x198],rbx
   1400102f7:	mov    rdi,QWORD PTR [rbx]
   1400102fa:	test   rdi,rdi
   1400102fd:	je     0x140010342
   1400102ff:	lea    rcx,[rdi+0x38]
   140010303:	call   QWORD PTR [rip+0xf2af]        # 0x14001f5b8
   140010309:	lea    rcx,[rdi+0x30]
   14001030d:	call   QWORD PTR [rip+0xf2a5]        # 0x14001f5b8
   140010313:	lea    rcx,[rdi+0x28]
   140010317:	call   QWORD PTR [rip+0xf29b]        # 0x14001f5b8
   14001031d:	lea    rcx,[rdi+0x20]
   140010321:	call   QWORD PTR [rip+0xf291]        # 0x14001f5b8
   140010327:	lea    rcx,[rdi+0x8]
   14001032b:	call   QWORD PTR [rip+0xf287]        # 0x14001f5b8
   140010331:	mov    rcx,rdi
   140010334:	call   QWORD PTR [rip+0xf27e]        # 0x14001f5b8
   14001033a:	mov    rcx,rdi
   14001033d:	call   0x14001e1c0
   140010342:	lea    rcx,[rsp+0x60]
   140010347:	mov    rdx,rbx
   14001034a:	call   QWORD PTR [rip+0xeeb0]        # 0x14001f200
   140010350:	mov    r11,QWORD PTR [rsp+0x110]
   140010358:	mov    eax,DWORD PTR [r11]
   14001035b:	cmp    eax,0x1
   14001035e:	je     0x1400103a8
   140010360:	test   eax,eax
   140010362:	je     0x1400103a8
   140010364:	lea    rcx,[rsp+0x110]
   14001036c:	mov    edx,0x7fffffff
   140010371:	mov    r8d,0x1
   140010377:	call   0x140008530
   14001037c:	mov    ecx,0x70
   140010381:	mov    rbx,rax
   140010384:	call   0x14001e1c6
   140010389:	test   rax,rax
   14001038c:	je     0x1400103a0
   14001038e:	lea    rdx,[rsp+0x20]
   140010393:	mov    rcx,rax
   140010396:	call   0x140003ce0
   14001039b:	mov    QWORD PTR [rbx],rax
   14001039e:	jmp    0x1400103dd
   1400103a0:	mov    rax,rsi
   1400103a3:	mov    QWORD PTR [rbx],rax
   1400103a6:	jmp    0x1400103dd
   1400103a8:	lea    rcx,[rsp+0x110]
   1400103b0:	call   QWORD PTR [rip+0xedea]        # 0x14001f1a0
   1400103b6:	mov    ecx,0x70
   1400103bb:	mov    rbx,rax
   1400103be:	call   0x14001e1c6
   1400103c3:	test   rax,rax
   1400103c6:	je     0x1400103d7
   1400103c8:	lea    rdx,[rsp+0x20]
   1400103cd:	mov    rcx,rax
   1400103d0:	call   0x140003ce0
   1400103d5:	jmp    0x1400103da
   1400103d7:	mov    rax,rsi
   1400103da:	mov    QWORD PTR [rbx],rax
   1400103dd:	mov    rdx,QWORD PTR [rsp+0x60]
   1400103e2:	mov    eax,DWORD PTR [rdx+0xc]
   1400103e5:	sub    eax,DWORD PTR [rdx+0x8]
   1400103e8:	test   eax,eax
   1400103ea:	jg     0x140010240
   1400103f0:	lea    rcx,[rsp+0x20]
   1400103f5:	call   0x140004210
   1400103fa:	mov    bl,BYTE PTR [rsp+0x3a0]
   140010401:	jmp    0x14000f290
   140010406:	cmp    BYTE PTR [rsp+0x87],0x0
   14001040e:	jne    0x140010ab5
   140010414:	cmp    r15d,0x2
   140010418:	jne    0x1400104a7
   14001041e:	mov    rax,QWORD PTR [rsp+0x130]
   140010426:	mov    ecx,DWORD PTR [rax]
   140010428:	cmp    ecx,0x1
   14001042b:	je     0x140010472
   14001042d:	test   ecx,ecx
   14001042f:	je     0x140010472
   140010431:	lea    r8d,[r15-0x1]
   140010435:	lea    rcx,[rsp+0x130]
   14001043d:	mov    edx,0x7fffffff
   140010442:	call   0x140008530
   140010447:	lea    ecx,[r15+0x6e]
   14001044b:	mov    rbx,rax
   14001044e:	call   0x14001e1c6
   140010453:	test   rax,rax
   140010456:	je     0x14001046a
   140010458:	lea    rdx,[rsp+0x20]
   14001045d:	mov    rcx,rax
   140010460:	call   0x140003ce0
   140010465:	mov    QWORD PTR [rbx],rax
   140010468:	jmp    0x1400104a7
   14001046a:	mov    rax,rsi
   14001046d:	mov    QWORD PTR [rbx],rax
   140010470:	jmp    0x1400104a7
   140010472:	lea    rcx,[rsp+0x130]
   14001047a:	call   QWORD PTR [rip+0xed20]        # 0x14001f1a0
   140010480:	mov    ecx,0x70
   140010485:	mov    rbx,rax
   140010488:	call   0x14001e1c6
   14001048d:	test   rax,rax
   140010490:	je     0x1400104a1
   140010492:	lea    rdx,[rsp+0x20]
   140010497:	mov    rcx,rax
   14001049a:	call   0x140003ce0
   14001049f:	jmp    0x1400104a4
   1400104a1:	mov    rax,rsi
   1400104a4:	mov    QWORD PTR [rbx],rax
   1400104a7:	cmp    BYTE PTR [rsp+0x83],0x0
   1400104af:	je     0x1400106a8
   1400104b5:	mov    rax,QWORD PTR [rsp+0x120]
   1400104bd:	mov    ecx,DWORD PTR [rax]
   1400104bf:	cmp    ecx,0x1
   1400104c2:	je     0x14001050c
   1400104c4:	test   ecx,ecx
   1400104c6:	je     0x14001050c
   1400104c8:	lea    rcx,[rsp+0x120]
   1400104d0:	mov    edx,0x7fffffff
   1400104d5:	mov    r8d,0x1
   1400104db:	call   0x140008530
   1400104e0:	mov    ecx,0x70
   1400104e5:	mov    rbx,rax
   1400104e8:	call   0x14001e1c6
   1400104ed:	test   rax,rax
   1400104f0:	je     0x140010504
   1400104f2:	lea    rdx,[rsp+0x20]
   1400104f7:	mov    rcx,rax
   1400104fa:	call   0x140003ce0
   1400104ff:	mov    QWORD PTR [rbx],rax
   140010502:	jmp    0x140010541
   140010504:	mov    rax,rsi
   140010507:	mov    QWORD PTR [rbx],rax
   14001050a:	jmp    0x140010541
   14001050c:	lea    rcx,[rsp+0x120]
   140010514:	call   QWORD PTR [rip+0xec86]        # 0x14001f1a0
   14001051a:	mov    ecx,0x70
   14001051f:	mov    rbx,rax
   140010522:	call   0x14001e1c6
   140010527:	test   rax,rax
   14001052a:	je     0x14001053b
   14001052c:	lea    rdx,[rsp+0x20]
   140010531:	mov    rcx,rax
   140010534:	call   0x140003ce0
   140010539:	jmp    0x14001053e
   14001053b:	mov    rax,rsi
   14001053e:	mov    QWORD PTR [rbx],rax
   140010541:	lea    rcx,[rsp+0x60]
   140010546:	call   QWORD PTR [rip+0xed7c]        # 0x14001f2c8
   14001054c:	test   eax,eax
   14001054e:	jle    0x14001067d
   140010554:	mov    rcx,QWORD PTR [rsp+0x60]
   140010559:	mov    eax,DWORD PTR [rcx]
   14001055b:	cmp    eax,0x1
   14001055e:	je     0x140010571
   140010560:	test   eax,eax
   140010562:	je     0x140010571
   140010564:	mov    edx,DWORD PTR [rcx+0x4]
   140010567:	lea    rcx,[rsp+0x60]
   14001056c:	call   0x140003620
   140010571:	lea    rcx,[rsp+0x60]
   140010576:	call   QWORD PTR [rip+0xed5c]        # 0x14001f2d8
   14001057c:	mov    rcx,QWORD PTR [rax-0x8]
   140010580:	cmp    BYTE PTR [rcx+0x40],0x0
   140010584:	je     0x14001067d
   14001058a:	mov    rcx,QWORD PTR [rsp+0x60]
   14001058f:	mov    BYTE PTR [rsp+0x70],0x1
   140010594:	mov    eax,DWORD PTR [rcx]
   140010596:	cmp    eax,0x1
   140010599:	je     0x1400105ac
   14001059b:	test   eax,eax
   14001059d:	je     0x1400105ac
   14001059f:	mov    edx,DWORD PTR [rcx+0x4]
   1400105a2:	lea    rcx,[rsp+0x60]
   1400105a7:	call   0x140003620
   1400105ac:	lea    rcx,[rsp+0x60]
   1400105b1:	call   QWORD PTR [rip+0xed21]        # 0x14001f2d8
   1400105b7:	lea    r8,[rsp+0x190]
   1400105bf:	lea    rdx,[rsp+0x270]
   1400105c7:	sub    rax,0x8
   1400105cb:	lea    rcx,[rsp+0x60]
   1400105d0:	mov    QWORD PTR [rsp+0x190],rax
   1400105d8:	call   0x1400081f0
   1400105dd:	mov    r11,QWORD PTR [rsp+0x120]
   1400105e5:	mov    eax,DWORD PTR [r11]
   1400105e8:	cmp    eax,0x1
   1400105eb:	je     0x140010635
   1400105ed:	test   eax,eax
   1400105ef:	je     0x140010635
   1400105f1:	lea    rcx,[rsp+0x120]
   1400105f9:	mov    edx,0x7fffffff
   1400105fe:	mov    r8d,0x1
   140010604:	call   0x140008530
   140010609:	mov    ecx,0x70
   14001060e:	mov    rbx,rax
   140010611:	call   0x14001e1c6
   140010616:	test   rax,rax
   140010619:	je     0x14001062d
   14001061b:	lea    rdx,[rsp+0x20]
   140010620:	mov    rcx,rax
   140010623:	call   0x140003ce0
   140010628:	mov    QWORD PTR [rbx],rax
   14001062b:	jmp    0x14001066a
   14001062d:	mov    rax,rsi
   140010630:	mov    QWORD PTR [rbx],rax
   140010633:	jmp    0x14001066a
   140010635:	lea    rcx,[rsp+0x120]
   14001063d:	call   QWORD PTR [rip+0xeb5d]        # 0x14001f1a0
   140010643:	mov    ecx,0x70
   140010648:	mov    rbx,rax
   14001064b:	call   0x14001e1c6
   140010650:	test   rax,rax
   140010653:	je     0x140010664
   140010655:	lea    rdx,[rsp+0x20]
   14001065a:	mov    rcx,rax
   14001065d:	call   0x140003ce0
   140010662:	jmp    0x140010667
   140010664:	mov    rax,rsi
   140010667:	mov    QWORD PTR [rbx],rax
   14001066a:	lea    rcx,[rsp+0x60]
   14001066f:	call   QWORD PTR [rip+0xec53]        # 0x14001f2c8
   140010675:	test   eax,eax
   140010677:	jg     0x140010554
   14001067d:	cmp    DWORD PTR [rsp+0x8c],0x0
   140010685:	jle    0x140010ab5
   14001068b:	inc    DWORD PTR [rsp+0x168]
   140010692:	lea    rcx,[rsp+0x20]
   140010697:	call   0x140004210
   14001069c:	mov    bl,BYTE PTR [rsp+0x3a0]
   1400106a3:	jmp    0x14000f290
   1400106a8:	cmp    BYTE PTR [rsp+0x84],0x0
   1400106b0:	je     0x1400108b4
   1400106b6:	mov    rax,QWORD PTR [rsp+0x118]
   1400106be:	mov    ecx,DWORD PTR [rax]
   1400106c0:	cmp    ecx,0x1
   1400106c3:	je     0x14001070d
   1400106c5:	test   ecx,ecx
   1400106c7:	je     0x14001070d
   1400106c9:	lea    rcx,[rsp+0x118]
   1400106d1:	mov    edx,0x7fffffff
   1400106d6:	mov    r8d,0x1
   1400106dc:	call   0x140008530
   1400106e1:	mov    ecx,0x70
   1400106e6:	mov    rbx,rax
   1400106e9:	call   0x14001e1c6
   1400106ee:	test   rax,rax
   1400106f1:	je     0x140010705
   1400106f3:	lea    rdx,[rsp+0x20]
   1400106f8:	mov    rcx,rax
   1400106fb:	call   0x140003ce0
   140010700:	mov    QWORD PTR [rbx],rax
   140010703:	jmp    0x140010742
   140010705:	mov    rax,rsi
   140010708:	mov    QWORD PTR [rbx],rax
   14001070b:	jmp    0x140010742
   14001070d:	lea    rcx,[rsp+0x118]
   140010715:	call   QWORD PTR [rip+0xea85]        # 0x14001f1a0
   14001071b:	mov    ecx,0x70
   140010720:	mov    rbx,rax
   140010723:	call   0x14001e1c6
   140010728:	test   rax,rax
   14001072b:	je     0x14001073c
   14001072d:	lea    rdx,[rsp+0x20]
   140010732:	mov    rcx,rax
   140010735:	call   0x140003ce0
   14001073a:	jmp    0x14001073f
   14001073c:	mov    rax,rsi
   14001073f:	mov    QWORD PTR [rbx],rax
   140010742:	lea    rcx,[rsp+0x60]
   140010747:	call   QWORD PTR [rip+0xeb7b]        # 0x14001f2c8
   14001074d:	test   eax,eax
   14001074f:	jle    0x140010889
   140010755:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140010760:	mov    rcx,QWORD PTR [rsp+0x60]
   140010765:	mov    eax,DWORD PTR [rcx]
   140010767:	cmp    eax,0x1
   14001076a:	je     0x14001077d
   14001076c:	test   eax,eax
   14001076e:	je     0x14001077d
   140010770:	mov    edx,DWORD PTR [rcx+0x4]
   140010773:	lea    rcx,[rsp+0x60]
   140010778:	call   0x140003620
   14001077d:	lea    rcx,[rsp+0x60]
   140010782:	call   QWORD PTR [rip+0xeb50]        # 0x14001f2d8
   140010788:	mov    rcx,QWORD PTR [rax-0x8]
   14001078c:	cmp    BYTE PTR [rcx+0x40],0x0
   140010790:	je     0x140010889
   140010796:	mov    rcx,QWORD PTR [rsp+0x60]
   14001079b:	mov    BYTE PTR [rsp+0x70],0x1
   1400107a0:	mov    eax,DWORD PTR [rcx]
   1400107a2:	cmp    eax,0x1
   1400107a5:	je     0x1400107b8
   1400107a7:	test   eax,eax
   1400107a9:	je     0x1400107b8
   1400107ab:	mov    edx,DWORD PTR [rcx+0x4]
   1400107ae:	lea    rcx,[rsp+0x60]
   1400107b3:	call   0x140003620
   1400107b8:	lea    rcx,[rsp+0x60]
   1400107bd:	call   QWORD PTR [rip+0xeb15]        # 0x14001f2d8
   1400107c3:	lea    r8,[rsp+0x1b0]
   1400107cb:	lea    rdx,[rsp+0x288]
   1400107d3:	sub    rax,0x8
   1400107d7:	lea    rcx,[rsp+0x60]
   1400107dc:	mov    QWORD PTR [rsp+0x1b0],rax
   1400107e4:	call   0x1400081f0
   1400107e9:	mov    r11,QWORD PTR [rsp+0x118]
   1400107f1:	mov    eax,DWORD PTR [r11]
   1400107f4:	cmp    eax,0x1
   1400107f7:	je     0x140010841
   1400107f9:	test   eax,eax
   1400107fb:	je     0x140010841
   1400107fd:	lea    rcx,[rsp+0x118]
   140010805:	mov    edx,0x7fffffff
   14001080a:	mov    r8d,0x1
   140010810:	call   0x140008530
   140010815:	mov    ecx,0x70
   14001081a:	mov    rbx,rax
   14001081d:	call   0x14001e1c6
   140010822:	test   rax,rax
   140010825:	je     0x140010839
   140010827:	lea    rdx,[rsp+0x20]
   14001082c:	mov    rcx,rax
   14001082f:	call   0x140003ce0
   140010834:	mov    QWORD PTR [rbx],rax
   140010837:	jmp    0x140010876
   140010839:	mov    rax,rsi
   14001083c:	mov    QWORD PTR [rbx],rax
   14001083f:	jmp    0x140010876
   140010841:	lea    rcx,[rsp+0x118]
   140010849:	call   QWORD PTR [rip+0xe951]        # 0x14001f1a0
   14001084f:	mov    ecx,0x70
   140010854:	mov    rbx,rax
   140010857:	call   0x14001e1c6
   14001085c:	test   rax,rax
   14001085f:	je     0x140010870
   140010861:	lea    rdx,[rsp+0x20]
   140010866:	mov    rcx,rax
   140010869:	call   0x140003ce0
   14001086e:	jmp    0x140010873
   140010870:	mov    rax,rsi
   140010873:	mov    QWORD PTR [rbx],rax
   140010876:	lea    rcx,[rsp+0x60]
   14001087b:	call   QWORD PTR [rip+0xea47]        # 0x14001f2c8
   140010881:	test   eax,eax
   140010883:	jg     0x140010760
   140010889:	cmp    DWORD PTR [rsp+0x8c],0x0
   140010891:	jle    0x140010ab5
   140010897:	inc    DWORD PTR [rsp+0x168]
   14001089e:	lea    rcx,[rsp+0x20]
   1400108a3:	call   0x140004210
   1400108a8:	mov    bl,BYTE PTR [rsp+0x3a0]
   1400108af:	jmp    0x14000f290
   1400108b4:	cmp    BYTE PTR [rsp+0x81],0x0
   1400108bc:	je     0x140010ab5
   1400108c2:	mov    rax,QWORD PTR [rsp+0x128]
   1400108ca:	mov    ecx,DWORD PTR [rax]
   1400108cc:	cmp    ecx,0x1
   1400108cf:	je     0x140010919
   1400108d1:	test   ecx,ecx
   1400108d3:	je     0x140010919
   1400108d5:	lea    rcx,[rsp+0x128]
   1400108dd:	mov    edx,0x7fffffff
   1400108e2:	mov    r8d,0x1
   1400108e8:	call   0x140008530
   1400108ed:	mov    ecx,0x70
   1400108f2:	mov    rbx,rax
   1400108f5:	call   0x14001e1c6
   1400108fa:	test   rax,rax
   1400108fd:	je     0x140010911
   1400108ff:	lea    rdx,[rsp+0x20]
   140010904:	mov    rcx,rax
   140010907:	call   0x140003ce0
   14001090c:	mov    QWORD PTR [rbx],rax
   14001090f:	jmp    0x14001094e
   140010911:	mov    rax,rsi
   140010914:	mov    QWORD PTR [rbx],rax
   140010917:	jmp    0x14001094e
   140010919:	lea    rcx,[rsp+0x128]
   140010921:	call   QWORD PTR [rip+0xe879]        # 0x14001f1a0
   140010927:	mov    ecx,0x70
   14001092c:	mov    rbx,rax
   14001092f:	call   0x14001e1c6
   140010934:	test   rax,rax
   140010937:	je     0x140010948
   140010939:	lea    rdx,[rsp+0x20]
   14001093e:	mov    rcx,rax
   140010941:	call   0x140003ce0
   140010946:	jmp    0x14001094b
   140010948:	mov    rax,rsi
   14001094b:	mov    QWORD PTR [rbx],rax
   14001094e:	lea    rcx,[rsp+0x60]
   140010953:	call   QWORD PTR [rip+0xe96f]        # 0x14001f2c8
   140010959:	test   eax,eax
   14001095b:	jle    0x140010a8a
   140010961:	mov    rcx,QWORD PTR [rsp+0x60]
   140010966:	mov    eax,DWORD PTR [rcx]
   140010968:	cmp    eax,0x1
   14001096b:	je     0x14001097e
   14001096d:	test   eax,eax
   14001096f:	je     0x14001097e
   140010971:	mov    edx,DWORD PTR [rcx+0x4]
   140010974:	lea    rcx,[rsp+0x60]
   140010979:	call   0x140003620
   14001097e:	lea    rcx,[rsp+0x60]
   140010983:	call   QWORD PTR [rip+0xe94f]        # 0x14001f2d8
   140010989:	mov    rcx,QWORD PTR [rax-0x8]
   14001098d:	cmp    BYTE PTR [rcx+0x40],0x0
   140010991:	je     0x140010a8a
   140010997:	mov    rcx,QWORD PTR [rsp+0x60]
   14001099c:	mov    BYTE PTR [rsp+0x70],0x1
   1400109a1:	mov    eax,DWORD PTR [rcx]
   1400109a3:	cmp    eax,0x1
   1400109a6:	je     0x1400109b9
   1400109a8:	test   eax,eax
   1400109aa:	je     0x1400109b9
   1400109ac:	mov    edx,DWORD PTR [rcx+0x4]
   1400109af:	lea    rcx,[rsp+0x60]
   1400109b4:	call   0x140003620
   1400109b9:	lea    rcx,[rsp+0x60]
   1400109be:	call   QWORD PTR [rip+0xe914]        # 0x14001f2d8
   1400109c4:	lea    r8,[rsp+0x1a8]
   1400109cc:	lea    rdx,[rsp+0x280]
   1400109d4:	sub    rax,0x8
   1400109d8:	lea    rcx,[rsp+0x60]
   1400109dd:	mov    QWORD PTR [rsp+0x1a8],rax
   1400109e5:	call   0x1400081f0
   1400109ea:	mov    r11,QWORD PTR [rsp+0x128]
   1400109f2:	mov    eax,DWORD PTR [r11]
   1400109f5:	cmp    eax,0x1
   1400109f8:	je     0x140010a42
   1400109fa:	test   eax,eax
   1400109fc:	je     0x140010a42
   1400109fe:	lea    rcx,[rsp+0x128]
   140010a06:	mov    edx,0x7fffffff
   140010a0b:	mov    r8d,0x1
   140010a11:	call   0x140008530
   140010a16:	mov    ecx,0x70
   140010a1b:	mov    rbx,rax
   140010a1e:	call   0x14001e1c6
   140010a23:	test   rax,rax
   140010a26:	je     0x140010a3a
   140010a28:	lea    rdx,[rsp+0x20]
   140010a2d:	mov    rcx,rax
   140010a30:	call   0x140003ce0
   140010a35:	mov    QWORD PTR [rbx],rax
   140010a38:	jmp    0x140010a77
   140010a3a:	mov    rax,rsi
   140010a3d:	mov    QWORD PTR [rbx],rax
   140010a40:	jmp    0x140010a77
   140010a42:	lea    rcx,[rsp+0x128]
   140010a4a:	call   QWORD PTR [rip+0xe750]        # 0x14001f1a0
   140010a50:	mov    ecx,0x70
   140010a55:	mov    rbx,rax
   140010a58:	call   0x14001e1c6
   140010a5d:	test   rax,rax
   140010a60:	je     0x140010a71
   140010a62:	lea    rdx,[rsp+0x20]
   140010a67:	mov    rcx,rax
   140010a6a:	call   0x140003ce0
   140010a6f:	jmp    0x140010a74
   140010a71:	mov    rax,rsi
   140010a74:	mov    QWORD PTR [rbx],rax
   140010a77:	lea    rcx,[rsp+0x60]
   140010a7c:	call   QWORD PTR [rip+0xe846]        # 0x14001f2c8
   140010a82:	test   eax,eax
   140010a84:	jg     0x140010961
   140010a8a:	cmp    DWORD PTR [rsp+0x8c],0x0
   140010a92:	jle    0x140010ab5
   140010a94:	inc    DWORD PTR [rsp+0x168]
   140010a9b:	lea    rcx,[rsp+0x20]
   140010aa0:	call   0x140004210
   140010aa5:	mov    bl,BYTE PTR [rsp+0x3a0]
   140010aac:	jmp    0x14000f290
   140010ab1:	mov    DWORD PTR [r14+0x8],ebx
   140010ab5:	lea    rcx,[rsp+0x20]
   140010aba:	call   0x140004210
   140010abf:	mov    bl,BYTE PTR [rsp+0x3a0]
   140010ac6:	jmp    0x14000f290
   140010acb:	mov    rcx,QWORD PTR [r14]
   140010ace:	movsxd rbx,DWORD PTR [r14+0x8]
   140010ad2:	cmp    ebx,DWORD PTR [rcx+0x4]
   140010ad5:	jge    0x140010aee
   140010ad7:	call   QWORD PTR [rip+0xe7cb]        # 0x14001f2a8
   140010add:	lea    rdx,[rbx+rbx*2]
   140010ae1:	cmp    DWORD PTR [rax+rdx*8+0x4],0xf
   140010ae6:	jne    0x140010aee
   140010ae8:	inc    DWORD PTR [r14+0x8]
   140010aec:	jmp    0x140010af8
   140010aee:	xor    edx,edx
   140010af0:	mov    rcx,r14
   140010af3:	call   0x140019c50
   140010af8:	cmp    BYTE PTR [rsp+0xf0],0x0
   140010b00:	jne    0x140010b89
   140010b06:	cmp    BYTE PTR [rsp+0xf1],0x0
   140010b0e:	jne    0x140010b89
   140010b10:	lea    rcx,[rsp+0x118]
   140010b18:	call   QWORD PTR [rip+0xe7ca]        # 0x14001f2e8
   140010b1e:	test   al,al
   140010b20:	je     0x140010b66
   140010b22:	lea    rcx,[rsp+0x120]
   140010b2a:	call   QWORD PTR [rip+0xe7b8]        # 0x14001f2e8
   140010b30:	test   al,al
   140010b32:	je     0x140010b66
   140010b34:	lea    rcx,[rsp+0x140]
   140010b3c:	call   QWORD PTR [rip+0xe7a6]        # 0x14001f2e8
   140010b42:	test   al,al
   140010b44:	je     0x140010b66
   140010b46:	mov    rax,QWORD PTR [rsp+0x150]
   140010b4e:	cmp    DWORD PTR [rax+0x4],0x0
   140010b52:	jne    0x140010b66
   140010b54:	lea    rcx,[rsp+0xd0]
   140010b5c:	call   0x1400089c0
   140010b61:	jmp    0x140010c3e
   140010b66:	cmp    BYTE PTR [rsp+0xf0],0x0
   140010b6e:	jne    0x140010b89
   140010b70:	cmp    BYTE PTR [rsp+0xf1],0x0
   140010b78:	jne    0x140010b89
   140010b7a:	lea    rdx,[rip+0xf1d7]        # 0x14001fd58
   140010b81:	mov    rcx,r14
   140010b84:	call   0x140019c50
   140010b89:	lea    rcx,[rsp+0xf8]
   140010b91:	call   QWORD PTR [rip+0xe721]        # 0x14001f2b8
   140010b97:	test   al,al
   140010b99:	jne    0x140010bac
   140010b9b:	lea    rdx,[r14+0x68]
   140010b9f:	lea    rcx,[rsp+0x100]
   140010ba7:	call   0x1400049b0
   140010bac:	lea    rdx,[rsp+0xd0]
   140010bb4:	mov    rcx,r14
   140010bb7:	call   0x140004410
   140010bbc:	lea    rdx,[rsp+0xd0]
   140010bc4:	mov    rcx,r14
   140010bc7:	call   0x14000c9d0
   140010bcc:	lea    rcx,[r14+0x40]
   140010bd0:	lea    rdx,[rsp+0xd0]
   140010bd8:	call   0x14000eea0
   140010bdd:	cmp    BYTE PTR [rsp+0xf0],0x0
   140010be5:	je     0x140010bed
   140010be7:	lea    rbx,[r14+0x58]
   140010beb:	jmp    0x140010bf1
   140010bed:	lea    rbx,[r14+0x60]
   140010bf1:	lea    r9,[rsp+0xd8]
   140010bf9:	lea    r8,[rsp+0xd0]
   140010c01:	lea    rdx,[rsp+0x290]
   140010c09:	mov    rcx,rbx
   140010c0c:	call   0x1400060e0
   140010c11:	lea    r9,[rsp+0xd8]
   140010c19:	lea    r8,[rsp+0xd8]
   140010c21:	lea    rdx,[rsp+0x278]
   140010c29:	mov    rcx,rbx
   140010c2c:	call   0x1400060e0
   140010c31:	lea    rcx,[rsp+0xd0]
   140010c39:	call   0x1400089c0
   140010c3e:	mov    rax,QWORD PTR [r14]
   140010c41:	mov    esi,0x0
   140010c46:	lea    r15,[rip+0xfffffffffffef3b3]        # 0x140000000
   140010c4d:	mov    ecx,DWORD PTR [rax+0x4]
   140010c50:	cmp    DWORD PTR [r14+0x8],ecx
   140010c54:	jl     0x14000ef90
   140010c5a:	mov    r15,QWORD PTR [rsp+0x358]
   140010c62:	mov    r12,QWORD PTR [rsp+0x368]
   140010c6a:	mov    rdi,QWORD PTR [rsp+0x370]
   140010c72:	mov    rsi,QWORD PTR [rsp+0x378]
   140010c7a:	mov    rbp,QWORD PTR [rsp+0x380]
   140010c82:	mov    rbx,QWORD PTR [rsp+0x388]
   140010c8a:	mov    rax,QWORD PTR [rsp+0x3b8]
   140010c92:	mov    r14,QWORD PTR [rsp+0x360]
   140010c9a:	mov    ecx,DWORD PTR [rax]
   140010c9c:	test   ecx,ecx
   140010c9e:	je     0x140010cb5
   140010ca0:	cmp    ecx,0xffffffff
   140010ca3:	je     0x140010cca
   140010ca5:	lock xadd DWORD PTR [rax],r13d
   140010caa:	add    r13d,0xffffffff
   140010cae:	setne  al
   140010cb1:	test   al,al
   140010cb3:	jne    0x140010cca
   140010cb5:	mov    rdx,QWORD PTR [rsp+0x3b8]
   140010cbd:	lea    rcx,[rsp+0x3b8]
   140010cc5:	call   0x140002480
   140010cca:	add    rsp,0x390
   140010cd1:	pop    r13
   140010cd3:	ret    
   140010cd4:	or     dh,dh
   140010cd6:	add    BYTE PTR [rax],al
   140010cd8:	(bad)  
   140010cd9:	test   BYTE PTR [rax],0x0
   140010cdc:	mov    bl,0xf7
   140010cde:	add    BYTE PTR [rax],al
   140010ce0:	loop   0x140010cd1
   140010ce2:	add    BYTE PTR [rax],al
   140010ce4:	add    edi,esi
   140010ce6:	add    BYTE PTR [rax],al
   140010ce8:	out    0xf6,eax
   140010cea:	add    BYTE PTR [rax],al
   140010cec:	hlt    
   140010ced:	test   BYTE PTR [rax],0x0
   140010cf0:	and    esi,esi
   140010cf2:	add    BYTE PTR [rax],al
   140010cf4:	jg     0x140010cec
   140010cf6:	add    BYTE PTR [rax],al
   140010cf8:	psllw  mm0,QWORD PTR [rax]
   140010cfb:	add    BYTE PTR [rax],al
   140010cfd:	or     DWORD PTR [rcx],ecx
   140010cff:	add    BYTE PTR [rcx],cl
   140010d01:	or     DWORD PTR [rcx],ecx
   140010d03:	or     DWORD PTR [rcx],ecx
   140010d05:	or     DWORD PTR [rcx],ecx
   140010d07:	or     DWORD PTR [rcx],ecx
   140010d09:	or     DWORD PTR [rcx],eax
   140010d0b:	or     DWORD PTR [rcx],ecx
   140010d0d:	or     DWORD PTR [rcx],ecx
   140010d0f:	or     DWORD PTR [rdx],eax
   140010d11:	add    ecx,DWORD PTR [rcx]
   140010d13:	add    cl,BYTE PTR [rcx]
   140010d15:	or     DWORD PTR [rcx],ecx
   140010d17:	or     DWORD PTR [rcx],ecx
   140010d19:	or     DWORD PTR [rcx],ecx
   140010d1b:	or     DWORD PTR [rcx],ecx
   140010d1d:	or     DWORD PTR [rcx],ecx
   140010d1f:	add    al,0x9
   140010d21:	or     DWORD PTR [rcx],ecx
   140010d23:	or     DWORD PTR [rcx],ecx
   140010d25:	or     DWORD PTR [rcx],ecx
   140010d27:	or     DWORD PTR [rcx],ecx
   140010d29:	or     DWORD PTR [rcx],ecx
   140010d2b:	or     DWORD PTR [rcx],ecx
   140010d2d:	or     DWORD PTR [rcx],ecx
   140010d2f:	or     DWORD PTR [rcx],ecx
   140010d31:	or     DWORD PTR [rcx],ecx
   140010d33:	or     DWORD PTR [rcx],ecx
   140010d35:	or     DWORD PTR [rcx],ecx
   140010d37:	or     DWORD PTR [rcx],ecx
   140010d39:	or     DWORD PTR [rcx],ecx
   140010d3b:	or     DWORD PTR [rcx],ecx
   140010d3d:	or     DWORD PTR [rcx],ecx
   140010d3f:	or     DWORD PTR [rcx],ecx
   140010d41:	or     DWORD PTR [rcx],ecx
   140010d43:	or     DWORD PTR [rcx],ecx
   140010d45:	or     DWORD PTR [rcx],ecx
   140010d47:	or     DWORD PTR [rcx],ecx
   140010d49:	or     DWORD PTR [rcx],ecx
   140010d4b:	or     DWORD PTR [rcx],ecx
   140010d4d:	or     DWORD PTR [rcx],ecx
   140010d4f:	or     DWORD PTR [rcx],ecx
   140010d51:	or     DWORD PTR [rcx],ecx
   140010d53:	or     DWORD PTR [rcx],ecx
   140010d55:	or     DWORD PTR [rcx],ecx
   140010d57:	or     DWORD PTR [rcx],ecx
   140010d59:	or     DWORD PTR [rcx],ecx
   140010d5b:	or     DWORD PTR [rcx],ecx
   140010d5d:	or     DWORD PTR [rcx],ecx
   140010d5f:	or     DWORD PTR [rcx],ecx
   140010d61:	or     DWORD PTR [rcx],ecx
   140010d63:	or     DWORD PTR [rcx],ecx
   140010d65:	or     DWORD PTR [rcx],ecx
   140010d67:	or     DWORD PTR [rcx],ecx
   140010d69:	or     DWORD PTR [rcx],ecx
   140010d6b:	or     DWORD PTR [rip+0x9090906],eax        # 0x1490a1677
   140010d71:	or     DWORD PTR [rcx],ecx
   140010d73:	or     DWORD PTR [rcx],ecx
   140010d75:	or     DWORD PTR [rcx],ecx
   140010d77:	or     DWORD PTR [rcx],ecx
   140010d79:	or     DWORD PTR [rcx],ecx
   140010d7b:	(bad)  
   140010d7c:	or     BYTE PTR [rdi],cl
   140010d7e:	(bad)  
   140010d7f:	add    dh,cl
   140010d81:	lock add BYTE PTR [rax],al
   140010d84:	adc    bl,dh
   140010d86:	add    BYTE PTR [rax],al
   140010d88:	sbb    bl,dh
   140010d8a:	add    BYTE PTR [rax],al
   140010d8c:	add    bl,dh
   140010d8e:	add    BYTE PTR [rax],al
   140010d90:	or     bl,dh
   140010d92:	add    BYTE PTR [rax],al
   140010d94:	retf   
   140010d95:	lock add BYTE PTR [rax],al
   140010d98:	clc    
   140010d99:	repnz add BYTE PTR [rax],al
   140010d9c:	and    bl,dh
   140010d9e:	add    BYTE PTR [rax],al
   140010da0:	(bad)  
   140010da1:	lock add BYTE PTR [rax],al
   140010da4:	add    BYTE PTR [rax],al
   140010da6:	add    DWORD PTR [rdx],eax
   140010da8:	or     BYTE PTR [rbx],al
   140010daa:	add    al,0x5
   140010dac:	(bad)  
   140010dad:	or     BYTE PTR [rax],cl
   140010daf:	or     BYTE PTR [rax],cl
   140010db1:	or     BYTE PTR [rax],cl
   140010db3:	or     BYTE PTR [rax],cl
   140010db5:	or     BYTE PTR [rax],cl
   140010db7:	or     BYTE PTR [rax],cl
   140010db9:	or     BYTE PTR [rax],cl
   140010dbb:	or     BYTE PTR [rax],cl
   140010dbd:	or     BYTE PTR [rax],cl
   140010dbf:	or     BYTE PTR [rax],cl
   140010dc1:	or     BYTE PTR [rax],cl
   140010dc3:	or     BYTE PTR [rax],cl
   140010dc5:	or     BYTE PTR [rax],cl
   140010dc7:	or     BYTE PTR [rax],cl
   140010dc9:	or     BYTE PTR [rax],cl
   140010dcb:	or     BYTE PTR [rax],cl
   140010dcd:	or     BYTE PTR [rax],cl
   140010dcf:	or     BYTE PTR [rax],cl
   140010dd1:	or     BYTE PTR [rax],cl
   140010dd3:	or     BYTE PTR [rax],cl
   140010dd5:	or     BYTE PTR [rax],cl
   140010dd7:	or     BYTE PTR [rax],cl
   140010dd9:	or     BYTE PTR [rax],cl
   140010ddb:	or     BYTE PTR [rax],cl
   140010ddd:	or     BYTE PTR [rax],cl
   140010ddf:	or     BYTE PTR [rax],cl
   140010de1:	or     BYTE PTR [rax],cl
   140010de3:	or     BYTE PTR [rax],cl
   140010de5:	or     BYTE PTR [rax],cl
   140010de7:	or     BYTE PTR [rax],cl
   140010de9:	or     BYTE PTR [rax],cl
   140010deb:	or     BYTE PTR [rdi],al
   140010ded:	nop    DWORD PTR [rax]
   140010df0:	nop
   140010df1:	repnz add BYTE PTR [rax],al
   140010df4:	in     eax,dx
   140010df5:	cld    
   140010df6:	add    BYTE PTR [rax],al
   140010df8:	rex.RB inc DWORD PTR [r8]
   140010dfb:	add    BYTE PTR [rip+0x5b0000fc],dl        # 0x19b010efd
   140010e01:	cld    
   140010e02:	add    BYTE PTR [rax],al
   140010e04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010e05:	cld    
   140010e06:	add    BYTE PTR [rax],al
   140010e08:	fdivp  st(5),st
   140010e0a:	add    BYTE PTR [rax],al
   140010e0c:	pop    rbx
   140010e0d:	inc    BYTE PTR [rax]
   140010e0f:	add    BYTE PTR [rdi-0x2],bh
   140010e12:	add    BYTE PTR [rax],al
   140010e14:	xchg   esp,eax
   140010e15:	inc    BYTE PTR [rax]
   140010e17:	add    BYTE PTR [rcx-0x3effff02],ch
   140010e1d:	inc    BYTE PTR [rax]
   140010e1f:	add    cl,bl
   140010e21:	inc    BYTE PTR [rax]
   140010e23:	add    dh,ch
   140010e25:	inc    BYTE PTR [rax]
   140010e27:	add    BYTE PTR [rbx],al
   140010e29:	inc    DWORD PTR [rax]
   140010e2b:	add    BYTE PTR [rdx-0x60ffff03],cl
   140010e31:	std    
   140010e32:	add    BYTE PTR [rax],al
   140010e34:	sbb    bh,bh
   140010e36:	add    BYTE PTR [rax],al
   140010e38:	xor    bh,bh
   140010e3a:	add    BYTE PTR [rax],al
   140010e3c:	jg     0x140010e3e
   140010e3e:	add    DWORD PTR [rax],eax
   140010e40:	add    BYTE PTR [rax],al
   140010e42:	adc    edx,DWORD PTR [rbx]
   140010e44:	adc    edx,DWORD PTR [rbx]
   140010e46:	adc    edx,DWORD PTR [rbx]
   140010e48:	adc    edx,DWORD PTR [rbx]
   140010e4a:	adc    edx,DWORD PTR [rbx]
   140010e4c:	adc    edx,DWORD PTR [rbx]
   140010e4e:	adc    edx,DWORD PTR [rbx]
   140010e50:	adc    eax,DWORD PTR [rcx]
   140010e52:	adc    eax,DWORD PTR [rdx]
   140010e54:	adc    edx,DWORD PTR [rbx]
   140010e56:	adc    eax,DWORD PTR [rbx]
   140010e58:	add    al,0x5
   140010e5a:	adc    edx,DWORD PTR [rbx]
   140010e5c:	adc    edx,DWORD PTR [rbx]
   140010e5e:	adc    edx,DWORD PTR [rbx]
   140010e60:	adc    edx,DWORD PTR [rbx]
   140010e62:	adc    edx,DWORD PTR [rbx]
   140010e64:	adc    edx,DWORD PTR [rbx]
   140010e66:	adc    edx,DWORD PTR [rbx]
   140010e68:	adc    edx,DWORD PTR [rbx]
   140010e6a:	adc    edx,DWORD PTR [rbx]
   140010e6c:	adc    edx,DWORD PTR [rbx]
   140010e6e:	adc    edx,DWORD PTR [rbx]
   140010e70:	adc    edx,DWORD PTR [rbx]
   140010e72:	adc    edx,DWORD PTR [rbx]
   140010e74:	adc    edx,DWORD PTR [rbx]
   140010e76:	adc    edx,DWORD PTR [rbx]
   140010e78:	adc    edx,DWORD PTR [rbx]
   140010e7a:	adc    edx,DWORD PTR [rbx]
   140010e7c:	adc    edx,DWORD PTR [rbx]
   140010e7e:	adc    edx,DWORD PTR [rbx]
   140010e80:	adc    edx,DWORD PTR [rbx]
   140010e82:	adc    edx,DWORD PTR [rbx]
   140010e84:	adc    edx,DWORD PTR [rbx]
   140010e86:	adc    edx,DWORD PTR [rbx]
   140010e88:	adc    edx,DWORD PTR [rbx]
   140010e8a:	adc    edx,DWORD PTR [rbx]
   140010e8c:	adc    edx,DWORD PTR [rbx]
   140010e8e:	adc    edx,DWORD PTR [rbx]
   140010e90:	adc    edx,DWORD PTR [rbx]
   140010e92:	adc    edx,DWORD PTR [rbx]
   140010e94:	adc    edx,DWORD PTR [rbx]
   140010e96:	adc    edx,DWORD PTR [rbx]
   140010e98:	adc    edx,DWORD PTR [rbx]
   140010e9a:	adc    edx,DWORD PTR [rbx]
   140010e9c:	adc    edx,DWORD PTR [rbx]
   140010e9e:	adc    edx,DWORD PTR [rbx]
   140010ea0:	adc    edx,DWORD PTR [rbx]
   140010ea2:	adc    edx,DWORD PTR [rbx]
   140010ea4:	(bad)  
   140010ea5:	(bad)  
   140010ea6:	or     BYTE PTR [rcx],cl
   140010ea8:	or     cl,BYTE PTR [rdx]
   140010eaa:	or     ecx,DWORD PTR [rbx]
   140010eac:	or     al,0x13
   140010eae:	adc    ecx,DWORD PTR [rip+0x13100f0e]        # 0x153111dc2
   140010eb4:	adc    edx,DWORD PTR [rcx]
   140010eb6:	adc    edx,DWORD PTR [rbx]
   140010eb8:	adc    edx,DWORD PTR [rdx]
   140010eba:	xchg   ax,ax
   140010ebc:	mov    al,0xf4
   140010ebe:	add    BYTE PTR [rax],al
   140010ec0:	clc    
   140010ec1:	hlt    
   140010ec2:	add    BYTE PTR [rax],al
   140010ec4:	std    
   140010ec5:	hlt    
   140010ec6:	add    BYTE PTR [rax],al
   140010ec8:	out    dx,al
   140010ec9:	hlt    
   140010eca:	add    BYTE PTR [rax],al
   140010ecc:	repz hlt 
   140010ece:	add    BYTE PTR [rax],al
   140010ed0:	lods   eax,DWORD PTR ds:[rsi]
   140010ed1:	hlt    
   140010ed2:	add    BYTE PTR [rax],al
   140010ed4:	jmp    0x142010fcd
   140010ed9:	cmc    
   140010eda:	add    BYTE PTR [rax],al
   140010edc:	mov    al,0xf4
   140010ede:	add    BYTE PTR [rax],al
   140010ee0:	add    BYTE PTR [rax],al
   140010ee2:	add    DWORD PTR [rdx],eax
   140010ee4:	or     BYTE PTR [rbx],al
   140010ee6:	add    al,0x5
   140010ee8:	(bad)  
   140010ee9:	or     BYTE PTR [rax],cl
   140010eeb:	or     BYTE PTR [rax],cl
   140010eed:	or     BYTE PTR [rax],cl
   140010eef:	or     BYTE PTR [rax],cl
   140010ef1:	or     BYTE PTR [rax],cl
   140010ef3:	or     BYTE PTR [rax],cl
   140010ef5:	or     BYTE PTR [rax],cl
   140010ef7:	or     BYTE PTR [rax],cl
   140010ef9:	or     BYTE PTR [rax],cl
   140010efb:	or     BYTE PTR [rax],cl
   140010efd:	or     BYTE PTR [rax],cl
   140010eff:	or     BYTE PTR [rax],cl
   140010f01:	or     BYTE PTR [rax],cl
   140010f03:	or     BYTE PTR [rax],cl
   140010f05:	or     BYTE PTR [rax],cl
   140010f07:	or     BYTE PTR [rax],cl
   140010f09:	or     BYTE PTR [rax],cl
   140010f0b:	or     BYTE PTR [rax],cl
   140010f0d:	or     BYTE PTR [rax],cl
   140010f0f:	or     BYTE PTR [rax],cl
   140010f11:	or     BYTE PTR [rax],cl
   140010f13:	or     BYTE PTR [rax],cl
   140010f15:	or     BYTE PTR [rax],cl
   140010f17:	or     BYTE PTR [rax],cl
   140010f19:	or     BYTE PTR [rax],cl
   140010f1b:	or     BYTE PTR [rax],cl
   140010f1d:	or     BYTE PTR [rax],cl
   140010f1f:	or     BYTE PTR [rax],cl
   140010f21:	or     BYTE PTR [rax],cl
   140010f23:	or     BYTE PTR [rax],cl
   140010f25:	or     BYTE PTR [rax],cl
   140010f27:	or     BYTE PTR [rdi],al
   140010f29:	int3   
   140010f2a:	int3   
   140010f2b:	int3   
   140010f2c:	int3   
   140010f2d:	int3   
   140010f2e:	int3   
   140010f2f:	int3   
   140010f30:	mov    QWORD PTR [rsp+0x18],rbp
   140010f35:	push   rsi
   140010f36:	sub    rsp,0x20
   140010f3a:	mov    eax,DWORD PTR [rcx+0xc]
   140010f3d:	mov    rbp,rdx
   140010f40:	mov    rsi,rcx
   140010f43:	cmp    eax,DWORD PTR [rdx+0xc]
   140010f46:	je     0x140010f55
   140010f48:	xor    al,al
   140010f4a:	mov    rbp,QWORD PTR [rsp+0x40]
   140010f4f:	add    rsp,0x20
   140010f53:	pop    rsi
   140010f54:	ret    
   140010f55:	mov    QWORD PTR [rsp+0x30],rbx
   140010f5a:	mov    QWORD PTR [rsp+0x38],rdi
   140010f5f:	xor    edi,edi
   140010f61:	test   eax,eax
   140010f63:	jle    0x140010f9c
   140010f65:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140010f70:	mov    eax,DWORD PTR [rbp+0x8]
   140010f73:	mov    rcx,rbp
   140010f76:	lea    edx,[rdi+rax*1]
   140010f79:	call   QWORD PTR [rip+0xe609]        # 0x14001f588
   140010f7f:	mov    ecx,DWORD PTR [rsi+0x8]
   140010f82:	lea    edx,[rdi+rcx*1]
   140010f85:	mov    rcx,rsi
   140010f88:	movzx  ebx,al
   140010f8b:	call   QWORD PTR [rip+0xe5f7]        # 0x14001f588
   140010f91:	cmp    al,bl
   140010f93:	jne    0x140010fb3
   140010f95:	inc    edi
   140010f97:	cmp    edi,DWORD PTR [rsi+0xc]
   140010f9a:	jl     0x140010f70
   140010f9c:	mov    al,0x1
   140010f9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140010fa3:	mov    rdi,QWORD PTR [rsp+0x38]
   140010fa8:	mov    rbp,QWORD PTR [rsp+0x40]
   140010fad:	add    rsp,0x20
   140010fb1:	pop    rsi
   140010fb2:	ret    
   140010fb3:	xor    al,al
   140010fb5:	jmp    0x140010f9e
   140010fb7:	int3   
   140010fb8:	int3   
   140010fb9:	int3   
   140010fba:	int3   
   140010fbb:	int3   
   140010fbc:	int3   
   140010fbd:	int3   
   140010fbe:	int3   
   140010fbf:	int3   
   140010fc0:	xchg   ax,ax
   140010fc2:	movzx  eax,BYTE PTR [rcx]
   140010fc5:	test   al,al
   140010fc7:	je     0x140010fe7
   140010fc9:	cmp    al,0x22
   140010fcb:	je     0x140010fde
   140010fcd:	cmp    al,0x5c
   140010fcf:	jne    0x140010fd9
   140010fd1:	inc    rcx
   140010fd4:	cmp    BYTE PTR [rcx],0x0
   140010fd7:	je     0x140010fe7
   140010fd9:	inc    rcx
   140010fdc:	jmp    0x140010fc2
   140010fde:	cmp    BYTE PTR [rcx],0x0
   140010fe1:	lea    rax,[rcx+0x1]
   140010fe5:	jne    0x140010fea
   140010fe7:	mov    rax,rcx
   140010fea:	repz ret 
   140010fec:	int3   
   140010fed:	int3   
   140010fee:	int3   
   140010fef:	int3   
   140010ff0:	mov    QWORD PTR [rsp+0x10],rbx
   140010ff5:	mov    QWORD PTR [rsp+0x18],rbp
   140010ffa:	push   rsi
   140010ffb:	push   rdi
   140010ffc:	push   r12
   140010ffe:	sub    rsp,0x20
   140011002:	mov    rdi,rdx
   140011005:	mov    r12,rcx
   140011008:	call   QWORD PTR [rip+0xe5b2]        # 0x14001f5c0
   14001100e:	mov    r11,QWORD PTR [rdi]
   140011011:	mov    rcx,r12
   140011014:	mov    edx,DWORD PTR [r11+0x4]
   140011018:	call   QWORD PTR [rip+0xe572]        # 0x14001f590
   14001101e:	mov    rcx,rdi
   140011021:	call   QWORD PTR [rip+0xe5d1]        # 0x14001f5f8
   140011027:	mov    r8,QWORD PTR [rdi]
   14001102a:	mov    rcx,rdi
   14001102d:	movsxd rbx,DWORD PTR [r8+0x4]
   140011031:	mov    rsi,rax
   140011034:	call   QWORD PTR [rip+0xe5be]        # 0x14001f5f8
   14001103a:	mov    rcx,r12
   14001103d:	lea    rdi,[rax+rbx*1]
   140011041:	call   QWORD PTR [rip+0xe529]        # 0x14001f570
   140011047:	xor    edx,edx
   140011049:	mov    rbp,rax
   14001104c:	cmp    rsi,rdi
   14001104f:	je     0x140011155
   140011055:	mov    QWORD PTR [rsp+0x40],r13
   14001105a:	lea    r13d,[rdx+0xa]
   14001105e:	xchg   ax,ax
   140011060:	cmp    rsi,rdi
   140011063:	je     0x140011078
   140011065:	movzx  eax,BYTE PTR [rsi]
   140011068:	cmp    al,0x20
   14001106a:	je     0x140011070
   14001106c:	cmp    al,0x9
   14001106e:	jne    0x140011078
   140011070:	inc    rsi
   140011073:	cmp    rsi,rdi
   140011076:	jne    0x140011065
   140011078:	movzx  eax,BYTE PTR [rsi]
   14001107b:	cmp    al,0x23
   14001107d:	sete   cl
   140011080:	cmp    al,0x25
   140011082:	jne    0x140011093
   140011084:	cmp    BYTE PTR [rsi+0x1],0x3a
   140011088:	lea    rax,[rsi+0x1]
   14001108c:	jne    0x140011093
   14001108e:	mov    rsi,rax
   140011091:	jmp    0x140011097
   140011093:	test   cl,cl
   140011095:	je     0x1400110b7
   140011097:	mov    BYTE PTR [rbp+0x0],0x23
   14001109b:	inc    rbp
   14001109e:	xchg   ax,ax
   1400110a0:	inc    rsi
   1400110a3:	cmp    rsi,rdi
   1400110a6:	je     0x140011150
   1400110ac:	movzx  eax,BYTE PTR [rsi]
   1400110af:	cmp    al,0x20
   1400110b1:	je     0x1400110a0
   1400110b3:	cmp    al,0x9
   1400110b5:	je     0x1400110a0
   1400110b7:	cmp    rsi,rdi
   1400110ba:	je     0x140011150
   1400110c0:	cmp    BYTE PTR [rsi],0x5c
   1400110c3:	jne    0x1400110f9
   1400110c5:	cmp    BYTE PTR [rsi+0x1],0xd
   1400110c9:	lea    rax,[rsi+0x1]
   1400110cd:	cmove  rsi,rax
   1400110d1:	cmp    rsi,rdi
   1400110d4:	je     0x140011150
   1400110d6:	cmp    BYTE PTR [rsi+0x1],r13b
   1400110da:	lea    rax,[rsi+0x1]
   1400110de:	je     0x1400110e5
   1400110e0:	cmp    BYTE PTR [rsi],0xd
   1400110e3:	jne    0x14001110a
   1400110e5:	inc    edx
   1400110e7:	mov    rsi,rax
   1400110ea:	cmp    rax,rdi
   1400110ed:	je     0x1400110b7
   1400110ef:	cmp    BYTE PTR [rax],0xd
   1400110f2:	je     0x1400110b7
   1400110f4:	inc    rsi
   1400110f7:	jmp    0x1400110b7
   1400110f9:	cmp    BYTE PTR [rsi],0xd
   1400110fc:	jne    0x14001110a
   1400110fe:	cmp    BYTE PTR [rsi+0x1],r13b
   140011102:	lea    rax,[rsi+0x1]
   140011106:	cmove  rsi,rax
   14001110a:	cmp    rsi,rdi
   14001110d:	je     0x140011150
   14001110f:	movzx  eax,BYTE PTR [rsi]
   140011112:	cmp    al,0xd
   140011114:	mov    ecx,eax
   140011116:	cmove  ecx,r13d
   14001111a:	inc    rbp
   14001111d:	mov    BYTE PTR [rbp-0x1],cl
   140011120:	cmp    BYTE PTR [rsi],r13b
   140011123:	je     0x14001112a
   140011125:	inc    rsi
   140011128:	jmp    0x1400110b7
   14001112a:	test   edx,edx
   14001112c:	je     0x140011144
   14001112e:	mov    ebx,edx
   140011130:	mov    r8d,edx
   140011133:	mov    rcx,rbp
   140011136:	movzx  edx,r13b
   14001113a:	call   0x14001e29c
   14001113f:	add    rbp,rbx
   140011142:	xor    edx,edx
   140011144:	inc    rsi
   140011147:	cmp    rsi,rdi
   14001114a:	jne    0x140011060
   140011150:	mov    r13,QWORD PTR [rsp+0x40]
   140011155:	mov    rcx,r12
   140011158:	call   QWORD PTR [rip+0xe49a]        # 0x14001f5f8
   14001115e:	mov    rcx,r12
   140011161:	sub    ebp,eax
   140011163:	mov    edx,ebp
   140011165:	call   QWORD PTR [rip+0xe425]        # 0x14001f590
   14001116b:	mov    rbx,QWORD PTR [rsp+0x48]
   140011170:	mov    rbp,QWORD PTR [rsp+0x50]
   140011175:	mov    rax,r12
   140011178:	add    rsp,0x20
   14001117c:	pop    r12
   14001117e:	pop    rdi
   14001117f:	pop    rsi
   140011180:	ret    
   140011181:	int3   
   140011182:	int3   
   140011183:	int3   
   140011184:	int3   
   140011185:	int3   
   140011186:	int3   
   140011187:	int3   
   140011188:	int3   
   140011189:	int3   
   14001118a:	int3   
   14001118b:	int3   
   14001118c:	int3   
   14001118d:	int3   
   14001118e:	int3   
   14001118f:	int3   
   140011190:	mov    QWORD PTR [rsp+0x8],rbx
   140011195:	push   rdi
   140011196:	sub    rsp,0x20
   14001119a:	mov    eax,DWORD PTR [rdx]
   14001119c:	mov    rbx,rdx
   14001119f:	mov    rdi,rcx
   1400111a2:	mov    DWORD PTR [rcx],eax
   1400111a4:	mov    eax,DWORD PTR [rdx+0x4]
   1400111a7:	add    rcx,0x8
   1400111ab:	mov    DWORD PTR [rcx-0x4],eax
   1400111ae:	add    rdx,0x8
   1400111b2:	call   QWORD PTR [rip+0xe420]        # 0x14001f5d8
   1400111b8:	mov    r11d,DWORD PTR [rbx+0x10]
   1400111bc:	mov    DWORD PTR [rdi+0x10],r11d
   1400111c0:	mov    eax,DWORD PTR [rbx+0x14]
   1400111c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400111c8:	mov    DWORD PTR [rdi+0x14],eax
   1400111cb:	mov    rax,rdi
   1400111ce:	add    rsp,0x20
   1400111d2:	pop    rdi
   1400111d3:	ret    
   1400111d4:	int3   
   1400111d5:	int3   
   1400111d6:	int3   
   1400111d7:	int3   
   1400111d8:	int3   
   1400111d9:	int3   
   1400111da:	int3   
   1400111db:	int3   
   1400111dc:	int3   
   1400111dd:	int3   
   1400111de:	int3   
   1400111df:	int3   
   1400111e0:	cmp    rdx,r8
   1400111e3:	je     0x140011251
   1400111e5:	mov    QWORD PTR [rsp+0x10],rbx
   1400111ea:	mov    QWORD PTR [rsp+0x18],rbp
   1400111ef:	push   rsi
   1400111f0:	sub    rsp,0x20
   1400111f4:	mov    rbx,r9
   1400111f7:	mov    rbp,r8
   1400111fa:	mov    rsi,rdx
   1400111fd:	mov    QWORD PTR [rsp+0x30],rdi
   140011202:	mov    rdi,rbx
   140011205:	add    rbx,0x18
   140011209:	test   rdi,rdi
   14001120c:	je     0x140011238
   14001120e:	mov    eax,DWORD PTR [rsi]
   140011210:	lea    rdx,[rsi+0x8]
   140011214:	lea    rcx,[rdi+0x8]
   140011218:	mov    DWORD PTR [rdi],eax
   14001121a:	mov    eax,DWORD PTR [rsi+0x4]
   14001121d:	mov    DWORD PTR [rdi+0x4],eax
   140011220:	call   QWORD PTR [rip+0xe3b2]        # 0x14001f5d8
   140011226:	mov    r11d,DWORD PTR [rsi+0x10]
   14001122a:	mov    DWORD PTR [rdi+0x10],r11d
   14001122e:	mov    eax,DWORD PTR [rsi+0x14]
   140011231:	add    rsi,0x18
   140011235:	mov    DWORD PTR [rdi+0x14],eax
   140011238:	cmp    rsi,rbp
   14001123b:	jne    0x140011202
   14001123d:	mov    rdi,QWORD PTR [rsp+0x30]
   140011242:	mov    rbx,QWORD PTR [rsp+0x38]
   140011247:	mov    rbp,QWORD PTR [rsp+0x40]
   14001124c:	add    rsp,0x20
   140011250:	pop    rsi
   140011251:	repz ret 
   140011253:	int3   
   140011254:	int3   
   140011255:	int3   
   140011256:	int3   
   140011257:	int3   
   140011258:	int3   
   140011259:	int3   
   14001125a:	int3   
   14001125b:	int3   
   14001125c:	int3   
   14001125d:	int3   
   14001125e:	int3   
   14001125f:	int3   
   140011260:	cmp    rdx,r8
   140011263:	je     0x140011295
   140011265:	mov    QWORD PTR [rsp+0x8],rbx
   14001126a:	push   rdi
   14001126b:	sub    rsp,0x20
   14001126f:	mov    rdi,r8
   140011272:	mov    rbx,rdx
   140011275:	mov    rcx,rbx
   140011278:	add    rbx,0x18
   14001127c:	add    rcx,0x8
   140011280:	call   QWORD PTR [rip+0xe332]        # 0x14001f5b8
   140011286:	cmp    rbx,rdi
   140011289:	jne    0x140011275
   14001128b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011290:	add    rsp,0x20
   140011294:	pop    rdi
   140011295:	repz ret 
   140011297:	int3   
   140011298:	int3   
   140011299:	int3   
   14001129a:	int3   
   14001129b:	int3   
   14001129c:	int3   
   14001129d:	int3   
   14001129e:	int3   
   14001129f:	int3   
   1400112a0:	cmp    rdx,r8
   1400112a3:	je     0x140011303
   1400112a5:	mov    QWORD PTR [rsp+0x18],rbx
   1400112aa:	push   rsi
   1400112ab:	sub    rsp,0x20
   1400112af:	mov    QWORD PTR [rsp+0x30],rbp
   1400112b4:	mov    rsi,r8
   1400112b7:	mov    rbx,rdx
   1400112ba:	mov    QWORD PTR [rsp+0x38],rdi
   1400112bf:	xor    ebp,ebp
   1400112c1:	mov    rdi,rbx
   1400112c4:	add    rbx,0x18
   1400112c8:	test   rdi,rdi
   1400112cb:	je     0x1400112ea
   1400112cd:	lea    rcx,[rdi+0x8]
   1400112d1:	mov    DWORD PTR [rdi],0xffffffff
   1400112d7:	mov    DWORD PTR [rdi+0x4],ebp
   1400112da:	call   QWORD PTR [rip+0xe2e0]        # 0x14001f5c0
   1400112e0:	mov    DWORD PTR [rdi+0x10],ebp
   1400112e3:	mov    DWORD PTR [rdi+0x14],0xffffffff
   1400112ea:	cmp    rbx,rsi
   1400112ed:	jne    0x1400112c1
   1400112ef:	mov    rdi,QWORD PTR [rsp+0x38]
   1400112f4:	mov    rbp,QWORD PTR [rsp+0x30]
   1400112f9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400112fe:	add    rsp,0x20
   140011302:	pop    rsi
   140011303:	repz ret 
   140011305:	int3   
   140011306:	int3   
   140011307:	int3   
   140011308:	int3   
   140011309:	int3   
   14001130a:	int3   
   14001130b:	int3   
   14001130c:	int3   
   14001130d:	int3   
   14001130e:	int3   
   14001130f:	int3   
   140011310:	mov    QWORD PTR [rsp+0x8],rbx
   140011315:	mov    QWORD PTR [rsp+0x10],rbp
   14001131a:	mov    QWORD PTR [rsp+0x18],rsi
   14001131f:	push   rdi
   140011320:	sub    rsp,0x40
   140011324:	mov    edi,DWORD PTR [rdx+0x14]
   140011327:	mov    ebx,DWORD PTR [rdx+0x10]
   14001132a:	mov    rsi,rcx
   14001132d:	lea    rcx,[rsp+0x30]
   140011332:	add    rdx,0x8
   140011336:	call   QWORD PTR [rip+0xe29c]        # 0x14001f5d8
   14001133c:	mov    ebp,DWORD PTR [rsi+0x14]
   14001133f:	mov    DWORD PTR [rsp+0x38],ebx
   140011343:	mov    ebx,DWORD PTR [rsi+0x10]
   140011346:	lea    rdx,[rsi+0x8]
   14001134a:	lea    rcx,[rsp+0x20]
   14001134f:	mov    DWORD PTR [rsp+0x3c],edi
   140011353:	call   QWORD PTR [rip+0xe27f]        # 0x14001f5d8
   140011359:	mov    DWORD PTR [rsp+0x28],ebx
   14001135d:	mov    DWORD PTR [rsp+0x2c],ebp
   140011361:	cmp    ebp,DWORD PTR [rsp+0x3c]
   140011365:	je     0x14001136b
   140011367:	xor    bl,bl
   140011369:	jmp    0x1400113a8
   14001136b:	xor    edi,edi
   14001136d:	test   ebp,ebp
   14001136f:	jle    0x1400113a6
   140011371:	lea    edx,[rbx+rdi*1]
   140011374:	lea    rcx,[rsp+0x20]
   140011379:	call   QWORD PTR [rip+0xe209]        # 0x14001f588
   14001137f:	lea    rcx,[rsp+0x30]
   140011384:	movzx  ebx,al
   140011387:	mov    eax,DWORD PTR [rsp+0x38]
   14001138b:	lea    edx,[rdi+rax*1]
   14001138e:	call   QWORD PTR [rip+0xe1f4]        # 0x14001f588
   140011394:	cmp    bl,al
   140011396:	jne    0x140011367
   140011398:	inc    edi
   14001139a:	cmp    edi,DWORD PTR [rsp+0x2c]
   14001139e:	jge    0x1400113a6
   1400113a0:	mov    ebx,DWORD PTR [rsp+0x28]
   1400113a4:	jmp    0x140011371
   1400113a6:	mov    bl,0x1
   1400113a8:	lea    rcx,[rsp+0x20]
   1400113ad:	call   QWORD PTR [rip+0xe205]        # 0x14001f5b8
   1400113b3:	lea    rcx,[rsp+0x30]
   1400113b8:	call   QWORD PTR [rip+0xe1fa]        # 0x14001f5b8
   1400113be:	mov    rbp,QWORD PTR [rsp+0x58]
   1400113c3:	mov    rsi,QWORD PTR [rsp+0x60]
   1400113c8:	mov    al,bl
   1400113ca:	mov    rbx,QWORD PTR [rsp+0x50]
   1400113cf:	add    rsp,0x40
   1400113d3:	pop    rdi
   1400113d4:	ret    
   1400113d5:	int3   
   1400113d6:	int3   
   1400113d7:	int3   
   1400113d8:	int3   
   1400113d9:	int3   
   1400113da:	int3   
   1400113db:	int3   
   1400113dc:	int3   
   1400113dd:	int3   
   1400113de:	int3   
   1400113df:	int3   
   1400113e0:	rex push rbp
   1400113e2:	push   rsi
   1400113e3:	sub    rsp,0x28
   1400113e7:	mov    rsi,rdx
   1400113ea:	mov    rbp,rcx
   1400113ed:	test   r8d,r8d
   1400113f0:	jns    0x14001141c
   1400113f2:	mov    rax,QWORD PTR [rcx]
   1400113f5:	lea    rcx,[rsp+0x40]
   1400113fa:	mov    DWORD PTR [rsp+0x50],0x0
   140011402:	mov    r9d,DWORD PTR [rax+0x4]
   140011406:	lea    eax,[r8+r9*1]
   14001140a:	lea    r8,[rsp+0x50]
   14001140f:	test   eax,eax
   140011411:	mov    DWORD PTR [rsp+0x40],eax
   140011415:	cmovns r8,rcx
   140011419:	mov    r8d,DWORD PTR [r8]
   14001141c:	mov    rdx,QWORD PTR [rbp+0x0]
   140011420:	mov    QWORD PTR [rsp+0x48],rbx
   140011425:	mov    QWORD PTR [rsp+0x20],rdi
   14001142a:	cmp    r8d,DWORD PTR [rdx+0x4]
   14001142e:	jge    0x140011478
   140011430:	movsxd rax,DWORD PTR [rdx+0x4]
   140011434:	lea    rcx,[rax+rax*2]
   140011438:	mov    rax,QWORD PTR [rdx+0x10]
   14001143c:	lea    rdi,[rax+rcx*8]
   140011440:	movsxd rax,r8d
   140011443:	lea    rcx,[rax+rax*2]
   140011447:	mov    rax,QWORD PTR [rdx+0x10]
   14001144b:	add    rdi,rdx
   14001144e:	lea    rbx,[rax+rcx*8]
   140011452:	add    rbx,rdx
   140011455:	cmp    rbx,rdi
   140011458:	je     0x140011478
   14001145a:	nop    WORD PTR [rax+rax*1+0x0]
   140011460:	mov    rdx,rsi
   140011463:	mov    rcx,rbx
   140011466:	call   0x140011310
   14001146b:	test   al,al
   14001146d:	jne    0x14001148c
   14001146f:	add    rbx,0x18
   140011473:	cmp    rbx,rdi
   140011476:	jne    0x140011460
   140011478:	or     eax,0xffffffff
   14001147b:	mov    rdi,QWORD PTR [rsp+0x20]
   140011480:	mov    rbx,QWORD PTR [rsp+0x48]
   140011485:	add    rsp,0x28
   140011489:	pop    rsi
   14001148a:	pop    rbp
   14001148b:	ret    
   14001148c:	mov    rax,QWORD PTR [rbp+0x0]
   140011490:	mov    rdi,QWORD PTR [rsp+0x20]
   140011495:	sub    rbx,QWORD PTR [rax+0x10]
   140011499:	sub    rbx,rax
   14001149c:	movabs rax,0x2aaaaaaaaaaaaaab
   1400114a6:	imul   rbx
   1400114a9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400114ae:	sar    rdx,0x2
   1400114b2:	mov    rax,rdx
   1400114b5:	shr    rax,0x3f
   1400114b9:	add    rax,rdx
   1400114bc:	add    rsp,0x28
   1400114c0:	pop    rsi
   1400114c1:	pop    rbp
   1400114c2:	ret    
   1400114c3:	int3   
   1400114c4:	int3   
   1400114c5:	int3   
   1400114c6:	int3   
   1400114c7:	int3   
   1400114c8:	int3   
   1400114c9:	int3   
   1400114ca:	int3   
   1400114cb:	int3   
   1400114cc:	int3   
   1400114cd:	int3   
   1400114ce:	int3   
   1400114cf:	int3   
   1400114d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400114d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400114da:	push   rdi
   1400114db:	sub    rsp,0x20
   1400114df:	mov    r8,QWORD PTR [rdx+0x10]
   1400114e3:	movsxd rax,DWORD PTR [rdx+0x4]
   1400114e7:	mov    rsi,rdx
   1400114ea:	lea    rcx,[rax+rax*2]
   1400114ee:	lea    rbx,[r8+rdx*1]
   1400114f2:	lea    rdi,[r8+rcx*8]
   1400114f6:	add    rdi,rdx
   1400114f9:	cmp    rbx,rdi
   1400114fc:	je     0x140011516
   1400114fe:	xchg   ax,ax
   140011500:	mov    rcx,rbx
   140011503:	add    rbx,0x18
   140011507:	add    rcx,0x8
   14001150b:	call   QWORD PTR [rip+0xe0a7]        # 0x14001f5b8
   140011511:	cmp    rbx,rdi
   140011514:	jne    0x140011500
   140011516:	mov    edx,0x18
   14001151b:	mov    rcx,rsi
   14001151e:	lea    r8d,[rdx-0x10]
   140011522:	mov    rbx,QWORD PTR [rsp+0x30]
   140011527:	mov    rsi,QWORD PTR [rsp+0x38]
   14001152c:	add    rsp,0x20
   140011530:	pop    rdi
   140011531:	rex.W jmp QWORD PTR [rip+0xdfd8]        # 0x14001f510
   140011538:	int3   
   140011539:	int3   
   14001153a:	int3   
   14001153b:	int3   
   14001153c:	int3   
   14001153d:	int3   
   14001153e:	int3   
   14001153f:	int3   
   140011540:	mov    QWORD PTR [rsp+0x10],rbp
   140011545:	mov    QWORD PTR [rsp+0x18],rsi
   14001154a:	push   rdi
   14001154b:	sub    rsp,0x20
   14001154f:	mov    esi,r8d
   140011552:	mov    r8,QWORD PTR [rcx]
   140011555:	mov    rdi,rcx
   140011558:	mov    ecx,DWORD PTR [r8+0x20]
   14001155c:	mov    rbp,rdx
   14001155f:	test   ecx,ecx
   140011561:	je     0x1400115b8
   140011563:	xor    edx,edx
   140011565:	mov    eax,esi
   140011567:	mov    QWORD PTR [rsp+0x30],rbx
   14001156c:	div    ecx
   14001156e:	mov    rax,QWORD PTR [r8+0x8]
   140011572:	lea    rbx,[rax+rdx*8]
   140011576:	mov    rax,QWORD PTR [rax+rdx*8]
   14001157a:	cmp    rax,r8
   14001157d:	je     0x1400115a0
   14001157f:	nop
   140011580:	cmp    esi,DWORD PTR [rax+0x8]
   140011583:	jne    0x140011595
   140011585:	lea    rdx,[rax+0x10]
   140011589:	mov    rcx,rbp
   14001158c:	call   0x140010f30
   140011591:	test   al,al
   140011593:	jne    0x1400115a0
   140011595:	mov    rbx,QWORD PTR [rbx]
   140011598:	mov    rax,QWORD PTR [rbx]
   14001159b:	cmp    rax,QWORD PTR [rdi]
   14001159e:	jne    0x140011580
   1400115a0:	mov    rax,rbx
   1400115a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115a8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400115ad:	mov    rsi,QWORD PTR [rsp+0x40]
   1400115b2:	add    rsp,0x20
   1400115b6:	pop    rdi
   1400115b7:	ret    
   1400115b8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400115bd:	mov    rsi,QWORD PTR [rsp+0x40]
   1400115c2:	mov    rax,rdi
   1400115c5:	add    rsp,0x20
   1400115c9:	pop    rdi
   1400115ca:	ret    
   1400115cb:	int3   
   1400115cc:	int3   
   1400115cd:	int3   
   1400115ce:	int3   
   1400115cf:	int3   
   1400115d0:	rex push rbx
   1400115d2:	sub    rsp,0x20
   1400115d6:	mov    rax,QWORD PTR [rcx]
   1400115d9:	mov    rbx,rcx
   1400115dc:	mov    edx,DWORD PTR [rax+0x4]
   1400115df:	dec    edx
   1400115e1:	cmp    DWORD PTR [rcx+0x8],edx
   1400115e4:	jge    0x14001163f
   1400115e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400115f0:	mov    r8,QWORD PTR [rbx]
   1400115f3:	movsxd rdx,DWORD PTR [rbx+0x8]
   1400115f7:	mov    rax,QWORD PTR [r8+0x10]
   1400115fb:	lea    r9,[rdx+rdx*2]
   1400115ff:	lea    rcx,[rax+r9*8]
   140011603:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa4
   14001160c:	je     0x14001163f
   14001160e:	lea    rcx,[rax+r9*8]
   140011612:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   140011617:	add    eax,0xffffff61
   14001161c:	cmp    eax,0x2
   14001161f:	ja     0x14001162f
   140011621:	lea    eax,[rdx+0x1]
   140011624:	mov    rcx,rbx
   140011627:	mov    DWORD PTR [rbx+0x8],eax
   14001162a:	call   0x1400115d0
   14001162f:	inc    DWORD PTR [rbx+0x8]
   140011632:	mov    rax,QWORD PTR [rbx]
   140011635:	mov    ecx,DWORD PTR [rax+0x4]
   140011638:	dec    ecx
   14001163a:	cmp    DWORD PTR [rbx+0x8],ecx
   14001163d:	jl     0x1400115f0
   14001163f:	add    rsp,0x20
   140011643:	pop    rbx
   140011644:	ret    
   140011645:	int3   
   140011646:	int3   
   140011647:	int3   
   140011648:	int3   
   140011649:	int3   
   14001164a:	int3   
   14001164b:	int3   
   14001164c:	int3   
   14001164d:	int3   
   14001164e:	int3   
   14001164f:	int3   
   140011650:	sub    rsp,0x28
   140011654:	mov    rax,QWORD PTR [rcx]
   140011657:	mov    r10,rcx
   14001165a:	mov    edx,DWORD PTR [rax+0x4]
   14001165d:	dec    edx
   14001165f:	cmp    DWORD PTR [rcx+0x8],edx
   140011662:	jge    0x140011749
   140011668:	nop    DWORD PTR [rax+rax*1+0x0]
   140011670:	mov    r8,QWORD PTR [r10]
   140011673:	movsxd r9,DWORD PTR [r10+0x8]
   140011677:	mov    rax,QWORD PTR [r8+0x10]
   14001167b:	lea    rdx,[r9+r9*2]
   14001167f:	lea    rcx,[rax+rdx*8]
   140011683:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa4
   14001168c:	je     0x140011749
   140011692:	lea    rcx,[rax+rdx*8]
   140011696:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa2
   14001169f:	je     0x140011749
   1400116a5:	lea    rcx,[rax+rdx*8]
   1400116a9:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa3
   1400116b2:	je     0x140011749
   1400116b8:	lea    rcx,[rax+rdx*8]
   1400116bc:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   1400116c1:	add    eax,0xffffff61
   1400116c6:	cmp    eax,0x2
   1400116c9:	ja     0x140011733
   1400116cb:	lea    edx,[r9+0x1]
   1400116cf:	mov    DWORD PTR [r10+0x8],edx
   1400116d3:	mov    eax,DWORD PTR [r8+0x4]
   1400116d7:	dec    eax
   1400116d9:	cmp    edx,eax
   1400116db:	jge    0x140011733
   1400116dd:	nop    DWORD PTR [rax]
   1400116e0:	mov    r8,QWORD PTR [r10]
   1400116e3:	movsxd rax,edx
   1400116e6:	lea    r9,[rax+rax*2]
   1400116ea:	mov    rax,QWORD PTR [r8+0x10]
   1400116ee:	lea    rcx,[rax+r9*8]
   1400116f2:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa4
   1400116fb:	je     0x140011733
   1400116fd:	lea    rcx,[rax+r9*8]
   140011701:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   140011706:	add    eax,0xffffff61
   14001170b:	cmp    eax,0x2
   14001170e:	ja     0x14001171f
   140011710:	lea    eax,[rdx+0x1]
   140011713:	mov    rcx,r10
   140011716:	mov    DWORD PTR [r10+0x8],eax
   14001171a:	call   0x1400115d0
   14001171f:	inc    DWORD PTR [r10+0x8]
   140011723:	mov    rax,QWORD PTR [r10]
   140011726:	mov    edx,DWORD PTR [r10+0x8]
   14001172a:	mov    ecx,DWORD PTR [rax+0x4]
   14001172d:	dec    ecx
   14001172f:	cmp    edx,ecx
   140011731:	jl     0x1400116e0
   140011733:	inc    DWORD PTR [r10+0x8]
   140011737:	mov    rax,QWORD PTR [r10]
   14001173a:	mov    ecx,DWORD PTR [rax+0x4]
   14001173d:	dec    ecx
   14001173f:	cmp    DWORD PTR [r10+0x8],ecx
   140011743:	jl     0x140011670
   140011749:	mov    rax,QWORD PTR [r10]
   14001174c:	mov    ecx,DWORD PTR [rax+0x4]
   14001174f:	dec    ecx
   140011751:	cmp    DWORD PTR [r10+0x8],ecx
   140011755:	setl   al
   140011758:	add    rsp,0x28
   14001175c:	ret    
   14001175d:	int3   
   14001175e:	int3   
   14001175f:	int3   
   140011760:	rex push rbx
   140011762:	sub    rsp,0x20
   140011766:	mov    r8,QWORD PTR [rcx]
   140011769:	mov    rbx,rcx
   14001176c:	movsxd rcx,DWORD PTR [rcx+0x8]
   140011770:	mov    r9d,DWORD PTR [r8+0x4]
   140011774:	cmp    ecx,r9d
   140011777:	jge    0x1400117d4
   140011779:	mov    rax,QWORD PTR [r8+0x10]
   14001177d:	lea    rdx,[rcx+rcx*2]
   140011781:	lea    rdx,[rax+rdx*8]
   140011785:	cmp    DWORD PTR [rdx+r8*1+0x4],0x9
   14001178b:	jne    0x1400117c9
   14001178d:	lea    eax,[rcx+0x1]
   140011790:	mov    rcx,rbx
   140011793:	mov    DWORD PTR [rbx+0x8],eax
   140011796:	call   0x140017e40
   14001179b:	mov    r9,QWORD PTR [rbx]
   14001179e:	movsxd r8,DWORD PTR [rbx+0x8]
   1400117a2:	cmp    r8d,DWORD PTR [r9+0x4]
   1400117a6:	jge    0x140011820
   1400117a8:	mov    rcx,QWORD PTR [r9+0x10]
   1400117ac:	lea    rdx,[r8+r8*2]
   1400117b0:	lea    rdx,[rcx+rdx*8]
   1400117b4:	cmp    DWORD PTR [rdx+r9*1+0x4],0xa
   1400117ba:	jne    0x140011820
   1400117bc:	lea    ecx,[r8+0x1]
   1400117c0:	mov    DWORD PTR [rbx+0x8],ecx
   1400117c3:	add    rsp,0x20
   1400117c7:	pop    rbx
   1400117c8:	ret    
   1400117c9:	cmp    ecx,r9d
   1400117cc:	jge    0x1400117d4
   1400117ce:	lea    eax,[rcx+0x1]
   1400117d1:	mov    DWORD PTR [rbx+0x8],eax
   1400117d4:	mov    eax,DWORD PTR [rbx+0x8]
   1400117d7:	dec    eax
   1400117d9:	cdqe   
   1400117db:	lea    rcx,[rax+rax*2]
   1400117df:	mov    rax,QWORD PTR [r8+0x10]
   1400117e3:	lea    rdx,[rax+rcx*8]
   1400117e7:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   1400117ec:	lea    rcx,[rdx+r8*1+0x8]
   1400117f1:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   1400117f6:	lea    rdx,[rsp+0x30]
   1400117fb:	call   QWORD PTR [rip+0xddcf]        # 0x14001f5d0
   140011801:	lea    rcx,[rsp+0x30]
   140011806:	xor    r8d,r8d
   140011809:	xor    edx,edx
   14001180b:	call   QWORD PTR [rip+0xd9bf]        # 0x14001f1d0
   140011811:	lea    rcx,[rsp+0x30]
   140011816:	mov    ebx,eax
   140011818:	call   QWORD PTR [rip+0xdd9a]        # 0x14001f5b8
   14001181e:	mov    eax,ebx
   140011820:	add    rsp,0x20
   140011824:	pop    rbx
   140011825:	ret    
   140011826:	int3   
   140011827:	int3   
   140011828:	int3   
   140011829:	int3   
   14001182a:	int3   
   14001182b:	int3   
   14001182c:	int3   
   14001182d:	int3   
   14001182e:	int3   
   14001182f:	int3   
   140011830:	rex push rbx
   140011832:	sub    rsp,0x20
   140011836:	mov    r8,QWORD PTR [rcx]
   140011839:	mov    rdx,rcx
   14001183c:	xor    ebx,ebx
   14001183e:	lea    r9,[rip+0xfffffffffffee7bb]        # 0x140000000
   140011845:	movsxd rcx,DWORD PTR [rdx+0x8]
   140011849:	cmp    ecx,DWORD PTR [r8+0x4]
   14001184d:	jl     0x140011853
   14001184f:	mov    eax,ebx
   140011851:	jmp    0x14001186a
   140011853:	lea    eax,[rcx+0x1]
   140011856:	lea    rcx,[rcx+rcx*2]
   14001185a:	mov    DWORD PTR [rdx+0x8],eax
   14001185d:	mov    rax,QWORD PTR [r8+0x10]
   140011861:	lea    rcx,[rax+rcx*8]
   140011865:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   14001186a:	sub    eax,0x3c
   14001186d:	cmp    eax,0x6f
   140011870:	ja     0x1400118d2
   140011872:	cdqe   
   140011874:	movzx  eax,BYTE PTR [r9+rax*1+0x11900]
   14001187d:	mov    ecx,DWORD PTR [r9+rax*4+0x118e4]
   140011885:	add    rcx,r9
   140011888:	jmp    rcx
   14001188a:	mov    rcx,rdx
   14001188d:	call   0x140011830
   140011892:	neg    eax
   140011894:	add    rsp,0x20
   140011898:	pop    rbx
   140011899:	ret    
   14001189a:	mov    rcx,rdx
   14001189d:	call   0x140011830
   1400118a2:	test   eax,eax
   1400118a4:	sete   bl
   1400118a7:	mov    eax,ebx
   1400118a9:	add    rsp,0x20
   1400118ad:	pop    rbx
   1400118ae:	ret    
   1400118af:	mov    rcx,rdx
   1400118b2:	call   0x140011830
   1400118b7:	not    eax
   1400118b9:	add    rsp,0x20
   1400118bd:	pop    rbx
   1400118be:	ret    
   1400118bf:	mov    eax,0x1
   1400118c4:	add    rsp,0x20
   1400118c8:	pop    rbx
   1400118c9:	ret    
   1400118ca:	xor    eax,eax
   1400118cc:	add    rsp,0x20
   1400118d0:	pop    rbx
   1400118d1:	ret    
   1400118d2:	dec    DWORD PTR [rdx+0x8]
   1400118d5:	mov    rcx,rdx
   1400118d8:	add    rsp,0x20
   1400118dc:	pop    rbx
   1400118dd:	jmp    0x140011760
   1400118e2:	xchg   ax,ax
   1400118e4:	sbb    BYTE PTR [r9],r8b
   1400118e7:	add    BYTE PTR [rdx-0x50fffee8],cl
   1400118ed:	sbb    BYTE PTR [rcx],al
   1400118ef:	add    BYTE PTR [rdx-0x40fffee8],bl
   1400118f5:	sbb    BYTE PTR [rcx],al
   1400118f7:	add    dl,cl
   1400118f9:	sbb    BYTE PTR [rcx],al
   1400118fb:	add    dl,dl
   1400118fd:	sbb    BYTE PTR [rcx],al
   1400118ff:	add    BYTE PTR [rax],al
   140011901:	add    DWORD PTR [rsi],eax
   140011903:	(bad)  
   140011904:	(bad)  
   140011905:	(bad)  
   140011906:	(bad)  
   140011907:	(bad)  
   140011908:	add    al,BYTE PTR [rbx]
   14001190a:	(bad)  
   14001190b:	(bad)  
   14001190c:	(bad)  
   14001190d:	(bad)  
   14001190e:	(bad)  
   14001190f:	(bad)  
   140011910:	(bad)  
   140011911:	(bad)  
   140011912:	(bad)  
   140011913:	(bad)  
   140011914:	(bad)  
   140011915:	(bad)  
   140011916:	(bad)  
   140011917:	(bad)  
   140011918:	(bad)  
   140011919:	(bad)  
   14001191a:	(bad)  
   14001191b:	(bad)  
   14001191c:	(bad)  
   14001191d:	(bad)  
   14001191e:	(bad)  
   14001191f:	(bad)  
   140011920:	(bad)  
   140011921:	(bad)  
   140011922:	(bad)  
   140011923:	(bad)  
   140011924:	(bad)  
   140011925:	(bad)  
   140011926:	(bad)  
   140011927:	(bad)  
   140011928:	(bad)  
   140011929:	(bad)  
   14001192a:	(bad)  
   14001192b:	(bad)  
   14001192c:	(bad)  
   14001192d:	(bad)  
   14001192e:	(bad)  
   14001192f:	(bad)  
   140011930:	(bad)  
   140011931:	(bad)  
   140011932:	(bad)  
   140011933:	(bad)  
   140011934:	(bad)  
   140011935:	(bad)  
   140011936:	(bad)  
   140011937:	(bad)  
   140011938:	(bad)  
   140011939:	(bad)  
   14001193a:	(bad)  
   14001193b:	(bad)  
   14001193c:	(bad)  
   14001193d:	(bad)  
   14001193e:	(bad)  
   14001193f:	(bad)  
   140011940:	(bad)  
   140011941:	(bad)  
   140011942:	(bad)  
   140011943:	(bad)  
   140011944:	(bad)  
   140011945:	(bad)  
   140011946:	(bad)  
   140011947:	(bad)  
   140011948:	(bad)  
   140011949:	(bad)  
   14001194a:	(bad)  
   14001194b:	(bad)  
   14001194c:	(bad)  
   14001194d:	(bad)  
   14001194e:	(bad)  
   14001194f:	(bad)  
   140011950:	(bad)  
   140011951:	(bad)  
   140011952:	(bad)  
   140011953:	(bad)  
   140011954:	(bad)  
   140011955:	(bad)  
   140011956:	(bad)  
   140011957:	(bad)  
   140011958:	(bad)  
   140011959:	(bad)  
   14001195a:	(bad)  
   14001195b:	(bad)  
   14001195c:	(bad)  
   14001195d:	(bad)  
   14001195e:	(bad)  
   14001195f:	(bad)  
   140011960:	(bad)  
   140011961:	(bad)  
   140011962:	(bad)  
   140011963:	(bad)  
   140011964:	(bad)  
   140011965:	(bad)  
   140011966:	(bad)  
   140011967:	(bad)  
   140011968:	(bad)  
   140011969:	(bad)  
   14001196a:	(bad)  
   14001196b:	(bad)  
   14001196c:	(bad)  
   14001196d:	(bad)  
   14001196e:	add    al,0x5
   140011970:	mov    QWORD PTR [rsp+0x8],rbx
   140011975:	push   rdi
   140011976:	sub    rsp,0x20
   14001197a:	mov    rax,QWORD PTR [rdx]
   14001197d:	mov    rbx,rcx
   140011980:	mov    rdi,rdx
   140011983:	mov    ecx,DWORD PTR [rax]
   140011985:	test   ecx,ecx
   140011987:	je     0x1400119a6
   140011989:	cmp    ecx,0xffffffff
   14001198c:	je     0x140011992
   14001198e:	lock add DWORD PTR [rax],0x1
   140011992:	mov    rax,QWORD PTR [rdx]
   140011995:	mov    QWORD PTR [rbx],rax
   140011998:	mov    rax,rbx
   14001199b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400119a0:	add    rsp,0x20
   1400119a4:	pop    rdi
   1400119a5:	ret    
   1400119a6:	mov    r8d,DWORD PTR [rax+0x8]
   1400119aa:	xor    r9d,r9d
   1400119ad:	bt     r8d,0x1f
   1400119b2:	lea    edx,[r9+0x8]
   1400119b6:	lea    ecx,[rdx+0x10]
   1400119b9:	jae    0x1400119d4
   1400119bb:	and    r8d,0x7fffffff
   1400119c2:	call   QWORD PTR [rip+0xdb50]        # 0x14001f518
   1400119c8:	mov    QWORD PTR [rbx],rax
   1400119cb:	or     DWORD PTR [rax+0x8],0x80000000
   1400119d2:	jmp    0x1400119e1
   1400119d4:	movsxd r8,DWORD PTR [rax+0x4]
   1400119d8:	call   QWORD PTR [rip+0xdb3a]        # 0x14001f518
   1400119de:	mov    QWORD PTR [rbx],rax
   1400119e1:	mov    rcx,QWORD PTR [rbx]
   1400119e4:	mov    eax,DWORD PTR [rcx+0x8]
   1400119e7:	btr    eax,0x1f
   1400119eb:	test   eax,eax
   1400119ed:	je     0x140011a25
   1400119ef:	mov    rax,QWORD PTR [rcx+0x10]
   1400119f3:	mov    rdx,QWORD PTR [rdi]
   1400119f6:	lea    r9,[rcx+rax*1]
   1400119fa:	movsxd rax,DWORD PTR [rdx+0x4]
   1400119fe:	lea    rcx,[rax+rax*2]
   140011a02:	mov    rax,QWORD PTR [rdx+0x10]
   140011a06:	lea    r8,[rax+rcx*8]
   140011a0a:	mov    rcx,rbx
   140011a0d:	add    r8,rdx
   140011a10:	add    rdx,rax
   140011a13:	call   0x1400111e0
   140011a18:	mov    r11,QWORD PTR [rdi]
   140011a1b:	mov    rcx,QWORD PTR [rbx]
   140011a1e:	mov    eax,DWORD PTR [r11+0x4]
   140011a22:	mov    DWORD PTR [rcx+0x4],eax
   140011a25:	mov    rax,rbx
   140011a28:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a2d:	add    rsp,0x20
   140011a31:	pop    rdi
   140011a32:	ret    
   140011a33:	int3   
   140011a34:	int3   
   140011a35:	int3   
   140011a36:	int3   
   140011a37:	int3   
   140011a38:	int3   
   140011a39:	int3   
   140011a3a:	int3   
   140011a3b:	int3   
   140011a3c:	int3   
   140011a3d:	int3   
   140011a3e:	int3   
   140011a3f:	int3   
   140011a40:	rex push rsi
   140011a42:	sub    rsp,0x20
   140011a46:	mov    rax,QWORD PTR [rcx]
   140011a49:	mov    rsi,rcx
   140011a4c:	cmp    QWORD PTR [rdx],rax
   140011a4f:	je     0x140011b1e
   140011a55:	lea    rcx,[rsp+0x30]
   140011a5a:	mov    QWORD PTR [rsp+0x38],rbx
   140011a5f:	call   0x140011970
   140011a64:	lea    r11,[rsp+0x30]
   140011a69:	cmp    r11,rsi
   140011a6c:	je     0x140011a80
   140011a6e:	mov    rax,QWORD PTR [rsp+0x30]
   140011a73:	mov    rbx,QWORD PTR [rsi]
   140011a76:	mov    QWORD PTR [rsp+0x30],rbx
   140011a7b:	mov    QWORD PTR [rsi],rax
   140011a7e:	jmp    0x140011a85
   140011a80:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a85:	mov    eax,DWORD PTR [rbx]
   140011a87:	test   eax,eax
   140011a89:	je     0x140011aa4
   140011a8b:	cmp    eax,0xffffffff
   140011a8e:	je     0x140011b10
   140011a94:	lock add DWORD PTR [rbx],0xffffffff
   140011a98:	setne  al
   140011a9b:	test   al,al
   140011a9d:	jne    0x140011b10
   140011a9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140011aa4:	mov    rdx,QWORD PTR [rbx+0x10]
   140011aa8:	movsxd rax,DWORD PTR [rbx+0x4]
   140011aac:	mov    QWORD PTR [rsp+0x40],rbp
   140011ab1:	lea    rcx,[rax+rax*2]
   140011ab5:	mov    QWORD PTR [rsp+0x48],rdi
   140011aba:	lea    rdi,[rdx+rbx*1]
   140011abe:	lea    rbp,[rdx+rcx*8]
   140011ac2:	add    rbp,rbx
   140011ac5:	cmp    rdi,rbp
   140011ac8:	je     0x140011ae6
   140011aca:	nop    WORD PTR [rax+rax*1+0x0]
   140011ad0:	mov    rcx,rdi
   140011ad3:	add    rdi,0x18
   140011ad7:	add    rcx,0x8
   140011adb:	call   QWORD PTR [rip+0xdad7]        # 0x14001f5b8
   140011ae1:	cmp    rdi,rbp
   140011ae4:	jne    0x140011ad0
   140011ae6:	mov    edx,0x18
   140011aeb:	mov    rcx,rbx
   140011aee:	lea    r8d,[rdx-0x10]
   140011af2:	call   QWORD PTR [rip+0xda18]        # 0x14001f510
   140011af8:	mov    rdi,QWORD PTR [rsp+0x48]
   140011afd:	mov    rbp,QWORD PTR [rsp+0x40]
   140011b02:	mov    rbx,QWORD PTR [rsp+0x38]
   140011b07:	mov    rax,rsi
   140011b0a:	add    rsp,0x20
   140011b0e:	pop    rsi
   140011b0f:	ret    
   140011b10:	mov    rax,rsi
   140011b13:	mov    rbx,QWORD PTR [rsp+0x38]
   140011b18:	add    rsp,0x20
   140011b1c:	pop    rsi
   140011b1d:	ret    
   140011b1e:	mov    rax,rcx
   140011b21:	add    rsp,0x20
   140011b25:	pop    rsi
   140011b26:	ret    
   140011b27:	int3   
   140011b28:	int3   
   140011b29:	int3   
   140011b2a:	int3   
   140011b2b:	int3   
   140011b2c:	int3   
   140011b2d:	int3   
   140011b2e:	int3   
   140011b2f:	int3   
   140011b30:	mov    rax,rsp
   140011b33:	mov    DWORD PTR [rax+0x10],edx
   140011b36:	push   rbx
   140011b37:	push   rdi
   140011b38:	sub    rsp,0x38
   140011b3c:	mov    QWORD PTR [rax+0x8],rbp
   140011b40:	mov    QWORD PTR [rax+0x20],rsi
   140011b44:	movsxd rsi,DWORD PTR [rcx+0x4]
   140011b48:	mov    QWORD PTR [rax-0x18],r12
   140011b4c:	mov    QWORD PTR [rax-0x28],r14
   140011b50:	mov    r14,QWORD PTR [rcx+0x8]
   140011b54:	mov    DWORD PTR [rax+0x18],esi
   140011b57:	mov    rdi,rcx
   140011b5a:	cmp    edx,esi
   140011b5c:	lea    rax,[rax+0x10]
   140011b60:	lea    rcx,[rsp+0x60]
   140011b65:	movsxd rbp,r8d
   140011b68:	cmovge rax,rcx
   140011b6c:	mov    ebx,edx
   140011b6e:	movsxd r12,DWORD PTR [rax]
   140011b71:	cmp    ebp,DWORD PTR [rdi]
   140011b73:	je     0x140011bb7
   140011b75:	cmp    ebp,0x5
   140011b78:	jle    0x140011b8f
   140011b7a:	mov    rcx,rbp
   140011b7d:	shl    rcx,0x3
   140011b81:	call   QWORD PTR [rip+0xd5c1]        # 0x14001f148
   140011b87:	mov    DWORD PTR [rdi],ebp
   140011b89:	mov    QWORD PTR [rdi+0x8],rax
   140011b8d:	jmp    0x140011b9d
   140011b8f:	lea    rax,[rdi+0x10]
   140011b93:	mov    DWORD PTR [rdi],0x5
   140011b99:	mov    QWORD PTR [rdi+0x8],rax
   140011b9d:	mov    rcx,QWORD PTR [rdi+0x8]
   140011ba1:	mov    r8,r12
   140011ba4:	mov    rdx,r14
   140011ba7:	shl    r8,0x3
   140011bab:	mov    DWORD PTR [rdi+0x4],0x0
   140011bb2:	call   0x14001e1cc
   140011bb7:	cmp    esi,ebx
   140011bb9:	mov    DWORD PTR [rdi+0x4],r12d
   140011bbd:	jle    0x140011c48
   140011bc3:	lea    rbp,[r14+rsi*8]
   140011bc7:	sub    esi,ebx
   140011bc9:	mov    QWORD PTR [rsp+0x28],r13
   140011bce:	mov    r13d,esi
   140011bd1:	mov    rcx,QWORD PTR [rbp-0x8]
   140011bd5:	sub    rbp,0x8
   140011bd9:	mov    eax,DWORD PTR [rcx]
   140011bdb:	test   eax,eax
   140011bdd:	je     0x140011bef
   140011bdf:	cmp    eax,0xffffffff
   140011be2:	je     0x140011c39
   140011be4:	lock add DWORD PTR [rcx],0xffffffff
   140011be8:	setne  al
   140011beb:	test   al,al
   140011bed:	jne    0x140011c39
   140011bef:	mov    r12,QWORD PTR [rbp+0x0]
   140011bf3:	mov    rdx,QWORD PTR [r12+0x10]
   140011bf8:	movsxd rax,DWORD PTR [r12+0x4]
   140011bfd:	lea    rcx,[rax+rax*2]
   140011c01:	lea    rbx,[rdx+r12*1]
   140011c05:	lea    rsi,[rdx+rcx*8]
   140011c09:	add    rsi,r12
   140011c0c:	cmp    rbx,rsi
   140011c0f:	je     0x140011c27
   140011c11:	mov    rcx,rbx
   140011c14:	add    rbx,0x18
   140011c18:	add    rcx,0x8
   140011c1c:	call   QWORD PTR [rip+0xd996]        # 0x14001f5b8
   140011c22:	cmp    rbx,rsi
   140011c25:	jne    0x140011c11
   140011c27:	mov    edx,0x18
   140011c2c:	mov    rcx,r12
   140011c2f:	lea    r8d,[rdx-0x10]
   140011c33:	call   QWORD PTR [rip+0xd8d7]        # 0x14001f510
   140011c39:	sub    r13,0x1
   140011c3d:	jne    0x140011bd1
   140011c3f:	mov    ebx,DWORD PTR [rsp+0x58]
   140011c43:	mov    r13,QWORD PTR [rsp+0x28]
   140011c48:	mov    r12,QWORD PTR [rsp+0x30]
   140011c4d:	mov    rsi,QWORD PTR [rsp+0x68]
   140011c52:	mov    rbp,QWORD PTR [rsp+0x50]
   140011c57:	lea    rax,[rdi+0x10]
   140011c5b:	cmp    r14,rax
   140011c5e:	je     0x140011c6f
   140011c60:	cmp    r14,QWORD PTR [rdi+0x8]
   140011c64:	je     0x140011c6f
   140011c66:	mov    rcx,r14
   140011c69:	call   QWORD PTR [rip+0xd4d1]        # 0x14001f140
   140011c6f:	cmp    DWORD PTR [rdi+0x4],ebx
   140011c72:	mov    r14,QWORD PTR [rsp+0x20]
   140011c77:	jge    0x140011ca6
   140011c79:	nop    DWORD PTR [rax+0x0]
   140011c80:	movsxd rdx,DWORD PTR [rdi+0x4]
   140011c84:	mov    rax,QWORD PTR [rdi+0x8]
   140011c88:	lea    r8,[rax+rdx*8]
   140011c8c:	lea    eax,[rdx+0x1]
   140011c8f:	mov    DWORD PTR [rdi+0x4],eax
   140011c92:	test   r8,r8
   140011c95:	je     0x140011ca1
   140011c97:	mov    rax,QWORD PTR [rip+0xd892]        # 0x14001f530
   140011c9e:	mov    QWORD PTR [r8],rax
   140011ca1:	cmp    DWORD PTR [rdi+0x4],ebx
   140011ca4:	jl     0x140011c80
   140011ca6:	add    rsp,0x38
   140011caa:	pop    rdi
   140011cab:	pop    rbx
   140011cac:	ret    
   140011cad:	int3   
   140011cae:	int3   
   140011caf:	int3   
   140011cb0:	mov    DWORD PTR [rsp+0x18],r8d
   140011cb5:	push   rbp
   140011cb6:	push   rsi
   140011cb7:	push   r15
   140011cb9:	sub    rsp,0x30
   140011cbd:	mov    rsi,QWORD PTR [rcx]
   140011cc0:	mov    QWORD PTR [rsp+0x20],r14
   140011cc5:	mov    rbp,rcx
   140011cc8:	mov    eax,DWORD PTR [rsi]
   140011cca:	movsxd r14,edx
   140011ccd:	cmp    eax,0x1
   140011cd0:	je     0x140011cdb
   140011cd2:	test   eax,eax
   140011cd4:	je     0x140011cdb
   140011cd6:	mov    r15b,0x1
   140011cd9:	jmp    0x140011cde
   140011cdb:	xor    r15b,r15b
   140011cde:	test   r8d,r8d
   140011ce1:	je     0x140011edb
   140011ce7:	mov    eax,DWORD PTR [rsi+0x8]
   140011cea:	btr    eax,0x1f
   140011cee:	cmp    r8d,eax
   140011cf1:	jne    0x140011d66
   140011cf3:	test   r15b,r15b
   140011cf6:	jne    0x140011d66
   140011cf8:	cmp    r14d,DWORD PTR [rsi+0x4]
   140011cfc:	jg     0x140011d32
   140011cfe:	mov    rdx,QWORD PTR [rsi+0x10]
   140011d02:	movsxd rax,DWORD PTR [rsi+0x4]
   140011d06:	lea    rcx,[rax+rax*2]
   140011d0a:	lea    r8,[rdx+rcx*8]
   140011d0e:	lea    rcx,[r14+r14*2]
   140011d12:	lea    rdx,[rdx+rcx*8]
   140011d16:	add    r8,rsi
   140011d19:	mov    rcx,rbp
   140011d1c:	add    rdx,rsi
   140011d1f:	call   0x140011260
   140011d24:	mov    r8d,DWORD PTR [rsp+0x60]
   140011d29:	mov    DWORD PTR [rsi+0x4],r14d
   140011d2d:	jmp    0x140011ee2
   140011d32:	mov    rdx,QWORD PTR [rsi+0x10]
   140011d36:	movsxd rax,DWORD PTR [rsi+0x4]
   140011d3a:	lea    rcx,[r14+r14*2]
   140011d3e:	lea    r8,[rdx+rcx*8]
   140011d42:	lea    rcx,[rax+rax*2]
   140011d46:	lea    rdx,[rdx+rcx*8]
   140011d4a:	add    r8,rsi
   140011d4d:	mov    rcx,rbp
   140011d50:	add    rdx,rsi
   140011d53:	call   0x1400112a0
   140011d58:	mov    r8d,DWORD PTR [rsp+0x60]
   140011d5d:	mov    DWORD PTR [rsi+0x4],r14d
   140011d61:	jmp    0x140011ee2
   140011d66:	mov    edx,0x8
   140011d6b:	mov    QWORD PTR [rsp+0x58],rdi
   140011d70:	movsxd r8,r8d
   140011d73:	lea    ecx,[rdx+0x10]
   140011d76:	mov    QWORD PTR [rsp+0x68],r12
   140011d7b:	mov    QWORD PTR [rsp+0x28],r13
   140011d80:	call   QWORD PTR [rip+0xd792]        # 0x14001f518
   140011d86:	mov    rsi,rax
   140011d89:	mov    DWORD PTR [rax+0x4],r14d
   140011d8d:	mov    r8,QWORD PTR [rbp+0x0]
   140011d91:	cmp    r14d,DWORD PTR [r8+0x4]
   140011d95:	mov    rcx,QWORD PTR [r8+0x10]
   140011d99:	lea    rdi,[r8+rcx*1]
   140011d9d:	jle    0x140011db4
   140011d9f:	movsxd rcx,DWORD PTR [r8+0x4]
   140011da3:	lea    rdx,[rcx+rcx*2]
   140011da7:	mov    rcx,QWORD PTR [r8+0x10]
   140011dab:	lea    r13,[rcx+rdx*8]
   140011daf:	add    r13,r8
   140011db2:	jmp    0x140011dc3
   140011db4:	mov    rax,QWORD PTR [r8+0x10]
   140011db8:	lea    rcx,[r14+r14*2]
   140011dbc:	lea    r13,[rax+rcx*8]
   140011dc0:	add    r13,r8
   140011dc3:	mov    rax,QWORD PTR [rsi+0x10]
   140011dc7:	mov    QWORD PTR [rsp+0x50],rbx
   140011dcc:	lea    r12,[rsi+rax*1]
   140011dd0:	test   r15b,r15b
   140011dd3:	je     0x140011e1d
   140011dd5:	cmp    rdi,r13
   140011dd8:	je     0x140011e84
   140011dde:	xchg   ax,ax
   140011de0:	mov    rbx,r12
   140011de3:	add    r12,0x18
   140011de7:	test   rbx,rbx
   140011dea:	je     0x140011e16
   140011dec:	mov    eax,DWORD PTR [rdi]
   140011dee:	lea    rdx,[rdi+0x8]
   140011df2:	lea    rcx,[rbx+0x8]
   140011df6:	mov    DWORD PTR [rbx],eax
   140011df8:	mov    eax,DWORD PTR [rdi+0x4]
   140011dfb:	mov    DWORD PTR [rbx+0x4],eax
   140011dfe:	call   QWORD PTR [rip+0xd7d4]        # 0x14001f5d8
   140011e04:	mov    r11d,DWORD PTR [rdi+0x10]
   140011e08:	mov    DWORD PTR [rbx+0x10],r11d
   140011e0c:	mov    eax,DWORD PTR [rdi+0x14]
   140011e0f:	add    rdi,0x18
   140011e13:	mov    DWORD PTR [rbx+0x14],eax
   140011e16:	cmp    rdi,r13
   140011e19:	jne    0x140011de0
   140011e1b:	jmp    0x140011e84
   140011e1d:	sub    r13,rdi
   140011e20:	movabs rax,0x2aaaaaaaaaaaaaab
   140011e2a:	mov    rcx,r12
   140011e2d:	imul   r13
   140011e30:	sar    rdx,0x2
   140011e34:	mov    rax,rdx
   140011e37:	shr    rax,0x3f
   140011e3b:	add    rdx,rax
   140011e3e:	lea    rbx,[rdx+rdx*2]
   140011e42:	mov    rdx,rdi
   140011e45:	shl    rbx,0x3
   140011e49:	mov    r8,rbx
   140011e4c:	call   0x14001e1cc
   140011e51:	mov    r9,QWORD PTR [rbp+0x0]
   140011e55:	add    r12,rbx
   140011e58:	cmp    r14d,DWORD PTR [r9+0x4]
   140011e5c:	jge    0x140011e84
   140011e5e:	movsxd rax,DWORD PTR [r9+0x4]
   140011e62:	lea    rcx,[rax+rax*2]
   140011e66:	mov    rax,QWORD PTR [r9+0x10]
   140011e6a:	lea    r8,[rax+rcx*8]
   140011e6e:	lea    rcx,[r14+r14*2]
   140011e72:	lea    rdx,[rax+rcx*8]
   140011e76:	add    r8,r9
   140011e79:	mov    rcx,rbp
   140011e7c:	add    rdx,r9
   140011e7f:	call   0x140011260
   140011e84:	mov    rax,QWORD PTR [rbp+0x0]
   140011e88:	mov    r13,QWORD PTR [rsp+0x28]
   140011e8d:	mov    rdi,QWORD PTR [rsp+0x58]
   140011e92:	cmp    r14d,DWORD PTR [rax+0x4]
   140011e96:	mov    rbx,QWORD PTR [rsp+0x50]
   140011e9b:	jle    0x140011ebb
   140011e9d:	movsxd rax,DWORD PTR [rsi+0x4]
   140011ea1:	mov    rdx,r12
   140011ea4:	lea    rcx,[rax+rax*2]
   140011ea8:	mov    rax,QWORD PTR [rsi+0x10]
   140011eac:	lea    r8,[rax+rcx*8]
   140011eb0:	mov    rcx,rbp
   140011eb3:	add    r8,rsi
   140011eb6:	call   0x1400112a0
   140011ebb:	mov    rax,QWORD PTR [rbp+0x0]
   140011ebf:	mov    r8d,DWORD PTR [rsp+0x60]
   140011ec4:	mov    r12,QWORD PTR [rsp+0x68]
   140011ec9:	mov    ecx,DWORD PTR [rax+0x8]
   140011ecc:	xor    ecx,DWORD PTR [rsi+0x8]
   140011ecf:	btr    ecx,0x1f
   140011ed3:	xor    ecx,DWORD PTR [rax+0x8]
   140011ed6:	mov    DWORD PTR [rsi+0x8],ecx
   140011ed9:	jmp    0x140011ee2
   140011edb:	mov    rsi,QWORD PTR [rip+0xd64e]        # 0x14001f530
   140011ee2:	mov    rcx,QWORD PTR [rbp+0x0]
   140011ee6:	mov    r14,QWORD PTR [rsp+0x20]
   140011eeb:	cmp    rcx,rsi
   140011eee:	je     0x140011f40
   140011ef0:	mov    eax,DWORD PTR [rcx]
   140011ef2:	test   eax,eax
   140011ef4:	je     0x140011f06
   140011ef6:	cmp    eax,0xffffffff
   140011ef9:	je     0x140011f3c
   140011efb:	lock add DWORD PTR [rcx],0xffffffff
   140011eff:	setne  al
   140011f02:	test   al,al
   140011f04:	jne    0x140011f3c
   140011f06:	test   r8d,r8d
   140011f09:	je     0x140011f30
   140011f0b:	test   r15b,r15b
   140011f0e:	jne    0x140011f30
   140011f10:	mov    rcx,QWORD PTR [rbp+0x0]
   140011f14:	mov    edx,0x18
   140011f19:	lea    r8d,[rdx-0x10]
   140011f1d:	call   QWORD PTR [rip+0xd5ed]        # 0x14001f510
   140011f23:	mov    QWORD PTR [rbp+0x0],rsi
   140011f27:	add    rsp,0x30
   140011f2b:	pop    r15
   140011f2d:	pop    rsi
   140011f2e:	pop    rbp
   140011f2f:	ret    
   140011f30:	mov    rdx,QWORD PTR [rbp+0x0]
   140011f34:	mov    rcx,rbp
   140011f37:	call   0x1400114d0
   140011f3c:	mov    QWORD PTR [rbp+0x0],rsi
   140011f40:	add    rsp,0x30
   140011f44:	pop    r15
   140011f46:	pop    rsi
   140011f47:	pop    rbp
   140011f48:	ret    
   140011f49:	int3   
   140011f4a:	int3   
   140011f4b:	int3   
   140011f4c:	int3   
   140011f4d:	int3   
   140011f4e:	int3   
   140011f4f:	int3   
   140011f50:	mov    QWORD PTR [rsp+0x8],rbx
   140011f55:	mov    QWORD PTR [rsp+0x10],rsi
   140011f5a:	push   rdi
   140011f5b:	sub    rsp,0x20
   140011f5f:	mov    rbx,rcx
   140011f62:	call   0x140011830
   140011f67:	mov    rdx,QWORD PTR [rbx]
   140011f6a:	movsxd rcx,DWORD PTR [rbx+0x8]
   140011f6e:	xor    edi,edi
   140011f70:	mov    esi,eax
   140011f72:	cmp    ecx,DWORD PTR [rdx+0x4]
   140011f75:	jl     0x140011f7b
   140011f77:	mov    edx,edi
   140011f79:	jmp    0x140011f91
   140011f7b:	lea    eax,[rcx+0x1]
   140011f7e:	lea    rcx,[rcx+rcx*2]
   140011f82:	mov    DWORD PTR [rbx+0x8],eax
   140011f85:	mov    rax,QWORD PTR [rdx+0x10]
   140011f89:	lea    rcx,[rax+rcx*8]
   140011f8d:	mov    edx,DWORD PTR [rcx+rdx*1+0x4]
   140011f91:	sub    edx,0x3e
   140011f94:	je     0x140012007
   140011f96:	sub    edx,0x1
   140011f99:	je     0x140011fde
   140011f9b:	cmp    edx,0x1
   140011f9e:	je     0x140011fb5
   140011fa0:	dec    DWORD PTR [rbx+0x8]
   140011fa3:	mov    eax,esi
   140011fa5:	mov    rbx,QWORD PTR [rsp+0x30]
   140011faa:	mov    rsi,QWORD PTR [rsp+0x38]
   140011faf:	add    rsp,0x20
   140011fb3:	pop    rdi
   140011fb4:	ret    
   140011fb5:	mov    rcx,rbx
   140011fb8:	call   0x140011f50
   140011fbd:	mov    r11d,eax
   140011fc0:	test   eax,eax
   140011fc2:	je     0x140011fcc
   140011fc4:	mov    eax,esi
   140011fc6:	cdq    
   140011fc7:	idiv   r11d
   140011fca:	mov    edi,edx
   140011fcc:	mov    eax,edi
   140011fce:	mov    rbx,QWORD PTR [rsp+0x30]
   140011fd3:	mov    rsi,QWORD PTR [rsp+0x38]
   140011fd8:	add    rsp,0x20
   140011fdc:	pop    rdi
   140011fdd:	ret    
   140011fde:	mov    rcx,rbx
   140011fe1:	call   0x140011f50
   140011fe6:	mov    r11d,eax
   140011fe9:	test   eax,eax
   140011feb:	je     0x140011ff5
   140011fed:	mov    eax,esi
   140011fef:	cdq    
   140011ff0:	idiv   r11d
   140011ff3:	mov    edi,eax
   140011ff5:	mov    eax,edi
   140011ff7:	mov    rbx,QWORD PTR [rsp+0x30]
   140011ffc:	mov    rsi,QWORD PTR [rsp+0x38]
   140012001:	add    rsp,0x20
   140012005:	pop    rdi
   140012006:	ret    
   140012007:	mov    rcx,rbx
   14001200a:	call   0x140011f50
   14001200f:	mov    rbx,QWORD PTR [rsp+0x30]
   140012014:	imul   eax,esi
   140012017:	mov    rsi,QWORD PTR [rsp+0x38]
   14001201c:	add    rsp,0x20
   140012020:	pop    rdi
   140012021:	ret    
   140012022:	int3   
   140012023:	int3   
   140012024:	int3   
   140012025:	int3   
   140012026:	int3   
   140012027:	int3   
   140012028:	int3   
   140012029:	int3   
   14001202a:	int3   
   14001202b:	int3   
   14001202c:	int3   
   14001202d:	int3   
   14001202e:	int3   
   14001202f:	int3   
   140012030:	sub    rsp,0x28
   140012034:	mov    rdx,QWORD PTR [rcx+0x8]
   140012038:	movsxd rax,DWORD PTR [rcx+0x4]
   14001203c:	mov    QWORD PTR [rsp+0x38],rbp
   140012041:	mov    QWORD PTR [rsp+0x48],rdi
   140012046:	lea    rdi,[rdx+rax*8]
   14001204a:	mov    rbp,rcx
   14001204d:	cmp    rdi,rdx
   140012050:	je     0x1400120ed
   140012056:	mov    QWORD PTR [rsp+0x30],rbx
   14001205b:	mov    QWORD PTR [rsp+0x40],rsi
   140012060:	mov    QWORD PTR [rsp+0x20],r12
   140012065:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140012070:	mov    rcx,QWORD PTR [rdi-0x8]
   140012074:	sub    rdi,0x8
   140012078:	mov    eax,DWORD PTR [rcx]
   14001207a:	test   eax,eax
   14001207c:	je     0x14001208e
   14001207e:	cmp    eax,0xffffffff
   140012081:	je     0x1400120d8
   140012083:	lock add DWORD PTR [rcx],0xffffffff
   140012087:	setne  al
   14001208a:	test   al,al
   14001208c:	jne    0x1400120d8
   14001208e:	mov    r12,QWORD PTR [rdi]
   140012091:	mov    rdx,QWORD PTR [r12+0x10]
   140012096:	movsxd rax,DWORD PTR [r12+0x4]
   14001209b:	lea    rcx,[rax+rax*2]
   14001209f:	lea    rbx,[rdx+r12*1]
   1400120a3:	lea    rsi,[rdx+rcx*8]
   1400120a7:	add    rsi,r12
   1400120aa:	cmp    rbx,rsi
   1400120ad:	je     0x1400120c6
   1400120af:	nop
   1400120b0:	mov    rcx,rbx
   1400120b3:	add    rbx,0x18
   1400120b7:	add    rcx,0x8
   1400120bb:	call   QWORD PTR [rip+0xd4f7]        # 0x14001f5b8
   1400120c1:	cmp    rbx,rsi
   1400120c4:	jne    0x1400120b0
   1400120c6:	mov    edx,0x18
   1400120cb:	mov    rcx,r12
   1400120ce:	lea    r8d,[rdx-0x10]
   1400120d2:	call   QWORD PTR [rip+0xd438]        # 0x14001f510
   1400120d8:	cmp    rdi,QWORD PTR [rbp+0x8]
   1400120dc:	jne    0x140012070
   1400120de:	mov    r12,QWORD PTR [rsp+0x20]
   1400120e3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400120e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400120ed:	mov    rcx,QWORD PTR [rbp+0x8]
   1400120f1:	mov    rdi,QWORD PTR [rsp+0x48]
   1400120f6:	lea    rax,[rbp+0x10]
   1400120fa:	mov    rbp,QWORD PTR [rsp+0x38]
   1400120ff:	cmp    rcx,rax
   140012102:	je     0x14001210a
   140012104:	call   QWORD PTR [rip+0xd036]        # 0x14001f140
   14001210a:	add    rsp,0x28
   14001210e:	ret    
   14001210f:	int3   
   140012110:	rex push rbx
   140012112:	sub    rsp,0x20
   140012116:	mov    rdx,QWORD PTR [rcx]
   140012119:	mov    rbx,rcx
   14001211c:	mov    eax,DWORD PTR [rdx]
   14001211e:	cmp    eax,0x1
   140012121:	je     0x14001215d
   140012123:	test   eax,eax
   140012125:	je     0x14001215d
   140012127:	mov    r8d,DWORD PTR [rdx+0x8]
   14001212b:	btr    r8d,0x1f
   140012130:	test   r8d,r8d
   140012133:	jne    0x140012152
   140012135:	lea    r9d,[r8+0x2]
   140012139:	xor    r8d,r8d
   14001213c:	lea    edx,[r9+0x6]
   140012140:	lea    ecx,[rdx+0x10]
   140012143:	call   QWORD PTR [rip+0xd3cf]        # 0x14001f518
   140012149:	mov    QWORD PTR [rbx],rax
   14001214c:	add    rsp,0x20
   140012150:	pop    rbx
   140012151:	ret    
   140012152:	mov    edx,DWORD PTR [rdx+0x4]
   140012155:	xor    r9d,r9d
   140012158:	call   0x140011cb0
   14001215d:	add    rsp,0x20
   140012161:	pop    rbx
   140012162:	ret    
   140012163:	int3   
   140012164:	int3   
   140012165:	int3   
   140012166:	int3   
   140012167:	int3   
   140012168:	int3   
   140012169:	int3   
   14001216a:	int3   
   14001216b:	int3   
   14001216c:	int3   
   14001216d:	int3   
   14001216e:	int3   
   14001216f:	int3   
   140012170:	mov    QWORD PTR [rsp+0x8],rbx
   140012175:	mov    QWORD PTR [rsp+0x10],rsi
   14001217a:	push   rdi
   14001217b:	sub    rsp,0x40
   14001217f:	mov    r9,QWORD PTR [rcx]
   140012182:	mov    rdi,rdx
   140012185:	mov    rbx,rcx
   140012188:	mov    r8d,DWORD PTR [r9+0x8]
   14001218c:	mov    eax,DWORD PTR [r9+0x4]
   140012190:	inc    eax
   140012192:	btr    r8d,0x1f
   140012197:	cmp    eax,r8d
   14001219a:	mov    eax,DWORD PTR [r9]
   14001219d:	seta   sil
   1400121a1:	cmp    eax,0x1
   1400121a4:	je     0x1400121aa
   1400121a6:	test   eax,eax
   1400121a8:	jne    0x1400121d2
   1400121aa:	test   sil,sil
   1400121ad:	jne    0x1400121d2
   1400121af:	movsxd rax,DWORD PTR [r9+0x4]
   1400121b3:	lea    rcx,[rax+rax*2]
   1400121b7:	mov    rax,QWORD PTR [r9+0x10]
   1400121bb:	lea    rcx,[rax+rcx*8]
   1400121bf:	add    rcx,r9
   1400121c2:	je     0x14001227f
   1400121c8:	call   0x140011190
   1400121cd:	jmp    0x14001227f
   1400121d2:	mov    eax,DWORD PTR [rdx]
   1400121d4:	lea    rcx,[rsp+0x28]
   1400121d9:	add    rdx,0x8
   1400121dd:	mov    DWORD PTR [rsp+0x20],eax
   1400121e1:	mov    eax,DWORD PTR [rdx-0x4]
   1400121e4:	mov    DWORD PTR [rsp+0x24],eax
   1400121e8:	call   QWORD PTR [rip+0xd3ea]        # 0x14001f5d8
   1400121ee:	mov    eax,DWORD PTR [rdi+0x14]
   1400121f1:	mov    r11d,DWORD PTR [rdi+0x10]
   1400121f5:	mov    DWORD PTR [rsp+0x34],eax
   1400121f9:	movzx  eax,sil
   1400121fd:	neg    al
   1400121ff:	mov    rax,QWORD PTR [rbx]
   140012202:	mov    DWORD PTR [rsp+0x30],r11d
   140012207:	sbb    r9d,r9d
   14001220a:	and    r9d,0x8
   14001220e:	test   sil,sil
   140012211:	je     0x14001221c
   140012213:	mov    r8d,DWORD PTR [rax+0x4]
   140012217:	inc    r8d
   14001221a:	jmp    0x140012225
   14001221c:	mov    r8d,DWORD PTR [rax+0x8]
   140012220:	btr    r8d,0x1f
   140012225:	mov    edx,DWORD PTR [rax+0x4]
   140012228:	mov    rcx,rbx
   14001222b:	call   0x140011cb0
   140012230:	mov    r11,QWORD PTR [rbx]
   140012233:	movsxd rax,DWORD PTR [r11+0x4]
   140012237:	lea    rcx,[rax+rax*2]
   14001223b:	mov    rax,QWORD PTR [r11+0x10]
   14001223f:	lea    rdi,[rax+rcx*8]
   140012243:	add    rdi,r11
   140012246:	je     0x140012274
   140012248:	mov    eax,DWORD PTR [rsp+0x20]
   14001224c:	lea    rcx,[rdi+0x8]
   140012250:	lea    rdx,[rsp+0x28]
   140012255:	mov    DWORD PTR [rdi],eax
   140012257:	mov    eax,DWORD PTR [rsp+0x24]
   14001225b:	mov    DWORD PTR [rdi+0x4],eax
   14001225e:	call   QWORD PTR [rip+0xd374]        # 0x14001f5d8
   140012264:	mov    r11d,DWORD PTR [rsp+0x30]
   140012269:	mov    DWORD PTR [rdi+0x10],r11d
   14001226d:	mov    eax,DWORD PTR [rsp+0x34]
   140012271:	mov    DWORD PTR [rdi+0x14],eax
   140012274:	lea    rcx,[rsp+0x28]
   140012279:	call   QWORD PTR [rip+0xd339]        # 0x14001f5b8
   14001227f:	mov    rax,QWORD PTR [rbx]
   140012282:	mov    rsi,QWORD PTR [rsp+0x58]
   140012287:	mov    rbx,QWORD PTR [rsp+0x50]
   14001228c:	inc    DWORD PTR [rax+0x4]
   14001228f:	add    rsp,0x40
   140012293:	pop    rdi
   140012294:	ret    
   140012295:	int3   
   140012296:	int3   
   140012297:	int3   
   140012298:	int3   
   140012299:	int3   
   14001229a:	int3   
   14001229b:	int3   
   14001229c:	int3   
   14001229d:	int3   
   14001229e:	int3   
   14001229f:	int3   
   1400122a0:	rex push rsi
   1400122a2:	push   r13
   1400122a4:	sub    rsp,0x28
   1400122a8:	sub    r8,rdx
   1400122ab:	movabs r10,0x2aaaaaaaaaaaaaab
   1400122b5:	mov    r9,rdx
   1400122b8:	mov    rax,r10
   1400122bb:	mov    rsi,rcx
   1400122be:	imul   r8
   1400122c1:	mov    r13,rdx
   1400122c4:	sar    r13,0x2
   1400122c8:	mov    rax,r13
   1400122cb:	shr    rax,0x3f
   1400122cf:	add    r13,rax
   1400122d2:	test   r13d,r13d
   1400122d5:	jne    0x1400122e2
   1400122d7:	mov    rax,r9
   1400122da:	add    rsp,0x28
   1400122de:	pop    r13
   1400122e0:	pop    rsi
   1400122e1:	ret    
   1400122e2:	mov    rcx,QWORD PTR [rcx]
   1400122e5:	mov    QWORD PTR [rsp+0x48],rbp
   1400122ea:	mov    rax,r10
   1400122ed:	sub    r9,QWORD PTR [rcx+0x10]
   1400122f1:	sub    r9,rcx
   1400122f4:	imul   r9
   1400122f7:	mov    rbp,rdx
   1400122fa:	sar    rbp,0x2
   1400122fe:	mov    rax,rbp
   140012301:	shr    rax,0x3f
   140012305:	add    rbp,rax
   140012308:	mov    eax,DWORD PTR [rcx+0x8]
   14001230b:	btr    eax,0x1f
   14001230f:	test   eax,eax
   140012311:	je     0x1400123ad
   140012317:	mov    QWORD PTR [rsp+0x40],rbx
   14001231c:	mov    rcx,rsi
   14001231f:	mov    QWORD PTR [rsp+0x50],rdi
   140012324:	mov    QWORD PTR [rsp+0x20],r12
   140012329:	call   0x140012110
   14001232e:	mov    r11,QWORD PTR [rsi]
   140012331:	movsxd rax,ebp
   140012334:	lea    rcx,[rax+rax*2]
   140012338:	mov    rax,QWORD PTR [r11+0x10]
   14001233c:	lea    r12,[rax+rcx*8]
   140012340:	movsxd rax,r13d
   140012343:	add    r12,r11
   140012346:	lea    rcx,[rax+rax*2]
   14001234a:	lea    rdi,[r12+rcx*8]
   14001234e:	mov    rbx,r12
   140012351:	cmp    r12,rdi
   140012354:	je     0x140012376
   140012356:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012360:	mov    rcx,rbx
   140012363:	add    rbx,0x18
   140012367:	add    rcx,0x8
   14001236b:	call   QWORD PTR [rip+0xd247]        # 0x14001f5b8
   140012371:	cmp    rbx,rdi
   140012374:	jne    0x140012360
   140012376:	mov    rax,QWORD PTR [rsi]
   140012379:	mov    rdx,rdi
   14001237c:	mov    rcx,r12
   14001237f:	mov    eax,DWORD PTR [rax+0x4]
   140012382:	sub    eax,ebp
   140012384:	sub    eax,r13d
   140012387:	cdqe   
   140012389:	lea    r8,[rax+rax*2]
   14001238d:	shl    r8,0x3
   140012391:	call   QWORD PTR [rip+0xcda1]        # 0x14001f138
   140012397:	mov    r11,QWORD PTR [rsi]
   14001239a:	mov    r12,QWORD PTR [rsp+0x20]
   14001239f:	sub    DWORD PTR [r11+0x4],r13d
   1400123a3:	mov    rdi,QWORD PTR [rsp+0x50]
   1400123a8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400123ad:	mov    rdx,QWORD PTR [rsi]
   1400123b0:	movsxd rax,ebp
   1400123b3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400123b8:	lea    rcx,[rax+rax*2]
   1400123bc:	mov    rax,QWORD PTR [rdx+0x10]
   1400123c0:	lea    rax,[rax+rcx*8]
   1400123c4:	add    rax,rdx
   1400123c7:	add    rsp,0x28
   1400123cb:	pop    r13
   1400123cd:	pop    rsi
   1400123ce:	ret    
   1400123cf:	int3   
   1400123d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400123d5:	mov    QWORD PTR [rsp+0x20],rsi
   1400123da:	push   r12
   1400123dc:	sub    rsp,0x20
   1400123e0:	mov    r9,QWORD PTR [rcx]
   1400123e3:	mov    rbx,rdx
   1400123e6:	mov    rsi,rcx
   1400123e9:	mov    rax,QWORD PTR [rbx]
   1400123ec:	mov    edx,DWORD PTR [r9+0x4]
   1400123f0:	mov    r8d,DWORD PTR [rax+0x4]
   1400123f4:	mov    eax,DWORD PTR [r9]
   1400123f7:	lea    r12d,[rdx+r8*1]
   1400123fb:	mov    r8d,DWORD PTR [r9+0x8]
   1400123ff:	btr    r8d,0x1f
   140012404:	cmp    r12d,r8d
   140012407:	seta   cl
   14001240a:	cmp    eax,0x1
   14001240d:	je     0x140012413
   14001240f:	test   eax,eax
   140012411:	jne    0x140012417
   140012413:	test   cl,cl
   140012415:	je     0x140012431
   140012417:	movzx  eax,cl
   14001241a:	neg    al
   14001241c:	sbb    r9d,r9d
   14001241f:	and    r9d,0x8
   140012423:	test   cl,cl
   140012425:	mov    rcx,rsi
   140012428:	cmovne r8d,r12d
   14001242c:	call   0x140011cb0
   140012431:	mov    rdx,QWORD PTR [rsi]
   140012434:	mov    eax,DWORD PTR [rdx+0x8]
   140012437:	btr    eax,0x1f
   14001243b:	test   eax,eax
   14001243d:	je     0x1400124be
   14001243f:	mov    rax,QWORD PTR [rdx+0x10]
   140012443:	lea    rcx,[r12+r12*2]
   140012447:	mov    QWORD PTR [rsp+0x30],rbp
   14001244c:	mov    QWORD PTR [rsp+0x38],rdi
   140012451:	lea    rdi,[rax+rcx*8]
   140012455:	add    rdi,rdx
   140012458:	mov    rdx,QWORD PTR [rbx]
   14001245b:	movsxd rax,DWORD PTR [rdx+0x4]
   14001245f:	lea    rcx,[rax+rax*2]
   140012463:	mov    rax,QWORD PTR [rdx+0x10]
   140012467:	lea    rbx,[rax+rcx*8]
   14001246b:	lea    rbp,[rdx+rax*1]
   14001246f:	add    rbx,rdx
   140012472:	cmp    rbx,rbp
   140012475:	je     0x1400124ad
   140012477:	sub    rdi,0x18
   14001247b:	je     0x1400124a8
   14001247d:	mov    eax,DWORD PTR [rbx-0x18]
   140012480:	sub    rbx,0x18
   140012484:	lea    rcx,[rdi+0x8]
   140012488:	mov    DWORD PTR [rdi],eax
   14001248a:	mov    eax,DWORD PTR [rbx+0x4]
   14001248d:	lea    rdx,[rbx+0x8]
   140012491:	mov    DWORD PTR [rdi+0x4],eax
   140012494:	call   QWORD PTR [rip+0xd13e]        # 0x14001f5d8
   14001249a:	mov    r11d,DWORD PTR [rbx+0x10]
   14001249e:	mov    DWORD PTR [rdi+0x10],r11d
   1400124a2:	mov    eax,DWORD PTR [rbx+0x14]
   1400124a5:	mov    DWORD PTR [rdi+0x14],eax
   1400124a8:	cmp    rbx,rbp
   1400124ab:	jne    0x140012477
   1400124ad:	mov    rax,QWORD PTR [rsi]
   1400124b0:	mov    rdi,QWORD PTR [rsp+0x38]
   1400124b5:	mov    rbp,QWORD PTR [rsp+0x30]
   1400124ba:	mov    DWORD PTR [rax+0x4],r12d
   1400124be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400124c3:	mov    rax,rsi
   1400124c6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400124cb:	add    rsp,0x20
   1400124cf:	pop    r12
   1400124d1:	ret    
   1400124d2:	int3   
   1400124d3:	int3   
   1400124d4:	int3   
   1400124d5:	int3   
   1400124d6:	int3   
   1400124d7:	int3   
   1400124d8:	int3   
   1400124d9:	int3   
   1400124da:	int3   
   1400124db:	int3   
   1400124dc:	int3   
   1400124dd:	int3   
   1400124de:	int3   
   1400124df:	int3   
   1400124e0:	rex push rdi
   1400124e2:	sub    rsp,0x20
   1400124e6:	mov    rax,QWORD PTR [rcx]
   1400124e9:	mov    rdi,rcx
   1400124ec:	cmp    QWORD PTR [rdx],rax
   1400124ef:	je     0x1400125ab
   1400124f5:	lea    rcx,[rsp+0x30]
   1400124fa:	mov    QWORD PTR [rsp+0x38],rbx
   1400124ff:	call   0x140002da0
   140012504:	lea    r11,[rsp+0x30]
   140012509:	cmp    r11,rdi
   14001250c:	je     0x140012520
   14001250e:	mov    rax,QWORD PTR [rsp+0x30]
   140012513:	mov    rbx,QWORD PTR [rdi]
   140012516:	mov    QWORD PTR [rsp+0x30],rbx
   14001251b:	mov    QWORD PTR [rdi],rax
   14001251e:	jmp    0x140012525
   140012520:	mov    rbx,QWORD PTR [rsp+0x30]
   140012525:	mov    eax,DWORD PTR [rbx]
   140012527:	test   eax,eax
   140012529:	je     0x140012540
   14001252b:	cmp    eax,0xffffffff
   14001252e:	je     0x14001259d
   140012530:	lock add DWORD PTR [rbx],0xffffffff
   140012534:	setne  al
   140012537:	test   al,al
   140012539:	jne    0x14001259d
   14001253b:	mov    rbx,QWORD PTR [rsp+0x30]
   140012540:	mov    rcx,QWORD PTR [rbx+0x10]
   140012544:	movsxd rax,DWORD PTR [rbx+0x4]
   140012548:	mov    QWORD PTR [rsp+0x40],rbp
   14001254d:	lea    rbp,[rcx+rax*8]
   140012551:	mov    QWORD PTR [rsp+0x48],rsi
   140012556:	lea    rsi,[rcx+rbx*1]
   14001255a:	add    rbp,rbx
   14001255d:	cmp    rsi,rbp
   140012560:	je     0x140012574
   140012562:	mov    rcx,rsi
   140012565:	add    rsi,0x8
   140012569:	call   QWORD PTR [rip+0xd049]        # 0x14001f5b8
   14001256f:	cmp    rsi,rbp
   140012572:	jne    0x140012562
   140012574:	mov    edx,0x8
   140012579:	mov    rcx,rbx
   14001257c:	mov    r8,rdx
   14001257f:	call   QWORD PTR [rip+0xcf8b]        # 0x14001f510
   140012585:	mov    rsi,QWORD PTR [rsp+0x48]
   14001258a:	mov    rbp,QWORD PTR [rsp+0x40]
   14001258f:	mov    rbx,QWORD PTR [rsp+0x38]
   140012594:	mov    rax,rdi
   140012597:	add    rsp,0x20
   14001259b:	pop    rdi
   14001259c:	ret    
   14001259d:	mov    rax,rdi
   1400125a0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400125a5:	add    rsp,0x20
   1400125a9:	pop    rdi
   1400125aa:	ret    
   1400125ab:	mov    rax,rcx
   1400125ae:	add    rsp,0x20
   1400125b2:	pop    rdi
   1400125b3:	ret    
   1400125b4:	int3   
   1400125b5:	int3   
   1400125b6:	int3   
   1400125b7:	int3   
   1400125b8:	int3   
   1400125b9:	int3   
   1400125ba:	int3   
   1400125bb:	int3   
   1400125bc:	int3   
   1400125bd:	int3   
   1400125be:	int3   
   1400125bf:	int3   
   1400125c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400125c5:	push   rdi
   1400125c6:	sub    rsp,0x20
   1400125ca:	mov    rdx,QWORD PTR [rcx+0x30]
   1400125ce:	mov    rdi,rcx
   1400125d1:	add    rcx,0x30
   1400125d5:	mov    eax,DWORD PTR [rdx]
   1400125d7:	test   eax,eax
   1400125d9:	je     0x1400125eb
   1400125db:	cmp    eax,0xffffffff
   1400125de:	je     0x1400125f3
   1400125e0:	lock add DWORD PTR [rdx],0xffffffff
   1400125e4:	setne  al
   1400125e7:	test   al,al
   1400125e9:	jne    0x1400125f3
   1400125eb:	mov    rdx,QWORD PTR [rcx]
   1400125ee:	call   0x1400114d0
   1400125f3:	mov    rax,QWORD PTR [rdi+0x28]
   1400125f7:	lea    rcx,[rdi+0x28]
   1400125fb:	mov    edx,DWORD PTR [rax]
   1400125fd:	test   edx,edx
   1400125ff:	je     0x140012611
   140012601:	cmp    edx,0xffffffff
   140012604:	je     0x140012619
   140012606:	lock add DWORD PTR [rax],0xffffffff
   14001260a:	setne  al
   14001260d:	test   al,al
   14001260f:	jne    0x140012619
   140012611:	mov    rdx,QWORD PTR [rcx]
   140012614:	call   0x1400114d0
   140012619:	lea    rcx,[rdi+0x10]
   14001261d:	mov    rbx,QWORD PTR [rsp+0x30]
   140012622:	add    rsp,0x20
   140012626:	pop    rdi
   140012627:	rex.W jmp QWORD PTR [rip+0xcf8a]        # 0x14001f5b8
   14001262e:	int3   
   14001262f:	int3   
   140012630:	mov    QWORD PTR [rsp+0x8],rbx
   140012635:	mov    QWORD PTR [rsp+0x10],rbp
   14001263a:	mov    QWORD PTR [rsp+0x18],rsi
   14001263f:	push   rdi
   140012640:	sub    rsp,0x20
   140012644:	mov    rax,QWORD PTR [rsp+0x50]
   140012649:	mov    rbp,rcx
   14001264c:	mov    DWORD PTR [rcx+0x8],r9d
   140012650:	mov    QWORD PTR [rcx],rax
   140012653:	add    rcx,0x10
   140012657:	mov    rsi,r8
   14001265a:	mov    rdi,rdx
   14001265d:	call   QWORD PTR [rip+0xcf75]        # 0x14001f5d8
   140012663:	mov    r11d,DWORD PTR [rdi+0x8]
   140012667:	mov    DWORD PTR [rbp+0x18],r11d
   14001266b:	mov    eax,DWORD PTR [rdi+0xc]
   14001266e:	lea    rdx,[rsi+0x8]
   140012672:	mov    DWORD PTR [rbp+0x1c],eax
   140012675:	movzx  eax,BYTE PTR [rsi]
   140012678:	lea    rcx,[rbp+0x28]
   14001267c:	mov    BYTE PTR [rbp+0x20],al
   14001267f:	movzx  eax,BYTE PTR [rsi+0x1]
   140012683:	mov    BYTE PTR [rbp+0x21],al
   140012686:	call   0x140011970
   14001268b:	lea    rdx,[rsi+0x10]
   14001268f:	lea    rcx,[rbp+0x30]
   140012693:	call   0x140011970
   140012698:	mov    rbx,QWORD PTR [rsp+0x30]
   14001269d:	mov    rsi,QWORD PTR [rsp+0x40]
   1400126a2:	mov    rax,rbp
   1400126a5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400126aa:	add    rsp,0x20
   1400126ae:	pop    rdi
   1400126af:	ret    
   1400126b0:	sub    rsp,0x38
   1400126b4:	mov    rax,rdx
   1400126b7:	test   rdx,rdx
   1400126ba:	je     0x1400126d9
   1400126bc:	mov    r9d,DWORD PTR [rcx+0x8]
   1400126c0:	lea    r8,[rcx+0x20]
   1400126c4:	lea    rdx,[rcx+0x10]
   1400126c8:	mov    rcx,rax
   1400126cb:	mov    QWORD PTR [rsp+0x20],0x0
   1400126d4:	call   0x140012630
   1400126d9:	add    rsp,0x38
   1400126dd:	ret    
   1400126de:	int3   
   1400126df:	int3   
   1400126e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400126e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400126ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400126ef:	push   rdi
   1400126f0:	push   r12
   1400126f2:	push   r13
   1400126f4:	sub    rsp,0x20
   1400126f8:	mov    r8,QWORD PTR [rcx]
   1400126fb:	xor    ebp,ebp
   1400126fd:	mov    r12,rdx
   140012700:	cmp    DWORD PTR [r8+0x4],ebp
   140012704:	mov    r13,rcx
   140012707:	jle    0x1400127a7
   14001270d:	xor    esi,esi
   14001270f:	nop
   140012710:	mov    rax,QWORD PTR [r8+0x10]
   140012714:	add    rax,rsi
   140012717:	lea    rcx,[rax+r8*1+0x8]
   14001271c:	mov    rax,QWORD PTR [r12]
   140012720:	movsxd rdx,DWORD PTR [rax+0x4]
   140012724:	mov    rax,QWORD PTR [rcx]
   140012727:	cmp    edx,DWORD PTR [rax+0x4]
   14001272a:	jne    0x140012753
   14001272c:	mov    rdi,rdx
   14001272f:	call   QWORD PTR [rip+0xcec3]        # 0x14001f5f8
   140012735:	mov    rcx,r12
   140012738:	mov    rbx,rax
   14001273b:	call   QWORD PTR [rip+0xceb7]        # 0x14001f5f8
   140012741:	mov    r8,rdi
   140012744:	mov    rcx,rax
   140012747:	mov    rdx,rbx
   14001274a:	call   0x14001e102
   14001274f:	test   eax,eax
   140012751:	je     0x1400127c2
   140012753:	mov    rcx,QWORD PTR [r13+0x0]
   140012757:	xor    r8d,r8d
   14001275a:	mov    rax,QWORD PTR [rcx+0x10]
   14001275e:	add    rax,rsi
   140012761:	lea    rbx,[rax+rcx*1+0x10]
   140012766:	mov    rax,QWORD PTR [rax+rcx*1+0x10]
   14001276b:	cmp    DWORD PTR [rax+0x20],r8d
   14001276f:	je     0x140012780
   140012771:	mov    edx,DWORD PTR [rax+0x24]
   140012774:	mov    rcx,r12
   140012777:	call   QWORD PTR [rip+0xcd53]        # 0x14001f4d0
   14001277d:	mov    r8d,eax
   140012780:	mov    rdx,r12
   140012783:	mov    rcx,rbx
   140012786:	call   0x1400025e0
   14001278b:	mov    rcx,QWORD PTR [rbx]
   14001278e:	cmp    QWORD PTR [rax],rcx
   140012791:	jne    0x1400127c2
   140012793:	mov    r8,QWORD PTR [r13+0x0]
   140012797:	inc    ebp
   140012799:	add    rsi,0x20
   14001279d:	cmp    ebp,DWORD PTR [r8+0x4]
   1400127a1:	jl     0x140012710
   1400127a7:	xor    al,al
   1400127a9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400127ae:	mov    rbp,QWORD PTR [rsp+0x48]
   1400127b3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400127b8:	add    rsp,0x20
   1400127bc:	pop    r13
   1400127be:	pop    r12
   1400127c0:	pop    rdi
   1400127c1:	ret    
   1400127c2:	mov    al,0x1
   1400127c4:	jmp    0x1400127a9
   1400127c6:	int3   
   1400127c7:	int3   
   1400127c8:	int3   
   1400127c9:	int3   
   1400127ca:	int3   
   1400127cb:	int3   
   1400127cc:	int3   
   1400127cd:	int3   
   1400127ce:	int3   
   1400127cf:	int3   
   1400127d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400127d5:	push   rdi
   1400127d6:	sub    rsp,0x20
   1400127da:	mov    rdx,QWORD PTR [rcx+0x18]
   1400127de:	mov    rbx,rcx
   1400127e1:	add    rcx,0x18
   1400127e5:	mov    eax,DWORD PTR [rdx]
   1400127e7:	test   eax,eax
   1400127e9:	je     0x1400127fb
   1400127eb:	cmp    eax,0xffffffff
   1400127ee:	je     0x140012803
   1400127f0:	lock add DWORD PTR [rdx],0xffffffff
   1400127f4:	setne  al
   1400127f7:	test   al,al
   1400127f9:	jne    0x140012803
   1400127fb:	mov    rdx,QWORD PTR [rcx]
   1400127fe:	call   0x1400027a0
   140012803:	mov    rdx,QWORD PTR [rbx+0x10]
   140012807:	lea    rcx,[rbx+0x10]
   14001280b:	mov    eax,DWORD PTR [rdx]
   14001280d:	test   eax,eax
   14001280f:	je     0x140012821
   140012811:	cmp    eax,0xffffffff
   140012814:	je     0x140012829
   140012816:	lock add DWORD PTR [rdx],0xffffffff
   14001281a:	setne  al
   14001281d:	test   al,al
   14001281f:	jne    0x140012829
   140012821:	mov    rdx,QWORD PTR [rcx]
   140012824:	call   0x140002480
   140012829:	mov    rax,QWORD PTR [rbx]
   14001282c:	mov    ecx,DWORD PTR [rax]
   14001282e:	test   ecx,ecx
   140012830:	je     0x140012842
   140012832:	cmp    ecx,0xffffffff
   140012835:	je     0x14001284d
   140012837:	lock add DWORD PTR [rax],0xffffffff
   14001283b:	setne  al
   14001283e:	test   al,al
   140012840:	jne    0x14001284d
   140012842:	mov    rdx,QWORD PTR [rbx]
   140012845:	mov    rcx,rbx
   140012848:	call   0x1400114d0
   14001284d:	mov    rbx,QWORD PTR [rsp+0x30]
   140012852:	add    rsp,0x20
   140012856:	pop    rdi
   140012857:	ret    
   140012858:	int3   
   140012859:	int3   
   14001285a:	int3   
   14001285b:	int3   
   14001285c:	int3   
   14001285d:	int3   
   14001285e:	int3   
   14001285f:	int3   
   140012860:	mov    QWORD PTR [rsp+0x8],rbx
   140012865:	push   rdi
   140012866:	sub    rsp,0x20
   14001286a:	mov    rbx,rcx
   14001286d:	call   0x140011f50
   140012872:	mov    rdx,QWORD PTR [rbx]
   140012875:	movsxd rcx,DWORD PTR [rbx+0x8]
   140012879:	mov    edi,eax
   14001287b:	cmp    ecx,DWORD PTR [rdx+0x4]
   14001287e:	jl     0x140012884
   140012880:	xor    ecx,ecx
   140012882:	jmp    0x14001289a
   140012884:	lea    eax,[rcx+0x1]
   140012887:	lea    rcx,[rcx+rcx*2]
   14001288b:	mov    DWORD PTR [rbx+0x8],eax
   14001288e:	mov    rax,QWORD PTR [rdx+0x10]
   140012892:	lea    rcx,[rax+rcx*8]
   140012896:	mov    ecx,DWORD PTR [rcx+rdx*1+0x4]
   14001289a:	sub    ecx,0x3c
   14001289d:	je     0x1400128cb
   14001289f:	cmp    ecx,0x1
   1400128a2:	je     0x1400128b4
   1400128a4:	dec    DWORD PTR [rbx+0x8]
   1400128a7:	mov    eax,edi
   1400128a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400128ae:	add    rsp,0x20
   1400128b2:	pop    rdi
   1400128b3:	ret    
   1400128b4:	mov    rcx,rbx
   1400128b7:	call   0x140012860
   1400128bc:	sub    edi,eax
   1400128be:	mov    eax,edi
   1400128c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400128c5:	add    rsp,0x20
   1400128c9:	pop    rdi
   1400128ca:	ret    
   1400128cb:	mov    rcx,rbx
   1400128ce:	call   0x140012860
   1400128d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400128d8:	add    eax,edi
   1400128da:	add    rsp,0x20
   1400128de:	pop    rdi
   1400128df:	ret    
   1400128e0:	rex push rbx
   1400128e2:	sub    rsp,0x20
   1400128e6:	mov    rbx,rcx
   1400128e9:	mov    rcx,QWORD PTR [rcx]
   1400128ec:	mov    eax,DWORD PTR [rcx]
   1400128ee:	cmp    eax,0x1
   1400128f1:	je     0x14001293a
   1400128f3:	test   eax,eax
   1400128f5:	je     0x14001293a
   1400128f7:	mov    r8d,DWORD PTR [rcx+0x8]
   1400128fb:	btr    r8d,0x1f
   140012900:	test   r8d,r8d
   140012903:	jne    0x14001292c
   140012905:	lea    r9d,[r8+0x2]
   140012909:	xor    r8d,r8d
   14001290c:	lea    edx,[r9+0x6]
   140012910:	lea    ecx,[rdx+0x10]
   140012913:	call   QWORD PTR [rip+0xcbff]        # 0x14001f518
   140012919:	mov    QWORD PTR [rbx],rax
   14001291c:	mov    rcx,rax
   14001291f:	mov    rax,QWORD PTR [rax+0x10]
   140012923:	add    rax,rcx
   140012926:	add    rsp,0x20
   14001292a:	pop    rbx
   14001292b:	ret    
   14001292c:	mov    edx,DWORD PTR [rcx+0x4]
   14001292f:	xor    r9d,r9d
   140012932:	mov    rcx,rbx
   140012935:	call   0x140011cb0
   14001293a:	mov    rcx,QWORD PTR [rbx]
   14001293d:	mov    rax,QWORD PTR [rcx+0x10]
   140012941:	add    rax,rcx
   140012944:	add    rsp,0x20
   140012948:	pop    rbx
   140012949:	ret    
   14001294a:	int3   
   14001294b:	int3   
   14001294c:	int3   
   14001294d:	int3   
   14001294e:	int3   
   14001294f:	int3   
   140012950:	rex push rbx
   140012952:	sub    rsp,0x20
   140012956:	mov    rdx,QWORD PTR [rcx]
   140012959:	mov    rbx,rcx
   14001295c:	mov    eax,DWORD PTR [rdx]
   14001295e:	cmp    eax,0x1
   140012961:	je     0x140012999
   140012963:	test   eax,eax
   140012965:	je     0x140012999
   140012967:	mov    r8d,DWORD PTR [rdx+0x8]
   14001296b:	btr    r8d,0x1f
   140012970:	test   r8d,r8d
   140012973:	jne    0x14001298e
   140012975:	lea    r9d,[r8+0x2]
   140012979:	xor    r8d,r8d
   14001297c:	lea    edx,[r9+0x6]
   140012980:	lea    ecx,[rdx+0x10]
   140012983:	call   QWORD PTR [rip+0xcb8f]        # 0x14001f518
   140012989:	mov    QWORD PTR [rbx],rax
   14001298c:	jmp    0x140012999
   14001298e:	mov    edx,DWORD PTR [rdx+0x4]
   140012991:	xor    r9d,r9d
   140012994:	call   0x140011cb0
   140012999:	mov    rdx,QWORD PTR [rbx]
   14001299c:	movsxd rax,DWORD PTR [rdx+0x4]
   1400129a0:	lea    rcx,[rax+rax*2]
   1400129a4:	mov    rax,QWORD PTR [rdx+0x10]
   1400129a8:	lea    rax,[rax+rcx*8]
   1400129ac:	add    rax,rdx
   1400129af:	add    rsp,0x20
   1400129b3:	pop    rbx
   1400129b4:	ret    
   1400129b5:	int3   
   1400129b6:	int3   
   1400129b7:	int3   
   1400129b8:	int3   
   1400129b9:	int3   
   1400129ba:	int3   
   1400129bb:	int3   
   1400129bc:	int3   
   1400129bd:	int3   
   1400129be:	int3   
   1400129bf:	int3   
   1400129c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400129c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400129ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400129cf:	mov    QWORD PTR [rsp+0x20],rdi
   1400129d4:	push   r12
   1400129d6:	sub    rsp,0x30
   1400129da:	mov    rdi,rcx
   1400129dd:	mov    rcx,QWORD PTR [rcx]
   1400129e0:	mov    r12d,edx
   1400129e3:	mov    edx,0x8
   1400129e8:	mov    rsi,r9
   1400129eb:	mov    rbp,r8
   1400129ee:	call   QWORD PTR [rip+0xcaec]        # 0x14001f4e0
   1400129f4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400129f9:	test   rax,rax
   1400129fc:	je     0x140012a1c
   1400129fe:	mov    r10,QWORD PTR [rbx]
   140012a01:	mov    r9d,r12d
   140012a04:	mov    r8,rsi
   140012a07:	mov    rdx,rbp
   140012a0a:	mov    rcx,rax
   140012a0d:	mov    QWORD PTR [rsp+0x20],r10
   140012a12:	call   0x140012630
   140012a17:	mov    r11,rax
   140012a1a:	jmp    0x140012a1f
   140012a1c:	xor    r11d,r11d
   140012a1f:	mov    rbp,QWORD PTR [rsp+0x48]
   140012a24:	mov    rsi,QWORD PTR [rsp+0x50]
   140012a29:	mov    QWORD PTR [rbx],r11
   140012a2c:	mov    rax,QWORD PTR [rdi]
   140012a2f:	mov    rbx,QWORD PTR [rsp+0x40]
   140012a34:	mov    rdi,QWORD PTR [rsp+0x58]
   140012a39:	inc    DWORD PTR [rax+0x14]
   140012a3c:	mov    rax,r11
   140012a3f:	add    rsp,0x30
   140012a43:	pop    r12
   140012a45:	ret    
   140012a46:	int3   
   140012a47:	int3   
   140012a48:	int3   
   140012a49:	int3   
   140012a4a:	int3   
   140012a4b:	int3   
   140012a4c:	int3   
   140012a4d:	int3   
   140012a4e:	int3   
   140012a4f:	int3   
   140012a50:	mov    QWORD PTR [rsp+0x10],rdx
   140012a55:	push   rbx
   140012a56:	push   rbp
   140012a57:	push   rsi
   140012a58:	push   rdi
   140012a59:	push   r13
   140012a5b:	push   r14
   140012a5d:	push   r15
   140012a5f:	sub    rsp,0xf0
   140012a66:	mov    rax,QWORD PTR [rip+0xcac3]        # 0x14001f530
   140012a6d:	mov    r14,rcx
   140012a70:	mov    r13d,r9d
   140012a73:	mov    QWORD PTR [rcx],rax
   140012a76:	mov    rcx,rdx
   140012a79:	mov    ebp,r8d
   140012a7c:	mov    rsi,rdx
   140012a7f:	call   QWORD PTR [rip+0xcb73]        # 0x14001f5f8
   140012a85:	cmp    BYTE PTR [rax],0x0
   140012a88:	mov    r15,rax
   140012a8b:	mov    rdi,rax
   140012a8e:	je     0x1400134ee
   140012a94:	lea    r10,[rip+0xfffffffffffed565]        # 0x140000000
   140012a9b:	mov    QWORD PTR [rsp+0x140],r12
   140012aa3:	test   r13d,r13d
   140012aa6:	je     0x1400130a7
   140012aac:	cmp    r13d,0x6
   140012ab0:	je     0x1400130a7
   140012ab6:	xor    r8d,r8d
   140012ab9:	xor    r9d,r9d
   140012abc:	mov    rbx,rdi
   140012abf:	cmp    r13d,0x3
   140012ac3:	jne    0x140012ad0
   140012ac5:	lea    r8d,[r9+0xd]
   140012ac9:	lea    r13d,[r9+0x1]
   140012acd:	nop    DWORD PTR [rax]
   140012ad0:	movzx  edx,BYTE PTR [rdi]
   140012ad3:	test   dl,dl
   140012ad5:	jns    0x140012adc
   140012ad7:	inc    rdi
   140012ada:	jmp    0x140012ad0
   140012adc:	movsxd rax,r8d
   140012adf:	add    rax,rax
   140012ae2:	movsx  rcx,WORD PTR [r10+rax*8+0x209c4]
   140012aeb:	cmp    dl,BYTE PTR [r10+rax*8+0x209c6]
   140012af3:	jne    0x140012b00
   140012af5:	movsx  ecx,WORD PTR [r10+rax*8+0x209c8]
   140012afe:	jmp    0x140012b1d
   140012b00:	test   r8d,r8d
   140012b03:	je     0x140012b09
   140012b05:	test   ecx,ecx
   140012b07:	je     0x140012b37
   140012b09:	shl    rcx,0x7
   140012b0d:	movsx  rax,dl
   140012b11:	add    rcx,rax
   140012b14:	movsx  ecx,WORD PTR [r10+rcx*2+0x1fec0]
   140012b1d:	test   ecx,ecx
   140012b1f:	je     0x140012b37
   140012b21:	movsxd rax,ecx
   140012b24:	mov    r8d,ecx
   140012b27:	add    rax,rax
   140012b2a:	inc    rdi
   140012b2d:	mov    r9d,DWORD PTR [r10+rax*8+0x209c0]
   140012b35:	jmp    0x140012ad0
   140012b37:	movsxd rax,r8d
   140012b3a:	shl    rax,0x4
   140012b3e:	mov    ecx,DWORD PTR [rax+r10*1+0x209cc]
   140012b46:	test   ecx,ecx
   140012b48:	je     0x140012b70
   140012b4a:	movzx  eax,BYTE PTR [rdi]
   140012b4d:	cmp    al,0x61
   140012b4f:	jl     0x140012b55
   140012b51:	cmp    al,0x7a
   140012b53:	jle    0x140012b6d
   140012b55:	cmp    al,0x41
   140012b57:	jl     0x140012b5d
   140012b59:	cmp    al,0x5a
   140012b5b:	jle    0x140012b6d
   140012b5d:	cmp    al,0x30
   140012b5f:	jl     0x140012b65
   140012b61:	cmp    al,0x39
   140012b63:	jle    0x140012b6d
   140012b65:	cmp    al,0x5f
   140012b67:	je     0x140012b6d
   140012b69:	cmp    al,0x24
   140012b6b:	jne    0x140012b70
   140012b6d:	mov    r9d,ecx
   140012b70:	cmp    r9d,0xa5
   140012b77:	ja     0x140012b9a
   140012b79:	movsxd rax,r9d
   140012b7c:	movzx  eax,BYTE PTR [r10+rax*1+0x136fc]
   140012b85:	mov    ecx,DWORD PTR [r10+rax*4+0x136b8]
   140012b8d:	add    rcx,r10
   140012b90:	jmp    rcx
   140012b92:	cmp    BYTE PTR [rdi],0x0
   140012b95:	je     0x140012b9a
   140012b97:	inc    rdi
   140012b9a:	cmp    r13d,0x2
   140012b9e:	je     0x1400134d6
   140012ba4:	lea    rcx,[rsp+0x28]
   140012ba9:	mov    rdx,rsi
   140012bac:	mov    DWORD PTR [rsp+0x20],ebp
   140012bb0:	mov    DWORD PTR [rsp+0x24],r9d
   140012bb5:	call   QWORD PTR [rip+0xca1d]        # 0x14001f5d8
   140012bbb:	mov    r11d,ebx
   140012bbe:	mov    eax,edi
   140012bc0:	sub    r11d,r15d
   140012bc3:	lea    rdx,[rsp+0x20]
   140012bc8:	sub    eax,ebx
   140012bca:	mov    rcx,r14
   140012bcd:	mov    DWORD PTR [rsp+0x30],r11d
   140012bd2:	mov    DWORD PTR [rsp+0x34],eax
   140012bd6:	call   0x140012170
   140012bdb:	lea    rcx,[rsp+0x28]
   140012be0:	call   QWORD PTR [rip+0xc9d2]        # 0x14001f5b8
   140012be6:	jmp    0x1400134d6
   140012beb:	mov    r13d,0x5
   140012bf1:	jmp    0x140012ba4
   140012bf3:	lea    rcx,[rsp+0xb8]
   140012bfb:	mov    DWORD PTR [rsp+0xb0],ebp
   140012c02:	mov    DWORD PTR [rsp+0xb4],0x9f
   140012c0d:	call   QWORD PTR [rip+0xc9ad]        # 0x14001f5c0
   140012c13:	lea    rdx,[rsp+0xb0]
   140012c1b:	xor    ebx,ebx
   140012c1d:	mov    rcx,r14
   140012c20:	mov    DWORD PTR [rsp+0xc0],ebx
   140012c27:	mov    DWORD PTR [rsp+0xc4],0xffffffff
   140012c32:	call   0x140012170
   140012c37:	lea    rcx,[rsp+0xb8]
   140012c3f:	call   QWORD PTR [rip+0xc973]        # 0x14001f5b8
   140012c45:	lea    rcx,[rsp+0xa0]
   140012c4d:	mov    DWORD PTR [rsp+0x98],ebp
   140012c54:	mov    DWORD PTR [rsp+0x9c],0xa8
   140012c5f:	call   QWORD PTR [rip+0xc95b]        # 0x14001f5c0
   140012c65:	lea    rdx,[rsp+0x98]
   140012c6d:	mov    rcx,r14
   140012c70:	mov    DWORD PTR [rsp+0xa8],ebx
   140012c77:	mov    DWORD PTR [rsp+0xac],0xffffffff
   140012c82:	call   0x140012170
   140012c87:	lea    rcx,[rsp+0xa0]
   140012c8f:	call   QWORD PTR [rip+0xc923]        # 0x14001f5b8
   140012c95:	jmp    0x1400134d6
   140012c9a:	lea    rcx,[rsp+0x58]
   140012c9f:	mov    DWORD PTR [rsp+0x50],ebp
   140012ca3:	mov    DWORD PTR [rsp+0x54],0x9f
   140012cab:	call   QWORD PTR [rip+0xc90f]        # 0x14001f5c0
   140012cb1:	lea    rdx,[rsp+0x50]
   140012cb6:	xor    ebx,ebx
   140012cb8:	mov    rcx,r14
   140012cbb:	mov    DWORD PTR [rsp+0x60],ebx
   140012cbf:	mov    DWORD PTR [rsp+0x64],0xffffffff
   140012cc7:	call   0x140012170
   140012ccc:	lea    rcx,[rsp+0x58]
   140012cd1:	call   QWORD PTR [rip+0xc8e1]        # 0x14001f5b8
   140012cd7:	lea    rcx,[rsp+0x70]
   140012cdc:	mov    DWORD PTR [rsp+0x68],ebp
   140012ce0:	mov    DWORD PTR [rsp+0x6c],0x45
   140012ce8:	call   QWORD PTR [rip+0xc8d2]        # 0x14001f5c0
   140012cee:	lea    rdx,[rsp+0x68]
   140012cf3:	mov    rcx,r14
   140012cf6:	mov    DWORD PTR [rsp+0x78],ebx
   140012cfa:	mov    DWORD PTR [rsp+0x7c],0xffffffff
   140012d02:	call   0x140012170
   140012d07:	lea    rcx,[rsp+0x70]
   140012d0c:	call   QWORD PTR [rip+0xc8a6]        # 0x14001f5b8
   140012d12:	lea    rcx,[rsp+0x88]
   140012d1a:	mov    DWORD PTR [rsp+0x80],ebp
   140012d21:	mov    DWORD PTR [rsp+0x84],0xa8
   140012d2c:	call   QWORD PTR [rip+0xc88e]        # 0x14001f5c0
   140012d32:	lea    rdx,[rsp+0x80]
   140012d3a:	mov    rcx,r14
   140012d3d:	mov    DWORD PTR [rsp+0x90],ebx
   140012d44:	mov    DWORD PTR [rsp+0x94],0xffffffff
   140012d4f:	call   0x140012170
   140012d54:	lea    rcx,[rsp+0x88]
   140012d5c:	call   QWORD PTR [rip+0xc856]        # 0x14001f5b8
   140012d62:	jmp    0x1400134d6
   140012d67:	mov    r13d,0x4
   140012d6d:	jmp    0x140012ba4
   140012d72:	mov    rcx,rdi
   140012d75:	call   0x140010fc0
   140012d7a:	mov    r9d,0x4
   140012d80:	mov    rdi,rax
   140012d83:	jmp    0x140012b9a
   140012d88:	movzx  eax,BYTE PTR [rdi]
   140012d8b:	test   al,al
   140012d8d:	je     0x140012dbd
   140012d8f:	nop
   140012d90:	cmp    al,0x27
   140012d92:	jne    0x140012da0
   140012d94:	cmp    BYTE PTR [rdi-0x1],0x5c
   140012d98:	jne    0x140012db5
   140012d9a:	cmp    BYTE PTR [rdi-0x2],0x5c
   140012d9e:	je     0x140012db5
   140012da0:	mov    al,BYTE PTR [rdi+0x1]
   140012da3:	inc    rdi
   140012da6:	test   al,al
   140012da8:	jne    0x140012d90
   140012daa:	mov    r9d,0x3
   140012db0:	jmp    0x140012b9a
   140012db5:	cmp    BYTE PTR [rdi],0x0
   140012db8:	je     0x140012dbd
   140012dba:	inc    rdi
   140012dbd:	mov    r9d,0x3
   140012dc3:	jmp    0x140012b9a
   140012dc8:	nop    DWORD PTR [rax+rax*1+0x0]
   140012dd0:	movzx  eax,BYTE PTR [rdi]
   140012dd3:	sub    al,0x30
   140012dd5:	cmp    al,0x9
   140012dd7:	ja     0x140012dde
   140012dd9:	inc    rdi
   140012ddc:	jmp    0x140012dd0
   140012dde:	movzx  ecx,BYTE PTR [rdi]
   140012de1:	test   cl,cl
   140012de3:	je     0x140012e01
   140012de5:	cmp    cl,0x2e
   140012de8:	jne    0x140012e01
   140012dea:	mov    r9d,0x92
   140012df0:	inc    rdi
   140012df3:	movzx  eax,BYTE PTR [rdi]
   140012df6:	sub    al,0x30
   140012df8:	cmp    al,0x9
   140012dfa:	ja     0x140012e53
   140012dfc:	inc    rdi
   140012dff:	jmp    0x140012df3
   140012e01:	mov    rax,rdi
   140012e04:	mov    r9d,0x2
   140012e0a:	sub    rax,rbx
   140012e0d:	cmp    rax,0x1
   140012e11:	jne    0x140012b9a
   140012e17:	cmp    cl,0x78
   140012e1a:	je     0x140012e25
   140012e1c:	cmp    cl,0x58
   140012e1f:	jne    0x140012b9a
   140012e25:	cmp    BYTE PTR [rbx],0x30
   140012e28:	jne    0x140012b9a
   140012e2e:	inc    rdi
   140012e31:	movzx  eax,BYTE PTR [rdi]
   140012e34:	cmp    al,0x61
   140012e36:	jl     0x140012e3c
   140012e38:	cmp    al,0x66
   140012e3a:	jle    0x140012e4e
   140012e3c:	cmp    al,0x41
   140012e3e:	jl     0x140012e44
   140012e40:	cmp    al,0x46
   140012e42:	jle    0x140012e4e
   140012e44:	sub    al,0x30
   140012e46:	cmp    al,0x9
   140012e48:	ja     0x140012b9a
   140012e4e:	inc    rdi
   140012e51:	jmp    0x140012e31
   140012e53:	movzx  eax,BYTE PTR [rdi]
   140012e56:	cmp    al,0x2b
   140012e58:	je     0x140012e5e
   140012e5a:	cmp    al,0x2d
   140012e5c:	jne    0x140012e61
   140012e5e:	inc    rdi
   140012e61:	movzx  eax,BYTE PTR [rdi]
   140012e64:	cmp    al,0x65
   140012e66:	je     0x140012e6c
   140012e68:	cmp    al,0x45
   140012e6a:	jne    0x140012e7e
   140012e6c:	inc    rdi
   140012e6f:	nop
   140012e70:	movzx  eax,BYTE PTR [rdi]
   140012e73:	sub    al,0x30
   140012e75:	cmp    al,0x9
   140012e77:	ja     0x140012e7e
   140012e79:	inc    rdi
   140012e7c:	jmp    0x140012e70
   140012e7e:	movzx  eax,BYTE PTR [rdi]
   140012e81:	cmp    al,0x66
   140012e83:	je     0x140012e95
   140012e85:	cmp    al,0x46
   140012e87:	je     0x140012e95
   140012e89:	cmp    al,0x6c
   140012e8b:	je     0x140012e95
   140012e8d:	cmp    al,0x4c
   140012e8f:	jne    0x140012b9a
   140012e95:	inc    rdi
   140012e98:	jmp    0x140012b9a
   140012e9d:	cmp    r13d,0x2
   140012ea1:	jne    0x140012eb1
   140012ea3:	mov    rdi,rbx
   140012ea6:	mov    r13d,0x3
   140012eac:	jmp    0x1400134d6
   140012eb1:	movzx  eax,BYTE PTR [rdi]
   140012eb4:	cmp    al,0x61
   140012eb6:	jl     0x140012ebc
   140012eb8:	cmp    al,0x7a
   140012eba:	jle    0x140012ed4
   140012ebc:	cmp    al,0x41
   140012ebe:	jl     0x140012ec4
   140012ec0:	cmp    al,0x5a
   140012ec2:	jle    0x140012ed4
   140012ec4:	cmp    al,0x30
   140012ec6:	jl     0x140012ecc
   140012ec8:	cmp    al,0x39
   140012eca:	jle    0x140012ed4
   140012ecc:	cmp    al,0x5f
   140012ece:	je     0x140012ed4
   140012ed0:	cmp    al,0x24
   140012ed2:	jne    0x140012ed9
   140012ed4:	inc    rdi
   140012ed7:	jmp    0x140012eb1
   140012ed9:	mov    r9d,0x1
   140012edf:	cmp    r13d,0x5
   140012ee3:	jne    0x140012b9a
   140012ee9:	lea    rcx,[rsp+0xd0]
   140012ef1:	mov    rdx,rsi
   140012ef4:	mov    DWORD PTR [rsp+0xc8],ebp
   140012efb:	mov    DWORD PTR [rsp+0xcc],r9d
   140012f03:	call   QWORD PTR [rip+0xc6cf]        # 0x14001f5d8
   140012f09:	mov    r11d,ebx
   140012f0c:	mov    eax,edi
   140012f0e:	sub    r11d,r15d
   140012f11:	lea    rdx,[rsp+0xc8]
   140012f19:	sub    eax,ebx
   140012f1b:	mov    rcx,r14
   140012f1e:	mov    DWORD PTR [rsp+0xd8],r11d
   140012f26:	mov    DWORD PTR [rsp+0xdc],eax
   140012f2d:	call   0x140012170
   140012f32:	lea    rcx,[rsp+0xd0]
   140012f3a:	call   QWORD PTR [rip+0xc678]        # 0x14001f5b8
   140012f40:	cmp    BYTE PTR [rdi],0x28
   140012f43:	je     0x140012f82
   140012f45:	lea    rcx,[rsp+0x40]
   140012f4a:	mov    DWORD PTR [rsp+0x38],ebp
   140012f4e:	mov    DWORD PTR [rsp+0x3c],0x9a
   140012f56:	call   QWORD PTR [rip+0xc664]        # 0x14001f5c0
   140012f5c:	lea    rdx,[rsp+0x38]
   140012f61:	xor    ebx,ebx
   140012f63:	mov    rcx,r14
   140012f66:	mov    DWORD PTR [rsp+0x48],ebx
   140012f6a:	mov    DWORD PTR [rsp+0x4c],0xffffffff
   140012f72:	call   0x140012170
   140012f77:	lea    rcx,[rsp+0x40]
   140012f7c:	call   QWORD PTR [rip+0xc636]        # 0x14001f5b8
   140012f82:	mov    r13d,0x6
   140012f88:	jmp    0x1400134d6
   140012f8d:	movzx  eax,BYTE PTR [rdi]
   140012f90:	test   al,al
   140012f92:	je     0x1400134e6
   140012f98:	cmp    al,0xa
   140012f9a:	jne    0x140012f9e
   140012f9c:	inc    ebp
   140012f9e:	movzx  eax,BYTE PTR [rdi+0x1]
   140012fa2:	test   al,al
   140012fa4:	je     0x1400134e6
   140012faa:	cmp    al,0xa
   140012fac:	jne    0x140012fb0
   140012fae:	inc    ebp
   140012fb0:	movzx  eax,BYTE PTR [rdi+0x2]
   140012fb4:	add    rdi,0x2
   140012fb8:	test   al,al
   140012fba:	je     0x1400134e6
   140012fc0:	cmp    BYTE PTR [rdi-0x1],0x2f
   140012fc4:	jne    0x140012fcc
   140012fc6:	cmp    BYTE PTR [rdi-0x2],0x2a
   140012fca:	je     0x140012fe1
   140012fcc:	cmp    al,0xa
   140012fce:	jne    0x140012fd2
   140012fd0:	inc    ebp
   140012fd2:	mov    al,BYTE PTR [rdi+0x1]
   140012fd5:	inc    rdi
   140012fd8:	test   al,al
   140012fda:	jne    0x140012fc0
   140012fdc:	jmp    0x1400134e6
   140012fe1:	movzx  eax,BYTE PTR [rdi]
   140012fe4:	test   al,al
   140012fe6:	je     0x1400134e6
   140012fec:	nop    DWORD PTR [rax+0x0]
   140012ff0:	cmp    al,0x20
   140012ff2:	je     0x140012ffc
   140012ff4:	cmp    al,0x9
   140012ff6:	jne    0x1400134d6
   140012ffc:	mov    al,BYTE PTR [rdi+0x1]
   140012fff:	inc    rdi
   140013002:	test   al,al
   140013004:	jne    0x140012ff0
   140013006:	jmp    0x1400134e6
   14001300b:	movzx  eax,BYTE PTR [rdi]
   14001300e:	test   al,al
   140013010:	je     0x1400134e6
   140013016:	cmp    al,0xa
   140013018:	je     0x1400134d6
   14001301e:	mov    al,BYTE PTR [rdi+0x1]
   140013021:	inc    rdi
   140013024:	test   al,al
   140013026:	jne    0x140013016
   140013028:	jmp    0x1400134e6
   14001302d:	inc    ebp
   14001302f:	xor    r13d,r13d
   140013032:	jmp    0x140012ba4
   140013037:	movzx  eax,BYTE PTR [rdi]
   14001303a:	mov    rcx,rdi
   14001303d:	test   al,al
   14001303f:	je     0x140013053
   140013041:	cmp    al,0x20
   140013043:	je     0x140013049
   140013045:	cmp    al,0x9
   140013047:	jne    0x14001305b
   140013049:	mov    al,BYTE PTR [rdi+0x1]
   14001304c:	inc    rdi
   14001304f:	test   al,al
   140013051:	jne    0x140013041
   140013053:	mov    rdi,rcx
   140013056:	jmp    0x140012b9a
   14001305b:	movzx  eax,BYTE PTR [rdi]
   14001305e:	test   al,al
   140013060:	je     0x140013053
   140013062:	cmp    al,0xa
   140013064:	jne    0x140013053
   140013066:	inc    rdi
   140013069:	jmp    0x1400134d6
   14001306e:	cmp    r13d,0x4
   140013072:	jne    0x140012b9a
   140013078:	movzx  eax,BYTE PTR [rdi]
   14001307b:	mov    r9d,r13d
   14001307e:	test   al,al
   140013080:	je     0x140012ba4
   140013086:	cmp    al,0xa
   140013088:	je     0x140012ba4
   14001308e:	cmp    BYTE PTR [rdi-0x1],0x3e
   140013092:	je     0x140012ba4
   140013098:	mov    al,BYTE PTR [rdi+0x1]
   14001309b:	inc    rdi
   14001309e:	test   al,al
   1400130a0:	jne    0x140013086
   1400130a2:	jmp    0x140012ba4
   1400130a7:	xor    r8d,r8d
   1400130aa:	mov    r12,rdi
   1400130ad:	xor    esi,esi
   1400130af:	nop
   1400130b0:	movzx  edx,BYTE PTR [rdi]
   1400130b3:	test   dl,dl
   1400130b5:	jns    0x1400130bc
   1400130b7:	inc    rdi
   1400130ba:	jmp    0x1400130b0
   1400130bc:	movsxd rax,r8d
   1400130bf:	add    rax,rax
   1400130c2:	movsx  rcx,WORD PTR [r10+rax*8+0x24244]
   1400130cb:	cmp    dl,BYTE PTR [r10+rax*8+0x24246]
   1400130d3:	jne    0x1400130e0
   1400130d5:	movsx  ecx,WORD PTR [r10+rax*8+0x24248]
   1400130de:	jmp    0x1400130fd
   1400130e0:	test   r8d,r8d
   1400130e3:	je     0x1400130e9
   1400130e5:	test   ecx,ecx
   1400130e7:	je     0x140013117
   1400130e9:	shl    rcx,0x7
   1400130ed:	movsx  rax,dl
   1400130f1:	add    rcx,rax
   1400130f4:	movsx  ecx,WORD PTR [r10+rcx*2+0x21040]
   1400130fd:	test   ecx,ecx
   1400130ff:	je     0x140013117
   140013101:	movsxd rax,ecx
   140013104:	mov    r8d,ecx
   140013107:	add    rax,rax
   14001310a:	inc    rdi
   14001310d:	mov    esi,DWORD PTR [r10+rax*8+0x24240]
   140013115:	jmp    0x1400130b0
   140013117:	movsxd rax,r8d
   14001311a:	shl    rax,0x4
   14001311e:	mov    ecx,DWORD PTR [rax+r10*1+0x2424c]
   140013126:	test   ecx,ecx
   140013128:	je     0x14001314f
   14001312a:	movzx  eax,BYTE PTR [rdi]
   14001312d:	cmp    al,0x61
   14001312f:	jl     0x140013135
   140013131:	cmp    al,0x7a
   140013133:	jle    0x14001314d
   140013135:	cmp    al,0x41
   140013137:	jl     0x14001313d
   140013139:	cmp    al,0x5a
   14001313b:	jle    0x14001314d
   14001313d:	cmp    al,0x30
   14001313f:	jl     0x140013145
   140013141:	cmp    al,0x39
   140013143:	jle    0x14001314d
   140013145:	cmp    al,0x5f
   140013147:	je     0x14001314d
   140013149:	cmp    al,0x24
   14001314b:	jne    0x14001314f
   14001314d:	mov    esi,ecx
   14001314f:	test   esi,esi
   140013151:	jne    0x1400131b7
   140013153:	cmp    BYTE PTR [rdi],sil
   140013156:	je     0x14001315b
   140013158:	inc    rdi
   14001315b:	cmp    BYTE PTR [rip+0x17f1e],0x0        # 0x14002b080
   140013162:	je     0x1400136ab
   140013168:	mov    DWORD PTR [rsp+0x24],esi
   14001316c:	mov    rsi,QWORD PTR [rsp+0x138]
   140013174:	lea    rcx,[rsp+0x28]
   140013179:	mov    rdx,rsi
   14001317c:	mov    DWORD PTR [rsp+0x20],ebp
   140013180:	call   QWORD PTR [rip+0xc452]        # 0x14001f5d8
   140013186:	mov    r11d,r12d
   140013189:	mov    eax,edi
   14001318b:	sub    r11d,r15d
   14001318e:	sub    eax,r12d
   140013191:	lea    rdx,[rsp+0x20]
   140013196:	mov    rcx,r14
   140013199:	mov    DWORD PTR [rsp+0x30],r11d
   14001319e:	mov    DWORD PTR [rsp+0x34],eax
   1400131a2:	call   0x140012170
   1400131a7:	lea    rcx,[rsp+0x28]
   1400131ac:	call   QWORD PTR [rip+0xc406]        # 0x14001f5b8
   1400131b2:	jmp    0x1400134d6
   1400131b7:	cmp    esi,0x8d
   1400131bd:	jle    0x140013168
   1400131bf:	lea    eax,[rsi-0x90]
   1400131c5:	cmp    eax,0x16
   1400131c8:	ja     0x140013677
   1400131ce:	cdqe   
   1400131d0:	mov    ecx,DWORD PTR [r10+rax*4+0x137a4]
   1400131d8:	add    rcx,r10
   1400131db:	jmp    rcx
   1400131dd:	movzx  eax,BYTE PTR [rdi]
   1400131e0:	mov    rbx,rdi
   1400131e3:	test   al,al
   1400131e5:	je     0x140013203
   1400131e7:	cmp    al,0x22
   1400131e9:	je     0x140013203
   1400131eb:	cmp    al,0x5c
   1400131ed:	jne    0x1400131f7
   1400131ef:	inc    rbx
   1400131f2:	cmp    BYTE PTR [rbx],0x0
   1400131f5:	je     0x14001320b
   1400131f7:	mov    al,BYTE PTR [rbx+0x1]
   1400131fa:	inc    rbx
   1400131fd:	test   al,al
   1400131ff:	jne    0x1400131e7
   140013201:	jmp    0x14001320b
   140013203:	cmp    BYTE PTR [rbx],0x0
   140013206:	je     0x14001320b
   140013208:	inc    rbx
   14001320b:	cmp    BYTE PTR [rip+0x17e6e],0x0        # 0x14002b080
   140013212:	mov    rdi,rbx
   140013215:	mov    esi,0x4
   14001321a:	jne    0x140013168
   140013220:	mov    rax,QWORD PTR [r14]
   140013223:	cmp    DWORD PTR [rax+0x4],0x0
   140013227:	je     0x140013168
   14001322d:	mov    rcx,r14
   140013230:	call   0x140012950
   140013235:	cmp    DWORD PTR [rax-0x14],esi
   140013238:	jne    0x140013168
   14001323e:	mov    rcx,r14
   140013241:	call   0x140012950
   140013246:	lea    rdx,[rsp+0x130]
   14001324e:	mov    r9d,DWORD PTR [rax-0x4]
   140013252:	mov    r8d,DWORD PTR [rax-0x8]
   140013256:	lea    rcx,[rax-0x10]
   14001325a:	sub    r9d,0x2
   14001325e:	inc    r8d
   140013261:	call   QWORD PTR [rip+0xc369]        # 0x14001f5d0
   140013267:	mov    rsi,QWORD PTR [rsp+0x138]
   14001326f:	sub    ebx,r12d
   140013272:	sub    r12d,r15d
   140013275:	lea    r9d,[rbx-0x2]
   140013279:	lea    rdx,[rsp+0xe0]
   140013281:	lea    r8d,[r12+0x1]
   140013286:	mov    rcx,rsi
   140013289:	call   QWORD PTR [rip+0xc341]        # 0x14001f5d0
   14001328f:	lea    rcx,[rsp+0x130]
   140013297:	mov    rdx,rax
   14001329a:	call   QWORD PTR [rip+0xc340]        # 0x14001f5e0
   1400132a0:	lea    rcx,[rsp+0xe0]
   1400132a8:	call   QWORD PTR [rip+0xc30a]        # 0x14001f5b8
   1400132ae:	lea    rcx,[rsp+0x130]
   1400132b6:	mov    dl,0x22
   1400132b8:	call   QWORD PTR [rip+0xc062]        # 0x14001f320
   1400132be:	lea    rcx,[rsp+0x130]
   1400132c6:	mov    dl,0x22
   1400132c8:	call   QWORD PTR [rip+0xc2ca]        # 0x14001f598
   1400132ce:	mov    rcx,r14
   1400132d1:	call   0x140012950
   1400132d6:	lea    rdx,[rsp+0x130]
   1400132de:	lea    rcx,[rsp+0x28]
   1400132e3:	mov    eax,DWORD PTR [rax-0x18]
   1400132e6:	mov    DWORD PTR [rsp+0x24],0x4
   1400132ee:	mov    DWORD PTR [rsp+0x20],eax
   1400132f2:	call   QWORD PTR [rip+0xc2e0]        # 0x14001f5d8
   1400132f8:	mov    rax,QWORD PTR [rsp+0x28]
   1400132fd:	xor    ebx,ebx
   1400132ff:	mov    DWORD PTR [rsp+0x30],ebx
   140013303:	mov    ecx,DWORD PTR [rax+0x4]
   140013306:	mov    DWORD PTR [rsp+0x34],ecx
   14001330a:	mov    rcx,r14
   14001330d:	call   0x140012950
   140013312:	mov    ecx,DWORD PTR [rsp+0x20]
   140013316:	lea    rdx,[rsp+0x28]
   14001331b:	mov    DWORD PTR [rax-0x18],ecx
   14001331e:	mov    ecx,DWORD PTR [rsp+0x24]
   140013322:	mov    rbx,rax
   140013325:	mov    DWORD PTR [rax-0x14],ecx
   140013328:	lea    rcx,[rax-0x10]
   14001332c:	call   QWORD PTR [rip+0xc226]        # 0x14001f558
   140013332:	mov    r11d,DWORD PTR [rsp+0x30]
   140013337:	mov    DWORD PTR [rbx-0x8],r11d
   14001333b:	mov    ecx,DWORD PTR [rsp+0x34]
   14001333f:	mov    DWORD PTR [rbx-0x4],ecx
   140013342:	lea    rcx,[rsp+0x28]
   140013347:	call   QWORD PTR [rip+0xc26b]        # 0x14001f5b8
   14001334d:	lea    rcx,[rsp+0x130]
   140013355:	call   QWORD PTR [rip+0xc25d]        # 0x14001f5b8
   14001335b:	jmp    0x1400134d6
   140013360:	movzx  eax,BYTE PTR [rdi]
   140013363:	test   al,al
   140013365:	je     0x140013393
   140013367:	cmp    al,0x27
   140013369:	jne    0x140013377
   14001336b:	cmp    BYTE PTR [rdi-0x1],0x5c
   14001336f:	jne    0x14001338b
   140013371:	cmp    BYTE PTR [rdi-0x2],0x5c
   140013375:	je     0x14001338b
   140013377:	mov    al,BYTE PTR [rdi+0x1]
   14001337a:	inc    rdi
   14001337d:	test   al,al
   14001337f:	jne    0x140013367
   140013381:	mov    esi,0x3
   140013386:	jmp    0x140013168
   14001338b:	cmp    BYTE PTR [rdi],0x0
   14001338e:	je     0x140013393
   140013390:	inc    rdi
   140013393:	mov    esi,0x3
   140013398:	jmp    0x140013168
   14001339d:	mov    esi,0x7
   1400133a2:	sub    rdi,0x2
   1400133a6:	jmp    0x140013168
   1400133ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400133b0:	movzx  eax,BYTE PTR [rdi]
   1400133b3:	sub    al,0x30
   1400133b5:	cmp    al,0x9
   1400133b7:	ja     0x1400133be
   1400133b9:	inc    rdi
   1400133bc:	jmp    0x1400133b0
   1400133be:	movzx  ecx,BYTE PTR [rdi]
   1400133c1:	test   cl,cl
   1400133c3:	je     0x1400133e0
   1400133c5:	cmp    cl,0x2e
   1400133c8:	jne    0x1400133e0
   1400133ca:	mov    esi,0x92
   1400133cf:	inc    rdi
   1400133d2:	movzx  eax,BYTE PTR [rdi]
   1400133d5:	sub    al,0x30
   1400133d7:	cmp    al,0x9
   1400133d9:	ja     0x140013433
   1400133db:	inc    rdi
   1400133de:	jmp    0x1400133d2
   1400133e0:	mov    rax,rdi
   1400133e3:	mov    esi,0x2
   1400133e8:	sub    rax,r12
   1400133eb:	cmp    rax,0x1
   1400133ef:	jne    0x140013168
   1400133f5:	cmp    cl,0x78
   1400133f8:	je     0x140013403
   1400133fa:	cmp    cl,0x58
   1400133fd:	jne    0x140013168
   140013403:	cmp    BYTE PTR [r12],0x30
   140013408:	jne    0x140013168
   14001340e:	inc    rdi
   140013411:	movzx  eax,BYTE PTR [rdi]
   140013414:	cmp    al,0x61
   140013416:	jl     0x14001341c
   140013418:	cmp    al,0x66
   14001341a:	jle    0x14001342e
   14001341c:	cmp    al,0x41
   14001341e:	jl     0x140013424
   140013420:	cmp    al,0x46
   140013422:	jle    0x14001342e
   140013424:	sub    al,0x30
   140013426:	cmp    al,0x9
   140013428:	ja     0x140013168
   14001342e:	inc    rdi
   140013431:	jmp    0x140013411
   140013433:	movzx  eax,BYTE PTR [rdi]
   140013436:	cmp    al,0x2b
   140013438:	je     0x14001343e
   14001343a:	cmp    al,0x2d
   14001343c:	jne    0x140013441
   14001343e:	inc    rdi
   140013441:	movzx  eax,BYTE PTR [rdi]
   140013444:	cmp    al,0x65
   140013446:	je     0x14001344c
   140013448:	cmp    al,0x45
   14001344a:	jne    0x14001345e
   14001344c:	inc    rdi
   14001344f:	nop
   140013450:	movzx  eax,BYTE PTR [rdi]
   140013453:	sub    al,0x30
   140013455:	cmp    al,0x9
   140013457:	ja     0x14001345e
   140013459:	inc    rdi
   14001345c:	jmp    0x140013450
   14001345e:	movzx  eax,BYTE PTR [rdi]
   140013461:	cmp    al,0x66
   140013463:	je     0x140013475
   140013465:	cmp    al,0x46
   140013467:	je     0x140013475
   140013469:	cmp    al,0x6c
   14001346b:	je     0x140013475
   14001346d:	cmp    al,0x4c
   14001346f:	jne    0x140013168
   140013475:	inc    rdi
   140013478:	jmp    0x140013168
   14001347d:	test   r13d,r13d
   140013480:	jne    0x140013168
   140013486:	movzx  eax,BYTE PTR [rdi]
   140013489:	mov    r13d,0x2
   14001348f:	test   al,al
   140013491:	je     0x1400134a5
   140013493:	cmp    al,0x20
   140013495:	je     0x14001349b
   140013497:	cmp    al,0x9
   140013499:	jne    0x1400134a5
   14001349b:	mov    al,BYTE PTR [rdi+0x1]
   14001349e:	inc    rdi
   1400134a1:	test   al,al
   1400134a3:	jne    0x140013493
   1400134a5:	movzx  ecx,BYTE PTR [rdi]
   1400134a8:	call   0x140001140
   1400134ad:	test   al,al
   1400134af:	je     0x14001369e
   1400134b5:	mov    rsi,QWORD PTR [rsp+0x138]
   1400134bd:	mov    r13d,0x3
   1400134c3:	jmp    0x1400134d6
   1400134c5:	test   r13d,r13d
   1400134c8:	jne    0x140013168
   1400134ce:	mov    rsi,QWORD PTR [rsp+0x138]
   1400134d6:	cmp    BYTE PTR [rdi],0x0
   1400134d9:	lea    r10,[rip+0xfffffffffffecb20]        # 0x140000000
   1400134e0:	jne    0x140012aa3
   1400134e6:	mov    r12,QWORD PTR [rsp+0x140]
   1400134ee:	lea    rcx,[rsp+0x40]
   1400134f3:	mov    DWORD PTR [rsp+0x38],0xffffffff
   1400134fb:	mov    DWORD PTR [rsp+0x3c],0x0
   140013503:	call   QWORD PTR [rip+0xc0b7]        # 0x14001f5c0
   140013509:	lea    rdx,[rsp+0x38]
   14001350e:	xor    ebx,ebx
   140013510:	mov    rcx,r14
   140013513:	mov    DWORD PTR [rsp+0x48],ebx
   140013517:	mov    DWORD PTR [rsp+0x4c],0xffffffff
   14001351f:	call   0x140012170
   140013524:	lea    rcx,[rsp+0x40]
   140013529:	call   QWORD PTR [rip+0xc089]        # 0x14001f5b8
   14001352f:	mov    rax,r14
   140013532:	add    rsp,0xf0
   140013539:	pop    r15
   14001353b:	pop    r14
   14001353d:	pop    r13
   14001353f:	pop    rdi
   140013540:	pop    rsi
   140013541:	pop    rbp
   140013542:	pop    rbx
   140013543:	ret    
   140013544:	inc    ebp
   140013546:	cmp    r13d,0x6
   14001354a:	jne    0x140013691
   140013550:	xor    r13d,r13d
   140013553:	jmp    0x140013168
   140013558:	movzx  eax,BYTE PTR [rdi]
   14001355b:	mov    rcx,rdi
   14001355e:	test   al,al
   140013560:	je     0x140013574
   140013562:	cmp    al,0x20
   140013564:	je     0x14001356a
   140013566:	cmp    al,0x9
   140013568:	jne    0x14001357c
   14001356a:	mov    al,BYTE PTR [rdi+0x1]
   14001356d:	inc    rdi
   140013570:	test   al,al
   140013572:	jne    0x140013562
   140013574:	mov    rdi,rcx
   140013577:	jmp    0x140013168
   14001357c:	movzx  eax,BYTE PTR [rdi]
   14001357f:	test   al,al
   140013581:	je     0x140013574
   140013583:	cmp    al,0xa
   140013585:	jne    0x140013574
   140013587:	mov    rsi,QWORD PTR [rsp+0x138]
   14001358f:	inc    rdi
   140013592:	jmp    0x1400134d6
   140013597:	movzx  eax,BYTE PTR [rdi]
   14001359a:	cmp    al,0x61
   14001359c:	jl     0x1400135a2
   14001359e:	cmp    al,0x7a
   1400135a0:	jle    0x1400135ba
   1400135a2:	cmp    al,0x41
   1400135a4:	jl     0x1400135aa
   1400135a6:	cmp    al,0x5a
   1400135a8:	jle    0x1400135ba
   1400135aa:	cmp    al,0x30
   1400135ac:	jl     0x1400135b2
   1400135ae:	cmp    al,0x39
   1400135b0:	jle    0x1400135ba
   1400135b2:	cmp    al,0x5f
   1400135b4:	je     0x1400135ba
   1400135b6:	cmp    al,0x24
   1400135b8:	jne    0x1400135bf
   1400135ba:	inc    rdi
   1400135bd:	jmp    0x140013597
   1400135bf:	mov    esi,0x1
   1400135c4:	jmp    0x140013168
   1400135c9:	movzx  eax,BYTE PTR [rdi]
   1400135cc:	test   al,al
   1400135ce:	je     0x14001360e
   1400135d0:	cmp    al,0xa
   1400135d2:	jne    0x1400135d6
   1400135d4:	inc    ebp
   1400135d6:	movzx  eax,BYTE PTR [rdi+0x1]
   1400135da:	inc    rdi
   1400135dd:	test   al,al
   1400135df:	je     0x14001360e
   1400135e1:	cmp    al,0xa
   1400135e3:	jne    0x1400135e7
   1400135e5:	inc    ebp
   1400135e7:	movzx  eax,BYTE PTR [rdi+0x1]
   1400135eb:	inc    rdi
   1400135ee:	test   al,al
   1400135f0:	je     0x14001360e
   1400135f2:	cmp    BYTE PTR [rdi-0x1],0x2f
   1400135f6:	jne    0x1400135fe
   1400135f8:	cmp    BYTE PTR [rdi-0x2],0x2a
   1400135fc:	je     0x14001360e
   1400135fe:	cmp    al,0xa
   140013600:	jne    0x140013604
   140013602:	inc    ebp
   140013604:	mov    al,BYTE PTR [rdi+0x1]
   140013607:	inc    rdi
   14001360a:	test   al,al
   14001360c:	jne    0x1400135f2
   14001360e:	mov    esi,0x9a
   140013613:	movzx  eax,BYTE PTR [rdi]
   140013616:	test   al,al
   140013618:	je     0x140013632
   14001361a:	nop    WORD PTR [rax+rax*1+0x0]
   140013620:	cmp    al,0x20
   140013622:	je     0x140013628
   140013624:	cmp    al,0x9
   140013626:	jne    0x140013632
   140013628:	mov    al,BYTE PTR [rdi+0x1]
   14001362b:	inc    rdi
   14001362e:	test   al,al
   140013630:	jne    0x140013620
   140013632:	cmp    BYTE PTR [rip+0x17a47],0x0        # 0x14002b080
   140013639:	jne    0x140013168
   14001363f:	mov    rsi,QWORD PTR [rsp+0x138]
   140013647:	jmp    0x1400134d6
   14001364c:	movzx  eax,BYTE PTR [rdi]
   14001364f:	test   al,al
   140013651:	je     0x1400134e6
   140013657:	cmp    al,0xa
   140013659:	je     0x140013684
   14001365b:	mov    al,BYTE PTR [rdi+0x1]
   14001365e:	inc    rdi
   140013661:	test   al,al
   140013663:	jne    0x140013657
   140013665:	jmp    0x1400134e6
   14001366a:	mov    rsi,QWORD PTR [rsp+0x138]
   140013672:	jmp    0x1400134d6
   140013677:	mov    rsi,QWORD PTR [rsp+0x138]
   14001367f:	jmp    0x1400134d6
   140013684:	mov    rsi,QWORD PTR [rsp+0x138]
   14001368c:	jmp    0x1400134d6
   140013691:	mov    rsi,QWORD PTR [rsp+0x138]
   140013699:	jmp    0x1400134d6
   14001369e:	mov    rsi,QWORD PTR [rsp+0x138]
   1400136a6:	jmp    0x1400134d6
   1400136ab:	mov    rsi,QWORD PTR [rsp+0x138]
   1400136b3:	jmp    0x1400134d6
   1400136b8:	xchg   edx,eax
   1400136b9:	sub    eax,DWORD PTR [rcx]
   1400136bb:	add    BYTE PTR [rsi+0x30],ch
   1400136be:	add    DWORD PTR [rax],eax
   1400136c0:	or     esi,DWORD PTR [rax]
   1400136c2:	add    DWORD PTR [rax],eax
   1400136c4:	lea    ebp,[rdi]
   1400136c6:	add    DWORD PTR [rax],eax
   1400136c8:	repz sub eax,0x2d720001
   1400136ce:	add    DWORD PTR [rax],eax
   1400136d0:	mov    BYTE PTR [rip+0x2dd00001],ch        # 0x16dd136d7
   1400136d6:	add    DWORD PTR [rax],eax
   1400136d8:	popf   
   1400136d9:	add    DWORD PTR cs:[rax],eax
   1400136dc:	sub    eax,0xe1000130
   1400136e1:	(bad)  
   1400136e2:	add    DWORD PTR [rax],eax
   1400136e4:	(bad)  
   1400136e5:	xor    BYTE PTR [rcx],al
   1400136e7:	add    bl,ch
   1400136e9:	sub    eax,DWORD PTR [rcx]
   1400136eb:	add    bl,dh
   1400136ed:	sub    eax,DWORD PTR [rcx]
   1400136ef:	add    BYTE PTR [rdx+0x6700012c],bl
   1400136f5:	sub    eax,0x2b9a0001
   1400136fa:	add    DWORD PTR [rax],eax
   1400136fc:	add    BYTE PTR [rax],dl
   1400136fe:	adc    BYTE PTR [rax],dl
   140013700:	adc    BYTE PTR [rax],dl
   140013702:	adc    BYTE PTR [rcx],al
   140013704:	adc    BYTE PTR [rax],dl
   140013706:	adc    BYTE PTR [rax],dl
   140013708:	adc    BYTE PTR [rax],dl
   14001370a:	adc    BYTE PTR [rax],dl
   14001370c:	adc    BYTE PTR [rax],dl
   14001370e:	adc    BYTE PTR [rax],dl
   140013710:	adc    BYTE PTR [rax],dl
   140013712:	adc    BYTE PTR [rax],dl
   140013714:	adc    BYTE PTR [rax],dl
   140013716:	adc    BYTE PTR [rax],dl
   140013718:	adc    BYTE PTR [rax],dl
   14001371a:	adc    BYTE PTR [rax],dl
   14001371c:	adc    BYTE PTR [rax],dl
   14001371e:	adc    BYTE PTR [rax],dl
   140013720:	adc    BYTE PTR [rax],dl
   140013722:	adc    BYTE PTR [rax],dl
   140013724:	adc    BYTE PTR [rax],dl
   140013726:	adc    BYTE PTR [rax],dl
   140013728:	adc    BYTE PTR [rax],dl
   14001372a:	adc    BYTE PTR [rax],dl
   14001372c:	adc    BYTE PTR [rax],dl
   14001372e:	adc    BYTE PTR [rax],dl
   140013730:	adc    BYTE PTR [rax],dl
   140013732:	adc    BYTE PTR [rax],dl
   140013734:	adc    BYTE PTR [rax],dl
   140013736:	adc    BYTE PTR [rax],dl
   140013738:	adc    BYTE PTR [rax],dl
   14001373a:	adc    BYTE PTR [rax],dl
   14001373c:	adc    BYTE PTR [rax],dl
   14001373e:	adc    BYTE PTR [rax],dl
   140013740:	adc    BYTE PTR [rax],dl
   140013742:	adc    BYTE PTR [rax],dl
   140013744:	adc    BYTE PTR [rax],dl
   140013746:	adc    BYTE PTR [rax],dl
   140013748:	adc    BYTE PTR [rax],dl
   14001374a:	adc    BYTE PTR [rax],dl
   14001374c:	adc    BYTE PTR [rax],dl
   14001374e:	adc    BYTE PTR [rax],dl
   140013750:	adc    BYTE PTR [rax],dl
   140013752:	adc    BYTE PTR [rax],dl
   140013754:	adc    BYTE PTR [rax],dl
   140013756:	adc    BYTE PTR [rax],dl
   140013758:	adc    BYTE PTR [rax],dl
   14001375a:	adc    BYTE PTR [rax],dl
   14001375c:	adc    BYTE PTR [rax],dl
   14001375e:	adc    BYTE PTR [rax],dl
   140013760:	adc    BYTE PTR [rax],dl
   140013762:	adc    BYTE PTR [rax],dl
   140013764:	adc    BYTE PTR [rax],dl
   140013766:	adc    BYTE PTR [rax],dl
   140013768:	adc    BYTE PTR [rax],dl
   14001376a:	adc    BYTE PTR [rax],dl
   14001376c:	adc    BYTE PTR [rax],dl
   14001376e:	adc    BYTE PTR [rax],dl
   140013770:	adc    BYTE PTR [rax],dl
   140013772:	adc    BYTE PTR [rax],dl
   140013774:	adc    BYTE PTR [rax],dl
   140013776:	adc    BYTE PTR [rax],dl
   140013778:	adc    BYTE PTR [rax],dl
   14001377a:	adc    BYTE PTR [rax],dl
   14001377c:	adc    BYTE PTR [rax],dl
   14001377e:	adc    BYTE PTR [rax],dl
   140013780:	adc    BYTE PTR [rax],dl
   140013782:	adc    BYTE PTR [rax],dl
   140013784:	adc    BYTE PTR [rax],dl
   140013786:	adc    BYTE PTR [rax],dl
   140013788:	adc    BYTE PTR [rax],dl
   14001378a:	adc    BYTE PTR [rax],dl
   14001378c:	add    al,BYTE PTR [rbx]
   14001378e:	add    al,0x10
   140013790:	add    eax,0x8071006
   140013795:	or     DWORD PTR [rdx],ecx
   140013797:	or     edx,DWORD PTR [rax]
   140013799:	or     al,0x10
   14001379b:	adc    BYTE PTR [rip+0x1010100e],cl        # 0x1501147af
   1400137a1:	pcmpgtd mm2,QWORD PTR [rax+0x1364c]
   1400137a8:	leave  
   1400137a9:	xor    eax,0x33d20001
   1400137ae:	add    DWORD PTR [rax],eax
   1400137b0:	jge    0x1400137e6
   1400137b2:	add    DWORD PTR [rax],eax
   1400137b4:	fnsave [rcx]
   1400137b6:	add    DWORD PTR [rax],eax
   1400137b8:	(bad)  
   1400137b9:	xor    eax,DWORD PTR [rcx]
   1400137bb:	add    BYTE PTR [rbp-0x4ffffecd],bl
   1400137c1:	xor    eax,DWORD PTR [rcx]
   1400137c3:	add    BYTE PTR [rdi+0x44000135],dl
   1400137c9:	xor    eax,0x36130001
   1400137ce:	add    DWORD PTR [rax],eax
   1400137d0:	pop    rax
   1400137d1:	xor    eax,0x366a0001
   1400137d6:	add    DWORD PTR [rax],eax
   1400137d8:	push   0x36
   1400137da:	add    DWORD PTR [rax],eax
   1400137dc:	push   0x36
   1400137de:	add    DWORD PTR [rax],eax
   1400137e0:	push   0x36
   1400137e2:	add    DWORD PTR [rax],eax
   1400137e4:	push   0x36
   1400137e6:	add    DWORD PTR [rax],eax
   1400137e8:	push   0x36
   1400137ea:	add    DWORD PTR [rax],eax
   1400137ec:	push   0x36
   1400137ee:	add    DWORD PTR [rax],eax
   1400137f0:	push   0x36
   1400137f2:	add    DWORD PTR [rax],eax
   1400137f4:	push   0x36
   1400137f6:	add    DWORD PTR [rax],eax
   1400137f8:	push   0x36
   1400137fa:	add    DWORD PTR [rax],eax
   1400137fc:	(bad)
   1400137ff:	add    BYTE PTR [rax-0x77],cl
   140013802:	pop    rsp
   140013803:	and    al,0x8
   140013805:	push   rdi
   140013806:	sub    rsp,0x20
   14001380a:	mov    rbx,rcx
   14001380d:	call   0x140012860
   140013812:	mov    rdx,QWORD PTR [rbx]
   140013815:	movsxd rcx,DWORD PTR [rbx+0x8]
   140013819:	mov    edi,eax
   14001381b:	cmp    ecx,DWORD PTR [rdx+0x4]
   14001381e:	jl     0x140013824
   140013820:	xor    ecx,ecx
   140013822:	jmp    0x14001383a
   140013824:	lea    eax,[rcx+0x1]
   140013827:	lea    rcx,[rcx+rcx*2]
   14001382b:	mov    DWORD PTR [rbx+0x8],eax
   14001382e:	mov    rax,QWORD PTR [rdx+0x10]
   140013832:	lea    rcx,[rax+rcx*8]
   140013836:	mov    ecx,DWORD PTR [rcx+rdx*1+0x4]
   14001383a:	sub    ecx,0x4e
   14001383d:	je     0x14001386d
   14001383f:	cmp    ecx,0x1
   140013842:	je     0x140013854
   140013844:	dec    DWORD PTR [rbx+0x8]
   140013847:	mov    eax,edi
   140013849:	mov    rbx,QWORD PTR [rsp+0x30]
   14001384e:	add    rsp,0x20
   140013852:	pop    rdi
   140013853:	ret    
   140013854:	mov    rcx,rbx
   140013857:	call   0x140013800
   14001385c:	mov    ecx,eax
   14001385e:	sar    edi,cl
   140013860:	mov    eax,edi
   140013862:	mov    rbx,QWORD PTR [rsp+0x30]
   140013867:	add    rsp,0x20
   14001386b:	pop    rdi
   14001386c:	ret    
   14001386d:	mov    rcx,rbx
   140013870:	call   0x140013800
   140013875:	mov    rbx,QWORD PTR [rsp+0x30]
   14001387a:	mov    ecx,eax
   14001387c:	shl    edi,cl
   14001387e:	mov    eax,edi
   140013880:	add    rsp,0x20
   140013884:	pop    rdi
   140013885:	ret    
   140013886:	int3   
   140013887:	int3   
   140013888:	int3   
   140013889:	int3   
   14001388a:	int3   
   14001388b:	int3   
   14001388c:	int3   
   14001388d:	int3   
   14001388e:	int3   
   14001388f:	int3   
   140013890:	rex push rbx
   140013892:	push   rbp
   140013893:	push   rsi
   140013894:	push   rdi
   140013895:	push   r12
   140013897:	push   r13
   140013899:	sub    rsp,0x28
   14001389d:	mov    rbp,rcx
   1400138a0:	call   0x1400128e0
   1400138a5:	mov    QWORD PTR [rsp+0x70],r14
   1400138aa:	xor    ebx,ebx
   1400138ac:	mov    QWORD PTR [rsp+0x20],r15
   1400138b1:	mov    rsi,rax
   1400138b4:	mov    rax,QWORD PTR [rbp+0x0]
   1400138b8:	mov    ecx,DWORD PTR [rax]
   1400138ba:	cmp    ecx,0x1
   1400138bd:	je     0x1400138f9
   1400138bf:	test   ecx,ecx
   1400138c1:	je     0x1400138f9
   1400138c3:	mov    r8d,DWORD PTR [rax+0x8]
   1400138c7:	btr    r8d,0x1f
   1400138cc:	test   r8d,r8d
   1400138cf:	jne    0x1400138eb
   1400138d1:	lea    r9d,[r8+0x2]
   1400138d5:	xor    r8d,r8d
   1400138d8:	lea    edx,[r9+0x6]
   1400138dc:	lea    ecx,[rdx+0x10]
   1400138df:	call   QWORD PTR [rip+0xbc33]        # 0x14001f518
   1400138e5:	mov    QWORD PTR [rbp+0x0],rax
   1400138e9:	jmp    0x1400138f9
   1400138eb:	mov    edx,DWORD PTR [rax+0x4]
   1400138ee:	mov    r9d,ebx
   1400138f1:	mov    rcx,rbp
   1400138f4:	call   0x140011cb0
   1400138f9:	mov    r10,QWORD PTR [rbp+0x0]
   1400138fd:	movsxd rax,DWORD PTR [r10+0x4]
   140013901:	lea    rcx,[rax+rax*2]
   140013905:	mov    rax,QWORD PTR [r10+0x10]
   140013909:	lea    rdx,[rax+rcx*8]
   14001390d:	add    rdx,r10
   140013910:	cmp    rsi,rdx
   140013913:	je     0x140013ae4
   140013919:	cmp    DWORD PTR [rsi+0x4],0x4
   14001391d:	jne    0x140013adb
   140013923:	mov    edi,DWORD PTR [rsi+0x14]
   140013926:	lea    r15,[rsi+0x14]
   14001392a:	mov    r12,rsi
   14001392d:	mov    QWORD PTR [rsp+0x68],rsi
   140013932:	mov    eax,DWORD PTR [r10]
   140013935:	add    rsi,0x18
   140013939:	cmp    eax,0x1
   14001393c:	je     0x140013979
   14001393e:	test   eax,eax
   140013940:	je     0x140013979
   140013942:	mov    r8d,DWORD PTR [r10+0x8]
   140013946:	btr    r8d,0x1f
   14001394b:	test   r8d,r8d
   14001394e:	jne    0x14001396a
   140013950:	lea    r9d,[r8+0x2]
   140013954:	xor    r8d,r8d
   140013957:	lea    edx,[r9+0x6]
   14001395b:	lea    ecx,[rdx+0x10]
   14001395e:	call   QWORD PTR [rip+0xbbb4]        # 0x14001f518
   140013964:	mov    QWORD PTR [rbp+0x0],rax
   140013968:	jmp    0x140013979
   14001396a:	mov    edx,DWORD PTR [r10+0x4]
   14001396e:	mov    r9d,ebx
   140013971:	mov    rcx,rbp
   140013974:	call   0x140011cb0
   140013979:	mov    r10,QWORD PTR [rbp+0x0]
   14001397d:	movsxd rax,DWORD PTR [r10+0x4]
   140013981:	lea    rcx,[rax+rax*2]
   140013985:	mov    rax,QWORD PTR [r10+0x10]
   140013989:	lea    rdx,[rax+rcx*8]
   14001398d:	add    rdx,r10
   140013990:	cmp    rsi,rdx
   140013993:	je     0x1400139a4
   140013995:	cmp    DWORD PTR [rsi+0x4],0x4
   140013999:	jne    0x1400139a4
   14001399b:	mov    eax,DWORD PTR [rsi+0x14]
   14001399e:	lea    edi,[rdi+rax*1-0x2]
   1400139a2:	jmp    0x140013932
   1400139a4:	mov    r9d,DWORD PTR [r15]
   1400139a7:	cmp    edi,r9d
   1400139aa:	je     0x140013a7a
   1400139b0:	mov    r8d,DWORD PTR [r12+0x10]
   1400139b5:	lea    r13,[r12+0x8]
   1400139ba:	lea    rdx,[rsp+0x60]
   1400139bf:	add    r9d,0xfffffffe
   1400139c3:	mov    rcx,r13
   1400139c6:	inc    r8d
   1400139c9:	call   QWORD PTR [rip+0xbc01]        # 0x14001f5d0
   1400139cf:	xor    edx,edx
   1400139d1:	mov    rcx,r13
   1400139d4:	call   QWORD PTR [rip+0xbbb6]        # 0x14001f590
   1400139da:	mov    edx,edi
   1400139dc:	mov    rcx,r13
   1400139df:	call   QWORD PTR [rip+0xbb93]        # 0x14001f578
   1400139e5:	mov    dl,0x22
   1400139e7:	mov    rcx,r13
   1400139ea:	call   QWORD PTR [rip+0xbba8]        # 0x14001f598
   1400139f0:	lea    rdx,[rsp+0x60]
   1400139f5:	mov    rcx,r13
   1400139f8:	call   QWORD PTR [rip+0xbbe2]        # 0x14001f5e0
   1400139fe:	lea    r14,[r12+0x18]
   140013a03:	mov    r12,r14
   140013a06:	cmp    r14,rsi
   140013a09:	je     0x140013a40
   140013a0b:	nop    DWORD PTR [rax+rax*1+0x0]
   140013a10:	mov    edi,DWORD PTR [r12+0x14]
   140013a15:	lea    rcx,[r12+0x8]
   140013a1a:	call   QWORD PTR [rip+0xbbd8]        # 0x14001f5f8
   140013a20:	movsxd rcx,DWORD PTR [r12+0x10]
   140013a25:	lea    r8d,[rdi-0x2]
   140013a29:	lea    rdx,[rax+rcx*1+0x1]
   140013a2e:	mov    rcx,r13
   140013a31:	call   QWORD PTR [rip+0xb8f1]        # 0x14001f328
   140013a37:	add    r12,0x18
   140013a3b:	cmp    r12,rsi
   140013a3e:	jne    0x140013a10
   140013a40:	mov    dl,0x22
   140013a42:	mov    rcx,r13
   140013a45:	call   QWORD PTR [rip+0xbb4d]        # 0x14001f598
   140013a4b:	mov    r11,QWORD PTR [r13+0x0]
   140013a4f:	mov    r8,rsi
   140013a52:	mov    eax,DWORD PTR [r11+0x4]
   140013a56:	mov    rdx,r14
   140013a59:	mov    rcx,rbp
   140013a5c:	mov    DWORD PTR [r15],eax
   140013a5f:	mov    rax,QWORD PTR [rsp+0x68]
   140013a64:	mov    DWORD PTR [rax+0x10],ebx
   140013a67:	call   0x1400122a0
   140013a6c:	lea    rcx,[rsp+0x60]
   140013a71:	mov    rsi,rax
   140013a74:	call   QWORD PTR [rip+0xbb3e]        # 0x14001f5b8
   140013a7a:	mov    rax,QWORD PTR [rbp+0x0]
   140013a7e:	mov    ecx,DWORD PTR [rax]
   140013a80:	cmp    ecx,0x1
   140013a83:	je     0x140013abf
   140013a85:	test   ecx,ecx
   140013a87:	je     0x140013abf
   140013a89:	mov    r8d,DWORD PTR [rax+0x8]
   140013a8d:	btr    r8d,0x1f
   140013a92:	test   r8d,r8d
   140013a95:	jne    0x140013ab1
   140013a97:	lea    r9d,[r8+0x2]
   140013a9b:	xor    r8d,r8d
   140013a9e:	lea    edx,[r9+0x6]
   140013aa2:	lea    ecx,[rdx+0x10]
   140013aa5:	call   QWORD PTR [rip+0xba6d]        # 0x14001f518
   140013aab:	mov    QWORD PTR [rbp+0x0],rax
   140013aaf:	jmp    0x140013abf
   140013ab1:	mov    edx,DWORD PTR [rax+0x4]
   140013ab4:	mov    r9d,ebx
   140013ab7:	mov    rcx,rbp
   140013aba:	call   0x140011cb0
   140013abf:	mov    r8,QWORD PTR [rbp+0x0]
   140013ac3:	movsxd rax,DWORD PTR [r8+0x4]
   140013ac7:	lea    rcx,[rax+rax*2]
   140013acb:	mov    rax,QWORD PTR [r8+0x10]
   140013acf:	lea    rdx,[rax+rcx*8]
   140013ad3:	add    rdx,r8
   140013ad6:	cmp    rsi,rdx
   140013ad9:	je     0x140013ae4
   140013adb:	add    rsi,0x18
   140013adf:	jmp    0x1400138b4
   140013ae4:	mov    r15,QWORD PTR [rsp+0x20]
   140013ae9:	mov    r14,QWORD PTR [rsp+0x70]
   140013aee:	add    rsp,0x28
   140013af2:	pop    r13
   140013af4:	pop    r12
   140013af6:	pop    rdi
   140013af7:	pop    rsi
   140013af8:	pop    rbp
   140013af9:	pop    rbx
   140013afa:	ret    
   140013afb:	int3   
   140013afc:	int3   
   140013afd:	int3   
   140013afe:	int3   
   140013aff:	int3   
   140013b00:	mov    r11,rsp
   140013b03:	push   rbx
   140013b04:	push   rsi
   140013b05:	push   rdi
   140013b06:	push   r14
   140013b08:	sub    rsp,0x98
   140013b0f:	mov    rax,QWORD PTR [rcx]
   140013b12:	mov    rbx,QWORD PTR [rip+0xba17]        # 0x14001f530
   140013b19:	or     r14d,0xffffffff
   140013b1d:	mov    r8d,DWORD PTR [rax+0x4]
   140013b21:	mov    QWORD PTR [r11-0x40],r15
   140013b25:	mov    rsi,rcx
   140013b28:	cmp    DWORD PTR [rcx+0x8],r8d
   140013b2c:	mov    r15,rdx
   140013b2f:	mov    QWORD PTR [r11+0x8],rbx
   140013b33:	jge    0x1400140de
   140013b39:	mov    QWORD PTR [r11-0x28],rbp
   140013b3d:	mov    QWORD PTR [r11-0x30],r12
   140013b41:	mov    QWORD PTR [r11-0x38],r13
   140013b45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013b50:	mov    r8,QWORD PTR [rsi]
   140013b53:	movsxd rdx,DWORD PTR [rsi+0x8]
   140013b57:	cmp    edx,DWORD PTR [r8+0x4]
   140013b5b:	jge    0x140013b7c
   140013b5d:	mov    rax,QWORD PTR [r8+0x10]
   140013b61:	lea    rcx,[rdx+rdx*2]
   140013b65:	lea    rcx,[rax+rcx*8]
   140013b69:	cmp    DWORD PTR [rcx+r8*1+0x4],0x9a
   140013b72:	jne    0x140013b7c
   140013b74:	lea    eax,[rdx+0x1]
   140013b77:	mov    DWORD PTR [rsi+0x8],eax
   140013b7a:	jmp    0x140013b53
   140013b7c:	movsxd rcx,DWORD PTR [rsi+0x8]
   140013b80:	cmp    ecx,DWORD PTR [r8+0x4]
   140013b84:	jge    0x140013baf
   140013b86:	lea    eax,[rcx+0x1]
   140013b89:	lea    rcx,[rcx+rcx*2]
   140013b8d:	mov    DWORD PTR [rsi+0x8],eax
   140013b90:	mov    rax,QWORD PTR [r8+0x10]
   140013b94:	lea    rcx,[rax+rcx*8]
   140013b98:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   140013b9d:	cmp    eax,0xa
   140013ba0:	je     0x1400140c6
   140013ba6:	cmp    eax,0x1
   140013ba9:	je     0x140013c9c
   140013baf:	mov    eax,DWORD PTR [rsi+0x8]
   140013bb2:	dec    eax
   140013bb4:	cdqe   
   140013bb6:	lea    rcx,[rax+rax*2]
   140013bba:	mov    rax,QWORD PTR [r8+0x10]
   140013bbe:	lea    rdx,[rax+rcx*8]
   140013bc2:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140013bc7:	lea    rcx,[rdx+r8*1+0x8]
   140013bcc:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140013bd1:	lea    rdx,[rsp+0xc8]
   140013bd9:	call   QWORD PTR [rip+0xb9f1]        # 0x14001f5d0
   140013bdf:	lea    rdx,[rip+0x12972]        # 0x140026558
   140013be6:	lea    rcx,[rsp+0xc8]
   140013bee:	call   QWORD PTR [rip+0xb9fc]        # 0x14001f5f0
   140013bf4:	test   eax,eax
   140013bf6:	je     0x140013fbc
   140013bfc:	mov    rax,QWORD PTR [rsp+0xc8]
   140013c04:	lea    rcx,[rsp+0xc8]
   140013c0c:	movsxd rdi,DWORD PTR [rax+0x4]
   140013c10:	call   QWORD PTR [rip+0xb9e2]        # 0x14001f5f8
   140013c16:	cmp    edi,0x1
   140013c19:	mov    r11,rax
   140013c1c:	jl     0x140013c7f
   140013c1e:	movzx  ecx,BYTE PTR [rax]
   140013c21:	cmp    cl,0x61
   140013c24:	jl     0x140013c2b
   140013c26:	cmp    cl,0x7a
   140013c29:	jle    0x140013c3f
   140013c2b:	cmp    cl,0x41
   140013c2e:	jl     0x140013c35
   140013c30:	cmp    cl,0x5a
   140013c33:	jle    0x140013c3f
   140013c35:	cmp    cl,0x5f
   140013c38:	je     0x140013c3f
   140013c3a:	cmp    cl,0x24
   140013c3d:	jne    0x140013c7f
   140013c3f:	mov    ecx,0x1
   140013c44:	cmp    edi,ecx
   140013c46:	jle    0x140013c8e
   140013c48:	nop    DWORD PTR [rax+rax*1+0x0]
   140013c50:	movzx  eax,BYTE PTR [rcx+r11*1]
   140013c55:	cmp    al,0x61
   140013c57:	jl     0x140013c5d
   140013c59:	cmp    al,0x7a
   140013c5b:	jle    0x140013c75
   140013c5d:	cmp    al,0x41
   140013c5f:	jl     0x140013c65
   140013c61:	cmp    al,0x5a
   140013c63:	jle    0x140013c75
   140013c65:	cmp    al,0x30
   140013c67:	jl     0x140013c6d
   140013c69:	cmp    al,0x39
   140013c6b:	jle    0x140013c75
   140013c6d:	cmp    al,0x5f
   140013c6f:	je     0x140013c75
   140013c71:	cmp    al,0x24
   140013c73:	jne    0x140013c7f
   140013c75:	inc    rcx
   140013c78:	cmp    rcx,rdi
   140013c7b:	jl     0x140013c50
   140013c7d:	jmp    0x140013c8e
   140013c7f:	lea    rdx,[rip+0x128a2]        # 0x140026528
   140013c86:	mov    rcx,rsi
   140013c89:	call   0x140019c50
   140013c8e:	lea    rcx,[rsp+0xc8]
   140013c96:	call   QWORD PTR [rip+0xb91c]        # 0x14001f5b8
   140013c9c:	mov    rdx,QWORD PTR [rsi]
   140013c9f:	mov    eax,DWORD PTR [rsi+0x8]
   140013ca2:	dec    eax
   140013ca4:	cdqe   
   140013ca6:	lea    rcx,[rax+rax*2]
   140013caa:	mov    rax,QWORD PTR [rdx+0x10]
   140013cae:	lea    rdi,[rax+rcx*8]
   140013cb2:	lea    rcx,[rsp+0x48]
   140013cb7:	add    rdi,rdx
   140013cba:	mov    eax,DWORD PTR [rdi]
   140013cbc:	lea    rdx,[rdi+0x8]
   140013cc0:	mov    DWORD PTR [rsp+0x40],eax
   140013cc4:	mov    eax,DWORD PTR [rdi+0x4]
   140013cc7:	mov    DWORD PTR [rsp+0x44],eax
   140013ccb:	call   QWORD PTR [rip+0xb907]        # 0x14001f5d8
   140013cd1:	mov    r12d,DWORD PTR [rdi+0x10]
   140013cd5:	mov    DWORD PTR [rsp+0x50],r12d
   140013cda:	mov    edi,DWORD PTR [rdi+0x14]
   140013cdd:	mov    DWORD PTR [rsp+0x54],edi
   140013ce1:	mov    rdx,QWORD PTR [rbx+0x10]
   140013ce5:	movsxd rax,DWORD PTR [rbx+0x4]
   140013ce9:	lea    rcx,[rax+rax*2]
   140013ced:	lea    rbp,[rdx+rbx*1]
   140013cf1:	lea    r13,[rdx+rcx*8]
   140013cf5:	add    r13,rbx
   140013cf8:	cmp    rbp,r13
   140013cfb:	je     0x140013ddf
   140013d01:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013d10:	lea    rdx,[rsp+0x48]
   140013d15:	lea    rcx,[rsp+0x30]
   140013d1a:	call   QWORD PTR [rip+0xb8b8]        # 0x14001f5d8
   140013d20:	mov    ebx,DWORD PTR [rbp+0x10]
   140013d23:	mov    DWORD PTR [rsp+0x38],r12d
   140013d28:	mov    r12d,DWORD PTR [rbp+0x14]
   140013d2c:	lea    rdx,[rbp+0x8]
   140013d30:	lea    rcx,[rsp+0x20]
   140013d35:	mov    DWORD PTR [rsp+0x3c],edi
   140013d39:	call   QWORD PTR [rip+0xb899]        # 0x14001f5d8
   140013d3f:	mov    DWORD PTR [rsp+0x28],ebx
   140013d43:	mov    DWORD PTR [rsp+0x2c],r12d
   140013d48:	cmp    r12d,DWORD PTR [rsp+0x3c]
   140013d4d:	je     0x140013d53
   140013d4f:	xor    bl,bl
   140013d51:	jmp    0x140013d9a
   140013d53:	xor    edi,edi
   140013d55:	test   r12d,r12d
   140013d58:	jle    0x140013d98
   140013d5a:	nop    WORD PTR [rax+rax*1+0x0]
   140013d60:	lea    edx,[rbx+rdi*1]
   140013d63:	lea    rcx,[rsp+0x20]
   140013d68:	call   QWORD PTR [rip+0xb81a]        # 0x14001f588
   140013d6e:	mov    edx,DWORD PTR [rsp+0x38]
   140013d72:	lea    rcx,[rsp+0x30]
   140013d77:	add    edx,edi
   140013d79:	movzx  ebx,al
   140013d7c:	call   QWORD PTR [rip+0xb806]        # 0x14001f588
   140013d82:	cmp    bl,al
   140013d84:	jne    0x140013d94
   140013d86:	inc    edi
   140013d88:	cmp    edi,DWORD PTR [rsp+0x2c]
   140013d8c:	jge    0x140013d98
   140013d8e:	mov    ebx,DWORD PTR [rsp+0x28]
   140013d92:	jmp    0x140013d60
   140013d94:	xor    bl,bl
   140013d96:	jmp    0x140013d9a
   140013d98:	mov    bl,0x1
   140013d9a:	lea    rcx,[rsp+0x20]
   140013d9f:	call   QWORD PTR [rip+0xb813]        # 0x14001f5b8
   140013da5:	lea    rcx,[rsp+0x30]
   140013daa:	call   QWORD PTR [rip+0xb808]        # 0x14001f5b8
   140013db0:	test   bl,bl
   140013db2:	jne    0x140013dcb
   140013db4:	add    rbp,0x18
   140013db8:	cmp    rbp,r13
   140013dbb:	je     0x140013ddf
   140013dbd:	mov    edi,DWORD PTR [rsp+0x54]
   140013dc1:	mov    r12d,DWORD PTR [rsp+0x50]
   140013dc6:	jmp    0x140013d10
   140013dcb:	cmp    rbp,r13
   140013dce:	je     0x140013ddf
   140013dd0:	lea    rdx,[rip+0x12731]        # 0x140026508
   140013dd7:	mov    rcx,rsi
   140013dda:	call   0x140019c50
   140013ddf:	mov    eax,DWORD PTR [rsi+0x8]
   140013de2:	mov    r8,QWORD PTR [rsi]
   140013de5:	dec    eax
   140013de7:	cdqe   
   140013de9:	lea    rcx,[rax+rax*2]
   140013ded:	mov    rax,QWORD PTR [r8+0x10]
   140013df1:	lea    rdx,[rax+rcx*8]
   140013df5:	lea    rcx,[rsp+0xc0]
   140013dfd:	add    rdx,r8
   140013e00:	call   0x140012170
   140013e05:	mov    r11,QWORD PTR [rsi]
   140013e08:	nop    DWORD PTR [rax+rax*1+0x0]
   140013e10:	movsxd rdx,DWORD PTR [rsi+0x8]
   140013e14:	cmp    edx,DWORD PTR [r11+0x4]
   140013e18:	jge    0x140013e39
   140013e1a:	mov    rax,QWORD PTR [r11+0x10]
   140013e1e:	lea    rcx,[rdx+rdx*2]
   140013e22:	lea    rcx,[rax+rcx*8]
   140013e26:	cmp    DWORD PTR [rcx+r11*1+0x4],0x9a
   140013e2f:	jne    0x140013e39
   140013e31:	lea    eax,[rdx+0x1]
   140013e34:	mov    DWORD PTR [rsi+0x8],eax
   140013e37:	jmp    0x140013e10
   140013e39:	movsxd rcx,DWORD PTR [rsi+0x8]
   140013e3d:	cmp    ecx,DWORD PTR [r11+0x4]
   140013e41:	jge    0x140013e75
   140013e43:	lea    eax,[rcx+0x1]
   140013e46:	lea    rcx,[rcx+rcx*2]
   140013e4a:	mov    DWORD PTR [rsi+0x8],eax
   140013e4d:	mov    rax,QWORD PTR [r11+0x10]
   140013e51:	lea    rcx,[rax+rcx*8]
   140013e55:	mov    eax,DWORD PTR [rcx+r11*1+0x4]
   140013e5a:	cmp    eax,0xa
   140013e5d:	je     0x140013f03
   140013e63:	cmp    eax,0x5a
   140013e66:	jne    0x140013e75
   140013e68:	lea    rcx,[rsp+0x48]
   140013e6d:	call   QWORD PTR [rip+0xb745]        # 0x14001f5b8
   140013e73:	jmp    0x140013eeb
   140013e75:	mov    eax,DWORD PTR [rsi+0x8]
   140013e78:	dec    eax
   140013e7a:	cdqe   
   140013e7c:	lea    rcx,[rax+rax*2]
   140013e80:	mov    rax,QWORD PTR [r11+0x10]
   140013e84:	lea    rdx,[rax+rcx*8]
   140013e88:	mov    r9d,DWORD PTR [rdx+r11*1+0x14]
   140013e8d:	mov    r8d,DWORD PTR [rdx+r11*1+0x10]
   140013e92:	lea    rcx,[rdx+r11*1+0x8]
   140013e97:	lea    rdx,[rsp+0xd0]
   140013e9f:	call   QWORD PTR [rip+0xb72b]        # 0x14001f5d0
   140013ea5:	lea    rdx,[rip+0x126ac]        # 0x140026558
   140013eac:	lea    rcx,[rsp+0xd0]
   140013eb4:	call   QWORD PTR [rip+0xb736]        # 0x14001f5f0
   140013eba:	lea    rcx,[rsp+0xd0]
   140013ec2:	test   eax,eax
   140013ec4:	sete   bl
   140013ec7:	call   QWORD PTR [rip+0xb6eb]        # 0x14001f5b8
   140013ecd:	test   bl,bl
   140013ecf:	jne    0x140013f28
   140013ed1:	lea    rdx,[rip+0x12650]        # 0x140026528
   140013ed8:	mov    rcx,rsi
   140013edb:	call   0x140019c50
   140013ee0:	lea    rcx,[rsp+0x48]
   140013ee5:	call   QWORD PTR [rip+0xb6cd]        # 0x14001f5b8
   140013eeb:	mov    rax,QWORD PTR [rsi]
   140013eee:	mov    ecx,DWORD PTR [rax+0x4]
   140013ef1:	cmp    DWORD PTR [rsi+0x8],ecx
   140013ef4:	jge    0x140013f1b
   140013ef6:	mov    rbx,QWORD PTR [rsp+0xc0]
   140013efe:	jmp    0x140013b50
   140013f03:	lea    rcx,[rsp+0x48]
   140013f08:	call   QWORD PTR [rip+0xb6aa]        # 0x14001f5b8
   140013f0e:	mov    rbx,QWORD PTR [rsp+0xc0]
   140013f16:	jmp    0x1400140c6
   140013f1b:	mov    rbx,QWORD PTR [rsp+0xc0]
   140013f23:	jmp    0x1400140c6
   140013f28:	mov    BYTE PTR [r15+0x1],0x1
   140013f2d:	mov    r8,QWORD PTR [rsi]
   140013f30:	movsxd rdx,DWORD PTR [rsi+0x8]
   140013f34:	cmp    edx,DWORD PTR [r8+0x4]
   140013f38:	jge    0x140013f59
   140013f3a:	mov    rax,QWORD PTR [r8+0x10]
   140013f3e:	lea    rcx,[rdx+rdx*2]
   140013f42:	lea    rcx,[rax+rcx*8]
   140013f46:	cmp    DWORD PTR [rcx+r8*1+0x4],0x9a
   140013f4f:	jne    0x140013f59
   140013f51:	lea    eax,[rdx+0x1]
   140013f54:	mov    DWORD PTR [rsi+0x8],eax
   140013f57:	jmp    0x140013f30
   140013f59:	movsxd rdx,DWORD PTR [rsi+0x8]
   140013f5d:	cmp    edx,DWORD PTR [r8+0x4]
   140013f61:	jge    0x140013f95
   140013f63:	mov    rax,QWORD PTR [r8+0x10]
   140013f67:	lea    rcx,[rdx+rdx*2]
   140013f6b:	lea    rcx,[rax+rcx*8]
   140013f6f:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa
   140013f75:	jne    0x140013f95
   140013f77:	lea    eax,[rdx+0x1]
   140013f7a:	lea    rcx,[rsp+0x48]
   140013f7f:	mov    DWORD PTR [rsi+0x8],eax
   140013f82:	call   QWORD PTR [rip+0xb630]        # 0x14001f5b8
   140013f88:	mov    rbx,QWORD PTR [rsp+0xc0]
   140013f90:	jmp    0x1400140c6
   140013f95:	lea    rdx,[rip+0x12544]        # 0x1400264e0
   140013f9c:	mov    rcx,rsi
   140013f9f:	call   0x140019c50
   140013fa4:	lea    rcx,[rsp+0x48]
   140013fa9:	call   QWORD PTR [rip+0xb609]        # 0x14001f5b8
   140013faf:	mov    rbx,QWORD PTR [rsp+0xc0]
   140013fb7:	jmp    0x1400140c6
   140013fbc:	lea    rdx,[rip+0x1250d]        # 0x1400264d0
   140013fc3:	lea    rcx,[rsp+0xd8]
   140013fcb:	mov    r8d,r14d
   140013fce:	mov    BYTE PTR [r15+0x1],0x1
   140013fd3:	call   QWORD PTR [rip+0xb577]        # 0x14001f550
   140013fd9:	movsxd rax,DWORD PTR [rsi+0x8]
   140013fdd:	mov    r11,QWORD PTR [rsi]
   140013fe0:	lea    rcx,[rax+rax*2]
   140013fe4:	lea    rdx,[rsp+0xd8]
   140013fec:	mov    rax,QWORD PTR [r11+0x10]
   140013ff0:	lea    rcx,[rax+rcx*8]
   140013ff4:	mov    eax,DWORD PTR [rcx+r11*1-0x18]
   140013ff9:	lea    rcx,[rsp+0x60]
   140013ffe:	mov    DWORD PTR [rsp+0x5c],0x1
   140014006:	mov    DWORD PTR [rsp+0x58],eax
   14001400a:	call   QWORD PTR [rip+0xb5c8]        # 0x14001f5d8
   140014010:	mov    rax,QWORD PTR [rsp+0x60]
   140014015:	mov    DWORD PTR [rsp+0x68],0x0
   14001401d:	mov    ecx,DWORD PTR [rax+0x4]
   140014020:	lea    rdx,[rsp+0x58]
   140014025:	mov    DWORD PTR [rsp+0x6c],ecx
   140014029:	lea    rcx,[rsp+0xc0]
   140014031:	call   0x140012170
   140014036:	lea    rcx,[rsp+0x60]
   14001403b:	call   QWORD PTR [rip+0xb577]        # 0x14001f5b8
   140014041:	lea    rcx,[rsp+0xd8]
   140014049:	call   QWORD PTR [rip+0xb569]        # 0x14001f5b8
   14001404f:	mov    r11,QWORD PTR [rsi]
   140014052:	movsxd rdx,DWORD PTR [rsi+0x8]
   140014056:	cmp    edx,DWORD PTR [r11+0x4]
   14001405a:	jge    0x14001407b
   14001405c:	mov    rax,QWORD PTR [r11+0x10]
   140014060:	lea    rcx,[rdx+rdx*2]
   140014064:	lea    rcx,[rax+rcx*8]
   140014068:	cmp    DWORD PTR [rcx+r11*1+0x4],0x9a
   140014071:	jne    0x14001407b
   140014073:	lea    eax,[rdx+0x1]
   140014076:	mov    DWORD PTR [rsi+0x8],eax
   140014079:	jmp    0x140014052
   14001407b:	movsxd rdx,DWORD PTR [rsi+0x8]
   14001407f:	cmp    edx,DWORD PTR [r11+0x4]
   140014083:	jge    0x1400140a1
   140014085:	mov    rax,QWORD PTR [r11+0x10]
   140014089:	lea    rcx,[rdx+rdx*2]
   14001408d:	lea    rcx,[rax+rcx*8]
   140014091:	cmp    DWORD PTR [rcx+r11*1+0x4],0xa
   140014097:	jne    0x1400140a1
   140014099:	lea    eax,[rdx+0x1]
   14001409c:	mov    DWORD PTR [rsi+0x8],eax
   14001409f:	jmp    0x1400140b0
   1400140a1:	lea    rdx,[rip+0x12438]        # 0x1400264e0
   1400140a8:	mov    rcx,rsi
   1400140ab:	call   0x140019c50
   1400140b0:	lea    rcx,[rsp+0xc8]
   1400140b8:	call   QWORD PTR [rip+0xb4fa]        # 0x14001f5b8
   1400140be:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400140c6:	mov    r12,QWORD PTR [rsp+0x88]
   1400140ce:	mov    rbp,QWORD PTR [rsp+0x90]
   1400140d6:	mov    r13,QWORD PTR [rsp+0x80]
   1400140de:	lea    rcx,[r15+0x8]
   1400140e2:	lea    rdx,[rsp+0xc0]
   1400140ea:	call   0x140011a40
   1400140ef:	mov    r11,QWORD PTR [rsi]
   1400140f2:	mov    r15,QWORD PTR [rsp+0x78]
   1400140f7:	nop    WORD PTR [rax+rax*1+0x0]
   140014100:	movsxd rdx,DWORD PTR [rsi+0x8]
   140014104:	cmp    edx,DWORD PTR [r11+0x4]
   140014108:	jge    0x140014129
   14001410a:	mov    rax,QWORD PTR [r11+0x10]
   14001410e:	lea    rcx,[rdx+rdx*2]
   140014112:	lea    rcx,[rax+rcx*8]
   140014116:	cmp    DWORD PTR [rcx+r11*1+0x4],0x9a
   14001411f:	jne    0x140014129
   140014121:	lea    eax,[rdx+0x1]
   140014124:	mov    DWORD PTR [rsi+0x8],eax
   140014127:	jmp    0x140014100
   140014129:	mov    eax,DWORD PTR [rbx]
   14001412b:	test   eax,eax
   14001412d:	je     0x140014147
   14001412f:	cmp    eax,0xffffffff
   140014132:	je     0x14001418b
   140014134:	lock add DWORD PTR [rbx],0xffffffff
   140014138:	setne  al
   14001413b:	test   al,al
   14001413d:	jne    0x14001418b
   14001413f:	mov    rbx,QWORD PTR [rsp+0xc0]
   140014147:	mov    rdx,QWORD PTR [rbx+0x10]
   14001414b:	movsxd rax,DWORD PTR [rbx+0x4]
   14001414f:	lea    rcx,[rax+rax*2]
   140014153:	lea    rdi,[rdx+rbx*1]
   140014157:	lea    rsi,[rdx+rcx*8]
   14001415b:	add    rsi,rbx
   14001415e:	cmp    rdi,rsi
   140014161:	je     0x140014179
   140014163:	mov    rcx,rdi
   140014166:	add    rdi,0x18
   14001416a:	add    rcx,0x8
   14001416e:	call   QWORD PTR [rip+0xb444]        # 0x14001f5b8
   140014174:	cmp    rdi,rsi
   140014177:	jne    0x140014163
   140014179:	mov    edx,0x18
   14001417e:	mov    rcx,rbx
   140014181:	lea    r8d,[rdx-0x10]
   140014185:	call   QWORD PTR [rip+0xb385]        # 0x14001f510
   14001418b:	add    rsp,0x98
   140014192:	pop    r14
   140014194:	pop    rdi
   140014195:	pop    rsi
   140014196:	pop    rbx
   140014197:	ret    
   140014198:	int3   
   140014199:	int3   
   14001419a:	int3   
   14001419b:	int3   
   14001419c:	int3   
   14001419d:	int3   
   14001419e:	int3   
   14001419f:	int3   
   1400141a0:	jmp    0x1400125c0
   1400141a5:	int3   
   1400141a6:	int3   
   1400141a7:	int3   
   1400141a8:	int3   
   1400141a9:	int3   
   1400141aa:	int3   
   1400141ab:	int3   
   1400141ac:	int3   
   1400141ad:	int3   
   1400141ae:	int3   
   1400141af:	int3   
   1400141b0:	cmp    rdx,r8
   1400141b3:	je     0x14001420f
   1400141b5:	mov    QWORD PTR [rsp+0x10],rbx
   1400141ba:	push   rsi
   1400141bb:	sub    rsp,0x20
   1400141bf:	mov    rsi,r8
   1400141c2:	mov    rbx,rdx
   1400141c5:	mov    QWORD PTR [rsp+0x30],rdi
   1400141ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400141d0:	mov    rdi,rbx
   1400141d3:	add    rbx,0x20
   1400141d7:	test   rdi,rdi
   1400141da:	je     0x1400141fb
   1400141dc:	mov    rax,QWORD PTR [rip+0xb34d]        # 0x14001f530
   1400141e3:	lea    rcx,[rdi+0x8]
   1400141e7:	mov    QWORD PTR [rdi],rax
   1400141ea:	call   QWORD PTR [rip+0xb3d0]        # 0x14001f5c0
   1400141f0:	mov    r11,QWORD PTR [rip+0xb341]        # 0x14001f538
   1400141f7:	mov    QWORD PTR [rdi+0x10],r11
   1400141fb:	cmp    rbx,rsi
   1400141fe:	jne    0x1400141d0
   140014200:	mov    rdi,QWORD PTR [rsp+0x30]
   140014205:	mov    rbx,QWORD PTR [rsp+0x38]
   14001420a:	add    rsp,0x20
   14001420e:	pop    rsi
   14001420f:	repz ret 
   140014211:	int3   
   140014212:	int3   
   140014213:	int3   
   140014214:	int3   
   140014215:	int3   
   140014216:	int3   
   140014217:	int3   
   140014218:	int3   
   140014219:	int3   
   14001421a:	int3   
   14001421b:	int3   
   14001421c:	int3   
   14001421d:	int3   
   14001421e:	int3   
   14001421f:	int3   
   140014220:	mov    QWORD PTR [rsp+0x8],rbx
   140014225:	mov    QWORD PTR [rsp+0x10],rsi
   14001422a:	push   rdi
   14001422b:	sub    rsp,0x20
   14001422f:	mov    rbx,rcx
   140014232:	call   0x140013800
   140014237:	mov    rdx,QWORD PTR [rbx]
   14001423a:	movsxd rcx,DWORD PTR [rbx+0x8]
   14001423e:	xor    edi,edi
   140014240:	mov    esi,eax
   140014242:	cmp    ecx,DWORD PTR [rdx+0x4]
   140014245:	jl     0x14001424b
   140014247:	mov    edx,edi
   140014249:	jmp    0x140014261
   14001424b:	lea    eax,[rcx+0x1]
   14001424e:	lea    rcx,[rcx+rcx*2]
   140014252:	mov    DWORD PTR [rbx+0x8],eax
   140014255:	mov    rax,QWORD PTR [rdx+0x10]
   140014259:	lea    rcx,[rax+rcx*8]
   14001425d:	mov    edx,DWORD PTR [rcx+rdx*1+0x4]
   140014261:	sub    edx,0x7
   140014264:	je     0x1400142ee
   14001426a:	sub    edx,0x1
   14001426d:	je     0x1400142ce
   14001426f:	sub    edx,0x4c
   140014272:	je     0x1400142ae
   140014274:	cmp    edx,0x1
   140014277:	je     0x14001428e
   140014279:	dec    DWORD PTR [rbx+0x8]
   14001427c:	mov    eax,esi
   14001427e:	mov    rbx,QWORD PTR [rsp+0x30]
   140014283:	mov    rsi,QWORD PTR [rsp+0x38]
   140014288:	add    rsp,0x20
   14001428c:	pop    rdi
   14001428d:	ret    
   14001428e:	mov    rcx,rbx
   140014291:	call   0x140014220
   140014296:	cmp    esi,eax
   140014298:	setge  dil
   14001429c:	mov    eax,edi
   14001429e:	mov    rbx,QWORD PTR [rsp+0x30]
   1400142a3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400142a8:	add    rsp,0x20
   1400142ac:	pop    rdi
   1400142ad:	ret    
   1400142ae:	mov    rcx,rbx
   1400142b1:	call   0x140014220
   1400142b6:	cmp    esi,eax
   1400142b8:	setle  dil
   1400142bc:	mov    eax,edi
   1400142be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400142c3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400142c8:	add    rsp,0x20
   1400142cc:	pop    rdi
   1400142cd:	ret    
   1400142ce:	mov    rcx,rbx
   1400142d1:	call   0x140014220
   1400142d6:	cmp    esi,eax
   1400142d8:	setg   dil
   1400142dc:	mov    eax,edi
   1400142de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400142e3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400142e8:	add    rsp,0x20
   1400142ec:	pop    rdi
   1400142ed:	ret    
   1400142ee:	mov    rcx,rbx
   1400142f1:	call   0x140014220
   1400142f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400142fb:	cmp    esi,eax
   1400142fd:	mov    rsi,QWORD PTR [rsp+0x38]
   140014302:	setl   dil
   140014306:	mov    eax,edi
   140014308:	add    rsp,0x20
   14001430c:	pop    rdi
   14001430d:	ret    
   14001430e:	int3   
   14001430f:	int3   
   140014310:	mov    QWORD PTR [rsp+0x10],rbx
   140014315:	mov    QWORD PTR [rsp+0x18],rbp
   14001431a:	mov    QWORD PTR [rsp+0x20],rsi
   14001431f:	push   rdi
   140014320:	sub    rsp,0x30
   140014324:	mov    rbx,QWORD PTR [rdx]
   140014327:	mov    rsi,rcx
   14001432a:	mov    eax,DWORD PTR [rbx+0x10]
   14001432d:	test   eax,eax
   14001432f:	je     0x14001433b
   140014331:	cmp    eax,0xffffffff
   140014334:	je     0x14001433b
   140014336:	lock add DWORD PTR [rbx+0x10],0x1
   14001433b:	test   BYTE PTR [rbx+0x28],0x1
   14001433f:	jne    0x1400143a0
   140014341:	mov    eax,DWORD PTR [rbx+0x10]
   140014344:	cmp    eax,0x1
   140014347:	je     0x1400143a0
   140014349:	test   eax,eax
   14001434b:	je     0x1400143a0
   14001434d:	lea    r8,[rip+0xfffffffffffee5cc]        # 0x140002920
   140014354:	lea    rdx,[rip+0xfffffffffffedef5]        # 0x140002250
   14001435b:	mov    r9d,0x18
   140014361:	mov    rcx,rbx
   140014364:	mov    DWORD PTR [rsp+0x20],0x8
   14001436c:	call   QWORD PTR [rip+0xaffe]        # 0x14001f370
   140014372:	mov    ecx,DWORD PTR [rbx+0x10]
   140014375:	mov    rdi,rax
   140014378:	test   ecx,ecx
   14001437a:	je     0x14001438d
   14001437c:	cmp    ecx,0xffffffff
   14001437f:	je     0x14001439d
   140014381:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140014386:	setne  cl
   140014389:	test   cl,cl
   14001438b:	jne    0x14001439d
   14001438d:	lea    rdx,[rip+0xfffffffffffee58c]        # 0x140002920
   140014394:	mov    rcx,rbx
   140014397:	call   QWORD PTR [rip+0xb11b]        # 0x14001f4b8
   14001439d:	mov    rbx,rdi
   1400143a0:	mov    rcx,rbx
   1400143a3:	mov    rdi,rbx
   1400143a6:	call   QWORD PTR [rip+0xaf4c]        # 0x14001f2f8
   1400143ac:	cmp    rbx,rax
   1400143af:	je     0x1400143dc
   1400143b1:	mov    rcx,rdi
   1400143b4:	call   QWORD PTR [rip+0xaf5e]        # 0x14001f318
   1400143ba:	lea    rdx,[rsp+0x40]
   1400143bf:	mov    rcx,rsi
   1400143c2:	lea    r8,[rax+0x10]
   1400143c6:	mov    rdi,rax
   1400143c9:	call   0x140008060
   1400143ce:	mov    rcx,rbx
   1400143d1:	call   QWORD PTR [rip+0xaf21]        # 0x14001f2f8
   1400143d7:	cmp    rdi,rax
   1400143da:	jne    0x1400143b1
   1400143dc:	mov    eax,DWORD PTR [rbx+0x10]
   1400143df:	test   eax,eax
   1400143e1:	je     0x1400143f4
   1400143e3:	cmp    eax,0xffffffff
   1400143e6:	je     0x140014404
   1400143e8:	lock add DWORD PTR [rbx+0x10],0xffffffff
   1400143ed:	setne  al
   1400143f0:	test   al,al
   1400143f2:	jne    0x140014404
   1400143f4:	lea    rdx,[rip+0xfffffffffffee525]        # 0x140002920
   1400143fb:	mov    rcx,rbx
   1400143fe:	call   QWORD PTR [rip+0xb0b4]        # 0x14001f4b8
   140014404:	mov    rbx,QWORD PTR [rsp+0x48]
   140014409:	mov    rbp,QWORD PTR [rsp+0x50]
   14001440e:	mov    rax,rsi
   140014411:	mov    rsi,QWORD PTR [rsp+0x58]
   140014416:	add    rsp,0x30
   14001441a:	pop    rdi
   14001441b:	ret    
   14001441c:	int3   
   14001441d:	int3   
   14001441e:	int3   
   14001441f:	int3   
   140014420:	mov    QWORD PTR [rsp+0x8],rbx
   140014425:	push   rdi
   140014426:	sub    rsp,0x20
   14001442a:	mov    rdi,rdx
   14001442d:	mov    rbx,rcx
   140014430:	call   0x140011970
   140014435:	lea    rdx,[rdi+0x8]
   140014439:	lea    rcx,[rbx+0x8]
   14001443d:	call   QWORD PTR [rip+0xb195]        # 0x14001f5d8
   140014443:	mov    rax,QWORD PTR [rdi+0x10]
   140014447:	lea    rcx,[rbx+0x10]
   14001444b:	mov    QWORD PTR [rcx],rax
   14001444e:	mov    edx,DWORD PTR [rax+0x10]
   140014451:	test   edx,edx
   140014453:	je     0x14001445f
   140014455:	cmp    edx,0xffffffff
   140014458:	je     0x14001445f
   14001445a:	lock add DWORD PTR [rax+0x10],0x1
   14001445f:	mov    rax,QWORD PTR [rcx]
   140014462:	test   BYTE PTR [rax+0x28],0x1
   140014466:	jne    0x140014479
   140014468:	mov    eax,DWORD PTR [rax+0x10]
   14001446b:	cmp    eax,0x1
   14001446e:	je     0x140014479
   140014470:	test   eax,eax
   140014472:	je     0x140014479
   140014474:	call   0x140004860
   140014479:	mov    eax,DWORD PTR [rdi+0x18]
   14001447c:	mov    DWORD PTR [rbx+0x18],eax
   14001447f:	mov    rax,rbx
   140014482:	mov    rbx,QWORD PTR [rsp+0x30]
   140014487:	add    rsp,0x20
   14001448b:	pop    rdi
   14001448c:	ret    
   14001448d:	int3   
   14001448e:	int3   
   14001448f:	int3   
   140014490:	cmp    rdx,r8
   140014493:	je     0x14001458b
   140014499:	mov    QWORD PTR [rsp+0x20],rsi
   14001449e:	push   r12
   1400144a0:	sub    rsp,0x20
   1400144a4:	mov    QWORD PTR [rsp+0x30],rbx
   1400144a9:	mov    QWORD PTR [rsp+0x38],rbp
   1400144ae:	mov    r12,r8
   1400144b1:	mov    QWORD PTR [rsp+0x40],rdi
   1400144b6:	mov    rsi,rdx
   1400144b9:	nop    DWORD PTR [rax+0x0]
   1400144c0:	mov    rbx,rsi
   1400144c3:	add    rsi,0x20
   1400144c7:	mov    rcx,QWORD PTR [rbx+0x10]
   1400144cb:	mov    eax,DWORD PTR [rcx+0x10]
   1400144ce:	test   eax,eax
   1400144d0:	je     0x1400144e3
   1400144d2:	cmp    eax,0xffffffff
   1400144d5:	je     0x1400144f4
   1400144d7:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400144dc:	setne  al
   1400144df:	test   al,al
   1400144e1:	jne    0x1400144f4
   1400144e3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400144e7:	lea    rdx,[rip+0xfffffffffffee432]        # 0x140002920
   1400144ee:	call   QWORD PTR [rip+0xafc4]        # 0x14001f4b8
   1400144f4:	lea    rcx,[rbx+0x8]
   1400144f8:	call   QWORD PTR [rip+0xb0ba]        # 0x14001f5b8
   1400144fe:	mov    r11,QWORD PTR [rbx]
   140014501:	mov    eax,DWORD PTR [r11]
   140014504:	test   eax,eax
   140014506:	je     0x140014519
   140014508:	cmp    eax,0xffffffff
   14001450b:	je     0x140014568
   14001450d:	lock add DWORD PTR [r11],0xffffffff
   140014512:	setne  al
   140014515:	test   al,al
   140014517:	jne    0x140014568
   140014519:	mov    rbp,QWORD PTR [rbx]
   14001451c:	mov    rdx,QWORD PTR [rbp+0x10]
   140014520:	movsxd rax,DWORD PTR [rbp+0x4]
   140014524:	lea    rcx,[rax+rax*2]
   140014528:	lea    rbx,[rdx+rbp*1]
   14001452c:	lea    rdi,[rdx+rcx*8]
   140014530:	add    rdi,rbp
   140014533:	cmp    rbx,rdi
   140014536:	je     0x140014556
   140014538:	nop    DWORD PTR [rax+rax*1+0x0]
   140014540:	mov    rcx,rbx
   140014543:	add    rbx,0x18
   140014547:	add    rcx,0x8
   14001454b:	call   QWORD PTR [rip+0xb067]        # 0x14001f5b8
   140014551:	cmp    rbx,rdi
   140014554:	jne    0x140014540
   140014556:	mov    edx,0x18
   14001455b:	mov    rcx,rbp
   14001455e:	lea    r8d,[rdx-0x10]
   140014562:	call   QWORD PTR [rip+0xafa8]        # 0x14001f510
   140014568:	cmp    rsi,r12
   14001456b:	jne    0x1400144c0
   140014571:	mov    rdi,QWORD PTR [rsp+0x40]
   140014576:	mov    rbp,QWORD PTR [rsp+0x38]
   14001457b:	mov    rbx,QWORD PTR [rsp+0x30]
   140014580:	mov    rsi,QWORD PTR [rsp+0x48]
   140014585:	add    rsp,0x20
   140014589:	pop    r12
   14001458b:	repz ret 
   14001458d:	int3   
   14001458e:	int3   
   14001458f:	int3   
   140014590:	mov    QWORD PTR [rsp+0x8],rbx
   140014595:	push   rdi
   140014596:	sub    rsp,0x30
   14001459a:	mov    rbx,rcx
   14001459d:	mov    rcx,QWORD PTR [rcx]
   1400145a0:	lea    r8,[rip+0xfffffffffffffbf9]        # 0x1400141a0
   1400145a7:	lea    rdx,[rip+0xffffffffffffe102]        # 0x1400126b0
   1400145ae:	mov    r9d,0x38
   1400145b4:	mov    DWORD PTR [rsp+0x20],0x8
   1400145bc:	call   QWORD PTR [rip+0xadae]        # 0x14001f370
   1400145c2:	mov    rdi,rax
   1400145c5:	mov    rax,QWORD PTR [rbx]
   1400145c8:	mov    ecx,DWORD PTR [rax+0x10]
   1400145cb:	test   ecx,ecx
   1400145cd:	je     0x1400145e0
   1400145cf:	cmp    ecx,0xffffffff
   1400145d2:	je     0x1400145f0
   1400145d4:	lock add DWORD PTR [rax+0x10],0xffffffff
   1400145d9:	setne  al
   1400145dc:	test   al,al
   1400145de:	jne    0x1400145f0
   1400145e0:	mov    rcx,QWORD PTR [rbx]
   1400145e3:	lea    rdx,[rip+0xfffffffffffffbb6]        # 0x1400141a0
   1400145ea:	call   QWORD PTR [rip+0xaec8]        # 0x14001f4b8
   1400145f0:	mov    QWORD PTR [rbx],rdi
   1400145f3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400145f8:	add    rsp,0x30
   1400145fc:	pop    rdi
   1400145fd:	ret    
   1400145fe:	int3   
   1400145ff:	int3   
   140014600:	mov    QWORD PTR [rsp+0x8],rbx
   140014605:	mov    QWORD PTR [rsp+0x10],rsi
   14001460a:	push   rdi
   14001460b:	sub    rsp,0x20
   14001460f:	mov    rbx,rcx
   140014612:	call   0x140014220
   140014617:	mov    rdx,QWORD PTR [rbx]
   14001461a:	movsxd rcx,DWORD PTR [rbx+0x8]
   14001461e:	xor    edi,edi
   140014620:	mov    esi,eax
   140014622:	cmp    ecx,DWORD PTR [rdx+0x4]
   140014625:	jl     0x14001462b
   140014627:	mov    ecx,edi
   140014629:	jmp    0x140014641
   14001462b:	lea    eax,[rcx+0x1]
   14001462e:	lea    rcx,[rcx+rcx*2]
   140014632:	mov    DWORD PTR [rbx+0x8],eax
   140014635:	mov    rax,QWORD PTR [rdx+0x10]
   140014639:	lea    rcx,[rax+rcx*8]
   14001463d:	mov    ecx,DWORD PTR [rcx+rdx*1+0x4]
   140014641:	sub    ecx,0x52
   140014644:	je     0x140014680
   140014646:	cmp    ecx,0x1
   140014649:	je     0x140014660
   14001464b:	dec    DWORD PTR [rbx+0x8]
   14001464e:	mov    eax,esi
   140014650:	mov    rbx,QWORD PTR [rsp+0x30]
   140014655:	mov    rsi,QWORD PTR [rsp+0x38]
   14001465a:	add    rsp,0x20
   14001465e:	pop    rdi
   14001465f:	ret    
   140014660:	mov    rcx,rbx
   140014663:	call   0x140014600
   140014668:	cmp    esi,eax
   14001466a:	setne  dil
   14001466e:	mov    eax,edi
   140014670:	mov    rbx,QWORD PTR [rsp+0x30]
   140014675:	mov    rsi,QWORD PTR [rsp+0x38]
   14001467a:	add    rsp,0x20
   14001467e:	pop    rdi
   14001467f:	ret    
   140014680:	mov    rcx,rbx
   140014683:	call   0x140014600
   140014688:	mov    rbx,QWORD PTR [rsp+0x30]
   14001468d:	cmp    esi,eax
   14001468f:	mov    rsi,QWORD PTR [rsp+0x38]
   140014694:	sete   dil
   140014698:	mov    eax,edi
   14001469a:	add    rsp,0x20
   14001469e:	pop    rdi
   14001469f:	ret    
   1400146a0:	rex push rdi
   1400146a2:	push   r12
   1400146a4:	push   r14
   1400146a6:	push   r15
   1400146a8:	sub    rsp,0x28
   1400146ac:	mov    rdi,QWORD PTR [rcx]
   1400146af:	mov    QWORD PTR [rsp+0x20],r13
   1400146b4:	movsxd r15,r8d
   1400146b7:	mov    eax,DWORD PTR [rdi]
   1400146b9:	movsxd r13,edx
   1400146bc:	mov    r12,rcx
   1400146bf:	cmp    eax,0x1
   1400146c2:	je     0x1400146cd
   1400146c4:	test   eax,eax
   1400146c6:	je     0x1400146cd
   1400146c8:	mov    r14b,0x1
   1400146cb:	jmp    0x1400146d0
   1400146cd:	xor    r14b,r14b
   1400146d0:	mov    QWORD PTR [rsp+0x50],rbx
   1400146d5:	test   r8d,r8d
   1400146d8:	je     0x14001485c
   1400146de:	mov    eax,DWORD PTR [rdi+0x8]
   1400146e1:	btr    eax,0x1f
   1400146e5:	cmp    r15d,eax
   1400146e8:	jne    0x14001474f
   1400146ea:	test   r14b,r14b
   1400146ed:	jne    0x14001474f
   1400146ef:	cmp    r13d,DWORD PTR [rdi+0x4]
   1400146f3:	jg     0x140014722
   1400146f5:	mov    rax,QWORD PTR [rdi+0x10]
   1400146f9:	movsxd r8,DWORD PTR [rdi+0x4]
   1400146fd:	mov    rdx,r13
   140014700:	shl    r8,0x5
   140014704:	shl    rdx,0x5
   140014708:	add    r8,rax
   14001470b:	add    rdx,rax
   14001470e:	add    r8,rdi
   140014711:	add    rdx,rdi
   140014714:	call   0x140014490
   140014719:	mov    DWORD PTR [rdi+0x4],r13d
   14001471d:	jmp    0x140014863
   140014722:	mov    rax,QWORD PTR [rdi+0x10]
   140014726:	movsxd rdx,DWORD PTR [rdi+0x4]
   14001472a:	mov    r8,r13
   14001472d:	shl    rdx,0x5
   140014731:	shl    r8,0x5
   140014735:	add    rdx,rax
   140014738:	add    r8,rax
   14001473b:	add    rdx,rdi
   14001473e:	add    r8,rdi
   140014741:	call   0x1400141b0
   140014746:	mov    DWORD PTR [rdi+0x4],r13d
   14001474a:	jmp    0x140014863
   14001474f:	mov    edx,0x8
   140014754:	mov    r8,r15
   140014757:	mov    QWORD PTR [rsp+0x58],rbp
   14001475c:	lea    ecx,[rdx+0x18]
   14001475f:	mov    QWORD PTR [rsp+0x60],rsi
   140014764:	call   QWORD PTR [rip+0xadae]        # 0x14001f518
   14001476a:	mov    rdi,rax
   14001476d:	mov    DWORD PTR [rax+0x4],r13d
   140014771:	mov    rax,QWORD PTR [r12]
   140014775:	cmp    r13d,DWORD PTR [rax+0x4]
   140014779:	mov    rcx,QWORD PTR [rax+0x10]
   14001477d:	lea    rsi,[rax+rcx*1]
   140014781:	jle    0x140014793
   140014783:	movsxd rbx,DWORD PTR [rax+0x4]
   140014787:	shl    rbx,0x5
   14001478b:	add    rbx,rcx
   14001478e:	add    rbx,rax
   140014791:	jmp    0x1400147a0
   140014793:	mov    rbx,r13
   140014796:	shl    rbx,0x5
   14001479a:	add    rbx,rcx
   14001479d:	add    rbx,rax
   1400147a0:	mov    rax,QWORD PTR [rdi+0x10]
   1400147a4:	lea    rbp,[rdi+rax*1]
   1400147a8:	test   r14b,r14b
   1400147ab:	je     0x1400147d1
   1400147ad:	cmp    rsi,rbx
   1400147b0:	je     0x140014818
   1400147b2:	mov    rcx,rbp
   1400147b5:	add    rbp,0x20
   1400147b9:	test   rcx,rcx
   1400147bc:	je     0x1400147ca
   1400147be:	mov    rdx,rsi
   1400147c1:	call   0x140014420
   1400147c6:	add    rsi,0x20
   1400147ca:	cmp    rsi,rbx
   1400147cd:	jne    0x1400147b2
   1400147cf:	jmp    0x140014818
   1400147d1:	sub    rbx,rsi
   1400147d4:	mov    rdx,rsi
   1400147d7:	mov    rcx,rbp
   1400147da:	and    rbx,0xffffffffffffffe0
   1400147de:	mov    r8,rbx
   1400147e1:	call   0x14001e1cc
   1400147e6:	mov    rax,QWORD PTR [r12]
   1400147ea:	add    rbp,rbx
   1400147ed:	cmp    r13d,DWORD PTR [rax+0x4]
   1400147f1:	jge    0x140014818
   1400147f3:	movsxd r8,DWORD PTR [rax+0x4]
   1400147f7:	mov    rdx,r13
   1400147fa:	mov    rcx,r12
   1400147fd:	shl    r8,0x5
   140014801:	shl    rdx,0x5
   140014805:	add    r8,QWORD PTR [rax+0x10]
   140014809:	add    rdx,QWORD PTR [rax+0x10]
   14001480d:	add    r8,rax
   140014810:	add    rdx,rax
   140014813:	call   0x140014490
   140014818:	mov    rax,QWORD PTR [r12]
   14001481c:	mov    rsi,QWORD PTR [rsp+0x60]
   140014821:	cmp    r13d,DWORD PTR [rax+0x4]
   140014825:	jle    0x140014841
   140014827:	movsxd r8,DWORD PTR [rdi+0x4]
   14001482b:	mov    rdx,rbp
   14001482e:	mov    rcx,r12
   140014831:	shl    r8,0x5
   140014835:	add    r8,QWORD PTR [rdi+0x10]
   140014839:	add    r8,rdi
   14001483c:	call   0x1400141b0
   140014841:	mov    rax,QWORD PTR [r12]
   140014845:	mov    rbp,QWORD PTR [rsp+0x58]
   14001484a:	mov    ecx,DWORD PTR [rax+0x8]
   14001484d:	xor    ecx,DWORD PTR [rdi+0x8]
   140014850:	btr    ecx,0x1f
   140014854:	xor    ecx,DWORD PTR [rax+0x8]
   140014857:	mov    DWORD PTR [rdi+0x8],ecx
   14001485a:	jmp    0x140014863
   14001485c:	mov    rdi,QWORD PTR [rip+0xaccd]        # 0x14001f530
   140014863:	mov    rcx,QWORD PTR [r12]
   140014867:	mov    r13,QWORD PTR [rsp+0x20]
   14001486c:	cmp    rcx,rdi
   14001486f:	je     0x1400148d0
   140014871:	mov    eax,DWORD PTR [rcx]
   140014873:	test   eax,eax
   140014875:	je     0x140014887
   140014877:	cmp    eax,0xffffffff
   14001487a:	je     0x1400148cc
   14001487c:	lock add DWORD PTR [rcx],0xffffffff
   140014880:	setne  al
   140014883:	test   al,al
   140014885:	jne    0x1400148cc
   140014887:	test   r15d,r15d
   14001488a:	je     0x140014897
   14001488c:	test   r14b,r14b
   14001488f:	jne    0x140014897
   140014891:	mov    rcx,QWORD PTR [r12]
   140014895:	jmp    0x1400148bc
   140014897:	mov    rbx,QWORD PTR [r12]
   14001489b:	mov    rcx,r12
   14001489e:	mov    rax,QWORD PTR [rbx+0x10]
   1400148a2:	movsxd r8,DWORD PTR [rbx+0x4]
   1400148a6:	shl    r8,0x5
   1400148aa:	lea    rdx,[rax+rbx*1]
   1400148ae:	add    r8,rax
   1400148b1:	add    r8,rbx
   1400148b4:	call   0x140014490
   1400148b9:	mov    rcx,rbx
   1400148bc:	mov    r8d,0x8
   1400148c2:	lea    edx,[r8+0x18]
   1400148c6:	call   QWORD PTR [rip+0xac44]        # 0x14001f510
   1400148cc:	mov    QWORD PTR [r12],rdi
   1400148d0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400148d5:	add    rsp,0x28
   1400148d9:	pop    r15
   1400148db:	pop    r14
   1400148dd:	pop    r12
   1400148df:	pop    rdi
   1400148e0:	ret    
   1400148e1:	int3   
   1400148e2:	int3   
   1400148e3:	int3   
   1400148e4:	int3   
   1400148e5:	int3   
   1400148e6:	int3   
   1400148e7:	int3   
   1400148e8:	int3   
   1400148e9:	int3   
   1400148ea:	int3   
   1400148eb:	int3   
   1400148ec:	int3   
   1400148ed:	int3   
   1400148ee:	int3   
   1400148ef:	int3   
   1400148f0:	mov    QWORD PTR [rsp+0x18],rbp
   1400148f5:	mov    QWORD PTR [rsp+0x20],rsi
   1400148fa:	push   rdi
   1400148fb:	sub    rsp,0x20
   1400148ff:	mov    rax,QWORD PTR [rip+0xac32]        # 0x14001f538
   140014906:	mov    rsi,rcx
   140014909:	xor    ebp,ebp
   14001490b:	mov    QWORD PTR [rdx],rax
   14001490e:	mov    rcx,QWORD PTR [rcx]
   140014911:	mov    rdi,rdx
   140014914:	cmp    DWORD PTR [rcx+0x4],ebp
   140014917:	jle    0x140014966
   140014919:	mov    QWORD PTR [rsp+0x38],rbx
   14001491e:	xchg   ax,ax
   140014920:	mov    rax,QWORD PTR [rcx+0x10]
   140014924:	movsxd rbx,ebp
   140014927:	lea    rdx,[rsp+0x30]
   14001492c:	shl    rbx,0x5
   140014930:	add    rax,rbx
   140014933:	lea    r8,[rax+rcx*1+0x8]
   140014938:	mov    rcx,rdi
   14001493b:	call   0x140008060
   140014940:	mov    r11,QWORD PTR [rsi]
   140014943:	mov    rcx,rdi
   140014946:	mov    rax,QWORD PTR [r11+0x10]
   14001494a:	add    rax,rbx
   14001494d:	lea    rdx,[rax+r11*1+0x10]
   140014952:	call   0x140014310
   140014957:	mov    rcx,QWORD PTR [rsi]
   14001495a:	inc    ebp
   14001495c:	cmp    ebp,DWORD PTR [rcx+0x4]
   14001495f:	jl     0x140014920
   140014961:	mov    rbx,QWORD PTR [rsp+0x38]
   140014966:	mov    rbp,QWORD PTR [rsp+0x40]
   14001496b:	mov    rsi,QWORD PTR [rsp+0x48]
   140014970:	mov    rax,rdi
   140014973:	add    rsp,0x20
   140014977:	pop    rdi
   140014978:	ret    
   140014979:	int3   
   14001497a:	int3   
   14001497b:	int3   
   14001497c:	int3   
   14001497d:	int3   
   14001497e:	int3   
   14001497f:	int3   
   140014980:	mov    QWORD PTR [rsp+0x8],rbx
   140014985:	push   rdi
   140014986:	sub    rsp,0x20
   14001498a:	mov    rbx,rcx
   14001498d:	call   0x140014600
   140014992:	mov    r9,QWORD PTR [rbx]
   140014995:	mov    edi,eax
   140014997:	movsxd rax,DWORD PTR [rbx+0x8]
   14001499b:	cmp    eax,DWORD PTR [r9+0x4]
   14001499f:	jge    0x1400149cf
   1400149a1:	mov    rdx,QWORD PTR [r9+0x10]
   1400149a5:	lea    r8,[rax+rax*2]
   1400149a9:	lea    rcx,[rdx+r8*8]
   1400149ad:	cmp    DWORD PTR [rcx+r9*1+0x4],0x42
   1400149b3:	jne    0x1400149cf
   1400149b5:	inc    eax
   1400149b7:	mov    rcx,rbx
   1400149ba:	mov    DWORD PTR [rbx+0x8],eax
   1400149bd:	call   0x140014980
   1400149c2:	and    eax,edi
   1400149c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400149c9:	add    rsp,0x20
   1400149cd:	pop    rdi
   1400149ce:	ret    
   1400149cf:	mov    eax,edi
   1400149d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400149d6:	add    rsp,0x20
   1400149da:	pop    rdi
   1400149db:	ret    
   1400149dc:	int3   
   1400149dd:	int3   
   1400149de:	int3   
   1400149df:	int3   
   1400149e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400149e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400149ea:	push   rdi
   1400149eb:	sub    rsp,0x40
   1400149ef:	mov    r9,QWORD PTR [rcx]
   1400149f2:	mov    rbx,rdx
   1400149f5:	mov    rbp,rcx
   1400149f8:	mov    r8d,DWORD PTR [r9+0x8]
   1400149fc:	mov    eax,DWORD PTR [r9+0x4]
   140014a00:	inc    eax
   140014a02:	btr    r8d,0x1f
   140014a07:	cmp    eax,r8d
   140014a0a:	mov    eax,DWORD PTR [r9]
   140014a0d:	seta   dil
   140014a11:	cmp    eax,0x1
   140014a14:	je     0x140014a1a
   140014a16:	test   eax,eax
   140014a18:	jne    0x140014a3e
   140014a1a:	test   dil,dil
   140014a1d:	jne    0x140014a3e
   140014a1f:	movsxd rcx,DWORD PTR [r9+0x4]
   140014a23:	shl    rcx,0x5
   140014a27:	add    rcx,QWORD PTR [r9+0x10]
   140014a2b:	add    rcx,r9
   140014a2e:	je     0x140014bf0
   140014a34:	call   0x140014420
   140014a39:	jmp    0x140014bf0
   140014a3e:	lea    rcx,[rsp+0x20]
   140014a43:	call   0x140011970
   140014a48:	lea    rdx,[rbx+0x8]
   140014a4c:	lea    rcx,[rsp+0x28]
   140014a51:	call   QWORD PTR [rip+0xab81]        # 0x14001f5d8
   140014a57:	mov    r11,QWORD PTR [rbx+0x10]
   140014a5b:	mov    QWORD PTR [rsp+0x30],r11
   140014a60:	mov    eax,DWORD PTR [r11+0x10]
   140014a64:	test   eax,eax
   140014a66:	je     0x140014a78
   140014a68:	cmp    eax,0xffffffff
   140014a6b:	je     0x140014a78
   140014a6d:	lock add DWORD PTR [r11+0x10],0x1
   140014a73:	mov    r11,QWORD PTR [rsp+0x30]
   140014a78:	test   BYTE PTR [r11+0x28],0x1
   140014a7d:	jne    0x140014a96
   140014a7f:	mov    eax,DWORD PTR [r11+0x10]
   140014a83:	cmp    eax,0x1
   140014a86:	je     0x140014a96
   140014a88:	test   eax,eax
   140014a8a:	je     0x140014a96
   140014a8c:	lea    rcx,[rsp+0x30]
   140014a91:	call   0x140004860
   140014a96:	mov    eax,DWORD PTR [rbx+0x18]
   140014a99:	mov    DWORD PTR [rsp+0x38],eax
   140014a9d:	movzx  eax,dil
   140014aa1:	neg    al
   140014aa3:	sbb    r9d,r9d
   140014aa6:	and    r9d,0x8
   140014aaa:	test   dil,dil
   140014aad:	je     0x140014abc
   140014aaf:	mov    rax,QWORD PTR [rbp+0x0]
   140014ab3:	mov    r8d,DWORD PTR [rax+0x4]
   140014ab7:	inc    r8d
   140014aba:	jmp    0x140014ac9
   140014abc:	mov    rax,QWORD PTR [rbp+0x0]
   140014ac0:	mov    r8d,DWORD PTR [rax+0x8]
   140014ac4:	btr    r8d,0x1f
   140014ac9:	mov    edx,DWORD PTR [rax+0x4]
   140014acc:	mov    rcx,rbp
   140014acf:	call   0x1400146a0
   140014ad4:	mov    r11,QWORD PTR [rbp+0x0]
   140014ad8:	movsxd rbx,DWORD PTR [r11+0x4]
   140014adc:	shl    rbx,0x5
   140014ae0:	add    rbx,QWORD PTR [r11+0x10]
   140014ae4:	add    rbx,r11
   140014ae7:	je     0x140014b48
   140014ae9:	lea    rdx,[rsp+0x20]
   140014aee:	mov    rcx,rbx
   140014af1:	call   0x140011970
   140014af6:	lea    rcx,[rbx+0x8]
   140014afa:	lea    rdx,[rsp+0x28]
   140014aff:	call   QWORD PTR [rip+0xaad3]        # 0x14001f5d8
   140014b05:	mov    rax,QWORD PTR [rsp+0x30]
   140014b0a:	lea    rcx,[rbx+0x10]
   140014b0e:	mov    QWORD PTR [rcx],rax
   140014b11:	mov    rax,QWORD PTR [rsp+0x30]
   140014b16:	mov    edx,DWORD PTR [rax+0x10]
   140014b19:	test   edx,edx
   140014b1b:	je     0x140014b27
   140014b1d:	cmp    edx,0xffffffff
   140014b20:	je     0x140014b27
   140014b22:	lock add DWORD PTR [rax+0x10],0x1
   140014b27:	mov    rax,QWORD PTR [rcx]
   140014b2a:	test   BYTE PTR [rax+0x28],0x1
   140014b2e:	jne    0x140014b41
   140014b30:	mov    eax,DWORD PTR [rax+0x10]
   140014b33:	cmp    eax,0x1
   140014b36:	je     0x140014b41
   140014b38:	test   eax,eax
   140014b3a:	je     0x140014b41
   140014b3c:	call   0x140004860
   140014b41:	mov    eax,DWORD PTR [rsp+0x38]
   140014b45:	mov    DWORD PTR [rbx+0x18],eax
   140014b48:	mov    rcx,QWORD PTR [rsp+0x30]
   140014b4d:	mov    eax,DWORD PTR [rcx+0x10]
   140014b50:	test   eax,eax
   140014b52:	je     0x140014b6a
   140014b54:	cmp    eax,0xffffffff
   140014b57:	je     0x140014b77
   140014b59:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140014b5e:	setne  al
   140014b61:	test   al,al
   140014b63:	jne    0x140014b77
   140014b65:	mov    rcx,QWORD PTR [rsp+0x30]
   140014b6a:	lea    rdx,[rip+0xfffffffffffeddaf]        # 0x140002920
   140014b71:	call   QWORD PTR [rip+0xa941]        # 0x14001f4b8
   140014b77:	lea    rcx,[rsp+0x28]
   140014b7c:	call   QWORD PTR [rip+0xaa36]        # 0x14001f5b8
   140014b82:	mov    rdi,QWORD PTR [rsp+0x20]
   140014b87:	mov    eax,DWORD PTR [rdi]
   140014b89:	test   eax,eax
   140014b8b:	je     0x140014ba2
   140014b8d:	cmp    eax,0xffffffff
   140014b90:	je     0x140014bf0
   140014b92:	lock add DWORD PTR [rdi],0xffffffff
   140014b96:	setne  al
   140014b99:	test   al,al
   140014b9b:	jne    0x140014bf0
   140014b9d:	mov    rdi,QWORD PTR [rsp+0x20]
   140014ba2:	mov    rdx,QWORD PTR [rdi+0x10]
   140014ba6:	movsxd rax,DWORD PTR [rdi+0x4]
   140014baa:	mov    QWORD PTR [rsp+0x50],rsi
   140014baf:	lea    rcx,[rax+rax*2]
   140014bb3:	lea    rbx,[rdx+rdi*1]
   140014bb7:	lea    rsi,[rdx+rcx*8]
   140014bbb:	add    rsi,rdi
   140014bbe:	cmp    rbx,rsi
   140014bc1:	je     0x140014bd9
   140014bc3:	mov    rcx,rbx
   140014bc6:	add    rbx,0x18
   140014bca:	add    rcx,0x8
   140014bce:	call   QWORD PTR [rip+0xa9e4]        # 0x14001f5b8
   140014bd4:	cmp    rbx,rsi
   140014bd7:	jne    0x140014bc3
   140014bd9:	mov    edx,0x18
   140014bde:	mov    rcx,rdi
   140014be1:	lea    r8d,[rdx-0x10]
   140014be5:	call   QWORD PTR [rip+0xa925]        # 0x14001f510
   140014beb:	mov    rsi,QWORD PTR [rsp+0x50]
   140014bf0:	mov    rax,QWORD PTR [rbp+0x0]
   140014bf4:	mov    rbx,QWORD PTR [rsp+0x58]
   140014bf9:	mov    rbp,QWORD PTR [rsp+0x60]
   140014bfe:	inc    DWORD PTR [rax+0x4]
   140014c01:	add    rsp,0x40
   140014c05:	pop    rdi
   140014c06:	ret    
   140014c07:	int3   
   140014c08:	int3   
   140014c09:	int3   
   140014c0a:	int3   
   140014c0b:	int3   
   140014c0c:	int3   
   140014c0d:	int3   
   140014c0e:	int3   
   140014c0f:	int3   
   140014c10:	rex push rbp
   140014c12:	push   rdi
   140014c13:	sub    rsp,0x48
   140014c17:	mov    rax,QWORD PTR [rcx]
   140014c1a:	mov    rdi,rdx
   140014c1d:	mov    rbp,rcx
   140014c20:	cmp    DWORD PTR [rax+0x14],0x0
   140014c24:	jne    0x140014c2f
   140014c26:	xor    eax,eax
   140014c28:	add    rsp,0x48
   140014c2c:	pop    rdi
   140014c2d:	pop    rbp
   140014c2e:	ret    
   140014c2f:	mov    eax,DWORD PTR [rax+0x10]
   140014c32:	mov    QWORD PTR [rsp+0x70],rsi
   140014c37:	mov    QWORD PTR [rsp+0x30],r15
   140014c3c:	cmp    eax,0x1
   140014c3f:	je     0x140014c4a
   140014c41:	test   eax,eax
   140014c43:	je     0x140014c4a
   140014c45:	call   0x140014590
   140014c4a:	mov    rax,QWORD PTR [rbp+0x0]
   140014c4e:	xor    r8d,r8d
   140014c51:	mov    QWORD PTR [rsp+0x68],rbx
   140014c56:	mov    esi,DWORD PTR [rax+0x14]
   140014c59:	mov    DWORD PTR [rsp+0x60],esi
   140014c5d:	cmp    DWORD PTR [rax+0x20],r8d
   140014c61:	je     0x140014ca3
   140014c63:	mov    ebx,DWORD PTR [rax+0x24]
   140014c66:	mov    eax,DWORD PTR [rdi+0xc]
   140014c69:	mov    rcx,rdi
   140014c6c:	mov    DWORD PTR [rsp+0x20],eax
   140014c70:	call   QWORD PTR [rip+0xa982]        # 0x14001f5f8
   140014c76:	lea    rcx,[rsp+0x20]
   140014c7b:	mov    r11,rax
   140014c7e:	movsxd rax,DWORD PTR [rdi+0x8]
   140014c82:	xor    edx,edx
   140014c84:	add    r11,rax
   140014c87:	mov    QWORD PTR [rsp+0x28],r11
   140014c8c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140014c91:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140014c97:	call   QWORD PTR [rip+0xa663]        # 0x14001f300
   140014c9d:	mov    r8d,eax
   140014ca0:	xor    r8d,ebx
   140014ca3:	mov    rdx,rdi
   140014ca6:	mov    rcx,rbp
   140014ca9:	call   0x140011540
   140014cae:	mov    r15,rax
   140014cb1:	mov    rax,QWORD PTR [rbp+0x0]
   140014cb5:	cmp    QWORD PTR [r15],rax
   140014cb8:	je     0x140014e10
   140014cbe:	mov    QWORD PTR [rsp+0x78],r12
   140014cc3:	mov    QWORD PTR [rsp+0x40],r13
   140014cc8:	mov    QWORD PTR [rsp+0x38],r14
   140014ccd:	nop    DWORD PTR [rax]
   140014cd0:	mov    rdx,QWORD PTR [r15]
   140014cd3:	mov    r13,QWORD PTR [rdx]
   140014cd6:	cmp    r13,QWORD PTR [rbp+0x0]
   140014cda:	je     0x140014cf2
   140014cdc:	lea    rcx,[r13+0x10]
   140014ce0:	add    rdx,0x10
   140014ce4:	call   0x140010f30
   140014ce9:	test   al,al
   140014ceb:	je     0x140014cf2
   140014ced:	mov    r14b,0x1
   140014cf0:	jmp    0x140014cf5
   140014cf2:	xor    r14b,r14b
   140014cf5:	mov    r12,QWORD PTR [r15]
   140014cf8:	mov    rcx,QWORD PTR [r12+0x30]
   140014cfd:	mov    eax,DWORD PTR [rcx]
   140014cff:	test   eax,eax
   140014d01:	je     0x140014d13
   140014d03:	cmp    eax,0xffffffff
   140014d06:	je     0x140014d5c
   140014d08:	lock add DWORD PTR [rcx],0xffffffff
   140014d0c:	setne  al
   140014d0f:	test   al,al
   140014d11:	jne    0x140014d5c
   140014d13:	mov    rsi,QWORD PTR [r12+0x30]
   140014d18:	mov    rdx,QWORD PTR [rsi+0x10]
   140014d1c:	movsxd rax,DWORD PTR [rsi+0x4]
   140014d20:	lea    rcx,[rax+rax*2]
   140014d24:	lea    rbx,[rdx+rsi*1]
   140014d28:	lea    rdi,[rdx+rcx*8]
   140014d2c:	add    rdi,rsi
   140014d2f:	cmp    rbx,rdi
   140014d32:	je     0x140014d4a
   140014d34:	mov    rcx,rbx
   140014d37:	add    rbx,0x18
   140014d3b:	add    rcx,0x8
   140014d3f:	call   QWORD PTR [rip+0xa873]        # 0x14001f5b8
   140014d45:	cmp    rbx,rdi
   140014d48:	jne    0x140014d34
   140014d4a:	mov    edx,0x18
   140014d4f:	mov    rcx,rsi
   140014d52:	lea    r8d,[rdx-0x10]
   140014d56:	call   QWORD PTR [rip+0xa7b4]        # 0x14001f510
   140014d5c:	mov    rcx,QWORD PTR [r12+0x28]
   140014d61:	mov    eax,DWORD PTR [rcx]
   140014d63:	test   eax,eax
   140014d65:	je     0x140014d77
   140014d67:	cmp    eax,0xffffffff
   140014d6a:	je     0x140014dc8
   140014d6c:	lock add DWORD PTR [rcx],0xffffffff
   140014d70:	setne  al
   140014d73:	test   al,al
   140014d75:	jne    0x140014dc8
   140014d77:	mov    rsi,QWORD PTR [r12+0x28]
   140014d7c:	mov    rdx,QWORD PTR [rsi+0x10]
   140014d80:	movsxd rax,DWORD PTR [rsi+0x4]
   140014d84:	lea    rcx,[rax+rax*2]
   140014d88:	lea    rbx,[rdx+rsi*1]
   140014d8c:	lea    rdi,[rdx+rcx*8]
   140014d90:	add    rdi,rsi
   140014d93:	cmp    rbx,rdi
   140014d96:	je     0x140014db6
   140014d98:	nop    DWORD PTR [rax+rax*1+0x0]
   140014da0:	mov    rcx,rbx
   140014da3:	add    rbx,0x18
   140014da7:	add    rcx,0x8
   140014dab:	call   QWORD PTR [rip+0xa807]        # 0x14001f5b8
   140014db1:	cmp    rbx,rdi
   140014db4:	jne    0x140014da0
   140014db6:	mov    edx,0x18
   140014dbb:	mov    rcx,rsi
   140014dbe:	lea    r8d,[rdx-0x10]
   140014dc2:	call   QWORD PTR [rip+0xa748]        # 0x14001f510
   140014dc8:	lea    rcx,[r12+0x10]
   140014dcd:	call   QWORD PTR [rip+0xa7e5]        # 0x14001f5b8
   140014dd3:	mov    rcx,QWORD PTR [rbp+0x0]
   140014dd7:	mov    rdx,r12
   140014dda:	call   QWORD PTR [rip+0xa550]        # 0x14001f330
   140014de0:	mov    QWORD PTR [r15],r13
   140014de3:	mov    rcx,QWORD PTR [rbp+0x0]
   140014de7:	dec    DWORD PTR [rcx+0x14]
   140014dea:	test   r14b,r14b
   140014ded:	jne    0x140014cd0
   140014df3:	mov    rcx,QWORD PTR [rbp+0x0]
   140014df7:	call   QWORD PTR [rip+0xa53b]        # 0x14001f338
   140014dfd:	mov    esi,DWORD PTR [rsp+0x60]
   140014e01:	mov    r14,QWORD PTR [rsp+0x38]
   140014e06:	mov    r13,QWORD PTR [rsp+0x40]
   140014e0b:	mov    r12,QWORD PTR [rsp+0x78]
   140014e10:	mov    rcx,QWORD PTR [rbp+0x0]
   140014e14:	mov    r15,QWORD PTR [rsp+0x30]
   140014e19:	mov    rbx,QWORD PTR [rsp+0x68]
   140014e1e:	sub    esi,DWORD PTR [rcx+0x14]
   140014e21:	mov    eax,esi
   140014e23:	mov    rsi,QWORD PTR [rsp+0x70]
   140014e28:	add    rsp,0x48
   140014e2c:	pop    rdi
   140014e2d:	pop    rbp
   140014e2e:	ret    
   140014e2f:	int3   
   140014e30:	mov    QWORD PTR [rsp+0x8],rbx
   140014e35:	mov    QWORD PTR [rsp+0x10],rbp
   140014e3a:	mov    QWORD PTR [rsp+0x18],rsi
   140014e3f:	mov    QWORD PTR [rsp+0x20],rdi
   140014e44:	push   r12
   140014e46:	push   r13
   140014e48:	push   r14
   140014e4a:	sub    rsp,0x40
   140014e4e:	mov    rax,QWORD PTR [rcx]
   140014e51:	mov    rsi,rcx
   140014e54:	mov    rdi,r9
   140014e57:	mov    ecx,DWORD PTR [rax+0x10]
   140014e5a:	mov    r12,r8
   140014e5d:	mov    rbp,rdx
   140014e60:	cmp    ecx,0x1
   140014e63:	je     0x140014e71
   140014e65:	test   ecx,ecx
   140014e67:	je     0x140014e71
   140014e69:	mov    rcx,rsi
   140014e6c:	call   0x140014590
   140014e71:	mov    rax,QWORD PTR [rsi]
   140014e74:	mov    rcx,r12
   140014e77:	mov    ebx,DWORD PTR [rax+0x24]
   140014e7a:	mov    eax,DWORD PTR [r12+0xc]
   140014e7f:	mov    DWORD PTR [rsp+0x30],eax
   140014e83:	call   QWORD PTR [rip+0xa76f]        # 0x14001f5f8
   140014e89:	movsxd rcx,DWORD PTR [r12+0x8]
   140014e8e:	add    rax,rcx
   140014e91:	lea    rcx,[rsp+0x30]
   140014e96:	xor    edx,edx
   140014e98:	mov    QWORD PTR [rsp+0x38],rax
   140014e9d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014ea2:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014ea8:	call   QWORD PTR [rip+0xa452]        # 0x14001f300
   140014eae:	mov    rdx,r12
   140014eb1:	mov    rcx,rsi
   140014eb4:	mov    r14d,eax
   140014eb7:	xor    r14d,ebx
   140014eba:	mov    r8d,r14d
   140014ebd:	call   0x140011540
   140014ec2:	mov    rcx,QWORD PTR [rsi]
   140014ec5:	mov    rbx,QWORD PTR [rax]
   140014ec8:	mov    r13,rax
   140014ecb:	cmp    rbx,rcx
   140014ece:	jne    0x140014f59
   140014ed4:	mov    edx,DWORD PTR [rcx+0x20]
   140014ed7:	cmp    DWORD PTR [rcx+0x14],edx
   140014eda:	jl     0x140014f3d
   140014edc:	movsx  edx,WORD PTR [rcx+0x1e]
   140014ee0:	inc    edx
   140014ee2:	call   QWORD PTR [rip+0xa310]        # 0x14001f1f8
   140014ee8:	mov    r11,QWORD PTR [rsi]
   140014eeb:	mov    eax,DWORD PTR [r12+0xc]
   140014ef0:	mov    ebx,DWORD PTR [r11+0x24]
   140014ef4:	mov    rcx,r12
   140014ef7:	mov    DWORD PTR [rsp+0x30],eax
   140014efb:	call   QWORD PTR [rip+0xa6f7]        # 0x14001f5f8
   140014f01:	movsxd rcx,DWORD PTR [r12+0x8]
   140014f06:	xor    edx,edx
   140014f08:	add    rax,rcx
   140014f0b:	lea    rcx,[rsp+0x30]
   140014f10:	mov    QWORD PTR [rsp+0x38],rax
   140014f15:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140014f1a:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140014f20:	call   QWORD PTR [rip+0xa3da]        # 0x14001f300
   140014f26:	mov    rdx,r12
   140014f29:	mov    rcx,rsi
   140014f2c:	mov    r14d,eax
   140014f2f:	xor    r14d,ebx
   140014f32:	mov    r8d,r14d
   140014f35:	call   0x140011540
   140014f3a:	mov    r13,rax
   140014f3d:	mov    r9,rdi
   140014f40:	mov    r8,r12
   140014f43:	mov    edx,r14d
   140014f46:	mov    rcx,rsi
   140014f49:	mov    QWORD PTR [rsp+0x20],r13
   140014f4e:	call   0x1400129c0
   140014f53:	mov    QWORD PTR [rbp+0x0],rax
   140014f57:	jmp    0x140014f88
   140014f59:	movzx  eax,BYTE PTR [rdi]
   140014f5c:	lea    rdx,[rdi+0x8]
   140014f60:	lea    rcx,[rbx+0x28]
   140014f64:	mov    BYTE PTR [rbx+0x20],al
   140014f67:	movzx  eax,BYTE PTR [rdi+0x1]
   140014f6b:	mov    BYTE PTR [rbx+0x21],al
   140014f6e:	call   0x140011a40
   140014f73:	lea    rdx,[rdi+0x10]
   140014f77:	lea    rcx,[rbx+0x30]
   140014f7b:	call   0x140011a40
   140014f80:	mov    r11,QWORD PTR [r13+0x0]
   140014f84:	mov    QWORD PTR [rbp+0x0],r11
   140014f88:	mov    rbx,QWORD PTR [rsp+0x60]
   140014f8d:	mov    rsi,QWORD PTR [rsp+0x70]
   140014f92:	mov    rdi,QWORD PTR [rsp+0x78]
   140014f97:	mov    rax,rbp
   140014f9a:	mov    rbp,QWORD PTR [rsp+0x68]
   140014f9f:	add    rsp,0x40
   140014fa3:	pop    r14
   140014fa5:	pop    r13
   140014fa7:	pop    r12
   140014fa9:	ret    
   140014faa:	int3   
   140014fab:	int3   
   140014fac:	int3   
   140014fad:	int3   
   140014fae:	int3   
   140014faf:	int3   
   140014fb0:	mov    QWORD PTR [rsp+0x10],rbx
   140014fb5:	push   rdi
   140014fb6:	sub    rsp,0x20
   140014fba:	mov    QWORD PTR [rsp+0x30],rsi
   140014fbf:	mov    rbx,rcx
   140014fc2:	call   0x140014600
   140014fc7:	mov    r9,QWORD PTR [rbx]
   140014fca:	mov    esi,eax
   140014fcc:	movsxd rax,DWORD PTR [rbx+0x8]
   140014fd0:	cmp    eax,DWORD PTR [r9+0x4]
   140014fd4:	jge    0x140014ffd
   140014fd6:	mov    rdx,QWORD PTR [r9+0x10]
   140014fda:	lea    r8,[rax+rax*2]
   140014fde:	lea    rcx,[rdx+r8*8]
   140014fe2:	cmp    DWORD PTR [rcx+r9*1+0x4],0x42
   140014fe8:	jne    0x140014ffd
   140014fea:	inc    eax
   140014fec:	mov    rcx,rbx
   140014fef:	mov    DWORD PTR [rbx+0x8],eax
   140014ff2:	call   0x140014980
   140014ff7:	mov    edi,eax
   140014ff9:	and    edi,esi
   140014ffb:	jmp    0x140014fff
   140014ffd:	mov    edi,esi
   140014fff:	mov    r8,QWORD PTR [rbx]
   140015002:	movsxd rdx,DWORD PTR [rbx+0x8]
   140015006:	mov    rsi,QWORD PTR [rsp+0x30]
   14001500b:	cmp    edx,DWORD PTR [r8+0x4]
   14001500f:	jge    0x140015040
   140015011:	mov    rax,QWORD PTR [r8+0x10]
   140015015:	lea    rcx,[rdx+rdx*2]
   140015019:	lea    rcx,[rax+rcx*8]
   14001501d:	cmp    DWORD PTR [rcx+r8*1+0x4],0x41
   140015023:	jne    0x140015040
   140015025:	lea    eax,[rdx+0x1]
   140015028:	mov    rcx,rbx
   14001502b:	mov    DWORD PTR [rbx+0x8],eax
   14001502e:	call   0x140014fb0
   140015033:	xor    eax,edi
   140015035:	mov    rbx,QWORD PTR [rsp+0x38]
   14001503a:	add    rsp,0x20
   14001503e:	pop    rdi
   14001503f:	ret    
   140015040:	mov    eax,edi
   140015042:	mov    rbx,QWORD PTR [rsp+0x38]
   140015047:	add    rsp,0x20
   14001504b:	pop    rdi
   14001504c:	ret    
   14001504d:	int3   
   14001504e:	int3   
   14001504f:	int3   
   140015050:	rex push rbx
   140015052:	sub    rsp,0x20
   140015056:	mov    rbx,rcx
   140015059:	mov    rcx,QWORD PTR [rcx]
   14001505c:	mov    eax,DWORD PTR [rcx]
   14001505e:	cmp    eax,0x1
   140015061:	je     0x1400150aa
   140015063:	test   eax,eax
   140015065:	je     0x1400150aa
   140015067:	mov    r8d,DWORD PTR [rcx+0x8]
   14001506b:	btr    r8d,0x1f
   140015070:	test   r8d,r8d
   140015073:	jne    0x14001509c
   140015075:	lea    r9d,[r8+0x2]
   140015079:	xor    r8d,r8d
   14001507c:	lea    edx,[r9+0x6]
   140015080:	lea    ecx,[rdx+0x18]
   140015083:	call   QWORD PTR [rip+0xa48f]        # 0x14001f518
   140015089:	mov    QWORD PTR [rbx],rax
   14001508c:	mov    rcx,rax
   14001508f:	mov    rax,QWORD PTR [rax+0x10]
   140015093:	add    rax,rcx
   140015096:	add    rsp,0x20
   14001509a:	pop    rbx
   14001509b:	ret    
   14001509c:	mov    edx,DWORD PTR [rcx+0x4]
   14001509f:	xor    r9d,r9d
   1400150a2:	mov    rcx,rbx
   1400150a5:	call   0x1400146a0
   1400150aa:	mov    rcx,QWORD PTR [rbx]
   1400150ad:	mov    rax,QWORD PTR [rcx+0x10]
   1400150b1:	add    rax,rcx
   1400150b4:	add    rsp,0x20
   1400150b8:	pop    rbx
   1400150b9:	ret    
   1400150ba:	int3   
   1400150bb:	int3   
   1400150bc:	int3   
   1400150bd:	int3   
   1400150be:	int3   
   1400150bf:	int3   
   1400150c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400150c5:	push   rdi
   1400150c6:	sub    rsp,0x20
   1400150ca:	mov    rbx,rcx
   1400150cd:	call   0x140014fb0
   1400150d2:	mov    r9,QWORD PTR [rbx]
   1400150d5:	mov    edi,eax
   1400150d7:	movsxd rax,DWORD PTR [rbx+0x8]
   1400150db:	cmp    eax,DWORD PTR [r9+0x4]
   1400150df:	jge    0x14001510f
   1400150e1:	mov    rdx,QWORD PTR [r9+0x10]
   1400150e5:	lea    r8,[rax+rax*2]
   1400150e9:	lea    rcx,[rdx+r8*8]
   1400150ed:	cmp    DWORD PTR [rcx+r9*1+0x4],0x43
   1400150f3:	jne    0x14001510f
   1400150f5:	inc    eax
   1400150f7:	mov    rcx,rbx
   1400150fa:	mov    DWORD PTR [rbx+0x8],eax
   1400150fd:	call   0x1400150c0
   140015102:	or     eax,edi
   140015104:	mov    rbx,QWORD PTR [rsp+0x30]
   140015109:	add    rsp,0x20
   14001510d:	pop    rdi
   14001510e:	ret    
   14001510f:	mov    eax,edi
   140015111:	mov    rbx,QWORD PTR [rsp+0x30]
   140015116:	add    rsp,0x20
   14001511a:	pop    rdi
   14001511b:	ret    
   14001511c:	int3   
   14001511d:	int3   
   14001511e:	int3   
   14001511f:	int3   
   140015120:	mov    QWORD PTR [rsp+0x8],rbx
   140015125:	push   rdi
   140015126:	sub    rsp,0x20
   14001512a:	mov    rdx,QWORD PTR [rcx]
   14001512d:	mov    rdi,rcx
   140015130:	mov    eax,DWORD PTR [rdx]
   140015132:	cmp    eax,0x1
   140015135:	je     0x14001516d
   140015137:	test   eax,eax
   140015139:	je     0x14001516d
   14001513b:	mov    r8d,DWORD PTR [rdx+0x8]
   14001513f:	btr    r8d,0x1f
   140015144:	test   r8d,r8d
   140015147:	jne    0x140015162
   140015149:	lea    r9d,[r8+0x2]
   14001514d:	xor    r8d,r8d
   140015150:	lea    edx,[r9+0x6]
   140015154:	lea    ecx,[rdx+0x18]
   140015157:	call   QWORD PTR [rip+0xa3bb]        # 0x14001f518
   14001515d:	mov    QWORD PTR [rdi],rax
   140015160:	jmp    0x14001516d
   140015162:	mov    edx,DWORD PTR [rdx+0x4]
   140015165:	xor    r9d,r9d
   140015168:	call   0x1400146a0
   14001516d:	mov    rax,QWORD PTR [rdi]
   140015170:	mov    rcx,rdi
   140015173:	mov    ebx,DWORD PTR [rax+0x4]
   140015176:	call   0x140015050
   14001517b:	lea    ecx,[rbx-0x1]
   14001517e:	mov    rbx,QWORD PTR [rsp+0x30]
   140015183:	movsxd rdx,ecx
   140015186:	shl    rdx,0x5
   14001518a:	add    rax,rdx
   14001518d:	add    rsp,0x20
   140015191:	pop    rdi
   140015192:	ret    
   140015193:	int3   
   140015194:	int3   
   140015195:	int3   
   140015196:	int3   
   140015197:	int3   
   140015198:	int3   
   140015199:	int3   
   14001519a:	int3   
   14001519b:	int3   
   14001519c:	int3   
   14001519d:	int3   
   14001519e:	int3   
   14001519f:	int3   
   1400151a0:	mov    r11,rsp
   1400151a3:	push   rbx
   1400151a4:	push   r12
   1400151a6:	sub    rsp,0x88
   1400151ad:	mov    rax,QWORD PTR [rcx]
   1400151b0:	xor    ebx,ebx
   1400151b2:	mov    r12,rcx
   1400151b5:	cmp    DWORD PTR [rax+0x4],ebx
   1400151b8:	je     0x140015622
   1400151be:	mov    QWORD PTR [r11-0x18],rbp
   1400151c2:	mov    QWORD PTR [r11-0x20],rsi
   1400151c6:	mov    QWORD PTR [r11-0x28],rdi
   1400151ca:	mov    QWORD PTR [r11-0x30],r13
   1400151ce:	mov    QWORD PTR [r11-0x38],r14
   1400151d2:	mov    rax,QWORD PTR [r12]
   1400151d6:	mov    ecx,DWORD PTR [rax]
   1400151d8:	cmp    ecx,0x1
   1400151db:	je     0x14001521e
   1400151dd:	test   ecx,ecx
   1400151df:	je     0x14001521e
   1400151e1:	mov    r8d,DWORD PTR [rax+0x8]
   1400151e5:	btr    r8d,0x1f
   1400151ea:	test   r8d,r8d
   1400151ed:	jne    0x140015209
   1400151ef:	lea    r9d,[r8+0x2]
   1400151f3:	xor    r8d,r8d
   1400151f6:	lea    edx,[r9+0x6]
   1400151fa:	lea    ecx,[rdx+0x18]
   1400151fd:	call   QWORD PTR [rip+0xa315]        # 0x14001f518
   140015203:	mov    QWORD PTR [r12],rax
   140015207:	jmp    0x14001521e
   140015209:	mov    edx,DWORD PTR [rax+0x4]
   14001520c:	mov    r9d,ebx
   14001520f:	mov    rcx,r12
   140015212:	mov    DWORD PTR [rsp+0xa0],ebx
   140015219:	call   0x1400146a0
   14001521e:	mov    rax,QWORD PTR [r12]
   140015222:	mov    ecx,DWORD PTR [rax]
   140015224:	cmp    ecx,0x1
   140015227:	je     0x14001526a
   140015229:	test   ecx,ecx
   14001522b:	je     0x14001526a
   14001522d:	mov    r8d,DWORD PTR [rax+0x8]
   140015231:	btr    r8d,0x1f
   140015236:	test   r8d,r8d
   140015239:	jne    0x140015255
   14001523b:	lea    r9d,[r8+0x2]
   14001523f:	xor    r8d,r8d
   140015242:	lea    edx,[r9+0x6]
   140015246:	lea    ecx,[rdx+0x18]
   140015249:	call   QWORD PTR [rip+0xa2c9]        # 0x14001f518
   14001524f:	mov    QWORD PTR [r12],rax
   140015253:	jmp    0x14001526a
   140015255:	mov    edx,DWORD PTR [rax+0x4]
   140015258:	mov    r9d,ebx
   14001525b:	mov    rcx,r12
   14001525e:	mov    DWORD PTR [rsp+0xa8],ebx
   140015265:	call   0x1400146a0
   14001526a:	mov    rcx,QWORD PTR [r12]
   14001526e:	mov    edx,DWORD PTR [rcx+0x4]
   140015271:	lea    eax,[rdx-0x1]
   140015274:	movsxd rdi,eax
   140015277:	mov    eax,DWORD PTR [rcx]
   140015279:	shl    rdi,0x5
   14001527d:	add    rdi,QWORD PTR [rcx+0x10]
   140015281:	add    rdi,rcx
   140015284:	cmp    eax,0x1
   140015287:	je     0x1400152c7
   140015289:	test   eax,eax
   14001528b:	je     0x1400152c7
   14001528d:	mov    r8d,DWORD PTR [rcx+0x8]
   140015291:	btr    r8d,0x1f
   140015296:	test   r8d,r8d
   140015299:	jne    0x1400152b5
   14001529b:	lea    r9d,[r8+0x2]
   14001529f:	xor    r8d,r8d
   1400152a2:	lea    edx,[r9+0x6]
   1400152a6:	lea    ecx,[rdx+0x18]
   1400152a9:	call   QWORD PTR [rip+0xa269]        # 0x14001f518
   1400152af:	mov    QWORD PTR [r12],rax
   1400152b3:	jmp    0x1400152c7
   1400152b5:	mov    r9d,ebx
   1400152b8:	mov    rcx,r12
   1400152bb:	mov    DWORD PTR [rsp+0xb0],ebx
   1400152c2:	call   0x1400146a0
   1400152c7:	mov    rax,QWORD PTR [r12]
   1400152cb:	mov    ecx,DWORD PTR [rax]
   1400152cd:	cmp    ecx,0x1
   1400152d0:	je     0x140015313
   1400152d2:	test   ecx,ecx
   1400152d4:	je     0x140015313
   1400152d6:	mov    r8d,DWORD PTR [rax+0x8]
   1400152da:	btr    r8d,0x1f
   1400152df:	test   r8d,r8d
   1400152e2:	jne    0x1400152fe
   1400152e4:	lea    r9d,[r8+0x2]
   1400152e8:	xor    r8d,r8d
   1400152eb:	lea    edx,[r9+0x6]
   1400152ef:	lea    ecx,[rdx+0x18]
   1400152f2:	call   QWORD PTR [rip+0xa220]        # 0x14001f518
   1400152f8:	mov    QWORD PTR [r12],rax
   1400152fc:	jmp    0x140015313
   1400152fe:	mov    edx,DWORD PTR [rax+0x4]
   140015301:	mov    r9d,ebx
   140015304:	mov    rcx,r12
   140015307:	mov    DWORD PTR [rsp+0xb8],ebx
   14001530e:	call   0x1400146a0
   140015313:	mov    rdx,QWORD PTR [r12]
   140015317:	movsxd rax,DWORD PTR [rdx+0x4]
   14001531b:	shl    rax,0x5
   14001531f:	add    rax,QWORD PTR [rdx+0x10]
   140015323:	mov    rax,QWORD PTR [rax+rdx*1-0x20]
   140015328:	mov    ecx,DWORD PTR [rax+0x4]
   14001532b:	cmp    DWORD PTR [rdi+0x18],ecx
   14001532e:	jl     0x140015606
   140015334:	mov    eax,DWORD PTR [rdx]
   140015336:	cmp    eax,0x1
   140015339:	je     0x140015379
   14001533b:	test   eax,eax
   14001533d:	je     0x140015379
   14001533f:	mov    r8d,DWORD PTR [rdx+0x8]
   140015343:	btr    r8d,0x1f
   140015348:	test   r8d,r8d
   14001534b:	jne    0x140015367
   14001534d:	lea    r9d,[r8+0x2]
   140015351:	xor    r8d,r8d
   140015354:	lea    edx,[r9+0x6]
   140015358:	lea    ecx,[rdx+0x18]
   14001535b:	call   QWORD PTR [rip+0xa1b7]        # 0x14001f518
   140015361:	mov    QWORD PTR [r12],rax
   140015365:	jmp    0x140015379
   140015367:	mov    edx,DWORD PTR [rdx+0x4]
   14001536a:	mov    r9d,ebx
   14001536d:	mov    rcx,r12
   140015370:	mov    DWORD PTR [rsp+0x30],ebx
   140015374:	call   0x1400146a0
   140015379:	mov    rcx,QWORD PTR [r12]
   14001537d:	mov    eax,DWORD PTR [rcx+0x4]
   140015380:	dec    eax
   140015382:	movsxd r14,eax
   140015385:	shl    r14,0x5
   140015389:	add    r14,QWORD PTR [rcx+0x10]
   14001538d:	add    r14,rcx
   140015390:	mov    rax,QWORD PTR [r14]
   140015393:	mov    ecx,DWORD PTR [rax]
   140015395:	test   ecx,ecx
   140015397:	je     0x1400153af
   140015399:	cmp    ecx,0xffffffff
   14001539c:	je     0x1400153a2
   14001539e:	lock add DWORD PTR [rax],0x1
   1400153a2:	mov    rax,QWORD PTR [r14]
   1400153a5:	mov    QWORD PTR [rsp+0x38],rax
   1400153aa:	jmp    0x14001548a
   1400153af:	mov    r8d,DWORD PTR [rax+0x8]
   1400153b3:	bt     r8d,0x1f
   1400153b8:	jae    0x1400153e5
   1400153ba:	mov    edx,0x8
   1400153bf:	and    r8d,0x7fffffff
   1400153c6:	mov    r9d,ebx
   1400153c9:	lea    ecx,[rdx+0x10]
   1400153cc:	call   QWORD PTR [rip+0xa146]        # 0x14001f518
   1400153d2:	mov    QWORD PTR [rsp+0x38],rax
   1400153d7:	or     DWORD PTR [rax+0x8],0x80000000
   1400153de:	mov    r9,QWORD PTR [rsp+0x38]
   1400153e3:	jmp    0x140015402
   1400153e5:	movsxd r8,DWORD PTR [rax+0x4]
   1400153e9:	mov    edx,0x8
   1400153ee:	mov    r9d,ebx
   1400153f1:	lea    ecx,[rdx+0x10]
   1400153f4:	call   QWORD PTR [rip+0xa11e]        # 0x14001f518
   1400153fa:	mov    r9,rax
   1400153fd:	mov    QWORD PTR [rsp+0x38],rax
   140015402:	mov    ecx,DWORD PTR [r9+0x8]
   140015406:	btr    ecx,0x1f
   14001540a:	test   ecx,ecx
   14001540c:	je     0x14001548a
   14001540e:	mov    r8,QWORD PTR [r14]
   140015411:	mov    rcx,QWORD PTR [r9+0x10]
   140015415:	mov    rax,QWORD PTR [r8+0x10]
   140015419:	lea    rbp,[r9+rcx*1]
   14001541d:	movsxd rcx,DWORD PTR [r8+0x4]
   140015421:	lea    rdx,[rcx+rcx*2]
   140015425:	lea    rsi,[r8+rax*1]
   140015429:	lea    r13,[rax+rdx*8]
   14001542d:	add    r13,r8
   140015430:	cmp    rsi,r13
   140015433:	je     0x140015480
   140015435:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140015440:	mov    rdi,rbp
   140015443:	add    rbp,0x18
   140015447:	test   rdi,rdi
   14001544a:	je     0x140015476
   14001544c:	mov    eax,DWORD PTR [rsi]
   14001544e:	lea    rdx,[rsi+0x8]
   140015452:	lea    rcx,[rdi+0x8]
   140015456:	mov    DWORD PTR [rdi],eax
   140015458:	mov    eax,DWORD PTR [rsi+0x4]
   14001545b:	mov    DWORD PTR [rdi+0x4],eax
   14001545e:	call   QWORD PTR [rip+0xa174]        # 0x14001f5d8
   140015464:	mov    r11d,DWORD PTR [rsi+0x10]
   140015468:	mov    DWORD PTR [rdi+0x10],r11d
   14001546c:	mov    eax,DWORD PTR [rsi+0x14]
   14001546f:	add    rsi,0x18
   140015473:	mov    DWORD PTR [rdi+0x14],eax
   140015476:	cmp    rsi,r13
   140015479:	jne    0x140015440
   14001547b:	mov    r9,QWORD PTR [rsp+0x38]
   140015480:	mov    rax,QWORD PTR [r14]
   140015483:	mov    ecx,DWORD PTR [rax+0x4]
   140015486:	mov    DWORD PTR [r9+0x4],ecx
   14001548a:	lea    rdx,[r14+0x8]
   14001548e:	lea    rcx,[rsp+0x40]
   140015493:	call   QWORD PTR [rip+0xa13f]        # 0x14001f5d8
   140015499:	mov    rcx,QWORD PTR [r14+0x10]
   14001549d:	mov    QWORD PTR [rsp+0x48],rcx
   1400154a2:	mov    eax,DWORD PTR [rcx+0x10]
   1400154a5:	test   eax,eax
   1400154a7:	je     0x1400154b8
   1400154a9:	cmp    eax,0xffffffff
   1400154ac:	je     0x1400154b8
   1400154ae:	lock add DWORD PTR [rcx+0x10],0x1
   1400154b3:	mov    rcx,QWORD PTR [rsp+0x48]
   1400154b8:	test   BYTE PTR [rcx+0x28],0x1
   1400154bc:	jne    0x140015528
   1400154be:	mov    eax,DWORD PTR [rcx+0x10]
   1400154c1:	cmp    eax,0x1
   1400154c4:	je     0x140015528
   1400154c6:	test   eax,eax
   1400154c8:	je     0x140015528
   1400154ca:	lea    r8,[rip+0xfffffffffffed44f]        # 0x140002920
   1400154d1:	lea    rdx,[rip+0xfffffffffffecd78]        # 0x140002250
   1400154d8:	mov    r9d,0x18
   1400154de:	mov    DWORD PTR [rsp+0x20],0x8
   1400154e6:	call   QWORD PTR [rip+0x9e84]        # 0x14001f370
   1400154ec:	mov    r8,QWORD PTR [rsp+0x48]
   1400154f1:	mov    ecx,DWORD PTR [r8+0x10]
   1400154f5:	mov    rdi,rax
   1400154f8:	test   ecx,ecx
   1400154fa:	je     0x140015513
   1400154fc:	cmp    ecx,0xffffffff
   1400154ff:	je     0x140015523
   140015501:	lock add DWORD PTR [r8+0x10],0xffffffff
   140015507:	setne  cl
   14001550a:	test   cl,cl
   14001550c:	jne    0x140015523
   14001550e:	mov    r8,QWORD PTR [rsp+0x48]
   140015513:	lea    rdx,[rip+0xfffffffffffed406]        # 0x140002920
   14001551a:	mov    rcx,r8
   14001551d:	call   QWORD PTR [rip+0x9f95]        # 0x14001f4b8
   140015523:	mov    QWORD PTR [rsp+0x48],rdi
   140015528:	mov    rcx,QWORD PTR [r12]
   14001552c:	mov    eax,DWORD PTR [r14+0x18]
   140015530:	mov    r9d,ebx
   140015533:	mov    DWORD PTR [rsp+0x50],eax
   140015537:	mov    r8d,DWORD PTR [rcx+0x8]
   14001553b:	mov    edx,DWORD PTR [rcx+0x4]
   14001553e:	btr    r8d,0x1f
   140015543:	dec    edx
   140015545:	cmp    edx,r8d
   140015548:	jle    0x140015553
   14001554a:	mov    r8d,edx
   14001554d:	mov    r9d,0x8
   140015553:	mov    rcx,r12
   140015556:	call   0x1400146a0
   14001555b:	mov    rcx,QWORD PTR [rsp+0x48]
   140015560:	mov    eax,DWORD PTR [rcx+0x10]
   140015563:	test   eax,eax
   140015565:	je     0x14001557d
   140015567:	cmp    eax,0xffffffff
   14001556a:	je     0x14001558a
   14001556c:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140015571:	setne  al
   140015574:	test   al,al
   140015576:	jne    0x14001558a
   140015578:	mov    rcx,QWORD PTR [rsp+0x48]
   14001557d:	lea    rdx,[rip+0xfffffffffffed39c]        # 0x140002920
   140015584:	call   QWORD PTR [rip+0x9f2e]        # 0x14001f4b8
   14001558a:	lea    rcx,[rsp+0x40]
   14001558f:	call   QWORD PTR [rip+0xa023]        # 0x14001f5b8
   140015595:	mov    rsi,QWORD PTR [rsp+0x38]
   14001559a:	mov    eax,DWORD PTR [rsi]
   14001559c:	test   eax,eax
   14001559e:	je     0x1400155b5
   1400155a0:	cmp    eax,0xffffffff
   1400155a3:	je     0x1400155f9
   1400155a5:	lock add DWORD PTR [rsi],0xffffffff
   1400155a9:	setne  al
   1400155ac:	test   al,al
   1400155ae:	jne    0x1400155f9
   1400155b0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400155b5:	mov    rdx,QWORD PTR [rsi+0x10]
   1400155b9:	movsxd rax,DWORD PTR [rsi+0x4]
   1400155bd:	lea    rcx,[rax+rax*2]
   1400155c1:	lea    rdi,[rdx+rsi*1]
   1400155c5:	lea    rbp,[rdx+rcx*8]
   1400155c9:	add    rbp,rsi
   1400155cc:	cmp    rdi,rbp
   1400155cf:	je     0x1400155e7
   1400155d1:	mov    rcx,rdi
   1400155d4:	add    rdi,0x18
   1400155d8:	add    rcx,0x8
   1400155dc:	call   QWORD PTR [rip+0x9fd6]        # 0x14001f5b8
   1400155e2:	cmp    rdi,rbp
   1400155e5:	jne    0x1400155d1
   1400155e7:	mov    edx,0x18
   1400155ec:	mov    rcx,rsi
   1400155ef:	lea    r8d,[rdx-0x10]
   1400155f3:	call   QWORD PTR [rip+0x9f17]        # 0x14001f510
   1400155f9:	mov    rax,QWORD PTR [r12]
   1400155fd:	cmp    DWORD PTR [rax+0x4],ebx
   140015600:	jne    0x1400151d2
   140015606:	mov    r13,QWORD PTR [rsp+0x68]
   14001560b:	mov    rdi,QWORD PTR [rsp+0x70]
   140015610:	mov    rsi,QWORD PTR [rsp+0x78]
   140015615:	mov    rbp,QWORD PTR [rsp+0x80]
   14001561d:	mov    r14,QWORD PTR [rsp+0x60]
   140015622:	mov    rax,QWORD PTR [r12]
   140015626:	cmp    DWORD PTR [rax+0x4],ebx
   140015629:	setne  al
   14001562c:	add    rsp,0x88
   140015633:	pop    r12
   140015635:	pop    rbx
   140015636:	ret    
   140015637:	int3   
   140015638:	int3   
   140015639:	int3   
   14001563a:	int3   
   14001563b:	int3   
   14001563c:	int3   
   14001563d:	int3   
   14001563e:	int3   
   14001563f:	int3   
   140015640:	mov    r11,rsp
   140015643:	push   rbx
   140015644:	push   r12
   140015646:	sub    rsp,0x88
   14001564d:	mov    rax,QWORD PTR [rcx]
   140015650:	mov    r12,rcx
   140015653:	cmp    DWORD PTR [rax+0x4],0x0
   140015657:	je     0x140015ac2
   14001565d:	mov    QWORD PTR [r11-0x18],rbp
   140015661:	mov    QWORD PTR [r11-0x20],rsi
   140015665:	mov    QWORD PTR [r11-0x28],rdi
   140015669:	mov    QWORD PTR [r11-0x30],r13
   14001566d:	xor    ebx,ebx
   14001566f:	mov    QWORD PTR [r11-0x38],r14
   140015673:	mov    rax,QWORD PTR [r12]
   140015677:	mov    ecx,DWORD PTR [rax]
   140015679:	cmp    ecx,0x1
   14001567c:	je     0x1400156bf
   14001567e:	test   ecx,ecx
   140015680:	je     0x1400156bf
   140015682:	mov    r8d,DWORD PTR [rax+0x8]
   140015686:	btr    r8d,0x1f
   14001568b:	test   r8d,r8d
   14001568e:	jne    0x1400156aa
   140015690:	lea    r9d,[r8+0x2]
   140015694:	xor    r8d,r8d
   140015697:	lea    edx,[r9+0x6]
   14001569b:	lea    ecx,[rdx+0x18]
   14001569e:	call   QWORD PTR [rip+0x9e74]        # 0x14001f518
   1400156a4:	mov    QWORD PTR [r12],rax
   1400156a8:	jmp    0x1400156bf
   1400156aa:	mov    edx,DWORD PTR [rax+0x4]
   1400156ad:	mov    r9d,ebx
   1400156b0:	mov    rcx,r12
   1400156b3:	mov    DWORD PTR [rsp+0xa0],ebx
   1400156ba:	call   0x1400146a0
   1400156bf:	mov    rax,QWORD PTR [r12]
   1400156c3:	mov    ecx,DWORD PTR [rax]
   1400156c5:	cmp    ecx,0x1
   1400156c8:	je     0x14001570b
   1400156ca:	test   ecx,ecx
   1400156cc:	je     0x14001570b
   1400156ce:	mov    r8d,DWORD PTR [rax+0x8]
   1400156d2:	btr    r8d,0x1f
   1400156d7:	test   r8d,r8d
   1400156da:	jne    0x1400156f6
   1400156dc:	lea    r9d,[r8+0x2]
   1400156e0:	xor    r8d,r8d
   1400156e3:	lea    edx,[r9+0x6]
   1400156e7:	lea    ecx,[rdx+0x18]
   1400156ea:	call   QWORD PTR [rip+0x9e28]        # 0x14001f518
   1400156f0:	mov    QWORD PTR [r12],rax
   1400156f4:	jmp    0x14001570b
   1400156f6:	mov    edx,DWORD PTR [rax+0x4]
   1400156f9:	mov    r9d,ebx
   1400156fc:	mov    rcx,r12
   1400156ff:	mov    DWORD PTR [rsp+0xa8],ebx
   140015706:	call   0x1400146a0
   14001570b:	mov    rcx,QWORD PTR [r12]
   14001570f:	mov    edx,DWORD PTR [rcx+0x4]
   140015712:	lea    eax,[rdx-0x1]
   140015715:	movsxd rdi,eax
   140015718:	mov    eax,DWORD PTR [rcx]
   14001571a:	shl    rdi,0x5
   14001571e:	add    rdi,QWORD PTR [rcx+0x10]
   140015722:	add    rdi,rcx
   140015725:	cmp    eax,0x1
   140015728:	je     0x140015768
   14001572a:	test   eax,eax
   14001572c:	je     0x140015768
   14001572e:	mov    r8d,DWORD PTR [rcx+0x8]
   140015732:	btr    r8d,0x1f
   140015737:	test   r8d,r8d
   14001573a:	jne    0x140015756
   14001573c:	lea    r9d,[r8+0x2]
   140015740:	xor    r8d,r8d
   140015743:	lea    edx,[r9+0x6]
   140015747:	lea    ecx,[rdx+0x18]
   14001574a:	call   QWORD PTR [rip+0x9dc8]        # 0x14001f518
   140015750:	mov    QWORD PTR [r12],rax
   140015754:	jmp    0x140015768
   140015756:	mov    r9d,ebx
   140015759:	mov    rcx,r12
   14001575c:	mov    DWORD PTR [rsp+0xb0],ebx
   140015763:	call   0x1400146a0
   140015768:	mov    rax,QWORD PTR [r12]
   14001576c:	mov    ecx,DWORD PTR [rax]
   14001576e:	cmp    ecx,0x1
   140015771:	je     0x1400157b4
   140015773:	test   ecx,ecx
   140015775:	je     0x1400157b4
   140015777:	mov    r8d,DWORD PTR [rax+0x8]
   14001577b:	btr    r8d,0x1f
   140015780:	test   r8d,r8d
   140015783:	jne    0x14001579f
   140015785:	lea    r9d,[r8+0x2]
   140015789:	xor    r8d,r8d
   14001578c:	lea    edx,[r9+0x6]
   140015790:	lea    ecx,[rdx+0x18]
   140015793:	call   QWORD PTR [rip+0x9d7f]        # 0x14001f518
   140015799:	mov    QWORD PTR [r12],rax
   14001579d:	jmp    0x1400157b4
   14001579f:	mov    edx,DWORD PTR [rax+0x4]
   1400157a2:	mov    r9d,ebx
   1400157a5:	mov    rcx,r12
   1400157a8:	mov    DWORD PTR [rsp+0xb8],ebx
   1400157af:	call   0x1400146a0
   1400157b4:	mov    rdx,QWORD PTR [r12]
   1400157b8:	movsxd rax,DWORD PTR [rdx+0x4]
   1400157bc:	shl    rax,0x5
   1400157c0:	add    rax,QWORD PTR [rdx+0x10]
   1400157c4:	mov    rax,QWORD PTR [rax+rdx*1-0x20]
   1400157c9:	mov    ecx,DWORD PTR [rax+0x4]
   1400157cc:	cmp    DWORD PTR [rdi+0x18],ecx
   1400157cf:	jl     0x140015aa6
   1400157d5:	mov    eax,DWORD PTR [rdx]
   1400157d7:	cmp    eax,0x1
   1400157da:	je     0x14001581a
   1400157dc:	test   eax,eax
   1400157de:	je     0x14001581a
   1400157e0:	mov    r8d,DWORD PTR [rdx+0x8]
   1400157e4:	btr    r8d,0x1f
   1400157e9:	test   r8d,r8d
   1400157ec:	jne    0x140015808
   1400157ee:	lea    r9d,[r8+0x2]
   1400157f2:	xor    r8d,r8d
   1400157f5:	lea    edx,[r9+0x6]
   1400157f9:	lea    ecx,[rdx+0x18]
   1400157fc:	call   QWORD PTR [rip+0x9d16]        # 0x14001f518
   140015802:	mov    QWORD PTR [r12],rax
   140015806:	jmp    0x14001581a
   140015808:	mov    edx,DWORD PTR [rdx+0x4]
   14001580b:	mov    r9d,ebx
   14001580e:	mov    rcx,r12
   140015811:	mov    DWORD PTR [rsp+0x30],ebx
   140015815:	call   0x1400146a0
   14001581a:	mov    rcx,QWORD PTR [r12]
   14001581e:	mov    eax,DWORD PTR [rcx+0x4]
   140015821:	dec    eax
   140015823:	movsxd r14,eax
   140015826:	shl    r14,0x5
   14001582a:	add    r14,QWORD PTR [rcx+0x10]
   14001582e:	add    r14,rcx
   140015831:	mov    rax,QWORD PTR [r14]
   140015834:	mov    ecx,DWORD PTR [rax]
   140015836:	test   ecx,ecx
   140015838:	je     0x140015850
   14001583a:	cmp    ecx,0xffffffff
   14001583d:	je     0x140015843
   14001583f:	lock add DWORD PTR [rax],0x1
   140015843:	mov    rax,QWORD PTR [r14]
   140015846:	mov    QWORD PTR [rsp+0x38],rax
   14001584b:	jmp    0x14001592a
   140015850:	mov    r8d,DWORD PTR [rax+0x8]
   140015854:	bt     r8d,0x1f
   140015859:	jae    0x140015886
   14001585b:	mov    edx,0x8
   140015860:	and    r8d,0x7fffffff
   140015867:	mov    r9d,ebx
   14001586a:	lea    ecx,[rdx+0x10]
   14001586d:	call   QWORD PTR [rip+0x9ca5]        # 0x14001f518
   140015873:	mov    QWORD PTR [rsp+0x38],rax
   140015878:	or     DWORD PTR [rax+0x8],0x80000000
   14001587f:	mov    r9,QWORD PTR [rsp+0x38]
   140015884:	jmp    0x1400158a3
   140015886:	movsxd r8,DWORD PTR [rax+0x4]
   14001588a:	mov    edx,0x8
   14001588f:	mov    r9d,ebx
   140015892:	lea    ecx,[rdx+0x10]
   140015895:	call   QWORD PTR [rip+0x9c7d]        # 0x14001f518
   14001589b:	mov    r9,rax
   14001589e:	mov    QWORD PTR [rsp+0x38],rax
   1400158a3:	mov    ecx,DWORD PTR [r9+0x8]
   1400158a7:	btr    ecx,0x1f
   1400158ab:	test   ecx,ecx
   1400158ad:	je     0x14001592a
   1400158af:	mov    r8,QWORD PTR [r14]
   1400158b2:	mov    rcx,QWORD PTR [r9+0x10]
   1400158b6:	mov    rax,QWORD PTR [r8+0x10]
   1400158ba:	lea    rbp,[r9+rcx*1]
   1400158be:	movsxd rcx,DWORD PTR [r8+0x4]
   1400158c2:	lea    rdx,[rcx+rcx*2]
   1400158c6:	lea    rsi,[r8+rax*1]
   1400158ca:	lea    r13,[rax+rdx*8]
   1400158ce:	add    r13,r8
   1400158d1:	cmp    rsi,r13
   1400158d4:	je     0x140015920
   1400158d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400158e0:	mov    rdi,rbp
   1400158e3:	add    rbp,0x18
   1400158e7:	test   rdi,rdi
   1400158ea:	je     0x140015916
   1400158ec:	mov    eax,DWORD PTR [rsi]
   1400158ee:	lea    rdx,[rsi+0x8]
   1400158f2:	lea    rcx,[rdi+0x8]
   1400158f6:	mov    DWORD PTR [rdi],eax
   1400158f8:	mov    eax,DWORD PTR [rsi+0x4]
   1400158fb:	mov    DWORD PTR [rdi+0x4],eax
   1400158fe:	call   QWORD PTR [rip+0x9cd4]        # 0x14001f5d8
   140015904:	mov    r11d,DWORD PTR [rsi+0x10]
   140015908:	mov    DWORD PTR [rdi+0x10],r11d
   14001590c:	mov    eax,DWORD PTR [rsi+0x14]
   14001590f:	add    rsi,0x18
   140015913:	mov    DWORD PTR [rdi+0x14],eax
   140015916:	cmp    rsi,r13
   140015919:	jne    0x1400158e0
   14001591b:	mov    r9,QWORD PTR [rsp+0x38]
   140015920:	mov    rax,QWORD PTR [r14]
   140015923:	mov    ecx,DWORD PTR [rax+0x4]
   140015926:	mov    DWORD PTR [r9+0x4],ecx
   14001592a:	lea    rdx,[r14+0x8]
   14001592e:	lea    rcx,[rsp+0x40]
   140015933:	call   QWORD PTR [rip+0x9c9f]        # 0x14001f5d8
   140015939:	mov    rcx,QWORD PTR [r14+0x10]
   14001593d:	mov    QWORD PTR [rsp+0x48],rcx
   140015942:	mov    eax,DWORD PTR [rcx+0x10]
   140015945:	test   eax,eax
   140015947:	je     0x140015958
   140015949:	cmp    eax,0xffffffff
   14001594c:	je     0x140015958
   14001594e:	lock add DWORD PTR [rcx+0x10],0x1
   140015953:	mov    rcx,QWORD PTR [rsp+0x48]
   140015958:	test   BYTE PTR [rcx+0x28],0x1
   14001595c:	jne    0x1400159c8
   14001595e:	mov    eax,DWORD PTR [rcx+0x10]
   140015961:	cmp    eax,0x1
   140015964:	je     0x1400159c8
   140015966:	test   eax,eax
   140015968:	je     0x1400159c8
   14001596a:	lea    r8,[rip+0xfffffffffffecfaf]        # 0x140002920
   140015971:	lea    rdx,[rip+0xfffffffffffec8d8]        # 0x140002250
   140015978:	mov    r9d,0x18
   14001597e:	mov    DWORD PTR [rsp+0x20],0x8
   140015986:	call   QWORD PTR [rip+0x99e4]        # 0x14001f370
   14001598c:	mov    r8,QWORD PTR [rsp+0x48]
   140015991:	mov    ecx,DWORD PTR [r8+0x10]
   140015995:	mov    rdi,rax
   140015998:	test   ecx,ecx
   14001599a:	je     0x1400159b3
   14001599c:	cmp    ecx,0xffffffff
   14001599f:	je     0x1400159c3
   1400159a1:	lock add DWORD PTR [r8+0x10],0xffffffff
   1400159a7:	setne  cl
   1400159aa:	test   cl,cl
   1400159ac:	jne    0x1400159c3
   1400159ae:	mov    r8,QWORD PTR [rsp+0x48]
   1400159b3:	lea    rdx,[rip+0xfffffffffffecf66]        # 0x140002920
   1400159ba:	mov    rcx,r8
   1400159bd:	call   QWORD PTR [rip+0x9af5]        # 0x14001f4b8
   1400159c3:	mov    QWORD PTR [rsp+0x48],rdi
   1400159c8:	mov    rcx,QWORD PTR [r12]
   1400159cc:	mov    eax,DWORD PTR [r14+0x18]
   1400159d0:	mov    r9d,ebx
   1400159d3:	mov    DWORD PTR [rsp+0x50],eax
   1400159d7:	mov    r8d,DWORD PTR [rcx+0x8]
   1400159db:	mov    edx,DWORD PTR [rcx+0x4]
   1400159de:	btr    r8d,0x1f
   1400159e3:	dec    edx
   1400159e5:	cmp    edx,r8d
   1400159e8:	jle    0x1400159f3
   1400159ea:	mov    r8d,edx
   1400159ed:	mov    r9d,0x8
   1400159f3:	mov    rcx,r12
   1400159f6:	call   0x1400146a0
   1400159fb:	mov    rcx,QWORD PTR [rsp+0x48]
   140015a00:	mov    eax,DWORD PTR [rcx+0x10]
   140015a03:	test   eax,eax
   140015a05:	je     0x140015a1d
   140015a07:	cmp    eax,0xffffffff
   140015a0a:	je     0x140015a2a
   140015a0c:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140015a11:	setne  al
   140015a14:	test   al,al
   140015a16:	jne    0x140015a2a
   140015a18:	mov    rcx,QWORD PTR [rsp+0x48]
   140015a1d:	lea    rdx,[rip+0xfffffffffffecefc]        # 0x140002920
   140015a24:	call   QWORD PTR [rip+0x9a8e]        # 0x14001f4b8
   140015a2a:	lea    rcx,[rsp+0x40]
   140015a2f:	call   QWORD PTR [rip+0x9b83]        # 0x14001f5b8
   140015a35:	mov    rsi,QWORD PTR [rsp+0x38]
   140015a3a:	mov    eax,DWORD PTR [rsi]
   140015a3c:	test   eax,eax
   140015a3e:	je     0x140015a55
   140015a40:	cmp    eax,0xffffffff
   140015a43:	je     0x140015a99
   140015a45:	lock add DWORD PTR [rsi],0xffffffff
   140015a49:	setne  al
   140015a4c:	test   al,al
   140015a4e:	jne    0x140015a99
   140015a50:	mov    rsi,QWORD PTR [rsp+0x38]
   140015a55:	mov    rdx,QWORD PTR [rsi+0x10]
   140015a59:	movsxd rax,DWORD PTR [rsi+0x4]
   140015a5d:	lea    rcx,[rax+rax*2]
   140015a61:	lea    rdi,[rdx+rsi*1]
   140015a65:	lea    rbp,[rdx+rcx*8]
   140015a69:	add    rbp,rsi
   140015a6c:	cmp    rdi,rbp
   140015a6f:	je     0x140015a87
   140015a71:	mov    rcx,rdi
   140015a74:	add    rdi,0x18
   140015a78:	add    rcx,0x8
   140015a7c:	call   QWORD PTR [rip+0x9b36]        # 0x14001f5b8
   140015a82:	cmp    rdi,rbp
   140015a85:	jne    0x140015a71
   140015a87:	mov    edx,0x18
   140015a8c:	mov    rcx,rsi
   140015a8f:	lea    r8d,[rdx-0x10]
   140015a93:	call   QWORD PTR [rip+0x9a77]        # 0x14001f510
   140015a99:	mov    rax,QWORD PTR [r12]
   140015a9d:	cmp    DWORD PTR [rax+0x4],ebx
   140015aa0:	jne    0x140015673
   140015aa6:	mov    r14,QWORD PTR [rsp+0x60]
   140015aab:	mov    rdi,QWORD PTR [rsp+0x70]
   140015ab0:	mov    rsi,QWORD PTR [rsp+0x78]
   140015ab5:	mov    rbp,QWORD PTR [rsp+0x80]
   140015abd:	mov    r13,QWORD PTR [rsp+0x68]
   140015ac2:	mov    rax,QWORD PTR [r12]
   140015ac6:	cmp    DWORD PTR [rax+0x4],0x0
   140015aca:	jne    0x140015ad9
   140015acc:	xor    eax,eax
   140015ace:	add    rsp,0x88
   140015ad5:	pop    r12
   140015ad7:	pop    rbx
   140015ad8:	ret    
   140015ad9:	mov    rcx,r12
   140015adc:	call   0x140015120
   140015ae1:	movsxd rbx,DWORD PTR [rax+0x18]
   140015ae5:	lea    ecx,[rbx+0x1]
   140015ae8:	mov    DWORD PTR [rax+0x18],ecx
   140015aeb:	mov    rcx,r12
   140015aee:	call   0x140015120
   140015af3:	lea    rdx,[rbx+rbx*2]
   140015af7:	mov    r8,QWORD PTR [rax]
   140015afa:	mov    rcx,QWORD PTR [r8+0x10]
   140015afe:	lea    rax,[rcx+rdx*8]
   140015b02:	mov    eax,DWORD PTR [rax+r8*1+0x4]
   140015b07:	add    rsp,0x88
   140015b0e:	pop    r12
   140015b10:	pop    rbx
   140015b11:	ret    
   140015b12:	int3   
   140015b13:	int3   
   140015b14:	int3   
   140015b15:	int3   
   140015b16:	int3   
   140015b17:	int3   
   140015b18:	int3   
   140015b19:	int3   
   140015b1a:	int3   
   140015b1b:	int3   
   140015b1c:	int3   
   140015b1d:	int3   
   140015b1e:	int3   
   140015b1f:	int3   
   140015b20:	mov    QWORD PTR [rsp+0x10],rbx
   140015b25:	push   rsi
   140015b26:	sub    rsp,0x20
   140015b2a:	mov    r11,QWORD PTR [rcx]
   140015b2d:	mov    esi,edx
   140015b2f:	mov    rbx,rcx
   140015b32:	mov    r10d,DWORD PTR [r11+0x4]
   140015b36:	sub    r10d,0x1
   140015b3a:	movsxd r8,r10d
   140015b3d:	js     0x140015b78
   140015b3f:	mov    r9,r8
   140015b42:	mov    QWORD PTR [rsp+0x30],rdi
   140015b47:	mov    rdi,QWORD PTR [r11+0x10]
   140015b4b:	shl    r9,0x5
   140015b4f:	nop
   140015b50:	lea    rax,[r9+rdi*1]
   140015b54:	lea    rcx,[r9+rdi*1]
   140015b58:	mov    rdx,QWORD PTR [rax+r11*1]
   140015b5c:	mov    eax,DWORD PTR [rdx+0x4]
   140015b5f:	cmp    DWORD PTR [rcx+r11*1+0x18],eax
   140015b64:	jl     0x140015b73
   140015b66:	dec    r10d
   140015b69:	sub    r9,0x20
   140015b6d:	sub    r8,0x1
   140015b71:	jns    0x140015b50
   140015b73:	mov    rdi,QWORD PTR [rsp+0x30]
   140015b78:	test   r10d,r10d
   140015b7b:	js     0x140015bc0
   140015b7d:	mov    rax,QWORD PTR [r11+0x10]
   140015b81:	movsxd rdx,r10d
   140015b84:	shl    rdx,0x5
   140015b88:	lea    rcx,[rdx+rax*1]
   140015b8c:	add    rax,rdx
   140015b8f:	mov    r8,QWORD PTR [rcx+r11*1]
   140015b93:	movsxd rax,DWORD PTR [rax+r11*1+0x18]
   140015b98:	lea    rcx,[rax+rax*2]
   140015b9c:	mov    rax,QWORD PTR [r8+0x10]
   140015ba0:	lea    rcx,[rax+rcx*8]
   140015ba4:	cmp    DWORD PTR [rcx+r8*1+0x4],esi
   140015ba9:	jne    0x140015bc0
   140015bab:	mov    rcx,rbx
   140015bae:	call   0x140015640
   140015bb3:	mov    al,0x1
   140015bb5:	mov    rbx,QWORD PTR [rsp+0x38]
   140015bba:	add    rsp,0x20
   140015bbe:	pop    rsi
   140015bbf:	ret    
   140015bc0:	xor    al,al
   140015bc2:	mov    rbx,QWORD PTR [rsp+0x38]
   140015bc7:	add    rsp,0x20
   140015bcb:	pop    rsi
   140015bcc:	ret    
   140015bcd:	int3   
   140015bce:	int3   
   140015bcf:	int3   
   140015bd0:	mov    DWORD PTR [rsp+0x20],r9d
   140015bd5:	mov    QWORD PTR [rsp+0x18],r8
   140015bda:	mov    QWORD PTR [rsp+0x10],rdx
   140015bdf:	mov    QWORD PTR [rsp+0x8],rcx
   140015be4:	push   rbx
   140015be5:	push   rbp
   140015be6:	push   rsi
   140015be7:	push   rdi
   140015be8:	push   r12
   140015bea:	push   r13
   140015bec:	push   r14
   140015bee:	push   r15
   140015bf0:	sub    rsp,0x228
   140015bf7:	mov    r12,rdx
   140015bfa:	xor    r15d,r15d
   140015bfd:	mov    rsi,r8
   140015c00:	mov    DWORD PTR [rsp+0x118],r15d
   140015c08:	mov    r11,QWORD PTR [r8]
   140015c0b:	movsxd r10,DWORD PTR [r11+0x4]
   140015c0f:	mov    rax,r10
   140015c12:	shl    rax,0x5
   140015c16:	add    rax,QWORD PTR [r11+0x10]
   140015c1a:	mov    rdx,QWORD PTR [rax+r11*1-0x20]
   140015c1f:	mov    rax,r10
   140015c22:	shl    rax,0x5
   140015c26:	add    rax,QWORD PTR [r11+0x10]
   140015c2a:	mov    eax,DWORD PTR [rax+r11*1-0x8]
   140015c2f:	dec    eax
   140015c31:	cdqe   
   140015c33:	lea    rcx,[rax+rax*2]
   140015c37:	mov    rax,QWORD PTR [rdx+0x10]
   140015c3b:	lea    rbx,[rax+rcx*8]
   140015c3f:	lea    rcx,[rsp+0x90]
   140015c47:	add    rbx,rdx
   140015c4a:	mov    eax,DWORD PTR [rbx]
   140015c4c:	lea    rdx,[rbx+0x8]
   140015c50:	mov    DWORD PTR [rsp+0x88],eax
   140015c57:	mov    eax,DWORD PTR [rbx+0x4]
   140015c5a:	mov    DWORD PTR [rsp+0x8c],eax
   140015c61:	call   QWORD PTR [rip+0x9971]        # 0x14001f5d8
   140015c67:	cmp    DWORD PTR [rsp+0x8c],0x1
   140015c6f:	mov    edi,DWORD PTR [rbx+0x10]
   140015c72:	mov    DWORD PTR [rsp+0x98],edi
   140015c79:	mov    ebp,DWORD PTR [rbx+0x14]
   140015c7c:	mov    DWORD PTR [rsp+0x9c],ebp
   140015c83:	jne    0x140015e0f
   140015c89:	lea    rdx,[rsp+0x90]
   140015c91:	lea    rcx,[rsp+0xa8]
   140015c99:	call   QWORD PTR [rip+0x9939]        # 0x14001f5d8
   140015c9f:	mov    rax,QWORD PTR [r12+0x30]
   140015ca4:	lea    r13,[r12+0x30]
   140015ca9:	xor    r14d,r14d
   140015cac:	mov    DWORD PTR [rsp+0xb0],edi
   140015cb3:	mov    DWORD PTR [rsp+0xb4],ebp
   140015cba:	mov    r15d,0x1
   140015cc0:	cmp    DWORD PTR [rax+0x20],r14d
   140015cc4:	je     0x140015d19
   140015cc6:	mov    ebx,DWORD PTR [rax+0x24]
   140015cc9:	lea    rcx,[rsp+0xa8]
   140015cd1:	call   QWORD PTR [rip+0x9921]        # 0x14001f5f8
   140015cd7:	mov    DWORD PTR [rsp+0x70],ebp
   140015cdb:	lea    rcx,[rsp+0x200]
   140015ce3:	mov    r11,rax
   140015ce6:	movsxd rax,DWORD PTR [rsp+0xb0]
   140015cee:	xor    edx,edx
   140015cf0:	add    r11,rax
   140015cf3:	mov    QWORD PTR [rsp+0x78],r11
   140015cf8:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140015cfd:	movdqa XMMWORD PTR [rsp+0x200],xmm0
   140015d06:	call   QWORD PTR [rip+0x95f4]        # 0x14001f300
   140015d0c:	mov    ebp,DWORD PTR [rsp+0xb4]
   140015d13:	mov    r14d,eax
   140015d16:	xor    r14d,ebx
   140015d19:	mov    r8,QWORD PTR [r13+0x0]
   140015d1d:	mov    ecx,DWORD PTR [r8+0x20]
   140015d21:	test   ecx,ecx
   140015d23:	je     0x140015e0a
   140015d29:	xor    edx,edx
   140015d2b:	mov    eax,r14d
   140015d2e:	div    ecx
   140015d30:	mov    rax,QWORD PTR [r8+0x8]
   140015d34:	lea    r12,[rax+rdx*8]
   140015d38:	mov    rax,QWORD PTR [rax+rdx*8]
   140015d3c:	cmp    rax,r8
   140015d3f:	je     0x140015da1
   140015d41:	cmp    r14d,DWORD PTR [rax+0x8]
   140015d45:	jne    0x140015df6
   140015d4b:	cmp    ebp,DWORD PTR [rax+0x1c]
   140015d4e:	lea    rsi,[rax+0x10]
   140015d52:	jne    0x140015df6
   140015d58:	xor    edi,edi
   140015d5a:	test   ebp,ebp
   140015d5c:	jle    0x140015d99
   140015d5e:	xchg   ax,ax
   140015d60:	mov    eax,DWORD PTR [rsi+0x8]
   140015d63:	mov    rcx,rsi
   140015d66:	lea    edx,[rdi+rax*1]
   140015d69:	call   QWORD PTR [rip+0x9819]        # 0x14001f588
   140015d6f:	mov    ecx,DWORD PTR [rsp+0xb0]
   140015d76:	lea    edx,[rdi+rcx*1]
   140015d79:	lea    rcx,[rsp+0xa8]
   140015d81:	movzx  ebx,al
   140015d84:	call   QWORD PTR [rip+0x97fe]        # 0x14001f588
   140015d8a:	cmp    al,bl
   140015d8c:	jne    0x140015def
   140015d8e:	inc    edi
   140015d90:	cmp    edi,DWORD PTR [rsp+0xb4]
   140015d97:	jl     0x140015d60
   140015d99:	mov    rsi,QWORD PTR [rsp+0x280]
   140015da1:	mov    rax,QWORD PTR [r13+0x0]
   140015da5:	cmp    QWORD PTR [r12],rax
   140015da9:	je     0x140015e0f
   140015dab:	mov    r9d,DWORD PTR [rsp+0x9c]
   140015db3:	mov    r8d,DWORD PTR [rsp+0x98]
   140015dbb:	lea    rdx,[rsp+0x180]
   140015dc3:	lea    rcx,[rsp+0x90]
   140015dcb:	mov    r15d,0x3
   140015dd1:	call   QWORD PTR [rip+0x97f9]        # 0x14001f5d0
   140015dd7:	lea    rdx,[rsp+0x180]
   140015ddf:	mov    rcx,rsi
   140015de2:	call   0x1400126e0
   140015de7:	test   al,al
   140015de9:	jne    0x140015e0f
   140015deb:	xor    bl,bl
   140015ded:	jmp    0x140015e11
   140015def:	mov    ebp,DWORD PTR [rsp+0xb4]
   140015df6:	mov    r12,QWORD PTR [r12]
   140015dfa:	mov    rax,QWORD PTR [r12]
   140015dfe:	cmp    rax,QWORD PTR [r13+0x0]
   140015e02:	jne    0x140015d41
   140015e08:	jmp    0x140015d99
   140015e0a:	mov    r12,r13
   140015e0d:	jmp    0x140015da1
   140015e0f:	mov    bl,0x1
   140015e11:	test   r15b,0x2
   140015e15:	je     0x140015e29
   140015e17:	lea    rcx,[rsp+0x180]
   140015e1f:	and    r15d,0xfffffffd
   140015e23:	call   QWORD PTR [rip+0x978f]        # 0x14001f5b8
   140015e29:	test   r15b,0x1
   140015e2d:	je     0x140015e3d
   140015e2f:	lea    rcx,[rsp+0xa8]
   140015e37:	call   QWORD PTR [rip+0x977b]        # 0x14001f5b8
   140015e3d:	test   bl,bl
   140015e3f:	je     0x140015e59
   140015e41:	mov    rbp,QWORD PTR [rsp+0x270]
   140015e49:	mov    rax,QWORD PTR [rip+0x96e0]        # 0x14001f530
   140015e50:	mov    QWORD PTR [rbp+0x0],rax
   140015e54:	jmp    0x140016f9d
   140015e59:	mov    ebp,DWORD PTR [rsp+0x9c]
   140015e60:	mov    ebx,DWORD PTR [rsp+0x98]
   140015e67:	lea    rdx,[rsp+0x90]
   140015e6f:	lea    rcx,[rsp+0x70]
   140015e74:	call   QWORD PTR [rip+0x975e]        # 0x14001f5d8
   140015e7a:	mov    r15,QWORD PTR [rsp+0x278]
   140015e82:	mov    DWORD PTR [rsp+0x78],ebx
   140015e86:	mov    rax,QWORD PTR [r15+0x30]
   140015e8a:	mov    DWORD PTR [rsp+0x7c],ebp
   140015e8e:	cmp    DWORD PTR [rax+0x14],0x0
   140015e92:	je     0x140015fc7
   140015e98:	xor    r14d,r14d
   140015e9b:	cmp    DWORD PTR [rax+0x20],r14d
   140015e9f:	je     0x140015ef1
   140015ea1:	mov    ebx,DWORD PTR [rax+0x24]
   140015ea4:	lea    rcx,[rsp+0x70]
   140015ea9:	call   QWORD PTR [rip+0x9749]        # 0x14001f5f8
   140015eaf:	movsxd rcx,DWORD PTR [rsp+0x78]
   140015eb4:	mov    DWORD PTR [rsp+0x1c0],ebp
   140015ebb:	add    rax,rcx
   140015ebe:	lea    rcx,[rsp+0x210]
   140015ec6:	xor    edx,edx
   140015ec8:	mov    QWORD PTR [rsp+0x1c8],rax
   140015ed0:	movaps xmm0,XMMWORD PTR [rsp+0x1c0]
   140015ed8:	movdqa XMMWORD PTR [rsp+0x210],xmm0
   140015ee1:	call   QWORD PTR [rip+0x9419]        # 0x14001f300
   140015ee7:	mov    ebp,DWORD PTR [rsp+0x7c]
   140015eeb:	mov    r14d,eax
   140015eee:	xor    r14d,ebx
   140015ef1:	mov    r8,QWORD PTR [r15+0x30]
   140015ef5:	mov    ecx,DWORD PTR [r8+0x20]
   140015ef9:	test   ecx,ecx
   140015efb:	je     0x140015f86
   140015f01:	xor    edx,edx
   140015f03:	mov    eax,r14d
   140015f06:	div    ecx
   140015f08:	mov    rax,QWORD PTR [r8+0x8]
   140015f0c:	lea    r12,[rax+rdx*8]
   140015f10:	mov    rax,QWORD PTR [rax+rdx*8]
   140015f14:	cmp    rax,r8
   140015f17:	je     0x140015f8a
   140015f19:	nop    DWORD PTR [rax+0x0]
   140015f20:	cmp    r14d,DWORD PTR [rax+0x8]
   140015f24:	jne    0x140015f76
   140015f26:	cmp    ebp,DWORD PTR [rax+0x1c]
   140015f29:	lea    rsi,[rax+0x10]
   140015f2d:	jne    0x140015f76
   140015f2f:	xor    edi,edi
   140015f31:	test   ebp,ebp
   140015f33:	jle    0x140015f8a
   140015f35:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140015f40:	mov    eax,DWORD PTR [rsi+0x8]
   140015f43:	mov    rcx,rsi
   140015f46:	lea    edx,[rdi+rax*1]
   140015f49:	call   QWORD PTR [rip+0x9639]        # 0x14001f588
   140015f4f:	mov    ecx,DWORD PTR [rsp+0x78]
   140015f53:	lea    edx,[rdi+rcx*1]
   140015f56:	lea    rcx,[rsp+0x70]
   140015f5b:	movzx  ebx,al
   140015f5e:	call   QWORD PTR [rip+0x9624]        # 0x14001f588
   140015f64:	cmp    al,bl
   140015f66:	jne    0x140015f72
   140015f68:	inc    edi
   140015f6a:	cmp    edi,DWORD PTR [rsp+0x7c]
   140015f6e:	jl     0x140015f40
   140015f70:	jmp    0x140015f8a
   140015f72:	mov    ebp,DWORD PTR [rsp+0x7c]
   140015f76:	mov    r12,QWORD PTR [r12]
   140015f7a:	mov    rax,QWORD PTR [r12]
   140015f7e:	cmp    rax,QWORD PTR [r15+0x30]
   140015f82:	jne    0x140015f20
   140015f84:	jmp    0x140015f8a
   140015f86:	lea    r12,[r15+0x30]
   140015f8a:	mov    rbx,QWORD PTR [r12]
   140015f8e:	cmp    rbx,QWORD PTR [r15+0x30]
   140015f92:	je     0x140015fc7
   140015f94:	movzx  eax,BYTE PTR [rbx+0x20]
   140015f98:	lea    rdx,[rbx+0x28]
   140015f9c:	lea    rcx,[rsp+0x50]
   140015fa1:	mov    BYTE PTR [rsp+0x48],al
   140015fa5:	movzx  eax,BYTE PTR [rbx+0x21]
   140015fa9:	mov    BYTE PTR [rsp+0x49],al
   140015fad:	call   0x140011970
   140015fb2:	lea    rdx,[rbx+0x30]
   140015fb6:	lea    rcx,[rsp+0x58]
   140015fbb:	call   0x140011970
   140015fc0:	movzx  ebx,BYTE PTR [rsp+0x48]
   140015fc5:	jmp    0x140015fe2
   140015fc7:	mov    rax,QWORD PTR [rip+0x9562]        # 0x14001f530
   140015fce:	xor    bl,bl
   140015fd0:	mov    QWORD PTR [rsp+0x50],rax
   140015fd5:	mov    QWORD PTR [rsp+0x58],rax
   140015fda:	mov    BYTE PTR [rsp+0x48],bl
   140015fde:	mov    BYTE PTR [rsp+0x49],bl
   140015fe2:	lea    rcx,[rsp+0x70]
   140015fe7:	call   QWORD PTR [rip+0x95cb]        # 0x14001f5b8
   140015fed:	mov    r9d,DWORD PTR [rsp+0x9c]
   140015ff5:	mov    r8d,DWORD PTR [rsp+0x98]
   140015ffd:	lea    rdx,[rsp+0x168]
   140016005:	lea    rcx,[rsp+0x90]
   14001600d:	call   QWORD PTR [rip+0x95bd]        # 0x14001f5d0
   140016013:	mov    rdi,QWORD PTR [rsp+0x290]
   14001601b:	lea    rdx,[rsp+0x168]
   140016023:	mov    rcx,rdi
   140016026:	call   QWORD PTR [rip+0x952c]        # 0x14001f558
   14001602c:	lea    rcx,[rsp+0x168]
   140016034:	call   QWORD PTR [rip+0x957e]        # 0x14001f5b8
   14001603a:	mov    r11,QWORD PTR [rip+0x94ef]        # 0x14001f530
   140016041:	mov    QWORD PTR [rsp+0x40],r11
   140016046:	test   bl,bl
   140016048:	jne    0x14001605e
   14001604a:	lea    rdx,[rsp+0x58]
   14001604f:	lea    rcx,[rsp+0x40]
   140016054:	call   0x140011a40
   140016059:	jmp    0x140016ece
   14001605e:	mov    r12,QWORD PTR [rsp+0x280]
   140016066:	mov    edx,0x9a
   14001606b:	xor    bl,bl
   14001606d:	mov    rcx,r12
   140016070:	call   0x140015b20
   140016075:	test   al,al
   140016077:	je     0x140016091
   140016079:	mov    bl,0x1
   14001607b:	nop    DWORD PTR [rax+rax*1+0x0]
   140016080:	mov    edx,0x9a
   140016085:	mov    rcx,r12
   140016088:	call   0x140015b20
   14001608d:	test   al,al
   14001608f:	jne    0x140016080
   140016091:	mov    edx,0x9
   140016096:	mov    rcx,r12
   140016099:	call   0x140015b20
   14001609e:	test   al,al
   1400160a0:	jne    0x14001629d
   1400160a6:	lea    rcx,[rsp+0x1c0]
   1400160ae:	call   QWORD PTR [rip+0x950c]        # 0x14001f5c0
   1400160b4:	mov    rcx,rdi
   1400160b7:	mov    rdx,rax
   1400160ba:	call   QWORD PTR [rip+0x9498]        # 0x14001f558
   1400160c0:	lea    rcx,[rsp+0x1c0]
   1400160c8:	call   QWORD PTR [rip+0x94ea]        # 0x14001f5b8
   1400160ce:	mov    r11,QWORD PTR [rip+0x945b]        # 0x14001f530
   1400160d5:	mov    ebp,DWORD PTR [rsp+0x288]
   1400160dc:	or     r13d,0xffffffff
   1400160e0:	mov    QWORD PTR [rsp+0x60],r11
   1400160e5:	test   bl,bl
   1400160e7:	je     0x14001613c
   1400160e9:	lea    rcx,[rsp+0x1d8]
   1400160f1:	mov    DWORD PTR [rsp+0x1d0],ebp
   1400160f8:	mov    DWORD PTR [rsp+0x1d4],0x9a
   140016103:	call   QWORD PTR [rip+0x94b7]        # 0x14001f5c0
   140016109:	lea    rdx,[rsp+0x1d0]
   140016111:	lea    rcx,[rsp+0x60]
   140016116:	mov    DWORD PTR [rsp+0x1e0],0x0
   140016121:	mov    DWORD PTR [rsp+0x1e4],r13d
   140016129:	call   0x140012170
   14001612e:	lea    rcx,[rsp+0x1d8]
   140016136:	call   QWORD PTR [rip+0x947c]        # 0x14001f5b8
   14001613c:	lea    rdx,[rsp+0x88]
   140016144:	lea    rcx,[rsp+0x60]
   140016149:	call   0x140012170
   14001614e:	mov    rbx,QWORD PTR [rsp+0x60]
   140016153:	mov    eax,DWORD PTR [rbx]
   140016155:	cmp    eax,0x1
   140016158:	je     0x1400161aa
   14001615a:	test   eax,eax
   14001615c:	je     0x1400161aa
   14001615e:	mov    r8d,DWORD PTR [rbx+0x8]
   140016162:	btr    r8d,0x1f
   140016167:	test   r8d,r8d
   14001616a:	jne    0x14001618a
   14001616c:	lea    r9d,[r8+0x2]
   140016170:	xor    r8d,r8d
   140016173:	lea    edx,[r9+0x6]
   140016177:	lea    ecx,[rdx+0x10]
   14001617a:	call   QWORD PTR [rip+0x9398]        # 0x14001f518
   140016180:	mov    rbx,rax
   140016183:	mov    QWORD PTR [rsp+0x60],rax
   140016188:	jmp    0x1400161aa
   14001618a:	mov    edx,DWORD PTR [rbx+0x4]
   14001618d:	lea    rcx,[rsp+0x60]
   140016192:	xor    r9d,r9d
   140016195:	mov    DWORD PTR [rsp+0x118],0x0
   1400161a0:	call   0x140011cb0
   1400161a5:	mov    rbx,QWORD PTR [rsp+0x60]
   1400161aa:	movsxd rax,DWORD PTR [rbx+0x4]
   1400161ae:	lea    rdi,[rbx+0x4]
   1400161b2:	lea    rsi,[rbx+0x10]
   1400161b6:	lea    rcx,[rax+rax*2]
   1400161ba:	mov    rax,QWORD PTR [rsi]
   1400161bd:	lea    rdx,[rsp+0x60]
   1400161c2:	lea    rcx,[rax+rcx*8]
   1400161c6:	mov    DWORD PTR [rcx+rbx*1-0x18],ebp
   1400161ca:	mov    rbp,QWORD PTR [rsp+0x270]
   1400161d2:	mov    rcx,rbp
   1400161d5:	call   0x140011970
   1400161da:	mov    r11d,DWORD PTR [rbx]
   1400161dd:	test   r11d,r11d
   1400161e0:	je     0x1400161f8
   1400161e2:	cmp    r11d,0xffffffff
   1400161e6:	je     0x14001623a
   1400161e8:	lock add DWORD PTR [rbx],0xffffffff
   1400161ec:	setne  al
   1400161ef:	test   al,al
   1400161f1:	jne    0x14001623a
   1400161f3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400161f8:	mov    rdx,QWORD PTR [rsi]
   1400161fb:	movsxd rax,DWORD PTR [rdi]
   1400161fe:	lea    rcx,[rax+rax*2]
   140016202:	lea    rdi,[rdx+rbx*1]
   140016206:	lea    rsi,[rdx+rcx*8]
   14001620a:	add    rsi,rbx
   14001620d:	cmp    rdi,rsi
   140016210:	je     0x140016228
   140016212:	mov    rcx,rdi
   140016215:	add    rdi,0x18
   140016219:	add    rcx,0x8
   14001621d:	call   QWORD PTR [rip+0x9395]        # 0x14001f5b8
   140016223:	cmp    rdi,rsi
   140016226:	jne    0x140016212
   140016228:	mov    edx,0x18
   14001622d:	mov    rcx,rbx
   140016230:	lea    r8d,[rdx-0x10]
   140016234:	call   QWORD PTR [rip+0x92d6]        # 0x14001f510
   14001623a:	mov    rdi,QWORD PTR [rsp+0x40]
   14001623f:	mov    eax,DWORD PTR [rdi]
   140016241:	test   eax,eax
   140016243:	je     0x140016262
   140016245:	cmp    eax,0xffffffff
   140016248:	je     0x140016f49
   14001624e:	lock add DWORD PTR [rdi],0xffffffff
   140016252:	setne  al
   140016255:	test   al,al
   140016257:	jne    0x140016f49
   14001625d:	mov    rdi,QWORD PTR [rsp+0x40]
   140016262:	mov    rdx,QWORD PTR [rdi+0x10]
   140016266:	movsxd rax,DWORD PTR [rdi+0x4]
   14001626a:	lea    rcx,[rax+rax*2]
   14001626e:	lea    rbx,[rdx+rdi*1]
   140016272:	lea    rsi,[rdx+rcx*8]
   140016276:	add    rsi,rdi
   140016279:	cmp    rbx,rsi
   14001627c:	je     0x140016f36
   140016282:	mov    rcx,rbx
   140016285:	add    rbx,0x18
   140016289:	add    rcx,0x8
   14001628d:	call   QWORD PTR [rip+0x9325]        # 0x14001f5b8
   140016293:	cmp    rbx,rsi
   140016296:	jne    0x140016282
   140016298:	jmp    0x140016f36
   14001629d:	lea    rax,[rsp+0xe0]
   1400162a5:	mov    rcx,r12
   1400162a8:	mov    DWORD PTR [rsp+0xd4],0x0
   1400162b3:	mov    QWORD PTR [rsp+0xd8],rax
   1400162bb:	mov    DWORD PTR [rsp+0xd0],0x5
   1400162c6:	call   0x1400151a0
   1400162cb:	test   al,al
   1400162cd:	je     0x14001650d
   1400162d3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400162e0:	mov    rbx,QWORD PTR [rip+0x9249]        # 0x14001f530
   1400162e7:	mov    QWORD PTR [rsp+0xa0],rbx
   1400162ef:	nop
   1400162f0:	mov    edx,0x9a
   1400162f5:	mov    rcx,r12
   1400162f8:	call   0x140015b20
   1400162fd:	test   al,al
   1400162ff:	jne    0x1400162f0
   140016301:	xor    edi,edi
   140016303:	cmp    BYTE PTR [rsp+0x49],dil
   140016308:	je     0x140016322
   14001630a:	mov    rax,QWORD PTR [rsp+0x50]
   14001630f:	mov    ecx,DWORD PTR [rax+0x4]
   140016312:	dec    ecx
   140016314:	cmp    DWORD PTR [rsp+0xd4],ecx
   14001631b:	jne    0x140016322
   14001631d:	mov    sil,0x1
   140016320:	jmp    0x140016325
   140016322:	xor    sil,sil
   140016325:	mov    rcx,r12
   140016328:	call   0x1400151a0
   14001632d:	test   al,al
   14001632f:	je     0x1400163bb
   140016335:	mov    rcx,r12
   140016338:	call   0x140015640
   14001633d:	cmp    eax,0x9
   140016340:	jne    0x140016346
   140016342:	inc    edi
   140016344:	jmp    0x140016360
   140016346:	cmp    eax,0xa
   140016349:	jne    0x140016352
   14001634b:	sub    edi,0x1
   14001634e:	js     0x1400163b3
   140016350:	jmp    0x140016360
   140016352:	cmp    eax,0x5a
   140016355:	jne    0x140016360
   140016357:	test   edi,edi
   140016359:	jne    0x140016360
   14001635b:	test   sil,sil
   14001635e:	je     0x1400163b3
   140016360:	mov    rdx,QWORD PTR [r12]
   140016364:	movsxd rcx,DWORD PTR [rdx+0x4]
   140016368:	mov    rax,rcx
   14001636b:	shl    rax,0x5
   14001636f:	add    rax,QWORD PTR [rdx+0x10]
   140016373:	mov    r8,QWORD PTR [rax+rdx*1-0x20]
   140016378:	mov    rax,rcx
   14001637b:	shl    rax,0x5
   14001637f:	add    rax,QWORD PTR [rdx+0x10]
   140016383:	mov    eax,DWORD PTR [rax+rdx*1-0x8]
   140016387:	dec    eax
   140016389:	cdqe   
   14001638b:	lea    rcx,[rax+rax*2]
   14001638f:	mov    rax,QWORD PTR [r8+0x10]
   140016393:	lea    rdx,[rax+rcx*8]
   140016397:	lea    rcx,[rsp+0xa0]
   14001639f:	add    rdx,r8
   1400163a2:	call   0x140012170
   1400163a7:	mov    rcx,r12
   1400163aa:	call   0x1400151a0
   1400163af:	test   al,al
   1400163b1:	jne    0x140016335
   1400163b3:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400163bb:	mov    edx,DWORD PTR [rsp+0xd4]
   1400163c2:	cmp    edx,DWORD PTR [rsp+0xd0]
   1400163c9:	jne    0x1400163e3
   1400163cb:	lea    r8d,[rdx+rdx*1]
   1400163cf:	lea    rcx,[rsp+0xd0]
   1400163d7:	call   0x140011b30
   1400163dc:	mov    edx,DWORD PTR [rsp+0xd4]
   1400163e3:	mov    rax,QWORD PTR [rsp+0xd8]
   1400163eb:	movsxd rcx,edx
   1400163ee:	inc    edx
   1400163f0:	lea    rcx,[rax+rcx*8]
   1400163f4:	mov    DWORD PTR [rsp+0xd4],edx
   1400163fb:	test   rcx,rcx
   1400163fe:	je     0x140016414
   140016400:	lea    rdx,[rsp+0xa0]
   140016408:	call   0x140011970
   14001640d:	mov    edx,DWORD PTR [rsp+0xd4]
   140016414:	test   edi,edi
   140016416:	js     0x1400164ab
   14001641c:	mov    rcx,r12
   14001641f:	call   0x1400151a0
   140016424:	test   al,al
   140016426:	jne    0x140016437
   140016428:	lea    rdx,[rip+0x10201]        # 0x140026630
   14001642f:	mov    rcx,r15
   140016432:	call   0x140019c50
   140016437:	mov    eax,DWORD PTR [rbx]
   140016439:	test   eax,eax
   14001643b:	je     0x140016455
   14001643d:	cmp    eax,0xffffffff
   140016440:	je     0x140016499
   140016442:	lock add DWORD PTR [rbx],0xffffffff
   140016446:	setne  al
   140016449:	test   al,al
   14001644b:	jne    0x140016499
   14001644d:	mov    rbx,QWORD PTR [rsp+0xa0]
   140016455:	mov    rdx,QWORD PTR [rbx+0x10]
   140016459:	movsxd rax,DWORD PTR [rbx+0x4]
   14001645d:	lea    rcx,[rax+rax*2]
   140016461:	lea    rdi,[rdx+rbx*1]
   140016465:	lea    rsi,[rdx+rcx*8]
   140016469:	add    rsi,rbx
   14001646c:	cmp    rdi,rsi
   14001646f:	je     0x140016487
   140016471:	mov    rcx,rdi
   140016474:	add    rdi,0x18
   140016478:	add    rcx,0x8
   14001647c:	call   QWORD PTR [rip+0x9136]        # 0x14001f5b8
   140016482:	cmp    rdi,rsi
   140016485:	jne    0x140016471
   140016487:	mov    edx,0x18
   14001648c:	mov    rcx,rbx
   14001648f:	lea    r8d,[rdx-0x10]
   140016493:	call   QWORD PTR [rip+0x9077]        # 0x14001f510
   140016499:	mov    rcx,r12
   14001649c:	call   0x1400151a0
   1400164a1:	test   al,al
   1400164a3:	jne    0x1400162e0
   1400164a9:	jmp    0x14001650d
   1400164ab:	mov    eax,DWORD PTR [rbx]
   1400164ad:	test   eax,eax
   1400164af:	je     0x1400164c9
   1400164b1:	cmp    eax,0xffffffff
   1400164b4:	je     0x140016514
   1400164b6:	lock add DWORD PTR [rbx],0xffffffff
   1400164ba:	setne  al
   1400164bd:	test   al,al
   1400164bf:	jne    0x14001650d
   1400164c1:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400164c9:	mov    rdx,QWORD PTR [rbx+0x10]
   1400164cd:	movsxd rax,DWORD PTR [rbx+0x4]
   1400164d1:	lea    rcx,[rax+rax*2]
   1400164d5:	lea    rdi,[rdx+rbx*1]
   1400164d9:	lea    rsi,[rdx+rcx*8]
   1400164dd:	add    rsi,rbx
   1400164e0:	cmp    rdi,rsi
   1400164e3:	je     0x1400164fb
   1400164e5:	mov    rcx,rdi
   1400164e8:	add    rdi,0x18
   1400164ec:	add    rcx,0x8
   1400164f0:	call   QWORD PTR [rip+0x90c2]        # 0x14001f5b8
   1400164f6:	cmp    rdi,rsi
   1400164f9:	jne    0x1400164e5
   1400164fb:	mov    edx,0x18
   140016500:	mov    rcx,rbx
   140016503:	lea    r8d,[rdx-0x10]
   140016507:	call   QWORD PTR [rip+0x9003]        # 0x14001f510
   14001650d:	mov    edx,DWORD PTR [rsp+0xd4]
   140016514:	cmp    BYTE PTR [rsp+0x49],0x0
   140016519:	je     0x1400165ed
   14001651f:	mov    rax,QWORD PTR [rsp+0x50]
   140016524:	mov    ecx,DWORD PTR [rax+0x4]
   140016527:	dec    ecx
   140016529:	cmp    edx,ecx
   14001652b:	jne    0x1400165ed
   140016531:	mov    rbx,QWORD PTR [rip+0x8ff8]        # 0x14001f530
   140016538:	mov    QWORD PTR [rsp+0x160],rbx
   140016540:	cmp    edx,DWORD PTR [rsp+0xd0]
   140016547:	jne    0x140016561
   140016549:	lea    r8d,[rdx+rdx*1]
   14001654d:	lea    rcx,[rsp+0xd0]
   140016555:	call   0x140011b30
   14001655a:	mov    edx,DWORD PTR [rsp+0xd4]
   140016561:	mov    rax,QWORD PTR [rsp+0xd8]
   140016569:	movsxd rcx,edx
   14001656c:	inc    edx
   14001656e:	lea    rcx,[rax+rcx*8]
   140016572:	mov    DWORD PTR [rsp+0xd4],edx
   140016579:	test   rcx,rcx
   14001657c:	je     0x14001658b
   14001657e:	lea    rdx,[rsp+0x160]
   140016586:	call   0x140011970
   14001658b:	mov    eax,DWORD PTR [rbx]
   14001658d:	test   eax,eax
   14001658f:	je     0x1400165a9
   140016591:	cmp    eax,0xffffffff
   140016594:	je     0x1400165ed
   140016596:	lock add DWORD PTR [rbx],0xffffffff
   14001659a:	setne  al
   14001659d:	test   al,al
   14001659f:	jne    0x1400165ed
   1400165a1:	mov    rbx,QWORD PTR [rsp+0x160]
   1400165a9:	mov    rdx,QWORD PTR [rbx+0x10]
   1400165ad:	movsxd rax,DWORD PTR [rbx+0x4]
   1400165b1:	lea    rcx,[rax+rax*2]
   1400165b5:	lea    rdi,[rdx+rbx*1]
   1400165b9:	lea    rsi,[rdx+rcx*8]
   1400165bd:	add    rsi,rbx
   1400165c0:	cmp    rdi,rsi
   1400165c3:	je     0x1400165db
   1400165c5:	mov    rcx,rdi
   1400165c8:	add    rdi,0x18
   1400165cc:	add    rcx,0x8
   1400165d0:	call   QWORD PTR [rip+0x8fe2]        # 0x14001f5b8
   1400165d6:	cmp    rdi,rsi
   1400165d9:	jne    0x1400165c5
   1400165db:	mov    edx,0x18
   1400165e0:	mov    rcx,rbx
   1400165e3:	lea    r8d,[rdx-0x10]
   1400165e7:	call   QWORD PTR [rip+0x8f23]        # 0x14001f510
   1400165ed:	mov    rdi,QWORD PTR [rsp+0x58]
   1400165f2:	xor    ebx,ebx
   1400165f4:	xor    r14d,r14d
   1400165f7:	cmp    DWORD PTR [rdi+0x4],ebx
   1400165fa:	lea    rax,[rdi+0x4]
   1400165fe:	mov    QWORD PTR [rsp+0x148],rax
   140016606:	jle    0x140016ec1
   14001660c:	lea    rax,[rdi+0x10]
   140016610:	xor    r15d,r15d
   140016613:	mov    QWORD PTR [rsp+0x140],rax
   14001661b:	nop    DWORD PTR [rax+rax*1+0x0]
   140016620:	mov    rdi,QWORD PTR [rsp+0x58]
   140016625:	lea    rbp,[rdi+r15*1]
   140016629:	add    rbp,QWORD PTR [rax]
   14001662c:	mov    eax,DWORD PTR [rbp+0x4]
   14001662f:	cmp    eax,0x93
   140016634:	je     0x140016e7a
   14001663a:	cmp    eax,0xa6
   14001663f:	je     0x140016e7a
   140016645:	lea    rcx,[rsp+0x50]
   14001664a:	xor    r8d,r8d
   14001664d:	mov    rdx,rbp
   140016650:	call   0x1400113e0
   140016655:	movsxd rsi,eax
   140016658:	test   ebx,ebx
   14001665a:	jne    0x1400167e7
   140016660:	test   eax,eax
   140016662:	js     0x1400167d3
   140016668:	cmp    esi,DWORD PTR [rsp+0xd4]
   14001666f:	jge    0x1400167d3
   140016675:	mov    rax,QWORD PTR [rsp+0x148]
   14001667d:	mov    ecx,DWORD PTR [rax]
   14001667f:	dec    ecx
   140016681:	cmp    r14d,ecx
   140016684:	je     0x1400166ba
   140016686:	mov    rax,QWORD PTR [rsp+0x140]
   14001668e:	lea    rcx,[rdi+r15*1]
   140016692:	mov    rax,QWORD PTR [rax]
   140016695:	cmp    DWORD PTR [rcx+rax*1+0x1c],0xa6
   14001669d:	jne    0x1400166ba
   14001669f:	mov    rax,QWORD PTR [rsp+0xd8]
   1400166a7:	lea    rcx,[rsp+0x40]
   1400166ac:	lea    rdx,[rax+rsi*8]
   1400166b0:	call   0x1400123d0
   1400166b5:	jmp    0x140016e86
   1400166ba:	mov    rax,QWORD PTR [rsp+0xd8]
   1400166c2:	lea    rcx,[rsp+0x110]
   1400166ca:	lea    rdx,[rax+rsi*8]
   1400166ce:	call   0x140011970
   1400166d3:	lea    rdx,[rsp+0x170]
   1400166db:	mov    rcx,r12
   1400166de:	mov    DWORD PTR [rsp+0x280],0x1
   1400166e9:	call   0x1400148f0
   1400166ee:	mov    rdx,QWORD PTR [rsp+0x278]
   1400166f6:	mov    QWORD PTR [rsp+0x30],rax
   1400166fb:	mov    eax,DWORD PTR [rsp+0x288]
   140016702:	lea    r9,[rsp+0x280]
   14001670a:	lea    r8,[rsp+0x110]
   140016712:	lea    rcx,[rsp+0x40]
   140016717:	mov    BYTE PTR [rsp+0x28],0x0
   14001671c:	mov    DWORD PTR [rsp+0x20],eax
   140016720:	call   0x140017090
   140016725:	mov    rcx,QWORD PTR [rsp+0x170]
   14001672d:	mov    eax,DWORD PTR [rcx+0x10]
   140016730:	test   eax,eax
   140016732:	je     0x14001674d
   140016734:	cmp    eax,0xffffffff
   140016737:	je     0x14001675a
   140016739:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001673e:	setne  al
   140016741:	test   al,al
   140016743:	jne    0x14001675a
   140016745:	mov    rcx,QWORD PTR [rsp+0x170]
   14001674d:	lea    rdx,[rip+0xfffffffffffec1cc]        # 0x140002920
   140016754:	call   QWORD PTR [rip+0x8d5e]        # 0x14001f4b8
   14001675a:	mov    rdi,QWORD PTR [rsp+0x110]
   140016762:	mov    eax,DWORD PTR [rdi]
   140016764:	test   eax,eax
   140016766:	je     0x140016788
   140016768:	cmp    eax,0xffffffff
   14001676b:	je     0x140016e76
   140016771:	lock add DWORD PTR [rdi],0xffffffff
   140016775:	setne  al
   140016778:	test   al,al
   14001677a:	jne    0x140016e76
   140016780:	mov    rdi,QWORD PTR [rsp+0x110]
   140016788:	mov    rdx,QWORD PTR [rdi+0x10]
   14001678c:	movsxd rax,DWORD PTR [rdi+0x4]
   140016790:	lea    rcx,[rax+rax*2]
   140016794:	lea    rbx,[rdx+rdi*1]
   140016798:	lea    rsi,[rdx+rcx*8]
   14001679c:	add    rsi,rdi
   14001679f:	cmp    rbx,rsi
   1400167a2:	je     0x1400167ba
   1400167a4:	mov    rcx,rbx
   1400167a7:	add    rbx,0x18
   1400167ab:	add    rcx,0x8
   1400167af:	call   QWORD PTR [rip+0x8e03]        # 0x14001f5b8
   1400167b5:	cmp    rbx,rsi
   1400167b8:	jne    0x1400167a4
   1400167ba:	mov    edx,0x18
   1400167bf:	mov    rcx,rdi
   1400167c2:	lea    r8d,[rdx-0x10]
   1400167c6:	call   QWORD PTR [rip+0x8d44]        # 0x14001f510
   1400167cc:	xor    ebx,ebx
   1400167ce:	jmp    0x140016e86
   1400167d3:	lea    rcx,[rsp+0x40]
   1400167d8:	mov    rdx,rbp
   1400167db:	call   0x140012170
   1400167e0:	xor    ebx,ebx
   1400167e2:	jmp    0x140016e86
   1400167e7:	cmp    ebx,0x1
   1400167ea:	jne    0x140016970
   1400167f0:	test   eax,eax
   1400167f2:	jns    0x140016810
   1400167f4:	mov    rdi,QWORD PTR [rsp+0x278]
   1400167fc:	lea    rdx,[rip+0xfdfd]        # 0x140026600
   140016803:	mov    rcx,rdi
   140016806:	call   0x140019c50
   14001680b:	jmp    0x140016e8e
   140016810:	cmp    esi,DWORD PTR [rsp+0xd4]
   140016817:	jl     0x140016835
   140016819:	mov    rdi,QWORD PTR [rsp+0x278]
   140016821:	lea    rdx,[rip+0xfda0]        # 0x1400265c8
   140016828:	mov    rcx,rdi
   14001682b:	call   0x140019c50
   140016830:	jmp    0x140016e8e
   140016835:	mov    rbp,QWORD PTR [rsp+0xd8]
   14001683d:	lea    rcx,[rsp+0x80]
   140016845:	call   QWORD PTR [rip+0x8d75]        # 0x14001f5c0
   14001684b:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140016850:	xor    edi,edi
   140016852:	cmp    DWORD PTR [rcx+0x4],edi
   140016855:	jle    0x1400168b8
   140016857:	xor    ebx,ebx
   140016859:	nop    DWORD PTR [rax+0x0]
   140016860:	mov    rax,QWORD PTR [rcx+0x10]
   140016864:	lea    rdx,[rsp+0x150]
   14001686c:	add    rax,rcx
   14001686f:	mov    r9d,DWORD PTR [rax+rbx*1+0x14]
   140016874:	mov    r8d,DWORD PTR [rax+rbx*1+0x10]
   140016879:	lea    rcx,[rax+rbx*1+0x8]
   14001687e:	call   QWORD PTR [rip+0x8d4c]        # 0x14001f5d0
   140016884:	lea    rdx,[rsp+0x150]
   14001688c:	lea    rcx,[rsp+0x80]
   140016894:	call   QWORD PTR [rip+0x8d46]        # 0x14001f5e0
   14001689a:	lea    rcx,[rsp+0x150]
   1400168a2:	call   QWORD PTR [rip+0x8d10]        # 0x14001f5b8
   1400168a8:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   1400168ad:	inc    edi
   1400168af:	add    rbx,0x18
   1400168b3:	cmp    edi,DWORD PTR [rcx+0x4]
   1400168b6:	jl     0x140016860
   1400168b8:	lea    r8,[rip+0xfd01]        # 0x1400265c0
   1400168bf:	lea    rcx,[rsp+0x80]
   1400168c7:	mov    dl,0x22
   1400168c9:	call   QWORD PTR [rip+0x8a71]        # 0x14001f340
   1400168cf:	lea    rcx,[rsp+0x80]
   1400168d7:	mov    dl,0x22
   1400168d9:	call   QWORD PTR [rip+0x8a41]        # 0x14001f320
   1400168df:	lea    rcx,[rsp+0x80]
   1400168e7:	mov    dl,0x22
   1400168e9:	call   QWORD PTR [rip+0x8ca9]        # 0x14001f598
   1400168ef:	mov    eax,DWORD PTR [rsp+0x288]
   1400168f6:	lea    rdx,[rsp+0x80]
   1400168fe:	lea    rcx,[rsp+0x1a8]
   140016906:	mov    DWORD PTR [rsp+0x1a0],eax
   14001690d:	mov    DWORD PTR [rsp+0x1a4],0x4
   140016918:	call   QWORD PTR [rip+0x8cba]        # 0x14001f5d8
   14001691e:	mov    rax,QWORD PTR [rsp+0x1a8]
   140016926:	mov    DWORD PTR [rsp+0x1b0],0x0
   140016931:	mov    ecx,DWORD PTR [rax+0x4]
   140016934:	lea    rdx,[rsp+0x1a0]
   14001693c:	mov    DWORD PTR [rsp+0x1b4],ecx
   140016943:	lea    rcx,[rsp+0x40]
   140016948:	call   0x140012170
   14001694d:	lea    rcx,[rsp+0x1a8]
   140016955:	call   QWORD PTR [rip+0x8c5d]        # 0x14001f5b8
   14001695b:	lea    rcx,[rsp+0x80]
   140016963:	call   QWORD PTR [rip+0x8c4f]        # 0x14001f5b8
   140016969:	xor    ebx,ebx
   14001696b:	jmp    0x140016e86
   140016970:	cmp    ebx,0x2
   140016973:	jne    0x140016e76
   140016979:	cmp    DWORD PTR [rbp+0x4],0x9a
   140016980:	je     0x140016e86
   140016986:	mov    rax,QWORD PTR [rsp+0x40]
   14001698b:	mov    edx,DWORD PTR [rax+0x4]
   14001698e:	test   edx,edx
   140016990:	je     0x140016a68
   140016996:	mov    ecx,DWORD PTR [rax]
   140016998:	cmp    ecx,0x1
   14001699b:	je     0x1400169e7
   14001699d:	test   ecx,ecx
   14001699f:	je     0x1400169e7
   1400169a1:	mov    r8d,DWORD PTR [rax+0x8]
   1400169a5:	btr    r8d,0x1f
   1400169aa:	test   r8d,r8d
   1400169ad:	jne    0x1400169ca
   1400169af:	lea    r9d,[r8+0x2]
   1400169b3:	xor    r8d,r8d
   1400169b6:	lea    edx,[r9+0x6]
   1400169ba:	lea    ecx,[rdx+0x10]
   1400169bd:	call   QWORD PTR [rip+0x8b55]        # 0x14001f518
   1400169c3:	mov    QWORD PTR [rsp+0x40],rax
   1400169c8:	jmp    0x1400169e7
   1400169ca:	lea    rcx,[rsp+0x40]
   1400169cf:	xor    r9d,r9d
   1400169d2:	mov    DWORD PTR [rsp+0x1f4],0x0
   1400169dd:	call   0x140011cb0
   1400169e2:	mov    rax,QWORD PTR [rsp+0x40]
   1400169e7:	movsxd r8,DWORD PTR [rax+0x4]
   1400169eb:	mov    rcx,QWORD PTR [rax+0x10]
   1400169ef:	lea    rdx,[r8+r8*2]
   1400169f3:	lea    rdx,[rcx+rdx*8]
   1400169f7:	cmp    DWORD PTR [rdx+rax*1-0x14],0x9a
   1400169ff:	jne    0x140016a68
   140016a01:	mov    ecx,DWORD PTR [rax]
   140016a03:	cmp    ecx,0x1
   140016a06:	je     0x140016a33
   140016a08:	test   ecx,ecx
   140016a0a:	je     0x140016a33
   140016a0c:	lea    edx,[r8-0x1]
   140016a10:	mov    r8d,DWORD PTR [rax+0x8]
   140016a14:	lea    rcx,[rsp+0x40]
   140016a19:	btr    r8d,0x1f
   140016a1e:	xor    r9d,r9d
   140016a21:	mov    DWORD PTR [rsp+0x1ec],0x0
   140016a2c:	call   0x140011cb0
   140016a31:	jmp    0x140016a58
   140016a33:	dec    DWORD PTR [rax+0x4]
   140016a36:	mov    rax,QWORD PTR [rsp+0x40]
   140016a3b:	movsxd rcx,DWORD PTR [rax+0x4]
   140016a3f:	lea    rdx,[rcx+rcx*2]
   140016a43:	mov    rcx,QWORD PTR [rax+0x10]
   140016a47:	lea    rcx,[rcx+rdx*8]
   140016a4b:	add    rcx,rax
   140016a4e:	add    rcx,0x8
   140016a52:	call   QWORD PTR [rip+0x8b60]        # 0x14001f5b8
   140016a58:	mov    rax,QWORD PTR [rsp+0x40]
   140016a5d:	mov    edx,DWORD PTR [rax+0x4]
   140016a60:	test   edx,edx
   140016a62:	jne    0x140016996
   140016a68:	mov    eax,DWORD PTR [rbp+0x0]
   140016a6b:	lea    rdx,[rbp+0x8]
   140016a6f:	lea    rcx,[rsp+0xc0]
   140016a77:	mov    DWORD PTR [rsp+0xb8],eax
   140016a7e:	mov    eax,DWORD PTR [rbp+0x4]
   140016a81:	mov    DWORD PTR [rsp+0xbc],eax
   140016a88:	call   QWORD PTR [rip+0x8b4a]        # 0x14001f5d8
   140016a8e:	mov    r11d,DWORD PTR [rbp+0x10]
   140016a92:	mov    eax,DWORD PTR [rbp+0x14]
   140016a95:	mov    DWORD PTR [rsp+0xc8],r11d
   140016a9d:	mov    DWORD PTR [rsp+0xcc],eax
   140016aa4:	test   esi,esi
   140016aa6:	js     0x140016b14
   140016aa8:	cmp    esi,DWORD PTR [rsp+0xd4]
   140016aaf:	jge    0x140016b14
   140016ab1:	mov    rax,QWORD PTR [rsp+0xd8]
   140016ab9:	lea    rcx,[rsp+0xc0]
   140016ac1:	mov    rdi,QWORD PTR [rax+rsi*8]
   140016ac5:	cmp    DWORD PTR [rdi+0x4],0x0
   140016ac9:	jne    0x140016ad8
   140016acb:	xor    ebx,ebx
   140016acd:	call   QWORD PTR [rip+0x8ae5]        # 0x14001f5b8
   140016ad3:	jmp    0x140016e86
   140016ad8:	mov    rbx,QWORD PTR [rdi+0x10]
   140016adc:	mov    eax,DWORD PTR [rdi+rbx*1]
   140016adf:	lea    rdx,[rdi+rbx*1+0x8]
   140016ae4:	mov    DWORD PTR [rsp+0xb8],eax
   140016aeb:	mov    eax,DWORD PTR [rdi+rbx*1+0x4]
   140016aef:	mov    DWORD PTR [rsp+0xbc],eax
   140016af6:	call   QWORD PTR [rip+0x8a5c]        # 0x14001f558
   140016afc:	mov    r11d,DWORD PTR [rdi+rbx*1+0x10]
   140016b01:	mov    DWORD PTR [rsp+0xc8],r11d
   140016b09:	mov    eax,DWORD PTR [rdi+rbx*1+0x14]
   140016b0d:	mov    DWORD PTR [rsp+0xcc],eax
   140016b14:	mov    rbx,QWORD PTR [rsp+0x40]
   140016b19:	mov    edx,DWORD PTR [rbx+0x4]
   140016b1c:	test   edx,edx
   140016b1e:	je     0x140016e03
   140016b24:	mov    eax,DWORD PTR [rbx]
   140016b26:	cmp    eax,0x1
   140016b29:	je     0x140016b78
   140016b2b:	test   eax,eax
   140016b2d:	je     0x140016b78
   140016b2f:	mov    r8d,DWORD PTR [rbx+0x8]
   140016b33:	btr    r8d,0x1f
   140016b38:	test   r8d,r8d
   140016b3b:	jne    0x140016b5b
   140016b3d:	lea    r9d,[r8+0x2]
   140016b41:	xor    r8d,r8d
   140016b44:	lea    edx,[r9+0x6]
   140016b48:	lea    ecx,[rdx+0x10]
   140016b4b:	call   QWORD PTR [rip+0x89c7]        # 0x14001f518
   140016b51:	mov    rbx,rax
   140016b54:	mov    QWORD PTR [rsp+0x40],rax
   140016b59:	jmp    0x140016b78
   140016b5b:	lea    rcx,[rsp+0x40]
   140016b60:	xor    r9d,r9d
   140016b63:	mov    DWORD PTR [rsp+0x1f0],0x0
   140016b6e:	call   0x140011cb0
   140016b73:	mov    rbx,QWORD PTR [rsp+0x40]
   140016b78:	movsxd rax,DWORD PTR [rbx+0x4]
   140016b7c:	lea    rcx,[rax+rax*2]
   140016b80:	mov    rax,QWORD PTR [rbx+0x10]
   140016b84:	lea    rdx,[rax+rcx*8]
   140016b88:	mov    eax,DWORD PTR [rbp+0x4]
   140016b8b:	cmp    DWORD PTR [rdx+rbx*1-0x14],eax
   140016b8f:	jne    0x140016e03
   140016b95:	mov    eax,DWORD PTR [rbx]
   140016b97:	cmp    eax,0x1
   140016b9a:	je     0x140016bec
   140016b9c:	test   eax,eax
   140016b9e:	je     0x140016bec
   140016ba0:	mov    r8d,DWORD PTR [rbx+0x8]
   140016ba4:	btr    r8d,0x1f
   140016ba9:	test   r8d,r8d
   140016bac:	jne    0x140016bcc
   140016bae:	lea    r9d,[r8+0x2]
   140016bb2:	xor    r8d,r8d
   140016bb5:	lea    edx,[r9+0x6]
   140016bb9:	lea    ecx,[rdx+0x10]
   140016bbc:	call   QWORD PTR [rip+0x8956]        # 0x14001f518
   140016bc2:	mov    rbx,rax
   140016bc5:	mov    QWORD PTR [rsp+0x40],rax
   140016bca:	jmp    0x140016bec
   140016bcc:	mov    edx,DWORD PTR [rbx+0x4]
   140016bcf:	lea    rcx,[rsp+0x40]
   140016bd4:	xor    r9d,r9d
   140016bd7:	mov    DWORD PTR [rsp+0x1e8],0x0
   140016be2:	call   0x140011cb0
   140016be7:	mov    rbx,QWORD PTR [rsp+0x40]
   140016bec:	movsxd rax,DWORD PTR [rbx+0x4]
   140016bf0:	lea    rcx,[rax+rax*2]
   140016bf4:	mov    rax,QWORD PTR [rbx+0x10]
   140016bf8:	lea    rdi,[rax+rcx*8]
   140016bfc:	lea    rcx,[rsp+0x128]
   140016c04:	mov    eax,DWORD PTR [rdi+rbx*1-0x18]
   140016c08:	lea    rdx,[rdi+rbx*1-0x10]
   140016c0d:	mov    DWORD PTR [rsp+0x120],eax
   140016c14:	mov    eax,DWORD PTR [rdi+rbx*1-0x14]
   140016c18:	mov    DWORD PTR [rsp+0x124],eax
   140016c1f:	call   QWORD PTR [rip+0x89b3]        # 0x14001f5d8
   140016c25:	mov    r11d,DWORD PTR [rdi+rbx*1-0x8]
   140016c2a:	mov    DWORD PTR [rsp+0x130],r11d
   140016c32:	mov    eax,DWORD PTR [rdi+rbx*1-0x4]
   140016c36:	mov    DWORD PTR [rsp+0x134],eax
   140016c3d:	mov    rax,QWORD PTR [rsp+0x40]
   140016c42:	mov    ecx,DWORD PTR [rax]
   140016c44:	cmp    ecx,0x1
   140016c47:	je     0x140016c75
   140016c49:	test   ecx,ecx
   140016c4b:	je     0x140016c75
   140016c4d:	mov    r8d,DWORD PTR [rax+0x8]
   140016c51:	mov    edx,DWORD PTR [rax+0x4]
   140016c54:	lea    rcx,[rsp+0x40]
   140016c59:	btr    r8d,0x1f
   140016c5e:	dec    edx
   140016c60:	xor    r9d,r9d
   140016c63:	mov    DWORD PTR [rsp+0x1f8],0x0
   140016c6e:	call   0x140011cb0
   140016c73:	jmp    0x140016c9a
   140016c75:	dec    DWORD PTR [rax+0x4]
   140016c78:	mov    rax,QWORD PTR [rsp+0x40]
   140016c7d:	movsxd rcx,DWORD PTR [rax+0x4]
   140016c81:	lea    rdx,[rcx+rcx*2]
   140016c85:	mov    rcx,QWORD PTR [rax+0x10]
   140016c89:	lea    rcx,[rcx+rdx*8]
   140016c8d:	add    rcx,rax
   140016c90:	add    rcx,0x8
   140016c94:	call   QWORD PTR [rip+0x891e]        # 0x14001f5b8
   140016c9a:	cmp    DWORD PTR [rsp+0x124],0x4
   140016ca2:	je     0x140016caa
   140016ca4:	cmp    DWORD PTR [rbp+0x4],0x4
   140016ca8:	jne    0x140016cbe
   140016caa:	mov    rcx,QWORD PTR [rsp+0x278]
   140016cb2:	lea    rdx,[rip+0xf8df]        # 0x140026598
   140016cb9:	call   0x140019c50
   140016cbe:	mov    r9d,DWORD PTR [rsp+0xcc]
   140016cc6:	mov    r8d,DWORD PTR [rsp+0xc8]
   140016cce:	lea    rdx,[rsp+0x158]
   140016cd6:	lea    rcx,[rsp+0xc0]
   140016cde:	call   QWORD PTR [rip+0x88ec]        # 0x14001f5d0
   140016ce4:	mov    r9d,DWORD PTR [rsp+0x134]
   140016cec:	mov    r8d,DWORD PTR [rsp+0x130]
   140016cf4:	lea    rdx,[rsp+0x138]
   140016cfc:	lea    rcx,[rsp+0x128]
   140016d04:	call   QWORD PTR [rip+0x88c6]        # 0x14001f5d0
   140016d0a:	lea    rdx,[rsp+0x138]
   140016d12:	lea    rcx,[rsp+0x108]
   140016d1a:	call   QWORD PTR [rip+0x88b8]        # 0x14001f5d8
   140016d20:	lea    rdx,[rsp+0x158]
   140016d28:	lea    rcx,[rsp+0x108]
   140016d30:	call   QWORD PTR [rip+0x88aa]        # 0x14001f5e0
   140016d36:	lea    rdx,[rsp+0x108]
   140016d3e:	lea    rcx,[rsp+0x178]
   140016d46:	call   QWORD PTR [rip+0x888c]        # 0x14001f5d8
   140016d4c:	lea    rcx,[rsp+0x108]
   140016d54:	call   QWORD PTR [rip+0x885e]        # 0x14001f5b8
   140016d5a:	lea    rcx,[rsp+0x138]
   140016d62:	call   QWORD PTR [rip+0x8850]        # 0x14001f5b8
   140016d68:	lea    rcx,[rsp+0x158]
   140016d70:	call   QWORD PTR [rip+0x8842]        # 0x14001f5b8
   140016d76:	mov    eax,DWORD PTR [rsp+0x288]
   140016d7d:	lea    rdx,[rsp+0x178]
   140016d85:	mov    DWORD PTR [rsp+0x188],eax
   140016d8c:	mov    eax,DWORD PTR [rsp+0x124]
   140016d93:	lea    rcx,[rsp+0x190]
   140016d9b:	mov    DWORD PTR [rsp+0x18c],eax
   140016da2:	call   QWORD PTR [rip+0x8830]        # 0x14001f5d8
   140016da8:	mov    rax,QWORD PTR [rsp+0x190]
   140016db0:	mov    DWORD PTR [rsp+0x198],0x0
   140016dbb:	mov    ecx,DWORD PTR [rax+0x4]
   140016dbe:	lea    rdx,[rsp+0x188]
   140016dc6:	mov    DWORD PTR [rsp+0x19c],ecx
   140016dcd:	lea    rcx,[rsp+0x40]
   140016dd2:	call   0x140012170
   140016dd7:	lea    rcx,[rsp+0x190]
   140016ddf:	call   QWORD PTR [rip+0x87d3]        # 0x14001f5b8
   140016de5:	lea    rcx,[rsp+0x178]
   140016ded:	call   QWORD PTR [rip+0x87c5]        # 0x14001f5b8
   140016df3:	lea    rcx,[rsp+0x128]
   140016dfb:	call   QWORD PTR [rip+0x87b7]        # 0x14001f5b8
   140016e01:	jmp    0x140016e15
   140016e03:	lea    rdx,[rsp+0xb8]
   140016e0b:	lea    rcx,[rsp+0x40]
   140016e10:	call   0x140012170
   140016e15:	test   esi,esi
   140016e17:	js     0x140016e68
   140016e19:	cmp    esi,DWORD PTR [rsp+0xd4]
   140016e20:	jge    0x140016e68
   140016e22:	mov    rdi,rsi
   140016e25:	mov    rsi,QWORD PTR [rsp+0xd8]
   140016e2d:	mov    ebx,0x1
   140016e32:	mov    r8,QWORD PTR [rsi+rdi*8]
   140016e36:	cmp    DWORD PTR [r8+0x4],ebx
   140016e3a:	jle    0x140016e68
   140016e3c:	nop    DWORD PTR [rax+0x0]
   140016e40:	movsxd rax,ebx
   140016e43:	lea    rcx,[rax+rax*2]
   140016e47:	mov    rax,QWORD PTR [r8+0x10]
   140016e4b:	lea    rdx,[rax+rcx*8]
   140016e4f:	lea    rcx,[rsp+0x40]
   140016e54:	add    rdx,r8
   140016e57:	call   0x140012170
   140016e5c:	mov    r8,QWORD PTR [rsi+rdi*8]
   140016e60:	inc    ebx
   140016e62:	cmp    ebx,DWORD PTR [r8+0x4]
   140016e66:	jl     0x140016e40
   140016e68:	lea    rcx,[rsp+0xc0]
   140016e70:	call   QWORD PTR [rip+0x8742]        # 0x14001f5b8
   140016e76:	xor    ebx,ebx
   140016e78:	jmp    0x140016e86
   140016e7a:	xor    ebx,ebx
   140016e7c:	cmp    eax,0x93
   140016e81:	setne  bl
   140016e84:	inc    ebx
   140016e86:	mov    rdi,QWORD PTR [rsp+0x278]
   140016e8e:	mov    rax,QWORD PTR [rsp+0x148]
   140016e96:	inc    r14d
   140016e99:	add    r15,0x18
   140016e9d:	cmp    r14d,DWORD PTR [rax]
   140016ea0:	mov    rax,QWORD PTR [rsp+0x140]
   140016ea8:	jl     0x140016620
   140016eae:	test   ebx,ebx
   140016eb0:	je     0x140016ec1
   140016eb2:	lea    rdx,[rip+0xf6a7]        # 0x140026560
   140016eb9:	mov    rcx,rdi
   140016ebc:	call   0x140019c50
   140016ec1:	lea    rcx,[rsp+0xd0]
   140016ec9:	call   0x140012030
   140016ece:	mov    rbp,QWORD PTR [rsp+0x270]
   140016ed6:	lea    rdx,[rsp+0x40]
   140016edb:	mov    rcx,rbp
   140016ede:	call   0x140011970
   140016ee3:	mov    rdi,QWORD PTR [rsp+0x40]
   140016ee8:	mov    eax,DWORD PTR [rdi]
   140016eea:	test   eax,eax
   140016eec:	je     0x140016f03
   140016eee:	cmp    eax,0xffffffff
   140016ef1:	je     0x140016f49
   140016ef3:	lock add DWORD PTR [rdi],0xffffffff
   140016ef7:	setne  al
   140016efa:	test   al,al
   140016efc:	jne    0x140016f49
   140016efe:	mov    rdi,QWORD PTR [rsp+0x40]
   140016f03:	mov    rdx,QWORD PTR [rdi+0x10]
   140016f07:	movsxd rax,DWORD PTR [rdi+0x4]
   140016f0b:	lea    rcx,[rax+rax*2]
   140016f0f:	lea    rbx,[rdx+rdi*1]
   140016f13:	lea    rsi,[rdx+rcx*8]
   140016f17:	add    rsi,rdi
   140016f1a:	cmp    rbx,rsi
   140016f1d:	je     0x140016f36
   140016f1f:	nop
   140016f20:	mov    rcx,rbx
   140016f23:	add    rbx,0x18
   140016f27:	add    rcx,0x8
   140016f2b:	call   QWORD PTR [rip+0x8687]        # 0x14001f5b8
   140016f31:	cmp    rbx,rsi
   140016f34:	jne    0x140016f20
   140016f36:	mov    r8d,0x8
   140016f3c:	mov    rcx,rdi
   140016f3f:	lea    edx,[r8+0x10]
   140016f43:	call   QWORD PTR [rip+0x85c7]        # 0x14001f510
   140016f49:	mov    rdi,QWORD PTR [rsp+0x58]
   140016f4e:	mov    eax,DWORD PTR [rdi]
   140016f50:	test   eax,eax
   140016f52:	je     0x140016f64
   140016f54:	cmp    eax,0xffffffff
   140016f57:	je     0x140016f73
   140016f59:	lock add DWORD PTR [rdi],0xffffffff
   140016f5d:	setne  al
   140016f60:	test   al,al
   140016f62:	jne    0x140016f73
   140016f64:	mov    rdx,QWORD PTR [rsp+0x58]
   140016f69:	lea    rcx,[rsp+0x58]
   140016f6e:	call   0x1400114d0
   140016f73:	mov    rax,QWORD PTR [rsp+0x50]
   140016f78:	mov    ecx,DWORD PTR [rax]
   140016f7a:	test   ecx,ecx
   140016f7c:	je     0x140016f8e
   140016f7e:	cmp    ecx,0xffffffff
   140016f81:	je     0x140016f9d
   140016f83:	lock add DWORD PTR [rax],0xffffffff
   140016f87:	setne  al
   140016f8a:	test   al,al
   140016f8c:	jne    0x140016f9d
   140016f8e:	mov    rdx,QWORD PTR [rsp+0x50]
   140016f93:	lea    rcx,[rsp+0x50]
   140016f98:	call   0x1400114d0
   140016f9d:	lea    rcx,[rsp+0x90]
   140016fa5:	call   QWORD PTR [rip+0x860d]        # 0x14001f5b8
   140016fab:	mov    rax,rbp
   140016fae:	add    rsp,0x228
   140016fb5:	pop    r15
   140016fb7:	pop    r14
   140016fb9:	pop    r13
   140016fbb:	pop    r12
   140016fbd:	pop    rdi
   140016fbe:	pop    rsi
   140016fbf:	pop    rbp
   140016fc0:	pop    rbx
   140016fc1:	ret    
   140016fc2:	int3   
   140016fc3:	int3   
   140016fc4:	int3   
   140016fc5:	int3   
   140016fc6:	int3   
   140016fc7:	int3   
   140016fc8:	int3   
   140016fc9:	int3   
   140016fca:	int3   
   140016fcb:	int3   
   140016fcc:	int3   
   140016fcd:	int3   
   140016fce:	int3   
   140016fcf:	int3   
   140016fd0:	mov    QWORD PTR [rsp+0x10],rbx
   140016fd5:	push   rdi
   140016fd6:	sub    rsp,0x20
   140016fda:	mov    QWORD PTR [rsp+0x30],rsi
   140016fdf:	mov    rbx,rcx
   140016fe2:	call   0x140014fb0
   140016fe7:	mov    r9,QWORD PTR [rbx]
   140016fea:	mov    esi,eax
   140016fec:	movsxd rax,DWORD PTR [rbx+0x8]
   140016ff0:	cmp    eax,DWORD PTR [r9+0x4]
   140016ff4:	jge    0x14001701d
   140016ff6:	mov    rdx,QWORD PTR [r9+0x10]
   140016ffa:	lea    r8,[rax+rax*2]
   140016ffe:	lea    rcx,[rdx+r8*8]
   140017002:	cmp    DWORD PTR [rcx+r9*1+0x4],0x43
   140017008:	jne    0x14001701d
   14001700a:	inc    eax
   14001700c:	mov    rcx,rbx
   14001700f:	mov    DWORD PTR [rbx+0x8],eax
   140017012:	call   0x1400150c0
   140017017:	mov    edi,eax
   140017019:	or     edi,esi
   14001701b:	jmp    0x14001701f
   14001701d:	mov    edi,esi
   14001701f:	mov    r8,QWORD PTR [rbx]
   140017022:	movsxd rdx,DWORD PTR [rbx+0x8]
   140017026:	mov    rsi,QWORD PTR [rsp+0x30]
   14001702b:	cmp    edx,DWORD PTR [r8+0x4]
   14001702f:	jge    0x140017078
   140017031:	mov    rax,QWORD PTR [r8+0x10]
   140017035:	lea    rcx,[rdx+rdx*2]
   140017039:	lea    rcx,[rax+rcx*8]
   14001703d:	cmp    DWORD PTR [rcx+r8*1+0x4],0x56
   140017043:	jne    0x140017078
   140017045:	lea    eax,[rdx+0x1]
   140017048:	mov    rcx,rbx
   14001704b:	mov    DWORD PTR [rbx+0x8],eax
   14001704e:	call   0x140016fd0
   140017053:	test   eax,eax
   140017055:	je     0x14001706b
   140017057:	test   edi,edi
   140017059:	je     0x14001706b
   14001705b:	mov    eax,0x1
   140017060:	mov    rbx,QWORD PTR [rsp+0x38]
   140017065:	add    rsp,0x20
   140017069:	pop    rdi
   14001706a:	ret    
   14001706b:	xor    eax,eax
   14001706d:	mov    rbx,QWORD PTR [rsp+0x38]
   140017072:	add    rsp,0x20
   140017076:	pop    rdi
   140017077:	ret    
   140017078:	mov    eax,edi
   14001707a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001707f:	add    rsp,0x20
   140017083:	pop    rdi
   140017084:	ret    
   140017085:	int3   
   140017086:	int3   
   140017087:	int3   
   140017088:	int3   
   140017089:	int3   
   14001708a:	int3   
   14001708b:	int3   
   14001708c:	int3   
   14001708d:	int3   
   14001708e:	int3   
   14001708f:	int3   
   140017090:	mov    QWORD PTR [rsp+0x20],r9
   140017095:	mov    QWORD PTR [rsp+0x18],r8
   14001709a:	mov    QWORD PTR [rsp+0x10],rdx
   14001709f:	mov    QWORD PTR [rsp+0x8],rcx
   1400170a4:	push   rbx
   1400170a5:	push   rbp
   1400170a6:	push   rdi
   1400170a7:	push   r12
   1400170a9:	push   r15
   1400170ab:	sub    rsp,0xd0
   1400170b2:	mov    rax,QWORD PTR [rip+0x8477]        # 0x14001f530
   1400170b9:	mov    r12,rcx
   1400170bc:	lea    rcx,[rsp+0x50]
   1400170c1:	mov    rbx,r9
   1400170c4:	mov    rdi,r8
   1400170c7:	mov    rbp,rdx
   1400170ca:	mov    QWORD PTR [rsp+0x30],rax
   1400170cf:	mov    QWORD PTR [rsp+0x48],rax
   1400170d4:	call   QWORD PTR [rip+0x84e6]        # 0x14001f5c0
   1400170da:	mov    r11,QWORD PTR [rip+0x8457]        # 0x14001f538
   1400170e1:	lea    rcx,[rsp+0x48]
   1400170e6:	mov    rdx,rdi
   1400170e9:	mov    QWORD PTR [rsp+0x58],r11
   1400170ee:	call   0x140011a40
   1400170f3:	mov    r11d,DWORD PTR [rbx]
   1400170f6:	mov    rax,QWORD PTR [rsp+0x130]
   1400170fe:	mov    rcx,QWORD PTR [rsp+0x58]
   140017103:	mov    DWORD PTR [rsp+0x60],r11d
   140017108:	mov    rbx,QWORD PTR [rax]
   14001710b:	cmp    rcx,rbx
   14001710e:	je     0x1400171c0
   140017114:	mov    eax,DWORD PTR [rbx+0x10]
   140017117:	test   eax,eax
   140017119:	je     0x14001712a
   14001711b:	cmp    eax,0xffffffff
   14001711e:	je     0x14001712a
   140017120:	lock add DWORD PTR [rbx+0x10],0x1
   140017125:	mov    rcx,QWORD PTR [rsp+0x58]
   14001712a:	mov    eax,DWORD PTR [rcx+0x10]
   14001712d:	test   eax,eax
   14001712f:	je     0x140017147
   140017131:	cmp    eax,0xffffffff
   140017134:	je     0x140017154
   140017136:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001713b:	setne  al
   14001713e:	test   al,al
   140017140:	jne    0x140017154
   140017142:	mov    rcx,QWORD PTR [rsp+0x58]
   140017147:	lea    rdx,[rip+0xfffffffffffeb7d2]        # 0x140002920
   14001714e:	call   QWORD PTR [rip+0x8364]        # 0x14001f4b8
   140017154:	mov    QWORD PTR [rsp+0x58],rbx
   140017159:	test   BYTE PTR [rbx+0x28],0x1
   14001715d:	jne    0x1400171c0
   14001715f:	lea    r8,[rip+0xfffffffffffeb7ba]        # 0x140002920
   140017166:	lea    rdx,[rip+0xfffffffffffeb0e3]        # 0x140002250
   14001716d:	mov    r9d,0x18
   140017173:	mov    rcx,rbx
   140017176:	mov    DWORD PTR [rsp+0x20],0x8
   14001717e:	call   QWORD PTR [rip+0x81ec]        # 0x14001f370
   140017184:	mov    r8,QWORD PTR [rsp+0x58]
   140017189:	mov    ecx,DWORD PTR [r8+0x10]
   14001718d:	mov    rbx,rax
   140017190:	test   ecx,ecx
   140017192:	je     0x1400171ab
   140017194:	cmp    ecx,0xffffffff
   140017197:	je     0x1400171bb
   140017199:	lock add DWORD PTR [r8+0x10],0xffffffff
   14001719f:	setne  cl
   1400171a2:	test   cl,cl
   1400171a4:	jne    0x1400171bb
   1400171a6:	mov    r8,QWORD PTR [rsp+0x58]
   1400171ab:	lea    rdx,[rip+0xfffffffffffeb76e]        # 0x140002920
   1400171b2:	mov    rcx,r8
   1400171b5:	call   QWORD PTR [rip+0x82fd]        # 0x14001f4b8
   1400171bb:	mov    QWORD PTR [rsp+0x58],rbx
   1400171c0:	lea    rdx,[rsp+0x48]
   1400171c5:	lea    rcx,[rsp+0x30]
   1400171ca:	mov    QWORD PTR [rsp+0xc8],rsi
   1400171d2:	call   0x1400149e0
   1400171d7:	mov    r11,QWORD PTR [rdi]
   1400171da:	cmp    DWORD PTR [r11+0x4],0x0
   1400171df:	jne    0x1400172d8
   1400171e5:	mov    rcx,QWORD PTR [rsp+0x58]
   1400171ea:	mov    eax,DWORD PTR [rcx+0x10]
   1400171ed:	test   eax,eax
   1400171ef:	je     0x140017207
   1400171f1:	cmp    eax,0xffffffff
   1400171f4:	je     0x140017214
   1400171f6:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400171fb:	setne  al
   1400171fe:	test   al,al
   140017200:	jne    0x140017214
   140017202:	mov    rcx,QWORD PTR [rsp+0x58]
   140017207:	lea    rdx,[rip+0xfffffffffffeb712]        # 0x140002920
   14001720e:	call   QWORD PTR [rip+0x82a4]        # 0x14001f4b8
   140017214:	lea    rcx,[rsp+0x50]
   140017219:	call   QWORD PTR [rip+0x8399]        # 0x14001f5b8
   14001721f:	mov    rdi,QWORD PTR [rsp+0x48]
   140017224:	mov    eax,DWORD PTR [rdi]
   140017226:	test   eax,eax
   140017228:	je     0x14001723f
   14001722a:	cmp    eax,0xffffffff
   14001722d:	je     0x140017288
   14001722f:	lock add DWORD PTR [rdi],0xffffffff
   140017233:	setne  al
   140017236:	test   al,al
   140017238:	jne    0x140017288
   14001723a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001723f:	mov    rdx,QWORD PTR [rdi+0x10]
   140017243:	movsxd rax,DWORD PTR [rdi+0x4]
   140017247:	lea    rcx,[rax+rax*2]
   14001724b:	lea    rbx,[rdx+rdi*1]
   14001724f:	lea    rsi,[rdx+rcx*8]
   140017253:	add    rsi,rdi
   140017256:	cmp    rbx,rsi
   140017259:	je     0x140017276
   14001725b:	nop    DWORD PTR [rax+rax*1+0x0]
   140017260:	mov    rcx,rbx
   140017263:	add    rbx,0x18
   140017267:	add    rcx,0x8
   14001726b:	call   QWORD PTR [rip+0x8347]        # 0x14001f5b8
   140017271:	cmp    rbx,rsi
   140017274:	jne    0x140017260
   140017276:	mov    edx,0x18
   14001727b:	mov    rcx,rdi
   14001727e:	lea    r8d,[rdx-0x10]
   140017282:	call   QWORD PTR [rip+0x8288]        # 0x14001f510
   140017288:	mov    rbx,QWORD PTR [rsp+0x30]
   14001728d:	mov    eax,DWORD PTR [rbx]
   14001728f:	test   eax,eax
   140017291:	je     0x1400172b0
   140017293:	cmp    eax,0xffffffff
   140017296:	je     0x140017996
   14001729c:	lock add DWORD PTR [rbx],0xffffffff
   1400172a0:	setne  al
   1400172a3:	test   al,al
   1400172a5:	jne    0x140017996
   1400172ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400172b0:	mov    rax,QWORD PTR [rbx+0x10]
   1400172b4:	movsxd r8,DWORD PTR [rbx+0x4]
   1400172b8:	lea    rcx,[rsp+0x30]
   1400172bd:	shl    r8,0x5
   1400172c1:	lea    rdx,[rax+rbx*1]
   1400172c5:	add    r8,rax
   1400172c8:	add    r8,rbx
   1400172cb:	call   0x140014490
   1400172d0:	mov    rcx,rbx
   1400172d3:	jmp    0x140017986
   1400172d8:	mov    QWORD PTR [rsp+0xb8],r14
   1400172e0:	xor    esi,esi
   1400172e2:	mov    QWORD PTR [rsp+0xc0],r13
   1400172ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400172f0:	lea    rcx,[rsp+0x40]
   1400172f5:	call   QWORD PTR [rip+0x82c5]        # 0x14001f5c0
   1400172fb:	mov    edi,DWORD PTR [rsp+0x120]
   140017302:	lea    r11,[rsp+0x40]
   140017307:	lea    r8,[rsp+0x30]
   14001730c:	lea    rcx,[rsp+0x38]
   140017311:	mov    r9d,edi
   140017314:	mov    rdx,rbp
   140017317:	mov    QWORD PTR [rsp+0x20],r11
   14001731c:	call   0x140015bd0
   140017321:	mov    r11,QWORD PTR [rsp+0x40]
   140017326:	cmp    DWORD PTR [r11+0x4],esi
   14001732a:	jne    0x1400173c7
   140017330:	mov    rax,QWORD PTR [rsp+0x30]
   140017335:	movsxd rcx,DWORD PTR [rax+0x4]
   140017339:	shl    rcx,0x5
   14001733d:	add    rcx,QWORD PTR [rax+0x10]
   140017341:	mov    rdx,QWORD PTR [rcx+rax*1-0x20]
   140017346:	mov    eax,DWORD PTR [rcx+rax*1-0x8]
   14001734a:	dec    eax
   14001734c:	cdqe   
   14001734e:	lea    rcx,[rax+rax*2]
   140017352:	mov    rax,QWORD PTR [rdx+0x10]
   140017356:	lea    rbx,[rax+rcx*8]
   14001735a:	lea    rcx,[rsp+0x90]
   140017362:	add    rbx,rdx
   140017365:	mov    eax,DWORD PTR [rbx]
   140017367:	lea    rdx,[rbx+0x8]
   14001736b:	mov    DWORD PTR [rsp+0x88],eax
   140017372:	mov    eax,DWORD PTR [rbx+0x4]
   140017375:	mov    DWORD PTR [rsp+0x8c],eax
   14001737c:	call   QWORD PTR [rip+0x8256]        # 0x14001f5d8
   140017382:	mov    r11d,DWORD PTR [rbx+0x10]
   140017386:	mov    DWORD PTR [rsp+0x98],r11d
   14001738e:	mov    eax,DWORD PTR [rbx+0x14]
   140017391:	lea    rdx,[rsp+0x88]
   140017399:	mov    rcx,r12
   14001739c:	mov    DWORD PTR [rsp+0x88],edi
   1400173a3:	mov    DWORD PTR [rsp+0x9c],eax
   1400173aa:	call   0x140012170
   1400173af:	lea    rcx,[rsp+0x90]
   1400173b7:	call   QWORD PTR [rip+0x81fb]        # 0x14001f5b8
   1400173bd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400173c2:	jmp    0x14001766d
   1400173c7:	mov    rax,QWORD PTR [rip+0x8162]        # 0x14001f530
   1400173ce:	lea    rcx,[rsp+0x70]
   1400173d3:	mov    QWORD PTR [rsp+0x68],rax
   1400173d8:	call   QWORD PTR [rip+0x81e2]        # 0x14001f5c0
   1400173de:	mov    rbx,QWORD PTR [rsp+0x38]
   1400173e3:	mov    r11,QWORD PTR [rip+0x814e]        # 0x14001f538
   1400173ea:	mov    QWORD PTR [rsp+0x78],r11
   1400173ef:	cmp    rbx,QWORD PTR [rsp+0x68]
   1400173f4:	je     0x140017558
   1400173fa:	mov    eax,DWORD PTR [rbx]
   1400173fc:	test   eax,eax
   1400173fe:	je     0x140017416
   140017400:	cmp    eax,0xffffffff
   140017403:	je     0x14001740e
   140017405:	lock add DWORD PTR [rbx],0x1
   140017409:	mov    rbx,QWORD PTR [rsp+0x38]
   14001740e:	mov    r13,rbx
   140017411:	jmp    0x1400174d3
   140017416:	mov    r8d,DWORD PTR [rbx+0x8]
   14001741a:	bt     r8d,0x1f
   14001741f:	jae    0x140017445
   140017421:	mov    edx,0x8
   140017426:	and    r8d,0x7fffffff
   14001742d:	mov    r9d,esi
   140017430:	lea    ecx,[rdx+0x10]
   140017433:	call   QWORD PTR [rip+0x80df]        # 0x14001f518
   140017439:	mov    r13,rax
   14001743c:	or     DWORD PTR [rax+0x8],0x80000000
   140017443:	jmp    0x14001745d
   140017445:	movsxd r8,DWORD PTR [rbx+0x4]
   140017449:	mov    edx,0x8
   14001744e:	mov    r9d,esi
   140017451:	lea    ecx,[rdx+0x10]
   140017454:	call   QWORD PTR [rip+0x80be]        # 0x14001f518
   14001745a:	mov    r13,rax
   14001745d:	mov    eax,DWORD PTR [r13+0x8]
   140017461:	btr    eax,0x1f
   140017465:	test   eax,eax
   140017467:	je     0x1400174d3
   140017469:	mov    rax,QWORD PTR [r13+0x10]
   14001746d:	mov    rdx,QWORD PTR [rbx+0x10]
   140017471:	lea    r12,[r13+rax*1+0x0]
   140017476:	movsxd rax,DWORD PTR [rbx+0x4]
   14001747a:	lea    rdi,[rdx+rbx*1]
   14001747e:	lea    rcx,[rax+rax*2]
   140017482:	lea    r14,[rdx+rcx*8]
   140017486:	add    r14,rbx
   140017489:	cmp    rdi,r14
   14001748c:	je     0x1400174cc
   14001748e:	xchg   ax,ax
   140017490:	mov    rbp,r12
   140017493:	add    r12,0x18
   140017497:	test   rbp,rbp
   14001749a:	je     0x1400174c7
   14001749c:	mov    eax,DWORD PTR [rdi]
   14001749e:	lea    rdx,[rdi+0x8]
   1400174a2:	lea    rcx,[rbp+0x8]
   1400174a6:	mov    DWORD PTR [rbp+0x0],eax
   1400174a9:	mov    eax,DWORD PTR [rdi+0x4]
   1400174ac:	mov    DWORD PTR [rbp+0x4],eax
   1400174af:	call   QWORD PTR [rip+0x8123]        # 0x14001f5d8
   1400174b5:	mov    r11d,DWORD PTR [rdi+0x10]
   1400174b9:	mov    DWORD PTR [rbp+0x10],r11d
   1400174bd:	mov    eax,DWORD PTR [rdi+0x14]
   1400174c0:	add    rdi,0x18
   1400174c4:	mov    DWORD PTR [rbp+0x14],eax
   1400174c7:	cmp    rdi,r14
   1400174ca:	jne    0x140017490
   1400174cc:	mov    eax,DWORD PTR [rbx+0x4]
   1400174cf:	mov    DWORD PTR [r13+0x4],eax
   1400174d3:	mov    rdi,QWORD PTR [rsp+0x68]
   1400174d8:	mov    QWORD PTR [rsp+0x68],r13
   1400174dd:	mov    eax,DWORD PTR [rdi]
   1400174df:	mov    QWORD PTR [rsp+0xa0],rdi
   1400174e7:	test   eax,eax
   1400174e9:	je     0x14001750c
   1400174eb:	cmp    eax,0xffffffff
   1400174ee:	je     0x140017558
   1400174f0:	lock add DWORD PTR [rdi],0xffffffff
   1400174f4:	setne  al
   1400174f7:	test   al,al
   1400174f9:	jne    0x140017642
   1400174ff:	mov    rbx,QWORD PTR [rsp+0x38]
   140017504:	mov    rdi,QWORD PTR [rsp+0xa0]
   14001750c:	mov    rdx,QWORD PTR [rdi+0x10]
   140017510:	movsxd rax,DWORD PTR [rdi+0x4]
   140017514:	lea    rcx,[rax+rax*2]
   140017518:	lea    rbp,[rdx+rdi*1]
   14001751c:	lea    r12,[rdx+rcx*8]
   140017520:	add    r12,rdi
   140017523:	cmp    rbp,r12
   140017526:	je     0x140017546
   140017528:	nop    DWORD PTR [rax+rax*1+0x0]
   140017530:	mov    rcx,rbp
   140017533:	add    rbp,0x18
   140017537:	add    rcx,0x8
   14001753b:	call   QWORD PTR [rip+0x8077]        # 0x14001f5b8
   140017541:	cmp    rbp,r12
   140017544:	jne    0x140017530
   140017546:	mov    edx,0x18
   14001754b:	mov    rcx,rdi
   14001754e:	lea    r8d,[rdx-0x10]
   140017552:	call   QWORD PTR [rip+0x7fb8]        # 0x14001f510
   140017558:	lea    rdx,[rsp+0x40]
   14001755d:	lea    rcx,[rsp+0x70]
   140017562:	mov    DWORD PTR [rsp+0x80],esi
   140017569:	call   QWORD PTR [rip+0x7fe9]        # 0x14001f558
   14001756f:	lea    rdx,[rsp+0x68]
   140017574:	lea    rcx,[rsp+0x30]
   140017579:	call   0x1400149e0
   14001757e:	mov    rcx,QWORD PTR [rsp+0x78]
   140017583:	mov    eax,DWORD PTR [rcx+0x10]
   140017586:	test   eax,eax
   140017588:	je     0x1400175a9
   14001758a:	cmp    eax,0xffffffff
   14001758d:	je     0x1400175b6
   14001758f:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140017594:	setne  al
   140017597:	test   al,al
   140017599:	jne    0x14001764c
   14001759f:	mov    rbx,QWORD PTR [rsp+0x38]
   1400175a4:	mov    rcx,QWORD PTR [rsp+0x78]
   1400175a9:	lea    rdx,[rip+0xfffffffffffeb370]        # 0x140002920
   1400175b0:	call   QWORD PTR [rip+0x7f02]        # 0x14001f4b8
   1400175b6:	lea    rcx,[rsp+0x70]
   1400175bb:	call   QWORD PTR [rip+0x7ff7]        # 0x14001f5b8
   1400175c1:	mov    rbp,QWORD PTR [rsp+0x68]
   1400175c6:	mov    eax,DWORD PTR [rbp+0x0]
   1400175c9:	test   eax,eax
   1400175cb:	je     0x1400175ec
   1400175cd:	cmp    eax,0xffffffff
   1400175d0:	je     0x140017665
   1400175d6:	lock add DWORD PTR [rbp+0x0],0xffffffff
   1400175db:	setne  al
   1400175de:	test   al,al
   1400175e0:	jne    0x140017656
   1400175e2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400175e7:	mov    rbp,QWORD PTR [rsp+0x68]
   1400175ec:	mov    rdx,QWORD PTR [rbp+0x10]
   1400175f0:	movsxd rax,DWORD PTR [rbp+0x4]
   1400175f4:	lea    rcx,[rax+rax*2]
   1400175f8:	lea    rdi,[rdx+rbp*1]
   1400175fc:	lea    r12,[rdx+rcx*8]
   140017600:	add    r12,rbp
   140017603:	cmp    rdi,r12
   140017606:	je     0x140017626
   140017608:	nop    DWORD PTR [rax+rax*1+0x0]
   140017610:	mov    rcx,rdi
   140017613:	add    rdi,0x18
   140017617:	add    rcx,0x8
   14001761b:	call   QWORD PTR [rip+0x7f97]        # 0x14001f5b8
   140017621:	cmp    rdi,r12
   140017624:	jne    0x140017610
   140017626:	mov    edx,0x18
   14001762b:	mov    rcx,rbp
   14001762e:	lea    r8d,[rdx-0x10]
   140017632:	call   QWORD PTR [rip+0x7ed8]        # 0x14001f510
   140017638:	mov    r12,QWORD PTR [rsp+0x100]
   140017640:	jmp    0x14001766d
   140017642:	mov    rbx,QWORD PTR [rsp+0x38]
   140017647:	jmp    0x140017558
   14001764c:	mov    rbx,QWORD PTR [rsp+0x38]
   140017651:	jmp    0x1400175b6
   140017656:	mov    rbx,QWORD PTR [rsp+0x38]
   14001765b:	mov    r12,QWORD PTR [rsp+0x100]
   140017663:	jmp    0x14001766d
   140017665:	mov    r12,QWORD PTR [rsp+0x100]
   14001766d:	lea    rcx,[rsp+0x30]
   140017672:	call   0x1400151a0
   140017677:	mov    rdi,QWORD PTR [rsp+0x30]
   14001767c:	test   al,al
   14001767e:	je     0x140017720
   140017684:	cmp    BYTE PTR [rsp+0x128],sil
   14001768c:	je     0x140017698
   14001768e:	cmp    DWORD PTR [rdi+0x4],0x1
   140017692:	je     0x140017720
   140017698:	lea    rcx,[rsp+0x30]
   14001769d:	call   0x140015640
   1400176a2:	mov    r11d,DWORD PTR [rbx]
   1400176a5:	test   r11d,r11d
   1400176a8:	je     0x1400176c0
   1400176aa:	cmp    r11d,0xffffffff
   1400176ae:	je     0x140017708
   1400176b0:	lock add DWORD PTR [rbx],0xffffffff
   1400176b4:	setne  al
   1400176b7:	test   al,al
   1400176b9:	jne    0x140017708
   1400176bb:	mov    rbx,QWORD PTR [rsp+0x38]
   1400176c0:	mov    rdx,QWORD PTR [rbx+0x10]
   1400176c4:	movsxd rax,DWORD PTR [rbx+0x4]
   1400176c8:	lea    rcx,[rax+rax*2]
   1400176cc:	lea    rdi,[rdx+rbx*1]
   1400176d0:	lea    rbp,[rdx+rcx*8]
   1400176d4:	add    rbp,rbx
   1400176d7:	cmp    rdi,rbp
   1400176da:	je     0x1400176f6
   1400176dc:	nop    DWORD PTR [rax+0x0]
   1400176e0:	mov    rcx,rdi
   1400176e3:	add    rdi,0x18
   1400176e7:	add    rcx,0x8
   1400176eb:	call   QWORD PTR [rip+0x7ec7]        # 0x14001f5b8
   1400176f1:	cmp    rdi,rbp
   1400176f4:	jne    0x1400176e0
   1400176f6:	mov    edx,0x18
   1400176fb:	mov    rcx,rbx
   1400176fe:	lea    r8d,[rdx-0x10]
   140017702:	call   QWORD PTR [rip+0x7e08]        # 0x14001f510
   140017708:	lea    rcx,[rsp+0x40]
   14001770d:	call   QWORD PTR [rip+0x7ea5]        # 0x14001f5b8
   140017713:	mov    rbp,QWORD PTR [rsp+0x108]
   14001771b:	jmp    0x1400172f0
   140017720:	mov    eax,DWORD PTR [rbx]
   140017722:	mov    r14,QWORD PTR [rsp+0xb8]
   14001772a:	mov    r13,QWORD PTR [rsp+0xc0]
   140017732:	test   eax,eax
   140017734:	je     0x140017754
   140017736:	cmp    eax,0xffffffff
   140017739:	je     0x140017798
   14001773b:	lock add DWORD PTR [rbx],0xffffffff
   14001773f:	setne  al
   140017742:	test   al,al
   140017744:	jne    0x1400177e9
   14001774a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001774f:	mov    rbx,QWORD PTR [rsp+0x38]
   140017754:	mov    rdx,QWORD PTR [rbx+0x10]
   140017758:	movsxd rax,DWORD PTR [rbx+0x4]
   14001775c:	lea    rcx,[rax+rax*2]
   140017760:	lea    rbp,[rdx+rbx*1]
   140017764:	lea    r12,[rdx+rcx*8]
   140017768:	add    r12,rbx
   14001776b:	cmp    rbp,r12
   14001776e:	je     0x140017786
   140017770:	mov    rcx,rbp
   140017773:	add    rbp,0x18
   140017777:	add    rcx,0x8
   14001777b:	call   QWORD PTR [rip+0x7e37]        # 0x14001f5b8
   140017781:	cmp    rbp,r12
   140017784:	jne    0x140017770
   140017786:	mov    edx,0x18
   14001778b:	mov    rcx,rbx
   14001778e:	lea    r8d,[rdx-0x10]
   140017792:	call   QWORD PTR [rip+0x7d78]        # 0x14001f510
   140017798:	lea    rcx,[rsp+0x40]
   14001779d:	call   QWORD PTR [rip+0x7e15]        # 0x14001f5b8
   1400177a3:	mov    edx,DWORD PTR [rdi+0x4]
   1400177a6:	lea    r12,[rdi+0x4]
   1400177aa:	test   edx,edx
   1400177ac:	je     0x14001787c
   1400177b2:	mov    eax,DWORD PTR [rdi]
   1400177b4:	cmp    eax,0x1
   1400177b7:	je     0x140017809
   1400177b9:	test   eax,eax
   1400177bb:	je     0x140017809
   1400177bd:	mov    r8d,DWORD PTR [rdi+0x8]
   1400177c1:	btr    r8d,0x1f
   1400177c6:	test   r8d,r8d
   1400177c9:	jne    0x1400177f0
   1400177cb:	lea    r9d,[r8+0x2]
   1400177cf:	xor    r8d,r8d
   1400177d2:	lea    edx,[r9+0x6]
   1400177d6:	lea    ecx,[rdx+0x18]
   1400177d9:	call   QWORD PTR [rip+0x7d39]        # 0x14001f518
   1400177df:	mov    rdi,rax
   1400177e2:	mov    QWORD PTR [rsp+0x30],rax
   1400177e7:	jmp    0x140017809
   1400177e9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400177ee:	jmp    0x140017798
   1400177f0:	lea    rcx,[rsp+0x30]
   1400177f5:	mov    r9d,esi
   1400177f8:	mov    DWORD PTR [rsp+0x130],esi
   1400177ff:	call   0x1400146a0
   140017804:	mov    rdi,QWORD PTR [rsp+0x30]
   140017809:	mov    eax,DWORD PTR [rdi]
   14001780b:	cmp    eax,0x1
   14001780e:	je     0x14001785c
   140017810:	test   eax,eax
   140017812:	je     0x14001785c
   140017814:	mov    r8d,DWORD PTR [rdi+0x8]
   140017818:	btr    r8d,0x1f
   14001781d:	test   r8d,r8d
   140017820:	jne    0x140017840
   140017822:	lea    r9d,[r8+0x2]
   140017826:	xor    r8d,r8d
   140017829:	lea    edx,[r9+0x6]
   14001782d:	lea    ecx,[rdx+0x18]
   140017830:	call   QWORD PTR [rip+0x7ce2]        # 0x14001f518
   140017836:	mov    rdi,rax
   140017839:	mov    QWORD PTR [rsp+0x30],rax
   14001783e:	jmp    0x14001785c
   140017840:	mov    edx,DWORD PTR [rdi+0x4]
   140017843:	lea    rcx,[rsp+0x30]
   140017848:	mov    r9d,esi
   14001784b:	mov    DWORD PTR [rsp+0xa8],esi
   140017852:	call   0x1400146a0
   140017857:	mov    rdi,QWORD PTR [rsp+0x30]
   14001785c:	movsxd rax,DWORD PTR [rdi+0x4]
   140017860:	mov    rdx,QWORD PTR [rsp+0x118]
   140017868:	lea    r12,[rdi+0x4]
   14001786c:	shl    rax,0x5
   140017870:	add    rax,QWORD PTR [rdi+0x10]
   140017874:	mov    eax,DWORD PTR [rax+rdi*1-0x8]
   140017878:	mov    DWORD PTR [rdx],eax
   14001787a:	jmp    0x140017894
   14001787c:	mov    rax,QWORD PTR [rsp+0x110]
   140017884:	mov    rdx,QWORD PTR [rsp+0x118]
   14001788c:	mov    rax,QWORD PTR [rax]
   14001788f:	mov    ecx,DWORD PTR [rax+0x4]
   140017892:	mov    DWORD PTR [rdx],ecx
   140017894:	mov    rcx,QWORD PTR [rsp+0x58]
   140017899:	mov    eax,DWORD PTR [rcx+0x10]
   14001789c:	test   eax,eax
   14001789e:	je     0x1400178bf
   1400178a0:	cmp    eax,0xffffffff
   1400178a3:	je     0x1400178cc
   1400178a5:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400178aa:	setne  al
   1400178ad:	test   al,al
   1400178af:	jne    0x1400179ad
   1400178b5:	mov    rdi,QWORD PTR [rsp+0x30]
   1400178ba:	mov    rcx,QWORD PTR [rsp+0x58]
   1400178bf:	lea    rdx,[rip+0xfffffffffffeb05a]        # 0x140002920
   1400178c6:	call   QWORD PTR [rip+0x7bec]        # 0x14001f4b8
   1400178cc:	lea    rcx,[rsp+0x50]
   1400178d1:	call   QWORD PTR [rip+0x7ce1]        # 0x14001f5b8
   1400178d7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400178dc:	mov    eax,DWORD PTR [rsi]
   1400178de:	test   eax,eax
   1400178e0:	je     0x140017900
   1400178e2:	cmp    eax,0xffffffff
   1400178e5:	je     0x140017948
   1400178e7:	lock add DWORD PTR [rsi],0xffffffff
   1400178eb:	setne  al
   1400178ee:	test   al,al
   1400178f0:	jne    0x1400179b7
   1400178f6:	mov    rdi,QWORD PTR [rsp+0x30]
   1400178fb:	mov    rsi,QWORD PTR [rsp+0x48]
   140017900:	mov    rdx,QWORD PTR [rsi+0x10]
   140017904:	movsxd rax,DWORD PTR [rsi+0x4]
   140017908:	lea    rcx,[rax+rax*2]
   14001790c:	lea    rbx,[rdx+rsi*1]
   140017910:	lea    rbp,[rdx+rcx*8]
   140017914:	add    rbp,rsi
   140017917:	cmp    rbx,rbp
   14001791a:	je     0x140017936
   14001791c:	nop    DWORD PTR [rax+0x0]
   140017920:	mov    rcx,rbx
   140017923:	add    rbx,0x18
   140017927:	add    rcx,0x8
   14001792b:	call   QWORD PTR [rip+0x7c87]        # 0x14001f5b8
   140017931:	cmp    rbx,rbp
   140017934:	jne    0x140017920
   140017936:	mov    edx,0x18
   14001793b:	mov    rcx,rsi
   14001793e:	lea    r8d,[rdx-0x10]
   140017942:	call   QWORD PTR [rip+0x7bc8]        # 0x14001f510
   140017948:	mov    eax,DWORD PTR [rdi]
   14001794a:	test   eax,eax
   14001794c:	je     0x140017963
   14001794e:	cmp    eax,0xffffffff
   140017951:	je     0x140017996
   140017953:	lock add DWORD PTR [rdi],0xffffffff
   140017957:	setne  al
   14001795a:	test   al,al
   14001795c:	jne    0x140017996
   14001795e:	mov    rdi,QWORD PTR [rsp+0x30]
   140017963:	mov    rax,QWORD PTR [rdi+0x10]
   140017967:	movsxd r8,DWORD PTR [r12]
   14001796b:	lea    rcx,[rsp+0x30]
   140017970:	shl    r8,0x5
   140017974:	lea    rdx,[rax+rdi*1]
   140017978:	add    r8,rax
   14001797b:	add    r8,rdi
   14001797e:	call   0x140014490
   140017983:	mov    rcx,rdi
   140017986:	mov    r8d,0x8
   14001798c:	lea    edx,[r8+0x18]
   140017990:	call   QWORD PTR [rip+0x7b7a]        # 0x14001f510
   140017996:	mov    rsi,QWORD PTR [rsp+0xc8]
   14001799e:	add    rsp,0xd0
   1400179a5:	pop    r15
   1400179a7:	pop    r12
   1400179a9:	pop    rdi
   1400179aa:	pop    rbp
   1400179ab:	pop    rbx
   1400179ac:	ret    
   1400179ad:	mov    rdi,QWORD PTR [rsp+0x30]
   1400179b2:	jmp    0x1400178cc
   1400179b7:	mov    rdi,QWORD PTR [rsp+0x30]
   1400179bc:	jmp    0x140017948
   1400179be:	int3   
   1400179bf:	int3   
   1400179c0:	mov    r11,rsp
   1400179c3:	mov    QWORD PTR [r11+0x10],rdx
   1400179c7:	mov    QWORD PTR [r11+0x8],rcx
   1400179cb:	push   rsi
   1400179cc:	push   r13
   1400179ce:	sub    rsp,0xb8
   1400179d5:	mov    rax,QWORD PTR [rcx]
   1400179d8:	lea    r13,[rcx+0x8]
   1400179dc:	mov    r10,rdx
   1400179df:	mov    r8d,DWORD PTR [rax+0x4]
   1400179e3:	mov    rsi,rcx
   1400179e6:	cmp    DWORD PTR [r13+0x0],r8d
   1400179ea:	jge    0x140017db2
   1400179f0:	mov    QWORD PTR [r11+0x20],rbx
   1400179f4:	mov    QWORD PTR [r11-0x18],rbp
   1400179f8:	mov    QWORD PTR [r11-0x20],rdi
   1400179fc:	mov    QWORD PTR [r11-0x28],r12
   140017a00:	mov    QWORD PTR [r11-0x30],r14
   140017a04:	mov    QWORD PTR [r11-0x38],r15
   140017a08:	nop    DWORD PTR [rax+rax*1+0x0]
   140017a10:	mov    r8,QWORD PTR [rsi]
   140017a13:	movsxd rax,DWORD PTR [r13+0x0]
   140017a17:	cmp    eax,DWORD PTR [r8+0x4]
   140017a1b:	jge    0x140017d2d
   140017a21:	lea    edx,[rax+0x1]
   140017a24:	lea    rcx,[rax+rax*2]
   140017a28:	mov    DWORD PTR [r13+0x0],edx
   140017a2c:	mov    rax,QWORD PTR [r8+0x10]
   140017a30:	lea    rcx,[rax+rcx*8]
   140017a34:	mov    eax,DWORD PTR [rcx+r8*1+0x4]
   140017a39:	cmp    eax,0x1
   140017a3c:	jne    0x140017ac9
   140017a42:	mov    rbx,QWORD PTR [rip+0x7aef]        # 0x14001f538
   140017a49:	movsxd rax,edx
   140017a4c:	mov    r9,r13
   140017a4f:	lea    rcx,[rax+rax*2]
   140017a53:	mov    rax,QWORD PTR [r8+0x10]
   140017a57:	mov    QWORD PTR [rsp+0xe0],rbx
   140017a5f:	lea    rdx,[rax+rcx*8]
   140017a63:	lea    rax,[rsp+0xe0]
   140017a6b:	mov    rcx,r10
   140017a6e:	mov    QWORD PTR [rsp+0x30],rax
   140017a73:	mov    eax,DWORD PTR [rdx+r8*1-0x18]
   140017a78:	mov    r8,rsi
   140017a7b:	mov    rdx,rsi
   140017a7e:	mov    BYTE PTR [rsp+0x28],0x1
   140017a83:	mov    DWORD PTR [rsp+0x20],eax
   140017a87:	call   0x140017090
   140017a8c:	mov    eax,DWORD PTR [rbx+0x10]
   140017a8f:	test   eax,eax
   140017a91:	je     0x140017ab4
   140017a93:	cmp    eax,0xffffffff
   140017a96:	je     0x140017d4c
   140017a9c:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140017aa1:	setne  al
   140017aa4:	test   al,al
   140017aa6:	jne    0x140017d4c
   140017aac:	mov    rbx,QWORD PTR [rsp+0xe0]
   140017ab4:	lea    rdx,[rip+0xfffffffffffeae65]        # 0x140002920
   140017abb:	mov    rcx,rbx
   140017abe:	call   QWORD PTR [rip+0x79f4]        # 0x14001f4b8
   140017ac4:	jmp    0x140017d4c
   140017ac9:	cmp    eax,0xa8
   140017ace:	jne    0x140017d26
   140017ad4:	cmp    edx,DWORD PTR [r8+0x4]
   140017ad8:	jge    0x140017b02
   140017ada:	movsxd rax,edx
   140017add:	lea    rcx,[rax+rax*2]
   140017ae1:	mov    rax,QWORD PTR [r8+0x10]
   140017ae5:	lea    rcx,[rax+rcx*8]
   140017ae9:	cmp    DWORD PTR [rcx+r8*1+0x4],0x9
   140017aef:	jne    0x140017b02
   140017af1:	lea    eax,[rdx+0x1]
   140017af4:	mov    BYTE PTR [rsp+0xe0],0x1
   140017afc:	mov    DWORD PTR [r13+0x0],eax
   140017b00:	jmp    0x140017b0a
   140017b02:	mov    BYTE PTR [rsp+0xe0],0x0
   140017b0a:	movsxd rdx,DWORD PTR [r13+0x0]
   140017b0e:	cmp    edx,DWORD PTR [r8+0x4]
   140017b12:	jge    0x140017b31
   140017b14:	mov    rax,QWORD PTR [r8+0x10]
   140017b18:	lea    rcx,[rdx+rdx*2]
   140017b1c:	lea    rcx,[rax+rcx*8]
   140017b20:	cmp    DWORD PTR [rcx+r8*1+0x4],0x1
   140017b26:	jne    0x140017b31
   140017b28:	lea    eax,[rdx+0x1]
   140017b2b:	mov    DWORD PTR [r13+0x0],eax
   140017b2f:	jmp    0x140017b3b
   140017b31:	xor    edx,edx
   140017b33:	mov    rcx,rsi
   140017b36:	call   0x140019c50
   140017b3b:	mov    rdx,QWORD PTR [rsi]
   140017b3e:	mov    eax,DWORD PTR [r13+0x0]
   140017b42:	dec    eax
   140017b44:	cdqe   
   140017b46:	lea    rcx,[rax+rax*2]
   140017b4a:	mov    rax,QWORD PTR [rdx+0x10]
   140017b4e:	lea    rdi,[rax+rcx*8]
   140017b52:	lea    rcx,[rsp+0x78]
   140017b57:	add    rdi,rdx
   140017b5a:	mov    eax,DWORD PTR [rdi]
   140017b5c:	lea    rdx,[rdi+0x8]
   140017b60:	mov    DWORD PTR [rsp+0x70],eax
   140017b64:	mov    eax,DWORD PTR [rdi+0x4]
   140017b67:	mov    DWORD PTR [rsp+0x74],eax
   140017b6b:	call   QWORD PTR [rip+0x7a67]        # 0x14001f5d8
   140017b71:	mov    ebx,DWORD PTR [rdi+0x10]
   140017b74:	mov    DWORD PTR [rsp+0x80],ebx
   140017b7b:	mov    ebp,DWORD PTR [rdi+0x14]
   140017b7e:	lea    rdx,[rsp+0x78]
   140017b83:	lea    rcx,[rsp+0x40]
   140017b88:	mov    DWORD PTR [rsp+0x84],ebp
   140017b8f:	call   QWORD PTR [rip+0x7a43]        # 0x14001f5d8
   140017b95:	mov    rax,QWORD PTR [rsi+0x30]
   140017b99:	lea    r14,[rsi+0x30]
   140017b9d:	xor    r15d,r15d
   140017ba0:	mov    DWORD PTR [rsp+0x48],ebx
   140017ba4:	mov    DWORD PTR [rsp+0x4c],ebp
   140017ba8:	cmp    DWORD PTR [rax+0x20],r15d
   140017bac:	je     0x140017bf2
   140017bae:	mov    ebx,DWORD PTR [rax+0x24]
   140017bb1:	lea    rcx,[rsp+0x40]
   140017bb6:	mov    DWORD PTR [rsp+0x50],ebp
   140017bba:	call   QWORD PTR [rip+0x7a38]        # 0x14001f5f8
   140017bc0:	lea    rcx,[rsp+0x60]
   140017bc5:	xor    edx,edx
   140017bc7:	mov    r11,rax
   140017bca:	movsxd rax,DWORD PTR [rsp+0x48]
   140017bcf:	add    r11,rax
   140017bd2:	mov    QWORD PTR [rsp+0x58],r11
   140017bd7:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140017bdc:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140017be2:	call   QWORD PTR [rip+0x7718]        # 0x14001f300
   140017be8:	mov    ebp,DWORD PTR [rsp+0x4c]
   140017bec:	mov    r15d,eax
   140017bef:	xor    r15d,ebx
   140017bf2:	mov    r8,QWORD PTR [r14]
   140017bf5:	mov    ecx,DWORD PTR [r8+0x20]
   140017bf9:	test   ecx,ecx
   140017bfb:	je     0x140017d11
   140017c01:	xor    edx,edx
   140017c03:	mov    eax,r15d
   140017c06:	div    ecx
   140017c08:	mov    rax,QWORD PTR [r8+0x8]
   140017c0c:	lea    r12,[rax+rdx*8]
   140017c10:	mov    rax,QWORD PTR [rax+rdx*8]
   140017c14:	cmp    rax,r8
   140017c17:	je     0x140017c7d
   140017c19:	nop    DWORD PTR [rax+0x0]
   140017c20:	cmp    r15d,DWORD PTR [rax+0x8]
   140017c24:	jne    0x140017cf3
   140017c2a:	cmp    ebp,DWORD PTR [rax+0x1c]
   140017c2d:	lea    rsi,[rax+0x10]
   140017c31:	jne    0x140017cf3
   140017c37:	xor    edi,edi
   140017c39:	test   ebp,ebp
   140017c3b:	jle    0x140017d19
   140017c41:	mov    eax,DWORD PTR [rsp+0x48]
   140017c45:	lea    rcx,[rsp+0x40]
   140017c4a:	lea    edx,[rdi+rax*1]
   140017c4d:	call   QWORD PTR [rip+0x7935]        # 0x14001f588
   140017c53:	mov    ecx,DWORD PTR [rsi+0x8]
   140017c56:	lea    edx,[rdi+rcx*1]
   140017c59:	mov    rcx,rsi
   140017c5c:	movzx  ebx,al
   140017c5f:	call   QWORD PTR [rip+0x7923]        # 0x14001f588
   140017c65:	cmp    bl,al
   140017c67:	jne    0x140017cef
   140017c6d:	inc    edi
   140017c6f:	cmp    edi,DWORD PTR [rsp+0x4c]
   140017c73:	jl     0x140017c41
   140017c75:	mov    rsi,QWORD PTR [rsp+0xd0]
   140017c7d:	mov    rax,QWORD PTR [r14]
   140017c80:	xor    ecx,ecx
   140017c82:	cmp    QWORD PTR [r12],rax
   140017c86:	sete   cl
   140017c89:	add    ecx,0xaa
   140017c8f:	mov    DWORD PTR [rsp+0x74],ecx
   140017c93:	lea    rcx,[rsp+0x40]
   140017c98:	call   QWORD PTR [rip+0x791a]        # 0x14001f5b8
   140017c9e:	mov    rcx,QWORD PTR [rsp+0xd8]
   140017ca6:	lea    rdx,[rsp+0x70]
   140017cab:	call   0x140012170
   140017cb0:	cmp    BYTE PTR [rsp+0xe0],0x0
   140017cb8:	je     0x140017ce2
   140017cba:	mov    r8,QWORD PTR [rsi]
   140017cbd:	movsxd rdx,DWORD PTR [r13+0x0]
   140017cc1:	cmp    edx,DWORD PTR [r8+0x4]
   140017cc5:	jge    0x140017ce2
   140017cc7:	mov    rax,QWORD PTR [r8+0x10]
   140017ccb:	lea    rcx,[rdx+rdx*2]
   140017ccf:	lea    rcx,[rax+rcx*8]
   140017cd3:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa
   140017cd9:	jne    0x140017ce2
   140017cdb:	lea    eax,[rdx+0x1]
   140017cde:	mov    DWORD PTR [r13+0x0],eax
   140017ce2:	lea    rcx,[rsp+0x78]
   140017ce7:	call   QWORD PTR [rip+0x78cb]        # 0x14001f5b8
   140017ced:	jmp    0x140017d4c
   140017cef:	mov    ebp,DWORD PTR [rsp+0x4c]
   140017cf3:	mov    r12,QWORD PTR [r12]
   140017cf7:	mov    rax,QWORD PTR [r12]
   140017cfb:	cmp    rax,QWORD PTR [r14]
   140017cfe:	jne    0x140017c20
   140017d04:	mov    rsi,QWORD PTR [rsp+0xd0]
   140017d0c:	jmp    0x140017c7d
   140017d11:	mov    r12,r14
   140017d14:	jmp    0x140017c7d
   140017d19:	mov    rsi,QWORD PTR [rsp+0xd0]
   140017d21:	jmp    0x140017c7d
   140017d26:	cmp    eax,0x99
   140017d2b:	je     0x140017d65
   140017d2d:	mov    eax,DWORD PTR [r13+0x0]
   140017d31:	dec    eax
   140017d33:	cdqe   
   140017d35:	lea    rcx,[rax+rax*2]
   140017d39:	mov    rax,QWORD PTR [r8+0x10]
   140017d3d:	lea    rdx,[rax+rcx*8]
   140017d41:	mov    rcx,r10
   140017d44:	add    rdx,r8
   140017d47:	call   0x140012170
   140017d4c:	mov    rax,QWORD PTR [rsi]
   140017d4f:	mov    ecx,DWORD PTR [rax+0x4]
   140017d52:	cmp    DWORD PTR [r13+0x0],ecx
   140017d56:	jge    0x140017d82
   140017d58:	mov    r10,QWORD PTR [rsp+0xd8]
   140017d60:	jmp    0x140017a10
   140017d65:	lea    eax,[rdx-0x1]
   140017d68:	movsxd rcx,eax
   140017d6b:	mov    rax,QWORD PTR [r8+0x10]
   140017d6f:	lea    rdx,[rcx+rcx*2]
   140017d73:	mov    rcx,r10
   140017d76:	lea    rdx,[rax+rdx*8]
   140017d7a:	add    rdx,r8
   140017d7d:	call   0x140012170
   140017d82:	mov    r14,QWORD PTR [rsp+0x98]
   140017d8a:	mov    r12,QWORD PTR [rsp+0xa0]
   140017d92:	mov    rdi,QWORD PTR [rsp+0xa8]
   140017d9a:	mov    rbp,QWORD PTR [rsp+0xb0]
   140017da2:	mov    rbx,QWORD PTR [rsp+0xe8]
   140017daa:	mov    r15,QWORD PTR [rsp+0x90]
   140017db2:	add    rsp,0xb8
   140017db9:	pop    r13
   140017dbb:	pop    rsi
   140017dbc:	ret    
   140017dbd:	int3   
   140017dbe:	int3   
   140017dbf:	int3   
   140017dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140017dc5:	push   rdi
   140017dc6:	sub    rsp,0x20
   140017dca:	mov    rdi,rcx
   140017dcd:	call   0x140016fd0
   140017dd2:	mov    r9,QWORD PTR [rdi]
   140017dd5:	mov    ebx,eax
   140017dd7:	movsxd rax,DWORD PTR [rdi+0x8]
   140017ddb:	cmp    eax,DWORD PTR [r9+0x4]
   140017ddf:	jge    0x140017e25
   140017de1:	mov    rdx,QWORD PTR [r9+0x10]
   140017de5:	lea    r8,[rax+rax*2]
   140017de9:	lea    rcx,[rdx+r8*8]
   140017ded:	cmp    DWORD PTR [rcx+r9*1+0x4],0x57
   140017df3:	jne    0x140017e25
   140017df5:	inc    eax
   140017df7:	mov    rcx,rdi
   140017dfa:	mov    DWORD PTR [rdi+0x8],eax
   140017dfd:	call   0x140017dc0
   140017e02:	test   eax,eax
   140017e04:	jne    0x140017e15
   140017e06:	test   ebx,ebx
   140017e08:	jne    0x140017e15
   140017e0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e0f:	add    rsp,0x20
   140017e13:	pop    rdi
   140017e14:	ret    
   140017e15:	mov    eax,0x1
   140017e1a:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e1f:	add    rsp,0x20
   140017e23:	pop    rdi
   140017e24:	ret    
   140017e25:	mov    eax,ebx
   140017e27:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e2c:	add    rsp,0x20
   140017e30:	pop    rdi
   140017e31:	ret    
   140017e32:	int3   
   140017e33:	int3   
   140017e34:	int3   
   140017e35:	int3   
   140017e36:	int3   
   140017e37:	int3   
   140017e38:	int3   
   140017e39:	int3   
   140017e3a:	int3   
   140017e3b:	int3   
   140017e3c:	int3   
   140017e3d:	int3   
   140017e3e:	int3   
   140017e3f:	int3   
   140017e40:	mov    QWORD PTR [rsp+0x10],rbx
   140017e45:	push   rdi
   140017e46:	sub    rsp,0x20
   140017e4a:	mov    rbx,rcx
   140017e4d:	call   0x140017dc0
   140017e52:	mov    r9,QWORD PTR [rbx]
   140017e55:	mov    edi,eax
   140017e57:	movsxd rax,DWORD PTR [rbx+0x8]
   140017e5b:	cmp    eax,DWORD PTR [r9+0x4]
   140017e5f:	jge    0x140017ee8
   140017e65:	mov    rdx,QWORD PTR [r9+0x10]
   140017e69:	lea    r8,[rax+rax*2]
   140017e6d:	lea    rcx,[rdx+r8*8]
   140017e71:	cmp    DWORD PTR [rcx+r9*1+0x4],0x15
   140017e77:	jne    0x140017ee8
   140017e79:	inc    eax
   140017e7b:	mov    rcx,rbx
   140017e7e:	mov    QWORD PTR [rsp+0x30],rsi
   140017e83:	mov    DWORD PTR [rbx+0x8],eax
   140017e86:	call   0x140017e40
   140017e8b:	movsxd r8,DWORD PTR [rbx+0x8]
   140017e8f:	mov    esi,eax
   140017e91:	mov    rax,QWORD PTR [rbx]
   140017e94:	cmp    r8d,DWORD PTR [rax+0x4]
   140017e98:	jge    0x140017ed1
   140017e9a:	mov    rcx,QWORD PTR [rax+0x10]
   140017e9e:	lea    rdx,[r8+r8*2]
   140017ea2:	lea    rdx,[rcx+rdx*8]
   140017ea6:	cmp    DWORD PTR [rdx+rax*1+0x4],0x13
   140017eab:	jne    0x140017ed1
   140017ead:	lea    ecx,[r8+0x1]
   140017eb1:	mov    DWORD PTR [rbx+0x8],ecx
   140017eb4:	mov    rcx,rbx
   140017eb7:	call   0x140017e40
   140017ebc:	test   edi,edi
   140017ebe:	cmovne eax,esi
   140017ec1:	mov    rsi,QWORD PTR [rsp+0x30]
   140017ec6:	mov    rbx,QWORD PTR [rsp+0x38]
   140017ecb:	add    rsp,0x20
   140017ecf:	pop    rdi
   140017ed0:	ret    
   140017ed1:	xor    eax,eax
   140017ed3:	test   edi,edi
   140017ed5:	cmovne eax,esi
   140017ed8:	mov    rsi,QWORD PTR [rsp+0x30]
   140017edd:	mov    rbx,QWORD PTR [rsp+0x38]
   140017ee2:	add    rsp,0x20
   140017ee6:	pop    rdi
   140017ee7:	ret    
   140017ee8:	mov    eax,edi
   140017eea:	mov    rbx,QWORD PTR [rsp+0x38]
   140017eef:	add    rsp,0x20
   140017ef3:	pop    rdi
   140017ef4:	ret    
   140017ef5:	int3   
   140017ef6:	int3   
   140017ef7:	int3   
   140017ef8:	int3   
   140017ef9:	int3   
   140017efa:	int3   
   140017efb:	int3   
   140017efc:	int3   
   140017efd:	int3   
   140017efe:	int3   
   140017eff:	int3   
   140017f00:	mov    QWORD PTR [rsp+0x10],rbx
   140017f05:	mov    QWORD PTR [rsp+0x18],rbp
   140017f0a:	push   rdi
   140017f0b:	sub    rsp,0x40
   140017f0f:	mov    rdx,QWORD PTR [rip+0x761a]        # 0x14001f530
   140017f16:	mov    rax,QWORD PTR [rip+0x762b]        # 0x14001f548
   140017f1d:	mov    rbx,rcx
   140017f20:	mov    QWORD PTR [rsp+0x20],rdx
   140017f25:	mov    QWORD PTR [rsp+0x38],rdx
   140017f2a:	lea    rdx,[rcx+0x18]
   140017f2e:	lea    rcx,[rsp+0x38]
   140017f33:	xor    ebp,ebp
   140017f35:	mov    BYTE PTR [rsp+0x2c],0x1
   140017f3a:	mov    BYTE PTR [rsp+0x2d],0x1
   140017f3f:	mov    QWORD PTR [rsp+0x30],rax
   140017f44:	mov    DWORD PTR [rsp+0x28],ebp
   140017f48:	call   0x1400124e0
   140017f4d:	lea    rdx,[rsp+0x20]
   140017f52:	mov    rcx,rbx
   140017f55:	call   0x1400179c0
   140017f5a:	mov    rbx,QWORD PTR [rsp+0x20]
   140017f5f:	mov    DWORD PTR [rsp+0x28],ebp
   140017f63:	mov    edx,DWORD PTR [rbx+0x4]
   140017f66:	test   edx,edx
   140017f68:	jle    0x140017f74
   140017f6a:	mov    rax,QWORD PTR [rbx+0x10]
   140017f6e:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
   140017f72:	jmp    0x140017f76
   140017f74:	mov    ecx,ebp
   140017f76:	test   edx,edx
   140017f78:	jle    0x140017fa9
   140017f7a:	mov    rax,QWORD PTR [rbx+0x10]
   140017f7e:	mov    edx,DWORD PTR [rax+rbx*1+0x4]
   140017f82:	cmp    edx,0x1
   140017f85:	je     0x140017fc5
   140017f87:	cmp    edx,0x2
   140017f8a:	je     0x140017fc5
   140017f8c:	cmp    edx,0x92
   140017f92:	je     0x140017fc5
   140017f94:	cmp    edx,0xaa
   140017f9a:	je     0x140017fc5
   140017f9c:	cmp    edx,0xab
   140017fa2:	je     0x140017fc5
   140017fa4:	cmp    edx,0x9
   140017fa7:	je     0x140017fc5
   140017fa9:	cmp    ecx,0x3c
   140017fac:	je     0x140017fc5
   140017fae:	cmp    ecx,0x3d
   140017fb1:	je     0x140017fc5
   140017fb3:	cmp    ecx,0x45
   140017fb6:	je     0x140017fc5
   140017fb8:	cmp    ecx,0x44
   140017fbb:	je     0x140017fc5
   140017fbd:	cmp    ecx,0xa8
   140017fc3:	jne    0x140017fd6
   140017fc5:	lea    rcx,[rsp+0x20]
   140017fca:	call   0x140017e40
   140017fcf:	mov    rbx,QWORD PTR [rsp+0x20]
   140017fd4:	mov    ebp,eax
   140017fd6:	mov    rdx,QWORD PTR [rsp+0x38]
   140017fdb:	mov    eax,DWORD PTR [rdx]
   140017fdd:	test   eax,eax
   140017fdf:	je     0x140017ffa
   140017fe1:	cmp    eax,0xffffffff
   140017fe4:	je     0x140018009
   140017fe6:	lock add DWORD PTR [rdx],0xffffffff
   140017fea:	setne  al
   140017fed:	test   al,al
   140017fef:	jne    0x1400180bf
   140017ff5:	mov    rdx,QWORD PTR [rsp+0x38]
   140017ffa:	lea    rcx,[rsp+0x38]
   140017fff:	call   0x1400027a0
   140018004:	mov    rbx,QWORD PTR [rsp+0x20]
   140018009:	mov    rdx,QWORD PTR [rsp+0x30]
   14001800e:	mov    eax,DWORD PTR [rdx]
   140018010:	test   eax,eax
   140018012:	je     0x14001802d
   140018014:	cmp    eax,0xffffffff
   140018017:	je     0x14001803c
   140018019:	lock add DWORD PTR [rdx],0xffffffff
   14001801d:	setne  al
   140018020:	test   al,al
   140018022:	jne    0x1400180c9
   140018028:	mov    rdx,QWORD PTR [rsp+0x30]
   14001802d:	lea    rcx,[rsp+0x30]
   140018032:	call   0x140002480
   140018037:	mov    rbx,QWORD PTR [rsp+0x20]
   14001803c:	mov    eax,DWORD PTR [rbx]
   14001803e:	test   eax,eax
   140018040:	je     0x140018057
   140018042:	cmp    eax,0xffffffff
   140018045:	je     0x1400180ad
   140018047:	lock add DWORD PTR [rbx],0xffffffff
   14001804b:	setne  al
   14001804e:	test   al,al
   140018050:	jne    0x1400180ad
   140018052:	mov    rbx,QWORD PTR [rsp+0x20]
   140018057:	mov    rdx,QWORD PTR [rbx+0x10]
   14001805b:	movsxd rax,DWORD PTR [rbx+0x4]
   14001805f:	mov    QWORD PTR [rsp+0x50],rsi
   140018064:	lea    rcx,[rax+rax*2]
   140018068:	lea    rdi,[rdx+rbx*1]
   14001806c:	lea    rsi,[rdx+rcx*8]
   140018070:	add    rsi,rbx
   140018073:	cmp    rdi,rsi
   140018076:	je     0x140018096
   140018078:	nop    DWORD PTR [rax+rax*1+0x0]
   140018080:	mov    rcx,rdi
   140018083:	add    rdi,0x18
   140018087:	add    rcx,0x8
   14001808b:	call   QWORD PTR [rip+0x7527]        # 0x14001f5b8
   140018091:	cmp    rdi,rsi
   140018094:	jne    0x140018080
   140018096:	mov    edx,0x18
   14001809b:	mov    rcx,rbx
   14001809e:	lea    r8d,[rdx-0x10]
   1400180a2:	call   QWORD PTR [rip+0x7468]        # 0x14001f510
   1400180a8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400180ad:	mov    rbx,QWORD PTR [rsp+0x58]
   1400180b2:	mov    eax,ebp
   1400180b4:	mov    rbp,QWORD PTR [rsp+0x60]
   1400180b9:	add    rsp,0x40
   1400180bd:	pop    rdi
   1400180be:	ret    
   1400180bf:	mov    rbx,QWORD PTR [rsp+0x20]
   1400180c4:	jmp    0x140018009
   1400180c9:	mov    rbx,QWORD PTR [rsp+0x20]
   1400180ce:	jmp    0x14001803c
   1400180d3:	int3   
   1400180d4:	int3   
   1400180d5:	int3   
   1400180d6:	int3   
   1400180d7:	int3   
   1400180d8:	int3   
   1400180d9:	int3   
   1400180da:	int3   
   1400180db:	int3   
   1400180dc:	int3   
   1400180dd:	int3   
   1400180de:	int3   
   1400180df:	int3   
   1400180e0:	mov    QWORD PTR [rsp+0x18],r8
   1400180e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400180ea:	mov    QWORD PTR [rsp+0x8],rcx
   1400180ef:	push   rbx
   1400180f0:	push   rbp
   1400180f1:	push   rsi
   1400180f2:	push   rdi
   1400180f3:	sub    rsp,0x298
   1400180fa:	mov    rbx,rcx
   1400180fd:	add    rcx,0x18
   140018101:	xor    edi,edi
   140018103:	mov    QWORD PTR [rsp+0x188],rcx
   14001810b:	mov    rbp,r8
   14001810e:	mov    DWORD PTR [rsp+0x4c],edi
   140018112:	call   0x1400048d0
   140018117:	mov    rax,QWORD PTR [rbx]
   14001811a:	mov    r11,QWORD PTR [rbp+0x0]
   14001811e:	mov    r8d,DWORD PTR [rax+0x4]
   140018122:	mov    eax,DWORD PTR [r11+0x8]
   140018126:	mov    edx,DWORD PTR [r11+0x4]
   14001812a:	btr    eax,0x1f
   14001812e:	add    r8d,edx
   140018131:	cmp    r8d,eax
   140018134:	jle    0x140018148
   140018136:	mov    r9d,edi
   140018139:	mov    rcx,rbp
   14001813c:	mov    DWORD PTR [rsp+0x1f0],edi
   140018143:	call   0x140011cb0
   140018148:	mov    rax,QWORD PTR [rbp+0x0]
   14001814c:	mov    ecx,DWORD PTR [rax]
   14001814e:	cmp    ecx,0x1
   140018151:	je     0x140018157
   140018153:	test   ecx,ecx
   140018155:	jne    0x14001817d
   140018157:	mov    r9d,0x2
   14001815d:	xor    r8d,r8d
   140018160:	lea    edx,[r9+0x6]
   140018164:	lea    ecx,[rdx+0x10]
   140018167:	call   QWORD PTR [rip+0x73ab]        # 0x14001f518
   14001816d:	mov    rcx,QWORD PTR [rbp+0x0]
   140018171:	cmp    rcx,rax
   140018174:	je     0x14001817d
   140018176:	or     DWORD PTR [rcx+0x8],0x80000000
   14001817d:	lea    rsi,[rbx+0x8]
   140018181:	lea    r8,[rip+0xfffffffffffe7e78]        # 0x140000000
   140018188:	jmp    0x1400181a0
   14001818a:	lea    r8,[rip+0xfffffffffffe7e6f]        # 0x140000000
   140018191:	mov    rbx,QWORD PTR [rsp+0x2c0]
   140018199:	nop    DWORD PTR [rax+0x0]
   1400181a0:	mov    rdx,QWORD PTR [rbx]
   1400181a3:	movsxd rcx,DWORD PTR [rsi]
   1400181a6:	mov    eax,DWORD PTR [rdx+0x4]
   1400181a9:	cmp    ecx,eax
   1400181ab:	jge    0x14001963b
   1400181b1:	lea    eax,[rcx+0x1]
   1400181b4:	lea    rcx,[rcx+rcx*2]
   1400181b8:	mov    DWORD PTR [rsi],eax
   1400181ba:	mov    rax,QWORD PTR [rdx+0x10]
   1400181be:	lea    rcx,[rax+rcx*8]
   1400181c2:	mov    ebp,DWORD PTR [rcx+rdx*1+0x4]
   1400181c6:	mov    DWORD PTR [rsp+0x48],ebp
   1400181ca:	lea    eax,[rbp-0x1]
   1400181cd:	cmp    eax,0xa6
   1400181d2:	ja     0x14001960a
   1400181d8:	cdqe   
   1400181da:	movzx  eax,BYTE PTR [r8+rax*1+0x1971c]
   1400181e3:	mov    ecx,DWORD PTR [r8+rax*4+0x196f0]
   1400181eb:	add    rcx,r8
   1400181ee:	jmp    rcx
   1400181f0:	movsxd rax,DWORD PTR [rsi]
   1400181f3:	lea    rcx,[rax+rax*2]
   1400181f7:	mov    rax,QWORD PTR [rdx+0x10]
   1400181fb:	lea    rcx,[rax+rcx*8]
   1400181ff:	mov    eax,DWORD PTR [rcx+rdx*1-0x18]
   140018203:	lea    rcx,[rsp+0x40]
   140018208:	mov    DWORD PTR [rsp+0x88],eax
   14001820f:	call   QWORD PTR [rip+0x73ab]        # 0x14001f5c0
   140018215:	mov    r11,QWORD PTR [rbx]
   140018218:	movsxd rax,DWORD PTR [rsi]
   14001821b:	cmp    eax,DWORD PTR [r11+0x4]
   14001821f:	jge    0x140018235
   140018221:	lea    rcx,[rax+rax*2]
   140018225:	mov    rax,QWORD PTR [r11+0x10]
   140018229:	lea    rcx,[rax+rcx*8]
   14001822d:	cmp    DWORD PTR [rcx+r11*1+0x4],0x4
   140018233:	je     0x14001824c
   140018235:	lea    rcx,[rsp+0x40]
   14001823a:	call   QWORD PTR [rip+0x7378]        # 0x14001f5b8
   140018240:	lea    r8,[rip+0xfffffffffffe7db9]        # 0x140000000
   140018247:	jmp    0x1400181a0
   14001824c:	inc    DWORD PTR [rsi]
   14001824e:	mov    eax,DWORD PTR [rsi]
   140018250:	dec    eax
   140018252:	movsxd rcx,eax
   140018255:	mov    rax,QWORD PTR [r11+0x10]
   140018259:	lea    rdx,[rcx+rcx*2]
   14001825d:	lea    r8,[rax+rdx*8]
   140018261:	lea    rdx,[rsp+0xf0]
   140018269:	mov    r9d,DWORD PTR [r8+r11*1+0x14]
   14001826e:	lea    rcx,[r8+r11*1+0x8]
   140018273:	mov    r8d,DWORD PTR [r8+r11*1+0x10]
   140018278:	call   QWORD PTR [rip+0x7352]        # 0x14001f5d0
   14001827e:	lea    rcx,[rsp+0xf0]
   140018286:	mov    dl,0x22
   140018288:	call   QWORD PTR [rip+0x70da]        # 0x14001f368
   14001828e:	lea    rcx,[rsp+0xf0]
   140018296:	movzx  ebp,al
   140018299:	call   QWORD PTR [rip+0x7319]        # 0x14001f5b8
   14001829f:	mov    ecx,DWORD PTR [rsi]
   1400182a1:	mov    r11,QWORD PTR [rbx]
   1400182a4:	dec    ecx
   1400182a6:	movsxd rcx,ecx
   1400182a9:	lea    rdx,[rcx+rcx*2]
   1400182ad:	mov    rcx,QWORD PTR [r11+0x10]
   1400182b1:	lea    rcx,[rcx+rdx*8]
   1400182b5:	lea    rdx,[rsp+0xd0]
   1400182bd:	add    rcx,r11
   1400182c0:	add    rcx,0x8
   1400182c4:	mov    r9d,DWORD PTR [rcx+0xc]
   1400182c8:	mov    r8d,DWORD PTR [rcx+0x8]
   1400182cc:	sub    r9d,0x2
   1400182d0:	inc    r8d
   1400182d3:	call   QWORD PTR [rip+0x72f7]        # 0x14001f5d0
   1400182d9:	lea    rdx,[rsp+0xd0]
   1400182e1:	lea    rcx,[rsp+0x40]
   1400182e6:	call   QWORD PTR [rip+0x726c]        # 0x14001f558
   1400182ec:	lea    rcx,[rsp+0xd0]
   1400182f4:	call   QWORD PTR [rip+0x72be]        # 0x14001f5b8
   1400182fa:	mov    r11,QWORD PTR [rbx]
   1400182fd:	nop    DWORD PTR [rax]
   140018300:	movsxd rcx,DWORD PTR [rsi]
   140018303:	cmp    ecx,DWORD PTR [r11+0x4]
   140018307:	jge    0x140018325
   140018309:	lea    eax,[rcx+0x1]
   14001830c:	lea    rcx,[rcx+rcx*2]
   140018310:	mov    DWORD PTR [rsi],eax
   140018312:	mov    rax,QWORD PTR [r11+0x10]
   140018316:	lea    rcx,[rax+rcx*8]
   14001831a:	cmp    DWORD PTR [rcx+r11*1+0x4],0x99
   140018323:	jne    0x140018300
   140018325:	lea    rcx,[rsp+0x50]
   14001832a:	call   QWORD PTR [rip+0x6f20]        # 0x14001f250
   140018330:	test   bpl,bpl
   140018333:	je     0x1400183f2
   140018339:	lea    rcx,[rsp+0x40]
   14001833e:	call   QWORD PTR [rip+0x72b4]        # 0x14001f5f8
   140018344:	lea    rcx,[rsp+0x1a8]
   14001834c:	or     r8d,0xffffffff
   140018350:	mov    rdx,rax
   140018353:	call   QWORD PTR [rip+0x6f47]        # 0x14001f2a0
   140018359:	mov    rcx,QWORD PTR [rsp+0x2c8]
   140018361:	mov    rbx,rax
   140018364:	call   QWORD PTR [rip+0x728e]        # 0x14001f5f8
   14001836a:	lea    rcx,[rsp+0x170]
   140018372:	mov    rdx,rax
   140018375:	or     r8d,0xffffffff
   140018379:	call   QWORD PTR [rip+0x6f21]        # 0x14001f2a0
   14001837f:	lea    rcx,[rsp+0x208]
   140018387:	mov    rdx,rax
   14001838a:	call   QWORD PTR [rip+0x6f08]        # 0x14001f298
   140018390:	lea    rdx,[rsp+0x180]
   140018398:	mov    rcx,rax
   14001839b:	call   QWORD PTR [rip+0x6eef]        # 0x14001f290
   1400183a1:	lea    rcx,[rsp+0x50]
   1400183a6:	mov    r8,rbx
   1400183a9:	mov    rdx,rax
   1400183ac:	call   QWORD PTR [rip+0x6eae]        # 0x14001f260
   1400183b2:	lea    rcx,[rsp+0x180]
   1400183ba:	call   QWORD PTR [rip+0x6ec0]        # 0x14001f280
   1400183c0:	lea    rcx,[rsp+0x208]
   1400183c8:	call   QWORD PTR [rip+0x6eaa]        # 0x14001f278
   1400183ce:	lea    rcx,[rsp+0x170]
   1400183d6:	call   QWORD PTR [rip+0x714c]        # 0x14001f528
   1400183dc:	lea    rcx,[rsp+0x1a8]
   1400183e4:	call   QWORD PTR [rip+0x713e]        # 0x14001f528
   1400183ea:	mov    rbx,QWORD PTR [rsp+0x2c0]
   1400183f2:	mov    rax,QWORD PTR [rbx+0x10]
   1400183f6:	mov    DWORD PTR [rsp+0x48],edi
   1400183fa:	mov    rbp,rdi
   1400183fd:	mov    ecx,DWORD PTR [rax+0xc]
   140018400:	sub    ecx,DWORD PTR [rax+0x8]
   140018403:	test   ecx,ecx
   140018405:	jle    0x1400186cb
   14001840b:	nop    DWORD PTR [rax+rax*1+0x0]
   140018410:	lea    rcx,[rsp+0x50]
   140018415:	call   QWORD PTR [rip+0x6e55]        # 0x14001f270
   14001841b:	test   al,al
   14001841d:	jne    0x1400186cb
   140018423:	mov    rcx,QWORD PTR [rbx+0x10]
   140018427:	movsxd rax,DWORD PTR [rcx+0x8]
   14001842b:	add    rax,rbp
   14001842e:	mov    rbx,QWORD PTR [rcx+rax*8+0x10]
   140018433:	cmp    BYTE PTR [rbx+0x8],0x0
   140018437:	je     0x1400185d9
   14001843d:	lea    rcx,[rsp+0x40]
   140018442:	xor    r8d,r8d
   140018445:	mov    dl,0x2f
   140018447:	call   QWORD PTR [rip+0x71b3]        # 0x14001f600
   14001844d:	mov    DWORD PTR [rsp+0x58],eax
   140018451:	cmp    eax,0xffffffff
   140018454:	je     0x1400186a1
   14001845a:	lea    rdx,[rsp+0xb0]
   140018462:	lea    rcx,[rsp+0x40]
   140018467:	mov    r8d,eax
   14001846a:	call   QWORD PTR [rip+0x7140]        # 0x14001f5b0
   140018470:	lea    rdx,[rip+0xe239]        # 0x1400266b0
   140018477:	lea    rcx,[rsp+0xb0]
   14001847f:	call   QWORD PTR [rip+0x70fb]        # 0x14001f580
   140018485:	lea    rax,[rsp+0x2d8]
   14001848d:	lea    rdx,[rsp+0x118]
   140018495:	mov    QWORD PTR [rsp+0x248],rax
   14001849d:	lea    rax,[rsp+0x240]
   1400184a5:	lea    rcx,[rsp+0x260]
   1400184ad:	mov    QWORD PTR [rsp+0x260],rax
   1400184b5:	lea    rax,[rsp+0xb0]
   1400184bd:	mov    BYTE PTR [rsp+0x2d8],0x2f
   1400184c5:	mov    QWORD PTR [rsp+0x268],rax
   1400184cd:	mov    QWORD PTR [rsp+0x240],rbx
   1400184d5:	call   0x140002810
   1400184da:	lea    rdx,[rsp+0x118]
   1400184e2:	lea    rcx,[rsp+0x1b8]
   1400184ea:	call   QWORD PTR [rip+0x70e8]        # 0x14001f5d8
   1400184f0:	mov    rcx,rax
   1400184f3:	call   QWORD PTR [rip+0x70ff]        # 0x14001f5f8
   1400184f9:	lea    rcx,[rsp+0x1c0]
   140018501:	or     r8d,0xffffffff
   140018505:	mov    rdx,rax
   140018508:	call   QWORD PTR [rip+0x6d92]        # 0x14001f2a0
   14001850e:	lea    rcx,[rsp+0xd8]
   140018516:	mov    rdx,rax
   140018519:	call   QWORD PTR [rip+0x6d49]        # 0x14001f268
   14001851f:	mov    r8d,DWORD PTR [rsp+0x58]
   140018524:	lea    rdx,[rsp+0x1b0]
   14001852c:	lea    rcx,[rsp+0x40]
   140018531:	inc    r8d
   140018534:	or     r9d,0xffffffff
   140018538:	call   QWORD PTR [rip+0x7092]        # 0x14001f5d0
   14001853e:	mov    rcx,rax
   140018541:	call   QWORD PTR [rip+0x70b1]        # 0x14001f5f8
   140018547:	lea    rcx,[rsp+0x1a0]
   14001854f:	or     r8d,0xffffffff
   140018553:	mov    rdx,rax
   140018556:	call   QWORD PTR [rip+0x6d44]        # 0x14001f2a0
   14001855c:	lea    rdx,[rsp+0xd8]
   140018564:	lea    rcx,[rsp+0x50]
   140018569:	mov    r8,rax
   14001856c:	call   QWORD PTR [rip+0x6cee]        # 0x14001f260
   140018572:	lea    rcx,[rsp+0x1a0]
   14001857a:	call   QWORD PTR [rip+0x6fa8]        # 0x14001f528
   140018580:	lea    rcx,[rsp+0x1b0]
   140018588:	call   QWORD PTR [rip+0x702a]        # 0x14001f5b8
   14001858e:	lea    rcx,[rsp+0xd8]
   140018596:	call   QWORD PTR [rip+0x6ce4]        # 0x14001f280
   14001859c:	lea    rcx,[rsp+0x1c0]
   1400185a4:	call   QWORD PTR [rip+0x6f7e]        # 0x14001f528
   1400185aa:	lea    rcx,[rsp+0x1b8]
   1400185b2:	call   QWORD PTR [rip+0x7000]        # 0x14001f5b8
   1400185b8:	lea    rcx,[rsp+0x118]
   1400185c0:	call   QWORD PTR [rip+0x6ff2]        # 0x14001f5b8
   1400185c6:	lea    rcx,[rsp+0xb0]
   1400185ce:	call   QWORD PTR [rip+0x6fe4]        # 0x14001f5b8
   1400185d4:	jmp    0x140018668
   1400185d9:	mov    rcx,rbx
   1400185dc:	call   QWORD PTR [rip+0x7016]        # 0x14001f5f8
   1400185e2:	lea    rcx,[rsp+0x1c8]
   1400185ea:	or     r8d,0xffffffff
   1400185ee:	mov    rdx,rax
   1400185f1:	call   QWORD PTR [rip+0x6ca9]        # 0x14001f2a0
   1400185f7:	lea    rcx,[rsp+0xe0]
   1400185ff:	mov    rdx,rax
   140018602:	call   QWORD PTR [rip+0x6c60]        # 0x14001f268
   140018608:	lea    rcx,[rsp+0x40]
   14001860d:	call   QWORD PTR [rip+0x6fe5]        # 0x14001f5f8
   140018613:	lea    rcx,[rsp+0x210]
   14001861b:	or     r8d,0xffffffff
   14001861f:	mov    rdx,rax
   140018622:	call   QWORD PTR [rip+0x6c78]        # 0x14001f2a0
   140018628:	lea    rdx,[rsp+0xe0]
   140018630:	lea    rcx,[rsp+0x50]
   140018635:	mov    r8,rax
   140018638:	call   QWORD PTR [rip+0x6c22]        # 0x14001f260
   14001863e:	lea    rcx,[rsp+0x210]
   140018646:	call   QWORD PTR [rip+0x6edc]        # 0x14001f528
   14001864c:	lea    rcx,[rsp+0xe0]
   140018654:	call   QWORD PTR [rip+0x6c26]        # 0x14001f280
   14001865a:	lea    rcx,[rsp+0x1c8]
   140018662:	call   QWORD PTR [rip+0x6ec0]        # 0x14001f528
   140018668:	lea    rcx,[rsp+0x50]
   14001866d:	call   QWORD PTR [rip+0x6be5]        # 0x14001f258
   140018673:	test   al,al
   140018675:	je     0x1400186a1
   140018677:	lea    rcx,[rsp+0x220]
   14001867f:	call   QWORD PTR [rip+0x6bcb]        # 0x14001f250
   140018685:	lea    rcx,[rsp+0x50]
   14001868a:	mov    rdx,rax
   14001868d:	call   QWORD PTR [rip+0x6bb5]        # 0x14001f248
   140018693:	lea    rcx,[rsp+0x220]
   14001869b:	call   QWORD PTR [rip+0x6bd7]        # 0x14001f278
   1400186a1:	mov    ebx,DWORD PTR [rsp+0x48]
   1400186a5:	mov    rdx,QWORD PTR [rsp+0x2c0]
   1400186ad:	inc    rbp
   1400186b0:	mov    rax,QWORD PTR [rdx+0x10]
   1400186b4:	inc    ebx
   1400186b6:	mov    ecx,DWORD PTR [rax+0xc]
   1400186b9:	mov    DWORD PTR [rsp+0x48],ebx
   1400186bd:	sub    ecx,DWORD PTR [rax+0x8]
   1400186c0:	cmp    ebx,ecx
   1400186c2:	mov    rbx,rdx
   1400186c5:	jl     0x140018410
   1400186cb:	lea    rcx,[rsp+0x50]
   1400186d0:	call   QWORD PTR [rip+0x6b9a]        # 0x14001f270
   1400186d6:	test   al,al
   1400186d8:	je     0x1400188e3
   1400186de:	lea    rcx,[rsp+0x50]
   1400186e3:	call   QWORD PTR [rip+0x6b6f]        # 0x14001f258
   1400186e9:	test   al,al
   1400186eb:	jne    0x1400188e3
   1400186f1:	lea    rdx,[rsp+0x218]
   1400186f9:	lea    rcx,[rsp+0x50]
   1400186fe:	call   QWORD PTR [rip+0x6b3c]        # 0x14001f240
   140018704:	lea    rdx,[rsp+0x1d8]
   14001870c:	mov    rcx,rax
   14001870f:	call   QWORD PTR [rip+0x6c43]        # 0x14001f358
   140018715:	lea    rcx,[rsp+0x40]
   14001871a:	mov    rdx,rax
   14001871d:	call   QWORD PTR [rip+0x6e35]        # 0x14001f558
   140018723:	lea    rcx,[rsp+0x1d8]
   14001872b:	call   QWORD PTR [rip+0x6e87]        # 0x14001f5b8
   140018731:	lea    rcx,[rsp+0x218]
   140018739:	call   QWORD PTR [rip+0x6de9]        # 0x14001f528
   14001873f:	mov    rcx,QWORD PTR [rbx+0x28]
   140018743:	mov    eax,edi
   140018745:	cmp    DWORD PTR [rcx+0x20],0x0
   140018749:	je     0x140018759
   14001874b:	mov    edx,DWORD PTR [rcx+0x24]
   14001874e:	lea    rcx,[rsp+0x40]
   140018753:	call   QWORD PTR [rip+0x6d77]        # 0x14001f4d0
   140018759:	lea    rdx,[rsp+0x40]
   14001875e:	lea    rcx,[rbx+0x28]
   140018762:	mov    r8d,eax
   140018765:	call   0x1400025e0
   14001876a:	mov    rcx,QWORD PTR [rbx+0x28]
   14001876e:	cmp    QWORD PTR [rax],rcx
   140018771:	jne    0x1400188e3
   140018777:	lea    r8,[rsp+0x40]
   14001877c:	lea    rdx,[rsp+0x270]
   140018784:	lea    rcx,[rbx+0x28]
   140018788:	call   0x140008060
   14001878d:	lea    rcx,[rsp+0x40]
   140018792:	call   QWORD PTR [rip+0x6e60]        # 0x14001f5f8
   140018798:	lea    rcx,[rsp+0x1e8]
   1400187a0:	or     r8d,0xffffffff
   1400187a4:	mov    rdx,rax
   1400187a7:	call   QWORD PTR [rip+0x6af3]        # 0x14001f2a0
   1400187ad:	lea    rcx,[rsp+0xa0]
   1400187b5:	mov    rdx,rax
   1400187b8:	call   QWORD PTR [rip+0x6a7a]        # 0x14001f238
   1400187be:	lea    rcx,[rsp+0x1e8]
   1400187c6:	call   QWORD PTR [rip+0x6d5c]        # 0x14001f528
   1400187cc:	lea    rcx,[rsp+0xa0]
   1400187d4:	mov    edx,0x1
   1400187d9:	mov    DWORD PTR [rsp+0x200],0x1
   1400187e4:	call   QWORD PTR [rip+0x6a46]        # 0x14001f230
   1400187ea:	lea    rcx,[rsp+0xa0]
   1400187f2:	test   al,al
   1400187f4:	je     0x1400188dd
   1400187fa:	mov    rax,QWORD PTR [rsp+0xa0]
   140018802:	call   QWORD PTR [rax+0x78]
   140018805:	lea    rcx,[rsp+0xa0]
   14001880d:	xor    r9d,r9d
   140018810:	mov    r8,rax
   140018813:	xor    edx,edx
   140018815:	mov    rbp,rax
   140018818:	call   QWORD PTR [rip+0x6af2]        # 0x14001f310
   14001881e:	test   rax,rax
   140018821:	je     0x140018842
   140018823:	or     DWORD PTR [rsp+0x4c],0x1
   140018828:	lea    rcx,[rsp+0x1f8]
   140018830:	mov    r8d,ebp
   140018833:	mov    rdx,rax
   140018836:	call   QWORD PTR [rip+0x6acc]        # 0x14001f308
   14001883c:	mov    ebp,DWORD PTR [rsp+0x4c]
   140018840:	jmp    0x140018863
   140018842:	mov    ebp,DWORD PTR [rsp+0x4c]
   140018846:	lea    rdx,[rsp+0x230]
   14001884e:	lea    rcx,[rsp+0xa0]
   140018856:	or     ebp,0x2
   140018859:	mov    DWORD PTR [rsp+0x4c],ebp
   14001885d:	call   QWORD PTR [rip+0x69c5]        # 0x14001f228
   140018863:	lea    rcx,[rsp+0x80]
   14001886b:	mov    rdx,rax
   14001886e:	call   QWORD PTR [rip+0x6d64]        # 0x14001f5d8
   140018874:	test   bpl,0x2
   140018878:	je     0x14001888f
   14001887a:	and    ebp,0xfffffffd
   14001887d:	lea    rcx,[rsp+0x230]
   140018885:	mov    DWORD PTR [rsp+0x4c],ebp
   140018889:	call   QWORD PTR [rip+0x6d29]        # 0x14001f5b8
   14001888f:	test   bpl,0x1
   140018893:	je     0x1400188aa
   140018895:	and    ebp,0xfffffffe
   140018898:	lea    rcx,[rsp+0x1f8]
   1400188a0:	mov    DWORD PTR [rsp+0x4c],ebp
   1400188a4:	call   QWORD PTR [rip+0x6d0e]        # 0x14001f5b8
   1400188aa:	lea    rcx,[rsp+0xa0]
   1400188b2:	call   QWORD PTR [rip+0x6a98]        # 0x14001f350
   1400188b8:	mov    r11,QWORD PTR [rsp+0x80]
   1400188c0:	cmp    DWORD PTR [r11+0x4],0x0
   1400188c5:	jne    0x1400188f3
   1400188c7:	lea    rcx,[rsp+0x80]
   1400188cf:	call   QWORD PTR [rip+0x6ce3]        # 0x14001f5b8
   1400188d5:	lea    rcx,[rsp+0xa0]
   1400188dd:	call   QWORD PTR [rip+0x693d]        # 0x14001f220
   1400188e3:	lea    rcx,[rsp+0x50]
   1400188e8:	call   QWORD PTR [rip+0x698a]        # 0x14001f278
   1400188ee:	jmp    0x140018235
   1400188f3:	lea    rcx,[rsp+0xc8]
   1400188fb:	mov    rdx,rbx
   1400188fe:	call   0x140011970
   140018903:	mov    eax,DWORD PTR [rsi]
   140018905:	lea    rdx,[rsp+0x80]
   14001890d:	lea    rcx,[rsp+0x178]
   140018915:	mov    DWORD PTR [rsp+0x58],eax
   140018919:	call   0x140010ff0
   14001891e:	lea    rcx,[rsp+0x80]
   140018926:	mov    rdx,rax
   140018929:	call   QWORD PTR [rip+0x6c29]        # 0x14001f558
   14001892f:	lea    rcx,[rsp+0x178]
   140018937:	call   QWORD PTR [rip+0x6c7b]        # 0x14001f5b8
   14001893d:	xor    r9d,r9d
   140018940:	lea    rdx,[rsp+0x80]
   140018948:	lea    r8d,[r9+0x1]
   14001894c:	lea    rcx,[rsp+0xe8]
   140018954:	call   0x140012a50
   140018959:	mov    rcx,rbx
   14001895c:	mov    rdx,rax
   14001895f:	call   0x140011a40
   140018964:	mov    r8,QWORD PTR [rsp+0xe8]
   14001896c:	mov    eax,DWORD PTR [r8]
   14001896f:	mov    QWORD PTR [rsp+0x78],r8
   140018974:	test   eax,eax
   140018976:	je     0x140018996
   140018978:	cmp    eax,0xffffffff
   14001897b:	je     0x1400189e4
   14001897d:	lock add DWORD PTR [r8],0xffffffff
   140018982:	setne  al
   140018985:	test   al,al
   140018987:	jne    0x1400189e4
   140018989:	mov    r8,QWORD PTR [rsp+0xe8]
   140018991:	mov    QWORD PTR [rsp+0x78],r8
   140018996:	mov    rdx,QWORD PTR [r8+0x10]
   14001899a:	movsxd rax,DWORD PTR [r8+0x4]
   14001899e:	lea    rcx,[rax+rax*2]
   1400189a2:	lea    rbx,[r8+rdx*1]
   1400189a6:	lea    rbp,[r8+rcx*8]
   1400189aa:	add    rbp,rdx
   1400189ad:	cmp    rbx,rbp
   1400189b0:	je     0x1400189c8
   1400189b2:	mov    rcx,rbx
   1400189b5:	add    rbx,0x18
   1400189b9:	add    rcx,0x8
   1400189bd:	call   QWORD PTR [rip+0x6bf5]        # 0x14001f5b8
   1400189c3:	cmp    rbx,rbp
   1400189c6:	jne    0x1400189b2
   1400189c8:	mov    rcx,QWORD PTR [rsp+0x78]
   1400189cd:	mov    edx,0x18
   1400189d2:	lea    r8d,[rdx-0x10]
   1400189d6:	call   QWORD PTR [rip+0x6b34]        # 0x14001f510
   1400189dc:	mov    rbx,QWORD PTR [rsp+0x2c0]
   1400189e4:	lea    rcx,[rsp+0x80]
   1400189ec:	call   QWORD PTR [rip+0x6956]        # 0x14001f348
   1400189f2:	lea    rdx,[rsp+0x40]
   1400189f7:	lea    rcx,[rsp+0x128]
   1400189ff:	mov    DWORD PTR [rsi],edi
   140018a01:	mov    DWORD PTR [rsp+0x120],edi
   140018a08:	mov    DWORD PTR [rsp+0x124],0x8e
   140018a13:	call   QWORD PTR [rip+0x6bbf]        # 0x14001f5d8
   140018a19:	mov    rax,QWORD PTR [rsp+0x128]
   140018a21:	mov    rbp,QWORD PTR [rsp+0x2d0]
   140018a29:	mov    DWORD PTR [rsp+0x130],edi
   140018a30:	mov    ecx,DWORD PTR [rax+0x4]
   140018a33:	lea    rdx,[rsp+0x120]
   140018a3b:	mov    DWORD PTR [rsp+0x134],ecx
   140018a42:	mov    rcx,rbp
   140018a45:	call   0x140012170
   140018a4a:	lea    rcx,[rsp+0x128]
   140018a52:	call   QWORD PTR [rip+0x6b60]        # 0x14001f5b8
   140018a58:	lea    rdx,[rsp+0x40]
   140018a5d:	mov    r8,rbp
   140018a60:	mov    rcx,rbx
   140018a63:	call   0x1400180e0
   140018a68:	mov    r11d,DWORD PTR [rsp+0x88]
   140018a70:	lea    rdx,[rsp+0x40]
   140018a75:	lea    rcx,[rsp+0x140]
   140018a7d:	mov    DWORD PTR [rsp+0x138],r11d
   140018a85:	mov    DWORD PTR [rsp+0x13c],0x8f
   140018a90:	call   QWORD PTR [rip+0x6b42]        # 0x14001f5d8
   140018a96:	mov    rax,QWORD PTR [rsp+0x140]
   140018a9e:	mov    DWORD PTR [rsp+0x148],edi
   140018aa5:	mov    ecx,DWORD PTR [rax+0x4]
   140018aa8:	lea    rdx,[rsp+0x138]
   140018ab0:	mov    DWORD PTR [rsp+0x14c],ecx
   140018ab7:	mov    rcx,rbp
   140018aba:	call   0x140012170
   140018abf:	lea    rcx,[rsp+0x140]
   140018ac7:	call   QWORD PTR [rip+0x6aeb]        # 0x14001f5b8
   140018acd:	lea    rdx,[rsp+0xc8]
   140018ad5:	mov    rcx,rbx
   140018ad8:	call   0x140011a40
   140018add:	mov    r11d,DWORD PTR [rsp+0x58]
   140018ae2:	mov    rbx,QWORD PTR [rsp+0xc8]
   140018aea:	mov    DWORD PTR [rsi],r11d
   140018aed:	mov    eax,DWORD PTR [rbx]
   140018aef:	test   eax,eax
   140018af1:	je     0x140018b0b
   140018af3:	cmp    eax,0xffffffff
   140018af6:	je     0x140018b5a
   140018af8:	lock add DWORD PTR [rbx],0xffffffff
   140018afc:	setne  al
   140018aff:	test   al,al
   140018b01:	jne    0x140018b5a
   140018b03:	mov    rbx,QWORD PTR [rsp+0xc8]
   140018b0b:	mov    rdx,QWORD PTR [rbx+0x10]
   140018b0f:	movsxd rax,DWORD PTR [rbx+0x4]
   140018b13:	lea    rcx,[rax+rax*2]
   140018b17:	lea    rdi,[rbx+rdx*1]
   140018b1b:	lea    rbp,[rbx+rcx*8]
   140018b1f:	add    rbp,rdx
   140018b22:	cmp    rdi,rbp
   140018b25:	je     0x140018b46
   140018b27:	nop    WORD PTR [rax+rax*1+0x0]
   140018b30:	mov    rcx,rdi
   140018b33:	add    rdi,0x18
   140018b37:	add    rcx,0x8
   140018b3b:	call   QWORD PTR [rip+0x6a77]        # 0x14001f5b8
   140018b41:	cmp    rdi,rbp
   140018b44:	jne    0x140018b30
   140018b46:	mov    edx,0x18
   140018b4b:	mov    rcx,rbx
   140018b4e:	lea    r8d,[rdx-0x10]
   140018b52:	call   QWORD PTR [rip+0x69b8]        # 0x14001f510
   140018b58:	xor    edi,edi
   140018b5a:	lea    rcx,[rsp+0x80]
   140018b62:	call   QWORD PTR [rip+0x6a50]        # 0x14001f5b8
   140018b68:	lea    rcx,[rsp+0xa0]
   140018b70:	call   QWORD PTR [rip+0x66aa]        # 0x14001f220
   140018b76:	lea    rcx,[rsp+0x50]
   140018b7b:	call   QWORD PTR [rip+0x66f7]        # 0x14001f278
   140018b81:	lea    rcx,[rsp+0x40]
   140018b86:	call   QWORD PTR [rip+0x6a2c]        # 0x14001f5b8
   140018b8c:	jmp    0x14001818a
   140018b91:	mov    r8,rdx
   140018b94:	movsxd rdx,DWORD PTR [rsi]
   140018b97:	cmp    edx,DWORD PTR [r8+0x4]
   140018b9b:	jge    0x140018bb8
   140018b9d:	mov    rax,QWORD PTR [r8+0x10]
   140018ba1:	lea    rcx,[rdx+rdx*2]
   140018ba5:	lea    rcx,[rax+rcx*8]
   140018ba9:	cmp    DWORD PTR [rcx+r8*1+0x4],0x1
   140018baf:	jne    0x140018bb8
   140018bb1:	lea    eax,[rdx+0x1]
   140018bb4:	mov    DWORD PTR [rsi],eax
   140018bb6:	jmp    0x140018bc2
   140018bb8:	xor    edx,edx
   140018bba:	mov    rcx,rbx
   140018bbd:	call   0x140019c50
   140018bc2:	mov    r8,QWORD PTR [rbx]
   140018bc5:	mov    eax,DWORD PTR [rsi]
   140018bc7:	dec    eax
   140018bc9:	cdqe   
   140018bcb:	lea    rcx,[rax+rax*2]
   140018bcf:	mov    rax,QWORD PTR [r8+0x10]
   140018bd3:	lea    rdx,[rax+rcx*8]
   140018bd7:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140018bdc:	lea    rcx,[rdx+r8*1+0x8]
   140018be1:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   140018be6:	lea    rdx,[rsp+0xc0]
   140018bee:	call   QWORD PTR [rip+0x69dc]        # 0x14001f5d0
   140018bf4:	mov    rbx,QWORD PTR [rip+0x6935]        # 0x14001f530
   140018bfb:	mov    rbp,QWORD PTR [rsp+0x2c0]
   140018c03:	mov    rdx,QWORD PTR [rbp+0x0]
   140018c07:	movsxd rcx,DWORD PTR [rsi]
   140018c0a:	mov    BYTE PTR [rsp+0x60],0x0
   140018c0f:	cmp    ecx,DWORD PTR [rdx+0x4]
   140018c12:	mov    QWORD PTR [rsp+0x68],rbx
   140018c17:	mov    QWORD PTR [rsp+0x70],rbx
   140018c1c:	mov    BYTE PTR [rsp+0x61],0x0
   140018c21:	jge    0x140018c64
   140018c23:	lea    eax,[rcx+0x1]
   140018c26:	lea    rcx,[rcx+rcx*2]
   140018c2a:	mov    DWORD PTR [rsi],eax
   140018c2c:	mov    rax,QWORD PTR [rdx+0x10]
   140018c30:	lea    rcx,[rax+rcx*8]
   140018c34:	mov    eax,DWORD PTR [rcx+rdx*1+0x4]
   140018c38:	cmp    eax,0x9
   140018c3b:	jne    0x140018c56
   140018c3d:	lea    rdx,[rsp+0x60]
   140018c42:	mov    rcx,rbp
   140018c45:	mov    BYTE PTR [rsp+0x60],0x1
   140018c4a:	call   0x140013b00
   140018c4f:	mov    rbx,QWORD PTR [rsp+0x70]
   140018c54:	jmp    0x140018c73
   140018c56:	cmp    eax,0x9a
   140018c5b:	jne    0x140018c64
   140018c5d:	mov    BYTE PTR [rsp+0x60],0x0
   140018c62:	jmp    0x140018c73
   140018c64:	lea    rdx,[rip+0xda2d]        # 0x140026698
   140018c6b:	mov    rcx,rbp
   140018c6e:	call   0x140019c50
   140018c73:	mov    rdx,QWORD PTR [rsp+0x2c0]
   140018c7b:	movsxd rbp,DWORD PTR [rsi]
   140018c7e:	mov    rdx,QWORD PTR [rdx]
   140018c81:	movsxd rcx,DWORD PTR [rsi]
   140018c84:	cmp    ecx,DWORD PTR [rdx+0x4]
   140018c87:	jge    0x140018ca4
   140018c89:	lea    eax,[rcx+0x1]
   140018c8c:	lea    rcx,[rcx+rcx*2]
   140018c90:	mov    DWORD PTR [rsi],eax
   140018c92:	mov    rax,QWORD PTR [rdx+0x10]
   140018c96:	lea    rcx,[rax+rcx*8]
   140018c9a:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x99
   140018ca2:	jne    0x140018c81
   140018ca4:	mov    r8d,DWORD PTR [rsi]
   140018ca7:	mov    eax,DWORD PTR [rbx+0x8]
   140018caa:	sub    r8d,ebp
   140018cad:	btr    eax,0x1f
   140018cb1:	dec    r8d
   140018cb4:	cmp    r8d,eax
   140018cb7:	jle    0x140018cd5
   140018cb9:	mov    edx,DWORD PTR [rbx+0x4]
   140018cbc:	lea    rcx,[rsp+0x70]
   140018cc1:	mov    r9d,edi
   140018cc4:	mov    DWORD PTR [rsp+0x22c],edi
   140018ccb:	call   0x140011cb0
   140018cd0:	mov    rbx,QWORD PTR [rsp+0x70]
   140018cd5:	mov    eax,DWORD PTR [rbx]
   140018cd7:	cmp    eax,0x1
   140018cda:	je     0x140018ce0
   140018cdc:	test   eax,eax
   140018cde:	jne    0x140018d02
   140018ce0:	mov    r9d,0x2
   140018ce6:	xor    r8d,r8d
   140018ce9:	lea    edx,[r9+0x6]
   140018ced:	lea    ecx,[rdx+0x10]
   140018cf0:	call   QWORD PTR [rip+0x6822]        # 0x14001f518
   140018cf6:	cmp    rbx,rax
   140018cf9:	je     0x140018d02
   140018cfb:	or     DWORD PTR [rbx+0x8],0x80000000
   140018d02:	mov    eax,DWORD PTR [rsi]
   140018d04:	mov    edx,0x93
   140018d09:	dec    eax
   140018d0b:	cmp    ebp,eax
   140018d0d:	jge    0x140018e0f
   140018d13:	lea    r8,[rbp+rbp*2+0x0]
   140018d18:	shl    r8,0x3
   140018d1c:	mov    QWORD PTR [rsp+0x78],r8
   140018d21:	mov    rax,QWORD PTR [rsp+0x2c0]
   140018d29:	mov    rcx,QWORD PTR [rax]
   140018d2c:	add    rcx,QWORD PTR [rcx+0x10]
   140018d30:	mov    edi,DWORD PTR [rcx+r8*1+0x4]
   140018d35:	cmp    edi,0x9a
   140018d3b:	je     0x140018da3
   140018d3d:	cmp    edi,0xa6
   140018d43:	jne    0x140018dc3
   140018d45:	mov    ecx,DWORD PTR [rbx+0x4]
   140018d48:	test   ecx,ecx
   140018d4a:	je     0x140018dc3
   140018d4c:	cmp    edx,0x9a
   140018d52:	jne    0x140018dc3
   140018d54:	mov    eax,DWORD PTR [rbx]
   140018d56:	cmp    eax,0x1
   140018d59:	je     0x140018d83
   140018d5b:	test   eax,eax
   140018d5d:	je     0x140018d83
   140018d5f:	mov    r8d,DWORD PTR [rbx+0x8]
   140018d63:	xor    eax,eax
   140018d65:	lea    edx,[rcx-0x1]
   140018d68:	lea    rcx,[rsp+0x70]
   140018d6d:	btr    r8d,0x1f
   140018d72:	mov    r9d,eax
   140018d75:	mov    DWORD PTR [rsp+0x238],eax
   140018d7c:	call   0x140011cb0
   140018d81:	jmp    0x140018dc3
   140018d83:	dec    DWORD PTR [rbx+0x4]
   140018d86:	movsxd rax,DWORD PTR [rbx+0x4]
   140018d8a:	lea    rcx,[rax+rax*2]
   140018d8e:	mov    rax,QWORD PTR [rbx+0x10]
   140018d92:	lea    rcx,[rax+rcx*8]
   140018d96:	lea    rcx,[rcx+rbx*1+0x8]
   140018d9b:	call   QWORD PTR [rip+0x6817]        # 0x14001f5b8
   140018da1:	jmp    0x140018dc3
   140018da3:	cmp    edx,0xa7
   140018da9:	je     0x140018df6
   140018dab:	cmp    edx,0x93
   140018db1:	je     0x140018df6
   140018db3:	cmp    edx,0xa6
   140018db9:	je     0x140018df6
   140018dbb:	cmp    edx,0x9a
   140018dc1:	je     0x140018df6
   140018dc3:	mov    rax,QWORD PTR [rsp+0x2c0]
   140018dcb:	mov    r8,QWORD PTR [rax]
   140018dce:	movsxd rax,ebp
   140018dd1:	lea    rcx,[rax+rax*2]
   140018dd5:	mov    rax,QWORD PTR [r8+0x10]
   140018dd9:	lea    rdx,[rax+rcx*8]
   140018ddd:	lea    rcx,[rsp+0x70]
   140018de2:	add    rdx,r8
   140018de5:	call   0x140012170
   140018dea:	mov    rbx,QWORD PTR [rsp+0x70]
   140018def:	mov    r8,QWORD PTR [rsp+0x78]
   140018df4:	mov    edx,edi
   140018df6:	mov    eax,DWORD PTR [rsi]
   140018df8:	add    r8,0x18
   140018dfc:	inc    ebp
   140018dfe:	dec    eax
   140018e00:	mov    QWORD PTR [rsp+0x78],r8
   140018e05:	cmp    ebp,eax
   140018e07:	jl     0x140018d21
   140018e0d:	xor    edi,edi
   140018e0f:	mov    ecx,DWORD PTR [rbx+0x4]
   140018e12:	test   ecx,ecx
   140018e14:	je     0x140018f55
   140018e1a:	nop    WORD PTR [rax+rax*1+0x0]
   140018e20:	mov    eax,DWORD PTR [rbx]
   140018e22:	cmp    eax,0x1
   140018e25:	je     0x140018e72
   140018e27:	test   eax,eax
   140018e29:	je     0x140018e72
   140018e2b:	mov    r8d,DWORD PTR [rbx+0x8]
   140018e2f:	btr    r8d,0x1f
   140018e34:	test   r8d,r8d
   140018e37:	jne    0x140018e57
   140018e39:	lea    r9d,[r8+0x2]
   140018e3d:	xor    r8d,r8d
   140018e40:	lea    edx,[r9+0x6]
   140018e44:	lea    ecx,[rdx+0x10]
   140018e47:	call   QWORD PTR [rip+0x66cb]        # 0x14001f518
   140018e4d:	mov    rbx,rax
   140018e50:	mov    QWORD PTR [rsp+0x70],rax
   140018e55:	jmp    0x140018e72
   140018e57:	mov    edx,ecx
   140018e59:	lea    rcx,[rsp+0x70]
   140018e5e:	mov    r9d,edi
   140018e61:	mov    DWORD PTR [rsp+0x228],edi
   140018e68:	call   0x140011cb0
   140018e6d:	mov    rbx,QWORD PTR [rsp+0x70]
   140018e72:	movsxd r10,DWORD PTR [rbx+0x4]
   140018e76:	mov    rax,QWORD PTR [rbx+0x10]
   140018e7a:	lea    rcx,[r10+r10*2]
   140018e7e:	lea    rdx,[rbx+rcx*8]
   140018e82:	cmp    DWORD PTR [rdx+rax*1-0x14],0x9a
   140018e8a:	je     0x140018ef9
   140018e8c:	mov    eax,DWORD PTR [rbx]
   140018e8e:	cmp    eax,0x1
   140018e91:	je     0x140018edf
   140018e93:	test   eax,eax
   140018e95:	je     0x140018edf
   140018e97:	mov    r8d,DWORD PTR [rbx+0x8]
   140018e9b:	btr    r8d,0x1f
   140018ea0:	test   r8d,r8d
   140018ea3:	jne    0x140018ec3
   140018ea5:	lea    r9d,[r8+0x2]
   140018ea9:	xor    r8d,r8d
   140018eac:	lea    edx,[r9+0x6]
   140018eb0:	lea    ecx,[rdx+0x10]
   140018eb3:	call   QWORD PTR [rip+0x665f]        # 0x14001f518
   140018eb9:	mov    rbx,rax
   140018ebc:	mov    QWORD PTR [rsp+0x70],rax
   140018ec1:	jmp    0x140018edf
   140018ec3:	lea    rcx,[rsp+0x70]
   140018ec8:	mov    r9d,edi
   140018ecb:	mov    edx,r10d
   140018ece:	mov    DWORD PTR [rsp+0x204],edi
   140018ed5:	call   0x140011cb0
   140018eda:	mov    rbx,QWORD PTR [rsp+0x70]
   140018edf:	movsxd r10,DWORD PTR [rbx+0x4]
   140018ee3:	mov    rax,QWORD PTR [rbx+0x10]
   140018ee7:	lea    rcx,[r10+r10*2]
   140018eeb:	lea    rdx,[rbx+rcx*8]
   140018eef:	cmp    DWORD PTR [rdx+rax*1-0x14],0x9a
   140018ef7:	jne    0x140018f55
   140018ef9:	mov    eax,DWORD PTR [rbx]
   140018efb:	cmp    eax,0x1
   140018efe:	je     0x140018f2c
   140018f00:	test   eax,eax
   140018f02:	je     0x140018f2c
   140018f04:	mov    r8d,DWORD PTR [rbx+0x8]
   140018f08:	lea    edx,[r10-0x1]
   140018f0c:	lea    rcx,[rsp+0x70]
   140018f11:	btr    r8d,0x1f
   140018f16:	mov    r9d,edi
   140018f19:	mov    DWORD PTR [rsp+0x190],edi
   140018f20:	call   0x140011cb0
   140018f25:	mov    rbx,QWORD PTR [rsp+0x70]
   140018f2a:	jmp    0x140018f4a
   140018f2c:	dec    DWORD PTR [rbx+0x4]
   140018f2f:	movsxd rax,DWORD PTR [rbx+0x4]
   140018f33:	lea    rcx,[rax+rax*2]
   140018f37:	mov    rax,QWORD PTR [rbx+0x10]
   140018f3b:	lea    rdx,[rbx+rcx*8]
   140018f3f:	lea    rcx,[rdx+rax*1+0x8]
   140018f44:	call   QWORD PTR [rip+0x666e]        # 0x14001f5b8
   140018f4a:	mov    ecx,DWORD PTR [rbx+0x4]
   140018f4d:	test   ecx,ecx
   140018f4f:	jne    0x140018e20
   140018f55:	mov    edx,DWORD PTR [rbx+0x4]
   140018f58:	test   edx,edx
   140018f5a:	je     0x14001903f
   140018f60:	mov    eax,DWORD PTR [rbx]
   140018f62:	cmp    eax,0x1
   140018f65:	je     0x140018fb0
   140018f67:	test   eax,eax
   140018f69:	je     0x140018fb0
   140018f6b:	mov    r8d,DWORD PTR [rbx+0x8]
   140018f6f:	btr    r8d,0x1f
   140018f74:	test   r8d,r8d
   140018f77:	jne    0x140018f97
   140018f79:	lea    r9d,[r8+0x2]
   140018f7d:	xor    r8d,r8d
   140018f80:	lea    edx,[r9+0x6]
   140018f84:	lea    ecx,[rdx+0x10]
   140018f87:	call   QWORD PTR [rip+0x658b]        # 0x14001f518
   140018f8d:	mov    rbx,rax
   140018f90:	mov    QWORD PTR [rsp+0x70],rax
   140018f95:	jmp    0x140018fb0
   140018f97:	lea    rcx,[rsp+0x70]
   140018f9c:	mov    r9d,edi
   140018f9f:	mov    DWORD PTR [rsp+0x1d0],edi
   140018fa6:	call   0x140011cb0
   140018fab:	mov    rbx,QWORD PTR [rsp+0x70]
   140018fb0:	mov    rax,QWORD PTR [rbx+0x10]
   140018fb4:	cmp    DWORD PTR [rax+rbx*1+0x4],0xa6
   140018fbc:	je     0x14001902b
   140018fbe:	mov    eax,DWORD PTR [rbx]
   140018fc0:	cmp    eax,0x1
   140018fc3:	je     0x140019011
   140018fc5:	test   eax,eax
   140018fc7:	je     0x140019011
   140018fc9:	mov    r8d,DWORD PTR [rbx+0x8]
   140018fcd:	btr    r8d,0x1f
   140018fd2:	test   r8d,r8d
   140018fd5:	jne    0x140018ff5
   140018fd7:	lea    r9d,[r8+0x2]
   140018fdb:	xor    r8d,r8d
   140018fde:	lea    edx,[r9+0x6]
   140018fe2:	lea    ecx,[rdx+0x10]
   140018fe5:	call   QWORD PTR [rip+0x652d]        # 0x14001f518
   140018feb:	mov    rbx,rax
   140018fee:	mov    QWORD PTR [rsp+0x70],rax
   140018ff3:	jmp    0x140019011
   140018ff5:	mov    edx,DWORD PTR [rbx+0x4]
   140018ff8:	lea    rcx,[rsp+0x70]
   140018ffd:	mov    r9d,edi
   140019000:	mov    DWORD PTR [rsp+0x1e0],edi
   140019007:	call   0x140011cb0
   14001900c:	mov    rbx,QWORD PTR [rsp+0x70]
   140019011:	movsxd rax,DWORD PTR [rbx+0x4]
   140019015:	lea    rcx,[rax+rax*2]
   140019019:	mov    rax,QWORD PTR [rbx+0x10]
   14001901d:	lea    rcx,[rax+rcx*8]
   140019021:	cmp    DWORD PTR [rcx+rbx*1-0x14],0xa6
   140019029:	jne    0x14001903f
   14001902b:	mov    rcx,QWORD PTR [rsp+0x2c0]
   140019033:	lea    rdx,[rip+0xd626]        # 0x140026660
   14001903a:	call   0x140019c50
   14001903f:	lea    rdx,[rsp+0xc0]
   140019047:	lea    rcx,[rsp+0x150]
   14001904f:	call   QWORD PTR [rip+0x6583]        # 0x14001f5d8
   140019055:	mov    rax,QWORD PTR [rsp+0xc0]
   14001905d:	mov    DWORD PTR [rsp+0x158],edi
   140019064:	mov    ecx,DWORD PTR [rax+0x4]
   140019067:	lea    r9,[rsp+0x60]
   14001906c:	lea    r8,[rsp+0x150]
   140019074:	mov    DWORD PTR [rsp+0x15c],ecx
   14001907b:	mov    rcx,QWORD PTR [rsp+0x2c0]
   140019083:	lea    rdx,[rsp+0x278]
   14001908b:	add    rcx,0x30
   14001908f:	call   0x140014e30
   140019094:	lea    rcx,[rsp+0x150]
   14001909c:	call   QWORD PTR [rip+0x6516]        # 0x14001f5b8
   1400190a2:	mov    r11d,DWORD PTR [rbx]
   1400190a5:	test   r11d,r11d
   1400190a8:	je     0x1400190c0
   1400190aa:	cmp    r11d,0xffffffff
   1400190ae:	je     0x1400190cd
   1400190b0:	lock add DWORD PTR [rbx],0xffffffff
   1400190b4:	setne  al
   1400190b7:	test   al,al
   1400190b9:	jne    0x1400190cd
   1400190bb:	mov    rbx,QWORD PTR [rsp+0x70]
   1400190c0:	lea    rcx,[rsp+0x70]
   1400190c5:	mov    rdx,rbx
   1400190c8:	call   0x1400114d0
   1400190cd:	mov    rcx,QWORD PTR [rsp+0x68]
   1400190d2:	mov    eax,DWORD PTR [rcx]
   1400190d4:	test   eax,eax
   1400190d6:	je     0x1400190e8
   1400190d8:	cmp    eax,0xffffffff
   1400190db:	je     0x1400190f7
   1400190dd:	lock add DWORD PTR [rcx],0xffffffff
   1400190e1:	setne  al
   1400190e4:	test   al,al
   1400190e6:	jne    0x1400190f7
   1400190e8:	mov    rdx,QWORD PTR [rsp+0x68]
   1400190ed:	lea    rcx,[rsp+0x68]
   1400190f2:	call   0x1400114d0
   1400190f7:	lea    rcx,[rsp+0xc0]
   1400190ff:	call   QWORD PTR [rip+0x64b3]        # 0x14001f5b8
   140019105:	jmp    0x14001818a
   14001910a:	mov    r8,rdx
   14001910d:	movsxd rdx,DWORD PTR [rsi]
   140019110:	cmp    edx,DWORD PTR [r8+0x4]
   140019114:	jge    0x140019131
   140019116:	mov    rax,QWORD PTR [r8+0x10]
   14001911a:	lea    rcx,[rdx+rdx*2]
   14001911e:	lea    rcx,[rax+rcx*8]
   140019122:	cmp    DWORD PTR [rcx+r8*1+0x4],0x1
   140019128:	jne    0x140019131
   14001912a:	lea    eax,[rdx+0x1]
   14001912d:	mov    DWORD PTR [rsi],eax
   14001912f:	jmp    0x14001913b
   140019131:	xor    edx,edx
   140019133:	mov    rcx,rbx
   140019136:	call   0x140019c50
   14001913b:	mov    r8,QWORD PTR [rbx]
   14001913e:	mov    eax,DWORD PTR [rsi]
   140019140:	dec    eax
   140019142:	cdqe   
   140019144:	lea    rcx,[rax+rax*2]
   140019148:	mov    rax,QWORD PTR [r8+0x10]
   14001914c:	lea    rdx,[rax+rcx*8]
   140019150:	mov    r9d,DWORD PTR [rdx+r8*1+0x14]
   140019155:	lea    rcx,[rdx+r8*1+0x8]
   14001915a:	mov    r8d,DWORD PTR [rdx+r8*1+0x10]
   14001915f:	lea    rdx,[rsp+0xb8]
   140019167:	call   QWORD PTR [rip+0x6463]        # 0x14001f5d0
   14001916d:	mov    r11,QWORD PTR [rbx]
   140019170:	movsxd rcx,DWORD PTR [rsi]
   140019173:	cmp    ecx,DWORD PTR [r11+0x4]
   140019177:	jge    0x140019195
   140019179:	lea    eax,[rcx+0x1]
   14001917c:	lea    rcx,[rcx+rcx*2]
   140019180:	mov    DWORD PTR [rsi],eax
   140019182:	mov    rax,QWORD PTR [r11+0x10]
   140019186:	lea    rcx,[rax+rcx*8]
   14001918a:	cmp    DWORD PTR [rcx+r11*1+0x4],0x99
   140019193:	jne    0x140019170
   140019195:	lea    rdx,[rsp+0xb8]
   14001919d:	lea    rcx,[rsp+0x160]
   1400191a5:	call   QWORD PTR [rip+0x642d]        # 0x14001f5d8
   1400191ab:	mov    rax,QWORD PTR [rsp+0xb8]
   1400191b3:	mov    DWORD PTR [rsp+0x168],edi
   1400191ba:	mov    ecx,DWORD PTR [rax+0x4]
   1400191bd:	lea    rdx,[rsp+0x160]
   1400191c5:	mov    DWORD PTR [rsp+0x16c],ecx
   1400191cc:	lea    rcx,[rbx+0x30]
   1400191d0:	call   0x140014c10
   1400191d5:	lea    rcx,[rsp+0x160]
   1400191dd:	call   QWORD PTR [rip+0x63d5]        # 0x14001f5b8
   1400191e3:	lea    rcx,[rsp+0xb8]
   1400191eb:	call   QWORD PTR [rip+0x63c7]        # 0x14001f5b8
   1400191f1:	lea    r8,[rip+0xfffffffffffe6e08]        # 0x140000000
   1400191f8:	jmp    0x1400181a0
   1400191fd:	mov    r10,QWORD PTR [rsp+0x2c0]
   140019205:	movsxd rax,DWORD PTR [rsi]
   140019208:	mov    rbx,QWORD PTR [rip+0x6329]        # 0x14001f538
   14001920f:	mov    r8,QWORD PTR [r10]
   140019212:	lea    rcx,[rax+rax*2]
   140019216:	mov    r9,rsi
   140019219:	mov    rax,QWORD PTR [r8+0x10]
   14001921d:	mov    QWORD PTR [rsp+0xf8],rbx
   140019225:	lea    rdx,[rax+rcx*8]
   140019229:	mov    rcx,QWORD PTR [rsp+0x2d0]
   140019231:	lea    rax,[rsp+0xf8]
   140019239:	mov    QWORD PTR [rsp+0x30],rax
   14001923e:	mov    eax,DWORD PTR [rdx+r8*1-0x18]
   140019243:	mov    r8,r10
   140019246:	mov    rdx,r10
   140019249:	mov    BYTE PTR [rsp+0x28],0x1
   14001924e:	mov    DWORD PTR [rsp+0x20],eax
   140019252:	call   0x140017090
   140019257:	mov    eax,DWORD PTR [rbx+0x10]
   14001925a:	test   eax,eax
   14001925c:	je     0x140019295
   14001925e:	lea    r8,[rip+0xfffffffffffe6d9b]        # 0x140000000
   140019265:	cmp    eax,0xffffffff
   140019268:	je     0x140018191
   14001926e:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140019273:	mov    rbx,QWORD PTR [rsp+0x2c0]
   14001927b:	setne  al
   14001927e:	lea    r8,[rip+0xfffffffffffe6d7b]        # 0x140000000
   140019285:	test   al,al
   140019287:	jne    0x1400181a0
   14001928d:	mov    rbx,QWORD PTR [rsp+0xf8]
   140019295:	lea    rdx,[rip+0xfffffffffffe9684]        # 0x140002920
   14001929c:	mov    rcx,rbx
   14001929f:	call   QWORD PTR [rip+0x6213]        # 0x14001f4b8
   1400192a5:	jmp    0x14001818a
   1400192aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400192b0:	movsxd rcx,DWORD PTR [rsi]
   1400192b3:	cmp    ecx,DWORD PTR [rdx+0x4]
   1400192b6:	jge    0x1400181a0
   1400192bc:	lea    eax,[rcx+0x1]
   1400192bf:	lea    rcx,[rcx+rcx*2]
   1400192c3:	mov    DWORD PTR [rsi],eax
   1400192c5:	mov    rax,QWORD PTR [rdx+0x10]
   1400192c9:	lea    rcx,[rax+rcx*8]
   1400192cd:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x99
   1400192d5:	jne    0x1400192b0
   1400192d7:	jmp    0x1400181a0
   1400192dc:	mov    rcx,rbx
   1400192df:	call   0x140017f00
   1400192e4:	lea    r8,[rip+0xfffffffffffe6d15]        # 0x140000000
   1400192eb:	test   eax,eax
   1400192ed:	jne    0x1400181a0
   1400192f3:	mov    rcx,rbx
   1400192f6:	call   0x140011650
   1400192fb:	lea    r8,[rip+0xfffffffffffe6cfe]        # 0x140000000
   140019302:	test   al,al
   140019304:	je     0x1400181a0
   14001930a:	mov    r8,QWORD PTR [rbx]
   14001930d:	movsxd rdx,DWORD PTR [rsi]
   140019310:	cmp    edx,DWORD PTR [r8+0x4]
   140019314:	jge    0x14001934a
   140019316:	mov    rax,QWORD PTR [r8+0x10]
   14001931a:	lea    rcx,[rdx+rdx*2]
   14001931e:	lea    rcx,[rax+rcx*8]
   140019322:	cmp    DWORD PTR [rcx+r8*1+0x4],0xa2
   14001932b:	jne    0x14001934a
   14001932d:	lea    eax,[rdx+0x1]
   140019330:	mov    rcx,rbx
   140019333:	mov    DWORD PTR [rsi],eax
   140019335:	call   0x140017f00
   14001933a:	lea    r8,[rip+0xfffffffffffe6cbf]        # 0x140000000
   140019341:	test   eax,eax
   140019343:	je     0x1400192f3
   140019345:	jmp    0x1400181a0
   14001934a:	mov    rdx,r8
   14001934d:	nop    DWORD PTR [rax]
   140019350:	movsxd rcx,DWORD PTR [rsi]
   140019353:	lea    r8,[rip+0xfffffffffffe6ca6]        # 0x140000000
   14001935a:	cmp    ecx,DWORD PTR [rdx+0x4]
   14001935d:	jge    0x1400181a0
   140019363:	lea    eax,[rcx+0x1]
   140019366:	lea    rcx,[rcx+rcx*2]
   14001936a:	mov    DWORD PTR [rsi],eax
   14001936c:	mov    rax,QWORD PTR [rdx+0x10]
   140019370:	lea    rcx,[rax+rcx*8]
   140019374:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x99
   14001937c:	jne    0x140019350
   14001937e:	lea    r8,[rip+0xfffffffffffe6c7b]        # 0x140000000
   140019385:	jmp    0x1400181a0
   14001938a:	mov    rcx,rbx
   14001938d:	call   0x1400115d0
   140019392:	lea    r8,[rip+0xfffffffffffe6c67]        # 0x140000000
   140019399:	mov    rdx,QWORD PTR [rbx]
   14001939c:	nop    DWORD PTR [rax+0x0]
   1400193a0:	movsxd rcx,DWORD PTR [rsi]
   1400193a3:	cmp    ecx,DWORD PTR [rdx+0x4]
   1400193a6:	jge    0x1400181a0
   1400193ac:	lea    eax,[rcx+0x1]
   1400193af:	lea    rcx,[rcx+rcx*2]
   1400193b3:	mov    DWORD PTR [rsi],eax
   1400193b5:	mov    rax,QWORD PTR [rdx+0x10]
   1400193b9:	lea    rcx,[rax+rcx*8]
   1400193bd:	cmp    DWORD PTR [rcx+rdx*1+0x4],0x99
   1400193c5:	jne    0x1400193a0
   1400193c7:	jmp    0x1400181a0
   1400193cc:	mov    eax,DWORD PTR [rsi]
   1400193ce:	dec    eax
   1400193d0:	cdqe   
   1400193d2:	lea    rcx,[rax+rax*2]
   1400193d6:	mov    rax,QWORD PTR [rdx+0x10]
   1400193da:	lea    rbx,[rax+rcx*8]
   1400193de:	lea    rcx,[rsp+0x108]
   1400193e6:	add    rbx,rdx
   1400193e9:	mov    eax,DWORD PTR [rbx]
   1400193eb:	lea    rdx,[rbx+0x8]
   1400193ef:	mov    DWORD PTR [rsp+0x100],eax
   1400193f6:	mov    eax,DWORD PTR [rbx+0x4]
   1400193f9:	mov    DWORD PTR [rsp+0x104],eax
   140019400:	call   QWORD PTR [rip+0x61d2]        # 0x14001f5d8
   140019406:	mov    r11d,DWORD PTR [rbx+0x10]
   14001940a:	mov    DWORD PTR [rsp+0x110],r11d
   140019412:	mov    eax,DWORD PTR [rbx+0x14]
   140019415:	lea    rdx,[rip+0xd234]        # 0x140026650
   14001941c:	lea    rcx,[rsp+0x90]
   140019424:	or     r8d,0xffffffff
   140019428:	mov    DWORD PTR [rsp+0x114],eax
   14001942f:	call   QWORD PTR [rip+0x611b]        # 0x14001f550
   140019435:	mov    rax,QWORD PTR [rsp+0x90]
   14001943d:	mov    r10,QWORD PTR [rsp+0x2c0]
   140019445:	add    r10,0x30
   140019449:	mov    DWORD PTR [rsp+0x98],edi
   140019450:	mov    r8d,DWORD PTR [rax+0x4]
   140019454:	mov    rax,QWORD PTR [r10]
   140019457:	mov    DWORD PTR [rsp+0x9c],r8d
   14001945f:	mov    QWORD PTR [rsp+0x78],r10
   140019464:	cmp    DWORD PTR [rax+0x20],0x0
   140019468:	mov    r11d,edi
   14001946b:	mov    DWORD PTR [rsp+0x58],edi
   14001946f:	je     0x1400194d6
   140019471:	mov    ebx,DWORD PTR [rax+0x24]
   140019474:	lea    rcx,[rsp+0x90]
   14001947c:	mov    DWORD PTR [rsp+0x250],r8d
   140019484:	call   QWORD PTR [rip+0x616e]        # 0x14001f5f8
   14001948a:	movsxd rcx,DWORD PTR [rsp+0x98]
   140019492:	xor    edx,edx
   140019494:	add    rax,rcx
   140019497:	lea    rcx,[rsp+0x280]
   14001949f:	mov    QWORD PTR [rsp+0x258],rax
   1400194a7:	movaps xmm0,XMMWORD PTR [rsp+0x250]
   1400194af:	movdqa XMMWORD PTR [rsp+0x280],xmm0
   1400194b8:	call   QWORD PTR [rip+0x5e42]        # 0x14001f300
   1400194be:	mov    r8d,DWORD PTR [rsp+0x9c]
   1400194c6:	mov    r10,QWORD PTR [rsp+0x78]
   1400194cb:	mov    r11d,eax
   1400194ce:	xor    r11d,ebx
   1400194d1:	mov    DWORD PTR [rsp+0x58],r11d
   1400194d6:	mov    r9,QWORD PTR [r10]
   1400194d9:	mov    ecx,DWORD PTR [r9+0x20]
   1400194dd:	test   ecx,ecx
   1400194df:	je     0x1400195c9
   1400194e5:	xor    edx,edx
   1400194e7:	mov    eax,r11d
   1400194ea:	div    ecx
   1400194ec:	mov    rax,QWORD PTR [r9+0x8]
   1400194f0:	lea    rcx,[rax+rdx*8]
   1400194f4:	mov    QWORD PTR [rsp+0x88],rcx
   1400194fc:	mov    rax,QWORD PTR [rcx]
   1400194ff:	cmp    rax,r9
   140019502:	je     0x14001956a
   140019504:	cmp    r11d,DWORD PTR [rax+0x8]
   140019508:	jne    0x1400195b0
   14001950e:	cmp    r8d,DWORD PTR [rax+0x1c]
   140019512:	lea    rbp,[rax+0x10]
   140019516:	jne    0x1400195b0
   14001951c:	test   r8d,r8d
   14001951f:	jle    0x140019566
   140019521:	mov    edx,DWORD PTR [rsp+0x98]
   140019528:	lea    rcx,[rsp+0x90]
   140019530:	add    edx,edi
   140019532:	call   QWORD PTR [rip+0x6050]        # 0x14001f588
   140019538:	mov    ecx,DWORD PTR [rbp+0x8]
   14001953b:	lea    edx,[rdi+rcx*1]
   14001953e:	mov    rcx,rbp
   140019541:	movzx  ebx,al
   140019544:	call   QWORD PTR [rip+0x603e]        # 0x14001f588
   14001954a:	cmp    bl,al
   14001954c:	jne    0x140019594
   14001954e:	inc    edi
   140019550:	cmp    edi,DWORD PTR [rsp+0x9c]
   140019557:	jl     0x140019521
   140019559:	mov    rcx,QWORD PTR [rsp+0x88]
   140019561:	mov    r10,QWORD PTR [rsp+0x78]
   140019566:	mov    ebp,DWORD PTR [rsp+0x48]
   14001956a:	mov    rax,QWORD PTR [r10]
   14001956d:	cmp    QWORD PTR [rcx],rax
   140019570:	lea    rcx,[rsp+0x90]
   140019578:	setne  bl
   14001957b:	call   QWORD PTR [rip+0x6037]        # 0x14001f5b8
   140019581:	xor    edi,edi
   140019583:	test   bl,bl
   140019585:	je     0x1400195ce
   140019587:	mov    DWORD PTR [rsp+0x104],0x1
   140019592:	jmp    0x1400195e2
   140019594:	mov    r8d,DWORD PTR [rsp+0x9c]
   14001959c:	mov    rcx,QWORD PTR [rsp+0x88]
   1400195a4:	mov    r10,QWORD PTR [rsp+0x78]
   1400195a9:	mov    r11d,DWORD PTR [rsp+0x58]
   1400195ae:	xor    edi,edi
   1400195b0:	mov    rcx,QWORD PTR [rcx]
   1400195b3:	mov    QWORD PTR [rsp+0x88],rcx
   1400195bb:	mov    rax,QWORD PTR [rcx]
   1400195be:	cmp    rax,QWORD PTR [r10]
   1400195c1:	jne    0x140019504
   1400195c7:	jmp    0x140019566
   1400195c9:	mov    rcx,r10
   1400195cc:	jmp    0x14001956a
   1400195ce:	cmp    ebp,0x73
   1400195d1:	mov    eax,edi
   1400195d3:	setne  al
   1400195d6:	add    eax,0x83
   1400195db:	mov    DWORD PTR [rsp+0x104],eax
   1400195e2:	mov    rcx,QWORD PTR [rsp+0x2d0]
   1400195ea:	lea    rdx,[rsp+0x100]
   1400195f2:	call   0x140012170
   1400195f7:	lea    rcx,[rsp+0x108]
   1400195ff:	call   QWORD PTR [rip+0x5fb3]        # 0x14001f5b8
   140019605:	jmp    0x14001818a
   14001960a:	mov    eax,DWORD PTR [rsi]
   14001960c:	mov    r8,rdx
   14001960f:	dec    eax
   140019611:	cdqe   
   140019613:	lea    rcx,[rax+rax*2]
   140019617:	mov    rax,QWORD PTR [rdx+0x10]
   14001961b:	lea    rdx,[rax+rcx*8]
   14001961f:	mov    rcx,QWORD PTR [rsp+0x2d0]
   140019627:	add    rdx,r8
   14001962a:	call   0x140012170
   14001962f:	lea    r8,[rip+0xfffffffffffe69ca]        # 0x140000000
   140019636:	jmp    0x1400181a0
   14001963b:	mov    rbx,QWORD PTR [rsp+0x188]
   140019643:	mov    rax,QWORD PTR [rbx]
   140019646:	mov    ecx,DWORD PTR [rax]
   140019648:	cmp    ecx,0x1
   14001964b:	je     0x140019687
   14001964d:	test   ecx,ecx
   14001964f:	je     0x140019687
   140019651:	mov    r8d,DWORD PTR [rax+0x8]
   140019655:	btr    r8d,0x1f
   14001965a:	test   r8d,r8d
   14001965d:	jne    0x140019679
   14001965f:	mov    edx,0x8
   140019664:	lea    r9d,[r8+0x2]
   140019668:	xor    r8d,r8d
   14001966b:	mov    rcx,rdx
   14001966e:	call   QWORD PTR [rip+0x5ea4]        # 0x14001f518
   140019674:	mov    QWORD PTR [rbx],rax
   140019677:	jmp    0x140019687
   140019679:	mov    edx,DWORD PTR [rax+0x4]
   14001967c:	mov    r9d,edi
   14001967f:	mov    rcx,rbx
   140019682:	call   0x140003220
   140019687:	mov    r8,QWORD PTR [rbx]
   14001968a:	mov    eax,DWORD PTR [r8+0x4]
   14001968e:	dec    eax
   140019690:	movsxd rcx,eax
   140019693:	mov    rax,QWORD PTR [r8+0x10]
   140019697:	lea    rdx,[rax+rcx*8]
   14001969b:	lea    rcx,[rsp+0x198]
   1400196a3:	add    rdx,r8
   1400196a6:	call   QWORD PTR [rip+0x5f2c]        # 0x14001f5d8
   1400196ac:	mov    r11,QWORD PTR [rbx]
   1400196af:	mov    r8d,DWORD PTR [r11+0x8]
   1400196b3:	mov    edx,DWORD PTR [r11+0x4]
   1400196b7:	btr    r8d,0x1f
   1400196bc:	dec    edx
   1400196be:	cmp    edx,r8d
   1400196c1:	jle    0x1400196cb
   1400196c3:	mov    r8d,edx
   1400196c6:	mov    edi,0x8
   1400196cb:	mov    r9d,edi
   1400196ce:	mov    rcx,rbx
   1400196d1:	call   0x140003220
   1400196d6:	lea    rcx,[rsp+0x198]
   1400196de:	call   QWORD PTR [rip+0x5ed4]        # 0x14001f5b8
   1400196e4:	add    rsp,0x298
   1400196eb:	pop    rdi
   1400196ec:	pop    rsi
   1400196ed:	pop    rbp
   1400196ee:	pop    rbx
   1400196ef:	ret    
   1400196f0:	std    
   1400196f1:	xchg   ecx,eax
   1400196f2:	add    DWORD PTR [rax],eax
   1400196f4:	int3   
   1400196f5:	xchg   ebx,eax
   1400196f6:	add    DWORD PTR [rax],eax
   1400196f8:	movabs al,ds:0xa00018b91000181
   140019701:	xchg   ecx,eax
   140019702:	add    DWORD PTR [rax],eax
   140019704:	fcom   QWORD PTR [rdx-0x6c75ffff]
   14001970a:	add    DWORD PTR [rax],eax
   14001970c:	cdq    
   14001970d:	xchg   ebx,eax
   14001970e:	add    DWORD PTR [rax],eax
   140019710:	lock add DWORD PTR [rcx],0x192b000
   140019717:	add    BYTE PTR [rdx],cl
   140019719:	xchg   esi,eax
   14001971a:	add    DWORD PTR [rax],eax
   14001971c:	add    BYTE PTR [rdx],cl
   14001971e:	or     cl,BYTE PTR [rdx]
   140019720:	or     cl,BYTE PTR [rdx]
   140019722:	or     cl,BYTE PTR [rdx]
   140019724:	or     cl,BYTE PTR [rdx]
   140019726:	or     cl,BYTE PTR [rdx]
   140019728:	or     cl,BYTE PTR [rdx]
   14001972a:	or     cl,BYTE PTR [rdx]
   14001972c:	or     cl,BYTE PTR [rdx]
   14001972e:	or     cl,BYTE PTR [rdx]
   140019730:	or     cl,BYTE PTR [rdx]
   140019732:	or     cl,BYTE PTR [rdx]
   140019734:	or     cl,BYTE PTR [rdx]
   140019736:	or     cl,BYTE PTR [rdx]
   140019738:	or     cl,BYTE PTR [rdx]
   14001973a:	or     cl,BYTE PTR [rdx]
   14001973c:	or     cl,BYTE PTR [rdx]
   14001973e:	or     cl,BYTE PTR [rdx]
   140019740:	or     cl,BYTE PTR [rdx]
   140019742:	or     cl,BYTE PTR [rdx]
   140019744:	or     cl,BYTE PTR [rdx]
   140019746:	or     cl,BYTE PTR [rdx]
   140019748:	or     cl,BYTE PTR [rdx]
   14001974a:	or     cl,BYTE PTR [rdx]
   14001974c:	or     cl,BYTE PTR [rdx]
   14001974e:	or     cl,BYTE PTR [rdx]
   140019750:	or     cl,BYTE PTR [rdx]
   140019752:	or     cl,BYTE PTR [rdx]
   140019754:	or     cl,BYTE PTR [rdx]
   140019756:	or     cl,BYTE PTR [rdx]
   140019758:	or     cl,BYTE PTR [rdx]
   14001975a:	or     cl,BYTE PTR [rdx]
   14001975c:	or     cl,BYTE PTR [rdx]
   14001975e:	or     cl,BYTE PTR [rdx]
   140019760:	or     cl,BYTE PTR [rdx]
   140019762:	or     cl,BYTE PTR [rdx]
   140019764:	or     cl,BYTE PTR [rdx]
   140019766:	or     cl,BYTE PTR [rdx]
   140019768:	or     cl,BYTE PTR [rdx]
   14001976a:	or     cl,BYTE PTR [rdx]
   14001976c:	or     cl,BYTE PTR [rdx]
   14001976e:	or     cl,BYTE PTR [rdx]
   140019770:	or     cl,BYTE PTR [rdx]
   140019772:	or     cl,BYTE PTR [rdx]
   140019774:	or     cl,BYTE PTR [rdx]
   140019776:	or     cl,BYTE PTR [rdx]
   140019778:	or     cl,BYTE PTR [rdx]
   14001977a:	or     cl,BYTE PTR [rdx]
   14001977c:	or     cl,BYTE PTR [rdx]
   14001977e:	or     cl,BYTE PTR [rdx]
   140019780:	or     cl,BYTE PTR [rdx]
   140019782:	or     cl,BYTE PTR [rdx]
   140019784:	or     cl,BYTE PTR [rdx]
   140019786:	or     cl,BYTE PTR [rdx]
   140019788:	or     cl,BYTE PTR [rdx]
   14001978a:	or     cl,BYTE PTR [rdx]
   14001978c:	or     cl,BYTE PTR [rdx]
   14001978e:	add    DWORD PTR [rcx],eax
   140019790:	or     cl,BYTE PTR [rdx]
   140019792:	or     cl,BYTE PTR [rdx]
   140019794:	or     cl,BYTE PTR [rdx]
   140019796:	or     cl,BYTE PTR [rdx]
   140019798:	or     cl,BYTE PTR [rdx]
   14001979a:	or     cl,BYTE PTR [rdx]
   14001979c:	or     cl,BYTE PTR [rdx]
   14001979e:	or     cl,BYTE PTR [rdx]
   1400197a0:	or     cl,BYTE PTR [rdx]
   1400197a2:	or     cl,BYTE PTR [rdx]
   1400197a4:	or     cl,BYTE PTR [rdx]
   1400197a6:	or     cl,BYTE PTR [rdx]
   1400197a8:	or     cl,BYTE PTR [rdx]
   1400197aa:	or     cl,BYTE PTR [rdx]
   1400197ac:	or     cl,BYTE PTR [rdx]
   1400197ae:	or     cl,BYTE PTR [rdx]
   1400197b0:	or     cl,BYTE PTR [rdx]
   1400197b2:	or     cl,BYTE PTR [rdx]
   1400197b4:	add    cl,BYTE PTR [rdx]
   1400197b6:	or     cl,BYTE PTR [rdx]
   1400197b8:	add    eax,DWORD PTR [rax*1+0x6060505]
   1400197bf:	(bad)  
   1400197c0:	or     BYTE PTR [rdx],cl
   1400197c2:	or     esp,ecx
   1400197c4:	int3   
   1400197c5:	int3   
   1400197c6:	int3   
   1400197c7:	int3   
   1400197c8:	int3   
   1400197c9:	int3   
   1400197ca:	int3   
   1400197cb:	int3   
   1400197cc:	int3   
   1400197cd:	int3   
   1400197ce:	int3   
   1400197cf:	int3   
   1400197d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400197d5:	push   rsi
   1400197d6:	push   rdi
   1400197d7:	push   r12
   1400197d9:	push   r13
   1400197db:	push   r14
   1400197dd:	sub    rsp,0x50
   1400197e1:	mov    DWORD PTR [rsp+0x98],0x0
   1400197ec:	mov    rax,QWORD PTR [r9]
   1400197ef:	mov    r13,rcx
   1400197f2:	mov    rcx,r9
   1400197f5:	mov    rdi,r9
   1400197f8:	mov    r14,r8
   1400197fb:	mov    r12,rdx
   1400197fe:	call   QWORD PTR [rax+0x78]
   140019801:	xor    r9d,r9d
   140019804:	xor    edx,edx
   140019806:	mov    rcx,rdi
   140019809:	mov    r8,rax
   14001980c:	mov    rsi,rax
   14001980f:	call   QWORD PTR [rip+0x5afb]        # 0x14001f310
   140019815:	test   rax,rax
   140019818:	je     0x140019832
   14001981a:	lea    rcx,[rsp+0x38]
   14001981f:	mov    r8d,esi
   140019822:	mov    rdx,rax
   140019825:	mov    ebx,0x1
   14001982a:	call   QWORD PTR [rip+0x5ad8]        # 0x14001f308
   140019830:	jmp    0x140019845
   140019832:	lea    rdx,[rsp+0x30]
   140019837:	mov    rcx,rdi
   14001983a:	mov    ebx,0x2
   14001983f:	call   QWORD PTR [rip+0x59e3]        # 0x14001f228
   140019845:	lea    rcx,[rsp+0x98]
   14001984d:	mov    rdx,rax
   140019850:	call   QWORD PTR [rip+0x5d82]        # 0x14001f5d8
   140019856:	test   bl,0x2
   140019859:	je     0x140019869
   14001985b:	lea    rcx,[rsp+0x30]
   140019860:	and    ebx,0xfffffffd
   140019863:	call   QWORD PTR [rip+0x5d4f]        # 0x14001f5b8
   140019869:	test   bl,0x1
   14001986c:	je     0x140019879
   14001986e:	lea    rcx,[rsp+0x38]
   140019873:	call   QWORD PTR [rip+0x5d3f]        # 0x14001f5b8
   140019879:	mov    rax,QWORD PTR [rsp+0x98]
   140019881:	cmp    DWORD PTR [rax+0x4],0x0
   140019885:	jne    0x1400198a5
   140019887:	mov    rdx,r13
   14001988a:	mov    rcx,r12
   14001988d:	call   0x140011970
   140019892:	lea    rcx,[rsp+0x98]
   14001989a:	call   QWORD PTR [rip+0x5d18]        # 0x14001f5b8
   1400198a0:	jmp    0x140019a1e
   1400198a5:	lea    rdx,[rsp+0x98]
   1400198ad:	lea    rcx,[rsp+0x40]
   1400198b2:	mov    QWORD PTR [rsp+0x80],rbp
   1400198ba:	call   0x140010ff0
   1400198bf:	lea    rcx,[rsp+0x98]
   1400198c7:	mov    rdx,rax
   1400198ca:	call   QWORD PTR [rip+0x5c88]        # 0x14001f558
   1400198d0:	lea    rcx,[rsp+0x40]
   1400198d5:	call   QWORD PTR [rip+0x5cdd]        # 0x14001f5b8
   1400198db:	xor    r9d,r9d
   1400198de:	lea    rdx,[rsp+0x98]
   1400198e6:	lea    r8d,[r9+0x1]
   1400198ea:	lea    rcx,[rsp+0x28]
   1400198ef:	call   0x140012a50
   1400198f4:	mov    rcx,r13
   1400198f7:	mov    rdx,rax
   1400198fa:	call   0x140011a40
   1400198ff:	mov    rdi,QWORD PTR [rsp+0x28]
   140019904:	mov    eax,DWORD PTR [rdi]
   140019906:	test   eax,eax
   140019908:	je     0x14001991f
   14001990a:	cmp    eax,0xffffffff
   14001990d:	je     0x140019968
   14001990f:	lock add DWORD PTR [rdi],0xffffffff
   140019913:	setne  al
   140019916:	test   al,al
   140019918:	jne    0x140019968
   14001991a:	mov    rdi,QWORD PTR [rsp+0x28]
   14001991f:	mov    rdx,QWORD PTR [rdi+0x10]
   140019923:	movsxd rax,DWORD PTR [rdi+0x4]
   140019927:	lea    rcx,[rax+rax*2]
   14001992b:	lea    rbx,[rdx+rdi*1]
   14001992f:	lea    rsi,[rdx+rcx*8]
   140019933:	add    rsi,rdi
   140019936:	cmp    rbx,rsi
   140019939:	je     0x140019956
   14001993b:	nop    DWORD PTR [rax+rax*1+0x0]
   140019940:	mov    rcx,rbx
   140019943:	add    rbx,0x18
   140019947:	add    rcx,0x8
   14001994b:	call   QWORD PTR [rip+0x5c67]        # 0x14001f5b8
   140019951:	cmp    rbx,rsi
   140019954:	jne    0x140019940
   140019956:	mov    edx,0x18
   14001995b:	mov    rcx,rdi
   14001995e:	lea    r8d,[rdx-0x10]
   140019962:	call   QWORD PTR [rip+0x5ba8]        # 0x14001f510
   140019968:	mov    rax,QWORD PTR [rip+0x5bc1]        # 0x14001f530
   14001996f:	lea    r8,[rsp+0x20]
   140019974:	mov    rdx,r14
   140019977:	mov    rcx,r13
   14001997a:	mov    QWORD PTR [rsp+0x20],rax
   14001997f:	call   0x1400180e0
   140019984:	lea    rcx,[rsp+0x20]
   140019989:	call   0x140013890
   14001998e:	lea    rdx,[rsp+0x20]
   140019993:	mov    rcx,r12
   140019996:	call   0x140011970
   14001999b:	mov    rdi,QWORD PTR [rsp+0x20]
   1400199a0:	mov    eax,DWORD PTR [rdi]
   1400199a2:	test   eax,eax
   1400199a4:	je     0x1400199bb
   1400199a6:	cmp    eax,0xffffffff
   1400199a9:	je     0x140019a08
   1400199ab:	lock add DWORD PTR [rdi],0xffffffff
   1400199af:	setne  al
   1400199b2:	test   al,al
   1400199b4:	jne    0x140019a08
   1400199b6:	mov    rdi,QWORD PTR [rsp+0x20]
   1400199bb:	mov    rdx,QWORD PTR [rdi+0x10]
   1400199bf:	movsxd rax,DWORD PTR [rdi+0x4]
   1400199c3:	lea    rcx,[rax+rax*2]
   1400199c7:	lea    rbx,[rdx+rdi*1]
   1400199cb:	lea    rsi,[rdx+rcx*8]
   1400199cf:	add    rsi,rdi
   1400199d2:	cmp    rbx,rsi
   1400199d5:	je     0x1400199f6
   1400199d7:	nop    WORD PTR [rax+rax*1+0x0]
   1400199e0:	mov    rcx,rbx
   1400199e3:	add    rbx,0x18
   1400199e7:	add    rcx,0x8
   1400199eb:	call   QWORD PTR [rip+0x5bc7]        # 0x14001f5b8
   1400199f1:	cmp    rbx,rsi
   1400199f4:	jne    0x1400199e0
   1400199f6:	mov    edx,0x18
   1400199fb:	mov    rcx,rdi
   1400199fe:	lea    r8d,[rdx-0x10]
   140019a02:	call   QWORD PTR [rip+0x5b08]        # 0x14001f510
   140019a08:	lea    rcx,[rsp+0x98]
   140019a10:	call   QWORD PTR [rip+0x5ba2]        # 0x14001f5b8
   140019a16:	mov    rbp,QWORD PTR [rsp+0x80]
   140019a1e:	mov    rax,r12
   140019a21:	mov    rbx,QWORD PTR [rsp+0x88]
   140019a29:	add    rsp,0x50
   140019a2d:	pop    r14
   140019a2f:	pop    r13
   140019a31:	pop    r12
   140019a33:	pop    rdi
   140019a34:	pop    rsi
   140019a35:	ret    
   140019a36:	int3   
   140019a37:	int3   
   140019a38:	int3   
   140019a39:	int3   
   140019a3a:	int3   
   140019a3b:	int3   
   140019a3c:	int3   
   140019a3d:	int3   
   140019a3e:	int3   
   140019a3f:	int3   
   140019a40:	mov    QWORD PTR [rsp+0x8],rbx
   140019a45:	mov    QWORD PTR [rsp+0x18],rbp
   140019a4a:	mov    DWORD PTR [rsp+0x10],edx
   140019a4e:	push   rsi
   140019a4f:	push   rdi
   140019a50:	push   r12
   140019a52:	push   r13
   140019a54:	push   r14
   140019a56:	sub    rsp,0x20
   140019a5a:	mov    rdx,QWORD PTR [rcx]
   140019a5d:	movsxd r13,r8d
   140019a60:	mov    r12,rcx
   140019a63:	movsxd rax,DWORD PTR [rdx+0x8]
   140019a67:	mov    r8d,r13d
   140019a6a:	lea    r14,[rdx+rax*8+0x10]
   140019a6f:	lea    rdx,[rsp+0x58]
   140019a74:	call   QWORD PTR [rip+0x5a2e]        # 0x14001f4a8
   140019a7a:	mov    r10,QWORD PTR [r12]
   140019a7e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140019a83:	movsxd r9,DWORD PTR [r10+0x8]
   140019a87:	mov    rsi,rax
   140019a8a:	mov    rdi,r14
   140019a8d:	add    rdx,r9
   140019a90:	lea    rbx,[r10+r9*8+0x10]
   140019a95:	lea    rbp,[r10+rdx*8+0x10]
   140019a9a:	cmp    rbx,rbp
   140019a9d:	je     0x140019abe
   140019a9f:	nop
   140019aa0:	test   rbx,rbx
   140019aa3:	je     0x140019ab1
   140019aa5:	mov    rdx,rdi
   140019aa8:	mov    rcx,rbx
   140019aab:	call   QWORD PTR [rip+0x5a3f]        # 0x14001f4f0
   140019ab1:	add    rbx,0x8
   140019ab5:	add    rdi,0x8
   140019ab9:	cmp    rbx,rbp
   140019abc:	jne    0x140019aa0
   140019abe:	mov    r8,QWORD PTR [r12]
   140019ac2:	movsxd rdx,DWORD PTR [rsp+0x58]
   140019ac7:	movsxd rcx,DWORD PTR [r8+0x8]
   140019acb:	movsxd rax,DWORD PTR [r8+0xc]
   140019acf:	lea    rdi,[r14+rdx*8]
   140019ad3:	add    rcx,rdx
   140019ad6:	lea    rbp,[r8+rax*8+0x10]
   140019adb:	add    rcx,r13
   140019ade:	lea    rbx,[r8+rcx*8+0x10]
   140019ae3:	cmp    rbx,rbp
   140019ae6:	je     0x140019b06
   140019ae8:	test   rbx,rbx
   140019aeb:	je     0x140019af9
   140019aed:	mov    rdx,rdi
   140019af0:	mov    rcx,rbx
   140019af3:	call   QWORD PTR [rip+0x59f7]        # 0x14001f4f0
   140019af9:	add    rbx,0x8
   140019afd:	add    rdi,0x8
   140019b01:	cmp    rbx,rbp
   140019b04:	jne    0x140019ae8
   140019b06:	mov    eax,DWORD PTR [rsi]
   140019b08:	test   eax,eax
   140019b0a:	je     0x140019b1c
   140019b0c:	cmp    eax,0xffffffff
   140019b0f:	je     0x140019b4e
   140019b11:	lock add DWORD PTR [rsi],0xffffffff
   140019b15:	setne  al
   140019b18:	test   al,al
   140019b1a:	jne    0x140019b4e
   140019b1c:	movsxd rax,DWORD PTR [rsi+0xc]
   140019b20:	lea    rbx,[rsi+rax*8+0x10]
   140019b25:	movsxd rax,DWORD PTR [rsi+0x8]
   140019b29:	lea    rdi,[rsi+rax*8+0x10]
   140019b2e:	cmp    rdi,rbx
   140019b31:	je     0x140019b45
   140019b33:	sub    rbx,0x8
   140019b37:	mov    rcx,rbx
   140019b3a:	call   QWORD PTR [rip+0x59e8]        # 0x14001f528
   140019b40:	cmp    rbx,rdi
   140019b43:	jne    0x140019b33
   140019b45:	mov    rcx,rsi
   140019b48:	call   QWORD PTR [rip+0x599a]        # 0x14001f4e8
   140019b4e:	mov    rdx,QWORD PTR [r12]
   140019b52:	movsxd rax,DWORD PTR [rsp+0x58]
   140019b57:	mov    rbx,QWORD PTR [rsp+0x50]
   140019b5c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140019b60:	mov    rbp,QWORD PTR [rsp+0x60]
   140019b65:	add    rcx,rax
   140019b68:	lea    rax,[rdx+rcx*8+0x10]
   140019b6d:	add    rsp,0x20
   140019b71:	pop    r14
   140019b73:	pop    r13
   140019b75:	pop    r12
   140019b77:	pop    rdi
   140019b78:	pop    rsi
   140019b79:	ret    
   140019b7a:	int3   
   140019b7b:	int3   
   140019b7c:	int3   
   140019b7d:	int3   
   140019b7e:	int3   
   140019b7f:	int3   
   140019b80:	mov    QWORD PTR [rsp+0x8],rbx
   140019b85:	mov    QWORD PTR [rsp+0x10],rbp
   140019b8a:	mov    QWORD PTR [rsp+0x18],rsi
   140019b8f:	push   rdi
   140019b90:	sub    rsp,0x20
   140019b94:	mov    r8,QWORD PTR [rcx]
   140019b97:	mov    rbx,rcx
   140019b9a:	movsxd rax,DWORD PTR [r8+0x8]
   140019b9e:	lea    rdi,[r8+rax*8+0x10]
   140019ba3:	call   QWORD PTR [rip+0x5907]        # 0x14001f4b0
   140019ba9:	mov    rdx,QWORD PTR [rbx]
   140019bac:	movsxd rcx,DWORD PTR [rdx+0xc]
   140019bb0:	mov    rsi,rax
   140019bb3:	lea    rbp,[rdx+rcx*8+0x10]
   140019bb8:	movsxd rcx,DWORD PTR [rdx+0x8]
   140019bbc:	lea    rbx,[rdx+rcx*8+0x10]
   140019bc1:	cmp    rbx,rbp
   140019bc4:	je     0x140019be4
   140019bc6:	test   rbx,rbx
   140019bc9:	je     0x140019bd7
   140019bcb:	mov    rdx,rdi
   140019bce:	mov    rcx,rbx
   140019bd1:	call   QWORD PTR [rip+0x5919]        # 0x14001f4f0
   140019bd7:	add    rbx,0x8
   140019bdb:	add    rdi,0x8
   140019bdf:	cmp    rbx,rbp
   140019be2:	jne    0x140019bc6
   140019be4:	mov    eax,DWORD PTR [rsi]
   140019be6:	test   eax,eax
   140019be8:	je     0x140019bfa
   140019bea:	cmp    eax,0xffffffff
   140019bed:	je     0x140019c2c
   140019bef:	lock add DWORD PTR [rsi],0xffffffff
   140019bf3:	setne  al
   140019bf6:	test   al,al
   140019bf8:	jne    0x140019c2c
   140019bfa:	movsxd rax,DWORD PTR [rsi+0xc]
   140019bfe:	lea    rbx,[rsi+rax*8+0x10]
   140019c03:	movsxd rax,DWORD PTR [rsi+0x8]
   140019c07:	lea    rdi,[rsi+rax*8+0x10]
   140019c0c:	cmp    rdi,rbx
   140019c0f:	je     0x140019c23
   140019c11:	sub    rbx,0x8
   140019c15:	mov    rcx,rbx
   140019c18:	call   QWORD PTR [rip+0x590a]        # 0x14001f528
   140019c1e:	cmp    rbx,rdi
   140019c21:	jne    0x140019c11
   140019c23:	mov    rcx,rsi
   140019c26:	call   QWORD PTR [rip+0x58bc]        # 0x14001f4e8
   140019c2c:	mov    rbx,QWORD PTR [rsp+0x30]
   140019c31:	mov    rbp,QWORD PTR [rsp+0x38]
   140019c36:	mov    rsi,QWORD PTR [rsp+0x40]
   140019c3b:	add    rsp,0x20
   140019c3f:	pop    rdi
   140019c40:	ret    
   140019c41:	int3   
   140019c42:	int3   
   140019c43:	int3   
   140019c44:	int3   
   140019c45:	int3   
   140019c46:	int3   
   140019c47:	int3   
   140019c48:	int3   
   140019c49:	int3   
   140019c4a:	int3   
   140019c4b:	int3   
   140019c4c:	int3   
   140019c4d:	int3   
   140019c4e:	int3   
   140019c4f:	int3   
   140019c50:	mov    QWORD PTR [rsp+0x8],rbx
   140019c55:	mov    QWORD PTR [rsp+0x18],rsi
   140019c5a:	push   rdi
   140019c5b:	sub    rsp,0x30
   140019c5f:	mov    rsi,QWORD PTR [rip+0x11422]        # 0x14002b088
   140019c66:	mov    r8,rdx
   140019c69:	mov    rbx,rcx
   140019c6c:	test   rdx,rdx
   140019c6f:	jne    0x140019d19
   140019c75:	test   rsi,rsi
   140019c78:	jne    0x140019d19
   140019c7e:	mov    r9,QWORD PTR [rcx]
   140019c81:	mov    eax,DWORD PTR [rcx+0x8]
   140019c84:	dec    eax
   140019c86:	cdqe   
   140019c88:	lea    rdx,[rax+rax*2]
   140019c8c:	mov    rax,QWORD PTR [r9+0x10]
   140019c90:	lea    r8,[rax+rdx*8]
   140019c94:	lea    rdx,[rsp+0x48]
   140019c99:	add    r8,r9
   140019c9c:	mov    r9d,DWORD PTR [r8+0x14]
   140019ca0:	lea    rcx,[r8+0x8]
   140019ca4:	mov    r8d,DWORD PTR [r8+0x10]
   140019ca8:	call   QWORD PTR [rip+0x5922]        # 0x14001f5d0
   140019cae:	mov    eax,DWORD PTR [rbx+0x8]
   140019cb1:	mov    r11,QWORD PTR [rbx]
   140019cb4:	dec    eax
   140019cb6:	cdqe   
   140019cb8:	lea    rcx,[rax+rax*2]
   140019cbc:	mov    rax,QWORD PTR [r11+0x10]
   140019cc0:	lea    rsi,[rax+rcx*8]
   140019cc4:	lea    rcx,[rsp+0x48]
   140019cc9:	add    rsi,r11
   140019ccc:	call   QWORD PTR [rip+0x589e]        # 0x14001f570
   140019cd2:	lea    rcx,[rbx+0x18]
   140019cd6:	mov    rdi,rax
   140019cd9:	call   0x140008170
   140019cde:	mov    rcx,rax
   140019ce1:	call   QWORD PTR [rip+0x5911]        # 0x14001f5f8
   140019ce7:	mov    rbx,rax
   140019cea:	call   QWORD PTR [rip+0x5438]        # 0x14001f128
   140019cf0:	mov    r9d,DWORD PTR [rsi]
   140019cf3:	lea    rdx,[rip+0xc9f6]        # 0x1400266f0
   140019cfa:	lea    rcx,[rax+0x60]
   140019cfe:	mov    r8,rbx
   140019d01:	mov    QWORD PTR [rsp+0x20],rdi
   140019d06:	call   QWORD PTR [rip+0x544c]        # 0x14001f158
   140019d0c:	lea    rcx,[rsp+0x48]
   140019d11:	call   QWORD PTR [rip+0x58a1]        # 0x14001f5b8
   140019d17:	jmp    0x140019d70
   140019d19:	mov    eax,DWORD PTR [rcx+0x8]
   140019d1c:	mov    rdx,QWORD PTR [rcx]
   140019d1f:	dec    eax
   140019d21:	cdqe   
   140019d23:	lea    rcx,[rax+rax*2]
   140019d27:	mov    rax,QWORD PTR [rdx+0x10]
   140019d2b:	lea    rdi,[rax+rcx*8]
   140019d2f:	lea    rcx,[rbx+0x18]
   140019d33:	add    rdi,rdx
   140019d36:	test   r8,r8
   140019d39:	cmovne rsi,r8
   140019d3d:	call   0x140008170
   140019d42:	mov    rcx,rax
   140019d45:	call   QWORD PTR [rip+0x58ad]        # 0x14001f5f8
   140019d4b:	mov    rbx,rax
   140019d4e:	call   QWORD PTR [rip+0x53d4]        # 0x14001f128
   140019d54:	mov    r9d,DWORD PTR [rdi]
   140019d57:	lea    rdx,[rip+0xc97a]        # 0x1400266d8
   140019d5e:	lea    rcx,[rax+0x60]
   140019d62:	mov    r8,rbx
   140019d65:	mov    QWORD PTR [rsp+0x20],rsi
   140019d6a:	call   QWORD PTR [rip+0x53e8]        # 0x14001f158
   140019d70:	mov    ecx,0x1
   140019d75:	call   QWORD PTR [rip+0x53b5]        # 0x14001f130
   140019d7b:	int3   
   140019d7c:	int3   
   140019d7d:	int3   
   140019d7e:	int3   
   140019d7f:	int3   
   140019d80:	rex push rsi
   140019d82:	sub    rsp,0x30
   140019d86:	cmp    BYTE PTR [rcx+0xc],0x0
   140019d8a:	mov    rsi,rdx
   140019d8d:	mov    r9,rcx
   140019d90:	je     0x140019e26
   140019d96:	test   rdx,rdx
   140019d99:	je     0x140019e26
   140019d9f:	movsxd rax,DWORD PTR [rcx+0x8]
   140019da3:	mov    QWORD PTR [rsp+0x48],rbx
   140019da8:	mov    QWORD PTR [rsp+0x58],rdi
   140019dad:	test   eax,eax
   140019daf:	jle    0x140019dc7
   140019db1:	mov    r8,QWORD PTR [rcx]
   140019db4:	lea    rcx,[rax+rax*2]
   140019db8:	mov    rax,QWORD PTR [r8+0x10]
   140019dbc:	lea    rcx,[rax+rcx*8]
   140019dc0:	mov    eax,DWORD PTR [rcx+r8*1-0x18]
   140019dc5:	jmp    0x140019dc9
   140019dc7:	xor    eax,eax
   140019dc9:	lea    rcx,[rsp+0x50]
   140019dce:	test   eax,eax
   140019dd0:	lea    rdi,[rsp+0x40]
   140019dd5:	cmovle rdi,rcx
   140019dd9:	lea    rcx,[r9+0x18]
   140019ddd:	mov    DWORD PTR [rsp+0x40],eax
   140019de1:	mov    DWORD PTR [rsp+0x50],0x0
   140019de9:	call   0x140008170
   140019dee:	mov    rcx,rax
   140019df1:	call   QWORD PTR [rip+0x5801]        # 0x14001f5f8
   140019df7:	mov    rbx,rax
   140019dfa:	call   QWORD PTR [rip+0x5328]        # 0x14001f128
   140019e00:	mov    r9d,DWORD PTR [rdi]
   140019e03:	lea    rdx,[rip+0xc906]        # 0x140026710
   140019e0a:	lea    rcx,[rax+0x60]
   140019e0e:	mov    r8,rbx
   140019e11:	mov    QWORD PTR [rsp+0x20],rsi
   140019e16:	call   QWORD PTR [rip+0x533c]        # 0x14001f158
   140019e1c:	mov    rdi,QWORD PTR [rsp+0x58]
   140019e21:	mov    rbx,QWORD PTR [rsp+0x48]
   140019e26:	add    rsp,0x30
   140019e2a:	pop    rsi
   140019e2b:	ret    
   140019e2c:	int3   
   140019e2d:	int3   
   140019e2e:	int3   
   140019e2f:	int3   
   140019e30:	sub    rsp,0x28
   140019e34:	sub    DWORD PTR [rcx+0x8],edx
   140019e37:	xor    edx,edx
   140019e39:	call   0x140019c50
   140019e3e:	int3   
   140019e3f:	int3   
   140019e40:	rex push rbx
   140019e42:	sub    rsp,0x30
   140019e46:	mov    rbx,rcx
   140019e49:	test   rdx,rdx
   140019e4c:	je     0x140019e6f
   140019e4e:	mov    QWORD PTR [rsp+0x48],rdi
   140019e53:	or     rcx,0xffffffffffffffff
   140019e57:	xor    eax,eax
   140019e59:	mov    rdi,rdx
   140019e5c:	repnz scas al,BYTE PTR es:[rdi]
   140019e5e:	mov    rdi,QWORD PTR [rsp+0x48]
   140019e63:	not    rcx
   140019e66:	dec    rcx
   140019e69:	mov    DWORD PTR [rsp+0x20],ecx
   140019e6d:	jmp    0x140019e77
   140019e6f:	mov    DWORD PTR [rsp+0x20],0x0
   140019e77:	mov    QWORD PTR [rsp+0x28],rdx
   140019e7c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140019e81:	lea    rcx,[rsp+0x40]
   140019e86:	lea    rdx,[rsp+0x20]
   140019e8b:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140019e91:	call   QWORD PTR [rip+0x54e9]        # 0x14001f380
   140019e97:	lea    rcx,[rsp+0x40]
   140019e9c:	mov    rdx,rbx
   140019e9f:	call   QWORD PTR [rip+0x54d3]        # 0x14001f378
   140019ea5:	lea    rcx,[rsp+0x40]
   140019eaa:	call   QWORD PTR [rip+0x5678]        # 0x14001f528
   140019eb0:	mov    rax,rbx
   140019eb3:	add    rsp,0x30
   140019eb7:	pop    rbx
   140019eb8:	ret    
   140019eb9:	int3   
   140019eba:	int3   
   140019ebb:	int3   
   140019ebc:	int3   
   140019ebd:	int3   
   140019ebe:	int3   
   140019ebf:	int3   
   140019ec0:	test   rdx,rdx
   140019ec3:	je     0x140019ed1
   140019ec5:	test   rcx,rcx
   140019ec8:	je     0x140019edd
   140019eca:	rex.W jmp QWORD PTR [rip+0x5767]        # 0x14001f638
   140019ed1:	test   rcx,rcx
   140019ed4:	je     0x140019edd
   140019ed6:	rex.W jmp QWORD PTR [rip+0x5763]        # 0x14001f640
   140019edd:	xor    eax,eax
   140019edf:	ret    
   140019ee0:	rex.W jmp QWORD PTR [rip+0x5749]        # 0x14001f630
   140019ee7:	int3   
   140019ee8:	int3   
   140019ee9:	int3   
   140019eea:	int3   
   140019eeb:	int3   
   140019eec:	int3   
   140019eed:	int3   
   140019eee:	int3   
   140019eef:	int3   
   140019ef0:	sub    rsp,0x38
   140019ef4:	mov    eax,DWORD PTR [rip+0x11196]        # 0x14002b090
   140019efa:	test   eax,eax
   140019efc:	jne    0x140019f67
   140019efe:	lea    rdx,[rip+0xcb53]        # 0x140026a58
   140019f05:	lea    rcx,[rsp+0x48]
   140019f0a:	mov    QWORD PTR [rsp+0x30],rbx
   140019f0f:	call   QWORD PTR [rip+0x547b]        # 0x14001f390
   140019f15:	lea    r8,[rip+0xffffffffffffffa4]        # 0x140019ec0
   140019f1c:	lea    rdx,[rip+0xffffffffffffffbd]        # 0x140019ee0
   140019f23:	lea    rcx,[rsp+0x48]
   140019f28:	mov    r9d,0x8
   140019f2e:	mov    QWORD PTR [rsp+0x28],0x0
   140019f37:	mov    DWORD PTR [rsp+0x40],0x7
   140019f3f:	mov    DWORD PTR [rsp+0x20],0x107
   140019f47:	call   QWORD PTR [rip+0x543b]        # 0x14001f388
   140019f4d:	lea    rcx,[rsp+0x48]
   140019f52:	mov    ebx,eax
   140019f54:	call   QWORD PTR [rip+0x565e]        # 0x14001f5b8
   140019f5a:	mov    DWORD PTR [rip+0x11130],ebx        # 0x14002b090
   140019f60:	mov    eax,ebx
   140019f62:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f67:	add    rsp,0x38
   140019f6b:	ret    
   140019f6c:	int3   
   140019f6d:	int3   
   140019f6e:	int3   
   140019f6f:	int3   
   140019f70:	mov    QWORD PTR [rsp+0x10],rbx
   140019f75:	mov    QWORD PTR [rsp+0x18],rbp
   140019f7a:	push   rsi
   140019f7b:	push   rdi
   140019f7c:	push   r12
   140019f7e:	push   r13
   140019f80:	push   r14
   140019f82:	sub    rsp,0x40
   140019f86:	mov    rax,QWORD PTR [rip+0x55bb]        # 0x14001f548
   140019f8d:	mov    r14,rdx
   140019f90:	mov    rdx,QWORD PTR [rcx+0x40]
   140019f94:	mov    QWORD PTR [rsp+0x20],rdx
   140019f99:	mov    QWORD PTR [rsp+0x70],rax
   140019f9e:	mov    eax,DWORD PTR [rdx]
   140019fa0:	mov    r13,r8
   140019fa3:	mov    rbx,rcx
   140019fa6:	test   eax,eax
   140019fa8:	je     0x140019fb5
   140019faa:	cmp    eax,0xffffffff
   140019fad:	je     0x14001a023
   140019faf:	lock add DWORD PTR [rdx],0x1
   140019fb3:	jmp    0x14001a01e
   140019fb5:	mov    edx,DWORD PTR [rdx+0x4]
   140019fb8:	lea    rcx,[rsp+0x20]
   140019fbd:	call   QWORD PTR [rip+0x54ed]        # 0x14001f4b0
   140019fc3:	mov    rdx,QWORD PTR [rsp+0x20]
   140019fc8:	mov    rcx,QWORD PTR [rbx+0x40]
   140019fcc:	movsxd rax,DWORD PTR [rdx+0xc]
   140019fd0:	lea    rsi,[rdx+rax*8+0x10]
   140019fd5:	movsxd rax,DWORD PTR [rcx+0x8]
   140019fd9:	lea    rdi,[rcx+rax*8+0x10]
   140019fde:	movsxd rax,DWORD PTR [rdx+0x8]
   140019fe2:	lea    rbx,[rdx+rax*8+0x10]
   140019fe7:	cmp    rbx,rsi
   140019fea:	je     0x14001a023
   140019fec:	nop    DWORD PTR [rax+0x0]
   140019ff0:	mov    ecx,0x48
   140019ff5:	call   0x14001e1c6
   140019ffa:	test   rax,rax
   140019ffd:	je     0x14001a00c
   140019fff:	mov    rdx,QWORD PTR [rdi]
   14001a002:	mov    rcx,rax
   14001a005:	call   0x140001b60
   14001a00a:	jmp    0x14001a00e
   14001a00c:	xor    eax,eax
   14001a00e:	mov    QWORD PTR [rbx],rax
   14001a011:	add    rbx,0x8
   14001a015:	add    rdi,0x8
   14001a019:	cmp    rbx,rsi
   14001a01c:	jne    0x140019ff0
   14001a01e:	mov    rdx,QWORD PTR [rsp+0x20]
   14001a023:	mov    DWORD PTR [rsp+0x28],0x0
   14001a02b:	movsxd rax,DWORD PTR [rdx+0x8]
   14001a02f:	lea    rcx,[rdx+rax*8+0x10]
   14001a034:	mov    QWORD PTR [rsp+0x30],rcx
   14001a039:	movsxd rax,DWORD PTR [rdx+0xc]
   14001a03d:	lea    rdx,[rdx+rax*8+0x10]
   14001a042:	mov    QWORD PTR [rsp+0x38],rdx
   14001a047:	nop    WORD PTR [rax+rax*1+0x0]
   14001a050:	mov    eax,0x1
   14001a055:	mov    DWORD PTR [rsp+0x28],eax
   14001a059:	cmp    rcx,rdx
   14001a05c:	je     0x14001a0f8
   14001a062:	mov    rdi,QWORD PTR [rcx]
   14001a065:	test   eax,eax
   14001a067:	je     0x14001a0e0
   14001a069:	mov    rax,QWORD PTR [rsp+0x70]
   14001a06e:	mov    ecx,DWORD PTR [rax]
   14001a070:	cmp    ecx,0x1
   14001a073:	je     0x14001a0ac
   14001a075:	test   ecx,ecx
   14001a077:	je     0x14001a0ac
   14001a079:	lea    rcx,[rsp+0x70]
   14001a07e:	mov    edx,0x7fffffff
   14001a083:	mov    r8d,0x1
   14001a089:	call   0x1400030e0
   14001a08e:	test   rax,rax
   14001a091:	je     0x14001a0d4
   14001a093:	lea    rdx,[rdi+0x28]
   14001a097:	mov    rcx,rax
   14001a09a:	call   QWORD PTR [rip+0x5538]        # 0x14001f5d8
   14001a0a0:	mov    eax,DWORD PTR [rsp+0x28]
   14001a0a4:	dec    eax
   14001a0a6:	mov    DWORD PTR [rsp+0x28],eax
   14001a0aa:	jmp    0x14001a065
   14001a0ac:	lea    rdx,[rdi+0x28]
   14001a0b0:	lea    rcx,[rsp+0x88]
   14001a0b8:	call   QWORD PTR [rip+0x551a]        # 0x14001f5d8
   14001a0be:	lea    rcx,[rsp+0x70]
   14001a0c3:	call   QWORD PTR [rip+0x50d7]        # 0x14001f1a0
   14001a0c9:	mov    rcx,QWORD PTR [rsp+0x88]
   14001a0d1:	mov    QWORD PTR [rax],rcx
   14001a0d4:	mov    eax,DWORD PTR [rsp+0x28]
   14001a0d8:	dec    eax
   14001a0da:	mov    DWORD PTR [rsp+0x28],eax
   14001a0de:	jmp    0x14001a065
   14001a0e0:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a0e5:	mov    rdx,QWORD PTR [rsp+0x38]
   14001a0ea:	add    rcx,0x8
   14001a0ee:	mov    QWORD PTR [rsp+0x30],rcx
   14001a0f3:	jmp    0x14001a050
   14001a0f8:	mov    rsi,QWORD PTR [rsp+0x20]
   14001a0fd:	mov    eax,DWORD PTR [rsi]
   14001a0ff:	test   eax,eax
   14001a101:	je     0x14001a120
   14001a103:	cmp    eax,0xffffffff
   14001a106:	je     0x14001a19e
   14001a10c:	lock add DWORD PTR [rsi],0xffffffff
   14001a110:	setne  al
   14001a113:	test   al,al
   14001a115:	jne    0x14001a19e
   14001a11b:	mov    rsi,QWORD PTR [rsp+0x20]
   14001a120:	movsxd rax,DWORD PTR [rsi+0xc]
   14001a124:	lea    rbx,[rsi+rax*8+0x10]
   14001a129:	movsxd rax,DWORD PTR [rsi+0x8]
   14001a12d:	lea    r12,[rsi+rax*8+0x10]
   14001a132:	cmp    r12,rbx
   14001a135:	je     0x14001a195
   14001a137:	nop    WORD PTR [rax+rax*1+0x0]
   14001a140:	mov    rdi,QWORD PTR [rbx-0x8]
   14001a144:	sub    rbx,0x8
   14001a148:	test   rdi,rdi
   14001a14b:	je     0x14001a190
   14001a14d:	lea    rcx,[rdi+0x38]
   14001a151:	call   QWORD PTR [rip+0x5461]        # 0x14001f5b8
   14001a157:	lea    rcx,[rdi+0x30]
   14001a15b:	call   QWORD PTR [rip+0x5457]        # 0x14001f5b8
   14001a161:	lea    rcx,[rdi+0x28]
   14001a165:	call   QWORD PTR [rip+0x544d]        # 0x14001f5b8
   14001a16b:	lea    rcx,[rdi+0x20]
   14001a16f:	call   QWORD PTR [rip+0x5443]        # 0x14001f5b8
   14001a175:	lea    rcx,[rdi+0x8]
   14001a179:	call   QWORD PTR [rip+0x5439]        # 0x14001f5b8
   14001a17f:	mov    rcx,rdi
   14001a182:	call   QWORD PTR [rip+0x5430]        # 0x14001f5b8
   14001a188:	mov    rcx,rdi
   14001a18b:	call   0x14001e1c0
   14001a190:	cmp    rbx,r12
   14001a193:	jne    0x14001a140
   14001a195:	mov    rcx,rsi
   14001a198:	call   QWORD PTR [rip+0x534a]        # 0x14001f4e8
   14001a19e:	lea    rcx,[rsp+0x70]
   14001a1a3:	mov    r8,r13
   14001a1a6:	mov    rdx,r14
   14001a1a9:	call   QWORD PTR [rip+0x5479]        # 0x14001f628
   14001a1af:	mov    rdi,QWORD PTR [rsp+0x70]
   14001a1b4:	mov    r12d,eax
   14001a1b7:	mov    eax,DWORD PTR [rdi]
   14001a1b9:	test   eax,eax
   14001a1bb:	je     0x14001a1d2
   14001a1bd:	cmp    eax,0xffffffff
   14001a1c0:	je     0x14001a20b
   14001a1c2:	lock add DWORD PTR [rdi],0xffffffff
   14001a1c6:	setne  cl
   14001a1c9:	test   cl,cl
   14001a1cb:	jne    0x14001a20b
   14001a1cd:	mov    rdi,QWORD PTR [rsp+0x70]
   14001a1d2:	movsxd rax,DWORD PTR [rdi+0xc]
   14001a1d6:	lea    rbx,[rdi+rax*8+0x10]
   14001a1db:	movsxd rax,DWORD PTR [rdi+0x8]
   14001a1df:	lea    rsi,[rdi+rax*8+0x10]
   14001a1e4:	cmp    rsi,rbx
   14001a1e7:	je     0x14001a202
   14001a1e9:	nop    DWORD PTR [rax+0x0]
   14001a1f0:	sub    rbx,0x8
   14001a1f4:	mov    rcx,rbx
   14001a1f7:	call   QWORD PTR [rip+0x53bb]        # 0x14001f5b8
   14001a1fd:	cmp    rbx,rsi
   14001a200:	jne    0x14001a1f0
   14001a202:	mov    rcx,rdi
   14001a205:	call   QWORD PTR [rip+0x52dd]        # 0x14001f4e8
   14001a20b:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a210:	mov    rbp,QWORD PTR [rsp+0x80]
   14001a218:	mov    eax,r12d
   14001a21b:	add    rsp,0x40
   14001a21f:	pop    r14
   14001a221:	pop    r13
   14001a223:	pop    r12
   14001a225:	pop    rdi
   14001a226:	pop    rsi
   14001a227:	ret    
   14001a228:	int3   
   14001a229:	int3   
   14001a22a:	int3   
   14001a22b:	int3   
   14001a22c:	int3   
   14001a22d:	int3   
   14001a22e:	int3   
   14001a22f:	int3   
   14001a230:	mov    BYTE PTR [rsp+0x18],r8b
   14001a235:	mov    QWORD PTR [rsp+0x10],rdx
   14001a23a:	mov    QWORD PTR [rsp+0x8],rcx
   14001a23f:	push   rbx
   14001a240:	push   rbp
   14001a241:	push   rsi
   14001a242:	push   rdi
   14001a243:	push   r12
   14001a245:	push   r13
   14001a247:	push   r14
   14001a249:	push   r15
   14001a24b:	sub    rsp,0x2f8
   14001a252:	mov    rax,QWORD PTR [rdx+0x30]
   14001a256:	mov    r13,rcx
   14001a259:	lea    rcx,[rdx+0x30]
   14001a25d:	mov    edi,DWORD PTR [rax+0x4]
   14001a260:	movzx  esi,r8b
   14001a264:	mov    r14,rdx
   14001a267:	call   QWORD PTR [rip+0x538b]        # 0x14001f5f8
   14001a26d:	mov    rcx,rax
   14001a270:	xor    eax,eax
   14001a272:	test   rcx,rcx
   14001a275:	je     0x14001a290
   14001a277:	test   edi,edi
   14001a279:	je     0x14001a290
   14001a27b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a280:	movzx  edx,BYTE PTR [rcx]
   14001a283:	inc    rcx
   14001a286:	test   dl,dl
   14001a288:	je     0x14001a290
   14001a28a:	inc    eax
   14001a28c:	cmp    eax,edi
   14001a28e:	jb     0x14001a280
   14001a290:	lea    rcx,[r14+0x30]
   14001a294:	mov    DWORD PTR [rsp+0x50],eax
   14001a298:	call   QWORD PTR [rip+0x535a]        # 0x14001f5f8
   14001a29e:	lea    rdx,[rsp+0x260]
   14001a2a6:	lea    rcx,[rsp+0xe0]
   14001a2ae:	mov    QWORD PTR [rsp+0x58],rax
   14001a2b3:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001a2b8:	movdqa XMMWORD PTR [rsp+0x260],xmm0
   14001a2c1:	call   QWORD PTR [rip+0x50b9]        # 0x14001f380
   14001a2c7:	or     rbp,0xffffffffffffffff
   14001a2cb:	xor    eax,eax
   14001a2cd:	lea    r15,[rip+0xc3f4]        # 0x1400266c8
   14001a2d4:	lea    rdx,[rip+0xc3f5]        # 0x1400266d0
   14001a2db:	mov    rcx,rbp
   14001a2de:	test   sil,sil
   14001a2e1:	je     0x14001a307
   14001a2e3:	mov    rdi,rdx
   14001a2e6:	mov    QWORD PTR [rsp+0x1c8],rdx
   14001a2ee:	repnz scas al,BYTE PTR es:[rdi]
   14001a2f0:	not    rcx
   14001a2f3:	dec    rcx
   14001a2f6:	mov    DWORD PTR [rsp+0x1c0],ecx
   14001a2fd:	lea    rcx,[rsp+0x1c0]
   14001a305:	jmp    0x14001a329
   14001a307:	mov    rdi,r15
   14001a30a:	mov    QWORD PTR [rsp+0x1e8],r15
   14001a312:	repnz scas al,BYTE PTR es:[rdi]
   14001a314:	not    rcx
   14001a317:	dec    rcx
   14001a31a:	mov    DWORD PTR [rsp+0x1e0],ecx
   14001a321:	lea    rcx,[rsp+0x1e0]
   14001a329:	mov    rax,QWORD PTR [rcx]
   14001a32c:	lea    rdx,[rsp+0x240]
   14001a334:	mov    QWORD PTR [rdx],rax
   14001a337:	mov    rax,QWORD PTR [rcx+0x8]
   14001a33b:	lea    rcx,[rsp+0x98]
   14001a343:	mov    QWORD PTR [rdx+0x8],rax
   14001a347:	lea    rdx,[rsp+0x240]
   14001a34f:	call   QWORD PTR [rip+0x502b]        # 0x14001f380
   14001a355:	lea    rcx,[rsp+0x7c]
   14001a35a:	mov    dl,0x20
   14001a35c:	call   QWORD PTR [rip+0x509e]        # 0x14001f400
   14001a362:	lea    rcx,[rsp+0x84]
   14001a36a:	mov    dl,0x20
   14001a36c:	mov    rbx,rax
   14001a36f:	call   QWORD PTR [rip+0x508b]        # 0x14001f400
   14001a375:	lea    rdx,[rip+0xc86c]        # 0x140026be8
   14001a37c:	lea    rcx,[rsp+0x128]
   14001a384:	mov    r8d,ebp
   14001a387:	mov    rdi,rax
   14001a38a:	call   QWORD PTR [rip+0x5068]        # 0x14001f3f8
   14001a390:	movzx  edx,WORD PTR [rdi]
   14001a393:	lea    r8,[rsp+0x98]
   14001a39b:	mov    WORD PTR [rsp+0x20],dx
   14001a3a0:	lea    rdx,[rsp+0x1a8]
   14001a3a8:	mov    rcx,rax
   14001a3ab:	xor    r9d,r9d
   14001a3ae:	call   QWORD PTR [rip+0x503c]        # 0x14001f3f0
   14001a3b4:	lea    r8,[rsp+0xe0]
   14001a3bc:	lea    rdx,[rsp+0x40]
   14001a3c1:	mov    rcx,rax
   14001a3c4:	movzx  eax,WORD PTR [rbx]
   14001a3c7:	xor    r9d,r9d
   14001a3ca:	mov    WORD PTR [rsp+0x20],ax
   14001a3cf:	call   QWORD PTR [rip+0x501b]        # 0x14001f3f0
   14001a3d5:	lea    rcx,[rsp+0x1a8]
   14001a3dd:	call   QWORD PTR [rip+0x5145]        # 0x14001f528
   14001a3e3:	lea    rcx,[rsp+0x128]
   14001a3eb:	call   QWORD PTR [rip+0x5137]        # 0x14001f528
   14001a3f1:	lea    rcx,[rsp+0x98]
   14001a3f9:	call   QWORD PTR [rip+0x5129]        # 0x14001f528
   14001a3ff:	lea    rcx,[rsp+0xe0]
   14001a407:	call   QWORD PTR [rip+0x511b]        # 0x14001f528
   14001a40d:	lea    rcx,[r14+0x20]
   14001a411:	call   QWORD PTR [rip+0x51e1]        # 0x14001f5f8
   14001a417:	mov    rcx,rax
   14001a41a:	call   QWORD PTR [rip+0x51a8]        # 0x14001f5c8
   14001a420:	cmp    eax,0x2b
   14001a423:	je     0x14001a5f1
   14001a429:	test   eax,eax
   14001a42b:	je     0x14001a5e7
   14001a431:	mov    ecx,eax
   14001a433:	call   QWORD PTR [rip+0x51d7]        # 0x14001f610
   14001a439:	mov    rbx,rax
   14001a43c:	test   rax,rax
   14001a43f:	je     0x14001a5d9
   14001a445:	xor    eax,eax
   14001a447:	mov    rcx,rbp
   14001a44a:	mov    rdi,rbx
   14001a44d:	repnz scas al,BYTE PTR es:[rdi]
   14001a44f:	mov    QWORD PTR [rsp+0x58],rbx
   14001a454:	lea    rdx,[rsp+0x2a0]
   14001a45c:	not    rcx
   14001a45f:	dec    rcx
   14001a462:	mov    DWORD PTR [rsp+0x50],ecx
   14001a466:	lea    rcx,[rsp+0xa8]
   14001a46e:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001a473:	movdqa XMMWORD PTR [rsp+0x2a0],xmm0
   14001a47c:	call   QWORD PTR [rip+0x4efe]        # 0x14001f380
   14001a482:	lea    rdx,[rsp+0xc8]
   14001a48a:	lea    rcx,[rsp+0xa8]
   14001a492:	call   QWORD PTR [rip+0x4ee0]        # 0x14001f378
   14001a498:	lea    rcx,[rsp+0xa8]
   14001a4a0:	call   QWORD PTR [rip+0x5082]        # 0x14001f528
   14001a4a6:	lea    rcx,[rsp+0x7e]
   14001a4ab:	mov    dl,0x20
   14001a4ad:	call   QWORD PTR [rip+0x4f4d]        # 0x14001f400
   14001a4b3:	lea    rdx,[rip+0xc706]        # 0x140026bc0
   14001a4ba:	lea    rcx,[rsp+0x188]
   14001a4c2:	mov    r8d,ebp
   14001a4c5:	mov    rdi,rax
   14001a4c8:	call   QWORD PTR [rip+0x4f2a]        # 0x14001f3f8
   14001a4ce:	lea    r8,[rsp+0xc8]
   14001a4d6:	lea    rdx,[rsp+0xf8]
   14001a4de:	mov    rcx,rax
   14001a4e1:	movzx  eax,WORD PTR [rdi]
   14001a4e4:	xor    r9d,r9d
   14001a4e7:	mov    WORD PTR [rsp+0x20],ax
   14001a4ec:	call   QWORD PTR [rip+0x4efe]        # 0x14001f3f0
   14001a4f2:	lea    rcx,[rsp+0x40]
   14001a4f7:	mov    rdx,rax
   14001a4fa:	call   QWORD PTR [rip+0x4ee8]        # 0x14001f3e8
   14001a500:	lea    rcx,[rsp+0xf8]
   14001a508:	call   QWORD PTR [rip+0x501a]        # 0x14001f528
   14001a50e:	lea    rcx,[rsp+0x188]
   14001a516:	call   QWORD PTR [rip+0x500c]        # 0x14001f528
   14001a51c:	lea    rcx,[rsp+0xc8]
   14001a524:	call   QWORD PTR [rip+0x4ffe]        # 0x14001f528
   14001a52a:	mov    rcx,rbx
   14001a52d:	call   QWORD PTR [rip+0x50e5]        # 0x14001f618
   14001a533:	test   eax,eax
   14001a535:	jne    0x14001a5f1
   14001a53b:	lea    rcx,[rsp+0x60]
   14001a540:	mov    dl,0x20
   14001a542:	call   QWORD PTR [rip+0x4eb8]        # 0x14001f400
   14001a548:	lea    rcx,[r14+0x20]
   14001a54c:	mov    rbx,rax
   14001a54f:	call   QWORD PTR [rip+0x50a3]        # 0x14001f5f8
   14001a555:	lea    rcx,[rsp+0x120]
   14001a55d:	mov    rdx,rax
   14001a560:	call   0x140019e40
   14001a565:	lea    rdx,[rip+0xc604]        # 0x140026b70
   14001a56c:	lea    rcx,[rsp+0x198]
   14001a574:	mov    r8d,ebp
   14001a577:	mov    rdi,rax
   14001a57a:	call   QWORD PTR [rip+0x4e78]        # 0x14001f3f8
   14001a580:	movzx  edx,WORD PTR [rbx]
   14001a583:	xor    r9d,r9d
   14001a586:	mov    WORD PTR [rsp+0x20],dx
   14001a58b:	lea    rdx,[rsp+0x108]
   14001a593:	mov    rcx,rax
   14001a596:	mov    r8,rdi
   14001a599:	call   QWORD PTR [rip+0x4e51]        # 0x14001f3f0
   14001a59f:	lea    rcx,[rsp+0x40]
   14001a5a4:	mov    rdx,rax
   14001a5a7:	call   QWORD PTR [rip+0x4e3b]        # 0x14001f3e8
   14001a5ad:	lea    rcx,[rsp+0x108]
   14001a5b5:	call   QWORD PTR [rip+0x4f6d]        # 0x14001f528
   14001a5bb:	lea    rcx,[rsp+0x198]
   14001a5c3:	call   QWORD PTR [rip+0x4f5f]        # 0x14001f528
   14001a5c9:	lea    rcx,[rsp+0x120]
   14001a5d1:	call   QWORD PTR [rip+0x4f51]        # 0x14001f528
   14001a5d7:	jmp    0x14001a5f1
   14001a5d9:	mov    rcx,r13
   14001a5dc:	call   QWORD PTR [rip+0x4dfe]        # 0x14001f3e0
   14001a5e2:	jmp    0x14001b3d0
   14001a5e7:	mov    rax,QWORD PTR [r14+0x20]
   14001a5eb:	cmp    DWORD PTR [rax+0x4],0x0
   14001a5ef:	jne    0x14001a5d9
   14001a5f1:	mov    rax,QWORD PTR [r14+0x40]
   14001a5f5:	mov    QWORD PTR [rsp+0x38],rax
   14001a5fa:	mov    ecx,DWORD PTR [rax]
   14001a5fc:	test   ecx,ecx
   14001a5fe:	je     0x14001a60b
   14001a600:	cmp    ecx,0xffffffff
   14001a603:	je     0x14001a670
   14001a605:	lock add DWORD PTR [rax],0x1
   14001a609:	jmp    0x14001a670
   14001a60b:	mov    edx,DWORD PTR [rax+0x4]
   14001a60e:	lea    rcx,[rsp+0x38]
   14001a613:	call   QWORD PTR [rip+0x4e97]        # 0x14001f4b0
   14001a619:	mov    rdx,QWORD PTR [rsp+0x38]
   14001a61e:	mov    rcx,QWORD PTR [r14+0x40]
   14001a622:	movsxd rax,DWORD PTR [rdx+0xc]
   14001a626:	lea    r12,[rdx+rax*8+0x10]
   14001a62b:	movsxd rax,DWORD PTR [rcx+0x8]
   14001a62f:	lea    rbx,[rcx+rax*8+0x10]
   14001a634:	movsxd rax,DWORD PTR [rdx+0x8]
   14001a638:	lea    rdi,[rdx+rax*8+0x10]
   14001a63d:	cmp    rdi,r12
   14001a640:	je     0x14001a670
   14001a642:	mov    ecx,0x48
   14001a647:	call   0x14001e1c6
   14001a64c:	test   rax,rax
   14001a64f:	je     0x14001a65e
   14001a651:	mov    rdx,QWORD PTR [rbx]
   14001a654:	mov    rcx,rax
   14001a657:	call   0x140001b60
   14001a65c:	jmp    0x14001a660
   14001a65e:	xor    eax,eax
   14001a660:	mov    QWORD PTR [rdi],rax
   14001a663:	add    rdi,0x8
   14001a667:	add    rbx,0x8
   14001a66b:	cmp    rdi,r12
   14001a66e:	jne    0x14001a642
   14001a670:	mov    rax,QWORD PTR [rip+0x4eb9]        # 0x14001f530
   14001a677:	lea    rcx,[rsp+0x48]
   14001a67c:	mov    QWORD PTR [rsp+0x30],rax
   14001a681:	call   QWORD PTR [rip+0x4d59]        # 0x14001f3e0
   14001a687:	lea    r8,[rsp+0x48]
   14001a68c:	lea    rdx,[rsp+0x30]
   14001a691:	mov    rcx,r14
   14001a694:	call   0x140019f70
   14001a699:	movsxd rbx,eax
   14001a69c:	cmp    ebx,0xffffffff
   14001a69f:	jne    0x14001a81a
   14001a6a5:	lea    rdx,[rsp+0x48]
   14001a6aa:	lea    rcx,[rsp+0x1b8]
   14001a6b2:	call   QWORD PTR [rip+0x4e38]        # 0x14001f4f0
   14001a6b8:	lea    rdx,[rsp+0x130]
   14001a6c0:	mov    rcx,rax
   14001a6c3:	call   QWORD PTR [rip+0x4c8f]        # 0x14001f358
   14001a6c9:	mov    rcx,rax
   14001a6cc:	call   QWORD PTR [rip+0x4f26]        # 0x14001f5f8
   14001a6d2:	lea    rcx,[rsp+0x2d0]
   14001a6da:	xor    r9d,r9d
   14001a6dd:	xor    r8d,r8d
   14001a6e0:	xor    edx,edx
   14001a6e2:	mov    rdi,rax
   14001a6e5:	call   QWORD PTR [rip+0x4ced]        # 0x14001f3d8
   14001a6eb:	lea    rdx,[rsp+0xe8]
   14001a6f3:	mov    rcx,rax
   14001a6f6:	call   QWORD PTR [rip+0x4cd4]        # 0x14001f3d0
   14001a6fc:	mov    rdx,rdi
   14001a6ff:	mov    rcx,rax
   14001a702:	call   QWORD PTR [rip+0x4cc0]        # 0x14001f3c8
   14001a708:	lea    rcx,[rsp+0xe8]
   14001a710:	call   QWORD PTR [rip+0x4caa]        # 0x14001f3c0
   14001a716:	lea    rcx,[rsp+0x130]
   14001a71e:	call   QWORD PTR [rip+0x4e94]        # 0x14001f5b8
   14001a724:	lea    rcx,[rsp+0x1b8]
   14001a72c:	call   QWORD PTR [rip+0x4df6]        # 0x14001f528
   14001a732:	mov    rcx,r13
   14001a735:	call   QWORD PTR [rip+0x4ca5]        # 0x14001f3e0
   14001a73b:	lea    rcx,[rsp+0x48]
   14001a740:	call   QWORD PTR [rip+0x4de2]        # 0x14001f528
   14001a746:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a74b:	mov    eax,DWORD PTR [rcx]
   14001a74d:	test   eax,eax
   14001a74f:	je     0x14001a769
   14001a751:	cmp    eax,ebx
   14001a753:	je     0x14001a778
   14001a755:	mov    eax,ebp
   14001a757:	lock xadd DWORD PTR [rcx],eax
   14001a75b:	add    eax,ebx
   14001a75d:	setne  al
   14001a760:	test   al,al
   14001a762:	jne    0x14001a778
   14001a764:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a769:	mov    edx,0x4
   14001a76e:	lea    r8d,[rdx+0x4]
   14001a772:	call   QWORD PTR [rip+0x4d98]        # 0x14001f510
   14001a778:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a77d:	mov    eax,DWORD PTR [rsi]
   14001a77f:	test   eax,eax
   14001a781:	je     0x14001a7a3
   14001a783:	cmp    eax,0xffffffff
   14001a786:	je     0x14001b3d0
   14001a78c:	lock xadd DWORD PTR [rsi],ebp
   14001a790:	add    ebp,0xffffffff
   14001a793:	setne  al
   14001a796:	test   al,al
   14001a798:	jne    0x14001b3d0
   14001a79e:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a7a3:	movsxd rax,DWORD PTR [rsi+0xc]
   14001a7a7:	lea    rbx,[rsi+rax*8+0x10]
   14001a7ac:	movsxd rax,DWORD PTR [rsi+0x8]
   14001a7b0:	lea    rbp,[rsi+rax*8+0x10]
   14001a7b5:	cmp    rbp,rbx
   14001a7b8:	je     0x14001b3c7
   14001a7be:	xchg   ax,ax
   14001a7c0:	mov    rdi,QWORD PTR [rbx-0x8]
   14001a7c4:	sub    rbx,0x8
   14001a7c8:	test   rdi,rdi
   14001a7cb:	je     0x14001a810
   14001a7cd:	lea    rcx,[rdi+0x38]
   14001a7d1:	call   QWORD PTR [rip+0x4de1]        # 0x14001f5b8
   14001a7d7:	lea    rcx,[rdi+0x30]
   14001a7db:	call   QWORD PTR [rip+0x4dd7]        # 0x14001f5b8
   14001a7e1:	lea    rcx,[rdi+0x28]
   14001a7e5:	call   QWORD PTR [rip+0x4dcd]        # 0x14001f5b8
   14001a7eb:	lea    rcx,[rdi+0x20]
   14001a7ef:	call   QWORD PTR [rip+0x4dc3]        # 0x14001f5b8
   14001a7f5:	lea    rcx,[rdi+0x8]
   14001a7f9:	call   QWORD PTR [rip+0x4db9]        # 0x14001f5b8
   14001a7ff:	mov    rcx,rdi
   14001a802:	call   QWORD PTR [rip+0x4db0]        # 0x14001f5b8
   14001a808:	mov    rcx,rdi
   14001a80b:	call   0x14001e1c0
   14001a810:	cmp    rbx,rbp
   14001a813:	jne    0x14001a7c0
   14001a815:	jmp    0x14001b3c7
   14001a81a:	test   sil,sil
   14001a81d:	je     0x14001aa2a
   14001a823:	mov    rax,QWORD PTR [rsp+0x30]
   14001a828:	lea    ecx,[rbx+0x1]
   14001a82b:	cmp    ecx,DWORD PTR [rax+0x4]
   14001a82e:	je     0x14001a91c
   14001a834:	mov    rcx,r13
   14001a837:	call   QWORD PTR [rip+0x4ba3]        # 0x14001f3e0
   14001a83d:	lea    rcx,[rsp+0x48]
   14001a842:	call   QWORD PTR [rip+0x4ce0]        # 0x14001f528
   14001a848:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a84d:	mov    eax,DWORD PTR [rcx]
   14001a84f:	test   eax,eax
   14001a851:	je     0x14001a86d
   14001a853:	cmp    eax,0xffffffff
   14001a856:	je     0x14001a87c
   14001a858:	mov    eax,ebp
   14001a85a:	lock xadd DWORD PTR [rcx],eax
   14001a85e:	add    eax,0xffffffff
   14001a861:	setne  al
   14001a864:	test   al,al
   14001a866:	jne    0x14001a87c
   14001a868:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a86d:	mov    edx,0x4
   14001a872:	lea    r8d,[rdx+0x4]
   14001a876:	call   QWORD PTR [rip+0x4c94]        # 0x14001f510
   14001a87c:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a881:	mov    eax,DWORD PTR [rsi]
   14001a883:	test   eax,eax
   14001a885:	je     0x14001a8a7
   14001a887:	cmp    eax,0xffffffff
   14001a88a:	je     0x14001b3d0
   14001a890:	lock xadd DWORD PTR [rsi],ebp
   14001a894:	add    ebp,0xffffffff
   14001a897:	setne  al
   14001a89a:	test   al,al
   14001a89c:	jne    0x14001b3d0
   14001a8a2:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a8a7:	movsxd rax,DWORD PTR [rsi+0xc]
   14001a8ab:	lea    rbx,[rsi+rax*8+0x10]
   14001a8b0:	movsxd rax,DWORD PTR [rsi+0x8]
   14001a8b4:	lea    rbp,[rsi+rax*8+0x10]
   14001a8b9:	cmp    rbp,rbx
   14001a8bc:	je     0x14001b3c7
   14001a8c2:	mov    rdi,QWORD PTR [rbx-0x8]
   14001a8c6:	sub    rbx,0x8
   14001a8ca:	test   rdi,rdi
   14001a8cd:	je     0x14001a912
   14001a8cf:	lea    rcx,[rdi+0x38]
   14001a8d3:	call   QWORD PTR [rip+0x4cdf]        # 0x14001f5b8
   14001a8d9:	lea    rcx,[rdi+0x30]
   14001a8dd:	call   QWORD PTR [rip+0x4cd5]        # 0x14001f5b8
   14001a8e3:	lea    rcx,[rdi+0x28]
   14001a8e7:	call   QWORD PTR [rip+0x4ccb]        # 0x14001f5b8
   14001a8ed:	lea    rcx,[rdi+0x20]
   14001a8f1:	call   QWORD PTR [rip+0x4cc1]        # 0x14001f5b8
   14001a8f7:	lea    rcx,[rdi+0x8]
   14001a8fb:	call   QWORD PTR [rip+0x4cb7]        # 0x14001f5b8
   14001a901:	mov    rcx,rdi
   14001a904:	call   QWORD PTR [rip+0x4cae]        # 0x14001f5b8
   14001a90a:	mov    rcx,rdi
   14001a90d:	call   0x14001e1c0
   14001a912:	cmp    rbx,rbp
   14001a915:	jne    0x14001a8c2
   14001a917:	jmp    0x14001b3c7
   14001a91c:	mov    rcx,QWORD PTR [rax+0x10]
   14001a920:	mov    rdx,rbx
   14001a923:	lea    rdi,[rcx+rbx*4]
   14001a927:	add    rdi,rax
   14001a92a:	call   0x140019ef0
   14001a92f:	cmp    DWORD PTR [rdi],eax
   14001a931:	jne    0x14001aa2a
   14001a937:	mov    rcx,r13
   14001a93a:	call   QWORD PTR [rip+0x4aa0]        # 0x14001f3e0
   14001a940:	lea    rcx,[rsp+0x48]
   14001a945:	call   QWORD PTR [rip+0x4bdd]        # 0x14001f528
   14001a94b:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a950:	mov    eax,DWORD PTR [rcx]
   14001a952:	test   eax,eax
   14001a954:	je     0x14001a970
   14001a956:	cmp    eax,0xffffffff
   14001a959:	je     0x14001a97f
   14001a95b:	mov    eax,ebp
   14001a95d:	lock xadd DWORD PTR [rcx],eax
   14001a961:	add    eax,0xffffffff
   14001a964:	setne  al
   14001a967:	test   al,al
   14001a969:	jne    0x14001a97f
   14001a96b:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a970:	mov    edx,0x4
   14001a975:	lea    r8d,[rdx+0x4]
   14001a979:	call   QWORD PTR [rip+0x4b91]        # 0x14001f510
   14001a97f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a984:	mov    eax,DWORD PTR [rsi]
   14001a986:	test   eax,eax
   14001a988:	je     0x14001a9aa
   14001a98a:	cmp    eax,0xffffffff
   14001a98d:	je     0x14001b3d0
   14001a993:	lock xadd DWORD PTR [rsi],ebp
   14001a997:	add    ebp,0xffffffff
   14001a99a:	setne  al
   14001a99d:	test   al,al
   14001a99f:	jne    0x14001b3d0
   14001a9a5:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a9aa:	movsxd rax,DWORD PTR [rsi+0xc]
   14001a9ae:	lea    rbx,[rsi+rax*8+0x10]
   14001a9b3:	movsxd rax,DWORD PTR [rsi+0x8]
   14001a9b7:	lea    rbp,[rsi+rax*8+0x10]
   14001a9bc:	cmp    rbp,rbx
   14001a9bf:	je     0x14001b3c7
   14001a9c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001a9d0:	mov    rdi,QWORD PTR [rbx-0x8]
   14001a9d4:	sub    rbx,0x8
   14001a9d8:	test   rdi,rdi
   14001a9db:	je     0x14001aa20
   14001a9dd:	lea    rcx,[rdi+0x38]
   14001a9e1:	call   QWORD PTR [rip+0x4bd1]        # 0x14001f5b8
   14001a9e7:	lea    rcx,[rdi+0x30]
   14001a9eb:	call   QWORD PTR [rip+0x4bc7]        # 0x14001f5b8
   14001a9f1:	lea    rcx,[rdi+0x28]
   14001a9f5:	call   QWORD PTR [rip+0x4bbd]        # 0x14001f5b8
   14001a9fb:	lea    rcx,[rdi+0x20]
   14001a9ff:	call   QWORD PTR [rip+0x4bb3]        # 0x14001f5b8
   14001aa05:	lea    rcx,[rdi+0x8]
   14001aa09:	call   QWORD PTR [rip+0x4ba9]        # 0x14001f5b8
   14001aa0f:	mov    rcx,rdi
   14001aa12:	call   QWORD PTR [rip+0x4ba0]        # 0x14001f5b8
   14001aa18:	mov    rcx,rdi
   14001aa1b:	call   0x14001e1c0
   14001aa20:	cmp    rbx,rbp
   14001aa23:	jne    0x14001a9d0
   14001aa25:	jmp    0x14001b3c7
   14001aa2a:	mov    rax,QWORD PTR [rsp+0x30]
   14001aa2f:	movzx  edx,BYTE PTR [r14+0x62]
   14001aa34:	mov    r12d,0x1
   14001aa3a:	cmp    DWORD PTR [rax+0x4],r12d
   14001aa3e:	mov    BYTE PTR [rsp+0x358],dl
   14001aa45:	jle    0x14001b04b
   14001aa4b:	mov    ecx,r12d
   14001aa4e:	xor    r14d,r14d
   14001aa51:	mov    r13,rbx
   14001aa54:	sub    ecx,ebx
   14001aa56:	mov    QWORD PTR [rsp+0x178],rbx
   14001aa5e:	mov    DWORD PTR [rsp+0x88],ecx
   14001aa65:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001aa70:	mov    rdi,QWORD PTR [rax+0x10]
   14001aa74:	lea    r15,[r12*4+0x0]
   14001aa7c:	add    rdi,rax
   14001aa7f:	call   0x140019ef0
   14001aa84:	cmp    DWORD PTR [rdi+r15*1],eax
   14001aa88:	jne    0x14001aa98
   14001aa8a:	mov    dl,0x1
   14001aa8c:	mov    BYTE PTR [rsp+0x358],dl
   14001aa93:	jmp    0x14001b01c
   14001aa98:	lea    rcx,[rsp+0x68]
   14001aa9d:	call   QWORD PTR [rip+0x493d]        # 0x14001f3e0
   14001aaa3:	mov    rdx,QWORD PTR [rsp+0x38]
   14001aaa8:	movsxd rax,DWORD PTR [rdx+0x8]
   14001aaac:	add    rax,r12
   14001aaaf:	mov    rax,QWORD PTR [rdx+rax*8+0x8]
   14001aab4:	mov    rcx,QWORD PTR [rax+0x30]
   14001aab8:	cmp    DWORD PTR [rcx+0x4],0x0
   14001aabc:	je     0x14001ab65
   14001aac2:	movsxd rax,DWORD PTR [rdx+0x8]
   14001aac6:	lea    rcx,[rsp+0x82]
   14001aace:	add    rax,r12
   14001aad1:	mov    rdi,QWORD PTR [rdx+rax*8+0x8]
   14001aad6:	mov    dl,0x20
   14001aad8:	call   QWORD PTR [rip+0x4922]        # 0x14001f400
   14001aade:	lea    rdx,[rdi+0x30]
   14001aae2:	lea    rcx,[rsp+0x150]
   14001aaea:	mov    rbx,rax
   14001aaed:	call   QWORD PTR [rip+0x48c5]        # 0x14001f3b8
   14001aaf3:	lea    rdx,[rip+0xc066]        # 0x140026b60
   14001aafa:	lea    rcx,[rsp+0x180]
   14001ab02:	mov    r8d,ebp
   14001ab05:	mov    rdi,rax
   14001ab08:	call   QWORD PTR [rip+0x48ea]        # 0x14001f3f8
   14001ab0e:	movzx  edx,WORD PTR [rbx]
   14001ab11:	xor    r9d,r9d
   14001ab14:	mov    WORD PTR [rsp+0x20],dx
   14001ab19:	lea    rdx,[rsp+0x140]
   14001ab21:	mov    rcx,rax
   14001ab24:	mov    r8,rdi
   14001ab27:	call   QWORD PTR [rip+0x48c3]        # 0x14001f3f0
   14001ab2d:	lea    rcx,[rsp+0x68]
   14001ab32:	mov    rdx,rax
   14001ab35:	call   QWORD PTR [rip+0x4875]        # 0x14001f3b0
   14001ab3b:	lea    rcx,[rsp+0x140]
   14001ab43:	call   QWORD PTR [rip+0x49df]        # 0x14001f528
   14001ab49:	lea    rcx,[rsp+0x180]
   14001ab51:	call   QWORD PTR [rip+0x49d1]        # 0x14001f528
   14001ab57:	lea    rcx,[rsp+0x150]
   14001ab5f:	call   QWORD PTR [rip+0x49c3]        # 0x14001f528
   14001ab65:	test   sil,sil
   14001ab68:	jne    0x14001ab74
   14001ab6a:	cmp    r12,r13
   14001ab6d:	jg     0x14001ab74
   14001ab6f:	xor    r13b,r13b
   14001ab72:	jmp    0x14001ab77
   14001ab74:	mov    r13b,0x1
   14001ab77:	mov    rax,QWORD PTR [rsp+0x30]
   14001ab7c:	mov    rcx,QWORD PTR [rax+0x10]
   14001ab80:	add    rcx,rax
   14001ab83:	mov    ecx,DWORD PTR [rcx+r15*1]
   14001ab87:	call   QWORD PTR [rip+0x4a83]        # 0x14001f610
   14001ab8d:	mov    rcx,rbp
   14001ab90:	mov    rbx,rax
   14001ab93:	mov    QWORD PTR [rsp+0x1b0],rax
   14001ab9b:	xor    eax,eax
   14001ab9d:	test   r13b,r13b
   14001aba0:	je     0x14001abcd
   14001aba2:	lea    rdx,[rip+0xbfaf]        # 0x140026b58
   14001aba9:	mov    rdi,rdx
   14001abac:	mov    QWORD PTR [rsp+0x228],rdx
   14001abb4:	repnz scas al,BYTE PTR es:[rdi]
   14001abb6:	not    rcx
   14001abb9:	dec    rcx
   14001abbc:	mov    DWORD PTR [rsp+0x220],ecx
   14001abc3:	lea    rcx,[rsp+0x220]
   14001abcb:	jmp    0x14001abf6
   14001abcd:	lea    rdx,[rip+0xbf80]        # 0x140026b54
   14001abd4:	mov    rdi,rdx
   14001abd7:	mov    QWORD PTR [rsp+0x208],rdx
   14001abdf:	repnz scas al,BYTE PTR es:[rdi]
   14001abe1:	not    rcx
   14001abe4:	dec    rcx
   14001abe7:	mov    DWORD PTR [rsp+0x200],ecx
   14001abee:	lea    rcx,[rsp+0x200]
   14001abf6:	mov    rax,QWORD PTR [rcx]
   14001abf9:	lea    rdx,[rsp+0x280]
   14001ac01:	mov    QWORD PTR [rdx],rax
   14001ac04:	mov    rax,QWORD PTR [rcx+0x8]
   14001ac08:	lea    rcx,[rsp+0xd8]
   14001ac10:	mov    QWORD PTR [rdx+0x8],rax
   14001ac14:	lea    rdx,[rsp+0x280]
   14001ac1c:	call   QWORD PTR [rip+0x475e]        # 0x14001f380
   14001ac22:	test   rbx,rbx
   14001ac25:	je     0x14001ac40
   14001ac27:	xor    eax,eax
   14001ac29:	mov    rcx,rbp
   14001ac2c:	mov    rdi,rbx
   14001ac2f:	repnz scas al,BYTE PTR es:[rdi]
   14001ac31:	not    rcx
   14001ac34:	dec    rcx
   14001ac37:	mov    DWORD PTR [rsp+0x110],ecx
   14001ac3e:	jmp    0x14001ac4b
   14001ac40:	mov    DWORD PTR [rsp+0x110],0x0
   14001ac4b:	mov    QWORD PTR [rsp+0x118],rbx
   14001ac53:	movaps xmm0,XMMWORD PTR [rsp+0x110]
   14001ac5b:	lea    rdx,[rsp+0x2c0]
   14001ac63:	lea    rcx,[rsp+0xb8]
   14001ac6b:	movdqa XMMWORD PTR [rsp+0x2c0],xmm0
   14001ac74:	call   QWORD PTR [rip+0x4706]        # 0x14001f380
   14001ac7a:	lea    rcx,[rsp+0x7a]
   14001ac7f:	mov    dl,0x20
   14001ac81:	call   QWORD PTR [rip+0x4779]        # 0x14001f400
   14001ac87:	lea    rcx,[rsp+0x86]
   14001ac8f:	mov    dl,0x20
   14001ac91:	mov    rsi,rax
   14001ac94:	call   QWORD PTR [rip+0x4766]        # 0x14001f400
   14001ac9a:	lea    rcx,[rsp+0x78]
   14001ac9f:	mov    dl,0x20
   14001aca1:	mov    rbx,rax
   14001aca4:	call   QWORD PTR [rip+0x4756]        # 0x14001f400
   14001acaa:	lea    rdx,[rip+0xbe77]        # 0x140026b28
   14001acb1:	lea    rcx,[rsp+0x170]
   14001acb9:	mov    r8d,ebp
   14001acbc:	mov    rdi,rax
   14001acbf:	call   QWORD PTR [rip+0x4733]        # 0x14001f3f8
   14001acc5:	movzx  edx,WORD PTR [rdi]
   14001acc8:	lea    r8,[rsp+0x68]
   14001accd:	mov    WORD PTR [rsp+0x20],dx
   14001acd2:	lea    rdx,[rsp+0x190]
   14001acda:	mov    rcx,rax
   14001acdd:	xor    r9d,r9d
   14001ace0:	call   QWORD PTR [rip+0x470a]        # 0x14001f3f0
   14001ace6:	lea    r8,[rsp+0xb8]
   14001acee:	lea    rdx,[rsp+0x160]
   14001acf6:	mov    rcx,rax
   14001acf9:	movzx  eax,WORD PTR [rbx]
   14001acfc:	xor    r9d,r9d
   14001acff:	mov    WORD PTR [rsp+0x20],ax
   14001ad04:	call   QWORD PTR [rip+0x46e6]        # 0x14001f3f0
   14001ad0a:	lea    r8,[rsp+0xd8]
   14001ad12:	mov    rcx,rax
   14001ad15:	movzx  eax,WORD PTR [rsi]
   14001ad18:	lea    rdx,[rsp+0x1a0]
   14001ad20:	xor    r9d,r9d
   14001ad23:	mov    WORD PTR [rsp+0x20],ax
   14001ad28:	call   QWORD PTR [rip+0x46c2]        # 0x14001f3f0
   14001ad2e:	lea    rcx,[rsp+0x40]
   14001ad33:	mov    rdx,rax
   14001ad36:	call   QWORD PTR [rip+0x46ac]        # 0x14001f3e8
   14001ad3c:	lea    rcx,[rsp+0x1a0]
   14001ad44:	call   QWORD PTR [rip+0x47de]        # 0x14001f528
   14001ad4a:	lea    rcx,[rsp+0x160]
   14001ad52:	call   QWORD PTR [rip+0x47d0]        # 0x14001f528
   14001ad58:	lea    rcx,[rsp+0x190]
   14001ad60:	call   QWORD PTR [rip+0x47c2]        # 0x14001f528
   14001ad66:	lea    rcx,[rsp+0x170]
   14001ad6e:	call   QWORD PTR [rip+0x47b4]        # 0x14001f528
   14001ad74:	lea    rcx,[rsp+0xb8]
   14001ad7c:	call   QWORD PTR [rip+0x47a6]        # 0x14001f528
   14001ad82:	lea    rcx,[rsp+0xd8]
   14001ad8a:	call   QWORD PTR [rip+0x4798]        # 0x14001f528
   14001ad90:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14001ad98:	call   QWORD PTR [rip+0x487a]        # 0x14001f618
   14001ad9e:	test   eax,eax
   14001ada0:	jne    0x14001affa
   14001ada6:	mov    rax,QWORD PTR [rsp+0x30]
   14001adab:	mov    rcx,QWORD PTR [rax+0x10]
   14001adaf:	add    rcx,rax
   14001adb2:	mov    ecx,DWORD PTR [rcx+r15*1]
   14001adb6:	call   QWORD PTR [rip+0x45ec]        # 0x14001f3a8
   14001adbc:	mov    rbx,rax
   14001adbf:	test   r13b,r13b
   14001adc2:	je     0x14001addb
   14001adc4:	cmp    BYTE PTR [rsp+0x350],0x0
   14001adcc:	jne    0x14001addb
   14001adce:	mov    r15d,DWORD PTR [rsp+0x88]
   14001add6:	add    r15d,r14d
   14001add9:	jmp    0x14001adde
   14001addb:	mov    r15d,r14d
   14001adde:	xor    eax,eax
   14001ade0:	mov    rcx,rbp
   14001ade3:	test   r13b,r13b
   14001ade6:	je     0x14001ae13
   14001ade8:	lea    rdx,[rip+0xbd31]        # 0x140026b20
   14001adef:	mov    rdi,rdx
   14001adf2:	mov    QWORD PTR [rsp+0x1d8],rdx
   14001adfa:	repnz scas al,BYTE PTR es:[rdi]
   14001adfc:	not    rcx
   14001adff:	dec    rcx
   14001ae02:	mov    DWORD PTR [rsp+0x1d0],ecx
   14001ae09:	lea    rcx,[rsp+0x1d0]
   14001ae11:	jmp    0x14001ae3c
   14001ae13:	lea    rdx,[rip+0xbd02]        # 0x140026b1c
   14001ae1a:	mov    rdi,rdx
   14001ae1d:	mov    QWORD PTR [rsp+0x1f8],rdx
   14001ae25:	repnz scas al,BYTE PTR es:[rdi]
   14001ae27:	not    rcx
   14001ae2a:	dec    rcx
   14001ae2d:	mov    DWORD PTR [rsp+0x1f0],ecx
   14001ae34:	lea    rcx,[rsp+0x1f0]
   14001ae3c:	mov    rax,QWORD PTR [rcx]
   14001ae3f:	lea    rdx,[rsp+0x250]
   14001ae47:	mov    QWORD PTR [rdx],rax
   14001ae4a:	mov    rax,QWORD PTR [rcx+0x8]
   14001ae4e:	lea    rcx,[rsp+0xc0]
   14001ae56:	mov    QWORD PTR [rdx+0x8],rax
   14001ae5a:	lea    rdx,[rsp+0x250]
   14001ae62:	call   QWORD PTR [rip+0x4518]        # 0x14001f380
   14001ae68:	test   rbx,rbx
   14001ae6b:	je     0x14001ae83
   14001ae6d:	xor    eax,eax
   14001ae6f:	mov    rcx,rbp
   14001ae72:	mov    rdi,rbx
   14001ae75:	repnz scas al,BYTE PTR es:[rdi]
   14001ae77:	not    rcx
   14001ae7a:	dec    rcx
   14001ae7d:	mov    DWORD PTR [rsp+0x50],ecx
   14001ae81:	jmp    0x14001ae8b
   14001ae83:	mov    DWORD PTR [rsp+0x50],0x0
   14001ae8b:	mov    QWORD PTR [rsp+0x58],rbx
   14001ae90:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001ae95:	lea    rdx,[rsp+0x270]
   14001ae9d:	lea    rcx,[rsp+0xa0]
   14001aea5:	movdqa XMMWORD PTR [rsp+0x270],xmm0
   14001aeae:	call   QWORD PTR [rip+0x44cc]        # 0x14001f380
   14001aeb4:	lea    rdx,[rsp+0xb0]
   14001aebc:	lea    rcx,[rsp+0xa0]
   14001aec4:	call   QWORD PTR [rip+0x44ae]        # 0x14001f378
   14001aeca:	lea    rcx,[rsp+0xa0]
   14001aed2:	call   QWORD PTR [rip+0x4650]        # 0x14001f528
   14001aed8:	lea    rcx,[rsp+0x8c]
   14001aee0:	mov    dl,0x20
   14001aee2:	call   QWORD PTR [rip+0x4518]        # 0x14001f400
   14001aee8:	lea    rcx,[rsp+0x90]
   14001aef0:	mov    dl,0x20
   14001aef2:	mov    rsi,rax
   14001aef5:	call   QWORD PTR [rip+0x4505]        # 0x14001f400
   14001aefb:	lea    rcx,[rsp+0x8e]
   14001af03:	mov    dl,0x20
   14001af05:	mov    rbx,rax
   14001af08:	call   QWORD PTR [rip+0x44f2]        # 0x14001f400
   14001af0e:	lea    rdx,[rip+0xbbbb]        # 0x140026ad0
   14001af15:	lea    rcx,[rsp+0x168]
   14001af1d:	mov    r8d,ebp
   14001af20:	mov    rdi,rax
   14001af23:	call   QWORD PTR [rip+0x44cf]        # 0x14001f3f8
   14001af29:	movzx  edx,WORD PTR [rdi]
   14001af2c:	lea    r8,[rsp+0xc0]
   14001af34:	mov    WORD PTR [rsp+0x20],dx
   14001af39:	lea    rdx,[rsp+0x158]
   14001af41:	mov    rcx,rax
   14001af44:	xor    r9d,r9d
   14001af47:	call   QWORD PTR [rip+0x44a3]        # 0x14001f3f0
   14001af4d:	lea    rdx,[rsp+0x148]
   14001af55:	xor    r9d,r9d
   14001af58:	mov    rcx,rax
   14001af5b:	movzx  eax,WORD PTR [rbx]
   14001af5e:	mov    r8d,r15d
   14001af61:	mov    WORD PTR [rsp+0x28],ax
   14001af66:	mov    DWORD PTR [rsp+0x20],0xa
   14001af6e:	call   QWORD PTR [rip+0x442c]        # 0x14001f3a0
   14001af74:	mov    rcx,rax
   14001af77:	movzx  eax,WORD PTR [rsi]
   14001af7a:	lea    r8,[rsp+0xb0]
   14001af82:	lea    rdx,[rsp+0x138]
   14001af8a:	xor    r9d,r9d
   14001af8d:	mov    WORD PTR [rsp+0x20],ax
   14001af92:	call   QWORD PTR [rip+0x4458]        # 0x14001f3f0
   14001af98:	lea    rcx,[rsp+0x40]
   14001af9d:	mov    rdx,rax
   14001afa0:	call   QWORD PTR [rip+0x4442]        # 0x14001f3e8
   14001afa6:	lea    rcx,[rsp+0x138]
   14001afae:	call   QWORD PTR [rip+0x4574]        # 0x14001f528
   14001afb4:	lea    rcx,[rsp+0x148]
   14001afbc:	call   QWORD PTR [rip+0x4566]        # 0x14001f528
   14001afc2:	lea    rcx,[rsp+0x158]
   14001afca:	call   QWORD PTR [rip+0x4558]        # 0x14001f528
   14001afd0:	lea    rcx,[rsp+0x168]
   14001afd8:	call   QWORD PTR [rip+0x454a]        # 0x14001f528
   14001afde:	lea    rcx,[rsp+0xb0]
   14001afe6:	call   QWORD PTR [rip+0x453c]        # 0x14001f528
   14001afec:	lea    rcx,[rsp+0xc0]
   14001aff4:	call   QWORD PTR [rip+0x452e]        # 0x14001f528
   14001affa:	lea    rcx,[rsp+0x68]
   14001afff:	call   QWORD PTR [rip+0x4523]        # 0x14001f528
   14001b005:	mov    sil,BYTE PTR [rsp+0x350]
   14001b00d:	mov    dl,BYTE PTR [rsp+0x358]
   14001b014:	mov    r13,QWORD PTR [rsp+0x178]
   14001b01c:	mov    rax,QWORD PTR [rsp+0x30]
   14001b021:	inc    r14d
   14001b024:	inc    r12
   14001b027:	lea    ecx,[r14+0x1]
   14001b02b:	cmp    ecx,DWORD PTR [rax+0x4]
   14001b02e:	jl     0x14001aa70
   14001b034:	mov    r13,QWORD PTR [rsp+0x340]
   14001b03c:	mov    r14,QWORD PTR [rsp+0x348]
   14001b044:	lea    r15,[rip+0xb67d]        # 0x1400266c8
   14001b04b:	test   dl,dl
   14001b04d:	je     0x14001b059
   14001b04f:	mov    ecx,0x10
   14001b054:	lea    eax,[rcx+0x10]
   14001b057:	jmp    0x14001b063
   14001b059:	mov    ecx,0x100
   14001b05e:	mov    eax,0x200
   14001b063:	test   sil,sil
   14001b066:	cmovne ecx,eax
   14001b069:	mov    eax,ecx
   14001b06b:	and    eax,DWORD PTR [rip+0x10027]        # 0x14002b098
   14001b071:	cmp    eax,ecx
   14001b073:	je     0x14001b16a
   14001b079:	mov    rcx,r13
   14001b07c:	call   QWORD PTR [rip+0x435e]        # 0x14001f3e0
   14001b082:	lea    rcx,[rsp+0x48]
   14001b087:	call   QWORD PTR [rip+0x449b]        # 0x14001f528
   14001b08d:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b092:	mov    eax,DWORD PTR [rcx]
   14001b094:	test   eax,eax
   14001b096:	je     0x14001b0b2
   14001b098:	cmp    eax,0xffffffff
   14001b09b:	je     0x14001b0c1
   14001b09d:	mov    eax,ebp
   14001b09f:	lock xadd DWORD PTR [rcx],eax
   14001b0a3:	add    eax,0xffffffff
   14001b0a6:	setne  al
   14001b0a9:	test   al,al
   14001b0ab:	jne    0x14001b0c1
   14001b0ad:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b0b2:	mov    edx,0x4
   14001b0b7:	lea    r8d,[rdx+0x4]
   14001b0bb:	call   QWORD PTR [rip+0x444f]        # 0x14001f510
   14001b0c1:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b0c6:	mov    eax,DWORD PTR [rsi]
   14001b0c8:	test   eax,eax
   14001b0ca:	je     0x14001b0ec
   14001b0cc:	cmp    eax,0xffffffff
   14001b0cf:	je     0x14001b3d0
   14001b0d5:	lock xadd DWORD PTR [rsi],ebp
   14001b0d9:	add    ebp,0xffffffff
   14001b0dc:	setne  al
   14001b0df:	test   al,al
   14001b0e1:	jne    0x14001b3d0
   14001b0e7:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b0ec:	movsxd rax,DWORD PTR [rsi+0xc]
   14001b0f0:	lea    rbx,[rsi+rax*8+0x10]
   14001b0f5:	movsxd rax,DWORD PTR [rsi+0x8]
   14001b0f9:	lea    rbp,[rsi+rax*8+0x10]
   14001b0fe:	cmp    rbp,rbx
   14001b101:	je     0x14001b3c7
   14001b107:	nop    WORD PTR [rax+rax*1+0x0]
   14001b110:	mov    rdi,QWORD PTR [rbx-0x8]
   14001b114:	sub    rbx,0x8
   14001b118:	test   rdi,rdi
   14001b11b:	je     0x14001b160
   14001b11d:	lea    rcx,[rdi+0x38]
   14001b121:	call   QWORD PTR [rip+0x4491]        # 0x14001f5b8
   14001b127:	lea    rcx,[rdi+0x30]
   14001b12b:	call   QWORD PTR [rip+0x4487]        # 0x14001f5b8
   14001b131:	lea    rcx,[rdi+0x28]
   14001b135:	call   QWORD PTR [rip+0x447d]        # 0x14001f5b8
   14001b13b:	lea    rcx,[rdi+0x20]
   14001b13f:	call   QWORD PTR [rip+0x4473]        # 0x14001f5b8
   14001b145:	lea    rcx,[rdi+0x8]
   14001b149:	call   QWORD PTR [rip+0x4469]        # 0x14001f5b8
   14001b14f:	mov    rcx,rdi
   14001b152:	call   QWORD PTR [rip+0x4460]        # 0x14001f5b8
   14001b158:	mov    rcx,rdi
   14001b15b:	call   0x14001e1c0
   14001b160:	cmp    rbx,rbp
   14001b163:	jne    0x14001b110
   14001b165:	jmp    0x14001b3c7
   14001b16a:	lea    rcx,[r14+0x28]
   14001b16e:	call   QWORD PTR [rip+0x4484]        # 0x14001f5f8
   14001b174:	mov    rcx,rax
   14001b177:	call   QWORD PTR [rip+0x44a3]        # 0x14001f620
   14001b17d:	test   al,al
   14001b17f:	je     0x14001b1c2
   14001b181:	lea    rdx,[rip+0xb8f8]        # 0x140026a80
   14001b188:	xor    eax,eax
   14001b18a:	mov    rcx,rbp
   14001b18d:	mov    rdi,rdx
   14001b190:	mov    QWORD PTR [rsp+0x58],rdx
   14001b195:	lea    rdx,[rsp+0x290]
   14001b19d:	repnz scas al,BYTE PTR es:[rdi]
   14001b19f:	not    rcx
   14001b1a2:	dec    rcx
   14001b1a5:	mov    DWORD PTR [rsp+0x50],ecx
   14001b1a9:	lea    rcx,[rsp+0x40]
   14001b1ae:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001b1b3:	movdqa XMMWORD PTR [rsp+0x290],xmm0
   14001b1bc:	call   QWORD PTR [rip+0x41d6]        # 0x14001f398
   14001b1c2:	lea    rdx,[rsp+0x40]
   14001b1c7:	lea    rcx,[rsp+0x70]
   14001b1cc:	call   QWORD PTR [rip+0x431e]        # 0x14001f4f0
   14001b1d2:	xor    eax,eax
   14001b1d4:	mov    rcx,rbp
   14001b1d7:	test   sil,sil
   14001b1da:	je     0x14001b207
   14001b1dc:	lea    rdx,[rip+0xb4ed]        # 0x1400266d0
   14001b1e3:	mov    rdi,rdx
   14001b1e6:	mov    QWORD PTR [rsp+0x218],rdx
   14001b1ee:	repnz scas al,BYTE PTR es:[rdi]
   14001b1f0:	not    rcx
   14001b1f3:	dec    rcx
   14001b1f6:	mov    DWORD PTR [rsp+0x210],ecx
   14001b1fd:	lea    rcx,[rsp+0x210]
   14001b205:	jmp    0x14001b229
   14001b207:	mov    rdi,r15
   14001b20a:	mov    QWORD PTR [rsp+0x238],r15
   14001b212:	repnz scas al,BYTE PTR es:[rdi]
   14001b214:	not    rcx
   14001b217:	dec    rcx
   14001b21a:	mov    DWORD PTR [rsp+0x230],ecx
   14001b221:	lea    rcx,[rsp+0x230]
   14001b229:	mov    rax,QWORD PTR [rcx]
   14001b22c:	lea    rdx,[rsp+0x2b0]
   14001b234:	mov    QWORD PTR [rdx],rax
   14001b237:	mov    rax,QWORD PTR [rcx+0x8]
   14001b23b:	lea    rcx,[rsp+0xd0]
   14001b243:	mov    QWORD PTR [rdx+0x8],rax
   14001b247:	lea    rdx,[rsp+0x2b0]
   14001b24f:	call   QWORD PTR [rip+0x412b]        # 0x14001f380
   14001b255:	lea    rcx,[rsp+0x80]
   14001b25d:	mov    dl,0x20
   14001b25f:	call   QWORD PTR [rip+0x419b]        # 0x14001f400
   14001b265:	lea    rdx,[rip+0xb7fc]        # 0x140026a68
   14001b26c:	lea    rcx,[rsp+0x100]
   14001b274:	mov    r8d,ebp
   14001b277:	mov    rdi,rax
   14001b27a:	call   QWORD PTR [rip+0x4178]        # 0x14001f3f8
   14001b280:	lea    r8,[rsp+0xd0]
   14001b288:	lea    rdx,[rsp+0xf0]
   14001b290:	mov    rcx,rax
   14001b293:	movzx  eax,WORD PTR [rdi]
   14001b296:	xor    r9d,r9d
   14001b299:	mov    WORD PTR [rsp+0x20],ax
   14001b29e:	call   QWORD PTR [rip+0x414c]        # 0x14001f3f0
   14001b2a4:	lea    rcx,[rsp+0x70]
   14001b2a9:	mov    rdx,rax
   14001b2ac:	call   QWORD PTR [rip+0x4136]        # 0x14001f3e8
   14001b2b2:	lea    rcx,[rsp+0xf0]
   14001b2ba:	call   QWORD PTR [rip+0x4268]        # 0x14001f528
   14001b2c0:	lea    rcx,[rsp+0x100]
   14001b2c8:	call   QWORD PTR [rip+0x425a]        # 0x14001f528
   14001b2ce:	lea    rcx,[rsp+0xd0]
   14001b2d6:	call   QWORD PTR [rip+0x424c]        # 0x14001f528
   14001b2dc:	lea    rdx,[rsp+0x70]
   14001b2e1:	mov    rcx,r13
   14001b2e4:	call   QWORD PTR [rip+0x4206]        # 0x14001f4f0
   14001b2ea:	lea    rcx,[rsp+0x70]
   14001b2ef:	call   QWORD PTR [rip+0x4233]        # 0x14001f528
   14001b2f5:	lea    rcx,[rsp+0x48]
   14001b2fa:	call   QWORD PTR [rip+0x4228]        # 0x14001f528
   14001b300:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b305:	mov    eax,DWORD PTR [rcx]
   14001b307:	test   eax,eax
   14001b309:	je     0x14001b325
   14001b30b:	cmp    eax,0xffffffff
   14001b30e:	je     0x14001b334
   14001b310:	mov    eax,ebp
   14001b312:	lock xadd DWORD PTR [rcx],eax
   14001b316:	add    eax,0xffffffff
   14001b319:	setne  al
   14001b31c:	test   al,al
   14001b31e:	jne    0x14001b334
   14001b320:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b325:	mov    edx,0x4
   14001b32a:	lea    r8d,[rdx+0x4]
   14001b32e:	call   QWORD PTR [rip+0x41dc]        # 0x14001f510
   14001b334:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b339:	mov    eax,DWORD PTR [rsi]
   14001b33b:	test   eax,eax
   14001b33d:	je     0x14001b35b
   14001b33f:	cmp    eax,0xffffffff
   14001b342:	je     0x14001b3d0
   14001b348:	lock xadd DWORD PTR [rsi],ebp
   14001b34c:	add    ebp,0xffffffff
   14001b34f:	setne  al
   14001b352:	test   al,al
   14001b354:	jne    0x14001b3d0
   14001b356:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b35b:	movsxd rax,DWORD PTR [rsi+0xc]
   14001b35f:	lea    rbx,[rsi+rax*8+0x10]
   14001b364:	movsxd rax,DWORD PTR [rsi+0x8]
   14001b368:	lea    rbp,[rsi+rax*8+0x10]
   14001b36d:	cmp    rbp,rbx
   14001b370:	je     0x14001b3c7
   14001b372:	mov    rdi,QWORD PTR [rbx-0x8]
   14001b376:	sub    rbx,0x8
   14001b37a:	test   rdi,rdi
   14001b37d:	je     0x14001b3c2
   14001b37f:	lea    rcx,[rdi+0x38]
   14001b383:	call   QWORD PTR [rip+0x422f]        # 0x14001f5b8
   14001b389:	lea    rcx,[rdi+0x30]
   14001b38d:	call   QWORD PTR [rip+0x4225]        # 0x14001f5b8
   14001b393:	lea    rcx,[rdi+0x28]
   14001b397:	call   QWORD PTR [rip+0x421b]        # 0x14001f5b8
   14001b39d:	lea    rcx,[rdi+0x20]
   14001b3a1:	call   QWORD PTR [rip+0x4211]        # 0x14001f5b8
   14001b3a7:	lea    rcx,[rdi+0x8]
   14001b3ab:	call   QWORD PTR [rip+0x4207]        # 0x14001f5b8
   14001b3b1:	mov    rcx,rdi
   14001b3b4:	call   QWORD PTR [rip+0x41fe]        # 0x14001f5b8
   14001b3ba:	mov    rcx,rdi
   14001b3bd:	call   0x14001e1c0
   14001b3c2:	cmp    rbx,rbp
   14001b3c5:	jne    0x14001b372
   14001b3c7:	mov    rcx,rsi
   14001b3ca:	call   QWORD PTR [rip+0x4118]        # 0x14001f4e8
   14001b3d0:	lea    rcx,[rsp+0x40]
   14001b3d5:	call   QWORD PTR [rip+0x414d]        # 0x14001f528
   14001b3db:	mov    rax,r13
   14001b3de:	add    rsp,0x2f8
   14001b3e5:	pop    r15
   14001b3e7:	pop    r14
   14001b3e9:	pop    r13
   14001b3eb:	pop    r12
   14001b3ed:	pop    rdi
   14001b3ee:	pop    rsi
   14001b3ef:	pop    rbp
   14001b3f0:	pop    rbx
   14001b3f1:	ret    
   14001b3f2:	int3   
   14001b3f3:	int3   
   14001b3f4:	int3   
   14001b3f5:	int3   
   14001b3f6:	int3   
   14001b3f7:	int3   
   14001b3f8:	int3   
   14001b3f9:	int3   
   14001b3fa:	int3   
   14001b3fb:	int3   
   14001b3fc:	int3   
   14001b3fd:	int3   
   14001b3fe:	int3   
   14001b3ff:	int3   
   14001b400:	mov    QWORD PTR [rsp+0x8],rbx
   14001b405:	push   rbp
   14001b406:	push   rsi
   14001b407:	push   rdi
   14001b408:	push   r12
   14001b40a:	push   r13
   14001b40c:	push   r14
   14001b40e:	push   r15
   14001b410:	sub    rsp,0xc0
   14001b417:	mov    r14,rcx
   14001b41a:	lea    rcx,[rsp+0x118]
   14001b422:	mov    r15,rdx
   14001b425:	call   QWORD PTR [rip+0x3fb5]        # 0x14001f3e0
   14001b42b:	mov    rdx,QWORD PTR [r15+0x78]
   14001b42f:	xor    ebx,ebx
   14001b431:	mov    QWORD PTR [rsp+0x30],rdx
   14001b436:	mov    eax,DWORD PTR [rdx]
   14001b438:	test   eax,eax
   14001b43a:	je     0x14001b44b
   14001b43c:	cmp    eax,0xffffffff
   14001b43f:	je     0x14001b4cd
   14001b445:	lock add DWORD PTR [rdx],0x1
   14001b449:	jmp    0x14001b4c8
   14001b44b:	mov    edx,DWORD PTR [rdx+0x4]
   14001b44e:	lea    rcx,[rsp+0x30]
   14001b453:	call   QWORD PTR [rip+0x4057]        # 0x14001f4b0
   14001b459:	mov    rdx,QWORD PTR [rsp+0x30]
   14001b45e:	mov    rcx,QWORD PTR [r15+0x78]
   14001b462:	movsxd rax,DWORD PTR [rdx+0xc]
   14001b466:	lea    r13,[rdx+rax*8+0x10]
   14001b46b:	movsxd rax,DWORD PTR [rcx+0x8]
   14001b46f:	lea    r12,[rcx+rax*8+0x10]
   14001b474:	movsxd rax,DWORD PTR [rdx+0x8]
   14001b478:	lea    rbp,[rdx+rax*8+0x10]
   14001b47d:	cmp    rbp,r13
   14001b480:	je     0x14001b4cd
   14001b482:	mov    ecx,0x10
   14001b487:	call   0x14001e1c6
   14001b48c:	mov    rsi,rax
   14001b48f:	test   rax,rax
   14001b492:	je     0x14001b4b4
   14001b494:	mov    rdi,QWORD PTR [r12]
   14001b498:	mov    rcx,rax
   14001b49b:	mov    rdx,rdi
   14001b49e:	call   QWORD PTR [rip+0x4134]        # 0x14001f5d8
   14001b4a4:	lea    rdx,[rdi+0x8]
   14001b4a8:	lea    rcx,[rsi+0x8]
   14001b4ac:	call   QWORD PTR [rip+0x4126]        # 0x14001f5d8
   14001b4b2:	jmp    0x14001b4b7
   14001b4b4:	mov    rsi,rbx
   14001b4b7:	mov    QWORD PTR [rbp+0x0],rsi
   14001b4bb:	add    rbp,0x8
   14001b4bf:	add    r12,0x8
   14001b4c3:	cmp    rbp,r13
   14001b4c6:	jne    0x14001b482
   14001b4c8:	mov    rdx,QWORD PTR [rsp+0x30]
   14001b4cd:	mov    DWORD PTR [rsp+0x38],ebx
   14001b4d1:	movsxd rax,DWORD PTR [rdx+0x8]
   14001b4d5:	lea    rcx,[rdx+rax*8+0x10]
   14001b4da:	mov    QWORD PTR [rsp+0x40],rcx
   14001b4df:	movsxd rax,DWORD PTR [rdx+0xc]
   14001b4e3:	lea    rdx,[rdx+rax*8+0x10]
   14001b4e8:	mov    QWORD PTR [rsp+0x48],rdx
   14001b4ed:	nop    DWORD PTR [rax]
   14001b4f0:	mov    eax,0x1
   14001b4f5:	mov    DWORD PTR [rsp+0x38],eax
   14001b4f9:	cmp    rcx,rdx
   14001b4fc:	je     0x14001b5ce
   14001b502:	mov    rdi,QWORD PTR [rcx]
   14001b505:	test   eax,eax
   14001b507:	je     0x14001b529
   14001b509:	lea    rdx,[rip+0xb730]        # 0x140026c40
   14001b510:	mov    rcx,rdi
   14001b513:	call   QWORD PTR [rip+0x40d7]        # 0x14001f5f0
   14001b519:	test   eax,eax
   14001b51b:	je     0x14001b53e
   14001b51d:	mov    eax,DWORD PTR [rsp+0x38]
   14001b521:	dec    eax
   14001b523:	mov    DWORD PTR [rsp+0x38],eax
   14001b527:	jmp    0x14001b505
   14001b529:	mov    rcx,QWORD PTR [rsp+0x40]
   14001b52e:	mov    rdx,QWORD PTR [rsp+0x48]
   14001b533:	add    rcx,0x8
   14001b537:	mov    QWORD PTR [rsp+0x40],rcx
   14001b53c:	jmp    0x14001b4f0
   14001b53e:	lea    rdx,[rdi+0x8]
   14001b542:	mov    rcx,r14
   14001b545:	call   QWORD PTR [rip+0x3ef5]        # 0x14001f440
   14001b54b:	mov    rsi,QWORD PTR [rsp+0x30]
   14001b550:	mov    eax,DWORD PTR [rsi]
   14001b552:	test   eax,eax
   14001b554:	je     0x14001b57c
   14001b556:	cmp    eax,0xffffffff
   14001b559:	je     0x14001b898
   14001b55f:	or     r12,0xffffffffffffffff
   14001b563:	lock xadd DWORD PTR [rsi],r12d
   14001b568:	add    r12d,0xffffffff
   14001b56c:	setne  al
   14001b56f:	test   al,al
   14001b571:	jne    0x14001b898
   14001b577:	mov    rsi,QWORD PTR [rsp+0x30]
   14001b57c:	movsxd rax,DWORD PTR [rsi+0xc]
   14001b580:	lea    rbx,[rsi+rax*8+0x10]
   14001b585:	movsxd rax,DWORD PTR [rsi+0x8]
   14001b589:	lea    rbp,[rsi+rax*8+0x10]
   14001b58e:	cmp    rbp,rbx
   14001b591:	je     0x14001b5c0
   14001b593:	mov    rdi,QWORD PTR [rbx-0x8]
   14001b597:	sub    rbx,0x8
   14001b59b:	test   rdi,rdi
   14001b59e:	je     0x14001b5bb
   14001b5a0:	lea    rcx,[rdi+0x8]
   14001b5a4:	call   QWORD PTR [rip+0x400e]        # 0x14001f5b8
   14001b5aa:	mov    rcx,rdi
   14001b5ad:	call   QWORD PTR [rip+0x4005]        # 0x14001f5b8
   14001b5b3:	mov    rcx,rdi
   14001b5b6:	call   0x14001e1c0
   14001b5bb:	cmp    rbx,rbp
   14001b5be:	jne    0x14001b593
   14001b5c0:	mov    rcx,rsi
   14001b5c3:	call   QWORD PTR [rip+0x3f1f]        # 0x14001f4e8
   14001b5c9:	jmp    0x14001b898
   14001b5ce:	mov    rbp,QWORD PTR [rsp+0x30]
   14001b5d3:	or     r12,0xffffffffffffffff
   14001b5d7:	mov    eax,DWORD PTR [rbp+0x0]
   14001b5da:	test   eax,eax
   14001b5dc:	je     0x14001b5fa
   14001b5de:	cmp    eax,r12d
   14001b5e1:	je     0x14001b647
   14001b5e3:	mov    eax,r12d
   14001b5e6:	lock xadd DWORD PTR [rbp+0x0],eax
   14001b5eb:	add    eax,r12d
   14001b5ee:	setne  al
   14001b5f1:	test   al,al
   14001b5f3:	jne    0x14001b647
   14001b5f5:	mov    rbp,QWORD PTR [rsp+0x30]
   14001b5fa:	movsxd rax,DWORD PTR [rbp+0xc]
   14001b5fe:	lea    rsi,[rbp+rax*8+0x10]
   14001b603:	movsxd rax,DWORD PTR [rbp+0x8]
   14001b607:	lea    r13,[rbp+rax*8+0x10]
   14001b60c:	cmp    r13,rsi
   14001b60f:	je     0x14001b63e
   14001b611:	mov    rdi,QWORD PTR [rsi-0x8]
   14001b615:	sub    rsi,0x8
   14001b619:	test   rdi,rdi
   14001b61c:	je     0x14001b639
   14001b61e:	lea    rcx,[rdi+0x8]
   14001b622:	call   QWORD PTR [rip+0x3f90]        # 0x14001f5b8
   14001b628:	mov    rcx,rdi
   14001b62b:	call   QWORD PTR [rip+0x3f87]        # 0x14001f5b8
   14001b631:	mov    rcx,rdi
   14001b634:	call   0x14001e1c0
   14001b639:	cmp    rsi,r13
   14001b63c:	jne    0x14001b611
   14001b63e:	mov    rcx,rbp
   14001b641:	call   QWORD PTR [rip+0x3ea1]        # 0x14001f4e8
   14001b647:	mov    rax,QWORD PTR [r15]
   14001b64a:	mov    rcx,r15
   14001b64d:	mov    edi,DWORD PTR [rax+0x4]
   14001b650:	call   QWORD PTR [rip+0x3fa2]        # 0x14001f5f8
   14001b656:	test   rax,rax
   14001b659:	je     0x14001b670
   14001b65b:	test   edi,edi
   14001b65d:	je     0x14001b670
   14001b65f:	nop
   14001b660:	movzx  ecx,BYTE PTR [rax]
   14001b663:	inc    rax
   14001b666:	test   cl,cl
   14001b668:	je     0x14001b670
   14001b66a:	inc    ebx
   14001b66c:	cmp    ebx,edi
   14001b66e:	jb     0x14001b660
   14001b670:	mov    rcx,r15
   14001b673:	mov    DWORD PTR [rsp+0x20],ebx
   14001b677:	call   QWORD PTR [rip+0x3f7b]        # 0x14001f5f8
   14001b67d:	lea    rdx,[rsp+0x80]
   14001b685:	lea    rcx,[rsp+0x118]
   14001b68d:	mov    QWORD PTR [rsp+0x28],rax
   14001b692:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001b697:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001b6a0:	call   QWORD PTR [rip+0x3d92]        # 0x14001f438
   14001b6a6:	xor    eax,eax
   14001b6a8:	lea    rdx,[rip+0x45b5]        # 0x14001fc64
   14001b6af:	mov    QWORD PTR [rsp+0x28],rdx
   14001b6b4:	mov    rdi,rdx
   14001b6b7:	lea    rdx,[rip+0x4362]        # 0x14001fa20
   14001b6be:	mov    rcx,r12
   14001b6c1:	lea    r9d,[rax+0x1]
   14001b6c5:	lea    r8,[rsp+0xb0]
   14001b6cd:	repnz scas al,BYTE PTR es:[rdi]
   14001b6cf:	mov    rdi,rdx
   14001b6d2:	not    rcx
   14001b6d5:	dec    rcx
   14001b6d8:	mov    DWORD PTR [rsp+0x20],ecx
   14001b6dc:	mov    rcx,r12
   14001b6df:	repnz scas al,BYTE PTR es:[rdi]
   14001b6e1:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001b6e6:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   14001b6ef:	not    rcx
   14001b6f2:	mov    QWORD PTR [rsp+0x28],rdx
   14001b6f7:	lea    rdx,[rsp+0xa0]
   14001b6ff:	dec    rcx
   14001b702:	mov    DWORD PTR [rsp+0x20],ecx
   14001b706:	lea    rcx,[rsp+0x118]
   14001b70e:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001b713:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14001b71c:	call   QWORD PTR [rip+0x3d0e]        # 0x14001f430
   14001b722:	lea    rdx,[rip+0xb50f]        # 0x140026c38
   14001b729:	xor    eax,eax
   14001b72b:	mov    rdi,rdx
   14001b72e:	mov    QWORD PTR [rsp+0x28],rdx
   14001b733:	mov    rcx,r12
   14001b736:	lea    r8d,[rax+0x1]
   14001b73a:	lea    rdx,[rsp+0x50]
   14001b73f:	repnz scas al,BYTE PTR es:[rdi]
   14001b741:	not    rcx
   14001b744:	dec    rcx
   14001b747:	mov    DWORD PTR [rsp+0x20],ecx
   14001b74b:	lea    rcx,[rsp+0x118]
   14001b753:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001b758:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14001b75e:	call   QWORD PTR [rip+0x3cc4]        # 0x14001f428
   14001b764:	test   al,al
   14001b766:	je     0x14001b79d
   14001b768:	lea    rdx,[rip+0xb4b1]        # 0x140026c20
   14001b76f:	xor    eax,eax
   14001b771:	mov    rcx,r12
   14001b774:	mov    rdi,rdx
   14001b777:	mov    QWORD PTR [rsp+0x28],rdx
   14001b77c:	lea    r8,[rsp+0x60]
   14001b781:	repnz scas al,BYTE PTR es:[rdi]
   14001b783:	not    rcx
   14001b786:	dec    rcx
   14001b789:	mov    DWORD PTR [rsp+0x20],ecx
   14001b78d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001b792:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   14001b798:	jmp    0x14001b877
   14001b79d:	lea    rcx,[rsp+0x108]
   14001b7a5:	mov    dl,0x51
   14001b7a7:	call   QWORD PTR [rip+0x3c53]        # 0x14001f400
   14001b7ad:	lea    rcx,[rsp+0x118]
   14001b7b5:	mov    r8d,0x1
   14001b7bb:	movzx  edx,WORD PTR [rax]
   14001b7be:	call   QWORD PTR [rip+0x3c5c]        # 0x14001f420
   14001b7c4:	test   al,al
   14001b7c6:	je     0x14001b841
   14001b7c8:	mov    rax,QWORD PTR [rsp+0x118]
   14001b7d0:	cmp    DWORD PTR [rax+0x4],0x2
   14001b7d4:	jl     0x14001b841
   14001b7d6:	lea    rdx,[rsp+0x110]
   14001b7de:	lea    rcx,[rsp+0x118]
   14001b7e6:	mov    r8d,0x1
   14001b7ec:	call   QWORD PTR [rip+0x3c26]        # 0x14001f418
   14001b7f2:	movzx  ecx,WORD PTR [rax]
   14001b7f5:	cmp    ecx,0x5a
   14001b7f8:	ja     0x14001b7ff
   14001b7fa:	cmp    ecx,0x41
   14001b7fd:	jae    0x14001b80f
   14001b7ff:	cmp    ecx,0x7f
   14001b802:	jbe    0x14001b841
   14001b804:	call   QWORD PTR [rip+0x3c06]        # 0x14001f410
   14001b80a:	cmp    eax,0xe
   14001b80d:	jne    0x14001b841
   14001b80f:	lea    rdx,[rip+0xb3f2]        # 0x140026c08
   14001b816:	xor    eax,eax
   14001b818:	mov    rcx,r12
   14001b81b:	mov    rdi,rdx
   14001b81e:	mov    QWORD PTR [rsp+0x28],rdx
   14001b823:	lea    r8,[rsp+0x70]
   14001b828:	repnz scas al,BYTE PTR es:[rdi]
   14001b82a:	not    rcx
   14001b82d:	dec    rcx
   14001b830:	mov    DWORD PTR [rsp+0x20],ecx
   14001b834:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001b839:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   14001b83f:	jmp    0x14001b877
   14001b841:	lea    rdx,[rip+0xb3b4]        # 0x140026bfc
   14001b848:	xor    eax,eax
   14001b84a:	mov    rcx,r12
   14001b84d:	mov    rdi,rdx
   14001b850:	mov    QWORD PTR [rsp+0x28],rdx
   14001b855:	lea    r8,[rsp+0x90]
   14001b85d:	repnz scas al,BYTE PTR es:[rdi]
   14001b85f:	not    rcx
   14001b862:	dec    rcx
   14001b865:	mov    DWORD PTR [rsp+0x20],ecx
   14001b869:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001b86e:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   14001b877:	lea    rcx,[rsp+0x118]
   14001b87f:	xor    edx,edx
   14001b881:	call   QWORD PTR [rip+0x3b81]        # 0x14001f408
   14001b887:	lea    rdx,[rsp+0x118]
   14001b88f:	mov    rcx,r14
   14001b892:	call   QWORD PTR [rip+0x3c58]        # 0x14001f4f0
   14001b898:	lea    rcx,[rsp+0x118]
   14001b8a0:	call   QWORD PTR [rip+0x3c82]        # 0x14001f528
   14001b8a6:	mov    rbx,QWORD PTR [rsp+0x100]
   14001b8ae:	mov    rax,r14
   14001b8b1:	add    rsp,0xc0
   14001b8b8:	pop    r15
   14001b8ba:	pop    r14
   14001b8bc:	pop    r13
   14001b8be:	pop    r12
   14001b8c0:	pop    rdi
   14001b8c1:	pop    rsi
   14001b8c2:	pop    rbp
   14001b8c3:	ret    
   14001b8c4:	int3   
   14001b8c5:	int3   
   14001b8c6:	int3   
   14001b8c7:	int3   
   14001b8c8:	int3   
   14001b8c9:	int3   
   14001b8ca:	int3   
   14001b8cb:	int3   
   14001b8cc:	int3   
   14001b8cd:	int3   
   14001b8ce:	int3   
   14001b8cf:	int3   
   14001b8d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b8d5:	mov    QWORD PTR [rsp+0x10],rbp
   14001b8da:	mov    QWORD PTR [rsp+0x18],rsi
   14001b8df:	push   rdi
   14001b8e0:	sub    rsp,0x20
   14001b8e4:	mov    rdi,rcx
   14001b8e7:	mov    rcx,QWORD PTR [rcx]
   14001b8ea:	movsxd rsi,r8d
   14001b8ed:	mov    eax,DWORD PTR [rcx]
   14001b8ef:	mov    rbp,rdx
   14001b8f2:	cmp    eax,0x1
   14001b8f5:	je     0x14001b906
   14001b8f7:	test   eax,eax
   14001b8f9:	je     0x14001b906
   14001b8fb:	mov    edx,DWORD PTR [rcx+0x4]
   14001b8fe:	mov    rcx,rdi
   14001b901:	call   0x140019b80
   14001b906:	mov    rdx,QWORD PTR [rdi]
   14001b909:	movsxd rcx,DWORD PTR [rdx+0x8]
   14001b90d:	add    rcx,rsi
   14001b910:	lea    rbx,[rdx+rcx*8+0x10]
   14001b915:	mov    rcx,rbp
   14001b918:	mov    rdx,rbx
   14001b91b:	call   QWORD PTR [rip+0x3bcf]        # 0x14001f4f0
   14001b921:	mov    rcx,rbx
   14001b924:	call   QWORD PTR [rip+0x3bfe]        # 0x14001f528
   14001b92a:	mov    edx,esi
   14001b92c:	mov    rcx,rdi
   14001b92f:	call   QWORD PTR [rip+0x3b13]        # 0x14001f448
   14001b935:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b93a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b93f:	mov    rax,rbp
   14001b942:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b947:	add    rsp,0x20
   14001b94b:	pop    rdi
   14001b94c:	ret    
   14001b94d:	int3   
   14001b94e:	int3   
   14001b94f:	int3   
   14001b950:	rex push rbx
   14001b952:	push   rbp
   14001b953:	push   rsi
   14001b954:	push   rdi
   14001b955:	push   r12
   14001b957:	push   r13
   14001b959:	push   r14
   14001b95b:	sub    rsp,0x60
   14001b95f:	mov    rdx,QWORD PTR [rcx]
   14001b962:	mov    rbp,rcx
   14001b965:	mov    DWORD PTR [rip+0xf729],0x0        # 0x14002b098
   14001b96f:	mov    eax,DWORD PTR [rdx+0xc]
   14001b972:	sub    eax,DWORD PTR [rdx+0x8]
   14001b975:	test   eax,eax
   14001b977:	jle    0x14001bbde
   14001b97d:	mov    ebx,0x1
   14001b982:	lea    r14,[rip+0xb2f7]        # 0x140026c80
   14001b989:	mov    r13d,0xff
   14001b98f:	lea    r12,[rip+0xfffffffffffe466a]        # 0x140000000
   14001b996:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001b9a0:	lea    eax,[rbx-0x1]
   14001b9a3:	movsxd rcx,eax
   14001b9a6:	movsxd rax,DWORD PTR [rdx+0x8]
   14001b9aa:	add    rcx,rax
   14001b9ad:	lea    rdx,[rdx+rcx*8+0x10]
   14001b9b2:	lea    rcx,[rsp+0xb8]
   14001b9ba:	call   QWORD PTR [rip+0x3b30]        # 0x14001f4f0
   14001b9c0:	or     rcx,0xffffffffffffffff
   14001b9c4:	xor    eax,eax
   14001b9c6:	mov    rdi,r14
   14001b9c9:	mov    QWORD PTR [rsp+0x48],r14
   14001b9ce:	lea    rdx,[rsp+0x50]
   14001b9d3:	repnz scas al,BYTE PTR es:[rdi]
   14001b9d5:	not    rcx
   14001b9d8:	dec    rcx
   14001b9db:	mov    DWORD PTR [rsp+0x40],ecx
   14001b9df:	lea    rcx,[rsp+0xb8]
   14001b9e7:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001b9ec:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14001b9f2:	call   QWORD PTR [rip+0x3a58]        # 0x14001f450
   14001b9f8:	test   al,al
   14001b9fa:	jne    0x14001bcba
   14001ba00:	lea    rcx,[rsp+0xa0]
   14001ba08:	mov    dl,0x2d
   14001ba0a:	call   QWORD PTR [rip+0x39f0]        # 0x14001f400
   14001ba10:	lea    rcx,[rsp+0xb8]
   14001ba18:	mov    r8d,0x1
   14001ba1e:	movzx  edx,WORD PTR [rax]
   14001ba21:	call   QWORD PTR [rip+0x39f9]        # 0x14001f420
   14001ba27:	test   al,al
   14001ba29:	je     0x14001bbb0
   14001ba2f:	mov    rax,QWORD PTR [rsp+0xb8]
   14001ba37:	cmp    DWORD PTR [rax+0x4],0x2
   14001ba3b:	jne    0x14001ba64
   14001ba3d:	lea    rdx,[rsp+0xa8]
   14001ba45:	lea    rcx,[rsp+0xb8]
   14001ba4d:	mov    r8d,0x1
   14001ba53:	call   QWORD PTR [rip+0x39bf]        # 0x14001f418
   14001ba59:	cmp    WORD PTR [rax],r13w
   14001ba5d:	ja     0x14001ba64
   14001ba5f:	movzx  eax,BYTE PTR [rax]
   14001ba62:	jmp    0x14001ba66
   14001ba64:	xor    al,al
   14001ba66:	movsx  eax,al
   14001ba69:	add    eax,0xffffffc1
   14001ba6c:	cmp    eax,0x34
   14001ba6f:	ja     0x14001bc5e
   14001ba75:	cdqe   
   14001ba77:	movzx  eax,BYTE PTR [r12+rax*1+0x1bd08]
   14001ba80:	mov    ecx,DWORD PTR [r12+rax*4+0x1bcd8]
   14001ba88:	add    rcx,r12
   14001ba8b:	jmp    rcx
   14001ba8d:	mov    eax,DWORD PTR [rip+0xf605]        # 0x14002b098
   14001ba93:	bts    eax,0xa
   14001ba97:	or     eax,0x40
   14001ba9a:	mov    DWORD PTR [rip+0xf5f8],eax        # 0x14002b098
   14001baa0:	jmp    0x14001bbb0
   14001baa5:	mov    eax,DWORD PTR [rip+0xf5ed]        # 0x14002b098
   14001baab:	or     eax,0x40
   14001baae:	mov    DWORD PTR [rip+0xf5e4],eax        # 0x14002b098
   14001bab4:	jmp    0x14001bbb0
   14001bab9:	mov    eax,DWORD PTR [rip+0xf5d9]        # 0x14002b098
   14001babf:	bts    eax,0x9
   14001bac3:	or     eax,0x20
   14001bac6:	mov    DWORD PTR [rip+0xf5cc],eax        # 0x14002b098
   14001bacc:	jmp    0x14001bbb0
   14001bad1:	mov    eax,DWORD PTR [rip+0xf5c1]        # 0x14002b098
   14001bad7:	or     eax,0x20
   14001bada:	mov    DWORD PTR [rip+0xf5b8],eax        # 0x14002b098
   14001bae0:	jmp    0x14001bbb0
   14001bae5:	mov    eax,DWORD PTR [rip+0xf5ad]        # 0x14002b098
   14001baeb:	bts    eax,0x8
   14001baef:	or     eax,0x10
   14001baf2:	mov    DWORD PTR [rip+0xf5a0],eax        # 0x14002b098
   14001baf8:	jmp    0x14001bbb0
   14001bafd:	mov    eax,DWORD PTR [rip+0xf595]        # 0x14002b098
   14001bb03:	or     eax,0x10
   14001bb06:	mov    DWORD PTR [rip+0xf58c],eax        # 0x14002b098
   14001bb0c:	jmp    0x14001bbb0
   14001bb11:	mov    eax,DWORD PTR [rip+0xf581]        # 0x14002b098
   14001bb17:	or     eax,0xf00
   14001bb1c:	or     eax,0xf0
   14001bb21:	mov    DWORD PTR [rip+0xf571],eax        # 0x14002b098
   14001bb27:	jmp    0x14001bbb0
   14001bb2c:	mov    eax,DWORD PTR [rip+0xf566]        # 0x14002b098
   14001bb32:	or     eax,0xf0
   14001bb37:	mov    DWORD PTR [rip+0xf55b],eax        # 0x14002b098
   14001bb3d:	jmp    0x14001bbb0
   14001bb3f:	mov    rdi,QWORD PTR [rbp+0x0]
   14001bb43:	lea    eax,[rbx+0x1]
   14001bb46:	movsxd rsi,DWORD PTR [rdi+0x8]
   14001bb4a:	mov    ecx,DWORD PTR [rdi+0xc]
   14001bb4d:	sub    ecx,esi
   14001bb4f:	cmp    ecx,eax
   14001bb51:	jl     0x14001bbf7
   14001bb57:	lea    rcx,[rsp+0xb0]
   14001bb5f:	mov    dl,0x2d
   14001bb61:	call   QWORD PTR [rip+0x3899]        # 0x14001f400
   14001bb67:	movsxd rdx,ebx
   14001bb6a:	mov    r8d,0x1
   14001bb70:	add    rdx,rsi
   14001bb73:	lea    rcx,[rdi+rdx*8+0x10]
   14001bb78:	movzx  edx,WORD PTR [rax]
   14001bb7b:	call   QWORD PTR [rip+0x389f]        # 0x14001f420
   14001bb81:	test   al,al
   14001bb83:	jne    0x14001bbf7
   14001bb85:	lea    rdx,[rsp+0x20]
   14001bb8a:	mov    r8d,ebx
   14001bb8d:	mov    rcx,rbp
   14001bb90:	call   0x14001b8d0
   14001bb95:	lea    rcx,[rip+0xf504]        # 0x14002b0a0
   14001bb9c:	mov    rdx,rax
   14001bb9f:	call   QWORD PTR [rip+0x380b]        # 0x14001f3b0
   14001bba5:	lea    rcx,[rsp+0x20]
   14001bbaa:	call   QWORD PTR [rip+0x3978]        # 0x14001f528
   14001bbb0:	lea    rcx,[rsp+0xb8]
   14001bbb8:	call   QWORD PTR [rip+0x396a]        # 0x14001f528
   14001bbbe:	mov    rdx,QWORD PTR [rbp+0x0]
   14001bbc2:	inc    ebx
   14001bbc4:	mov    ecx,DWORD PTR [rdx+0xc]
   14001bbc7:	lea    eax,[rbx-0x1]
   14001bbca:	sub    ecx,DWORD PTR [rdx+0x8]
   14001bbcd:	cmp    eax,ecx
   14001bbcf:	jl     0x14001b9a0
   14001bbd5:	cmp    DWORD PTR [rip+0xf4bc],0x0        # 0x14002b098
   14001bbdc:	jne    0x14001bbe8
   14001bbde:	mov    DWORD PTR [rip+0xf4b0],0xff0        # 0x14002b098
   14001bbe8:	add    rsp,0x60
   14001bbec:	pop    r14
   14001bbee:	pop    r13
   14001bbf0:	pop    r12
   14001bbf2:	pop    rdi
   14001bbf3:	pop    rsi
   14001bbf4:	pop    rbp
   14001bbf5:	pop    rbx
   14001bbf6:	ret    
   14001bbf7:	lea    rcx,[rip+0xb06a]        # 0x140026c68
   14001bbfe:	call   QWORD PTR [rip+0x351c]        # 0x14001f120
   14001bc04:	mov    ecx,0x1
   14001bc09:	call   QWORD PTR [rip+0x3521]        # 0x14001f130
   14001bc0f:	int3   
   14001bc10:	lea    rdx,[rip+0xaba9]        # 0x1400267c0
   14001bc17:	lea    rcx,[rip+0xaaa6]        # 0x1400266c4
   14001bc1e:	call   QWORD PTR [rip+0x34fc]        # 0x14001f120
   14001bc24:	xor    ecx,ecx
   14001bc26:	call   QWORD PTR [rip+0x3504]        # 0x14001f130
   14001bc2c:	int3   
   14001bc2d:	lea    r8,[rip+0xae1c]        # 0x140026a50
   14001bc34:	lea    rdx,[rip+0xae05]        # 0x140026a40
   14001bc3b:	lea    rcx,[rip+0xadee]        # 0x140026a30
   14001bc42:	call   QWORD PTR [rip+0x34d8]        # 0x14001f120
   14001bc48:	lea    rcx,[rip+0xadc1]        # 0x140026a10
   14001bc4f:	call   QWORD PTR [rip+0x34cb]        # 0x14001f120
   14001bc55:	xor    ecx,ecx
   14001bc57:	call   QWORD PTR [rip+0x34d3]        # 0x14001f130
   14001bc5d:	int3   
   14001bc5e:	lea    rdx,[rsp+0xb8]
   14001bc66:	lea    rcx,[rsp+0x30]
   14001bc6b:	call   QWORD PTR [rip+0x387f]        # 0x14001f4f0
   14001bc71:	lea    rdx,[rsp+0x28]
   14001bc76:	mov    rcx,rax
   14001bc79:	call   QWORD PTR [rip+0x36d9]        # 0x14001f358
   14001bc7f:	mov    rcx,rax
   14001bc82:	call   QWORD PTR [rip+0x3970]        # 0x14001f5f8
   14001bc88:	lea    rcx,[rip+0xafc1]        # 0x140026c50
   14001bc8f:	mov    rdx,rax
   14001bc92:	call   QWORD PTR [rip+0x3488]        # 0x14001f120
   14001bc98:	lea    rcx,[rsp+0x28]
   14001bc9d:	call   QWORD PTR [rip+0x3915]        # 0x14001f5b8
   14001bca3:	lea    rcx,[rsp+0x30]
   14001bca8:	call   QWORD PTR [rip+0x387a]        # 0x14001f528
   14001bcae:	mov    ecx,0x1
   14001bcb3:	call   QWORD PTR [rip+0x3477]        # 0x14001f130
   14001bcb9:	int3   
   14001bcba:	lea    rdx,[rip+0xaaff]        # 0x1400267c0
   14001bcc1:	lea    rcx,[rip+0xa9fc]        # 0x1400266c4
   14001bcc8:	call   QWORD PTR [rip+0x3452]        # 0x14001f120
   14001bcce:	xor    ecx,ecx
   14001bcd0:	call   QWORD PTR [rip+0x345a]        # 0x14001f130
   14001bcd6:	int3   
   14001bcd7:	nop
   14001bcd8:	adc    BYTE PTR [rcx+rax*1+0x1bb1100],bh
   14001bcdf:	add    ch,ah
   14001bce1:	mov    edx,0xba8d0001
   14001bce6:	add    DWORD PTR [rax],eax
   14001bce8:	mov    ecx,0x2d0001ba
   14001bced:	mov    esp,0xbb2c0001
   14001bcf2:	add    DWORD PTR [rax],eax
   14001bcf4:	std    
   14001bcf5:	mov    edx,0xbb3f0001
   14001bcfa:	add    DWORD PTR [rax],eax
   14001bcfc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bcfd:	mov    edx,0xbad10001
   14001bd02:	add    DWORD PTR [rax],eax
   14001bd04:	pop    rsi
   14001bd05:	mov    esp,0xb000001
   14001bd0a:	add    DWORD PTR [rbx],ecx
   14001bd0c:	or     ecx,DWORD PTR [rbx]
   14001bd0e:	or     ecx,DWORD PTR [rbx]
   14001bd10:	or     ecx,DWORD PTR [rbx]
   14001bd12:	or     ecx,DWORD PTR [rbx]
   14001bd14:	or     ecx,DWORD PTR [rbx]
   14001bd16:	add    cl,BYTE PTR [rbx]
   14001bd18:	or     eax,DWORD PTR [rbx]
   14001bd1a:	or     ecx,DWORD PTR [rbx]
   14001bd1c:	add    al,0xb
   14001bd1e:	or     eax,DWORD PTR [rip+0xb0b0b0b]        # 0x14b0cc82f
   14001bd24:	or     ecx,DWORD PTR [rbx]
   14001bd26:	or     ecx,DWORD PTR [rbx]
   14001bd28:	or     ecx,DWORD PTR [rbx]
   14001bd2a:	(bad)  
   14001bd2b:	or     ecx,DWORD PTR [rbx]
   14001bd2d:	or     ecx,DWORD PTR [rbx]
   14001bd2f:	or     ecx,DWORD PTR [rbx]
   14001bd31:	add    BYTE PTR [rbx],cl
   14001bd33:	or     ecx,DWORD PTR [rbx]
   14001bd35:	or     eax,DWORD PTR [rdi]
   14001bd37:	or     ecx,DWORD PTR [rax]
   14001bd39:	or     DWORD PTR [rbx],ecx
   14001bd3b:	or     ecx,DWORD PTR [rdx]
   14001bd3d:	int3   
   14001bd3e:	int3   
   14001bd3f:	int3   
   14001bd40:	mov    QWORD PTR [rsp+0x10],rbx
   14001bd45:	push   rbp
   14001bd46:	push   rsi
   14001bd47:	push   rdi
   14001bd48:	push   r12
   14001bd4a:	push   r13
   14001bd4c:	push   r14
   14001bd4e:	push   r15
   14001bd50:	sub    rsp,0x1d0
   14001bd57:	mov    r15,rdx
   14001bd5a:	mov    r12,rcx
   14001bd5d:	call   QWORD PTR [rip+0x367d]        # 0x14001f3e0
   14001bd63:	test   DWORD PTR [rip+0xf32b],0x440        # 0x14002b098
   14001bd6d:	mov    r13d,0x1
   14001bd73:	je     0x14001c2fb
   14001bd79:	mov    rdx,QWORD PTR [r15+0x70]
   14001bd7d:	mov    QWORD PTR [rsp+0x30],rdx
   14001bd82:	mov    eax,DWORD PTR [rdx]
   14001bd84:	test   eax,eax
   14001bd86:	je     0x14001bd93
   14001bd88:	cmp    eax,0xffffffff
   14001bd8b:	je     0x14001be03
   14001bd8d:	lock add DWORD PTR [rdx],r13d
   14001bd91:	jmp    0x14001bdfe
   14001bd93:	mov    edx,DWORD PTR [rdx+0x4]
   14001bd96:	lea    rcx,[rsp+0x30]
   14001bd9b:	call   QWORD PTR [rip+0x370f]        # 0x14001f4b0
   14001bda1:	mov    rdx,QWORD PTR [r15+0x70]
   14001bda5:	movsxd rax,DWORD PTR [rdx+0x8]
   14001bda9:	lea    rbx,[rdx+rax*8+0x10]
   14001bdae:	mov    rdx,QWORD PTR [rsp+0x30]
   14001bdb3:	movsxd rax,DWORD PTR [rdx+0xc]
   14001bdb7:	lea    rsi,[rdx+rax*8+0x10]
   14001bdbc:	movsxd rax,DWORD PTR [rdx+0x8]
   14001bdc0:	lea    rdi,[rdx+rax*8+0x10]
   14001bdc5:	cmp    rdi,rsi
   14001bdc8:	je     0x14001be03
   14001bdca:	nop    WORD PTR [rax+rax*1+0x0]
   14001bdd0:	mov    ecx,0x78
   14001bdd5:	call   0x14001e1c6
   14001bdda:	test   rax,rax
   14001bddd:	je     0x14001bdec
   14001bddf:	mov    rdx,QWORD PTR [rbx]
   14001bde2:	mov    rcx,rax
   14001bde5:	call   0x140001c00
   14001bdea:	jmp    0x14001bdee
   14001bdec:	xor    eax,eax
   14001bdee:	mov    QWORD PTR [rdi],rax
   14001bdf1:	add    rdi,0x8
   14001bdf5:	add    rbx,0x8
   14001bdf9:	cmp    rdi,rsi
   14001bdfc:	jne    0x14001bdd0
   14001bdfe:	mov    rdx,QWORD PTR [rsp+0x30]
   14001be03:	mov    DWORD PTR [rsp+0x38],0x0
   14001be0b:	movsxd rax,DWORD PTR [rdx+0x8]
   14001be0f:	lea    rbx,[rip+0xf21a]        # 0x14002b030
   14001be16:	lea    rcx,[rdx+rax*8+0x10]
   14001be1b:	mov    QWORD PTR [rsp+0x40],rcx
   14001be20:	movsxd rax,DWORD PTR [rdx+0xc]
   14001be24:	lea    rdx,[rdx+rax*8+0x10]
   14001be29:	mov    QWORD PTR [rsp+0x48],rdx
   14001be2e:	xchg   ax,ax
   14001be30:	mov    DWORD PTR [rsp+0x38],r13d
   14001be35:	cmp    rcx,rdx
   14001be38:	je     0x14001c297
   14001be3e:	mov    rbp,QWORD PTR [rcx]
   14001be41:	cmp    DWORD PTR [rsp+0x38],0x0
   14001be46:	je     0x14001c27f
   14001be4c:	mov    rax,QWORD PTR [rbp+0x38]
   14001be50:	mov    ecx,DWORD PTR [rax+0x4]
   14001be53:	test   ecx,ecx
   14001be55:	je     0x14001c276
   14001be5b:	test   BYTE PTR [rip+0xf236],0x40        # 0x14002b098
   14001be62:	jne    0x14001be7a
   14001be64:	test   ecx,ecx
   14001be66:	je     0x14001c276
   14001be6c:	bt     DWORD PTR [rip+0xf224],0xa        # 0x14002b098
   14001be74:	jae    0x14001c276
   14001be7a:	mov    rax,QWORD PTR [rbp+0x18]
   14001be7e:	xor    edi,edi
   14001be80:	cmp    DWORD PTR [rax+0x4],edi
   14001be83:	mov    rax,QWORD PTR [rbp+0x20]
   14001be87:	cmovne edi,r13d
   14001be8b:	cmp    DWORD PTR [rax+0x4],0x0
   14001be8f:	je     0x14001be94
   14001be91:	or     edi,0x2
   14001be94:	lea    rcx,[rbp+0x8]
   14001be98:	call   QWORD PTR [rip+0x375a]        # 0x14001f5f8
   14001be9e:	mov    rcx,rax
   14001bea1:	call   QWORD PTR [rip+0x3721]        # 0x14001f5c8
   14001bea7:	test   eax,eax
   14001bea9:	je     0x14001c276
   14001beaf:	mov    ecx,eax
   14001beb1:	call   QWORD PTR [rip+0x3759]        # 0x14001f610
   14001beb7:	mov    r13,rax
   14001beba:	test   rax,rax
   14001bebd:	je     0x14001c270
   14001bec3:	movsxd rcx,edi
   14001bec6:	mov    rdx,QWORD PTR [rbx+rcx*8]
   14001beca:	test   rdx,rdx
   14001becd:	je     0x14001bee9
   14001becf:	or     rcx,0xffffffffffffffff
   14001bed3:	xor    eax,eax
   14001bed5:	mov    rdi,rdx
   14001bed8:	repnz scas al,BYTE PTR es:[rdi]
   14001beda:	not    rcx
   14001bedd:	dec    rcx
   14001bee0:	mov    DWORD PTR [rsp+0xe0],ecx
   14001bee7:	jmp    0x14001bef4
   14001bee9:	mov    DWORD PTR [rsp+0xe0],0x0
   14001bef4:	mov    QWORD PTR [rsp+0xe8],rdx
   14001befc:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14001bf04:	lea    rcx,[rsp+0xc0]
   14001bf0c:	lea    rdx,[rsp+0x180]
   14001bf14:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   14001bf1d:	call   QWORD PTR [rip+0x345d]        # 0x14001f380
   14001bf23:	or     rcx,0xffffffffffffffff
   14001bf27:	xor    eax,eax
   14001bf29:	mov    rdi,r13
   14001bf2c:	mov    QWORD PTR [rsp+0x158],r13
   14001bf34:	lea    rdx,[rsp+0x1b0]
   14001bf3c:	repnz scas al,BYTE PTR es:[rdi]
   14001bf3e:	not    rcx
   14001bf41:	dec    rcx
   14001bf44:	mov    DWORD PTR [rsp+0x150],ecx
   14001bf4b:	lea    rcx,[rsp+0xc8]
   14001bf53:	movaps xmm0,XMMWORD PTR [rsp+0x150]
   14001bf5b:	movdqa XMMWORD PTR [rsp+0x1b0],xmm0
   14001bf64:	call   QWORD PTR [rip+0x3416]        # 0x14001f380
   14001bf6a:	mov    rdx,QWORD PTR [rbp+0x0]
   14001bf6e:	mov    edi,DWORD PTR [rdx+0x4]
   14001bf71:	mov    rcx,rbp
   14001bf74:	call   QWORD PTR [rip+0x367e]        # 0x14001f5f8
   14001bf7a:	xor    edx,edx
   14001bf7c:	test   rax,rax
   14001bf7f:	je     0x14001bf95
   14001bf81:	test   edi,edi
   14001bf83:	je     0x14001bf95
   14001bf85:	movzx  ecx,BYTE PTR [rax]
   14001bf88:	inc    rax
   14001bf8b:	test   cl,cl
   14001bf8d:	je     0x14001bf95
   14001bf8f:	inc    edx
   14001bf91:	cmp    edx,edi
   14001bf93:	jb     0x14001bf85
   14001bf95:	mov    rcx,rbp
   14001bf98:	mov    DWORD PTR [rsp+0x160],edx
   14001bf9f:	call   QWORD PTR [rip+0x3653]        # 0x14001f5f8
   14001bfa5:	lea    rdx,[rsp+0x190]
   14001bfad:	lea    rcx,[rsp+0xf0]
   14001bfb5:	mov    QWORD PTR [rsp+0x168],rax
   14001bfbd:	movaps xmm0,XMMWORD PTR [rsp+0x160]
   14001bfc5:	movdqa XMMWORD PTR [rsp+0x190],xmm0
   14001bfce:	call   QWORD PTR [rip+0x33ac]        # 0x14001f380
   14001bfd4:	lea    rcx,[rsp+0x210]
   14001bfdc:	mov    dl,0x20
   14001bfde:	call   QWORD PTR [rip+0x341c]        # 0x14001f400
   14001bfe4:	lea    rcx,[rsp+0x220]
   14001bfec:	mov    dl,0x20
   14001bfee:	mov    rsi,rax
   14001bff1:	call   QWORD PTR [rip+0x3409]        # 0x14001f400
   14001bff7:	lea    rcx,[rsp+0x228]
   14001bfff:	mov    dl,0x20
   14001c001:	mov    rbx,rax
   14001c004:	call   QWORD PTR [rip+0x33f6]        # 0x14001f400
   14001c00a:	lea    rdx,[rip+0xacdf]        # 0x140026cf0
   14001c011:	lea    rcx,[rsp+0x148]
   14001c019:	or     r8d,0xffffffff
   14001c01d:	mov    rdi,rax
   14001c020:	call   QWORD PTR [rip+0x33d2]        # 0x14001f3f8
   14001c026:	movzx  edx,WORD PTR [rdi]
   14001c029:	lea    r8,[rsp+0xf0]
   14001c031:	mov    WORD PTR [rsp+0x20],dx
   14001c036:	lea    rdx,[rsp+0x138]
   14001c03e:	mov    rcx,rax
   14001c041:	xor    r9d,r9d
   14001c044:	call   QWORD PTR [rip+0x33a6]        # 0x14001f3f0
   14001c04a:	lea    r8,[rsp+0xc8]
   14001c052:	lea    rdx,[rsp+0x140]
   14001c05a:	mov    rcx,rax
   14001c05d:	movzx  eax,WORD PTR [rbx]
   14001c060:	xor    r9d,r9d
   14001c063:	mov    WORD PTR [rsp+0x20],ax
   14001c068:	call   QWORD PTR [rip+0x3382]        # 0x14001f3f0
   14001c06e:	lea    r8,[rsp+0xc0]
   14001c076:	mov    rcx,rax
   14001c079:	movzx  eax,WORD PTR [rsi]
   14001c07c:	lea    rdx,[rsp+0x120]
   14001c084:	xor    r9d,r9d
   14001c087:	mov    WORD PTR [rsp+0x20],ax
   14001c08c:	call   QWORD PTR [rip+0x335e]        # 0x14001f3f0
   14001c092:	mov    rcx,r12
   14001c095:	mov    rdx,rax
   14001c098:	call   QWORD PTR [rip+0x334a]        # 0x14001f3e8
   14001c09e:	lea    rcx,[rsp+0x120]
   14001c0a6:	call   QWORD PTR [rip+0x347c]        # 0x14001f528
   14001c0ac:	lea    rcx,[rsp+0x140]
   14001c0b4:	call   QWORD PTR [rip+0x346e]        # 0x14001f528
   14001c0ba:	lea    rcx,[rsp+0x138]
   14001c0c2:	call   QWORD PTR [rip+0x3460]        # 0x14001f528
   14001c0c8:	lea    rcx,[rsp+0x148]
   14001c0d0:	call   QWORD PTR [rip+0x3452]        # 0x14001f528
   14001c0d6:	lea    rcx,[rsp+0xf0]
   14001c0de:	call   QWORD PTR [rip+0x3444]        # 0x14001f528
   14001c0e4:	lea    rcx,[rsp+0xc8]
   14001c0ec:	call   QWORD PTR [rip+0x3436]        # 0x14001f528
   14001c0f2:	lea    rcx,[rsp+0xc0]
   14001c0fa:	call   QWORD PTR [rip+0x3428]        # 0x14001f528
   14001c100:	mov    rcx,r13
   14001c103:	call   QWORD PTR [rip+0x350f]        # 0x14001f618
   14001c109:	test   eax,eax
   14001c10b:	jne    0x14001c220
   14001c111:	lea    rcx,[rbp+0x8]
   14001c115:	call   QWORD PTR [rip+0x34dd]        # 0x14001f5f8
   14001c11b:	mov    r11,rax
   14001c11e:	test   rax,rax
   14001c121:	je     0x14001c13d
   14001c123:	or     rcx,0xffffffffffffffff
   14001c127:	xor    eax,eax
   14001c129:	mov    rdi,r11
   14001c12c:	repnz scas al,BYTE PTR es:[rdi]
   14001c12e:	not    rcx
   14001c131:	dec    rcx
   14001c134:	mov    DWORD PTR [rsp+0x100],ecx
   14001c13b:	jmp    0x14001c148
   14001c13d:	mov    DWORD PTR [rsp+0x100],0x0
   14001c148:	mov    QWORD PTR [rsp+0x108],r11
   14001c150:	movaps xmm0,XMMWORD PTR [rsp+0x100]
   14001c158:	lea    rdx,[rsp+0x1a0]
   14001c160:	lea    rcx,[rsp+0xd0]
   14001c168:	movdqa XMMWORD PTR [rsp+0x1a0],xmm0
   14001c171:	call   QWORD PTR [rip+0x3209]        # 0x14001f380
   14001c177:	lea    rdx,[rsp+0xb8]
   14001c17f:	lea    rcx,[rsp+0xd0]
   14001c187:	call   QWORD PTR [rip+0x31eb]        # 0x14001f378
   14001c18d:	lea    rcx,[rsp+0xd0]
   14001c195:	call   QWORD PTR [rip+0x338d]        # 0x14001f528
   14001c19b:	lea    rcx,[rsp+0x50]
   14001c1a0:	mov    dl,0x20
   14001c1a2:	call   QWORD PTR [rip+0x3258]        # 0x14001f400
   14001c1a8:	lea    rdx,[rip+0xaae1]        # 0x140026c90
   14001c1af:	lea    rcx,[rsp+0x118]
   14001c1b7:	or     r8d,0xffffffff
   14001c1bb:	mov    rdi,rax
   14001c1be:	call   QWORD PTR [rip+0x3234]        # 0x14001f3f8
   14001c1c4:	lea    r8,[rsp+0xb8]
   14001c1cc:	lea    rdx,[rsp+0x110]
   14001c1d4:	mov    rcx,rax
   14001c1d7:	movzx  eax,WORD PTR [rdi]
   14001c1da:	xor    r9d,r9d
   14001c1dd:	mov    WORD PTR [rsp+0x20],ax
   14001c1e2:	call   QWORD PTR [rip+0x3208]        # 0x14001f3f0
   14001c1e8:	mov    rcx,r12
   14001c1eb:	mov    rdx,rax
   14001c1ee:	call   QWORD PTR [rip+0x31f4]        # 0x14001f3e8
   14001c1f4:	lea    rcx,[rsp+0x110]
   14001c1fc:	call   QWORD PTR [rip+0x3326]        # 0x14001f528
   14001c202:	lea    rcx,[rsp+0x118]
   14001c20a:	call   QWORD PTR [rip+0x3318]        # 0x14001f528
   14001c210:	lea    rcx,[rsp+0xb8]
   14001c218:	call   QWORD PTR [rip+0x330a]        # 0x14001f528
   14001c21e:	jmp    0x14001c269
   14001c220:	or     rcx,0xffffffffffffffff
   14001c224:	lea    rbx,[rip+0xaa5d]        # 0x140026c88
   14001c22b:	xor    eax,eax
   14001c22d:	mov    rdi,rbx
   14001c230:	mov    QWORD PTR [rsp+0x178],rbx
   14001c238:	lea    rdx,[rsp+0x1c0]
   14001c240:	repnz scas al,BYTE PTR es:[rdi]
   14001c242:	not    rcx
   14001c245:	dec    rcx
   14001c248:	mov    DWORD PTR [rsp+0x170],ecx
   14001c24f:	mov    rcx,r12
   14001c252:	movaps xmm0,XMMWORD PTR [rsp+0x170]
   14001c25a:	movdqa XMMWORD PTR [rsp+0x1c0],xmm0
   14001c263:	call   QWORD PTR [rip+0x312f]        # 0x14001f398
   14001c269:	lea    rbx,[rip+0xedc0]        # 0x14002b030
   14001c270:	mov    r13d,0x1
   14001c276:	dec    DWORD PTR [rsp+0x38]
   14001c27a:	jmp    0x14001be41
   14001c27f:	mov    rcx,QWORD PTR [rsp+0x40]
   14001c284:	mov    rdx,QWORD PTR [rsp+0x48]
   14001c289:	add    rcx,0x8
   14001c28d:	mov    QWORD PTR [rsp+0x40],rcx
   14001c292:	jmp    0x14001be30
   14001c297:	mov    rsi,QWORD PTR [rsp+0x30]
   14001c29c:	mov    eax,DWORD PTR [rsi]
   14001c29e:	test   eax,eax
   14001c2a0:	je     0x14001c2b7
   14001c2a2:	cmp    eax,0xffffffff
   14001c2a5:	je     0x14001c2fb
   14001c2a7:	lock add DWORD PTR [rsi],0xffffffff
   14001c2ab:	setne  al
   14001c2ae:	test   al,al
   14001c2b0:	jne    0x14001c2fb
   14001c2b2:	mov    rsi,QWORD PTR [rsp+0x30]
   14001c2b7:	movsxd rax,DWORD PTR [rsi+0xc]
   14001c2bb:	lea    rdi,[rsi+rax*8+0x10]
   14001c2c0:	movsxd rax,DWORD PTR [rsi+0x8]
   14001c2c4:	lea    rbp,[rsi+rax*8+0x10]
   14001c2c9:	cmp    rbp,rdi
   14001c2cc:	je     0x14001c2f2
   14001c2ce:	xchg   ax,ax
   14001c2d0:	mov    rbx,QWORD PTR [rdi-0x8]
   14001c2d4:	sub    rdi,0x8
   14001c2d8:	test   rbx,rbx
   14001c2db:	je     0x14001c2ed
   14001c2dd:	mov    rcx,rbx
   14001c2e0:	call   0x140001a90
   14001c2e5:	mov    rcx,rbx
   14001c2e8:	call   0x14001e1c0
   14001c2ed:	cmp    rdi,rbp
   14001c2f0:	jne    0x14001c2d0
   14001c2f2:	mov    rcx,rsi
   14001c2f5:	call   QWORD PTR [rip+0x31ed]        # 0x14001f4e8
   14001c2fb:	test   DWORD PTR [rip+0xed93],0x220        # 0x14002b098
   14001c305:	je     0x14001c4cb
   14001c30b:	mov    rdx,QWORD PTR [r15+0x48]
   14001c30f:	mov    QWORD PTR [rsp+0x98],rdx
   14001c317:	mov    eax,DWORD PTR [rdx]
   14001c319:	test   eax,eax
   14001c31b:	je     0x14001c328
   14001c31d:	cmp    eax,0xffffffff
   14001c320:	je     0x14001c39b
   14001c322:	lock add DWORD PTR [rdx],0x1
   14001c326:	jmp    0x14001c393
   14001c328:	mov    edx,DWORD PTR [rdx+0x4]
   14001c32b:	lea    rcx,[rsp+0x98]
   14001c333:	call   QWORD PTR [rip+0x3177]        # 0x14001f4b0
   14001c339:	mov    rdx,QWORD PTR [r15+0x48]
   14001c33d:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c341:	lea    rbx,[rdx+rax*8+0x10]
   14001c346:	mov    rdx,QWORD PTR [rsp+0x98]
   14001c34e:	movsxd rax,DWORD PTR [rdx+0xc]
   14001c352:	lea    rsi,[rdx+rax*8+0x10]
   14001c357:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c35b:	lea    rdi,[rdx+rax*8+0x10]
   14001c360:	cmp    rdi,rsi
   14001c363:	je     0x14001c39b
   14001c365:	mov    ecx,0x70
   14001c36a:	call   0x14001e1c6
   14001c36f:	test   rax,rax
   14001c372:	je     0x14001c381
   14001c374:	mov    rdx,QWORD PTR [rbx]
   14001c377:	mov    rcx,rax
   14001c37a:	call   0x140003ce0
   14001c37f:	jmp    0x14001c383
   14001c381:	xor    eax,eax
   14001c383:	mov    QWORD PTR [rdi],rax
   14001c386:	add    rdi,0x8
   14001c38a:	add    rbx,0x8
   14001c38e:	cmp    rdi,rsi
   14001c391:	jne    0x14001c365
   14001c393:	mov    rdx,QWORD PTR [rsp+0x98]
   14001c39b:	mov    DWORD PTR [rsp+0xa0],0x0
   14001c3a6:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c3aa:	lea    rcx,[rdx+rax*8+0x10]
   14001c3af:	mov    QWORD PTR [rsp+0xa8],rcx
   14001c3b7:	movsxd rax,DWORD PTR [rdx+0xc]
   14001c3bb:	lea    rdx,[rdx+rax*8+0x10]
   14001c3c0:	mov    QWORD PTR [rsp+0xb0],rdx
   14001c3c8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001c3d0:	mov    eax,r13d
   14001c3d3:	mov    DWORD PTR [rsp+0xa0],eax
   14001c3da:	cmp    rcx,rdx
   14001c3dd:	je     0x14001c45c
   14001c3df:	mov    rdi,QWORD PTR [rcx]
   14001c3e2:	test   eax,eax
   14001c3e4:	je     0x14001c43b
   14001c3e6:	cmp    BYTE PTR [rdi+0x50],0x0
   14001c3ea:	jne    0x14001c430
   14001c3ec:	cmp    BYTE PTR [rdi+0x62],0x0
   14001c3f0:	jne    0x14001c3fc
   14001c3f2:	bt     DWORD PTR [rip+0xec9e],0x9        # 0x14002b098
   14001c3fa:	jae    0x14001c430
   14001c3fc:	lea    rcx,[rsp+0x128]
   14001c404:	mov    r8b,0x1
   14001c407:	mov    rdx,rdi
   14001c40a:	call   0x14001a230
   14001c40f:	mov    rcx,r12
   14001c412:	mov    rdx,rax
   14001c415:	call   QWORD PTR [rip+0x2fcd]        # 0x14001f3e8
   14001c41b:	lea    rcx,[rsp+0x128]
   14001c423:	call   QWORD PTR [rip+0x30ff]        # 0x14001f528
   14001c429:	mov    eax,DWORD PTR [rsp+0xa0]
   14001c430:	dec    eax
   14001c432:	mov    DWORD PTR [rsp+0xa0],eax
   14001c439:	jmp    0x14001c3e2
   14001c43b:	mov    rcx,QWORD PTR [rsp+0xa8]
   14001c443:	mov    rdx,QWORD PTR [rsp+0xb0]
   14001c44b:	add    rcx,0x8
   14001c44f:	mov    QWORD PTR [rsp+0xa8],rcx
   14001c457:	jmp    0x14001c3d0
   14001c45c:	mov    rsi,QWORD PTR [rsp+0x98]
   14001c464:	mov    eax,DWORD PTR [rsi]
   14001c466:	test   eax,eax
   14001c468:	je     0x14001c482
   14001c46a:	cmp    eax,0xffffffff
   14001c46d:	je     0x14001c4cb
   14001c46f:	lock add DWORD PTR [rsi],0xffffffff
   14001c473:	setne  al
   14001c476:	test   al,al
   14001c478:	jne    0x14001c4cb
   14001c47a:	mov    rsi,QWORD PTR [rsp+0x98]
   14001c482:	movsxd rax,DWORD PTR [rsi+0xc]
   14001c486:	lea    rdi,[rsi+rax*8+0x10]
   14001c48b:	movsxd rax,DWORD PTR [rsi+0x8]
   14001c48f:	lea    rbp,[rsi+rax*8+0x10]
   14001c494:	cmp    rbp,rdi
   14001c497:	je     0x14001c4c2
   14001c499:	nop    DWORD PTR [rax+0x0]
   14001c4a0:	mov    rbx,QWORD PTR [rdi-0x8]
   14001c4a4:	sub    rdi,0x8
   14001c4a8:	test   rbx,rbx
   14001c4ab:	je     0x14001c4bd
   14001c4ad:	mov    rcx,rbx
   14001c4b0:	call   0x140004210
   14001c4b5:	mov    rcx,rbx
   14001c4b8:	call   0x14001e1c0
   14001c4bd:	cmp    rdi,rbp
   14001c4c0:	jne    0x14001c4a0
   14001c4c2:	mov    rcx,rsi
   14001c4c5:	call   QWORD PTR [rip+0x301d]        # 0x14001f4e8
   14001c4cb:	test   DWORD PTR [rip+0xebc3],0x110        # 0x14002b098
   14001c4d5:	je     0x14001c901
   14001c4db:	mov    rdx,QWORD PTR [r15+0x50]
   14001c4df:	mov    QWORD PTR [rsp+0x78],rdx
   14001c4e4:	mov    eax,DWORD PTR [rdx]
   14001c4e6:	test   eax,eax
   14001c4e8:	je     0x14001c4f5
   14001c4ea:	cmp    eax,0xffffffff
   14001c4ed:	je     0x14001c563
   14001c4ef:	lock add DWORD PTR [rdx],0x1
   14001c4f3:	jmp    0x14001c55e
   14001c4f5:	mov    edx,DWORD PTR [rdx+0x4]
   14001c4f8:	lea    rcx,[rsp+0x78]
   14001c4fd:	call   QWORD PTR [rip+0x2fad]        # 0x14001f4b0
   14001c503:	mov    rdx,QWORD PTR [r15+0x50]
   14001c507:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c50b:	lea    rbx,[rdx+rax*8+0x10]
   14001c510:	mov    rdx,QWORD PTR [rsp+0x78]
   14001c515:	movsxd rax,DWORD PTR [rdx+0xc]
   14001c519:	lea    rsi,[rdx+rax*8+0x10]
   14001c51e:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c522:	lea    rdi,[rdx+rax*8+0x10]
   14001c527:	cmp    rdi,rsi
   14001c52a:	je     0x14001c563
   14001c52c:	nop    DWORD PTR [rax+0x0]
   14001c530:	mov    ecx,0x70
   14001c535:	call   0x14001e1c6
   14001c53a:	test   rax,rax
   14001c53d:	je     0x14001c54c
   14001c53f:	mov    rdx,QWORD PTR [rbx]
   14001c542:	mov    rcx,rax
   14001c545:	call   0x140003ce0
   14001c54a:	jmp    0x14001c54e
   14001c54c:	xor    eax,eax
   14001c54e:	mov    QWORD PTR [rdi],rax
   14001c551:	add    rdi,0x8
   14001c555:	add    rbx,0x8
   14001c559:	cmp    rdi,rsi
   14001c55c:	jne    0x14001c530
   14001c55e:	mov    rdx,QWORD PTR [rsp+0x78]
   14001c563:	mov    DWORD PTR [rsp+0x80],0x0
   14001c56e:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c572:	lea    rcx,[rdx+rax*8+0x10]
   14001c577:	mov    QWORD PTR [rsp+0x88],rcx
   14001c57f:	movsxd rax,DWORD PTR [rdx+0xc]
   14001c583:	lea    rdx,[rdx+rax*8+0x10]
   14001c588:	mov    QWORD PTR [rsp+0x90],rdx
   14001c590:	mov    eax,r13d
   14001c593:	mov    DWORD PTR [rsp+0x80],eax
   14001c59a:	cmp    rcx,rdx
   14001c59d:	je     0x14001c61c
   14001c59f:	mov    rdi,QWORD PTR [rcx]
   14001c5a2:	test   eax,eax
   14001c5a4:	je     0x14001c5fb
   14001c5a6:	cmp    BYTE PTR [rdi+0x62],0x0
   14001c5aa:	jne    0x14001c5b6
   14001c5ac:	bt     DWORD PTR [rip+0xeae4],0x8        # 0x14002b098
   14001c5b4:	jae    0x14001c5f0
   14001c5b6:	cmp    DWORD PTR [rdi+0x48],0x2
   14001c5ba:	jne    0x14001c5f0
   14001c5bc:	lea    rcx,[rsp+0x130]
   14001c5c4:	xor    r8d,r8d
   14001c5c7:	mov    rdx,rdi
   14001c5ca:	call   0x14001a230
   14001c5cf:	mov    rcx,r12
   14001c5d2:	mov    rdx,rax
   14001c5d5:	call   QWORD PTR [rip+0x2e0d]        # 0x14001f3e8
   14001c5db:	lea    rcx,[rsp+0x130]
   14001c5e3:	call   QWORD PTR [rip+0x2f3f]        # 0x14001f528
   14001c5e9:	mov    eax,DWORD PTR [rsp+0x80]
   14001c5f0:	dec    eax
   14001c5f2:	mov    DWORD PTR [rsp+0x80],eax
   14001c5f9:	jmp    0x14001c5a2
   14001c5fb:	mov    rcx,QWORD PTR [rsp+0x88]
   14001c603:	mov    rdx,QWORD PTR [rsp+0x90]
   14001c60b:	add    rcx,0x8
   14001c60f:	mov    QWORD PTR [rsp+0x88],rcx
   14001c617:	jmp    0x14001c590
   14001c61c:	mov    rsi,QWORD PTR [rsp+0x78]
   14001c621:	mov    eax,DWORD PTR [rsi]
   14001c623:	test   eax,eax
   14001c625:	je     0x14001c63c
   14001c627:	cmp    eax,0xffffffff
   14001c62a:	je     0x14001c67e
   14001c62c:	lock add DWORD PTR [rsi],0xffffffff
   14001c630:	setne  al
   14001c633:	test   al,al
   14001c635:	jne    0x14001c67e
   14001c637:	mov    rsi,QWORD PTR [rsp+0x78]
   14001c63c:	movsxd rax,DWORD PTR [rsi+0xc]
   14001c640:	lea    rdi,[rsi+rax*8+0x10]
   14001c645:	movsxd rax,DWORD PTR [rsi+0x8]
   14001c649:	lea    rbp,[rsi+rax*8+0x10]
   14001c64e:	cmp    rbp,rdi
   14001c651:	je     0x14001c675
   14001c653:	mov    rbx,QWORD PTR [rdi-0x8]
   14001c657:	sub    rdi,0x8
   14001c65b:	test   rbx,rbx
   14001c65e:	je     0x14001c670
   14001c660:	mov    rcx,rbx
   14001c663:	call   0x140004210
   14001c668:	mov    rcx,rbx
   14001c66b:	call   0x14001e1c0
   14001c670:	cmp    rdi,rbp
   14001c673:	jne    0x14001c653
   14001c675:	mov    rcx,rsi
   14001c678:	call   QWORD PTR [rip+0x2e6a]        # 0x14001f4e8
   14001c67e:	mov    rdx,QWORD PTR [r15+0x58]
   14001c682:	mov    QWORD PTR [rsp+0x58],rdx
   14001c687:	mov    eax,DWORD PTR [rdx]
   14001c689:	test   eax,eax
   14001c68b:	je     0x14001c698
   14001c68d:	cmp    eax,0xffffffff
   14001c690:	je     0x14001c703
   14001c692:	lock add DWORD PTR [rdx],0x1
   14001c696:	jmp    0x14001c6fe
   14001c698:	mov    edx,DWORD PTR [rdx+0x4]
   14001c69b:	lea    rcx,[rsp+0x58]
   14001c6a0:	call   QWORD PTR [rip+0x2e0a]        # 0x14001f4b0
   14001c6a6:	mov    rdx,QWORD PTR [r15+0x58]
   14001c6aa:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c6ae:	lea    rbx,[rdx+rax*8+0x10]
   14001c6b3:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c6b8:	movsxd rax,DWORD PTR [rdx+0xc]
   14001c6bc:	lea    rsi,[rdx+rax*8+0x10]
   14001c6c1:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c6c5:	lea    rdi,[rdx+rax*8+0x10]
   14001c6ca:	cmp    rdi,rsi
   14001c6cd:	je     0x14001c703
   14001c6cf:	nop
   14001c6d0:	mov    ecx,0x70
   14001c6d5:	call   0x14001e1c6
   14001c6da:	test   rax,rax
   14001c6dd:	je     0x14001c6ec
   14001c6df:	mov    rdx,QWORD PTR [rbx]
   14001c6e2:	mov    rcx,rax
   14001c6e5:	call   0x140003ce0
   14001c6ea:	jmp    0x14001c6ee
   14001c6ec:	xor    eax,eax
   14001c6ee:	mov    QWORD PTR [rdi],rax
   14001c6f1:	add    rdi,0x8
   14001c6f5:	add    rbx,0x8
   14001c6f9:	cmp    rdi,rsi
   14001c6fc:	jne    0x14001c6d0
   14001c6fe:	mov    rdx,QWORD PTR [rsp+0x58]
   14001c703:	mov    DWORD PTR [rsp+0x60],0x0
   14001c70b:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c70f:	lea    rcx,[rdx+rax*8+0x10]
   14001c714:	mov    QWORD PTR [rsp+0x68],rcx
   14001c719:	movsxd rax,DWORD PTR [rdx+0xc]
   14001c71d:	lea    rdx,[rdx+rax*8+0x10]
   14001c722:	mov    QWORD PTR [rsp+0x70],rdx
   14001c727:	nop    WORD PTR [rax+rax*1+0x0]
   14001c730:	mov    eax,r13d
   14001c733:	mov    DWORD PTR [rsp+0x60],eax
   14001c737:	cmp    rcx,rdx
   14001c73a:	je     0x14001c7a8
   14001c73c:	mov    rdi,QWORD PTR [rcx]
   14001c73f:	nop
   14001c740:	test   eax,eax
   14001c742:	je     0x14001c793
   14001c744:	cmp    BYTE PTR [rdi+0x62],0x0
   14001c748:	jne    0x14001c754
   14001c74a:	bt     DWORD PTR [rip+0xe946],0x8        # 0x14002b098
   14001c752:	jae    0x14001c78b
   14001c754:	cmp    DWORD PTR [rdi+0x48],0x2
   14001c758:	jne    0x14001c78b
   14001c75a:	lea    rcx,[rsp+0xf8]
   14001c762:	xor    r8d,r8d
   14001c765:	mov    rdx,rdi
   14001c768:	call   0x14001a230
   14001c76d:	mov    rcx,r12
   14001c770:	mov    rdx,rax
   14001c773:	call   QWORD PTR [rip+0x2c6f]        # 0x14001f3e8
   14001c779:	lea    rcx,[rsp+0xf8]
   14001c781:	call   QWORD PTR [rip+0x2da1]        # 0x14001f528
   14001c787:	mov    eax,DWORD PTR [rsp+0x60]
   14001c78b:	dec    eax
   14001c78d:	mov    DWORD PTR [rsp+0x60],eax
   14001c791:	jmp    0x14001c740
   14001c793:	mov    rcx,QWORD PTR [rsp+0x68]
   14001c798:	mov    rdx,QWORD PTR [rsp+0x70]
   14001c79d:	add    rcx,0x8
   14001c7a1:	mov    QWORD PTR [rsp+0x68],rcx
   14001c7a6:	jmp    0x14001c730
   14001c7a8:	mov    r15,QWORD PTR [rsp+0x58]
   14001c7ad:	mov    eax,DWORD PTR [r15]
   14001c7b0:	test   eax,eax
   14001c7b2:	je     0x14001c7d2
   14001c7b4:	cmp    eax,0xffffffff
   14001c7b7:	je     0x14001c901
   14001c7bd:	lock add DWORD PTR [r15],0xffffffff
   14001c7c2:	setne  al
   14001c7c5:	test   al,al
   14001c7c7:	jne    0x14001c901
   14001c7cd:	mov    r15,QWORD PTR [rsp+0x58]
   14001c7d2:	movsxd rax,DWORD PTR [r15+0xc]
   14001c7d6:	lea    r14,[r15+rax*8+0x10]
   14001c7db:	movsxd rax,DWORD PTR [r15+0x8]
   14001c7df:	lea    rdi,[r15+rax*8+0x10]
   14001c7e4:	mov    QWORD PTR [rsp+0xe0],rdi
   14001c7ec:	cmp    rdi,r14
   14001c7ef:	je     0x14001c8f8
   14001c7f5:	mov    rsi,QWORD PTR [r14-0x8]
   14001c7f9:	sub    r14,0x8
   14001c7fd:	test   rsi,rsi
   14001c800:	je     0x14001c8ef
   14001c806:	lea    rcx,[rsi+0x58]
   14001c80a:	call   QWORD PTR [rip+0x2da8]        # 0x14001f5b8
   14001c810:	mov    rcx,QWORD PTR [rsi+0x40]
   14001c814:	mov    eax,DWORD PTR [rcx]
   14001c816:	test   eax,eax
   14001c818:	je     0x14001c832
   14001c81a:	cmp    eax,0xffffffff
   14001c81d:	je     0x14001c8b6
   14001c823:	lock add DWORD PTR [rcx],0xffffffff
   14001c827:	setne  al
   14001c82a:	test   al,al
   14001c82c:	jne    0x14001c8b6
   14001c832:	mov    r13,QWORD PTR [rsi+0x40]
   14001c836:	movsxd rax,DWORD PTR [r13+0xc]
   14001c83a:	lea    rbx,[r13+rax*8+0x10]
   14001c83f:	movsxd rax,DWORD PTR [r13+0x8]
   14001c843:	lea    rbp,[r13+rax*8+0x10]
   14001c848:	cmp    rbp,rbx
   14001c84b:	je     0x14001c8ad
   14001c84d:	nop    DWORD PTR [rax]
   14001c850:	mov    rdi,QWORD PTR [rbx-0x8]
   14001c854:	sub    rbx,0x8
   14001c858:	test   rdi,rdi
   14001c85b:	je     0x14001c8a0
   14001c85d:	lea    rcx,[rdi+0x38]
   14001c861:	call   QWORD PTR [rip+0x2d51]        # 0x14001f5b8
   14001c867:	lea    rcx,[rdi+0x30]
   14001c86b:	call   QWORD PTR [rip+0x2d47]        # 0x14001f5b8
   14001c871:	lea    rcx,[rdi+0x28]
   14001c875:	call   QWORD PTR [rip+0x2d3d]        # 0x14001f5b8
   14001c87b:	lea    rcx,[rdi+0x20]
   14001c87f:	call   QWORD PTR [rip+0x2d33]        # 0x14001f5b8
   14001c885:	lea    rcx,[rdi+0x8]
   14001c889:	call   QWORD PTR [rip+0x2d29]        # 0x14001f5b8
   14001c88f:	mov    rcx,rdi
   14001c892:	call   QWORD PTR [rip+0x2d20]        # 0x14001f5b8
   14001c898:	mov    rcx,rdi
   14001c89b:	call   0x14001e1c0
   14001c8a0:	cmp    rbx,rbp
   14001c8a3:	jne    0x14001c850
   14001c8a5:	mov    rdi,QWORD PTR [rsp+0xe0]
   14001c8ad:	mov    rcx,r13
   14001c8b0:	call   QWORD PTR [rip+0x2c32]        # 0x14001f4e8
   14001c8b6:	lea    rcx,[rsi+0x30]
   14001c8ba:	call   QWORD PTR [rip+0x2cf8]        # 0x14001f5b8
   14001c8c0:	lea    rcx,[rsi+0x28]
   14001c8c4:	call   QWORD PTR [rip+0x2cee]        # 0x14001f5b8
   14001c8ca:	lea    rcx,[rsi+0x20]
   14001c8ce:	call   QWORD PTR [rip+0x2ce4]        # 0x14001f5b8
   14001c8d4:	lea    rcx,[rsi+0x8]
   14001c8d8:	call   QWORD PTR [rip+0x2cda]        # 0x14001f5b8
   14001c8de:	mov    rcx,rsi
   14001c8e1:	call   QWORD PTR [rip+0x2cd1]        # 0x14001f5b8
   14001c8e7:	mov    rcx,rsi
   14001c8ea:	call   0x14001e1c0
   14001c8ef:	cmp    r14,rdi
   14001c8f2:	jne    0x14001c7f5
   14001c8f8:	mov    rcx,r15
   14001c8fb:	call   QWORD PTR [rip+0x2be7]        # 0x14001f4e8
   14001c901:	mov    rax,r12
   14001c904:	mov    rbx,QWORD PTR [rsp+0x218]
   14001c90c:	add    rsp,0x1d0
   14001c913:	pop    r15
   14001c915:	pop    r14
   14001c917:	pop    r13
   14001c919:	pop    r12
   14001c91b:	pop    rdi
   14001c91c:	pop    rsi
   14001c91d:	pop    rbp
   14001c91e:	ret    
   14001c91f:	int3   
   14001c920:	rex push rbx
   14001c922:	push   rbp
   14001c923:	push   rsi
   14001c924:	push   rdi
   14001c925:	push   r12
   14001c927:	push   r13
   14001c929:	push   r14
   14001c92b:	sub    rsp,0x40
   14001c92f:	mov    r14,rdx
   14001c932:	mov    rdx,QWORD PTR [rdx+0x78]
   14001c936:	mov    r13,rcx
   14001c939:	mov    QWORD PTR [rsp+0x20],rdx
   14001c93e:	mov    eax,DWORD PTR [rdx]
   14001c940:	test   eax,eax
   14001c942:	je     0x14001c956
   14001c944:	cmp    eax,0xffffffff
   14001c947:	je     0x14001c9d9
   14001c94d:	lock add DWORD PTR [rdx],0x1
   14001c951:	jmp    0x14001c9d4
   14001c956:	mov    edx,DWORD PTR [rdx+0x4]
   14001c959:	lea    rcx,[rsp+0x20]
   14001c95e:	call   QWORD PTR [rip+0x2b4c]        # 0x14001f4b0
   14001c964:	mov    rdx,QWORD PTR [rsp+0x20]
   14001c969:	mov    rcx,QWORD PTR [r14+0x78]
   14001c96d:	movsxd rax,DWORD PTR [rdx+0xc]
   14001c971:	lea    r12,[rdx+rax*8+0x10]
   14001c976:	movsxd rax,DWORD PTR [rcx+0x8]
   14001c97a:	lea    rbp,[rcx+rax*8+0x10]
   14001c97f:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c983:	lea    rsi,[rdx+rax*8+0x10]
   14001c988:	cmp    rsi,r12
   14001c98b:	je     0x14001c9d9
   14001c98d:	nop    DWORD PTR [rax]
   14001c990:	mov    ecx,0x10
   14001c995:	call   0x14001e1c6
   14001c99a:	mov    rdi,rax
   14001c99d:	test   rax,rax
   14001c9a0:	je     0x14001c9c2
   14001c9a2:	mov    rbx,QWORD PTR [rbp+0x0]
   14001c9a6:	mov    rcx,rax
   14001c9a9:	mov    rdx,rbx
   14001c9ac:	call   QWORD PTR [rip+0x2c26]        # 0x14001f5d8
   14001c9b2:	lea    rdx,[rbx+0x8]
   14001c9b6:	lea    rcx,[rdi+0x8]
   14001c9ba:	call   QWORD PTR [rip+0x2c18]        # 0x14001f5d8
   14001c9c0:	jmp    0x14001c9c4
   14001c9c2:	xor    edi,edi
   14001c9c4:	mov    QWORD PTR [rsi],rdi
   14001c9c7:	add    rsi,0x8
   14001c9cb:	add    rbp,0x8
   14001c9cf:	cmp    rsi,r12
   14001c9d2:	jne    0x14001c990
   14001c9d4:	mov    rdx,QWORD PTR [rsp+0x20]
   14001c9d9:	mov    DWORD PTR [rsp+0x28],0x0
   14001c9e1:	movsxd rax,DWORD PTR [rdx+0x8]
   14001c9e5:	lea    rcx,[rdx+rax*8+0x10]
   14001c9ea:	mov    QWORD PTR [rsp+0x30],rcx
   14001c9ef:	movsxd rax,DWORD PTR [rdx+0xc]
   14001c9f3:	lea    r8,[rdx+rax*8+0x10]
   14001c9f8:	mov    QWORD PTR [rsp+0x38],r8
   14001c9fd:	nop    DWORD PTR [rax]
   14001ca00:	mov    eax,0x1
   14001ca05:	mov    DWORD PTR [rsp+0x28],eax
   14001ca09:	cmp    rcx,r8
   14001ca0c:	je     0x14001cadb
   14001ca12:	mov    rbx,QWORD PTR [rcx]
   14001ca15:	test   eax,eax
   14001ca17:	je     0x14001ca39
   14001ca19:	lea    rdx,[rip+0xa350]        # 0x140026d70
   14001ca20:	mov    rcx,rbx
   14001ca23:	call   QWORD PTR [rip+0x2bc7]        # 0x14001f5f0
   14001ca29:	test   eax,eax
   14001ca2b:	je     0x14001ca4e
   14001ca2d:	mov    eax,DWORD PTR [rsp+0x28]
   14001ca31:	dec    eax
   14001ca33:	mov    DWORD PTR [rsp+0x28],eax
   14001ca37:	jmp    0x14001ca15
   14001ca39:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ca3e:	mov    r8,QWORD PTR [rsp+0x38]
   14001ca43:	add    rcx,0x8
   14001ca47:	mov    QWORD PTR [rsp+0x30],rcx
   14001ca4c:	jmp    0x14001ca00
   14001ca4e:	lea    rdx,[rbx+0x8]
   14001ca52:	mov    rcx,r13
   14001ca55:	call   QWORD PTR [rip+0x29e5]        # 0x14001f440
   14001ca5b:	mov    rsi,QWORD PTR [rsp+0x20]
   14001ca60:	mov    eax,DWORD PTR [rsi]
   14001ca62:	test   eax,eax
   14001ca64:	je     0x14001ca83
   14001ca66:	cmp    eax,0xffffffff
   14001ca69:	je     0x14001cbe1
   14001ca6f:	lock add DWORD PTR [rsi],0xffffffff
   14001ca73:	setne  al
   14001ca76:	test   al,al
   14001ca78:	jne    0x14001cbe1
   14001ca7e:	mov    rsi,QWORD PTR [rsp+0x20]
   14001ca83:	movsxd rax,DWORD PTR [rsi+0xc]
   14001ca87:	lea    rbx,[rsi+rax*8+0x10]
   14001ca8c:	movsxd rax,DWORD PTR [rsi+0x8]
   14001ca90:	lea    rbp,[rsi+rax*8+0x10]
   14001ca95:	cmp    rbp,rbx
   14001ca98:	je     0x14001cacd
   14001ca9a:	nop    WORD PTR [rax+rax*1+0x0]
   14001caa0:	mov    rdi,QWORD PTR [rbx-0x8]
   14001caa4:	sub    rbx,0x8
   14001caa8:	test   rdi,rdi
   14001caab:	je     0x14001cac8
   14001caad:	lea    rcx,[rdi+0x8]
   14001cab1:	call   QWORD PTR [rip+0x2b01]        # 0x14001f5b8
   14001cab7:	mov    rcx,rdi
   14001caba:	call   QWORD PTR [rip+0x2af8]        # 0x14001f5b8
   14001cac0:	mov    rcx,rdi
   14001cac3:	call   0x14001e1c0
   14001cac8:	cmp    rbx,rbp
   14001cacb:	jne    0x14001caa0
   14001cacd:	mov    rcx,rsi
   14001cad0:	call   QWORD PTR [rip+0x2a12]        # 0x14001f4e8
   14001cad6:	jmp    0x14001cbe1
   14001cadb:	mov    rsi,QWORD PTR [rsp+0x20]
   14001cae0:	or     ebp,0xffffffff
   14001cae3:	mov    eax,DWORD PTR [rsi]
   14001cae5:	test   eax,eax
   14001cae7:	je     0x14001cafc
   14001cae9:	cmp    eax,ebp
   14001caeb:	je     0x14001cb49
   14001caed:	lock add DWORD PTR [rsi],ebp
   14001caf0:	setne  al
   14001caf3:	test   al,al
   14001caf5:	jne    0x14001cb49
   14001caf7:	mov    rsi,QWORD PTR [rsp+0x20]
   14001cafc:	movsxd rax,DWORD PTR [rsi+0xc]
   14001cb00:	lea    rbx,[rsi+rax*8+0x10]
   14001cb05:	movsxd rax,DWORD PTR [rsi+0x8]
   14001cb09:	lea    r12,[rsi+rax*8+0x10]
   14001cb0e:	cmp    r12,rbx
   14001cb11:	je     0x14001cb40
   14001cb13:	mov    rdi,QWORD PTR [rbx-0x8]
   14001cb17:	sub    rbx,0x8
   14001cb1b:	test   rdi,rdi
   14001cb1e:	je     0x14001cb3b
   14001cb20:	lea    rcx,[rdi+0x8]
   14001cb24:	call   QWORD PTR [rip+0x2a8e]        # 0x14001f5b8
   14001cb2a:	mov    rcx,rdi
   14001cb2d:	call   QWORD PTR [rip+0x2a85]        # 0x14001f5b8
   14001cb33:	mov    rcx,rdi
   14001cb36:	call   0x14001e1c0
   14001cb3b:	cmp    rbx,r12
   14001cb3e:	jne    0x14001cb13
   14001cb40:	mov    rcx,rsi
   14001cb43:	call   QWORD PTR [rip+0x299f]        # 0x14001f4e8
   14001cb49:	lea    rcx,[rsp+0x90]
   14001cb51:	mov    rdx,r14
   14001cb54:	call   0x14001b400
   14001cb59:	lea    rcx,[rsp+0x88]
   14001cb61:	mov    rdx,r14
   14001cb64:	call   0x14001bd40
   14001cb69:	mov    r11,QWORD PTR [rsp+0x88]
   14001cb71:	cmp    DWORD PTR [r11+0x4],0x0
   14001cb76:	jne    0x14001cb83
   14001cb78:	mov    rcx,r13
   14001cb7b:	call   QWORD PTR [rip+0x285f]        # 0x14001f3e0
   14001cb81:	jmp    0x14001cbc5
   14001cb83:	lea    rdx,[rip+0xa1b6]        # 0x140026d40
   14001cb8a:	lea    rcx,[rsp+0x98]
   14001cb92:	mov    r8d,ebp
   14001cb95:	call   QWORD PTR [rip+0x285d]        # 0x14001f3f8
   14001cb9b:	lea    r9,[rsp+0x88]
   14001cba3:	lea    r8,[rsp+0x90]
   14001cbab:	mov    rcx,rax
   14001cbae:	mov    rdx,r13
   14001cbb1:	call   QWORD PTR [rip+0x28a1]        # 0x14001f458
   14001cbb7:	lea    rcx,[rsp+0x98]
   14001cbbf:	call   QWORD PTR [rip+0x2963]        # 0x14001f528
   14001cbc5:	lea    rcx,[rsp+0x88]
   14001cbcd:	call   QWORD PTR [rip+0x2955]        # 0x14001f528
   14001cbd3:	lea    rcx,[rsp+0x90]
   14001cbdb:	call   QWORD PTR [rip+0x2947]        # 0x14001f528
   14001cbe1:	mov    rax,r13
   14001cbe4:	add    rsp,0x40
   14001cbe8:	pop    r14
   14001cbea:	pop    r13
   14001cbec:	pop    r12
   14001cbee:	pop    rdi
   14001cbef:	pop    rsi
   14001cbf0:	pop    rbp
   14001cbf1:	pop    rbx
   14001cbf2:	ret    
   14001cbf3:	int3   
   14001cbf4:	int3   
   14001cbf5:	int3   
   14001cbf6:	int3   
   14001cbf7:	int3   
   14001cbf8:	int3   
   14001cbf9:	int3   
   14001cbfa:	int3   
   14001cbfb:	int3   
   14001cbfc:	int3   
   14001cbfd:	int3   
   14001cbfe:	int3   
   14001cbff:	int3   
   14001cc00:	rex push rbx
   14001cc02:	push   r12
   14001cc04:	push   r13
   14001cc06:	push   r14
   14001cc08:	push   r15
   14001cc0a:	sub    rsp,0x60
   14001cc0e:	mov    rax,QWORD PTR [rcx]
   14001cc11:	mov    r12,rcx
   14001cc14:	mov    r13,rdx
   14001cc17:	mov    ecx,DWORD PTR [rax+0x10]
   14001cc1a:	cmp    ecx,0x1
   14001cc1d:	je     0x14001cc2b
   14001cc1f:	test   ecx,ecx
   14001cc21:	je     0x14001cc2b
   14001cc23:	mov    rcx,r12
   14001cc26:	call   0x140014590
   14001cc2b:	mov    rax,QWORD PTR [r12]
   14001cc2f:	mov    rcx,r13
   14001cc32:	mov    ebx,DWORD PTR [rax+0x24]
   14001cc35:	mov    eax,DWORD PTR [r13+0xc]
   14001cc39:	mov    DWORD PTR [rsp+0x20],eax
   14001cc3d:	call   QWORD PTR [rip+0x29b5]        # 0x14001f5f8
   14001cc43:	movsxd rcx,DWORD PTR [r13+0x8]
   14001cc47:	add    rax,rcx
   14001cc4a:	lea    rcx,[rsp+0x30]
   14001cc4f:	xor    edx,edx
   14001cc51:	mov    QWORD PTR [rsp+0x28],rax
   14001cc56:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001cc5b:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14001cc61:	call   QWORD PTR [rip+0x2699]        # 0x14001f300
   14001cc67:	mov    rdx,r13
   14001cc6a:	mov    rcx,r12
   14001cc6d:	mov    r15d,eax
   14001cc70:	xor    r15d,ebx
   14001cc73:	mov    r8d,r15d
   14001cc76:	mov    DWORD PTR [rsp+0x90],r15d
   14001cc7e:	call   0x140011540
   14001cc83:	mov    rcx,QWORD PTR [r12]
   14001cc87:	mov    r14,rax
   14001cc8a:	mov    rax,QWORD PTR [rax]
   14001cc8d:	cmp    rax,rcx
   14001cc90:	jne    0x14001ce31
   14001cc96:	mov    edx,DWORD PTR [rcx+0x20]
   14001cc99:	mov    QWORD PTR [rsp+0x98],rbp
   14001cca1:	mov    QWORD PTR [rsp+0xa0],rsi
   14001cca9:	cmp    DWORD PTR [rcx+0x14],edx
   14001ccac:	mov    QWORD PTR [rsp+0xa8],rdi
   14001ccb4:	jl     0x14001cd1e
   14001ccb6:	movsx  edx,WORD PTR [rcx+0x1e]
   14001ccba:	inc    edx
   14001ccbc:	call   QWORD PTR [rip+0x2536]        # 0x14001f1f8
   14001ccc2:	mov    r11,QWORD PTR [r12]
   14001ccc6:	mov    eax,DWORD PTR [r13+0xc]
   14001ccca:	mov    ebx,DWORD PTR [r11+0x24]
   14001ccce:	mov    rcx,r13
   14001ccd1:	mov    DWORD PTR [rsp+0x20],eax
   14001ccd5:	call   QWORD PTR [rip+0x291d]        # 0x14001f5f8
   14001ccdb:	movsxd rcx,DWORD PTR [r13+0x8]
   14001ccdf:	xor    edx,edx
   14001cce1:	add    rax,rcx
   14001cce4:	lea    rcx,[rsp+0x20]
   14001cce9:	mov    QWORD PTR [rsp+0x28],rax
   14001ccee:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14001ccf3:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001ccf9:	call   QWORD PTR [rip+0x2601]        # 0x14001f300
   14001ccff:	mov    rdx,r13
   14001cd02:	mov    rcx,r12
   14001cd05:	mov    r15d,eax
   14001cd08:	xor    r15d,ebx
   14001cd0b:	mov    r8d,r15d
   14001cd0e:	mov    DWORD PTR [rsp+0x90],r15d
   14001cd16:	call   0x140011540
   14001cd1b:	mov    r14,rax
   14001cd1e:	mov    rdi,QWORD PTR [rip+0x280b]        # 0x14001f530
   14001cd25:	mov    rcx,QWORD PTR [r12]
   14001cd29:	mov    edx,0x8
   14001cd2e:	mov    BYTE PTR [rsp+0x40],0x0
   14001cd33:	mov    BYTE PTR [rsp+0x41],0x0
   14001cd38:	mov    QWORD PTR [rsp+0x48],rdi
   14001cd3d:	mov    rbp,rdi
   14001cd40:	mov    QWORD PTR [rsp+0x50],rdi
   14001cd45:	call   QWORD PTR [rip+0x2795]        # 0x14001f4e0
   14001cd4b:	mov    rsi,rax
   14001cd4e:	test   rax,rax
   14001cd51:	je     0x14001cd9f
   14001cd53:	mov    rcx,QWORD PTR [r14]
   14001cd56:	mov    rdx,r13
   14001cd59:	mov    DWORD PTR [rax+0x8],r15d
   14001cd5d:	mov    QWORD PTR [rax],rcx
   14001cd60:	lea    rcx,[rax+0x10]
   14001cd64:	call   QWORD PTR [rip+0x286e]        # 0x14001f5d8
   14001cd6a:	mov    r11d,DWORD PTR [r13+0x8]
   14001cd6e:	lea    rdx,[rsp+0x48]
   14001cd73:	mov    DWORD PTR [rsi+0x18],r11d
   14001cd77:	mov    ecx,DWORD PTR [r13+0xc]
   14001cd7b:	mov    DWORD PTR [rsi+0x1c],ecx
   14001cd7e:	lea    rcx,[rsi+0x28]
   14001cd82:	mov    BYTE PTR [rsi+0x20],0x0
   14001cd86:	mov    BYTE PTR [rsi+0x21],0x0
   14001cd8a:	call   0x140011970
   14001cd8f:	lea    rcx,[rsi+0x30]
   14001cd93:	lea    rdx,[rsp+0x50]
   14001cd98:	call   0x140011970
   14001cd9d:	jmp    0x14001cda1
   14001cd9f:	xor    esi,esi
   14001cda1:	mov    QWORD PTR [r14],rsi
   14001cda4:	mov    rax,QWORD PTR [r12]
   14001cda8:	inc    DWORD PTR [rax+0x14]
   14001cdab:	mov    eax,DWORD PTR [rdi]
   14001cdad:	test   eax,eax
   14001cdaf:	je     0x14001cdcb
   14001cdb1:	cmp    eax,0xffffffff
   14001cdb4:	je     0x14001cdd8
   14001cdb6:	lock add DWORD PTR [rdi],0xffffffff
   14001cdba:	setne  al
   14001cdbd:	test   al,al
   14001cdbf:	jne    0x14001ce2a
   14001cdc1:	mov    rbp,QWORD PTR [rsp+0x50]
   14001cdc6:	mov    rdi,QWORD PTR [rsp+0x48]
   14001cdcb:	lea    rcx,[rsp+0x50]
   14001cdd0:	mov    rdx,rbp
   14001cdd3:	call   0x1400114d0
   14001cdd8:	mov    eax,DWORD PTR [rdi]
   14001cdda:	mov    rbp,QWORD PTR [rsp+0x98]
   14001cde2:	test   eax,eax
   14001cde4:	je     0x14001cdfb
   14001cde6:	cmp    eax,0xffffffff
   14001cde9:	je     0x14001ce08
   14001cdeb:	lock add DWORD PTR [rdi],0xffffffff
   14001cdef:	setne  cl
   14001cdf2:	test   cl,cl
   14001cdf4:	jne    0x14001ce08
   14001cdf6:	mov    rdi,QWORD PTR [rsp+0x48]
   14001cdfb:	lea    rcx,[rsp+0x48]
   14001ce00:	mov    rdx,rdi
   14001ce03:	call   0x1400114d0
   14001ce08:	mov    rdi,QWORD PTR [rsp+0xa8]
   14001ce10:	lea    rax,[rsi+0x20]
   14001ce14:	mov    rsi,QWORD PTR [rsp+0xa0]
   14001ce1c:	add    rsp,0x60
   14001ce20:	pop    r15
   14001ce22:	pop    r14
   14001ce24:	pop    r13
   14001ce26:	pop    r12
   14001ce28:	pop    rbx
   14001ce29:	ret    
   14001ce2a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001ce2f:	jmp    0x14001cdd8
   14001ce31:	add    rax,0x20
   14001ce35:	add    rsp,0x60
   14001ce39:	pop    r15
   14001ce3b:	pop    r14
   14001ce3d:	pop    r13
   14001ce3f:	pop    r12
   14001ce41:	pop    rbx
   14001ce42:	ret    
   14001ce43:	int3   
   14001ce44:	int3   
   14001ce45:	int3   
   14001ce46:	int3   
   14001ce47:	int3   
   14001ce48:	int3   
   14001ce49:	int3   
   14001ce4a:	int3   
   14001ce4b:	int3   
   14001ce4c:	int3   
   14001ce4d:	int3   
   14001ce4e:	int3   
   14001ce4f:	int3   
   14001ce50:	rex push rbx
   14001ce52:	push   rbp
   14001ce53:	push   rdi
   14001ce54:	sub    rsp,0x20
   14001ce58:	mov    rbx,QWORD PTR [rdx]
   14001ce5b:	mov    rdi,rdx
   14001ce5e:	mov    rbp,rcx
   14001ce61:	cmp    QWORD PTR [rcx],rbx
   14001ce64:	je     0x14001cf90
   14001ce6a:	mov    QWORD PTR [rsp+0x40],rbx
   14001ce6f:	mov    eax,DWORD PTR [rbx]
   14001ce71:	mov    QWORD PTR [rsp+0x48],rsi
   14001ce76:	mov    QWORD PTR [rsp+0x50],r12
   14001ce7b:	test   eax,eax
   14001ce7d:	je     0x14001ce8f
   14001ce7f:	cmp    eax,0xffffffff
   14001ce82:	je     0x14001cef8
   14001ce84:	lock add DWORD PTR [rbx],0x1
   14001ce88:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ce8d:	jmp    0x14001cef8
   14001ce8f:	mov    edx,DWORD PTR [rbx+0x4]
   14001ce92:	lea    rcx,[rsp+0x40]
   14001ce97:	call   QWORD PTR [rip+0x2613]        # 0x14001f4b0
   14001ce9d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001cea2:	mov    rcx,QWORD PTR [rdi]
   14001cea5:	movsxd rax,DWORD PTR [rbx+0xc]
   14001cea9:	lea    r12,[rbx+rax*8+0x10]
   14001ceae:	movsxd rax,DWORD PTR [rcx+0x8]
   14001ceb2:	lea    rsi,[rcx+rax*8+0x10]
   14001ceb7:	movsxd rax,DWORD PTR [rbx+0x8]
   14001cebb:	lea    rdi,[rbx+rax*8+0x10]
   14001cec0:	cmp    rdi,r12
   14001cec3:	je     0x14001cef8
   14001cec5:	mov    ecx,0xa8
   14001ceca:	call   0x14001e1c6
   14001cecf:	test   rax,rax
   14001ced2:	je     0x14001cee1
   14001ced4:	mov    rdx,QWORD PTR [rsi]
   14001ced7:	mov    rcx,rax
   14001ceda:	call   0x140008750
   14001cedf:	jmp    0x14001cee3
   14001cee1:	xor    eax,eax
   14001cee3:	mov    QWORD PTR [rdi],rax
   14001cee6:	add    rdi,0x8
   14001ceea:	add    rsi,0x8
   14001ceee:	cmp    rdi,r12
   14001cef1:	jne    0x14001cec5
   14001cef3:	mov    rbx,QWORD PTR [rsp+0x40]
   14001cef8:	lea    rax,[rsp+0x40]
   14001cefd:	cmp    rax,rbp
   14001cf00:	je     0x14001cf12
   14001cf02:	mov    rax,rbx
   14001cf05:	mov    rbx,QWORD PTR [rbp+0x0]
   14001cf09:	mov    QWORD PTR [rsp+0x40],rbx
   14001cf0e:	mov    QWORD PTR [rbp+0x0],rax
   14001cf12:	mov    eax,DWORD PTR [rbx]
   14001cf14:	test   eax,eax
   14001cf16:	je     0x14001cf2d
   14001cf18:	cmp    eax,0xffffffff
   14001cf1b:	je     0x14001cf7b
   14001cf1d:	lock add DWORD PTR [rbx],0xffffffff
   14001cf21:	setne  al
   14001cf24:	test   al,al
   14001cf26:	jne    0x14001cf7b
   14001cf28:	mov    rbx,QWORD PTR [rsp+0x40]
   14001cf2d:	movsxd rax,DWORD PTR [rbx+0xc]
   14001cf31:	lea    rdi,[rbx+rax*8+0x10]
   14001cf36:	movsxd rax,DWORD PTR [rbx+0x8]
   14001cf3a:	lea    r12,[rbx+rax*8+0x10]
   14001cf3f:	cmp    r12,rdi
   14001cf42:	je     0x14001cf72
   14001cf44:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001cf50:	mov    rsi,QWORD PTR [rdi-0x8]
   14001cf54:	sub    rdi,0x8
   14001cf58:	test   rsi,rsi
   14001cf5b:	je     0x14001cf6d
   14001cf5d:	mov    rcx,rsi
   14001cf60:	call   0x1400089c0
   14001cf65:	mov    rcx,rsi
   14001cf68:	call   0x14001e1c0
   14001cf6d:	cmp    rdi,r12
   14001cf70:	jne    0x14001cf50
   14001cf72:	mov    rcx,rbx
   14001cf75:	call   QWORD PTR [rip+0x256d]        # 0x14001f4e8
   14001cf7b:	mov    rsi,QWORD PTR [rsp+0x48]
   14001cf80:	mov    r12,QWORD PTR [rsp+0x50]
   14001cf85:	mov    rax,rbp
   14001cf88:	add    rsp,0x20
   14001cf8c:	pop    rdi
   14001cf8d:	pop    rbp
   14001cf8e:	pop    rbx
   14001cf8f:	ret    
   14001cf90:	mov    rax,rcx
   14001cf93:	add    rsp,0x20
   14001cf97:	pop    rdi
   14001cf98:	pop    rbp
   14001cf99:	pop    rbx
   14001cf9a:	ret    
   14001cf9b:	int3   
   14001cf9c:	int3   
   14001cf9d:	int3   
   14001cf9e:	int3   
   14001cf9f:	int3   
   14001cfa0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cfa5:	push   rdi
   14001cfa6:	sub    rsp,0x20
   14001cfaa:	mov    rbx,rcx
   14001cfad:	mov    rcx,QWORD PTR [rcx+0x68]
   14001cfb1:	mov    eax,DWORD PTR [rcx]
   14001cfb3:	test   eax,eax
   14001cfb5:	je     0x14001cfc7
   14001cfb7:	cmp    eax,0xffffffff
   14001cfba:	je     0x14001cfd0
   14001cfbc:	lock add DWORD PTR [rcx],0xffffffff
   14001cfc0:	setne  al
   14001cfc3:	test   al,al
   14001cfc5:	jne    0x14001cfd0
   14001cfc7:	mov    rcx,QWORD PTR [rbx+0x68]
   14001cfcb:	call   0x140002bd0
   14001cfd0:	mov    rcx,QWORD PTR [rbx+0x60]
   14001cfd4:	mov    eax,DWORD PTR [rcx+0x10]
   14001cfd7:	test   eax,eax
   14001cfd9:	je     0x14001cfec
   14001cfdb:	cmp    eax,0xffffffff
   14001cfde:	je     0x14001cffd
   14001cfe0:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001cfe5:	setne  al
   14001cfe8:	test   al,al
   14001cfea:	jne    0x14001cffd
   14001cfec:	mov    rcx,QWORD PTR [rbx+0x60]
   14001cff0:	lea    rdx,[rip+0xfffffffffffe5939]        # 0x140002930
   14001cff7:	call   QWORD PTR [rip+0x24bb]        # 0x14001f4b8
   14001cffd:	mov    rcx,QWORD PTR [rbx+0x58]
   14001d001:	mov    eax,DWORD PTR [rcx+0x10]
   14001d004:	test   eax,eax
   14001d006:	je     0x14001d019
   14001d008:	cmp    eax,0xffffffff
   14001d00b:	je     0x14001d02a
   14001d00d:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001d012:	setne  al
   14001d015:	test   al,al
   14001d017:	jne    0x14001d02a
   14001d019:	mov    rcx,QWORD PTR [rbx+0x58]
   14001d01d:	lea    rdx,[rip+0xfffffffffffe590c]        # 0x140002930
   14001d024:	call   QWORD PTR [rip+0x248e]        # 0x14001f4b8
   14001d02a:	lea    rcx,[rbx+0x50]
   14001d02e:	call   0x140002d20
   14001d033:	mov    rcx,QWORD PTR [rbx+0x48]
   14001d037:	mov    eax,DWORD PTR [rcx]
   14001d039:	test   eax,eax
   14001d03b:	je     0x14001d04d
   14001d03d:	cmp    eax,0xffffffff
   14001d040:	je     0x14001d056
   14001d042:	lock add DWORD PTR [rcx],0xffffffff
   14001d046:	setne  al
   14001d049:	test   al,al
   14001d04b:	jne    0x14001d056
   14001d04d:	mov    rcx,QWORD PTR [rbx+0x48]
   14001d051:	call   0x140002cb0
   14001d056:	mov    rax,QWORD PTR [rbx+0x40]
   14001d05a:	lea    rcx,[rbx+0x40]
   14001d05e:	mov    edx,DWORD PTR [rax]
   14001d060:	test   edx,edx
   14001d062:	je     0x14001d074
   14001d064:	cmp    edx,0xffffffff
   14001d067:	je     0x14001d07c
   14001d069:	lock add DWORD PTR [rax],0xffffffff
   14001d06d:	setne  al
   14001d070:	test   al,al
   14001d072:	jne    0x14001d07c
   14001d074:	mov    rdx,QWORD PTR [rcx]
   14001d077:	call   0x14000d1d0
   14001d07c:	lea    rcx,[rbx+0x38]
   14001d080:	call   0x140002d20
   14001d085:	lea    rcx,[rbx+0x30]
   14001d089:	call   QWORD PTR [rip+0x2529]        # 0x14001f5b8
   14001d08f:	lea    rcx,[rbx+0x20]
   14001d093:	call   QWORD PTR [rip+0x251f]        # 0x14001f5b8
   14001d099:	mov    rcx,rbx
   14001d09c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d0a1:	add    rsp,0x20
   14001d0a5:	pop    rdi
   14001d0a6:	jmp    0x1400127d0
   14001d0ab:	int3   
   14001d0ac:	int3   
   14001d0ad:	int3   
   14001d0ae:	int3   
   14001d0af:	int3   
   14001d0b0:	rex push rbx
   14001d0b2:	push   rbp
   14001d0b3:	push   rdi
   14001d0b4:	push   r13
   14001d0b6:	push   r14
   14001d0b8:	push   r15
   14001d0ba:	sub    rsp,0x1c8
   14001d0c1:	mov    rax,QWORD PTR [rip+0x2480]        # 0x14001f548
   14001d0c8:	movsxd rdi,ecx
   14001d0cb:	mov    r14,rdx
   14001d0ce:	lea    edx,[rdi-0x1]
   14001d0d1:	mov    QWORD PTR [rsp+0x20],rax
   14001d0d6:	cmp    DWORD PTR [rax+0x4],edx
   14001d0d9:	jge    0x14001d0fd
   14001d0db:	mov    ecx,DWORD PTR [rax]
   14001d0dd:	cmp    ecx,0x1
   14001d0e0:	je     0x14001d0f2
   14001d0e2:	test   ecx,ecx
   14001d0e4:	je     0x14001d0f2
   14001d0e6:	lea    rcx,[rsp+0x20]
   14001d0eb:	call   0x140019b80
   14001d0f0:	jmp    0x14001d0fd
   14001d0f2:	lea    rcx,[rsp+0x20]
   14001d0f7:	call   QWORD PTR [rip+0x20ab]        # 0x14001f1a8
   14001d0fd:	mov    ebx,0x1
   14001d102:	or     ebp,0xffffffff
   14001d105:	mov    QWORD PTR [rsp+0x208],rsi
   14001d10d:	cmp    edi,ebx
   14001d10f:	jle    0x14001d1b4
   14001d115:	mov    rsi,rdi
   14001d118:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d120:	mov    rdx,QWORD PTR [r14+rbx*8]
   14001d124:	lea    rcx,[rsp+0x100]
   14001d12c:	mov    r8d,ebp
   14001d12f:	call   QWORD PTR [rip+0x216b]        # 0x14001f2a0
   14001d135:	mov    rdi,rax
   14001d138:	mov    rax,QWORD PTR [rsp+0x20]
   14001d13d:	mov    ecx,DWORD PTR [rax]
   14001d13f:	cmp    ecx,0x1
   14001d142:	je     0x14001d170
   14001d144:	test   ecx,ecx
   14001d146:	je     0x14001d170
   14001d148:	lea    rcx,[rsp+0x20]
   14001d14d:	mov    edx,0x7fffffff
   14001d152:	mov    r8d,0x1
   14001d158:	call   0x140019a40
   14001d15d:	test   rax,rax
   14001d160:	je     0x14001d19a
   14001d162:	mov    rdx,rdi
   14001d165:	mov    rcx,rax
   14001d168:	call   QWORD PTR [rip+0x2382]        # 0x14001f4f0
   14001d16e:	jmp    0x14001d19a
   14001d170:	lea    rcx,[rsp+0xf0]
   14001d178:	mov    rdx,rdi
   14001d17b:	call   QWORD PTR [rip+0x236f]        # 0x14001f4f0
   14001d181:	lea    rcx,[rsp+0x20]
   14001d186:	call   QWORD PTR [rip+0x2014]        # 0x14001f1a0
   14001d18c:	mov    r11,rax
   14001d18f:	mov    rax,QWORD PTR [rsp+0xf0]
   14001d197:	mov    QWORD PTR [r11],rax
   14001d19a:	lea    rcx,[rsp+0x100]
   14001d1a2:	call   QWORD PTR [rip+0x2380]        # 0x14001f528
   14001d1a8:	inc    rbx
   14001d1ab:	cmp    rbx,rsi
   14001d1ae:	jl     0x14001d120
   14001d1b4:	lea    rcx,[rsp+0x20]
   14001d1b9:	mov    QWORD PTR [rsp+0x1c0],r12
   14001d1c1:	call   0x14001b950
   14001d1c6:	mov    rax,QWORD PTR [rsp+0x20]
   14001d1cb:	mov    rbx,QWORD PTR [rip+0x2376]        # 0x14001f548
   14001d1d2:	mov    ecx,DWORD PTR [rax+0xc]
   14001d1d5:	xor    r15d,r15d
   14001d1d8:	mov    QWORD PTR [rsp+0x28],rbx
   14001d1dd:	sub    ecx,DWORD PTR [rax+0x8]
   14001d1e0:	mov    r13d,r15d
   14001d1e3:	test   ecx,ecx
   14001d1e5:	jle    0x14001d771
   14001d1eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d1f0:	movsxd rcx,DWORD PTR [rax+0x8]
   14001d1f4:	movsxd rdx,r13d
   14001d1f7:	add    rdx,rcx
   14001d1fa:	lea    rcx,[rsp+0x30]
   14001d1ff:	lea    rdx,[rax+rdx*8+0x10]
   14001d204:	call   QWORD PTR [rip+0x22e6]        # 0x14001f4f0
   14001d20a:	lea    rcx,[rsp+0x200]
   14001d212:	mov    dl,0x2d
   14001d214:	call   QWORD PTR [rip+0x21e6]        # 0x14001f400
   14001d21a:	lea    rcx,[rsp+0x30]
   14001d21f:	mov    r8d,0x1
   14001d225:	movzx  edx,WORD PTR [rax]
   14001d228:	call   QWORD PTR [rip+0x21f2]        # 0x14001f420
   14001d22e:	test   al,al
   14001d230:	je     0x14001d242
   14001d232:	lea    rcx,[rsp+0x30]
   14001d237:	call   QWORD PTR [rip+0x22eb]        # 0x14001f528
   14001d23d:	jmp    0x14001d751
   14001d242:	lea    rdx,[rsp+0x30]
   14001d247:	lea    rcx,[rsp+0xa8]
   14001d24f:	call   QWORD PTR [rip+0x1fe3]        # 0x14001f238
   14001d255:	lea    rcx,[rsp+0xa8]
   14001d25d:	mov    edx,0x11
   14001d262:	call   QWORD PTR [rip+0x1fc8]        # 0x14001f230
   14001d268:	test   al,al
   14001d26a:	je     0x14001daf7
   14001d270:	mov    rcx,QWORD PTR [rip+0x22d1]        # 0x14001f548
   14001d277:	mov    rdx,QWORD PTR [rip+0x22b2]        # 0x14001f530
   14001d27e:	mov    rax,QWORD PTR [rip+0x22b3]        # 0x14001f538
   14001d285:	mov    QWORD PTR [rsp+0x58],rcx
   14001d28a:	mov    QWORD PTR [rsp+0x68],rcx
   14001d28f:	mov    QWORD PTR [rsp+0x160],rcx
   14001d297:	lea    rcx,[rsp+0x170]
   14001d29f:	mov    QWORD PTR [rsp+0x48],rdx
   14001d2a4:	mov    DWORD PTR [rsp+0x50],r15d
   14001d2a9:	mov    BYTE PTR [rsp+0x54],0x1
   14001d2ae:	mov    BYTE PTR [rsp+0x55],0x1
   14001d2b3:	mov    QWORD PTR [rsp+0x60],rdx
   14001d2b8:	mov    QWORD PTR [rsp+0x70],rax
   14001d2bd:	mov    QWORD PTR [rsp+0x78],rax
   14001d2c2:	mov    QWORD PTR [rsp+0x150],rdx
   14001d2ca:	mov    DWORD PTR [rsp+0x158],r15d
   14001d2d2:	mov    BYTE PTR [rsp+0x15c],0x1
   14001d2da:	mov    BYTE PTR [rsp+0x15d],0x1
   14001d2e2:	mov    QWORD PTR [rsp+0x168],rdx
   14001d2ea:	call   QWORD PTR [rip+0x22d0]        # 0x14001f5c0
   14001d2f0:	lea    rcx,[rsp+0x180]
   14001d2f8:	mov    BYTE PTR [rsp+0x178],r15b
   14001d300:	mov    BYTE PTR [rsp+0x179],r15b
   14001d308:	call   QWORD PTR [rip+0x22b2]        # 0x14001f5c0
   14001d30e:	mov    rcx,QWORD PTR [rip+0x222b]        # 0x14001f540
   14001d315:	mov    r11,QWORD PTR [rip+0x222c]        # 0x14001f548
   14001d31c:	mov    rax,QWORD PTR [rip+0x2215]        # 0x14001f538
   14001d323:	mov    QWORD PTR [rsp+0x198],rcx
   14001d32b:	mov    QWORD PTR [rsp+0x1b8],rcx
   14001d333:	lea    rdx,[rip+0x9ad6]        # 0x140026e10
   14001d33a:	lea    rcx,[rsp+0xd0]
   14001d342:	mov    r8d,ebp
   14001d345:	mov    QWORD PTR [rsp+0x188],r11
   14001d34d:	mov    QWORD PTR [rsp+0x190],r11
   14001d355:	mov    QWORD PTR [rsp+0x1a0],r11
   14001d35d:	mov    QWORD PTR [rsp+0x1a8],rax
   14001d365:	mov    QWORD PTR [rsp+0x1b0],rax
   14001d36d:	call   QWORD PTR [rip+0x21dd]        # 0x14001f550
   14001d373:	mov    rax,QWORD PTR [rsp+0xd0]
   14001d37b:	mov    DWORD PTR [rsp+0xd8],r15d
   14001d383:	mov    ecx,DWORD PTR [rax+0x4]
   14001d386:	lea    rdx,[rsp+0xd0]
   14001d38e:	mov    DWORD PTR [rsp+0xdc],ecx
   14001d395:	lea    rcx,[rsp+0x78]
   14001d39a:	call   0x14001cc00
   14001d39f:	lea    rcx,[rsp+0xd0]
   14001d3a7:	call   QWORD PTR [rip+0x220b]        # 0x14001f5b8
   14001d3ad:	lea    rdx,[rip+0x9a4c]        # 0x140026e00
   14001d3b4:	lea    rcx,[rsp+0xc0]
   14001d3bc:	mov    r8d,ebp
   14001d3bf:	call   QWORD PTR [rip+0x218b]        # 0x14001f550
   14001d3c5:	mov    rax,QWORD PTR [rsp+0xc0]
   14001d3cd:	mov    DWORD PTR [rsp+0xc8],r15d
   14001d3d5:	mov    ecx,DWORD PTR [rax+0x4]
   14001d3d8:	lea    rdx,[rsp+0xc0]
   14001d3e0:	mov    DWORD PTR [rsp+0xcc],ecx
   14001d3e7:	lea    rcx,[rsp+0x78]
   14001d3ec:	call   0x14001cc00
   14001d3f1:	lea    rcx,[rsp+0xc0]
   14001d3f9:	call   QWORD PTR [rip+0x21b9]        # 0x14001f5b8
   14001d3ff:	mov    rdx,QWORD PTR [r14]
   14001d402:	lea    rcx,[rsp+0x110]
   14001d40a:	call   QWORD PTR [rip+0x2088]        # 0x14001f498
   14001d410:	lea    rdx,[rsp+0x80]
   14001d418:	mov    rcx,rax
   14001d41b:	call   QWORD PTR [rip+0x206f]        # 0x14001f490
   14001d421:	lea    rcx,[rsp+0x110]
   14001d429:	call   QWORD PTR [rip+0x20f9]        # 0x14001f528
   14001d42f:	lea    rdx,[rsp+0x80]
   14001d437:	lea    rcx,[rsp+0x170]
   14001d43f:	call   QWORD PTR [rip+0x2113]        # 0x14001f558
   14001d445:	lea    rdx,[rsp+0x80]
   14001d44d:	lea    rcx,[rsp+0x168]
   14001d455:	call   0x1400048d0
   14001d45a:	lea    r9,[rsp+0xa8]
   14001d462:	lea    r8,[rsp+0x170]
   14001d46a:	lea    rdx,[rsp+0xb8]
   14001d472:	lea    rcx,[rsp+0x48]
   14001d477:	call   0x1400197d0
   14001d47c:	lea    rcx,[rsp+0x150]
   14001d484:	mov    rdx,rax
   14001d487:	call   0x140011a40
   14001d48c:	mov    rsi,QWORD PTR [rsp+0xb8]
   14001d494:	mov    eax,DWORD PTR [rsi]
   14001d496:	test   eax,eax
   14001d498:	je     0x14001d4b2
   14001d49a:	cmp    eax,0xffffffff
   14001d49d:	je     0x14001d4f8
   14001d49f:	lock add DWORD PTR [rsi],0xffffffff
   14001d4a3:	setne  al
   14001d4a6:	test   al,al
   14001d4a8:	jne    0x14001d4f8
   14001d4aa:	mov    rsi,QWORD PTR [rsp+0xb8]
   14001d4b2:	mov    rdx,QWORD PTR [rsi+0x10]
   14001d4b6:	movsxd rax,DWORD PTR [rsi+0x4]
   14001d4ba:	lea    rcx,[rax+rax*2]
   14001d4be:	lea    rbx,[rdx+rsi*1]
   14001d4c2:	lea    rdi,[rdx+rcx*8]
   14001d4c6:	add    rdi,rsi
   14001d4c9:	cmp    rbx,rdi
   14001d4cc:	je     0x14001d4e6
   14001d4ce:	xchg   ax,ax
   14001d4d0:	mov    rcx,rbx
   14001d4d3:	add    rbx,0x18
   14001d4d7:	add    rcx,0x8
   14001d4db:	call   QWORD PTR [rip+0x20d7]        # 0x14001f5b8
   14001d4e1:	cmp    rbx,rdi
   14001d4e4:	jne    0x14001d4d0
   14001d4e6:	mov    edx,0x18
   14001d4eb:	mov    rcx,rsi
   14001d4ee:	lea    r8d,[rdx-0x10]
   14001d4f2:	call   QWORD PTR [rip+0x2018]        # 0x14001f510
   14001d4f8:	lea    rcx,[rsp+0x150]
   14001d500:	call   0x14000ef30
   14001d505:	mov    r11,QWORD PTR [rsp+0x190]
   14001d50d:	mov    eax,DWORD PTR [r11+0x8]
   14001d511:	cmp    DWORD PTR [r11+0xc],eax
   14001d515:	je     0x14001d816
   14001d51b:	lea    rdx,[rsp+0x190]
   14001d523:	lea    rcx,[rsp+0x28]
   14001d528:	call   0x14001ce50
   14001d52d:	lea    rcx,[rsp+0xa8]
   14001d535:	call   QWORD PTR [rip+0x1e15]        # 0x14001f350
   14001d53b:	lea    rcx,[rsp+0x80]
   14001d543:	call   QWORD PTR [rip+0x206f]        # 0x14001f5b8
   14001d549:	lea    rcx,[rsp+0x150]
   14001d551:	call   0x14001cfa0
   14001d556:	mov    rcx,QWORD PTR [rsp+0x78]
   14001d55b:	mov    eax,DWORD PTR [rcx+0x10]
   14001d55e:	test   eax,eax
   14001d560:	je     0x14001d578
   14001d562:	cmp    eax,0xffffffff
   14001d565:	je     0x14001d585
   14001d567:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001d56c:	setne  al
   14001d56f:	test   al,al
   14001d571:	jne    0x14001d585
   14001d573:	mov    rcx,QWORD PTR [rsp+0x78]
   14001d578:	lea    rdx,[rip+0xffffffffffff6c21]        # 0x1400141a0
   14001d57f:	call   QWORD PTR [rip+0x1f33]        # 0x14001f4b8
   14001d585:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d58a:	mov    eax,DWORD PTR [rcx+0x10]
   14001d58d:	test   eax,eax
   14001d58f:	je     0x14001d5a7
   14001d591:	cmp    eax,0xffffffff
   14001d594:	je     0x14001d5b4
   14001d596:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001d59b:	setne  al
   14001d59e:	test   al,al
   14001d5a0:	jne    0x14001d5b4
   14001d5a2:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d5a7:	lea    rdx,[rip+0xfffffffffffe5372]        # 0x140002920
   14001d5ae:	call   QWORD PTR [rip+0x1f04]        # 0x14001f4b8
   14001d5b4:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d5b9:	mov    eax,DWORD PTR [rdi]
   14001d5bb:	test   eax,eax
   14001d5bd:	je     0x14001d5d4
   14001d5bf:	cmp    eax,0xffffffff
   14001d5c2:	je     0x14001d60b
   14001d5c4:	lock add DWORD PTR [rdi],0xffffffff
   14001d5c8:	setne  al
   14001d5cb:	test   al,al
   14001d5cd:	jne    0x14001d60b
   14001d5cf:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d5d4:	movsxd rax,DWORD PTR [rdi+0xc]
   14001d5d8:	lea    rbx,[rdi+rax*8+0x10]
   14001d5dd:	movsxd rax,DWORD PTR [rdi+0x8]
   14001d5e1:	lea    rsi,[rdi+rax*8+0x10]
   14001d5e6:	cmp    rsi,rbx
   14001d5e9:	je     0x14001d602
   14001d5eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d5f0:	sub    rbx,0x8
   14001d5f4:	mov    rcx,rbx
   14001d5f7:	call   QWORD PTR [rip+0x1fbb]        # 0x14001f5b8
   14001d5fd:	cmp    rbx,rsi
   14001d600:	jne    0x14001d5f0
   14001d602:	mov    rcx,rdi
   14001d605:	call   QWORD PTR [rip+0x1edd]        # 0x14001f4e8
   14001d60b:	mov    rdi,QWORD PTR [rsp+0x60]
   14001d610:	mov    eax,DWORD PTR [rdi]
   14001d612:	test   eax,eax
   14001d614:	je     0x14001d62b
   14001d616:	cmp    eax,0xffffffff
   14001d619:	je     0x14001d666
   14001d61b:	lock add DWORD PTR [rdi],0xffffffff
   14001d61f:	setne  al
   14001d622:	test   al,al
   14001d624:	jne    0x14001d666
   14001d626:	mov    rdi,QWORD PTR [rsp+0x60]
   14001d62b:	mov    rcx,QWORD PTR [rdi+0x10]
   14001d62f:	movsxd rax,DWORD PTR [rdi+0x4]
   14001d633:	lea    rsi,[rcx+rax*8]
   14001d637:	lea    rbx,[rcx+rdi*1]
   14001d63b:	add    rsi,rdi
   14001d63e:	cmp    rbx,rsi
   14001d641:	je     0x14001d655
   14001d643:	mov    rcx,rbx
   14001d646:	add    rbx,0x8
   14001d64a:	call   QWORD PTR [rip+0x1f68]        # 0x14001f5b8
   14001d650:	cmp    rbx,rsi
   14001d653:	jne    0x14001d643
   14001d655:	mov    edx,0x8
   14001d65a:	mov    rcx,rdi
   14001d65d:	mov    r8,rdx
   14001d660:	call   QWORD PTR [rip+0x1eaa]        # 0x14001f510
   14001d666:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d66b:	mov    eax,DWORD PTR [rsi]
   14001d66d:	test   eax,eax
   14001d66f:	je     0x14001d686
   14001d671:	cmp    eax,0xffffffff
   14001d674:	je     0x14001d6cc
   14001d676:	lock add DWORD PTR [rsi],0xffffffff
   14001d67a:	setne  al
   14001d67d:	test   al,al
   14001d67f:	jne    0x14001d6cc
   14001d681:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d686:	movsxd rax,DWORD PTR [rsi+0xc]
   14001d68a:	lea    rbx,[rsi+rax*8+0x10]
   14001d68f:	movsxd rax,DWORD PTR [rsi+0x8]
   14001d693:	lea    r12,[rsi+rax*8+0x10]
   14001d698:	cmp    r12,rbx
   14001d69b:	je     0x14001d6c3
   14001d69d:	nop    DWORD PTR [rax]
   14001d6a0:	mov    rdi,QWORD PTR [rbx-0x8]
   14001d6a4:	sub    rbx,0x8
   14001d6a8:	test   rdi,rdi
   14001d6ab:	je     0x14001d6be
   14001d6ad:	mov    rcx,rdi
   14001d6b0:	call   QWORD PTR [rip+0x1f02]        # 0x14001f5b8
   14001d6b6:	mov    rcx,rdi
   14001d6b9:	call   0x14001e1c0
   14001d6be:	cmp    rbx,r12
   14001d6c1:	jne    0x14001d6a0
   14001d6c3:	mov    rcx,rsi
   14001d6c6:	call   QWORD PTR [rip+0x1e1c]        # 0x14001f4e8
   14001d6cc:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d6d1:	mov    eax,DWORD PTR [rdi]
   14001d6d3:	test   eax,eax
   14001d6d5:	je     0x14001d6ec
   14001d6d7:	cmp    eax,0xffffffff
   14001d6da:	je     0x14001d738
   14001d6dc:	lock add DWORD PTR [rdi],0xffffffff
   14001d6e0:	setne  al
   14001d6e3:	test   al,al
   14001d6e5:	jne    0x14001d738
   14001d6e7:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d6ec:	mov    rdx,QWORD PTR [rdi+0x10]
   14001d6f0:	movsxd rax,DWORD PTR [rdi+0x4]
   14001d6f4:	lea    rcx,[rax+rax*2]
   14001d6f8:	lea    rbx,[rdx+rdi*1]
   14001d6fc:	lea    rsi,[rdx+rcx*8]
   14001d700:	add    rsi,rdi
   14001d703:	cmp    rbx,rsi
   14001d706:	je     0x14001d726
   14001d708:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d710:	mov    rcx,rbx
   14001d713:	add    rbx,0x18
   14001d717:	add    rcx,0x8
   14001d71b:	call   QWORD PTR [rip+0x1e97]        # 0x14001f5b8
   14001d721:	cmp    rbx,rsi
   14001d724:	jne    0x14001d710
   14001d726:	mov    edx,0x18
   14001d72b:	mov    rcx,rdi
   14001d72e:	lea    r8d,[rdx-0x10]
   14001d732:	call   QWORD PTR [rip+0x1dd8]        # 0x14001f510
   14001d738:	lea    rcx,[rsp+0xa8]
   14001d740:	call   QWORD PTR [rip+0x1ada]        # 0x14001f220
   14001d746:	lea    rcx,[rsp+0x30]
   14001d74b:	call   QWORD PTR [rip+0x1dd7]        # 0x14001f528
   14001d751:	mov    rax,QWORD PTR [rsp+0x20]
   14001d756:	inc    r13d
   14001d759:	add    r14,0x8
   14001d75d:	mov    ecx,DWORD PTR [rax+0xc]
   14001d760:	sub    ecx,DWORD PTR [rax+0x8]
   14001d763:	cmp    r13d,ecx
   14001d766:	jl     0x14001d1f0
   14001d76c:	mov    rbx,QWORD PTR [rsp+0x28]
   14001d771:	lea    rcx,[rsp+0x38]
   14001d776:	call   QWORD PTR [rip+0x1d0c]        # 0x14001f488
   14001d77c:	mov    r11,QWORD PTR [rip+0xd91d]        # 0x14002b0a0
   14001d783:	cmp    DWORD PTR [r11+0x4],r15d
   14001d787:	jne    0x14001dc87
   14001d78d:	mov    DWORD PTR [rsp+0x210],r15d
   14001d795:	mov    DWORD PTR [rsp+0x218],0x2
   14001d7a0:	call   QWORD PTR [rip+0x1982]        # 0x14001f128
   14001d7a6:	lea    rcx,[rsp+0x38]
   14001d7ab:	lea    rdx,[rax+0x30]
   14001d7af:	mov    r9d,r15d
   14001d7b2:	mov    r8d,0x2
   14001d7b8:	call   QWORD PTR [rip+0x1cc2]        # 0x14001f480
   14001d7be:	lea    rdx,[rip+0x8f6b]        # 0x140026730
   14001d7c5:	lea    rcx,[rsp+0x38]
   14001d7ca:	call   QWORD PTR [rip+0x1ca8]        # 0x14001f478
   14001d7d0:	lea    rdx,[rip+0x9621]        # 0x140026df8
   14001d7d7:	lea    rcx,[rsp+0x38]
   14001d7dc:	call   QWORD PTR [rip+0x1c96]        # 0x14001f478
   14001d7e2:	mov    QWORD PTR [rsp+0x88],rbx
   14001d7ea:	mov    eax,DWORD PTR [rbx]
   14001d7ec:	mov    r11,rbx
   14001d7ef:	test   eax,eax
   14001d7f1:	je     0x14001de45
   14001d7f7:	cmp    eax,0xffffffff
   14001d7fa:	je     0x14001deb7
   14001d800:	lock add DWORD PTR [rbx],0x1
   14001d804:	mov    rbx,QWORD PTR [rsp+0x28]
   14001d809:	mov    r11,QWORD PTR [rsp+0x88]
   14001d811:	jmp    0x14001deb7
   14001d816:	lea    rcx,[rsp+0x80]
   14001d81e:	call   QWORD PTR [rip+0x1d94]        # 0x14001f5b8
   14001d824:	lea    rcx,[rsp+0x150]
   14001d82c:	call   0x14001cfa0
   14001d831:	mov    rcx,QWORD PTR [rsp+0x78]
   14001d836:	mov    eax,DWORD PTR [rcx+0x10]
   14001d839:	test   eax,eax
   14001d83b:	je     0x14001d853
   14001d83d:	cmp    eax,0xffffffff
   14001d840:	je     0x14001d860
   14001d842:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001d847:	setne  al
   14001d84a:	test   al,al
   14001d84c:	jne    0x14001d860
   14001d84e:	mov    rcx,QWORD PTR [rsp+0x78]
   14001d853:	lea    rdx,[rip+0xffffffffffff6946]        # 0x1400141a0
   14001d85a:	call   QWORD PTR [rip+0x1c58]        # 0x14001f4b8
   14001d860:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d865:	mov    eax,DWORD PTR [rcx+0x10]
   14001d868:	test   eax,eax
   14001d86a:	je     0x14001d882
   14001d86c:	cmp    eax,0xffffffff
   14001d86f:	je     0x14001d88f
   14001d871:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14001d876:	setne  al
   14001d879:	test   al,al
   14001d87b:	jne    0x14001d88f
   14001d87d:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d882:	lea    rdx,[rip+0xfffffffffffe5097]        # 0x140002920
   14001d889:	call   QWORD PTR [rip+0x1c29]        # 0x14001f4b8
   14001d88f:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d894:	mov    eax,DWORD PTR [rdi]
   14001d896:	test   eax,eax
   14001d898:	je     0x14001d8af
   14001d89a:	cmp    eax,0xffffffff
   14001d89d:	je     0x14001d8eb
   14001d89f:	lock add DWORD PTR [rdi],0xffffffff
   14001d8a3:	setne  al
   14001d8a6:	test   al,al
   14001d8a8:	jne    0x14001d8eb
   14001d8aa:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d8af:	movsxd rax,DWORD PTR [rdi+0xc]
   14001d8b3:	lea    rbx,[rdi+rax*8+0x10]
   14001d8b8:	movsxd rax,DWORD PTR [rdi+0x8]
   14001d8bc:	lea    rsi,[rdi+rax*8+0x10]
   14001d8c1:	cmp    rsi,rbx
   14001d8c4:	je     0x14001d8e2
   14001d8c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001d8d0:	sub    rbx,0x8
   14001d8d4:	mov    rcx,rbx
   14001d8d7:	call   QWORD PTR [rip+0x1cdb]        # 0x14001f5b8
   14001d8dd:	cmp    rbx,rsi
   14001d8e0:	jne    0x14001d8d0
   14001d8e2:	mov    rcx,rdi
   14001d8e5:	call   QWORD PTR [rip+0x1bfd]        # 0x14001f4e8
   14001d8eb:	mov    rdi,QWORD PTR [rsp+0x60]
   14001d8f0:	mov    eax,DWORD PTR [rdi]
   14001d8f2:	test   eax,eax
   14001d8f4:	je     0x14001d90b
   14001d8f6:	cmp    eax,0xffffffff
   14001d8f9:	je     0x14001d946
   14001d8fb:	lock add DWORD PTR [rdi],0xffffffff
   14001d8ff:	setne  al
   14001d902:	test   al,al
   14001d904:	jne    0x14001d946
   14001d906:	mov    rdi,QWORD PTR [rsp+0x60]
   14001d90b:	mov    rcx,QWORD PTR [rdi+0x10]
   14001d90f:	movsxd rax,DWORD PTR [rdi+0x4]
   14001d913:	lea    rsi,[rcx+rax*8]
   14001d917:	lea    rbx,[rcx+rdi*1]
   14001d91b:	add    rsi,rdi
   14001d91e:	cmp    rbx,rsi
   14001d921:	je     0x14001d935
   14001d923:	mov    rcx,rbx
   14001d926:	add    rbx,0x8
   14001d92a:	call   QWORD PTR [rip+0x1c88]        # 0x14001f5b8
   14001d930:	cmp    rbx,rsi
   14001d933:	jne    0x14001d923
   14001d935:	mov    edx,0x8
   14001d93a:	mov    rcx,rdi
   14001d93d:	mov    r8,rdx
   14001d940:	call   QWORD PTR [rip+0x1bca]        # 0x14001f510
   14001d946:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d94b:	mov    eax,DWORD PTR [rsi]
   14001d94d:	test   eax,eax
   14001d94f:	je     0x14001d966
   14001d951:	cmp    eax,0xffffffff
   14001d954:	je     0x14001d9ac
   14001d956:	lock add DWORD PTR [rsi],0xffffffff
   14001d95a:	setne  al
   14001d95d:	test   al,al
   14001d95f:	jne    0x14001d9ac
   14001d961:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d966:	movsxd rax,DWORD PTR [rsi+0xc]
   14001d96a:	lea    rbx,[rsi+rax*8+0x10]
   14001d96f:	movsxd rax,DWORD PTR [rsi+0x8]
   14001d973:	lea    r12,[rsi+rax*8+0x10]
   14001d978:	cmp    r12,rbx
   14001d97b:	je     0x14001d9a3
   14001d97d:	nop    DWORD PTR [rax]
   14001d980:	mov    rdi,QWORD PTR [rbx-0x8]
   14001d984:	sub    rbx,0x8
   14001d988:	test   rdi,rdi
   14001d98b:	je     0x14001d99e
   14001d98d:	mov    rcx,rdi
   14001d990:	call   QWORD PTR [rip+0x1c22]        # 0x14001f5b8
   14001d996:	mov    rcx,rdi
   14001d999:	call   0x14001e1c0
   14001d99e:	cmp    rbx,r12
   14001d9a1:	jne    0x14001d980
   14001d9a3:	mov    rcx,rsi
   14001d9a6:	call   QWORD PTR [rip+0x1b3c]        # 0x14001f4e8
   14001d9ac:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d9b1:	mov    eax,DWORD PTR [rdi]
   14001d9b3:	test   eax,eax
   14001d9b5:	je     0x14001d9cc
   14001d9b7:	cmp    eax,0xffffffff
   14001d9ba:	je     0x14001da18
   14001d9bc:	lock add DWORD PTR [rdi],0xffffffff
   14001d9c0:	setne  al
   14001d9c3:	test   al,al
   14001d9c5:	jne    0x14001da18
   14001d9c7:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d9cc:	mov    rdx,QWORD PTR [rdi+0x10]
   14001d9d0:	movsxd rax,DWORD PTR [rdi+0x4]
   14001d9d4:	lea    rcx,[rax+rax*2]
   14001d9d8:	lea    rbx,[rdx+rdi*1]
   14001d9dc:	lea    rsi,[rdx+rcx*8]
   14001d9e0:	add    rsi,rdi
   14001d9e3:	cmp    rbx,rsi
   14001d9e6:	je     0x14001da06
   14001d9e8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001d9f0:	mov    rcx,rbx
   14001d9f3:	add    rbx,0x18
   14001d9f7:	add    rcx,0x8
   14001d9fb:	call   QWORD PTR [rip+0x1bb7]        # 0x14001f5b8
   14001da01:	cmp    rbx,rsi
   14001da04:	jne    0x14001d9f0
   14001da06:	mov    edx,0x18
   14001da0b:	mov    rcx,rdi
   14001da0e:	lea    r8d,[rdx-0x10]
   14001da12:	call   QWORD PTR [rip+0x1af8]        # 0x14001f510
   14001da18:	lea    rcx,[rsp+0xa8]
   14001da20:	call   QWORD PTR [rip+0x17fa]        # 0x14001f220
   14001da26:	lea    rcx,[rsp+0x30]
   14001da2b:	call   QWORD PTR [rip+0x1af7]        # 0x14001f528
   14001da31:	mov    rbx,QWORD PTR [rsp+0x28]
   14001da36:	mov    eax,DWORD PTR [rbx]
   14001da38:	test   eax,eax
   14001da3a:	je     0x14001da51
   14001da3c:	cmp    eax,0xffffffff
   14001da3f:	je     0x14001da9b
   14001da41:	lock add DWORD PTR [rbx],0xffffffff
   14001da45:	setne  al
   14001da48:	test   al,al
   14001da4a:	jne    0x14001da9b
   14001da4c:	mov    rbx,QWORD PTR [rsp+0x28]
   14001da51:	movsxd rax,DWORD PTR [rbx+0xc]
   14001da55:	lea    rdi,[rbx+rax*8+0x10]
   14001da5a:	movsxd rax,DWORD PTR [rbx+0x8]
   14001da5e:	lea    r12,[rbx+rax*8+0x10]
   14001da63:	cmp    r12,rdi
   14001da66:	je     0x14001da92
   14001da68:	nop    DWORD PTR [rax+rax*1+0x0]
   14001da70:	mov    rsi,QWORD PTR [rdi-0x8]
   14001da74:	sub    rdi,0x8
   14001da78:	test   rsi,rsi
   14001da7b:	je     0x14001da8d
   14001da7d:	mov    rcx,rsi
   14001da80:	call   0x1400089c0
   14001da85:	mov    rcx,rsi
   14001da88:	call   0x14001e1c0
   14001da8d:	cmp    rdi,r12
   14001da90:	jne    0x14001da70
   14001da92:	mov    rcx,rbx
   14001da95:	call   QWORD PTR [rip+0x1a4d]        # 0x14001f4e8
   14001da9b:	mov    rdi,QWORD PTR [rsp+0x20]
   14001daa0:	mov    eax,DWORD PTR [rdi]
   14001daa2:	test   eax,eax
   14001daa4:	je     0x14001dac3
   14001daa6:	cmp    eax,0xffffffff
   14001daa9:	je     0x14001e0cd
   14001daaf:	lock add DWORD PTR [rdi],0xffffffff
   14001dab3:	setne  al
   14001dab6:	test   al,al
   14001dab8:	jne    0x14001e0cd
   14001dabe:	mov    rdi,QWORD PTR [rsp+0x20]
   14001dac3:	movsxd rax,DWORD PTR [rdi+0xc]
   14001dac7:	lea    rbx,[rdi+rax*8+0x10]
   14001dacc:	movsxd rax,DWORD PTR [rdi+0x8]
   14001dad0:	lea    rsi,[rdi+rax*8+0x10]
   14001dad5:	cmp    rsi,rbx
   14001dad8:	je     0x14001e0c4
   14001dade:	xchg   ax,ax
   14001dae0:	sub    rbx,0x8
   14001dae4:	mov    rcx,rbx
   14001dae7:	call   QWORD PTR [rip+0x1a3b]        # 0x14001f528
   14001daed:	cmp    rbx,rsi
   14001daf0:	jne    0x14001dae0
   14001daf2:	jmp    0x14001e0c4
   14001daf7:	lea    rdx,[rsp+0xf8]
   14001daff:	lea    rcx,[rsp+0xa8]
   14001db07:	call   QWORD PTR [rip+0x1963]        # 0x14001f470
   14001db0d:	lea    rdx,[rsp+0xe8]
   14001db15:	mov    rcx,rax
   14001db18:	call   QWORD PTR [rip+0x183a]        # 0x14001f358
   14001db1e:	mov    rcx,rax
   14001db21:	call   QWORD PTR [rip+0x1ad1]        # 0x14001f5f8
   14001db27:	lea    rdx,[rsp+0x30]
   14001db2c:	lea    rcx,[rsp+0x130]
   14001db34:	mov    rdi,rax
   14001db37:	call   QWORD PTR [rip+0x19b3]        # 0x14001f4f0
   14001db3d:	lea    rdx,[rsp+0x120]
   14001db45:	mov    rcx,rax
   14001db48:	call   QWORD PTR [rip+0x180a]        # 0x14001f358
   14001db4e:	mov    rcx,rax
   14001db51:	call   QWORD PTR [rip+0x1aa1]        # 0x14001f5f8
   14001db57:	mov    rbx,rax
   14001db5a:	call   QWORD PTR [rip+0x15c8]        # 0x14001f128
   14001db60:	lea    rdx,[rip+0x9269]        # 0x140026dd0
   14001db67:	lea    rcx,[rax+0x60]
   14001db6b:	mov    r9,rdi
   14001db6e:	mov    r8,rbx
   14001db71:	call   QWORD PTR [rip+0x15e1]        # 0x14001f158
   14001db77:	lea    rcx,[rsp+0x120]
   14001db7f:	call   QWORD PTR [rip+0x1a33]        # 0x14001f5b8
   14001db85:	lea    rcx,[rsp+0x130]
   14001db8d:	call   QWORD PTR [rip+0x1995]        # 0x14001f528
   14001db93:	lea    rcx,[rsp+0xe8]
   14001db9b:	call   QWORD PTR [rip+0x1a17]        # 0x14001f5b8
   14001dba1:	lea    rcx,[rsp+0xf8]
   14001dba9:	call   QWORD PTR [rip+0x1979]        # 0x14001f528
   14001dbaf:	lea    rcx,[rsp+0xa8]
   14001dbb7:	call   QWORD PTR [rip+0x1663]        # 0x14001f220
   14001dbbd:	lea    rcx,[rsp+0x30]
   14001dbc2:	call   QWORD PTR [rip+0x1960]        # 0x14001f528
   14001dbc8:	mov    rbx,QWORD PTR [rsp+0x28]
   14001dbcd:	mov    eax,DWORD PTR [rbx]
   14001dbcf:	test   eax,eax
   14001dbd1:	je     0x14001dbe8
   14001dbd3:	cmp    eax,0xffffffff
   14001dbd6:	je     0x14001dc2b
   14001dbd8:	lock add DWORD PTR [rbx],0xffffffff
   14001dbdc:	setne  al
   14001dbdf:	test   al,al
   14001dbe1:	jne    0x14001dc2b
   14001dbe3:	mov    rbx,QWORD PTR [rsp+0x28]
   14001dbe8:	movsxd rax,DWORD PTR [rbx+0xc]
   14001dbec:	lea    rdi,[rbx+rax*8+0x10]
   14001dbf1:	movsxd rax,DWORD PTR [rbx+0x8]
   14001dbf5:	lea    r12,[rbx+rax*8+0x10]
   14001dbfa:	cmp    r12,rdi
   14001dbfd:	je     0x14001dc22
   14001dbff:	nop
   14001dc00:	mov    rsi,QWORD PTR [rdi-0x8]
   14001dc04:	sub    rdi,0x8
   14001dc08:	test   rsi,rsi
   14001dc0b:	je     0x14001dc1d
   14001dc0d:	mov    rcx,rsi
   14001dc10:	call   0x1400089c0
   14001dc15:	mov    rcx,rsi
   14001dc18:	call   0x14001e1c0
   14001dc1d:	cmp    rdi,r12
   14001dc20:	jne    0x14001dc00
   14001dc22:	mov    rcx,rbx
   14001dc25:	call   QWORD PTR [rip+0x18bd]        # 0x14001f4e8
   14001dc2b:	mov    rdi,QWORD PTR [rsp+0x20]
   14001dc30:	mov    eax,DWORD PTR [rdi]
   14001dc32:	test   eax,eax
   14001dc34:	je     0x14001dc4b
   14001dc36:	cmp    eax,0xffffffff
   14001dc39:	je     0x14001dc7d
   14001dc3b:	lock add DWORD PTR [rdi],0xffffffff
   14001dc3f:	setne  al
   14001dc42:	test   al,al
   14001dc44:	jne    0x14001dc7d
   14001dc46:	mov    rdi,QWORD PTR [rsp+0x20]
   14001dc4b:	movsxd rax,DWORD PTR [rdi+0xc]
   14001dc4f:	lea    rbx,[rdi+rax*8+0x10]
   14001dc54:	movsxd rax,DWORD PTR [rdi+0x8]
   14001dc58:	lea    rsi,[rdi+rax*8+0x10]
   14001dc5d:	cmp    rsi,rbx
   14001dc60:	je     0x14001dc74
   14001dc62:	sub    rbx,0x8
   14001dc66:	mov    rcx,rbx
   14001dc69:	call   QWORD PTR [rip+0x18b9]        # 0x14001f528
   14001dc6f:	cmp    rbx,rsi
   14001dc72:	jne    0x14001dc62
   14001dc74:	mov    rcx,rdi
   14001dc77:	call   QWORD PTR [rip+0x186b]        # 0x14001f4e8
   14001dc7d:	mov    eax,0x1
   14001dc82:	jmp    0x14001e0cf
   14001dc87:	lea    rdx,[rip+0xd412]        # 0x14002b0a0
   14001dc8e:	lea    rcx,[rsp+0x38]
   14001dc93:	call   QWORD PTR [rip+0x17cf]        # 0x14001f468
   14001dc99:	lea    rcx,[rsp+0x38]
   14001dc9e:	mov    edx,0x2
   14001dca3:	mov    DWORD PTR [rsp+0x140],0x2
   14001dcae:	call   QWORD PTR [rip+0x157c]        # 0x14001f230
   14001dcb4:	test   al,al
   14001dcb6:	jne    0x14001d7be
   14001dcbc:	lea    rdx,[rsp+0x118]
   14001dcc4:	lea    rcx,[rsp+0x38]
   14001dcc9:	call   QWORD PTR [rip+0x17a1]        # 0x14001f470
   14001dccf:	lea    rdx,[rsp+0x148]
   14001dcd7:	mov    rcx,rax
   14001dcda:	call   QWORD PTR [rip+0x1678]        # 0x14001f358
   14001dce0:	mov    rcx,rax
   14001dce3:	call   QWORD PTR [rip+0x190f]        # 0x14001f5f8
   14001dce9:	lea    rdx,[rip+0xd3b0]        # 0x14002b0a0
   14001dcf0:	lea    rcx,[rsp+0x108]
   14001dcf8:	mov    rsi,rax
   14001dcfb:	call   QWORD PTR [rip+0x17ef]        # 0x14001f4f0
   14001dd01:	lea    rdx,[rsp+0x128]
   14001dd09:	mov    rcx,rax
   14001dd0c:	call   QWORD PTR [rip+0x1646]        # 0x14001f358
   14001dd12:	mov    rcx,rax
   14001dd15:	call   QWORD PTR [rip+0x18dd]        # 0x14001f5f8
   14001dd1b:	mov    rdi,rax
   14001dd1e:	call   QWORD PTR [rip+0x1404]        # 0x14001f128
   14001dd24:	lea    rdx,[rip+0x906d]        # 0x140026d98
   14001dd2b:	lea    rcx,[rax+0x60]
   14001dd2f:	mov    r9,rsi
   14001dd32:	mov    r8,rdi
   14001dd35:	call   QWORD PTR [rip+0x141d]        # 0x14001f158
   14001dd3b:	lea    rcx,[rsp+0x128]
   14001dd43:	call   QWORD PTR [rip+0x186f]        # 0x14001f5b8
   14001dd49:	lea    rcx,[rsp+0x108]
   14001dd51:	call   QWORD PTR [rip+0x17d1]        # 0x14001f528
   14001dd57:	lea    rcx,[rsp+0x148]
   14001dd5f:	call   QWORD PTR [rip+0x1853]        # 0x14001f5b8
   14001dd65:	lea    rcx,[rsp+0x118]
   14001dd6d:	call   QWORD PTR [rip+0x17b5]        # 0x14001f528
   14001dd73:	lea    rcx,[rsp+0x38]
   14001dd78:	call   QWORD PTR [rip+0x14a2]        # 0x14001f220
   14001dd7e:	mov    r11d,DWORD PTR [rbx]
   14001dd81:	test   r11d,r11d
   14001dd84:	je     0x14001dd9c
   14001dd86:	cmp    r11d,0xffffffff
   14001dd8a:	je     0x14001ddde
   14001dd8c:	lock add DWORD PTR [rbx],0xffffffff
   14001dd90:	setne  al
   14001dd93:	test   al,al
   14001dd95:	jne    0x14001ddde
   14001dd97:	mov    rbx,QWORD PTR [rsp+0x28]
   14001dd9c:	movsxd rax,DWORD PTR [rbx+0xc]
   14001dda0:	lea    rdi,[rbx+rax*8+0x10]
   14001dda5:	movsxd rax,DWORD PTR [rbx+0x8]
   14001dda9:	lea    r12,[rbx+rax*8+0x10]
   14001ddae:	cmp    r12,rdi
   14001ddb1:	je     0x14001ddd5
   14001ddb3:	mov    rsi,QWORD PTR [rdi-0x8]
   14001ddb7:	sub    rdi,0x8
   14001ddbb:	test   rsi,rsi
   14001ddbe:	je     0x14001ddd0
   14001ddc0:	mov    rcx,rsi
   14001ddc3:	call   0x1400089c0
   14001ddc8:	mov    rcx,rsi
   14001ddcb:	call   0x14001e1c0
   14001ddd0:	cmp    rdi,r12
   14001ddd3:	jne    0x14001ddb3
   14001ddd5:	mov    rcx,rbx
   14001ddd8:	call   QWORD PTR [rip+0x170a]        # 0x14001f4e8
   14001ddde:	mov    rdi,QWORD PTR [rsp+0x20]
   14001dde3:	mov    eax,DWORD PTR [rdi]
   14001dde5:	test   eax,eax
   14001dde7:	je     0x14001ddfe
   14001dde9:	cmp    eax,0xffffffff
   14001ddec:	je     0x14001de3b
   14001ddee:	lock add DWORD PTR [rdi],0xffffffff
   14001ddf2:	setne  al
   14001ddf5:	test   al,al
   14001ddf7:	jne    0x14001de3b
   14001ddf9:	mov    rdi,QWORD PTR [rsp+0x20]
   14001ddfe:	movsxd rax,DWORD PTR [rdi+0xc]
   14001de02:	lea    rbx,[rdi+rax*8+0x10]
   14001de07:	movsxd rax,DWORD PTR [rdi+0x8]
   14001de0b:	lea    rsi,[rdi+rax*8+0x10]
   14001de10:	cmp    rsi,rbx
   14001de13:	je     0x14001de32
   14001de15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001de20:	sub    rbx,0x8
   14001de24:	mov    rcx,rbx
   14001de27:	call   QWORD PTR [rip+0x16fb]        # 0x14001f528
   14001de2d:	cmp    rbx,rsi
   14001de30:	jne    0x14001de20
   14001de32:	mov    rcx,rdi
   14001de35:	call   QWORD PTR [rip+0x16ad]        # 0x14001f4e8
   14001de3b:	mov    eax,0x1
   14001de40:	jmp    0x14001e0cf
   14001de45:	mov    edx,DWORD PTR [rbx+0x4]
   14001de48:	lea    rcx,[rsp+0x88]
   14001de50:	call   QWORD PTR [rip+0x165a]        # 0x14001f4b0
   14001de56:	mov    r11,QWORD PTR [rsp+0x88]
   14001de5e:	movsxd rax,DWORD PTR [r11+0xc]
   14001de62:	lea    r12,[r11+rax*8+0x10]
   14001de67:	movsxd rax,DWORD PTR [rbx+0x8]
   14001de6b:	lea    rsi,[rbx+rax*8+0x10]
   14001de70:	movsxd rax,DWORD PTR [r11+0x8]
   14001de74:	lea    rdi,[r11+rax*8+0x10]
   14001de79:	cmp    rdi,r12
   14001de7c:	je     0x14001deb7
   14001de7e:	xchg   ax,ax
   14001de80:	mov    ecx,0xa8
   14001de85:	call   0x14001e1c6
   14001de8a:	test   rax,rax
   14001de8d:	je     0x14001de9c
   14001de8f:	mov    rdx,QWORD PTR [rsi]
   14001de92:	mov    rcx,rax
   14001de95:	call   0x140008750
   14001de9a:	jmp    0x14001de9f
   14001de9c:	mov    rax,r15
   14001de9f:	mov    QWORD PTR [rdi],rax
   14001dea2:	add    rdi,0x8
   14001dea6:	add    rsi,0x8
   14001deaa:	cmp    rdi,r12
   14001dead:	jne    0x14001de80
   14001deaf:	mov    r11,QWORD PTR [rsp+0x88]
   14001deb7:	mov    DWORD PTR [rsp+0x90],r15d
   14001debf:	movsxd rax,DWORD PTR [r11+0x8]
   14001dec3:	lea    rcx,[r11+rax*8+0x10]
   14001dec8:	mov    QWORD PTR [rsp+0x98],rcx
   14001ded0:	movsxd rax,DWORD PTR [r11+0xc]
   14001ded4:	lea    rdx,[r11+rax*8+0x10]
   14001ded9:	mov    QWORD PTR [rsp+0xa0],rdx
   14001dee1:	mov    eax,0x1
   14001dee6:	mov    DWORD PTR [rsp+0x90],eax
   14001deed:	cmp    rcx,rdx
   14001def0:	je     0x14001df87
   14001def6:	mov    rdi,QWORD PTR [rcx]
   14001def9:	nop    DWORD PTR [rax+0x0]
   14001df00:	test   eax,eax
   14001df02:	je     0x14001df66
   14001df04:	lea    rcx,[rsp+0xe0]
   14001df0c:	mov    rdx,rdi
   14001df0f:	call   0x14001c920
   14001df14:	lea    rdx,[rsp+0x138]
   14001df1c:	lea    rcx,[rsp+0xe0]
   14001df24:	call   QWORD PTR [rip+0x142e]        # 0x14001f358
   14001df2a:	lea    rcx,[rsp+0x38]
   14001df2f:	mov    rdx,rax
   14001df32:	call   QWORD PTR [rip+0x1528]        # 0x14001f460
   14001df38:	lea    rcx,[rsp+0x138]
   14001df40:	call   QWORD PTR [rip+0x1672]        # 0x14001f5b8
   14001df46:	lea    rcx,[rsp+0xe0]
   14001df4e:	call   QWORD PTR [rip+0x15d4]        # 0x14001f528
   14001df54:	mov    eax,DWORD PTR [rsp+0x90]
   14001df5b:	dec    eax
   14001df5d:	mov    DWORD PTR [rsp+0x90],eax
   14001df64:	jmp    0x14001df00
   14001df66:	mov    rcx,QWORD PTR [rsp+0x98]
   14001df6e:	mov    rdx,QWORD PTR [rsp+0xa0]
   14001df76:	add    rcx,0x8
   14001df7a:	mov    QWORD PTR [rsp+0x98],rcx
   14001df82:	jmp    0x14001dee1
   14001df87:	mov    r12,QWORD PTR [rsp+0x88]
   14001df8f:	mov    eax,DWORD PTR [r12]
   14001df93:	test   eax,eax
   14001df95:	je     0x14001dfba
   14001df97:	cmp    eax,0xffffffff
   14001df9a:	je     0x14001dffe
   14001df9c:	lock add DWORD PTR [r12],0xffffffff
   14001dfa2:	setne  al
   14001dfa5:	test   al,al
   14001dfa7:	jne    0x14001e0f0
   14001dfad:	mov    rbx,QWORD PTR [rsp+0x28]
   14001dfb2:	mov    r12,QWORD PTR [rsp+0x88]
   14001dfba:	movsxd rax,DWORD PTR [r12+0xc]
   14001dfbf:	lea    rdi,[r12+rax*8+0x10]
   14001dfc4:	movsxd rax,DWORD PTR [r12+0x8]
   14001dfc9:	lea    r13,[r12+rax*8+0x10]
   14001dfce:	cmp    r13,rdi
   14001dfd1:	je     0x14001dff5
   14001dfd3:	mov    rsi,QWORD PTR [rdi-0x8]
   14001dfd7:	sub    rdi,0x8
   14001dfdb:	test   rsi,rsi
   14001dfde:	je     0x14001dff0
   14001dfe0:	mov    rcx,rsi
   14001dfe3:	call   0x1400089c0
   14001dfe8:	mov    rcx,rsi
   14001dfeb:	call   0x14001e1c0
   14001dff0:	cmp    rdi,r13
   14001dff3:	jne    0x14001dfd3
   14001dff5:	mov    rcx,r12
   14001dff8:	call   QWORD PTR [rip+0x14ea]        # 0x14001f4e8
   14001dffe:	lea    rdx,[rip+0x8d83]        # 0x140026d88
   14001e005:	lea    rcx,[rsp+0x38]
   14001e00a:	call   QWORD PTR [rip+0x1468]        # 0x14001f478
   14001e010:	lea    rcx,[rsp+0x38]
   14001e015:	call   QWORD PTR [rip+0x1205]        # 0x14001f220
   14001e01b:	mov    r11d,DWORD PTR [rbx]
   14001e01e:	test   r11d,r11d
   14001e021:	je     0x14001e039
   14001e023:	cmp    r11d,0xffffffff
   14001e027:	je     0x14001e07b
   14001e029:	lock add DWORD PTR [rbx],0xffffffff
   14001e02d:	setne  al
   14001e030:	test   al,al
   14001e032:	jne    0x14001e07b
   14001e034:	mov    rbx,QWORD PTR [rsp+0x28]
   14001e039:	movsxd rax,DWORD PTR [rbx+0xc]
   14001e03d:	lea    rdi,[rbx+rax*8+0x10]
   14001e042:	movsxd rax,DWORD PTR [rbx+0x8]
   14001e046:	lea    r12,[rbx+rax*8+0x10]
   14001e04b:	cmp    r12,rdi
   14001e04e:	je     0x14001e072
   14001e050:	mov    rsi,QWORD PTR [rdi-0x8]
   14001e054:	sub    rdi,0x8
   14001e058:	test   rsi,rsi
   14001e05b:	je     0x14001e06d
   14001e05d:	mov    rcx,rsi
   14001e060:	call   0x1400089c0
   14001e065:	mov    rcx,rsi
   14001e068:	call   0x14001e1c0
   14001e06d:	cmp    rdi,r12
   14001e070:	jne    0x14001e050
   14001e072:	mov    rcx,rbx
   14001e075:	call   QWORD PTR [rip+0x146d]        # 0x14001f4e8
   14001e07b:	mov    rdi,QWORD PTR [rsp+0x20]
   14001e080:	mov    eax,DWORD PTR [rdi]
   14001e082:	test   eax,eax
   14001e084:	je     0x14001e09b
   14001e086:	cmp    eax,0xffffffff
   14001e089:	je     0x14001e0cd
   14001e08b:	lock add DWORD PTR [rdi],0xffffffff
   14001e08f:	setne  al
   14001e092:	test   al,al
   14001e094:	jne    0x14001e0cd
   14001e096:	mov    rdi,QWORD PTR [rsp+0x20]
   14001e09b:	movsxd rax,DWORD PTR [rdi+0xc]
   14001e09f:	lea    rbx,[rdi+rax*8+0x10]
   14001e0a4:	movsxd rax,DWORD PTR [rdi+0x8]
   14001e0a8:	lea    rsi,[rdi+rax*8+0x10]
   14001e0ad:	cmp    rsi,rbx
   14001e0b0:	je     0x14001e0c4
   14001e0b2:	sub    rbx,0x8
   14001e0b6:	mov    rcx,rbx
   14001e0b9:	call   QWORD PTR [rip+0x1469]        # 0x14001f528
   14001e0bf:	cmp    rbx,rsi
   14001e0c2:	jne    0x14001e0b2
   14001e0c4:	mov    rcx,rdi
   14001e0c7:	call   QWORD PTR [rip+0x141b]        # 0x14001f4e8
   14001e0cd:	xor    eax,eax
   14001e0cf:	mov    r12,QWORD PTR [rsp+0x1c0]
   14001e0d7:	mov    rsi,QWORD PTR [rsp+0x208]
   14001e0df:	add    rsp,0x1c8
   14001e0e6:	pop    r15
   14001e0e8:	pop    r14
   14001e0ea:	pop    r13
   14001e0ec:	pop    rdi
   14001e0ed:	pop    rbp
   14001e0ee:	pop    rbx
   14001e0ef:	ret    
   14001e0f0:	mov    rbx,QWORD PTR [rsp+0x28]
   14001e0f5:	jmp    0x14001dffe
   14001e0fa:	int3   
   14001e0fb:	int3   
   14001e0fc:	jmp    0x14001e1c6
   14001e101:	int3   
   14001e102:	jmp    QWORD PTR [rip+0x1080]        # 0x14001f188
   14001e108:	rex push rbx
   14001e10a:	sub    rsp,0x20
   14001e10e:	mov    r11d,DWORD PTR [r8]
   14001e111:	mov    rbx,rdx
   14001e114:	mov    r9,rcx
   14001e117:	and    r11d,0xfffffff8
   14001e11b:	test   BYTE PTR [r8],0x4
   14001e11f:	mov    r10,rcx
   14001e122:	je     0x14001e137
   14001e124:	mov    eax,DWORD PTR [r8+0x8]
   14001e128:	movsxd r10,DWORD PTR [r8+0x4]
   14001e12c:	neg    eax
   14001e12e:	add    r10,rcx
   14001e131:	movsxd rcx,eax
   14001e134:	and    r10,rcx
   14001e137:	movsxd rax,r11d
   14001e13a:	mov    rdx,QWORD PTR [rax+r10*1]
   14001e13e:	mov    rax,QWORD PTR [rbx+0x10]
   14001e142:	mov    ecx,DWORD PTR [rax+0x8]
   14001e145:	add    rcx,QWORD PTR [rbx+0x8]
   14001e149:	test   BYTE PTR [rcx+0x3],0xf
   14001e14d:	je     0x14001e15b
   14001e14f:	movzx  eax,BYTE PTR [rcx+0x3]
   14001e153:	and    eax,0xfffffff0
   14001e156:	cdqe   
   14001e158:	add    r9,rax
   14001e15b:	xor    r9,rdx
   14001e15e:	mov    rcx,r9
   14001e161:	add    rsp,0x20
   14001e165:	pop    rbx
   14001e166:	jmp    0x14001e1a0
   14001e16b:	int3   
   14001e16c:	sub    rsp,0x28
   14001e170:	mov    r8,QWORD PTR [r9+0x38]
   14001e174:	mov    rcx,rdx
   14001e177:	mov    rdx,r9
   14001e17a:	call   0x14001e108
   14001e17f:	mov    eax,0x1
   14001e184:	add    rsp,0x28
   14001e188:	ret    
   14001e189:	int3   
   14001e18a:	jmp    QWORD PTR [rip+0xfe8]        # 0x14001f178
   14001e190:	int3   
   14001e191:	int3   
   14001e192:	int3   
   14001e193:	int3   
   14001e194:	int3   
   14001e195:	int3   
   14001e196:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001e1a0:	cmp    rcx,QWORD PTR [rip+0xceb1]        # 0x14002b058
   14001e1a7:	jne    0x14001e1ba
   14001e1a9:	rol    rcx,0x10
   14001e1ad:	test   cx,0xffff
   14001e1b2:	jne    0x14001e1b6
   14001e1b4:	repz ret 
   14001e1b6:	ror    rcx,0x10
   14001e1ba:	jmp    0x14001e588
   14001e1bf:	int3   
   14001e1c0:	jmp    QWORD PTR [rip+0xfaa]        # 0x14001f170
   14001e1c6:	jmp    QWORD PTR [rip+0xf9c]        # 0x14001f168
   14001e1cc:	jmp    QWORD PTR [rip+0xf8e]        # 0x14001f160
   14001e1d2:	int3   
   14001e1d3:	int3   
   14001e1d4:	rex push rbx
   14001e1d6:	sub    rsp,0x20
   14001e1da:	mov    rbx,rcx
   14001e1dd:	mov    rcx,QWORD PTR [rip+0xd48c]        # 0x14002b670
   14001e1e4:	call   QWORD PTR [rip+0xefe]        # 0x14001f0e8
   14001e1ea:	mov    QWORD PTR [rsp+0x38],rax
   14001e1ef:	cmp    rax,0xffffffffffffffff
   14001e1f3:	jne    0x14001e200
   14001e1f5:	mov    rcx,rbx
   14001e1f8:	call   QWORD PTR [rip+0xef2]        # 0x14001f0f0
   14001e1fe:	jmp    0x14001e27e
   14001e200:	mov    ecx,0x8
   14001e205:	call   0x14001e6e4
   14001e20a:	nop
   14001e20b:	mov    rcx,QWORD PTR [rip+0xd45e]        # 0x14002b670
   14001e212:	call   QWORD PTR [rip+0xed0]        # 0x14001f0e8
   14001e218:	mov    QWORD PTR [rsp+0x38],rax
   14001e21d:	mov    rcx,QWORD PTR [rip+0xd444]        # 0x14002b668
   14001e224:	call   QWORD PTR [rip+0xebe]        # 0x14001f0e8
   14001e22a:	mov    QWORD PTR [rsp+0x40],rax
   14001e22f:	mov    rcx,rbx
   14001e232:	call   QWORD PTR [rip+0xec8]        # 0x14001f100
   14001e238:	mov    rcx,rax
   14001e23b:	lea    r8,[rsp+0x40]
   14001e240:	lea    rdx,[rsp+0x38]
   14001e245:	call   0x14001e6de
   14001e24a:	mov    rbx,rax
   14001e24d:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e252:	call   QWORD PTR [rip+0xea8]        # 0x14001f100
   14001e258:	mov    QWORD PTR [rip+0xd411],rax        # 0x14002b670
   14001e25f:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e264:	call   QWORD PTR [rip+0xe96]        # 0x14001f100
   14001e26a:	mov    QWORD PTR [rip+0xd3f7],rax        # 0x14002b668
   14001e271:	mov    ecx,0x8
   14001e276:	call   0x14001e6d8
   14001e27b:	mov    rax,rbx
   14001e27e:	add    rsp,0x20
   14001e282:	pop    rbx
   14001e283:	ret    
   14001e284:	sub    rsp,0x28
   14001e288:	call   0x14001e1d4
   14001e28d:	neg    rax
   14001e290:	sbb    eax,eax
   14001e292:	neg    eax
   14001e294:	dec    eax
   14001e296:	add    rsp,0x28
   14001e29a:	ret    
   14001e29b:	int3   
   14001e29c:	jmp    QWORD PTR [rip+0xeae]        # 0x14001f150
   14001e2a2:	int3   
   14001e2a3:	int3   
   14001e2a4:	sub    rsp,0x38
   14001e2a8:	lea    rcx,[rip+0x4d9]        # 0x14001e788
   14001e2af:	call   0x14001e284
   14001e2b4:	mov    r11d,DWORD PTR [rip+0xd38d]        # 0x14002b648
   14001e2bb:	mov    r9d,DWORD PTR [rip+0xd382]        # 0x14002b644
   14001e2c2:	lea    rax,[rip+0xcdfb]        # 0x14002b0c4
   14001e2c9:	lea    r8,[rip+0xcde0]        # 0x14002b0b0
   14001e2d0:	lea    rdx,[rip+0xcde1]        # 0x14002b0b8
   14001e2d7:	lea    rcx,[rip+0xcdca]        # 0x14002b0a8
   14001e2de:	mov    DWORD PTR [rip+0xcddf],r11d        # 0x14002b0c4
   14001e2e5:	mov    QWORD PTR [rsp+0x20],rax
   14001e2ea:	call   QWORD PTR [rip+0xde8]        # 0x14001f0d8
   14001e2f0:	mov    DWORD PTR [rip+0xcdca],eax        # 0x14002b0c0
   14001e2f6:	test   eax,eax
   14001e2f8:	jns    0x14001e304
   14001e2fa:	mov    ecx,0x8
   14001e2ff:	call   0x14001e748
   14001e304:	add    rsp,0x38
   14001e308:	ret    
   14001e309:	int3   
   14001e30a:	int3   
   14001e30b:	int3   
   14001e30c:	mov    QWORD PTR [rsp+0x8],rsi
   14001e311:	push   rdi
   14001e312:	sub    rsp,0x20
   14001e316:	mov    rax,QWORD PTR gs:0x30
   14001e31f:	mov    rdi,QWORD PTR [rax+0x8]
   14001e323:	xor    esi,esi
   14001e325:	xor    eax,eax
   14001e327:	lock cmpxchg QWORD PTR [rip+0xd328],rdi        # 0x14002b658
   14001e330:	je     0x14001e34d
   14001e332:	cmp    rax,rdi
   14001e335:	jne    0x14001e340
   14001e337:	mov    edi,0x1
   14001e33c:	mov    esi,edi
   14001e33e:	jmp    0x14001e352
   14001e340:	mov    ecx,0x3e8
   14001e345:	call   QWORD PTR [rip+0xd15]        # 0x14001f060
   14001e34b:	jmp    0x14001e325
   14001e34d:	mov    edi,0x1
   14001e352:	mov    eax,DWORD PTR [rip+0xd2fc]        # 0x14002b654
   14001e358:	cmp    eax,edi
   14001e35a:	jne    0x14001e368
   14001e35c:	mov    ecx,0x1f
   14001e361:	call   0x14001e748
   14001e366:	jmp    0x14001e39f
   14001e368:	mov    eax,DWORD PTR [rip+0xd2e6]        # 0x14002b654
   14001e36e:	test   eax,eax
   14001e370:	jne    0x14001e399
   14001e372:	mov    DWORD PTR [rip+0xd2dc],edi        # 0x14002b654
   14001e378:	lea    rdx,[rip+0x1309]        # 0x14001f688
   14001e37f:	lea    rcx,[rip+0x12ea]        # 0x14001f670
   14001e386:	call   0x14001e898
   14001e38b:	test   eax,eax
   14001e38d:	je     0x14001e39f
   14001e38f:	mov    eax,0xff
   14001e394:	jmp    0x14001e481
   14001e399:	mov    DWORD PTR [rip+0xcd2d],edi        # 0x14002b0cc
   14001e39f:	mov    eax,DWORD PTR [rip+0xd2af]        # 0x14002b654
   14001e3a5:	cmp    eax,edi
   14001e3a7:	jne    0x14001e3c6
   14001e3a9:	lea    rdx,[rip+0x12b8]        # 0x14001f668
   14001e3b0:	lea    rcx,[rip+0x1299]        # 0x14001f650
   14001e3b7:	call   0x14001e892
   14001e3bc:	mov    DWORD PTR [rip+0xd28e],0x2        # 0x14002b654
   14001e3c6:	test   esi,esi
   14001e3c8:	jne    0x14001e3d3
   14001e3ca:	xor    eax,eax
   14001e3cc:	xchg   QWORD PTR [rip+0xd285],rax        # 0x14002b658
   14001e3d3:	cmp    QWORD PTR [rip+0xd285],0x0        # 0x14002b660
   14001e3db:	je     0x14001e3fc
   14001e3dd:	lea    rcx,[rip+0xd27c]        # 0x14002b660
   14001e3e4:	call   0x14001e850
   14001e3e9:	test   eax,eax
   14001e3eb:	je     0x14001e3fc
   14001e3ed:	xor    r8d,r8d
   14001e3f0:	lea    edx,[r8+0x2]
   14001e3f4:	xor    ecx,ecx
   14001e3f6:	call   QWORD PTR [rip+0xd264]        # 0x14002b660
   14001e3fc:	mov    rcx,QWORD PTR [rip+0xcb5]        # 0x14001f0b8
   14001e403:	mov    rax,QWORD PTR [rip+0xcca6]        # 0x14002b0b0
   14001e40a:	mov    QWORD PTR [rcx],rax
   14001e40d:	mov    r8,QWORD PTR [rip+0xcc9c]        # 0x14002b0b0
   14001e414:	mov    rdx,QWORD PTR [rip+0xcc9d]        # 0x14002b0b8
   14001e41b:	mov    ecx,DWORD PTR [rip+0xcc87]        # 0x14002b0a8
   14001e421:	call   0x14001d0b0
   14001e426:	mov    DWORD PTR [rip+0xcc9c],eax        # 0x14002b0c8
   14001e42c:	cmp    DWORD PTR [rip+0xcc79],0x0        # 0x14002b0ac
   14001e433:	jne    0x14001e43d
   14001e435:	mov    ecx,eax
   14001e437:	call   QWORD PTR [rip+0xcf3]        # 0x14001f130
   14001e43d:	cmp    DWORD PTR [rip+0xcc88],0x0        # 0x14002b0cc
   14001e444:	jne    0x14001e452
   14001e446:	call   QWORD PTR [rip+0xc74]        # 0x14001f0c0
   14001e44c:	mov    eax,DWORD PTR [rip+0xcc76]        # 0x14002b0c8
   14001e452:	jmp    0x14001e481
   14001e454:	mov    DWORD PTR [rip+0xcc6e],eax        # 0x14002b0c8
   14001e45a:	cmp    DWORD PTR [rip+0xcc4b],0x0        # 0x14002b0ac
   14001e461:	jne    0x14001e46c
   14001e463:	mov    ecx,eax
   14001e465:	call   QWORD PTR [rip+0xc5d]        # 0x14001f0c8
   14001e46b:	int3   
   14001e46c:	cmp    DWORD PTR [rip+0xcc59],0x0        # 0x14002b0cc
   14001e473:	jne    0x14001e481
   14001e475:	call   QWORD PTR [rip+0xc45]        # 0x14001f0c0
   14001e47b:	mov    eax,DWORD PTR [rip+0xcc47]        # 0x14002b0c8
   14001e481:	mov    rsi,QWORD PTR [rsp+0x30]
   14001e486:	add    rsp,0x20
   14001e48a:	pop    rdi
   14001e48b:	ret    
   14001e48c:	sub    rsp,0x28
   14001e490:	mov    eax,0x5a4d
   14001e495:	cmp    WORD PTR [rip+0xfffffffffffe1b64],ax        # 0x140000000
   14001e49c:	je     0x14001e4a2
   14001e49e:	xor    eax,eax
   14001e4a0:	jmp    0x14001e4f1
   14001e4a2:	movsxd rcx,DWORD PTR [rip+0xfffffffffffe1b93]        # 0x14000003c
   14001e4a9:	lea    rax,[rip+0xfffffffffffe1b50]        # 0x140000000
   14001e4b0:	add    rcx,rax
   14001e4b3:	cmp    DWORD PTR [rcx],0x4550
   14001e4b9:	jne    0x14001e49e
   14001e4bb:	movzx  eax,WORD PTR [rcx+0x18]
   14001e4bf:	cmp    eax,0x10b
   14001e4c4:	je     0x14001e4e0
   14001e4c6:	cmp    eax,0x20b
   14001e4cb:	jne    0x14001e49e
   14001e4cd:	xor    eax,eax
   14001e4cf:	cmp    DWORD PTR [rcx+0x84],0xe
   14001e4d6:	jbe    0x14001e4f1
   14001e4d8:	cmp    DWORD PTR [rcx+0xf8],eax
   14001e4de:	jmp    0x14001e4ee
   14001e4e0:	xor    eax,eax
   14001e4e2:	cmp    DWORD PTR [rcx+0x74],0xe
   14001e4e6:	jbe    0x14001e4f1
   14001e4e8:	cmp    DWORD PTR [rcx+0xe8],eax
   14001e4ee:	setne  al
   14001e4f1:	mov    ecx,0x1
   14001e4f6:	mov    DWORD PTR [rip+0xcbb0],eax        # 0x14002b0ac
   14001e4fc:	call   QWORD PTR [rip+0xb7e]        # 0x14001f080
   14001e502:	or     rcx,0xffffffffffffffff
   14001e506:	call   QWORD PTR [rip+0xbf4]        # 0x14001f100
   14001e50c:	mov    rcx,QWORD PTR [rip+0xb75]        # 0x14001f088
   14001e513:	mov    QWORD PTR [rip+0xd14e],rax        # 0x14002b668
   14001e51a:	mov    QWORD PTR [rip+0xd14f],rax        # 0x14002b670
   14001e521:	mov    eax,DWORD PTR [rip+0xd129]        # 0x14002b650
   14001e527:	mov    DWORD PTR [rcx],eax
   14001e529:	mov    rdx,QWORD PTR [rip+0xb60]        # 0x14001f090
   14001e530:	mov    eax,DWORD PTR [rip+0xd116]        # 0x14002b64c
   14001e536:	mov    DWORD PTR [rdx],eax
   14001e538:	call   0x14001e750
   14001e53d:	call   0x14001e8a0
   14001e542:	cmp    DWORD PTR [rip+0xcb33],0x0        # 0x14002b07c
   14001e549:	jne    0x14001e558
   14001e54b:	lea    rcx,[rip+0x34e]        # 0x14001e8a0
   14001e552:	call   QWORD PTR [rip+0xb40]        # 0x14001f098
   14001e558:	cmp    DWORD PTR [rip+0xcb19],0xffffffff        # 0x14002b078
   14001e55f:	jne    0x14001e56a
   14001e561:	or     ecx,0xffffffff
   14001e564:	call   QWORD PTR [rip+0xb36]        # 0x14001f0a0
   14001e56a:	xor    eax,eax
   14001e56c:	add    rsp,0x28
   14001e570:	ret    
   14001e571:	int3   
   14001e572:	int3   
   14001e573:	int3   
   14001e574:	sub    rsp,0x28
   14001e578:	call   0x14001e8a4
   14001e57d:	add    rsp,0x28
   14001e581:	jmp    0x14001e30c
   14001e586:	int3   
   14001e587:	int3   
   14001e588:	mov    QWORD PTR [rsp+0x8],rcx
   14001e58d:	sub    rsp,0x88
   14001e594:	lea    rcx,[rip+0xcbd5]        # 0x14002b170
   14001e59b:	call   QWORD PTR [rip+0xa87]        # 0x14001f028
   14001e5a1:	mov    r11,QWORD PTR [rip+0xccc0]        # 0x14002b268
   14001e5a8:	mov    QWORD PTR [rsp+0x58],r11
   14001e5ad:	xor    r8d,r8d
   14001e5b0:	lea    rdx,[rsp+0x60]
   14001e5b5:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e5ba:	call   0x14001e96a
   14001e5bf:	mov    QWORD PTR [rsp+0x50],rax
   14001e5c4:	cmp    QWORD PTR [rsp+0x50],0x0
   14001e5ca:	je     0x14001e60d
   14001e5cc:	mov    QWORD PTR [rsp+0x38],0x0
   14001e5d5:	lea    rax,[rsp+0x48]
   14001e5da:	mov    QWORD PTR [rsp+0x30],rax
   14001e5df:	lea    rax,[rsp+0x40]
   14001e5e4:	mov    QWORD PTR [rsp+0x28],rax
   14001e5e9:	lea    rax,[rip+0xcb80]        # 0x14002b170
   14001e5f0:	mov    QWORD PTR [rsp+0x20],rax
   14001e5f5:	mov    r9,QWORD PTR [rsp+0x50]
   14001e5fa:	mov    r8,QWORD PTR [rsp+0x58]
   14001e5ff:	mov    rdx,QWORD PTR [rsp+0x60]
   14001e604:	xor    ecx,ecx
   14001e606:	call   0x14001e964
   14001e60b:	jmp    0x14001e62f
   14001e60d:	mov    rax,QWORD PTR [rsp+0x88]
   14001e615:	mov    QWORD PTR [rip+0xcc4c],rax        # 0x14002b268
   14001e61c:	lea    rax,[rsp+0x88]
   14001e624:	add    rax,0x8
   14001e628:	mov    QWORD PTR [rip+0xcbd9],rax        # 0x14002b208
   14001e62f:	mov    rax,QWORD PTR [rip+0xcc32]        # 0x14002b268
   14001e636:	mov    QWORD PTR [rip+0xcaa3],rax        # 0x14002b0e0
   14001e63d:	mov    rax,QWORD PTR [rsp+0x90]
   14001e645:	mov    QWORD PTR [rip+0xcba4],rax        # 0x14002b1f0
   14001e64c:	mov    DWORD PTR [rip+0xca7a],0xc0000409        # 0x14002b0d0
   14001e656:	mov    DWORD PTR [rip+0xca74],0x1        # 0x14002b0d4
   14001e660:	mov    rax,QWORD PTR [rip+0xc9f1]        # 0x14002b058
   14001e667:	mov    QWORD PTR [rsp+0x68],rax
   14001e66c:	mov    rax,QWORD PTR [rip+0xc9ed]        # 0x14002b060
   14001e673:	mov    QWORD PTR [rsp+0x70],rax
   14001e678:	call   QWORD PTR [rip+0x9ba]        # 0x14001f038
   14001e67e:	mov    DWORD PTR [rip+0xcae4],eax        # 0x14002b168
   14001e684:	mov    ecx,0x1
   14001e689:	call   0x14001e958
   14001e68e:	xor    ecx,ecx
   14001e690:	call   QWORD PTR [rip+0x9aa]        # 0x14001f040
   14001e696:	lea    rcx,[rip+0x8783]        # 0x140026e20
   14001e69d:	call   QWORD PTR [rip+0x9a5]        # 0x14001f048
   14001e6a3:	cmp    DWORD PTR [rip+0xcabe],0x0        # 0x14002b168
   14001e6aa:	jne    0x14001e6b6
   14001e6ac:	mov    ecx,0x1
   14001e6b1:	call   0x14001e958
   14001e6b6:	call   QWORD PTR [rip+0x994]        # 0x14001f050
   14001e6bc:	mov    edx,0xc0000409
   14001e6c1:	mov    rcx,rax
   14001e6c4:	call   QWORD PTR [rip+0x98e]        # 0x14001f058
   14001e6ca:	add    rsp,0x88
   14001e6d1:	ret    
   14001e6d2:	jmp    QWORD PTR [rip+0xa40]        # 0x14001f118
   14001e6d8:	jmp    QWORD PTR [rip+0xa32]        # 0x14001f110
   14001e6de:	jmp    QWORD PTR [rip+0xa24]        # 0x14001f108
   14001e6e4:	jmp    QWORD PTR [rip+0xa0e]        # 0x14001f0f8
   14001e6ea:	int3   
   14001e6eb:	int3   
   14001e6ec:	sub    rsp,0x28
   14001e6f0:	mov    rax,QWORD PTR [rcx]
   14001e6f3:	cmp    DWORD PTR [rax],0xe06d7363
   14001e6f9:	jne    0x14001e726
   14001e6fb:	cmp    DWORD PTR [rax+0x18],0x4
   14001e6ff:	jne    0x14001e726
   14001e701:	mov    eax,DWORD PTR [rax+0x20]
   14001e704:	cmp    eax,0x19930520
   14001e709:	je     0x14001e720
   14001e70b:	cmp    eax,0x19930521
   14001e710:	je     0x14001e720
   14001e712:	cmp    eax,0x19930522
   14001e717:	je     0x14001e720
   14001e719:	cmp    eax,0x1994000
   14001e71e:	jne    0x14001e726
   14001e720:	call   0x14001e95e
   14001e725:	int3   
   14001e726:	xor    eax,eax
   14001e728:	add    rsp,0x28
   14001e72c:	ret    
   14001e72d:	int3   
   14001e72e:	int3   
   14001e72f:	int3   
   14001e730:	sub    rsp,0x28
   14001e734:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x14001e6ec
   14001e73b:	call   QWORD PTR [rip+0x8ff]        # 0x14001f040
   14001e741:	xor    eax,eax
   14001e743:	add    rsp,0x28
   14001e747:	ret    
   14001e748:	jmp    QWORD PTR [rip+0x992]        # 0x14001f0e0
   14001e74e:	int3   
   14001e74f:	int3   
   14001e750:	mov    QWORD PTR [rsp+0x8],rbx
   14001e755:	push   rdi
   14001e756:	sub    rsp,0x20
   14001e75a:	lea    rbx,[rip+0x86d7]        # 0x140026e38
   14001e761:	lea    rdi,[rip+0x86d0]        # 0x140026e38
   14001e768:	jmp    0x14001e778
   14001e76a:	mov    rax,QWORD PTR [rbx]
   14001e76d:	test   rax,rax
   14001e770:	je     0x14001e774
   14001e772:	call   rax
   14001e774:	add    rbx,0x8
   14001e778:	cmp    rbx,rdi
   14001e77b:	jb     0x14001e76a
   14001e77d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e782:	add    rsp,0x20
   14001e786:	pop    rdi
   14001e787:	ret    
   14001e788:	mov    QWORD PTR [rsp+0x8],rbx
   14001e78d:	push   rdi
   14001e78e:	sub    rsp,0x20
   14001e792:	lea    rbx,[rip+0x86af]        # 0x140026e48
   14001e799:	lea    rdi,[rip+0x86a8]        # 0x140026e48
   14001e7a0:	jmp    0x14001e7b0
   14001e7a2:	mov    rax,QWORD PTR [rbx]
   14001e7a5:	test   rax,rax
   14001e7a8:	je     0x14001e7ac
   14001e7aa:	call   rax
   14001e7ac:	add    rbx,0x8
   14001e7b0:	cmp    rbx,rdi
   14001e7b3:	jb     0x14001e7a2
   14001e7b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e7ba:	add    rsp,0x20
   14001e7be:	pop    rdi
   14001e7bf:	ret    
   14001e7c0:	jmp    QWORD PTR [rip+0x90a]        # 0x14001f0d0
   14001e7c6:	int3   
   14001e7c7:	int3   
   14001e7c8:	int3   
   14001e7c9:	int3   
   14001e7ca:	int3   
   14001e7cb:	int3   
   14001e7cc:	int3   
   14001e7cd:	int3   
   14001e7ce:	int3   
   14001e7cf:	int3   
   14001e7d0:	mov    rax,rcx
   14001e7d3:	mov    ecx,0x5a4d
   14001e7d8:	cmp    WORD PTR [rax],cx
   14001e7db:	je     0x14001e7e0
   14001e7dd:	xor    eax,eax
   14001e7df:	ret    
   14001e7e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001e7e4:	add    rcx,rax
   14001e7e7:	xor    eax,eax
   14001e7e9:	cmp    DWORD PTR [rcx],0x4550
   14001e7ef:	jne    0x14001e7fd
   14001e7f1:	mov    edx,0x20b
   14001e7f6:	cmp    WORD PTR [rcx+0x18],dx
   14001e7fa:	sete   al
   14001e7fd:	repz ret 
   14001e7ff:	int3   
   14001e800:	movsxd r8,DWORD PTR [rcx+0x3c]
   14001e804:	xor    r9d,r9d
   14001e807:	mov    r10,rdx
   14001e80a:	add    r8,rcx
   14001e80d:	movzx  eax,WORD PTR [r8+0x14]
   14001e812:	movzx  r11d,WORD PTR [r8+0x6]
   14001e817:	lea    rcx,[rax+r8*1+0x18]
   14001e81c:	test   r11d,r11d
   14001e81f:	je     0x14001e83f
   14001e821:	mov    edx,DWORD PTR [rcx+0xc]
   14001e824:	cmp    r10,rdx
   14001e827:	jb     0x14001e833
   14001e829:	mov    eax,DWORD PTR [rcx+0x8]
   14001e82c:	add    eax,edx
   14001e82e:	cmp    r10,rax
   14001e831:	jb     0x14001e842
   14001e833:	inc    r9d
   14001e836:	add    rcx,0x28
   14001e83a:	cmp    r9d,r11d
   14001e83d:	jb     0x14001e821
   14001e83f:	xor    eax,eax
   14001e841:	ret    
   14001e842:	mov    rax,rcx
   14001e845:	ret    
   14001e846:	int3   
   14001e847:	int3   
   14001e848:	int3   
   14001e849:	int3   
   14001e84a:	int3   
   14001e84b:	int3   
   14001e84c:	int3   
   14001e84d:	int3   
   14001e84e:	int3   
   14001e84f:	int3   
   14001e850:	sub    rsp,0x28
   14001e854:	mov    r8,rcx
   14001e857:	lea    r9,[rip+0xfffffffffffe17a2]        # 0x140000000
   14001e85e:	mov    rcx,r9
   14001e861:	call   0x14001e7d0
   14001e866:	test   eax,eax
   14001e868:	je     0x14001e88c
   14001e86a:	sub    r8,r9
   14001e86d:	mov    rdx,r8
   14001e870:	mov    rcx,r9
   14001e873:	call   0x14001e800
   14001e878:	test   rax,rax
   14001e87b:	je     0x14001e88c
   14001e87d:	mov    eax,DWORD PTR [rax+0x24]
   14001e880:	shr    eax,0x1f
   14001e883:	not    eax
   14001e885:	and    eax,0x1
   14001e888:	jmp    0x14001e88c
   14001e88a:	xor    eax,eax
   14001e88c:	add    rsp,0x28
   14001e890:	ret    
   14001e891:	int3   
   14001e892:	jmp    QWORD PTR [rip+0x818]        # 0x14001f0b0
   14001e898:	jmp    QWORD PTR [rip+0x80a]        # 0x14001f0a8
   14001e89e:	int3   
   14001e89f:	int3   
   14001e8a0:	xor    eax,eax
   14001e8a2:	ret    
   14001e8a3:	int3   
   14001e8a4:	mov    QWORD PTR [rsp+0x18],rbx
   14001e8a9:	push   rdi
   14001e8aa:	sub    rsp,0x20
   14001e8ae:	mov    rax,QWORD PTR [rip+0xc7a3]        # 0x14002b058
   14001e8b5:	and    QWORD PTR [rsp+0x30],0x0
   14001e8bb:	movabs rdi,0x2b992ddfa232
   14001e8c5:	cmp    rax,rdi
   14001e8c8:	je     0x14001e8d6
   14001e8ca:	not    rax
   14001e8cd:	mov    QWORD PTR [rip+0xc78c],rax        # 0x14002b060
   14001e8d4:	jmp    0x14001e94c
   14001e8d6:	lea    rcx,[rsp+0x30]
   14001e8db:	call   QWORD PTR [rip+0x71f]        # 0x14001f000
   14001e8e1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e8e6:	call   QWORD PTR [rip+0x71c]        # 0x14001f008
   14001e8ec:	mov    r11d,eax
   14001e8ef:	xor    rbx,r11
   14001e8f2:	call   QWORD PTR [rip+0x718]        # 0x14001f010
   14001e8f8:	mov    r11d,eax
   14001e8fb:	xor    rbx,r11
   14001e8fe:	call   QWORD PTR [rip+0x714]        # 0x14001f018
   14001e904:	lea    rcx,[rsp+0x38]
   14001e909:	mov    r11d,eax
   14001e90c:	xor    rbx,r11
   14001e90f:	call   QWORD PTR [rip+0x70b]        # 0x14001f020
   14001e915:	mov    r11,QWORD PTR [rsp+0x38]
   14001e91a:	xor    r11,rbx
   14001e91d:	movabs rax,0xffffffffffff
   14001e927:	and    r11,rax
   14001e92a:	movabs rax,0x2b992ddfa233
   14001e934:	cmp    r11,rdi
   14001e937:	cmove  r11,rax
   14001e93b:	mov    QWORD PTR [rip+0xc716],r11        # 0x14002b058
   14001e942:	not    r11
   14001e945:	mov    QWORD PTR [rip+0xc714],r11        # 0x14002b060
   14001e94c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e951:	add    rsp,0x20
   14001e955:	pop    rdi
   14001e956:	ret    
   14001e957:	int3   
   14001e958:	jmp    QWORD PTR [rip+0x832]        # 0x14001f190
   14001e95e:	jmp    QWORD PTR [rip+0x714]        # 0x14001f078
   14001e964:	jmp    QWORD PTR [rip+0x6fe]        # 0x14001f068
   14001e96a:	jmp    QWORD PTR [rip+0x6c0]        # 0x14001f030
   14001e970:	rex push rbp
   14001e972:	sub    rsp,0x20
   14001e976:	mov    rbp,rdx
   14001e979:	mov    ecx,0x8
   14001e97e:	call   0x14001e6d8
   14001e983:	add    rsp,0x20
   14001e987:	pop    rbp
   14001e988:	ret    
   14001e989:	rex push rbp
   14001e98b:	sub    rsp,0x20
   14001e98f:	mov    rbp,rdx
   14001e992:	mov    rax,QWORD PTR [rcx]
   14001e995:	mov    rdx,rcx
   14001e998:	mov    ecx,DWORD PTR [rax]
   14001e99a:	call   0x14001e7c0
   14001e99f:	add    rsp,0x20
   14001e9a3:	pop    rbp
   14001e9a4:	ret    
   14001e9a5:	int3   
   14001e9a6:	int3   
   14001e9a7:	int3   
   14001e9a8:	int3   
   14001e9a9:	int3   
   14001e9aa:	int3   
   14001e9ab:	int3   
   14001e9ac:	int3   
   14001e9ad:	int3   
   14001e9ae:	int3   
   14001e9af:	int3   
   14001e9b0:	rex push rbp
   14001e9b2:	sub    rsp,0x20
   14001e9b6:	mov    rbp,rdx
   14001e9b9:	mov    rax,QWORD PTR [rcx]
   14001e9bc:	xor    ecx,ecx
   14001e9be:	cmp    DWORD PTR [rax],0xc0000005
   14001e9c4:	sete   cl
   14001e9c7:	mov    eax,ecx
   14001e9c9:	mov    eax,ecx
   14001e9cb:	add    rsp,0x20
   14001e9cf:	pop    rbp
   14001e9d0:	ret    
   14001e9d1:	int3   
   14001e9d2:	int3   
   14001e9d3:	int3   
   14001e9d4:	int3   
   14001e9d5:	int3   
   14001e9d6:	int3   
   14001e9d7:	int3   
   14001e9d8:	int3   
   14001e9d9:	int3   
   14001e9da:	int3   
   14001e9db:	int3   
   14001e9dc:	int3   
   14001e9dd:	int3   
   14001e9de:	int3   
   14001e9df:	int3   
   14001e9e0:	sub    rsp,0x28
   14001e9e4:	lea    rcx,[rip+0xc6b5]        # 0x14002b0a0
   14001e9eb:	call   QWORD PTR [rip+0x9ef]        # 0x14001f3e0
   14001e9f1:	lea    rcx,[rip+0x18]        # 0x14001ea10
   14001e9f8:	add    rsp,0x28
   14001e9fc:	jmp    0x14001e284
   14001ea01:	int3   
   14001ea02:	int3   
   14001ea03:	int3   
   14001ea04:	int3   
   14001ea05:	int3   
   14001ea06:	int3   
   14001ea07:	int3   
   14001ea08:	int3   
   14001ea09:	int3   
   14001ea0a:	int3   
   14001ea0b:	int3   
   14001ea0c:	int3   
   14001ea0d:	int3   
   14001ea0e:	int3   
   14001ea0f:	int3   
   14001ea10:	lea    rcx,[rip+0xc689]        # 0x14002b0a0
   14001ea17:	rex.W jmp QWORD PTR [rip+0xb0a]        # 0x14001f528
