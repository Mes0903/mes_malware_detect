
c7739012562be8188e394bbefcaaf04358f48a8043511c72d4baba664241fead.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	sub    rsp,0x48
   14000100c:	lea    r8,[rdx+0x1]
   140001010:	mov    ecx,edx
   140001012:	lea    rax,[rip+0xa147]        # 0x14000b160
   140001019:	xor    r9d,r9d
   14000101c:	sub    ecx,eax
   14000101e:	mov    al,BYTE PTR [rip+0xa62f]        # 0x14000b653
   140001024:	movzx  eax,BYTE PTR [rdx]
   140001027:	mov    rdx,QWORD PTR [rsp+0x78]
   14000102c:	shl    eax,0x18
   14000102f:	or     eax,ecx
   140001031:	mov    QWORD PTR [rsp+0x28],rdx
   140001036:	mov    DWORD PTR [rsp+0x30],eax
   14000103a:	movzx  eax,WORD PTR [r8]
   14000103e:	mov    DWORD PTR [rsp+0x34],eax
   140001042:	mov    eax,DWORD PTR [r8+0x2]
   140001046:	mov    DWORD PTR [rsp+0x38],eax
   14000104a:	mov    eax,DWORD PTR [r8+0x6]
   14000104e:	add    r8,0xa
   140001052:	mov    DWORD PTR [rsp+0x3c],eax
   140001056:	mov    rax,QWORD PTR [rip+0xcfeb]        # 0x14000e048
   14000105d:	mov    QWORD PTR [rdx],rax
   140001060:	mov    rax,QWORD PTR [rip+0xcfe1]        # 0x14000e048
   140001067:	movzx  ecx,WORD PTR [rax]
   14000106a:	mov    QWORD PTR [rdx+0x10],r8
   14000106e:	mov    DWORD PTR [rdx+0x8],ecx
   140001071:	mov    DWORD PTR [rdx+0xc],0x2
   140001078:	movzx  eax,WORD PTR [r8]
   14000107c:	xor    r8d,r8d
   14000107f:	mov    DWORD PTR [rdx+0x18],eax
   140001082:	mov    eax,DWORD PTR [rsp+0x70]
   140001086:	mov    DWORD PTR [rdx+0x1c],0x1
   14000108d:	lea    rdx,[rsp+0x30]
   140001092:	mov    rcx,QWORD PTR [rip+0xcfc7]        # 0x14000e060
   140001099:	mov    DWORD PTR [rsp+0x20],eax
   14000109d:	call   QWORD PTR [rip+0x71b5]        # 0x140008258
   1400010a3:	add    rsp,0x48
   1400010a7:	ret    
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    rax,rsp
   1400010b3:	mov    QWORD PTR [rax+0x8],rbx
   1400010b7:	mov    QWORD PTR [rax+0x10],rbp
   1400010bb:	mov    QWORD PTR [rax+0x18],rsi
   1400010bf:	mov    QWORD PTR [rax+0x20],rdi
   1400010c3:	push   r12
   1400010c5:	push   r14
   1400010c7:	push   r15
   1400010c9:	sub    rsp,0x40
   1400010cd:	mov    rbx,QWORD PTR [rsp+0x90]
   1400010d5:	mov    r15,r9
   1400010d8:	mov    sil,r8b
   1400010db:	mov    r14d,edx
   1400010de:	mov    r12,rcx
   1400010e1:	test   rbx,rbx
   1400010e4:	je     0x140001154
   1400010e6:	mov    rbp,QWORD PTR [rsp+0x80]
   1400010ee:	mov    eax,edx
   1400010f0:	test   edx,edx
   1400010f2:	je     0x140001116
   1400010f4:	cmp    eax,0x1
   1400010f7:	jne    0x140001119
   1400010f9:	movzx  ecx,r8b
   1400010fd:	mov    eax,0x100
   140001102:	inc    ecx
   140001104:	mov    QWORD PTR [rbx+0x10],r9
   140001108:	test   r8b,r8b
   14000110b:	mov    QWORD PTR [rbx+0x18],rbp
   14000110f:	cmovne eax,ecx
   140001112:	mov    DWORD PTR [rbx],eax
   140001114:	jmp    0x140001119
   140001116:	and    DWORD PTR [rbx],0x0
   140001119:	mov    rdi,QWORD PTR [rbx+0x28]
   14000111d:	test   rdi,rdi
   140001120:	je     0x140001154
   140001122:	mov    rcx,rdi
   140001125:	call   QWORD PTR [rip+0x7305]        # 0x140008430
   14000112b:	mov    rax,QWORD PTR [rbx+0x30]
   14000112f:	mov    r9,r15
   140001132:	mov    QWORD PTR [rsp+0x30],rax
   140001137:	mov    r8b,sil
   14000113a:	mov    rax,QWORD PTR [rsp+0x88]
   140001142:	mov    edx,r14d
   140001145:	mov    QWORD PTR [rsp+0x28],rax
   14000114a:	mov    rcx,r12
   14000114d:	mov    QWORD PTR [rsp+0x20],rbp
   140001152:	call   rdi
   140001154:	mov    rbx,QWORD PTR [rsp+0x60]
   140001159:	mov    rbp,QWORD PTR [rsp+0x68]
   14000115e:	mov    rsi,QWORD PTR [rsp+0x70]
   140001163:	mov    rdi,QWORD PTR [rsp+0x78]
   140001168:	add    rsp,0x40
   14000116c:	pop    r15
   14000116e:	pop    r14
   140001170:	pop    r12
   140001172:	ret    
   140001173:	int3   
   140001174:	int3   
   140001175:	int3   
   140001176:	int3   
   140001177:	int3   
   140001178:	int3   
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	lea    rax,[rip+0x1db9]        # 0x140002f40
   140001187:	mov    QWORD PTR [rip+0xd652],rax        # 0x14000e7e0
   14000118e:	lea    rax,[rip+0x1ebb]        # 0x140003050
   140001195:	mov    QWORD PTR [rip+0xd634],rax        # 0x14000e7d0
   14000119c:	lea    rax,[rip+0x1efd]        # 0x1400030a0
   1400011a3:	mov    QWORD PTR [rip+0xd62e],rax        # 0x14000e7d8
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	sub    rsp,0x28
   1400011b4:	xor    edx,edx
   1400011b6:	lea    rcx,[rip+0xd6c3]        # 0x14000e880
   1400011bd:	mov    r8d,0xa0
   1400011c3:	call   0x140006a26
   1400011c8:	lea    rcx,[rip+0x5dc1]        # 0x140006f90
   1400011cf:	add    rsp,0x28
   1400011d3:	jmp    0x140005d28
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	lea    rcx,[rip+0x5df9]        # 0x140006fe0
   1400011e7:	jmp    0x140005d28
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	lea    rcx,[rip+0x5e09]        # 0x140007000
   1400011f7:	jmp    0x140005d28
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	lea    rcx,[rip+0x5e19]        # 0x140007020
   140001207:	jmp    0x140005d28
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	int3   
   140001211:	int3   
   140001212:	int3   
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	xchg   ax,ax
   140001222:	ret    
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	mov    rax,rsp
   14000122f:	mov    QWORD PTR [rax+0x8],rbx
   140001233:	mov    QWORD PTR [rax+0x10],rsi
   140001237:	mov    QWORD PTR [rax+0x18],rdi
   14000123b:	mov    QWORD PTR [rax+0x20],r12
   14000123f:	push   rbp
   140001240:	push   r14
   140001242:	push   r15
   140001244:	lea    rbp,[rax-0x5f]
   140001248:	sub    rsp,0xf0
   14000124f:	mov    rax,QWORD PTR [rip+0xcdb2]        # 0x14000e008
   140001256:	xor    rax,rsp
   140001259:	mov    QWORD PTR [rbp+0x37],rax
   14000125d:	xor    ebx,ebx
   14000125f:	lea    rcx,[rbp-0x51]
   140001263:	xor    edx,edx
   140001265:	mov    DWORD PTR [rbp-0x79],ebx
   140001268:	mov    edi,ebx
   14000126a:	mov    QWORD PTR [rbp-0x71],rbx
   14000126e:	mov    DWORD PTR [rbp-0x59],ebx
   140001271:	lea    r8d,[rbx+0x48]
   140001275:	call   0x140006a26
   14000127a:	mov    rax,QWORD PTR [rip+0xcdc7]        # 0x14000e048
   140001281:	lea    r9,[rip+0xcdd8]        # 0x14000e060
   140001288:	mov    QWORD PTR [rbp-0x69],rbx
   14000128c:	lea    r8,[rip+0xcdad]        # 0x14000e040
   140001293:	lea    rdx,[rip+0xfffffffffffffe16]        # 0x1400010b0
   14000129a:	mov    esi,ebx
   14000129c:	lea    rcx,[rbp-0x9]
   1400012a0:	movups xmm0,XMMWORD PTR [rax-0x10]
   1400012a4:	mov    QWORD PTR [rip+0xcdbd],rbx        # 0x14000e068
   1400012ab:	mov    QWORD PTR [rip+0xcdbe],rbx        # 0x14000e070
   1400012b2:	movdqu XMMWORD PTR [rbp-0x9],xmm0
   1400012b7:	call   QWORD PTR [rip+0x6fa3]        # 0x140008260
   1400012bd:	test   eax,eax
   1400012bf:	jne    0x1400012dc
   1400012c1:	mov    r8,QWORD PTR [rip+0xcd80]        # 0x14000e048
   1400012c8:	lea    edx,[rbx+0x2]
   1400012cb:	mov    rcx,QWORD PTR [rip+0xcd8e]        # 0x14000e060
   1400012d2:	movzx  r9d,WORD PTR [r8]
   1400012d6:	call   QWORD PTR [rip+0x6f8c]        # 0x140008268
   1400012dc:	cmp    DWORD PTR [rip+0xcd5d],0x5        # 0x14000e040
   1400012e3:	mov    r15d,0x3
   1400012e9:	jbe    0x140001315
   1400012eb:	lea    rax,[rbp-0x79]
   1400012ef:	mov    QWORD PTR [rbp+0x2f],0x4
   1400012f7:	mov    QWORD PTR [rbp+0x27],rax
   1400012fb:	lea    rax,[rbp+0x7]
   1400012ff:	mov    QWORD PTR [rsp+0x28],rax
   140001304:	lea    rdx,[rip+0x9f33]        # 0x14000b23e
   14000130b:	mov    DWORD PTR [rsp+0x20],r15d
   140001310:	call   0x140001008
   140001315:	xor    edx,edx
   140001317:	xor    ecx,ecx
   140001319:	call   QWORD PTR [rip+0x6d99]        # 0x1400080b8
   14000131f:	mov    DWORD PTR [rbp-0x79],eax
   140001322:	test   eax,eax
   140001324:	js     0x1400014b6
   14000132a:	lea    r9,[rbp-0x71]
   14000132e:	mov    esi,0x1
   140001333:	lea    r8,[rbp-0x69]
   140001337:	lea    rdx,[rip+0x99ca]        # 0x14000ad08
   14000133e:	lea    rcx,[rip+0x997b]        # 0x14000acc0
   140001345:	call   QWORD PTR [rip+0x6d1d]        # 0x140008068
   14000134b:	mov    DWORD PTR [rbp-0x79],eax
   14000134e:	test   eax,eax
   140001350:	jns    0x14000136b
   140001352:	cmp    DWORD PTR [rip+0xcce7],0x5        # 0x14000e040
   140001359:	jbe    0x1400014b6
   14000135f:	lea    rdx,[rip+0x9ea5]        # 0x14000b20b
   140001366:	jmp    0x140001493
   14000136b:	mov    r8,QWORD PTR [rbp-0x69]
   14000136f:	xor    edx,edx
   140001371:	mov    ecx,0x100000
   140001376:	call   QWORD PTR [rip+0x6e94]        # 0x140008210
   14000137c:	mov    rdi,rax
   14000137f:	test   rax,rax
   140001382:	jne    0x1400013a1
   140001384:	call   QWORD PTR [rip+0x6d56]        # 0x1400080e0
   14000138a:	mov    ecx,eax
   14000138c:	movzx  eax,ax
   14000138f:	or     eax,0x80070000
   140001394:	test   ecx,ecx
   140001396:	cmovle eax,ecx
   140001399:	mov    DWORD PTR [rbp-0x79],eax
   14000139c:	jmp    0x1400014b6
   1400013a1:	mov    edx,0x2710
   1400013a6:	mov    rcx,rax
   1400013a9:	call   QWORD PTR [rip+0x6e51]        # 0x140008200
   1400013af:	test   eax,eax
   1400013b1:	jne    0x1400014b6
   1400013b7:	lea    r12d,[rax+0x50]
   1400013bb:	jmp    0x140001412
   1400013bd:	test   eax,eax
   1400013bf:	js     0x140001483
   1400013c5:	lea    rcx,[rbp-0x59]
   1400013c9:	call   0x140002404
   1400013ce:	mov    DWORD PTR [rbp-0x79],eax
   1400013d1:	test   eax,eax
   1400013d3:	jns    0x140001408
   1400013d5:	cmp    DWORD PTR [rip+0xcc64],0x5        # 0x14000e040
   1400013dc:	jbe    0x140001408
   1400013de:	lea    rax,[rbp-0x79]
   1400013e2:	mov    QWORD PTR [rbp+0x2f],0x4
   1400013ea:	mov    QWORD PTR [rbp+0x27],rax
   1400013ee:	lea    rax,[rbp+0x7]
   1400013f2:	mov    QWORD PTR [rsp+0x28],rax
   1400013f7:	lea    rdx,[rip+0x9d73]        # 0x14000b171
   1400013fe:	mov    DWORD PTR [rsp+0x20],r15d
   140001403:	call   0x140001008
   140001408:	lea    rcx,[rbp-0x59]
   14000140c:	call   QWORD PTR [rip+0x6c5e]        # 0x140008070
   140001412:	mov    r8,r12
   140001415:	lea    rcx,[rbp-0x59]
   140001419:	xor    edx,edx
   14000141b:	call   0x140006a26
   140001420:	mov    rcx,QWORD PTR [rbp-0x71]
   140001424:	lea    rdx,[rbp-0x59]
   140001428:	mov    DWORD PTR [rbp-0x59],r12d
   14000142c:	call   QWORD PTR [rip+0x6c2e]        # 0x140008060
   140001432:	mov    DWORD PTR [rbp-0x79],eax
   140001435:	cmp    eax,0x530002
   14000143a:	jne    0x1400013bd
   14000143c:	cmp    DWORD PTR [rip+0xcbfd],0x5        # 0x14000e040
   140001443:	jbe    0x14000146f
   140001445:	lea    rax,[rbp-0x79]
   140001449:	mov    QWORD PTR [rbp+0x2f],0x4
   140001451:	mov    QWORD PTR [rbp+0x27],rax
   140001455:	lea    rax,[rbp+0x7]
   140001459:	mov    QWORD PTR [rsp+0x28],rax
   14000145e:	lea    rdx,[rip+0x9d78]        # 0x14000b1dd
   140001465:	mov    DWORD PTR [rsp+0x20],r15d
   14000146a:	call   0x140001008
   14000146f:	mov    edx,0x2710
   140001474:	mov    rcx,rdi
   140001477:	call   QWORD PTR [rip+0x6d83]        # 0x140008200
   14000147d:	test   eax,eax
   14000147f:	jne    0x1400014b6
   140001481:	jmp    0x140001412
   140001483:	cmp    DWORD PTR [rip+0xcbb6],0x5        # 0x14000e040
   14000148a:	jbe    0x1400014b6
   14000148c:	lea    rdx,[rip+0x9d0f]        # 0x14000b1a2
   140001493:	lea    rax,[rbp-0x79]
   140001497:	mov    QWORD PTR [rbp+0x2f],0x4
   14000149f:	mov    QWORD PTR [rbp+0x27],rax
   1400014a3:	lea    rax,[rbp+0x7]
   1400014a7:	mov    QWORD PTR [rsp+0x28],rax
   1400014ac:	mov    DWORD PTR [rsp+0x20],r15d
   1400014b1:	call   0x140001008
   1400014b6:	lea    rcx,[rbp-0x59]
   1400014ba:	call   QWORD PTR [rip+0x6bb0]        # 0x140008070
   1400014c0:	mov    rcx,QWORD PTR [rbp-0x69]
   1400014c4:	call   QWORD PTR [rip+0x6b8e]        # 0x140008058
   1400014ca:	mov    rcx,QWORD PTR [rbp-0x71]
   1400014ce:	call   QWORD PTR [rip+0x6b7c]        # 0x140008050
   1400014d4:	test   rdi,rdi
   1400014d7:	je     0x1400014e2
   1400014d9:	mov    rcx,rdi
   1400014dc:	call   QWORD PTR [rip+0x6c16]        # 0x1400080f8
   1400014e2:	test   esi,esi
   1400014e4:	je     0x1400014ec
   1400014e6:	call   QWORD PTR [rip+0x6bc4]        # 0x1400080b0
   1400014ec:	mov    rcx,QWORD PTR [rip+0xcb6d]        # 0x14000e060
   1400014f3:	call   QWORD PTR [rip+0x6d57]        # 0x140008250
   1400014f9:	cmp    DWORD PTR [rbp-0x79],ebx
   1400014fc:	mov    QWORD PTR [rip+0xcb5d],rbx        # 0x14000e060
   140001503:	mov    DWORD PTR [rip+0xcb37],ebx        # 0x14000e040
   140001509:	setl   bl
   14000150c:	mov    eax,ebx
   14000150e:	mov    rcx,QWORD PTR [rbp+0x37]
   140001512:	xor    rcx,rsp
   140001515:	call   0x140005950
   14000151a:	lea    r11,[rsp+0xf0]
   140001522:	mov    rbx,QWORD PTR [r11+0x20]
   140001526:	mov    rsi,QWORD PTR [r11+0x28]
   14000152a:	mov    rdi,QWORD PTR [r11+0x30]
   14000152e:	mov    r12,QWORD PTR [r11+0x38]
   140001532:	mov    rsp,r11
   140001535:	pop    r15
   140001537:	pop    r14
   140001539:	pop    rbp
   14000153a:	ret    
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	int3   
   140001541:	int3   
   140001542:	int3   
   140001543:	int3   
   140001544:	mov    QWORD PTR [rsp+0x10],rbx
   140001549:	mov    QWORD PTR [rsp+0x18],rbp
   14000154e:	push   rsi
   14000154f:	push   rdi
   140001550:	push   r15
   140001552:	sub    rsp,0x220
   140001559:	mov    rax,QWORD PTR [rip+0xcaa8]        # 0x14000e008
   140001560:	xor    rax,rsp
   140001563:	mov    QWORD PTR [rsp+0x210],rax
   14000156b:	mov    rsi,rcx
   14000156e:	xor    edx,edx
   140001570:	lea    rcx,[rsp+0x44]
   140001575:	mov    r8d,0x1c4
   14000157b:	call   0x140006a26
   140001580:	xor    ebx,ebx
   140001582:	mov    DWORD PTR [rsp+0x40],0x1c8
   14000158a:	or     ebp,0xffffffff
   14000158d:	mov    QWORD PTR [rsp+0x30],rbx
   140001592:	mov    r8d,ebp
   140001595:	lea    rdx,[rsp+0x40]
   14000159a:	lea    ecx,[rbx+0x33]
   14000159d:	call   QWORD PTR [rip+0x6e05]        # 0x1400083a8
   1400015a3:	lea    r15d,[rbx+0x1]
   1400015a7:	mov    edi,eax
   1400015a9:	test   eax,eax
   1400015ab:	js     0x140001620
   1400015ad:	lea    r8,[rsp+0x40]
   1400015b2:	mov    edx,r15d
   1400015b5:	mov    rcx,rsi
   1400015b8:	call   QWORD PTR [rip+0x6df2]        # 0x1400083b0
   1400015be:	mov    edi,eax
   1400015c0:	test   eax,eax
   1400015c2:	js     0x140001620
   1400015c4:	mov    r8d,ebp
   1400015c7:	lea    rdx,[rsp+0x40]
   1400015cc:	lea    ecx,[rbx+0x33]
   1400015cf:	call   QWORD PTR [rip+0x6de3]        # 0x1400083b8
   1400015d5:	test   eax,eax
   1400015d7:	je     0x140001620
   1400015d9:	mov    r8d,ebp
   1400015dc:	lea    rdx,[rsp+0x40]
   1400015e1:	lea    ecx,[rbx+0x33]
   1400015e4:	call   QWORD PTR [rip+0x6dd6]        # 0x1400083c0
   1400015ea:	test   eax,eax
   1400015ec:	je     0x140001620
   1400015ee:	lea    r9,[rsp+0x30]
   1400015f3:	mov    QWORD PTR [rsp+0x20],rbx
   1400015f8:	mov    r8d,ebp
   1400015fb:	lea    rdx,[rsp+0x40]
   140001600:	lea    ecx,[rbx+0x33]
   140001603:	call   QWORD PTR [rip+0x6dbf]        # 0x1400083c8
   140001609:	mov    edi,eax
   14000160b:	test   eax,eax
   14000160d:	js     0x140001620
   14000160f:	mov    rax,QWORD PTR [rsp+0x30]
   140001614:	test   rax,rax
   140001617:	je     0x140001620
   140001619:	cmp    bp,WORD PTR [rax]
   14000161c:	cmove  ebx,r15d
   140001620:	cmp    edi,0x80070002
   140001626:	cmove  ebx,r15d
   14000162a:	mov    eax,ebx
   14000162c:	mov    rcx,QWORD PTR [rsp+0x210]
   140001634:	xor    rcx,rsp
   140001637:	call   0x140005950
   14000163c:	lea    r11,[rsp+0x220]
   140001644:	mov    rbx,QWORD PTR [r11+0x28]
   140001648:	mov    rbp,QWORD PTR [r11+0x30]
   14000164c:	mov    rsp,r11
   14000164f:	pop    r15
   140001651:	pop    rdi
   140001652:	pop    rsi
   140001653:	ret    
   140001654:	int3   
   140001655:	int3   
   140001656:	int3   
   140001657:	int3   
   140001658:	int3   
   140001659:	int3   
   14000165a:	int3   
   14000165b:	int3   
   14000165c:	mov    QWORD PTR [rsp+0x18],rbx
   140001661:	mov    QWORD PTR [rsp+0x20],rsi
   140001666:	push   rbp
   140001667:	push   rdi
   140001668:	push   r14
   14000166a:	lea    rbp,[rsp-0x47]
   14000166f:	sub    rsp,0xa0
   140001676:	mov    rax,QWORD PTR [rip+0xc98b]        # 0x14000e008
   14000167d:	xor    rax,rsp
   140001680:	mov    QWORD PTR [rbp+0x3f],rax
   140001684:	mov    DWORD PTR [rbp-0x9],edx
   140001687:	mov    rdi,rcx
   14000168a:	xor    edx,edx
   14000168c:	lea    rcx,[rbp+0x7]
   140001690:	lea    r8d,[rdx+0x28]
   140001694:	call   0x140006a26
   140001699:	xor    eax,eax
   14000169b:	mov    DWORD PTR [rbp-0x19],0x5
   1400016a2:	xor    esi,esi
   1400016a4:	mov    QWORD PTR [rbp+0x31],rax
   1400016a8:	lea    rdx,[rbp-0x1]
   1400016ac:	mov    DWORD PTR [rbp+0x39],eax
   1400016af:	mov    rcx,rdi
   1400016b2:	mov    WORD PTR [rbp+0x3d],ax
   1400016b6:	mov    WORD PTR [rbp+0x2f],si
   1400016ba:	mov    QWORD PTR [rbp-0x11],rsi
   1400016be:	mov    QWORD PTR [rbp-0x21],rsi
   1400016c2:	mov    DWORD PTR [rbp-0x29],esi
   1400016c5:	mov    DWORD PTR [rbp-0x1],0x30
   1400016cc:	call   QWORD PTR [rip+0x6cfe]        # 0x1400083d0
   1400016d2:	mov    ebx,eax
   1400016d4:	test   eax,eax
   1400016d6:	js     0x1400018a5
   1400016dc:	mov    r14,0xffffffff80000002
   1400016e3:	lea    r9,[rbp-0x29]
   1400016e7:	mov    rcx,r14
   1400016ea:	lea    r8,[rip+0x928f]        # 0x14000a980
   1400016f1:	mov    rdx,rdi
   1400016f4:	call   QWORD PTR [rip+0x6946]        # 0x140008040
   1400016fa:	mov    ebx,eax
   1400016fc:	test   eax,eax
   1400016fe:	js     0x1400018a5
   140001704:	cmp    DWORD PTR [rbp+0x13],0x5
   140001708:	jne    0x14000179a
   14000170e:	cmp    DWORD PTR [rbp-0x29],esi
   140001711:	je     0x1400018a5
   140001717:	lea    r9,[rbp-0x25]
   14000171b:	mov    DWORD PTR [rbp-0x25],esi
   14000171e:	lea    r8,[rip+0x928b]        # 0x14000a9b0
   140001725:	mov    rdx,rdi
   140001728:	mov    rcx,r14
   14000172b:	call   QWORD PTR [rip+0x690f]        # 0x140008040
   140001731:	cmp    eax,0x80070002
   140001736:	mov    ebx,eax
   140001738:	cmove  ebx,esi
   14000173b:	test   ebx,ebx
   14000173d:	js     0x1400018a5
   140001743:	mov    eax,DWORD PTR [rbp-0x25]
   140001746:	lea    ecx,[rax+0x7ff8d11e]
   14000174c:	cmp    ecx,0x1e
   14000174f:	ja     0x14000175b
   140001751:	mov    edx,0x5800802d
   140001756:	bt     edx,ecx
   140001759:	jb     0x140001762
   14000175b:	cmp    eax,0x80072f30
   140001760:	jne    0x14000177d
   140001762:	mov    r9d,0x6
   140001768:	lea    r8,[rip+0x9261]        # 0x14000a9d0
   14000176f:	mov    rdx,rdi
   140001772:	mov    rcx,r14
   140001775:	call   QWORD PTR [rip+0x688d]        # 0x140008008
   14000177b:	jmp    0x140001786
   14000177d:	mov    rcx,rdi
   140001780:	call   QWORD PTR [rip+0x6c6a]        # 0x1400083f0
   140001786:	mov    ebx,eax
   140001788:	test   eax,eax
   14000178a:	js     0x1400018a5
   140001790:	cmp    DWORD PTR [rbp+0x13],0x5
   140001794:	je     0x1400018a5
   14000179a:	cmp    DWORD PTR [rbp-0x29],esi
   14000179d:	je     0x1400017af
   14000179f:	mov    rcx,rdi
   1400017a2:	call   QWORD PTR [rip+0x6c48]        # 0x1400083f0
   1400017a8:	mov    ebx,eax
   1400017aa:	jmp    0x1400018a5
   1400017af:	lea    rax,[rbp-0x21]
   1400017b3:	mov    r9d,0x20006
   1400017b9:	xor    r8d,r8d
   1400017bc:	mov    QWORD PTR [rsp+0x20],rax
   1400017c1:	mov    rdx,rdi
   1400017c4:	mov    rcx,r14
   1400017c7:	call   QWORD PTR [rip+0x69db]        # 0x1400081a8
   1400017cd:	test   eax,eax
   1400017cf:	je     0x1400017df
   1400017d1:	movzx  ebx,ax
   1400017d4:	or     ebx,0x80070000
   1400017da:	jmp    0x1400018a0
   1400017df:	mov    rcx,QWORD PTR [rbp-0x21]
   1400017e3:	lea    rax,[rbp-0x9]
   1400017e7:	mov    r14d,0x4
   1400017ed:	lea    rdx,[rip+0x91bc]        # 0x14000a9b0
   1400017f4:	mov    DWORD PTR [rsp+0x28],r14d
   1400017f9:	mov    r9d,r14d
   1400017fc:	xor    r8d,r8d
   1400017ff:	mov    QWORD PTR [rsp+0x20],rax
   140001804:	call   QWORD PTR [rip+0x69a6]        # 0x1400081b0
   14000180a:	test   eax,eax
   14000180c:	jne    0x1400017d1
   14000180e:	lea    rcx,[rbp+0x2f]
   140001812:	call   QWORD PTR [rip+0x6a10]        # 0x140008228
   140001818:	lea    rdx,[rbp-0x11]
   14000181c:	lea    rcx,[rbp+0x2f]
   140001820:	call   QWORD PTR [rip+0x6a1a]        # 0x140008240
   140001826:	mov    edi,0x80070000
   14000182b:	test   eax,eax
   14000182d:	jne    0x140001843
   14000182f:	call   QWORD PTR [rip+0x68ab]        # 0x1400080e0
   140001835:	movzx  ebx,ax
   140001838:	or     ebx,edi
   14000183a:	test   eax,eax
   14000183c:	cmovle ebx,eax
   14000183f:	test   ebx,ebx
   140001841:	js     0x1400018a5
   140001843:	mov    rcx,QWORD PTR [rbp-0x21]
   140001847:	lea    rax,[rbp-0x11]
   14000184b:	mov    DWORD PTR [rsp+0x28],0x8
   140001853:	lea    rdx,[rip+0x9196]        # 0x14000a9f0
   14000185a:	mov    r9d,0x3
   140001860:	mov    QWORD PTR [rsp+0x20],rax
   140001865:	xor    r8d,r8d
   140001868:	call   QWORD PTR [rip+0x6942]        # 0x1400081b0
   14000186e:	test   eax,eax
   140001870:	jne    0x14000189b
   140001872:	mov    rcx,QWORD PTR [rbp-0x21]
   140001876:	lea    rax,[rbp-0x19]
   14000187a:	mov    DWORD PTR [rsp+0x28],r14d
   14000187f:	lea    rdx,[rip+0x914a]        # 0x14000a9d0
   140001886:	mov    r9d,r14d
   140001889:	mov    QWORD PTR [rsp+0x20],rax
   14000188e:	xor    r8d,r8d
   140001891:	call   QWORD PTR [rip+0x6919]        # 0x1400081b0
   140001897:	test   eax,eax
   140001899:	je     0x1400018a5
   14000189b:	movzx  ebx,ax
   14000189e:	or     ebx,edi
   1400018a0:	test   eax,eax
   1400018a2:	cmovle ebx,eax
   1400018a5:	lea    rcx,[rbp-0x1]
   1400018a9:	call   QWORD PTR [rip+0x6b39]        # 0x1400083e8
   1400018af:	mov    rcx,QWORD PTR [rbp-0x21]
   1400018b3:	test   rcx,rcx
   1400018b6:	je     0x1400018be
   1400018b8:	call   QWORD PTR [rip+0x6902]        # 0x1400081c0
   1400018be:	mov    eax,ebx
   1400018c0:	mov    rcx,QWORD PTR [rbp+0x3f]
   1400018c4:	xor    rcx,rsp
   1400018c7:	call   0x140005950
   1400018cc:	lea    r11,[rsp+0xa0]
   1400018d4:	mov    rbx,QWORD PTR [r11+0x30]
   1400018d8:	mov    rsi,QWORD PTR [r11+0x38]
   1400018dc:	mov    rsp,r11
   1400018df:	pop    r14
   1400018e1:	pop    rdi
   1400018e2:	pop    rbp
   1400018e3:	ret    
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400018f1:	mov    QWORD PTR [rsp+0x10],rsi
   1400018f6:	push   rdi
   1400018f7:	sub    rsp,0x20
   1400018fb:	mov    r9,rcx
   1400018fe:	lea    r8,[rip+0x80d3]        # 0x1400099d8
   140001905:	mov    ecx,0x3
   14000190a:	lea    rdx,[rip+0x910f]        # 0x14000aa20
   140001911:	call   QWORD PTR [rip+0x66f9]        # 0x140008010
   140001917:	xor    esi,esi
   140001919:	mov    rdi,rax
   14000191c:	test   rax,rax
   14000191f:	jne    0x140001928
   140001921:	mov    ebx,0x8007000e
   140001926:	jmp    0x140001956
   140001928:	lea    r8,[rip+0x9151]        # 0x14000aa80
   14000192f:	mov    rdx,rax
   140001932:	mov    rcx,0xffffffff80000002
   140001939:	call   QWORD PTR [rip+0x6891]        # 0x1400081d0
   14000193f:	movzx  ebx,ax
   140001942:	or     ebx,0x80070000
   140001948:	test   eax,eax
   14000194a:	cmovle ebx,eax
   14000194d:	cmp    ebx,0x80070002
   140001953:	cmove  ebx,esi
   140001956:	mov    rcx,rdi
   140001959:	call   QWORD PTR [rip+0x67a9]        # 0x140008108
   14000195f:	mov    rsi,QWORD PTR [rsp+0x38]
   140001964:	mov    eax,ebx
   140001966:	mov    rbx,QWORD PTR [rsp+0x30]
   14000196b:	add    rsp,0x20
   14000196f:	pop    rdi
   140001970:	ret    
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	mov    QWORD PTR [rsp+0x10],rbx
   14000197d:	mov    QWORD PTR [rsp+0x18],rsi
   140001982:	push   rbp
   140001983:	push   rdi
   140001984:	push   r14
   140001986:	lea    rbp,[rsp-0x47]
   14000198b:	sub    rsp,0xd0
   140001992:	mov    rax,QWORD PTR [rip+0xc66f]        # 0x14000e008
   140001999:	xor    rax,rsp
   14000199c:	mov    QWORD PTR [rbp+0x37],rax
   1400019a0:	xor    r14d,r14d
   1400019a3:	lea    r9,[rbp-0x35]
   1400019a7:	mov    rdx,rcx
   1400019aa:	mov    DWORD PTR [rbp-0x39],r14d
   1400019ae:	mov    DWORD PTR [rbp-0x31],r14d
   1400019b2:	mov    edi,r14d
   1400019b5:	mov    esi,r14d
   1400019b8:	mov    QWORD PTR [rbp-0x29],r14
   1400019bc:	mov    DWORD PTR [rbp-0x35],r14d
   1400019c0:	mov    rbx,rcx
   1400019c3:	call   0x140004cc8
   1400019c8:	mov    DWORD PTR [rbp-0x39],eax
   1400019cb:	test   eax,eax
   1400019cd:	js     0x140001af3
   1400019d3:	cmp    DWORD PTR [rbp-0x35],r14d
   1400019d7:	jne    0x140001af3
   1400019dd:	mov    r9,rbx
   1400019e0:	lea    r8,[rip+0x7ff1]        # 0x1400099d8
   1400019e7:	lea    rdx,[rip+0x9032]        # 0x14000aa20
   1400019ee:	lea    ecx,[r14+0x3]
   1400019f2:	call   QWORD PTR [rip+0x6618]        # 0x140008010
   1400019f8:	mov    rsi,rax
   1400019fb:	test   rax,rax
   1400019fe:	je     0x140001ada
   140001a04:	mov    QWORD PTR [rsp+0x40],r14
   140001a09:	lea    rax,[rbp-0x29]
   140001a0d:	mov    QWORD PTR [rsp+0x38],rax
   140001a12:	xor    r9d,r9d
   140001a15:	mov    QWORD PTR [rsp+0x30],r14
   140001a1a:	xor    r8d,r8d
   140001a1d:	mov    DWORD PTR [rsp+0x28],0x2001f
   140001a25:	mov    rdx,rsi
   140001a28:	mov    rcx,0xffffffff80000002
   140001a2f:	mov    DWORD PTR [rsp+0x20],r14d
   140001a34:	call   QWORD PTR [rip+0x677e]        # 0x1400081b8
   140001a3a:	movzx  ecx,ax
   140001a3d:	or     ecx,0x80070000
   140001a43:	test   eax,eax
   140001a45:	cmovle ecx,eax
   140001a48:	mov    DWORD PTR [rbp-0x39],ecx
   140001a4b:	test   ecx,ecx
   140001a4d:	js     0x140001af3
   140001a53:	mov    rcx,QWORD PTR [rbp-0x29]
   140001a57:	lea    r9,[rbp-0x31]
   140001a5b:	lea    r8,[rip+0x901e]        # 0x14000aa80
   140001a62:	xor    edx,edx
   140001a64:	call   QWORD PTR [rip+0x65d6]        # 0x140008040
   140001a6a:	cmp    eax,0x80070002
   140001a6f:	cmove  eax,r14d
   140001a73:	mov    DWORD PTR [rbp-0x39],eax
   140001a76:	test   eax,eax
   140001a78:	js     0x140001af3
   140001a7a:	mov    r9d,DWORD PTR [rbp-0x31]
   140001a7e:	inc    r9d
   140001a81:	mov    DWORD PTR [rbp-0x31],r9d
   140001a85:	cmp    r9d,0x3
   140001a89:	jbe    0x140001a9c
   140001a8b:	mov    rcx,rbx
   140001a8e:	call   0x1400018ec
   140001a93:	mov    DWORD PTR [rbp-0x39],0x82ac0007
   140001a9a:	jmp    0x140001af3
   140001a9c:	mov    rcx,QWORD PTR [rbp-0x29]
   140001aa0:	lea    r8,[rip+0x8fd9]        # 0x14000aa80
   140001aa7:	xor    edx,edx
   140001aa9:	call   QWORD PTR [rip+0x6559]        # 0x140008008
   140001aaf:	mov    DWORD PTR [rbp-0x39],eax
   140001ab2:	test   eax,eax
   140001ab4:	js     0x140001af3
   140001ab6:	lea    r9,[rip+0x908b]        # 0x14000ab48
   140001abd:	mov    r8,rbx
   140001ac0:	lea    rdx,[rip+0x9091]        # 0x14000ab58
   140001ac7:	mov    ecx,0x3
   140001acc:	call   QWORD PTR [rip+0x653e]        # 0x140008010
   140001ad2:	mov    rdi,rax
   140001ad5:	test   rax,rax
   140001ad8:	jne    0x140001ae3
   140001ada:	mov    DWORD PTR [rbp-0x39],0x8007000e
   140001ae1:	jmp    0x140001af3
   140001ae3:	mov    rdx,rbx
   140001ae6:	mov    QWORD PTR [rsp+0x20],rax
   140001aeb:	call   0x1400041b8
   140001af0:	mov    DWORD PTR [rbp-0x39],eax
   140001af3:	mov    rcx,rdi
   140001af6:	call   QWORD PTR [rip+0x660c]        # 0x140008108
   140001afc:	mov    rcx,rsi
   140001aff:	call   QWORD PTR [rip+0x6603]        # 0x140008108
   140001b05:	mov    rcx,QWORD PTR [rbp-0x29]
   140001b09:	test   rcx,rcx
   140001b0c:	je     0x140001b14
   140001b0e:	call   QWORD PTR [rip+0x66ac]        # 0x1400081c0
   140001b14:	cmp    DWORD PTR [rip+0xc525],0x5        # 0x14000e040
   140001b1b:	jbe    0x140001bc0
   140001b21:	movabs rdx,0x400000000000
   140001b2b:	test   QWORD PTR [rip+0xc51e],rdx        # 0x14000e050
   140001b32:	je     0x140001bc0
   140001b38:	mov    rax,QWORD PTR [rip+0xc519]        # 0x14000e058
   140001b3f:	and    rax,rdx
   140001b42:	cmp    rax,QWORD PTR [rip+0xc50f]        # 0x14000e058
   140001b49:	jne    0x140001bc0
   140001b4b:	lea    rcx,[rip+0x916a]        # 0x14000acbc
   140001b52:	mov    rax,r14
   140001b55:	test   rbx,rbx
   140001b58:	je     0x140001b6b
   140001b5a:	mov    rcx,rbx
   140001b5d:	or     rax,0xffffffffffffffff
   140001b61:	inc    rax
   140001b64:	cmp    WORD PTR [rbx+rax*2],r14w
   140001b69:	jne    0x140001b61
   140001b6b:	lea    eax,[rax*2+0x2]
   140001b72:	mov    QWORD PTR [rbp+0x7],rcx
   140001b76:	mov    DWORD PTR [rbp+0xf],eax
   140001b79:	mov    eax,DWORD PTR [rbp-0x31]
   140001b7c:	mov    DWORD PTR [rbp-0x35],eax
   140001b7f:	lea    rax,[rbp-0x35]
   140001b83:	mov    QWORD PTR [rbp+0x17],rax
   140001b87:	lea    rax,[rbp-0x39]
   140001b8b:	mov    QWORD PTR [rbp+0x27],rax
   140001b8f:	mov    DWORD PTR [rbp+0x13],r14d
   140001b93:	mov    QWORD PTR [rbp+0x1f],0x4
   140001b9b:	mov    QWORD PTR [rbp+0x2f],0x4
   140001ba3:	lea    rax,[rbp-0x19]
   140001ba7:	mov    QWORD PTR [rsp+0x28],rax
   140001bac:	lea    rdx,[rip+0x980f]        # 0x14000b3c2
   140001bb3:	mov    DWORD PTR [rsp+0x20],0x5
   140001bbb:	call   0x140001008
   140001bc0:	mov    eax,DWORD PTR [rbp-0x39]
   140001bc3:	mov    rcx,QWORD PTR [rbp+0x37]
   140001bc7:	xor    rcx,rsp
   140001bca:	call   0x140005950
   140001bcf:	lea    r11,[rsp+0xd0]
   140001bd7:	mov    rbx,QWORD PTR [r11+0x28]
   140001bdb:	mov    rsi,QWORD PTR [r11+0x30]
   140001bdf:	mov    rsp,r11
   140001be2:	pop    r14
   140001be4:	pop    rdi
   140001be5:	pop    rbp
   140001be6:	ret    
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	rex push rbp
   140001bf2:	push   rbx
   140001bf3:	push   rsi
   140001bf4:	push   rdi
   140001bf5:	push   r12
   140001bf7:	push   r13
   140001bf9:	push   r14
   140001bfb:	push   r15
   140001bfd:	lea    rbp,[rsp-0x198]
   140001c05:	sub    rsp,0x298
   140001c0c:	mov    rax,QWORD PTR [rip+0xc3f5]        # 0x14000e008
   140001c13:	xor    rax,rsp
   140001c16:	mov    QWORD PTR [rbp+0x180],rax
   140001c1d:	mov    r13b,BYTE PTR [rbp+0x200]
   140001c24:	xor    eax,eax
   140001c26:	mov    r15d,r8d
   140001c29:	mov    DWORD PTR [rsp+0x50],eax
   140001c2d:	mov    rsi,rdx
   140001c30:	mov    DWORD PTR [rsp+0x60],eax
   140001c34:	mov    rdi,rcx
   140001c37:	mov    QWORD PTR [rsp+0x68],rax
   140001c3c:	xor    edx,edx
   140001c3e:	mov    QWORD PTR [rsp+0x58],rax
   140001c43:	mov    r8d,0x1c4
   140001c49:	lea    rcx,[rbp-0x7c]
   140001c4d:	mov    ebx,eax
   140001c4f:	mov    r14d,eax
   140001c52:	mov    r12d,r9d
   140001c55:	call   0x140006a26
   140001c5a:	and    QWORD PTR [rsp+0x70],rbx
   140001c5f:	lea    rdx,[rbp-0x80]
   140001c63:	and    DWORD PTR [rsp+0x64],ebx
   140001c67:	lea    ecx,[r14+0x22]
   140001c6b:	or     r8d,0xffffffff
   140001c6f:	mov    DWORD PTR [rbp-0x80],0x1c8
   140001c76:	call   QWORD PTR [rip+0x672c]        # 0x1400083a8
   140001c7c:	test   eax,eax
   140001c7e:	js     0x140001d15
   140001c84:	lea    r8,[rbp-0x80]
   140001c88:	mov    rcx,rdi
   140001c8b:	lea    edx,[r14+0x1]
   140001c8f:	call   QWORD PTR [rip+0x671b]        # 0x1400083b0
   140001c95:	test   eax,eax
   140001c97:	js     0x140001d15
   140001c99:	or     r8d,0xffffffff
   140001c9d:	lea    rdx,[rbp-0x80]
   140001ca1:	lea    ecx,[r14+0x22]
   140001ca5:	call   QWORD PTR [rip+0x670d]        # 0x1400083b8
   140001cab:	test   eax,eax
   140001cad:	je     0x140001d15
   140001caf:	or     r8d,0xffffffff
   140001cb3:	lea    rdx,[rbp-0x80]
   140001cb7:	lea    ecx,[r14+0x22]
   140001cbb:	call   QWORD PTR [rip+0x66ff]        # 0x1400083c0
   140001cc1:	test   eax,eax
   140001cc3:	je     0x140001d15
   140001cc5:	and    QWORD PTR [rsp+0x20],rbx
   140001cca:	lea    r9,[rsp+0x70]
   140001ccf:	or     r8d,0xffffffff
   140001cd3:	lea    rdx,[rbp-0x80]
   140001cd7:	lea    ecx,[r14+0x22]
   140001cdb:	call   QWORD PTR [rip+0x66e7]        # 0x1400083c8
   140001ce1:	test   eax,eax
   140001ce3:	js     0x140001d15
   140001ce5:	mov    rax,QWORD PTR [rsp+0x70]
   140001cea:	test   rax,rax
   140001ced:	je     0x140001d15
   140001cef:	or     ecx,0xffffffff
   140001cf2:	cmp    cx,WORD PTR [rax]
   140001cf5:	jne    0x140001d15
   140001cf7:	lea    rcx,[rsp+0x64]
   140001cfc:	call   0x14000529c
   140001d01:	test   eax,eax
   140001d03:	js     0x140001d15
   140001d05:	cmp    DWORD PTR [rsp+0x64],ebx
   140001d09:	je     0x140001d15
   140001d0b:	mov    edx,0x82ac0004
   140001d10:	jmp    0x140001edd
   140001d15:	mov    rcx,rdi
   140001d18:	call   0x140001544
   140001d1d:	test   eax,eax
   140001d1f:	je     0x140001d2b
   140001d21:	mov    edx,0x82ac0006
   140001d26:	jmp    0x140001edd
   140001d2b:	mov    r9,rdi
   140001d2e:	lea    r8,[rip+0x7ca3]        # 0x1400099d8
   140001d35:	lea    rdx,[rip+0x8ce4]        # 0x14000aa20
   140001d3c:	mov    ecx,0x3
   140001d41:	call   QWORD PTR [rip+0x62c9]        # 0x140008010
   140001d47:	xor    ecx,ecx
   140001d49:	mov    r14,rax
   140001d4c:	test   rax,rax
   140001d4f:	jne    0x140001d5b
   140001d51:	mov    edx,0x8007000e
   140001d56:	jmp    0x140001edd
   140001d5b:	mov    QWORD PTR [rsp+0x40],rcx
   140001d60:	lea    rax,[rsp+0x58]
   140001d65:	mov    QWORD PTR [rsp+0x38],rax
   140001d6a:	xor    r9d,r9d
   140001d6d:	mov    QWORD PTR [rsp+0x30],rcx
   140001d72:	xor    r8d,r8d
   140001d75:	mov    DWORD PTR [rsp+0x28],0x2001f
   140001d7d:	mov    rdx,r14
   140001d80:	mov    DWORD PTR [rsp+0x20],ecx
   140001d84:	mov    rcx,0xffffffff80000002
   140001d8b:	call   QWORD PTR [rip+0x6427]        # 0x1400081b8
   140001d91:	movzx  edx,ax
   140001d94:	or     edx,0x80070000
   140001d9a:	test   eax,eax
   140001d9c:	cmovle edx,eax
   140001d9f:	mov    DWORD PTR [rsp+0x50],edx
   140001da3:	test   edx,edx
   140001da5:	js     0x140001ef9
   140001dab:	mov    rcx,QWORD PTR [rsp+0x58]
   140001db0:	xor    edx,edx
   140001db2:	test   rsi,rsi
   140001db5:	jne    0x140001e17
   140001db7:	mov    r9d,r15d
   140001dba:	lea    r8,[rip+0x8dff]        # 0x14000abc0
   140001dc1:	call   QWORD PTR [rip+0x6241]        # 0x140008008
   140001dc7:	mov    DWORD PTR [rsp+0x50],eax
   140001dcb:	mov    edx,eax
   140001dcd:	test   eax,eax
   140001dcf:	js     0x140001ef9
   140001dd5:	mov    rcx,QWORD PTR [rsp+0x58]
   140001dda:	lea    r8,[rip+0x8df7]        # 0x14000abd8
   140001de1:	mov    r9d,r12d
   140001de4:	xor    edx,edx
   140001de6:	call   QWORD PTR [rip+0x621c]        # 0x140008008
   140001dec:	mov    DWORD PTR [rsp+0x50],eax
   140001df0:	mov    edx,eax
   140001df2:	test   eax,eax
   140001df4:	js     0x140001ef9
   140001dfa:	mov    r9d,DWORD PTR [rbp+0x208]
   140001e01:	lea    r8,[rip+0x8de0]        # 0x14000abe8
   140001e08:	mov    rcx,QWORD PTR [rsp+0x58]
   140001e0d:	xor    edx,edx
   140001e0f:	call   QWORD PTR [rip+0x61f3]        # 0x140008008
   140001e15:	jmp    0x140001e27
   140001e17:	mov    r9,rsi
   140001e1a:	lea    r8,[rip+0x8dd7]        # 0x14000abf8
   140001e21:	call   QWORD PTR [rip+0x61d9]        # 0x140008000
   140001e27:	mov    DWORD PTR [rsp+0x50],eax
   140001e2b:	mov    edx,eax
   140001e2d:	test   eax,eax
   140001e2f:	js     0x140001ef9
   140001e35:	lea    rax,[rip+0x8de4]        # 0x14000ac20
   140001e3c:	test   r13b,r13b
   140001e3f:	lea    r8,[rip+0x8e2a]        # 0x14000ac70
   140001e46:	mov    rdx,rdi
   140001e49:	cmove  r8,rax
   140001e4d:	lea    r9,[rsp+0x68]
   140001e52:	call   0x140003c74
   140001e57:	mov    DWORD PTR [rsp+0x50],eax
   140001e5b:	mov    edx,eax
   140001e5d:	test   eax,eax
   140001e5f:	jns    0x140001eb4
   140001e61:	cmp    DWORD PTR [rip+0xc1d8],0x5        # 0x14000e040
   140001e68:	jbe    0x140001ead
   140001e6a:	and    DWORD PTR [rbp+0x17c],ebx
   140001e70:	lea    rax,[rsp+0x50]
   140001e75:	mov    QWORD PTR [rbp+0x170],rax
   140001e7c:	mov    DWORD PTR [rbp+0x178],0x4
   140001e86:	lea    rax,[rbp+0x150]
   140001e8d:	mov    QWORD PTR [rsp+0x28],rax
   140001e92:	lea    rdx,[rip+0x94fc]        # 0x14000b395
   140001e99:	mov    DWORD PTR [rsp+0x20],0x3
   140001ea1:	call   0x140001008
   140001ea6:	mov    rbx,QWORD PTR [rsp+0x68]
   140001eab:	jmp    0x140001ef5
   140001ead:	mov    rbx,QWORD PTR [rsp+0x68]
   140001eb2:	jmp    0x140001ef9
   140001eb4:	mov    rbx,QWORD PTR [rsp+0x68]
   140001eb9:	or     edx,0xffffffff
   140001ebc:	mov    rcx,rbx
   140001ebf:	call   QWORD PTR [rip+0x633b]        # 0x140008200
   140001ec5:	test   eax,eax
   140001ec7:	je     0x140001ee3
   140001ec9:	call   QWORD PTR [rip+0x6211]        # 0x1400080e0
   140001ecf:	movzx  edx,ax
   140001ed2:	or     edx,0x80070000
   140001ed8:	test   eax,eax
   140001eda:	cmovle edx,eax
   140001edd:	mov    DWORD PTR [rsp+0x50],edx
   140001ee1:	jmp    0x140001ef9
   140001ee3:	lea    rdx,[rsp+0x60]
   140001ee8:	mov    rcx,rbx
   140001eeb:	call   QWORD PTR [rip+0x6277]        # 0x140008168
   140001ef1:	test   eax,eax
   140001ef3:	je     0x140001ec9
   140001ef5:	mov    edx,DWORD PTR [rsp+0x50]
   140001ef9:	mov    eax,DWORD PTR [rsp+0x60]
   140001efd:	test   eax,eax
   140001eff:	jne    0x140001f05
   140001f01:	test   edx,edx
   140001f03:	jns    0x140001f7e
   140001f05:	test   edx,edx
   140001f07:	js     0x140001f1b
   140001f09:	movzx  edx,ax
   140001f0c:	or     edx,0x80070000
   140001f12:	test   eax,eax
   140001f14:	cmovle edx,eax
   140001f17:	mov    DWORD PTR [rsp+0x50],edx
   140001f1b:	cmp    DWORD PTR [rip+0xc11e],0x5        # 0x14000e040
   140001f22:	jbe    0x140001f6d
   140001f24:	and    DWORD PTR [rbp+0x17c],0x0
   140001f2b:	movsxd rax,edx
   140001f2e:	mov    QWORD PTR [rsp+0x70],rax
   140001f33:	lea    rax,[rsp+0x70]
   140001f38:	mov    QWORD PTR [rbp+0x170],rax
   140001f3f:	mov    DWORD PTR [rbp+0x178],0x8
   140001f49:	lea    rax,[rbp+0x150]
   140001f50:	mov    QWORD PTR [rsp+0x28],rax
   140001f55:	lea    rdx,[rip+0x9404]        # 0x14000b360
   140001f5c:	mov    DWORD PTR [rsp+0x20],0x3
   140001f64:	call   0x140001008
   140001f69:	mov    edx,DWORD PTR [rsp+0x50]
   140001f6d:	test   edx,edx
   140001f6f:	jns    0x140001f7e
   140001f71:	test   rsi,rsi
   140001f74:	je     0x140001f7e
   140001f76:	mov    rcx,rsi
   140001f79:	call   0x14000165c
   140001f7e:	mov    rcx,r14
   140001f81:	call   QWORD PTR [rip+0x6181]        # 0x140008108
   140001f87:	mov    rcx,QWORD PTR [rsp+0x58]
   140001f8c:	test   rcx,rcx
   140001f8f:	je     0x140001f97
   140001f91:	call   QWORD PTR [rip+0x6229]        # 0x1400081c0
   140001f97:	lea    rax,[rbx-0x1]
   140001f9b:	cmp    rax,0xfffffffffffffffd
   140001f9f:	ja     0x140001faa
   140001fa1:	mov    rcx,rbx
   140001fa4:	call   QWORD PTR [rip+0x614e]        # 0x1400080f8
   140001faa:	mov    eax,DWORD PTR [rsp+0x50]
   140001fae:	mov    rcx,QWORD PTR [rbp+0x180]
   140001fb5:	xor    rcx,rsp
   140001fb8:	call   0x140005950
   140001fbd:	add    rsp,0x298
   140001fc4:	pop    r15
   140001fc6:	pop    r14
   140001fc8:	pop    r13
   140001fca:	pop    r12
   140001fcc:	pop    rdi
   140001fcd:	pop    rsi
   140001fce:	pop    rbx
   140001fcf:	pop    rbp
   140001fd0:	ret    
   140001fd1:	int3   
   140001fd2:	int3   
   140001fd3:	int3   
   140001fd4:	int3   
   140001fd5:	int3   
   140001fd6:	int3   
   140001fd7:	int3   
   140001fd8:	mov    rax,rsp
   140001fdb:	mov    QWORD PTR [rax+0x10],rbx
   140001fdf:	mov    QWORD PTR [rax+0x18],rsi
   140001fe3:	mov    QWORD PTR [rax+0x20],rdi
   140001fe7:	push   rbp
   140001fe8:	push   r14
   140001fea:	push   r15
   140001fec:	lea    rbp,[rax-0x5f]
   140001ff0:	sub    rsp,0xc0
   140001ff7:	mov    rax,QWORD PTR [rip+0xc00a]        # 0x14000e008
   140001ffe:	xor    rax,rsp
   140002001:	mov    QWORD PTR [rbp+0x37],rax
   140002005:	xor    r15d,r15d
   140002008:	lea    r9,[rbp-0x45]
   14000200c:	lea    r8,[rbp-0x41]
   140002010:	mov    DWORD PTR [rbp-0x49],r15d
   140002014:	mov    rdi,rcx
   140002017:	mov    QWORD PTR [rbp-0x41],r15
   14000201b:	mov    DWORD PTR [rbp-0x45],r15d
   14000201f:	mov    esi,r15d
   140002022:	lea    edx,[r15+0x1]
   140002026:	call   QWORD PTR [rip+0x63b4]        # 0x1400083e0
   14000202c:	mov    DWORD PTR [rbp-0x49],eax
   14000202f:	mov    edx,eax
   140002031:	cmp    eax,0x80070490
   140002036:	jne    0x140002043
   140002038:	mov    edx,r15d
   14000203b:	mov    DWORD PTR [rbp-0x49],edx
   14000203e:	jmp    0x1400020ce
   140002043:	test   eax,eax
   140002045:	js     0x1400020ce
   14000204b:	mov    ebx,r15d
   14000204e:	cmp    DWORD PTR [rbp-0x45],r15d
   140002052:	jbe    0x1400020ce
   140002054:	xor    edx,edx
   140002056:	lea    rcx,[rbp-0x21]
   14000205a:	lea    r8d,[rdx+0x28]
   14000205e:	call   0x140006a26
   140002063:	mov    rcx,QWORD PTR [rbp-0x41]
   140002067:	lea    rdx,[rbp-0x29]
   14000206b:	mov    DWORD PTR [rbp-0x29],0x30
   140002072:	mov    r14d,ebx
   140002075:	mov    rcx,QWORD PTR [rcx+r14*8]
   140002079:	call   QWORD PTR [rip+0x6351]        # 0x1400083d0
   14000207f:	mov    DWORD PTR [rbp-0x49],eax
   140002082:	mov    edx,eax
   140002084:	test   eax,eax
   140002086:	js     0x1400020ce
   140002088:	cmp    DWORD PTR [rbp-0x15],0x6
   14000208c:	jne    0x1400020c7
   14000208e:	mov    rdx,QWORD PTR [rbp-0x41]
   140002092:	xor    r8d,r8d
   140002095:	mov    eax,DWORD PTR [rbp-0x1]
   140002098:	mov    rcx,rdi
   14000209b:	mov    r9d,DWORD PTR [rbp-0x19]
   14000209f:	mov    DWORD PTR [rsp+0x28],eax
   1400020a3:	mov    rdx,QWORD PTR [rdx+r14*8]
   1400020a7:	mov    BYTE PTR [rsp+0x20],r15b
   1400020ac:	call   0x140001bf0
   1400020b1:	lea    rcx,[rbp-0x29]
   1400020b5:	mov    DWORD PTR [rbp-0x49],eax
   1400020b8:	call   QWORD PTR [rip+0x632a]        # 0x1400083e8
   1400020be:	mov    edx,DWORD PTR [rbp-0x49]
   1400020c1:	test   edx,edx
   1400020c3:	js     0x1400020ce
   1400020c5:	inc    esi
   1400020c7:	inc    ebx
   1400020c9:	cmp    ebx,DWORD PTR [rbp-0x45]
   1400020cc:	jb     0x140002054
   1400020ce:	mov    rax,QWORD PTR [rbp-0x41]
   1400020d2:	test   rax,rax
   1400020d5:	je     0x140002103
   1400020d7:	mov    ebx,r15d
   1400020da:	cmp    DWORD PTR [rbp-0x45],r15d
   1400020de:	jbe    0x1400020f7
   1400020e0:	mov    ecx,ebx
   1400020e2:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400020e6:	call   QWORD PTR [rip+0x601c]        # 0x140008108
   1400020ec:	mov    rax,QWORD PTR [rbp-0x41]
   1400020f0:	inc    ebx
   1400020f2:	cmp    ebx,DWORD PTR [rbp-0x45]
   1400020f5:	jb     0x1400020e0
   1400020f7:	mov    rcx,rax
   1400020fa:	call   QWORD PTR [rip+0x6008]        # 0x140008108
   140002100:	mov    edx,DWORD PTR [rbp-0x49]
   140002103:	cmp    DWORD PTR [rip+0xbf36],0x5        # 0x14000e040
   14000210a:	jbe    0x1400021c9
   140002110:	movabs r8,0x400000000000
   14000211a:	test   QWORD PTR [rip+0xbf2f],r8        # 0x14000e050
   140002121:	je     0x1400021c9
   140002127:	mov    rax,QWORD PTR [rip+0xbf2a]        # 0x14000e058
   14000212e:	and    rax,r8
   140002131:	cmp    rax,QWORD PTR [rip+0xbf20]        # 0x14000e058
   140002138:	jne    0x1400021c9
   14000213e:	lea    rcx,[rip+0x8b77]        # 0x14000acbc
   140002145:	mov    rax,r15
   140002148:	test   rdi,rdi
   14000214b:	je     0x14000215e
   14000214d:	mov    rcx,rdi
   140002150:	or     rax,0xffffffffffffffff
   140002154:	inc    rax
   140002157:	cmp    WORD PTR [rdi+rax*2],r15w
   14000215c:	jne    0x140002154
   14000215e:	lea    eax,[rax*2+0x2]
   140002165:	mov    QWORD PTR [rbp-0x9],rcx
   140002169:	mov    DWORD PTR [rbp-0x1],eax
   14000216c:	lea    rax,[rbp-0x39]
   140002170:	mov    QWORD PTR [rbp+0x7],rax
   140002174:	mov    eax,DWORD PTR [rbp-0x45]
   140002177:	mov    DWORD PTR [rbp-0x35],eax
   14000217a:	lea    rax,[rbp-0x35]
   14000217e:	mov    QWORD PTR [rbp+0x17],rax
   140002182:	lea    rax,[rbp-0x49]
   140002186:	mov    QWORD PTR [rbp+0x27],rax
   14000218a:	mov    DWORD PTR [rbp+0x3],r15d
   14000218e:	mov    DWORD PTR [rbp-0x39],esi
   140002191:	mov    QWORD PTR [rbp+0xf],0x4
   140002199:	mov    QWORD PTR [rbp+0x1f],0x4
   1400021a1:	mov    QWORD PTR [rbp+0x2f],0x4
   1400021a9:	lea    rax,[rbp-0x29]
   1400021ad:	mov    QWORD PTR [rsp+0x28],rax
   1400021b2:	lea    rdx,[rip+0x914e]        # 0x14000b307
   1400021b9:	mov    DWORD PTR [rsp+0x20],0x6
   1400021c1:	call   0x140001008
   1400021c6:	mov    edx,DWORD PTR [rbp-0x49]
   1400021c9:	mov    eax,edx
   1400021cb:	mov    rcx,QWORD PTR [rbp+0x37]
   1400021cf:	xor    rcx,rsp
   1400021d2:	call   0x140005950
   1400021d7:	lea    r11,[rsp+0xc0]
   1400021df:	mov    rbx,QWORD PTR [r11+0x28]
   1400021e3:	mov    rsi,QWORD PTR [r11+0x30]
   1400021e7:	mov    rdi,QWORD PTR [r11+0x38]
   1400021eb:	mov    rsp,r11
   1400021ee:	pop    r15
   1400021f0:	pop    r14
   1400021f2:	pop    rbp
   1400021f3:	ret    
   1400021f4:	int3   
   1400021f5:	int3   
   1400021f6:	int3   
   1400021f7:	int3   
   1400021f8:	int3   
   1400021f9:	int3   
   1400021fa:	int3   
   1400021fb:	int3   
   1400021fc:	mov    rax,rsp
   1400021ff:	mov    QWORD PTR [rax+0x10],rbx
   140002203:	mov    QWORD PTR [rax+0x18],rsi
   140002207:	mov    QWORD PTR [rax+0x20],rdi
   14000220b:	push   rbp
   14000220c:	push   r14
   14000220e:	push   r15
   140002210:	lea    rbp,[rax-0x5f]
   140002214:	sub    rsp,0xc0
   14000221b:	mov    rax,QWORD PTR [rip+0xbde6]        # 0x14000e008
   140002222:	xor    rax,rsp
   140002225:	mov    QWORD PTR [rbp+0x37],rax
   140002229:	xor    r15d,r15d
   14000222c:	lea    r9,[rbp-0x45]
   140002230:	lea    r8,[rbp-0x41]
   140002234:	mov    DWORD PTR [rbp-0x49],r15d
   140002238:	mov    rdi,rcx
   14000223b:	mov    QWORD PTR [rbp-0x41],r15
   14000223f:	mov    DWORD PTR [rbp-0x45],r15d
   140002243:	mov    esi,r15d
   140002246:	lea    edx,[r15+0x1]
   14000224a:	call   QWORD PTR [rip+0x6190]        # 0x1400083e0
   140002250:	mov    DWORD PTR [rbp-0x49],eax
   140002253:	mov    edx,eax
   140002255:	cmp    eax,0x80070490
   14000225a:	jne    0x140002264
   14000225c:	mov    edx,r15d
   14000225f:	mov    DWORD PTR [rbp-0x49],edx
   140002262:	jmp    0x1400022d6
   140002264:	test   eax,eax
   140002266:	js     0x1400022d6
   140002268:	mov    ebx,r15d
   14000226b:	cmp    DWORD PTR [rbp-0x45],r15d
   14000226f:	jbe    0x1400022d6
   140002271:	xor    edx,edx
   140002273:	lea    rcx,[rbp-0x21]
   140002277:	lea    r8d,[rdx+0x28]
   14000227b:	call   0x140006a26
   140002280:	mov    rcx,QWORD PTR [rbp-0x41]
   140002284:	lea    rdx,[rbp-0x29]
   140002288:	mov    DWORD PTR [rbp-0x29],0x30
   14000228f:	mov    r14d,ebx
   140002292:	mov    rcx,QWORD PTR [rcx+r14*8]
   140002296:	call   QWORD PTR [rip+0x6134]        # 0x1400083d0
   14000229c:	mov    DWORD PTR [rbp-0x49],eax
   14000229f:	mov    edx,eax
   1400022a1:	test   eax,eax
   1400022a3:	js     0x1400022d6
   1400022a5:	cmp    DWORD PTR [rbp-0x15],0x6
   1400022a9:	jne    0x1400022cf
   1400022ab:	mov    rcx,QWORD PTR [rbp-0x41]
   1400022af:	mov    rcx,QWORD PTR [rcx+r14*8]
   1400022b3:	call   QWORD PTR [rip+0x6137]        # 0x1400083f0
   1400022b9:	lea    rcx,[rbp-0x29]
   1400022bd:	mov    DWORD PTR [rbp-0x49],eax
   1400022c0:	call   QWORD PTR [rip+0x6122]        # 0x1400083e8
   1400022c6:	mov    edx,DWORD PTR [rbp-0x49]
   1400022c9:	test   edx,edx
   1400022cb:	js     0x1400022d6
   1400022cd:	inc    esi
   1400022cf:	inc    ebx
   1400022d1:	cmp    ebx,DWORD PTR [rbp-0x45]
   1400022d4:	jb     0x140002271
   1400022d6:	mov    rax,QWORD PTR [rbp-0x41]
   1400022da:	test   rax,rax
   1400022dd:	je     0x14000230b
   1400022df:	mov    ebx,r15d
   1400022e2:	cmp    DWORD PTR [rbp-0x45],r15d
   1400022e6:	jbe    0x1400022ff
   1400022e8:	mov    ecx,ebx
   1400022ea:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400022ee:	call   QWORD PTR [rip+0x5e14]        # 0x140008108
   1400022f4:	mov    rax,QWORD PTR [rbp-0x41]
   1400022f8:	inc    ebx
   1400022fa:	cmp    ebx,DWORD PTR [rbp-0x45]
   1400022fd:	jb     0x1400022e8
   1400022ff:	mov    rcx,rax
   140002302:	call   QWORD PTR [rip+0x5e00]        # 0x140008108
   140002308:	mov    edx,DWORD PTR [rbp-0x49]
   14000230b:	cmp    DWORD PTR [rip+0xbd2e],0x5        # 0x14000e040
   140002312:	jbe    0x1400023d1
   140002318:	movabs r8,0x400000000000
   140002322:	test   QWORD PTR [rip+0xbd27],r8        # 0x14000e050
   140002329:	je     0x1400023d1
   14000232f:	mov    rax,QWORD PTR [rip+0xbd22]        # 0x14000e058
   140002336:	and    rax,r8
   140002339:	cmp    rax,QWORD PTR [rip+0xbd18]        # 0x14000e058
   140002340:	jne    0x1400023d1
   140002346:	lea    rcx,[rip+0x896f]        # 0x14000acbc
   14000234d:	mov    rax,r15
   140002350:	test   rdi,rdi
   140002353:	je     0x140002366
   140002355:	mov    rcx,rdi
   140002358:	or     rax,0xffffffffffffffff
   14000235c:	inc    rax
   14000235f:	cmp    WORD PTR [rdi+rax*2],r15w
   140002364:	jne    0x14000235c
   140002366:	lea    eax,[rax*2+0x2]
   14000236d:	mov    QWORD PTR [rbp-0x9],rcx
   140002371:	mov    DWORD PTR [rbp-0x1],eax
   140002374:	lea    rax,[rbp-0x39]
   140002378:	mov    QWORD PTR [rbp+0x7],rax
   14000237c:	mov    eax,DWORD PTR [rbp-0x45]
   14000237f:	mov    DWORD PTR [rbp-0x35],eax
   140002382:	lea    rax,[rbp-0x35]
   140002386:	mov    QWORD PTR [rbp+0x17],rax
   14000238a:	lea    rax,[rbp-0x49]
   14000238e:	mov    QWORD PTR [rbp+0x27],rax
   140002392:	mov    DWORD PTR [rbp+0x3],r15d
   140002396:	mov    DWORD PTR [rbp-0x39],esi
   140002399:	mov    QWORD PTR [rbp+0xf],0x4
   1400023a1:	mov    QWORD PTR [rbp+0x1f],0x4
   1400023a9:	mov    QWORD PTR [rbp+0x2f],0x4
   1400023b1:	lea    rax,[rbp-0x29]
   1400023b5:	mov    QWORD PTR [rsp+0x28],rax
   1400023ba:	lea    rdx,[rip+0x8eed]        # 0x14000b2ae
   1400023c1:	mov    DWORD PTR [rsp+0x20],0x6
   1400023c9:	call   0x140001008
   1400023ce:	mov    edx,DWORD PTR [rbp-0x49]
   1400023d1:	mov    eax,edx
   1400023d3:	mov    rcx,QWORD PTR [rbp+0x37]
   1400023d7:	xor    rcx,rsp
   1400023da:	call   0x140005950
   1400023df:	lea    r11,[rsp+0xc0]
   1400023e7:	mov    rbx,QWORD PTR [r11+0x28]
   1400023eb:	mov    rsi,QWORD PTR [r11+0x30]
   1400023ef:	mov    rdi,QWORD PTR [r11+0x38]
   1400023f3:	mov    rsp,r11
   1400023f6:	pop    r15
   1400023f8:	pop    r14
   1400023fa:	pop    rbp
   1400023fb:	ret    
   1400023fc:	int3   
   1400023fd:	int3   
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	int3   
   140002401:	int3   
   140002402:	int3   
   140002403:	int3   
   140002404:	mov    rax,rsp
   140002407:	mov    QWORD PTR [rax+0x10],rbx
   14000240b:	mov    QWORD PTR [rax+0x18],rsi
   14000240f:	mov    QWORD PTR [rax+0x20],rdi
   140002413:	push   rbp
   140002414:	push   r14
   140002416:	push   r15
   140002418:	lea    rbp,[rax-0x5f]
   14000241c:	sub    rsp,0xb0
   140002423:	mov    rax,QWORD PTR [rip+0xbbde]        # 0x14000e008
   14000242a:	xor    rax,rsp
   14000242d:	mov    QWORD PTR [rbp+0x37],rax
   140002431:	xor    r15d,r15d
   140002434:	mov    rsi,rcx
   140002437:	xor    edx,edx
   140002439:	mov    QWORD PTR [rbp-0x31],r15
   14000243d:	lea    rcx,[rbp-0x1d]
   140002441:	mov    DWORD PTR [rbp-0x21],r15d
   140002445:	lea    r8d,[r15+0x24]
   140002449:	call   0x140006a26
   14000244e:	mov    rcx,QWORD PTR [rsi+0x8]
   140002452:	lea    r8,[rbp-0x31]
   140002456:	lea    rdx,[rip+0x88e3]        # 0x14000ad40
   14000245d:	mov    QWORD PTR [rbp-0x39],r15
   140002461:	mov    DWORD PTR [rbp-0x29],r15d
   140002465:	call   QWORD PTR [rip+0x5bb5]        # 0x140008020
   14000246b:	mov    ebx,eax
   14000246d:	test   eax,eax
   14000246f:	js     0x1400024b3
   140002471:	mov    rcx,QWORD PTR [rbp-0x31]
   140002475:	test   rcx,rcx
   140002478:	je     0x1400026a5
   14000247e:	mov    rdx,rcx
   140002481:	lea    r8d,[r15+0x23]
   140002485:	lea    rcx,[rip+0x8834]        # 0x14000acc0
   14000248c:	call   QWORD PTR [rip+0x5b96]        # 0x140008028
   140002492:	test   eax,eax
   140002494:	jne    0x1400026a1
   14000249a:	lea    rdx,[rbp-0x21]
   14000249e:	mov    rcx,rsi
   1400024a1:	call   0x140002714
   1400024a6:	mov    ebx,eax
   1400024a8:	cmp    eax,0x82ab000c
   1400024ad:	jne    0x140002506
   1400024af:	lea    ebx,[r15+0x1]
   1400024b3:	mov    rcx,QWORD PTR [rbp-0x31]
   1400024b7:	call   QWORD PTR [rip+0x5c4b]        # 0x140008108
   1400024bd:	mov    rcx,QWORD PTR [rbp-0x1]
   1400024c1:	call   QWORD PTR [rip+0x5c41]        # 0x140008108
   1400024c7:	mov    rcx,QWORD PTR [rbp-0x39]
   1400024cb:	call   QWORD PTR [rip+0x5c37]        # 0x140008108
   1400024d1:	mov    rcx,QWORD PTR [rbp-0x11]
   1400024d5:	call   QWORD PTR [rip+0x5dcd]        # 0x1400082a8
   1400024db:	mov    eax,ebx
   1400024dd:	mov    rcx,QWORD PTR [rbp+0x37]
   1400024e1:	xor    rcx,rsp
   1400024e4:	call   0x140005950
   1400024e9:	lea    r11,[rsp+0xb0]
   1400024f1:	mov    rbx,QWORD PTR [r11+0x28]
   1400024f5:	mov    rsi,QWORD PTR [r11+0x30]
   1400024f9:	mov    rdi,QWORD PTR [r11+0x38]
   1400024fd:	mov    rsp,r11
   140002500:	pop    r15
   140002502:	pop    r14
   140002504:	pop    rbp
   140002505:	ret    
   140002506:	test   eax,eax
   140002508:	js     0x1400024b3
   14000250a:	mov    edx,DWORD PTR [rbp-0x9]
   14000250d:	lea    r8,[rbp-0x39]
   140002511:	mov    rcx,QWORD PTR [rbp-0x11]
   140002515:	call   QWORD PTR [rip+0x5ebd]        # 0x1400083d8
   14000251b:	mov    ebx,eax
   14000251d:	test   eax,eax
   14000251f:	js     0x1400024b3
   140002521:	mov    rbx,QWORD PTR [rbp-0x1]
   140002525:	test   rbx,rbx
   140002528:	je     0x140002553
   14000252a:	lea    r9,[rbp-0x29]
   14000252e:	mov    rdx,rbx
   140002531:	lea    r8,[rip+0x8448]        # 0x14000a980
   140002538:	mov    rcx,0xffffffff80000002
   14000253f:	call   QWORD PTR [rip+0x5afb]        # 0x140008040
   140002545:	mov    ebx,eax
   140002547:	test   eax,eax
   140002549:	js     0x1400024b3
   14000254f:	mov    rbx,QWORD PTR [rbp-0x1]
   140002553:	mov    r9,QWORD PTR [rbp-0x39]
   140002557:	lea    rax,[rip+0x8612]        # 0x14000ab70
   14000255e:	lea    r8,[rip+0x7473]        # 0x1400099d8
   140002565:	mov    QWORD PTR [rsp+0x28],rax
   14000256a:	lea    rdx,[rip+0x84af]        # 0x14000aa20
   140002571:	mov    QWORD PTR [rsp+0x20],r8
   140002576:	mov    ecx,0x5
   14000257b:	mov    edi,r15d
   14000257e:	call   QWORD PTR [rip+0x5a8c]        # 0x140008010
   140002584:	mov    r14,rax
   140002587:	test   rax,rax
   14000258a:	je     0x1400025a2
   14000258c:	mov    rdx,rax
   14000258f:	mov    rcx,rbx
   140002592:	call   QWORD PTR [rip+0x5a80]        # 0x140008018
   140002598:	test   eax,eax
   14000259a:	mov    ebx,0x1
   14000259f:	cmove  edi,ebx
   1400025a2:	mov    rcx,r14
   1400025a5:	call   QWORD PTR [rip+0x5b5d]        # 0x140008108
   1400025ab:	test   edi,edi
   1400025ad:	je     0x14000261c
   1400025af:	mov    rsi,QWORD PTR [rbp-0x39]
   1400025b3:	mov    rdi,QWORD PTR [rbp-0x1]
   1400025b7:	mov    rdx,rsi
   1400025ba:	call   0x140004914
   1400025bf:	mov    ebx,eax
   1400025c1:	test   eax,eax
   1400025c3:	js     0x140002603
   1400025c5:	mov    rcx,rsi
   1400025c8:	call   0x140001fd8
   1400025cd:	mov    ebx,eax
   1400025cf:	test   eax,eax
   1400025d1:	js     0x140002603
   1400025d3:	mov    r9d,0x5
   1400025d9:	lea    r8,[rip+0x83f0]        # 0x14000a9d0
   1400025e0:	mov    rdx,rdi
   1400025e3:	mov    rcx,0xffffffff80000002
   1400025ea:	call   QWORD PTR [rip+0x5a18]        # 0x140008008
   1400025f0:	mov    ebx,eax
   1400025f2:	test   eax,eax
   1400025f4:	js     0x140002603
   1400025f6:	mov    rcx,rdi
   1400025f9:	call   QWORD PTR [rip+0x5df1]        # 0x1400083f0
   1400025ff:	mov    ebx,eax
   140002601:	jmp    0x14000260d
   140002603:	mov    edx,ebx
   140002605:	mov    rcx,rdi
   140002608:	call   0x14000165c
   14000260d:	test   ebx,ebx
   14000260f:	js     0x14000264a
   140002611:	mov    rcx,QWORD PTR [rbp-0x39]
   140002615:	call   0x1400018ec
   14000261a:	jmp    0x140002640
   14000261c:	mov    eax,DWORD PTR [rsi+0x38]
   14000261f:	movzx  r9d,BYTE PTR [rbp-0x19]
   140002624:	mov    r8d,DWORD PTR [rbp-0x1d]
   140002628:	mov    rdx,QWORD PTR [rbp-0x1]
   14000262c:	mov    rcx,QWORD PTR [rbp-0x39]
   140002630:	mov    DWORD PTR [rsp+0x28],eax
   140002634:	mov    al,BYTE PTR [rbp-0x18]
   140002637:	mov    BYTE PTR [rsp+0x20],al
   14000263b:	call   0x140001bf0
   140002640:	mov    ebx,eax
   140002642:	test   eax,eax
   140002644:	jns    0x1400024b3
   14000264a:	cmp    QWORD PTR [rbp-0x1],r15
   14000264e:	je     0x1400024b3
   140002654:	cmp    DWORD PTR [rbp-0x29],r15d
   140002658:	je     0x1400024b3
   14000265e:	lea    eax,[rbx+0x7ff8d11e]
   140002664:	cmp    eax,0x1e
   140002667:	ja     0x140002673
   140002669:	mov    ecx,0x5800802d
   14000266e:	bt     ecx,eax
   140002671:	jb     0x14000267f
   140002673:	cmp    ebx,0x80072f30
   140002679:	jne    0x1400024b3
   14000267f:	mov    rcx,QWORD PTR [rbp-0x39]
   140002683:	call   0x140001978
   140002688:	cmp    eax,0x82ac0007
   14000268d:	jne    0x1400024b3
   140002693:	mov    rcx,QWORD PTR [rbp-0x39]
   140002697:	call   0x1400021fc
   14000269c:	jmp    0x1400024b3
   1400026a1:	mov    rcx,QWORD PTR [rbp-0x31]
   1400026a5:	cmp    DWORD PTR [rip+0xb994],0x5        # 0x14000e040
   1400026ac:	jbe    0x140002701
   1400026ae:	lea    rdx,[rip+0x8607]        # 0x14000acbc
   1400026b5:	mov    rax,r15
   1400026b8:	test   rcx,rcx
   1400026bb:	je     0x1400026ce
   1400026bd:	mov    rdx,rcx
   1400026c0:	or     rax,0xffffffffffffffff
   1400026c4:	inc    rax
   1400026c7:	cmp    WORD PTR [rcx+rax*2],r15w
   1400026cc:	jne    0x1400026c4
   1400026ce:	lea    eax,[rax*2+0x2]
   1400026d5:	mov    QWORD PTR [rbp+0x27],rdx
   1400026d9:	mov    DWORD PTR [rbp+0x2f],eax
   1400026dc:	mov    DWORD PTR [rbp+0x33],r15d
   1400026e0:	lea    rax,[rbp+0x7]
   1400026e4:	mov    QWORD PTR [rsp+0x28],rax
   1400026e9:	lea    rdx,[rip+0x8b7a]        # 0x14000b26a
   1400026f0:	mov    DWORD PTR [rsp+0x20],0x3
   1400026f8:	call   0x140001008
   1400026fd:	mov    rcx,QWORD PTR [rbp-0x31]
   140002701:	mov    ebx,0x80070057
   140002706:	jmp    0x1400024b7
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	int3   
   140002711:	int3   
   140002712:	int3   
   140002713:	int3   
   140002714:	mov    QWORD PTR [rsp+0x18],rbx
   140002719:	push   rbp
   14000271a:	push   rsi
   14000271b:	push   rdi
   14000271c:	push   r12
   14000271e:	push   r13
   140002720:	push   r14
   140002722:	push   r15
   140002724:	lea    rbp,[rsp-0x140]
   14000272c:	sub    rsp,0x240
   140002733:	mov    rax,QWORD PTR [rip+0xb8ce]        # 0x14000e008
   14000273a:	xor    rax,rsp
   14000273d:	mov    QWORD PTR [rbp+0x130],rax
   140002744:	mov    rsi,rdx
   140002747:	mov    r14,rcx
   14000274a:	xor    r13d,r13d
   14000274d:	lea    rcx,[rbp+0x21]
   140002751:	xor    edx,edx
   140002753:	mov    BYTE PTR [rbp+0x20],r13b
   140002757:	mov    r8d,0x103
   14000275d:	call   0x140006a26
   140002762:	cmp    DWORD PTR [r14+0x18],0x18
   140002767:	mov    rdx,QWORD PTR [r14+0x10]
   14000276b:	mov    QWORD PTR [rsp+0x40],r13
   140002770:	jb     0x140002a50
   140002776:	movzx  eax,BYTE PTR [rdx+0x17]
   14000277a:	add    eax,0x18
   14000277d:	cmp    eax,DWORD PTR [r14+0x18]
   140002781:	jne    0x140002a50
   140002787:	movzx  r8d,BYTE PTR [rdx+0x17]
   14000278c:	mov    QWORD PTR [rsp+0x40],r8
   140002791:	lea    rax,[r8-0x1]
   140002795:	cmp    rax,0x102
   14000279b:	jbe    0x1400027bb
   14000279d:	cmp    DWORD PTR [rip+0xb89c],0x5        # 0x14000e040
   1400027a4:	jbe    0x140002a91
   1400027aa:	lea    rax,[rsp+0x40]
   1400027af:	lea    rdx,[rip+0x8db4]        # 0x14000b56a
   1400027b6:	jmp    0x140002a6e
   1400027bb:	movzx  eax,BYTE PTR [rdx+0x10]
   1400027bf:	mov    edi,0x8
   1400027c4:	shl    eax,0x2
   1400027c7:	mov    DWORD PTR [rsi],eax
   1400027c9:	movzx  ecx,BYTE PTR [rdx+0x11]
   1400027cd:	shr    ecx,0x6
   1400027d0:	or     ecx,eax
   1400027d2:	mov    DWORD PTR [rsi],ecx
   1400027d4:	lea    eax,[rcx-0xb]
   1400027d7:	cmp    eax,edi
   1400027d9:	jbe    0x140002804
   1400027db:	cmp    DWORD PTR [rip+0xb85e],0x5        # 0x14000e040
   1400027e2:	jbe    0x140002a91
   1400027e8:	mov    eax,ecx
   1400027ea:	lea    rdx,[rip+0x8d32]        # 0x14000b523
   1400027f1:	mov    QWORD PTR [rsp+0x30],rax
   1400027f6:	lea    rax,[rsp+0x30]
   1400027fb:	mov    QWORD PTR [rbp-0x78],rdi
   1400027ff:	jmp    0x140002a76
   140002804:	mov    al,BYTE PTR [rdx+0x11]
   140002807:	shr    al,0x4
   14000280a:	and    al,0x3
   14000280c:	mov    BYTE PTR [rsi+0x8],al
   14000280f:	cmp    al,0x3
   140002811:	jbe    0x14000283d
   140002813:	cmp    DWORD PTR [rip+0xb826],0x5        # 0x14000e040
   14000281a:	jbe    0x140002a91
   140002820:	movzx  eax,al
   140002823:	lea    rdx,[rip+0x8cbb]        # 0x14000b4e5
   14000282a:	mov    QWORD PTR [rsp+0x30],rax
   14000282f:	lea    rax,[rsp+0x30]
   140002834:	mov    QWORD PTR [rbp-0x78],rdi
   140002838:	jmp    0x140002a76
   14000283d:	mov    cl,BYTE PTR [rdx+0x11]
   140002840:	shr    cl,0x3
   140002843:	and    cl,0x1
   140002846:	cmp    DWORD PTR [r14+0x38],0x2
   14000284b:	sete   al
   14000284e:	or     cl,al
   140002850:	mov    BYTE PTR [rsi+0x9],cl
   140002853:	cmp    cl,0x2
   140002856:	jb     0x140002882
   140002858:	cmp    DWORD PTR [rip+0xb7e1],0x5        # 0x14000e040
   14000285f:	jbe    0x140002a91
   140002865:	movzx  eax,cl
   140002868:	lea    rdx,[rip+0x8c28]        # 0x14000b497
   14000286f:	mov    QWORD PTR [rsp+0x30],rax
   140002874:	lea    rax,[rsp+0x30]
   140002879:	mov    QWORD PTR [rbp-0x78],rdi
   14000287d:	jmp    0x140002a76
   140002882:	movzx  ecx,BYTE PTR [rdx+0x15]
   140002886:	movzx  eax,BYTE PTR [rdx+0x16]
   14000288a:	add    rdx,0x18
   14000288e:	shl    ecx,0x8
   140002891:	or     ecx,eax
   140002893:	mov    DWORD PTR [rsi+0x4],ecx
   140002896:	lea    rcx,[rbp+0x20]
   14000289a:	call   0x140006984
   14000289f:	xor    r9d,r9d
   1400028a2:	lea    r8,[rsi+0x10]
   1400028a6:	mov    edx,0xfde9
   1400028ab:	lea    rcx,[rbp+0x20]
   1400028af:	call   QWORD PTR [rip+0x577b]        # 0x140008030
   1400028b5:	mov    ebx,eax
   1400028b7:	test   eax,eax
   1400028b9:	js     0x140002a96
   1400028bf:	mov    DWORD PTR [rsi+0x18],r13d
   1400028c3:	cmp    DWORD PTR [r14+0x38],0x2
   1400028c8:	je     0x14000294f
   1400028ce:	mov    ecx,DWORD PTR [r14+0x48]
   1400028d2:	sub    ecx,0x3
   1400028d5:	cmp    ecx,0x207
   1400028db:	ja     0x14000294f
   1400028dd:	mov    r15,QWORD PTR [r14+0x40]
   1400028e1:	test   r15,r15
   1400028e4:	je     0x14000294f
   1400028e6:	xor    edx,edx
   1400028e8:	lea    rcx,[rsp+0x68]
   1400028ed:	lea    r8d,[rdx+0x28]
   1400028f1:	call   0x140006a26
   1400028f6:	lea    rdx,[rsp+0x60]
   1400028fb:	mov    DWORD PTR [rsp+0x60],0x30
   140002903:	mov    rcx,r15
   140002906:	call   QWORD PTR [rip+0x5ac4]        # 0x1400083d0
   14000290c:	mov    ebx,eax
   14000290e:	mov    eax,0x82ab000c
   140002913:	cmp    ebx,0x80070002
   140002919:	cmove  ebx,eax
   14000291c:	test   ebx,ebx
   14000291e:	js     0x140002a96
   140002924:	mov    eax,DWORD PTR [rbp-0x7c]
   140002927:	lea    r8,[rsi+0x20]
   14000292b:	or     edx,0xffffffff
   14000292e:	mov    DWORD PTR [rsi+0x18],eax
   140002931:	mov    rcx,r15
   140002934:	call   QWORD PTR [rip+0x56fe]        # 0x140008038
   14000293a:	mov    ebx,eax
   14000293c:	test   eax,eax
   14000293e:	js     0x140002a96
   140002944:	lea    rcx,[rsp+0x60]
   140002949:	call   QWORD PTR [rip+0x5a99]        # 0x1400083e8
   14000294f:	cmp    DWORD PTR [rip+0xb6ea],0x5        # 0x14000e040
   140002956:	jbe    0x140002a96
   14000295c:	mov    eax,DWORD PTR [rsi]
   14000295e:	lea    rdx,[rip+0x8357]        # 0x14000acbc
   140002965:	mov    rcx,QWORD PTR [rsi+0x10]
   140002969:	or     r9,0xffffffffffffffff
   14000296d:	mov    QWORD PTR [rsp+0x30],rax
   140002972:	lea    rax,[rsp+0x30]
   140002977:	mov    QWORD PTR [rbp-0x50],rax
   14000297b:	mov    r8,rdx
   14000297e:	movzx  eax,BYTE PTR [rsi+0x8]
   140002982:	mov    QWORD PTR [rsp+0x50],rax
   140002987:	lea    rax,[rsp+0x50]
   14000298c:	mov    QWORD PTR [rbp-0x40],rax
   140002990:	movzx  eax,BYTE PTR [rsi+0x9]
   140002994:	mov    QWORD PTR [rsp+0x58],rax
   140002999:	lea    rax,[rsp+0x58]
   14000299e:	mov    QWORD PTR [rbp-0x30],rax
   1400029a2:	mov    eax,DWORD PTR [rsi+0x4]
   1400029a5:	mov    QWORD PTR [rsp+0x48],rax
   1400029aa:	lea    rax,[rsp+0x48]
   1400029af:	mov    QWORD PTR [rbp-0x20],rax
   1400029b3:	mov    rax,r13
   1400029b6:	mov    QWORD PTR [rbp-0x48],rdi
   1400029ba:	mov    QWORD PTR [rbp-0x38],rdi
   1400029be:	mov    QWORD PTR [rbp-0x28],rdi
   1400029c2:	mov    QWORD PTR [rbp-0x18],rdi
   1400029c6:	test   rcx,rcx
   1400029c9:	je     0x1400029db
   1400029cb:	mov    r8,rcx
   1400029ce:	mov    rax,r9
   1400029d1:	inc    rax
   1400029d4:	cmp    WORD PTR [rcx+rax*2],r13w
   1400029d9:	jne    0x1400029d1
   1400029db:	mov    rcx,QWORD PTR [rsi+0x20]
   1400029df:	lea    eax,[rax*2+0x2]
   1400029e6:	mov    DWORD PTR [rbp-0x8],eax
   1400029e9:	movsxd rax,DWORD PTR [rsi+0x18]
   1400029ed:	mov    QWORD PTR [rsp+0x38],rax
   1400029f2:	lea    rax,[rsp+0x38]
   1400029f7:	mov    QWORD PTR [rbp+0x0],rax
   1400029fb:	mov    rax,r13
   1400029fe:	mov    QWORD PTR [rbp-0x10],r8
   140002a02:	mov    DWORD PTR [rbp-0x4],r13d
   140002a06:	mov    QWORD PTR [rbp+0x8],rdi
   140002a0a:	test   rcx,rcx
   140002a0d:	je     0x140002a1f
   140002a0f:	mov    rdx,rcx
   140002a12:	mov    rax,r9
   140002a15:	inc    rax
   140002a18:	cmp    WORD PTR [rcx+rax*2],r13w
   140002a1d:	jne    0x140002a15
   140002a1f:	lea    eax,[rax*2+0x2]
   140002a26:	mov    QWORD PTR [rbp+0x10],rdx
   140002a2a:	mov    DWORD PTR [rbp+0x18],eax
   140002a2d:	mov    DWORD PTR [rbp+0x1c],r13d
   140002a31:	lea    rax,[rbp-0x70]
   140002a35:	mov    QWORD PTR [rsp+0x28],rax
   140002a3a:	lea    rdx,[rip+0x89d0]        # 0x14000b411
   140002a41:	mov    DWORD PTR [rsp+0x20],0x9
   140002a49:	call   0x140001008
   140002a4e:	jmp    0x140002a96
   140002a50:	cmp    DWORD PTR [rip+0xb5e9],0x5        # 0x14000e040
   140002a57:	jbe    0x140002a91
   140002a59:	mov    eax,DWORD PTR [r14+0x18]
   140002a5d:	lea    rdx,[rip+0x8b50]        # 0x14000b5b4
   140002a64:	mov    QWORD PTR [rsp+0x38],rax
   140002a69:	lea    rax,[rsp+0x38]
   140002a6e:	mov    QWORD PTR [rbp-0x78],0x8
   140002a76:	mov    QWORD PTR [rbp-0x80],rax
   140002a7a:	lea    rax,[rsp+0x60]
   140002a7f:	mov    QWORD PTR [rsp+0x28],rax
   140002a84:	mov    DWORD PTR [rsp+0x20],0x3
   140002a8c:	call   0x140001008
   140002a91:	mov    ebx,0x82ab000b
   140002a96:	mov    eax,ebx
   140002a98:	mov    rcx,QWORD PTR [rbp+0x130]
   140002a9f:	xor    rcx,rsp
   140002aa2:	call   0x140005950
   140002aa7:	mov    rbx,QWORD PTR [rsp+0x290]
   140002aaf:	add    rsp,0x240
   140002ab6:	pop    r15
   140002ab8:	pop    r14
   140002aba:	pop    r13
   140002abc:	pop    r12
   140002abe:	pop    rdi
   140002abf:	pop    rsi
   140002ac0:	pop    rbp
   140002ac1:	ret    
   140002ac2:	int3   
   140002ac3:	int3   
   140002ac4:	int3   
   140002ac5:	int3   
   140002ac6:	int3   
   140002ac7:	int3   
   140002ac8:	rex push rdi
   140002aca:	sub    rsp,0x30
   140002ace:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002ad7:	mov    QWORD PTR [rsp+0x40],rbx
   140002adc:	mov    QWORD PTR [rsp+0x48],rsi
   140002ae1:	mov    rsi,rdx
   140002ae4:	mov    rdi,rcx
   140002ae7:	mov    ecx,0x18
   140002aec:	call   0x140005f48
   140002af1:	mov    rbx,rax
   140002af4:	mov    QWORD PTR [rsp+0x50],rax
   140002af9:	test   rax,rax
   140002afc:	je     0x140002b2b
   140002afe:	and    QWORD PTR [rax+0x8],0x0
   140002b03:	mov    DWORD PTR [rax+0x10],0x1
   140002b0a:	mov    rcx,rsi
   140002b0d:	call   QWORD PTR [rip+0x5575]        # 0x140008088
   140002b13:	mov    QWORD PTR [rbx],rax
   140002b16:	test   rax,rax
   140002b19:	jne    0x140002b2d
   140002b1b:	test   rsi,rsi
   140002b1e:	je     0x140002b2d
   140002b20:	mov    ecx,0x8007000e
   140002b25:	call   0x1400053f8
   140002b2a:	int3   
   140002b2b:	xor    ebx,ebx
   140002b2d:	mov    QWORD PTR [rdi],rbx
   140002b30:	test   rbx,rbx
   140002b33:	jne    0x140002b40
   140002b35:	mov    ecx,0x8007000e
   140002b3a:	call   0x1400053f8
   140002b3f:	int3   
   140002b40:	mov    rax,rdi
   140002b43:	mov    rbx,QWORD PTR [rsp+0x40]
   140002b48:	mov    rsi,QWORD PTR [rsp+0x48]
   140002b4d:	add    rsp,0x30
   140002b51:	pop    rdi
   140002b52:	ret    
   140002b53:	int3   
   140002b54:	int3   
   140002b55:	int3   
   140002b56:	int3   
   140002b57:	int3   
   140002b58:	int3   
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	mov    QWORD PTR [rsp+0x10],rbx
   140002b61:	push   rdi
   140002b62:	sub    rsp,0x20
   140002b66:	mov    rbx,QWORD PTR [rcx]
   140002b69:	mov    rdi,rcx
   140002b6c:	test   rbx,rbx
   140002b6f:	je     0x140002bb6
   140002b71:	or     eax,0xffffffff
   140002b74:	lock xadd DWORD PTR [rbx+0x10],eax
   140002b79:	cmp    eax,0x1
   140002b7c:	jne    0x140002bb2
   140002b7e:	test   rbx,rbx
   140002b81:	je     0x140002bb2
   140002b83:	mov    rcx,QWORD PTR [rbx]
   140002b86:	test   rcx,rcx
   140002b89:	je     0x140002b95
   140002b8b:	call   QWORD PTR [rip+0x54ef]        # 0x140008080
   140002b91:	and    QWORD PTR [rbx],0x0
   140002b95:	mov    rcx,QWORD PTR [rbx+0x8]
   140002b99:	test   rcx,rcx
   140002b9c:	je     0x140002ba9
   140002b9e:	call   QWORD PTR [rip+0x5704]        # 0x1400082a8
   140002ba4:	and    QWORD PTR [rbx+0x8],0x0
   140002ba9:	mov    rcx,rbx
   140002bac:	call   QWORD PTR [rip+0x572e]        # 0x1400082e0
   140002bb2:	and    QWORD PTR [rdi],0x0
   140002bb6:	mov    rbx,QWORD PTR [rsp+0x38]
   140002bbb:	add    rsp,0x20
   140002bbf:	pop    rdi
   140002bc0:	ret    
   140002bc1:	int3   
   140002bc2:	int3   
   140002bc3:	int3   
   140002bc4:	int3   
   140002bc5:	int3   
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	sub    rsp,0x28
   140002bcc:	call   QWORD PTR [rip+0x54be]        # 0x140008090
   140002bd2:	test   eax,eax
   140002bd4:	js     0x140002bdb
   140002bd6:	add    rsp,0x28
   140002bda:	ret    
   140002bdb:	mov    ecx,eax
   140002bdd:	call   0x1400053f8
   140002be2:	int3   
   140002be3:	int3   
   140002be4:	int3   
   140002be5:	int3   
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	mov    QWORD PTR [rsp+0x18],r8
   140002bf1:	mov    QWORD PTR [rsp+0x20],r9
   140002bf6:	push   rbx
   140002bf7:	push   rsi
   140002bf8:	push   rdi
   140002bf9:	sub    rsp,0x20
   140002bfd:	mov    r10,rdx
   140002c00:	lea    r9,[rsp+0x58]
   140002c05:	sub    r10,rcx
   140002c08:	mov    rsi,rdx
   140002c0b:	sar    r10,1
   140002c0e:	mov    rbx,rcx
   140002c11:	lea    rax,[r10-0x1]
   140002c15:	cmp    rax,0x7ffffffe
   140002c1b:	ja     0x140002c3f
   140002c1d:	lea    rdi,[r10-0x1]
   140002c21:	mov    rdx,rdi
   140002c24:	call   QWORD PTR [rip+0x56ce]        # 0x1400082f8
   140002c2a:	xor    ecx,ecx
   140002c2c:	test   eax,eax
   140002c2e:	js     0x140002c39
   140002c30:	cdqe   
   140002c32:	cmp    rax,rdi
   140002c35:	ja     0x140002c39
   140002c37:	jne    0x140002c49
   140002c39:	mov    WORD PTR [rbx+rdi*2],cx
   140002c3d:	jmp    0x140002c49
   140002c3f:	xor    ecx,ecx
   140002c41:	test   r10,r10
   140002c44:	je     0x140002c49
   140002c46:	mov    WORD PTR [rbx],cx
   140002c49:	cmp    rsi,rbx
   140002c4c:	je     0x140002c5f
   140002c4e:	or     rax,0xffffffffffffffff
   140002c52:	inc    rax
   140002c55:	cmp    WORD PTR [rbx+rax*2],cx
   140002c59:	jne    0x140002c52
   140002c5b:	lea    rbx,[rbx+rax*2]
   140002c5f:	mov    rax,rbx
   140002c62:	add    rsp,0x20
   140002c66:	pop    rdi
   140002c67:	pop    rsi
   140002c68:	pop    rbx
   140002c69:	ret    
   140002c6a:	int3   
   140002c6b:	int3   
   140002c6c:	int3   
   140002c6d:	int3   
   140002c6e:	int3   
   140002c6f:	int3   
   140002c70:	mov    QWORD PTR [rsp+0x20],rbx
   140002c75:	push   rbp
   140002c76:	push   rsi
   140002c77:	push   rdi
   140002c78:	push   r14
   140002c7a:	push   r15
   140002c7c:	sub    rsp,0x250
   140002c83:	mov    rax,QWORD PTR [rip+0xb37e]        # 0x14000e008
   140002c8a:	xor    rax,rsp
   140002c8d:	mov    QWORD PTR [rsp+0x240],rax
   140002c95:	mov    r14,rcx
   140002c98:	lea    rsi,[rip+0x80bb]        # 0x14000ad5a
   140002c9f:	mov    ecx,DWORD PTR [r8]
   140002ca2:	xor    r15d,r15d
   140002ca5:	mov    rbx,r8
   140002ca8:	mov    rdi,rdx
   140002cab:	test   ecx,ecx
   140002cad:	je     0x140002ce7
   140002caf:	sub    ecx,0x1
   140002cb2:	je     0x140002cde
   140002cb4:	sub    ecx,0x1
   140002cb7:	je     0x140002cd5
   140002cb9:	sub    ecx,0x1
   140002cbc:	je     0x140002ccc
   140002cbe:	cmp    ecx,0x1
   140002cc1:	jne    0x140002cee
   140002cc3:	lea    rsi,[rip+0x80d6]        # 0x14000ada0
   140002cca:	jmp    0x140002cee
   140002ccc:	lea    rsi,[rip+0x80c5]        # 0x14000ad98
   140002cd3:	jmp    0x140002cee
   140002cd5:	lea    rsi,[rip+0x80a4]        # 0x14000ad80
   140002cdc:	jmp    0x140002cee
   140002cde:	lea    rsi,[rip+0x808b]        # 0x14000ad70
   140002ce5:	jmp    0x140002cee
   140002ce7:	lea    rsi,[rip+0x8072]        # 0x14000ad60
   140002cee:	mov    r8d,DWORD PTR [r8+0x4]
   140002cf2:	lea    rax,[rsp+0x40]
   140002cf7:	mov    QWORD PTR [rsp+0x30],r15
   140002cfc:	mov    r9d,0x400
   140002d02:	mov    DWORD PTR [rsp+0x28],0x100
   140002d0a:	xor    edx,edx
   140002d0c:	mov    ecx,0x1200
   140002d11:	mov    QWORD PTR [rsp+0x20],rax
   140002d16:	mov    WORD PTR [rsp+0x40],r15w
   140002d1c:	call   QWORD PTR [rip+0x5426]        # 0x140008148
   140002d22:	mov    r9,QWORD PTR [rbx+0x30]
   140002d26:	lea    rdi,[r14+rdi*2]
   140002d2a:	mov    rax,QWORD PTR [rbx+0x80]
   140002d31:	mov    rdx,rdi
   140002d34:	mov    rcx,r14
   140002d37:	test   r9,r9
   140002d3a:	je     0x140002d5f
   140002d3c:	mov    QWORD PTR [rsp+0x30],rax
   140002d41:	lea    r8,[rip+0x8068]        # 0x14000adb0
   140002d48:	mov    rax,QWORD PTR [rbx+0x78]
   140002d4c:	mov    QWORD PTR [rsp+0x28],rax
   140002d51:	mov    eax,DWORD PTR [rbx+0x38]
   140002d54:	mov    DWORD PTR [rsp+0x20],eax
   140002d58:	call   0x140002bec
   140002d5d:	jmp    0x140002d74
   140002d5f:	mov    r9,QWORD PTR [rbx+0x78]
   140002d63:	lea    r8,[rip+0x806e]        # 0x14000add8
   140002d6a:	mov    QWORD PTR [rsp+0x20],rax
   140002d6f:	call   0x140002bec
   140002d74:	mov    r9,QWORD PTR [rbx+0x88]
   140002d7b:	mov    rbp,rax
   140002d7e:	test   r9,r9
   140002d81:	je     0x140002d98
   140002d83:	lea    r8,[rip+0x8066]        # 0x14000adf0
   140002d8a:	mov    rdx,rdi
   140002d8d:	mov    rcx,rax
   140002d90:	call   0x140002bec
   140002d95:	mov    rbp,rax
   140002d98:	call   QWORD PTR [rip+0x53ea]        # 0x140008188
   140002d9e:	lea    rcx,[rsp+0x40]
   140002da3:	mov    r9,rsi
   140002da6:	mov    QWORD PTR [rsp+0x38],rcx
   140002dab:	lea    r8,[rip+0x805e]        # 0x14000ae10
   140002db2:	mov    ecx,DWORD PTR [rbx+0x4]
   140002db5:	mov    rdx,rdi
   140002db8:	mov    DWORD PTR [rsp+0x30],ecx
   140002dbc:	mov    rcx,rbp
   140002dbf:	mov    DWORD PTR [rsp+0x28],eax
   140002dc3:	mov    eax,DWORD PTR [rbx+0x3c]
   140002dc6:	mov    DWORD PTR [rsp+0x20],eax
   140002dca:	call   0x140002bec
   140002dcf:	cmp    QWORD PTR [rbx+0x10],r15
   140002dd3:	jne    0x140002de5
   140002dd5:	cmp    QWORD PTR [rbx+0x40],r15
   140002dd9:	jne    0x140002de5
   140002ddb:	cmp    QWORD PTR [rbx+0x28],r15
   140002ddf:	je     0x140002e75
   140002de5:	lea    r8,[rip+0x805c]        # 0x14000ae48
   140002dec:	mov    rdx,rdi
   140002def:	mov    rcx,rax
   140002df2:	call   0x140002bec
   140002df7:	mov    r9,QWORD PTR [rbx+0x10]
   140002dfb:	test   r9,r9
   140002dfe:	je     0x140002e12
   140002e00:	lea    r8,[rip+0x8051]        # 0x14000ae58
   140002e07:	mov    rdx,rdi
   140002e0a:	mov    rcx,rax
   140002e0d:	call   0x140002bec
   140002e12:	mov    r9,QWORD PTR [rbx+0x40]
   140002e16:	test   r9,r9
   140002e19:	je     0x140002e2d
   140002e1b:	lea    r8,[rip+0x804e]        # 0x14000ae70
   140002e22:	mov    rdx,rdi
   140002e25:	mov    rcx,rax
   140002e28:	call   0x140002bec
   140002e2d:	mov    rcx,QWORD PTR [rbx+0x20]
   140002e31:	mov    rdx,rdi
   140002e34:	mov    r9,QWORD PTR [rbx+0x28]
   140002e38:	test   rcx,rcx
   140002e3b:	je     0x140002e53
   140002e3d:	mov    QWORD PTR [rsp+0x20],rcx
   140002e42:	lea    r8,[rip+0x804f]        # 0x14000ae98
   140002e49:	mov    rcx,rax
   140002e4c:	call   0x140002bec
   140002e51:	jmp    0x140002e75
   140002e53:	mov    rcx,rax
   140002e56:	test   r9,r9
   140002e59:	je     0x140002e69
   140002e5b:	lea    r8,[rip+0x804e]        # 0x14000aeb0
   140002e62:	call   0x140002bec
   140002e67:	jmp    0x140002e75
   140002e69:	lea    r8,[rip+0x8050]        # 0x14000aec0
   140002e70:	call   0x140002bec
   140002e75:	xor    eax,eax
   140002e77:	mov    rcx,QWORD PTR [rsp+0x240]
   140002e7f:	xor    rcx,rsp
   140002e82:	call   0x140005950
   140002e87:	mov    rbx,QWORD PTR [rsp+0x298]
   140002e8f:	add    rsp,0x250
   140002e96:	pop    r15
   140002e98:	pop    r14
   140002e9a:	pop    rdi
   140002e9b:	pop    rsi
   140002e9c:	pop    rbp
   140002e9d:	ret    
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	int3   
   140002ea1:	int3   
   140002ea2:	int3   
   140002ea3:	int3   
   140002ea4:	mov    DWORD PTR [rip+0xb98e],ecx        # 0x14000e838
   140002eaa:	mov    eax,0x1
   140002eaf:	lock xadd DWORD PTR [rip+0xb961],eax        # 0x14000e818
   140002eb7:	inc    eax
   140002eb9:	ret    
   140002eba:	int3   
   140002ebb:	int3   
   140002ebc:	int3   
   140002ebd:	int3   
   140002ebe:	int3   
   140002ebf:	int3   
   140002ec0:	mov    DWORD PTR [rip+0xb8da],ecx        # 0x14000e7a0
   140002ec6:	mov    eax,0x1
   140002ecb:	lock xadd DWORD PTR [rip+0xb955],eax        # 0x14000e828
   140002ed3:	inc    eax
   140002ed5:	ret    
   140002ed6:	int3   
   140002ed7:	int3   
   140002ed8:	int3   
   140002ed9:	int3   
   140002eda:	int3   
   140002edb:	int3   
   140002edc:	mov    DWORD PTR [rip+0xb94e],ecx        # 0x14000e830
   140002ee2:	mov    eax,0x1
   140002ee7:	lock xadd DWORD PTR [rip+0xb8b9],eax        # 0x14000e7a8
   140002eef:	inc    eax
   140002ef1:	ret    
   140002ef2:	int3   
   140002ef3:	int3   
   140002ef4:	int3   
   140002ef5:	int3   
   140002ef6:	int3   
   140002ef7:	int3   
   140002ef8:	mov    DWORD PTR [rip+0xb8a6],ecx        # 0x14000e7a4
   140002efe:	mov    eax,0x1
   140002f03:	lock xadd DWORD PTR [rip+0xb8a1],eax        # 0x14000e7ac
   140002f0b:	inc    eax
   140002f0d:	ret    
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	int3   
   140002f11:	int3   
   140002f12:	int3   
   140002f13:	int3   
   140002f14:	int3   
   140002f15:	int3   
   140002f16:	int3   
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	mov    DWORD PTR [rip+0xb8e2],ecx        # 0x14000e808
   140002f26:	mov    eax,0x1
   140002f2b:	ret    
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	int3   
   140002f31:	int3   
   140002f32:	int3   
   140002f33:	int3   
   140002f34:	int3   
   140002f35:	int3   
   140002f36:	int3   
   140002f37:	int3   
   140002f38:	int3   
   140002f39:	int3   
   140002f3a:	int3   
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	mov    QWORD PTR [rsp+0x8],rbx
   140002f45:	push   rsi
   140002f46:	sub    rsp,0x150
   140002f4d:	mov    rax,QWORD PTR [rip+0xb0b4]        # 0x14000e008
   140002f54:	xor    rax,rsp
   140002f57:	mov    QWORD PTR [rsp+0x140],rax
   140002f5f:	mov    al,BYTE PTR [rip+0xb8cf]        # 0x14000e834
   140002f65:	lea    rsi,[rip+0xb8d4]        # 0x14000e840
   140002f6c:	test   al,al
   140002f6e:	jne    0x140003024
   140002f74:	mov    ebx,0x40
   140002f79:	xor    edx,edx
   140002f7b:	mov    r8d,ebx
   140002f7e:	mov    rcx,rsi
   140002f81:	call   0x140006a26
   140002f86:	and    QWORD PTR [rsp+0x20],0x0
   140002f8c:	lea    r8,[rsp+0x20]
   140002f91:	lea    rdx,[rip+0xffffffffffffff88]        # 0x140002f20
   140002f98:	lea    ecx,[rbx-0x3a]
   140002f9b:	call   QWORD PTR [rip+0x5187]        # 0x140008128
   140002fa1:	test   eax,eax
   140002fa3:	je     0x14000301d
   140002fa5:	mov    rcx,QWORD PTR [rsp+0x20]
   140002faa:	lea    rdx,[rsp+0x30]
   140002faf:	mov    r8d,0x104
   140002fb5:	call   QWORD PTR [rip+0x517d]        # 0x140008138
   140002fbb:	test   eax,eax
   140002fbd:	je     0x14000301d
   140002fbf:	lea    rcx,[rsp+0x30]
   140002fc4:	or     rax,0xffffffffffffffff
   140002fc8:	inc    rax
   140002fcb:	cmp    BYTE PTR [rcx+rax*1],0x0
   140002fcf:	jne    0x140002fc8
   140002fd1:	lea    rdx,[rsp+0x30]
   140002fd6:	add    rdx,rax
   140002fd9:	jmp    0x140002fe4
   140002fdb:	cmp    BYTE PTR [rdx-0x1],0x5c
   140002fdf:	je     0x140002fee
   140002fe1:	dec    rdx
   140002fe4:	lea    rax,[rsp+0x30]
   140002fe9:	cmp    rdx,rax
   140002fec:	ja     0x140002fdb
   140002fee:	mov    rcx,rsi
   140002ff1:	sub    rdx,rsi
   140002ff4:	lea    rax,[rbx+0x7fffffbe]
   140002ffb:	test   rax,rax
   140002ffe:	je     0x140003012
   140003000:	mov    al,BYTE PTR [rdx+rcx*1]
   140003003:	test   al,al
   140003005:	je     0x140003012
   140003007:	mov    BYTE PTR [rcx],al
   140003009:	inc    rcx
   14000300c:	sub    rbx,0x1
   140003010:	jne    0x140002ff4
   140003012:	test   rbx,rbx
   140003015:	jne    0x14000301a
   140003017:	dec    rcx
   14000301a:	mov    BYTE PTR [rcx],0x0
   14000301d:	mov    BYTE PTR [rip+0xb810],0x1        # 0x14000e834
   140003024:	mov    rax,rsi
   140003027:	mov    rcx,QWORD PTR [rsp+0x140]
   14000302f:	xor    rcx,rsp
   140003032:	call   0x140005950
   140003037:	mov    rbx,QWORD PTR [rsp+0x160]
   14000303f:	add    rsp,0x150
   140003046:	pop    rsi
   140003047:	ret    
   140003048:	int3   
   140003049:	int3   
   14000304a:	int3   
   14000304b:	int3   
   14000304c:	int3   
   14000304d:	int3   
   14000304e:	int3   
   14000304f:	int3   
   140003050:	rex push rbx
   140003052:	sub    rsp,0x20
   140003056:	lea    rcx,[rip+0x7e6b]        # 0x14000aec8
   14000305d:	call   QWORD PTR [rip+0x50bd]        # 0x140008120
   140003063:	test   rax,rax
   140003066:	je     0x14000308b
   140003068:	lea    rdx,[rip+0x7e71]        # 0x14000aee0
   14000306f:	mov    rcx,rax
   140003072:	call   QWORD PTR [rip+0x50a0]        # 0x140008118
   140003078:	mov    rbx,rax
   14000307b:	test   rax,rax
   14000307e:	je     0x14000308b
   140003080:	mov    rcx,rax
   140003083:	call   QWORD PTR [rip+0x53a7]        # 0x140008430
   140003089:	call   rbx
   14000308b:	add    rsp,0x20
   14000308f:	pop    rbx
   140003090:	ret    
   140003091:	int3   
   140003092:	int3   
   140003093:	int3   
   140003094:	int3   
   140003095:	int3   
   140003096:	int3   
   140003097:	int3   
   140003098:	int3   
   140003099:	int3   
   14000309a:	int3   
   14000309b:	int3   
   14000309c:	int3   
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400030aa:	push   rdi
   1400030ab:	sub    rsp,0x20
   1400030af:	mov    rdi,QWORD PTR [rip+0xb76a]        # 0x14000e820
   1400030b6:	xor    ebx,ebx
   1400030b8:	mov    esi,ecx
   1400030ba:	test   rdi,rdi
   1400030bd:	jne    0x140003106
   1400030bf:	mov    rax,QWORD PTR [rip+0xb74a]        # 0x14000e810
   1400030c6:	test   rax,rax
   1400030c9:	jne    0x1400030e7
   1400030cb:	xor    edx,edx
   1400030cd:	lea    rcx,[rip+0x7df4]        # 0x14000aec8
   1400030d4:	mov    r8d,0x800
   1400030da:	call   QWORD PTR [rip+0x5050]        # 0x140008130
   1400030e0:	mov    QWORD PTR [rip+0xb729],rax        # 0x14000e810
   1400030e7:	lea    rdx,[rip+0x7e12]        # 0x14000af00
   1400030ee:	mov    rcx,rax
   1400030f1:	call   QWORD PTR [rip+0x5021]        # 0x140008118
   1400030f7:	mov    QWORD PTR [rip+0xb722],rax        # 0x14000e820
   1400030fe:	mov    rdi,rax
   140003101:	test   rax,rax
   140003104:	je     0x140003115
   140003106:	mov    rcx,rdi
   140003109:	call   QWORD PTR [rip+0x5321]        # 0x140008430
   14000310f:	mov    ecx,esi
   140003111:	call   rdi
   140003113:	mov    ebx,eax
   140003115:	mov    rsi,QWORD PTR [rsp+0x38]
   14000311a:	mov    eax,ebx
   14000311c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003121:	add    rsp,0x20
   140003125:	pop    rdi
   140003126:	ret    
   140003127:	int3   
   140003128:	int3   
   140003129:	int3   
   14000312a:	int3   
   14000312b:	int3   
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	mov    QWORD PTR [rsp+0x8],rbx
   140003135:	mov    QWORD PTR [rsp+0x10],rbp
   14000313a:	mov    QWORD PTR [rsp+0x18],rsi
   14000313f:	push   rdi
   140003140:	sub    rsp,0x20
   140003144:	xor    al,al
   140003146:	mov    BYTE PTR [r8],0x0
   14000314a:	mov    rbp,r9
   14000314d:	mov    rbx,r8
   140003150:	mov    rsi,rdx
   140003153:	mov    rdi,rcx
   140003156:	test   rdx,rdx
   140003159:	je     0x140003206
   14000315f:	mov    rdx,QWORD PTR [rdx+0x10]
   140003163:	call   0x140003130
   140003168:	mov    rdx,QWORD PTR [rsi+0x20]
   14000316c:	xor    esi,esi
   14000316e:	test   rdx,rdx
   140003171:	je     0x140003206
   140003177:	cmp    DWORD PTR [rdx],esi
   140003179:	jne    0x14000318a
   14000317b:	lea    eax,[rsi+0x1]
   14000317e:	lock xadd DWORD PTR [rip+0xaefa],eax        # 0x14000e080
   140003186:	inc    eax
   140003188:	mov    DWORD PTR [rdx],eax
   14000318a:	cmp    DWORD PTR [rdi+0x48],esi
   14000318d:	jne    0x1400031a0
   14000318f:	movups xmm0,XMMWORD PTR [rdx]
   140003192:	movups XMMWORD PTR [rdi+0x48],xmm0
   140003196:	movsd  xmm1,QWORD PTR [rdx+0x10]
   14000319b:	movsd  QWORD PTR [rdi+0x58],xmm1
   1400031a0:	movups xmm0,XMMWORD PTR [rdx]
   1400031a3:	or     rcx,0xffffffffffffffff
   1400031a7:	mov    rax,rcx
   1400031aa:	movups XMMWORD PTR [rdi+0x60],xmm0
   1400031ae:	movsd  xmm1,QWORD PTR [rdx+0x10]
   1400031b3:	movsd  QWORD PTR [rdi+0x70],xmm1
   1400031b8:	lea    rdi,[rbx+rbp*1]
   1400031bc:	inc    rax
   1400031bf:	cmp    BYTE PTR [rbx+rax*1],sil
   1400031c3:	jne    0x1400031bc
   1400031c5:	add    rbx,rax
   1400031c8:	mov    rax,rdi
   1400031cb:	sub    rax,rbx
   1400031ce:	cmp    rax,0x2
   1400031d2:	jle    0x140003204
   1400031d4:	mov    BYTE PTR [rbx],0x5c
   1400031d7:	inc    rbx
   1400031da:	mov    rdx,QWORD PTR [rdx+0x8]
   1400031de:	inc    rcx
   1400031e1:	cmp    BYTE PTR [rdx+rcx*1],sil
   1400031e5:	jne    0x1400031de
   1400031e7:	inc    rcx
   1400031ea:	sub    rdi,rbx
   1400031ed:	cmp    rcx,rdi
   1400031f0:	cmovb  rdi,rcx
   1400031f4:	mov    rcx,rbx
   1400031f7:	mov    r8,rdi
   1400031fa:	call   0x140006984
   1400031ff:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   140003204:	mov    al,0x1
   140003206:	mov    rbx,QWORD PTR [rsp+0x30]
   14000320b:	mov    rbp,QWORD PTR [rsp+0x38]
   140003210:	mov    rsi,QWORD PTR [rsp+0x40]
   140003215:	add    rsp,0x20
   140003219:	pop    rdi
   14000321a:	ret    
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	int3   
   140003221:	int3   
   140003222:	int3   
   140003223:	int3   
   140003224:	mov    QWORD PTR [rsp+0x10],rbx
   140003229:	mov    QWORD PTR [rsp+0x18],rbp
   14000322e:	mov    QWORD PTR [rsp+0x20],rsi
   140003233:	push   rdi
   140003234:	push   r12
   140003236:	push   r13
   140003238:	push   r14
   14000323a:	push   r15
   14000323c:	sub    rsp,0x20
   140003240:	movups xmm0,XMMWORD PTR [rdx]
   140003243:	mov    rsi,rcx
   140003246:	or     r15,0xffffffffffffffff
   14000324a:	xor    edi,edi
   14000324c:	mov    r14,rdx
   14000324f:	movups XMMWORD PTR [rcx],xmm0
   140003252:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140003256:	lea    r12d,[r15+0x3]
   14000325a:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000325e:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140003262:	movups XMMWORD PTR [rcx+0x20],xmm0
   140003266:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14000326a:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000326e:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140003272:	movups XMMWORD PTR [rcx+0x40],xmm0
   140003276:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14000327a:	movups XMMWORD PTR [rcx+0x50],xmm1
   14000327e:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140003282:	movups XMMWORD PTR [rcx+0x60],xmm0
   140003286:	mov    ecx,0x80
   14000328b:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14000328f:	movups XMMWORD PTR [rsi+rcx*1-0x10],xmm0
   140003294:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140003298:	movups XMMWORD PTR [rsi+rcx*1],xmm1
   14000329c:	mov    rcx,QWORD PTR [rdx+0x10]
   1400032a0:	test   rcx,rcx
   1400032a3:	jne    0x1400032ac
   1400032a5:	mov    QWORD PTR [rsp+0x50],r12
   1400032aa:	jmp    0x1400032c5
   1400032ac:	mov    rax,r15
   1400032af:	inc    rax
   1400032b2:	cmp    WORD PTR [rcx+rax*2],di
   1400032b6:	jne    0x1400032af
   1400032b8:	lea    rax,[rax*2+0x2]
   1400032c0:	mov    QWORD PTR [rsp+0x50],rax
   1400032c5:	mov    rax,QWORD PTR [rdx+0x20]
   1400032c9:	test   rax,rax
   1400032cc:	jne    0x1400032d5
   1400032ce:	lea    ebx,[rax+0x1]
   1400032d1:	mov    ecx,ebx
   1400032d3:	jmp    0x1400032e9
   1400032d5:	mov    rcx,r15
   1400032d8:	inc    rcx
   1400032db:	cmp    BYTE PTR [rax+rcx*1],dil
   1400032df:	jne    0x1400032d8
   1400032e1:	mov    ebx,0x1
   1400032e6:	add    rcx,rbx
   1400032e9:	mov    rax,QWORD PTR [rdx+0x28]
   1400032ed:	test   rax,rax
   1400032f0:	jne    0x1400032f7
   1400032f2:	mov    r9,rbx
   1400032f5:	jmp    0x140003306
   1400032f7:	mov    r9,r15
   1400032fa:	inc    r9
   1400032fd:	cmp    BYTE PTR [rax+r9*1],dil
   140003301:	jne    0x1400032fa
   140003303:	add    r9,rbx
   140003306:	mov    rax,QWORD PTR [rdx+0x30]
   14000330a:	test   rax,rax
   14000330d:	jne    0x140003314
   14000330f:	mov    r11,rbx
   140003312:	jmp    0x140003323
   140003314:	mov    r11,r15
   140003317:	inc    r11
   14000331a:	cmp    BYTE PTR [rax+r11*1],dil
   14000331e:	jne    0x140003317
   140003320:	add    r11,rbx
   140003323:	mov    rax,QWORD PTR [rdx+0x40]
   140003327:	test   rax,rax
   14000332a:	jne    0x140003331
   14000332c:	mov    r10,rbx
   14000332f:	jmp    0x140003340
   140003331:	mov    r10,r15
   140003334:	inc    r10
   140003337:	cmp    BYTE PTR [rax+r10*1],dil
   14000333b:	jne    0x140003334
   14000333d:	add    r10,rbx
   140003340:	mov    rax,QWORD PTR [rdx+0x78]
   140003344:	test   rax,rax
   140003347:	jne    0x14000334e
   140003349:	mov    r8,rbx
   14000334c:	jmp    0x14000335d
   14000334e:	mov    r8,r15
   140003351:	inc    r8
   140003354:	cmp    BYTE PTR [rax+r8*1],dil
   140003358:	jne    0x140003351
   14000335a:	add    r8,rbx
   14000335d:	mov    rax,QWORD PTR [rdx+0x68]
   140003361:	test   rax,rax
   140003364:	jne    0x14000336b
   140003366:	mov    rdx,rbx
   140003369:	jmp    0x14000337a
   14000336b:	mov    rdx,r15
   14000336e:	inc    rdx
   140003371:	cmp    BYTE PTR [rax+rdx*1],dil
   140003375:	jne    0x14000336e
   140003377:	add    rdx,rbx
   14000337a:	mov    rbp,QWORD PTR [r14+0x70]
   14000337e:	test   rbp,rbp
   140003381:	jne    0x140003388
   140003383:	mov    r13,r12
   140003386:	jmp    0x14000339d
   140003388:	mov    rax,r15
   14000338b:	inc    rax
   14000338e:	cmp    WORD PTR [rbp+rax*2+0x0],di
   140003393:	jne    0x14000338b
   140003395:	lea    r13,[rax*2+0x2]
   14000339d:	mov    rbp,QWORD PTR [r14+0x50]
   1400033a1:	test   rbp,rbp
   1400033a4:	jne    0x1400033ab
   1400033a6:	mov    rax,rbx
   1400033a9:	jmp    0x1400033ba
   1400033ab:	mov    rax,r15
   1400033ae:	inc    rax
   1400033b1:	cmp    BYTE PTR [rax+rbp*1],dil
   1400033b5:	jne    0x1400033ae
   1400033b7:	add    rax,rbx
   1400033ba:	mov    r15,QWORD PTR [r14+0x58]
   1400033be:	test   r15,r15
   1400033c1:	je     0x1400033d9
   1400033c3:	or     rbp,0xffffffffffffffff
   1400033c7:	inc    rbp
   1400033ca:	cmp    WORD PTR [r15+rbp*2],di
   1400033cf:	jne    0x1400033c7
   1400033d1:	lea    r12,[rbp*2+0x2]
   1400033d9:	lea    rbp,[r12+rax*1]
   1400033dd:	mov    rax,QWORD PTR [rsi+0x90]
   1400033e4:	add    rbp,r13
   1400033e7:	add    rbp,rdx
   1400033ea:	add    rbp,r8
   1400033ed:	add    rbp,r10
   1400033f0:	add    rbp,r11
   1400033f3:	add    rbp,r9
   1400033f6:	add    rbp,rcx
   1400033f9:	add    rbp,QWORD PTR [rsp+0x50]
   1400033fe:	test   rax,rax
   140003401:	je     0x140003414
   140003403:	cmp    DWORD PTR [rax],ebx
   140003405:	jne    0x140003414
   140003407:	cmp    QWORD PTR [rsi+0x98],rbp
   14000340e:	jae    0x1400034da
   140003414:	mov    rcx,rax
   140003417:	test   rax,rax
   14000341a:	je     0x140003443
   14000341c:	or     eax,0xffffffff
   14000341f:	lock xadd DWORD PTR [rcx],eax
   140003423:	cmp    eax,0x1
   140003426:	jne    0x140003435
   140003428:	mov    rcx,QWORD PTR [rsi+0x90]
   14000342f:	call   QWORD PTR [rip+0x4eb3]        # 0x1400082e8
   140003435:	mov    QWORD PTR [rsi+0x90],rdi
   14000343c:	mov    QWORD PTR [rsi+0x98],rdi
   140003443:	test   rbp,rbp
   140003446:	jne    0x140003481
   140003448:	mov    rcx,QWORD PTR [rsi+0x90]
   14000344f:	test   rcx,rcx
   140003452:	je     0x1400034da
   140003458:	or     eax,0xffffffff
   14000345b:	lock xadd DWORD PTR [rcx],eax
   14000345f:	cmp    eax,0x1
   140003462:	jne    0x140003471
   140003464:	mov    rcx,QWORD PTR [rsi+0x90]
   14000346b:	call   QWORD PTR [rip+0x4e77]        # 0x1400082e8
   140003471:	mov    QWORD PTR [rsi+0x90],rdi
   140003478:	mov    QWORD PTR [rsi+0x98],rdi
   14000347f:	jmp    0x1400034da
   140003481:	lea    rcx,[rbp+0x4]
   140003485:	call   QWORD PTR [rip+0x4e65]        # 0x1400082f0
   14000348b:	mov    r15,rax
   14000348e:	test   rax,rax
   140003491:	je     0x1400034da
   140003493:	mov    DWORD PTR [rax],edi
   140003495:	mov    rax,QWORD PTR [rsi+0x90]
   14000349c:	test   rax,rax
   14000349f:	je     0x1400034c8
   1400034a1:	or     ecx,0xffffffff
   1400034a4:	lock xadd DWORD PTR [rax],ecx
   1400034a8:	cmp    ecx,0x1
   1400034ab:	jne    0x1400034ba
   1400034ad:	mov    rcx,QWORD PTR [rsi+0x90]
   1400034b4:	call   QWORD PTR [rip+0x4e2e]        # 0x1400082e8
   1400034ba:	mov    QWORD PTR [rsi+0x90],rdi
   1400034c1:	mov    QWORD PTR [rsi+0x98],rdi
   1400034c8:	mov    QWORD PTR [rsi+0x90],r15
   1400034cf:	mov    QWORD PTR [rsi+0x98],rbp
   1400034d6:	lock add DWORD PTR [r15],ebx
   1400034da:	mov    rax,QWORD PTR [rsi+0x90]
   1400034e1:	mov    rcx,QWORD PTR [rsi+0x98]
   1400034e8:	test   rax,rax
   1400034eb:	je     0x1400034f1
   1400034ed:	lea    rdi,[rax+0x4]
   1400034f1:	mov    r8,QWORD PTR [r14+0x10]
   1400034f5:	lea    rdx,[rcx+rdi*1]
   1400034f9:	mov    rax,rdi
   1400034fc:	lea    r9,[rsi+0x10]
   140003500:	neg    rax
   140003503:	mov    rcx,rdi
   140003506:	sbb    rbx,rbx
   140003509:	and    rbx,rdx
   14000350c:	mov    rdx,rbx
   14000350f:	call   0x140005148
   140003514:	mov    r8,QWORD PTR [r14+0x20]
   140003518:	lea    r9,[rsi+0x20]
   14000351c:	mov    rdx,rbx
   14000351f:	mov    rcx,rax
   140003522:	call   0x140005200
   140003527:	mov    r8,QWORD PTR [r14+0x28]
   14000352b:	lea    r9,[rsi+0x28]
   14000352f:	mov    rdx,rbx
   140003532:	mov    rcx,rax
   140003535:	call   0x140005200
   14000353a:	mov    r8,QWORD PTR [r14+0x30]
   14000353e:	lea    r9,[rsi+0x30]
   140003542:	mov    rdx,rbx
   140003545:	mov    rcx,rax
   140003548:	call   0x140005200
   14000354d:	mov    r8,QWORD PTR [r14+0x40]
   140003551:	lea    r9,[rsi+0x40]
   140003555:	mov    rdx,rbx
   140003558:	mov    rcx,rax
   14000355b:	call   0x140005200
   140003560:	mov    r8,QWORD PTR [r14+0x78]
   140003564:	lea    r9,[rsi+0x78]
   140003568:	mov    rdx,rbx
   14000356b:	mov    rcx,rax
   14000356e:	call   0x140005200
   140003573:	mov    r8,QWORD PTR [r14+0x68]
   140003577:	lea    r9,[rsi+0x68]
   14000357b:	mov    rdx,rbx
   14000357e:	mov    rcx,rax
   140003581:	call   0x140005200
   140003586:	mov    r8,QWORD PTR [r14+0x70]
   14000358a:	lea    r9,[rsi+0x70]
   14000358e:	mov    rdx,rbx
   140003591:	mov    rcx,rax
   140003594:	call   0x140005148
   140003599:	mov    r8,QWORD PTR [r14+0x50]
   14000359d:	lea    r9,[rsi+0x50]
   1400035a1:	mov    rdx,rbx
   1400035a4:	mov    rcx,rax
   1400035a7:	call   0x140005200
   1400035ac:	mov    r8,QWORD PTR [r14+0x58]
   1400035b0:	lea    r9,[rsi+0x58]
   1400035b4:	mov    rdx,rbx
   1400035b7:	mov    rcx,rax
   1400035ba:	mov    rbx,QWORD PTR [rsp+0x58]
   1400035bf:	mov    rbp,QWORD PTR [rsp+0x60]
   1400035c4:	mov    rsi,QWORD PTR [rsp+0x68]
   1400035c9:	add    rsp,0x20
   1400035cd:	pop    r15
   1400035cf:	pop    r14
   1400035d1:	pop    r13
   1400035d3:	pop    r12
   1400035d5:	pop    rdi
   1400035d6:	jmp    0x140005148
   1400035db:	int3   
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	int3   
   1400035e1:	int3   
   1400035e2:	int3   
   1400035e3:	int3   
   1400035e4:	rex push rbx
   1400035e6:	sub    rsp,0x20
   1400035ea:	and    QWORD PTR [rcx+0x90],0x0
   1400035f2:	mov    rbx,rcx
   1400035f5:	and    QWORD PTR [rcx+0x98],0x0
   1400035fd:	call   0x140003224
   140003602:	mov    rax,rbx
   140003605:	add    rsp,0x20
   140003609:	pop    rbx
   14000360a:	ret    
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	int3   
   140003611:	int3   
   140003612:	int3   
   140003613:	int3   
   140003614:	rex push rbx
   140003616:	sub    rsp,0x30
   14000361a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003623:	mov    rbx,QWORD PTR [rip+0xb19e]        # 0x14000e7c8
   14000362a:	test   rbx,rbx
   14000362d:	je     0x14000363c
   14000362f:	mov    rcx,rbx
   140003632:	call   QWORD PTR [rip+0x4df8]        # 0x140008430
   140003638:	call   rbx
   14000363a:	jmp    0x140003657
   14000363c:	xor    edx,edx
   14000363e:	xor    ecx,ecx
   140003640:	call   0x14000696c
   140003645:	nop
   140003646:	mov    eax,DWORD PTR [rsp+0x40]
   14000364a:	jmp    0x140003651
   14000364c:	mov    eax,0x8007000e
   140003651:	jmp    0x140003657
   140003653:	mov    eax,DWORD PTR [rsp+0x40]
   140003657:	add    rsp,0x30
   14000365b:	pop    rbx
   14000365c:	ret    
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	int3   
   140003661:	int3   
   140003662:	int3   
   140003663:	int3   
   140003664:	mov    QWORD PTR [rsp+0x18],rbx
   140003669:	mov    DWORD PTR [rsp+0x10],edx
   14000366d:	mov    QWORD PTR [rsp+0x8],rcx
   140003672:	push   rbp
   140003673:	push   rsi
   140003674:	push   rdi
   140003675:	push   r12
   140003677:	push   r13
   140003679:	push   r14
   14000367b:	push   r15
   14000367d:	sub    rsp,0x40
   140003681:	mov    r14d,DWORD PTR [rsp+0xb0]
   140003689:	mov    r13,r8
   14000368c:	mov    r15,QWORD PTR [rsp+0xd0]
   140003694:	xor    r8d,r8d
   140003697:	mov    rbp,QWORD PTR [rsp+0xe0]
   14000369f:	mov    r12,r9
   1400036a2:	mov    ebx,DWORD PTR [rsp+0xb8]
   1400036a9:	mov    edi,r8d
   1400036ac:	mov    r10d,r14d
   1400036af:	mov    WORD PTR [r15],r8w
   1400036b3:	mov    BYTE PTR [rbp+0x0],r8b
   1400036b7:	test   r14d,r14d
   1400036ba:	je     0x14000372f
   1400036bc:	sub    r10d,0x1
   1400036c0:	je     0x140003726
   1400036c2:	sub    r10d,0x1
   1400036c6:	je     0x14000371d
   1400036c8:	sub    r10d,0x1
   1400036cc:	je     0x1400036dd
   1400036ce:	cmp    r10d,0x1
   1400036d2:	jne    0x140003738
   1400036d4:	mov    ecx,ebx
   1400036d6:	call   0x140002f20
   1400036db:	jmp    0x140003736
   1400036dd:	test   ebx,ebx
   1400036df:	js     0x140003714
   1400036e1:	mov    rax,QWORD PTR [rsp+0xa8]
   1400036e9:	mov    ebx,0x8007029c
   1400036ee:	mov    DWORD PTR [rsp+0x38],ebx
   1400036f2:	mov    r8,r13
   1400036f5:	mov    DWORD PTR [rsp+0x30],0x3
   1400036fd:	mov    QWORD PTR [rsp+0x28],rax
   140003702:	mov    rax,QWORD PTR [rsp+0xa0]
   14000370a:	mov    QWORD PTR [rsp+0x20],rax
   14000370f:	call   0x140003bb8
   140003714:	mov    ecx,ebx
   140003716:	call   0x140002ef8
   14000371b:	jmp    0x140003736
   14000371d:	mov    ecx,ebx
   14000371f:	call   0x140002edc
   140003724:	jmp    0x140003736
   140003726:	mov    ecx,ebx
   140003728:	call   0x140002ec0
   14000372d:	jmp    0x140003736
   14000372f:	mov    ecx,ebx
   140003731:	call   0x140002ea4
   140003736:	mov    edi,eax
   140003738:	mov    rsi,QWORD PTR [rsp+0xf0]
   140003740:	mov    DWORD PTR [rsi],r14d
   140003743:	mov    r14d,0x1
   140003749:	mov    eax,r14d
   14000374c:	mov    DWORD PTR [rsi+0x4],ebx
   14000374f:	lock xadd DWORD PTR [rip+0xb0d5],eax        # 0x14000e82c
   140003757:	add    eax,r14d
   14000375a:	xor    ecx,ecx
   14000375c:	mov    DWORD PTR [rsi+0x8],eax
   14000375f:	mov    rax,QWORD PTR [rsp+0xc0]
   140003767:	test   rax,rax
   14000376a:	je     0x140003771
   14000376c:	cmp    WORD PTR [rax],cx
   14000376f:	jne    0x140003774
   140003771:	mov    rax,rcx
   140003774:	mov    QWORD PTR [rsi+0x10],rax
   140003778:	call   QWORD PTR [rip+0x4a0a]        # 0x140008188
   14000377e:	mov    rbx,QWORD PTR [rip+0xb05b]        # 0x14000e7e0
   140003785:	mov    DWORD PTR [rsi+0x18],eax
   140003788:	mov    eax,DWORD PTR [rsp+0x88]
   14000378f:	mov    DWORD PTR [rsi+0x38],eax
   140003792:	mov    rax,QWORD PTR [rsp+0xa0]
   14000379a:	mov    QWORD PTR [rsi+0x20],rax
   14000379e:	mov    rax,QWORD PTR [rsp+0xa8]
   1400037a6:	mov    QWORD PTR [rsi+0x80],rax
   1400037ad:	mov    rax,QWORD PTR [rsp+0x80]
   1400037b5:	mov    QWORD PTR [rsi+0x30],r13
   1400037b9:	xor    r13d,r13d
   1400037bc:	mov    QWORD PTR [rsi+0x88],rax
   1400037c3:	mov    DWORD PTR [rsi+0x3c],edi
   1400037c6:	mov    QWORD PTR [rsi+0x28],r12
   1400037ca:	mov    QWORD PTR [rsi+0x40],r13
   1400037ce:	mov    DWORD PTR [rsi+0x60],r13d
   1400037d2:	mov    QWORD PTR [rsi+0x68],r13
   1400037d6:	mov    QWORD PTR [rsi+0x70],r13
   1400037da:	mov    DWORD PTR [rsi+0x48],r13d
   1400037de:	mov    QWORD PTR [rsi+0x50],r13
   1400037e2:	mov    QWORD PTR [rsi+0x58],r13
   1400037e6:	test   rbx,rbx
   1400037e9:	je     0x1400037f8
   1400037eb:	mov    rcx,rbx
   1400037ee:	call   QWORD PTR [rip+0x4c3c]        # 0x140008430
   1400037f4:	call   rbx
   1400037f6:	jmp    0x1400037fb
   1400037f8:	mov    rax,r13
   1400037fb:	mov    QWORD PTR [rsi+0x78],rax
   1400037ff:	mov    r12b,r13b
   140003802:	mov    BYTE PTR [rbp+0x0],r13b
   140003806:	call   QWORD PTR [rip+0x497c]        # 0x140008188
   14000380c:	mov    r8d,eax
   14000380f:	lea    rbx,[rip+0xb06a]        # 0x14000e880
   140003816:	mov    r9d,eax
   140003819:	movabs rax,0xcccccccccccccccd
   140003823:	mul    r9
   140003826:	shr    rdx,0x4
   14000382a:	lea    rcx,[rdx+rdx*4]
   14000382e:	shl    rcx,0x2
   140003832:	sub    r8,rcx
   140003835:	mov    rbx,QWORD PTR [rbx+r8*8]
   140003839:	jmp    0x140003845
   14000383b:	cmp    DWORD PTR [rbx+0x8],r9d
   14000383f:	je     0x14000384d
   140003841:	mov    rbx,QWORD PTR [rbx+0x10]
   140003845:	test   rbx,rbx
   140003848:	jne    0x14000383b
   14000384a:	mov    rbx,r13
   14000384d:	test   rbx,rbx
   140003850:	je     0x1400038a1
   140003852:	cmp    QWORD PTR [rbx],r13
   140003855:	je     0x1400038a1
   140003857:	mov    BYTE PTR [rbp+0x0],r13b
   14000385b:	mov    r9d,0x400
   140003861:	mov    rdx,QWORD PTR [rbx]
   140003864:	mov    r8,rbp
   140003867:	mov    rcx,rsi
   14000386a:	call   0x140003130
   14000386f:	test   al,al
   140003871:	je     0x140003877
   140003873:	mov    QWORD PTR [rsi+0x40],rbp
   140003877:	mov    rbp,QWORD PTR [rbx]
   14000387a:	mov    rdi,QWORD PTR [rbp+0x8]
   14000387e:	mov    rax,QWORD PTR [rdi]
   140003881:	mov    rbx,QWORD PTR [rax]
   140003884:	mov    rcx,rbx
   140003887:	call   QWORD PTR [rip+0x4ba3]        # 0x140008430
   14000388d:	mov    rdx,rsi
   140003890:	mov    rcx,rdi
   140003893:	call   rbx
   140003895:	mov    rbp,QWORD PTR [rbp+0x10]
   140003899:	or     r12b,al
   14000389c:	test   rbp,rbp
   14000389f:	jne    0x14000387a
   1400038a1:	mov    rdi,QWORD PTR [rip+0xaf10]        # 0x14000e7b8
   1400038a8:	test   rdi,rdi
   1400038ab:	je     0x1400038c5
   1400038ad:	mov    rcx,rdi
   1400038b0:	call   QWORD PTR [rip+0x4b7a]        # 0x140008430
   1400038b6:	mov    rdx,rsi
   1400038b9:	mov    cl,r12b
   1400038bc:	call   rdi
   1400038be:	mov    rdi,QWORD PTR [rip+0xaef3]        # 0x14000e7b8
   1400038c5:	mov    rbx,QWORD PTR [rip+0xaee4]        # 0x14000e7b0
   1400038cc:	test   rbx,rbx
   1400038cf:	je     0x1400038e6
   1400038d1:	mov    rcx,rbx
   1400038d4:	call   QWORD PTR [rip+0x4b56]        # 0x140008430
   1400038da:	mov    rcx,rsi
   1400038dd:	call   rbx
   1400038df:	mov    rdi,QWORD PTR [rip+0xaed2]        # 0x14000e7b8
   1400038e6:	cmp    DWORD PTR [rsi+0x4],r13d
   1400038ea:	jl     0x1400038fa
   1400038ec:	cmp    DWORD PTR [rsp+0xb0],0x4
   1400038f4:	jne    0x1400039a1
   1400038fa:	cmp    BYTE PTR [rip+0xaef7],r13b        # 0x14000e7f8
   140003901:	mov    rbx,QWORD PTR [rip+0xaef8]        # 0x14000e800
   140003908:	jne    0x140003917
   14000390a:	test   rdi,rdi
   14000390d:	jne    0x140003914
   14000390f:	test   rbx,rbx
   140003912:	je     0x140003917
   140003914:	mov    r14b,r13b
   140003917:	cmp    BYTE PTR [rsp+0xc8],r13b
   14000391f:	jne    0x140003949
   140003921:	test   r14b,r14b
   140003924:	jne    0x140003949
   140003926:	test   rbx,rbx
   140003929:	je     0x140003989
   14000392b:	cmp    BYTE PTR [rip+0xaeb6],r13b        # 0x14000e7e8
   140003932:	jne    0x140003989
   140003934:	mov    rcx,rbx
   140003937:	call   QWORD PTR [rip+0x4af3]        # 0x140008430
   14000393d:	xor    r8d,r8d
   140003940:	xor    edx,edx
   140003942:	mov    rcx,rsi
   140003945:	call   rbx
   140003947:	jmp    0x140003989
   140003949:	mov    edi,0x800
   14000394e:	test   rbx,rbx
   140003951:	je     0x140003967
   140003953:	mov    rcx,rbx
   140003956:	call   QWORD PTR [rip+0x4ad4]        # 0x140008430
   14000395c:	mov    r8d,edi
   14000395f:	mov    rdx,r15
   140003962:	mov    rcx,rsi
   140003965:	call   rbx
   140003967:	cmp    WORD PTR [r15],r13w
   14000396b:	jne    0x14000397b
   14000396d:	mov    r8,rsi
   140003970:	mov    rdx,rdi
   140003973:	mov    rcx,r15
   140003976:	call   0x140002c70
   14000397b:	test   r14b,r14b
   14000397e:	je     0x140003989
   140003980:	mov    rcx,r15
   140003983:	call   QWORD PTR [rip+0x473f]        # 0x1400080c8
   140003989:	mov    rbx,QWORD PTR [rsp+0x90]
   140003991:	add    rsp,0x40
   140003995:	pop    r15
   140003997:	pop    r14
   140003999:	pop    r13
   14000399b:	pop    r12
   14000399d:	pop    rdi
   14000399e:	pop    rsi
   14000399f:	pop    rbp
   1400039a0:	ret    
   1400039a1:	mov    rcx,QWORD PTR [rsp+0x78]
   1400039a6:	lea    r8,[rip+0x7573]        # 0x14000af20
   1400039ad:	mov    edx,0xb46
   1400039b2:	call   0x140003c3c
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	rex push rbx
   1400039c2:	push   rdi
   1400039c3:	mov    eax,0x15c8
   1400039c8:	call   0x140006a60
   1400039cd:	sub    rsp,rax
   1400039d0:	mov    rax,QWORD PTR [rip+0xa631]        # 0x14000e008
   1400039d7:	xor    rax,rsp
   1400039da:	mov    QWORD PTR [rsp+0x15b0],rax
   1400039e2:	mov    edi,DWORD PTR [rsp+0x1610]
   1400039e9:	mov    r10,QWORD PTR [rsp+0x1600]
   1400039f1:	mov    r11,QWORD PTR [rsp+0x1608]
   1400039f9:	test   edi,edi
   1400039fb:	jne    0x140003a0b
   1400039fd:	cmp    QWORD PTR [rip+0xadbb],0x0        # 0x14000e7c0
   140003a05:	je     0x140003a0b
   140003a07:	mov    bl,0x1
   140003a09:	jmp    0x140003a0d
   140003a0b:	xor    bl,bl
   140003a0d:	lea    rax,[rsp+0x80]
   140003a15:	mov    QWORD PTR [rsp+0x70],rax
   140003a1a:	lea    rax,[rsp+0x1b0]
   140003a22:	mov    QWORD PTR [rsp+0x60],rax
   140003a27:	lea    rax,[rsp+0x5b0]
   140003a2f:	mov    QWORD PTR [rsp+0x50],rax
   140003a34:	mov    eax,DWORD PTR [rsp+0x1618]
   140003a3b:	mov    BYTE PTR [rsp+0x48],bl
   140003a3f:	and    QWORD PTR [rsp+0x40],0x0
   140003a45:	mov    DWORD PTR [rsp+0x38],eax
   140003a49:	mov    DWORD PTR [rsp+0x30],edi
   140003a4d:	mov    QWORD PTR [rsp+0x28],r11
   140003a52:	mov    QWORD PTR [rsp+0x20],r10
   140003a57:	call   0x140003664
   140003a5c:	cmp    edi,0x4
   140003a5f:	jne    0x140003a80
   140003a61:	lea    ecx,[rdi+0x3]
   140003a64:	int    0x29
   140003a66:	mov    rcx,QWORD PTR [rsp+0x15b0]
   140003a6e:	xor    rcx,rsp
   140003a71:	call   0x140005950
   140003a76:	add    rsp,0x15c8
   140003a7d:	pop    rdi
   140003a7e:	pop    rbx
   140003a7f:	ret    
   140003a80:	test   edi,edi
   140003a82:	jne    0x140003a66
   140003a84:	test   bl,bl
   140003a86:	je     0x140003aaa
   140003a88:	mov    rbx,QWORD PTR [rip+0xad31]        # 0x14000e7c0
   140003a8f:	mov    rcx,rbx
   140003a92:	call   QWORD PTR [rip+0x4998]        # 0x140008430
   140003a98:	lea    rdx,[rsp+0x5b0]
   140003aa0:	lea    rcx,[rsp+0x80]
   140003aa8:	call   rbx
   140003aaa:	lea    rdx,[rsp+0x80]
   140003ab2:	lea    rcx,[rsp+0x110]
   140003aba:	call   0x1400035e4
   140003abf:	lea    rdx,[rip+0x8efa]        # 0x14000c9c0
   140003ac6:	lea    rcx,[rsp+0x110]
   140003ace:	call   0x14000696c
   140003ad3:	int3   
   140003ad4:	int3   
   140003ad5:	int3   
   140003ad6:	int3   
   140003ad7:	int3   
   140003ad8:	int3   
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	rex push rbx
   140003ade:	sub    rsp,0x20
   140003ae2:	mov    rbx,rcx
   140003ae5:	mov    rcx,QWORD PTR [rcx+0x90]
   140003aec:	test   rcx,rcx
   140003aef:	je     0x140003b1a
   140003af1:	or     eax,0xffffffff
   140003af4:	lock xadd DWORD PTR [rcx],eax
   140003af8:	cmp    eax,0x1
   140003afb:	jne    0x140003b0a
   140003afd:	mov    rcx,QWORD PTR [rbx+0x90]
   140003b04:	call   QWORD PTR [rip+0x47de]        # 0x1400082e8
   140003b0a:	and    QWORD PTR [rbx+0x90],0x0
   140003b12:	and    QWORD PTR [rbx+0x98],0x0
   140003b1a:	add    rsp,0x20
   140003b1e:	pop    rbx
   140003b1f:	ret    
   140003b20:	int3   
   140003b21:	int3   
   140003b22:	int3   
   140003b23:	int3   
   140003b24:	int3   
   140003b25:	int3   
   140003b26:	int3   
   140003b27:	int3   
   140003b28:	movups xmm0,XMMWORD PTR [rdx]
   140003b2b:	mov    r9d,0x80
   140003b31:	movups XMMWORD PTR [rcx],xmm0
   140003b34:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140003b38:	movups XMMWORD PTR [rcx+0x10],xmm1
   140003b3c:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140003b40:	movups XMMWORD PTR [rcx+0x20],xmm0
   140003b44:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140003b48:	movups XMMWORD PTR [rcx+0x30],xmm1
   140003b4c:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140003b50:	movups XMMWORD PTR [rcx+0x40],xmm0
   140003b54:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140003b58:	movups XMMWORD PTR [rcx+0x50],xmm1
   140003b5c:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140003b60:	movups XMMWORD PTR [rcx+0x60],xmm0
   140003b64:	movups xmm0,XMMWORD PTR [rdx+0x70]
   140003b68:	movups XMMWORD PTR [rcx+r9*1-0x10],xmm0
   140003b6e:	movups xmm1,XMMWORD PTR [rdx+r9*1]
   140003b73:	movups XMMWORD PTR [rcx+r9*1],xmm1
   140003b78:	and    QWORD PTR [rcx+0x90],0x0
   140003b80:	and    QWORD PTR [rcx+0x98],0x0
   140003b88:	mov    rax,QWORD PTR [rdx+0x90]
   140003b8f:	mov    r8,QWORD PTR [rdx+0x98]
   140003b96:	test   rax,rax
   140003b99:	je     0x140003bac
   140003b9b:	mov    QWORD PTR [rcx+0x90],rax
   140003ba2:	mov    QWORD PTR [rcx+0x98],r8
   140003ba9:	lock inc DWORD PTR [rax]
   140003bac:	mov    rax,rcx
   140003baf:	ret    
   140003bb0:	int3   
   140003bb1:	int3   
   140003bb2:	int3   
   140003bb3:	int3   
   140003bb4:	int3   
   140003bb5:	int3   
   140003bb6:	int3   
   140003bb7:	int3   
   140003bb8:	sub    rsp,0x58
   140003bbc:	mov    eax,DWORD PTR [rsp+0x98]
   140003bc3:	mov    DWORD PTR [rsp+0x38],eax
   140003bc7:	mov    eax,DWORD PTR [rsp+0x90]
   140003bce:	mov    DWORD PTR [rsp+0x30],eax
   140003bd2:	mov    rax,QWORD PTR [rsp+0x88]
   140003bda:	mov    QWORD PTR [rsp+0x28],rax
   140003bdf:	mov    rax,QWORD PTR [rsp+0x80]
   140003be7:	mov    QWORD PTR [rsp+0x20],rax
   140003bec:	call   0x1400039c0
   140003bf1:	add    rsp,0x58
   140003bf5:	ret    
   140003bf6:	int3   
   140003bf7:	int3   
   140003bf8:	int3   
   140003bf9:	int3   
   140003bfa:	int3   
   140003bfb:	int3   
   140003bfc:	sub    rsp,0x48
   140003c00:	mov    rax,QWORD PTR [rsp+0x48]
   140003c05:	lea    r8,[rip+0x7314]        # 0x14000af20
   140003c0c:	mov    DWORD PTR [rsp+0x38],r9d
   140003c11:	mov    edx,0xad2
   140003c16:	mov    DWORD PTR [rsp+0x30],0x4
   140003c1e:	xor    r9d,r9d
   140003c21:	mov    QWORD PTR [rsp+0x28],rax
   140003c26:	and    QWORD PTR [rsp+0x20],0x0
   140003c2c:	call   0x140003bb8
   140003c31:	add    rsp,0x48
   140003c35:	ret    
   140003c36:	int3   
   140003c37:	int3   
   140003c38:	int3   
   140003c39:	int3   
   140003c3a:	int3   
   140003c3b:	int3   
   140003c3c:	sub    rsp,0x48
   140003c40:	mov    rax,QWORD PTR [rsp+0x48]
   140003c45:	xor    r9d,r9d
   140003c48:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   140003c50:	mov    DWORD PTR [rsp+0x30],0x4
   140003c58:	mov    QWORD PTR [rsp+0x28],rax
   140003c5d:	and    QWORD PTR [rsp+0x20],0x0
   140003c63:	call   0x140003bb8
   140003c68:	add    rsp,0x48
   140003c6c:	ret    
   140003c6d:	int3   
   140003c6e:	int3   
   140003c6f:	int3   
   140003c70:	int3   
   140003c71:	int3   
   140003c72:	int3   
   140003c73:	int3   
   140003c74:	mov    rax,rsp
   140003c77:	mov    QWORD PTR [rax+0x8],rcx
   140003c7b:	push   r13
   140003c7d:	push   r14
   140003c7f:	push   r15
   140003c81:	sub    rsp,0x160
   140003c88:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003c90:	mov    QWORD PTR [rax+0x10],rbx
   140003c94:	mov    QWORD PTR [rax+0x18],rdi
   140003c98:	mov    QWORD PTR [rax+0x20],r12
   140003c9c:	mov    r12,r9
   140003c9f:	mov    r13,r8
   140003ca2:	mov    r15,rdx
   140003ca5:	and    DWORD PTR [rsp+0x30],0x0
   140003caa:	and    QWORD PTR [rsp+0x38],0x0
   140003cb0:	and    QWORD PTR [rsp+0x48],0x0
   140003cb6:	and    QWORD PTR [rsp+0x40],0x0
   140003cbc:	and    QWORD PTR [rsp+0x58],0x0
   140003cc2:	and    QWORD PTR [rsp+0x50],0x0
   140003cc8:	xor    edx,edx
   140003cca:	xor    ecx,ecx
   140003ccc:	call   QWORD PTR [rip+0x43e6]        # 0x1400080b8
   140003cd2:	mov    r14d,eax
   140003cd5:	test   eax,eax
   140003cd7:	jns    0x140003cde
   140003cd9:	jmp    0x1400040b7
   140003cde:	mov    r8d,0x1
   140003ce4:	mov    DWORD PTR [rsp+0x30],r8d
   140003ce9:	lea    rax,[rsp+0x38]
   140003cee:	mov    QWORD PTR [rsp+0x20],rax
   140003cf3:	lea    r9,[rip+0x7256]        # 0x14000af50
   140003cfa:	xor    edx,edx
   140003cfc:	lea    rcx,[rip+0x725d]        # 0x14000af60
   140003d03:	call   QWORD PTR [rip+0x439f]        # 0x1400080a8
   140003d09:	mov    r14d,eax
   140003d0c:	test   eax,eax
   140003d0e:	jns    0x140003d15
   140003d10:	jmp    0x1400040b0
   140003d15:	lea    rcx,[rsp+0x60]
   140003d1a:	call   QWORD PTR [rip+0x4378]        # 0x140008098
   140003d20:	nop
   140003d21:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140003d26:	movaps XMMWORD PTR [rsp+0xf0],xmm0
   140003d2e:	movsd  xmm1,QWORD PTR [rsp+0x70]
   140003d34:	movsd  QWORD PTR [rsp+0x100],xmm1
   140003d3d:	lea    rcx,[rsp+0xd0]
   140003d45:	call   QWORD PTR [rip+0x434d]        # 0x140008098
   140003d4b:	nop
   140003d4c:	movups xmm0,XMMWORD PTR [rsp+0xd0]
   140003d54:	movaps XMMWORD PTR [rsp+0x130],xmm0
   140003d5c:	movsd  xmm1,QWORD PTR [rsp+0xe0]
   140003d65:	movsd  QWORD PTR [rsp+0x140],xmm1
   140003d6e:	lea    rcx,[rsp+0xb8]
   140003d76:	call   QWORD PTR [rip+0x431c]        # 0x140008098
   140003d7c:	nop
   140003d7d:	movups xmm0,XMMWORD PTR [rsp+0xb8]
   140003d85:	movaps XMMWORD PTR [rsp+0x110],xmm0
   140003d8d:	movsd  xmm1,QWORD PTR [rsp+0xc8]
   140003d96:	movsd  QWORD PTR [rsp+0x120],xmm1
   140003d9f:	lea    rcx,[rsp+0xa0]
   140003da7:	call   QWORD PTR [rip+0x42eb]        # 0x140008098
   140003dad:	nop
   140003dae:	movups xmm0,XMMWORD PTR [rsp+0xa0]
   140003db6:	movaps XMMWORD PTR [rsp+0x80],xmm0
   140003dbe:	movsd  xmm1,QWORD PTR [rsp+0xb0]
   140003dc7:	movsd  QWORD PTR [rsp+0x90],xmm1
   140003dd0:	mov    rbx,QWORD PTR [rsp+0x38]
   140003dd5:	mov    rax,QWORD PTR [rbx]
   140003dd8:	mov    rdi,QWORD PTR [rax+0x50]
   140003ddc:	mov    rcx,rdi
   140003ddf:	call   QWORD PTR [rip+0x464b]        # 0x140008430
   140003de5:	lea    rax,[rsp+0xf0]
   140003ded:	mov    QWORD PTR [rsp+0x20],rax
   140003df2:	lea    r9,[rsp+0x130]
   140003dfa:	lea    r8,[rsp+0x110]
   140003e02:	lea    rdx,[rsp+0x80]
   140003e0a:	mov    rcx,rbx
   140003e0d:	call   rdi
   140003e0f:	mov    r14d,eax
   140003e12:	lea    rcx,[rsp+0xa0]
   140003e1a:	call   QWORD PTR [rip+0x4270]        # 0x140008090
   140003e20:	test   eax,eax
   140003e22:	jns    0x140003e2c
   140003e24:	mov    ecx,eax
   140003e26:	call   0x1400053f8
   140003e2b:	nop
   140003e2c:	lea    rcx,[rsp+0xb8]
   140003e34:	call   QWORD PTR [rip+0x4256]        # 0x140008090
   140003e3a:	test   eax,eax
   140003e3c:	jns    0x140003e46
   140003e3e:	mov    ecx,eax
   140003e40:	call   0x1400053f8
   140003e45:	nop
   140003e46:	lea    rcx,[rsp+0xd0]
   140003e4e:	call   QWORD PTR [rip+0x423c]        # 0x140008090
   140003e54:	test   eax,eax
   140003e56:	jns    0x140003e60
   140003e58:	mov    ecx,eax
   140003e5a:	call   0x1400053f8
   140003e5f:	nop
   140003e60:	lea    rcx,[rsp+0x60]
   140003e65:	call   QWORD PTR [rip+0x4225]        # 0x140008090
   140003e6b:	test   eax,eax
   140003e6d:	jns    0x140003e76
   140003e6f:	mov    ecx,eax
   140003e71:	call   0x1400053f8
   140003e76:	test   r14d,r14d
   140003e79:	jns    0x140003e80
   140003e7b:	jmp    0x1400040b0
   140003e80:	mov    r14,QWORD PTR [rsp+0x38]
   140003e85:	lea    rdx,[rip+0x6c74]        # 0x14000ab00
   140003e8c:	lea    rcx,[rsp+0x180]
   140003e94:	call   0x140002ac8
   140003e99:	nop
   140003e9a:	mov    rax,QWORD PTR [rax]
   140003e9d:	test   rax,rax
   140003ea0:	je     0x140003ea7
   140003ea2:	mov    rdi,QWORD PTR [rax]
   140003ea5:	jmp    0x140003ea9
   140003ea7:	xor    edi,edi
   140003ea9:	mov    rax,QWORD PTR [r14]
   140003eac:	mov    rbx,QWORD PTR [rax+0x38]
   140003eb0:	mov    rcx,rbx
   140003eb3:	call   QWORD PTR [rip+0x4577]        # 0x140008430
   140003eb9:	lea    r8,[rsp+0x48]
   140003ebe:	mov    rdx,rdi
   140003ec1:	mov    rcx,r14
   140003ec4:	call   rbx
   140003ec6:	mov    r14d,eax
   140003ec9:	lea    rcx,[rsp+0x180]
   140003ed1:	call   0x140002b5c
   140003ed6:	test   r14d,r14d
   140003ed9:	jns    0x140003ee0
   140003edb:	jmp    0x1400040b0
   140003ee0:	test   r15,r15
   140003ee3:	je     0x140003f41
   140003ee5:	mov    r14,QWORD PTR [rsp+0x48]
   140003eea:	mov    rdx,r15
   140003eed:	lea    rcx,[rsp+0x180]
   140003ef5:	call   0x140002ac8
   140003efa:	nop
   140003efb:	mov    rax,QWORD PTR [rax]
   140003efe:	test   rax,rax
   140003f01:	je     0x140003f08
   140003f03:	mov    rdi,QWORD PTR [rax]
   140003f06:	jmp    0x140003f0a
   140003f08:	xor    edi,edi
   140003f0a:	mov    rax,QWORD PTR [r14]
   140003f0d:	mov    rbx,QWORD PTR [rax+0x48]
   140003f11:	mov    rcx,rbx
   140003f14:	call   QWORD PTR [rip+0x4516]        # 0x140008430
   140003f1a:	lea    r8,[rsp+0x40]
   140003f1f:	mov    rdx,rdi
   140003f22:	mov    rcx,r14
   140003f25:	call   rbx
   140003f27:	mov    r14d,eax
   140003f2a:	lea    rcx,[rsp+0x180]
   140003f32:	call   0x140002b5c
   140003f37:	test   r14d,r14d
   140003f3a:	jns    0x140003f50
   140003f3c:	jmp    0x1400040b0
   140003f41:	lea    rdx,[rsp+0x48]
   140003f46:	lea    rcx,[rsp+0x40]
   140003f4b:	call   0x1400050c8
   140003f50:	mov    r14,QWORD PTR [rsp+0x40]
   140003f55:	mov    rdx,r13
   140003f58:	lea    rcx,[rsp+0x180]
   140003f60:	call   0x140002ac8
   140003f65:	nop
   140003f66:	mov    rax,QWORD PTR [rax]
   140003f69:	test   rax,rax
   140003f6c:	je     0x140003f73
   140003f6e:	mov    rdi,QWORD PTR [rax]
   140003f71:	jmp    0x140003f75
   140003f73:	xor    edi,edi
   140003f75:	mov    rax,QWORD PTR [r14]
   140003f78:	mov    rbx,QWORD PTR [rax+0x68]
   140003f7c:	mov    rcx,rbx
   140003f7f:	call   QWORD PTR [rip+0x44ab]        # 0x140008430
   140003f85:	lea    r8,[rsp+0x58]
   140003f8a:	mov    rdx,rdi
   140003f8d:	mov    rcx,r14
   140003f90:	call   rbx
   140003f92:	mov    r14d,eax
   140003f95:	lea    rcx,[rsp+0x180]
   140003f9d:	call   0x140002b5c
   140003fa2:	test   r14d,r14d
   140003fa5:	jns    0x140003fac
   140003fa7:	jmp    0x1400040b0
   140003fac:	lea    rcx,[rsp+0x60]
   140003fb1:	call   QWORD PTR [rip+0x40e1]        # 0x140008098
   140003fb7:	nop
   140003fb8:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140003fbd:	movaps XMMWORD PTR [rsp+0x80],xmm0
   140003fc5:	movsd  xmm1,QWORD PTR [rsp+0x70]
   140003fcb:	movsd  QWORD PTR [rsp+0x90],xmm1
   140003fd4:	mov    rbx,QWORD PTR [rsp+0x58]
   140003fd9:	mov    rax,QWORD PTR [rbx]
   140003fdc:	mov    rdi,QWORD PTR [rax+0x68]
   140003fe0:	mov    rcx,rdi
   140003fe3:	call   QWORD PTR [rip+0x4447]        # 0x140008430
   140003fe9:	lea    rax,[rsp+0x50]
   140003fee:	mov    QWORD PTR [rsp+0x28],rax
   140003ff3:	and    QWORD PTR [rsp+0x20],0x0
   140003ff9:	xor    r9d,r9d
   140003ffc:	lea    r8d,[r9+0x2]
   140004000:	lea    rdx,[rsp+0x80]
   140004008:	mov    rcx,rbx
   14000400b:	call   rdi
   14000400d:	mov    r14d,eax
   140004010:	lea    rcx,[rsp+0x60]
   140004015:	call   QWORD PTR [rip+0x4075]        # 0x140008090
   14000401b:	test   eax,eax
   14000401d:	jns    0x140004026
   14000401f:	mov    ecx,eax
   140004021:	call   0x1400053f8
   140004026:	test   r14d,r14d
   140004029:	jns    0x140004030
   14000402b:	jmp    0x1400040b0
   140004030:	test   r12,r12
   140004033:	je     0x14000409f
   140004035:	and    DWORD PTR [rsp+0x180],0x0
   14000403d:	mov    rbx,QWORD PTR [rsp+0x50]
   140004042:	mov    rax,QWORD PTR [rbx]
   140004045:	mov    rdi,QWORD PTR [rax+0x70]
   140004049:	mov    rcx,rdi
   14000404c:	call   QWORD PTR [rip+0x43de]        # 0x140008430
   140004052:	lea    rdx,[rsp+0x180]
   14000405a:	mov    rcx,rbx
   14000405d:	call   rdi
   14000405f:	mov    r14d,eax
   140004062:	test   eax,eax
   140004064:	jns    0x140004068
   140004066:	jmp    0x1400040b0
   140004068:	mov    r8d,DWORD PTR [rsp+0x180]
   140004070:	xor    edx,edx
   140004072:	mov    ecx,0x101000
   140004077:	call   QWORD PTR [rip+0x40e3]        # 0x140008160
   14000407d:	test   rax,rax
   140004080:	jne    0x14000409b
   140004082:	call   QWORD PTR [rip+0x4058]        # 0x1400080e0
   140004088:	movzx  r14d,ax
   14000408c:	or     r14d,0x80070000
   140004093:	test   eax,eax
   140004095:	cmovle r14d,eax
   140004099:	jmp    0x1400040b0
   14000409b:	mov    QWORD PTR [r12],rax
   14000409f:	jmp    0x1400040b0
   1400040a1:	mov    r14d,DWORD PTR [rsp+0x180]
   1400040a9:	cmp    DWORD PTR [rsp+0x30],0x0
   1400040ae:	je     0x1400040b7
   1400040b0:	call   QWORD PTR [rip+0x3ffa]        # 0x1400080b0
   1400040b6:	nop
   1400040b7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400040bc:	test   rbx,rbx
   1400040bf:	je     0x1400040d7
   1400040c1:	mov    rax,QWORD PTR [rbx]
   1400040c4:	mov    rdi,QWORD PTR [rax+0x10]
   1400040c8:	mov    rcx,rdi
   1400040cb:	call   QWORD PTR [rip+0x435f]        # 0x140008430
   1400040d1:	mov    rcx,rbx
   1400040d4:	call   rdi
   1400040d6:	nop
   1400040d7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400040dc:	test   rbx,rbx
   1400040df:	je     0x1400040f7
   1400040e1:	mov    rax,QWORD PTR [rbx]
   1400040e4:	mov    rdi,QWORD PTR [rax+0x10]
   1400040e8:	mov    rcx,rdi
   1400040eb:	call   QWORD PTR [rip+0x433f]        # 0x140008430
   1400040f1:	mov    rcx,rbx
   1400040f4:	call   rdi
   1400040f6:	nop
   1400040f7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400040fc:	test   rbx,rbx
   1400040ff:	je     0x140004117
   140004101:	mov    rax,QWORD PTR [rbx]
   140004104:	mov    rdi,QWORD PTR [rax+0x10]
   140004108:	mov    rcx,rdi
   14000410b:	call   QWORD PTR [rip+0x431f]        # 0x140008430
   140004111:	mov    rcx,rbx
   140004114:	call   rdi
   140004116:	nop
   140004117:	mov    rbx,QWORD PTR [rsp+0x48]
   14000411c:	test   rbx,rbx
   14000411f:	je     0x140004137
   140004121:	mov    rax,QWORD PTR [rbx]
   140004124:	mov    rdi,QWORD PTR [rax+0x10]
   140004128:	mov    rcx,rdi
   14000412b:	call   QWORD PTR [rip+0x42ff]        # 0x140008430
   140004131:	mov    rcx,rbx
   140004134:	call   rdi
   140004136:	nop
   140004137:	mov    rbx,QWORD PTR [rsp+0x38]
   14000413c:	test   rbx,rbx
   14000413f:	je     0x140004156
   140004141:	mov    rax,QWORD PTR [rbx]
   140004144:	mov    rdi,QWORD PTR [rax+0x10]
   140004148:	mov    rcx,rdi
   14000414b:	call   QWORD PTR [rip+0x42df]        # 0x140008430
   140004151:	mov    rcx,rbx
   140004154:	call   rdi
   140004156:	mov    eax,r14d
   140004159:	lea    r11,[rsp+0x160]
   140004161:	mov    rbx,QWORD PTR [r11+0x28]
   140004165:	mov    rdi,QWORD PTR [r11+0x30]
   140004169:	mov    r12,QWORD PTR [r11+0x38]
   14000416d:	mov    rsp,r11
   140004170:	pop    r15
   140004172:	pop    r14
   140004174:	pop    r13
   140004176:	ret    
   140004177:	int3   
   140004178:	int3   
   140004179:	int3   
   14000417a:	int3   
   14000417b:	int3   
   14000417c:	int3   
   14000417d:	int3   
   14000417e:	int3   
   14000417f:	int3   
   140004180:	mov    QWORD PTR [rsp+0x8],rbx
   140004185:	push   rdi
   140004186:	sub    rsp,0x20
   14000418a:	mov    rdi,QWORD PTR [rcx]
   14000418d:	test   rdi,rdi
   140004190:	je     0x1400041a7
   140004192:	mov    rax,QWORD PTR [rdi]
   140004195:	mov    rbx,QWORD PTR [rax+0x10]
   140004199:	mov    rcx,rbx
   14000419c:	call   QWORD PTR [rip+0x428e]        # 0x140008430
   1400041a2:	mov    rcx,rdi
   1400041a5:	call   rbx
   1400041a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041ac:	add    rsp,0x20
   1400041b0:	pop    rdi
   1400041b1:	ret    
   1400041b2:	int3   
   1400041b3:	int3   
   1400041b4:	int3   
   1400041b5:	int3   
   1400041b6:	int3   
   1400041b7:	int3   
   1400041b8:	mov    rax,rsp
   1400041bb:	mov    QWORD PTR [rax+0x20],r9
   1400041bf:	mov    QWORD PTR [rax+0x18],r8
   1400041c3:	mov    QWORD PTR [rax+0x8],rcx
   1400041c7:	push   rbx
   1400041c8:	push   rdi
   1400041c9:	push   r12
   1400041cb:	push   r14
   1400041cd:	push   r15
   1400041cf:	sub    rsp,0x180
   1400041d6:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400041de:	mov    r12,rdx
   1400041e1:	xor    r15d,r15d
   1400041e4:	mov    DWORD PTR [rsp+0x1d8],r15d
   1400041ec:	and    QWORD PTR [rax+0x8],r15
   1400041f0:	and    QWORD PTR [rax+0x18],r15
   1400041f4:	and    QWORD PTR [rsp+0x70],r15
   1400041f9:	and    QWORD PTR [rsp+0x68],r15
   1400041fe:	and    QWORD PTR [rsp+0x60],r15
   140004203:	and    QWORD PTR [rsp+0x58],r15
   140004208:	and    QWORD PTR [rsp+0x50],r15
   14000420d:	and    QWORD PTR [rax-0x118],r15
   140004214:	xor    edx,edx
   140004216:	xor    ecx,ecx
   140004218:	call   QWORD PTR [rip+0x3e9a]        # 0x1400080b8
   14000421e:	mov    r14d,eax
   140004221:	test   eax,eax
   140004223:	jns    0x14000422a
   140004225:	jmp    0x1400047df
   14000422a:	mov    r15d,0x1
   140004230:	mov    DWORD PTR [rsp+0x1d8],r15d
   140004238:	lea    rax,[rsp+0x1b0]
   140004240:	mov    QWORD PTR [rsp+0x20],rax
   140004245:	lea    r9,[rip+0x6d04]        # 0x14000af50
   14000424c:	mov    r8d,r15d
   14000424f:	xor    edx,edx
   140004251:	lea    rcx,[rip+0x6d08]        # 0x14000af60
   140004258:	call   QWORD PTR [rip+0x3e4a]        # 0x1400080a8
   14000425e:	mov    r14d,eax
   140004261:	test   eax,eax
   140004263:	jns    0x14000426a
   140004265:	jmp    0x1400047df
   14000426a:	lea    rcx,[rsp+0x98]
   140004272:	call   QWORD PTR [rip+0x3e20]        # 0x140008098
   140004278:	nop
   140004279:	movups xmm0,XMMWORD PTR [rsp+0x98]
   140004281:	movaps XMMWORD PTR [rsp+0x150],xmm0
   140004289:	movsd  xmm1,QWORD PTR [rsp+0xa8]
   140004292:	movsd  QWORD PTR [rsp+0x160],xmm1
   14000429b:	lea    rcx,[rsp+0xb0]
   1400042a3:	call   QWORD PTR [rip+0x3def]        # 0x140008098
   1400042a9:	nop
   1400042aa:	movups xmm0,XMMWORD PTR [rsp+0xb0]
   1400042b2:	movaps XMMWORD PTR [rsp+0x110],xmm0
   1400042ba:	movsd  xmm1,QWORD PTR [rsp+0xc0]
   1400042c3:	movsd  QWORD PTR [rsp+0x120],xmm1
   1400042cc:	lea    rcx,[rsp+0x130]
   1400042d4:	call   QWORD PTR [rip+0x3dbe]        # 0x140008098
   1400042da:	nop
   1400042db:	movups xmm0,XMMWORD PTR [rsp+0x130]
   1400042e3:	movaps XMMWORD PTR [rsp+0xf0],xmm0
   1400042eb:	movsd  xmm1,QWORD PTR [rsp+0x140]
   1400042f4:	movsd  QWORD PTR [rsp+0x100],xmm1
   1400042fd:	lea    rcx,[rsp+0x78]
   140004302:	call   QWORD PTR [rip+0x3d90]        # 0x140008098
   140004308:	nop
   140004309:	movups xmm0,XMMWORD PTR [rsp+0x78]
   14000430e:	movaps XMMWORD PTR [rsp+0xd0],xmm0
   140004316:	movsd  xmm1,QWORD PTR [rsp+0x88]
   14000431f:	movsd  QWORD PTR [rsp+0xe0],xmm1
   140004328:	mov    rbx,QWORD PTR [rsp+0x1b0]
   140004330:	mov    rax,QWORD PTR [rbx]
   140004333:	mov    rdi,QWORD PTR [rax+0x50]
   140004337:	mov    rcx,rdi
   14000433a:	call   QWORD PTR [rip+0x40f0]        # 0x140008430
   140004340:	lea    rax,[rsp+0x150]
   140004348:	mov    QWORD PTR [rsp+0x20],rax
   14000434d:	lea    r9,[rsp+0x110]
   140004355:	lea    r8,[rsp+0xf0]
   14000435d:	lea    rdx,[rsp+0xd0]
   140004365:	mov    rcx,rbx
   140004368:	call   rdi
   14000436a:	mov    r14d,eax
   14000436d:	lea    rcx,[rsp+0x78]
   140004372:	call   QWORD PTR [rip+0x3d18]        # 0x140008090
   140004378:	test   eax,eax
   14000437a:	jns    0x140004384
   14000437c:	mov    ecx,eax
   14000437e:	call   0x1400053f8
   140004383:	nop
   140004384:	lea    rcx,[rsp+0x130]
   14000438c:	call   QWORD PTR [rip+0x3cfe]        # 0x140008090
   140004392:	test   eax,eax
   140004394:	jns    0x14000439e
   140004396:	mov    ecx,eax
   140004398:	call   0x1400053f8
   14000439d:	nop
   14000439e:	lea    rcx,[rsp+0xb0]
   1400043a6:	call   QWORD PTR [rip+0x3ce4]        # 0x140008090
   1400043ac:	test   eax,eax
   1400043ae:	jns    0x1400043b8
   1400043b0:	mov    ecx,eax
   1400043b2:	call   0x1400053f8
   1400043b7:	nop
   1400043b8:	lea    rcx,[rsp+0x98]
   1400043c0:	call   QWORD PTR [rip+0x3cca]        # 0x140008090
   1400043c6:	test   eax,eax
   1400043c8:	jns    0x1400043d1
   1400043ca:	mov    ecx,eax
   1400043cc:	call   0x1400053f8
   1400043d1:	test   r14d,r14d
   1400043d4:	jns    0x1400043db
   1400043d6:	jmp    0x1400047df
   1400043db:	mov    rbx,QWORD PTR [rsp+0x1b0]
   1400043e3:	mov    rax,QWORD PTR [rbx]
   1400043e6:	mov    rdi,QWORD PTR [rax+0x48]
   1400043ea:	mov    rcx,rdi
   1400043ed:	call   QWORD PTR [rip+0x403d]        # 0x140008430
   1400043f3:	lea    r8,[rsp+0x1c0]
   1400043fb:	xor    edx,edx
   1400043fd:	mov    rcx,rbx
   140004400:	call   rdi
   140004402:	mov    r14d,eax
   140004405:	test   eax,eax
   140004407:	jns    0x14000440e
   140004409:	jmp    0x1400047df
   14000440e:	mov    r14,QWORD PTR [rsp+0x1c0]
   140004416:	lea    rdx,[rip+0x55d3]        # 0x1400099f0
   14000441d:	lea    rcx,[rsp+0x1c8]
   140004425:	call   0x140002ac8
   14000442a:	nop
   14000442b:	mov    rax,QWORD PTR [rax]
   14000442e:	test   rax,rax
   140004431:	je     0x140004438
   140004433:	mov    rdi,QWORD PTR [rax]
   140004436:	jmp    0x14000443a
   140004438:	xor    edi,edi
   14000443a:	mov    rax,QWORD PTR [r14]
   14000443d:	mov    rbx,QWORD PTR [rax+0xa0]
   140004444:	mov    rcx,rbx
   140004447:	call   QWORD PTR [rip+0x3fe3]        # 0x140008430
   14000444d:	mov    rdx,rdi
   140004450:	mov    rcx,r14
   140004453:	call   rbx
   140004455:	mov    r14d,eax
   140004458:	lea    rcx,[rsp+0x1c8]
   140004460:	call   0x140002b5c
   140004465:	test   r14d,r14d
   140004468:	jns    0x14000446f
   14000446a:	jmp    0x1400047df
   14000446f:	mov    rbx,QWORD PTR [rsp+0x1c0]
   140004477:	mov    rax,QWORD PTR [rbx]
   14000447a:	mov    rdi,QWORD PTR [rax+0x88]
   140004481:	mov    rcx,rdi
   140004484:	call   QWORD PTR [rip+0x3fa6]        # 0x140008430
   14000448a:	lea    rdx,[rsp+0x70]
   14000448f:	mov    rcx,rbx
   140004492:	call   rdi
   140004494:	mov    r14d,eax
   140004497:	test   eax,eax
   140004499:	jns    0x1400044a0
   14000449b:	jmp    0x1400047df
   1400044a0:	mov    rbx,QWORD PTR [rsp+0x70]
   1400044a5:	mov    rax,QWORD PTR [rbx]
   1400044a8:	mov    rdi,QWORD PTR [rax+0x40]
   1400044ac:	mov    rcx,rdi
   1400044af:	call   QWORD PTR [rip+0x3f7b]        # 0x140008430
   1400044b5:	lea    r8,[rsp+0x68]
   1400044ba:	mov    edx,r15d
   1400044bd:	mov    rcx,rbx
   1400044c0:	call   rdi
   1400044c2:	mov    r14d,eax
   1400044c5:	test   eax,eax
   1400044c7:	jns    0x1400044ce
   1400044c9:	jmp    0x1400047df
   1400044ce:	mov    rbx,QWORD PTR [rsp+0x68]
   1400044d3:	mov    rax,QWORD PTR [rbx]
   1400044d6:	mov    rdi,QWORD PTR [rax]
   1400044d9:	mov    rcx,rdi
   1400044dc:	call   QWORD PTR [rip+0x3f4e]        # 0x140008430
   1400044e2:	lea    r8,[rsp+0x60]
   1400044e7:	lea    rdx,[rip+0x6a52]        # 0x14000af40
   1400044ee:	mov    rcx,rbx
   1400044f1:	call   rdi
   1400044f3:	mov    r14d,eax
   1400044f6:	test   eax,eax
   1400044f8:	jns    0x1400044ff
   1400044fa:	jmp    0x1400047df
   1400044ff:	mov    r14,QWORD PTR [rsp+0x60]
   140004504:	mov    rdx,QWORD PTR [rsp+0x1d0]
   14000450c:	lea    rcx,[rsp+0x1c8]
   140004514:	call   0x140002ac8
   140004519:	nop
   14000451a:	mov    rax,QWORD PTR [rax]
   14000451d:	test   rax,rax
   140004520:	je     0x140004527
   140004522:	mov    rdi,QWORD PTR [rax]
   140004525:	jmp    0x140004529
   140004527:	xor    edi,edi
   140004529:	mov    rax,QWORD PTR [r14]
   14000452c:	mov    rbx,QWORD PTR [rax+0x68]
   140004530:	mov    rcx,rbx
   140004533:	call   QWORD PTR [rip+0x3ef7]        # 0x140008430
   140004539:	mov    rdx,rdi
   14000453c:	mov    rcx,r14
   14000453f:	call   rbx
   140004541:	mov    r14d,eax
   140004544:	lea    rcx,[rsp+0x1c8]
   14000454c:	call   0x140002b5c
   140004551:	test   r14d,r14d
   140004554:	jns    0x14000455b
   140004556:	jmp    0x1400047df
   14000455b:	mov    r14,QWORD PTR [rsp+0x1b0]
   140004563:	lea    rdx,[rip+0x6596]        # 0x14000ab00
   14000456a:	lea    rcx,[rsp+0x1c8]
   140004572:	call   0x140002ac8
   140004577:	nop
   140004578:	mov    rax,QWORD PTR [rax]
   14000457b:	test   rax,rax
   14000457e:	je     0x140004585
   140004580:	mov    rdi,QWORD PTR [rax]
   140004583:	jmp    0x140004587
   140004585:	xor    edi,edi
   140004587:	mov    rax,QWORD PTR [r14]
   14000458a:	mov    rbx,QWORD PTR [rax+0x38]
   14000458e:	mov    rcx,rbx
   140004591:	call   QWORD PTR [rip+0x3e99]        # 0x140008430
   140004597:	lea    r8,[rsp+0x58]
   14000459c:	mov    rdx,rdi
   14000459f:	mov    rcx,r14
   1400045a2:	call   rbx
   1400045a4:	mov    r14d,eax
   1400045a7:	lea    rcx,[rsp+0x1c8]
   1400045af:	call   0x140002b5c
   1400045b4:	test   r14d,r14d
   1400045b7:	jns    0x1400045be
   1400045b9:	jmp    0x1400047df
   1400045be:	test   r12,r12
   1400045c1:	je     0x14000461f
   1400045c3:	mov    r14,QWORD PTR [rsp+0x58]
   1400045c8:	mov    rdx,r12
   1400045cb:	lea    rcx,[rsp+0x1c8]
   1400045d3:	call   0x140002ac8
   1400045d8:	nop
   1400045d9:	mov    rax,QWORD PTR [rax]
   1400045dc:	test   rax,rax
   1400045df:	je     0x1400045e6
   1400045e1:	mov    rdi,QWORD PTR [rax]
   1400045e4:	jmp    0x1400045e8
   1400045e6:	xor    edi,edi
   1400045e8:	mov    rax,QWORD PTR [r14]
   1400045eb:	mov    rbx,QWORD PTR [rax+0x48]
   1400045ef:	mov    rcx,rbx
   1400045f2:	call   QWORD PTR [rip+0x3e38]        # 0x140008430
   1400045f8:	lea    r8,[rsp+0x50]
   1400045fd:	mov    rdx,rdi
   140004600:	mov    rcx,r14
   140004603:	call   rbx
   140004605:	mov    r14d,eax
   140004608:	lea    rcx,[rsp+0x1c8]
   140004610:	call   0x140002b5c
   140004615:	test   r14d,r14d
   140004618:	jns    0x14000462e
   14000461a:	jmp    0x1400047df
   14000461f:	lea    rdx,[rsp+0x58]
   140004624:	lea    rcx,[rsp+0x50]
   140004629:	call   0x1400050c8
   14000462e:	lea    rcx,[rip+0x6687]        # 0x14000acbc
   140004635:	call   QWORD PTR [rip+0x3a4d]        # 0x140008088
   14000463b:	test   rax,rax
   14000463e:	jne    0x14000464a
   140004640:	mov    ecx,0x8007000e
   140004645:	call   0x1400053f8
   14000464a:	mov    ecx,0x8
   14000464f:	mov    WORD PTR [rsp+0x78],cx
   140004654:	mov    QWORD PTR [rsp+0x80],rax
   14000465c:	movups xmm0,XMMWORD PTR [rsp+0x78]
   140004661:	movaps XMMWORD PTR [rsp+0xd0],xmm0
   140004669:	movsd  xmm1,QWORD PTR [rsp+0x88]
   140004672:	movsd  QWORD PTR [rsp+0xe0],xmm1
   14000467b:	lea    rcx,[rsp+0xb0]
   140004683:	call   QWORD PTR [rip+0x3a0f]        # 0x140008098
   140004689:	nop
   14000468a:	movups xmm0,XMMWORD PTR [rsp+0xb0]
   140004692:	movaps XMMWORD PTR [rsp+0xf0],xmm0
   14000469a:	movsd  xmm1,QWORD PTR [rsp+0xc0]
   1400046a3:	movsd  QWORD PTR [rsp+0x100],xmm1
   1400046ac:	lea    rcx,[rsp+0x98]
   1400046b4:	call   QWORD PTR [rip+0x39de]        # 0x140008098
   1400046ba:	nop
   1400046bb:	movups xmm0,XMMWORD PTR [rsp+0x98]
   1400046c3:	movaps XMMWORD PTR [rsp+0x110],xmm0
   1400046cb:	movsd  xmm1,QWORD PTR [rsp+0xa8]
   1400046d4:	movsd  QWORD PTR [rsp+0x120],xmm1
   1400046dd:	mov    r14,QWORD PTR [rsp+0x50]
   1400046e2:	lea    rdx,[rip+0x63b7]        # 0x14000aaa0
   1400046e9:	lea    rcx,[rsp+0x1c8]
   1400046f1:	call   0x140002ac8
   1400046f6:	nop
   1400046f7:	mov    rax,QWORD PTR [rax]
   1400046fa:	test   rax,rax
   1400046fd:	je     0x140004704
   1400046ff:	mov    rdi,QWORD PTR [rax]
   140004702:	jmp    0x140004706
   140004704:	xor    edi,edi
   140004706:	mov    rax,QWORD PTR [r14]
   140004709:	mov    rbx,QWORD PTR [rax+0x88]
   140004710:	mov    rcx,rbx
   140004713:	call   QWORD PTR [rip+0x3d17]        # 0x140008430
   140004719:	lea    rax,[rsp+0x90]
   140004721:	mov    QWORD PTR [rsp+0x40],rax
   140004726:	lea    rax,[rsp+0xd0]
   14000472e:	mov    QWORD PTR [rsp+0x38],rax
   140004733:	mov    DWORD PTR [rsp+0x30],0x4
   14000473b:	lea    rax,[rsp+0xf0]
   140004743:	mov    QWORD PTR [rsp+0x28],rax
   140004748:	lea    rax,[rsp+0x110]
   140004750:	mov    QWORD PTR [rsp+0x20],rax
   140004755:	mov    r9d,0x6
   14000475b:	mov    r8,QWORD PTR [rsp+0x1c0]
   140004763:	mov    rdx,rdi
   140004766:	mov    rcx,r14
   140004769:	call   rbx
   14000476b:	mov    r14d,eax
   14000476e:	lea    rcx,[rsp+0x1c8]
   140004776:	call   0x140002b5c
   14000477b:	nop
   14000477c:	lea    rcx,[rsp+0x98]
   140004784:	call   QWORD PTR [rip+0x3906]        # 0x140008090
   14000478a:	test   eax,eax
   14000478c:	jns    0x140004796
   14000478e:	mov    ecx,eax
   140004790:	call   0x1400053f8
   140004795:	nop
   140004796:	lea    rcx,[rsp+0xb0]
   14000479e:	call   QWORD PTR [rip+0x38ec]        # 0x140008090
   1400047a4:	test   eax,eax
   1400047a6:	jns    0x1400047b0
   1400047a8:	mov    ecx,eax
   1400047aa:	call   0x1400053f8
   1400047af:	nop
   1400047b0:	lea    rcx,[rsp+0x78]
   1400047b5:	call   QWORD PTR [rip+0x38d5]        # 0x140008090
   1400047bb:	test   eax,eax
   1400047bd:	jns    0x1400047c6
   1400047bf:	mov    ecx,eax
   1400047c1:	call   0x1400053f8
   1400047c6:	test   r14d,r14d
   1400047c9:	jns    0x1400047cd
   1400047cb:	jmp    0x1400047df
   1400047cd:	jmp    0x1400047df
   1400047cf:	mov    r14d,DWORD PTR [rsp+0x1c8]
   1400047d7:	mov    r15d,DWORD PTR [rsp+0x1d8]
   1400047df:	xor    ecx,ecx
   1400047e1:	call   QWORD PTR [rip+0x3921]        # 0x140008108
   1400047e7:	test   r15d,r15d
   1400047ea:	je     0x1400047f3
   1400047ec:	call   QWORD PTR [rip+0x38be]        # 0x1400080b0
   1400047f2:	nop
   1400047f3:	mov    rbx,QWORD PTR [rsp+0x90]
   1400047fb:	test   rbx,rbx
   1400047fe:	je     0x140004816
   140004800:	mov    rax,QWORD PTR [rbx]
   140004803:	mov    rdi,QWORD PTR [rax+0x10]
   140004807:	mov    rcx,rdi
   14000480a:	call   QWORD PTR [rip+0x3c20]        # 0x140008430
   140004810:	mov    rcx,rbx
   140004813:	call   rdi
   140004815:	nop
   140004816:	mov    rbx,QWORD PTR [rsp+0x50]
   14000481b:	test   rbx,rbx
   14000481e:	je     0x140004836
   140004820:	mov    rax,QWORD PTR [rbx]
   140004823:	mov    rdi,QWORD PTR [rax+0x10]
   140004827:	mov    rcx,rdi
   14000482a:	call   QWORD PTR [rip+0x3c00]        # 0x140008430
   140004830:	mov    rcx,rbx
   140004833:	call   rdi
   140004835:	nop
   140004836:	mov    rbx,QWORD PTR [rsp+0x58]
   14000483b:	test   rbx,rbx
   14000483e:	je     0x140004856
   140004840:	mov    rax,QWORD PTR [rbx]
   140004843:	mov    rdi,QWORD PTR [rax+0x10]
   140004847:	mov    rcx,rdi
   14000484a:	call   QWORD PTR [rip+0x3be0]        # 0x140008430
   140004850:	mov    rcx,rbx
   140004853:	call   rdi
   140004855:	nop
   140004856:	mov    rbx,QWORD PTR [rsp+0x60]
   14000485b:	test   rbx,rbx
   14000485e:	je     0x140004876
   140004860:	mov    rax,QWORD PTR [rbx]
   140004863:	mov    rdi,QWORD PTR [rax+0x10]
   140004867:	mov    rcx,rdi
   14000486a:	call   QWORD PTR [rip+0x3bc0]        # 0x140008430
   140004870:	mov    rcx,rbx
   140004873:	call   rdi
   140004875:	nop
   140004876:	mov    rbx,QWORD PTR [rsp+0x68]
   14000487b:	test   rbx,rbx
   14000487e:	je     0x140004896
   140004880:	mov    rax,QWORD PTR [rbx]
   140004883:	mov    rdi,QWORD PTR [rax+0x10]
   140004887:	mov    rcx,rdi
   14000488a:	call   QWORD PTR [rip+0x3ba0]        # 0x140008430
   140004890:	mov    rcx,rbx
   140004893:	call   rdi
   140004895:	nop
   140004896:	mov    rbx,QWORD PTR [rsp+0x70]
   14000489b:	test   rbx,rbx
   14000489e:	je     0x1400048b6
   1400048a0:	mov    rax,QWORD PTR [rbx]
   1400048a3:	mov    rdi,QWORD PTR [rax+0x10]
   1400048a7:	mov    rcx,rdi
   1400048aa:	call   QWORD PTR [rip+0x3b80]        # 0x140008430
   1400048b0:	mov    rcx,rbx
   1400048b3:	call   rdi
   1400048b5:	nop
   1400048b6:	mov    rbx,QWORD PTR [rsp+0x1c0]
   1400048be:	test   rbx,rbx
   1400048c1:	je     0x1400048d9
   1400048c3:	mov    rax,QWORD PTR [rbx]
   1400048c6:	mov    rdi,QWORD PTR [rax+0x10]
   1400048ca:	mov    rcx,rdi
   1400048cd:	call   QWORD PTR [rip+0x3b5d]        # 0x140008430
   1400048d3:	mov    rcx,rbx
   1400048d6:	call   rdi
   1400048d8:	nop
   1400048d9:	mov    rbx,QWORD PTR [rsp+0x1b0]
   1400048e1:	test   rbx,rbx
   1400048e4:	je     0x1400048fb
   1400048e6:	mov    rax,QWORD PTR [rbx]
   1400048e9:	mov    rdi,QWORD PTR [rax+0x10]
   1400048ed:	mov    rcx,rdi
   1400048f0:	call   QWORD PTR [rip+0x3b3a]        # 0x140008430
   1400048f6:	mov    rcx,rbx
   1400048f9:	call   rdi
   1400048fb:	mov    eax,r14d
   1400048fe:	add    rsp,0x180
   140004905:	pop    r15
   140004907:	pop    r14
   140004909:	pop    r12
   14000490b:	pop    rdi
   14000490c:	pop    rbx
   14000490d:	ret    
   14000490e:	int3   
   14000490f:	int3   
   140004910:	int3   
   140004911:	int3   
   140004912:	int3   
   140004913:	int3   
   140004914:	mov    rax,rsp
   140004917:	mov    QWORD PTR [rax+0x18],r8
   14000491b:	mov    QWORD PTR [rax+0x8],rcx
   14000491f:	push   rbx
   140004920:	push   rsi
   140004921:	push   rdi
   140004922:	push   r14
   140004924:	push   r15
   140004926:	sub    rsp,0x130
   14000492d:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140004935:	mov    r15,rdx
   140004938:	xor    esi,esi
   14000493a:	mov    DWORD PTR [rsp+0x170],esi
   140004941:	mov    QWORD PTR [rsp+0x38],rsi
   140004946:	mov    QWORD PTR [rsp+0x30],rsi
   14000494b:	mov    QWORD PTR [rax+0x20],rsi
   14000494f:	xor    edx,edx
   140004951:	xor    ecx,ecx
   140004953:	call   QWORD PTR [rip+0x375f]        # 0x1400080b8
   140004959:	mov    r14d,eax
   14000495c:	test   eax,eax
   14000495e:	jns    0x140004965
   140004960:	jmp    0x140004c4c
   140004965:	mov    r8d,0x1
   14000496b:	mov    DWORD PTR [rsp+0x170],r8d
   140004973:	lea    rax,[rsp+0x38]
   140004978:	mov    QWORD PTR [rsp+0x20],rax
   14000497d:	lea    r9,[rip+0x65cc]        # 0x14000af50
   140004984:	xor    edx,edx
   140004986:	lea    rcx,[rip+0x65d3]        # 0x14000af60
   14000498d:	call   QWORD PTR [rip+0x3715]        # 0x1400080a8
   140004993:	mov    r14d,eax
   140004996:	test   eax,eax
   140004998:	jns    0x14000499f
   14000499a:	jmp    0x140004c45
   14000499f:	lea    rcx,[rsp+0x58]
   1400049a4:	call   QWORD PTR [rip+0x36ee]        # 0x140008098
   1400049aa:	nop
   1400049ab:	movups xmm0,XMMWORD PTR [rsp+0x58]
   1400049b0:	movaps XMMWORD PTR [rsp+0xa0],xmm0
   1400049b8:	movsd  xmm1,QWORD PTR [rsp+0x68]
   1400049be:	movsd  QWORD PTR [rsp+0xb0],xmm1
   1400049c7:	lea    rcx,[rsp+0x40]
   1400049cc:	call   QWORD PTR [rip+0x36c6]        # 0x140008098
   1400049d2:	nop
   1400049d3:	movups xmm0,XMMWORD PTR [rsp+0x40]
   1400049d8:	movaps XMMWORD PTR [rsp+0xc0],xmm0
   1400049e0:	movsd  xmm1,QWORD PTR [rsp+0x50]
   1400049e6:	movsd  QWORD PTR [rsp+0xd0],xmm1
   1400049ef:	lea    rcx,[rsp+0x70]
   1400049f4:	call   QWORD PTR [rip+0x369e]        # 0x140008098
   1400049fa:	nop
   1400049fb:	movups xmm0,XMMWORD PTR [rsp+0x70]
   140004a00:	movaps XMMWORD PTR [rsp+0xe0],xmm0
   140004a08:	movsd  xmm1,QWORD PTR [rsp+0x80]
   140004a11:	movsd  QWORD PTR [rsp+0xf0],xmm1
   140004a1a:	lea    rcx,[rsp+0x88]
   140004a22:	call   QWORD PTR [rip+0x3670]        # 0x140008098
   140004a28:	nop
   140004a29:	movups xmm0,XMMWORD PTR [rsp+0x88]
   140004a31:	movaps XMMWORD PTR [rsp+0x110],xmm0
   140004a39:	movsd  xmm1,QWORD PTR [rsp+0x98]
   140004a42:	movsd  QWORD PTR [rsp+0x120],xmm1
   140004a4b:	mov    rbx,QWORD PTR [rsp+0x38]
   140004a50:	mov    rax,QWORD PTR [rbx]
   140004a53:	mov    rdi,QWORD PTR [rax+0x50]
   140004a57:	mov    rcx,rdi
   140004a5a:	call   QWORD PTR [rip+0x39d0]        # 0x140008430
   140004a60:	lea    rax,[rsp+0xa0]
   140004a68:	mov    QWORD PTR [rsp+0x20],rax
   140004a6d:	lea    r9,[rsp+0xc0]
   140004a75:	lea    r8,[rsp+0xe0]
   140004a7d:	lea    rdx,[rsp+0x110]
   140004a85:	mov    rcx,rbx
   140004a88:	call   rdi
   140004a8a:	mov    r14d,eax
   140004a8d:	lea    rcx,[rsp+0x88]
   140004a95:	call   QWORD PTR [rip+0x35f5]        # 0x140008090
   140004a9b:	test   eax,eax
   140004a9d:	jns    0x140004aa7
   140004a9f:	mov    ecx,eax
   140004aa1:	call   0x1400053f8
   140004aa6:	nop
   140004aa7:	lea    rcx,[rsp+0x70]
   140004aac:	call   QWORD PTR [rip+0x35de]        # 0x140008090
   140004ab2:	test   eax,eax
   140004ab4:	jns    0x140004abe
   140004ab6:	mov    ecx,eax
   140004ab8:	call   0x1400053f8
   140004abd:	nop
   140004abe:	lea    rcx,[rsp+0x40]
   140004ac3:	call   QWORD PTR [rip+0x35c7]        # 0x140008090
   140004ac9:	test   eax,eax
   140004acb:	jns    0x140004ad5
   140004acd:	mov    ecx,eax
   140004acf:	call   0x1400053f8
   140004ad4:	nop
   140004ad5:	lea    rcx,[rsp+0x58]
   140004ada:	call   QWORD PTR [rip+0x35b0]        # 0x140008090
   140004ae0:	test   eax,eax
   140004ae2:	jns    0x140004aeb
   140004ae4:	mov    ecx,eax
   140004ae6:	call   0x1400053f8
   140004aeb:	test   r14d,r14d
   140004aee:	jns    0x140004af5
   140004af0:	jmp    0x140004c45
   140004af5:	mov    r14,QWORD PTR [rsp+0x38]
   140004afa:	lea    rdx,[rip+0x5fff]        # 0x14000ab00
   140004b01:	lea    rcx,[rsp+0x160]
   140004b09:	call   0x140002ac8
   140004b0e:	nop
   140004b0f:	mov    rax,QWORD PTR [rax]
   140004b12:	test   rax,rax
   140004b15:	je     0x140004b1c
   140004b17:	mov    rdi,QWORD PTR [rax]
   140004b1a:	jmp    0x140004b1f
   140004b1c:	mov    rdi,rsi
   140004b1f:	mov    rax,QWORD PTR [r14]
   140004b22:	mov    rbx,QWORD PTR [rax+0x38]
   140004b26:	mov    rcx,rbx
   140004b29:	call   QWORD PTR [rip+0x3901]        # 0x140008430
   140004b2f:	lea    r8,[rsp+0x30]
   140004b34:	mov    rdx,rdi
   140004b37:	mov    rcx,r14
   140004b3a:	call   rbx
   140004b3c:	mov    r14d,eax
   140004b3f:	lea    rcx,[rsp+0x160]
   140004b47:	call   0x140002b5c
   140004b4c:	test   r14d,r14d
   140004b4f:	jns    0x140004b56
   140004b51:	jmp    0x140004c45
   140004b56:	test   r15,r15
   140004b59:	je     0x140004bbb
   140004b5b:	mov    r14,QWORD PTR [rsp+0x30]
   140004b60:	mov    rdx,r15
   140004b63:	lea    rcx,[rsp+0x160]
   140004b6b:	call   0x140002ac8
   140004b70:	nop
   140004b71:	mov    rax,QWORD PTR [rax]
   140004b74:	test   rax,rax
   140004b77:	je     0x140004b7e
   140004b79:	mov    rdi,QWORD PTR [rax]
   140004b7c:	jmp    0x140004b81
   140004b7e:	mov    rdi,rsi
   140004b81:	mov    rax,QWORD PTR [r14]
   140004b84:	mov    rbx,QWORD PTR [rax+0x48]
   140004b88:	mov    rcx,rbx
   140004b8b:	call   QWORD PTR [rip+0x389f]        # 0x140008430
   140004b91:	lea    r8,[rsp+0x178]
   140004b99:	mov    rdx,rdi
   140004b9c:	mov    rcx,r14
   140004b9f:	call   rbx
   140004ba1:	mov    r14d,eax
   140004ba4:	lea    rcx,[rsp+0x160]
   140004bac:	call   0x140002b5c
   140004bb1:	test   r14d,r14d
   140004bb4:	jns    0x140004bcd
   140004bb6:	jmp    0x140004c45
   140004bbb:	lea    rdx,[rsp+0x30]
   140004bc0:	lea    rcx,[rsp+0x178]
   140004bc8:	call   0x1400050c8
   140004bcd:	mov    r14,QWORD PTR [rsp+0x178]
   140004bd5:	lea    rdx,[rip+0x5ec4]        # 0x14000aaa0
   140004bdc:	lea    rcx,[rsp+0x160]
   140004be4:	call   0x140002ac8
   140004be9:	nop
   140004bea:	mov    rax,QWORD PTR [rax]
   140004bed:	test   rax,rax
   140004bf0:	je     0x140004bf7
   140004bf2:	mov    rdi,QWORD PTR [rax]
   140004bf5:	jmp    0x140004bfa
   140004bf7:	mov    rdi,rsi
   140004bfa:	mov    rax,QWORD PTR [r14]
   140004bfd:	mov    rbx,QWORD PTR [rax+0x78]
   140004c01:	mov    rcx,rbx
   140004c04:	call   QWORD PTR [rip+0x3826]        # 0x140008430
   140004c0a:	xor    r8d,r8d
   140004c0d:	mov    rdx,rdi
   140004c10:	mov    rcx,r14
   140004c13:	call   rbx
   140004c15:	mov    r14d,eax
   140004c18:	lea    rcx,[rsp+0x160]
   140004c20:	call   0x140002b5c
   140004c25:	cmp    r14d,0x80070002
   140004c2c:	cmove  r14d,esi
   140004c30:	jmp    0x140004c45
   140004c32:	xor    esi,esi
   140004c34:	mov    r14d,DWORD PTR [rsp+0x160]
   140004c3c:	cmp    DWORD PTR [rsp+0x170],esi
   140004c43:	je     0x140004c4c
   140004c45:	call   QWORD PTR [rip+0x3465]        # 0x1400080b0
   140004c4b:	nop
   140004c4c:	mov    rbx,QWORD PTR [rsp+0x178]
   140004c54:	test   rbx,rbx
   140004c57:	je     0x140004c6f
   140004c59:	mov    rax,QWORD PTR [rbx]
   140004c5c:	mov    rdi,QWORD PTR [rax+0x10]
   140004c60:	mov    rcx,rdi
   140004c63:	call   QWORD PTR [rip+0x37c7]        # 0x140008430
   140004c69:	mov    rcx,rbx
   140004c6c:	call   rdi
   140004c6e:	nop
   140004c6f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c74:	test   rbx,rbx
   140004c77:	je     0x140004c8f
   140004c79:	mov    rax,QWORD PTR [rbx]
   140004c7c:	mov    rdi,QWORD PTR [rax+0x10]
   140004c80:	mov    rcx,rdi
   140004c83:	call   QWORD PTR [rip+0x37a7]        # 0x140008430
   140004c89:	mov    rcx,rbx
   140004c8c:	call   rdi
   140004c8e:	nop
   140004c8f:	mov    rbx,QWORD PTR [rsp+0x38]
   140004c94:	test   rbx,rbx
   140004c97:	je     0x140004cae
   140004c99:	mov    rax,QWORD PTR [rbx]
   140004c9c:	mov    rdi,QWORD PTR [rax+0x10]
   140004ca0:	mov    rcx,rdi
   140004ca3:	call   QWORD PTR [rip+0x3787]        # 0x140008430
   140004ca9:	mov    rcx,rbx
   140004cac:	call   rdi
   140004cae:	mov    eax,r14d
   140004cb1:	add    rsp,0x130
   140004cb8:	pop    r15
   140004cba:	pop    r14
   140004cbc:	pop    rdi
   140004cbd:	pop    rsi
   140004cbe:	pop    rbx
   140004cbf:	ret    
   140004cc0:	int3   
   140004cc1:	int3   
   140004cc2:	int3   
   140004cc3:	int3   
   140004cc4:	int3   
   140004cc5:	int3   
   140004cc6:	int3   
   140004cc7:	int3   
   140004cc8:	mov    rax,rsp
   140004ccb:	mov    QWORD PTR [rax+0x18],r8
   140004ccf:	mov    QWORD PTR [rax+0x8],rcx
   140004cd3:	push   rsi
   140004cd4:	push   rdi
   140004cd5:	push   r12
   140004cd7:	push   r14
   140004cd9:	push   r15
   140004cdb:	sub    rsp,0x140
   140004ce2:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140004cea:	mov    QWORD PTR [rax+0x10],rbx
   140004cee:	mov    r12,r9
   140004cf1:	mov    r15,rdx
   140004cf4:	xor    esi,esi
   140004cf6:	mov    DWORD PTR [rsp+0x180],esi
   140004cfd:	mov    QWORD PTR [rsp+0x30],rsi
   140004d02:	mov    QWORD PTR [rsp+0x38],rsi
   140004d07:	mov    QWORD PTR [rax+0x20],rsi
   140004d0b:	mov    QWORD PTR [rsp+0x40],rsi
   140004d10:	mov    DWORD PTR [r9],esi
   140004d13:	xor    edx,edx
   140004d15:	xor    ecx,ecx
   140004d17:	call   QWORD PTR [rip+0x339b]        # 0x1400080b8
   140004d1d:	mov    r14d,eax
   140004d20:	test   eax,eax
   140004d22:	jns    0x140004d29
   140004d24:	jmp    0x140005022
   140004d29:	mov    DWORD PTR [rsp+0x180],0x1
   140004d34:	lea    rax,[rsp+0x30]
   140004d39:	mov    QWORD PTR [rsp+0x20],rax
   140004d3e:	lea    r9,[rip+0x620b]        # 0x14000af50
   140004d45:	xor    edx,edx
   140004d47:	lea    r8d,[rdx+0x1]
   140004d4b:	lea    rcx,[rip+0x620e]        # 0x14000af60
   140004d52:	call   QWORD PTR [rip+0x3350]        # 0x1400080a8
   140004d58:	mov    r14d,eax
   140004d5b:	test   eax,eax
   140004d5d:	jns    0x140004d64
   140004d5f:	jmp    0x14000501b
   140004d64:	lea    rcx,[rsp+0x60]
   140004d69:	call   QWORD PTR [rip+0x3329]        # 0x140008098
   140004d6f:	nop
   140004d70:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140004d75:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   140004d7d:	movsd  xmm1,QWORD PTR [rsp+0x70]
   140004d83:	movsd  QWORD PTR [rsp+0xc0],xmm1
   140004d8c:	lea    rcx,[rsp+0x90]
   140004d94:	call   QWORD PTR [rip+0x32fe]        # 0x140008098
   140004d9a:	nop
   140004d9b:	movups xmm0,XMMWORD PTR [rsp+0x90]
   140004da3:	movaps XMMWORD PTR [rsp+0xd0],xmm0
   140004dab:	movsd  xmm1,QWORD PTR [rsp+0xa0]
   140004db4:	movsd  QWORD PTR [rsp+0xe0],xmm1
   140004dbd:	lea    rcx,[rsp+0x48]
   140004dc2:	call   QWORD PTR [rip+0x32d0]        # 0x140008098
   140004dc8:	nop
   140004dc9:	movups xmm0,XMMWORD PTR [rsp+0x48]
   140004dce:	movaps XMMWORD PTR [rsp+0xf0],xmm0
   140004dd6:	movsd  xmm1,QWORD PTR [rsp+0x58]
   140004ddc:	movsd  QWORD PTR [rsp+0x100],xmm1
   140004de5:	lea    rcx,[rsp+0x78]
   140004dea:	call   QWORD PTR [rip+0x32a8]        # 0x140008098
   140004df0:	nop
   140004df1:	movups xmm0,XMMWORD PTR [rsp+0x78]
   140004df6:	movaps XMMWORD PTR [rsp+0x120],xmm0
   140004dfe:	movsd  xmm1,QWORD PTR [rsp+0x88]
   140004e07:	movsd  QWORD PTR [rsp+0x130],xmm1
   140004e10:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e15:	mov    rax,QWORD PTR [rbx]
   140004e18:	mov    rdi,QWORD PTR [rax+0x50]
   140004e1c:	mov    rcx,rdi
   140004e1f:	call   QWORD PTR [rip+0x360b]        # 0x140008430
   140004e25:	lea    rax,[rsp+0xb0]
   140004e2d:	mov    QWORD PTR [rsp+0x20],rax
   140004e32:	lea    r9,[rsp+0xd0]
   140004e3a:	lea    r8,[rsp+0xf0]
   140004e42:	lea    rdx,[rsp+0x120]
   140004e4a:	mov    rcx,rbx
   140004e4d:	call   rdi
   140004e4f:	mov    r14d,eax
   140004e52:	lea    rcx,[rsp+0x78]
   140004e57:	call   QWORD PTR [rip+0x3233]        # 0x140008090
   140004e5d:	test   eax,eax
   140004e5f:	jns    0x140004e69
   140004e61:	mov    ecx,eax
   140004e63:	call   0x1400053f8
   140004e68:	nop
   140004e69:	lea    rcx,[rsp+0x48]
   140004e6e:	call   QWORD PTR [rip+0x321c]        # 0x140008090
   140004e74:	test   eax,eax
   140004e76:	jns    0x140004e80
   140004e78:	mov    ecx,eax
   140004e7a:	call   0x1400053f8
   140004e7f:	nop
   140004e80:	lea    rcx,[rsp+0x90]
   140004e88:	call   QWORD PTR [rip+0x3202]        # 0x140008090
   140004e8e:	test   eax,eax
   140004e90:	jns    0x140004e9a
   140004e92:	mov    ecx,eax
   140004e94:	call   0x1400053f8
   140004e99:	nop
   140004e9a:	lea    rcx,[rsp+0x60]
   140004e9f:	call   QWORD PTR [rip+0x31eb]        # 0x140008090
   140004ea5:	test   eax,eax
   140004ea7:	jns    0x140004eb0
   140004ea9:	mov    ecx,eax
   140004eab:	call   0x1400053f8
   140004eb0:	test   r14d,r14d
   140004eb3:	jns    0x140004eba
   140004eb5:	jmp    0x14000501b
   140004eba:	mov    r14,QWORD PTR [rsp+0x30]
   140004ebf:	lea    rdx,[rip+0x5c3a]        # 0x14000ab00
   140004ec6:	lea    rcx,[rsp+0x170]
   140004ece:	call   0x140002ac8
   140004ed3:	nop
   140004ed4:	mov    rax,QWORD PTR [rax]
   140004ed7:	test   rax,rax
   140004eda:	je     0x140004ee1
   140004edc:	mov    rdi,QWORD PTR [rax]
   140004edf:	jmp    0x140004ee4
   140004ee1:	mov    rdi,rsi
   140004ee4:	mov    rax,QWORD PTR [r14]
   140004ee7:	mov    rbx,QWORD PTR [rax+0x38]
   140004eeb:	mov    rcx,rbx
   140004eee:	call   QWORD PTR [rip+0x353c]        # 0x140008430
   140004ef4:	lea    r8,[rsp+0x38]
   140004ef9:	mov    rdx,rdi
   140004efc:	mov    rcx,r14
   140004eff:	call   rbx
   140004f01:	mov    r14d,eax
   140004f04:	lea    rcx,[rsp+0x170]
   140004f0c:	call   0x140002b5c
   140004f11:	test   r14d,r14d
   140004f14:	jns    0x140004f1b
   140004f16:	jmp    0x14000501b
   140004f1b:	test   r15,r15
   140004f1e:	je     0x140004f80
   140004f20:	mov    r14,QWORD PTR [rsp+0x38]
   140004f25:	mov    rdx,r15
   140004f28:	lea    rcx,[rsp+0x170]
   140004f30:	call   0x140002ac8
   140004f35:	nop
   140004f36:	mov    rax,QWORD PTR [rax]
   140004f39:	test   rax,rax
   140004f3c:	je     0x140004f43
   140004f3e:	mov    rdi,QWORD PTR [rax]
   140004f41:	jmp    0x140004f46
   140004f43:	mov    rdi,rsi
   140004f46:	mov    rax,QWORD PTR [r14]
   140004f49:	mov    rbx,QWORD PTR [rax+0x48]
   140004f4d:	mov    rcx,rbx
   140004f50:	call   QWORD PTR [rip+0x34da]        # 0x140008430
   140004f56:	lea    r8,[rsp+0x188]
   140004f5e:	mov    rdx,rdi
   140004f61:	mov    rcx,r14
   140004f64:	call   rbx
   140004f66:	mov    r14d,eax
   140004f69:	lea    rcx,[rsp+0x170]
   140004f71:	call   0x140002b5c
   140004f76:	test   r14d,r14d
   140004f79:	jns    0x140004f92
   140004f7b:	jmp    0x14000501b
   140004f80:	lea    rdx,[rsp+0x38]
   140004f85:	lea    rcx,[rsp+0x188]
   140004f8d:	call   0x1400050c8
   140004f92:	mov    r14,QWORD PTR [rsp+0x188]
   140004f9a:	lea    rdx,[rip+0x5aff]        # 0x14000aaa0
   140004fa1:	lea    rcx,[rsp+0x170]
   140004fa9:	call   0x140002ac8
   140004fae:	nop
   140004faf:	mov    rax,QWORD PTR [rax]
   140004fb2:	test   rax,rax
   140004fb5:	je     0x140004fbc
   140004fb7:	mov    rdi,QWORD PTR [rax]
   140004fba:	jmp    0x140004fbf
   140004fbc:	mov    rdi,rsi
   140004fbf:	mov    rax,QWORD PTR [r14]
   140004fc2:	mov    rbx,QWORD PTR [rax+0x68]
   140004fc6:	mov    rcx,rbx
   140004fc9:	call   QWORD PTR [rip+0x3461]        # 0x140008430
   140004fcf:	lea    r8,[rsp+0x40]
   140004fd4:	mov    rdx,rdi
   140004fd7:	mov    rcx,r14
   140004fda:	call   rbx
   140004fdc:	mov    r14d,eax
   140004fdf:	lea    rcx,[rsp+0x170]
   140004fe7:	call   0x140002b5c
   140004fec:	test   r14d,r14d
   140004fef:	jns    0x140004ffe
   140004ff1:	cmp    r14d,0x80070002
   140004ff8:	cmove  r14d,esi
   140004ffc:	jmp    0x14000501b
   140004ffe:	mov    DWORD PTR [r12],0x1
   140005006:	jmp    0x14000501b
   140005008:	xor    esi,esi
   14000500a:	mov    r14d,DWORD PTR [rsp+0x170]
   140005012:	cmp    DWORD PTR [rsp+0x180],esi
   140005019:	je     0x140005022
   14000501b:	call   QWORD PTR [rip+0x308f]        # 0x1400080b0
   140005021:	nop
   140005022:	mov    rbx,QWORD PTR [rsp+0x40]
   140005027:	test   rbx,rbx
   14000502a:	je     0x140005042
   14000502c:	mov    rax,QWORD PTR [rbx]
   14000502f:	mov    rdi,QWORD PTR [rax+0x10]
   140005033:	mov    rcx,rdi
   140005036:	call   QWORD PTR [rip+0x33f4]        # 0x140008430
   14000503c:	mov    rcx,rbx
   14000503f:	call   rdi
   140005041:	nop
   140005042:	mov    rbx,QWORD PTR [rsp+0x188]
   14000504a:	test   rbx,rbx
   14000504d:	je     0x140005065
   14000504f:	mov    rax,QWORD PTR [rbx]
   140005052:	mov    rdi,QWORD PTR [rax+0x10]
   140005056:	mov    rcx,rdi
   140005059:	call   QWORD PTR [rip+0x33d1]        # 0x140008430
   14000505f:	mov    rcx,rbx
   140005062:	call   rdi
   140005064:	nop
   140005065:	mov    rbx,QWORD PTR [rsp+0x38]
   14000506a:	test   rbx,rbx
   14000506d:	je     0x140005085
   14000506f:	mov    rax,QWORD PTR [rbx]
   140005072:	mov    rdi,QWORD PTR [rax+0x10]
   140005076:	mov    rcx,rdi
   140005079:	call   QWORD PTR [rip+0x33b1]        # 0x140008430
   14000507f:	mov    rcx,rbx
   140005082:	call   rdi
   140005084:	nop
   140005085:	mov    rbx,QWORD PTR [rsp+0x30]
   14000508a:	test   rbx,rbx
   14000508d:	je     0x1400050a4
   14000508f:	mov    rax,QWORD PTR [rbx]
   140005092:	mov    rdi,QWORD PTR [rax+0x10]
   140005096:	mov    rcx,rdi
   140005099:	call   QWORD PTR [rip+0x3391]        # 0x140008430
   14000509f:	mov    rcx,rbx
   1400050a2:	call   rdi
   1400050a4:	mov    eax,r14d
   1400050a7:	mov    rbx,QWORD PTR [rsp+0x178]
   1400050af:	add    rsp,0x140
   1400050b6:	pop    r15
   1400050b8:	pop    r14
   1400050ba:	pop    r12
   1400050bc:	pop    rdi
   1400050bd:	pop    rsi
   1400050be:	ret    
   1400050bf:	int3   
   1400050c0:	int3   
   1400050c1:	int3   
   1400050c2:	int3   
   1400050c3:	int3   
   1400050c4:	int3   
   1400050c5:	int3   
   1400050c6:	int3   
   1400050c7:	int3   
   1400050c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400050cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400050d2:	mov    QWORD PTR [rsp+0x18],rdi
   1400050d7:	push   r14
   1400050d9:	sub    rsp,0x20
   1400050dd:	mov    rdi,QWORD PTR [rdx]
   1400050e0:	mov    rsi,rcx
   1400050e3:	cmp    QWORD PTR [rcx],rdi
   1400050e6:	je     0x140005127
   1400050e8:	test   rdi,rdi
   1400050eb:	je     0x140005102
   1400050ed:	mov    rax,QWORD PTR [rdi]
   1400050f0:	mov    rbx,QWORD PTR [rax+0x8]
   1400050f4:	mov    rcx,rbx
   1400050f7:	call   QWORD PTR [rip+0x3333]        # 0x140008430
   1400050fd:	mov    rcx,rdi
   140005100:	call   rbx
   140005102:	mov    r14,QWORD PTR [rsi]
   140005105:	test   r14,r14
   140005108:	je     0x14000511f
   14000510a:	mov    rax,QWORD PTR [r14]
   14000510d:	mov    rbx,QWORD PTR [rax+0x10]
   140005111:	mov    rcx,rbx
   140005114:	call   QWORD PTR [rip+0x3316]        # 0x140008430
   14000511a:	mov    rcx,r14
   14000511d:	call   rbx
   14000511f:	mov    QWORD PTR [rsi],rdi
   140005122:	mov    rax,rdi
   140005125:	jmp    0x14000512a
   140005127:	mov    rax,QWORD PTR [rcx]
   14000512a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000512f:	mov    rsi,QWORD PTR [rsp+0x38]
   140005134:	mov    rdi,QWORD PTR [rsp+0x40]
   140005139:	add    rsp,0x20
   14000513d:	pop    r14
   14000513f:	ret    
   140005140:	int3   
   140005141:	int3   
   140005142:	int3   
   140005143:	int3   
   140005144:	int3   
   140005145:	int3   
   140005146:	int3   
   140005147:	int3   
   140005148:	mov    rax,rsp
   14000514b:	mov    QWORD PTR [rax+0x10],rbx
   14000514f:	mov    QWORD PTR [rax+0x18],rbp
   140005153:	mov    QWORD PTR [rax+0x20],rsi
   140005157:	push   rdi
   140005158:	push   r14
   14000515a:	push   r15
   14000515c:	sub    rsp,0x20
   140005160:	xor    ebp,ebp
   140005162:	mov    rbx,rdx
   140005165:	test   r8,r8
   140005168:	mov    WORD PTR [rax+0x8],bp
   14000516c:	lea    rdx,[rax+0x8]
   140005170:	mov    r15,r9
   140005173:	cmovne rdx,r8
   140005177:	mov    rdi,rcx
   14000517a:	test   rdx,rdx
   14000517d:	jne    0x140005184
   14000517f:	lea    esi,[rbp+0x2]
   140005182:	jmp    0x140005199
   140005184:	or     rax,0xffffffffffffffff
   140005188:	inc    rax
   14000518b:	cmp    WORD PTR [rdx+rax*2],bp
   14000518f:	jne    0x140005188
   140005191:	lea    rsi,[rax*2+0x2]
   140005199:	sub    rbx,rcx
   14000519c:	shr    rsi,1
   14000519f:	shr    rbx,1
   1400051a2:	cmp    rsi,rbx
   1400051a5:	cmovb  rbx,rsi
   1400051a9:	lea    r14,[rbx+rbx*1]
   1400051ad:	mov    r8,r14
   1400051b0:	call   0x140006984
   1400051b5:	test   r15,r15
   1400051b8:	je     0x1400051c8
   1400051ba:	cmp    rbx,0x1
   1400051be:	mov    rax,rbp
   1400051c1:	cmova  rax,rdi
   1400051c5:	mov    QWORD PTR [r15],rax
   1400051c8:	cmp    rbx,rsi
   1400051cb:	jae    0x1400051da
   1400051cd:	test   rbx,rbx
   1400051d0:	je     0x1400051da
   1400051d2:	xor    eax,eax
   1400051d4:	mov    WORD PTR [r14+rdi*1-0x2],ax
   1400051da:	mov    rbx,QWORD PTR [rsp+0x48]
   1400051df:	lea    rax,[r14+rdi*1]
   1400051e3:	mov    rbp,QWORD PTR [rsp+0x50]
   1400051e8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400051ed:	add    rsp,0x20
   1400051f1:	pop    r15
   1400051f3:	pop    r14
   1400051f5:	pop    rdi
   1400051f6:	ret    
   1400051f7:	int3   
   1400051f8:	int3   
   1400051f9:	int3   
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	int3   
   1400051fd:	int3   
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	mov    rax,rsp
   140005203:	mov    QWORD PTR [rax+0x10],rbx
   140005207:	mov    QWORD PTR [rax+0x18],rsi
   14000520b:	mov    QWORD PTR [rax+0x20],rdi
   14000520f:	push   r14
   140005211:	sub    rsp,0x20
   140005215:	mov    rbx,rdx
   140005218:	mov    BYTE PTR [rax+0x8],0x0
   14000521c:	test   r8,r8
   14000521f:	lea    rdx,[rax+0x8]
   140005223:	mov    r14,r9
   140005226:	mov    rsi,rcx
   140005229:	cmovne rdx,r8
   14000522d:	test   rdx,rdx
   140005230:	jne    0x140005237
   140005232:	lea    edi,[rdx+0x1]
   140005235:	jmp    0x140005247
   140005237:	or     rdi,0xffffffffffffffff
   14000523b:	inc    rdi
   14000523e:	cmp    BYTE PTR [rdx+rdi*1],0x0
   140005242:	jne    0x14000523b
   140005244:	inc    rdi
   140005247:	sub    rbx,rcx
   14000524a:	cmp    rdi,rbx
   14000524d:	cmovb  rbx,rdi
   140005251:	mov    r8,rbx
   140005254:	call   0x140006984
   140005259:	test   r14,r14
   14000525c:	je     0x14000526b
   14000525e:	xor    eax,eax
   140005260:	cmp    rbx,0x1
   140005264:	cmova  rax,rsi
   140005268:	mov    QWORD PTR [r14],rax
   14000526b:	cmp    rbx,rdi
   14000526e:	jae    0x14000527b
   140005270:	test   rbx,rbx
   140005273:	je     0x14000527b
   140005275:	xor    eax,eax
   140005277:	mov    BYTE PTR [rbx+rsi*1-0x1],al
   14000527b:	mov    rdi,QWORD PTR [rsp+0x48]
   140005280:	lea    rax,[rbx+rsi*1]
   140005284:	mov    rbx,QWORD PTR [rsp+0x38]
   140005289:	mov    rsi,QWORD PTR [rsp+0x40]
   14000528e:	add    rsp,0x20
   140005292:	pop    r14
   140005294:	ret    
   140005295:	int3   
   140005296:	int3   
   140005297:	int3   
   140005298:	int3   
   140005299:	int3   
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	rex push rbp
   14000529e:	push   rbx
   14000529f:	push   rsi
   1400052a0:	push   rdi
   1400052a1:	mov    rbp,rsp
   1400052a4:	sub    rsp,0x58
   1400052a8:	and    DWORD PTR [rcx],0x0
   1400052ab:	lea    r9,[rbp-0x18]
   1400052af:	and    DWORD PTR [rbp+0x28],0x0
   1400052b3:	lea    r8,[rbp+0x28]
   1400052b7:	and    QWORD PTR [rbp-0x18],0x0
   1400052bc:	xor    edx,edx
   1400052be:	and    QWORD PTR [rbp+0x38],0x0
   1400052c3:	mov    rsi,rcx
   1400052c6:	and    QWORD PTR [rbp+0x40],0x0
   1400052cb:	lea    ecx,[rdx+0x1]
   1400052ce:	call   QWORD PTR [rip+0x3144]        # 0x140008418
   1400052d4:	movzx  ebx,ax
   1400052d7:	or     ebx,0x80070000
   1400052dd:	test   eax,eax
   1400052df:	cmovle ebx,eax
   1400052e2:	cmp    ebx,0x80070426
   1400052e8:	jne    0x1400052f4
   1400052ea:	mov    ebx,0x1
   1400052ef:	jmp    0x1400053b8
   1400052f4:	test   ebx,ebx
   1400052f6:	js     0x1400053b8
   1400052fc:	mov    rcx,QWORD PTR [rbp-0x18]
   140005300:	lea    r8,[rbp+0x38]
   140005304:	xor    edx,edx
   140005306:	call   QWORD PTR [rip+0x3104]        # 0x140008410
   14000530c:	movzx  ebx,ax
   14000530f:	or     ebx,0x80070000
   140005315:	test   eax,eax
   140005317:	cmovle ebx,eax
   14000531a:	test   ebx,ebx
   14000531c:	js     0x1400053b8
   140005322:	mov    rax,QWORD PTR [rbp+0x38]
   140005326:	xor    edi,edi
   140005328:	cmp    DWORD PTR [rax],edi
   14000532a:	jbe    0x1400053b8
   140005330:	and    QWORD PTR [rsp+0x38],0x0
   140005336:	xor    r9d,r9d
   140005339:	mov    rdx,QWORD PTR [rbp+0x38]
   14000533d:	and    QWORD PTR [rsp+0x30],0x0
   140005343:	add    rdx,0x4
   140005347:	and    DWORD PTR [rbp+0x30],0x0
   14000534b:	mov    eax,edi
   14000534d:	lea    r8d,[r9+0x7]
   140005351:	imul   rcx,rax,0x24c
   140005358:	lea    rax,[rbp+0x40]
   14000535c:	mov    QWORD PTR [rsp+0x28],rax
   140005361:	add    rdx,rcx
   140005364:	mov    rcx,QWORD PTR [rbp-0x18]
   140005368:	lea    rax,[rbp+0x30]
   14000536c:	mov    QWORD PTR [rsp+0x20],rax
   140005371:	call   QWORD PTR [rip+0x3089]        # 0x140008400
   140005377:	movzx  ebx,ax
   14000537a:	or     ebx,0x80070000
   140005380:	test   eax,eax
   140005382:	cmovle ebx,eax
   140005385:	test   ebx,ebx
   140005387:	js     0x1400053b8
   140005389:	mov    rcx,QWORD PTR [rbp+0x40]
   14000538d:	mov    eax,DWORD PTR [rcx+0x56c]
   140005393:	sub    eax,0x4
   140005396:	cmp    eax,0x1
   140005399:	jbe    0x1400053b2
   14000539b:	call   QWORD PTR [rip+0x307f]        # 0x140008420
   1400053a1:	mov    rax,QWORD PTR [rbp+0x38]
   1400053a5:	inc    edi
   1400053a7:	and    QWORD PTR [rbp+0x40],0x0
   1400053ac:	cmp    edi,DWORD PTR [rax]
   1400053ae:	jb     0x140005330
   1400053b0:	jmp    0x1400053c7
   1400053b2:	mov    DWORD PTR [rsi],0x1
   1400053b8:	mov    rcx,QWORD PTR [rbp+0x40]
   1400053bc:	test   rcx,rcx
   1400053bf:	je     0x1400053c7
   1400053c1:	call   QWORD PTR [rip+0x3059]        # 0x140008420
   1400053c7:	mov    rcx,QWORD PTR [rbp+0x38]
   1400053cb:	test   rcx,rcx
   1400053ce:	je     0x1400053d6
   1400053d0:	call   QWORD PTR [rip+0x304a]        # 0x140008420
   1400053d6:	mov    rcx,QWORD PTR [rbp-0x18]
   1400053da:	test   rcx,rcx
   1400053dd:	je     0x1400053e7
   1400053df:	xor    edx,edx
   1400053e1:	call   QWORD PTR [rip+0x3021]        # 0x140008408
   1400053e7:	mov    eax,ebx
   1400053e9:	add    rsp,0x58
   1400053ed:	pop    rdi
   1400053ee:	pop    rsi
   1400053ef:	pop    rbx
   1400053f0:	pop    rbp
   1400053f1:	ret    
   1400053f2:	int3   
   1400053f3:	int3   
   1400053f4:	int3   
   1400053f5:	int3   
   1400053f6:	int3   
   1400053f7:	int3   
   1400053f8:	sub    rsp,0x28
   1400053fc:	call   0x140005578
   140005401:	int3   
   140005402:	int3   
   140005403:	int3   
   140005404:	int3   
   140005405:	int3   
   140005406:	int3   
   140005407:	int3   
   140005408:	and    QWORD PTR [rcx+0x10],0x0
   14000540d:	lea    rax,[rip+0x45cc]        # 0x1400099e0
   140005414:	and    QWORD PTR [rcx+0x18],0x0
   140005419:	mov    QWORD PTR [rcx],rax
   14000541c:	mov    rax,rcx
   14000541f:	mov    DWORD PTR [rcx+0x8],edx
   140005422:	ret    
   140005423:	int3   
   140005424:	int3   
   140005425:	int3   
   140005426:	int3   
   140005427:	int3   
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	mov    QWORD PTR [rsp+0x8],rbx
   140005435:	mov    QWORD PTR [rsp+0x10],rbp
   14000543a:	mov    QWORD PTR [rsp+0x18],rsi
   14000543f:	push   rdi
   140005440:	sub    rsp,0x20
   140005444:	mov    rsi,QWORD PTR [rcx+0x10]
   140005448:	lea    rax,[rip+0x4591]        # 0x1400099e0
   14000544f:	mov    QWORD PTR [rcx],rax
   140005452:	mov    ebp,edx
   140005454:	mov    rdi,rcx
   140005457:	test   rsi,rsi
   14000545a:	je     0x140005471
   14000545c:	mov    rax,QWORD PTR [rsi]
   14000545f:	mov    rbx,QWORD PTR [rax+0x10]
   140005463:	mov    rcx,rbx
   140005466:	call   QWORD PTR [rip+0x2fc4]        # 0x140008430
   14000546c:	mov    rcx,rsi
   14000546f:	call   rbx
   140005471:	mov    rcx,QWORD PTR [rdi+0x18]
   140005475:	test   rcx,rcx
   140005478:	je     0x140005480
   14000547a:	call   QWORD PTR [rip+0x2c88]        # 0x140008108
   140005480:	test   bpl,0x1
   140005484:	je     0x14000548f
   140005486:	mov    rcx,rdi
   140005489:	call   QWORD PTR [rip+0x2e51]        # 0x1400082e0
   14000548f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005494:	mov    rax,rdi
   140005497:	mov    rbp,QWORD PTR [rsp+0x38]
   14000549c:	mov    rsi,QWORD PTR [rsp+0x40]
   1400054a1:	add    rsp,0x20
   1400054a5:	pop    rdi
   1400054a6:	ret    
   1400054a7:	int3   
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400054b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400054ba:	push   rdi
   1400054bb:	sub    rsp,0x20
   1400054bf:	lea    rax,[rip+0x451a]        # 0x1400099e0
   1400054c6:	mov    rdi,rcx
   1400054c9:	mov    QWORD PTR [rcx],rax
   1400054cc:	mov    eax,DWORD PTR [rdx+0x8]
   1400054cf:	mov    DWORD PTR [rcx+0x8],eax
   1400054d2:	mov    rax,QWORD PTR [rdx+0x10]
   1400054d6:	and    QWORD PTR [rcx+0x18],0x0
   1400054db:	mov    rsi,rax
   1400054de:	mov    QWORD PTR [rcx+0x10],rax
   1400054e2:	test   rax,rax
   1400054e5:	je     0x1400054fc
   1400054e7:	mov    rax,QWORD PTR [rax]
   1400054ea:	mov    rbx,QWORD PTR [rax+0x8]
   1400054ee:	mov    rcx,rbx
   1400054f1:	call   QWORD PTR [rip+0x2f39]        # 0x140008430
   1400054f7:	mov    rcx,rsi
   1400054fa:	call   rbx
   1400054fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140005501:	mov    rax,rdi
   140005504:	mov    rsi,QWORD PTR [rsp+0x38]
   140005509:	add    rsp,0x20
   14000550d:	pop    rdi
   14000550e:	ret    
   14000550f:	int3   
   140005510:	int3   
   140005511:	int3   
   140005512:	int3   
   140005513:	int3   
   140005514:	int3   
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	mov    QWORD PTR [rsp+0x8],rbx
   14000551d:	mov    QWORD PTR [rsp+0x10],rsi
   140005522:	push   rdi
   140005523:	sub    rsp,0x20
   140005527:	mov    rsi,QWORD PTR [rcx+0x10]
   14000552b:	lea    rax,[rip+0x44ae]        # 0x1400099e0
   140005532:	mov    QWORD PTR [rcx],rax
   140005535:	mov    rdi,rcx
   140005538:	test   rsi,rsi
   14000553b:	je     0x140005552
   14000553d:	mov    rax,QWORD PTR [rsi]
   140005540:	mov    rbx,QWORD PTR [rax+0x10]
   140005544:	mov    rcx,rbx
   140005547:	call   QWORD PTR [rip+0x2ee3]        # 0x140008430
   14000554d:	mov    rcx,rsi
   140005550:	call   rbx
   140005552:	mov    rcx,QWORD PTR [rdi+0x18]
   140005556:	test   rcx,rcx
   140005559:	je     0x140005561
   14000555b:	call   QWORD PTR [rip+0x2ba7]        # 0x140008108
   140005561:	mov    rbx,QWORD PTR [rsp+0x30]
   140005566:	mov    rsi,QWORD PTR [rsp+0x38]
   14000556b:	add    rsp,0x20
   14000556f:	pop    rdi
   140005570:	ret    
   140005571:	int3   
   140005572:	int3   
   140005573:	int3   
   140005574:	int3   
   140005575:	int3   
   140005576:	int3   
   140005577:	int3   
   140005578:	sub    rsp,0x48
   14000557c:	mov    edx,ecx
   14000557e:	lea    rcx,[rsp+0x20]
   140005583:	call   0x140005408
   140005588:	lea    rdx,[rip+0x7489]        # 0x14000ca18
   14000558f:	lea    rcx,[rsp+0x20]
   140005594:	call   0x14000696c
   140005599:	int3   
   14000559a:	int3   
   14000559b:	int3   
   14000559c:	int3   
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	sub    rsp,0x28
   1400055a4:	mov    eax,0x5a4d
   1400055a9:	cmp    WORD PTR [rip+0xffffffffffffaa50],ax        # 0x140000000
   1400055b0:	je     0x1400055b6
   1400055b2:	xor    eax,eax
   1400055b4:	jmp    0x140005605
   1400055b6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffaa7f]        # 0x14000003c
   1400055bd:	lea    rax,[rip+0xffffffffffffaa3c]        # 0x140000000
   1400055c4:	add    rcx,rax
   1400055c7:	cmp    DWORD PTR [rcx],0x4550
   1400055cd:	jne    0x1400055b2
   1400055cf:	movzx  eax,WORD PTR [rcx+0x18]
   1400055d3:	cmp    eax,0x10b
   1400055d8:	je     0x1400055f4
   1400055da:	cmp    eax,0x20b
   1400055df:	jne    0x1400055b2
   1400055e1:	xor    eax,eax
   1400055e3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400055ea:	jbe    0x140005605
   1400055ec:	cmp    DWORD PTR [rcx+0xf8],eax
   1400055f2:	jmp    0x140005602
   1400055f4:	xor    eax,eax
   1400055f6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400055fa:	jbe    0x140005605
   1400055fc:	cmp    DWORD PTR [rcx+0xe8],eax
   140005602:	setne  al
   140005605:	mov    ecx,0x2
   14000560a:	mov    DWORD PTR [rip+0x8bd0],eax        # 0x14000e1e0
   140005610:	call   0x140005a48
   140005615:	mov    ecx,eax
   140005617:	call   QWORD PTR [rip+0x2c7b]        # 0x140008298
   14000561d:	mov    rcx,QWORD PTR [rip+0x2cb4]        # 0x1400082d8
   140005624:	or     rax,0xffffffffffffffff
   140005628:	mov    QWORD PTR [rip+0x92f1],rax        # 0x14000e920
   14000562f:	mov    QWORD PTR [rip+0x92f2],rax        # 0x14000e928
   140005636:	mov    eax,DWORD PTR [rip+0x8bb8]        # 0x14000e1f4
   14000563c:	mov    DWORD PTR [rcx],eax
   14000563e:	mov    rcx,QWORD PTR [rip+0x2d2b]        # 0x140008370
   140005645:	mov    eax,DWORD PTR [rip+0x8b9d]        # 0x14000e1e8
   14000564b:	mov    DWORD PTR [rcx],eax
   14000564d:	call   0x140005c60
   140005652:	cmp    DWORD PTR [rip+0x89a7],0x0        # 0x14000e000
   140005659:	jne    0x140005668
   14000565b:	lea    rcx,[rip+0x5fe]        # 0x140005c60
   140005662:	call   QWORD PTR [rip+0x2c50]        # 0x1400082b8
   140005668:	xor    eax,eax
   14000566a:	add    rsp,0x28
   14000566e:	ret    
   14000566f:	int3   
   140005670:	int3   
   140005671:	int3   
   140005672:	int3   
   140005673:	int3   
   140005674:	int3   
   140005675:	int3   
   140005676:	int3   
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	sub    rsp,0x38
   140005684:	mov    eax,DWORD PTR [rip+0x8b66]        # 0x14000e1f0
   14000568a:	lea    r8,[rip+0x8b47]        # 0x14000e1d8
   140005691:	mov    r9d,DWORD PTR [rip+0x8b54]        # 0x14000e1ec
   140005698:	lea    rdx,[rip+0x8b31]        # 0x14000e1d0
   14000569f:	mov    DWORD PTR [rip+0x8b3f],eax        # 0x14000e1e4
   1400056a5:	lea    rcx,[rip+0x8b1c]        # 0x14000e1c8
   1400056ac:	lea    rax,[rip+0x8b31]        # 0x14000e1e4
   1400056b3:	mov    QWORD PTR [rsp+0x20],rax
   1400056b8:	call   QWORD PTR [rip+0x2be2]        # 0x1400082a0
   1400056be:	mov    DWORD PTR [rip+0x8b08],eax        # 0x14000e1cc
   1400056c4:	add    rsp,0x38
   1400056c8:	ret    
   1400056c9:	int3   
   1400056ca:	int3   
   1400056cb:	int3   
   1400056cc:	int3   
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	sub    rsp,0x28
   1400056d4:	call   0x140005b84
   1400056d9:	add    rsp,0x28
   1400056dd:	jmp    0x1400056e8
   1400056e2:	int3   
   1400056e3:	int3   
   1400056e4:	int3   
   1400056e5:	int3   
   1400056e6:	int3   
   1400056e7:	int3   
   1400056e8:	mov    rax,rsp
   1400056eb:	mov    QWORD PTR [rax+0x8],rbx
   1400056ef:	mov    QWORD PTR [rax+0x10],rsi
   1400056f3:	mov    QWORD PTR [rax+0x18],rdi
   1400056f7:	push   r15
   1400056f9:	sub    rsp,0xb0
   140005700:	and    DWORD PTR [rsp+0x20],0x0
   140005705:	lea    rcx,[rax-0x78]
   140005709:	call   QWORD PTR [rip+0x2a49]        # 0x140008158
   14000570f:	nop
   140005710:	mov    rax,QWORD PTR gs:0x30
   140005719:	mov    rbx,QWORD PTR [rax+0x8]
   14000571d:	xor    esi,esi
   14000571f:	xor    eax,eax
   140005721:	lock cmpxchg QWORD PTR [rip+0x9206],rbx        # 0x14000e930
   14000572a:	je     0x140005745
   14000572c:	cmp    rax,rbx
   14000572f:	jne    0x140005738
   140005731:	mov    esi,0x1
   140005736:	jmp    0x140005745
   140005738:	mov    ecx,0x3e8
   14000573d:	call   QWORD PTR [rip+0x2ac5]        # 0x140008208
   140005743:	jmp    0x14000571f
   140005745:	mov    eax,DWORD PTR [rip+0x91ed]        # 0x14000e938
   14000574b:	cmp    eax,0x1
   14000574e:	jne    0x14000575a
   140005750:	lea    ecx,[rax+0x1e]
   140005753:	call   0x140005a94
   140005758:	jmp    0x1400057cb
   14000575a:	mov    eax,DWORD PTR [rip+0x91d8]        # 0x14000e938
   140005760:	test   eax,eax
   140005762:	jne    0x1400057c1
   140005764:	mov    DWORD PTR [rip+0x91ca],0x1        # 0x14000e938
   14000576e:	lea    r15,[rip+0x2d23]        # 0x140008498
   140005775:	lea    rbx,[rip+0x2d04]        # 0x140008480
   14000577c:	mov    QWORD PTR [rsp+0x38],rbx
   140005781:	mov    DWORD PTR [rsp+0x30],eax
   140005785:	cmp    rbx,r15
   140005788:	jae    0x1400057b3
   14000578a:	test   eax,eax
   14000578c:	jne    0x1400057b7
   14000578e:	mov    rdi,QWORD PTR [rbx]
   140005791:	test   rdi,rdi
   140005794:	je     0x1400057a8
   140005796:	mov    rcx,rdi
   140005799:	mov    rax,QWORD PTR [rip+0x2c90]        # 0x140008430
   1400057a0:	call   rax
   1400057a2:	call   rdi
   1400057a4:	mov    DWORD PTR [rsp+0x30],eax
   1400057a8:	add    rbx,0x8
   1400057ac:	mov    QWORD PTR [rsp+0x38],rbx
   1400057b1:	jmp    0x140005785
   1400057b3:	test   eax,eax
   1400057b5:	je     0x1400057cb
   1400057b7:	mov    eax,0xff
   1400057bc:	jmp    0x140005924
   1400057c1:	mov    DWORD PTR [rip+0x89f9],0x1        # 0x14000e1c4
   1400057cb:	mov    eax,DWORD PTR [rip+0x9167]        # 0x14000e938
   1400057d1:	cmp    eax,0x1
   1400057d4:	jne    0x1400057f3
   1400057d6:	lea    rdx,[rip+0x2c9b]        # 0x140008478
   1400057dd:	lea    rcx,[rip+0x2c5c]        # 0x140008440
   1400057e4:	call   0x140005c6a
   1400057e9:	mov    DWORD PTR [rip+0x9145],0x2        # 0x14000e938
   1400057f3:	test   esi,esi
   1400057f5:	jne    0x140005800
   1400057f7:	xor    eax,eax
   1400057f9:	xchg   QWORD PTR [rip+0x9130],rax        # 0x14000e930
   140005800:	cmp    QWORD PTR [rip+0x9138],0x0        # 0x14000e940
   140005808:	je     0x140005838
   14000580a:	lea    rcx,[rip+0x912f]        # 0x14000e940
   140005811:	call   0x140005af0
   140005816:	test   eax,eax
   140005818:	je     0x140005838
   14000581a:	mov    rbx,QWORD PTR [rip+0x911f]        # 0x14000e940
   140005821:	mov    rcx,rbx
   140005824:	mov    rax,QWORD PTR [rip+0x2c05]        # 0x140008430
   14000582b:	call   rax
   14000582d:	xor    r8d,r8d
   140005830:	lea    edx,[r8+0x2]
   140005834:	xor    ecx,ecx
   140005836:	call   rbx
   140005838:	mov    rax,QWORD PTR [rip+0x2a91]        # 0x1400082d0
   14000583f:	mov    rbx,QWORD PTR [rax]
   140005842:	mov    QWORD PTR [rsp+0x28],rbx
   140005847:	mov    edi,DWORD PTR [rsp+0x20]
   14000584b:	cmp    BYTE PTR [rbx],0x20
   14000584e:	ja     0x1400058c3
   140005850:	cmp    BYTE PTR [rbx],0x0
   140005853:	je     0x140005859
   140005855:	test   edi,edi
   140005857:	jne    0x1400058c3
   140005859:	mov    al,BYTE PTR [rbx]
   14000585b:	dec    al
   14000585d:	cmp    al,0x1f
   14000585f:	ja     0x14000586b
   140005861:	inc    rbx
   140005864:	mov    QWORD PTR [rsp+0x28],rbx
   140005869:	jmp    0x140005859
   14000586b:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000586f:	movzx  eax,WORD PTR [rsp+0x80]
   140005877:	mov    r9d,0xa
   14000587d:	and    cl,0x1
   140005880:	cmovne r9d,eax
   140005884:	mov    r8,rbx
   140005887:	xor    edx,edx
   140005889:	lea    rcx,[rip+0xffffffffffffa770]        # 0x140000000
   140005890:	call   0x14000122c
   140005895:	mov    DWORD PTR [rip+0x8925],eax        # 0x14000e1c0
   14000589b:	cmp    DWORD PTR [rip+0x893e],0x0        # 0x14000e1e0
   1400058a2:	jne    0x1400058ac
   1400058a4:	mov    ecx,eax
   1400058a6:	call   QWORD PTR [rip+0x29e4]        # 0x140008290
   1400058ac:	cmp    DWORD PTR [rip+0x8911],0x0        # 0x14000e1c4
   1400058b3:	jne    0x1400058c1
   1400058b5:	call   QWORD PTR [rip+0x29c5]        # 0x140008280
   1400058bb:	mov    eax,DWORD PTR [rip+0x88ff]        # 0x14000e1c0
   1400058c1:	jmp    0x140005924
   1400058c3:	cmp    BYTE PTR [rbx],0x22
   1400058c6:	jne    0x1400058d5
   1400058c8:	xor    eax,eax
   1400058ca:	test   edi,edi
   1400058cc:	sete   al
   1400058cf:	mov    edi,eax
   1400058d1:	mov    DWORD PTR [rsp+0x20],eax
   1400058d5:	movzx  ecx,BYTE PTR [rbx]
   1400058d8:	call   QWORD PTR [rip+0x299a]        # 0x140008278
   1400058de:	test   eax,eax
   1400058e0:	je     0x1400058ea
   1400058e2:	inc    rbx
   1400058e5:	mov    QWORD PTR [rsp+0x28],rbx
   1400058ea:	inc    rbx
   1400058ed:	mov    QWORD PTR [rsp+0x28],rbx
   1400058f2:	jmp    0x14000584b
   1400058f7:	mov    DWORD PTR [rip+0x88c3],eax        # 0x14000e1c0
   1400058fd:	cmp    DWORD PTR [rip+0x88dc],0x0        # 0x14000e1e0
   140005904:	jne    0x14000590f
   140005906:	mov    ecx,eax
   140005908:	call   QWORD PTR [rip+0x297a]        # 0x140008288
   14000590e:	int3   
   14000590f:	cmp    DWORD PTR [rip+0x88ae],0x0        # 0x14000e1c4
   140005916:	jne    0x140005924
   140005918:	call   QWORD PTR [rip+0x2962]        # 0x140008280
   14000591e:	mov    eax,DWORD PTR [rip+0x889c]        # 0x14000e1c0
   140005924:	lea    r11,[rsp+0xb0]
   14000592c:	mov    rbx,QWORD PTR [r11+0x10]
   140005930:	mov    rsi,QWORD PTR [r11+0x18]
   140005934:	mov    rdi,QWORD PTR [r11+0x20]
   140005938:	mov    rsp,r11
   14000593b:	pop    r15
   14000593d:	ret    
   14000593e:	int3   
   14000593f:	int3   
   140005940:	int3   
   140005941:	int3   
   140005942:	int3   
   140005943:	int3   
   140005944:	int3   
   140005945:	int3   
   140005946:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005950:	cmp    rcx,QWORD PTR [rip+0x86b1]        # 0x14000e008
   140005957:	jne    0x140005969
   140005959:	rol    rcx,0x10
   14000595d:	test   cx,0xffff
   140005962:	jne    0x140005965
   140005964:	ret    
   140005965:	ror    rcx,0x10
   140005969:	jmp    0x140005da0
   14000596e:	int3   
   14000596f:	int3   
   140005970:	int3   
   140005971:	int3   
   140005972:	int3   
   140005973:	int3   
   140005974:	int3   
   140005975:	int3   
   140005976:	int3   
   140005977:	int3   
   140005978:	int3   
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	sub    rsp,0x28
   140005984:	mov    rax,QWORD PTR [rcx]
   140005987:	cmp    DWORD PTR [rax],0xe06d7363
   14000598d:	jne    0x1400059b2
   14000598f:	cmp    DWORD PTR [rax+0x18],0x4
   140005993:	jne    0x1400059b2
   140005995:	mov    ecx,DWORD PTR [rax+0x20]
   140005998:	lea    eax,[rcx-0x19930520]
   14000599e:	cmp    eax,0x2
   1400059a1:	jbe    0x1400059ab
   1400059a3:	cmp    ecx,0x1994000
   1400059a9:	jne    0x1400059b2
   1400059ab:	call   QWORD PTR [rip+0x29c7]        # 0x140008378
   1400059b1:	int3   
   1400059b2:	xor    eax,eax
   1400059b4:	add    rsp,0x28
   1400059b8:	ret    
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	int3   
   1400059c0:	sub    rsp,0x28
   1400059c4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005980
   1400059cb:	call   QWORD PTR [rip+0x2707]        # 0x1400080d8
   1400059d1:	xor    eax,eax
   1400059d3:	add    rsp,0x28
   1400059d7:	ret    
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	jmp    QWORD PTR [rip+0x2984]        # 0x140008368
   1400059e4:	int3   
   1400059e5:	int3   
   1400059e6:	int3   
   1400059e7:	int3   
   1400059e8:	int3   
   1400059e9:	int3   
   1400059ea:	int3   
   1400059eb:	int3   
   1400059ec:	sub    rsp,0x18
   1400059f0:	xor    edx,edx
   1400059f2:	lea    rax,[rcx-0x1]
   1400059f6:	cmp    rax,0xfffffffffffffffd
   1400059fa:	ja     0x140005a38
   1400059fc:	mov    eax,0x5a4d
   140005a01:	cmp    WORD PTR [rcx],ax
   140005a04:	jne    0x140005a30
   140005a06:	cmp    DWORD PTR [rcx+0x3c],edx
   140005a09:	jl     0x140005a30
   140005a0b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005a12:	jae    0x140005a30
   140005a14:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005a18:	add    rax,rcx
   140005a1b:	mov    QWORD PTR [rsp],rax
   140005a1f:	cmp    DWORD PTR [rax],0x4550
   140005a25:	cmovne rax,rdx
   140005a29:	mov    rdx,rax
   140005a2c:	mov    QWORD PTR [rsp],rax
   140005a30:	jmp    0x140005a38
   140005a32:	xor    edx,edx
   140005a34:	mov    QWORD PTR [rsp],rdx
   140005a38:	mov    rax,rdx
   140005a3b:	add    rsp,0x18
   140005a3f:	ret    
   140005a40:	int3   
   140005a41:	int3   
   140005a42:	int3   
   140005a43:	int3   
   140005a44:	int3   
   140005a45:	int3   
   140005a46:	int3   
   140005a47:	int3   
   140005a48:	rex push rbx
   140005a4a:	sub    rsp,0x20
   140005a4e:	mov    ebx,ecx
   140005a50:	xor    ecx,ecx
   140005a52:	call   QWORD PTR [rip+0x26c8]        # 0x140008120
   140005a58:	test   rax,rax
   140005a5b:	je     0x140005a85
   140005a5d:	mov    rcx,rax
   140005a60:	call   0x1400059ec
   140005a65:	test   rax,rax
   140005a68:	je     0x140005a85
   140005a6a:	mov    ecx,0x2
   140005a6f:	cmp    WORD PTR [rax+0x5c],cx
   140005a73:	jne    0x140005a79
   140005a75:	mov    eax,ecx
   140005a77:	jmp    0x140005a87
   140005a79:	cmp    WORD PTR [rax+0x5c],0x3
   140005a7e:	mov    eax,0x1
   140005a83:	je     0x140005a87
   140005a85:	mov    eax,ebx
   140005a87:	add    rsp,0x20
   140005a8b:	pop    rbx
   140005a8c:	ret    
   140005a8d:	int3   
   140005a8e:	int3   
   140005a8f:	int3   
   140005a90:	int3   
   140005a91:	int3   
   140005a92:	int3   
   140005a93:	int3   
   140005a94:	jmp    QWORD PTR [rip+0x28c6]        # 0x140008360
   140005a9a:	int3   
   140005a9b:	int3   
   140005a9c:	int3   
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005aa4:	xor    r9d,r9d
   140005aa7:	add    r8,rcx
   140005aaa:	mov    r10,rdx
   140005aad:	movzx  eax,WORD PTR [r8+0x14]
   140005ab2:	movzx  r11d,WORD PTR [r8+0x6]
   140005ab7:	add    rax,0x18
   140005abb:	add    rax,r8
   140005abe:	test   r11d,r11d
   140005ac1:	je     0x140005ae1
   140005ac3:	mov    edx,DWORD PTR [rax+0xc]
   140005ac6:	cmp    r10,rdx
   140005ac9:	jb     0x140005ad5
   140005acb:	mov    ecx,DWORD PTR [rax+0x8]
   140005ace:	add    ecx,edx
   140005ad0:	cmp    r10,rcx
   140005ad3:	jb     0x140005ae3
   140005ad5:	inc    r9d
   140005ad8:	add    rax,0x28
   140005adc:	cmp    r9d,r11d
   140005adf:	jb     0x140005ac3
   140005ae1:	xor    eax,eax
   140005ae3:	ret    
   140005ae4:	int3   
   140005ae5:	int3   
   140005ae6:	int3   
   140005ae7:	int3   
   140005ae8:	int3   
   140005ae9:	int3   
   140005aea:	int3   
   140005aeb:	int3   
   140005aec:	int3   
   140005aed:	int3   
   140005aee:	int3   
   140005aef:	int3   
   140005af0:	mov    QWORD PTR [rsp+0x8],rbx
   140005af5:	push   rdi
   140005af6:	sub    rsp,0x20
   140005afa:	mov    rbx,rcx
   140005afd:	lea    rdi,[rip+0xffffffffffffa4fc]        # 0x140000000
   140005b04:	mov    rcx,rdi
   140005b07:	call   0x140005b50
   140005b0c:	test   eax,eax
   140005b0e:	je     0x140005b32
   140005b10:	sub    rbx,rdi
   140005b13:	mov    rdx,rbx
   140005b16:	mov    rcx,rdi
   140005b19:	call   0x140005aa0
   140005b1e:	test   rax,rax
   140005b21:	je     0x140005b32
   140005b23:	mov    eax,DWORD PTR [rax+0x24]
   140005b26:	shr    eax,0x1f
   140005b29:	not    eax
   140005b2b:	and    eax,0x1
   140005b2e:	jmp    0x140005b32
   140005b30:	xor    eax,eax
   140005b32:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b37:	add    rsp,0x20
   140005b3b:	pop    rdi
   140005b3c:	ret    
   140005b3d:	int3   
   140005b3e:	int3   
   140005b3f:	int3   
   140005b40:	int3   
   140005b41:	int3   
   140005b42:	int3   
   140005b43:	int3   
   140005b44:	int3   
   140005b45:	int3   
   140005b46:	int3   
   140005b47:	int3   
   140005b48:	int3   
   140005b49:	int3   
   140005b4a:	int3   
   140005b4b:	int3   
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	mov    rax,rcx
   140005b53:	mov    ecx,0x5a4d
   140005b58:	cmp    WORD PTR [rax],cx
   140005b5b:	je     0x140005b60
   140005b5d:	xor    eax,eax
   140005b5f:	ret    
   140005b60:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005b64:	add    rcx,rax
   140005b67:	xor    eax,eax
   140005b69:	cmp    DWORD PTR [rcx],0x4550
   140005b6f:	jne    0x140005b7d
   140005b71:	mov    edx,0x20b
   140005b76:	cmp    WORD PTR [rcx+0x18],dx
   140005b7a:	sete   al
   140005b7d:	ret    
   140005b7e:	int3   
   140005b7f:	int3   
   140005b80:	int3   
   140005b81:	int3   
   140005b82:	int3   
   140005b83:	int3   
   140005b84:	mov    QWORD PTR [rsp+0x20],rbx
   140005b89:	push   rbp
   140005b8a:	mov    rbp,rsp
   140005b8d:	sub    rsp,0x20
   140005b91:	and    QWORD PTR [rbp+0x18],0x0
   140005b96:	movabs rbx,0x2b992ddfa232
   140005ba0:	mov    rax,QWORD PTR [rip+0x8461]        # 0x14000e008
   140005ba7:	cmp    rax,rbx
   140005baa:	jne    0x140005c3f
   140005bb0:	lea    rcx,[rbp+0x18]
   140005bb4:	call   QWORD PTR [rip+0x2676]        # 0x140008230
   140005bba:	mov    rax,QWORD PTR [rbp+0x18]
   140005bbe:	mov    QWORD PTR [rbp+0x10],rax
   140005bc2:	call   QWORD PTR [rip+0x25a8]        # 0x140008170
   140005bc8:	mov    eax,eax
   140005bca:	xor    QWORD PTR [rbp+0x10],rax
   140005bce:	call   QWORD PTR [rip+0x25b4]        # 0x140008188
   140005bd4:	mov    eax,eax
   140005bd6:	xor    QWORD PTR [rbp+0x10],rax
   140005bda:	call   QWORD PTR [rip+0x2640]        # 0x140008220
   140005be0:	mov    eax,eax
   140005be2:	shl    rax,0x18
   140005be6:	xor    QWORD PTR [rbp+0x10],rax
   140005bea:	call   QWORD PTR [rip+0x2630]        # 0x140008220
   140005bf0:	mov    eax,eax
   140005bf2:	lea    rcx,[rbp+0x10]
   140005bf6:	xor    rax,QWORD PTR [rbp+0x10]
   140005bfa:	xor    rax,rcx
   140005bfd:	lea    rcx,[rbp+0x20]
   140005c01:	mov    QWORD PTR [rbp+0x10],rax
   140005c05:	call   QWORD PTR [rip+0x258d]        # 0x140008198
   140005c0b:	mov    eax,DWORD PTR [rbp+0x20]
   140005c0e:	movabs rcx,0xffffffffffff
   140005c18:	shl    rax,0x20
   140005c1c:	xor    rax,QWORD PTR [rbp+0x20]
   140005c20:	xor    rax,QWORD PTR [rbp+0x10]
   140005c24:	and    rax,rcx
   140005c27:	movabs rcx,0x2b992ddfa233
   140005c31:	cmp    rax,rbx
   140005c34:	cmove  rax,rcx
   140005c38:	mov    QWORD PTR [rip+0x83c9],rax        # 0x14000e008
   140005c3f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005c44:	not    rax
   140005c47:	mov    QWORD PTR [rip+0x83c2],rax        # 0x14000e010
   140005c4e:	add    rsp,0x20
   140005c52:	pop    rbp
   140005c53:	ret    
   140005c54:	int3   
   140005c55:	int3   
   140005c56:	int3   
   140005c57:	int3   
   140005c58:	int3   
   140005c59:	int3   
   140005c5a:	int3   
   140005c5b:	int3   
   140005c5c:	int3   
   140005c5d:	int3   
   140005c5e:	int3   
   140005c5f:	int3   
   140005c60:	xor    eax,eax
   140005c62:	ret    
   140005c63:	int3   
   140005c64:	int3   
   140005c65:	int3   
   140005c66:	int3   
   140005c67:	int3   
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	jmp    QWORD PTR [rip+0x2650]        # 0x1400082c0
   140005c70:	int3   
   140005c71:	int3   
   140005c72:	int3   
   140005c73:	int3   
   140005c74:	int3   
   140005c75:	int3   
   140005c76:	jmp    QWORD PTR [rip+0x264c]        # 0x1400082c8
   140005c7c:	int3   
   140005c7d:	int3   
   140005c7e:	int3   
   140005c7f:	int3   
   140005c80:	int3   
   140005c81:	int3   
   140005c82:	int3   
   140005c83:	int3   
   140005c84:	mov    QWORD PTR [rsp+0x8],rbx
   140005c89:	push   rdi
   140005c8a:	sub    rsp,0x20
   140005c8e:	mov    rdi,rcx
   140005c91:	mov    rax,QWORD PTR [rip+0x8c90]        # 0x14000e928
   140005c98:	mov    QWORD PTR [rsp+0x38],rax
   140005c9d:	cmp    rax,0xffffffffffffffff
   140005ca1:	jne    0x140005cba
   140005ca3:	mov    rbx,QWORD PTR [rip+0x2606]        # 0x1400082b0
   140005caa:	mov    rcx,rbx
   140005cad:	call   QWORD PTR [rip+0x277d]        # 0x140008430
   140005cb3:	mov    rcx,rdi
   140005cb6:	call   rbx
   140005cb8:	jmp    0x140005d17
   140005cba:	mov    ecx,0x8
   140005cbf:	call   0x140005f18
   140005cc4:	nop
   140005cc5:	mov    rax,QWORD PTR [rip+0x8c5c]        # 0x14000e928
   140005ccc:	mov    QWORD PTR [rsp+0x38],rax
   140005cd1:	mov    rax,QWORD PTR [rip+0x8c48]        # 0x14000e920
   140005cd8:	mov    QWORD PTR [rsp+0x40],rax
   140005cdd:	lea    r8,[rsp+0x40]
   140005ce2:	lea    rdx,[rsp+0x38]
   140005ce7:	mov    rcx,rdi
   140005cea:	call   0x140005f30
   140005cef:	mov    rbx,rax
   140005cf2:	mov    rdx,QWORD PTR [rsp+0x38]
   140005cf7:	mov    QWORD PTR [rip+0x8c2a],rdx        # 0x14000e928
   140005cfe:	mov    rdx,QWORD PTR [rsp+0x40]
   140005d03:	mov    QWORD PTR [rip+0x8c16],rdx        # 0x14000e920
   140005d0a:	mov    ecx,0x8
   140005d0f:	call   0x140005f24
   140005d14:	mov    rax,rbx
   140005d17:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d1c:	add    rsp,0x20
   140005d20:	pop    rdi
   140005d21:	ret    
   140005d22:	int3   
   140005d23:	int3   
   140005d24:	int3   
   140005d25:	int3   
   140005d26:	int3   
   140005d27:	int3   
   140005d28:	sub    rsp,0x28
   140005d2c:	call   0x140005c84
   140005d31:	neg    rax
   140005d34:	sbb    eax,eax
   140005d36:	neg    eax
   140005d38:	dec    eax
   140005d3a:	add    rsp,0x28
   140005d3e:	ret    
   140005d3f:	int3   
   140005d40:	int3   
   140005d41:	int3   
   140005d42:	int3   
   140005d43:	int3   
   140005d44:	int3   
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	int3   
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	ret    0x0
   140005d53:	int3   
   140005d54:	int3   
   140005d55:	int3   
   140005d56:	int3   
   140005d57:	int3   
   140005d58:	int3   
   140005d59:	int3   
   140005d5a:	int3   
   140005d5b:	int3   
   140005d5c:	rex push rbx
   140005d5e:	sub    rsp,0x20
   140005d62:	mov    rbx,rcx
   140005d65:	xor    ecx,ecx
   140005d67:	call   QWORD PTR [rip+0x236b]        # 0x1400080d8
   140005d6d:	mov    rcx,rbx
   140005d70:	call   QWORD PTR [rip+0x2372]        # 0x1400080e8
   140005d76:	call   QWORD PTR [rip+0x23fc]        # 0x140008178
   140005d7c:	mov    rcx,rax
   140005d7f:	mov    edx,0xc0000409
   140005d84:	add    rsp,0x20
   140005d88:	pop    rbx
   140005d89:	rex.W jmp QWORD PTR [rip+0x23f0]        # 0x140008180
   140005d90:	int3   
   140005d91:	int3   
   140005d92:	int3   
   140005d93:	int3   
   140005d94:	int3   
   140005d95:	int3   
   140005d96:	int3   
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	mov    QWORD PTR [rsp+0x8],rcx
   140005da5:	sub    rsp,0x88
   140005dac:	lea    rcx,[rip+0x84ed]        # 0x14000e2a0
   140005db3:	call   QWORD PTR [rip+0x2437]        # 0x1400081f0
   140005db9:	mov    rax,QWORD PTR [rip+0x85d8]        # 0x14000e398
   140005dc0:	mov    QWORD PTR [rsp+0x48],rax
   140005dc5:	xor    r8d,r8d
   140005dc8:	lea    rdx,[rsp+0x50]
   140005dcd:	mov    rcx,QWORD PTR [rsp+0x48]
   140005dd2:	call   QWORD PTR [rip+0x2408]        # 0x1400081e0
   140005dd8:	mov    QWORD PTR [rsp+0x40],rax
   140005ddd:	cmp    QWORD PTR [rsp+0x40],0x0
   140005de3:	je     0x140005e27
   140005de5:	mov    QWORD PTR [rsp+0x38],0x0
   140005dee:	lea    rax,[rsp+0x58]
   140005df3:	mov    QWORD PTR [rsp+0x30],rax
   140005df8:	lea    rax,[rsp+0x60]
   140005dfd:	mov    QWORD PTR [rsp+0x28],rax
   140005e02:	lea    rax,[rip+0x8497]        # 0x14000e2a0
   140005e09:	mov    QWORD PTR [rsp+0x20],rax
   140005e0e:	mov    r9,QWORD PTR [rsp+0x40]
   140005e13:	mov    r8,QWORD PTR [rsp+0x48]
   140005e18:	mov    rdx,QWORD PTR [rsp+0x50]
   140005e1d:	xor    ecx,ecx
   140005e1f:	call   QWORD PTR [rip+0x23c3]        # 0x1400081e8
   140005e25:	jmp    0x140005e4a
   140005e27:	mov    rax,QWORD PTR [rip+0x850a]        # 0x14000e338
   140005e2e:	mov    rax,QWORD PTR [rax]
   140005e31:	mov    QWORD PTR [rip+0x8560],rax        # 0x14000e398
   140005e38:	mov    rax,QWORD PTR [rip+0x84f9]        # 0x14000e338
   140005e3f:	add    rax,0x8
   140005e43:	mov    QWORD PTR [rip+0x84ee],rax        # 0x14000e338
   140005e4a:	mov    rax,QWORD PTR [rip+0x8547]        # 0x14000e398
   140005e51:	mov    QWORD PTR [rip+0x83b8],rax        # 0x14000e210
   140005e58:	mov    rax,QWORD PTR [rsp+0x90]
   140005e60:	mov    QWORD PTR [rip+0x84b9],rax        # 0x14000e320
   140005e67:	mov    DWORD PTR [rip+0x838f],0xc0000409        # 0x14000e200
   140005e71:	mov    DWORD PTR [rip+0x8389],0x1        # 0x14000e204
   140005e7b:	mov    DWORD PTR [rip+0x8393],0x3        # 0x14000e218
   140005e85:	mov    eax,0x8
   140005e8a:	imul   rax,rax,0x0
   140005e8e:	lea    rcx,[rip+0x838b]        # 0x14000e220
   140005e95:	mov    QWORD PTR [rcx+rax*1],0x2
   140005e9d:	mov    eax,0x8
   140005ea2:	imul   rax,rax,0x1
   140005ea6:	lea    rcx,[rip+0x8373]        # 0x14000e220
   140005ead:	mov    rdx,QWORD PTR [rip+0x8154]        # 0x14000e008
   140005eb4:	mov    QWORD PTR [rcx+rax*1],rdx
   140005eb8:	mov    eax,0x8
   140005ebd:	imul   rax,rax,0x2
   140005ec1:	lea    rcx,[rip+0x8358]        # 0x14000e220
   140005ec8:	mov    rdx,QWORD PTR [rip+0x8141]        # 0x14000e010
   140005ecf:	mov    QWORD PTR [rcx+rax*1],rdx
   140005ed3:	mov    eax,0x8
   140005ed8:	imul   rax,rax,0x0
   140005edc:	mov    rcx,QWORD PTR [rip+0x8125]        # 0x14000e008
   140005ee3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005ee8:	mov    eax,0x8
   140005eed:	imul   rax,rax,0x1
   140005ef1:	mov    rcx,QWORD PTR [rip+0x8118]        # 0x14000e010
   140005ef8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005efd:	lea    rcx,[rip+0x263c]        # 0x140008540
   140005f04:	call   0x140005d5c
   140005f09:	add    rsp,0x88
   140005f10:	ret    
   140005f11:	int3   
   140005f12:	int3   
   140005f13:	int3   
   140005f14:	int3   
   140005f15:	int3   
   140005f16:	int3   
   140005f17:	int3   
   140005f18:	jmp    QWORD PTR [rip+0x2462]        # 0x140008380
   140005f1e:	int3   
   140005f1f:	int3   
   140005f20:	int3   
   140005f21:	int3   
   140005f22:	int3   
   140005f23:	int3   
   140005f24:	jmp    QWORD PTR [rip+0x2466]        # 0x140008390
   140005f2a:	int3   
   140005f2b:	int3   
   140005f2c:	int3   
   140005f2d:	int3   
   140005f2e:	int3   
   140005f2f:	int3   
   140005f30:	jmp    QWORD PTR [rip+0x2452]        # 0x140008388
   140005f36:	int3   
   140005f37:	int3   
   140005f38:	int3   
   140005f39:	int3   
   140005f3a:	int3   
   140005f3b:	int3   
   140005f3c:	int3   
   140005f3d:	int3   
   140005f3e:	int3   
   140005f3f:	int3   
   140005f40:	int3   
   140005f41:	int3   
   140005f42:	int3   
   140005f43:	int3   
   140005f44:	int3   
   140005f45:	int3   
   140005f46:	int3   
   140005f47:	int3   
   140005f48:	rex push rbx
   140005f4a:	sub    rsp,0x20
   140005f4e:	mov    rbx,rcx
   140005f51:	jmp    0x140005f62
   140005f53:	mov    rcx,rbx
   140005f56:	call   0x1400068f6
   140005f5b:	test   eax,eax
   140005f5d:	je     0x140005f73
   140005f5f:	mov    rcx,rbx
   140005f62:	call   QWORD PTR [rip+0x2388]        # 0x1400082f0
   140005f68:	test   rax,rax
   140005f6b:	je     0x140005f53
   140005f6d:	add    rsp,0x20
   140005f71:	pop    rbx
   140005f72:	ret    
   140005f73:	call   0x140006280
   140005f78:	int3   
   140005f79:	int3   
   140005f7a:	int3   
   140005f7b:	int3   
   140005f7c:	int3   
   140005f7d:	int3   
   140005f7e:	int3   
   140005f7f:	int3   
   140005f80:	rex push rbx
   140005f82:	sub    rsp,0x20
   140005f86:	mov    rbx,rcx
   140005f89:	call   0x140006940
   140005f8e:	lea    rax,[rip+0x25e3]        # 0x140008578
   140005f95:	mov    QWORD PTR [rbx],rax
   140005f98:	mov    rax,rbx
   140005f9b:	add    rsp,0x20
   140005f9f:	pop    rbx
   140005fa0:	ret    
   140005fa1:	int3   
   140005fa2:	int3   
   140005fa3:	int3   
   140005fa4:	int3   
   140005fa5:	int3   
   140005fa6:	int3   
   140005fa7:	int3   
   140005fa8:	rex push rbx
   140005faa:	sub    rsp,0x20
   140005fae:	lea    rax,[rip+0x25d3]        # 0x140008588
   140005fb5:	mov    r8d,0x1
   140005fbb:	lea    rdx,[rsp+0x30]
   140005fc0:	mov    QWORD PTR [rsp+0x30],rax
   140005fc5:	mov    rbx,rcx
   140005fc8:	call   0x140006934
   140005fcd:	lea    rax,[rip+0x25a4]        # 0x140008578
   140005fd4:	mov    QWORD PTR [rbx],rax
   140005fd7:	mov    rax,rbx
   140005fda:	add    rsp,0x20
   140005fde:	pop    rbx
   140005fdf:	ret    
   140005fe0:	int3   
   140005fe1:	int3   
   140005fe2:	int3   
   140005fe3:	int3   
   140005fe4:	int3   
   140005fe5:	int3   
   140005fe6:	int3   
   140005fe7:	int3   
   140005fe8:	rex push rbx
   140005fea:	sub    rsp,0x20
   140005fee:	mov    rbx,rcx
   140005ff1:	call   0x140006940
   140005ff6:	lea    rax,[rip+0x259b]        # 0x140008598
   140005ffd:	mov    QWORD PTR [rbx],rax
   140006000:	mov    rax,rbx
   140006003:	add    rsp,0x20
   140006007:	pop    rbx
   140006008:	ret    
   140006009:	int3   
   14000600a:	int3   
   14000600b:	int3   
   14000600c:	int3   
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	mov    QWORD PTR [rsp+0x8],rcx
   140006015:	push   rbx
   140006016:	sub    rsp,0x20
   14000601a:	mov    QWORD PTR [rsp+0x30],rdx
   14000601f:	mov    rbx,rcx
   140006022:	lea    rdx,[rsp+0x30]
   140006027:	call   0x140006928
   14000602c:	lea    rax,[rip+0x2565]        # 0x140008598
   140006033:	mov    QWORD PTR [rbx],rax
   140006036:	mov    rax,rbx
   140006039:	add    rsp,0x20
   14000603d:	pop    rbx
   14000603e:	ret    
   14000603f:	int3   
   140006040:	int3   
   140006041:	int3   
   140006042:	int3   
   140006043:	int3   
   140006044:	int3   
   140006045:	int3   
   140006046:	int3   
   140006047:	int3   
   140006048:	lea    rax,[rip+0x2529]        # 0x140008578
   14000604f:	mov    QWORD PTR [rcx],rax
   140006052:	jmp    0x14000694c
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	int3   
   14000605d:	int3   
   14000605e:	int3   
   14000605f:	int3   
   140006060:	jmp    0x14000694c
   140006065:	int3   
   140006066:	int3   
   140006067:	int3   
   140006068:	int3   
   140006069:	int3   
   14000606a:	int3   
   14000606b:	int3   
   14000606c:	int3   
   14000606d:	int3   
   14000606e:	int3   
   14000606f:	int3   
   140006070:	rex push rbx
   140006072:	sub    rsp,0x20
   140006076:	lea    rax,[rip+0x252b]        # 0x1400085a8
   14000607d:	mov    rbx,rcx
   140006080:	mov    QWORD PTR [rcx],rax
   140006083:	test   dl,0x1
   140006086:	je     0x14000608d
   140006088:	call   0x1400068ae
   14000608d:	mov    rax,rbx
   140006090:	add    rsp,0x20
   140006094:	pop    rbx
   140006095:	ret    
   140006096:	int3   
   140006097:	int3   
   140006098:	int3   
   140006099:	int3   
   14000609a:	int3   
   14000609b:	int3   
   14000609c:	int3   
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060a5:	push   rdi
   1400060a6:	sub    rsp,0x20
   1400060aa:	lea    rax,[rip+0x24c7]        # 0x140008578
   1400060b1:	mov    ebx,edx
   1400060b3:	mov    QWORD PTR [rcx],rax
   1400060b6:	mov    rdi,rcx
   1400060b9:	call   0x14000694c
   1400060be:	test   bl,0x1
   1400060c1:	je     0x1400060cb
   1400060c3:	mov    rcx,rdi
   1400060c6:	call   0x1400068ae
   1400060cb:	mov    rax,rdi
   1400060ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400060d3:	add    rsp,0x20
   1400060d7:	pop    rdi
   1400060d8:	ret    
   1400060d9:	int3   
   1400060da:	int3   
   1400060db:	int3   
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060e5:	push   rdi
   1400060e6:	sub    rsp,0x20
   1400060ea:	mov    ebx,edx
   1400060ec:	mov    rdi,rcx
   1400060ef:	call   0x14000694c
   1400060f4:	test   bl,0x1
   1400060f7:	je     0x140006101
   1400060f9:	mov    rcx,rdi
   1400060fc:	call   0x1400068ae
   140006101:	mov    rax,rdi
   140006104:	mov    rbx,QWORD PTR [rsp+0x30]
   140006109:	add    rsp,0x20
   14000610d:	pop    rdi
   14000610e:	ret    
   14000610f:	int3   
   140006110:	int3   
   140006111:	int3   
   140006112:	int3   
   140006113:	int3   
   140006114:	int3   
   140006115:	int3   
   140006116:	int3   
   140006117:	int3   
   140006118:	mov    rax,rsp
   14000611b:	mov    QWORD PTR [rax+0x18],r8
   14000611f:	mov    QWORD PTR [rax+0x10],rdx
   140006123:	mov    QWORD PTR [rax+0x8],rcx
   140006127:	push   rbx
   140006128:	push   rsi
   140006129:	push   rdi
   14000612a:	push   r14
   14000612c:	sub    rsp,0x38
   140006130:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140006138:	mov    rsi,r8
   14000613b:	mov    rbx,rcx
   14000613e:	mov    rdi,rdx
   140006141:	or     rdi,0xf
   140006145:	mov    r9,0xfffffffffffffffe
   14000614c:	cmp    rdi,r9
   14000614f:	jbe    0x140006156
   140006151:	mov    rdi,rdx
   140006154:	jmp    0x140006187
   140006156:	mov    r8,QWORD PTR [rcx+0x18]
   14000615a:	mov    rcx,r8
   14000615d:	shr    rcx,1
   140006160:	movabs rax,0xaaaaaaaaaaaaaaab
   14000616a:	mul    rdi
   14000616d:	shr    rdx,1
   140006170:	cmp    rcx,rdx
   140006173:	jbe    0x140006187
   140006175:	mov    rax,r9
   140006178:	sub    rax,rcx
   14000617b:	cmp    r8,rax
   14000617e:	lea    rdi,[rcx+r8*1]
   140006182:	jbe    0x140006187
   140006184:	mov    rdi,r9
   140006187:	lea    rcx,[rdi+0x1]
   14000618b:	xor    r14d,r14d
   14000618e:	test   rcx,rcx
   140006191:	je     0x1400061ac
   140006193:	cmp    rcx,0xffffffffffffffff
   140006197:	ja     0x1400061a6
   140006199:	call   0x140005f48
   14000619e:	mov    r14,rax
   1400061a1:	test   rax,rax
   1400061a4:	jne    0x1400061ac
   1400061a6:	call   0x140006280
   1400061ab:	nop
   1400061ac:	jmp    0x1400061c2
   1400061ae:	mov    rbx,QWORD PTR [rsp+0x60]
   1400061b3:	mov    rsi,QWORD PTR [rsp+0x70]
   1400061b8:	mov    rdi,QWORD PTR [rsp+0x68]
   1400061bd:	mov    r14,QWORD PTR [rsp+0x78]
   1400061c2:	test   rsi,rsi
   1400061c5:	je     0x1400061e6
   1400061c7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400061cc:	jb     0x1400061d3
   1400061ce:	mov    rdx,QWORD PTR [rbx]
   1400061d1:	jmp    0x1400061d6
   1400061d3:	mov    rdx,rbx
   1400061d6:	test   rsi,rsi
   1400061d9:	je     0x1400061e6
   1400061db:	mov    r8,rsi
   1400061de:	mov    rcx,r14
   1400061e1:	call   0x140006984
   1400061e6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400061eb:	jb     0x1400061f5
   1400061ed:	mov    rcx,QWORD PTR [rbx]
   1400061f0:	call   0x1400068ae
   1400061f5:	mov    BYTE PTR [rbx],0x0
   1400061f8:	mov    QWORD PTR [rbx],r14
   1400061fb:	mov    QWORD PTR [rbx+0x18],rdi
   1400061ff:	mov    QWORD PTR [rbx+0x10],rsi
   140006203:	cmp    rdi,0x10
   140006207:	jb     0x14000620c
   140006209:	mov    rbx,r14
   14000620c:	mov    BYTE PTR [rbx+rsi*1],0x0
   140006210:	add    rsp,0x38
   140006214:	pop    r14
   140006216:	pop    rdi
   140006217:	pop    rsi
   140006218:	pop    rbx
   140006219:	ret    
   14000621a:	int3   
   14000621b:	int3   
   14000621c:	int3   
   14000621d:	int3   
   14000621e:	int3   
   14000621f:	int3   
   140006220:	mov    QWORD PTR [rsp+0x8],rbx
   140006225:	mov    QWORD PTR [rsp+0x10],rsi
   14000622a:	push   rdi
   14000622b:	sub    rsp,0x20
   14000622f:	mov    rdi,r8
   140006232:	mov    rbx,rcx
   140006235:	test   dl,dl
   140006237:	je     0x140006258
   140006239:	cmp    QWORD PTR [rcx+0x18],0x10
   14000623e:	jb     0x140006258
   140006240:	mov    rsi,QWORD PTR [rcx]
   140006243:	test   r8,r8
   140006246:	je     0x140006250
   140006248:	mov    rdx,rsi
   14000624b:	call   0x140006984
   140006250:	mov    rcx,rsi
   140006253:	call   0x1400068ae
   140006258:	mov    rsi,QWORD PTR [rsp+0x38]
   14000625d:	mov    QWORD PTR [rbx+0x18],0xf
   140006265:	mov    QWORD PTR [rbx+0x10],rdi
   140006269:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000626d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006272:	add    rsp,0x20
   140006276:	pop    rdi
   140006277:	ret    
   140006278:	int3   
   140006279:	int3   
   14000627a:	int3   
   14000627b:	int3   
   14000627c:	int3   
   14000627d:	int3   
   14000627e:	int3   
   14000627f:	int3   
   140006280:	sub    rsp,0x48
   140006284:	lea    rcx,[rsp+0x20]
   140006289:	call   0x140005fa8
   14000628e:	lea    rdx,[rip+0x6573]        # 0x14000c808
   140006295:	lea    rcx,[rsp+0x20]
   14000629a:	call   0x14000696c
   14000629f:	int3   
   1400062a0:	int3   
   1400062a1:	int3   
   1400062a2:	int3   
   1400062a3:	int3   
   1400062a4:	int3   
   1400062a5:	int3   
   1400062a6:	int3   
   1400062a7:	int3   
   1400062a8:	sub    rsp,0x28
   1400062ac:	lea    rcx,[rip+0x2415]        # 0x1400086c8
   1400062b3:	call   0x1400062c0
   1400062b8:	int3   
   1400062b9:	int3   
   1400062ba:	int3   
   1400062bb:	int3   
   1400062bc:	int3   
   1400062bd:	int3   
   1400062be:	int3   
   1400062bf:	int3   
   1400062c0:	sub    rsp,0x48
   1400062c4:	mov    rdx,rcx
   1400062c7:	lea    rcx,[rsp+0x20]
   1400062cc:	call   0x140006010
   1400062d1:	lea    rdx,[rip+0x65e0]        # 0x14000c8b8
   1400062d8:	lea    rcx,[rsp+0x20]
   1400062dd:	call   0x14000696c
   1400062e2:	int3   
   1400062e3:	int3   
   1400062e4:	int3   
   1400062e5:	int3   
   1400062e6:	int3   
   1400062e7:	int3   
   1400062e8:	int3   
   1400062e9:	int3   
   1400062ea:	int3   
   1400062eb:	int3   
   1400062ec:	sub    rsp,0x48
   1400062f0:	mov    rdx,rcx
   1400062f3:	lea    rcx,[rsp+0x20]
   1400062f8:	call   0x140006010
   1400062fd:	lea    rdx,[rip+0x661c]        # 0x14000c920
   140006304:	lea    rcx,[rsp+0x20]
   140006309:	call   0x14000696c
   14000630e:	int3   
   14000630f:	int3   
   140006310:	int3   
   140006311:	int3   
   140006312:	int3   
   140006313:	int3   
   140006314:	int3   
   140006315:	int3   
   140006316:	int3   
   140006317:	int3   
   140006318:	sub    rsp,0x28
   14000631c:	lea    rcx,[rip+0x238d]        # 0x1400086b0
   140006323:	call   0x1400062ec
   140006328:	int3   
   140006329:	int3   
   14000632a:	int3   
   14000632b:	int3   
   14000632c:	int3   
   14000632d:	int3   
   14000632e:	int3   
   14000632f:	int3   
   140006330:	mov    QWORD PTR [rsp+0x8],rbx
   140006335:	mov    QWORD PTR [rsp+0x10],rbp
   14000633a:	mov    QWORD PTR [rsp+0x18],rsi
   14000633f:	push   rdi
   140006340:	sub    rsp,0x20
   140006344:	mov    rdi,QWORD PTR [rdx+0x10]
   140006348:	mov    rbp,r8
   14000634b:	mov    rsi,rdx
   14000634e:	mov    rbx,rcx
   140006351:	cmp    rdi,r8
   140006354:	jb     0x14000642c
   14000635a:	sub    rdi,r8
   14000635d:	cmp    r9,rdi
   140006360:	cmovb  rdi,r9
   140006364:	cmp    rcx,rdx
   140006367:	jne    0x140006395
   140006369:	lea    rax,[rdi+r8*1]
   14000636d:	cmp    QWORD PTR [rcx+0x10],rax
   140006371:	jb     0x140006432
   140006377:	cmp    QWORD PTR [rcx+0x18],0x10
   14000637c:	mov    QWORD PTR [rcx+0x10],rax
   140006380:	jb     0x140006385
   140006382:	mov    rcx,QWORD PTR [rcx]
   140006385:	mov    BYTE PTR [rcx+rax*1],0x0
   140006389:	xor    edx,edx
   14000638b:	mov    rcx,rbx
   14000638e:	call   0x140006650
   140006393:	jmp    0x140006414
   140006395:	cmp    rdi,0xfffffffffffffffe
   140006399:	ja     0x140006438
   14000639f:	cmp    QWORD PTR [rcx+0x18],rdi
   1400063a3:	jae    0x1400063b3
   1400063a5:	mov    r8,QWORD PTR [rcx+0x10]
   1400063a9:	mov    rdx,rdi
   1400063ac:	call   0x140006118
   1400063b1:	jmp    0x1400063ce
   1400063b3:	test   rdi,rdi
   1400063b6:	jne    0x1400063d3
   1400063b8:	and    QWORD PTR [rcx+0x10],rdi
   1400063bc:	cmp    QWORD PTR [rcx+0x18],0x10
   1400063c1:	jb     0x1400063c8
   1400063c3:	mov    rax,QWORD PTR [rcx]
   1400063c6:	jmp    0x1400063cb
   1400063c8:	mov    rax,rcx
   1400063cb:	mov    BYTE PTR [rax],0x0
   1400063ce:	test   rdi,rdi
   1400063d1:	je     0x140006414
   1400063d3:	cmp    QWORD PTR [rsi+0x18],0x10
   1400063d8:	jb     0x1400063dd
   1400063da:	mov    rsi,QWORD PTR [rsi]
   1400063dd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400063e2:	jb     0x1400063e9
   1400063e4:	mov    rcx,QWORD PTR [rbx]
   1400063e7:	jmp    0x1400063ec
   1400063e9:	mov    rcx,rbx
   1400063ec:	test   rdi,rdi
   1400063ef:	je     0x1400063fd
   1400063f1:	lea    rdx,[rsi+rbp*1]
   1400063f5:	mov    r8,rdi
   1400063f8:	call   0x140006984
   1400063fd:	cmp    QWORD PTR [rbx+0x18],0x10
   140006402:	mov    QWORD PTR [rbx+0x10],rdi
   140006406:	jb     0x14000640d
   140006408:	mov    rax,QWORD PTR [rbx]
   14000640b:	jmp    0x140006410
   14000640d:	mov    rax,rbx
   140006410:	mov    BYTE PTR [rax+rdi*1],0x0
   140006414:	mov    rbp,QWORD PTR [rsp+0x38]
   140006419:	mov    rax,rbx
   14000641c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006421:	mov    rsi,QWORD PTR [rsp+0x40]
   140006426:	add    rsp,0x20
   14000642a:	pop    rdi
   14000642b:	ret    
   14000642c:	call   0x140006318
   140006431:	int3   
   140006432:	call   0x140006318
   140006437:	int3   
   140006438:	call   0x1400062a8
   14000643d:	int3   
   14000643e:	int3   
   14000643f:	int3   
   140006440:	int3   
   140006441:	int3   
   140006442:	int3   
   140006443:	int3   
   140006444:	mov    QWORD PTR [rsp+0x8],rbx
   140006449:	mov    QWORD PTR [rsp+0x10],rsi
   14000644e:	push   rdi
   14000644f:	sub    rsp,0x20
   140006453:	mov    rdi,r8
   140006456:	mov    rsi,rdx
   140006459:	mov    rbx,rcx
   14000645c:	test   rdx,rdx
   14000645f:	je     0x1400064ad
   140006461:	cmp    QWORD PTR [rcx+0x18],0x10
   140006466:	jb     0x14000646d
   140006468:	mov    rax,QWORD PTR [rcx]
   14000646b:	jmp    0x140006470
   14000646d:	mov    rax,rcx
   140006470:	cmp    rdx,rax
   140006473:	jb     0x1400064ad
   140006475:	cmp    QWORD PTR [rcx+0x18],0x10
   14000647a:	jb     0x14000647f
   14000647c:	mov    rcx,QWORD PTR [rcx]
   14000647f:	add    rcx,QWORD PTR [rbx+0x10]
   140006483:	cmp    rcx,rdx
   140006486:	jbe    0x1400064ad
   140006488:	cmp    QWORD PTR [rbx+0x18],0x10
   14000648d:	jb     0x140006494
   14000648f:	mov    rax,QWORD PTR [rbx]
   140006492:	jmp    0x140006497
   140006494:	mov    rax,rbx
   140006497:	sub    rsi,rax
   14000649a:	mov    r9,r8
   14000649d:	mov    r8,rsi
   1400064a0:	mov    rdx,rbx
   1400064a3:	mov    rcx,rbx
   1400064a6:	call   0x140006330
   1400064ab:	jmp    0x140006527
   1400064ad:	cmp    r8,0xfffffffffffffffe
   1400064b1:	ja     0x140006537
   1400064b7:	cmp    QWORD PTR [rbx+0x18],r8
   1400064bb:	jae    0x1400064ce
   1400064bd:	mov    r8,QWORD PTR [rbx+0x10]
   1400064c1:	mov    rdx,rdi
   1400064c4:	mov    rcx,rbx
   1400064c7:	call   0x140006118
   1400064cc:	jmp    0x1400064e9
   1400064ce:	test   r8,r8
   1400064d1:	jne    0x1400064e9
   1400064d3:	and    QWORD PTR [rbx+0x10],r8
   1400064d7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400064dc:	jb     0x1400064e3
   1400064de:	mov    rax,QWORD PTR [rbx]
   1400064e1:	jmp    0x1400064e6
   1400064e3:	mov    rax,rbx
   1400064e6:	mov    BYTE PTR [rax],0x0
   1400064e9:	test   rdi,rdi
   1400064ec:	je     0x140006524
   1400064ee:	cmp    QWORD PTR [rbx+0x18],0x10
   1400064f3:	jb     0x1400064fa
   1400064f5:	mov    rcx,QWORD PTR [rbx]
   1400064f8:	jmp    0x1400064fd
   1400064fa:	mov    rcx,rbx
   1400064fd:	test   rdi,rdi
   140006500:	je     0x14000650d
   140006502:	mov    r8,rdi
   140006505:	mov    rdx,rsi
   140006508:	call   0x140006984
   14000650d:	cmp    QWORD PTR [rbx+0x18],0x10
   140006512:	mov    QWORD PTR [rbx+0x10],rdi
   140006516:	jb     0x14000651d
   140006518:	mov    rax,QWORD PTR [rbx]
   14000651b:	jmp    0x140006520
   14000651d:	mov    rax,rbx
   140006520:	mov    BYTE PTR [rax+rdi*1],0x0
   140006524:	mov    rax,rbx
   140006527:	mov    rbx,QWORD PTR [rsp+0x30]
   14000652c:	mov    rsi,QWORD PTR [rsp+0x38]
   140006531:	add    rsp,0x20
   140006535:	pop    rdi
   140006536:	ret    
   140006537:	mov    rcx,rbx
   14000653a:	call   0x1400062a8
   14000653f:	int3   
   140006540:	int3   
   140006541:	int3   
   140006542:	int3   
   140006543:	int3   
   140006544:	int3   
   140006545:	int3   
   140006546:	int3   
   140006547:	int3   
   140006548:	int3   
   140006549:	int3   
   14000654a:	int3   
   14000654b:	int3   
   14000654c:	int3   
   14000654d:	int3   
   14000654e:	int3   
   14000654f:	int3   
   140006550:	mov    QWORD PTR [rsp+0x8],rbx
   140006555:	push   rdi
   140006556:	sub    rsp,0x20
   14000655a:	mov    ecx,r8d
   14000655d:	mov    edi,r8d
   140006560:	mov    rbx,rdx
   140006563:	call   0x140006850
   140006568:	test   rax,rax
   14000656b:	mov    DWORD PTR [rbx],edi
   14000656d:	lea    rax,[rip+0x7aac]        # 0x14000e020
   140006574:	jne    0x14000657d
   140006576:	lea    rax,[rip+0x7ab3]        # 0x14000e030
   14000657d:	mov    QWORD PTR [rbx+0x8],rax
   140006581:	mov    rax,rbx
   140006584:	mov    rbx,QWORD PTR [rsp+0x30]
   140006589:	add    rsp,0x20
   14000658d:	pop    rdi
   14000658e:	ret    
   14000658f:	int3   
   140006590:	int3   
   140006591:	int3   
   140006592:	int3   
   140006593:	int3   
   140006594:	int3   
   140006595:	int3   
   140006596:	int3   
   140006597:	int3   
   140006598:	int3   
   140006599:	int3   
   14000659a:	int3   
   14000659b:	int3   
   14000659c:	int3   
   14000659d:	int3   
   14000659e:	int3   
   14000659f:	int3   
   1400065a0:	mov    DWORD PTR [rdx],r8d
   1400065a3:	mov    rax,rdx
   1400065a6:	mov    QWORD PTR [rdx+0x8],rcx
   1400065aa:	ret    
   1400065ab:	int3   
   1400065ac:	int3   
   1400065ad:	int3   
   1400065ae:	int3   
   1400065af:	int3   
   1400065b0:	int3   
   1400065b1:	int3   
   1400065b2:	int3   
   1400065b3:	int3   
   1400065b4:	int3   
   1400065b5:	int3   
   1400065b6:	int3   
   1400065b7:	int3   
   1400065b8:	int3   
   1400065b9:	int3   
   1400065ba:	int3   
   1400065bb:	int3   
   1400065bc:	int3   
   1400065bd:	int3   
   1400065be:	int3   
   1400065bf:	int3   
   1400065c0:	cmp    rcx,QWORD PTR [rdx+0x8]
   1400065c4:	jne    0x1400065d1
   1400065c6:	cmp    DWORD PTR [rdx],r8d
   1400065c9:	jne    0x1400065d1
   1400065cb:	mov    eax,0x1
   1400065d0:	ret    
   1400065d1:	xor    eax,eax
   1400065d3:	ret    
   1400065d4:	int3   
   1400065d5:	int3   
   1400065d6:	int3   
   1400065d7:	int3   
   1400065d8:	int3   
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	int3   
   1400065dd:	int3   
   1400065de:	int3   
   1400065df:	int3   
   1400065e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400065e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400065ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400065ef:	push   r14
   1400065f1:	sub    rsp,0x30
   1400065f5:	mov    rax,QWORD PTR [rcx]
   1400065f8:	mov    rsi,rcx
   1400065fb:	mov    r14,r8
   1400065fe:	mov    edi,edx
   140006600:	mov    rbx,QWORD PTR [rax+0x18]
   140006604:	mov    rcx,rbx
   140006607:	call   QWORD PTR [rip+0x1e23]        # 0x140008430
   14000660d:	mov    r8d,edi
   140006610:	lea    rdx,[rsp+0x20]
   140006615:	mov    rcx,rsi
   140006618:	call   rbx
   14000661a:	mov    rcx,QWORD PTR [r14+0x8]
   14000661e:	cmp    QWORD PTR [rax+0x8],rcx
   140006622:	jne    0x140006632
   140006624:	mov    ecx,DWORD PTR [r14]
   140006627:	cmp    DWORD PTR [rax],ecx
   140006629:	jne    0x140006632
   14000662b:	mov    eax,0x1
   140006630:	jmp    0x140006634
   140006632:	xor    eax,eax
   140006634:	mov    rbx,QWORD PTR [rsp+0x40]
   140006639:	mov    rsi,QWORD PTR [rsp+0x48]
   14000663e:	mov    rdi,QWORD PTR [rsp+0x50]
   140006643:	add    rsp,0x30
   140006647:	pop    r14
   140006649:	ret    
   14000664a:	int3   
   14000664b:	int3   
   14000664c:	int3   
   14000664d:	int3   
   14000664e:	int3   
   14000664f:	int3   
   140006650:	mov    QWORD PTR [rsp+0x8],rbx
   140006655:	push   rdi
   140006656:	sub    rsp,0x20
   14000665a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000665e:	mov    rbx,rcx
   140006661:	cmp    rdi,rdx
   140006664:	jb     0x1400066de
   140006666:	mov    rax,rdi
   140006669:	sub    rax,rdx
   14000666c:	cmp    rax,r8
   14000666f:	ja     0x14000668a
   140006671:	cmp    QWORD PTR [rcx+0x18],0x10
   140006676:	mov    QWORD PTR [rcx+0x10],rdx
   14000667a:	jb     0x140006681
   14000667c:	mov    rax,QWORD PTR [rcx]
   14000667f:	jmp    0x140006684
   140006681:	mov    rax,rcx
   140006684:	mov    BYTE PTR [rax+rdx*1],0x0
   140006688:	jmp    0x1400066d0
   14000668a:	test   r8,r8
   14000668d:	je     0x1400066d0
   14000668f:	cmp    QWORD PTR [rcx+0x18],0x10
   140006694:	jb     0x14000669b
   140006696:	mov    rax,QWORD PTR [rcx]
   140006699:	jmp    0x14000669e
   14000669b:	mov    rax,rcx
   14000669e:	sub    rdi,r8
   1400066a1:	lea    rcx,[rax+rdx*1]
   1400066a5:	mov    rax,rdi
   1400066a8:	sub    rax,rdx
   1400066ab:	je     0x1400066b9
   1400066ad:	lea    rdx,[rcx+r8*1]
   1400066b1:	mov    r8,rax
   1400066b4:	call   0x14000691c
   1400066b9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400066be:	mov    QWORD PTR [rbx+0x10],rdi
   1400066c2:	jb     0x1400066c9
   1400066c4:	mov    rax,QWORD PTR [rbx]
   1400066c7:	jmp    0x1400066cc
   1400066c9:	mov    rax,rbx
   1400066cc:	mov    BYTE PTR [rax+rdi*1],0x0
   1400066d0:	mov    rax,rbx
   1400066d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400066d8:	add    rsp,0x20
   1400066dc:	pop    rdi
   1400066dd:	ret    
   1400066de:	call   0x140006318
   1400066e3:	int3   
   1400066e4:	int3   
   1400066e5:	int3   
   1400066e6:	int3   
   1400066e7:	int3   
   1400066e8:	int3   
   1400066e9:	int3   
   1400066ea:	int3   
   1400066eb:	int3   
   1400066ec:	int3   
   1400066ed:	int3   
   1400066ee:	int3   
   1400066ef:	int3   
   1400066f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400066f5:	push   rdi
   1400066f6:	sub    rsp,0x30
   1400066fa:	xor    ebx,ebx
   1400066fc:	mov    ecx,r8d
   1400066ff:	mov    DWORD PTR [rsp+0x20],ebx
   140006703:	mov    rdi,rdx
   140006706:	call   0x140006850
   14000670b:	test   rax,rax
   14000670e:	mov    QWORD PTR [rdi+0x18],0xf
   140006716:	mov    QWORD PTR [rdi+0x10],rbx
   14000671a:	lea    rdx,[rip+0x1eef]        # 0x140008610
   140006721:	cmovne rdx,rax
   140006725:	mov    BYTE PTR [rdi],bl
   140006727:	cmp    BYTE PTR [rdx],bl
   140006729:	je     0x14000673a
   14000672b:	or     rax,0xffffffffffffffff
   14000672f:	inc    rax
   140006732:	cmp    BYTE PTR [rdx+rax*1],bl
   140006735:	jne    0x14000672f
   140006737:	mov    rbx,rax
   14000673a:	mov    r8,rbx
   14000673d:	mov    rcx,rdi
   140006740:	call   0x140006444
   140006745:	mov    rbx,QWORD PTR [rsp+0x40]
   14000674a:	mov    rax,rdi
   14000674d:	add    rsp,0x30
   140006751:	pop    rdi
   140006752:	ret    
   140006753:	int3   
   140006754:	int3   
   140006755:	int3   
   140006756:	int3   
   140006757:	int3   
   140006758:	int3   
   140006759:	int3   
   14000675a:	int3   
   14000675b:	int3   
   14000675c:	int3   
   14000675d:	int3   
   14000675e:	int3   
   14000675f:	int3   
   140006760:	rex push rbx
   140006762:	sub    rsp,0x30
   140006766:	xor    eax,eax
   140006768:	mov    rbx,rdx
   14000676b:	mov    DWORD PTR [rsp+0x20],eax
   14000676f:	cmp    r8d,0x1
   140006773:	jne    0x140006798
   140006775:	mov    QWORD PTR [rdx+0x18],0xf
   14000677d:	lea    r8d,[rax+0x15]
   140006781:	mov    QWORD PTR [rdx+0x10],rax
   140006785:	mov    rcx,rbx
   140006788:	mov    BYTE PTR [rdx],al
   14000678a:	lea    rdx,[rip+0x1ecf]        # 0x140008660
   140006791:	call   0x140006444
   140006796:	jmp    0x14000679d
   140006798:	call   0x1400066f0
   14000679d:	mov    rax,rbx
   1400067a0:	add    rsp,0x30
   1400067a4:	pop    rbx
   1400067a5:	ret    
   1400067a6:	int3   
   1400067a7:	int3   
   1400067a8:	int3   
   1400067a9:	int3   
   1400067aa:	int3   
   1400067ab:	int3   
   1400067ac:	int3   
   1400067ad:	int3   
   1400067ae:	int3   
   1400067af:	int3   
   1400067b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400067b5:	push   rdi
   1400067b6:	sub    rsp,0x30
   1400067ba:	xor    ebx,ebx
   1400067bc:	mov    ecx,r8d
   1400067bf:	mov    DWORD PTR [rsp+0x20],ebx
   1400067c3:	mov    rdi,rdx
   1400067c6:	call   0x140006880
   1400067cb:	test   rax,rax
   1400067ce:	mov    QWORD PTR [rdi+0x18],0xf
   1400067d6:	mov    QWORD PTR [rdi+0x10],rbx
   1400067da:	lea    rdx,[rip+0x1e2f]        # 0x140008610
   1400067e1:	cmovne rdx,rax
   1400067e5:	mov    BYTE PTR [rdi],bl
   1400067e7:	cmp    BYTE PTR [rdx],bl
   1400067e9:	je     0x1400067fa
   1400067eb:	or     rax,0xffffffffffffffff
   1400067ef:	inc    rax
   1400067f2:	cmp    BYTE PTR [rdx+rax*1],bl
   1400067f5:	jne    0x1400067ef
   1400067f7:	mov    rbx,rax
   1400067fa:	mov    r8,rbx
   1400067fd:	mov    rcx,rdi
   140006800:	call   0x140006444
   140006805:	mov    rbx,QWORD PTR [rsp+0x40]
   14000680a:	mov    rax,rdi
   14000680d:	add    rsp,0x30
   140006811:	pop    rdi
   140006812:	ret    
   140006813:	int3   
   140006814:	int3   
   140006815:	int3   
   140006816:	int3   
   140006817:	int3   
   140006818:	int3   
   140006819:	int3   
   14000681a:	int3   
   14000681b:	int3   
   14000681c:	int3   
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	lea    rax,[rip+0x1de1]        # 0x140008608
   140006827:	ret    
   140006828:	int3   
   140006829:	int3   
   14000682a:	int3   
   14000682b:	int3   
   14000682c:	int3   
   14000682d:	int3   
   14000682e:	int3   
   14000682f:	int3   
   140006830:	lea    rax,[rip+0x1e19]        # 0x140008650
   140006837:	ret    
   140006838:	int3   
   140006839:	int3   
   14000683a:	int3   
   14000683b:	int3   
   14000683c:	int3   
   14000683d:	int3   
   14000683e:	int3   
   14000683f:	int3   
   140006840:	lea    rax,[rip+0x1e61]        # 0x1400086a8
   140006847:	ret    
   140006848:	int3   
   140006849:	int3   
   14000684a:	int3   
   14000684b:	int3   
   14000684c:	int3   
   14000684d:	int3   
   14000684e:	int3   
   14000684f:	int3   
   140006850:	cmp    QWORD PTR [rip+0x2780],0x0        # 0x140008fd8
   140006858:	lea    rax,[rip+0x2771]        # 0x140008fd0
   14000685f:	je     0x140006870
   140006861:	cmp    DWORD PTR [rax],ecx
   140006863:	je     0x140006873
   140006865:	add    rax,0x10
   140006869:	cmp    QWORD PTR [rax+0x8],0x0
   14000686e:	jne    0x140006861
   140006870:	xor    eax,eax
   140006872:	ret    
   140006873:	mov    rax,QWORD PTR [rax+0x8]
   140006877:	ret    
   140006878:	int3   
   140006879:	int3   
   14000687a:	int3   
   14000687b:	int3   
   14000687c:	int3   
   14000687d:	int3   
   14000687e:	int3   
   14000687f:	int3   
   140006880:	cmp    QWORD PTR [rip+0x1e60],0x0        # 0x1400086e8
   140006888:	lea    rax,[rip+0x1e51]        # 0x1400086e0
   14000688f:	je     0x1400068a0
   140006891:	cmp    DWORD PTR [rax],ecx
   140006893:	je     0x1400068a3
   140006895:	add    rax,0x10
   140006899:	cmp    QWORD PTR [rax+0x8],0x0
   14000689e:	jne    0x140006891
   1400068a0:	xor    eax,eax
   1400068a2:	ret    
   1400068a3:	mov    rax,QWORD PTR [rax+0x8]
   1400068a7:	ret    
   1400068a8:	int3   
   1400068a9:	int3   
   1400068aa:	int3   
   1400068ab:	int3   
   1400068ac:	int3   
   1400068ad:	int3   
   1400068ae:	jmp    QWORD PTR [rip+0x1a2c]        # 0x1400082e0
   1400068b4:	int3   
   1400068b5:	int3   
   1400068b6:	int3   
   1400068b7:	int3   
   1400068b8:	int3   
   1400068b9:	int3   
   1400068ba:	int3   
   1400068bb:	int3   
   1400068bc:	int3   
   1400068bd:	int3   
   1400068be:	int3   
   1400068bf:	int3   
   1400068c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400068c5:	push   rdi
   1400068c6:	sub    rsp,0x20
   1400068ca:	mov    ebx,edx
   1400068cc:	mov    rdi,rcx
   1400068cf:	call   QWORD PTR [rip+0x1a83]        # 0x140008358
   1400068d5:	test   bl,0x1
   1400068d8:	je     0x1400068e2
   1400068da:	mov    rcx,rdi
   1400068dd:	call   0x1400068ae
   1400068e2:	mov    rax,rdi
   1400068e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400068ea:	add    rsp,0x20
   1400068ee:	pop    rdi
   1400068ef:	ret    
   1400068f0:	int3   
   1400068f1:	int3   
   1400068f2:	int3   
   1400068f3:	int3   
   1400068f4:	int3   
   1400068f5:	int3   
   1400068f6:	jmp    QWORD PTR [rip+0x1a04]        # 0x140008300
   1400068fc:	int3   
   1400068fd:	int3   
   1400068fe:	int3   
   1400068ff:	int3   
   140006900:	int3   
   140006901:	int3   
   140006902:	int3   
   140006903:	int3   
   140006904:	int3   
   140006905:	int3   
   140006906:	int3   
   140006907:	int3   
   140006908:	int3   
   140006909:	int3   
   14000690a:	int3   
   14000690b:	int3   
   14000690c:	int3   
   14000690d:	int3   
   14000690e:	int3   
   14000690f:	int3   
   140006910:	jmp    QWORD PTR [rip+0x19f2]        # 0x140008308
   140006916:	int3   
   140006917:	int3   
   140006918:	int3   
   140006919:	int3   
   14000691a:	int3   
   14000691b:	int3   
   14000691c:	jmp    QWORD PTR [rip+0x19ee]        # 0x140008310
   140006922:	int3   
   140006923:	int3   
   140006924:	int3   
   140006925:	int3   
   140006926:	int3   
   140006927:	int3   
   140006928:	jmp    QWORD PTR [rip+0x19ea]        # 0x140008318
   14000692e:	int3   
   14000692f:	int3   
   140006930:	int3   
   140006931:	int3   
   140006932:	int3   
   140006933:	int3   
   140006934:	jmp    QWORD PTR [rip+0x19e6]        # 0x140008320
   14000693a:	int3   
   14000693b:	int3   
   14000693c:	int3   
   14000693d:	int3   
   14000693e:	int3   
   14000693f:	int3   
   140006940:	jmp    QWORD PTR [rip+0x19e2]        # 0x140008328
   140006946:	int3   
   140006947:	int3   
   140006948:	int3   
   140006949:	int3   
   14000694a:	int3   
   14000694b:	int3   
   14000694c:	jmp    QWORD PTR [rip+0x19de]        # 0x140008330
   140006952:	int3   
   140006953:	int3   
   140006954:	int3   
   140006955:	int3   
   140006956:	int3   
   140006957:	int3   
   140006958:	int3   
   140006959:	int3   
   14000695a:	int3   
   14000695b:	int3   
   14000695c:	int3   
   14000695d:	int3   
   14000695e:	int3   
   14000695f:	int3   
   140006960:	jmp    QWORD PTR [rip+0x19d2]        # 0x140008338
   140006966:	int3   
   140006967:	int3   
   140006968:	int3   
   140006969:	int3   
   14000696a:	int3   
   14000696b:	int3   
   14000696c:	jmp    QWORD PTR [rip+0x19ce]        # 0x140008340
   140006972:	int3   
   140006973:	int3   
   140006974:	int3   
   140006975:	int3   
   140006976:	int3   
   140006977:	int3   
   140006978:	jmp    QWORD PTR [rip+0x19ca]        # 0x140008348
   14000697e:	int3   
   14000697f:	int3   
   140006980:	int3   
   140006981:	int3   
   140006982:	int3   
   140006983:	int3   
   140006984:	jmp    QWORD PTR [rip+0x19c6]        # 0x140008350
   14000698a:	int3   
   14000698b:	int3   
   14000698c:	int3   
   14000698d:	int3   
   14000698e:	int3   
   14000698f:	int3   
   140006990:	sub    rsp,0x28
   140006994:	mov    r8,QWORD PTR [r9+0x38]
   140006998:	mov    rcx,rdx
   14000699b:	mov    rdx,r9
   14000699e:	call   0x1400069b4
   1400069a3:	mov    eax,0x1
   1400069a8:	add    rsp,0x28
   1400069ac:	ret    
   1400069ad:	int3   
   1400069ae:	int3   
   1400069af:	int3   
   1400069b0:	int3   
   1400069b1:	int3   
   1400069b2:	int3   
   1400069b3:	int3   
   1400069b4:	rex push rbx
   1400069b6:	sub    rsp,0x20
   1400069ba:	mov    r11d,DWORD PTR [r8]
   1400069bd:	mov    rbx,rdx
   1400069c0:	and    r11d,0xfffffff8
   1400069c4:	mov    r9,rcx
   1400069c7:	test   BYTE PTR [r8],0x4
   1400069cb:	mov    r10,rcx
   1400069ce:	je     0x1400069e3
   1400069d0:	mov    eax,DWORD PTR [r8+0x8]
   1400069d4:	movsxd r10,DWORD PTR [r8+0x4]
   1400069d8:	neg    eax
   1400069da:	add    r10,rcx
   1400069dd:	movsxd rcx,eax
   1400069e0:	and    r10,rcx
   1400069e3:	movsxd rax,r11d
   1400069e6:	mov    rdx,QWORD PTR [rax+r10*1]
   1400069ea:	mov    rax,QWORD PTR [rbx+0x10]
   1400069ee:	mov    ecx,DWORD PTR [rax+0x8]
   1400069f1:	add    rcx,QWORD PTR [rbx+0x8]
   1400069f5:	test   BYTE PTR [rcx+0x3],0xf
   1400069f9:	je     0x140006a07
   1400069fb:	movzx  eax,BYTE PTR [rcx+0x3]
   1400069ff:	and    eax,0xfffffff0
   140006a02:	cdqe   
   140006a04:	add    r9,rax
   140006a07:	xor    r9,rdx
   140006a0a:	mov    rcx,r9
   140006a0d:	add    rsp,0x20
   140006a11:	pop    rbx
   140006a12:	jmp    0x140005950
   140006a17:	int3   
   140006a18:	int3   
   140006a19:	int3   
   140006a1a:	int3   
   140006a1b:	int3   
   140006a1c:	int3   
   140006a1d:	int3   
   140006a1e:	int3   
   140006a1f:	int3   
   140006a20:	int3   
   140006a21:	int3   
   140006a22:	int3   
   140006a23:	int3   
   140006a24:	int3   
   140006a25:	int3   
   140006a26:	jmp    QWORD PTR [rip+0x196c]        # 0x140008398
   140006a2c:	int3   
   140006a2d:	int3   
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	int3   
   140006a31:	int3   
   140006a32:	int3   
   140006a33:	int3   
   140006a34:	int3   
   140006a35:	int3   
   140006a36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006a40:	jmp    rax
   140006a42:	int3   
   140006a43:	int3   
   140006a44:	int3   
   140006a45:	int3   
   140006a46:	int3   
   140006a47:	int3   
   140006a48:	int3   
   140006a49:	int3   
   140006a4a:	int3   
   140006a4b:	int3   
   140006a4c:	int3   
   140006a4d:	int3   
   140006a4e:	int3   
   140006a4f:	int3   
   140006a50:	int3   
   140006a51:	int3   
   140006a52:	int3   
   140006a53:	int3   
   140006a54:	int3   
   140006a55:	int3   
   140006a56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006a60:	sub    rsp,0x10
   140006a64:	mov    QWORD PTR [rsp],r10
   140006a68:	mov    QWORD PTR [rsp+0x8],r11
   140006a6d:	xor    r11,r11
   140006a70:	lea    r10,[rsp+0x18]
   140006a75:	sub    r10,rax
   140006a78:	cmovb  r10,r11
   140006a7c:	mov    r11,QWORD PTR gs:0x10
   140006a85:	cmp    r10,r11
   140006a88:	jae    0x140006a9f
   140006a8a:	and    r10w,0xf000
   140006a90:	lea    r11,[r11-0x1000]
   140006a97:	test   BYTE PTR [r11],r11b
   140006a9a:	cmp    r10,r11
   140006a9d:	jne    0x140006a90
   140006a9f:	mov    r10,QWORD PTR [rsp]
   140006aa3:	mov    r11,QWORD PTR [rsp+0x8]
   140006aa8:	add    rsp,0x10
   140006aac:	ret    
   140006aad:	int3   
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	int3   
   140006ab1:	int3   
   140006ab2:	int3   
   140006ab3:	int3   
   140006ab4:	int3   
   140006ab5:	int3   
   140006ab6:	mov    rcx,QWORD PTR [rdx+0x50]
   140006abd:	rex.W jmp QWORD PTR [rip+0x181c]        # 0x1400082e0
   140006ac4:	int3   
   140006ac5:	int3   
   140006ac6:	int3   
   140006ac7:	int3   
   140006ac8:	int3   
   140006ac9:	int3   
   140006aca:	mov    QWORD PTR [rsp+0x10],rdx
   140006acf:	push   rbp
   140006ad0:	sub    rsp,0x20
   140006ad4:	mov    rbp,rdx
   140006ad7:	mov    rax,QWORD PTR [rbp+0x28]
   140006adb:	mov    ecx,DWORD PTR [rax+0x4]
   140006ade:	mov    DWORD PTR [rbp+0x40],ecx
   140006ae1:	lea    rax,[rip+0xffffffffffffcb5e]        # 0x140003646
   140006ae8:	add    rsp,0x20
   140006aec:	pop    rbp
   140006aed:	ret    
   140006aee:	int3   
   140006aef:	mov    QWORD PTR [rsp+0x10],rdx
   140006af4:	push   rbp
   140006af5:	sub    rsp,0x20
   140006af9:	mov    rbp,rdx
   140006afc:	lea    rax,[rip+0xffffffffffffcb49]        # 0x14000364c
   140006b03:	add    rsp,0x20
   140006b07:	pop    rbp
   140006b08:	ret    
   140006b09:	int3   
   140006b0a:	mov    QWORD PTR [rsp+0x10],rdx
   140006b0f:	push   rbx
   140006b10:	push   rbp
   140006b11:	sub    rsp,0x28
   140006b15:	mov    rbp,rdx
   140006b18:	mov    rbx,QWORD PTR [rip+0x7cd1]        # 0x14000e7f0
   140006b1f:	test   rbx,rbx
   140006b22:	je     0x140006b38
   140006b24:	mov    rcx,rbx
   140006b27:	call   QWORD PTR [rip+0x1903]        # 0x140008430
   140006b2d:	call   rbx
   140006b2f:	test   eax,eax
   140006b31:	jns    0x140006b38
   140006b33:	mov    DWORD PTR [rbp+0x40],eax
   140006b36:	jmp    0x140006b58
   140006b38:	mov    rcx,QWORD PTR [rbp+0x38]
   140006b3c:	cmp    BYTE PTR [rip+0x7541],0x0        # 0x14000e084
   140006b43:	je     0x140006b51
   140006b45:	mov    r9d,0x8007023e
   140006b4b:	call   0x140003bfc
   140006b50:	int3   
   140006b51:	mov    DWORD PTR [rbp+0x40],0x8007023e
   140006b58:	lea    rax,[rip+0xffffffffffffcaf4]        # 0x140003653
   140006b5f:	add    rsp,0x28
   140006b63:	pop    rbp
   140006b64:	pop    rbx
   140006b65:	ret    
   140006b66:	int3   
   140006b67:	int3   
   140006b68:	int3   
   140006b69:	int3   
   140006b6a:	int3   
   140006b6b:	int3   
   140006b6c:	int3   
   140006b6d:	lea    rcx,[rdx+0x38]
   140006b74:	jmp    0x140004180
   140006b79:	lea    rcx,[rdx+0x48]
   140006b80:	jmp    0x140004180
   140006b85:	lea    rcx,[rdx+0x40]
   140006b8c:	jmp    0x140004180
   140006b91:	lea    rcx,[rdx+0x58]
   140006b98:	jmp    0x140004180
   140006b9d:	lea    rcx,[rdx+0x50]
   140006ba4:	jmp    0x140004180
   140006ba9:	lea    rcx,[rdx+0x60]
   140006bb0:	jmp    0x140002bc8
   140006bb5:	lea    rcx,[rdx+0xd0]
   140006bbc:	jmp    0x140002bc8
   140006bc1:	lea    rcx,[rdx+0xb8]
   140006bc8:	jmp    0x140002bc8
   140006bcd:	lea    rcx,[rdx+0xa0]
   140006bd4:	jmp    0x140002bc8
   140006bd9:	lea    rcx,[rdx+0x180]
   140006be0:	jmp    0x140002b5c
   140006be5:	lea    rcx,[rdx+0x180]
   140006bec:	jmp    0x140002b5c
   140006bf1:	lea    rcx,[rdx+0x180]
   140006bf8:	jmp    0x140002b5c
   140006bfd:	lea    rcx,[rdx+0x60]
   140006c04:	jmp    0x140002bc8
   140006c09:	mov    QWORD PTR [rsp+0x10],rdx
   140006c0e:	push   rbp
   140006c0f:	sub    rsp,0x30
   140006c13:	mov    rbp,rdx
   140006c16:	call   0x140003614
   140006c1b:	mov    DWORD PTR [rbp+0x180],eax
   140006c21:	lea    rax,[rip+0xffffffffffffd479]        # 0x1400040a1
   140006c28:	add    rsp,0x30
   140006c2c:	pop    rbp
   140006c2d:	ret    
   140006c2e:	int3   
   140006c2f:	int3   
   140006c30:	int3   
   140006c31:	int3   
   140006c32:	int3   
   140006c33:	int3   
   140006c34:	int3   
   140006c35:	lea    rcx,[rdx+0x1b0]
   140006c3c:	jmp    0x140004180
   140006c41:	lea    rcx,[rdx+0x1c0]
   140006c48:	jmp    0x140004180
   140006c4d:	lea    rcx,[rdx+0x70]
   140006c54:	jmp    0x140004180
   140006c59:	lea    rcx,[rdx+0x68]
   140006c60:	jmp    0x140004180
   140006c65:	lea    rcx,[rdx+0x60]
   140006c6c:	jmp    0x140004180
   140006c71:	lea    rcx,[rdx+0x58]
   140006c78:	jmp    0x140004180
   140006c7d:	lea    rcx,[rdx+0x50]
   140006c84:	jmp    0x140004180
   140006c89:	lea    rcx,[rdx+0x90]
   140006c90:	jmp    0x140004180
   140006c95:	lea    rcx,[rdx+0x98]
   140006c9c:	jmp    0x140002bc8
   140006ca1:	lea    rcx,[rdx+0xb0]
   140006ca8:	jmp    0x140002bc8
   140006cad:	lea    rcx,[rdx+0x130]
   140006cb4:	jmp    0x140002bc8
   140006cb9:	lea    rcx,[rdx+0x78]
   140006cc0:	jmp    0x140002bc8
   140006cc5:	lea    rcx,[rdx+0x1c8]
   140006ccc:	jmp    0x140002b5c
   140006cd1:	lea    rcx,[rdx+0x1c8]
   140006cd8:	jmp    0x140002b5c
   140006cdd:	lea    rcx,[rdx+0x1c8]
   140006ce4:	jmp    0x140002b5c
   140006ce9:	lea    rcx,[rdx+0x1c8]
   140006cf0:	jmp    0x140002b5c
   140006cf5:	lea    rcx,[rdx+0x78]
   140006cfc:	jmp    0x140002bc8
   140006d01:	lea    rcx,[rdx+0xb0]
   140006d08:	jmp    0x140002bc8
   140006d0d:	lea    rcx,[rdx+0x98]
   140006d14:	jmp    0x140002bc8
   140006d19:	lea    rcx,[rdx+0x1c8]
   140006d20:	jmp    0x140002b5c
   140006d25:	mov    QWORD PTR [rsp+0x10],rdx
   140006d2a:	push   rbp
   140006d2b:	sub    rsp,0x50
   140006d2f:	mov    rbp,rdx
   140006d32:	call   0x140003614
   140006d37:	mov    DWORD PTR [rbp+0x1c8],eax
   140006d3d:	lea    rax,[rip+0xffffffffffffda8b]        # 0x1400047cf
   140006d44:	add    rsp,0x50
   140006d48:	pop    rbp
   140006d49:	ret    
   140006d4a:	int3   
   140006d4b:	int3   
   140006d4c:	int3   
   140006d4d:	int3   
   140006d4e:	int3   
   140006d4f:	int3   
   140006d50:	int3   
   140006d51:	lea    rcx,[rdx+0x38]
   140006d58:	jmp    0x140004180
   140006d5d:	lea    rcx,[rdx+0x30]
   140006d64:	jmp    0x140004180
   140006d69:	lea    rcx,[rdx+0x178]
   140006d70:	jmp    0x140004180
   140006d75:	lea    rcx,[rdx+0x58]
   140006d7c:	jmp    0x140002bc8
   140006d81:	lea    rcx,[rdx+0x40]
   140006d88:	jmp    0x140002bc8
   140006d8d:	lea    rcx,[rdx+0x70]
   140006d94:	jmp    0x140002bc8
   140006d99:	lea    rcx,[rdx+0x88]
   140006da0:	jmp    0x140002bc8
   140006da5:	lea    rcx,[rdx+0x160]
   140006dac:	jmp    0x140002b5c
   140006db1:	lea    rcx,[rdx+0x160]
   140006db8:	jmp    0x140002b5c
   140006dbd:	lea    rcx,[rdx+0x160]
   140006dc4:	jmp    0x140002b5c
   140006dc9:	mov    QWORD PTR [rsp+0x10],rdx
   140006dce:	push   rbp
   140006dcf:	sub    rsp,0x30
   140006dd3:	mov    rbp,rdx
   140006dd6:	call   0x140003614
   140006ddb:	mov    DWORD PTR [rbp+0x160],eax
   140006de1:	lea    rax,[rip+0xffffffffffffde4a]        # 0x140004c32
   140006de8:	add    rsp,0x30
   140006dec:	pop    rbp
   140006ded:	ret    
   140006dee:	int3   
   140006def:	int3   
   140006df0:	int3   
   140006df1:	int3   
   140006df2:	int3   
   140006df3:	int3   
   140006df4:	int3   
   140006df5:	lea    rcx,[rdx+0x30]
   140006dfc:	jmp    0x140004180
   140006e01:	lea    rcx,[rdx+0x38]
   140006e08:	jmp    0x140004180
   140006e0d:	lea    rcx,[rdx+0x188]
   140006e14:	jmp    0x140004180
   140006e19:	lea    rcx,[rdx+0x40]
   140006e20:	jmp    0x140004180
   140006e25:	lea    rcx,[rdx+0x60]
   140006e2c:	jmp    0x140002bc8
   140006e31:	lea    rcx,[rdx+0x90]
   140006e38:	jmp    0x140002bc8
   140006e3d:	lea    rcx,[rdx+0x48]
   140006e44:	jmp    0x140002bc8
   140006e49:	lea    rcx,[rdx+0x78]
   140006e50:	jmp    0x140002bc8
   140006e55:	lea    rcx,[rdx+0x170]
   140006e5c:	jmp    0x140002b5c
   140006e61:	lea    rcx,[rdx+0x170]
   140006e68:	jmp    0x140002b5c
   140006e6d:	lea    rcx,[rdx+0x170]
   140006e74:	jmp    0x140002b5c
   140006e79:	mov    QWORD PTR [rsp+0x10],rdx
   140006e7e:	push   rbp
   140006e7f:	sub    rsp,0x30
   140006e83:	mov    rbp,rdx
   140006e86:	call   0x140003614
   140006e8b:	mov    DWORD PTR [rbp+0x170],eax
   140006e91:	lea    rax,[rip+0xffffffffffffe170]        # 0x140005008
   140006e98:	add    rsp,0x30
   140006e9c:	pop    rbp
   140006e9d:	ret    
   140006e9e:	int3   
   140006e9f:	int3   
   140006ea0:	int3   
   140006ea1:	int3   
   140006ea2:	int3   
   140006ea3:	int3   
   140006ea4:	int3   
   140006ea5:	rex push rbp
   140006ea7:	sub    rsp,0x20
   140006eab:	mov    rbp,rdx
   140006eae:	mov    rax,QWORD PTR [rcx]
   140006eb1:	mov    rdx,rcx
   140006eb4:	mov    ecx,DWORD PTR [rax]
   140006eb6:	call   0x1400059de
   140006ebb:	nop
   140006ebc:	add    rsp,0x20
   140006ec0:	pop    rbp
   140006ec1:	ret    
   140006ec2:	int3   
   140006ec3:	int3   
   140006ec4:	int3   
   140006ec5:	int3   
   140006ec6:	int3   
   140006ec7:	int3   
   140006ec8:	int3   
   140006ec9:	int3   
   140006eca:	int3   
   140006ecb:	int3   
   140006ecc:	int3   
   140006ecd:	int3   
   140006ece:	int3   
   140006ecf:	int3   
   140006ed0:	rex push rbp
   140006ed2:	sub    rsp,0x20
   140006ed6:	mov    rbp,rdx
   140006ed9:	mov    rax,QWORD PTR [rcx]
   140006edc:	xor    ecx,ecx
   140006ede:	cmp    DWORD PTR [rax],0xc0000005
   140006ee4:	sete   cl
   140006ee7:	mov    eax,ecx
   140006ee9:	add    rsp,0x20
   140006eed:	pop    rbp
   140006eee:	ret    
   140006eef:	int3   
   140006ef0:	int3   
   140006ef1:	int3   
   140006ef2:	int3   
   140006ef3:	int3   
   140006ef4:	int3   
   140006ef5:	int3   
   140006ef6:	rex push rbp
   140006ef8:	sub    rsp,0x20
   140006efc:	mov    rbp,rdx
   140006eff:	mov    ecx,0x8
   140006f04:	call   0x140005f24
   140006f09:	nop
   140006f0a:	add    rsp,0x20
   140006f0e:	pop    rbp
   140006f0f:	ret    
   140006f10:	int3   
   140006f11:	int3   
   140006f12:	int3   
   140006f13:	int3   
   140006f14:	int3   
   140006f15:	int3   
   140006f16:	int3   
   140006f17:	mov    QWORD PTR [rsp+0x10],rdx
   140006f1c:	push   rbp
   140006f1d:	sub    rsp,0x20
   140006f21:	mov    rbp,rdx
   140006f24:	mov    rcx,QWORD PTR [rbp+0x68]
   140006f28:	mov    QWORD PTR [rbp+0x68],rcx
   140006f2c:	xor    eax,eax
   140006f2e:	add    rcx,0x1
   140006f32:	je     0x140006f49
   140006f34:	cmp    rcx,0xffffffffffffffff
   140006f38:	ja     0x140006f44
   140006f3a:	call   0x140005f48
   140006f3f:	test   rax,rax
   140006f42:	jne    0x140006f49
   140006f44:	call   0x140006280
   140006f49:	mov    QWORD PTR [rbp+0x78],rax
   140006f4d:	lea    rax,[rip+0xfffffffffffff25a]        # 0x1400061ae
   140006f54:	add    rsp,0x20
   140006f58:	pop    rbp
   140006f59:	ret    
   140006f5a:	int3   
   140006f5b:	mov    QWORD PTR [rsp+0x10],rdx
   140006f60:	push   rbp
   140006f61:	sub    rsp,0x20
   140006f65:	mov    rbp,rdx
   140006f68:	xor    r8d,r8d
   140006f6b:	mov    dl,0x1
   140006f6d:	mov    rcx,QWORD PTR [rbp+0x60]
   140006f71:	call   0x140006220
   140006f76:	xor    edx,edx
   140006f78:	xor    ecx,ecx
   140006f7a:	call   0x14000696c
   140006f7f:	nop
   140006f80:	int3   
   140006f81:	int3   
   140006f82:	int3   
   140006f83:	int3   
   140006f84:	int3   
   140006f85:	int3   
   140006f86:	int3   
   140006f87:	int3   
   140006f88:	int3   
   140006f89:	int3   
   140006f8a:	int3   
   140006f8b:	int3   
   140006f8c:	int3   
   140006f8d:	int3   
   140006f8e:	int3   
   140006f8f:	int3   
   140006f90:	mov    QWORD PTR [rsp+0x8],rbx
   140006f95:	push   rdi
   140006f96:	sub    rsp,0x20
   140006f9a:	lea    rbx,[rip+0x78df]        # 0x14000e880
   140006fa1:	mov    rdi,QWORD PTR [rbx]
   140006fa4:	jmp    0x140006fb3
   140006fa6:	mov    rcx,rdi
   140006fa9:	mov    rdi,QWORD PTR [rdi+0x10]
   140006fad:	call   QWORD PTR [rip+0x1335]        # 0x1400082e8
   140006fb3:	test   rdi,rdi
   140006fb6:	jne    0x140006fa6
   140006fb8:	mov    QWORD PTR [rbx],rdi
   140006fbb:	lea    rax,[rip+0x795e]        # 0x14000e920
   140006fc2:	add    rbx,0x8
   140006fc6:	cmp    rbx,rax
   140006fc9:	jne    0x140006fa1
   140006fcb:	mov    rbx,QWORD PTR [rsp+0x30]
   140006fd0:	add    rsp,0x20
   140006fd4:	pop    rdi
   140006fd5:	ret    
   140006fd6:	int3   
   140006fd7:	int3   
   140006fd8:	int3   
   140006fd9:	int3   
   140006fda:	int3   
   140006fdb:	int3   
   140006fdc:	int3   
   140006fdd:	int3   
   140006fde:	int3   
   140006fdf:	int3   
   140006fe0:	lea    rax,[rip+0x15c1]        # 0x1400085a8
   140006fe7:	mov    QWORD PTR [rip+0x7032],rax        # 0x14000e020
   140006fee:	ret    
   140006fef:	int3   
   140006ff0:	int3   
   140006ff1:	int3   
   140006ff2:	int3   
   140006ff3:	int3   
   140006ff4:	int3   
   140006ff5:	int3   
   140006ff6:	int3   
   140006ff7:	int3   
   140006ff8:	int3   
   140006ff9:	int3   
   140006ffa:	int3   
   140006ffb:	int3   
   140006ffc:	int3   
   140006ffd:	int3   
   140006ffe:	int3   
   140006fff:	int3   
   140007000:	lea    rax,[rip+0x15a1]        # 0x1400085a8
   140007007:	mov    QWORD PTR [rip+0x701a],rax        # 0x14000e028
   14000700e:	ret    
   14000700f:	int3   
   140007010:	int3   
   140007011:	int3   
   140007012:	int3   
   140007013:	int3   
   140007014:	int3   
   140007015:	int3   
   140007016:	int3   
   140007017:	int3   
   140007018:	int3   
   140007019:	int3   
   14000701a:	int3   
   14000701b:	int3   
   14000701c:	int3   
   14000701d:	int3   
   14000701e:	int3   
   14000701f:	int3   
   140007020:	lea    rax,[rip+0x1581]        # 0x1400085a8
   140007027:	mov    QWORD PTR [rip+0x7002],rax        # 0x14000e030
   14000702e:	ret    

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	xor    dh,dl
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	(bad)  
   140008009:	(bad)  
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	add    BYTE PTR [rax],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	(bad)  
   140008011:	(bad)  
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	and    dl,dh
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	rex.WX (bad) 
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	push   rsi
   140008029:	(bad)  
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	data16 (bad) 
   140008032:	add    BYTE PTR [rax],al
   140008034:	add    BYTE PTR [rax],al
   140008036:	add    BYTE PTR [rax],al
   140008038:	je     0x140008010
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	out    0xd5,al
	...
   14000804e:	add    BYTE PTR [rax],al
   140008050:	add    DWORD PTR [rax],eax
   140008052:	add    BYTE PTR [rax],al
   140008054:	add    BYTE PTR [rax],al
   140008056:	add    BYTE PTR [rax+0xb],al
   14000805c:	add    BYTE PTR [rax],al
   14000805e:	add    BYTE PTR [rax+0x9],al
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    BYTE PTR [rax+0x3],al
   14000806c:	add    BYTE PTR [rax],al
   14000806e:	add    BYTE PTR [rax+0xa],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax+0x0],al
   14000807c:	add    BYTE PTR [rax],al
   14000807e:	add    BYTE PTR [rax],al
   140008080:	(bad)  
   140008081:	add    BYTE PTR [rax],al
   140008083:	add    BYTE PTR [rax],al
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    BYTE PTR [rdx],0x0
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax+0x9],al
   140008094:	add    BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax+0x8],al
   14000809c:	add    BYTE PTR [rax],al
   14000809e:	add    BYTE PTR [rax+0x0],al
   1400080a4:	add    BYTE PTR [rax],al
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	push   rsp
   1400080a9:	fadd   DWORD PTR [rax]
   1400080ab:	add    BYTE PTR [rax],al
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    dl,bl
   1400080b1:	rol    DWORD PTR [rax],1
   1400080b3:	add    BYTE PTR [rax],al
   1400080b5:	add    BYTE PTR [rax],al
   1400080b7:	add    BYTE PTR [rsi+0xd1],al
	...
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    BYTE PTR [rax+0xd8],dl
	...
   1400080d5:	add    BYTE PTR [rax],al
   1400080d7:	add    BYTE PTR [rdx+0xd2],bh
   1400080dd:	add    BYTE PTR [rax],al
   1400080df:	add    BYTE PTR [rsi+0xd1],ah
   1400080e5:	add    BYTE PTR [rax],al
   1400080e7:	add    BYTE PTR [rsi+0xd3],bl
	...
   1400080f5:	add    BYTE PTR [rax],al
   1400080f7:	add    ah,cl
   1400080f9:	rol    DWORD PTR [rax],1
	...
   140008107:	add    BYTE PTR [rdx+rdx*8+0x0],ch
	...
   140008117:	add    dh,al
   140008119:	fadd   DWORD PTR [rax]
   14000811b:	add    BYTE PTR [rax],al
   14000811d:	add    BYTE PTR [rax],al
   14000811f:	add    al,bl
   140008121:	rol    BYTE PTR [rax],cl
   140008123:	add    BYTE PTR [rax],al
   140008125:	add    BYTE PTR [rax],al
   140008127:	add    BYTE PTR [rdx-0x28],bh
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	add    BYTE PTR [rax],al
   14000812e:	add    BYTE PTR [rax],al
   140008130:	push   0xd8
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    al,bl
   140008139:	fadd   DWORD PTR [rax]
	...
   140008147:	add    BYTE PTR [rax+rbx*8+0x0],dh
	...
   140008156:	add    BYTE PTR [rax],al
   140008158:	test   al,0xd2
   14000815a:	add    BYTE PTR [rax],al
   14000815c:	add    BYTE PTR [rax],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008161:	fadd   DWORD PTR [rax]
   140008163:	add    BYTE PTR [rax],al
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    BYTE PTR [rdx+0xd2],cl
   14000816d:	add    BYTE PTR [rax],al
   14000816f:	add    BYTE PTR [rsi],al
   140008171:	rol    DWORD PTR [rax],cl
   140008173:	add    BYTE PTR [rax],al
   140008175:	add    BYTE PTR [rax],al
   140008177:	add    BYTE PTR [rdx+0xd3],bh
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    dh,cl
   140008181:	rol    DWORD PTR [rax],cl
   140008183:	add    BYTE PTR [rax],al
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    BYTE PTR [rbx+rdx*8],bl
	...
   140008196:	add    BYTE PTR [rax],al
   140008198:	in     al,dx
   140008199:	rol    BYTE PTR [rax],cl
	...
   1400081a7:	add    dh,bh
   1400081a9:	rol    DWORD PTR [rax],1
   1400081ab:	add    BYTE PTR [rax],al
   1400081ad:	add    BYTE PTR [rax],al
   1400081af:	add    BYTE PTR [rsi],cl
   1400081b1:	rol    BYTE PTR [rax],cl
   1400081b3:	add    BYTE PTR [rax],al
   1400081b5:	add    BYTE PTR [rax],al
   1400081b7:	add    BYTE PTR [rax-0x2e],bh
   1400081ba:	add    BYTE PTR [rax],al
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	rex.W rol BYTE PTR [rax],cl
	...
   1400081cf:	add    BYTE PTR [rsi-0x2e],dl
	...
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	jo     0x1400081b5
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	add    BYTE PTR [rax],al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	mov    dl,bl
   1400081ea:	add    BYTE PTR [rax],al
   1400081ec:	add    BYTE PTR [rax],al
   1400081ee:	add    BYTE PTR [rax],al
   1400081f0:	pop    rsp
   1400081f1:	rol    DWORD PTR [rax],cl
	...
   1400081ff:	add    BYTE PTR [rsi+0xd1],dh
   140008205:	add    BYTE PTR [rax],al
   140008207:	add    BYTE PTR [rax+0xd2],ah
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rax+0xd1],bl
	...
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    BYTE PTR [rbx+rdx*8+0x0],cl
   140008223:	add    BYTE PTR [rax],al
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rax],ah
   140008229:	rol    BYTE PTR [rax],cl
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rdx],dh
   140008231:	rol    DWORD PTR [rax],cl
	...
   14000823f:	add    BYTE PTR [rax],dh
   140008241:	rol    BYTE PTR [rax],cl
	...
   14000824f:	add    ah,ch
   140008251:	rol    DWORD PTR [rax],1
   140008253:	add    BYTE PTR [rax],al
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    BYTE PTR [rax-0x2f],dh
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	(bad)  
   140008261:	rol    DWORD PTR [rax],1
   140008263:	add    BYTE PTR [rax],al
   140008265:	add    BYTE PTR [rax],al
   140008267:	add    BYTE PTR [rdx-0x2f],cl
	...
   140008276:	add    BYTE PTR [rax],al
   140008278:	(bad)  
   140008279:	rol    BYTE PTR [rax],1
   14000827b:	add    BYTE PTR [rax],al
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    BYTE PTR [rax+0xd0],dl
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rax+0xd0],cl
   14000828d:	add    BYTE PTR [rax],al
   14000828f:	add    BYTE PTR [rax+0xd0],al
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    BYTE PTR [rsi-0x30],ch
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	pop    rsi
   1400082a1:	rol    BYTE PTR [rax],1
   1400082a3:	add    BYTE PTR [rax],al
   1400082a5:	add    BYTE PTR [rax],al
   1400082a7:	add    BYTE PTR [rax],dh
   1400082a9:	rol    BYTE PTR [rax],1
   1400082ab:	add    BYTE PTR [rax],al
   1400082ad:	add    BYTE PTR [rax],al
   1400082af:	add    BYTE PTR [rax-0x2f],al
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	test   al,0xd0
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	mov    esp,0xd0
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    al,cl
   1400082c9:	rol    BYTE PTR [rax],1
   1400082cb:	add    BYTE PTR [rax],al
   1400082cd:	add    BYTE PTR [rax],al
   1400082cf:	add    al,ah
   1400082d1:	rol    BYTE PTR [rax],1
   1400082d3:	add    BYTE PTR [rax],al
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    dl,ch
   1400082d9:	rol    BYTE PTR [rax],1
   1400082db:	add    BYTE PTR [rax],al
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rax],ah
   1400082e1:	xlat   BYTE PTR ds:[rbx]
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    BYTE PTR [rax],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	xor    bh,dl
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	cmp    bh,dl
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	rex.X xlat BYTE PTR ds:[rbx]
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	add    BYTE PTR [rax],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	push   rax
   140008301:	xlat   BYTE PTR ds:[rbx]
   140008302:	add    BYTE PTR [rax],al
   140008304:	add    BYTE PTR [rax],al
   140008306:	add    BYTE PTR [rax],al
   140008308:	pop    rsp
   140008309:	xlat   BYTE PTR ds:[rbx]
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	add    BYTE PTR [rax],al
   14000830e:	add    BYTE PTR [rax],al
   140008310:	push   0xd7
   140008315:	add    BYTE PTR [rax],al
   140008317:	add    BYTE PTR [rdx-0x29],dh
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	xchg   edx,eax
   140008321:	xlat   BYTE PTR ds:[rbx]
   140008322:	add    BYTE PTR [rax],al
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	mov    dl,0xd7
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	add    BYTE PTR [rax],al
   14000832e:	add    BYTE PTR [rax],al
   140008330:	rcl    bh,1
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    BYTE PTR [rax],al
   140008336:	add    BYTE PTR [rax],al
   140008338:	call   0x140008414
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    BYTE PTR [rsi],al
   140008341:	fadd   DWORD PTR [rax]
   140008343:	add    BYTE PTR [rax],al
   140008345:	add    BYTE PTR [rax],al
   140008347:	add    BYTE PTR [rax+rbx*8],bl
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	add    BYTE PTR [rax],al
   14000834e:	add    BYTE PTR [rax],al
   140008350:	xor    bl,al
   140008352:	add    BYTE PTR [rax],al
   140008354:	add    BYTE PTR [rax],al
   140008356:	add    BYTE PTR [rax],al
   140008358:	cmp    al,0xd8
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	push   rax
   140008361:	rol    BYTE PTR [rax],1
   140008363:	add    BYTE PTR [rax],al
   140008365:	add    BYTE PTR [rax],al
   140008367:	add    BYTE PTR [rdx-0x30],al
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	add    BYTE PTR [rax],al
   14000836e:	add    BYTE PTR [rax],al
   140008370:	hlt    
   140008371:	rol    BYTE PTR [rax],1
   140008373:	add    BYTE PTR [rax],al
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rcx+rdx*8],cl
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	add    BYTE PTR [rax],al
   14000837e:	add    BYTE PTR [rax],al
   140008380:	and    cl,dl
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    BYTE PTR [rax],al
   140008386:	add    BYTE PTR [rax],al
   140008388:	xor    dl,cl
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	add    BYTE PTR [rax],al
   14000838e:	add    BYTE PTR [rax],al
   140008390:	sub    cl,dl
   140008392:	add    BYTE PTR [rax],al
   140008394:	add    BYTE PTR [rax],al
   140008396:	add    BYTE PTR [rax],al
   140008398:	rex.RX fld DWORD PTR [rax]
	...
   1400083a7:	add    BYTE PTR [rax],bh
   1400083a9:	add    BYTE PTR [rax],al
   1400083ab:	add    BYTE PTR [rax],al
   1400083ad:	add    BYTE PTR [rax],al
   1400083af:	adc    BYTE PTR [rsi],0x0
   1400083b2:	add    BYTE PTR [rax],al
   1400083b4:	add    BYTE PTR [rax],al
   1400083b6:	add    BYTE PTR [rax+0x33],al
   1400083bc:	add    BYTE PTR [rax],al
   1400083be:	add    BYTE PTR [rax+0x34],al
   1400083c4:	add    BYTE PTR [rax],al
   1400083c6:	add    BYTE PTR [rax+0x36],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax+0x26],al
   1400083d4:	add    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax+0x2c],al
   1400083dc:	add    BYTE PTR [rax],al
   1400083de:	add    BYTE PTR [rax+0x29],al
   1400083e4:	add    BYTE PTR [rax],al
   1400083e6:	add    BYTE PTR [rax+0x27],al
   1400083ec:	add    BYTE PTR [rax],al
   1400083ee:	add    BYTE PTR [rax+0x28],al
   1400083f4:	add    BYTE PTR [rax],al
   1400083f6:	add    BYTE PTR [rax+0x0],al
   1400083fc:	add    BYTE PTR [rax],al
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	ret    0xd6
   140008403:	add    BYTE PTR [rax],al
   140008405:	add    BYTE PTR [rax],al
   140008407:	add    al,bl
   140008409:	(bad)  
   14000840a:	add    BYTE PTR [rax],al
   14000840c:	add    BYTE PTR [rax],al
   14000840e:	add    BYTE PTR [rax],al
   140008410:	(bad)  
   140008411:	(bad)  
   140008412:	add    BYTE PTR [rax],al
   140008414:	add    BYTE PTR [rax],al
   140008416:	add    BYTE PTR [rax],al
   140008418:	add    al,0xd7
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	add    BYTE PTR [rax],al
   14000841e:	add    BYTE PTR [rax],al
   140008420:	mov    al,0xd6
	...
   14000842e:	add    BYTE PTR [rax],al
   140008430:	push   rax
   140008431:	pop    rbp
   140008432:	add    BYTE PTR [rax+0x1],al
   140008435:	add    BYTE PTR [rax],al
   140008437:	add    BYTE PTR [rax+0x6a],al
   14000843a:	add    BYTE PTR [rax+0x1],al
	...
   140008445:	add    BYTE PTR [rax],al
   140008447:	add    BYTE PTR [rax+0x1400056],al
   14000844d:	add    BYTE PTR [rax],al
   14000844f:	add    al,ah
   140008451:	adc    DWORD PTR [rax],eax
   140008453:	rex add DWORD PTR [rax],eax
   140008456:	add    BYTE PTR [rax],al
   140008458:	lock adc DWORD PTR [rax],eax
   14000845b:	rex add DWORD PTR [rax],eax
   14000845e:	add    BYTE PTR [rax],al
   140008460:	add    BYTE PTR [rdx],dl
   140008462:	add    BYTE PTR [rax+0x1],al
   140008465:	add    BYTE PTR [rax],al
   140008467:	add    BYTE PTR [rax+0x1400011],al
   14000846d:	add    BYTE PTR [rax],al
   14000846f:	add    BYTE PTR [rax+0x1400011],dh
	...
   140008485:	add    BYTE PTR [rax],al
   140008487:	add    BYTE PTR [rax+0x1400055],ah
   14000848d:	add    BYTE PTR [rax],al
   14000848f:	add    al,al
   140008491:	pop    rcx
   140008492:	add    BYTE PTR [rax+0x1],al
	...
   14000849d:	add    BYTE PTR [rax],al
   14000849f:	add    BYTE PTR [rax-0x7ffffff0],dh
   1400084a5:	adc    DWORD PTR [rax],eax
   1400084a7:	add    BYTE PTR [rax-0x1fffffef],dh
   1400084ad:	adc    DWORD PTR [rax],eax
   1400084af:	add    al,dh
   1400084b1:	adc    DWORD PTR [rax],eax
   1400084b3:	add    BYTE PTR [rax],al
   1400084b5:	adc    al,BYTE PTR [rax]
   1400084b7:	add    BYTE PTR [rax],ah
   1400084b9:	adc    al,BYTE PTR [rax]
   1400084bb:	add    BYTE PTR [rax],ah
   1400084bd:	(bad)  
   1400084be:	add    BYTE PTR [rax],al
   1400084c0:	rex (bad) 
   1400084c2:	add    BYTE PTR [rax],al
   1400084c4:	push   rax
   1400084c5:	xor    BYTE PTR [rax],al
   1400084c7:	add    BYTE PTR [rax+0x30000030],ah
   1400084cd:	push   rsp
   1400084ce:	add    BYTE PTR [rax],al
   1400084d0:	movabs al,ds:0xd000005680000055
   1400084d9:	push   rsi
   1400084da:	add    BYTE PTR [rax],al
   1400084dc:	sbb    BYTE PTR [rcx+0x0],0x0
   1400084e0:	rcr    BYTE PTR [rcx+0x0],0x0
   1400084e4:	(bad)  
   1400084e5:	pop    rsp
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	push   rax
   1400084e9:	pop    rbp
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	movabs al,ds:0xa00000607000005d
   1400084f5:	(bad)  
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	loopne 0x14000855a
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	push   rax
   1400084fd:	add    BYTE PTR gs:[rax],al
   140008500:	movabs al,ds:0xe0000065c0000065
   140008509:	add    BYTE PTR gs:[rax],al
   14000850c:	lock data16 add BYTE PTR [rax],al
   140008510:	(bad)  
   140008511:	add    BYTE PTR [eax],al
   140008514:	mov    al,0x67
   140008516:	add    BYTE PTR [rax],al
   140008518:	and    BYTE PTR [rax+0x0],ch
   14000851b:	add    BYTE PTR [rax],dh
   14000851d:	push   0x68400000
   140008522:	add    BYTE PTR [rax],al
   140008524:	shr    BYTE PTR [rax+0x0],0x0
   140008528:	adc    BYTE PTR [rcx+0x0],ch
   14000852b:	add    BYTE PTR [rax+0x69],ah
   14000852e:	add    BYTE PTR [rax],al
   140008530:	nop
   140008531:	outs   dx,DWORD PTR ds:[rsi]
   140008532:	add    BYTE PTR [rax],al
   140008534:	loopne 0x1400085a5
   140008536:	add    BYTE PTR [rax],al
   140008538:	add    BYTE PTR [rax+0x0],dh
   14000853b:	add    BYTE PTR [rax],ah
   14000853d:	jo     0x14000853f
   14000853f:	add    BYTE PTR [rax],al
   140008541:	loop   0x140008543
   140008543:	rex add DWORD PTR [rax],eax
   140008546:	add    BYTE PTR [rax],al
   140008548:	movabs al,ds:0x22000000014000e2
   140008551:	add    eax,0x41993
   140008556:	add    BYTE PTR [rax],al
   140008558:	add    al,0xc7
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	add    al,BYTE PTR [rax]
   14000855e:	add    BYTE PTR [rax],al
   140008560:	and    al,0xc7
   140008562:	add    BYTE PTR [rax],al
   140008564:	or     BYTE PTR [rax],al
   140008566:	add    BYTE PTR [rax],al
   140008568:	add    bh,0x0
   14000856b:	add    BYTE PTR [rax],ah
   14000856d:	add    BYTE PTR [rax],al
   14000856f:	add    BYTE PTR [rax],al
   140008571:	add    BYTE PTR [rax],al
   140008573:	add    BYTE PTR [rcx],al
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    BYTE PTR [rax+0x1400060],ah
   14000857d:	add    BYTE PTR [rax],al
   14000857f:	add    BYTE PTR [rax+0x69],ah
   140008582:	add    BYTE PTR [rax+0x1],al
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rdx+0x61],ah
   14000858a:	and    BYTE PTR fs:[rcx+0x6c],ah
   14000858e:	ins    BYTE PTR es:[rdi],dx
   14000858f:	outs   dx,DWORD PTR ds:[rsi]
   140008590:	movsxd esp,DWORD PTR [rcx+0x74]
   140008593:	imul   ebp,DWORD PTR [rdi+0x6e],0x60e00000
   14000859a:	add    BYTE PTR [rax+0x1],al
   14000859d:	add    BYTE PTR [rax],al
   14000859f:	add    BYTE PTR [rax+0x69],ah
   1400085a2:	add    BYTE PTR [rax+0x1],al
   1400085a5:	add    BYTE PTR [rax],al
   1400085a7:	add    BYTE PTR [rax+0x60],dh
   1400085aa:	add    BYTE PTR [rax+0x1],al
   1400085ad:	add    BYTE PTR [rax],al
   1400085af:	add    BYTE PTR [rax],dl
   1400085b1:	imul   eax,DWORD PTR [rax],0x140
   1400085b7:	add    BYTE PTR [rax],dl
   1400085b9:	imul   eax,DWORD PTR [rax],0x140
   1400085bf:	add    BYTE PTR [rax+0x1400065],ah
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    al,al
   1400085c9:	add    BYTE PTR gs:[rax+0x1],al
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    al,ah
   1400085d1:	add    BYTE PTR gs:[rax+0x1],al
   1400085d5:	add    BYTE PTR [rax],al
   1400085d7:	add    BYTE PTR [rax+0x60],dh
   1400085da:	add    BYTE PTR [rax+0x1],al
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    BYTE PTR [rax],ah
   1400085e1:	push   0x14000
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	lock data16 add BYTE PTR [rax+0x1],al
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rax+0x1400065],ah
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    al,al
   1400085f9:	add    BYTE PTR gs:[rax+0x1],al
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    al,ah
   140008601:	add    BYTE PTR gs:[rax+0x1],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rdi+0x65],ah
   14000860a:	outs   dx,BYTE PTR ds:[rsi]
   14000860b:	gs jb  0x140008677
   14000860e:	movsxd eax,DWORD PTR [rax]
   140008610:	jne    0x140008680
   140008612:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140008616:	outs   dx,BYTE PTR ds:[rsi]
   140008617:	and    BYTE PTR [rbp+0x72],ah
   14000861a:	jb     0x14000868b
   14000861c:	jb     0x14000861e
   14000861e:	add    BYTE PTR [rax],al
   140008620:	jo     0x140008682
   140008622:	add    BYTE PTR [rax+0x1],al
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    BYTE PTR [rax],dh
   140008629:	push   0x14000
   14000862e:	add    BYTE PTR [rax],al
   140008630:	(bad)  
   140008631:	add    BYTE PTR [eax+0x1],al
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    BYTE PTR [rax+0x1400065],ah
   14000863d:	add    BYTE PTR [rax],al
   14000863f:	add    al,al
   140008641:	add    BYTE PTR gs:[rax+0x1],al
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    al,ah
   140008649:	add    BYTE PTR gs:[rax+0x1],al
   14000864d:	add    BYTE PTR [rax],al
   14000864f:	add    BYTE PTR [rcx+0x6f],ch
   140008652:	jae    0x1400086c8
   140008654:	jb     0x1400086bb
   140008656:	(bad)  
   140008657:	ins    DWORD PTR es:[rdi],dx
	...
   140008660:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140008667:	ins    DWORD PTR es:[rdi],dx
   140008668:	and    BYTE PTR [rbx+0x74],dh
   14000866b:	jb     0x1400086d2
   14000866d:	(bad)  
   14000866e:	ins    DWORD PTR es:[rdi],dx
   14000866f:	and    BYTE PTR [rbp+0x72],ah
   140008672:	jb     0x1400086e3
   140008674:	jb     0x140008676
   140008676:	add    BYTE PTR [rax],al
   140008678:	jo     0x1400086da
   14000867a:	add    BYTE PTR [rax+0x1],al
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    BYTE PTR [rax+0x68],al
   140008682:	add    BYTE PTR [rax+0x1],al
   140008685:	add    BYTE PTR [rax],al
   140008687:	add    BYTE PTR [rax+0x1400067],dh
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    BYTE PTR [rax+0x65],dl
   140008692:	add    BYTE PTR [rax+0x1],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    al,al
   140008699:	add    BYTE PTR gs:[rax+0x1],al
   14000869d:	add    BYTE PTR [rax],al
   14000869f:	add    al,ah
   1400086a1:	add    BYTE PTR gs:[rax+0x1],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    BYTE PTR [rbx+0x79],dh
   1400086aa:	jae    0x140008720
   1400086ac:	gs ins DWORD PTR es:[rdi],dx
   1400086ae:	add    BYTE PTR [rax],al
   1400086b0:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400086b7:	and    BYTE PTR [rbx+0x74],dh
   1400086ba:	jb     0x140008725
   1400086bc:	outs   dx,BYTE PTR ds:[rsi]
   1400086bd:	and    BYTE PTR [eax+0x6f],dh
   1400086c1:	jae    0x14000872c
   1400086c3:	je     0x14000872e
   1400086c5:	outs   dx,DWORD PTR ds:[rsi]
   1400086c6:	outs   dx,BYTE PTR ds:[rsi]
   1400086c7:	add    BYTE PTR [rbx+0x74],dh
   1400086ca:	jb     0x140008735
   1400086cc:	outs   dx,BYTE PTR ds:[rsi]
   1400086cd:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   1400086d2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400086d6:	add    BYTE PTR [eax],al
   1400086d9:	add    BYTE PTR [rax],al
   1400086db:	add    BYTE PTR [rax],al
   1400086dd:	add    BYTE PTR [rax],al
   1400086df:	add    BYTE PTR [rip+0x0],al        # 0x1400086e5
   1400086e5:	add    BYTE PTR [rax],al
   1400086e7:	add    BYTE PTR [rax+0x140008b],dl
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    BYTE PTR [rdi+0x0],dh
   1400086f5:	add    BYTE PTR [rax],al
   1400086f7:	add    BYTE PTR [rax+0x140008b],ch
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rax+rax*1],dl
   140008702:	add    BYTE PTR [rax],al
   140008704:	add    BYTE PTR [rax],al
   140008706:	add    BYTE PTR [rax],al
   140008708:	mov    eax,0x140008b
   14000870d:	add    BYTE PTR [rax],al
   14000870f:	add    BYTE PTR [rdi+0x0],ch
   140008712:	add    BYTE PTR [rax],al
   140008714:	add    BYTE PTR [rax],al
   140008716:	add    BYTE PTR [rax],al
   140008718:	enter  0x8b,0x40
   14000871c:	add    DWORD PTR [rax],eax
   14000871e:	add    BYTE PTR [rax],al
   140008720:	stos   BYTE PTR es:[rdi],al
   140008721:	add    BYTE PTR [rax],al
   140008723:	add    BYTE PTR [rax],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    al,ah
   140008729:	mov    eax,DWORD PTR [rax]
   14000872b:	rex add DWORD PTR [rax],eax
   14000872e:	add    BYTE PTR [rax],al
   140008730:	mov    es,WORD PTR [rax]
   140008732:	add    BYTE PTR [rax],al
   140008734:	add    BYTE PTR [rax],al
   140008736:	add    BYTE PTR [rax],al
   140008738:	loopne 0x1400086c5
   14000873a:	add    BYTE PTR [rax+0x1],al
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rdx+0x0],dl
   140008742:	add    BYTE PTR [rax],al
   140008744:	add    BYTE PTR [rax],al
   140008746:	add    BYTE PTR [rax],al
   140008748:	nop
   140008749:	mov    eax,DWORD PTR [rax]
   14000874b:	rex add DWORD PTR [rax],eax
   14000874e:	add    BYTE PTR [rax],al
   140008750:	repz add eax,DWORD PTR [rax]
   140008753:	add    BYTE PTR [rax],al
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    al,bh
   140008759:	mov    eax,DWORD PTR [rax]
   14000875b:	rex add DWORD PTR [rax],eax
   14000875e:	add    BYTE PTR [rax],al
   140008760:	hlt    
   140008761:	add    eax,DWORD PTR [rax]
   140008763:	add    BYTE PTR [rax],al
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    al,bh
   140008769:	mov    eax,DWORD PTR [rax]
   14000876b:	rex add DWORD PTR [rax],eax
   14000876e:	add    BYTE PTR [rax],al
   140008770:	cmc    
   140008771:	add    eax,DWORD PTR [rax]
   140008773:	add    BYTE PTR [rax],al
   140008775:	add    BYTE PTR [rax],al
   140008777:	add    al,bh
   140008779:	mov    eax,DWORD PTR [rax]
   14000877b:	rex add DWORD PTR [rax],eax
   14000877e:	add    BYTE PTR [rax],al
   140008780:	adc    BYTE PTR [rax],al
   140008782:	add    BYTE PTR [rax],al
   140008784:	add    BYTE PTR [rax],al
   140008786:	add    BYTE PTR [rax],al
   140008788:	nop
   140008789:	mov    eax,DWORD PTR [rax]
   14000878b:	rex add DWORD PTR [rax],eax
   14000878e:	add    BYTE PTR [rax],al
   140008790:	(bad)  
   140008791:	add    BYTE PTR [rax],al
   140008793:	add    BYTE PTR [rax],al
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rax+0x140008b],bh
   14000879d:	add    BYTE PTR [rax],al
   14000879f:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   1400087a3:	add    BYTE PTR [rax],al
   1400087a5:	add    BYTE PTR [rax],al
   1400087a7:	add    al,ah
   1400087a9:	mov    eax,DWORD PTR [rax]
   1400087ab:	rex add DWORD PTR [rax],eax
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	xchg   ecx,eax
   1400087b1:	add    BYTE PTR [rax],al
   1400087b3:	add    BYTE PTR [rax],al
   1400087b5:	add    BYTE PTR [rax],al
   1400087b7:	add    BYTE PTR [rax],cl
   1400087b9:	mov    WORD PTR [rax],es
   1400087bb:	rex add DWORD PTR [rax],eax
   1400087be:	add    BYTE PTR [rax],al
   1400087c0:	or     eax,DWORD PTR [rcx]
   1400087c2:	add    BYTE PTR [rax],al
   1400087c4:	add    BYTE PTR [rax],al
   1400087c6:	add    BYTE PTR [rax],al
   1400087c8:	and    BYTE PTR [rax+rax*1+0x140],cl
   1400087cf:	add    BYTE PTR [rax+0x0],dh
   1400087d2:	add    BYTE PTR [rax],al
   1400087d4:	add    BYTE PTR [rax],al
   1400087d6:	add    BYTE PTR [rax],al
   1400087d8:	cmp    BYTE PTR [rax+rax*1+0x140],cl
   1400087df:	add    BYTE PTR [rax+0x0],dl
   1400087e2:	add    BYTE PTR [rax],al
   1400087e4:	add    BYTE PTR [rax],al
   1400087e6:	add    BYTE PTR [rax],al
   1400087e8:	test   al,0x8b
   1400087ea:	add    BYTE PTR [rax+0x1],al
   1400087ed:	add    BYTE PTR [rax],al
   1400087ef:	add    BYTE PTR [rdx],al
   1400087f1:	add    BYTE PTR [rax],al
   1400087f3:	add    BYTE PTR [rax],al
   1400087f5:	add    BYTE PTR [rax],al
   1400087f7:	add    BYTE PTR [rax-0x74],dl
   1400087fa:	add    BYTE PTR [rax+0x1],al
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rdi],ah
   140008801:	add    BYTE PTR [rax],al
   140008803:	add    BYTE PTR [rax],al
   140008805:	add    BYTE PTR [rax],al
   140008807:	add    BYTE PTR [rax],bh
   140008809:	mov    WORD PTR [rax],es
   14000880b:	rex add DWORD PTR [rax],eax
   14000880e:	add    BYTE PTR [rax],al
   140008810:	or     al,0x0
   140008812:	add    BYTE PTR [rax],al
   140008814:	add    BYTE PTR [rax],al
   140008816:	add    BYTE PTR [rax],al
   140008818:	nop
   140008819:	mov    eax,DWORD PTR [rax]
   14000881b:	rex add DWORD PTR [rax],eax
   14000881e:	add    BYTE PTR [rax],al
   140008820:	sldt   WORD PTR [rax]
   140008823:	add    BYTE PTR [rax],al
   140008825:	add    BYTE PTR [rax],al
   140008827:	add    BYTE PTR [rax+0x140008b],bh
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rcx],al
   140008831:	add    BYTE PTR [rax],al
   140008833:	add    BYTE PTR [rax],al
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    BYTE PTR [rax-0x74],dh
   14000883a:	add    BYTE PTR [rax+0x1],al
   14000883d:	add    BYTE PTR [rax],al
   14000883f:	add    BYTE PTR [rsi],al
   140008841:	add    BYTE PTR [rax],al
   140008843:	add    BYTE PTR [rax],al
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    BYTE PTR [rax],ah
   140008849:	mov    WORD PTR [rax],es
   14000884b:	rex add DWORD PTR [rax],eax
   14000884e:	add    BYTE PTR [rax],al
   140008850:	jnp    0x140008852
   140008852:	add    BYTE PTR [rax],al
   140008854:	add    BYTE PTR [rax],al
   140008856:	add    BYTE PTR [rax],al
   140008858:	and    BYTE PTR [rax+rax*1+0x140],cl
   14000885f:	add    BYTE PTR [rcx],ah
   140008861:	add    BYTE PTR [rax],al
   140008863:	add    BYTE PTR [rax],al
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    BYTE PTR [rax+0x140008c],cl
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    ah,dl
   140008871:	add    BYTE PTR [rax],al
   140008873:	add    BYTE PTR [rax],al
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rax+0x140008c],cl
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rbx+0x0],al
   140008885:	add    BYTE PTR [rax],al
   140008887:	add    BYTE PTR [rax],ah
   140008889:	mov    WORD PTR [rax],es
   14000888b:	rex add DWORD PTR [rax],eax
   14000888e:	add    BYTE PTR [rax],al
   140008890:	out    0x3,al
   140008892:	add    BYTE PTR [rax],al
   140008894:	add    BYTE PTR [rax],al
   140008896:	add    BYTE PTR [rax],al
   140008898:	nop
   140008899:	mov    eax,DWORD PTR [rax]
   14000889b:	rex add DWORD PTR [rax],eax
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	or     BYTE PTR [rax],al
   1400088a2:	add    BYTE PTR [rax],al
   1400088a4:	add    BYTE PTR [rax],al
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	movabs al,ds:0x150000000140008c
   1400088b1:	add    BYTE PTR [rax],al
   1400088b3:	add    BYTE PTR [rax],al
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    BYTE PTR [rax+0x140008c],bh
   1400088bd:	add    BYTE PTR [rax],al
   1400088bf:	add    BYTE PTR [rcx],dl
   1400088c1:	add    BYTE PTR [rax],al
   1400088c3:	add    BYTE PTR [rax],al
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    al,bl
   1400088c9:	mov    WORD PTR [rax],es
   1400088cb:	rex add DWORD PTR [rax],eax
   1400088ce:	add    BYTE PTR [rax],al
   1400088d0:	outs   dx,BYTE PTR ds:[rsi]
   1400088d1:	add    BYTE PTR [rax],al
   1400088d3:	add    BYTE PTR [rax],al
   1400088d5:	add    BYTE PTR [rax],al
   1400088d7:	add    al,bh
   1400088d9:	mov    eax,DWORD PTR [rax]
   1400088db:	rex add DWORD PTR [rax],eax
   1400088de:	add    BYTE PTR [rax],al
   1400088e0:	(bad)  
   1400088e1:	or     DWORD PTR [rax],eax
   1400088e3:	add    BYTE PTR [rax],al
   1400088e5:	add    BYTE PTR [rax],al
   1400088e7:	add    al,ah
   1400088e9:	mov    eax,DWORD PTR [rax]
   1400088eb:	rex add DWORD PTR [rax],eax
   1400088ee:	add    BYTE PTR [rax],al
   1400088f0:	jrcxz  0x1400088f5
   1400088f2:	add    BYTE PTR [rax],al
   1400088f4:	add    BYTE PTR [rax],al
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	lock mov WORD PTR [rax],es
   1400088fb:	rex add DWORD PTR [rax],eax
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	(bad)  
   140008901:	add    BYTE PTR [rax],al
   140008903:	add    BYTE PTR [rax],al
   140008905:	add    BYTE PTR [rax],al
   140008907:	add    BYTE PTR [rax+0x140008c],ah
   14000890d:	add    BYTE PTR [rax],al
   14000890f:	add    BYTE PTR [rbx],al
   140008911:	add    BYTE PTR [rax],al
   140008913:	add    BYTE PTR [rax],al
   140008915:	add    BYTE PTR [rax],al
   140008917:	add    BYTE PTR [rax-0x74],dl
   14000891a:	add    BYTE PTR [rax+0x1],al
   14000891d:	add    BYTE PTR [rax],al
   14000891f:	add    BYTE PTR [rsi],bl
   140008921:	add    BYTE PTR [rax],al
   140008923:	add    BYTE PTR [rax],al
   140008925:	add    BYTE PTR [rax],al
   140008927:	add    al,bh
   140008929:	mov    eax,DWORD PTR [rax]
   14000892b:	rex add DWORD PTR [rax],eax
   14000892e:	add    BYTE PTR [rax],al
   140008930:	(bad)  
   140008931:	add    al,0x0
   140008933:	add    BYTE PTR [rax],al
   140008935:	add    BYTE PTR [rax],al
   140008937:	add    BYTE PTR [rax+0x140008c],bh
   14000893d:	add    BYTE PTR [rax],al
   14000893f:	add    BYTE PTR [rcx],bl
   140008941:	add    BYTE PTR [rax],al
   140008943:	add    BYTE PTR [rax],al
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    al,bh
   140008949:	mov    eax,DWORD PTR [rax]
   14000894b:	rex add DWORD PTR [rax],eax
   14000894e:	add    BYTE PTR [rax],al
   140008950:	and    BYTE PTR [rax],al
   140008952:	add    BYTE PTR [rax],al
   140008954:	add    BYTE PTR [rax],al
   140008956:	add    BYTE PTR [rax],al
   140008958:	nop
   140008959:	mov    eax,DWORD PTR [rax]
   14000895b:	rex add DWORD PTR [rax],eax
   14000895e:	add    BYTE PTR [rax],al
   140008960:	add    al,0x0
   140008962:	add    BYTE PTR [rax],al
   140008964:	add    BYTE PTR [rax],al
   140008966:	add    BYTE PTR [rax],al
   140008968:	or     BYTE PTR [rbp+0x14000],cl
   14000896e:	add    BYTE PTR [rax],al
   140008970:	sbb    eax,0x0
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    al,bh
   140008979:	mov    eax,DWORD PTR [rax]
   14000897b:	rex add DWORD PTR [rax],eax
   14000897e:	add    BYTE PTR [rax],al
   140008980:	adc    eax,DWORD PTR [rax]
   140008982:	add    BYTE PTR [rax],al
   140008984:	add    BYTE PTR [rax],al
   140008986:	add    BYTE PTR [rax],al
   140008988:	nop
   140008989:	mov    eax,DWORD PTR [rax]
   14000898b:	rex add DWORD PTR [rax],eax
   14000898e:	add    BYTE PTR [rax],al
   140008990:	sbb    eax,0x27
   140008995:	add    BYTE PTR [rax],al
   140008997:	add    BYTE PTR [rax],ah
   140008999:	lea    eax,[rax]
   14000899b:	rex add DWORD PTR [rax],eax
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	rex (bad) 
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	add    BYTE PTR [rax],al
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	cmp    BYTE PTR [rbp+0x14000],cl
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	rex.B (bad) 
   1400089b2:	add    BYTE PTR [rax],al
   1400089b4:	add    BYTE PTR [rax],al
   1400089b6:	add    BYTE PTR [rax],al
   1400089b8:	lea    rax,[rax]
   1400089bb:	rex add DWORD PTR [rax],eax
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	(bad)  
   1400089c1:	(bad)  
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	add    BYTE PTR [rax],al
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	(bad)  
   1400089c9:	lea    eax,[rax]
   1400089cb:	rex add DWORD PTR [rax],eax
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	xor    eax,0x27
   1400089d5:	add    BYTE PTR [rax],al
   1400089d7:	add    BYTE PTR [rax+0x140008d],al
   1400089dd:	add    BYTE PTR [rax],al
   1400089df:	add    BYTE PTR [rcx],bl
   1400089e1:	(bad)  
   1400089e2:	add    BYTE PTR [rax],al
   1400089e4:	add    BYTE PTR [rax],al
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	movabs al,ds:0x450000000140008d
   1400089f1:	(bad)  
   1400089f2:	add    BYTE PTR [rax],al
   1400089f4:	add    BYTE PTR [rax],al
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	mov    eax,0x140008d
   1400089fd:	add    BYTE PTR [rax],al
   1400089ff:	add    BYTE PTR [rbp+0x27],cl
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	add    BYTE PTR [rax],al
   140008a06:	add    BYTE PTR [rax],al
   140008a08:	ror    BYTE PTR [rbp+0x14000],1
   140008a0e:	add    BYTE PTR [rax],al
   140008a10:	rex.RX (bad) 
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	add    BYTE PTR [rax],al
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	call   0x141408aaa
   140008a1d:	add    BYTE PTR [rax],al
   140008a1f:	add    BYTE PTR [rdi],dh
   140008a21:	(bad)  
   140008a22:	add    BYTE PTR [rax],al
   140008a24:	add    BYTE PTR [rax],al
   140008a26:	add    BYTE PTR [rax],al
   140008a28:	add    BYTE PTR [rsi+0x14000],cl
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	(bad)  
   140008a31:	(bad)  
   140008a32:	add    BYTE PTR [rax],al
   140008a34:	add    BYTE PTR [rax],al
   140008a36:	add    BYTE PTR [rax],al
   140008a38:	and    BYTE PTR [rsi+0x14000],cl
   140008a3e:	add    BYTE PTR [rax],al
   140008a40:	push   rcx
   140008a41:	(bad)  
   140008a42:	add    BYTE PTR [rax],al
   140008a44:	add    BYTE PTR [rax],al
   140008a46:	add    BYTE PTR [rax],al
   140008a48:	xor    BYTE PTR [rsi+0x14000],cl
   140008a4e:	add    BYTE PTR [rax],al
   140008a50:	xor    al,0x27
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	add    BYTE PTR [rax],al
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	rex.W mov es,WORD PTR [rax]
   140008a5b:	rex add DWORD PTR [rax],eax
   140008a5e:	add    BYTE PTR [rax],al
   140008a60:	adc    al,0x27
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	add    BYTE PTR [rax],al
   140008a66:	add    BYTE PTR [rax],al
   140008a68:	(bad)  
   140008a69:	mov    es,WORD PTR [rax]
   140008a6b:	rex add DWORD PTR [rax],eax
   140008a6e:	add    BYTE PTR [rax],al
   140008a70:	es (bad) 
   140008a72:	add    BYTE PTR [rax],al
   140008a74:	add    BYTE PTR [rax],al
   140008a76:	add    BYTE PTR [rax],al
   140008a78:	jo     0x140008a08
   140008a7a:	add    BYTE PTR [rax+0x1],al
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    BYTE PTR [rax+0x27],cl
   140008a82:	add    BYTE PTR [rax],al
   140008a84:	add    BYTE PTR [rax],al
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	mov    BYTE PTR [rsi+0x14000],cl
   140008a8e:	add    BYTE PTR [rax],al
   140008a90:	sub    BYTE PTR [rdi],ah
   140008a92:	add    BYTE PTR [rax],al
   140008a94:	add    BYTE PTR [rax],al
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	movabs al,ds:0x380000000140008e
   140008aa1:	(bad)  
   140008aa2:	add    BYTE PTR [rax],al
   140008aa4:	add    BYTE PTR [rax],al
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	mov    eax,0x140008e
   140008aad:	add    BYTE PTR [rax],al
   140008aaf:	add    BYTE PTR [rdi+0x27],cl
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	add    BYTE PTR [rax],al
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	enter  0x8e,0x40
   140008abc:	add    DWORD PTR [rax],eax
   140008abe:	add    BYTE PTR [rax],al
   140008ac0:	rex.X (bad) 
   140008ac2:	add    BYTE PTR [rax],al
   140008ac4:	add    BYTE PTR [rax],al
   140008ac6:	add    BYTE PTR [rax],al
   140008ac8:	loopne 0x140008a58
   140008aca:	add    BYTE PTR [rax+0x1],al
   140008acd:	add    BYTE PTR [rax],al
   140008acf:	add    BYTE PTR [rdi+riz*1+0x0],al
   140008ad3:	add    BYTE PTR [rax],al
   140008ad5:	add    BYTE PTR [rax],al
   140008ad7:	add    al,dh
   140008ad9:	mov    es,WORD PTR [rax]
   140008adb:	rex add DWORD PTR [rax],eax
   140008ade:	add    BYTE PTR [rax],al
   140008ae0:	rex.XB (bad) 
   140008ae2:	add    BYTE PTR [rax],al
   140008ae4:	add    BYTE PTR [rax],al
   140008ae6:	add    BYTE PTR [rax],al
   140008ae8:	add    BYTE PTR [rdi+0x14000],cl
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	rex.RXB (bad) 
   140008af2:	add    BYTE PTR [rax],al
   140008af4:	add    BYTE PTR [rax],al
   140008af6:	add    BYTE PTR [rax],al
   140008af8:	sbb    BYTE PTR [rdi+0x14000],cl
   140008afe:	add    BYTE PTR [rax],al
   140008b00:	cmp    ah,BYTE PTR [rdi]
   140008b02:	add    BYTE PTR [rax],al
   140008b04:	add    BYTE PTR [rax],al
   140008b06:	add    BYTE PTR [rax],al
   140008b08:	sub    BYTE PTR [rdi+0x14000],cl
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	rex.WB (bad) 
   140008b12:	add    BYTE PTR [rax],al
   140008b14:	add    BYTE PTR [rax],al
   140008b16:	add    BYTE PTR [rax],al
   140008b18:	rex pop QWORD PTR [rax]
   140008b1b:	rex add DWORD PTR [rax],eax
   140008b1e:	add    BYTE PTR [rax],al
   140008b20:	ss (bad) 
   140008b22:	add    BYTE PTR [rax],al
   140008b24:	add    BYTE PTR [rax],al
   140008b26:	add    BYTE PTR [rax],al
   140008b28:	push   rax
   140008b29:	pop    QWORD PTR [rax]
   140008b2b:	rex add DWORD PTR [rax],eax
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	cmp    eax,0x27
   140008b35:	add    BYTE PTR [rax],al
   140008b37:	add    BYTE PTR [rax-0x71],ah
   140008b3a:	add    BYTE PTR [rax+0x1],al
   140008b3d:	add    BYTE PTR [rax],al
   140008b3f:	add    BYTE PTR [rbx],bh
   140008b41:	(bad)  
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	add    BYTE PTR [rax],al
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	js     0x140008ad9
   140008b4a:	add    BYTE PTR [rax+0x1],al
   140008b4d:	add    BYTE PTR [rax],al
   140008b4f:	add    BYTE PTR [rcx],bh
   140008b51:	(bad)  
   140008b52:	add    BYTE PTR [rax],al
   140008b54:	add    BYTE PTR [rax],al
   140008b56:	add    BYTE PTR [rax],al
   140008b58:	nop
   140008b59:	pop    QWORD PTR [rax]
   140008b5b:	rex add DWORD PTR [rax],eax
   140008b5e:	add    BYTE PTR [rax],al
   140008b60:	rex.WR (bad) 
   140008b62:	add    BYTE PTR [rax],al
   140008b64:	add    BYTE PTR [rax],al
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	test   al,0x8f
   140008b6a:	add    BYTE PTR [rax+0x1],al
   140008b6d:	add    BYTE PTR [rax],al
   140008b6f:	add    BYTE PTR [rbx],dh
   140008b71:	(bad)  
   140008b72:	add    BYTE PTR [rax],al
   140008b74:	add    BYTE PTR [rax],al
   140008b76:	add    BYTE PTR [rax],al
   140008b78:	mov    eax,0x140008f
	...
   140008b8d:	add    BYTE PTR [rax],al
   140008b8f:	add    BYTE PTR [rax+0x65],dh
   140008b92:	jb     0x140008c01
   140008b94:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140008b9b:	fs outs dx,BYTE PTR gs:[rsi]
   140008b9e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140008ba5:	add    BYTE PTR [rax],al
   140008ba7:	add    BYTE PTR [rsi+0x69],ah
   140008baa:	ins    BYTE PTR es:[rdi],dx
   140008bab:	and    BYTE PTR gs:[rbp+0x78],ah
   140008baf:	imul   esi,DWORD PTR [rbx+0x74],0x73
   140008bb6:	add    BYTE PTR [rax],al
   140008bb8:	outs   dx,BYTE PTR ds:[rsi]
   140008bb9:	outs   dx,DWORD PTR ds:[rsi]
   140008bba:	and    BYTE PTR [rbx+0x75],dh
   140008bbd:	movsxd ebp,DWORD PTR [rax+0x20]
   140008bc0:	fs gs jbe 0x140008c2d
   140008bc4:	movsxd esp,DWORD PTR [rbp+0x0]
   140008bc7:	add    BYTE PTR [rsi+0x69],ah
   140008bca:	ins    BYTE PTR es:[rdi],dx
   140008bcb:	outs   dx,BYTE PTR gs:[rsi]
   140008bcd:	(bad)  
   140008bce:	ins    DWORD PTR es:[rdi],dx
   140008bcf:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140008bd4:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008bd8:	add    BYTE PTR [eax],al
   140008bdb:	add    BYTE PTR [rax],al
   140008bdd:	add    BYTE PTR [rax],al
   140008bdf:	add    BYTE PTR [rbp+riz*2+0x76],ah
   140008be3:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   140008bea:	jb     0x140008c51
   140008bec:	jae    0x140008c5d
   140008bee:	jne    0x140008c62
   140008bf0:	movsxd esp,DWORD PTR [rbp+0x20]
   140008bf3:	(bad)  
   140008bf4:	jne    0x140008c69
   140008bf6:	jns    0x140008bf8
   140008bf8:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   140008bff:	jb     0x140008c01
   140008c01:	add    BYTE PTR [rax],al
   140008c03:	add    BYTE PTR [rax],al
   140008c05:	add    BYTE PTR [rax],al
   140008c07:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   140008c0b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140008c10:	jns    0x140008c32
   140008c12:	outs   dx,BYTE PTR ds:[rsi]
   140008c13:	outs   dx,DWORD PTR ds:[rsi]
   140008c14:	je     0x140008c36
   140008c16:	gs ins DWORD PTR es:[rdi],dx
   140008c18:	jo     0x140008c8e
   140008c1a:	jns    0x140008c1c
   140008c1c:	add    BYTE PTR [rax],al
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140008c27:	and    BYTE PTR [rcx+0x72],ah
   140008c2a:	addr32 jne 0x140008c9a
   140008c2d:	outs   dx,BYTE PTR gs:[rsi]
   140008c2f:	je     0x140008c31
   140008c31:	add    BYTE PTR [rax],al
   140008c33:	add    BYTE PTR [rax],al
   140008c35:	add    BYTE PTR [rax],al
   140008c37:	add    BYTE PTR [rsi+0x6f],ch
   140008c3a:	and    BYTE PTR [rbx+0x70],dh
   140008c3d:	(bad)  
   140008c3e:	movsxd esp,DWORD PTR [rbp+0x20]
   140008c41:	outs   dx,DWORD PTR ds:[rsi]
   140008c42:	outs   dx,BYTE PTR ds:[rsi]
   140008c43:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140008c47:	imul   esp,DWORD PTR [rbx+0x65],0x0
   140008c4e:	add    BYTE PTR [rax],al
   140008c50:	outs   dx,BYTE PTR ds:[rsi]
   140008c51:	outs   dx,DWORD PTR ds:[rsi]
   140008c52:	and    BYTE PTR [rbx+0x75],dh
   140008c55:	movsxd ebp,DWORD PTR [rax+0x20]
   140008c58:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   140008c5f:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140008c63:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140008c68:	jns    0x140008c6a
   140008c6a:	add    BYTE PTR [rax],al
   140008c6c:	add    BYTE PTR [rax],al
   140008c6e:	add    BYTE PTR [rax],al
   140008c70:	data16 jne 0x140008ce1
   140008c73:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008c77:	outs   dx,BYTE PTR ds:[rsi]
   140008c78:	and    BYTE PTR [rsi+0x6f],ch
   140008c7b:	je     0x140008c9d
   140008c7d:	jae    0x140008cf4
   140008c7f:	jo     0x140008cf1
   140008c81:	outs   dx,DWORD PTR ds:[rsi]
   140008c82:	jb     0x140008cf8
   140008c84:	gs add BYTE PTR fs:[rax],al
   140008c88:	outs   dx,BYTE PTR ds:[rsi]
   140008c89:	outs   dx,DWORD PTR ds:[rsi]
   140008c8a:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   140008c8e:	imul   esp,DWORD PTR [rax],0x61
   140008c91:	jbe    0x140008cf4
   140008c93:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140008c9b:	add    BYTE PTR [rax],al
   140008c9d:	add    BYTE PTR [rax],al
   140008c9f:	add    BYTE PTR [rsi+0x6f],ch
   140008ca2:	je     0x140008cc4
   140008ca4:	outs   dx,BYTE PTR gs:[rsi]
   140008ca6:	outs   dx,DWORD PTR ds:[rsi]
   140008ca7:	jne    0x140008d10
   140008ca9:	push   0x6d656d20
   140008cae:	outs   dx,DWORD PTR ds:[rsi]
   140008caf:	jb     0x140008d2a
   140008cb1:	add    BYTE PTR [rax],al
   140008cb3:	add    BYTE PTR [rax],al
   140008cb5:	add    BYTE PTR [rax],al
   140008cb7:	add    BYTE PTR [rdx+0x65],dh
   140008cba:	jae    0x140008d2b
   140008cbc:	jne    0x140008d30
   140008cbe:	movsxd esp,DWORD PTR [rbp+0x20]
   140008cc1:	jne    0x140008d31
   140008cc3:	(bad)  
   140008cc4:	jbe    0x140008d27
   140008cc6:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   140008cce:	jb     0x140008d49
   140008cd0:	and    BYTE PTR [rcx+0x67],ah
   140008cd3:	(bad)  
   140008cd4:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   140008cdb:	jae    0x140008d50
   140008cdd:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140008ce1:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140008ce8:	imul   eax,DWORD PTR [rax],0x0
   140008ceb:	add    BYTE PTR [rax],al
   140008ced:	add    BYTE PTR [rax],al
   140008cef:	add    BYTE PTR [rdi+0x70],ch
   140008cf2:	gs jb  0x140008d56
   140008cf5:	je     0x140008d60
   140008cf7:	outs   dx,DWORD PTR ds:[rsi]
   140008cf8:	outs   dx,BYTE PTR ds:[rsi]
   140008cf9:	and    BYTE PTR [rbx+0x61],ah
   140008cfc:	outs   dx,BYTE PTR ds:[rsi]
   140008cfd:	movsxd esp,DWORD PTR [rbp+0x6c]
   140008d00:	gs add BYTE PTR fs:[rax],al
   140008d04:	add    BYTE PTR [rax],al
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	je     0x140008d79
   140008d0a:	outs   dx,DWORD PTR ds:[rsi]
   140008d0b:	and    BYTE PTR [rbp+0x61],ch
   140008d0e:	outs   dx,BYTE PTR ds:[rsi]
   140008d0f:	jns    0x140008d31
   140008d11:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140008d18:	jo     0x140008d7f
   140008d1a:	outs   dx,BYTE PTR ds:[rsi]
   140008d1b:	add    BYTE PTR [rax],al
   140008d1d:	add    BYTE PTR [rax],al
   140008d1f:	add    BYTE PTR [rax+0x65],dh
   140008d22:	jb     0x140008d91
   140008d24:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   140008d2b:	fs outs dx,BYTE PTR gs:[rsi]
   140008d2e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140008d35:	add    BYTE PTR [rax],al
   140008d37:	add    BYTE PTR [rcx+0x64],ah
   140008d3a:	fs jb  0x140008da2
   140008d3d:	jae    0x140008db2
   140008d3f:	pop    rdi
   140008d40:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   140008d47:	add    BYTE PTR [rcx+0x64],ah
   140008d4a:	fs jb  0x140008db2
   140008d4d:	jae    0x140008dc2
   140008d4f:	pop    rdi
   140008d50:	outs   dx,BYTE PTR ds:[rsi]
   140008d51:	outs   dx,DWORD PTR ds:[rsi]
   140008d52:	je     0x140008db3
   140008d54:	(bad)  
   140008d55:	jbe    0x140008db8
   140008d57:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140008d5f:	add    BYTE PTR [rcx+0x64],ah
   140008d62:	fs jb  0x140008dca
   140008d65:	jae    0x140008dda
   140008d67:	pop    rdi
   140008d68:	data16 (bad) 
   140008d6a:	ins    DWORD PTR es:[rdi],dx
   140008d6b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   140008d73:	jae    0x140008dea
   140008d75:	jo     0x140008de7
   140008d77:	outs   dx,DWORD PTR ds:[rsi]
   140008d78:	jb     0x140008dee
   140008d7a:	gs add BYTE PTR fs:[rax],al
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008d83:	outs   dx,BYTE PTR ds:[rsi]
   140008d84:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008d89:	outs   dx,BYTE PTR ds:[rsi]
   140008d8a:	pop    rdi
   140008d8b:	(bad)  
   140008d8c:	ins    BYTE PTR es:[rdi],dx
   140008d8d:	jb     0x140008df4
   140008d8f:	(bad)  
   140008d90:	fs jns 0x140008df2
   140008d93:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140008d9a:	jb     0x140008e01
   140008d9c:	jae    0x140008e11
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	(bad)
   140008da5:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   140008dad:	jb     0x140008e18
   140008daf:	jo     0x140008e25
   140008db1:	outs   dx,DWORD PTR ds:[rsi]
   140008db2:	jb     0x140008db4
   140008db4:	add    BYTE PTR [rax],al
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008dbb:	outs   dx,BYTE PTR ds:[rsi]
   140008dbc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008dc1:	outs   dx,BYTE PTR ds:[rsi]
   140008dc2:	pop    rdi
   140008dc3:	(bad)  
   140008dc4:	(bad)  
   140008dc5:	outs   dx,DWORD PTR ds:[rsi]
   140008dc6:	jb     0x140008e3c
   140008dc8:	gs add BYTE PTR fs:[rax],al
   140008dcc:	add    BYTE PTR [rax],al
   140008dce:	add    BYTE PTR [rax],al
   140008dd0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008dd3:	outs   dx,BYTE PTR ds:[rsi]
   140008dd4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008dd9:	outs   dx,BYTE PTR ds:[rsi]
   140008dda:	pop    rdi
   140008ddb:	jb     0x140008e42
   140008ddd:	data16 jne 0x140008e53
   140008de0:	gs add BYTE PTR fs:[rax],al
   140008de4:	add    BYTE PTR [rax],al
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008deb:	outs   dx,BYTE PTR ds:[rsi]
   140008dec:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008df1:	outs   dx,BYTE PTR ds:[rsi]
   140008df2:	pop    rdi
   140008df3:	jb     0x140008e5a
   140008df5:	jae    0x140008e5c
   140008df7:	je     0x140008df9
   140008df9:	add    BYTE PTR [rax],al
   140008dfb:	add    BYTE PTR [rax],al
   140008dfd:	add    BYTE PTR [rax],al
   140008dff:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140008e03:	je     0x140008e6e
   140008e05:	outs   dx,BYTE PTR ds:[rsi]
   140008e06:	(bad)  
   140008e07:	je     0x140008e72
   140008e09:	outs   dx,DWORD PTR ds:[rsi]
   140008e0a:	outs   dx,BYTE PTR ds:[rsi]
   140008e0b:	pop    rdi
   140008e0c:	(bad)  
   140008e0d:	fs fs jb 0x140008e76
   140008e11:	jae    0x140008e86
   140008e13:	pop    rdi
   140008e14:	jb     0x140008e7b
   140008e16:	jno    0x140008e8d
   140008e18:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140008e1f:	add    BYTE PTR [rdx+0x61],ah
   140008e22:	fs pop rdi
   140008e24:	(bad)  
   140008e25:	fs fs jb 0x140008e8e
   140008e29:	jae    0x140008e9e
   140008e2b:	add    BYTE PTR [rax],al
   140008e2d:	add    BYTE PTR [rax],al
   140008e2f:	add    BYTE PTR [rax+0x6f],ch
   140008e32:	jae    0x140008ea8
   140008e34:	pop    rdi
   140008e35:	jne    0x140008ea5
   140008e37:	jb     0x140008e9e
   140008e39:	(bad)  
   140008e3a:	movsxd ebp,DWORD PTR [rax+0x61]
   140008e3d:	(bad)  
   140008e3e:	ins    BYTE PTR es:[rdi],dx
   140008e3f:	add    BYTE PTR gs:[rax],al
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	add    BYTE PTR [rax],al
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	outs   dx,DWORD PTR ds:[rsi]
   140008e49:	jo     0x140008eb0
   140008e4b:	jb     0x140008eae
   140008e4d:	je     0x140008eb8
   140008e4f:	outs   dx,DWORD PTR ds:[rsi]
   140008e50:	outs   dx,BYTE PTR ds:[rsi]
   140008e51:	pop    rdi
   140008e52:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140008e59:	jb     0x140008ec0
   140008e5b:	jae    0x140008ed0
   140008e5d:	add    BYTE PTR [rax],al
   140008e5f:	add    BYTE PTR [rcx+0x6e],ch
   140008e62:	je     0x140008ec9
   140008e64:	jb     0x140008ed8
   140008e66:	jne    0x140008ed8
   140008e68:	je     0x140008ecf
   140008e6a:	add    BYTE PTR fs:[rax],al
   140008e6d:	add    BYTE PTR [rax],al
   140008e6f:	add    BYTE PTR [rcx+0x6e],ch
   140008e72:	jbe    0x140008ed5
   140008e74:	ins    BYTE PTR es:[rdi],dx
   140008e75:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   140008e7d:	outs   dx,BYTE PTR gs:[rsi]
   140008e7f:	je     0x140008e81
   140008e81:	add    BYTE PTR [rax],al
   140008e83:	add    BYTE PTR [rax],al
   140008e85:	add    BYTE PTR [rax],al
   140008e87:	add    BYTE PTR [rcx+0x6c],ah
   140008e8a:	jb     0x140008ef1
   140008e8c:	(bad)  
   140008e8d:	fs jns 0x140008eef
   140008e90:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008e93:	outs   dx,BYTE PTR ds:[rsi]
   140008e94:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008e99:	add    BYTE PTR [rax],al
   140008e9b:	add    BYTE PTR [rax],al
   140008e9d:	add    BYTE PTR [rax],al
   140008e9f:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140008ea3:	pop    rdi
   140008ea4:	ins    DWORD PTR es:[rdi],dx
   140008ea5:	(bad)  
   140008ea6:	outs   dx,BYTE PTR ds:[rsi]
   140008ea7:	jns    0x140008f08
   140008ea9:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140008eb0:	jo     0x140008f17
   140008eb2:	outs   dx,BYTE PTR ds:[rsi]
   140008eb3:	add    BYTE PTR [rax],al
   140008eb5:	add    BYTE PTR [rax],al
   140008eb7:	add    BYTE PTR [rbp+0x65],ch
   140008eba:	jae    0x140008f2f
   140008ebc:	(bad)  
   140008ebd:	addr32 gs pop rdi
   140008ec0:	jae    0x140008f2b
   140008ec2:	jp     0x140008f29
   140008ec4:	add    BYTE PTR [rax],al
   140008ec6:	add    BYTE PTR [rax],al
   140008ec8:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   140008ecf:	gs pop rdi
   140008ed1:	je     0x140008f42
   140008ed3:	outs   dx,DWORD PTR ds:[rsi]
   140008ed4:	pop    rdi
   140008ed5:	ins    BYTE PTR es:[rdi],dx
   140008ed6:	outs   dx,DWORD PTR ds:[rsi]
   140008ed7:	outs   dx,BYTE PTR ds:[rsi]
   140008ed8:	add    BYTE PTR [eax],al
   140008edb:	add    BYTE PTR [rax],al
   140008edd:	add    BYTE PTR [rax],al
   140008edf:	add    BYTE PTR [rsi+0x65],ch
   140008ee2:	je     0x140008f5b
   140008ee4:	outs   dx,DWORD PTR ds:[rsi]
   140008ee5:	jb     0x140008f52
   140008ee7:	pop    rdi
   140008ee8:	outs   dx,DWORD PTR fs:[rsi]
   140008eea:	ja     0x140008f5a
   140008eec:	add    BYTE PTR [rax],al
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	outs   dx,BYTE PTR ds:[rsi]
   140008ef1:	gs je  0x140008f6b
   140008ef4:	outs   dx,DWORD PTR ds:[rsi]
   140008ef5:	jb     0x140008f62
   140008ef7:	pop    rdi
   140008ef8:	jb     0x140008f5f
   140008efa:	jae    0x140008f61
   140008efc:	je     0x140008efe
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	outs   dx,BYTE PTR ds:[rsi]
   140008f01:	gs je  0x140008f7b
   140008f04:	outs   dx,DWORD PTR ds:[rsi]
   140008f05:	jb     0x140008f72
   140008f07:	pop    rdi
   140008f08:	jne    0x140008f78
   140008f0a:	jb     0x140008f71
   140008f0c:	(bad)  
   140008f0d:	movsxd ebp,DWORD PTR [rax+0x61]
   140008f10:	(bad)  
   140008f11:	ins    BYTE PTR es:[rdi],dx
   140008f12:	add    BYTE PTR gs:[rax],al
   140008f15:	add    BYTE PTR [rax],al
   140008f17:	add    BYTE PTR [rsi+0x6f],ch
   140008f1a:	pop    rdi
   140008f1b:	(bad)  
   140008f1c:	jne    0x140008f84
   140008f1e:	data16 gs jb 0x140008f81
   140008f22:	jae    0x140008f94
   140008f24:	(bad)  
   140008f25:	movsxd esp,DWORD PTR [rbp+0x0]
   140008f28:	outs   dx,BYTE PTR ds:[rsi]
   140008f29:	outs   dx,DWORD PTR ds:[rsi]
   140008f2a:	pop    rdi
   140008f2b:	jo     0x140008f9f
   140008f2d:	outs   dx,DWORD PTR ds:[rsi]
   140008f2e:	je     0x140008f9f
   140008f30:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008f33:	pop    rdi
   140008f34:	outs   dx,DWORD PTR ds:[rsi]
   140008f35:	jo     0x140008fab
   140008f37:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140008f3e:	add    BYTE PTR [rax],al
   140008f40:	outs   dx,BYTE PTR ds:[rsi]
   140008f41:	outs   dx,DWORD PTR ds:[rsi]
   140008f42:	je     0x140008fa3
   140008f44:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008f47:	outs   dx,BYTE PTR ds:[rsi]
   140008f48:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008f4d:	add    BYTE PTR [rax],al
   140008f4f:	add    BYTE PTR [rsi+0x6f],ch
   140008f52:	je     0x140008fb3
   140008f54:	(bad)  
   140008f55:	pop    rdi
   140008f56:	jae    0x140008fc7
   140008f58:	movsxd ebp,DWORD PTR [rbx+0x65]
   140008f5b:	je     0x140008f5d
   140008f5d:	add    BYTE PTR [rax],al
   140008f5f:	add    BYTE PTR [rdi+0x70],ch
   140008f62:	gs jb  0x140008fc6
   140008f65:	je     0x140008fd0
   140008f67:	outs   dx,DWORD PTR ds:[rsi]
   140008f68:	outs   dx,BYTE PTR ds:[rsi]
   140008f69:	pop    rdi
   140008f6a:	outs   dx,BYTE PTR ds:[rsi]
   140008f6b:	outs   dx,DWORD PTR ds:[rsi]
   140008f6c:	je     0x140008fcd
   140008f6e:	jae    0x140008fe5
   140008f70:	jo     0x140008fe2
   140008f72:	outs   dx,DWORD PTR ds:[rsi]
   140008f73:	jb     0x140008fe9
   140008f75:	gs add BYTE PTR fs:[rax+0x72],dh
   140008f7a:	outs   dx,DWORD PTR ds:[rsi]
   140008f7b:	je     0x140008fec
   140008f7d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008f80:	pop    rdi
   140008f81:	outs   dx,BYTE PTR ds:[rsi]
   140008f82:	outs   dx,DWORD PTR ds:[rsi]
   140008f83:	je     0x140008fe4
   140008f85:	jae    0x140008ffc
   140008f87:	jo     0x140008ff9
   140008f89:	outs   dx,DWORD PTR ds:[rsi]
   140008f8a:	jb     0x140009000
   140008f8c:	gs add BYTE PTR fs:[rax],al
   140008f90:	ja     0x140009004
   140008f92:	outs   dx,DWORD PTR ds:[rsi]
   140008f93:	outs   dx,BYTE PTR ds:[rsi]
   140008f94:	addr32 pop rdi
   140008f96:	jo     0x14000900a
   140008f98:	outs   dx,DWORD PTR ds:[rsi]
   140008f99:	je     0x14000900a
   140008f9b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008f9e:	pop    rdi
   140008f9f:	je     0x14000901a
   140008fa1:	jo     0x140009008
   140008fa3:	add    BYTE PTR [rax],al
   140008fa5:	add    BYTE PTR [rax],al
   140008fa7:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   140008fab:	gs fs pop rdi
   140008fae:	outs   dx,DWORD PTR ds:[rsi]
   140008faf:	jne    0x140009025
   140008fb1:	add    BYTE PTR [rax],al
   140008fb3:	add    BYTE PTR [rax],al
   140008fb5:	add    BYTE PTR [rax],al
   140008fb7:	add    BYTE PTR [rdi+0x70],ch
   140008fba:	gs jb  0x14000901e
   140008fbd:	je     0x140009028
   140008fbf:	outs   dx,DWORD PTR ds:[rsi]
   140008fc0:	outs   dx,BYTE PTR ds:[rsi]
   140008fc1:	pop    rdi
   140008fc2:	ja     0x140009033
   140008fc4:	jne    0x140009032
   140008fc6:	fs pop rdi
   140008fc8:	(bad)  
   140008fc9:	ins    BYTE PTR es:[rdi],dx
   140008fca:	outs   dx,DWORD PTR ds:[rsi]
   140008fcb:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	data16 add BYTE PTR [rax],al
   140008fd3:	add    BYTE PTR [rax],al
   140008fd5:	add    BYTE PTR [rax],al
   140008fd7:	add    al,al
   140008fd9:	xchg   esp,eax
   140008fda:	add    BYTE PTR [rax+0x1],al
   140008fdd:	add    BYTE PTR [rax],al
   140008fdf:	add    BYTE PTR [rax+rax*1+0x0],ah
   140008fe3:	add    BYTE PTR [rax],al
   140008fe5:	add    BYTE PTR [rax],al
   140008fe7:	add    al,ah
   140008fe9:	xchg   esp,eax
   140008fea:	add    BYTE PTR [rax+0x1],al
   140008fed:	add    BYTE PTR [rax],al
   140008fef:	add    BYTE PTR [rbp+0x0],ah
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	lock xchg esp,eax
   140008ffa:	add    BYTE PTR [rax+0x1],al
   140008ffd:	add    BYTE PTR [rax],al
   140008fff:	add    BYTE PTR [rcx+0x0],dh
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	or     BYTE PTR [rbp+0x14000],dl
   14000900e:	add    BYTE PTR [rax],al
   140009010:	(bad)  
   140009011:	add    BYTE PTR [rax],al
   140009013:	add    BYTE PTR [rax],al
   140009015:	add    BYTE PTR [rax],al
   140009017:	add    BYTE PTR [rax],ah
   140009019:	xchg   ebp,eax
   14000901a:	add    BYTE PTR [rax+0x1],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rcx],ah
   140009021:	add    BYTE PTR [rax],al
   140009023:	add    BYTE PTR [rax],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rax],bh
   140009029:	xchg   ebp,eax
   14000902a:	add    BYTE PTR [rax+0x1],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rsi],cl
   140009031:	add    BYTE PTR [rax],al
   140009033:	add    BYTE PTR [rax],al
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rax-0x6b],dl
   14000903a:	add    BYTE PTR [rax+0x1],al
   14000903d:	add    BYTE PTR [rax],al
   14000903f:	add    BYTE PTR [rcx],cl
   140009041:	add    BYTE PTR [rax],al
   140009043:	add    BYTE PTR [rax],al
   140009045:	add    BYTE PTR [rax],al
   140009047:	add    BYTE PTR [rax-0x6b],ah
   14000904a:	add    BYTE PTR [rax+0x1],al
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rax+0x0],ch
   140009052:	add    BYTE PTR [rax],al
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax],al
   140009058:	js     0x140008fef
   14000905a:	add    BYTE PTR [rax+0x1],al
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rax],ah
   140009061:	add    BYTE PTR [rax],al
   140009063:	add    BYTE PTR [rax],al
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rax+0x1400095],cl
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    BYTE PTR [rdx+0x0],ch
   140009072:	add    BYTE PTR [rax],al
   140009074:	add    BYTE PTR [rax],al
   140009076:	add    BYTE PTR [rax],al
   140009078:	cwde   
   140009079:	xchg   ebp,eax
   14000907a:	add    BYTE PTR [rax+0x1],al
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    BYTE PTR [rdi+0x0],ah
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    BYTE PTR [rax],al
   140009086:	add    BYTE PTR [rax],al
   140009088:	mov    al,0x95
   14000908a:	add    BYTE PTR [rax+0x1],al
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rbx+0x0],ch
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	rcl    BYTE PTR [rbp+0x14000],1
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	ins    BYTE PTR es:[rdi],dx
   1400090a1:	add    BYTE PTR [rax],al
   1400090a3:	add    BYTE PTR [rax],al
   1400090a5:	add    BYTE PTR [rax],al
   1400090a7:	add    al,ch
   1400090a9:	xchg   ebp,eax
   1400090aa:	add    BYTE PTR [rax+0x1],al
   1400090ad:	add    BYTE PTR [rax],al
   1400090af:	add    BYTE PTR [rdx],dl
   1400090b1:	add    BYTE PTR [rax],al
   1400090b3:	add    BYTE PTR [rax],al
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    al,bl
   1400090b9:	mov    WORD PTR [rax],es
   1400090bb:	rex add DWORD PTR [rax],eax
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	ins    DWORD PTR es:[rdi],dx
	...
   1400090c9:	xchg   esi,eax
   1400090ca:	add    BYTE PTR [rax+0x1],al
   1400090cd:	add    BYTE PTR [rax],al
   1400090cf:	add    BYTE PTR [rax],dl
   1400090d1:	add    BYTE PTR [rax],al
   1400090d3:	add    BYTE PTR [rax],al
   1400090d5:	add    BYTE PTR [rax],al
   1400090d7:	add    al,ah
   1400090d9:	mov    eax,DWORD PTR [rax]
   1400090db:	rex add DWORD PTR [rax],eax
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	sub    DWORD PTR [rax],eax
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	add    BYTE PTR [rax],al
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	or     BYTE PTR [rax+rax*1+0x140],cl
   1400090ef:	add    BYTE PTR [rax],cl
   1400090f1:	add    BYTE PTR [rax],al
   1400090f3:	add    BYTE PTR [rax],al
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    BYTE PTR [rax],ah
   1400090f9:	xchg   esi,eax
   1400090fa:	add    BYTE PTR [rax+0x1],al
   1400090fd:	add    BYTE PTR [rax],al
   1400090ff:	add    BYTE PTR [rcx],dl
   140009101:	add    BYTE PTR [rax],al
   140009103:	add    BYTE PTR [rax],al
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rax+0x140008b],ch
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rbx],bl
   140009111:	add    BYTE PTR [rax],al
   140009113:	add    BYTE PTR [rax],al
   140009115:	add    BYTE PTR [rax],al
   140009117:	add    BYTE PTR [rax],bh
   140009119:	xchg   esi,eax
   14000911a:	add    BYTE PTR [rax+0x1],al
   14000911d:	add    BYTE PTR [rax],al
   14000911f:	add    BYTE PTR [rsi],ah
   140009121:	add    BYTE PTR [rax],al
   140009123:	add    BYTE PTR [rax],al
   140009125:	add    BYTE PTR [rax],al
   140009127:	add    al,cl
   140009129:	mov    eax,DWORD PTR [rax]
   14000912b:	rex add DWORD PTR [rax],eax
   14000912e:	add    BYTE PTR [rax],al
   140009130:	sub    BYTE PTR [rax],al
   140009132:	add    BYTE PTR [rax],al
   140009134:	add    BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	jo     0x1400090c6
   14000913a:	add    BYTE PTR [rax+0x1],al
   14000913d:	add    BYTE PTR [rax],al
   14000913f:	add    BYTE PTR [rsi+0x0],ch
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	xchg   rsi,rax
   14000914a:	add    BYTE PTR [rax+0x1],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    BYTE PTR [rdi+0x0],ch
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	(bad)  
   140009159:	xchg   esi,eax
   14000915a:	add    BYTE PTR [rax+0x1],al
   14000915d:	add    BYTE PTR [rax],al
   14000915f:	add    BYTE PTR [rdx],ch
   140009161:	add    BYTE PTR [rax],al
   140009163:	add    BYTE PTR [rax],al
   140009165:	add    BYTE PTR [rax],al
   140009167:	add    BYTE PTR [rax-0x6a],bh
   14000916a:	add    BYTE PTR [rax+0x1],al
   14000916d:	add    BYTE PTR [rax],al
   14000916f:	add    BYTE PTR [rcx],bl
   140009171:	add    BYTE PTR [rax],al
   140009173:	add    BYTE PTR [rax],al
   140009175:	add    BYTE PTR [rax],al
   140009177:	add    BYTE PTR [rax+0x1400096],dl
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rax+rax*1],al
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	(bad)  
   140009189:	mov    es,WORD PTR [rax]
   14000918b:	rex add DWORD PTR [rax],eax
   14000918e:	add    BYTE PTR [rax],al
   140009190:	(bad)  
   140009191:	add    BYTE PTR [rax],al
   140009193:	add    BYTE PTR [rax],al
   140009195:	add    BYTE PTR [rax],al
   140009197:	add    BYTE PTR [rax],ah
   140009199:	mov    WORD PTR [rax],es
   14000919b:	rex add DWORD PTR [rax],eax
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	sbb    eax,0x0
   1400091a5:	add    BYTE PTR [rax],al
   1400091a7:	add    BYTE PTR [rax+0x1400096],bh
   1400091ad:	add    BYTE PTR [rax],al
   1400091af:	add    BYTE PTR [rip+0x0],al        # 0x1400091b5
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    al,bh
   1400091b9:	mov    eax,DWORD PTR [rax]
   1400091bb:	rex add DWORD PTR [rax],eax
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	adc    eax,0x0
   1400091c5:	add    BYTE PTR [rax],al
   1400091c7:	add    al,cl
   1400091c9:	xchg   esi,eax
   1400091ca:	add    BYTE PTR [rax+0x1],al
   1400091cd:	add    BYTE PTR [rax],al
   1400091cf:	add    BYTE PTR [rbx+0x0],dh
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	add    BYTE PTR [rax],al
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	fcom   DWORD PTR [rsi+0x14000]
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	je     0x1400091e2
   1400091e2:	add    BYTE PTR [rax],al
   1400091e4:	add    BYTE PTR [rax],al
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	call   0x141409283
   1400091ed:	add    BYTE PTR [rax],al
   1400091ef:	add    BYTE PTR [rbp+0x0],dh
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	add    BYTE PTR [rax],al
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	clc    
   1400091f9:	xchg   esi,eax
   1400091fa:	add    BYTE PTR [rax+0x1],al
   1400091fd:	add    BYTE PTR [rax],al
   1400091ff:	add    BYTE PTR [rsi+0x0],dh
   140009202:	add    BYTE PTR [rax],al
   140009204:	add    BYTE PTR [rax],al
   140009206:	add    BYTE PTR [rax],al
   140009208:	or     BYTE PTR [rdi+0x14000],dl
   14000920e:	add    BYTE PTR [rax],al
   140009210:	ja     0x140009212
   140009212:	add    BYTE PTR [rax],al
   140009214:	add    BYTE PTR [rax],al
   140009216:	add    BYTE PTR [rax],al
   140009218:	and    BYTE PTR [rdi+0x14000],dl
   14000921e:	add    BYTE PTR [rax],al
   140009220:	or     al,BYTE PTR [rax]
   140009222:	add    BYTE PTR [rax],al
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	xor    BYTE PTR [rdi+0x14000],dl
   14000922e:	add    BYTE PTR [rax],al
   140009230:	jns    0x140009232
   140009232:	add    BYTE PTR [rax],al
   140009234:	add    BYTE PTR [rax],al
   140009236:	add    BYTE PTR [rax],al
   140009238:	xchg   rdi,rax
   14000923a:	add    BYTE PTR [rax+0x1],al
   14000923d:	add    BYTE PTR [rax],al
   14000923f:	add    BYTE PTR [rdi],ah
   140009241:	add    BYTE PTR [rax],al
   140009243:	add    BYTE PTR [rax],al
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    BYTE PTR [rax+0x140008c],cl
   14000924d:	add    BYTE PTR [rax],al
   14000924f:	add    BYTE PTR [rax+0x0],bh
   140009252:	add    BYTE PTR [rax],al
   140009254:	add    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	push   rax
   140009259:	xchg   edi,eax
   14000925a:	add    BYTE PTR [rax+0x1],al
   14000925d:	add    BYTE PTR [rax],al
   14000925f:	add    BYTE PTR [rdx+0x0],bh
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	push   0x1400097
   14000926d:	add    BYTE PTR [rax],al
   14000926f:	add    BYTE PTR [rbx+0x0],bh
   140009272:	add    BYTE PTR [rax],al
   140009274:	add    BYTE PTR [rax],al
   140009276:	add    BYTE PTR [rax],al
   140009278:	js     0x140009211
   14000927a:	add    BYTE PTR [rax+0x1],al
   14000927d:	add    BYTE PTR [rax],al
   14000927f:	add    BYTE PTR [rax+rax*1],bl
   140009282:	add    BYTE PTR [rax],al
   140009284:	add    BYTE PTR [rax],al
   140009286:	add    BYTE PTR [rax],al
   140009288:	cmp    BYTE PTR [rax+rax*1+0x140],cl
   14000928f:	add    BYTE PTR [rax+rax*1+0x0],bh
   140009293:	add    BYTE PTR [rax],al
   140009295:	add    BYTE PTR [rax],al
   140009297:	add    BYTE PTR [rax+0x1400097],dl
   14000929d:	add    BYTE PTR [rax],al
   14000929f:	add    BYTE PTR [rsi],al
   1400092a1:	add    BYTE PTR [rax],al
   1400092a3:	add    BYTE PTR [rax],al
   1400092a5:	add    BYTE PTR [rax],al
   1400092a7:	add    BYTE PTR [rax+0x1400097],ch
   1400092ad:	add    BYTE PTR [rax],al
   1400092af:	add    BYTE PTR [rbx],dl
   1400092b1:	add    BYTE PTR [rax],al
   1400092b3:	add    BYTE PTR [rax],al
   1400092b5:	add    BYTE PTR [rax],al
   1400092b7:	add    BYTE PTR [rax+0x140008b],bh
   1400092bd:	add    BYTE PTR [rax],al
   1400092bf:	add    BYTE PTR [rdx],al
   1400092c1:	add    BYTE PTR [rax],al
   1400092c3:	add    BYTE PTR [rax],al
   1400092c5:	add    BYTE PTR [rax],al
   1400092c7:	add    BYTE PTR [rax-0x74],dl
   1400092ca:	add    BYTE PTR [rax+0x1],al
   1400092cd:	add    BYTE PTR [rax],al
   1400092cf:	add    BYTE PTR [rbx],al
   1400092d1:	add    BYTE PTR [rax],al
   1400092d3:	add    BYTE PTR [rax],al
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    al,cl
   1400092d9:	xchg   edi,eax
   1400092da:	add    BYTE PTR [rax+0x1],al
   1400092dd:	add    BYTE PTR [rax],al
   1400092df:	add    BYTE PTR [rax+rax*1],dl
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	add    BYTE PTR [rax],al
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	fcom   DWORD PTR [rdi+0x14000]
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	add    BYTE PTR [rax],0x0
   1400092f3:	add    BYTE PTR [rax],al
   1400092f5:	add    BYTE PTR [rax],al
   1400092f7:	add    al,ch
   1400092f9:	xchg   edi,eax
   1400092fa:	add    BYTE PTR [rax+0x1],al
   1400092fd:	add    BYTE PTR [rax],al
   1400092ff:	add    BYTE PTR [rbp+0x0],bh
   140009302:	add    BYTE PTR [rax],al
   140009304:	add    BYTE PTR [rax],al
   140009306:	add    BYTE PTR [rax],al
   140009308:	clc    
   140009309:	xchg   edi,eax
   14000930a:	add    BYTE PTR [rax+0x1],al
   14000930d:	add    BYTE PTR [rax],al
   14000930f:	add    BYTE PTR [rsi+0x0],bh
   140009312:	add    BYTE PTR [rax],al
   140009314:	add    BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	or     BYTE PTR [rax+0x14000],bl
   14000931e:	add    BYTE PTR [rax],al
   140009320:	or     al,0x0
   140009322:	add    BYTE PTR [rax],al
   140009324:	add    BYTE PTR [rax],al
   140009326:	add    BYTE PTR [rax],al
   140009328:	movabs al,ds:0x810000000140008c
   140009331:	add    BYTE PTR [rax],al
   140009333:	add    BYTE PTR [rax],al
   140009335:	add    BYTE PTR [rax],al
   140009337:	add    BYTE PTR [rax],bl
   140009339:	cwde   
   14000933a:	add    BYTE PTR [rax+0x1],al
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    BYTE PTR [rcx+0x0],ch
   140009342:	add    BYTE PTR [rax],al
   140009344:	add    BYTE PTR [rax],al
   140009346:	add    BYTE PTR [rax],al
   140009348:	lock mov WORD PTR [rax],es
   14000934b:	rex add DWORD PTR [rax],eax
   14000934e:	add    BYTE PTR [rax],al
   140009350:	jo     0x140009352
   140009352:	add    BYTE PTR [rax],al
   140009354:	add    BYTE PTR [rax],al
   140009356:	add    BYTE PTR [rax],al
   140009358:	sub    BYTE PTR [rax+0x14000],bl
   14000935e:	add    BYTE PTR [rax],al
   140009360:	add    DWORD PTR [rax],eax
   140009362:	add    BYTE PTR [rax],al
   140009364:	add    BYTE PTR [rax],al
   140009366:	add    BYTE PTR [rax],al
   140009368:	rex cwde 
   14000936a:	add    BYTE PTR [rax+0x1],al
   14000936d:	add    BYTE PTR [rax],al
   14000936f:	add    BYTE PTR [rdx+0x0],al
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    BYTE PTR [rax-0x68],bl
   14000937a:	add    BYTE PTR [rax+0x1],al
   14000937d:	add    BYTE PTR [rax],al
   14000937f:	add    BYTE PTR [rax+rax*1+0x0],cl
   140009386:	add    BYTE PTR [rax],al
   140009388:	jo     0x140009322
   14000938a:	add    BYTE PTR [rax+0x1],al
   14000938d:	add    BYTE PTR [rax],al
   14000938f:	add    BYTE PTR [rbp+0x0],al
   140009395:	add    BYTE PTR [rax],al
   140009397:	add    BYTE PTR [rax+0x1400098],cl
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rip+0x0],cl        # 0x1400093a5
   1400093a5:	add    BYTE PTR [rax],al
   1400093a7:	add    BYTE PTR [rax+0x140008b],dl
   1400093ad:	add    BYTE PTR [rax],al
   1400093af:	add    BYTE PTR [rsi+0x0],al
   1400093b5:	add    BYTE PTR [rax],al
   1400093b7:	add    BYTE PTR [rax+0x1400098],bl
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rdi+0x0],al
   1400093c5:	add    BYTE PTR [rax],al
   1400093c7:	add    BYTE PTR [rax+0x1400098],ch
   1400093cd:	add    BYTE PTR [rax],al
   1400093cf:	add    BYTE PTR [rsi],bl
   1400093d1:	add    BYTE PTR [rax],al
   1400093d3:	add    BYTE PTR [rax],al
   1400093d5:	add    BYTE PTR [rax],al
   1400093d7:	add    al,al
   1400093d9:	cwde   
   1400093da:	add    BYTE PTR [rax+0x1],al
   1400093dd:	add    BYTE PTR [rax],al
   1400093df:	add    BYTE PTR [rax+rax*1],ah
   1400093e2:	add    BYTE PTR [rax],al
   1400093e4:	add    BYTE PTR [rax],al
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	fcomp  DWORD PTR [rax+0x14000]
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	or     eax,DWORD PTR [rax]
   1400093f2:	add    BYTE PTR [rax],al
   1400093f4:	add    BYTE PTR [rax],al
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	mov    eax,0x140008c
   1400093fd:	add    BYTE PTR [rax],al
   1400093ff:	add    BYTE PTR [rdx],ah
   140009401:	add    BYTE PTR [rax],al
   140009403:	add    BYTE PTR [rax],al
   140009405:	add    BYTE PTR [rax],al
   140009407:	add    al,bh
   140009409:	cwde   
   14000940a:	add    BYTE PTR [rax+0x1],al
   14000940d:	add    BYTE PTR [rax],al
   14000940f:	add    BYTE PTR [rdi+0x0],bh
   140009412:	add    BYTE PTR [rax],al
   140009414:	add    BYTE PTR [rax],al
   140009416:	add    BYTE PTR [rax],al
   140009418:	adc    BYTE PTR [rcx+0x14000],bl
   14000941e:	add    BYTE PTR [rax],al
   140009420:	mov    DWORD PTR [rax],eax
   140009422:	add    BYTE PTR [rax],al
   140009424:	add    BYTE PTR [rax],al
   140009426:	add    BYTE PTR [rax],al
   140009428:	sub    BYTE PTR [rcx+0x14000],bl
   14000942e:	add    BYTE PTR [rax],al
   140009430:	mov    eax,DWORD PTR [rax]
   140009432:	add    BYTE PTR [rax],al
   140009434:	add    BYTE PTR [rax],al
   140009436:	add    BYTE PTR [rax],al
   140009438:	cmp    BYTE PTR [rcx+0x14000],bl
   14000943e:	add    BYTE PTR [rax],al
   140009440:	mov    al,BYTE PTR [rax]
   140009442:	add    BYTE PTR [rax],al
   140009444:	add    BYTE PTR [rax],al
   140009446:	add    BYTE PTR [rax],al
   140009448:	cqo    
   14000944a:	add    BYTE PTR [rax+0x1],al
   14000944d:	add    BYTE PTR [rax],al
   14000944f:	add    BYTE PTR [rdi],dl
   140009451:	add    BYTE PTR [rax],al
   140009453:	add    BYTE PTR [rax],al
   140009455:	add    BYTE PTR [rax],al
   140009457:	add    BYTE PTR [rax-0x67],bl
   14000945a:	add    BYTE PTR [rax+0x1],al
   14000945d:	add    BYTE PTR [rax],al
   14000945f:	add    BYTE PTR [rax],bl
   140009461:	add    BYTE PTR [rax],al
   140009463:	add    BYTE PTR [rax],al
   140009465:	add    BYTE PTR [rax],al
   140009467:	add    BYTE PTR [rax],cl
   140009469:	lea    eax,[rax]
   14000946b:	rex add DWORD PTR [rax],eax
   14000946e:	add    BYTE PTR [rax],al
   140009470:	(bad)  
   140009471:	add    BYTE PTR [rax],al
   140009473:	add    BYTE PTR [rax],al
   140009475:	add    BYTE PTR [rax],al
   140009477:	add    BYTE PTR [rax-0x67],bh
   14000947a:	add    BYTE PTR [rax+0x1],al
   14000947d:	add    BYTE PTR [rax],al
   14000947f:	add    BYTE PTR [rdx+0x0],dh
   140009482:	add    BYTE PTR [rax],al
   140009484:	add    BYTE PTR [rax],al
   140009486:	add    BYTE PTR [rax],al
   140009488:	mov    BYTE PTR [rcx+0x14000],bl
   14000948e:	add    BYTE PTR [rax],al
   140009490:	test   BYTE PTR [rax],al
   140009492:	add    BYTE PTR [rax],al
   140009494:	add    BYTE PTR [rax],al
   140009496:	add    BYTE PTR [rax],al
   140009498:	test   al,0x99
   14000949a:	add    BYTE PTR [rax+0x1],al
   14000949d:	add    BYTE PTR [rax],al
   14000949f:	add    BYTE PTR [rax+0x0],cl
   1400094a5:	add    BYTE PTR [rax],al
   1400094a7:	add    BYTE PTR [rax+0x1400099],bh
	...
   1400094bd:	add    BYTE PTR [rax],al
   1400094bf:	add    BYTE PTR [rcx+0x64],ah
   1400094c2:	fs jb  0x14000952a
   1400094c5:	jae    0x14000953a
   1400094c7:	and    BYTE PTR [rsi+0x61],ah
   1400094ca:	ins    DWORD PTR es:[rdi],dx
   1400094cb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   1400094d3:	jae    0x14000954a
   1400094d5:	jo     0x140009547
   1400094d7:	outs   dx,DWORD PTR ds:[rsi]
   1400094d8:	jb     0x14000954e
   1400094da:	gs add BYTE PTR fs:[rax],al
   1400094de:	add    BYTE PTR [rax],al
   1400094e0:	(bad)  
   1400094e1:	fs fs jb 0x14000954a
   1400094e5:	jae    0x14000955a
   1400094e7:	and    BYTE PTR [rcx+0x6e],ch
   1400094ea:	and    BYTE PTR [rbp+0x73],dh
   1400094ed:	add    BYTE PTR gs:[rax],al
   1400094f0:	(bad)  
   1400094f1:	fs fs jb 0x14000955a
   1400094f5:	jae    0x14000956a
   1400094f7:	and    BYTE PTR [rsi+0x6f],ch
   1400094fa:	je     0x14000951c
   1400094fc:	(bad)  
   1400094fd:	jbe    0x140009560
   1400094ff:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140009507:	add    BYTE PTR [rcx+0x6c],ah
   14000950a:	jb     0x140009571
   14000950c:	(bad)  
   14000950d:	fs jns 0x140009530
   140009510:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009513:	outs   dx,BYTE PTR ds:[rsi]
   140009514:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140009519:	add    BYTE PTR [rax],al
   14000951b:	add    BYTE PTR [rax],al
   14000951d:	add    BYTE PTR [rax],al
   14000951f:	add    BYTE PTR [rcx+0x72],ah
   140009522:	addr32 jne 0x140009592
   140009525:	outs   dx,BYTE PTR gs:[rsi]
   140009527:	je     0x140009549
   140009529:	ins    BYTE PTR es:[rdi],dx
   14000952a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   140009531:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140009535:	add    BYTE PTR [eax],al
   140009538:	(bad)  
   140009539:	jb     0x1400095a2
   14000953b:	jne    0x1400095aa
   14000953d:	outs   dx,BYTE PTR gs:[rsi]
   14000953f:	je     0x140009561
   140009541:	outs   dx,DWORD PTR ds:[rsi]
   140009542:	jne    0x1400095b8
   140009544:	and    BYTE PTR [rdi+0x66],ch
   140009547:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   14000954b:	(bad)  
   14000954c:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   140009553:	and    BYTE PTR [rcx+0x64],ah
   140009556:	fs jb  0x1400095be
   140009559:	jae    0x1400095ce
   14000955b:	add    BYTE PTR [rax],al
   14000955d:	add    BYTE PTR [rax],al
   14000955f:	add    BYTE PTR [rdx+0x61],ah
   140009562:	and    BYTE PTR fs:[rsi+0x69],ah
   140009566:	ins    BYTE PTR es:[rdi],dx
   140009567:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14000956c:	movsxd esi,DWORD PTR [rdx+0x69]
   14000956f:	jo     0x1400095e5
   140009571:	outs   dx,DWORD PTR ds:[rsi]
   140009572:	jb     0x140009574
   140009574:	add    BYTE PTR [rax],al
   140009576:	add    BYTE PTR [rax],al
   140009578:	(bad)
   14000957d:	gs jae 0x1400095f3
   140009580:	(bad)  
   140009581:	add    BYTE PTR gs:[eax],al
   140009585:	add    BYTE PTR [rax],al
   140009587:	add    BYTE PTR [rdx+0x72],ah
   14000958a:	outs   dx,DWORD PTR ds:[rsi]
   14000958b:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14000958f:	jo     0x1400095fa
   140009591:	jo     0x1400095f8
   140009593:	add    BYTE PTR [rax],al
   140009595:	add    BYTE PTR [rax],al
   140009597:	add    BYTE PTR [rbx+0x6f],ah
   14000959a:	outs   dx,BYTE PTR ds:[rsi]
   14000959b:	outs   dx,BYTE PTR ds:[rsi]
   14000959c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095a1:	outs   dx,BYTE PTR ds:[rsi]
   1400095a2:	and    BYTE PTR [rcx+0x62],ah
   1400095a5:	outs   dx,DWORD PTR ds:[rsi]
   1400095a6:	jb     0x14000961c
   1400095a8:	gs add BYTE PTR fs:[rax],al
   1400095ac:	add    BYTE PTR [rax],al
   1400095ae:	add    BYTE PTR [rax],al
   1400095b0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400095b3:	outs   dx,BYTE PTR ds:[rsi]
   1400095b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095b9:	outs   dx,BYTE PTR ds:[rsi]
   1400095ba:	and    BYTE PTR [rcx+0x6c],ah
   1400095bd:	jb     0x140009624
   1400095bf:	(bad)  
   1400095c0:	fs jns 0x1400095e3
   1400095c3:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   1400095ca:	jb     0x140009631
   1400095cc:	jae    0x140009641
   1400095ce:	add    BYTE PTR [rax],al
   1400095d0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400095d3:	outs   dx,BYTE PTR ds:[rsi]
   1400095d4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095d9:	outs   dx,BYTE PTR ds:[rsi]
   1400095da:	and    BYTE PTR [rdx+0x65],dh
   1400095dd:	data16 jne 0x140009653
   1400095e0:	gs add BYTE PTR fs:[rax],al
   1400095e4:	add    BYTE PTR [rax],al
   1400095e6:	add    BYTE PTR [rax],al
   1400095e8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400095eb:	outs   dx,BYTE PTR ds:[rsi]
   1400095ec:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095f1:	outs   dx,BYTE PTR ds:[rsi]
   1400095f2:	and    BYTE PTR [rdx+0x65],dh
   1400095f5:	jae    0x14000965c
   1400095f7:	je     0x1400095f9
   1400095f9:	add    BYTE PTR [rax],al
   1400095fb:	add    BYTE PTR [rax],al
   1400095fd:	add    BYTE PTR [rax],al
   1400095ff:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140009603:	je     0x14000966e
   140009605:	outs   dx,BYTE PTR ds:[rsi]
   140009606:	(bad)  
   140009607:	je     0x140009672
   140009609:	outs   dx,DWORD PTR ds:[rsi]
   14000960a:	outs   dx,BYTE PTR ds:[rsi]
   14000960b:	and    BYTE PTR [rcx+0x64],ah
   14000960e:	fs jb  0x140009676
   140009611:	jae    0x140009686
   140009613:	and    BYTE PTR [rdx+0x65],dh
   140009616:	jno    0x14000968d
   140009618:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14000961f:	add    BYTE PTR [rbp+0x78],ah
   140009622:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140009626:	(bad)  
   140009627:	(bad)  
   140009628:	ins    BYTE PTR es:[rdi],dx
   140009629:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000962d:	jb     0x14000969c
   14000962f:	(bad)  
   140009630:	je     0x140009652
   140009632:	gs jb  0x1400096a7
   140009635:	outs   dx,DWORD PTR ds:[rsi]
   140009636:	jb     0x140009638
   140009638:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14000963f:	outs   dx,DWORD PTR ds:[rsi]
   140009640:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140009644:	add    BYTE PTR gs:[eax],al
   140009648:	push   0x2074736f
   14000964d:	jne    0x1400096bd
   14000964f:	jb     0x1400096b6
   140009651:	(bad)  
   140009652:	movsxd ebp,DWORD PTR [rax+0x61]
   140009655:	(bad)  
   140009656:	ins    BYTE PTR es:[rdi],dx
   140009657:	add    BYTE PTR gs:[rax],al
   14000965a:	add    BYTE PTR [rax],al
   14000965c:	add    BYTE PTR [rax],al
   14000965e:	add    BYTE PTR [rax],al
   140009660:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   140009668:	gs jb  0x14000968b
   14000966b:	jb     0x1400096d2
   14000966d:	ins    DWORD PTR es:[rdi],dx
   14000966e:	outs   dx,DWORD PTR ds:[rsi]
   14000966f:	jbe    0x1400096d6
   140009671:	add    BYTE PTR fs:[rax],al
   140009674:	add    BYTE PTR [rax],al
   140009676:	add    BYTE PTR [rax],al
   140009678:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   140009680:	(bad)  
   140009681:	jns    0x1400096f7
   140009683:	and    BYTE PTR gs:[rbx+0x65],dh
   140009687:	jno    0x1400096fe
   140009689:	outs   dx,BYTE PTR gs:[rsi]
   14000968b:	movsxd esp,DWORD PTR [rbp+0x0]
   14000968e:	add    BYTE PTR [rax],al
   140009690:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   140009697:	jo     0x14000970b
   140009699:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   1400096a0:	and    BYTE PTR [rbx+0x6f],ah
   1400096a3:	outs   dx,BYTE PTR ds:[rsi]
   1400096a4:	je     0x140009718
   1400096a6:	outs   dx,DWORD PTR ds:[rsi]
   1400096a7:	ins    BYTE PTR es:[rdi],dx
   1400096a8:	and    BYTE PTR [rdi+0x70],ch
   1400096ab:	gs jb  0x14000970f
   1400096ae:	je     0x140009719
   1400096b0:	outs   dx,DWORD PTR ds:[rsi]
   1400096b1:	outs   dx,BYTE PTR ds:[rsi]
   1400096b2:	add    BYTE PTR [rax],al
   1400096b4:	add    BYTE PTR [rax],al
   1400096b6:	add    BYTE PTR [rax],al
   1400096b8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400096bf:	and    BYTE PTR [rbx+0x65],dh
   1400096c2:	imul   eax,DWORD PTR gs:[rax],0x0
   1400096c6:	add    BYTE PTR [rax],al
   1400096c8:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   1400096cf:	jb     0x140009736
   1400096d1:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400096d5:	jns    0x1400096d7
   1400096d7:	add    BYTE PTR [rbp+0x65],ch
   1400096da:	jae    0x14000974f
   1400096dc:	(bad)  
   1400096dd:	and    BYTE PTR gs:[ebx+0x69],dh
   1400096e2:	jp     0x140009749
   1400096e4:	add    BYTE PTR [rax],al
   1400096e6:	add    BYTE PTR [rax],al
   1400096e8:	outs   dx,BYTE PTR ds:[rsi]
   1400096e9:	gs je  0x140009763
   1400096ec:	outs   dx,DWORD PTR ds:[rsi]
   1400096ed:	jb     0x14000975a
   1400096ef:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   1400096f3:	outs   dx,BYTE PTR ds:[rsi]
   1400096f4:	add    BYTE PTR [rax],al
   1400096f6:	add    BYTE PTR [rax],al
   1400096f8:	outs   dx,BYTE PTR ds:[rsi]
   1400096f9:	gs je  0x140009773
   1400096fc:	outs   dx,DWORD PTR ds:[rsi]
   1400096fd:	jb     0x14000976a
   1400096ff:	and    BYTE PTR [rdx+0x65],dh
   140009702:	jae    0x140009769
   140009704:	je     0x140009706
   140009706:	add    BYTE PTR [rax],al
   140009708:	outs   dx,BYTE PTR ds:[rsi]
   140009709:	gs je  0x140009783
   14000970c:	outs   dx,DWORD PTR ds:[rsi]
   14000970d:	jb     0x14000977a
   14000970f:	and    BYTE PTR [rbp+0x6e],dh
   140009712:	jb     0x140009779
   140009714:	(bad)  
   140009715:	movsxd ebp,DWORD PTR [rax+0x61]
   140009718:	(bad)  
   140009719:	ins    BYTE PTR es:[rdi],dx
   14000971a:	add    BYTE PTR gs:[rax],al
   14000971d:	add    BYTE PTR [rax],al
   14000971f:	add    BYTE PTR [rsi+0x6f],ch
   140009722:	and    BYTE PTR [rdx+0x75],ah
   140009725:	data16 data16 gs jb 0x14000974a
   14000972a:	jae    0x14000979c
   14000972c:	(bad)  
   14000972d:	movsxd esp,DWORD PTR [rbp+0x0]
   140009730:	outs   dx,BYTE PTR ds:[rsi]
   140009731:	outs   dx,DWORD PTR ds:[rsi]
   140009732:	and    BYTE PTR [rbx+0x68],ah
   140009735:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14000973d:	gs jae 0x1400097b3
	...
   140009748:	outs   dx,BYTE PTR ds:[rsi]
   140009749:	outs   dx,DWORD PTR ds:[rsi]
   14000974a:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14000974e:	imul   eax,DWORD PTR [rax],0x6e
   140009751:	outs   dx,DWORD PTR ds:[rsi]
   140009752:	and    BYTE PTR [rbp+0x65],ch
   140009755:	jae    0x1400097ca
   140009757:	(bad)  
   140009758:	and    BYTE PTR gs:[ecx+0x76],ah
   14000975d:	(bad)  
   14000975e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140009766:	add    BYTE PTR [rax],al
   140009768:	outs   dx,BYTE PTR ds:[rsi]
   140009769:	outs   dx,DWORD PTR ds:[rsi]
   14000976a:	and    BYTE PTR [rbp+0x65],ch
   14000976d:	jae    0x1400097e2
   14000976f:	(bad)  
   140009770:	add    BYTE PTR gs:[eax],al
   140009774:	add    BYTE PTR [rax],al
   140009776:	add    BYTE PTR [rax],al
   140009778:	outs   dx,BYTE PTR ds:[rsi]
   140009779:	outs   dx,DWORD PTR ds:[rsi]
   14000977a:	and    BYTE PTR [rax+0x72],dh
   14000977d:	outs   dx,DWORD PTR ds:[rsi]
   14000977e:	je     0x1400097ef
   140009780:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140009783:	and    BYTE PTR [rdi+0x70],ch
   140009786:	je     0x1400097f1
   140009788:	outs   dx,DWORD PTR ds:[rsi]
   140009789:	outs   dx,BYTE PTR ds:[rsi]
   14000978a:	add    BYTE PTR [rax],al
   14000978c:	add    BYTE PTR [rax],al
   14000978e:	add    BYTE PTR [rax],al
   140009790:	outs   dx,BYTE PTR ds:[rsi]
   140009791:	outs   dx,DWORD PTR ds:[rsi]
   140009792:	and    BYTE PTR [rbx+0x74],dh
   140009795:	jb     0x1400097fc
   140009797:	(bad)  
   140009798:	ins    DWORD PTR es:[rdi],dx
   140009799:	and    BYTE PTR [rdx+0x65],dh
   14000979c:	jae    0x14000980d
   14000979e:	jne    0x140009812
   1400097a0:	movsxd esp,DWORD PTR [rbp+0x73]
   1400097a3:	add    BYTE PTR [rax],al
   1400097a5:	add    BYTE PTR [rax],al
   1400097a7:	add    BYTE PTR [rsi+0x6f],ch
   1400097aa:	and    BYTE PTR [rbx+0x75],dh
   1400097ad:	movsxd ebp,DWORD PTR [rax+0x20]
   1400097b0:	fs gs jbe 0x14000981d
   1400097b4:	movsxd esp,DWORD PTR [rbp+0x20]
   1400097b7:	outs   dx,DWORD PTR ds:[rsi]
   1400097b8:	jb     0x1400097da
   1400097ba:	(bad)  
   1400097bb:	fs fs jb 0x140009824
   1400097bf:	jae    0x140009834
   1400097c1:	add    BYTE PTR [rax],al
   1400097c3:	add    BYTE PTR [rax],al
   1400097c5:	add    BYTE PTR [rax],al
   1400097c7:	add    BYTE PTR [rsi+0x6f],ch
   1400097ca:	and    BYTE PTR [rbx+0x75],dh
   1400097cd:	movsxd ebp,DWORD PTR [rax+0x20]
   1400097d0:	jo     0x140009844
   1400097d2:	outs   dx,DWORD PTR ds:[rsi]
   1400097d3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400097d6:	jae    0x1400097d8
   1400097d8:	outs   dx,BYTE PTR ds:[rsi]
   1400097d9:	outs   dx,DWORD PTR ds:[rsi]
   1400097da:	je     0x1400097fc
   1400097dc:	(bad)  
   1400097dd:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   1400097e1:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400097e6:	jns    0x1400097e8
   1400097e8:	outs   dx,BYTE PTR ds:[rsi]
   1400097e9:	outs   dx,DWORD PTR ds:[rsi]
   1400097ea:	je     0x14000980c
   1400097ec:	(bad)  
   1400097ed:	and    BYTE PTR [rbx+0x6f],dh
   1400097f0:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400097f3:	je     0x1400097f5
   1400097f5:	add    BYTE PTR [rax],al
   1400097f7:	add    BYTE PTR [rsi+0x6f],ch
   1400097fa:	je     0x14000981c
   1400097fc:	(bad)  
   1400097fd:	and    BYTE PTR [rbx+0x74],dh
   140009800:	jb     0x140009867
   140009802:	(bad)  
   140009803:	ins    DWORD PTR es:[rdi],dx
   140009804:	add    BYTE PTR [rax],al
   140009806:	add    BYTE PTR [rax],al
   140009808:	outs   dx,BYTE PTR ds:[rsi]
   140009809:	outs   dx,DWORD PTR ds:[rsi]
   14000980a:	je     0x14000982c
   14000980c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000980f:	outs   dx,BYTE PTR ds:[rsi]
   140009810:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140009815:	add    BYTE PTR [rax],al
   140009817:	add    BYTE PTR [rsi+0x6f],ch
   14000981a:	je     0x14000983c
   14000981c:	jae    0x140009893
   14000981e:	jo     0x140009890
   140009820:	outs   dx,DWORD PTR ds:[rsi]
   140009821:	jb     0x140009897
   140009823:	gs add BYTE PTR fs:[rax],al
   140009827:	add    BYTE PTR [rdi+0x70],ch
   14000982a:	gs jb  0x14000988e
   14000982d:	je     0x140009898
   14000982f:	outs   dx,DWORD PTR ds:[rsi]
   140009830:	outs   dx,BYTE PTR ds:[rsi]
   140009831:	and    BYTE PTR [rcx+0x6e],ch
   140009834:	and    BYTE PTR [rax+0x72],dh
   140009837:	outs   dx,DWORD PTR ds:[rsi]
   140009838:	addr32 jb 0x1400098a0
   14000983b:	jae    0x1400098b0
   14000983d:	add    BYTE PTR [rax],al
   14000983f:	add    BYTE PTR [rdi+0x70],ch
   140009842:	gs jb  0x1400098a6
   140009845:	je     0x1400098b0
   140009847:	outs   dx,DWORD PTR ds:[rsi]
   140009848:	outs   dx,BYTE PTR ds:[rsi]
   140009849:	and    BYTE PTR [rsi+0x6f],ch
   14000984c:	je     0x14000986e
   14000984e:	jo     0x1400098b5
   140009850:	jb     0x1400098bf
   140009852:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   14000985a:	gs jb  0x1400098be
   14000985d:	je     0x1400098c8
   14000985f:	outs   dx,DWORD PTR ds:[rsi]
   140009860:	outs   dx,BYTE PTR ds:[rsi]
   140009861:	and    BYTE PTR [rsi+0x6f],ch
   140009864:	je     0x140009886
   140009866:	jae    0x1400098dd
   140009868:	jo     0x1400098da
   14000986a:	outs   dx,DWORD PTR ds:[rsi]
   14000986b:	jb     0x1400098e1
   14000986d:	gs add BYTE PTR fs:[rdi+0x70],ch
   140009872:	gs jb  0x1400098d6
   140009875:	je     0x1400098e0
   140009877:	outs   dx,DWORD PTR ds:[rsi]
   140009878:	outs   dx,BYTE PTR ds:[rsi]
   140009879:	and    BYTE PTR [rdi+0x6f],dh
   14000987c:	jne    0x1400098ea
   14000987e:	and    BYTE PTR fs:[rdx+0x6c],ah
   140009882:	outs   dx,DWORD PTR ds:[rsi]
   140009883:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009886:	add    BYTE PTR [rax],al
   140009888:	outs   dx,DWORD PTR ds:[rsi]
   140009889:	ja     0x1400098f9
   14000988b:	gs jb  0x1400098ae
   14000988e:	fs gs (bad) 
   140009891:	add    BYTE PTR fs:[rax],al
   140009894:	add    BYTE PTR [rax],al
   140009896:	add    BYTE PTR [rax],al
   140009898:	jo     0x14000990c
   14000989a:	outs   dx,DWORD PTR ds:[rsi]
   14000989b:	je     0x14000990c
   14000989d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400098a0:	and    BYTE PTR [rbp+0x72],ah
   1400098a3:	jb     0x140009914
   1400098a5:	jb     0x1400098a7
   1400098a7:	add    BYTE PTR [rax+0x72],dh
   1400098aa:	outs   dx,DWORD PTR ds:[rsi]
   1400098ab:	je     0x14000991c
   1400098ad:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400098b0:	and    BYTE PTR [rsi+0x6f],ch
   1400098b3:	je     0x1400098d5
   1400098b5:	jae    0x14000992c
   1400098b7:	jo     0x140009929
   1400098b9:	outs   dx,DWORD PTR ds:[rsi]
   1400098ba:	jb     0x140009930
   1400098bc:	gs add BYTE PTR fs:[rax],al
   1400098c0:	jb     0x140009927
   1400098c2:	(bad)  
   1400098c3:	and    BYTE PTR fs:[rdi+0x6e],ch
   1400098c7:	ins    BYTE PTR es:[rdi],dx
   1400098c8:	jns    0x1400098ea
   1400098ca:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   1400098d1:	jae    0x140009947
   1400098d3:	gs ins DWORD PTR es:[rdi],dx
   1400098d5:	add    BYTE PTR [rax],al
   1400098d7:	add    BYTE PTR [rdx+0x65],dh
   1400098da:	jae    0x14000994b
   1400098dc:	jne    0x140009950
   1400098de:	movsxd esp,DWORD PTR [rbp+0x20]
   1400098e1:	fs gs (bad) 
   1400098e4:	fs ins BYTE PTR es:[rdi],dx
   1400098e6:	outs   dx,DWORD PTR ds:[rsi]
   1400098e7:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400098ea:	ja     0x14000995b
   1400098ec:	jne    0x14000995a
   1400098ee:	and    BYTE PTR fs:[rdi+0x63],ch
   1400098f2:	movsxd esi,DWORD PTR [rbp+0x72]
   1400098f5:	add    BYTE PTR [rax],al
   1400098f7:	add    BYTE PTR [rdx+0x65],dh
   1400098fa:	jae    0x140009971
   1400098fc:	ins    BYTE PTR es:[rdi],dx
   1400098fd:	je     0x14000991f
   1400098ff:	outs   dx,DWORD PTR ds:[rsi]
   140009900:	jne    0x140009976
   140009902:	and    BYTE PTR [rdi+0x66],ch
   140009905:	and    BYTE PTR [rdx+0x61],dh
   140009908:	outs   dx,BYTE PTR ds:[rsi]
   140009909:	add    BYTE PTR gs:[eax],al
   14000990d:	add    BYTE PTR [rax],al
   14000990f:	add    BYTE PTR [rbx+0x74],dh
   140009912:	(bad)  
   140009913:	je     0x14000997a
   140009915:	and    BYTE PTR [rsi+0x6f],ch
   140009918:	je     0x14000993a
   14000991a:	jb     0x140009981
   14000991c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000991f:	gs jb  0x140009983
   140009922:	(bad)  
   140009923:	ins    BYTE PTR es:[rdi],dx
   140009924:	add    BYTE PTR gs:[rax],al
   140009927:	add    BYTE PTR [rbx+0x74],dh
   14000992a:	jb     0x140009991
   14000992c:	(bad)  
   14000992d:	ins    DWORD PTR es:[rdi],dx
   14000992e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   140009932:	outs   dx,DWORD PTR gs:[rsi]
   140009934:	jne    0x1400099aa
   140009936:	add    BYTE PTR [rax],al
   140009938:	je     0x14000999f
   14000993a:	js     0x1400099b0
   14000993c:	and    BYTE PTR [rsi+0x69],ah
   14000993f:	ins    BYTE PTR es:[rdi],dx
   140009940:	and    BYTE PTR gs:[rdx+0x75],ah
   140009944:	jae    0x1400099bf
   140009946:	add    BYTE PTR [rax],al
   140009948:	je     0x1400099b3
   14000994a:	ins    DWORD PTR es:[rdi],dx
   14000994b:	gs and BYTE PTR fs:[rdi+0x75],ch
   140009950:	je     0x140009952
   140009952:	add    BYTE PTR [rax],al
   140009954:	add    BYTE PTR [rax],al
   140009956:	add    BYTE PTR [rax],al
   140009958:	je     0x1400099c9
   14000995a:	outs   dx,DWORD PTR ds:[rsi]
   14000995b:	and    BYTE PTR [rbp+0x61],ch
   14000995e:	outs   dx,BYTE PTR ds:[rsi]
   14000995f:	jns    0x140009981
   140009961:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140009968:	jo     0x1400099cf
   14000996a:	outs   dx,BYTE PTR ds:[rsi]
   14000996b:	and    BYTE PTR [rcx+0x6e],ch
   14000996e:	and    BYTE PTR [rbx+0x79],dh
   140009971:	jae    0x1400099e7
   140009973:	gs ins DWORD PTR es:[rdi],dx
   140009975:	add    BYTE PTR [rax],al
   140009977:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000997b:	and    BYTE PTR [rbp+0x61],ch
   14000997e:	outs   dx,BYTE PTR ds:[rsi]
   14000997f:	jns    0x1400099a1
   140009981:	ins    BYTE PTR es:[rdi],dx
   140009982:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   140009989:	outs   dx,DWORD PTR ds:[rsi]
   14000998a:	outs   dx,DWORD PTR ds:[rsi]
   14000998b:	and    BYTE PTR [rbp+0x61],ch
   14000998e:	outs   dx,BYTE PTR ds:[rsi]
   14000998f:	jns    0x1400099b1
   140009991:	jae    0x140009a0c
   140009993:	ins    DWORD PTR es:[rdi],dx
   140009994:	(bad)  
   140009995:	outs   dx,DWORD PTR ds:[rsi]
   140009996:	ins    BYTE PTR es:[rdi],dx
   140009997:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14000999e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400099a2:	gs ins BYTE PTR es:[rdi],dx
   1400099a4:	jae    0x1400099a6
   1400099a6:	add    BYTE PTR [rax],al
   1400099a8:	jbe    0x140009a0b
   1400099aa:	ins    BYTE PTR es:[rdi],dx
   1400099ab:	jne    0x140009a12
   1400099ad:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   1400099b1:	and    BYTE PTR [rcx+riz*2+0x72],ch
   1400099b5:	add    BYTE PTR gs:[edi+0x72],dh
   1400099ba:	outs   dx,DWORD PTR ds:[rsi]
   1400099bb:	outs   dx,BYTE PTR ds:[rsi]
   1400099bc:	and    BYTE PTR [eax+0x72],dh
   1400099c0:	outs   dx,DWORD PTR ds:[rsi]
   1400099c1:	je     0x140009a32
   1400099c3:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400099c6:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400099ca:	add    BYTE PTR gs:[rax],al
   1400099cd:	add    BYTE PTR [rax],al
   1400099cf:	add    al,al
   1400099d1:	push   0x14000
   1400099d6:	add    BYTE PTR [rax],al
   1400099d8:	pop    rsp
   1400099d9:	add    BYTE PTR [rax],al
   1400099db:	add    BYTE PTR [rax],al
   1400099dd:	add    BYTE PTR [rax],al
   1400099df:	add    BYTE PTR [rax],dh
   1400099e1:	push   rsp
   1400099e2:	add    BYTE PTR [rax+0x1],al
	...
   1400099ed:	add    BYTE PTR [rax],al
   1400099ef:	add    BYTE PTR [rax+rax*1],bh
   1400099f2:	push   rsp
   1400099f3:	add    BYTE PTR [rcx+0x0],ah
   1400099f6:	jae    0x1400099f8
   1400099f8:	imul   eax,DWORD PTR [rax],0x20
   1400099fb:	add    BYTE PTR [rax+0x0],bh
   1400099fe:	ins    DWORD PTR es:[rdi],dx
   1400099ff:	add    BYTE PTR [rax+rax*1+0x6e],ch
   140009a03:	add    BYTE PTR [rbx+0x0],dh
   140009a06:	cmp    eax,0x68002200
   140009a0b:	add    BYTE PTR [rax+rax*1+0x74],dh
   140009a0f:	add    BYTE PTR [rax+0x0],dh
   140009a12:	cmp    al,BYTE PTR [rax]
   140009a14:	(bad)  
   140009a15:	add    BYTE PTR [rdi],ch
   140009a17:	add    BYTE PTR [rbx+0x0],dh
   140009a1a:	movsxd eax,DWORD PTR [rax]
   140009a1c:	push   0x6d006500
   140009a21:	add    BYTE PTR [rcx+0x0],ah
   140009a24:	jae    0x140009a26
   140009a26:	add    BYTE PTR cs:[rbp+0x0],ch
   140009a2a:	imul   eax,DWORD PTR [rax],0x720063
   140009a30:	outs   dx,DWORD PTR ds:[rsi]
   140009a31:	add    BYTE PTR [rbx+0x0],dh
   140009a34:	outs   dx,DWORD PTR ds:[rsi]
   140009a35:	add    BYTE PTR [rsi+0x0],ah
   140009a38:	je     0x140009a3a
   140009a3a:	add    BYTE PTR cs:[rbx+0x0],ah
   140009a3e:	outs   dx,DWORD PTR ds:[rsi]
   140009a3f:	add    BYTE PTR [rbp+0x0],ch
   140009a42:	(bad)  
   140009a43:	add    BYTE PTR [rdi+0x0],dh
   140009a46:	imul   eax,DWORD PTR [rax],0x64006e
   140009a4c:	outs   dx,DWORD PTR ds:[rsi]
   140009a4d:	add    BYTE PTR [rdi+0x0],dh
   140009a50:	jae    0x140009a52
   140009a52:	(bad)  
   140009a53:	add    BYTE PTR [rdx],dh
   140009a55:	add    BYTE PTR [rax],dh
   140009a57:	add    BYTE PTR [rax],dh
   140009a59:	add    BYTE PTR [rax+rax*1],dh
   140009a5c:	(bad)  
   140009a5d:	add    BYTE PTR [rax],dh
   140009a5f:	add    BYTE PTR [rdx],dh
   140009a61:	add    BYTE PTR [rdi],ch
   140009a63:	add    BYTE PTR [rbp+0x0],ch
   140009a66:	imul   eax,DWORD PTR [rax],0x2f0074
   140009a6c:	je     0x140009a6e
   140009a6e:	(bad)  
   140009a6f:	add    BYTE PTR [rbx+0x0],dh
   140009a72:	imul   eax,DWORD PTR [rax],0x22
   140009a75:	add    BYTE PTR [rax],ah
   140009a77:	add    BYTE PTR [rax+0x0],bh
   140009a7a:	ins    DWORD PTR es:[rdi],dx
   140009a7b:	add    BYTE PTR [rax+rax*1+0x6e],ch
   140009a7f:	add    BYTE PTR [rbx+0x0],dh
   140009a82:	cmp    al,BYTE PTR [rax]
   140009a84:	(bad)  
   140009a85:	add    BYTE PTR [rbp+0x0],dh
   140009a88:	je     0x140009a8a
   140009a8a:	outs   dx,DWORD PTR ds:[rsi]
   140009a8b:	add    BYTE PTR [rip+0x73006e00],ch        # 0x1b3010891
   140009a91:	add    BYTE PTR [rcx],dh
   140009a93:	add    BYTE PTR [rip+0x75002200],bh        # 0x1b500bc99
   140009a99:	add    BYTE PTR [rdx+0x0],dh
   140009a9c:	outs   dx,BYTE PTR ds:[rsi]
   140009a9d:	add    BYTE PTR [rdx],bh
   140009a9f:	add    BYTE PTR [rbx+0x0],dh
   140009aa2:	movsxd eax,DWORD PTR [rax]
   140009aa4:	push   0x6d006500
   140009aa9:	add    BYTE PTR [rcx+0x0],ah
   140009aac:	jae    0x140009aae
   140009aae:	sub    eax,0x69006d00
   140009ab3:	add    BYTE PTR [rbx+0x0],ah
   140009ab6:	jb     0x140009ab8
   140009ab8:	outs   dx,DWORD PTR ds:[rsi]
   140009ab9:	add    BYTE PTR [rbx+0x0],dh
   140009abc:	outs   dx,DWORD PTR ds:[rsi]
   140009abd:	add    BYTE PTR [rsi+0x0],ah
   140009ac0:	je     0x140009ac2
   140009ac2:	sub    eax,0x6f006300
   140009ac7:	add    BYTE PTR [rbp+0x0],ch
   140009aca:	cmp    al,BYTE PTR [rax]
   140009acc:	(bad)  
   140009acd:	add    BYTE PTR [rbx+0x0],dh
   140009ad0:	ins    DWORD PTR es:[rdi],dx
   140009ad1:	add    BYTE PTR [rsi],ch
   140009ad3:	add    BYTE PTR [rsi+0x0],dh
   140009ad6:	xor    eax,DWORD PTR [rax]
   140009ad8:	and    al,BYTE PTR [rax]
   140009ada:	add    BYTE PTR ds:[rax],ah
   140009add:	add    BYTE PTR [rax],ah
   140009adf:	add    BYTE PTR [rax],ah
   140009ae1:	add    BYTE PTR [rax],ah
   140009ae3:	add    BYTE PTR [rax+rax*1],bh
   140009ae6:	push   rdx
   140009ae7:	add    BYTE PTR [rbp+0x0],ah
   140009aea:	add    BYTE PTR [ecx+0x0],ch
   140009aee:	jae    0x140009af0
   140009af0:	je     0x140009af2
   140009af2:	jb     0x140009af4
   140009af4:	(bad)  
   140009af5:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009af9:	add    BYTE PTR [rdi+0x0],ch
   140009afc:	outs   dx,BYTE PTR ds:[rsi]
   140009afd:	add    BYTE PTR [rcx+0x0],cl
   140009b00:	outs   dx,BYTE PTR ds:[rsi]
   140009b01:	add    BYTE PTR [rsi+0x0],ah
   140009b04:	outs   dx,DWORD PTR ds:[rsi]
   140009b05:	add    BYTE PTR [rsi],bh
   140009b07:	add    BYTE PTR [rax],ah
   140009b09:	add    BYTE PTR [rax],ah
   140009b0b:	add    BYTE PTR [rax],ah
   140009b0d:	add    BYTE PTR [rax],ah
   140009b0f:	add    BYTE PTR [rax],ah
   140009b11:	add    BYTE PTR [rax],ah
   140009b13:	add    BYTE PTR [rax],ah
   140009b15:	add    BYTE PTR [rax],ah
   140009b17:	add    BYTE PTR [rax+rax*1],bh
   140009b1a:	add    BYTE PTR [r13+0x0],sil
   140009b1e:	je     0x140009b20
   140009b20:	push   0x72006f00
   140009b25:	add    BYTE PTR [rsi],bh
   140009b27:	add    BYTE PTR [rax+rax*1],ah
   140009b2a:	sub    BYTE PTR [rax],al
   140009b2c:	add    BYTE PTR [rip+0x79007300],spl        # 0x1b9010e33
   140009b33:	add    BYTE PTR [rbx+0x0],dh
   140009b36:	je     0x140009b38
   140009b38:	add    BYTE PTR gs:[rbp+0x0],ch
   140009b3c:	push   rdx
   140009b3d:	add    BYTE PTR [rdi+0x0],ch
   140009b40:	outs   dx,DWORD PTR ds:[rsi]
   140009b41:	add    BYTE PTR [rax+rax*1+0x25],dh
   140009b45:	add    BYTE PTR [rax+rax*1+0x73],bl
   140009b49:	add    BYTE PTR [rcx+0x0],bh
   140009b4c:	jae    0x140009b4e
   140009b4e:	je     0x140009b50
   140009b50:	add    BYTE PTR gs:[rbp+0x0],ch
   140009b54:	xor    eax,DWORD PTR [rax]
   140009b56:	xor    al,BYTE PTR [rax]
   140009b58:	pop    rsp
   140009b59:	add    BYTE PTR [rax+rax*1+0x65],ah
   140009b5d:	add    BYTE PTR [rsi+0x0],dh
   140009b60:	imul   eax,DWORD PTR [rax],0x650063
   140009b66:	add    BYTE PTR gs:[rsi+0x0],ch
   140009b6a:	jb     0x140009b6c
   140009b6c:	outs   dx,DWORD PTR ds:[rsi]
   140009b6d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009b71:	add    BYTE PTR [rbp+0x0],ah
   140009b74:	jb     0x140009b76
   140009b76:	add    BYTE PTR cs:[rbp+0x0],ah
   140009b7a:	js     0x140009b7c
   140009b7c:	add    BYTE PTR gs:[rax+rax*1],ch
   140009b80:	sub    eax,0x30003100
   140009b85:	add    BYTE PTR [rcx],dh
   140009b87:	add    BYTE PTR [rcx],ch
   140009b89:	add    BYTE PTR [rax+rax*1],bh
   140009b8c:	(bad)  
   140009b8d:	add    BYTE PTR [rcx+0x0],al
   140009b90:	jne    0x140009b92
   140009b92:	je     0x140009b94
   140009b94:	push   0x72006f00
   140009b99:	add    BYTE PTR [rsi],bh
   140009b9b:	add    BYTE PTR [rax],ah
   140009b9d:	add    BYTE PTR [rax],ah
   140009b9f:	add    BYTE PTR [rax],ah
   140009ba1:	add    BYTE PTR [rax],ah
   140009ba3:	add    BYTE PTR [rax],ah
   140009ba5:	add    BYTE PTR [rax],ah
   140009ba7:	add    BYTE PTR [rax],ah
   140009ba9:	add    BYTE PTR [rax],ah
   140009bab:	add    BYTE PTR [rax+rax*1],bh
   140009bae:	add    BYTE PTR [rbp+0x0],r12b
   140009bb2:	jae    0x140009bb4
   140009bb4:	movsxd eax,DWORD PTR [rax]
   140009bb6:	jb     0x140009bb8
   140009bb8:	imul   eax,DWORD PTR [rax],0x740070
   140009bbe:	imul   eax,DWORD PTR [rax],0x6e006f
   140009bc4:	add    BYTE PTR ds:[rax+rax*1],ah
   140009bc8:	sub    BYTE PTR [rax],al
   140009bca:	add    BYTE PTR [rip+0x79007300],spl        # 0x1b9010ed1
   140009bd1:	add    BYTE PTR [rbx+0x0],dh
   140009bd4:	je     0x140009bd6
   140009bd6:	add    BYTE PTR gs:[rbp+0x0],ch
   140009bda:	push   rdx
   140009bdb:	add    BYTE PTR [rdi+0x0],ch
   140009bde:	outs   dx,DWORD PTR ds:[rsi]
   140009bdf:	add    BYTE PTR [rax+rax*1+0x25],dh
   140009be3:	add    BYTE PTR [rax+rax*1+0x73],bl
   140009be7:	add    BYTE PTR [rcx+0x0],bh
   140009bea:	jae    0x140009bec
   140009bec:	je     0x140009bee
   140009bee:	add    BYTE PTR gs:[rbp+0x0],ch
   140009bf2:	xor    eax,DWORD PTR [rax]
   140009bf4:	xor    al,BYTE PTR [rax]
   140009bf6:	pop    rsp
   140009bf7:	add    BYTE PTR [rax+rax*1+0x65],ah
   140009bfb:	add    BYTE PTR [rsi+0x0],dh
   140009bfe:	imul   eax,DWORD PTR [rax],0x650063
   140009c04:	add    BYTE PTR gs:[rsi+0x0],ch
   140009c08:	jb     0x140009c0a
   140009c0a:	outs   dx,DWORD PTR ds:[rsi]
   140009c0b:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140009c0f:	add    BYTE PTR [rbp+0x0],ah
   140009c12:	jb     0x140009c14
   140009c14:	add    BYTE PTR cs:[rbp+0x0],ah
   140009c18:	js     0x140009c1a
   140009c1a:	add    BYTE PTR gs:[rax+rax*1],ch
   140009c1e:	sub    eax,0x30003100
   140009c23:	add    BYTE PTR [rdx],dh
   140009c25:	add    BYTE PTR [rcx],ch
   140009c27:	add    BYTE PTR [rax+rax*1],bh
   140009c2a:	(bad)  
   140009c2b:	add    BYTE PTR [rax+rax*1+0x65],al
   140009c2f:	add    BYTE PTR [rbx+0x0],dh
   140009c32:	movsxd eax,DWORD PTR [rax]
   140009c34:	jb     0x140009c36
   140009c36:	imul   eax,DWORD PTR [rax],0x740070
   140009c3c:	imul   eax,DWORD PTR [rax],0x6e006f
   140009c42:	add    BYTE PTR ds:[rax],ah
   140009c45:	add    BYTE PTR [rax],ah
   140009c47:	add    BYTE PTR [rax],ah
   140009c49:	add    BYTE PTR [rax],ah
   140009c4b:	add    BYTE PTR [rax],ah
   140009c4d:	add    BYTE PTR [rax],ah
   140009c4f:	add    BYTE PTR [rax],ah
   140009c51:	add    BYTE PTR [rax],ah
   140009c53:	add    BYTE PTR [rax+rax*1],bh
   140009c56:	push   rbp
   140009c57:	add    BYTE PTR [rdx+0x0],dl
   140009c5a:	rex.WB add BYTE PTR [r14],dil
   140009c5d:	add    BYTE PTR [rax+rax*1+0x4d],bl
   140009c61:	add    BYTE PTR [rcx+0x0],ch
   140009c64:	movsxd eax,DWORD PTR [rax]
   140009c66:	jb     0x140009c68
   140009c68:	outs   dx,DWORD PTR ds:[rsi]
   140009c69:	add    BYTE PTR [rbx+0x0],dh
   140009c6c:	outs   dx,DWORD PTR ds:[rsi]
   140009c6d:	add    BYTE PTR [rsi+0x0],ah
   140009c70:	je     0x140009c72
   140009c72:	pop    rsp
   140009c73:	add    BYTE PTR [rdi+0x0],dl
   140009c76:	imul   eax,DWORD PTR [rax],0x64006e
   140009c7c:	outs   dx,DWORD PTR ds:[rsi]
   140009c7d:	add    BYTE PTR [rdi+0x0],dh
   140009c80:	jae    0x140009c82
   140009c82:	pop    rsp
   140009c83:	add    BYTE PTR [rbp+0x0],al
   140009c86:	outs   dx,BYTE PTR ds:[rsi]
   140009c87:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009c8b:	add    BYTE PTR [rdx+0x0],dh
   140009c8e:	jo     0x140009c90
   140009c90:	jb     0x140009c92
   140009c92:	imul   eax,DWORD PTR [rax],0x650073
   140009c98:	rex.WRB add BYTE PTR [r15+0x0],r12b
   140009c9c:	ins    DWORD PTR es:[rdi],dx
   140009c9d:	add    BYTE PTR [rax+rax*1+0x5c],dh
   140009ca1:	add    BYTE PTR [rbx+0x0],dl
   140009ca4:	movsxd eax,DWORD PTR [rax]
   140009ca6:	push   0x64006500
   140009cab:	add    BYTE PTR [rbp+0x0],dh
   140009cae:	ins    BYTE PTR es:[rdi],dx
   140009caf:	add    BYTE PTR [rbp+0x0],ah
   140009cb2:	and    BYTE PTR [rax],al
   140009cb4:	movsxd eax,DWORD PTR [rax]
   140009cb6:	jb     0x140009cb8
   140009cb8:	add    BYTE PTR gs:[rcx+0x0],ah
   140009cbc:	je     0x140009cbe
   140009cbe:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140009cc3:	add    BYTE PTR [rsi+0x0],ah
   140009cc6:	outs   dx,DWORD PTR ds:[rsi]
   140009cc7:	add    BYTE PTR [rdx+0x0],dh
   140009cca:	and    BYTE PTR [rax],al
   140009ccc:	jae    0x140009cce
   140009cce:	add    BYTE PTR gs:[rbx+0x0],dh
   140009cd2:	jae    0x140009cd4
   140009cd4:	imul   eax,DWORD PTR [rax],0x6e006f
   140009cda:	and    BYTE PTR [rax],al
   140009cdc:	jb     0x140009cde
   140009cde:	add    BYTE PTR gs:[rax+rax*1+0x72],dh
   140009ce3:	add    BYTE PTR [rcx+0x0],bh
   140009ce6:	cmp    al,0x0
   140009ce8:	(bad)  
   140009ce9:	add    BYTE PTR [rbp+0x0],dl
   140009cec:	push   rdx
   140009ced:	add    BYTE PTR [rcx+0x0],cl
   140009cf0:	add    BYTE PTR ds:[rax],ah
   140009cf3:	add    BYTE PTR [rax],ah
   140009cf5:	add    BYTE PTR [rax],ah
   140009cf7:	add    BYTE PTR [rax],ah
   140009cf9:	add    BYTE PTR [rax],ah
   140009cfb:	add    BYTE PTR [rax],ah
   140009cfd:	add    BYTE PTR [rax],ah
   140009cff:	add    BYTE PTR [rax],ah
   140009d01:	add    BYTE PTR [rax+rax*1],bh
   140009d04:	push   rbx
   140009d05:	add    BYTE PTR [rbp+0x0],ah
   140009d08:	movsxd eax,DWORD PTR [rax]
   140009d0a:	jne    0x140009d0c
   140009d0c:	jb     0x140009d0e
   140009d0e:	imul   eax,DWORD PTR [rax],0x790074
   140009d14:	add    BYTE PTR [rbp+0x0],r12b
   140009d18:	jae    0x140009d1a
   140009d1a:	movsxd eax,DWORD PTR [rax]
   140009d1c:	jb     0x140009d1e
   140009d1e:	imul   eax,DWORD PTR [rax],0x740070
   140009d24:	outs   dx,DWORD PTR ds:[rsi]
   140009d25:	add    BYTE PTR [rdx+0x0],dh
   140009d28:	add    BYTE PTR ds:[rax+rax*1+0x3a],al
   140009d2d:	add    BYTE PTR [rax],ch
   140009d2f:	add    BYTE PTR [rcx+0x0],al
   140009d32:	cmp    eax,DWORD PTR [rax]
   140009d34:	cmp    eax,DWORD PTR [rax]
   140009d36:	rex.RX add BYTE PTR [rcx+0x0],r8b
   140009d3a:	cmp    eax,DWORD PTR [rax]
   140009d3c:	cmp    eax,DWORD PTR [rax]
   140009d3e:	cmp    eax,DWORD PTR [rax]
   140009d40:	rex.X add BYTE PTR [rcx+0x0],al
   140009d44:	sub    DWORD PTR [rax],eax
   140009d46:	sub    BYTE PTR [rax],al
   140009d48:	add    BYTE PTR [r11],dil
   140009d4b:	add    BYTE PTR [rbx],bh
   140009d4d:	add    BYTE PTR [rsi+0x0],al
   140009d50:	add    BYTE PTR [r11],dil
   140009d53:	add    BYTE PTR [rbx],bh
   140009d55:	add    BYTE PTR [rbx],bh
   140009d57:	add    BYTE PTR [rbx+0x0],dl
   140009d5a:	pop    rcx
   140009d5b:	add    BYTE PTR [rcx],ch
   140009d5d:	add    BYTE PTR [rax],ch
   140009d5f:	add    BYTE PTR [rcx+0x0],al
   140009d62:	cmp    eax,DWORD PTR [rax]
   140009d64:	cmp    eax,DWORD PTR [rax]
   140009d66:	rex.RX add BYTE PTR [rdx+0x0],r10b
   140009d6a:	rex.RX add BYTE PTR [rax+0x0],r11b
   140009d6e:	cmp    eax,DWORD PTR [rax]
   140009d70:	cmp    eax,DWORD PTR [rax]
   140009d72:	cmp    eax,DWORD PTR [rax]
   140009d74:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140009d78:	sub    DWORD PTR [rax],eax
   140009d7a:	cmp    al,0x0
   140009d7c:	(bad)  
   140009d7d:	add    BYTE PTR [rbx+0x0],dl
   140009d80:	add    BYTE PTR gs:[rbx+0x0],ah
   140009d84:	jne    0x140009d86
   140009d86:	jb     0x140009d88
   140009d88:	imul   eax,DWORD PTR [rax],0x790074
   140009d8e:	add    BYTE PTR [rbp+0x0],r12b
   140009d92:	jae    0x140009d94
   140009d94:	movsxd eax,DWORD PTR [rax]
   140009d96:	jb     0x140009d98
   140009d98:	imul   eax,DWORD PTR [rax],0x740070
   140009d9e:	outs   dx,DWORD PTR ds:[rsi]
   140009d9f:	add    BYTE PTR [rdx+0x0],dh
   140009da2:	add    BYTE PTR ds:[rax],ah
   140009da5:	add    BYTE PTR [rax],ah
   140009da7:	add    BYTE PTR [rax],ah
   140009da9:	add    BYTE PTR [rax],ah
   140009dab:	add    BYTE PTR [rax+rax*1],bh
   140009dae:	(bad)  
   140009daf:	add    BYTE PTR [rdx+0x0],dl
   140009db2:	add    BYTE PTR gs:[rdi+0x0],ah
   140009db6:	imul   eax,DWORD PTR [rax],0x740073
   140009dbc:	jb     0x140009dbe
   140009dbe:	(bad)  
   140009dbf:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009dc3:	add    BYTE PTR [rdi+0x0],ch
   140009dc6:	outs   dx,BYTE PTR ds:[rsi]
   140009dc7:	add    BYTE PTR [rcx+0x0],cl
   140009dca:	outs   dx,BYTE PTR ds:[rsi]
   140009dcb:	add    BYTE PTR [rsi+0x0],ah
   140009dce:	outs   dx,DWORD PTR ds:[rsi]
   140009dcf:	add    BYTE PTR [rsi],bh
   140009dd1:	add    BYTE PTR [rax],ah
   140009dd3:	add    BYTE PTR [rax],ah
   140009dd5:	add    BYTE PTR [rax],ah
   140009dd7:	add    BYTE PTR [rax],ah
   140009dd9:	add    BYTE PTR [rax+rax*1],bh
   140009ddc:	push   rsp
   140009ddd:	add    BYTE PTR [rdx+0x0],dh
   140009de0:	imul   eax,DWORD PTR [rax],0x670067
   140009de6:	add    BYTE PTR gs:[rdx+0x0],dh
   140009dea:	jae    0x140009dec
   140009dec:	add    BYTE PTR ds:[rax],ah
   140009def:	add    BYTE PTR [rax],ah
   140009df1:	add    BYTE PTR [rax],ah
   140009df3:	add    BYTE PTR [rax],ah
   140009df5:	add    BYTE PTR [rax],ah
   140009df7:	add    BYTE PTR [rax],ah
   140009df9:	add    BYTE PTR [rax+rax*1],bh
   140009dfc:	and    DWORD PTR [rax],eax
   140009dfe:	sub    eax,0x20002d00
   140009e03:	add    BYTE PTR [rax+rax*1+0x72],dh
   140009e07:	add    BYTE PTR [rcx+0x0],ch
   140009e0a:	add    BYTE PTR [edi+0x0],ah
   140009e0e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009e12:	and    BYTE PTR [rax],al
   140009e14:	push   rdi
   140009e15:	add    BYTE PTR [rsi+0x0],cl
   140009e18:	rex.RX add BYTE PTR [rdi+0x0],r11b
   140009e1c:	rex.XB add BYTE PTR [r14+0x0],cl
   140009e20:	add    BYTE PTR [r8+rax*1+0x5f],r10b
   140009e25:	add    BYTE PTR [rax+rax*1+0x50],al
   140009e29:	add    BYTE PTR [rbp+0x0],dl
   140009e2c:	pop    rdi
   140009e2d:	add    BYTE PTR [rdi+0x0],al
   140009e30:	rex.WR add BYTE PTR [rdi+0x0],r9b
   140009e34:	rex.X add BYTE PTR [rcx+0x0],al
   140009e38:	rex.WR add BYTE PTR [rdi+0x0],r11b
   140009e3c:	push   rbx
   140009e3d:	add    BYTE PTR [rax+rax*1+0x41],dl
   140009e41:	add    BYTE PTR [rax+rax*1+0x45],dl
   140009e45:	add    BYTE PTR [rdi+0x0],bl
   140009e48:	push   rbp
   140009e49:	add    BYTE PTR [rsi+0x0],cl
   140009e4c:	add    BYTE PTR [rbp+0x0],r8b
   140009e50:	push   rdx
   140009e51:	add    BYTE PTR [rdi+0x0],bl
   140009e54:	push   rsp
   140009e55:	add    BYTE PTR [rdx+0x0],dl
   140009e58:	add    BYTE PTR [r11+0x0],al
   140009e5c:	rex.WXB add BYTE PTR [r8],spl
   140009e5f:	add    BYTE PTR [rip+0x7b002000],bh        # 0x1bb00be65
   140009e65:	add    BYTE PTR [rax],dh
   140009e67:	add    BYTE PTR [rax+0x0],bh
   140009e6a:	(bad)  
   140009e6b:	add    BYTE PTR [rbx],dh
   140009e6d:	add    BYTE PTR [rdx+0x0],ah
   140009e70:	movsxd eax,DWORD PTR [rax]
   140009e72:	xor    al,BYTE PTR [rax]
   140009e74:	cmp    BYTE PTR [rax],al
   140009e76:	(bad)  
   140009e77:	add    BYTE PTR [rip+0x20002c00],dh        # 0x16000ca7d
   140009e7d:	add    BYTE PTR [rax],dh
   140009e7f:	add    BYTE PTR [rax+0x0],bh
   140009e82:	xor    DWORD PTR [rax],eax
   140009e84:	xor    eax,0x33003800
   140009e89:	add    BYTE PTR [rax],dh
   140009e8b:	add    BYTE PTR [rax],dh
   140009e8d:	add    BYTE PTR [rdx],dh
   140009e8f:	add    BYTE PTR [rbp+0x0],ah
   140009e92:	jge    0x140009e94
   140009e94:	and    BYTE PTR [rax],al
   140009e96:	sub    eax,0x3e002d00
   140009e9b:	add    BYTE PTR [rax],ah
   140009e9d:	add    BYTE PTR [rax],ah
   140009e9f:	add    BYTE PTR [rax],ah
   140009ea1:	add    BYTE PTR [rax],ah
   140009ea3:	add    BYTE PTR [rax],ah
   140009ea5:	add    BYTE PTR [rax],ah
   140009ea7:	add    BYTE PTR [rax+rax*1],bh
   140009eaa:	push   rdi
   140009eab:	add    BYTE PTR [rsi+0x0],ch
   140009eae:	data16 add BYTE PTR [rbx+0x0],dl
   140009eb2:	je     0x140009eb4
   140009eb4:	(bad)  
   140009eb5:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009eb9:	add    BYTE PTR [rbx+0x0],al
   140009ebc:	push   0x6e006100
   140009ec1:	add    BYTE PTR [rdi+0x0],ah
   140009ec4:	add    BYTE PTR gs:[rax+rax*1+0x72],dl
   140009ec9:	add    BYTE PTR [rcx+0x0],ch
   140009ecc:	add    BYTE PTR [edi+0x0],ah
   140009ed0:	add    BYTE PTR gs:[rdx+0x0],dh
   140009ed4:	and    BYTE PTR [rax],al
   140009ed6:	imul   eax,DWORD PTR [rax],0x3d0064
   140009edc:	and    al,BYTE PTR [rax]
   140009ede:	add    BYTE PTR [rcx+0x0],r12b
   140009ee2:	je     0x140009ee4
   140009ee4:	(bad)  
   140009ee5:	add    BYTE PTR [rbx+0x0],dl
   140009ee8:	add    BYTE PTR gs:[rsi+0x0],ch
   140009eec:	jae    0x140009eee
   140009eee:	add    BYTE PTR gs:[rax+rax*1+0x72],dl
   140009ef3:	add    BYTE PTR [rcx+0x0],ch
   140009ef6:	add    BYTE PTR [edi+0x0],ah
   140009efa:	add    BYTE PTR gs:[rdx+0x0],dh
   140009efe:	and    al,BYTE PTR [rax]
   140009f00:	add    BYTE PTR ds:[rax],ah
   140009f03:	add    BYTE PTR [rax],ah
   140009f05:	add    BYTE PTR [rax],ah
   140009f07:	add    BYTE PTR [rax],ah
   140009f09:	add    BYTE PTR [rax],ah
   140009f0b:	add    BYTE PTR [rax],ah
   140009f0d:	add    BYTE PTR [rax],ah
   140009f0f:	add    BYTE PTR [rax],ah
   140009f11:	add    BYTE PTR [rax+rax*1],bh
   140009f14:	push   rbx
   140009f15:	add    BYTE PTR [rax+rax*1+0x61],dh
   140009f19:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009f1d:	add    BYTE PTR [rsi+0x0],cl
   140009f20:	(bad)  
   140009f21:	add    BYTE PTR [rbp+0x0],ch
   140009f24:	add    BYTE PTR gs:[rsi],bh
   140009f27:	add    BYTE PTR [rdi],dh
   140009f29:	add    BYTE PTR [rip+0x38003200],dh        # 0x17800d12f
   140009f2f:	add    BYTE PTR [rdx+0x0],ah
   140009f32:	movsxd eax,DWORD PTR [rax]
   140009f34:	(bad)  
   140009f35:	add    BYTE PTR [rbx],dh
   140009f37:	add    BYTE PTR [rdx],dh
   140009f39:	add    BYTE PTR [rbp+0x0],ah
   140009f3c:	xor    BYTE PTR [rax],al
   140009f3e:	xor    BYTE PTR [rax],al
   140009f40:	cmp    BYTE PTR [rax],al
   140009f42:	xor    eax,DWORD PTR [rax]
   140009f44:	xor    DWORD PTR [rax],eax
   140009f46:	xor    eax,0x2f003c00
   140009f4b:	add    BYTE PTR [rbx+0x0],dl
   140009f4e:	je     0x140009f50
   140009f50:	(bad)  
   140009f51:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009f55:	add    BYTE PTR [rsi+0x0],cl
   140009f58:	(bad)  
   140009f59:	add    BYTE PTR [rbp+0x0],ch
   140009f5c:	add    BYTE PTR gs:[rsi],bh
   140009f5f:	add    BYTE PTR [rax],ah
   140009f61:	add    BYTE PTR [rax],ah
   140009f63:	add    BYTE PTR [rax],ah
   140009f65:	add    BYTE PTR [rax],ah
   140009f67:	add    BYTE PTR [rax],ah
   140009f69:	add    BYTE PTR [rax],ah
   140009f6b:	add    BYTE PTR [rax],ah
   140009f6d:	add    BYTE PTR [rax],ah
   140009f6f:	add    BYTE PTR [rax+rax*1],bh
   140009f72:	add    BYTE PTR [rcx+0x0],r12b
   140009f76:	je     0x140009f78
   140009f78:	(bad)  
   140009f79:	add    BYTE PTR [rsi],bh
   140009f7b:	add    BYTE PTR [rax],dh
   140009f7d:	add    BYTE PTR [rcx],dh
   140009f7f:	add    BYTE PTR [rax+rax*1],bh
   140009f82:	(bad)  
   140009f83:	add    BYTE PTR [rax+rax*1+0x61],al
   140009f87:	add    BYTE PTR [rax+rax*1+0x61],dh
   140009f8b:	add    BYTE PTR [rsi],bh
   140009f8d:	add    BYTE PTR [rax],ah
   140009f8f:	add    BYTE PTR [rax],ah
   140009f91:	add    BYTE PTR [rax],ah
   140009f93:	add    BYTE PTR [rax],ah
   140009f95:	add    BYTE PTR [rax],ah
   140009f97:	add    BYTE PTR [rax],ah
   140009f99:	add    BYTE PTR [rax],ah
   140009f9b:	add    BYTE PTR [rax],ah
   140009f9d:	add    BYTE PTR [rax+rax*1],bh
   140009fa0:	add    BYTE PTR [rcx+0x0],r12b
   140009fa4:	je     0x140009fa6
   140009fa6:	(bad)  
   140009fa7:	add    BYTE PTR [rdi+0x0],cl
   140009faa:	data16 add BYTE PTR [rsi+0x0],ah
   140009fae:	jae    0x140009fb0
   140009fb0:	add    BYTE PTR gs:[rax+rax*1+0x3e],dh
   140009fb5:	add    BYTE PTR [rax],dh
   140009fb7:	add    BYTE PTR [rax+rax*1],bh
   140009fba:	(bad)  
   140009fbb:	add    BYTE PTR [rax+rax*1+0x61],al
   140009fbf:	add    BYTE PTR [rax+rax*1+0x61],dh
   140009fc3:	add    BYTE PTR [rdi+0x0],cl
   140009fc6:	data16 add BYTE PTR [rsi+0x0],ah
   140009fca:	jae    0x140009fcc
   140009fcc:	add    BYTE PTR gs:[rax+rax*1+0x3e],dh
   140009fd1:	add    BYTE PTR [rax],ah
   140009fd3:	add    BYTE PTR [rax],ah
   140009fd5:	add    BYTE PTR [rax],ah
   140009fd7:	add    BYTE PTR [rax],ah
   140009fd9:	add    BYTE PTR [rax],ah
   140009fdb:	add    BYTE PTR [rax],ah
   140009fdd:	add    BYTE PTR [rax+rax*1],bh
   140009fe0:	(bad)  
   140009fe1:	add    BYTE PTR [rdi+0x0],dl
   140009fe4:	outs   dx,BYTE PTR ds:[rsi]
   140009fe5:	add    BYTE PTR [rsi+0x0],ah
   140009fe8:	push   rbx
   140009fe9:	add    BYTE PTR [rax+rax*1+0x61],dh
   140009fed:	add    BYTE PTR [rax+rax*1+0x65],dh
   140009ff1:	add    BYTE PTR [rbx+0x0],al
   140009ff4:	push   0x6e006100
   140009ff9:	add    BYTE PTR [rdi+0x0],ah
   140009ffc:	add    BYTE PTR gs:[rax+rax*1+0x72],dl
   14000a001:	add    BYTE PTR [rcx+0x0],ch
   14000a004:	add    BYTE PTR [edi+0x0],ah
   14000a008:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a00c:	add    BYTE PTR ds:[rax],ah
   14000a00f:	add    BYTE PTR [rax],ah
   14000a011:	add    BYTE PTR [rax],ah
   14000a013:	add    BYTE PTR [rax],ah
   14000a015:	add    BYTE PTR [rax],ah
   14000a017:	add    BYTE PTR [rax],ah
   14000a019:	add    BYTE PTR [rax+rax*1],bh
   14000a01c:	and    DWORD PTR [rax],eax
   14000a01e:	sub    eax,0x20002d00
   14000a023:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000a027:	add    BYTE PTR [rcx+0x0],ch
   14000a02a:	add    BYTE PTR [edi+0x0],ah
   14000a02e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a032:	and    BYTE PTR [rax],al
   14000a034:	push   rdi
   14000a035:	add    BYTE PTR [rsi+0x0],cl
   14000a038:	rex.RX add BYTE PTR [rdi+0x0],r11b
   14000a03c:	push   rbx
   14000a03d:	add    BYTE PTR [rbp+0x0],al
   14000a040:	rex.X add BYTE PTR [rdi+0x0],bl
   14000a044:	rex.RX add BYTE PTR [rdx+0x0],r10b
   14000a048:	add    BYTE PTR [r13+0x0],r8b
   14000a04c:	pop    rdi
   14000a04d:	add    BYTE PTR [rsi+0x0],cl
   14000a050:	add    BYTE PTR [r8+rax*1+0x57],r10b
   14000a055:	add    BYTE PTR [rdi+0x0],cl
   14000a058:	push   rdx
   14000a059:	add    BYTE PTR [rbx+0x0],cl
   14000a05c:	pop    rdi
   14000a05d:	add    BYTE PTR [rax+0x0],dl
   14000a060:	push   rdx
   14000a061:	add    BYTE PTR [rbp+0x0],al
   14000a064:	push   rbx
   14000a065:	add    BYTE PTR [rbp+0x0],al
   14000a068:	rex.WRX add BYTE PTR [rax+r8*1+0x20],r10b
   14000a06d:	add    BYTE PTR [rip+0x7b002000],bh        # 0x1bb00c073
   14000a073:	add    BYTE PTR [rax],dh
   14000a075:	add    BYTE PTR [rax+0x0],bh
   14000a078:	(bad)  
   14000a079:	add    BYTE PTR [rbx],dh
   14000a07b:	add    BYTE PTR [rdx+0x0],ah
   14000a07e:	movsxd eax,DWORD PTR [rax]
   14000a080:	xor    BYTE PTR [rax],al
   14000a082:	cmp    BYTE PTR [rax],al
   14000a084:	(bad)  
   14000a085:	add    BYTE PTR [rip+0x20002c00],dh        # 0x16000cc8b
   14000a08b:	add    BYTE PTR [rax],dh
   14000a08d:	add    BYTE PTR [rax+0x0],bh
   14000a090:	xor    al,0x0
   14000a092:	xor    DWORD PTR [rax],eax
   14000a094:	cmp    BYTE PTR [rax],al
   14000a096:	xor    al,0x0
   14000a098:	xor    BYTE PTR [rax],al
   14000a09a:	(bad)  
   14000a09b:	add    BYTE PTR [rbx],dh
   14000a09d:	add    BYTE PTR [rbp+0x0],ah
   14000a0a0:	jge    0x14000a0a2
   14000a0a2:	and    BYTE PTR [rax],al
   14000a0a4:	sub    eax,0x3e002d00
   14000a0a9:	add    BYTE PTR [rax],ah
   14000a0ab:	add    BYTE PTR [rax],ah
   14000a0ad:	add    BYTE PTR [rax],ah
   14000a0af:	add    BYTE PTR [rax],ah
   14000a0b1:	add    BYTE PTR [rax],ah
   14000a0b3:	add    BYTE PTR [rax],ah
   14000a0b5:	add    BYTE PTR [rax+rax*1],bh
   14000a0b8:	push   rdi
   14000a0b9:	add    BYTE PTR [rsi+0x0],ch
   14000a0bc:	data16 add BYTE PTR [rbx+0x0],dl
   14000a0c0:	je     0x14000a0c2
   14000a0c2:	(bad)  
   14000a0c3:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a0c7:	add    BYTE PTR [rbx+0x0],al
   14000a0ca:	push   0x6e006100
   14000a0cf:	add    BYTE PTR [rdi+0x0],ah
   14000a0d2:	add    BYTE PTR gs:[rax+rax*1+0x72],dl
   14000a0d7:	add    BYTE PTR [rcx+0x0],ch
   14000a0da:	add    BYTE PTR [edi+0x0],ah
   14000a0de:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a0e2:	and    BYTE PTR [rax],al
   14000a0e4:	imul   eax,DWORD PTR [rax],0x3d0064
   14000a0ea:	and    al,BYTE PTR [rax]
   14000a0ec:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000a0f0:	add    BYTE PTR gs:[rbp+0x0],ah
   14000a0f4:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14000a0f8:	je     0x14000a0fa
   14000a0fa:	ja     0x14000a0fc
   14000a0fc:	outs   dx,DWORD PTR ds:[rsi]
   14000a0fd:	add    BYTE PTR [rdx+0x0],dh
   14000a100:	imul   eax,DWORD PTR [rax],0x54
   14000a103:	add    BYTE PTR [rdx+0x0],dh
   14000a106:	imul   eax,DWORD PTR [rax],0x670067
   14000a10c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a110:	and    al,BYTE PTR [rax]
   14000a112:	add    BYTE PTR ds:[rax],ah
   14000a115:	add    BYTE PTR [rax],ah
   14000a117:	add    BYTE PTR [rax],ah
   14000a119:	add    BYTE PTR [rax],ah
   14000a11b:	add    BYTE PTR [rax],ah
   14000a11d:	add    BYTE PTR [rax],ah
   14000a11f:	add    BYTE PTR [rax],ah
   14000a121:	add    BYTE PTR [rax],ah
   14000a123:	add    BYTE PTR [rax+rax*1],bh
   14000a126:	push   rbx
   14000a127:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a12b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a12f:	add    BYTE PTR [rsi+0x0],cl
   14000a132:	(bad)  
   14000a133:	add    BYTE PTR [rbp+0x0],ch
   14000a136:	add    BYTE PTR gs:[rsi],bh
   14000a139:	add    BYTE PTR [rdi],dh
   14000a13b:	add    BYTE PTR [rip+0x30003100],dh        # 0x17000d241
   14000a141:	add    BYTE PTR [rdx+0x0],al
   14000a144:	rex.XB add BYTE PTR [r9+0x0],al
   14000a148:	xor    eax,DWORD PTR [rax]
   14000a14a:	xor    eax,DWORD PTR [rax]
   14000a14c:	add    BYTE PTR [r8],r14b
   14000a14f:	add    BYTE PTR [rdx+0x0],al
   14000a152:	cmp    BYTE PTR [rax],al
   14000a154:	xor    al,0x0
   14000a156:	xor    al,0x0
   14000a158:	xor    DWORD PTR [rax],eax
   14000a15a:	cmp    al,0x0
   14000a15c:	(bad)  
   14000a15d:	add    BYTE PTR [rbx+0x0],dl
   14000a160:	je     0x14000a162
   14000a162:	(bad)  
   14000a163:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a167:	add    BYTE PTR [rsi+0x0],cl
   14000a16a:	(bad)  
   14000a16b:	add    BYTE PTR [rbp+0x0],ch
   14000a16e:	add    BYTE PTR gs:[rsi],bh
   14000a171:	add    BYTE PTR [rax],ah
   14000a173:	add    BYTE PTR [rax],ah
   14000a175:	add    BYTE PTR [rax],ah
   14000a177:	add    BYTE PTR [rax],ah
   14000a179:	add    BYTE PTR [rax],ah
   14000a17b:	add    BYTE PTR [rax],ah
   14000a17d:	add    BYTE PTR [rax],ah
   14000a17f:	add    BYTE PTR [rax],ah
   14000a181:	add    BYTE PTR [rax+rax*1],bh
   14000a184:	add    BYTE PTR [rcx+0x0],r12b
   14000a188:	je     0x14000a18a
   14000a18a:	(bad)  
   14000a18b:	add    BYTE PTR [rsi],bh
   14000a18d:	add    BYTE PTR [rax],dh
   14000a18f:	add    BYTE PTR [rbx],dh
   14000a191:	add    BYTE PTR [rax+rax*1],bh
   14000a194:	(bad)  
   14000a195:	add    BYTE PTR [rax+rax*1+0x61],al
   14000a199:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a19d:	add    BYTE PTR [rsi],bh
   14000a19f:	add    BYTE PTR [rax],ah
   14000a1a1:	add    BYTE PTR [rax],ah
   14000a1a3:	add    BYTE PTR [rax],ah
   14000a1a5:	add    BYTE PTR [rax],ah
   14000a1a7:	add    BYTE PTR [rax],ah
   14000a1a9:	add    BYTE PTR [rax],ah
   14000a1ab:	add    BYTE PTR [rax],ah
   14000a1ad:	add    BYTE PTR [rax],ah
   14000a1af:	add    BYTE PTR [rax+rax*1],bh
   14000a1b2:	add    BYTE PTR [rcx+0x0],r12b
   14000a1b6:	je     0x14000a1b8
   14000a1b8:	(bad)  
   14000a1b9:	add    BYTE PTR [rdi+0x0],cl
   14000a1bc:	data16 add BYTE PTR [rsi+0x0],ah
   14000a1c0:	jae    0x14000a1c2
   14000a1c2:	add    BYTE PTR gs:[rax+rax*1+0x3e],dh
   14000a1c7:	add    BYTE PTR [rax],dh
   14000a1c9:	add    BYTE PTR [rax+rax*1],bh
   14000a1cc:	(bad)  
   14000a1cd:	add    BYTE PTR [rax+rax*1+0x61],al
   14000a1d1:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a1d5:	add    BYTE PTR [rdi+0x0],cl
   14000a1d8:	data16 add BYTE PTR [rsi+0x0],ah
   14000a1dc:	jae    0x14000a1de
   14000a1de:	add    BYTE PTR gs:[rax+rax*1+0x3e],dh
   14000a1e3:	add    BYTE PTR [rax],ah
   14000a1e5:	add    BYTE PTR [rax],ah
   14000a1e7:	add    BYTE PTR [rax],ah
   14000a1e9:	add    BYTE PTR [rax],ah
   14000a1eb:	add    BYTE PTR [rax],ah
   14000a1ed:	add    BYTE PTR [rax],ah
   14000a1ef:	add    BYTE PTR [rax+rax*1],bh
   14000a1f2:	(bad)  
   14000a1f3:	add    BYTE PTR [rdi+0x0],dl
   14000a1f6:	outs   dx,BYTE PTR ds:[rsi]
   14000a1f7:	add    BYTE PTR [rsi+0x0],ah
   14000a1fa:	push   rbx
   14000a1fb:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a1ff:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a203:	add    BYTE PTR [rbx+0x0],al
   14000a206:	push   0x6e006100
   14000a20b:	add    BYTE PTR [rdi+0x0],ah
   14000a20e:	add    BYTE PTR gs:[rax+rax*1+0x72],dl
   14000a213:	add    BYTE PTR [rcx+0x0],ch
   14000a216:	add    BYTE PTR [edi+0x0],ah
   14000a21a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a21e:	add    BYTE PTR ds:[rax],ah
   14000a221:	add    BYTE PTR [rax],ah
   14000a223:	add    BYTE PTR [rax],ah
   14000a225:	add    BYTE PTR [rax],ah
   14000a227:	add    BYTE PTR [rax+rax*1],bh
   14000a22a:	(bad)  
   14000a22b:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000a22f:	add    BYTE PTR [rcx+0x0],ch
   14000a232:	add    BYTE PTR [edi+0x0],ah
   14000a236:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a23a:	jae    0x14000a23c
   14000a23c:	add    BYTE PTR ds:[rax],ah
   14000a23f:	add    BYTE PTR [rax],ah
   14000a241:	add    BYTE PTR [rax],ah
   14000a243:	add    BYTE PTR [rax],ah
   14000a245:	add    BYTE PTR [rax+rax*1],bh
   14000a248:	push   rax
   14000a249:	add    BYTE PTR [rdx+0x0],dh
   14000a24c:	imul   eax,DWORD PTR [rax],0x63006e
   14000a252:	imul   eax,DWORD PTR [rax],0x610070
   14000a258:	ins    BYTE PTR es:[rdi],dx
   14000a259:	add    BYTE PTR [rbx+0x0],dh
   14000a25c:	add    BYTE PTR ds:[rax],ah
   14000a25f:	add    BYTE PTR [rax],ah
   14000a261:	add    BYTE PTR [rax],ah
   14000a263:	add    BYTE PTR [rax],ah
   14000a265:	add    BYTE PTR [rax],ah
   14000a267:	add    BYTE PTR [rax],ah
   14000a269:	add    BYTE PTR [rax],ah
   14000a26b:	add    BYTE PTR [rax],ah
   14000a26d:	add    BYTE PTR [rax+rax*1],bh
   14000a270:	push   rax
   14000a271:	add    BYTE PTR [rdx+0x0],dh
   14000a274:	imul   eax,DWORD PTR [rax],0x63006e
   14000a27a:	imul   eax,DWORD PTR [rax],0x610070
   14000a280:	ins    BYTE PTR es:[rdi],dx
   14000a281:	add    BYTE PTR [rax],ah
   14000a283:	add    BYTE PTR [rcx+0x0],ch
   14000a286:	add    BYTE PTR fs:[rip+0x4c002200],bh        # 0x18c00c48d
   14000a28d:	add    BYTE PTR [rdi+0x0],ch
   14000a290:	movsxd eax,DWORD PTR [rax]
   14000a292:	(bad)  
   14000a293:	add    BYTE PTR [rax+rax*1+0x53],ch
   14000a297:	add    BYTE PTR [rcx+0x0],bh
   14000a29a:	jae    0x14000a29c
   14000a29c:	je     0x14000a29e
   14000a29e:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a2a2:	and    al,BYTE PTR [rax]
   14000a2a4:	add    BYTE PTR ds:[rax],ah
   14000a2a7:	add    BYTE PTR [rax],ah
   14000a2a9:	add    BYTE PTR [rax],ah
   14000a2ab:	add    BYTE PTR [rax],ah
   14000a2ad:	add    BYTE PTR [rax],ah
   14000a2af:	add    BYTE PTR [rax],ah
   14000a2b1:	add    BYTE PTR [rax],ah
   14000a2b3:	add    BYTE PTR [rax],ah
   14000a2b5:	add    BYTE PTR [rax],ah
   14000a2b7:	add    BYTE PTR [rax],ah
   14000a2b9:	add    BYTE PTR [rax],ah
   14000a2bb:	add    BYTE PTR [rax],ah
   14000a2bd:	add    BYTE PTR [rax+rax*1],bh
   14000a2c0:	push   rbp
   14000a2c1:	add    BYTE PTR [rbx+0x0],dh
   14000a2c4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a2c8:	rex.WB add BYTE PTR [r8+rax*1+0x3e],spl
   14000a2cd:	add    BYTE PTR [rbx+0x0],dl
   14000a2d0:	sub    eax,0x2d003100
   14000a2d5:	add    BYTE PTR [rip+0x31002d00],dh        # 0x17100cfdb
   14000a2db:	add    BYTE PTR [rax],bh
   14000a2dd:	add    BYTE PTR [rax+rax*1],bh
   14000a2e0:	(bad)  
   14000a2e1:	add    BYTE PTR [rbp+0x0],dl
   14000a2e4:	jae    0x14000a2e6
   14000a2e6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a2ea:	rex.WB add BYTE PTR [r8+rax*1+0x3e],spl
   14000a2ef:	add    BYTE PTR [rax],ah
   14000a2f1:	add    BYTE PTR [rax],ah
   14000a2f3:	add    BYTE PTR [rax],ah
   14000a2f5:	add    BYTE PTR [rax],ah
   14000a2f7:	add    BYTE PTR [rax],ah
   14000a2f9:	add    BYTE PTR [rax],ah
   14000a2fb:	add    BYTE PTR [rax],ah
   14000a2fd:	add    BYTE PTR [rax],ah
   14000a2ff:	add    BYTE PTR [rax],ah
   14000a301:	add    BYTE PTR [rax],ah
   14000a303:	add    BYTE PTR [rax],ah
   14000a305:	add    BYTE PTR [rax],ah
   14000a307:	add    BYTE PTR [rax+rax*1],bh
   14000a30a:	push   rdx
   14000a30b:	add    BYTE PTR [rbp+0x0],dh
   14000a30e:	outs   dx,BYTE PTR ds:[rsi]
   14000a30f:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000a313:	add    BYTE PTR [rsi+0x0],dh
   14000a316:	add    BYTE PTR gs:[rax+rax*1+0x3e],ch
   14000a31b:	add    BYTE PTR [rax+0x0],cl
   14000a31e:	imul   eax,DWORD PTR [rax],0x680067
   14000a324:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a328:	je     0x14000a32a
   14000a32a:	add    BYTE PTR [r14+0x0],sil
   14000a32e:	(bad)  
   14000a32f:	add    BYTE PTR [rcx+0x0],ch
   14000a332:	ins    BYTE PTR es:[rdi],dx
   14000a333:	add    BYTE PTR [rcx+0x0],ah
   14000a336:	(bad)  
   14000a337:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a33b:	add    BYTE PTR [rax+rax*1],bh
   14000a33e:	(bad)  
   14000a33f:	add    BYTE PTR [rdx+0x0],dl
   14000a342:	jne    0x14000a344
   14000a344:	outs   dx,BYTE PTR ds:[rsi]
   14000a345:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000a349:	add    BYTE PTR [rsi+0x0],dh
   14000a34c:	add    BYTE PTR gs:[rax+rax*1+0x3e],ch
   14000a351:	add    BYTE PTR [rax],ah
   14000a353:	add    BYTE PTR [rax],ah
   14000a355:	add    BYTE PTR [rax],ah
   14000a357:	add    BYTE PTR [rax],ah
   14000a359:	add    BYTE PTR [rax],ah
   14000a35b:	add    BYTE PTR [rax],ah
   14000a35d:	add    BYTE PTR [rax],ah
   14000a35f:	add    BYTE PTR [rax],ah
   14000a361:	add    BYTE PTR [rax+rax*1],bh
   14000a364:	(bad)  
   14000a365:	add    BYTE PTR [rax+0x0],dl
   14000a368:	jb     0x14000a36a
   14000a36a:	imul   eax,DWORD PTR [rax],0x63006e
   14000a370:	imul   eax,DWORD PTR [rax],0x610070
   14000a376:	ins    BYTE PTR es:[rdi],dx
   14000a377:	add    BYTE PTR [rsi],bh
   14000a379:	add    BYTE PTR [rax],ah
   14000a37b:	add    BYTE PTR [rax],ah
   14000a37d:	add    BYTE PTR [rax],ah
   14000a37f:	add    BYTE PTR [rax],ah
   14000a381:	add    BYTE PTR [rax+rax*1],bh
   14000a384:	(bad)  
   14000a385:	add    BYTE PTR [rax+0x0],dl
   14000a388:	jb     0x14000a38a
   14000a38a:	imul   eax,DWORD PTR [rax],0x63006e
   14000a390:	imul   eax,DWORD PTR [rax],0x610070
   14000a396:	ins    BYTE PTR es:[rdi],dx
   14000a397:	add    BYTE PTR [rbx+0x0],dh
   14000a39a:	add    BYTE PTR ds:[rax],ah
   14000a39d:	add    BYTE PTR [rax],ah
   14000a39f:	add    BYTE PTR [rax],ah
   14000a3a1:	add    BYTE PTR [rax],ah
   14000a3a3:	add    BYTE PTR [rax+rax*1],bh
   14000a3a6:	push   rbx
   14000a3a7:	add    BYTE PTR [rbp+0x0],ah
   14000a3aa:	je     0x14000a3ac
   14000a3ac:	je     0x14000a3ae
   14000a3ae:	imul   eax,DWORD PTR [rax],0x67006e
   14000a3b4:	jae    0x14000a3b6
   14000a3b6:	add    BYTE PTR ds:[rax],ah
   14000a3b9:	add    BYTE PTR [rax],ah
   14000a3bb:	add    BYTE PTR [rax],ah
   14000a3bd:	add    BYTE PTR [rax],ah
   14000a3bf:	add    BYTE PTR [rax],ah
   14000a3c1:	add    BYTE PTR [rax],ah
   14000a3c3:	add    BYTE PTR [rax],ah
   14000a3c5:	add    BYTE PTR [rax],ah
   14000a3c7:	add    BYTE PTR [rax+rax*1],bh
   14000a3ca:	rex.WRB add BYTE PTR [r13+0x0],r14b
   14000a3ce:	ins    BYTE PTR es:[rdi],dx
   14000a3cf:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a3d3:	add    BYTE PTR [rax+0x0],dh
   14000a3d6:	ins    BYTE PTR es:[rdi],dx
   14000a3d7:	add    BYTE PTR [rbp+0x0],ah
   14000a3da:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000a3de:	jae    0x14000a3e0
   14000a3e0:	je     0x14000a3e2
   14000a3e2:	(bad)  
   14000a3e3:	add    BYTE PTR [rsi+0x0],ch
   14000a3e6:	movsxd eax,DWORD PTR [rax]
   14000a3e8:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a3ec:	push   rax
   14000a3ed:	add    BYTE PTR [rdi+0x0],ch
   14000a3f0:	ins    BYTE PTR es:[rdi],dx
   14000a3f1:	add    BYTE PTR [rcx+0x0],ch
   14000a3f4:	movsxd eax,DWORD PTR [rax]
   14000a3f6:	jns    0x14000a3f8
   14000a3f8:	add    BYTE PTR ds:[rcx+0x0],cl
   14000a3fc:	add    BYTE PTR [esi+0x0],ch
   14000a400:	outs   dx,DWORD PTR ds:[rsi]
   14000a401:	add    BYTE PTR [rdx+0x0],dh
   14000a404:	add    BYTE PTR gs:[rsi+0x0],cl
   14000a408:	add    BYTE PTR gs:[rdi+0x0],dh
   14000a40c:	cmp    al,0x0
   14000a40e:	(bad)  
   14000a40f:	add    BYTE PTR [rbp+0x0],cl
   14000a412:	jne    0x14000a414
   14000a414:	ins    BYTE PTR es:[rdi],dx
   14000a415:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a419:	add    BYTE PTR [rax+0x0],dh
   14000a41c:	ins    BYTE PTR es:[rdi],dx
   14000a41d:	add    BYTE PTR [rbp+0x0],ah
   14000a420:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000a424:	jae    0x14000a426
   14000a426:	je     0x14000a428
   14000a428:	(bad)  
   14000a429:	add    BYTE PTR [rsi+0x0],ch
   14000a42c:	movsxd eax,DWORD PTR [rax]
   14000a42e:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a432:	push   rax
   14000a433:	add    BYTE PTR [rdi+0x0],ch
   14000a436:	ins    BYTE PTR es:[rdi],dx
   14000a437:	add    BYTE PTR [rcx+0x0],ch
   14000a43a:	movsxd eax,DWORD PTR [rax]
   14000a43c:	jns    0x14000a43e
   14000a43e:	add    BYTE PTR ds:[rax],ah
   14000a441:	add    BYTE PTR [rax],ah
   14000a443:	add    BYTE PTR [rax],ah
   14000a445:	add    BYTE PTR [rax],ah
   14000a447:	add    BYTE PTR [rax],ah
   14000a449:	add    BYTE PTR [rax],ah
   14000a44b:	add    BYTE PTR [rax],ah
   14000a44d:	add    BYTE PTR [rax],ah
   14000a44f:	add    BYTE PTR [rax+rax*1],bh
   14000a452:	add    BYTE PTR [rcx+0x0],r13b
   14000a456:	jae    0x14000a458
   14000a458:	(bad)  
   14000a459:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a45d:	add    BYTE PTR [rdi+0x0],ch
   14000a460:	ja     0x14000a462
   14000a462:	push   rbx
   14000a463:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a467:	add    BYTE PTR [rdx+0x0],dh
   14000a46a:	je     0x14000a46c
   14000a46c:	rex.WB add BYTE PTR [r14+0x0],spl
   14000a470:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000a474:	rex.X add BYTE PTR [rcx+0x0],spl
   14000a478:	je     0x14000a47a
   14000a47a:	je     0x14000a47c
   14000a47c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a480:	imul   eax,DWORD PTR [rax],0x730065
   14000a486:	add    BYTE PTR ds:[rsi+0x0],ah
   14000a48a:	(bad)  
   14000a48b:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000a48f:	add    BYTE PTR [rbp+0x0],ah
   14000a492:	cmp    al,0x0
   14000a494:	(bad)  
   14000a495:	add    BYTE PTR [rax+rax*1+0x69],al
   14000a499:	add    BYTE PTR [rbx+0x0],dh
   14000a49c:	(bad)  
   14000a49d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a4a1:	add    BYTE PTR [rdi+0x0],ch
   14000a4a4:	ja     0x14000a4a6
   14000a4a6:	push   rbx
   14000a4a7:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a4ab:	add    BYTE PTR [rdx+0x0],dh
   14000a4ae:	je     0x14000a4b0
   14000a4b0:	rex.WB add BYTE PTR [r14+0x0],spl
   14000a4b4:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000a4b8:	rex.X add BYTE PTR [rcx+0x0],spl
   14000a4bc:	je     0x14000a4be
   14000a4be:	je     0x14000a4c0
   14000a4c0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a4c4:	imul   eax,DWORD PTR [rax],0x730065
   14000a4ca:	add    BYTE PTR ds:[rax],ah
   14000a4cd:	add    BYTE PTR [rax],ah
   14000a4cf:	add    BYTE PTR [rax],ah
   14000a4d1:	add    BYTE PTR [rax],ah
   14000a4d3:	add    BYTE PTR [rax],ah
   14000a4d5:	add    BYTE PTR [rax],ah
   14000a4d7:	add    BYTE PTR [rax],ah
   14000a4d9:	add    BYTE PTR [rax],ah
   14000a4db:	add    BYTE PTR [rax+rax*1],bh
   14000a4de:	push   rbx
   14000a4df:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000a4e3:	add    BYTE PTR [rax+0x0],dh
   14000a4e6:	rex.WB add BYTE PTR [r14+0x0],spl
   14000a4ea:	rex.RXB add BYTE PTR [r15+0x0],r13b
   14000a4ee:	imul   eax,DWORD PTR [rax],0x67006e
   14000a4f4:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000a4f8:	rex.X add BYTE PTR [rcx+0x0],spl
   14000a4fc:	je     0x14000a4fe
   14000a4fe:	je     0x14000a500
   14000a500:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a504:	imul   eax,DWORD PTR [rax],0x730065
   14000a50a:	add    BYTE PTR ds:[rsi+0x0],ah
   14000a50e:	(bad)  
   14000a50f:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000a513:	add    BYTE PTR [rbp+0x0],ah
   14000a516:	cmp    al,0x0
   14000a518:	(bad)  
   14000a519:	add    BYTE PTR [rbx+0x0],dl
   14000a51c:	je     0x14000a51e
   14000a51e:	outs   dx,DWORD PTR ds:[rsi]
   14000a51f:	add    BYTE PTR [rax+0x0],dh
   14000a522:	rex.WB add BYTE PTR [r14+0x0],spl
   14000a526:	rex.RXB add BYTE PTR [r15+0x0],r13b
   14000a52a:	imul   eax,DWORD PTR [rax],0x67006e
   14000a530:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000a534:	rex.X add BYTE PTR [rcx+0x0],spl
   14000a538:	je     0x14000a53a
   14000a53a:	je     0x14000a53c
   14000a53c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a540:	imul   eax,DWORD PTR [rax],0x730065
   14000a546:	add    BYTE PTR ds:[rax],ah
   14000a549:	add    BYTE PTR [rax],ah
   14000a54b:	add    BYTE PTR [rax],ah
   14000a54d:	add    BYTE PTR [rax],ah
   14000a54f:	add    BYTE PTR [rax],ah
   14000a551:	add    BYTE PTR [rax],ah
   14000a553:	add    BYTE PTR [rax],ah
   14000a555:	add    BYTE PTR [rax],ah
   14000a557:	add    BYTE PTR [rax+rax*1],bh
   14000a55a:	add    BYTE PTR [r8+rax*1+0x6c],bpl
   14000a55f:	add    BYTE PTR [rdi+0x0],ch
   14000a562:	ja     0x14000a564
   14000a564:	rex.W add BYTE PTR [rcx+0x0],spl
   14000a568:	jb     0x14000a56a
   14000a56a:	add    BYTE PTR fs:[rax+rax*1+0x65],dl
   14000a56f:	add    BYTE PTR [rdx+0x0],dh
   14000a572:	ins    DWORD PTR es:[rdi],dx
   14000a573:	add    BYTE PTR [rcx+0x0],ch
   14000a576:	outs   dx,BYTE PTR ds:[rsi]
   14000a577:	add    BYTE PTR [rcx+0x0],ah
   14000a57a:	je     0x14000a57c
   14000a57c:	add    BYTE PTR gs:[rsi],bh
   14000a57f:	add    BYTE PTR [rsi+0x0],ah
   14000a582:	(bad)  
   14000a583:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000a587:	add    BYTE PTR [rbp+0x0],ah
   14000a58a:	cmp    al,0x0
   14000a58c:	(bad)  
   14000a58d:	add    BYTE PTR [rcx+0x0],al
   14000a590:	ins    BYTE PTR es:[rdi],dx
   14000a591:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000a595:	add    BYTE PTR [rdi+0x0],dh
   14000a598:	rex.W add BYTE PTR [rcx+0x0],spl
   14000a59c:	jb     0x14000a59e
   14000a59e:	add    BYTE PTR fs:[rax+rax*1+0x65],dl
   14000a5a3:	add    BYTE PTR [rdx+0x0],dh
   14000a5a6:	ins    DWORD PTR es:[rdi],dx
   14000a5a7:	add    BYTE PTR [rcx+0x0],ch
   14000a5aa:	outs   dx,BYTE PTR ds:[rsi]
   14000a5ab:	add    BYTE PTR [rcx+0x0],ah
   14000a5ae:	je     0x14000a5b0
   14000a5b0:	add    BYTE PTR gs:[rsi],bh
   14000a5b3:	add    BYTE PTR [rax],ah
   14000a5b5:	add    BYTE PTR [rax],ah
   14000a5b7:	add    BYTE PTR [rax],ah
   14000a5b9:	add    BYTE PTR [rax],ah
   14000a5bb:	add    BYTE PTR [rax],ah
   14000a5bd:	add    BYTE PTR [rax],ah
   14000a5bf:	add    BYTE PTR [rax],ah
   14000a5c1:	add    BYTE PTR [rax],ah
   14000a5c3:	add    BYTE PTR [rax+rax*1],bh
   14000a5c6:	push   rbx
   14000a5c7:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a5cb:	add    BYTE PTR [rdx+0x0],dh
   14000a5ce:	je     0x14000a5d0
   14000a5d0:	push   rdi
   14000a5d1:	add    BYTE PTR [rax+0x0],ch
   14000a5d4:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a5d8:	add    BYTE PTR [r14+0x0],sil
   14000a5dc:	(bad)  
   14000a5dd:	add    BYTE PTR [rcx+0x0],ch
   14000a5e0:	ins    BYTE PTR es:[rdi],dx
   14000a5e1:	add    BYTE PTR [rcx+0x0],ah
   14000a5e4:	(bad)  
   14000a5e5:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a5e9:	add    BYTE PTR [rsi],bh
   14000a5eb:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000a5ef:	add    BYTE PTR [rbp+0x0],dh
   14000a5f2:	add    BYTE PTR gs:[rax+rax*1],bh
   14000a5f6:	(bad)  
   14000a5f7:	add    BYTE PTR [rbx+0x0],dl
   14000a5fa:	je     0x14000a5fc
   14000a5fc:	(bad)  
   14000a5fd:	add    BYTE PTR [rdx+0x0],dh
   14000a600:	je     0x14000a602
   14000a602:	push   rdi
   14000a603:	add    BYTE PTR [rax+0x0],ch
   14000a606:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a60a:	add    BYTE PTR [r14+0x0],sil
   14000a60e:	(bad)  
   14000a60f:	add    BYTE PTR [rcx+0x0],ch
   14000a612:	ins    BYTE PTR es:[rdi],dx
   14000a613:	add    BYTE PTR [rcx+0x0],ah
   14000a616:	(bad)  
   14000a617:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a61b:	add    BYTE PTR [rsi],bh
   14000a61d:	add    BYTE PTR [rax],ah
   14000a61f:	add    BYTE PTR [rax],ah
   14000a621:	add    BYTE PTR [rax],ah
   14000a623:	add    BYTE PTR [rax],ah
   14000a625:	add    BYTE PTR [rax],ah
   14000a627:	add    BYTE PTR [rax],ah
   14000a629:	add    BYTE PTR [rax],ah
   14000a62b:	add    BYTE PTR [rax],ah
   14000a62d:	add    BYTE PTR [rax+rax*1],bh
   14000a630:	push   rdx
   14000a631:	add    BYTE PTR [rbp+0x0],dh
   14000a634:	outs   dx,BYTE PTR ds:[rsi]
   14000a635:	add    BYTE PTR [rdi+0x0],cl
   14000a638:	outs   dx,BYTE PTR ds:[rsi]
   14000a639:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000a63d:	add    BYTE PTR [rcx+0x0],cl
   14000a640:	data16 add BYTE PTR [rsi+0x0],cl
   14000a644:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   14000a649:	add    BYTE PTR [rdi+0x0],ch
   14000a64c:	jb     0x14000a64e
   14000a64e:	imul   eax,DWORD PTR [rax],0x41
   14000a651:	add    BYTE PTR [rsi+0x0],dh
   14000a654:	(bad)  
   14000a655:	add    BYTE PTR [rcx+0x0],ch
   14000a658:	ins    BYTE PTR es:[rdi],dx
   14000a659:	add    BYTE PTR [rcx+0x0],ah
   14000a65c:	(bad)  
   14000a65d:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a661:	add    BYTE PTR [rsi],bh
   14000a663:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000a667:	add    BYTE PTR [rbp+0x0],dh
   14000a66a:	add    BYTE PTR gs:[rax+rax*1],bh
   14000a66e:	(bad)  
   14000a66f:	add    BYTE PTR [rdx+0x0],dl
   14000a672:	jne    0x14000a674
   14000a674:	outs   dx,BYTE PTR ds:[rsi]
   14000a675:	add    BYTE PTR [rdi+0x0],cl
   14000a678:	outs   dx,BYTE PTR ds:[rsi]
   14000a679:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000a67d:	add    BYTE PTR [rcx+0x0],cl
   14000a680:	data16 add BYTE PTR [rsi+0x0],cl
   14000a684:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   14000a689:	add    BYTE PTR [rdi+0x0],ch
   14000a68c:	jb     0x14000a68e
   14000a68e:	imul   eax,DWORD PTR [rax],0x41
   14000a691:	add    BYTE PTR [rsi+0x0],dh
   14000a694:	(bad)  
   14000a695:	add    BYTE PTR [rcx+0x0],ch
   14000a698:	ins    BYTE PTR es:[rdi],dx
   14000a699:	add    BYTE PTR [rcx+0x0],ah
   14000a69c:	(bad)  
   14000a69d:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a6a1:	add    BYTE PTR [rsi],bh
   14000a6a3:	add    BYTE PTR [rax],ah
   14000a6a5:	add    BYTE PTR [rax],ah
   14000a6a7:	add    BYTE PTR [rax],ah
   14000a6a9:	add    BYTE PTR [rax],ah
   14000a6ab:	add    BYTE PTR [rax],ah
   14000a6ad:	add    BYTE PTR [rax],ah
   14000a6af:	add    BYTE PTR [rax],ah
   14000a6b1:	add    BYTE PTR [rax],ah
   14000a6b3:	add    BYTE PTR [rax+rax*1],bh
   14000a6b6:	add    BYTE PTR [r8+rax*1+0x6c],bpl
   14000a6bb:	add    BYTE PTR [rdi+0x0],ch
   14000a6be:	ja     0x14000a6c0
   14000a6c0:	push   rbx
   14000a6c1:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a6c5:	add    BYTE PTR [rdx+0x0],dh
   14000a6c8:	je     0x14000a6ca
   14000a6ca:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000a6ce:	add    BYTE PTR [rbp+0x0],r12b
   14000a6d2:	ins    DWORD PTR es:[rdi],dx
   14000a6d3:	add    BYTE PTR [rcx+0x0],ah
   14000a6d6:	outs   dx,BYTE PTR ds:[rsi]
   14000a6d7:	add    BYTE PTR [rax+rax*1+0x3e],ah
   14000a6db:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000a6df:	add    BYTE PTR [rbp+0x0],dh
   14000a6e2:	add    BYTE PTR gs:[rax+rax*1],bh
   14000a6e6:	(bad)  
   14000a6e7:	add    BYTE PTR [rcx+0x0],al
   14000a6ea:	ins    BYTE PTR es:[rdi],dx
   14000a6eb:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000a6ef:	add    BYTE PTR [rdi+0x0],dh
   14000a6f2:	push   rbx
   14000a6f3:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a6f7:	add    BYTE PTR [rdx+0x0],dh
   14000a6fa:	je     0x14000a6fc
   14000a6fc:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000a700:	add    BYTE PTR [rbp+0x0],r12b
   14000a704:	ins    DWORD PTR es:[rdi],dx
   14000a705:	add    BYTE PTR [rcx+0x0],ah
   14000a708:	outs   dx,BYTE PTR ds:[rsi]
   14000a709:	add    BYTE PTR [rax+rax*1+0x3e],ah
   14000a70d:	add    BYTE PTR [rax],ah
   14000a70f:	add    BYTE PTR [rax],ah
   14000a711:	add    BYTE PTR [rax],ah
   14000a713:	add    BYTE PTR [rax],ah
   14000a715:	add    BYTE PTR [rax],ah
   14000a717:	add    BYTE PTR [rax],ah
   14000a719:	add    BYTE PTR [rax],ah
   14000a71b:	add    BYTE PTR [rax],ah
   14000a71d:	add    BYTE PTR [rax+rax*1],bh
   14000a720:	rex.W add BYTE PTR [rcx+0x0],bpl
   14000a724:	add    BYTE PTR fs:[rax+rax*1+0x65],ah
   14000a729:	add    BYTE PTR [rsi+0x0],ch
   14000a72c:	add    BYTE PTR ds:[rsi+0x0],ah
   14000a730:	(bad)  
   14000a731:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000a735:	add    BYTE PTR [rbp+0x0],ah
   14000a738:	cmp    al,0x0
   14000a73a:	(bad)  
   14000a73b:	add    BYTE PTR [rax+0x0],cl
   14000a73e:	imul   eax,DWORD PTR [rax],0x640064
   14000a744:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a748:	add    BYTE PTR ds:[rax],ah
   14000a74b:	add    BYTE PTR [rax],ah
   14000a74d:	add    BYTE PTR [rax],ah
   14000a74f:	add    BYTE PTR [rax],ah
   14000a751:	add    BYTE PTR [rax],ah
   14000a753:	add    BYTE PTR [rax],ah
   14000a755:	add    BYTE PTR [rax],ah
   14000a757:	add    BYTE PTR [rax],ah
   14000a759:	add    BYTE PTR [rax+rax*1],bh
   14000a75c:	push   rdx
   14000a75d:	add    BYTE PTR [rbp+0x0],dh
   14000a760:	outs   dx,BYTE PTR ds:[rsi]
   14000a761:	add    BYTE PTR [rdi+0x0],cl
   14000a764:	outs   dx,BYTE PTR ds:[rsi]
   14000a765:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000a769:	add    BYTE PTR [rcx+0x0],cl
   14000a76c:	data16 add BYTE PTR [rcx+0x0],cl
   14000a770:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14000a775:	add    BYTE PTR [rsi],bh
   14000a777:	add    BYTE PTR [rsi+0x0],ah
   14000a77a:	(bad)  
   14000a77b:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000a77f:	add    BYTE PTR [rbp+0x0],ah
   14000a782:	cmp    al,0x0
   14000a784:	(bad)  
   14000a785:	add    BYTE PTR [rdx+0x0],dl
   14000a788:	jne    0x14000a78a
   14000a78a:	outs   dx,BYTE PTR ds:[rsi]
   14000a78b:	add    BYTE PTR [rdi+0x0],cl
   14000a78e:	outs   dx,BYTE PTR ds:[rsi]
   14000a78f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000a793:	add    BYTE PTR [rcx+0x0],cl
   14000a796:	data16 add BYTE PTR [rcx+0x0],cl
   14000a79a:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14000a79f:	add    BYTE PTR [rsi],bh
   14000a7a1:	add    BYTE PTR [rax],ah
   14000a7a3:	add    BYTE PTR [rax],ah
   14000a7a5:	add    BYTE PTR [rax],ah
   14000a7a7:	add    BYTE PTR [rax],ah
   14000a7a9:	add    BYTE PTR [rax],ah
   14000a7ab:	add    BYTE PTR [rax],ah
   14000a7ad:	add    BYTE PTR [rax],ah
   14000a7af:	add    BYTE PTR [rax],ah
   14000a7b1:	add    BYTE PTR [rax+rax*1],bh
   14000a7b4:	push   rbp
   14000a7b5:	add    BYTE PTR [rbx+0x0],dh
   14000a7b8:	add    BYTE PTR gs:[rbp+0x0],dl
   14000a7bc:	outs   dx,BYTE PTR ds:[rsi]
   14000a7bd:	add    BYTE PTR [rcx+0x0],ch
   14000a7c0:	data16 add BYTE PTR [rcx+0x0],ch
   14000a7c4:	add    BYTE PTR gs:[rax+rax*1+0x53],ah
   14000a7c9:	add    BYTE PTR [rbx+0x0],ah
   14000a7cc:	push   0x64006500
   14000a7d1:	add    BYTE PTR [rbp+0x0],dh
   14000a7d4:	ins    BYTE PTR es:[rdi],dx
   14000a7d5:	add    BYTE PTR [rcx+0x0],ch
   14000a7d8:	outs   dx,BYTE PTR ds:[rsi]
   14000a7d9:	add    BYTE PTR [rdi+0x0],ah
   14000a7dc:	add    BYTE PTR [r14+0x0],r13b
   14000a7e0:	add    BYTE PTR [ecx+0x0],ch
   14000a7e4:	outs   dx,BYTE PTR ds:[rsi]
   14000a7e5:	add    BYTE PTR [rbp+0x0],ah
   14000a7e8:	add    BYTE PTR ds:[rax+rax*1+0x72],dh
   14000a7ed:	add    BYTE PTR [rbp+0x0],dh
   14000a7f0:	add    BYTE PTR gs:[rax+rax*1],bh
   14000a7f4:	(bad)  
   14000a7f5:	add    BYTE PTR [rbp+0x0],dl
   14000a7f8:	jae    0x14000a7fa
   14000a7fa:	add    BYTE PTR gs:[rbp+0x0],dl
   14000a7fe:	outs   dx,BYTE PTR ds:[rsi]
   14000a7ff:	add    BYTE PTR [rcx+0x0],ch
   14000a802:	data16 add BYTE PTR [rcx+0x0],ch
   14000a806:	add    BYTE PTR gs:[rax+rax*1+0x53],ah
   14000a80b:	add    BYTE PTR [rbx+0x0],ah
   14000a80e:	push   0x64006500
   14000a813:	add    BYTE PTR [rbp+0x0],dh
   14000a816:	ins    BYTE PTR es:[rdi],dx
   14000a817:	add    BYTE PTR [rcx+0x0],ch
   14000a81a:	outs   dx,BYTE PTR ds:[rsi]
   14000a81b:	add    BYTE PTR [rdi+0x0],ah
   14000a81e:	add    BYTE PTR [r14+0x0],r13b
   14000a822:	add    BYTE PTR [ecx+0x0],ch
   14000a826:	outs   dx,BYTE PTR ds:[rsi]
   14000a827:	add    BYTE PTR [rbp+0x0],ah
   14000a82a:	add    BYTE PTR ds:[rax],ah
   14000a82d:	add    BYTE PTR [rax],ah
   14000a82f:	add    BYTE PTR [rax],ah
   14000a831:	add    BYTE PTR [rax],ah
   14000a833:	add    BYTE PTR [rax+rax*1],bh
   14000a836:	(bad)  
   14000a837:	add    BYTE PTR [rbx+0x0],dl
   14000a83a:	add    BYTE PTR gs:[rax+rax*1+0x74],dh
   14000a83f:	add    BYTE PTR [rcx+0x0],ch
   14000a842:	outs   dx,BYTE PTR ds:[rsi]
   14000a843:	add    BYTE PTR [rdi+0x0],ah
   14000a846:	jae    0x14000a848
   14000a848:	add    BYTE PTR ds:[rax],ah
   14000a84b:	add    BYTE PTR [rax],ah
   14000a84d:	add    BYTE PTR [rax],ah
   14000a84f:	add    BYTE PTR [rax],ah
   14000a851:	add    BYTE PTR [rax+rax*1],bh
   14000a854:	add    BYTE PTR [r11+0x0],spl
   14000a858:	je     0x14000a85a
   14000a85a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a860:	jae    0x14000a862
   14000a862:	and    BYTE PTR [rax],al
   14000a864:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a868:	outs   dx,BYTE PTR ds:[rsi]
   14000a869:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a86d:	add    BYTE PTR [rax+0x0],bh
   14000a870:	je     0x14000a872
   14000a872:	cmp    eax,0x4c002200
   14000a877:	add    BYTE PTR [rdi+0x0],ch
   14000a87a:	movsxd eax,DWORD PTR [rax]
   14000a87c:	(bad)  
   14000a87d:	add    BYTE PTR [rax+rax*1+0x53],ch
   14000a881:	add    BYTE PTR [rcx+0x0],bh
   14000a884:	jae    0x14000a886
   14000a886:	je     0x14000a888
   14000a888:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a88c:	and    al,BYTE PTR [rax]
   14000a88e:	add    BYTE PTR ds:[rax],ah
   14000a891:	add    BYTE PTR [rax],ah
   14000a893:	add    BYTE PTR [rax],ah
   14000a895:	add    BYTE PTR [rax],ah
   14000a897:	add    BYTE PTR [rax],ah
   14000a899:	add    BYTE PTR [rax],ah
   14000a89b:	add    BYTE PTR [rax],ah
   14000a89d:	add    BYTE PTR [rax],ah
   14000a89f:	add    BYTE PTR [rax+rax*1],bh
   14000a8a2:	add    BYTE PTR [r8+0x0],r15b
   14000a8a6:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a8aa:	add    BYTE PTR ds:[rax],ah
   14000a8ad:	add    BYTE PTR [rax],ah
   14000a8af:	add    BYTE PTR [rax],ah
   14000a8b1:	add    BYTE PTR [rax],ah
   14000a8b3:	add    BYTE PTR [rax],ah
   14000a8b5:	add    BYTE PTR [rax],ah
   14000a8b7:	add    BYTE PTR [rax],ah
   14000a8b9:	add    BYTE PTR [rax],ah
   14000a8bb:	add    BYTE PTR [rax],ah
   14000a8bd:	add    BYTE PTR [rax],ah
   14000a8bf:	add    BYTE PTR [rax],ah
   14000a8c1:	add    BYTE PTR [rax],ah
   14000a8c3:	add    BYTE PTR [rax+rax*1],bh
   14000a8c6:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a8ca:	ins    DWORD PTR es:[rdi],dx
   14000a8cb:	add    BYTE PTR [rbp+0x0],ch
   14000a8ce:	(bad)  
   14000a8cf:	add    BYTE PTR [rsi+0x0],ch
   14000a8d2:	add    BYTE PTR fs:[rsi],bh
   14000a8d5:	add    BYTE PTR [rip+0x69007700],ah        # 0x1a9011fdb
   14000a8db:	add    BYTE PTR [rsi+0x0],ch
   14000a8de:	add    BYTE PTR fs:[rcx+0x0],ch
   14000a8e2:	jb     0x14000a8e4
   14000a8e4:	and    eax,0x73005c00
   14000a8e9:	add    BYTE PTR [rcx+0x0],bh
   14000a8ec:	jae    0x14000a8ee
   14000a8ee:	je     0x14000a8f0
   14000a8f0:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a8f4:	xor    eax,DWORD PTR [rax]
   14000a8f6:	xor    al,BYTE PTR [rax]
   14000a8f8:	pop    rsp
   14000a8f9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000a8fd:	add    BYTE PTR [rsi+0x0],dh
   14000a900:	imul   eax,DWORD PTR [rax],0x650063
   14000a906:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a90a:	jb     0x14000a90c
   14000a90c:	outs   dx,DWORD PTR ds:[rsi]
   14000a90d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a911:	add    BYTE PTR [rbp+0x0],ah
   14000a914:	jb     0x14000a916
   14000a916:	add    BYTE PTR cs:[rbp+0x0],ah
   14000a91a:	js     0x14000a91c
   14000a91c:	add    BYTE PTR gs:[rax+rax*1],bh
   14000a920:	(bad)  
   14000a921:	add    BYTE PTR [rbx+0x0],al
   14000a924:	outs   dx,DWORD PTR ds:[rsi]
   14000a925:	add    BYTE PTR [rbp+0x0],ch
   14000a928:	ins    DWORD PTR es:[rdi],dx
   14000a929:	add    BYTE PTR [rcx+0x0],ah
   14000a92c:	outs   dx,BYTE PTR ds:[rsi]
   14000a92d:	add    BYTE PTR [rax+rax*1+0x3e],ah
   14000a931:	add    BYTE PTR [rax],ah
   14000a933:	add    BYTE PTR [rax],ah
   14000a935:	add    BYTE PTR [rax],ah
   14000a937:	add    BYTE PTR [rax],ah
   14000a939:	add    BYTE PTR [rax],ah
   14000a93b:	add    BYTE PTR [rax],ah
   14000a93d:	add    BYTE PTR [rax],ah
   14000a93f:	add    BYTE PTR [rax],ah
   14000a941:	add    BYTE PTR [rax+rax*1],bh
   14000a944:	(bad)  
   14000a945:	add    BYTE PTR [rbp+0x0],al
   14000a948:	js     0x14000a94a
   14000a94a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000a94e:	add    BYTE PTR ds:[rax],ah
   14000a951:	add    BYTE PTR [rax],ah
   14000a953:	add    BYTE PTR [rax],ah
   14000a955:	add    BYTE PTR [rax],ah
   14000a957:	add    BYTE PTR [rax+rax*1],bh
   14000a95a:	(bad)  
   14000a95b:	add    BYTE PTR [rcx+0x0],al
   14000a95e:	movsxd eax,DWORD PTR [rax]
   14000a960:	je     0x14000a962
   14000a962:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a968:	jae    0x14000a96a
   14000a96a:	add    BYTE PTR ds:[rax+rax*1],bh
   14000a96e:	(bad)  
   14000a96f:	add    BYTE PTR [rax+rax*1+0x61],dl
   14000a973:	add    BYTE PTR [rbx+0x0],dh
   14000a976:	imul   eax,DWORD PTR [rax],0x3e
   14000a979:	add    BYTE PTR [rax],al
   14000a97b:	add    BYTE PTR [rax],al
   14000a97d:	add    BYTE PTR [rax],al
   14000a97f:	add    BYTE PTR [rbx+0x0],dl
   14000a982:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a986:	jae    0x14000a988
   14000a988:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a98e:	add    BYTE PTR [r13+0x0],sil
   14000a992:	je     0x14000a994
   14000a994:	outs   dx,DWORD PTR ds:[rsi]
   14000a995:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a999:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a99d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a9a1:	add    BYTE PTR [rbx+0x0],cl
   14000a9a4:	add    BYTE PTR gs:[rcx+0x0],bh
	...
   14000a9b0:	push   rbx
   14000a9b1:	add    BYTE PTR [rbp+0x0],ah
   14000a9b4:	jae    0x14000a9b6
   14000a9b6:	jae    0x14000a9b8
   14000a9b8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a9be:	rex.W add BYTE PTR [rdx+0x0],dl
   14000a9c2:	add    BYTE PTR [r11+0x0],r10b
   14000a9c6:	push   rbp
   14000a9c7:	add    BYTE PTR [rax+rax*1+0x54],cl
   14000a9cb:	add    BYTE PTR [rax],al
   14000a9cd:	add    BYTE PTR [rax],al
   14000a9cf:	add    BYTE PTR [rbx+0x0],dl
   14000a9d2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a9d6:	jae    0x14000a9d8
   14000a9d8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a9de:	push   rbx
   14000a9df:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a9e3:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   14000a9ef:	add    BYTE PTR [rbx+0x0],dl
   14000a9f2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a9f6:	jae    0x14000a9f8
   14000a9f8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a9fe:	push   rbx
   14000a9ff:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000aa03:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000aa07:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000aa0b:	add    BYTE PTR [rbp+0x0],ch
   14000aa0e:	add    BYTE PTR gs:[rbx+0x0],dl
   14000aa12:	je     0x14000aa14
   14000aa14:	(bad)  
   14000aa15:	add    BYTE PTR [rbp+0x0],ch
   14000aa18:	jo     0x14000aa1a
   14000aa1a:	add    BYTE PTR [rax],al
   14000aa1c:	add    BYTE PTR [rax],al
   14000aa1e:	add    BYTE PTR [rax],al
   14000aa20:	push   rbx
   14000aa21:	add    BYTE PTR [rdi+0x0],ch
   14000aa24:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000aa29:	add    BYTE PTR [rcx+0x0],ah
   14000aa2c:	jb     0x14000aa2e
   14000aa2e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000aa33:	add    BYTE PTR [rcx+0x0],ch
   14000aa36:	movsxd eax,DWORD PTR [rax]
   14000aa38:	jb     0x14000aa3a
   14000aa3a:	outs   dx,DWORD PTR ds:[rsi]
   14000aa3b:	add    BYTE PTR [rbx+0x0],dh
   14000aa3e:	outs   dx,DWORD PTR ds:[rsi]
   14000aa3f:	add    BYTE PTR [rsi+0x0],ah
   14000aa42:	je     0x14000aa44
   14000aa44:	pop    rsp
   14000aa45:	add    BYTE PTR [rax+0x0],dl
   14000aa48:	jb     0x14000aa4a
   14000aa4a:	outs   dx,DWORD PTR ds:[rsi]
   14000aa4b:	add    BYTE PTR [rsi+0x0],dh
   14000aa4e:	imul   eax,DWORD PTR [rax],0x690073
   14000aa54:	outs   dx,DWORD PTR ds:[rsi]
   14000aa55:	add    BYTE PTR [rsi+0x0],ch
   14000aa58:	imul   eax,DWORD PTR [rax],0x67006e
   14000aa5e:	pop    rsp
   14000aa5f:	add    BYTE PTR [rdi+0x0],cl
   14000aa62:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000aa66:	add    BYTE PTR [rbp+0x0],r9b
   14000aa6a:	pop    rsp
   14000aa6b:	add    BYTE PTR [rbx+0x0],dl
   14000aa6e:	add    BYTE PTR gs:[rbx+0x0],dh
   14000aa72:	jae    0x14000aa74
   14000aa74:	imul   eax,DWORD PTR [rax],0x6e006f
   14000aa7a:	jae    0x14000aa7c
   14000aa7c:	add    BYTE PTR [rax],al
   14000aa7e:	add    BYTE PTR [rax],al
   14000aa80:	push   rdx
   14000aa81:	add    BYTE PTR [rbp+0x0],ah
   14000aa84:	je     0x14000aa86
   14000aa86:	jb     0x14000aa88
   14000aa88:	jns    0x14000aa8a
   14000aa8a:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000aa8e:	jne    0x14000aa90
   14000aa90:	outs   dx,BYTE PTR ds:[rsi]
   14000aa91:	add    BYTE PTR [rax+rax*1+0x0],dh
	...
   14000aa9d:	add    BYTE PTR [rax],al
   14000aa9f:	add    BYTE PTR [rdx+0x0],dl
   14000aaa2:	add    BYTE PTR gs:[rax+rax*1+0x72],dh
   14000aaa7:	add    BYTE PTR [rcx+0x0],bh
   14000aaaa:	and    BYTE PTR [rax],al
   14000aaac:	push   rbx
   14000aaad:	add    BYTE PTR [rbx+0x0],ah
   14000aab0:	push   0x64006500
   14000aab5:	add    BYTE PTR [rbp+0x0],dh
   14000aab8:	ins    BYTE PTR es:[rdi],dx
   14000aab9:	add    BYTE PTR [rbp+0x0],ah
   14000aabc:	and    BYTE PTR [rax],al
   14000aabe:	movsxd eax,DWORD PTR [rax]
   14000aac0:	jb     0x14000aac2
   14000aac2:	add    BYTE PTR gs:[rcx+0x0],ah
   14000aac6:	je     0x14000aac8
   14000aac8:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000aacd:	add    BYTE PTR [rsi+0x0],ah
   14000aad0:	outs   dx,DWORD PTR ds:[rsi]
   14000aad1:	add    BYTE PTR [rdx+0x0],dh
   14000aad4:	and    BYTE PTR [rax],al
   14000aad6:	imul   eax,DWORD PTR [rax],0x63006e
   14000aadc:	outs   dx,DWORD PTR ds:[rsi]
   14000aadd:	add    BYTE PTR [rbp+0x0],ch
   14000aae0:	jo     0x14000aae2
   14000aae2:	ins    BYTE PTR es:[rdi],dx
   14000aae3:	add    BYTE PTR [rbp+0x0],ah
   14000aae6:	je     0x14000aae8
   14000aae8:	add    BYTE PTR gs:[rax],ah
   14000aaeb:	add    BYTE PTR [rbx+0x0],dh
   14000aaee:	add    BYTE PTR gs:[rbx+0x0],dh
   14000aaf2:	jae    0x14000aaf4
   14000aaf4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000aafa:	add    BYTE PTR [rax],al
   14000aafc:	add    BYTE PTR [rax],al
   14000aafe:	add    BYTE PTR [rax],al
   14000ab00:	pop    rsp
   14000ab01:	add    BYTE PTR [rbp+0x0],cl
   14000ab04:	imul   eax,DWORD PTR [rax],0x720063
   14000ab0a:	outs   dx,DWORD PTR ds:[rsi]
   14000ab0b:	add    BYTE PTR [rbx+0x0],dh
   14000ab0e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab0f:	add    BYTE PTR [rsi+0x0],ah
   14000ab12:	je     0x14000ab14
   14000ab14:	pop    rsp
   14000ab15:	add    BYTE PTR [rdi+0x0],dl
   14000ab18:	imul   eax,DWORD PTR [rax],0x64006e
   14000ab1e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab1f:	add    BYTE PTR [rdi+0x0],dh
   14000ab22:	jae    0x14000ab24
   14000ab24:	pop    rsp
   14000ab25:	add    BYTE PTR [rbp+0x0],al
   14000ab28:	outs   dx,BYTE PTR ds:[rsi]
   14000ab29:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ab2d:	add    BYTE PTR [rdx+0x0],dh
   14000ab30:	jo     0x14000ab32
   14000ab32:	jb     0x14000ab34
   14000ab34:	imul   eax,DWORD PTR [rax],0x650073
   14000ab3a:	rex.WRB add BYTE PTR [r15+0x0],r12b
   14000ab3e:	ins    DWORD PTR es:[rdi],dx
   14000ab3f:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000ab43:	add    BYTE PTR [rax],al
   14000ab45:	add    BYTE PTR [rax],al
   14000ab47:	add    BYTE PTR [rdx],ah
   14000ab49:	add    BYTE PTR [rax],ah
   14000ab4b:	add    BYTE PTR [rdi],ch
   14000ab4d:	add    BYTE PTR [rbx+0x0],ah
   14000ab50:	and    BYTE PTR [rax],al
   14000ab52:	(bad)  
   14000ab53:	add    BYTE PTR [rsi+0x0],dh
   14000ab56:	add    BYTE PTR [rax],al
   14000ab58:	(bad)  
   14000ab59:	add    BYTE PTR [rdi+0x0],ch
   14000ab5c:	and    BYTE PTR [rax],al
   14000ab5e:	and    al,BYTE PTR [rax]
	...
   14000ab70:	jnp    0x14000ab72
   14000ab72:	cmp    DWORD PTR [rax],eax
   14000ab74:	(bad)  
   14000ab75:	add    BYTE PTR [rbx],dh
   14000ab77:	add    BYTE PTR [rbx+0x0],al
   14000ab7a:	rex.XB add BYTE PTR [r8],sil
   14000ab7d:	add    BYTE PTR [rdi],dh
   14000ab7f:	add    BYTE PTR [rbx],dh
   14000ab81:	add    BYTE PTR [rip+0x37004200],ch        # 0x17700ed87
   14000ab87:	add    BYTE PTR [rsi+0x0],al
   14000ab8a:	xor    al,0x0
   14000ab8c:	sub    eax,0x42003400
   14000ab91:	add    BYTE PTR [rbx],dh
   14000ab93:	add    BYTE PTR [rdx+0x0],al
   14000ab96:	sub    eax,0x42004100
   14000ab9b:	add    BYTE PTR [rsi+0x0],al
   14000ab9e:	cmp    BYTE PTR [rax],al
   14000aba0:	sub    eax,0x34003700
   14000aba5:	add    BYTE PTR [rax+rax*1+0x46],al
   14000aba9:	add    BYTE PTR [rbx],dh
   14000abab:	add    BYTE PTR [rsi+0x0],al
   14000abae:	rex.XB add BYTE PTR [r9+0x0],al
   14000abb2:	add    BYTE PTR [r15],r14b
   14000abb5:	add    BYTE PTR [rsi],dh
   14000abb7:	add    BYTE PTR [rsi+0x0],al
   14000abba:	jge    0x14000abbc
   14000abbc:	add    BYTE PTR [rax],al
   14000abbe:	add    BYTE PTR [rax],al
   14000abc0:	push   rbx
   14000abc1:	add    BYTE PTR [rbp+0x0],ah
   14000abc4:	jae    0x14000abc6
   14000abc6:	jae    0x14000abc8
   14000abc8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000abce:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   14000abd3:	add    BYTE PTR [rax],al
   14000abd5:	add    BYTE PTR [rax],al
   14000abd7:	add    BYTE PTR [rbp+0x0],dl
   14000abda:	rex.WB add BYTE PTR [r13+0x0],cl
   14000abde:	outs   dx,DWORD PTR ds:[rsi]
   14000abdf:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000abe3:	add    BYTE PTR [rax],al
   14000abe5:	add    BYTE PTR [rax],al
   14000abe7:	add    BYTE PTR [rdi+0x0],cl
   14000abea:	jb     0x14000abec
   14000abec:	imul   eax,DWORD PTR [rax],0x690067
   14000abf2:	outs   dx,BYTE PTR ds:[rsi]
   14000abf3:	add    BYTE PTR [rax],al
   14000abf5:	add    BYTE PTR [rax],al
   14000abf7:	add    BYTE PTR [rcx+0x0],cl
   14000abfa:	outs   dx,BYTE PTR ds:[rsi]
   14000abfb:	add    BYTE PTR [rcx+0x0],ch
   14000abfe:	je     0x14000ac00
   14000ac00:	imul   eax,DWORD PTR [rax],0x740061
   14000ac06:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ac0c:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
	...
   14000ac1d:	add    BYTE PTR [rax],al
   14000ac1f:	add    BYTE PTR [rbx+0x0],dl
   14000ac22:	movsxd eax,DWORD PTR [rax]
   14000ac24:	push   0x64006500
   14000ac29:	add    BYTE PTR [rbp+0x0],dh
   14000ac2c:	ins    BYTE PTR es:[rdi],dx
   14000ac2d:	add    BYTE PTR [rbp+0x0],ah
   14000ac30:	and    BYTE PTR [rax],al
   14000ac32:	je     0x14000ac34
   14000ac34:	outs   dx,DWORD PTR ds:[rsi]
   14000ac35:	add    BYTE PTR [rax],ah
   14000ac37:	add    BYTE PTR [rdx+0x0],dh
   14000ac3a:	jne    0x14000ac3c
   14000ac3c:	outs   dx,BYTE PTR ds:[rsi]
   14000ac3d:	add    BYTE PTR [rax],ah
   14000ac3f:	add    BYTE PTR [rdi+0x0],cl
   14000ac42:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000ac46:	add    BYTE PTR [rbp+0x0],r9b
   14000ac4a:	add    BYTE PTR [r8+r8*1+0x69],bpl
   14000ac4f:	add    BYTE PTR [rbp+0x0],ah
   14000ac52:	outs   dx,BYTE PTR ds:[rsi]
   14000ac53:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ac57:	add    BYTE PTR [rdx+0x0],ah
   14000ac5a:	jns    0x14000ac5c
   14000ac5c:	and    BYTE PTR [rax],al
   14000ac5e:	movsxd eax,DWORD PTR [rax]
   14000ac60:	ins    BYTE PTR es:[rdi],dx
   14000ac61:	add    BYTE PTR [rcx+0x0],ch
   14000ac64:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ac68:	je     0x14000ac6a
   14000ac6a:	add    BYTE PTR [rax],al
   14000ac6c:	add    BYTE PTR [rax],al
   14000ac6e:	add    BYTE PTR [rax],al
   14000ac70:	push   rbx
   14000ac71:	add    BYTE PTR [rbx+0x0],ah
   14000ac74:	push   0x64006500
   14000ac79:	add    BYTE PTR [rbp+0x0],dh
   14000ac7c:	ins    BYTE PTR es:[rdi],dx
   14000ac7d:	add    BYTE PTR [rbp+0x0],ah
   14000ac80:	and    BYTE PTR [rax],al
   14000ac82:	je     0x14000ac84
   14000ac84:	outs   dx,DWORD PTR ds:[rsi]
   14000ac85:	add    BYTE PTR [rax],ah
   14000ac87:	add    BYTE PTR [rdx+0x0],dh
   14000ac8a:	jne    0x14000ac8c
   14000ac8c:	outs   dx,BYTE PTR ds:[rsi]
   14000ac8d:	add    BYTE PTR [rax],ah
   14000ac8f:	add    BYTE PTR [rdi+0x0],cl
   14000ac92:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000ac96:	add    BYTE PTR [rbp+0x0],r9b
   14000ac9a:	add    BYTE PTR [r8+r8*1+0x69],bpl
   14000ac9f:	add    BYTE PTR [rbp+0x0],ah
   14000aca2:	outs   dx,BYTE PTR ds:[rsi]
   14000aca3:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000aca7:	add    BYTE PTR [rdx+0x0],ah
   14000acaa:	jns    0x14000acac
   14000acac:	and    BYTE PTR [rax],al
   14000acae:	jae    0x14000acb0
   14000acb0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000acb4:	jbe    0x14000acb6
   14000acb6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000acba:	add    BYTE PTR [rax],al
   14000acbc:	add    BYTE PTR [rax],al
   14000acbe:	add    BYTE PTR [rax],al
   14000acc0:	(bad)  
   14000acc1:	add    BYTE PTR [rax+0x0],dh
   14000acc4:	jo     0x14000acc6
   14000acc6:	ins    BYTE PTR es:[rdi],dx
   14000acc7:	add    BYTE PTR [rcx+0x0],ch
   14000acca:	movsxd eax,DWORD PTR [rax]
   14000accc:	(bad)  
   14000accd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000acd1:	add    BYTE PTR [rdi+0x0],ch
   14000acd4:	outs   dx,BYTE PTR ds:[rsi]
   14000acd5:	add    BYTE PTR [rdi],ch
   14000acd7:	add    BYTE PTR [rsi+0x0],dh
   14000acda:	outs   dx,BYTE PTR ds:[rsi]
   14000acdb:	add    BYTE PTR [rax+rax*1+0x2e],ah
   14000acdf:	add    BYTE PTR [rbx+0x0],dh
   14000ace2:	jns    0x14000ace4
   14000ace4:	outs   dx,BYTE PTR ds:[rsi]
   14000ace5:	add    BYTE PTR [rbx+0x0],ah
   14000ace8:	ins    DWORD PTR es:[rdi],dx
   14000ace9:	add    BYTE PTR [rax+rax*1+0x2e],ch
   14000aced:	add    BYTE PTR [rsi+0x0],ch
   14000acf0:	outs   dx,DWORD PTR ds:[rsi]
   14000acf1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000acf5:	add    BYTE PTR [rsi+0x0],ah
   14000acf8:	imul   eax,DWORD PTR [rax],0x610063
   14000acfe:	je     0x14000ad00
   14000ad00:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ad06:	add    BYTE PTR [rax],al
   14000ad08:	js     0x14000ad0a
   14000ad0a:	sub    eax,0x61007700
   14000ad0f:	add    BYTE PTR [rax+0x0],dh
   14000ad12:	sub    eax,0x70006100
   14000ad17:	add    BYTE PTR [rax+0x0],dh
   14000ad1a:	ins    BYTE PTR es:[rdi],dx
   14000ad1b:	add    BYTE PTR [rcx+0x0],ch
   14000ad1e:	movsxd eax,DWORD PTR [rax]
   14000ad20:	(bad)  
   14000ad21:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ad25:	add    BYTE PTR [rdi+0x0],ch
   14000ad28:	outs   dx,BYTE PTR ds:[rsi]
   14000ad29:	add    BYTE PTR [rdx],bh
   14000ad2b:	add    BYTE PTR [rbx+0x0],dh
   14000ad2e:	jns    0x14000ad30
   14000ad30:	outs   dx,BYTE PTR ds:[rsi]
   14000ad31:	add    BYTE PTR [rbx+0x0],ah
   14000ad34:	ins    DWORD PTR es:[rdi],dx
   14000ad35:	add    BYTE PTR [rax+rax*1+0x2e],ch
   14000ad39:	add    BYTE PTR [rax+rax*1+0x6d],ah
   14000ad3d:	add    BYTE PTR [rax],al
   14000ad3f:	add    BYTE PTR [rbx+0x0],al
   14000ad42:	outs   dx,DWORD PTR ds:[rsi]
   14000ad43:	add    BYTE PTR [rsi+0x0],ch
   14000ad46:	je     0x14000ad48
   14000ad48:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ad4c:	je     0x14000ad4e
   14000ad4e:	sub    eax,0x79005400
   14000ad53:	add    BYTE PTR [rax+0x0],dh
   14000ad56:	add    BYTE PTR gs:[rax],al
   14000ad59:	add    BYTE PTR [rax],al
   14000ad5b:	add    BYTE PTR [rax],al
   14000ad5d:	add    BYTE PTR [rax],al
   14000ad5f:	add    BYTE PTR [rbp+0x78],al
   14000ad62:	movsxd esp,DWORD PTR [rbp+0x70]
   14000ad65:	je     0x14000add0
   14000ad67:	outs   dx,DWORD PTR ds:[rsi]
   14000ad68:	outs   dx,BYTE PTR ds:[rsi]
   14000ad69:	add    BYTE PTR [rax],al
   14000ad6b:	add    BYTE PTR [rax],al
   14000ad6d:	add    BYTE PTR [rax],al
   14000ad6f:	add    BYTE PTR [rdx+0x65],dl
   14000ad72:	je     0x14000ade9
   14000ad74:	jb     0x14000ade4
   14000ad76:	rex.W jb 0x14000ad79
   14000ad79:	add    BYTE PTR [rax],al
   14000ad7b:	add    BYTE PTR [rax],al
   14000ad7d:	add    BYTE PTR [rax],al
   14000ad7f:	add    BYTE PTR [rdx+0x65],dl
   14000ad82:	je     0x14000adf9
   14000ad84:	jb     0x14000adf4
   14000ad86:	rex.W jb 0x14000ade4
   14000ad89:	push   rax
   14000ad8a:	jb     0x14000adf1
   14000ad8c:	push   rdx
   14000ad8d:	gs ins BYTE PTR es:[rdi],dx
   14000ad8f:	gs (bad) 
   14000ad91:	jae    0x14000adf8
   14000ad93:	pop    rbp
   14000ad94:	add    BYTE PTR [rax],al
   14000ad96:	add    BYTE PTR [rax],al
   14000ad98:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000ad9a:	addr32 rex.W jb 0x14000ad9e
   14000ad9e:	add    BYTE PTR [rax],al
   14000ada0:	rex.RX (bad) 
   14000ada2:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x7473
   14000adaa:	add    BYTE PTR [rax],al
   14000adac:	add    BYTE PTR [rax],al
   14000adae:	add    BYTE PTR [rax],al
   14000adb0:	and    eax,0x73006800
   14000adb5:	add    BYTE PTR [rax],ch
   14000adb7:	add    BYTE PTR [rip+0x29006400],ah        # 0x1690111bd
   14000adbd:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000adc1:	add    BYTE PTR [rax+0x0],ch
   14000adc4:	jae    0x14000adc6
   14000adc6:	and    DWORD PTR [rax],eax
   14000adc8:	and    eax,0x3a007000
   14000adcd:	add    BYTE PTR [rax],ah
	...
   14000add7:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b30115dd
   14000addd:	add    BYTE PTR [rcx],ah
   14000addf:	add    BYTE PTR [rip+0x3a007000],ah        # 0x17a011de5
   14000ade5:	add    BYTE PTR [rax],ah
	...
   14000adef:	add    BYTE PTR [rax],ch
   14000adf1:	add    BYTE PTR [rbx+0x0],ah
   14000adf4:	(bad)  
   14000adf5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000adf9:	add    BYTE PTR [rbp+0x0],ah
   14000adfc:	jb     0x14000adfe
   14000adfe:	cmp    al,BYTE PTR [rax]
   14000ae00:	and    BYTE PTR [rax],al
   14000ae02:	and    eax,0x29007000
   14000ae07:	add    BYTE PTR [rax],ah
   14000ae09:	add    BYTE PTR [rax],al
   14000ae0b:	add    BYTE PTR [rax],al
   14000ae0d:	add    BYTE PTR [rax],al
   14000ae0f:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3011615
   14000ae15:	add    BYTE PTR [rax],ch
   14000ae17:	add    BYTE PTR [rip+0x29006400],ah        # 0x16901121d
   14000ae1d:	add    BYTE PTR [rax],ah
   14000ae1f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ae23:	add    BYTE PTR [rax+rax*1+0x28],ah
   14000ae27:	add    BYTE PTR [rip+0x29007800],ah        # 0x16901262d
   14000ae2d:	add    BYTE PTR [rax],ah
   14000ae2f:	add    BYTE PTR [rip+0x38003000],ah        # 0x17800de35
   14000ae35:	add    BYTE PTR [rax+0x0],bl
   14000ae38:	and    BYTE PTR [rax],al
   14000ae3a:	and    eax,0x73007700
	...
   14000ae47:	add    BYTE PTR [rax],ah
   14000ae49:	add    BYTE PTR [rax],ah
   14000ae4b:	add    BYTE PTR [rax],ah
   14000ae4d:	add    BYTE PTR [rax],ah
	...
   14000ae57:	add    BYTE PTR [rbp+0x0],cl
   14000ae5a:	jae    0x14000ae5c
   14000ae5c:	add    BYTE PTR [edx],bh
   14000ae5f:	add    BYTE PTR [rbx+0x0],bl
   14000ae62:	and    eax,0x73007700
   14000ae67:	add    BYTE PTR [rbp+0x0],bl
   14000ae6a:	and    BYTE PTR [rax],al
   14000ae6c:	add    BYTE PTR [rax],al
   14000ae6e:	add    BYTE PTR [rax],al
   14000ae70:	rex.XB add BYTE PTR [r9+0x0],spl
   14000ae74:	ins    BYTE PTR es:[rdi],dx
   14000ae75:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000ae79:	add    BYTE PTR [rdi+0x0],ch
   14000ae7c:	outs   dx,BYTE PTR ds:[rsi]
   14000ae7d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ae81:	add    BYTE PTR [rax+0x0],bh
   14000ae84:	je     0x14000ae86
   14000ae86:	cmp    al,BYTE PTR [rax]
   14000ae88:	pop    rbx
   14000ae89:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b301168f
   14000ae8f:	add    BYTE PTR [rbp+0x0],bl
   14000ae92:	and    BYTE PTR [rax],al
   14000ae94:	add    BYTE PTR [rax],al
   14000ae96:	add    BYTE PTR [rax],al
   14000ae98:	pop    rbx
   14000ae99:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b301169f
   14000ae9f:	add    BYTE PTR [rax],ch
   14000aea1:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b30116a7
   14000aea7:	add    BYTE PTR [rcx],ch
   14000aea9:	add    BYTE PTR [rbp+0x0],bl
   14000aeac:	or     al,BYTE PTR [rax]
   14000aeae:	add    BYTE PTR [rax],al
   14000aeb0:	pop    rbx
   14000aeb1:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b30116b7
   14000aeb7:	add    BYTE PTR [rbp+0x0],bl
   14000aeba:	or     al,BYTE PTR [rax]
   14000aebc:	add    BYTE PTR [rax],al
   14000aebe:	add    BYTE PTR [rax],al
   14000aec0:	or     al,BYTE PTR [rax]
   14000aec2:	add    BYTE PTR [rax],al
   14000aec4:	add    BYTE PTR [rax],al
   14000aec6:	add    BYTE PTR [rax],al
   14000aec8:	outs   dx,BYTE PTR ds:[rsi]
   14000aec9:	add    BYTE PTR [rax+rax*1+0x64],dh
   14000aecd:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000aed1:	add    BYTE PTR [rsi],ch
   14000aed3:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000aed7:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000aedb:	add    BYTE PTR [rax],al
   14000aedd:	add    BYTE PTR [rax],al
   14000aedf:	add    BYTE PTR [rsp+riz*2+0x72],cl
   14000aee3:	rex.RX (bad) 
   14000aee5:	jae    0x14000af5b
   14000aee7:	rex.RX (bad) 
   14000aee9:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   14000aef1:	gs jb  0x14000af37
   14000aef4:	(bad)  
   14000aef5:	ins    BYTE PTR es:[rdi],dx
   14000aef6:	ins    BYTE PTR es:[rdi],dx
   14000aef7:	outs   dx,DWORD PTR ds:[rsi]
   14000aef8:	jne    0x14000af6e
   14000aefa:	add    BYTE PTR [rax],al
   14000aefc:	add    BYTE PTR [rax],al
   14000aefe:	add    BYTE PTR [rax],al
   14000af00:	push   rdx
   14000af01:	je     0x14000af6f
   14000af03:	rex.WRX je 0x14000af59
   14000af06:	je     0x14000af69
   14000af08:	je     0x14000af7f
   14000af0a:	jae    0x14000af60
   14000af0c:	outs   dx,DWORD PTR ds:[rsi]
   14000af0d:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000af0f:	jae    0x14000af56
   14000af11:	jb     0x14000af85
   14000af13:	outs   dx,DWORD PTR ds:[rsi]
   14000af14:	jb     0x14000af64
   14000af16:	outs   dx,DWORD PTR ds:[rsi]
   14000af17:	push   rsp
   14000af18:	gs (bad) 
   14000af1a:	add    BYTE PTR [rax],al
   14000af1c:	add    BYTE PTR [rax],al
   14000af1e:	add    BYTE PTR [rax],al
   14000af20:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000af27:	ins    BYTE PTR es:[rdi],dx
   14000af28:	pop    rsp
   14000af29:	jae    0x14000af8f
   14000af2b:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   14000af30:	pop    rsp
   14000af31:	ja     0x14000af9c
   14000af33:	ins    BYTE PTR es:[rdi],dx
   14000af34:	pop    rsp
   14000af35:	jb     0x14000af9c
   14000af37:	jae    0x14000afae
   14000af39:	ins    BYTE PTR es:[rdi],dx
   14000af3a:	je     0x14000af6a
   14000af3c:	push   0x4d000000
   14000af41:	(bad)  
   14000af42:	cmp    eax,0xa3fd6b4c
   14000af47:	movabs r9,0xc747f0d33ccb09b7
   14000af51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000af52:	stos   DWORD PTR es:[rdi],eax
   14000af53:	(bad)  
   14000af54:	test   eax,0x9640134d
   14000af59:	xchg   edi,eax
   14000af5a:	and    ah,cl
   14000af5c:	(bad)  
   14000af5d:	(bad)  
   14000af5e:	jne    0x14f87e603
   14000af64:	in     eax,0xa4
   14000af66:	cld    
   14000af67:	rex.WR movabs rbp,0x22dd724515e6733e
   14000af71:	add    eax,0x21993
   14000af76:	add    BYTE PTR [rax],al
   14000af78:	ins    BYTE PTR es:[rdi],dx
   14000af79:	mov    ebx,0x10000
   14000af7e:	add    BYTE PTR [rax],al
   14000af80:	jl     0x14000af3d
   14000af82:	add    BYTE PTR [rax],al
   14000af84:	or     BYTE PTR [rax],al
   14000af86:	add    BYTE PTR [rax],al
   14000af88:	sar    BYTE PTR [rbx+0x200000],1
   14000af8e:	add    BYTE PTR [rax],al
   14000af90:	add    BYTE PTR [rax],al
   14000af92:	add    BYTE PTR [rax],al
   14000af94:	add    DWORD PTR [rax],eax
   14000af96:	add    BYTE PTR [rax],al
   14000af98:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c931
   14000af9e:	add    BYTE PTR [rax],al
   14000afa0:	movabs al,ds:0xba
   14000afa9:	add    BYTE PTR [rax],al
   14000afab:	add    BYTE PTR [rbx],al
   14000afad:	add    BYTE PTR [rax],al
   14000afaf:	add    BYTE PTR [rax+0x200000ba],ch
   14000afb5:	add    BYTE PTR [rax],al
   14000afb7:	add    BYTE PTR [rax],al
   14000afb9:	add    BYTE PTR [rax],al
   14000afbb:	add    BYTE PTR [rcx],al
   14000afbd:	add    BYTE PTR [rax],al
   14000afbf:	add    BYTE PTR [rdx],ah
   14000afc1:	add    eax,0xd1993
   14000afc6:	add    BYTE PTR [rax],al
   14000afc8:	clc    
   14000afc9:	ret    
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	add    DWORD PTR [rax],eax
   14000afce:	add    BYTE PTR [rax],al
   14000afd0:	(bad)  
   14000afd1:	(bad)  
   14000afd2:	add    BYTE PTR [rax],al
   14000afd4:	(bad)  
   14000afd5:	add    BYTE PTR [rax],al
   14000afd7:	add    BYTE PTR [rax+0x100000c4],dl
   14000afdd:	add    DWORD PTR [rax],eax
   14000afdf:	add    BYTE PTR [rax],al
   14000afe1:	add    BYTE PTR [rax],al
   14000afe3:	add    BYTE PTR [rcx],al
   14000afe5:	add    BYTE PTR [rax],al
   14000afe7:	add    BYTE PTR [rdx],ah
   14000afe9:	add    eax,0x1a1993
   14000afee:	add    BYTE PTR [rax],al
   14000aff0:	in     al,0xbe
   14000aff2:	add    BYTE PTR [rax],al
   14000aff4:	add    DWORD PTR [rax],eax
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	mov    ah,0xbf
   14000affa:	add    BYTE PTR [rax],al
   14000affc:	rex.XB add BYTE PTR [r8],al
   14000afff:	add    al,ah
   14000b001:	mov    edi,0x1700000
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	add    BYTE PTR [rax],al
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	add    DWORD PTR [rax],eax
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	and    al,BYTE PTR [rip+0xf1993]        # 0x1400fc9a9
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	mov    WORD PTR [rax+rax*1+0x100],?
   14000b01f:	add    BYTE PTR [rdi*4+0x310000],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	xor    BYTE PTR [rbp+0x1500000],bh
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	add    BYTE PTR [rax],al
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	add    DWORD PTR [rax],eax
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	and    al,BYTE PTR [rip+0xc1993]        # 0x1400cc9d1
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	and    al,0xc2
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	add    DWORD PTR [rax],eax
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	test   dl,al
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	and    eax,DWORD PTR [rax]
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	mov    al,0xc2
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	add    BYTE PTR [rcx],al
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	add    BYTE PTR [rax],al
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	add    DWORD PTR [rax],eax
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	add    BYTE PTR [rax],al
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	ins    BYTE PTR es:[rdi],dx
   14000b065:	imul   ebp,DWORD PTR [rax+0x55],0x200
   14000b06f:	add    BYTE PTR [rip+0x54000000],ah        # 0x19400b075
   14000b075:	mov    dh,0x0
   14000b077:	add    BYTE PTR [rsp+rbx*4+0x0],dl
   14000b07b:	add    BYTE PTR [rax],al
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    BYTE PTR [rcx+rbp*2-0x58],ch
   14000b083:	push   rbp
   14000b084:	add    BYTE PTR [rax],al
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	or     eax,0xb0000000
   14000b08d:	add    al,BYTE PTR [rax]
   14000b08f:	add    BYTE PTR [rax-0x6fffff4a],dl
   14000b095:	pushf  
	...
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	movabs al,ds:0x0
	...
   14000b115:	add    BYTE PTR [rax],al
   14000b117:	add    BYTE PTR [rax],cl
   14000b119:	loopne 0x14000b11b
   14000b11b:	rex add DWORD PTR [rax],eax
	...
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	xor    BYTE PTR [rax+rax*1+0x140],al
   14000b137:	add    BYTE PTR [rax],bh
   14000b139:	test   BYTE PTR [rax],al
   14000b13b:	rex add DWORD PTR [rax],eax
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	movabs al,ds:0x2800000001400084
	...
   14000b151:	xor    eax,0x0
	...
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	rex.RB push r12
   14000b162:	push   rdi
   14000b163:	xor    BYTE PTR [rax],dl
   14000b165:	add    BYTE PTR [rax],al
   14000b167:	add    DWORD PTR [rsi+0x2b88040e],eax
   14000b16d:	add    eax,0xb03bb8a
   14000b172:	add    eax,0x0
   14000b177:	add    BYTE PTR [rax],al
   14000b179:	add    BYTE PTR [rax],al
   14000b17b:	add    BYTE PTR [rip+0x6d4f0000],ah        # 0x1ad4fb181
   14000b181:	(bad)  
   14000b182:	rex.R ins DWORD PTR es:[rdi],dx
   14000b184:	push   rax
   14000b185:	jb     0x14000b1ea
   14000b187:	rex.W (bad) 
   14000b189:	outs   dx,BYTE PTR ds:[rsi]
   14000b18a:	fs ins BYTE PTR es:[rdi],dx
   14000b18c:	gs rex.WRB
   14000b18e:	gs jae 0x14000b204
   14000b191:	(bad)  
   14000b192:	addr32 gs rex.RX (bad) 
   14000b196:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7268002e
   14000b19e:	add    BYTE PTR [rdi+0x50b030f],al
	...
   14000b1ac:	add    BYTE PTR [rdi],ch
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b1b2:	(bad)  
   14000b1b3:	rex.R ins DWORD PTR es:[rdi],dx
   14000b1b5:	push   rax
   14000b1b6:	jb     0x14000b21b
   14000b1b8:	push   rax
   14000b1b9:	jne    0x14000b22e
   14000b1bb:	push   0x74756f52
   14000b1c0:	gs jb  0x14000b222
   14000b1c3:	rex.RXB
   14000b1c4:	gs je  0x14000b214
   14000b1c7:	gs jae 0x14000b23d
   14000b1ca:	(bad)  
   14000b1cb:	addr32 gs rex.RB js 0x14000b216
   14000b1d0:	(bad)  
   14000b1d1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7268002e
   14000b1d9:	add    BYTE PTR [rdi+0x50b030f],al
	...
   14000b1e7:	add    BYTE PTR [rdx],ah
   14000b1e9:	add    BYTE PTR [rax],al
   14000b1eb:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b1ed:	(bad)  
   14000b1ee:	rex.R ins DWORD PTR es:[rdi],dx
   14000b1f0:	push   rax
   14000b1f1:	jb     0x14000b256
   14000b1f3:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000b1f5:	rex.WRB
   14000b1f6:	gs jae 0x14000b26c
   14000b1f9:	(bad)  
   14000b1fa:	addr32 gs push rax
   14000b1fd:	outs   dx,BYTE PTR gs:[rsi]
   14000b1ff:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x7268002e
   14000b207:	add    BYTE PTR [rdi+0x50b030f],al
	...
   14000b215:	add    BYTE PTR [rdi],ah
   14000b217:	add    BYTE PTR [rax],al
   14000b219:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b21b:	(bad)  
   14000b21c:	rex.R ins DWORD PTR es:[rdi],dx
   14000b21e:	push   rax
   14000b21f:	jb     0x14000b284
   14000b221:	push   rax
   14000b222:	jne    0x14000b297
   14000b224:	push   0x74756f52
   14000b229:	gs jb  0x14000b28b
   14000b22c:	rex.WRXB jo 0x14000b294
   14000b22f:	outs   dx,BYTE PTR ds:[rsi]
   14000b230:	rex.RX (bad) 
   14000b232:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7268002e
   14000b23a:	add    BYTE PTR [rdi+0x50b030f],al
	...
   14000b248:	add    BYTE PTR [rax],ah
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b24e:	(bad)  
   14000b24f:	rex.R ins DWORD PTR es:[rdi],dx
   14000b251:	push   rax
   14000b252:	jb     0x14000b2b7
   14000b254:	push   rsp
   14000b255:	jb     0x14000b2c0
   14000b257:	addr32 addr32 gs jb 0x14000b2af
   14000b25c:	je     0x14000b2bf
   14000b25e:	jb     0x14000b2d4
   14000b260:	gs fs add BYTE PTR cs:[rax+0x72],ch
   14000b266:	add    BYTE PTR [rdi+0x50b030f],al
	...
   14000b274:	add    BYTE PTR [rax],bh
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b27a:	(bad)  
   14000b27b:	rex.R ins DWORD PTR es:[rdi],dx
   14000b27d:	push   rax
   14000b27e:	jb     0x14000b2e3
   14000b280:	push   rsp
   14000b281:	jb     0x14000b2ec
   14000b283:	addr32 addr32 gs jb 0x14000b2cb
   14000b288:	outs   dx,DWORD PTR ds:[rsi]
   14000b289:	outs   dx,BYTE PTR ds:[rsi]
   14000b28a:	je     0x14000b2f1
   14000b28c:	outs   dx,BYTE PTR ds:[rsi]
   14000b28d:	je     0x14000b2e5
   14000b28f:	(bad)  
   14000b290:	ins    BYTE PTR es:[rdi],dx
   14000b291:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
   14000b299:	(bad)  
   14000b29a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6f43002e
   14000b2a2:	outs   dx,BYTE PTR ds:[rsi]
   14000b2a3:	je     0x14000b30a
   14000b2a5:	outs   dx,BYTE PTR ds:[rsi]
   14000b2a6:	je     0x14000b2fc
   14000b2a8:	jns    0x14000b31a
   14000b2aa:	add    BYTE PTR gs:[rcx],al
   14000b2ad:	add    ecx,DWORD PTR [rbx]
   14000b2af:	add    eax,0x0
   14000b2b4:	add    BYTE PTR [rax],al
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b9:	rex.WRB add BYTE PTR [r8],r8b
   14000b2bc:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b2be:	(bad)  
   14000b2bf:	rex.R ins DWORD PTR es:[rdi],dx
   14000b2c1:	push   rax
   14000b2c2:	jb     0x14000b327
   14000b2c4:	rex.R
   14000b2c5:	gs ins BYTE PTR es:[rdi],dx
   14000b2c7:	gs je  0x14000b32f
   14000b2ca:	push   rdx
   14000b2cb:	gs je  0x14000b340
   14000b2ce:	imul   esp,DWORD PTR [rcx+0x62],0x6553656c
   14000b2d5:	jae    0x14000b34a
   14000b2d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x41002e73
   14000b2de:	movsxd esp,DWORD PTR [rbx+0x6f]
   14000b2e1:	jne    0x14000b351
   14000b2e3:	je     0x14000b32e
   14000b2e5:	add    BYTE PTR fs:[rcx],al
   14000b2e8:	rex.R
   14000b2e9:	gs ins BYTE PTR es:[rdi],dx
   14000b2eb:	gs je  0x14000b353
   14000b2ee:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b2f0:	jne    0x14000b360
   14000b2f2:	je     0x14000b2f4
   14000b2f4:	or     BYTE PTR [rdi+rbp*2+0x74],dl
   14000b2f8:	(bad)  
   14000b2f9:	ins    BYTE PTR es:[rdi],dx
   14000b2fa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b2fc:	jne    0x14000b36c
   14000b2fe:	je     0x14000b300
   14000b300:	or     BYTE PTR [rax+0x72],ch
   14000b303:	add    BYTE PTR [rdi+0x50b030f],al
   14000b309:	add    BYTE PTR [rax],al
   14000b30b:	add    BYTE PTR [rax],al
   14000b30d:	add    BYTE PTR [rax],al
   14000b30f:	add    BYTE PTR [rax],al
   14000b312:	rex.WRB add BYTE PTR [r8],r8b
   14000b315:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b317:	(bad)  
   14000b318:	rex.R ins DWORD PTR es:[rdi],dx
   14000b31a:	push   rax
   14000b31b:	jb     0x14000b380
   14000b31d:	push   rax
   14000b31e:	jb     0x14000b38f
   14000b320:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b323:	jae    0x14000b377
   14000b325:	gs je  0x14000b39a
   14000b328:	imul   esp,DWORD PTR [rcx+0x62],0x6553656c
   14000b32f:	jae    0x14000b3a4
   14000b331:	imul   ebp,DWORD PTR [rdi+0x6e],0x41002e73
   14000b338:	movsxd esp,DWORD PTR [rbx+0x6f]
   14000b33b:	jne    0x14000b3ab
   14000b33d:	je     0x14000b388
   14000b33f:	add    BYTE PTR fs:[rcx],al
   14000b342:	push   rdx
   14000b343:	gs je  0x14000b3b8
   14000b346:	jns    0x14000b38b
   14000b348:	outs   dx,DWORD PTR ds:[rsi]
   14000b349:	jne    0x14000b3b9
   14000b34b:	je     0x14000b34d
   14000b34d:	or     BYTE PTR [rdi+rbp*2+0x74],dl
   14000b351:	(bad)  
   14000b352:	ins    BYTE PTR es:[rdi],dx
   14000b353:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b355:	jne    0x14000b3c5
   14000b357:	je     0x14000b359
   14000b359:	or     BYTE PTR [rax+0x72],ch
   14000b35c:	add    BYTE PTR [rdi+0x50b030f],al
	...
   14000b36a:	add    BYTE PTR [rcx],ch
   14000b36c:	add    BYTE PTR [rax],al
   14000b36e:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b370:	(bad)  
   14000b371:	rex.R ins DWORD PTR es:[rdi],dx
   14000b373:	push   rax
   14000b374:	jb     0x14000b3d9
   14000b376:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b378:	(bad)  
   14000b379:	rex.R ins DWORD PTR es:[rdi],dx
   14000b37b:	push   rbx
   14000b37c:	gs jae 0x14000b3f2
   14000b37f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c696146
   14000b386:	gs fs add BYTE PTR cs:[rbp+0x78],al
   14000b38c:	imul   esi,DWORD PTR [rbx+rax*2+0x6f],0xa006564
   14000b394:	add    ecx,DWORD PTR [rbx]
   14000b396:	add    eax,0x0
   14000b39b:	add    BYTE PTR [rax],al
   14000b39d:	add    BYTE PTR [rax],al
   14000b39f:	add    BYTE PTR [rcx],ah
   14000b3a1:	add    BYTE PTR [rax],al
   14000b3a3:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b3a5:	(bad)  
   14000b3a6:	rex.R ins DWORD PTR es:[rdi],dx
   14000b3a8:	push   rax
   14000b3a9:	jb     0x14000b40e
   14000b3ab:	rex.R ins DWORD PTR es:[rdi],dx
   14000b3ad:	push   rdx
   14000b3ae:	jne    0x14000b41e
   14000b3b0:	push   rsp
   14000b3b1:	(bad)  
   14000b3b2:	jae    0x14000b41f
   14000b3b4:	rex.RX (bad) 
   14000b3b6:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7268002e
   14000b3be:	add    BYTE PTR [rdi+0x50b030f],al
   14000b3c4:	add    BYTE PTR [rax],al
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	add    BYTE PTR [rax],al
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cd:	rex.XB add BYTE PTR [r8],al
   14000b3d0:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b3d2:	(bad)  
   14000b3d3:	rex.R ins DWORD PTR es:[rdi],dx
   14000b3d5:	push   rax
   14000b3d6:	jb     0x14000b43b
   14000b3d8:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b3da:	(bad)  
   14000b3db:	rex.R ins DWORD PTR es:[rdi],dx
   14000b3dd:	push   rbx
   14000b3de:	gs jae 0x14000b454
   14000b3e1:	imul   ebp,DWORD PTR [rdi+0x6e],0x72746552
   14000b3e8:	jns    0x14000b43d
   14000b3ea:	movsxd ebp,DWORD PTR [rax+0x65]
   14000b3ed:	fs jne 0x14000b45c
   14000b3f0:	gs fs add BYTE PTR cs:[rcx+0x63],al
   14000b3f6:	movsxd ebp,DWORD PTR [rdi+0x75]
   14000b3f9:	outs   dx,BYTE PTR ds:[rsi]
   14000b3fa:	je     0x14000b445
   14000b3fc:	add    BYTE PTR fs:[rcx],al
   14000b3ff:	push   rdx
   14000b400:	gs je  0x14000b475
   14000b403:	jns    0x14000b448
   14000b405:	outs   dx,DWORD PTR ds:[rsi]
   14000b406:	jne    0x14000b476
   14000b408:	je     0x14000b40a
   14000b40a:	or     BYTE PTR [rax+0x72],ch
   14000b40d:	add    BYTE PTR [rdi+0x50b030f],al
	...
   14000b41b:	add    BYTE PTR [rdx+0x0],bh
   14000b41e:	add    BYTE PTR [rdi+0x6d],cl
   14000b421:	(bad)  
   14000b422:	rex.R ins DWORD PTR es:[rdi],dx
   14000b424:	push   rax
   14000b425:	jb     0x14000b48a
   14000b427:	push   rsp
   14000b428:	jb     0x14000b493
   14000b42a:	addr32 addr32 gs jb 0x14000b478
   14000b42f:	outs   dx,BYTE PTR ds:[rsi]
   14000b430:	outs   dx,WORD PTR ds:[rsi]
   14000b432:	add    BYTE PTR cs:[rdx+rsi*2+0x69],dl
   14000b437:	addr32 addr32 gs jb 0x14000b492
   14000b43c:	gs jb  0x14000b4b2
   14000b43f:	imul   ebp,DWORD PTR [rdi+0x6e],0x49550a00
   14000b446:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000b448:	fs add BYTE PTR gs:[rdx],cl
   14000b44c:	push   rsp
   14000b44d:	jb     0x14000b4b8
   14000b44f:	addr32 addr32 gs jb 0x14000b49d
   14000b454:	outs   dx,BYTE PTR ds:[rsi]
   14000b455:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x726f74
   14000b45d:	or     dl,BYTE PTR [rbx+0x65]
   14000b460:	jae    0x14000b4d5
   14000b462:	imul   ebp,DWORD PTR [rdi+0x6e],0xa004449
   14000b469:	push   rbx
   14000b46a:	gs jb  0x14000b4e3
   14000b46d:	gs jb  0x14000b4b9
   14000b470:	add    BYTE PTR [rcx],r8b
   14000b473:	rex.R
   14000b474:	rex.WRB
   14000b475:	movsxd esp,DWORD PTR [r11+0x6f]
   14000b479:	jne    0x14000b4e9
   14000b47b:	je     0x14000b4c9
   14000b47d:	outs   dx,DWORD PTR ds:[rsi]
   14000b47e:	outs   dx,DWORD PTR ds:[rsi]
   14000b47f:	imul   esi,DWORD PTR [rbp+0x70],0x54
   14000b483:	jns    0x14000b4f5
   14000b485:	add    BYTE PTR gs:[rdx],cl
   14000b488:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b48a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6e6f6974
   14000b492:	rex.WB
   14000b493:	add    BYTE PTR [rcx],r8b
   14000b496:	add    ecx,DWORD PTR [rbx]
   14000b498:	add    eax,0x0
   14000b49d:	add    BYTE PTR [rax],al
   14000b49f:	add    BYTE PTR [rax],al
   14000b4a1:	add    BYTE PTR [rdx+0x0],al
   14000b4a4:	add    BYTE PTR [rdi+0x6d],cl
   14000b4a7:	(bad)  
   14000b4a8:	rex.R ins DWORD PTR es:[rdi],dx
   14000b4aa:	push   rax
   14000b4ab:	jb     0x14000b510
   14000b4ad:	push   rsp
   14000b4ae:	jb     0x14000b519
   14000b4b0:	addr32 addr32 gs jb 0x14000b50a
   14000b4b5:	rex.WB
   14000b4b6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b4b8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6e6f6974
   14000b4c0:	push   rsi
   14000b4c1:	(bad)  
   14000b4c2:	ins    BYTE PTR es:[rdi],dx
   14000b4c3:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
   14000b4cb:	(bad)  
   14000b4cc:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7254002e
   14000b4d4:	imul   esp,DWORD PTR [rdi+0x67],0x6e497265
   14000b4db:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x726f74
   14000b4e3:	or     al,BYTE PTR [rbx]
   14000b4e5:	or     eax,DWORD PTR [rip+0x0]        # 0x14000b4eb
   14000b4eb:	add    BYTE PTR [rax],al
   14000b4ed:	add    BYTE PTR [rax],al
   14000b4ef:	add    BYTE PTR [rdx],dh
   14000b4f1:	add    BYTE PTR [rax],al
   14000b4f3:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b4f5:	(bad)  
   14000b4f6:	rex.R ins DWORD PTR es:[rdi],dx
   14000b4f8:	push   rax
   14000b4f9:	jb     0x14000b55e
   14000b4fb:	push   rsp
   14000b4fc:	jb     0x14000b567
   14000b4fe:	addr32 addr32 gs jb 0x14000b558
   14000b503:	rex.WB
   14000b504:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000b506:	fs gs push rsi
   14000b509:	(bad)  
   14000b50a:	ins    BYTE PTR es:[rdi],dx
   14000b50b:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
   14000b513:	(bad)  
   14000b514:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4955002e
   14000b51c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000b51e:	fs add BYTE PTR gs:[rdx],cl
   14000b522:	add    ecx,DWORD PTR [rbx]
   14000b524:	add    eax,0x0
   14000b529:	add    BYTE PTR [rax],al
   14000b52b:	add    BYTE PTR [rax],al
   14000b52d:	add    BYTE PTR [rbx],bh
   14000b52f:	add    BYTE PTR [rax],al
   14000b531:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b533:	(bad)  
   14000b534:	rex.R ins DWORD PTR es:[rdi],dx
   14000b536:	push   rax
   14000b537:	jb     0x14000b59c
   14000b539:	push   rsp
   14000b53a:	jb     0x14000b5a5
   14000b53c:	addr32 addr32 gs jb 0x14000b597
   14000b541:	gs jb  0x14000b5b7
   14000b544:	imul   ebp,DWORD PTR [rdi+0x6e],0x696c6156
   14000b54b:	fs (bad) 
   14000b54d:	je     0x14000b5b8
   14000b54f:	outs   dx,DWORD PTR ds:[rsi]
   14000b550:	outs   dx,BYTE PTR ds:[rsi]
   14000b551:	rex.RX (bad) 
   14000b553:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7254002e
   14000b55b:	imul   esp,DWORD PTR [rdi+0x67],0x65567265
   14000b562:	jb     0x14000b5d7
   14000b564:	imul   ebp,DWORD PTR [rdi+0x6e],0xb030a00
   14000b56b:	add    eax,0x0
   14000b570:	add    BYTE PTR [rax],al
   14000b572:	add    BYTE PTR [rax],al
   14000b574:	add    BYTE PTR [rsi],bh
   14000b576:	add    BYTE PTR [rax],al
   14000b578:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000b57a:	(bad)  
   14000b57b:	rex.R ins DWORD PTR es:[rdi],dx
   14000b57d:	push   rax
   14000b57e:	jb     0x14000b5e3
   14000b580:	push   rsp
   14000b581:	jb     0x14000b5ec
   14000b583:	addr32 addr32 gs jb 0x14000b5db
   14000b588:	gs jb  0x14000b601
   14000b58b:	gs jb  0x14000b5d7
   14000b58e:	rex.R push rsi
   14000b590:	(bad)  
   14000b591:	ins    BYTE PTR es:[rdi],dx
   14000b592:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
   14000b59a:	(bad)  
   14000b59b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x654c002e
   14000b5a3:	outs   dx,BYTE PTR ds:[rsi]
   14000b5a4:	addr32 je 0x14000b60f
   14000b5a7:	rex.WRXB
   14000b5a8:	push   bx
   14000b5aa:	gs jb  0x14000b623
   14000b5ad:	gs jb  0x14000b5f9
   14000b5b0:	add    BYTE PTR [rdx],r9b
   14000b5b3:	add    ecx,DWORD PTR [rbx]
   14000b5b5:	add    eax,0x0
   14000b5ba:	add    BYTE PTR [rax],al
   14000b5bc:	add    BYTE PTR [rax],al
   14000b5be:	add    BYTE PTR [rdx+0x0],al
   14000b5c1:	add    BYTE PTR [rdi+0x6d],cl
   14000b5c4:	(bad)  
   14000b5c5:	rex.R ins DWORD PTR es:[rdi],dx
   14000b5c7:	push   rax
   14000b5c8:	jb     0x14000b62d
   14000b5ca:	push   rsp
   14000b5cb:	jb     0x14000b636
   14000b5cd:	addr32 addr32 gs jb 0x14000b61e
   14000b5d2:	outs   dx,BYTE PTR gs:[rsi]
   14000b5d4:	addr32 je 0x14000b63f
   14000b5d7:	push   rsi
   14000b5d8:	(bad)  
   14000b5d9:	ins    BYTE PTR es:[rdi],dx
   14000b5da:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x466e6f69
   14000b5e2:	(bad)  
   14000b5e3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7942002e
   14000b5eb:	je     0x14000b652
   14000b5ed:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b5ef:	jne    0x14000b65f
   14000b5f1:	je     0x14000b63c
   14000b5f3:	outs   dx,BYTE PTR ds:[rsi]
   14000b5f4:	push   rax
   14000b5f5:	jne    0x14000b66a
   14000b5f7:	push   0x7373654d
   14000b5fc:	(bad)  
   14000b5fd:	add    BYTE PTR gs:[edx],cl
   14000b601:	add    al,0x46
   14000b603:	push   rdi
   14000b604:	jl     0x14000b67f
   14000b606:	rex.WRXB movsxd r11,DWORD PTR [r9+0x4c]
   14000b60a:	mov    ch,cl
   14000b60c:	xchg   ebx,eax
   14000b60d:	stc    
   14000b60e:	add    BYTE PTR [rdi+0xd],ah
   14000b611:	int3   
   14000b612:	add    BYTE PTR [r13+0x69],cl
   14000b616:	movsxd esi,DWORD PTR [rdx+0x6f]
   14000b619:	jae    0x14000b68a
   14000b61b:	data16 je 0x14000b64c
   14000b61e:	push   rdi
   14000b61f:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000b626:	rex.R
   14000b627:	gs jbe 0x14000b693
   14000b62a:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000b62d:	(bad)  
   14000b62e:	outs   dx,BYTE PTR ds:[rsi]
   14000b62f:	(bad)  
   14000b630:	gs ins DWORD PTR es:[edi],dx
   14000b633:	outs   dx,BYTE PTR gs:[rsi]
   14000b635:	je     0x14000b665
   14000b637:	rex.WRXB
   14000b638:	rex.WRB
   14000b639:	rex.B
   14000b63a:	rex.R
   14000b63b:	rex.WRB push r8
   14000b63d:	push   rdx
   14000b63e:	rex.XB add BYTE PTR [r11],dl
   14000b641:	add    BYTE PTR [rcx],al
   14000b643:	sbb    dh,BYTE PTR [rbx+0x50]
   14000b646:	rex.WRXB iretq 
   14000b648:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   14000b64e:	call   0xfa76bb1c
   14000b653:	add    DWORD PTR [rdx+0x53],edx
   14000b656:	rex.R push rbx
   14000b658:	and    al,0x5
   14000b65a:	mov    al,BYTE PTR ds:[rdi]
   14000b65d:	rex.WRXB movabs r13,0x121f3477ad83be49
   14000b667:	sbb    eax,0x1
   14000b66c:	outs   dx,DWORD PTR ds:[rsi]
   14000b66d:	ins    DWORD PTR es:[rdi],dx
   14000b66e:	(bad)  
   14000b66f:	fs ins DWORD PTR es:[rdi],dx
   14000b671:	jo     0x14000b6e5
   14000b673:	movsxd ebp,DWORD PTR [rsi]
   14000b675:	jo     0x14000b6db
   14000b677:	(bad)  
	...
   14000b690:	rex.RXB
   14000b691:	rex.XB push r12
   14000b693:	rex.WR add BYTE PTR [rax],r10b
   14000b696:	add    BYTE PTR [rax],al
   14000b698:	jae    0x14000b69b
   14000b69a:	add    BYTE PTR [rax],al
   14000b69c:	cs je  0x14000b704
   14000b69f:	js     0x14000b715
   14000b6a1:	add    BYTE PTR [rax],al
   14000b6a3:	add    BYTE PTR [rcx+rdx*1+0x0],dh
   14000b6a7:	add    BYTE PTR [rax+0x2e000000],bl
   14000b6ad:	je     0x14000b714
   14000b6af:	js     0x14000b725
   14000b6b1:	and    al,0x64
   14000b6b3:	imul   eax,DWORD PTR [rax],0x10000000
   14000b6b9:	adc    al,BYTE PTR [rax]
   14000b6bb:	add    BYTE PTR [rax+rbx*2],bl
   14000b6be:	add    BYTE PTR [rax],al
   14000b6c0:	cs je  0x14000b728
   14000b6c3:	js     0x14000b739
   14000b6c5:	and    al,0x6d
   14000b6c7:	outs   dx,BYTE PTR ds:[rsi]
   14000b6c8:	add    BYTE PTR [rax],al
   14000b6ca:	add    BYTE PTR [rax],al
   14000b6cc:	xor    BYTE PTR [rdx+0x0],ch
   14000b6cf:	add    BYTE PTR [rbp+0x0],bh
   14000b6d2:	add    BYTE PTR [rax],al
   14000b6d4:	cs je  0x14000b73c
   14000b6d7:	js     0x14000b74d
   14000b6d9:	and    al,0x6d
   14000b6db:	outs   dx,BYTE PTR ds:[rsi]
   14000b6dc:	and    al,0x30
   14000b6de:	xor    BYTE PTR [rax],al
   14000b6e0:	mov    al,0x6a
   14000b6e2:	add    BYTE PTR [rax],al
   14000b6e4:	rol    BYTE PTR [rax+rax*1],1
   14000b6e7:	add    BYTE PTR [rsi],ch
   14000b6e9:	je     0x14000b750
   14000b6eb:	js     0x14000b761
   14000b6ed:	and    al,0x78
   14000b6ef:	add    BYTE PTR [rax-0x50ffff91],al
   14000b6f5:	add    BYTE PTR [rax],al
   14000b6f7:	add    BYTE PTR [rsi],ch
   14000b6f9:	je     0x14000b760
   14000b6fb:	js     0x14000b771
   14000b6fd:	and    al,0x79
   14000b6ff:	add    BYTE PTR fs:[rax],al
   14000b702:	add    BYTE PTR [rax],al
   14000b704:	add    BYTE PTR [rax+0x4300000],al
   14000b70a:	add    BYTE PTR [rax],al
   14000b70c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000b715:	add    BYTE PTR [rax],al
   14000b717:	add    BYTE PTR [rax],dh
   14000b719:	test   BYTE PTR [rax],al
   14000b71b:	add    BYTE PTR [rax],dl
   14000b71d:	add    BYTE PTR [rax],al
   14000b71f:	add    BYTE PTR [rsi],ch
   14000b721:	xor    BYTE PTR [rax],dh
   14000b723:	movsxd esp,DWORD PTR [rsi+0x67]
   14000b726:	add    BYTE PTR [rax],al
   14000b728:	test   BYTE PTR [rax],al
   14000b72b:	add    BYTE PTR [rax],cl
   14000b72d:	add    BYTE PTR [rax],al
   14000b72f:	add    BYTE PTR [rsi],ch
   14000b731:	rex.XB push r10
   14000b733:	push   rsp
   14000b734:	and    al,0x58
   14000b736:	rex.XB
   14000b737:	add    BYTE PTR [r8],al
   14000b73a:	add    BYTE PTR [rax],al
   14000b73c:	rex.W test BYTE PTR [rax],al
   14000b73f:	add    BYTE PTR [rax],cl
   14000b741:	add    BYTE PTR [rax],al
   14000b743:	add    BYTE PTR [rsi],ch
   14000b745:	rex.XB push r10
   14000b747:	push   rsp
   14000b748:	and    al,0x58
   14000b74a:	rex.XB
   14000b74b:	rex.B
   14000b74c:	add    BYTE PTR [r8],al
   14000b74f:	add    BYTE PTR [rax-0x7c],dl
   14000b752:	add    BYTE PTR [rax],al
   14000b754:	sub    BYTE PTR [rax],al
   14000b756:	add    BYTE PTR [rax],al
   14000b758:	cs rex.XB push r10
   14000b75b:	push   rsp
   14000b75c:	and    al,0x58
   14000b75e:	rex.XB push r13
   14000b760:	add    BYTE PTR [rax],al
   14000b762:	add    BYTE PTR [rax],al
   14000b764:	js     0x14000b6ea
   14000b766:	add    BYTE PTR [rax],al
   14000b768:	or     BYTE PTR [rax],al
   14000b76a:	add    BYTE PTR [rax],al
   14000b76c:	cs rex.XB push r10
   14000b76f:	push   rsp
   14000b770:	and    al,0x58
   14000b772:	rex.XB pop r10
   14000b774:	add    BYTE PTR [rax],al
   14000b776:	add    BYTE PTR [rax],al
   14000b778:	add    BYTE PTR [rax+rax*1+0x800],0x0
   14000b780:	cs rex.XB push r10
   14000b783:	push   rsp
   14000b784:	and    al,0x58
   14000b786:	rex.WB
   14000b787:	add    BYTE PTR [r8],al
   14000b78a:	add    BYTE PTR [rax],al
   14000b78c:	mov    BYTE PTR [rax+rax*1+0x800],al
   14000b793:	add    BYTE PTR [rsi],ch
   14000b795:	rex.XB push r10
   14000b797:	push   rsp
   14000b798:	and    al,0x58
   14000b79a:	rex.WB
   14000b79b:	rex.B
   14000b79c:	add    BYTE PTR [r8],al
   14000b79f:	add    BYTE PTR [rax+0x8000084],dl
   14000b7a5:	add    BYTE PTR [rax],al
   14000b7a7:	add    BYTE PTR [rsi],ch
   14000b7a9:	rex.XB push r10
   14000b7ab:	push   rsp
   14000b7ac:	and    al,0x58
   14000b7ae:	rex.WB pop r9
   14000b7b0:	add    BYTE PTR [rax],al
   14000b7b2:	add    BYTE PTR [rax],al
   14000b7b4:	cwde   
   14000b7b5:	test   BYTE PTR [rax],al
   14000b7b7:	add    BYTE PTR [rax],cl
   14000b7b9:	add    BYTE PTR [rax],al
   14000b7bb:	add    BYTE PTR [rsi],ch
   14000b7bd:	rex.XB push r10
   14000b7bf:	push   rsp
   14000b7c0:	and    al,0x58
   14000b7c2:	rex.WB pop r10
   14000b7c4:	add    BYTE PTR [rax],al
   14000b7c6:	add    BYTE PTR [rax],al
   14000b7c8:	movabs al,ds:0x2e000000a0000084
   14000b7d1:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000b7d9:	add    BYTE PTR [rax],al
   14000b7db:	add    BYTE PTR [rax-0x7b],al
   14000b7de:	add    BYTE PTR [rax],al
   14000b7e0:	and    BYTE PTR [rax+rax*1],ch
   14000b7e3:	add    BYTE PTR [rsi],ch
   14000b7e5:	jb     0x14000b84b
   14000b7e7:	(bad)  
   14000b7e8:	je     0x14000b84b
   14000b7ea:	add    BYTE PTR [rax],al
   14000b7ec:	(bad)  
   14000b7ed:	mov    cl,0x0
   14000b7ef:	add    BYTE PTR [rax],dl
   14000b7f1:	add    BYTE PTR [rax],al
   14000b7f3:	add    BYTE PTR [rsi],ch
   14000b7f5:	jb     0x14000b85b
   14000b7f7:	(bad)  
   14000b7f8:	je     0x14000b85b
   14000b7fa:	and    al,0x7a
   14000b7fc:	rex.RB push r12
   14000b7fe:	push   rdi
   14000b7ff:	xor    BYTE PTR [rax],al
   14000b801:	add    BYTE PTR [rax],al
   14000b803:	add    BYTE PTR [rax-0x4f],dh
   14000b806:	add    BYTE PTR [rax],al
   14000b808:	xchg   ecx,eax
   14000b809:	add    al,0x0
   14000b80b:	add    BYTE PTR [rsi],ch
   14000b80d:	jb     0x14000b873
   14000b80f:	(bad)  
   14000b810:	je     0x14000b873
   14000b812:	and    al,0x7a
   14000b814:	rex.RB push r12
   14000b816:	push   rdi
   14000b817:	xor    DWORD PTR [rax],eax
   14000b819:	add    BYTE PTR [rax],al
   14000b81b:	add    BYTE PTR [rcx],al
   14000b81d:	mov    dh,0x0
   14000b81f:	add    BYTE PTR [rdx+0x0],dl
   14000b822:	add    BYTE PTR [rax],al
   14000b824:	cs jb  0x14000b88b
   14000b827:	(bad)  
   14000b828:	je     0x14000b88b
   14000b82a:	and    al,0x7a
   14000b82c:	rex.RB push r12
   14000b82e:	push   rdi
   14000b82f:	xor    al,BYTE PTR [rax]
   14000b831:	add    BYTE PTR [rax],al
   14000b833:	add    BYTE PTR [rbx-0x4a],dl
   14000b836:	add    BYTE PTR [rax],al
   14000b838:	add    DWORD PTR [rax],eax
   14000b83a:	add    BYTE PTR [rax],al
   14000b83c:	cs jb  0x14000b8a3
   14000b83f:	(bad)  
   14000b840:	je     0x14000b8a3
   14000b842:	and    al,0x7a
   14000b844:	rex.RB push r12
   14000b846:	push   rdi
   14000b847:	cmp    DWORD PTR [rax],eax
   14000b849:	add    BYTE PTR [rax],al
   14000b84b:	add    BYTE PTR [rsi+rsi*4+0x0],dl
   14000b84f:	add    ah,ch
   14000b851:	add    al,BYTE PTR [rax]
   14000b853:	add    BYTE PTR [rsi],ch
   14000b855:	jb     0x14000b8bb
   14000b857:	(bad)  
   14000b858:	je     0x14000b8bb
   14000b85a:	and    al,0x7a
   14000b85c:	jp     0x14000b8d8
   14000b85e:	fs (bad) 
   14000b860:	add    BYTE PTR [eax],al
   14000b863:	add    BYTE PTR [rax-0x47],al
   14000b866:	add    BYTE PTR [rax],al
   14000b868:	enter  0xe,0x0
   14000b86c:	cs js  0x14000b8d3
   14000b86f:	(bad)  
   14000b870:	je     0x14000b8d3
   14000b872:	add    BYTE PTR [rax],al
   14000b874:	or     al,cl
   14000b876:	add    BYTE PTR [rax],al
   14000b878:	sub    al,0x2
   14000b87a:	add    BYTE PTR [rax],al
   14000b87c:	cs js  0x14000b8e3
   14000b87f:	(bad)  
   14000b880:	je     0x14000b8e3
   14000b882:	and    al,0x78
   14000b884:	add    BYTE PTR [rax],al
   14000b886:	add    BYTE PTR [rax],al
   14000b888:	xor    al,0xca
   14000b88a:	add    BYTE PTR [rax],al
   14000b88c:	mov    eax,0x2e000001
   14000b891:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000b899:	add    BYTE PTR [rax],al
   14000b89b:	add    ah,ch
   14000b89d:	retf   
   14000b89e:	add    BYTE PTR [rax],al
   14000b8a0:	adc    al,0x0
   14000b8a2:	add    BYTE PTR [rax],al
   14000b8a4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000b8ad:	add    BYTE PTR [rax],al
   14000b8af:	add    BYTE PTR [rax],al
   14000b8b1:	int3   
   14000b8b2:	add    BYTE PTR [rax],al
   14000b8b4:	xor    BYTE PTR [rax+rax*1],al
   14000b8b7:	add    BYTE PTR [rsi],ch
   14000b8b9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000b8c1:	add    BYTE PTR [rax],al
   14000b8c3:	add    BYTE PTR [rax],dh
   14000b8c5:	rol    BYTE PTR [rax],1
   14000b8c7:	add    BYTE PTR [rax],ah
   14000b8c9:	or     DWORD PTR [rax],eax
   14000b8cb:	add    BYTE PTR [rsi],ch
   14000b8cd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000b8d5:	add    BYTE PTR [rax],al
   14000b8d7:	add    BYTE PTR [rax],al
   14000b8d9:	loopne 0x14000b8db
   14000b8db:	add    BYTE PTR [rax+0x2e000000],dl
   14000b8e1:	fs (bad) 
   14000b8e3:	je     0x14000b946
   14000b8e5:	add    BYTE PTR [rax],al
   14000b8e7:	add    BYTE PTR [rax+0x110000e0],dl
   14000b8ed:	add    DWORD PTR [rax],eax
   14000b8ef:	add    BYTE PTR [rsi],ch
   14000b8f1:	fs (bad) 
   14000b8f3:	je     0x14000b956
   14000b8f5:	and    al,0x72
   14000b8f7:	add    al,al
   14000b8f9:	loope  0x14000b8fb
   14000b8fb:	add    BYTE PTR [rax+0x2e000007],cl
   14000b901:	(bad)  
   14000b903:	jae    0x14000b905
   14000b905:	add    BYTE PTR [rax],al
   14000b907:	add    BYTE PTR [rax],al
   14000b909:	lock add BYTE PTR [rax],al
   14000b90c:	mov    esp,0x2e000004
   14000b911:	jo     0x14000b977
   14000b913:	(bad)  
   14000b914:	je     0x14000b977
   14000b916:	add    BYTE PTR [rax],al
   14000b918:	add    BYTE PTR [rax],al
   14000b91a:	add    DWORD PTR [rax],eax
   14000b91c:	pop    rax
   14000b91d:	add    BYTE PTR [rax],al
   14000b91f:	add    BYTE PTR [rsi],ch
   14000b921:	jb     0x14000b996
   14000b923:	jb     0x14000b988
   14000b925:	and    al,0x30
   14000b927:	xor    DWORD PTR [rax],eax
   14000b929:	add    BYTE PTR [rax],al
   14000b92b:	add    BYTE PTR [rax+0x0],ah
   14000b92e:	add    DWORD PTR [rax],eax
   14000b930:	enter  0x3,0x0
   14000b934:	cs jb  0x14000b9aa
   14000b937:	jb     0x14000b99c
   14000b939:	and    al,0x30
   14000b93b:	xor    al,BYTE PTR [rax]
   14000b93d:	add    BYTE PTR [rax],al
   14000b93f:	add    BYTE PTR [rcx],bl
   14000b941:	xor    DWORD PTR [rip+0x25c42300],ecx        # 0x165c4dc47
   14000b947:	add    BYTE PTR [rbx],ah
   14000b949:	je     0x14000b96f
   14000b94b:	add    BYTE PTR [rbx],ah
   14000b94d:	and    eax,DWORD PTR fs:[rax]
   14000b950:	and    esi,DWORD PTR [rdx+riz*1]
   14000b953:	add    BYTE PTR [rbx],ah
   14000b955:	add    DWORD PTR [rsi],ebx
   14000b957:	add    BYTE PTR [rax],bl
   14000b959:	lock (bad) 
   14000b95b:	loopne 0x14000b971
   14000b95d:	push   rax
   14000b95e:	add    BYTE PTR [rax],al
   14000b960:	nop
   14000b961:	imul   eax,DWORD PTR [rax],0xe000
   14000b967:	add    BYTE PTR [rcx],al
   14000b969:	add    al,0x1
   14000b96b:	add    BYTE PTR [rdx+rax*4],al
   14000b96e:	add    BYTE PTR [rax],al
   14000b970:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41db982
   14000b976:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00c7e1
   14000b97d:	push   rsp
   14000b97e:	or     eax,0xc341d00
   14000b983:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0d2fb
   14000b989:	loopne 0x14000b9a0
   14000b98b:	rcr    BYTE PTR [rcx],0x27
   14000b98e:	or     DWORD PTR [rax],eax
   14000b990:	adc    eax,0x15004a54
   14000b995:	xor    al,0x49
   14000b997:	add    BYTE PTR [rip+0xe004401],dl        # 0x14e00fd9e
   14000b99d:	lock or al,0x70
   14000b9a0:	or     esp,DWORD PTR [rax+0x0]
   14000b9a3:	add    BYTE PTR [rax+0x10000069],dl
   14000b9a9:	add    al,BYTE PTR [rax]
   14000b9ab:	add    BYTE PTR [rcx],bl
   14000b9ad:	sub    BYTE PTR [rcx],cl
   14000b9af:	add    BYTE PTR [rdx],bl
   14000b9b1:	sbb    eax,DWORD PTR fs:[rax]
   14000b9b4:	sbb    dh,BYTE PTR [rdx+rbx*1]
   14000b9b7:	add    BYTE PTR [rdx],bl
   14000b9b9:	add    DWORD PTR [rax+rax*1],edx
   14000b9bc:	(bad)  
   14000b9bd:	loopne 0x14000b9cb
   14000b9bf:	jo     0x14000b9cc
   14000b9c1:	push   rax
   14000b9c2:	add    BYTE PTR [rax],al
   14000b9c4:	nop
   14000b9c5:	imul   eax,DWORD PTR [rax],0x9800
   14000b9cb:	add    BYTE PTR [rcx],al
   14000b9cd:	clts   
   14000b9cf:	add    BYTE PTR [rdi],cl
   14000b9d1:	fs (bad) 
   14000b9d3:	add    BYTE PTR [rdi],cl
   14000b9d5:	xor    al,0x6
   14000b9d7:	add    BYTE PTR [rdi],cl
   14000b9d9:	xor    cl,BYTE PTR [rbx]
   14000b9db:	jo     0x14000b9f6
   14000b9dd:	sub    BYTE PTR [rcx],cl
   14000b9df:	add    BYTE PTR [rdx],bl
   14000b9e1:	and    BYTE PTR fs:[rax],al
   14000b9e4:	sbb    dh,BYTE PTR [rdi+rbx*1]
   14000b9e7:	add    BYTE PTR [rdx],bl
   14000b9e9:	add    DWORD PTR [rdx],ebx
   14000b9eb:	add    BYTE PTR [rsi],cl
   14000b9ed:	loopne 0x14000b9fb
   14000b9ef:	jo     0x14000b9fc
   14000b9f1:	push   rax
   14000b9f2:	add    BYTE PTR [rax],al
   14000b9f4:	nop
   14000b9f5:	imul   eax,DWORD PTR [rax],0xc000
   14000b9fb:	add    BYTE PTR [rcx],bl
   14000b9fd:	sub    eax,0x11c000a
   14000ba02:	push   rbx
   14000ba03:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0c5f9
   14000ba09:	rol    BYTE PTR [rdi],1
   14000ba0b:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360be82
   14000ba12:	add    dl,BYTE PTR [rax-0x70]
   14000ba15:	imul   eax,DWORD PTR [rax],0x28000
   14000ba1b:	add    BYTE PTR [rcx],bl
   14000ba1d:	sub    eax,0x741f000b
   14000ba22:	(bad)  
   14000ba23:	add    BYTE PTR [rdi],bl
   14000ba25:	fs (bad) 
   14000ba27:	add    BYTE PTR [rdi],bl
   14000ba29:	xor    al,0x1d
   14000ba2b:	add    BYTE PTR [rdi],bl
   14000ba2d:	add    DWORD PTR [rax],ebx
   14000ba2f:	add    BYTE PTR [rax+rsi*8],dl
   14000ba32:	adc    ah,al
   14000ba34:	adc    BYTE PTR [rax+0x0],dl
   14000ba37:	add    BYTE PTR [rax-0x4fffff97],dl
   14000ba3d:	add    BYTE PTR [rax],al
   14000ba3f:	add    BYTE PTR [rcx],bl
   14000ba41:	sub    eax,0x741f000b
   14000ba46:	sbb    eax,0x1c641f00
   14000ba4b:	add    BYTE PTR [rdi],bl
   14000ba4d:	xor    al,0x1b
   14000ba4f:	add    BYTE PTR [rdi],bl
   14000ba51:	add    DWORD PTR [rsi],edx
   14000ba53:	add    BYTE PTR [rax+rsi*8],dl
   14000ba56:	adc    ah,al
   14000ba58:	adc    BYTE PTR [rax+0x0],dl
   14000ba5b:	add    BYTE PTR [rax-0x5fffff97],dl
   14000ba61:	add    BYTE PTR [rax],al
   14000ba63:	add    BYTE PTR [rcx],bl
   14000ba65:	xor    BYTE PTR [rbx],cl
   14000ba67:	add    BYTE PTR [rdi],bl
   14000ba69:	xor    al,0x52
   14000ba6b:	add    BYTE PTR [rdi],bl
   14000ba6d:	add    DWORD PTR [rax+0x0],ecx
   14000ba70:	adc    al,dh
   14000ba72:	(bad)  
   14000ba73:	loopne 0x14000ba81
   14000ba75:	ror    BYTE PTR [rdx],1
   14000ba77:	ror    BYTE PTR [rax],0x70
   14000ba7a:	(bad)  
   14000ba7b:	(bad)  
   14000ba7c:	(bad)  
   14000ba7d:	push   rax
   14000ba7e:	add    BYTE PTR [rax],al
   14000ba80:	nop
   14000ba81:	imul   eax,DWORD PTR [rax],0x23000
   14000ba87:	add    BYTE PTR [rcx],dl
   14000ba89:	sbb    DWORD PTR [rsi],eax
   14000ba8b:	add    BYTE PTR [rcx],bl
   14000ba8d:	or     DWORD PTR fs:[rax],eax
   14000ba90:	adc    al,0x34
   14000ba92:	or     BYTE PTR [rax],al
   14000ba94:	(bad)  
   14000ba95:	push   rdx
   14000ba96:	add    dh,BYTE PTR [rax+0x78]
   14000ba99:	imul   eax,DWORD PTR [rax],0xaf9800
   14000ba9f:	add    bh,bh
   14000baa1:	(bad)  
   14000baa2:	(bad)  
   14000baa3:	push   QWORD PTR [rsi-0x37ffff96]
   14000baa9:	sub    al,BYTE PTR [rax]
   14000baab:	add    bh,bh
   14000baad:	(bad)  
   14000baae:	(bad)  
   14000baaf:	(bad)  
   14000bab0:	stc    
   14000bab1:	sub    al,BYTE PTR [rax]
   14000bab3:	add    BYTE PTR [rax],al
   14000bab5:	add    BYTE PTR [rax],al
   14000bab7:	add    BYTE PTR [rip+0xffffffffff00002b],ch        # 0x13f00bae8
   14000babd:	(bad)  
   14000babe:	(bad)  
   14000babf:	inc    DWORD PTR [rcx]
   14000bac1:	or     al,BYTE PTR [rax+rax*1]
   14000bac4:	or     dh,BYTE PTR [rdi+rax*1]
   14000bac7:	add    BYTE PTR [rdx],cl
   14000bac9:	xor    al,BYTE PTR [rsi]
   14000bacb:	jo     0x14000bace
   14000bacd:	add    al,0x1
   14000bacf:	add    BYTE PTR [rdx+rax*2],al
   14000bad2:	add    BYTE PTR [rax],al
   14000bad4:	add    DWORD PTR [rcx],edx
   14000bad6:	add    al,0x0
   14000bad8:	adc    DWORD PTR [rdx],esi
   14000bada:	or     eax,0xb600c70
   14000badf:	xor    BYTE PTR [rcx],bl
   14000bae1:	and    eax,0x34130009
   14000bae6:	push   rbx
   14000bae7:	add    BYTE PTR [rbx],dl
   14000bae9:	add    DWORD PTR [rdx+0x0],ecx
   14000baec:	or     al,0xf0
   14000baee:	or     ah,al
   14000baf0:	or     BYTE PTR [rax+0x7],dh
   14000baf3:	(bad)  
   14000baf4:	(bad)  
   14000baf5:	push   rax
   14000baf6:	add    BYTE PTR [rax],al
   14000baf8:	nop
   14000baf9:	imul   eax,DWORD PTR [rax],0x24000
   14000baff:	add    BYTE PTR [rcx],bl
   14000bb01:	(bad)  
   14000bb02:	add    eax,0x2c340d00
   14000bb07:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14600e50e
   14000bb0d:	(bad)  
   14000bb0e:	add    BYTE PTR [rax],al
   14000bb10:	nop
   14000bb11:	imul   eax,DWORD PTR [rax],0x14000
   14000bb17:	add    BYTE PTR [rcx],al
   14000bb19:	(bad)  
   14000bb1a:	add    al,BYTE PTR [rax]
   14000bb1c:	(bad)  
   14000bb1d:	xor    al,BYTE PTR [rdx]
   14000bb1f:	xor    BYTE PTR [rcx],al
   14000bb21:	or     al,BYTE PTR [rax+rax*1]
   14000bb24:	or     dh,BYTE PTR [rsi+rax*1]
   14000bb27:	add    BYTE PTR [rdx],cl
   14000bb29:	xor    al,BYTE PTR [rsi]
   14000bb2b:	jo     0x14000bb2e
   14000bb2d:	adc    al,0x8
   14000bb2f:	add    BYTE PTR [rsp+riz*2],dl
   14000bb32:	or     BYTE PTR [rax],al
   14000bb34:	adc    al,0x54
   14000bb36:	(bad)  
   14000bb37:	add    BYTE PTR [rsp+rsi*1],dl
   14000bb3a:	(bad)  
   14000bb3b:	add    BYTE PTR [rdx+rsi*1],dl
   14000bb3e:	adc    BYTE PTR [rax+0x1],dh
   14000bb41:	sbb    al,0xc
   14000bb43:	add    BYTE PTR [rsp+riz*2],bl
   14000bb46:	or     eax,0xc541c00
   14000bb4b:	add    BYTE PTR [rsp+rsi*1],bl
   14000bb4e:	or     eax,DWORD PTR [rax]
   14000bb50:	sbb    al,0x32
   14000bb52:	sbb    al,dh
   14000bb54:	(bad)  
   14000bb55:	loopne 0x14000bb6b
   14000bb57:	rcl    BYTE PTR [rdx],1
   14000bb59:	rcl    BYTE PTR [rax],0x70
   14000bb5c:	sbb    DWORD PTR [rdi],ecx
   14000bb5e:	add    al,BYTE PTR [rax]
   14000bb60:	(bad)  
   14000bb61:	push   rdx
   14000bb62:	add    dh,BYTE PTR [rax]
   14000bb64:	js     0x14000bbcf
   14000bb66:	add    BYTE PTR [rax],al
   14000bb68:	jo     0x14000bb19
   14000bb6a:	add    BYTE PTR [rax],al
   14000bb6c:	(bad)  
   14000bb6d:	(bad)  
   14000bb6e:	(bad)  
   14000bb6f:	inc    DWORD PTR [rax]
   14000bb71:	add    BYTE PTR [rax],al
   14000bb73:	add    bh,bh
   14000bb75:	(bad)  
   14000bb76:	(bad)  
   14000bb77:	inc    DWORD PTR [rax]
	...
   14000bb81:	add    BYTE PTR [rax],al
   14000bb83:	add    BYTE PTR [rcx],al
   14000bb85:	add    BYTE PTR [rax],al
   14000bb87:	add    BYTE PTR [rbx],al
   14000bb89:	add    BYTE PTR [rax],al
   14000bb8b:	add    BYTE PTR [rax+0x90000bb],dl
   14000bb91:	add    BYTE PTR [rax],al
   14000bb93:	add    BYTE PTR [rax],ch
   14000bb95:	loope  0x14000bb97
   14000bb97:	add    BYTE PTR [rax],ch
   14000bb99:	add    BYTE PTR [rax],al
   14000bb9b:	add    dl,cl
   14000bb9d:	push   0x0
   14000bb9f:	add    BYTE PTR [rax],bh
   14000bba1:	add    BYTE PTR [rax],al
   14000bba3:	add    BYTE PTR [rcx],cl
   14000bba5:	add    BYTE PTR [rax],al
   14000bba7:	add    BYTE PTR [rax-0x1f],bl
   14000bbaa:	add    BYTE PTR [rax],al
   14000bbac:	add    BYTE PTR [rax],al
   14000bbae:	add    BYTE PTR [rax],al
   14000bbb0:	out    dx,eax
   14000bbb1:	push   0x0
   14000bbb3:	add    BYTE PTR [rax],bh
   14000bbb5:	add    BYTE PTR [rax],al
   14000bbb7:	add    BYTE PTR [rax+0x0],al
	...
   14000bbc2:	add    BYTE PTR [rax],al
   14000bbc4:	or     ch,BYTE PTR [rbx+0x0]
   14000bbc7:	add    BYTE PTR [rax+0x0],cl
   14000bbca:	add    BYTE PTR [rax],al
   14000bbcc:	add    BYTE PTR [rax],al
   14000bbce:	add    BYTE PTR [rax],al
   14000bbd0:	adc    al,0x36
   14000bbd2:	add    BYTE PTR [rax],al
   14000bbd4:	(bad)  
   14000bbd5:	(bad)  
   14000bbd6:	(bad)  
   14000bbd7:	(bad)  
   14000bbd8:	cmp    al,0x36
   14000bbda:	add    BYTE PTR [rax],al
   14000bbdc:	add    BYTE PTR [rax],al
   14000bbde:	add    BYTE PTR [rax],al
   14000bbe0:	rex.RX
   14000bbe1:	add    BYTE PTR ss:[rax],al
   14000bbe4:	(bad)  
   14000bbe5:	(bad)  
   14000bbe6:	(bad)  
   14000bbe7:	dec    edx
   14000bbe9:	push   0x0
   14000bbeb:	add    BYTE PTR [rax],al
   14000bbed:	add    BYTE PTR [rax],al
   14000bbef:	add    bh,dl
   14000bbf1:	push   0x0
   14000bbf3:	add    BYTE PTR [rcx],al
   14000bbf5:	add    BYTE PTR [rax],al
   14000bbf7:	add    cl,ah
   14000bbf9:	push   0x0
   14000bbfb:	add    BYTE PTR [rax],al
   14000bbfd:	add    BYTE PTR [rax],al
   14000bbff:	add    BYTE PTR [rax],bl
   14000bc01:	imul   eax,DWORD PTR [rax],0x0
   14000bc04:	add    DWORD PTR [rax],eax
   14000bc06:	add    BYTE PTR [rax],al
   14000bc08:	pop    rax
   14000bc09:	imul   eax,DWORD PTR [rax],0x0
   14000bc0c:	add    BYTE PTR [rax],al
   14000bc0e:	add    BYTE PTR [rax],al
   14000bc10:	sbb    DWORD PTR [rdx],ecx
   14000bc12:	add    al,BYTE PTR [rax]
   14000bc14:	or     dh,BYTE PTR [rdx]
   14000bc16:	(bad)  
   14000bc17:	push   rax
   14000bc18:	js     0x14000bc83
   14000bc1a:	add    BYTE PTR [rax],al
   14000bc1c:	jo     0x14000bbcd
   14000bc1e:	add    BYTE PTR [rax],al
   14000bc20:	sbb    DWORD PTR [rbx],ecx
   14000bc22:	add    eax,DWORD PTR [rax]
   14000bc24:	or     eax,DWORD PTR [rdx+0x7]
   14000bc27:	push   rax
   14000bc28:	(bad)  
   14000bc29:	xor    BYTE PTR [rax],al
   14000bc2b:	add    BYTE PTR [rax+0x69],bh
   14000bc2e:	add    BYTE PTR [rax],al
   14000bc30:	jo     0x14000bbe1
   14000bc32:	add    BYTE PTR [rax],al
   14000bc34:	add    DWORD PTR [rip+0x341d000a],ebx        # 0x1741dbc44
   14000bc3a:	adc    al,BYTE PTR [rax]
   14000bc3c:	sbb    eax,0x17f01972
   14000bc41:	loopne 0x14000bc58
   14000bc43:	rcl    BYTE PTR [rbx],1
   14000bc45:	rcl    BYTE PTR [rcx],0x70
   14000bc48:	adc    BYTE PTR [rax+0xf],ah
   14000bc4b:	push   rax
   14000bc4c:	sbb    DWORD PTR [rdx],esp
   14000bc4e:	add    al,0x0
   14000bc50:	adc    BYTE PTR [rcx],al
   14000bc52:	mov    ecx,0x2700302
   14000bc57:	xor    BYTE PTR [rax-0x4fffff97],dl
   14000bc5d:	adc    eax,0x4010000
   14000bc62:	add    DWORD PTR [rax],eax
   14000bc64:	add    al,0xa2
   14000bc66:	add    BYTE PTR [rax],al
   14000bc68:	sbb    DWORD PTR [rax],ebp
   14000bc6a:	or     eax,DWORD PTR [rax]
   14000bc6c:	sub    ah,al
   14000bc6e:	xor    eax,DWORD PTR [rax]
   14000bc70:	and    al,0x74
   14000bc72:	xor    al,BYTE PTR [rax]
   14000bc74:	and    BYTE PTR [rcx+rsi*1],dh
   14000bc77:	add    BYTE PTR [rcx+rax*1],dl
   14000bc7a:	sub    al,0x0
   14000bc7c:	or     eax,0x9e00bf0
   14000bc81:	rol    BYTE PTR [rax],1
   14000bc83:	add    BYTE PTR [rax+0x69],bh
   14000bc86:	add    BYTE PTR [rax],al
   14000bc88:	adc    BYTE PTR [rax-0x10000],dh
   14000bc8e:	(bad)  
   14000bc8f:	jmp    FWORD PTR [rbp+0x6b]
   14000bc92:	add    BYTE PTR [rax],al
   14000bc94:	add    BYTE PTR [rax],al
   14000bc96:	add    BYTE PTR [rax],al
   14000bc98:	jns    0x14000bd05
   14000bc9a:	add    BYTE PTR [rax],al
   14000bc9c:	add    DWORD PTR [rax],eax
   14000bc9e:	add    BYTE PTR [rax],al
   14000bca0:	test   DWORD PTR [rbx+0x0],ebp
   14000bca3:	add    BYTE PTR [rdx],al
   14000bca5:	add    BYTE PTR [rax],al
   14000bca7:	add    BYTE PTR [rcx+0x300006b],dl
   14000bcad:	add    BYTE PTR [rax],al
   14000bcaf:	add    BYTE PTR [rbp+0x400006b],bl
   14000bcb5:	add    BYTE PTR [rax],al
   14000bcb7:	add    BYTE PTR [rax],al
   14000bcb9:	add    BYTE PTR [rax],al
   14000bcbb:	add    BYTE PTR [rip+0xffffffffa9000000],al        # 0xe900bcc1
   14000bcc1:	imul   eax,DWORD PTR [rax],0x0
   14000bcc4:	(bad)  
   14000bcc5:	add    BYTE PTR [rax],al
   14000bcc7:	add    BYTE PTR [rbp+0x700006b],dh
   14000bccd:	add    BYTE PTR [rax],al
   14000bccf:	add    cl,al
   14000bcd1:	imul   eax,DWORD PTR [rax],0x0
   14000bcd4:	or     BYTE PTR [rax],al
   14000bcd6:	add    BYTE PTR [rax],al
   14000bcd8:	int    0x6b
   14000bcda:	add    BYTE PTR [rax],al
   14000bcdc:	add    eax,0xd9000000
   14000bce1:	imul   eax,DWORD PTR [rax],0x0
   14000bce4:	add    eax,0xe5000000
   14000bce9:	imul   eax,DWORD PTR [rax],0x0
   14000bcec:	add    eax,0xf1000000
   14000bcf1:	imul   eax,DWORD PTR [rax],0x0
   14000bcf4:	add    eax,0xfd000000
   14000bcf9:	imul   eax,DWORD PTR [rax],0x0
   14000bcfc:	add    al,0x0
   14000bcfe:	add    BYTE PTR [rax],al
   14000bd00:	add    BYTE PTR [rax],al
   14000bd02:	add    BYTE PTR [rax],al
   14000bd04:	add    eax,0xd000000
   14000bd09:	add    BYTE PTR [rax],al
   14000bd0b:	add    BYTE PTR [rsi],cl
   14000bd0d:	add    BYTE PTR [rax],al
   14000bd0f:	add    BYTE PTR [rcx],al
   14000bd11:	add    BYTE PTR [rax],al
   14000bd13:	add    BYTE PTR [rax],bl
   14000bd15:	mov    ebp,0x400000
	...
   14000bd22:	add    BYTE PTR [rax],al
   14000bd24:	or     DWORD PTR [rax+rax*1+0x0],ebp
   14000bd28:	rex.W add BYTE PTR [rax],al
   14000bd2b:	add    BYTE PTR [rax],al
   14000bd2d:	add    BYTE PTR [rax],al
   14000bd2f:	add    BYTE PTR [rsp+rdi*1+0x0],dh
   14000bd33:	add    bh,bh
   14000bd35:	(bad)  
   14000bd36:	(bad)  
   14000bd37:	push   QWORD PTR [rax+0x3c]
   14000bd3d:	add    BYTE PTR [rax],al
   14000bd3f:	add    BYTE PTR [rsi+0x100003c],dh
   14000bd45:	add    BYTE PTR [rax],al
   14000bd47:	add    BYTE PTR [rsp+rdi*1+0x20000],bh
   14000bd4e:	add    BYTE PTR [rax],al
   14000bd50:	ret    0x3c
   14000bd53:	add    BYTE PTR [rbx],al
   14000bd55:	add    BYTE PTR [rax],al
   14000bd57:	add    al,cl
   14000bd59:	cmp    al,0x0
   14000bd5b:	add    BYTE PTR [rip+0xffffffffd9000000],al        # 0x11900bd61
   14000bd61:	cmp    al,0x0
   14000bd63:	add    BYTE PTR [rax+rax*1],al
   14000bd66:	add    BYTE PTR [rax],al
   14000bd68:	fidivr WORD PTR [rax+rax*1]
   14000bd6b:	add    BYTE PTR [rip+0x10000000],al        # 0x15000bd71
   14000bd71:	cmp    eax,0x40000
   14000bd76:	add    BYTE PTR [rax],al
   14000bd78:	adc    eax,0x500003d
   14000bd7d:	add    BYTE PTR [rax],al
   14000bd7f:	add    BYTE PTR [rcx],ah
   14000bd81:	cmp    eax,0x60000
   14000bd86:	add    BYTE PTR [rax],al
   14000bd88:	rex.WR cmp rax,0x70000
   14000bd8e:	add    BYTE PTR [rax],al
   14000bd90:	jge    0x14000bdcf
   14000bd92:	add    BYTE PTR [rax],al
   14000bd94:	or     BYTE PTR [rax],al
   14000bd96:	add    BYTE PTR [rax],al
   14000bd98:	scas   al,BYTE PTR es:[rdi]
   14000bd99:	cmp    eax,0x90000
   14000bd9e:	add    BYTE PTR [rax],al
   14000bda0:	adc    bh,BYTE PTR [rsi]
   14000bda2:	add    BYTE PTR [rax],al
   14000bda4:	or     BYTE PTR [rax],al
   14000bda6:	add    BYTE PTR [rax],al
   14000bda8:	sub    al,0x3e
   14000bdaa:	add    BYTE PTR [rax],al
   14000bdac:	(bad)  
   14000bdad:	add    BYTE PTR [rax],al
   14000bdaf:	add    BYTE PTR [rsi+0x3e],al
   14000bdb2:	add    BYTE PTR [rax],al
   14000bdb4:	(bad)  
   14000bdb5:	add    BYTE PTR [rax],al
   14000bdb7:	add    BYTE PTR [rax+0x3e],ah
   14000bdba:	add    BYTE PTR [rax],al
   14000bdbc:	add    eax,0x7b000000
   14000bdc1:	add    BYTE PTR ds:[rax],al
   14000bdc4:	add    al,0x0
   14000bdc6:	add    BYTE PTR [rax],al
   14000bdc8:	cmp    BYTE PTR [rsi],0x0
   14000bdcb:	add    BYTE PTR [rip+0xffffffff9a000000],al        # 0xda00bdd1
   14000bdd1:	add    BYTE PTR ds:[rax],al
   14000bdd4:	or     al,BYTE PTR [rax]
   14000bdd6:	add    BYTE PTR [rax],al
   14000bdd8:	leave  
   14000bdd9:	add    BYTE PTR ds:[rax],al
   14000bddc:	add    eax,0xdb000000
   14000bde1:	add    BYTE PTR ds:[rax],al
   14000bde4:	add    al,0x0
   14000bde6:	add    BYTE PTR [rax],al
   14000bde8:	loopne 0x14000be28
   14000bdea:	add    BYTE PTR [rax],al
   14000bdec:	add    eax,0xfb000000
   14000bdf1:	add    BYTE PTR ds:[rax],al
   14000bdf4:	or     eax,DWORD PTR [rax]
   14000bdf6:	add    BYTE PTR [rax],al
   14000bdf8:	sub    bh,BYTE PTR [rdi]
   14000bdfa:	add    BYTE PTR [rax],al
   14000bdfc:	add    eax,0x3c000000
   14000be01:	(bad)  
   14000be02:	add    BYTE PTR [rax],al
   14000be04:	add    al,0x0
   14000be06:	add    BYTE PTR [rax],al
   14000be08:	rex.B (bad) 
   14000be0a:	add    BYTE PTR [rax],al
   14000be0c:	add    eax,0x66000000
   14000be11:	(bad)  
   14000be12:	add    BYTE PTR [rax],al
   14000be14:	or     al,0x0
   14000be16:	add    BYTE PTR [rax],al
   14000be18:	xchg   ebp,eax
   14000be19:	(bad)  
   14000be1a:	add    BYTE PTR [rax],al
   14000be1c:	add    eax,0xa7000000
   14000be21:	(bad)  
   14000be22:	add    BYTE PTR [rax],al
   14000be24:	add    al,0x0
   14000be26:	add    BYTE PTR [rax],al
   14000be28:	lods   al,BYTE PTR ds:[rsi]
   14000be29:	(bad)  
   14000be2a:	add    BYTE PTR [rax],al
   14000be2c:	add    eax,0xb8000000
   14000be31:	(bad)  
   14000be32:	add    BYTE PTR [rax],al
   14000be34:	or     eax,0x10000000
   14000be39:	add    BYTE PTR [rax],al
   14000be3c:	add    eax,0x2b000000
   14000be41:	add    BYTE PTR [rax],al
   14000be44:	add    al,0x0
   14000be46:	add    BYTE PTR [rax],al
   14000be48:	xor    BYTE PTR [rax+0x0],al
   14000be4b:	add    BYTE PTR [rip+0x66000000],al        # 0x1a600be51
   14000be51:	add    BYTE PTR [rax],al
   14000be54:	add    al,0x0
   14000be56:	add    BYTE PTR [rax],al
   14000be58:	push   0x5000040
   14000be5d:	add    BYTE PTR [rax],al
   14000be5f:	add    BYTE PTR [rcx+0x4000040],bl
   14000be65:	add    BYTE PTR [rax],al
   14000be67:	add    BYTE PTR [rbx+0x5000040],bl
   14000be6d:	add    BYTE PTR [rax],al
   14000be6f:	add    BYTE PTR [rdi+0x4000040],bl
   14000be75:	add    BYTE PTR [rax],al
   14000be77:	add    BYTE PTR [rdi+0x3000040],dh
   14000be7d:	add    BYTE PTR [rax],al
   14000be7f:	add    bh,dl
   14000be81:	add    BYTE PTR [rax],al
   14000be84:	add    al,BYTE PTR [rax]
   14000be86:	add    BYTE PTR [rax],al
   14000be88:	test   DWORD PTR [rax+0x0],0x100
   14000be8f:	add    BYTE PTR [rdi],dl
   14000be91:	add    BYTE PTR [r8],al
   14000be94:	add    BYTE PTR [rax],al
   14000be96:	add    BYTE PTR [rax],al
   14000be98:	(bad)  
   14000be99:	add    BYTE PTR [r8],al
   14000be9c:	(bad)  
   14000be9d:	(bad)  
   14000be9e:	(bad)  
   14000be9f:	dec    DWORD PTR [rcx]
   14000bea1:	ins    BYTE PTR es:[rdi],dx
   14000bea2:	add    BYTE PTR [rax],al
   14000bea4:	add    BYTE PTR [rax],al
   14000bea6:	add    BYTE PTR [rax],al
   14000bea8:	(bad)  
   14000bea9:	ins    BYTE PTR es:[rdi],dx
   14000beaa:	add    BYTE PTR [rax],al
   14000beac:	(bad)  
   14000bead:	add    BYTE PTR [rax],al
   14000beaf:	add    BYTE PTR [rcx],ah
   14000beb1:	ins    BYTE PTR es:[rdi],dx
   14000beb2:	add    BYTE PTR [rax],al
   14000beb4:	add    BYTE PTR [rax],al
   14000beb6:	add    BYTE PTR [rax],al
   14000beb8:	sbb    DWORD PTR [rdx],ecx
   14000beba:	add    al,BYTE PTR [rax]
   14000bebc:	or     dl,BYTE PTR [rdx+0x6]
   14000bebf:	push   rax
   14000bec0:	js     0x14000bf2b
   14000bec2:	add    BYTE PTR [rax],al
   14000bec4:	adc    BYTE PTR [rax+0x26190000],dh
   14000beca:	(bad)  
   14000becb:	add    BYTE PTR [rsi],bl
   14000becd:	add    DWORD PTR [rax],esi
   14000becf:	add    BYTE PTR [rdi],dl
   14000bed1:	lock adc eax,0x11c013e0
   14000bed7:	jo     0x14000bee9
   14000bed9:	xor    BYTE PTR [rax],al
   14000bedb:	add    BYTE PTR [rax+0x69],bh
   14000bede:	add    BYTE PTR [rax],al
   14000bee0:	call   0x13f00bf94
   14000bee5:	(bad)  
   14000bee6:	(bad)  
   14000bee7:	push   QWORD PTR [rip+0x6c]        # 0x14000bf59
   14000beed:	add    BYTE PTR [rax],al
   14000beef:	add    BYTE PTR [rcx+0x6c],al
   14000bef2:	add    BYTE PTR [rax],al
   14000bef4:	add    DWORD PTR [rax],eax
   14000bef6:	add    BYTE PTR [rax],al
   14000bef8:	rex.WRB ins BYTE PTR es:[rdi],dx
   14000befa:	add    BYTE PTR [rax],al
   14000befc:	add    al,BYTE PTR [rax]
   14000befe:	add    BYTE PTR [rax],al
   14000bf00:	pop    rcx
   14000bf01:	ins    BYTE PTR es:[rdi],dx
   14000bf02:	add    BYTE PTR [rax],al
   14000bf04:	add    eax,DWORD PTR [rax]
   14000bf06:	add    BYTE PTR [rax],al
   14000bf08:	gs ins BYTE PTR es:[rdi],dx
   14000bf0a:	add    BYTE PTR [rax],al
   14000bf0c:	add    al,0x0
   14000bf0e:	add    BYTE PTR [rax],al
   14000bf10:	jno    0x14000bf7e
   14000bf12:	add    BYTE PTR [rax],al
   14000bf14:	add    eax,0x7d000000
   14000bf19:	ins    BYTE PTR es:[rdi],dx
   14000bf1a:	add    BYTE PTR [rax],al
   14000bf1c:	(bad)  
   14000bf1d:	add    BYTE PTR [rax],al
   14000bf1f:	add    BYTE PTR [rcx+0x700006c],cl
   14000bf25:	add    BYTE PTR [rax],al
   14000bf27:	add    BYTE PTR [rax],al
   14000bf29:	add    BYTE PTR [rax],al
   14000bf2b:	add    BYTE PTR [rax],cl
   14000bf2d:	add    BYTE PTR [rax],al
   14000bf2f:	add    BYTE PTR [rbp+0x900006c],dl
   14000bf35:	add    BYTE PTR [rax],al
   14000bf37:	add    BYTE PTR [rcx+0xa00006c],ah
   14000bf3d:	add    BYTE PTR [rax],al
   14000bf3f:	add    BYTE PTR [rbp+0xb00006c],ch
   14000bf45:	add    BYTE PTR [rax],al
   14000bf47:	add    BYTE PTR [rcx+0x800006c],bh
   14000bf4d:	add    BYTE PTR [rax],al
   14000bf4f:	add    ch,al
   14000bf51:	ins    BYTE PTR es:[rdi],dx
   14000bf52:	add    BYTE PTR [rax],al
   14000bf54:	or     BYTE PTR [rax],al
   14000bf56:	add    BYTE PTR [rax],al
   14000bf58:	shr    DWORD PTR [rax+rax*1+0x0],1
   14000bf5c:	or     BYTE PTR [rax],al
   14000bf5e:	add    BYTE PTR [rax],al
   14000bf60:	add    BYTE PTR [rax],al
   14000bf62:	add    BYTE PTR [rax],al
   14000bf64:	sldt   WORD PTR [rax]
   14000bf67:	add    BYTE PTR [rax],al
   14000bf69:	add    BYTE PTR [rax],al
   14000bf6b:	add    BYTE PTR [rax],dl
   14000bf6d:	add    BYTE PTR [rax],al
   14000bf6f:	add    BYTE PTR [rax],al
   14000bf71:	add    BYTE PTR [rax],al
   14000bf73:	add    BYTE PTR [rcx],dl
   14000bf75:	add    BYTE PTR [rax],al
   14000bf77:	add    BYTE PTR [rax],al
   14000bf79:	add    BYTE PTR [rax],al
   14000bf7b:	add    BYTE PTR [rax],cl
   14000bf7d:	add    BYTE PTR [rax],al
   14000bf7f:	add    ch,bl
   14000bf81:	ins    BYTE PTR es:[rdi],dx
   14000bf82:	add    BYTE PTR [rax],al
   14000bf84:	or     BYTE PTR [rax],al
   14000bf86:	add    BYTE PTR [rax],al
   14000bf88:	jmp    0x14800bff9
   14000bf8d:	add    BYTE PTR [rax],al
   14000bf8f:	add    ch,dh
   14000bf91:	ins    BYTE PTR es:[rdi],dx
   14000bf92:	add    BYTE PTR [rax],al
   14000bf94:	adc    eax,0x1000000
   14000bf99:	ins    DWORD PTR es:[rdi],dx
   14000bf9a:	add    BYTE PTR [rax],al
   14000bf9c:	(bad)  
   14000bf9d:	add    BYTE PTR [rax],al
   14000bf9f:	add    BYTE PTR [rip+0x1700006d],cl        # 0x15700c012
   14000bfa5:	add    BYTE PTR [rax],al
   14000bfa7:	add    BYTE PTR [rcx],bl
   14000bfa9:	ins    DWORD PTR es:[rdi],dx
   14000bfaa:	add    BYTE PTR [rax],al
   14000bfac:	(bad)  
   14000bfad:	add    BYTE PTR [rax],al
   14000bfaf:	add    BYTE PTR [rax],al
   14000bfb1:	add    BYTE PTR [rax],al
   14000bfb3:	add    BYTE PTR [rax],cl
   14000bfb5:	add    BYTE PTR [rax],al
   14000bfb7:	add    BYTE PTR [rax],bl
   14000bfb9:	add    BYTE PTR [rax],al
   14000bfbb:	add    BYTE PTR [rcx],bl
   14000bfbd:	add    BYTE PTR [rax],al
   14000bfbf:	add    BYTE PTR [rcx],al
   14000bfc1:	add    BYTE PTR [rax],al
   14000bfc3:	add    al,cl
   14000bfc5:	mov    edi,0x400000
	...
   14000bfd2:	add    BYTE PTR [rax],al
   14000bfd4:	and    eax,0x6800006d
   14000bfd9:	add    BYTE PTR [rax],al
   14000bfdb:	add    BYTE PTR [rax],al
   14000bfdd:	add    BYTE PTR [rax],al
   14000bfdf:	add    BYTE PTR [rax-0xffffbf],bh
   14000bfe5:	(bad)  
   14000bfe6:	(bad)  
   14000bfe7:	push   rax
   14000bfe9:	add    BYTE PTR [r8],al
   14000bfec:	add    BYTE PTR [rax],al
   14000bfee:	add    BYTE PTR [rax],al
   14000bff0:	hlt    
   14000bff1:	add    BYTE PTR [r8],al
   14000bff4:	add    DWORD PTR [rax],eax
   14000bff6:	add    BYTE PTR [rax],al
   14000bff8:	stc    
   14000bff9:	add    BYTE PTR [r8],al
   14000bffc:	add    al,BYTE PTR [rax]
   14000bffe:	add    BYTE PTR [rax],al
   14000c000:	inc    BYTE PTR [rcx+0x0]
   14000c003:	add    BYTE PTR [rbx],al
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rbx],al
   14000c009:	rex.X add BYTE PTR [rax],al
   14000c00c:	add    al,0x0
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	or     BYTE PTR [rdx+0x0],al
   14000c013:	add    BYTE PTR [rip+0xd000000],al        # 0x14d00c019
   14000c019:	rex.X add BYTE PTR [rax],al
   14000c01c:	(bad)  
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rdx+rax*2],dl
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	or     BYTE PTR [rax],al
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	and    eax,0x7000042
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    BYTE PTR [rdx],ch
   14000c031:	rex.X add BYTE PTR [rax],al
   14000c034:	or     BYTE PTR [rax],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	rex.X add BYTE PTR gs:[rax],al
   14000c03c:	(bad)  
   14000c03d:	add    BYTE PTR [rax],al
   14000c03f:	add    BYTE PTR [rdx+0x42],ch
   14000c042:	add    BYTE PTR [rax],al
   14000c044:	or     BYTE PTR [rax],al
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	jns    0x14000c08c
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	or     DWORD PTR [rax],eax
   14000c04e:	add    BYTE PTR [rax],al
   14000c050:	stos   BYTE PTR es:[rdi],al
   14000c051:	rex.X add BYTE PTR [rax],al
   14000c054:	or     al,BYTE PTR [rax]
   14000c056:	add    BYTE PTR [rax],al
   14000c058:	fild   DWORD PTR [rdx+0x0]
   14000c05b:	add    BYTE PTR [rbx],cl
   14000c05d:	add    BYTE PTR [rax],al
   14000c05f:	add    BYTE PTR [rcx],cl
   14000c061:	rex.XB add BYTE PTR [r8],al
   14000c064:	or     al,0x0
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	ins    DWORD PTR es:[rdi],dx
   14000c069:	rex.XB add BYTE PTR [r8],al
   14000c06c:	or     eax,DWORD PTR [rax]
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	test   BYTE PTR [rbx+0x0],al
   14000c073:	add    BYTE PTR [rdx],cl
   14000c075:	add    BYTE PTR [rax],al
   14000c077:	add    BYTE PTR [rsi+0x9000043],bl
   14000c07d:	add    BYTE PTR [rax],al
   14000c07f:	add    BYTE PTR [rax+0x8000043],bh
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    dh,dl
   14000c089:	rex.XB add BYTE PTR [r8],al
   14000c08c:	(bad)  
   14000c08d:	add    BYTE PTR [rax],al
   14000c08f:	add    bl,bl
   14000c091:	rex.XB add BYTE PTR [r8],al
   14000c094:	or     BYTE PTR [rax],al
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	or     DWORD PTR [rax+rax*1+0x0],eax
   14000c09c:	(bad)  
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rsi],cl
   14000c0a1:	add    BYTE PTR [rax],r8b
   14000c0a4:	or     BYTE PTR [rax],al
   14000c0a6:	add    BYTE PTR [rax],al
   14000c0a8:	sub    eax,DWORD PTR [rax+rax*1+0x0]
   14000c0ac:	or     eax,0x58000000
   14000c0b1:	add    BYTE PTR [rax],r8b
   14000c0b4:	or     BYTE PTR [rax],al
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	push   0x44
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	(bad)  
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rdi+0x44],ch
   14000c0c2:	add    BYTE PTR [rax],al
   14000c0c4:	or     BYTE PTR [rax],al
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	fwait
   14000c0c9:	add    BYTE PTR [rax],r8b
   14000c0cc:	(bad)  
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0cf:	add    BYTE PTR [rax+0x8000044],ah
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    cl,cl
   14000c0d9:	add    BYTE PTR [rax],r8b
   14000c0dc:	(bad)  
   14000c0dd:	add    BYTE PTR [rax],al
   14000c0df:	add    dh,cl
   14000c0e1:	add    BYTE PTR [rax],r8b
   14000c0e4:	or     BYTE PTR [rax],al
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	cli    
   14000c0e9:	add    BYTE PTR [rax],r8b
   14000c0ec:	(bad)  
   14000c0ed:	add    BYTE PTR [rax],al
   14000c0ef:	add    bh,bh
   14000c0f1:	add    BYTE PTR [rax],r8b
   14000c0f4:	or     BYTE PTR [rax],al
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	sbb    al,BYTE PTR [rbp+0x0]
   14000c0fb:	add    BYTE PTR [rsi],cl
   14000c0fd:	add    BYTE PTR [rax],al
   14000c0ff:	add    BYTE PTR [rbp+rax*2+0x0],al
   14000c103:	add    BYTE PTR [rax],cl
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    BYTE PTR [rsi+0x45],dl
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	(bad)  
   14000c10d:	add    BYTE PTR [rax],al
   14000c10f:	add    BYTE PTR [rbx+0x45],bl
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	or     BYTE PTR [rax],al
   14000c116:	add    BYTE PTR [rax],al
   14000c118:	js     0x14000c15f
   14000c11a:	add    BYTE PTR [rax],al
   14000c11c:	adc    eax,DWORD PTR [rax]
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c121:	add    BYTE PTR [r8],r8b
   14000c124:	or     BYTE PTR [rax],al
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	mov    ecx,0x7000045
   14000c12d:	add    BYTE PTR [rax],al
   14000c12f:	add    BYTE PTR [rsi+0x8000045],bh
   14000c135:	add    BYTE PTR [rax],al
   14000c137:	add    cl,bl
   14000c139:	add    BYTE PTR [r8],r8b
   14000c13c:	adc    al,0x0
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	or     BYTE PTR [rsi+0x0],al
   14000c143:	add    BYTE PTR [rax],cl
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rdx],bl
   14000c149:	rex.RX add BYTE PTR [rax],r8b
   14000c14c:	(bad)  
   14000c14d:	add    BYTE PTR [rax],al
   14000c14f:	add    BYTE PTR [rdi],bl
   14000c151:	rex.RX add BYTE PTR [rax],r8b
   14000c154:	or     BYTE PTR [rax],al
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	pop    rsp
   14000c159:	rex.RX add BYTE PTR [rax],r8b
   14000c15c:	adc    eax,0x8a000000
   14000c161:	rex.RX add BYTE PTR [rax],r8b
   14000c164:	(bad)  
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rbx+0x17000046],bh
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    bh,dh
   14000c171:	rex.RX add BYTE PTR [rax],r8b
   14000c174:	sbb    BYTE PTR [rax],al
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	outs   dx,BYTE PTR ds:[rsi]
   14000c179:	rex.RXB add BYTE PTR [r8],r8b
   14000c17c:	(bad)  
   14000c17d:	add    BYTE PTR [rax],al
   14000c17f:	add    BYTE PTR [rdi+rax*2+0x0],bh
   14000c183:	add    BYTE PTR [rsi],dl
   14000c185:	add    BYTE PTR [rax],al
   14000c187:	add    BYTE PTR [rsi+0x15000047],dl
   14000c18d:	add    BYTE PTR [rax],al
   14000c18f:	add    BYTE PTR [rax+0x8000047],dh
   14000c195:	add    BYTE PTR [rax],al
   14000c197:	add    bl,cl
   14000c199:	rex.RXB add BYTE PTR [r8],r8b
   14000c19c:	(bad)  
   14000c19d:	add    BYTE PTR [rax],al
   14000c19f:	add    bl,dh
   14000c1a1:	rex.RXB add BYTE PTR [r8],r8b
   14000c1a4:	(bad)  
   14000c1a5:	add    BYTE PTR [rax],al
   14000c1a7:	add    BYTE PTR [rsi],dl
   14000c1a9:	rex.W add BYTE PTR [rax],al
   14000c1ac:	add    eax,0x36000000
   14000c1b1:	rex.W add BYTE PTR [rax],al
   14000c1b4:	add    al,0x0
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	push   rsi
   14000c1b9:	rex.W add BYTE PTR [rax],al
   14000c1bc:	add    eax,DWORD PTR [rax]
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	jbe    0x14000c20a
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	add    al,BYTE PTR [rax]
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	xchg   esi,eax
   14000c1c9:	rex.W add BYTE PTR [rax],al
   14000c1cc:	add    DWORD PTR [rax],eax
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	mov    dh,0x48
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	add    BYTE PTR [rax],al
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	(bad)  [rax+0x0]
   14000c1db:	add    bh,bh
   14000c1dd:	(bad)  
   14000c1de:	(bad)  
   14000c1df:	jmp    QWORD PTR [rip+0x6d]        # 0x14000c252
   14000c1e5:	add    BYTE PTR [rax],al
   14000c1e7:	add    BYTE PTR [rdx],dh
   14000c1e9:	ins    DWORD PTR es:[rdi],dx
   14000c1ea:	add    BYTE PTR [rax],al
   14000c1ec:	sbb    DWORD PTR [rax],eax
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	cmp    eax,0x6d
   14000c1f5:	add    BYTE PTR [rax],al
   14000c1f7:	add    BYTE PTR [rcx],bl
   14000c1f9:	or     al,BYTE PTR [rdx]
   14000c1fb:	add    BYTE PTR [rdx],cl
   14000c1fd:	xchg   edx,eax
   14000c1fe:	(bad)  
   14000c1ff:	push   rax
   14000c200:	js     0x14000c26b
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	call   0x15900c2b8
   14000c209:	and    DWORD PTR [rdi],eax
   14000c20b:	add    BYTE PTR [rcx],bl
   14000c20d:	add    DWORD PTR [rsi],esp
   14000c20f:	add    BYTE PTR [rdx],dl
   14000c211:	lock adc al,ah
   14000c214:	(bad)  
   14000c215:	jo     0x14000c224
   14000c217:	(bad)  
   14000c218:	or     al,0x30
   14000c21a:	add    BYTE PTR [rax],al
   14000c21c:	js     0x14000c287
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	cmp    BYTE PTR [rax-0x10000],dh
   14000c226:	(bad)  
   14000c227:	call   QWORD PTR [rcx+0x6d]
   14000c22a:	add    BYTE PTR [rax],al
   14000c22c:	add    BYTE PTR [rax],al
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	pop    rbp
   14000c231:	ins    DWORD PTR es:[rdi],dx
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	add    DWORD PTR [rax],eax
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	imul   ebp,DWORD PTR [rbp+0x0],0x200
   14000c23f:	add    BYTE PTR [rax],al
   14000c241:	add    BYTE PTR [rax],al
   14000c243:	add    BYTE PTR [rbx],al
   14000c245:	add    BYTE PTR [rax],al
   14000c247:	add    BYTE PTR [rbp+0x6d],dh
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	add    al,0x0
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	sub    DWORD PTR [rbp+0x0],0x500
   14000c257:	add    BYTE PTR [rbp+0x600006d],cl
   14000c25d:	add    BYTE PTR [rax],al
   14000c25f:	add    BYTE PTR [rcx+0x300006d],bl
   14000c265:	add    BYTE PTR [rax],al
   14000c267:	add    BYTE PTR [rbp+0x300006d],ah
   14000c26d:	add    BYTE PTR [rax],al
   14000c26f:	add    BYTE PTR [rcx+0x300006d],dh
   14000c275:	add    BYTE PTR [rax],al
   14000c277:	add    BYTE PTR [rbp+0x200006d],bh
   14000c27d:	add    BYTE PTR [rax],al
   14000c27f:	add    BYTE PTR [rax],al
   14000c281:	add    BYTE PTR [rax],al
   14000c283:	add    BYTE PTR [rbx],al
   14000c285:	add    BYTE PTR [rax],al
   14000c287:	add    BYTE PTR [rdx],cl
   14000c289:	add    BYTE PTR [rax],al
   14000c28b:	add    BYTE PTR [rbx],cl
   14000c28d:	add    BYTE PTR [rax],al
   14000c28f:	add    BYTE PTR [rcx],al
   14000c291:	add    BYTE PTR [rax],al
   14000c293:	add    BYTE PTR [rax+0x400000c2],bl
	...
   14000c2a1:	add    BYTE PTR [rax],al
   14000c2a3:	add    cl,cl
   14000c2a5:	ins    DWORD PTR es:[rdi],dx
   14000c2a6:	add    BYTE PTR [rax],al
   14000c2a8:	rex.W add BYTE PTR [rax],al
   14000c2ab:	add    BYTE PTR [rax],al
   14000c2ad:	add    BYTE PTR [rax],al
   14000c2af:	add    BYTE PTR [rcx+rcx*2],dl
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	(bad)  
   14000c2b5:	(bad)  
   14000c2b6:	(bad)  
   14000c2b7:	inc    DWORD PTR [rsi+0x49]
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	add    BYTE PTR [rax],al
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	rex.WXB
   14000c2c1:	rex.WB add BYTE PTR [r8],al
   14000c2c4:	add    DWORD PTR [rax],eax
   14000c2c6:	add    BYTE PTR [rax],al
   14000c2c8:	rex.WRXB
   14000c2c9:	rex.WB add BYTE PTR [r8],al
   14000c2cc:	add    eax,DWORD PTR [rax]
   14000c2ce:	add    BYTE PTR [rax],al
   14000c2d0:	(bad)  
   14000c2d1:	rex.WB add BYTE PTR [r8],al
   14000c2d4:	add    al,BYTE PTR [rax]
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	rex.WB add BYTE PTR gs:[r8],al
   14000c2dc:	add    eax,DWORD PTR [rax]
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	(bad)  
   14000c2e1:	rex.WB add BYTE PTR [r8],al
   14000c2e4:	add    al,BYTE PTR [rax]
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	lahf   
   14000c2e9:	rex.WB add BYTE PTR [r8],al
   14000c2ec:	add    eax,DWORD PTR [rax]
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	stos   DWORD PTR es:[rdi],eax
   14000c2f1:	rex.WB add BYTE PTR [r8],al
   14000c2f4:	add    al,0x0
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	ror    DWORD PTR [rcx+0x0],cl
   14000c2fb:	add    BYTE PTR [rip+0xfffffffffb000000],al        # 0x13b00c301
   14000c301:	rex.WB add BYTE PTR [r8],al
   14000c304:	(bad)  
   14000c305:	add    BYTE PTR [rax],al
   14000c307:	add    BYTE PTR [rcx],ch
   14000c309:	rex.WX add BYTE PTR [rax],al
   14000c30c:	(bad)  
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rbp+0x600004a],cl
   14000c315:	add    BYTE PTR [rax],al
   14000c317:	add    BYTE PTR [rdi+0x500004a],ah
   14000c31d:	add    BYTE PTR [rax],al
   14000c31f:	add    BYTE PTR [rsi+0x400004a],bh
   14000c325:	add    BYTE PTR [rax],al
   14000c327:	add    ch,dl
   14000c329:	rex.WX add BYTE PTR [rax],al
   14000c32c:	add    eax,DWORD PTR [rax]
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	lock rex.WX add BYTE PTR [rax],al
   14000c334:	add    al,BYTE PTR [rax]
   14000c336:	add    BYTE PTR [rax],al
   14000c338:	cmc    
   14000c339:	rex.WX add BYTE PTR [rax],al
   14000c33c:	add    eax,DWORD PTR [rax]
   14000c33e:	add    BYTE PTR [rax],al
   14000c340:	cmovnp eax,DWORD PTR [rax]
   14000c343:	add    BYTE PTR [rax],cl
   14000c345:	add    BYTE PTR [rax],al
   14000c347:	add    BYTE PTR [rdi],bh
   14000c349:	rex.WXB add BYTE PTR [r8],al
   14000c34c:	add    eax,DWORD PTR [rax]
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	push   rcx
   14000c351:	rex.WXB add BYTE PTR [r8],al
   14000c354:	add    al,BYTE PTR [rax]
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	push   rsi
   14000c359:	rex.WXB add BYTE PTR [r8],al
   14000c35c:	add    eax,DWORD PTR [rax]
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	jno    0x14000c3ad
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	or     DWORD PTR [rax],eax
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c369:	rex.WXB add BYTE PTR [r8],al
   14000c36c:	add    eax,DWORD PTR [rax]
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	mov    dh,0x4b
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	add    al,BYTE PTR [rax]
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	mov    ebx,0x300004b
   14000c37d:	add    BYTE PTR [rax],al
   14000c37f:	add    dl,ch
   14000c381:	rex.WXB add BYTE PTR [r8],al
   14000c384:	or     al,BYTE PTR [rax]
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	sbb    BYTE PTR [rax+rax*1+0x0],cl
   14000c38c:	add    eax,DWORD PTR [rax]
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	xor    BYTE PTR [rax+rax*1+0x0],cl
   14000c394:	add    al,BYTE PTR [rax]
   14000c396:	add    BYTE PTR [rax],al
   14000c398:	rex.WR
   14000c399:	rex.WR add BYTE PTR [rax],r8b
   14000c39c:	add    DWORD PTR [rax],eax
   14000c39e:	add    BYTE PTR [rax],al
   14000c3a0:	outs   dx,DWORD PTR ds:[rsi]
   14000c3a1:	rex.WR add BYTE PTR [rax],r8b
   14000c3a4:	add    BYTE PTR [rax],al
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	(bad)  
   14000c3a9:	rex.WR add BYTE PTR [rax],r8b
   14000c3ac:	(bad)  
   14000c3ad:	(bad)  
   14000c3ae:	(bad)  
   14000c3af:	dec    ecx
   14000c3b1:	ins    DWORD PTR es:[rdi],dx
   14000c3b2:	add    BYTE PTR [rax],al
   14000c3b4:	add    BYTE PTR [rax],al
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	(bad)  
   14000c3b9:	ins    DWORD PTR es:[rdi],dx
   14000c3ba:	add    BYTE PTR [rax],al
   14000c3bc:	or     eax,DWORD PTR [rax]
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	loope  0x14000c42f
   14000c3c2:	add    BYTE PTR [rax],al
   14000c3c4:	add    BYTE PTR [rax],al
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	sbb    DWORD PTR [rdx],ecx
   14000c3ca:	add    al,BYTE PTR [rax]
   14000c3cc:	or     dl,BYTE PTR [rdx+0x6]
   14000c3cf:	push   rax
   14000c3d0:	js     0x14000c43b
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	cmp    BYTE PTR [rax+0x26190000],dh
   14000c3da:	or     DWORD PTR [rax],eax
   14000c3dc:	es xor al,0x2f
   14000c3df:	add    BYTE PTR [rdx],bl
   14000c3e1:	add    DWORD PTR [rax],ebp
   14000c3e3:	add    BYTE PTR [rbx],dl
   14000c3e5:	lock adc eax,esp
   14000c3e8:	xadd   BYTE PTR [rip+0x600c70],cl        # 0x14060d05f
   14000c3ef:	add    BYTE PTR [rax+0x69],bh
   14000c3f2:	add    BYTE PTR [rax],al
   14000c3f4:	shr    BYTE PTR [rdi-0x10000],0xff
   14000c3fb:	push   rbp
   14000c3fd:	ins    DWORD PTR es:[rdi],dx
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	add    BYTE PTR [rax],al
   14000c402:	add    BYTE PTR [rax],al
   14000c404:	add    DWORD PTR [rsi+0x0],ebp
   14000c407:	add    BYTE PTR [rcx],al
   14000c409:	add    BYTE PTR [rax],al
   14000c40b:	add    BYTE PTR [rip+0x200006e],cl        # 0x14200c47f
   14000c411:	add    BYTE PTR [rax],al
   14000c413:	add    BYTE PTR [rcx],bl
   14000c415:	outs   dx,BYTE PTR ds:[rsi]
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	add    eax,DWORD PTR [rax]
   14000c41a:	add    BYTE PTR [rax],al
   14000c41c:	add    BYTE PTR [rax],al
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	add    al,0x0
   14000c422:	add    BYTE PTR [rax],al
   14000c424:	and    eax,0x500006e
   14000c429:	add    BYTE PTR [rax],al
   14000c42b:	add    BYTE PTR [rcx],dh
   14000c42d:	outs   dx,BYTE PTR ds:[rsi]
   14000c42e:	add    BYTE PTR [rax],al
   14000c430:	(bad)  
   14000c431:	add    BYTE PTR [rax],al
   14000c433:	add    BYTE PTR [rip+0x700006e],bh        # 0x14700c4a7
   14000c439:	add    BYTE PTR [rax],al
   14000c43b:	add    BYTE PTR [rcx+0x6e],cl
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	add    al,0x0
   14000c442:	add    BYTE PTR [rax],al
   14000c444:	push   rbp
   14000c445:	outs   dx,BYTE PTR ds:[rsi]
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	add    al,0x0
   14000c44a:	add    BYTE PTR [rax],al
   14000c44c:	(bad)  
   14000c44d:	outs   dx,BYTE PTR ds:[rsi]
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	add    al,0x0
   14000c452:	add    BYTE PTR [rax],al
   14000c454:	ins    DWORD PTR es:[rdi],dx
   14000c455:	outs   dx,BYTE PTR ds:[rsi]
   14000c456:	add    BYTE PTR [rax],al
   14000c458:	add    eax,DWORD PTR [rax]
   14000c45a:	add    BYTE PTR [rax],al
   14000c45c:	add    BYTE PTR [rax],al
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	add    al,0x0
   14000c462:	add    BYTE PTR [rax],al
   14000c464:	or     eax,DWORD PTR [rax]
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	or     al,0x0
   14000c46a:	add    BYTE PTR [rax],al
   14000c46c:	add    DWORD PTR [rax],eax
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	je     0x14000c436
   14000c472:	add    BYTE PTR [rax],al
   14000c474:	add    BYTE PTR [rax],al
	...
   14000c47f:	add    BYTE PTR [rcx+0x6e],bh
   14000c482:	add    BYTE PTR [rax],al
   14000c484:	rex.W add BYTE PTR [rax],al
	...
   14000c48f:	add    al,cl
   14000c491:	rex.WR add BYTE PTR [rax],r8b
   14000c494:	(bad)  
   14000c495:	(bad)  
   14000c496:	(bad)  
   14000c497:	inc    DWORD PTR [rdx]
   14000c499:	rex.WRB add BYTE PTR [r8],r8b
   14000c49c:	add    BYTE PTR [rax],al
   14000c49e:	add    BYTE PTR [rax],al
   14000c4a0:	(bad)  
   14000c4a1:	rex.WRB add BYTE PTR [r8],r8b
   14000c4a4:	add    DWORD PTR [rax],eax
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	or     ecx,DWORD PTR [rbp+0x0]
   14000c4ab:	add    BYTE PTR [rdx],al
   14000c4ad:	add    BYTE PTR [rax],al
   14000c4af:	add    BYTE PTR [rax],dl
   14000c4b1:	rex.WRB add BYTE PTR [r8],r8b
   14000c4b4:	add    al,0x0
   14000c4b6:	add    BYTE PTR [rax],al
   14000c4b8:	and    al,0x4d
   14000c4ba:	add    BYTE PTR [rax],al
   14000c4bc:	add    eax,DWORD PTR [rax]
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	sub    DWORD PTR [rbp+0x0],ecx
   14000c4c3:	add    BYTE PTR [rax+rax*1],al
   14000c4c6:	add    BYTE PTR [rax],al
   14000c4c8:	pop    rdi
   14000c4c9:	rex.WRB add BYTE PTR [r8],r8b
   14000c4cc:	add    eax,DWORD PTR [rax]
   14000c4ce:	add    BYTE PTR [rax],al
   14000c4d0:	rex.WRB add BYTE PTR fs:[r8],r8b
   14000c4d4:	add    al,0x0
   14000c4d6:	add    BYTE PTR [rax],al
   14000c4d8:	jo     0x14000c527
   14000c4da:	add    BYTE PTR [rax],al
   14000c4dc:	add    eax,0x9b000000
   14000c4e1:	rex.WRB add BYTE PTR [r8],r8b
   14000c4e4:	(bad)  
   14000c4e5:	add    BYTE PTR [rax],al
   14000c4e7:	add    cl,cl
   14000c4e9:	rex.WRB add BYTE PTR [r8],r8b
   14000c4ec:	(bad)  
   14000c4ed:	add    BYTE PTR [rax],al
   14000c4ef:	add    cl,dh
   14000c4f1:	rex.WRB add BYTE PTR [r8],r8b
   14000c4f4:	or     BYTE PTR [rax],al
   14000c4f6:	add    BYTE PTR [rax],al
   14000c4f8:	push   rdx
   14000c4f9:	rex.WRX add BYTE PTR [rax],r8b
   14000c4fc:	(bad)  
   14000c4fd:	add    BYTE PTR [rax],al
   14000c4ff:	add    BYTE PTR [rcx+0x4e],ch
   14000c502:	add    BYTE PTR [rax],al
   14000c504:	(bad)  
   14000c505:	add    BYTE PTR [rax],al
   14000c507:	add    BYTE PTR [rax+0x500004e],al
   14000c50d:	add    BYTE PTR [rax],al
   14000c50f:	add    BYTE PTR [rdx+0x400004e],bl
   14000c515:	add    BYTE PTR [rax],al
   14000c517:	add    BYTE PTR [rbp+0x300004e],dh
   14000c51d:	add    BYTE PTR [rax],al
   14000c51f:	add    BYTE PTR [rdx+0x400004e],bh
   14000c525:	add    BYTE PTR [rax],al
   14000c527:	add    ah,dl
   14000c529:	rex.WRX add BYTE PTR [rax],r8b
   14000c52c:	or     DWORD PTR [rax],eax
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	add    al,0x4f
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	add    al,0x0
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	(bad)  
   14000c539:	rex.WRXB add BYTE PTR [r8],r8b
   14000c53c:	add    eax,DWORD PTR [rax]
   14000c53e:	add    BYTE PTR [rax],al
   14000c540:	sbb    ecx,DWORD PTR [rdi+0x0]
   14000c543:	add    BYTE PTR [rax+rax*1],al
   14000c546:	add    BYTE PTR [rax],al
   14000c548:	rex.WRXB add BYTE PTR ss:[r8],r8b
   14000c54c:	or     al,BYTE PTR [rax]
   14000c54e:	add    BYTE PTR [rax],al
   14000c550:	imul   ecx,DWORD PTR [rdi+0x0],0x400
   14000c557:	add    BYTE PTR [rbx+0x4f],bh
   14000c55a:	add    BYTE PTR [rax],al
   14000c55c:	add    eax,DWORD PTR [rax]
   14000c55e:	add    BYTE PTR [rax],al
   14000c560:	or     BYTE PTR [rdi+0x0],0x0
   14000c564:	add    al,0x0
   14000c566:	add    BYTE PTR [rax],al
   14000c568:	scas   eax,DWORD PTR es:[rdi]
   14000c569:	rex.WRXB add BYTE PTR [r8],r8b
   14000c56c:	or     eax,DWORD PTR [rax]
   14000c56e:	add    BYTE PTR [rax],al
   14000c570:	fisttp WORD PTR [rdi+0x0]
   14000c573:	add    BYTE PTR [rax+rax*1],al
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	cld    
   14000c579:	rex.WRXB add BYTE PTR [r8],r8b
   14000c57c:	add    eax,DWORD PTR [rax]
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	dec    BYTE PTR [rdi+0x0]
   14000c583:	add    BYTE PTR [rax+rax*1],al
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	(bad)  
   14000c589:	push   rax
   14000c58a:	add    BYTE PTR [rax],al
   14000c58c:	add    eax,DWORD PTR [rax]
   14000c58e:	add    BYTE PTR [rax],al
   14000c590:	and    dl,BYTE PTR [rax+0x0]
   14000c593:	add    BYTE PTR [rdx],al
   14000c595:	add    BYTE PTR [rax],al
   14000c597:	add    BYTE PTR [rdx+0x50],al
   14000c59a:	add    BYTE PTR [rax],al
   14000c59c:	add    DWORD PTR [rax],eax
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	gs push rax
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	add    BYTE PTR [rax],al
   14000c5a6:	add    BYTE PTR [rax],al
   14000c5a8:	test   DWORD PTR [rax+0x0],edx
   14000c5ab:	add    bh,bh
   14000c5ad:	(bad)  
   14000c5ae:	(bad)  
   14000c5af:	(bad)  
   14000c5b0:	jns    0x14000c620
   14000c5b2:	add    BYTE PTR [rax],al
   14000c5b4:	add    BYTE PTR [rax],al
   14000c5b6:	add    BYTE PTR [rax],al
   14000c5b8:	xchg   BYTE PTR [rsi+0x0],ch
   14000c5bb:	add    BYTE PTR [rax+rax*1],cl
   14000c5be:	add    BYTE PTR [rax],al
   14000c5c0:	xchg   ecx,eax
   14000c5c1:	outs   dx,BYTE PTR ds:[rsi]
   14000c5c2:	add    BYTE PTR [rax],al
   14000c5c4:	add    BYTE PTR [rax],al
   14000c5c6:	add    BYTE PTR [rax],al
   14000c5c8:	sbb    DWORD PTR [rdx],ecx
   14000c5ca:	add    al,BYTE PTR [rax]
   14000c5cc:	or     dl,BYTE PTR [rdx+0x6]
   14000c5cf:	push   rax
   14000c5d0:	js     0x14000c63b
   14000c5d2:	add    BYTE PTR [rax],al
   14000c5d4:	shr    BYTE PTR [rdi+0x15010000],0x8
   14000c5db:	add    BYTE PTR [rip+0x15000874],dl        # 0x15500ce55
   14000c5e1:	fs (bad) 
   14000c5e3:	add    BYTE PTR [rip+0x15000634],dl        # 0x15500cc1d
   14000c5e9:	xor    dl,BYTE PTR [rcx]
   14000c5eb:	loopne 0x14000c5ee
   14000c5ed:	sbb    BYTE PTR [rdx],cl
   14000c5ef:	add    BYTE PTR [rax],bl
   14000c5f1:	or     eax,DWORD PTR fs:[rax]
   14000c5f4:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000c5f8:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c5fb:	add    BYTE PTR [rax],bl
   14000c5fd:	xor    dl,BYTE PTR [rax+rsi*8]
   14000c600:	adc    ah,al
   14000c602:	adc    BYTE PTR [rax+0x1],dh
   14000c605:	adc    eax,0x74150008
   14000c60a:	or     DWORD PTR [rax],eax
   14000c60c:	adc    eax,0x15000864
   14000c611:	xor    al,0x7
   14000c613:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0d74b
   14000c619:	or     al,0x5
   14000c61b:	add    BYTE PTR [rdx+riz*4],cl
   14000c61e:	add    eax,0x3600470
   14000c623:	xor    BYTE PTR [rdx],al
   14000c625:	push   rax
   14000c626:	add    BYTE PTR [rax],al
   14000c628:	add    DWORD PTR [rcx+rax*1],eax
   14000c62b:	add    BYTE PTR [rdx+riz*2],al
   14000c62e:	add    BYTE PTR [rax],al
   14000c630:	or     DWORD PTR [rax],ebx
   14000c632:	or     DWORD PTR [rax],eax
   14000c634:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   14000c638:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   14000c63c:	sbb    BYTE PTR [rax+rbx*1],dh
   14000c63f:	add    BYTE PTR [rax],bl
   14000c641:	add    DWORD PTR [rsi],edx
   14000c643:	add    BYTE PTR [rcx],dl
   14000c645:	lock add BYTE PTR [rax],al
   14000c648:	jbe    0x14000c6a6
   14000c64a:	add    BYTE PTR [rax],al
   14000c64c:	add    DWORD PTR [rax],eax
   14000c64e:	add    BYTE PTR [rax],al
   14000c650:	adc    BYTE PTR [rdi+0x0],dl
   14000c653:	add    bh,dh
   14000c655:	pop    rax
   14000c656:	add    BYTE PTR [rax],al
   14000c658:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c659:	outs   dx,BYTE PTR ds:[rsi]
   14000c65a:	add    BYTE PTR [rax],al
   14000c65c:	neg    DWORD PTR [rax+0x0]
   14000c65f:	add    BYTE PTR [rcx],al
   14000c661:	(bad)  
   14000c662:	add    al,BYTE PTR [rax]
   14000c664:	(bad)  
   14000c665:	xor    al,BYTE PTR [rdx]
   14000c667:	push   rax
   14000c668:	add    DWORD PTR [rax],eax
   14000c66a:	add    BYTE PTR [rax],al
   14000c66c:	or     DWORD PTR [rcx+rax*1],eax
   14000c66f:	add    BYTE PTR [rdx+riz*1],al
   14000c672:	add    BYTE PTR [rax],al
   14000c674:	jbe    0x14000c6d2
   14000c676:	add    BYTE PTR [rax],al
   14000c678:	add    DWORD PTR [rax],eax
   14000c67a:	add    BYTE PTR [rax],al
   14000c67c:	cld    
   14000c67d:	pop    rcx
   14000c67e:	add    BYTE PTR [rax],al
   14000c680:	xor    bl,BYTE PTR [rdx+0x0]
   14000c683:	add    BYTE PTR [rcx],al
   14000c685:	add    BYTE PTR [rax],al
   14000c687:	add    BYTE PTR [rdx],dh
   14000c689:	pop    rdx
   14000c68a:	add    BYTE PTR [rax],al
   14000c68c:	or     DWORD PTR [rdx],ecx
   14000c68e:	add    al,0x0
   14000c690:	or     dh,BYTE PTR [rsi+rax*1]
   14000c693:	add    BYTE PTR [rdx],cl
   14000c695:	xor    al,BYTE PTR [rsi]
   14000c697:	jo     0x14000c70f
   14000c699:	pop    rsp
   14000c69a:	add    BYTE PTR [rax],al
   14000c69c:	add    DWORD PTR [rax],eax
   14000c69e:	add    BYTE PTR [rax],al
   14000c6a0:	std    
   14000c6a1:	pop    rdx
   14000c6a2:	add    BYTE PTR [rax],al
   14000c6a4:	xor    BYTE PTR [rbx+0x0],bl
   14000c6a7:	add    al,dl
   14000c6a9:	outs   dx,BYTE PTR ds:[rsi]
   14000c6aa:	add    BYTE PTR [rax],al
   14000c6ac:	xor    BYTE PTR [rbx+0x0],bl
   14000c6af:	add    BYTE PTR [rcx],al
   14000c6b1:	or     eax,0x340d0004
   14000c6b6:	or     DWORD PTR [rax],eax
   14000c6b8:	or     eax,0x11500632
   14000c6bd:	or     al,BYTE PTR [rax+rax*1]
   14000c6c0:	or     dh,BYTE PTR [rsi+rax*1]
   14000c6c3:	add    BYTE PTR [rdx],cl
   14000c6c5:	xor    al,BYTE PTR [rsi]
   14000c6c7:	jo     0x14000c73f
   14000c6c9:	pop    rsp
   14000c6ca:	add    BYTE PTR [rax],al
   14000c6cc:	add    DWORD PTR [rax],eax
   14000c6ce:	add    BYTE PTR [rax],al
   14000c6d0:	(bad)
   14000c6d3:	add    BYTE PTR [rdx],cl
   14000c6d5:	pop    rbp
   14000c6d6:	add    BYTE PTR [rax],al
   14000c6d8:	imul   BYTE PTR [rsi+0x0]
   14000c6db:	add    BYTE PTR [rax],al
   14000c6dd:	add    BYTE PTR [rax],al
   14000c6df:	add    BYTE PTR [rcx],al
   14000c6e1:	or     al,0x2
   14000c6e3:	add    BYTE PTR [rcx+rax*1],cl
   14000c6e6:	adc    DWORD PTR [rax],eax
   14000c6e8:	add    DWORD PTR [rax],eax
   14000c6ea:	add    BYTE PTR [rax],al
   14000c6ec:	sbb    DWORD PTR [rax],esp
   14000c6ee:	add    eax,0x14621800
   14000c6f3:	loopne 0x14000c707
   14000c6f5:	jo     0x14000c708
   14000c6f7:	(bad)  
   14000c6f8:	adc    BYTE PTR [rax],dh
   14000c6fa:	add    BYTE PTR [rax],al
   14000c6fc:	js     0x14000c767
   14000c6fe:	add    BYTE PTR [rax],al
   14000c700:	push   rax
   14000c701:	test   DWORD PTR [rax],eax
   14000c703:	add    bh,bh
   14000c705:	(bad)  
   14000c706:	(bad)  
   14000c707:	inc    DWORD PTR [rax]
   14000c709:	add    BYTE PTR [rax],al
   14000c70b:	add    bh,bh
   14000c70d:	(bad)  
   14000c70e:	(bad)  
   14000c70f:	inc    DWORD PTR [rax]
   14000c711:	add    BYTE PTR [rax],al
   14000c713:	add    BYTE PTR [rcx],al
   14000c715:	add    BYTE PTR [rax],al
   14000c717:	add    BYTE PTR [rax],al
   14000c719:	add    BYTE PTR [rax],al
   14000c71b:	add    BYTE PTR [rcx],al
	...
   14000c729:	add    BYTE PTR [rax],al
   14000c72b:	add    BYTE PTR [rbx],al
   14000c72d:	add    BYTE PTR [rax],al
   14000c72f:	add    BYTE PTR [rcx],al
   14000c731:	add    BYTE PTR [rax],al
   14000c733:	add    BYTE PTR [rdi+rax*8+0x0],cl
   14000c737:	add    BYTE PTR [rdx],al
   14000c739:	add    BYTE PTR [rax],al
   14000c73b:	add    BYTE PTR [rdx],al
   14000c73d:	add    BYTE PTR [rax],al
   14000c73f:	add    BYTE PTR [rbx],al
   14000c741:	add    BYTE PTR [rax],al
   14000c743:	add    BYTE PTR [rcx],al
   14000c745:	add    BYTE PTR [rax],al
   14000c747:	add    BYTE PTR [rax-0x39],ah
   14000c74a:	add    BYTE PTR [rax],al
   14000c74c:	add    BYTE PTR [rax],al
	...
   14000c757:	add    BYTE PTR [rdi],dl
   14000c759:	outs   dx,DWORD PTR ds:[rsi]
   14000c75a:	add    BYTE PTR [rax],al
   14000c75c:	cmp    BYTE PTR [rax],al
   14000c75e:	add    BYTE PTR [rax],al
   14000c760:	add    BYTE PTR [rax],al
	...
   14000c76b:	add    BYTE PTR [rbx+0x6f],bl
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	cmp    BYTE PTR [rax],al
	...
   14000c77e:	add    BYTE PTR [rax],al
   14000c780:	sbb    BYTE PTR [rcx+0x0],ah
   14000c783:	add    bh,bh
   14000c785:	(bad)  
   14000c786:	(bad)  
   14000c787:	inc    DWORD PTR [rdi+0x61]
   14000c78d:	add    BYTE PTR [rax],al
   14000c78f:	add    BYTE PTR [rcx+riz*2-0x10000],ch
   14000c796:	(bad)  
   14000c797:	call   QWORD PTR [rdi]
   14000c799:	outs   dx,DWORD PTR ds:[rsi]
   14000c79a:	add    BYTE PTR [rax],al
   14000c79c:	add    BYTE PTR [rax],al
   14000c79e:	add    BYTE PTR [rax],al
   14000c7a0:	and    al,0x6f
   14000c7a2:	add    BYTE PTR [rax],al
   14000c7a4:	add    DWORD PTR [rax],eax
   14000c7a6:	add    BYTE PTR [rax],al
   14000c7a8:	sub    al,0x6f
   14000c7aa:	add    BYTE PTR [rax],al
   14000c7ac:	add    al,BYTE PTR [rax]
   14000c7ae:	add    BYTE PTR [rax],al
   14000c7b0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000c7b2:	add    BYTE PTR [rax],al
   14000c7b4:	add    BYTE PTR [rax],al
   14000c7b6:	add    BYTE PTR [rax],al
   14000c7b8:	push   0x300006f
   14000c7bd:	add    BYTE PTR [rax],al
   14000c7bf:	add    BYTE PTR [rcx],bl
   14000c7c1:	or     al,BYTE PTR [rdx]
   14000c7c3:	add    BYTE PTR [rdx],cl
   14000c7c5:	xor    al,BYTE PTR [rsi]
   14000c7c7:	push   rax
   14000c7c8:	js     0x14000c833
   14000c7ca:	add    BYTE PTR [rax],al
   14000c7cc:	push   rax
   14000c7cd:	test   DWORD PTR [rax],eax
   14000c7cf:	add    BYTE PTR [rcx],al
   14000c7d1:	or     al,BYTE PTR [rdx]
   14000c7d3:	add    BYTE PTR [rdx],cl
   14000c7d5:	xor    al,BYTE PTR [rsi]
   14000c7d7:	xor    BYTE PTR [rcx],al
   14000c7d9:	adc    eax,0x74150008
   14000c7de:	or     al,BYTE PTR [rax]
   14000c7e0:	adc    eax,0x15000964
   14000c7e5:	xor    al,0x8
   14000c7e7:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0d93f
   14000c7ed:	(bad)  
   14000c7ee:	add    al,BYTE PTR [rax]
   14000c7f0:	(bad)  
   14000c7f1:	push   rdx
   14000c7f2:	add    dh,BYTE PTR [rax]
   14000c7f4:	add    DWORD PTR [rdx],ecx
   14000c7f6:	add    al,0x0
   14000c7f8:	or     dh,BYTE PTR [rax+rcx*1]
   14000c7fb:	add    BYTE PTR [rdx],cl
   14000c7fd:	push   rdx
   14000c7fe:	(bad)  
   14000c7ff:	jo     0x14000c802
   14000c801:	add    al,0x1
   14000c803:	add    BYTE PTR [rdx+rdx*1],al
   14000c806:	add    BYTE PTR [rax],al
   14000c808:	add    BYTE PTR [rax],al
   14000c80a:	add    BYTE PTR [rax],al
   14000c80c:	rex.W (bad) 
   14000c80e:	add    BYTE PTR [rax],al
   14000c810:	add    BYTE PTR [rax],al
   14000c812:	add    BYTE PTR [rax],al
   14000c814:	sub    al,cl
	...
   14000c826:	add    BYTE PTR [rax],al
   14000c828:	add    al,BYTE PTR [rax]
   14000c82a:	add    BYTE PTR [rax],al
   14000c82c:	rex enter 0x0,0x68
   14000c831:	enter  0x0,0x0
	...
   14000c83d:	add    BYTE PTR [rax],al
   14000c83f:	add    BYTE PTR [rax],dl
   14000c841:	add    BYTE PTR [rax],al
   14000c843:	add    BYTE PTR [rax-0x1f],bl
   14000c846:	add    BYTE PTR [rax],al
   14000c848:	add    BYTE PTR [rax],al
   14000c84a:	add    BYTE PTR [rax],al
   14000c84c:	(bad)  
   14000c84d:	(bad)  
   14000c84e:	(bad)  
   14000c84f:	inc    DWORD PTR [rax]
   14000c851:	add    BYTE PTR [rax],al
   14000c853:	add    BYTE PTR [rax],bl
   14000c855:	add    BYTE PTR [rax],al
   14000c857:	add    BYTE PTR [rax+0x5f],al
	...
   14000c869:	add    BYTE PTR [rax],al
   14000c86b:	add    BYTE PTR [rax+0xe0],dl
   14000c871:	add    BYTE PTR [rax],al
   14000c873:	add    bh,bh
   14000c875:	(bad)  
   14000c876:	(bad)  
   14000c877:	inc    DWORD PTR [rax]
   14000c879:	add    BYTE PTR [rax],al
   14000c87b:	add    BYTE PTR [rax],bl
   14000c87d:	add    BYTE PTR [rax],al
   14000c87f:	add    BYTE PTR [rax+0x69],al
	...
   14000c892:	add    BYTE PTR [rax],al
   14000c894:	mov    al,0xe0
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	add    BYTE PTR [rax],al
   14000c89a:	add    BYTE PTR [rax],al
   14000c89c:	(bad)  
   14000c89d:	(bad)  
   14000c89e:	(bad)  
   14000c89f:	inc    DWORD PTR [rax]
   14000c8a1:	add    BYTE PTR [rax],al
   14000c8a3:	add    BYTE PTR [rax],bl
   14000c8a5:	add    BYTE PTR [rax],al
   14000c8a7:	add    al,ch
   14000c8a9:	pop    rdi
	...
   14000c8ba:	add    BYTE PTR [rax],al
   14000c8bc:	(bad)  
   14000c8bd:	(bad)  
   14000c8be:	add    BYTE PTR [rax],al
   14000c8c0:	add    BYTE PTR [rax],al
   14000c8c2:	add    BYTE PTR [rax],al
   14000c8c4:	fmul   st,st(0)
	...
   14000c8d6:	add    BYTE PTR [rax],al
   14000c8d8:	add    eax,DWORD PTR [rax]
   14000c8da:	add    BYTE PTR [rax],al
   14000c8dc:	clc    
   14000c8dd:	enter  0x0,0x90
   14000c8e1:	enter  0x0,0x68
   14000c8e5:	enter  0x0,0x0
	...
   14000c8f9:	add    BYTE PTR [rax],al
   14000c8fb:	add    al,bl
   14000c8fd:	loopne 0x14000c8ff
   14000c8ff:	add    BYTE PTR [rax],al
   14000c901:	add    BYTE PTR [rax],al
   14000c903:	add    bh,bh
   14000c905:	(bad)  
   14000c906:	(bad)  
   14000c907:	inc    DWORD PTR [rax]
   14000c909:	add    BYTE PTR [rax],al
   14000c90b:	add    BYTE PTR [rax],bl
   14000c90d:	add    BYTE PTR [rax],al
   14000c90f:	add    al,ch
   14000c911:	pop    rdi
	...
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	(bad)  
   14000c925:	(bad)  
   14000c926:	add    BYTE PTR [rax],al
   14000c928:	add    BYTE PTR [rax],al
   14000c92a:	add    BYTE PTR [rax],al
   14000c92c:	rex leave 
	...
   14000c93e:	add    BYTE PTR [rax],al
   14000c940:	add    eax,DWORD PTR [rax]
   14000c942:	add    BYTE PTR [rax],al
   14000c944:	(bad)  
   14000c945:	leave  
   14000c946:	add    BYTE PTR [rax],al
   14000c948:	nop
   14000c949:	enter  0x0,0x68
   14000c94d:	enter  0x0,0x0
	...
   14000c965:	loope  0x14000c967
   14000c967:	add    BYTE PTR [rax],al
   14000c969:	add    BYTE PTR [rax],al
   14000c96b:	add    bh,bh
   14000c96d:	(bad)  
   14000c96e:	(bad)  
   14000c96f:	inc    DWORD PTR [rax]
   14000c971:	add    BYTE PTR [rax],al
   14000c973:	add    BYTE PTR [rax],bl
   14000c975:	add    BYTE PTR [rax],al
   14000c977:	add    al,ch
   14000c979:	pop    rdi
	...
   14000c986:	add    BYTE PTR [rax],al
   14000c988:	add    DWORD PTR [rax],eax
   14000c98a:	add    BYTE PTR [rax],al
   14000c98c:	cwde   
   14000c98d:	leave  
	...
   14000c99a:	add    BYTE PTR [rax],al
   14000c99c:	sub    cl,ah
   14000c99e:	add    BYTE PTR [rax],al
   14000c9a0:	add    BYTE PTR [rax],al
   14000c9a2:	add    BYTE PTR [rax],al
   14000c9a4:	(bad)  
   14000c9a5:	(bad)  
   14000c9a6:	(bad)  
   14000c9a7:	inc    DWORD PTR [rax]
   14000c9a9:	add    BYTE PTR [rax],al
   14000c9ab:	add    BYTE PTR [rax+0x28000000],ah
   14000c9b1:	cmp    eax,DWORD PTR [rax]
	...
   14000c9c3:	add    ah,bl
   14000c9c5:	cmp    al,BYTE PTR [rax]
   14000c9c7:	add    BYTE PTR [rax],al
   14000c9c9:	add    BYTE PTR [rax],al
   14000c9cb:	add    BYTE PTR [rax+0xc9],cl
	...
   14000c9e1:	add    BYTE PTR [rax],al
   14000c9e3:	add    BYTE PTR [rax+0xe1],al
   14000c9e9:	add    BYTE PTR [rax],al
   14000c9eb:	add    bh,bh
   14000c9ed:	(bad)  
   14000c9ee:	(bad)  
   14000c9ef:	inc    DWORD PTR [rax]
   14000c9f1:	add    BYTE PTR [rax],al
   14000c9f3:	add    BYTE PTR [rax],ah
   14000c9f5:	add    BYTE PTR [rax],al
   14000c9f7:	add    BYTE PTR [rax+0x54],dh
	...
   14000ca05:	add    BYTE PTR [rax],al
   14000ca07:	add    BYTE PTR [rcx],al
   14000ca09:	add    BYTE PTR [rax],al
   14000ca0b:	add    al,ah
   14000ca0d:	leave  
	...
   14000ca1a:	add    BYTE PTR [rax],al
   14000ca1c:	sbb    BYTE PTR [rbp+0x0],dl
   14000ca1f:	add    BYTE PTR [rax],al
   14000ca21:	add    BYTE PTR [rax],al
   14000ca23:	add    BYTE PTR [rax],cl
   14000ca25:	retf   0x0
	...
   14000ca34:	js     0x14000ca04
	...
   14000ca3e:	add    BYTE PTR [rax],al
   14000ca40:	add    cl,dl
   14000ca42:	add    BYTE PTR [rax],al
   14000ca44:	js     0x14000c9c8
   14000ca46:	add    BYTE PTR [rax],al
   14000ca48:	push   rax
   14000ca49:	(bad)  
	...
   14000ca52:	add    BYTE PTR [rax],al
   14000ca54:	loop   0x14000ca29
   14000ca56:	add    BYTE PTR [rax],al
   14000ca58:	push   rax
   14000ca59:	(bad)  
   14000ca5a:	add    BYTE PTR [rax],al
   14000ca5c:	test   al,0xcc
	...
   14000ca66:	add    BYTE PTR [rax],al
   14000ca68:	or     dl,ah
   14000ca6a:	add    BYTE PTR [rax],al
   14000ca6c:	test   al,0x80
   14000ca6e:	add    BYTE PTR [rax],al
   14000ca70:	add    dh,cl
	...
   14000ca7a:	add    BYTE PTR [rax],al
   14000ca7c:	sub    dl,ah
   14000ca7e:	add    BYTE PTR [rax],al
   14000ca80:	add    BYTE PTR [rdx-0x33280000],al
	...
   14000ca8e:	add    BYTE PTR [rax],al
   14000ca90:	rex.WR (bad) 
   14000ca92:	add    BYTE PTR [rax],al
   14000ca94:	fadd   DWORD PTR [rax-0x33080000]
	...
   14000caa2:	add    BYTE PTR [rax],al
   14000caa4:	jbe    0x14000ca7a
   14000caa6:	add    BYTE PTR [rax],al
   14000caa8:	clc    
   14000caa9:	add    BYTE PTR [rax],0x0
   14000caac:	test   al,0xcd
	...
   14000cab6:	add    BYTE PTR [rax],al
   14000cab8:	cwde   
   14000cab9:	(bad)  
   14000caba:	add    BYTE PTR [rax],al
   14000cabc:	test   al,0x81
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	and    dh,cl
	...
   14000caca:	add    BYTE PTR [rax],al
   14000cacc:	mov    esp,0x200000d4
   14000cad1:	(bad)  
   14000cad2:	add    BYTE PTR [rax],al
   14000cad4:	rex (bad) 
	...
   14000cade:	add    BYTE PTR [rax],al
   14000cae0:	loopne 0x14000cab6
   14000cae2:	add    BYTE PTR [rax],al
   14000cae4:	rex (bad) 
   14000cae6:	add    BYTE PTR [rax],al
   14000cae8:	ror    ch,1
	...
   14000caf2:	add    BYTE PTR [rax],al
   14000caf4:	add    al,0xd5
   14000caf6:	add    BYTE PTR [rax],al
   14000caf8:	rol    BYTE PTR [rcx-0x32f80000],1
	...
   14000cb06:	add    BYTE PTR [rax],al
   14000cb08:	sub    ch,dl
   14000cb0a:	add    BYTE PTR [rax],al
   14000cb0c:	or     BYTE PTR [rcx-0x32a80000],al
	...
   14000cb1a:	add    BYTE PTR [rax],al
   14000cb1c:	rex.W (bad) 
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	pop    rax
   14000cb21:	add    DWORD PTR [rax],0xcd1800
	...
   14000cb2f:	add    BYTE PTR [rdx-0x2b],dh
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	sbb    BYTE PTR [rcx-0x32680000],al
	...
   14000cb42:	add    BYTE PTR [rax],al
   14000cb44:	pushf  
   14000cb45:	(bad)  
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	cwde   
   14000cb49:	add    DWORD PTR [rax],0xcde000
	...
   14000cb57:	add    al,al
   14000cb59:	(bad)  
   14000cb5a:	add    BYTE PTR [rax],al
   14000cb5c:	loopne 0x14000cadf
   14000cb5e:	add    BYTE PTR [rax],al
   14000cb60:	add    ah,cl
	...
   14000cb6a:	add    BYTE PTR [rax],al
   14000cb6c:	(bad)  
   14000cb6d:	(bad)  
   14000cb6e:	add    BYTE PTR [rax],al
   14000cb70:	add    BYTE PTR [rax-0x33b00000],al
	...
   14000cb7e:	add    BYTE PTR [rax],al
   14000cb80:	xchg   edx,eax
   14000cb81:	(bad)  
   14000cb82:	add    BYTE PTR [rax],al
   14000cb84:	push   rax
   14000cb85:	add    BYTE PTR [rax],0x0
   14000cb88:	test   al,0xcf
	...
   14000cb92:	add    BYTE PTR [rax],al
   14000cb94:	movabs ds:0x83a80000d6,al
   14000cb9d:	rol    BYTE PTR [rax],1
	...
   14000cba7:	add    BYTE PTR [rsi],dl
   14000cba9:	xlat   BYTE PTR ds:[rbx]
   14000cbaa:	add    BYTE PTR [rax],al
   14000cbac:	add    BYTE PTR [rax+rax*1+0xcc8000],al
	...
   14000cbbb:	add    dh,ch
   14000cbbd:	fadd   DWORD PTR [rax]
   14000cbbf:	add    BYTE PTR [rax-0x37ffff80],al
   14000cbc5:	int3   
	...
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	cld    
   14000cbd1:	fadd   DWORD PTR [rax]
   14000cbd3:	add    al,cl
   14000cbd5:	add    BYTE PTR [rax],0x0
   14000cbd8:	rex.W int 0x0
	...
   14000cbe3:	add    BYTE PTR [rsi],bl
   14000cbe5:	fld    DWORD PTR [rax]
   14000cbe7:	add    BYTE PTR [rax-0x7f],cl
	...
   14000cbfe:	add    BYTE PTR [rax],al
   14000cc00:	xor    dh,dl
   14000cc02:	add    BYTE PTR [rax],al
   14000cc04:	add    BYTE PTR [rax],al
   14000cc06:	add    BYTE PTR [rax],al
   14000cc08:	(bad)  
   14000cc09:	(bad)  
   14000cc0a:	add    BYTE PTR [rax],al
   14000cc0c:	add    BYTE PTR [rax],al
   14000cc0e:	add    BYTE PTR [rax],al
   14000cc10:	(bad)  
   14000cc11:	(bad)  
   14000cc12:	add    BYTE PTR [rax],al
   14000cc14:	add    BYTE PTR [rax],al
   14000cc16:	add    BYTE PTR [rax],al
   14000cc18:	and    dl,dh
   14000cc1a:	add    BYTE PTR [rax],al
   14000cc1c:	add    BYTE PTR [rax],al
   14000cc1e:	add    BYTE PTR [rax],al
   14000cc20:	rex.WX (bad) 
   14000cc22:	add    BYTE PTR [rax],al
   14000cc24:	add    BYTE PTR [rax],al
   14000cc26:	add    BYTE PTR [rax],al
   14000cc28:	push   rsi
   14000cc29:	(bad)  
   14000cc2a:	add    BYTE PTR [rax],al
   14000cc2c:	add    BYTE PTR [rax],al
   14000cc2e:	add    BYTE PTR [rax],al
   14000cc30:	data16 (bad) 
   14000cc32:	add    BYTE PTR [rax],al
   14000cc34:	add    BYTE PTR [rax],al
   14000cc36:	add    BYTE PTR [rax],al
   14000cc38:	je     0x14000cc10
   14000cc3a:	add    BYTE PTR [rax],al
   14000cc3c:	add    BYTE PTR [rax],al
   14000cc3e:	add    BYTE PTR [rax],al
   14000cc40:	out    0xd5,al
	...
   14000cc4e:	add    BYTE PTR [rax],al
   14000cc50:	add    DWORD PTR [rax],eax
   14000cc52:	add    BYTE PTR [rax],al
   14000cc54:	add    BYTE PTR [rax],al
   14000cc56:	add    BYTE PTR [rax+0xb],al
   14000cc5c:	add    BYTE PTR [rax],al
   14000cc5e:	add    BYTE PTR [rax+0x9],al
   14000cc64:	add    BYTE PTR [rax],al
   14000cc66:	add    BYTE PTR [rax+0x3],al
   14000cc6c:	add    BYTE PTR [rax],al
   14000cc6e:	add    BYTE PTR [rax+0xa],al
   14000cc74:	add    BYTE PTR [rax],al
   14000cc76:	add    BYTE PTR [rax+0x0],al
   14000cc7c:	add    BYTE PTR [rax],al
   14000cc7e:	add    BYTE PTR [rax],al
   14000cc80:	(bad)  
   14000cc81:	add    BYTE PTR [rax],al
   14000cc83:	add    BYTE PTR [rax],al
   14000cc85:	add    BYTE PTR [rax],al
   14000cc87:	add    BYTE PTR [rdx],0x0
   14000cc8a:	add    BYTE PTR [rax],al
   14000cc8c:	add    BYTE PTR [rax],al
   14000cc8e:	add    BYTE PTR [rax+0x9],al
   14000cc94:	add    BYTE PTR [rax],al
   14000cc96:	add    BYTE PTR [rax+0x8],al
   14000cc9c:	add    BYTE PTR [rax],al
   14000cc9e:	add    BYTE PTR [rax+0x0],al
   14000cca4:	add    BYTE PTR [rax],al
   14000cca6:	add    BYTE PTR [rax],al
   14000cca8:	push   rsp
   14000cca9:	fadd   DWORD PTR [rax]
   14000ccab:	add    BYTE PTR [rax],al
   14000ccad:	add    BYTE PTR [rax],al
   14000ccaf:	add    dl,bl
   14000ccb1:	rol    DWORD PTR [rax],1
   14000ccb3:	add    BYTE PTR [rax],al
   14000ccb5:	add    BYTE PTR [rax],al
   14000ccb7:	add    BYTE PTR [rsi+0xd1],al
	...
   14000ccc5:	add    BYTE PTR [rax],al
   14000ccc7:	add    BYTE PTR [rax+0xd8],dl
	...
   14000ccd5:	add    BYTE PTR [rax],al
   14000ccd7:	add    BYTE PTR [rdx+0xd2],bh
   14000ccdd:	add    BYTE PTR [rax],al
   14000ccdf:	add    BYTE PTR [rsi+0xd1],ah
   14000cce5:	add    BYTE PTR [rax],al
   14000cce7:	add    BYTE PTR [rsi+0xd3],bl
	...
   14000ccf5:	add    BYTE PTR [rax],al
   14000ccf7:	add    ah,cl
   14000ccf9:	rol    DWORD PTR [rax],1
	...
   14000cd07:	add    BYTE PTR [rdx+rdx*8+0x0],ch
	...
   14000cd17:	add    dh,al
   14000cd19:	fadd   DWORD PTR [rax]
   14000cd1b:	add    BYTE PTR [rax],al
   14000cd1d:	add    BYTE PTR [rax],al
   14000cd1f:	add    al,bl
   14000cd21:	rol    BYTE PTR [rax],cl
   14000cd23:	add    BYTE PTR [rax],al
   14000cd25:	add    BYTE PTR [rax],al
   14000cd27:	add    BYTE PTR [rdx-0x28],bh
   14000cd2a:	add    BYTE PTR [rax],al
   14000cd2c:	add    BYTE PTR [rax],al
   14000cd2e:	add    BYTE PTR [rax],al
   14000cd30:	push   0xd8
   14000cd35:	add    BYTE PTR [rax],al
   14000cd37:	add    al,bl
   14000cd39:	fadd   DWORD PTR [rax]
	...
   14000cd47:	add    BYTE PTR [rax+rbx*8+0x0],dh
	...
   14000cd56:	add    BYTE PTR [rax],al
   14000cd58:	test   al,0xd2
   14000cd5a:	add    BYTE PTR [rax],al
   14000cd5c:	add    BYTE PTR [rax],al
   14000cd5e:	add    BYTE PTR [rax],al
   14000cd60:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cd61:	fadd   DWORD PTR [rax]
   14000cd63:	add    BYTE PTR [rax],al
   14000cd65:	add    BYTE PTR [rax],al
   14000cd67:	add    BYTE PTR [rdx+0xd2],cl
   14000cd6d:	add    BYTE PTR [rax],al
   14000cd6f:	add    BYTE PTR [rsi],al
   14000cd71:	rol    DWORD PTR [rax],cl
   14000cd73:	add    BYTE PTR [rax],al
   14000cd75:	add    BYTE PTR [rax],al
   14000cd77:	add    BYTE PTR [rdx+0xd3],bh
   14000cd7d:	add    BYTE PTR [rax],al
   14000cd7f:	add    dh,cl
   14000cd81:	rol    DWORD PTR [rax],cl
   14000cd83:	add    BYTE PTR [rax],al
   14000cd85:	add    BYTE PTR [rax],al
   14000cd87:	add    BYTE PTR [rbx+rdx*8],bl
	...
   14000cd96:	add    BYTE PTR [rax],al
   14000cd98:	in     al,dx
   14000cd99:	rol    BYTE PTR [rax],cl
	...
   14000cda7:	add    dh,bh
   14000cda9:	rol    DWORD PTR [rax],1
   14000cdab:	add    BYTE PTR [rax],al
   14000cdad:	add    BYTE PTR [rax],al
   14000cdaf:	add    BYTE PTR [rsi],cl
   14000cdb1:	rol    BYTE PTR [rax],cl
   14000cdb3:	add    BYTE PTR [rax],al
   14000cdb5:	add    BYTE PTR [rax],al
   14000cdb7:	add    BYTE PTR [rax-0x2e],bh
   14000cdba:	add    BYTE PTR [rax],al
   14000cdbc:	add    BYTE PTR [rax],al
   14000cdbe:	add    BYTE PTR [rax],al
   14000cdc0:	rex.W rol BYTE PTR [rax],cl
	...
   14000cdcf:	add    BYTE PTR [rsi-0x2e],dl
	...
   14000cdde:	add    BYTE PTR [rax],al
   14000cde0:	jo     0x14000cdb5
   14000cde2:	add    BYTE PTR [rax],al
   14000cde4:	add    BYTE PTR [rax],al
   14000cde6:	add    BYTE PTR [rax],al
   14000cde8:	mov    dl,bl
   14000cdea:	add    BYTE PTR [rax],al
   14000cdec:	add    BYTE PTR [rax],al
   14000cdee:	add    BYTE PTR [rax],al
   14000cdf0:	pop    rsp
   14000cdf1:	rol    DWORD PTR [rax],cl
	...
   14000cdff:	add    BYTE PTR [rsi+0xd1],dh
   14000ce05:	add    BYTE PTR [rax],al
   14000ce07:	add    BYTE PTR [rax+0xd2],ah
   14000ce0d:	add    BYTE PTR [rax],al
   14000ce0f:	add    BYTE PTR [rax+0xd1],bl
	...
   14000ce1d:	add    BYTE PTR [rax],al
   14000ce1f:	add    BYTE PTR [rbx+rdx*8+0x0],cl
   14000ce23:	add    BYTE PTR [rax],al
   14000ce25:	add    BYTE PTR [rax],al
   14000ce27:	add    BYTE PTR [rax],ah
   14000ce29:	rol    BYTE PTR [rax],cl
   14000ce2b:	add    BYTE PTR [rax],al
   14000ce2d:	add    BYTE PTR [rax],al
   14000ce2f:	add    BYTE PTR [rdx],dh
   14000ce31:	rol    DWORD PTR [rax],cl
	...
   14000ce3f:	add    BYTE PTR [rax],dh
   14000ce41:	rol    BYTE PTR [rax],cl
	...
   14000ce4f:	add    ah,ch
   14000ce51:	rol    DWORD PTR [rax],1
   14000ce53:	add    BYTE PTR [rax],al
   14000ce55:	add    BYTE PTR [rax],al
   14000ce57:	add    BYTE PTR [rax-0x2f],dh
   14000ce5a:	add    BYTE PTR [rax],al
   14000ce5c:	add    BYTE PTR [rax],al
   14000ce5e:	add    BYTE PTR [rax],al
   14000ce60:	(bad)  
   14000ce61:	rol    DWORD PTR [rax],1
   14000ce63:	add    BYTE PTR [rax],al
   14000ce65:	add    BYTE PTR [rax],al
   14000ce67:	add    BYTE PTR [rdx-0x2f],cl
	...
   14000ce76:	add    BYTE PTR [rax],al
   14000ce78:	(bad)  
   14000ce79:	rol    BYTE PTR [rax],1
   14000ce7b:	add    BYTE PTR [rax],al
   14000ce7d:	add    BYTE PTR [rax],al
   14000ce7f:	add    BYTE PTR [rax+0xd0],dl
   14000ce85:	add    BYTE PTR [rax],al
   14000ce87:	add    BYTE PTR [rax+0xd0],cl
   14000ce8d:	add    BYTE PTR [rax],al
   14000ce8f:	add    BYTE PTR [rax+0xd0],al
   14000ce95:	add    BYTE PTR [rax],al
   14000ce97:	add    BYTE PTR [rsi-0x30],ch
   14000ce9a:	add    BYTE PTR [rax],al
   14000ce9c:	add    BYTE PTR [rax],al
   14000ce9e:	add    BYTE PTR [rax],al
   14000cea0:	pop    rsi
   14000cea1:	rol    BYTE PTR [rax],1
   14000cea3:	add    BYTE PTR [rax],al
   14000cea5:	add    BYTE PTR [rax],al
   14000cea7:	add    BYTE PTR [rax],dh
   14000cea9:	rol    BYTE PTR [rax],1
   14000ceab:	add    BYTE PTR [rax],al
   14000cead:	add    BYTE PTR [rax],al
   14000ceaf:	add    BYTE PTR [rax-0x2f],al
   14000ceb2:	add    BYTE PTR [rax],al
   14000ceb4:	add    BYTE PTR [rax],al
   14000ceb6:	add    BYTE PTR [rax],al
   14000ceb8:	test   al,0xd0
   14000ceba:	add    BYTE PTR [rax],al
   14000cebc:	add    BYTE PTR [rax],al
   14000cebe:	add    BYTE PTR [rax],al
   14000cec0:	mov    esp,0xd0
   14000cec5:	add    BYTE PTR [rax],al
   14000cec7:	add    al,cl
   14000cec9:	rol    BYTE PTR [rax],1
   14000cecb:	add    BYTE PTR [rax],al
   14000cecd:	add    BYTE PTR [rax],al
   14000cecf:	add    al,ah
   14000ced1:	rol    BYTE PTR [rax],1
   14000ced3:	add    BYTE PTR [rax],al
   14000ced5:	add    BYTE PTR [rax],al
   14000ced7:	add    dl,ch
   14000ced9:	rol    BYTE PTR [rax],1
   14000cedb:	add    BYTE PTR [rax],al
   14000cedd:	add    BYTE PTR [rax],al
   14000cedf:	add    BYTE PTR [rax],ah
   14000cee1:	xlat   BYTE PTR ds:[rbx]
   14000cee2:	add    BYTE PTR [rax],al
   14000cee4:	add    BYTE PTR [rax],al
   14000cee6:	add    BYTE PTR [rax],al
   14000cee8:	xor    bh,dl
   14000ceea:	add    BYTE PTR [rax],al
   14000ceec:	add    BYTE PTR [rax],al
   14000ceee:	add    BYTE PTR [rax],al
   14000cef0:	cmp    bh,dl
   14000cef2:	add    BYTE PTR [rax],al
   14000cef4:	add    BYTE PTR [rax],al
   14000cef6:	add    BYTE PTR [rax],al
   14000cef8:	rex.X xlat BYTE PTR ds:[rbx]
   14000cefa:	add    BYTE PTR [rax],al
   14000cefc:	add    BYTE PTR [rax],al
   14000cefe:	add    BYTE PTR [rax],al
   14000cf00:	push   rax
   14000cf01:	xlat   BYTE PTR ds:[rbx]
   14000cf02:	add    BYTE PTR [rax],al
   14000cf04:	add    BYTE PTR [rax],al
   14000cf06:	add    BYTE PTR [rax],al
   14000cf08:	pop    rsp
   14000cf09:	xlat   BYTE PTR ds:[rbx]
   14000cf0a:	add    BYTE PTR [rax],al
   14000cf0c:	add    BYTE PTR [rax],al
   14000cf0e:	add    BYTE PTR [rax],al
   14000cf10:	push   0xd7
   14000cf15:	add    BYTE PTR [rax],al
   14000cf17:	add    BYTE PTR [rdx-0x29],dh
   14000cf1a:	add    BYTE PTR [rax],al
   14000cf1c:	add    BYTE PTR [rax],al
   14000cf1e:	add    BYTE PTR [rax],al
   14000cf20:	xchg   edx,eax
   14000cf21:	xlat   BYTE PTR ds:[rbx]
   14000cf22:	add    BYTE PTR [rax],al
   14000cf24:	add    BYTE PTR [rax],al
   14000cf26:	add    BYTE PTR [rax],al
   14000cf28:	mov    dl,0xd7
   14000cf2a:	add    BYTE PTR [rax],al
   14000cf2c:	add    BYTE PTR [rax],al
   14000cf2e:	add    BYTE PTR [rax],al
   14000cf30:	rcl    bh,1
   14000cf32:	add    BYTE PTR [rax],al
   14000cf34:	add    BYTE PTR [rax],al
   14000cf36:	add    BYTE PTR [rax],al
   14000cf38:	call   0x14000d014
   14000cf3d:	add    BYTE PTR [rax],al
   14000cf3f:	add    BYTE PTR [rsi],al
   14000cf41:	fadd   DWORD PTR [rax]
   14000cf43:	add    BYTE PTR [rax],al
   14000cf45:	add    BYTE PTR [rax],al
   14000cf47:	add    BYTE PTR [rax+rbx*8],bl
   14000cf4a:	add    BYTE PTR [rax],al
   14000cf4c:	add    BYTE PTR [rax],al
   14000cf4e:	add    BYTE PTR [rax],al
   14000cf50:	xor    bl,al
   14000cf52:	add    BYTE PTR [rax],al
   14000cf54:	add    BYTE PTR [rax],al
   14000cf56:	add    BYTE PTR [rax],al
   14000cf58:	cmp    al,0xd8
   14000cf5a:	add    BYTE PTR [rax],al
   14000cf5c:	add    BYTE PTR [rax],al
   14000cf5e:	add    BYTE PTR [rax],al
   14000cf60:	push   rax
   14000cf61:	rol    BYTE PTR [rax],1
   14000cf63:	add    BYTE PTR [rax],al
   14000cf65:	add    BYTE PTR [rax],al
   14000cf67:	add    BYTE PTR [rdx-0x30],al
   14000cf6a:	add    BYTE PTR [rax],al
   14000cf6c:	add    BYTE PTR [rax],al
   14000cf6e:	add    BYTE PTR [rax],al
   14000cf70:	hlt    
   14000cf71:	rol    BYTE PTR [rax],1
   14000cf73:	add    BYTE PTR [rax],al
   14000cf75:	add    BYTE PTR [rax],al
   14000cf77:	add    BYTE PTR [rcx+rdx*8],cl
   14000cf7a:	add    BYTE PTR [rax],al
   14000cf7c:	add    BYTE PTR [rax],al
   14000cf7e:	add    BYTE PTR [rax],al
   14000cf80:	and    cl,dl
   14000cf82:	add    BYTE PTR [rax],al
   14000cf84:	add    BYTE PTR [rax],al
   14000cf86:	add    BYTE PTR [rax],al
   14000cf88:	xor    dl,cl
   14000cf8a:	add    BYTE PTR [rax],al
   14000cf8c:	add    BYTE PTR [rax],al
   14000cf8e:	add    BYTE PTR [rax],al
   14000cf90:	sub    cl,dl
   14000cf92:	add    BYTE PTR [rax],al
   14000cf94:	add    BYTE PTR [rax],al
   14000cf96:	add    BYTE PTR [rax],al
   14000cf98:	rex.RX fld DWORD PTR [rax]
	...
   14000cfa7:	add    BYTE PTR [rax],bh
   14000cfa9:	add    BYTE PTR [rax],al
   14000cfab:	add    BYTE PTR [rax],al
   14000cfad:	add    BYTE PTR [rax],al
   14000cfaf:	adc    BYTE PTR [rsi],0x0
   14000cfb2:	add    BYTE PTR [rax],al
   14000cfb4:	add    BYTE PTR [rax],al
   14000cfb6:	add    BYTE PTR [rax+0x33],al
   14000cfbc:	add    BYTE PTR [rax],al
   14000cfbe:	add    BYTE PTR [rax+0x34],al
   14000cfc4:	add    BYTE PTR [rax],al
   14000cfc6:	add    BYTE PTR [rax+0x36],al
   14000cfcc:	add    BYTE PTR [rax],al
   14000cfce:	add    BYTE PTR [rax+0x26],al
   14000cfd4:	add    BYTE PTR [rax],al
   14000cfd6:	add    BYTE PTR [rax+0x2c],al
   14000cfdc:	add    BYTE PTR [rax],al
   14000cfde:	add    BYTE PTR [rax+0x29],al
   14000cfe4:	add    BYTE PTR [rax],al
   14000cfe6:	add    BYTE PTR [rax+0x27],al
   14000cfec:	add    BYTE PTR [rax],al
   14000cfee:	add    BYTE PTR [rax+0x28],al
   14000cff4:	add    BYTE PTR [rax],al
   14000cff6:	add    BYTE PTR [rax+0x0],al
   14000cffc:	add    BYTE PTR [rax],al
   14000cffe:	add    BYTE PTR [rax],al
   14000d000:	ret    0xd6
   14000d003:	add    BYTE PTR [rax],al
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    al,bl
   14000d009:	(bad)  
   14000d00a:	add    BYTE PTR [rax],al
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    BYTE PTR [rax],al
   14000d010:	(bad)  
   14000d011:	(bad)  
   14000d012:	add    BYTE PTR [rax],al
   14000d014:	add    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	add    al,0xd7
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	add    BYTE PTR [rax],al
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	mov    al,0xd6
	...
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	and    eax,DWORD PTR [rax]
   14000d032:	(bad)  
   14000d033:	(bad)  
   14000d034:	pop    rdi
   14000d035:	push   rsi
   14000d036:	rex pop rcx
   14000d038:	pop    r8
   14000d03a:	push   rax
   14000d03b:	rex.RB
   14000d03c:	pop    r8
   14000d03e:	rex pop rdx
   14000d040:	add    BYTE PTR [rax],al
   14000d042:	push   rbp
   14000d043:	add    BYTE PTR [rdi+0x58],bl
   14000d046:	movsxd esi,DWORD PTR [rax+0x74]
   14000d049:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000d052:	pop    rdi
   14000d053:	(bad)  
   14000d054:	ins    DWORD PTR es:[rdi],dx
   14000d055:	jae    0x14000d0be
   14000d057:	pop    rdi
   14000d058:	gs js  0x14000d0c4
   14000d05b:	je     0x14000d05d
   14000d05d:	add    BYTE PTR [rdi+0x0],bh
   14000d060:	pop    rdi
   14000d061:	pop    rdi
   14000d062:	addr32 gs je 0x14000d0d3
   14000d066:	(bad)  
   14000d067:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000d06e:	mov    es,WORD PTR [rax]
   14000d070:	pop    rdi
   14000d071:	pop    rdi
   14000d072:	jae    0x14000d0d9
   14000d074:	je     0x14000d0d5
   14000d076:	(bad)  
   14000d077:	jo     0x14000d0e9
   14000d079:	pop    rdi
   14000d07a:	je     0x14000d0f5
   14000d07c:	jo     0x14000d0e3
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	xor    al,BYTE PTR [riz*2+0x746978]
   14000d087:	add    BYTE PTR [rsi],cl
   14000d089:	add    DWORD PTR [rdi+0x65],ebx
   14000d08c:	js     0x14000d0f7
   14000d08e:	je     0x14000d090
   14000d090:	rol    DWORD PTR [rax],0x5f
   14000d093:	movsxd esp,DWORD PTR [rbp+0x78]
   14000d096:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   14000d09e:	jae    0x14000d10d
   14000d0a0:	(bad)
   14000d0a5:	add    BYTE PTR fs:[rax],al
   14000d0a8:	nop
   14000d0a9:	add    BYTE PTR [rdi+0x5f],bl
   14000d0ac:	jae    0x14000d113
   14000d0ae:	je     0x14000d125
   14000d0b0:	jae    0x14000d117
   14000d0b2:	jb     0x14000d121
   14000d0b4:	(bad)  
   14000d0b5:	je     0x14000d11f
   14000d0b7:	gs jb  0x14000d12c
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	jge    0x14000d0bf
   14000d0be:	pop    rdi
   14000d0bf:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000d0c6:	ins    DWORD PTR es:[rdi],dx
   14000d0c7:	add    BYTE PTR [rdi+0x0],dl
   14000d0ca:	pop    rdi
   14000d0cb:	pop    rdi
   14000d0cc:	rex.XB pop r15
   14000d0ce:	jae    0x14000d140
   14000d0d0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000d0d4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000d0db:	ins    BYTE PTR es:[rdi],dx
   14000d0dc:	gs jb  0x14000d0df
   14000d0df:	add    BYTE PTR [rdx+0x63615f00],ah
   14000d0e5:	ins    DWORD PTR es:[rdi],dx
   14000d0e6:	fs ins BYTE PTR es:[rdi],dx
   14000d0e8:	outs   dx,BYTE PTR ds:[rsi]
   14000d0e9:	add    BYTE PTR [rdi],ah
   14000d0eb:	add    DWORD PTR [rdi+0x66],ebx
   14000d0ee:	ins    DWORD PTR es:[rdi],dx
   14000d0ef:	outs   dx,DWORD PTR ds:[rsi]
   14000d0f0:	fs add BYTE PTR gs:[rax],al
   14000d0f4:	rol    BYTE PTR [rax],cl
   14000d0f6:	pop    rdi
   14000d0f7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d0fa:	ins    DWORD PTR es:[rdi],dx
   14000d0fb:	outs   dx,DWORD PTR ds:[rsi]
   14000d0fc:	fs add BYTE PTR gs:[rax],al
   14000d100:	ins    DWORD PTR es:[rdi],dx
   14000d101:	jae    0x14000d179
   14000d103:	movsxd esi,DWORD PTR [rdx+0x74]
   14000d106:	cs fs ins BYTE PTR es:[rdi],dx
   14000d109:	ins    BYTE PTR es:[rdi],dx
   14000d10a:	add    BYTE PTR [rax],al
   14000d10c:	(bad)  
   14000d10d:	add    BYTE PTR [rdi],bh
   14000d10f:	je     0x14000d176
   14000d111:	jb     0x14000d180
   14000d113:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000d11a:	pop    rcx
   14000d11b:	pop    r8
   14000d11d:	pop    rax
   14000d11e:	pop    rdx
   14000d11f:	add    dh,ah
   14000d121:	add    DWORD PTR [rdi+0x6c],ebx
   14000d124:	outs   dx,DWORD PTR ds:[rsi]
   14000d125:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d128:	add    ebx,DWORD PTR [r15+0x75]
   14000d12c:	outs   dx,BYTE PTR ds:[rsi]
   14000d12d:	ins    BYTE PTR es:[rdi],dx
   14000d12e:	outs   dx,DWORD PTR ds:[rsi]
   14000d12f:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d132:	jnp    0x14000d134
   14000d134:	pop    rdi
   14000d135:	pop    rdi
   14000d136:	fs ins BYTE PTR es:[rdi],dx
   14000d138:	ins    BYTE PTR es:[rdi],dx
   14000d139:	outs   dx,DWORD PTR ds:[rsi]
   14000d13a:	outs   dx,BYTE PTR ds:[rsi]
   14000d13b:	gs js  0x14000d1a7
   14000d13e:	je     0x14000d140
   14000d140:	nop
   14000d141:	add    bl,BYTE PTR [rdi+0x6f]
   14000d144:	outs   dx,BYTE PTR ds:[rsi]
   14000d145:	gs js  0x14000d1b1
   14000d148:	je     0x14000d14a
   14000d14a:	add    al,0x0
   14000d14c:	rex.RB jbe 0x14000d1b4
   14000d14f:	outs   dx,BYTE PTR ds:[rsi]
   14000d150:	je     0x14000d1a5
   14000d152:	gs je  0x14000d19e
   14000d155:	outs   dx,BYTE PTR ds:[rsi]
   14000d156:	outs   dx,WORD PTR ds:[rsi]
   14000d158:	jb     0x14000d1c7
   14000d15a:	(bad)  
   14000d15b:	je     0x14000d1c6
   14000d15d:	outs   dx,DWORD PTR ds:[rsi]
   14000d15e:	outs   dx,BYTE PTR ds:[rsi]
   14000d15f:	add    BYTE PTR [rbx],al
   14000d161:	add    BYTE PTR [rbp+0x76],al
   14000d164:	outs   dx,BYTE PTR gs:[rsi]
   14000d166:	je     0x14000d1ba
   14000d168:	imul   esi,DWORD PTR gs:[ebx+0x74],0x9007265
   14000d171:	add    BYTE PTR [rbp+0x76],al
   14000d174:	outs   dx,BYTE PTR gs:[rsi]
   14000d176:	je     0x14000d1cf
   14000d178:	jb     0x14000d1e3
   14000d17a:	je     0x14000d1e1
   14000d17c:	push   rsp
   14000d17d:	jb     0x14000d1e0
   14000d17f:	outs   dx,BYTE PTR ds:[rsi]
   14000d180:	jae    0x14000d1e8
   14000d182:	gs jb  0x14000d185
   14000d185:	add    BYTE PTR [rsi],ah
   14000d187:	add    BYTE PTR [rbx+0x6f],al
   14000d18a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d18c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000d194:	rex.RB js 0x14000d197
   14000d197:	add    BYTE PTR [rdi],bl
   14000d199:	add    BYTE PTR [rdi+0x70],cl
   14000d19c:	outs   dx,BYTE PTR gs:[rsi]
   14000d19e:	rex.RB jbe 0x14000d206
   14000d1a1:	outs   dx,BYTE PTR ds:[rsi]
   14000d1a2:	je     0x14000d1fb
   14000d1a4:	add    BYTE PTR [rax],al
   14000d1a6:	add    eax,0x74654700
   14000d1ab:	rex.WR (bad) 
   14000d1ad:	jae    0x14000d223
   14000d1af:	rex.RB jb 0x14000d224
   14000d1b2:	outs   dx,DWORD PTR ds:[rsi]
   14000d1b3:	jb     0x14000d1b5
   14000d1b5:	add    BYTE PTR [rsi],dh
   14000d1b7:	add    BYTE PTR [rdi+0x61],dl
   14000d1ba:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000d1c2:	ins    BYTE PTR es:[edi],dx
   14000d1c4:	gs rex.WRXB (bad) 
   14000d1c7:	push   0x65
   14000d1c9:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000d1cd:	add    BYTE PTR [rbx+0x6c],al
   14000d1d0:	outs   dx,DWORD PTR ds:[rsi]
   14000d1d1:	jae    0x14000d238
   14000d1d3:	rex.W (bad) 
   14000d1d5:	outs   dx,BYTE PTR ds:[rsi]
   14000d1d6:	fs ins BYTE PTR es:[rdi],dx
   14000d1d8:	add    BYTE PTR gs:[rdx+0x0],al
   14000d1dc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d1de:	push   rbp
   14000d1df:	outs   dx,BYTE PTR ds:[rsi]
   14000d1e0:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000d1e7:	imul   edi,DWORD PTR [rdx+0x65],0x50000
   14000d1ee:	rex.RB jbe 0x14000d256
   14000d1f1:	outs   dx,BYTE PTR ds:[rsi]
   14000d1f2:	je     0x14000d249
   14000d1f4:	outs   dx,BYTE PTR ds:[rsi]
   14000d1f5:	jb     0x14000d25c
   14000d1f7:	imul   esi,DWORD PTR [ebx+0x74],0x1e007265
   14000d1ff:	add    BYTE PTR [rdx+0x65],dl
   14000d202:	addr32 rex.WRXB jo 0x14000d26b
   14000d206:	outs   dx,BYTE PTR ds:[rsi]
   14000d207:	rex.WXB
   14000d208:	gs jns 0x14000d250
   14000d20b:	js     0x14000d264
   14000d20d:	add    BYTE PTR [rax+rax*1],ch
   14000d210:	push   rdx
   14000d211:	gs addr32 push rbx
   14000d214:	gs je  0x14000d26d
   14000d217:	(bad)  
   14000d218:	ins    BYTE PTR es:[rdi],dx
   14000d219:	jne    0x14000d280
   14000d21b:	rex.RB js 0x14000d275
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	adc    al,BYTE PTR [rax]
   14000d222:	rex.RXB
   14000d223:	gs je  0x14000d279
   14000d226:	jns    0x14000d29b
   14000d228:	je     0x14000d28f
   14000d22a:	ins    DWORD PTR es:[rdi],dx
   14000d22b:	push   rsp
   14000d22c:	imul   ebp,DWORD PTR [rbp+0x65],0x53000800
   14000d233:	jns    0x14000d2a8
   14000d235:	je     0x14000d29c
   14000d237:	ins    DWORD PTR es:[rdi],dx
   14000d238:	push   rsp
   14000d239:	imul   ebp,DWORD PTR [rbp+0x65],0x69466f54
   14000d240:	ins    BYTE PTR es:[rdi],dx
   14000d241:	gs push rsp
   14000d243:	imul   ebp,DWORD PTR [rbp+0x65],0x0
   14000d24a:	push   rdx
   14000d24b:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000d24f:	outs   dx,DWORD PTR ds:[rsi]
   14000d250:	jae    0x14000d2b7
   14000d252:	rex.WXB
   14000d253:	gs jns 0x14000d256
   14000d256:	(bad)  
   14000d257:	add    BYTE PTR [rdx+0x65],dl
   14000d25a:	addr32 rex.R
   14000d25c:	gs ins BYTE PTR es:[rdi],dx
   14000d25e:	gs je  0x14000d2c6
   14000d261:	rex.WXB
   14000d262:	gs jns 0x14000d2bb
   14000d265:	(bad)  
   14000d266:	ins    BYTE PTR es:[rdi],dx
   14000d267:	jne    0x14000d2ce
   14000d269:	push   rdi
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	add    eax,DWORD PTR [rax]
   14000d26e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d270:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d273:	rex.RX jb 0x14000d2db
   14000d276:	add    BYTE PTR gs:[rbx],al
   14000d279:	add    BYTE PTR [rdx+0x65],dl
   14000d27c:	addr32 rex.XB jb 0x14000d2e5
   14000d280:	(bad)  
   14000d281:	je     0x14000d2e8
   14000d283:	rex.WXB
   14000d284:	gs jns 0x14000d2cc
   14000d287:	js     0x14000d2e0
   14000d289:	add    BYTE PTR [rbx],dl
   14000d28b:	add    BYTE PTR [rdi+0x65],al
   14000d28e:	je     0x14000d2d5
   14000d290:	js     0x14000d2fb
   14000d292:	je     0x14000d2d7
   14000d294:	outs   dx,DWORD PTR ds:[rsi]
   14000d295:	fs gs push rax
   14000d298:	jb     0x14000d309
   14000d29a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d29d:	jae    0x14000d29f
   14000d29f:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56d25a5
   14000d2a5:	gs jo  0x14000d2a8
   14000d2a8:	and    BYTE PTR [rax],al
   14000d2aa:	rex.RXB
   14000d2ab:	gs je  0x14000d301
   14000d2ae:	je     0x14000d311
   14000d2b0:	jb     0x14000d326
   14000d2b2:	jne    0x14000d324
   14000d2b4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d2b6:	outs   dx,WORD PTR ds:[rsi]
   14000d2b8:	push   rdi
   14000d2b9:	add    BYTE PTR [rdi],cl
   14000d2bb:	add    BYTE PTR [rbx+0x65],dl
   14000d2be:	je     0x14000d315
   14000d2c0:	outs   dx,BYTE PTR ds:[rsi]
   14000d2c1:	push   0x6c646e61
   14000d2c6:	gs fs rex.RB js 0x14000d32e
   14000d2cb:	gs jo  0x14000d342
   14000d2ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d2d5:	gs jb  0x14000d2d8
   14000d2d8:	adc    eax,DWORD PTR [rax]
   14000d2da:	rex.RXB
   14000d2db:	gs je  0x14000d32b
   14000d2de:	outs   dx,DWORD PTR ds:[rsi]
   14000d2df:	fs jne 0x14000d34e
   14000d2e2:	gs rex.W (bad) 
   14000d2e5:	outs   dx,BYTE PTR ds:[rsi]
   14000d2e6:	fs ins BYTE PTR es:[rdi],dx
   14000d2e8:	gs push rdi
   14000d2ea:	add    BYTE PTR [rax],al
   14000d2ec:	add    BYTE PTR [rax],al
   14000d2ee:	push   rcx
   14000d2ef:	jne    0x14000d356
   14000d2f1:	jb     0x14000d36c
   14000d2f3:	push   rax
   14000d2f4:	gs jb  0x14000d35d
   14000d2f7:	outs   dx,DWORD PTR ds:[rsi]
   14000d2f8:	jb     0x14000d367
   14000d2fa:	(bad)  
   14000d2fb:	outs   dx,BYTE PTR ds:[rsi]
   14000d2fc:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d2ff:	outs   dx,DWORD PTR ds:[rsi]
   14000d300:	jne    0x14000d370
   14000d302:	je     0x14000d369
   14000d304:	jb     0x14000d306
   14000d306:	or     eax,0x74654700
   14000d30b:	rex.XB jne 0x14000d380
   14000d30e:	jb     0x14000d375
   14000d310:	outs   dx,BYTE PTR ds:[rsi]
   14000d311:	je     0x14000d363
   14000d313:	jb     0x14000d384
   14000d315:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d318:	jae    0x14000d363
   14000d31a:	add    BYTE PTR fs:[rcx],dl
   14000d31d:	add    BYTE PTR [rdi+0x65],al
   14000d320:	je     0x14000d365
   14000d322:	jne    0x14000d396
   14000d324:	jb     0x14000d38b
   14000d326:	outs   dx,BYTE PTR ds:[rsi]
   14000d327:	je     0x14000d37d
   14000d329:	push   0x64616572
   14000d32e:	rex.WB
   14000d32f:	add    BYTE PTR fs:[rax],al
   14000d332:	adc    al,0x0
   14000d334:	rex.RXB
   14000d335:	gs je  0x14000d38b
   14000d338:	jns    0x14000d3ad
   14000d33a:	je     0x14000d3a1
   14000d33c:	ins    DWORD PTR es:[rdi],dx
   14000d33d:	push   rsp
   14000d33e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000d345:	ins    BYTE PTR es:[rdi],dx
   14000d346:	gs push rsp
   14000d348:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000d34f:	gs je  0x14000d3a6
   14000d352:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000d359:	je     0x14000d35b
   14000d35b:	add    BYTE PTR [rdx],al
   14000d35d:	add    BYTE PTR [rdx+0x74],dl
   14000d360:	ins    BYTE PTR es:[rdi],dx
   14000d361:	rex.XB (bad) 
   14000d363:	jo     0x14000d3d9
   14000d365:	jne    0x14000d3d9
   14000d367:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000d36a:	outs   dx,BYTE PTR ds:[rsi]
   14000d36b:	je     0x14000d3d2
   14000d36d:	js     0x14000d3e3
   14000d36f:	add    BYTE PTR [rcx],cl
   14000d371:	add    BYTE PTR [rdx+0x74],dl
   14000d374:	ins    BYTE PTR es:[rdi],dx
   14000d375:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d377:	outs   dx,DWORD PTR ds:[rsi]
   14000d378:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000d37c:	jne    0x14000d3ec
   14000d37e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d382:	outs   dx,BYTE PTR ds:[rsi]
   14000d383:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d385:	je     0x14000d3f9
   14000d387:	jns    0x14000d389
   14000d389:	add    BYTE PTR [rdi],cl
   14000d38b:	add    BYTE PTR [rdx+0x74],dl
   14000d38e:	ins    BYTE PTR es:[rdi],dx
   14000d38f:	push   rsi
   14000d390:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000d397:	outs   dx,BYTE PTR ds:[rsi]
   14000d398:	ja     0x14000d403
   14000d39a:	outs   dx,BYTE PTR ds:[rsi]
   14000d39b:	add    BYTE PTR fs:[rax],al
   14000d39e:	adc    DWORD PTR [rax],eax
   14000d3a0:	push   rbp
   14000d3a1:	outs   dx,BYTE PTR ds:[rsi]
   14000d3a2:	push   0x6c646e61
   14000d3a7:	gs fs rex.RB js 0x14000d40f
   14000d3ac:	gs jo  0x14000d423
   14000d3af:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d3b6:	gs jb  0x14000d3b9
   14000d3b9:	add    BYTE PTR [rax+rax*1],cl
   14000d3bc:	rex.RXB
   14000d3bd:	gs je  0x14000d403
   14000d3c0:	jne    0x14000d434
   14000d3c2:	jb     0x14000d429
   14000d3c4:	outs   dx,BYTE PTR ds:[rsi]
   14000d3c5:	je     0x14000d417
   14000d3c7:	jb     0x14000d438
   14000d3c9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d3cc:	jae    0x14000d3ce
   14000d3ce:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000d3d3:	ins    DWORD PTR es:[rdi],dx
   14000d3d4:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000d3db:	outs   dx,DWORD PTR ds:[rsi]
   14000d3dc:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d3df:	jae    0x14000d3e1
   14000d3e1:	add    BYTE PTR [rcx+0x70],ah
   14000d3e4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72e475b
   14000d3ee:	jbe    0x14000d455
   14000d3f0:	outs   dx,BYTE PTR ds:[rsi]
   14000d3f1:	je     0x14000d45c
   14000d3f3:	outs   dx,BYTE PTR ds:[rsi]
   14000d3f4:	addr32 sub eax,0x766f7270
   14000d3fa:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   14000d402:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac650238
   14000d408:	ins    BYTE PTR es:[rdi],dx
   14000d409:	add    BYTE PTR [rcx+0x70],ah
   14000d40c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4783
   14000d416:	outs   dx,DWORD PTR ds:[rsi]
   14000d417:	jb     0x14000d47e
   14000d419:	sub    eax,0x2d6d6f63
   14000d41e:	ins    BYTE PTR es:[rdi],dx
   14000d41f:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e320156
   14000d425:	fs ins BYTE PTR es:[rdi],dx
   14000d427:	ins    BYTE PTR es:[rdi],dx
   14000d428:	add    BYTE PTR [rax],al
   14000d42a:	(bad)  
   14000d42b:	jo     0x14000d496
   14000d42d:	sub    eax,0x772d736d
   14000d432:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d439:	sub    eax,0x636e7973
   14000d43e:	push   0x2d316c2d
   14000d443:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac650279
   14000d449:	ins    BYTE PTR es:[rdi],dx
   14000d44a:	add    BYTE PTR [rax],al
   14000d44c:	(bad)  
   14000d44d:	jo     0x14000d4b8
   14000d44f:	sub    eax,0x772d736d
   14000d454:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d45b:	sub    eax,0x6f727265
   14000d460:	jb     0x14000d4ca
   14000d462:	(bad)  
   14000d463:	outs   dx,BYTE PTR ds:[rsi]
   14000d464:	fs ins BYTE PTR es:[rdi],dx
   14000d466:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000d46d:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac6502a4
   14000d473:	ins    BYTE PTR es:[rdi],dx
   14000d474:	add    BYTE PTR [rax],al
   14000d476:	(bad)  
   14000d477:	jo     0x14000d4e2
   14000d479:	sub    eax,0x772d736d
   14000d47e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d485:	sub    eax,0x646e6168
   14000d48a:	ins    BYTE PTR es:[rdi],dx
   14000d48b:	gs sub eax,0x312d316c
   14000d491:	sub    eax,0x6c642e30
   14000d496:	ins    BYTE PTR es:[rdi],dx
   14000d497:	add    BYTE PTR [rcx+0x70],ah
   14000d49a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4811
   14000d4a4:	outs   dx,DWORD PTR ds:[rsi]
   14000d4a5:	jb     0x14000d50c
   14000d4a7:	sub    eax,0x69676572
   14000d4ac:	jae    0x14000d522
   14000d4ae:	jb     0x14000d529
   14000d4b0:	sub    eax,0x312d316c
   14000d4b5:	sub    eax,0x6c642e30
   14000d4ba:	ins    BYTE PTR es:[rdi],dx
   14000d4bb:	add    BYTE PTR [rcx+0x70],ah
   14000d4be:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4835
   14000d4c8:	outs   dx,DWORD PTR ds:[rsi]
   14000d4c9:	jb     0x14000d530
   14000d4cb:	sub    eax,0x69737973
   14000d4d0:	outs   dx,BYTE PTR ds:[rsi]
   14000d4d1:	outs   dx,WORD PTR ds:[rsi]
   14000d4d3:	sub    eax,0x322d316c
   14000d4d8:	sub    eax,0x6c642e31
   14000d4dd:	ins    BYTE PTR es:[rdi],dx
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	(bad)  
   14000d4e1:	jo     0x14000d54c
   14000d4e3:	sub    eax,0x772d736d
   14000d4e8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d4ef:	sub    eax,0x656d6974
   14000d4f4:	jp     0x14000d565
   14000d4f6:	outs   dx,BYTE PTR ds:[rsi]
   14000d4f7:	gs sub eax,0x312d316c
   14000d4fd:	sub    eax,0x6c642e30
   14000d502:	ins    BYTE PTR es:[rdi],dx
   14000d503:	add    BYTE PTR [rcx+0x70],ah
   14000d506:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e487d
   14000d510:	outs   dx,DWORD PTR ds:[rsi]
   14000d511:	jb     0x14000d578
   14000d513:	sub    eax,0x69676572
   14000d518:	jae    0x14000d58e
   14000d51a:	jb     0x14000d595
   14000d51c:	sub    eax,0x312d316c
   14000d521:	sub    eax,0x6c642e31
   14000d526:	ins    BYTE PTR es:[rdi],dx
   14000d527:	add    BYTE PTR [rcx+0x70],ah
   14000d52a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e48a1
   14000d534:	outs   dx,DWORD PTR ds:[rsi]
   14000d535:	jb     0x14000d59c
   14000d537:	sub    eax,0x70616568
   14000d53c:	sub    eax,0x312d326c
   14000d541:	sub    eax,0x6c642e30
   14000d546:	ins    BYTE PTR es:[rdi],dx
   14000d547:	add    BYTE PTR [rcx+0x70],ah
   14000d54a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e48c1
   14000d554:	outs   dx,DWORD PTR ds:[rsi]
   14000d555:	jb     0x14000d5bc
   14000d557:	sub    eax,0x636f7270
   14000d55c:	gs jae 0x14000d5d2
   14000d55f:	je     0x14000d5c9
   14000d561:	jb     0x14000d5c8
   14000d563:	(bad)  
   14000d564:	fs jae 0x14000d594
   14000d567:	ins    BYTE PTR es:[rdi],dx
   14000d568:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e33029f
   14000d56e:	fs ins BYTE PTR es:[rdi],dx
   14000d570:	ins    BYTE PTR es:[rdi],dx
   14000d571:	add    BYTE PTR [rcx+0x70],ah
   14000d574:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e48eb
   14000d57e:	outs   dx,DWORD PTR ds:[rsi]
   14000d57f:	jb     0x14000d5e6
   14000d581:	sub    eax,0x7262696c
   14000d586:	(bad)  
   14000d587:	jb     0x14000d602
   14000d589:	ins    BYTE PTR es:[rdi],dx
   14000d58a:	outs   dx,DWORD PTR ds:[rsi]
   14000d58b:	(bad)  
   14000d58c:	fs gs jb 0x14000d5bd
   14000d590:	ins    BYTE PTR es:[rdi],dx
   14000d591:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e3102c9
   14000d597:	fs ins BYTE PTR es:[rdi],dx
   14000d599:	ins    BYTE PTR es:[rdi],dx
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	(bad)  
   14000d59d:	jo     0x14000d608
   14000d59f:	sub    eax,0x772d736d
   14000d5a4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d5ab:	sub    eax,0x666f7270
   14000d5b0:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000d5b8:	sub    eax,0x6c642e30
   14000d5bd:	ins    BYTE PTR es:[rdi],dx
   14000d5be:	add    BYTE PTR [rax],al
   14000d5c0:	(bad)  
   14000d5c1:	jo     0x14000d62c
   14000d5c3:	sub    eax,0x772d736d
   14000d5c8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d5cf:	sub    eax,0x736c7472
   14000d5d4:	jne    0x14000d646
   14000d5d6:	jo     0x14000d647
   14000d5d8:	jb     0x14000d64e
   14000d5da:	sub    eax,0x322d316c
   14000d5df:	sub    eax,0x6c642e30
   14000d5e4:	ins    BYTE PTR es:[rdi],dx
   14000d5e5:	add    BYTE PTR [rcx],bh
   14000d5e7:	add    BYTE PTR [rdi+0x6d],cl
   14000d5ea:	(bad)  
   14000d5eb:	rex.R ins DWORD PTR es:[rdi],dx
   14000d5ed:	push   rdx
   14000d5ee:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65477972
   14000d5f7:	je     0x14000d63d
   14000d5f9:	push   rdi
   14000d5fa:	rex.WRXB push r10
   14000d5fc:	add    BYTE PTR [rax+rax*1],r15b
   14000d600:	rex.WRXB ins DWORD PTR es:[rdi],dx
   14000d602:	(bad)  
   14000d603:	rex.R ins DWORD PTR es:[rdi],dx
   14000d605:	push   rdx
   14000d606:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65537972
   14000d60f:	je     0x14000d655
   14000d611:	push   rdi
   14000d612:	rex.WRXB push r10
   14000d614:	add    BYTE PTR [rax],r8b
   14000d617:	add    BYTE PTR [rdx+0x69],al
   14000d61a:	addr32 push rbx
   14000d61c:	je     0x14000d690
   14000d61e:	movsxd esp,DWORD PTR [rcx+0x74]
   14000d621:	add    BYTE PTR [rdx],dh
   14000d623:	add    BYTE PTR [rcx+0x6e],cl
   14000d626:	jbe    0x14000d67b
   14000d628:	je     0x14000d69c
   14000d62a:	rex.XB ins DWORD PTR es:[rdi],dx
   14000d62c:	jo     0x14000d685
   14000d62e:	add    BYTE PTR [rax],al
   14000d630:	cmp    eax,0x616d4f00
   14000d635:	rex.R ins DWORD PTR es:[rdi],dx
   14000d637:	push   rdx
   14000d638:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65537972
   14000d641:	je     0x14000d696
   14000d643:	je     0x14000d6b7
   14000d645:	imul   ebp,DWORD PTR [rsi+0x67],0x1f0000
   14000d64c:	rex.RXB
   14000d64d:	gs je  0x14000d698
   14000d650:	gs (bad) 
   14000d652:	fs gs jb 0x14000d656
   14000d656:	xor    BYTE PTR [rax],al
   14000d658:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d65a:	jbe    0x14000d6af
   14000d65c:	je     0x14000d6d0
   14000d65e:	rex.XB ins DWORD PTR es:[rdi],dx
   14000d660:	jo     0x14000d6b0
   14000d662:	rex.WB push r15
   14000d664:	add    BYTE PTR [rax],al
   14000d666:	xor    al,0x0
   14000d668:	rex.WRB
   14000d669:	rex.X push rsp
   14000d66b:	outs   dx,DWORD PTR ds:[rsi]
   14000d66c:	push   rbp
   14000d66d:	outs   dx,BYTE PTR ds:[rsi]
   14000d66e:	imul   esp,DWORD PTR [rbx+0x6f],0x2006564
   14000d675:	add    BYTE PTR [rbx+0x6f],al
   14000d678:	jo     0x14000d6f3
   14000d67a:	push   rbx
   14000d67b:	je     0x14000d6ef
   14000d67d:	imul   ebp,DWORD PTR [rsi+0x67],0x4d440000
   14000d684:	rex.XB ins DWORD PTR es:[rdi],dx
   14000d686:	outs   dx,BYTE PTR ds:[rsi]
   14000d687:	push   rbp
   14000d688:	je     0x14000d6f3
   14000d68a:	ins    BYTE PTR es:[rdi],dx
   14000d68b:	jae    0x14000d6bb
   14000d68d:	fs ins BYTE PTR es:[rdi],dx
   14000d68f:	ins    BYTE PTR es:[rdi],dx
   14000d690:	add    BYTE PTR [rax],al
   14000d692:	rex.R
   14000d693:	rex.WRB push r8
   14000d695:	jne    0x14000d70a
   14000d697:	push   0x786f7250
   14000d69c:	jns    0x14000d6cc
   14000d69e:	fs ins BYTE PTR es:[rdi],dx
   14000d6a0:	ins    BYTE PTR es:[rdi],dx
   14000d6a1:	add    BYTE PTR [rdi+0x6d],ch
   14000d6a4:	(bad)  
   14000d6a5:	fs ins DWORD PTR es:[rdi],dx
   14000d6a7:	(bad)  
   14000d6a8:	jo     0x14000d713
   14000d6aa:	cs fs ins BYTE PTR es:[rdi],dx
   14000d6ad:	ins    BYTE PTR es:[rdi],dx
   14000d6ae:	add    BYTE PTR [rax],al
   14000d6b0:	sbb    BYTE PTR [rax],al
   14000d6b2:	push   rdi
   14000d6b3:	ja     0x14000d716
   14000d6b5:	outs   dx,BYTE PTR ds:[rsi]
   14000d6b6:	rex.RX jb 0x14000d71e
   14000d6b9:	gs rex.WRB
   14000d6bb:	gs ins DWORD PTR es:[rdi],dx
   14000d6bd:	outs   dx,DWORD PTR ds:[rsi]
   14000d6be:	jb     0x14000d739
   14000d6c0:	add    BYTE PTR [rax],al
   14000d6c2:	(bad)  
   14000d6c3:	add    BYTE PTR [rdi+0x77],dl
   14000d6c6:	(bad)  
   14000d6c7:	outs   dx,BYTE PTR ds:[rsi]
   14000d6c8:	push   rcx
   14000d6c9:	jne    0x14000d730
   14000d6cb:	jb     0x14000d746
   14000d6cd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d6cf:	je     0x14000d736
   14000d6d1:	jb     0x14000d739
   14000d6d3:	(bad)  
   14000d6d4:	movsxd esp,DWORD PTR [rbp+0x0]
   14000d6d7:	add    BYTE PTR [rdi],cl
   14000d6d9:	add    BYTE PTR [rdi+0x77],dl
   14000d6dc:	(bad)  
   14000d6dd:	outs   dx,BYTE PTR ds:[rsi]
   14000d6de:	rex.XB ins BYTE PTR es:[rdi],dx
   14000d6e0:	outs   dx,DWORD PTR ds:[rsi]
   14000d6e1:	jae    0x14000d748
   14000d6e3:	rex.W (bad) 
   14000d6e5:	outs   dx,BYTE PTR ds:[rsi]
   14000d6e6:	fs ins BYTE PTR es:[rdi],dx
   14000d6e8:	add    BYTE PTR gs:[rdi],dl
   14000d6eb:	add    BYTE PTR [rdi+0x77],dl
   14000d6ee:	(bad)  
   14000d6ef:	outs   dx,BYTE PTR ds:[rsi]
   14000d6f0:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d6f2:	jne    0x14000d761
   14000d6f4:	gs jb  0x14000d758
   14000d6f7:	je     0x14000d75e
   14000d6f9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d6fb:	je     0x14000d762
   14000d6fd:	jb     0x14000d765
   14000d6ff:	(bad)  
   14000d700:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d703:	add    BYTE PTR [rip+0x61775700],ah        # 0x1a1782e09
   14000d709:	outs   dx,BYTE PTR ds:[rsi]
   14000d70a:	rex.WRXB jo 0x14000d772
   14000d70d:	outs   dx,BYTE PTR ds:[rsi]
   14000d70e:	rex.W (bad) 
   14000d710:	outs   dx,BYTE PTR ds:[rsi]
   14000d711:	fs ins BYTE PTR es:[rdi],dx
   14000d713:	add    BYTE PTR gs:[rax],al
   14000d716:	ja     0x14000d78f
   14000d718:	(bad)  
   14000d719:	jo     0x14000d784
   14000d71b:	cs fs ins BYTE PTR es:[rdi],dx
   14000d71e:	ins    BYTE PTR es:[rdi],dx
   14000d71f:	add    BYTE PTR [rax+rax*1],dl
   14000d722:	(bad)  
   14000d723:	(bad)  
   14000d724:	xor    eax,DWORD PTR [rax+0x59]
   14000d727:	pop    r8
   14000d729:	push   rax
   14000d72a:	rex.RB
   14000d72b:	pop    r8
   14000d72d:	rex pop rdx
   14000d72f:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000d733:	jb     0x14000d79a
   14000d735:	add    BYTE PTR gs:[rax],al
   14000d738:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000d73f:	movsxd eax,DWORD PTR [rax]
   14000d741:	add    BYTE PTR [rcx+0x3],ch
   14000d744:	pop    rdi
   14000d745:	jbe    0x14000d7ba
   14000d747:	outs   dx,BYTE PTR ds:[rsi]
   14000d748:	ja     0x14000d7ba
   14000d74a:	jb     0x14000d7b5
   14000d74c:	outs   dx,BYTE PTR ds:[rsi]
   14000d74d:	je     0x14000d7b5
   14000d74f:	add    BYTE PTR [rdi+0x61635f00],bh
   14000d755:	ins    BYTE PTR es:[rdi],dx
   14000d756:	ins    BYTE PTR es:[rdi],dx
   14000d757:	outs   dx,BYTE PTR ds:[rsi]
   14000d758:	gs ja  0x14000d7c3
   14000d75b:	add    BYTE PTR [rsi+0x75705f02],bl
   14000d761:	jb     0x14000d7c8
   14000d763:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d766:	ins    BYTE PTR es:[rdi],dx
   14000d767:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   14000d76e:	outs   dx,DWORD PTR ds:[rsi]
   14000d76f:	jbe    0x14000d7d6
   14000d771:	add    BYTE PTR [rdx],cl
   14000d773:	add    BYTE PTR [rdi],bh
   14000d775:	(bad)  
   14000d776:	xor    BYTE PTR [rbp+0x78],ah
   14000d779:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d77c:	je     0x14000d7e7
   14000d77e:	outs   dx,DWORD PTR ds:[rsi]
   14000d77f:	outs   dx,BYTE PTR ds:[rsi]
   14000d780:	rex
   14000d781:	rex push rcx
   14000d783:	rex.RB
   14000d784:	rex.B
   14000d785:	rex.B
   14000d786:	rex
   14000d787:	rex.B
   14000d788:	rex.RB
   14000d789:	rex.X push rcx
   14000d78b:	rex.RB
   14000d78c:	rex.X
   14000d78d:	rex.R
   14000d78e:	rex pop rdx
   14000d790:	add    BYTE PTR [rax],al
   14000d792:	or     eax,DWORD PTR [rax]
   14000d794:	(bad)  
   14000d795:	(bad)  
   14000d796:	xor    BYTE PTR [rbp+0x78],ah
   14000d799:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d79c:	je     0x14000d807
   14000d79e:	outs   dx,DWORD PTR ds:[rsi]
   14000d79f:	outs   dx,BYTE PTR ds:[rsi]
   14000d7a0:	rex
   14000d7a1:	rex push rcx
   14000d7a3:	rex.RB
   14000d7a4:	rex.B
   14000d7a5:	rex.B
   14000d7a6:	rex
   14000d7a7:	rex.B
   14000d7a8:	rex.RB
   14000d7a9:	rex.X push rcx
   14000d7ab:	rex.RB
   14000d7ac:	rex.X
   14000d7ad:	rex.R
   14000d7ae:	rex.W
   14000d7af:	rex pop rdx
   14000d7b1:	add    BYTE PTR [rax+rax*1],cl
   14000d7b4:	(bad)  
   14000d7b5:	(bad)  
   14000d7b6:	xor    BYTE PTR [rbp+0x78],ah
   14000d7b9:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d7bc:	je     0x14000d827
   14000d7be:	outs   dx,DWORD PTR ds:[rsi]
   14000d7bf:	outs   dx,BYTE PTR ds:[rsi]
   14000d7c0:	rex
   14000d7c1:	rex push rcx
   14000d7c3:	rex.RB
   14000d7c4:	rex.B
   14000d7c5:	rex.B
   14000d7c6:	rex
   14000d7c7:	rex.B
   14000d7c8:	rex.RB
   14000d7c9:	rex.X push rsi
   14000d7cb:	xor    BYTE PTR [rax+0x40],al
   14000d7ce:	pop    rdx
   14000d7cf:	add    BYTE PTR [rcx],dl
   14000d7d1:	add    BYTE PTR [rdi],bh
   14000d7d3:	(bad)  
   14000d7d4:	xor    DWORD PTR [rbp+0x78],esp
   14000d7d7:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d7da:	je     0x14000d845
   14000d7dc:	outs   dx,DWORD PTR ds:[rsi]
   14000d7dd:	outs   dx,BYTE PTR ds:[rsi]
   14000d7de:	rex
   14000d7df:	rex push rbp
   14000d7e1:	rex.RB
   14000d7e2:	rex.B
   14000d7e3:	rex.B
   14000d7e4:	rex pop rax
   14000d7e6:	pop    rdx
   14000d7e7:	add    BYTE PTR [rcx],dh
   14000d7e9:	add    BYTE PTR [rdi],bh
   14000d7eb:	ja     0x14000d855
   14000d7ed:	(bad)  
   14000d7ee:	je     0x14000d830
   14000d7f0:	gs js  0x14000d856
   14000d7f3:	gs jo  0x14000d86a
   14000d7f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000d7fd:	rex.X
   14000d7fe:	push   r8
   14000d800:	rex.RB
   14000d801:	rex.X
   14000d802:	rex.R pop rax
   14000d804:	pop    rdx
   14000d805:	add    BYTE PTR [rbx+0x0],cl
   14000d808:	pop    rdi
   14000d809:	rex.XB js 0x14000d884
   14000d80c:	push   rsp
   14000d80d:	push   0x45776f72
   14000d812:	js     0x14000d877
   14000d814:	gs jo  0x14000d88b
   14000d817:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14000d81e:	pop    rdi
   14000d81f:	pop    rdi
   14000d820:	rex.XB js 0x14000d89b
   14000d823:	rex.RX jb 0x14000d887
   14000d826:	ins    DWORD PTR es:[rdi],dx
   14000d827:	gs rex.W (bad) 
   14000d82a:	outs   dx,BYTE PTR ds:[rsi]
   14000d82b:	fs ins BYTE PTR es:[rdi],dx
   14000d82d:	gs jb  0x14000d863
   14000d830:	add    BYTE PTR [rax],al
   14000d832:	xchg   edx,eax
   14000d833:	add    al,0x6d
   14000d835:	gs ins DWORD PTR es:[rdi],dx
   14000d837:	movsxd esi,DWORD PTR [rax+0x79]
   14000d83a:	add    BYTE PTR [rax],al
   14000d83c:	adc    al,BYTE PTR [rax]
   14000d83e:	(bad)  
   14000d83f:	(bad)  
   14000d840:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000d844:	gs pop rdi
   14000d846:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000d84d:	rex.RB
   14000d84e:	rex.B
   14000d84f:	rex.B
   14000d850:	rex pop rax
   14000d852:	pop    rdx
   14000d853:	add    BYTE PTR [rax],cl
   14000d855:	add    BYTE PTR [rbx+0x6f],al
   14000d858:	rex.XB jb 0x14000d8c0
   14000d85b:	(bad)  
   14000d85c:	je     0x14000d8c3
   14000d85e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d860:	jae    0x14000d8d6
   14000d862:	(bad)  
   14000d863:	outs   dx,BYTE PTR ds:[rsi]
   14000d864:	movsxd esp,DWORD PTR [rbp+0x0]
   14000d867:	add    BYTE PTR [rdi],dl
   14000d869:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000d86d:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000d876:	js     0x14000d8cf
   14000d878:	add    BYTE PTR [rax],al
   14000d87a:	adc    al,BYTE PTR [rax]
   14000d87c:	rex.RXB
   14000d87d:	gs je  0x14000d8cd
   14000d880:	outs   dx,DWORD PTR ds:[rsi]
   14000d881:	fs jne 0x14000d8f0
   14000d884:	gs rex.W (bad) 
   14000d887:	outs   dx,BYTE PTR ds:[rsi]
   14000d888:	fs ins BYTE PTR es:[rdi],dx
   14000d88a:	gs rex.RB js 0x14000d8e5
   14000d88e:	add    BYTE PTR [rax],al
   14000d890:	(bad)  
   14000d891:	add    BYTE PTR [rdi+0x75],cl
   14000d894:	je     0x14000d906
   14000d896:	jne    0x14000d90c
   14000d898:	rex.R
   14000d899:	gs (bad) 
   14000d89b:	jne    0x14000d904
   14000d89d:	push   rbx
   14000d89e:	je     0x14000d912
   14000d8a0:	imul   ebp,DWORD PTR [rsi+0x67],0x2f000057
   14000d8a7:	add    BYTE PTR [rdi+0x70],cl
   14000d8aa:	outs   dx,BYTE PTR gs:[rsi]
   14000d8ac:	push   rax
   14000d8ad:	jb     0x14000d91e
   14000d8af:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d8b2:	jae    0x14000d8b4
   14000d8b4:	or     BYTE PTR [rax],al
   14000d8b6:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000d8b8:	jb     0x14000d927
   14000d8ba:	(bad)  
   14000d8bb:	je     0x14000d90a
   14000d8bd:	gs jae 0x14000d933
   14000d8c0:	(bad)  
   14000d8c1:	addr32 gs push rdi
   14000d8c4:	add    BYTE PTR [rax],al
   14000d8c6:	adc    al,0x0
   14000d8c8:	rex.RXB
   14000d8c9:	gs je  0x14000d91c
   14000d8cc:	jb     0x14000d93d
   14000d8ce:	movsxd eax,DWORD PTR [rcx+0x64]
   14000d8d1:	fs jb  0x14000d939
   14000d8d4:	jae    0x14000d949
   14000d8d6:	add    BYTE PTR [rax],al
   14000d8d8:	(bad)  
   14000d8d9:	add    BYTE PTR [rdi+0x65],al
   14000d8dc:	je     0x14000d92b
   14000d8de:	outs   dx,DWORD PTR ds:[rsi]
   14000d8df:	fs jne 0x14000d94e
   14000d8e2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14000d8ec:	add    BYTE PTR [rax],al
   14000d8ee:	rex.WRXB
   14000d8ef:	rex.WR
   14000d8f0:	rex.RB
   14000d8f1:	push   r13
   14000d8f3:	push   rsp
   14000d8f4:	xor    esi,DWORD PTR [rdx]
   14000d8f6:	cs fs ins BYTE PTR es:[rdi],dx
   14000d8f9:	ins    BYTE PTR es:[rdi],dx
   14000d8fa:	add    BYTE PTR [rax],al
   14000d8fc:	(bad)  
   14000d8fd:	jo     0x14000d968
   14000d8ff:	sub    eax,0x772d736d
   14000d904:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d90b:	sub    eax,0x75626564
   14000d910:	addr32 sub eax,0x312d316c
   14000d916:	sub    eax,0x6c642e31
   14000d91b:	ins    BYTE PTR es:[rdi],dx
   14000d91c:	add    BYTE PTR [rax],al
   14000d91e:	(bad)  
   14000d91f:	jo     0x14000d98a
   14000d921:	sub    eax,0x772d736d
   14000d926:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d92d:	sub    eax,0x61636f6c
   14000d932:	ins    BYTE PTR es:[rdi],dx
   14000d933:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000d93a:	sub    eax,0x322d316c
   14000d93f:	sub    eax,0x6c642e31
   14000d944:	ins    BYTE PTR es:[rdi],dx
   14000d945:	add    BYTE PTR [rsi+0x6d656d04],dl
   14000d94b:	jae    0x14000d9b2
   14000d94d:	je     0x14000d94f
	...

Disassembly of section .data:

000000014000e000 <.data>:
   14000e000:	add    DWORD PTR [rax],eax
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	int    0x5d
   14000e012:	and    dl,dl
   14000e014:	data16 (bad) 
   14000e016:	(bad)  
   14000e017:	inc    DWORD PTR [rax]
   14000e019:	add    BYTE PTR [rax],al
   14000e01b:	add    BYTE PTR [rax],al
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    al,bl
   14000e021:	test   DWORD PTR [rax],eax
   14000e023:	rex add DWORD PTR [rax],eax
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	and    BYTE PTR [rsi+0x14000],al
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	js     0x14000dfb8
   14000e032:	add    BYTE PTR [rax+0x1],al
	...
   14000e045:	add    BYTE PTR [rax],al
   14000e047:	add    BYTE PTR [rdx],dl
   14000e049:	mov    dh,0x0
   14000e04b:	rex add DWORD PTR [rax],eax
	...
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	and    BYTE PTR [rdx],dl
   14000e07a:	add    BYTE PTR [rax+0x1],al
   14000e07d:	add    BYTE PTR [rax],al
   14000e07f:	add    BYTE PTR [rcx],al
   14000e081:	add    BYTE PTR [rax],al
   14000e083:	add    BYTE PTR [rcx],al
   14000e085:	add    BYTE PTR [rax],al
   14000e087:	add    BYTE PTR [rcx],al
   14000e089:	add    BYTE PTR [rax],al
   14000e08b:	add    BYTE PTR [rax],al
   14000e08d:	add    BYTE PTR [rax],al
   14000e08f:	add    al,dl
   14000e091:	cdq    
   14000e092:	add    BYTE PTR [rax+0x1],al
	...
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    BYTE PTR [rsi],ch
   14000e0a1:	(bad)  
   14000e0a2:	push   r14
   14000e0a4:	gs js  0x14000e10a
   14000e0a7:	gs jo  0x14000e11e
   14000e0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0004040
   14000e0b1:	cdq    
   14000e0b2:	add    BYTE PTR [rax+0x1],al
	...
   14000e0bd:	add    BYTE PTR [rax],al
   14000e0bf:	add    BYTE PTR [rsi],ch
   14000e0c1:	(bad)  
   14000e0c2:	push   r14
   14000e0c4:	ins    BYTE PTR es:[rdi],dx
   14000e0c5:	outs   dx,DWORD PTR ds:[rsi]
   14000e0c6:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000e0ce:	jb     0x14000e110
   14000e0d0:	jae    0x14000e146
   14000e0d2:	fs rex
   14000e0d4:	add    BYTE PTR [rax],al
   14000e0d7:	add    al,dl
   14000e0d9:	cdq    
   14000e0da:	add    BYTE PTR [rax+0x1],al
	...
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rsi],ch
   14000e0e9:	(bad)  
   14000e0ea:	push   r14
   14000e0ec:	ins    BYTE PTR es:[rdi],dx
   14000e0ed:	outs   dx,BYTE PTR gs:[rsi]
   14000e0ef:	addr32 je 0x14000e15a
   14000e0f2:	pop    rdi
   14000e0f3:	gs jb  0x14000e168
   14000e0f6:	outs   dx,DWORD PTR ds:[rsi]
   14000e0f7:	jb     0x14000e139
   14000e0f9:	jae    0x14000e16f
   14000e0fb:	fs rex
   14000e0fd:	add    BYTE PTR [rax],al
   14000e100:	rcr    BYTE PTR [rcx+0x14000],1
	...
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	cs (bad) 
   14000e112:	push   r14
   14000e114:	outs   dx,DWORD PTR ds:[rsi]
   14000e115:	jne    0x14000e18b
   14000e117:	pop    rdi
   14000e118:	outs   dx,DWORD PTR ds:[rsi]
   14000e119:	pop    di
   14000e11b:	jb     0x14000e17e
   14000e11d:	outs   dx,BYTE PTR ds:[rsi]
   14000e11e:	addr32 gs rex jae 0x14000e197
   14000e123:	fs rex
   14000e125:	add    BYTE PTR [rax],al
   14000e128:	rcr    BYTE PTR [rcx+0x14000],1
	...
   14000e136:	add    BYTE PTR [rax],al
   14000e138:	cs (bad) 
   14000e13a:	push   r14
   14000e13c:	push   rdx
   14000e13d:	gs jae 0x14000e1b5
   14000e140:	ins    BYTE PTR es:[rdi],dx
   14000e141:	je     0x14000e188
   14000e143:	js     0x14000e1a8
   14000e145:	gs jo  0x14000e1bc
   14000e148:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697740
   14000e14f:	rex
   14000e150:	add    BYTE PTR [rax],al
   14000e153:	add    BYTE PTR [rax],al
   14000e155:	add    BYTE PTR [rax],al
   14000e157:	add    al,dl
   14000e159:	cdq    
   14000e15a:	add    BYTE PTR [rax+0x1],al
	...
   14000e165:	add    BYTE PTR [rax],al
   14000e167:	add    BYTE PTR [rsi],ch
   14000e169:	(bad)  
   14000e16a:	push   r14
   14000e16c:	(bad)
   14000e171:	ins    BYTE PTR es:[rdi],dx
   14000e172:	ins    BYTE PTR es:[rdi],dx
   14000e173:	outs   dx,DWORD PTR ds:[rsi]
   14000e174:	movsxd eax,DWORD PTR [rax+0x73]
   14000e177:	je     0x14000e1dd
   14000e179:	rex
   14000e17a:	add    BYTE PTR [rax],al
   14000e17d:	add    BYTE PTR [rax],al
   14000e17f:	add    al,dl
   14000e181:	cdq    
   14000e182:	add    BYTE PTR [rax+0x1],al
	...
   14000e18d:	add    BYTE PTR [rax],al
   14000e18f:	add    BYTE PTR [rsi],ch
   14000e191:	(bad)  
   14000e192:	push   r14
   14000e194:	pop    rdi
   14000e195:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e198:	pop    rdi
   14000e199:	gs jb  0x14000e20e
   14000e19c:	outs   dx,DWORD PTR ds:[rsi]
   14000e19d:	jb     0x14000e1df
   14000e19f:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000f000 <.pdata>:
   14000f000:	or     BYTE PTR [rax],dl
   14000f002:	add    BYTE PTR [rax],al
   14000f004:	test   al,0x10
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	push   0xffffffffb00000b9
   14000f00d:	adc    BYTE PTR [rax],al
   14000f00f:	add    BYTE PTR [rbx+0x11],dh
   14000f012:	add    BYTE PTR [rax],al
   14000f014:	jo     0x14000efcf
   14000f016:	add    BYTE PTR [rax],al
   14000f018:	mov    al,0x11
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	fcom   DWORD PTR [rcx]
   14000f01e:	add    BYTE PTR [rax],al
   14000f020:	int3   
   14000f021:	mov    edx,0x122c0000
   14000f026:	add    BYTE PTR [rax],al
   14000f028:	cmp    edx,DWORD PTR [rip+0xffffffffb9400000]        # 0xf940f02e
   14000f02e:	add    BYTE PTR [rax],al
   14000f030:	rex.R adc eax,0x16540000
   14000f036:	add    BYTE PTR [rax],al
   14000f038:	mov    WORD PTR [rcx+0x165c0000],?
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	in     al,0x18
   14000f042:	add    BYTE PTR [rax],al
   14000f044:	lods   al,BYTE PTR ds:[rsi]
   14000f045:	mov    ecx,0x18ec0000
   14000f04a:	add    BYTE PTR [rax],al
   14000f04c:	jno    0x14000f067
   14000f04e:	add    BYTE PTR [rax],al
   14000f050:	int3   
   14000f051:	mov    ecx,0x19780000
   14000f056:	add    BYTE PTR [rax],al
   14000f058:	out    0x1b,eax
   14000f05a:	add    BYTE PTR [rax],al
   14000f05c:	fdivr  QWORD PTR [rcx+0x1bf00000]
   14000f062:	add    BYTE PTR [rax],al
   14000f064:	rcr    DWORD PTR [rdi],1
   14000f066:	add    BYTE PTR [rax],al
   14000f068:	cld    
   14000f069:	mov    ecx,0x1fd80000
   14000f06e:	add    BYTE PTR [rax],al
   14000f070:	hlt    
   14000f071:	and    DWORD PTR [rax],eax
   14000f073:	add    BYTE PTR [rdx+rdi*4],bl
   14000f076:	add    BYTE PTR [rax],al
   14000f078:	cld    
   14000f079:	and    DWORD PTR [rax],eax
   14000f07b:	add    ah,bh
   14000f07d:	and    eax,DWORD PTR [rax]
   14000f07f:	add    BYTE PTR [rdx+rdi*4],bl
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	add    al,0x24
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	or     esp,DWORD PTR [rdi]
   14000f08a:	add    BYTE PTR [rax],al
   14000f08c:	rex mov edx,0x27140000
   14000f092:	add    BYTE PTR [rax],al
   14000f094:	ret    0x2a
   14000f097:	add    BYTE PTR [rdx+rdi*4+0x0],ah
   14000f09b:	add    al,cl
   14000f09d:	sub    al,BYTE PTR [rax]
   14000f09f:	add    BYTE PTR [rbx+0x2b],dl
   14000f0a2:	add    BYTE PTR [rax],al
   14000f0a4:	mov    BYTE PTR [rdx+0x2b5c0000],bh
   14000f0aa:	add    BYTE PTR [rax],al
   14000f0ac:	shr    DWORD PTR [rbx],0x0
   14000f0af:	add    al,al
   14000f0b1:	mov    edx,0x2bc80000
   14000f0b6:	add    BYTE PTR [rax],al
   14000f0b8:	jrcxz  0x14000f0e5
   14000f0ba:	add    BYTE PTR [rax],al
   14000f0bc:	int3   
   14000f0bd:	mov    edx,0x2bec0000
   14000f0c2:	add    BYTE PTR [rax],al
   14000f0c4:	push   0x2c
   14000f0c6:	add    BYTE PTR [rax],al
   14000f0c8:	(bad)  
   14000f0c9:	mov    edx,0x2c700000
   14000f0ce:	add    BYTE PTR [rax],al
   14000f0d0:	sahf   
   14000f0d1:	add    BYTE PTR cs:[rax],al
   14000f0d4:	loopne 0x14000f090
   14000f0d6:	add    BYTE PTR [rax],al
   14000f0d8:	rex (bad) 
   14000f0da:	add    BYTE PTR [rax],al
   14000f0dc:	rex.W xor BYTE PTR [rax],al
   14000f0df:	add    BYTE PTR [rax],al
   14000f0e1:	mov    ebx,0x30500000
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	xchg   ecx,eax
   14000f0e9:	xor    BYTE PTR [rax],al
   14000f0eb:	add    BYTE PTR [rax],bl
   14000f0ed:	mov    ebx,0x30a00000
   14000f0f2:	add    BYTE PTR [rax],al
   14000f0f4:	(bad)  
   14000f0f5:	xor    DWORD PTR [rax],eax
   14000f0f7:	add    ah,cl
   14000f0f9:	mov    ecx,0x31300000
   14000f0fe:	add    BYTE PTR [rax],al
   14000f100:	sbb    esi,DWORD PTR [rdx]
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	sub    al,0xbb
   14000f106:	add    BYTE PTR [rax],al
   14000f108:	and    al,0x32
   14000f10a:	add    BYTE PTR [rax],al
   14000f10c:	(bad)  [rip+0xffffffffbb400000]        # 0xfb40f112
   14000f112:	add    BYTE PTR [rax],al
   14000f114:	in     al,0x35
   14000f116:	add    BYTE PTR [rax],al
   14000f118:	or     esi,DWORD PTR [rsi]
   14000f11a:	add    BYTE PTR [rax],al
   14000f11c:	sbb    BYTE PTR [rbx+0x36140000],bh
   14000f122:	add    BYTE PTR [rax],al
   14000f124:	pop    rbp
   14000f125:	add    BYTE PTR ss:[rax],al
   14000f128:	pop    rsp
   14000f129:	mov    ebx,0x36640000
   14000f12e:	add    BYTE PTR [rax],al
   14000f130:	mov    eax,0x34000039
   14000f135:	mov    esp,0x39c00000
   14000f13a:	add    BYTE PTR [rax],al
   14000f13c:	(bad)  
   14000f13d:	cmp    al,BYTE PTR [rax]
   14000f13f:	add    BYTE PTR [rsp+rdi*4+0x0],cl
   14000f143:	add    ah,bl
   14000f145:	cmp    al,BYTE PTR [rax]
   14000f147:	add    BYTE PTR [rax],ah
   14000f149:	cmp    eax,DWORD PTR [rax]
   14000f14b:	add    BYTE PTR [rax],bl
   14000f14d:	mov    ebx,0x3bb80000
   14000f152:	add    BYTE PTR [rax],al
   14000f154:	idiv   BYTE PTR [rbx]
   14000f156:	add    BYTE PTR [rax],al
   14000f158:	(bad)  
   14000f159:	mov    esp,0x3bfc0000
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	ss cmp al,0x0
   14000f163:	add    BYTE PTR [rax-0x47],ch
   14000f166:	add    BYTE PTR [rax],al
   14000f168:	cmp    al,0x3c
   14000f16a:	add    BYTE PTR [rax],al
   14000f16c:	ins    DWORD PTR es:[rdi],dx
   14000f16d:	cmp    al,0x0
   14000f16f:	add    BYTE PTR [rax-0x47],ch
   14000f172:	add    BYTE PTR [rax],al
   14000f174:	je     0x14000f1b2
   14000f176:	add    BYTE PTR [rax],al
   14000f178:	ja     0x14000f1bb
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	push   0xffffffff800000bc
   14000f181:	add    BYTE PTR [r8],al
   14000f184:	mov    dl,0x41
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	and    BYTE PTR [rbx+0x41b80000],bh
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	(bad)  
   14000f191:	rex.WB add BYTE PTR [r8],al
   14000f194:	enter  0xbe,0x0
   14000f198:	adc    al,0x49
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	ror    BYTE PTR [rax+rax*1+0x0],0x8
   14000f1a1:	ret    0x0
   14000f1a4:	enter  0x4c,0x0
   14000f1a8:	mov    edi,0xd8000050
   14000f1ad:	ret    
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	enter  0x50,0x0
   14000f1b4:	rex push rcx
   14000f1b6:	add    BYTE PTR [rax],al
   14000f1b8:	fadd   st,st(5)
   14000f1ba:	add    BYTE PTR [rax],al
   14000f1bc:	rex.W push rcx
   14000f1be:	add    BYTE PTR [rax],al
   14000f1c0:	not    DWORD PTR [rcx+0x0]
   14000f1c3:	add    ah,ch
   14000f1c5:	(bad)
   14000f1c8:	add    BYTE PTR [rdx+0x0],dl
   14000f1cb:	add    BYTE PTR [rbp+0x4000052],dl
   14000f1d1:	mov    BYTE PTR [rax],0x0
   14000f1d4:	pushf  
   14000f1d5:	push   rdx
   14000f1d6:	add    BYTE PTR [rax],al
   14000f1d8:	repnz push rbx
   14000f1da:	add    BYTE PTR [rax],al
   14000f1dc:	sbb    dh,al
   14000f1de:	add    BYTE PTR [rax],al
   14000f1e0:	clc    
   14000f1e1:	push   rbx
   14000f1e2:	add    BYTE PTR [rax],al
   14000f1e4:	add    dl,BYTE PTR [rax+rax*1+0x0]
   14000f1e8:	int3   
   14000f1e9:	mov    edx,0x54300000
   14000f1ee:	add    BYTE PTR [rax],al
   14000f1f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f1f1:	push   rsp
   14000f1f2:	add    BYTE PTR [rax],al
   14000f1f4:	sub    al,0xbb
   14000f1f6:	add    BYTE PTR [rax],al
   14000f1f8:	mov    al,0x54
   14000f1fa:	add    BYTE PTR [rax],al
   14000f1fc:	andnps xmm0,XMMWORD PTR [rax]
   14000f1ff:	add    ah,cl
   14000f201:	mov    ecx,0x55180000
   14000f206:	add    BYTE PTR [rax],al
   14000f208:	jno    0x14000f25f
   14000f20a:	add    BYTE PTR [rax],al
   14000f20c:	int3   
   14000f20d:	mov    ecx,0x55780000
   14000f212:	add    BYTE PTR [rax],al
   14000f214:	(bad)  
   14000f215:	push   rbp
   14000f216:	add    BYTE PTR [rax],al
   14000f218:	push   0xffffffffa00000b9
   14000f21d:	push   rbp
   14000f21e:	add    BYTE PTR [rax],al
   14000f220:	outs   dx,DWORD PTR ds:[rsi]
   14000f221:	push   rsi
   14000f222:	add    BYTE PTR [rax],al
   14000f224:	int3   
   14000f225:	mov    edx,0x56800000
   14000f22a:	add    BYTE PTR [rax],al
   14000f22c:	leave  
   14000f22d:	push   rsi
   14000f22e:	add    BYTE PTR [rax],al
   14000f230:	sub    dh,al
   14000f232:	add    BYTE PTR [rax],al
   14000f234:	rcl    BYTE PTR [rsi+0x0],1
   14000f237:	add    dl,ah
   14000f239:	push   rsi
   14000f23a:	add    BYTE PTR [rax],al
   14000f23c:	int3   
   14000f23d:	mov    edx,0x56e80000
   14000f242:	add    BYTE PTR [rax],al
   14000f244:	ds pop rcx
   14000f246:	add    BYTE PTR [rax],al
   14000f248:	xor    dh,al
   14000f24a:	add    BYTE PTR [rax],al
   14000f24c:	push   rax
   14000f24d:	pop    rcx
   14000f24e:	add    BYTE PTR [rax],al
   14000f250:	outs   dx,BYTE PTR ds:[rsi]
   14000f251:	pop    rcx
   14000f252:	add    BYTE PTR [rax],al
   14000f254:	push   0xffffffff800000c6
   14000f259:	pop    rcx
   14000f25a:	add    BYTE PTR [rax],al
   14000f25c:	mov    ecx,0xcc000059
   14000f261:	mov    edx,0x59c00000
   14000f266:	add    BYTE PTR [rax],al
   14000f268:	fcomp  DWORD PTR [rcx+0x0]
   14000f26b:	add    ah,cl
   14000f26d:	mov    edx,0x59ec0000
   14000f272:	add    BYTE PTR [rax],al
   14000f274:	rex pop rdx
   14000f276:	add    BYTE PTR [rax],al
   14000f278:	ins    BYTE PTR es:[rdi],dx
   14000f279:	mov    BYTE PTR [rax],0x0
   14000f27c:	rex.W pop rdx
   14000f27e:	add    BYTE PTR [rax],al
   14000f280:	lea    ebx,[rdx+0x0]
   14000f283:	add    BYTE PTR [rax],bl
   14000f285:	mov    ebx,0x5af00000
   14000f28a:	add    BYTE PTR [rax],al
   14000f28c:	cmp    eax,0x8c00005b
   14000f291:	mov    BYTE PTR [rax],0x0
   14000f294:	test   BYTE PTR [rbx+0x0],bl
   14000f297:	add    BYTE PTR [rsp+rbx*2+0x0],dl
   14000f29b:	add    BYTE PTR [rax-0x7bffff3a],dh
   14000f2a1:	pop    rsp
   14000f2a2:	add    BYTE PTR [rax],al
   14000f2a4:	and    bl,BYTE PTR [rbp+0x0]
   14000f2a7:	add    BYTE PTR [rsi+rax*8+0x5d280000],bh
   14000f2ae:	add    BYTE PTR [rax],al
   14000f2b0:	(bad)  
   14000f2b1:	pop    rbp
   14000f2b2:	add    BYTE PTR [rax],al
   14000f2b4:	int3   
   14000f2b5:	mov    edx,0x5d5c0000
   14000f2ba:	add    BYTE PTR [rax],al
   14000f2bc:	nop
   14000f2bd:	pop    rbp
   14000f2be:	add    BYTE PTR [rax],al
   14000f2c0:	sbb    BYTE PTR [rbx+0x5da00000],bh
   14000f2c6:	add    BYTE PTR [rax],al
   14000f2c8:	adc    DWORD PTR [rdi+0x0],ebx
   14000f2cb:	add    al,ah
   14000f2cd:	mov    BYTE PTR [rax],0x0
   14000f2d0:	rex.W pop rdi
   14000f2d2:	add    BYTE PTR [rax],al
   14000f2d4:	jns    0x14000f335
   14000f2d6:	add    BYTE PTR [rax],al
   14000f2d8:	sbb    BYTE PTR [rbx+0x5f800000],bh
   14000f2de:	add    BYTE PTR [rax],al
   14000f2e0:	movabs eax,ds:0xa80000bb1800005f
   14000f2e9:	pop    rdi
   14000f2ea:	add    BYTE PTR [rax],al
   14000f2ec:	loopne 0x14000f34d
   14000f2ee:	add    BYTE PTR [rax],al
   14000f2f0:	sbb    BYTE PTR [rbx+0x5fe80000],bh
   14000f2f6:	add    BYTE PTR [rax],al
   14000f2f8:	or     DWORD PTR [rax+0x0],esp
   14000f2fb:	add    BYTE PTR [rax],bl
   14000f2fd:	mov    ebx,0x60100000
   14000f302:	add    BYTE PTR [rax],al
   14000f304:	(bad)  
   14000f305:	(bad)  
   14000f306:	add    BYTE PTR [rax],al
   14000f308:	rol    bh,1
   14000f30a:	add    BYTE PTR [rax],al
   14000f30c:	jo     0x14000f36e
   14000f30e:	add    BYTE PTR [rax],al
   14000f310:	xchg   esi,eax
   14000f311:	(bad)  
   14000f312:	add    BYTE PTR [rax],al
   14000f314:	sbb    BYTE PTR [rbx+0x60a00000],bh
   14000f31a:	add    BYTE PTR [rax],al
   14000f31c:	fldenv [rax+0x0]
   14000f31f:	add    BYTE PTR [rax],ah
   14000f321:	mov    ebx,0x60e00000
   14000f326:	add    BYTE PTR [rax],al
   14000f328:	punpcklwd mm0,DWORD PTR [rax]
   14000f32b:	add    BYTE PTR [rax],ah
   14000f32d:	mov    ebx,0x61180000
   14000f332:	add    BYTE PTR [rax],al
   14000f334:	sbb    ah,BYTE PTR [rdx+0x0]
   14000f337:	add    ah,ch
   14000f339:	mov    BYTE PTR [rax],0x0
   14000f33c:	and    BYTE PTR [rdx+0x0],ah
   14000f33f:	add    BYTE PTR [rax+0x62],bh
   14000f342:	add    BYTE PTR [rax],al
   14000f344:	int3   
   14000f345:	mov    ecx,0x62800000
   14000f34a:	add    BYTE PTR [rax],al
   14000f34c:	movabs al,ds:0xa80000b968000062
   14000f355:	(bad)  
   14000f356:	add    BYTE PTR [rax],al
   14000f358:	mov    ecx,0xcc000062
   14000f35d:	mov    edx,0x62c00000
   14000f362:	add    BYTE PTR [rax],al
   14000f364:	jrcxz  0x14000f3c8
   14000f366:	add    BYTE PTR [rax],al
   14000f368:	push   0xffffffffec0000b9
   14000f36d:	(bad)  
   14000f36e:	add    BYTE PTR [rax],al
   14000f370:	packsswb mm0,QWORD PTR [rax]
   14000f373:	add    BYTE PTR [rax-0x47],ch
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	sbb    BYTE PTR [rbx+0x0],ah
   14000f37b:	add    BYTE PTR [rcx],ch
   14000f37d:	movsxd eax,DWORD PTR [rax]
   14000f37f:	add    ah,cl
   14000f381:	mov    edx,0x63300000
   14000f386:	add    BYTE PTR [rax],al
   14000f388:	ds add BYTE PTR fs:[rax],al
   14000f38c:	sub    al,0xbb
   14000f38e:	add    BYTE PTR [rax],al
   14000f390:	rex.R
   14000f391:	add    BYTE PTR fs:[rax],al
   14000f394:	rex
   14000f395:	add    BYTE PTR gs:[rax],al
   14000f398:	int3   
   14000f399:	mov    ecx,0x65500000
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	(bad)  
   14000f3a1:	add    BYTE PTR gs:[rax],al
   14000f3a4:	and    BYTE PTR [rbx+0x65e00000],bh
   14000f3aa:	add    BYTE PTR [rax],al
   14000f3ac:	rex.WX
   14000f3ad:	data16 add BYTE PTR [rax],al
   14000f3b0:	fadd   st,st(7)
   14000f3b2:	add    BYTE PTR [rax],al
   14000f3b4:	push   rax
   14000f3b5:	data16 add BYTE PTR [rax],al
   14000f3b8:	in     al,0x66
   14000f3ba:	add    BYTE PTR [rax],al
   14000f3bc:	and    BYTE PTR [rbx+0x66f00000],bh
   14000f3c2:	add    BYTE PTR [rax],al
   14000f3c4:	push   rbx
   14000f3c5:	add    BYTE PTR [eax],al
   14000f3c8:	hlt    
   14000f3c9:	mov    DWORD PTR [rax],0x676000
   14000f3cf:	add    BYTE PTR [rsi-0x13ffff99],ah
   14000f3d5:	mov    DWORD PTR [rax],0x67b000
   14000f3db:	add    BYTE PTR [rbx],dl
   14000f3dd:	push   0xffffffffc7f40000
   14000f3e2:	add    BYTE PTR [rax],al
   14000f3e4:	shr    BYTE PTR [rax+0x0],0x0
   14000f3e8:	lock push 0xffffffffbb200000
   14000f3ee:	add    BYTE PTR [rax],al
   14000f3f0:	nop
   14000f3f1:	imul   eax,DWORD PTR [rax],0x69ad00
   14000f3f7:	add    ah,cl
   14000f3f9:	mov    edx,0x69b40000
   14000f3fe:	add    BYTE PTR [rax],al
   14000f400:	(bad)  
   14000f401:	push   0x0
   14000f403:	add    BYTE PTR [rax],bl
   14000f405:	mov    ebx,0x6a400000
   14000f40a:	add    BYTE PTR [rax],al
   14000f40c:	rex.X push 0x0
   14000f40f:	add    al,ch
   14000f411:	mov    BYTE PTR [rax],0x0
   14000f414:	(bad)  
   14000f415:	push   0x0
   14000f417:	add    BYTE PTR [rbp+0x6a],ch
   14000f41d:	enter  0x0,0xca
   14000f421:	push   0x0
   14000f423:	add    bh,ch
   14000f425:	push   0x0
   14000f427:	add    BYTE PTR [rax],dl
   14000f429:	mov    esp,0x6aef0000
   14000f42e:	add    BYTE PTR [rax],al
   14000f430:	or     ch,BYTE PTR [rbx+0x0]
   14000f433:	add    BYTE PTR [rax],dl
   14000f435:	mov    esp,0x6b0a0000
   14000f43a:	add    BYTE PTR [rax],al
   14000f43c:	imul   eax,DWORD PTR [eax],0x0
   14000f440:	and    BYTE PTR [rax+rax*1+0x6c0900],bh
   14000f447:	add    BYTE PTR [rdi],ch
   14000f449:	ins    BYTE PTR es:[rdi],dx
   14000f44a:	add    BYTE PTR [rax],al
   14000f44c:	mov    eax,0x250000be
   14000f451:	ins    DWORD PTR es:[rdi],dx
   14000f452:	add    BYTE PTR [rax],al
   14000f454:	rex.WXB ins DWORD PTR es:[rdi],dx
   14000f456:	add    BYTE PTR [rax],al
   14000f458:	clc    
   14000f459:	rol    DWORD PTR [rax],0x0
   14000f45c:	leave  
   14000f45d:	ins    DWORD PTR es:[rdi],dx
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	out    dx,eax
   14000f461:	ins    DWORD PTR es:[rdi],dx
   14000f462:	add    BYTE PTR [rax],al
   14000f464:	enter  0xc3,0x0
   14000f468:	jns    0x14000f4d8
   14000f46a:	add    BYTE PTR [rax],al
   14000f46c:	lahf   
   14000f46d:	outs   dx,BYTE PTR ds:[rsi]
   14000f46e:	add    BYTE PTR [rax],al
   14000f470:	enter  0xc5,0x0
   14000f474:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f475:	outs   dx,BYTE PTR ds:[rsi]
   14000f476:	add    BYTE PTR [rax],al
   14000f478:	ret    
   14000f479:	outs   dx,BYTE PTR ds:[rsi]
   14000f47a:	add    BYTE PTR [rax],al
   14000f47c:	(bad)  
   14000f47d:	mov    BYTE PTR [rax],0x0
   14000f480:	shr    BYTE PTR [rsi+0x0],1
   14000f483:	add    al,dh
   14000f485:	outs   dx,BYTE PTR ds:[rsi]
   14000f486:	add    BYTE PTR [rax],al
   14000f488:	(bad)  
   14000f489:	mov    BYTE PTR [rax],0x0
   14000f48c:	imul   BYTE PTR [rsi+0x0]
   14000f48f:	add    BYTE PTR [rcx],dl
   14000f491:	outs   dx,DWORD PTR ds:[rsi]
   14000f492:	add    BYTE PTR [rax],al
   14000f494:	(bad)  
   14000f495:	mov    BYTE PTR [rax],0x0
   14000f498:	(bad)  
   14000f499:	outs   dx,DWORD PTR ds:[rsi]
   14000f49a:	add    BYTE PTR [rax],al
   14000f49c:	pop    rbx
   14000f49d:	outs   dx,DWORD PTR ds:[rsi]
   14000f49e:	add    BYTE PTR [rax],al
   14000f4a0:	rol    bh,0x0
   14000f4a3:	add    BYTE PTR [rbx+0x6f],bl
   14000f4a6:	add    BYTE PTR [rax],al
   14000f4a8:	sub    BYTE PTR [rdi+0x0],0x0
   14000f4ac:	rol    bh,0x0
   14000f4af:	add    BYTE PTR [rax-0x29ffff91],dl
   14000f4b5:	outs   dx,DWORD PTR ds:[rsi]
   14000f4b6:	add    BYTE PTR [rax],al
   14000f4b8:	.byte 0x20
   14000f4b9:	.byte 0xbb
	...

Disassembly of section .rsrc:

0000000140010000 <.rsrc>:
	...
   14001000c:	add    BYTE PTR [rax],al
   14001000e:	add    DWORD PTR [rax],eax
   140010010:	adc    BYTE PTR [rax],al
   140010012:	add    BYTE PTR [rax],al
   140010014:	sbb    BYTE PTR [rax],al
   140010016:	add    BYTE PTR [rax+0x0],al
	...
   140010024:	add    BYTE PTR [rax],al
   140010026:	add    DWORD PTR [rax],eax
   140010028:	add    DWORD PTR [rax],eax
   14001002a:	add    BYTE PTR [rax],al
   14001002c:	xor    BYTE PTR [rax],al
   14001002e:	add    BYTE PTR [rax+0x0],al
	...
   14001003c:	add    BYTE PTR [rax],al
   14001003e:	add    DWORD PTR [rax],eax
   140010040:	or     DWORD PTR [rax+rax*1],eax
   140010043:	add    BYTE PTR [rax+0x0],cl
   140010046:	add    BYTE PTR [rax],al
   140010048:	(bad)  
   140010049:	add    BYTE PTR [rcx],al
   14001004b:	add    al,cl
   14001004d:	add    eax,DWORD PTR [rax]
	...
   14001005f:	add    al,cl
   140010061:	add    esi,DWORD PTR [rax+rax*1]
   140010064:	add    BYTE PTR [rax],al
   140010066:	push   rsi
   140010067:	add    BYTE PTR [rbx+0x0],dl
   14001006a:	pop    rdi
   14001006b:	add    BYTE PTR [rsi+0x0],dl
   14001006e:	add    BYTE PTR [r10+0x0],r10b
   140010072:	push   rbx
   140010073:	add    BYTE PTR [rcx+0x0],cl
   140010076:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001007a:	pop    rdi
   14001007b:	add    BYTE PTR [rcx+0x0],cl
   14001007e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140010082:	rex.WRXB add BYTE PTR [r8],r8b
   140010085:	add    BYTE PTR [rax],al
   140010087:	add    BYTE PTR [rbp+0xfeef04],bh
   14001008d:	add    BYTE PTR [rcx],al
   14001008f:	add    BYTE PTR [rax],al
   140010091:	add    BYTE PTR [rdx],cl
   140010093:	add    BYTE PTR [rax],cl
   140010095:	add    BYTE PTR [rax],bpl
   140010098:	add    BYTE PTR [rax],al
   14001009a:	or     al,BYTE PTR [rax]
   14001009c:	or     BYTE PTR [rax+0x0],al
   14001009f:	sub    BYTE PTR [rdi],bh
   1400100a1:	add    BYTE PTR [rax],al
   1400100a3:	add    BYTE PTR [rax],al
   1400100a5:	add    BYTE PTR [rax],al
   1400100a7:	add    BYTE PTR [rax+rax*1],al
   1400100aa:	add    al,0x0
   1400100ac:	add    DWORD PTR [rax],eax
	...
   1400100ba:	add    BYTE PTR [rax],al
   1400100bc:	add    eax,DWORD PTR es:[rax]
   1400100bf:	add    BYTE PTR [rcx],al
   1400100c1:	add    BYTE PTR [rbx+0x0],dl
   1400100c4:	je     0x1400100c6
   1400100c6:	jb     0x1400100c8
   1400100c8:	imul   eax,DWORD PTR [rax],0x67006e
   1400100ce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400100d2:	ins    BYTE PTR es:[rdi],dx
   1400100d3:	add    BYTE PTR [rbp+0x0],ah
   1400100d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400100da:	data16 add BYTE PTR [rdi+0x0],ch
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	add    al,BYTE PTR [rbx]
   1400100e2:	add    BYTE PTR [rax],al
   1400100e4:	add    DWORD PTR [rax],eax
   1400100e6:	xor    BYTE PTR [rax],al
   1400100e8:	xor    al,0x0
   1400100ea:	xor    BYTE PTR [rax],al
   1400100ec:	cmp    DWORD PTR [rax],eax
   1400100ee:	xor    BYTE PTR [rax],al
   1400100f0:	xor    al,0x0
   1400100f2:	rex.X add BYTE PTR [rax],sil
   1400100f5:	add    BYTE PTR [rax],al
   1400100f7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400100fb:	add    BYTE PTR [rcx],al
   1400100fd:	add    BYTE PTR [rbx+0x0],al
   140010100:	outs   dx,DWORD PTR ds:[rsi]
   140010101:	add    BYTE PTR [rbp+0x0],ch
   140010104:	jo     0x140010106
   140010106:	(bad)  
   140010107:	add    BYTE PTR [rsi+0x0],ch
   14001010a:	jns    0x14001010c
   14001010c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010110:	ins    DWORD PTR es:[rdi],dx
   140010111:	add    BYTE PTR [rbp+0x0],ah
   140010114:	add    BYTE PTR [rax],al
   140010116:	add    BYTE PTR [rax],al
   140010118:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001011c:	movsxd eax,DWORD PTR [rax]
   14001011e:	jb     0x140010120
   140010120:	outs   dx,DWORD PTR ds:[rsi]
   140010121:	add    BYTE PTR [rbx+0x0],dh
   140010124:	outs   dx,DWORD PTR ds:[rsi]
   140010125:	add    BYTE PTR [rsi+0x0],ah
   140010128:	je     0x14001012a
   14001012a:	and    BYTE PTR [rax],al
   14001012c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140010130:	jb     0x140010132
   140010132:	jo     0x140010134
   140010134:	outs   dx,DWORD PTR ds:[rsi]
   140010135:	add    BYTE PTR [rdx+0x0],dh
   140010138:	(bad)  
   140010139:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001013d:	add    BYTE PTR [rdi+0x0],ch
   140010140:	outs   dx,BYTE PTR ds:[rsi]
   140010141:	add    BYTE PTR [rax],al
   140010143:	add    BYTE PTR [rax+rax*1+0x1002e],al
   14001014a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001014e:	ins    BYTE PTR es:[rdi],dx
   14001014f:	add    BYTE PTR [rbp+0x0],ah
   140010152:	add    BYTE PTR [rbp+0x0],r12b
   140010156:	jae    0x140010158
   140010158:	movsxd eax,DWORD PTR [rax]
   14001015a:	jb     0x14001015c
   14001015c:	imul   eax,DWORD PTR [rax],0x740070
   140010162:	imul   eax,DWORD PTR [rax],0x6e006f
   140010168:	add    BYTE PTR [rax],al
   14001016a:	add    BYTE PTR [rax],al
   14001016c:	rex.W add BYTE PTR [rdi+0x0],bpl
   140010170:	jae    0x140010172
   140010172:	je     0x140010174
   140010174:	and    BYTE PTR [rax],al
   140010176:	push   rax
   140010177:	add    BYTE PTR [rdx+0x0],dh
   14001017a:	outs   dx,DWORD PTR ds:[rsi]
   14001017b:	add    BYTE PTR [rbx+0x0],ah
   14001017e:	add    BYTE PTR gs:[rbx+0x0],dh
   140010182:	jae    0x140010184
   140010184:	and    BYTE PTR [rax],al
   140010186:	data16 add BYTE PTR [rdi+0x0],ch
   14001018a:	jb     0x14001018c
   14001018c:	and    BYTE PTR [rax],al
   14001018e:	push   rax
   14001018f:	add    BYTE PTR [rbp+0x0],dh
   140010192:	jae    0x140010194
   140010194:	push   0x52002000
   140010199:	add    BYTE PTR [rdi+0x0],ch
   14001019c:	jne    0x14001019e
   14001019e:	je     0x1400101a0
   1400101a0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400101a4:	and    BYTE PTR [rax],al
   1400101a6:	add    BYTE PTR [r8+r8*1+0x69],bpl
   1400101ab:	add    BYTE PTR [rbp+0x0],ah
   1400101ae:	outs   dx,BYTE PTR ds:[rsi]
   1400101af:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400101b3:	add    BYTE PTR [rdi+0x0],ch
   1400101b6:	data16 add BYTE PTR [rax],ah
   1400101b9:	add    BYTE PTR [rdi+0x0],cl
   1400101bc:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1400101c0:	sub    eax,0x4d004400
   1400101c5:	add    BYTE PTR [rax],al
   1400101c7:	add    BYTE PTR [rsi+0x0],ch
   1400101ca:	(bad)  
   1400101cb:	add    BYTE PTR [rcx],al
   1400101cd:	add    BYTE PTR [rsi+0x0],al
   1400101d0:	imul   eax,DWORD PTR [rax],0x65006c
   1400101d6:	push   rsi
   1400101d7:	add    BYTE PTR [rbp+0x0],ah
   1400101da:	jb     0x1400101dc
   1400101dc:	jae    0x1400101de
   1400101de:	imul   eax,DWORD PTR [rax],0x6e006f
   1400101e4:	add    BYTE PTR [rax],al
   1400101e6:	add    BYTE PTR [rax],al
   1400101e8:	xor    DWORD PTR [rax],eax
   1400101ea:	xor    BYTE PTR [rax],al
   1400101ec:	add    BYTE PTR cs:[rax],dh
   1400101ef:	add    BYTE PTR [rsi],ch
   1400101f1:	add    BYTE PTR [rcx],dh
   1400101f3:	add    BYTE PTR [rax],dh
   1400101f5:	add    BYTE PTR [rdx],dh
   1400101f7:	add    BYTE PTR [rax+rax*1],dh
   1400101fa:	xor    BYTE PTR [rax],al
   1400101fc:	add    BYTE PTR cs:[rcx],dh
   1400101ff:	add    BYTE PTR [rsi],dh
   140010201:	add    BYTE PTR [rbx],dh
   140010203:	add    BYTE PTR [rcx],bh
   140010205:	add    BYTE PTR [rdx],dh
   140010207:	add    BYTE PTR [rax],ah
   140010209:	add    BYTE PTR [rax],ch
   14001020b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001020f:	add    BYTE PTR [rcx],dh
   140010211:	add    BYTE PTR [rdi+0x0],bl
   140010214:	jae    0x140010216
   140010216:	je     0x140010218
   140010218:	xor    DWORD PTR [rax],eax
   14001021a:	add    BYTE PTR cs:[rcx],dh
   14001021d:	add    BYTE PTR [rip+0x37003000],dh        # 0x177013223
   140010223:	add    BYTE PTR [rcx],dh
   140010225:	add    BYTE PTR [rsi],dh
   140010227:	add    BYTE PTR [rip+0x36003100],ch        # 0x17601332d
   14001022d:	add    BYTE PTR [rax],dh
   14001022f:	add    BYTE PTR [rax],bh
   140010231:	add    BYTE PTR [rcx],ch
   140010233:	add    BYTE PTR [rax],al
   140010235:	add    BYTE PTR [rax],al
   140010237:	add    BYTE PTR [rdx],dh
   140010239:	add    BYTE PTR [rcx],cl
   14001023b:	add    BYTE PTR [rcx],al
   14001023d:	add    BYTE PTR [rcx+0x0],cl
   140010240:	outs   dx,BYTE PTR ds:[rsi]
   140010241:	add    BYTE PTR [rax+rax*1+0x65],dh
   140010245:	add    BYTE PTR [rdx+0x0],dh
   140010248:	outs   dx,BYTE PTR ds:[rsi]
   140010249:	add    BYTE PTR [rcx+0x0],ah
   14001024c:	ins    BYTE PTR es:[rdi],dx
   14001024d:	add    BYTE PTR [rsi+0x0],cl
   140010250:	(bad)  
   140010251:	add    BYTE PTR [rbp+0x0],ch
   140010254:	add    BYTE PTR gs:[rax],al
   140010257:	add    BYTE PTR [rdi+0x0],ch
   14001025a:	ins    DWORD PTR es:[rdi],dx
   14001025b:	add    BYTE PTR [rcx+0x0],ah
   14001025e:	add    BYTE PTR fs:[rbp+0x0],ch
   140010262:	jo     0x140010264
   140010264:	jb     0x140010266
   140010266:	movsxd eax,DWORD PTR [rax]
   140010268:	add    BYTE PTR [rax],al
   14001026a:	add    BYTE PTR [rax],al
   14001026c:	add    BYTE PTR [rax],0x2e
   14001026f:	add    BYTE PTR [rcx],al
   140010271:	add    BYTE PTR [rax+rax*1+0x65],cl
   140010275:	add    BYTE PTR [rdi+0x0],ah
   140010278:	(bad)  
   140010279:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001027d:	add    BYTE PTR [rdi+0x0],ch
   140010280:	jo     0x140010282
   140010282:	jns    0x140010284
   140010284:	jb     0x140010286
   140010286:	imul   eax,DWORD PTR [rax],0x680067
   14001028c:	je     0x14001028e
   14001028e:	add    BYTE PTR [rax],al
   140010290:	test   eax,0x4d002000
   140010295:	add    BYTE PTR [rcx+0x0],ch
   140010298:	movsxd eax,DWORD PTR [rax]
   14001029a:	jb     0x14001029c
   14001029c:	outs   dx,DWORD PTR ds:[rsi]
   14001029d:	add    BYTE PTR [rbx+0x0],dh
   1400102a0:	outs   dx,DWORD PTR ds:[rsi]
   1400102a1:	add    BYTE PTR [rsi+0x0],ah
   1400102a4:	je     0x1400102a6
   1400102a6:	and    BYTE PTR [rax],al
   1400102a8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400102ac:	jb     0x1400102ae
   1400102ae:	jo     0x1400102b0
   1400102b0:	outs   dx,DWORD PTR ds:[rsi]
   1400102b1:	add    BYTE PTR [rdx+0x0],dh
   1400102b4:	(bad)  
   1400102b5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400102b9:	add    BYTE PTR [rdi+0x0],ch
   1400102bc:	outs   dx,BYTE PTR ds:[rsi]
   1400102bd:	add    BYTE PTR [rsi],ch
   1400102bf:	add    BYTE PTR [rax],ah
   1400102c1:	add    BYTE PTR [rcx+0x0],al
   1400102c4:	ins    BYTE PTR es:[rdi],dx
   1400102c5:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400102c9:	add    BYTE PTR [rdx+0x0],dh
   1400102cc:	imul   eax,DWORD PTR [rax],0x680067
   1400102d2:	je     0x1400102d4
   1400102d4:	jae    0x1400102d6
   1400102d6:	and    BYTE PTR [rax],al
   1400102d8:	jb     0x1400102da
   1400102da:	add    BYTE PTR gs:[rbx+0x0],dh
   1400102de:	add    BYTE PTR gs:[rdx+0x0],dh
   1400102e2:	jbe    0x1400102e4
   1400102e4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400102e9:	add    BYTE PTR [rax],al
   1400102eb:	add    BYTE PTR [rdx+0x0],al
   1400102ee:	or     eax,0x4f000100
   1400102f3:	add    BYTE PTR [rdx+0x0],dh
   1400102f6:	imul   eax,DWORD PTR [rax],0x690067
   1400102fc:	outs   dx,BYTE PTR ds:[rsi]
   1400102fd:	add    BYTE PTR [rcx+0x0],ah
   140010300:	ins    BYTE PTR es:[rdi],dx
   140010301:	add    BYTE PTR [rsi+0x0],al
   140010304:	imul   eax,DWORD PTR [rax],0x65006c
   14001030a:	outs   dx,BYTE PTR ds:[rsi]
   14001030b:	add    BYTE PTR [rcx+0x0],ah
   14001030e:	ins    DWORD PTR es:[rdi],dx
   14001030f:	add    BYTE PTR [rbp+0x0],ah
   140010312:	add    BYTE PTR [rax],al
   140010314:	outs   dx,DWORD PTR ds:[rsi]
   140010315:	add    BYTE PTR [rbp+0x0],ch
   140010318:	(bad)  
   140010319:	add    BYTE PTR [rax+rax*1+0x6d],ah
   14001031d:	add    BYTE PTR [rax+0x0],dh
   140010320:	jb     0x140010322
   140010322:	movsxd eax,DWORD PTR [rax]
   140010324:	add    BYTE PTR cs:[rbp+0x0],ah
   140010328:	js     0x14001032a
   14001032a:	add    BYTE PTR gs:[rax],al
   14001032d:	add    BYTE PTR [rax],al
   14001032f:	add    BYTE PTR [rdx+0x0],ch
   140010332:	and    eax,0x50000100
   140010337:	add    BYTE PTR [rdx+0x0],dh
   14001033a:	outs   dx,DWORD PTR ds:[rsi]
   14001033b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001033f:	add    BYTE PTR [rbx+0x0],ah
   140010342:	je     0x140010344
   140010344:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010348:	ins    DWORD PTR es:[rdi],dx
   140010349:	add    BYTE PTR [rbp+0x0],ah
   14001034c:	add    BYTE PTR [rax],al
   14001034e:	add    BYTE PTR [rax],al
   140010350:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140010354:	movsxd eax,DWORD PTR [rax]
   140010356:	jb     0x140010358
   140010358:	outs   dx,DWORD PTR ds:[rsi]
   140010359:	add    BYTE PTR [rbx+0x0],dh
   14001035c:	outs   dx,DWORD PTR ds:[rsi]
   14001035d:	add    BYTE PTR [rsi+0x0],ah
   140010360:	je     0x140010362
   140010362:	scas   al,BYTE PTR es:[rdi]
   140010363:	add    BYTE PTR [rax],ah
   140010365:	add    BYTE PTR [rdi+0x0],dl
   140010368:	imul   eax,DWORD PTR [rax],0x64006e
   14001036e:	outs   dx,DWORD PTR ds:[rsi]
   14001036f:	add    BYTE PTR [rdi+0x0],dh
   140010372:	jae    0x140010374
   140010374:	scas   al,BYTE PTR es:[rdi]
   140010375:	add    BYTE PTR [rax],ah
   140010377:	add    BYTE PTR [rdi+0x0],cl
   14001037a:	jo     0x14001037c
   14001037c:	add    BYTE PTR gs:[rdx+0x0],dh
   140010380:	(bad)  
   140010381:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010385:	add    BYTE PTR [rsi+0x0],ch
   140010388:	add    BYTE PTR [eax],ah
   14001038b:	add    BYTE PTR [rbx+0x0],dl
   14001038e:	jns    0x140010390
   140010390:	jae    0x140010392
   140010392:	je     0x140010394
   140010394:	add    BYTE PTR gs:[rbp+0x0],ch
   140010398:	add    BYTE PTR [rax],al
   14001039a:	add    BYTE PTR [rax],al
   14001039c:	rex.RX add BYTE PTR [rcx],r10b
   14001039f:	add    BYTE PTR [rcx],al
   1400103a1:	add    BYTE PTR [rax+0x0],dl
   1400103a4:	jb     0x1400103a6
   1400103a6:	outs   dx,DWORD PTR ds:[rsi]
   1400103a7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400103ab:	add    BYTE PTR [rbx+0x0],ah
   1400103ae:	je     0x1400103b0
   1400103b0:	push   rsi
   1400103b1:	add    BYTE PTR [rbp+0x0],ah
   1400103b4:	jb     0x1400103b6
   1400103b6:	jae    0x1400103b8
   1400103b8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400103be:	add    BYTE PTR [rax],al
   1400103c0:	xor    DWORD PTR [rax],eax
   1400103c2:	xor    BYTE PTR [rax],al
   1400103c4:	add    BYTE PTR cs:[rax],dh
   1400103c7:	add    BYTE PTR [rsi],ch
   1400103c9:	add    BYTE PTR [rcx],dh
   1400103cb:	add    BYTE PTR [rax],dh
   1400103cd:	add    BYTE PTR [rdx],dh
   1400103cf:	add    BYTE PTR [rax+rax*1],dh
   1400103d2:	xor    BYTE PTR [rax],al
   1400103d4:	add    BYTE PTR cs:[rcx],dh
   1400103d7:	add    BYTE PTR [rsi],dh
   1400103d9:	add    BYTE PTR [rbx],dh
   1400103db:	add    BYTE PTR [rcx],bh
   1400103dd:	add    BYTE PTR [rdx],dh
   1400103df:	add    BYTE PTR [rax],al
   1400103e1:	add    BYTE PTR [rax],al
   1400103e3:	add    BYTE PTR [rax+rax*1+0x0],al
   1400103e7:	add    BYTE PTR [rcx],al
   1400103e9:	add    BYTE PTR [rsi+0x0],dl
   1400103ec:	(bad)  
   1400103ed:	add    BYTE PTR [rdx+0x0],dh
   1400103f0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400103f4:	ins    BYTE PTR es:[rdi],dx
   1400103f5:	add    BYTE PTR [rbp+0x0],ah
   1400103f8:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400103fc:	data16 add BYTE PTR [rdi+0x0],ch
   140010400:	add    BYTE PTR [rax],al
   140010402:	add    BYTE PTR [rax],al
   140010404:	and    al,0x0
   140010406:	add    al,0x0
   140010408:	add    BYTE PTR [rax],al
   14001040a:	push   rsp
   14001040b:	add    BYTE PTR [rdx+0x0],dh
   14001040e:	(bad)  
   14001040f:	add    BYTE PTR [rsi+0x0],ch
   140010412:	jae    0x140010414
   140010414:	ins    BYTE PTR es:[rdi],dx
   140010415:	add    BYTE PTR [rcx+0x0],ah
   140010418:	je     0x14001041a
   14001041a:	imul   eax,DWORD PTR [rax],0x6e006f
   140010420:	add    BYTE PTR [rax],al
   140010422:	add    BYTE PTR [rax],al
   140010424:	or     DWORD PTR [rax+rsi*4],eax
   140010427:	.byte 0x4

Disassembly of section .reloc:

0000000140011000 <.reloc>:
   140011000:	add    BYTE PTR [rax+0xf40000],al
   140011006:	add    BYTE PTR [rax],al
   140011008:	xor    BYTE PTR [rax+rdi*1+0x50a448a4],ah
   14001100f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011010:	pop    rax
   140011011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011012:	(bad)  
   140011013:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011014:	push   0xffffffff88a470a4
   140011019:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001101a:	nop
   14001101b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001101c:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001101e:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140011020:	js     0x140010fc7
   140011022:	and    BYTE PTR [rbp-0x5a5f5a68],0xa8
   140011029:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001102a:	mov    al,0xa5
   14001102c:	mov    eax,0xc8a5c0a5
   140011031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011032:	shl    BYTE PTR [rbp-0x5a1f5a28],1
   140011038:	call   0x138a700e2
   14001103d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001103e:	add    BYTE PTR [rsi-0x59d759e0],ah
   140011044:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14001104a:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001104c:	js     0x140010ff4
   14001104e:	and    BYTE PTR [rsi-0x596f5978],0x98
   140011055:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011056:	movabs al,ds:0x18a708a6f8a6e8a6
   14001105f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011060:	sub    BYTE PTR [rdi-0x58b758c8],ah
   140011066:	pop    rax
   140011067:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011068:	push   0xffffffff88a778a7
   14001106d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001106e:	cwde   
   14001106f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011070:	test   al,0xa7
   140011072:	mov    eax,0xd8a7c8a7
   140011077:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011078:	call   0x148a90924
   14001107d:	test   al,0x18
   14001107f:	test   al,0x28
   140011081:	test   al,0x38
   140011083:	test   al,0x48
   140011085:	test   al,0x58
   140011087:	test   al,0x68
   140011089:	test   al,0x78
   14001108b:	test   al,0x88
   14001108d:	test   al,0x98
   14001108f:	test   al,0xa8
   140011091:	test   al,0xb8
   140011093:	test   al,0xc8
   140011095:	test   al,0xd8
   140011097:	test   al,0xe8
   140011099:	test   al,0xf8
   14001109b:	test   al,0x8
   14001109d:	test   eax,0xa928a918
   1400110a2:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   1400110a8:	push   0xffffffff88a978a9
   1400110ad:	test   eax,0xa9a8a998
   1400110b2:	mov    eax,0xd8a9c8a9
   1400110b7:	test   eax,0xa9f8a9e8
   1400110bc:	or     BYTE PTR [rdx-0x55d755e8],ch
   1400110c2:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   1400110c8:	push   0xffffffff88aa78aa
   1400110cd:	stos   BYTE PTR es:[rdi],al
   1400110ce:	cwde   
   1400110cf:	stos   BYTE PTR es:[rdi],al
   1400110d0:	test   al,0xaa
   1400110d2:	mov    eax,0xd8aac8aa
   1400110d7:	stos   BYTE PTR es:[rdi],al
   1400110d8:	call   0x148ac0987
   1400110dd:	stos   DWORD PTR es:[rdi],eax
   1400110de:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   1400110e4:	stos   QWORD PTR es:[rdi],rax
   1400110e6:	pop    rax
   1400110e7:	stos   DWORD PTR es:[rdi],eax
   1400110e8:	push   0xffffffffd8ab78ab
   1400110ed:	scas   eax,DWORD PTR es:[rdi]
   1400110ee:	call   0x140b109a2
   1400110f3:	add    BYTE PTR [rax],al
   1400110f5:	nop
   1400110f6:	add    BYTE PTR [rax],al
   1400110f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400110f9:	add    BYTE PTR [rax],al
   1400110fb:	add    BYTE PTR [rax],cl
   1400110fd:	movabs al,ds:0xa048a038a028a018
   140011106:	pop    rax
   140011107:	movabs al,ds:0xa098a088a078a068
   140011110:	test   al,0xa0
   140011112:	mov    eax,0xd8a0c8a0
   140011117:	movabs al,ds:0xa118a108a0f8a0e8
   140011120:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   140011126:	pop    rax
   140011127:	movabs eax,ds:0xa198a188a178a168
   140011130:	test   al,0xa1
   140011132:	mov    eax,0xd8a1c8a1
   140011137:	movabs eax,ds:0xa218a208a1f8a1e8
   140011140:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   140011146:	pop    rax
   140011147:	movabs ds:0xa298a288a278a268,al
   140011150:	test   al,0xa2
   140011152:	mov    eax,0xd8a2c8a2
   140011157:	movabs ds:0xa318a308a2f8a2e8,al
   140011160:	sub    BYTE PTR [rbx-0x5cb75cc8],ah
   140011166:	pop    rax
   140011167:	movabs ds:0xa398a388a378a368,eax
   140011170:	test   al,0xa3
   140011172:	mov    eax,0xd8a3c8a3
   140011177:	movabs ds:0xa418a408a3f8a3e8,eax
   140011180:	sub    BYTE PTR [rax+rdi*1+0x58a448a4],ah
   140011187:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011188:	push   0xffffffff88a478a4
   14001118d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001118e:	cwde   
   14001118f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011190:	test   al,0xa4
   140011192:	shr    BYTE PTR [rcx+0xa9e0],1
   140011198:	add    BYTE PTR [rax+0x100000],dh
   14001119e:	add    BYTE PTR [rax],al
   1400111a0:	sbb    BYTE PTR [rcx-0x5ec75ed0],ah
   1400111a6:	rex movabs eax,ds:0x200000e000
   1400111b0:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   1400111b6:	rex.W movabs al,ds:0xa0d8a0b0a090a078
   1400111c0:	add    BYTE PTR [rcx-0x5ea75ed8],ah
   1400111c6:	.byte 0x80
   1400111c7:	.byte 0xa1
