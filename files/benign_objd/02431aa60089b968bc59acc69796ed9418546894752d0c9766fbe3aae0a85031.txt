
02431aa60089b968bc59acc69796ed9418546894752d0c9766fbe3aae0a85031.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	sub    al,0x2d
   14000100a:	add    BYTE PTR [rax+0x1],al
	...
   14000101d:	add    BYTE PTR [rax],al
   14000101f:	add    BYTE PTR [rsp+rbp*1+0x0],dl
   140001023:	rex add DWORD PTR [rax],eax
   140001026:	add    BYTE PTR [rax],al
   140001028:	shr    BYTE PTR [rdi],1
   14000102a:	add    BYTE PTR [rax+0x1],al
	...
   140001041:	add    BYTE PTR [rax],al
   140001043:	add    BYTE PTR [rdx],ah
   140001045:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140001046:	adc    BYTE PTR [rax+0x0],dl
   140001049:	add    BYTE PTR [rax],al
   14000104b:	add    BYTE PTR [rdx],al
   14000104d:	add    BYTE PTR [rax],al
   14000104f:	add    BYTE PTR [rax+rax*1],ah
   140001052:	add    BYTE PTR [rax],al
   140001054:	mov    al,0x11
   140001056:	add    BYTE PTR [rax],al
   140001058:	mov    al,0x5
   14000105a:	add    BYTE PTR [rax],al
   14000105c:	add    BYTE PTR [rax],al
   14000105e:	add    BYTE PTR [rax],al
   140001060:	(bad)  
   140001061:	add    BYTE PTR [r8+0x1],al
   140001065:	add    BYTE PTR [rax],al
   140001067:	add    BYTE PTR [rax],al
   140001069:	rex.X add BYTE PTR [rax+0x1],al
	...
   14000107d:	add    BYTE PTR [rax],al
   14000107f:	add    BYTE PTR [rax+0x0],dl
   140001082:	jbe    0x140001084
   140001084:	imul   eax,DWORD PTR [rax],0x54
   140001087:	add    BYTE PTR [rbp+0x0],ch
   14000108a:	jo     0x14000108c
   14000108c:	cmp    al,BYTE PTR [rax]
   14000108e:	and    eax,0x38003000
   140001093:	add    BYTE PTR [rax+0x0],bh
   140001096:	sub    eax,0x30002500
   14000109b:	add    BYTE PTR [rax+rax*1],dh
   14000109e:	js     0x1400010a0
   1400010a0:	sub    eax,0x30002500
   1400010a5:	add    BYTE PTR [rax+rax*1],dh
   1400010a8:	js     0x1400010aa
   1400010aa:	sub    eax,0x30002500
   1400010af:	add    BYTE PTR [rdx],dh
   1400010b1:	add    BYTE PTR [rax+0x0],bh
   1400010b4:	and    eax,0x32003000
   1400010b9:	add    BYTE PTR [rax+0x0],bh
   1400010bc:	sub    eax,0x30002500
   1400010c1:	add    BYTE PTR [rdx],dh
   1400010c3:	add    BYTE PTR [rax+0x0],bh
   1400010c6:	and    eax,0x32003000
   1400010cb:	add    BYTE PTR [rax+0x0],bh
   1400010ce:	and    eax,0x32003000
   1400010d3:	add    BYTE PTR [rax+0x0],bh
   1400010d6:	and    eax,0x32003000
   1400010db:	add    BYTE PTR [rax+0x0],bh
   1400010de:	and    eax,0x32003000
   1400010e3:	add    BYTE PTR [rax+0x0],bh
   1400010e6:	and    eax,0x32003000
   1400010eb:	add    BYTE PTR [rax+0x0],bh
   1400010ee:	add    BYTE PTR [rax],al
   1400010f0:	rex.RB push r10
   1400010f2:	push   rdx
   1400010f3:	rex.WRXB push r10
   1400010f5:	cmp    ah,BYTE PTR [rax]
   1400010f7:	rex.RXB
   1400010f8:	gs je  0x140001148
   1400010fb:	outs   dx,DWORD PTR ds:[rsi]
   1400010fc:	fs jne 0x14000116b
   1400010ff:	gs rex.W (bad) 
   140001102:	outs   dx,BYTE PTR ds:[rsi]
   140001103:	fs ins BYTE PTR es:[rdi],dx
   140001105:	sub    BYTE PTR gs:[rcx],ch
   140001108:	and    BYTE PTR [rip+0x25783020],ch        # 0x16578412e
   14000110e:	js     0x14000113e
   140001110:	add    BYTE PTR [rax],al
   140001112:	add    BYTE PTR [rax],al
   140001114:	data16 add BYTE PTR [rax],al
   140001117:	add    BYTE PTR [rax+0x0],dh
   14000111a:	jbe    0x14000111c
   14000111c:	imul   eax,DWORD PTR [rax],0x0
   14000111f:	add    BYTE PTR [rbx+0x0],dh
   140001122:	jo     0x140001124
   140001124:	movsxd eax,DWORD PTR [rax]
   140001126:	add    BYTE PTR [rax],al
   140001128:	jo     0x14000112a
   14000112a:	data16 add BYTE PTR [rax+0x0],bh
   14000112e:	add    BYTE PTR [rax],al
   140001130:	jo     0x140001132
   140001132:	imul   eax,DWORD PTR [rax],0x0
   140001138:	jo     0x14000113a
   14000113a:	outs   dx,DWORD PTR ds:[rsi]
   14000113b:	add    BYTE PTR [rax],al
   14000113d:	add    BYTE PTR [rax],al
   14000113f:	add    BYTE PTR [rax+0x0],dh
	...
   140001196:	add    BYTE PTR [rax],al
   140001198:	adc    BYTE PTR [rcx+0x0],al
   14000119b:	rex add DWORD PTR [rax],eax
	...
   1400011ae:	add    BYTE PTR [rax],al
   1400011b0:	push   rdx
   1400011b1:	push   rbx
   1400011b2:	rex.R push rbx
   1400011b4:	imul   ecx,ebp,0xffffffe3
   1400011b7:	adc    ebx,0x9
   1400011ba:	jmp    0x1400011fd
   1400011bc:	mov    gs,ebx
   1400011be:	xchg   esp,eax
   1400011bf:	int3   
   1400011c0:	movabs ds:0x70000000018a4e6b,eax
   1400011c9:	jbe    0x140001236
   1400011cb:	xor    dh,BYTE PTR [rax+0x66]
   1400011ce:	js     0x1400011fe
   1400011d0:	jo     0x140001236
   1400011d2:	(bad)  
	...
   1400011e7:	add    BYTE PTR [rcx+rcx*4+0x44],cl
   1400011eb:	and    al,0x18
   1400011ed:	mov    QWORD PTR [rsp+0x20],r9
   1400011f2:	push   rbx
   1400011f3:	push   rbp
   1400011f4:	push   rsi
   1400011f5:	push   rdi
   1400011f6:	sub    rsp,0x28
   1400011fa:	xor    ebp,ebp
   1400011fc:	mov    rsi,rcx
   1400011ff:	mov    ebx,ebp
   140001201:	test   rdx,rdx
   140001204:	je     0x14000120f
   140001206:	cmp    rdx,0x7fffffff
   14000120d:	jbe    0x140001214
   14000120f:	mov    ebx,0x80070057
   140001214:	test   ebx,ebx
   140001216:	js     0x14000124a
   140001218:	lea    rdi,[rdx-0x1]
   14000121c:	lea    r9,[rsp+0x68]
   140001221:	mov    ebx,ebp
   140001223:	mov    rdx,rdi
   140001226:	call   QWORD PTR [rip+0x5364]        # 0x140006590
   14000122c:	test   eax,eax
   14000122e:	js     0x14000123f
   140001230:	cdqe   
   140001232:	cmp    rax,rdi
   140001235:	ja     0x14000123f
   140001237:	jne    0x140001252
   140001239:	mov    WORD PTR [rsi+rdi*2],bp
   14000123d:	jmp    0x140001252
   14000123f:	mov    WORD PTR [rsi+rdi*2],bp
   140001243:	mov    ebx,0x8007007a
   140001248:	jmp    0x140001252
   14000124a:	test   rdx,rdx
   14000124d:	je     0x140001252
   14000124f:	mov    WORD PTR [rcx],bp
   140001252:	mov    eax,ebx
   140001254:	add    rsp,0x28
   140001258:	pop    rdi
   140001259:	pop    rsi
   14000125a:	pop    rbp
   14000125b:	pop    rbx
   14000125c:	ret    
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	mov    DWORD PTR [rsp+0x10],edx
   140001268:	mov    r11,rsp
   14000126b:	mov    QWORD PTR [r11+0x18],r8
   14000126f:	mov    QWORD PTR [r11+0x20],r9
   140001273:	push   rbx
   140001274:	push   rdi
   140001275:	sub    rsp,0x838
   14000127c:	mov    rax,QWORD PTR [rip+0x2e8d]        # 0x140004110
   140001283:	xor    rax,rsp
   140001286:	mov    QWORD PTR [rsp+0x820],rax
   14000128e:	mov    rbx,rcx
   140001291:	mov    rcx,QWORD PTR [rip+0x3460]        # 0x1400046f8
   140001298:	lea    r8,[rsp+0x20]
   14000129d:	mov    r9d,0x400
   1400012a3:	lea    rdi,[r11+0x18]
   1400012a7:	call   QWORD PTR [rip+0x5253]        # 0x140006500
   1400012ad:	test   eax,eax
   1400012af:	jle    0x1400012c2
   1400012b1:	lea    rdx,[rsp+0x20]
   1400012b6:	mov    r8,rdi
   1400012b9:	mov    rcx,rbx
   1400012bc:	call   QWORD PTR [rip+0x52de]        # 0x1400065a0
   1400012c2:	mov    rcx,QWORD PTR [rsp+0x820]
   1400012ca:	xor    rcx,rsp
   1400012cd:	call   0x140002f60
   1400012d2:	add    rsp,0x838
   1400012d9:	pop    rdi
   1400012da:	pop    rbx
   1400012db:	ret    
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	int3   
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	mov    rax,rsp
   1400012e7:	mov    QWORD PTR [rax+0x8],rbx
   1400012eb:	mov    QWORD PTR [rax+0x10],rsi
   1400012ef:	mov    QWORD PTR [rax+0x18],rdi
   1400012f3:	push   rbp
   1400012f4:	push   r12
   1400012f6:	push   r13
   1400012f8:	push   r14
   1400012fa:	push   r15
   1400012fc:	lea    rbp,[rax-0x4f]
   140001300:	sub    rsp,0x90
   140001307:	xor    ebx,ebx
   140001309:	xor    r14d,r14d
   14000130c:	xor    edi,edi
   14000130e:	and    QWORD PTR [rbp-0x1],rbx
   140001312:	xor    esi,esi
   140001314:	mov    r15,r9
   140001317:	mov    r11d,r8d
   14000131a:	mov    r10,rdx
   14000131d:	mov    r12,rcx
   140001320:	mov    QWORD PTR [rbp-0x19],r14
   140001324:	mov    QWORD PTR [rbp-0x11],rdi
   140001328:	mov    QWORD PTR [rbp-0x9],rsi
   14000132c:	cmp    r8d,0x18
   140001330:	jae    0x14000133c
   140001332:	mov    ebx,0x8007000b
   140001337:	jmp    0x140001528
   14000133c:	mov    rax,QWORD PTR [rdx]
   14000133f:	mov    r9,QWORD PTR [rdx+0x8]
   140001343:	mov    rdx,QWORD PTR [rdx+0x10]
   140001347:	mov    QWORD PTR [rbp+0x1f],rdx
   14000134b:	mov    QWORD PTR [rbp+0x7],r9
   14000134f:	cmp    eax,0xb0b5f11e
   140001354:	jne    0x1400014ea
   14000135a:	shr    rax,0x20
   14000135e:	test   eax,eax
   140001360:	jne    0x1400014ea
   140001366:	mov    ecx,0x1000
   14000136b:	cmp    edx,ecx
   14000136d:	ja     0x1400014ea
   140001373:	mov    rax,rdx
   140001376:	shr    rax,0x20
   14000137a:	test   eax,eax
   14000137c:	je     0x1400014ea
   140001382:	cmp    eax,ecx
   140001384:	ja     0x1400014ea
   14000138a:	mov    r8d,edx
   14000138d:	lea    rcx,[r8+0x18]
   140001391:	add    rcx,rax
   140001394:	cmp    rcx,r11
   140001397:	ja     0x1400014ea
   14000139d:	add    r10,0x18
   1400013a1:	mov    rax,r9
   1400013a4:	shr    rax,0x20
   1400013a8:	lea    r13,[r8+r10*1]
   1400013ac:	test   eax,eax
   1400013ae:	je     0x14000140e
   1400013b0:	dec    eax
   1400013b2:	je     0x1400014b0
   1400013b8:	dec    eax
   1400013ba:	jne    0x140001332
   1400013c0:	lea    rax,[rbp-0x9]
   1400013c4:	mov    QWORD PTR [rsp+0x40],rax
   1400013c9:	lea    rax,[rbp-0x11]
   1400013cd:	mov    QWORD PTR [rsp+0x38],rax
   1400013d2:	lea    rax,[rbp-0x19]
   1400013d6:	mov    QWORD PTR [rsp+0x30],rax
   1400013db:	mov    DWORD PTR [rsp+0x28],edx
   1400013df:	mov    edx,0x6602
   1400013e4:	mov    r9d,DWORD PTR [rbp+0x77]
   1400013e8:	mov    r8,r15
   1400013eb:	mov    rcx,r12
   1400013ee:	mov    QWORD PTR [rsp+0x20],r10
   1400013f3:	call   0x140002668
   1400013f8:	mov    r14,QWORD PTR [rbp-0x19]
   1400013fc:	mov    rdi,QWORD PTR [rbp-0x11]
   140001400:	mov    rsi,QWORD PTR [rbp-0x9]
   140001404:	mov    ebx,eax
   140001406:	test   eax,eax
   140001408:	js     0x1400014ef
   14000140e:	mov    r15d,DWORD PTR [rbp+0x23]
   140001412:	lea    rax,[rbp-0x1]
   140001416:	mov    r9,r14
   140001419:	mov    QWORD PTR [rsp+0x28],rax
   14000141e:	mov    rdx,r13
   140001421:	mov    rcx,r12
   140001424:	mov    r8d,r15d
   140001427:	mov    DWORD PTR [rsp+0x20],0x1
   14000142f:	call   QWORD PTR [rip+0x4f23]        # 0x140006358
   140001435:	test   eax,eax
   140001437:	jne    0x1400014d9
   14000143d:	test   rdi,rdi
   140001440:	je     0x140001495
   140001442:	lea    rax,[rbp-0x1]
   140001446:	mov    r9,rdi
   140001449:	mov    r8d,r15d
   14000144c:	mov    QWORD PTR [rsp+0x28],rax
   140001451:	mov    rdx,r13
   140001454:	mov    rcx,r12
   140001457:	mov    DWORD PTR [rsp+0x20],0x1
   14000145f:	call   QWORD PTR [rip+0x4ef3]        # 0x140006358
   140001465:	test   eax,eax
   140001467:	jne    0x1400014d9
   140001469:	test   rsi,rsi
   14000146c:	je     0x140001495
   14000146e:	lea    rax,[rbp-0x1]
   140001472:	mov    r9,rsi
   140001475:	mov    r8d,r15d
   140001478:	mov    QWORD PTR [rsp+0x28],rax
   14000147d:	mov    rdx,r13
   140001480:	mov    rcx,r12
   140001483:	mov    DWORD PTR [rsp+0x20],0x1
   14000148b:	call   QWORD PTR [rip+0x4ec7]        # 0x140006358
   140001491:	test   eax,eax
   140001493:	jne    0x1400014d9
   140001495:	and    QWORD PTR [rbp-0x1],0x0
   14000149a:	call   QWORD PTR [rip+0x4f70]        # 0x140006410
   1400014a0:	movzx  ebx,ax
   1400014a3:	or     ebx,0x80070000
   1400014a9:	test   eax,eax
   1400014ab:	cmovle ebx,eax
   1400014ae:	jmp    0x1400014ef
   1400014b0:	lea    rax,[rbp-0x9]
   1400014b4:	mov    QWORD PTR [rsp+0x40],rax
   1400014b9:	lea    rax,[rbp-0x11]
   1400014bd:	mov    QWORD PTR [rsp+0x38],rax
   1400014c2:	lea    rax,[rbp-0x19]
   1400014c6:	mov    QWORD PTR [rsp+0x30],rax
   1400014cb:	mov    DWORD PTR [rsp+0x28],edx
   1400014cf:	mov    edx,0x6801
   1400014d4:	jmp    0x1400013e4
   1400014d9:	mov    rax,QWORD PTR [rbp+0x7f]
   1400014dd:	test   rax,rax
   1400014e0:	je     0x1400014ef
   1400014e2:	mov    rcx,QWORD PTR [rbp+0x7]
   1400014e6:	mov    DWORD PTR [rax],ecx
   1400014e8:	jmp    0x1400014ef
   1400014ea:	mov    ebx,0x8007000b
   1400014ef:	mov    rcx,QWORD PTR [rbp-0x1]
   1400014f3:	test   rcx,rcx
   1400014f6:	je     0x1400014fe
   1400014f8:	call   QWORD PTR [rip+0x4e6a]        # 0x140006368
   1400014fe:	test   rsi,rsi
   140001501:	je     0x14000150c
   140001503:	mov    rcx,rsi
   140001506:	call   QWORD PTR [rip+0x4e5c]        # 0x140006368
   14000150c:	test   rdi,rdi
   14000150f:	je     0x14000151a
   140001511:	mov    rcx,rdi
   140001514:	call   QWORD PTR [rip+0x4e4e]        # 0x140006368
   14000151a:	test   r14,r14
   14000151d:	je     0x140001528
   14000151f:	mov    rcx,r14
   140001522:	call   QWORD PTR [rip+0x4e40]        # 0x140006368
   140001528:	lea    r11,[rsp+0x90]
   140001530:	mov    eax,ebx
   140001532:	mov    rbx,QWORD PTR [r11+0x30]
   140001536:	mov    rsi,QWORD PTR [r11+0x38]
   14000153a:	mov    rdi,QWORD PTR [r11+0x40]
   14000153e:	mov    rsp,r11
   140001541:	pop    r15
   140001543:	pop    r14
   140001545:	pop    r13
   140001547:	pop    r12
   140001549:	pop    rbp
   14000154a:	ret    
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	int3   
   140001551:	int3   
   140001552:	int3   
   140001553:	int3   
   140001554:	mov    rax,rsp
   140001557:	mov    QWORD PTR [rax+0x20],r9
   14000155b:	mov    QWORD PTR [rax+0x18],r8
   14000155f:	mov    DWORD PTR [rax+0x10],edx
   140001562:	mov    QWORD PTR [rax+0x8],rcx
   140001566:	push   rbp
   140001567:	push   rbx
   140001568:	push   rsi
   140001569:	push   rdi
   14000156a:	push   r12
   14000156c:	push   r13
   14000156e:	push   r14
   140001570:	push   r15
   140001572:	mov    rbp,rsp
   140001575:	sub    rsp,0x68
   140001579:	mov    r15d,DWORD PTR [rbp+0x78]
   14000157d:	or     DWORD PTR [rbp-0x30],0xffffffff
   140001581:	xor    r14d,r14d
   140001584:	mov    DWORD PTR [rbp-0x34],0x50415243
   14000158b:	mov    ebx,r14d
   14000158e:	mov    esi,r14d
   140001591:	mov    QWORD PTR [rbp-0x28],r14
   140001595:	mov    DWORD PTR [rbp-0x38],r14d
   140001599:	mov    DWORD PTR [rbp-0x2c],r14d
   14000159d:	cmp    r15d,0x1fffffff
   1400015a4:	jbe    0x1400015b0
   1400015a6:	mov    ebx,0x80070057
   1400015ab:	jmp    0x140001846
   1400015b0:	mov    rcx,QWORD PTR [rbp+0x68]
   1400015b4:	mov    r13,QWORD PTR [rbp+0x70]
   1400015b8:	test   rcx,rcx
   1400015bb:	je     0x1400015e5
   1400015bd:	or     rdx,0xffffffffffffffff
   1400015c1:	inc    rdx
   1400015c4:	cmp    WORD PTR [rcx+rdx*2],r14w
   1400015c9:	jne    0x1400015c1
   1400015cb:	lea    r9,[rbp-0x38]
   1400015cf:	lea    r8,[rbp-0x28]
   1400015d3:	inc    rdx
   1400015d6:	call   0x14000240c
   1400015db:	mov    ebx,eax
   1400015dd:	test   eax,eax
   1400015df:	js     0x1400017cc
   1400015e5:	mov    rdi,r15
   1400015e8:	xor    ecx,ecx
   1400015ea:	shl    rdi,0x3
   1400015ee:	mov    rdx,rdi
   1400015f1:	call   QWORD PTR [rip+0x4e11]        # 0x140006408
   1400015f7:	mov    rsi,rax
   1400015fa:	test   rax,rax
   1400015fd:	jne    0x140001609
   1400015ff:	mov    ebx,0x8007000e
   140001604:	jmp    0x1400017cc
   140001609:	mov    r8,rdi
   14000160c:	xor    edx,edx
   14000160e:	mov    rcx,rax
   140001611:	call   0x1400034ac
   140001616:	mov    edi,r14d
   140001619:	test   r15d,r15d
   14000161c:	je     0x1400017b8
   140001622:	mov    r14,rsi
   140001625:	mov    r12,r13
   140001628:	mov    r9d,DWORD PTR [r12+0x10]
   14000162d:	mov    rdx,QWORD PTR [r12]
   140001631:	mov    eax,edi
   140001633:	lea    rcx,[rsi+rax*8]
   140001637:	xor    r8d,r8d
   14000163a:	mov    DWORD PTR [rsp+0x20],0x8
   140001642:	call   QWORD PTR [rip+0x4cf0]        # 0x140006338
   140001648:	test   eax,eax
   14000164a:	jne    0x140001652
   14000164c:	and    QWORD PTR [r14],0x0
   140001650:	jmp    0x1400016c5
   140001652:	mov    r9,QWORD PTR [rbp-0x28]
   140001656:	mov    DWORD PTR [rbp-0x2c],0x1
   14000165d:	test   r9,r9
   140001660:	jne    0x140001698
   140001662:	mov    rax,QWORD PTR [rbp+0x80]
   140001669:	mov    r8d,DWORD PTR [rbp+0x50]
   14000166d:	mov    rdx,QWORD PTR [rbp+0x48]
   140001671:	mov    rcx,QWORD PTR [r14]
   140001674:	mov    QWORD PTR [rsp+0x28],rax
   140001679:	lea    r9,[rbp-0x34]
   14000167d:	mov    DWORD PTR [rsp+0x20],0x4
   140001685:	call   0x1400012e4
   14000168a:	mov    ebx,eax
   14000168c:	test   eax,eax
   14000168e:	jns    0x140001797
   140001694:	mov    r9,QWORD PTR [rbp-0x28]
   140001698:	mov    rax,QWORD PTR [rbp+0x80]
   14000169f:	mov    r8d,DWORD PTR [rbp+0x50]
   1400016a3:	mov    rdx,QWORD PTR [rbp+0x48]
   1400016a7:	mov    rcx,QWORD PTR [r14]
   1400016aa:	mov    QWORD PTR [rsp+0x28],rax
   1400016af:	mov    eax,DWORD PTR [rbp-0x38]
   1400016b2:	mov    DWORD PTR [rsp+0x20],eax
   1400016b6:	call   0x1400012e4
   1400016bb:	mov    ebx,eax
   1400016bd:	test   eax,eax
   1400016bf:	jns    0x140001797
   1400016c5:	inc    edi
   1400016c7:	add    r12,0x30
   1400016cb:	add    r14,0x8
   1400016cf:	cmp    edi,r15d
   1400016d2:	jb     0x140001628
   1400016d8:	mov    eax,DWORD PTR [rbp-0x2c]
   1400016db:	xor    r14d,r14d
   1400016de:	test   eax,eax
   1400016e0:	je     0x1400017b8
   1400016e6:	mov    rdi,QWORD PTR [rbp-0x28]
   1400016ea:	test   rdi,rdi
   1400016ed:	jne    0x1400017d5
   1400016f3:	mov    rax,QWORD PTR [rbp+0x60]
   1400016f7:	mov    r8,QWORD PTR [rbp+0x58]
   1400016fb:	mov    rcx,QWORD PTR [rip+0x2ff6]        # 0x1400046f8
   140001702:	mov    QWORD PTR [rbp-0x20],rax
   140001706:	lea    rax,[rbp-0x28]
   14000170a:	lea    r9,[rip+0xb4b]        # 0x14000225c
   140001711:	mov    QWORD PTR [rbp-0x18],rax
   140001715:	lea    rax,[rbp-0x38]
   140001719:	mov    edx,0x212
   14000171e:	mov    QWORD PTR [rbp-0x10],rax
   140001722:	lea    rax,[rbp-0x20]
   140001726:	mov    QWORD PTR [rbp-0x28],r14
   14000172a:	mov    QWORD PTR [rsp+0x20],rax
   14000172f:	mov    DWORD PTR [rbp-0x38],r14d
   140001733:	call   QWORD PTR [rip+0x4da7]        # 0x1400064e0
   140001739:	mov    rbx,rax
   14000173c:	test   eax,eax
   14000173e:	js     0x1400017cc
   140001744:	mov    r9,QWORD PTR [rbp-0x28]
   140001748:	test   r9,r9
   14000174b:	jne    0x140001757
   14000174d:	mov    ebx,0x80070056
   140001752:	jmp    0x1400017e6
   140001757:	mov    edi,r14d
   14000175a:	mov    r14,rsi
   14000175d:	mov    rax,QWORD PTR [rbp+0x80]
   140001764:	mov    r8d,DWORD PTR [rbp+0x50]
   140001768:	mov    rdx,QWORD PTR [rbp+0x48]
   14000176c:	mov    rcx,QWORD PTR [r14]
   14000176f:	mov    QWORD PTR [rsp+0x28],rax
   140001774:	mov    eax,DWORD PTR [rbp-0x38]
   140001777:	mov    DWORD PTR [rsp+0x20],eax
   14000177b:	call   0x1400012e4
   140001780:	mov    ebx,eax
   140001782:	test   eax,eax
   140001784:	jns    0x140001797
   140001786:	inc    edi
   140001788:	add    r14,0x8
   14000178c:	cmp    edi,r15d
   14000178f:	jae    0x1400017b3
   140001791:	mov    r9,QWORD PTR [rbp-0x28]
   140001795:	jmp    0x14000175d
   140001797:	mov    rax,QWORD PTR [rbp+0x88]
   14000179e:	mov    DWORD PTR [rbp-0x30],edi
   1400017a1:	mov    DWORD PTR [rax],edi
   1400017a3:	mov    eax,edi
   1400017a5:	mov    rcx,QWORD PTR [rsi+rax*8]
   1400017a9:	mov    rax,QWORD PTR [rbp+0x90]
   1400017b0:	mov    QWORD PTR [rax],rcx
   1400017b3:	xor    r14d,r14d
   1400017b6:	jmp    0x1400017cc
   1400017b8:	call   QWORD PTR [rip+0x4c52]        # 0x140006410
   1400017be:	movzx  ebx,ax
   1400017c1:	or     ebx,0x80070000
   1400017c7:	test   eax,eax
   1400017c9:	cmovle ebx,eax
   1400017cc:	mov    rdi,QWORD PTR [rbp-0x28]
   1400017d0:	test   rdi,rdi
   1400017d3:	je     0x1400017e6
   1400017d5:	mov    ecx,DWORD PTR [rbp-0x38]
   1400017d8:	xor    eax,eax
   1400017da:	rep stos BYTE PTR es:[rdi],al
   1400017dc:	mov    rcx,QWORD PTR [rbp-0x28]
   1400017e0:	call   QWORD PTR [rip+0x4c0a]        # 0x1400063f0
   1400017e6:	test   rsi,rsi
   1400017e9:	je     0x140001846
   1400017eb:	mov    edi,r14d
   1400017ee:	test   r15d,r15d
   1400017f1:	je     0x14000183d
   1400017f3:	mov    r12d,DWORD PTR [rbp-0x30]
   1400017f7:	mov    r14,rsi
   1400017fa:	cmp    edi,r12d
   1400017fd:	je     0x14000182e
   1400017ff:	mov    rcx,QWORD PTR [r14]
   140001802:	test   rcx,rcx
   140001805:	je     0x14000180f
   140001807:	xor    edx,edx
   140001809:	call   QWORD PTR [rip+0x4b39]        # 0x140006348
   14000180f:	mov    r9d,DWORD PTR [r13+0x10]
   140001813:	mov    rdx,QWORD PTR [r13+0x0]
   140001817:	mov    eax,edi
   140001819:	lea    rcx,[rsi+rax*8]
   14000181d:	xor    r8d,r8d
   140001820:	mov    DWORD PTR [rsp+0x20],0x10
   140001828:	call   QWORD PTR [rip+0x4b0a]        # 0x140006338
   14000182e:	inc    edi
   140001830:	add    r14,0x8
   140001834:	add    r13,0x30
   140001838:	cmp    edi,r15d
   14000183b:	jb     0x1400017fa
   14000183d:	mov    rcx,rsi
   140001840:	call   QWORD PTR [rip+0x4baa]        # 0x1400063f0
   140001846:	mov    eax,ebx
   140001848:	add    rsp,0x68
   14000184c:	pop    r15
   14000184e:	pop    r14
   140001850:	pop    r13
   140001852:	pop    r12
   140001854:	pop    rdi
   140001855:	pop    rsi
   140001856:	pop    rbx
   140001857:	pop    rbp
   140001858:	ret    
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	rex push rbp
   140001862:	push   rbx
   140001863:	push   rsi
   140001864:	push   rdi
   140001865:	push   r12
   140001867:	push   r13
   140001869:	push   r14
   14000186b:	push   r15
   14000186d:	lea    rbp,[rsp-0x168]
   140001875:	sub    rsp,0x268
   14000187c:	mov    rax,QWORD PTR [rip+0x288d]        # 0x140004110
   140001883:	xor    rax,rsp
   140001886:	mov    QWORD PTR [rbp+0x150],rax
   14000188d:	mov    rax,QWORD PTR [rbp+0x1d0]
   140001894:	xor    edi,edi
   140001896:	mov    QWORD PTR [rbp-0x68],r8
   14000189a:	mov    r13,rcx
   14000189d:	mov    QWORD PTR [rbp-0x50],rdx
   1400018a1:	lea    r8d,[rdi+0x60]
   1400018a5:	lea    rcx,[rbp-0x40]
   1400018a9:	xor    edx,edx
   1400018ab:	mov    QWORD PTR [rbp-0x58],r9
   1400018af:	mov    QWORD PTR [rbp-0x60],rax
   1400018b3:	lea    r14d,[rdi+0x2]
   1400018b7:	mov    DWORD PTR [rsp+0x68],edi
   1400018bb:	mov    DWORD PTR [rsp+0x58],edi
   1400018bf:	mov    QWORD PTR [rbp-0x78],rdi
   1400018c3:	mov    QWORD PTR [rbp-0x80],rdi
   1400018c7:	mov    QWORD PTR [rbp-0x70],rdi
   1400018cb:	mov    r12d,edi
   1400018ce:	mov    r15d,edi
   1400018d1:	mov    QWORD PTR [rsp+0x60],rdi
   1400018d6:	mov    QWORD PTR [rsp+0x50],rdi
   1400018db:	call   0x1400034ac
   1400018e0:	lea    eax,[rdi+0x1]
   1400018e3:	mov    QWORD PTR [rsp+0x30],rdi
   1400018e8:	xor    r9d,r9d
   1400018eb:	mov    rcx,r13
   1400018ee:	mov    r8d,eax
   1400018f1:	mov    edx,eax
   1400018f3:	mov    DWORD PTR [rsp+0x28],0x8000080
   1400018fb:	mov    DWORD PTR [rsp+0x20],0x3
   140001903:	call   QWORD PTR [rip+0x4b0f]        # 0x140006418
   140001909:	mov    QWORD PTR [rsp+0x78],rax
   14000190e:	cmp    rax,0xffffffffffffffff
   140001912:	jne    0x14000192d
   140001914:	call   QWORD PTR [rip+0x4af6]        # 0x140006410
   14000191a:	movzx  ebx,ax
   14000191d:	or     ebx,0x80070000
   140001923:	test   eax,eax
   140001925:	cmovle ebx,eax
   140001928:	jmp    0x140001e56
   14000192d:	xor    edx,edx
   14000192f:	mov    rcx,rax
   140001932:	call   QWORD PTR [rip+0x4b20]        # 0x140006458
   140001938:	mov    DWORD PTR [rsp+0x68],eax
   14000193c:	test   eax,eax
   14000193e:	je     0x140001e44
   140001944:	cmp    eax,0xffffffff
   140001947:	je     0x140001e44
   14000194d:	mov    edx,eax
   14000194f:	xor    ecx,ecx
   140001951:	call   QWORD PTR [rip+0x4ab1]        # 0x140006408
   140001957:	mov    QWORD PTR [rbp-0x70],rax
   14000195b:	test   rax,rax
   14000195e:	jne    0x140001967
   140001960:	mov    ebx,0x8007000e
   140001965:	jmp    0x140001928
   140001967:	mov    ebx,edi
   140001969:	mov    rdi,rax
   14000196c:	mov    eax,DWORD PTR [rsp+0x68]
   140001970:	xor    edx,edx
   140001972:	mov    esi,0x80070000
   140001977:	mov    r15d,eax
   14000197a:	test   eax,eax
   14000197c:	je     0x1400019c8
   14000197e:	mov    rcx,QWORD PTR [rsp+0x78]
   140001983:	mov    QWORD PTR [rsp+0x20],rdx
   140001988:	lea    r9,[rsp+0x70]
   14000198d:	mov    r8d,r15d
   140001990:	mov    rdx,rdi
   140001993:	call   QWORD PTR [rip+0x4a87]        # 0x140006420
   140001999:	xor    edx,edx
   14000199b:	test   eax,eax
   14000199d:	je     0x1400019b8
   14000199f:	mov    ecx,DWORD PTR [rsp+0x70]
   1400019a3:	test   ecx,ecx
   1400019a5:	je     0x1400019b1
   1400019a7:	add    rdi,rcx
   1400019aa:	sub    r15d,ecx
   1400019ad:	jne    0x14000197e
   1400019af:	jmp    0x1400019c8
   1400019b1:	mov    ebx,0x8007001e
   1400019b6:	jmp    0x1400019c8
   1400019b8:	call   QWORD PTR [rip+0x4a52]        # 0x140006410
   1400019be:	movzx  ebx,ax
   1400019c1:	or     ebx,esi
   1400019c3:	test   eax,eax
   1400019c5:	cmovle ebx,eax
   1400019c8:	mov    rcx,QWORD PTR [rsp+0x78]
   1400019cd:	call   QWORD PTR [rip+0x4a15]        # 0x1400063e8
   1400019d3:	or     rax,0xffffffffffffffff
   1400019d7:	xor    r15d,r15d
   1400019da:	mov    QWORD PTR [rsp+0x78],rax
   1400019df:	test   ebx,ebx
   1400019e1:	js     0x140001e4e
   1400019e7:	inc    rax
   1400019ea:	cmp    WORD PTR [r13+rax*2+0x0],r15w
   1400019f0:	jne    0x1400019e7
   1400019f2:	lea    rcx,[rax*2+0x0]
   1400019fa:	add    rcx,r13
   1400019fd:	jmp    0x140001a0e
   1400019ff:	cmp    WORD PTR [rcx],0x5c
   140001a03:	je     0x140001a13
   140001a05:	cmp    WORD PTR [rcx],0x3a
   140001a09:	je     0x140001a13
   140001a0b:	sub    rcx,r14
   140001a0e:	cmp    rcx,r13
   140001a11:	ja     0x1400019ff
   140001a13:	lea    rax,[rbp+0xd0]
   140001a1a:	mov    edi,0x40
   140001a1f:	lea    rdx,[rbp+0xd0]
   140001a26:	sub    rcx,rax
   140001a29:	lea    rax,[rdi+0x7fffffbe]
   140001a30:	test   rax,rax
   140001a33:	je     0x140001a49
   140001a35:	movzx  eax,WORD PTR [rcx+rdx*1]
   140001a39:	test   ax,ax
   140001a3c:	je     0x140001a49
   140001a3e:	mov    WORD PTR [rdx],ax
   140001a41:	add    rdx,r14
   140001a44:	dec    rdi
   140001a47:	jne    0x140001a29
   140001a49:	test   rdi,rdi
   140001a4c:	jne    0x140001a51
   140001a4e:	sub    rdx,r14
   140001a51:	mov    rax,QWORD PTR [rbp-0x50]
   140001a55:	xor    r9d,r9d
   140001a58:	mov    WORD PTR [rdx],r15w
   140001a5c:	lea    ecx,[r9+0x8]
   140001a60:	xor    r8d,r8d
   140001a63:	mov    edx,0x10001
   140001a68:	mov    QWORD PTR [rsp+0x20],rax
   140001a6d:	call   QWORD PTR [rip+0x491d]        # 0x140006390
   140001a73:	mov    r12,rax
   140001a76:	test   rax,rax
   140001a79:	jne    0x140001a93
   140001a7b:	call   QWORD PTR [rip+0x498f]        # 0x140006410
   140001a81:	mov    rdi,r15
   140001a84:	movzx  ebx,ax
   140001a87:	or     ebx,esi
   140001a89:	test   eax,eax
   140001a8b:	cmovle ebx,eax
   140001a8e:	jmp    0x140001e51
   140001a93:	xor    edx,edx
   140001a95:	mov    rcx,rax
   140001a98:	call   QWORD PTR [rip+0x490a]        # 0x1400063a8
   140001a9e:	mov    rdi,rax
   140001aa1:	test   rax,rax
   140001aa4:	je     0x140001e38
   140001aaa:	mov    r15,QWORD PTR [rbp-0x10]
   140001aae:	mov    rbx,QWORD PTR [rbp-0x40]
   140001ab2:	mov    esi,DWORD PTR [rsp+0x58]
   140001ab6:	xor    r13d,r13d
   140001ab9:	mov    rcx,QWORD PTR [rdi+0x18]
   140001abd:	mov    rcx,QWORD PTR [rcx+0x60]
   140001ac1:	call   QWORD PTR [rip+0x48c1]        # 0x140006388
   140001ac7:	test   eax,eax
   140001ac9:	je     0x140001b22
   140001acb:	and    eax,0x1e00
   140001ad0:	cmp    eax,0x400
   140001ad5:	jne    0x140001af8
   140001ad7:	test   rbx,rbx
   140001ada:	jne    0x140001b22
   140001adc:	lea    rcx,[rbp+0x20]
   140001ae0:	call   0x140002598
   140001ae5:	mov    eax,0x1
   140001aea:	lea    rbx,[rbp+0x20]
   140001aee:	mov    DWORD PTR [rbp-0x30],eax
   140001af1:	add    esi,eax
   140001af3:	mov    r14d,r13d
   140001af6:	jmp    0x140001b22
   140001af8:	cmp    eax,0x200
   140001afd:	jne    0x140001b22
   140001aff:	test   r15,r15
   140001b02:	jne    0x140001b22
   140001b04:	lea    rcx,[rbp+0x78]
   140001b08:	call   0x140002598
   140001b0d:	mov    eax,0x1
   140001b12:	lea    r15,[rbp+0x78]
   140001b16:	add    esi,eax
   140001b18:	cmp    r14d,eax
   140001b1b:	mov    DWORD PTR [rbp+0x0],eax
   140001b1e:	cmova  r14d,eax
   140001b22:	mov    rdx,rdi
   140001b25:	mov    rcx,r12
   140001b28:	call   QWORD PTR [rip+0x487a]        # 0x1400063a8
   140001b2e:	mov    rdi,rax
   140001b31:	test   rax,rax
   140001b34:	jne    0x140001ab9
   140001b36:	mov    DWORD PTR [rsp+0x58],esi
   140001b3a:	mov    QWORD PTR [rbp-0x40],rbx
   140001b3e:	mov    QWORD PTR [rbp-0x10],r15
   140001b42:	mov    esi,0x80070000
   140001b47:	cmp    r14d,0x2
   140001b4b:	jae    0x140001e38
   140001b51:	mov    ebx,DWORD PTR [rsp+0x58]
   140001b55:	cmp    ebx,0x2
   140001b58:	ja     0x140001e38
   140001b5e:	lea    eax,[rbx+r14*1]
   140001b62:	cmp    eax,0x2
   140001b65:	ja     0x140001e38
   140001b6b:	mov    eax,r14d
   140001b6e:	lea    rdi,[rbp-0x40]
   140001b72:	lea    rcx,[rax+rax*2]
   140001b76:	shl    rcx,0x4
   140001b7a:	add    rdi,rcx
   140001b7d:	call   QWORD PTR [rip+0x48ad]        # 0x140006430
   140001b83:	mov    edx,DWORD PTR [rsp+0x68]
   140001b87:	mov    rcx,QWORD PTR [rbp-0x70]
   140001b8b:	mov    r8,rax
   140001b8e:	lea    rax,[rsp+0x60]
   140001b93:	mov    QWORD PTR [rsp+0x48],rax
   140001b98:	lea    rax,[rsp+0x58]
   140001b9d:	lea    r9,[rbp+0xd0]
   140001ba4:	mov    QWORD PTR [rsp+0x40],rax
   140001ba9:	lea    rax,[rsp+0x70]
   140001bae:	mov    QWORD PTR [rsp+0x38],rax
   140001bb3:	mov    rax,QWORD PTR [rbp-0x68]
   140001bb7:	mov    DWORD PTR [rsp+0x30],ebx
   140001bbb:	mov    QWORD PTR [rsp+0x28],rdi
   140001bc0:	mov    QWORD PTR [rsp+0x20],rax
   140001bc5:	call   0x140001554
   140001bca:	mov    r15,QWORD PTR [rsp+0x60]
   140001bcf:	xor    edi,edi
   140001bd1:	mov    ebx,eax
   140001bd3:	test   eax,eax
   140001bd5:	js     0x140001928
   140001bdb:	mov    r13d,DWORD PTR [rsp+0x70]
   140001be0:	lea    rax,[rsp+0x6c]
   140001be5:	mov    r14d,0x10001
   140001beb:	xor    r9d,r9d
   140001bee:	mov    r8d,r14d
   140001bf1:	mov    rcx,r15
   140001bf4:	mov    edx,r13d
   140001bf7:	mov    DWORD PTR [rsp+0x6c],edi
   140001bfb:	mov    QWORD PTR [rsp+0x20],rax
   140001c00:	call   QWORD PTR [rip+0x47c2]        # 0x1400063c8
   140001c06:	test   eax,eax
   140001c08:	jne    0x140001c1a
   140001c0a:	call   QWORD PTR [rip+0x4800]        # 0x140006410
   140001c10:	movzx  ebx,ax
   140001c13:	or     ebx,esi
   140001c15:	jmp    0x140001923
   140001c1a:	mov    edx,DWORD PTR [rsp+0x6c]
   140001c1e:	xor    ecx,ecx
   140001c20:	call   QWORD PTR [rip+0x47e2]        # 0x140006408
   140001c26:	mov    QWORD PTR [rbp-0x78],rax
   140001c2a:	test   rax,rax
   140001c2d:	je     0x140001960
   140001c33:	lea    rcx,[rsp+0x6c]
   140001c38:	mov    r9,rax
   140001c3b:	mov    r8d,r14d
   140001c3e:	mov    QWORD PTR [rsp+0x20],rcx
   140001c43:	mov    rcx,r15
   140001c46:	mov    edx,r13d
   140001c49:	call   QWORD PTR [rip+0x4779]        # 0x1400063c8
   140001c4f:	test   eax,eax
   140001c51:	je     0x140001c0a
   140001c53:	xor    edx,edx
   140001c55:	mov    rcx,r12
   140001c58:	call   QWORD PTR [rip+0x474a]        # 0x1400063a8
   140001c5e:	mov    r14,rax
   140001c61:	test   rax,rax
   140001c64:	je     0x140001e31
   140001c6a:	mov    rdx,QWORD PTR [r14+0x18]
   140001c6e:	mov    r8,QWORD PTR [rbp-0x78]
   140001c72:	mov    ecx,0x10001
   140001c77:	add    rdx,0x60
   140001c7b:	call   QWORD PTR [rip+0x472f]        # 0x1400063b0
   140001c81:	xor    ecx,ecx
   140001c83:	test   eax,eax
   140001c85:	je     0x140001dd2
   140001c8b:	test   rdi,rdi
   140001c8e:	jne    0x140001dbb
   140001c94:	lea    edx,[rcx+0x4]
   140001c97:	mov    DWORD PTR [rsp+0x5c],ecx
   140001c9b:	mov    DWORD PTR [rsp+0x20],ecx
   140001c9f:	lea    r9,[rsp+0x5c]
   140001ca4:	xor    r8d,r8d
   140001ca7:	mov    rcx,r15
   140001caa:	call   QWORD PTR [rip+0x46a0]        # 0x140006350
   140001cb0:	xor    ecx,ecx
   140001cb2:	test   eax,eax
   140001cb4:	je     0x140001e1f
   140001cba:	mov    edx,DWORD PTR [rsp+0x5c]
   140001cbe:	call   QWORD PTR [rip+0x4744]        # 0x140006408
   140001cc4:	xor    ecx,ecx
   140001cc6:	mov    QWORD PTR [rbp-0x80],rax
   140001cca:	test   rax,rax
   140001ccd:	je     0x140001e18
   140001cd3:	mov    DWORD PTR [rsp+0x20],ecx
   140001cd7:	lea    r9,[rsp+0x5c]
   140001cdc:	lea    edx,[rdi+0x4]
   140001cdf:	mov    r8,rax
   140001ce2:	mov    rcx,r15
   140001ce5:	call   QWORD PTR [rip+0x4665]        # 0x140006350
   140001ceb:	xor    ecx,ecx
   140001ced:	test   eax,eax
   140001cef:	je     0x140001e1f
   140001cf5:	mov    r9d,DWORD PTR [rsp+0x5c]
   140001cfa:	mov    r8,QWORD PTR [rbp-0x80]
   140001cfe:	mov    DWORD PTR [rsp+0x28],ecx
   140001d02:	xor    edx,edx
   140001d04:	mov    QWORD PTR [rsp+0x20],rcx
   140001d09:	call   QWORD PTR [rip+0x4751]        # 0x140006460
   140001d0f:	movsxd r15,eax
   140001d12:	test   r15d,r15d
   140001d15:	jle    0x140001dff
   140001d1b:	lea    rdx,[r15*2+0x88]
   140001d23:	xor    ecx,ecx
   140001d25:	call   QWORD PTR [rip+0x46dd]        # 0x140006408
   140001d2b:	mov    rdi,rax
   140001d2e:	mov    QWORD PTR [rsp+0x50],rax
   140001d33:	test   rax,rax
   140001d36:	je     0x140001e11
   140001d3c:	xor    edx,edx
   140001d3e:	mov    rcx,rax
   140001d41:	lea    r8d,[rdx+0x30]
   140001d45:	call   0x1400034ac
   140001d4a:	mov    r8,rdi
   140001d4d:	lea    rcx,[rdi+0x30]
   140001d51:	lea    rdx,[rdi+0x88]
   140001d58:	mov    QWORD PTR [rdi],rcx
   140001d5b:	mov    DWORD PTR [r8+0x28],r13d
   140001d5f:	mov    QWORD PTR [rdi+0x8],rdx
   140001d63:	mov    edi,DWORD PTR [rsp+0x58]
   140001d67:	lea    rdx,[rdi+rdi*2]
   140001d6b:	add    rdx,rdx
   140001d6e:	imul   rdi,rdi,0x58
   140001d72:	mov    eax,DWORD PTR [rbp+rdx*8-0x30]
   140001d76:	lea    rdx,[rbp+0x20]
   140001d7a:	mov    DWORD PTR [r8+0x10],eax
   140001d7e:	mov    r8d,0x58
   140001d84:	add    rdx,rdi
   140001d87:	call   0x1400034a0
   140001d8c:	mov    rdi,QWORD PTR [rsp+0x50]
   140001d91:	mov    r9d,DWORD PTR [rsp+0x5c]
   140001d96:	mov    rax,QWORD PTR [rdi+0x8]
   140001d9a:	mov    r8,QWORD PTR [rbp-0x80]
   140001d9e:	xor    edx,edx
   140001da0:	xor    ecx,ecx
   140001da2:	mov    DWORD PTR [rsp+0x28],r15d
   140001da7:	mov    QWORD PTR [rsp+0x20],rax
   140001dac:	call   QWORD PTR [rip+0x46ae]        # 0x140006460
   140001db2:	test   eax,eax
   140001db4:	jle    0x140001dff
   140001db6:	mov    r15,QWORD PTR [rsp+0x60]
   140001dbb:	xor    r8d,r8d
   140001dbe:	mov    r9,rdi
   140001dc1:	mov    rcx,r14
   140001dc4:	lea    edx,[r8+0x2]
   140001dc8:	call   QWORD PTR [rip+0x45ea]        # 0x1400063b8
   140001dce:	test   eax,eax
   140001dd0:	je     0x140001e1f
   140001dd2:	mov    rdx,r14
   140001dd5:	mov    rcx,r12
   140001dd8:	call   QWORD PTR [rip+0x45ca]        # 0x1400063a8
   140001dde:	mov    r14,rax
   140001de1:	test   rax,rax
   140001de4:	jne    0x140001c6a
   140001dea:	test   rdi,rdi
   140001ded:	je     0x140001e31
   140001def:	mov    rax,QWORD PTR [rbp-0x58]
   140001df3:	mov    QWORD PTR [rax],r12
   140001df6:	mov    rax,QWORD PTR [rbp-0x60]
   140001dfa:	mov    QWORD PTR [rax],rdi
   140001dfd:	jmp    0x140001e6f
   140001dff:	call   QWORD PTR [rip+0x460b]        # 0x140006410
   140001e05:	movzx  ebx,ax
   140001e08:	or     ebx,esi
   140001e0a:	test   eax,eax
   140001e0c:	cmovle ebx,eax
   140001e0f:	jmp    0x140001e51
   140001e11:	mov    ebx,0x8007000e
   140001e16:	jmp    0x140001e51
   140001e18:	mov    ebx,0x8007000e
   140001e1d:	jmp    0x140001e56
   140001e1f:	call   QWORD PTR [rip+0x45eb]        # 0x140006410
   140001e25:	movzx  ebx,ax
   140001e28:	or     ebx,esi
   140001e2a:	test   eax,eax
   140001e2c:	cmovle ebx,eax
   140001e2f:	jmp    0x140001e56
   140001e31:	mov    ebx,0x80070490
   140001e36:	jmp    0x140001e56
   140001e38:	mov    rdi,QWORD PTR [rsp+0x50]
   140001e3d:	mov    ebx,0x80070490
   140001e42:	jmp    0x140001e51
   140001e44:	mov    ebx,0x80070018
   140001e49:	jmp    0x140001928
   140001e4e:	mov    rdi,r12
   140001e51:	mov    r15,QWORD PTR [rsp+0x60]
   140001e56:	mov    rcx,rdi
   140001e59:	call   QWORD PTR [rip+0x4591]        # 0x1400063f0
   140001e5f:	test   r12,r12
   140001e62:	je     0x140001e6f
   140001e64:	xor    edx,edx
   140001e66:	mov    rcx,r12
   140001e69:	call   QWORD PTR [rip+0x4531]        # 0x1400063a0
   140001e6f:	mov    rcx,QWORD PTR [rbp-0x80]
   140001e73:	call   QWORD PTR [rip+0x4577]        # 0x1400063f0
   140001e79:	mov    rcx,QWORD PTR [rbp-0x78]
   140001e7d:	call   QWORD PTR [rip+0x456d]        # 0x1400063f0
   140001e83:	test   r15,r15
   140001e86:	je     0x140001e93
   140001e88:	xor    edx,edx
   140001e8a:	mov    rcx,r15
   140001e8d:	call   QWORD PTR [rip+0x44b5]        # 0x140006348
   140001e93:	mov    rdx,QWORD PTR [rbp-0x70]
   140001e97:	test   rdx,rdx
   140001e9a:	je     0x140001eb0
   140001e9c:	mov    ecx,DWORD PTR [rsp+0x68]
   140001ea0:	mov    rdi,rdx
   140001ea3:	xor    eax,eax
   140001ea5:	rep stos BYTE PTR es:[rdi],al
   140001ea7:	mov    rcx,rdx
   140001eaa:	call   QWORD PTR [rip+0x4540]        # 0x1400063f0
   140001eb0:	mov    rax,QWORD PTR [rsp+0x78]
   140001eb5:	cmp    rax,0xffffffffffffffff
   140001eb9:	je     0x140001ec4
   140001ebb:	mov    rcx,rax
   140001ebe:	call   QWORD PTR [rip+0x4524]        # 0x1400063e8
   140001ec4:	mov    eax,ebx
   140001ec6:	mov    rcx,QWORD PTR [rbp+0x150]
   140001ecd:	xor    rcx,rsp
   140001ed0:	call   0x140002f60
   140001ed5:	add    rsp,0x268
   140001edc:	pop    r15
   140001ede:	pop    r14
   140001ee0:	pop    r13
   140001ee2:	pop    r12
   140001ee4:	pop    rdi
   140001ee5:	pop    rsi
   140001ee6:	pop    rbx
   140001ee7:	pop    rbp
   140001ee8:	ret    
   140001ee9:	int3   
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	int3   
   140001eed:	int3   
   140001eee:	int3   
   140001eef:	int3   
   140001ef0:	mov    r11,rsp
   140001ef3:	mov    QWORD PTR [r11+0x8],rbx
   140001ef7:	mov    QWORD PTR [r11+0x10],rsi
   140001efb:	mov    QWORD PTR [r11+0x18],rdi
   140001eff:	push   rbp
   140001f00:	push   r14
   140001f02:	push   r15
   140001f04:	mov    rbp,rsp
   140001f07:	sub    rsp,0x60
   140001f0b:	and    QWORD PTR [rbp-0x20],0x0
   140001f10:	and    QWORD PTR [rbp-0x18],0x0
   140001f15:	xor    eax,eax
   140001f17:	mov    QWORD PTR [rbp-0x10],rax
   140001f1b:	mov    QWORD PTR [rbp-0x8],rax
   140001f1f:	mov    rsi,r9
   140001f22:	lea    rax,[rbp-0x18]
   140001f26:	lea    r9,[rbp-0x20]
   140001f2a:	mov    QWORD PTR [r11-0x58],rax
   140001f2e:	call   0x140001860
   140001f33:	mov    rdi,QWORD PTR [rbp-0x20]
   140001f37:	mov    ebx,eax
   140001f39:	test   eax,eax
   140001f3b:	js     0x140002055
   140001f41:	mov    r8,QWORD PTR [rbp+0x40]
   140001f45:	lea    rdx,[rbp-0x10]
   140001f49:	mov    ebx,0x4
   140001f4e:	xor    r9d,r9d
   140001f51:	mov    rcx,rdi
   140001f54:	mov    DWORD PTR [rsp+0x20],ebx
   140001f58:	call   QWORD PTR [rip+0x4462]        # 0x1400063c0
   140001f5e:	test   eax,eax
   140001f60:	jne    0x140001f7b
   140001f62:	call   QWORD PTR [rip+0x44a8]        # 0x140006410
   140001f68:	movzx  ebx,ax
   140001f6b:	or     ebx,0x80070000
   140001f71:	test   eax,eax
   140001f73:	cmovle ebx,eax
   140001f76:	jmp    0x140002055
   140001f7b:	mov    edx,DWORD PTR [rbp-0x10]
   140001f7e:	xor    ecx,ecx
   140001f80:	call   QWORD PTR [rip+0x4482]        # 0x140006408
   140001f86:	mov    QWORD PTR [rbp-0x8],rax
   140001f8a:	test   rax,rax
   140001f8d:	jne    0x140001f99
   140001f8f:	mov    ebx,0x8007000e
   140001f94:	jmp    0x140002055
   140001f99:	mov    r8,QWORD PTR [rbp+0x40]
   140001f9d:	lea    rdx,[rbp-0x10]
   140001fa1:	xor    r9d,r9d
   140001fa4:	mov    rcx,rdi
   140001fa7:	mov    DWORD PTR [rsp+0x20],ebx
   140001fab:	call   QWORD PTR [rip+0x440f]        # 0x1400063c0
   140001fb1:	test   eax,eax
   140001fb3:	je     0x140001f62
   140001fb5:	xor    edx,edx
   140001fb7:	mov    rcx,rdi
   140001fba:	call   QWORD PTR [rip+0x43e0]        # 0x1400063a0
   140001fc0:	mov    eax,DWORD PTR [rbp+0x48]
   140001fc3:	xor    edi,edi
   140001fc5:	and    QWORD PTR [rsp+0x30],rdi
   140001fca:	xor    r9d,r9d
   140001fcd:	xor    r8d,r8d
   140001fd0:	mov    edx,0x40000000
   140001fd5:	mov    rcx,rsi
   140001fd8:	mov    DWORD PTR [rsp+0x28],0x8000080
   140001fe0:	mov    DWORD PTR [rsp+0x20],eax
   140001fe4:	call   QWORD PTR [rip+0x442e]        # 0x140006418
   140001fea:	mov    r15,rax
   140001fed:	cmp    rax,0xffffffffffffffff
   140001ff1:	je     0x140001f62
   140001ff7:	mov    rsi,QWORD PTR [rbp-0x10]
   140001ffb:	mov    r14,QWORD PTR [rbp-0x8]
   140001fff:	xor    ebx,ebx
   140002001:	test   esi,esi
   140002003:	je     0x14000204c
   140002005:	and    QWORD PTR [rsp+0x20],rbx
   14000200a:	lea    r9,[rbp-0x20]
   14000200e:	mov    r8d,esi
   140002011:	mov    rdx,r14
   140002014:	mov    rcx,r15
   140002017:	call   QWORD PTR [rip+0x4423]        # 0x140006440
   14000201d:	test   eax,eax
   14000201f:	je     0x140002038
   140002021:	mov    ecx,DWORD PTR [rbp-0x20]
   140002024:	test   ecx,ecx
   140002026:	je     0x140002031
   140002028:	add    r14,rcx
   14000202b:	sub    esi,ecx
   14000202d:	jne    0x140002005
   14000202f:	jmp    0x14000204c
   140002031:	mov    ebx,0x8007001d
   140002036:	jmp    0x14000204c
   140002038:	call   QWORD PTR [rip+0x43d2]        # 0x140006410
   14000203e:	movzx  ebx,ax
   140002041:	or     ebx,0x80070000
   140002047:	test   eax,eax
   140002049:	cmovle ebx,eax
   14000204c:	mov    rcx,r15
   14000204f:	call   QWORD PTR [rip+0x4393]        # 0x1400063e8
   140002055:	mov    rcx,QWORD PTR [rbp-0x8]
   140002059:	call   QWORD PTR [rip+0x4391]        # 0x1400063f0
   14000205f:	mov    rsi,QWORD PTR [rbp-0x18]
   140002063:	test   rsi,rsi
   140002066:	je     0x14000208e
   140002068:	mov    r9d,DWORD PTR [rsi+0x10]
   14000206c:	mov    r8,QWORD PTR [rsi+0x8]
   140002070:	mov    rdx,QWORD PTR [rsi]
   140002073:	lea    rcx,[rbp-0x18]
   140002077:	mov    DWORD PTR [rsp+0x20],0x10
   14000207f:	call   QWORD PTR [rip+0x42b3]        # 0x140006338
   140002085:	mov    rcx,rsi
   140002088:	call   QWORD PTR [rip+0x4362]        # 0x1400063f0
   14000208e:	test   rdi,rdi
   140002091:	je     0x14000209e
   140002093:	xor    edx,edx
   140002095:	mov    rcx,rdi
   140002098:	call   QWORD PTR [rip+0x4302]        # 0x1400063a0
   14000209e:	lea    r11,[rsp+0x60]
   1400020a3:	mov    eax,ebx
   1400020a5:	mov    rbx,QWORD PTR [r11+0x20]
   1400020a9:	mov    rsi,QWORD PTR [r11+0x28]
   1400020ad:	mov    rdi,QWORD PTR [r11+0x30]
   1400020b1:	mov    rsp,r11
   1400020b4:	pop    r15
   1400020b6:	pop    r14
   1400020b8:	pop    rbp
   1400020b9:	ret    
   1400020ba:	int3   
   1400020bb:	int3   
   1400020bc:	int3   
   1400020bd:	int3   
   1400020be:	int3   
   1400020bf:	int3   
   1400020c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400020ca:	push   rbp
   1400020cb:	push   rdi
   1400020cc:	push   r14
   1400020ce:	lea    rbp,[rsp-0x47]
   1400020d3:	sub    rsp,0x90
   1400020da:	and    QWORD PTR [rbp+0x7f],0x0
   1400020df:	and    QWORD PTR [rbp-0x19],0x0
   1400020e4:	lea    rax,[rbp-0x19]
   1400020e8:	lea    r9,[rbp+0x7f]
   1400020ec:	mov    QWORD PTR [rsp+0x20],rax
   1400020f1:	xor    r14d,r14d
   1400020f4:	call   0x140001860
   1400020f9:	mov    rsi,QWORD PTR [rbp+0x7f]
   1400020fd:	mov    edi,eax
   1400020ff:	test   eax,eax
   140002101:	js     0x1400021fb
   140002107:	lea    ebx,[r14+0x30]
   14000210b:	lea    rcx,[rbp+0xf]
   14000210f:	xor    edx,edx
   140002111:	mov    r8d,ebx
   140002114:	call   0x1400034ac
   140002119:	xor    edx,edx
   14000211b:	mov    rcx,rsi
   14000211e:	mov    DWORD PTR [rbp+0xf],ebx
   140002121:	call   QWORD PTR [rip+0x4281]        # 0x1400063a8
   140002127:	mov    rbx,rax
   14000212a:	test   rax,rax
   14000212d:	je     0x1400021ad
   14000212f:	mov    rdx,rax
   140002132:	mov    rcx,rsi
   140002135:	call   QWORD PTR [rip+0x426d]        # 0x1400063a8
   14000213b:	mov    rbx,rax
   14000213e:	test   rax,rax
   140002141:	jne    0x1400021ad
   140002143:	xor    edx,edx
   140002145:	mov    rcx,rsi
   140002148:	call   QWORD PTR [rip+0x425a]        # 0x1400063a8
   14000214e:	mov    rbx,rax
   140002151:	test   rax,rax
   140002154:	jne    0x14000216f
   140002156:	call   QWORD PTR [rip+0x42b4]        # 0x140006410
   14000215c:	movzx  edi,ax
   14000215f:	or     edi,0x80070000
   140002165:	test   eax,eax
   140002167:	cmovle edi,eax
   14000216a:	jmp    0x1400021fb
   14000216f:	mov    r14d,0x20
   140002175:	lea    rcx,[rbp-0x11]
   140002179:	xor    edx,edx
   14000217b:	mov    r8d,r14d
   14000217e:	mov    DWORD PTR [rbp+0x1f],0x1
   140002185:	mov    QWORD PTR [rbp+0x27],rax
   140002189:	call   0x1400034ac
   14000218e:	mov    DWORD PTR [rbp-0x11],r14d
   140002192:	lea    r14,[rbp-0x11]
   140002196:	mov    DWORD PTR [rbp-0xd],0x2
   14000219d:	mov    DWORD PTR [rbp-0x5],0x1
   1400021a4:	mov    DWORD PTR [rbp+0x7],0x1
   1400021ab:	jmp    0x1400021b8
   1400021ad:	mov    DWORD PTR [rbp+0x1f],0x4
   1400021b4:	mov    QWORD PTR [rbp+0x27],rsi
   1400021b8:	call   QWORD PTR [rip+0x4272]        # 0x140006430
   1400021be:	lea    r9,[rbp+0xf]
   1400021c2:	xor    r8d,r8d
   1400021c5:	xor    ecx,ecx
   1400021c7:	mov    rdx,rax
   1400021ca:	mov    QWORD PTR [rsp+0x20],r14
   1400021cf:	call   QWORD PTR [rip+0x4203]        # 0x1400063d8
   1400021d5:	test   eax,eax
   1400021d7:	jne    0x1400021ed
   1400021d9:	call   QWORD PTR [rip+0x4231]        # 0x140006410
   1400021df:	movzx  edi,ax
   1400021e2:	or     edi,0x80070000
   1400021e8:	test   eax,eax
   1400021ea:	cmovle edi,eax
   1400021ed:	test   rbx,rbx
   1400021f0:	je     0x1400021fb
   1400021f2:	mov    rcx,rbx
   1400021f5:	call   QWORD PTR [rip+0x419d]        # 0x140006398
   1400021fb:	mov    rbx,QWORD PTR [rbp-0x19]
   1400021ff:	test   rbx,rbx
   140002202:	je     0x14000222a
   140002204:	mov    r9d,DWORD PTR [rbx+0x10]
   140002208:	mov    r8,QWORD PTR [rbx+0x8]
   14000220c:	mov    rdx,QWORD PTR [rbx]
   14000220f:	lea    rcx,[rbp+0x7f]
   140002213:	mov    DWORD PTR [rsp+0x20],0x10
   14000221b:	call   QWORD PTR [rip+0x4117]        # 0x140006338
   140002221:	mov    rcx,rbx
   140002224:	call   QWORD PTR [rip+0x41c6]        # 0x1400063f0
   14000222a:	test   rsi,rsi
   14000222d:	je     0x14000223a
   14000222f:	xor    edx,edx
   140002231:	mov    rcx,rsi
   140002234:	call   QWORD PTR [rip+0x4166]        # 0x1400063a0
   14000223a:	lea    r11,[rsp+0x90]
   140002242:	mov    eax,edi
   140002244:	mov    rbx,QWORD PTR [r11+0x20]
   140002248:	mov    rsi,QWORD PTR [r11+0x28]
   14000224c:	mov    rsp,r11
   14000224f:	pop    r14
   140002251:	pop    rdi
   140002252:	pop    rbp
   140002253:	ret    
   140002254:	int3   
   140002255:	int3   
   140002256:	int3   
   140002257:	int3   
   140002258:	int3   
   140002259:	int3   
   14000225a:	int3   
   14000225b:	int3   
   14000225c:	mov    QWORD PTR [rsp+0x8],rbx
   140002261:	mov    QWORD PTR [rsp+0x10],rbp
   140002266:	mov    QWORD PTR [rsp+0x18],rsi
   14000226b:	push   rdi
   14000226c:	push   r14
   14000226e:	push   r15
   140002270:	sub    rsp,0x30
   140002274:	xor    edi,edi
   140002276:	mov    rbx,r9
   140002279:	mov    rbp,rcx
   14000227c:	sub    edx,0x110
   140002282:	je     0x1400023be
   140002288:	dec    edx
   14000228a:	jne    0x1400023e9
   140002290:	movzx  edx,r8w
   140002294:	dec    edx
   140002296:	je     0x1400022b2
   140002298:	dec    edx
   14000229a:	jne    0x1400023e9
   1400022a0:	mov    rdx,0xffffffff800704c7
   1400022a7:	call   QWORD PTR [rip+0x4243]        # 0x1400064f0
   1400022ad:	jmp    0x1400023e4
   1400022b2:	mov    edx,0x10
   1400022b7:	mov    ebx,edi
   1400022b9:	mov    rsi,rdi
   1400022bc:	call   QWORD PTR [rip+0x4226]        # 0x1400064e8
   1400022c2:	mov    r15,rax
   1400022c5:	test   rax,rax
   1400022c8:	jne    0x1400022d4
   1400022ca:	mov    ebx,0x80004005
   1400022cf:	jmp    0x1400023b3
   1400022d4:	xor    r9d,r9d
   1400022d7:	mov    edx,0x1f5
   1400022dc:	mov    r8d,0xc1
   1400022e2:	mov    rcx,rbp
   1400022e5:	mov    QWORD PTR [rsp+0x20],rdi
   1400022ea:	call   QWORD PTR [rip+0x4208]        # 0x1400064f8
   1400022f0:	lea    r14,[rax+0x1]
   1400022f4:	lea    rax,[r14-0x2]
   1400022f8:	cmp    rax,0x7ffffffc
   1400022fe:	ja     0x14000238d
   140002304:	lea    rdx,[r14+r14*1]
   140002308:	xor    ecx,ecx
   14000230a:	call   QWORD PTR [rip+0x40f8]        # 0x140006408
   140002310:	mov    rsi,rax
   140002313:	test   rax,rax
   140002316:	jne    0x140002322
   140002318:	mov    ebx,0x8007000e
   14000231d:	jmp    0x1400023b3
   140002322:	mov    r9d,r14d
   140002325:	movabs rax,0x200000005
   14000232f:	mov    r8,rsi
   140002332:	mov    rcx,rbp
   140002335:	mul    r14
   140002338:	mov    rax,r14
   14000233b:	sub    rax,rdx
   14000233e:	shr    rax,1
   140002341:	add    rax,rdx
   140002344:	mov    edx,0x1f5
   140002349:	shr    rax,0x1e
   14000234d:	imul   eax,eax,0x7fffffff
   140002353:	sub    r9d,eax
   140002356:	call   QWORD PTR [rip+0x41b4]        # 0x140006510
   14000235c:	test   eax,eax
   14000235e:	jne    0x140002376
   140002360:	call   QWORD PTR [rip+0x40aa]        # 0x140006410
   140002366:	movzx  ebx,ax
   140002369:	or     ebx,0x80070000
   14000236f:	test   eax,eax
   140002371:	cmovle ebx,eax
   140002374:	jmp    0x14000239a
   140002376:	mov    r9,QWORD PTR [r15+0x10]
   14000237a:	mov    r8,QWORD PTR [r15+0x8]
   14000237e:	mov    rdx,r14
   140002381:	mov    rcx,rsi
   140002384:	call   0x14000240c
   140002389:	mov    ebx,eax
   14000238b:	jmp    0x14000239a
   14000238d:	mov    rax,QWORD PTR [r15+0x8]
   140002391:	mov    QWORD PTR [rax],rdi
   140002394:	mov    rax,QWORD PTR [r15+0x10]
   140002398:	mov    DWORD PTR [rax],edi
   14000239a:	test   rsi,rsi
   14000239d:	je     0x1400023b3
   14000239f:	xor    eax,eax
   1400023a1:	lea    rcx,[r14+r14*1]
   1400023a5:	mov    rdi,rsi
   1400023a8:	rep stos BYTE PTR es:[rdi],al
   1400023aa:	mov    rcx,rsi
   1400023ad:	call   QWORD PTR [rip+0x403d]        # 0x1400063f0
   1400023b3:	movsxd rdx,ebx
   1400023b6:	mov    rcx,rbp
   1400023b9:	jmp    0x1400022a7
   1400023be:	mov    rax,QWORD PTR [r9+0x8]
   1400023c2:	mov    edx,0x1f8
   1400023c7:	mov    QWORD PTR [rax],rdi
   1400023ca:	mov    r8,QWORD PTR [r9]
   1400023cd:	call   QWORD PTR [rip+0x4145]        # 0x140006518
   1400023d3:	mov    r8,rbx
   1400023d6:	mov    edx,0x10
   1400023db:	mov    rcx,rbp
   1400023de:	call   QWORD PTR [rip+0x4124]        # 0x140006508
   1400023e4:	mov    edi,0x1
   1400023e9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400023ee:	mov    rbp,QWORD PTR [rsp+0x58]
   1400023f3:	mov    rsi,QWORD PTR [rsp+0x60]
   1400023f8:	movsxd rax,edi
   1400023fb:	add    rsp,0x30
   1400023ff:	pop    r15
   140002401:	pop    r14
   140002403:	pop    rdi
   140002404:	ret    
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	int3   
   140002409:	int3   
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	mov    QWORD PTR [rsp+0x8],rbx
   140002411:	mov    QWORD PTR [rsp+0x10],rbp
   140002416:	mov    QWORD PTR [rsp+0x18],rsi
   14000241b:	push   rdi
   14000241c:	push   r12
   14000241e:	push   r13
   140002420:	push   r14
   140002422:	push   r15
   140002424:	sub    rsp,0x40
   140002428:	xor    r13d,r13d
   14000242b:	mov    r15,r9
   14000242e:	mov    r12,r8
   140002431:	mov    rdi,rdx
   140002434:	mov    r14,rcx
   140002437:	mov    ebx,r13d
   14000243a:	mov    ebp,r13d
   14000243d:	mov    esi,r13d
   140002440:	test   rdx,rdx
   140002443:	je     0x140002554
   140002449:	cmp    rdx,0x7fffffff
   140002450:	ja     0x140002554
   140002456:	cmp    WORD PTR [rcx],r13w
   14000245a:	jne    0x140002467
   14000245c:	mov    QWORD PTR [r8],r13
   14000245f:	mov    DWORD PTR [r9],r13d
   140002462:	jmp    0x140002571
   140002467:	mov    QWORD PTR [rsp+0x38],r13
   14000246c:	mov    r8,rcx
   14000246f:	mov    QWORD PTR [rsp+0x30],r13
   140002474:	movabs rax,0x200000005
   14000247e:	xor    ecx,ecx
   140002480:	mov    DWORD PTR [rsp+0x28],r13d
   140002485:	mov    QWORD PTR [rsp+0x20],r13
   14000248a:	mul    rdi
   14000248d:	mov    rax,rdi
   140002490:	sub    rax,rdx
   140002493:	shr    rax,1
   140002496:	add    rax,rdx
   140002499:	xor    edx,edx
   14000249b:	shr    rax,0x1e
   14000249f:	imul   eax,eax,0x7fffffff
   1400024a5:	sub    edi,eax
   1400024a7:	mov    r9d,edi
   1400024aa:	call   QWORD PTR [rip+0x3f88]        # 0x140006438
   1400024b0:	movsxd rbp,eax
   1400024b3:	test   eax,eax
   1400024b5:	jg     0x1400024d0
   1400024b7:	call   QWORD PTR [rip+0x3f53]        # 0x140006410
   1400024bd:	movzx  ebx,ax
   1400024c0:	or     ebx,0x80070000
   1400024c6:	test   eax,eax
   1400024c8:	cmovle ebx,eax
   1400024cb:	jmp    0x140002571
   1400024d0:	mov    rdx,rbp
   1400024d3:	xor    ecx,ecx
   1400024d5:	call   QWORD PTR [rip+0x3f2d]        # 0x140006408
   1400024db:	mov    rsi,rax
   1400024de:	test   rax,rax
   1400024e1:	jne    0x1400024ed
   1400024e3:	mov    ebx,0x8007000e
   1400024e8:	jmp    0x140002571
   1400024ed:	and    QWORD PTR [rsp+0x38],rbx
   1400024f2:	and    QWORD PTR [rsp+0x30],rbx
   1400024f7:	mov    r9d,edi
   1400024fa:	mov    r8,r14
   1400024fd:	xor    edx,edx
   1400024ff:	xor    ecx,ecx
   140002501:	mov    DWORD PTR [rsp+0x28],ebp
   140002505:	mov    QWORD PTR [rsp+0x20],rax
   14000250a:	call   QWORD PTR [rip+0x3f28]        # 0x140006438
   140002510:	mov    r14d,eax
   140002513:	test   eax,eax
   140002515:	jne    0x14000252d
   140002517:	call   QWORD PTR [rip+0x3ef3]        # 0x140006410
   14000251d:	movzx  ebx,ax
   140002520:	or     ebx,0x80070000
   140002526:	test   eax,eax
   140002528:	cmovle ebx,eax
   14000252b:	jmp    0x140002559
   14000252d:	cmp    eax,0x1
   140002530:	jne    0x140002547
   140002532:	xor    eax,eax
   140002534:	mov    rdi,rsi
   140002537:	mov    rcx,rbp
   14000253a:	rep stos BYTE PTR es:[rdi],al
   14000253c:	mov    rcx,rsi
   14000253f:	call   QWORD PTR [rip+0x3eab]        # 0x1400063f0
   140002545:	xor    esi,esi
   140002547:	lea    eax,[r14-0x1]
   14000254b:	mov    QWORD PTR [r12],rsi
   14000254f:	mov    DWORD PTR [r15],eax
   140002552:	jmp    0x140002571
   140002554:	mov    ebx,0x80070057
   140002559:	test   rsi,rsi
   14000255c:	je     0x140002571
   14000255e:	xor    eax,eax
   140002560:	movsxd rcx,ebp
   140002563:	mov    rdi,rsi
   140002566:	rep stos BYTE PTR es:[rdi],al
   140002568:	mov    rcx,rsi
   14000256b:	call   QWORD PTR [rip+0x3e7f]        # 0x1400063f0
   140002571:	lea    r11,[rsp+0x40]
   140002576:	mov    eax,ebx
   140002578:	mov    rbx,QWORD PTR [r11+0x30]
   14000257c:	mov    rbp,QWORD PTR [r11+0x38]
   140002580:	mov    rsi,QWORD PTR [r11+0x40]
   140002584:	mov    rsp,r11
   140002587:	pop    r15
   140002589:	pop    r14
   14000258b:	pop    r13
   14000258d:	pop    r12
   14000258f:	pop    rdi
   140002590:	ret    
   140002591:	int3   
   140002592:	int3   
   140002593:	int3   
   140002594:	int3   
   140002595:	int3   
   140002596:	int3   
   140002597:	int3   
   140002598:	mov    QWORD PTR [rsp+0x10],rbx
   14000259d:	mov    QWORD PTR [rsp+0x18],rsi
   1400025a2:	push   rbp
   1400025a3:	push   rdi
   1400025a4:	push   r14
   1400025a6:	lea    rbp,[rsp-0x47]
   1400025ab:	sub    rsp,0x90
   1400025b2:	mov    rax,QWORD PTR [rip+0x1b57]        # 0x140004110
   1400025b9:	xor    rax,rsp
   1400025bc:	mov    QWORD PTR [rbp+0x37],rax
   1400025c0:	mov    r14,rcx
   1400025c3:	lea    rcx,[rbp+0x27]
   1400025c7:	call   QWORD PTR [rip+0x3f03]        # 0x1400064d0
   1400025cd:	movzx  edx,BYTE PTR [rbp+0x34]
   1400025d1:	movzx  r8d,BYTE PTR [rbp+0x33]
   1400025d6:	movzx  r9d,BYTE PTR [rbp+0x32]
   1400025db:	movzx  ecx,BYTE PTR [rbp+0x30]
   1400025df:	movzx  r11d,BYTE PTR [rbp+0x36]
   1400025e4:	movzx  eax,BYTE PTR [rbp+0x35]
   1400025e8:	movzx  r10d,BYTE PTR [rbp+0x31]
   1400025ed:	movzx  ebx,BYTE PTR [rbp+0x2f]
   1400025f1:	movzx  edi,WORD PTR [rbp+0x2d]
   1400025f5:	movzx  esi,WORD PTR [rbp+0x2b]
   1400025f9:	mov    DWORD PTR [rsp+0x68],r11d
   1400025fe:	mov    DWORD PTR [rsp+0x60],eax
   140002602:	mov    DWORD PTR [rsp+0x58],edx
   140002606:	mov    DWORD PTR [rsp+0x50],r8d
   14000260b:	mov    DWORD PTR [rsp+0x48],r9d
   140002610:	mov    r9d,DWORD PTR [rbp+0x27]
   140002614:	mov    DWORD PTR [rsp+0x40],r10d
   140002619:	mov    DWORD PTR [rsp+0x38],ecx
   14000261d:	mov    DWORD PTR [rsp+0x30],ebx
   140002621:	lea    r8,[rip+0xffffffffffffea58]        # 0x140001080
   140002628:	mov    edx,0x2c
   14000262d:	mov    rcx,r14
   140002630:	mov    DWORD PTR [rsp+0x28],edi
   140002634:	mov    DWORD PTR [rsp+0x20],esi
   140002638:	call   0x1400011e8
   14000263d:	mov    rcx,QWORD PTR [rbp+0x37]
   140002641:	xor    rcx,rsp
   140002644:	call   0x140002f60
   140002649:	lea    r11,[rsp+0x90]
   140002651:	mov    rbx,QWORD PTR [r11+0x28]
   140002655:	mov    rsi,QWORD PTR [r11+0x30]
   140002659:	mov    rsp,r11
   14000265c:	pop    r14
   14000265e:	pop    rdi
   14000265f:	pop    rbp
   140002660:	ret    
   140002661:	int3   
   140002662:	int3   
   140002663:	int3   
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	mov    r11,rsp
   14000266b:	mov    QWORD PTR [r11+0x8],rbx
   14000266f:	mov    QWORD PTR [r11+0x10],rsi
   140002673:	mov    QWORD PTR [r11+0x20],rdi
   140002677:	push   rbp
   140002678:	push   r12
   14000267a:	push   r13
   14000267c:	push   r14
   14000267e:	push   r15
   140002680:	mov    rbp,rsp
   140002683:	sub    rsp,0x50
   140002687:	mov    rdi,QWORD PTR [rbp+0x70]
   14000268b:	mov    rsi,QWORD PTR [rbp+0x68]
   14000268f:	xor    eax,eax
   140002691:	mov    ebx,eax
   140002693:	mov    QWORD PTR [rbp+0x40],rax
   140002697:	mov    QWORD PTR [rbp-0x10],rax
   14000269b:	mov    QWORD PTR [rbp-0x18],rax
   14000269f:	mov    r10d,eax
   1400026a2:	mov    QWORD PTR [rbp-0x20],rax
   1400026a6:	mov    r15d,r9d
   1400026a9:	mov    r13,r8
   1400026ac:	mov    r12d,edx
   1400026af:	mov    r14,rcx
   1400026b2:	test   r8,r8
   1400026b5:	je     0x1400027ed
   1400026bb:	test   r9d,r9d
   1400026be:	je     0x1400027ed
   1400026c4:	lea    rax,[rbp+0x40]
   1400026c8:	xor    r9d,r9d
   1400026cb:	xor    r8d,r8d
   1400026ce:	mov    edx,0x8004
   1400026d3:	mov    QWORD PTR [r11-0x58],rax
   1400026d7:	call   QWORD PTR [rip+0x3c83]        # 0x140006360
   1400026dd:	test   eax,eax
   1400026df:	je     0x14000273b
   1400026e1:	mov    rdx,QWORD PTR [rbp+0x50]
   1400026e5:	test   rdx,rdx
   1400026e8:	je     0x140002704
   1400026ea:	mov    r8d,DWORD PTR [rbp+0x58]
   1400026ee:	test   r8d,r8d
   1400026f1:	je     0x140002704
   1400026f3:	mov    rcx,QWORD PTR [rbp+0x40]
   1400026f7:	xor    r9d,r9d
   1400026fa:	call   QWORD PTR [rip+0x3c78]        # 0x140006378
   140002700:	test   eax,eax
   140002702:	je     0x14000273b
   140002704:	mov    rcx,QWORD PTR [rbp+0x40]
   140002708:	xor    r9d,r9d
   14000270b:	mov    r8d,r15d
   14000270e:	mov    rdx,r13
   140002711:	call   QWORD PTR [rip+0x3c61]        # 0x140006378
   140002717:	test   eax,eax
   140002719:	je     0x14000273b
   14000271b:	mov    r8,QWORD PTR [rbp+0x40]
   14000271f:	lea    rax,[rbp-0x10]
   140002723:	xor    r9d,r9d
   140002726:	mov    edx,r12d
   140002729:	mov    rcx,r14
   14000272c:	mov    QWORD PTR [rsp+0x20],rax
   140002731:	call   QWORD PTR [rip+0x3c09]        # 0x140006340
   140002737:	test   eax,eax
   140002739:	jne    0x140002785
   14000273b:	call   QWORD PTR [rip+0x3ccf]        # 0x140006410
   140002741:	mov    rcx,QWORD PTR [rbp-0x20]
   140002745:	movzx  ebx,ax
   140002748:	or     ebx,0x80070000
   14000274e:	test   eax,eax
   140002750:	cmovle ebx,eax
   140002753:	test   rcx,rcx
   140002756:	je     0x14000275e
   140002758:	call   QWORD PTR [rip+0x3c0a]        # 0x140006368
   14000275e:	mov    rcx,QWORD PTR [rbp-0x18]
   140002762:	test   rcx,rcx
   140002765:	je     0x14000276d
   140002767:	call   QWORD PTR [rip+0x3bfb]        # 0x140006368
   14000276d:	mov    rcx,QWORD PTR [rbp-0x10]
   140002771:	test   rcx,rcx
   140002774:	je     0x14000280c
   14000277a:	call   QWORD PTR [rip+0x3be8]        # 0x140006368
   140002780:	jmp    0x14000280c
   140002785:	test   rsi,rsi
   140002788:	je     0x1400027b6
   14000278a:	mov    r8,QWORD PTR [rbp+0x40]
   14000278e:	lea    rax,[rbp-0x18]
   140002792:	mov    r9d,0x280000
   140002798:	mov    edx,r12d
   14000279b:	mov    rcx,r14
   14000279e:	mov    QWORD PTR [rsp+0x20],rax
   1400027a3:	call   QWORD PTR [rip+0x3b97]        # 0x140006340
   1400027a9:	neg    eax
   1400027ab:	sbb    rcx,rcx
   1400027ae:	and    rcx,QWORD PTR [rbp-0x18]
   1400027b2:	mov    QWORD PTR [rbp-0x18],rcx
   1400027b6:	test   rdi,rdi
   1400027b9:	je     0x1400027e9
   1400027bb:	mov    r8,QWORD PTR [rbp+0x40]
   1400027bf:	lea    rax,[rbp-0x20]
   1400027c3:	mov    r9d,0x800000
   1400027c9:	mov    edx,r12d
   1400027cc:	mov    rcx,r14
   1400027cf:	mov    QWORD PTR [rsp+0x20],rax
   1400027d4:	call   QWORD PTR [rip+0x3b66]        # 0x140006340
   1400027da:	neg    eax
   1400027dc:	sbb    r10,r10
   1400027df:	and    r10,QWORD PTR [rbp-0x20]
   1400027e3:	mov    QWORD PTR [rbp-0x20],r10
   1400027e7:	jmp    0x1400027ed
   1400027e9:	mov    r10,QWORD PTR [rbp-0x20]
   1400027ed:	mov    rcx,QWORD PTR [rbp+0x60]
   1400027f1:	mov    rax,QWORD PTR [rbp-0x10]
   1400027f5:	mov    QWORD PTR [rcx],rax
   1400027f8:	test   rsi,rsi
   1400027fb:	je     0x140002804
   1400027fd:	mov    rax,QWORD PTR [rbp-0x18]
   140002801:	mov    QWORD PTR [rsi],rax
   140002804:	test   rdi,rdi
   140002807:	je     0x14000280c
   140002809:	mov    QWORD PTR [rdi],r10
   14000280c:	mov    rcx,QWORD PTR [rbp+0x40]
   140002810:	test   rcx,rcx
   140002813:	je     0x14000281b
   140002815:	call   QWORD PTR [rip+0x3b55]        # 0x140006370
   14000281b:	lea    r11,[rsp+0x50]
   140002820:	mov    eax,ebx
   140002822:	mov    rbx,QWORD PTR [r11+0x30]
   140002826:	mov    rsi,QWORD PTR [r11+0x38]
   14000282a:	mov    rdi,QWORD PTR [r11+0x48]
   14000282e:	mov    rsp,r11
   140002831:	pop    r15
   140002833:	pop    r14
   140002835:	pop    r13
   140002837:	pop    r12
   140002839:	pop    rbp
   14000283a:	ret    
   14000283b:	int3   
   14000283c:	int3   
   14000283d:	int3   
   14000283e:	int3   
   14000283f:	int3   
   140002840:	int3   
   140002841:	int3   
   140002842:	int3   
   140002843:	int3   
   140002844:	rex push rbx
   140002846:	sub    rsp,0x40
   14000284a:	mov    ebx,ecx
   14000284c:	cmp    ecx,0x8007000e
   140002852:	jne    0x14000285e
   140002854:	mov    edx,0x1773
   140002859:	jmp    0x140002934
   14000285e:	cmp    ecx,0x8007000b
   140002864:	jne    0x140002870
   140002866:	mov    edx,0x1774
   14000286b:	jmp    0x140002934
   140002870:	cmp    ecx,0x80070490
   140002876:	jne    0x140002882
   140002878:	mov    edx,0x1775
   14000287d:	jmp    0x140002934
   140002882:	cmp    ecx,0x80070002
   140002888:	je     0x14000292f
   14000288e:	cmp    ecx,0x80070003
   140002894:	je     0x14000292f
   14000289a:	cmp    ecx,0x800704c7
   1400028a0:	jne    0x1400028ac
   1400028a2:	mov    edx,0x1777
   1400028a7:	jmp    0x140002934
   1400028ac:	cmp    ecx,0x80070056
   1400028b2:	jne    0x1400028bb
   1400028b4:	mov    edx,0x1778
   1400028b9:	jmp    0x140002934
   1400028bb:	cmp    ecx,0x80090005
   1400028c1:	jne    0x1400028ca
   1400028c3:	mov    edx,0x1779
   1400028c8:	jmp    0x140002934
   1400028ca:	cmp    ecx,0x80070050
   1400028d0:	jne    0x1400028d9
   1400028d2:	mov    edx,0x177a
   1400028d7:	jmp    0x140002934
   1400028d9:	and    QWORD PTR [rsp+0x30],0x0
   1400028df:	and    DWORD PTR [rsp+0x28],0x0
   1400028e4:	lea    rax,[rsp+0x58]
   1400028e9:	mov    r8d,ecx
   1400028ec:	mov    r9d,0x400
   1400028f2:	xor    edx,edx
   1400028f4:	mov    ecx,0x1300
   1400028f9:	mov    QWORD PTR [rsp+0x20],rax
   1400028fe:	call   QWORD PTR [rip+0x3b24]        # 0x140006428
   140002904:	test   eax,eax
   140002906:	je     0x140002944
   140002908:	mov    rcx,QWORD PTR [rip+0x3c79]        # 0x140006588
   14000290f:	mov    r8,QWORD PTR [rsp+0x58]
   140002914:	mov    edx,0x1772
   140002919:	add    rcx,0x60
   14000291d:	call   0x140001264
   140002922:	mov    rcx,QWORD PTR [rsp+0x58]
   140002927:	call   QWORD PTR [rip+0x3ac3]        # 0x1400063f0
   14000292d:	jmp    0x140002944
   14000292f:	mov    edx,0x1776
   140002934:	mov    rcx,QWORD PTR [rip+0x3c4d]        # 0x140006588
   14000293b:	add    rcx,0x60
   14000293f:	call   0x140001264
   140002944:	mov    rcx,QWORD PTR [rip+0x3c3d]        # 0x140006588
   14000294b:	mov    r8d,ebx
   14000294e:	mov    edx,0x1771
   140002953:	add    rcx,0x60
   140002957:	add    rsp,0x40
   14000295b:	pop    rbx
   14000295c:	jmp    0x140001264
   140002961:	int3   
   140002962:	int3   
   140002963:	int3   
   140002964:	int3   
   140002965:	int3   
   140002966:	int3   
   140002967:	int3   
   140002968:	mov    QWORD PTR [rsp+0x8],rbx
   14000296d:	push   rbp
   14000296e:	push   rsi
   14000296f:	push   rdi
   140002970:	push   r12
   140002972:	push   r13
   140002974:	push   r14
   140002976:	push   r15
   140002978:	sub    rsp,0x40
   14000297c:	xor    eax,eax
   14000297e:	xor    esi,esi
   140002980:	mov    rdi,rdx
   140002983:	and    QWORD PTR [rsp+0x30],rax
   140002988:	mov    r12d,ecx
   14000298b:	xor    r15d,r15d
   14000298e:	mov    DWORD PTR [rsp+0x90],eax
   140002995:	mov    QWORD PTR [rsp+0x98],rsi
   14000299d:	xor    r13d,r13d
   1400029a0:	xor    r14d,r14d
   1400029a3:	xor    ebp,ebp
   1400029a5:	call   QWORD PTR [rip+0x3a9d]        # 0x140006448
   1400029ab:	lea    edx,[rsi+0x1]
   1400029ae:	xor    r9d,r9d
   1400029b1:	xor    r8d,r8d
   1400029b4:	mov    rcx,rax
   1400029b7:	call   QWORD PTR [rip+0x3a43]        # 0x140006400
   1400029bd:	xor    ecx,ecx
   1400029bf:	call   QWORD PTR [rip+0x3a8b]        # 0x140006450
   1400029c5:	mov    QWORD PTR [rip+0x1d2c],rax        # 0x1400046f8
   1400029cc:	test   rax,rax
   1400029cf:	jne    0x1400029fb
   1400029d1:	call   QWORD PTR [rip+0x3a39]        # 0x140006410
   1400029d7:	mov    rcx,QWORD PTR [rip+0x3baa]        # 0x140006588
   1400029de:	lea    rdx,[rip+0xffffffffffffe70b]        # 0x1400010f0
   1400029e5:	add    rcx,0x60
   1400029e9:	mov    r8d,eax
   1400029ec:	call   QWORD PTR [rip+0x3ba6]        # 0x140006598
   1400029f2:	or     r15d,0xffffffff
   1400029f6:	jmp    0x140002c30
   1400029fb:	cmp    r12d,0x5
   1400029ff:	jae    0x140002a21
   140002a01:	mov    rcx,QWORD PTR [rip+0x3b80]        # 0x140006588
   140002a08:	mov    edx,0x1770
   140002a0d:	add    rcx,0x60
   140002a11:	call   0x140001264
   140002a16:	mov    r15d,0xfffffffe
   140002a1c:	jmp    0x140002c30
   140002a21:	mov    ebx,0x1
   140002a26:	cmp    ebx,r12d
   140002a29:	jae    0x140002b5a
   140002a2f:	lea    esi,[rbx+0x1]
   140002a32:	add    rdi,0x8
   140002a36:	mov    rcx,QWORD PTR [rdi]
   140002a39:	cmp    WORD PTR [rcx],0x2d
   140002a3d:	je     0x140002a49
   140002a3f:	cmp    WORD PTR [rcx],0x2f
   140002a43:	jne    0x140002b4f
   140002a49:	lea    rdx,[rip+0xffffffffffffe6c4]        # 0x140001114
   140002a50:	add    rcx,0x2
   140002a54:	call   QWORD PTR [rip+0x3b4e]        # 0x1400065a8
   140002a5a:	test   eax,eax
   140002a5c:	jne    0x140002a6e
   140002a5e:	mov    DWORD PTR [rsp+0x90],0x1
   140002a69:	jmp    0x140002b3e
   140002a6e:	cmp    esi,r12d
   140002a71:	je     0x140002b4f
   140002a77:	mov    rcx,QWORD PTR [rdi]
   140002a7a:	lea    rdx,[rip+0xffffffffffffe697]        # 0x140001118
   140002a81:	add    rcx,0x2
   140002a85:	call   QWORD PTR [rip+0x3b1d]        # 0x1400065a8
   140002a8b:	test   eax,eax
   140002a8d:	jne    0x140002a9f
   140002a8f:	inc    ebx
   140002a91:	inc    esi
   140002a93:	add    rdi,0x8
   140002a97:	mov    r13,QWORD PTR [rdi]
   140002a9a:	jmp    0x140002b3e
   140002a9f:	mov    rcx,QWORD PTR [rdi]
   140002aa2:	lea    rdx,[rip+0xffffffffffffe677]        # 0x140001120
   140002aa9:	add    rcx,0x2
   140002aad:	call   QWORD PTR [rip+0x3af5]        # 0x1400065a8
   140002ab3:	test   eax,eax
   140002ab5:	jne    0x140002acc
   140002ab7:	inc    ebx
   140002ab9:	inc    esi
   140002abb:	add    rdi,0x8
   140002abf:	mov    rax,QWORD PTR [rdi]
   140002ac2:	mov    QWORD PTR [rsp+0x98],rax
   140002aca:	jmp    0x140002b3e
   140002acc:	mov    rcx,QWORD PTR [rdi]
   140002acf:	lea    rdx,[rip+0xffffffffffffe652]        # 0x140001128
   140002ad6:	add    rcx,0x2
   140002ada:	call   QWORD PTR [rip+0x3ac8]        # 0x1400065a8
   140002ae0:	test   eax,eax
   140002ae2:	jne    0x140002af6
   140002ae4:	inc    ebx
   140002ae6:	inc    esi
   140002ae8:	add    rdi,0x8
   140002aec:	mov    rax,QWORD PTR [rdi]
   140002aef:	mov    QWORD PTR [rsp+0x30],rax
   140002af4:	jmp    0x140002b3e
   140002af6:	mov    rcx,QWORD PTR [rdi]
   140002af9:	lea    rdx,[rip+0xffffffffffffe630]        # 0x140001130
   140002b00:	add    rcx,0x2
   140002b04:	call   QWORD PTR [rip+0x3a9e]        # 0x1400065a8
   140002b0a:	test   eax,eax
   140002b0c:	jne    0x140002b1b
   140002b0e:	inc    ebx
   140002b10:	inc    esi
   140002b12:	add    rdi,0x8
   140002b16:	mov    r14,QWORD PTR [rdi]
   140002b19:	jmp    0x140002b3e
   140002b1b:	mov    rcx,QWORD PTR [rdi]
   140002b1e:	lea    rdx,[rip+0xffffffffffffe613]        # 0x140001138
   140002b25:	add    rcx,0x2
   140002b29:	call   QWORD PTR [rip+0x3a79]        # 0x1400065a8
   140002b2f:	test   eax,eax
   140002b31:	jne    0x140002b3e
   140002b33:	inc    ebx
   140002b35:	inc    esi
   140002b37:	add    rdi,0x8
   140002b3b:	mov    rbp,QWORD PTR [rdi]
   140002b3e:	inc    ebx
   140002b40:	inc    esi
   140002b42:	add    rdi,0x8
   140002b46:	cmp    ebx,r12d
   140002b49:	jb     0x140002a36
   140002b4f:	mov    rsi,QWORD PTR [rsp+0x98]
   140002b57:	cmp    ebx,r12d
   140002b5a:	jne    0x140002bcc
   140002b5c:	xor    ebx,ebx
   140002b5e:	test   r13,r13
   140002b61:	je     0x140002bce
   140002b63:	test   rsi,rsi
   140002b66:	je     0x140002bce
   140002b68:	mov    r9,QWORD PTR [rsp+0x30]
   140002b6d:	test   r9,r9
   140002b70:	je     0x140002bab
   140002b72:	test   rbp,rbp
   140002b75:	jne    0x140002b85
   140002b77:	lea    rbp,[rip+0xffffffffffffe4f2]        # 0x140001070
   140002b7e:	test   r14,r14
   140002b81:	cmovne rbp,r14
   140002b85:	neg    DWORD PTR [rsp+0x90]
   140002b8c:	mov    r8,r14
   140002b8f:	mov    rdx,rsi
   140002b92:	sbb    eax,eax
   140002b94:	mov    rcx,r13
   140002b97:	neg    eax
   140002b99:	inc    eax
   140002b9b:	mov    DWORD PTR [rsp+0x28],eax
   140002b9f:	mov    QWORD PTR [rsp+0x20],rbp
   140002ba4:	call   0x140001ef0
   140002ba9:	jmp    0x140002bb9
   140002bab:	mov    r8,r14
   140002bae:	mov    rdx,rsi
   140002bb1:	mov    rcx,r13
   140002bb4:	call   0x1400020c0
   140002bb9:	test   eax,eax
   140002bbb:	jns    0x140002be9
   140002bbd:	mov    ecx,eax
   140002bbf:	call   0x140002844
   140002bc4:	mov    r15d,0x1
   140002bca:	jmp    0x140002be9
   140002bcc:	xor    ebx,ebx
   140002bce:	mov    rcx,QWORD PTR [rip+0x39b3]        # 0x140006588
   140002bd5:	mov    edx,0x1770
   140002bda:	add    rcx,0x60
   140002bde:	call   0x140001264
   140002be3:	mov    r15d,0xfffffffe
   140002be9:	or     r11,0xffffffffffffffff
   140002bed:	test   r14,r14
   140002bf0:	je     0x140002c0f
   140002bf2:	cmp    WORD PTR [r14],bx
   140002bf6:	je     0x140002c0f
   140002bf8:	mov    rcx,r11
   140002bfb:	inc    rcx
   140002bfe:	cmp    WORD PTR [r14+rcx*2],bx
   140002c03:	jne    0x140002bfb
   140002c05:	add    rcx,rcx
   140002c08:	mov    rdi,r14
   140002c0b:	xor    eax,eax
   140002c0d:	rep stos BYTE PTR es:[rdi],al
   140002c0f:	test   rbp,rbp
   140002c12:	je     0x140002c30
   140002c14:	cmp    WORD PTR [rbp+0x0],bx
   140002c18:	je     0x140002c30
   140002c1a:	inc    r11
   140002c1d:	cmp    WORD PTR [rbp+r11*2+0x0],bx
   140002c23:	jne    0x140002c1a
   140002c25:	lea    rcx,[r11+r11*1]
   140002c29:	mov    rdi,rbp
   140002c2c:	xor    eax,eax
   140002c2e:	rep stos BYTE PTR es:[rdi],al
   140002c30:	mov    eax,r15d
   140002c33:	mov    rbx,QWORD PTR [rsp+0x80]
   140002c3b:	add    rsp,0x40
   140002c3f:	pop    r15
   140002c41:	pop    r14
   140002c43:	pop    r13
   140002c45:	pop    r12
   140002c47:	pop    rdi
   140002c48:	pop    rsi
   140002c49:	pop    rbp
   140002c4a:	ret    
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	int3   
   140002c51:	int3   
   140002c52:	int3   
   140002c53:	int3   
   140002c54:	sub    rsp,0x28
   140002c58:	mov    eax,0x5a4d
   140002c5d:	cmp    WORD PTR [rip+0xffffffffffffd39c],ax        # 0x140000000
   140002c64:	je     0x140002c6a
   140002c66:	xor    eax,eax
   140002c68:	jmp    0x140002cb9
   140002c6a:	movsxd rcx,DWORD PTR [rip+0xffffffffffffd3cb]        # 0x14000003c
   140002c71:	lea    rax,[rip+0xffffffffffffd388]        # 0x140000000
   140002c78:	add    rcx,rax
   140002c7b:	cmp    DWORD PTR [rcx],0x4550
   140002c81:	jne    0x140002c66
   140002c83:	movzx  eax,WORD PTR [rcx+0x18]
   140002c87:	cmp    eax,0x10b
   140002c8c:	je     0x140002ca8
   140002c8e:	cmp    eax,0x20b
   140002c93:	jne    0x140002c66
   140002c95:	xor    eax,eax
   140002c97:	cmp    DWORD PTR [rcx+0x84],0xe
   140002c9e:	jbe    0x140002cb9
   140002ca0:	cmp    DWORD PTR [rcx+0xf8],eax
   140002ca6:	jmp    0x140002cb6
   140002ca8:	xor    eax,eax
   140002caa:	cmp    DWORD PTR [rcx+0x74],0xe
   140002cae:	jbe    0x140002cb9
   140002cb0:	cmp    DWORD PTR [rcx+0xe8],eax
   140002cb6:	setne  al
   140002cb9:	mov    ecx,0x1
   140002cbe:	mov    DWORD PTR [rip+0x147c],eax        # 0x140004140
   140002cc4:	call   0x140003058
   140002cc9:	mov    ecx,eax
   140002ccb:	call   QWORD PTR [rip+0x3897]        # 0x140006568
   140002cd1:	mov    rcx,QWORD PTR [rip+0x3858]        # 0x140006530
   140002cd8:	mov    eax,DWORD PTR [rip+0x1476]        # 0x140004154
   140002cde:	or     r11,0xffffffffffffffff
   140002ce2:	mov    QWORD PTR [rip+0x19e7],r11        # 0x1400046d0
   140002ce9:	mov    QWORD PTR [rip+0x19e8],r11        # 0x1400046d8
   140002cf0:	mov    DWORD PTR [rcx],eax
   140002cf2:	mov    rcx,QWORD PTR [rip+0x38b7]        # 0x1400065b0
   140002cf9:	mov    eax,DWORD PTR [rip+0x1449]        # 0x140004148
   140002cff:	mov    DWORD PTR [rcx],eax
   140002d01:	call   0x140003270
   140002d06:	cmp    DWORD PTR [rip+0x13f3],0x0        # 0x140004100
   140002d0d:	jne    0x140002d1c
   140002d0f:	lea    rcx,[rip+0x55a]        # 0x140003270
   140002d16:	call   QWORD PTR [rip+0x382c]        # 0x140006548
   140002d1c:	xor    eax,eax
   140002d1e:	add    rsp,0x28
   140002d22:	ret    
   140002d23:	int3   
   140002d24:	int3   
   140002d25:	int3   
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	sub    rsp,0x38
   140002d30:	mov    eax,DWORD PTR [rip+0x141a]        # 0x140004150
   140002d36:	mov    r9d,DWORD PTR [rip+0x140f]        # 0x14000414c
   140002d3d:	lea    r8,[rip+0x13f4]        # 0x140004138
   140002d44:	mov    DWORD PTR [rip+0x13fa],eax        # 0x140004144
   140002d4a:	lea    rax,[rip+0x13f3]        # 0x140004144
   140002d51:	lea    rdx,[rip+0x13d8]        # 0x140004130
   140002d58:	lea    rcx,[rip+0x13c9]        # 0x140004128
   140002d5f:	mov    QWORD PTR [rsp+0x20],rax
   140002d64:	call   QWORD PTR [rip+0x3806]        # 0x140006570
   140002d6a:	mov    DWORD PTR [rip+0x13bc],eax        # 0x14000412c
   140002d70:	add    rsp,0x38
   140002d74:	ret    
   140002d75:	int3   
   140002d76:	int3   
   140002d77:	int3   
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140002d81:	mov    QWORD PTR [rsp+0x10],rsi
   140002d86:	mov    QWORD PTR [rsp+0x18],rdi
   140002d8b:	push   r15
   140002d8d:	sub    rsp,0x30
   140002d91:	mov    rax,QWORD PTR gs:0x30
   140002d9a:	mov    rbx,QWORD PTR [rax+0x8]
   140002d9e:	xor    esi,esi
   140002da0:	xor    eax,eax
   140002da2:	lock cmpxchg QWORD PTR [rip+0x1935],rbx        # 0x1400046e0
   140002dab:	je     0x140002dc8
   140002dad:	cmp    rax,rbx
   140002db0:	jne    0x140002dbb
   140002db2:	mov    ebx,0x1
   140002db7:	mov    esi,ebx
   140002db9:	jmp    0x140002dcd
   140002dbb:	mov    ecx,0x3e8
   140002dc0:	call   QWORD PTR [rip+0x36f2]        # 0x1400064b8
   140002dc6:	jmp    0x140002da0
   140002dc8:	mov    ebx,0x1
   140002dcd:	mov    eax,DWORD PTR [rip+0x1915]        # 0x1400046e8
   140002dd3:	cmp    eax,ebx
   140002dd5:	jne    0x140002de3
   140002dd7:	mov    ecx,0x1f
   140002ddc:	call   0x1400030a4
   140002de1:	jmp    0x140002e40
   140002de3:	mov    eax,DWORD PTR [rip+0x18ff]        # 0x1400046e8
   140002de9:	test   eax,eax
   140002deb:	jne    0x140002e3a
   140002ded:	mov    DWORD PTR [rip+0x18f5],ebx        # 0x1400046e8
   140002df3:	lea    r15,[rip+0xffffffffffffe236]        # 0x140001030
   140002dfa:	lea    rdi,[rip+0xffffffffffffe217]        # 0x140001018
   140002e01:	mov    QWORD PTR [rsp+0x28],rdi
   140002e06:	mov    DWORD PTR [rsp+0x20],eax
   140002e0a:	cmp    rdi,r15
   140002e0d:	jae    0x140002e2c
   140002e0f:	test   eax,eax
   140002e11:	jne    0x140002e30
   140002e13:	mov    rcx,QWORD PTR [rdi]
   140002e16:	test   rcx,rcx
   140002e19:	je     0x140002e21
   140002e1b:	call   rcx
   140002e1d:	mov    DWORD PTR [rsp+0x20],eax
   140002e21:	add    rdi,0x8
   140002e25:	mov    QWORD PTR [rsp+0x28],rdi
   140002e2a:	jmp    0x140002e0a
   140002e2c:	test   eax,eax
   140002e2e:	je     0x140002e40
   140002e30:	mov    eax,0xff
   140002e35:	jmp    0x140002f14
   140002e3a:	mov    DWORD PTR [rip+0x12e4],ebx        # 0x140004124
   140002e40:	mov    eax,DWORD PTR [rip+0x18a2]        # 0x1400046e8
   140002e46:	cmp    eax,ebx
   140002e48:	jne    0x140002e67
   140002e4a:	lea    rdx,[rip+0xffffffffffffe1bf]        # 0x140001010
   140002e51:	lea    rcx,[rip+0xffffffffffffe1a8]        # 0x140001000
   140002e58:	call   0x14000327a
   140002e5d:	mov    DWORD PTR [rip+0x1881],0x2        # 0x1400046e8
   140002e67:	test   esi,esi
   140002e69:	jne    0x140002e74
   140002e6b:	xor    eax,eax
   140002e6d:	xchg   QWORD PTR [rip+0x186c],rax        # 0x1400046e0
   140002e74:	cmp    QWORD PTR [rip+0x1874],0x0        # 0x1400046f0
   140002e7c:	je     0x140002ea0
   140002e7e:	lea    rcx,[rip+0x186b]        # 0x1400046f0
   140002e85:	call   0x140003140
   140002e8a:	test   eax,eax
   140002e8c:	je     0x140002ea0
   140002e8e:	xor    r8d,r8d
   140002e91:	lea    edx,[r8+0x2]
   140002e95:	xor    ecx,ecx
   140002e97:	mov    rax,QWORD PTR [rip+0x1852]        # 0x1400046f0
   140002e9e:	call   rax
   140002ea0:	mov    r8,QWORD PTR [rip+0x1291]        # 0x140004138
   140002ea7:	mov    rdx,QWORD PTR [rip+0x1282]        # 0x140004130
   140002eae:	mov    ecx,DWORD PTR [rip+0x1274]        # 0x140004128
   140002eb4:	call   0x140002968
   140002eb9:	mov    DWORD PTR [rip+0x1261],eax        # 0x140004120
   140002ebf:	cmp    DWORD PTR [rip+0x127a],0x0        # 0x140004140
   140002ec6:	jne    0x140002ed0
   140002ec8:	mov    ecx,eax
   140002eca:	call   QWORD PTR [rip+0x3690]        # 0x140006560
   140002ed0:	cmp    DWORD PTR [rip+0x124d],0x0        # 0x140004124
   140002ed7:	jne    0x140002ee5
   140002ed9:	call   QWORD PTR [rip+0x3671]        # 0x140006550
   140002edf:	mov    eax,DWORD PTR [rip+0x123b]        # 0x140004120
   140002ee5:	jmp    0x140002f14
   140002ee7:	mov    DWORD PTR [rip+0x1233],eax        # 0x140004120
   140002eed:	cmp    DWORD PTR [rip+0x124c],0x0        # 0x140004140
   140002ef4:	jne    0x140002eff
   140002ef6:	mov    ecx,eax
   140002ef8:	call   QWORD PTR [rip+0x365a]        # 0x140006558
   140002efe:	int3   
   140002eff:	cmp    DWORD PTR [rip+0x121e],0x0        # 0x140004124
   140002f06:	jne    0x140002f14
   140002f08:	call   QWORD PTR [rip+0x3642]        # 0x140006550
   140002f0e:	mov    eax,DWORD PTR [rip+0x120c]        # 0x140004120
   140002f14:	mov    rbx,QWORD PTR [rsp+0x40]
   140002f19:	mov    rsi,QWORD PTR [rsp+0x48]
   140002f1e:	mov    rdi,QWORD PTR [rsp+0x50]
   140002f23:	add    rsp,0x30
   140002f27:	pop    r15
   140002f29:	ret    
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	sub    rsp,0x28
   140002f34:	call   0x140003194
   140002f39:	add    rsp,0x28
   140002f3d:	jmp    0x140002d7c
   140002f42:	int3   
   140002f43:	int3   
   140002f44:	int3   
   140002f45:	int3   
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	int3   
   140002f51:	int3   
   140002f52:	int3   
   140002f53:	int3   
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002f60:	cmp    rcx,QWORD PTR [rip+0x11a9]        # 0x140004110
   140002f67:	jne    0x140002f7b
   140002f69:	rol    rcx,0x10
   140002f6d:	test   cx,0xffff
   140002f72:	jne    0x140002f77
   140002f74:	ret    0x0
   140002f77:	ror    rcx,0x10
   140002f7b:	jmp    0x140003294
   140002f80:	int3   
   140002f81:	int3   
   140002f82:	int3   
   140002f83:	int3   
   140002f84:	int3   
   140002f85:	int3   
   140002f86:	int3   
   140002f87:	int3   
   140002f88:	sub    rsp,0x28
   140002f8c:	mov    rax,QWORD PTR [rcx]
   140002f8f:	cmp    DWORD PTR [rax],0xe06d7363
   140002f95:	jne    0x140002fc3
   140002f97:	cmp    DWORD PTR [rax+0x18],0x4
   140002f9b:	jne    0x140002fc3
   140002f9d:	mov    eax,DWORD PTR [rax+0x20]
   140002fa0:	cmp    eax,0x19930520
   140002fa5:	je     0x140002fbc
   140002fa7:	cmp    eax,0x19930521
   140002fac:	je     0x140002fbc
   140002fae:	cmp    eax,0x19930522
   140002fb3:	je     0x140002fbc
   140002fb5:	cmp    eax,0x1994000
   140002fba:	jne    0x140002fc3
   140002fbc:	call   QWORD PTR [rip+0x3576]        # 0x140006538
   140002fc2:	int3   
   140002fc3:	xor    eax,eax
   140002fc5:	add    rsp,0x28
   140002fc9:	ret    
   140002fca:	int3   
   140002fcb:	int3   
   140002fcc:	int3   
   140002fcd:	int3   
   140002fce:	int3   
   140002fcf:	int3   
   140002fd0:	sub    rsp,0x28
   140002fd4:	lea    rcx,[rip+0xffffffffffffffad]        # 0x140002f88
   140002fdb:	call   QWORD PTR [rip+0x34df]        # 0x1400064c0
   140002fe1:	xor    eax,eax
   140002fe3:	add    rsp,0x28
   140002fe7:	ret    
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	jmp    QWORD PTR [rip+0x358c]        # 0x140006580
   140002ff4:	int3   
   140002ff5:	int3   
   140002ff6:	int3   
   140002ff7:	int3   
   140002ff8:	int3   
   140002ff9:	int3   
   140002ffa:	int3   
   140002ffb:	int3   
   140002ffc:	sub    rsp,0x18
   140003000:	xor    edx,edx
   140003002:	test   rcx,rcx
   140003005:	je     0x140003049
   140003007:	cmp    rcx,0xffffffffffffffff
   14000300b:	je     0x140003049
   14000300d:	mov    eax,0x5a4d
   140003012:	cmp    WORD PTR [rcx],ax
   140003015:	jne    0x140003041
   140003017:	cmp    DWORD PTR [rcx+0x3c],edx
   14000301a:	jl     0x140003041
   14000301c:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140003023:	jae    0x140003041
   140003025:	movsxd rax,DWORD PTR [rcx+0x3c]
   140003029:	add    rax,rcx
   14000302c:	mov    QWORD PTR [rsp],rax
   140003030:	cmp    DWORD PTR [rax],0x4550
   140003036:	cmovne rax,rdx
   14000303a:	mov    rdx,rax
   14000303d:	mov    QWORD PTR [rsp],rax
   140003041:	jmp    0x140003049
   140003043:	xor    edx,edx
   140003045:	mov    QWORD PTR [rsp],rdx
   140003049:	mov    rax,rdx
   14000304c:	add    rsp,0x18
   140003050:	ret    
   140003051:	int3   
   140003052:	int3   
   140003053:	int3   
   140003054:	int3   
   140003055:	int3   
   140003056:	int3   
   140003057:	int3   
   140003058:	rex push rbx
   14000305a:	sub    rsp,0x20
   14000305e:	mov    ebx,ecx
   140003060:	xor    ecx,ecx
   140003062:	call   QWORD PTR [rip+0x33e8]        # 0x140006450
   140003068:	test   rax,rax
   14000306b:	je     0x140003095
   14000306d:	mov    rcx,rax
   140003070:	call   0x140002ffc
   140003075:	test   rax,rax
   140003078:	je     0x140003095
   14000307a:	mov    ecx,0x2
   14000307f:	cmp    WORD PTR [rax+0x5c],cx
   140003083:	jne    0x140003089
   140003085:	mov    eax,ecx
   140003087:	jmp    0x140003097
   140003089:	cmp    WORD PTR [rax+0x5c],0x3
   14000308e:	mov    eax,0x1
   140003093:	je     0x140003097
   140003095:	mov    eax,ebx
   140003097:	add    rsp,0x20
   14000309b:	pop    rbx
   14000309c:	ret    
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	int3   
   1400030a1:	int3   
   1400030a2:	int3   
   1400030a3:	int3   
   1400030a4:	jmp    QWORD PTR [rip+0x34ce]        # 0x140006578
   1400030aa:	int3   
   1400030ab:	int3   
   1400030ac:	int3   
   1400030ad:	int3   
   1400030ae:	int3   
   1400030af:	int3   
   1400030b0:	mov    rax,rcx
   1400030b3:	mov    ecx,0x5a4d
   1400030b8:	cmp    WORD PTR [rax],cx
   1400030bb:	je     0x1400030c0
   1400030bd:	xor    eax,eax
   1400030bf:	ret    
   1400030c0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400030c4:	add    rcx,rax
   1400030c7:	xor    eax,eax
   1400030c9:	cmp    DWORD PTR [rcx],0x4550
   1400030cf:	jne    0x1400030dd
   1400030d1:	mov    edx,0x20b
   1400030d6:	cmp    WORD PTR [rcx+0x18],dx
   1400030da:	sete   al
   1400030dd:	repz ret 
   1400030df:	int3   
   1400030e0:	int3   
   1400030e1:	int3   
   1400030e2:	int3   
   1400030e3:	int3   
   1400030e4:	int3   
   1400030e5:	int3   
   1400030e6:	int3   
   1400030e7:	int3   
   1400030e8:	int3   
   1400030e9:	int3   
   1400030ea:	int3   
   1400030eb:	int3   
   1400030ec:	int3   
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400030f4:	xor    r9d,r9d
   1400030f7:	mov    r10,rdx
   1400030fa:	add    r8,rcx
   1400030fd:	movzx  eax,WORD PTR [r8+0x14]
   140003102:	movzx  r11d,WORD PTR [r8+0x6]
   140003107:	add    rax,0x18
   14000310b:	add    rax,r8
   14000310e:	test   r11d,r11d
   140003111:	je     0x140003131
   140003113:	mov    edx,DWORD PTR [rax+0xc]
   140003116:	cmp    r10,rdx
   140003119:	jb     0x140003125
   14000311b:	mov    ecx,DWORD PTR [rax+0x8]
   14000311e:	add    ecx,edx
   140003120:	cmp    r10,rcx
   140003123:	jb     0x140003133
   140003125:	inc    r9d
   140003128:	add    rax,0x28
   14000312c:	cmp    r9d,r11d
   14000312f:	jb     0x140003113
   140003131:	xor    eax,eax
   140003133:	repz ret 
   140003135:	int3   
   140003136:	int3   
   140003137:	int3   
   140003138:	int3   
   140003139:	int3   
   14000313a:	int3   
   14000313b:	int3   
   14000313c:	int3   
   14000313d:	int3   
   14000313e:	int3   
   14000313f:	int3   
   140003140:	mov    QWORD PTR [rsp+0x8],rbx
   140003145:	push   rdi
   140003146:	sub    rsp,0x20
   14000314a:	mov    rbx,rcx
   14000314d:	lea    rdi,[rip+0xffffffffffffceac]        # 0x140000000
   140003154:	mov    rcx,rdi
   140003157:	call   0x1400030b0
   14000315c:	test   eax,eax
   14000315e:	je     0x140003182
   140003160:	sub    rbx,rdi
   140003163:	mov    rdx,rbx
   140003166:	mov    rcx,rdi
   140003169:	call   0x1400030f0
   14000316e:	test   rax,rax
   140003171:	je     0x140003182
   140003173:	mov    eax,DWORD PTR [rax+0x24]
   140003176:	shr    eax,0x1f
   140003179:	not    eax
   14000317b:	and    eax,0x1
   14000317e:	jmp    0x140003182
   140003180:	xor    eax,eax
   140003182:	mov    rbx,QWORD PTR [rsp+0x30]
   140003187:	add    rsp,0x20
   14000318b:	pop    rdi
   14000318c:	ret    
   14000318d:	int3   
   14000318e:	int3   
   14000318f:	int3   
   140003190:	int3   
   140003191:	int3   
   140003192:	int3   
   140003193:	int3   
   140003194:	mov    QWORD PTR [rsp+0x20],rbx
   140003199:	push   rbp
   14000319a:	mov    rbp,rsp
   14000319d:	sub    rsp,0x20
   1400031a1:	mov    rax,QWORD PTR [rip+0xf68]        # 0x140004110
   1400031a8:	and    QWORD PTR [rbp+0x18],0x0
   1400031ad:	movabs rbx,0x2b992ddfa232
   1400031b7:	cmp    rax,rbx
   1400031ba:	jne    0x140003253
   1400031c0:	lea    rcx,[rbp+0x18]
   1400031c4:	call   QWORD PTR [rip+0x32de]        # 0x1400064a8
   1400031ca:	mov    r11,QWORD PTR [rbp+0x18]
   1400031ce:	mov    QWORD PTR [rbp+0x10],r11
   1400031d2:	call   QWORD PTR [rip+0x3220]        # 0x1400063f8
   1400031d8:	mov    r11d,eax
   1400031db:	xor    QWORD PTR [rbp+0x10],r11
   1400031df:	call   QWORD PTR [rip+0x32cb]        # 0x1400064b0
   1400031e5:	mov    r11d,eax
   1400031e8:	xor    QWORD PTR [rbp+0x10],r11
   1400031ec:	call   QWORD PTR [rip+0x32ae]        # 0x1400064a0
   1400031f2:	mov    r11d,eax
   1400031f5:	shl    r11,0x18
   1400031f9:	xor    QWORD PTR [rbp+0x10],r11
   1400031fd:	call   QWORD PTR [rip+0x329d]        # 0x1400064a0
   140003203:	lea    rcx,[rbp+0x20]
   140003207:	mov    r11d,eax
   14000320a:	lea    rax,[rbp+0x10]
   14000320e:	xor    r11,QWORD PTR [rbp+0x10]
   140003212:	xor    r11,rax
   140003215:	mov    QWORD PTR [rbp+0x10],r11
   140003219:	call   QWORD PTR [rip+0x3261]        # 0x140006480
   14000321f:	mov    eax,DWORD PTR [rbp+0x20]
   140003222:	shl    rax,0x20
   140003226:	movabs rcx,0xffffffffffff
   140003230:	xor    rax,QWORD PTR [rbp+0x20]
   140003234:	xor    rax,QWORD PTR [rbp+0x10]
   140003238:	and    rax,rcx
   14000323b:	movabs rcx,0x2b992ddfa233
   140003245:	cmp    rax,rbx
   140003248:	cmove  rax,rcx
   14000324c:	mov    QWORD PTR [rip+0xebd],rax        # 0x140004110
   140003253:	mov    rbx,QWORD PTR [rsp+0x48]
   140003258:	not    rax
   14000325b:	mov    QWORD PTR [rip+0xeb6],rax        # 0x140004118
   140003262:	add    rsp,0x20
   140003266:	pop    rbp
   140003267:	ret    
   140003268:	int3   
   140003269:	int3   
   14000326a:	int3   
   14000326b:	int3   
   14000326c:	int3   
   14000326d:	int3   
   14000326e:	int3   
   14000326f:	int3   
   140003270:	xor    eax,eax
   140003272:	ret    
   140003273:	int3   
   140003274:	int3   
   140003275:	int3   
   140003276:	int3   
   140003277:	int3   
   140003278:	int3   
   140003279:	int3   
   14000327a:	jmp    QWORD PTR [rip+0x32c0]        # 0x140006540
   140003280:	int3   
   140003281:	int3   
   140003282:	int3   
   140003283:	int3   
   140003284:	int3   
   140003285:	int3   
   140003286:	jmp    QWORD PTR [rip+0x329c]        # 0x140006528
   14000328c:	int3   
   14000328d:	int3   
   14000328e:	int3   
   14000328f:	int3   
   140003290:	int3   
   140003291:	int3   
   140003292:	int3   
   140003293:	int3   
   140003294:	mov    QWORD PTR [rsp+0x8],rcx
   140003299:	push   rbp
   14000329a:	mov    rbp,rsp
   14000329d:	sub    rsp,0x80
   1400032a4:	lea    rcx,[rip+0xf55]        # 0x140004200
   1400032ab:	call   QWORD PTR [rip+0x31e7]        # 0x140006498
   1400032b1:	mov    rax,QWORD PTR [rip+0x1040]        # 0x1400042f8
   1400032b8:	mov    QWORD PTR [rsp+0x48],rax
   1400032bd:	xor    r8d,r8d
   1400032c0:	lea    rdx,[rsp+0x50]
   1400032c5:	mov    rcx,QWORD PTR [rsp+0x48]
   1400032ca:	call   QWORD PTR [rip+0x31c0]        # 0x140006490
   1400032d0:	mov    QWORD PTR [rsp+0x40],rax
   1400032d5:	cmp    QWORD PTR [rsp+0x40],0x0
   1400032db:	je     0x14000331f
   1400032dd:	mov    QWORD PTR [rsp+0x38],0x0
   1400032e6:	lea    rax,[rsp+0x58]
   1400032eb:	mov    QWORD PTR [rsp+0x30],rax
   1400032f0:	lea    rax,[rsp+0x60]
   1400032f5:	mov    QWORD PTR [rsp+0x28],rax
   1400032fa:	lea    rax,[rip+0xeff]        # 0x140004200
   140003301:	mov    QWORD PTR [rsp+0x20],rax
   140003306:	mov    r9,QWORD PTR [rsp+0x40]
   14000330b:	mov    r8,QWORD PTR [rsp+0x48]
   140003310:	mov    rdx,QWORD PTR [rsp+0x50]
   140003315:	xor    ecx,ecx
   140003317:	call   QWORD PTR [rip+0x316b]        # 0x140006488
   14000331d:	jmp    0x140003342
   14000331f:	mov    rax,QWORD PTR [rip+0xf72]        # 0x140004298
   140003326:	mov    rax,QWORD PTR [rax]
   140003329:	mov    QWORD PTR [rip+0xfc8],rax        # 0x1400042f8
   140003330:	mov    rax,QWORD PTR [rip+0xf61]        # 0x140004298
   140003337:	add    rax,0x8
   14000333b:	mov    QWORD PTR [rip+0xf56],rax        # 0x140004298
   140003342:	mov    rax,QWORD PTR [rip+0xfaf]        # 0x1400042f8
   140003349:	mov    QWORD PTR [rip+0xe20],rax        # 0x140004170
   140003350:	mov    rax,QWORD PTR [rbp+0x10]
   140003354:	mov    QWORD PTR [rip+0xf25],rax        # 0x140004280
   14000335b:	mov    DWORD PTR [rip+0xdfb],0xc0000409        # 0x140004160
   140003365:	mov    DWORD PTR [rip+0xdf5],0x1        # 0x140004164
   14000336f:	mov    DWORD PTR [rip+0xdff],0x3        # 0x140004178
   140003379:	mov    QWORD PTR [rip+0xdfc],0x2        # 0x140004180
   140003384:	mov    rax,QWORD PTR [rip+0xd85]        # 0x140004110
   14000338b:	mov    QWORD PTR [rip+0xdf6],rax        # 0x140004188
   140003392:	mov    rax,QWORD PTR [rip+0xd7f]        # 0x140004118
   140003399:	mov    QWORD PTR [rip+0xdf0],rax        # 0x140004190
   1400033a0:	mov    rax,QWORD PTR [rip+0xd69]        # 0x140004110
   1400033a7:	mov    QWORD PTR [rsp+0x68],rax
   1400033ac:	mov    rax,QWORD PTR [rip+0xd65]        # 0x140004118
   1400033b3:	mov    QWORD PTR [rsp+0x70],rax
   1400033b8:	lea    rcx,[rip+0xffffffffffffdca1]        # 0x140001060
   1400033bf:	call   0x1400033d4
   1400033c4:	add    rsp,0x80
   1400033cb:	pop    rbp
   1400033cc:	ret    
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	int3   
   1400033d1:	int3   
   1400033d2:	int3   
   1400033d3:	int3   
   1400033d4:	rex push rbx
   1400033d6:	sub    rsp,0x20
   1400033da:	mov    rbx,rcx
   1400033dd:	xor    ecx,ecx
   1400033df:	call   QWORD PTR [rip+0x30db]        # 0x1400064c0
   1400033e5:	mov    rcx,rbx
   1400033e8:	call   QWORD PTR [rip+0x308a]        # 0x140006478
   1400033ee:	call   QWORD PTR [rip+0x307c]        # 0x140006470
   1400033f4:	mov    edx,0xc0000409
   1400033f9:	mov    rcx,rax
   1400033fc:	add    rsp,0x20
   140003400:	pop    rbx
   140003401:	rex.W jmp QWORD PTR [rip+0x3060]        # 0x140006468
   140003408:	int3   
   140003409:	int3   
   14000340a:	int3   
   14000340b:	int3   
   14000340c:	int3   
   14000340d:	int3   
   14000340e:	int3   
   14000340f:	int3   
   140003410:	rex push rbx
   140003412:	sub    rsp,0x20
   140003416:	mov    r11d,DWORD PTR [r8]
   140003419:	mov    rbx,rdx
   14000341c:	mov    r9,rcx
   14000341f:	and    r11d,0xfffffff8
   140003423:	test   BYTE PTR [r8],0x4
   140003427:	mov    r10,rcx
   14000342a:	je     0x14000343f
   14000342c:	mov    eax,DWORD PTR [r8+0x8]
   140003430:	movsxd r10,DWORD PTR [r8+0x4]
   140003434:	neg    eax
   140003436:	add    r10,rcx
   140003439:	movsxd rcx,eax
   14000343c:	and    r10,rcx
   14000343f:	movsxd rax,r11d
   140003442:	mov    rdx,QWORD PTR [rax+r10*1]
   140003446:	mov    rax,QWORD PTR [rbx+0x10]
   14000344a:	mov    ecx,DWORD PTR [rax+0x8]
   14000344d:	add    rcx,QWORD PTR [rbx+0x8]
   140003451:	test   BYTE PTR [rcx+0x3],0xf
   140003455:	je     0x140003463
   140003457:	movzx  eax,BYTE PTR [rcx+0x3]
   14000345b:	and    eax,0xfffffff0
   14000345e:	cdqe   
   140003460:	add    r9,rax
   140003463:	xor    r9,rdx
   140003466:	mov    rcx,r9
   140003469:	add    rsp,0x20
   14000346d:	pop    rbx
   14000346e:	jmp    0x140002f60
   140003473:	int3   
   140003474:	int3   
   140003475:	int3   
   140003476:	int3   
   140003477:	int3   
   140003478:	int3   
   140003479:	int3   
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	sub    rsp,0x28
   140003480:	mov    r8,QWORD PTR [r9+0x38]
   140003484:	mov    rcx,rdx
   140003487:	mov    rdx,r9
   14000348a:	call   0x140003410
   14000348f:	mov    eax,0x1
   140003494:	add    rsp,0x28
   140003498:	ret    
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	int3   
   14000349d:	int3   
   14000349e:	int3   
   14000349f:	int3   
   1400034a0:	jmp    QWORD PTR [rip+0x3112]        # 0x1400065b8
   1400034a6:	int3   
   1400034a7:	int3   
   1400034a8:	int3   
   1400034a9:	int3   
   1400034aa:	int3   
   1400034ab:	int3   
   1400034ac:	jmp    QWORD PTR [rip+0x310e]        # 0x1400065c0
   1400034b2:	int3   
   1400034b3:	int3   
   1400034b4:	int3   
   1400034b5:	int3   
   1400034b6:	int3   
   1400034b7:	int3   
   1400034b8:	int3   
   1400034b9:	int3   
   1400034ba:	int3   
   1400034bb:	int3   
   1400034bc:	int3   
   1400034bd:	int3   
   1400034be:	int3   
   1400034bf:	int3   
   1400034c0:	int3   
   1400034c1:	int3   
   1400034c2:	int3   
   1400034c3:	int3   
   1400034c4:	int3   
   1400034c5:	int3   
   1400034c6:	rex push rbp
   1400034c8:	sub    rsp,0x20
   1400034cc:	mov    rbp,rdx
   1400034cf:	mov    rax,QWORD PTR [rcx]
   1400034d2:	mov    rdx,rcx
   1400034d5:	mov    ecx,DWORD PTR [rax]
   1400034d7:	call   0x140002fee
   1400034dc:	nop
   1400034dd:	add    rsp,0x20
   1400034e1:	pop    rbp
   1400034e2:	ret    
   1400034e3:	int3   
   1400034e4:	int3   
   1400034e5:	int3   
   1400034e6:	int3   
   1400034e7:	int3   
   1400034e8:	int3   
   1400034e9:	int3   
   1400034ea:	int3   
   1400034eb:	int3   
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	rex push rbp
   1400034f2:	sub    rsp,0x20
   1400034f6:	mov    rbp,rdx
   1400034f9:	mov    rax,QWORD PTR [rcx]
   1400034fc:	xor    ecx,ecx
   1400034fe:	cmp    DWORD PTR [rax],0xc0000005
   140003504:	sete   cl
   140003507:	mov    eax,ecx
   140003509:	mov    eax,ecx
   14000350b:	add    rsp,0x20
   14000350f:	pop    rbp
   140003510:	ret    
   140003511:	int3   
   140003512:	int3   
   140003513:	int3   
   140003514:	add    DWORD PTR [rcx+rax*1],eax
   140003517:	add    BYTE PTR [rdx+rax*2],al
   14000351a:	add    BYTE PTR [rax],al
   14000351c:	add    DWORD PTR [rcx+rax*1],eax
   14000351f:	add    BYTE PTR [rdx+riz*2],al
   140003522:	add    BYTE PTR [rax],al
   140003524:	or     DWORD PTR [rip+0x74150008],edx        # 0x1b4153532
   14000352a:	or     al,BYTE PTR [rax]
   14000352c:	adc    eax,0x15000964
   140003531:	xor    al,0x8
   140003533:	add    BYTE PTR [rip+0xffffffff86f01152],dl        # 0xc6f0468b
   140003539:	xor    al,BYTE PTR [rax]
   14000353b:	add    BYTE PTR [rcx],al
   14000353d:	add    BYTE PTR [rax],al
   14000353f:	add    BYTE PTR [rcx-0x18ffffd3],dl
   140003545:	add    BYTE PTR cs:[rax],al
   140003548:	(bad)  
   140003549:	xor    al,0x0
   14000354b:	add    bh,ah
   14000354d:	add    BYTE PTR cs:[rax],al
   140003550:	or     DWORD PTR [rcx+rax*1],eax
   140003553:	add    BYTE PTR [rdx+riz*1],al
   140003556:	add    BYTE PTR [rax],al
   140003558:	xchg   BYTE PTR [rdx],dh
   14000355a:	add    BYTE PTR [rax],al
   14000355c:	add    DWORD PTR [rax],eax
   14000355e:	add    BYTE PTR [rax],al
   140003560:	or     eax,0x43000030
   140003565:	xor    BYTE PTR [rax],al
   140003567:	add    BYTE PTR [rcx],al
   140003569:	add    BYTE PTR [rax],al
   14000356b:	add    BYTE PTR [rbx+0x30],al
   14000356e:	add    BYTE PTR [rax],al
   140003570:	or     DWORD PTR [rdx],ecx
   140003572:	add    al,0x0
   140003574:	or     dh,BYTE PTR [rsi+rax*1]
   140003577:	add    BYTE PTR [rdx],cl
   140003579:	xor    al,BYTE PTR [rsi]
   14000357b:	jo     0x140003503
   14000357d:	xor    al,BYTE PTR [rax]
   14000357f:	add    BYTE PTR [rcx],al
   140003581:	add    BYTE PTR [rax],al
   140003583:	add    BYTE PTR [rbp+0x31],cl
   140003586:	add    BYTE PTR [rax],al
   140003588:	xor    BYTE PTR [rcx],0x0
   14000358b:	add    al,dh
   14000358d:	xor    al,0x0
   14000358f:	add    BYTE PTR [rax+0x1000031],al
   140003595:	(bad)  
   140003596:	add    al,BYTE PTR [rax]
   140003598:	(bad)  
   140003599:	xor    al,BYTE PTR [rdx]
   14000359b:	push   rax
   14000359c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d35a6
   1400035a2:	or     DWORD PTR [rax],eax
   1400035a4:	or     eax,0x1500632
   1400035a9:	adc    BYTE PTR [rdx],al
   1400035ab:	add    BYTE PTR [rax],dl
   1400035ad:	repnz (bad) 
   1400035af:	push   rax
   1400035b0:	add    DWORD PTR [rsi],eax
   1400035b2:	add    al,BYTE PTR [rax]
   1400035b4:	(bad)  
   1400035b5:	xor    al,BYTE PTR [rdx]
   1400035b7:	xor    BYTE PTR [rcx],al
   1400035b9:	adc    al,0xa
   1400035bb:	add    BYTE PTR [rsp+rsi*1],dl
   1400035be:	adc    BYTE PTR [rax],al
   1400035c0:	adc    al,0x72
   1400035c2:	adc    al,dh
   1400035c4:	(bad)  
   1400035c5:	loopne 0x1400035d3
   1400035c7:	ror    BYTE PTR [rdx],1
   1400035c9:	ror    BYTE PTR [rax],0x70
   1400035cc:	(bad)  
   1400035cd:	(bad)  
   1400035ce:	(bad)  
   1400035cf:	push   rax
   1400035d0:	add    DWORD PTR [rsi],eax
   1400035d2:	add    al,BYTE PTR [rax]
   1400035d4:	(bad)  
   1400035d5:	jb     0x1400035d9
   1400035d7:	xor    BYTE PTR [rcx],al
   1400035d9:	(bad)  
   1400035da:	or     al,0x0
   1400035dc:	(bad)  
   1400035dd:	je     0x1400035f2
   1400035df:	add    BYTE PTR [rdi],bl
   1400035e1:	adc    DWORD PTR fs:[rax],eax
   1400035e4:	(bad)  
   1400035e5:	xor    al,0x10
   1400035e7:	add    BYTE PTR [rdi],bl
   1400035e9:	xchg   edx,eax
   1400035ea:	sbb    al,dh
   1400035ec:	(bad)  
   1400035ed:	loopne 0x140003603
   1400035ef:	rcl    BYTE PTR [rdx],1
   1400035f1:	rcl    BYTE PTR [rax],0x50
   1400035f4:	sbb    DWORD PTR [rax],ebp
   1400035f6:	or     DWORD PTR [rax],eax
   1400035f8:	sbb    ah,BYTE PTR [rax+rbx*1+0x0]
   1400035fc:	sbb    dh,BYTE PTR [rdi+rdx*1]
   1400035ff:	add    BYTE PTR [rdx],bl
   140003601:	add    DWORD PTR [rdx],edx
   140003603:	add    BYTE PTR [rsi],cl
   140003605:	loopne 0x140003613
   140003607:	jo     0x140003614
   140003609:	push   rax
   14000360a:	add    BYTE PTR [rax],al
   14000360c:	jl     0x140003642
   14000360e:	add    BYTE PTR [rax],al
   140003610:	add    BYTE PTR [rax],0x0
   140003613:	add    BYTE PTR [rcx],al
   140003615:	sbb    al,0xc
   140003617:	add    BYTE PTR [rsp+riz*2],bl
   14000361a:	adc    BYTE PTR [rax],al
   14000361c:	sbb    al,0x54
   14000361e:	ltr    WORD PTR [rsp+rsi*1]
   140003622:	(bad)  
   140003623:	add    BYTE PTR [rdx+rsi*2],bl
   140003626:	sbb    al,dh
   140003628:	(bad)  
   140003629:	loopne 0x14000363f
   14000362b:	rcl    BYTE PTR [rdx],1
   14000362d:	rcl    BYTE PTR [rax],0x70
   140003630:	add    DWORD PTR [rax],ebx
   140003632:	or     al,BYTE PTR [rax]
   140003634:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   140003638:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14000363c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14000363f:	add    BYTE PTR [rax],bl
   140003641:	push   rdx
   140003642:	adc    al,0xf0
   140003644:	adc    ah,al
   140003646:	adc    BYTE PTR [rax+0x1],dh
   140003649:	sbb    cl,BYTE PTR [rcx]
   14000364b:	add    BYTE PTR [rdx],bl
   14000364d:	fs (bad) 
   14000364f:	add    BYTE PTR [rdx],bl
   140003651:	xor    al,0x16
   140003653:	add    BYTE PTR [rdx],bl
   140003655:	add    DWORD PTR [rdx],edx
   140003657:	add    BYTE PTR [rsi],cl
   140003659:	loopne 0x140003667
   14000365b:	jo     0x140003668
   14000365d:	push   rax
   14000365e:	add    BYTE PTR [rax],al
   140003660:	add    DWORD PTR [rbx],ebx
   140003662:	or     al,BYTE PTR [rax]
   140003664:	sbb    esi,DWORD PTR [rdx+rdx*1+0x0]
   140003668:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   14000366c:	sbb    esi,DWORD PTR [rax+rdx*1]
   14000366f:	add    BYTE PTR [rbx],bl
   140003671:	mov    dl,0x14
   140003673:	lock adc ah,al
   140003676:	adc    BYTE PTR [rax+0x19],dl
   140003679:	sub    eax,0x11c000a
   14000367e:	rex.WRB add BYTE PTR [rip+0x9e00bf0],r9b        # 0x149e04275
   140003685:	rol    BYTE PTR [rdi],1
   140003687:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143603afe
   14000368e:	add    dl,BYTE PTR [rax+0x7c]
   140003691:	xor    al,0x0
   140003693:	add    BYTE PTR [rax+0x2],dl
   140003696:	add    BYTE PTR [rax],al
   140003698:	add    DWORD PTR [rip+0xffffffffc2250009],esp        # 0x1022536a7
   14000369e:	(bad)  
   14000369f:	lock sbb al,0xe0
   1400036a2:	sbb    dl,al
   1400036a4:	sbb    al,al
   1400036a6:	(bad)  
   1400036a7:	jo     0x1400036be
   1400036a9:	(bad)  
   1400036aa:	adc    al,0x30
   1400036ac:	adc    edx,DWORD PTR [rax+0x0]
   1400036af:	add    BYTE PTR [rcx],al
   1400036b1:	and    ecx,DWORD PTR [rip+0x1a742300]        # 0x15a7459b7
   1400036b7:	add    BYTE PTR [rbx],ah
   1400036b9:	sbb    DWORD PTR fs:[rax],eax
   1400036bc:	and    esi,DWORD PTR [rax+rbx*1]
   1400036bf:	add    BYTE PTR [rbx],ah
   1400036c1:	add    DWORD PTR [rdx],edx
   1400036c3:	add    BYTE PTR [rax],bl
   1400036c5:	lock (bad) 
   1400036c7:	loopne 0x1400036dd
   1400036c9:	rcl    BYTE PTR [rdx],1
   1400036cb:	rcl    BYTE PTR [rax],0x50
   1400036ce:	add    BYTE PTR [rax],al
   1400036d0:	sbb    DWORD PTR [rdx],ebp
   1400036d2:	add    al,0x0
   1400036d4:	sbb    BYTE PTR [rcx],al
   1400036d6:	(bad)  
   1400036d7:	add    DWORD PTR [rcx],edx
   1400036d9:	jo     0x1400036eb
   1400036db:	xor    BYTE PTR [rsp+rsi*1+0x0],bh
   1400036df:	add    BYTE PTR [rax],ah
   1400036e1:	or     BYTE PTR [rax],al
   1400036e3:	add    BYTE PTR [rcx],al
   1400036e5:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e4248eb
   1400036eb:	jo     0x1400036fa
   1400036ed:	(bad)  
   1400036ee:	or     al,0x50
   1400036f0:	or     esi,DWORD PTR [rax]
	...

Disassembly of section .data:

0000000140004000 <.data>:
   140004000:	add    BYTE PTR [rax],al
   140004002:	add    BYTE PTR [rax],al
   140004004:	add    BYTE PTR [rcx],al
	...
   1400040fe:	add    BYTE PTR [rax],al
   140004100:	add    DWORD PTR [rax],eax
   140004102:	add    BYTE PTR [rax],al
   140004104:	(bad)  
   140004105:	(bad)  
   140004106:	(bad)  
   140004107:	(bad)  
   140004108:	(bad)  
   140004109:	(bad)  
   14000410a:	(bad)  
   14000410b:	inc    DWORD PTR [rax]
   14000410d:	add    BYTE PTR [rax],al
   14000410f:	add    BYTE PTR [rdx],dh
   140004111:	movabs ds:0x5dcd00002b992ddf,al
   14000411a:	and    dl,dl
   14000411c:	data16 (bad) 
   14000411e:	(bad)  
   14000411f:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140005000 <.pdata>:
   140005000:	call   0x19d005016
   140005005:	adc    al,BYTE PTR [rax]
   140005007:	add    ah,ah
   140005009:	add    BYTE PTR ss:[rax],al
   14000500c:	adc    al,BYTE PTR fs:[rax]
   14000500f:	add    ah,bl
   140005011:	adc    al,BYTE PTR [rax]
   140005013:	add    al,dl
   140005015:	add    BYTE PTR ss:[rax],al
   140005018:	in     al,0x12
   14000501a:	add    BYTE PTR [rax],al
   14000501c:	rex.WXB adc rax,0x36b00000
   140005022:	add    BYTE PTR [rax],al
   140005024:	push   rsp
   140005025:	adc    eax,0x18590000
   14000502a:	add    BYTE PTR [rax],al
   14000502c:	cwde   
   14000502d:	add    BYTE PTR ss:[rax],al
   140005030:	(bad)  
   140005031:	sbb    BYTE PTR [rax],al
   140005033:	add    cl,ch
   140005035:	(bad)  
   140005036:	add    BYTE PTR [rax],al
   140005038:	js     0x140005070
   14000503a:	add    BYTE PTR [rax],al
   14000503c:	lock (bad) 
   14000503e:	add    BYTE PTR [rax],al
   140005040:	mov    edx,0x60000020
   140005045:	add    BYTE PTR ss:[rax],al
   140005048:	shl    BYTE PTR [rax],0x0
   14000504b:	add    BYTE PTR [rdx+riz*1+0x0],dl
   14000504f:	add    BYTE PTR [rax+0x36],cl
   140005052:	add    BYTE PTR [rax],al
   140005054:	pop    rsp
   140005055:	and    al,BYTE PTR [rax]
   140005057:	add    BYTE PTR [rip+0x30000024],al        # 0x170005081
   14000505d:	add    BYTE PTR ss:[rax],al
   140005060:	or     al,0x24
   140005062:	add    BYTE PTR [rax],al
   140005064:	xchg   ecx,eax
   140005065:	and    eax,0x36140000
   14000506a:	add    BYTE PTR [rax],al
   14000506c:	cwde   
   14000506d:	and    eax,0x26610000
   140005072:	add    BYTE PTR [rax],al
   140005074:	hlt    
   140005075:	xor    eax,0x26680000
   14000507a:	add    BYTE PTR [rax],al
   14000507c:	cmp    ebp,DWORD PTR [rax]
   14000507e:	add    BYTE PTR [rax],al
   140005080:	fdiv   DWORD PTR [rip+0x28440000]        # 0x168445086
   140005086:	add    BYTE PTR [rax],al
   140005088:	(bad)  
   140005089:	sub    DWORD PTR [rax],eax
   14000508b:	add    al,dl
   14000508d:	xor    eax,0x29680000
   140005092:	add    BYTE PTR [rax],al
   140005094:	rex.WXB sub al,0x0
   140005097:	add    BYTE PTR [rax+0x54000035],bh
   14000509d:	sub    al,0x0
   14000509f:	add    BYTE PTR [rbx],ah
   1400050a1:	sub    eax,0x35140000
   1400050a6:	add    BYTE PTR [rax],al
   1400050a8:	sub    al,0x2d
   1400050aa:	add    BYTE PTR [rax],al
   1400050ac:	jne    0x1400050db
   1400050ae:	add    BYTE PTR [rax],al
   1400050b0:	sbb    al,0x35
   1400050b2:	add    BYTE PTR [rax],al
   1400050b4:	jl     0x1400050e3
   1400050b6:	add    BYTE PTR [rax],al
   1400050b8:	sub    ch,BYTE PTR [rdi]
   1400050ba:	add    BYTE PTR [rax],al
   1400050bc:	and    al,0x35
   1400050be:	add    BYTE PTR [rax],al
   1400050c0:	xor    BYTE PTR [rdi],ch
   1400050c2:	add    BYTE PTR [rax],al
   1400050c4:	rex.X (bad) 
   1400050c6:	add    BYTE PTR [rax],al
   1400050c8:	adc    al,0x35
   1400050ca:	add    BYTE PTR [rax],al
   1400050cc:	mov    BYTE PTR [rdi],ch
   1400050ce:	add    BYTE PTR [rax],al
   1400050d0:	retf   0x2f
   1400050d3:	add    BYTE PTR [rsi*1+0x2fd00000],dl
   1400050da:	add    BYTE PTR [rax],al
   1400050dc:	call   0x154005110
   1400050e1:	xor    eax,0x2ffc0000
   1400050e6:	add    BYTE PTR [rax],al
   1400050e8:	push   rcx
   1400050e9:	xor    BYTE PTR [rax],al
   1400050eb:	add    BYTE PTR [rax+0x35],dl
   1400050ee:	add    BYTE PTR [rax],al
   1400050f0:	pop    rax
   1400050f1:	xor    BYTE PTR [rax],al
   1400050f3:	add    BYTE PTR [rbp-0x4fffffd0],bl
   1400050f9:	xor    eax,0x31400000
   1400050fe:	add    BYTE PTR [rax],al
   140005100:	lea    esi,[rcx]
   140005102:	add    BYTE PTR [rax],al
   140005104:	jo     0x14000513b
   140005106:	add    BYTE PTR [rax],al
   140005108:	xchg   esp,eax
   140005109:	xor    DWORD PTR [rax],eax
   14000510b:	add    BYTE PTR [rax+0x32],ch
   14000510e:	add    BYTE PTR [rax],al
   140005110:	pushf  
   140005111:	xor    eax,0x32940000
   140005116:	add    BYTE PTR [rax],al
   140005118:	int    0x33
   14000511a:	add    BYTE PTR [rax],al
   14000511c:	test   al,0x35
   14000511e:	add    BYTE PTR [rax],al
   140005120:	(bad)  
   140005121:	xor    eax,DWORD PTR [rax]
   140005123:	add    BYTE PTR [rax],cl
   140005125:	xor    al,0x0
   140005127:	add    BYTE PTR [rax+0x10000035],dh
   14000512d:	xor    al,0x0
   14000512f:	add    BYTE PTR [rbx+0x34],dh
   140005132:	add    BYTE PTR [rax],al
   140005134:	mov    al,0x35
   140005136:	add    BYTE PTR [rax],al
   140005138:	jl     0x14000516e
   14000513a:	add    BYTE PTR [rax],al
   14000513c:	cdq    
   14000513d:	xor    al,0x0
   14000513f:	add    BYTE PTR [rsi*1+0x34c60000],dl
   140005146:	add    BYTE PTR [rax],al
   140005148:	in     al,0x34
   14000514a:	add    BYTE PTR [rax],al
   14000514c:	xchg   esp,eax
   14000514d:	xor    eax,0x34f00000
   140005152:	add    BYTE PTR [rax],al
   140005154:	adc    dh,BYTE PTR [rip+0x35940000]        # 0x17594515a
	...

Disassembly of section .idata:

0000000140006000 <.idata>:
   140006000:	movabs al,ds:0x60
   140006009:	add    BYTE PTR [rax],al
   14000600b:	add    BYTE PTR [rsi+0x66],bh
   14000600e:	add    BYTE PTR [rax],al
   140006010:	cmp    BYTE PTR [rbx+0x0],ah
   140006013:	add    BYTE PTR [rax+0x61],dl
	...
   14000601e:	add    BYTE PTR [rax],al
   140006020:	xchg   BYTE PTR [rdi+0x0],ah
   140006023:	add    al,ch
   140006025:	movsxd eax,DWORD PTR [rax]
   140006027:	add    BYTE PTR [rax+0x62],dl
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rax],al
   140006031:	add    BYTE PTR [rax],al
   140006033:	add    BYTE PTR [rax+rbp*2+0x0],dh
   140006037:	add    BYTE PTR [rax],ch
   140006039:	add    BYTE PTR gs:[rax],al
   14000603c:	rex.W (bad) 
	...
   140006046:	add    BYTE PTR [rax],al
   140006048:	ds push 0x0
   14000604b:	add    al,ah
   14000604d:	add    BYTE PTR fs:[rax],al
   140006050:	lock (bad) 
	...
   14000605a:	add    BYTE PTR [rax],al
   14000605c:	imul   eax,DWORD PTR cs:[rax],0x0
   140006060:	mov    BYTE PTR [rbx+0x0],ah
   140006063:	add    BYTE PTR [rax+0x61],al
	...
   14000606e:	add    BYTE PTR [rax],al
   140006070:	rex.WRX imul r8,QWORD PTR [rax],0x0
   140006074:	fsub   DWORD PTR [rbx+0x0]
   140006077:	add    BYTE PTR [rax],bh
   140006079:	(bad)  
	...
   140006082:	add    BYTE PTR [rax],al
   140006084:	push   0xffffffffd000006b
   140006089:	add    BYTE PTR fs:[rax],al
	...
   1400060a0:	shl    BYTE PTR [rbp+0x0],1
   1400060a3:	add    BYTE PTR [rax],al
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    al,ch
   1400060a9:	add    BYTE PTR gs:[rax],al
   1400060ac:	add    BYTE PTR [rax],al
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	cli    
   1400060b1:	add    BYTE PTR gs:[rax],al
   1400060b4:	add    BYTE PTR [rax],al
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	adc    BYTE PTR [rsi+0x0],ah
   1400060bb:	add    BYTE PTR [rax],al
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    BYTE PTR [rsi+riz*2],ah
   1400060c2:	add    BYTE PTR [rax],al
   1400060c4:	add    BYTE PTR [rax],al
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	data16 add BYTE PTR ss:[rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	rex.W
   1400060d1:	data16 add BYTE PTR [rax],al
   1400060d4:	add    BYTE PTR [rax],al
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	pop    rdx
   1400060d9:	data16 add BYTE PTR [rax],al
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	outs   dx,BYTE PTR ds:[rsi]
   1400060e1:	data16 add BYTE PTR [rax],al
	...
   1400060f0:	pushw  0x0
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rax+0x6a],bh
   1400060fa:	add    BYTE PTR [rax],al
   1400060fc:	add    BYTE PTR [rax],al
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	mov    BYTE PTR [rdx+0x0],ch
   140006103:	add    BYTE PTR [rax],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rsi+0x6a],ah
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rax+0x6a],bh
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    dh,dl
   140006119:	push   0x0
   14000611b:	add    BYTE PTR [rax],al
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    dl,dh
   140006121:	push   0x0
   140006123:	add    BYTE PTR [rax],al
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    BYTE PTR [rsi],dl
   140006129:	imul   eax,DWORD PTR [rax],0x0
   14000612c:	add    BYTE PTR [rax],al
   14000612e:	add    BYTE PTR [rax],al
   140006130:	rex.WX push 0x0
	...
   14000613f:	add    BYTE PTR [rdx],bh
   140006141:	imul   eax,DWORD PTR [rax],0x0
	...
   140006150:	ins    BYTE PTR es:[rdi],dx
   140006151:	add    BYTE PTR [eax],al
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	jp     0x1400061c1
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax],al
   140006160:	(bad)  
   140006161:	push   0x0
   140006166:	add    BYTE PTR [rax],al
   140006168:	push   rsi
   140006169:	add    BYTE PTR [eax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	rex.W
   140006171:	add    BYTE PTR [eax],al
   140006174:	add    BYTE PTR [rax],al
   140006176:	add    BYTE PTR [rax],al
   140006178:	cmp    BYTE PTR [rdi+0x0],ah
   14000617b:	add    BYTE PTR [rax],al
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    BYTE PTR [rdi+riz*2],dl
   140006182:	add    BYTE PTR [rax],al
   140006184:	add    BYTE PTR [rax],al
   140006186:	add    BYTE PTR [rax],al
   140006188:	or     BYTE PTR [rdi+0x0],ah
   14000618b:	add    BYTE PTR [rax],al
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    dh,dh
   140006191:	data16 add BYTE PTR [rax],al
   140006194:	add    BYTE PTR [rax],al
   140006196:	add    BYTE PTR [rax],al
   140006198:	loop   0x140006200
   14000619a:	add    BYTE PTR [rax],al
   14000619c:	add    BYTE PTR [rax],al
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	int3   
   1400061a1:	data16 add BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	shl    BYTE PTR [rsi+0x0],0x0
   1400061ac:	add    BYTE PTR [rax],al
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	scas   al,BYTE PTR es:[rdi]
   1400061b1:	data16 add BYTE PTR [rax],al
   1400061b4:	add    BYTE PTR [rax],al
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	(bad)  
   1400061b9:	data16 add BYTE PTR [rax],al
   1400061bc:	add    BYTE PTR [rax],al
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	mov    WORD PTR [rsi+0x0],fs
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rdx],ah
   1400061c9:	add    BYTE PTR [eax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	pushf  
   1400061d1:	imul   eax,DWORD PTR [rax],0x0
   1400061d7:	add    BYTE PTR [rax+0x69],cl
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rcx+rbp*2+0x0],ch
   1400061e3:	add    BYTE PTR [rax],al
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rdx+0x68],bh
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rax+0x69],bl
   1400061f2:	add    BYTE PTR [rax],al
   1400061f4:	add    BYTE PTR [rax],al
   1400061f6:	add    BYTE PTR [rax],al
   1400061f8:	imul   eax,DWORD PTR ds:[rax],0x0
   1400061ff:	add    BYTE PTR [rdx],ch
   140006201:	imul   eax,DWORD PTR [rax],0x0
   140006207:	add    BYTE PTR [rdx],bl
   140006209:	imul   eax,DWORD PTR [rax],0x0
   14000620f:	add    BYTE PTR [rax],al
   140006211:	imul   eax,DWORD PTR [rax],0x0
   140006217:	add    dl,ch
   140006219:	push   0x0
   14000621e:	add    BYTE PTR [rax],al
   140006220:	xchg   esp,eax
   140006221:	push   0x0
   140006226:	add    BYTE PTR [rax],al
   140006228:	pushf  
   140006229:	push   0x0
	...
   140006236:	add    BYTE PTR [rax],al
   140006238:	pop    rdx
   140006239:	imul   eax,DWORD PTR [rax],0x0
	...
   140006248:	sub    al,0x6a
   14000624a:	add    BYTE PTR [rax],al
   14000624c:	add    BYTE PTR [rax],al
   14000624e:	add    BYTE PTR [rax],al
   140006250:	sbb    BYTE PTR [rdx+0x0],ch
   140006253:	add    BYTE PTR [rax],al
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    BYTE PTR [rdx+rbp*2],cl
   14000625a:	add    BYTE PTR [rax],al
   14000625c:	add    BYTE PTR [rax],al
   14000625e:	add    BYTE PTR [rax],al
   140006260:	imul   BYTE PTR [rcx+0x0]
   140006263:	add    BYTE PTR [rax],al
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    al,ch
   140006269:	imul   eax,DWORD PTR [rax],0x0
   14000626f:	add    ah,dl
   140006271:	imul   eax,DWORD PTR [rax],0x0
   140006277:	add    dl,al
   140006279:	imul   eax,DWORD PTR [rax],0x0
   14000627f:	add    BYTE PTR [rax+0x69],dh
	...
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    BYTE PTR [rsi+0x68],al
   140006292:	add    BYTE PTR [rax],al
   140006294:	add    BYTE PTR [rax],al
   140006296:	add    BYTE PTR [rax],al
   140006298:	pop    rsi
   140006299:	push   0x0
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	sub    BYTE PTR [rax+0x0],0x0
   1400062a4:	add    BYTE PTR [rax],al
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	cmp    ch,BYTE PTR [rax+0x0]
   1400062ab:	add    BYTE PTR [rax],al
   1400062ad:	add    BYTE PTR [rax],al
   1400062af:	add    BYTE PTR [rsi],ah
   1400062b1:	push   0x0
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	sbb    al,0x68
   1400062ba:	add    BYTE PTR [rax],al
   1400062bc:	add    BYTE PTR [rax],al
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	adc    al,0x68
   1400062c2:	add    BYTE PTR [rax],al
   1400062c4:	add    BYTE PTR [rax],al
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	or     al,0x68
   1400062ca:	add    BYTE PTR [rax],al
   1400062cc:	add    BYTE PTR [rax],al
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	cli    
   1400062d1:	add    BYTE PTR [eax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	call   0x140006344
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    dl,bl
   1400062e1:	add    BYTE PTR [eax],al
   1400062e4:	add    BYTE PTR [rax],al
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	int3   
   1400062e9:	add    BYTE PTR [eax],al
   1400062ec:	add    BYTE PTR [rax],al
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	(bad)  
   1400062f1:	add    BYTE PTR [eax],al
   1400062f4:	add    BYTE PTR [rax],al
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	mov    dh,0x67
   1400062fa:	add    BYTE PTR [rax],al
   1400062fc:	add    BYTE PTR [rax],al
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	lods   al,BYTE PTR ds:[rsi]
   140006301:	add    BYTE PTR [eax],al
   140006304:	add    BYTE PTR [rax],al
   140006306:	add    BYTE PTR [rax],al
   140006308:	movabs al,ds:0x9400000000000067
   140006311:	add    BYTE PTR [eax],al
   140006314:	add    BYTE PTR [rax],al
   140006316:	add    BYTE PTR [rax],al
   140006318:	push   0x68
   14000631d:	add    BYTE PTR [rax],al
   14000631f:	add    BYTE PTR [rbx+rbp*2+0x0],dh
   140006323:	add    BYTE PTR [rax],al
   140006325:	add    BYTE PTR [rax],al
   140006327:	add    BYTE PTR [rsi+0x6b],bh
	...
   140006336:	add    BYTE PTR [rax],al
   140006338:	shl    BYTE PTR [rbp+0x0],1
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    al,ch
   140006341:	add    BYTE PTR gs:[rax],al
   140006344:	add    BYTE PTR [rax],al
   140006346:	add    BYTE PTR [rax],al
   140006348:	cli    
   140006349:	add    BYTE PTR gs:[rax],al
   14000634c:	add    BYTE PTR [rax],al
   14000634e:	add    BYTE PTR [rax],al
   140006350:	adc    BYTE PTR [rsi+0x0],ah
   140006353:	add    BYTE PTR [rax],al
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rsi+riz*2],ah
   14000635a:	add    BYTE PTR [rax],al
   14000635c:	add    BYTE PTR [rax],al
   14000635e:	add    BYTE PTR [rax],al
   140006360:	data16 add BYTE PTR ss:[rax],al
   140006364:	add    BYTE PTR [rax],al
   140006366:	add    BYTE PTR [rax],al
   140006368:	rex.W
   140006369:	data16 add BYTE PTR [rax],al
   14000636c:	add    BYTE PTR [rax],al
   14000636e:	add    BYTE PTR [rax],al
   140006370:	pop    rdx
   140006371:	data16 add BYTE PTR [rax],al
   140006374:	add    BYTE PTR [rax],al
   140006376:	add    BYTE PTR [rax],al
   140006378:	outs   dx,BYTE PTR ds:[rsi]
   140006379:	data16 add BYTE PTR [rax],al
	...
   140006388:	pushw  0x0
   14000638b:	add    BYTE PTR [rax],al
   14000638d:	add    BYTE PTR [rax],al
   14000638f:	add    BYTE PTR [rax+0x6a],bh
   140006392:	add    BYTE PTR [rax],al
   140006394:	add    BYTE PTR [rax],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	mov    BYTE PTR [rdx+0x0],ch
   14000639b:	add    BYTE PTR [rax],al
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rsi+0x6a],ah
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    BYTE PTR [rax+0x6a],bh
   1400063ad:	add    BYTE PTR [rax],al
   1400063af:	add    dh,dl
   1400063b1:	push   0x0
   1400063b3:	add    BYTE PTR [rax],al
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    dl,dh
   1400063b9:	push   0x0
   1400063bb:	add    BYTE PTR [rax],al
   1400063bd:	add    BYTE PTR [rax],al
   1400063bf:	add    BYTE PTR [rsi],dl
   1400063c1:	imul   eax,DWORD PTR [rax],0x0
   1400063c4:	add    BYTE PTR [rax],al
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	rex.WX push 0x0
	...
   1400063d7:	add    BYTE PTR [rdx],bh
   1400063d9:	imul   eax,DWORD PTR [rax],0x0
	...
   1400063e8:	ins    BYTE PTR es:[rdi],dx
   1400063e9:	add    BYTE PTR [eax],al
   1400063ec:	add    BYTE PTR [rax],al
   1400063ee:	add    BYTE PTR [rax],al
   1400063f0:	jp     0x140006459
   1400063f2:	add    BYTE PTR [rax],al
   1400063f4:	add    BYTE PTR [rax],al
   1400063f6:	add    BYTE PTR [rax],al
   1400063f8:	(bad)  
   1400063f9:	push   0x0
   1400063fe:	add    BYTE PTR [rax],al
   140006400:	push   rsi
   140006401:	add    BYTE PTR [eax],al
   140006404:	add    BYTE PTR [rax],al
   140006406:	add    BYTE PTR [rax],al
   140006408:	rex.W
   140006409:	add    BYTE PTR [eax],al
   14000640c:	add    BYTE PTR [rax],al
   14000640e:	add    BYTE PTR [rax],al
   140006410:	cmp    BYTE PTR [rdi+0x0],ah
   140006413:	add    BYTE PTR [rax],al
   140006415:	add    BYTE PTR [rax],al
   140006417:	add    BYTE PTR [rdi+riz*2],dl
   14000641a:	add    BYTE PTR [rax],al
   14000641c:	add    BYTE PTR [rax],al
   14000641e:	add    BYTE PTR [rax],al
   140006420:	or     BYTE PTR [rdi+0x0],ah
   140006423:	add    BYTE PTR [rax],al
   140006425:	add    BYTE PTR [rax],al
   140006427:	add    dh,dh
   140006429:	data16 add BYTE PTR [rax],al
   14000642c:	add    BYTE PTR [rax],al
   14000642e:	add    BYTE PTR [rax],al
   140006430:	loop   0x140006498
   140006432:	add    BYTE PTR [rax],al
   140006434:	add    BYTE PTR [rax],al
   140006436:	add    BYTE PTR [rax],al
   140006438:	int3   
   140006439:	data16 add BYTE PTR [rax],al
   14000643c:	add    BYTE PTR [rax],al
   14000643e:	add    BYTE PTR [rax],al
   140006440:	shl    BYTE PTR [rsi+0x0],0x0
   140006444:	add    BYTE PTR [rax],al
   140006446:	add    BYTE PTR [rax],al
   140006448:	scas   al,BYTE PTR es:[rdi]
   140006449:	data16 add BYTE PTR [rax],al
   14000644c:	add    BYTE PTR [rax],al
   14000644e:	add    BYTE PTR [rax],al
   140006450:	(bad)  
   140006451:	data16 add BYTE PTR [rax],al
   140006454:	add    BYTE PTR [rax],al
   140006456:	add    BYTE PTR [rax],al
   140006458:	mov    WORD PTR [rsi+0x0],fs
   14000645b:	add    BYTE PTR [rax],al
   14000645d:	add    BYTE PTR [rax],al
   14000645f:	add    BYTE PTR [rdx],ah
   140006461:	add    BYTE PTR [eax],al
   140006464:	add    BYTE PTR [rax],al
   140006466:	add    BYTE PTR [rax],al
   140006468:	pushf  
   140006469:	imul   eax,DWORD PTR [rax],0x0
   14000646f:	add    BYTE PTR [rax+0x69],cl
   140006475:	add    BYTE PTR [rax],al
   140006477:	add    BYTE PTR [rcx+rbp*2+0x0],ch
   14000647b:	add    BYTE PTR [rax],al
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rdx+0x68],bh
   140006485:	add    BYTE PTR [rax],al
   140006487:	add    BYTE PTR [rax+0x69],bl
   14000648a:	add    BYTE PTR [rax],al
   14000648c:	add    BYTE PTR [rax],al
   14000648e:	add    BYTE PTR [rax],al
   140006490:	imul   eax,DWORD PTR ds:[rax],0x0
   140006497:	add    BYTE PTR [rdx],ch
   140006499:	imul   eax,DWORD PTR [rax],0x0
   14000649f:	add    BYTE PTR [rdx],bl
   1400064a1:	imul   eax,DWORD PTR [rax],0x0
   1400064a7:	add    BYTE PTR [rax],al
   1400064a9:	imul   eax,DWORD PTR [rax],0x0
   1400064af:	add    dl,ch
   1400064b1:	push   0x0
   1400064b6:	add    BYTE PTR [rax],al
   1400064b8:	xchg   esp,eax
   1400064b9:	push   0x0
   1400064be:	add    BYTE PTR [rax],al
   1400064c0:	pushf  
   1400064c1:	push   0x0
	...
   1400064ce:	add    BYTE PTR [rax],al
   1400064d0:	pop    rdx
   1400064d1:	imul   eax,DWORD PTR [rax],0x0
	...
   1400064e0:	sub    al,0x6a
   1400064e2:	add    BYTE PTR [rax],al
   1400064e4:	add    BYTE PTR [rax],al
   1400064e6:	add    BYTE PTR [rax],al
   1400064e8:	sbb    BYTE PTR [rdx+0x0],ch
   1400064eb:	add    BYTE PTR [rax],al
   1400064ed:	add    BYTE PTR [rax],al
   1400064ef:	add    BYTE PTR [rdx+rbp*2],cl
   1400064f2:	add    BYTE PTR [rax],al
   1400064f4:	add    BYTE PTR [rax],al
   1400064f6:	add    BYTE PTR [rax],al
   1400064f8:	imul   BYTE PTR [rcx+0x0]
   1400064fb:	add    BYTE PTR [rax],al
   1400064fd:	add    BYTE PTR [rax],al
   1400064ff:	add    al,ch
   140006501:	imul   eax,DWORD PTR [rax],0x0
   140006507:	add    ah,dl
   140006509:	imul   eax,DWORD PTR [rax],0x0
   14000650f:	add    dl,al
   140006511:	imul   eax,DWORD PTR [rax],0x0
   140006517:	add    BYTE PTR [rax+0x69],dh
	...
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    BYTE PTR [rsi+0x68],al
   14000652a:	add    BYTE PTR [rax],al
   14000652c:	add    BYTE PTR [rax],al
   14000652e:	add    BYTE PTR [rax],al
   140006530:	pop    rsi
   140006531:	push   0x0
   140006536:	add    BYTE PTR [rax],al
   140006538:	sub    BYTE PTR [rax+0x0],0x0
   14000653c:	add    BYTE PTR [rax],al
   14000653e:	add    BYTE PTR [rax],al
   140006540:	cmp    ch,BYTE PTR [rax+0x0]
   140006543:	add    BYTE PTR [rax],al
   140006545:	add    BYTE PTR [rax],al
   140006547:	add    BYTE PTR [rsi],ah
   140006549:	push   0x0
   14000654e:	add    BYTE PTR [rax],al
   140006550:	sbb    al,0x68
   140006552:	add    BYTE PTR [rax],al
   140006554:	add    BYTE PTR [rax],al
   140006556:	add    BYTE PTR [rax],al
   140006558:	adc    al,0x68
   14000655a:	add    BYTE PTR [rax],al
   14000655c:	add    BYTE PTR [rax],al
   14000655e:	add    BYTE PTR [rax],al
   140006560:	or     al,0x68
   140006562:	add    BYTE PTR [rax],al
   140006564:	add    BYTE PTR [rax],al
   140006566:	add    BYTE PTR [rax],al
   140006568:	cli    
   140006569:	add    BYTE PTR [eax],al
   14000656c:	add    BYTE PTR [rax],al
   14000656e:	add    BYTE PTR [rax],al
   140006570:	call   0x1400065dc
   140006575:	add    BYTE PTR [rax],al
   140006577:	add    dl,bl
   140006579:	add    BYTE PTR [eax],al
   14000657c:	add    BYTE PTR [rax],al
   14000657e:	add    BYTE PTR [rax],al
   140006580:	int3   
   140006581:	add    BYTE PTR [eax],al
   140006584:	add    BYTE PTR [rax],al
   140006586:	add    BYTE PTR [rax],al
   140006588:	(bad)  
   140006589:	add    BYTE PTR [eax],al
   14000658c:	add    BYTE PTR [rax],al
   14000658e:	add    BYTE PTR [rax],al
   140006590:	mov    dh,0x67
   140006592:	add    BYTE PTR [rax],al
   140006594:	add    BYTE PTR [rax],al
   140006596:	add    BYTE PTR [rax],al
   140006598:	lods   al,BYTE PTR ds:[rsi]
   140006599:	add    BYTE PTR [eax],al
   14000659c:	add    BYTE PTR [rax],al
   14000659e:	add    BYTE PTR [rax],al
   1400065a0:	movabs al,ds:0x9400000000000067
   1400065a9:	add    BYTE PTR [eax],al
   1400065ac:	add    BYTE PTR [rax],al
   1400065ae:	add    BYTE PTR [rax],al
   1400065b0:	push   0x68
   1400065b5:	add    BYTE PTR [rax],al
   1400065b7:	add    BYTE PTR [rbx+rbp*2+0x0],dh
   1400065bb:	add    BYTE PTR [rax],al
   1400065bd:	add    BYTE PTR [rax],al
   1400065bf:	add    BYTE PTR [rsi+0x6b],bh
	...
   1400065ce:	add    BYTE PTR [rax],al
   1400065d0:	rol    DWORD PTR [rax],0x43
   1400065d3:	jb     0x14000664e
   1400065d5:	jo     0x14000664b
   1400065d7:	movsxd esi,DWORD PTR [r9+0x75]
   1400065db:	imul   esi,DWORD PTR [rdx+0x65],0x746e6f43
   1400065e2:	gs js  0x140006659
   1400065e5:	push   rdi
   1400065e6:	add    BYTE PTR [rax],al
   1400065e8:	(bad)
   1400065eb:	jb     0x140006666
   1400065ed:	jo     0x140006663
   1400065ef:	rex.R
   1400065f0:	gs jb  0x14000665c
   1400065f3:	jbe    0x14000665a
   1400065f5:	rex.WXB
   1400065f6:	gs jns 0x1400065f9
   1400065f9:	add    bl,bl
   1400065fb:	add    BYTE PTR [rbx+0x72],al
   1400065fe:	jns    0x140006670
   140006600:	je     0x140006654
   140006602:	gs ins BYTE PTR es:[rdi],dx
   140006604:	gs (bad) 
   140006606:	jae    0x14000666d
   140006608:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000660a:	outs   dx,BYTE PTR ds:[rsi]
   14000660b:	je     0x140006672
   14000660d:	js     0x140006683
   14000660f:	add    dh,dl
   140006611:	add    BYTE PTR [rbx+0x72],al
   140006614:	jns    0x140006686
   140006616:	je     0x14000665f
   140006618:	gs je  0x14000666b
   14000661b:	jb     0x14000668c
   14000661d:	jbe    0x14000666f
   14000661f:	(bad)  
   140006620:	jb     0x140006683
   140006622:	ins    DWORD PTR es:[rdi],dx
   140006623:	add    dl,bl
   140006625:	add    BYTE PTR [rbx+0x72],al
   140006628:	jns    0x14000669a
   14000662a:	je     0x140006675
   14000662c:	ins    DWORD PTR es:[rdi],dx
   14000662d:	jo     0x14000669e
   14000662f:	jb     0x1400066a5
   140006631:	rex.WXB
   140006632:	gs jns 0x140006635
   140006635:	add    bl,al
   140006637:	add    BYTE PTR [rbx+0x72],al
   14000663a:	jns    0x1400066ac
   14000663c:	je     0x140006681
   14000663e:	jb     0x1400066a5
   140006640:	(bad)  
   140006641:	je     0x1400066a8
   140006643:	rex.W (bad) 
   140006645:	jae    0x1400066af
   140006647:	add    bh,al
   140006649:	add    BYTE PTR [rbx+0x72],al
   14000664c:	jns    0x1400066be
   14000664e:	je     0x140006694
   140006650:	gs jae 0x1400066c7
   140006653:	jb     0x1400066c4
   140006655:	jns    0x1400066a2
   140006657:	gs jns 0x14000665a
   14000665a:	mov    BYTE PTR [rax],0x43
   14000665d:	jb     0x1400066d8
   14000665f:	jo     0x1400066d5
   140006661:	rex.R
   140006662:	gs jae 0x1400066d9
   140006665:	jb     0x1400066d6
   140006667:	jns    0x1400066b1
   140006669:	(bad)  
   14000666a:	jae    0x1400066d4
   14000666c:	add    BYTE PTR [rax],al
   14000666e:	fadd   DWORD PTR [rax]
   140006670:	rex.XB jb 0x1400066ec
   140006673:	jo     0x1400066e9
   140006675:	rex.W (bad) 
   140006677:	jae    0x1400066e1
   140006679:	rex.R (bad) 
   14000667b:	je     0x1400066de
   14000667d:	add    BYTE PTR [rcx+0x44],al
   140006680:	push   rsi
   140006681:	push   r8
   140006683:	xor    rsi,QWORD PTR [r10]
   140006686:	cs fs ins BYTE PTR es:[rdi],dx
   140006689:	ins    BYTE PTR es:[rdi],dx
   14000668a:	add    BYTE PTR [rax],al
   14000668c:	pop    rbx
   14000668d:	add    al,BYTE PTR [rdi+0x65]
   140006690:	je     0x1400066d8
   140006692:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   14000669a:	xchg   DWORD PTR [rdx],eax
   14000669c:	rex.RXB
   14000669d:	gs je  0x1400066ed
   1400066a0:	outs   dx,DWORD PTR ds:[rsi]
   1400066a1:	fs jne 0x140006710
   1400066a4:	gs rex.W (bad) 
   1400066a7:	outs   dx,BYTE PTR ds:[rsi]
   1400066a8:	fs ins BYTE PTR es:[rdi],dx
   1400066aa:	gs push rdi
   1400066ac:	add    BYTE PTR [rax],al
   1400066ae:	rol    DWORD PTR [rdx],0x47
   1400066b1:	gs je  0x140006704
   1400066b4:	jb     0x140006725
   1400066b6:	movsxd esp,DWORD PTR [rbp+0x73]
   1400066b9:	jae    0x140006703
   1400066bb:	gs (bad) 
   1400066bd:	jo     0x1400066bf
   1400066bf:	add    BYTE PTR [rcx],al
   1400066c1:	(bad)  
   1400066c2:	push   rdi
   1400066c3:	jb     0x14000672e
   1400066c5:	je     0x14000672c
   1400066c7:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x695705ed
   1400066d0:	fs gs rex.XB push 0x6f547261
   1400066d8:	rex.WRB jne 0x140006747
   1400066db:	je     0x140006746
   1400066dd:	rex.X jns 0x140006754
   1400066e0:	add    BYTE PTR gs:[rcx],bl
   1400066e3:	add    al,BYTE PTR [rdi+0x65]
   1400066e6:	je     0x14000672b
   1400066e8:	outs   dx,DWORD PTR ds:[rsi]
   1400066e9:	outs   dx,BYTE PTR ds:[rsi]
   1400066ea:	jae    0x14000675b
   1400066ec:	ins    BYTE PTR es:[rdi],dx
   1400066ed:	gs push rdi
   1400066ef:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400066f6:	mov    edx,0x726f4601
   1400066fb:	ins    DWORD PTR es:[rdi],dx
   1400066fc:	(bad)  
   1400066fd:	je     0x14000674c
   1400066ff:	gs jae 0x140006775
   140006702:	(bad)  
   140006703:	addr32 gs push rdi
   140006706:	add    BYTE PTR [rax],al
   140006708:	pop    rsp
   140006709:	add    al,0x52
   14000670b:	gs (bad) 
   14000670d:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x4300d600
   140006717:	jb     0x14000677e
   140006719:	(bad)  
   14000671a:	je     0x140006781
   14000671c:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4d03ef00
   140006725:	jne    0x140006793
   140006727:	je     0x140006792
   140006729:	rex.X jns 0x1400067a0
   14000672c:	gs push rsp
   14000672e:	outs   dx,DWORD PTR ds:[rsi]
   14000672f:	push   rdi
   140006730:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140006738:	jo     0x14000673c
   14000673a:	rex.RXB
   14000673b:	gs je  0x14000678a
   14000673e:	(bad)  
   14000673f:	jae    0x1400067b5
   140006741:	rex.RB jb 0x1400067b6
   140006744:	outs   dx,DWORD PTR ds:[rsi]
   140006745:	jb     0x140006747
   140006747:	add    ah,cl
   140006749:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14000674d:	(bad)  
   14000674e:	ins    BYTE PTR es:[rdi],dx
   14000674f:	rex.B ins BYTE PTR es:[rdi],dx
   140006751:	ins    BYTE PTR es:[rdi],dx
   140006752:	outs   dx,DWORD PTR ds:[rsi]
   140006753:	movsxd eax,DWORD PTR [rax]
   140006755:	add    BYTE PTR [rsi+0x3],bl
   140006758:	rex.W
   140006759:	gs (bad) 
   14000675b:	jo     0x1400067b0
   14000675d:	gs je  0x1400067a9
   140006760:	outs   dx,BYTE PTR ds:[rsi]
   140006761:	outs   dx,WORD PTR ds:[rsi]
   140006763:	jb     0x1400067d2
   140006765:	(bad)  
   140006766:	je     0x1400067d1
   140006768:	outs   dx,DWORD PTR ds:[rsi]
   140006769:	outs   dx,BYTE PTR ds:[rsi]
   14000676a:	add    BYTE PTR [rax],al
   14000676c:	mov    es,WORD PTR [rax]
   14000676e:	rex.XB ins BYTE PTR es:[rdi],dx
   140006770:	outs   dx,DWORD PTR ds:[rsi]
   140006771:	jae    0x1400067d8
   140006773:	rex.W (bad) 
   140006775:	outs   dx,BYTE PTR ds:[rsi]
   140006776:	fs ins BYTE PTR es:[rdi],dx
   140006778:	gs add al,dl
   14000677b:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14000677f:	(bad)  
   140006780:	ins    BYTE PTR es:[rdi],dx
   140006781:	rex.RX jb 0x1400067e9
   140006784:	add    BYTE PTR gs:[rbx+0x45],cl
   140006788:	push   rdx
   140006789:	rex.WRX
   14000678a:	rex.RB
   14000678b:	xor    r14,QWORD PTR [rdx]
   14000678e:	cs fs ins BYTE PTR es:[rdi],dx
   140006791:	ins    BYTE PTR es:[rdi],dx
   140006792:	add    BYTE PTR [rax],al
   140006794:	jl     0x140006799
   140006796:	pop    rdi
   140006797:	ja     0x1400067fc
   140006799:	jae    0x140006804
   14000679b:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000679e:	add    BYTE PTR [rax],al
   1400067a0:	in     al,0x4
   1400067a2:	jbe    0x14000680a
   1400067a4:	ja     0x140006816
   1400067a6:	jb     0x140006811
   1400067a8:	outs   dx,BYTE PTR ds:[rsi]
   1400067a9:	je     0x140006811
   1400067ab:	add    BYTE PTR [rdi],dh
   1400067ad:	add    al,0x66
   1400067af:	jo     0x140006823
   1400067b1:	imul   ebp,DWORD PTR [rsi+0x74],0x35b0066
   1400067b8:	pop    rdi
   1400067b9:	jbe    0x14000682e
   1400067bb:	outs   dx,BYTE PTR ds:[rsi]
   1400067bc:	ja     0x14000682e
   1400067be:	jb     0x140006829
   1400067c0:	outs   dx,BYTE PTR ds:[rsi]
   1400067c1:	je     0x140006829
   1400067c3:	add    BYTE PTR [rdx+0x1],dh
   1400067c6:	pop    rdi
   1400067c7:	imul   ebp,DWORD PTR [rdi+0x62],0x520000
   1400067ce:	pop    rdi
   1400067cf:	pop    rax
   1400067d0:	movsxd esi,DWORD PTR [rax+0x74]
   1400067d3:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xa00072
   1400067dc:	pop    rdi
   1400067dd:	(bad)  
   1400067de:	ins    DWORD PTR es:[rdi],dx
   1400067df:	jae    0x140006848
   1400067e1:	pop    rdi
   1400067e2:	gs js  0x14000684e
   1400067e5:	je     0x1400067e7
   1400067e7:	add    BYTE PTR [rdi+0x775f5f00],cl
   1400067ed:	addr32 gs je 0x14000685e
   1400067f1:	(bad)  
   1400067f2:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400067f9:	add    BYTE PTR [rax+0x735f5f00],al
   1400067ff:	gs je  0x140006861
   140006802:	(bad)  
   140006803:	jo     0x140006875
   140006805:	pop    rdi
   140006806:	je     0x140006881
   140006808:	jo     0x14000686f
   14000680a:	add    BYTE PTR [rax],al
   14000680c:	and    al,0x4
   14000680e:	gs js  0x14000687a
   140006811:	je     0x140006813
   140006813:	add    BYTE PTR [rax],al
   140006815:	add    DWORD PTR [rdi+0x65],ebx
   140006818:	js     0x140006883
   14000681a:	je     0x14000681c
   14000681c:	mov    bl,0x0
   14000681e:	pop    rdi
   14000681f:	movsxd esp,DWORD PTR [rbp+0x78]
   140006822:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0082
   14000682a:	jae    0x140006891
   14000682c:	je     0x1400068a3
   14000682e:	jae    0x140006895
   140006830:	jb     0x14000689f
   140006832:	(bad)  
   140006833:	je     0x14000689d
   140006835:	gs jb  0x1400068aa
   140006838:	add    BYTE PTR [rax],al
   14000683a:	outs   dx,DWORD PTR ds:[rsi]
   14000683b:	add    DWORD PTR [rdi+0x69],ebx
   14000683e:	outs   dx,BYTE PTR ds:[rsi]
   14000683f:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x53006d72
   140006847:	add    BYTE PTR [rdi+0x5f],bl
   14000684a:	rex.XB pop r15
   14000684c:	jae    0x1400068be
   14000684e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140006852:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140006859:	ins    BYTE PTR es:[rdi],dx
   14000685a:	gs jb  0x14000685d
   14000685d:	add    BYTE PTR [rcx],bl
   14000685f:	add    DWORD PTR [rdi+0x66],ebx
   140006862:	ins    DWORD PTR es:[rdi],dx
   140006863:	outs   dx,DWORD PTR ds:[rsi]
   140006864:	fs add BYTE PTR gs:[rax],al
   140006868:	(bad)  
   140006869:	add    BYTE PTR [rdi+0x63],bl
   14000686c:	outs   dx,DWORD PTR ds:[rsi]
   14000686d:	ins    DWORD PTR es:[rdi],dx
   14000686e:	ins    DWORD PTR es:[rdi],dx
   14000686f:	outs   dx,DWORD PTR ds:[rsi]
   140006870:	fs add BYTE PTR gs:[rax],al
   140006874:	ins    DWORD PTR es:[rdi],dx
   140006875:	jae    0x1400068ed
   140006877:	movsxd esi,DWORD PTR [rdx+0x74]
   14000687a:	cs fs ins BYTE PTR es:[rdi],dx
   14000687d:	ins    BYTE PTR es:[rdi],dx
   14000687e:	add    BYTE PTR [rax],al
   140006880:	xor    BYTE PTR [rax],al
   140006882:	(bad)  
   140006883:	je     0x1400068ea
   140006885:	jb     0x1400068f4
   140006887:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000688e:	pop    rcx
   14000688f:	pop    r8
   140006891:	pop    rax
   140006892:	pop    rdx
   140006893:	add    BYTE PTR [rsi+0x5],ch
   140006896:	push   rbx
   140006897:	ins    BYTE PTR es:[rdi],dx
   140006898:	gs gs jo 0x14000689c
   14000689c:	pop    rdi
   14000689d:	add    eax,0x55746553
   1400068a2:	outs   dx,BYTE PTR ds:[rsi]
   1400068a3:	push   0x6c646e61
   1400068a8:	gs fs rex.RB js 0x140006910
   1400068ad:	gs jo  0x140006924
   1400068b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400068b7:	gs jb  0x1400068ba
   1400068ba:	(bad)  
   1400068bb:	add    al,0x51
   1400068bd:	jne    0x140006924
   1400068bf:	jb     0x14000693a
   1400068c1:	push   rax
   1400068c2:	gs jb  0x14000692b
   1400068c5:	outs   dx,DWORD PTR ds:[rsi]
   1400068c6:	jb     0x140006935
   1400068c8:	(bad)  
   1400068c9:	outs   dx,BYTE PTR ds:[rsi]
   1400068ca:	movsxd esp,DWORD PTR [rbp+0x43]
   1400068cd:	outs   dx,DWORD PTR ds:[rsi]
   1400068ce:	jne    0x14000693e
   1400068d0:	je     0x140006937
   1400068d2:	jb     0x1400068d4
   1400068d4:	sub    al,BYTE PTR [rdx]
   1400068d6:	rex.RXB
   1400068d7:	gs je  0x14000691d
   1400068da:	jne    0x14000694e
   1400068dc:	jb     0x140006943
   1400068de:	outs   dx,BYTE PTR ds:[rsi]
   1400068df:	je     0x140006931
   1400068e1:	jb     0x140006952
   1400068e3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400068e6:	jae    0x140006931
   1400068e8:	add    BYTE PTR fs:[rsi],ch
   1400068eb:	add    al,BYTE PTR [rdi+0x65]
   1400068ee:	je     0x140006933
   1400068f0:	jne    0x140006964
   1400068f2:	jb     0x140006959
   1400068f4:	outs   dx,BYTE PTR ds:[rsi]
   1400068f5:	je     0x14000694b
   1400068f7:	push   0x64616572
   1400068fc:	rex.WB
   1400068fd:	add    BYTE PTR fs:[rax],al
   140006900:	sti    
   140006901:	add    al,BYTE PTR [rdi+0x65]
   140006904:	je     0x140006959
   140006906:	jns    0x14000697b
   140006908:	je     0x14000696f
   14000690a:	ins    DWORD PTR es:[rdi],dx
   14000690b:	push   rsp
   14000690c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140006913:	ins    BYTE PTR es:[rdi],dx
   140006914:	gs push rsp
   140006916:	imul   ebp,DWORD PTR [rbp+0x65],0x47031700
   14000691d:	gs je  0x140006974
   140006920:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140006927:	je     0x140006929
   140006929:	add    BYTE PTR [rbx+0x6c745204],bh
   14000692f:	rex.XB (bad) 
   140006931:	jo     0x1400069a7
   140006933:	jne    0x1400069a7
   140006935:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140006938:	outs   dx,BYTE PTR ds:[rsi]
   140006939:	je     0x1400069a0
   14000693b:	js     0x1400069b1
   14000693d:	add    dl,al
   14000693f:	add    al,0x52
   140006941:	je     0x1400069af
   140006943:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140006945:	outs   dx,DWORD PTR ds:[rsi]
   140006946:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000694a:	jne    0x1400069ba
   14000694c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140006950:	outs   dx,BYTE PTR ds:[rsi]
   140006951:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140006953:	je     0x1400069c7
   140006955:	jns    0x140006957
   140006957:	add    cl,cl
   140006959:	add    al,0x52
   14000695b:	je     0x1400069c9
   14000695d:	push   rsi
   14000695e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140006965:	outs   dx,BYTE PTR ds:[rsi]
   140006966:	ja     0x1400069d1
   140006968:	outs   dx,BYTE PTR ds:[rsi]
   140006969:	add    BYTE PTR fs:[rax],al
   14000696c:	movabs al,ds:0x6c646e61686e5505
   140006975:	gs fs rex.RB js 0x1400069dd
   14000697a:	gs jo  0x1400069f1
   14000697d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140006984:	gs jb  0x140006987
   140006987:	add    BYTE PTR [rcx],ch
   140006989:	add    al,BYTE PTR [rdi+0x65]
   14000698c:	je     0x1400069d1
   14000698e:	jne    0x140006a02
   140006990:	jb     0x1400069f7
   140006992:	outs   dx,BYTE PTR ds:[rsi]
   140006993:	je     0x1400069e5
   140006995:	jb     0x140006a06
   140006997:	movsxd esp,DWORD PTR [rbp+0x73]
   14000699a:	jae    0x14000699c
   14000699c:	jle    0x1400069a3
   14000699e:	push   rsp
   14000699f:	gs jb  0x140006a0f
   1400069a2:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400069a9:	outs   dx,DWORD PTR ds:[rsi]
   1400069aa:	movsxd esp,DWORD PTR [rbp+0x73]
   1400069ad:	jae    0x1400069af
   1400069af:	add    ch,dl
   1400069b1:	add    dl,BYTE PTR [rbx+0x65]
   1400069b4:	je     0x1400069fa
   1400069b6:	ins    BYTE PTR es:[rdi],dx
   1400069b7:	addr32 rex.WB je 0x140006a20
   1400069bb:	ins    DWORD PTR es:[rdi],dx
   1400069bc:	push   rsp
   1400069bd:	gs js  0x140006a34
   1400069c0:	push   rdi
   1400069c1:	add    BYTE PTR [rdx+0x1],al
   1400069c4:	rex.RXB
   1400069c5:	gs je  0x140006a0c
   1400069c8:	ins    BYTE PTR es:[rdi],dx
   1400069c9:	addr32 rex.WB je 0x140006a32
   1400069cd:	ins    DWORD PTR es:[rdi],dx
   1400069ce:	push   rsp
   1400069cf:	gs js  0x140006a46
   1400069d2:	push   rdi
   1400069d3:	add    BYTE PTR [rax],dl
   1400069d5:	add    edx,DWORD PTR [rbx+0x65]
   1400069d8:	je     0x140006a31
   1400069da:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   1400069e1:	outs   dx,BYTE PTR ds:[rsi]
   1400069e2:	addr32 push rax
   1400069e4:	je     0x140006a58
   1400069e6:	push   rdi
   1400069e7:	add    BYTE PTR [rbx],dh
   1400069e9:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   1400069ed:	fs push rbx
   1400069ef:	je     0x140006a63
   1400069f1:	imul   ebp,DWORD PTR [rsi+0x67],0x2b40057
   1400069f8:	push   rbx
   1400069f9:	outs   dx,BYTE PTR gs:[rsi]
   1400069fb:	fs rex.R ins BYTE PTR es:[rdi],dx
   1400069fe:	addr32 rex.WB je 0x140006a67
   140006a02:	ins    DWORD PTR es:[rdi],dx
   140006a03:	rex.WRB
   140006a04:	gs jae 0x140006a7a
   140006a07:	(bad)  
   140006a08:	addr32 gs push rdi
   140006a0b:	add    al,ch
   140006a0d:	add    BYTE PTR [rbp+0x6e],al
   140006a10:	imul   r12d,DWORD PTR fs:[rcx+0x6c],0xc700676f
   140006a19:	add    DWORD PTR [rdi+0x65],eax
   140006a1c:	je     0x140006a75
   140006a1e:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140006a25:	outs   dx,BYTE PTR ds:[rsi]
   140006a26:	addr32 push rax
   140006a28:	je     0x140006a9c
   140006a2a:	push   rdi
   140006a2b:	add    BYTE PTR [rbx+0x61694400],dh
   140006a31:	ins    BYTE PTR es:[rdi],dx
   140006a32:	outs   dx,DWORD PTR ds:[rsi]
   140006a33:	rex.X outs dx,DWORD PTR ds:[esi]
   140006a36:	js     0x140006a88
   140006a38:	(bad)  
   140006a39:	jb     0x140006a9c
   140006a3b:	ins    DWORD PTR es:[rdi],dx
   140006a3c:	push   rdi
   140006a3d:	add    BYTE PTR [rbp+0x53],dl
   140006a40:	rex.RB push r10
   140006a42:	xor    esi,DWORD PTR [rdx]
   140006a44:	cs fs ins BYTE PTR es:[rdi],dx
   140006a47:	ins    BYTE PTR es:[rdi],dx
   140006a48:	add    BYTE PTR [rax],al
   140006a4a:	mov    WORD PTR [rax],es
   140006a4c:	rex.XB jb 0x140006ac8
   140006a4f:	jo     0x140006ac5
   140006a51:	rex.RB js 0x140006ac4
   140006a54:	outs   dx,DWORD PTR ds:[rsi]
   140006a55:	jb     0x140006acb
   140006a57:	push   rax
   140006a58:	jne    0x140006abc
   140006a5a:	ins    BYTE PTR es:[rdi],dx
   140006a5b:	imul   esp,DWORD PTR [rbx+0x4b],0x6e497965
   140006a62:	outs   dx,WORD PTR ds:[rsi]
   140006a64:	add    BYTE PTR [rax],al
   140006a66:	push   rsi
   140006a67:	add    BYTE PTR [rbx+0x65],al
   140006a6a:	jb     0x140006ae0
   140006a6c:	rex.WRXB
   140006a6d:	rex.WB
   140006a6e:	rex.R push rsp
   140006a70:	outs   dx,DWORD PTR ds:[rsi]
   140006a71:	rex.B ins BYTE PTR es:[rdi],dx
   140006a73:	addr32 rex.WB
   140006a75:	add    BYTE PTR fs:[rax],al
   140006a78:	pop    rax
   140006a79:	add    BYTE PTR [rbx+0x65],al
   140006a7c:	jb     0x140006af2
   140006a7e:	rex.WRXB jo 0x140006ae6
   140006a81:	outs   dx,BYTE PTR ds:[rsi]
   140006a82:	push   rbx
   140006a83:	je     0x140006af4
   140006a85:	jb     0x140006aec
   140006a87:	add    BYTE PTR [rax+0x0],al
   140006a8a:	rex.XB
   140006a8b:	gs jb  0x140006b02
   140006a8e:	rex.RX jb 0x140006af6
   140006a91:	gs rex.XB
   140006a93:	gs jb  0x140006b0a
   140006a96:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
   140006a9d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006a9f:	outs   dx,BYTE PTR ds:[rsi]
   140006aa0:	je     0x140006b07
   140006aa2:	js     0x140006b18
   140006aa4:	add    BYTE PTR [rax],al
   140006aa6:	adc    al,BYTE PTR [rax]
   140006aa8:	rex.XB
   140006aa9:	gs jb  0x140006b20
   140006aac:	rex.XB ins BYTE PTR es:[rdi],dx
   140006aae:	outs   dx,DWORD PTR ds:[rsi]
   140006aaf:	jae    0x140006b16
   140006ab1:	push   rbx
   140006ab2:	je     0x140006b23
   140006ab4:	jb     0x140006b1b
   140006ab6:	add    BYTE PTR [rax],al
   140006ab8:	sub    al,0x0
   140006aba:	rex.XB
   140006abb:	gs jb  0x140006b32
   140006abe:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140006ac0:	jne    0x140006b2f
   140006ac2:	rex.XB
   140006ac3:	gs jb  0x140006b3a
   140006ac6:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
   140006acd:	jae    0x140006b18
   140006acf:	outs   dx,BYTE PTR ds:[rsi]
   140006ad0:	push   rbx
   140006ad1:	je     0x140006b42
   140006ad3:	jb     0x140006b3a
   140006ad5:	add    BYTE PTR [rsi],dl
   140006ad7:	add    BYTE PTR [rbx+0x65],al
   140006ada:	jb     0x140006b50
   140006adc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006ade:	ins    DWORD PTR es:[rdi],dx
   140006adf:	jo     0x140006b42
   140006ae1:	jb     0x140006b48
   140006ae3:	push   rax
   140006ae4:	jne    0x140006b48
   140006ae6:	ins    BYTE PTR es:[rdi],dx
   140006ae7:	imul   esp,DWORD PTR [rbx+0x4b],0x6e497965
   140006aee:	outs   dx,WORD PTR ds:[rsi]
   140006af0:	add    BYTE PTR [rax],al
   140006af2:	imul   eax,DWORD PTR [rax],0x43
   140006af5:	gs jb  0x140006b6c
   140006af8:	push   rbx
   140006af9:	gs je  0x140006b3f
   140006afc:	gs jb  0x140006b73
   140006aff:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
   140006b06:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006b08:	outs   dx,BYTE PTR ds:[rsi]
   140006b09:	je     0x140006b70
   140006b0b:	js     0x140006b81
   140006b0d:	push   rax
   140006b0e:	jb     0x140006b7f
   140006b10:	jo     0x140006b77
   140006b12:	jb     0x140006b88
   140006b14:	jns    0x140006b16
   140006b16:	sbb    DWORD PTR [rcx],eax
   140006b18:	push   rax
   140006b19:	rex.RX pop rax
   140006b1b:	rex.RB js 0x140006b8e
   140006b1e:	outs   dx,DWORD PTR ds:[rsi]
   140006b1f:	jb     0x140006b95
   140006b21:	rex.XB
   140006b22:	gs jb  0x140006b99
   140006b25:	push   rbx
   140006b26:	je     0x140006b97
   140006b28:	jb     0x140006b8f
   140006b2a:	rex.RB js 0x140006b2d
   140006b2d:	add    BYTE PTR [rbx+0x52],al
   140006b30:	pop    rcx
   140006b31:	push   rax
   140006b32:	push   rsp
   140006b33:	xor    esi,DWORD PTR [rdx]
   140006b35:	cs fs ins BYTE PTR es:[rdi],dx
   140006b38:	ins    BYTE PTR es:[rdi],dx
   140006b39:	add    BYTE PTR [rbx],ch
   140006b3b:	add    BYTE PTR [rbx+0x72],al
   140006b3e:	jns    0x140006bb0
   140006b40:	je     0x140006b97
   140006b42:	rex.WB push r15
   140006b44:	imul   edi,DWORD PTR [rdx+0x45],0x726f7078
   140006b4b:	je     0x140006b4d
   140006b4d:	add    BYTE PTR [rbx+0x52],al
   140006b50:	pop    rcx
   140006b51:	push   rax
   140006b52:	push   rsp
   140006b53:	push   rbp
   140006b54:	rex.WB
   140006b55:	cs fs ins BYTE PTR es:[rdi],dx
   140006b58:	ins    BYTE PTR es:[rdi],dx
   140006b59:	add    BYTE PTR [rdi],cl
   140006b5b:	add    dl,BYTE PTR [rbp+0x75]
   140006b5e:	imul   esp,DWORD PTR [rbx+rax*2+0x72],0x65746165
   140006b66:	add    BYTE PTR [rax],al
   140006b68:	push   rdx
   140006b69:	push   rax
   140006b6a:	rex.XB push r10
   140006b6c:	push   rsp
   140006b6d:	xor    al,0x2e
   140006b6f:	fs ins BYTE PTR es:[rdi],dx
   140006b71:	ins    BYTE PTR es:[rdi],dx
   140006b72:	add    BYTE PTR [rax],al
   140006b74:	test   BYTE PTR [rbp*2+0x70636d65],al
   140006b7b:	jns    0x140006b7d
   140006b7d:	add    BYTE PTR [rax+0x6d656d04],cl
   140006b83:	jae    0x140006bea
   140006b85:	je     0x140006b87
	...

Disassembly of section .rsrc:

0000000140007000 <.rsrc>:
	...
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    al,0x0
   140007010:	add    eax,0x30000000
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rsi],0x0
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	rex.W add BYTE PTR [rax],al
   14000701f:	adc    BYTE PTR [rax],0x0
   140007022:	add    BYTE PTR [rax],al
   140007024:	(bad)  
   140007025:	add    BYTE PTR [rax],al
   140007027:	sbb    BYTE PTR [rax],0x0
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	js     0x14000702e
   14000702e:	add    BYTE PTR [rax+0x0],al
	...
   14000703c:	add    BYTE PTR [rax],al
   14000703e:	add    DWORD PTR [rax],eax
   140007040:	adc    al,BYTE PTR [rdx]
   140007042:	add    BYTE PTR [rax],al
   140007044:	nop
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rax],0x0
	...
   140007056:	add    DWORD PTR [rax],eax
   140007058:	js     0x14000705b
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	test   al,0x0
   14000705e:	add    BYTE PTR [rax+0x0],al
	...
   14000706c:	add    BYTE PTR [rax],al
   14000706e:	add    DWORD PTR [rax],eax
   140007070:	add    DWORD PTR [rax],eax
   140007072:	add    BYTE PTR [rax],al
   140007074:	rol    BYTE PTR [rax],0x0
   140007077:	add    BYTE PTR [rax],0x0
	...
   140007086:	add    DWORD PTR [rax],eax
   140007088:	add    DWORD PTR [rax],eax
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	fadd   DWORD PTR [rax]
   14000708e:	add    BYTE PTR [rax+0x0],al
	...
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    DWORD PTR [rax],eax
   1400070a0:	or     DWORD PTR [rax+rax*1],eax
   1400070a3:	add    al,dh
	...
   1400070b5:	add    BYTE PTR [rcx],al
   1400070b7:	add    BYTE PTR [rcx],cl
   1400070b9:	add    al,0x0
   1400070bb:	add    BYTE PTR [rax],al
   1400070bd:	add    DWORD PTR [rax],eax
	...
   1400070cb:	add    BYTE PTR [rax],al
   1400070cd:	add    BYTE PTR [rcx],al
   1400070cf:	add    BYTE PTR [rcx],cl
   1400070d1:	add    al,0x0
   1400070d3:	add    BYTE PTR [rax],dl
   1400070d5:	add    DWORD PTR [rax],eax
	...
   1400070e3:	add    BYTE PTR [rax],al
   1400070e5:	add    BYTE PTR [rcx],al
   1400070e7:	add    BYTE PTR [rcx],cl
   1400070e9:	add    al,0x0
   1400070eb:	add    BYTE PTR [rax],ah
   1400070ed:	add    DWORD PTR [rax],eax
   1400070ef:	add    al,dh
   1400070f1:	jbe    0x1400070f3
   1400070f3:	add    BYTE PTR [rsi+0x1],bl
	...
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	push   rax
   140007101:	js     0x140007103
   140007103:	add    BYTE PTR [rsi+0x6],dh
   140007109:	add    BYTE PTR [rax],al
   14000710b:	add    BYTE PTR [rax],al
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    BYTE PTR [rax+0x73],bl
   140007112:	add    BYTE PTR [rax],al
   140007114:	cwde   
   140007115:	add    eax,DWORD PTR [rax]
	...
   14000711f:	add    BYTE PTR [rax],dh
   140007121:	jno    0x140007123
   140007123:	add    BYTE PTR [rdx],ah
   140007125:	add    al,BYTE PTR [rax]
	...
   14000712f:	add    BYTE PTR [rdi+rdi*1],bh
   140007132:	js     0x1400071a1
   140007134:	ins    BYTE PTR es:[rdi],dx
   140007135:	and    BYTE PTR [rsi+0x65],dh
   140007138:	jb     0x1400071ad
   14000713a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140007141:	xor    BYTE PTR [rdx],ah
   140007143:	and    BYTE PTR [rbp+0x6e],ah
   140007146:	movsxd ebp,DWORD PTR [rdi+0x64]
   140007149:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140007150:	rex.RX sub eax,0x73202238
   140007156:	je     0x1400071b9
   140007158:	outs   dx,BYTE PTR ds:[rsi]
   140007159:	fs (bad) 
   14000715b:	ins    BYTE PTR es:[rdi],dx
   14000715c:	outs   dx,DWORD PTR ds:[rsi]
   14000715d:	outs   dx,BYTE PTR ds:[rsi]
   14000715e:	gs cmp eax,0x73657922
   140007164:	and    bh,BYTE PTR [rdi]
   140007166:	ds or  eax,0x2d213c0a
   14000716c:	sub    eax,0x706f4320
   140007171:	jns    0x1400071e5
   140007173:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000717a:	sub    DWORD PTR [rax],esp
   14000717c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140007184:	je     0x1400071a6
   140007186:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007188:	jb     0x1400071fa
   14000718a:	outs   dx,DWORD PTR ds:[rsi]
   14000718b:	jb     0x1400071ee
   14000718d:	je     0x1400071f8
   14000718f:	outs   dx,DWORD PTR ds:[rsi]
   140007190:	outs   dx,BYTE PTR ds:[rsi]
   140007191:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dafc4
   140007197:	cmp    al,0x61
   140007199:	jae    0x14000720e
   14000719b:	gs ins DWORD PTR es:[rdi],dx
   14000719d:	(bad)  
   14000719e:	ins    BYTE PTR es:[rdi],dx
   14000719f:	jns    0x1400071c1
   1400071a1:	js     0x140007210
   1400071a3:	ins    BYTE PTR es:[rdi],dx
   1400071a4:	outs   dx,BYTE PTR ds:[rsi]
   1400071a5:	jae    0x1400071e4
   1400071a7:	and    dh,BYTE PTR [rbp+0x72]
   1400071aa:	outs   dx,BYTE PTR ds:[rsi]
   1400071ab:	cmp    dh,BYTE PTR [rbx+0x63]
   1400071ae:	push   0x73616d65
   1400071b3:	sub    eax,0x7263696d
   1400071b8:	outs   dx,DWORD PTR ds:[rsi]
   1400071b9:	jae    0x14000722a
   1400071bb:	data16 je 0x1400071eb
   1400071be:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400071c1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400071c4:	ins    DWORD PTR es:[rdi],dx
   1400071c5:	cs jbe 0x1400071f9
   1400071c8:	and    ah,BYTE PTR [rax]
   1400071ca:	ins    DWORD PTR es:[rdi],dx
   1400071cb:	(bad)  
   1400071cc:	outs   dx,BYTE PTR ds:[rsi]
   1400071cd:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400071d4:	jb     0x140007249
   1400071d6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400071dd:	xor    BYTE PTR [rdx],ah
   1400071df:	ds or  eax,0x73613c0a
   1400071e5:	jae    0x14000724c
   1400071e7:	ins    DWORD PTR es:[rdi],dx
   1400071e8:	(bad)  
   1400071e9:	ins    BYTE PTR es:[rdi],dx
   1400071ea:	jns    0x140007235
   1400071ec:	fs outs dx,BYTE PTR gs:[rsi]
   1400071ef:	je     0x14000725a
   1400071f1:	je     0x14000726c
   1400071f3:	or     eax,0x2020200a
   1400071f8:	and    BYTE PTR [rsi+0x65],dh
   1400071fb:	jb     0x140007270
   1400071fd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140007204:	xor    BYTE PTR [rsi],ch
   140007206:	xor    BYTE PTR [rsi],ch
   140007208:	xor    BYTE PTR [rdx],ah
   14000720a:	or     eax,0x2020200a
   14000720f:	and    BYTE PTR [rax+0x72],dh
   140007212:	outs   dx,DWORD PTR ds:[rsi]
   140007213:	movsxd esp,DWORD PTR [rbp+0x73]
   140007216:	jae    0x140007287
   140007218:	jb     0x14000725b
   14000721a:	jb     0x14000727f
   14000721c:	push   0x63657469
   140007221:	je     0x140007298
   140007223:	jb     0x14000728a
   140007225:	cmp    eax,0x646d6122
   14000722a:	ss xor al,0x22
   14000722d:	or     eax,0x2020200a
   140007232:	and    BYTE PTR [rsi+0x61],ch
   140007235:	ins    DWORD PTR es:[rdi],dx
   140007236:	gs cmp eax,0x6b767022
   14000723c:	xor    dh,BYTE PTR [rax+0x66]
   14000723f:	js     0x14000726f
   140007241:	gs js  0x1400072a9
   140007244:	cs ins DWORD PTR es:[rdi],dx
   140007246:	(bad)  
   140007247:	outs   dx,BYTE PTR ds:[rsi]
   140007248:	imul   esp,DWORD PTR [rsi+0x65],0xd227473
   14000724f:	or     ah,BYTE PTR [rax]
   140007251:	and    BYTE PTR [rax],ah
   140007253:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140007257:	gs cmp eax,0x6e697722
   14000725d:	xor    esi,DWORD PTR [rdx]
   14000725f:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ea16f
   140007265:	or     ah,BYTE PTR [rax]
   140007267:	and    BYTE PTR [rsp+rsi*2],bh
   14000726a:	jb     0x1400072e1
   14000726c:	jae    0x1400072e2
   14000726e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007270:	outs   dx,WORD PTR ds:[rsi]
   140007272:	and    BYTE PTR [rax+0x6d],bh
   140007275:	ins    BYTE PTR es:[rdi],dx
   140007276:	outs   dx,BYTE PTR ds:[rsi]
   140007277:	jae    0x1400072b6
   140007279:	and    dh,BYTE PTR [rbp+0x72]
   14000727c:	outs   dx,BYTE PTR ds:[rsi]
   14000727d:	cmp    dh,BYTE PTR [rbx+0x63]
   140007280:	push   0x73616d65
   140007285:	sub    eax,0x7263696d
   14000728a:	outs   dx,DWORD PTR ds:[rsi]
   14000728b:	jae    0x1400072fc
   14000728d:	data16 je 0x1400072bd
   140007290:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007293:	cmp    ah,BYTE PTR [rcx+0x73]
   140007296:	ins    DWORD PTR es:[rdi],dx
   140007297:	cs jbe 0x1400072cd
   14000729a:	and    bh,BYTE PTR [rsi]
   14000729c:	or     eax,0x2020200a
   1400072a1:	and    BYTE PTR [rbx+rsi*2],bh
   1400072a4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400072a8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400072b0:	and    BYTE PTR [rax],ah
   1400072b2:	and    BYTE PTR [rax],ah
   1400072b4:	cmp    al,0x72
   1400072b6:	gs jno 0x14000732e
   1400072b9:	gs jae 0x140007330
   1400072bc:	gs fs push rax
   1400072bf:	jb     0x14000732a
   1400072c1:	jbe    0x14000732c
   1400072c3:	ins    BYTE PTR es:[rdi],dx
   1400072c4:	gs addr32 gs jae 0x140007307
   1400072c9:	or     eax,0x2020200a
   1400072ce:	and    BYTE PTR [rax],ah
   1400072d0:	and    BYTE PTR [rax],ah
   1400072d2:	and    BYTE PTR [rdx+rsi*2],bh
   1400072d5:	gs jno 0x14000734d
   1400072d8:	gs jae 0x14000734f
   1400072db:	gs fs rex.RB js 0x140007345
   1400072e0:	movsxd esi,DWORD PTR [rbp+0x74]
   1400072e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400072ea:	ins    BYTE PTR es:[rdi],dx
   1400072eb:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400072ef:	gs ins BYTE PTR es:[rdi],dx
   1400072f1:	cmp    eax,0x49736122
   1400072f6:	outs   dx,BYTE PTR ds:[rsi]
   1400072f7:	jbe    0x140007368
   1400072f9:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400072fd:	and    BYTE PTR [rdi],ch
   1400072ff:	ds or  eax,0x2020200a
   140007305:	and    BYTE PTR [rax],ah
   140007307:	and    BYTE PTR [rdi+rbp*1],bh
   14000730a:	jb     0x140007371
   14000730c:	jno    0x140007383
   14000730e:	gs jae 0x140007385
   140007311:	gs fs push rax
   140007314:	jb     0x14000737f
   140007316:	jbe    0x140007381
   140007318:	ins    BYTE PTR es:[rdi],dx
   140007319:	gs addr32 gs jae 0x14000735c
   14000731e:	or     eax,0x2020200a
   140007323:	and    BYTE PTR [rdi+rbp*1],bh
   140007326:	jae    0x14000738d
   140007328:	movsxd esi,DWORD PTR [rbp+0x72]
   14000732b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140007333:	cmp    al,0x2f
   140007335:	je     0x1400073a9
   140007337:	jne    0x1400073ac
   140007339:	je     0x140007384
   14000733b:	outs   dx,BYTE PTR ds:[rsi]
   14000733c:	outs   dx,WORD PTR ds:[rsi]
   14000733e:	ds or  eax,0x3c0a0d0a
   140007344:	(bad)  
   140007345:	(bad)  
   140007346:	jae    0x1400073bb
   140007348:	gs ins DWORD PTR es:[rdi],dx
   14000734a:	(bad)  
   14000734b:	ins    BYTE PTR es:[rdi],dx
   14000734c:	jns    0x14000738c
   14000734e:	or     eax,0xa0d0a
   140007353:	add    BYTE PTR [rax],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rax+0x3403],bl
   14000735d:	add    BYTE PTR [rsi+0x0],dl
   140007360:	push   rbx
   140007361:	add    BYTE PTR [rdi+0x0],bl
   140007364:	push   rsi
   140007365:	add    BYTE PTR [rbp+0x0],al
   140007368:	push   rdx
   140007369:	add    BYTE PTR [rbx+0x0],dl
   14000736c:	rex.WB add BYTE PTR [r15+0x0],cl
   140007370:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140007374:	rex.WB add BYTE PTR [r14+0x0],cl
   140007378:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000737c:	add    BYTE PTR [rax],al
   14000737e:	add    BYTE PTR [rax],al
   140007380:	mov    ebp,0xfeef04
   140007385:	add    BYTE PTR [rcx],al
   140007387:	add    BYTE PTR [rdx],al
   140007389:	add    BYTE PTR [rsi],al
   14000738b:	add    BYTE PTR [rax],al
   14000738d:	rex
   14000738e:	lock and eax,DWORD PTR [rdx]
   140007391:	add    BYTE PTR [rsi],al
   140007393:	add    BYTE PTR [rax],al
   140007395:	rex
   140007396:	lock and edi,DWORD PTR [rdi]
   140007399:	add    BYTE PTR [rax],al
   14000739b:	add    BYTE PTR [rax],al
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    BYTE PTR [rax+rax*1],al
   1400073a2:	add    al,0x0
   1400073a4:	add    DWORD PTR [rax],eax
	...
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	test   BYTE PTR [rdx],0x0
   1400073b7:	add    BYTE PTR [rcx],al
   1400073b9:	add    BYTE PTR [rbx+0x0],dl
   1400073bc:	je     0x1400073be
   1400073be:	jb     0x1400073c0
   1400073c0:	imul   eax,DWORD PTR [rax],0x67006e
   1400073c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400073ca:	ins    BYTE PTR es:[rdi],dx
   1400073cb:	add    BYTE PTR [rbp+0x0],ah
   1400073ce:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400073d2:	data16 add BYTE PTR [rdi+0x0],ch
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	rol    BYTE PTR [rdx],cl
   1400073da:	add    BYTE PTR [rax],al
   1400073dc:	add    DWORD PTR [rax],eax
   1400073de:	xor    BYTE PTR [rax],al
   1400073e0:	xor    al,0x0
   1400073e2:	xor    BYTE PTR [rax],al
   1400073e4:	cmp    DWORD PTR [rax],eax
   1400073e6:	xor    BYTE PTR [rax],al
   1400073e8:	xor    al,0x0
   1400073ea:	rex.X add BYTE PTR [rax],sil
   1400073ed:	add    BYTE PTR [rax],al
   1400073ef:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400073f3:	add    BYTE PTR [rcx],al
   1400073f5:	add    BYTE PTR [rbx+0x0],al
   1400073f8:	outs   dx,DWORD PTR ds:[rsi]
   1400073f9:	add    BYTE PTR [rbp+0x0],ch
   1400073fc:	jo     0x1400073fe
   1400073fe:	(bad)  
   1400073ff:	add    BYTE PTR [rsi+0x0],ch
   140007402:	jns    0x140007404
   140007404:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140007408:	ins    DWORD PTR es:[rdi],dx
   140007409:	add    BYTE PTR [rbp+0x0],ah
   14000740c:	add    BYTE PTR [rax],al
   14000740e:	add    BYTE PTR [rax],al
   140007410:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140007414:	movsxd eax,DWORD PTR [rax]
   140007416:	jb     0x140007418
   140007418:	outs   dx,DWORD PTR ds:[rsi]
   140007419:	add    BYTE PTR [rbx+0x0],dh
   14000741c:	outs   dx,DWORD PTR ds:[rsi]
   14000741d:	add    BYTE PTR [rsi+0x0],ah
   140007420:	je     0x140007422
   140007422:	and    BYTE PTR [rax],al
   140007424:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007428:	jb     0x14000742a
   14000742a:	jo     0x14000742c
   14000742c:	outs   dx,DWORD PTR ds:[rsi]
   14000742d:	add    BYTE PTR [rdx+0x0],dh
   140007430:	(bad)  
   140007431:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007435:	add    BYTE PTR [rdi+0x0],ch
   140007438:	outs   dx,BYTE PTR ds:[rsi]
   140007439:	add    BYTE PTR [rax],al
   14000743b:	add    BYTE PTR [rax+rax*1+0x1e],ah
   14000743f:	add    BYTE PTR [rcx],al
   140007441:	add    BYTE PTR [rsi+0x0],al
   140007444:	imul   eax,DWORD PTR [rax],0x65006c
   14000744a:	add    BYTE PTR [rbp+0x0],r12b
   14000744e:	jae    0x140007450
   140007450:	movsxd eax,DWORD PTR [rax]
   140007452:	jb     0x140007454
   140007454:	imul   eax,DWORD PTR [rax],0x740070
   14000745a:	imul   eax,DWORD PTR [rax],0x6e006f
   140007460:	add    BYTE PTR [rax],al
   140007462:	add    BYTE PTR [rax],al
   140007464:	push   rax
   140007465:	add    BYTE PTR [rsi+0x0],dl
   140007468:	rex.WXB add BYTE PTR [r15],bpl
   14000746b:	add    BYTE PTR [rbx+0x0],dl
   14000746e:	push   rax
   14000746f:	add    BYTE PTR [rbx+0x0],al
   140007472:	and    BYTE PTR [rax],al
   140007474:	je     0x140007476
   140007476:	outs   dx,DWORD PTR ds:[rsi]
   140007477:	add    BYTE PTR [rax],ah
   140007479:	add    BYTE PTR [rax+0x0],dl
   14000747c:	rex.RX add BYTE PTR [rax+0x0],r11b
   140007480:	and    BYTE PTR [rax],al
   140007482:	data16 add BYTE PTR [rcx+0x0],ch
   140007486:	ins    BYTE PTR es:[rdi],dx
   140007487:	add    BYTE PTR [rbp+0x0],ah
   14000748a:	and    BYTE PTR [rax],al
   14000748c:	movsxd eax,DWORD PTR [rax]
   14000748e:	outs   dx,DWORD PTR ds:[rsi]
   14000748f:	add    BYTE PTR [rsi+0x0],ch
   140007492:	jbe    0x140007494
   140007494:	add    BYTE PTR gs:[rdx+0x0],dh
   140007498:	je     0x14000749a
   14000749a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	ins    BYTE PTR es:[rdi],dx
   1400074a1:	add    BYTE PTR [rsi],ah
   1400074a3:	add    BYTE PTR [rcx],al
   1400074a5:	add    BYTE PTR [rsi+0x0],al
   1400074a8:	imul   eax,DWORD PTR [rax],0x65006c
   1400074ae:	push   rsi
   1400074af:	add    BYTE PTR [rbp+0x0],ah
   1400074b2:	jb     0x1400074b4
   1400074b4:	jae    0x1400074b6
   1400074b6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400074bc:	add    BYTE PTR [rax],al
   1400074be:	add    BYTE PTR [rax],al
   1400074c0:	add    BYTE PTR ss:[rsi],ch
   1400074c3:	add    BYTE PTR [rdx],dh
   1400074c5:	add    BYTE PTR [rsi],ch
   1400074c7:	add    BYTE PTR [rcx],bh
   1400074c9:	add    BYTE PTR [rdx],dh
   1400074cb:	add    BYTE PTR [rax],dh
   1400074cd:	add    BYTE PTR [rax],dh
   1400074cf:	add    BYTE PTR [rsi],ch
   1400074d1:	add    BYTE PTR [rcx],dh
   1400074d3:	add    BYTE PTR [rsi],dh
   1400074d5:	add    BYTE PTR [rbx],dh
   1400074d7:	add    BYTE PTR [rax],bh
   1400074d9:	add    BYTE PTR [rax+rax*1],dh
   1400074dc:	and    BYTE PTR [rax],al
   1400074de:	sub    BYTE PTR [rax],al
   1400074e0:	ja     0x1400074e2
   1400074e2:	imul   eax,DWORD PTR [rax],0x38006e
   1400074e8:	pop    rdi
   1400074e9:	add    BYTE PTR [rdx+0x0],dh
   1400074ec:	je     0x1400074ee
   1400074ee:	ins    DWORD PTR es:[rdi],dx
   1400074ef:	add    BYTE PTR [rsi],ch
   1400074f1:	add    BYTE PTR [rcx],dh
   1400074f3:	add    BYTE PTR [rdx],dh
   1400074f5:	add    BYTE PTR [rax],dh
   1400074f7:	add    BYTE PTR [rdi],dh
   1400074f9:	add    BYTE PTR [rdx],dh
   1400074fb:	add    BYTE PTR [rip+0x31002d00],dh        # 0x17100a201
   140007501:	add    BYTE PTR [rdx],dh
   140007503:	add    BYTE PTR [rax+rax*1],dh
   140007506:	(bad)  
   140007507:	add    BYTE PTR [rcx],ch
   140007509:	add    BYTE PTR [rax],al
   14000750b:	add    BYTE PTR [rax],dh
   14000750d:	add    BYTE PTR [rax],cl
   14000750f:	add    BYTE PTR [rcx],al
   140007511:	add    BYTE PTR [rcx+0x0],cl
   140007514:	outs   dx,BYTE PTR ds:[rsi]
   140007515:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007519:	add    BYTE PTR [rdx+0x0],dh
   14000751c:	outs   dx,BYTE PTR ds:[rsi]
   14000751d:	add    BYTE PTR [rcx+0x0],ah
   140007520:	ins    BYTE PTR es:[rdi],dx
   140007521:	add    BYTE PTR [rsi+0x0],cl
   140007524:	(bad)  
   140007525:	add    BYTE PTR [rbp+0x0],ch
   140007528:	add    BYTE PTR gs:[rax],al
   14000752b:	add    BYTE PTR [rax+0x0],dh
   14000752e:	jbe    0x140007530
   140007530:	imul   eax,DWORD PTR [rax],0x32
   140007533:	add    BYTE PTR [rax+0x0],dh
   140007536:	data16 add BYTE PTR [rax+0x0],bh
   14000753a:	add    BYTE PTR [rax],al
   14000753c:	add    BYTE PTR [rax],0x2e
   14000753f:	add    BYTE PTR [rcx],al
   140007541:	add    BYTE PTR [rax+rax*1+0x65],cl
   140007545:	add    BYTE PTR [rdi+0x0],ah
   140007548:	(bad)  
   140007549:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000754d:	add    BYTE PTR [rdi+0x0],ch
   140007550:	jo     0x140007552
   140007552:	jns    0x140007554
   140007554:	jb     0x140007556
   140007556:	imul   eax,DWORD PTR [rax],0x680067
   14000755c:	je     0x14000755e
   14000755e:	add    BYTE PTR [rax],al
   140007560:	test   eax,0x4d002000
   140007565:	add    BYTE PTR [rcx+0x0],ch
   140007568:	movsxd eax,DWORD PTR [rax]
   14000756a:	jb     0x14000756c
   14000756c:	outs   dx,DWORD PTR ds:[rsi]
   14000756d:	add    BYTE PTR [rbx+0x0],dh
   140007570:	outs   dx,DWORD PTR ds:[rsi]
   140007571:	add    BYTE PTR [rsi+0x0],ah
   140007574:	je     0x140007576
   140007576:	and    BYTE PTR [rax],al
   140007578:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000757c:	jb     0x14000757e
   14000757e:	jo     0x140007580
   140007580:	outs   dx,DWORD PTR ds:[rsi]
   140007581:	add    BYTE PTR [rdx+0x0],dh
   140007584:	(bad)  
   140007585:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007589:	add    BYTE PTR [rdi+0x0],ch
   14000758c:	outs   dx,BYTE PTR ds:[rsi]
   14000758d:	add    BYTE PTR [rsi],ch
   14000758f:	add    BYTE PTR [rax],ah
   140007591:	add    BYTE PTR [rcx+0x0],al
   140007594:	ins    BYTE PTR es:[rdi],dx
   140007595:	add    BYTE PTR [rax+rax*1+0x20],ch
   140007599:	add    BYTE PTR [rdx+0x0],dh
   14000759c:	imul   eax,DWORD PTR [rax],0x680067
   1400075a2:	je     0x1400075a4
   1400075a4:	jae    0x1400075a6
   1400075a6:	and    BYTE PTR [rax],al
   1400075a8:	jb     0x1400075aa
   1400075aa:	add    BYTE PTR gs:[rbx+0x0],dh
   1400075ae:	add    BYTE PTR gs:[rdx+0x0],dh
   1400075b2:	jbe    0x1400075b4
   1400075b4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400075b9:	add    BYTE PTR [rax],al
   1400075bb:	add    BYTE PTR [rax+0x0],al
   1400075be:	or     al,0x0
   1400075c0:	add    DWORD PTR [rax],eax
   1400075c2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   1400075c6:	imul   eax,DWORD PTR [rax],0x690067
   1400075cc:	outs   dx,BYTE PTR ds:[rsi]
   1400075cd:	add    BYTE PTR [rcx+0x0],ah
   1400075d0:	ins    BYTE PTR es:[rdi],dx
   1400075d1:	add    BYTE PTR [rsi+0x0],al
   1400075d4:	imul   eax,DWORD PTR [rax],0x65006c
   1400075da:	outs   dx,BYTE PTR ds:[rsi]
   1400075db:	add    BYTE PTR [rcx+0x0],ah
   1400075de:	ins    DWORD PTR es:[rdi],dx
   1400075df:	add    BYTE PTR [rbp+0x0],ah
   1400075e2:	add    BYTE PTR [rax],al
   1400075e4:	jo     0x1400075e6
   1400075e6:	jbe    0x1400075e8
   1400075e8:	imul   eax,DWORD PTR [rax],0x32
   1400075eb:	add    BYTE PTR [rax+0x0],dh
   1400075ee:	data16 add BYTE PTR [rax+0x0],bh
   1400075f2:	add    BYTE PTR cs:[rbp+0x0],ah
   1400075f6:	js     0x1400075f8
   1400075f8:	add    BYTE PTR gs:[rax],al
   1400075fb:	add    BYTE PTR [rdx+0x0],ch
   1400075fe:	and    eax,0x50000100
   140007603:	add    BYTE PTR [rdx+0x0],dh
   140007606:	outs   dx,DWORD PTR ds:[rsi]
   140007607:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000760b:	add    BYTE PTR [rbx+0x0],ah
   14000760e:	je     0x140007610
   140007610:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140007614:	ins    DWORD PTR es:[rdi],dx
   140007615:	add    BYTE PTR [rbp+0x0],ah
   140007618:	add    BYTE PTR [rax],al
   14000761a:	add    BYTE PTR [rax],al
   14000761c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140007620:	movsxd eax,DWORD PTR [rax]
   140007622:	jb     0x140007624
   140007624:	outs   dx,DWORD PTR ds:[rsi]
   140007625:	add    BYTE PTR [rbx+0x0],dh
   140007628:	outs   dx,DWORD PTR ds:[rsi]
   140007629:	add    BYTE PTR [rsi+0x0],ah
   14000762c:	je     0x14000762e
   14000762e:	scas   al,BYTE PTR es:[rdi]
   14000762f:	add    BYTE PTR [rax],ah
   140007631:	add    BYTE PTR [rdi+0x0],dl
   140007634:	imul   eax,DWORD PTR [rax],0x64006e
   14000763a:	outs   dx,DWORD PTR ds:[rsi]
   14000763b:	add    BYTE PTR [rdi+0x0],dh
   14000763e:	jae    0x140007640
   140007640:	scas   al,BYTE PTR es:[rdi]
   140007641:	add    BYTE PTR [rax],ah
   140007643:	add    BYTE PTR [rdi+0x0],cl
   140007646:	jo     0x140007648
   140007648:	add    BYTE PTR gs:[rdx+0x0],dh
   14000764c:	(bad)  
   14000764d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007651:	add    BYTE PTR [rsi+0x0],ch
   140007654:	add    BYTE PTR [eax],ah
   140007657:	add    BYTE PTR [rbx+0x0],dl
   14000765a:	jns    0x14000765c
   14000765c:	jae    0x14000765e
   14000765e:	je     0x140007660
   140007660:	add    BYTE PTR gs:[rbp+0x0],ch
   140007664:	add    BYTE PTR [rax],al
   140007666:	add    BYTE PTR [rax],al
   140007668:	rex.X add BYTE PTR [rdi],cl
   14000766b:	add    BYTE PTR [rcx],al
   14000766d:	add    BYTE PTR [rax+0x0],dl
   140007670:	jb     0x140007672
   140007672:	outs   dx,DWORD PTR ds:[rsi]
   140007673:	add    BYTE PTR [rax+rax*1+0x75],ah
   140007677:	add    BYTE PTR [rbx+0x0],ah
   14000767a:	je     0x14000767c
   14000767c:	push   rsi
   14000767d:	add    BYTE PTR [rbp+0x0],ah
   140007680:	jb     0x140007682
   140007682:	jae    0x140007684
   140007684:	imul   eax,DWORD PTR [rax],0x6e006f
   14000768a:	add    BYTE PTR [rax],al
   14000768c:	add    BYTE PTR ss:[rsi],ch
   14000768f:	add    BYTE PTR [rdx],dh
   140007691:	add    BYTE PTR [rsi],ch
   140007693:	add    BYTE PTR [rcx],bh
   140007695:	add    BYTE PTR [rdx],dh
   140007697:	add    BYTE PTR [rax],dh
   140007699:	add    BYTE PTR [rax],dh
   14000769b:	add    BYTE PTR [rsi],ch
   14000769d:	add    BYTE PTR [rcx],dh
   14000769f:	add    BYTE PTR [rsi],dh
   1400076a1:	add    BYTE PTR [rbx],dh
   1400076a3:	add    BYTE PTR [rax],bh
   1400076a5:	add    BYTE PTR [rax+rax*1],dh
   1400076a8:	add    BYTE PTR [rax],al
   1400076aa:	add    BYTE PTR [rax],al
   1400076ac:	add    BYTE PTR [rax],r8b
   1400076af:	add    BYTE PTR [rcx],al
   1400076b1:	add    BYTE PTR [rsi+0x0],dl
   1400076b4:	(bad)  
   1400076b5:	add    BYTE PTR [rdx+0x0],dh
   1400076b8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400076bc:	ins    BYTE PTR es:[rdi],dx
   1400076bd:	add    BYTE PTR [rbp+0x0],ah
   1400076c0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400076c4:	data16 add BYTE PTR [rdi+0x0],ch
   1400076c8:	add    BYTE PTR [rax],al
   1400076ca:	add    BYTE PTR [rax],al
   1400076cc:	and    al,0x0
   1400076ce:	add    al,0x0
   1400076d0:	add    BYTE PTR [rax],al
   1400076d2:	push   rsp
   1400076d3:	add    BYTE PTR [rdx+0x0],dh
   1400076d6:	(bad)  
   1400076d7:	add    BYTE PTR [rsi+0x0],ch
   1400076da:	jae    0x1400076dc
   1400076dc:	ins    BYTE PTR es:[rdi],dx
   1400076dd:	add    BYTE PTR [rcx+0x0],ah
   1400076e0:	je     0x1400076e2
   1400076e2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400076e8:	add    BYTE PTR [rax],al
   1400076ea:	add    BYTE PTR [rax],al
   1400076ec:	or     DWORD PTR [rax+rsi*4],eax
   1400076ef:	add    al,0xc0
   1400076f1:	add    eax,ecx
   1400076f3:	nop
   1400076f4:	add    BYTE PTR [rax],al
   1400076f6:	add    BYTE PTR [rax],al
   1400076f8:	(bad)  
   1400076f9:	add    BYTE PTR [rdi+0x0],ch
   1400076fc:	(bad)  
   1400076fd:	add    bh,cl
   1400076ff:	add    BYTE PTR [rax+0x0],dh
   140007702:	add    BYTE PTR [rax],al
   140007704:	add    BYTE PTR [rax],al
   140007706:	add    BYTE PTR [r14+0x0],r13b
   14000770a:	je     0x14000770c
   14000770c:	add    BYTE PTR gs:[rdx+0x0],dh
   140007710:	and    BYTE PTR [rax],al
   140007712:	push   rax
   140007713:	add    BYTE PTR [rdx+0x0],dh
   140007716:	imul   eax,DWORD PTR [rax],0x610076
   14000771c:	je     0x14000771e
   14000771e:	add    BYTE PTR gs:[rax],ah
   140007721:	add    BYTE PTR [rbx+0x0],cl
   140007724:	add    BYTE PTR gs:[rcx+0x0],bh
   140007728:	and    BYTE PTR [rax],al
   14000772a:	push   rax
   14000772b:	add    BYTE PTR [rcx+0x0],ah
   14000772e:	jae    0x140007730
   140007730:	jae    0x140007732
   140007732:	ja     0x140007734
   140007734:	outs   dx,DWORD PTR ds:[rsi]
   140007735:	add    BYTE PTR [rdx+0x0],dh
   140007738:	add    BYTE PTR fs:[rax],al
   14000773b:	add    BYTE PTR [rax],cl
   14000773d:	add    BYTE PTR [rbp+0x0],cl
   140007740:	push   rbx
   140007741:	add    BYTE PTR [rax],ah
   140007743:	add    BYTE PTR [rbx+0x0],dl
   140007746:	push   0x6c006500
   14000774b:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000774f:	add    BYTE PTR [rax+rax*1+0x6c],al
   140007753:	add    BYTE PTR [rdi+0x0],ah
   140007756:	add    BYTE PTR [rax],al
   140007758:	add    BYTE PTR [rax],al
   14000775a:	add    dl,BYTE PTR [rax+0x0]
   14000775d:	add    BYTE PTR [rax],al
   14000775f:	add    BYTE PTR [rsi],cl
   140007761:	add    BYTE PTR [rbx],dl
   140007763:	add    BYTE PTR [rdi],ah
   140007765:	add    BYTE PTR [rcx],cl
   140007767:	add    bh,bh
   140007769:	(bad)  
   14000776a:	(bad)  
   14000776b:	inc    DWORD PTR [rdx+0x65004b00]
   140007771:	add    BYTE PTR [rcx+0x0],bh
   140007774:	cmp    al,BYTE PTR [rax]
	...
   14000777e:	add    dl,BYTE PTR [rax+0x0]
   140007781:	add    BYTE PTR [rax],al
   140007783:	add    BYTE PTR [rdi],bh
   140007785:	add    BYTE PTR [rbx],dl
   140007787:	add    BYTE PTR [rax+rax*1+0x9],bh
   14000778b:	add    al,bh
   14000778d:	add    edi,edi
   14000778f:	inc    DWORD PTR [rdx+0x78007800]
   140007795:	add    BYTE PTR [rax+0x0],bh
   140007798:	js     0x14000779a
   14000779a:	js     0x14000779c
   14000779c:	js     0x14000779e
   14000779e:	js     0x1400077a0
   1400077a0:	js     0x1400077a2
   1400077a2:	js     0x1400077a4
   1400077a4:	js     0x1400077a6
   1400077a6:	js     0x1400077a8
   1400077a8:	js     0x1400077aa
   1400077aa:	js     0x1400077ac
   1400077ac:	js     0x1400077ae
   1400077ae:	js     0x1400077b0
   1400077b0:	js     0x1400077b2
   1400077b2:	js     0x1400077b4
   1400077b4:	js     0x1400077b6
   1400077b6:	js     0x1400077b8
   1400077b8:	add    BYTE PTR [rax],al
   1400077ba:	add    BYTE PTR [rax],al
   1400077bc:	add    BYTE PTR [rax],al
   1400077be:	add    dl,BYTE PTR [rax+0x0]
   1400077c1:	add    BYTE PTR [rax],al
   1400077c3:	add    BYTE PTR [rsi],cl
   1400077c5:	add    BYTE PTR [rax+rax*1],ah
   1400077c8:	sub    DWORD PTR [rax],eax
   1400077ca:	or     DWORD PTR [rax],eax
   1400077cc:	(bad)  
   1400077cd:	(bad)  
   1400077ce:	(bad)  
   1400077cf:	inc    DWORD PTR [rdx+0x50002600]
   1400077d5:	add    BYTE PTR [rcx+0x0],ah
   1400077d8:	jae    0x1400077da
   1400077da:	jae    0x1400077dc
   1400077dc:	ja     0x1400077de
   1400077de:	outs   dx,DWORD PTR ds:[rsi]
   1400077df:	add    BYTE PTR [rdx+0x0],dh
   1400077e2:	add    BYTE PTR fs:[rdx],bh
   1400077e5:	add    BYTE PTR [rax],al
   1400077e7:	add    BYTE PTR [rax],al
   1400077e9:	add    BYTE PTR [rax],al
   1400077eb:	add    BYTE PTR [rax+0x508100],ah
   1400077f1:	add    BYTE PTR [rax],al
   1400077f3:	add    BYTE PTR [rdi],bh
   1400077f5:	add    BYTE PTR [rdx],ah
   1400077f7:	add    BYTE PTR [rax+rax*1+0xc],bh
   1400077fb:	add    ch,dh
   1400077fd:	add    edi,edi
   1400077ff:	inc    DWORD PTR [rcx+0x0]
   140007805:	add    BYTE PTR [rax],al
   140007807:	add    BYTE PTR [rcx],al
   140007809:	add    BYTE PTR [rcx],al
   14000780b:	push   rax
   14000780c:	add    BYTE PTR [rax],al
   14000780e:	add    BYTE PTR [rax],al
   140007810:	(bad)  
   140007811:	add    BYTE PTR [rax+rax*1+0x28],bl
   140007815:	add    BYTE PTR [rsi],cl
   140007817:	add    BYTE PTR [rcx],al
   140007819:	add    bh,bh
   14000781b:	inc    DWORD PTR [rax+0x4b004f00]
	...
   140007829:	add    BYTE PTR [rcx],al
   14000782b:	push   rax
   14000782c:	add    BYTE PTR [rax],al
   14000782e:	add    BYTE PTR [rax],al
   140007830:	outs   dx,DWORD PTR ds:[rsi]
   140007831:	add    BYTE PTR [rax+rax*1+0x28],bl
   140007835:	add    BYTE PTR [rsi],cl
   140007837:	add    BYTE PTR [rdx],al
   140007839:	add    bh,bh
   14000783b:	inc    DWORD PTR [rax+0x61004300]
   140007841:	add    BYTE PTR [rsi+0x0],ch
   140007844:	movsxd eax,DWORD PTR [rax]
   140007846:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14000784b:	add    BYTE PTR [rax],al
   14000784d:	add    BYTE PTR [rax],al
   14000784f:	add    BYTE PTR [rdi],ch
   140007851:	add    cl,BYTE PTR [rdx]
   140007853:	add    BYTE PTR [rbp+0x0],dl
   140007856:	jae    0x140007858
   140007858:	(bad)  
   140007859:	add    BYTE PTR [rdi+0x0],ah
   14000785c:	add    BYTE PTR gs:[rdx],bh
   14000785f:	add    BYTE PTR [rdx],cl
   140007861:	add    BYTE PTR [rax],ah
   140007863:	add    BYTE PTR [rax],ah
   140007865:	add    BYTE PTR [rax],ah
   140007867:	add    BYTE PTR [rax],ah
   140007869:	add    BYTE PTR [rax+0x0],dh
   14000786c:	jbe    0x14000786e
   14000786e:	imul   eax,DWORD PTR [rax],0x32
   140007871:	add    BYTE PTR [rax+0x0],dh
   140007874:	data16 add BYTE PTR [rax+0x0],bh
   140007878:	and    BYTE PTR [rax],al
   14000787a:	sub    eax,0x76007000
   14000787f:	add    BYTE PTR [rbx+0x0],ch
   140007882:	and    BYTE PTR [rax],al
   140007884:	cmp    al,0x0
   140007886:	jo     0x140007888
   140007888:	jbe    0x14000788a
   14000788a:	imul   eax,DWORD PTR [rax],0x2d
   14000788d:	add    BYTE PTR [rsi+0x0],ah
   140007890:	imul   eax,DWORD PTR [rax],0x65006c
   140007896:	add    BYTE PTR ds:[rax],ah
   140007899:	add    BYTE PTR [rbx+0x0],bl
   14000789c:	sub    eax,0x69007000
   1400078a1:	add    BYTE PTR [rax],ah
   1400078a3:	add    BYTE PTR [rax+rax*1],bh
   1400078a6:	jo     0x1400078a8
   1400078a8:	jbe    0x1400078aa
   1400078aa:	imul   eax,DWORD PTR [rax],0x2d
   1400078ad:	add    BYTE PTR [rax+0x0],dh
   1400078b0:	jae    0x1400078b2
   1400078b2:	ja     0x1400078b4
   1400078b4:	add    BYTE PTR fs:[rsi],bh
   1400078b7:	add    BYTE PTR [rbp+0x0],bl
   1400078ba:	and    BYTE PTR [rax],al
   1400078bc:	sub    eax,0x70007300
   1400078c1:	add    BYTE PTR [rbx+0x0],ah
   1400078c4:	and    BYTE PTR [rax],al
   1400078c6:	cmp    al,0x0
   1400078c8:	jae    0x1400078ca
   1400078ca:	jo     0x1400078cc
   1400078cc:	movsxd eax,DWORD PTR [rax]
   1400078ce:	sub    eax,0x69006600
   1400078d3:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400078d7:	add    BYTE PTR [rsi],bh
   1400078d9:	add    BYTE PTR [rdx],cl
   1400078db:	add    BYTE PTR [rax],ah
   1400078dd:	add    BYTE PTR [rax],ah
   1400078df:	add    BYTE PTR [rax],ah
   1400078e1:	add    BYTE PTR [rax],ah
   1400078e3:	add    BYTE PTR [rax],ah
   1400078e5:	add    BYTE PTR [rax],ah
   1400078e7:	add    BYTE PTR [rax],ah
   1400078e9:	add    BYTE PTR [rax],ah
   1400078eb:	add    BYTE PTR [rax],ah
   1400078ed:	add    BYTE PTR [rax],ah
   1400078ef:	add    BYTE PTR [rax],ah
   1400078f1:	add    BYTE PTR [rbx+0x0],bl
   1400078f4:	sub    eax,0x66007000
   1400078f9:	add    BYTE PTR [rax+0x0],bh
   1400078fc:	and    BYTE PTR [rax],al
   1400078fe:	cmp    al,0x0
   140007900:	jo     0x140007902
   140007902:	data16 add BYTE PTR [rax+0x0],bh
   140007906:	sub    eax,0x69006600
   14000790b:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000790f:	add    BYTE PTR [rsi],bh
   140007911:	add    BYTE PTR [rax],ah
   140007913:	add    BYTE PTR [rbx+0x0],bl
   140007916:	sub    eax,0x6f007000
   14000791b:	add    BYTE PTR [rax],ah
   14000791d:	add    BYTE PTR [rax+rax*1],bh
   140007920:	jo     0x140007922
   140007922:	data16 add BYTE PTR [rax+0x0],bh
   140007926:	sub    eax,0x73007000
   14000792b:	add    BYTE PTR [rdi+0x0],dh
   14000792e:	add    BYTE PTR fs:[rsi],bh
   140007931:	add    BYTE PTR [rbp+0x0],bl
   140007934:	and    BYTE PTR [rax],al
   140007936:	pop    rbx
   140007937:	add    BYTE PTR [rip+0x5d006600],ch        # 0x19d00df3d
   14000793d:	add    BYTE PTR [rbp+0x0],bl
   140007940:	or     al,BYTE PTR [rax]
   140007942:	or     al,BYTE PTR [rax]
   140007944:	and    BYTE PTR [rax],al
   140007946:	and    BYTE PTR [rax],al
   140007948:	and    BYTE PTR [rax],al
   14000794a:	and    BYTE PTR [rax],al
   14000794c:	and    BYTE PTR [rax],al
   14000794e:	and    BYTE PTR [rax],al
   140007950:	and    BYTE PTR [rax],al
   140007952:	and    BYTE PTR [rax],al
   140007954:	sub    eax,0x76007000
   140007959:	add    BYTE PTR [rbx+0x0],ch
   14000795c:	and    BYTE PTR [rax],al
   14000795e:	cmp    al,0x0
   140007960:	jo     0x140007962
   140007962:	jbe    0x140007964
   140007964:	imul   eax,DWORD PTR [rax],0x2d
   140007967:	add    BYTE PTR [rsi+0x0],ah
   14000796a:	imul   eax,DWORD PTR [rax],0x65006c
   140007970:	add    BYTE PTR ds:[rax],ah
   140007973:	add    BYTE PTR [rax],ah
   140007975:	add    BYTE PTR [rip+0x69002000],ch        # 0x1a900997b
   14000797b:	add    BYTE PTR [rsi+0x0],ch
   14000797e:	jo     0x140007980
   140007980:	jne    0x140007982
   140007982:	je     0x140007984
   140007984:	and    BYTE PTR [rax],al
   140007986:	push   rax
   140007987:	add    BYTE PTR [rsi+0x0],dl
   14000798a:	rex.WXB add BYTE PTR [r8],spl
   14000798d:	add    BYTE PTR [rsi+0x0],ah
   140007990:	imul   eax,DWORD PTR [rax],0x65006c
   140007996:	and    BYTE PTR [rax],al
   140007998:	outs   dx,BYTE PTR ds:[rsi]
   140007999:	add    BYTE PTR [rcx+0x0],ah
   14000799c:	ins    DWORD PTR es:[rdi],dx
   14000799d:	add    BYTE PTR [rbp+0x0],ah
   1400079a0:	add    BYTE PTR cs:[rdx],cl
   1400079a3:	add    BYTE PTR [rax],ah
   1400079a5:	add    BYTE PTR [rax],ah
   1400079a7:	add    BYTE PTR [rax],ah
   1400079a9:	add    BYTE PTR [rax],ah
   1400079ab:	add    BYTE PTR [rax],ah
   1400079ad:	add    BYTE PTR [rax],ah
   1400079af:	add    BYTE PTR [rax],ah
   1400079b1:	add    BYTE PTR [rax],ah
   1400079b3:	add    BYTE PTR [rip+0x70007300],ch        # 0x1b000ecb9
   1400079b9:	add    BYTE PTR [rbx+0x0],ah
   1400079bc:	and    BYTE PTR [rax],al
   1400079be:	cmp    al,0x0
   1400079c0:	jae    0x1400079c2
   1400079c2:	jo     0x1400079c4
   1400079c4:	movsxd eax,DWORD PTR [rax]
   1400079c6:	sub    eax,0x69006600
   1400079cb:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400079cf:	add    BYTE PTR [rsi],bh
   1400079d1:	add    BYTE PTR [rax],ah
   1400079d3:	add    BYTE PTR [rax],ah
   1400079d5:	add    BYTE PTR [rip+0x69002000],ch        # 0x1a90099db
   1400079db:	add    BYTE PTR [rsi+0x0],ch
   1400079de:	jo     0x1400079e0
   1400079e0:	jne    0x1400079e2
   1400079e2:	je     0x1400079e4
   1400079e4:	and    BYTE PTR [rax],al
   1400079e6:	push   rbx
   1400079e7:	add    BYTE PTR [rax+0x0],dl
   1400079ea:	rex.XB add BYTE PTR [r8],spl
   1400079ed:	add    BYTE PTR [rsi+0x0],ah
   1400079f0:	imul   eax,DWORD PTR [rax],0x65006c
   1400079f6:	and    BYTE PTR [rax],al
   1400079f8:	outs   dx,BYTE PTR ds:[rsi]
   1400079f9:	add    BYTE PTR [rcx+0x0],ah
   1400079fc:	ins    DWORD PTR es:[rdi],dx
   1400079fd:	add    BYTE PTR [rbp+0x0],ah
   140007a00:	add    BYTE PTR cs:[rdx],cl
   140007a03:	add    BYTE PTR [rax],ah
   140007a05:	add    BYTE PTR [rax],ah
   140007a07:	add    BYTE PTR [rax],ah
   140007a09:	add    BYTE PTR [rax],ah
   140007a0b:	add    BYTE PTR [rax],ah
   140007a0d:	add    BYTE PTR [rax],ah
   140007a0f:	add    BYTE PTR [rax],ah
   140007a11:	add    BYTE PTR [rax],ah
   140007a13:	add    BYTE PTR [rip+0x66007000],ch        # 0x1a600ea19
   140007a19:	add    BYTE PTR [rax+0x0],bh
   140007a1c:	and    BYTE PTR [rax],al
   140007a1e:	cmp    al,0x0
   140007a20:	jo     0x140007a22
   140007a22:	data16 add BYTE PTR [rax+0x0],bh
   140007a26:	sub    eax,0x69006600
   140007a2b:	add    BYTE PTR [rax+rax*1+0x65],ch
   140007a2f:	add    BYTE PTR [rsi],bh
   140007a31:	add    BYTE PTR [rax],ah
   140007a33:	add    BYTE PTR [rax],ah
   140007a35:	add    BYTE PTR [rip+0x6f002000],ch        # 0x1af009a3b
   140007a3b:	add    BYTE PTR [rbp+0x0],dh
   140007a3e:	je     0x140007a40
   140007a40:	jo     0x140007a42
   140007a42:	jne    0x140007a44
   140007a44:	je     0x140007a46
   140007a46:	and    BYTE PTR [rax],al
   140007a48:	push   rax
   140007a49:	add    BYTE PTR [rsi+0x0],al
   140007a4c:	pop    rax
   140007a4d:	add    BYTE PTR [rax],ah
   140007a4f:	add    BYTE PTR [rsi+0x0],ah
   140007a52:	imul   eax,DWORD PTR [rax],0x65006c
   140007a58:	and    BYTE PTR [rax],al
   140007a5a:	outs   dx,BYTE PTR ds:[rsi]
   140007a5b:	add    BYTE PTR [rcx+0x0],ah
   140007a5e:	ins    DWORD PTR es:[rdi],dx
   140007a5f:	add    BYTE PTR [rbp+0x0],ah
   140007a62:	add    BYTE PTR cs:[rdx],cl
   140007a65:	add    BYTE PTR [rax],ah
   140007a67:	add    BYTE PTR [rax],ah
   140007a69:	add    BYTE PTR [rax],ah
   140007a6b:	add    BYTE PTR [rax],ah
   140007a6d:	add    BYTE PTR [rax],ah
   140007a6f:	add    BYTE PTR [rax],ah
   140007a71:	add    BYTE PTR [rax],ah
   140007a73:	add    BYTE PTR [rax],ah
   140007a75:	add    BYTE PTR [rip+0x69007000],ch        # 0x1a900ea7b
   140007a7b:	add    BYTE PTR [rax],ah
   140007a7d:	add    BYTE PTR [rax+rax*1],bh
   140007a80:	jo     0x140007a82
   140007a82:	jbe    0x140007a84
   140007a84:	imul   eax,DWORD PTR [rax],0x2d
   140007a87:	add    BYTE PTR [rax+0x0],dh
   140007a8a:	jae    0x140007a8c
   140007a8c:	ja     0x140007a8e
   140007a8e:	add    BYTE PTR fs:[rsi],bh
   140007a91:	add    BYTE PTR [rax],ah
   140007a93:	add    BYTE PTR [rax],ah
   140007a95:	add    BYTE PTR [rax],ah
   140007a97:	add    BYTE PTR [rip+0x50002000],ch        # 0x190009a9d
   140007a9d:	add    BYTE PTR [rsi+0x0],dl
   140007aa0:	rex.WXB add BYTE PTR [r8],spl
   140007aa3:	add    BYTE PTR [rax+0x0],dh
   140007aa6:	(bad)  
   140007aa7:	add    BYTE PTR [rbx+0x0],dh
   140007aaa:	jae    0x140007aac
   140007aac:	ja     0x140007aae
   140007aae:	outs   dx,DWORD PTR ds:[rsi]
   140007aaf:	add    BYTE PTR [rdx+0x0],dh
   140007ab2:	add    BYTE PTR fs:[rsi],ch
   140007ab5:	add    BYTE PTR [rdx],cl
   140007ab7:	add    BYTE PTR [rax],ah
   140007ab9:	add    BYTE PTR [rax],ah
   140007abb:	add    BYTE PTR [rax],ah
   140007abd:	add    BYTE PTR [rax],ah
   140007abf:	add    BYTE PTR [rax],ah
   140007ac1:	add    BYTE PTR [rax],ah
   140007ac3:	add    BYTE PTR [rax],ah
   140007ac5:	add    BYTE PTR [rax],ah
   140007ac7:	add    BYTE PTR [rip+0x6f007000],ch        # 0x1af00eacd
   140007acd:	add    BYTE PTR [rax],ah
   140007acf:	add    BYTE PTR [rax+rax*1],bh
   140007ad2:	jo     0x140007ad4
   140007ad4:	data16 add BYTE PTR [rax+0x0],bh
   140007ad8:	sub    eax,0x73007000
   140007add:	add    BYTE PTR [rdi+0x0],dh
   140007ae0:	add    BYTE PTR fs:[rsi],bh
   140007ae3:	add    BYTE PTR [rax],ah
   140007ae5:	add    BYTE PTR [rax],ah
   140007ae7:	add    BYTE PTR [rax],ah
   140007ae9:	add    BYTE PTR [rip+0x50002000],ch        # 0x190009aef
   140007aef:	add    BYTE PTR [rsi+0x0],al
   140007af2:	pop    rax
   140007af3:	add    BYTE PTR [rax],ah
   140007af5:	add    BYTE PTR [rax+0x0],dh
   140007af8:	(bad)  
   140007af9:	add    BYTE PTR [rbx+0x0],dh
   140007afc:	jae    0x140007afe
   140007afe:	ja     0x140007b00
   140007b00:	outs   dx,DWORD PTR ds:[rsi]
   140007b01:	add    BYTE PTR [rdx+0x0],dh
   140007b04:	add    BYTE PTR fs:[rbx],bh
   140007b07:	add    BYTE PTR [rax],ah
   140007b09:	add    BYTE PTR [rbx+0x0],dh
   140007b0c:	(bad)  
   140007b0d:	add    BYTE PTR [rbp+0x0],ch
   140007b10:	add    BYTE PTR gs:[rax],ah
   140007b13:	add    BYTE PTR [rcx+0x0],ah
   140007b16:	jae    0x140007b18
   140007b18:	and    BYTE PTR [rax],al
   140007b1a:	sub    eax,0x69007000
   140007b1f:	add    BYTE PTR [rax],ah
   140007b21:	add    BYTE PTR [rcx+0x0],ch
   140007b24:	data16 add BYTE PTR [rax],ah
   140007b27:	add    BYTE PTR [rsi+0x0],ch
   140007b2a:	outs   dx,DWORD PTR ds:[rsi]
   140007b2b:	add    BYTE PTR [rax+rax*1+0x20],dh
   140007b2f:	add    BYTE PTR [rdi+0x0],ah
   140007b32:	imul   eax,DWORD PTR [rax],0x650076
   140007b38:	outs   dx,BYTE PTR ds:[rsi]
   140007b39:	add    BYTE PTR [rsi],ch
   140007b3b:	add    BYTE PTR [rdx],cl
   140007b3d:	add    BYTE PTR [rax],ah
   140007b3f:	add    BYTE PTR [rax],ah
   140007b41:	add    BYTE PTR [rax],ah
   140007b43:	add    BYTE PTR [rax],ah
   140007b45:	add    BYTE PTR [rax],ah
   140007b47:	add    BYTE PTR [rax],ah
   140007b49:	add    BYTE PTR [rax],ah
   140007b4b:	add    BYTE PTR [rax],ah
   140007b4d:	add    BYTE PTR [rip+0x20006600],ch        # 0x16000e153
   140007b53:	add    BYTE PTR [rax],ah
   140007b55:	add    BYTE PTR [rax],ah
   140007b57:	add    BYTE PTR [rax],ah
   140007b59:	add    BYTE PTR [rax],ah
   140007b5b:	add    BYTE PTR [rax],ah
   140007b5d:	add    BYTE PTR [rax],ah
   140007b5f:	add    BYTE PTR [rax],ah
   140007b61:	add    BYTE PTR [rax],ah
   140007b63:	add    BYTE PTR [rax],ah
   140007b65:	add    BYTE PTR [rax],ah
   140007b67:	add    BYTE PTR [rax],ah
   140007b69:	add    BYTE PTR [rax],ah
   140007b6b:	add    BYTE PTR [rax],ah
   140007b6d:	add    BYTE PTR [rax],ah
   140007b6f:	add    BYTE PTR [rip+0x66002000],ch        # 0x1a6009b75
   140007b75:	add    BYTE PTR [rdi+0x0],ch
   140007b78:	jb     0x140007b7a
   140007b7a:	movsxd eax,DWORD PTR [rax]
   140007b7c:	add    BYTE PTR gs:[rax],ah
   140007b7f:	add    BYTE PTR [rdi+0x0],ch
   140007b82:	jbe    0x140007b84
   140007b84:	add    BYTE PTR gs:[rdx+0x0],dh
   140007b88:	ja     0x140007b8a
   140007b8a:	jb     0x140007b8c
   140007b8c:	imul   eax,DWORD PTR [rax],0x650074
   140007b92:	and    BYTE PTR [rax],al
   140007b94:	add    BYTE PTR gs:[rax+0x0],bh
   140007b98:	imul   eax,DWORD PTR [rax],0x740073
   140007b9e:	imul   eax,DWORD PTR [rax],0x67006e
   140007ba4:	and    BYTE PTR [rax],al
   140007ba6:	push   rax
   140007ba7:	add    BYTE PTR [rsi+0x0],al
   140007baa:	pop    rax
   140007bab:	add    BYTE PTR [rax],ah
   140007bad:	add    BYTE PTR [rsi+0x0],ah
   140007bb0:	imul   eax,DWORD PTR [rax],0x65006c
   140007bb6:	add    BYTE PTR cs:[rdx],cl
   140007bb9:	add    BYTE PTR [rdx],cl
   140007bbb:	add    BYTE PTR [rax],ah
   140007bbd:	add    BYTE PTR [rax],ah
   140007bbf:	add    BYTE PTR [rax],ah
   140007bc1:	add    BYTE PTR [rax],ah
   140007bc3:	add    BYTE PTR [rax],ah
   140007bc5:	add    BYTE PTR [rax],ah
   140007bc7:	add    BYTE PTR [rax],ah
   140007bc9:	add    BYTE PTR [rax],ah
   140007bcb:	add    BYTE PTR [rcx+0x0],ch
   140007bce:	data16 add BYTE PTR [rax],ah
   140007bd1:	add    BYTE PTR [rip+0x66007000],ch        # 0x1a600ebd7
   140007bd7:	add    BYTE PTR [rax+0x0],bh
   140007bda:	and    BYTE PTR [rax],al
   140007bdc:	outs   dx,DWORD PTR ds:[rsi]
   140007bdd:	add    BYTE PTR [rax+0x0],dh
   140007be0:	je     0x140007be2
   140007be2:	imul   eax,DWORD PTR [rax],0x6e006f
   140007be8:	and    BYTE PTR [rax],al
   140007bea:	imul   eax,DWORD PTR [rax],0x200073
   140007bf0:	outs   dx,BYTE PTR ds:[rsi]
   140007bf1:	add    BYTE PTR [rdi+0x0],ch
   140007bf4:	je     0x140007bf6
   140007bf6:	and    BYTE PTR [rax],al
   140007bf8:	add    BYTE PTR [ecx+0x0],ch
   140007bfc:	jbe    0x140007bfe
   140007bfe:	add    BYTE PTR gs:[rsi+0x0],ch
   140007c02:	sub    al,0x0
   140007c04:	and    BYTE PTR [rax],al
   140007c06:	(bad)  
   140007c07:	add    BYTE PTR [rsi+0x0],ch
   140007c0a:	and    BYTE PTR [rax],al
   140007c0c:	add    BYTE PTR gs:[rax+0x0],bh
   140007c10:	jo     0x140007c12
   140007c12:	outs   dx,DWORD PTR ds:[rsi]
   140007c13:	add    BYTE PTR [rdx+0x0],dh
   140007c16:	je     0x140007c18
   140007c18:	and    BYTE PTR [rax],al
   140007c1a:	ja     0x140007c1c
   140007c1c:	imul   eax,DWORD PTR [rax],0x61007a
   140007c22:	jb     0x140007c24
   140007c24:	add    BYTE PTR fs:[rax],ah
   140007c27:	add    BYTE PTR [rdi+0x0],dh
   140007c2a:	imul   eax,DWORD PTR [rax],0x6c006c
   140007c30:	and    BYTE PTR [rax],al
   140007c32:	jo     0x140007c34
   140007c34:	outs   dx,DWORD PTR ds:[rsi]
   140007c35:	add    BYTE PTR [rax+0x0],dh
   140007c38:	and    BYTE PTR [rax],al
   140007c3a:	jne    0x140007c3c
   140007c3c:	jo     0x140007c3e
   140007c3e:	add    BYTE PTR cs:[rax],ah
   140007c41:	add    BYTE PTR [rcx+0x0],ch
   140007c44:	outs   dx,BYTE PTR ds:[rsi]
   140007c45:	add    BYTE PTR [rdx],cl
   140007c47:	add    BYTE PTR [rax],ah
   140007c49:	add    BYTE PTR [rax],ah
   140007c4b:	add    BYTE PTR [rax],ah
   140007c4d:	add    BYTE PTR [rax],ah
   140007c4f:	add    BYTE PTR [rax],ah
   140007c51:	add    BYTE PTR [rax],ah
   140007c53:	add    BYTE PTR [rax],ah
   140007c55:	add    BYTE PTR [rax],ah
   140007c57:	add    BYTE PTR [rax+rax*1+0x68],dh
   140007c5b:	add    BYTE PTR [rcx+0x0],ch
   140007c5e:	jae    0x140007c60
   140007c60:	and    BYTE PTR [rax],al
   140007c62:	movsxd eax,DWORD PTR [rax]
   140007c64:	(bad)  
   140007c65:	add    BYTE PTR [rbx+0x0],dh
   140007c68:	add    BYTE PTR gs:[rax+rax*1],ch
   140007c6c:	and    BYTE PTR [rax],al
   140007c6e:	outs   dx,DWORD PTR ds:[rsi]
   140007c6f:	add    BYTE PTR [rax+0x0],dh
   140007c72:	je     0x140007c74
   140007c74:	imul   eax,DWORD PTR [rax],0x6e006f
   140007c7a:	jae    0x140007c7c
   140007c7c:	and    BYTE PTR [rax],al
   140007c7e:	sub    eax,0x6f007000
   140007c83:	add    BYTE PTR [rax],ah
   140007c85:	add    BYTE PTR [rcx+0x0],ah
   140007c88:	outs   dx,BYTE PTR ds:[rsi]
   140007c89:	add    BYTE PTR [rax+rax*1+0x20],ah
   140007c8d:	add    BYTE PTR [rip+0x20006600],ch        # 0x16000e293
   140007c93:	add    BYTE PTR [rcx+0x0],ah
   140007c96:	jb     0x140007c98
   140007c98:	add    BYTE PTR gs:[rax],ah
   140007c9b:	add    BYTE PTR [rcx+0x0],ch
   140007c9e:	add    BYTE PTR [esi+0x0],ch
   140007ca2:	outs   dx,DWORD PTR ds:[rsi]
   140007ca3:	add    BYTE PTR [rdx+0x0],dh
   140007ca6:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140007cab:	add    BYTE PTR [rdx],cl
   140007cad:	add    BYTE PTR [rdx],cl
   140007caf:	add    BYTE PTR [rdi],dl
   140007cb1:	add    BYTE PTR [rax],ch
   140007cb3:	add    BYTE PTR [rbp+0x0],al
   140007cb6:	jb     0x140007cb8
   140007cb8:	jb     0x140007cba
   140007cba:	outs   dx,DWORD PTR ds:[rsi]
   140007cbb:	add    BYTE PTR [rdx+0x0],dh
   140007cbe:	and    BYTE PTR [rax],al
   140007cc0:	rex.XB add BYTE PTR [r15+0x0],bpl
   140007cc4:	add    BYTE PTR fs:[rbp+0x0],ah
   140007cc8:	and    BYTE PTR [rax],al
   140007cca:	cmp    eax,0x30002000
   140007ccf:	add    BYTE PTR [rax+0x0],bh
   140007cd2:	and    eax,0x38003000
   140007cd7:	add    BYTE PTR [rax+0x0],bh
   140007cda:	sub    DWORD PTR [rax],eax
   140007cdc:	add    BYTE PTR cs:[rdx],cl
   140007cdf:	add    BYTE PTR [rcx],cl
   140007ce1:	add    BYTE PTR [rbp+0x0],al
   140007ce4:	push   rdx
   140007ce5:	add    BYTE PTR [rdx+0x0],dl
   140007ce8:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140007cec:	cmp    al,BYTE PTR [rax]
   140007cee:	and    BYTE PTR [rax],al
   140007cf0:	and    eax,0x16007300
   140007cf5:	add    BYTE PTR [rbp+0x0],al
   140007cf8:	push   rdx
   140007cf9:	add    BYTE PTR [rdx+0x0],dl
   140007cfc:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140007d00:	cmp    al,BYTE PTR [rax]
   140007d02:	and    BYTE PTR [rax],al
   140007d04:	rex.WRXB add BYTE PTR [r13+0x0],r14b
   140007d08:	je     0x140007d0a
   140007d0a:	and    BYTE PTR [rax],al
   140007d0c:	outs   dx,DWORD PTR ds:[rsi]
   140007d0d:	add    BYTE PTR [rsi+0x0],ah
   140007d10:	and    BYTE PTR [rax],al
   140007d12:	ins    DWORD PTR es:[rdi],dx
   140007d13:	add    BYTE PTR [rbp+0x0],ah
   140007d16:	ins    DWORD PTR es:[rdi],dx
   140007d17:	add    BYTE PTR [rdi+0x0],ch
   140007d1a:	jb     0x140007d1c
   140007d1c:	jns    0x140007d1e
   140007d1e:	add    BYTE PTR cs:[rdx],cl
   140007d21:	add    BYTE PTR [rax],bl
   140007d23:	add    BYTE PTR [rbp+0x0],al
   140007d26:	push   rdx
   140007d27:	add    BYTE PTR [rdx+0x0],dl
   140007d2a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140007d2e:	cmp    al,BYTE PTR [rax]
   140007d30:	and    BYTE PTR [rax],al
   140007d32:	rex.X add BYTE PTR [rcx+0x0],spl
   140007d36:	add    BYTE PTR fs:[rax],ah
   140007d39:	add    BYTE PTR [rsi+0x0],ah
   140007d3c:	imul   eax,DWORD PTR [rax],0x65006c
   140007d42:	and    BYTE PTR [rax],al
   140007d44:	data16 add BYTE PTR [rdi+0x0],ch
   140007d48:	jb     0x140007d4a
   140007d4a:	ins    DWORD PTR es:[rdi],dx
   140007d4b:	add    BYTE PTR [rcx+0x0],ah
   140007d4e:	je     0x140007d50
   140007d50:	add    BYTE PTR cs:[rdx],cl
   140007d53:	add    BYTE PTR [rax+rax*1],dh
   140007d56:	add    BYTE PTR [r10+0x0],r10b
   140007d5a:	push   rdx
   140007d5b:	add    BYTE PTR [rdi+0x0],cl
   140007d5e:	push   rdx
   140007d5f:	add    BYTE PTR [rdx],bh
   140007d61:	add    BYTE PTR [rax],ah
   140007d63:	add    BYTE PTR [rbx+0x0],al
   140007d66:	(bad)  
   140007d67:	add    BYTE PTR [rsi+0x0],ch
   140007d6a:	outs   dx,BYTE PTR ds:[rsi]
   140007d6b:	add    BYTE PTR [rdi+0x0],ch
   140007d6e:	je     0x140007d70
   140007d70:	and    BYTE PTR [rax],al
   140007d72:	data16 add BYTE PTR [rcx+0x0],ch
   140007d76:	outs   dx,BYTE PTR ds:[rsi]
   140007d77:	add    BYTE PTR [rax+rax*1+0x20],ah
   140007d7b:	add    BYTE PTR [rbx+0x0],ah
   140007d7e:	add    BYTE PTR gs:[rdx+0x0],dh
   140007d82:	je     0x140007d84
   140007d84:	imul   eax,DWORD PTR [rax],0x690066
   140007d8a:	movsxd eax,DWORD PTR [rax]
   140007d8c:	(bad)  
   140007d8d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007d91:	add    BYTE PTR [rbx+0x0],dh
   140007d94:	and    BYTE PTR [rax],al
   140007d96:	je     0x140007d98
   140007d98:	push   0x74006100
   140007d9d:	add    BYTE PTR [rax],ah
   140007d9f:	add    BYTE PTR [rbp+0x0],ch
   140007da2:	(bad)  
   140007da3:	add    BYTE PTR [rax+rax*1+0x63],dh
   140007da7:	add    BYTE PTR [rax+0x0],ch
   140007daa:	and    BYTE PTR [rax],al
   140007dac:	je     0x140007dae
   140007dae:	push   0x20006500
   140007db3:	add    BYTE PTR [rbx+0x0],ch
   140007db6:	add    BYTE PTR gs:[rcx+0x0],bh
   140007dba:	add    BYTE PTR cs:[rdx],cl
   140007dbd:	add    BYTE PTR [rdi],dl
   140007dbf:	add    BYTE PTR [rbp+0x0],al
   140007dc2:	push   rdx
   140007dc3:	add    BYTE PTR [rdx+0x0],dl
   140007dc6:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140007dca:	cmp    al,BYTE PTR [rax]
   140007dcc:	and    BYTE PTR [rax],al
   140007dce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140007dd2:	ins    BYTE PTR es:[rdi],dx
   140007dd3:	add    BYTE PTR [rbp+0x0],ah
   140007dd6:	and    BYTE PTR [rax],al
   140007dd8:	outs   dx,BYTE PTR ds:[rsi]
   140007dd9:	add    BYTE PTR [rdi+0x0],ch
   140007ddc:	je     0x140007dde
   140007dde:	and    BYTE PTR [rax],al
   140007de0:	data16 add BYTE PTR [rdi+0x0],ch
   140007de4:	jne    0x140007de6
   140007de6:	outs   dx,BYTE PTR ds:[rsi]
   140007de7:	add    BYTE PTR [rax+rax*1+0x2e],ah
   140007deb:	add    BYTE PTR [rdx],cl
   140007ded:	add    BYTE PTR [rax+rax*1],bl
   140007df0:	add    BYTE PTR [r10+0x0],r10b
   140007df4:	push   rdx
   140007df5:	add    BYTE PTR [rdi+0x0],cl
   140007df8:	push   rdx
   140007df9:	add    BYTE PTR [rdx],bh
   140007dfb:	add    BYTE PTR [rax],ah
   140007dfd:	add    BYTE PTR [rdi+0x0],cl
   140007e00:	jo     0x140007e02
   140007e02:	add    BYTE PTR gs:[rdx+0x0],dh
   140007e06:	(bad)  
   140007e07:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007e0b:	add    BYTE PTR [rdi+0x0],ch
   140007e0e:	outs   dx,BYTE PTR ds:[rsi]
   140007e0f:	add    BYTE PTR [rax],ah
   140007e11:	add    BYTE PTR [rbx+0x0],ah
   140007e14:	(bad)  
   140007e15:	add    BYTE PTR [rsi+0x0],ch
   140007e18:	movsxd eax,DWORD PTR [rax]
   140007e1a:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140007e1f:	add    BYTE PTR [rbp+0x0],ah
   140007e22:	add    BYTE PTR fs:[rsi],ch
   140007e25:	add    BYTE PTR [rdx],cl
   140007e27:	add    BYTE PTR [rbx],bl
   140007e29:	add    BYTE PTR [rbp+0x0],al
   140007e2c:	push   rdx
   140007e2d:	add    BYTE PTR [rdx+0x0],dl
   140007e30:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140007e34:	cmp    al,BYTE PTR [rax]
   140007e36:	and    BYTE PTR [rax],al
   140007e38:	push   rax
   140007e39:	add    BYTE PTR [rcx+0x0],ah
   140007e3c:	jae    0x140007e3e
   140007e3e:	jae    0x140007e40
   140007e40:	ja     0x140007e42
   140007e42:	outs   dx,DWORD PTR ds:[rsi]
   140007e43:	add    BYTE PTR [rdx+0x0],dh
   140007e46:	add    BYTE PTR fs:[rax],ah
   140007e49:	add    BYTE PTR [rcx+0x0],ch
   140007e4c:	outs   dx,BYTE PTR ds:[rsi]
   140007e4d:	add    BYTE PTR [rbx+0x0],ah
   140007e50:	outs   dx,DWORD PTR ds:[rsi]
   140007e51:	add    BYTE PTR [rdx+0x0],dh
   140007e54:	jb     0x140007e56
   140007e56:	add    BYTE PTR gs:[rbx+0x0],ah
   140007e5a:	je     0x140007e5c
   140007e5c:	add    BYTE PTR cs:[rdx],cl
   140007e5f:	add    BYTE PTR [rcx],dh
   140007e61:	add    BYTE PTR [rbp+0x0],al
   140007e64:	push   rdx
   140007e65:	add    BYTE PTR [rdx+0x0],dl
   140007e68:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140007e6c:	cmp    al,BYTE PTR [rax]
   140007e6e:	and    BYTE PTR [rax],al
   140007e70:	push   rax
   140007e71:	add    BYTE PTR [rcx+0x0],ah
   140007e74:	jae    0x140007e76
   140007e76:	jae    0x140007e78
   140007e78:	ja     0x140007e7a
   140007e7a:	outs   dx,DWORD PTR ds:[rsi]
   140007e7b:	add    BYTE PTR [rdx+0x0],dh
   140007e7e:	add    BYTE PTR fs:[rax],ah
   140007e81:	add    BYTE PTR [rcx+0x0],ch
   140007e84:	outs   dx,BYTE PTR ds:[rsi]
   140007e85:	add    BYTE PTR [rbx+0x0],ah
   140007e88:	outs   dx,DWORD PTR ds:[rsi]
   140007e89:	add    BYTE PTR [rdx+0x0],dh
   140007e8c:	jb     0x140007e8e
   140007e8e:	add    BYTE PTR gs:[rbx+0x0],ah
   140007e92:	je     0x140007e94
   140007e94:	and    BYTE PTR [rax],al
   140007e96:	outs   dx,DWORD PTR ds:[rsi]
   140007e97:	add    BYTE PTR [rdx+0x0],dh
   140007e9a:	and    BYTE PTR [rax],al
   140007e9c:	push   rax
   140007e9d:	add    BYTE PTR [rsi+0x0],dl
   140007ea0:	rex.WXB add BYTE PTR [r8],spl
   140007ea3:	add    BYTE PTR [rsi+0x0],ah
   140007ea6:	imul   eax,DWORD PTR [rax],0x65006c
   140007eac:	and    BYTE PTR [rax],al
   140007eae:	movsxd eax,DWORD PTR [rax]
   140007eb0:	outs   dx,DWORD PTR ds:[rsi]
   140007eb1:	add    BYTE PTR [rdx+0x0],dh
   140007eb4:	jb     0x140007eb6
   140007eb6:	jne    0x140007eb8
   140007eb8:	jo     0x140007eba
   140007eba:	je     0x140007ebc
   140007ebc:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140007ec1:	add    BYTE PTR [rdx],cl
   140007ec3:	add    BYTE PTR [rbx],bl
   140007ec5:	add    BYTE PTR [rbp+0x0],al
   140007ec8:	push   rdx
   140007ec9:	add    BYTE PTR [rdx+0x0],dl
   140007ecc:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140007ed0:	cmp    al,BYTE PTR [rax]
   140007ed2:	and    BYTE PTR [rax],al
   140007ed4:	rex.WRXB add BYTE PTR [r13+0x0],r14b
   140007ed8:	je     0x140007eda
   140007eda:	jo     0x140007edc
   140007edc:	jne    0x140007ede
   140007ede:	je     0x140007ee0
   140007ee0:	and    BYTE PTR [rax],al
   140007ee2:	data16 add BYTE PTR [rcx+0x0],ch
   140007ee6:	ins    BYTE PTR es:[rdi],dx
   140007ee7:	add    BYTE PTR [rbp+0x0],ah
   140007eea:	and    BYTE PTR [rax],al
   140007eec:	add    BYTE PTR gs:[rax+0x0],bh
   140007ef0:	imul   eax,DWORD PTR [rax],0x740073
   140007ef6:	jae    0x140007ef8
   140007ef8:	add    BYTE PTR cs:[rdx],cl
	...

Disassembly of section .reloc:

0000000140008000 <.reloc>:
   140008000:	add    BYTE PTR [rax],dl
   140008002:	add    BYTE PTR [rax],al
   140008004:	adc    al,0x0
   140008006:	add    BYTE PTR [rax],al
   140008008:	or     BYTE PTR [rax-0x5fd75fe0],ah
   14000800e:	(bad)  
   14000800f:	movabs al,ds:0xa198a068
	...
